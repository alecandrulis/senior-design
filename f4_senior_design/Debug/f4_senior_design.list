
f4_senior_design.elf:     file format elf32-littlearm

Sections:
Idx Name          Size      VMA       LMA       File off  Algn
  0 .isr_vector   000001c4  08000000  08000000  00001000  2**0
                  CONTENTS, ALLOC, LOAD, READONLY, DATA
  1 .text         00021698  080001d0  080001d0  000011d0  2**4
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  2 .rodata       000023ac  08021868  08021868  00022868  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, DATA
  3 FontFlashSection 0000372c  08023c14  08023c14  00024c14  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, DATA
  4 FontSearchFlashSection 0000001c  08027340  08027340  00028340  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, DATA
  5 ExtFlashSection 0003b880  0802735c  0802735c  0002835c  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, DATA
  6 TextFlashSection 00000028  08062bdc  08062bdc  00063bdc  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, DATA
  7 .ARM.extab    00000000  08062c04  08062c04  00064320  2**0
                  CONTENTS
  8 .ARM          00000008  08062c04  08062c04  00063c04  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, DATA
  9 .preinit_array 00000000  08062c0c  08062c0c  00064320  2**0
                  CONTENTS, ALLOC, LOAD, DATA
 10 .init_array   00000018  08062c0c  08062c0c  00063c0c  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, DATA
 11 .fini_array   0000000c  08062c24  08062c24  00063c24  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, DATA
 12 .data         00000104  20000000  08062c30  00064000  2**2
                  CONTENTS, ALLOC, LOAD, DATA
 13 TouchGFX_ScratchbufferA 00000100  20000120  08062d34  00064120  2**5
                  CONTENTS, ALLOC, LOAD, DATA
 14 TouchGFX_ScratchbufferB 00000100  20000220  08062e34  00064220  2**5
                  CONTENTS, ALLOC, LOAD, DATA
 15 .bss          00003674  20000320  08062f34  00064320  2**2
                  ALLOC
 16 ._user_heap_stack 00000604  20003994  08062f34  00064994  2**0
                  ALLOC
 17 .ARM.attributes 00000030  00000000  00000000  00064320  2**0
                  CONTENTS, READONLY
 18 .debug_info   0006db04  00000000  00000000  00064350  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 19 .debug_abbrev 0000d8c8  00000000  00000000  000d1e54  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 20 .debug_aranges 000029a0  00000000  00000000  000df720  2**3
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 21 .debug_rnglists 00001eb2  00000000  00000000  000e20c0  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 22 .debug_macro  0002c933  00000000  00000000  000e3f72  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 23 .debug_line   00031396  00000000  00000000  001108a5  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 24 .debug_str    000fbab4  00000000  00000000  00141c3b  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 25 .comment      000000c2  00000000  00000000  0023d6ef  2**0
                  CONTENTS, READONLY
 26 .debug_frame  0000b724  00000000  00000000  0023d7b4  2**2
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 27 .debug_line_str 0000006c  00000000  00000000  00248ed8  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS

Disassembly of section .text:

080001d0 <__do_global_dtors_aux>:
 80001d0:	b510      	push	{r4, lr}
 80001d2:	4c05      	ldr	r4, [pc, #20]	@ (80001e8 <__do_global_dtors_aux+0x18>)
 80001d4:	7823      	ldrb	r3, [r4, #0]
 80001d6:	b933      	cbnz	r3, 80001e6 <__do_global_dtors_aux+0x16>
 80001d8:	4b04      	ldr	r3, [pc, #16]	@ (80001ec <__do_global_dtors_aux+0x1c>)
 80001da:	b113      	cbz	r3, 80001e2 <__do_global_dtors_aux+0x12>
 80001dc:	4804      	ldr	r0, [pc, #16]	@ (80001f0 <__do_global_dtors_aux+0x20>)
 80001de:	f3af 8000 	nop.w
 80001e2:	2301      	movs	r3, #1
 80001e4:	7023      	strb	r3, [r4, #0]
 80001e6:	bd10      	pop	{r4, pc}
 80001e8:	20000320 	.word	0x20000320
 80001ec:	00000000 	.word	0x00000000
 80001f0:	08021850 	.word	0x08021850

080001f4 <frame_dummy>:
 80001f4:	b508      	push	{r3, lr}
 80001f6:	4b03      	ldr	r3, [pc, #12]	@ (8000204 <frame_dummy+0x10>)
 80001f8:	b11b      	cbz	r3, 8000202 <frame_dummy+0xe>
 80001fa:	4903      	ldr	r1, [pc, #12]	@ (8000208 <frame_dummy+0x14>)
 80001fc:	4803      	ldr	r0, [pc, #12]	@ (800020c <frame_dummy+0x18>)
 80001fe:	f3af 8000 	nop.w
 8000202:	bd08      	pop	{r3, pc}
 8000204:	00000000 	.word	0x00000000
 8000208:	20000324 	.word	0x20000324
 800020c:	08021850 	.word	0x08021850

08000210 <memchr>:
 8000210:	f001 01ff 	and.w	r1, r1, #255	@ 0xff
 8000214:	2a10      	cmp	r2, #16
 8000216:	db2b      	blt.n	8000270 <memchr+0x60>
 8000218:	f010 0f07 	tst.w	r0, #7
 800021c:	d008      	beq.n	8000230 <memchr+0x20>
 800021e:	f810 3b01 	ldrb.w	r3, [r0], #1
 8000222:	3a01      	subs	r2, #1
 8000224:	428b      	cmp	r3, r1
 8000226:	d02d      	beq.n	8000284 <memchr+0x74>
 8000228:	f010 0f07 	tst.w	r0, #7
 800022c:	b342      	cbz	r2, 8000280 <memchr+0x70>
 800022e:	d1f6      	bne.n	800021e <memchr+0xe>
 8000230:	b4f0      	push	{r4, r5, r6, r7}
 8000232:	ea41 2101 	orr.w	r1, r1, r1, lsl #8
 8000236:	ea41 4101 	orr.w	r1, r1, r1, lsl #16
 800023a:	f022 0407 	bic.w	r4, r2, #7
 800023e:	f07f 0700 	mvns.w	r7, #0
 8000242:	2300      	movs	r3, #0
 8000244:	e8f0 5602 	ldrd	r5, r6, [r0], #8
 8000248:	3c08      	subs	r4, #8
 800024a:	ea85 0501 	eor.w	r5, r5, r1
 800024e:	ea86 0601 	eor.w	r6, r6, r1
 8000252:	fa85 f547 	uadd8	r5, r5, r7
 8000256:	faa3 f587 	sel	r5, r3, r7
 800025a:	fa86 f647 	uadd8	r6, r6, r7
 800025e:	faa5 f687 	sel	r6, r5, r7
 8000262:	b98e      	cbnz	r6, 8000288 <memchr+0x78>
 8000264:	d1ee      	bne.n	8000244 <memchr+0x34>
 8000266:	bcf0      	pop	{r4, r5, r6, r7}
 8000268:	f001 01ff 	and.w	r1, r1, #255	@ 0xff
 800026c:	f002 0207 	and.w	r2, r2, #7
 8000270:	b132      	cbz	r2, 8000280 <memchr+0x70>
 8000272:	f810 3b01 	ldrb.w	r3, [r0], #1
 8000276:	3a01      	subs	r2, #1
 8000278:	ea83 0301 	eor.w	r3, r3, r1
 800027c:	b113      	cbz	r3, 8000284 <memchr+0x74>
 800027e:	d1f8      	bne.n	8000272 <memchr+0x62>
 8000280:	2000      	movs	r0, #0
 8000282:	4770      	bx	lr
 8000284:	3801      	subs	r0, #1
 8000286:	4770      	bx	lr
 8000288:	2d00      	cmp	r5, #0
 800028a:	bf06      	itte	eq
 800028c:	4635      	moveq	r5, r6
 800028e:	3803      	subeq	r0, #3
 8000290:	3807      	subne	r0, #7
 8000292:	f015 0f01 	tst.w	r5, #1
 8000296:	d107      	bne.n	80002a8 <memchr+0x98>
 8000298:	3001      	adds	r0, #1
 800029a:	f415 7f80 	tst.w	r5, #256	@ 0x100
 800029e:	bf02      	ittt	eq
 80002a0:	3001      	addeq	r0, #1
 80002a2:	f415 3fc0 	tsteq.w	r5, #98304	@ 0x18000
 80002a6:	3001      	addeq	r0, #1
 80002a8:	bcf0      	pop	{r4, r5, r6, r7}
 80002aa:	3801      	subs	r0, #1
 80002ac:	4770      	bx	lr
 80002ae:	bf00      	nop

080002b0 <__aeabi_uldivmod>:
 80002b0:	b953      	cbnz	r3, 80002c8 <__aeabi_uldivmod+0x18>
 80002b2:	b94a      	cbnz	r2, 80002c8 <__aeabi_uldivmod+0x18>
 80002b4:	2900      	cmp	r1, #0
 80002b6:	bf08      	it	eq
 80002b8:	2800      	cmpeq	r0, #0
 80002ba:	bf1c      	itt	ne
 80002bc:	f04f 31ff 	movne.w	r1, #4294967295
 80002c0:	f04f 30ff 	movne.w	r0, #4294967295
 80002c4:	f000 b96a 	b.w	800059c <__aeabi_idiv0>
 80002c8:	f1ad 0c08 	sub.w	ip, sp, #8
 80002cc:	e96d ce04 	strd	ip, lr, [sp, #-16]!
 80002d0:	f000 f806 	bl	80002e0 <__udivmoddi4>
 80002d4:	f8dd e004 	ldr.w	lr, [sp, #4]
 80002d8:	e9dd 2302 	ldrd	r2, r3, [sp, #8]
 80002dc:	b004      	add	sp, #16
 80002de:	4770      	bx	lr

080002e0 <__udivmoddi4>:
 80002e0:	e92d 47f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
 80002e4:	9d08      	ldr	r5, [sp, #32]
 80002e6:	460c      	mov	r4, r1
 80002e8:	2b00      	cmp	r3, #0
 80002ea:	d14e      	bne.n	800038a <__udivmoddi4+0xaa>
 80002ec:	4694      	mov	ip, r2
 80002ee:	458c      	cmp	ip, r1
 80002f0:	4686      	mov	lr, r0
 80002f2:	fab2 f282 	clz	r2, r2
 80002f6:	d962      	bls.n	80003be <__udivmoddi4+0xde>
 80002f8:	b14a      	cbz	r2, 800030e <__udivmoddi4+0x2e>
 80002fa:	f1c2 0320 	rsb	r3, r2, #32
 80002fe:	4091      	lsls	r1, r2
 8000300:	fa20 f303 	lsr.w	r3, r0, r3
 8000304:	fa0c fc02 	lsl.w	ip, ip, r2
 8000308:	4319      	orrs	r1, r3
 800030a:	fa00 fe02 	lsl.w	lr, r0, r2
 800030e:	ea4f 471c 	mov.w	r7, ip, lsr #16
 8000312:	fa1f f68c 	uxth.w	r6, ip
 8000316:	fbb1 f4f7 	udiv	r4, r1, r7
 800031a:	ea4f 431e 	mov.w	r3, lr, lsr #16
 800031e:	fb07 1114 	mls	r1, r7, r4, r1
 8000322:	ea43 4301 	orr.w	r3, r3, r1, lsl #16
 8000326:	fb04 f106 	mul.w	r1, r4, r6
 800032a:	4299      	cmp	r1, r3
 800032c:	d90a      	bls.n	8000344 <__udivmoddi4+0x64>
 800032e:	eb1c 0303 	adds.w	r3, ip, r3
 8000332:	f104 30ff 	add.w	r0, r4, #4294967295
 8000336:	f080 8112 	bcs.w	800055e <__udivmoddi4+0x27e>
 800033a:	4299      	cmp	r1, r3
 800033c:	f240 810f 	bls.w	800055e <__udivmoddi4+0x27e>
 8000340:	3c02      	subs	r4, #2
 8000342:	4463      	add	r3, ip
 8000344:	1a59      	subs	r1, r3, r1
 8000346:	fa1f f38e 	uxth.w	r3, lr
 800034a:	fbb1 f0f7 	udiv	r0, r1, r7
 800034e:	fb07 1110 	mls	r1, r7, r0, r1
 8000352:	ea43 4301 	orr.w	r3, r3, r1, lsl #16
 8000356:	fb00 f606 	mul.w	r6, r0, r6
 800035a:	429e      	cmp	r6, r3
 800035c:	d90a      	bls.n	8000374 <__udivmoddi4+0x94>
 800035e:	eb1c 0303 	adds.w	r3, ip, r3
 8000362:	f100 31ff 	add.w	r1, r0, #4294967295
 8000366:	f080 80fc 	bcs.w	8000562 <__udivmoddi4+0x282>
 800036a:	429e      	cmp	r6, r3
 800036c:	f240 80f9 	bls.w	8000562 <__udivmoddi4+0x282>
 8000370:	4463      	add	r3, ip
 8000372:	3802      	subs	r0, #2
 8000374:	1b9b      	subs	r3, r3, r6
 8000376:	ea40 4004 	orr.w	r0, r0, r4, lsl #16
 800037a:	2100      	movs	r1, #0
 800037c:	b11d      	cbz	r5, 8000386 <__udivmoddi4+0xa6>
 800037e:	40d3      	lsrs	r3, r2
 8000380:	2200      	movs	r2, #0
 8000382:	e9c5 3200 	strd	r3, r2, [r5]
 8000386:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
 800038a:	428b      	cmp	r3, r1
 800038c:	d905      	bls.n	800039a <__udivmoddi4+0xba>
 800038e:	b10d      	cbz	r5, 8000394 <__udivmoddi4+0xb4>
 8000390:	e9c5 0100 	strd	r0, r1, [r5]
 8000394:	2100      	movs	r1, #0
 8000396:	4608      	mov	r0, r1
 8000398:	e7f5      	b.n	8000386 <__udivmoddi4+0xa6>
 800039a:	fab3 f183 	clz	r1, r3
 800039e:	2900      	cmp	r1, #0
 80003a0:	d146      	bne.n	8000430 <__udivmoddi4+0x150>
 80003a2:	42a3      	cmp	r3, r4
 80003a4:	d302      	bcc.n	80003ac <__udivmoddi4+0xcc>
 80003a6:	4290      	cmp	r0, r2
 80003a8:	f0c0 80f0 	bcc.w	800058c <__udivmoddi4+0x2ac>
 80003ac:	1a86      	subs	r6, r0, r2
 80003ae:	eb64 0303 	sbc.w	r3, r4, r3
 80003b2:	2001      	movs	r0, #1
 80003b4:	2d00      	cmp	r5, #0
 80003b6:	d0e6      	beq.n	8000386 <__udivmoddi4+0xa6>
 80003b8:	e9c5 6300 	strd	r6, r3, [r5]
 80003bc:	e7e3      	b.n	8000386 <__udivmoddi4+0xa6>
 80003be:	2a00      	cmp	r2, #0
 80003c0:	f040 8090 	bne.w	80004e4 <__udivmoddi4+0x204>
 80003c4:	eba1 040c 	sub.w	r4, r1, ip
 80003c8:	ea4f 481c 	mov.w	r8, ip, lsr #16
 80003cc:	fa1f f78c 	uxth.w	r7, ip
 80003d0:	2101      	movs	r1, #1
 80003d2:	fbb4 f6f8 	udiv	r6, r4, r8
 80003d6:	ea4f 431e 	mov.w	r3, lr, lsr #16
 80003da:	fb08 4416 	mls	r4, r8, r6, r4
 80003de:	ea43 4304 	orr.w	r3, r3, r4, lsl #16
 80003e2:	fb07 f006 	mul.w	r0, r7, r6
 80003e6:	4298      	cmp	r0, r3
 80003e8:	d908      	bls.n	80003fc <__udivmoddi4+0x11c>
 80003ea:	eb1c 0303 	adds.w	r3, ip, r3
 80003ee:	f106 34ff 	add.w	r4, r6, #4294967295
 80003f2:	d202      	bcs.n	80003fa <__udivmoddi4+0x11a>
 80003f4:	4298      	cmp	r0, r3
 80003f6:	f200 80cd 	bhi.w	8000594 <__udivmoddi4+0x2b4>
 80003fa:	4626      	mov	r6, r4
 80003fc:	1a1c      	subs	r4, r3, r0
 80003fe:	fa1f f38e 	uxth.w	r3, lr
 8000402:	fbb4 f0f8 	udiv	r0, r4, r8
 8000406:	fb08 4410 	mls	r4, r8, r0, r4
 800040a:	ea43 4304 	orr.w	r3, r3, r4, lsl #16
 800040e:	fb00 f707 	mul.w	r7, r0, r7
 8000412:	429f      	cmp	r7, r3
 8000414:	d908      	bls.n	8000428 <__udivmoddi4+0x148>
 8000416:	eb1c 0303 	adds.w	r3, ip, r3
 800041a:	f100 34ff 	add.w	r4, r0, #4294967295
 800041e:	d202      	bcs.n	8000426 <__udivmoddi4+0x146>
 8000420:	429f      	cmp	r7, r3
 8000422:	f200 80b0 	bhi.w	8000586 <__udivmoddi4+0x2a6>
 8000426:	4620      	mov	r0, r4
 8000428:	1bdb      	subs	r3, r3, r7
 800042a:	ea40 4006 	orr.w	r0, r0, r6, lsl #16
 800042e:	e7a5      	b.n	800037c <__udivmoddi4+0x9c>
 8000430:	f1c1 0620 	rsb	r6, r1, #32
 8000434:	408b      	lsls	r3, r1
 8000436:	fa22 f706 	lsr.w	r7, r2, r6
 800043a:	431f      	orrs	r7, r3
 800043c:	fa20 fc06 	lsr.w	ip, r0, r6
 8000440:	fa04 f301 	lsl.w	r3, r4, r1
 8000444:	ea43 030c 	orr.w	r3, r3, ip
 8000448:	40f4      	lsrs	r4, r6
 800044a:	fa00 f801 	lsl.w	r8, r0, r1
 800044e:	0c38      	lsrs	r0, r7, #16
 8000450:	ea4f 4913 	mov.w	r9, r3, lsr #16
 8000454:	fbb4 fef0 	udiv	lr, r4, r0
 8000458:	fa1f fc87 	uxth.w	ip, r7
 800045c:	fb00 441e 	mls	r4, r0, lr, r4
 8000460:	ea49 4404 	orr.w	r4, r9, r4, lsl #16
 8000464:	fb0e f90c 	mul.w	r9, lr, ip
 8000468:	45a1      	cmp	r9, r4
 800046a:	fa02 f201 	lsl.w	r2, r2, r1
 800046e:	d90a      	bls.n	8000486 <__udivmoddi4+0x1a6>
 8000470:	193c      	adds	r4, r7, r4
 8000472:	f10e 3aff 	add.w	sl, lr, #4294967295
 8000476:	f080 8084 	bcs.w	8000582 <__udivmoddi4+0x2a2>
 800047a:	45a1      	cmp	r9, r4
 800047c:	f240 8081 	bls.w	8000582 <__udivmoddi4+0x2a2>
 8000480:	f1ae 0e02 	sub.w	lr, lr, #2
 8000484:	443c      	add	r4, r7
 8000486:	eba4 0409 	sub.w	r4, r4, r9
 800048a:	fa1f f983 	uxth.w	r9, r3
 800048e:	fbb4 f3f0 	udiv	r3, r4, r0
 8000492:	fb00 4413 	mls	r4, r0, r3, r4
 8000496:	ea49 4404 	orr.w	r4, r9, r4, lsl #16
 800049a:	fb03 fc0c 	mul.w	ip, r3, ip
 800049e:	45a4      	cmp	ip, r4
 80004a0:	d907      	bls.n	80004b2 <__udivmoddi4+0x1d2>
 80004a2:	193c      	adds	r4, r7, r4
 80004a4:	f103 30ff 	add.w	r0, r3, #4294967295
 80004a8:	d267      	bcs.n	800057a <__udivmoddi4+0x29a>
 80004aa:	45a4      	cmp	ip, r4
 80004ac:	d965      	bls.n	800057a <__udivmoddi4+0x29a>
 80004ae:	3b02      	subs	r3, #2
 80004b0:	443c      	add	r4, r7
 80004b2:	ea43 400e 	orr.w	r0, r3, lr, lsl #16
 80004b6:	fba0 9302 	umull	r9, r3, r0, r2
 80004ba:	eba4 040c 	sub.w	r4, r4, ip
 80004be:	429c      	cmp	r4, r3
 80004c0:	46ce      	mov	lr, r9
 80004c2:	469c      	mov	ip, r3
 80004c4:	d351      	bcc.n	800056a <__udivmoddi4+0x28a>
 80004c6:	d04e      	beq.n	8000566 <__udivmoddi4+0x286>
 80004c8:	b155      	cbz	r5, 80004e0 <__udivmoddi4+0x200>
 80004ca:	ebb8 030e 	subs.w	r3, r8, lr
 80004ce:	eb64 040c 	sbc.w	r4, r4, ip
 80004d2:	fa04 f606 	lsl.w	r6, r4, r6
 80004d6:	40cb      	lsrs	r3, r1
 80004d8:	431e      	orrs	r6, r3
 80004da:	40cc      	lsrs	r4, r1
 80004dc:	e9c5 6400 	strd	r6, r4, [r5]
 80004e0:	2100      	movs	r1, #0
 80004e2:	e750      	b.n	8000386 <__udivmoddi4+0xa6>
 80004e4:	f1c2 0320 	rsb	r3, r2, #32
 80004e8:	fa20 f103 	lsr.w	r1, r0, r3
 80004ec:	fa0c fc02 	lsl.w	ip, ip, r2
 80004f0:	fa24 f303 	lsr.w	r3, r4, r3
 80004f4:	4094      	lsls	r4, r2
 80004f6:	430c      	orrs	r4, r1
 80004f8:	ea4f 481c 	mov.w	r8, ip, lsr #16
 80004fc:	fa00 fe02 	lsl.w	lr, r0, r2
 8000500:	fa1f f78c 	uxth.w	r7, ip
 8000504:	fbb3 f0f8 	udiv	r0, r3, r8
 8000508:	fb08 3110 	mls	r1, r8, r0, r3
 800050c:	0c23      	lsrs	r3, r4, #16
 800050e:	ea43 4301 	orr.w	r3, r3, r1, lsl #16
 8000512:	fb00 f107 	mul.w	r1, r0, r7
 8000516:	4299      	cmp	r1, r3
 8000518:	d908      	bls.n	800052c <__udivmoddi4+0x24c>
 800051a:	eb1c 0303 	adds.w	r3, ip, r3
 800051e:	f100 36ff 	add.w	r6, r0, #4294967295
 8000522:	d22c      	bcs.n	800057e <__udivmoddi4+0x29e>
 8000524:	4299      	cmp	r1, r3
 8000526:	d92a      	bls.n	800057e <__udivmoddi4+0x29e>
 8000528:	3802      	subs	r0, #2
 800052a:	4463      	add	r3, ip
 800052c:	1a5b      	subs	r3, r3, r1
 800052e:	b2a4      	uxth	r4, r4
 8000530:	fbb3 f1f8 	udiv	r1, r3, r8
 8000534:	fb08 3311 	mls	r3, r8, r1, r3
 8000538:	ea44 4403 	orr.w	r4, r4, r3, lsl #16
 800053c:	fb01 f307 	mul.w	r3, r1, r7
 8000540:	42a3      	cmp	r3, r4
 8000542:	d908      	bls.n	8000556 <__udivmoddi4+0x276>
 8000544:	eb1c 0404 	adds.w	r4, ip, r4
 8000548:	f101 36ff 	add.w	r6, r1, #4294967295
 800054c:	d213      	bcs.n	8000576 <__udivmoddi4+0x296>
 800054e:	42a3      	cmp	r3, r4
 8000550:	d911      	bls.n	8000576 <__udivmoddi4+0x296>
 8000552:	3902      	subs	r1, #2
 8000554:	4464      	add	r4, ip
 8000556:	1ae4      	subs	r4, r4, r3
 8000558:	ea41 4100 	orr.w	r1, r1, r0, lsl #16
 800055c:	e739      	b.n	80003d2 <__udivmoddi4+0xf2>
 800055e:	4604      	mov	r4, r0
 8000560:	e6f0      	b.n	8000344 <__udivmoddi4+0x64>
 8000562:	4608      	mov	r0, r1
 8000564:	e706      	b.n	8000374 <__udivmoddi4+0x94>
 8000566:	45c8      	cmp	r8, r9
 8000568:	d2ae      	bcs.n	80004c8 <__udivmoddi4+0x1e8>
 800056a:	ebb9 0e02 	subs.w	lr, r9, r2
 800056e:	eb63 0c07 	sbc.w	ip, r3, r7
 8000572:	3801      	subs	r0, #1
 8000574:	e7a8      	b.n	80004c8 <__udivmoddi4+0x1e8>
 8000576:	4631      	mov	r1, r6
 8000578:	e7ed      	b.n	8000556 <__udivmoddi4+0x276>
 800057a:	4603      	mov	r3, r0
 800057c:	e799      	b.n	80004b2 <__udivmoddi4+0x1d2>
 800057e:	4630      	mov	r0, r6
 8000580:	e7d4      	b.n	800052c <__udivmoddi4+0x24c>
 8000582:	46d6      	mov	lr, sl
 8000584:	e77f      	b.n	8000486 <__udivmoddi4+0x1a6>
 8000586:	4463      	add	r3, ip
 8000588:	3802      	subs	r0, #2
 800058a:	e74d      	b.n	8000428 <__udivmoddi4+0x148>
 800058c:	4606      	mov	r6, r0
 800058e:	4623      	mov	r3, r4
 8000590:	4608      	mov	r0, r1
 8000592:	e70f      	b.n	80003b4 <__udivmoddi4+0xd4>
 8000594:	3e02      	subs	r6, #2
 8000596:	4463      	add	r3, ip
 8000598:	e730      	b.n	80003fc <__udivmoddi4+0x11c>
 800059a:	bf00      	nop

0800059c <__aeabi_idiv0>:
 800059c:	4770      	bx	lr
 800059e:	bf00      	nop

080005a0 <main>:
/**
  * @brief  The application entry point.
  * @retval int
  */
int main(void)
{
 80005a0:	b580      	push	{r7, lr}
 80005a2:	b082      	sub	sp, #8
 80005a4:	af02      	add	r7, sp, #8
  /* USER CODE END 1 */

  /* MCU Configuration--------------------------------------------------------*/

  /* Reset of all peripherals, Initializes the Flash interface and the Systick. */
  HAL_Init();
 80005a6:	f001 fbad 	bl	8001d04 <HAL_Init>
  /* USER CODE BEGIN Init */

  /* USER CODE END Init */

  /* Configure the system clock */
  SystemClock_Config();
 80005aa:	f000 f84d 	bl	8000648 <SystemClock_Config>
  /* USER CODE BEGIN SysInit */

  /* USER CODE END SysInit */

  /* Initialize all configured peripherals */
  MX_GPIO_Init();
 80005ae:	f000 fa81 	bl	8000ab4 <MX_GPIO_Init>
  MX_DMA_Init();
 80005b2:	f000 fa49 	bl	8000a48 <MX_DMA_Init>
  MX_SPI2_Init();
 80005b6:	f000 f94d 	bl	8000854 <MX_SPI2_Init>
  MX_CRC_Init();
 80005ba:	f000 f909 	bl	80007d0 <MX_CRC_Init>
  MX_TIM3_Init();
 80005be:	f000 f9f5 	bl	80009ac <MX_TIM3_Init>
  MX_ADC1_Init();
 80005c2:	f000 f8b3 	bl	800072c <MX_ADC1_Init>
  MX_TIM2_Init();
 80005c6:	f000 f97b 	bl	80008c0 <MX_TIM2_Init>
  MX_I2C2_Init();
 80005ca:	f000 f915 	bl	80007f8 <MX_I2C2_Init>
  MX_TouchGFX_Init();
 80005ce:	f006 fcdf 	bl	8006f90 <MX_TouchGFX_Init>
 //HAL_I2C_IsDeviceReady (I2C_HandleTypeDef * hi2c, uint16_t DevAddress, uint32_t Trials, uint32_t Timeout);




  Displ_Init(Displ_Orientat_0);			// initialize display controller - set orientation parameter as per TouchGFX setup
 80005d2:	2000      	movs	r0, #0
 80005d4:	f001 f80a 	bl	80015ec <Displ_Init>
  touchgfxSignalVSync();
 80005d8:	f00a ff4c 	bl	800b474 <touchgfxSignalVSync>
  Displ_Init(Displ_Orientat_0);			// initialize display controller - set orientation parameter as per TouchGFX setup
 80005dc:	2000      	movs	r0, #0
 80005de:	f001 f805 	bl	80015ec <Displ_Init>
  touchgfxSignalVSync();
 80005e2:	f00a ff47 	bl	800b474 <touchgfxSignalVSync>


  Displ_BackLight('I');  					// initialize backlight
 80005e6:	2049      	movs	r0, #73	@ 0x49
 80005e8:	f001 f8a6 	bl	8001738 <Displ_BackLight>
  HAL_TIM_Base_Start_IT(&TGFX_T);			// start TouchGFX tick timer
 80005ec:	4810      	ldr	r0, [pc, #64]	@ (8000630 <main+0x90>)
 80005ee:	f005 fddd 	bl	80061ac <HAL_TIM_Base_Start_IT>
  //HAL_ADCEx_Calibration_Start(&hadc1, ADC_SINGLE_ENDED);
  HAL_ADC_Start_DMA(&hadc1,(uint32_t*)&value_adc,1);
 80005f2:	2201      	movs	r2, #1
 80005f4:	490f      	ldr	r1, [pc, #60]	@ (8000634 <main+0x94>)
 80005f6:	4810      	ldr	r0, [pc, #64]	@ (8000638 <main+0x98>)
 80005f8:	f001 fc5e 	bl	8001eb8 <HAL_ADC_Start_DMA>
  /* USER CODE BEGIN WHILE */

  while (1)
  {

	  HAL_ADC_Start_DMA(&hadc1,(uint32_t*)&value_adc,1);
 80005fc:	2201      	movs	r2, #1
 80005fe:	490d      	ldr	r1, [pc, #52]	@ (8000634 <main+0x94>)
 8000600:	480d      	ldr	r0, [pc, #52]	@ (8000638 <main+0x98>)
 8000602:	f001 fc59 	bl	8001eb8 <HAL_ADC_Start_DMA>
	  HAL_I2C_Master_Transmit (&hi2c2, 0xB8, i2c_buffer, 3, 100);
 8000606:	2364      	movs	r3, #100	@ 0x64
 8000608:	9300      	str	r3, [sp, #0]
 800060a:	2303      	movs	r3, #3
 800060c:	4a0b      	ldr	r2, [pc, #44]	@ (800063c <main+0x9c>)
 800060e:	21b8      	movs	r1, #184	@ 0xb8
 8000610:	480b      	ldr	r0, [pc, #44]	@ (8000640 <main+0xa0>)
 8000612:	f003 f889 	bl	8003728 <HAL_I2C_Master_Transmit>
	  HAL_I2C_Master_Receive (&hi2c2, 0xB9, i2c_return, 8, 100);
 8000616:	2364      	movs	r3, #100	@ 0x64
 8000618:	9300      	str	r3, [sp, #0]
 800061a:	2308      	movs	r3, #8
 800061c:	4a09      	ldr	r2, [pc, #36]	@ (8000644 <main+0xa4>)
 800061e:	21b9      	movs	r1, #185	@ 0xb9
 8000620:	4807      	ldr	r0, [pc, #28]	@ (8000640 <main+0xa0>)
 8000622:	f003 f97f 	bl	8003924 <HAL_I2C_Master_Receive>



    /* USER CODE END WHILE */

  MX_TouchGFX_Process();
 8000626:	f006 fcbb 	bl	8006fa0 <MX_TouchGFX_Process>
	  HAL_ADC_Start_DMA(&hadc1,(uint32_t*)&value_adc,1);
 800062a:	bf00      	nop
 800062c:	e7e6      	b.n	80005fc <main+0x5c>
 800062e:	bf00      	nop
 8000630:	20000540 	.word	0x20000540
 8000634:	20000588 	.word	0x20000588
 8000638:	2000033c 	.word	0x2000033c
 800063c:	20000004 	.word	0x20000004
 8000640:	200003ec 	.word	0x200003ec
 8000644:	2000058c 	.word	0x2000058c

08000648 <SystemClock_Config>:
/**
  * @brief System Clock Configuration
  * @retval None
  */
void SystemClock_Config(void)
{
 8000648:	b580      	push	{r7, lr}
 800064a:	b094      	sub	sp, #80	@ 0x50
 800064c:	af00      	add	r7, sp, #0
  RCC_OscInitTypeDef RCC_OscInitStruct = {0};
 800064e:	f107 031c 	add.w	r3, r7, #28
 8000652:	2234      	movs	r2, #52	@ 0x34
 8000654:	2100      	movs	r1, #0
 8000656:	4618      	mov	r0, r3
 8000658:	f020 fae1 	bl	8020c1e <memset>
  RCC_ClkInitTypeDef RCC_ClkInitStruct = {0};
 800065c:	f107 0308 	add.w	r3, r7, #8
 8000660:	2200      	movs	r2, #0
 8000662:	601a      	str	r2, [r3, #0]
 8000664:	605a      	str	r2, [r3, #4]
 8000666:	609a      	str	r2, [r3, #8]
 8000668:	60da      	str	r2, [r3, #12]
 800066a:	611a      	str	r2, [r3, #16]

  /** Configure the main internal regulator output voltage
  */
  __HAL_RCC_PWR_CLK_ENABLE();
 800066c:	2300      	movs	r3, #0
 800066e:	607b      	str	r3, [r7, #4]
 8000670:	4b2c      	ldr	r3, [pc, #176]	@ (8000724 <SystemClock_Config+0xdc>)
 8000672:	6c1b      	ldr	r3, [r3, #64]	@ 0x40
 8000674:	4a2b      	ldr	r2, [pc, #172]	@ (8000724 <SystemClock_Config+0xdc>)
 8000676:	f043 5380 	orr.w	r3, r3, #268435456	@ 0x10000000
 800067a:	6413      	str	r3, [r2, #64]	@ 0x40
 800067c:	4b29      	ldr	r3, [pc, #164]	@ (8000724 <SystemClock_Config+0xdc>)
 800067e:	6c1b      	ldr	r3, [r3, #64]	@ 0x40
 8000680:	f003 5380 	and.w	r3, r3, #268435456	@ 0x10000000
 8000684:	607b      	str	r3, [r7, #4]
 8000686:	687b      	ldr	r3, [r7, #4]
  __HAL_PWR_VOLTAGESCALING_CONFIG(PWR_REGULATOR_VOLTAGE_SCALE1);
 8000688:	2300      	movs	r3, #0
 800068a:	603b      	str	r3, [r7, #0]
 800068c:	4b26      	ldr	r3, [pc, #152]	@ (8000728 <SystemClock_Config+0xe0>)
 800068e:	681b      	ldr	r3, [r3, #0]
 8000690:	4a25      	ldr	r2, [pc, #148]	@ (8000728 <SystemClock_Config+0xe0>)
 8000692:	f443 4340 	orr.w	r3, r3, #49152	@ 0xc000
 8000696:	6013      	str	r3, [r2, #0]
 8000698:	4b23      	ldr	r3, [pc, #140]	@ (8000728 <SystemClock_Config+0xe0>)
 800069a:	681b      	ldr	r3, [r3, #0]
 800069c:	f403 4340 	and.w	r3, r3, #49152	@ 0xc000
 80006a0:	603b      	str	r3, [r7, #0]
 80006a2:	683b      	ldr	r3, [r7, #0]

  /** Initializes the RCC Oscillators according to the specified parameters
  * in the RCC_OscInitTypeDef structure.
  */
  RCC_OscInitStruct.OscillatorType = RCC_OSCILLATORTYPE_HSI;
 80006a4:	2302      	movs	r3, #2
 80006a6:	61fb      	str	r3, [r7, #28]
  RCC_OscInitStruct.HSIState = RCC_HSI_ON;
 80006a8:	2301      	movs	r3, #1
 80006aa:	62bb      	str	r3, [r7, #40]	@ 0x28
  RCC_OscInitStruct.HSICalibrationValue = RCC_HSICALIBRATION_DEFAULT;
 80006ac:	2310      	movs	r3, #16
 80006ae:	62fb      	str	r3, [r7, #44]	@ 0x2c
  RCC_OscInitStruct.PLL.PLLState = RCC_PLL_ON;
 80006b0:	2302      	movs	r3, #2
 80006b2:	637b      	str	r3, [r7, #52]	@ 0x34
  RCC_OscInitStruct.PLL.PLLSource = RCC_PLLSOURCE_HSI;
 80006b4:	2300      	movs	r3, #0
 80006b6:	63bb      	str	r3, [r7, #56]	@ 0x38
  RCC_OscInitStruct.PLL.PLLM = 8;
 80006b8:	2308      	movs	r3, #8
 80006ba:	63fb      	str	r3, [r7, #60]	@ 0x3c
  RCC_OscInitStruct.PLL.PLLN = 180;
 80006bc:	23b4      	movs	r3, #180	@ 0xb4
 80006be:	643b      	str	r3, [r7, #64]	@ 0x40
  RCC_OscInitStruct.PLL.PLLP = RCC_PLLP_DIV2;
 80006c0:	2302      	movs	r3, #2
 80006c2:	647b      	str	r3, [r7, #68]	@ 0x44
  RCC_OscInitStruct.PLL.PLLQ = 2;
 80006c4:	2302      	movs	r3, #2
 80006c6:	64bb      	str	r3, [r7, #72]	@ 0x48
  RCC_OscInitStruct.PLL.PLLR = 2;
 80006c8:	2302      	movs	r3, #2
 80006ca:	64fb      	str	r3, [r7, #76]	@ 0x4c
  if (HAL_RCC_OscConfig(&RCC_OscInitStruct) != HAL_OK)
 80006cc:	f107 031c 	add.w	r3, r7, #28
 80006d0:	4618      	mov	r0, r3
 80006d2:	f004 fa65 	bl	8004ba0 <HAL_RCC_OscConfig>
 80006d6:	4603      	mov	r3, r0
 80006d8:	2b00      	cmp	r3, #0
 80006da:	d001      	beq.n	80006e0 <SystemClock_Config+0x98>
  {
    Error_Handler();
 80006dc:	f000 fabe 	bl	8000c5c <Error_Handler>
  }

  /** Activate the Over-Drive mode
  */
  if (HAL_PWREx_EnableOverDrive() != HAL_OK)
 80006e0:	f003 fed8 	bl	8004494 <HAL_PWREx_EnableOverDrive>
 80006e4:	4603      	mov	r3, r0
 80006e6:	2b00      	cmp	r3, #0
 80006e8:	d001      	beq.n	80006ee <SystemClock_Config+0xa6>
  {
    Error_Handler();
 80006ea:	f000 fab7 	bl	8000c5c <Error_Handler>
  }

  /** Initializes the CPU, AHB and APB buses clocks
  */
  RCC_ClkInitStruct.ClockType = RCC_CLOCKTYPE_HCLK|RCC_CLOCKTYPE_SYSCLK
 80006ee:	230f      	movs	r3, #15
 80006f0:	60bb      	str	r3, [r7, #8]
                              |RCC_CLOCKTYPE_PCLK1|RCC_CLOCKTYPE_PCLK2;
  RCC_ClkInitStruct.SYSCLKSource = RCC_SYSCLKSOURCE_PLLCLK;
 80006f2:	2302      	movs	r3, #2
 80006f4:	60fb      	str	r3, [r7, #12]
  RCC_ClkInitStruct.AHBCLKDivider = RCC_SYSCLK_DIV1;
 80006f6:	2300      	movs	r3, #0
 80006f8:	613b      	str	r3, [r7, #16]
  RCC_ClkInitStruct.APB1CLKDivider = RCC_HCLK_DIV4;
 80006fa:	f44f 53a0 	mov.w	r3, #5120	@ 0x1400
 80006fe:	617b      	str	r3, [r7, #20]
  RCC_ClkInitStruct.APB2CLKDivider = RCC_HCLK_DIV2;
 8000700:	f44f 5380 	mov.w	r3, #4096	@ 0x1000
 8000704:	61bb      	str	r3, [r7, #24]

  if (HAL_RCC_ClockConfig(&RCC_ClkInitStruct, FLASH_LATENCY_5) != HAL_OK)
 8000706:	f107 0308 	add.w	r3, r7, #8
 800070a:	2105      	movs	r1, #5
 800070c:	4618      	mov	r0, r3
 800070e:	f003 ff11 	bl	8004534 <HAL_RCC_ClockConfig>
 8000712:	4603      	mov	r3, r0
 8000714:	2b00      	cmp	r3, #0
 8000716:	d001      	beq.n	800071c <SystemClock_Config+0xd4>
  {
    Error_Handler();
 8000718:	f000 faa0 	bl	8000c5c <Error_Handler>
  }
}
 800071c:	bf00      	nop
 800071e:	3750      	adds	r7, #80	@ 0x50
 8000720:	46bd      	mov	sp, r7
 8000722:	bd80      	pop	{r7, pc}
 8000724:	40023800 	.word	0x40023800
 8000728:	40007000 	.word	0x40007000

0800072c <MX_ADC1_Init>:
  * @brief ADC1 Initialization Function
  * @param None
  * @retval None
  */
static void MX_ADC1_Init(void)
{
 800072c:	b580      	push	{r7, lr}
 800072e:	b084      	sub	sp, #16
 8000730:	af00      	add	r7, sp, #0

  /* USER CODE BEGIN ADC1_Init 0 */

  /* USER CODE END ADC1_Init 0 */

  ADC_ChannelConfTypeDef sConfig = {0};
 8000732:	463b      	mov	r3, r7
 8000734:	2200      	movs	r2, #0
 8000736:	601a      	str	r2, [r3, #0]
 8000738:	605a      	str	r2, [r3, #4]
 800073a:	609a      	str	r2, [r3, #8]
 800073c:	60da      	str	r2, [r3, #12]

  /* USER CODE END ADC1_Init 1 */

  /** Configure the global features of the ADC (Clock, Resolution, Data Alignment and number of conversion)
  */
  hadc1.Instance = ADC1;
 800073e:	4b21      	ldr	r3, [pc, #132]	@ (80007c4 <MX_ADC1_Init+0x98>)
 8000740:	4a21      	ldr	r2, [pc, #132]	@ (80007c8 <MX_ADC1_Init+0x9c>)
 8000742:	601a      	str	r2, [r3, #0]
  hadc1.Init.ClockPrescaler = ADC_CLOCK_SYNC_PCLK_DIV4;
 8000744:	4b1f      	ldr	r3, [pc, #124]	@ (80007c4 <MX_ADC1_Init+0x98>)
 8000746:	f44f 3280 	mov.w	r2, #65536	@ 0x10000
 800074a:	605a      	str	r2, [r3, #4]
  hadc1.Init.Resolution = ADC_RESOLUTION_12B;
 800074c:	4b1d      	ldr	r3, [pc, #116]	@ (80007c4 <MX_ADC1_Init+0x98>)
 800074e:	2200      	movs	r2, #0
 8000750:	609a      	str	r2, [r3, #8]
  hadc1.Init.ScanConvMode = DISABLE;
 8000752:	4b1c      	ldr	r3, [pc, #112]	@ (80007c4 <MX_ADC1_Init+0x98>)
 8000754:	2200      	movs	r2, #0
 8000756:	611a      	str	r2, [r3, #16]
  hadc1.Init.ContinuousConvMode = DISABLE;
 8000758:	4b1a      	ldr	r3, [pc, #104]	@ (80007c4 <MX_ADC1_Init+0x98>)
 800075a:	2200      	movs	r2, #0
 800075c:	761a      	strb	r2, [r3, #24]
  hadc1.Init.DiscontinuousConvMode = DISABLE;
 800075e:	4b19      	ldr	r3, [pc, #100]	@ (80007c4 <MX_ADC1_Init+0x98>)
 8000760:	2200      	movs	r2, #0
 8000762:	f883 2020 	strb.w	r2, [r3, #32]
  hadc1.Init.ExternalTrigConvEdge = ADC_EXTERNALTRIGCONVEDGE_NONE;
 8000766:	4b17      	ldr	r3, [pc, #92]	@ (80007c4 <MX_ADC1_Init+0x98>)
 8000768:	2200      	movs	r2, #0
 800076a:	62da      	str	r2, [r3, #44]	@ 0x2c
  hadc1.Init.ExternalTrigConv = ADC_SOFTWARE_START;
 800076c:	4b15      	ldr	r3, [pc, #84]	@ (80007c4 <MX_ADC1_Init+0x98>)
 800076e:	4a17      	ldr	r2, [pc, #92]	@ (80007cc <MX_ADC1_Init+0xa0>)
 8000770:	629a      	str	r2, [r3, #40]	@ 0x28
  hadc1.Init.DataAlign = ADC_DATAALIGN_RIGHT;
 8000772:	4b14      	ldr	r3, [pc, #80]	@ (80007c4 <MX_ADC1_Init+0x98>)
 8000774:	2200      	movs	r2, #0
 8000776:	60da      	str	r2, [r3, #12]
  hadc1.Init.NbrOfConversion = 1;
 8000778:	4b12      	ldr	r3, [pc, #72]	@ (80007c4 <MX_ADC1_Init+0x98>)
 800077a:	2201      	movs	r2, #1
 800077c:	61da      	str	r2, [r3, #28]
  hadc1.Init.DMAContinuousRequests = DISABLE;
 800077e:	4b11      	ldr	r3, [pc, #68]	@ (80007c4 <MX_ADC1_Init+0x98>)
 8000780:	2200      	movs	r2, #0
 8000782:	f883 2030 	strb.w	r2, [r3, #48]	@ 0x30
  hadc1.Init.EOCSelection = ADC_EOC_SINGLE_CONV;
 8000786:	4b0f      	ldr	r3, [pc, #60]	@ (80007c4 <MX_ADC1_Init+0x98>)
 8000788:	2201      	movs	r2, #1
 800078a:	615a      	str	r2, [r3, #20]
  if (HAL_ADC_Init(&hadc1) != HAL_OK)
 800078c:	480d      	ldr	r0, [pc, #52]	@ (80007c4 <MX_ADC1_Init+0x98>)
 800078e:	f001 fb4f 	bl	8001e30 <HAL_ADC_Init>
 8000792:	4603      	mov	r3, r0
 8000794:	2b00      	cmp	r3, #0
 8000796:	d001      	beq.n	800079c <MX_ADC1_Init+0x70>
  {
    Error_Handler();
 8000798:	f000 fa60 	bl	8000c5c <Error_Handler>
  }

  /** Configure for the selected ADC regular channel its corresponding rank in the sequencer and its sample time.
  */
  sConfig.Channel = ADC_CHANNEL_10;
 800079c:	230a      	movs	r3, #10
 800079e:	603b      	str	r3, [r7, #0]
  sConfig.Rank = 1;
 80007a0:	2301      	movs	r3, #1
 80007a2:	607b      	str	r3, [r7, #4]
  sConfig.SamplingTime = ADC_SAMPLETIME_3CYCLES;
 80007a4:	2300      	movs	r3, #0
 80007a6:	60bb      	str	r3, [r7, #8]
  if (HAL_ADC_ConfigChannel(&hadc1, &sConfig) != HAL_OK)
 80007a8:	463b      	mov	r3, r7
 80007aa:	4619      	mov	r1, r3
 80007ac:	4805      	ldr	r0, [pc, #20]	@ (80007c4 <MX_ADC1_Init+0x98>)
 80007ae:	f001 fcb1 	bl	8002114 <HAL_ADC_ConfigChannel>
 80007b2:	4603      	mov	r3, r0
 80007b4:	2b00      	cmp	r3, #0
 80007b6:	d001      	beq.n	80007bc <MX_ADC1_Init+0x90>
  {
    Error_Handler();
 80007b8:	f000 fa50 	bl	8000c5c <Error_Handler>
  }
  /* USER CODE BEGIN ADC1_Init 2 */

  /* USER CODE END ADC1_Init 2 */

}
 80007bc:	bf00      	nop
 80007be:	3710      	adds	r7, #16
 80007c0:	46bd      	mov	sp, r7
 80007c2:	bd80      	pop	{r7, pc}
 80007c4:	2000033c 	.word	0x2000033c
 80007c8:	40012000 	.word	0x40012000
 80007cc:	0f000001 	.word	0x0f000001

080007d0 <MX_CRC_Init>:
  * @brief CRC Initialization Function
  * @param None
  * @retval None
  */
static void MX_CRC_Init(void)
{
 80007d0:	b580      	push	{r7, lr}
 80007d2:	af00      	add	r7, sp, #0
  /* USER CODE END CRC_Init 0 */

  /* USER CODE BEGIN CRC_Init 1 */

  /* USER CODE END CRC_Init 1 */
  hcrc.Instance = CRC;
 80007d4:	4b06      	ldr	r3, [pc, #24]	@ (80007f0 <MX_CRC_Init+0x20>)
 80007d6:	4a07      	ldr	r2, [pc, #28]	@ (80007f4 <MX_CRC_Init+0x24>)
 80007d8:	601a      	str	r2, [r3, #0]
  if (HAL_CRC_Init(&hcrc) != HAL_OK)
 80007da:	4805      	ldr	r0, [pc, #20]	@ (80007f0 <MX_CRC_Init+0x20>)
 80007dc:	f002 f8b9 	bl	8002952 <HAL_CRC_Init>
 80007e0:	4603      	mov	r3, r0
 80007e2:	2b00      	cmp	r3, #0
 80007e4:	d001      	beq.n	80007ea <MX_CRC_Init+0x1a>
  {
    Error_Handler();
 80007e6:	f000 fa39 	bl	8000c5c <Error_Handler>
  }
  /* USER CODE BEGIN CRC_Init 2 */

  /* USER CODE END CRC_Init 2 */

}
 80007ea:	bf00      	nop
 80007ec:	bd80      	pop	{r7, pc}
 80007ee:	bf00      	nop
 80007f0:	200003e4 	.word	0x200003e4
 80007f4:	40023000 	.word	0x40023000

080007f8 <MX_I2C2_Init>:
  * @brief I2C2 Initialization Function
  * @param None
  * @retval None
  */
static void MX_I2C2_Init(void)
{
 80007f8:	b580      	push	{r7, lr}
 80007fa:	af00      	add	r7, sp, #0
  /* USER CODE END I2C2_Init 0 */

  /* USER CODE BEGIN I2C2_Init 1 */

  /* USER CODE END I2C2_Init 1 */
  hi2c2.Instance = I2C2;
 80007fc:	4b12      	ldr	r3, [pc, #72]	@ (8000848 <MX_I2C2_Init+0x50>)
 80007fe:	4a13      	ldr	r2, [pc, #76]	@ (800084c <MX_I2C2_Init+0x54>)
 8000800:	601a      	str	r2, [r3, #0]
  hi2c2.Init.ClockSpeed = 100000;
 8000802:	4b11      	ldr	r3, [pc, #68]	@ (8000848 <MX_I2C2_Init+0x50>)
 8000804:	4a12      	ldr	r2, [pc, #72]	@ (8000850 <MX_I2C2_Init+0x58>)
 8000806:	605a      	str	r2, [r3, #4]
  hi2c2.Init.DutyCycle = I2C_DUTYCYCLE_2;
 8000808:	4b0f      	ldr	r3, [pc, #60]	@ (8000848 <MX_I2C2_Init+0x50>)
 800080a:	2200      	movs	r2, #0
 800080c:	609a      	str	r2, [r3, #8]
  hi2c2.Init.OwnAddress1 = 0;
 800080e:	4b0e      	ldr	r3, [pc, #56]	@ (8000848 <MX_I2C2_Init+0x50>)
 8000810:	2200      	movs	r2, #0
 8000812:	60da      	str	r2, [r3, #12]
  hi2c2.Init.AddressingMode = I2C_ADDRESSINGMODE_7BIT;
 8000814:	4b0c      	ldr	r3, [pc, #48]	@ (8000848 <MX_I2C2_Init+0x50>)
 8000816:	f44f 4280 	mov.w	r2, #16384	@ 0x4000
 800081a:	611a      	str	r2, [r3, #16]
  hi2c2.Init.DualAddressMode = I2C_DUALADDRESS_DISABLE;
 800081c:	4b0a      	ldr	r3, [pc, #40]	@ (8000848 <MX_I2C2_Init+0x50>)
 800081e:	2200      	movs	r2, #0
 8000820:	615a      	str	r2, [r3, #20]
  hi2c2.Init.OwnAddress2 = 0;
 8000822:	4b09      	ldr	r3, [pc, #36]	@ (8000848 <MX_I2C2_Init+0x50>)
 8000824:	2200      	movs	r2, #0
 8000826:	619a      	str	r2, [r3, #24]
  hi2c2.Init.GeneralCallMode = I2C_GENERALCALL_DISABLE;
 8000828:	4b07      	ldr	r3, [pc, #28]	@ (8000848 <MX_I2C2_Init+0x50>)
 800082a:	2200      	movs	r2, #0
 800082c:	61da      	str	r2, [r3, #28]
  hi2c2.Init.NoStretchMode = I2C_NOSTRETCH_DISABLE;
 800082e:	4b06      	ldr	r3, [pc, #24]	@ (8000848 <MX_I2C2_Init+0x50>)
 8000830:	2200      	movs	r2, #0
 8000832:	621a      	str	r2, [r3, #32]
  if (HAL_I2C_Init(&hi2c2) != HAL_OK)
 8000834:	4804      	ldr	r0, [pc, #16]	@ (8000848 <MX_I2C2_Init+0x50>)
 8000836:	f002 fe33 	bl	80034a0 <HAL_I2C_Init>
 800083a:	4603      	mov	r3, r0
 800083c:	2b00      	cmp	r3, #0
 800083e:	d001      	beq.n	8000844 <MX_I2C2_Init+0x4c>
  {
    Error_Handler();
 8000840:	f000 fa0c 	bl	8000c5c <Error_Handler>
  }
  /* USER CODE BEGIN I2C2_Init 2 */

  /* USER CODE END I2C2_Init 2 */

}
 8000844:	bf00      	nop
 8000846:	bd80      	pop	{r7, pc}
 8000848:	200003ec 	.word	0x200003ec
 800084c:	40005800 	.word	0x40005800
 8000850:	000186a0 	.word	0x000186a0

08000854 <MX_SPI2_Init>:
  * @brief SPI2 Initialization Function
  * @param None
  * @retval None
  */
static void MX_SPI2_Init(void)
{
 8000854:	b580      	push	{r7, lr}
 8000856:	af00      	add	r7, sp, #0

  /* USER CODE BEGIN SPI2_Init 1 */

  /* USER CODE END SPI2_Init 1 */
  /* SPI2 parameter configuration*/
  hspi2.Instance = SPI2;
 8000858:	4b17      	ldr	r3, [pc, #92]	@ (80008b8 <MX_SPI2_Init+0x64>)
 800085a:	4a18      	ldr	r2, [pc, #96]	@ (80008bc <MX_SPI2_Init+0x68>)
 800085c:	601a      	str	r2, [r3, #0]
  hspi2.Init.Mode = SPI_MODE_MASTER;
 800085e:	4b16      	ldr	r3, [pc, #88]	@ (80008b8 <MX_SPI2_Init+0x64>)
 8000860:	f44f 7282 	mov.w	r2, #260	@ 0x104
 8000864:	605a      	str	r2, [r3, #4]
  hspi2.Init.Direction = SPI_DIRECTION_2LINES;
 8000866:	4b14      	ldr	r3, [pc, #80]	@ (80008b8 <MX_SPI2_Init+0x64>)
 8000868:	2200      	movs	r2, #0
 800086a:	609a      	str	r2, [r3, #8]
  hspi2.Init.DataSize = SPI_DATASIZE_8BIT;
 800086c:	4b12      	ldr	r3, [pc, #72]	@ (80008b8 <MX_SPI2_Init+0x64>)
 800086e:	2200      	movs	r2, #0
 8000870:	60da      	str	r2, [r3, #12]
  hspi2.Init.CLKPolarity = SPI_POLARITY_LOW;
 8000872:	4b11      	ldr	r3, [pc, #68]	@ (80008b8 <MX_SPI2_Init+0x64>)
 8000874:	2200      	movs	r2, #0
 8000876:	611a      	str	r2, [r3, #16]
  hspi2.Init.CLKPhase = SPI_PHASE_1EDGE;
 8000878:	4b0f      	ldr	r3, [pc, #60]	@ (80008b8 <MX_SPI2_Init+0x64>)
 800087a:	2200      	movs	r2, #0
 800087c:	615a      	str	r2, [r3, #20]
  hspi2.Init.NSS = SPI_NSS_SOFT;
 800087e:	4b0e      	ldr	r3, [pc, #56]	@ (80008b8 <MX_SPI2_Init+0x64>)
 8000880:	f44f 7200 	mov.w	r2, #512	@ 0x200
 8000884:	619a      	str	r2, [r3, #24]
  hspi2.Init.BaudRatePrescaler = SPI_BAUDRATEPRESCALER_2;
 8000886:	4b0c      	ldr	r3, [pc, #48]	@ (80008b8 <MX_SPI2_Init+0x64>)
 8000888:	2200      	movs	r2, #0
 800088a:	61da      	str	r2, [r3, #28]
  hspi2.Init.FirstBit = SPI_FIRSTBIT_MSB;
 800088c:	4b0a      	ldr	r3, [pc, #40]	@ (80008b8 <MX_SPI2_Init+0x64>)
 800088e:	2200      	movs	r2, #0
 8000890:	621a      	str	r2, [r3, #32]
  hspi2.Init.TIMode = SPI_TIMODE_DISABLE;
 8000892:	4b09      	ldr	r3, [pc, #36]	@ (80008b8 <MX_SPI2_Init+0x64>)
 8000894:	2200      	movs	r2, #0
 8000896:	625a      	str	r2, [r3, #36]	@ 0x24
  hspi2.Init.CRCCalculation = SPI_CRCCALCULATION_DISABLE;
 8000898:	4b07      	ldr	r3, [pc, #28]	@ (80008b8 <MX_SPI2_Init+0x64>)
 800089a:	2200      	movs	r2, #0
 800089c:	629a      	str	r2, [r3, #40]	@ 0x28
  hspi2.Init.CRCPolynomial = 10;
 800089e:	4b06      	ldr	r3, [pc, #24]	@ (80008b8 <MX_SPI2_Init+0x64>)
 80008a0:	220a      	movs	r2, #10
 80008a2:	62da      	str	r2, [r3, #44]	@ 0x2c
  if (HAL_SPI_Init(&hspi2) != HAL_OK)
 80008a4:	4804      	ldr	r0, [pc, #16]	@ (80008b8 <MX_SPI2_Init+0x64>)
 80008a6:	f004 fc19 	bl	80050dc <HAL_SPI_Init>
 80008aa:	4603      	mov	r3, r0
 80008ac:	2b00      	cmp	r3, #0
 80008ae:	d001      	beq.n	80008b4 <MX_SPI2_Init+0x60>
  {
    Error_Handler();
 80008b0:	f000 f9d4 	bl	8000c5c <Error_Handler>
  }
  /* USER CODE BEGIN SPI2_Init 2 */

  /* USER CODE END SPI2_Init 2 */

}
 80008b4:	bf00      	nop
 80008b6:	bd80      	pop	{r7, pc}
 80008b8:	20000440 	.word	0x20000440
 80008bc:	40003800 	.word	0x40003800

080008c0 <MX_TIM2_Init>:
  * @brief TIM2 Initialization Function
  * @param None
  * @retval None
  */
static void MX_TIM2_Init(void)
{
 80008c0:	b580      	push	{r7, lr}
 80008c2:	b08e      	sub	sp, #56	@ 0x38
 80008c4:	af00      	add	r7, sp, #0

  /* USER CODE BEGIN TIM2_Init 0 */

  /* USER CODE END TIM2_Init 0 */

  TIM_ClockConfigTypeDef sClockSourceConfig = {0};
 80008c6:	f107 0328 	add.w	r3, r7, #40	@ 0x28
 80008ca:	2200      	movs	r2, #0
 80008cc:	601a      	str	r2, [r3, #0]
 80008ce:	605a      	str	r2, [r3, #4]
 80008d0:	609a      	str	r2, [r3, #8]
 80008d2:	60da      	str	r2, [r3, #12]
  TIM_MasterConfigTypeDef sMasterConfig = {0};
 80008d4:	f107 0320 	add.w	r3, r7, #32
 80008d8:	2200      	movs	r2, #0
 80008da:	601a      	str	r2, [r3, #0]
 80008dc:	605a      	str	r2, [r3, #4]
  TIM_OC_InitTypeDef sConfigOC = {0};
 80008de:	1d3b      	adds	r3, r7, #4
 80008e0:	2200      	movs	r2, #0
 80008e2:	601a      	str	r2, [r3, #0]
 80008e4:	605a      	str	r2, [r3, #4]
 80008e6:	609a      	str	r2, [r3, #8]
 80008e8:	60da      	str	r2, [r3, #12]
 80008ea:	611a      	str	r2, [r3, #16]
 80008ec:	615a      	str	r2, [r3, #20]
 80008ee:	619a      	str	r2, [r3, #24]

  /* USER CODE BEGIN TIM2_Init 1 */

  /* USER CODE END TIM2_Init 1 */
  htim2.Instance = TIM2;
 80008f0:	4b2d      	ldr	r3, [pc, #180]	@ (80009a8 <MX_TIM2_Init+0xe8>)
 80008f2:	f04f 4280 	mov.w	r2, #1073741824	@ 0x40000000
 80008f6:	601a      	str	r2, [r3, #0]
  htim2.Init.Prescaler = 0;
 80008f8:	4b2b      	ldr	r3, [pc, #172]	@ (80009a8 <MX_TIM2_Init+0xe8>)
 80008fa:	2200      	movs	r2, #0
 80008fc:	605a      	str	r2, [r3, #4]
  htim2.Init.CounterMode = TIM_COUNTERMODE_UP;
 80008fe:	4b2a      	ldr	r3, [pc, #168]	@ (80009a8 <MX_TIM2_Init+0xe8>)
 8000900:	2200      	movs	r2, #0
 8000902:	609a      	str	r2, [r3, #8]
  htim2.Init.Period = 4294967295;
 8000904:	4b28      	ldr	r3, [pc, #160]	@ (80009a8 <MX_TIM2_Init+0xe8>)
 8000906:	f04f 32ff 	mov.w	r2, #4294967295
 800090a:	60da      	str	r2, [r3, #12]
  htim2.Init.ClockDivision = TIM_CLOCKDIVISION_DIV1;
 800090c:	4b26      	ldr	r3, [pc, #152]	@ (80009a8 <MX_TIM2_Init+0xe8>)
 800090e:	2200      	movs	r2, #0
 8000910:	611a      	str	r2, [r3, #16]
  htim2.Init.AutoReloadPreload = TIM_AUTORELOAD_PRELOAD_DISABLE;
 8000912:	4b25      	ldr	r3, [pc, #148]	@ (80009a8 <MX_TIM2_Init+0xe8>)
 8000914:	2200      	movs	r2, #0
 8000916:	619a      	str	r2, [r3, #24]
  if (HAL_TIM_Base_Init(&htim2) != HAL_OK)
 8000918:	4823      	ldr	r0, [pc, #140]	@ (80009a8 <MX_TIM2_Init+0xe8>)
 800091a:	f005 fbf7 	bl	800610c <HAL_TIM_Base_Init>
 800091e:	4603      	mov	r3, r0
 8000920:	2b00      	cmp	r3, #0
 8000922:	d001      	beq.n	8000928 <MX_TIM2_Init+0x68>
  {
    Error_Handler();
 8000924:	f000 f99a 	bl	8000c5c <Error_Handler>
  }
  sClockSourceConfig.ClockSource = TIM_CLOCKSOURCE_INTERNAL;
 8000928:	f44f 5380 	mov.w	r3, #4096	@ 0x1000
 800092c:	62bb      	str	r3, [r7, #40]	@ 0x28
  if (HAL_TIM_ConfigClockSource(&htim2, &sClockSourceConfig) != HAL_OK)
 800092e:	f107 0328 	add.w	r3, r7, #40	@ 0x28
 8000932:	4619      	mov	r1, r3
 8000934:	481c      	ldr	r0, [pc, #112]	@ (80009a8 <MX_TIM2_Init+0xe8>)
 8000936:	f005 feb5 	bl	80066a4 <HAL_TIM_ConfigClockSource>
 800093a:	4603      	mov	r3, r0
 800093c:	2b00      	cmp	r3, #0
 800093e:	d001      	beq.n	8000944 <MX_TIM2_Init+0x84>
  {
    Error_Handler();
 8000940:	f000 f98c 	bl	8000c5c <Error_Handler>
  }
  if (HAL_TIM_PWM_Init(&htim2) != HAL_OK)
 8000944:	4818      	ldr	r0, [pc, #96]	@ (80009a8 <MX_TIM2_Init+0xe8>)
 8000946:	f005 fca1 	bl	800628c <HAL_TIM_PWM_Init>
 800094a:	4603      	mov	r3, r0
 800094c:	2b00      	cmp	r3, #0
 800094e:	d001      	beq.n	8000954 <MX_TIM2_Init+0x94>
  {
    Error_Handler();
 8000950:	f000 f984 	bl	8000c5c <Error_Handler>
  }
  sMasterConfig.MasterOutputTrigger = TIM_TRGO_RESET;
 8000954:	2300      	movs	r3, #0
 8000956:	623b      	str	r3, [r7, #32]
  sMasterConfig.MasterSlaveMode = TIM_MASTERSLAVEMODE_DISABLE;
 8000958:	2300      	movs	r3, #0
 800095a:	627b      	str	r3, [r7, #36]	@ 0x24
  if (HAL_TIMEx_MasterConfigSynchronization(&htim2, &sMasterConfig) != HAL_OK)
 800095c:	f107 0320 	add.w	r3, r7, #32
 8000960:	4619      	mov	r1, r3
 8000962:	4811      	ldr	r0, [pc, #68]	@ (80009a8 <MX_TIM2_Init+0xe8>)
 8000964:	f006 fa84 	bl	8006e70 <HAL_TIMEx_MasterConfigSynchronization>
 8000968:	4603      	mov	r3, r0
 800096a:	2b00      	cmp	r3, #0
 800096c:	d001      	beq.n	8000972 <MX_TIM2_Init+0xb2>
  {
    Error_Handler();
 800096e:	f000 f975 	bl	8000c5c <Error_Handler>
  }
  sConfigOC.OCMode = TIM_OCMODE_PWM1;
 8000972:	2360      	movs	r3, #96	@ 0x60
 8000974:	607b      	str	r3, [r7, #4]
  sConfigOC.Pulse = 0;
 8000976:	2300      	movs	r3, #0
 8000978:	60bb      	str	r3, [r7, #8]
  sConfigOC.OCPolarity = TIM_OCPOLARITY_HIGH;
 800097a:	2300      	movs	r3, #0
 800097c:	60fb      	str	r3, [r7, #12]
  sConfigOC.OCFastMode = TIM_OCFAST_DISABLE;
 800097e:	2300      	movs	r3, #0
 8000980:	617b      	str	r3, [r7, #20]
  if (HAL_TIM_PWM_ConfigChannel(&htim2, &sConfigOC, TIM_CHANNEL_1) != HAL_OK)
 8000982:	1d3b      	adds	r3, r7, #4
 8000984:	2200      	movs	r2, #0
 8000986:	4619      	mov	r1, r3
 8000988:	4807      	ldr	r0, [pc, #28]	@ (80009a8 <MX_TIM2_Init+0xe8>)
 800098a:	f005 fdc9 	bl	8006520 <HAL_TIM_PWM_ConfigChannel>
 800098e:	4603      	mov	r3, r0
 8000990:	2b00      	cmp	r3, #0
 8000992:	d001      	beq.n	8000998 <MX_TIM2_Init+0xd8>
  {
    Error_Handler();
 8000994:	f000 f962 	bl	8000c5c <Error_Handler>
  }
  /* USER CODE BEGIN TIM2_Init 2 */

  /* USER CODE END TIM2_Init 2 */
  HAL_TIM_MspPostInit(&htim2);
 8000998:	4803      	ldr	r0, [pc, #12]	@ (80009a8 <MX_TIM2_Init+0xe8>)
 800099a:	f000 fb7f 	bl	800109c <HAL_TIM_MspPostInit>

}
 800099e:	bf00      	nop
 80009a0:	3738      	adds	r7, #56	@ 0x38
 80009a2:	46bd      	mov	sp, r7
 80009a4:	bd80      	pop	{r7, pc}
 80009a6:	bf00      	nop
 80009a8:	200004f8 	.word	0x200004f8

080009ac <MX_TIM3_Init>:
  * @brief TIM3 Initialization Function
  * @param None
  * @retval None
  */
static void MX_TIM3_Init(void)
{
 80009ac:	b580      	push	{r7, lr}
 80009ae:	b086      	sub	sp, #24
 80009b0:	af00      	add	r7, sp, #0

  /* USER CODE BEGIN TIM3_Init 0 */

  /* USER CODE END TIM3_Init 0 */

  TIM_ClockConfigTypeDef sClockSourceConfig = {0};
 80009b2:	f107 0308 	add.w	r3, r7, #8
 80009b6:	2200      	movs	r2, #0
 80009b8:	601a      	str	r2, [r3, #0]
 80009ba:	605a      	str	r2, [r3, #4]
 80009bc:	609a      	str	r2, [r3, #8]
 80009be:	60da      	str	r2, [r3, #12]
  TIM_MasterConfigTypeDef sMasterConfig = {0};
 80009c0:	463b      	mov	r3, r7
 80009c2:	2200      	movs	r2, #0
 80009c4:	601a      	str	r2, [r3, #0]
 80009c6:	605a      	str	r2, [r3, #4]

  /* USER CODE BEGIN TIM3_Init 1 */

  /* USER CODE END TIM3_Init 1 */
  htim3.Instance = TIM3;
 80009c8:	4b1d      	ldr	r3, [pc, #116]	@ (8000a40 <MX_TIM3_Init+0x94>)
 80009ca:	4a1e      	ldr	r2, [pc, #120]	@ (8000a44 <MX_TIM3_Init+0x98>)
 80009cc:	601a      	str	r2, [r3, #0]
  htim3.Init.Prescaler = 9999;
 80009ce:	4b1c      	ldr	r3, [pc, #112]	@ (8000a40 <MX_TIM3_Init+0x94>)
 80009d0:	f242 720f 	movw	r2, #9999	@ 0x270f
 80009d4:	605a      	str	r2, [r3, #4]
  htim3.Init.CounterMode = TIM_COUNTERMODE_UP;
 80009d6:	4b1a      	ldr	r3, [pc, #104]	@ (8000a40 <MX_TIM3_Init+0x94>)
 80009d8:	2200      	movs	r2, #0
 80009da:	609a      	str	r2, [r3, #8]
  htim3.Init.Period = 149;
 80009dc:	4b18      	ldr	r3, [pc, #96]	@ (8000a40 <MX_TIM3_Init+0x94>)
 80009de:	2295      	movs	r2, #149	@ 0x95
 80009e0:	60da      	str	r2, [r3, #12]
  htim3.Init.ClockDivision = TIM_CLOCKDIVISION_DIV1;
 80009e2:	4b17      	ldr	r3, [pc, #92]	@ (8000a40 <MX_TIM3_Init+0x94>)
 80009e4:	2200      	movs	r2, #0
 80009e6:	611a      	str	r2, [r3, #16]
  htim3.Init.AutoReloadPreload = TIM_AUTORELOAD_PRELOAD_DISABLE;
 80009e8:	4b15      	ldr	r3, [pc, #84]	@ (8000a40 <MX_TIM3_Init+0x94>)
 80009ea:	2200      	movs	r2, #0
 80009ec:	619a      	str	r2, [r3, #24]
  if (HAL_TIM_Base_Init(&htim3) != HAL_OK)
 80009ee:	4814      	ldr	r0, [pc, #80]	@ (8000a40 <MX_TIM3_Init+0x94>)
 80009f0:	f005 fb8c 	bl	800610c <HAL_TIM_Base_Init>
 80009f4:	4603      	mov	r3, r0
 80009f6:	2b00      	cmp	r3, #0
 80009f8:	d001      	beq.n	80009fe <MX_TIM3_Init+0x52>
  {
    Error_Handler();
 80009fa:	f000 f92f 	bl	8000c5c <Error_Handler>
  }
  sClockSourceConfig.ClockSource = TIM_CLOCKSOURCE_INTERNAL;
 80009fe:	f44f 5380 	mov.w	r3, #4096	@ 0x1000
 8000a02:	60bb      	str	r3, [r7, #8]
  if (HAL_TIM_ConfigClockSource(&htim3, &sClockSourceConfig) != HAL_OK)
 8000a04:	f107 0308 	add.w	r3, r7, #8
 8000a08:	4619      	mov	r1, r3
 8000a0a:	480d      	ldr	r0, [pc, #52]	@ (8000a40 <MX_TIM3_Init+0x94>)
 8000a0c:	f005 fe4a 	bl	80066a4 <HAL_TIM_ConfigClockSource>
 8000a10:	4603      	mov	r3, r0
 8000a12:	2b00      	cmp	r3, #0
 8000a14:	d001      	beq.n	8000a1a <MX_TIM3_Init+0x6e>
  {
    Error_Handler();
 8000a16:	f000 f921 	bl	8000c5c <Error_Handler>
  }
  sMasterConfig.MasterOutputTrigger = TIM_TRGO_RESET;
 8000a1a:	2300      	movs	r3, #0
 8000a1c:	603b      	str	r3, [r7, #0]
  sMasterConfig.MasterSlaveMode = TIM_MASTERSLAVEMODE_DISABLE;
 8000a1e:	2300      	movs	r3, #0
 8000a20:	607b      	str	r3, [r7, #4]
  if (HAL_TIMEx_MasterConfigSynchronization(&htim3, &sMasterConfig) != HAL_OK)
 8000a22:	463b      	mov	r3, r7
 8000a24:	4619      	mov	r1, r3
 8000a26:	4806      	ldr	r0, [pc, #24]	@ (8000a40 <MX_TIM3_Init+0x94>)
 8000a28:	f006 fa22 	bl	8006e70 <HAL_TIMEx_MasterConfigSynchronization>
 8000a2c:	4603      	mov	r3, r0
 8000a2e:	2b00      	cmp	r3, #0
 8000a30:	d001      	beq.n	8000a36 <MX_TIM3_Init+0x8a>
  {
    Error_Handler();
 8000a32:	f000 f913 	bl	8000c5c <Error_Handler>
  }
  /* USER CODE BEGIN TIM3_Init 2 */

  /* USER CODE END TIM3_Init 2 */

}
 8000a36:	bf00      	nop
 8000a38:	3718      	adds	r7, #24
 8000a3a:	46bd      	mov	sp, r7
 8000a3c:	bd80      	pop	{r7, pc}
 8000a3e:	bf00      	nop
 8000a40:	20000540 	.word	0x20000540
 8000a44:	40000400 	.word	0x40000400

08000a48 <MX_DMA_Init>:

/**
  * Enable DMA controller clock
  */
static void MX_DMA_Init(void)
{
 8000a48:	b580      	push	{r7, lr}
 8000a4a:	b082      	sub	sp, #8
 8000a4c:	af00      	add	r7, sp, #0

  /* DMA controller clock enable */
  __HAL_RCC_DMA1_CLK_ENABLE();
 8000a4e:	2300      	movs	r3, #0
 8000a50:	607b      	str	r3, [r7, #4]
 8000a52:	4b17      	ldr	r3, [pc, #92]	@ (8000ab0 <MX_DMA_Init+0x68>)
 8000a54:	6b1b      	ldr	r3, [r3, #48]	@ 0x30
 8000a56:	4a16      	ldr	r2, [pc, #88]	@ (8000ab0 <MX_DMA_Init+0x68>)
 8000a58:	f443 1300 	orr.w	r3, r3, #2097152	@ 0x200000
 8000a5c:	6313      	str	r3, [r2, #48]	@ 0x30
 8000a5e:	4b14      	ldr	r3, [pc, #80]	@ (8000ab0 <MX_DMA_Init+0x68>)
 8000a60:	6b1b      	ldr	r3, [r3, #48]	@ 0x30
 8000a62:	f403 1300 	and.w	r3, r3, #2097152	@ 0x200000
 8000a66:	607b      	str	r3, [r7, #4]
 8000a68:	687b      	ldr	r3, [r7, #4]
  __HAL_RCC_DMA2_CLK_ENABLE();
 8000a6a:	2300      	movs	r3, #0
 8000a6c:	603b      	str	r3, [r7, #0]
 8000a6e:	4b10      	ldr	r3, [pc, #64]	@ (8000ab0 <MX_DMA_Init+0x68>)
 8000a70:	6b1b      	ldr	r3, [r3, #48]	@ 0x30
 8000a72:	4a0f      	ldr	r2, [pc, #60]	@ (8000ab0 <MX_DMA_Init+0x68>)
 8000a74:	f443 0380 	orr.w	r3, r3, #4194304	@ 0x400000
 8000a78:	6313      	str	r3, [r2, #48]	@ 0x30
 8000a7a:	4b0d      	ldr	r3, [pc, #52]	@ (8000ab0 <MX_DMA_Init+0x68>)
 8000a7c:	6b1b      	ldr	r3, [r3, #48]	@ 0x30
 8000a7e:	f403 0380 	and.w	r3, r3, #4194304	@ 0x400000
 8000a82:	603b      	str	r3, [r7, #0]
 8000a84:	683b      	ldr	r3, [r7, #0]

  /* DMA interrupt init */
  /* DMA1_Stream4_IRQn interrupt configuration */
  HAL_NVIC_SetPriority(DMA1_Stream4_IRQn, 0, 0);
 8000a86:	2200      	movs	r2, #0
 8000a88:	2100      	movs	r1, #0
 8000a8a:	200f      	movs	r0, #15
 8000a8c:	f001 ff0f 	bl	80028ae <HAL_NVIC_SetPriority>
  HAL_NVIC_EnableIRQ(DMA1_Stream4_IRQn);
 8000a90:	200f      	movs	r0, #15
 8000a92:	f001 ff28 	bl	80028e6 <HAL_NVIC_EnableIRQ>
  /* DMA2_Stream0_IRQn interrupt configuration */
  HAL_NVIC_SetPriority(DMA2_Stream0_IRQn, 0, 0);
 8000a96:	2200      	movs	r2, #0
 8000a98:	2100      	movs	r1, #0
 8000a9a:	2038      	movs	r0, #56	@ 0x38
 8000a9c:	f001 ff07 	bl	80028ae <HAL_NVIC_SetPriority>
  HAL_NVIC_EnableIRQ(DMA2_Stream0_IRQn);
 8000aa0:	2038      	movs	r0, #56	@ 0x38
 8000aa2:	f001 ff20 	bl	80028e6 <HAL_NVIC_EnableIRQ>

}
 8000aa6:	bf00      	nop
 8000aa8:	3708      	adds	r7, #8
 8000aaa:	46bd      	mov	sp, r7
 8000aac:	bd80      	pop	{r7, pc}
 8000aae:	bf00      	nop
 8000ab0:	40023800 	.word	0x40023800

08000ab4 <MX_GPIO_Init>:
  * @brief GPIO Initialization Function
  * @param None
  * @retval None
  */
static void MX_GPIO_Init(void)
{
 8000ab4:	b580      	push	{r7, lr}
 8000ab6:	b08a      	sub	sp, #40	@ 0x28
 8000ab8:	af00      	add	r7, sp, #0
  GPIO_InitTypeDef GPIO_InitStruct = {0};
 8000aba:	f107 0314 	add.w	r3, r7, #20
 8000abe:	2200      	movs	r2, #0
 8000ac0:	601a      	str	r2, [r3, #0]
 8000ac2:	605a      	str	r2, [r3, #4]
 8000ac4:	609a      	str	r2, [r3, #8]
 8000ac6:	60da      	str	r2, [r3, #12]
 8000ac8:	611a      	str	r2, [r3, #16]
/* USER CODE BEGIN MX_GPIO_Init_1 */
/* USER CODE END MX_GPIO_Init_1 */

  /* GPIO Ports Clock Enable */
  __HAL_RCC_GPIOC_CLK_ENABLE();
 8000aca:	2300      	movs	r3, #0
 8000acc:	613b      	str	r3, [r7, #16]
 8000ace:	4b5f      	ldr	r3, [pc, #380]	@ (8000c4c <MX_GPIO_Init+0x198>)
 8000ad0:	6b1b      	ldr	r3, [r3, #48]	@ 0x30
 8000ad2:	4a5e      	ldr	r2, [pc, #376]	@ (8000c4c <MX_GPIO_Init+0x198>)
 8000ad4:	f043 0304 	orr.w	r3, r3, #4
 8000ad8:	6313      	str	r3, [r2, #48]	@ 0x30
 8000ada:	4b5c      	ldr	r3, [pc, #368]	@ (8000c4c <MX_GPIO_Init+0x198>)
 8000adc:	6b1b      	ldr	r3, [r3, #48]	@ 0x30
 8000ade:	f003 0304 	and.w	r3, r3, #4
 8000ae2:	613b      	str	r3, [r7, #16]
 8000ae4:	693b      	ldr	r3, [r7, #16]
  __HAL_RCC_GPIOH_CLK_ENABLE();
 8000ae6:	2300      	movs	r3, #0
 8000ae8:	60fb      	str	r3, [r7, #12]
 8000aea:	4b58      	ldr	r3, [pc, #352]	@ (8000c4c <MX_GPIO_Init+0x198>)
 8000aec:	6b1b      	ldr	r3, [r3, #48]	@ 0x30
 8000aee:	4a57      	ldr	r2, [pc, #348]	@ (8000c4c <MX_GPIO_Init+0x198>)
 8000af0:	f043 0380 	orr.w	r3, r3, #128	@ 0x80
 8000af4:	6313      	str	r3, [r2, #48]	@ 0x30
 8000af6:	4b55      	ldr	r3, [pc, #340]	@ (8000c4c <MX_GPIO_Init+0x198>)
 8000af8:	6b1b      	ldr	r3, [r3, #48]	@ 0x30
 8000afa:	f003 0380 	and.w	r3, r3, #128	@ 0x80
 8000afe:	60fb      	str	r3, [r7, #12]
 8000b00:	68fb      	ldr	r3, [r7, #12]
  __HAL_RCC_GPIOA_CLK_ENABLE();
 8000b02:	2300      	movs	r3, #0
 8000b04:	60bb      	str	r3, [r7, #8]
 8000b06:	4b51      	ldr	r3, [pc, #324]	@ (8000c4c <MX_GPIO_Init+0x198>)
 8000b08:	6b1b      	ldr	r3, [r3, #48]	@ 0x30
 8000b0a:	4a50      	ldr	r2, [pc, #320]	@ (8000c4c <MX_GPIO_Init+0x198>)
 8000b0c:	f043 0301 	orr.w	r3, r3, #1
 8000b10:	6313      	str	r3, [r2, #48]	@ 0x30
 8000b12:	4b4e      	ldr	r3, [pc, #312]	@ (8000c4c <MX_GPIO_Init+0x198>)
 8000b14:	6b1b      	ldr	r3, [r3, #48]	@ 0x30
 8000b16:	f003 0301 	and.w	r3, r3, #1
 8000b1a:	60bb      	str	r3, [r7, #8]
 8000b1c:	68bb      	ldr	r3, [r7, #8]
  __HAL_RCC_GPIOB_CLK_ENABLE();
 8000b1e:	2300      	movs	r3, #0
 8000b20:	607b      	str	r3, [r7, #4]
 8000b22:	4b4a      	ldr	r3, [pc, #296]	@ (8000c4c <MX_GPIO_Init+0x198>)
 8000b24:	6b1b      	ldr	r3, [r3, #48]	@ 0x30
 8000b26:	4a49      	ldr	r2, [pc, #292]	@ (8000c4c <MX_GPIO_Init+0x198>)
 8000b28:	f043 0302 	orr.w	r3, r3, #2
 8000b2c:	6313      	str	r3, [r2, #48]	@ 0x30
 8000b2e:	4b47      	ldr	r3, [pc, #284]	@ (8000c4c <MX_GPIO_Init+0x198>)
 8000b30:	6b1b      	ldr	r3, [r3, #48]	@ 0x30
 8000b32:	f003 0302 	and.w	r3, r3, #2
 8000b36:	607b      	str	r3, [r7, #4]
 8000b38:	687b      	ldr	r3, [r7, #4]

  /*Configure GPIO pin Output Level */
  HAL_GPIO_WritePin(GPIOA, LD2_Pin|DISPL_LED_Pin|DISPL_DC_Pin, GPIO_PIN_RESET);
 8000b3a:	2200      	movs	r2, #0
 8000b3c:	21e0      	movs	r1, #224	@ 0xe0
 8000b3e:	4844      	ldr	r0, [pc, #272]	@ (8000c50 <MX_GPIO_Init+0x19c>)
 8000b40:	f002 fc62 	bl	8003408 <HAL_GPIO_WritePin>

  /*Configure GPIO pin Output Level */
  HAL_GPIO_WritePin(DISPL_CS_GPIO_Port, DISPL_CS_Pin, GPIO_PIN_SET);
 8000b44:	2201      	movs	r2, #1
 8000b46:	2180      	movs	r1, #128	@ 0x80
 8000b48:	4842      	ldr	r0, [pc, #264]	@ (8000c54 <MX_GPIO_Init+0x1a0>)
 8000b4a:	f002 fc5d 	bl	8003408 <HAL_GPIO_WritePin>

  /*Configure GPIO pin Output Level */
  HAL_GPIO_WritePin(TOUCH_CS_GPIO_Port, TOUCH_CS_Pin, GPIO_PIN_SET);
 8000b4e:	2201      	movs	r2, #1
 8000b50:	f44f 7100 	mov.w	r1, #512	@ 0x200
 8000b54:	483e      	ldr	r0, [pc, #248]	@ (8000c50 <MX_GPIO_Init+0x19c>)
 8000b56:	f002 fc57 	bl	8003408 <HAL_GPIO_WritePin>

  /*Configure GPIO pin Output Level */
  HAL_GPIO_WritePin(GPIOB, DISPL_RST_Pin|GPIO_PIN_8, GPIO_PIN_RESET);
 8000b5a:	2200      	movs	r2, #0
 8000b5c:	f44f 71a0 	mov.w	r1, #320	@ 0x140
 8000b60:	483d      	ldr	r0, [pc, #244]	@ (8000c58 <MX_GPIO_Init+0x1a4>)
 8000b62:	f002 fc51 	bl	8003408 <HAL_GPIO_WritePin>

  /*Configure GPIO pin : B1_Pin */
  GPIO_InitStruct.Pin = B1_Pin;
 8000b66:	f44f 5300 	mov.w	r3, #8192	@ 0x2000
 8000b6a:	617b      	str	r3, [r7, #20]
  GPIO_InitStruct.Mode = GPIO_MODE_IT_FALLING;
 8000b6c:	f44f 1304 	mov.w	r3, #2162688	@ 0x210000
 8000b70:	61bb      	str	r3, [r7, #24]
  GPIO_InitStruct.Pull = GPIO_NOPULL;
 8000b72:	2300      	movs	r3, #0
 8000b74:	61fb      	str	r3, [r7, #28]
  HAL_GPIO_Init(B1_GPIO_Port, &GPIO_InitStruct);
 8000b76:	f107 0314 	add.w	r3, r7, #20
 8000b7a:	4619      	mov	r1, r3
 8000b7c:	4835      	ldr	r0, [pc, #212]	@ (8000c54 <MX_GPIO_Init+0x1a0>)
 8000b7e:	f002 fa97 	bl	80030b0 <HAL_GPIO_Init>

  /*Configure GPIO pins : USART_TX_Pin USART_RX_Pin */
  GPIO_InitStruct.Pin = USART_TX_Pin|USART_RX_Pin;
 8000b82:	230c      	movs	r3, #12
 8000b84:	617b      	str	r3, [r7, #20]
  GPIO_InitStruct.Mode = GPIO_MODE_AF_PP;
 8000b86:	2302      	movs	r3, #2
 8000b88:	61bb      	str	r3, [r7, #24]
  GPIO_InitStruct.Pull = GPIO_NOPULL;
 8000b8a:	2300      	movs	r3, #0
 8000b8c:	61fb      	str	r3, [r7, #28]
  GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_VERY_HIGH;
 8000b8e:	2303      	movs	r3, #3
 8000b90:	623b      	str	r3, [r7, #32]
  GPIO_InitStruct.Alternate = GPIO_AF7_USART2;
 8000b92:	2307      	movs	r3, #7
 8000b94:	627b      	str	r3, [r7, #36]	@ 0x24
  HAL_GPIO_Init(GPIOA, &GPIO_InitStruct);
 8000b96:	f107 0314 	add.w	r3, r7, #20
 8000b9a:	4619      	mov	r1, r3
 8000b9c:	482c      	ldr	r0, [pc, #176]	@ (8000c50 <MX_GPIO_Init+0x19c>)
 8000b9e:	f002 fa87 	bl	80030b0 <HAL_GPIO_Init>

  /*Configure GPIO pins : LD2_Pin DISPL_LED_Pin DISPL_DC_Pin TOUCH_CS_Pin */
  GPIO_InitStruct.Pin = LD2_Pin|DISPL_LED_Pin|DISPL_DC_Pin|TOUCH_CS_Pin;
 8000ba2:	f44f 7338 	mov.w	r3, #736	@ 0x2e0
 8000ba6:	617b      	str	r3, [r7, #20]
  GPIO_InitStruct.Mode = GPIO_MODE_OUTPUT_PP;
 8000ba8:	2301      	movs	r3, #1
 8000baa:	61bb      	str	r3, [r7, #24]
  GPIO_InitStruct.Pull = GPIO_NOPULL;
 8000bac:	2300      	movs	r3, #0
 8000bae:	61fb      	str	r3, [r7, #28]
  GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_LOW;
 8000bb0:	2300      	movs	r3, #0
 8000bb2:	623b      	str	r3, [r7, #32]
  HAL_GPIO_Init(GPIOA, &GPIO_InitStruct);
 8000bb4:	f107 0314 	add.w	r3, r7, #20
 8000bb8:	4619      	mov	r1, r3
 8000bba:	4825      	ldr	r0, [pc, #148]	@ (8000c50 <MX_GPIO_Init+0x19c>)
 8000bbc:	f002 fa78 	bl	80030b0 <HAL_GPIO_Init>

  /*Configure GPIO pin : DISPL_CS_Pin */
  GPIO_InitStruct.Pin = DISPL_CS_Pin;
 8000bc0:	2380      	movs	r3, #128	@ 0x80
 8000bc2:	617b      	str	r3, [r7, #20]
  GPIO_InitStruct.Mode = GPIO_MODE_OUTPUT_PP;
 8000bc4:	2301      	movs	r3, #1
 8000bc6:	61bb      	str	r3, [r7, #24]
  GPIO_InitStruct.Pull = GPIO_NOPULL;
 8000bc8:	2300      	movs	r3, #0
 8000bca:	61fb      	str	r3, [r7, #28]
  GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_LOW;
 8000bcc:	2300      	movs	r3, #0
 8000bce:	623b      	str	r3, [r7, #32]
  HAL_GPIO_Init(DISPL_CS_GPIO_Port, &GPIO_InitStruct);
 8000bd0:	f107 0314 	add.w	r3, r7, #20
 8000bd4:	4619      	mov	r1, r3
 8000bd6:	481f      	ldr	r0, [pc, #124]	@ (8000c54 <MX_GPIO_Init+0x1a0>)
 8000bd8:	f002 fa6a 	bl	80030b0 <HAL_GPIO_Init>

  /*Configure GPIO pin : TOUCH_INT_Pin */
  GPIO_InitStruct.Pin = TOUCH_INT_Pin;
 8000bdc:	f44f 7380 	mov.w	r3, #256	@ 0x100
 8000be0:	617b      	str	r3, [r7, #20]
  GPIO_InitStruct.Mode = GPIO_MODE_IT_FALLING;
 8000be2:	f44f 1304 	mov.w	r3, #2162688	@ 0x210000
 8000be6:	61bb      	str	r3, [r7, #24]
  GPIO_InitStruct.Pull = GPIO_PULLUP;
 8000be8:	2301      	movs	r3, #1
 8000bea:	61fb      	str	r3, [r7, #28]
  HAL_GPIO_Init(TOUCH_INT_GPIO_Port, &GPIO_InitStruct);
 8000bec:	f107 0314 	add.w	r3, r7, #20
 8000bf0:	4619      	mov	r1, r3
 8000bf2:	4817      	ldr	r0, [pc, #92]	@ (8000c50 <MX_GPIO_Init+0x19c>)
 8000bf4:	f002 fa5c 	bl	80030b0 <HAL_GPIO_Init>

  /*Configure GPIO pin : DISPL_RST_Pin */
  GPIO_InitStruct.Pin = DISPL_RST_Pin;
 8000bf8:	2340      	movs	r3, #64	@ 0x40
 8000bfa:	617b      	str	r3, [r7, #20]
  GPIO_InitStruct.Mode = GPIO_MODE_OUTPUT_PP;
 8000bfc:	2301      	movs	r3, #1
 8000bfe:	61bb      	str	r3, [r7, #24]
  GPIO_InitStruct.Pull = GPIO_NOPULL;
 8000c00:	2300      	movs	r3, #0
 8000c02:	61fb      	str	r3, [r7, #28]
  GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_LOW;
 8000c04:	2300      	movs	r3, #0
 8000c06:	623b      	str	r3, [r7, #32]
  HAL_GPIO_Init(DISPL_RST_GPIO_Port, &GPIO_InitStruct);
 8000c08:	f107 0314 	add.w	r3, r7, #20
 8000c0c:	4619      	mov	r1, r3
 8000c0e:	4812      	ldr	r0, [pc, #72]	@ (8000c58 <MX_GPIO_Init+0x1a4>)
 8000c10:	f002 fa4e 	bl	80030b0 <HAL_GPIO_Init>

  /*Configure GPIO pin : PB8 */
  GPIO_InitStruct.Pin = GPIO_PIN_8;
 8000c14:	f44f 7380 	mov.w	r3, #256	@ 0x100
 8000c18:	617b      	str	r3, [r7, #20]
  GPIO_InitStruct.Mode = GPIO_MODE_OUTPUT_PP;
 8000c1a:	2301      	movs	r3, #1
 8000c1c:	61bb      	str	r3, [r7, #24]
  GPIO_InitStruct.Pull = GPIO_NOPULL;
 8000c1e:	2300      	movs	r3, #0
 8000c20:	61fb      	str	r3, [r7, #28]
  GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_VERY_HIGH;
 8000c22:	2303      	movs	r3, #3
 8000c24:	623b      	str	r3, [r7, #32]
  HAL_GPIO_Init(GPIOB, &GPIO_InitStruct);
 8000c26:	f107 0314 	add.w	r3, r7, #20
 8000c2a:	4619      	mov	r1, r3
 8000c2c:	480a      	ldr	r0, [pc, #40]	@ (8000c58 <MX_GPIO_Init+0x1a4>)
 8000c2e:	f002 fa3f 	bl	80030b0 <HAL_GPIO_Init>

  /* EXTI interrupt init*/
  HAL_NVIC_SetPriority(EXTI9_5_IRQn, 0, 0);
 8000c32:	2200      	movs	r2, #0
 8000c34:	2100      	movs	r1, #0
 8000c36:	2017      	movs	r0, #23
 8000c38:	f001 fe39 	bl	80028ae <HAL_NVIC_SetPriority>
  HAL_NVIC_EnableIRQ(EXTI9_5_IRQn);
 8000c3c:	2017      	movs	r0, #23
 8000c3e:	f001 fe52 	bl	80028e6 <HAL_NVIC_EnableIRQ>

/* USER CODE BEGIN MX_GPIO_Init_2 */
/* USER CODE END MX_GPIO_Init_2 */
}
 8000c42:	bf00      	nop
 8000c44:	3728      	adds	r7, #40	@ 0x28
 8000c46:	46bd      	mov	sp, r7
 8000c48:	bd80      	pop	{r7, pc}
 8000c4a:	bf00      	nop
 8000c4c:	40023800 	.word	0x40023800
 8000c50:	40020000 	.word	0x40020000
 8000c54:	40020800 	.word	0x40020800
 8000c58:	40020400 	.word	0x40020400

08000c5c <Error_Handler>:
/**
  * @brief  This function is executed in case of error occurrence.
  * @retval None
  */
void Error_Handler(void)
{
 8000c5c:	b480      	push	{r7}
 8000c5e:	af00      	add	r7, sp, #0
  \details Disables IRQ interrupts by setting special-purpose register PRIMASK.
           Can only be executed in Privileged modes.
 */
__STATIC_FORCEINLINE void __disable_irq(void)
{
  __ASM volatile ("cpsid i" : : : "memory");
 8000c60:	b672      	cpsid	i
}
 8000c62:	bf00      	nop
  /* USER CODE BEGIN Error_Handler_Debug */
  /* User can add his own implementation to report the HAL error return state */
  __disable_irq();
  while (1)
 8000c64:	bf00      	nop
 8000c66:	e7fd      	b.n	8000c64 <Error_Handler+0x8>

08000c68 <HAL_MspInit>:
void HAL_TIM_MspPostInit(TIM_HandleTypeDef *htim);
                    /**
  * Initializes the Global MSP.
  */
void HAL_MspInit(void)
{
 8000c68:	b480      	push	{r7}
 8000c6a:	b083      	sub	sp, #12
 8000c6c:	af00      	add	r7, sp, #0

  /* USER CODE BEGIN MspInit 0 */

  /* USER CODE END MspInit 0 */

  __HAL_RCC_SYSCFG_CLK_ENABLE();
 8000c6e:	2300      	movs	r3, #0
 8000c70:	607b      	str	r3, [r7, #4]
 8000c72:	4b10      	ldr	r3, [pc, #64]	@ (8000cb4 <HAL_MspInit+0x4c>)
 8000c74:	6c5b      	ldr	r3, [r3, #68]	@ 0x44
 8000c76:	4a0f      	ldr	r2, [pc, #60]	@ (8000cb4 <HAL_MspInit+0x4c>)
 8000c78:	f443 4380 	orr.w	r3, r3, #16384	@ 0x4000
 8000c7c:	6453      	str	r3, [r2, #68]	@ 0x44
 8000c7e:	4b0d      	ldr	r3, [pc, #52]	@ (8000cb4 <HAL_MspInit+0x4c>)
 8000c80:	6c5b      	ldr	r3, [r3, #68]	@ 0x44
 8000c82:	f403 4380 	and.w	r3, r3, #16384	@ 0x4000
 8000c86:	607b      	str	r3, [r7, #4]
 8000c88:	687b      	ldr	r3, [r7, #4]
  __HAL_RCC_PWR_CLK_ENABLE();
 8000c8a:	2300      	movs	r3, #0
 8000c8c:	603b      	str	r3, [r7, #0]
 8000c8e:	4b09      	ldr	r3, [pc, #36]	@ (8000cb4 <HAL_MspInit+0x4c>)
 8000c90:	6c1b      	ldr	r3, [r3, #64]	@ 0x40
 8000c92:	4a08      	ldr	r2, [pc, #32]	@ (8000cb4 <HAL_MspInit+0x4c>)
 8000c94:	f043 5380 	orr.w	r3, r3, #268435456	@ 0x10000000
 8000c98:	6413      	str	r3, [r2, #64]	@ 0x40
 8000c9a:	4b06      	ldr	r3, [pc, #24]	@ (8000cb4 <HAL_MspInit+0x4c>)
 8000c9c:	6c1b      	ldr	r3, [r3, #64]	@ 0x40
 8000c9e:	f003 5380 	and.w	r3, r3, #268435456	@ 0x10000000
 8000ca2:	603b      	str	r3, [r7, #0]
 8000ca4:	683b      	ldr	r3, [r7, #0]
  /* System interrupt init*/

  /* USER CODE BEGIN MspInit 1 */

  /* USER CODE END MspInit 1 */
}
 8000ca6:	bf00      	nop
 8000ca8:	370c      	adds	r7, #12
 8000caa:	46bd      	mov	sp, r7
 8000cac:	f85d 7b04 	ldr.w	r7, [sp], #4
 8000cb0:	4770      	bx	lr
 8000cb2:	bf00      	nop
 8000cb4:	40023800 	.word	0x40023800

08000cb8 <HAL_ADC_MspInit>:
* This function configures the hardware resources used in this example
* @param hadc: ADC handle pointer
* @retval None
*/
void HAL_ADC_MspInit(ADC_HandleTypeDef* hadc)
{
 8000cb8:	b580      	push	{r7, lr}
 8000cba:	b08a      	sub	sp, #40	@ 0x28
 8000cbc:	af00      	add	r7, sp, #0
 8000cbe:	6078      	str	r0, [r7, #4]
  GPIO_InitTypeDef GPIO_InitStruct = {0};
 8000cc0:	f107 0314 	add.w	r3, r7, #20
 8000cc4:	2200      	movs	r2, #0
 8000cc6:	601a      	str	r2, [r3, #0]
 8000cc8:	605a      	str	r2, [r3, #4]
 8000cca:	609a      	str	r2, [r3, #8]
 8000ccc:	60da      	str	r2, [r3, #12]
 8000cce:	611a      	str	r2, [r3, #16]
  if(hadc->Instance==ADC1)
 8000cd0:	687b      	ldr	r3, [r7, #4]
 8000cd2:	681b      	ldr	r3, [r3, #0]
 8000cd4:	4a2f      	ldr	r2, [pc, #188]	@ (8000d94 <HAL_ADC_MspInit+0xdc>)
 8000cd6:	4293      	cmp	r3, r2
 8000cd8:	d157      	bne.n	8000d8a <HAL_ADC_MspInit+0xd2>
  {
  /* USER CODE BEGIN ADC1_MspInit 0 */

  /* USER CODE END ADC1_MspInit 0 */
    /* Peripheral clock enable */
    __HAL_RCC_ADC1_CLK_ENABLE();
 8000cda:	2300      	movs	r3, #0
 8000cdc:	613b      	str	r3, [r7, #16]
 8000cde:	4b2e      	ldr	r3, [pc, #184]	@ (8000d98 <HAL_ADC_MspInit+0xe0>)
 8000ce0:	6c5b      	ldr	r3, [r3, #68]	@ 0x44
 8000ce2:	4a2d      	ldr	r2, [pc, #180]	@ (8000d98 <HAL_ADC_MspInit+0xe0>)
 8000ce4:	f443 7380 	orr.w	r3, r3, #256	@ 0x100
 8000ce8:	6453      	str	r3, [r2, #68]	@ 0x44
 8000cea:	4b2b      	ldr	r3, [pc, #172]	@ (8000d98 <HAL_ADC_MspInit+0xe0>)
 8000cec:	6c5b      	ldr	r3, [r3, #68]	@ 0x44
 8000cee:	f403 7380 	and.w	r3, r3, #256	@ 0x100
 8000cf2:	613b      	str	r3, [r7, #16]
 8000cf4:	693b      	ldr	r3, [r7, #16]

    __HAL_RCC_GPIOC_CLK_ENABLE();
 8000cf6:	2300      	movs	r3, #0
 8000cf8:	60fb      	str	r3, [r7, #12]
 8000cfa:	4b27      	ldr	r3, [pc, #156]	@ (8000d98 <HAL_ADC_MspInit+0xe0>)
 8000cfc:	6b1b      	ldr	r3, [r3, #48]	@ 0x30
 8000cfe:	4a26      	ldr	r2, [pc, #152]	@ (8000d98 <HAL_ADC_MspInit+0xe0>)
 8000d00:	f043 0304 	orr.w	r3, r3, #4
 8000d04:	6313      	str	r3, [r2, #48]	@ 0x30
 8000d06:	4b24      	ldr	r3, [pc, #144]	@ (8000d98 <HAL_ADC_MspInit+0xe0>)
 8000d08:	6b1b      	ldr	r3, [r3, #48]	@ 0x30
 8000d0a:	f003 0304 	and.w	r3, r3, #4
 8000d0e:	60fb      	str	r3, [r7, #12]
 8000d10:	68fb      	ldr	r3, [r7, #12]
    /**ADC1 GPIO Configuration
    PC0     ------> ADC1_IN10
    */
    GPIO_InitStruct.Pin = GPIO_PIN_0;
 8000d12:	2301      	movs	r3, #1
 8000d14:	617b      	str	r3, [r7, #20]
    GPIO_InitStruct.Mode = GPIO_MODE_ANALOG;
 8000d16:	2303      	movs	r3, #3
 8000d18:	61bb      	str	r3, [r7, #24]
    GPIO_InitStruct.Pull = GPIO_NOPULL;
 8000d1a:	2300      	movs	r3, #0
 8000d1c:	61fb      	str	r3, [r7, #28]
    HAL_GPIO_Init(GPIOC, &GPIO_InitStruct);
 8000d1e:	f107 0314 	add.w	r3, r7, #20
 8000d22:	4619      	mov	r1, r3
 8000d24:	481d      	ldr	r0, [pc, #116]	@ (8000d9c <HAL_ADC_MspInit+0xe4>)
 8000d26:	f002 f9c3 	bl	80030b0 <HAL_GPIO_Init>

    /* ADC1 DMA Init */
    /* ADC1 Init */
    hdma_adc1.Instance = DMA2_Stream0;
 8000d2a:	4b1d      	ldr	r3, [pc, #116]	@ (8000da0 <HAL_ADC_MspInit+0xe8>)
 8000d2c:	4a1d      	ldr	r2, [pc, #116]	@ (8000da4 <HAL_ADC_MspInit+0xec>)
 8000d2e:	601a      	str	r2, [r3, #0]
    hdma_adc1.Init.Channel = DMA_CHANNEL_0;
 8000d30:	4b1b      	ldr	r3, [pc, #108]	@ (8000da0 <HAL_ADC_MspInit+0xe8>)
 8000d32:	2200      	movs	r2, #0
 8000d34:	605a      	str	r2, [r3, #4]
    hdma_adc1.Init.Direction = DMA_PERIPH_TO_MEMORY;
 8000d36:	4b1a      	ldr	r3, [pc, #104]	@ (8000da0 <HAL_ADC_MspInit+0xe8>)
 8000d38:	2200      	movs	r2, #0
 8000d3a:	609a      	str	r2, [r3, #8]
    hdma_adc1.Init.PeriphInc = DMA_PINC_DISABLE;
 8000d3c:	4b18      	ldr	r3, [pc, #96]	@ (8000da0 <HAL_ADC_MspInit+0xe8>)
 8000d3e:	2200      	movs	r2, #0
 8000d40:	60da      	str	r2, [r3, #12]
    hdma_adc1.Init.MemInc = DMA_MINC_ENABLE;
 8000d42:	4b17      	ldr	r3, [pc, #92]	@ (8000da0 <HAL_ADC_MspInit+0xe8>)
 8000d44:	f44f 6280 	mov.w	r2, #1024	@ 0x400
 8000d48:	611a      	str	r2, [r3, #16]
    hdma_adc1.Init.PeriphDataAlignment = DMA_PDATAALIGN_HALFWORD;
 8000d4a:	4b15      	ldr	r3, [pc, #84]	@ (8000da0 <HAL_ADC_MspInit+0xe8>)
 8000d4c:	f44f 6200 	mov.w	r2, #2048	@ 0x800
 8000d50:	615a      	str	r2, [r3, #20]
    hdma_adc1.Init.MemDataAlignment = DMA_MDATAALIGN_HALFWORD;
 8000d52:	4b13      	ldr	r3, [pc, #76]	@ (8000da0 <HAL_ADC_MspInit+0xe8>)
 8000d54:	f44f 5200 	mov.w	r2, #8192	@ 0x2000
 8000d58:	619a      	str	r2, [r3, #24]
    hdma_adc1.Init.Mode = DMA_CIRCULAR;
 8000d5a:	4b11      	ldr	r3, [pc, #68]	@ (8000da0 <HAL_ADC_MspInit+0xe8>)
 8000d5c:	f44f 7280 	mov.w	r2, #256	@ 0x100
 8000d60:	61da      	str	r2, [r3, #28]
    hdma_adc1.Init.Priority = DMA_PRIORITY_LOW;
 8000d62:	4b0f      	ldr	r3, [pc, #60]	@ (8000da0 <HAL_ADC_MspInit+0xe8>)
 8000d64:	2200      	movs	r2, #0
 8000d66:	621a      	str	r2, [r3, #32]
    hdma_adc1.Init.FIFOMode = DMA_FIFOMODE_DISABLE;
 8000d68:	4b0d      	ldr	r3, [pc, #52]	@ (8000da0 <HAL_ADC_MspInit+0xe8>)
 8000d6a:	2200      	movs	r2, #0
 8000d6c:	625a      	str	r2, [r3, #36]	@ 0x24
    if (HAL_DMA_Init(&hdma_adc1) != HAL_OK)
 8000d6e:	480c      	ldr	r0, [pc, #48]	@ (8000da0 <HAL_ADC_MspInit+0xe8>)
 8000d70:	f001 fe0c 	bl	800298c <HAL_DMA_Init>
 8000d74:	4603      	mov	r3, r0
 8000d76:	2b00      	cmp	r3, #0
 8000d78:	d001      	beq.n	8000d7e <HAL_ADC_MspInit+0xc6>
    {
      Error_Handler();
 8000d7a:	f7ff ff6f 	bl	8000c5c <Error_Handler>
    }

    __HAL_LINKDMA(hadc,DMA_Handle,hdma_adc1);
 8000d7e:	687b      	ldr	r3, [r7, #4]
 8000d80:	4a07      	ldr	r2, [pc, #28]	@ (8000da0 <HAL_ADC_MspInit+0xe8>)
 8000d82:	639a      	str	r2, [r3, #56]	@ 0x38
 8000d84:	4a06      	ldr	r2, [pc, #24]	@ (8000da0 <HAL_ADC_MspInit+0xe8>)
 8000d86:	687b      	ldr	r3, [r7, #4]
 8000d88:	6393      	str	r3, [r2, #56]	@ 0x38

  /* USER CODE END ADC1_MspInit 1 */

  }

}
 8000d8a:	bf00      	nop
 8000d8c:	3728      	adds	r7, #40	@ 0x28
 8000d8e:	46bd      	mov	sp, r7
 8000d90:	bd80      	pop	{r7, pc}
 8000d92:	bf00      	nop
 8000d94:	40012000 	.word	0x40012000
 8000d98:	40023800 	.word	0x40023800
 8000d9c:	40020800 	.word	0x40020800
 8000da0:	20000384 	.word	0x20000384
 8000da4:	40026410 	.word	0x40026410

08000da8 <HAL_CRC_MspInit>:
* This function configures the hardware resources used in this example
* @param hcrc: CRC handle pointer
* @retval None
*/
void HAL_CRC_MspInit(CRC_HandleTypeDef* hcrc)
{
 8000da8:	b480      	push	{r7}
 8000daa:	b085      	sub	sp, #20
 8000dac:	af00      	add	r7, sp, #0
 8000dae:	6078      	str	r0, [r7, #4]
  if(hcrc->Instance==CRC)
 8000db0:	687b      	ldr	r3, [r7, #4]
 8000db2:	681b      	ldr	r3, [r3, #0]
 8000db4:	4a0b      	ldr	r2, [pc, #44]	@ (8000de4 <HAL_CRC_MspInit+0x3c>)
 8000db6:	4293      	cmp	r3, r2
 8000db8:	d10d      	bne.n	8000dd6 <HAL_CRC_MspInit+0x2e>
  {
  /* USER CODE BEGIN CRC_MspInit 0 */

  /* USER CODE END CRC_MspInit 0 */
    /* Peripheral clock enable */
    __HAL_RCC_CRC_CLK_ENABLE();
 8000dba:	2300      	movs	r3, #0
 8000dbc:	60fb      	str	r3, [r7, #12]
 8000dbe:	4b0a      	ldr	r3, [pc, #40]	@ (8000de8 <HAL_CRC_MspInit+0x40>)
 8000dc0:	6b1b      	ldr	r3, [r3, #48]	@ 0x30
 8000dc2:	4a09      	ldr	r2, [pc, #36]	@ (8000de8 <HAL_CRC_MspInit+0x40>)
 8000dc4:	f443 5380 	orr.w	r3, r3, #4096	@ 0x1000
 8000dc8:	6313      	str	r3, [r2, #48]	@ 0x30
 8000dca:	4b07      	ldr	r3, [pc, #28]	@ (8000de8 <HAL_CRC_MspInit+0x40>)
 8000dcc:	6b1b      	ldr	r3, [r3, #48]	@ 0x30
 8000dce:	f403 5380 	and.w	r3, r3, #4096	@ 0x1000
 8000dd2:	60fb      	str	r3, [r7, #12]
 8000dd4:	68fb      	ldr	r3, [r7, #12]

  /* USER CODE END CRC_MspInit 1 */

  }

}
 8000dd6:	bf00      	nop
 8000dd8:	3714      	adds	r7, #20
 8000dda:	46bd      	mov	sp, r7
 8000ddc:	f85d 7b04 	ldr.w	r7, [sp], #4
 8000de0:	4770      	bx	lr
 8000de2:	bf00      	nop
 8000de4:	40023000 	.word	0x40023000
 8000de8:	40023800 	.word	0x40023800

08000dec <HAL_I2C_MspInit>:
* This function configures the hardware resources used in this example
* @param hi2c: I2C handle pointer
* @retval None
*/
void HAL_I2C_MspInit(I2C_HandleTypeDef* hi2c)
{
 8000dec:	b580      	push	{r7, lr}
 8000dee:	b08a      	sub	sp, #40	@ 0x28
 8000df0:	af00      	add	r7, sp, #0
 8000df2:	6078      	str	r0, [r7, #4]
  GPIO_InitTypeDef GPIO_InitStruct = {0};
 8000df4:	f107 0314 	add.w	r3, r7, #20
 8000df8:	2200      	movs	r2, #0
 8000dfa:	601a      	str	r2, [r3, #0]
 8000dfc:	605a      	str	r2, [r3, #4]
 8000dfe:	609a      	str	r2, [r3, #8]
 8000e00:	60da      	str	r2, [r3, #12]
 8000e02:	611a      	str	r2, [r3, #16]
  if(hi2c->Instance==I2C2)
 8000e04:	687b      	ldr	r3, [r7, #4]
 8000e06:	681b      	ldr	r3, [r3, #0]
 8000e08:	4a29      	ldr	r2, [pc, #164]	@ (8000eb0 <HAL_I2C_MspInit+0xc4>)
 8000e0a:	4293      	cmp	r3, r2
 8000e0c:	d14b      	bne.n	8000ea6 <HAL_I2C_MspInit+0xba>
  {
  /* USER CODE BEGIN I2C2_MspInit 0 */

  /* USER CODE END I2C2_MspInit 0 */

    __HAL_RCC_GPIOB_CLK_ENABLE();
 8000e0e:	2300      	movs	r3, #0
 8000e10:	613b      	str	r3, [r7, #16]
 8000e12:	4b28      	ldr	r3, [pc, #160]	@ (8000eb4 <HAL_I2C_MspInit+0xc8>)
 8000e14:	6b1b      	ldr	r3, [r3, #48]	@ 0x30
 8000e16:	4a27      	ldr	r2, [pc, #156]	@ (8000eb4 <HAL_I2C_MspInit+0xc8>)
 8000e18:	f043 0302 	orr.w	r3, r3, #2
 8000e1c:	6313      	str	r3, [r2, #48]	@ 0x30
 8000e1e:	4b25      	ldr	r3, [pc, #148]	@ (8000eb4 <HAL_I2C_MspInit+0xc8>)
 8000e20:	6b1b      	ldr	r3, [r3, #48]	@ 0x30
 8000e22:	f003 0302 	and.w	r3, r3, #2
 8000e26:	613b      	str	r3, [r7, #16]
 8000e28:	693b      	ldr	r3, [r7, #16]
    __HAL_RCC_GPIOC_CLK_ENABLE();
 8000e2a:	2300      	movs	r3, #0
 8000e2c:	60fb      	str	r3, [r7, #12]
 8000e2e:	4b21      	ldr	r3, [pc, #132]	@ (8000eb4 <HAL_I2C_MspInit+0xc8>)
 8000e30:	6b1b      	ldr	r3, [r3, #48]	@ 0x30
 8000e32:	4a20      	ldr	r2, [pc, #128]	@ (8000eb4 <HAL_I2C_MspInit+0xc8>)
 8000e34:	f043 0304 	orr.w	r3, r3, #4
 8000e38:	6313      	str	r3, [r2, #48]	@ 0x30
 8000e3a:	4b1e      	ldr	r3, [pc, #120]	@ (8000eb4 <HAL_I2C_MspInit+0xc8>)
 8000e3c:	6b1b      	ldr	r3, [r3, #48]	@ 0x30
 8000e3e:	f003 0304 	and.w	r3, r3, #4
 8000e42:	60fb      	str	r3, [r7, #12]
 8000e44:	68fb      	ldr	r3, [r7, #12]
    /**I2C2 GPIO Configuration
    PB10     ------> I2C2_SCL
    PC12     ------> I2C2_SDA
    */
    GPIO_InitStruct.Pin = GPIO_PIN_10;
 8000e46:	f44f 6380 	mov.w	r3, #1024	@ 0x400
 8000e4a:	617b      	str	r3, [r7, #20]
    GPIO_InitStruct.Mode = GPIO_MODE_AF_OD;
 8000e4c:	2312      	movs	r3, #18
 8000e4e:	61bb      	str	r3, [r7, #24]
    GPIO_InitStruct.Pull = GPIO_PULLUP;
 8000e50:	2301      	movs	r3, #1
 8000e52:	61fb      	str	r3, [r7, #28]
    GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_VERY_HIGH;
 8000e54:	2303      	movs	r3, #3
 8000e56:	623b      	str	r3, [r7, #32]
    GPIO_InitStruct.Alternate = GPIO_AF4_I2C2;
 8000e58:	2304      	movs	r3, #4
 8000e5a:	627b      	str	r3, [r7, #36]	@ 0x24
    HAL_GPIO_Init(GPIOB, &GPIO_InitStruct);
 8000e5c:	f107 0314 	add.w	r3, r7, #20
 8000e60:	4619      	mov	r1, r3
 8000e62:	4815      	ldr	r0, [pc, #84]	@ (8000eb8 <HAL_I2C_MspInit+0xcc>)
 8000e64:	f002 f924 	bl	80030b0 <HAL_GPIO_Init>

    GPIO_InitStruct.Pin = GPIO_PIN_12;
 8000e68:	f44f 5380 	mov.w	r3, #4096	@ 0x1000
 8000e6c:	617b      	str	r3, [r7, #20]
    GPIO_InitStruct.Mode = GPIO_MODE_AF_OD;
 8000e6e:	2312      	movs	r3, #18
 8000e70:	61bb      	str	r3, [r7, #24]
    GPIO_InitStruct.Pull = GPIO_PULLUP;
 8000e72:	2301      	movs	r3, #1
 8000e74:	61fb      	str	r3, [r7, #28]
    GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_VERY_HIGH;
 8000e76:	2303      	movs	r3, #3
 8000e78:	623b      	str	r3, [r7, #32]
    GPIO_InitStruct.Alternate = GPIO_AF4_I2C2;
 8000e7a:	2304      	movs	r3, #4
 8000e7c:	627b      	str	r3, [r7, #36]	@ 0x24
    HAL_GPIO_Init(GPIOC, &GPIO_InitStruct);
 8000e7e:	f107 0314 	add.w	r3, r7, #20
 8000e82:	4619      	mov	r1, r3
 8000e84:	480d      	ldr	r0, [pc, #52]	@ (8000ebc <HAL_I2C_MspInit+0xd0>)
 8000e86:	f002 f913 	bl	80030b0 <HAL_GPIO_Init>

    /* Peripheral clock enable */
    __HAL_RCC_I2C2_CLK_ENABLE();
 8000e8a:	2300      	movs	r3, #0
 8000e8c:	60bb      	str	r3, [r7, #8]
 8000e8e:	4b09      	ldr	r3, [pc, #36]	@ (8000eb4 <HAL_I2C_MspInit+0xc8>)
 8000e90:	6c1b      	ldr	r3, [r3, #64]	@ 0x40
 8000e92:	4a08      	ldr	r2, [pc, #32]	@ (8000eb4 <HAL_I2C_MspInit+0xc8>)
 8000e94:	f443 0380 	orr.w	r3, r3, #4194304	@ 0x400000
 8000e98:	6413      	str	r3, [r2, #64]	@ 0x40
 8000e9a:	4b06      	ldr	r3, [pc, #24]	@ (8000eb4 <HAL_I2C_MspInit+0xc8>)
 8000e9c:	6c1b      	ldr	r3, [r3, #64]	@ 0x40
 8000e9e:	f403 0380 	and.w	r3, r3, #4194304	@ 0x400000
 8000ea2:	60bb      	str	r3, [r7, #8]
 8000ea4:	68bb      	ldr	r3, [r7, #8]

  /* USER CODE END I2C2_MspInit 1 */

  }

}
 8000ea6:	bf00      	nop
 8000ea8:	3728      	adds	r7, #40	@ 0x28
 8000eaa:	46bd      	mov	sp, r7
 8000eac:	bd80      	pop	{r7, pc}
 8000eae:	bf00      	nop
 8000eb0:	40005800 	.word	0x40005800
 8000eb4:	40023800 	.word	0x40023800
 8000eb8:	40020400 	.word	0x40020400
 8000ebc:	40020800 	.word	0x40020800

08000ec0 <HAL_SPI_MspInit>:
* This function configures the hardware resources used in this example
* @param hspi: SPI handle pointer
* @retval None
*/
void HAL_SPI_MspInit(SPI_HandleTypeDef* hspi)
{
 8000ec0:	b580      	push	{r7, lr}
 8000ec2:	b08a      	sub	sp, #40	@ 0x28
 8000ec4:	af00      	add	r7, sp, #0
 8000ec6:	6078      	str	r0, [r7, #4]
  GPIO_InitTypeDef GPIO_InitStruct = {0};
 8000ec8:	f107 0314 	add.w	r3, r7, #20
 8000ecc:	2200      	movs	r2, #0
 8000ece:	601a      	str	r2, [r3, #0]
 8000ed0:	605a      	str	r2, [r3, #4]
 8000ed2:	609a      	str	r2, [r3, #8]
 8000ed4:	60da      	str	r2, [r3, #12]
 8000ed6:	611a      	str	r2, [r3, #16]
  if(hspi->Instance==SPI2)
 8000ed8:	687b      	ldr	r3, [r7, #4]
 8000eda:	681b      	ldr	r3, [r3, #0]
 8000edc:	4a4b      	ldr	r2, [pc, #300]	@ (800100c <HAL_SPI_MspInit+0x14c>)
 8000ede:	4293      	cmp	r3, r2
 8000ee0:	f040 8090 	bne.w	8001004 <HAL_SPI_MspInit+0x144>
  {
  /* USER CODE BEGIN SPI2_MspInit 0 */

  /* USER CODE END SPI2_MspInit 0 */
    /* Peripheral clock enable */
    __HAL_RCC_SPI2_CLK_ENABLE();
 8000ee4:	2300      	movs	r3, #0
 8000ee6:	613b      	str	r3, [r7, #16]
 8000ee8:	4b49      	ldr	r3, [pc, #292]	@ (8001010 <HAL_SPI_MspInit+0x150>)
 8000eea:	6c1b      	ldr	r3, [r3, #64]	@ 0x40
 8000eec:	4a48      	ldr	r2, [pc, #288]	@ (8001010 <HAL_SPI_MspInit+0x150>)
 8000eee:	f443 4380 	orr.w	r3, r3, #16384	@ 0x4000
 8000ef2:	6413      	str	r3, [r2, #64]	@ 0x40
 8000ef4:	4b46      	ldr	r3, [pc, #280]	@ (8001010 <HAL_SPI_MspInit+0x150>)
 8000ef6:	6c1b      	ldr	r3, [r3, #64]	@ 0x40
 8000ef8:	f403 4380 	and.w	r3, r3, #16384	@ 0x4000
 8000efc:	613b      	str	r3, [r7, #16]
 8000efe:	693b      	ldr	r3, [r7, #16]

    __HAL_RCC_GPIOC_CLK_ENABLE();
 8000f00:	2300      	movs	r3, #0
 8000f02:	60fb      	str	r3, [r7, #12]
 8000f04:	4b42      	ldr	r3, [pc, #264]	@ (8001010 <HAL_SPI_MspInit+0x150>)
 8000f06:	6b1b      	ldr	r3, [r3, #48]	@ 0x30
 8000f08:	4a41      	ldr	r2, [pc, #260]	@ (8001010 <HAL_SPI_MspInit+0x150>)
 8000f0a:	f043 0304 	orr.w	r3, r3, #4
 8000f0e:	6313      	str	r3, [r2, #48]	@ 0x30
 8000f10:	4b3f      	ldr	r3, [pc, #252]	@ (8001010 <HAL_SPI_MspInit+0x150>)
 8000f12:	6b1b      	ldr	r3, [r3, #48]	@ 0x30
 8000f14:	f003 0304 	and.w	r3, r3, #4
 8000f18:	60fb      	str	r3, [r7, #12]
 8000f1a:	68fb      	ldr	r3, [r7, #12]
    __HAL_RCC_GPIOB_CLK_ENABLE();
 8000f1c:	2300      	movs	r3, #0
 8000f1e:	60bb      	str	r3, [r7, #8]
 8000f20:	4b3b      	ldr	r3, [pc, #236]	@ (8001010 <HAL_SPI_MspInit+0x150>)
 8000f22:	6b1b      	ldr	r3, [r3, #48]	@ 0x30
 8000f24:	4a3a      	ldr	r2, [pc, #232]	@ (8001010 <HAL_SPI_MspInit+0x150>)
 8000f26:	f043 0302 	orr.w	r3, r3, #2
 8000f2a:	6313      	str	r3, [r2, #48]	@ 0x30
 8000f2c:	4b38      	ldr	r3, [pc, #224]	@ (8001010 <HAL_SPI_MspInit+0x150>)
 8000f2e:	6b1b      	ldr	r3, [r3, #48]	@ 0x30
 8000f30:	f003 0302 	and.w	r3, r3, #2
 8000f34:	60bb      	str	r3, [r7, #8]
 8000f36:	68bb      	ldr	r3, [r7, #8]
    /**SPI2 GPIO Configuration
    PC1     ------> SPI2_MOSI
    PC2     ------> SPI2_MISO
    PB13     ------> SPI2_SCK
    */
    GPIO_InitStruct.Pin = DISPL_MOSI_Pin;
 8000f38:	2302      	movs	r3, #2
 8000f3a:	617b      	str	r3, [r7, #20]
    GPIO_InitStruct.Mode = GPIO_MODE_AF_PP;
 8000f3c:	2302      	movs	r3, #2
 8000f3e:	61bb      	str	r3, [r7, #24]
    GPIO_InitStruct.Pull = GPIO_NOPULL;
 8000f40:	2300      	movs	r3, #0
 8000f42:	61fb      	str	r3, [r7, #28]
    GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_VERY_HIGH;
 8000f44:	2303      	movs	r3, #3
 8000f46:	623b      	str	r3, [r7, #32]
    GPIO_InitStruct.Alternate = GPIO_AF7_SPI2;
 8000f48:	2307      	movs	r3, #7
 8000f4a:	627b      	str	r3, [r7, #36]	@ 0x24
    HAL_GPIO_Init(DISPL_MOSI_GPIO_Port, &GPIO_InitStruct);
 8000f4c:	f107 0314 	add.w	r3, r7, #20
 8000f50:	4619      	mov	r1, r3
 8000f52:	4830      	ldr	r0, [pc, #192]	@ (8001014 <HAL_SPI_MspInit+0x154>)
 8000f54:	f002 f8ac 	bl	80030b0 <HAL_GPIO_Init>

    GPIO_InitStruct.Pin = TOUCH_MISO_Pin;
 8000f58:	2304      	movs	r3, #4
 8000f5a:	617b      	str	r3, [r7, #20]
    GPIO_InitStruct.Mode = GPIO_MODE_AF_PP;
 8000f5c:	2302      	movs	r3, #2
 8000f5e:	61bb      	str	r3, [r7, #24]
    GPIO_InitStruct.Pull = GPIO_NOPULL;
 8000f60:	2300      	movs	r3, #0
 8000f62:	61fb      	str	r3, [r7, #28]
    GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_VERY_HIGH;
 8000f64:	2303      	movs	r3, #3
 8000f66:	623b      	str	r3, [r7, #32]
    GPIO_InitStruct.Alternate = GPIO_AF5_SPI2;
 8000f68:	2305      	movs	r3, #5
 8000f6a:	627b      	str	r3, [r7, #36]	@ 0x24
    HAL_GPIO_Init(TOUCH_MISO_GPIO_Port, &GPIO_InitStruct);
 8000f6c:	f107 0314 	add.w	r3, r7, #20
 8000f70:	4619      	mov	r1, r3
 8000f72:	4828      	ldr	r0, [pc, #160]	@ (8001014 <HAL_SPI_MspInit+0x154>)
 8000f74:	f002 f89c 	bl	80030b0 <HAL_GPIO_Init>

    GPIO_InitStruct.Pin = DISPL_SCK_Pin;
 8000f78:	f44f 5300 	mov.w	r3, #8192	@ 0x2000
 8000f7c:	617b      	str	r3, [r7, #20]
    GPIO_InitStruct.Mode = GPIO_MODE_AF_PP;
 8000f7e:	2302      	movs	r3, #2
 8000f80:	61bb      	str	r3, [r7, #24]
    GPIO_InitStruct.Pull = GPIO_NOPULL;
 8000f82:	2300      	movs	r3, #0
 8000f84:	61fb      	str	r3, [r7, #28]
    GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_VERY_HIGH;
 8000f86:	2303      	movs	r3, #3
 8000f88:	623b      	str	r3, [r7, #32]
    GPIO_InitStruct.Alternate = GPIO_AF5_SPI2;
 8000f8a:	2305      	movs	r3, #5
 8000f8c:	627b      	str	r3, [r7, #36]	@ 0x24
    HAL_GPIO_Init(DISPL_SCK_GPIO_Port, &GPIO_InitStruct);
 8000f8e:	f107 0314 	add.w	r3, r7, #20
 8000f92:	4619      	mov	r1, r3
 8000f94:	4820      	ldr	r0, [pc, #128]	@ (8001018 <HAL_SPI_MspInit+0x158>)
 8000f96:	f002 f88b 	bl	80030b0 <HAL_GPIO_Init>

    /* SPI2 DMA Init */
    /* SPI2_TX Init */
    hdma_spi2_tx.Instance = DMA1_Stream4;
 8000f9a:	4b20      	ldr	r3, [pc, #128]	@ (800101c <HAL_SPI_MspInit+0x15c>)
 8000f9c:	4a20      	ldr	r2, [pc, #128]	@ (8001020 <HAL_SPI_MspInit+0x160>)
 8000f9e:	601a      	str	r2, [r3, #0]
    hdma_spi2_tx.Init.Channel = DMA_CHANNEL_0;
 8000fa0:	4b1e      	ldr	r3, [pc, #120]	@ (800101c <HAL_SPI_MspInit+0x15c>)
 8000fa2:	2200      	movs	r2, #0
 8000fa4:	605a      	str	r2, [r3, #4]
    hdma_spi2_tx.Init.Direction = DMA_MEMORY_TO_PERIPH;
 8000fa6:	4b1d      	ldr	r3, [pc, #116]	@ (800101c <HAL_SPI_MspInit+0x15c>)
 8000fa8:	2240      	movs	r2, #64	@ 0x40
 8000faa:	609a      	str	r2, [r3, #8]
    hdma_spi2_tx.Init.PeriphInc = DMA_PINC_DISABLE;
 8000fac:	4b1b      	ldr	r3, [pc, #108]	@ (800101c <HAL_SPI_MspInit+0x15c>)
 8000fae:	2200      	movs	r2, #0
 8000fb0:	60da      	str	r2, [r3, #12]
    hdma_spi2_tx.Init.MemInc = DMA_MINC_ENABLE;
 8000fb2:	4b1a      	ldr	r3, [pc, #104]	@ (800101c <HAL_SPI_MspInit+0x15c>)
 8000fb4:	f44f 6280 	mov.w	r2, #1024	@ 0x400
 8000fb8:	611a      	str	r2, [r3, #16]
    hdma_spi2_tx.Init.PeriphDataAlignment = DMA_PDATAALIGN_BYTE;
 8000fba:	4b18      	ldr	r3, [pc, #96]	@ (800101c <HAL_SPI_MspInit+0x15c>)
 8000fbc:	2200      	movs	r2, #0
 8000fbe:	615a      	str	r2, [r3, #20]
    hdma_spi2_tx.Init.MemDataAlignment = DMA_MDATAALIGN_BYTE;
 8000fc0:	4b16      	ldr	r3, [pc, #88]	@ (800101c <HAL_SPI_MspInit+0x15c>)
 8000fc2:	2200      	movs	r2, #0
 8000fc4:	619a      	str	r2, [r3, #24]
    hdma_spi2_tx.Init.Mode = DMA_NORMAL;
 8000fc6:	4b15      	ldr	r3, [pc, #84]	@ (800101c <HAL_SPI_MspInit+0x15c>)
 8000fc8:	2200      	movs	r2, #0
 8000fca:	61da      	str	r2, [r3, #28]
    hdma_spi2_tx.Init.Priority = DMA_PRIORITY_LOW;
 8000fcc:	4b13      	ldr	r3, [pc, #76]	@ (800101c <HAL_SPI_MspInit+0x15c>)
 8000fce:	2200      	movs	r2, #0
 8000fd0:	621a      	str	r2, [r3, #32]
    hdma_spi2_tx.Init.FIFOMode = DMA_FIFOMODE_DISABLE;
 8000fd2:	4b12      	ldr	r3, [pc, #72]	@ (800101c <HAL_SPI_MspInit+0x15c>)
 8000fd4:	2200      	movs	r2, #0
 8000fd6:	625a      	str	r2, [r3, #36]	@ 0x24
    if (HAL_DMA_Init(&hdma_spi2_tx) != HAL_OK)
 8000fd8:	4810      	ldr	r0, [pc, #64]	@ (800101c <HAL_SPI_MspInit+0x15c>)
 8000fda:	f001 fcd7 	bl	800298c <HAL_DMA_Init>
 8000fde:	4603      	mov	r3, r0
 8000fe0:	2b00      	cmp	r3, #0
 8000fe2:	d001      	beq.n	8000fe8 <HAL_SPI_MspInit+0x128>
    {
      Error_Handler();
 8000fe4:	f7ff fe3a 	bl	8000c5c <Error_Handler>
    }

    __HAL_LINKDMA(hspi,hdmatx,hdma_spi2_tx);
 8000fe8:	687b      	ldr	r3, [r7, #4]
 8000fea:	4a0c      	ldr	r2, [pc, #48]	@ (800101c <HAL_SPI_MspInit+0x15c>)
 8000fec:	649a      	str	r2, [r3, #72]	@ 0x48
 8000fee:	4a0b      	ldr	r2, [pc, #44]	@ (800101c <HAL_SPI_MspInit+0x15c>)
 8000ff0:	687b      	ldr	r3, [r7, #4]
 8000ff2:	6393      	str	r3, [r2, #56]	@ 0x38

    /* SPI2 interrupt Init */
    HAL_NVIC_SetPriority(SPI2_IRQn, 0, 0);
 8000ff4:	2200      	movs	r2, #0
 8000ff6:	2100      	movs	r1, #0
 8000ff8:	2024      	movs	r0, #36	@ 0x24
 8000ffa:	f001 fc58 	bl	80028ae <HAL_NVIC_SetPriority>
    HAL_NVIC_EnableIRQ(SPI2_IRQn);
 8000ffe:	2024      	movs	r0, #36	@ 0x24
 8001000:	f001 fc71 	bl	80028e6 <HAL_NVIC_EnableIRQ>

  /* USER CODE END SPI2_MspInit 1 */

  }

}
 8001004:	bf00      	nop
 8001006:	3728      	adds	r7, #40	@ 0x28
 8001008:	46bd      	mov	sp, r7
 800100a:	bd80      	pop	{r7, pc}
 800100c:	40003800 	.word	0x40003800
 8001010:	40023800 	.word	0x40023800
 8001014:	40020800 	.word	0x40020800
 8001018:	40020400 	.word	0x40020400
 800101c:	20000498 	.word	0x20000498
 8001020:	40026070 	.word	0x40026070

08001024 <HAL_TIM_Base_MspInit>:
* This function configures the hardware resources used in this example
* @param htim_base: TIM_Base handle pointer
* @retval None
*/
void HAL_TIM_Base_MspInit(TIM_HandleTypeDef* htim_base)
{
 8001024:	b580      	push	{r7, lr}
 8001026:	b084      	sub	sp, #16
 8001028:	af00      	add	r7, sp, #0
 800102a:	6078      	str	r0, [r7, #4]
  if(htim_base->Instance==TIM2)
 800102c:	687b      	ldr	r3, [r7, #4]
 800102e:	681b      	ldr	r3, [r3, #0]
 8001030:	f1b3 4f80 	cmp.w	r3, #1073741824	@ 0x40000000
 8001034:	d10e      	bne.n	8001054 <HAL_TIM_Base_MspInit+0x30>
  {
  /* USER CODE BEGIN TIM2_MspInit 0 */

  /* USER CODE END TIM2_MspInit 0 */
    /* Peripheral clock enable */
    __HAL_RCC_TIM2_CLK_ENABLE();
 8001036:	2300      	movs	r3, #0
 8001038:	60fb      	str	r3, [r7, #12]
 800103a:	4b16      	ldr	r3, [pc, #88]	@ (8001094 <HAL_TIM_Base_MspInit+0x70>)
 800103c:	6c1b      	ldr	r3, [r3, #64]	@ 0x40
 800103e:	4a15      	ldr	r2, [pc, #84]	@ (8001094 <HAL_TIM_Base_MspInit+0x70>)
 8001040:	f043 0301 	orr.w	r3, r3, #1
 8001044:	6413      	str	r3, [r2, #64]	@ 0x40
 8001046:	4b13      	ldr	r3, [pc, #76]	@ (8001094 <HAL_TIM_Base_MspInit+0x70>)
 8001048:	6c1b      	ldr	r3, [r3, #64]	@ 0x40
 800104a:	f003 0301 	and.w	r3, r3, #1
 800104e:	60fb      	str	r3, [r7, #12]
 8001050:	68fb      	ldr	r3, [r7, #12]
  /* USER CODE BEGIN TIM3_MspInit 1 */

  /* USER CODE END TIM3_MspInit 1 */
  }

}
 8001052:	e01a      	b.n	800108a <HAL_TIM_Base_MspInit+0x66>
  else if(htim_base->Instance==TIM3)
 8001054:	687b      	ldr	r3, [r7, #4]
 8001056:	681b      	ldr	r3, [r3, #0]
 8001058:	4a0f      	ldr	r2, [pc, #60]	@ (8001098 <HAL_TIM_Base_MspInit+0x74>)
 800105a:	4293      	cmp	r3, r2
 800105c:	d115      	bne.n	800108a <HAL_TIM_Base_MspInit+0x66>
    __HAL_RCC_TIM3_CLK_ENABLE();
 800105e:	2300      	movs	r3, #0
 8001060:	60bb      	str	r3, [r7, #8]
 8001062:	4b0c      	ldr	r3, [pc, #48]	@ (8001094 <HAL_TIM_Base_MspInit+0x70>)
 8001064:	6c1b      	ldr	r3, [r3, #64]	@ 0x40
 8001066:	4a0b      	ldr	r2, [pc, #44]	@ (8001094 <HAL_TIM_Base_MspInit+0x70>)
 8001068:	f043 0302 	orr.w	r3, r3, #2
 800106c:	6413      	str	r3, [r2, #64]	@ 0x40
 800106e:	4b09      	ldr	r3, [pc, #36]	@ (8001094 <HAL_TIM_Base_MspInit+0x70>)
 8001070:	6c1b      	ldr	r3, [r3, #64]	@ 0x40
 8001072:	f003 0302 	and.w	r3, r3, #2
 8001076:	60bb      	str	r3, [r7, #8]
 8001078:	68bb      	ldr	r3, [r7, #8]
    HAL_NVIC_SetPriority(TIM3_IRQn, 0, 0);
 800107a:	2200      	movs	r2, #0
 800107c:	2100      	movs	r1, #0
 800107e:	201d      	movs	r0, #29
 8001080:	f001 fc15 	bl	80028ae <HAL_NVIC_SetPriority>
    HAL_NVIC_EnableIRQ(TIM3_IRQn);
 8001084:	201d      	movs	r0, #29
 8001086:	f001 fc2e 	bl	80028e6 <HAL_NVIC_EnableIRQ>
}
 800108a:	bf00      	nop
 800108c:	3710      	adds	r7, #16
 800108e:	46bd      	mov	sp, r7
 8001090:	bd80      	pop	{r7, pc}
 8001092:	bf00      	nop
 8001094:	40023800 	.word	0x40023800
 8001098:	40000400 	.word	0x40000400

0800109c <HAL_TIM_MspPostInit>:

void HAL_TIM_MspPostInit(TIM_HandleTypeDef* htim)
{
 800109c:	b580      	push	{r7, lr}
 800109e:	b088      	sub	sp, #32
 80010a0:	af00      	add	r7, sp, #0
 80010a2:	6078      	str	r0, [r7, #4]
  GPIO_InitTypeDef GPIO_InitStruct = {0};
 80010a4:	f107 030c 	add.w	r3, r7, #12
 80010a8:	2200      	movs	r2, #0
 80010aa:	601a      	str	r2, [r3, #0]
 80010ac:	605a      	str	r2, [r3, #4]
 80010ae:	609a      	str	r2, [r3, #8]
 80010b0:	60da      	str	r2, [r3, #12]
 80010b2:	611a      	str	r2, [r3, #16]
  if(htim->Instance==TIM2)
 80010b4:	687b      	ldr	r3, [r7, #4]
 80010b6:	681b      	ldr	r3, [r3, #0]
 80010b8:	f1b3 4f80 	cmp.w	r3, #1073741824	@ 0x40000000
 80010bc:	d11d      	bne.n	80010fa <HAL_TIM_MspPostInit+0x5e>
  {
  /* USER CODE BEGIN TIM2_MspPostInit 0 */

  /* USER CODE END TIM2_MspPostInit 0 */

    __HAL_RCC_GPIOA_CLK_ENABLE();
 80010be:	2300      	movs	r3, #0
 80010c0:	60bb      	str	r3, [r7, #8]
 80010c2:	4b10      	ldr	r3, [pc, #64]	@ (8001104 <HAL_TIM_MspPostInit+0x68>)
 80010c4:	6b1b      	ldr	r3, [r3, #48]	@ 0x30
 80010c6:	4a0f      	ldr	r2, [pc, #60]	@ (8001104 <HAL_TIM_MspPostInit+0x68>)
 80010c8:	f043 0301 	orr.w	r3, r3, #1
 80010cc:	6313      	str	r3, [r2, #48]	@ 0x30
 80010ce:	4b0d      	ldr	r3, [pc, #52]	@ (8001104 <HAL_TIM_MspPostInit+0x68>)
 80010d0:	6b1b      	ldr	r3, [r3, #48]	@ 0x30
 80010d2:	f003 0301 	and.w	r3, r3, #1
 80010d6:	60bb      	str	r3, [r7, #8]
 80010d8:	68bb      	ldr	r3, [r7, #8]
    /**TIM2 GPIO Configuration
    PA0-WKUP     ------> TIM2_CH1
    */
    GPIO_InitStruct.Pin = GPIO_PIN_0;
 80010da:	2301      	movs	r3, #1
 80010dc:	60fb      	str	r3, [r7, #12]
    GPIO_InitStruct.Mode = GPIO_MODE_AF_PP;
 80010de:	2302      	movs	r3, #2
 80010e0:	613b      	str	r3, [r7, #16]
    GPIO_InitStruct.Pull = GPIO_NOPULL;
 80010e2:	2300      	movs	r3, #0
 80010e4:	617b      	str	r3, [r7, #20]
    GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_LOW;
 80010e6:	2300      	movs	r3, #0
 80010e8:	61bb      	str	r3, [r7, #24]
    GPIO_InitStruct.Alternate = GPIO_AF1_TIM2;
 80010ea:	2301      	movs	r3, #1
 80010ec:	61fb      	str	r3, [r7, #28]
    HAL_GPIO_Init(GPIOA, &GPIO_InitStruct);
 80010ee:	f107 030c 	add.w	r3, r7, #12
 80010f2:	4619      	mov	r1, r3
 80010f4:	4804      	ldr	r0, [pc, #16]	@ (8001108 <HAL_TIM_MspPostInit+0x6c>)
 80010f6:	f001 ffdb 	bl	80030b0 <HAL_GPIO_Init>
  /* USER CODE BEGIN TIM2_MspPostInit 1 */

  /* USER CODE END TIM2_MspPostInit 1 */
  }

}
 80010fa:	bf00      	nop
 80010fc:	3720      	adds	r7, #32
 80010fe:	46bd      	mov	sp, r7
 8001100:	bd80      	pop	{r7, pc}
 8001102:	bf00      	nop
 8001104:	40023800 	.word	0x40023800
 8001108:	40020000 	.word	0x40020000

0800110c <NMI_Handler>:
/******************************************************************************/
/**
  * @brief This function handles Non maskable interrupt.
  */
void NMI_Handler(void)
{
 800110c:	b480      	push	{r7}
 800110e:	af00      	add	r7, sp, #0
  /* USER CODE BEGIN NonMaskableInt_IRQn 0 */

  /* USER CODE END NonMaskableInt_IRQn 0 */
  /* USER CODE BEGIN NonMaskableInt_IRQn 1 */
   while (1)
 8001110:	bf00      	nop
 8001112:	e7fd      	b.n	8001110 <NMI_Handler+0x4>

08001114 <HardFault_Handler>:

/**
  * @brief This function handles Hard fault interrupt.
  */
void HardFault_Handler(void)
{
 8001114:	b480      	push	{r7}
 8001116:	af00      	add	r7, sp, #0
  /* USER CODE BEGIN HardFault_IRQn 0 */

  /* USER CODE END HardFault_IRQn 0 */
  while (1)
 8001118:	bf00      	nop
 800111a:	e7fd      	b.n	8001118 <HardFault_Handler+0x4>

0800111c <MemManage_Handler>:

/**
  * @brief This function handles Memory management fault.
  */
void MemManage_Handler(void)
{
 800111c:	b480      	push	{r7}
 800111e:	af00      	add	r7, sp, #0
  /* USER CODE BEGIN MemoryManagement_IRQn 0 */

  /* USER CODE END MemoryManagement_IRQn 0 */
  while (1)
 8001120:	bf00      	nop
 8001122:	e7fd      	b.n	8001120 <MemManage_Handler+0x4>

08001124 <BusFault_Handler>:

/**
  * @brief This function handles Pre-fetch fault, memory access fault.
  */
void BusFault_Handler(void)
{
 8001124:	b480      	push	{r7}
 8001126:	af00      	add	r7, sp, #0
  /* USER CODE BEGIN BusFault_IRQn 0 */

  /* USER CODE END BusFault_IRQn 0 */
  while (1)
 8001128:	bf00      	nop
 800112a:	e7fd      	b.n	8001128 <BusFault_Handler+0x4>

0800112c <UsageFault_Handler>:

/**
  * @brief This function handles Undefined instruction or illegal state.
  */
void UsageFault_Handler(void)
{
 800112c:	b480      	push	{r7}
 800112e:	af00      	add	r7, sp, #0
  /* USER CODE BEGIN UsageFault_IRQn 0 */

  /* USER CODE END UsageFault_IRQn 0 */
  while (1)
 8001130:	bf00      	nop
 8001132:	e7fd      	b.n	8001130 <UsageFault_Handler+0x4>

08001134 <SVC_Handler>:

/**
  * @brief This function handles System service call via SWI instruction.
  */
void SVC_Handler(void)
{
 8001134:	b480      	push	{r7}
 8001136:	af00      	add	r7, sp, #0

  /* USER CODE END SVCall_IRQn 0 */
  /* USER CODE BEGIN SVCall_IRQn 1 */

  /* USER CODE END SVCall_IRQn 1 */
}
 8001138:	bf00      	nop
 800113a:	46bd      	mov	sp, r7
 800113c:	f85d 7b04 	ldr.w	r7, [sp], #4
 8001140:	4770      	bx	lr

08001142 <DebugMon_Handler>:

/**
  * @brief This function handles Debug monitor.
  */
void DebugMon_Handler(void)
{
 8001142:	b480      	push	{r7}
 8001144:	af00      	add	r7, sp, #0

  /* USER CODE END DebugMonitor_IRQn 0 */
  /* USER CODE BEGIN DebugMonitor_IRQn 1 */

  /* USER CODE END DebugMonitor_IRQn 1 */
}
 8001146:	bf00      	nop
 8001148:	46bd      	mov	sp, r7
 800114a:	f85d 7b04 	ldr.w	r7, [sp], #4
 800114e:	4770      	bx	lr

08001150 <PendSV_Handler>:

/**
  * @brief This function handles Pendable request for system service.
  */
void PendSV_Handler(void)
{
 8001150:	b480      	push	{r7}
 8001152:	af00      	add	r7, sp, #0

  /* USER CODE END PendSV_IRQn 0 */
  /* USER CODE BEGIN PendSV_IRQn 1 */

  /* USER CODE END PendSV_IRQn 1 */
}
 8001154:	bf00      	nop
 8001156:	46bd      	mov	sp, r7
 8001158:	f85d 7b04 	ldr.w	r7, [sp], #4
 800115c:	4770      	bx	lr

0800115e <SysTick_Handler>:

/**
  * @brief This function handles System tick timer.
  */
void SysTick_Handler(void)
{
 800115e:	b580      	push	{r7, lr}
 8001160:	af00      	add	r7, sp, #0
  /* USER CODE BEGIN SysTick_IRQn 0 */

  /* USER CODE END SysTick_IRQn 0 */
  HAL_IncTick();
 8001162:	f000 fe21 	bl	8001da8 <HAL_IncTick>
  /* USER CODE BEGIN SysTick_IRQn 1 */

  /* USER CODE END SysTick_IRQn 1 */
}
 8001166:	bf00      	nop
 8001168:	bd80      	pop	{r7, pc}
	...

0800116c <DMA1_Stream4_IRQHandler>:

/**
  * @brief This function handles DMA1 stream4 global interrupt.
  */
void DMA1_Stream4_IRQHandler(void)
{
 800116c:	b580      	push	{r7, lr}
 800116e:	af00      	add	r7, sp, #0
  /* USER CODE BEGIN DMA1_Stream4_IRQn 0 */

  /* USER CODE END DMA1_Stream4_IRQn 0 */
  HAL_DMA_IRQHandler(&hdma_spi2_tx);
 8001170:	4802      	ldr	r0, [pc, #8]	@ (800117c <DMA1_Stream4_IRQHandler+0x10>)
 8001172:	f001 fd33 	bl	8002bdc <HAL_DMA_IRQHandler>
  /* USER CODE BEGIN DMA1_Stream4_IRQn 1 */

  /* USER CODE END DMA1_Stream4_IRQn 1 */
}
 8001176:	bf00      	nop
 8001178:	bd80      	pop	{r7, pc}
 800117a:	bf00      	nop
 800117c:	20000498 	.word	0x20000498

08001180 <EXTI9_5_IRQHandler>:

/**
  * @brief This function handles EXTI line[9:5] interrupts.
  */
void EXTI9_5_IRQHandler(void)
{
 8001180:	b580      	push	{r7, lr}
 8001182:	af00      	add	r7, sp, #0
  /* USER CODE BEGIN EXTI9_5_IRQn 0 */

  /* USER CODE END EXTI9_5_IRQn 0 */
  HAL_GPIO_EXTI_IRQHandler(TOUCH_INT_Pin);
 8001184:	f44f 7080 	mov.w	r0, #256	@ 0x100
 8001188:	f002 f972 	bl	8003470 <HAL_GPIO_EXTI_IRQHandler>
  /* USER CODE BEGIN EXTI9_5_IRQn 1 */

  /* USER CODE END EXTI9_5_IRQn 1 */
}
 800118c:	bf00      	nop
 800118e:	bd80      	pop	{r7, pc}

08001190 <TIM3_IRQHandler>:

/**
  * @brief This function handles TIM3 global interrupt.
  */
void TIM3_IRQHandler(void)
{
 8001190:	b580      	push	{r7, lr}
 8001192:	af00      	add	r7, sp, #0
  /* USER CODE BEGIN TIM3_IRQn 0 */

  /* USER CODE END TIM3_IRQn 0 */
  HAL_TIM_IRQHandler(&htim3);
 8001194:	4802      	ldr	r0, [pc, #8]	@ (80011a0 <TIM3_IRQHandler+0x10>)
 8001196:	f005 f8d2 	bl	800633e <HAL_TIM_IRQHandler>
  /* USER CODE BEGIN TIM3_IRQn 1 */

  /* USER CODE END TIM3_IRQn 1 */
}
 800119a:	bf00      	nop
 800119c:	bd80      	pop	{r7, pc}
 800119e:	bf00      	nop
 80011a0:	20000540 	.word	0x20000540

080011a4 <SPI2_IRQHandler>:

/**
  * @brief This function handles SPI2 global interrupt.
  */
void SPI2_IRQHandler(void)
{
 80011a4:	b580      	push	{r7, lr}
 80011a6:	af00      	add	r7, sp, #0
  /* USER CODE BEGIN SPI2_IRQn 0 */

  /* USER CODE END SPI2_IRQn 0 */
  HAL_SPI_IRQHandler(&hspi2);
 80011a8:	4802      	ldr	r0, [pc, #8]	@ (80011b4 <SPI2_IRQHandler+0x10>)
 80011aa:	f004 fcd9 	bl	8005b60 <HAL_SPI_IRQHandler>
  /* USER CODE BEGIN SPI2_IRQn 1 */

  /* USER CODE END SPI2_IRQn 1 */
}
 80011ae:	bf00      	nop
 80011b0:	bd80      	pop	{r7, pc}
 80011b2:	bf00      	nop
 80011b4:	20000440 	.word	0x20000440

080011b8 <DMA2_Stream0_IRQHandler>:

/**
  * @brief This function handles DMA2 stream0 global interrupt.
  */
void DMA2_Stream0_IRQHandler(void)
{
 80011b8:	b580      	push	{r7, lr}
 80011ba:	af00      	add	r7, sp, #0
  /* USER CODE BEGIN DMA2_Stream0_IRQn 0 */

  /* USER CODE END DMA2_Stream0_IRQn 0 */
  HAL_DMA_IRQHandler(&hdma_adc1);
 80011bc:	4802      	ldr	r0, [pc, #8]	@ (80011c8 <DMA2_Stream0_IRQHandler+0x10>)
 80011be:	f001 fd0d 	bl	8002bdc <HAL_DMA_IRQHandler>
  /* USER CODE BEGIN DMA2_Stream0_IRQn 1 */

  /* USER CODE END DMA2_Stream0_IRQn 1 */
}
 80011c2:	bf00      	nop
 80011c4:	bd80      	pop	{r7, pc}
 80011c6:	bf00      	nop
 80011c8:	20000384 	.word	0x20000384

080011cc <_getpid>:
 80011cc:	b480      	push	{r7}
 80011ce:	af00      	add	r7, sp, #0
 80011d0:	2301      	movs	r3, #1
 80011d2:	4618      	mov	r0, r3
 80011d4:	46bd      	mov	sp, r7
 80011d6:	f85d 7b04 	ldr.w	r7, [sp], #4
 80011da:	4770      	bx	lr

080011dc <_kill>:
 80011dc:	b580      	push	{r7, lr}
 80011de:	b082      	sub	sp, #8
 80011e0:	af00      	add	r7, sp, #0
 80011e2:	6078      	str	r0, [r7, #4]
 80011e4:	6039      	str	r1, [r7, #0]
 80011e6:	f01f fdbd 	bl	8020d64 <__errno>
 80011ea:	4603      	mov	r3, r0
 80011ec:	2216      	movs	r2, #22
 80011ee:	601a      	str	r2, [r3, #0]
 80011f0:	f04f 33ff 	mov.w	r3, #4294967295
 80011f4:	4618      	mov	r0, r3
 80011f6:	3708      	adds	r7, #8
 80011f8:	46bd      	mov	sp, r7
 80011fa:	bd80      	pop	{r7, pc}

080011fc <_exit>:
 80011fc:	b580      	push	{r7, lr}
 80011fe:	b082      	sub	sp, #8
 8001200:	af00      	add	r7, sp, #0
 8001202:	6078      	str	r0, [r7, #4]
 8001204:	f04f 31ff 	mov.w	r1, #4294967295
 8001208:	6878      	ldr	r0, [r7, #4]
 800120a:	f7ff ffe7 	bl	80011dc <_kill>
 800120e:	bf00      	nop
 8001210:	e7fd      	b.n	800120e <_exit+0x12>

08001212 <_read>:
 8001212:	b580      	push	{r7, lr}
 8001214:	b086      	sub	sp, #24
 8001216:	af00      	add	r7, sp, #0
 8001218:	60f8      	str	r0, [r7, #12]
 800121a:	60b9      	str	r1, [r7, #8]
 800121c:	607a      	str	r2, [r7, #4]
 800121e:	2300      	movs	r3, #0
 8001220:	617b      	str	r3, [r7, #20]
 8001222:	e00a      	b.n	800123a <_read+0x28>
 8001224:	f3af 8000 	nop.w
 8001228:	4601      	mov	r1, r0
 800122a:	68bb      	ldr	r3, [r7, #8]
 800122c:	1c5a      	adds	r2, r3, #1
 800122e:	60ba      	str	r2, [r7, #8]
 8001230:	b2ca      	uxtb	r2, r1
 8001232:	701a      	strb	r2, [r3, #0]
 8001234:	697b      	ldr	r3, [r7, #20]
 8001236:	3301      	adds	r3, #1
 8001238:	617b      	str	r3, [r7, #20]
 800123a:	697a      	ldr	r2, [r7, #20]
 800123c:	687b      	ldr	r3, [r7, #4]
 800123e:	429a      	cmp	r2, r3
 8001240:	dbf0      	blt.n	8001224 <_read+0x12>
 8001242:	687b      	ldr	r3, [r7, #4]
 8001244:	4618      	mov	r0, r3
 8001246:	3718      	adds	r7, #24
 8001248:	46bd      	mov	sp, r7
 800124a:	bd80      	pop	{r7, pc}

0800124c <_write>:
 800124c:	b580      	push	{r7, lr}
 800124e:	b086      	sub	sp, #24
 8001250:	af00      	add	r7, sp, #0
 8001252:	60f8      	str	r0, [r7, #12]
 8001254:	60b9      	str	r1, [r7, #8]
 8001256:	607a      	str	r2, [r7, #4]
 8001258:	2300      	movs	r3, #0
 800125a:	617b      	str	r3, [r7, #20]
 800125c:	e009      	b.n	8001272 <_write+0x26>
 800125e:	68bb      	ldr	r3, [r7, #8]
 8001260:	1c5a      	adds	r2, r3, #1
 8001262:	60ba      	str	r2, [r7, #8]
 8001264:	781b      	ldrb	r3, [r3, #0]
 8001266:	4618      	mov	r0, r3
 8001268:	f3af 8000 	nop.w
 800126c:	697b      	ldr	r3, [r7, #20]
 800126e:	3301      	adds	r3, #1
 8001270:	617b      	str	r3, [r7, #20]
 8001272:	697a      	ldr	r2, [r7, #20]
 8001274:	687b      	ldr	r3, [r7, #4]
 8001276:	429a      	cmp	r2, r3
 8001278:	dbf1      	blt.n	800125e <_write+0x12>
 800127a:	687b      	ldr	r3, [r7, #4]
 800127c:	4618      	mov	r0, r3
 800127e:	3718      	adds	r7, #24
 8001280:	46bd      	mov	sp, r7
 8001282:	bd80      	pop	{r7, pc}

08001284 <_close>:
 8001284:	b480      	push	{r7}
 8001286:	b083      	sub	sp, #12
 8001288:	af00      	add	r7, sp, #0
 800128a:	6078      	str	r0, [r7, #4]
 800128c:	f04f 33ff 	mov.w	r3, #4294967295
 8001290:	4618      	mov	r0, r3
 8001292:	370c      	adds	r7, #12
 8001294:	46bd      	mov	sp, r7
 8001296:	f85d 7b04 	ldr.w	r7, [sp], #4
 800129a:	4770      	bx	lr

0800129c <_fstat>:
 800129c:	b480      	push	{r7}
 800129e:	b083      	sub	sp, #12
 80012a0:	af00      	add	r7, sp, #0
 80012a2:	6078      	str	r0, [r7, #4]
 80012a4:	6039      	str	r1, [r7, #0]
 80012a6:	683b      	ldr	r3, [r7, #0]
 80012a8:	f44f 5200 	mov.w	r2, #8192	@ 0x2000
 80012ac:	605a      	str	r2, [r3, #4]
 80012ae:	2300      	movs	r3, #0
 80012b0:	4618      	mov	r0, r3
 80012b2:	370c      	adds	r7, #12
 80012b4:	46bd      	mov	sp, r7
 80012b6:	f85d 7b04 	ldr.w	r7, [sp], #4
 80012ba:	4770      	bx	lr

080012bc <_isatty>:
 80012bc:	b480      	push	{r7}
 80012be:	b083      	sub	sp, #12
 80012c0:	af00      	add	r7, sp, #0
 80012c2:	6078      	str	r0, [r7, #4]
 80012c4:	2301      	movs	r3, #1
 80012c6:	4618      	mov	r0, r3
 80012c8:	370c      	adds	r7, #12
 80012ca:	46bd      	mov	sp, r7
 80012cc:	f85d 7b04 	ldr.w	r7, [sp], #4
 80012d0:	4770      	bx	lr

080012d2 <_lseek>:
 80012d2:	b480      	push	{r7}
 80012d4:	b085      	sub	sp, #20
 80012d6:	af00      	add	r7, sp, #0
 80012d8:	60f8      	str	r0, [r7, #12]
 80012da:	60b9      	str	r1, [r7, #8]
 80012dc:	607a      	str	r2, [r7, #4]
 80012de:	2300      	movs	r3, #0
 80012e0:	4618      	mov	r0, r3
 80012e2:	3714      	adds	r7, #20
 80012e4:	46bd      	mov	sp, r7
 80012e6:	f85d 7b04 	ldr.w	r7, [sp], #4
 80012ea:	4770      	bx	lr

080012ec <_sbrk>:
 80012ec:	b580      	push	{r7, lr}
 80012ee:	b086      	sub	sp, #24
 80012f0:	af00      	add	r7, sp, #0
 80012f2:	6078      	str	r0, [r7, #4]
 80012f4:	4a14      	ldr	r2, [pc, #80]	@ (8001348 <_sbrk+0x5c>)
 80012f6:	4b15      	ldr	r3, [pc, #84]	@ (800134c <_sbrk+0x60>)
 80012f8:	1ad3      	subs	r3, r2, r3
 80012fa:	617b      	str	r3, [r7, #20]
 80012fc:	697b      	ldr	r3, [r7, #20]
 80012fe:	613b      	str	r3, [r7, #16]
 8001300:	4b13      	ldr	r3, [pc, #76]	@ (8001350 <_sbrk+0x64>)
 8001302:	681b      	ldr	r3, [r3, #0]
 8001304:	2b00      	cmp	r3, #0
 8001306:	d102      	bne.n	800130e <_sbrk+0x22>
 8001308:	4b11      	ldr	r3, [pc, #68]	@ (8001350 <_sbrk+0x64>)
 800130a:	4a12      	ldr	r2, [pc, #72]	@ (8001354 <_sbrk+0x68>)
 800130c:	601a      	str	r2, [r3, #0]
 800130e:	4b10      	ldr	r3, [pc, #64]	@ (8001350 <_sbrk+0x64>)
 8001310:	681a      	ldr	r2, [r3, #0]
 8001312:	687b      	ldr	r3, [r7, #4]
 8001314:	4413      	add	r3, r2
 8001316:	693a      	ldr	r2, [r7, #16]
 8001318:	429a      	cmp	r2, r3
 800131a:	d207      	bcs.n	800132c <_sbrk+0x40>
 800131c:	f01f fd22 	bl	8020d64 <__errno>
 8001320:	4603      	mov	r3, r0
 8001322:	220c      	movs	r2, #12
 8001324:	601a      	str	r2, [r3, #0]
 8001326:	f04f 33ff 	mov.w	r3, #4294967295
 800132a:	e009      	b.n	8001340 <_sbrk+0x54>
 800132c:	4b08      	ldr	r3, [pc, #32]	@ (8001350 <_sbrk+0x64>)
 800132e:	681b      	ldr	r3, [r3, #0]
 8001330:	60fb      	str	r3, [r7, #12]
 8001332:	4b07      	ldr	r3, [pc, #28]	@ (8001350 <_sbrk+0x64>)
 8001334:	681a      	ldr	r2, [r3, #0]
 8001336:	687b      	ldr	r3, [r7, #4]
 8001338:	4413      	add	r3, r2
 800133a:	4a05      	ldr	r2, [pc, #20]	@ (8001350 <_sbrk+0x64>)
 800133c:	6013      	str	r3, [r2, #0]
 800133e:	68fb      	ldr	r3, [r7, #12]
 8001340:	4618      	mov	r0, r3
 8001342:	3718      	adds	r7, #24
 8001344:	46bd      	mov	sp, r7
 8001346:	bd80      	pop	{r7, pc}
 8001348:	20020000 	.word	0x20020000
 800134c:	00000400 	.word	0x00000400
 8001350:	20000594 	.word	0x20000594
 8001354:	20003998 	.word	0x20003998

08001358 <SystemInit>:
  *         configuration.
  * @param  None
  * @retval None
  */
void SystemInit(void)
{
 8001358:	b480      	push	{r7}
 800135a:	af00      	add	r7, sp, #0
  /* FPU settings ------------------------------------------------------------*/
  #if (__FPU_PRESENT == 1) && (__FPU_USED == 1)
    SCB->CPACR |= ((3UL << 10*2)|(3UL << 11*2));  /* set CP10 and CP11 Full Access */
 800135c:	4b06      	ldr	r3, [pc, #24]	@ (8001378 <SystemInit+0x20>)
 800135e:	f8d3 3088 	ldr.w	r3, [r3, #136]	@ 0x88
 8001362:	4a05      	ldr	r2, [pc, #20]	@ (8001378 <SystemInit+0x20>)
 8001364:	f443 0370 	orr.w	r3, r3, #15728640	@ 0xf00000
 8001368:	f8c2 3088 	str.w	r3, [r2, #136]	@ 0x88

  /* Configure the Vector Table location -------------------------------------*/
#if defined(USER_VECT_TAB_ADDRESS)
  SCB->VTOR = VECT_TAB_BASE_ADDRESS | VECT_TAB_OFFSET; /* Vector Table Relocation in Internal SRAM */
#endif /* USER_VECT_TAB_ADDRESS */
}
 800136c:	bf00      	nop
 800136e:	46bd      	mov	sp, r7
 8001370:	f85d 7b04 	ldr.w	r7, [sp], #4
 8001374:	4770      	bx	lr
 8001376:	bf00      	nop
 8001378:	e000ed00 	.word	0xe000ed00

0800137c <Displ_Select>:

/******************************************
 * @brief	enable display, disabling touch
 * 			device selected if CS low
 ******************************************/
void Displ_Select(void) {
 800137c:	b580      	push	{r7, lr}
 800137e:	af00      	add	r7, sp, #0
	if (TOUCH_SPI==DISPL_SPI){														// if SPI port shared (display <-> touch)
		if (HAL_GPIO_ReadPin(DISPL_CS_GPIO_Port, DISPL_CS_Pin)) {					// if display not yet selected
 8001380:	2180      	movs	r1, #128	@ 0x80
 8001382:	4810      	ldr	r0, [pc, #64]	@ (80013c4 <Displ_Select+0x48>)
 8001384:	f002 f828 	bl	80033d8 <HAL_GPIO_ReadPin>
 8001388:	4603      	mov	r3, r0
 800138a:	2b00      	cmp	r3, #0
 800138c:	d017      	beq.n	80013be <Displ_Select+0x42>
			HAL_GPIO_WritePin(TOUCH_CS_GPIO_Port, TOUCH_CS_Pin, GPIO_PIN_SET); 		// unselect touch
 800138e:	2201      	movs	r2, #1
 8001390:	f44f 7100 	mov.w	r1, #512	@ 0x200
 8001394:	480c      	ldr	r0, [pc, #48]	@ (80013c8 <Displ_Select+0x4c>)
 8001396:	f002 f837 	bl	8003408 <HAL_GPIO_WritePin>
			SET_DISPL_SPI_BAUDRATE;				   									//change SPI port speed as per display needs
 800139a:	4b0c      	ldr	r3, [pc, #48]	@ (80013cc <Displ_Select+0x50>)
 800139c:	681a      	ldr	r2, [r3, #0]
 800139e:	490b      	ldr	r1, [pc, #44]	@ (80013cc <Displ_Select+0x50>)
 80013a0:	f64f 73c7 	movw	r3, #65479	@ 0xffc7
 80013a4:	4013      	ands	r3, r2
 80013a6:	600b      	str	r3, [r1, #0]
 80013a8:	4b08      	ldr	r3, [pc, #32]	@ (80013cc <Displ_Select+0x50>)
 80013aa:	681b      	ldr	r3, [r3, #0]
 80013ac:	4a07      	ldr	r2, [pc, #28]	@ (80013cc <Displ_Select+0x50>)
 80013ae:	f043 0308 	orr.w	r3, r3, #8
 80013b2:	6013      	str	r3, [r2, #0]
			HAL_GPIO_WritePin(DISPL_CS_GPIO_Port, DISPL_CS_Pin, GPIO_PIN_RESET);	// select display
 80013b4:	2200      	movs	r2, #0
 80013b6:	2180      	movs	r1, #128	@ 0x80
 80013b8:	4802      	ldr	r0, [pc, #8]	@ (80013c4 <Displ_Select+0x48>)
 80013ba:	f002 f825 	bl	8003408 <HAL_GPIO_WritePin>
		}
	}
}
 80013be:	bf00      	nop
 80013c0:	bd80      	pop	{r7, pc}
 80013c2:	bf00      	nop
 80013c4:	40020800 	.word	0x40020800
 80013c8:	40020000 	.word	0x40020000
 80013cc:	40003800 	.word	0x40003800

080013d0 <Displ_Transmit>:
 * @PARAM	DC_Status 	indicates if sending command or data
 * 			data		buffer data to send
 * 			dataSize	number of bytes in "data" to be sent
 * 			isTouchGFXBuffer 1 only when called by touchgfxDisplayDriverTransmitBlock (for byte endian conversion). All other cases 0
 **************************/
void Displ_Transmit(GPIO_PinState DC_Status, uint8_t* data, uint16_t dataSize, uint8_t isTouchGFXBuffer ){
 80013d0:	b580      	push	{r7, lr}
 80013d2:	b086      	sub	sp, #24
 80013d4:	af00      	add	r7, sp, #0
 80013d6:	6039      	str	r1, [r7, #0]
 80013d8:	4611      	mov	r1, r2
 80013da:	461a      	mov	r2, r3
 80013dc:	4603      	mov	r3, r0
 80013de:	71fb      	strb	r3, [r7, #7]
 80013e0:	460b      	mov	r3, r1
 80013e2:	80bb      	strh	r3, [r7, #4]
 80013e4:	4613      	mov	r3, r2
 80013e6:	71bb      	strb	r3, [r7, #6]

	while (!Displ_SpiAvailable) {};  // waiting for a free SPI port. Flag is set to 1 by transmission-complete interrupt callback
 80013e8:	bf00      	nop
 80013ea:	4b25      	ldr	r3, [pc, #148]	@ (8001480 <Displ_Transmit+0xb0>)
 80013ec:	781b      	ldrb	r3, [r3, #0]
 80013ee:	b2db      	uxtb	r3, r3
 80013f0:	2b00      	cmp	r3, #0
 80013f2:	d0fa      	beq.n	80013ea <Displ_Transmit+0x1a>

	Displ_Select();
 80013f4:	f7ff ffc2 	bl	800137c <Displ_Select>
	HAL_GPIO_WritePin(DISPL_DC_GPIO_Port, DISPL_DC_Pin, DC_Status);
 80013f8:	79fb      	ldrb	r3, [r7, #7]
 80013fa:	461a      	mov	r2, r3
 80013fc:	2180      	movs	r1, #128	@ 0x80
 80013fe:	4821      	ldr	r0, [pc, #132]	@ (8001484 <Displ_Transmit+0xb4>)
 8001400:	f002 f802 	bl	8003408 <HAL_GPIO_WritePin>

	if (isTouchGFXBuffer){
 8001404:	79bb      	ldrb	r3, [r7, #6]
 8001406:	2b00      	cmp	r3, #0
 8001408:	d016      	beq.n	8001438 <Displ_Transmit+0x68>
#ifdef Z_RGB565
//if color format is RGB565 just swap even and odd bytes correcting endianess for ILI driver
		uint32_t *limit=(uint32_t*)(data+dataSize);
 800140a:	88bb      	ldrh	r3, [r7, #4]
 800140c:	683a      	ldr	r2, [r7, #0]
 800140e:	4413      	add	r3, r2
 8001410:	613b      	str	r3, [r7, #16]
		for (uint32_t *data32=(uint32_t*)data; data32<limit; data32++) {
 8001412:	683b      	ldr	r3, [r7, #0]
 8001414:	617b      	str	r3, [r7, #20]
 8001416:	e00b      	b.n	8001430 <Displ_Transmit+0x60>
			*data32=__REV16(*data32);
 8001418:	697b      	ldr	r3, [r7, #20]
 800141a:	681b      	ldr	r3, [r3, #0]
 800141c:	60fb      	str	r3, [r7, #12]
  __ASM ("rev16 %0, %1" : __CMSIS_GCC_OUT_REG (result) : __CMSIS_GCC_USE_REG (value) );
 800141e:	68fb      	ldr	r3, [r7, #12]
 8001420:	ba5b      	rev16	r3, r3
 8001422:	60bb      	str	r3, [r7, #8]
  return result;
 8001424:	68ba      	ldr	r2, [r7, #8]
 8001426:	697b      	ldr	r3, [r7, #20]
 8001428:	601a      	str	r2, [r3, #0]
		for (uint32_t *data32=(uint32_t*)data; data32<limit; data32++) {
 800142a:	697b      	ldr	r3, [r7, #20]
 800142c:	3304      	adds	r3, #4
 800142e:	617b      	str	r3, [r7, #20]
 8001430:	697a      	ldr	r2, [r7, #20]
 8001432:	693b      	ldr	r3, [r7, #16]
 8001434:	429a      	cmp	r2, r3
 8001436:	d3ef      	bcc.n	8001418 <Displ_Transmit+0x48>
#ifdef DISPLAY_SPI_INTERRUPT_MODE
		Displ_SpiAvailable=0;
		HAL_SPI_Transmit_IT(&DISPL_SPI_PORT , data, dataSize);
#else
#ifdef DISPLAY_SPI_DMA_MODE
		if (dataSize<DISPL_DMA_CUTOFF) {
 8001438:	88bb      	ldrh	r3, [r7, #4]
 800143a:	2b13      	cmp	r3, #19
 800143c:	d812      	bhi.n	8001464 <Displ_Transmit+0x94>
#endif //DISPLAY_SPI_DMA_MODE
			Displ_SpiAvailable=0;
 800143e:	4b10      	ldr	r3, [pc, #64]	@ (8001480 <Displ_Transmit+0xb0>)
 8001440:	2200      	movs	r2, #0
 8001442:	701a      	strb	r2, [r3, #0]
			HAL_SPI_Transmit(&DISPL_SPI_PORT , data, dataSize, HAL_MAX_DELAY);
 8001444:	88ba      	ldrh	r2, [r7, #4]
 8001446:	f04f 33ff 	mov.w	r3, #4294967295
 800144a:	6839      	ldr	r1, [r7, #0]
 800144c:	480e      	ldr	r0, [pc, #56]	@ (8001488 <Displ_Transmit+0xb8>)
 800144e:	f003 fece 	bl	80051ee <HAL_SPI_Transmit>
			Displ_SpiAvailable=1;
 8001452:	4b0b      	ldr	r3, [pc, #44]	@ (8001480 <Displ_Transmit+0xb0>)
 8001454:	2201      	movs	r2, #1
 8001456:	701a      	strb	r2, [r3, #0]
#ifdef DISPLAY_USING_TOUCHGFX
			if (isTouchGFXBuffer){
 8001458:	79bb      	ldrb	r3, [r7, #6]
 800145a:	2b00      	cmp	r3, #0
 800145c:	d00b      	beq.n	8001476 <Displ_Transmit+0xa6>
				DisplayDriver_TransferCompleteCallback();
 800145e:	f00a f803 	bl	800b468 <DisplayDriver_TransferCompleteCallback>
			Displ_SpiAvailable=0;
			HAL_SPI_Transmit_DMA(&DISPL_SPI_PORT , data, dataSize);
		}
#endif //DISPLAY_SPI_DMA_MODE
#endif //DISPLAY_SPI_INTERRUPT_MODE
	}
 8001462:	e008      	b.n	8001476 <Displ_Transmit+0xa6>
			Displ_SpiAvailable=0;
 8001464:	4b06      	ldr	r3, [pc, #24]	@ (8001480 <Displ_Transmit+0xb0>)
 8001466:	2200      	movs	r2, #0
 8001468:	701a      	strb	r2, [r3, #0]
			HAL_SPI_Transmit_DMA(&DISPL_SPI_PORT , data, dataSize);
 800146a:	88bb      	ldrh	r3, [r7, #4]
 800146c:	461a      	mov	r2, r3
 800146e:	6839      	ldr	r1, [r7, #0]
 8001470:	4805      	ldr	r0, [pc, #20]	@ (8001488 <Displ_Transmit+0xb8>)
 8001472:	f004 fac3 	bl	80059fc <HAL_SPI_Transmit_DMA>
	}
 8001476:	bf00      	nop
 8001478:	3718      	adds	r7, #24
 800147a:	46bd      	mov	sp, r7
 800147c:	bd80      	pop	{r7, pc}
 800147e:	bf00      	nop
 8001480:	2000000c 	.word	0x2000000c
 8001484:	40020000 	.word	0x40020000
 8001488:	20000440 	.word	0x20000440

0800148c <Displ_WriteCommand>:


/**********************************
 * @BRIEF	transmit a byte in a SPI_COMMAND format
 **********************************/
void Displ_WriteCommand(uint8_t cmd){
 800148c:	b580      	push	{r7, lr}
 800148e:	b082      	sub	sp, #8
 8001490:	af00      	add	r7, sp, #0
 8001492:	4603      	mov	r3, r0
 8001494:	71fb      	strb	r3, [r7, #7]
	Displ_Transmit(SPI_COMMAND, &cmd, sizeof(cmd),0);
 8001496:	1df9      	adds	r1, r7, #7
 8001498:	2300      	movs	r3, #0
 800149a:	2201      	movs	r2, #1
 800149c:	2000      	movs	r0, #0
 800149e:	f7ff ff97 	bl	80013d0 <Displ_Transmit>
}
 80014a2:	bf00      	nop
 80014a4:	3708      	adds	r7, #8
 80014a6:	46bd      	mov	sp, r7
 80014a8:	bd80      	pop	{r7, pc}

080014aa <Displ_WriteData>:
 * @BRIEF	transmit a set of data in a SPI_DATA format
 * @PARAM 	data		buffer data to send
 * 			dataSize	number of bytes in "data" to be sent
 * 			isTouchGFXBuffer 1 only when called by touchgfxDisplayDriverTransmitBlock (for byte endian conversion). All other cases 0
 **********************************/
void Displ_WriteData(uint8_t* buff, size_t buff_size, uint8_t isTouchGFXBuffer){
 80014aa:	b580      	push	{r7, lr}
 80014ac:	b084      	sub	sp, #16
 80014ae:	af00      	add	r7, sp, #0
 80014b0:	60f8      	str	r0, [r7, #12]
 80014b2:	60b9      	str	r1, [r7, #8]
 80014b4:	4613      	mov	r3, r2
 80014b6:	71fb      	strb	r3, [r7, #7]
	if (buff_size==0) return;
 80014b8:	68bb      	ldr	r3, [r7, #8]
 80014ba:	2b00      	cmp	r3, #0
 80014bc:	d007      	beq.n	80014ce <Displ_WriteData+0x24>
	Displ_Transmit(SPI_DATA, buff, buff_size, isTouchGFXBuffer);
 80014be:	68bb      	ldr	r3, [r7, #8]
 80014c0:	b29a      	uxth	r2, r3
 80014c2:	79fb      	ldrb	r3, [r7, #7]
 80014c4:	68f9      	ldr	r1, [r7, #12]
 80014c6:	2001      	movs	r0, #1
 80014c8:	f7ff ff82 	bl	80013d0 <Displ_Transmit>
 80014cc:	e000      	b.n	80014d0 <Displ_WriteData+0x26>
	if (buff_size==0) return;
 80014ce:	bf00      	nop
}
 80014d0:	3710      	adds	r7, #16
 80014d2:	46bd      	mov	sp, r7
 80014d4:	bd80      	pop	{r7, pc}
	...

080014d8 <ILI9XXX_Init>:


/**********************************
 * @brief	ILIXXX initialization sequence
 **********************************/
void ILI9XXX_Init(){
 80014d8:	b580      	push	{r7, lr}
 80014da:	af00      	add	r7, sp, #0
	Displ_Select();
 80014dc:	f7ff ff4e 	bl	800137c <Displ_Select>

	HAL_GPIO_WritePin(DISPL_RST_GPIO_Port, DISPL_RST_Pin, GPIO_PIN_RESET);
 80014e0:	2200      	movs	r2, #0
 80014e2:	2140      	movs	r1, #64	@ 0x40
 80014e4:	4819      	ldr	r0, [pc, #100]	@ (800154c <ILI9XXX_Init+0x74>)
 80014e6:	f001 ff8f 	bl	8003408 <HAL_GPIO_WritePin>
	HAL_Delay(1);
 80014ea:	2001      	movs	r0, #1
 80014ec:	f000 fc7c 	bl	8001de8 <HAL_Delay>
	HAL_GPIO_WritePin(DISPL_RST_GPIO_Port, DISPL_RST_Pin, GPIO_PIN_SET);
 80014f0:	2201      	movs	r2, #1
 80014f2:	2140      	movs	r1, #64	@ 0x40
 80014f4:	4815      	ldr	r0, [pc, #84]	@ (800154c <ILI9XXX_Init+0x74>)
 80014f6:	f001 ff87 	bl	8003408 <HAL_GPIO_WritePin>
	HAL_Delay(150);
 80014fa:	2096      	movs	r0, #150	@ 0x96
 80014fc:	f000 fc74 	bl	8001de8 <HAL_Delay>
		Displ_WriteData(data,3);
	#endif
*/


	Displ_WriteCommand(ILI9XXX_PIXEL_FORMAT);
 8001500:	203a      	movs	r0, #58	@ 0x3a
 8001502:	f7ff ffc3 	bl	800148c <Displ_WriteCommand>
#ifdef Z_RGB666
	Displ_WriteData((uint8_t *)"\x66",1,0);		// RGB666
#endif
#ifdef Z_RGB565
	Displ_WriteData((uint8_t *)"\x55",1,0);		// RGB565
 8001506:	2200      	movs	r2, #0
 8001508:	2101      	movs	r1, #1
 800150a:	4811      	ldr	r0, [pc, #68]	@ (8001550 <ILI9XXX_Init+0x78>)
 800150c:	f7ff ffcd 	bl	80014aa <Displ_WriteData>
#endif
	Displ_WriteCommand(ILI9XXX_RGB_INTERFACE);
 8001510:	20b0      	movs	r0, #176	@ 0xb0
 8001512:	f7ff ffbb 	bl	800148c <Displ_WriteCommand>
	Displ_WriteData((uint8_t *)"\x80",1,0);        // disable MISO pin
 8001516:	2200      	movs	r2, #0
 8001518:	2101      	movs	r1, #1
 800151a:	480e      	ldr	r0, [pc, #56]	@ (8001554 <ILI9XXX_Init+0x7c>)
 800151c:	f7ff ffc5 	bl	80014aa <Displ_WriteData>

	Displ_WriteCommand(ILI9XXX_RGB_INTERFACE);
 8001520:	20b0      	movs	r0, #176	@ 0xb0
 8001522:	f7ff ffb3 	bl	800148c <Displ_WriteCommand>
	Displ_WriteData((uint8_t *)"\x80",1,0);        // disable MISO pin
 8001526:	2200      	movs	r2, #0
 8001528:	2101      	movs	r1, #1
 800152a:	480a      	ldr	r0, [pc, #40]	@ (8001554 <ILI9XXX_Init+0x7c>)
 800152c:	f7ff ffbd 	bl	80014aa <Displ_WriteData>

	Displ_WriteCommand(ILI9XXX_SLEEP_OUT);
 8001530:	2011      	movs	r0, #17
 8001532:	f7ff ffab 	bl	800148c <Displ_WriteCommand>
	HAL_Delay(120);
 8001536:	2078      	movs	r0, #120	@ 0x78
 8001538:	f000 fc56 	bl	8001de8 <HAL_Delay>

	Displ_WriteCommand(ILI9XXX_DISPLAY_ON);
 800153c:	2029      	movs	r0, #41	@ 0x29
 800153e:	f7ff ffa5 	bl	800148c <Displ_WriteCommand>
	HAL_Delay(5);
 8001542:	2005      	movs	r0, #5
 8001544:	f000 fc50 	bl	8001de8 <HAL_Delay>

}
 8001548:	bf00      	nop
 800154a:	bd80      	pop	{r7, pc}
 800154c:	40020400 	.word	0x40020400
 8001550:	08021868 	.word	0x08021868
 8001554:	0802186c 	.word	0x0802186c

08001558 <Displ_SetAddressWindow>:
 * 			information
 * @param  x1,y1,x2,y2 top left and bottom
 * 					   right corner of the area
 * 					   to write
 **********************************************/
void Displ_SetAddressWindow(uint16_t x1, uint16_t y1, uint16_t x2, uint16_t y2) {
 8001558:	b590      	push	{r4, r7, lr}
 800155a:	b083      	sub	sp, #12
 800155c:	af00      	add	r7, sp, #0
 800155e:	4604      	mov	r4, r0
 8001560:	4608      	mov	r0, r1
 8001562:	4611      	mov	r1, r2
 8001564:	461a      	mov	r2, r3
 8001566:	4623      	mov	r3, r4
 8001568:	80fb      	strh	r3, [r7, #6]
 800156a:	4603      	mov	r3, r0
 800156c:	80bb      	strh	r3, [r7, #4]
 800156e:	460b      	mov	r3, r1
 8001570:	807b      	strh	r3, [r7, #2]
 8001572:	4613      	mov	r3, r2
 8001574:	803b      	strh	r3, [r7, #0]
	static uint8_t data[4];

	((uint32_t *)data)[0]=(((x2 & 0xFF)<<24) | ((x2 & 0xFF00)<<8) | ((x1 & 0xFF)<<8) | ((x1 & 0xFF00)>>8) );
 8001576:	887b      	ldrh	r3, [r7, #2]
 8001578:	061a      	lsls	r2, r3, #24
 800157a:	887b      	ldrh	r3, [r7, #2]
 800157c:	021b      	lsls	r3, r3, #8
 800157e:	f403 037f 	and.w	r3, r3, #16711680	@ 0xff0000
 8001582:	431a      	orrs	r2, r3
 8001584:	88fb      	ldrh	r3, [r7, #6]
 8001586:	021b      	lsls	r3, r3, #8
 8001588:	b29b      	uxth	r3, r3
 800158a:	4313      	orrs	r3, r2
 800158c:	88fa      	ldrh	r2, [r7, #6]
 800158e:	0a12      	lsrs	r2, r2, #8
 8001590:	b292      	uxth	r2, r2
 8001592:	431a      	orrs	r2, r3
 8001594:	4b14      	ldr	r3, [pc, #80]	@ (80015e8 <Displ_SetAddressWindow+0x90>)
 8001596:	601a      	str	r2, [r3, #0]
	Displ_WriteCommand(ILI9XXX_COLUMN_ADDR);
 8001598:	202a      	movs	r0, #42	@ 0x2a
 800159a:	f7ff ff77 	bl	800148c <Displ_WriteCommand>
	Displ_WriteData(data, 4,0);
 800159e:	2200      	movs	r2, #0
 80015a0:	2104      	movs	r1, #4
 80015a2:	4811      	ldr	r0, [pc, #68]	@ (80015e8 <Displ_SetAddressWindow+0x90>)
 80015a4:	f7ff ff81 	bl	80014aa <Displ_WriteData>

	((uint32_t *)data)[0]=(((y2 & 0xFF)<<24) | ((y2 & 0xFF00)<<8) | ((y1 & 0xFF)<<8) | ((y1 & 0xFF00)>>8) );
 80015a8:	883b      	ldrh	r3, [r7, #0]
 80015aa:	061a      	lsls	r2, r3, #24
 80015ac:	883b      	ldrh	r3, [r7, #0]
 80015ae:	021b      	lsls	r3, r3, #8
 80015b0:	f403 037f 	and.w	r3, r3, #16711680	@ 0xff0000
 80015b4:	431a      	orrs	r2, r3
 80015b6:	88bb      	ldrh	r3, [r7, #4]
 80015b8:	021b      	lsls	r3, r3, #8
 80015ba:	b29b      	uxth	r3, r3
 80015bc:	4313      	orrs	r3, r2
 80015be:	88ba      	ldrh	r2, [r7, #4]
 80015c0:	0a12      	lsrs	r2, r2, #8
 80015c2:	b292      	uxth	r2, r2
 80015c4:	431a      	orrs	r2, r3
 80015c6:	4b08      	ldr	r3, [pc, #32]	@ (80015e8 <Displ_SetAddressWindow+0x90>)
 80015c8:	601a      	str	r2, [r3, #0]
	Displ_WriteCommand(ILI9XXX_PAGE_ADDR);
 80015ca:	202b      	movs	r0, #43	@ 0x2b
 80015cc:	f7ff ff5e 	bl	800148c <Displ_WriteCommand>
	Displ_WriteData(data, 4,0);
 80015d0:	2200      	movs	r2, #0
 80015d2:	2104      	movs	r1, #4
 80015d4:	4804      	ldr	r0, [pc, #16]	@ (80015e8 <Displ_SetAddressWindow+0x90>)
 80015d6:	f7ff ff68 	bl	80014aa <Displ_WriteData>
	Displ_WriteCommand(ILI9XXX_MEMWR);
 80015da:	202c      	movs	r0, #44	@ 0x2c
 80015dc:	f7ff ff56 	bl	800148c <Displ_WriteCommand>
}
 80015e0:	bf00      	nop
 80015e2:	370c      	adds	r7, #12
 80015e4:	46bd      	mov	sp, r7
 80015e6:	bd90      	pop	{r4, r7, pc}
 80015e8:	200005a0 	.word	0x200005a0

080015ec <Displ_Init>:

/*****************************************************
 * @brief				first display initialization.
 * @param	orientation	display orientation
 *****************************************************/
void Displ_Init(Displ_Orientat_e orientation){
 80015ec:	b580      	push	{r7, lr}
 80015ee:	b082      	sub	sp, #8
 80015f0:	af00      	add	r7, sp, #0
 80015f2:	4603      	mov	r3, r0
 80015f4:	71fb      	strb	r3, [r7, #7]
	if (TOUCH_SPI==DISPL_SPI){													// if touch and display share the same SPI port
		HAL_GPIO_WritePin(DISPL_CS_GPIO_Port, DISPL_CS_Pin, GPIO_PIN_SET); 		// unselect display (will be selected at writing time)
 80015f6:	2201      	movs	r2, #1
 80015f8:	2180      	movs	r1, #128	@ 0x80
 80015fa:	4809      	ldr	r0, [pc, #36]	@ (8001620 <Displ_Init+0x34>)
 80015fc:	f001 ff04 	bl	8003408 <HAL_GPIO_WritePin>
		HAL_GPIO_WritePin(TOUCH_CS_GPIO_Port, TOUCH_CS_Pin, GPIO_PIN_SET);		// unselect touch (will be selected at writing time)
 8001600:	2201      	movs	r2, #1
 8001602:	f44f 7100 	mov.w	r1, #512	@ 0x200
 8001606:	4807      	ldr	r0, [pc, #28]	@ (8001624 <Displ_Init+0x38>)
 8001608:	f001 fefe 	bl	8003408 <HAL_GPIO_WritePin>
		HAL_GPIO_WritePin(DISPL_CS_GPIO_Port, DISPL_CS_Pin, GPIO_PIN_RESET); 	// select display
		SET_DISPL_SPI_BAUDRATE;
		HAL_GPIO_WritePin(TOUCH_CS_GPIO_Port, TOUCH_CS_Pin, GPIO_PIN_RESET);	// select touch
		SET_TOUCH_SPI_BAUDRATE;
	}
	ILI9XXX_Init();
 800160c:	f7ff ff64 	bl	80014d8 <ILI9XXX_Init>
	Displ_Orientation(orientation);
 8001610:	79fb      	ldrb	r3, [r7, #7]
 8001612:	4618      	mov	r0, r3
 8001614:	f000 f808 	bl	8001628 <Displ_Orientation>
}
 8001618:	bf00      	nop
 800161a:	3708      	adds	r7, #8
 800161c:	46bd      	mov	sp, r7
 800161e:	bd80      	pop	{r7, pc}
 8001620:	40020800 	.word	0x40020800
 8001624:	40020000 	.word	0x40020000

08001628 <Displ_Orientation>:

/**********************************************
 * @brief		set orientation of the display
 * @param  	m	orientation
 **********************************************/
void Displ_Orientation(Displ_Orientat_e orientation){
 8001628:	b580      	push	{r7, lr}
 800162a:	b082      	sub	sp, #8
 800162c:	af00      	add	r7, sp, #0
 800162e:	4603      	mov	r3, r0
 8001630:	71fb      	strb	r3, [r7, #7]
	static uint8_t data[1];
	switch(orientation) {
 8001632:	79fb      	ldrb	r3, [r7, #7]
 8001634:	2b03      	cmp	r3, #3
 8001636:	d83b      	bhi.n	80016b0 <Displ_Orientation+0x88>
 8001638:	a201      	add	r2, pc, #4	@ (adr r2, 8001640 <Displ_Orientation+0x18>)
 800163a:	f852 f023 	ldr.w	pc, [r2, r3, lsl #2]
 800163e:	bf00      	nop
 8001640:	08001651 	.word	0x08001651
 8001644:	08001669 	.word	0x08001669
 8001648:	08001681 	.word	0x08001681
 800164c:	08001699 	.word	0x08001699
		case Displ_Orientat_0:
			data[0]=ILI9XXX_MADCTL_0DEG;
 8001650:	4b1f      	ldr	r3, [pc, #124]	@ (80016d0 <Displ_Orientation+0xa8>)
 8001652:	2288      	movs	r2, #136	@ 0x88
 8001654:	701a      	strb	r2, [r3, #0]
			_height = DISPL_HEIGHT;
 8001656:	4b1f      	ldr	r3, [pc, #124]	@ (80016d4 <Displ_Orientation+0xac>)
 8001658:	f44f 72f0 	mov.w	r2, #480	@ 0x1e0
 800165c:	801a      	strh	r2, [r3, #0]
			_width = DISPL_WIDTH;
 800165e:	4b1e      	ldr	r3, [pc, #120]	@ (80016d8 <Displ_Orientation+0xb0>)
 8001660:	f44f 72a0 	mov.w	r2, #320	@ 0x140
 8001664:	801a      	strh	r2, [r3, #0]
			break;
 8001666:	e023      	b.n	80016b0 <Displ_Orientation+0x88>
		case Displ_Orientat_90:
			data[0]=ILI9XXX_MADCTL_90DEG;
 8001668:	4b19      	ldr	r3, [pc, #100]	@ (80016d0 <Displ_Orientation+0xa8>)
 800166a:	22e8      	movs	r2, #232	@ 0xe8
 800166c:	701a      	strb	r2, [r3, #0]
			_height = DISPL_WIDTH;
 800166e:	4b19      	ldr	r3, [pc, #100]	@ (80016d4 <Displ_Orientation+0xac>)
 8001670:	f44f 72a0 	mov.w	r2, #320	@ 0x140
 8001674:	801a      	strh	r2, [r3, #0]
			_width = DISPL_HEIGHT;
 8001676:	4b18      	ldr	r3, [pc, #96]	@ (80016d8 <Displ_Orientation+0xb0>)
 8001678:	f44f 72f0 	mov.w	r2, #480	@ 0x1e0
 800167c:	801a      	strh	r2, [r3, #0]
			break;
 800167e:	e017      	b.n	80016b0 <Displ_Orientation+0x88>
		case Displ_Orientat_180:
			data[0]=ILI9XXX_MADCTL_180DEG;
 8001680:	4b13      	ldr	r3, [pc, #76]	@ (80016d0 <Displ_Orientation+0xa8>)
 8001682:	2248      	movs	r2, #72	@ 0x48
 8001684:	701a      	strb	r2, [r3, #0]
			_height = DISPL_HEIGHT;
 8001686:	4b13      	ldr	r3, [pc, #76]	@ (80016d4 <Displ_Orientation+0xac>)
 8001688:	f44f 72f0 	mov.w	r2, #480	@ 0x1e0
 800168c:	801a      	strh	r2, [r3, #0]
			_width = DISPL_WIDTH;
 800168e:	4b12      	ldr	r3, [pc, #72]	@ (80016d8 <Displ_Orientation+0xb0>)
 8001690:	f44f 72a0 	mov.w	r2, #320	@ 0x140
 8001694:	801a      	strh	r2, [r3, #0]
			break;
 8001696:	e00b      	b.n	80016b0 <Displ_Orientation+0x88>
		case Displ_Orientat_270:
			data[0]=ILI9XXX_MADCTL_270DEG;
 8001698:	4b0d      	ldr	r3, [pc, #52]	@ (80016d0 <Displ_Orientation+0xa8>)
 800169a:	2228      	movs	r2, #40	@ 0x28
 800169c:	701a      	strb	r2, [r3, #0]
			_height = DISPL_WIDTH;
 800169e:	4b0d      	ldr	r3, [pc, #52]	@ (80016d4 <Displ_Orientation+0xac>)
 80016a0:	f44f 72a0 	mov.w	r2, #320	@ 0x140
 80016a4:	801a      	strh	r2, [r3, #0]
			_width = DISPL_HEIGHT;
 80016a6:	4b0c      	ldr	r3, [pc, #48]	@ (80016d8 <Displ_Orientation+0xb0>)
 80016a8:	f44f 72f0 	mov.w	r2, #480	@ 0x1e0
 80016ac:	801a      	strh	r2, [r3, #0]
			break;
 80016ae:	bf00      	nop
	}
	Displ_WriteCommand(ILI9XXX_MADCTL);
 80016b0:	2036      	movs	r0, #54	@ 0x36
 80016b2:	f7ff feeb 	bl	800148c <Displ_WriteCommand>
	Displ_WriteData(data,1,0);
 80016b6:	2200      	movs	r2, #0
 80016b8:	2101      	movs	r1, #1
 80016ba:	4805      	ldr	r0, [pc, #20]	@ (80016d0 <Displ_Orientation+0xa8>)
 80016bc:	f7ff fef5 	bl	80014aa <Displ_WriteData>
	current_orientation = orientation;  //stores active orientation into a global variable for touch routines
 80016c0:	4a06      	ldr	r2, [pc, #24]	@ (80016dc <Displ_Orientation+0xb4>)
 80016c2:	79fb      	ldrb	r3, [r7, #7]
 80016c4:	7013      	strb	r3, [r2, #0]
}
 80016c6:	bf00      	nop
 80016c8:	3708      	adds	r7, #8
 80016ca:	46bd      	mov	sp, r7
 80016cc:	bd80      	pop	{r7, pc}
 80016ce:	bf00      	nop
 80016d0:	200005a4 	.word	0x200005a4
 80016d4:	2000059c 	.word	0x2000059c
 80016d8:	2000059a 	.word	0x2000059a
 80016dc:	20000598 	.word	0x20000598

080016e0 <HAL_SPI_ErrorCallback>:




void HAL_SPI_ErrorCallback(SPI_HandleTypeDef *hspi){
 80016e0:	b480      	push	{r7}
 80016e2:	b083      	sub	sp, #12
 80016e4:	af00      	add	r7, sp, #0
 80016e6:	6078      	str	r0, [r7, #4]
	if (hspi->Instance==DISPL_SPI) {
 80016e8:	687b      	ldr	r3, [r7, #4]
 80016ea:	681b      	ldr	r3, [r3, #0]
 80016ec:	4a05      	ldr	r2, [pc, #20]	@ (8001704 <HAL_SPI_ErrorCallback+0x24>)
 80016ee:	4293      	cmp	r3, r2
 80016f0:	d102      	bne.n	80016f8 <HAL_SPI_ErrorCallback+0x18>
		Displ_SpiAvailable=1;
 80016f2:	4b05      	ldr	r3, [pc, #20]	@ (8001708 <HAL_SPI_ErrorCallback+0x28>)
 80016f4:	2201      	movs	r2, #1
 80016f6:	701a      	strb	r2, [r3, #0]
	}
}
 80016f8:	bf00      	nop
 80016fa:	370c      	adds	r7, #12
 80016fc:	46bd      	mov	sp, r7
 80016fe:	f85d 7b04 	ldr.w	r7, [sp], #4
 8001702:	4770      	bx	lr
 8001704:	40003800 	.word	0x40003800
 8001708:	2000000c 	.word	0x2000000c

0800170c <HAL_SPI_TxCpltCallback>:





void HAL_SPI_TxCpltCallback(SPI_HandleTypeDef *hspi) {
 800170c:	b580      	push	{r7, lr}
 800170e:	b082      	sub	sp, #8
 8001710:	af00      	add	r7, sp, #0
 8001712:	6078      	str	r0, [r7, #4]
	if (hspi->Instance==DISPL_SPI) {
 8001714:	687b      	ldr	r3, [r7, #4]
 8001716:	681b      	ldr	r3, [r3, #0]
 8001718:	4a05      	ldr	r2, [pc, #20]	@ (8001730 <HAL_SPI_TxCpltCallback+0x24>)
 800171a:	4293      	cmp	r3, r2
 800171c:	d104      	bne.n	8001728 <HAL_SPI_TxCpltCallback+0x1c>
		Displ_SpiAvailable=1;
 800171e:	4b05      	ldr	r3, [pc, #20]	@ (8001734 <HAL_SPI_TxCpltCallback+0x28>)
 8001720:	2201      	movs	r2, #1
 8001722:	701a      	strb	r2, [r3, #0]

	#ifdef DISPLAY_USING_TOUCHGFX
		DisplayDriver_TransferCompleteCallback();
 8001724:	f009 fea0 	bl	800b468 <DisplayDriver_TransferCompleteCallback>
	#endif

	}
}
 8001728:	bf00      	nop
 800172a:	3708      	adds	r7, #8
 800172c:	46bd      	mov	sp, r7
 800172e:	bd80      	pop	{r7, pc}
 8001730:	40003800 	.word	0x40003800
 8001734:	2000000c 	.word	0x2000000c

08001738 <Displ_BackLight>:
 *				'0'		set the display level to 0 (off)
 *				'I'		'Initialize'  IT MUST BE in dimming mode
 *              'Q'		do nothing, just return current level
 * @return		current backlight level
 **************************************/
uint32_t  Displ_BackLight(uint8_t cmd) {
 8001738:	b580      	push	{r7, lr}
 800173a:	b082      	sub	sp, #8
 800173c:	af00      	add	r7, sp, #0
 800173e:	4603      	mov	r3, r0
 8001740:	71fb      	strb	r3, [r7, #7]

#ifdef DISPLAY_DIMMING_MODE
	static uint16_t memCCR1=0;  			//it stores CCR1 value while in stand-by
#endif

	switch (cmd) {
 8001742:	79fb      	ldrb	r3, [r7, #7]
 8001744:	2b51      	cmp	r3, #81	@ 0x51
 8001746:	d00a      	beq.n	800175e <Displ_BackLight+0x26>
 8001748:	2b51      	cmp	r3, #81	@ 0x51
 800174a:	dc16      	bgt.n	800177a <Displ_BackLight+0x42>
 800174c:	2b46      	cmp	r3, #70	@ 0x46
 800174e:	d008      	beq.n	8001762 <Displ_BackLight+0x2a>
 8001750:	2b46      	cmp	r3, #70	@ 0x46
 8001752:	dc12      	bgt.n	800177a <Displ_BackLight+0x42>
 8001754:	2b30      	cmp	r3, #48	@ 0x30
 8001756:	d00a      	beq.n	800176e <Displ_BackLight+0x36>
 8001758:	2b31      	cmp	r3, #49	@ 0x31
 800175a:	d002      	beq.n	8001762 <Displ_BackLight+0x2a>
	  	HAL_TIM_PWM_Start(&BKLIT_T, BKLIT_CHANNEL);
		BKLIT_TIMER->BKLIT_CCR=BKLIT_INIT_LEVEL;
		break;
#endif
	default:
		break;
 800175c:	e00d      	b.n	800177a <Displ_BackLight+0x42>
		__NOP();
 800175e:	bf00      	nop
		break;
 8001760:	e00c      	b.n	800177c <Displ_BackLight+0x44>
		HAL_GPIO_WritePin(DISPL_LED_GPIO_Port, DISPL_LED_Pin, GPIO_PIN_SET);
 8001762:	2201      	movs	r2, #1
 8001764:	2140      	movs	r1, #64	@ 0x40
 8001766:	480a      	ldr	r0, [pc, #40]	@ (8001790 <Displ_BackLight+0x58>)
 8001768:	f001 fe4e 	bl	8003408 <HAL_GPIO_WritePin>
		break;
 800176c:	e006      	b.n	800177c <Displ_BackLight+0x44>
		HAL_GPIO_WritePin(DISPL_LED_GPIO_Port, DISPL_LED_Pin, GPIO_PIN_RESET);
 800176e:	2200      	movs	r2, #0
 8001770:	2140      	movs	r1, #64	@ 0x40
 8001772:	4807      	ldr	r0, [pc, #28]	@ (8001790 <Displ_BackLight+0x58>)
 8001774:	f001 fe48 	bl	8003408 <HAL_GPIO_WritePin>
		break;
 8001778:	e000      	b.n	800177c <Displ_BackLight+0x44>
		break;
 800177a:	bf00      	nop
	}
#ifndef DISPLAY_DIMMING_MODE
	return HAL_GPIO_ReadPin(DISPL_LED_GPIO_Port, DISPL_LED_Pin);
 800177c:	2140      	movs	r1, #64	@ 0x40
 800177e:	4804      	ldr	r0, [pc, #16]	@ (8001790 <Displ_BackLight+0x58>)
 8001780:	f001 fe2a 	bl	80033d8 <HAL_GPIO_ReadPin>
 8001784:	4603      	mov	r3, r0
#else
	return (BKLIT_TIMER->BKLIT_CCR);
#endif
}
 8001786:	4618      	mov	r0, r3
 8001788:	3708      	adds	r7, #8
 800178a:	46bd      	mov	sp, r7
 800178c:	bd80      	pop	{r7, pc}
 800178e:	bf00      	nop
 8001790:	40020000 	.word	0x40020000

08001794 <touchgfxDisplayDriverTransmitActive>:
 * @brief	TouchGFX integration: returns status of
 * 			communication to the display
 * @return	1 = there is a transmission running
 * 			0 = no transmission
 *********************************************************/
int touchgfxDisplayDriverTransmitActive(){
 8001794:	b480      	push	{r7}
 8001796:	af00      	add	r7, sp, #0
	// using the flag indicating SPI port availability
	// already used to drive communication via DMA
	return (!Displ_SpiAvailable);
 8001798:	4b06      	ldr	r3, [pc, #24]	@ (80017b4 <touchgfxDisplayDriverTransmitActive+0x20>)
 800179a:	781b      	ldrb	r3, [r3, #0]
 800179c:	b2db      	uxtb	r3, r3
 800179e:	2b00      	cmp	r3, #0
 80017a0:	bf0c      	ite	eq
 80017a2:	2301      	moveq	r3, #1
 80017a4:	2300      	movne	r3, #0
 80017a6:	b2db      	uxtb	r3, r3
}
 80017a8:	4618      	mov	r0, r3
 80017aa:	46bd      	mov	sp, r7
 80017ac:	f85d 7b04 	ldr.w	r7, [sp], #4
 80017b0:	4770      	bx	lr
 80017b2:	bf00      	nop
 80017b4:	2000000c 	.word	0x2000000c

080017b8 <touchgfxDisplayDriverTransmitBlock>:

/*********************************************************
 * @brief	TouchGFX integration: write to display the
 * 			block indicated by parameters
 *********************************************************/
void touchgfxDisplayDriverTransmitBlock(const uint8_t* pixels, uint16_t x, uint16_t y, uint16_t w, uint16_t h){
 80017b8:	b590      	push	{r4, r7, lr}
 80017ba:	b085      	sub	sp, #20
 80017bc:	af00      	add	r7, sp, #0
 80017be:	60f8      	str	r0, [r7, #12]
 80017c0:	4608      	mov	r0, r1
 80017c2:	4611      	mov	r1, r2
 80017c4:	461a      	mov	r2, r3
 80017c6:	4603      	mov	r3, r0
 80017c8:	817b      	strh	r3, [r7, #10]
 80017ca:	460b      	mov	r3, r1
 80017cc:	813b      	strh	r3, [r7, #8]
 80017ce:	4613      	mov	r3, r2
 80017d0:	80fb      	strh	r3, [r7, #6]
	//START WRITING TO DISPLAY
		Displ_SetAddressWindow(x, y, x+w-1, y+h-1);
 80017d2:	897a      	ldrh	r2, [r7, #10]
 80017d4:	88fb      	ldrh	r3, [r7, #6]
 80017d6:	4413      	add	r3, r2
 80017d8:	b29b      	uxth	r3, r3
 80017da:	3b01      	subs	r3, #1
 80017dc:	b29c      	uxth	r4, r3
 80017de:	893a      	ldrh	r2, [r7, #8]
 80017e0:	8c3b      	ldrh	r3, [r7, #32]
 80017e2:	4413      	add	r3, r2
 80017e4:	b29b      	uxth	r3, r3
 80017e6:	3b01      	subs	r3, #1
 80017e8:	b29b      	uxth	r3, r3
 80017ea:	8939      	ldrh	r1, [r7, #8]
 80017ec:	8978      	ldrh	r0, [r7, #10]
 80017ee:	4622      	mov	r2, r4
 80017f0:	f7ff feb2 	bl	8001558 <Displ_SetAddressWindow>
		Displ_WriteData((uint8_t* )pixels,((w*h)<<1),1);
 80017f4:	88fb      	ldrh	r3, [r7, #6]
 80017f6:	8c3a      	ldrh	r2, [r7, #32]
 80017f8:	fb02 f303 	mul.w	r3, r2, r3
 80017fc:	005b      	lsls	r3, r3, #1
 80017fe:	2201      	movs	r2, #1
 8001800:	4619      	mov	r1, r3
 8001802:	68f8      	ldr	r0, [r7, #12]
 8001804:	f7ff fe51 	bl	80014aa <Displ_WriteData>
}
 8001808:	bf00      	nop
 800180a:	3714      	adds	r7, #20
 800180c:	46bd      	mov	sp, r7
 800180e:	bd90      	pop	{r4, r7, pc}

08001810 <HAL_TIM_PeriodElapsedCallback>:
 * @brief	TouchGFX integration: this is the callback
 * 			function run by timer interrupt implementing
 * 			the tick timer for TouchGFX
 *********************************************************/
#ifdef DISPLAY_USING_TOUCHGFX
void HAL_TIM_PeriodElapsedCallback (TIM_HandleTypeDef * htim){
 8001810:	b580      	push	{r7, lr}
 8001812:	b082      	sub	sp, #8
 8001814:	af00      	add	r7, sp, #0
 8001816:	6078      	str	r0, [r7, #4]
	if (htim==&TGFX_T){
 8001818:	687b      	ldr	r3, [r7, #4]
 800181a:	4a04      	ldr	r2, [pc, #16]	@ (800182c <HAL_TIM_PeriodElapsedCallback+0x1c>)
 800181c:	4293      	cmp	r3, r2
 800181e:	d101      	bne.n	8001824 <HAL_TIM_PeriodElapsedCallback+0x14>
		  touchgfxSignalVSync();
 8001820:	f009 fe28 	bl	800b474 <touchgfxSignalVSync>
	}
}
 8001824:	bf00      	nop
 8001826:	3708      	adds	r7, #8
 8001828:	46bd      	mov	sp, r7
 800182a:	bd80      	pop	{r7, pc}
 800182c:	20000540 	.word	0x20000540

08001830 <Touch_HandlePenDownInterrupt>:
volatile uint8_t Touch_PenDown=0;						// set to 1 by pendown interrupt callback, reset to 0 by sw
volatile uint8_t Touch_Int_Enabled=1;					// while reading touch sensor touch interrupt handling is disabled through this flag



void Touch_HandlePenDownInterrupt (){
 8001830:	b480      	push	{r7}
 8001832:	af00      	add	r7, sp, #0
	if (Touch_Int_Enabled) {
 8001834:	4b06      	ldr	r3, [pc, #24]	@ (8001850 <Touch_HandlePenDownInterrupt+0x20>)
 8001836:	781b      	ldrb	r3, [r3, #0]
 8001838:	b2db      	uxtb	r3, r3
 800183a:	2b00      	cmp	r3, #0
 800183c:	d002      	beq.n	8001844 <Touch_HandlePenDownInterrupt+0x14>
		Touch_PenDown=1;
 800183e:	4b05      	ldr	r3, [pc, #20]	@ (8001854 <Touch_HandlePenDownInterrupt+0x24>)
 8001840:	2201      	movs	r2, #1
 8001842:	701a      	strb	r2, [r3, #0]
	}
}
 8001844:	bf00      	nop
 8001846:	46bd      	mov	sp, r7
 8001848:	f85d 7b04 	ldr.w	r7, [sp], #4
 800184c:	4770      	bx	lr
 800184e:	bf00      	nop
 8001850:	2000000d 	.word	0x2000000d
 8001854:	200005a5 	.word	0x200005a5

08001858 <HAL_GPIO_EXTI_Callback>:



void HAL_GPIO_EXTI_Callback(uint16_t GPIO_Pin){
 8001858:	b580      	push	{r7, lr}
 800185a:	b082      	sub	sp, #8
 800185c:	af00      	add	r7, sp, #0
 800185e:	4603      	mov	r3, r0
 8001860:	80fb      	strh	r3, [r7, #6]
	if (GPIO_Pin==TOUCH_INT_Pin){
 8001862:	88fb      	ldrh	r3, [r7, #6]
 8001864:	f5b3 7f80 	cmp.w	r3, #256	@ 0x100
 8001868:	d101      	bne.n	800186e <HAL_GPIO_EXTI_Callback+0x16>
		Touch_HandlePenDownInterrupt();
 800186a:	f7ff ffe1 	bl	8001830 <Touch_HandlePenDownInterrupt>
	}
}
 800186e:	bf00      	nop
 8001870:	3708      	adds	r7, #8
 8001872:	46bd      	mov	sp, r7
 8001874:	bd80      	pop	{r7, pc}
	...

08001878 <Touch_Select>:

/******************************************
 * @brief	enable touch, disabling display
 * 			set SPI baudrate as needed
 ******************************************/
void Touch_Select(void) {
 8001878:	b580      	push	{r7, lr}
 800187a:	af00      	add	r7, sp, #0
	if (TOUCH_SPI==DISPL_SPI){														// if touch and display share the same SPI port
		if (!HAL_GPIO_ReadPin(DISPL_CS_GPIO_Port, DISPL_CS_Pin)) {					// if display selected
 800187c:	2180      	movs	r1, #128	@ 0x80
 800187e:	4813      	ldr	r0, [pc, #76]	@ (80018cc <Touch_Select+0x54>)
 8001880:	f001 fdaa 	bl	80033d8 <HAL_GPIO_ReadPin>
 8001884:	4603      	mov	r3, r0
 8001886:	2b00      	cmp	r3, #0
 8001888:	d10a      	bne.n	80018a0 <Touch_Select+0x28>
			while (!Displ_SpiAvailable) {};  										// waiting for completing display communication. Flag is set to 1 by transmission-complete interrupt callback
 800188a:	bf00      	nop
 800188c:	4b10      	ldr	r3, [pc, #64]	@ (80018d0 <Touch_Select+0x58>)
 800188e:	781b      	ldrb	r3, [r3, #0]
 8001890:	b2db      	uxtb	r3, r3
 8001892:	2b00      	cmp	r3, #0
 8001894:	d0fa      	beq.n	800188c <Touch_Select+0x14>
			HAL_GPIO_WritePin(DISPL_CS_GPIO_Port, DISPL_CS_Pin, GPIO_PIN_SET); 		// unselect display
 8001896:	2201      	movs	r2, #1
 8001898:	2180      	movs	r1, #128	@ 0x80
 800189a:	480c      	ldr	r0, [pc, #48]	@ (80018cc <Touch_Select+0x54>)
 800189c:	f001 fdb4 	bl	8003408 <HAL_GPIO_WritePin>
		}
		SET_TOUCH_SPI_BAUDRATE;				   										//change SPI port speed as per display needs
 80018a0:	4b0c      	ldr	r3, [pc, #48]	@ (80018d4 <Touch_Select+0x5c>)
 80018a2:	681a      	ldr	r2, [r3, #0]
 80018a4:	490b      	ldr	r1, [pc, #44]	@ (80018d4 <Touch_Select+0x5c>)
 80018a6:	f64f 73c7 	movw	r3, #65479	@ 0xffc7
 80018aa:	4013      	ands	r3, r2
 80018ac:	600b      	str	r3, [r1, #0]
 80018ae:	4b09      	ldr	r3, [pc, #36]	@ (80018d4 <Touch_Select+0x5c>)
 80018b0:	681b      	ldr	r3, [r3, #0]
 80018b2:	4a08      	ldr	r2, [pc, #32]	@ (80018d4 <Touch_Select+0x5c>)
 80018b4:	f043 0338 	orr.w	r3, r3, #56	@ 0x38
 80018b8:	6013      	str	r3, [r2, #0]
		HAL_GPIO_WritePin(TOUCH_CS_GPIO_Port, TOUCH_CS_Pin, GPIO_PIN_RESET);
 80018ba:	2200      	movs	r2, #0
 80018bc:	f44f 7100 	mov.w	r1, #512	@ 0x200
 80018c0:	4805      	ldr	r0, [pc, #20]	@ (80018d8 <Touch_Select+0x60>)
 80018c2:	f001 fda1 	bl	8003408 <HAL_GPIO_WritePin>
	}
}
 80018c6:	bf00      	nop
 80018c8:	bd80      	pop	{r7, pc}
 80018ca:	bf00      	nop
 80018cc:	40020800 	.word	0x40020800
 80018d0:	2000000c 	.word	0x2000000c
 80018d4:	40003800 	.word	0x40003800
 80018d8:	40020000 	.word	0x40020000

080018dc <Touch_UnSelect>:


/******************************************
 * @brief	disable touch
 ******************************************/
void Touch_UnSelect(void) {
 80018dc:	b580      	push	{r7, lr}
 80018de:	af00      	add	r7, sp, #0
	if (TOUCH_SPI==DISPL_SPI){														// if touch and display share the same SPI port
		HAL_GPIO_WritePin(TOUCH_CS_GPIO_Port, TOUCH_CS_Pin, GPIO_PIN_SET);			// unselect touch
 80018e0:	2201      	movs	r2, #1
 80018e2:	f44f 7100 	mov.w	r1, #512	@ 0x200
 80018e6:	4802      	ldr	r0, [pc, #8]	@ (80018f0 <Touch_UnSelect+0x14>)
 80018e8:	f001 fd8e 	bl	8003408 <HAL_GPIO_WritePin>
	}
}
 80018ec:	bf00      	nop
 80018ee:	bd80      	pop	{r7, pc}
 80018f0:	40020000 	.word	0x40020000

080018f4 <Touch_PollAxis>:
 * @params	axis	use only one of the three options X_AXIS, Y_AXIS or Z_AXIS
 * @return			the level measured on the "axis" axis
 * 					PLEASE NOTE this function should be only for internal usage
 * 								Use Touch_GetXYTouch() instead
 *******************************************************************************/
uint16_t Touch_PollAxis(uint8_t axis) {
 80018f4:	b580      	push	{r7, lr}
 80018f6:	b084      	sub	sp, #16
 80018f8:	af00      	add	r7, sp, #0
 80018fa:	4603      	mov	r3, r0
 80018fc:	71fb      	strb	r3, [r7, #7]
	uint8_t poll[2] = {0,0};
 80018fe:	2300      	movs	r3, #0
 8001900:	813b      	strh	r3, [r7, #8]
	uint32_t poll16;
	
	if (TOUCH_SPI==DISPL_SPI){				// if touch and display share the same SPI port
		Touch_Select();						// enable CS on touch device
 8001902:	f7ff ffb9 	bl	8001878 <Touch_Select>
	}

	Touch_Int_Enabled=0;	//disable interrupt handling: sensor reading triggers interrupt
 8001906:	4b17      	ldr	r3, [pc, #92]	@ (8001964 <Touch_PollAxis+0x70>)
 8001908:	2200      	movs	r2, #0
 800190a:	701a      	strb	r2, [r3, #0]
	// disable interrupt while enquiring the touch sensor because it triggers the interrupt pin
	HAL_NVIC_DisableIRQ(TOUCH_INT_EXTI_IRQn);
 800190c:	2017      	movs	r0, #23
 800190e:	f000 fff8 	bl	8002902 <HAL_NVIC_DisableIRQ>

	HAL_SPI_Transmit(&TOUCH_SPI_PORT, &axis, 1, 10);
 8001912:	1df9      	adds	r1, r7, #7
 8001914:	230a      	movs	r3, #10
 8001916:	2201      	movs	r2, #1
 8001918:	4813      	ldr	r0, [pc, #76]	@ (8001968 <Touch_PollAxis+0x74>)
 800191a:	f003 fc68 	bl	80051ee <HAL_SPI_Transmit>
	if (HAL_SPI_Receive(&TOUCH_SPI_PORT, poll, 2, 10) == HAL_OK) {
 800191e:	f107 0108 	add.w	r1, r7, #8
 8001922:	230a      	movs	r3, #10
 8001924:	2202      	movs	r2, #2
 8001926:	4810      	ldr	r0, [pc, #64]	@ (8001968 <Touch_PollAxis+0x74>)
 8001928:	f003 fda5 	bl	8005476 <HAL_SPI_Receive>
 800192c:	4603      	mov	r3, r0
 800192e:	2b00      	cmp	r3, #0
 8001930:	d105      	bne.n	800193e <Touch_PollAxis+0x4a>
		poll16 = (poll[0]<<8) + poll[1];
 8001932:	7a3b      	ldrb	r3, [r7, #8]
 8001934:	021b      	lsls	r3, r3, #8
 8001936:	7a7a      	ldrb	r2, [r7, #9]
 8001938:	4413      	add	r3, r2
 800193a:	60fb      	str	r3, [r7, #12]
 800193c:	e001      	b.n	8001942 <Touch_PollAxis+0x4e>
	}
	else {
		poll16 = 0;
 800193e:	2300      	movs	r3, #0
 8001940:	60fb      	str	r3, [r7, #12]
	}

//enable back interrupt after reading the sensor
	HAL_NVIC_ClearPendingIRQ(TOUCH_INT_EXTI_IRQn);
 8001942:	2017      	movs	r0, #23
 8001944:	f000 fff7 	bl	8002936 <HAL_NVIC_ClearPendingIRQ>
	HAL_NVIC_EnableIRQ(TOUCH_INT_EXTI_IRQn);
 8001948:	2017      	movs	r0, #23
 800194a:	f000 ffcc 	bl	80028e6 <HAL_NVIC_EnableIRQ>

	Touch_Int_Enabled=1;
 800194e:	4b05      	ldr	r3, [pc, #20]	@ (8001964 <Touch_PollAxis+0x70>)
 8001950:	2201      	movs	r2, #1
 8001952:	701a      	strb	r2, [r3, #0]

	if (TOUCH_SPI==DISPL_SPI){	// if touch and display share the same SPI port
		Touch_UnSelect();
 8001954:	f7ff ffc2 	bl	80018dc <Touch_UnSelect>
	}

	return poll16;
 8001958:	68fb      	ldr	r3, [r7, #12]
 800195a:	b29b      	uxth	r3, r3
}
 800195c:	4618      	mov	r0, r3
 800195e:	3710      	adds	r7, #16
 8001960:	46bd      	mov	sp, r7
 8001962:	bd80      	pop	{r7, pc}
 8001964:	2000000d 	.word	0x2000000d
 8001968:	20000440 	.word	0x20000440

0800196c <Touch_GetXYtouch>:
 * @brief			polls touch screen and returning its XY screen position
 * 					that's regardless touch recording flag (interrupt received)
 * @return	x,y		in case isTouch=1 contain touch coordinates
 * 			isTouch is 1 if detected a touch, otherwise 0;
 *********************************************************************************/
void Touch_GetXYtouch(uint16_t *x, uint16_t *y, uint8_t *isTouch){
 800196c:	b580      	push	{r7, lr}
 800196e:	b08a      	sub	sp, #40	@ 0x28
 8001970:	af00      	add	r7, sp, #0
 8001972:	60f8      	str	r0, [r7, #12]
 8001974:	60b9      	str	r1, [r7, #8]
 8001976:	607a      	str	r2, [r7, #4]

const uint8_t pollingLevel=4;
 8001978:	2304      	movs	r3, #4
 800197a:	77fb      	strb	r3, [r7, #31]


// get the average value (over "1<<pollingLevel" attempts of X, Y and Z axes readings)

	// reading Z
	touch=0;
 800197c:	2300      	movs	r3, #0
 800197e:	623b      	str	r3, [r7, #32]
	for (k=0;k<(1<<pollingLevel);k++)
 8001980:	2300      	movs	r3, #0
 8001982:	f887 3027 	strb.w	r3, [r7, #39]	@ 0x27
 8001986:	e00c      	b.n	80019a2 <Touch_GetXYtouch+0x36>
		touch += Touch_PollAxis(Z_AXIS);
 8001988:	20b0      	movs	r0, #176	@ 0xb0
 800198a:	f7ff ffb3 	bl	80018f4 <Touch_PollAxis>
 800198e:	4603      	mov	r3, r0
 8001990:	461a      	mov	r2, r3
 8001992:	6a3b      	ldr	r3, [r7, #32]
 8001994:	4413      	add	r3, r2
 8001996:	623b      	str	r3, [r7, #32]
	for (k=0;k<(1<<pollingLevel);k++)
 8001998:	f897 3027 	ldrb.w	r3, [r7, #39]	@ 0x27
 800199c:	3301      	adds	r3, #1
 800199e:	f887 3027 	strb.w	r3, [r7, #39]	@ 0x27
 80019a2:	f897 2027 	ldrb.w	r2, [r7, #39]	@ 0x27
 80019a6:	7ffb      	ldrb	r3, [r7, #31]
 80019a8:	2101      	movs	r1, #1
 80019aa:	fa01 f303 	lsl.w	r3, r1, r3
 80019ae:	429a      	cmp	r2, r3
 80019b0:	dbea      	blt.n	8001988 <Touch_GetXYtouch+0x1c>
	touch >>= pollingLevel;  //get the average value
 80019b2:	7ffb      	ldrb	r3, [r7, #31]
 80019b4:	6a3a      	ldr	r2, [r7, #32]
 80019b6:	fa22 f303 	lsr.w	r3, r2, r3
 80019ba:	623b      	str	r3, [r7, #32]
	if (touch<=Z_THRESHOLD) {
 80019bc:	6a3b      	ldr	r3, [r7, #32]
 80019be:	f5b3 6fa0 	cmp.w	r3, #1280	@ 0x500
 80019c2:	d806      	bhi.n	80019d2 <Touch_GetXYtouch+0x66>
		*isTouch=0;
 80019c4:	687b      	ldr	r3, [r7, #4]
 80019c6:	2200      	movs	r2, #0
 80019c8:	701a      	strb	r2, [r3, #0]
		HAL_NVIC_ClearPendingIRQ(TOUCH_INT_EXTI_IRQn);
 80019ca:	2017      	movs	r0, #23
 80019cc:	f000 ffb3 	bl	8002936 <HAL_NVIC_ClearPendingIRQ>
		return;	// no touch: return 0
 80019d0:	e0b2      	b.n	8001b38 <Touch_GetXYtouch+0x1cc>
	}

	// reading X
	touch=0;
 80019d2:	2300      	movs	r3, #0
 80019d4:	623b      	str	r3, [r7, #32]
	for (k=0;k<(1<<pollingLevel);k++)
 80019d6:	2300      	movs	r3, #0
 80019d8:	f887 3027 	strb.w	r3, [r7, #39]	@ 0x27
 80019dc:	e00c      	b.n	80019f8 <Touch_GetXYtouch+0x8c>
		touch += Touch_PollAxis(X_AXIS);
 80019de:	20d0      	movs	r0, #208	@ 0xd0
 80019e0:	f7ff ff88 	bl	80018f4 <Touch_PollAxis>
 80019e4:	4603      	mov	r3, r0
 80019e6:	461a      	mov	r2, r3
 80019e8:	6a3b      	ldr	r3, [r7, #32]
 80019ea:	4413      	add	r3, r2
 80019ec:	623b      	str	r3, [r7, #32]
	for (k=0;k<(1<<pollingLevel);k++)
 80019ee:	f897 3027 	ldrb.w	r3, [r7, #39]	@ 0x27
 80019f2:	3301      	adds	r3, #1
 80019f4:	f887 3027 	strb.w	r3, [r7, #39]	@ 0x27
 80019f8:	f897 2027 	ldrb.w	r2, [r7, #39]	@ 0x27
 80019fc:	7ffb      	ldrb	r3, [r7, #31]
 80019fe:	2101      	movs	r1, #1
 8001a00:	fa01 f303 	lsl.w	r3, r1, r3
 8001a04:	429a      	cmp	r2, r3
 8001a06:	dbea      	blt.n	80019de <Touch_GetXYtouch+0x72>
	touch >>= pollingLevel;  //get the average value
 8001a08:	7ffb      	ldrb	r3, [r7, #31]
 8001a0a:	6a3a      	ldr	r2, [r7, #32]
 8001a0c:	fa22 f303 	lsr.w	r3, r2, r3
 8001a10:	623b      	str	r3, [r7, #32]
	if (touch<=X_THRESHOLD) {
 8001a12:	6a3b      	ldr	r3, [r7, #32]
 8001a14:	f5b3 6fa0 	cmp.w	r3, #1280	@ 0x500
 8001a18:	d806      	bhi.n	8001a28 <Touch_GetXYtouch+0xbc>
		*isTouch=0;
 8001a1a:	687b      	ldr	r3, [r7, #4]
 8001a1c:	2200      	movs	r2, #0
 8001a1e:	701a      	strb	r2, [r3, #0]
		HAL_NVIC_ClearPendingIRQ(TOUCH_INT_EXTI_IRQn);
 8001a20:	2017      	movs	r0, #23
 8001a22:	f000 ff88 	bl	8002936 <HAL_NVIC_ClearPendingIRQ>
		return;	// no touch: return 0
 8001a26:	e087      	b.n	8001b38 <Touch_GetXYtouch+0x1cc>
	}
	touchx=(AX*touch+BX);
 8001a28:	6a3b      	ldr	r3, [r7, #32]
 8001a2a:	ee07 3a90 	vmov	s15, r3
 8001a2e:	eef8 7a67 	vcvt.f32.u32	s15, s15
 8001a32:	ed9f 7a43 	vldr	s14, [pc, #268]	@ 8001b40 <Touch_GetXYtouch+0x1d4>
 8001a36:	ee67 7a87 	vmul.f32	s15, s15, s14
 8001a3a:	ed9f 7a42 	vldr	s14, [pc, #264]	@ 8001b44 <Touch_GetXYtouch+0x1d8>
 8001a3e:	ee77 7a87 	vadd.f32	s15, s15, s14
 8001a42:	eefc 7ae7 	vcvt.u32.f32	s15, s15
 8001a46:	ee17 3a90 	vmov	r3, s15
 8001a4a:	61bb      	str	r3, [r7, #24]

	// reading Y - there is no a threshold for Y
	touch=0;
 8001a4c:	2300      	movs	r3, #0
 8001a4e:	623b      	str	r3, [r7, #32]
	for (k=0;k<(1<<pollingLevel);k++)
 8001a50:	2300      	movs	r3, #0
 8001a52:	f887 3027 	strb.w	r3, [r7, #39]	@ 0x27
 8001a56:	e00c      	b.n	8001a72 <Touch_GetXYtouch+0x106>
		touch += Touch_PollAxis(Y_AXIS);
 8001a58:	2090      	movs	r0, #144	@ 0x90
 8001a5a:	f7ff ff4b 	bl	80018f4 <Touch_PollAxis>
 8001a5e:	4603      	mov	r3, r0
 8001a60:	461a      	mov	r2, r3
 8001a62:	6a3b      	ldr	r3, [r7, #32]
 8001a64:	4413      	add	r3, r2
 8001a66:	623b      	str	r3, [r7, #32]
	for (k=0;k<(1<<pollingLevel);k++)
 8001a68:	f897 3027 	ldrb.w	r3, [r7, #39]	@ 0x27
 8001a6c:	3301      	adds	r3, #1
 8001a6e:	f887 3027 	strb.w	r3, [r7, #39]	@ 0x27
 8001a72:	f897 2027 	ldrb.w	r2, [r7, #39]	@ 0x27
 8001a76:	7ffb      	ldrb	r3, [r7, #31]
 8001a78:	2101      	movs	r1, #1
 8001a7a:	fa01 f303 	lsl.w	r3, r1, r3
 8001a7e:	429a      	cmp	r2, r3
 8001a80:	dbea      	blt.n	8001a58 <Touch_GetXYtouch+0xec>
	touch >>= pollingLevel; //get the average value
 8001a82:	7ffb      	ldrb	r3, [r7, #31]
 8001a84:	6a3a      	ldr	r2, [r7, #32]
 8001a86:	fa22 f303 	lsr.w	r3, r2, r3
 8001a8a:	623b      	str	r3, [r7, #32]

	touchy=(AY*touch+BY);
 8001a8c:	6a3b      	ldr	r3, [r7, #32]
 8001a8e:	ee07 3a90 	vmov	s15, r3
 8001a92:	eef8 7a67 	vcvt.f32.u32	s15, s15
 8001a96:	ed9f 7a2c 	vldr	s14, [pc, #176]	@ 8001b48 <Touch_GetXYtouch+0x1dc>
 8001a9a:	ee67 7a87 	vmul.f32	s15, s15, s14
 8001a9e:	ed9f 7a2b 	vldr	s14, [pc, #172]	@ 8001b4c <Touch_GetXYtouch+0x1e0>
 8001aa2:	ee77 7ac7 	vsub.f32	s15, s15, s14
 8001aa6:	eefc 7ae7 	vcvt.u32.f32	s15, s15
 8001aaa:	ee17 3a90 	vmov	r3, s15
 8001aae:	617b      	str	r3, [r7, #20]


//having X and Y axis average values
// calculating coordinates as per screen orientation
	switch (current_orientation)
 8001ab0:	4b27      	ldr	r3, [pc, #156]	@ (8001b50 <Touch_GetXYtouch+0x1e4>)
 8001ab2:	781b      	ldrb	r3, [r3, #0]
 8001ab4:	2b03      	cmp	r3, #3
 8001ab6:	d83b      	bhi.n	8001b30 <Touch_GetXYtouch+0x1c4>
 8001ab8:	a201      	add	r2, pc, #4	@ (adr r2, 8001ac0 <Touch_GetXYtouch+0x154>)
 8001aba:	f852 f023 	ldr.w	pc, [r2, r3, lsl #2]
 8001abe:	bf00      	nop
 8001ac0:	08001ad1 	.word	0x08001ad1
 8001ac4:	08001ae3 	.word	0x08001ae3
 8001ac8:	08001afb 	.word	0x08001afb
 8001acc:	08001b19 	.word	0x08001b19
	{
	case TOUCH0:
		*x=touchx;
 8001ad0:	69bb      	ldr	r3, [r7, #24]
 8001ad2:	b29a      	uxth	r2, r3
 8001ad4:	68fb      	ldr	r3, [r7, #12]
 8001ad6:	801a      	strh	r2, [r3, #0]
		*y=touchy;
 8001ad8:	697b      	ldr	r3, [r7, #20]
 8001ada:	b29a      	uxth	r2, r3
 8001adc:	68bb      	ldr	r3, [r7, #8]
 8001ade:	801a      	strh	r2, [r3, #0]
		break;
 8001ae0:	e026      	b.n	8001b30 <Touch_GetXYtouch+0x1c4>
	case TOUCH90:
		*x=touchy;
 8001ae2:	697b      	ldr	r3, [r7, #20]
 8001ae4:	b29a      	uxth	r2, r3
 8001ae6:	68fb      	ldr	r3, [r7, #12]
 8001ae8:	801a      	strh	r2, [r3, #0]
		*y=(TOUCH_0_WIDTH-touchx);
 8001aea:	69bb      	ldr	r3, [r7, #24]
 8001aec:	b29b      	uxth	r3, r3
 8001aee:	f5c3 73a0 	rsb	r3, r3, #320	@ 0x140
 8001af2:	b29a      	uxth	r2, r3
 8001af4:	68bb      	ldr	r3, [r7, #8]
 8001af6:	801a      	strh	r2, [r3, #0]
		break;
 8001af8:	e01a      	b.n	8001b30 <Touch_GetXYtouch+0x1c4>
	case TOUCH180:
		*x=(TOUCH_0_WIDTH-touchx);
 8001afa:	69bb      	ldr	r3, [r7, #24]
 8001afc:	b29b      	uxth	r3, r3
 8001afe:	f5c3 73a0 	rsb	r3, r3, #320	@ 0x140
 8001b02:	b29a      	uxth	r2, r3
 8001b04:	68fb      	ldr	r3, [r7, #12]
 8001b06:	801a      	strh	r2, [r3, #0]
		*y=(TOUCH_0_HEIGHT - touchy);
 8001b08:	697b      	ldr	r3, [r7, #20]
 8001b0a:	b29b      	uxth	r3, r3
 8001b0c:	f5c3 73f0 	rsb	r3, r3, #480	@ 0x1e0
 8001b10:	b29a      	uxth	r2, r3
 8001b12:	68bb      	ldr	r3, [r7, #8]
 8001b14:	801a      	strh	r2, [r3, #0]
		break;
 8001b16:	e00b      	b.n	8001b30 <Touch_GetXYtouch+0x1c4>
	case TOUCH270:
		*x=(TOUCH_0_HEIGHT- touchy);
 8001b18:	697b      	ldr	r3, [r7, #20]
 8001b1a:	b29b      	uxth	r3, r3
 8001b1c:	f5c3 73f0 	rsb	r3, r3, #480	@ 0x1e0
 8001b20:	b29a      	uxth	r2, r3
 8001b22:	68fb      	ldr	r3, [r7, #12]
 8001b24:	801a      	strh	r2, [r3, #0]
		*y=touchx;
 8001b26:	69bb      	ldr	r3, [r7, #24]
 8001b28:	b29a      	uxth	r2, r3
 8001b2a:	68bb      	ldr	r3, [r7, #8]
 8001b2c:	801a      	strh	r2, [r3, #0]
		break;
 8001b2e:	bf00      	nop
	}

// set flag indicating there was a touch
	*isTouch=1;
 8001b30:	687b      	ldr	r3, [r7, #4]
 8001b32:	2201      	movs	r2, #1
 8001b34:	701a      	strb	r2, [r3, #0]
	return;
 8001b36:	bf00      	nop
}
 8001b38:	3728      	adds	r7, #40	@ 0x28
 8001b3a:	46bd      	mov	sp, r7
 8001b3c:	bd80      	pop	{r7, pc}
 8001b3e:	bf00      	nop
 8001b40:	bc378034 	.word	0xbc378034
 8001b44:	43a80000 	.word	0x43a80000
 8001b48:	3c87fcb9 	.word	0x3c87fcb9
 8001b4c:	4225851f 	.word	0x4225851f
 8001b50:	20000598 	.word	0x20000598

08001b54 <Touch_GotATouch>:
 * 						(use "2" in main loop activating touchgfxSignalVSync()
 * @returns		1	if recorded a touch
 * 				0	if no touch recorded
 ***********************************************************/

uint8_t Touch_GotATouch(uint8_t reset) {
 8001b54:	b580      	push	{r7, lr}
 8001b56:	b084      	sub	sp, #16
 8001b58:	af00      	add	r7, sp, #0
 8001b5a:	4603      	mov	r3, r0
 8001b5c:	71fb      	strb	r3, [r7, #7]
static uint32_t touchTime=0;
uint8_t result = Touch_PenDown;
 8001b5e:	4b10      	ldr	r3, [pc, #64]	@ (8001ba0 <Touch_GotATouch+0x4c>)
 8001b60:	781b      	ldrb	r3, [r3, #0]
 8001b62:	73fb      	strb	r3, [r7, #15]

//	if (result)
//		result=Touch_PollTouch();

	if (reset==2){
 8001b64:	79fb      	ldrb	r3, [r7, #7]
 8001b66:	2b02      	cmp	r3, #2
 8001b68:	d10f      	bne.n	8001b8a <Touch_GotATouch+0x36>
		if ((HAL_GetTick()-touchTime) >= TOUCHGFX_TIMING)
 8001b6a:	f000 f931 	bl	8001dd0 <HAL_GetTick>
 8001b6e:	4602      	mov	r2, r0
 8001b70:	4b0c      	ldr	r3, [pc, #48]	@ (8001ba4 <Touch_GotATouch+0x50>)
 8001b72:	681b      	ldr	r3, [r3, #0]
 8001b74:	1ad3      	subs	r3, r2, r3
 8001b76:	2b3b      	cmp	r3, #59	@ 0x3b
 8001b78:	d905      	bls.n	8001b86 <Touch_GotATouch+0x32>
			touchTime=HAL_GetTick();
 8001b7a:	f000 f929 	bl	8001dd0 <HAL_GetTick>
 8001b7e:	4603      	mov	r3, r0
 8001b80:	4a08      	ldr	r2, [pc, #32]	@ (8001ba4 <Touch_GotATouch+0x50>)
 8001b82:	6013      	str	r3, [r2, #0]
 8001b84:	e001      	b.n	8001b8a <Touch_GotATouch+0x36>
		else
			result=0;
 8001b86:	2300      	movs	r3, #0
 8001b88:	73fb      	strb	r3, [r7, #15]
	}
	if (reset==1)
 8001b8a:	79fb      	ldrb	r3, [r7, #7]
 8001b8c:	2b01      	cmp	r3, #1
 8001b8e:	d102      	bne.n	8001b96 <Touch_GotATouch+0x42>
		Touch_PenDown=0;
 8001b90:	4b03      	ldr	r3, [pc, #12]	@ (8001ba0 <Touch_GotATouch+0x4c>)
 8001b92:	2200      	movs	r2, #0
 8001b94:	701a      	strb	r2, [r3, #0]
	return result;
 8001b96:	7bfb      	ldrb	r3, [r7, #15]
}
 8001b98:	4618      	mov	r0, r3
 8001b9a:	3710      	adds	r7, #16
 8001b9c:	46bd      	mov	sp, r7
 8001b9e:	bd80      	pop	{r7, pc}
 8001ba0:	200005a5 	.word	0x200005a5
 8001ba4:	200005a8 	.word	0x200005a8

08001ba8 <Touch_TouchGFXSampleTouch>:
 *			then, into STM32TouchController::sampleTouch(int32_t& x, int32_t& y)
 *			change "return false;"
 *			into:  "return ((bool) Touch_TouchGFXSampleTouch(&x, &y));"
 * 			that's enough for touch integration in TouchGFX
***********************************************************/
uint8_t Touch_TouchGFXSampleTouch(int32_t *x, int32_t *y){
 8001ba8:	b580      	push	{r7, lr}
 8001baa:	b084      	sub	sp, #16
 8001bac:	af00      	add	r7, sp, #0
 8001bae:	6078      	str	r0, [r7, #4]
 8001bb0:	6039      	str	r1, [r7, #0]
	//	sTouchData result;
	uint8_t isTouch=0;				// preset to no touch
 8001bb2:	2300      	movs	r3, #0
 8001bb4:	73fb      	strb	r3, [r7, #15]
	uint16_t xx=0,yy=0;  			// need to convert library coordinates type (uint16_t) to TouchGFX ones (int32_t)
 8001bb6:	2300      	movs	r3, #0
 8001bb8:	81bb      	strh	r3, [r7, #12]
 8001bba:	2300      	movs	r3, #0
 8001bbc:	817b      	strh	r3, [r7, #10]
	static uint8_t flipTouch=0;		// switches 0/1, on every function call, until sensor is touched allowing to return key repeat
	static uint32_t touchTime=1; 	// tick value get on the first touch. 0 means display untouched.
	static uint16_t avgXX=0, avgYY=0;  			// need to convert library coordinates type (uint16_t) to TouchGFX one (int32_t)
	static uint8_t repetition=TOUCHGFX_REPEAT_IT+TOUCHGFX_REPEAT_NO;

	if (Touch_GotATouch(0)){				// polls interrupt flag not resetting it
 8001bbe:	2000      	movs	r0, #0
 8001bc0:	f7ff ffc8 	bl	8001b54 <Touch_GotATouch>
 8001bc4:	4603      	mov	r3, r0
 8001bc6:	2b00      	cmp	r3, #0
 8001bc8:	d063      	beq.n	8001c92 <Touch_TouchGFXSampleTouch+0xea>
		Touch_GetXYtouch(&xx,&yy,&isTouch);	// get touch sensor position
 8001bca:	f107 020f 	add.w	r2, r7, #15
 8001bce:	f107 010a 	add.w	r1, r7, #10
 8001bd2:	f107 030c 	add.w	r3, r7, #12
 8001bd6:	4618      	mov	r0, r3
 8001bd8:	f7ff fec8 	bl	800196c <Touch_GetXYtouch>
		if (!isTouch){						// received a "no touch"
 8001bdc:	7bfb      	ldrb	r3, [r7, #15]
 8001bde:	2b00      	cmp	r3, #0
 8001be0:	d126      	bne.n	8001c30 <Touch_TouchGFXSampleTouch+0x88>
			if (touchTime != 0){			// if previously touched
 8001be2:	4b2e      	ldr	r3, [pc, #184]	@ (8001c9c <Touch_TouchGFXSampleTouch+0xf4>)
 8001be4:	681b      	ldr	r3, [r3, #0]
 8001be6:	2b00      	cmp	r3, #0
 8001be8:	d053      	beq.n	8001c92 <Touch_TouchGFXSampleTouch+0xea>
				if ((repetition--)>TOUCHGFX_REPEAT_NO+1){		// n-repetition of last touch sending
 8001bea:	4b2d      	ldr	r3, [pc, #180]	@ (8001ca0 <Touch_TouchGFXSampleTouch+0xf8>)
 8001bec:	781b      	ldrb	r3, [r3, #0]
 8001bee:	1e5a      	subs	r2, r3, #1
 8001bf0:	b2d1      	uxtb	r1, r2
 8001bf2:	4a2b      	ldr	r2, [pc, #172]	@ (8001ca0 <Touch_TouchGFXSampleTouch+0xf8>)
 8001bf4:	7011      	strb	r1, [r2, #0]
 8001bf6:	2b06      	cmp	r3, #6
 8001bf8:	d90c      	bls.n	8001c14 <Touch_TouchGFXSampleTouch+0x6c>
					*x = avgXX;
 8001bfa:	4b2a      	ldr	r3, [pc, #168]	@ (8001ca4 <Touch_TouchGFXSampleTouch+0xfc>)
 8001bfc:	881b      	ldrh	r3, [r3, #0]
 8001bfe:	461a      	mov	r2, r3
 8001c00:	687b      	ldr	r3, [r7, #4]
 8001c02:	601a      	str	r2, [r3, #0]
					*y = avgYY;
 8001c04:	4b28      	ldr	r3, [pc, #160]	@ (8001ca8 <Touch_TouchGFXSampleTouch+0x100>)
 8001c06:	881b      	ldrh	r3, [r3, #0]
 8001c08:	461a      	mov	r2, r3
 8001c0a:	683b      	ldr	r3, [r7, #0]
 8001c0c:	601a      	str	r2, [r3, #0]
					isTouch=1;
 8001c0e:	2301      	movs	r3, #1
 8001c10:	73fb      	strb	r3, [r7, #15]
 8001c12:	e03e      	b.n	8001c92 <Touch_TouchGFXSampleTouch+0xea>
				} else if ((repetition==255)) {  // that's -1
 8001c14:	4b22      	ldr	r3, [pc, #136]	@ (8001ca0 <Touch_TouchGFXSampleTouch+0xf8>)
 8001c16:	781b      	ldrb	r3, [r3, #0]
 8001c18:	2bff      	cmp	r3, #255	@ 0xff
 8001c1a:	d13a      	bne.n	8001c92 <Touch_TouchGFXSampleTouch+0xea>
					touchTime=0;					// set display as untouched
 8001c1c:	4b1f      	ldr	r3, [pc, #124]	@ (8001c9c <Touch_TouchGFXSampleTouch+0xf4>)
 8001c1e:	2200      	movs	r2, #0
 8001c20:	601a      	str	r2, [r3, #0]
					Touch_GotATouch(1);				// reset interrupt touch flag
 8001c22:	2001      	movs	r0, #1
 8001c24:	f7ff ff96 	bl	8001b54 <Touch_GotATouch>
					repetition=TOUCHGFX_REPEAT_IT+TOUCHGFX_REPEAT_NO;  //reset repetition counter
 8001c28:	4b1d      	ldr	r3, [pc, #116]	@ (8001ca0 <Touch_TouchGFXSampleTouch+0xf8>)
 8001c2a:	2205      	movs	r2, #5
 8001c2c:	701a      	strb	r2, [r3, #0]
 8001c2e:	e030      	b.n	8001c92 <Touch_TouchGFXSampleTouch+0xea>
				}
			}
		} else {					// display touched

			if (touchTime==0) {				// if previously untouched
 8001c30:	4b1a      	ldr	r3, [pc, #104]	@ (8001c9c <Touch_TouchGFXSampleTouch+0xf4>)
 8001c32:	681b      	ldr	r3, [r3, #0]
 8001c34:	2b00      	cmp	r3, #0
 8001c36:	d10e      	bne.n	8001c56 <Touch_TouchGFXSampleTouch+0xae>
				avgXX =(xx/TOUCHGFX_SENSITIVITY)*TOUCHGFX_SENSITIVITY;
 8001c38:	89ba      	ldrh	r2, [r7, #12]
 8001c3a:	4b1a      	ldr	r3, [pc, #104]	@ (8001ca4 <Touch_TouchGFXSampleTouch+0xfc>)
 8001c3c:	801a      	strh	r2, [r3, #0]
				avgYY =(yy/TOUCHGFX_SENSITIVITY)*TOUCHGFX_SENSITIVITY;
 8001c3e:	897a      	ldrh	r2, [r7, #10]
 8001c40:	4b19      	ldr	r3, [pc, #100]	@ (8001ca8 <Touch_TouchGFXSampleTouch+0x100>)
 8001c42:	801a      	strh	r2, [r3, #0]
				touchTime=HAL_GetTick();	// store tick value at touch time
 8001c44:	f000 f8c4 	bl	8001dd0 <HAL_GetTick>
 8001c48:	4603      	mov	r3, r0
 8001c4a:	4a14      	ldr	r2, [pc, #80]	@ (8001c9c <Touch_TouchGFXSampleTouch+0xf4>)
 8001c4c:	6013      	str	r3, [r2, #0]
				flipTouch=1;				// set switch to send touch now
 8001c4e:	4b17      	ldr	r3, [pc, #92]	@ (8001cac <Touch_TouchGFXSampleTouch+0x104>)
 8001c50:	2201      	movs	r2, #1
 8001c52:	701a      	strb	r2, [r3, #0]
 8001c54:	e004      	b.n	8001c60 <Touch_TouchGFXSampleTouch+0xb8>
			} else {						// not a new touch
				if (((HAL_GetTick()-touchTime)>DELAY_TO_KEY_REPEAT) && (DELAY_TO_KEY_REPEAT > 0)){	// if timeout to key repeat is over (0 means no key repeat)
 8001c56:	f000 f8bb 	bl	8001dd0 <HAL_GetTick>
					flipTouch=!flipTouch;	// alternate every time function is called
				} else
					if (DELAY_TO_KEY_REPEAT == 0)
						flipTouch=0;		// (DELAY_TO_KEY_REPEAT == 0) means a single pulse, "-1" keep pulse as long as touch
 8001c5a:	4b14      	ldr	r3, [pc, #80]	@ (8001cac <Touch_TouchGFXSampleTouch+0x104>)
 8001c5c:	2200      	movs	r2, #0
 8001c5e:	701a      	strb	r2, [r3, #0]
			}
			if (flipTouch) { 	// return position only if the switching flag is on
 8001c60:	4b12      	ldr	r3, [pc, #72]	@ (8001cac <Touch_TouchGFXSampleTouch+0x104>)
 8001c62:	781b      	ldrb	r3, [r3, #0]
 8001c64:	2b00      	cmp	r3, #0
 8001c66:	d012      	beq.n	8001c8e <Touch_TouchGFXSampleTouch+0xe6>
				*x=(((avgXX*(TOUCHGFX_MOVAVG-1)+((xx/TOUCHGFX_SENSITIVITY)*TOUCHGFX_SENSITIVITY)))/TOUCHGFX_MOVAVG);
 8001c68:	89bb      	ldrh	r3, [r7, #12]
 8001c6a:	461a      	mov	r2, r3
 8001c6c:	687b      	ldr	r3, [r7, #4]
 8001c6e:	601a      	str	r2, [r3, #0]
				*y=(((avgYY*(TOUCHGFX_MOVAVG-1)+((yy/TOUCHGFX_SENSITIVITY)*TOUCHGFX_SENSITIVITY)))/TOUCHGFX_MOVAVG);
 8001c70:	897b      	ldrh	r3, [r7, #10]
 8001c72:	461a      	mov	r2, r3
 8001c74:	683b      	ldr	r3, [r7, #0]
 8001c76:	601a      	str	r2, [r3, #0]
				avgXX = *x;
 8001c78:	687b      	ldr	r3, [r7, #4]
 8001c7a:	681b      	ldr	r3, [r3, #0]
 8001c7c:	b29a      	uxth	r2, r3
 8001c7e:	4b09      	ldr	r3, [pc, #36]	@ (8001ca4 <Touch_TouchGFXSampleTouch+0xfc>)
 8001c80:	801a      	strh	r2, [r3, #0]
				avgYY = *y;
 8001c82:	683b      	ldr	r3, [r7, #0]
 8001c84:	681b      	ldr	r3, [r3, #0]
 8001c86:	b29a      	uxth	r2, r3
 8001c88:	4b07      	ldr	r3, [pc, #28]	@ (8001ca8 <Touch_TouchGFXSampleTouch+0x100>)
 8001c8a:	801a      	strh	r2, [r3, #0]
 8001c8c:	e001      	b.n	8001c92 <Touch_TouchGFXSampleTouch+0xea>
			} else {			// otherwise return "no touch" from display
				isTouch = 0;
 8001c8e:	2300      	movs	r3, #0
 8001c90:	73fb      	strb	r3, [r7, #15]
			}
		}
	}
	return isTouch;
 8001c92:	7bfb      	ldrb	r3, [r7, #15]
}
 8001c94:	4618      	mov	r0, r3
 8001c96:	3710      	adds	r7, #16
 8001c98:	46bd      	mov	sp, r7
 8001c9a:	bd80      	pop	{r7, pc}
 8001c9c:	20000010 	.word	0x20000010
 8001ca0:	20000014 	.word	0x20000014
 8001ca4:	200005ac 	.word	0x200005ac
 8001ca8:	200005ae 	.word	0x200005ae
 8001cac:	200005b0 	.word	0x200005b0

08001cb0 <Reset_Handler>:
 8001cb0:	f8df d034 	ldr.w	sp, [pc, #52]	@ 8001ce8 <LoopFillZerobss+0xe>
 8001cb4:	f7ff fb50 	bl	8001358 <SystemInit>
 8001cb8:	480c      	ldr	r0, [pc, #48]	@ (8001cec <LoopFillZerobss+0x12>)
 8001cba:	490d      	ldr	r1, [pc, #52]	@ (8001cf0 <LoopFillZerobss+0x16>)
 8001cbc:	4a0d      	ldr	r2, [pc, #52]	@ (8001cf4 <LoopFillZerobss+0x1a>)
 8001cbe:	2300      	movs	r3, #0
 8001cc0:	e002      	b.n	8001cc8 <LoopCopyDataInit>

08001cc2 <CopyDataInit>:
 8001cc2:	58d4      	ldr	r4, [r2, r3]
 8001cc4:	50c4      	str	r4, [r0, r3]
 8001cc6:	3304      	adds	r3, #4

08001cc8 <LoopCopyDataInit>:
 8001cc8:	18c4      	adds	r4, r0, r3
 8001cca:	428c      	cmp	r4, r1
 8001ccc:	d3f9      	bcc.n	8001cc2 <CopyDataInit>
 8001cce:	4a0a      	ldr	r2, [pc, #40]	@ (8001cf8 <LoopFillZerobss+0x1e>)
 8001cd0:	4c0a      	ldr	r4, [pc, #40]	@ (8001cfc <LoopFillZerobss+0x22>)
 8001cd2:	2300      	movs	r3, #0
 8001cd4:	e001      	b.n	8001cda <LoopFillZerobss>

08001cd6 <FillZerobss>:
 8001cd6:	6013      	str	r3, [r2, #0]
 8001cd8:	3204      	adds	r2, #4

08001cda <LoopFillZerobss>:
 8001cda:	42a2      	cmp	r2, r4
 8001cdc:	d3fb      	bcc.n	8001cd6 <FillZerobss>
 8001cde:	f01f f847 	bl	8020d70 <__libc_init_array>
 8001ce2:	f7fe fc5d 	bl	80005a0 <main>
 8001ce6:	4770      	bx	lr
 8001ce8:	20020000 	.word	0x20020000
 8001cec:	20000000 	.word	0x20000000
 8001cf0:	20000104 	.word	0x20000104
 8001cf4:	08062c30 	.word	0x08062c30
 8001cf8:	20000320 	.word	0x20000320
 8001cfc:	20003994 	.word	0x20003994

08001d00 <ADC_IRQHandler>:
 8001d00:	e7fe      	b.n	8001d00 <ADC_IRQHandler>
	...

08001d04 <HAL_Init>:
  *         need to ensure that the SysTick time base is always set to 1 millisecond
  *         to have correct HAL operation.
  * @retval HAL status
  */
HAL_StatusTypeDef HAL_Init(void)
{
 8001d04:	b580      	push	{r7, lr}
 8001d06:	af00      	add	r7, sp, #0
  /* Configure Flash prefetch, Instruction cache, Data cache */ 
#if (INSTRUCTION_CACHE_ENABLE != 0U)
  __HAL_FLASH_INSTRUCTION_CACHE_ENABLE();
 8001d08:	4b0e      	ldr	r3, [pc, #56]	@ (8001d44 <HAL_Init+0x40>)
 8001d0a:	681b      	ldr	r3, [r3, #0]
 8001d0c:	4a0d      	ldr	r2, [pc, #52]	@ (8001d44 <HAL_Init+0x40>)
 8001d0e:	f443 7300 	orr.w	r3, r3, #512	@ 0x200
 8001d12:	6013      	str	r3, [r2, #0]
#endif /* INSTRUCTION_CACHE_ENABLE */

#if (DATA_CACHE_ENABLE != 0U)
  __HAL_FLASH_DATA_CACHE_ENABLE();
 8001d14:	4b0b      	ldr	r3, [pc, #44]	@ (8001d44 <HAL_Init+0x40>)
 8001d16:	681b      	ldr	r3, [r3, #0]
 8001d18:	4a0a      	ldr	r2, [pc, #40]	@ (8001d44 <HAL_Init+0x40>)
 8001d1a:	f443 6380 	orr.w	r3, r3, #1024	@ 0x400
 8001d1e:	6013      	str	r3, [r2, #0]
#endif /* DATA_CACHE_ENABLE */

#if (PREFETCH_ENABLE != 0U)
  __HAL_FLASH_PREFETCH_BUFFER_ENABLE();
 8001d20:	4b08      	ldr	r3, [pc, #32]	@ (8001d44 <HAL_Init+0x40>)
 8001d22:	681b      	ldr	r3, [r3, #0]
 8001d24:	4a07      	ldr	r2, [pc, #28]	@ (8001d44 <HAL_Init+0x40>)
 8001d26:	f443 7380 	orr.w	r3, r3, #256	@ 0x100
 8001d2a:	6013      	str	r3, [r2, #0]
#endif /* PREFETCH_ENABLE */

  /* Set Interrupt Group Priority */
  HAL_NVIC_SetPriorityGrouping(NVIC_PRIORITYGROUP_4);
 8001d2c:	2003      	movs	r0, #3
 8001d2e:	f000 fdb3 	bl	8002898 <HAL_NVIC_SetPriorityGrouping>

  /* Use systick as time base source and configure 1ms tick (default clock after Reset is HSI) */
  HAL_InitTick(TICK_INT_PRIORITY);
 8001d32:	2000      	movs	r0, #0
 8001d34:	f000 f808 	bl	8001d48 <HAL_InitTick>

  /* Init the low level hardware */
  HAL_MspInit();
 8001d38:	f7fe ff96 	bl	8000c68 <HAL_MspInit>

  /* Return function status */
  return HAL_OK;
 8001d3c:	2300      	movs	r3, #0
}
 8001d3e:	4618      	mov	r0, r3
 8001d40:	bd80      	pop	{r7, pc}
 8001d42:	bf00      	nop
 8001d44:	40023c00 	.word	0x40023c00

08001d48 <HAL_InitTick>:
  *       implementation  in user file.
  * @param TickPriority Tick interrupt priority.
  * @retval HAL status
  */
__weak HAL_StatusTypeDef HAL_InitTick(uint32_t TickPriority)
{
 8001d48:	b580      	push	{r7, lr}
 8001d4a:	b082      	sub	sp, #8
 8001d4c:	af00      	add	r7, sp, #0
 8001d4e:	6078      	str	r0, [r7, #4]
  /* Configure the SysTick to have interrupt in 1ms time basis*/
  if (HAL_SYSTICK_Config(SystemCoreClock / (1000U / uwTickFreq)) > 0U)
 8001d50:	4b12      	ldr	r3, [pc, #72]	@ (8001d9c <HAL_InitTick+0x54>)
 8001d52:	681a      	ldr	r2, [r3, #0]
 8001d54:	4b12      	ldr	r3, [pc, #72]	@ (8001da0 <HAL_InitTick+0x58>)
 8001d56:	781b      	ldrb	r3, [r3, #0]
 8001d58:	4619      	mov	r1, r3
 8001d5a:	f44f 737a 	mov.w	r3, #1000	@ 0x3e8
 8001d5e:	fbb3 f3f1 	udiv	r3, r3, r1
 8001d62:	fbb2 f3f3 	udiv	r3, r2, r3
 8001d66:	4618      	mov	r0, r3
 8001d68:	f000 fdd9 	bl	800291e <HAL_SYSTICK_Config>
 8001d6c:	4603      	mov	r3, r0
 8001d6e:	2b00      	cmp	r3, #0
 8001d70:	d001      	beq.n	8001d76 <HAL_InitTick+0x2e>
  {
    return HAL_ERROR;
 8001d72:	2301      	movs	r3, #1
 8001d74:	e00e      	b.n	8001d94 <HAL_InitTick+0x4c>
  }

  /* Configure the SysTick IRQ priority */
  if (TickPriority < (1UL << __NVIC_PRIO_BITS))
 8001d76:	687b      	ldr	r3, [r7, #4]
 8001d78:	2b0f      	cmp	r3, #15
 8001d7a:	d80a      	bhi.n	8001d92 <HAL_InitTick+0x4a>
  {
    HAL_NVIC_SetPriority(SysTick_IRQn, TickPriority, 0U);
 8001d7c:	2200      	movs	r2, #0
 8001d7e:	6879      	ldr	r1, [r7, #4]
 8001d80:	f04f 30ff 	mov.w	r0, #4294967295
 8001d84:	f000 fd93 	bl	80028ae <HAL_NVIC_SetPriority>
    uwTickPrio = TickPriority;
 8001d88:	4a06      	ldr	r2, [pc, #24]	@ (8001da4 <HAL_InitTick+0x5c>)
 8001d8a:	687b      	ldr	r3, [r7, #4]
 8001d8c:	6013      	str	r3, [r2, #0]
  {
    return HAL_ERROR;
  }

  /* Return function status */
  return HAL_OK;
 8001d8e:	2300      	movs	r3, #0
 8001d90:	e000      	b.n	8001d94 <HAL_InitTick+0x4c>
    return HAL_ERROR;
 8001d92:	2301      	movs	r3, #1
}
 8001d94:	4618      	mov	r0, r3
 8001d96:	3708      	adds	r7, #8
 8001d98:	46bd      	mov	sp, r7
 8001d9a:	bd80      	pop	{r7, pc}
 8001d9c:	20000008 	.word	0x20000008
 8001da0:	2000001c 	.word	0x2000001c
 8001da4:	20000018 	.word	0x20000018

08001da8 <HAL_IncTick>:
 * @note This function is declared as __weak to be overwritten in case of other 
  *      implementations in user file.
  * @retval None
  */
__weak void HAL_IncTick(void)
{
 8001da8:	b480      	push	{r7}
 8001daa:	af00      	add	r7, sp, #0
  uwTick += uwTickFreq;
 8001dac:	4b06      	ldr	r3, [pc, #24]	@ (8001dc8 <HAL_IncTick+0x20>)
 8001dae:	781b      	ldrb	r3, [r3, #0]
 8001db0:	461a      	mov	r2, r3
 8001db2:	4b06      	ldr	r3, [pc, #24]	@ (8001dcc <HAL_IncTick+0x24>)
 8001db4:	681b      	ldr	r3, [r3, #0]
 8001db6:	4413      	add	r3, r2
 8001db8:	4a04      	ldr	r2, [pc, #16]	@ (8001dcc <HAL_IncTick+0x24>)
 8001dba:	6013      	str	r3, [r2, #0]
}
 8001dbc:	bf00      	nop
 8001dbe:	46bd      	mov	sp, r7
 8001dc0:	f85d 7b04 	ldr.w	r7, [sp], #4
 8001dc4:	4770      	bx	lr
 8001dc6:	bf00      	nop
 8001dc8:	2000001c 	.word	0x2000001c
 8001dcc:	200005b4 	.word	0x200005b4

08001dd0 <HAL_GetTick>:
  * @note This function is declared as __weak to be overwritten in case of other 
  *       implementations in user file.
  * @retval tick value
  */
__weak uint32_t HAL_GetTick(void)
{
 8001dd0:	b480      	push	{r7}
 8001dd2:	af00      	add	r7, sp, #0
  return uwTick;
 8001dd4:	4b03      	ldr	r3, [pc, #12]	@ (8001de4 <HAL_GetTick+0x14>)
 8001dd6:	681b      	ldr	r3, [r3, #0]
}
 8001dd8:	4618      	mov	r0, r3
 8001dda:	46bd      	mov	sp, r7
 8001ddc:	f85d 7b04 	ldr.w	r7, [sp], #4
 8001de0:	4770      	bx	lr
 8001de2:	bf00      	nop
 8001de4:	200005b4 	.word	0x200005b4

08001de8 <HAL_Delay>:
  *       implementations in user file.
  * @param Delay specifies the delay time length, in milliseconds.
  * @retval None
  */
__weak void HAL_Delay(uint32_t Delay)
{
 8001de8:	b580      	push	{r7, lr}
 8001dea:	b084      	sub	sp, #16
 8001dec:	af00      	add	r7, sp, #0
 8001dee:	6078      	str	r0, [r7, #4]
  uint32_t tickstart = HAL_GetTick();
 8001df0:	f7ff ffee 	bl	8001dd0 <HAL_GetTick>
 8001df4:	60b8      	str	r0, [r7, #8]
  uint32_t wait = Delay;
 8001df6:	687b      	ldr	r3, [r7, #4]
 8001df8:	60fb      	str	r3, [r7, #12]

  /* Add a freq to guarantee minimum wait */
  if (wait < HAL_MAX_DELAY)
 8001dfa:	68fb      	ldr	r3, [r7, #12]
 8001dfc:	f1b3 3fff 	cmp.w	r3, #4294967295
 8001e00:	d005      	beq.n	8001e0e <HAL_Delay+0x26>
  {
    wait += (uint32_t)(uwTickFreq);
 8001e02:	4b0a      	ldr	r3, [pc, #40]	@ (8001e2c <HAL_Delay+0x44>)
 8001e04:	781b      	ldrb	r3, [r3, #0]
 8001e06:	461a      	mov	r2, r3
 8001e08:	68fb      	ldr	r3, [r7, #12]
 8001e0a:	4413      	add	r3, r2
 8001e0c:	60fb      	str	r3, [r7, #12]
  }

  while((HAL_GetTick() - tickstart) < wait)
 8001e0e:	bf00      	nop
 8001e10:	f7ff ffde 	bl	8001dd0 <HAL_GetTick>
 8001e14:	4602      	mov	r2, r0
 8001e16:	68bb      	ldr	r3, [r7, #8]
 8001e18:	1ad3      	subs	r3, r2, r3
 8001e1a:	68fa      	ldr	r2, [r7, #12]
 8001e1c:	429a      	cmp	r2, r3
 8001e1e:	d8f7      	bhi.n	8001e10 <HAL_Delay+0x28>
  {
  }
}
 8001e20:	bf00      	nop
 8001e22:	bf00      	nop
 8001e24:	3710      	adds	r7, #16
 8001e26:	46bd      	mov	sp, r7
 8001e28:	bd80      	pop	{r7, pc}
 8001e2a:	bf00      	nop
 8001e2c:	2000001c 	.word	0x2000001c

08001e30 <HAL_ADC_Init>:
  * @param  hadc pointer to a ADC_HandleTypeDef structure that contains
  *         the configuration information for the specified ADC.
  * @retval HAL status
  */
HAL_StatusTypeDef HAL_ADC_Init(ADC_HandleTypeDef *hadc)
{
 8001e30:	b580      	push	{r7, lr}
 8001e32:	b084      	sub	sp, #16
 8001e34:	af00      	add	r7, sp, #0
 8001e36:	6078      	str	r0, [r7, #4]
  HAL_StatusTypeDef tmp_hal_status = HAL_OK;
 8001e38:	2300      	movs	r3, #0
 8001e3a:	73fb      	strb	r3, [r7, #15]

  /* Check ADC handle */
  if (hadc == NULL)
 8001e3c:	687b      	ldr	r3, [r7, #4]
 8001e3e:	2b00      	cmp	r3, #0
 8001e40:	d101      	bne.n	8001e46 <HAL_ADC_Init+0x16>
  {
    return HAL_ERROR;
 8001e42:	2301      	movs	r3, #1
 8001e44:	e033      	b.n	8001eae <HAL_ADC_Init+0x7e>
  if (hadc->Init.ExternalTrigConv != ADC_SOFTWARE_START)
  {
    assert_param(IS_ADC_EXT_TRIG_EDGE(hadc->Init.ExternalTrigConvEdge));
  }

  if (hadc->State == HAL_ADC_STATE_RESET)
 8001e46:	687b      	ldr	r3, [r7, #4]
 8001e48:	6c1b      	ldr	r3, [r3, #64]	@ 0x40
 8001e4a:	2b00      	cmp	r3, #0
 8001e4c:	d109      	bne.n	8001e62 <HAL_ADC_Init+0x32>

    /* Init the low level hardware */
    hadc->MspInitCallback(hadc);
#else
    /* Init the low level hardware */
    HAL_ADC_MspInit(hadc);
 8001e4e:	6878      	ldr	r0, [r7, #4]
 8001e50:	f7fe ff32 	bl	8000cb8 <HAL_ADC_MspInit>
#endif /* USE_HAL_ADC_REGISTER_CALLBACKS */

    /* Initialize ADC error code */
    ADC_CLEAR_ERRORCODE(hadc);
 8001e54:	687b      	ldr	r3, [r7, #4]
 8001e56:	2200      	movs	r2, #0
 8001e58:	645a      	str	r2, [r3, #68]	@ 0x44

    /* Allocate lock resource and initialize it */
    hadc->Lock = HAL_UNLOCKED;
 8001e5a:	687b      	ldr	r3, [r7, #4]
 8001e5c:	2200      	movs	r2, #0
 8001e5e:	f883 203c 	strb.w	r2, [r3, #60]	@ 0x3c
  }

  /* Configuration of ADC parameters if previous preliminary actions are      */
  /* correctly completed.                                                     */
  if (HAL_IS_BIT_CLR(hadc->State, HAL_ADC_STATE_ERROR_INTERNAL))
 8001e62:	687b      	ldr	r3, [r7, #4]
 8001e64:	6c1b      	ldr	r3, [r3, #64]	@ 0x40
 8001e66:	f003 0310 	and.w	r3, r3, #16
 8001e6a:	2b00      	cmp	r3, #0
 8001e6c:	d118      	bne.n	8001ea0 <HAL_ADC_Init+0x70>
  {
    /* Set ADC state */
    ADC_STATE_CLR_SET(hadc->State,
 8001e6e:	687b      	ldr	r3, [r7, #4]
 8001e70:	6c1b      	ldr	r3, [r3, #64]	@ 0x40
 8001e72:	f423 5388 	bic.w	r3, r3, #4352	@ 0x1100
 8001e76:	f023 0302 	bic.w	r3, r3, #2
 8001e7a:	f043 0202 	orr.w	r2, r3, #2
 8001e7e:	687b      	ldr	r3, [r7, #4]
 8001e80:	641a      	str	r2, [r3, #64]	@ 0x40
                      HAL_ADC_STATE_REG_BUSY | HAL_ADC_STATE_INJ_BUSY,
                      HAL_ADC_STATE_BUSY_INTERNAL);

    /* Set ADC parameters */
    ADC_Init(hadc);
 8001e82:	6878      	ldr	r0, [r7, #4]
 8001e84:	f000 fa78 	bl	8002378 <ADC_Init>

    /* Set ADC error code to none */
    ADC_CLEAR_ERRORCODE(hadc);
 8001e88:	687b      	ldr	r3, [r7, #4]
 8001e8a:	2200      	movs	r2, #0
 8001e8c:	645a      	str	r2, [r3, #68]	@ 0x44

    /* Set the ADC state */
    ADC_STATE_CLR_SET(hadc->State,
 8001e8e:	687b      	ldr	r3, [r7, #4]
 8001e90:	6c1b      	ldr	r3, [r3, #64]	@ 0x40
 8001e92:	f023 0303 	bic.w	r3, r3, #3
 8001e96:	f043 0201 	orr.w	r2, r3, #1
 8001e9a:	687b      	ldr	r3, [r7, #4]
 8001e9c:	641a      	str	r2, [r3, #64]	@ 0x40
 8001e9e:	e001      	b.n	8001ea4 <HAL_ADC_Init+0x74>
                      HAL_ADC_STATE_BUSY_INTERNAL,
                      HAL_ADC_STATE_READY);
  }
  else
  {
    tmp_hal_status = HAL_ERROR;
 8001ea0:	2301      	movs	r3, #1
 8001ea2:	73fb      	strb	r3, [r7, #15]
  }

  /* Release Lock */
  __HAL_UNLOCK(hadc);
 8001ea4:	687b      	ldr	r3, [r7, #4]
 8001ea6:	2200      	movs	r2, #0
 8001ea8:	f883 203c 	strb.w	r2, [r3, #60]	@ 0x3c

  /* Return function status */
  return tmp_hal_status;
 8001eac:	7bfb      	ldrb	r3, [r7, #15]
}
 8001eae:	4618      	mov	r0, r3
 8001eb0:	3710      	adds	r7, #16
 8001eb2:	46bd      	mov	sp, r7
 8001eb4:	bd80      	pop	{r7, pc}
	...

08001eb8 <HAL_ADC_Start_DMA>:
  * @param  pData The destination Buffer address.
  * @param  Length The length of data to be transferred from ADC peripheral to memory.
  * @retval HAL status
  */
HAL_StatusTypeDef HAL_ADC_Start_DMA(ADC_HandleTypeDef *hadc, uint32_t *pData, uint32_t Length)
{
 8001eb8:	b580      	push	{r7, lr}
 8001eba:	b086      	sub	sp, #24
 8001ebc:	af00      	add	r7, sp, #0
 8001ebe:	60f8      	str	r0, [r7, #12]
 8001ec0:	60b9      	str	r1, [r7, #8]
 8001ec2:	607a      	str	r2, [r7, #4]
  __IO uint32_t counter = 0U;
 8001ec4:	2300      	movs	r3, #0
 8001ec6:	613b      	str	r3, [r7, #16]
  /* Check the parameters */
  assert_param(IS_FUNCTIONAL_STATE(hadc->Init.ContinuousConvMode));
  assert_param(IS_ADC_EXT_TRIG_EDGE(hadc->Init.ExternalTrigConvEdge));

  /* Process locked */
  __HAL_LOCK(hadc);
 8001ec8:	68fb      	ldr	r3, [r7, #12]
 8001eca:	f893 303c 	ldrb.w	r3, [r3, #60]	@ 0x3c
 8001ece:	2b01      	cmp	r3, #1
 8001ed0:	d101      	bne.n	8001ed6 <HAL_ADC_Start_DMA+0x1e>
 8001ed2:	2302      	movs	r3, #2
 8001ed4:	e0e9      	b.n	80020aa <HAL_ADC_Start_DMA+0x1f2>
 8001ed6:	68fb      	ldr	r3, [r7, #12]
 8001ed8:	2201      	movs	r2, #1
 8001eda:	f883 203c 	strb.w	r2, [r3, #60]	@ 0x3c

  /* Enable the ADC peripheral */
  /* Check if ADC peripheral is disabled in order to enable it and wait during
  Tstab time the ADC's stabilization */
  if ((hadc->Instance->CR2 & ADC_CR2_ADON) != ADC_CR2_ADON)
 8001ede:	68fb      	ldr	r3, [r7, #12]
 8001ee0:	681b      	ldr	r3, [r3, #0]
 8001ee2:	689b      	ldr	r3, [r3, #8]
 8001ee4:	f003 0301 	and.w	r3, r3, #1
 8001ee8:	2b01      	cmp	r3, #1
 8001eea:	d018      	beq.n	8001f1e <HAL_ADC_Start_DMA+0x66>
  {
    /* Enable the Peripheral */
    __HAL_ADC_ENABLE(hadc);
 8001eec:	68fb      	ldr	r3, [r7, #12]
 8001eee:	681b      	ldr	r3, [r3, #0]
 8001ef0:	689a      	ldr	r2, [r3, #8]
 8001ef2:	68fb      	ldr	r3, [r7, #12]
 8001ef4:	681b      	ldr	r3, [r3, #0]
 8001ef6:	f042 0201 	orr.w	r2, r2, #1
 8001efa:	609a      	str	r2, [r3, #8]

    /* Delay for ADC stabilization time */
    /* Compute number of CPU cycles to wait for */
    counter = (ADC_STAB_DELAY_US * (SystemCoreClock / 1000000U));
 8001efc:	4b6d      	ldr	r3, [pc, #436]	@ (80020b4 <HAL_ADC_Start_DMA+0x1fc>)
 8001efe:	681b      	ldr	r3, [r3, #0]
 8001f00:	4a6d      	ldr	r2, [pc, #436]	@ (80020b8 <HAL_ADC_Start_DMA+0x200>)
 8001f02:	fba2 2303 	umull	r2, r3, r2, r3
 8001f06:	0c9a      	lsrs	r2, r3, #18
 8001f08:	4613      	mov	r3, r2
 8001f0a:	005b      	lsls	r3, r3, #1
 8001f0c:	4413      	add	r3, r2
 8001f0e:	613b      	str	r3, [r7, #16]
    while (counter != 0U)
 8001f10:	e002      	b.n	8001f18 <HAL_ADC_Start_DMA+0x60>
    {
      counter--;
 8001f12:	693b      	ldr	r3, [r7, #16]
 8001f14:	3b01      	subs	r3, #1
 8001f16:	613b      	str	r3, [r7, #16]
    while (counter != 0U)
 8001f18:	693b      	ldr	r3, [r7, #16]
 8001f1a:	2b00      	cmp	r3, #0
 8001f1c:	d1f9      	bne.n	8001f12 <HAL_ADC_Start_DMA+0x5a>
    }
  }

  /* Check ADC DMA Mode                                                     */
  /* - disable the DMA Mode if it is already enabled                        */
  if ((hadc->Instance->CR2 & ADC_CR2_DMA) == ADC_CR2_DMA)
 8001f1e:	68fb      	ldr	r3, [r7, #12]
 8001f20:	681b      	ldr	r3, [r3, #0]
 8001f22:	689b      	ldr	r3, [r3, #8]
 8001f24:	f403 7380 	and.w	r3, r3, #256	@ 0x100
 8001f28:	f5b3 7f80 	cmp.w	r3, #256	@ 0x100
 8001f2c:	d107      	bne.n	8001f3e <HAL_ADC_Start_DMA+0x86>
  {
    CLEAR_BIT(hadc->Instance->CR2, ADC_CR2_DMA);
 8001f2e:	68fb      	ldr	r3, [r7, #12]
 8001f30:	681b      	ldr	r3, [r3, #0]
 8001f32:	689a      	ldr	r2, [r3, #8]
 8001f34:	68fb      	ldr	r3, [r7, #12]
 8001f36:	681b      	ldr	r3, [r3, #0]
 8001f38:	f422 7280 	bic.w	r2, r2, #256	@ 0x100
 8001f3c:	609a      	str	r2, [r3, #8]
  }

  /* Start conversion if ADC is effectively enabled */
  if (HAL_IS_BIT_SET(hadc->Instance->CR2, ADC_CR2_ADON))
 8001f3e:	68fb      	ldr	r3, [r7, #12]
 8001f40:	681b      	ldr	r3, [r3, #0]
 8001f42:	689b      	ldr	r3, [r3, #8]
 8001f44:	f003 0301 	and.w	r3, r3, #1
 8001f48:	2b01      	cmp	r3, #1
 8001f4a:	f040 80a1 	bne.w	8002090 <HAL_ADC_Start_DMA+0x1d8>
  {
    /* Set ADC state                                                          */
    /* - Clear state bitfield related to regular group conversion results     */
    /* - Set state bitfield related to regular group operation                */
    ADC_STATE_CLR_SET(hadc->State,
 8001f4e:	68fb      	ldr	r3, [r7, #12]
 8001f50:	6c1b      	ldr	r3, [r3, #64]	@ 0x40
 8001f52:	f423 63e0 	bic.w	r3, r3, #1792	@ 0x700
 8001f56:	f023 0301 	bic.w	r3, r3, #1
 8001f5a:	f443 7280 	orr.w	r2, r3, #256	@ 0x100
 8001f5e:	68fb      	ldr	r3, [r7, #12]
 8001f60:	641a      	str	r2, [r3, #64]	@ 0x40
                      HAL_ADC_STATE_READY | HAL_ADC_STATE_REG_EOC | HAL_ADC_STATE_REG_OVR,
                      HAL_ADC_STATE_REG_BUSY);

    /* If conversions on group regular are also triggering group injected,    */
    /* update ADC state.                                                      */
    if (READ_BIT(hadc->Instance->CR1, ADC_CR1_JAUTO) != RESET)
 8001f62:	68fb      	ldr	r3, [r7, #12]
 8001f64:	681b      	ldr	r3, [r3, #0]
 8001f66:	685b      	ldr	r3, [r3, #4]
 8001f68:	f403 6380 	and.w	r3, r3, #1024	@ 0x400
 8001f6c:	2b00      	cmp	r3, #0
 8001f6e:	d007      	beq.n	8001f80 <HAL_ADC_Start_DMA+0xc8>
    {
      ADC_STATE_CLR_SET(hadc->State, HAL_ADC_STATE_INJ_EOC, HAL_ADC_STATE_INJ_BUSY);
 8001f70:	68fb      	ldr	r3, [r7, #12]
 8001f72:	6c1b      	ldr	r3, [r3, #64]	@ 0x40
 8001f74:	f423 5340 	bic.w	r3, r3, #12288	@ 0x3000
 8001f78:	f443 5280 	orr.w	r2, r3, #4096	@ 0x1000
 8001f7c:	68fb      	ldr	r3, [r7, #12]
 8001f7e:	641a      	str	r2, [r3, #64]	@ 0x40
    }

    /* State machine update: Check if an injected conversion is ongoing */
    if (HAL_IS_BIT_SET(hadc->State, HAL_ADC_STATE_INJ_BUSY))
 8001f80:	68fb      	ldr	r3, [r7, #12]
 8001f82:	6c1b      	ldr	r3, [r3, #64]	@ 0x40
 8001f84:	f403 5380 	and.w	r3, r3, #4096	@ 0x1000
 8001f88:	f5b3 5f80 	cmp.w	r3, #4096	@ 0x1000
 8001f8c:	d106      	bne.n	8001f9c <HAL_ADC_Start_DMA+0xe4>
    {
      /* Reset ADC error code fields related to conversions on group regular */
      CLEAR_BIT(hadc->ErrorCode, (HAL_ADC_ERROR_OVR | HAL_ADC_ERROR_DMA));
 8001f8e:	68fb      	ldr	r3, [r7, #12]
 8001f90:	6c5b      	ldr	r3, [r3, #68]	@ 0x44
 8001f92:	f023 0206 	bic.w	r2, r3, #6
 8001f96:	68fb      	ldr	r3, [r7, #12]
 8001f98:	645a      	str	r2, [r3, #68]	@ 0x44
 8001f9a:	e002      	b.n	8001fa2 <HAL_ADC_Start_DMA+0xea>
    }
    else
    {
      /* Reset ADC all error code fields */
      ADC_CLEAR_ERRORCODE(hadc);
 8001f9c:	68fb      	ldr	r3, [r7, #12]
 8001f9e:	2200      	movs	r2, #0
 8001fa0:	645a      	str	r2, [r3, #68]	@ 0x44
    }

    /* Process unlocked */
    /* Unlock before starting ADC conversions: in case of potential           */
    /* interruption, to let the process to ADC IRQ Handler.                   */
    __HAL_UNLOCK(hadc);
 8001fa2:	68fb      	ldr	r3, [r7, #12]
 8001fa4:	2200      	movs	r2, #0
 8001fa6:	f883 203c 	strb.w	r2, [r3, #60]	@ 0x3c

    /* Pointer to the common control register to which is belonging hadc    */
    /* (Depending on STM32F4 product, there may be up to 3 ADCs and 1 common */
    /* control register)                                                    */
    tmpADC_Common = ADC_COMMON_REGISTER(hadc);
 8001faa:	4b44      	ldr	r3, [pc, #272]	@ (80020bc <HAL_ADC_Start_DMA+0x204>)
 8001fac:	617b      	str	r3, [r7, #20]

    /* Set the DMA transfer complete callback */
    hadc->DMA_Handle->XferCpltCallback = ADC_DMAConvCplt;
 8001fae:	68fb      	ldr	r3, [r7, #12]
 8001fb0:	6b9b      	ldr	r3, [r3, #56]	@ 0x38
 8001fb2:	4a43      	ldr	r2, [pc, #268]	@ (80020c0 <HAL_ADC_Start_DMA+0x208>)
 8001fb4:	63da      	str	r2, [r3, #60]	@ 0x3c

    /* Set the DMA half transfer complete callback */
    hadc->DMA_Handle->XferHalfCpltCallback = ADC_DMAHalfConvCplt;
 8001fb6:	68fb      	ldr	r3, [r7, #12]
 8001fb8:	6b9b      	ldr	r3, [r3, #56]	@ 0x38
 8001fba:	4a42      	ldr	r2, [pc, #264]	@ (80020c4 <HAL_ADC_Start_DMA+0x20c>)
 8001fbc:	641a      	str	r2, [r3, #64]	@ 0x40

    /* Set the DMA error callback */
    hadc->DMA_Handle->XferErrorCallback = ADC_DMAError;
 8001fbe:	68fb      	ldr	r3, [r7, #12]
 8001fc0:	6b9b      	ldr	r3, [r3, #56]	@ 0x38
 8001fc2:	4a41      	ldr	r2, [pc, #260]	@ (80020c8 <HAL_ADC_Start_DMA+0x210>)
 8001fc4:	64da      	str	r2, [r3, #76]	@ 0x4c
    /* Manage ADC and DMA start: ADC overrun interruption, DMA start, ADC     */
    /* start (in case of SW start):                                           */

    /* Clear regular group conversion flag and overrun flag */
    /* (To ensure of no unknown state from potential previous ADC operations) */
    __HAL_ADC_CLEAR_FLAG(hadc, ADC_FLAG_EOC | ADC_FLAG_OVR);
 8001fc6:	68fb      	ldr	r3, [r7, #12]
 8001fc8:	681b      	ldr	r3, [r3, #0]
 8001fca:	f06f 0222 	mvn.w	r2, #34	@ 0x22
 8001fce:	601a      	str	r2, [r3, #0]

    /* Enable ADC overrun interrupt */
    __HAL_ADC_ENABLE_IT(hadc, ADC_IT_OVR);
 8001fd0:	68fb      	ldr	r3, [r7, #12]
 8001fd2:	681b      	ldr	r3, [r3, #0]
 8001fd4:	685a      	ldr	r2, [r3, #4]
 8001fd6:	68fb      	ldr	r3, [r7, #12]
 8001fd8:	681b      	ldr	r3, [r3, #0]
 8001fda:	f042 6280 	orr.w	r2, r2, #67108864	@ 0x4000000
 8001fde:	605a      	str	r2, [r3, #4]

    /* Enable ADC DMA mode */
    hadc->Instance->CR2 |= ADC_CR2_DMA;
 8001fe0:	68fb      	ldr	r3, [r7, #12]
 8001fe2:	681b      	ldr	r3, [r3, #0]
 8001fe4:	689a      	ldr	r2, [r3, #8]
 8001fe6:	68fb      	ldr	r3, [r7, #12]
 8001fe8:	681b      	ldr	r3, [r3, #0]
 8001fea:	f442 7280 	orr.w	r2, r2, #256	@ 0x100
 8001fee:	609a      	str	r2, [r3, #8]

    /* Start the DMA channel */
    HAL_DMA_Start_IT(hadc->DMA_Handle, (uint32_t)&hadc->Instance->DR, (uint32_t)pData, Length);
 8001ff0:	68fb      	ldr	r3, [r7, #12]
 8001ff2:	6b98      	ldr	r0, [r3, #56]	@ 0x38
 8001ff4:	68fb      	ldr	r3, [r7, #12]
 8001ff6:	681b      	ldr	r3, [r3, #0]
 8001ff8:	334c      	adds	r3, #76	@ 0x4c
 8001ffa:	4619      	mov	r1, r3
 8001ffc:	68ba      	ldr	r2, [r7, #8]
 8001ffe:	687b      	ldr	r3, [r7, #4]
 8002000:	f000 fd72 	bl	8002ae8 <HAL_DMA_Start_IT>

    /* Check if Multimode enabled */
    if (HAL_IS_BIT_CLR(tmpADC_Common->CCR, ADC_CCR_MULTI))
 8002004:	697b      	ldr	r3, [r7, #20]
 8002006:	685b      	ldr	r3, [r3, #4]
 8002008:	f003 031f 	and.w	r3, r3, #31
 800200c:	2b00      	cmp	r3, #0
 800200e:	d12a      	bne.n	8002066 <HAL_ADC_Start_DMA+0x1ae>
    {
#if defined(ADC2) && defined(ADC3)
      if ((hadc->Instance == ADC1) || ((hadc->Instance == ADC2) && ((ADC->CCR & ADC_CCR_MULTI_Msk) < ADC_CCR_MULTI_0)) \
 8002010:	68fb      	ldr	r3, [r7, #12]
 8002012:	681b      	ldr	r3, [r3, #0]
 8002014:	4a2d      	ldr	r2, [pc, #180]	@ (80020cc <HAL_ADC_Start_DMA+0x214>)
 8002016:	4293      	cmp	r3, r2
 8002018:	d015      	beq.n	8002046 <HAL_ADC_Start_DMA+0x18e>
 800201a:	68fb      	ldr	r3, [r7, #12]
 800201c:	681b      	ldr	r3, [r3, #0]
 800201e:	4a2c      	ldr	r2, [pc, #176]	@ (80020d0 <HAL_ADC_Start_DMA+0x218>)
 8002020:	4293      	cmp	r3, r2
 8002022:	d105      	bne.n	8002030 <HAL_ADC_Start_DMA+0x178>
 8002024:	4b25      	ldr	r3, [pc, #148]	@ (80020bc <HAL_ADC_Start_DMA+0x204>)
 8002026:	685b      	ldr	r3, [r3, #4]
 8002028:	f003 031f 	and.w	r3, r3, #31
 800202c:	2b00      	cmp	r3, #0
 800202e:	d00a      	beq.n	8002046 <HAL_ADC_Start_DMA+0x18e>
          || ((hadc->Instance == ADC3) && ((ADC->CCR & ADC_CCR_MULTI_Msk) < ADC_CCR_MULTI_4)))
 8002030:	68fb      	ldr	r3, [r7, #12]
 8002032:	681b      	ldr	r3, [r3, #0]
 8002034:	4a27      	ldr	r2, [pc, #156]	@ (80020d4 <HAL_ADC_Start_DMA+0x21c>)
 8002036:	4293      	cmp	r3, r2
 8002038:	d136      	bne.n	80020a8 <HAL_ADC_Start_DMA+0x1f0>
 800203a:	4b20      	ldr	r3, [pc, #128]	@ (80020bc <HAL_ADC_Start_DMA+0x204>)
 800203c:	685b      	ldr	r3, [r3, #4]
 800203e:	f003 0310 	and.w	r3, r3, #16
 8002042:	2b00      	cmp	r3, #0
 8002044:	d130      	bne.n	80020a8 <HAL_ADC_Start_DMA+0x1f0>
      {
#endif /* ADC2 || ADC3 */
        /* if no external trigger present enable software conversion of regular channels */
        if ((hadc->Instance->CR2 & ADC_CR2_EXTEN) == RESET)
 8002046:	68fb      	ldr	r3, [r7, #12]
 8002048:	681b      	ldr	r3, [r3, #0]
 800204a:	689b      	ldr	r3, [r3, #8]
 800204c:	f003 5340 	and.w	r3, r3, #805306368	@ 0x30000000
 8002050:	2b00      	cmp	r3, #0
 8002052:	d129      	bne.n	80020a8 <HAL_ADC_Start_DMA+0x1f0>
        {
          /* Enable the selected ADC software conversion for regular group */
          hadc->Instance->CR2 |= (uint32_t)ADC_CR2_SWSTART;
 8002054:	68fb      	ldr	r3, [r7, #12]
 8002056:	681b      	ldr	r3, [r3, #0]
 8002058:	689a      	ldr	r2, [r3, #8]
 800205a:	68fb      	ldr	r3, [r7, #12]
 800205c:	681b      	ldr	r3, [r3, #0]
 800205e:	f042 4280 	orr.w	r2, r2, #1073741824	@ 0x40000000
 8002062:	609a      	str	r2, [r3, #8]
 8002064:	e020      	b.n	80020a8 <HAL_ADC_Start_DMA+0x1f0>
#endif /* ADC2 || ADC3 */
    }
    else
    {
      /* if instance of handle correspond to ADC1 and  no external trigger present enable software conversion of regular channels */
      if ((hadc->Instance == ADC1) && ((hadc->Instance->CR2 & ADC_CR2_EXTEN) == RESET))
 8002066:	68fb      	ldr	r3, [r7, #12]
 8002068:	681b      	ldr	r3, [r3, #0]
 800206a:	4a18      	ldr	r2, [pc, #96]	@ (80020cc <HAL_ADC_Start_DMA+0x214>)
 800206c:	4293      	cmp	r3, r2
 800206e:	d11b      	bne.n	80020a8 <HAL_ADC_Start_DMA+0x1f0>
 8002070:	68fb      	ldr	r3, [r7, #12]
 8002072:	681b      	ldr	r3, [r3, #0]
 8002074:	689b      	ldr	r3, [r3, #8]
 8002076:	f003 5340 	and.w	r3, r3, #805306368	@ 0x30000000
 800207a:	2b00      	cmp	r3, #0
 800207c:	d114      	bne.n	80020a8 <HAL_ADC_Start_DMA+0x1f0>
      {
        /* Enable the selected ADC software conversion for regular group */
        hadc->Instance->CR2 |= (uint32_t)ADC_CR2_SWSTART;
 800207e:	68fb      	ldr	r3, [r7, #12]
 8002080:	681b      	ldr	r3, [r3, #0]
 8002082:	689a      	ldr	r2, [r3, #8]
 8002084:	68fb      	ldr	r3, [r7, #12]
 8002086:	681b      	ldr	r3, [r3, #0]
 8002088:	f042 4280 	orr.w	r2, r2, #1073741824	@ 0x40000000
 800208c:	609a      	str	r2, [r3, #8]
 800208e:	e00b      	b.n	80020a8 <HAL_ADC_Start_DMA+0x1f0>
    }
  }
  else
  {
    /* Update ADC state machine to error */
    SET_BIT(hadc->State, HAL_ADC_STATE_ERROR_INTERNAL);
 8002090:	68fb      	ldr	r3, [r7, #12]
 8002092:	6c1b      	ldr	r3, [r3, #64]	@ 0x40
 8002094:	f043 0210 	orr.w	r2, r3, #16
 8002098:	68fb      	ldr	r3, [r7, #12]
 800209a:	641a      	str	r2, [r3, #64]	@ 0x40

    /* Set ADC error code to ADC IP internal error */
    SET_BIT(hadc->ErrorCode, HAL_ADC_ERROR_INTERNAL);
 800209c:	68fb      	ldr	r3, [r7, #12]
 800209e:	6c5b      	ldr	r3, [r3, #68]	@ 0x44
 80020a0:	f043 0201 	orr.w	r2, r3, #1
 80020a4:	68fb      	ldr	r3, [r7, #12]
 80020a6:	645a      	str	r2, [r3, #68]	@ 0x44
  }

  /* Return function status */
  return HAL_OK;
 80020a8:	2300      	movs	r3, #0
}
 80020aa:	4618      	mov	r0, r3
 80020ac:	3718      	adds	r7, #24
 80020ae:	46bd      	mov	sp, r7
 80020b0:	bd80      	pop	{r7, pc}
 80020b2:	bf00      	nop
 80020b4:	20000008 	.word	0x20000008
 80020b8:	431bde83 	.word	0x431bde83
 80020bc:	40012300 	.word	0x40012300
 80020c0:	08002571 	.word	0x08002571
 80020c4:	0800262b 	.word	0x0800262b
 80020c8:	08002647 	.word	0x08002647
 80020cc:	40012000 	.word	0x40012000
 80020d0:	40012100 	.word	0x40012100
 80020d4:	40012200 	.word	0x40012200

080020d8 <HAL_ADC_ConvCpltCallback>:
  * @param  hadc pointer to a ADC_HandleTypeDef structure that contains
  *         the configuration information for the specified ADC.
  * @retval None
  */
__weak void HAL_ADC_ConvCpltCallback(ADC_HandleTypeDef *hadc)
{
 80020d8:	b480      	push	{r7}
 80020da:	b083      	sub	sp, #12
 80020dc:	af00      	add	r7, sp, #0
 80020de:	6078      	str	r0, [r7, #4]
  /* Prevent unused argument(s) compilation warning */
  UNUSED(hadc);
  /* NOTE : This function Should not be modified, when the callback is needed,
            the HAL_ADC_ConvCpltCallback could be implemented in the user file
   */
}
 80020e0:	bf00      	nop
 80020e2:	370c      	adds	r7, #12
 80020e4:	46bd      	mov	sp, r7
 80020e6:	f85d 7b04 	ldr.w	r7, [sp], #4
 80020ea:	4770      	bx	lr

080020ec <HAL_ADC_ConvHalfCpltCallback>:
  * @param  hadc pointer to a ADC_HandleTypeDef structure that contains
  *         the configuration information for the specified ADC.
  * @retval None
  */
__weak void HAL_ADC_ConvHalfCpltCallback(ADC_HandleTypeDef *hadc)
{
 80020ec:	b480      	push	{r7}
 80020ee:	b083      	sub	sp, #12
 80020f0:	af00      	add	r7, sp, #0
 80020f2:	6078      	str	r0, [r7, #4]
  /* Prevent unused argument(s) compilation warning */
  UNUSED(hadc);
  /* NOTE : This function Should not be modified, when the callback is needed,
            the HAL_ADC_ConvHalfCpltCallback could be implemented in the user file
   */
}
 80020f4:	bf00      	nop
 80020f6:	370c      	adds	r7, #12
 80020f8:	46bd      	mov	sp, r7
 80020fa:	f85d 7b04 	ldr.w	r7, [sp], #4
 80020fe:	4770      	bx	lr

08002100 <HAL_ADC_ErrorCallback>:
  * @param  hadc pointer to a ADC_HandleTypeDef structure that contains
  *         the configuration information for the specified ADC.
  * @retval None
  */
__weak void HAL_ADC_ErrorCallback(ADC_HandleTypeDef *hadc)
{
 8002100:	b480      	push	{r7}
 8002102:	b083      	sub	sp, #12
 8002104:	af00      	add	r7, sp, #0
 8002106:	6078      	str	r0, [r7, #4]
  /* Prevent unused argument(s) compilation warning */
  UNUSED(hadc);
  /* NOTE : This function Should not be modified, when the callback is needed,
            the HAL_ADC_ErrorCallback could be implemented in the user file
   */
}
 8002108:	bf00      	nop
 800210a:	370c      	adds	r7, #12
 800210c:	46bd      	mov	sp, r7
 800210e:	f85d 7b04 	ldr.w	r7, [sp], #4
 8002112:	4770      	bx	lr

08002114 <HAL_ADC_ConfigChannel>:
*         the configuration information for the specified ADC.
* @param  sConfig ADC configuration structure.
* @retval HAL status
*/
HAL_StatusTypeDef HAL_ADC_ConfigChannel(ADC_HandleTypeDef *hadc, ADC_ChannelConfTypeDef *sConfig)
{
 8002114:	b480      	push	{r7}
 8002116:	b085      	sub	sp, #20
 8002118:	af00      	add	r7, sp, #0
 800211a:	6078      	str	r0, [r7, #4]
 800211c:	6039      	str	r1, [r7, #0]
  __IO uint32_t counter = 0U;
 800211e:	2300      	movs	r3, #0
 8002120:	60bb      	str	r3, [r7, #8]
  assert_param(IS_ADC_CHANNEL(sConfig->Channel));
  assert_param(IS_ADC_REGULAR_RANK(sConfig->Rank));
  assert_param(IS_ADC_SAMPLE_TIME(sConfig->SamplingTime));

  /* Process locked */
  __HAL_LOCK(hadc);
 8002122:	687b      	ldr	r3, [r7, #4]
 8002124:	f893 303c 	ldrb.w	r3, [r3, #60]	@ 0x3c
 8002128:	2b01      	cmp	r3, #1
 800212a:	d101      	bne.n	8002130 <HAL_ADC_ConfigChannel+0x1c>
 800212c:	2302      	movs	r3, #2
 800212e:	e113      	b.n	8002358 <HAL_ADC_ConfigChannel+0x244>
 8002130:	687b      	ldr	r3, [r7, #4]
 8002132:	2201      	movs	r2, #1
 8002134:	f883 203c 	strb.w	r2, [r3, #60]	@ 0x3c

  /* if ADC_Channel_10 ... ADC_Channel_18 is selected */
  if (sConfig->Channel > ADC_CHANNEL_9)
 8002138:	683b      	ldr	r3, [r7, #0]
 800213a:	681b      	ldr	r3, [r3, #0]
 800213c:	2b09      	cmp	r3, #9
 800213e:	d925      	bls.n	800218c <HAL_ADC_ConfigChannel+0x78>
  {
    /* Clear the old sample time */
    hadc->Instance->SMPR1 &= ~ADC_SMPR1(ADC_SMPR1_SMP10, sConfig->Channel);
 8002140:	687b      	ldr	r3, [r7, #4]
 8002142:	681b      	ldr	r3, [r3, #0]
 8002144:	68d9      	ldr	r1, [r3, #12]
 8002146:	683b      	ldr	r3, [r7, #0]
 8002148:	681b      	ldr	r3, [r3, #0]
 800214a:	b29b      	uxth	r3, r3
 800214c:	461a      	mov	r2, r3
 800214e:	4613      	mov	r3, r2
 8002150:	005b      	lsls	r3, r3, #1
 8002152:	4413      	add	r3, r2
 8002154:	3b1e      	subs	r3, #30
 8002156:	2207      	movs	r2, #7
 8002158:	fa02 f303 	lsl.w	r3, r2, r3
 800215c:	43da      	mvns	r2, r3
 800215e:	687b      	ldr	r3, [r7, #4]
 8002160:	681b      	ldr	r3, [r3, #0]
 8002162:	400a      	ands	r2, r1
 8002164:	60da      	str	r2, [r3, #12]

    /* Set the new sample time */
    hadc->Instance->SMPR1 |= ADC_SMPR1(sConfig->SamplingTime, sConfig->Channel);
 8002166:	687b      	ldr	r3, [r7, #4]
 8002168:	681b      	ldr	r3, [r3, #0]
 800216a:	68d9      	ldr	r1, [r3, #12]
 800216c:	683b      	ldr	r3, [r7, #0]
 800216e:	689a      	ldr	r2, [r3, #8]
 8002170:	683b      	ldr	r3, [r7, #0]
 8002172:	681b      	ldr	r3, [r3, #0]
 8002174:	b29b      	uxth	r3, r3
 8002176:	4618      	mov	r0, r3
 8002178:	4603      	mov	r3, r0
 800217a:	005b      	lsls	r3, r3, #1
 800217c:	4403      	add	r3, r0
 800217e:	3b1e      	subs	r3, #30
 8002180:	409a      	lsls	r2, r3
 8002182:	687b      	ldr	r3, [r7, #4]
 8002184:	681b      	ldr	r3, [r3, #0]
 8002186:	430a      	orrs	r2, r1
 8002188:	60da      	str	r2, [r3, #12]
 800218a:	e022      	b.n	80021d2 <HAL_ADC_ConfigChannel+0xbe>
  }
  else /* ADC_Channel include in ADC_Channel_[0..9] */
  {
    /* Clear the old sample time */
    hadc->Instance->SMPR2 &= ~ADC_SMPR2(ADC_SMPR2_SMP0, sConfig->Channel);
 800218c:	687b      	ldr	r3, [r7, #4]
 800218e:	681b      	ldr	r3, [r3, #0]
 8002190:	6919      	ldr	r1, [r3, #16]
 8002192:	683b      	ldr	r3, [r7, #0]
 8002194:	681b      	ldr	r3, [r3, #0]
 8002196:	b29b      	uxth	r3, r3
 8002198:	461a      	mov	r2, r3
 800219a:	4613      	mov	r3, r2
 800219c:	005b      	lsls	r3, r3, #1
 800219e:	4413      	add	r3, r2
 80021a0:	2207      	movs	r2, #7
 80021a2:	fa02 f303 	lsl.w	r3, r2, r3
 80021a6:	43da      	mvns	r2, r3
 80021a8:	687b      	ldr	r3, [r7, #4]
 80021aa:	681b      	ldr	r3, [r3, #0]
 80021ac:	400a      	ands	r2, r1
 80021ae:	611a      	str	r2, [r3, #16]

    /* Set the new sample time */
    hadc->Instance->SMPR2 |= ADC_SMPR2(sConfig->SamplingTime, sConfig->Channel);
 80021b0:	687b      	ldr	r3, [r7, #4]
 80021b2:	681b      	ldr	r3, [r3, #0]
 80021b4:	6919      	ldr	r1, [r3, #16]
 80021b6:	683b      	ldr	r3, [r7, #0]
 80021b8:	689a      	ldr	r2, [r3, #8]
 80021ba:	683b      	ldr	r3, [r7, #0]
 80021bc:	681b      	ldr	r3, [r3, #0]
 80021be:	b29b      	uxth	r3, r3
 80021c0:	4618      	mov	r0, r3
 80021c2:	4603      	mov	r3, r0
 80021c4:	005b      	lsls	r3, r3, #1
 80021c6:	4403      	add	r3, r0
 80021c8:	409a      	lsls	r2, r3
 80021ca:	687b      	ldr	r3, [r7, #4]
 80021cc:	681b      	ldr	r3, [r3, #0]
 80021ce:	430a      	orrs	r2, r1
 80021d0:	611a      	str	r2, [r3, #16]
  }

  /* For Rank 1 to 6 */
  if (sConfig->Rank < 7U)
 80021d2:	683b      	ldr	r3, [r7, #0]
 80021d4:	685b      	ldr	r3, [r3, #4]
 80021d6:	2b06      	cmp	r3, #6
 80021d8:	d824      	bhi.n	8002224 <HAL_ADC_ConfigChannel+0x110>
  {
    /* Clear the old SQx bits for the selected rank */
    hadc->Instance->SQR3 &= ~ADC_SQR3_RK(ADC_SQR3_SQ1, sConfig->Rank);
 80021da:	687b      	ldr	r3, [r7, #4]
 80021dc:	681b      	ldr	r3, [r3, #0]
 80021de:	6b59      	ldr	r1, [r3, #52]	@ 0x34
 80021e0:	683b      	ldr	r3, [r7, #0]
 80021e2:	685a      	ldr	r2, [r3, #4]
 80021e4:	4613      	mov	r3, r2
 80021e6:	009b      	lsls	r3, r3, #2
 80021e8:	4413      	add	r3, r2
 80021ea:	3b05      	subs	r3, #5
 80021ec:	221f      	movs	r2, #31
 80021ee:	fa02 f303 	lsl.w	r3, r2, r3
 80021f2:	43da      	mvns	r2, r3
 80021f4:	687b      	ldr	r3, [r7, #4]
 80021f6:	681b      	ldr	r3, [r3, #0]
 80021f8:	400a      	ands	r2, r1
 80021fa:	635a      	str	r2, [r3, #52]	@ 0x34

    /* Set the SQx bits for the selected rank */
    hadc->Instance->SQR3 |= ADC_SQR3_RK(sConfig->Channel, sConfig->Rank);
 80021fc:	687b      	ldr	r3, [r7, #4]
 80021fe:	681b      	ldr	r3, [r3, #0]
 8002200:	6b59      	ldr	r1, [r3, #52]	@ 0x34
 8002202:	683b      	ldr	r3, [r7, #0]
 8002204:	681b      	ldr	r3, [r3, #0]
 8002206:	b29b      	uxth	r3, r3
 8002208:	4618      	mov	r0, r3
 800220a:	683b      	ldr	r3, [r7, #0]
 800220c:	685a      	ldr	r2, [r3, #4]
 800220e:	4613      	mov	r3, r2
 8002210:	009b      	lsls	r3, r3, #2
 8002212:	4413      	add	r3, r2
 8002214:	3b05      	subs	r3, #5
 8002216:	fa00 f203 	lsl.w	r2, r0, r3
 800221a:	687b      	ldr	r3, [r7, #4]
 800221c:	681b      	ldr	r3, [r3, #0]
 800221e:	430a      	orrs	r2, r1
 8002220:	635a      	str	r2, [r3, #52]	@ 0x34
 8002222:	e04c      	b.n	80022be <HAL_ADC_ConfigChannel+0x1aa>
  }
  /* For Rank 7 to 12 */
  else if (sConfig->Rank < 13U)
 8002224:	683b      	ldr	r3, [r7, #0]
 8002226:	685b      	ldr	r3, [r3, #4]
 8002228:	2b0c      	cmp	r3, #12
 800222a:	d824      	bhi.n	8002276 <HAL_ADC_ConfigChannel+0x162>
  {
    /* Clear the old SQx bits for the selected rank */
    hadc->Instance->SQR2 &= ~ADC_SQR2_RK(ADC_SQR2_SQ7, sConfig->Rank);
 800222c:	687b      	ldr	r3, [r7, #4]
 800222e:	681b      	ldr	r3, [r3, #0]
 8002230:	6b19      	ldr	r1, [r3, #48]	@ 0x30
 8002232:	683b      	ldr	r3, [r7, #0]
 8002234:	685a      	ldr	r2, [r3, #4]
 8002236:	4613      	mov	r3, r2
 8002238:	009b      	lsls	r3, r3, #2
 800223a:	4413      	add	r3, r2
 800223c:	3b23      	subs	r3, #35	@ 0x23
 800223e:	221f      	movs	r2, #31
 8002240:	fa02 f303 	lsl.w	r3, r2, r3
 8002244:	43da      	mvns	r2, r3
 8002246:	687b      	ldr	r3, [r7, #4]
 8002248:	681b      	ldr	r3, [r3, #0]
 800224a:	400a      	ands	r2, r1
 800224c:	631a      	str	r2, [r3, #48]	@ 0x30

    /* Set the SQx bits for the selected rank */
    hadc->Instance->SQR2 |= ADC_SQR2_RK(sConfig->Channel, sConfig->Rank);
 800224e:	687b      	ldr	r3, [r7, #4]
 8002250:	681b      	ldr	r3, [r3, #0]
 8002252:	6b19      	ldr	r1, [r3, #48]	@ 0x30
 8002254:	683b      	ldr	r3, [r7, #0]
 8002256:	681b      	ldr	r3, [r3, #0]
 8002258:	b29b      	uxth	r3, r3
 800225a:	4618      	mov	r0, r3
 800225c:	683b      	ldr	r3, [r7, #0]
 800225e:	685a      	ldr	r2, [r3, #4]
 8002260:	4613      	mov	r3, r2
 8002262:	009b      	lsls	r3, r3, #2
 8002264:	4413      	add	r3, r2
 8002266:	3b23      	subs	r3, #35	@ 0x23
 8002268:	fa00 f203 	lsl.w	r2, r0, r3
 800226c:	687b      	ldr	r3, [r7, #4]
 800226e:	681b      	ldr	r3, [r3, #0]
 8002270:	430a      	orrs	r2, r1
 8002272:	631a      	str	r2, [r3, #48]	@ 0x30
 8002274:	e023      	b.n	80022be <HAL_ADC_ConfigChannel+0x1aa>
  }
  /* For Rank 13 to 16 */
  else
  {
    /* Clear the old SQx bits for the selected rank */
    hadc->Instance->SQR1 &= ~ADC_SQR1_RK(ADC_SQR1_SQ13, sConfig->Rank);
 8002276:	687b      	ldr	r3, [r7, #4]
 8002278:	681b      	ldr	r3, [r3, #0]
 800227a:	6ad9      	ldr	r1, [r3, #44]	@ 0x2c
 800227c:	683b      	ldr	r3, [r7, #0]
 800227e:	685a      	ldr	r2, [r3, #4]
 8002280:	4613      	mov	r3, r2
 8002282:	009b      	lsls	r3, r3, #2
 8002284:	4413      	add	r3, r2
 8002286:	3b41      	subs	r3, #65	@ 0x41
 8002288:	221f      	movs	r2, #31
 800228a:	fa02 f303 	lsl.w	r3, r2, r3
 800228e:	43da      	mvns	r2, r3
 8002290:	687b      	ldr	r3, [r7, #4]
 8002292:	681b      	ldr	r3, [r3, #0]
 8002294:	400a      	ands	r2, r1
 8002296:	62da      	str	r2, [r3, #44]	@ 0x2c

    /* Set the SQx bits for the selected rank */
    hadc->Instance->SQR1 |= ADC_SQR1_RK(sConfig->Channel, sConfig->Rank);
 8002298:	687b      	ldr	r3, [r7, #4]
 800229a:	681b      	ldr	r3, [r3, #0]
 800229c:	6ad9      	ldr	r1, [r3, #44]	@ 0x2c
 800229e:	683b      	ldr	r3, [r7, #0]
 80022a0:	681b      	ldr	r3, [r3, #0]
 80022a2:	b29b      	uxth	r3, r3
 80022a4:	4618      	mov	r0, r3
 80022a6:	683b      	ldr	r3, [r7, #0]
 80022a8:	685a      	ldr	r2, [r3, #4]
 80022aa:	4613      	mov	r3, r2
 80022ac:	009b      	lsls	r3, r3, #2
 80022ae:	4413      	add	r3, r2
 80022b0:	3b41      	subs	r3, #65	@ 0x41
 80022b2:	fa00 f203 	lsl.w	r2, r0, r3
 80022b6:	687b      	ldr	r3, [r7, #4]
 80022b8:	681b      	ldr	r3, [r3, #0]
 80022ba:	430a      	orrs	r2, r1
 80022bc:	62da      	str	r2, [r3, #44]	@ 0x2c
  }

  /* Pointer to the common control register to which is belonging hadc    */
  /* (Depending on STM32F4 product, there may be up to 3 ADCs and 1 common */
  /* control register)                                                    */
  tmpADC_Common = ADC_COMMON_REGISTER(hadc);
 80022be:	4b29      	ldr	r3, [pc, #164]	@ (8002364 <HAL_ADC_ConfigChannel+0x250>)
 80022c0:	60fb      	str	r3, [r7, #12]

  /* if ADC1 Channel_18 is selected for VBAT Channel ennable VBATE */
  if ((hadc->Instance == ADC1) && (sConfig->Channel == ADC_CHANNEL_VBAT))
 80022c2:	687b      	ldr	r3, [r7, #4]
 80022c4:	681b      	ldr	r3, [r3, #0]
 80022c6:	4a28      	ldr	r2, [pc, #160]	@ (8002368 <HAL_ADC_ConfigChannel+0x254>)
 80022c8:	4293      	cmp	r3, r2
 80022ca:	d10f      	bne.n	80022ec <HAL_ADC_ConfigChannel+0x1d8>
 80022cc:	683b      	ldr	r3, [r7, #0]
 80022ce:	681b      	ldr	r3, [r3, #0]
 80022d0:	2b12      	cmp	r3, #18
 80022d2:	d10b      	bne.n	80022ec <HAL_ADC_ConfigChannel+0x1d8>
  {
    /* Disable the TEMPSENSOR channel in case of using board with multiplixed ADC_CHANNEL_VBAT & ADC_CHANNEL_TEMPSENSOR*/
    if ((uint16_t)ADC_CHANNEL_TEMPSENSOR == (uint16_t)ADC_CHANNEL_VBAT)
    {
      tmpADC_Common->CCR &= ~ADC_CCR_TSVREFE;
 80022d4:	68fb      	ldr	r3, [r7, #12]
 80022d6:	685b      	ldr	r3, [r3, #4]
 80022d8:	f423 0200 	bic.w	r2, r3, #8388608	@ 0x800000
 80022dc:	68fb      	ldr	r3, [r7, #12]
 80022de:	605a      	str	r2, [r3, #4]
    }
    /* Enable the VBAT channel*/
    tmpADC_Common->CCR |= ADC_CCR_VBATE;
 80022e0:	68fb      	ldr	r3, [r7, #12]
 80022e2:	685b      	ldr	r3, [r3, #4]
 80022e4:	f443 0280 	orr.w	r2, r3, #4194304	@ 0x400000
 80022e8:	68fb      	ldr	r3, [r7, #12]
 80022ea:	605a      	str	r2, [r3, #4]
  }

  /* if ADC1 Channel_16 or Channel_18 is selected for Temperature sensor or
     Channel_17 is selected for VREFINT enable TSVREFE */
  if ((hadc->Instance == ADC1) && ((sConfig->Channel == ADC_CHANNEL_TEMPSENSOR) || (sConfig->Channel == ADC_CHANNEL_VREFINT)))
 80022ec:	687b      	ldr	r3, [r7, #4]
 80022ee:	681b      	ldr	r3, [r3, #0]
 80022f0:	4a1d      	ldr	r2, [pc, #116]	@ (8002368 <HAL_ADC_ConfigChannel+0x254>)
 80022f2:	4293      	cmp	r3, r2
 80022f4:	d12b      	bne.n	800234e <HAL_ADC_ConfigChannel+0x23a>
 80022f6:	683b      	ldr	r3, [r7, #0]
 80022f8:	681b      	ldr	r3, [r3, #0]
 80022fa:	4a1c      	ldr	r2, [pc, #112]	@ (800236c <HAL_ADC_ConfigChannel+0x258>)
 80022fc:	4293      	cmp	r3, r2
 80022fe:	d003      	beq.n	8002308 <HAL_ADC_ConfigChannel+0x1f4>
 8002300:	683b      	ldr	r3, [r7, #0]
 8002302:	681b      	ldr	r3, [r3, #0]
 8002304:	2b11      	cmp	r3, #17
 8002306:	d122      	bne.n	800234e <HAL_ADC_ConfigChannel+0x23a>
  {
    /* Disable the VBAT channel in case of using board with multiplixed ADC_CHANNEL_VBAT & ADC_CHANNEL_TEMPSENSOR*/
    if ((uint16_t)ADC_CHANNEL_TEMPSENSOR == (uint16_t)ADC_CHANNEL_VBAT)
    {
      tmpADC_Common->CCR &= ~ADC_CCR_VBATE;
 8002308:	68fb      	ldr	r3, [r7, #12]
 800230a:	685b      	ldr	r3, [r3, #4]
 800230c:	f423 0280 	bic.w	r2, r3, #4194304	@ 0x400000
 8002310:	68fb      	ldr	r3, [r7, #12]
 8002312:	605a      	str	r2, [r3, #4]
    }
    /* Enable the Temperature sensor and VREFINT channel*/
    tmpADC_Common->CCR |= ADC_CCR_TSVREFE;
 8002314:	68fb      	ldr	r3, [r7, #12]
 8002316:	685b      	ldr	r3, [r3, #4]
 8002318:	f443 0200 	orr.w	r2, r3, #8388608	@ 0x800000
 800231c:	68fb      	ldr	r3, [r7, #12]
 800231e:	605a      	str	r2, [r3, #4]

    if (sConfig->Channel == ADC_CHANNEL_TEMPSENSOR)
 8002320:	683b      	ldr	r3, [r7, #0]
 8002322:	681b      	ldr	r3, [r3, #0]
 8002324:	4a11      	ldr	r2, [pc, #68]	@ (800236c <HAL_ADC_ConfigChannel+0x258>)
 8002326:	4293      	cmp	r3, r2
 8002328:	d111      	bne.n	800234e <HAL_ADC_ConfigChannel+0x23a>
    {
      /* Delay for temperature sensor stabilization time */
      /* Compute number of CPU cycles to wait for */
      counter = (ADC_TEMPSENSOR_DELAY_US * (SystemCoreClock / 1000000U));
 800232a:	4b11      	ldr	r3, [pc, #68]	@ (8002370 <HAL_ADC_ConfigChannel+0x25c>)
 800232c:	681b      	ldr	r3, [r3, #0]
 800232e:	4a11      	ldr	r2, [pc, #68]	@ (8002374 <HAL_ADC_ConfigChannel+0x260>)
 8002330:	fba2 2303 	umull	r2, r3, r2, r3
 8002334:	0c9a      	lsrs	r2, r3, #18
 8002336:	4613      	mov	r3, r2
 8002338:	009b      	lsls	r3, r3, #2
 800233a:	4413      	add	r3, r2
 800233c:	005b      	lsls	r3, r3, #1
 800233e:	60bb      	str	r3, [r7, #8]
      while (counter != 0U)
 8002340:	e002      	b.n	8002348 <HAL_ADC_ConfigChannel+0x234>
      {
        counter--;
 8002342:	68bb      	ldr	r3, [r7, #8]
 8002344:	3b01      	subs	r3, #1
 8002346:	60bb      	str	r3, [r7, #8]
      while (counter != 0U)
 8002348:	68bb      	ldr	r3, [r7, #8]
 800234a:	2b00      	cmp	r3, #0
 800234c:	d1f9      	bne.n	8002342 <HAL_ADC_ConfigChannel+0x22e>
      }
    }
  }

  /* Process unlocked */
  __HAL_UNLOCK(hadc);
 800234e:	687b      	ldr	r3, [r7, #4]
 8002350:	2200      	movs	r2, #0
 8002352:	f883 203c 	strb.w	r2, [r3, #60]	@ 0x3c

  /* Return function status */
  return HAL_OK;
 8002356:	2300      	movs	r3, #0
}
 8002358:	4618      	mov	r0, r3
 800235a:	3714      	adds	r7, #20
 800235c:	46bd      	mov	sp, r7
 800235e:	f85d 7b04 	ldr.w	r7, [sp], #4
 8002362:	4770      	bx	lr
 8002364:	40012300 	.word	0x40012300
 8002368:	40012000 	.word	0x40012000
 800236c:	10000012 	.word	0x10000012
 8002370:	20000008 	.word	0x20000008
 8002374:	431bde83 	.word	0x431bde83

08002378 <ADC_Init>:
  * @param  hadc pointer to a ADC_HandleTypeDef structure that contains
  *         the configuration information for the specified ADC.
  * @retval None
  */
static void ADC_Init(ADC_HandleTypeDef *hadc)
{
 8002378:	b480      	push	{r7}
 800237a:	b085      	sub	sp, #20
 800237c:	af00      	add	r7, sp, #0
 800237e:	6078      	str	r0, [r7, #4]

  /* Set ADC parameters */
  /* Pointer to the common control register to which is belonging hadc    */
  /* (Depending on STM32F4 product, there may be up to 3 ADCs and 1 common */
  /* control register)                                                    */
  tmpADC_Common = ADC_COMMON_REGISTER(hadc);
 8002380:	4b79      	ldr	r3, [pc, #484]	@ (8002568 <ADC_Init+0x1f0>)
 8002382:	60fb      	str	r3, [r7, #12]

  /* Set the ADC clock prescaler */
  tmpADC_Common->CCR &= ~(ADC_CCR_ADCPRE);
 8002384:	68fb      	ldr	r3, [r7, #12]
 8002386:	685b      	ldr	r3, [r3, #4]
 8002388:	f423 3240 	bic.w	r2, r3, #196608	@ 0x30000
 800238c:	68fb      	ldr	r3, [r7, #12]
 800238e:	605a      	str	r2, [r3, #4]
  tmpADC_Common->CCR |=  hadc->Init.ClockPrescaler;
 8002390:	68fb      	ldr	r3, [r7, #12]
 8002392:	685a      	ldr	r2, [r3, #4]
 8002394:	687b      	ldr	r3, [r7, #4]
 8002396:	685b      	ldr	r3, [r3, #4]
 8002398:	431a      	orrs	r2, r3
 800239a:	68fb      	ldr	r3, [r7, #12]
 800239c:	605a      	str	r2, [r3, #4]

  /* Set ADC scan mode */
  hadc->Instance->CR1 &= ~(ADC_CR1_SCAN);
 800239e:	687b      	ldr	r3, [r7, #4]
 80023a0:	681b      	ldr	r3, [r3, #0]
 80023a2:	685a      	ldr	r2, [r3, #4]
 80023a4:	687b      	ldr	r3, [r7, #4]
 80023a6:	681b      	ldr	r3, [r3, #0]
 80023a8:	f422 7280 	bic.w	r2, r2, #256	@ 0x100
 80023ac:	605a      	str	r2, [r3, #4]
  hadc->Instance->CR1 |=  ADC_CR1_SCANCONV(hadc->Init.ScanConvMode);
 80023ae:	687b      	ldr	r3, [r7, #4]
 80023b0:	681b      	ldr	r3, [r3, #0]
 80023b2:	6859      	ldr	r1, [r3, #4]
 80023b4:	687b      	ldr	r3, [r7, #4]
 80023b6:	691b      	ldr	r3, [r3, #16]
 80023b8:	021a      	lsls	r2, r3, #8
 80023ba:	687b      	ldr	r3, [r7, #4]
 80023bc:	681b      	ldr	r3, [r3, #0]
 80023be:	430a      	orrs	r2, r1
 80023c0:	605a      	str	r2, [r3, #4]

  /* Set ADC resolution */
  hadc->Instance->CR1 &= ~(ADC_CR1_RES);
 80023c2:	687b      	ldr	r3, [r7, #4]
 80023c4:	681b      	ldr	r3, [r3, #0]
 80023c6:	685a      	ldr	r2, [r3, #4]
 80023c8:	687b      	ldr	r3, [r7, #4]
 80023ca:	681b      	ldr	r3, [r3, #0]
 80023cc:	f022 7240 	bic.w	r2, r2, #50331648	@ 0x3000000
 80023d0:	605a      	str	r2, [r3, #4]
  hadc->Instance->CR1 |=  hadc->Init.Resolution;
 80023d2:	687b      	ldr	r3, [r7, #4]
 80023d4:	681b      	ldr	r3, [r3, #0]
 80023d6:	6859      	ldr	r1, [r3, #4]
 80023d8:	687b      	ldr	r3, [r7, #4]
 80023da:	689a      	ldr	r2, [r3, #8]
 80023dc:	687b      	ldr	r3, [r7, #4]
 80023de:	681b      	ldr	r3, [r3, #0]
 80023e0:	430a      	orrs	r2, r1
 80023e2:	605a      	str	r2, [r3, #4]

  /* Set ADC data alignment */
  hadc->Instance->CR2 &= ~(ADC_CR2_ALIGN);
 80023e4:	687b      	ldr	r3, [r7, #4]
 80023e6:	681b      	ldr	r3, [r3, #0]
 80023e8:	689a      	ldr	r2, [r3, #8]
 80023ea:	687b      	ldr	r3, [r7, #4]
 80023ec:	681b      	ldr	r3, [r3, #0]
 80023ee:	f422 6200 	bic.w	r2, r2, #2048	@ 0x800
 80023f2:	609a      	str	r2, [r3, #8]
  hadc->Instance->CR2 |= hadc->Init.DataAlign;
 80023f4:	687b      	ldr	r3, [r7, #4]
 80023f6:	681b      	ldr	r3, [r3, #0]
 80023f8:	6899      	ldr	r1, [r3, #8]
 80023fa:	687b      	ldr	r3, [r7, #4]
 80023fc:	68da      	ldr	r2, [r3, #12]
 80023fe:	687b      	ldr	r3, [r7, #4]
 8002400:	681b      	ldr	r3, [r3, #0]
 8002402:	430a      	orrs	r2, r1
 8002404:	609a      	str	r2, [r3, #8]
  /* Enable external trigger if trigger selection is different of software  */
  /* start.                                                                 */
  /* Note: This configuration keeps the hardware feature of parameter       */
  /*       ExternalTrigConvEdge "trigger edge none" equivalent to           */
  /*       software start.                                                  */
  if (hadc->Init.ExternalTrigConv != ADC_SOFTWARE_START)
 8002406:	687b      	ldr	r3, [r7, #4]
 8002408:	6a9b      	ldr	r3, [r3, #40]	@ 0x28
 800240a:	4a58      	ldr	r2, [pc, #352]	@ (800256c <ADC_Init+0x1f4>)
 800240c:	4293      	cmp	r3, r2
 800240e:	d022      	beq.n	8002456 <ADC_Init+0xde>
  {
    /* Select external trigger to start conversion */
    hadc->Instance->CR2 &= ~(ADC_CR2_EXTSEL);
 8002410:	687b      	ldr	r3, [r7, #4]
 8002412:	681b      	ldr	r3, [r3, #0]
 8002414:	689a      	ldr	r2, [r3, #8]
 8002416:	687b      	ldr	r3, [r7, #4]
 8002418:	681b      	ldr	r3, [r3, #0]
 800241a:	f022 6270 	bic.w	r2, r2, #251658240	@ 0xf000000
 800241e:	609a      	str	r2, [r3, #8]
    hadc->Instance->CR2 |= hadc->Init.ExternalTrigConv;
 8002420:	687b      	ldr	r3, [r7, #4]
 8002422:	681b      	ldr	r3, [r3, #0]
 8002424:	6899      	ldr	r1, [r3, #8]
 8002426:	687b      	ldr	r3, [r7, #4]
 8002428:	6a9a      	ldr	r2, [r3, #40]	@ 0x28
 800242a:	687b      	ldr	r3, [r7, #4]
 800242c:	681b      	ldr	r3, [r3, #0]
 800242e:	430a      	orrs	r2, r1
 8002430:	609a      	str	r2, [r3, #8]

    /* Select external trigger polarity */
    hadc->Instance->CR2 &= ~(ADC_CR2_EXTEN);
 8002432:	687b      	ldr	r3, [r7, #4]
 8002434:	681b      	ldr	r3, [r3, #0]
 8002436:	689a      	ldr	r2, [r3, #8]
 8002438:	687b      	ldr	r3, [r7, #4]
 800243a:	681b      	ldr	r3, [r3, #0]
 800243c:	f022 5240 	bic.w	r2, r2, #805306368	@ 0x30000000
 8002440:	609a      	str	r2, [r3, #8]
    hadc->Instance->CR2 |= hadc->Init.ExternalTrigConvEdge;
 8002442:	687b      	ldr	r3, [r7, #4]
 8002444:	681b      	ldr	r3, [r3, #0]
 8002446:	6899      	ldr	r1, [r3, #8]
 8002448:	687b      	ldr	r3, [r7, #4]
 800244a:	6ada      	ldr	r2, [r3, #44]	@ 0x2c
 800244c:	687b      	ldr	r3, [r7, #4]
 800244e:	681b      	ldr	r3, [r3, #0]
 8002450:	430a      	orrs	r2, r1
 8002452:	609a      	str	r2, [r3, #8]
 8002454:	e00f      	b.n	8002476 <ADC_Init+0xfe>
  }
  else
  {
    /* Reset the external trigger */
    hadc->Instance->CR2 &= ~(ADC_CR2_EXTSEL);
 8002456:	687b      	ldr	r3, [r7, #4]
 8002458:	681b      	ldr	r3, [r3, #0]
 800245a:	689a      	ldr	r2, [r3, #8]
 800245c:	687b      	ldr	r3, [r7, #4]
 800245e:	681b      	ldr	r3, [r3, #0]
 8002460:	f022 6270 	bic.w	r2, r2, #251658240	@ 0xf000000
 8002464:	609a      	str	r2, [r3, #8]
    hadc->Instance->CR2 &= ~(ADC_CR2_EXTEN);
 8002466:	687b      	ldr	r3, [r7, #4]
 8002468:	681b      	ldr	r3, [r3, #0]
 800246a:	689a      	ldr	r2, [r3, #8]
 800246c:	687b      	ldr	r3, [r7, #4]
 800246e:	681b      	ldr	r3, [r3, #0]
 8002470:	f022 5240 	bic.w	r2, r2, #805306368	@ 0x30000000
 8002474:	609a      	str	r2, [r3, #8]
  }

  /* Enable or disable ADC continuous conversion mode */
  hadc->Instance->CR2 &= ~(ADC_CR2_CONT);
 8002476:	687b      	ldr	r3, [r7, #4]
 8002478:	681b      	ldr	r3, [r3, #0]
 800247a:	689a      	ldr	r2, [r3, #8]
 800247c:	687b      	ldr	r3, [r7, #4]
 800247e:	681b      	ldr	r3, [r3, #0]
 8002480:	f022 0202 	bic.w	r2, r2, #2
 8002484:	609a      	str	r2, [r3, #8]
  hadc->Instance->CR2 |= ADC_CR2_CONTINUOUS((uint32_t)hadc->Init.ContinuousConvMode);
 8002486:	687b      	ldr	r3, [r7, #4]
 8002488:	681b      	ldr	r3, [r3, #0]
 800248a:	6899      	ldr	r1, [r3, #8]
 800248c:	687b      	ldr	r3, [r7, #4]
 800248e:	7e1b      	ldrb	r3, [r3, #24]
 8002490:	005a      	lsls	r2, r3, #1
 8002492:	687b      	ldr	r3, [r7, #4]
 8002494:	681b      	ldr	r3, [r3, #0]
 8002496:	430a      	orrs	r2, r1
 8002498:	609a      	str	r2, [r3, #8]

  if (hadc->Init.DiscontinuousConvMode != DISABLE)
 800249a:	687b      	ldr	r3, [r7, #4]
 800249c:	f893 3020 	ldrb.w	r3, [r3, #32]
 80024a0:	2b00      	cmp	r3, #0
 80024a2:	d01b      	beq.n	80024dc <ADC_Init+0x164>
  {
    assert_param(IS_ADC_REGULAR_DISC_NUMBER(hadc->Init.NbrOfDiscConversion));

    /* Enable the selected ADC regular discontinuous mode */
    hadc->Instance->CR1 |= (uint32_t)ADC_CR1_DISCEN;
 80024a4:	687b      	ldr	r3, [r7, #4]
 80024a6:	681b      	ldr	r3, [r3, #0]
 80024a8:	685a      	ldr	r2, [r3, #4]
 80024aa:	687b      	ldr	r3, [r7, #4]
 80024ac:	681b      	ldr	r3, [r3, #0]
 80024ae:	f442 6200 	orr.w	r2, r2, #2048	@ 0x800
 80024b2:	605a      	str	r2, [r3, #4]

    /* Set the number of channels to be converted in discontinuous mode */
    hadc->Instance->CR1 &= ~(ADC_CR1_DISCNUM);
 80024b4:	687b      	ldr	r3, [r7, #4]
 80024b6:	681b      	ldr	r3, [r3, #0]
 80024b8:	685a      	ldr	r2, [r3, #4]
 80024ba:	687b      	ldr	r3, [r7, #4]
 80024bc:	681b      	ldr	r3, [r3, #0]
 80024be:	f422 4260 	bic.w	r2, r2, #57344	@ 0xe000
 80024c2:	605a      	str	r2, [r3, #4]
    hadc->Instance->CR1 |=  ADC_CR1_DISCONTINUOUS(hadc->Init.NbrOfDiscConversion);
 80024c4:	687b      	ldr	r3, [r7, #4]
 80024c6:	681b      	ldr	r3, [r3, #0]
 80024c8:	6859      	ldr	r1, [r3, #4]
 80024ca:	687b      	ldr	r3, [r7, #4]
 80024cc:	6a5b      	ldr	r3, [r3, #36]	@ 0x24
 80024ce:	3b01      	subs	r3, #1
 80024d0:	035a      	lsls	r2, r3, #13
 80024d2:	687b      	ldr	r3, [r7, #4]
 80024d4:	681b      	ldr	r3, [r3, #0]
 80024d6:	430a      	orrs	r2, r1
 80024d8:	605a      	str	r2, [r3, #4]
 80024da:	e007      	b.n	80024ec <ADC_Init+0x174>
  }
  else
  {
    /* Disable the selected ADC regular discontinuous mode */
    hadc->Instance->CR1 &= ~(ADC_CR1_DISCEN);
 80024dc:	687b      	ldr	r3, [r7, #4]
 80024de:	681b      	ldr	r3, [r3, #0]
 80024e0:	685a      	ldr	r2, [r3, #4]
 80024e2:	687b      	ldr	r3, [r7, #4]
 80024e4:	681b      	ldr	r3, [r3, #0]
 80024e6:	f422 6200 	bic.w	r2, r2, #2048	@ 0x800
 80024ea:	605a      	str	r2, [r3, #4]
  }

  /* Set ADC number of conversion */
  hadc->Instance->SQR1 &= ~(ADC_SQR1_L);
 80024ec:	687b      	ldr	r3, [r7, #4]
 80024ee:	681b      	ldr	r3, [r3, #0]
 80024f0:	6ada      	ldr	r2, [r3, #44]	@ 0x2c
 80024f2:	687b      	ldr	r3, [r7, #4]
 80024f4:	681b      	ldr	r3, [r3, #0]
 80024f6:	f422 0270 	bic.w	r2, r2, #15728640	@ 0xf00000
 80024fa:	62da      	str	r2, [r3, #44]	@ 0x2c
  hadc->Instance->SQR1 |=  ADC_SQR1(hadc->Init.NbrOfConversion);
 80024fc:	687b      	ldr	r3, [r7, #4]
 80024fe:	681b      	ldr	r3, [r3, #0]
 8002500:	6ad9      	ldr	r1, [r3, #44]	@ 0x2c
 8002502:	687b      	ldr	r3, [r7, #4]
 8002504:	69db      	ldr	r3, [r3, #28]
 8002506:	3b01      	subs	r3, #1
 8002508:	051a      	lsls	r2, r3, #20
 800250a:	687b      	ldr	r3, [r7, #4]
 800250c:	681b      	ldr	r3, [r3, #0]
 800250e:	430a      	orrs	r2, r1
 8002510:	62da      	str	r2, [r3, #44]	@ 0x2c

  /* Enable or disable ADC DMA continuous request */
  hadc->Instance->CR2 &= ~(ADC_CR2_DDS);
 8002512:	687b      	ldr	r3, [r7, #4]
 8002514:	681b      	ldr	r3, [r3, #0]
 8002516:	689a      	ldr	r2, [r3, #8]
 8002518:	687b      	ldr	r3, [r7, #4]
 800251a:	681b      	ldr	r3, [r3, #0]
 800251c:	f422 7200 	bic.w	r2, r2, #512	@ 0x200
 8002520:	609a      	str	r2, [r3, #8]
  hadc->Instance->CR2 |= ADC_CR2_DMAContReq((uint32_t)hadc->Init.DMAContinuousRequests);
 8002522:	687b      	ldr	r3, [r7, #4]
 8002524:	681b      	ldr	r3, [r3, #0]
 8002526:	6899      	ldr	r1, [r3, #8]
 8002528:	687b      	ldr	r3, [r7, #4]
 800252a:	f893 3030 	ldrb.w	r3, [r3, #48]	@ 0x30
 800252e:	025a      	lsls	r2, r3, #9
 8002530:	687b      	ldr	r3, [r7, #4]
 8002532:	681b      	ldr	r3, [r3, #0]
 8002534:	430a      	orrs	r2, r1
 8002536:	609a      	str	r2, [r3, #8]

  /* Enable or disable ADC end of conversion selection */
  hadc->Instance->CR2 &= ~(ADC_CR2_EOCS);
 8002538:	687b      	ldr	r3, [r7, #4]
 800253a:	681b      	ldr	r3, [r3, #0]
 800253c:	689a      	ldr	r2, [r3, #8]
 800253e:	687b      	ldr	r3, [r7, #4]
 8002540:	681b      	ldr	r3, [r3, #0]
 8002542:	f422 6280 	bic.w	r2, r2, #1024	@ 0x400
 8002546:	609a      	str	r2, [r3, #8]
  hadc->Instance->CR2 |= ADC_CR2_EOCSelection(hadc->Init.EOCSelection);
 8002548:	687b      	ldr	r3, [r7, #4]
 800254a:	681b      	ldr	r3, [r3, #0]
 800254c:	6899      	ldr	r1, [r3, #8]
 800254e:	687b      	ldr	r3, [r7, #4]
 8002550:	695b      	ldr	r3, [r3, #20]
 8002552:	029a      	lsls	r2, r3, #10
 8002554:	687b      	ldr	r3, [r7, #4]
 8002556:	681b      	ldr	r3, [r3, #0]
 8002558:	430a      	orrs	r2, r1
 800255a:	609a      	str	r2, [r3, #8]
}
 800255c:	bf00      	nop
 800255e:	3714      	adds	r7, #20
 8002560:	46bd      	mov	sp, r7
 8002562:	f85d 7b04 	ldr.w	r7, [sp], #4
 8002566:	4770      	bx	lr
 8002568:	40012300 	.word	0x40012300
 800256c:	0f000001 	.word	0x0f000001

08002570 <ADC_DMAConvCplt>:
  * @param  hdma pointer to a DMA_HandleTypeDef structure that contains
  *                the configuration information for the specified DMA module.
  * @retval None
  */
static void ADC_DMAConvCplt(DMA_HandleTypeDef *hdma)
{
 8002570:	b580      	push	{r7, lr}
 8002572:	b084      	sub	sp, #16
 8002574:	af00      	add	r7, sp, #0
 8002576:	6078      	str	r0, [r7, #4]
  /* Retrieve ADC handle corresponding to current DMA handle */
  ADC_HandleTypeDef *hadc = (ADC_HandleTypeDef *)((DMA_HandleTypeDef *)hdma)->Parent;
 8002578:	687b      	ldr	r3, [r7, #4]
 800257a:	6b9b      	ldr	r3, [r3, #56]	@ 0x38
 800257c:	60fb      	str	r3, [r7, #12]

  /* Update state machine on conversion status if not in error state */
  if (HAL_IS_BIT_CLR(hadc->State, HAL_ADC_STATE_ERROR_INTERNAL | HAL_ADC_STATE_ERROR_DMA))
 800257e:	68fb      	ldr	r3, [r7, #12]
 8002580:	6c1b      	ldr	r3, [r3, #64]	@ 0x40
 8002582:	f003 0350 	and.w	r3, r3, #80	@ 0x50
 8002586:	2b00      	cmp	r3, #0
 8002588:	d13c      	bne.n	8002604 <ADC_DMAConvCplt+0x94>
  {
    /* Update ADC state machine */
    SET_BIT(hadc->State, HAL_ADC_STATE_REG_EOC);
 800258a:	68fb      	ldr	r3, [r7, #12]
 800258c:	6c1b      	ldr	r3, [r3, #64]	@ 0x40
 800258e:	f443 7200 	orr.w	r2, r3, #512	@ 0x200
 8002592:	68fb      	ldr	r3, [r7, #12]
 8002594:	641a      	str	r2, [r3, #64]	@ 0x40
    /* by external trigger, continuous mode or scan sequence on going.      */
    /* Note: On STM32F4, there is no independent flag of end of sequence.   */
    /*       The test of scan sequence on going is done either with scan    */
    /*       sequence disabled or with end of conversion flag set to        */
    /*       of end of sequence.                                            */
    if (ADC_IS_SOFTWARE_START_REGULAR(hadc)                   &&
 8002596:	68fb      	ldr	r3, [r7, #12]
 8002598:	681b      	ldr	r3, [r3, #0]
 800259a:	689b      	ldr	r3, [r3, #8]
 800259c:	f003 5340 	and.w	r3, r3, #805306368	@ 0x30000000
 80025a0:	2b00      	cmp	r3, #0
 80025a2:	d12b      	bne.n	80025fc <ADC_DMAConvCplt+0x8c>
        (hadc->Init.ContinuousConvMode == DISABLE)            &&
 80025a4:	68fb      	ldr	r3, [r7, #12]
 80025a6:	7e1b      	ldrb	r3, [r3, #24]
    if (ADC_IS_SOFTWARE_START_REGULAR(hadc)                   &&
 80025a8:	2b00      	cmp	r3, #0
 80025aa:	d127      	bne.n	80025fc <ADC_DMAConvCplt+0x8c>
        (HAL_IS_BIT_CLR(hadc->Instance->SQR1, ADC_SQR1_L) ||
 80025ac:	68fb      	ldr	r3, [r7, #12]
 80025ae:	681b      	ldr	r3, [r3, #0]
 80025b0:	6adb      	ldr	r3, [r3, #44]	@ 0x2c
 80025b2:	f403 0370 	and.w	r3, r3, #15728640	@ 0xf00000
        (hadc->Init.ContinuousConvMode == DISABLE)            &&
 80025b6:	2b00      	cmp	r3, #0
 80025b8:	d006      	beq.n	80025c8 <ADC_DMAConvCplt+0x58>
         HAL_IS_BIT_CLR(hadc->Instance->CR2, ADC_CR2_EOCS)))
 80025ba:	68fb      	ldr	r3, [r7, #12]
 80025bc:	681b      	ldr	r3, [r3, #0]
 80025be:	689b      	ldr	r3, [r3, #8]
 80025c0:	f403 6380 	and.w	r3, r3, #1024	@ 0x400
        (HAL_IS_BIT_CLR(hadc->Instance->SQR1, ADC_SQR1_L) ||
 80025c4:	2b00      	cmp	r3, #0
 80025c6:	d119      	bne.n	80025fc <ADC_DMAConvCplt+0x8c>
    {
      /* Disable ADC end of single conversion interrupt on group regular */
      /* Note: Overrun interrupt was enabled with EOC interrupt in          */
      /* HAL_ADC_Start_IT(), but is not disabled here because can be used   */
      /* by overrun IRQ process below.                                      */
      __HAL_ADC_DISABLE_IT(hadc, ADC_IT_EOC);
 80025c8:	68fb      	ldr	r3, [r7, #12]
 80025ca:	681b      	ldr	r3, [r3, #0]
 80025cc:	685a      	ldr	r2, [r3, #4]
 80025ce:	68fb      	ldr	r3, [r7, #12]
 80025d0:	681b      	ldr	r3, [r3, #0]
 80025d2:	f022 0220 	bic.w	r2, r2, #32
 80025d6:	605a      	str	r2, [r3, #4]

      /* Set ADC state */
      CLEAR_BIT(hadc->State, HAL_ADC_STATE_REG_BUSY);
 80025d8:	68fb      	ldr	r3, [r7, #12]
 80025da:	6c1b      	ldr	r3, [r3, #64]	@ 0x40
 80025dc:	f423 7280 	bic.w	r2, r3, #256	@ 0x100
 80025e0:	68fb      	ldr	r3, [r7, #12]
 80025e2:	641a      	str	r2, [r3, #64]	@ 0x40

      if (HAL_IS_BIT_CLR(hadc->State, HAL_ADC_STATE_INJ_BUSY))
 80025e4:	68fb      	ldr	r3, [r7, #12]
 80025e6:	6c1b      	ldr	r3, [r3, #64]	@ 0x40
 80025e8:	f403 5380 	and.w	r3, r3, #4096	@ 0x1000
 80025ec:	2b00      	cmp	r3, #0
 80025ee:	d105      	bne.n	80025fc <ADC_DMAConvCplt+0x8c>
      {
        SET_BIT(hadc->State, HAL_ADC_STATE_READY);
 80025f0:	68fb      	ldr	r3, [r7, #12]
 80025f2:	6c1b      	ldr	r3, [r3, #64]	@ 0x40
 80025f4:	f043 0201 	orr.w	r2, r3, #1
 80025f8:	68fb      	ldr	r3, [r7, #12]
 80025fa:	641a      	str	r2, [r3, #64]	@ 0x40

    /* Conversion complete callback */
#if (USE_HAL_ADC_REGISTER_CALLBACKS == 1)
    hadc->ConvCpltCallback(hadc);
#else
    HAL_ADC_ConvCpltCallback(hadc);
 80025fc:	68f8      	ldr	r0, [r7, #12]
 80025fe:	f7ff fd6b 	bl	80020d8 <HAL_ADC_ConvCpltCallback>
    {
      /* Call DMA error callback */
      hadc->DMA_Handle->XferErrorCallback(hdma);
    }
  }
}
 8002602:	e00e      	b.n	8002622 <ADC_DMAConvCplt+0xb2>
    if ((hadc->State & HAL_ADC_STATE_ERROR_INTERNAL) != 0UL)
 8002604:	68fb      	ldr	r3, [r7, #12]
 8002606:	6c1b      	ldr	r3, [r3, #64]	@ 0x40
 8002608:	f003 0310 	and.w	r3, r3, #16
 800260c:	2b00      	cmp	r3, #0
 800260e:	d003      	beq.n	8002618 <ADC_DMAConvCplt+0xa8>
      HAL_ADC_ErrorCallback(hadc);
 8002610:	68f8      	ldr	r0, [r7, #12]
 8002612:	f7ff fd75 	bl	8002100 <HAL_ADC_ErrorCallback>
}
 8002616:	e004      	b.n	8002622 <ADC_DMAConvCplt+0xb2>
      hadc->DMA_Handle->XferErrorCallback(hdma);
 8002618:	68fb      	ldr	r3, [r7, #12]
 800261a:	6b9b      	ldr	r3, [r3, #56]	@ 0x38
 800261c:	6cdb      	ldr	r3, [r3, #76]	@ 0x4c
 800261e:	6878      	ldr	r0, [r7, #4]
 8002620:	4798      	blx	r3
}
 8002622:	bf00      	nop
 8002624:	3710      	adds	r7, #16
 8002626:	46bd      	mov	sp, r7
 8002628:	bd80      	pop	{r7, pc}

0800262a <ADC_DMAHalfConvCplt>:
  * @param  hdma pointer to a DMA_HandleTypeDef structure that contains
  *                the configuration information for the specified DMA module.
  * @retval None
  */
static void ADC_DMAHalfConvCplt(DMA_HandleTypeDef *hdma)
{
 800262a:	b580      	push	{r7, lr}
 800262c:	b084      	sub	sp, #16
 800262e:	af00      	add	r7, sp, #0
 8002630:	6078      	str	r0, [r7, #4]
  ADC_HandleTypeDef *hadc = (ADC_HandleTypeDef *)((DMA_HandleTypeDef *)hdma)->Parent;
 8002632:	687b      	ldr	r3, [r7, #4]
 8002634:	6b9b      	ldr	r3, [r3, #56]	@ 0x38
 8002636:	60fb      	str	r3, [r7, #12]
  /* Half conversion callback */
#if (USE_HAL_ADC_REGISTER_CALLBACKS == 1)
  hadc->ConvHalfCpltCallback(hadc);
#else
  HAL_ADC_ConvHalfCpltCallback(hadc);
 8002638:	68f8      	ldr	r0, [r7, #12]
 800263a:	f7ff fd57 	bl	80020ec <HAL_ADC_ConvHalfCpltCallback>
#endif /* USE_HAL_ADC_REGISTER_CALLBACKS */
}
 800263e:	bf00      	nop
 8002640:	3710      	adds	r7, #16
 8002642:	46bd      	mov	sp, r7
 8002644:	bd80      	pop	{r7, pc}

08002646 <ADC_DMAError>:
  * @param  hdma pointer to a DMA_HandleTypeDef structure that contains
  *                the configuration information for the specified DMA module.
  * @retval None
  */
static void ADC_DMAError(DMA_HandleTypeDef *hdma)
{
 8002646:	b580      	push	{r7, lr}
 8002648:	b084      	sub	sp, #16
 800264a:	af00      	add	r7, sp, #0
 800264c:	6078      	str	r0, [r7, #4]
  ADC_HandleTypeDef *hadc = (ADC_HandleTypeDef *)((DMA_HandleTypeDef *)hdma)->Parent;
 800264e:	687b      	ldr	r3, [r7, #4]
 8002650:	6b9b      	ldr	r3, [r3, #56]	@ 0x38
 8002652:	60fb      	str	r3, [r7, #12]
  hadc->State = HAL_ADC_STATE_ERROR_DMA;
 8002654:	68fb      	ldr	r3, [r7, #12]
 8002656:	2240      	movs	r2, #64	@ 0x40
 8002658:	641a      	str	r2, [r3, #64]	@ 0x40
  /* Set ADC error code to DMA error */
  hadc->ErrorCode |= HAL_ADC_ERROR_DMA;
 800265a:	68fb      	ldr	r3, [r7, #12]
 800265c:	6c5b      	ldr	r3, [r3, #68]	@ 0x44
 800265e:	f043 0204 	orr.w	r2, r3, #4
 8002662:	68fb      	ldr	r3, [r7, #12]
 8002664:	645a      	str	r2, [r3, #68]	@ 0x44
  /* Error callback */
#if (USE_HAL_ADC_REGISTER_CALLBACKS == 1)
  hadc->ErrorCallback(hadc);
#else
  HAL_ADC_ErrorCallback(hadc);
 8002666:	68f8      	ldr	r0, [r7, #12]
 8002668:	f7ff fd4a 	bl	8002100 <HAL_ADC_ErrorCallback>
#endif /* USE_HAL_ADC_REGISTER_CALLBACKS */
}
 800266c:	bf00      	nop
 800266e:	3710      	adds	r7, #16
 8002670:	46bd      	mov	sp, r7
 8002672:	bd80      	pop	{r7, pc}

08002674 <__NVIC_SetPriorityGrouping>:
           In case of a conflict between priority grouping and available
           priority bits (__NVIC_PRIO_BITS), the smallest possible priority group is set.
  \param [in]      PriorityGroup  Priority grouping field.
 */
__STATIC_INLINE void __NVIC_SetPriorityGrouping(uint32_t PriorityGroup)
{
 8002674:	b480      	push	{r7}
 8002676:	b085      	sub	sp, #20
 8002678:	af00      	add	r7, sp, #0
 800267a:	6078      	str	r0, [r7, #4]
  uint32_t reg_value;
  uint32_t PriorityGroupTmp = (PriorityGroup & (uint32_t)0x07UL);             /* only values 0..7 are used          */
 800267c:	687b      	ldr	r3, [r7, #4]
 800267e:	f003 0307 	and.w	r3, r3, #7
 8002682:	60fb      	str	r3, [r7, #12]

  reg_value  =  SCB->AIRCR;                                                   /* read old register configuration    */
 8002684:	4b0c      	ldr	r3, [pc, #48]	@ (80026b8 <__NVIC_SetPriorityGrouping+0x44>)
 8002686:	68db      	ldr	r3, [r3, #12]
 8002688:	60bb      	str	r3, [r7, #8]
  reg_value &= ~((uint32_t)(SCB_AIRCR_VECTKEY_Msk | SCB_AIRCR_PRIGROUP_Msk)); /* clear bits to change               */
 800268a:	68ba      	ldr	r2, [r7, #8]
 800268c:	f64f 03ff 	movw	r3, #63743	@ 0xf8ff
 8002690:	4013      	ands	r3, r2
 8002692:	60bb      	str	r3, [r7, #8]
  reg_value  =  (reg_value                                   |
                ((uint32_t)0x5FAUL << SCB_AIRCR_VECTKEY_Pos) |
                (PriorityGroupTmp << SCB_AIRCR_PRIGROUP_Pos)  );              /* Insert write key and priority group */
 8002694:	68fb      	ldr	r3, [r7, #12]
 8002696:	021a      	lsls	r2, r3, #8
                ((uint32_t)0x5FAUL << SCB_AIRCR_VECTKEY_Pos) |
 8002698:	68bb      	ldr	r3, [r7, #8]
 800269a:	4313      	orrs	r3, r2
  reg_value  =  (reg_value                                   |
 800269c:	f043 63bf 	orr.w	r3, r3, #100139008	@ 0x5f80000
 80026a0:	f443 3300 	orr.w	r3, r3, #131072	@ 0x20000
 80026a4:	60bb      	str	r3, [r7, #8]
  SCB->AIRCR =  reg_value;
 80026a6:	4a04      	ldr	r2, [pc, #16]	@ (80026b8 <__NVIC_SetPriorityGrouping+0x44>)
 80026a8:	68bb      	ldr	r3, [r7, #8]
 80026aa:	60d3      	str	r3, [r2, #12]
}
 80026ac:	bf00      	nop
 80026ae:	3714      	adds	r7, #20
 80026b0:	46bd      	mov	sp, r7
 80026b2:	f85d 7b04 	ldr.w	r7, [sp], #4
 80026b6:	4770      	bx	lr
 80026b8:	e000ed00 	.word	0xe000ed00

080026bc <__NVIC_GetPriorityGrouping>:
  \brief   Get Priority Grouping
  \details Reads the priority grouping field from the NVIC Interrupt Controller.
  \return                Priority grouping field (SCB->AIRCR [10:8] PRIGROUP field).
 */
__STATIC_INLINE uint32_t __NVIC_GetPriorityGrouping(void)
{
 80026bc:	b480      	push	{r7}
 80026be:	af00      	add	r7, sp, #0
  return ((uint32_t)((SCB->AIRCR & SCB_AIRCR_PRIGROUP_Msk) >> SCB_AIRCR_PRIGROUP_Pos));
 80026c0:	4b04      	ldr	r3, [pc, #16]	@ (80026d4 <__NVIC_GetPriorityGrouping+0x18>)
 80026c2:	68db      	ldr	r3, [r3, #12]
 80026c4:	0a1b      	lsrs	r3, r3, #8
 80026c6:	f003 0307 	and.w	r3, r3, #7
}
 80026ca:	4618      	mov	r0, r3
 80026cc:	46bd      	mov	sp, r7
 80026ce:	f85d 7b04 	ldr.w	r7, [sp], #4
 80026d2:	4770      	bx	lr
 80026d4:	e000ed00 	.word	0xe000ed00

080026d8 <__NVIC_EnableIRQ>:
  \details Enables a device specific interrupt in the NVIC interrupt controller.
  \param [in]      IRQn  Device specific interrupt number.
  \note    IRQn must not be negative.
 */
__STATIC_INLINE void __NVIC_EnableIRQ(IRQn_Type IRQn)
{
 80026d8:	b480      	push	{r7}
 80026da:	b083      	sub	sp, #12
 80026dc:	af00      	add	r7, sp, #0
 80026de:	4603      	mov	r3, r0
 80026e0:	71fb      	strb	r3, [r7, #7]
  if ((int32_t)(IRQn) >= 0)
 80026e2:	f997 3007 	ldrsb.w	r3, [r7, #7]
 80026e6:	2b00      	cmp	r3, #0
 80026e8:	db0b      	blt.n	8002702 <__NVIC_EnableIRQ+0x2a>
  {
    __COMPILER_BARRIER();
    NVIC->ISER[(((uint32_t)IRQn) >> 5UL)] = (uint32_t)(1UL << (((uint32_t)IRQn) & 0x1FUL));
 80026ea:	79fb      	ldrb	r3, [r7, #7]
 80026ec:	f003 021f 	and.w	r2, r3, #31
 80026f0:	4907      	ldr	r1, [pc, #28]	@ (8002710 <__NVIC_EnableIRQ+0x38>)
 80026f2:	f997 3007 	ldrsb.w	r3, [r7, #7]
 80026f6:	095b      	lsrs	r3, r3, #5
 80026f8:	2001      	movs	r0, #1
 80026fa:	fa00 f202 	lsl.w	r2, r0, r2
 80026fe:	f841 2023 	str.w	r2, [r1, r3, lsl #2]
    __COMPILER_BARRIER();
  }
}
 8002702:	bf00      	nop
 8002704:	370c      	adds	r7, #12
 8002706:	46bd      	mov	sp, r7
 8002708:	f85d 7b04 	ldr.w	r7, [sp], #4
 800270c:	4770      	bx	lr
 800270e:	bf00      	nop
 8002710:	e000e100 	.word	0xe000e100

08002714 <__NVIC_DisableIRQ>:
  \details Disables a device specific interrupt in the NVIC interrupt controller.
  \param [in]      IRQn  Device specific interrupt number.
  \note    IRQn must not be negative.
 */
__STATIC_INLINE void __NVIC_DisableIRQ(IRQn_Type IRQn)
{
 8002714:	b480      	push	{r7}
 8002716:	b083      	sub	sp, #12
 8002718:	af00      	add	r7, sp, #0
 800271a:	4603      	mov	r3, r0
 800271c:	71fb      	strb	r3, [r7, #7]
  if ((int32_t)(IRQn) >= 0)
 800271e:	f997 3007 	ldrsb.w	r3, [r7, #7]
 8002722:	2b00      	cmp	r3, #0
 8002724:	db12      	blt.n	800274c <__NVIC_DisableIRQ+0x38>
  {
    NVIC->ICER[(((uint32_t)IRQn) >> 5UL)] = (uint32_t)(1UL << (((uint32_t)IRQn) & 0x1FUL));
 8002726:	79fb      	ldrb	r3, [r7, #7]
 8002728:	f003 021f 	and.w	r2, r3, #31
 800272c:	490a      	ldr	r1, [pc, #40]	@ (8002758 <__NVIC_DisableIRQ+0x44>)
 800272e:	f997 3007 	ldrsb.w	r3, [r7, #7]
 8002732:	095b      	lsrs	r3, r3, #5
 8002734:	2001      	movs	r0, #1
 8002736:	fa00 f202 	lsl.w	r2, r0, r2
 800273a:	3320      	adds	r3, #32
 800273c:	f841 2023 	str.w	r2, [r1, r3, lsl #2]
  __ASM volatile ("dsb 0xF":::"memory");
 8002740:	f3bf 8f4f 	dsb	sy
}
 8002744:	bf00      	nop
  __ASM volatile ("isb 0xF":::"memory");
 8002746:	f3bf 8f6f 	isb	sy
}
 800274a:	bf00      	nop
    __DSB();
    __ISB();
  }
}
 800274c:	bf00      	nop
 800274e:	370c      	adds	r7, #12
 8002750:	46bd      	mov	sp, r7
 8002752:	f85d 7b04 	ldr.w	r7, [sp], #4
 8002756:	4770      	bx	lr
 8002758:	e000e100 	.word	0xe000e100

0800275c <__NVIC_ClearPendingIRQ>:
  \details Clears the pending bit of a device specific interrupt in the NVIC pending register.
  \param [in]      IRQn  Device specific interrupt number.
  \note    IRQn must not be negative.
 */
__STATIC_INLINE void __NVIC_ClearPendingIRQ(IRQn_Type IRQn)
{
 800275c:	b480      	push	{r7}
 800275e:	b083      	sub	sp, #12
 8002760:	af00      	add	r7, sp, #0
 8002762:	4603      	mov	r3, r0
 8002764:	71fb      	strb	r3, [r7, #7]
  if ((int32_t)(IRQn) >= 0)
 8002766:	f997 3007 	ldrsb.w	r3, [r7, #7]
 800276a:	2b00      	cmp	r3, #0
 800276c:	db0c      	blt.n	8002788 <__NVIC_ClearPendingIRQ+0x2c>
  {
    NVIC->ICPR[(((uint32_t)IRQn) >> 5UL)] = (uint32_t)(1UL << (((uint32_t)IRQn) & 0x1FUL));
 800276e:	79fb      	ldrb	r3, [r7, #7]
 8002770:	f003 021f 	and.w	r2, r3, #31
 8002774:	4907      	ldr	r1, [pc, #28]	@ (8002794 <__NVIC_ClearPendingIRQ+0x38>)
 8002776:	f997 3007 	ldrsb.w	r3, [r7, #7]
 800277a:	095b      	lsrs	r3, r3, #5
 800277c:	2001      	movs	r0, #1
 800277e:	fa00 f202 	lsl.w	r2, r0, r2
 8002782:	3360      	adds	r3, #96	@ 0x60
 8002784:	f841 2023 	str.w	r2, [r1, r3, lsl #2]
  }
}
 8002788:	bf00      	nop
 800278a:	370c      	adds	r7, #12
 800278c:	46bd      	mov	sp, r7
 800278e:	f85d 7b04 	ldr.w	r7, [sp], #4
 8002792:	4770      	bx	lr
 8002794:	e000e100 	.word	0xe000e100

08002798 <__NVIC_SetPriority>:
  \param [in]      IRQn  Interrupt number.
  \param [in]  priority  Priority to set.
  \note    The priority cannot be set for every processor exception.
 */
__STATIC_INLINE void __NVIC_SetPriority(IRQn_Type IRQn, uint32_t priority)
{
 8002798:	b480      	push	{r7}
 800279a:	b083      	sub	sp, #12
 800279c:	af00      	add	r7, sp, #0
 800279e:	4603      	mov	r3, r0
 80027a0:	6039      	str	r1, [r7, #0]
 80027a2:	71fb      	strb	r3, [r7, #7]
  if ((int32_t)(IRQn) >= 0)
 80027a4:	f997 3007 	ldrsb.w	r3, [r7, #7]
 80027a8:	2b00      	cmp	r3, #0
 80027aa:	db0a      	blt.n	80027c2 <__NVIC_SetPriority+0x2a>
  {
    NVIC->IP[((uint32_t)IRQn)]               = (uint8_t)((priority << (8U - __NVIC_PRIO_BITS)) & (uint32_t)0xFFUL);
 80027ac:	683b      	ldr	r3, [r7, #0]
 80027ae:	b2da      	uxtb	r2, r3
 80027b0:	490c      	ldr	r1, [pc, #48]	@ (80027e4 <__NVIC_SetPriority+0x4c>)
 80027b2:	f997 3007 	ldrsb.w	r3, [r7, #7]
 80027b6:	0112      	lsls	r2, r2, #4
 80027b8:	b2d2      	uxtb	r2, r2
 80027ba:	440b      	add	r3, r1
 80027bc:	f883 2300 	strb.w	r2, [r3, #768]	@ 0x300
  }
  else
  {
    SCB->SHP[(((uint32_t)IRQn) & 0xFUL)-4UL] = (uint8_t)((priority << (8U - __NVIC_PRIO_BITS)) & (uint32_t)0xFFUL);
  }
}
 80027c0:	e00a      	b.n	80027d8 <__NVIC_SetPriority+0x40>
    SCB->SHP[(((uint32_t)IRQn) & 0xFUL)-4UL] = (uint8_t)((priority << (8U - __NVIC_PRIO_BITS)) & (uint32_t)0xFFUL);
 80027c2:	683b      	ldr	r3, [r7, #0]
 80027c4:	b2da      	uxtb	r2, r3
 80027c6:	4908      	ldr	r1, [pc, #32]	@ (80027e8 <__NVIC_SetPriority+0x50>)
 80027c8:	79fb      	ldrb	r3, [r7, #7]
 80027ca:	f003 030f 	and.w	r3, r3, #15
 80027ce:	3b04      	subs	r3, #4
 80027d0:	0112      	lsls	r2, r2, #4
 80027d2:	b2d2      	uxtb	r2, r2
 80027d4:	440b      	add	r3, r1
 80027d6:	761a      	strb	r2, [r3, #24]
}
 80027d8:	bf00      	nop
 80027da:	370c      	adds	r7, #12
 80027dc:	46bd      	mov	sp, r7
 80027de:	f85d 7b04 	ldr.w	r7, [sp], #4
 80027e2:	4770      	bx	lr
 80027e4:	e000e100 	.word	0xe000e100
 80027e8:	e000ed00 	.word	0xe000ed00

080027ec <NVIC_EncodePriority>:
  \param [in]   PreemptPriority  Preemptive priority value (starting from 0).
  \param [in]       SubPriority  Subpriority value (starting from 0).
  \return                        Encoded priority. Value can be used in the function \ref NVIC_SetPriority().
 */
__STATIC_INLINE uint32_t NVIC_EncodePriority (uint32_t PriorityGroup, uint32_t PreemptPriority, uint32_t SubPriority)
{
 80027ec:	b480      	push	{r7}
 80027ee:	b089      	sub	sp, #36	@ 0x24
 80027f0:	af00      	add	r7, sp, #0
 80027f2:	60f8      	str	r0, [r7, #12]
 80027f4:	60b9      	str	r1, [r7, #8]
 80027f6:	607a      	str	r2, [r7, #4]
  uint32_t PriorityGroupTmp = (PriorityGroup & (uint32_t)0x07UL);   /* only values 0..7 are used          */
 80027f8:	68fb      	ldr	r3, [r7, #12]
 80027fa:	f003 0307 	and.w	r3, r3, #7
 80027fe:	61fb      	str	r3, [r7, #28]
  uint32_t PreemptPriorityBits;
  uint32_t SubPriorityBits;

  PreemptPriorityBits = ((7UL - PriorityGroupTmp) > (uint32_t)(__NVIC_PRIO_BITS)) ? (uint32_t)(__NVIC_PRIO_BITS) : (uint32_t)(7UL - PriorityGroupTmp);
 8002800:	69fb      	ldr	r3, [r7, #28]
 8002802:	f1c3 0307 	rsb	r3, r3, #7
 8002806:	2b04      	cmp	r3, #4
 8002808:	bf28      	it	cs
 800280a:	2304      	movcs	r3, #4
 800280c:	61bb      	str	r3, [r7, #24]
  SubPriorityBits     = ((PriorityGroupTmp + (uint32_t)(__NVIC_PRIO_BITS)) < (uint32_t)7UL) ? (uint32_t)0UL : (uint32_t)((PriorityGroupTmp - 7UL) + (uint32_t)(__NVIC_PRIO_BITS));
 800280e:	69fb      	ldr	r3, [r7, #28]
 8002810:	3304      	adds	r3, #4
 8002812:	2b06      	cmp	r3, #6
 8002814:	d902      	bls.n	800281c <NVIC_EncodePriority+0x30>
 8002816:	69fb      	ldr	r3, [r7, #28]
 8002818:	3b03      	subs	r3, #3
 800281a:	e000      	b.n	800281e <NVIC_EncodePriority+0x32>
 800281c:	2300      	movs	r3, #0
 800281e:	617b      	str	r3, [r7, #20]

  return (
           ((PreemptPriority & (uint32_t)((1UL << (PreemptPriorityBits)) - 1UL)) << SubPriorityBits) |
 8002820:	f04f 32ff 	mov.w	r2, #4294967295
 8002824:	69bb      	ldr	r3, [r7, #24]
 8002826:	fa02 f303 	lsl.w	r3, r2, r3
 800282a:	43da      	mvns	r2, r3
 800282c:	68bb      	ldr	r3, [r7, #8]
 800282e:	401a      	ands	r2, r3
 8002830:	697b      	ldr	r3, [r7, #20]
 8002832:	409a      	lsls	r2, r3
           ((SubPriority     & (uint32_t)((1UL << (SubPriorityBits    )) - 1UL)))
 8002834:	f04f 31ff 	mov.w	r1, #4294967295
 8002838:	697b      	ldr	r3, [r7, #20]
 800283a:	fa01 f303 	lsl.w	r3, r1, r3
 800283e:	43d9      	mvns	r1, r3
 8002840:	687b      	ldr	r3, [r7, #4]
 8002842:	400b      	ands	r3, r1
           ((PreemptPriority & (uint32_t)((1UL << (PreemptPriorityBits)) - 1UL)) << SubPriorityBits) |
 8002844:	4313      	orrs	r3, r2
         );
}
 8002846:	4618      	mov	r0, r3
 8002848:	3724      	adds	r7, #36	@ 0x24
 800284a:	46bd      	mov	sp, r7
 800284c:	f85d 7b04 	ldr.w	r7, [sp], #4
 8002850:	4770      	bx	lr
	...

08002854 <SysTick_Config>:
  \note    When the variable <b>__Vendor_SysTickConfig</b> is set to 1, then the
           function <b>SysTick_Config</b> is not included. In this case, the file <b><i>device</i>.h</b>
           must contain a vendor-specific implementation of this function.
 */
__STATIC_INLINE uint32_t SysTick_Config(uint32_t ticks)
{
 8002854:	b580      	push	{r7, lr}
 8002856:	b082      	sub	sp, #8
 8002858:	af00      	add	r7, sp, #0
 800285a:	6078      	str	r0, [r7, #4]
  if ((ticks - 1UL) > SysTick_LOAD_RELOAD_Msk)
 800285c:	687b      	ldr	r3, [r7, #4]
 800285e:	3b01      	subs	r3, #1
 8002860:	f1b3 7f80 	cmp.w	r3, #16777216	@ 0x1000000
 8002864:	d301      	bcc.n	800286a <SysTick_Config+0x16>
  {
    return (1UL);                                                   /* Reload value impossible */
 8002866:	2301      	movs	r3, #1
 8002868:	e00f      	b.n	800288a <SysTick_Config+0x36>
  }

  SysTick->LOAD  = (uint32_t)(ticks - 1UL);                         /* set reload register */
 800286a:	4a0a      	ldr	r2, [pc, #40]	@ (8002894 <SysTick_Config+0x40>)
 800286c:	687b      	ldr	r3, [r7, #4]
 800286e:	3b01      	subs	r3, #1
 8002870:	6053      	str	r3, [r2, #4]
  NVIC_SetPriority (SysTick_IRQn, (1UL << __NVIC_PRIO_BITS) - 1UL); /* set Priority for Systick Interrupt */
 8002872:	210f      	movs	r1, #15
 8002874:	f04f 30ff 	mov.w	r0, #4294967295
 8002878:	f7ff ff8e 	bl	8002798 <__NVIC_SetPriority>
  SysTick->VAL   = 0UL;                                             /* Load the SysTick Counter Value */
 800287c:	4b05      	ldr	r3, [pc, #20]	@ (8002894 <SysTick_Config+0x40>)
 800287e:	2200      	movs	r2, #0
 8002880:	609a      	str	r2, [r3, #8]
  SysTick->CTRL  = SysTick_CTRL_CLKSOURCE_Msk |
 8002882:	4b04      	ldr	r3, [pc, #16]	@ (8002894 <SysTick_Config+0x40>)
 8002884:	2207      	movs	r2, #7
 8002886:	601a      	str	r2, [r3, #0]
                   SysTick_CTRL_TICKINT_Msk   |
                   SysTick_CTRL_ENABLE_Msk;                         /* Enable SysTick IRQ and SysTick Timer */
  return (0UL);                                                     /* Function successful */
 8002888:	2300      	movs	r3, #0
}
 800288a:	4618      	mov	r0, r3
 800288c:	3708      	adds	r7, #8
 800288e:	46bd      	mov	sp, r7
 8002890:	bd80      	pop	{r7, pc}
 8002892:	bf00      	nop
 8002894:	e000e010 	.word	0xe000e010

08002898 <HAL_NVIC_SetPriorityGrouping>:
  * @note   When the NVIC_PriorityGroup_0 is selected, IRQ preemption is no more possible. 
  *         The pending IRQ priority will be managed only by the subpriority. 
  * @retval None
  */
void HAL_NVIC_SetPriorityGrouping(uint32_t PriorityGroup)
{
 8002898:	b580      	push	{r7, lr}
 800289a:	b082      	sub	sp, #8
 800289c:	af00      	add	r7, sp, #0
 800289e:	6078      	str	r0, [r7, #4]
  /* Check the parameters */
  assert_param(IS_NVIC_PRIORITY_GROUP(PriorityGroup));
  
  /* Set the PRIGROUP[10:8] bits according to the PriorityGroup parameter value */
  NVIC_SetPriorityGrouping(PriorityGroup);
 80028a0:	6878      	ldr	r0, [r7, #4]
 80028a2:	f7ff fee7 	bl	8002674 <__NVIC_SetPriorityGrouping>
}
 80028a6:	bf00      	nop
 80028a8:	3708      	adds	r7, #8
 80028aa:	46bd      	mov	sp, r7
 80028ac:	bd80      	pop	{r7, pc}

080028ae <HAL_NVIC_SetPriority>:
  *         This parameter can be a value between 0 and 15
  *         A lower priority value indicates a higher priority.          
  * @retval None
  */
void HAL_NVIC_SetPriority(IRQn_Type IRQn, uint32_t PreemptPriority, uint32_t SubPriority)
{ 
 80028ae:	b580      	push	{r7, lr}
 80028b0:	b086      	sub	sp, #24
 80028b2:	af00      	add	r7, sp, #0
 80028b4:	4603      	mov	r3, r0
 80028b6:	60b9      	str	r1, [r7, #8]
 80028b8:	607a      	str	r2, [r7, #4]
 80028ba:	73fb      	strb	r3, [r7, #15]
  uint32_t prioritygroup = 0x00U;
 80028bc:	2300      	movs	r3, #0
 80028be:	617b      	str	r3, [r7, #20]
  
  /* Check the parameters */
  assert_param(IS_NVIC_SUB_PRIORITY(SubPriority));
  assert_param(IS_NVIC_PREEMPTION_PRIORITY(PreemptPriority));
  
  prioritygroup = NVIC_GetPriorityGrouping();
 80028c0:	f7ff fefc 	bl	80026bc <__NVIC_GetPriorityGrouping>
 80028c4:	6178      	str	r0, [r7, #20]
  
  NVIC_SetPriority(IRQn, NVIC_EncodePriority(prioritygroup, PreemptPriority, SubPriority));
 80028c6:	687a      	ldr	r2, [r7, #4]
 80028c8:	68b9      	ldr	r1, [r7, #8]
 80028ca:	6978      	ldr	r0, [r7, #20]
 80028cc:	f7ff ff8e 	bl	80027ec <NVIC_EncodePriority>
 80028d0:	4602      	mov	r2, r0
 80028d2:	f997 300f 	ldrsb.w	r3, [r7, #15]
 80028d6:	4611      	mov	r1, r2
 80028d8:	4618      	mov	r0, r3
 80028da:	f7ff ff5d 	bl	8002798 <__NVIC_SetPriority>
}
 80028de:	bf00      	nop
 80028e0:	3718      	adds	r7, #24
 80028e2:	46bd      	mov	sp, r7
 80028e4:	bd80      	pop	{r7, pc}

080028e6 <HAL_NVIC_EnableIRQ>:
  *         This parameter can be an enumerator of IRQn_Type enumeration
  *         (For the complete STM32 Devices IRQ Channels list, please refer to the appropriate CMSIS device file (stm32f4xxxx.h))
  * @retval None
  */
void HAL_NVIC_EnableIRQ(IRQn_Type IRQn)
{
 80028e6:	b580      	push	{r7, lr}
 80028e8:	b082      	sub	sp, #8
 80028ea:	af00      	add	r7, sp, #0
 80028ec:	4603      	mov	r3, r0
 80028ee:	71fb      	strb	r3, [r7, #7]
  /* Check the parameters */
  assert_param(IS_NVIC_DEVICE_IRQ(IRQn));
  
  /* Enable interrupt */
  NVIC_EnableIRQ(IRQn);
 80028f0:	f997 3007 	ldrsb.w	r3, [r7, #7]
 80028f4:	4618      	mov	r0, r3
 80028f6:	f7ff feef 	bl	80026d8 <__NVIC_EnableIRQ>
}
 80028fa:	bf00      	nop
 80028fc:	3708      	adds	r7, #8
 80028fe:	46bd      	mov	sp, r7
 8002900:	bd80      	pop	{r7, pc}

08002902 <HAL_NVIC_DisableIRQ>:
  *         This parameter can be an enumerator of IRQn_Type enumeration
  *         (For the complete STM32 Devices IRQ Channels list, please refer to the appropriate CMSIS device file (stm32f4xxxx.h))
  * @retval None
  */
void HAL_NVIC_DisableIRQ(IRQn_Type IRQn)
{
 8002902:	b580      	push	{r7, lr}
 8002904:	b082      	sub	sp, #8
 8002906:	af00      	add	r7, sp, #0
 8002908:	4603      	mov	r3, r0
 800290a:	71fb      	strb	r3, [r7, #7]
  /* Check the parameters */
  assert_param(IS_NVIC_DEVICE_IRQ(IRQn));
  
  /* Disable interrupt */
  NVIC_DisableIRQ(IRQn);
 800290c:	f997 3007 	ldrsb.w	r3, [r7, #7]
 8002910:	4618      	mov	r0, r3
 8002912:	f7ff feff 	bl	8002714 <__NVIC_DisableIRQ>
}
 8002916:	bf00      	nop
 8002918:	3708      	adds	r7, #8
 800291a:	46bd      	mov	sp, r7
 800291c:	bd80      	pop	{r7, pc}

0800291e <HAL_SYSTICK_Config>:
  * @param  TicksNumb Specifies the ticks Number of ticks between two interrupts.
  * @retval status:  - 0  Function succeeded.
  *                  - 1  Function failed.
  */
uint32_t HAL_SYSTICK_Config(uint32_t TicksNumb)
{
 800291e:	b580      	push	{r7, lr}
 8002920:	b082      	sub	sp, #8
 8002922:	af00      	add	r7, sp, #0
 8002924:	6078      	str	r0, [r7, #4]
   return SysTick_Config(TicksNumb);
 8002926:	6878      	ldr	r0, [r7, #4]
 8002928:	f7ff ff94 	bl	8002854 <SysTick_Config>
 800292c:	4603      	mov	r3, r0
}
 800292e:	4618      	mov	r0, r3
 8002930:	3708      	adds	r7, #8
 8002932:	46bd      	mov	sp, r7
 8002934:	bd80      	pop	{r7, pc}

08002936 <HAL_NVIC_ClearPendingIRQ>:
  *         This parameter can be an enumerator of IRQn_Type enumeration
  *         (For the complete STM32 Devices IRQ Channels list, please refer to the appropriate CMSIS device file (stm32f4xxxx.h))
  * @retval None
  */
void HAL_NVIC_ClearPendingIRQ(IRQn_Type IRQn)
{
 8002936:	b580      	push	{r7, lr}
 8002938:	b082      	sub	sp, #8
 800293a:	af00      	add	r7, sp, #0
 800293c:	4603      	mov	r3, r0
 800293e:	71fb      	strb	r3, [r7, #7]
  /* Check the parameters */
  assert_param(IS_NVIC_DEVICE_IRQ(IRQn));
  
  /* Clear pending interrupt */
  NVIC_ClearPendingIRQ(IRQn);
 8002940:	f997 3007 	ldrsb.w	r3, [r7, #7]
 8002944:	4618      	mov	r0, r3
 8002946:	f7ff ff09 	bl	800275c <__NVIC_ClearPendingIRQ>
}
 800294a:	bf00      	nop
 800294c:	3708      	adds	r7, #8
 800294e:	46bd      	mov	sp, r7
 8002950:	bd80      	pop	{r7, pc}

08002952 <HAL_CRC_Init>:
  *         parameters in the CRC_InitTypeDef and create the associated handle.
  * @param  hcrc CRC handle
  * @retval HAL status
  */
HAL_StatusTypeDef HAL_CRC_Init(CRC_HandleTypeDef *hcrc)
{
 8002952:	b580      	push	{r7, lr}
 8002954:	b082      	sub	sp, #8
 8002956:	af00      	add	r7, sp, #0
 8002958:	6078      	str	r0, [r7, #4]
  /* Check the CRC handle allocation */
  if (hcrc == NULL)
 800295a:	687b      	ldr	r3, [r7, #4]
 800295c:	2b00      	cmp	r3, #0
 800295e:	d101      	bne.n	8002964 <HAL_CRC_Init+0x12>
  {
    return HAL_ERROR;
 8002960:	2301      	movs	r3, #1
 8002962:	e00e      	b.n	8002982 <HAL_CRC_Init+0x30>
  }

  /* Check the parameters */
  assert_param(IS_CRC_ALL_INSTANCE(hcrc->Instance));

  if (hcrc->State == HAL_CRC_STATE_RESET)
 8002964:	687b      	ldr	r3, [r7, #4]
 8002966:	795b      	ldrb	r3, [r3, #5]
 8002968:	b2db      	uxtb	r3, r3
 800296a:	2b00      	cmp	r3, #0
 800296c:	d105      	bne.n	800297a <HAL_CRC_Init+0x28>
  {
    /* Allocate lock resource and initialize it */
    hcrc->Lock = HAL_UNLOCKED;
 800296e:	687b      	ldr	r3, [r7, #4]
 8002970:	2200      	movs	r2, #0
 8002972:	711a      	strb	r2, [r3, #4]
    /* Init the low level hardware */
    HAL_CRC_MspInit(hcrc);
 8002974:	6878      	ldr	r0, [r7, #4]
 8002976:	f7fe fa17 	bl	8000da8 <HAL_CRC_MspInit>
  }

  /* Change CRC peripheral state */
  hcrc->State = HAL_CRC_STATE_READY;
 800297a:	687b      	ldr	r3, [r7, #4]
 800297c:	2201      	movs	r2, #1
 800297e:	715a      	strb	r2, [r3, #5]

  /* Return function status */
  return HAL_OK;
 8002980:	2300      	movs	r3, #0
}
 8002982:	4618      	mov	r0, r3
 8002984:	3708      	adds	r7, #8
 8002986:	46bd      	mov	sp, r7
 8002988:	bd80      	pop	{r7, pc}
	...

0800298c <HAL_DMA_Init>:
  * @param  hdma Pointer to a DMA_HandleTypeDef structure that contains
  *               the configuration information for the specified DMA Stream.  
  * @retval HAL status
  */
HAL_StatusTypeDef HAL_DMA_Init(DMA_HandleTypeDef *hdma)
{
 800298c:	b580      	push	{r7, lr}
 800298e:	b086      	sub	sp, #24
 8002990:	af00      	add	r7, sp, #0
 8002992:	6078      	str	r0, [r7, #4]
  uint32_t tmp = 0U;
 8002994:	2300      	movs	r3, #0
 8002996:	617b      	str	r3, [r7, #20]
  uint32_t tickstart = HAL_GetTick();
 8002998:	f7ff fa1a 	bl	8001dd0 <HAL_GetTick>
 800299c:	6138      	str	r0, [r7, #16]
  DMA_Base_Registers *regs;

  /* Check the DMA peripheral state */
  if(hdma == NULL)
 800299e:	687b      	ldr	r3, [r7, #4]
 80029a0:	2b00      	cmp	r3, #0
 80029a2:	d101      	bne.n	80029a8 <HAL_DMA_Init+0x1c>
  {
    return HAL_ERROR;
 80029a4:	2301      	movs	r3, #1
 80029a6:	e099      	b.n	8002adc <HAL_DMA_Init+0x150>
    assert_param(IS_DMA_MEMORY_BURST(hdma->Init.MemBurst));
    assert_param(IS_DMA_PERIPHERAL_BURST(hdma->Init.PeriphBurst));
  }

  /* Change DMA peripheral state */
  hdma->State = HAL_DMA_STATE_BUSY;
 80029a8:	687b      	ldr	r3, [r7, #4]
 80029aa:	2202      	movs	r2, #2
 80029ac:	f883 2035 	strb.w	r2, [r3, #53]	@ 0x35

  /* Allocate lock resource */
  __HAL_UNLOCK(hdma);
 80029b0:	687b      	ldr	r3, [r7, #4]
 80029b2:	2200      	movs	r2, #0
 80029b4:	f883 2034 	strb.w	r2, [r3, #52]	@ 0x34
  
  /* Disable the peripheral */
  __HAL_DMA_DISABLE(hdma);
 80029b8:	687b      	ldr	r3, [r7, #4]
 80029ba:	681b      	ldr	r3, [r3, #0]
 80029bc:	681a      	ldr	r2, [r3, #0]
 80029be:	687b      	ldr	r3, [r7, #4]
 80029c0:	681b      	ldr	r3, [r3, #0]
 80029c2:	f022 0201 	bic.w	r2, r2, #1
 80029c6:	601a      	str	r2, [r3, #0]
  
  /* Check if the DMA Stream is effectively disabled */
  while((hdma->Instance->CR & DMA_SxCR_EN) != RESET)
 80029c8:	e00f      	b.n	80029ea <HAL_DMA_Init+0x5e>
  {
    /* Check for the Timeout */
    if((HAL_GetTick() - tickstart ) > HAL_TIMEOUT_DMA_ABORT)
 80029ca:	f7ff fa01 	bl	8001dd0 <HAL_GetTick>
 80029ce:	4602      	mov	r2, r0
 80029d0:	693b      	ldr	r3, [r7, #16]
 80029d2:	1ad3      	subs	r3, r2, r3
 80029d4:	2b05      	cmp	r3, #5
 80029d6:	d908      	bls.n	80029ea <HAL_DMA_Init+0x5e>
    {
      /* Update error code */
      hdma->ErrorCode = HAL_DMA_ERROR_TIMEOUT;
 80029d8:	687b      	ldr	r3, [r7, #4]
 80029da:	2220      	movs	r2, #32
 80029dc:	655a      	str	r2, [r3, #84]	@ 0x54
      
      /* Change the DMA state */
      hdma->State = HAL_DMA_STATE_TIMEOUT;
 80029de:	687b      	ldr	r3, [r7, #4]
 80029e0:	2203      	movs	r2, #3
 80029e2:	f883 2035 	strb.w	r2, [r3, #53]	@ 0x35
      
      return HAL_TIMEOUT;
 80029e6:	2303      	movs	r3, #3
 80029e8:	e078      	b.n	8002adc <HAL_DMA_Init+0x150>
  while((hdma->Instance->CR & DMA_SxCR_EN) != RESET)
 80029ea:	687b      	ldr	r3, [r7, #4]
 80029ec:	681b      	ldr	r3, [r3, #0]
 80029ee:	681b      	ldr	r3, [r3, #0]
 80029f0:	f003 0301 	and.w	r3, r3, #1
 80029f4:	2b00      	cmp	r3, #0
 80029f6:	d1e8      	bne.n	80029ca <HAL_DMA_Init+0x3e>
    }
  }
  
  /* Get the CR register value */
  tmp = hdma->Instance->CR;
 80029f8:	687b      	ldr	r3, [r7, #4]
 80029fa:	681b      	ldr	r3, [r3, #0]
 80029fc:	681b      	ldr	r3, [r3, #0]
 80029fe:	617b      	str	r3, [r7, #20]

  /* Clear CHSEL, MBURST, PBURST, PL, MSIZE, PSIZE, MINC, PINC, CIRC, DIR, CT and DBM bits */
  tmp &= ((uint32_t)~(DMA_SxCR_CHSEL | DMA_SxCR_MBURST | DMA_SxCR_PBURST | \
 8002a00:	697a      	ldr	r2, [r7, #20]
 8002a02:	4b38      	ldr	r3, [pc, #224]	@ (8002ae4 <HAL_DMA_Init+0x158>)
 8002a04:	4013      	ands	r3, r2
 8002a06:	617b      	str	r3, [r7, #20]
                      DMA_SxCR_PL    | DMA_SxCR_MSIZE  | DMA_SxCR_PSIZE  | \
                      DMA_SxCR_MINC  | DMA_SxCR_PINC   | DMA_SxCR_CIRC   | \
                      DMA_SxCR_DIR   | DMA_SxCR_CT     | DMA_SxCR_DBM));

  /* Prepare the DMA Stream configuration */
  tmp |=  hdma->Init.Channel             | hdma->Init.Direction        |
 8002a08:	687b      	ldr	r3, [r7, #4]
 8002a0a:	685a      	ldr	r2, [r3, #4]
 8002a0c:	687b      	ldr	r3, [r7, #4]
 8002a0e:	689b      	ldr	r3, [r3, #8]
 8002a10:	431a      	orrs	r2, r3
          hdma->Init.PeriphInc           | hdma->Init.MemInc           |
 8002a12:	687b      	ldr	r3, [r7, #4]
 8002a14:	68db      	ldr	r3, [r3, #12]
  tmp |=  hdma->Init.Channel             | hdma->Init.Direction        |
 8002a16:	431a      	orrs	r2, r3
          hdma->Init.PeriphInc           | hdma->Init.MemInc           |
 8002a18:	687b      	ldr	r3, [r7, #4]
 8002a1a:	691b      	ldr	r3, [r3, #16]
 8002a1c:	431a      	orrs	r2, r3
          hdma->Init.PeriphDataAlignment | hdma->Init.MemDataAlignment |
 8002a1e:	687b      	ldr	r3, [r7, #4]
 8002a20:	695b      	ldr	r3, [r3, #20]
          hdma->Init.PeriphInc           | hdma->Init.MemInc           |
 8002a22:	431a      	orrs	r2, r3
          hdma->Init.PeriphDataAlignment | hdma->Init.MemDataAlignment |
 8002a24:	687b      	ldr	r3, [r7, #4]
 8002a26:	699b      	ldr	r3, [r3, #24]
 8002a28:	431a      	orrs	r2, r3
          hdma->Init.Mode                | hdma->Init.Priority;
 8002a2a:	687b      	ldr	r3, [r7, #4]
 8002a2c:	69db      	ldr	r3, [r3, #28]
          hdma->Init.PeriphDataAlignment | hdma->Init.MemDataAlignment |
 8002a2e:	431a      	orrs	r2, r3
          hdma->Init.Mode                | hdma->Init.Priority;
 8002a30:	687b      	ldr	r3, [r7, #4]
 8002a32:	6a1b      	ldr	r3, [r3, #32]
 8002a34:	4313      	orrs	r3, r2
  tmp |=  hdma->Init.Channel             | hdma->Init.Direction        |
 8002a36:	697a      	ldr	r2, [r7, #20]
 8002a38:	4313      	orrs	r3, r2
 8002a3a:	617b      	str	r3, [r7, #20]

  /* the Memory burst and peripheral burst are not used when the FIFO is disabled */
  if(hdma->Init.FIFOMode == DMA_FIFOMODE_ENABLE)
 8002a3c:	687b      	ldr	r3, [r7, #4]
 8002a3e:	6a5b      	ldr	r3, [r3, #36]	@ 0x24
 8002a40:	2b04      	cmp	r3, #4
 8002a42:	d107      	bne.n	8002a54 <HAL_DMA_Init+0xc8>
  {
    /* Get memory burst and peripheral burst */
    tmp |=  hdma->Init.MemBurst | hdma->Init.PeriphBurst;
 8002a44:	687b      	ldr	r3, [r7, #4]
 8002a46:	6ada      	ldr	r2, [r3, #44]	@ 0x2c
 8002a48:	687b      	ldr	r3, [r7, #4]
 8002a4a:	6b1b      	ldr	r3, [r3, #48]	@ 0x30
 8002a4c:	4313      	orrs	r3, r2
 8002a4e:	697a      	ldr	r2, [r7, #20]
 8002a50:	4313      	orrs	r3, r2
 8002a52:	617b      	str	r3, [r7, #20]
  }
  
  /* Write to DMA Stream CR register */
  hdma->Instance->CR = tmp;  
 8002a54:	687b      	ldr	r3, [r7, #4]
 8002a56:	681b      	ldr	r3, [r3, #0]
 8002a58:	697a      	ldr	r2, [r7, #20]
 8002a5a:	601a      	str	r2, [r3, #0]

  /* Get the FCR register value */
  tmp = hdma->Instance->FCR;
 8002a5c:	687b      	ldr	r3, [r7, #4]
 8002a5e:	681b      	ldr	r3, [r3, #0]
 8002a60:	695b      	ldr	r3, [r3, #20]
 8002a62:	617b      	str	r3, [r7, #20]

  /* Clear Direct mode and FIFO threshold bits */
  tmp &= (uint32_t)~(DMA_SxFCR_DMDIS | DMA_SxFCR_FTH);
 8002a64:	697b      	ldr	r3, [r7, #20]
 8002a66:	f023 0307 	bic.w	r3, r3, #7
 8002a6a:	617b      	str	r3, [r7, #20]

  /* Prepare the DMA Stream FIFO configuration */
  tmp |= hdma->Init.FIFOMode;
 8002a6c:	687b      	ldr	r3, [r7, #4]
 8002a6e:	6a5b      	ldr	r3, [r3, #36]	@ 0x24
 8002a70:	697a      	ldr	r2, [r7, #20]
 8002a72:	4313      	orrs	r3, r2
 8002a74:	617b      	str	r3, [r7, #20]

  /* The FIFO threshold is not used when the FIFO mode is disabled */
  if(hdma->Init.FIFOMode == DMA_FIFOMODE_ENABLE)
 8002a76:	687b      	ldr	r3, [r7, #4]
 8002a78:	6a5b      	ldr	r3, [r3, #36]	@ 0x24
 8002a7a:	2b04      	cmp	r3, #4
 8002a7c:	d117      	bne.n	8002aae <HAL_DMA_Init+0x122>
  {
    /* Get the FIFO threshold */
    tmp |= hdma->Init.FIFOThreshold;
 8002a7e:	687b      	ldr	r3, [r7, #4]
 8002a80:	6a9b      	ldr	r3, [r3, #40]	@ 0x28
 8002a82:	697a      	ldr	r2, [r7, #20]
 8002a84:	4313      	orrs	r3, r2
 8002a86:	617b      	str	r3, [r7, #20]
    
    /* Check compatibility between FIFO threshold level and size of the memory burst */
    /* for INCR4, INCR8, INCR16 bursts */
    if (hdma->Init.MemBurst != DMA_MBURST_SINGLE)
 8002a88:	687b      	ldr	r3, [r7, #4]
 8002a8a:	6adb      	ldr	r3, [r3, #44]	@ 0x2c
 8002a8c:	2b00      	cmp	r3, #0
 8002a8e:	d00e      	beq.n	8002aae <HAL_DMA_Init+0x122>
    {
      if (DMA_CheckFifoParam(hdma) != HAL_OK)
 8002a90:	6878      	ldr	r0, [r7, #4]
 8002a92:	f000 fa91 	bl	8002fb8 <DMA_CheckFifoParam>
 8002a96:	4603      	mov	r3, r0
 8002a98:	2b00      	cmp	r3, #0
 8002a9a:	d008      	beq.n	8002aae <HAL_DMA_Init+0x122>
      {
        /* Update error code */
        hdma->ErrorCode = HAL_DMA_ERROR_PARAM;
 8002a9c:	687b      	ldr	r3, [r7, #4]
 8002a9e:	2240      	movs	r2, #64	@ 0x40
 8002aa0:	655a      	str	r2, [r3, #84]	@ 0x54
        
        /* Change the DMA state */
        hdma->State = HAL_DMA_STATE_READY;
 8002aa2:	687b      	ldr	r3, [r7, #4]
 8002aa4:	2201      	movs	r2, #1
 8002aa6:	f883 2035 	strb.w	r2, [r3, #53]	@ 0x35
        
        return HAL_ERROR; 
 8002aaa:	2301      	movs	r3, #1
 8002aac:	e016      	b.n	8002adc <HAL_DMA_Init+0x150>
      }
    }
  }
  
  /* Write to DMA Stream FCR */
  hdma->Instance->FCR = tmp;
 8002aae:	687b      	ldr	r3, [r7, #4]
 8002ab0:	681b      	ldr	r3, [r3, #0]
 8002ab2:	697a      	ldr	r2, [r7, #20]
 8002ab4:	615a      	str	r2, [r3, #20]

  /* Initialize StreamBaseAddress and StreamIndex parameters to be used to calculate
     DMA steam Base Address needed by HAL_DMA_IRQHandler() and HAL_DMA_PollForTransfer() */
  regs = (DMA_Base_Registers *)DMA_CalcBaseAndBitshift(hdma);
 8002ab6:	6878      	ldr	r0, [r7, #4]
 8002ab8:	f000 fa48 	bl	8002f4c <DMA_CalcBaseAndBitshift>
 8002abc:	4603      	mov	r3, r0
 8002abe:	60fb      	str	r3, [r7, #12]
  
  /* Clear all interrupt flags */
  regs->IFCR = 0x3FU << hdma->StreamIndex;
 8002ac0:	687b      	ldr	r3, [r7, #4]
 8002ac2:	6ddb      	ldr	r3, [r3, #92]	@ 0x5c
 8002ac4:	223f      	movs	r2, #63	@ 0x3f
 8002ac6:	409a      	lsls	r2, r3
 8002ac8:	68fb      	ldr	r3, [r7, #12]
 8002aca:	609a      	str	r2, [r3, #8]

  /* Initialize the error code */
  hdma->ErrorCode = HAL_DMA_ERROR_NONE;
 8002acc:	687b      	ldr	r3, [r7, #4]
 8002ace:	2200      	movs	r2, #0
 8002ad0:	655a      	str	r2, [r3, #84]	@ 0x54
                                                                                     
  /* Initialize the DMA state */
  hdma->State = HAL_DMA_STATE_READY;
 8002ad2:	687b      	ldr	r3, [r7, #4]
 8002ad4:	2201      	movs	r2, #1
 8002ad6:	f883 2035 	strb.w	r2, [r3, #53]	@ 0x35

  return HAL_OK;
 8002ada:	2300      	movs	r3, #0
}
 8002adc:	4618      	mov	r0, r3
 8002ade:	3718      	adds	r7, #24
 8002ae0:	46bd      	mov	sp, r7
 8002ae2:	bd80      	pop	{r7, pc}
 8002ae4:	f010803f 	.word	0xf010803f

08002ae8 <HAL_DMA_Start_IT>:
  * @param  DstAddress The destination memory Buffer address
  * @param  DataLength The length of data to be transferred from source to destination
  * @retval HAL status
  */
HAL_StatusTypeDef HAL_DMA_Start_IT(DMA_HandleTypeDef *hdma, uint32_t SrcAddress, uint32_t DstAddress, uint32_t DataLength)
{
 8002ae8:	b580      	push	{r7, lr}
 8002aea:	b086      	sub	sp, #24
 8002aec:	af00      	add	r7, sp, #0
 8002aee:	60f8      	str	r0, [r7, #12]
 8002af0:	60b9      	str	r1, [r7, #8]
 8002af2:	607a      	str	r2, [r7, #4]
 8002af4:	603b      	str	r3, [r7, #0]
  HAL_StatusTypeDef status = HAL_OK;
 8002af6:	2300      	movs	r3, #0
 8002af8:	75fb      	strb	r3, [r7, #23]

  /* calculate DMA base and stream number */
  DMA_Base_Registers *regs = (DMA_Base_Registers *)hdma->StreamBaseAddress;
 8002afa:	68fb      	ldr	r3, [r7, #12]
 8002afc:	6d9b      	ldr	r3, [r3, #88]	@ 0x58
 8002afe:	613b      	str	r3, [r7, #16]
  
  /* Check the parameters */
  assert_param(IS_DMA_BUFFER_SIZE(DataLength));
 
  /* Process locked */
  __HAL_LOCK(hdma);
 8002b00:	68fb      	ldr	r3, [r7, #12]
 8002b02:	f893 3034 	ldrb.w	r3, [r3, #52]	@ 0x34
 8002b06:	2b01      	cmp	r3, #1
 8002b08:	d101      	bne.n	8002b0e <HAL_DMA_Start_IT+0x26>
 8002b0a:	2302      	movs	r3, #2
 8002b0c:	e040      	b.n	8002b90 <HAL_DMA_Start_IT+0xa8>
 8002b0e:	68fb      	ldr	r3, [r7, #12]
 8002b10:	2201      	movs	r2, #1
 8002b12:	f883 2034 	strb.w	r2, [r3, #52]	@ 0x34
  
  if(HAL_DMA_STATE_READY == hdma->State)
 8002b16:	68fb      	ldr	r3, [r7, #12]
 8002b18:	f893 3035 	ldrb.w	r3, [r3, #53]	@ 0x35
 8002b1c:	b2db      	uxtb	r3, r3
 8002b1e:	2b01      	cmp	r3, #1
 8002b20:	d12f      	bne.n	8002b82 <HAL_DMA_Start_IT+0x9a>
  {
    /* Change DMA peripheral state */
    hdma->State = HAL_DMA_STATE_BUSY;
 8002b22:	68fb      	ldr	r3, [r7, #12]
 8002b24:	2202      	movs	r2, #2
 8002b26:	f883 2035 	strb.w	r2, [r3, #53]	@ 0x35
    
    /* Initialize the error code */
    hdma->ErrorCode = HAL_DMA_ERROR_NONE;
 8002b2a:	68fb      	ldr	r3, [r7, #12]
 8002b2c:	2200      	movs	r2, #0
 8002b2e:	655a      	str	r2, [r3, #84]	@ 0x54
    
    /* Configure the source, destination address and the data length */
    DMA_SetConfig(hdma, SrcAddress, DstAddress, DataLength);
 8002b30:	683b      	ldr	r3, [r7, #0]
 8002b32:	687a      	ldr	r2, [r7, #4]
 8002b34:	68b9      	ldr	r1, [r7, #8]
 8002b36:	68f8      	ldr	r0, [r7, #12]
 8002b38:	f000 f9da 	bl	8002ef0 <DMA_SetConfig>
    
    /* Clear all interrupt flags at correct offset within the register */
    regs->IFCR = 0x3FU << hdma->StreamIndex;
 8002b3c:	68fb      	ldr	r3, [r7, #12]
 8002b3e:	6ddb      	ldr	r3, [r3, #92]	@ 0x5c
 8002b40:	223f      	movs	r2, #63	@ 0x3f
 8002b42:	409a      	lsls	r2, r3
 8002b44:	693b      	ldr	r3, [r7, #16]
 8002b46:	609a      	str	r2, [r3, #8]
    
    /* Enable Common interrupts*/
    hdma->Instance->CR  |= DMA_IT_TC | DMA_IT_TE | DMA_IT_DME;
 8002b48:	68fb      	ldr	r3, [r7, #12]
 8002b4a:	681b      	ldr	r3, [r3, #0]
 8002b4c:	681a      	ldr	r2, [r3, #0]
 8002b4e:	68fb      	ldr	r3, [r7, #12]
 8002b50:	681b      	ldr	r3, [r3, #0]
 8002b52:	f042 0216 	orr.w	r2, r2, #22
 8002b56:	601a      	str	r2, [r3, #0]
    
    if(hdma->XferHalfCpltCallback != NULL)
 8002b58:	68fb      	ldr	r3, [r7, #12]
 8002b5a:	6c1b      	ldr	r3, [r3, #64]	@ 0x40
 8002b5c:	2b00      	cmp	r3, #0
 8002b5e:	d007      	beq.n	8002b70 <HAL_DMA_Start_IT+0x88>
    {
      hdma->Instance->CR  |= DMA_IT_HT;
 8002b60:	68fb      	ldr	r3, [r7, #12]
 8002b62:	681b      	ldr	r3, [r3, #0]
 8002b64:	681a      	ldr	r2, [r3, #0]
 8002b66:	68fb      	ldr	r3, [r7, #12]
 8002b68:	681b      	ldr	r3, [r3, #0]
 8002b6a:	f042 0208 	orr.w	r2, r2, #8
 8002b6e:	601a      	str	r2, [r3, #0]
    }
    
    /* Enable the Peripheral */
    __HAL_DMA_ENABLE(hdma);
 8002b70:	68fb      	ldr	r3, [r7, #12]
 8002b72:	681b      	ldr	r3, [r3, #0]
 8002b74:	681a      	ldr	r2, [r3, #0]
 8002b76:	68fb      	ldr	r3, [r7, #12]
 8002b78:	681b      	ldr	r3, [r3, #0]
 8002b7a:	f042 0201 	orr.w	r2, r2, #1
 8002b7e:	601a      	str	r2, [r3, #0]
 8002b80:	e005      	b.n	8002b8e <HAL_DMA_Start_IT+0xa6>
  }
  else
  {
    /* Process unlocked */
    __HAL_UNLOCK(hdma);	  
 8002b82:	68fb      	ldr	r3, [r7, #12]
 8002b84:	2200      	movs	r2, #0
 8002b86:	f883 2034 	strb.w	r2, [r3, #52]	@ 0x34
    
    /* Return error status */
    status = HAL_BUSY;
 8002b8a:	2302      	movs	r3, #2
 8002b8c:	75fb      	strb	r3, [r7, #23]
  }
  
  return status;
 8002b8e:	7dfb      	ldrb	r3, [r7, #23]
}
 8002b90:	4618      	mov	r0, r3
 8002b92:	3718      	adds	r7, #24
 8002b94:	46bd      	mov	sp, r7
 8002b96:	bd80      	pop	{r7, pc}

08002b98 <HAL_DMA_Abort_IT>:
  * @param  hdma   pointer to a DMA_HandleTypeDef structure that contains
  *                 the configuration information for the specified DMA Stream.
  * @retval HAL status
  */
HAL_StatusTypeDef HAL_DMA_Abort_IT(DMA_HandleTypeDef *hdma)
{
 8002b98:	b480      	push	{r7}
 8002b9a:	b083      	sub	sp, #12
 8002b9c:	af00      	add	r7, sp, #0
 8002b9e:	6078      	str	r0, [r7, #4]
  if(hdma->State != HAL_DMA_STATE_BUSY)
 8002ba0:	687b      	ldr	r3, [r7, #4]
 8002ba2:	f893 3035 	ldrb.w	r3, [r3, #53]	@ 0x35
 8002ba6:	b2db      	uxtb	r3, r3
 8002ba8:	2b02      	cmp	r3, #2
 8002baa:	d004      	beq.n	8002bb6 <HAL_DMA_Abort_IT+0x1e>
  {
    hdma->ErrorCode = HAL_DMA_ERROR_NO_XFER;
 8002bac:	687b      	ldr	r3, [r7, #4]
 8002bae:	2280      	movs	r2, #128	@ 0x80
 8002bb0:	655a      	str	r2, [r3, #84]	@ 0x54
    return HAL_ERROR;
 8002bb2:	2301      	movs	r3, #1
 8002bb4:	e00c      	b.n	8002bd0 <HAL_DMA_Abort_IT+0x38>
  }
  else
  {
    /* Set Abort State  */
    hdma->State = HAL_DMA_STATE_ABORT;
 8002bb6:	687b      	ldr	r3, [r7, #4]
 8002bb8:	2205      	movs	r2, #5
 8002bba:	f883 2035 	strb.w	r2, [r3, #53]	@ 0x35
    
    /* Disable the stream */
    __HAL_DMA_DISABLE(hdma);
 8002bbe:	687b      	ldr	r3, [r7, #4]
 8002bc0:	681b      	ldr	r3, [r3, #0]
 8002bc2:	681a      	ldr	r2, [r3, #0]
 8002bc4:	687b      	ldr	r3, [r7, #4]
 8002bc6:	681b      	ldr	r3, [r3, #0]
 8002bc8:	f022 0201 	bic.w	r2, r2, #1
 8002bcc:	601a      	str	r2, [r3, #0]
  }

  return HAL_OK;
 8002bce:	2300      	movs	r3, #0
}
 8002bd0:	4618      	mov	r0, r3
 8002bd2:	370c      	adds	r7, #12
 8002bd4:	46bd      	mov	sp, r7
 8002bd6:	f85d 7b04 	ldr.w	r7, [sp], #4
 8002bda:	4770      	bx	lr

08002bdc <HAL_DMA_IRQHandler>:
  * @param  hdma pointer to a DMA_HandleTypeDef structure that contains
  *               the configuration information for the specified DMA Stream.  
  * @retval None
  */
void HAL_DMA_IRQHandler(DMA_HandleTypeDef *hdma)
{
 8002bdc:	b580      	push	{r7, lr}
 8002bde:	b086      	sub	sp, #24
 8002be0:	af00      	add	r7, sp, #0
 8002be2:	6078      	str	r0, [r7, #4]
  uint32_t tmpisr;
  __IO uint32_t count = 0U;
 8002be4:	2300      	movs	r3, #0
 8002be6:	60bb      	str	r3, [r7, #8]
  uint32_t timeout = SystemCoreClock / 9600U;
 8002be8:	4b8e      	ldr	r3, [pc, #568]	@ (8002e24 <HAL_DMA_IRQHandler+0x248>)
 8002bea:	681b      	ldr	r3, [r3, #0]
 8002bec:	4a8e      	ldr	r2, [pc, #568]	@ (8002e28 <HAL_DMA_IRQHandler+0x24c>)
 8002bee:	fba2 2303 	umull	r2, r3, r2, r3
 8002bf2:	0a9b      	lsrs	r3, r3, #10
 8002bf4:	617b      	str	r3, [r7, #20]

  /* calculate DMA base and stream number */
  DMA_Base_Registers *regs = (DMA_Base_Registers *)hdma->StreamBaseAddress;
 8002bf6:	687b      	ldr	r3, [r7, #4]
 8002bf8:	6d9b      	ldr	r3, [r3, #88]	@ 0x58
 8002bfa:	613b      	str	r3, [r7, #16]

  tmpisr = regs->ISR;
 8002bfc:	693b      	ldr	r3, [r7, #16]
 8002bfe:	681b      	ldr	r3, [r3, #0]
 8002c00:	60fb      	str	r3, [r7, #12]

  /* Transfer Error Interrupt management ***************************************/
  if ((tmpisr & (DMA_FLAG_TEIF0_4 << hdma->StreamIndex)) != RESET)
 8002c02:	687b      	ldr	r3, [r7, #4]
 8002c04:	6ddb      	ldr	r3, [r3, #92]	@ 0x5c
 8002c06:	2208      	movs	r2, #8
 8002c08:	409a      	lsls	r2, r3
 8002c0a:	68fb      	ldr	r3, [r7, #12]
 8002c0c:	4013      	ands	r3, r2
 8002c0e:	2b00      	cmp	r3, #0
 8002c10:	d01a      	beq.n	8002c48 <HAL_DMA_IRQHandler+0x6c>
  {
    if(__HAL_DMA_GET_IT_SOURCE(hdma, DMA_IT_TE) != RESET)
 8002c12:	687b      	ldr	r3, [r7, #4]
 8002c14:	681b      	ldr	r3, [r3, #0]
 8002c16:	681b      	ldr	r3, [r3, #0]
 8002c18:	f003 0304 	and.w	r3, r3, #4
 8002c1c:	2b00      	cmp	r3, #0
 8002c1e:	d013      	beq.n	8002c48 <HAL_DMA_IRQHandler+0x6c>
    {
      /* Disable the transfer error interrupt */
      hdma->Instance->CR  &= ~(DMA_IT_TE);
 8002c20:	687b      	ldr	r3, [r7, #4]
 8002c22:	681b      	ldr	r3, [r3, #0]
 8002c24:	681a      	ldr	r2, [r3, #0]
 8002c26:	687b      	ldr	r3, [r7, #4]
 8002c28:	681b      	ldr	r3, [r3, #0]
 8002c2a:	f022 0204 	bic.w	r2, r2, #4
 8002c2e:	601a      	str	r2, [r3, #0]
      
      /* Clear the transfer error flag */
      regs->IFCR = DMA_FLAG_TEIF0_4 << hdma->StreamIndex;
 8002c30:	687b      	ldr	r3, [r7, #4]
 8002c32:	6ddb      	ldr	r3, [r3, #92]	@ 0x5c
 8002c34:	2208      	movs	r2, #8
 8002c36:	409a      	lsls	r2, r3
 8002c38:	693b      	ldr	r3, [r7, #16]
 8002c3a:	609a      	str	r2, [r3, #8]
      
      /* Update error code */
      hdma->ErrorCode |= HAL_DMA_ERROR_TE;
 8002c3c:	687b      	ldr	r3, [r7, #4]
 8002c3e:	6d5b      	ldr	r3, [r3, #84]	@ 0x54
 8002c40:	f043 0201 	orr.w	r2, r3, #1
 8002c44:	687b      	ldr	r3, [r7, #4]
 8002c46:	655a      	str	r2, [r3, #84]	@ 0x54
    }
  }
  /* FIFO Error Interrupt management ******************************************/
  if ((tmpisr & (DMA_FLAG_FEIF0_4 << hdma->StreamIndex)) != RESET)
 8002c48:	687b      	ldr	r3, [r7, #4]
 8002c4a:	6ddb      	ldr	r3, [r3, #92]	@ 0x5c
 8002c4c:	2201      	movs	r2, #1
 8002c4e:	409a      	lsls	r2, r3
 8002c50:	68fb      	ldr	r3, [r7, #12]
 8002c52:	4013      	ands	r3, r2
 8002c54:	2b00      	cmp	r3, #0
 8002c56:	d012      	beq.n	8002c7e <HAL_DMA_IRQHandler+0xa2>
  {
    if(__HAL_DMA_GET_IT_SOURCE(hdma, DMA_IT_FE) != RESET)
 8002c58:	687b      	ldr	r3, [r7, #4]
 8002c5a:	681b      	ldr	r3, [r3, #0]
 8002c5c:	695b      	ldr	r3, [r3, #20]
 8002c5e:	f003 0380 	and.w	r3, r3, #128	@ 0x80
 8002c62:	2b00      	cmp	r3, #0
 8002c64:	d00b      	beq.n	8002c7e <HAL_DMA_IRQHandler+0xa2>
    {
      /* Clear the FIFO error flag */
      regs->IFCR = DMA_FLAG_FEIF0_4 << hdma->StreamIndex;
 8002c66:	687b      	ldr	r3, [r7, #4]
 8002c68:	6ddb      	ldr	r3, [r3, #92]	@ 0x5c
 8002c6a:	2201      	movs	r2, #1
 8002c6c:	409a      	lsls	r2, r3
 8002c6e:	693b      	ldr	r3, [r7, #16]
 8002c70:	609a      	str	r2, [r3, #8]

      /* Update error code */
      hdma->ErrorCode |= HAL_DMA_ERROR_FE;
 8002c72:	687b      	ldr	r3, [r7, #4]
 8002c74:	6d5b      	ldr	r3, [r3, #84]	@ 0x54
 8002c76:	f043 0202 	orr.w	r2, r3, #2
 8002c7a:	687b      	ldr	r3, [r7, #4]
 8002c7c:	655a      	str	r2, [r3, #84]	@ 0x54
    }
  }
  /* Direct Mode Error Interrupt management ***********************************/
  if ((tmpisr & (DMA_FLAG_DMEIF0_4 << hdma->StreamIndex)) != RESET)
 8002c7e:	687b      	ldr	r3, [r7, #4]
 8002c80:	6ddb      	ldr	r3, [r3, #92]	@ 0x5c
 8002c82:	2204      	movs	r2, #4
 8002c84:	409a      	lsls	r2, r3
 8002c86:	68fb      	ldr	r3, [r7, #12]
 8002c88:	4013      	ands	r3, r2
 8002c8a:	2b00      	cmp	r3, #0
 8002c8c:	d012      	beq.n	8002cb4 <HAL_DMA_IRQHandler+0xd8>
  {
    if(__HAL_DMA_GET_IT_SOURCE(hdma, DMA_IT_DME) != RESET)
 8002c8e:	687b      	ldr	r3, [r7, #4]
 8002c90:	681b      	ldr	r3, [r3, #0]
 8002c92:	681b      	ldr	r3, [r3, #0]
 8002c94:	f003 0302 	and.w	r3, r3, #2
 8002c98:	2b00      	cmp	r3, #0
 8002c9a:	d00b      	beq.n	8002cb4 <HAL_DMA_IRQHandler+0xd8>
    {
      /* Clear the direct mode error flag */
      regs->IFCR = DMA_FLAG_DMEIF0_4 << hdma->StreamIndex;
 8002c9c:	687b      	ldr	r3, [r7, #4]
 8002c9e:	6ddb      	ldr	r3, [r3, #92]	@ 0x5c
 8002ca0:	2204      	movs	r2, #4
 8002ca2:	409a      	lsls	r2, r3
 8002ca4:	693b      	ldr	r3, [r7, #16]
 8002ca6:	609a      	str	r2, [r3, #8]

      /* Update error code */
      hdma->ErrorCode |= HAL_DMA_ERROR_DME;
 8002ca8:	687b      	ldr	r3, [r7, #4]
 8002caa:	6d5b      	ldr	r3, [r3, #84]	@ 0x54
 8002cac:	f043 0204 	orr.w	r2, r3, #4
 8002cb0:	687b      	ldr	r3, [r7, #4]
 8002cb2:	655a      	str	r2, [r3, #84]	@ 0x54
    }
  }
  /* Half Transfer Complete Interrupt management ******************************/
  if ((tmpisr & (DMA_FLAG_HTIF0_4 << hdma->StreamIndex)) != RESET)
 8002cb4:	687b      	ldr	r3, [r7, #4]
 8002cb6:	6ddb      	ldr	r3, [r3, #92]	@ 0x5c
 8002cb8:	2210      	movs	r2, #16
 8002cba:	409a      	lsls	r2, r3
 8002cbc:	68fb      	ldr	r3, [r7, #12]
 8002cbe:	4013      	ands	r3, r2
 8002cc0:	2b00      	cmp	r3, #0
 8002cc2:	d043      	beq.n	8002d4c <HAL_DMA_IRQHandler+0x170>
  {
    if(__HAL_DMA_GET_IT_SOURCE(hdma, DMA_IT_HT) != RESET)
 8002cc4:	687b      	ldr	r3, [r7, #4]
 8002cc6:	681b      	ldr	r3, [r3, #0]
 8002cc8:	681b      	ldr	r3, [r3, #0]
 8002cca:	f003 0308 	and.w	r3, r3, #8
 8002cce:	2b00      	cmp	r3, #0
 8002cd0:	d03c      	beq.n	8002d4c <HAL_DMA_IRQHandler+0x170>
    {
      /* Clear the half transfer complete flag */
      regs->IFCR = DMA_FLAG_HTIF0_4 << hdma->StreamIndex;
 8002cd2:	687b      	ldr	r3, [r7, #4]
 8002cd4:	6ddb      	ldr	r3, [r3, #92]	@ 0x5c
 8002cd6:	2210      	movs	r2, #16
 8002cd8:	409a      	lsls	r2, r3
 8002cda:	693b      	ldr	r3, [r7, #16]
 8002cdc:	609a      	str	r2, [r3, #8]
      
      /* Multi_Buffering mode enabled */
      if(((hdma->Instance->CR) & (uint32_t)(DMA_SxCR_DBM)) != RESET)
 8002cde:	687b      	ldr	r3, [r7, #4]
 8002ce0:	681b      	ldr	r3, [r3, #0]
 8002ce2:	681b      	ldr	r3, [r3, #0]
 8002ce4:	f403 2380 	and.w	r3, r3, #262144	@ 0x40000
 8002ce8:	2b00      	cmp	r3, #0
 8002cea:	d018      	beq.n	8002d1e <HAL_DMA_IRQHandler+0x142>
      {
        /* Current memory buffer used is Memory 0 */
        if((hdma->Instance->CR & DMA_SxCR_CT) == RESET)
 8002cec:	687b      	ldr	r3, [r7, #4]
 8002cee:	681b      	ldr	r3, [r3, #0]
 8002cf0:	681b      	ldr	r3, [r3, #0]
 8002cf2:	f403 2300 	and.w	r3, r3, #524288	@ 0x80000
 8002cf6:	2b00      	cmp	r3, #0
 8002cf8:	d108      	bne.n	8002d0c <HAL_DMA_IRQHandler+0x130>
        {
          if(hdma->XferHalfCpltCallback != NULL)
 8002cfa:	687b      	ldr	r3, [r7, #4]
 8002cfc:	6c1b      	ldr	r3, [r3, #64]	@ 0x40
 8002cfe:	2b00      	cmp	r3, #0
 8002d00:	d024      	beq.n	8002d4c <HAL_DMA_IRQHandler+0x170>
          {
            /* Half transfer callback */
            hdma->XferHalfCpltCallback(hdma);
 8002d02:	687b      	ldr	r3, [r7, #4]
 8002d04:	6c1b      	ldr	r3, [r3, #64]	@ 0x40
 8002d06:	6878      	ldr	r0, [r7, #4]
 8002d08:	4798      	blx	r3
 8002d0a:	e01f      	b.n	8002d4c <HAL_DMA_IRQHandler+0x170>
          }
        }
        /* Current memory buffer used is Memory 1 */
        else
        {
          if(hdma->XferM1HalfCpltCallback != NULL)
 8002d0c:	687b      	ldr	r3, [r7, #4]
 8002d0e:	6c9b      	ldr	r3, [r3, #72]	@ 0x48
 8002d10:	2b00      	cmp	r3, #0
 8002d12:	d01b      	beq.n	8002d4c <HAL_DMA_IRQHandler+0x170>
          {
            /* Half transfer callback */
            hdma->XferM1HalfCpltCallback(hdma);
 8002d14:	687b      	ldr	r3, [r7, #4]
 8002d16:	6c9b      	ldr	r3, [r3, #72]	@ 0x48
 8002d18:	6878      	ldr	r0, [r7, #4]
 8002d1a:	4798      	blx	r3
 8002d1c:	e016      	b.n	8002d4c <HAL_DMA_IRQHandler+0x170>
        }
      }
      else
      {
        /* Disable the half transfer interrupt if the DMA mode is not CIRCULAR */
        if((hdma->Instance->CR & DMA_SxCR_CIRC) == RESET)
 8002d1e:	687b      	ldr	r3, [r7, #4]
 8002d20:	681b      	ldr	r3, [r3, #0]
 8002d22:	681b      	ldr	r3, [r3, #0]
 8002d24:	f403 7380 	and.w	r3, r3, #256	@ 0x100
 8002d28:	2b00      	cmp	r3, #0
 8002d2a:	d107      	bne.n	8002d3c <HAL_DMA_IRQHandler+0x160>
        {
          /* Disable the half transfer interrupt */
          hdma->Instance->CR  &= ~(DMA_IT_HT);
 8002d2c:	687b      	ldr	r3, [r7, #4]
 8002d2e:	681b      	ldr	r3, [r3, #0]
 8002d30:	681a      	ldr	r2, [r3, #0]
 8002d32:	687b      	ldr	r3, [r7, #4]
 8002d34:	681b      	ldr	r3, [r3, #0]
 8002d36:	f022 0208 	bic.w	r2, r2, #8
 8002d3a:	601a      	str	r2, [r3, #0]
        }
        
        if(hdma->XferHalfCpltCallback != NULL)
 8002d3c:	687b      	ldr	r3, [r7, #4]
 8002d3e:	6c1b      	ldr	r3, [r3, #64]	@ 0x40
 8002d40:	2b00      	cmp	r3, #0
 8002d42:	d003      	beq.n	8002d4c <HAL_DMA_IRQHandler+0x170>
        {
          /* Half transfer callback */
          hdma->XferHalfCpltCallback(hdma);
 8002d44:	687b      	ldr	r3, [r7, #4]
 8002d46:	6c1b      	ldr	r3, [r3, #64]	@ 0x40
 8002d48:	6878      	ldr	r0, [r7, #4]
 8002d4a:	4798      	blx	r3
        }
      }
    }
  }
  /* Transfer Complete Interrupt management ***********************************/
  if ((tmpisr & (DMA_FLAG_TCIF0_4 << hdma->StreamIndex)) != RESET)
 8002d4c:	687b      	ldr	r3, [r7, #4]
 8002d4e:	6ddb      	ldr	r3, [r3, #92]	@ 0x5c
 8002d50:	2220      	movs	r2, #32
 8002d52:	409a      	lsls	r2, r3
 8002d54:	68fb      	ldr	r3, [r7, #12]
 8002d56:	4013      	ands	r3, r2
 8002d58:	2b00      	cmp	r3, #0
 8002d5a:	f000 808f 	beq.w	8002e7c <HAL_DMA_IRQHandler+0x2a0>
  {
    if(__HAL_DMA_GET_IT_SOURCE(hdma, DMA_IT_TC) != RESET)
 8002d5e:	687b      	ldr	r3, [r7, #4]
 8002d60:	681b      	ldr	r3, [r3, #0]
 8002d62:	681b      	ldr	r3, [r3, #0]
 8002d64:	f003 0310 	and.w	r3, r3, #16
 8002d68:	2b00      	cmp	r3, #0
 8002d6a:	f000 8087 	beq.w	8002e7c <HAL_DMA_IRQHandler+0x2a0>
    {
      /* Clear the transfer complete flag */
      regs->IFCR = DMA_FLAG_TCIF0_4 << hdma->StreamIndex;
 8002d6e:	687b      	ldr	r3, [r7, #4]
 8002d70:	6ddb      	ldr	r3, [r3, #92]	@ 0x5c
 8002d72:	2220      	movs	r2, #32
 8002d74:	409a      	lsls	r2, r3
 8002d76:	693b      	ldr	r3, [r7, #16]
 8002d78:	609a      	str	r2, [r3, #8]
      
      if(HAL_DMA_STATE_ABORT == hdma->State)
 8002d7a:	687b      	ldr	r3, [r7, #4]
 8002d7c:	f893 3035 	ldrb.w	r3, [r3, #53]	@ 0x35
 8002d80:	b2db      	uxtb	r3, r3
 8002d82:	2b05      	cmp	r3, #5
 8002d84:	d136      	bne.n	8002df4 <HAL_DMA_IRQHandler+0x218>
      {
        /* Disable all the transfer interrupts */
        hdma->Instance->CR  &= ~(DMA_IT_TC | DMA_IT_TE | DMA_IT_DME);
 8002d86:	687b      	ldr	r3, [r7, #4]
 8002d88:	681b      	ldr	r3, [r3, #0]
 8002d8a:	681a      	ldr	r2, [r3, #0]
 8002d8c:	687b      	ldr	r3, [r7, #4]
 8002d8e:	681b      	ldr	r3, [r3, #0]
 8002d90:	f022 0216 	bic.w	r2, r2, #22
 8002d94:	601a      	str	r2, [r3, #0]
        hdma->Instance->FCR &= ~(DMA_IT_FE);
 8002d96:	687b      	ldr	r3, [r7, #4]
 8002d98:	681b      	ldr	r3, [r3, #0]
 8002d9a:	695a      	ldr	r2, [r3, #20]
 8002d9c:	687b      	ldr	r3, [r7, #4]
 8002d9e:	681b      	ldr	r3, [r3, #0]
 8002da0:	f022 0280 	bic.w	r2, r2, #128	@ 0x80
 8002da4:	615a      	str	r2, [r3, #20]
        
        if((hdma->XferHalfCpltCallback != NULL) || (hdma->XferM1HalfCpltCallback != NULL))
 8002da6:	687b      	ldr	r3, [r7, #4]
 8002da8:	6c1b      	ldr	r3, [r3, #64]	@ 0x40
 8002daa:	2b00      	cmp	r3, #0
 8002dac:	d103      	bne.n	8002db6 <HAL_DMA_IRQHandler+0x1da>
 8002dae:	687b      	ldr	r3, [r7, #4]
 8002db0:	6c9b      	ldr	r3, [r3, #72]	@ 0x48
 8002db2:	2b00      	cmp	r3, #0
 8002db4:	d007      	beq.n	8002dc6 <HAL_DMA_IRQHandler+0x1ea>
        {
          hdma->Instance->CR  &= ~(DMA_IT_HT);
 8002db6:	687b      	ldr	r3, [r7, #4]
 8002db8:	681b      	ldr	r3, [r3, #0]
 8002dba:	681a      	ldr	r2, [r3, #0]
 8002dbc:	687b      	ldr	r3, [r7, #4]
 8002dbe:	681b      	ldr	r3, [r3, #0]
 8002dc0:	f022 0208 	bic.w	r2, r2, #8
 8002dc4:	601a      	str	r2, [r3, #0]
        }

        /* Clear all interrupt flags at correct offset within the register */
        regs->IFCR = 0x3FU << hdma->StreamIndex;
 8002dc6:	687b      	ldr	r3, [r7, #4]
 8002dc8:	6ddb      	ldr	r3, [r3, #92]	@ 0x5c
 8002dca:	223f      	movs	r2, #63	@ 0x3f
 8002dcc:	409a      	lsls	r2, r3
 8002dce:	693b      	ldr	r3, [r7, #16]
 8002dd0:	609a      	str	r2, [r3, #8]

        /* Change the DMA state */
        hdma->State = HAL_DMA_STATE_READY;
 8002dd2:	687b      	ldr	r3, [r7, #4]
 8002dd4:	2201      	movs	r2, #1
 8002dd6:	f883 2035 	strb.w	r2, [r3, #53]	@ 0x35

        /* Process Unlocked */
        __HAL_UNLOCK(hdma);
 8002dda:	687b      	ldr	r3, [r7, #4]
 8002ddc:	2200      	movs	r2, #0
 8002dde:	f883 2034 	strb.w	r2, [r3, #52]	@ 0x34

        if(hdma->XferAbortCallback != NULL)
 8002de2:	687b      	ldr	r3, [r7, #4]
 8002de4:	6d1b      	ldr	r3, [r3, #80]	@ 0x50
 8002de6:	2b00      	cmp	r3, #0
 8002de8:	d07e      	beq.n	8002ee8 <HAL_DMA_IRQHandler+0x30c>
        {
          hdma->XferAbortCallback(hdma);
 8002dea:	687b      	ldr	r3, [r7, #4]
 8002dec:	6d1b      	ldr	r3, [r3, #80]	@ 0x50
 8002dee:	6878      	ldr	r0, [r7, #4]
 8002df0:	4798      	blx	r3
        }
        return;
 8002df2:	e079      	b.n	8002ee8 <HAL_DMA_IRQHandler+0x30c>
      }

      if(((hdma->Instance->CR) & (uint32_t)(DMA_SxCR_DBM)) != RESET)
 8002df4:	687b      	ldr	r3, [r7, #4]
 8002df6:	681b      	ldr	r3, [r3, #0]
 8002df8:	681b      	ldr	r3, [r3, #0]
 8002dfa:	f403 2380 	and.w	r3, r3, #262144	@ 0x40000
 8002dfe:	2b00      	cmp	r3, #0
 8002e00:	d01d      	beq.n	8002e3e <HAL_DMA_IRQHandler+0x262>
      {
        /* Current memory buffer used is Memory 0 */
        if((hdma->Instance->CR & DMA_SxCR_CT) == RESET)
 8002e02:	687b      	ldr	r3, [r7, #4]
 8002e04:	681b      	ldr	r3, [r3, #0]
 8002e06:	681b      	ldr	r3, [r3, #0]
 8002e08:	f403 2300 	and.w	r3, r3, #524288	@ 0x80000
 8002e0c:	2b00      	cmp	r3, #0
 8002e0e:	d10d      	bne.n	8002e2c <HAL_DMA_IRQHandler+0x250>
        {
          if(hdma->XferM1CpltCallback != NULL)
 8002e10:	687b      	ldr	r3, [r7, #4]
 8002e12:	6c5b      	ldr	r3, [r3, #68]	@ 0x44
 8002e14:	2b00      	cmp	r3, #0
 8002e16:	d031      	beq.n	8002e7c <HAL_DMA_IRQHandler+0x2a0>
          {
            /* Transfer complete Callback for memory1 */
            hdma->XferM1CpltCallback(hdma);
 8002e18:	687b      	ldr	r3, [r7, #4]
 8002e1a:	6c5b      	ldr	r3, [r3, #68]	@ 0x44
 8002e1c:	6878      	ldr	r0, [r7, #4]
 8002e1e:	4798      	blx	r3
 8002e20:	e02c      	b.n	8002e7c <HAL_DMA_IRQHandler+0x2a0>
 8002e22:	bf00      	nop
 8002e24:	20000008 	.word	0x20000008
 8002e28:	1b4e81b5 	.word	0x1b4e81b5
          }
        }
        /* Current memory buffer used is Memory 1 */
        else
        {
          if(hdma->XferCpltCallback != NULL)
 8002e2c:	687b      	ldr	r3, [r7, #4]
 8002e2e:	6bdb      	ldr	r3, [r3, #60]	@ 0x3c
 8002e30:	2b00      	cmp	r3, #0
 8002e32:	d023      	beq.n	8002e7c <HAL_DMA_IRQHandler+0x2a0>
          {
            /* Transfer complete Callback for memory0 */
            hdma->XferCpltCallback(hdma);
 8002e34:	687b      	ldr	r3, [r7, #4]
 8002e36:	6bdb      	ldr	r3, [r3, #60]	@ 0x3c
 8002e38:	6878      	ldr	r0, [r7, #4]
 8002e3a:	4798      	blx	r3
 8002e3c:	e01e      	b.n	8002e7c <HAL_DMA_IRQHandler+0x2a0>
        }
      }
      /* Disable the transfer complete interrupt if the DMA mode is not CIRCULAR */
      else
      {
        if((hdma->Instance->CR & DMA_SxCR_CIRC) == RESET)
 8002e3e:	687b      	ldr	r3, [r7, #4]
 8002e40:	681b      	ldr	r3, [r3, #0]
 8002e42:	681b      	ldr	r3, [r3, #0]
 8002e44:	f403 7380 	and.w	r3, r3, #256	@ 0x100
 8002e48:	2b00      	cmp	r3, #0
 8002e4a:	d10f      	bne.n	8002e6c <HAL_DMA_IRQHandler+0x290>
        {
          /* Disable the transfer complete interrupt */
          hdma->Instance->CR  &= ~(DMA_IT_TC);
 8002e4c:	687b      	ldr	r3, [r7, #4]
 8002e4e:	681b      	ldr	r3, [r3, #0]
 8002e50:	681a      	ldr	r2, [r3, #0]
 8002e52:	687b      	ldr	r3, [r7, #4]
 8002e54:	681b      	ldr	r3, [r3, #0]
 8002e56:	f022 0210 	bic.w	r2, r2, #16
 8002e5a:	601a      	str	r2, [r3, #0]

          /* Change the DMA state */
          hdma->State = HAL_DMA_STATE_READY;
 8002e5c:	687b      	ldr	r3, [r7, #4]
 8002e5e:	2201      	movs	r2, #1
 8002e60:	f883 2035 	strb.w	r2, [r3, #53]	@ 0x35

          /* Process Unlocked */
          __HAL_UNLOCK(hdma);
 8002e64:	687b      	ldr	r3, [r7, #4]
 8002e66:	2200      	movs	r2, #0
 8002e68:	f883 2034 	strb.w	r2, [r3, #52]	@ 0x34
        }

        if(hdma->XferCpltCallback != NULL)
 8002e6c:	687b      	ldr	r3, [r7, #4]
 8002e6e:	6bdb      	ldr	r3, [r3, #60]	@ 0x3c
 8002e70:	2b00      	cmp	r3, #0
 8002e72:	d003      	beq.n	8002e7c <HAL_DMA_IRQHandler+0x2a0>
        {
          /* Transfer complete callback */
          hdma->XferCpltCallback(hdma);
 8002e74:	687b      	ldr	r3, [r7, #4]
 8002e76:	6bdb      	ldr	r3, [r3, #60]	@ 0x3c
 8002e78:	6878      	ldr	r0, [r7, #4]
 8002e7a:	4798      	blx	r3
      }
    }
  }
  
  /* manage error case */
  if(hdma->ErrorCode != HAL_DMA_ERROR_NONE)
 8002e7c:	687b      	ldr	r3, [r7, #4]
 8002e7e:	6d5b      	ldr	r3, [r3, #84]	@ 0x54
 8002e80:	2b00      	cmp	r3, #0
 8002e82:	d032      	beq.n	8002eea <HAL_DMA_IRQHandler+0x30e>
  {
    if((hdma->ErrorCode & HAL_DMA_ERROR_TE) != RESET)
 8002e84:	687b      	ldr	r3, [r7, #4]
 8002e86:	6d5b      	ldr	r3, [r3, #84]	@ 0x54
 8002e88:	f003 0301 	and.w	r3, r3, #1
 8002e8c:	2b00      	cmp	r3, #0
 8002e8e:	d022      	beq.n	8002ed6 <HAL_DMA_IRQHandler+0x2fa>
    {
      hdma->State = HAL_DMA_STATE_ABORT;
 8002e90:	687b      	ldr	r3, [r7, #4]
 8002e92:	2205      	movs	r2, #5
 8002e94:	f883 2035 	strb.w	r2, [r3, #53]	@ 0x35

      /* Disable the stream */
      __HAL_DMA_DISABLE(hdma);
 8002e98:	687b      	ldr	r3, [r7, #4]
 8002e9a:	681b      	ldr	r3, [r3, #0]
 8002e9c:	681a      	ldr	r2, [r3, #0]
 8002e9e:	687b      	ldr	r3, [r7, #4]
 8002ea0:	681b      	ldr	r3, [r3, #0]
 8002ea2:	f022 0201 	bic.w	r2, r2, #1
 8002ea6:	601a      	str	r2, [r3, #0]

      do
      {
        if (++count > timeout)
 8002ea8:	68bb      	ldr	r3, [r7, #8]
 8002eaa:	3301      	adds	r3, #1
 8002eac:	60bb      	str	r3, [r7, #8]
 8002eae:	697a      	ldr	r2, [r7, #20]
 8002eb0:	429a      	cmp	r2, r3
 8002eb2:	d307      	bcc.n	8002ec4 <HAL_DMA_IRQHandler+0x2e8>
        {
          break;
        }
      }
      while((hdma->Instance->CR & DMA_SxCR_EN) != RESET);
 8002eb4:	687b      	ldr	r3, [r7, #4]
 8002eb6:	681b      	ldr	r3, [r3, #0]
 8002eb8:	681b      	ldr	r3, [r3, #0]
 8002eba:	f003 0301 	and.w	r3, r3, #1
 8002ebe:	2b00      	cmp	r3, #0
 8002ec0:	d1f2      	bne.n	8002ea8 <HAL_DMA_IRQHandler+0x2cc>
 8002ec2:	e000      	b.n	8002ec6 <HAL_DMA_IRQHandler+0x2ea>
          break;
 8002ec4:	bf00      	nop

      /* Change the DMA state */
      hdma->State = HAL_DMA_STATE_READY;
 8002ec6:	687b      	ldr	r3, [r7, #4]
 8002ec8:	2201      	movs	r2, #1
 8002eca:	f883 2035 	strb.w	r2, [r3, #53]	@ 0x35

      /* Process Unlocked */
      __HAL_UNLOCK(hdma);
 8002ece:	687b      	ldr	r3, [r7, #4]
 8002ed0:	2200      	movs	r2, #0
 8002ed2:	f883 2034 	strb.w	r2, [r3, #52]	@ 0x34
    }

    if(hdma->XferErrorCallback != NULL)
 8002ed6:	687b      	ldr	r3, [r7, #4]
 8002ed8:	6cdb      	ldr	r3, [r3, #76]	@ 0x4c
 8002eda:	2b00      	cmp	r3, #0
 8002edc:	d005      	beq.n	8002eea <HAL_DMA_IRQHandler+0x30e>
    {
      /* Transfer error callback */
      hdma->XferErrorCallback(hdma);
 8002ede:	687b      	ldr	r3, [r7, #4]
 8002ee0:	6cdb      	ldr	r3, [r3, #76]	@ 0x4c
 8002ee2:	6878      	ldr	r0, [r7, #4]
 8002ee4:	4798      	blx	r3
 8002ee6:	e000      	b.n	8002eea <HAL_DMA_IRQHandler+0x30e>
        return;
 8002ee8:	bf00      	nop
    }
  }
}
 8002eea:	3718      	adds	r7, #24
 8002eec:	46bd      	mov	sp, r7
 8002eee:	bd80      	pop	{r7, pc}

08002ef0 <DMA_SetConfig>:
  * @param  DstAddress The destination memory Buffer address
  * @param  DataLength The length of data to be transferred from source to destination
  * @retval HAL status
  */
static void DMA_SetConfig(DMA_HandleTypeDef *hdma, uint32_t SrcAddress, uint32_t DstAddress, uint32_t DataLength)
{
 8002ef0:	b480      	push	{r7}
 8002ef2:	b085      	sub	sp, #20
 8002ef4:	af00      	add	r7, sp, #0
 8002ef6:	60f8      	str	r0, [r7, #12]
 8002ef8:	60b9      	str	r1, [r7, #8]
 8002efa:	607a      	str	r2, [r7, #4]
 8002efc:	603b      	str	r3, [r7, #0]
  /* Clear DBM bit */
  hdma->Instance->CR &= (uint32_t)(~DMA_SxCR_DBM);
 8002efe:	68fb      	ldr	r3, [r7, #12]
 8002f00:	681b      	ldr	r3, [r3, #0]
 8002f02:	681a      	ldr	r2, [r3, #0]
 8002f04:	68fb      	ldr	r3, [r7, #12]
 8002f06:	681b      	ldr	r3, [r3, #0]
 8002f08:	f422 2280 	bic.w	r2, r2, #262144	@ 0x40000
 8002f0c:	601a      	str	r2, [r3, #0]

  /* Configure DMA Stream data length */
  hdma->Instance->NDTR = DataLength;
 8002f0e:	68fb      	ldr	r3, [r7, #12]
 8002f10:	681b      	ldr	r3, [r3, #0]
 8002f12:	683a      	ldr	r2, [r7, #0]
 8002f14:	605a      	str	r2, [r3, #4]

  /* Memory to Peripheral */
  if((hdma->Init.Direction) == DMA_MEMORY_TO_PERIPH)
 8002f16:	68fb      	ldr	r3, [r7, #12]
 8002f18:	689b      	ldr	r3, [r3, #8]
 8002f1a:	2b40      	cmp	r3, #64	@ 0x40
 8002f1c:	d108      	bne.n	8002f30 <DMA_SetConfig+0x40>
  {
    /* Configure DMA Stream destination address */
    hdma->Instance->PAR = DstAddress;
 8002f1e:	68fb      	ldr	r3, [r7, #12]
 8002f20:	681b      	ldr	r3, [r3, #0]
 8002f22:	687a      	ldr	r2, [r7, #4]
 8002f24:	609a      	str	r2, [r3, #8]

    /* Configure DMA Stream source address */
    hdma->Instance->M0AR = SrcAddress;
 8002f26:	68fb      	ldr	r3, [r7, #12]
 8002f28:	681b      	ldr	r3, [r3, #0]
 8002f2a:	68ba      	ldr	r2, [r7, #8]
 8002f2c:	60da      	str	r2, [r3, #12]
    hdma->Instance->PAR = SrcAddress;

    /* Configure DMA Stream destination address */
    hdma->Instance->M0AR = DstAddress;
  }
}
 8002f2e:	e007      	b.n	8002f40 <DMA_SetConfig+0x50>
    hdma->Instance->PAR = SrcAddress;
 8002f30:	68fb      	ldr	r3, [r7, #12]
 8002f32:	681b      	ldr	r3, [r3, #0]
 8002f34:	68ba      	ldr	r2, [r7, #8]
 8002f36:	609a      	str	r2, [r3, #8]
    hdma->Instance->M0AR = DstAddress;
 8002f38:	68fb      	ldr	r3, [r7, #12]
 8002f3a:	681b      	ldr	r3, [r3, #0]
 8002f3c:	687a      	ldr	r2, [r7, #4]
 8002f3e:	60da      	str	r2, [r3, #12]
}
 8002f40:	bf00      	nop
 8002f42:	3714      	adds	r7, #20
 8002f44:	46bd      	mov	sp, r7
 8002f46:	f85d 7b04 	ldr.w	r7, [sp], #4
 8002f4a:	4770      	bx	lr

08002f4c <DMA_CalcBaseAndBitshift>:
  * @param  hdma       pointer to a DMA_HandleTypeDef structure that contains
  *                     the configuration information for the specified DMA Stream. 
  * @retval Stream base address
  */
static uint32_t DMA_CalcBaseAndBitshift(DMA_HandleTypeDef *hdma)
{
 8002f4c:	b480      	push	{r7}
 8002f4e:	b085      	sub	sp, #20
 8002f50:	af00      	add	r7, sp, #0
 8002f52:	6078      	str	r0, [r7, #4]
  uint32_t stream_number = (((uint32_t)hdma->Instance & 0xFFU) - 16U) / 24U;
 8002f54:	687b      	ldr	r3, [r7, #4]
 8002f56:	681b      	ldr	r3, [r3, #0]
 8002f58:	b2db      	uxtb	r3, r3
 8002f5a:	3b10      	subs	r3, #16
 8002f5c:	4a14      	ldr	r2, [pc, #80]	@ (8002fb0 <DMA_CalcBaseAndBitshift+0x64>)
 8002f5e:	fba2 2303 	umull	r2, r3, r2, r3
 8002f62:	091b      	lsrs	r3, r3, #4
 8002f64:	60fb      	str	r3, [r7, #12]
  
  /* lookup table for necessary bitshift of flags within status registers */
  static const uint8_t flagBitshiftOffset[8U] = {0U, 6U, 16U, 22U, 0U, 6U, 16U, 22U};
  hdma->StreamIndex = flagBitshiftOffset[stream_number];
 8002f66:	4a13      	ldr	r2, [pc, #76]	@ (8002fb4 <DMA_CalcBaseAndBitshift+0x68>)
 8002f68:	68fb      	ldr	r3, [r7, #12]
 8002f6a:	4413      	add	r3, r2
 8002f6c:	781b      	ldrb	r3, [r3, #0]
 8002f6e:	461a      	mov	r2, r3
 8002f70:	687b      	ldr	r3, [r7, #4]
 8002f72:	65da      	str	r2, [r3, #92]	@ 0x5c
  
  if (stream_number > 3U)
 8002f74:	68fb      	ldr	r3, [r7, #12]
 8002f76:	2b03      	cmp	r3, #3
 8002f78:	d909      	bls.n	8002f8e <DMA_CalcBaseAndBitshift+0x42>
  {
    /* return pointer to HISR and HIFCR */
    hdma->StreamBaseAddress = (((uint32_t)hdma->Instance & (uint32_t)(~0x3FFU)) + 4U);
 8002f7a:	687b      	ldr	r3, [r7, #4]
 8002f7c:	681b      	ldr	r3, [r3, #0]
 8002f7e:	f423 737f 	bic.w	r3, r3, #1020	@ 0x3fc
 8002f82:	f023 0303 	bic.w	r3, r3, #3
 8002f86:	1d1a      	adds	r2, r3, #4
 8002f88:	687b      	ldr	r3, [r7, #4]
 8002f8a:	659a      	str	r2, [r3, #88]	@ 0x58
 8002f8c:	e007      	b.n	8002f9e <DMA_CalcBaseAndBitshift+0x52>
  }
  else
  {
    /* return pointer to LISR and LIFCR */
    hdma->StreamBaseAddress = ((uint32_t)hdma->Instance & (uint32_t)(~0x3FFU));
 8002f8e:	687b      	ldr	r3, [r7, #4]
 8002f90:	681b      	ldr	r3, [r3, #0]
 8002f92:	f423 737f 	bic.w	r3, r3, #1020	@ 0x3fc
 8002f96:	f023 0303 	bic.w	r3, r3, #3
 8002f9a:	687a      	ldr	r2, [r7, #4]
 8002f9c:	6593      	str	r3, [r2, #88]	@ 0x58
  }
  
  return hdma->StreamBaseAddress;
 8002f9e:	687b      	ldr	r3, [r7, #4]
 8002fa0:	6d9b      	ldr	r3, [r3, #88]	@ 0x58
}
 8002fa2:	4618      	mov	r0, r3
 8002fa4:	3714      	adds	r7, #20
 8002fa6:	46bd      	mov	sp, r7
 8002fa8:	f85d 7b04 	ldr.w	r7, [sp], #4
 8002fac:	4770      	bx	lr
 8002fae:	bf00      	nop
 8002fb0:	aaaaaaab 	.word	0xaaaaaaab
 8002fb4:	080228c8 	.word	0x080228c8

08002fb8 <DMA_CheckFifoParam>:
  * @param  hdma       pointer to a DMA_HandleTypeDef structure that contains
  *                     the configuration information for the specified DMA Stream. 
  * @retval HAL status
  */
static HAL_StatusTypeDef DMA_CheckFifoParam(DMA_HandleTypeDef *hdma)
{
 8002fb8:	b480      	push	{r7}
 8002fba:	b085      	sub	sp, #20
 8002fbc:	af00      	add	r7, sp, #0
 8002fbe:	6078      	str	r0, [r7, #4]
  HAL_StatusTypeDef status = HAL_OK;
 8002fc0:	2300      	movs	r3, #0
 8002fc2:	73fb      	strb	r3, [r7, #15]
  uint32_t tmp = hdma->Init.FIFOThreshold;
 8002fc4:	687b      	ldr	r3, [r7, #4]
 8002fc6:	6a9b      	ldr	r3, [r3, #40]	@ 0x28
 8002fc8:	60bb      	str	r3, [r7, #8]
  
  /* Memory Data size equal to Byte */
  if(hdma->Init.MemDataAlignment == DMA_MDATAALIGN_BYTE)
 8002fca:	687b      	ldr	r3, [r7, #4]
 8002fcc:	699b      	ldr	r3, [r3, #24]
 8002fce:	2b00      	cmp	r3, #0
 8002fd0:	d11f      	bne.n	8003012 <DMA_CheckFifoParam+0x5a>
  {
    switch (tmp)
 8002fd2:	68bb      	ldr	r3, [r7, #8]
 8002fd4:	2b03      	cmp	r3, #3
 8002fd6:	d856      	bhi.n	8003086 <DMA_CheckFifoParam+0xce>
 8002fd8:	a201      	add	r2, pc, #4	@ (adr r2, 8002fe0 <DMA_CheckFifoParam+0x28>)
 8002fda:	f852 f023 	ldr.w	pc, [r2, r3, lsl #2]
 8002fde:	bf00      	nop
 8002fe0:	08002ff1 	.word	0x08002ff1
 8002fe4:	08003003 	.word	0x08003003
 8002fe8:	08002ff1 	.word	0x08002ff1
 8002fec:	08003087 	.word	0x08003087
    {
    case DMA_FIFO_THRESHOLD_1QUARTERFULL:
    case DMA_FIFO_THRESHOLD_3QUARTERSFULL:
      if ((hdma->Init.MemBurst & DMA_SxCR_MBURST_1) == DMA_SxCR_MBURST_1)
 8002ff0:	687b      	ldr	r3, [r7, #4]
 8002ff2:	6adb      	ldr	r3, [r3, #44]	@ 0x2c
 8002ff4:	f003 7380 	and.w	r3, r3, #16777216	@ 0x1000000
 8002ff8:	2b00      	cmp	r3, #0
 8002ffa:	d046      	beq.n	800308a <DMA_CheckFifoParam+0xd2>
      {
        status = HAL_ERROR;
 8002ffc:	2301      	movs	r3, #1
 8002ffe:	73fb      	strb	r3, [r7, #15]
      }
      break;
 8003000:	e043      	b.n	800308a <DMA_CheckFifoParam+0xd2>
    case DMA_FIFO_THRESHOLD_HALFFULL:
      if (hdma->Init.MemBurst == DMA_MBURST_INC16)
 8003002:	687b      	ldr	r3, [r7, #4]
 8003004:	6adb      	ldr	r3, [r3, #44]	@ 0x2c
 8003006:	f1b3 7fc0 	cmp.w	r3, #25165824	@ 0x1800000
 800300a:	d140      	bne.n	800308e <DMA_CheckFifoParam+0xd6>
      {
        status = HAL_ERROR;
 800300c:	2301      	movs	r3, #1
 800300e:	73fb      	strb	r3, [r7, #15]
      }
      break;
 8003010:	e03d      	b.n	800308e <DMA_CheckFifoParam+0xd6>
      break;
    }
  }
  
  /* Memory Data size equal to Half-Word */
  else if (hdma->Init.MemDataAlignment == DMA_MDATAALIGN_HALFWORD)
 8003012:	687b      	ldr	r3, [r7, #4]
 8003014:	699b      	ldr	r3, [r3, #24]
 8003016:	f5b3 5f00 	cmp.w	r3, #8192	@ 0x2000
 800301a:	d121      	bne.n	8003060 <DMA_CheckFifoParam+0xa8>
  {
    switch (tmp)
 800301c:	68bb      	ldr	r3, [r7, #8]
 800301e:	2b03      	cmp	r3, #3
 8003020:	d837      	bhi.n	8003092 <DMA_CheckFifoParam+0xda>
 8003022:	a201      	add	r2, pc, #4	@ (adr r2, 8003028 <DMA_CheckFifoParam+0x70>)
 8003024:	f852 f023 	ldr.w	pc, [r2, r3, lsl #2]
 8003028:	08003039 	.word	0x08003039
 800302c:	0800303f 	.word	0x0800303f
 8003030:	08003039 	.word	0x08003039
 8003034:	08003051 	.word	0x08003051
    {
    case DMA_FIFO_THRESHOLD_1QUARTERFULL:
    case DMA_FIFO_THRESHOLD_3QUARTERSFULL:
      status = HAL_ERROR;
 8003038:	2301      	movs	r3, #1
 800303a:	73fb      	strb	r3, [r7, #15]
      break;
 800303c:	e030      	b.n	80030a0 <DMA_CheckFifoParam+0xe8>
    case DMA_FIFO_THRESHOLD_HALFFULL:
      if ((hdma->Init.MemBurst & DMA_SxCR_MBURST_1) == DMA_SxCR_MBURST_1)
 800303e:	687b      	ldr	r3, [r7, #4]
 8003040:	6adb      	ldr	r3, [r3, #44]	@ 0x2c
 8003042:	f003 7380 	and.w	r3, r3, #16777216	@ 0x1000000
 8003046:	2b00      	cmp	r3, #0
 8003048:	d025      	beq.n	8003096 <DMA_CheckFifoParam+0xde>
      {
        status = HAL_ERROR;
 800304a:	2301      	movs	r3, #1
 800304c:	73fb      	strb	r3, [r7, #15]
      }
      break;
 800304e:	e022      	b.n	8003096 <DMA_CheckFifoParam+0xde>
    case DMA_FIFO_THRESHOLD_FULL:
      if (hdma->Init.MemBurst == DMA_MBURST_INC16)
 8003050:	687b      	ldr	r3, [r7, #4]
 8003052:	6adb      	ldr	r3, [r3, #44]	@ 0x2c
 8003054:	f1b3 7fc0 	cmp.w	r3, #25165824	@ 0x1800000
 8003058:	d11f      	bne.n	800309a <DMA_CheckFifoParam+0xe2>
      {
        status = HAL_ERROR;
 800305a:	2301      	movs	r3, #1
 800305c:	73fb      	strb	r3, [r7, #15]
      }
      break;   
 800305e:	e01c      	b.n	800309a <DMA_CheckFifoParam+0xe2>
  }
  
  /* Memory Data size equal to Word */
  else
  {
    switch (tmp)
 8003060:	68bb      	ldr	r3, [r7, #8]
 8003062:	2b02      	cmp	r3, #2
 8003064:	d903      	bls.n	800306e <DMA_CheckFifoParam+0xb6>
 8003066:	68bb      	ldr	r3, [r7, #8]
 8003068:	2b03      	cmp	r3, #3
 800306a:	d003      	beq.n	8003074 <DMA_CheckFifoParam+0xbc>
      {
        status = HAL_ERROR;
      }
      break;
    default:
      break;
 800306c:	e018      	b.n	80030a0 <DMA_CheckFifoParam+0xe8>
      status = HAL_ERROR;
 800306e:	2301      	movs	r3, #1
 8003070:	73fb      	strb	r3, [r7, #15]
      break;
 8003072:	e015      	b.n	80030a0 <DMA_CheckFifoParam+0xe8>
      if ((hdma->Init.MemBurst & DMA_SxCR_MBURST_1) == DMA_SxCR_MBURST_1)
 8003074:	687b      	ldr	r3, [r7, #4]
 8003076:	6adb      	ldr	r3, [r3, #44]	@ 0x2c
 8003078:	f003 7380 	and.w	r3, r3, #16777216	@ 0x1000000
 800307c:	2b00      	cmp	r3, #0
 800307e:	d00e      	beq.n	800309e <DMA_CheckFifoParam+0xe6>
        status = HAL_ERROR;
 8003080:	2301      	movs	r3, #1
 8003082:	73fb      	strb	r3, [r7, #15]
      break;
 8003084:	e00b      	b.n	800309e <DMA_CheckFifoParam+0xe6>
      break;
 8003086:	bf00      	nop
 8003088:	e00a      	b.n	80030a0 <DMA_CheckFifoParam+0xe8>
      break;
 800308a:	bf00      	nop
 800308c:	e008      	b.n	80030a0 <DMA_CheckFifoParam+0xe8>
      break;
 800308e:	bf00      	nop
 8003090:	e006      	b.n	80030a0 <DMA_CheckFifoParam+0xe8>
      break;
 8003092:	bf00      	nop
 8003094:	e004      	b.n	80030a0 <DMA_CheckFifoParam+0xe8>
      break;
 8003096:	bf00      	nop
 8003098:	e002      	b.n	80030a0 <DMA_CheckFifoParam+0xe8>
      break;   
 800309a:	bf00      	nop
 800309c:	e000      	b.n	80030a0 <DMA_CheckFifoParam+0xe8>
      break;
 800309e:	bf00      	nop
    }
  } 
  
  return status; 
 80030a0:	7bfb      	ldrb	r3, [r7, #15]
}
 80030a2:	4618      	mov	r0, r3
 80030a4:	3714      	adds	r7, #20
 80030a6:	46bd      	mov	sp, r7
 80030a8:	f85d 7b04 	ldr.w	r7, [sp], #4
 80030ac:	4770      	bx	lr
 80030ae:	bf00      	nop

080030b0 <HAL_GPIO_Init>:
  * @param  GPIO_Init pointer to a GPIO_InitTypeDef structure that contains
  *         the configuration information for the specified GPIO peripheral.
  * @retval None
  */
void HAL_GPIO_Init(GPIO_TypeDef  *GPIOx, GPIO_InitTypeDef *GPIO_Init)
{
 80030b0:	b480      	push	{r7}
 80030b2:	b089      	sub	sp, #36	@ 0x24
 80030b4:	af00      	add	r7, sp, #0
 80030b6:	6078      	str	r0, [r7, #4]
 80030b8:	6039      	str	r1, [r7, #0]
  uint32_t position;
  uint32_t ioposition = 0x00U;
 80030ba:	2300      	movs	r3, #0
 80030bc:	617b      	str	r3, [r7, #20]
  uint32_t iocurrent = 0x00U;
 80030be:	2300      	movs	r3, #0
 80030c0:	613b      	str	r3, [r7, #16]
  uint32_t temp = 0x00U;
 80030c2:	2300      	movs	r3, #0
 80030c4:	61bb      	str	r3, [r7, #24]
  assert_param(IS_GPIO_ALL_INSTANCE(GPIOx));
  assert_param(IS_GPIO_PIN(GPIO_Init->Pin));
  assert_param(IS_GPIO_MODE(GPIO_Init->Mode));

  /* Configure the port pins */
  for(position = 0U; position < GPIO_NUMBER; position++)
 80030c6:	2300      	movs	r3, #0
 80030c8:	61fb      	str	r3, [r7, #28]
 80030ca:	e165      	b.n	8003398 <HAL_GPIO_Init+0x2e8>
  {
    /* Get the IO position */
    ioposition = 0x01U << position;
 80030cc:	2201      	movs	r2, #1
 80030ce:	69fb      	ldr	r3, [r7, #28]
 80030d0:	fa02 f303 	lsl.w	r3, r2, r3
 80030d4:	617b      	str	r3, [r7, #20]
    /* Get the current IO position */
    iocurrent = (uint32_t)(GPIO_Init->Pin) & ioposition;
 80030d6:	683b      	ldr	r3, [r7, #0]
 80030d8:	681b      	ldr	r3, [r3, #0]
 80030da:	697a      	ldr	r2, [r7, #20]
 80030dc:	4013      	ands	r3, r2
 80030de:	613b      	str	r3, [r7, #16]

    if(iocurrent == ioposition)
 80030e0:	693a      	ldr	r2, [r7, #16]
 80030e2:	697b      	ldr	r3, [r7, #20]
 80030e4:	429a      	cmp	r2, r3
 80030e6:	f040 8154 	bne.w	8003392 <HAL_GPIO_Init+0x2e2>
    {
      /*--------------------- GPIO Mode Configuration ------------------------*/
      /* In case of Output or Alternate function mode selection */
      if(((GPIO_Init->Mode & GPIO_MODE) == MODE_OUTPUT) || \
 80030ea:	683b      	ldr	r3, [r7, #0]
 80030ec:	685b      	ldr	r3, [r3, #4]
 80030ee:	f003 0303 	and.w	r3, r3, #3
 80030f2:	2b01      	cmp	r3, #1
 80030f4:	d005      	beq.n	8003102 <HAL_GPIO_Init+0x52>
          (GPIO_Init->Mode & GPIO_MODE) == MODE_AF)
 80030f6:	683b      	ldr	r3, [r7, #0]
 80030f8:	685b      	ldr	r3, [r3, #4]
 80030fa:	f003 0303 	and.w	r3, r3, #3
      if(((GPIO_Init->Mode & GPIO_MODE) == MODE_OUTPUT) || \
 80030fe:	2b02      	cmp	r3, #2
 8003100:	d130      	bne.n	8003164 <HAL_GPIO_Init+0xb4>
      {
        /* Check the Speed parameter */
        assert_param(IS_GPIO_SPEED(GPIO_Init->Speed));
        /* Configure the IO Speed */
        temp = GPIOx->OSPEEDR; 
 8003102:	687b      	ldr	r3, [r7, #4]
 8003104:	689b      	ldr	r3, [r3, #8]
 8003106:	61bb      	str	r3, [r7, #24]
        temp &= ~(GPIO_OSPEEDER_OSPEEDR0 << (position * 2U));
 8003108:	69fb      	ldr	r3, [r7, #28]
 800310a:	005b      	lsls	r3, r3, #1
 800310c:	2203      	movs	r2, #3
 800310e:	fa02 f303 	lsl.w	r3, r2, r3
 8003112:	43db      	mvns	r3, r3
 8003114:	69ba      	ldr	r2, [r7, #24]
 8003116:	4013      	ands	r3, r2
 8003118:	61bb      	str	r3, [r7, #24]
        temp |= (GPIO_Init->Speed << (position * 2U));
 800311a:	683b      	ldr	r3, [r7, #0]
 800311c:	68da      	ldr	r2, [r3, #12]
 800311e:	69fb      	ldr	r3, [r7, #28]
 8003120:	005b      	lsls	r3, r3, #1
 8003122:	fa02 f303 	lsl.w	r3, r2, r3
 8003126:	69ba      	ldr	r2, [r7, #24]
 8003128:	4313      	orrs	r3, r2
 800312a:	61bb      	str	r3, [r7, #24]
        GPIOx->OSPEEDR = temp;
 800312c:	687b      	ldr	r3, [r7, #4]
 800312e:	69ba      	ldr	r2, [r7, #24]
 8003130:	609a      	str	r2, [r3, #8]

        /* Configure the IO Output Type */
        temp = GPIOx->OTYPER;
 8003132:	687b      	ldr	r3, [r7, #4]
 8003134:	685b      	ldr	r3, [r3, #4]
 8003136:	61bb      	str	r3, [r7, #24]
        temp &= ~(GPIO_OTYPER_OT_0 << position) ;
 8003138:	2201      	movs	r2, #1
 800313a:	69fb      	ldr	r3, [r7, #28]
 800313c:	fa02 f303 	lsl.w	r3, r2, r3
 8003140:	43db      	mvns	r3, r3
 8003142:	69ba      	ldr	r2, [r7, #24]
 8003144:	4013      	ands	r3, r2
 8003146:	61bb      	str	r3, [r7, #24]
        temp |= (((GPIO_Init->Mode & OUTPUT_TYPE) >> OUTPUT_TYPE_Pos) << position);
 8003148:	683b      	ldr	r3, [r7, #0]
 800314a:	685b      	ldr	r3, [r3, #4]
 800314c:	091b      	lsrs	r3, r3, #4
 800314e:	f003 0201 	and.w	r2, r3, #1
 8003152:	69fb      	ldr	r3, [r7, #28]
 8003154:	fa02 f303 	lsl.w	r3, r2, r3
 8003158:	69ba      	ldr	r2, [r7, #24]
 800315a:	4313      	orrs	r3, r2
 800315c:	61bb      	str	r3, [r7, #24]
        GPIOx->OTYPER = temp;
 800315e:	687b      	ldr	r3, [r7, #4]
 8003160:	69ba      	ldr	r2, [r7, #24]
 8003162:	605a      	str	r2, [r3, #4]
       }

      if((GPIO_Init->Mode & GPIO_MODE) != MODE_ANALOG)
 8003164:	683b      	ldr	r3, [r7, #0]
 8003166:	685b      	ldr	r3, [r3, #4]
 8003168:	f003 0303 	and.w	r3, r3, #3
 800316c:	2b03      	cmp	r3, #3
 800316e:	d017      	beq.n	80031a0 <HAL_GPIO_Init+0xf0>
      {
        /* Check the parameters */
        assert_param(IS_GPIO_PULL(GPIO_Init->Pull));
        
        /* Activate the Pull-up or Pull down resistor for the current IO */
        temp = GPIOx->PUPDR;
 8003170:	687b      	ldr	r3, [r7, #4]
 8003172:	68db      	ldr	r3, [r3, #12]
 8003174:	61bb      	str	r3, [r7, #24]
        temp &= ~(GPIO_PUPDR_PUPDR0 << (position * 2U));
 8003176:	69fb      	ldr	r3, [r7, #28]
 8003178:	005b      	lsls	r3, r3, #1
 800317a:	2203      	movs	r2, #3
 800317c:	fa02 f303 	lsl.w	r3, r2, r3
 8003180:	43db      	mvns	r3, r3
 8003182:	69ba      	ldr	r2, [r7, #24]
 8003184:	4013      	ands	r3, r2
 8003186:	61bb      	str	r3, [r7, #24]
        temp |= ((GPIO_Init->Pull) << (position * 2U));
 8003188:	683b      	ldr	r3, [r7, #0]
 800318a:	689a      	ldr	r2, [r3, #8]
 800318c:	69fb      	ldr	r3, [r7, #28]
 800318e:	005b      	lsls	r3, r3, #1
 8003190:	fa02 f303 	lsl.w	r3, r2, r3
 8003194:	69ba      	ldr	r2, [r7, #24]
 8003196:	4313      	orrs	r3, r2
 8003198:	61bb      	str	r3, [r7, #24]
        GPIOx->PUPDR = temp;
 800319a:	687b      	ldr	r3, [r7, #4]
 800319c:	69ba      	ldr	r2, [r7, #24]
 800319e:	60da      	str	r2, [r3, #12]
      }

      /* In case of Alternate function mode selection */
      if((GPIO_Init->Mode & GPIO_MODE) == MODE_AF)
 80031a0:	683b      	ldr	r3, [r7, #0]
 80031a2:	685b      	ldr	r3, [r3, #4]
 80031a4:	f003 0303 	and.w	r3, r3, #3
 80031a8:	2b02      	cmp	r3, #2
 80031aa:	d123      	bne.n	80031f4 <HAL_GPIO_Init+0x144>
      {
        /* Check the Alternate function parameter */
        assert_param(IS_GPIO_AF(GPIO_Init->Alternate));
        /* Configure Alternate function mapped with the current IO */
        temp = GPIOx->AFR[position >> 3U];
 80031ac:	69fb      	ldr	r3, [r7, #28]
 80031ae:	08da      	lsrs	r2, r3, #3
 80031b0:	687b      	ldr	r3, [r7, #4]
 80031b2:	3208      	adds	r2, #8
 80031b4:	f853 3022 	ldr.w	r3, [r3, r2, lsl #2]
 80031b8:	61bb      	str	r3, [r7, #24]
        temp &= ~(0xFU << ((uint32_t)(position & 0x07U) * 4U)) ;
 80031ba:	69fb      	ldr	r3, [r7, #28]
 80031bc:	f003 0307 	and.w	r3, r3, #7
 80031c0:	009b      	lsls	r3, r3, #2
 80031c2:	220f      	movs	r2, #15
 80031c4:	fa02 f303 	lsl.w	r3, r2, r3
 80031c8:	43db      	mvns	r3, r3
 80031ca:	69ba      	ldr	r2, [r7, #24]
 80031cc:	4013      	ands	r3, r2
 80031ce:	61bb      	str	r3, [r7, #24]
        temp |= ((uint32_t)(GPIO_Init->Alternate) << (((uint32_t)position & 0x07U) * 4U));
 80031d0:	683b      	ldr	r3, [r7, #0]
 80031d2:	691a      	ldr	r2, [r3, #16]
 80031d4:	69fb      	ldr	r3, [r7, #28]
 80031d6:	f003 0307 	and.w	r3, r3, #7
 80031da:	009b      	lsls	r3, r3, #2
 80031dc:	fa02 f303 	lsl.w	r3, r2, r3
 80031e0:	69ba      	ldr	r2, [r7, #24]
 80031e2:	4313      	orrs	r3, r2
 80031e4:	61bb      	str	r3, [r7, #24]
        GPIOx->AFR[position >> 3U] = temp;
 80031e6:	69fb      	ldr	r3, [r7, #28]
 80031e8:	08da      	lsrs	r2, r3, #3
 80031ea:	687b      	ldr	r3, [r7, #4]
 80031ec:	3208      	adds	r2, #8
 80031ee:	69b9      	ldr	r1, [r7, #24]
 80031f0:	f843 1022 	str.w	r1, [r3, r2, lsl #2]
      }

      /* Configure IO Direction mode (Input, Output, Alternate or Analog) */
      temp = GPIOx->MODER;
 80031f4:	687b      	ldr	r3, [r7, #4]
 80031f6:	681b      	ldr	r3, [r3, #0]
 80031f8:	61bb      	str	r3, [r7, #24]
      temp &= ~(GPIO_MODER_MODER0 << (position * 2U));
 80031fa:	69fb      	ldr	r3, [r7, #28]
 80031fc:	005b      	lsls	r3, r3, #1
 80031fe:	2203      	movs	r2, #3
 8003200:	fa02 f303 	lsl.w	r3, r2, r3
 8003204:	43db      	mvns	r3, r3
 8003206:	69ba      	ldr	r2, [r7, #24]
 8003208:	4013      	ands	r3, r2
 800320a:	61bb      	str	r3, [r7, #24]
      temp |= ((GPIO_Init->Mode & GPIO_MODE) << (position * 2U));
 800320c:	683b      	ldr	r3, [r7, #0]
 800320e:	685b      	ldr	r3, [r3, #4]
 8003210:	f003 0203 	and.w	r2, r3, #3
 8003214:	69fb      	ldr	r3, [r7, #28]
 8003216:	005b      	lsls	r3, r3, #1
 8003218:	fa02 f303 	lsl.w	r3, r2, r3
 800321c:	69ba      	ldr	r2, [r7, #24]
 800321e:	4313      	orrs	r3, r2
 8003220:	61bb      	str	r3, [r7, #24]
      GPIOx->MODER = temp;
 8003222:	687b      	ldr	r3, [r7, #4]
 8003224:	69ba      	ldr	r2, [r7, #24]
 8003226:	601a      	str	r2, [r3, #0]

      /*--------------------- EXTI Mode Configuration ------------------------*/
      /* Configure the External Interrupt or event for the current IO */
      if((GPIO_Init->Mode & EXTI_MODE) != 0x00U)
 8003228:	683b      	ldr	r3, [r7, #0]
 800322a:	685b      	ldr	r3, [r3, #4]
 800322c:	f403 3340 	and.w	r3, r3, #196608	@ 0x30000
 8003230:	2b00      	cmp	r3, #0
 8003232:	f000 80ae 	beq.w	8003392 <HAL_GPIO_Init+0x2e2>
      {
        /* Enable SYSCFG Clock */
        __HAL_RCC_SYSCFG_CLK_ENABLE();
 8003236:	2300      	movs	r3, #0
 8003238:	60fb      	str	r3, [r7, #12]
 800323a:	4b5d      	ldr	r3, [pc, #372]	@ (80033b0 <HAL_GPIO_Init+0x300>)
 800323c:	6c5b      	ldr	r3, [r3, #68]	@ 0x44
 800323e:	4a5c      	ldr	r2, [pc, #368]	@ (80033b0 <HAL_GPIO_Init+0x300>)
 8003240:	f443 4380 	orr.w	r3, r3, #16384	@ 0x4000
 8003244:	6453      	str	r3, [r2, #68]	@ 0x44
 8003246:	4b5a      	ldr	r3, [pc, #360]	@ (80033b0 <HAL_GPIO_Init+0x300>)
 8003248:	6c5b      	ldr	r3, [r3, #68]	@ 0x44
 800324a:	f403 4380 	and.w	r3, r3, #16384	@ 0x4000
 800324e:	60fb      	str	r3, [r7, #12]
 8003250:	68fb      	ldr	r3, [r7, #12]

        temp = SYSCFG->EXTICR[position >> 2U];
 8003252:	4a58      	ldr	r2, [pc, #352]	@ (80033b4 <HAL_GPIO_Init+0x304>)
 8003254:	69fb      	ldr	r3, [r7, #28]
 8003256:	089b      	lsrs	r3, r3, #2
 8003258:	3302      	adds	r3, #2
 800325a:	f852 3023 	ldr.w	r3, [r2, r3, lsl #2]
 800325e:	61bb      	str	r3, [r7, #24]
        temp &= ~(0x0FU << (4U * (position & 0x03U)));
 8003260:	69fb      	ldr	r3, [r7, #28]
 8003262:	f003 0303 	and.w	r3, r3, #3
 8003266:	009b      	lsls	r3, r3, #2
 8003268:	220f      	movs	r2, #15
 800326a:	fa02 f303 	lsl.w	r3, r2, r3
 800326e:	43db      	mvns	r3, r3
 8003270:	69ba      	ldr	r2, [r7, #24]
 8003272:	4013      	ands	r3, r2
 8003274:	61bb      	str	r3, [r7, #24]
        temp |= ((uint32_t)(GPIO_GET_INDEX(GPIOx)) << (4U * (position & 0x03U)));
 8003276:	687b      	ldr	r3, [r7, #4]
 8003278:	4a4f      	ldr	r2, [pc, #316]	@ (80033b8 <HAL_GPIO_Init+0x308>)
 800327a:	4293      	cmp	r3, r2
 800327c:	d025      	beq.n	80032ca <HAL_GPIO_Init+0x21a>
 800327e:	687b      	ldr	r3, [r7, #4]
 8003280:	4a4e      	ldr	r2, [pc, #312]	@ (80033bc <HAL_GPIO_Init+0x30c>)
 8003282:	4293      	cmp	r3, r2
 8003284:	d01f      	beq.n	80032c6 <HAL_GPIO_Init+0x216>
 8003286:	687b      	ldr	r3, [r7, #4]
 8003288:	4a4d      	ldr	r2, [pc, #308]	@ (80033c0 <HAL_GPIO_Init+0x310>)
 800328a:	4293      	cmp	r3, r2
 800328c:	d019      	beq.n	80032c2 <HAL_GPIO_Init+0x212>
 800328e:	687b      	ldr	r3, [r7, #4]
 8003290:	4a4c      	ldr	r2, [pc, #304]	@ (80033c4 <HAL_GPIO_Init+0x314>)
 8003292:	4293      	cmp	r3, r2
 8003294:	d013      	beq.n	80032be <HAL_GPIO_Init+0x20e>
 8003296:	687b      	ldr	r3, [r7, #4]
 8003298:	4a4b      	ldr	r2, [pc, #300]	@ (80033c8 <HAL_GPIO_Init+0x318>)
 800329a:	4293      	cmp	r3, r2
 800329c:	d00d      	beq.n	80032ba <HAL_GPIO_Init+0x20a>
 800329e:	687b      	ldr	r3, [r7, #4]
 80032a0:	4a4a      	ldr	r2, [pc, #296]	@ (80033cc <HAL_GPIO_Init+0x31c>)
 80032a2:	4293      	cmp	r3, r2
 80032a4:	d007      	beq.n	80032b6 <HAL_GPIO_Init+0x206>
 80032a6:	687b      	ldr	r3, [r7, #4]
 80032a8:	4a49      	ldr	r2, [pc, #292]	@ (80033d0 <HAL_GPIO_Init+0x320>)
 80032aa:	4293      	cmp	r3, r2
 80032ac:	d101      	bne.n	80032b2 <HAL_GPIO_Init+0x202>
 80032ae:	2306      	movs	r3, #6
 80032b0:	e00c      	b.n	80032cc <HAL_GPIO_Init+0x21c>
 80032b2:	2307      	movs	r3, #7
 80032b4:	e00a      	b.n	80032cc <HAL_GPIO_Init+0x21c>
 80032b6:	2305      	movs	r3, #5
 80032b8:	e008      	b.n	80032cc <HAL_GPIO_Init+0x21c>
 80032ba:	2304      	movs	r3, #4
 80032bc:	e006      	b.n	80032cc <HAL_GPIO_Init+0x21c>
 80032be:	2303      	movs	r3, #3
 80032c0:	e004      	b.n	80032cc <HAL_GPIO_Init+0x21c>
 80032c2:	2302      	movs	r3, #2
 80032c4:	e002      	b.n	80032cc <HAL_GPIO_Init+0x21c>
 80032c6:	2301      	movs	r3, #1
 80032c8:	e000      	b.n	80032cc <HAL_GPIO_Init+0x21c>
 80032ca:	2300      	movs	r3, #0
 80032cc:	69fa      	ldr	r2, [r7, #28]
 80032ce:	f002 0203 	and.w	r2, r2, #3
 80032d2:	0092      	lsls	r2, r2, #2
 80032d4:	4093      	lsls	r3, r2
 80032d6:	69ba      	ldr	r2, [r7, #24]
 80032d8:	4313      	orrs	r3, r2
 80032da:	61bb      	str	r3, [r7, #24]
        SYSCFG->EXTICR[position >> 2U] = temp;
 80032dc:	4935      	ldr	r1, [pc, #212]	@ (80033b4 <HAL_GPIO_Init+0x304>)
 80032de:	69fb      	ldr	r3, [r7, #28]
 80032e0:	089b      	lsrs	r3, r3, #2
 80032e2:	3302      	adds	r3, #2
 80032e4:	69ba      	ldr	r2, [r7, #24]
 80032e6:	f841 2023 	str.w	r2, [r1, r3, lsl #2]

        /* Clear Rising Falling edge configuration */
        temp = EXTI->RTSR;
 80032ea:	4b3a      	ldr	r3, [pc, #232]	@ (80033d4 <HAL_GPIO_Init+0x324>)
 80032ec:	689b      	ldr	r3, [r3, #8]
 80032ee:	61bb      	str	r3, [r7, #24]
        temp &= ~((uint32_t)iocurrent);
 80032f0:	693b      	ldr	r3, [r7, #16]
 80032f2:	43db      	mvns	r3, r3
 80032f4:	69ba      	ldr	r2, [r7, #24]
 80032f6:	4013      	ands	r3, r2
 80032f8:	61bb      	str	r3, [r7, #24]
        if((GPIO_Init->Mode & TRIGGER_RISING) != 0x00U)
 80032fa:	683b      	ldr	r3, [r7, #0]
 80032fc:	685b      	ldr	r3, [r3, #4]
 80032fe:	f403 1380 	and.w	r3, r3, #1048576	@ 0x100000
 8003302:	2b00      	cmp	r3, #0
 8003304:	d003      	beq.n	800330e <HAL_GPIO_Init+0x25e>
        {
          temp |= iocurrent;
 8003306:	69ba      	ldr	r2, [r7, #24]
 8003308:	693b      	ldr	r3, [r7, #16]
 800330a:	4313      	orrs	r3, r2
 800330c:	61bb      	str	r3, [r7, #24]
        }
        EXTI->RTSR = temp;
 800330e:	4a31      	ldr	r2, [pc, #196]	@ (80033d4 <HAL_GPIO_Init+0x324>)
 8003310:	69bb      	ldr	r3, [r7, #24]
 8003312:	6093      	str	r3, [r2, #8]

        temp = EXTI->FTSR;
 8003314:	4b2f      	ldr	r3, [pc, #188]	@ (80033d4 <HAL_GPIO_Init+0x324>)
 8003316:	68db      	ldr	r3, [r3, #12]
 8003318:	61bb      	str	r3, [r7, #24]
        temp &= ~((uint32_t)iocurrent);
 800331a:	693b      	ldr	r3, [r7, #16]
 800331c:	43db      	mvns	r3, r3
 800331e:	69ba      	ldr	r2, [r7, #24]
 8003320:	4013      	ands	r3, r2
 8003322:	61bb      	str	r3, [r7, #24]
        if((GPIO_Init->Mode & TRIGGER_FALLING) != 0x00U)
 8003324:	683b      	ldr	r3, [r7, #0]
 8003326:	685b      	ldr	r3, [r3, #4]
 8003328:	f403 1300 	and.w	r3, r3, #2097152	@ 0x200000
 800332c:	2b00      	cmp	r3, #0
 800332e:	d003      	beq.n	8003338 <HAL_GPIO_Init+0x288>
        {
          temp |= iocurrent;
 8003330:	69ba      	ldr	r2, [r7, #24]
 8003332:	693b      	ldr	r3, [r7, #16]
 8003334:	4313      	orrs	r3, r2
 8003336:	61bb      	str	r3, [r7, #24]
        }
        EXTI->FTSR = temp;
 8003338:	4a26      	ldr	r2, [pc, #152]	@ (80033d4 <HAL_GPIO_Init+0x324>)
 800333a:	69bb      	ldr	r3, [r7, #24]
 800333c:	60d3      	str	r3, [r2, #12]

        temp = EXTI->EMR;
 800333e:	4b25      	ldr	r3, [pc, #148]	@ (80033d4 <HAL_GPIO_Init+0x324>)
 8003340:	685b      	ldr	r3, [r3, #4]
 8003342:	61bb      	str	r3, [r7, #24]
        temp &= ~((uint32_t)iocurrent);
 8003344:	693b      	ldr	r3, [r7, #16]
 8003346:	43db      	mvns	r3, r3
 8003348:	69ba      	ldr	r2, [r7, #24]
 800334a:	4013      	ands	r3, r2
 800334c:	61bb      	str	r3, [r7, #24]
        if((GPIO_Init->Mode & EXTI_EVT) != 0x00U)
 800334e:	683b      	ldr	r3, [r7, #0]
 8003350:	685b      	ldr	r3, [r3, #4]
 8003352:	f403 3300 	and.w	r3, r3, #131072	@ 0x20000
 8003356:	2b00      	cmp	r3, #0
 8003358:	d003      	beq.n	8003362 <HAL_GPIO_Init+0x2b2>
        {
          temp |= iocurrent;
 800335a:	69ba      	ldr	r2, [r7, #24]
 800335c:	693b      	ldr	r3, [r7, #16]
 800335e:	4313      	orrs	r3, r2
 8003360:	61bb      	str	r3, [r7, #24]
        }
        EXTI->EMR = temp;
 8003362:	4a1c      	ldr	r2, [pc, #112]	@ (80033d4 <HAL_GPIO_Init+0x324>)
 8003364:	69bb      	ldr	r3, [r7, #24]
 8003366:	6053      	str	r3, [r2, #4]

        /* Clear EXTI line configuration */
        temp = EXTI->IMR;
 8003368:	4b1a      	ldr	r3, [pc, #104]	@ (80033d4 <HAL_GPIO_Init+0x324>)
 800336a:	681b      	ldr	r3, [r3, #0]
 800336c:	61bb      	str	r3, [r7, #24]
        temp &= ~((uint32_t)iocurrent);
 800336e:	693b      	ldr	r3, [r7, #16]
 8003370:	43db      	mvns	r3, r3
 8003372:	69ba      	ldr	r2, [r7, #24]
 8003374:	4013      	ands	r3, r2
 8003376:	61bb      	str	r3, [r7, #24]
        if((GPIO_Init->Mode & EXTI_IT) != 0x00U)
 8003378:	683b      	ldr	r3, [r7, #0]
 800337a:	685b      	ldr	r3, [r3, #4]
 800337c:	f403 3380 	and.w	r3, r3, #65536	@ 0x10000
 8003380:	2b00      	cmp	r3, #0
 8003382:	d003      	beq.n	800338c <HAL_GPIO_Init+0x2dc>
        {
          temp |= iocurrent;
 8003384:	69ba      	ldr	r2, [r7, #24]
 8003386:	693b      	ldr	r3, [r7, #16]
 8003388:	4313      	orrs	r3, r2
 800338a:	61bb      	str	r3, [r7, #24]
        }
        EXTI->IMR = temp;
 800338c:	4a11      	ldr	r2, [pc, #68]	@ (80033d4 <HAL_GPIO_Init+0x324>)
 800338e:	69bb      	ldr	r3, [r7, #24]
 8003390:	6013      	str	r3, [r2, #0]
  for(position = 0U; position < GPIO_NUMBER; position++)
 8003392:	69fb      	ldr	r3, [r7, #28]
 8003394:	3301      	adds	r3, #1
 8003396:	61fb      	str	r3, [r7, #28]
 8003398:	69fb      	ldr	r3, [r7, #28]
 800339a:	2b0f      	cmp	r3, #15
 800339c:	f67f ae96 	bls.w	80030cc <HAL_GPIO_Init+0x1c>
      }
    }
  }
}
 80033a0:	bf00      	nop
 80033a2:	bf00      	nop
 80033a4:	3724      	adds	r7, #36	@ 0x24
 80033a6:	46bd      	mov	sp, r7
 80033a8:	f85d 7b04 	ldr.w	r7, [sp], #4
 80033ac:	4770      	bx	lr
 80033ae:	bf00      	nop
 80033b0:	40023800 	.word	0x40023800
 80033b4:	40013800 	.word	0x40013800
 80033b8:	40020000 	.word	0x40020000
 80033bc:	40020400 	.word	0x40020400
 80033c0:	40020800 	.word	0x40020800
 80033c4:	40020c00 	.word	0x40020c00
 80033c8:	40021000 	.word	0x40021000
 80033cc:	40021400 	.word	0x40021400
 80033d0:	40021800 	.word	0x40021800
 80033d4:	40013c00 	.word	0x40013c00

080033d8 <HAL_GPIO_ReadPin>:
  * @param  GPIO_Pin specifies the port bit to read.
  *         This parameter can be GPIO_PIN_x where x can be (0..15).
  * @retval The input port pin value.
  */
GPIO_PinState HAL_GPIO_ReadPin(GPIO_TypeDef* GPIOx, uint16_t GPIO_Pin)
{
 80033d8:	b480      	push	{r7}
 80033da:	b085      	sub	sp, #20
 80033dc:	af00      	add	r7, sp, #0
 80033de:	6078      	str	r0, [r7, #4]
 80033e0:	460b      	mov	r3, r1
 80033e2:	807b      	strh	r3, [r7, #2]
  GPIO_PinState bitstatus;

  /* Check the parameters */
  assert_param(IS_GPIO_PIN(GPIO_Pin));

  if((GPIOx->IDR & GPIO_Pin) != (uint32_t)GPIO_PIN_RESET)
 80033e4:	687b      	ldr	r3, [r7, #4]
 80033e6:	691a      	ldr	r2, [r3, #16]
 80033e8:	887b      	ldrh	r3, [r7, #2]
 80033ea:	4013      	ands	r3, r2
 80033ec:	2b00      	cmp	r3, #0
 80033ee:	d002      	beq.n	80033f6 <HAL_GPIO_ReadPin+0x1e>
  {
    bitstatus = GPIO_PIN_SET;
 80033f0:	2301      	movs	r3, #1
 80033f2:	73fb      	strb	r3, [r7, #15]
 80033f4:	e001      	b.n	80033fa <HAL_GPIO_ReadPin+0x22>
  }
  else
  {
    bitstatus = GPIO_PIN_RESET;
 80033f6:	2300      	movs	r3, #0
 80033f8:	73fb      	strb	r3, [r7, #15]
  }
  return bitstatus;
 80033fa:	7bfb      	ldrb	r3, [r7, #15]
}
 80033fc:	4618      	mov	r0, r3
 80033fe:	3714      	adds	r7, #20
 8003400:	46bd      	mov	sp, r7
 8003402:	f85d 7b04 	ldr.w	r7, [sp], #4
 8003406:	4770      	bx	lr

08003408 <HAL_GPIO_WritePin>:
  *            @arg GPIO_PIN_RESET: to clear the port pin
  *            @arg GPIO_PIN_SET: to set the port pin
  * @retval None
  */
void HAL_GPIO_WritePin(GPIO_TypeDef* GPIOx, uint16_t GPIO_Pin, GPIO_PinState PinState)
{
 8003408:	b480      	push	{r7}
 800340a:	b083      	sub	sp, #12
 800340c:	af00      	add	r7, sp, #0
 800340e:	6078      	str	r0, [r7, #4]
 8003410:	460b      	mov	r3, r1
 8003412:	807b      	strh	r3, [r7, #2]
 8003414:	4613      	mov	r3, r2
 8003416:	707b      	strb	r3, [r7, #1]
  /* Check the parameters */
  assert_param(IS_GPIO_PIN(GPIO_Pin));
  assert_param(IS_GPIO_PIN_ACTION(PinState));

  if(PinState != GPIO_PIN_RESET)
 8003418:	787b      	ldrb	r3, [r7, #1]
 800341a:	2b00      	cmp	r3, #0
 800341c:	d003      	beq.n	8003426 <HAL_GPIO_WritePin+0x1e>
  {
    GPIOx->BSRR = GPIO_Pin;
 800341e:	887a      	ldrh	r2, [r7, #2]
 8003420:	687b      	ldr	r3, [r7, #4]
 8003422:	619a      	str	r2, [r3, #24]
  }
  else
  {
    GPIOx->BSRR = (uint32_t)GPIO_Pin << 16U;
  }
}
 8003424:	e003      	b.n	800342e <HAL_GPIO_WritePin+0x26>
    GPIOx->BSRR = (uint32_t)GPIO_Pin << 16U;
 8003426:	887b      	ldrh	r3, [r7, #2]
 8003428:	041a      	lsls	r2, r3, #16
 800342a:	687b      	ldr	r3, [r7, #4]
 800342c:	619a      	str	r2, [r3, #24]
}
 800342e:	bf00      	nop
 8003430:	370c      	adds	r7, #12
 8003432:	46bd      	mov	sp, r7
 8003434:	f85d 7b04 	ldr.w	r7, [sp], #4
 8003438:	4770      	bx	lr

0800343a <HAL_GPIO_TogglePin>:
  *                      x can be (A..I) to select the GPIO peripheral for STM32F40XX and STM32F427X devices.
  * @param  GPIO_Pin Specifies the pins to be toggled.
  * @retval None
  */
void HAL_GPIO_TogglePin(GPIO_TypeDef* GPIOx, uint16_t GPIO_Pin)
{
 800343a:	b480      	push	{r7}
 800343c:	b085      	sub	sp, #20
 800343e:	af00      	add	r7, sp, #0
 8003440:	6078      	str	r0, [r7, #4]
 8003442:	460b      	mov	r3, r1
 8003444:	807b      	strh	r3, [r7, #2]

  /* Check the parameters */
  assert_param(IS_GPIO_PIN(GPIO_Pin));

  /* get current Output Data Register value */
  odr = GPIOx->ODR;
 8003446:	687b      	ldr	r3, [r7, #4]
 8003448:	695b      	ldr	r3, [r3, #20]
 800344a:	60fb      	str	r3, [r7, #12]

  /* Set selected pins that were at low level, and reset ones that were high */
  GPIOx->BSRR = ((odr & GPIO_Pin) << GPIO_NUMBER) | (~odr & GPIO_Pin);
 800344c:	887a      	ldrh	r2, [r7, #2]
 800344e:	68fb      	ldr	r3, [r7, #12]
 8003450:	4013      	ands	r3, r2
 8003452:	041a      	lsls	r2, r3, #16
 8003454:	68fb      	ldr	r3, [r7, #12]
 8003456:	43d9      	mvns	r1, r3
 8003458:	887b      	ldrh	r3, [r7, #2]
 800345a:	400b      	ands	r3, r1
 800345c:	431a      	orrs	r2, r3
 800345e:	687b      	ldr	r3, [r7, #4]
 8003460:	619a      	str	r2, [r3, #24]
}
 8003462:	bf00      	nop
 8003464:	3714      	adds	r7, #20
 8003466:	46bd      	mov	sp, r7
 8003468:	f85d 7b04 	ldr.w	r7, [sp], #4
 800346c:	4770      	bx	lr
	...

08003470 <HAL_GPIO_EXTI_IRQHandler>:
  * @brief  This function handles EXTI interrupt request.
  * @param  GPIO_Pin Specifies the pins connected EXTI line
  * @retval None
  */
void HAL_GPIO_EXTI_IRQHandler(uint16_t GPIO_Pin)
{
 8003470:	b580      	push	{r7, lr}
 8003472:	b082      	sub	sp, #8
 8003474:	af00      	add	r7, sp, #0
 8003476:	4603      	mov	r3, r0
 8003478:	80fb      	strh	r3, [r7, #6]
  /* EXTI line interrupt detected */
  if(__HAL_GPIO_EXTI_GET_IT(GPIO_Pin) != RESET)
 800347a:	4b08      	ldr	r3, [pc, #32]	@ (800349c <HAL_GPIO_EXTI_IRQHandler+0x2c>)
 800347c:	695a      	ldr	r2, [r3, #20]
 800347e:	88fb      	ldrh	r3, [r7, #6]
 8003480:	4013      	ands	r3, r2
 8003482:	2b00      	cmp	r3, #0
 8003484:	d006      	beq.n	8003494 <HAL_GPIO_EXTI_IRQHandler+0x24>
  {
    __HAL_GPIO_EXTI_CLEAR_IT(GPIO_Pin);
 8003486:	4a05      	ldr	r2, [pc, #20]	@ (800349c <HAL_GPIO_EXTI_IRQHandler+0x2c>)
 8003488:	88fb      	ldrh	r3, [r7, #6]
 800348a:	6153      	str	r3, [r2, #20]
    HAL_GPIO_EXTI_Callback(GPIO_Pin);
 800348c:	88fb      	ldrh	r3, [r7, #6]
 800348e:	4618      	mov	r0, r3
 8003490:	f7fe f9e2 	bl	8001858 <HAL_GPIO_EXTI_Callback>
  }
}
 8003494:	bf00      	nop
 8003496:	3708      	adds	r7, #8
 8003498:	46bd      	mov	sp, r7
 800349a:	bd80      	pop	{r7, pc}
 800349c:	40013c00 	.word	0x40013c00

080034a0 <HAL_I2C_Init>:
  * @param  hi2c Pointer to a I2C_HandleTypeDef structure that contains
  *                the configuration information for the specified I2C.
  * @retval HAL status
  */
HAL_StatusTypeDef HAL_I2C_Init(I2C_HandleTypeDef *hi2c)
{
 80034a0:	b580      	push	{r7, lr}
 80034a2:	b084      	sub	sp, #16
 80034a4:	af00      	add	r7, sp, #0
 80034a6:	6078      	str	r0, [r7, #4]
  uint32_t freqrange;
  uint32_t pclk1;

  /* Check the I2C handle allocation */
  if (hi2c == NULL)
 80034a8:	687b      	ldr	r3, [r7, #4]
 80034aa:	2b00      	cmp	r3, #0
 80034ac:	d101      	bne.n	80034b2 <HAL_I2C_Init+0x12>
  {
    return HAL_ERROR;
 80034ae:	2301      	movs	r3, #1
 80034b0:	e12b      	b.n	800370a <HAL_I2C_Init+0x26a>
  assert_param(IS_I2C_DUAL_ADDRESS(hi2c->Init.DualAddressMode));
  assert_param(IS_I2C_OWN_ADDRESS2(hi2c->Init.OwnAddress2));
  assert_param(IS_I2C_GENERAL_CALL(hi2c->Init.GeneralCallMode));
  assert_param(IS_I2C_NO_STRETCH(hi2c->Init.NoStretchMode));

  if (hi2c->State == HAL_I2C_STATE_RESET)
 80034b2:	687b      	ldr	r3, [r7, #4]
 80034b4:	f893 303d 	ldrb.w	r3, [r3, #61]	@ 0x3d
 80034b8:	b2db      	uxtb	r3, r3
 80034ba:	2b00      	cmp	r3, #0
 80034bc:	d106      	bne.n	80034cc <HAL_I2C_Init+0x2c>
  {
    /* Allocate lock resource and initialize it */
    hi2c->Lock = HAL_UNLOCKED;
 80034be:	687b      	ldr	r3, [r7, #4]
 80034c0:	2200      	movs	r2, #0
 80034c2:	f883 203c 	strb.w	r2, [r3, #60]	@ 0x3c

    /* Init the low level hardware : GPIO, CLOCK, NVIC */
    hi2c->MspInitCallback(hi2c);
#else
    /* Init the low level hardware : GPIO, CLOCK, NVIC */
    HAL_I2C_MspInit(hi2c);
 80034c6:	6878      	ldr	r0, [r7, #4]
 80034c8:	f7fd fc90 	bl	8000dec <HAL_I2C_MspInit>
#endif /* USE_HAL_I2C_REGISTER_CALLBACKS */
  }

  hi2c->State = HAL_I2C_STATE_BUSY;
 80034cc:	687b      	ldr	r3, [r7, #4]
 80034ce:	2224      	movs	r2, #36	@ 0x24
 80034d0:	f883 203d 	strb.w	r2, [r3, #61]	@ 0x3d

  /* Disable the selected I2C peripheral */
  __HAL_I2C_DISABLE(hi2c);
 80034d4:	687b      	ldr	r3, [r7, #4]
 80034d6:	681b      	ldr	r3, [r3, #0]
 80034d8:	681a      	ldr	r2, [r3, #0]
 80034da:	687b      	ldr	r3, [r7, #4]
 80034dc:	681b      	ldr	r3, [r3, #0]
 80034de:	f022 0201 	bic.w	r2, r2, #1
 80034e2:	601a      	str	r2, [r3, #0]

  /*Reset I2C*/
  hi2c->Instance->CR1 |= I2C_CR1_SWRST;
 80034e4:	687b      	ldr	r3, [r7, #4]
 80034e6:	681b      	ldr	r3, [r3, #0]
 80034e8:	681a      	ldr	r2, [r3, #0]
 80034ea:	687b      	ldr	r3, [r7, #4]
 80034ec:	681b      	ldr	r3, [r3, #0]
 80034ee:	f442 4200 	orr.w	r2, r2, #32768	@ 0x8000
 80034f2:	601a      	str	r2, [r3, #0]
  hi2c->Instance->CR1 &= ~I2C_CR1_SWRST;
 80034f4:	687b      	ldr	r3, [r7, #4]
 80034f6:	681b      	ldr	r3, [r3, #0]
 80034f8:	681a      	ldr	r2, [r3, #0]
 80034fa:	687b      	ldr	r3, [r7, #4]
 80034fc:	681b      	ldr	r3, [r3, #0]
 80034fe:	f422 4200 	bic.w	r2, r2, #32768	@ 0x8000
 8003502:	601a      	str	r2, [r3, #0]

  /* Get PCLK1 frequency */
  pclk1 = HAL_RCC_GetPCLK1Freq();
 8003504:	f001 f908 	bl	8004718 <HAL_RCC_GetPCLK1Freq>
 8003508:	60f8      	str	r0, [r7, #12]

  /* Check the minimum allowed PCLK1 frequency */
  if (I2C_MIN_PCLK_FREQ(pclk1, hi2c->Init.ClockSpeed) == 1U)
 800350a:	687b      	ldr	r3, [r7, #4]
 800350c:	685b      	ldr	r3, [r3, #4]
 800350e:	4a81      	ldr	r2, [pc, #516]	@ (8003714 <HAL_I2C_Init+0x274>)
 8003510:	4293      	cmp	r3, r2
 8003512:	d807      	bhi.n	8003524 <HAL_I2C_Init+0x84>
 8003514:	68fb      	ldr	r3, [r7, #12]
 8003516:	4a80      	ldr	r2, [pc, #512]	@ (8003718 <HAL_I2C_Init+0x278>)
 8003518:	4293      	cmp	r3, r2
 800351a:	bf94      	ite	ls
 800351c:	2301      	movls	r3, #1
 800351e:	2300      	movhi	r3, #0
 8003520:	b2db      	uxtb	r3, r3
 8003522:	e006      	b.n	8003532 <HAL_I2C_Init+0x92>
 8003524:	68fb      	ldr	r3, [r7, #12]
 8003526:	4a7d      	ldr	r2, [pc, #500]	@ (800371c <HAL_I2C_Init+0x27c>)
 8003528:	4293      	cmp	r3, r2
 800352a:	bf94      	ite	ls
 800352c:	2301      	movls	r3, #1
 800352e:	2300      	movhi	r3, #0
 8003530:	b2db      	uxtb	r3, r3
 8003532:	2b00      	cmp	r3, #0
 8003534:	d001      	beq.n	800353a <HAL_I2C_Init+0x9a>
  {
    return HAL_ERROR;
 8003536:	2301      	movs	r3, #1
 8003538:	e0e7      	b.n	800370a <HAL_I2C_Init+0x26a>
  }

  /* Calculate frequency range */
  freqrange = I2C_FREQRANGE(pclk1);
 800353a:	68fb      	ldr	r3, [r7, #12]
 800353c:	4a78      	ldr	r2, [pc, #480]	@ (8003720 <HAL_I2C_Init+0x280>)
 800353e:	fba2 2303 	umull	r2, r3, r2, r3
 8003542:	0c9b      	lsrs	r3, r3, #18
 8003544:	60bb      	str	r3, [r7, #8]

  /*---------------------------- I2Cx CR2 Configuration ----------------------*/
  /* Configure I2Cx: Frequency range */
  MODIFY_REG(hi2c->Instance->CR2, I2C_CR2_FREQ, freqrange);
 8003546:	687b      	ldr	r3, [r7, #4]
 8003548:	681b      	ldr	r3, [r3, #0]
 800354a:	685b      	ldr	r3, [r3, #4]
 800354c:	f023 013f 	bic.w	r1, r3, #63	@ 0x3f
 8003550:	687b      	ldr	r3, [r7, #4]
 8003552:	681b      	ldr	r3, [r3, #0]
 8003554:	68ba      	ldr	r2, [r7, #8]
 8003556:	430a      	orrs	r2, r1
 8003558:	605a      	str	r2, [r3, #4]

  /*---------------------------- I2Cx TRISE Configuration --------------------*/
  /* Configure I2Cx: Rise Time */
  MODIFY_REG(hi2c->Instance->TRISE, I2C_TRISE_TRISE, I2C_RISE_TIME(freqrange, hi2c->Init.ClockSpeed));
 800355a:	687b      	ldr	r3, [r7, #4]
 800355c:	681b      	ldr	r3, [r3, #0]
 800355e:	6a1b      	ldr	r3, [r3, #32]
 8003560:	f023 013f 	bic.w	r1, r3, #63	@ 0x3f
 8003564:	687b      	ldr	r3, [r7, #4]
 8003566:	685b      	ldr	r3, [r3, #4]
 8003568:	4a6a      	ldr	r2, [pc, #424]	@ (8003714 <HAL_I2C_Init+0x274>)
 800356a:	4293      	cmp	r3, r2
 800356c:	d802      	bhi.n	8003574 <HAL_I2C_Init+0xd4>
 800356e:	68bb      	ldr	r3, [r7, #8]
 8003570:	3301      	adds	r3, #1
 8003572:	e009      	b.n	8003588 <HAL_I2C_Init+0xe8>
 8003574:	68bb      	ldr	r3, [r7, #8]
 8003576:	f44f 7296 	mov.w	r2, #300	@ 0x12c
 800357a:	fb02 f303 	mul.w	r3, r2, r3
 800357e:	4a69      	ldr	r2, [pc, #420]	@ (8003724 <HAL_I2C_Init+0x284>)
 8003580:	fba2 2303 	umull	r2, r3, r2, r3
 8003584:	099b      	lsrs	r3, r3, #6
 8003586:	3301      	adds	r3, #1
 8003588:	687a      	ldr	r2, [r7, #4]
 800358a:	6812      	ldr	r2, [r2, #0]
 800358c:	430b      	orrs	r3, r1
 800358e:	6213      	str	r3, [r2, #32]

  /*---------------------------- I2Cx CCR Configuration ----------------------*/
  /* Configure I2Cx: Speed */
  MODIFY_REG(hi2c->Instance->CCR, (I2C_CCR_FS | I2C_CCR_DUTY | I2C_CCR_CCR), I2C_SPEED(pclk1, hi2c->Init.ClockSpeed, hi2c->Init.DutyCycle));
 8003590:	687b      	ldr	r3, [r7, #4]
 8003592:	681b      	ldr	r3, [r3, #0]
 8003594:	69db      	ldr	r3, [r3, #28]
 8003596:	f423 424f 	bic.w	r2, r3, #52992	@ 0xcf00
 800359a:	f022 02ff 	bic.w	r2, r2, #255	@ 0xff
 800359e:	687b      	ldr	r3, [r7, #4]
 80035a0:	685b      	ldr	r3, [r3, #4]
 80035a2:	495c      	ldr	r1, [pc, #368]	@ (8003714 <HAL_I2C_Init+0x274>)
 80035a4:	428b      	cmp	r3, r1
 80035a6:	d819      	bhi.n	80035dc <HAL_I2C_Init+0x13c>
 80035a8:	68fb      	ldr	r3, [r7, #12]
 80035aa:	1e59      	subs	r1, r3, #1
 80035ac:	687b      	ldr	r3, [r7, #4]
 80035ae:	685b      	ldr	r3, [r3, #4]
 80035b0:	005b      	lsls	r3, r3, #1
 80035b2:	fbb1 f3f3 	udiv	r3, r1, r3
 80035b6:	1c59      	adds	r1, r3, #1
 80035b8:	f640 73fc 	movw	r3, #4092	@ 0xffc
 80035bc:	400b      	ands	r3, r1
 80035be:	2b00      	cmp	r3, #0
 80035c0:	d00a      	beq.n	80035d8 <HAL_I2C_Init+0x138>
 80035c2:	68fb      	ldr	r3, [r7, #12]
 80035c4:	1e59      	subs	r1, r3, #1
 80035c6:	687b      	ldr	r3, [r7, #4]
 80035c8:	685b      	ldr	r3, [r3, #4]
 80035ca:	005b      	lsls	r3, r3, #1
 80035cc:	fbb1 f3f3 	udiv	r3, r1, r3
 80035d0:	3301      	adds	r3, #1
 80035d2:	f3c3 030b 	ubfx	r3, r3, #0, #12
 80035d6:	e051      	b.n	800367c <HAL_I2C_Init+0x1dc>
 80035d8:	2304      	movs	r3, #4
 80035da:	e04f      	b.n	800367c <HAL_I2C_Init+0x1dc>
 80035dc:	687b      	ldr	r3, [r7, #4]
 80035de:	689b      	ldr	r3, [r3, #8]
 80035e0:	2b00      	cmp	r3, #0
 80035e2:	d111      	bne.n	8003608 <HAL_I2C_Init+0x168>
 80035e4:	68fb      	ldr	r3, [r7, #12]
 80035e6:	1e58      	subs	r0, r3, #1
 80035e8:	687b      	ldr	r3, [r7, #4]
 80035ea:	6859      	ldr	r1, [r3, #4]
 80035ec:	460b      	mov	r3, r1
 80035ee:	005b      	lsls	r3, r3, #1
 80035f0:	440b      	add	r3, r1
 80035f2:	fbb0 f3f3 	udiv	r3, r0, r3
 80035f6:	3301      	adds	r3, #1
 80035f8:	f3c3 030b 	ubfx	r3, r3, #0, #12
 80035fc:	2b00      	cmp	r3, #0
 80035fe:	bf0c      	ite	eq
 8003600:	2301      	moveq	r3, #1
 8003602:	2300      	movne	r3, #0
 8003604:	b2db      	uxtb	r3, r3
 8003606:	e012      	b.n	800362e <HAL_I2C_Init+0x18e>
 8003608:	68fb      	ldr	r3, [r7, #12]
 800360a:	1e58      	subs	r0, r3, #1
 800360c:	687b      	ldr	r3, [r7, #4]
 800360e:	6859      	ldr	r1, [r3, #4]
 8003610:	460b      	mov	r3, r1
 8003612:	009b      	lsls	r3, r3, #2
 8003614:	440b      	add	r3, r1
 8003616:	0099      	lsls	r1, r3, #2
 8003618:	440b      	add	r3, r1
 800361a:	fbb0 f3f3 	udiv	r3, r0, r3
 800361e:	3301      	adds	r3, #1
 8003620:	f3c3 030b 	ubfx	r3, r3, #0, #12
 8003624:	2b00      	cmp	r3, #0
 8003626:	bf0c      	ite	eq
 8003628:	2301      	moveq	r3, #1
 800362a:	2300      	movne	r3, #0
 800362c:	b2db      	uxtb	r3, r3
 800362e:	2b00      	cmp	r3, #0
 8003630:	d001      	beq.n	8003636 <HAL_I2C_Init+0x196>
 8003632:	2301      	movs	r3, #1
 8003634:	e022      	b.n	800367c <HAL_I2C_Init+0x1dc>
 8003636:	687b      	ldr	r3, [r7, #4]
 8003638:	689b      	ldr	r3, [r3, #8]
 800363a:	2b00      	cmp	r3, #0
 800363c:	d10e      	bne.n	800365c <HAL_I2C_Init+0x1bc>
 800363e:	68fb      	ldr	r3, [r7, #12]
 8003640:	1e58      	subs	r0, r3, #1
 8003642:	687b      	ldr	r3, [r7, #4]
 8003644:	6859      	ldr	r1, [r3, #4]
 8003646:	460b      	mov	r3, r1
 8003648:	005b      	lsls	r3, r3, #1
 800364a:	440b      	add	r3, r1
 800364c:	fbb0 f3f3 	udiv	r3, r0, r3
 8003650:	3301      	adds	r3, #1
 8003652:	f3c3 030b 	ubfx	r3, r3, #0, #12
 8003656:	f443 4300 	orr.w	r3, r3, #32768	@ 0x8000
 800365a:	e00f      	b.n	800367c <HAL_I2C_Init+0x1dc>
 800365c:	68fb      	ldr	r3, [r7, #12]
 800365e:	1e58      	subs	r0, r3, #1
 8003660:	687b      	ldr	r3, [r7, #4]
 8003662:	6859      	ldr	r1, [r3, #4]
 8003664:	460b      	mov	r3, r1
 8003666:	009b      	lsls	r3, r3, #2
 8003668:	440b      	add	r3, r1
 800366a:	0099      	lsls	r1, r3, #2
 800366c:	440b      	add	r3, r1
 800366e:	fbb0 f3f3 	udiv	r3, r0, r3
 8003672:	3301      	adds	r3, #1
 8003674:	f3c3 030b 	ubfx	r3, r3, #0, #12
 8003678:	f443 4340 	orr.w	r3, r3, #49152	@ 0xc000
 800367c:	6879      	ldr	r1, [r7, #4]
 800367e:	6809      	ldr	r1, [r1, #0]
 8003680:	4313      	orrs	r3, r2
 8003682:	61cb      	str	r3, [r1, #28]

  /*---------------------------- I2Cx CR1 Configuration ----------------------*/
  /* Configure I2Cx: Generalcall and NoStretch mode */
  MODIFY_REG(hi2c->Instance->CR1, (I2C_CR1_ENGC | I2C_CR1_NOSTRETCH), (hi2c->Init.GeneralCallMode | hi2c->Init.NoStretchMode));
 8003684:	687b      	ldr	r3, [r7, #4]
 8003686:	681b      	ldr	r3, [r3, #0]
 8003688:	681b      	ldr	r3, [r3, #0]
 800368a:	f023 01c0 	bic.w	r1, r3, #192	@ 0xc0
 800368e:	687b      	ldr	r3, [r7, #4]
 8003690:	69da      	ldr	r2, [r3, #28]
 8003692:	687b      	ldr	r3, [r7, #4]
 8003694:	6a1b      	ldr	r3, [r3, #32]
 8003696:	431a      	orrs	r2, r3
 8003698:	687b      	ldr	r3, [r7, #4]
 800369a:	681b      	ldr	r3, [r3, #0]
 800369c:	430a      	orrs	r2, r1
 800369e:	601a      	str	r2, [r3, #0]

  /*---------------------------- I2Cx OAR1 Configuration ---------------------*/
  /* Configure I2Cx: Own Address1 and addressing mode */
  MODIFY_REG(hi2c->Instance->OAR1, (I2C_OAR1_ADDMODE | I2C_OAR1_ADD8_9 | I2C_OAR1_ADD1_7 | I2C_OAR1_ADD0), (hi2c->Init.AddressingMode | hi2c->Init.OwnAddress1));
 80036a0:	687b      	ldr	r3, [r7, #4]
 80036a2:	681b      	ldr	r3, [r3, #0]
 80036a4:	689b      	ldr	r3, [r3, #8]
 80036a6:	f423 4303 	bic.w	r3, r3, #33536	@ 0x8300
 80036aa:	f023 03ff 	bic.w	r3, r3, #255	@ 0xff
 80036ae:	687a      	ldr	r2, [r7, #4]
 80036b0:	6911      	ldr	r1, [r2, #16]
 80036b2:	687a      	ldr	r2, [r7, #4]
 80036b4:	68d2      	ldr	r2, [r2, #12]
 80036b6:	4311      	orrs	r1, r2
 80036b8:	687a      	ldr	r2, [r7, #4]
 80036ba:	6812      	ldr	r2, [r2, #0]
 80036bc:	430b      	orrs	r3, r1
 80036be:	6093      	str	r3, [r2, #8]

  /*---------------------------- I2Cx OAR2 Configuration ---------------------*/
  /* Configure I2Cx: Dual mode and Own Address2 */
  MODIFY_REG(hi2c->Instance->OAR2, (I2C_OAR2_ENDUAL | I2C_OAR2_ADD2), (hi2c->Init.DualAddressMode | hi2c->Init.OwnAddress2));
 80036c0:	687b      	ldr	r3, [r7, #4]
 80036c2:	681b      	ldr	r3, [r3, #0]
 80036c4:	68db      	ldr	r3, [r3, #12]
 80036c6:	f023 01ff 	bic.w	r1, r3, #255	@ 0xff
 80036ca:	687b      	ldr	r3, [r7, #4]
 80036cc:	695a      	ldr	r2, [r3, #20]
 80036ce:	687b      	ldr	r3, [r7, #4]
 80036d0:	699b      	ldr	r3, [r3, #24]
 80036d2:	431a      	orrs	r2, r3
 80036d4:	687b      	ldr	r3, [r7, #4]
 80036d6:	681b      	ldr	r3, [r3, #0]
 80036d8:	430a      	orrs	r2, r1
 80036da:	60da      	str	r2, [r3, #12]

  /* Enable the selected I2C peripheral */
  __HAL_I2C_ENABLE(hi2c);
 80036dc:	687b      	ldr	r3, [r7, #4]
 80036de:	681b      	ldr	r3, [r3, #0]
 80036e0:	681a      	ldr	r2, [r3, #0]
 80036e2:	687b      	ldr	r3, [r7, #4]
 80036e4:	681b      	ldr	r3, [r3, #0]
 80036e6:	f042 0201 	orr.w	r2, r2, #1
 80036ea:	601a      	str	r2, [r3, #0]

  hi2c->ErrorCode = HAL_I2C_ERROR_NONE;
 80036ec:	687b      	ldr	r3, [r7, #4]
 80036ee:	2200      	movs	r2, #0
 80036f0:	641a      	str	r2, [r3, #64]	@ 0x40
  hi2c->State = HAL_I2C_STATE_READY;
 80036f2:	687b      	ldr	r3, [r7, #4]
 80036f4:	2220      	movs	r2, #32
 80036f6:	f883 203d 	strb.w	r2, [r3, #61]	@ 0x3d
  hi2c->PreviousState = I2C_STATE_NONE;
 80036fa:	687b      	ldr	r3, [r7, #4]
 80036fc:	2200      	movs	r2, #0
 80036fe:	631a      	str	r2, [r3, #48]	@ 0x30
  hi2c->Mode = HAL_I2C_MODE_NONE;
 8003700:	687b      	ldr	r3, [r7, #4]
 8003702:	2200      	movs	r2, #0
 8003704:	f883 203e 	strb.w	r2, [r3, #62]	@ 0x3e

  return HAL_OK;
 8003708:	2300      	movs	r3, #0
}
 800370a:	4618      	mov	r0, r3
 800370c:	3710      	adds	r7, #16
 800370e:	46bd      	mov	sp, r7
 8003710:	bd80      	pop	{r7, pc}
 8003712:	bf00      	nop
 8003714:	000186a0 	.word	0x000186a0
 8003718:	001e847f 	.word	0x001e847f
 800371c:	003d08ff 	.word	0x003d08ff
 8003720:	431bde83 	.word	0x431bde83
 8003724:	10624dd3 	.word	0x10624dd3

08003728 <HAL_I2C_Master_Transmit>:
  * @param  Size Amount of data to be sent
  * @param  Timeout Timeout duration
  * @retval HAL status
  */
HAL_StatusTypeDef HAL_I2C_Master_Transmit(I2C_HandleTypeDef *hi2c, uint16_t DevAddress, uint8_t *pData, uint16_t Size, uint32_t Timeout)
{
 8003728:	b580      	push	{r7, lr}
 800372a:	b088      	sub	sp, #32
 800372c:	af02      	add	r7, sp, #8
 800372e:	60f8      	str	r0, [r7, #12]
 8003730:	607a      	str	r2, [r7, #4]
 8003732:	461a      	mov	r2, r3
 8003734:	460b      	mov	r3, r1
 8003736:	817b      	strh	r3, [r7, #10]
 8003738:	4613      	mov	r3, r2
 800373a:	813b      	strh	r3, [r7, #8]
  /* Init tickstart for timeout management*/
  uint32_t tickstart = HAL_GetTick();
 800373c:	f7fe fb48 	bl	8001dd0 <HAL_GetTick>
 8003740:	6178      	str	r0, [r7, #20]

  if (hi2c->State == HAL_I2C_STATE_READY)
 8003742:	68fb      	ldr	r3, [r7, #12]
 8003744:	f893 303d 	ldrb.w	r3, [r3, #61]	@ 0x3d
 8003748:	b2db      	uxtb	r3, r3
 800374a:	2b20      	cmp	r3, #32
 800374c:	f040 80e0 	bne.w	8003910 <HAL_I2C_Master_Transmit+0x1e8>
  {
    /* Wait until BUSY flag is reset */
    if (I2C_WaitOnFlagUntilTimeout(hi2c, I2C_FLAG_BUSY, SET, I2C_TIMEOUT_BUSY_FLAG, tickstart) != HAL_OK)
 8003750:	697b      	ldr	r3, [r7, #20]
 8003752:	9300      	str	r3, [sp, #0]
 8003754:	2319      	movs	r3, #25
 8003756:	2201      	movs	r2, #1
 8003758:	4970      	ldr	r1, [pc, #448]	@ (800391c <HAL_I2C_Master_Transmit+0x1f4>)
 800375a:	68f8      	ldr	r0, [r7, #12]
 800375c:	f000 fc64 	bl	8004028 <I2C_WaitOnFlagUntilTimeout>
 8003760:	4603      	mov	r3, r0
 8003762:	2b00      	cmp	r3, #0
 8003764:	d001      	beq.n	800376a <HAL_I2C_Master_Transmit+0x42>
    {
      return HAL_BUSY;
 8003766:	2302      	movs	r3, #2
 8003768:	e0d3      	b.n	8003912 <HAL_I2C_Master_Transmit+0x1ea>
    }

    /* Process Locked */
    __HAL_LOCK(hi2c);
 800376a:	68fb      	ldr	r3, [r7, #12]
 800376c:	f893 303c 	ldrb.w	r3, [r3, #60]	@ 0x3c
 8003770:	2b01      	cmp	r3, #1
 8003772:	d101      	bne.n	8003778 <HAL_I2C_Master_Transmit+0x50>
 8003774:	2302      	movs	r3, #2
 8003776:	e0cc      	b.n	8003912 <HAL_I2C_Master_Transmit+0x1ea>
 8003778:	68fb      	ldr	r3, [r7, #12]
 800377a:	2201      	movs	r2, #1
 800377c:	f883 203c 	strb.w	r2, [r3, #60]	@ 0x3c

    /* Check if the I2C is already enabled */
    if ((hi2c->Instance->CR1 & I2C_CR1_PE) != I2C_CR1_PE)
 8003780:	68fb      	ldr	r3, [r7, #12]
 8003782:	681b      	ldr	r3, [r3, #0]
 8003784:	681b      	ldr	r3, [r3, #0]
 8003786:	f003 0301 	and.w	r3, r3, #1
 800378a:	2b01      	cmp	r3, #1
 800378c:	d007      	beq.n	800379e <HAL_I2C_Master_Transmit+0x76>
    {
      /* Enable I2C peripheral */
      __HAL_I2C_ENABLE(hi2c);
 800378e:	68fb      	ldr	r3, [r7, #12]
 8003790:	681b      	ldr	r3, [r3, #0]
 8003792:	681a      	ldr	r2, [r3, #0]
 8003794:	68fb      	ldr	r3, [r7, #12]
 8003796:	681b      	ldr	r3, [r3, #0]
 8003798:	f042 0201 	orr.w	r2, r2, #1
 800379c:	601a      	str	r2, [r3, #0]
    }

    /* Disable Pos */
    CLEAR_BIT(hi2c->Instance->CR1, I2C_CR1_POS);
 800379e:	68fb      	ldr	r3, [r7, #12]
 80037a0:	681b      	ldr	r3, [r3, #0]
 80037a2:	681a      	ldr	r2, [r3, #0]
 80037a4:	68fb      	ldr	r3, [r7, #12]
 80037a6:	681b      	ldr	r3, [r3, #0]
 80037a8:	f422 6200 	bic.w	r2, r2, #2048	@ 0x800
 80037ac:	601a      	str	r2, [r3, #0]

    hi2c->State       = HAL_I2C_STATE_BUSY_TX;
 80037ae:	68fb      	ldr	r3, [r7, #12]
 80037b0:	2221      	movs	r2, #33	@ 0x21
 80037b2:	f883 203d 	strb.w	r2, [r3, #61]	@ 0x3d
    hi2c->Mode        = HAL_I2C_MODE_MASTER;
 80037b6:	68fb      	ldr	r3, [r7, #12]
 80037b8:	2210      	movs	r2, #16
 80037ba:	f883 203e 	strb.w	r2, [r3, #62]	@ 0x3e
    hi2c->ErrorCode   = HAL_I2C_ERROR_NONE;
 80037be:	68fb      	ldr	r3, [r7, #12]
 80037c0:	2200      	movs	r2, #0
 80037c2:	641a      	str	r2, [r3, #64]	@ 0x40

    /* Prepare transfer parameters */
    hi2c->pBuffPtr    = pData;
 80037c4:	68fb      	ldr	r3, [r7, #12]
 80037c6:	687a      	ldr	r2, [r7, #4]
 80037c8:	625a      	str	r2, [r3, #36]	@ 0x24
    hi2c->XferCount   = Size;
 80037ca:	68fb      	ldr	r3, [r7, #12]
 80037cc:	893a      	ldrh	r2, [r7, #8]
 80037ce:	855a      	strh	r2, [r3, #42]	@ 0x2a
    hi2c->XferSize    = hi2c->XferCount;
 80037d0:	68fb      	ldr	r3, [r7, #12]
 80037d2:	8d5b      	ldrh	r3, [r3, #42]	@ 0x2a
 80037d4:	b29a      	uxth	r2, r3
 80037d6:	68fb      	ldr	r3, [r7, #12]
 80037d8:	851a      	strh	r2, [r3, #40]	@ 0x28
    hi2c->XferOptions = I2C_NO_OPTION_FRAME;
 80037da:	68fb      	ldr	r3, [r7, #12]
 80037dc:	4a50      	ldr	r2, [pc, #320]	@ (8003920 <HAL_I2C_Master_Transmit+0x1f8>)
 80037de:	62da      	str	r2, [r3, #44]	@ 0x2c

    /* Send Slave Address */
    if (I2C_MasterRequestWrite(hi2c, DevAddress, Timeout, tickstart) != HAL_OK)
 80037e0:	8979      	ldrh	r1, [r7, #10]
 80037e2:	697b      	ldr	r3, [r7, #20]
 80037e4:	6a3a      	ldr	r2, [r7, #32]
 80037e6:	68f8      	ldr	r0, [r7, #12]
 80037e8:	f000 face 	bl	8003d88 <I2C_MasterRequestWrite>
 80037ec:	4603      	mov	r3, r0
 80037ee:	2b00      	cmp	r3, #0
 80037f0:	d001      	beq.n	80037f6 <HAL_I2C_Master_Transmit+0xce>
    {
      return HAL_ERROR;
 80037f2:	2301      	movs	r3, #1
 80037f4:	e08d      	b.n	8003912 <HAL_I2C_Master_Transmit+0x1ea>
    }

    /* Clear ADDR flag */
    __HAL_I2C_CLEAR_ADDRFLAG(hi2c);
 80037f6:	2300      	movs	r3, #0
 80037f8:	613b      	str	r3, [r7, #16]
 80037fa:	68fb      	ldr	r3, [r7, #12]
 80037fc:	681b      	ldr	r3, [r3, #0]
 80037fe:	695b      	ldr	r3, [r3, #20]
 8003800:	613b      	str	r3, [r7, #16]
 8003802:	68fb      	ldr	r3, [r7, #12]
 8003804:	681b      	ldr	r3, [r3, #0]
 8003806:	699b      	ldr	r3, [r3, #24]
 8003808:	613b      	str	r3, [r7, #16]
 800380a:	693b      	ldr	r3, [r7, #16]

    while (hi2c->XferSize > 0U)
 800380c:	e066      	b.n	80038dc <HAL_I2C_Master_Transmit+0x1b4>
    {
      /* Wait until TXE flag is set */
      if (I2C_WaitOnTXEFlagUntilTimeout(hi2c, Timeout, tickstart) != HAL_OK)
 800380e:	697a      	ldr	r2, [r7, #20]
 8003810:	6a39      	ldr	r1, [r7, #32]
 8003812:	68f8      	ldr	r0, [r7, #12]
 8003814:	f000 fd22 	bl	800425c <I2C_WaitOnTXEFlagUntilTimeout>
 8003818:	4603      	mov	r3, r0
 800381a:	2b00      	cmp	r3, #0
 800381c:	d00d      	beq.n	800383a <HAL_I2C_Master_Transmit+0x112>
      {
        if (hi2c->ErrorCode == HAL_I2C_ERROR_AF)
 800381e:	68fb      	ldr	r3, [r7, #12]
 8003820:	6c1b      	ldr	r3, [r3, #64]	@ 0x40
 8003822:	2b04      	cmp	r3, #4
 8003824:	d107      	bne.n	8003836 <HAL_I2C_Master_Transmit+0x10e>
        {
          /* Generate Stop */
          SET_BIT(hi2c->Instance->CR1, I2C_CR1_STOP);
 8003826:	68fb      	ldr	r3, [r7, #12]
 8003828:	681b      	ldr	r3, [r3, #0]
 800382a:	681a      	ldr	r2, [r3, #0]
 800382c:	68fb      	ldr	r3, [r7, #12]
 800382e:	681b      	ldr	r3, [r3, #0]
 8003830:	f442 7200 	orr.w	r2, r2, #512	@ 0x200
 8003834:	601a      	str	r2, [r3, #0]
        }
        return HAL_ERROR;
 8003836:	2301      	movs	r3, #1
 8003838:	e06b      	b.n	8003912 <HAL_I2C_Master_Transmit+0x1ea>
      }

      /* Write data to DR */
      hi2c->Instance->DR = *hi2c->pBuffPtr;
 800383a:	68fb      	ldr	r3, [r7, #12]
 800383c:	6a5b      	ldr	r3, [r3, #36]	@ 0x24
 800383e:	781a      	ldrb	r2, [r3, #0]
 8003840:	68fb      	ldr	r3, [r7, #12]
 8003842:	681b      	ldr	r3, [r3, #0]
 8003844:	611a      	str	r2, [r3, #16]

      /* Increment Buffer pointer */
      hi2c->pBuffPtr++;
 8003846:	68fb      	ldr	r3, [r7, #12]
 8003848:	6a5b      	ldr	r3, [r3, #36]	@ 0x24
 800384a:	1c5a      	adds	r2, r3, #1
 800384c:	68fb      	ldr	r3, [r7, #12]
 800384e:	625a      	str	r2, [r3, #36]	@ 0x24

      /* Update counter */
      hi2c->XferCount--;
 8003850:	68fb      	ldr	r3, [r7, #12]
 8003852:	8d5b      	ldrh	r3, [r3, #42]	@ 0x2a
 8003854:	b29b      	uxth	r3, r3
 8003856:	3b01      	subs	r3, #1
 8003858:	b29a      	uxth	r2, r3
 800385a:	68fb      	ldr	r3, [r7, #12]
 800385c:	855a      	strh	r2, [r3, #42]	@ 0x2a
      hi2c->XferSize--;
 800385e:	68fb      	ldr	r3, [r7, #12]
 8003860:	8d1b      	ldrh	r3, [r3, #40]	@ 0x28
 8003862:	3b01      	subs	r3, #1
 8003864:	b29a      	uxth	r2, r3
 8003866:	68fb      	ldr	r3, [r7, #12]
 8003868:	851a      	strh	r2, [r3, #40]	@ 0x28

      if ((__HAL_I2C_GET_FLAG(hi2c, I2C_FLAG_BTF) == SET) && (hi2c->XferSize != 0U))
 800386a:	68fb      	ldr	r3, [r7, #12]
 800386c:	681b      	ldr	r3, [r3, #0]
 800386e:	695b      	ldr	r3, [r3, #20]
 8003870:	f003 0304 	and.w	r3, r3, #4
 8003874:	2b04      	cmp	r3, #4
 8003876:	d11b      	bne.n	80038b0 <HAL_I2C_Master_Transmit+0x188>
 8003878:	68fb      	ldr	r3, [r7, #12]
 800387a:	8d1b      	ldrh	r3, [r3, #40]	@ 0x28
 800387c:	2b00      	cmp	r3, #0
 800387e:	d017      	beq.n	80038b0 <HAL_I2C_Master_Transmit+0x188>
      {
        /* Write data to DR */
        hi2c->Instance->DR = *hi2c->pBuffPtr;
 8003880:	68fb      	ldr	r3, [r7, #12]
 8003882:	6a5b      	ldr	r3, [r3, #36]	@ 0x24
 8003884:	781a      	ldrb	r2, [r3, #0]
 8003886:	68fb      	ldr	r3, [r7, #12]
 8003888:	681b      	ldr	r3, [r3, #0]
 800388a:	611a      	str	r2, [r3, #16]

        /* Increment Buffer pointer */
        hi2c->pBuffPtr++;
 800388c:	68fb      	ldr	r3, [r7, #12]
 800388e:	6a5b      	ldr	r3, [r3, #36]	@ 0x24
 8003890:	1c5a      	adds	r2, r3, #1
 8003892:	68fb      	ldr	r3, [r7, #12]
 8003894:	625a      	str	r2, [r3, #36]	@ 0x24

        /* Update counter */
        hi2c->XferCount--;
 8003896:	68fb      	ldr	r3, [r7, #12]
 8003898:	8d5b      	ldrh	r3, [r3, #42]	@ 0x2a
 800389a:	b29b      	uxth	r3, r3
 800389c:	3b01      	subs	r3, #1
 800389e:	b29a      	uxth	r2, r3
 80038a0:	68fb      	ldr	r3, [r7, #12]
 80038a2:	855a      	strh	r2, [r3, #42]	@ 0x2a
        hi2c->XferSize--;
 80038a4:	68fb      	ldr	r3, [r7, #12]
 80038a6:	8d1b      	ldrh	r3, [r3, #40]	@ 0x28
 80038a8:	3b01      	subs	r3, #1
 80038aa:	b29a      	uxth	r2, r3
 80038ac:	68fb      	ldr	r3, [r7, #12]
 80038ae:	851a      	strh	r2, [r3, #40]	@ 0x28
      }

      /* Wait until BTF flag is set */
      if (I2C_WaitOnBTFFlagUntilTimeout(hi2c, Timeout, tickstart) != HAL_OK)
 80038b0:	697a      	ldr	r2, [r7, #20]
 80038b2:	6a39      	ldr	r1, [r7, #32]
 80038b4:	68f8      	ldr	r0, [r7, #12]
 80038b6:	f000 fd19 	bl	80042ec <I2C_WaitOnBTFFlagUntilTimeout>
 80038ba:	4603      	mov	r3, r0
 80038bc:	2b00      	cmp	r3, #0
 80038be:	d00d      	beq.n	80038dc <HAL_I2C_Master_Transmit+0x1b4>
      {
        if (hi2c->ErrorCode == HAL_I2C_ERROR_AF)
 80038c0:	68fb      	ldr	r3, [r7, #12]
 80038c2:	6c1b      	ldr	r3, [r3, #64]	@ 0x40
 80038c4:	2b04      	cmp	r3, #4
 80038c6:	d107      	bne.n	80038d8 <HAL_I2C_Master_Transmit+0x1b0>
        {
          /* Generate Stop */
          SET_BIT(hi2c->Instance->CR1, I2C_CR1_STOP);
 80038c8:	68fb      	ldr	r3, [r7, #12]
 80038ca:	681b      	ldr	r3, [r3, #0]
 80038cc:	681a      	ldr	r2, [r3, #0]
 80038ce:	68fb      	ldr	r3, [r7, #12]
 80038d0:	681b      	ldr	r3, [r3, #0]
 80038d2:	f442 7200 	orr.w	r2, r2, #512	@ 0x200
 80038d6:	601a      	str	r2, [r3, #0]
        }
        return HAL_ERROR;
 80038d8:	2301      	movs	r3, #1
 80038da:	e01a      	b.n	8003912 <HAL_I2C_Master_Transmit+0x1ea>
    while (hi2c->XferSize > 0U)
 80038dc:	68fb      	ldr	r3, [r7, #12]
 80038de:	8d1b      	ldrh	r3, [r3, #40]	@ 0x28
 80038e0:	2b00      	cmp	r3, #0
 80038e2:	d194      	bne.n	800380e <HAL_I2C_Master_Transmit+0xe6>
      }
    }

    /* Generate Stop */
    SET_BIT(hi2c->Instance->CR1, I2C_CR1_STOP);
 80038e4:	68fb      	ldr	r3, [r7, #12]
 80038e6:	681b      	ldr	r3, [r3, #0]
 80038e8:	681a      	ldr	r2, [r3, #0]
 80038ea:	68fb      	ldr	r3, [r7, #12]
 80038ec:	681b      	ldr	r3, [r3, #0]
 80038ee:	f442 7200 	orr.w	r2, r2, #512	@ 0x200
 80038f2:	601a      	str	r2, [r3, #0]

    hi2c->State = HAL_I2C_STATE_READY;
 80038f4:	68fb      	ldr	r3, [r7, #12]
 80038f6:	2220      	movs	r2, #32
 80038f8:	f883 203d 	strb.w	r2, [r3, #61]	@ 0x3d
    hi2c->Mode = HAL_I2C_MODE_NONE;
 80038fc:	68fb      	ldr	r3, [r7, #12]
 80038fe:	2200      	movs	r2, #0
 8003900:	f883 203e 	strb.w	r2, [r3, #62]	@ 0x3e

    /* Process Unlocked */
    __HAL_UNLOCK(hi2c);
 8003904:	68fb      	ldr	r3, [r7, #12]
 8003906:	2200      	movs	r2, #0
 8003908:	f883 203c 	strb.w	r2, [r3, #60]	@ 0x3c

    return HAL_OK;
 800390c:	2300      	movs	r3, #0
 800390e:	e000      	b.n	8003912 <HAL_I2C_Master_Transmit+0x1ea>
  }
  else
  {
    return HAL_BUSY;
 8003910:	2302      	movs	r3, #2
  }
}
 8003912:	4618      	mov	r0, r3
 8003914:	3718      	adds	r7, #24
 8003916:	46bd      	mov	sp, r7
 8003918:	bd80      	pop	{r7, pc}
 800391a:	bf00      	nop
 800391c:	00100002 	.word	0x00100002
 8003920:	ffff0000 	.word	0xffff0000

08003924 <HAL_I2C_Master_Receive>:
  * @param  Size Amount of data to be sent
  * @param  Timeout Timeout duration
  * @retval HAL status
  */
HAL_StatusTypeDef HAL_I2C_Master_Receive(I2C_HandleTypeDef *hi2c, uint16_t DevAddress, uint8_t *pData, uint16_t Size, uint32_t Timeout)
{
 8003924:	b580      	push	{r7, lr}
 8003926:	b08c      	sub	sp, #48	@ 0x30
 8003928:	af02      	add	r7, sp, #8
 800392a:	60f8      	str	r0, [r7, #12]
 800392c:	607a      	str	r2, [r7, #4]
 800392e:	461a      	mov	r2, r3
 8003930:	460b      	mov	r3, r1
 8003932:	817b      	strh	r3, [r7, #10]
 8003934:	4613      	mov	r3, r2
 8003936:	813b      	strh	r3, [r7, #8]
  /* Init tickstart for timeout management*/
  uint32_t tickstart = HAL_GetTick();
 8003938:	f7fe fa4a 	bl	8001dd0 <HAL_GetTick>
 800393c:	6278      	str	r0, [r7, #36]	@ 0x24

  if (hi2c->State == HAL_I2C_STATE_READY)
 800393e:	68fb      	ldr	r3, [r7, #12]
 8003940:	f893 303d 	ldrb.w	r3, [r3, #61]	@ 0x3d
 8003944:	b2db      	uxtb	r3, r3
 8003946:	2b20      	cmp	r3, #32
 8003948:	f040 8217 	bne.w	8003d7a <HAL_I2C_Master_Receive+0x456>
  {
    /* Wait until BUSY flag is reset */
    if (I2C_WaitOnFlagUntilTimeout(hi2c, I2C_FLAG_BUSY, SET, I2C_TIMEOUT_BUSY_FLAG, tickstart) != HAL_OK)
 800394c:	6a7b      	ldr	r3, [r7, #36]	@ 0x24
 800394e:	9300      	str	r3, [sp, #0]
 8003950:	2319      	movs	r3, #25
 8003952:	2201      	movs	r2, #1
 8003954:	497c      	ldr	r1, [pc, #496]	@ (8003b48 <HAL_I2C_Master_Receive+0x224>)
 8003956:	68f8      	ldr	r0, [r7, #12]
 8003958:	f000 fb66 	bl	8004028 <I2C_WaitOnFlagUntilTimeout>
 800395c:	4603      	mov	r3, r0
 800395e:	2b00      	cmp	r3, #0
 8003960:	d001      	beq.n	8003966 <HAL_I2C_Master_Receive+0x42>
    {
      return HAL_BUSY;
 8003962:	2302      	movs	r3, #2
 8003964:	e20a      	b.n	8003d7c <HAL_I2C_Master_Receive+0x458>
    }

    /* Process Locked */
    __HAL_LOCK(hi2c);
 8003966:	68fb      	ldr	r3, [r7, #12]
 8003968:	f893 303c 	ldrb.w	r3, [r3, #60]	@ 0x3c
 800396c:	2b01      	cmp	r3, #1
 800396e:	d101      	bne.n	8003974 <HAL_I2C_Master_Receive+0x50>
 8003970:	2302      	movs	r3, #2
 8003972:	e203      	b.n	8003d7c <HAL_I2C_Master_Receive+0x458>
 8003974:	68fb      	ldr	r3, [r7, #12]
 8003976:	2201      	movs	r2, #1
 8003978:	f883 203c 	strb.w	r2, [r3, #60]	@ 0x3c

    /* Check if the I2C is already enabled */
    if ((hi2c->Instance->CR1 & I2C_CR1_PE) != I2C_CR1_PE)
 800397c:	68fb      	ldr	r3, [r7, #12]
 800397e:	681b      	ldr	r3, [r3, #0]
 8003980:	681b      	ldr	r3, [r3, #0]
 8003982:	f003 0301 	and.w	r3, r3, #1
 8003986:	2b01      	cmp	r3, #1
 8003988:	d007      	beq.n	800399a <HAL_I2C_Master_Receive+0x76>
    {
      /* Enable I2C peripheral */
      __HAL_I2C_ENABLE(hi2c);
 800398a:	68fb      	ldr	r3, [r7, #12]
 800398c:	681b      	ldr	r3, [r3, #0]
 800398e:	681a      	ldr	r2, [r3, #0]
 8003990:	68fb      	ldr	r3, [r7, #12]
 8003992:	681b      	ldr	r3, [r3, #0]
 8003994:	f042 0201 	orr.w	r2, r2, #1
 8003998:	601a      	str	r2, [r3, #0]
    }

    /* Disable Pos */
    CLEAR_BIT(hi2c->Instance->CR1, I2C_CR1_POS);
 800399a:	68fb      	ldr	r3, [r7, #12]
 800399c:	681b      	ldr	r3, [r3, #0]
 800399e:	681a      	ldr	r2, [r3, #0]
 80039a0:	68fb      	ldr	r3, [r7, #12]
 80039a2:	681b      	ldr	r3, [r3, #0]
 80039a4:	f422 6200 	bic.w	r2, r2, #2048	@ 0x800
 80039a8:	601a      	str	r2, [r3, #0]

    hi2c->State       = HAL_I2C_STATE_BUSY_RX;
 80039aa:	68fb      	ldr	r3, [r7, #12]
 80039ac:	2222      	movs	r2, #34	@ 0x22
 80039ae:	f883 203d 	strb.w	r2, [r3, #61]	@ 0x3d
    hi2c->Mode        = HAL_I2C_MODE_MASTER;
 80039b2:	68fb      	ldr	r3, [r7, #12]
 80039b4:	2210      	movs	r2, #16
 80039b6:	f883 203e 	strb.w	r2, [r3, #62]	@ 0x3e
    hi2c->ErrorCode   = HAL_I2C_ERROR_NONE;
 80039ba:	68fb      	ldr	r3, [r7, #12]
 80039bc:	2200      	movs	r2, #0
 80039be:	641a      	str	r2, [r3, #64]	@ 0x40

    /* Prepare transfer parameters */
    hi2c->pBuffPtr    = pData;
 80039c0:	68fb      	ldr	r3, [r7, #12]
 80039c2:	687a      	ldr	r2, [r7, #4]
 80039c4:	625a      	str	r2, [r3, #36]	@ 0x24
    hi2c->XferCount   = Size;
 80039c6:	68fb      	ldr	r3, [r7, #12]
 80039c8:	893a      	ldrh	r2, [r7, #8]
 80039ca:	855a      	strh	r2, [r3, #42]	@ 0x2a
    hi2c->XferSize    = hi2c->XferCount;
 80039cc:	68fb      	ldr	r3, [r7, #12]
 80039ce:	8d5b      	ldrh	r3, [r3, #42]	@ 0x2a
 80039d0:	b29a      	uxth	r2, r3
 80039d2:	68fb      	ldr	r3, [r7, #12]
 80039d4:	851a      	strh	r2, [r3, #40]	@ 0x28
    hi2c->XferOptions = I2C_NO_OPTION_FRAME;
 80039d6:	68fb      	ldr	r3, [r7, #12]
 80039d8:	4a5c      	ldr	r2, [pc, #368]	@ (8003b4c <HAL_I2C_Master_Receive+0x228>)
 80039da:	62da      	str	r2, [r3, #44]	@ 0x2c

    /* Send Slave Address */
    if (I2C_MasterRequestRead(hi2c, DevAddress, Timeout, tickstart) != HAL_OK)
 80039dc:	8979      	ldrh	r1, [r7, #10]
 80039de:	6a7b      	ldr	r3, [r7, #36]	@ 0x24
 80039e0:	6b3a      	ldr	r2, [r7, #48]	@ 0x30
 80039e2:	68f8      	ldr	r0, [r7, #12]
 80039e4:	f000 fa52 	bl	8003e8c <I2C_MasterRequestRead>
 80039e8:	4603      	mov	r3, r0
 80039ea:	2b00      	cmp	r3, #0
 80039ec:	d001      	beq.n	80039f2 <HAL_I2C_Master_Receive+0xce>
    {
      return HAL_ERROR;
 80039ee:	2301      	movs	r3, #1
 80039f0:	e1c4      	b.n	8003d7c <HAL_I2C_Master_Receive+0x458>
    }

    if (hi2c->XferSize == 0U)
 80039f2:	68fb      	ldr	r3, [r7, #12]
 80039f4:	8d1b      	ldrh	r3, [r3, #40]	@ 0x28
 80039f6:	2b00      	cmp	r3, #0
 80039f8:	d113      	bne.n	8003a22 <HAL_I2C_Master_Receive+0xfe>
    {
      /* Clear ADDR flag */
      __HAL_I2C_CLEAR_ADDRFLAG(hi2c);
 80039fa:	2300      	movs	r3, #0
 80039fc:	623b      	str	r3, [r7, #32]
 80039fe:	68fb      	ldr	r3, [r7, #12]
 8003a00:	681b      	ldr	r3, [r3, #0]
 8003a02:	695b      	ldr	r3, [r3, #20]
 8003a04:	623b      	str	r3, [r7, #32]
 8003a06:	68fb      	ldr	r3, [r7, #12]
 8003a08:	681b      	ldr	r3, [r3, #0]
 8003a0a:	699b      	ldr	r3, [r3, #24]
 8003a0c:	623b      	str	r3, [r7, #32]
 8003a0e:	6a3b      	ldr	r3, [r7, #32]

      /* Generate Stop */
      SET_BIT(hi2c->Instance->CR1, I2C_CR1_STOP);
 8003a10:	68fb      	ldr	r3, [r7, #12]
 8003a12:	681b      	ldr	r3, [r3, #0]
 8003a14:	681a      	ldr	r2, [r3, #0]
 8003a16:	68fb      	ldr	r3, [r7, #12]
 8003a18:	681b      	ldr	r3, [r3, #0]
 8003a1a:	f442 7200 	orr.w	r2, r2, #512	@ 0x200
 8003a1e:	601a      	str	r2, [r3, #0]
 8003a20:	e198      	b.n	8003d54 <HAL_I2C_Master_Receive+0x430>
    }
    else if (hi2c->XferSize == 1U)
 8003a22:	68fb      	ldr	r3, [r7, #12]
 8003a24:	8d1b      	ldrh	r3, [r3, #40]	@ 0x28
 8003a26:	2b01      	cmp	r3, #1
 8003a28:	d11b      	bne.n	8003a62 <HAL_I2C_Master_Receive+0x13e>
    {
      /* Disable Acknowledge */
      CLEAR_BIT(hi2c->Instance->CR1, I2C_CR1_ACK);
 8003a2a:	68fb      	ldr	r3, [r7, #12]
 8003a2c:	681b      	ldr	r3, [r3, #0]
 8003a2e:	681a      	ldr	r2, [r3, #0]
 8003a30:	68fb      	ldr	r3, [r7, #12]
 8003a32:	681b      	ldr	r3, [r3, #0]
 8003a34:	f422 6280 	bic.w	r2, r2, #1024	@ 0x400
 8003a38:	601a      	str	r2, [r3, #0]

      /* Clear ADDR flag */
      __HAL_I2C_CLEAR_ADDRFLAG(hi2c);
 8003a3a:	2300      	movs	r3, #0
 8003a3c:	61fb      	str	r3, [r7, #28]
 8003a3e:	68fb      	ldr	r3, [r7, #12]
 8003a40:	681b      	ldr	r3, [r3, #0]
 8003a42:	695b      	ldr	r3, [r3, #20]
 8003a44:	61fb      	str	r3, [r7, #28]
 8003a46:	68fb      	ldr	r3, [r7, #12]
 8003a48:	681b      	ldr	r3, [r3, #0]
 8003a4a:	699b      	ldr	r3, [r3, #24]
 8003a4c:	61fb      	str	r3, [r7, #28]
 8003a4e:	69fb      	ldr	r3, [r7, #28]

      /* Generate Stop */
      SET_BIT(hi2c->Instance->CR1, I2C_CR1_STOP);
 8003a50:	68fb      	ldr	r3, [r7, #12]
 8003a52:	681b      	ldr	r3, [r3, #0]
 8003a54:	681a      	ldr	r2, [r3, #0]
 8003a56:	68fb      	ldr	r3, [r7, #12]
 8003a58:	681b      	ldr	r3, [r3, #0]
 8003a5a:	f442 7200 	orr.w	r2, r2, #512	@ 0x200
 8003a5e:	601a      	str	r2, [r3, #0]
 8003a60:	e178      	b.n	8003d54 <HAL_I2C_Master_Receive+0x430>
    }
    else if (hi2c->XferSize == 2U)
 8003a62:	68fb      	ldr	r3, [r7, #12]
 8003a64:	8d1b      	ldrh	r3, [r3, #40]	@ 0x28
 8003a66:	2b02      	cmp	r3, #2
 8003a68:	d11b      	bne.n	8003aa2 <HAL_I2C_Master_Receive+0x17e>
    {
      /* Disable Acknowledge */
      CLEAR_BIT(hi2c->Instance->CR1, I2C_CR1_ACK);
 8003a6a:	68fb      	ldr	r3, [r7, #12]
 8003a6c:	681b      	ldr	r3, [r3, #0]
 8003a6e:	681a      	ldr	r2, [r3, #0]
 8003a70:	68fb      	ldr	r3, [r7, #12]
 8003a72:	681b      	ldr	r3, [r3, #0]
 8003a74:	f422 6280 	bic.w	r2, r2, #1024	@ 0x400
 8003a78:	601a      	str	r2, [r3, #0]

      /* Enable Pos */
      SET_BIT(hi2c->Instance->CR1, I2C_CR1_POS);
 8003a7a:	68fb      	ldr	r3, [r7, #12]
 8003a7c:	681b      	ldr	r3, [r3, #0]
 8003a7e:	681a      	ldr	r2, [r3, #0]
 8003a80:	68fb      	ldr	r3, [r7, #12]
 8003a82:	681b      	ldr	r3, [r3, #0]
 8003a84:	f442 6200 	orr.w	r2, r2, #2048	@ 0x800
 8003a88:	601a      	str	r2, [r3, #0]

      /* Clear ADDR flag */
      __HAL_I2C_CLEAR_ADDRFLAG(hi2c);
 8003a8a:	2300      	movs	r3, #0
 8003a8c:	61bb      	str	r3, [r7, #24]
 8003a8e:	68fb      	ldr	r3, [r7, #12]
 8003a90:	681b      	ldr	r3, [r3, #0]
 8003a92:	695b      	ldr	r3, [r3, #20]
 8003a94:	61bb      	str	r3, [r7, #24]
 8003a96:	68fb      	ldr	r3, [r7, #12]
 8003a98:	681b      	ldr	r3, [r3, #0]
 8003a9a:	699b      	ldr	r3, [r3, #24]
 8003a9c:	61bb      	str	r3, [r7, #24]
 8003a9e:	69bb      	ldr	r3, [r7, #24]
 8003aa0:	e158      	b.n	8003d54 <HAL_I2C_Master_Receive+0x430>
    }
    else
    {
      /* Enable Acknowledge */
      SET_BIT(hi2c->Instance->CR1, I2C_CR1_ACK);
 8003aa2:	68fb      	ldr	r3, [r7, #12]
 8003aa4:	681b      	ldr	r3, [r3, #0]
 8003aa6:	681a      	ldr	r2, [r3, #0]
 8003aa8:	68fb      	ldr	r3, [r7, #12]
 8003aaa:	681b      	ldr	r3, [r3, #0]
 8003aac:	f442 6280 	orr.w	r2, r2, #1024	@ 0x400
 8003ab0:	601a      	str	r2, [r3, #0]

      /* Clear ADDR flag */
      __HAL_I2C_CLEAR_ADDRFLAG(hi2c);
 8003ab2:	2300      	movs	r3, #0
 8003ab4:	617b      	str	r3, [r7, #20]
 8003ab6:	68fb      	ldr	r3, [r7, #12]
 8003ab8:	681b      	ldr	r3, [r3, #0]
 8003aba:	695b      	ldr	r3, [r3, #20]
 8003abc:	617b      	str	r3, [r7, #20]
 8003abe:	68fb      	ldr	r3, [r7, #12]
 8003ac0:	681b      	ldr	r3, [r3, #0]
 8003ac2:	699b      	ldr	r3, [r3, #24]
 8003ac4:	617b      	str	r3, [r7, #20]
 8003ac6:	697b      	ldr	r3, [r7, #20]
    }

    while (hi2c->XferSize > 0U)
 8003ac8:	e144      	b.n	8003d54 <HAL_I2C_Master_Receive+0x430>
    {
      if (hi2c->XferSize <= 3U)
 8003aca:	68fb      	ldr	r3, [r7, #12]
 8003acc:	8d1b      	ldrh	r3, [r3, #40]	@ 0x28
 8003ace:	2b03      	cmp	r3, #3
 8003ad0:	f200 80f1 	bhi.w	8003cb6 <HAL_I2C_Master_Receive+0x392>
      {
        /* One byte */
        if (hi2c->XferSize == 1U)
 8003ad4:	68fb      	ldr	r3, [r7, #12]
 8003ad6:	8d1b      	ldrh	r3, [r3, #40]	@ 0x28
 8003ad8:	2b01      	cmp	r3, #1
 8003ada:	d123      	bne.n	8003b24 <HAL_I2C_Master_Receive+0x200>
        {
          /* Wait until RXNE flag is set */
          if (I2C_WaitOnRXNEFlagUntilTimeout(hi2c, Timeout, tickstart) != HAL_OK)
 8003adc:	6a7a      	ldr	r2, [r7, #36]	@ 0x24
 8003ade:	6b39      	ldr	r1, [r7, #48]	@ 0x30
 8003ae0:	68f8      	ldr	r0, [r7, #12]
 8003ae2:	f000 fc4b 	bl	800437c <I2C_WaitOnRXNEFlagUntilTimeout>
 8003ae6:	4603      	mov	r3, r0
 8003ae8:	2b00      	cmp	r3, #0
 8003aea:	d001      	beq.n	8003af0 <HAL_I2C_Master_Receive+0x1cc>
          {
            return HAL_ERROR;
 8003aec:	2301      	movs	r3, #1
 8003aee:	e145      	b.n	8003d7c <HAL_I2C_Master_Receive+0x458>
          }

          /* Read data from DR */
          *hi2c->pBuffPtr = (uint8_t)hi2c->Instance->DR;
 8003af0:	68fb      	ldr	r3, [r7, #12]
 8003af2:	681b      	ldr	r3, [r3, #0]
 8003af4:	691a      	ldr	r2, [r3, #16]
 8003af6:	68fb      	ldr	r3, [r7, #12]
 8003af8:	6a5b      	ldr	r3, [r3, #36]	@ 0x24
 8003afa:	b2d2      	uxtb	r2, r2
 8003afc:	701a      	strb	r2, [r3, #0]

          /* Increment Buffer pointer */
          hi2c->pBuffPtr++;
 8003afe:	68fb      	ldr	r3, [r7, #12]
 8003b00:	6a5b      	ldr	r3, [r3, #36]	@ 0x24
 8003b02:	1c5a      	adds	r2, r3, #1
 8003b04:	68fb      	ldr	r3, [r7, #12]
 8003b06:	625a      	str	r2, [r3, #36]	@ 0x24

          /* Update counter */
          hi2c->XferSize--;
 8003b08:	68fb      	ldr	r3, [r7, #12]
 8003b0a:	8d1b      	ldrh	r3, [r3, #40]	@ 0x28
 8003b0c:	3b01      	subs	r3, #1
 8003b0e:	b29a      	uxth	r2, r3
 8003b10:	68fb      	ldr	r3, [r7, #12]
 8003b12:	851a      	strh	r2, [r3, #40]	@ 0x28
          hi2c->XferCount--;
 8003b14:	68fb      	ldr	r3, [r7, #12]
 8003b16:	8d5b      	ldrh	r3, [r3, #42]	@ 0x2a
 8003b18:	b29b      	uxth	r3, r3
 8003b1a:	3b01      	subs	r3, #1
 8003b1c:	b29a      	uxth	r2, r3
 8003b1e:	68fb      	ldr	r3, [r7, #12]
 8003b20:	855a      	strh	r2, [r3, #42]	@ 0x2a
 8003b22:	e117      	b.n	8003d54 <HAL_I2C_Master_Receive+0x430>
        }
        /* Two bytes */
        else if (hi2c->XferSize == 2U)
 8003b24:	68fb      	ldr	r3, [r7, #12]
 8003b26:	8d1b      	ldrh	r3, [r3, #40]	@ 0x28
 8003b28:	2b02      	cmp	r3, #2
 8003b2a:	d14e      	bne.n	8003bca <HAL_I2C_Master_Receive+0x2a6>
        {
          /* Wait until BTF flag is set */
          if (I2C_WaitOnFlagUntilTimeout(hi2c, I2C_FLAG_BTF, RESET, Timeout, tickstart) != HAL_OK)
 8003b2c:	6a7b      	ldr	r3, [r7, #36]	@ 0x24
 8003b2e:	9300      	str	r3, [sp, #0]
 8003b30:	6b3b      	ldr	r3, [r7, #48]	@ 0x30
 8003b32:	2200      	movs	r2, #0
 8003b34:	4906      	ldr	r1, [pc, #24]	@ (8003b50 <HAL_I2C_Master_Receive+0x22c>)
 8003b36:	68f8      	ldr	r0, [r7, #12]
 8003b38:	f000 fa76 	bl	8004028 <I2C_WaitOnFlagUntilTimeout>
 8003b3c:	4603      	mov	r3, r0
 8003b3e:	2b00      	cmp	r3, #0
 8003b40:	d008      	beq.n	8003b54 <HAL_I2C_Master_Receive+0x230>
          {
            return HAL_ERROR;
 8003b42:	2301      	movs	r3, #1
 8003b44:	e11a      	b.n	8003d7c <HAL_I2C_Master_Receive+0x458>
 8003b46:	bf00      	nop
 8003b48:	00100002 	.word	0x00100002
 8003b4c:	ffff0000 	.word	0xffff0000
 8003b50:	00010004 	.word	0x00010004
          }

          /* Generate Stop */
          SET_BIT(hi2c->Instance->CR1, I2C_CR1_STOP);
 8003b54:	68fb      	ldr	r3, [r7, #12]
 8003b56:	681b      	ldr	r3, [r3, #0]
 8003b58:	681a      	ldr	r2, [r3, #0]
 8003b5a:	68fb      	ldr	r3, [r7, #12]
 8003b5c:	681b      	ldr	r3, [r3, #0]
 8003b5e:	f442 7200 	orr.w	r2, r2, #512	@ 0x200
 8003b62:	601a      	str	r2, [r3, #0]

          /* Read data from DR */
          *hi2c->pBuffPtr = (uint8_t)hi2c->Instance->DR;
 8003b64:	68fb      	ldr	r3, [r7, #12]
 8003b66:	681b      	ldr	r3, [r3, #0]
 8003b68:	691a      	ldr	r2, [r3, #16]
 8003b6a:	68fb      	ldr	r3, [r7, #12]
 8003b6c:	6a5b      	ldr	r3, [r3, #36]	@ 0x24
 8003b6e:	b2d2      	uxtb	r2, r2
 8003b70:	701a      	strb	r2, [r3, #0]

          /* Increment Buffer pointer */
          hi2c->pBuffPtr++;
 8003b72:	68fb      	ldr	r3, [r7, #12]
 8003b74:	6a5b      	ldr	r3, [r3, #36]	@ 0x24
 8003b76:	1c5a      	adds	r2, r3, #1
 8003b78:	68fb      	ldr	r3, [r7, #12]
 8003b7a:	625a      	str	r2, [r3, #36]	@ 0x24

          /* Update counter */
          hi2c->XferSize--;
 8003b7c:	68fb      	ldr	r3, [r7, #12]
 8003b7e:	8d1b      	ldrh	r3, [r3, #40]	@ 0x28
 8003b80:	3b01      	subs	r3, #1
 8003b82:	b29a      	uxth	r2, r3
 8003b84:	68fb      	ldr	r3, [r7, #12]
 8003b86:	851a      	strh	r2, [r3, #40]	@ 0x28
          hi2c->XferCount--;
 8003b88:	68fb      	ldr	r3, [r7, #12]
 8003b8a:	8d5b      	ldrh	r3, [r3, #42]	@ 0x2a
 8003b8c:	b29b      	uxth	r3, r3
 8003b8e:	3b01      	subs	r3, #1
 8003b90:	b29a      	uxth	r2, r3
 8003b92:	68fb      	ldr	r3, [r7, #12]
 8003b94:	855a      	strh	r2, [r3, #42]	@ 0x2a

          /* Read data from DR */
          *hi2c->pBuffPtr = (uint8_t)hi2c->Instance->DR;
 8003b96:	68fb      	ldr	r3, [r7, #12]
 8003b98:	681b      	ldr	r3, [r3, #0]
 8003b9a:	691a      	ldr	r2, [r3, #16]
 8003b9c:	68fb      	ldr	r3, [r7, #12]
 8003b9e:	6a5b      	ldr	r3, [r3, #36]	@ 0x24
 8003ba0:	b2d2      	uxtb	r2, r2
 8003ba2:	701a      	strb	r2, [r3, #0]

          /* Increment Buffer pointer */
          hi2c->pBuffPtr++;
 8003ba4:	68fb      	ldr	r3, [r7, #12]
 8003ba6:	6a5b      	ldr	r3, [r3, #36]	@ 0x24
 8003ba8:	1c5a      	adds	r2, r3, #1
 8003baa:	68fb      	ldr	r3, [r7, #12]
 8003bac:	625a      	str	r2, [r3, #36]	@ 0x24

          /* Update counter */
          hi2c->XferSize--;
 8003bae:	68fb      	ldr	r3, [r7, #12]
 8003bb0:	8d1b      	ldrh	r3, [r3, #40]	@ 0x28
 8003bb2:	3b01      	subs	r3, #1
 8003bb4:	b29a      	uxth	r2, r3
 8003bb6:	68fb      	ldr	r3, [r7, #12]
 8003bb8:	851a      	strh	r2, [r3, #40]	@ 0x28
          hi2c->XferCount--;
 8003bba:	68fb      	ldr	r3, [r7, #12]
 8003bbc:	8d5b      	ldrh	r3, [r3, #42]	@ 0x2a
 8003bbe:	b29b      	uxth	r3, r3
 8003bc0:	3b01      	subs	r3, #1
 8003bc2:	b29a      	uxth	r2, r3
 8003bc4:	68fb      	ldr	r3, [r7, #12]
 8003bc6:	855a      	strh	r2, [r3, #42]	@ 0x2a
 8003bc8:	e0c4      	b.n	8003d54 <HAL_I2C_Master_Receive+0x430>
        }
        /* 3 Last bytes */
        else
        {
          /* Wait until BTF flag is set */
          if (I2C_WaitOnFlagUntilTimeout(hi2c, I2C_FLAG_BTF, RESET, Timeout, tickstart) != HAL_OK)
 8003bca:	6a7b      	ldr	r3, [r7, #36]	@ 0x24
 8003bcc:	9300      	str	r3, [sp, #0]
 8003bce:	6b3b      	ldr	r3, [r7, #48]	@ 0x30
 8003bd0:	2200      	movs	r2, #0
 8003bd2:	496c      	ldr	r1, [pc, #432]	@ (8003d84 <HAL_I2C_Master_Receive+0x460>)
 8003bd4:	68f8      	ldr	r0, [r7, #12]
 8003bd6:	f000 fa27 	bl	8004028 <I2C_WaitOnFlagUntilTimeout>
 8003bda:	4603      	mov	r3, r0
 8003bdc:	2b00      	cmp	r3, #0
 8003bde:	d001      	beq.n	8003be4 <HAL_I2C_Master_Receive+0x2c0>
          {
            return HAL_ERROR;
 8003be0:	2301      	movs	r3, #1
 8003be2:	e0cb      	b.n	8003d7c <HAL_I2C_Master_Receive+0x458>
          }

          /* Disable Acknowledge */
          CLEAR_BIT(hi2c->Instance->CR1, I2C_CR1_ACK);
 8003be4:	68fb      	ldr	r3, [r7, #12]
 8003be6:	681b      	ldr	r3, [r3, #0]
 8003be8:	681a      	ldr	r2, [r3, #0]
 8003bea:	68fb      	ldr	r3, [r7, #12]
 8003bec:	681b      	ldr	r3, [r3, #0]
 8003bee:	f422 6280 	bic.w	r2, r2, #1024	@ 0x400
 8003bf2:	601a      	str	r2, [r3, #0]

          /* Read data from DR */
          *hi2c->pBuffPtr = (uint8_t)hi2c->Instance->DR;
 8003bf4:	68fb      	ldr	r3, [r7, #12]
 8003bf6:	681b      	ldr	r3, [r3, #0]
 8003bf8:	691a      	ldr	r2, [r3, #16]
 8003bfa:	68fb      	ldr	r3, [r7, #12]
 8003bfc:	6a5b      	ldr	r3, [r3, #36]	@ 0x24
 8003bfe:	b2d2      	uxtb	r2, r2
 8003c00:	701a      	strb	r2, [r3, #0]

          /* Increment Buffer pointer */
          hi2c->pBuffPtr++;
 8003c02:	68fb      	ldr	r3, [r7, #12]
 8003c04:	6a5b      	ldr	r3, [r3, #36]	@ 0x24
 8003c06:	1c5a      	adds	r2, r3, #1
 8003c08:	68fb      	ldr	r3, [r7, #12]
 8003c0a:	625a      	str	r2, [r3, #36]	@ 0x24

          /* Update counter */
          hi2c->XferSize--;
 8003c0c:	68fb      	ldr	r3, [r7, #12]
 8003c0e:	8d1b      	ldrh	r3, [r3, #40]	@ 0x28
 8003c10:	3b01      	subs	r3, #1
 8003c12:	b29a      	uxth	r2, r3
 8003c14:	68fb      	ldr	r3, [r7, #12]
 8003c16:	851a      	strh	r2, [r3, #40]	@ 0x28
          hi2c->XferCount--;
 8003c18:	68fb      	ldr	r3, [r7, #12]
 8003c1a:	8d5b      	ldrh	r3, [r3, #42]	@ 0x2a
 8003c1c:	b29b      	uxth	r3, r3
 8003c1e:	3b01      	subs	r3, #1
 8003c20:	b29a      	uxth	r2, r3
 8003c22:	68fb      	ldr	r3, [r7, #12]
 8003c24:	855a      	strh	r2, [r3, #42]	@ 0x2a

          /* Wait until BTF flag is set */
          if (I2C_WaitOnFlagUntilTimeout(hi2c, I2C_FLAG_BTF, RESET, Timeout, tickstart) != HAL_OK)
 8003c26:	6a7b      	ldr	r3, [r7, #36]	@ 0x24
 8003c28:	9300      	str	r3, [sp, #0]
 8003c2a:	6b3b      	ldr	r3, [r7, #48]	@ 0x30
 8003c2c:	2200      	movs	r2, #0
 8003c2e:	4955      	ldr	r1, [pc, #340]	@ (8003d84 <HAL_I2C_Master_Receive+0x460>)
 8003c30:	68f8      	ldr	r0, [r7, #12]
 8003c32:	f000 f9f9 	bl	8004028 <I2C_WaitOnFlagUntilTimeout>
 8003c36:	4603      	mov	r3, r0
 8003c38:	2b00      	cmp	r3, #0
 8003c3a:	d001      	beq.n	8003c40 <HAL_I2C_Master_Receive+0x31c>
          {
            return HAL_ERROR;
 8003c3c:	2301      	movs	r3, #1
 8003c3e:	e09d      	b.n	8003d7c <HAL_I2C_Master_Receive+0x458>
          }

          /* Generate Stop */
          SET_BIT(hi2c->Instance->CR1, I2C_CR1_STOP);
 8003c40:	68fb      	ldr	r3, [r7, #12]
 8003c42:	681b      	ldr	r3, [r3, #0]
 8003c44:	681a      	ldr	r2, [r3, #0]
 8003c46:	68fb      	ldr	r3, [r7, #12]
 8003c48:	681b      	ldr	r3, [r3, #0]
 8003c4a:	f442 7200 	orr.w	r2, r2, #512	@ 0x200
 8003c4e:	601a      	str	r2, [r3, #0]

          /* Read data from DR */
          *hi2c->pBuffPtr = (uint8_t)hi2c->Instance->DR;
 8003c50:	68fb      	ldr	r3, [r7, #12]
 8003c52:	681b      	ldr	r3, [r3, #0]
 8003c54:	691a      	ldr	r2, [r3, #16]
 8003c56:	68fb      	ldr	r3, [r7, #12]
 8003c58:	6a5b      	ldr	r3, [r3, #36]	@ 0x24
 8003c5a:	b2d2      	uxtb	r2, r2
 8003c5c:	701a      	strb	r2, [r3, #0]

          /* Increment Buffer pointer */
          hi2c->pBuffPtr++;
 8003c5e:	68fb      	ldr	r3, [r7, #12]
 8003c60:	6a5b      	ldr	r3, [r3, #36]	@ 0x24
 8003c62:	1c5a      	adds	r2, r3, #1
 8003c64:	68fb      	ldr	r3, [r7, #12]
 8003c66:	625a      	str	r2, [r3, #36]	@ 0x24

          /* Update counter */
          hi2c->XferSize--;
 8003c68:	68fb      	ldr	r3, [r7, #12]
 8003c6a:	8d1b      	ldrh	r3, [r3, #40]	@ 0x28
 8003c6c:	3b01      	subs	r3, #1
 8003c6e:	b29a      	uxth	r2, r3
 8003c70:	68fb      	ldr	r3, [r7, #12]
 8003c72:	851a      	strh	r2, [r3, #40]	@ 0x28
          hi2c->XferCount--;
 8003c74:	68fb      	ldr	r3, [r7, #12]
 8003c76:	8d5b      	ldrh	r3, [r3, #42]	@ 0x2a
 8003c78:	b29b      	uxth	r3, r3
 8003c7a:	3b01      	subs	r3, #1
 8003c7c:	b29a      	uxth	r2, r3
 8003c7e:	68fb      	ldr	r3, [r7, #12]
 8003c80:	855a      	strh	r2, [r3, #42]	@ 0x2a

          /* Read data from DR */
          *hi2c->pBuffPtr = (uint8_t)hi2c->Instance->DR;
 8003c82:	68fb      	ldr	r3, [r7, #12]
 8003c84:	681b      	ldr	r3, [r3, #0]
 8003c86:	691a      	ldr	r2, [r3, #16]
 8003c88:	68fb      	ldr	r3, [r7, #12]
 8003c8a:	6a5b      	ldr	r3, [r3, #36]	@ 0x24
 8003c8c:	b2d2      	uxtb	r2, r2
 8003c8e:	701a      	strb	r2, [r3, #0]

          /* Increment Buffer pointer */
          hi2c->pBuffPtr++;
 8003c90:	68fb      	ldr	r3, [r7, #12]
 8003c92:	6a5b      	ldr	r3, [r3, #36]	@ 0x24
 8003c94:	1c5a      	adds	r2, r3, #1
 8003c96:	68fb      	ldr	r3, [r7, #12]
 8003c98:	625a      	str	r2, [r3, #36]	@ 0x24

          /* Update counter */
          hi2c->XferSize--;
 8003c9a:	68fb      	ldr	r3, [r7, #12]
 8003c9c:	8d1b      	ldrh	r3, [r3, #40]	@ 0x28
 8003c9e:	3b01      	subs	r3, #1
 8003ca0:	b29a      	uxth	r2, r3
 8003ca2:	68fb      	ldr	r3, [r7, #12]
 8003ca4:	851a      	strh	r2, [r3, #40]	@ 0x28
          hi2c->XferCount--;
 8003ca6:	68fb      	ldr	r3, [r7, #12]
 8003ca8:	8d5b      	ldrh	r3, [r3, #42]	@ 0x2a
 8003caa:	b29b      	uxth	r3, r3
 8003cac:	3b01      	subs	r3, #1
 8003cae:	b29a      	uxth	r2, r3
 8003cb0:	68fb      	ldr	r3, [r7, #12]
 8003cb2:	855a      	strh	r2, [r3, #42]	@ 0x2a
 8003cb4:	e04e      	b.n	8003d54 <HAL_I2C_Master_Receive+0x430>
        }
      }
      else
      {
        /* Wait until RXNE flag is set */
        if (I2C_WaitOnRXNEFlagUntilTimeout(hi2c, Timeout, tickstart) != HAL_OK)
 8003cb6:	6a7a      	ldr	r2, [r7, #36]	@ 0x24
 8003cb8:	6b39      	ldr	r1, [r7, #48]	@ 0x30
 8003cba:	68f8      	ldr	r0, [r7, #12]
 8003cbc:	f000 fb5e 	bl	800437c <I2C_WaitOnRXNEFlagUntilTimeout>
 8003cc0:	4603      	mov	r3, r0
 8003cc2:	2b00      	cmp	r3, #0
 8003cc4:	d001      	beq.n	8003cca <HAL_I2C_Master_Receive+0x3a6>
        {
          return HAL_ERROR;
 8003cc6:	2301      	movs	r3, #1
 8003cc8:	e058      	b.n	8003d7c <HAL_I2C_Master_Receive+0x458>
        }

        /* Read data from DR */
        *hi2c->pBuffPtr = (uint8_t)hi2c->Instance->DR;
 8003cca:	68fb      	ldr	r3, [r7, #12]
 8003ccc:	681b      	ldr	r3, [r3, #0]
 8003cce:	691a      	ldr	r2, [r3, #16]
 8003cd0:	68fb      	ldr	r3, [r7, #12]
 8003cd2:	6a5b      	ldr	r3, [r3, #36]	@ 0x24
 8003cd4:	b2d2      	uxtb	r2, r2
 8003cd6:	701a      	strb	r2, [r3, #0]

        /* Increment Buffer pointer */
        hi2c->pBuffPtr++;
 8003cd8:	68fb      	ldr	r3, [r7, #12]
 8003cda:	6a5b      	ldr	r3, [r3, #36]	@ 0x24
 8003cdc:	1c5a      	adds	r2, r3, #1
 8003cde:	68fb      	ldr	r3, [r7, #12]
 8003ce0:	625a      	str	r2, [r3, #36]	@ 0x24

        /* Update counter */
        hi2c->XferSize--;
 8003ce2:	68fb      	ldr	r3, [r7, #12]
 8003ce4:	8d1b      	ldrh	r3, [r3, #40]	@ 0x28
 8003ce6:	3b01      	subs	r3, #1
 8003ce8:	b29a      	uxth	r2, r3
 8003cea:	68fb      	ldr	r3, [r7, #12]
 8003cec:	851a      	strh	r2, [r3, #40]	@ 0x28
        hi2c->XferCount--;
 8003cee:	68fb      	ldr	r3, [r7, #12]
 8003cf0:	8d5b      	ldrh	r3, [r3, #42]	@ 0x2a
 8003cf2:	b29b      	uxth	r3, r3
 8003cf4:	3b01      	subs	r3, #1
 8003cf6:	b29a      	uxth	r2, r3
 8003cf8:	68fb      	ldr	r3, [r7, #12]
 8003cfa:	855a      	strh	r2, [r3, #42]	@ 0x2a

        if (__HAL_I2C_GET_FLAG(hi2c, I2C_FLAG_BTF) == SET)
 8003cfc:	68fb      	ldr	r3, [r7, #12]
 8003cfe:	681b      	ldr	r3, [r3, #0]
 8003d00:	695b      	ldr	r3, [r3, #20]
 8003d02:	f003 0304 	and.w	r3, r3, #4
 8003d06:	2b04      	cmp	r3, #4
 8003d08:	d124      	bne.n	8003d54 <HAL_I2C_Master_Receive+0x430>
        {

          if (hi2c->XferSize == 3U)
 8003d0a:	68fb      	ldr	r3, [r7, #12]
 8003d0c:	8d1b      	ldrh	r3, [r3, #40]	@ 0x28
 8003d0e:	2b03      	cmp	r3, #3
 8003d10:	d107      	bne.n	8003d22 <HAL_I2C_Master_Receive+0x3fe>
          {
            /* Disable Acknowledge */
            CLEAR_BIT(hi2c->Instance->CR1, I2C_CR1_ACK);
 8003d12:	68fb      	ldr	r3, [r7, #12]
 8003d14:	681b      	ldr	r3, [r3, #0]
 8003d16:	681a      	ldr	r2, [r3, #0]
 8003d18:	68fb      	ldr	r3, [r7, #12]
 8003d1a:	681b      	ldr	r3, [r3, #0]
 8003d1c:	f422 6280 	bic.w	r2, r2, #1024	@ 0x400
 8003d20:	601a      	str	r2, [r3, #0]
          }

          /* Read data from DR */
          *hi2c->pBuffPtr = (uint8_t)hi2c->Instance->DR;
 8003d22:	68fb      	ldr	r3, [r7, #12]
 8003d24:	681b      	ldr	r3, [r3, #0]
 8003d26:	691a      	ldr	r2, [r3, #16]
 8003d28:	68fb      	ldr	r3, [r7, #12]
 8003d2a:	6a5b      	ldr	r3, [r3, #36]	@ 0x24
 8003d2c:	b2d2      	uxtb	r2, r2
 8003d2e:	701a      	strb	r2, [r3, #0]

          /* Increment Buffer pointer */
          hi2c->pBuffPtr++;
 8003d30:	68fb      	ldr	r3, [r7, #12]
 8003d32:	6a5b      	ldr	r3, [r3, #36]	@ 0x24
 8003d34:	1c5a      	adds	r2, r3, #1
 8003d36:	68fb      	ldr	r3, [r7, #12]
 8003d38:	625a      	str	r2, [r3, #36]	@ 0x24

          /* Update counter */
          hi2c->XferSize--;
 8003d3a:	68fb      	ldr	r3, [r7, #12]
 8003d3c:	8d1b      	ldrh	r3, [r3, #40]	@ 0x28
 8003d3e:	3b01      	subs	r3, #1
 8003d40:	b29a      	uxth	r2, r3
 8003d42:	68fb      	ldr	r3, [r7, #12]
 8003d44:	851a      	strh	r2, [r3, #40]	@ 0x28
          hi2c->XferCount--;
 8003d46:	68fb      	ldr	r3, [r7, #12]
 8003d48:	8d5b      	ldrh	r3, [r3, #42]	@ 0x2a
 8003d4a:	b29b      	uxth	r3, r3
 8003d4c:	3b01      	subs	r3, #1
 8003d4e:	b29a      	uxth	r2, r3
 8003d50:	68fb      	ldr	r3, [r7, #12]
 8003d52:	855a      	strh	r2, [r3, #42]	@ 0x2a
    while (hi2c->XferSize > 0U)
 8003d54:	68fb      	ldr	r3, [r7, #12]
 8003d56:	8d1b      	ldrh	r3, [r3, #40]	@ 0x28
 8003d58:	2b00      	cmp	r3, #0
 8003d5a:	f47f aeb6 	bne.w	8003aca <HAL_I2C_Master_Receive+0x1a6>
        }
      }
    }

    hi2c->State = HAL_I2C_STATE_READY;
 8003d5e:	68fb      	ldr	r3, [r7, #12]
 8003d60:	2220      	movs	r2, #32
 8003d62:	f883 203d 	strb.w	r2, [r3, #61]	@ 0x3d
    hi2c->Mode = HAL_I2C_MODE_NONE;
 8003d66:	68fb      	ldr	r3, [r7, #12]
 8003d68:	2200      	movs	r2, #0
 8003d6a:	f883 203e 	strb.w	r2, [r3, #62]	@ 0x3e

    /* Process Unlocked */
    __HAL_UNLOCK(hi2c);
 8003d6e:	68fb      	ldr	r3, [r7, #12]
 8003d70:	2200      	movs	r2, #0
 8003d72:	f883 203c 	strb.w	r2, [r3, #60]	@ 0x3c

    return HAL_OK;
 8003d76:	2300      	movs	r3, #0
 8003d78:	e000      	b.n	8003d7c <HAL_I2C_Master_Receive+0x458>
  }
  else
  {
    return HAL_BUSY;
 8003d7a:	2302      	movs	r3, #2
  }
}
 8003d7c:	4618      	mov	r0, r3
 8003d7e:	3728      	adds	r7, #40	@ 0x28
 8003d80:	46bd      	mov	sp, r7
 8003d82:	bd80      	pop	{r7, pc}
 8003d84:	00010004 	.word	0x00010004

08003d88 <I2C_MasterRequestWrite>:
  * @param  Timeout Timeout duration
  * @param  Tickstart Tick start value
  * @retval HAL status
  */
static HAL_StatusTypeDef I2C_MasterRequestWrite(I2C_HandleTypeDef *hi2c, uint16_t DevAddress, uint32_t Timeout, uint32_t Tickstart)
{
 8003d88:	b580      	push	{r7, lr}
 8003d8a:	b088      	sub	sp, #32
 8003d8c:	af02      	add	r7, sp, #8
 8003d8e:	60f8      	str	r0, [r7, #12]
 8003d90:	607a      	str	r2, [r7, #4]
 8003d92:	603b      	str	r3, [r7, #0]
 8003d94:	460b      	mov	r3, r1
 8003d96:	817b      	strh	r3, [r7, #10]
  /* Declaration of temporary variable to prevent undefined behavior of volatile usage */
  uint32_t CurrentXferOptions = hi2c->XferOptions;
 8003d98:	68fb      	ldr	r3, [r7, #12]
 8003d9a:	6adb      	ldr	r3, [r3, #44]	@ 0x2c
 8003d9c:	617b      	str	r3, [r7, #20]

  /* Generate Start condition if first transfer */
  if ((CurrentXferOptions == I2C_FIRST_AND_LAST_FRAME) || (CurrentXferOptions == I2C_FIRST_FRAME) || (CurrentXferOptions == I2C_NO_OPTION_FRAME))
 8003d9e:	697b      	ldr	r3, [r7, #20]
 8003da0:	2b08      	cmp	r3, #8
 8003da2:	d006      	beq.n	8003db2 <I2C_MasterRequestWrite+0x2a>
 8003da4:	697b      	ldr	r3, [r7, #20]
 8003da6:	2b01      	cmp	r3, #1
 8003da8:	d003      	beq.n	8003db2 <I2C_MasterRequestWrite+0x2a>
 8003daa:	697b      	ldr	r3, [r7, #20]
 8003dac:	f513 3f80 	cmn.w	r3, #65536	@ 0x10000
 8003db0:	d108      	bne.n	8003dc4 <I2C_MasterRequestWrite+0x3c>
  {
    /* Generate Start */
    SET_BIT(hi2c->Instance->CR1, I2C_CR1_START);
 8003db2:	68fb      	ldr	r3, [r7, #12]
 8003db4:	681b      	ldr	r3, [r3, #0]
 8003db6:	681a      	ldr	r2, [r3, #0]
 8003db8:	68fb      	ldr	r3, [r7, #12]
 8003dba:	681b      	ldr	r3, [r3, #0]
 8003dbc:	f442 7280 	orr.w	r2, r2, #256	@ 0x100
 8003dc0:	601a      	str	r2, [r3, #0]
 8003dc2:	e00b      	b.n	8003ddc <I2C_MasterRequestWrite+0x54>
  }
  else if (hi2c->PreviousState == I2C_STATE_MASTER_BUSY_RX)
 8003dc4:	68fb      	ldr	r3, [r7, #12]
 8003dc6:	6b1b      	ldr	r3, [r3, #48]	@ 0x30
 8003dc8:	2b12      	cmp	r3, #18
 8003dca:	d107      	bne.n	8003ddc <I2C_MasterRequestWrite+0x54>
  {
    /* Generate ReStart */
    SET_BIT(hi2c->Instance->CR1, I2C_CR1_START);
 8003dcc:	68fb      	ldr	r3, [r7, #12]
 8003dce:	681b      	ldr	r3, [r3, #0]
 8003dd0:	681a      	ldr	r2, [r3, #0]
 8003dd2:	68fb      	ldr	r3, [r7, #12]
 8003dd4:	681b      	ldr	r3, [r3, #0]
 8003dd6:	f442 7280 	orr.w	r2, r2, #256	@ 0x100
 8003dda:	601a      	str	r2, [r3, #0]
  {
    /* Do nothing */
  }

  /* Wait until SB flag is set */
  if (I2C_WaitOnFlagUntilTimeout(hi2c, I2C_FLAG_SB, RESET, Timeout, Tickstart) != HAL_OK)
 8003ddc:	683b      	ldr	r3, [r7, #0]
 8003dde:	9300      	str	r3, [sp, #0]
 8003de0:	687b      	ldr	r3, [r7, #4]
 8003de2:	2200      	movs	r2, #0
 8003de4:	f04f 1101 	mov.w	r1, #65537	@ 0x10001
 8003de8:	68f8      	ldr	r0, [r7, #12]
 8003dea:	f000 f91d 	bl	8004028 <I2C_WaitOnFlagUntilTimeout>
 8003dee:	4603      	mov	r3, r0
 8003df0:	2b00      	cmp	r3, #0
 8003df2:	d00d      	beq.n	8003e10 <I2C_MasterRequestWrite+0x88>
  {
    if (READ_BIT(hi2c->Instance->CR1, I2C_CR1_START) == I2C_CR1_START)
 8003df4:	68fb      	ldr	r3, [r7, #12]
 8003df6:	681b      	ldr	r3, [r3, #0]
 8003df8:	681b      	ldr	r3, [r3, #0]
 8003dfa:	f403 7380 	and.w	r3, r3, #256	@ 0x100
 8003dfe:	f5b3 7f80 	cmp.w	r3, #256	@ 0x100
 8003e02:	d103      	bne.n	8003e0c <I2C_MasterRequestWrite+0x84>
    {
      hi2c->ErrorCode = HAL_I2C_WRONG_START;
 8003e04:	68fb      	ldr	r3, [r7, #12]
 8003e06:	f44f 7200 	mov.w	r2, #512	@ 0x200
 8003e0a:	641a      	str	r2, [r3, #64]	@ 0x40
    }
    return HAL_TIMEOUT;
 8003e0c:	2303      	movs	r3, #3
 8003e0e:	e035      	b.n	8003e7c <I2C_MasterRequestWrite+0xf4>
  }

  if (hi2c->Init.AddressingMode == I2C_ADDRESSINGMODE_7BIT)
 8003e10:	68fb      	ldr	r3, [r7, #12]
 8003e12:	691b      	ldr	r3, [r3, #16]
 8003e14:	f5b3 4f80 	cmp.w	r3, #16384	@ 0x4000
 8003e18:	d108      	bne.n	8003e2c <I2C_MasterRequestWrite+0xa4>
  {
    /* Send slave address */
    hi2c->Instance->DR = I2C_7BIT_ADD_WRITE(DevAddress);
 8003e1a:	897b      	ldrh	r3, [r7, #10]
 8003e1c:	b2db      	uxtb	r3, r3
 8003e1e:	461a      	mov	r2, r3
 8003e20:	68fb      	ldr	r3, [r7, #12]
 8003e22:	681b      	ldr	r3, [r3, #0]
 8003e24:	f002 02fe 	and.w	r2, r2, #254	@ 0xfe
 8003e28:	611a      	str	r2, [r3, #16]
 8003e2a:	e01b      	b.n	8003e64 <I2C_MasterRequestWrite+0xdc>
  }
  else
  {
    /* Send header of slave address */
    hi2c->Instance->DR = I2C_10BIT_HEADER_WRITE(DevAddress);
 8003e2c:	897b      	ldrh	r3, [r7, #10]
 8003e2e:	11db      	asrs	r3, r3, #7
 8003e30:	b2db      	uxtb	r3, r3
 8003e32:	f003 0306 	and.w	r3, r3, #6
 8003e36:	b2db      	uxtb	r3, r3
 8003e38:	f063 030f 	orn	r3, r3, #15
 8003e3c:	b2da      	uxtb	r2, r3
 8003e3e:	68fb      	ldr	r3, [r7, #12]
 8003e40:	681b      	ldr	r3, [r3, #0]
 8003e42:	611a      	str	r2, [r3, #16]

    /* Wait until ADD10 flag is set */
    if (I2C_WaitOnMasterAddressFlagUntilTimeout(hi2c, I2C_FLAG_ADD10, Timeout, Tickstart) != HAL_OK)
 8003e44:	683b      	ldr	r3, [r7, #0]
 8003e46:	687a      	ldr	r2, [r7, #4]
 8003e48:	490e      	ldr	r1, [pc, #56]	@ (8003e84 <I2C_MasterRequestWrite+0xfc>)
 8003e4a:	68f8      	ldr	r0, [r7, #12]
 8003e4c:	f000 f966 	bl	800411c <I2C_WaitOnMasterAddressFlagUntilTimeout>
 8003e50:	4603      	mov	r3, r0
 8003e52:	2b00      	cmp	r3, #0
 8003e54:	d001      	beq.n	8003e5a <I2C_MasterRequestWrite+0xd2>
    {
      return HAL_ERROR;
 8003e56:	2301      	movs	r3, #1
 8003e58:	e010      	b.n	8003e7c <I2C_MasterRequestWrite+0xf4>
    }

    /* Send slave address */
    hi2c->Instance->DR = I2C_10BIT_ADDRESS(DevAddress);
 8003e5a:	897b      	ldrh	r3, [r7, #10]
 8003e5c:	b2da      	uxtb	r2, r3
 8003e5e:	68fb      	ldr	r3, [r7, #12]
 8003e60:	681b      	ldr	r3, [r3, #0]
 8003e62:	611a      	str	r2, [r3, #16]
  }

  /* Wait until ADDR flag is set */
  if (I2C_WaitOnMasterAddressFlagUntilTimeout(hi2c, I2C_FLAG_ADDR, Timeout, Tickstart) != HAL_OK)
 8003e64:	683b      	ldr	r3, [r7, #0]
 8003e66:	687a      	ldr	r2, [r7, #4]
 8003e68:	4907      	ldr	r1, [pc, #28]	@ (8003e88 <I2C_MasterRequestWrite+0x100>)
 8003e6a:	68f8      	ldr	r0, [r7, #12]
 8003e6c:	f000 f956 	bl	800411c <I2C_WaitOnMasterAddressFlagUntilTimeout>
 8003e70:	4603      	mov	r3, r0
 8003e72:	2b00      	cmp	r3, #0
 8003e74:	d001      	beq.n	8003e7a <I2C_MasterRequestWrite+0xf2>
  {
    return HAL_ERROR;
 8003e76:	2301      	movs	r3, #1
 8003e78:	e000      	b.n	8003e7c <I2C_MasterRequestWrite+0xf4>
  }

  return HAL_OK;
 8003e7a:	2300      	movs	r3, #0
}
 8003e7c:	4618      	mov	r0, r3
 8003e7e:	3718      	adds	r7, #24
 8003e80:	46bd      	mov	sp, r7
 8003e82:	bd80      	pop	{r7, pc}
 8003e84:	00010008 	.word	0x00010008
 8003e88:	00010002 	.word	0x00010002

08003e8c <I2C_MasterRequestRead>:
  * @param  Timeout Timeout duration
  * @param  Tickstart Tick start value
  * @retval HAL status
  */
static HAL_StatusTypeDef I2C_MasterRequestRead(I2C_HandleTypeDef *hi2c, uint16_t DevAddress, uint32_t Timeout, uint32_t Tickstart)
{
 8003e8c:	b580      	push	{r7, lr}
 8003e8e:	b088      	sub	sp, #32
 8003e90:	af02      	add	r7, sp, #8
 8003e92:	60f8      	str	r0, [r7, #12]
 8003e94:	607a      	str	r2, [r7, #4]
 8003e96:	603b      	str	r3, [r7, #0]
 8003e98:	460b      	mov	r3, r1
 8003e9a:	817b      	strh	r3, [r7, #10]
  /* Declaration of temporary variable to prevent undefined behavior of volatile usage */
  uint32_t CurrentXferOptions = hi2c->XferOptions;
 8003e9c:	68fb      	ldr	r3, [r7, #12]
 8003e9e:	6adb      	ldr	r3, [r3, #44]	@ 0x2c
 8003ea0:	617b      	str	r3, [r7, #20]

  /* Enable Acknowledge */
  SET_BIT(hi2c->Instance->CR1, I2C_CR1_ACK);
 8003ea2:	68fb      	ldr	r3, [r7, #12]
 8003ea4:	681b      	ldr	r3, [r3, #0]
 8003ea6:	681a      	ldr	r2, [r3, #0]
 8003ea8:	68fb      	ldr	r3, [r7, #12]
 8003eaa:	681b      	ldr	r3, [r3, #0]
 8003eac:	f442 6280 	orr.w	r2, r2, #1024	@ 0x400
 8003eb0:	601a      	str	r2, [r3, #0]

  /* Generate Start condition if first transfer */
  if ((CurrentXferOptions == I2C_FIRST_AND_LAST_FRAME) || (CurrentXferOptions == I2C_FIRST_FRAME)  || (CurrentXferOptions == I2C_NO_OPTION_FRAME))
 8003eb2:	697b      	ldr	r3, [r7, #20]
 8003eb4:	2b08      	cmp	r3, #8
 8003eb6:	d006      	beq.n	8003ec6 <I2C_MasterRequestRead+0x3a>
 8003eb8:	697b      	ldr	r3, [r7, #20]
 8003eba:	2b01      	cmp	r3, #1
 8003ebc:	d003      	beq.n	8003ec6 <I2C_MasterRequestRead+0x3a>
 8003ebe:	697b      	ldr	r3, [r7, #20]
 8003ec0:	f513 3f80 	cmn.w	r3, #65536	@ 0x10000
 8003ec4:	d108      	bne.n	8003ed8 <I2C_MasterRequestRead+0x4c>
  {
    /* Generate Start */
    SET_BIT(hi2c->Instance->CR1, I2C_CR1_START);
 8003ec6:	68fb      	ldr	r3, [r7, #12]
 8003ec8:	681b      	ldr	r3, [r3, #0]
 8003eca:	681a      	ldr	r2, [r3, #0]
 8003ecc:	68fb      	ldr	r3, [r7, #12]
 8003ece:	681b      	ldr	r3, [r3, #0]
 8003ed0:	f442 7280 	orr.w	r2, r2, #256	@ 0x100
 8003ed4:	601a      	str	r2, [r3, #0]
 8003ed6:	e00b      	b.n	8003ef0 <I2C_MasterRequestRead+0x64>
  }
  else if (hi2c->PreviousState == I2C_STATE_MASTER_BUSY_TX)
 8003ed8:	68fb      	ldr	r3, [r7, #12]
 8003eda:	6b1b      	ldr	r3, [r3, #48]	@ 0x30
 8003edc:	2b11      	cmp	r3, #17
 8003ede:	d107      	bne.n	8003ef0 <I2C_MasterRequestRead+0x64>
  {
    /* Generate ReStart */
    SET_BIT(hi2c->Instance->CR1, I2C_CR1_START);
 8003ee0:	68fb      	ldr	r3, [r7, #12]
 8003ee2:	681b      	ldr	r3, [r3, #0]
 8003ee4:	681a      	ldr	r2, [r3, #0]
 8003ee6:	68fb      	ldr	r3, [r7, #12]
 8003ee8:	681b      	ldr	r3, [r3, #0]
 8003eea:	f442 7280 	orr.w	r2, r2, #256	@ 0x100
 8003eee:	601a      	str	r2, [r3, #0]
  {
    /* Do nothing */
  }

  /* Wait until SB flag is set */
  if (I2C_WaitOnFlagUntilTimeout(hi2c, I2C_FLAG_SB, RESET, Timeout, Tickstart) != HAL_OK)
 8003ef0:	683b      	ldr	r3, [r7, #0]
 8003ef2:	9300      	str	r3, [sp, #0]
 8003ef4:	687b      	ldr	r3, [r7, #4]
 8003ef6:	2200      	movs	r2, #0
 8003ef8:	f04f 1101 	mov.w	r1, #65537	@ 0x10001
 8003efc:	68f8      	ldr	r0, [r7, #12]
 8003efe:	f000 f893 	bl	8004028 <I2C_WaitOnFlagUntilTimeout>
 8003f02:	4603      	mov	r3, r0
 8003f04:	2b00      	cmp	r3, #0
 8003f06:	d00d      	beq.n	8003f24 <I2C_MasterRequestRead+0x98>
  {
    if (READ_BIT(hi2c->Instance->CR1, I2C_CR1_START) == I2C_CR1_START)
 8003f08:	68fb      	ldr	r3, [r7, #12]
 8003f0a:	681b      	ldr	r3, [r3, #0]
 8003f0c:	681b      	ldr	r3, [r3, #0]
 8003f0e:	f403 7380 	and.w	r3, r3, #256	@ 0x100
 8003f12:	f5b3 7f80 	cmp.w	r3, #256	@ 0x100
 8003f16:	d103      	bne.n	8003f20 <I2C_MasterRequestRead+0x94>
    {
      hi2c->ErrorCode = HAL_I2C_WRONG_START;
 8003f18:	68fb      	ldr	r3, [r7, #12]
 8003f1a:	f44f 7200 	mov.w	r2, #512	@ 0x200
 8003f1e:	641a      	str	r2, [r3, #64]	@ 0x40
    }
    return HAL_TIMEOUT;
 8003f20:	2303      	movs	r3, #3
 8003f22:	e079      	b.n	8004018 <I2C_MasterRequestRead+0x18c>
  }

  if (hi2c->Init.AddressingMode == I2C_ADDRESSINGMODE_7BIT)
 8003f24:	68fb      	ldr	r3, [r7, #12]
 8003f26:	691b      	ldr	r3, [r3, #16]
 8003f28:	f5b3 4f80 	cmp.w	r3, #16384	@ 0x4000
 8003f2c:	d108      	bne.n	8003f40 <I2C_MasterRequestRead+0xb4>
  {
    /* Send slave address */
    hi2c->Instance->DR = I2C_7BIT_ADD_READ(DevAddress);
 8003f2e:	897b      	ldrh	r3, [r7, #10]
 8003f30:	b2db      	uxtb	r3, r3
 8003f32:	f043 0301 	orr.w	r3, r3, #1
 8003f36:	b2da      	uxtb	r2, r3
 8003f38:	68fb      	ldr	r3, [r7, #12]
 8003f3a:	681b      	ldr	r3, [r3, #0]
 8003f3c:	611a      	str	r2, [r3, #16]
 8003f3e:	e05f      	b.n	8004000 <I2C_MasterRequestRead+0x174>
  }
  else
  {
    /* Send header of slave address */
    hi2c->Instance->DR = I2C_10BIT_HEADER_WRITE(DevAddress);
 8003f40:	897b      	ldrh	r3, [r7, #10]
 8003f42:	11db      	asrs	r3, r3, #7
 8003f44:	b2db      	uxtb	r3, r3
 8003f46:	f003 0306 	and.w	r3, r3, #6
 8003f4a:	b2db      	uxtb	r3, r3
 8003f4c:	f063 030f 	orn	r3, r3, #15
 8003f50:	b2da      	uxtb	r2, r3
 8003f52:	68fb      	ldr	r3, [r7, #12]
 8003f54:	681b      	ldr	r3, [r3, #0]
 8003f56:	611a      	str	r2, [r3, #16]

    /* Wait until ADD10 flag is set */
    if (I2C_WaitOnMasterAddressFlagUntilTimeout(hi2c, I2C_FLAG_ADD10, Timeout, Tickstart) != HAL_OK)
 8003f58:	683b      	ldr	r3, [r7, #0]
 8003f5a:	687a      	ldr	r2, [r7, #4]
 8003f5c:	4930      	ldr	r1, [pc, #192]	@ (8004020 <I2C_MasterRequestRead+0x194>)
 8003f5e:	68f8      	ldr	r0, [r7, #12]
 8003f60:	f000 f8dc 	bl	800411c <I2C_WaitOnMasterAddressFlagUntilTimeout>
 8003f64:	4603      	mov	r3, r0
 8003f66:	2b00      	cmp	r3, #0
 8003f68:	d001      	beq.n	8003f6e <I2C_MasterRequestRead+0xe2>
    {
      return HAL_ERROR;
 8003f6a:	2301      	movs	r3, #1
 8003f6c:	e054      	b.n	8004018 <I2C_MasterRequestRead+0x18c>
    }

    /* Send slave address */
    hi2c->Instance->DR = I2C_10BIT_ADDRESS(DevAddress);
 8003f6e:	897b      	ldrh	r3, [r7, #10]
 8003f70:	b2da      	uxtb	r2, r3
 8003f72:	68fb      	ldr	r3, [r7, #12]
 8003f74:	681b      	ldr	r3, [r3, #0]
 8003f76:	611a      	str	r2, [r3, #16]

    /* Wait until ADDR flag is set */
    if (I2C_WaitOnMasterAddressFlagUntilTimeout(hi2c, I2C_FLAG_ADDR, Timeout, Tickstart) != HAL_OK)
 8003f78:	683b      	ldr	r3, [r7, #0]
 8003f7a:	687a      	ldr	r2, [r7, #4]
 8003f7c:	4929      	ldr	r1, [pc, #164]	@ (8004024 <I2C_MasterRequestRead+0x198>)
 8003f7e:	68f8      	ldr	r0, [r7, #12]
 8003f80:	f000 f8cc 	bl	800411c <I2C_WaitOnMasterAddressFlagUntilTimeout>
 8003f84:	4603      	mov	r3, r0
 8003f86:	2b00      	cmp	r3, #0
 8003f88:	d001      	beq.n	8003f8e <I2C_MasterRequestRead+0x102>
    {
      return HAL_ERROR;
 8003f8a:	2301      	movs	r3, #1
 8003f8c:	e044      	b.n	8004018 <I2C_MasterRequestRead+0x18c>
    }

    /* Clear ADDR flag */
    __HAL_I2C_CLEAR_ADDRFLAG(hi2c);
 8003f8e:	2300      	movs	r3, #0
 8003f90:	613b      	str	r3, [r7, #16]
 8003f92:	68fb      	ldr	r3, [r7, #12]
 8003f94:	681b      	ldr	r3, [r3, #0]
 8003f96:	695b      	ldr	r3, [r3, #20]
 8003f98:	613b      	str	r3, [r7, #16]
 8003f9a:	68fb      	ldr	r3, [r7, #12]
 8003f9c:	681b      	ldr	r3, [r3, #0]
 8003f9e:	699b      	ldr	r3, [r3, #24]
 8003fa0:	613b      	str	r3, [r7, #16]
 8003fa2:	693b      	ldr	r3, [r7, #16]

    /* Generate Restart */
    SET_BIT(hi2c->Instance->CR1, I2C_CR1_START);
 8003fa4:	68fb      	ldr	r3, [r7, #12]
 8003fa6:	681b      	ldr	r3, [r3, #0]
 8003fa8:	681a      	ldr	r2, [r3, #0]
 8003faa:	68fb      	ldr	r3, [r7, #12]
 8003fac:	681b      	ldr	r3, [r3, #0]
 8003fae:	f442 7280 	orr.w	r2, r2, #256	@ 0x100
 8003fb2:	601a      	str	r2, [r3, #0]

    /* Wait until SB flag is set */
    if (I2C_WaitOnFlagUntilTimeout(hi2c, I2C_FLAG_SB, RESET, Timeout, Tickstart) != HAL_OK)
 8003fb4:	683b      	ldr	r3, [r7, #0]
 8003fb6:	9300      	str	r3, [sp, #0]
 8003fb8:	687b      	ldr	r3, [r7, #4]
 8003fba:	2200      	movs	r2, #0
 8003fbc:	f04f 1101 	mov.w	r1, #65537	@ 0x10001
 8003fc0:	68f8      	ldr	r0, [r7, #12]
 8003fc2:	f000 f831 	bl	8004028 <I2C_WaitOnFlagUntilTimeout>
 8003fc6:	4603      	mov	r3, r0
 8003fc8:	2b00      	cmp	r3, #0
 8003fca:	d00d      	beq.n	8003fe8 <I2C_MasterRequestRead+0x15c>
    {
      if (READ_BIT(hi2c->Instance->CR1, I2C_CR1_START) == I2C_CR1_START)
 8003fcc:	68fb      	ldr	r3, [r7, #12]
 8003fce:	681b      	ldr	r3, [r3, #0]
 8003fd0:	681b      	ldr	r3, [r3, #0]
 8003fd2:	f403 7380 	and.w	r3, r3, #256	@ 0x100
 8003fd6:	f5b3 7f80 	cmp.w	r3, #256	@ 0x100
 8003fda:	d103      	bne.n	8003fe4 <I2C_MasterRequestRead+0x158>
      {
        hi2c->ErrorCode = HAL_I2C_WRONG_START;
 8003fdc:	68fb      	ldr	r3, [r7, #12]
 8003fde:	f44f 7200 	mov.w	r2, #512	@ 0x200
 8003fe2:	641a      	str	r2, [r3, #64]	@ 0x40
      }
      return HAL_TIMEOUT;
 8003fe4:	2303      	movs	r3, #3
 8003fe6:	e017      	b.n	8004018 <I2C_MasterRequestRead+0x18c>
    }

    /* Send header of slave address */
    hi2c->Instance->DR = I2C_10BIT_HEADER_READ(DevAddress);
 8003fe8:	897b      	ldrh	r3, [r7, #10]
 8003fea:	11db      	asrs	r3, r3, #7
 8003fec:	b2db      	uxtb	r3, r3
 8003fee:	f003 0306 	and.w	r3, r3, #6
 8003ff2:	b2db      	uxtb	r3, r3
 8003ff4:	f063 030e 	orn	r3, r3, #14
 8003ff8:	b2da      	uxtb	r2, r3
 8003ffa:	68fb      	ldr	r3, [r7, #12]
 8003ffc:	681b      	ldr	r3, [r3, #0]
 8003ffe:	611a      	str	r2, [r3, #16]
  }

  /* Wait until ADDR flag is set */
  if (I2C_WaitOnMasterAddressFlagUntilTimeout(hi2c, I2C_FLAG_ADDR, Timeout, Tickstart) != HAL_OK)
 8004000:	683b      	ldr	r3, [r7, #0]
 8004002:	687a      	ldr	r2, [r7, #4]
 8004004:	4907      	ldr	r1, [pc, #28]	@ (8004024 <I2C_MasterRequestRead+0x198>)
 8004006:	68f8      	ldr	r0, [r7, #12]
 8004008:	f000 f888 	bl	800411c <I2C_WaitOnMasterAddressFlagUntilTimeout>
 800400c:	4603      	mov	r3, r0
 800400e:	2b00      	cmp	r3, #0
 8004010:	d001      	beq.n	8004016 <I2C_MasterRequestRead+0x18a>
  {
    return HAL_ERROR;
 8004012:	2301      	movs	r3, #1
 8004014:	e000      	b.n	8004018 <I2C_MasterRequestRead+0x18c>
  }

  return HAL_OK;
 8004016:	2300      	movs	r3, #0
}
 8004018:	4618      	mov	r0, r3
 800401a:	3718      	adds	r7, #24
 800401c:	46bd      	mov	sp, r7
 800401e:	bd80      	pop	{r7, pc}
 8004020:	00010008 	.word	0x00010008
 8004024:	00010002 	.word	0x00010002

08004028 <I2C_WaitOnFlagUntilTimeout>:
  * @param  Timeout Timeout duration
  * @param  Tickstart Tick start value
  * @retval HAL status
  */
static HAL_StatusTypeDef I2C_WaitOnFlagUntilTimeout(I2C_HandleTypeDef *hi2c, uint32_t Flag, FlagStatus Status, uint32_t Timeout, uint32_t Tickstart)
{
 8004028:	b580      	push	{r7, lr}
 800402a:	b084      	sub	sp, #16
 800402c:	af00      	add	r7, sp, #0
 800402e:	60f8      	str	r0, [r7, #12]
 8004030:	60b9      	str	r1, [r7, #8]
 8004032:	603b      	str	r3, [r7, #0]
 8004034:	4613      	mov	r3, r2
 8004036:	71fb      	strb	r3, [r7, #7]
  /* Wait until flag is set */
  while (__HAL_I2C_GET_FLAG(hi2c, Flag) == Status)
 8004038:	e048      	b.n	80040cc <I2C_WaitOnFlagUntilTimeout+0xa4>
  {
    /* Check for the Timeout */
    if (Timeout != HAL_MAX_DELAY)
 800403a:	683b      	ldr	r3, [r7, #0]
 800403c:	f1b3 3fff 	cmp.w	r3, #4294967295
 8004040:	d044      	beq.n	80040cc <I2C_WaitOnFlagUntilTimeout+0xa4>
    {
      if (((HAL_GetTick() - Tickstart) > Timeout) || (Timeout == 0U))
 8004042:	f7fd fec5 	bl	8001dd0 <HAL_GetTick>
 8004046:	4602      	mov	r2, r0
 8004048:	69bb      	ldr	r3, [r7, #24]
 800404a:	1ad3      	subs	r3, r2, r3
 800404c:	683a      	ldr	r2, [r7, #0]
 800404e:	429a      	cmp	r2, r3
 8004050:	d302      	bcc.n	8004058 <I2C_WaitOnFlagUntilTimeout+0x30>
 8004052:	683b      	ldr	r3, [r7, #0]
 8004054:	2b00      	cmp	r3, #0
 8004056:	d139      	bne.n	80040cc <I2C_WaitOnFlagUntilTimeout+0xa4>
      {
        if ((__HAL_I2C_GET_FLAG(hi2c, Flag) == Status))
 8004058:	68bb      	ldr	r3, [r7, #8]
 800405a:	0c1b      	lsrs	r3, r3, #16
 800405c:	b2db      	uxtb	r3, r3
 800405e:	2b01      	cmp	r3, #1
 8004060:	d10d      	bne.n	800407e <I2C_WaitOnFlagUntilTimeout+0x56>
 8004062:	68fb      	ldr	r3, [r7, #12]
 8004064:	681b      	ldr	r3, [r3, #0]
 8004066:	695b      	ldr	r3, [r3, #20]
 8004068:	43da      	mvns	r2, r3
 800406a:	68bb      	ldr	r3, [r7, #8]
 800406c:	4013      	ands	r3, r2
 800406e:	b29b      	uxth	r3, r3
 8004070:	2b00      	cmp	r3, #0
 8004072:	bf0c      	ite	eq
 8004074:	2301      	moveq	r3, #1
 8004076:	2300      	movne	r3, #0
 8004078:	b2db      	uxtb	r3, r3
 800407a:	461a      	mov	r2, r3
 800407c:	e00c      	b.n	8004098 <I2C_WaitOnFlagUntilTimeout+0x70>
 800407e:	68fb      	ldr	r3, [r7, #12]
 8004080:	681b      	ldr	r3, [r3, #0]
 8004082:	699b      	ldr	r3, [r3, #24]
 8004084:	43da      	mvns	r2, r3
 8004086:	68bb      	ldr	r3, [r7, #8]
 8004088:	4013      	ands	r3, r2
 800408a:	b29b      	uxth	r3, r3
 800408c:	2b00      	cmp	r3, #0
 800408e:	bf0c      	ite	eq
 8004090:	2301      	moveq	r3, #1
 8004092:	2300      	movne	r3, #0
 8004094:	b2db      	uxtb	r3, r3
 8004096:	461a      	mov	r2, r3
 8004098:	79fb      	ldrb	r3, [r7, #7]
 800409a:	429a      	cmp	r2, r3
 800409c:	d116      	bne.n	80040cc <I2C_WaitOnFlagUntilTimeout+0xa4>
        {
          hi2c->PreviousState     = I2C_STATE_NONE;
 800409e:	68fb      	ldr	r3, [r7, #12]
 80040a0:	2200      	movs	r2, #0
 80040a2:	631a      	str	r2, [r3, #48]	@ 0x30
          hi2c->State             = HAL_I2C_STATE_READY;
 80040a4:	68fb      	ldr	r3, [r7, #12]
 80040a6:	2220      	movs	r2, #32
 80040a8:	f883 203d 	strb.w	r2, [r3, #61]	@ 0x3d
          hi2c->Mode              = HAL_I2C_MODE_NONE;
 80040ac:	68fb      	ldr	r3, [r7, #12]
 80040ae:	2200      	movs	r2, #0
 80040b0:	f883 203e 	strb.w	r2, [r3, #62]	@ 0x3e
          hi2c->ErrorCode         |= HAL_I2C_ERROR_TIMEOUT;
 80040b4:	68fb      	ldr	r3, [r7, #12]
 80040b6:	6c1b      	ldr	r3, [r3, #64]	@ 0x40
 80040b8:	f043 0220 	orr.w	r2, r3, #32
 80040bc:	68fb      	ldr	r3, [r7, #12]
 80040be:	641a      	str	r2, [r3, #64]	@ 0x40

          /* Process Unlocked */
          __HAL_UNLOCK(hi2c);
 80040c0:	68fb      	ldr	r3, [r7, #12]
 80040c2:	2200      	movs	r2, #0
 80040c4:	f883 203c 	strb.w	r2, [r3, #60]	@ 0x3c

          return HAL_ERROR;
 80040c8:	2301      	movs	r3, #1
 80040ca:	e023      	b.n	8004114 <I2C_WaitOnFlagUntilTimeout+0xec>
  while (__HAL_I2C_GET_FLAG(hi2c, Flag) == Status)
 80040cc:	68bb      	ldr	r3, [r7, #8]
 80040ce:	0c1b      	lsrs	r3, r3, #16
 80040d0:	b2db      	uxtb	r3, r3
 80040d2:	2b01      	cmp	r3, #1
 80040d4:	d10d      	bne.n	80040f2 <I2C_WaitOnFlagUntilTimeout+0xca>
 80040d6:	68fb      	ldr	r3, [r7, #12]
 80040d8:	681b      	ldr	r3, [r3, #0]
 80040da:	695b      	ldr	r3, [r3, #20]
 80040dc:	43da      	mvns	r2, r3
 80040de:	68bb      	ldr	r3, [r7, #8]
 80040e0:	4013      	ands	r3, r2
 80040e2:	b29b      	uxth	r3, r3
 80040e4:	2b00      	cmp	r3, #0
 80040e6:	bf0c      	ite	eq
 80040e8:	2301      	moveq	r3, #1
 80040ea:	2300      	movne	r3, #0
 80040ec:	b2db      	uxtb	r3, r3
 80040ee:	461a      	mov	r2, r3
 80040f0:	e00c      	b.n	800410c <I2C_WaitOnFlagUntilTimeout+0xe4>
 80040f2:	68fb      	ldr	r3, [r7, #12]
 80040f4:	681b      	ldr	r3, [r3, #0]
 80040f6:	699b      	ldr	r3, [r3, #24]
 80040f8:	43da      	mvns	r2, r3
 80040fa:	68bb      	ldr	r3, [r7, #8]
 80040fc:	4013      	ands	r3, r2
 80040fe:	b29b      	uxth	r3, r3
 8004100:	2b00      	cmp	r3, #0
 8004102:	bf0c      	ite	eq
 8004104:	2301      	moveq	r3, #1
 8004106:	2300      	movne	r3, #0
 8004108:	b2db      	uxtb	r3, r3
 800410a:	461a      	mov	r2, r3
 800410c:	79fb      	ldrb	r3, [r7, #7]
 800410e:	429a      	cmp	r2, r3
 8004110:	d093      	beq.n	800403a <I2C_WaitOnFlagUntilTimeout+0x12>
        }
      }
    }
  }
  return HAL_OK;
 8004112:	2300      	movs	r3, #0
}
 8004114:	4618      	mov	r0, r3
 8004116:	3710      	adds	r7, #16
 8004118:	46bd      	mov	sp, r7
 800411a:	bd80      	pop	{r7, pc}

0800411c <I2C_WaitOnMasterAddressFlagUntilTimeout>:
  * @param  Timeout Timeout duration
  * @param  Tickstart Tick start value
  * @retval HAL status
  */
static HAL_StatusTypeDef I2C_WaitOnMasterAddressFlagUntilTimeout(I2C_HandleTypeDef *hi2c, uint32_t Flag, uint32_t Timeout, uint32_t Tickstart)
{
 800411c:	b580      	push	{r7, lr}
 800411e:	b084      	sub	sp, #16
 8004120:	af00      	add	r7, sp, #0
 8004122:	60f8      	str	r0, [r7, #12]
 8004124:	60b9      	str	r1, [r7, #8]
 8004126:	607a      	str	r2, [r7, #4]
 8004128:	603b      	str	r3, [r7, #0]
  while (__HAL_I2C_GET_FLAG(hi2c, Flag) == RESET)
 800412a:	e071      	b.n	8004210 <I2C_WaitOnMasterAddressFlagUntilTimeout+0xf4>
  {
    if (__HAL_I2C_GET_FLAG(hi2c, I2C_FLAG_AF) == SET)
 800412c:	68fb      	ldr	r3, [r7, #12]
 800412e:	681b      	ldr	r3, [r3, #0]
 8004130:	695b      	ldr	r3, [r3, #20]
 8004132:	f403 6380 	and.w	r3, r3, #1024	@ 0x400
 8004136:	f5b3 6f80 	cmp.w	r3, #1024	@ 0x400
 800413a:	d123      	bne.n	8004184 <I2C_WaitOnMasterAddressFlagUntilTimeout+0x68>
    {
      /* Generate Stop */
      SET_BIT(hi2c->Instance->CR1, I2C_CR1_STOP);
 800413c:	68fb      	ldr	r3, [r7, #12]
 800413e:	681b      	ldr	r3, [r3, #0]
 8004140:	681a      	ldr	r2, [r3, #0]
 8004142:	68fb      	ldr	r3, [r7, #12]
 8004144:	681b      	ldr	r3, [r3, #0]
 8004146:	f442 7200 	orr.w	r2, r2, #512	@ 0x200
 800414a:	601a      	str	r2, [r3, #0]

      /* Clear AF Flag */
      __HAL_I2C_CLEAR_FLAG(hi2c, I2C_FLAG_AF);
 800414c:	68fb      	ldr	r3, [r7, #12]
 800414e:	681b      	ldr	r3, [r3, #0]
 8004150:	f46f 6280 	mvn.w	r2, #1024	@ 0x400
 8004154:	615a      	str	r2, [r3, #20]

      hi2c->PreviousState       = I2C_STATE_NONE;
 8004156:	68fb      	ldr	r3, [r7, #12]
 8004158:	2200      	movs	r2, #0
 800415a:	631a      	str	r2, [r3, #48]	@ 0x30
      hi2c->State               = HAL_I2C_STATE_READY;
 800415c:	68fb      	ldr	r3, [r7, #12]
 800415e:	2220      	movs	r2, #32
 8004160:	f883 203d 	strb.w	r2, [r3, #61]	@ 0x3d
      hi2c->Mode                = HAL_I2C_MODE_NONE;
 8004164:	68fb      	ldr	r3, [r7, #12]
 8004166:	2200      	movs	r2, #0
 8004168:	f883 203e 	strb.w	r2, [r3, #62]	@ 0x3e
      hi2c->ErrorCode           |= HAL_I2C_ERROR_AF;
 800416c:	68fb      	ldr	r3, [r7, #12]
 800416e:	6c1b      	ldr	r3, [r3, #64]	@ 0x40
 8004170:	f043 0204 	orr.w	r2, r3, #4
 8004174:	68fb      	ldr	r3, [r7, #12]
 8004176:	641a      	str	r2, [r3, #64]	@ 0x40

      /* Process Unlocked */
      __HAL_UNLOCK(hi2c);
 8004178:	68fb      	ldr	r3, [r7, #12]
 800417a:	2200      	movs	r2, #0
 800417c:	f883 203c 	strb.w	r2, [r3, #60]	@ 0x3c

      return HAL_ERROR;
 8004180:	2301      	movs	r3, #1
 8004182:	e067      	b.n	8004254 <I2C_WaitOnMasterAddressFlagUntilTimeout+0x138>
    }

    /* Check for the Timeout */
    if (Timeout != HAL_MAX_DELAY)
 8004184:	687b      	ldr	r3, [r7, #4]
 8004186:	f1b3 3fff 	cmp.w	r3, #4294967295
 800418a:	d041      	beq.n	8004210 <I2C_WaitOnMasterAddressFlagUntilTimeout+0xf4>
    {
      if (((HAL_GetTick() - Tickstart) > Timeout) || (Timeout == 0U))
 800418c:	f7fd fe20 	bl	8001dd0 <HAL_GetTick>
 8004190:	4602      	mov	r2, r0
 8004192:	683b      	ldr	r3, [r7, #0]
 8004194:	1ad3      	subs	r3, r2, r3
 8004196:	687a      	ldr	r2, [r7, #4]
 8004198:	429a      	cmp	r2, r3
 800419a:	d302      	bcc.n	80041a2 <I2C_WaitOnMasterAddressFlagUntilTimeout+0x86>
 800419c:	687b      	ldr	r3, [r7, #4]
 800419e:	2b00      	cmp	r3, #0
 80041a0:	d136      	bne.n	8004210 <I2C_WaitOnMasterAddressFlagUntilTimeout+0xf4>
      {
        if ((__HAL_I2C_GET_FLAG(hi2c, Flag) == RESET))
 80041a2:	68bb      	ldr	r3, [r7, #8]
 80041a4:	0c1b      	lsrs	r3, r3, #16
 80041a6:	b2db      	uxtb	r3, r3
 80041a8:	2b01      	cmp	r3, #1
 80041aa:	d10c      	bne.n	80041c6 <I2C_WaitOnMasterAddressFlagUntilTimeout+0xaa>
 80041ac:	68fb      	ldr	r3, [r7, #12]
 80041ae:	681b      	ldr	r3, [r3, #0]
 80041b0:	695b      	ldr	r3, [r3, #20]
 80041b2:	43da      	mvns	r2, r3
 80041b4:	68bb      	ldr	r3, [r7, #8]
 80041b6:	4013      	ands	r3, r2
 80041b8:	b29b      	uxth	r3, r3
 80041ba:	2b00      	cmp	r3, #0
 80041bc:	bf14      	ite	ne
 80041be:	2301      	movne	r3, #1
 80041c0:	2300      	moveq	r3, #0
 80041c2:	b2db      	uxtb	r3, r3
 80041c4:	e00b      	b.n	80041de <I2C_WaitOnMasterAddressFlagUntilTimeout+0xc2>
 80041c6:	68fb      	ldr	r3, [r7, #12]
 80041c8:	681b      	ldr	r3, [r3, #0]
 80041ca:	699b      	ldr	r3, [r3, #24]
 80041cc:	43da      	mvns	r2, r3
 80041ce:	68bb      	ldr	r3, [r7, #8]
 80041d0:	4013      	ands	r3, r2
 80041d2:	b29b      	uxth	r3, r3
 80041d4:	2b00      	cmp	r3, #0
 80041d6:	bf14      	ite	ne
 80041d8:	2301      	movne	r3, #1
 80041da:	2300      	moveq	r3, #0
 80041dc:	b2db      	uxtb	r3, r3
 80041de:	2b00      	cmp	r3, #0
 80041e0:	d016      	beq.n	8004210 <I2C_WaitOnMasterAddressFlagUntilTimeout+0xf4>
        {
          hi2c->PreviousState       = I2C_STATE_NONE;
 80041e2:	68fb      	ldr	r3, [r7, #12]
 80041e4:	2200      	movs	r2, #0
 80041e6:	631a      	str	r2, [r3, #48]	@ 0x30
          hi2c->State               = HAL_I2C_STATE_READY;
 80041e8:	68fb      	ldr	r3, [r7, #12]
 80041ea:	2220      	movs	r2, #32
 80041ec:	f883 203d 	strb.w	r2, [r3, #61]	@ 0x3d
          hi2c->Mode                = HAL_I2C_MODE_NONE;
 80041f0:	68fb      	ldr	r3, [r7, #12]
 80041f2:	2200      	movs	r2, #0
 80041f4:	f883 203e 	strb.w	r2, [r3, #62]	@ 0x3e
          hi2c->ErrorCode           |= HAL_I2C_ERROR_TIMEOUT;
 80041f8:	68fb      	ldr	r3, [r7, #12]
 80041fa:	6c1b      	ldr	r3, [r3, #64]	@ 0x40
 80041fc:	f043 0220 	orr.w	r2, r3, #32
 8004200:	68fb      	ldr	r3, [r7, #12]
 8004202:	641a      	str	r2, [r3, #64]	@ 0x40

          /* Process Unlocked */
          __HAL_UNLOCK(hi2c);
 8004204:	68fb      	ldr	r3, [r7, #12]
 8004206:	2200      	movs	r2, #0
 8004208:	f883 203c 	strb.w	r2, [r3, #60]	@ 0x3c

          return HAL_ERROR;
 800420c:	2301      	movs	r3, #1
 800420e:	e021      	b.n	8004254 <I2C_WaitOnMasterAddressFlagUntilTimeout+0x138>
  while (__HAL_I2C_GET_FLAG(hi2c, Flag) == RESET)
 8004210:	68bb      	ldr	r3, [r7, #8]
 8004212:	0c1b      	lsrs	r3, r3, #16
 8004214:	b2db      	uxtb	r3, r3
 8004216:	2b01      	cmp	r3, #1
 8004218:	d10c      	bne.n	8004234 <I2C_WaitOnMasterAddressFlagUntilTimeout+0x118>
 800421a:	68fb      	ldr	r3, [r7, #12]
 800421c:	681b      	ldr	r3, [r3, #0]
 800421e:	695b      	ldr	r3, [r3, #20]
 8004220:	43da      	mvns	r2, r3
 8004222:	68bb      	ldr	r3, [r7, #8]
 8004224:	4013      	ands	r3, r2
 8004226:	b29b      	uxth	r3, r3
 8004228:	2b00      	cmp	r3, #0
 800422a:	bf14      	ite	ne
 800422c:	2301      	movne	r3, #1
 800422e:	2300      	moveq	r3, #0
 8004230:	b2db      	uxtb	r3, r3
 8004232:	e00b      	b.n	800424c <I2C_WaitOnMasterAddressFlagUntilTimeout+0x130>
 8004234:	68fb      	ldr	r3, [r7, #12]
 8004236:	681b      	ldr	r3, [r3, #0]
 8004238:	699b      	ldr	r3, [r3, #24]
 800423a:	43da      	mvns	r2, r3
 800423c:	68bb      	ldr	r3, [r7, #8]
 800423e:	4013      	ands	r3, r2
 8004240:	b29b      	uxth	r3, r3
 8004242:	2b00      	cmp	r3, #0
 8004244:	bf14      	ite	ne
 8004246:	2301      	movne	r3, #1
 8004248:	2300      	moveq	r3, #0
 800424a:	b2db      	uxtb	r3, r3
 800424c:	2b00      	cmp	r3, #0
 800424e:	f47f af6d 	bne.w	800412c <I2C_WaitOnMasterAddressFlagUntilTimeout+0x10>
        }
      }
    }
  }
  return HAL_OK;
 8004252:	2300      	movs	r3, #0
}
 8004254:	4618      	mov	r0, r3
 8004256:	3710      	adds	r7, #16
 8004258:	46bd      	mov	sp, r7
 800425a:	bd80      	pop	{r7, pc}

0800425c <I2C_WaitOnTXEFlagUntilTimeout>:
  * @param  Timeout Timeout duration
  * @param  Tickstart Tick start value
  * @retval HAL status
  */
static HAL_StatusTypeDef I2C_WaitOnTXEFlagUntilTimeout(I2C_HandleTypeDef *hi2c, uint32_t Timeout, uint32_t Tickstart)
{
 800425c:	b580      	push	{r7, lr}
 800425e:	b084      	sub	sp, #16
 8004260:	af00      	add	r7, sp, #0
 8004262:	60f8      	str	r0, [r7, #12]
 8004264:	60b9      	str	r1, [r7, #8]
 8004266:	607a      	str	r2, [r7, #4]
  while (__HAL_I2C_GET_FLAG(hi2c, I2C_FLAG_TXE) == RESET)
 8004268:	e034      	b.n	80042d4 <I2C_WaitOnTXEFlagUntilTimeout+0x78>
  {
    /* Check if a NACK is detected */
    if (I2C_IsAcknowledgeFailed(hi2c) != HAL_OK)
 800426a:	68f8      	ldr	r0, [r7, #12]
 800426c:	f000 f8e3 	bl	8004436 <I2C_IsAcknowledgeFailed>
 8004270:	4603      	mov	r3, r0
 8004272:	2b00      	cmp	r3, #0
 8004274:	d001      	beq.n	800427a <I2C_WaitOnTXEFlagUntilTimeout+0x1e>
    {
      return HAL_ERROR;
 8004276:	2301      	movs	r3, #1
 8004278:	e034      	b.n	80042e4 <I2C_WaitOnTXEFlagUntilTimeout+0x88>
    }

    /* Check for the Timeout */
    if (Timeout != HAL_MAX_DELAY)
 800427a:	68bb      	ldr	r3, [r7, #8]
 800427c:	f1b3 3fff 	cmp.w	r3, #4294967295
 8004280:	d028      	beq.n	80042d4 <I2C_WaitOnTXEFlagUntilTimeout+0x78>
    {
      if (((HAL_GetTick() - Tickstart) > Timeout) || (Timeout == 0U))
 8004282:	f7fd fda5 	bl	8001dd0 <HAL_GetTick>
 8004286:	4602      	mov	r2, r0
 8004288:	687b      	ldr	r3, [r7, #4]
 800428a:	1ad3      	subs	r3, r2, r3
 800428c:	68ba      	ldr	r2, [r7, #8]
 800428e:	429a      	cmp	r2, r3
 8004290:	d302      	bcc.n	8004298 <I2C_WaitOnTXEFlagUntilTimeout+0x3c>
 8004292:	68bb      	ldr	r3, [r7, #8]
 8004294:	2b00      	cmp	r3, #0
 8004296:	d11d      	bne.n	80042d4 <I2C_WaitOnTXEFlagUntilTimeout+0x78>
      {
        if ((__HAL_I2C_GET_FLAG(hi2c, I2C_FLAG_TXE) == RESET))
 8004298:	68fb      	ldr	r3, [r7, #12]
 800429a:	681b      	ldr	r3, [r3, #0]
 800429c:	695b      	ldr	r3, [r3, #20]
 800429e:	f003 0380 	and.w	r3, r3, #128	@ 0x80
 80042a2:	2b80      	cmp	r3, #128	@ 0x80
 80042a4:	d016      	beq.n	80042d4 <I2C_WaitOnTXEFlagUntilTimeout+0x78>
        {
          hi2c->PreviousState       = I2C_STATE_NONE;
 80042a6:	68fb      	ldr	r3, [r7, #12]
 80042a8:	2200      	movs	r2, #0
 80042aa:	631a      	str	r2, [r3, #48]	@ 0x30
          hi2c->State               = HAL_I2C_STATE_READY;
 80042ac:	68fb      	ldr	r3, [r7, #12]
 80042ae:	2220      	movs	r2, #32
 80042b0:	f883 203d 	strb.w	r2, [r3, #61]	@ 0x3d
          hi2c->Mode                = HAL_I2C_MODE_NONE;
 80042b4:	68fb      	ldr	r3, [r7, #12]
 80042b6:	2200      	movs	r2, #0
 80042b8:	f883 203e 	strb.w	r2, [r3, #62]	@ 0x3e
          hi2c->ErrorCode           |= HAL_I2C_ERROR_TIMEOUT;
 80042bc:	68fb      	ldr	r3, [r7, #12]
 80042be:	6c1b      	ldr	r3, [r3, #64]	@ 0x40
 80042c0:	f043 0220 	orr.w	r2, r3, #32
 80042c4:	68fb      	ldr	r3, [r7, #12]
 80042c6:	641a      	str	r2, [r3, #64]	@ 0x40

          /* Process Unlocked */
          __HAL_UNLOCK(hi2c);
 80042c8:	68fb      	ldr	r3, [r7, #12]
 80042ca:	2200      	movs	r2, #0
 80042cc:	f883 203c 	strb.w	r2, [r3, #60]	@ 0x3c

          return HAL_ERROR;
 80042d0:	2301      	movs	r3, #1
 80042d2:	e007      	b.n	80042e4 <I2C_WaitOnTXEFlagUntilTimeout+0x88>
  while (__HAL_I2C_GET_FLAG(hi2c, I2C_FLAG_TXE) == RESET)
 80042d4:	68fb      	ldr	r3, [r7, #12]
 80042d6:	681b      	ldr	r3, [r3, #0]
 80042d8:	695b      	ldr	r3, [r3, #20]
 80042da:	f003 0380 	and.w	r3, r3, #128	@ 0x80
 80042de:	2b80      	cmp	r3, #128	@ 0x80
 80042e0:	d1c3      	bne.n	800426a <I2C_WaitOnTXEFlagUntilTimeout+0xe>
        }
      }
    }
  }
  return HAL_OK;
 80042e2:	2300      	movs	r3, #0
}
 80042e4:	4618      	mov	r0, r3
 80042e6:	3710      	adds	r7, #16
 80042e8:	46bd      	mov	sp, r7
 80042ea:	bd80      	pop	{r7, pc}

080042ec <I2C_WaitOnBTFFlagUntilTimeout>:
  * @param  Timeout Timeout duration
  * @param  Tickstart Tick start value
  * @retval HAL status
  */
static HAL_StatusTypeDef I2C_WaitOnBTFFlagUntilTimeout(I2C_HandleTypeDef *hi2c, uint32_t Timeout, uint32_t Tickstart)
{
 80042ec:	b580      	push	{r7, lr}
 80042ee:	b084      	sub	sp, #16
 80042f0:	af00      	add	r7, sp, #0
 80042f2:	60f8      	str	r0, [r7, #12]
 80042f4:	60b9      	str	r1, [r7, #8]
 80042f6:	607a      	str	r2, [r7, #4]
  while (__HAL_I2C_GET_FLAG(hi2c, I2C_FLAG_BTF) == RESET)
 80042f8:	e034      	b.n	8004364 <I2C_WaitOnBTFFlagUntilTimeout+0x78>
  {
    /* Check if a NACK is detected */
    if (I2C_IsAcknowledgeFailed(hi2c) != HAL_OK)
 80042fa:	68f8      	ldr	r0, [r7, #12]
 80042fc:	f000 f89b 	bl	8004436 <I2C_IsAcknowledgeFailed>
 8004300:	4603      	mov	r3, r0
 8004302:	2b00      	cmp	r3, #0
 8004304:	d001      	beq.n	800430a <I2C_WaitOnBTFFlagUntilTimeout+0x1e>
    {
      return HAL_ERROR;
 8004306:	2301      	movs	r3, #1
 8004308:	e034      	b.n	8004374 <I2C_WaitOnBTFFlagUntilTimeout+0x88>
    }

    /* Check for the Timeout */
    if (Timeout != HAL_MAX_DELAY)
 800430a:	68bb      	ldr	r3, [r7, #8]
 800430c:	f1b3 3fff 	cmp.w	r3, #4294967295
 8004310:	d028      	beq.n	8004364 <I2C_WaitOnBTFFlagUntilTimeout+0x78>
    {
      if (((HAL_GetTick() - Tickstart) > Timeout) || (Timeout == 0U))
 8004312:	f7fd fd5d 	bl	8001dd0 <HAL_GetTick>
 8004316:	4602      	mov	r2, r0
 8004318:	687b      	ldr	r3, [r7, #4]
 800431a:	1ad3      	subs	r3, r2, r3
 800431c:	68ba      	ldr	r2, [r7, #8]
 800431e:	429a      	cmp	r2, r3
 8004320:	d302      	bcc.n	8004328 <I2C_WaitOnBTFFlagUntilTimeout+0x3c>
 8004322:	68bb      	ldr	r3, [r7, #8]
 8004324:	2b00      	cmp	r3, #0
 8004326:	d11d      	bne.n	8004364 <I2C_WaitOnBTFFlagUntilTimeout+0x78>
      {
        if ((__HAL_I2C_GET_FLAG(hi2c, I2C_FLAG_BTF) == RESET))
 8004328:	68fb      	ldr	r3, [r7, #12]
 800432a:	681b      	ldr	r3, [r3, #0]
 800432c:	695b      	ldr	r3, [r3, #20]
 800432e:	f003 0304 	and.w	r3, r3, #4
 8004332:	2b04      	cmp	r3, #4
 8004334:	d016      	beq.n	8004364 <I2C_WaitOnBTFFlagUntilTimeout+0x78>
        {
          hi2c->PreviousState       = I2C_STATE_NONE;
 8004336:	68fb      	ldr	r3, [r7, #12]
 8004338:	2200      	movs	r2, #0
 800433a:	631a      	str	r2, [r3, #48]	@ 0x30
          hi2c->State               = HAL_I2C_STATE_READY;
 800433c:	68fb      	ldr	r3, [r7, #12]
 800433e:	2220      	movs	r2, #32
 8004340:	f883 203d 	strb.w	r2, [r3, #61]	@ 0x3d
          hi2c->Mode                = HAL_I2C_MODE_NONE;
 8004344:	68fb      	ldr	r3, [r7, #12]
 8004346:	2200      	movs	r2, #0
 8004348:	f883 203e 	strb.w	r2, [r3, #62]	@ 0x3e
          hi2c->ErrorCode           |= HAL_I2C_ERROR_TIMEOUT;
 800434c:	68fb      	ldr	r3, [r7, #12]
 800434e:	6c1b      	ldr	r3, [r3, #64]	@ 0x40
 8004350:	f043 0220 	orr.w	r2, r3, #32
 8004354:	68fb      	ldr	r3, [r7, #12]
 8004356:	641a      	str	r2, [r3, #64]	@ 0x40

          /* Process Unlocked */
          __HAL_UNLOCK(hi2c);
 8004358:	68fb      	ldr	r3, [r7, #12]
 800435a:	2200      	movs	r2, #0
 800435c:	f883 203c 	strb.w	r2, [r3, #60]	@ 0x3c

          return HAL_ERROR;
 8004360:	2301      	movs	r3, #1
 8004362:	e007      	b.n	8004374 <I2C_WaitOnBTFFlagUntilTimeout+0x88>
  while (__HAL_I2C_GET_FLAG(hi2c, I2C_FLAG_BTF) == RESET)
 8004364:	68fb      	ldr	r3, [r7, #12]
 8004366:	681b      	ldr	r3, [r3, #0]
 8004368:	695b      	ldr	r3, [r3, #20]
 800436a:	f003 0304 	and.w	r3, r3, #4
 800436e:	2b04      	cmp	r3, #4
 8004370:	d1c3      	bne.n	80042fa <I2C_WaitOnBTFFlagUntilTimeout+0xe>
        }
      }
    }
  }
  return HAL_OK;
 8004372:	2300      	movs	r3, #0
}
 8004374:	4618      	mov	r0, r3
 8004376:	3710      	adds	r7, #16
 8004378:	46bd      	mov	sp, r7
 800437a:	bd80      	pop	{r7, pc}

0800437c <I2C_WaitOnRXNEFlagUntilTimeout>:
  * @param  Timeout Timeout duration
  * @param  Tickstart Tick start value
  * @retval HAL status
  */
static HAL_StatusTypeDef I2C_WaitOnRXNEFlagUntilTimeout(I2C_HandleTypeDef *hi2c, uint32_t Timeout, uint32_t Tickstart)
{
 800437c:	b580      	push	{r7, lr}
 800437e:	b084      	sub	sp, #16
 8004380:	af00      	add	r7, sp, #0
 8004382:	60f8      	str	r0, [r7, #12]
 8004384:	60b9      	str	r1, [r7, #8]
 8004386:	607a      	str	r2, [r7, #4]

  while (__HAL_I2C_GET_FLAG(hi2c, I2C_FLAG_RXNE) == RESET)
 8004388:	e049      	b.n	800441e <I2C_WaitOnRXNEFlagUntilTimeout+0xa2>
  {
    /* Check if a STOPF is detected */
    if (__HAL_I2C_GET_FLAG(hi2c, I2C_FLAG_STOPF) == SET)
 800438a:	68fb      	ldr	r3, [r7, #12]
 800438c:	681b      	ldr	r3, [r3, #0]
 800438e:	695b      	ldr	r3, [r3, #20]
 8004390:	f003 0310 	and.w	r3, r3, #16
 8004394:	2b10      	cmp	r3, #16
 8004396:	d119      	bne.n	80043cc <I2C_WaitOnRXNEFlagUntilTimeout+0x50>
    {
      /* Clear STOP Flag */
      __HAL_I2C_CLEAR_FLAG(hi2c, I2C_FLAG_STOPF);
 8004398:	68fb      	ldr	r3, [r7, #12]
 800439a:	681b      	ldr	r3, [r3, #0]
 800439c:	f06f 0210 	mvn.w	r2, #16
 80043a0:	615a      	str	r2, [r3, #20]

      hi2c->PreviousState       = I2C_STATE_NONE;
 80043a2:	68fb      	ldr	r3, [r7, #12]
 80043a4:	2200      	movs	r2, #0
 80043a6:	631a      	str	r2, [r3, #48]	@ 0x30
      hi2c->State               = HAL_I2C_STATE_READY;
 80043a8:	68fb      	ldr	r3, [r7, #12]
 80043aa:	2220      	movs	r2, #32
 80043ac:	f883 203d 	strb.w	r2, [r3, #61]	@ 0x3d
      hi2c->Mode                = HAL_I2C_MODE_NONE;
 80043b0:	68fb      	ldr	r3, [r7, #12]
 80043b2:	2200      	movs	r2, #0
 80043b4:	f883 203e 	strb.w	r2, [r3, #62]	@ 0x3e
      hi2c->ErrorCode           |= HAL_I2C_ERROR_NONE;
 80043b8:	68fb      	ldr	r3, [r7, #12]
 80043ba:	6c1a      	ldr	r2, [r3, #64]	@ 0x40
 80043bc:	68fb      	ldr	r3, [r7, #12]
 80043be:	641a      	str	r2, [r3, #64]	@ 0x40

      /* Process Unlocked */
      __HAL_UNLOCK(hi2c);
 80043c0:	68fb      	ldr	r3, [r7, #12]
 80043c2:	2200      	movs	r2, #0
 80043c4:	f883 203c 	strb.w	r2, [r3, #60]	@ 0x3c

      return HAL_ERROR;
 80043c8:	2301      	movs	r3, #1
 80043ca:	e030      	b.n	800442e <I2C_WaitOnRXNEFlagUntilTimeout+0xb2>
    }

    /* Check for the Timeout */
    if (((HAL_GetTick() - Tickstart) > Timeout) || (Timeout == 0U))
 80043cc:	f7fd fd00 	bl	8001dd0 <HAL_GetTick>
 80043d0:	4602      	mov	r2, r0
 80043d2:	687b      	ldr	r3, [r7, #4]
 80043d4:	1ad3      	subs	r3, r2, r3
 80043d6:	68ba      	ldr	r2, [r7, #8]
 80043d8:	429a      	cmp	r2, r3
 80043da:	d302      	bcc.n	80043e2 <I2C_WaitOnRXNEFlagUntilTimeout+0x66>
 80043dc:	68bb      	ldr	r3, [r7, #8]
 80043de:	2b00      	cmp	r3, #0
 80043e0:	d11d      	bne.n	800441e <I2C_WaitOnRXNEFlagUntilTimeout+0xa2>
    {
      if ((__HAL_I2C_GET_FLAG(hi2c, I2C_FLAG_RXNE) == RESET))
 80043e2:	68fb      	ldr	r3, [r7, #12]
 80043e4:	681b      	ldr	r3, [r3, #0]
 80043e6:	695b      	ldr	r3, [r3, #20]
 80043e8:	f003 0340 	and.w	r3, r3, #64	@ 0x40
 80043ec:	2b40      	cmp	r3, #64	@ 0x40
 80043ee:	d016      	beq.n	800441e <I2C_WaitOnRXNEFlagUntilTimeout+0xa2>
      {
        hi2c->PreviousState       = I2C_STATE_NONE;
 80043f0:	68fb      	ldr	r3, [r7, #12]
 80043f2:	2200      	movs	r2, #0
 80043f4:	631a      	str	r2, [r3, #48]	@ 0x30
        hi2c->State               = HAL_I2C_STATE_READY;
 80043f6:	68fb      	ldr	r3, [r7, #12]
 80043f8:	2220      	movs	r2, #32
 80043fa:	f883 203d 	strb.w	r2, [r3, #61]	@ 0x3d
        hi2c->Mode                = HAL_I2C_MODE_NONE;
 80043fe:	68fb      	ldr	r3, [r7, #12]
 8004400:	2200      	movs	r2, #0
 8004402:	f883 203e 	strb.w	r2, [r3, #62]	@ 0x3e
        hi2c->ErrorCode           |= HAL_I2C_ERROR_TIMEOUT;
 8004406:	68fb      	ldr	r3, [r7, #12]
 8004408:	6c1b      	ldr	r3, [r3, #64]	@ 0x40
 800440a:	f043 0220 	orr.w	r2, r3, #32
 800440e:	68fb      	ldr	r3, [r7, #12]
 8004410:	641a      	str	r2, [r3, #64]	@ 0x40

        /* Process Unlocked */
        __HAL_UNLOCK(hi2c);
 8004412:	68fb      	ldr	r3, [r7, #12]
 8004414:	2200      	movs	r2, #0
 8004416:	f883 203c 	strb.w	r2, [r3, #60]	@ 0x3c

        return HAL_ERROR;
 800441a:	2301      	movs	r3, #1
 800441c:	e007      	b.n	800442e <I2C_WaitOnRXNEFlagUntilTimeout+0xb2>
  while (__HAL_I2C_GET_FLAG(hi2c, I2C_FLAG_RXNE) == RESET)
 800441e:	68fb      	ldr	r3, [r7, #12]
 8004420:	681b      	ldr	r3, [r3, #0]
 8004422:	695b      	ldr	r3, [r3, #20]
 8004424:	f003 0340 	and.w	r3, r3, #64	@ 0x40
 8004428:	2b40      	cmp	r3, #64	@ 0x40
 800442a:	d1ae      	bne.n	800438a <I2C_WaitOnRXNEFlagUntilTimeout+0xe>
      }
    }
  }
  return HAL_OK;
 800442c:	2300      	movs	r3, #0
}
 800442e:	4618      	mov	r0, r3
 8004430:	3710      	adds	r7, #16
 8004432:	46bd      	mov	sp, r7
 8004434:	bd80      	pop	{r7, pc}

08004436 <I2C_IsAcknowledgeFailed>:
  * @param  hi2c Pointer to a I2C_HandleTypeDef structure that contains
  *                the configuration information for the specified I2C.
  * @retval HAL status
  */
static HAL_StatusTypeDef I2C_IsAcknowledgeFailed(I2C_HandleTypeDef *hi2c)
{
 8004436:	b480      	push	{r7}
 8004438:	b083      	sub	sp, #12
 800443a:	af00      	add	r7, sp, #0
 800443c:	6078      	str	r0, [r7, #4]
  if (__HAL_I2C_GET_FLAG(hi2c, I2C_FLAG_AF) == SET)
 800443e:	687b      	ldr	r3, [r7, #4]
 8004440:	681b      	ldr	r3, [r3, #0]
 8004442:	695b      	ldr	r3, [r3, #20]
 8004444:	f403 6380 	and.w	r3, r3, #1024	@ 0x400
 8004448:	f5b3 6f80 	cmp.w	r3, #1024	@ 0x400
 800444c:	d11b      	bne.n	8004486 <I2C_IsAcknowledgeFailed+0x50>
  {
    /* Clear NACKF Flag */
    __HAL_I2C_CLEAR_FLAG(hi2c, I2C_FLAG_AF);
 800444e:	687b      	ldr	r3, [r7, #4]
 8004450:	681b      	ldr	r3, [r3, #0]
 8004452:	f46f 6280 	mvn.w	r2, #1024	@ 0x400
 8004456:	615a      	str	r2, [r3, #20]

    hi2c->PreviousState       = I2C_STATE_NONE;
 8004458:	687b      	ldr	r3, [r7, #4]
 800445a:	2200      	movs	r2, #0
 800445c:	631a      	str	r2, [r3, #48]	@ 0x30
    hi2c->State               = HAL_I2C_STATE_READY;
 800445e:	687b      	ldr	r3, [r7, #4]
 8004460:	2220      	movs	r2, #32
 8004462:	f883 203d 	strb.w	r2, [r3, #61]	@ 0x3d
    hi2c->Mode                = HAL_I2C_MODE_NONE;
 8004466:	687b      	ldr	r3, [r7, #4]
 8004468:	2200      	movs	r2, #0
 800446a:	f883 203e 	strb.w	r2, [r3, #62]	@ 0x3e
    hi2c->ErrorCode           |= HAL_I2C_ERROR_AF;
 800446e:	687b      	ldr	r3, [r7, #4]
 8004470:	6c1b      	ldr	r3, [r3, #64]	@ 0x40
 8004472:	f043 0204 	orr.w	r2, r3, #4
 8004476:	687b      	ldr	r3, [r7, #4]
 8004478:	641a      	str	r2, [r3, #64]	@ 0x40

    /* Process Unlocked */
    __HAL_UNLOCK(hi2c);
 800447a:	687b      	ldr	r3, [r7, #4]
 800447c:	2200      	movs	r2, #0
 800447e:	f883 203c 	strb.w	r2, [r3, #60]	@ 0x3c

    return HAL_ERROR;
 8004482:	2301      	movs	r3, #1
 8004484:	e000      	b.n	8004488 <I2C_IsAcknowledgeFailed+0x52>
  }
  return HAL_OK;
 8004486:	2300      	movs	r3, #0
}
 8004488:	4618      	mov	r0, r3
 800448a:	370c      	adds	r7, #12
 800448c:	46bd      	mov	sp, r7
 800448e:	f85d 7b04 	ldr.w	r7, [sp], #4
 8004492:	4770      	bx	lr

08004494 <HAL_PWREx_EnableOverDrive>:
  *         During the Over-drive switch activation, no peripheral clocks should be enabled.   
  *         The peripheral clocks must be enabled once the Over-drive mode is activated.   
  * @retval HAL status
  */
HAL_StatusTypeDef HAL_PWREx_EnableOverDrive(void)
{
 8004494:	b580      	push	{r7, lr}
 8004496:	b082      	sub	sp, #8
 8004498:	af00      	add	r7, sp, #0
  uint32_t tickstart = 0U;
 800449a:	2300      	movs	r3, #0
 800449c:	607b      	str	r3, [r7, #4]

  __HAL_RCC_PWR_CLK_ENABLE();
 800449e:	2300      	movs	r3, #0
 80044a0:	603b      	str	r3, [r7, #0]
 80044a2:	4b20      	ldr	r3, [pc, #128]	@ (8004524 <HAL_PWREx_EnableOverDrive+0x90>)
 80044a4:	6c1b      	ldr	r3, [r3, #64]	@ 0x40
 80044a6:	4a1f      	ldr	r2, [pc, #124]	@ (8004524 <HAL_PWREx_EnableOverDrive+0x90>)
 80044a8:	f043 5380 	orr.w	r3, r3, #268435456	@ 0x10000000
 80044ac:	6413      	str	r3, [r2, #64]	@ 0x40
 80044ae:	4b1d      	ldr	r3, [pc, #116]	@ (8004524 <HAL_PWREx_EnableOverDrive+0x90>)
 80044b0:	6c1b      	ldr	r3, [r3, #64]	@ 0x40
 80044b2:	f003 5380 	and.w	r3, r3, #268435456	@ 0x10000000
 80044b6:	603b      	str	r3, [r7, #0]
 80044b8:	683b      	ldr	r3, [r7, #0]
  
  /* Enable the Over-drive to extend the clock frequency to 180 Mhz */
  __HAL_PWR_OVERDRIVE_ENABLE();
 80044ba:	4b1b      	ldr	r3, [pc, #108]	@ (8004528 <HAL_PWREx_EnableOverDrive+0x94>)
 80044bc:	2201      	movs	r2, #1
 80044be:	601a      	str	r2, [r3, #0]

  /* Get tick */
  tickstart = HAL_GetTick();
 80044c0:	f7fd fc86 	bl	8001dd0 <HAL_GetTick>
 80044c4:	6078      	str	r0, [r7, #4]

  while(!__HAL_PWR_GET_FLAG(PWR_FLAG_ODRDY))
 80044c6:	e009      	b.n	80044dc <HAL_PWREx_EnableOverDrive+0x48>
  {
    if((HAL_GetTick() - tickstart) > PWR_OVERDRIVE_TIMEOUT_VALUE)
 80044c8:	f7fd fc82 	bl	8001dd0 <HAL_GetTick>
 80044cc:	4602      	mov	r2, r0
 80044ce:	687b      	ldr	r3, [r7, #4]
 80044d0:	1ad3      	subs	r3, r2, r3
 80044d2:	f5b3 7f7a 	cmp.w	r3, #1000	@ 0x3e8
 80044d6:	d901      	bls.n	80044dc <HAL_PWREx_EnableOverDrive+0x48>
    {
      return HAL_TIMEOUT;
 80044d8:	2303      	movs	r3, #3
 80044da:	e01f      	b.n	800451c <HAL_PWREx_EnableOverDrive+0x88>
  while(!__HAL_PWR_GET_FLAG(PWR_FLAG_ODRDY))
 80044dc:	4b13      	ldr	r3, [pc, #76]	@ (800452c <HAL_PWREx_EnableOverDrive+0x98>)
 80044de:	685b      	ldr	r3, [r3, #4]
 80044e0:	f403 3380 	and.w	r3, r3, #65536	@ 0x10000
 80044e4:	f5b3 3f80 	cmp.w	r3, #65536	@ 0x10000
 80044e8:	d1ee      	bne.n	80044c8 <HAL_PWREx_EnableOverDrive+0x34>
    }
  }
  
  /* Enable the Over-drive switch */
  __HAL_PWR_OVERDRIVESWITCHING_ENABLE();
 80044ea:	4b11      	ldr	r3, [pc, #68]	@ (8004530 <HAL_PWREx_EnableOverDrive+0x9c>)
 80044ec:	2201      	movs	r2, #1
 80044ee:	601a      	str	r2, [r3, #0]

  /* Get tick */
  tickstart = HAL_GetTick();
 80044f0:	f7fd fc6e 	bl	8001dd0 <HAL_GetTick>
 80044f4:	6078      	str	r0, [r7, #4]

  while(!__HAL_PWR_GET_FLAG(PWR_FLAG_ODSWRDY))
 80044f6:	e009      	b.n	800450c <HAL_PWREx_EnableOverDrive+0x78>
  {
    if((HAL_GetTick() - tickstart ) > PWR_OVERDRIVE_TIMEOUT_VALUE)
 80044f8:	f7fd fc6a 	bl	8001dd0 <HAL_GetTick>
 80044fc:	4602      	mov	r2, r0
 80044fe:	687b      	ldr	r3, [r7, #4]
 8004500:	1ad3      	subs	r3, r2, r3
 8004502:	f5b3 7f7a 	cmp.w	r3, #1000	@ 0x3e8
 8004506:	d901      	bls.n	800450c <HAL_PWREx_EnableOverDrive+0x78>
    {
      return HAL_TIMEOUT;
 8004508:	2303      	movs	r3, #3
 800450a:	e007      	b.n	800451c <HAL_PWREx_EnableOverDrive+0x88>
  while(!__HAL_PWR_GET_FLAG(PWR_FLAG_ODSWRDY))
 800450c:	4b07      	ldr	r3, [pc, #28]	@ (800452c <HAL_PWREx_EnableOverDrive+0x98>)
 800450e:	685b      	ldr	r3, [r3, #4]
 8004510:	f403 3300 	and.w	r3, r3, #131072	@ 0x20000
 8004514:	f5b3 3f00 	cmp.w	r3, #131072	@ 0x20000
 8004518:	d1ee      	bne.n	80044f8 <HAL_PWREx_EnableOverDrive+0x64>
    }
  } 
  return HAL_OK;
 800451a:	2300      	movs	r3, #0
}
 800451c:	4618      	mov	r0, r3
 800451e:	3708      	adds	r7, #8
 8004520:	46bd      	mov	sp, r7
 8004522:	bd80      	pop	{r7, pc}
 8004524:	40023800 	.word	0x40023800
 8004528:	420e0040 	.word	0x420e0040
 800452c:	40007000 	.word	0x40007000
 8004530:	420e0044 	.word	0x420e0044

08004534 <HAL_RCC_ClockConfig>:
  *         HPRE[3:0] bits to ensure that HCLK not exceed the maximum allowed frequency
  *         (for more details refer to section above "Initialization/de-initialization functions")
  * @retval None
  */
HAL_StatusTypeDef HAL_RCC_ClockConfig(RCC_ClkInitTypeDef  *RCC_ClkInitStruct, uint32_t FLatency)
{
 8004534:	b580      	push	{r7, lr}
 8004536:	b084      	sub	sp, #16
 8004538:	af00      	add	r7, sp, #0
 800453a:	6078      	str	r0, [r7, #4]
 800453c:	6039      	str	r1, [r7, #0]
  uint32_t tickstart;

  /* Check Null pointer */
  if (RCC_ClkInitStruct == NULL)
 800453e:	687b      	ldr	r3, [r7, #4]
 8004540:	2b00      	cmp	r3, #0
 8004542:	d101      	bne.n	8004548 <HAL_RCC_ClockConfig+0x14>
  {
    return HAL_ERROR;
 8004544:	2301      	movs	r3, #1
 8004546:	e0cc      	b.n	80046e2 <HAL_RCC_ClockConfig+0x1ae>
  /* To correctly read data from FLASH memory, the number of wait states (LATENCY)
    must be correctly programmed according to the frequency of the CPU clock
    (HCLK) and the supply voltage of the device. */

  /* Increasing the number of wait states because of higher CPU frequency */
  if (FLatency > __HAL_FLASH_GET_LATENCY())
 8004548:	4b68      	ldr	r3, [pc, #416]	@ (80046ec <HAL_RCC_ClockConfig+0x1b8>)
 800454a:	681b      	ldr	r3, [r3, #0]
 800454c:	f003 030f 	and.w	r3, r3, #15
 8004550:	683a      	ldr	r2, [r7, #0]
 8004552:	429a      	cmp	r2, r3
 8004554:	d90c      	bls.n	8004570 <HAL_RCC_ClockConfig+0x3c>
  {
    /* Program the new number of wait states to the LATENCY bits in the FLASH_ACR register */
    __HAL_FLASH_SET_LATENCY(FLatency);
 8004556:	4b65      	ldr	r3, [pc, #404]	@ (80046ec <HAL_RCC_ClockConfig+0x1b8>)
 8004558:	683a      	ldr	r2, [r7, #0]
 800455a:	b2d2      	uxtb	r2, r2
 800455c:	701a      	strb	r2, [r3, #0]

    /* Check that the new number of wait states is taken into account to access the Flash
    memory by reading the FLASH_ACR register */
    if (__HAL_FLASH_GET_LATENCY() != FLatency)
 800455e:	4b63      	ldr	r3, [pc, #396]	@ (80046ec <HAL_RCC_ClockConfig+0x1b8>)
 8004560:	681b      	ldr	r3, [r3, #0]
 8004562:	f003 030f 	and.w	r3, r3, #15
 8004566:	683a      	ldr	r2, [r7, #0]
 8004568:	429a      	cmp	r2, r3
 800456a:	d001      	beq.n	8004570 <HAL_RCC_ClockConfig+0x3c>
    {
      return HAL_ERROR;
 800456c:	2301      	movs	r3, #1
 800456e:	e0b8      	b.n	80046e2 <HAL_RCC_ClockConfig+0x1ae>
    }
  }

  /*-------------------------- HCLK Configuration --------------------------*/
  if (((RCC_ClkInitStruct->ClockType) & RCC_CLOCKTYPE_HCLK) == RCC_CLOCKTYPE_HCLK)
 8004570:	687b      	ldr	r3, [r7, #4]
 8004572:	681b      	ldr	r3, [r3, #0]
 8004574:	f003 0302 	and.w	r3, r3, #2
 8004578:	2b00      	cmp	r3, #0
 800457a:	d020      	beq.n	80045be <HAL_RCC_ClockConfig+0x8a>
  {
    /* Set the highest APBx dividers in order to ensure that we do not go through
       a non-spec phase whatever we decrease or increase HCLK. */
    if (((RCC_ClkInitStruct->ClockType) & RCC_CLOCKTYPE_PCLK1) == RCC_CLOCKTYPE_PCLK1)
 800457c:	687b      	ldr	r3, [r7, #4]
 800457e:	681b      	ldr	r3, [r3, #0]
 8004580:	f003 0304 	and.w	r3, r3, #4
 8004584:	2b00      	cmp	r3, #0
 8004586:	d005      	beq.n	8004594 <HAL_RCC_ClockConfig+0x60>
    {
      MODIFY_REG(RCC->CFGR, RCC_CFGR_PPRE1, RCC_HCLK_DIV16);
 8004588:	4b59      	ldr	r3, [pc, #356]	@ (80046f0 <HAL_RCC_ClockConfig+0x1bc>)
 800458a:	689b      	ldr	r3, [r3, #8]
 800458c:	4a58      	ldr	r2, [pc, #352]	@ (80046f0 <HAL_RCC_ClockConfig+0x1bc>)
 800458e:	f443 53e0 	orr.w	r3, r3, #7168	@ 0x1c00
 8004592:	6093      	str	r3, [r2, #8]
    }

    if (((RCC_ClkInitStruct->ClockType) & RCC_CLOCKTYPE_PCLK2) == RCC_CLOCKTYPE_PCLK2)
 8004594:	687b      	ldr	r3, [r7, #4]
 8004596:	681b      	ldr	r3, [r3, #0]
 8004598:	f003 0308 	and.w	r3, r3, #8
 800459c:	2b00      	cmp	r3, #0
 800459e:	d005      	beq.n	80045ac <HAL_RCC_ClockConfig+0x78>
    {
      MODIFY_REG(RCC->CFGR, RCC_CFGR_PPRE2, (RCC_HCLK_DIV16 << 3));
 80045a0:	4b53      	ldr	r3, [pc, #332]	@ (80046f0 <HAL_RCC_ClockConfig+0x1bc>)
 80045a2:	689b      	ldr	r3, [r3, #8]
 80045a4:	4a52      	ldr	r2, [pc, #328]	@ (80046f0 <HAL_RCC_ClockConfig+0x1bc>)
 80045a6:	f443 4360 	orr.w	r3, r3, #57344	@ 0xe000
 80045aa:	6093      	str	r3, [r2, #8]
    }

    assert_param(IS_RCC_HCLK(RCC_ClkInitStruct->AHBCLKDivider));
    MODIFY_REG(RCC->CFGR, RCC_CFGR_HPRE, RCC_ClkInitStruct->AHBCLKDivider);
 80045ac:	4b50      	ldr	r3, [pc, #320]	@ (80046f0 <HAL_RCC_ClockConfig+0x1bc>)
 80045ae:	689b      	ldr	r3, [r3, #8]
 80045b0:	f023 02f0 	bic.w	r2, r3, #240	@ 0xf0
 80045b4:	687b      	ldr	r3, [r7, #4]
 80045b6:	689b      	ldr	r3, [r3, #8]
 80045b8:	494d      	ldr	r1, [pc, #308]	@ (80046f0 <HAL_RCC_ClockConfig+0x1bc>)
 80045ba:	4313      	orrs	r3, r2
 80045bc:	608b      	str	r3, [r1, #8]
  }

  /*------------------------- SYSCLK Configuration ---------------------------*/
  if (((RCC_ClkInitStruct->ClockType) & RCC_CLOCKTYPE_SYSCLK) == RCC_CLOCKTYPE_SYSCLK)
 80045be:	687b      	ldr	r3, [r7, #4]
 80045c0:	681b      	ldr	r3, [r3, #0]
 80045c2:	f003 0301 	and.w	r3, r3, #1
 80045c6:	2b00      	cmp	r3, #0
 80045c8:	d044      	beq.n	8004654 <HAL_RCC_ClockConfig+0x120>
  {
    assert_param(IS_RCC_SYSCLKSOURCE(RCC_ClkInitStruct->SYSCLKSource));

    /* HSE is selected as System Clock Source */
    if (RCC_ClkInitStruct->SYSCLKSource == RCC_SYSCLKSOURCE_HSE)
 80045ca:	687b      	ldr	r3, [r7, #4]
 80045cc:	685b      	ldr	r3, [r3, #4]
 80045ce:	2b01      	cmp	r3, #1
 80045d0:	d107      	bne.n	80045e2 <HAL_RCC_ClockConfig+0xae>
    {
      /* Check the HSE ready flag */
      if (__HAL_RCC_GET_FLAG(RCC_FLAG_HSERDY) == RESET)
 80045d2:	4b47      	ldr	r3, [pc, #284]	@ (80046f0 <HAL_RCC_ClockConfig+0x1bc>)
 80045d4:	681b      	ldr	r3, [r3, #0]
 80045d6:	f403 3300 	and.w	r3, r3, #131072	@ 0x20000
 80045da:	2b00      	cmp	r3, #0
 80045dc:	d119      	bne.n	8004612 <HAL_RCC_ClockConfig+0xde>
      {
        return HAL_ERROR;
 80045de:	2301      	movs	r3, #1
 80045e0:	e07f      	b.n	80046e2 <HAL_RCC_ClockConfig+0x1ae>
      }
    }
    /* PLL is selected as System Clock Source */
    else if ((RCC_ClkInitStruct->SYSCLKSource == RCC_SYSCLKSOURCE_PLLCLK)   ||
 80045e2:	687b      	ldr	r3, [r7, #4]
 80045e4:	685b      	ldr	r3, [r3, #4]
 80045e6:	2b02      	cmp	r3, #2
 80045e8:	d003      	beq.n	80045f2 <HAL_RCC_ClockConfig+0xbe>
             (RCC_ClkInitStruct->SYSCLKSource == RCC_SYSCLKSOURCE_PLLRCLK))
 80045ea:	687b      	ldr	r3, [r7, #4]
 80045ec:	685b      	ldr	r3, [r3, #4]
    else if ((RCC_ClkInitStruct->SYSCLKSource == RCC_SYSCLKSOURCE_PLLCLK)   ||
 80045ee:	2b03      	cmp	r3, #3
 80045f0:	d107      	bne.n	8004602 <HAL_RCC_ClockConfig+0xce>
    {
      /* Check the PLL ready flag */
      if (__HAL_RCC_GET_FLAG(RCC_FLAG_PLLRDY) == RESET)
 80045f2:	4b3f      	ldr	r3, [pc, #252]	@ (80046f0 <HAL_RCC_ClockConfig+0x1bc>)
 80045f4:	681b      	ldr	r3, [r3, #0]
 80045f6:	f003 7300 	and.w	r3, r3, #33554432	@ 0x2000000
 80045fa:	2b00      	cmp	r3, #0
 80045fc:	d109      	bne.n	8004612 <HAL_RCC_ClockConfig+0xde>
      {
        return HAL_ERROR;
 80045fe:	2301      	movs	r3, #1
 8004600:	e06f      	b.n	80046e2 <HAL_RCC_ClockConfig+0x1ae>
    }
    /* HSI is selected as System Clock Source */
    else
    {
      /* Check the HSI ready flag */
      if (__HAL_RCC_GET_FLAG(RCC_FLAG_HSIRDY) == RESET)
 8004602:	4b3b      	ldr	r3, [pc, #236]	@ (80046f0 <HAL_RCC_ClockConfig+0x1bc>)
 8004604:	681b      	ldr	r3, [r3, #0]
 8004606:	f003 0302 	and.w	r3, r3, #2
 800460a:	2b00      	cmp	r3, #0
 800460c:	d101      	bne.n	8004612 <HAL_RCC_ClockConfig+0xde>
      {
        return HAL_ERROR;
 800460e:	2301      	movs	r3, #1
 8004610:	e067      	b.n	80046e2 <HAL_RCC_ClockConfig+0x1ae>
      }
    }

    __HAL_RCC_SYSCLK_CONFIG(RCC_ClkInitStruct->SYSCLKSource);
 8004612:	4b37      	ldr	r3, [pc, #220]	@ (80046f0 <HAL_RCC_ClockConfig+0x1bc>)
 8004614:	689b      	ldr	r3, [r3, #8]
 8004616:	f023 0203 	bic.w	r2, r3, #3
 800461a:	687b      	ldr	r3, [r7, #4]
 800461c:	685b      	ldr	r3, [r3, #4]
 800461e:	4934      	ldr	r1, [pc, #208]	@ (80046f0 <HAL_RCC_ClockConfig+0x1bc>)
 8004620:	4313      	orrs	r3, r2
 8004622:	608b      	str	r3, [r1, #8]

    /* Get Start Tick */
    tickstart = HAL_GetTick();
 8004624:	f7fd fbd4 	bl	8001dd0 <HAL_GetTick>
 8004628:	60f8      	str	r0, [r7, #12]

    while (__HAL_RCC_GET_SYSCLK_SOURCE() != (RCC_ClkInitStruct->SYSCLKSource << RCC_CFGR_SWS_Pos))
 800462a:	e00a      	b.n	8004642 <HAL_RCC_ClockConfig+0x10e>
    {
      if ((HAL_GetTick() - tickstart) > CLOCKSWITCH_TIMEOUT_VALUE)
 800462c:	f7fd fbd0 	bl	8001dd0 <HAL_GetTick>
 8004630:	4602      	mov	r2, r0
 8004632:	68fb      	ldr	r3, [r7, #12]
 8004634:	1ad3      	subs	r3, r2, r3
 8004636:	f241 3288 	movw	r2, #5000	@ 0x1388
 800463a:	4293      	cmp	r3, r2
 800463c:	d901      	bls.n	8004642 <HAL_RCC_ClockConfig+0x10e>
      {
        return HAL_TIMEOUT;
 800463e:	2303      	movs	r3, #3
 8004640:	e04f      	b.n	80046e2 <HAL_RCC_ClockConfig+0x1ae>
    while (__HAL_RCC_GET_SYSCLK_SOURCE() != (RCC_ClkInitStruct->SYSCLKSource << RCC_CFGR_SWS_Pos))
 8004642:	4b2b      	ldr	r3, [pc, #172]	@ (80046f0 <HAL_RCC_ClockConfig+0x1bc>)
 8004644:	689b      	ldr	r3, [r3, #8]
 8004646:	f003 020c 	and.w	r2, r3, #12
 800464a:	687b      	ldr	r3, [r7, #4]
 800464c:	685b      	ldr	r3, [r3, #4]
 800464e:	009b      	lsls	r3, r3, #2
 8004650:	429a      	cmp	r2, r3
 8004652:	d1eb      	bne.n	800462c <HAL_RCC_ClockConfig+0xf8>
      }
    }
  }

  /* Decreasing the number of wait states because of lower CPU frequency */
  if (FLatency < __HAL_FLASH_GET_LATENCY())
 8004654:	4b25      	ldr	r3, [pc, #148]	@ (80046ec <HAL_RCC_ClockConfig+0x1b8>)
 8004656:	681b      	ldr	r3, [r3, #0]
 8004658:	f003 030f 	and.w	r3, r3, #15
 800465c:	683a      	ldr	r2, [r7, #0]
 800465e:	429a      	cmp	r2, r3
 8004660:	d20c      	bcs.n	800467c <HAL_RCC_ClockConfig+0x148>
  {
    /* Program the new number of wait states to the LATENCY bits in the FLASH_ACR register */
    __HAL_FLASH_SET_LATENCY(FLatency);
 8004662:	4b22      	ldr	r3, [pc, #136]	@ (80046ec <HAL_RCC_ClockConfig+0x1b8>)
 8004664:	683a      	ldr	r2, [r7, #0]
 8004666:	b2d2      	uxtb	r2, r2
 8004668:	701a      	strb	r2, [r3, #0]

    /* Check that the new number of wait states is taken into account to access the Flash
    memory by reading the FLASH_ACR register */
    if (__HAL_FLASH_GET_LATENCY() != FLatency)
 800466a:	4b20      	ldr	r3, [pc, #128]	@ (80046ec <HAL_RCC_ClockConfig+0x1b8>)
 800466c:	681b      	ldr	r3, [r3, #0]
 800466e:	f003 030f 	and.w	r3, r3, #15
 8004672:	683a      	ldr	r2, [r7, #0]
 8004674:	429a      	cmp	r2, r3
 8004676:	d001      	beq.n	800467c <HAL_RCC_ClockConfig+0x148>
    {
      return HAL_ERROR;
 8004678:	2301      	movs	r3, #1
 800467a:	e032      	b.n	80046e2 <HAL_RCC_ClockConfig+0x1ae>
    }
  }

  /*-------------------------- PCLK1 Configuration ---------------------------*/
  if (((RCC_ClkInitStruct->ClockType) & RCC_CLOCKTYPE_PCLK1) == RCC_CLOCKTYPE_PCLK1)
 800467c:	687b      	ldr	r3, [r7, #4]
 800467e:	681b      	ldr	r3, [r3, #0]
 8004680:	f003 0304 	and.w	r3, r3, #4
 8004684:	2b00      	cmp	r3, #0
 8004686:	d008      	beq.n	800469a <HAL_RCC_ClockConfig+0x166>
  {
    assert_param(IS_RCC_PCLK(RCC_ClkInitStruct->APB1CLKDivider));
    MODIFY_REG(RCC->CFGR, RCC_CFGR_PPRE1, RCC_ClkInitStruct->APB1CLKDivider);
 8004688:	4b19      	ldr	r3, [pc, #100]	@ (80046f0 <HAL_RCC_ClockConfig+0x1bc>)
 800468a:	689b      	ldr	r3, [r3, #8]
 800468c:	f423 52e0 	bic.w	r2, r3, #7168	@ 0x1c00
 8004690:	687b      	ldr	r3, [r7, #4]
 8004692:	68db      	ldr	r3, [r3, #12]
 8004694:	4916      	ldr	r1, [pc, #88]	@ (80046f0 <HAL_RCC_ClockConfig+0x1bc>)
 8004696:	4313      	orrs	r3, r2
 8004698:	608b      	str	r3, [r1, #8]
  }

  /*-------------------------- PCLK2 Configuration ---------------------------*/
  if (((RCC_ClkInitStruct->ClockType) & RCC_CLOCKTYPE_PCLK2) == RCC_CLOCKTYPE_PCLK2)
 800469a:	687b      	ldr	r3, [r7, #4]
 800469c:	681b      	ldr	r3, [r3, #0]
 800469e:	f003 0308 	and.w	r3, r3, #8
 80046a2:	2b00      	cmp	r3, #0
 80046a4:	d009      	beq.n	80046ba <HAL_RCC_ClockConfig+0x186>
  {
    assert_param(IS_RCC_PCLK(RCC_ClkInitStruct->APB2CLKDivider));
    MODIFY_REG(RCC->CFGR, RCC_CFGR_PPRE2, ((RCC_ClkInitStruct->APB2CLKDivider) << 3U));
 80046a6:	4b12      	ldr	r3, [pc, #72]	@ (80046f0 <HAL_RCC_ClockConfig+0x1bc>)
 80046a8:	689b      	ldr	r3, [r3, #8]
 80046aa:	f423 4260 	bic.w	r2, r3, #57344	@ 0xe000
 80046ae:	687b      	ldr	r3, [r7, #4]
 80046b0:	691b      	ldr	r3, [r3, #16]
 80046b2:	00db      	lsls	r3, r3, #3
 80046b4:	490e      	ldr	r1, [pc, #56]	@ (80046f0 <HAL_RCC_ClockConfig+0x1bc>)
 80046b6:	4313      	orrs	r3, r2
 80046b8:	608b      	str	r3, [r1, #8]
  }

  /* Update the SystemCoreClock global variable */
  SystemCoreClock = HAL_RCC_GetSysClockFreq() >> AHBPrescTable[(RCC->CFGR & RCC_CFGR_HPRE) >> RCC_CFGR_HPRE_Pos];
 80046ba:	f000 f841 	bl	8004740 <HAL_RCC_GetSysClockFreq>
 80046be:	4602      	mov	r2, r0
 80046c0:	4b0b      	ldr	r3, [pc, #44]	@ (80046f0 <HAL_RCC_ClockConfig+0x1bc>)
 80046c2:	689b      	ldr	r3, [r3, #8]
 80046c4:	091b      	lsrs	r3, r3, #4
 80046c6:	f003 030f 	and.w	r3, r3, #15
 80046ca:	490a      	ldr	r1, [pc, #40]	@ (80046f4 <HAL_RCC_ClockConfig+0x1c0>)
 80046cc:	5ccb      	ldrb	r3, [r1, r3]
 80046ce:	fa22 f303 	lsr.w	r3, r2, r3
 80046d2:	4a09      	ldr	r2, [pc, #36]	@ (80046f8 <HAL_RCC_ClockConfig+0x1c4>)
 80046d4:	6013      	str	r3, [r2, #0]

  /* Configure the source of time base considering new system clocks settings */
  HAL_InitTick(uwTickPrio);
 80046d6:	4b09      	ldr	r3, [pc, #36]	@ (80046fc <HAL_RCC_ClockConfig+0x1c8>)
 80046d8:	681b      	ldr	r3, [r3, #0]
 80046da:	4618      	mov	r0, r3
 80046dc:	f7fd fb34 	bl	8001d48 <HAL_InitTick>

  return HAL_OK;
 80046e0:	2300      	movs	r3, #0
}
 80046e2:	4618      	mov	r0, r3
 80046e4:	3710      	adds	r7, #16
 80046e6:	46bd      	mov	sp, r7
 80046e8:	bd80      	pop	{r7, pc}
 80046ea:	bf00      	nop
 80046ec:	40023c00 	.word	0x40023c00
 80046f0:	40023800 	.word	0x40023800
 80046f4:	080228b0 	.word	0x080228b0
 80046f8:	20000008 	.word	0x20000008
 80046fc:	20000018 	.word	0x20000018

08004700 <HAL_RCC_GetHCLKFreq>:
  * @note   The SystemCoreClock CMSIS variable is used to store System Clock Frequency
  *         and updated within this function
  * @retval HCLK frequency
  */
uint32_t HAL_RCC_GetHCLKFreq(void)
{
 8004700:	b480      	push	{r7}
 8004702:	af00      	add	r7, sp, #0
  return SystemCoreClock;
 8004704:	4b03      	ldr	r3, [pc, #12]	@ (8004714 <HAL_RCC_GetHCLKFreq+0x14>)
 8004706:	681b      	ldr	r3, [r3, #0]
}
 8004708:	4618      	mov	r0, r3
 800470a:	46bd      	mov	sp, r7
 800470c:	f85d 7b04 	ldr.w	r7, [sp], #4
 8004710:	4770      	bx	lr
 8004712:	bf00      	nop
 8004714:	20000008 	.word	0x20000008

08004718 <HAL_RCC_GetPCLK1Freq>:
  * @note   Each time PCLK1 changes, this function must be called to update the
  *         right PCLK1 value. Otherwise, any configuration based on this function will be incorrect.
  * @retval PCLK1 frequency
  */
uint32_t HAL_RCC_GetPCLK1Freq(void)
{
 8004718:	b580      	push	{r7, lr}
 800471a:	af00      	add	r7, sp, #0
  /* Get HCLK source and Compute PCLK1 frequency ---------------------------*/
  return (HAL_RCC_GetHCLKFreq() >> APBPrescTable[(RCC->CFGR & RCC_CFGR_PPRE1) >> RCC_CFGR_PPRE1_Pos]);
 800471c:	f7ff fff0 	bl	8004700 <HAL_RCC_GetHCLKFreq>
 8004720:	4602      	mov	r2, r0
 8004722:	4b05      	ldr	r3, [pc, #20]	@ (8004738 <HAL_RCC_GetPCLK1Freq+0x20>)
 8004724:	689b      	ldr	r3, [r3, #8]
 8004726:	0a9b      	lsrs	r3, r3, #10
 8004728:	f003 0307 	and.w	r3, r3, #7
 800472c:	4903      	ldr	r1, [pc, #12]	@ (800473c <HAL_RCC_GetPCLK1Freq+0x24>)
 800472e:	5ccb      	ldrb	r3, [r1, r3]
 8004730:	fa22 f303 	lsr.w	r3, r2, r3
}
 8004734:	4618      	mov	r0, r3
 8004736:	bd80      	pop	{r7, pc}
 8004738:	40023800 	.word	0x40023800
 800473c:	080228c0 	.word	0x080228c0

08004740 <HAL_RCC_GetSysClockFreq>:
  *
  *
  * @retval SYSCLK frequency
  */
uint32_t HAL_RCC_GetSysClockFreq(void)
{
 8004740:	e92d 4fb0 	stmdb	sp!, {r4, r5, r7, r8, r9, sl, fp, lr}
 8004744:	b0ae      	sub	sp, #184	@ 0xb8
 8004746:	af00      	add	r7, sp, #0
  uint32_t pllm = 0U;
 8004748:	2300      	movs	r3, #0
 800474a:	f8c7 30ac 	str.w	r3, [r7, #172]	@ 0xac
  uint32_t pllvco = 0U;
 800474e:	2300      	movs	r3, #0
 8004750:	f8c7 30b4 	str.w	r3, [r7, #180]	@ 0xb4
  uint32_t pllp = 0U;
 8004754:	2300      	movs	r3, #0
 8004756:	f8c7 30a8 	str.w	r3, [r7, #168]	@ 0xa8
  uint32_t pllr = 0U;
 800475a:	2300      	movs	r3, #0
 800475c:	f8c7 30a4 	str.w	r3, [r7, #164]	@ 0xa4
  uint32_t sysclockfreq = 0U;
 8004760:	2300      	movs	r3, #0
 8004762:	f8c7 30b0 	str.w	r3, [r7, #176]	@ 0xb0

  /* Get SYSCLK source -------------------------------------------------------*/
  switch (RCC->CFGR & RCC_CFGR_SWS)
 8004766:	4bcb      	ldr	r3, [pc, #812]	@ (8004a94 <HAL_RCC_GetSysClockFreq+0x354>)
 8004768:	689b      	ldr	r3, [r3, #8]
 800476a:	f003 030c 	and.w	r3, r3, #12
 800476e:	2b0c      	cmp	r3, #12
 8004770:	f200 8206 	bhi.w	8004b80 <HAL_RCC_GetSysClockFreq+0x440>
 8004774:	a201      	add	r2, pc, #4	@ (adr r2, 800477c <HAL_RCC_GetSysClockFreq+0x3c>)
 8004776:	f852 f023 	ldr.w	pc, [r2, r3, lsl #2]
 800477a:	bf00      	nop
 800477c:	080047b1 	.word	0x080047b1
 8004780:	08004b81 	.word	0x08004b81
 8004784:	08004b81 	.word	0x08004b81
 8004788:	08004b81 	.word	0x08004b81
 800478c:	080047b9 	.word	0x080047b9
 8004790:	08004b81 	.word	0x08004b81
 8004794:	08004b81 	.word	0x08004b81
 8004798:	08004b81 	.word	0x08004b81
 800479c:	080047c1 	.word	0x080047c1
 80047a0:	08004b81 	.word	0x08004b81
 80047a4:	08004b81 	.word	0x08004b81
 80047a8:	08004b81 	.word	0x08004b81
 80047ac:	080049b1 	.word	0x080049b1
  {
    case RCC_CFGR_SWS_HSI:  /* HSI used as system clock source */
    {
      sysclockfreq = HSI_VALUE;
 80047b0:	4bb9      	ldr	r3, [pc, #740]	@ (8004a98 <HAL_RCC_GetSysClockFreq+0x358>)
 80047b2:	f8c7 30b0 	str.w	r3, [r7, #176]	@ 0xb0
      break;
 80047b6:	e1e7      	b.n	8004b88 <HAL_RCC_GetSysClockFreq+0x448>
    }
    case RCC_CFGR_SWS_HSE:  /* HSE used as system clock  source */
    {
      sysclockfreq = HSE_VALUE;
 80047b8:	4bb8      	ldr	r3, [pc, #736]	@ (8004a9c <HAL_RCC_GetSysClockFreq+0x35c>)
 80047ba:	f8c7 30b0 	str.w	r3, [r7, #176]	@ 0xb0
      break;
 80047be:	e1e3      	b.n	8004b88 <HAL_RCC_GetSysClockFreq+0x448>
    }
    case RCC_CFGR_SWS_PLL:  /* PLL/PLLP used as system clock  source */
    {
      /* PLL_VCO = (HSE_VALUE or HSI_VALUE / PLLM) * PLLN
      SYSCLK = PLL_VCO / PLLP */
      pllm = RCC->PLLCFGR & RCC_PLLCFGR_PLLM;
 80047c0:	4bb4      	ldr	r3, [pc, #720]	@ (8004a94 <HAL_RCC_GetSysClockFreq+0x354>)
 80047c2:	685b      	ldr	r3, [r3, #4]
 80047c4:	f003 033f 	and.w	r3, r3, #63	@ 0x3f
 80047c8:	f8c7 30ac 	str.w	r3, [r7, #172]	@ 0xac
      if (__HAL_RCC_GET_PLL_OSCSOURCE() != RCC_PLLSOURCE_HSI)
 80047cc:	4bb1      	ldr	r3, [pc, #708]	@ (8004a94 <HAL_RCC_GetSysClockFreq+0x354>)
 80047ce:	685b      	ldr	r3, [r3, #4]
 80047d0:	f403 0380 	and.w	r3, r3, #4194304	@ 0x400000
 80047d4:	2b00      	cmp	r3, #0
 80047d6:	d071      	beq.n	80048bc <HAL_RCC_GetSysClockFreq+0x17c>
      {
        /* HSE used as PLL clock source */
        pllvco = (uint32_t)((((uint64_t) HSE_VALUE * ((uint64_t)((RCC->PLLCFGR & RCC_PLLCFGR_PLLN) >> RCC_PLLCFGR_PLLN_Pos)))) / (uint64_t)pllm);
 80047d8:	4bae      	ldr	r3, [pc, #696]	@ (8004a94 <HAL_RCC_GetSysClockFreq+0x354>)
 80047da:	685b      	ldr	r3, [r3, #4]
 80047dc:	099b      	lsrs	r3, r3, #6
 80047de:	2200      	movs	r2, #0
 80047e0:	f8c7 3098 	str.w	r3, [r7, #152]	@ 0x98
 80047e4:	f8c7 209c 	str.w	r2, [r7, #156]	@ 0x9c
 80047e8:	f8d7 3098 	ldr.w	r3, [r7, #152]	@ 0x98
 80047ec:	f3c3 0308 	ubfx	r3, r3, #0, #9
 80047f0:	f8c7 3090 	str.w	r3, [r7, #144]	@ 0x90
 80047f4:	2300      	movs	r3, #0
 80047f6:	f8c7 3094 	str.w	r3, [r7, #148]	@ 0x94
 80047fa:	e9d7 4524 	ldrd	r4, r5, [r7, #144]	@ 0x90
 80047fe:	4622      	mov	r2, r4
 8004800:	462b      	mov	r3, r5
 8004802:	f04f 0000 	mov.w	r0, #0
 8004806:	f04f 0100 	mov.w	r1, #0
 800480a:	0159      	lsls	r1, r3, #5
 800480c:	ea41 61d2 	orr.w	r1, r1, r2, lsr #27
 8004810:	0150      	lsls	r0, r2, #5
 8004812:	4602      	mov	r2, r0
 8004814:	460b      	mov	r3, r1
 8004816:	4621      	mov	r1, r4
 8004818:	1a51      	subs	r1, r2, r1
 800481a:	6439      	str	r1, [r7, #64]	@ 0x40
 800481c:	4629      	mov	r1, r5
 800481e:	eb63 0301 	sbc.w	r3, r3, r1
 8004822:	647b      	str	r3, [r7, #68]	@ 0x44
 8004824:	f04f 0200 	mov.w	r2, #0
 8004828:	f04f 0300 	mov.w	r3, #0
 800482c:	e9d7 8910 	ldrd	r8, r9, [r7, #64]	@ 0x40
 8004830:	4649      	mov	r1, r9
 8004832:	018b      	lsls	r3, r1, #6
 8004834:	4641      	mov	r1, r8
 8004836:	ea43 6391 	orr.w	r3, r3, r1, lsr #26
 800483a:	4641      	mov	r1, r8
 800483c:	018a      	lsls	r2, r1, #6
 800483e:	4641      	mov	r1, r8
 8004840:	1a51      	subs	r1, r2, r1
 8004842:	63b9      	str	r1, [r7, #56]	@ 0x38
 8004844:	4649      	mov	r1, r9
 8004846:	eb63 0301 	sbc.w	r3, r3, r1
 800484a:	63fb      	str	r3, [r7, #60]	@ 0x3c
 800484c:	f04f 0200 	mov.w	r2, #0
 8004850:	f04f 0300 	mov.w	r3, #0
 8004854:	e9d7 890e 	ldrd	r8, r9, [r7, #56]	@ 0x38
 8004858:	4649      	mov	r1, r9
 800485a:	00cb      	lsls	r3, r1, #3
 800485c:	4641      	mov	r1, r8
 800485e:	ea43 7351 	orr.w	r3, r3, r1, lsr #29
 8004862:	4641      	mov	r1, r8
 8004864:	00ca      	lsls	r2, r1, #3
 8004866:	4610      	mov	r0, r2
 8004868:	4619      	mov	r1, r3
 800486a:	4603      	mov	r3, r0
 800486c:	4622      	mov	r2, r4
 800486e:	189b      	adds	r3, r3, r2
 8004870:	633b      	str	r3, [r7, #48]	@ 0x30
 8004872:	462b      	mov	r3, r5
 8004874:	460a      	mov	r2, r1
 8004876:	eb42 0303 	adc.w	r3, r2, r3
 800487a:	637b      	str	r3, [r7, #52]	@ 0x34
 800487c:	f04f 0200 	mov.w	r2, #0
 8004880:	f04f 0300 	mov.w	r3, #0
 8004884:	e9d7 450c 	ldrd	r4, r5, [r7, #48]	@ 0x30
 8004888:	4629      	mov	r1, r5
 800488a:	024b      	lsls	r3, r1, #9
 800488c:	4621      	mov	r1, r4
 800488e:	ea43 53d1 	orr.w	r3, r3, r1, lsr #23
 8004892:	4621      	mov	r1, r4
 8004894:	024a      	lsls	r2, r1, #9
 8004896:	4610      	mov	r0, r2
 8004898:	4619      	mov	r1, r3
 800489a:	f8d7 30ac 	ldr.w	r3, [r7, #172]	@ 0xac
 800489e:	2200      	movs	r2, #0
 80048a0:	f8c7 3088 	str.w	r3, [r7, #136]	@ 0x88
 80048a4:	f8c7 208c 	str.w	r2, [r7, #140]	@ 0x8c
 80048a8:	e9d7 2322 	ldrd	r2, r3, [r7, #136]	@ 0x88
 80048ac:	f7fb fd00 	bl	80002b0 <__aeabi_uldivmod>
 80048b0:	4602      	mov	r2, r0
 80048b2:	460b      	mov	r3, r1
 80048b4:	4613      	mov	r3, r2
 80048b6:	f8c7 30b4 	str.w	r3, [r7, #180]	@ 0xb4
 80048ba:	e067      	b.n	800498c <HAL_RCC_GetSysClockFreq+0x24c>
      }
      else
      {
        /* HSI used as PLL clock source */
        pllvco = (uint32_t)((((uint64_t) HSI_VALUE * ((uint64_t)((RCC->PLLCFGR & RCC_PLLCFGR_PLLN) >> RCC_PLLCFGR_PLLN_Pos)))) / (uint64_t)pllm);
 80048bc:	4b75      	ldr	r3, [pc, #468]	@ (8004a94 <HAL_RCC_GetSysClockFreq+0x354>)
 80048be:	685b      	ldr	r3, [r3, #4]
 80048c0:	099b      	lsrs	r3, r3, #6
 80048c2:	2200      	movs	r2, #0
 80048c4:	f8c7 3080 	str.w	r3, [r7, #128]	@ 0x80
 80048c8:	f8c7 2084 	str.w	r2, [r7, #132]	@ 0x84
 80048cc:	f8d7 3080 	ldr.w	r3, [r7, #128]	@ 0x80
 80048d0:	f3c3 0308 	ubfx	r3, r3, #0, #9
 80048d4:	67bb      	str	r3, [r7, #120]	@ 0x78
 80048d6:	2300      	movs	r3, #0
 80048d8:	67fb      	str	r3, [r7, #124]	@ 0x7c
 80048da:	e9d7 451e 	ldrd	r4, r5, [r7, #120]	@ 0x78
 80048de:	4622      	mov	r2, r4
 80048e0:	462b      	mov	r3, r5
 80048e2:	f04f 0000 	mov.w	r0, #0
 80048e6:	f04f 0100 	mov.w	r1, #0
 80048ea:	0159      	lsls	r1, r3, #5
 80048ec:	ea41 61d2 	orr.w	r1, r1, r2, lsr #27
 80048f0:	0150      	lsls	r0, r2, #5
 80048f2:	4602      	mov	r2, r0
 80048f4:	460b      	mov	r3, r1
 80048f6:	4621      	mov	r1, r4
 80048f8:	1a51      	subs	r1, r2, r1
 80048fa:	62b9      	str	r1, [r7, #40]	@ 0x28
 80048fc:	4629      	mov	r1, r5
 80048fe:	eb63 0301 	sbc.w	r3, r3, r1
 8004902:	62fb      	str	r3, [r7, #44]	@ 0x2c
 8004904:	f04f 0200 	mov.w	r2, #0
 8004908:	f04f 0300 	mov.w	r3, #0
 800490c:	e9d7 890a 	ldrd	r8, r9, [r7, #40]	@ 0x28
 8004910:	4649      	mov	r1, r9
 8004912:	018b      	lsls	r3, r1, #6
 8004914:	4641      	mov	r1, r8
 8004916:	ea43 6391 	orr.w	r3, r3, r1, lsr #26
 800491a:	4641      	mov	r1, r8
 800491c:	018a      	lsls	r2, r1, #6
 800491e:	4641      	mov	r1, r8
 8004920:	ebb2 0a01 	subs.w	sl, r2, r1
 8004924:	4649      	mov	r1, r9
 8004926:	eb63 0b01 	sbc.w	fp, r3, r1
 800492a:	f04f 0200 	mov.w	r2, #0
 800492e:	f04f 0300 	mov.w	r3, #0
 8004932:	ea4f 03cb 	mov.w	r3, fp, lsl #3
 8004936:	ea43 735a 	orr.w	r3, r3, sl, lsr #29
 800493a:	ea4f 02ca 	mov.w	r2, sl, lsl #3
 800493e:	4692      	mov	sl, r2
 8004940:	469b      	mov	fp, r3
 8004942:	4623      	mov	r3, r4
 8004944:	eb1a 0303 	adds.w	r3, sl, r3
 8004948:	623b      	str	r3, [r7, #32]
 800494a:	462b      	mov	r3, r5
 800494c:	eb4b 0303 	adc.w	r3, fp, r3
 8004950:	627b      	str	r3, [r7, #36]	@ 0x24
 8004952:	f04f 0200 	mov.w	r2, #0
 8004956:	f04f 0300 	mov.w	r3, #0
 800495a:	e9d7 4508 	ldrd	r4, r5, [r7, #32]
 800495e:	4629      	mov	r1, r5
 8004960:	028b      	lsls	r3, r1, #10
 8004962:	4621      	mov	r1, r4
 8004964:	ea43 5391 	orr.w	r3, r3, r1, lsr #22
 8004968:	4621      	mov	r1, r4
 800496a:	028a      	lsls	r2, r1, #10
 800496c:	4610      	mov	r0, r2
 800496e:	4619      	mov	r1, r3
 8004970:	f8d7 30ac 	ldr.w	r3, [r7, #172]	@ 0xac
 8004974:	2200      	movs	r2, #0
 8004976:	673b      	str	r3, [r7, #112]	@ 0x70
 8004978:	677a      	str	r2, [r7, #116]	@ 0x74
 800497a:	e9d7 231c 	ldrd	r2, r3, [r7, #112]	@ 0x70
 800497e:	f7fb fc97 	bl	80002b0 <__aeabi_uldivmod>
 8004982:	4602      	mov	r2, r0
 8004984:	460b      	mov	r3, r1
 8004986:	4613      	mov	r3, r2
 8004988:	f8c7 30b4 	str.w	r3, [r7, #180]	@ 0xb4
      }
      pllp = ((((RCC->PLLCFGR & RCC_PLLCFGR_PLLP) >> RCC_PLLCFGR_PLLP_Pos) + 1U) * 2U);
 800498c:	4b41      	ldr	r3, [pc, #260]	@ (8004a94 <HAL_RCC_GetSysClockFreq+0x354>)
 800498e:	685b      	ldr	r3, [r3, #4]
 8004990:	0c1b      	lsrs	r3, r3, #16
 8004992:	f003 0303 	and.w	r3, r3, #3
 8004996:	3301      	adds	r3, #1
 8004998:	005b      	lsls	r3, r3, #1
 800499a:	f8c7 30a8 	str.w	r3, [r7, #168]	@ 0xa8

      sysclockfreq = pllvco / pllp;
 800499e:	f8d7 20b4 	ldr.w	r2, [r7, #180]	@ 0xb4
 80049a2:	f8d7 30a8 	ldr.w	r3, [r7, #168]	@ 0xa8
 80049a6:	fbb2 f3f3 	udiv	r3, r2, r3
 80049aa:	f8c7 30b0 	str.w	r3, [r7, #176]	@ 0xb0
      break;
 80049ae:	e0eb      	b.n	8004b88 <HAL_RCC_GetSysClockFreq+0x448>
    }
    case RCC_CFGR_SWS_PLLR:  /* PLL/PLLR used as system clock  source */
    {
      /* PLL_VCO = (HSE_VALUE or HSI_VALUE / PLLM) * PLLN
      SYSCLK = PLL_VCO / PLLR */
      pllm = RCC->PLLCFGR & RCC_PLLCFGR_PLLM;
 80049b0:	4b38      	ldr	r3, [pc, #224]	@ (8004a94 <HAL_RCC_GetSysClockFreq+0x354>)
 80049b2:	685b      	ldr	r3, [r3, #4]
 80049b4:	f003 033f 	and.w	r3, r3, #63	@ 0x3f
 80049b8:	f8c7 30ac 	str.w	r3, [r7, #172]	@ 0xac
      if (__HAL_RCC_GET_PLL_OSCSOURCE() != RCC_PLLSOURCE_HSI)
 80049bc:	4b35      	ldr	r3, [pc, #212]	@ (8004a94 <HAL_RCC_GetSysClockFreq+0x354>)
 80049be:	685b      	ldr	r3, [r3, #4]
 80049c0:	f403 0380 	and.w	r3, r3, #4194304	@ 0x400000
 80049c4:	2b00      	cmp	r3, #0
 80049c6:	d06b      	beq.n	8004aa0 <HAL_RCC_GetSysClockFreq+0x360>
      {
        /* HSE used as PLL clock source */
        pllvco = (uint32_t)((((uint64_t) HSE_VALUE * ((uint64_t)((RCC->PLLCFGR & RCC_PLLCFGR_PLLN) >> RCC_PLLCFGR_PLLN_Pos)))) / (uint64_t)pllm);
 80049c8:	4b32      	ldr	r3, [pc, #200]	@ (8004a94 <HAL_RCC_GetSysClockFreq+0x354>)
 80049ca:	685b      	ldr	r3, [r3, #4]
 80049cc:	099b      	lsrs	r3, r3, #6
 80049ce:	2200      	movs	r2, #0
 80049d0:	66bb      	str	r3, [r7, #104]	@ 0x68
 80049d2:	66fa      	str	r2, [r7, #108]	@ 0x6c
 80049d4:	6ebb      	ldr	r3, [r7, #104]	@ 0x68
 80049d6:	f3c3 0308 	ubfx	r3, r3, #0, #9
 80049da:	663b      	str	r3, [r7, #96]	@ 0x60
 80049dc:	2300      	movs	r3, #0
 80049de:	667b      	str	r3, [r7, #100]	@ 0x64
 80049e0:	e9d7 4518 	ldrd	r4, r5, [r7, #96]	@ 0x60
 80049e4:	4622      	mov	r2, r4
 80049e6:	462b      	mov	r3, r5
 80049e8:	f04f 0000 	mov.w	r0, #0
 80049ec:	f04f 0100 	mov.w	r1, #0
 80049f0:	0159      	lsls	r1, r3, #5
 80049f2:	ea41 61d2 	orr.w	r1, r1, r2, lsr #27
 80049f6:	0150      	lsls	r0, r2, #5
 80049f8:	4602      	mov	r2, r0
 80049fa:	460b      	mov	r3, r1
 80049fc:	4621      	mov	r1, r4
 80049fe:	1a51      	subs	r1, r2, r1
 8004a00:	61b9      	str	r1, [r7, #24]
 8004a02:	4629      	mov	r1, r5
 8004a04:	eb63 0301 	sbc.w	r3, r3, r1
 8004a08:	61fb      	str	r3, [r7, #28]
 8004a0a:	f04f 0200 	mov.w	r2, #0
 8004a0e:	f04f 0300 	mov.w	r3, #0
 8004a12:	e9d7 ab06 	ldrd	sl, fp, [r7, #24]
 8004a16:	4659      	mov	r1, fp
 8004a18:	018b      	lsls	r3, r1, #6
 8004a1a:	4651      	mov	r1, sl
 8004a1c:	ea43 6391 	orr.w	r3, r3, r1, lsr #26
 8004a20:	4651      	mov	r1, sl
 8004a22:	018a      	lsls	r2, r1, #6
 8004a24:	4651      	mov	r1, sl
 8004a26:	ebb2 0801 	subs.w	r8, r2, r1
 8004a2a:	4659      	mov	r1, fp
 8004a2c:	eb63 0901 	sbc.w	r9, r3, r1
 8004a30:	f04f 0200 	mov.w	r2, #0
 8004a34:	f04f 0300 	mov.w	r3, #0
 8004a38:	ea4f 03c9 	mov.w	r3, r9, lsl #3
 8004a3c:	ea43 7358 	orr.w	r3, r3, r8, lsr #29
 8004a40:	ea4f 02c8 	mov.w	r2, r8, lsl #3
 8004a44:	4690      	mov	r8, r2
 8004a46:	4699      	mov	r9, r3
 8004a48:	4623      	mov	r3, r4
 8004a4a:	eb18 0303 	adds.w	r3, r8, r3
 8004a4e:	613b      	str	r3, [r7, #16]
 8004a50:	462b      	mov	r3, r5
 8004a52:	eb49 0303 	adc.w	r3, r9, r3
 8004a56:	617b      	str	r3, [r7, #20]
 8004a58:	f04f 0200 	mov.w	r2, #0
 8004a5c:	f04f 0300 	mov.w	r3, #0
 8004a60:	e9d7 4504 	ldrd	r4, r5, [r7, #16]
 8004a64:	4629      	mov	r1, r5
 8004a66:	024b      	lsls	r3, r1, #9
 8004a68:	4621      	mov	r1, r4
 8004a6a:	ea43 53d1 	orr.w	r3, r3, r1, lsr #23
 8004a6e:	4621      	mov	r1, r4
 8004a70:	024a      	lsls	r2, r1, #9
 8004a72:	4610      	mov	r0, r2
 8004a74:	4619      	mov	r1, r3
 8004a76:	f8d7 30ac 	ldr.w	r3, [r7, #172]	@ 0xac
 8004a7a:	2200      	movs	r2, #0
 8004a7c:	65bb      	str	r3, [r7, #88]	@ 0x58
 8004a7e:	65fa      	str	r2, [r7, #92]	@ 0x5c
 8004a80:	e9d7 2316 	ldrd	r2, r3, [r7, #88]	@ 0x58
 8004a84:	f7fb fc14 	bl	80002b0 <__aeabi_uldivmod>
 8004a88:	4602      	mov	r2, r0
 8004a8a:	460b      	mov	r3, r1
 8004a8c:	4613      	mov	r3, r2
 8004a8e:	f8c7 30b4 	str.w	r3, [r7, #180]	@ 0xb4
 8004a92:	e065      	b.n	8004b60 <HAL_RCC_GetSysClockFreq+0x420>
 8004a94:	40023800 	.word	0x40023800
 8004a98:	00f42400 	.word	0x00f42400
 8004a9c:	007a1200 	.word	0x007a1200
      }
      else
      {
        /* HSI used as PLL clock source */
        pllvco = (uint32_t)((((uint64_t) HSI_VALUE * ((uint64_t)((RCC->PLLCFGR & RCC_PLLCFGR_PLLN) >> RCC_PLLCFGR_PLLN_Pos)))) / (uint64_t)pllm);
 8004aa0:	4b3d      	ldr	r3, [pc, #244]	@ (8004b98 <HAL_RCC_GetSysClockFreq+0x458>)
 8004aa2:	685b      	ldr	r3, [r3, #4]
 8004aa4:	099b      	lsrs	r3, r3, #6
 8004aa6:	2200      	movs	r2, #0
 8004aa8:	4618      	mov	r0, r3
 8004aaa:	4611      	mov	r1, r2
 8004aac:	f3c0 0308 	ubfx	r3, r0, #0, #9
 8004ab0:	653b      	str	r3, [r7, #80]	@ 0x50
 8004ab2:	2300      	movs	r3, #0
 8004ab4:	657b      	str	r3, [r7, #84]	@ 0x54
 8004ab6:	e9d7 8914 	ldrd	r8, r9, [r7, #80]	@ 0x50
 8004aba:	4642      	mov	r2, r8
 8004abc:	464b      	mov	r3, r9
 8004abe:	f04f 0000 	mov.w	r0, #0
 8004ac2:	f04f 0100 	mov.w	r1, #0
 8004ac6:	0159      	lsls	r1, r3, #5
 8004ac8:	ea41 61d2 	orr.w	r1, r1, r2, lsr #27
 8004acc:	0150      	lsls	r0, r2, #5
 8004ace:	4602      	mov	r2, r0
 8004ad0:	460b      	mov	r3, r1
 8004ad2:	4641      	mov	r1, r8
 8004ad4:	1a51      	subs	r1, r2, r1
 8004ad6:	60b9      	str	r1, [r7, #8]
 8004ad8:	4649      	mov	r1, r9
 8004ada:	eb63 0301 	sbc.w	r3, r3, r1
 8004ade:	60fb      	str	r3, [r7, #12]
 8004ae0:	f04f 0200 	mov.w	r2, #0
 8004ae4:	f04f 0300 	mov.w	r3, #0
 8004ae8:	e9d7 ab02 	ldrd	sl, fp, [r7, #8]
 8004aec:	4659      	mov	r1, fp
 8004aee:	018b      	lsls	r3, r1, #6
 8004af0:	4651      	mov	r1, sl
 8004af2:	ea43 6391 	orr.w	r3, r3, r1, lsr #26
 8004af6:	4651      	mov	r1, sl
 8004af8:	018a      	lsls	r2, r1, #6
 8004afa:	4651      	mov	r1, sl
 8004afc:	1a54      	subs	r4, r2, r1
 8004afe:	4659      	mov	r1, fp
 8004b00:	eb63 0501 	sbc.w	r5, r3, r1
 8004b04:	f04f 0200 	mov.w	r2, #0
 8004b08:	f04f 0300 	mov.w	r3, #0
 8004b0c:	00eb      	lsls	r3, r5, #3
 8004b0e:	ea43 7354 	orr.w	r3, r3, r4, lsr #29
 8004b12:	00e2      	lsls	r2, r4, #3
 8004b14:	4614      	mov	r4, r2
 8004b16:	461d      	mov	r5, r3
 8004b18:	4643      	mov	r3, r8
 8004b1a:	18e3      	adds	r3, r4, r3
 8004b1c:	603b      	str	r3, [r7, #0]
 8004b1e:	464b      	mov	r3, r9
 8004b20:	eb45 0303 	adc.w	r3, r5, r3
 8004b24:	607b      	str	r3, [r7, #4]
 8004b26:	f04f 0200 	mov.w	r2, #0
 8004b2a:	f04f 0300 	mov.w	r3, #0
 8004b2e:	e9d7 4500 	ldrd	r4, r5, [r7]
 8004b32:	4629      	mov	r1, r5
 8004b34:	028b      	lsls	r3, r1, #10
 8004b36:	4621      	mov	r1, r4
 8004b38:	ea43 5391 	orr.w	r3, r3, r1, lsr #22
 8004b3c:	4621      	mov	r1, r4
 8004b3e:	028a      	lsls	r2, r1, #10
 8004b40:	4610      	mov	r0, r2
 8004b42:	4619      	mov	r1, r3
 8004b44:	f8d7 30ac 	ldr.w	r3, [r7, #172]	@ 0xac
 8004b48:	2200      	movs	r2, #0
 8004b4a:	64bb      	str	r3, [r7, #72]	@ 0x48
 8004b4c:	64fa      	str	r2, [r7, #76]	@ 0x4c
 8004b4e:	e9d7 2312 	ldrd	r2, r3, [r7, #72]	@ 0x48
 8004b52:	f7fb fbad 	bl	80002b0 <__aeabi_uldivmod>
 8004b56:	4602      	mov	r2, r0
 8004b58:	460b      	mov	r3, r1
 8004b5a:	4613      	mov	r3, r2
 8004b5c:	f8c7 30b4 	str.w	r3, [r7, #180]	@ 0xb4
      }
      pllr = ((RCC->PLLCFGR & RCC_PLLCFGR_PLLR) >> RCC_PLLCFGR_PLLR_Pos);
 8004b60:	4b0d      	ldr	r3, [pc, #52]	@ (8004b98 <HAL_RCC_GetSysClockFreq+0x458>)
 8004b62:	685b      	ldr	r3, [r3, #4]
 8004b64:	0f1b      	lsrs	r3, r3, #28
 8004b66:	f003 0307 	and.w	r3, r3, #7
 8004b6a:	f8c7 30a4 	str.w	r3, [r7, #164]	@ 0xa4

      sysclockfreq = pllvco / pllr;
 8004b6e:	f8d7 20b4 	ldr.w	r2, [r7, #180]	@ 0xb4
 8004b72:	f8d7 30a4 	ldr.w	r3, [r7, #164]	@ 0xa4
 8004b76:	fbb2 f3f3 	udiv	r3, r2, r3
 8004b7a:	f8c7 30b0 	str.w	r3, [r7, #176]	@ 0xb0
      break;
 8004b7e:	e003      	b.n	8004b88 <HAL_RCC_GetSysClockFreq+0x448>
    }
    default:
    {
      sysclockfreq = HSI_VALUE;
 8004b80:	4b06      	ldr	r3, [pc, #24]	@ (8004b9c <HAL_RCC_GetSysClockFreq+0x45c>)
 8004b82:	f8c7 30b0 	str.w	r3, [r7, #176]	@ 0xb0
      break;
 8004b86:	bf00      	nop
    }
  }
  return sysclockfreq;
 8004b88:	f8d7 30b0 	ldr.w	r3, [r7, #176]	@ 0xb0
}
 8004b8c:	4618      	mov	r0, r3
 8004b8e:	37b8      	adds	r7, #184	@ 0xb8
 8004b90:	46bd      	mov	sp, r7
 8004b92:	e8bd 8fb0 	ldmia.w	sp!, {r4, r5, r7, r8, r9, sl, fp, pc}
 8004b96:	bf00      	nop
 8004b98:	40023800 	.word	0x40023800
 8004b9c:	00f42400 	.word	0x00f42400

08004ba0 <HAL_RCC_OscConfig>:
  * @note   This function add the PLL/PLLR factor management during PLL configuration this feature
  *         is only available in STM32F410xx/STM32F446xx/STM32F469xx/STM32F479xx/STM32F412Zx/STM32F412Vx/STM32F412Rx/STM32F412Cx devices
  * @retval HAL status
  */
HAL_StatusTypeDef HAL_RCC_OscConfig(RCC_OscInitTypeDef  *RCC_OscInitStruct)
{
 8004ba0:	b580      	push	{r7, lr}
 8004ba2:	b086      	sub	sp, #24
 8004ba4:	af00      	add	r7, sp, #0
 8004ba6:	6078      	str	r0, [r7, #4]
  uint32_t tickstart;
  uint32_t pll_config;

  /* Check Null pointer */
  if (RCC_OscInitStruct == NULL)
 8004ba8:	687b      	ldr	r3, [r7, #4]
 8004baa:	2b00      	cmp	r3, #0
 8004bac:	d101      	bne.n	8004bb2 <HAL_RCC_OscConfig+0x12>
  {
    return HAL_ERROR;
 8004bae:	2301      	movs	r3, #1
 8004bb0:	e28d      	b.n	80050ce <HAL_RCC_OscConfig+0x52e>
  }

  /* Check the parameters */
  assert_param(IS_RCC_OSCILLATORTYPE(RCC_OscInitStruct->OscillatorType));
  /*------------------------------- HSE Configuration ------------------------*/
  if (((RCC_OscInitStruct->OscillatorType) & RCC_OSCILLATORTYPE_HSE) == RCC_OSCILLATORTYPE_HSE)
 8004bb2:	687b      	ldr	r3, [r7, #4]
 8004bb4:	681b      	ldr	r3, [r3, #0]
 8004bb6:	f003 0301 	and.w	r3, r3, #1
 8004bba:	2b00      	cmp	r3, #0
 8004bbc:	f000 8083 	beq.w	8004cc6 <HAL_RCC_OscConfig+0x126>
  {
    /* Check the parameters */
    assert_param(IS_RCC_HSE(RCC_OscInitStruct->HSEState));
    /* When the HSE is used as system clock or clock source for PLL in these cases HSE will not disabled */
#if defined(STM32F446xx)
    if ((__HAL_RCC_GET_SYSCLK_SOURCE() == RCC_CFGR_SWS_HSE)
 8004bc0:	4b94      	ldr	r3, [pc, #592]	@ (8004e14 <HAL_RCC_OscConfig+0x274>)
 8004bc2:	689b      	ldr	r3, [r3, #8]
 8004bc4:	f003 030c 	and.w	r3, r3, #12
 8004bc8:	2b04      	cmp	r3, #4
 8004bca:	d019      	beq.n	8004c00 <HAL_RCC_OscConfig+0x60>
        || \
        ((__HAL_RCC_GET_SYSCLK_SOURCE() == RCC_CFGR_SWS_PLL) && ((RCC->PLLCFGR & RCC_PLLCFGR_PLLSRC) == RCC_PLLCFGR_PLLSRC_HSE)) || \
 8004bcc:	4b91      	ldr	r3, [pc, #580]	@ (8004e14 <HAL_RCC_OscConfig+0x274>)
 8004bce:	689b      	ldr	r3, [r3, #8]
 8004bd0:	f003 030c 	and.w	r3, r3, #12
        || \
 8004bd4:	2b08      	cmp	r3, #8
 8004bd6:	d106      	bne.n	8004be6 <HAL_RCC_OscConfig+0x46>
        ((__HAL_RCC_GET_SYSCLK_SOURCE() == RCC_CFGR_SWS_PLL) && ((RCC->PLLCFGR & RCC_PLLCFGR_PLLSRC) == RCC_PLLCFGR_PLLSRC_HSE)) || \
 8004bd8:	4b8e      	ldr	r3, [pc, #568]	@ (8004e14 <HAL_RCC_OscConfig+0x274>)
 8004bda:	685b      	ldr	r3, [r3, #4]
 8004bdc:	f403 0380 	and.w	r3, r3, #4194304	@ 0x400000
 8004be0:	f5b3 0f80 	cmp.w	r3, #4194304	@ 0x400000
 8004be4:	d00c      	beq.n	8004c00 <HAL_RCC_OscConfig+0x60>
        ((__HAL_RCC_GET_SYSCLK_SOURCE() == RCC_CFGR_SWS_PLLR) && ((RCC->PLLCFGR & RCC_PLLCFGR_PLLSRC) == RCC_PLLCFGR_PLLSRC_HSE)))
 8004be6:	4b8b      	ldr	r3, [pc, #556]	@ (8004e14 <HAL_RCC_OscConfig+0x274>)
 8004be8:	689b      	ldr	r3, [r3, #8]
 8004bea:	f003 030c 	and.w	r3, r3, #12
        ((__HAL_RCC_GET_SYSCLK_SOURCE() == RCC_CFGR_SWS_PLL) && ((RCC->PLLCFGR & RCC_PLLCFGR_PLLSRC) == RCC_PLLCFGR_PLLSRC_HSE)) || \
 8004bee:	2b0c      	cmp	r3, #12
 8004bf0:	d112      	bne.n	8004c18 <HAL_RCC_OscConfig+0x78>
        ((__HAL_RCC_GET_SYSCLK_SOURCE() == RCC_CFGR_SWS_PLLR) && ((RCC->PLLCFGR & RCC_PLLCFGR_PLLSRC) == RCC_PLLCFGR_PLLSRC_HSE)))
 8004bf2:	4b88      	ldr	r3, [pc, #544]	@ (8004e14 <HAL_RCC_OscConfig+0x274>)
 8004bf4:	685b      	ldr	r3, [r3, #4]
 8004bf6:	f403 0380 	and.w	r3, r3, #4194304	@ 0x400000
 8004bfa:	f5b3 0f80 	cmp.w	r3, #4194304	@ 0x400000
 8004bfe:	d10b      	bne.n	8004c18 <HAL_RCC_OscConfig+0x78>
    if ((__HAL_RCC_GET_SYSCLK_SOURCE() == RCC_CFGR_SWS_HSE)
        || \
        ((__HAL_RCC_GET_SYSCLK_SOURCE() == RCC_CFGR_SWS_PLL) && ((RCC->PLLCFGR & RCC_PLLCFGR_PLLSRC) == RCC_PLLCFGR_PLLSRC_HSE)))
#endif /* STM32F446xx */
    {
      if ((__HAL_RCC_GET_FLAG(RCC_FLAG_HSERDY) != RESET) && (RCC_OscInitStruct->HSEState == RCC_HSE_OFF))
 8004c00:	4b84      	ldr	r3, [pc, #528]	@ (8004e14 <HAL_RCC_OscConfig+0x274>)
 8004c02:	681b      	ldr	r3, [r3, #0]
 8004c04:	f403 3300 	and.w	r3, r3, #131072	@ 0x20000
 8004c08:	2b00      	cmp	r3, #0
 8004c0a:	d05b      	beq.n	8004cc4 <HAL_RCC_OscConfig+0x124>
 8004c0c:	687b      	ldr	r3, [r7, #4]
 8004c0e:	685b      	ldr	r3, [r3, #4]
 8004c10:	2b00      	cmp	r3, #0
 8004c12:	d157      	bne.n	8004cc4 <HAL_RCC_OscConfig+0x124>
      {
        return HAL_ERROR;
 8004c14:	2301      	movs	r3, #1
 8004c16:	e25a      	b.n	80050ce <HAL_RCC_OscConfig+0x52e>
      }
    }
    else
    {
      /* Set the new HSE configuration ---------------------------------------*/
      __HAL_RCC_HSE_CONFIG(RCC_OscInitStruct->HSEState);
 8004c18:	687b      	ldr	r3, [r7, #4]
 8004c1a:	685b      	ldr	r3, [r3, #4]
 8004c1c:	f5b3 3f80 	cmp.w	r3, #65536	@ 0x10000
 8004c20:	d106      	bne.n	8004c30 <HAL_RCC_OscConfig+0x90>
 8004c22:	4b7c      	ldr	r3, [pc, #496]	@ (8004e14 <HAL_RCC_OscConfig+0x274>)
 8004c24:	681b      	ldr	r3, [r3, #0]
 8004c26:	4a7b      	ldr	r2, [pc, #492]	@ (8004e14 <HAL_RCC_OscConfig+0x274>)
 8004c28:	f443 3380 	orr.w	r3, r3, #65536	@ 0x10000
 8004c2c:	6013      	str	r3, [r2, #0]
 8004c2e:	e01d      	b.n	8004c6c <HAL_RCC_OscConfig+0xcc>
 8004c30:	687b      	ldr	r3, [r7, #4]
 8004c32:	685b      	ldr	r3, [r3, #4]
 8004c34:	f5b3 2fa0 	cmp.w	r3, #327680	@ 0x50000
 8004c38:	d10c      	bne.n	8004c54 <HAL_RCC_OscConfig+0xb4>
 8004c3a:	4b76      	ldr	r3, [pc, #472]	@ (8004e14 <HAL_RCC_OscConfig+0x274>)
 8004c3c:	681b      	ldr	r3, [r3, #0]
 8004c3e:	4a75      	ldr	r2, [pc, #468]	@ (8004e14 <HAL_RCC_OscConfig+0x274>)
 8004c40:	f443 2380 	orr.w	r3, r3, #262144	@ 0x40000
 8004c44:	6013      	str	r3, [r2, #0]
 8004c46:	4b73      	ldr	r3, [pc, #460]	@ (8004e14 <HAL_RCC_OscConfig+0x274>)
 8004c48:	681b      	ldr	r3, [r3, #0]
 8004c4a:	4a72      	ldr	r2, [pc, #456]	@ (8004e14 <HAL_RCC_OscConfig+0x274>)
 8004c4c:	f443 3380 	orr.w	r3, r3, #65536	@ 0x10000
 8004c50:	6013      	str	r3, [r2, #0]
 8004c52:	e00b      	b.n	8004c6c <HAL_RCC_OscConfig+0xcc>
 8004c54:	4b6f      	ldr	r3, [pc, #444]	@ (8004e14 <HAL_RCC_OscConfig+0x274>)
 8004c56:	681b      	ldr	r3, [r3, #0]
 8004c58:	4a6e      	ldr	r2, [pc, #440]	@ (8004e14 <HAL_RCC_OscConfig+0x274>)
 8004c5a:	f423 3380 	bic.w	r3, r3, #65536	@ 0x10000
 8004c5e:	6013      	str	r3, [r2, #0]
 8004c60:	4b6c      	ldr	r3, [pc, #432]	@ (8004e14 <HAL_RCC_OscConfig+0x274>)
 8004c62:	681b      	ldr	r3, [r3, #0]
 8004c64:	4a6b      	ldr	r2, [pc, #428]	@ (8004e14 <HAL_RCC_OscConfig+0x274>)
 8004c66:	f423 2380 	bic.w	r3, r3, #262144	@ 0x40000
 8004c6a:	6013      	str	r3, [r2, #0]

      /* Check the HSE State */
      if ((RCC_OscInitStruct->HSEState) != RCC_HSE_OFF)
 8004c6c:	687b      	ldr	r3, [r7, #4]
 8004c6e:	685b      	ldr	r3, [r3, #4]
 8004c70:	2b00      	cmp	r3, #0
 8004c72:	d013      	beq.n	8004c9c <HAL_RCC_OscConfig+0xfc>
      {
        /* Get Start Tick*/
        tickstart = HAL_GetTick();
 8004c74:	f7fd f8ac 	bl	8001dd0 <HAL_GetTick>
 8004c78:	6138      	str	r0, [r7, #16]

        /* Wait till HSE is ready */
        while (__HAL_RCC_GET_FLAG(RCC_FLAG_HSERDY) == RESET)
 8004c7a:	e008      	b.n	8004c8e <HAL_RCC_OscConfig+0xee>
        {
          if ((HAL_GetTick() - tickstart) > HSE_TIMEOUT_VALUE)
 8004c7c:	f7fd f8a8 	bl	8001dd0 <HAL_GetTick>
 8004c80:	4602      	mov	r2, r0
 8004c82:	693b      	ldr	r3, [r7, #16]
 8004c84:	1ad3      	subs	r3, r2, r3
 8004c86:	2b64      	cmp	r3, #100	@ 0x64
 8004c88:	d901      	bls.n	8004c8e <HAL_RCC_OscConfig+0xee>
          {
            return HAL_TIMEOUT;
 8004c8a:	2303      	movs	r3, #3
 8004c8c:	e21f      	b.n	80050ce <HAL_RCC_OscConfig+0x52e>
        while (__HAL_RCC_GET_FLAG(RCC_FLAG_HSERDY) == RESET)
 8004c8e:	4b61      	ldr	r3, [pc, #388]	@ (8004e14 <HAL_RCC_OscConfig+0x274>)
 8004c90:	681b      	ldr	r3, [r3, #0]
 8004c92:	f403 3300 	and.w	r3, r3, #131072	@ 0x20000
 8004c96:	2b00      	cmp	r3, #0
 8004c98:	d0f0      	beq.n	8004c7c <HAL_RCC_OscConfig+0xdc>
 8004c9a:	e014      	b.n	8004cc6 <HAL_RCC_OscConfig+0x126>
        }
      }
      else
      {
        /* Get Start Tick*/
        tickstart = HAL_GetTick();
 8004c9c:	f7fd f898 	bl	8001dd0 <HAL_GetTick>
 8004ca0:	6138      	str	r0, [r7, #16]

        /* Wait till HSE is bypassed or disabled */
        while (__HAL_RCC_GET_FLAG(RCC_FLAG_HSERDY) != RESET)
 8004ca2:	e008      	b.n	8004cb6 <HAL_RCC_OscConfig+0x116>
        {
          if ((HAL_GetTick() - tickstart) > HSE_TIMEOUT_VALUE)
 8004ca4:	f7fd f894 	bl	8001dd0 <HAL_GetTick>
 8004ca8:	4602      	mov	r2, r0
 8004caa:	693b      	ldr	r3, [r7, #16]
 8004cac:	1ad3      	subs	r3, r2, r3
 8004cae:	2b64      	cmp	r3, #100	@ 0x64
 8004cb0:	d901      	bls.n	8004cb6 <HAL_RCC_OscConfig+0x116>
          {
            return HAL_TIMEOUT;
 8004cb2:	2303      	movs	r3, #3
 8004cb4:	e20b      	b.n	80050ce <HAL_RCC_OscConfig+0x52e>
        while (__HAL_RCC_GET_FLAG(RCC_FLAG_HSERDY) != RESET)
 8004cb6:	4b57      	ldr	r3, [pc, #348]	@ (8004e14 <HAL_RCC_OscConfig+0x274>)
 8004cb8:	681b      	ldr	r3, [r3, #0]
 8004cba:	f403 3300 	and.w	r3, r3, #131072	@ 0x20000
 8004cbe:	2b00      	cmp	r3, #0
 8004cc0:	d1f0      	bne.n	8004ca4 <HAL_RCC_OscConfig+0x104>
 8004cc2:	e000      	b.n	8004cc6 <HAL_RCC_OscConfig+0x126>
      if ((__HAL_RCC_GET_FLAG(RCC_FLAG_HSERDY) != RESET) && (RCC_OscInitStruct->HSEState == RCC_HSE_OFF))
 8004cc4:	bf00      	nop
        }
      }
    }
  }
  /*----------------------------- HSI Configuration --------------------------*/
  if (((RCC_OscInitStruct->OscillatorType) & RCC_OSCILLATORTYPE_HSI) == RCC_OSCILLATORTYPE_HSI)
 8004cc6:	687b      	ldr	r3, [r7, #4]
 8004cc8:	681b      	ldr	r3, [r3, #0]
 8004cca:	f003 0302 	and.w	r3, r3, #2
 8004cce:	2b00      	cmp	r3, #0
 8004cd0:	d06f      	beq.n	8004db2 <HAL_RCC_OscConfig+0x212>
    assert_param(IS_RCC_HSI(RCC_OscInitStruct->HSIState));
    assert_param(IS_RCC_CALIBRATION_VALUE(RCC_OscInitStruct->HSICalibrationValue));

    /* Check if HSI is used as system clock or as PLL source when PLL is selected as system clock */
#if defined(STM32F446xx)
    if ((__HAL_RCC_GET_SYSCLK_SOURCE() == RCC_CFGR_SWS_HSI)
 8004cd2:	4b50      	ldr	r3, [pc, #320]	@ (8004e14 <HAL_RCC_OscConfig+0x274>)
 8004cd4:	689b      	ldr	r3, [r3, #8]
 8004cd6:	f003 030c 	and.w	r3, r3, #12
 8004cda:	2b00      	cmp	r3, #0
 8004cdc:	d017      	beq.n	8004d0e <HAL_RCC_OscConfig+0x16e>
        || \
        ((__HAL_RCC_GET_SYSCLK_SOURCE() == RCC_CFGR_SWS_PLL) && ((RCC->PLLCFGR & RCC_PLLCFGR_PLLSRC) == RCC_PLLCFGR_PLLSRC_HSI)) || \
 8004cde:	4b4d      	ldr	r3, [pc, #308]	@ (8004e14 <HAL_RCC_OscConfig+0x274>)
 8004ce0:	689b      	ldr	r3, [r3, #8]
 8004ce2:	f003 030c 	and.w	r3, r3, #12
        || \
 8004ce6:	2b08      	cmp	r3, #8
 8004ce8:	d105      	bne.n	8004cf6 <HAL_RCC_OscConfig+0x156>
        ((__HAL_RCC_GET_SYSCLK_SOURCE() == RCC_CFGR_SWS_PLL) && ((RCC->PLLCFGR & RCC_PLLCFGR_PLLSRC) == RCC_PLLCFGR_PLLSRC_HSI)) || \
 8004cea:	4b4a      	ldr	r3, [pc, #296]	@ (8004e14 <HAL_RCC_OscConfig+0x274>)
 8004cec:	685b      	ldr	r3, [r3, #4]
 8004cee:	f403 0380 	and.w	r3, r3, #4194304	@ 0x400000
 8004cf2:	2b00      	cmp	r3, #0
 8004cf4:	d00b      	beq.n	8004d0e <HAL_RCC_OscConfig+0x16e>
        ((__HAL_RCC_GET_SYSCLK_SOURCE() == RCC_CFGR_SWS_PLLR) && ((RCC->PLLCFGR & RCC_PLLCFGR_PLLSRC) == RCC_PLLCFGR_PLLSRC_HSI)))
 8004cf6:	4b47      	ldr	r3, [pc, #284]	@ (8004e14 <HAL_RCC_OscConfig+0x274>)
 8004cf8:	689b      	ldr	r3, [r3, #8]
 8004cfa:	f003 030c 	and.w	r3, r3, #12
        ((__HAL_RCC_GET_SYSCLK_SOURCE() == RCC_CFGR_SWS_PLL) && ((RCC->PLLCFGR & RCC_PLLCFGR_PLLSRC) == RCC_PLLCFGR_PLLSRC_HSI)) || \
 8004cfe:	2b0c      	cmp	r3, #12
 8004d00:	d11c      	bne.n	8004d3c <HAL_RCC_OscConfig+0x19c>
        ((__HAL_RCC_GET_SYSCLK_SOURCE() == RCC_CFGR_SWS_PLLR) && ((RCC->PLLCFGR & RCC_PLLCFGR_PLLSRC) == RCC_PLLCFGR_PLLSRC_HSI)))
 8004d02:	4b44      	ldr	r3, [pc, #272]	@ (8004e14 <HAL_RCC_OscConfig+0x274>)
 8004d04:	685b      	ldr	r3, [r3, #4]
 8004d06:	f403 0380 	and.w	r3, r3, #4194304	@ 0x400000
 8004d0a:	2b00      	cmp	r3, #0
 8004d0c:	d116      	bne.n	8004d3c <HAL_RCC_OscConfig+0x19c>
        || \
        ((__HAL_RCC_GET_SYSCLK_SOURCE() == RCC_CFGR_SWS_PLL) && ((RCC->PLLCFGR & RCC_PLLCFGR_PLLSRC) == RCC_PLLCFGR_PLLSRC_HSI)))
#endif /* STM32F446xx */
    {
      /* When HSI is used as system clock it will not disabled */
      if ((__HAL_RCC_GET_FLAG(RCC_FLAG_HSIRDY) != RESET) && (RCC_OscInitStruct->HSIState != RCC_HSI_ON))
 8004d0e:	4b41      	ldr	r3, [pc, #260]	@ (8004e14 <HAL_RCC_OscConfig+0x274>)
 8004d10:	681b      	ldr	r3, [r3, #0]
 8004d12:	f003 0302 	and.w	r3, r3, #2
 8004d16:	2b00      	cmp	r3, #0
 8004d18:	d005      	beq.n	8004d26 <HAL_RCC_OscConfig+0x186>
 8004d1a:	687b      	ldr	r3, [r7, #4]
 8004d1c:	68db      	ldr	r3, [r3, #12]
 8004d1e:	2b01      	cmp	r3, #1
 8004d20:	d001      	beq.n	8004d26 <HAL_RCC_OscConfig+0x186>
      {
        return HAL_ERROR;
 8004d22:	2301      	movs	r3, #1
 8004d24:	e1d3      	b.n	80050ce <HAL_RCC_OscConfig+0x52e>
      }
      /* Otherwise, just the calibration is allowed */
      else
      {
        /* Adjusts the Internal High Speed oscillator (HSI) calibration value.*/
        __HAL_RCC_HSI_CALIBRATIONVALUE_ADJUST(RCC_OscInitStruct->HSICalibrationValue);
 8004d26:	4b3b      	ldr	r3, [pc, #236]	@ (8004e14 <HAL_RCC_OscConfig+0x274>)
 8004d28:	681b      	ldr	r3, [r3, #0]
 8004d2a:	f023 02f8 	bic.w	r2, r3, #248	@ 0xf8
 8004d2e:	687b      	ldr	r3, [r7, #4]
 8004d30:	691b      	ldr	r3, [r3, #16]
 8004d32:	00db      	lsls	r3, r3, #3
 8004d34:	4937      	ldr	r1, [pc, #220]	@ (8004e14 <HAL_RCC_OscConfig+0x274>)
 8004d36:	4313      	orrs	r3, r2
 8004d38:	600b      	str	r3, [r1, #0]
      if ((__HAL_RCC_GET_FLAG(RCC_FLAG_HSIRDY) != RESET) && (RCC_OscInitStruct->HSIState != RCC_HSI_ON))
 8004d3a:	e03a      	b.n	8004db2 <HAL_RCC_OscConfig+0x212>
      }
    }
    else
    {
      /* Check the HSI State */
      if ((RCC_OscInitStruct->HSIState) != RCC_HSI_OFF)
 8004d3c:	687b      	ldr	r3, [r7, #4]
 8004d3e:	68db      	ldr	r3, [r3, #12]
 8004d40:	2b00      	cmp	r3, #0
 8004d42:	d020      	beq.n	8004d86 <HAL_RCC_OscConfig+0x1e6>
      {
        /* Enable the Internal High Speed oscillator (HSI). */
        __HAL_RCC_HSI_ENABLE();
 8004d44:	4b34      	ldr	r3, [pc, #208]	@ (8004e18 <HAL_RCC_OscConfig+0x278>)
 8004d46:	2201      	movs	r2, #1
 8004d48:	601a      	str	r2, [r3, #0]

        /* Get Start Tick*/
        tickstart = HAL_GetTick();
 8004d4a:	f7fd f841 	bl	8001dd0 <HAL_GetTick>
 8004d4e:	6138      	str	r0, [r7, #16]

        /* Wait till HSI is ready */
        while (__HAL_RCC_GET_FLAG(RCC_FLAG_HSIRDY) == RESET)
 8004d50:	e008      	b.n	8004d64 <HAL_RCC_OscConfig+0x1c4>
        {
          if ((HAL_GetTick() - tickstart) > HSI_TIMEOUT_VALUE)
 8004d52:	f7fd f83d 	bl	8001dd0 <HAL_GetTick>
 8004d56:	4602      	mov	r2, r0
 8004d58:	693b      	ldr	r3, [r7, #16]
 8004d5a:	1ad3      	subs	r3, r2, r3
 8004d5c:	2b02      	cmp	r3, #2
 8004d5e:	d901      	bls.n	8004d64 <HAL_RCC_OscConfig+0x1c4>
          {
            return HAL_TIMEOUT;
 8004d60:	2303      	movs	r3, #3
 8004d62:	e1b4      	b.n	80050ce <HAL_RCC_OscConfig+0x52e>
        while (__HAL_RCC_GET_FLAG(RCC_FLAG_HSIRDY) == RESET)
 8004d64:	4b2b      	ldr	r3, [pc, #172]	@ (8004e14 <HAL_RCC_OscConfig+0x274>)
 8004d66:	681b      	ldr	r3, [r3, #0]
 8004d68:	f003 0302 	and.w	r3, r3, #2
 8004d6c:	2b00      	cmp	r3, #0
 8004d6e:	d0f0      	beq.n	8004d52 <HAL_RCC_OscConfig+0x1b2>
          }
        }

        /* Adjusts the Internal High Speed oscillator (HSI) calibration value.*/
        __HAL_RCC_HSI_CALIBRATIONVALUE_ADJUST(RCC_OscInitStruct->HSICalibrationValue);
 8004d70:	4b28      	ldr	r3, [pc, #160]	@ (8004e14 <HAL_RCC_OscConfig+0x274>)
 8004d72:	681b      	ldr	r3, [r3, #0]
 8004d74:	f023 02f8 	bic.w	r2, r3, #248	@ 0xf8
 8004d78:	687b      	ldr	r3, [r7, #4]
 8004d7a:	691b      	ldr	r3, [r3, #16]
 8004d7c:	00db      	lsls	r3, r3, #3
 8004d7e:	4925      	ldr	r1, [pc, #148]	@ (8004e14 <HAL_RCC_OscConfig+0x274>)
 8004d80:	4313      	orrs	r3, r2
 8004d82:	600b      	str	r3, [r1, #0]
 8004d84:	e015      	b.n	8004db2 <HAL_RCC_OscConfig+0x212>
      }
      else
      {
        /* Disable the Internal High Speed oscillator (HSI). */
        __HAL_RCC_HSI_DISABLE();
 8004d86:	4b24      	ldr	r3, [pc, #144]	@ (8004e18 <HAL_RCC_OscConfig+0x278>)
 8004d88:	2200      	movs	r2, #0
 8004d8a:	601a      	str	r2, [r3, #0]

        /* Get Start Tick*/
        tickstart = HAL_GetTick();
 8004d8c:	f7fd f820 	bl	8001dd0 <HAL_GetTick>
 8004d90:	6138      	str	r0, [r7, #16]

        /* Wait till HSI is ready */
        while (__HAL_RCC_GET_FLAG(RCC_FLAG_HSIRDY) != RESET)
 8004d92:	e008      	b.n	8004da6 <HAL_RCC_OscConfig+0x206>
        {
          if ((HAL_GetTick() - tickstart) > HSI_TIMEOUT_VALUE)
 8004d94:	f7fd f81c 	bl	8001dd0 <HAL_GetTick>
 8004d98:	4602      	mov	r2, r0
 8004d9a:	693b      	ldr	r3, [r7, #16]
 8004d9c:	1ad3      	subs	r3, r2, r3
 8004d9e:	2b02      	cmp	r3, #2
 8004da0:	d901      	bls.n	8004da6 <HAL_RCC_OscConfig+0x206>
          {
            return HAL_TIMEOUT;
 8004da2:	2303      	movs	r3, #3
 8004da4:	e193      	b.n	80050ce <HAL_RCC_OscConfig+0x52e>
        while (__HAL_RCC_GET_FLAG(RCC_FLAG_HSIRDY) != RESET)
 8004da6:	4b1b      	ldr	r3, [pc, #108]	@ (8004e14 <HAL_RCC_OscConfig+0x274>)
 8004da8:	681b      	ldr	r3, [r3, #0]
 8004daa:	f003 0302 	and.w	r3, r3, #2
 8004dae:	2b00      	cmp	r3, #0
 8004db0:	d1f0      	bne.n	8004d94 <HAL_RCC_OscConfig+0x1f4>
        }
      }
    }
  }
  /*------------------------------ LSI Configuration -------------------------*/
  if (((RCC_OscInitStruct->OscillatorType) & RCC_OSCILLATORTYPE_LSI) == RCC_OSCILLATORTYPE_LSI)
 8004db2:	687b      	ldr	r3, [r7, #4]
 8004db4:	681b      	ldr	r3, [r3, #0]
 8004db6:	f003 0308 	and.w	r3, r3, #8
 8004dba:	2b00      	cmp	r3, #0
 8004dbc:	d036      	beq.n	8004e2c <HAL_RCC_OscConfig+0x28c>
  {
    /* Check the parameters */
    assert_param(IS_RCC_LSI(RCC_OscInitStruct->LSIState));

    /* Check the LSI State */
    if ((RCC_OscInitStruct->LSIState) != RCC_LSI_OFF)
 8004dbe:	687b      	ldr	r3, [r7, #4]
 8004dc0:	695b      	ldr	r3, [r3, #20]
 8004dc2:	2b00      	cmp	r3, #0
 8004dc4:	d016      	beq.n	8004df4 <HAL_RCC_OscConfig+0x254>
    {
      /* Enable the Internal Low Speed oscillator (LSI). */
      __HAL_RCC_LSI_ENABLE();
 8004dc6:	4b15      	ldr	r3, [pc, #84]	@ (8004e1c <HAL_RCC_OscConfig+0x27c>)
 8004dc8:	2201      	movs	r2, #1
 8004dca:	601a      	str	r2, [r3, #0]

      /* Get Start Tick*/
      tickstart = HAL_GetTick();
 8004dcc:	f7fd f800 	bl	8001dd0 <HAL_GetTick>
 8004dd0:	6138      	str	r0, [r7, #16]

      /* Wait till LSI is ready */
      while (__HAL_RCC_GET_FLAG(RCC_FLAG_LSIRDY) == RESET)
 8004dd2:	e008      	b.n	8004de6 <HAL_RCC_OscConfig+0x246>
      {
        if ((HAL_GetTick() - tickstart) > LSI_TIMEOUT_VALUE)
 8004dd4:	f7fc fffc 	bl	8001dd0 <HAL_GetTick>
 8004dd8:	4602      	mov	r2, r0
 8004dda:	693b      	ldr	r3, [r7, #16]
 8004ddc:	1ad3      	subs	r3, r2, r3
 8004dde:	2b02      	cmp	r3, #2
 8004de0:	d901      	bls.n	8004de6 <HAL_RCC_OscConfig+0x246>
        {
          return HAL_TIMEOUT;
 8004de2:	2303      	movs	r3, #3
 8004de4:	e173      	b.n	80050ce <HAL_RCC_OscConfig+0x52e>
      while (__HAL_RCC_GET_FLAG(RCC_FLAG_LSIRDY) == RESET)
 8004de6:	4b0b      	ldr	r3, [pc, #44]	@ (8004e14 <HAL_RCC_OscConfig+0x274>)
 8004de8:	6f5b      	ldr	r3, [r3, #116]	@ 0x74
 8004dea:	f003 0302 	and.w	r3, r3, #2
 8004dee:	2b00      	cmp	r3, #0
 8004df0:	d0f0      	beq.n	8004dd4 <HAL_RCC_OscConfig+0x234>
 8004df2:	e01b      	b.n	8004e2c <HAL_RCC_OscConfig+0x28c>
      }
    }
    else
    {
      /* Disable the Internal Low Speed oscillator (LSI). */
      __HAL_RCC_LSI_DISABLE();
 8004df4:	4b09      	ldr	r3, [pc, #36]	@ (8004e1c <HAL_RCC_OscConfig+0x27c>)
 8004df6:	2200      	movs	r2, #0
 8004df8:	601a      	str	r2, [r3, #0]

      /* Get Start Tick*/
      tickstart = HAL_GetTick();
 8004dfa:	f7fc ffe9 	bl	8001dd0 <HAL_GetTick>
 8004dfe:	6138      	str	r0, [r7, #16]

      /* Wait till LSI is ready */
      while (__HAL_RCC_GET_FLAG(RCC_FLAG_LSIRDY) != RESET)
 8004e00:	e00e      	b.n	8004e20 <HAL_RCC_OscConfig+0x280>
      {
        if ((HAL_GetTick() - tickstart) > LSI_TIMEOUT_VALUE)
 8004e02:	f7fc ffe5 	bl	8001dd0 <HAL_GetTick>
 8004e06:	4602      	mov	r2, r0
 8004e08:	693b      	ldr	r3, [r7, #16]
 8004e0a:	1ad3      	subs	r3, r2, r3
 8004e0c:	2b02      	cmp	r3, #2
 8004e0e:	d907      	bls.n	8004e20 <HAL_RCC_OscConfig+0x280>
        {
          return HAL_TIMEOUT;
 8004e10:	2303      	movs	r3, #3
 8004e12:	e15c      	b.n	80050ce <HAL_RCC_OscConfig+0x52e>
 8004e14:	40023800 	.word	0x40023800
 8004e18:	42470000 	.word	0x42470000
 8004e1c:	42470e80 	.word	0x42470e80
      while (__HAL_RCC_GET_FLAG(RCC_FLAG_LSIRDY) != RESET)
 8004e20:	4b8a      	ldr	r3, [pc, #552]	@ (800504c <HAL_RCC_OscConfig+0x4ac>)
 8004e22:	6f5b      	ldr	r3, [r3, #116]	@ 0x74
 8004e24:	f003 0302 	and.w	r3, r3, #2
 8004e28:	2b00      	cmp	r3, #0
 8004e2a:	d1ea      	bne.n	8004e02 <HAL_RCC_OscConfig+0x262>
        }
      }
    }
  }
  /*------------------------------ LSE Configuration -------------------------*/
  if (((RCC_OscInitStruct->OscillatorType) & RCC_OSCILLATORTYPE_LSE) == RCC_OSCILLATORTYPE_LSE)
 8004e2c:	687b      	ldr	r3, [r7, #4]
 8004e2e:	681b      	ldr	r3, [r3, #0]
 8004e30:	f003 0304 	and.w	r3, r3, #4
 8004e34:	2b00      	cmp	r3, #0
 8004e36:	f000 8097 	beq.w	8004f68 <HAL_RCC_OscConfig+0x3c8>
  {
    FlagStatus       pwrclkchanged = RESET;
 8004e3a:	2300      	movs	r3, #0
 8004e3c:	75fb      	strb	r3, [r7, #23]
    /* Check the parameters */
    assert_param(IS_RCC_LSE(RCC_OscInitStruct->LSEState));

    /* Update LSE configuration in Backup Domain control register    */
    /* Requires to enable write access to Backup Domain of necessary */
    if (__HAL_RCC_PWR_IS_CLK_DISABLED())
 8004e3e:	4b83      	ldr	r3, [pc, #524]	@ (800504c <HAL_RCC_OscConfig+0x4ac>)
 8004e40:	6c1b      	ldr	r3, [r3, #64]	@ 0x40
 8004e42:	f003 5380 	and.w	r3, r3, #268435456	@ 0x10000000
 8004e46:	2b00      	cmp	r3, #0
 8004e48:	d10f      	bne.n	8004e6a <HAL_RCC_OscConfig+0x2ca>
    {
      __HAL_RCC_PWR_CLK_ENABLE();
 8004e4a:	2300      	movs	r3, #0
 8004e4c:	60bb      	str	r3, [r7, #8]
 8004e4e:	4b7f      	ldr	r3, [pc, #508]	@ (800504c <HAL_RCC_OscConfig+0x4ac>)
 8004e50:	6c1b      	ldr	r3, [r3, #64]	@ 0x40
 8004e52:	4a7e      	ldr	r2, [pc, #504]	@ (800504c <HAL_RCC_OscConfig+0x4ac>)
 8004e54:	f043 5380 	orr.w	r3, r3, #268435456	@ 0x10000000
 8004e58:	6413      	str	r3, [r2, #64]	@ 0x40
 8004e5a:	4b7c      	ldr	r3, [pc, #496]	@ (800504c <HAL_RCC_OscConfig+0x4ac>)
 8004e5c:	6c1b      	ldr	r3, [r3, #64]	@ 0x40
 8004e5e:	f003 5380 	and.w	r3, r3, #268435456	@ 0x10000000
 8004e62:	60bb      	str	r3, [r7, #8]
 8004e64:	68bb      	ldr	r3, [r7, #8]
      pwrclkchanged = SET;
 8004e66:	2301      	movs	r3, #1
 8004e68:	75fb      	strb	r3, [r7, #23]
    }

    if (HAL_IS_BIT_CLR(PWR->CR, PWR_CR_DBP))
 8004e6a:	4b79      	ldr	r3, [pc, #484]	@ (8005050 <HAL_RCC_OscConfig+0x4b0>)
 8004e6c:	681b      	ldr	r3, [r3, #0]
 8004e6e:	f403 7380 	and.w	r3, r3, #256	@ 0x100
 8004e72:	2b00      	cmp	r3, #0
 8004e74:	d118      	bne.n	8004ea8 <HAL_RCC_OscConfig+0x308>
    {
      /* Enable write access to Backup domain */
      SET_BIT(PWR->CR, PWR_CR_DBP);
 8004e76:	4b76      	ldr	r3, [pc, #472]	@ (8005050 <HAL_RCC_OscConfig+0x4b0>)
 8004e78:	681b      	ldr	r3, [r3, #0]
 8004e7a:	4a75      	ldr	r2, [pc, #468]	@ (8005050 <HAL_RCC_OscConfig+0x4b0>)
 8004e7c:	f443 7380 	orr.w	r3, r3, #256	@ 0x100
 8004e80:	6013      	str	r3, [r2, #0]

      /* Wait for Backup domain Write protection disable */
      tickstart = HAL_GetTick();
 8004e82:	f7fc ffa5 	bl	8001dd0 <HAL_GetTick>
 8004e86:	6138      	str	r0, [r7, #16]

      while (HAL_IS_BIT_CLR(PWR->CR, PWR_CR_DBP))
 8004e88:	e008      	b.n	8004e9c <HAL_RCC_OscConfig+0x2fc>
      {
        if ((HAL_GetTick() - tickstart) > RCC_DBP_TIMEOUT_VALUE)
 8004e8a:	f7fc ffa1 	bl	8001dd0 <HAL_GetTick>
 8004e8e:	4602      	mov	r2, r0
 8004e90:	693b      	ldr	r3, [r7, #16]
 8004e92:	1ad3      	subs	r3, r2, r3
 8004e94:	2b02      	cmp	r3, #2
 8004e96:	d901      	bls.n	8004e9c <HAL_RCC_OscConfig+0x2fc>
        {
          return HAL_TIMEOUT;
 8004e98:	2303      	movs	r3, #3
 8004e9a:	e118      	b.n	80050ce <HAL_RCC_OscConfig+0x52e>
      while (HAL_IS_BIT_CLR(PWR->CR, PWR_CR_DBP))
 8004e9c:	4b6c      	ldr	r3, [pc, #432]	@ (8005050 <HAL_RCC_OscConfig+0x4b0>)
 8004e9e:	681b      	ldr	r3, [r3, #0]
 8004ea0:	f403 7380 	and.w	r3, r3, #256	@ 0x100
 8004ea4:	2b00      	cmp	r3, #0
 8004ea6:	d0f0      	beq.n	8004e8a <HAL_RCC_OscConfig+0x2ea>
        }
      }
    }

    /* Set the new LSE configuration -----------------------------------------*/
    __HAL_RCC_LSE_CONFIG(RCC_OscInitStruct->LSEState);
 8004ea8:	687b      	ldr	r3, [r7, #4]
 8004eaa:	689b      	ldr	r3, [r3, #8]
 8004eac:	2b01      	cmp	r3, #1
 8004eae:	d106      	bne.n	8004ebe <HAL_RCC_OscConfig+0x31e>
 8004eb0:	4b66      	ldr	r3, [pc, #408]	@ (800504c <HAL_RCC_OscConfig+0x4ac>)
 8004eb2:	6f1b      	ldr	r3, [r3, #112]	@ 0x70
 8004eb4:	4a65      	ldr	r2, [pc, #404]	@ (800504c <HAL_RCC_OscConfig+0x4ac>)
 8004eb6:	f043 0301 	orr.w	r3, r3, #1
 8004eba:	6713      	str	r3, [r2, #112]	@ 0x70
 8004ebc:	e01c      	b.n	8004ef8 <HAL_RCC_OscConfig+0x358>
 8004ebe:	687b      	ldr	r3, [r7, #4]
 8004ec0:	689b      	ldr	r3, [r3, #8]
 8004ec2:	2b05      	cmp	r3, #5
 8004ec4:	d10c      	bne.n	8004ee0 <HAL_RCC_OscConfig+0x340>
 8004ec6:	4b61      	ldr	r3, [pc, #388]	@ (800504c <HAL_RCC_OscConfig+0x4ac>)
 8004ec8:	6f1b      	ldr	r3, [r3, #112]	@ 0x70
 8004eca:	4a60      	ldr	r2, [pc, #384]	@ (800504c <HAL_RCC_OscConfig+0x4ac>)
 8004ecc:	f043 0304 	orr.w	r3, r3, #4
 8004ed0:	6713      	str	r3, [r2, #112]	@ 0x70
 8004ed2:	4b5e      	ldr	r3, [pc, #376]	@ (800504c <HAL_RCC_OscConfig+0x4ac>)
 8004ed4:	6f1b      	ldr	r3, [r3, #112]	@ 0x70
 8004ed6:	4a5d      	ldr	r2, [pc, #372]	@ (800504c <HAL_RCC_OscConfig+0x4ac>)
 8004ed8:	f043 0301 	orr.w	r3, r3, #1
 8004edc:	6713      	str	r3, [r2, #112]	@ 0x70
 8004ede:	e00b      	b.n	8004ef8 <HAL_RCC_OscConfig+0x358>
 8004ee0:	4b5a      	ldr	r3, [pc, #360]	@ (800504c <HAL_RCC_OscConfig+0x4ac>)
 8004ee2:	6f1b      	ldr	r3, [r3, #112]	@ 0x70
 8004ee4:	4a59      	ldr	r2, [pc, #356]	@ (800504c <HAL_RCC_OscConfig+0x4ac>)
 8004ee6:	f023 0301 	bic.w	r3, r3, #1
 8004eea:	6713      	str	r3, [r2, #112]	@ 0x70
 8004eec:	4b57      	ldr	r3, [pc, #348]	@ (800504c <HAL_RCC_OscConfig+0x4ac>)
 8004eee:	6f1b      	ldr	r3, [r3, #112]	@ 0x70
 8004ef0:	4a56      	ldr	r2, [pc, #344]	@ (800504c <HAL_RCC_OscConfig+0x4ac>)
 8004ef2:	f023 0304 	bic.w	r3, r3, #4
 8004ef6:	6713      	str	r3, [r2, #112]	@ 0x70
    /* Check the LSE State */
    if ((RCC_OscInitStruct->LSEState) != RCC_LSE_OFF)
 8004ef8:	687b      	ldr	r3, [r7, #4]
 8004efa:	689b      	ldr	r3, [r3, #8]
 8004efc:	2b00      	cmp	r3, #0
 8004efe:	d015      	beq.n	8004f2c <HAL_RCC_OscConfig+0x38c>
    {
      /* Get Start Tick*/
      tickstart = HAL_GetTick();
 8004f00:	f7fc ff66 	bl	8001dd0 <HAL_GetTick>
 8004f04:	6138      	str	r0, [r7, #16]

      /* Wait till LSE is ready */
      while (__HAL_RCC_GET_FLAG(RCC_FLAG_LSERDY) == RESET)
 8004f06:	e00a      	b.n	8004f1e <HAL_RCC_OscConfig+0x37e>
      {
        if ((HAL_GetTick() - tickstart) > RCC_LSE_TIMEOUT_VALUE)
 8004f08:	f7fc ff62 	bl	8001dd0 <HAL_GetTick>
 8004f0c:	4602      	mov	r2, r0
 8004f0e:	693b      	ldr	r3, [r7, #16]
 8004f10:	1ad3      	subs	r3, r2, r3
 8004f12:	f241 3288 	movw	r2, #5000	@ 0x1388
 8004f16:	4293      	cmp	r3, r2
 8004f18:	d901      	bls.n	8004f1e <HAL_RCC_OscConfig+0x37e>
        {
          return HAL_TIMEOUT;
 8004f1a:	2303      	movs	r3, #3
 8004f1c:	e0d7      	b.n	80050ce <HAL_RCC_OscConfig+0x52e>
      while (__HAL_RCC_GET_FLAG(RCC_FLAG_LSERDY) == RESET)
 8004f1e:	4b4b      	ldr	r3, [pc, #300]	@ (800504c <HAL_RCC_OscConfig+0x4ac>)
 8004f20:	6f1b      	ldr	r3, [r3, #112]	@ 0x70
 8004f22:	f003 0302 	and.w	r3, r3, #2
 8004f26:	2b00      	cmp	r3, #0
 8004f28:	d0ee      	beq.n	8004f08 <HAL_RCC_OscConfig+0x368>
 8004f2a:	e014      	b.n	8004f56 <HAL_RCC_OscConfig+0x3b6>
      }
    }
    else
    {
      /* Get Start Tick*/
      tickstart = HAL_GetTick();
 8004f2c:	f7fc ff50 	bl	8001dd0 <HAL_GetTick>
 8004f30:	6138      	str	r0, [r7, #16]

      /* Wait till LSE is ready */
      while (__HAL_RCC_GET_FLAG(RCC_FLAG_LSERDY) != RESET)
 8004f32:	e00a      	b.n	8004f4a <HAL_RCC_OscConfig+0x3aa>
      {
        if ((HAL_GetTick() - tickstart) > RCC_LSE_TIMEOUT_VALUE)
 8004f34:	f7fc ff4c 	bl	8001dd0 <HAL_GetTick>
 8004f38:	4602      	mov	r2, r0
 8004f3a:	693b      	ldr	r3, [r7, #16]
 8004f3c:	1ad3      	subs	r3, r2, r3
 8004f3e:	f241 3288 	movw	r2, #5000	@ 0x1388
 8004f42:	4293      	cmp	r3, r2
 8004f44:	d901      	bls.n	8004f4a <HAL_RCC_OscConfig+0x3aa>
        {
          return HAL_TIMEOUT;
 8004f46:	2303      	movs	r3, #3
 8004f48:	e0c1      	b.n	80050ce <HAL_RCC_OscConfig+0x52e>
      while (__HAL_RCC_GET_FLAG(RCC_FLAG_LSERDY) != RESET)
 8004f4a:	4b40      	ldr	r3, [pc, #256]	@ (800504c <HAL_RCC_OscConfig+0x4ac>)
 8004f4c:	6f1b      	ldr	r3, [r3, #112]	@ 0x70
 8004f4e:	f003 0302 	and.w	r3, r3, #2
 8004f52:	2b00      	cmp	r3, #0
 8004f54:	d1ee      	bne.n	8004f34 <HAL_RCC_OscConfig+0x394>
        }
      }
    }

    /* Restore clock configuration if changed */
    if (pwrclkchanged == SET)
 8004f56:	7dfb      	ldrb	r3, [r7, #23]
 8004f58:	2b01      	cmp	r3, #1
 8004f5a:	d105      	bne.n	8004f68 <HAL_RCC_OscConfig+0x3c8>
    {
      __HAL_RCC_PWR_CLK_DISABLE();
 8004f5c:	4b3b      	ldr	r3, [pc, #236]	@ (800504c <HAL_RCC_OscConfig+0x4ac>)
 8004f5e:	6c1b      	ldr	r3, [r3, #64]	@ 0x40
 8004f60:	4a3a      	ldr	r2, [pc, #232]	@ (800504c <HAL_RCC_OscConfig+0x4ac>)
 8004f62:	f023 5380 	bic.w	r3, r3, #268435456	@ 0x10000000
 8004f66:	6413      	str	r3, [r2, #64]	@ 0x40
    }
  }
  /*-------------------------------- PLL Configuration -----------------------*/
  /* Check the parameters */
  assert_param(IS_RCC_PLL(RCC_OscInitStruct->PLL.PLLState));
  if ((RCC_OscInitStruct->PLL.PLLState) != RCC_PLL_NONE)
 8004f68:	687b      	ldr	r3, [r7, #4]
 8004f6a:	699b      	ldr	r3, [r3, #24]
 8004f6c:	2b00      	cmp	r3, #0
 8004f6e:	f000 80ad 	beq.w	80050cc <HAL_RCC_OscConfig+0x52c>
  {
    /* Check if the PLL is used as system clock or not */
    if (__HAL_RCC_GET_SYSCLK_SOURCE() != RCC_CFGR_SWS_PLL)
 8004f72:	4b36      	ldr	r3, [pc, #216]	@ (800504c <HAL_RCC_OscConfig+0x4ac>)
 8004f74:	689b      	ldr	r3, [r3, #8]
 8004f76:	f003 030c 	and.w	r3, r3, #12
 8004f7a:	2b08      	cmp	r3, #8
 8004f7c:	d060      	beq.n	8005040 <HAL_RCC_OscConfig+0x4a0>
    {
      if ((RCC_OscInitStruct->PLL.PLLState) == RCC_PLL_ON)
 8004f7e:	687b      	ldr	r3, [r7, #4]
 8004f80:	699b      	ldr	r3, [r3, #24]
 8004f82:	2b02      	cmp	r3, #2
 8004f84:	d145      	bne.n	8005012 <HAL_RCC_OscConfig+0x472>
        assert_param(IS_RCC_PLLP_VALUE(RCC_OscInitStruct->PLL.PLLP));
        assert_param(IS_RCC_PLLQ_VALUE(RCC_OscInitStruct->PLL.PLLQ));
        assert_param(IS_RCC_PLLR_VALUE(RCC_OscInitStruct->PLL.PLLR));

        /* Disable the main PLL. */
        __HAL_RCC_PLL_DISABLE();
 8004f86:	4b33      	ldr	r3, [pc, #204]	@ (8005054 <HAL_RCC_OscConfig+0x4b4>)
 8004f88:	2200      	movs	r2, #0
 8004f8a:	601a      	str	r2, [r3, #0]

        /* Get Start Tick*/
        tickstart = HAL_GetTick();
 8004f8c:	f7fc ff20 	bl	8001dd0 <HAL_GetTick>
 8004f90:	6138      	str	r0, [r7, #16]

        /* Wait till PLL is ready */
        while (__HAL_RCC_GET_FLAG(RCC_FLAG_PLLRDY) != RESET)
 8004f92:	e008      	b.n	8004fa6 <HAL_RCC_OscConfig+0x406>
        {
          if ((HAL_GetTick() - tickstart) > PLL_TIMEOUT_VALUE)
 8004f94:	f7fc ff1c 	bl	8001dd0 <HAL_GetTick>
 8004f98:	4602      	mov	r2, r0
 8004f9a:	693b      	ldr	r3, [r7, #16]
 8004f9c:	1ad3      	subs	r3, r2, r3
 8004f9e:	2b02      	cmp	r3, #2
 8004fa0:	d901      	bls.n	8004fa6 <HAL_RCC_OscConfig+0x406>
          {
            return HAL_TIMEOUT;
 8004fa2:	2303      	movs	r3, #3
 8004fa4:	e093      	b.n	80050ce <HAL_RCC_OscConfig+0x52e>
        while (__HAL_RCC_GET_FLAG(RCC_FLAG_PLLRDY) != RESET)
 8004fa6:	4b29      	ldr	r3, [pc, #164]	@ (800504c <HAL_RCC_OscConfig+0x4ac>)
 8004fa8:	681b      	ldr	r3, [r3, #0]
 8004faa:	f003 7300 	and.w	r3, r3, #33554432	@ 0x2000000
 8004fae:	2b00      	cmp	r3, #0
 8004fb0:	d1f0      	bne.n	8004f94 <HAL_RCC_OscConfig+0x3f4>
          }
        }

        /* Configure the main PLL clock source, multiplication and division factors. */
        WRITE_REG(RCC->PLLCFGR, (RCC_OscInitStruct->PLL.PLLSource                                            | \
 8004fb2:	687b      	ldr	r3, [r7, #4]
 8004fb4:	69da      	ldr	r2, [r3, #28]
 8004fb6:	687b      	ldr	r3, [r7, #4]
 8004fb8:	6a1b      	ldr	r3, [r3, #32]
 8004fba:	431a      	orrs	r2, r3
 8004fbc:	687b      	ldr	r3, [r7, #4]
 8004fbe:	6a5b      	ldr	r3, [r3, #36]	@ 0x24
 8004fc0:	019b      	lsls	r3, r3, #6
 8004fc2:	431a      	orrs	r2, r3
 8004fc4:	687b      	ldr	r3, [r7, #4]
 8004fc6:	6a9b      	ldr	r3, [r3, #40]	@ 0x28
 8004fc8:	085b      	lsrs	r3, r3, #1
 8004fca:	3b01      	subs	r3, #1
 8004fcc:	041b      	lsls	r3, r3, #16
 8004fce:	431a      	orrs	r2, r3
 8004fd0:	687b      	ldr	r3, [r7, #4]
 8004fd2:	6adb      	ldr	r3, [r3, #44]	@ 0x2c
 8004fd4:	061b      	lsls	r3, r3, #24
 8004fd6:	431a      	orrs	r2, r3
 8004fd8:	687b      	ldr	r3, [r7, #4]
 8004fda:	6b1b      	ldr	r3, [r3, #48]	@ 0x30
 8004fdc:	071b      	lsls	r3, r3, #28
 8004fde:	491b      	ldr	r1, [pc, #108]	@ (800504c <HAL_RCC_OscConfig+0x4ac>)
 8004fe0:	4313      	orrs	r3, r2
 8004fe2:	604b      	str	r3, [r1, #4]
                                 (RCC_OscInitStruct->PLL.PLLN << RCC_PLLCFGR_PLLN_Pos)                       | \
                                 (((RCC_OscInitStruct->PLL.PLLP >> 1U) - 1U) << RCC_PLLCFGR_PLLP_Pos)        | \
                                 (RCC_OscInitStruct->PLL.PLLQ << RCC_PLLCFGR_PLLQ_Pos)                       | \
                                 (RCC_OscInitStruct->PLL.PLLR << RCC_PLLCFGR_PLLR_Pos)));
        /* Enable the main PLL. */
        __HAL_RCC_PLL_ENABLE();
 8004fe4:	4b1b      	ldr	r3, [pc, #108]	@ (8005054 <HAL_RCC_OscConfig+0x4b4>)
 8004fe6:	2201      	movs	r2, #1
 8004fe8:	601a      	str	r2, [r3, #0]

        /* Get Start Tick*/
        tickstart = HAL_GetTick();
 8004fea:	f7fc fef1 	bl	8001dd0 <HAL_GetTick>
 8004fee:	6138      	str	r0, [r7, #16]

        /* Wait till PLL is ready */
        while (__HAL_RCC_GET_FLAG(RCC_FLAG_PLLRDY) == RESET)
 8004ff0:	e008      	b.n	8005004 <HAL_RCC_OscConfig+0x464>
        {
          if ((HAL_GetTick() - tickstart) > PLL_TIMEOUT_VALUE)
 8004ff2:	f7fc feed 	bl	8001dd0 <HAL_GetTick>
 8004ff6:	4602      	mov	r2, r0
 8004ff8:	693b      	ldr	r3, [r7, #16]
 8004ffa:	1ad3      	subs	r3, r2, r3
 8004ffc:	2b02      	cmp	r3, #2
 8004ffe:	d901      	bls.n	8005004 <HAL_RCC_OscConfig+0x464>
          {
            return HAL_TIMEOUT;
 8005000:	2303      	movs	r3, #3
 8005002:	e064      	b.n	80050ce <HAL_RCC_OscConfig+0x52e>
        while (__HAL_RCC_GET_FLAG(RCC_FLAG_PLLRDY) == RESET)
 8005004:	4b11      	ldr	r3, [pc, #68]	@ (800504c <HAL_RCC_OscConfig+0x4ac>)
 8005006:	681b      	ldr	r3, [r3, #0]
 8005008:	f003 7300 	and.w	r3, r3, #33554432	@ 0x2000000
 800500c:	2b00      	cmp	r3, #0
 800500e:	d0f0      	beq.n	8004ff2 <HAL_RCC_OscConfig+0x452>
 8005010:	e05c      	b.n	80050cc <HAL_RCC_OscConfig+0x52c>
        }
      }
      else
      {
        /* Disable the main PLL. */
        __HAL_RCC_PLL_DISABLE();
 8005012:	4b10      	ldr	r3, [pc, #64]	@ (8005054 <HAL_RCC_OscConfig+0x4b4>)
 8005014:	2200      	movs	r2, #0
 8005016:	601a      	str	r2, [r3, #0]

        /* Get Start Tick*/
        tickstart = HAL_GetTick();
 8005018:	f7fc feda 	bl	8001dd0 <HAL_GetTick>
 800501c:	6138      	str	r0, [r7, #16]

        /* Wait till PLL is ready */
        while (__HAL_RCC_GET_FLAG(RCC_FLAG_PLLRDY) != RESET)
 800501e:	e008      	b.n	8005032 <HAL_RCC_OscConfig+0x492>
        {
          if ((HAL_GetTick() - tickstart) > PLL_TIMEOUT_VALUE)
 8005020:	f7fc fed6 	bl	8001dd0 <HAL_GetTick>
 8005024:	4602      	mov	r2, r0
 8005026:	693b      	ldr	r3, [r7, #16]
 8005028:	1ad3      	subs	r3, r2, r3
 800502a:	2b02      	cmp	r3, #2
 800502c:	d901      	bls.n	8005032 <HAL_RCC_OscConfig+0x492>
          {
            return HAL_TIMEOUT;
 800502e:	2303      	movs	r3, #3
 8005030:	e04d      	b.n	80050ce <HAL_RCC_OscConfig+0x52e>
        while (__HAL_RCC_GET_FLAG(RCC_FLAG_PLLRDY) != RESET)
 8005032:	4b06      	ldr	r3, [pc, #24]	@ (800504c <HAL_RCC_OscConfig+0x4ac>)
 8005034:	681b      	ldr	r3, [r3, #0]
 8005036:	f003 7300 	and.w	r3, r3, #33554432	@ 0x2000000
 800503a:	2b00      	cmp	r3, #0
 800503c:	d1f0      	bne.n	8005020 <HAL_RCC_OscConfig+0x480>
 800503e:	e045      	b.n	80050cc <HAL_RCC_OscConfig+0x52c>
      }
    }
    else
    {
      /* Check if there is a request to disable the PLL used as System clock source */
      if ((RCC_OscInitStruct->PLL.PLLState) == RCC_PLL_OFF)
 8005040:	687b      	ldr	r3, [r7, #4]
 8005042:	699b      	ldr	r3, [r3, #24]
 8005044:	2b01      	cmp	r3, #1
 8005046:	d107      	bne.n	8005058 <HAL_RCC_OscConfig+0x4b8>
      {
        return HAL_ERROR;
 8005048:	2301      	movs	r3, #1
 800504a:	e040      	b.n	80050ce <HAL_RCC_OscConfig+0x52e>
 800504c:	40023800 	.word	0x40023800
 8005050:	40007000 	.word	0x40007000
 8005054:	42470060 	.word	0x42470060
      }
      else
      {
        /* Do not return HAL_ERROR if request repeats the current configuration */
        pll_config = RCC->PLLCFGR;
 8005058:	4b1f      	ldr	r3, [pc, #124]	@ (80050d8 <HAL_RCC_OscConfig+0x538>)
 800505a:	685b      	ldr	r3, [r3, #4]
 800505c:	60fb      	str	r3, [r7, #12]
#if defined (RCC_PLLCFGR_PLLR)
        if (((RCC_OscInitStruct->PLL.PLLState) == RCC_PLL_OFF) ||
 800505e:	687b      	ldr	r3, [r7, #4]
 8005060:	699b      	ldr	r3, [r3, #24]
 8005062:	2b01      	cmp	r3, #1
 8005064:	d030      	beq.n	80050c8 <HAL_RCC_OscConfig+0x528>
            (READ_BIT(pll_config, RCC_PLLCFGR_PLLSRC) != RCC_OscInitStruct->PLL.PLLSource) ||
 8005066:	68fb      	ldr	r3, [r7, #12]
 8005068:	f403 0280 	and.w	r2, r3, #4194304	@ 0x400000
 800506c:	687b      	ldr	r3, [r7, #4]
 800506e:	69db      	ldr	r3, [r3, #28]
        if (((RCC_OscInitStruct->PLL.PLLState) == RCC_PLL_OFF) ||
 8005070:	429a      	cmp	r2, r3
 8005072:	d129      	bne.n	80050c8 <HAL_RCC_OscConfig+0x528>
            (READ_BIT(pll_config, RCC_PLLCFGR_PLLM) != (RCC_OscInitStruct->PLL.PLLM) << RCC_PLLCFGR_PLLM_Pos) ||
 8005074:	68fb      	ldr	r3, [r7, #12]
 8005076:	f003 023f 	and.w	r2, r3, #63	@ 0x3f
 800507a:	687b      	ldr	r3, [r7, #4]
 800507c:	6a1b      	ldr	r3, [r3, #32]
            (READ_BIT(pll_config, RCC_PLLCFGR_PLLSRC) != RCC_OscInitStruct->PLL.PLLSource) ||
 800507e:	429a      	cmp	r2, r3
 8005080:	d122      	bne.n	80050c8 <HAL_RCC_OscConfig+0x528>
            (READ_BIT(pll_config, RCC_PLLCFGR_PLLN) != (RCC_OscInitStruct->PLL.PLLN) << RCC_PLLCFGR_PLLN_Pos) ||
 8005082:	68fa      	ldr	r2, [r7, #12]
 8005084:	f647 73c0 	movw	r3, #32704	@ 0x7fc0
 8005088:	4013      	ands	r3, r2
 800508a:	687a      	ldr	r2, [r7, #4]
 800508c:	6a52      	ldr	r2, [r2, #36]	@ 0x24
 800508e:	0192      	lsls	r2, r2, #6
            (READ_BIT(pll_config, RCC_PLLCFGR_PLLM) != (RCC_OscInitStruct->PLL.PLLM) << RCC_PLLCFGR_PLLM_Pos) ||
 8005090:	4293      	cmp	r3, r2
 8005092:	d119      	bne.n	80050c8 <HAL_RCC_OscConfig+0x528>
            (READ_BIT(pll_config, RCC_PLLCFGR_PLLP) != (((RCC_OscInitStruct->PLL.PLLP >> 1U) - 1U)) << RCC_PLLCFGR_PLLP_Pos) ||
 8005094:	68fb      	ldr	r3, [r7, #12]
 8005096:	f403 3240 	and.w	r2, r3, #196608	@ 0x30000
 800509a:	687b      	ldr	r3, [r7, #4]
 800509c:	6a9b      	ldr	r3, [r3, #40]	@ 0x28
 800509e:	085b      	lsrs	r3, r3, #1
 80050a0:	3b01      	subs	r3, #1
 80050a2:	041b      	lsls	r3, r3, #16
            (READ_BIT(pll_config, RCC_PLLCFGR_PLLN) != (RCC_OscInitStruct->PLL.PLLN) << RCC_PLLCFGR_PLLN_Pos) ||
 80050a4:	429a      	cmp	r2, r3
 80050a6:	d10f      	bne.n	80050c8 <HAL_RCC_OscConfig+0x528>
            (READ_BIT(pll_config, RCC_PLLCFGR_PLLQ) != (RCC_OscInitStruct->PLL.PLLQ << RCC_PLLCFGR_PLLQ_Pos)) ||
 80050a8:	68fb      	ldr	r3, [r7, #12]
 80050aa:	f003 6270 	and.w	r2, r3, #251658240	@ 0xf000000
 80050ae:	687b      	ldr	r3, [r7, #4]
 80050b0:	6adb      	ldr	r3, [r3, #44]	@ 0x2c
 80050b2:	061b      	lsls	r3, r3, #24
            (READ_BIT(pll_config, RCC_PLLCFGR_PLLP) != (((RCC_OscInitStruct->PLL.PLLP >> 1U) - 1U)) << RCC_PLLCFGR_PLLP_Pos) ||
 80050b4:	429a      	cmp	r2, r3
 80050b6:	d107      	bne.n	80050c8 <HAL_RCC_OscConfig+0x528>
            (READ_BIT(pll_config, RCC_PLLCFGR_PLLR) != (RCC_OscInitStruct->PLL.PLLR << RCC_PLLCFGR_PLLR_Pos)))
 80050b8:	68fb      	ldr	r3, [r7, #12]
 80050ba:	f003 42e0 	and.w	r2, r3, #1879048192	@ 0x70000000
 80050be:	687b      	ldr	r3, [r7, #4]
 80050c0:	6b1b      	ldr	r3, [r3, #48]	@ 0x30
 80050c2:	071b      	lsls	r3, r3, #28
            (READ_BIT(pll_config, RCC_PLLCFGR_PLLQ) != (RCC_OscInitStruct->PLL.PLLQ << RCC_PLLCFGR_PLLQ_Pos)) ||
 80050c4:	429a      	cmp	r2, r3
 80050c6:	d001      	beq.n	80050cc <HAL_RCC_OscConfig+0x52c>
            (READ_BIT(pll_config, RCC_PLLCFGR_PLLN) != (RCC_OscInitStruct->PLL.PLLN) << RCC_PLLCFGR_PLLN_Pos) ||
            (READ_BIT(pll_config, RCC_PLLCFGR_PLLP) != (((RCC_OscInitStruct->PLL.PLLP >> 1U) - 1U)) << RCC_PLLCFGR_PLLP_Pos) ||
            (READ_BIT(pll_config, RCC_PLLCFGR_PLLQ) != (RCC_OscInitStruct->PLL.PLLQ << RCC_PLLCFGR_PLLQ_Pos)))
#endif /* RCC_PLLCFGR_PLLR */
        {
          return HAL_ERROR;
 80050c8:	2301      	movs	r3, #1
 80050ca:	e000      	b.n	80050ce <HAL_RCC_OscConfig+0x52e>
        }
      }
    }
  }
  return HAL_OK;
 80050cc:	2300      	movs	r3, #0
}
 80050ce:	4618      	mov	r0, r3
 80050d0:	3718      	adds	r7, #24
 80050d2:	46bd      	mov	sp, r7
 80050d4:	bd80      	pop	{r7, pc}
 80050d6:	bf00      	nop
 80050d8:	40023800 	.word	0x40023800

080050dc <HAL_SPI_Init>:
  * @param  hspi pointer to a SPI_HandleTypeDef structure that contains
  *               the configuration information for SPI module.
  * @retval HAL status
  */
HAL_StatusTypeDef HAL_SPI_Init(SPI_HandleTypeDef *hspi)
{
 80050dc:	b580      	push	{r7, lr}
 80050de:	b082      	sub	sp, #8
 80050e0:	af00      	add	r7, sp, #0
 80050e2:	6078      	str	r0, [r7, #4]
  /* Check the SPI handle allocation */
  if (hspi == NULL)
 80050e4:	687b      	ldr	r3, [r7, #4]
 80050e6:	2b00      	cmp	r3, #0
 80050e8:	d101      	bne.n	80050ee <HAL_SPI_Init+0x12>
  {
    return HAL_ERROR;
 80050ea:	2301      	movs	r3, #1
 80050ec:	e07b      	b.n	80051e6 <HAL_SPI_Init+0x10a>
  assert_param(IS_SPI_DATASIZE(hspi->Init.DataSize));
  assert_param(IS_SPI_NSS(hspi->Init.NSS));
  assert_param(IS_SPI_BAUDRATE_PRESCALER(hspi->Init.BaudRatePrescaler));
  assert_param(IS_SPI_FIRST_BIT(hspi->Init.FirstBit));
  assert_param(IS_SPI_TIMODE(hspi->Init.TIMode));
  if (hspi->Init.TIMode == SPI_TIMODE_DISABLE)
 80050ee:	687b      	ldr	r3, [r7, #4]
 80050f0:	6a5b      	ldr	r3, [r3, #36]	@ 0x24
 80050f2:	2b00      	cmp	r3, #0
 80050f4:	d108      	bne.n	8005108 <HAL_SPI_Init+0x2c>
  {
    assert_param(IS_SPI_CPOL(hspi->Init.CLKPolarity));
    assert_param(IS_SPI_CPHA(hspi->Init.CLKPhase));

    if (hspi->Init.Mode == SPI_MODE_MASTER)
 80050f6:	687b      	ldr	r3, [r7, #4]
 80050f8:	685b      	ldr	r3, [r3, #4]
 80050fa:	f5b3 7f82 	cmp.w	r3, #260	@ 0x104
 80050fe:	d009      	beq.n	8005114 <HAL_SPI_Init+0x38>
      assert_param(IS_SPI_BAUDRATE_PRESCALER(hspi->Init.BaudRatePrescaler));
    }
    else
    {
      /* Baudrate prescaler not use in Motoraola Slave mode. force to default value */
      hspi->Init.BaudRatePrescaler = SPI_BAUDRATEPRESCALER_2;
 8005100:	687b      	ldr	r3, [r7, #4]
 8005102:	2200      	movs	r2, #0
 8005104:	61da      	str	r2, [r3, #28]
 8005106:	e005      	b.n	8005114 <HAL_SPI_Init+0x38>
  else
  {
    assert_param(IS_SPI_BAUDRATE_PRESCALER(hspi->Init.BaudRatePrescaler));

    /* Force polarity and phase to TI protocaol requirements */
    hspi->Init.CLKPolarity = SPI_POLARITY_LOW;
 8005108:	687b      	ldr	r3, [r7, #4]
 800510a:	2200      	movs	r2, #0
 800510c:	611a      	str	r2, [r3, #16]
    hspi->Init.CLKPhase    = SPI_PHASE_1EDGE;
 800510e:	687b      	ldr	r3, [r7, #4]
 8005110:	2200      	movs	r2, #0
 8005112:	615a      	str	r2, [r3, #20]
  if (hspi->Init.CRCCalculation == SPI_CRCCALCULATION_ENABLE)
  {
    assert_param(IS_SPI_CRC_POLYNOMIAL(hspi->Init.CRCPolynomial));
  }
#else
  hspi->Init.CRCCalculation = SPI_CRCCALCULATION_DISABLE;
 8005114:	687b      	ldr	r3, [r7, #4]
 8005116:	2200      	movs	r2, #0
 8005118:	629a      	str	r2, [r3, #40]	@ 0x28
#endif /* USE_SPI_CRC */

  if (hspi->State == HAL_SPI_STATE_RESET)
 800511a:	687b      	ldr	r3, [r7, #4]
 800511c:	f893 3051 	ldrb.w	r3, [r3, #81]	@ 0x51
 8005120:	b2db      	uxtb	r3, r3
 8005122:	2b00      	cmp	r3, #0
 8005124:	d106      	bne.n	8005134 <HAL_SPI_Init+0x58>
  {
    /* Allocate lock resource and initialize it */
    hspi->Lock = HAL_UNLOCKED;
 8005126:	687b      	ldr	r3, [r7, #4]
 8005128:	2200      	movs	r2, #0
 800512a:	f883 2050 	strb.w	r2, [r3, #80]	@ 0x50

    /* Init the low level hardware : GPIO, CLOCK, NVIC... */
    hspi->MspInitCallback(hspi);
#else
    /* Init the low level hardware : GPIO, CLOCK, NVIC... */
    HAL_SPI_MspInit(hspi);
 800512e:	6878      	ldr	r0, [r7, #4]
 8005130:	f7fb fec6 	bl	8000ec0 <HAL_SPI_MspInit>
#endif /* USE_HAL_SPI_REGISTER_CALLBACKS */
  }

  hspi->State = HAL_SPI_STATE_BUSY;
 8005134:	687b      	ldr	r3, [r7, #4]
 8005136:	2202      	movs	r2, #2
 8005138:	f883 2051 	strb.w	r2, [r3, #81]	@ 0x51

  /* Disable the selected SPI peripheral */
  __HAL_SPI_DISABLE(hspi);
 800513c:	687b      	ldr	r3, [r7, #4]
 800513e:	681b      	ldr	r3, [r3, #0]
 8005140:	681a      	ldr	r2, [r3, #0]
 8005142:	687b      	ldr	r3, [r7, #4]
 8005144:	681b      	ldr	r3, [r3, #0]
 8005146:	f022 0240 	bic.w	r2, r2, #64	@ 0x40
 800514a:	601a      	str	r2, [r3, #0]

  /*----------------------- SPIx CR1 & CR2 Configuration ---------------------*/
  /* Configure : SPI Mode, Communication Mode, Data size, Clock polarity and phase, NSS management,
  Communication speed, First bit and CRC calculation state */
  WRITE_REG(hspi->Instance->CR1, ((hspi->Init.Mode & (SPI_CR1_MSTR | SPI_CR1_SSI)) |
 800514c:	687b      	ldr	r3, [r7, #4]
 800514e:	685b      	ldr	r3, [r3, #4]
 8005150:	f403 7282 	and.w	r2, r3, #260	@ 0x104
 8005154:	687b      	ldr	r3, [r7, #4]
 8005156:	689b      	ldr	r3, [r3, #8]
 8005158:	f403 4304 	and.w	r3, r3, #33792	@ 0x8400
 800515c:	431a      	orrs	r2, r3
 800515e:	687b      	ldr	r3, [r7, #4]
 8005160:	68db      	ldr	r3, [r3, #12]
 8005162:	f403 6300 	and.w	r3, r3, #2048	@ 0x800
 8005166:	431a      	orrs	r2, r3
 8005168:	687b      	ldr	r3, [r7, #4]
 800516a:	691b      	ldr	r3, [r3, #16]
 800516c:	f003 0302 	and.w	r3, r3, #2
 8005170:	431a      	orrs	r2, r3
 8005172:	687b      	ldr	r3, [r7, #4]
 8005174:	695b      	ldr	r3, [r3, #20]
 8005176:	f003 0301 	and.w	r3, r3, #1
 800517a:	431a      	orrs	r2, r3
 800517c:	687b      	ldr	r3, [r7, #4]
 800517e:	699b      	ldr	r3, [r3, #24]
 8005180:	f403 7300 	and.w	r3, r3, #512	@ 0x200
 8005184:	431a      	orrs	r2, r3
 8005186:	687b      	ldr	r3, [r7, #4]
 8005188:	69db      	ldr	r3, [r3, #28]
 800518a:	f003 0338 	and.w	r3, r3, #56	@ 0x38
 800518e:	431a      	orrs	r2, r3
 8005190:	687b      	ldr	r3, [r7, #4]
 8005192:	6a1b      	ldr	r3, [r3, #32]
 8005194:	f003 0380 	and.w	r3, r3, #128	@ 0x80
 8005198:	ea42 0103 	orr.w	r1, r2, r3
 800519c:	687b      	ldr	r3, [r7, #4]
 800519e:	6a9b      	ldr	r3, [r3, #40]	@ 0x28
 80051a0:	f403 5200 	and.w	r2, r3, #8192	@ 0x2000
 80051a4:	687b      	ldr	r3, [r7, #4]
 80051a6:	681b      	ldr	r3, [r3, #0]
 80051a8:	430a      	orrs	r2, r1
 80051aa:	601a      	str	r2, [r3, #0]
                                  (hspi->Init.BaudRatePrescaler & SPI_CR1_BR_Msk) |
                                  (hspi->Init.FirstBit  & SPI_CR1_LSBFIRST) |
                                  (hspi->Init.CRCCalculation & SPI_CR1_CRCEN)));

  /* Configure : NSS management, TI Mode */
  WRITE_REG(hspi->Instance->CR2, (((hspi->Init.NSS >> 16U) & SPI_CR2_SSOE) | (hspi->Init.TIMode & SPI_CR2_FRF)));
 80051ac:	687b      	ldr	r3, [r7, #4]
 80051ae:	699b      	ldr	r3, [r3, #24]
 80051b0:	0c1b      	lsrs	r3, r3, #16
 80051b2:	f003 0104 	and.w	r1, r3, #4
 80051b6:	687b      	ldr	r3, [r7, #4]
 80051b8:	6a5b      	ldr	r3, [r3, #36]	@ 0x24
 80051ba:	f003 0210 	and.w	r2, r3, #16
 80051be:	687b      	ldr	r3, [r7, #4]
 80051c0:	681b      	ldr	r3, [r3, #0]
 80051c2:	430a      	orrs	r2, r1
 80051c4:	605a      	str	r2, [r3, #4]
  }
#endif /* USE_SPI_CRC */

#if defined(SPI_I2SCFGR_I2SMOD)
  /* Activate the SPI mode (Make sure that I2SMOD bit in I2SCFGR register is reset) */
  CLEAR_BIT(hspi->Instance->I2SCFGR, SPI_I2SCFGR_I2SMOD);
 80051c6:	687b      	ldr	r3, [r7, #4]
 80051c8:	681b      	ldr	r3, [r3, #0]
 80051ca:	69da      	ldr	r2, [r3, #28]
 80051cc:	687b      	ldr	r3, [r7, #4]
 80051ce:	681b      	ldr	r3, [r3, #0]
 80051d0:	f422 6200 	bic.w	r2, r2, #2048	@ 0x800
 80051d4:	61da      	str	r2, [r3, #28]
#endif /* SPI_I2SCFGR_I2SMOD */

  hspi->ErrorCode = HAL_SPI_ERROR_NONE;
 80051d6:	687b      	ldr	r3, [r7, #4]
 80051d8:	2200      	movs	r2, #0
 80051da:	655a      	str	r2, [r3, #84]	@ 0x54
  hspi->State     = HAL_SPI_STATE_READY;
 80051dc:	687b      	ldr	r3, [r7, #4]
 80051de:	2201      	movs	r2, #1
 80051e0:	f883 2051 	strb.w	r2, [r3, #81]	@ 0x51

  return HAL_OK;
 80051e4:	2300      	movs	r3, #0
}
 80051e6:	4618      	mov	r0, r3
 80051e8:	3708      	adds	r7, #8
 80051ea:	46bd      	mov	sp, r7
 80051ec:	bd80      	pop	{r7, pc}

080051ee <HAL_SPI_Transmit>:
  * @param  Size amount of data to be sent
  * @param  Timeout Timeout duration
  * @retval HAL status
  */
HAL_StatusTypeDef HAL_SPI_Transmit(SPI_HandleTypeDef *hspi, const uint8_t *pData, uint16_t Size, uint32_t Timeout)
{
 80051ee:	b580      	push	{r7, lr}
 80051f0:	b088      	sub	sp, #32
 80051f2:	af00      	add	r7, sp, #0
 80051f4:	60f8      	str	r0, [r7, #12]
 80051f6:	60b9      	str	r1, [r7, #8]
 80051f8:	603b      	str	r3, [r7, #0]
 80051fa:	4613      	mov	r3, r2
 80051fc:	80fb      	strh	r3, [r7, #6]

  /* Check Direction parameter */
  assert_param(IS_SPI_DIRECTION_2LINES_OR_1LINE(hspi->Init.Direction));

  /* Init tickstart for timeout management*/
  tickstart = HAL_GetTick();
 80051fe:	f7fc fde7 	bl	8001dd0 <HAL_GetTick>
 8005202:	61f8      	str	r0, [r7, #28]
  initial_TxXferCount = Size;
 8005204:	88fb      	ldrh	r3, [r7, #6]
 8005206:	837b      	strh	r3, [r7, #26]

  if (hspi->State != HAL_SPI_STATE_READY)
 8005208:	68fb      	ldr	r3, [r7, #12]
 800520a:	f893 3051 	ldrb.w	r3, [r3, #81]	@ 0x51
 800520e:	b2db      	uxtb	r3, r3
 8005210:	2b01      	cmp	r3, #1
 8005212:	d001      	beq.n	8005218 <HAL_SPI_Transmit+0x2a>
  {
    return HAL_BUSY;
 8005214:	2302      	movs	r3, #2
 8005216:	e12a      	b.n	800546e <HAL_SPI_Transmit+0x280>
  }

  if ((pData == NULL) || (Size == 0U))
 8005218:	68bb      	ldr	r3, [r7, #8]
 800521a:	2b00      	cmp	r3, #0
 800521c:	d002      	beq.n	8005224 <HAL_SPI_Transmit+0x36>
 800521e:	88fb      	ldrh	r3, [r7, #6]
 8005220:	2b00      	cmp	r3, #0
 8005222:	d101      	bne.n	8005228 <HAL_SPI_Transmit+0x3a>
  {
    return HAL_ERROR;
 8005224:	2301      	movs	r3, #1
 8005226:	e122      	b.n	800546e <HAL_SPI_Transmit+0x280>
  }

  /* Process Locked */
  __HAL_LOCK(hspi);
 8005228:	68fb      	ldr	r3, [r7, #12]
 800522a:	f893 3050 	ldrb.w	r3, [r3, #80]	@ 0x50
 800522e:	2b01      	cmp	r3, #1
 8005230:	d101      	bne.n	8005236 <HAL_SPI_Transmit+0x48>
 8005232:	2302      	movs	r3, #2
 8005234:	e11b      	b.n	800546e <HAL_SPI_Transmit+0x280>
 8005236:	68fb      	ldr	r3, [r7, #12]
 8005238:	2201      	movs	r2, #1
 800523a:	f883 2050 	strb.w	r2, [r3, #80]	@ 0x50

  /* Set the transaction information */
  hspi->State       = HAL_SPI_STATE_BUSY_TX;
 800523e:	68fb      	ldr	r3, [r7, #12]
 8005240:	2203      	movs	r2, #3
 8005242:	f883 2051 	strb.w	r2, [r3, #81]	@ 0x51
  hspi->ErrorCode   = HAL_SPI_ERROR_NONE;
 8005246:	68fb      	ldr	r3, [r7, #12]
 8005248:	2200      	movs	r2, #0
 800524a:	655a      	str	r2, [r3, #84]	@ 0x54
  hspi->pTxBuffPtr  = (const uint8_t *)pData;
 800524c:	68fb      	ldr	r3, [r7, #12]
 800524e:	68ba      	ldr	r2, [r7, #8]
 8005250:	631a      	str	r2, [r3, #48]	@ 0x30
  hspi->TxXferSize  = Size;
 8005252:	68fb      	ldr	r3, [r7, #12]
 8005254:	88fa      	ldrh	r2, [r7, #6]
 8005256:	869a      	strh	r2, [r3, #52]	@ 0x34
  hspi->TxXferCount = Size;
 8005258:	68fb      	ldr	r3, [r7, #12]
 800525a:	88fa      	ldrh	r2, [r7, #6]
 800525c:	86da      	strh	r2, [r3, #54]	@ 0x36

  /*Init field not used in handle to zero */
  hspi->pRxBuffPtr  = (uint8_t *)NULL;
 800525e:	68fb      	ldr	r3, [r7, #12]
 8005260:	2200      	movs	r2, #0
 8005262:	639a      	str	r2, [r3, #56]	@ 0x38
  hspi->RxXferSize  = 0U;
 8005264:	68fb      	ldr	r3, [r7, #12]
 8005266:	2200      	movs	r2, #0
 8005268:	879a      	strh	r2, [r3, #60]	@ 0x3c
  hspi->RxXferCount = 0U;
 800526a:	68fb      	ldr	r3, [r7, #12]
 800526c:	2200      	movs	r2, #0
 800526e:	87da      	strh	r2, [r3, #62]	@ 0x3e
  hspi->TxISR       = NULL;
 8005270:	68fb      	ldr	r3, [r7, #12]
 8005272:	2200      	movs	r2, #0
 8005274:	645a      	str	r2, [r3, #68]	@ 0x44
  hspi->RxISR       = NULL;
 8005276:	68fb      	ldr	r3, [r7, #12]
 8005278:	2200      	movs	r2, #0
 800527a:	641a      	str	r2, [r3, #64]	@ 0x40

  /* Configure communication direction : 1Line */
  if (hspi->Init.Direction == SPI_DIRECTION_1LINE)
 800527c:	68fb      	ldr	r3, [r7, #12]
 800527e:	689b      	ldr	r3, [r3, #8]
 8005280:	f5b3 4f00 	cmp.w	r3, #32768	@ 0x8000
 8005284:	d10f      	bne.n	80052a6 <HAL_SPI_Transmit+0xb8>
  {
    /* Disable SPI Peripheral before set 1Line direction (BIDIOE bit) */
    __HAL_SPI_DISABLE(hspi);
 8005286:	68fb      	ldr	r3, [r7, #12]
 8005288:	681b      	ldr	r3, [r3, #0]
 800528a:	681a      	ldr	r2, [r3, #0]
 800528c:	68fb      	ldr	r3, [r7, #12]
 800528e:	681b      	ldr	r3, [r3, #0]
 8005290:	f022 0240 	bic.w	r2, r2, #64	@ 0x40
 8005294:	601a      	str	r2, [r3, #0]
    SPI_1LINE_TX(hspi);
 8005296:	68fb      	ldr	r3, [r7, #12]
 8005298:	681b      	ldr	r3, [r3, #0]
 800529a:	681a      	ldr	r2, [r3, #0]
 800529c:	68fb      	ldr	r3, [r7, #12]
 800529e:	681b      	ldr	r3, [r3, #0]
 80052a0:	f442 4280 	orr.w	r2, r2, #16384	@ 0x4000
 80052a4:	601a      	str	r2, [r3, #0]
    SPI_RESET_CRC(hspi);
  }
#endif /* USE_SPI_CRC */

  /* Check if the SPI is already enabled */
  if ((hspi->Instance->CR1 & SPI_CR1_SPE) != SPI_CR1_SPE)
 80052a6:	68fb      	ldr	r3, [r7, #12]
 80052a8:	681b      	ldr	r3, [r3, #0]
 80052aa:	681b      	ldr	r3, [r3, #0]
 80052ac:	f003 0340 	and.w	r3, r3, #64	@ 0x40
 80052b0:	2b40      	cmp	r3, #64	@ 0x40
 80052b2:	d007      	beq.n	80052c4 <HAL_SPI_Transmit+0xd6>
  {
    /* Enable SPI peripheral */
    __HAL_SPI_ENABLE(hspi);
 80052b4:	68fb      	ldr	r3, [r7, #12]
 80052b6:	681b      	ldr	r3, [r3, #0]
 80052b8:	681a      	ldr	r2, [r3, #0]
 80052ba:	68fb      	ldr	r3, [r7, #12]
 80052bc:	681b      	ldr	r3, [r3, #0]
 80052be:	f042 0240 	orr.w	r2, r2, #64	@ 0x40
 80052c2:	601a      	str	r2, [r3, #0]
  }

  /* Transmit data in 16 Bit mode */
  if (hspi->Init.DataSize == SPI_DATASIZE_16BIT)
 80052c4:	68fb      	ldr	r3, [r7, #12]
 80052c6:	68db      	ldr	r3, [r3, #12]
 80052c8:	f5b3 6f00 	cmp.w	r3, #2048	@ 0x800
 80052cc:	d152      	bne.n	8005374 <HAL_SPI_Transmit+0x186>
  {
    if ((hspi->Init.Mode == SPI_MODE_SLAVE) || (initial_TxXferCount == 0x01U))
 80052ce:	68fb      	ldr	r3, [r7, #12]
 80052d0:	685b      	ldr	r3, [r3, #4]
 80052d2:	2b00      	cmp	r3, #0
 80052d4:	d002      	beq.n	80052dc <HAL_SPI_Transmit+0xee>
 80052d6:	8b7b      	ldrh	r3, [r7, #26]
 80052d8:	2b01      	cmp	r3, #1
 80052da:	d145      	bne.n	8005368 <HAL_SPI_Transmit+0x17a>
    {
      hspi->Instance->DR = *((const uint16_t *)hspi->pTxBuffPtr);
 80052dc:	68fb      	ldr	r3, [r7, #12]
 80052de:	6b1b      	ldr	r3, [r3, #48]	@ 0x30
 80052e0:	881a      	ldrh	r2, [r3, #0]
 80052e2:	68fb      	ldr	r3, [r7, #12]
 80052e4:	681b      	ldr	r3, [r3, #0]
 80052e6:	60da      	str	r2, [r3, #12]
      hspi->pTxBuffPtr += sizeof(uint16_t);
 80052e8:	68fb      	ldr	r3, [r7, #12]
 80052ea:	6b1b      	ldr	r3, [r3, #48]	@ 0x30
 80052ec:	1c9a      	adds	r2, r3, #2
 80052ee:	68fb      	ldr	r3, [r7, #12]
 80052f0:	631a      	str	r2, [r3, #48]	@ 0x30
      hspi->TxXferCount--;
 80052f2:	68fb      	ldr	r3, [r7, #12]
 80052f4:	8edb      	ldrh	r3, [r3, #54]	@ 0x36
 80052f6:	b29b      	uxth	r3, r3
 80052f8:	3b01      	subs	r3, #1
 80052fa:	b29a      	uxth	r2, r3
 80052fc:	68fb      	ldr	r3, [r7, #12]
 80052fe:	86da      	strh	r2, [r3, #54]	@ 0x36
    }
    /* Transmit data in 16 Bit mode */
    while (hspi->TxXferCount > 0U)
 8005300:	e032      	b.n	8005368 <HAL_SPI_Transmit+0x17a>
    {
      /* Wait until TXE flag is set to send data */
      if (__HAL_SPI_GET_FLAG(hspi, SPI_FLAG_TXE))
 8005302:	68fb      	ldr	r3, [r7, #12]
 8005304:	681b      	ldr	r3, [r3, #0]
 8005306:	689b      	ldr	r3, [r3, #8]
 8005308:	f003 0302 	and.w	r3, r3, #2
 800530c:	2b02      	cmp	r3, #2
 800530e:	d112      	bne.n	8005336 <HAL_SPI_Transmit+0x148>
      {
        hspi->Instance->DR = *((const uint16_t *)hspi->pTxBuffPtr);
 8005310:	68fb      	ldr	r3, [r7, #12]
 8005312:	6b1b      	ldr	r3, [r3, #48]	@ 0x30
 8005314:	881a      	ldrh	r2, [r3, #0]
 8005316:	68fb      	ldr	r3, [r7, #12]
 8005318:	681b      	ldr	r3, [r3, #0]
 800531a:	60da      	str	r2, [r3, #12]
        hspi->pTxBuffPtr += sizeof(uint16_t);
 800531c:	68fb      	ldr	r3, [r7, #12]
 800531e:	6b1b      	ldr	r3, [r3, #48]	@ 0x30
 8005320:	1c9a      	adds	r2, r3, #2
 8005322:	68fb      	ldr	r3, [r7, #12]
 8005324:	631a      	str	r2, [r3, #48]	@ 0x30
        hspi->TxXferCount--;
 8005326:	68fb      	ldr	r3, [r7, #12]
 8005328:	8edb      	ldrh	r3, [r3, #54]	@ 0x36
 800532a:	b29b      	uxth	r3, r3
 800532c:	3b01      	subs	r3, #1
 800532e:	b29a      	uxth	r2, r3
 8005330:	68fb      	ldr	r3, [r7, #12]
 8005332:	86da      	strh	r2, [r3, #54]	@ 0x36
 8005334:	e018      	b.n	8005368 <HAL_SPI_Transmit+0x17a>
      }
      else
      {
        /* Timeout management */
        if ((((HAL_GetTick() - tickstart) >=  Timeout) && (Timeout != HAL_MAX_DELAY)) || (Timeout == 0U))
 8005336:	f7fc fd4b 	bl	8001dd0 <HAL_GetTick>
 800533a:	4602      	mov	r2, r0
 800533c:	69fb      	ldr	r3, [r7, #28]
 800533e:	1ad3      	subs	r3, r2, r3
 8005340:	683a      	ldr	r2, [r7, #0]
 8005342:	429a      	cmp	r2, r3
 8005344:	d803      	bhi.n	800534e <HAL_SPI_Transmit+0x160>
 8005346:	683b      	ldr	r3, [r7, #0]
 8005348:	f1b3 3fff 	cmp.w	r3, #4294967295
 800534c:	d102      	bne.n	8005354 <HAL_SPI_Transmit+0x166>
 800534e:	683b      	ldr	r3, [r7, #0]
 8005350:	2b00      	cmp	r3, #0
 8005352:	d109      	bne.n	8005368 <HAL_SPI_Transmit+0x17a>
        {
          hspi->State = HAL_SPI_STATE_READY;
 8005354:	68fb      	ldr	r3, [r7, #12]
 8005356:	2201      	movs	r2, #1
 8005358:	f883 2051 	strb.w	r2, [r3, #81]	@ 0x51
          __HAL_UNLOCK(hspi);
 800535c:	68fb      	ldr	r3, [r7, #12]
 800535e:	2200      	movs	r2, #0
 8005360:	f883 2050 	strb.w	r2, [r3, #80]	@ 0x50
          return HAL_TIMEOUT;
 8005364:	2303      	movs	r3, #3
 8005366:	e082      	b.n	800546e <HAL_SPI_Transmit+0x280>
    while (hspi->TxXferCount > 0U)
 8005368:	68fb      	ldr	r3, [r7, #12]
 800536a:	8edb      	ldrh	r3, [r3, #54]	@ 0x36
 800536c:	b29b      	uxth	r3, r3
 800536e:	2b00      	cmp	r3, #0
 8005370:	d1c7      	bne.n	8005302 <HAL_SPI_Transmit+0x114>
 8005372:	e053      	b.n	800541c <HAL_SPI_Transmit+0x22e>
    }
  }
  /* Transmit data in 8 Bit mode */
  else
  {
    if ((hspi->Init.Mode == SPI_MODE_SLAVE) || (initial_TxXferCount == 0x01U))
 8005374:	68fb      	ldr	r3, [r7, #12]
 8005376:	685b      	ldr	r3, [r3, #4]
 8005378:	2b00      	cmp	r3, #0
 800537a:	d002      	beq.n	8005382 <HAL_SPI_Transmit+0x194>
 800537c:	8b7b      	ldrh	r3, [r7, #26]
 800537e:	2b01      	cmp	r3, #1
 8005380:	d147      	bne.n	8005412 <HAL_SPI_Transmit+0x224>
    {
      *((__IO uint8_t *)&hspi->Instance->DR) = *((const uint8_t *)hspi->pTxBuffPtr);
 8005382:	68fb      	ldr	r3, [r7, #12]
 8005384:	6b1a      	ldr	r2, [r3, #48]	@ 0x30
 8005386:	68fb      	ldr	r3, [r7, #12]
 8005388:	681b      	ldr	r3, [r3, #0]
 800538a:	330c      	adds	r3, #12
 800538c:	7812      	ldrb	r2, [r2, #0]
 800538e:	701a      	strb	r2, [r3, #0]
      hspi->pTxBuffPtr += sizeof(uint8_t);
 8005390:	68fb      	ldr	r3, [r7, #12]
 8005392:	6b1b      	ldr	r3, [r3, #48]	@ 0x30
 8005394:	1c5a      	adds	r2, r3, #1
 8005396:	68fb      	ldr	r3, [r7, #12]
 8005398:	631a      	str	r2, [r3, #48]	@ 0x30
      hspi->TxXferCount--;
 800539a:	68fb      	ldr	r3, [r7, #12]
 800539c:	8edb      	ldrh	r3, [r3, #54]	@ 0x36
 800539e:	b29b      	uxth	r3, r3
 80053a0:	3b01      	subs	r3, #1
 80053a2:	b29a      	uxth	r2, r3
 80053a4:	68fb      	ldr	r3, [r7, #12]
 80053a6:	86da      	strh	r2, [r3, #54]	@ 0x36
    }
    while (hspi->TxXferCount > 0U)
 80053a8:	e033      	b.n	8005412 <HAL_SPI_Transmit+0x224>
    {
      /* Wait until TXE flag is set to send data */
      if (__HAL_SPI_GET_FLAG(hspi, SPI_FLAG_TXE))
 80053aa:	68fb      	ldr	r3, [r7, #12]
 80053ac:	681b      	ldr	r3, [r3, #0]
 80053ae:	689b      	ldr	r3, [r3, #8]
 80053b0:	f003 0302 	and.w	r3, r3, #2
 80053b4:	2b02      	cmp	r3, #2
 80053b6:	d113      	bne.n	80053e0 <HAL_SPI_Transmit+0x1f2>
      {
        *((__IO uint8_t *)&hspi->Instance->DR) = *((const uint8_t *)hspi->pTxBuffPtr);
 80053b8:	68fb      	ldr	r3, [r7, #12]
 80053ba:	6b1a      	ldr	r2, [r3, #48]	@ 0x30
 80053bc:	68fb      	ldr	r3, [r7, #12]
 80053be:	681b      	ldr	r3, [r3, #0]
 80053c0:	330c      	adds	r3, #12
 80053c2:	7812      	ldrb	r2, [r2, #0]
 80053c4:	701a      	strb	r2, [r3, #0]
        hspi->pTxBuffPtr += sizeof(uint8_t);
 80053c6:	68fb      	ldr	r3, [r7, #12]
 80053c8:	6b1b      	ldr	r3, [r3, #48]	@ 0x30
 80053ca:	1c5a      	adds	r2, r3, #1
 80053cc:	68fb      	ldr	r3, [r7, #12]
 80053ce:	631a      	str	r2, [r3, #48]	@ 0x30
        hspi->TxXferCount--;
 80053d0:	68fb      	ldr	r3, [r7, #12]
 80053d2:	8edb      	ldrh	r3, [r3, #54]	@ 0x36
 80053d4:	b29b      	uxth	r3, r3
 80053d6:	3b01      	subs	r3, #1
 80053d8:	b29a      	uxth	r2, r3
 80053da:	68fb      	ldr	r3, [r7, #12]
 80053dc:	86da      	strh	r2, [r3, #54]	@ 0x36
 80053de:	e018      	b.n	8005412 <HAL_SPI_Transmit+0x224>
      }
      else
      {
        /* Timeout management */
        if ((((HAL_GetTick() - tickstart) >=  Timeout) && (Timeout != HAL_MAX_DELAY)) || (Timeout == 0U))
 80053e0:	f7fc fcf6 	bl	8001dd0 <HAL_GetTick>
 80053e4:	4602      	mov	r2, r0
 80053e6:	69fb      	ldr	r3, [r7, #28]
 80053e8:	1ad3      	subs	r3, r2, r3
 80053ea:	683a      	ldr	r2, [r7, #0]
 80053ec:	429a      	cmp	r2, r3
 80053ee:	d803      	bhi.n	80053f8 <HAL_SPI_Transmit+0x20a>
 80053f0:	683b      	ldr	r3, [r7, #0]
 80053f2:	f1b3 3fff 	cmp.w	r3, #4294967295
 80053f6:	d102      	bne.n	80053fe <HAL_SPI_Transmit+0x210>
 80053f8:	683b      	ldr	r3, [r7, #0]
 80053fa:	2b00      	cmp	r3, #0
 80053fc:	d109      	bne.n	8005412 <HAL_SPI_Transmit+0x224>
        {
          hspi->State = HAL_SPI_STATE_READY;
 80053fe:	68fb      	ldr	r3, [r7, #12]
 8005400:	2201      	movs	r2, #1
 8005402:	f883 2051 	strb.w	r2, [r3, #81]	@ 0x51
          __HAL_UNLOCK(hspi);
 8005406:	68fb      	ldr	r3, [r7, #12]
 8005408:	2200      	movs	r2, #0
 800540a:	f883 2050 	strb.w	r2, [r3, #80]	@ 0x50
          return HAL_TIMEOUT;
 800540e:	2303      	movs	r3, #3
 8005410:	e02d      	b.n	800546e <HAL_SPI_Transmit+0x280>
    while (hspi->TxXferCount > 0U)
 8005412:	68fb      	ldr	r3, [r7, #12]
 8005414:	8edb      	ldrh	r3, [r3, #54]	@ 0x36
 8005416:	b29b      	uxth	r3, r3
 8005418:	2b00      	cmp	r3, #0
 800541a:	d1c6      	bne.n	80053aa <HAL_SPI_Transmit+0x1bc>
    SET_BIT(hspi->Instance->CR1, SPI_CR1_CRCNEXT);
  }
#endif /* USE_SPI_CRC */

  /* Check the end of the transaction */
  if (SPI_EndRxTxTransaction(hspi, Timeout, tickstart) != HAL_OK)
 800541c:	69fa      	ldr	r2, [r7, #28]
 800541e:	6839      	ldr	r1, [r7, #0]
 8005420:	68f8      	ldr	r0, [r7, #12]
 8005422:	f000 fe1f 	bl	8006064 <SPI_EndRxTxTransaction>
 8005426:	4603      	mov	r3, r0
 8005428:	2b00      	cmp	r3, #0
 800542a:	d002      	beq.n	8005432 <HAL_SPI_Transmit+0x244>
  {
    hspi->ErrorCode = HAL_SPI_ERROR_FLAG;
 800542c:	68fb      	ldr	r3, [r7, #12]
 800542e:	2220      	movs	r2, #32
 8005430:	655a      	str	r2, [r3, #84]	@ 0x54
  }

  /* Clear overrun flag in 2 Lines communication mode because received is not read */
  if (hspi->Init.Direction == SPI_DIRECTION_2LINES)
 8005432:	68fb      	ldr	r3, [r7, #12]
 8005434:	689b      	ldr	r3, [r3, #8]
 8005436:	2b00      	cmp	r3, #0
 8005438:	d10a      	bne.n	8005450 <HAL_SPI_Transmit+0x262>
  {
    __HAL_SPI_CLEAR_OVRFLAG(hspi);
 800543a:	2300      	movs	r3, #0
 800543c:	617b      	str	r3, [r7, #20]
 800543e:	68fb      	ldr	r3, [r7, #12]
 8005440:	681b      	ldr	r3, [r3, #0]
 8005442:	68db      	ldr	r3, [r3, #12]
 8005444:	617b      	str	r3, [r7, #20]
 8005446:	68fb      	ldr	r3, [r7, #12]
 8005448:	681b      	ldr	r3, [r3, #0]
 800544a:	689b      	ldr	r3, [r3, #8]
 800544c:	617b      	str	r3, [r7, #20]
 800544e:	697b      	ldr	r3, [r7, #20]
  }

  hspi->State = HAL_SPI_STATE_READY;
 8005450:	68fb      	ldr	r3, [r7, #12]
 8005452:	2201      	movs	r2, #1
 8005454:	f883 2051 	strb.w	r2, [r3, #81]	@ 0x51
  /* Process Unlocked */
  __HAL_UNLOCK(hspi);
 8005458:	68fb      	ldr	r3, [r7, #12]
 800545a:	2200      	movs	r2, #0
 800545c:	f883 2050 	strb.w	r2, [r3, #80]	@ 0x50

  if (hspi->ErrorCode != HAL_SPI_ERROR_NONE)
 8005460:	68fb      	ldr	r3, [r7, #12]
 8005462:	6d5b      	ldr	r3, [r3, #84]	@ 0x54
 8005464:	2b00      	cmp	r3, #0
 8005466:	d001      	beq.n	800546c <HAL_SPI_Transmit+0x27e>
  {
    return HAL_ERROR;
 8005468:	2301      	movs	r3, #1
 800546a:	e000      	b.n	800546e <HAL_SPI_Transmit+0x280>
  }
  else
  {
    return HAL_OK;
 800546c:	2300      	movs	r3, #0
  }
}
 800546e:	4618      	mov	r0, r3
 8005470:	3720      	adds	r7, #32
 8005472:	46bd      	mov	sp, r7
 8005474:	bd80      	pop	{r7, pc}

08005476 <HAL_SPI_Receive>:
  * @param  Size amount of data to be received
  * @param  Timeout Timeout duration
  * @retval HAL status
  */
HAL_StatusTypeDef HAL_SPI_Receive(SPI_HandleTypeDef *hspi, uint8_t *pData, uint16_t Size, uint32_t Timeout)
{
 8005476:	b580      	push	{r7, lr}
 8005478:	b088      	sub	sp, #32
 800547a:	af02      	add	r7, sp, #8
 800547c:	60f8      	str	r0, [r7, #12]
 800547e:	60b9      	str	r1, [r7, #8]
 8005480:	603b      	str	r3, [r7, #0]
 8005482:	4613      	mov	r3, r2
 8005484:	80fb      	strh	r3, [r7, #6]
#if (USE_SPI_CRC != 0U)
  __IO uint32_t tmpreg = 0U;
#endif /* USE_SPI_CRC */
  uint32_t tickstart;

  if (hspi->State != HAL_SPI_STATE_READY)
 8005486:	68fb      	ldr	r3, [r7, #12]
 8005488:	f893 3051 	ldrb.w	r3, [r3, #81]	@ 0x51
 800548c:	b2db      	uxtb	r3, r3
 800548e:	2b01      	cmp	r3, #1
 8005490:	d001      	beq.n	8005496 <HAL_SPI_Receive+0x20>
  {
    return HAL_BUSY;
 8005492:	2302      	movs	r3, #2
 8005494:	e104      	b.n	80056a0 <HAL_SPI_Receive+0x22a>
  }

  if ((hspi->Init.Mode == SPI_MODE_MASTER) && (hspi->Init.Direction == SPI_DIRECTION_2LINES))
 8005496:	68fb      	ldr	r3, [r7, #12]
 8005498:	685b      	ldr	r3, [r3, #4]
 800549a:	f5b3 7f82 	cmp.w	r3, #260	@ 0x104
 800549e:	d112      	bne.n	80054c6 <HAL_SPI_Receive+0x50>
 80054a0:	68fb      	ldr	r3, [r7, #12]
 80054a2:	689b      	ldr	r3, [r3, #8]
 80054a4:	2b00      	cmp	r3, #0
 80054a6:	d10e      	bne.n	80054c6 <HAL_SPI_Receive+0x50>
  {
    hspi->State = HAL_SPI_STATE_BUSY_RX;
 80054a8:	68fb      	ldr	r3, [r7, #12]
 80054aa:	2204      	movs	r2, #4
 80054ac:	f883 2051 	strb.w	r2, [r3, #81]	@ 0x51
    /* Call transmit-receive function to send Dummy data on Tx line and generate clock on CLK line */
    return HAL_SPI_TransmitReceive(hspi, pData, pData, Size, Timeout);
 80054b0:	88fa      	ldrh	r2, [r7, #6]
 80054b2:	683b      	ldr	r3, [r7, #0]
 80054b4:	9300      	str	r3, [sp, #0]
 80054b6:	4613      	mov	r3, r2
 80054b8:	68ba      	ldr	r2, [r7, #8]
 80054ba:	68b9      	ldr	r1, [r7, #8]
 80054bc:	68f8      	ldr	r0, [r7, #12]
 80054be:	f000 f8f3 	bl	80056a8 <HAL_SPI_TransmitReceive>
 80054c2:	4603      	mov	r3, r0
 80054c4:	e0ec      	b.n	80056a0 <HAL_SPI_Receive+0x22a>
  }

  /* Init tickstart for timeout management*/
  tickstart = HAL_GetTick();
 80054c6:	f7fc fc83 	bl	8001dd0 <HAL_GetTick>
 80054ca:	6178      	str	r0, [r7, #20]

  if ((pData == NULL) || (Size == 0U))
 80054cc:	68bb      	ldr	r3, [r7, #8]
 80054ce:	2b00      	cmp	r3, #0
 80054d0:	d002      	beq.n	80054d8 <HAL_SPI_Receive+0x62>
 80054d2:	88fb      	ldrh	r3, [r7, #6]
 80054d4:	2b00      	cmp	r3, #0
 80054d6:	d101      	bne.n	80054dc <HAL_SPI_Receive+0x66>
  {
    return HAL_ERROR;
 80054d8:	2301      	movs	r3, #1
 80054da:	e0e1      	b.n	80056a0 <HAL_SPI_Receive+0x22a>
  }

  /* Process Locked */
  __HAL_LOCK(hspi);
 80054dc:	68fb      	ldr	r3, [r7, #12]
 80054de:	f893 3050 	ldrb.w	r3, [r3, #80]	@ 0x50
 80054e2:	2b01      	cmp	r3, #1
 80054e4:	d101      	bne.n	80054ea <HAL_SPI_Receive+0x74>
 80054e6:	2302      	movs	r3, #2
 80054e8:	e0da      	b.n	80056a0 <HAL_SPI_Receive+0x22a>
 80054ea:	68fb      	ldr	r3, [r7, #12]
 80054ec:	2201      	movs	r2, #1
 80054ee:	f883 2050 	strb.w	r2, [r3, #80]	@ 0x50

  /* Set the transaction information */
  hspi->State       = HAL_SPI_STATE_BUSY_RX;
 80054f2:	68fb      	ldr	r3, [r7, #12]
 80054f4:	2204      	movs	r2, #4
 80054f6:	f883 2051 	strb.w	r2, [r3, #81]	@ 0x51
  hspi->ErrorCode   = HAL_SPI_ERROR_NONE;
 80054fa:	68fb      	ldr	r3, [r7, #12]
 80054fc:	2200      	movs	r2, #0
 80054fe:	655a      	str	r2, [r3, #84]	@ 0x54
  hspi->pRxBuffPtr  = (uint8_t *)pData;
 8005500:	68fb      	ldr	r3, [r7, #12]
 8005502:	68ba      	ldr	r2, [r7, #8]
 8005504:	639a      	str	r2, [r3, #56]	@ 0x38
  hspi->RxXferSize  = Size;
 8005506:	68fb      	ldr	r3, [r7, #12]
 8005508:	88fa      	ldrh	r2, [r7, #6]
 800550a:	879a      	strh	r2, [r3, #60]	@ 0x3c
  hspi->RxXferCount = Size;
 800550c:	68fb      	ldr	r3, [r7, #12]
 800550e:	88fa      	ldrh	r2, [r7, #6]
 8005510:	87da      	strh	r2, [r3, #62]	@ 0x3e

  /*Init field not used in handle to zero */
  hspi->pTxBuffPtr  = (uint8_t *)NULL;
 8005512:	68fb      	ldr	r3, [r7, #12]
 8005514:	2200      	movs	r2, #0
 8005516:	631a      	str	r2, [r3, #48]	@ 0x30
  hspi->TxXferSize  = 0U;
 8005518:	68fb      	ldr	r3, [r7, #12]
 800551a:	2200      	movs	r2, #0
 800551c:	869a      	strh	r2, [r3, #52]	@ 0x34
  hspi->TxXferCount = 0U;
 800551e:	68fb      	ldr	r3, [r7, #12]
 8005520:	2200      	movs	r2, #0
 8005522:	86da      	strh	r2, [r3, #54]	@ 0x36
  hspi->RxISR       = NULL;
 8005524:	68fb      	ldr	r3, [r7, #12]
 8005526:	2200      	movs	r2, #0
 8005528:	641a      	str	r2, [r3, #64]	@ 0x40
  hspi->TxISR       = NULL;
 800552a:	68fb      	ldr	r3, [r7, #12]
 800552c:	2200      	movs	r2, #0
 800552e:	645a      	str	r2, [r3, #68]	@ 0x44
    hspi->RxXferCount--;
  }
#endif /* USE_SPI_CRC */

  /* Configure communication direction: 1Line */
  if (hspi->Init.Direction == SPI_DIRECTION_1LINE)
 8005530:	68fb      	ldr	r3, [r7, #12]
 8005532:	689b      	ldr	r3, [r3, #8]
 8005534:	f5b3 4f00 	cmp.w	r3, #32768	@ 0x8000
 8005538:	d10f      	bne.n	800555a <HAL_SPI_Receive+0xe4>
  {
    /* Disable SPI Peripheral before set 1Line direction (BIDIOE bit) */
    __HAL_SPI_DISABLE(hspi);
 800553a:	68fb      	ldr	r3, [r7, #12]
 800553c:	681b      	ldr	r3, [r3, #0]
 800553e:	681a      	ldr	r2, [r3, #0]
 8005540:	68fb      	ldr	r3, [r7, #12]
 8005542:	681b      	ldr	r3, [r3, #0]
 8005544:	f022 0240 	bic.w	r2, r2, #64	@ 0x40
 8005548:	601a      	str	r2, [r3, #0]
    SPI_1LINE_RX(hspi);
 800554a:	68fb      	ldr	r3, [r7, #12]
 800554c:	681b      	ldr	r3, [r3, #0]
 800554e:	681a      	ldr	r2, [r3, #0]
 8005550:	68fb      	ldr	r3, [r7, #12]
 8005552:	681b      	ldr	r3, [r3, #0]
 8005554:	f422 4280 	bic.w	r2, r2, #16384	@ 0x4000
 8005558:	601a      	str	r2, [r3, #0]
  }

  /* Check if the SPI is already enabled */
  if ((hspi->Instance->CR1 & SPI_CR1_SPE) != SPI_CR1_SPE)
 800555a:	68fb      	ldr	r3, [r7, #12]
 800555c:	681b      	ldr	r3, [r3, #0]
 800555e:	681b      	ldr	r3, [r3, #0]
 8005560:	f003 0340 	and.w	r3, r3, #64	@ 0x40
 8005564:	2b40      	cmp	r3, #64	@ 0x40
 8005566:	d007      	beq.n	8005578 <HAL_SPI_Receive+0x102>
  {
    /* Enable SPI peripheral */
    __HAL_SPI_ENABLE(hspi);
 8005568:	68fb      	ldr	r3, [r7, #12]
 800556a:	681b      	ldr	r3, [r3, #0]
 800556c:	681a      	ldr	r2, [r3, #0]
 800556e:	68fb      	ldr	r3, [r7, #12]
 8005570:	681b      	ldr	r3, [r3, #0]
 8005572:	f042 0240 	orr.w	r2, r2, #64	@ 0x40
 8005576:	601a      	str	r2, [r3, #0]
  }

  /* Receive data in 8 Bit mode */
  if (hspi->Init.DataSize == SPI_DATASIZE_8BIT)
 8005578:	68fb      	ldr	r3, [r7, #12]
 800557a:	68db      	ldr	r3, [r3, #12]
 800557c:	2b00      	cmp	r3, #0
 800557e:	d170      	bne.n	8005662 <HAL_SPI_Receive+0x1ec>
  {
    /* Transfer loop */
    while (hspi->RxXferCount > 0U)
 8005580:	e035      	b.n	80055ee <HAL_SPI_Receive+0x178>
    {
      /* Check the RXNE flag */
      if (__HAL_SPI_GET_FLAG(hspi, SPI_FLAG_RXNE))
 8005582:	68fb      	ldr	r3, [r7, #12]
 8005584:	681b      	ldr	r3, [r3, #0]
 8005586:	689b      	ldr	r3, [r3, #8]
 8005588:	f003 0301 	and.w	r3, r3, #1
 800558c:	2b01      	cmp	r3, #1
 800558e:	d115      	bne.n	80055bc <HAL_SPI_Receive+0x146>
      {
        /* read the received data */
        (* (uint8_t *)hspi->pRxBuffPtr) = *(__IO uint8_t *)&hspi->Instance->DR;
 8005590:	68fb      	ldr	r3, [r7, #12]
 8005592:	681b      	ldr	r3, [r3, #0]
 8005594:	f103 020c 	add.w	r2, r3, #12
 8005598:	68fb      	ldr	r3, [r7, #12]
 800559a:	6b9b      	ldr	r3, [r3, #56]	@ 0x38
 800559c:	7812      	ldrb	r2, [r2, #0]
 800559e:	b2d2      	uxtb	r2, r2
 80055a0:	701a      	strb	r2, [r3, #0]
        hspi->pRxBuffPtr += sizeof(uint8_t);
 80055a2:	68fb      	ldr	r3, [r7, #12]
 80055a4:	6b9b      	ldr	r3, [r3, #56]	@ 0x38
 80055a6:	1c5a      	adds	r2, r3, #1
 80055a8:	68fb      	ldr	r3, [r7, #12]
 80055aa:	639a      	str	r2, [r3, #56]	@ 0x38
        hspi->RxXferCount--;
 80055ac:	68fb      	ldr	r3, [r7, #12]
 80055ae:	8fdb      	ldrh	r3, [r3, #62]	@ 0x3e
 80055b0:	b29b      	uxth	r3, r3
 80055b2:	3b01      	subs	r3, #1
 80055b4:	b29a      	uxth	r2, r3
 80055b6:	68fb      	ldr	r3, [r7, #12]
 80055b8:	87da      	strh	r2, [r3, #62]	@ 0x3e
 80055ba:	e018      	b.n	80055ee <HAL_SPI_Receive+0x178>
      }
      else
      {
        /* Timeout management */
        if ((((HAL_GetTick() - tickstart) >=  Timeout) && (Timeout != HAL_MAX_DELAY)) || (Timeout == 0U))
 80055bc:	f7fc fc08 	bl	8001dd0 <HAL_GetTick>
 80055c0:	4602      	mov	r2, r0
 80055c2:	697b      	ldr	r3, [r7, #20]
 80055c4:	1ad3      	subs	r3, r2, r3
 80055c6:	683a      	ldr	r2, [r7, #0]
 80055c8:	429a      	cmp	r2, r3
 80055ca:	d803      	bhi.n	80055d4 <HAL_SPI_Receive+0x15e>
 80055cc:	683b      	ldr	r3, [r7, #0]
 80055ce:	f1b3 3fff 	cmp.w	r3, #4294967295
 80055d2:	d102      	bne.n	80055da <HAL_SPI_Receive+0x164>
 80055d4:	683b      	ldr	r3, [r7, #0]
 80055d6:	2b00      	cmp	r3, #0
 80055d8:	d109      	bne.n	80055ee <HAL_SPI_Receive+0x178>
        {
          hspi->State = HAL_SPI_STATE_READY;
 80055da:	68fb      	ldr	r3, [r7, #12]
 80055dc:	2201      	movs	r2, #1
 80055de:	f883 2051 	strb.w	r2, [r3, #81]	@ 0x51
          __HAL_UNLOCK(hspi);
 80055e2:	68fb      	ldr	r3, [r7, #12]
 80055e4:	2200      	movs	r2, #0
 80055e6:	f883 2050 	strb.w	r2, [r3, #80]	@ 0x50
          return HAL_TIMEOUT;
 80055ea:	2303      	movs	r3, #3
 80055ec:	e058      	b.n	80056a0 <HAL_SPI_Receive+0x22a>
    while (hspi->RxXferCount > 0U)
 80055ee:	68fb      	ldr	r3, [r7, #12]
 80055f0:	8fdb      	ldrh	r3, [r3, #62]	@ 0x3e
 80055f2:	b29b      	uxth	r3, r3
 80055f4:	2b00      	cmp	r3, #0
 80055f6:	d1c4      	bne.n	8005582 <HAL_SPI_Receive+0x10c>
 80055f8:	e038      	b.n	800566c <HAL_SPI_Receive+0x1f6>
  {
    /* Transfer loop */
    while (hspi->RxXferCount > 0U)
    {
      /* Check the RXNE flag */
      if (__HAL_SPI_GET_FLAG(hspi, SPI_FLAG_RXNE))
 80055fa:	68fb      	ldr	r3, [r7, #12]
 80055fc:	681b      	ldr	r3, [r3, #0]
 80055fe:	689b      	ldr	r3, [r3, #8]
 8005600:	f003 0301 	and.w	r3, r3, #1
 8005604:	2b01      	cmp	r3, #1
 8005606:	d113      	bne.n	8005630 <HAL_SPI_Receive+0x1ba>
      {
        *((uint16_t *)hspi->pRxBuffPtr) = (uint16_t)hspi->Instance->DR;
 8005608:	68fb      	ldr	r3, [r7, #12]
 800560a:	681b      	ldr	r3, [r3, #0]
 800560c:	68da      	ldr	r2, [r3, #12]
 800560e:	68fb      	ldr	r3, [r7, #12]
 8005610:	6b9b      	ldr	r3, [r3, #56]	@ 0x38
 8005612:	b292      	uxth	r2, r2
 8005614:	801a      	strh	r2, [r3, #0]
        hspi->pRxBuffPtr += sizeof(uint16_t);
 8005616:	68fb      	ldr	r3, [r7, #12]
 8005618:	6b9b      	ldr	r3, [r3, #56]	@ 0x38
 800561a:	1c9a      	adds	r2, r3, #2
 800561c:	68fb      	ldr	r3, [r7, #12]
 800561e:	639a      	str	r2, [r3, #56]	@ 0x38
        hspi->RxXferCount--;
 8005620:	68fb      	ldr	r3, [r7, #12]
 8005622:	8fdb      	ldrh	r3, [r3, #62]	@ 0x3e
 8005624:	b29b      	uxth	r3, r3
 8005626:	3b01      	subs	r3, #1
 8005628:	b29a      	uxth	r2, r3
 800562a:	68fb      	ldr	r3, [r7, #12]
 800562c:	87da      	strh	r2, [r3, #62]	@ 0x3e
 800562e:	e018      	b.n	8005662 <HAL_SPI_Receive+0x1ec>
      }
      else
      {
        /* Timeout management */
        if ((((HAL_GetTick() - tickstart) >=  Timeout) && (Timeout != HAL_MAX_DELAY)) || (Timeout == 0U))
 8005630:	f7fc fbce 	bl	8001dd0 <HAL_GetTick>
 8005634:	4602      	mov	r2, r0
 8005636:	697b      	ldr	r3, [r7, #20]
 8005638:	1ad3      	subs	r3, r2, r3
 800563a:	683a      	ldr	r2, [r7, #0]
 800563c:	429a      	cmp	r2, r3
 800563e:	d803      	bhi.n	8005648 <HAL_SPI_Receive+0x1d2>
 8005640:	683b      	ldr	r3, [r7, #0]
 8005642:	f1b3 3fff 	cmp.w	r3, #4294967295
 8005646:	d102      	bne.n	800564e <HAL_SPI_Receive+0x1d8>
 8005648:	683b      	ldr	r3, [r7, #0]
 800564a:	2b00      	cmp	r3, #0
 800564c:	d109      	bne.n	8005662 <HAL_SPI_Receive+0x1ec>
        {
          hspi->State = HAL_SPI_STATE_READY;
 800564e:	68fb      	ldr	r3, [r7, #12]
 8005650:	2201      	movs	r2, #1
 8005652:	f883 2051 	strb.w	r2, [r3, #81]	@ 0x51
          __HAL_UNLOCK(hspi);
 8005656:	68fb      	ldr	r3, [r7, #12]
 8005658:	2200      	movs	r2, #0
 800565a:	f883 2050 	strb.w	r2, [r3, #80]	@ 0x50
          return HAL_TIMEOUT;
 800565e:	2303      	movs	r3, #3
 8005660:	e01e      	b.n	80056a0 <HAL_SPI_Receive+0x22a>
    while (hspi->RxXferCount > 0U)
 8005662:	68fb      	ldr	r3, [r7, #12]
 8005664:	8fdb      	ldrh	r3, [r3, #62]	@ 0x3e
 8005666:	b29b      	uxth	r3, r3
 8005668:	2b00      	cmp	r3, #0
 800566a:	d1c6      	bne.n	80055fa <HAL_SPI_Receive+0x184>
    UNUSED(tmpreg);
  }
#endif /* USE_SPI_CRC */

  /* Check the end of the transaction */
  if (SPI_EndRxTransaction(hspi, Timeout, tickstart) != HAL_OK)
 800566c:	697a      	ldr	r2, [r7, #20]
 800566e:	6839      	ldr	r1, [r7, #0]
 8005670:	68f8      	ldr	r0, [r7, #12]
 8005672:	f000 fc91 	bl	8005f98 <SPI_EndRxTransaction>
 8005676:	4603      	mov	r3, r0
 8005678:	2b00      	cmp	r3, #0
 800567a:	d002      	beq.n	8005682 <HAL_SPI_Receive+0x20c>
  {
    hspi->ErrorCode = HAL_SPI_ERROR_FLAG;
 800567c:	68fb      	ldr	r3, [r7, #12]
 800567e:	2220      	movs	r2, #32
 8005680:	655a      	str	r2, [r3, #84]	@ 0x54
    SET_BIT(hspi->ErrorCode, HAL_SPI_ERROR_CRC);
    __HAL_SPI_CLEAR_CRCERRFLAG(hspi);
  }
#endif /* USE_SPI_CRC */

  hspi->State = HAL_SPI_STATE_READY;
 8005682:	68fb      	ldr	r3, [r7, #12]
 8005684:	2201      	movs	r2, #1
 8005686:	f883 2051 	strb.w	r2, [r3, #81]	@ 0x51
  /* Unlock the process */
  __HAL_UNLOCK(hspi);
 800568a:	68fb      	ldr	r3, [r7, #12]
 800568c:	2200      	movs	r2, #0
 800568e:	f883 2050 	strb.w	r2, [r3, #80]	@ 0x50
  if (hspi->ErrorCode != HAL_SPI_ERROR_NONE)
 8005692:	68fb      	ldr	r3, [r7, #12]
 8005694:	6d5b      	ldr	r3, [r3, #84]	@ 0x54
 8005696:	2b00      	cmp	r3, #0
 8005698:	d001      	beq.n	800569e <HAL_SPI_Receive+0x228>
  {
    return HAL_ERROR;
 800569a:	2301      	movs	r3, #1
 800569c:	e000      	b.n	80056a0 <HAL_SPI_Receive+0x22a>
  }
  else
  {
    return HAL_OK;
 800569e:	2300      	movs	r3, #0
  }
}
 80056a0:	4618      	mov	r0, r3
 80056a2:	3718      	adds	r7, #24
 80056a4:	46bd      	mov	sp, r7
 80056a6:	bd80      	pop	{r7, pc}

080056a8 <HAL_SPI_TransmitReceive>:
  * @param  Timeout Timeout duration
  * @retval HAL status
  */
HAL_StatusTypeDef HAL_SPI_TransmitReceive(SPI_HandleTypeDef *hspi, const uint8_t *pTxData, uint8_t *pRxData,
                                          uint16_t Size, uint32_t Timeout)
{
 80056a8:	b580      	push	{r7, lr}
 80056aa:	b08a      	sub	sp, #40	@ 0x28
 80056ac:	af00      	add	r7, sp, #0
 80056ae:	60f8      	str	r0, [r7, #12]
 80056b0:	60b9      	str	r1, [r7, #8]
 80056b2:	607a      	str	r2, [r7, #4]
 80056b4:	807b      	strh	r3, [r7, #2]
#if (USE_SPI_CRC != 0U)
  __IO uint32_t tmpreg = 0U;
#endif /* USE_SPI_CRC */

  /* Variable used to alternate Rx and Tx during transfer */
  uint32_t             txallowed = 1U;
 80056b6:	2301      	movs	r3, #1
 80056b8:	627b      	str	r3, [r7, #36]	@ 0x24

  /* Check Direction parameter */
  assert_param(IS_SPI_DIRECTION_2LINES(hspi->Init.Direction));

  /* Init tickstart for timeout management*/
  tickstart = HAL_GetTick();
 80056ba:	f7fc fb89 	bl	8001dd0 <HAL_GetTick>
 80056be:	6238      	str	r0, [r7, #32]

  /* Init temporary variables */
  tmp_state           = hspi->State;
 80056c0:	68fb      	ldr	r3, [r7, #12]
 80056c2:	f893 3051 	ldrb.w	r3, [r3, #81]	@ 0x51
 80056c6:	77fb      	strb	r3, [r7, #31]
  tmp_mode            = hspi->Init.Mode;
 80056c8:	68fb      	ldr	r3, [r7, #12]
 80056ca:	685b      	ldr	r3, [r3, #4]
 80056cc:	61bb      	str	r3, [r7, #24]
  initial_TxXferCount = Size;
 80056ce:	887b      	ldrh	r3, [r7, #2]
 80056d0:	82fb      	strh	r3, [r7, #22]

  if (!((tmp_state == HAL_SPI_STATE_READY) || \
 80056d2:	7ffb      	ldrb	r3, [r7, #31]
 80056d4:	2b01      	cmp	r3, #1
 80056d6:	d00c      	beq.n	80056f2 <HAL_SPI_TransmitReceive+0x4a>
 80056d8:	69bb      	ldr	r3, [r7, #24]
 80056da:	f5b3 7f82 	cmp.w	r3, #260	@ 0x104
 80056de:	d106      	bne.n	80056ee <HAL_SPI_TransmitReceive+0x46>
        ((tmp_mode == SPI_MODE_MASTER) && (hspi->Init.Direction == SPI_DIRECTION_2LINES) && (tmp_state == HAL_SPI_STATE_BUSY_RX))))
 80056e0:	68fb      	ldr	r3, [r7, #12]
 80056e2:	689b      	ldr	r3, [r3, #8]
 80056e4:	2b00      	cmp	r3, #0
 80056e6:	d102      	bne.n	80056ee <HAL_SPI_TransmitReceive+0x46>
 80056e8:	7ffb      	ldrb	r3, [r7, #31]
 80056ea:	2b04      	cmp	r3, #4
 80056ec:	d001      	beq.n	80056f2 <HAL_SPI_TransmitReceive+0x4a>
  {
    return HAL_BUSY;
 80056ee:	2302      	movs	r3, #2
 80056f0:	e17f      	b.n	80059f2 <HAL_SPI_TransmitReceive+0x34a>
  }

  if ((pTxData == NULL) || (pRxData == NULL) || (Size == 0U))
 80056f2:	68bb      	ldr	r3, [r7, #8]
 80056f4:	2b00      	cmp	r3, #0
 80056f6:	d005      	beq.n	8005704 <HAL_SPI_TransmitReceive+0x5c>
 80056f8:	687b      	ldr	r3, [r7, #4]
 80056fa:	2b00      	cmp	r3, #0
 80056fc:	d002      	beq.n	8005704 <HAL_SPI_TransmitReceive+0x5c>
 80056fe:	887b      	ldrh	r3, [r7, #2]
 8005700:	2b00      	cmp	r3, #0
 8005702:	d101      	bne.n	8005708 <HAL_SPI_TransmitReceive+0x60>
  {
    return HAL_ERROR;
 8005704:	2301      	movs	r3, #1
 8005706:	e174      	b.n	80059f2 <HAL_SPI_TransmitReceive+0x34a>
  }

  /* Process Locked */
  __HAL_LOCK(hspi);
 8005708:	68fb      	ldr	r3, [r7, #12]
 800570a:	f893 3050 	ldrb.w	r3, [r3, #80]	@ 0x50
 800570e:	2b01      	cmp	r3, #1
 8005710:	d101      	bne.n	8005716 <HAL_SPI_TransmitReceive+0x6e>
 8005712:	2302      	movs	r3, #2
 8005714:	e16d      	b.n	80059f2 <HAL_SPI_TransmitReceive+0x34a>
 8005716:	68fb      	ldr	r3, [r7, #12]
 8005718:	2201      	movs	r2, #1
 800571a:	f883 2050 	strb.w	r2, [r3, #80]	@ 0x50

  /* Don't overwrite in case of HAL_SPI_STATE_BUSY_RX */
  if (hspi->State != HAL_SPI_STATE_BUSY_RX)
 800571e:	68fb      	ldr	r3, [r7, #12]
 8005720:	f893 3051 	ldrb.w	r3, [r3, #81]	@ 0x51
 8005724:	b2db      	uxtb	r3, r3
 8005726:	2b04      	cmp	r3, #4
 8005728:	d003      	beq.n	8005732 <HAL_SPI_TransmitReceive+0x8a>
  {
    hspi->State = HAL_SPI_STATE_BUSY_TX_RX;
 800572a:	68fb      	ldr	r3, [r7, #12]
 800572c:	2205      	movs	r2, #5
 800572e:	f883 2051 	strb.w	r2, [r3, #81]	@ 0x51
  }

  /* Set the transaction information */
  hspi->ErrorCode   = HAL_SPI_ERROR_NONE;
 8005732:	68fb      	ldr	r3, [r7, #12]
 8005734:	2200      	movs	r2, #0
 8005736:	655a      	str	r2, [r3, #84]	@ 0x54
  hspi->pRxBuffPtr  = (uint8_t *)pRxData;
 8005738:	68fb      	ldr	r3, [r7, #12]
 800573a:	687a      	ldr	r2, [r7, #4]
 800573c:	639a      	str	r2, [r3, #56]	@ 0x38
  hspi->RxXferCount = Size;
 800573e:	68fb      	ldr	r3, [r7, #12]
 8005740:	887a      	ldrh	r2, [r7, #2]
 8005742:	87da      	strh	r2, [r3, #62]	@ 0x3e
  hspi->RxXferSize  = Size;
 8005744:	68fb      	ldr	r3, [r7, #12]
 8005746:	887a      	ldrh	r2, [r7, #2]
 8005748:	879a      	strh	r2, [r3, #60]	@ 0x3c
  hspi->pTxBuffPtr  = (const uint8_t *)pTxData;
 800574a:	68fb      	ldr	r3, [r7, #12]
 800574c:	68ba      	ldr	r2, [r7, #8]
 800574e:	631a      	str	r2, [r3, #48]	@ 0x30
  hspi->TxXferCount = Size;
 8005750:	68fb      	ldr	r3, [r7, #12]
 8005752:	887a      	ldrh	r2, [r7, #2]
 8005754:	86da      	strh	r2, [r3, #54]	@ 0x36
  hspi->TxXferSize  = Size;
 8005756:	68fb      	ldr	r3, [r7, #12]
 8005758:	887a      	ldrh	r2, [r7, #2]
 800575a:	869a      	strh	r2, [r3, #52]	@ 0x34

  /*Init field not used in handle to zero */
  hspi->RxISR       = NULL;
 800575c:	68fb      	ldr	r3, [r7, #12]
 800575e:	2200      	movs	r2, #0
 8005760:	641a      	str	r2, [r3, #64]	@ 0x40
  hspi->TxISR       = NULL;
 8005762:	68fb      	ldr	r3, [r7, #12]
 8005764:	2200      	movs	r2, #0
 8005766:	645a      	str	r2, [r3, #68]	@ 0x44
    SPI_RESET_CRC(hspi);
  }
#endif /* USE_SPI_CRC */

  /* Check if the SPI is already enabled */
  if ((hspi->Instance->CR1 & SPI_CR1_SPE) != SPI_CR1_SPE)
 8005768:	68fb      	ldr	r3, [r7, #12]
 800576a:	681b      	ldr	r3, [r3, #0]
 800576c:	681b      	ldr	r3, [r3, #0]
 800576e:	f003 0340 	and.w	r3, r3, #64	@ 0x40
 8005772:	2b40      	cmp	r3, #64	@ 0x40
 8005774:	d007      	beq.n	8005786 <HAL_SPI_TransmitReceive+0xde>
  {
    /* Enable SPI peripheral */
    __HAL_SPI_ENABLE(hspi);
 8005776:	68fb      	ldr	r3, [r7, #12]
 8005778:	681b      	ldr	r3, [r3, #0]
 800577a:	681a      	ldr	r2, [r3, #0]
 800577c:	68fb      	ldr	r3, [r7, #12]
 800577e:	681b      	ldr	r3, [r3, #0]
 8005780:	f042 0240 	orr.w	r2, r2, #64	@ 0x40
 8005784:	601a      	str	r2, [r3, #0]
  }

  /* Transmit and Receive data in 16 Bit mode */
  if (hspi->Init.DataSize == SPI_DATASIZE_16BIT)
 8005786:	68fb      	ldr	r3, [r7, #12]
 8005788:	68db      	ldr	r3, [r3, #12]
 800578a:	f5b3 6f00 	cmp.w	r3, #2048	@ 0x800
 800578e:	d17e      	bne.n	800588e <HAL_SPI_TransmitReceive+0x1e6>
  {
    if ((hspi->Init.Mode == SPI_MODE_SLAVE) || (initial_TxXferCount == 0x01U))
 8005790:	68fb      	ldr	r3, [r7, #12]
 8005792:	685b      	ldr	r3, [r3, #4]
 8005794:	2b00      	cmp	r3, #0
 8005796:	d002      	beq.n	800579e <HAL_SPI_TransmitReceive+0xf6>
 8005798:	8afb      	ldrh	r3, [r7, #22]
 800579a:	2b01      	cmp	r3, #1
 800579c:	d16c      	bne.n	8005878 <HAL_SPI_TransmitReceive+0x1d0>
    {
      hspi->Instance->DR = *((const uint16_t *)hspi->pTxBuffPtr);
 800579e:	68fb      	ldr	r3, [r7, #12]
 80057a0:	6b1b      	ldr	r3, [r3, #48]	@ 0x30
 80057a2:	881a      	ldrh	r2, [r3, #0]
 80057a4:	68fb      	ldr	r3, [r7, #12]
 80057a6:	681b      	ldr	r3, [r3, #0]
 80057a8:	60da      	str	r2, [r3, #12]
      hspi->pTxBuffPtr += sizeof(uint16_t);
 80057aa:	68fb      	ldr	r3, [r7, #12]
 80057ac:	6b1b      	ldr	r3, [r3, #48]	@ 0x30
 80057ae:	1c9a      	adds	r2, r3, #2
 80057b0:	68fb      	ldr	r3, [r7, #12]
 80057b2:	631a      	str	r2, [r3, #48]	@ 0x30
      hspi->TxXferCount--;
 80057b4:	68fb      	ldr	r3, [r7, #12]
 80057b6:	8edb      	ldrh	r3, [r3, #54]	@ 0x36
 80057b8:	b29b      	uxth	r3, r3
 80057ba:	3b01      	subs	r3, #1
 80057bc:	b29a      	uxth	r2, r3
 80057be:	68fb      	ldr	r3, [r7, #12]
 80057c0:	86da      	strh	r2, [r3, #54]	@ 0x36
        SET_BIT(hspi->Instance->CR1, SPI_CR1_CRCNEXT);
      }
#endif /* USE_SPI_CRC */

    }
    while ((hspi->TxXferCount > 0U) || (hspi->RxXferCount > 0U))
 80057c2:	e059      	b.n	8005878 <HAL_SPI_TransmitReceive+0x1d0>
    {
      /* Check TXE flag */
      if ((__HAL_SPI_GET_FLAG(hspi, SPI_FLAG_TXE)) && (hspi->TxXferCount > 0U) && (txallowed == 1U))
 80057c4:	68fb      	ldr	r3, [r7, #12]
 80057c6:	681b      	ldr	r3, [r3, #0]
 80057c8:	689b      	ldr	r3, [r3, #8]
 80057ca:	f003 0302 	and.w	r3, r3, #2
 80057ce:	2b02      	cmp	r3, #2
 80057d0:	d11b      	bne.n	800580a <HAL_SPI_TransmitReceive+0x162>
 80057d2:	68fb      	ldr	r3, [r7, #12]
 80057d4:	8edb      	ldrh	r3, [r3, #54]	@ 0x36
 80057d6:	b29b      	uxth	r3, r3
 80057d8:	2b00      	cmp	r3, #0
 80057da:	d016      	beq.n	800580a <HAL_SPI_TransmitReceive+0x162>
 80057dc:	6a7b      	ldr	r3, [r7, #36]	@ 0x24
 80057de:	2b01      	cmp	r3, #1
 80057e0:	d113      	bne.n	800580a <HAL_SPI_TransmitReceive+0x162>
      {
        hspi->Instance->DR = *((const uint16_t *)hspi->pTxBuffPtr);
 80057e2:	68fb      	ldr	r3, [r7, #12]
 80057e4:	6b1b      	ldr	r3, [r3, #48]	@ 0x30
 80057e6:	881a      	ldrh	r2, [r3, #0]
 80057e8:	68fb      	ldr	r3, [r7, #12]
 80057ea:	681b      	ldr	r3, [r3, #0]
 80057ec:	60da      	str	r2, [r3, #12]
        hspi->pTxBuffPtr += sizeof(uint16_t);
 80057ee:	68fb      	ldr	r3, [r7, #12]
 80057f0:	6b1b      	ldr	r3, [r3, #48]	@ 0x30
 80057f2:	1c9a      	adds	r2, r3, #2
 80057f4:	68fb      	ldr	r3, [r7, #12]
 80057f6:	631a      	str	r2, [r3, #48]	@ 0x30
        hspi->TxXferCount--;
 80057f8:	68fb      	ldr	r3, [r7, #12]
 80057fa:	8edb      	ldrh	r3, [r3, #54]	@ 0x36
 80057fc:	b29b      	uxth	r3, r3
 80057fe:	3b01      	subs	r3, #1
 8005800:	b29a      	uxth	r2, r3
 8005802:	68fb      	ldr	r3, [r7, #12]
 8005804:	86da      	strh	r2, [r3, #54]	@ 0x36
        /* Next Data is a reception (Rx). Tx not allowed */
        txallowed = 0U;
 8005806:	2300      	movs	r3, #0
 8005808:	627b      	str	r3, [r7, #36]	@ 0x24
        }
#endif /* USE_SPI_CRC */
      }

      /* Check RXNE flag */
      if ((__HAL_SPI_GET_FLAG(hspi, SPI_FLAG_RXNE)) && (hspi->RxXferCount > 0U))
 800580a:	68fb      	ldr	r3, [r7, #12]
 800580c:	681b      	ldr	r3, [r3, #0]
 800580e:	689b      	ldr	r3, [r3, #8]
 8005810:	f003 0301 	and.w	r3, r3, #1
 8005814:	2b01      	cmp	r3, #1
 8005816:	d119      	bne.n	800584c <HAL_SPI_TransmitReceive+0x1a4>
 8005818:	68fb      	ldr	r3, [r7, #12]
 800581a:	8fdb      	ldrh	r3, [r3, #62]	@ 0x3e
 800581c:	b29b      	uxth	r3, r3
 800581e:	2b00      	cmp	r3, #0
 8005820:	d014      	beq.n	800584c <HAL_SPI_TransmitReceive+0x1a4>
      {
        *((uint16_t *)hspi->pRxBuffPtr) = (uint16_t)hspi->Instance->DR;
 8005822:	68fb      	ldr	r3, [r7, #12]
 8005824:	681b      	ldr	r3, [r3, #0]
 8005826:	68da      	ldr	r2, [r3, #12]
 8005828:	68fb      	ldr	r3, [r7, #12]
 800582a:	6b9b      	ldr	r3, [r3, #56]	@ 0x38
 800582c:	b292      	uxth	r2, r2
 800582e:	801a      	strh	r2, [r3, #0]
        hspi->pRxBuffPtr += sizeof(uint16_t);
 8005830:	68fb      	ldr	r3, [r7, #12]
 8005832:	6b9b      	ldr	r3, [r3, #56]	@ 0x38
 8005834:	1c9a      	adds	r2, r3, #2
 8005836:	68fb      	ldr	r3, [r7, #12]
 8005838:	639a      	str	r2, [r3, #56]	@ 0x38
        hspi->RxXferCount--;
 800583a:	68fb      	ldr	r3, [r7, #12]
 800583c:	8fdb      	ldrh	r3, [r3, #62]	@ 0x3e
 800583e:	b29b      	uxth	r3, r3
 8005840:	3b01      	subs	r3, #1
 8005842:	b29a      	uxth	r2, r3
 8005844:	68fb      	ldr	r3, [r7, #12]
 8005846:	87da      	strh	r2, [r3, #62]	@ 0x3e
        /* Next Data is a Transmission (Tx). Tx is allowed */
        txallowed = 1U;
 8005848:	2301      	movs	r3, #1
 800584a:	627b      	str	r3, [r7, #36]	@ 0x24
      }
      if (((HAL_GetTick() - tickstart) >=  Timeout) && (Timeout != HAL_MAX_DELAY))
 800584c:	f7fc fac0 	bl	8001dd0 <HAL_GetTick>
 8005850:	4602      	mov	r2, r0
 8005852:	6a3b      	ldr	r3, [r7, #32]
 8005854:	1ad3      	subs	r3, r2, r3
 8005856:	6b3a      	ldr	r2, [r7, #48]	@ 0x30
 8005858:	429a      	cmp	r2, r3
 800585a:	d80d      	bhi.n	8005878 <HAL_SPI_TransmitReceive+0x1d0>
 800585c:	6b3b      	ldr	r3, [r7, #48]	@ 0x30
 800585e:	f1b3 3fff 	cmp.w	r3, #4294967295
 8005862:	d009      	beq.n	8005878 <HAL_SPI_TransmitReceive+0x1d0>
      {
        hspi->State = HAL_SPI_STATE_READY;
 8005864:	68fb      	ldr	r3, [r7, #12]
 8005866:	2201      	movs	r2, #1
 8005868:	f883 2051 	strb.w	r2, [r3, #81]	@ 0x51
        __HAL_UNLOCK(hspi);
 800586c:	68fb      	ldr	r3, [r7, #12]
 800586e:	2200      	movs	r2, #0
 8005870:	f883 2050 	strb.w	r2, [r3, #80]	@ 0x50
        return HAL_TIMEOUT;
 8005874:	2303      	movs	r3, #3
 8005876:	e0bc      	b.n	80059f2 <HAL_SPI_TransmitReceive+0x34a>
    while ((hspi->TxXferCount > 0U) || (hspi->RxXferCount > 0U))
 8005878:	68fb      	ldr	r3, [r7, #12]
 800587a:	8edb      	ldrh	r3, [r3, #54]	@ 0x36
 800587c:	b29b      	uxth	r3, r3
 800587e:	2b00      	cmp	r3, #0
 8005880:	d1a0      	bne.n	80057c4 <HAL_SPI_TransmitReceive+0x11c>
 8005882:	68fb      	ldr	r3, [r7, #12]
 8005884:	8fdb      	ldrh	r3, [r3, #62]	@ 0x3e
 8005886:	b29b      	uxth	r3, r3
 8005888:	2b00      	cmp	r3, #0
 800588a:	d19b      	bne.n	80057c4 <HAL_SPI_TransmitReceive+0x11c>
 800588c:	e082      	b.n	8005994 <HAL_SPI_TransmitReceive+0x2ec>
    }
  }
  /* Transmit and Receive data in 8 Bit mode */
  else
  {
    if ((hspi->Init.Mode == SPI_MODE_SLAVE) || (initial_TxXferCount == 0x01U))
 800588e:	68fb      	ldr	r3, [r7, #12]
 8005890:	685b      	ldr	r3, [r3, #4]
 8005892:	2b00      	cmp	r3, #0
 8005894:	d002      	beq.n	800589c <HAL_SPI_TransmitReceive+0x1f4>
 8005896:	8afb      	ldrh	r3, [r7, #22]
 8005898:	2b01      	cmp	r3, #1
 800589a:	d171      	bne.n	8005980 <HAL_SPI_TransmitReceive+0x2d8>
    {
      *((__IO uint8_t *)&hspi->Instance->DR) = *((const uint8_t *)hspi->pTxBuffPtr);
 800589c:	68fb      	ldr	r3, [r7, #12]
 800589e:	6b1a      	ldr	r2, [r3, #48]	@ 0x30
 80058a0:	68fb      	ldr	r3, [r7, #12]
 80058a2:	681b      	ldr	r3, [r3, #0]
 80058a4:	330c      	adds	r3, #12
 80058a6:	7812      	ldrb	r2, [r2, #0]
 80058a8:	701a      	strb	r2, [r3, #0]
      hspi->pTxBuffPtr += sizeof(uint8_t);
 80058aa:	68fb      	ldr	r3, [r7, #12]
 80058ac:	6b1b      	ldr	r3, [r3, #48]	@ 0x30
 80058ae:	1c5a      	adds	r2, r3, #1
 80058b0:	68fb      	ldr	r3, [r7, #12]
 80058b2:	631a      	str	r2, [r3, #48]	@ 0x30
      hspi->TxXferCount--;
 80058b4:	68fb      	ldr	r3, [r7, #12]
 80058b6:	8edb      	ldrh	r3, [r3, #54]	@ 0x36
 80058b8:	b29b      	uxth	r3, r3
 80058ba:	3b01      	subs	r3, #1
 80058bc:	b29a      	uxth	r2, r3
 80058be:	68fb      	ldr	r3, [r7, #12]
 80058c0:	86da      	strh	r2, [r3, #54]	@ 0x36
      {
        SET_BIT(hspi->Instance->CR1, SPI_CR1_CRCNEXT);
      }
#endif /* USE_SPI_CRC */
    }
    while ((hspi->TxXferCount > 0U) || (hspi->RxXferCount > 0U))
 80058c2:	e05d      	b.n	8005980 <HAL_SPI_TransmitReceive+0x2d8>
    {
      /* Check TXE flag */
      if ((__HAL_SPI_GET_FLAG(hspi, SPI_FLAG_TXE)) && (hspi->TxXferCount > 0U) && (txallowed == 1U))
 80058c4:	68fb      	ldr	r3, [r7, #12]
 80058c6:	681b      	ldr	r3, [r3, #0]
 80058c8:	689b      	ldr	r3, [r3, #8]
 80058ca:	f003 0302 	and.w	r3, r3, #2
 80058ce:	2b02      	cmp	r3, #2
 80058d0:	d11c      	bne.n	800590c <HAL_SPI_TransmitReceive+0x264>
 80058d2:	68fb      	ldr	r3, [r7, #12]
 80058d4:	8edb      	ldrh	r3, [r3, #54]	@ 0x36
 80058d6:	b29b      	uxth	r3, r3
 80058d8:	2b00      	cmp	r3, #0
 80058da:	d017      	beq.n	800590c <HAL_SPI_TransmitReceive+0x264>
 80058dc:	6a7b      	ldr	r3, [r7, #36]	@ 0x24
 80058de:	2b01      	cmp	r3, #1
 80058e0:	d114      	bne.n	800590c <HAL_SPI_TransmitReceive+0x264>
      {
        *(__IO uint8_t *)&hspi->Instance->DR = *((const uint8_t *)hspi->pTxBuffPtr);
 80058e2:	68fb      	ldr	r3, [r7, #12]
 80058e4:	6b1a      	ldr	r2, [r3, #48]	@ 0x30
 80058e6:	68fb      	ldr	r3, [r7, #12]
 80058e8:	681b      	ldr	r3, [r3, #0]
 80058ea:	330c      	adds	r3, #12
 80058ec:	7812      	ldrb	r2, [r2, #0]
 80058ee:	701a      	strb	r2, [r3, #0]
        hspi->pTxBuffPtr++;
 80058f0:	68fb      	ldr	r3, [r7, #12]
 80058f2:	6b1b      	ldr	r3, [r3, #48]	@ 0x30
 80058f4:	1c5a      	adds	r2, r3, #1
 80058f6:	68fb      	ldr	r3, [r7, #12]
 80058f8:	631a      	str	r2, [r3, #48]	@ 0x30
        hspi->TxXferCount--;
 80058fa:	68fb      	ldr	r3, [r7, #12]
 80058fc:	8edb      	ldrh	r3, [r3, #54]	@ 0x36
 80058fe:	b29b      	uxth	r3, r3
 8005900:	3b01      	subs	r3, #1
 8005902:	b29a      	uxth	r2, r3
 8005904:	68fb      	ldr	r3, [r7, #12]
 8005906:	86da      	strh	r2, [r3, #54]	@ 0x36
        /* Next Data is a reception (Rx). Tx not allowed */
        txallowed = 0U;
 8005908:	2300      	movs	r3, #0
 800590a:	627b      	str	r3, [r7, #36]	@ 0x24
        }
#endif /* USE_SPI_CRC */
      }

      /* Wait until RXNE flag is reset */
      if ((__HAL_SPI_GET_FLAG(hspi, SPI_FLAG_RXNE)) && (hspi->RxXferCount > 0U))
 800590c:	68fb      	ldr	r3, [r7, #12]
 800590e:	681b      	ldr	r3, [r3, #0]
 8005910:	689b      	ldr	r3, [r3, #8]
 8005912:	f003 0301 	and.w	r3, r3, #1
 8005916:	2b01      	cmp	r3, #1
 8005918:	d119      	bne.n	800594e <HAL_SPI_TransmitReceive+0x2a6>
 800591a:	68fb      	ldr	r3, [r7, #12]
 800591c:	8fdb      	ldrh	r3, [r3, #62]	@ 0x3e
 800591e:	b29b      	uxth	r3, r3
 8005920:	2b00      	cmp	r3, #0
 8005922:	d014      	beq.n	800594e <HAL_SPI_TransmitReceive+0x2a6>
      {
        (*(uint8_t *)hspi->pRxBuffPtr) = hspi->Instance->DR;
 8005924:	68fb      	ldr	r3, [r7, #12]
 8005926:	681b      	ldr	r3, [r3, #0]
 8005928:	68da      	ldr	r2, [r3, #12]
 800592a:	68fb      	ldr	r3, [r7, #12]
 800592c:	6b9b      	ldr	r3, [r3, #56]	@ 0x38
 800592e:	b2d2      	uxtb	r2, r2
 8005930:	701a      	strb	r2, [r3, #0]
        hspi->pRxBuffPtr++;
 8005932:	68fb      	ldr	r3, [r7, #12]
 8005934:	6b9b      	ldr	r3, [r3, #56]	@ 0x38
 8005936:	1c5a      	adds	r2, r3, #1
 8005938:	68fb      	ldr	r3, [r7, #12]
 800593a:	639a      	str	r2, [r3, #56]	@ 0x38
        hspi->RxXferCount--;
 800593c:	68fb      	ldr	r3, [r7, #12]
 800593e:	8fdb      	ldrh	r3, [r3, #62]	@ 0x3e
 8005940:	b29b      	uxth	r3, r3
 8005942:	3b01      	subs	r3, #1
 8005944:	b29a      	uxth	r2, r3
 8005946:	68fb      	ldr	r3, [r7, #12]
 8005948:	87da      	strh	r2, [r3, #62]	@ 0x3e
        /* Next Data is a Transmission (Tx). Tx is allowed */
        txallowed = 1U;
 800594a:	2301      	movs	r3, #1
 800594c:	627b      	str	r3, [r7, #36]	@ 0x24
      }
      if ((((HAL_GetTick() - tickstart) >=  Timeout) && ((Timeout != HAL_MAX_DELAY))) || (Timeout == 0U))
 800594e:	f7fc fa3f 	bl	8001dd0 <HAL_GetTick>
 8005952:	4602      	mov	r2, r0
 8005954:	6a3b      	ldr	r3, [r7, #32]
 8005956:	1ad3      	subs	r3, r2, r3
 8005958:	6b3a      	ldr	r2, [r7, #48]	@ 0x30
 800595a:	429a      	cmp	r2, r3
 800595c:	d803      	bhi.n	8005966 <HAL_SPI_TransmitReceive+0x2be>
 800595e:	6b3b      	ldr	r3, [r7, #48]	@ 0x30
 8005960:	f1b3 3fff 	cmp.w	r3, #4294967295
 8005964:	d102      	bne.n	800596c <HAL_SPI_TransmitReceive+0x2c4>
 8005966:	6b3b      	ldr	r3, [r7, #48]	@ 0x30
 8005968:	2b00      	cmp	r3, #0
 800596a:	d109      	bne.n	8005980 <HAL_SPI_TransmitReceive+0x2d8>
      {
        hspi->State = HAL_SPI_STATE_READY;
 800596c:	68fb      	ldr	r3, [r7, #12]
 800596e:	2201      	movs	r2, #1
 8005970:	f883 2051 	strb.w	r2, [r3, #81]	@ 0x51
        __HAL_UNLOCK(hspi);
 8005974:	68fb      	ldr	r3, [r7, #12]
 8005976:	2200      	movs	r2, #0
 8005978:	f883 2050 	strb.w	r2, [r3, #80]	@ 0x50
        return HAL_TIMEOUT;
 800597c:	2303      	movs	r3, #3
 800597e:	e038      	b.n	80059f2 <HAL_SPI_TransmitReceive+0x34a>
    while ((hspi->TxXferCount > 0U) || (hspi->RxXferCount > 0U))
 8005980:	68fb      	ldr	r3, [r7, #12]
 8005982:	8edb      	ldrh	r3, [r3, #54]	@ 0x36
 8005984:	b29b      	uxth	r3, r3
 8005986:	2b00      	cmp	r3, #0
 8005988:	d19c      	bne.n	80058c4 <HAL_SPI_TransmitReceive+0x21c>
 800598a:	68fb      	ldr	r3, [r7, #12]
 800598c:	8fdb      	ldrh	r3, [r3, #62]	@ 0x3e
 800598e:	b29b      	uxth	r3, r3
 8005990:	2b00      	cmp	r3, #0
 8005992:	d197      	bne.n	80058c4 <HAL_SPI_TransmitReceive+0x21c>
    return HAL_ERROR;
  }
#endif /* USE_SPI_CRC */

  /* Check the end of the transaction */
  if (SPI_EndRxTxTransaction(hspi, Timeout, tickstart) != HAL_OK)
 8005994:	6a3a      	ldr	r2, [r7, #32]
 8005996:	6b39      	ldr	r1, [r7, #48]	@ 0x30
 8005998:	68f8      	ldr	r0, [r7, #12]
 800599a:	f000 fb63 	bl	8006064 <SPI_EndRxTxTransaction>
 800599e:	4603      	mov	r3, r0
 80059a0:	2b00      	cmp	r3, #0
 80059a2:	d008      	beq.n	80059b6 <HAL_SPI_TransmitReceive+0x30e>
  {
    hspi->ErrorCode = HAL_SPI_ERROR_FLAG;
 80059a4:	68fb      	ldr	r3, [r7, #12]
 80059a6:	2220      	movs	r2, #32
 80059a8:	655a      	str	r2, [r3, #84]	@ 0x54
    __HAL_UNLOCK(hspi);
 80059aa:	68fb      	ldr	r3, [r7, #12]
 80059ac:	2200      	movs	r2, #0
 80059ae:	f883 2050 	strb.w	r2, [r3, #80]	@ 0x50
    return HAL_ERROR;
 80059b2:	2301      	movs	r3, #1
 80059b4:	e01d      	b.n	80059f2 <HAL_SPI_TransmitReceive+0x34a>
  }

  /* Clear overrun flag in 2 Lines communication mode because received is not read */
  if (hspi->Init.Direction == SPI_DIRECTION_2LINES)
 80059b6:	68fb      	ldr	r3, [r7, #12]
 80059b8:	689b      	ldr	r3, [r3, #8]
 80059ba:	2b00      	cmp	r3, #0
 80059bc:	d10a      	bne.n	80059d4 <HAL_SPI_TransmitReceive+0x32c>
  {
    __HAL_SPI_CLEAR_OVRFLAG(hspi);
 80059be:	2300      	movs	r3, #0
 80059c0:	613b      	str	r3, [r7, #16]
 80059c2:	68fb      	ldr	r3, [r7, #12]
 80059c4:	681b      	ldr	r3, [r3, #0]
 80059c6:	68db      	ldr	r3, [r3, #12]
 80059c8:	613b      	str	r3, [r7, #16]
 80059ca:	68fb      	ldr	r3, [r7, #12]
 80059cc:	681b      	ldr	r3, [r3, #0]
 80059ce:	689b      	ldr	r3, [r3, #8]
 80059d0:	613b      	str	r3, [r7, #16]
 80059d2:	693b      	ldr	r3, [r7, #16]
  }


  hspi->State = HAL_SPI_STATE_READY;
 80059d4:	68fb      	ldr	r3, [r7, #12]
 80059d6:	2201      	movs	r2, #1
 80059d8:	f883 2051 	strb.w	r2, [r3, #81]	@ 0x51
  /* Unlock the process */
  __HAL_UNLOCK(hspi);
 80059dc:	68fb      	ldr	r3, [r7, #12]
 80059de:	2200      	movs	r2, #0
 80059e0:	f883 2050 	strb.w	r2, [r3, #80]	@ 0x50

  if (hspi->ErrorCode != HAL_SPI_ERROR_NONE)
 80059e4:	68fb      	ldr	r3, [r7, #12]
 80059e6:	6d5b      	ldr	r3, [r3, #84]	@ 0x54
 80059e8:	2b00      	cmp	r3, #0
 80059ea:	d001      	beq.n	80059f0 <HAL_SPI_TransmitReceive+0x348>
  {
    return HAL_ERROR;
 80059ec:	2301      	movs	r3, #1
 80059ee:	e000      	b.n	80059f2 <HAL_SPI_TransmitReceive+0x34a>
  }
  else
  {
    return HAL_OK;
 80059f0:	2300      	movs	r3, #0
  }
}
 80059f2:	4618      	mov	r0, r3
 80059f4:	3728      	adds	r7, #40	@ 0x28
 80059f6:	46bd      	mov	sp, r7
 80059f8:	bd80      	pop	{r7, pc}
	...

080059fc <HAL_SPI_Transmit_DMA>:
  * @param  pData pointer to data buffer
  * @param  Size amount of data to be sent
  * @retval HAL status
  */
HAL_StatusTypeDef HAL_SPI_Transmit_DMA(SPI_HandleTypeDef *hspi, const uint8_t *pData, uint16_t Size)
{
 80059fc:	b580      	push	{r7, lr}
 80059fe:	b084      	sub	sp, #16
 8005a00:	af00      	add	r7, sp, #0
 8005a02:	60f8      	str	r0, [r7, #12]
 8005a04:	60b9      	str	r1, [r7, #8]
 8005a06:	4613      	mov	r3, r2
 8005a08:	80fb      	strh	r3, [r7, #6]
  assert_param(IS_SPI_DMA_HANDLE(hspi->hdmatx));

  /* Check Direction parameter */
  assert_param(IS_SPI_DIRECTION_2LINES_OR_1LINE(hspi->Init.Direction));

  if (hspi->State != HAL_SPI_STATE_READY)
 8005a0a:	68fb      	ldr	r3, [r7, #12]
 8005a0c:	f893 3051 	ldrb.w	r3, [r3, #81]	@ 0x51
 8005a10:	b2db      	uxtb	r3, r3
 8005a12:	2b01      	cmp	r3, #1
 8005a14:	d001      	beq.n	8005a1a <HAL_SPI_Transmit_DMA+0x1e>
  {
    return HAL_BUSY;
 8005a16:	2302      	movs	r3, #2
 8005a18:	e097      	b.n	8005b4a <HAL_SPI_Transmit_DMA+0x14e>
  }

  if ((pData == NULL) || (Size == 0U))
 8005a1a:	68bb      	ldr	r3, [r7, #8]
 8005a1c:	2b00      	cmp	r3, #0
 8005a1e:	d002      	beq.n	8005a26 <HAL_SPI_Transmit_DMA+0x2a>
 8005a20:	88fb      	ldrh	r3, [r7, #6]
 8005a22:	2b00      	cmp	r3, #0
 8005a24:	d101      	bne.n	8005a2a <HAL_SPI_Transmit_DMA+0x2e>
  {
    return HAL_ERROR;
 8005a26:	2301      	movs	r3, #1
 8005a28:	e08f      	b.n	8005b4a <HAL_SPI_Transmit_DMA+0x14e>
  }

  /* Process Locked */
  __HAL_LOCK(hspi);
 8005a2a:	68fb      	ldr	r3, [r7, #12]
 8005a2c:	f893 3050 	ldrb.w	r3, [r3, #80]	@ 0x50
 8005a30:	2b01      	cmp	r3, #1
 8005a32:	d101      	bne.n	8005a38 <HAL_SPI_Transmit_DMA+0x3c>
 8005a34:	2302      	movs	r3, #2
 8005a36:	e088      	b.n	8005b4a <HAL_SPI_Transmit_DMA+0x14e>
 8005a38:	68fb      	ldr	r3, [r7, #12]
 8005a3a:	2201      	movs	r2, #1
 8005a3c:	f883 2050 	strb.w	r2, [r3, #80]	@ 0x50

  /* Set the transaction information */
  hspi->State       = HAL_SPI_STATE_BUSY_TX;
 8005a40:	68fb      	ldr	r3, [r7, #12]
 8005a42:	2203      	movs	r2, #3
 8005a44:	f883 2051 	strb.w	r2, [r3, #81]	@ 0x51
  hspi->ErrorCode   = HAL_SPI_ERROR_NONE;
 8005a48:	68fb      	ldr	r3, [r7, #12]
 8005a4a:	2200      	movs	r2, #0
 8005a4c:	655a      	str	r2, [r3, #84]	@ 0x54
  hspi->pTxBuffPtr  = (const uint8_t *)pData;
 8005a4e:	68fb      	ldr	r3, [r7, #12]
 8005a50:	68ba      	ldr	r2, [r7, #8]
 8005a52:	631a      	str	r2, [r3, #48]	@ 0x30
  hspi->TxXferSize  = Size;
 8005a54:	68fb      	ldr	r3, [r7, #12]
 8005a56:	88fa      	ldrh	r2, [r7, #6]
 8005a58:	869a      	strh	r2, [r3, #52]	@ 0x34
  hspi->TxXferCount = Size;
 8005a5a:	68fb      	ldr	r3, [r7, #12]
 8005a5c:	88fa      	ldrh	r2, [r7, #6]
 8005a5e:	86da      	strh	r2, [r3, #54]	@ 0x36

  /* Init field not used in handle to zero */
  hspi->pRxBuffPtr  = (uint8_t *)NULL;
 8005a60:	68fb      	ldr	r3, [r7, #12]
 8005a62:	2200      	movs	r2, #0
 8005a64:	639a      	str	r2, [r3, #56]	@ 0x38
  hspi->TxISR       = NULL;
 8005a66:	68fb      	ldr	r3, [r7, #12]
 8005a68:	2200      	movs	r2, #0
 8005a6a:	645a      	str	r2, [r3, #68]	@ 0x44
  hspi->RxISR       = NULL;
 8005a6c:	68fb      	ldr	r3, [r7, #12]
 8005a6e:	2200      	movs	r2, #0
 8005a70:	641a      	str	r2, [r3, #64]	@ 0x40
  hspi->RxXferSize  = 0U;
 8005a72:	68fb      	ldr	r3, [r7, #12]
 8005a74:	2200      	movs	r2, #0
 8005a76:	879a      	strh	r2, [r3, #60]	@ 0x3c
  hspi->RxXferCount = 0U;
 8005a78:	68fb      	ldr	r3, [r7, #12]
 8005a7a:	2200      	movs	r2, #0
 8005a7c:	87da      	strh	r2, [r3, #62]	@ 0x3e

  /* Configure communication direction : 1Line */
  if (hspi->Init.Direction == SPI_DIRECTION_1LINE)
 8005a7e:	68fb      	ldr	r3, [r7, #12]
 8005a80:	689b      	ldr	r3, [r3, #8]
 8005a82:	f5b3 4f00 	cmp.w	r3, #32768	@ 0x8000
 8005a86:	d10f      	bne.n	8005aa8 <HAL_SPI_Transmit_DMA+0xac>
  {
    /* Disable SPI Peripheral before set 1Line direction (BIDIOE bit) */
    __HAL_SPI_DISABLE(hspi);
 8005a88:	68fb      	ldr	r3, [r7, #12]
 8005a8a:	681b      	ldr	r3, [r3, #0]
 8005a8c:	681a      	ldr	r2, [r3, #0]
 8005a8e:	68fb      	ldr	r3, [r7, #12]
 8005a90:	681b      	ldr	r3, [r3, #0]
 8005a92:	f022 0240 	bic.w	r2, r2, #64	@ 0x40
 8005a96:	601a      	str	r2, [r3, #0]
    SPI_1LINE_TX(hspi);
 8005a98:	68fb      	ldr	r3, [r7, #12]
 8005a9a:	681b      	ldr	r3, [r3, #0]
 8005a9c:	681a      	ldr	r2, [r3, #0]
 8005a9e:	68fb      	ldr	r3, [r7, #12]
 8005aa0:	681b      	ldr	r3, [r3, #0]
 8005aa2:	f442 4280 	orr.w	r2, r2, #16384	@ 0x4000
 8005aa6:	601a      	str	r2, [r3, #0]
    SPI_RESET_CRC(hspi);
  }
#endif /* USE_SPI_CRC */

  /* Set the SPI TxDMA Half transfer complete callback */
  hspi->hdmatx->XferHalfCpltCallback = SPI_DMAHalfTransmitCplt;
 8005aa8:	68fb      	ldr	r3, [r7, #12]
 8005aaa:	6c9b      	ldr	r3, [r3, #72]	@ 0x48
 8005aac:	4a29      	ldr	r2, [pc, #164]	@ (8005b54 <HAL_SPI_Transmit_DMA+0x158>)
 8005aae:	641a      	str	r2, [r3, #64]	@ 0x40

  /* Set the SPI TxDMA transfer complete callback */
  hspi->hdmatx->XferCpltCallback = SPI_DMATransmitCplt;
 8005ab0:	68fb      	ldr	r3, [r7, #12]
 8005ab2:	6c9b      	ldr	r3, [r3, #72]	@ 0x48
 8005ab4:	4a28      	ldr	r2, [pc, #160]	@ (8005b58 <HAL_SPI_Transmit_DMA+0x15c>)
 8005ab6:	63da      	str	r2, [r3, #60]	@ 0x3c

  /* Set the DMA error callback */
  hspi->hdmatx->XferErrorCallback = SPI_DMAError;
 8005ab8:	68fb      	ldr	r3, [r7, #12]
 8005aba:	6c9b      	ldr	r3, [r3, #72]	@ 0x48
 8005abc:	4a27      	ldr	r2, [pc, #156]	@ (8005b5c <HAL_SPI_Transmit_DMA+0x160>)
 8005abe:	64da      	str	r2, [r3, #76]	@ 0x4c

  /* Set the DMA AbortCpltCallback */
  hspi->hdmatx->XferAbortCallback = NULL;
 8005ac0:	68fb      	ldr	r3, [r7, #12]
 8005ac2:	6c9b      	ldr	r3, [r3, #72]	@ 0x48
 8005ac4:	2200      	movs	r2, #0
 8005ac6:	651a      	str	r2, [r3, #80]	@ 0x50

  /* Enable the Tx DMA Stream/Channel */
  if (HAL_OK != HAL_DMA_Start_IT(hspi->hdmatx, (uint32_t)hspi->pTxBuffPtr, (uint32_t)&hspi->Instance->DR,
 8005ac8:	68fb      	ldr	r3, [r7, #12]
 8005aca:	6c98      	ldr	r0, [r3, #72]	@ 0x48
 8005acc:	68fb      	ldr	r3, [r7, #12]
 8005ace:	6b1b      	ldr	r3, [r3, #48]	@ 0x30
 8005ad0:	4619      	mov	r1, r3
 8005ad2:	68fb      	ldr	r3, [r7, #12]
 8005ad4:	681b      	ldr	r3, [r3, #0]
 8005ad6:	330c      	adds	r3, #12
 8005ad8:	461a      	mov	r2, r3
                                 hspi->TxXferCount))
 8005ada:	68fb      	ldr	r3, [r7, #12]
 8005adc:	8edb      	ldrh	r3, [r3, #54]	@ 0x36
 8005ade:	b29b      	uxth	r3, r3
  if (HAL_OK != HAL_DMA_Start_IT(hspi->hdmatx, (uint32_t)hspi->pTxBuffPtr, (uint32_t)&hspi->Instance->DR,
 8005ae0:	f7fd f802 	bl	8002ae8 <HAL_DMA_Start_IT>
 8005ae4:	4603      	mov	r3, r0
 8005ae6:	2b00      	cmp	r3, #0
 8005ae8:	d00b      	beq.n	8005b02 <HAL_SPI_Transmit_DMA+0x106>
  {
    /* Update SPI error code */
    SET_BIT(hspi->ErrorCode, HAL_SPI_ERROR_DMA);
 8005aea:	68fb      	ldr	r3, [r7, #12]
 8005aec:	6d5b      	ldr	r3, [r3, #84]	@ 0x54
 8005aee:	f043 0210 	orr.w	r2, r3, #16
 8005af2:	68fb      	ldr	r3, [r7, #12]
 8005af4:	655a      	str	r2, [r3, #84]	@ 0x54
    /* Process Unlocked */
    __HAL_UNLOCK(hspi);
 8005af6:	68fb      	ldr	r3, [r7, #12]
 8005af8:	2200      	movs	r2, #0
 8005afa:	f883 2050 	strb.w	r2, [r3, #80]	@ 0x50
    return HAL_ERROR;
 8005afe:	2301      	movs	r3, #1
 8005b00:	e023      	b.n	8005b4a <HAL_SPI_Transmit_DMA+0x14e>
  }

  /* Check if the SPI is already enabled */
  if ((hspi->Instance->CR1 & SPI_CR1_SPE) != SPI_CR1_SPE)
 8005b02:	68fb      	ldr	r3, [r7, #12]
 8005b04:	681b      	ldr	r3, [r3, #0]
 8005b06:	681b      	ldr	r3, [r3, #0]
 8005b08:	f003 0340 	and.w	r3, r3, #64	@ 0x40
 8005b0c:	2b40      	cmp	r3, #64	@ 0x40
 8005b0e:	d007      	beq.n	8005b20 <HAL_SPI_Transmit_DMA+0x124>
  {
    /* Enable SPI peripheral */
    __HAL_SPI_ENABLE(hspi);
 8005b10:	68fb      	ldr	r3, [r7, #12]
 8005b12:	681b      	ldr	r3, [r3, #0]
 8005b14:	681a      	ldr	r2, [r3, #0]
 8005b16:	68fb      	ldr	r3, [r7, #12]
 8005b18:	681b      	ldr	r3, [r3, #0]
 8005b1a:	f042 0240 	orr.w	r2, r2, #64	@ 0x40
 8005b1e:	601a      	str	r2, [r3, #0]
  }

  /* Process Unlocked */
  __HAL_UNLOCK(hspi);
 8005b20:	68fb      	ldr	r3, [r7, #12]
 8005b22:	2200      	movs	r2, #0
 8005b24:	f883 2050 	strb.w	r2, [r3, #80]	@ 0x50

  /* Enable the SPI Error Interrupt Bit */
  __HAL_SPI_ENABLE_IT(hspi, (SPI_IT_ERR));
 8005b28:	68fb      	ldr	r3, [r7, #12]
 8005b2a:	681b      	ldr	r3, [r3, #0]
 8005b2c:	685a      	ldr	r2, [r3, #4]
 8005b2e:	68fb      	ldr	r3, [r7, #12]
 8005b30:	681b      	ldr	r3, [r3, #0]
 8005b32:	f042 0220 	orr.w	r2, r2, #32
 8005b36:	605a      	str	r2, [r3, #4]

  /* Enable Tx DMA Request */
  SET_BIT(hspi->Instance->CR2, SPI_CR2_TXDMAEN);
 8005b38:	68fb      	ldr	r3, [r7, #12]
 8005b3a:	681b      	ldr	r3, [r3, #0]
 8005b3c:	685a      	ldr	r2, [r3, #4]
 8005b3e:	68fb      	ldr	r3, [r7, #12]
 8005b40:	681b      	ldr	r3, [r3, #0]
 8005b42:	f042 0202 	orr.w	r2, r2, #2
 8005b46:	605a      	str	r2, [r3, #4]

  return HAL_OK;
 8005b48:	2300      	movs	r3, #0
}
 8005b4a:	4618      	mov	r0, r3
 8005b4c:	3710      	adds	r7, #16
 8005b4e:	46bd      	mov	sp, r7
 8005b50:	bd80      	pop	{r7, pc}
 8005b52:	bf00      	nop
 8005b54:	08005e05 	.word	0x08005e05
 8005b58:	08005d5d 	.word	0x08005d5d
 8005b5c:	08005e21 	.word	0x08005e21

08005b60 <HAL_SPI_IRQHandler>:
  * @param  hspi pointer to a SPI_HandleTypeDef structure that contains
  *               the configuration information for the specified SPI module.
  * @retval None
  */
void HAL_SPI_IRQHandler(SPI_HandleTypeDef *hspi)
{
 8005b60:	b580      	push	{r7, lr}
 8005b62:	b088      	sub	sp, #32
 8005b64:	af00      	add	r7, sp, #0
 8005b66:	6078      	str	r0, [r7, #4]
  uint32_t itsource = hspi->Instance->CR2;
 8005b68:	687b      	ldr	r3, [r7, #4]
 8005b6a:	681b      	ldr	r3, [r3, #0]
 8005b6c:	685b      	ldr	r3, [r3, #4]
 8005b6e:	61fb      	str	r3, [r7, #28]
  uint32_t itflag   = hspi->Instance->SR;
 8005b70:	687b      	ldr	r3, [r7, #4]
 8005b72:	681b      	ldr	r3, [r3, #0]
 8005b74:	689b      	ldr	r3, [r3, #8]
 8005b76:	61bb      	str	r3, [r7, #24]

  /* SPI in mode Receiver ----------------------------------------------------*/
  if ((SPI_CHECK_FLAG(itflag, SPI_FLAG_OVR) == RESET) &&
 8005b78:	69bb      	ldr	r3, [r7, #24]
 8005b7a:	f003 0340 	and.w	r3, r3, #64	@ 0x40
 8005b7e:	2b00      	cmp	r3, #0
 8005b80:	d10e      	bne.n	8005ba0 <HAL_SPI_IRQHandler+0x40>
      (SPI_CHECK_FLAG(itflag, SPI_FLAG_RXNE) != RESET) && (SPI_CHECK_IT_SOURCE(itsource, SPI_IT_RXNE) != RESET))
 8005b82:	69bb      	ldr	r3, [r7, #24]
 8005b84:	f003 0301 	and.w	r3, r3, #1
  if ((SPI_CHECK_FLAG(itflag, SPI_FLAG_OVR) == RESET) &&
 8005b88:	2b00      	cmp	r3, #0
 8005b8a:	d009      	beq.n	8005ba0 <HAL_SPI_IRQHandler+0x40>
      (SPI_CHECK_FLAG(itflag, SPI_FLAG_RXNE) != RESET) && (SPI_CHECK_IT_SOURCE(itsource, SPI_IT_RXNE) != RESET))
 8005b8c:	69fb      	ldr	r3, [r7, #28]
 8005b8e:	f003 0340 	and.w	r3, r3, #64	@ 0x40
 8005b92:	2b00      	cmp	r3, #0
 8005b94:	d004      	beq.n	8005ba0 <HAL_SPI_IRQHandler+0x40>
  {
    hspi->RxISR(hspi);
 8005b96:	687b      	ldr	r3, [r7, #4]
 8005b98:	6c1b      	ldr	r3, [r3, #64]	@ 0x40
 8005b9a:	6878      	ldr	r0, [r7, #4]
 8005b9c:	4798      	blx	r3
    return;
 8005b9e:	e0ce      	b.n	8005d3e <HAL_SPI_IRQHandler+0x1de>
  }

  /* SPI in mode Transmitter -------------------------------------------------*/
  if ((SPI_CHECK_FLAG(itflag, SPI_FLAG_TXE) != RESET) && (SPI_CHECK_IT_SOURCE(itsource, SPI_IT_TXE) != RESET))
 8005ba0:	69bb      	ldr	r3, [r7, #24]
 8005ba2:	f003 0302 	and.w	r3, r3, #2
 8005ba6:	2b00      	cmp	r3, #0
 8005ba8:	d009      	beq.n	8005bbe <HAL_SPI_IRQHandler+0x5e>
 8005baa:	69fb      	ldr	r3, [r7, #28]
 8005bac:	f003 0380 	and.w	r3, r3, #128	@ 0x80
 8005bb0:	2b00      	cmp	r3, #0
 8005bb2:	d004      	beq.n	8005bbe <HAL_SPI_IRQHandler+0x5e>
  {
    hspi->TxISR(hspi);
 8005bb4:	687b      	ldr	r3, [r7, #4]
 8005bb6:	6c5b      	ldr	r3, [r3, #68]	@ 0x44
 8005bb8:	6878      	ldr	r0, [r7, #4]
 8005bba:	4798      	blx	r3
    return;
 8005bbc:	e0bf      	b.n	8005d3e <HAL_SPI_IRQHandler+0x1de>
  }

  /* SPI in Error Treatment --------------------------------------------------*/
  if (((SPI_CHECK_FLAG(itflag, SPI_FLAG_MODF) != RESET) || (SPI_CHECK_FLAG(itflag, SPI_FLAG_OVR) != RESET)
 8005bbe:	69bb      	ldr	r3, [r7, #24]
 8005bc0:	f003 0320 	and.w	r3, r3, #32
 8005bc4:	2b00      	cmp	r3, #0
 8005bc6:	d10a      	bne.n	8005bde <HAL_SPI_IRQHandler+0x7e>
 8005bc8:	69bb      	ldr	r3, [r7, #24]
 8005bca:	f003 0340 	and.w	r3, r3, #64	@ 0x40
 8005bce:	2b00      	cmp	r3, #0
 8005bd0:	d105      	bne.n	8005bde <HAL_SPI_IRQHandler+0x7e>
       || (SPI_CHECK_FLAG(itflag, SPI_FLAG_FRE) != RESET)) && (SPI_CHECK_IT_SOURCE(itsource, SPI_IT_ERR) != RESET))
 8005bd2:	69bb      	ldr	r3, [r7, #24]
 8005bd4:	f403 7380 	and.w	r3, r3, #256	@ 0x100
 8005bd8:	2b00      	cmp	r3, #0
 8005bda:	f000 80b0 	beq.w	8005d3e <HAL_SPI_IRQHandler+0x1de>
 8005bde:	69fb      	ldr	r3, [r7, #28]
 8005be0:	f003 0320 	and.w	r3, r3, #32
 8005be4:	2b00      	cmp	r3, #0
 8005be6:	f000 80aa 	beq.w	8005d3e <HAL_SPI_IRQHandler+0x1de>
  {
    /* SPI Overrun error interrupt occurred ----------------------------------*/
    if (SPI_CHECK_FLAG(itflag, SPI_FLAG_OVR) != RESET)
 8005bea:	69bb      	ldr	r3, [r7, #24]
 8005bec:	f003 0340 	and.w	r3, r3, #64	@ 0x40
 8005bf0:	2b00      	cmp	r3, #0
 8005bf2:	d023      	beq.n	8005c3c <HAL_SPI_IRQHandler+0xdc>
    {
      if (hspi->State != HAL_SPI_STATE_BUSY_TX)
 8005bf4:	687b      	ldr	r3, [r7, #4]
 8005bf6:	f893 3051 	ldrb.w	r3, [r3, #81]	@ 0x51
 8005bfa:	b2db      	uxtb	r3, r3
 8005bfc:	2b03      	cmp	r3, #3
 8005bfe:	d011      	beq.n	8005c24 <HAL_SPI_IRQHandler+0xc4>
      {
        SET_BIT(hspi->ErrorCode, HAL_SPI_ERROR_OVR);
 8005c00:	687b      	ldr	r3, [r7, #4]
 8005c02:	6d5b      	ldr	r3, [r3, #84]	@ 0x54
 8005c04:	f043 0204 	orr.w	r2, r3, #4
 8005c08:	687b      	ldr	r3, [r7, #4]
 8005c0a:	655a      	str	r2, [r3, #84]	@ 0x54
        __HAL_SPI_CLEAR_OVRFLAG(hspi);
 8005c0c:	2300      	movs	r3, #0
 8005c0e:	617b      	str	r3, [r7, #20]
 8005c10:	687b      	ldr	r3, [r7, #4]
 8005c12:	681b      	ldr	r3, [r3, #0]
 8005c14:	68db      	ldr	r3, [r3, #12]
 8005c16:	617b      	str	r3, [r7, #20]
 8005c18:	687b      	ldr	r3, [r7, #4]
 8005c1a:	681b      	ldr	r3, [r3, #0]
 8005c1c:	689b      	ldr	r3, [r3, #8]
 8005c1e:	617b      	str	r3, [r7, #20]
 8005c20:	697b      	ldr	r3, [r7, #20]
 8005c22:	e00b      	b.n	8005c3c <HAL_SPI_IRQHandler+0xdc>
      }
      else
      {
        __HAL_SPI_CLEAR_OVRFLAG(hspi);
 8005c24:	2300      	movs	r3, #0
 8005c26:	613b      	str	r3, [r7, #16]
 8005c28:	687b      	ldr	r3, [r7, #4]
 8005c2a:	681b      	ldr	r3, [r3, #0]
 8005c2c:	68db      	ldr	r3, [r3, #12]
 8005c2e:	613b      	str	r3, [r7, #16]
 8005c30:	687b      	ldr	r3, [r7, #4]
 8005c32:	681b      	ldr	r3, [r3, #0]
 8005c34:	689b      	ldr	r3, [r3, #8]
 8005c36:	613b      	str	r3, [r7, #16]
 8005c38:	693b      	ldr	r3, [r7, #16]
        return;
 8005c3a:	e080      	b.n	8005d3e <HAL_SPI_IRQHandler+0x1de>
      }
    }

    /* SPI Mode Fault error interrupt occurred -------------------------------*/
    if (SPI_CHECK_FLAG(itflag, SPI_FLAG_MODF) != RESET)
 8005c3c:	69bb      	ldr	r3, [r7, #24]
 8005c3e:	f003 0320 	and.w	r3, r3, #32
 8005c42:	2b00      	cmp	r3, #0
 8005c44:	d014      	beq.n	8005c70 <HAL_SPI_IRQHandler+0x110>
    {
      SET_BIT(hspi->ErrorCode, HAL_SPI_ERROR_MODF);
 8005c46:	687b      	ldr	r3, [r7, #4]
 8005c48:	6d5b      	ldr	r3, [r3, #84]	@ 0x54
 8005c4a:	f043 0201 	orr.w	r2, r3, #1
 8005c4e:	687b      	ldr	r3, [r7, #4]
 8005c50:	655a      	str	r2, [r3, #84]	@ 0x54
      __HAL_SPI_CLEAR_MODFFLAG(hspi);
 8005c52:	2300      	movs	r3, #0
 8005c54:	60fb      	str	r3, [r7, #12]
 8005c56:	687b      	ldr	r3, [r7, #4]
 8005c58:	681b      	ldr	r3, [r3, #0]
 8005c5a:	689b      	ldr	r3, [r3, #8]
 8005c5c:	60fb      	str	r3, [r7, #12]
 8005c5e:	687b      	ldr	r3, [r7, #4]
 8005c60:	681b      	ldr	r3, [r3, #0]
 8005c62:	681a      	ldr	r2, [r3, #0]
 8005c64:	687b      	ldr	r3, [r7, #4]
 8005c66:	681b      	ldr	r3, [r3, #0]
 8005c68:	f022 0240 	bic.w	r2, r2, #64	@ 0x40
 8005c6c:	601a      	str	r2, [r3, #0]
 8005c6e:	68fb      	ldr	r3, [r7, #12]
    }

    /* SPI Frame error interrupt occurred ------------------------------------*/
    if (SPI_CHECK_FLAG(itflag, SPI_FLAG_FRE) != RESET)
 8005c70:	69bb      	ldr	r3, [r7, #24]
 8005c72:	f403 7380 	and.w	r3, r3, #256	@ 0x100
 8005c76:	2b00      	cmp	r3, #0
 8005c78:	d00c      	beq.n	8005c94 <HAL_SPI_IRQHandler+0x134>
    {
      SET_BIT(hspi->ErrorCode, HAL_SPI_ERROR_FRE);
 8005c7a:	687b      	ldr	r3, [r7, #4]
 8005c7c:	6d5b      	ldr	r3, [r3, #84]	@ 0x54
 8005c7e:	f043 0208 	orr.w	r2, r3, #8
 8005c82:	687b      	ldr	r3, [r7, #4]
 8005c84:	655a      	str	r2, [r3, #84]	@ 0x54
      __HAL_SPI_CLEAR_FREFLAG(hspi);
 8005c86:	2300      	movs	r3, #0
 8005c88:	60bb      	str	r3, [r7, #8]
 8005c8a:	687b      	ldr	r3, [r7, #4]
 8005c8c:	681b      	ldr	r3, [r3, #0]
 8005c8e:	689b      	ldr	r3, [r3, #8]
 8005c90:	60bb      	str	r3, [r7, #8]
 8005c92:	68bb      	ldr	r3, [r7, #8]
    }

    if (hspi->ErrorCode != HAL_SPI_ERROR_NONE)
 8005c94:	687b      	ldr	r3, [r7, #4]
 8005c96:	6d5b      	ldr	r3, [r3, #84]	@ 0x54
 8005c98:	2b00      	cmp	r3, #0
 8005c9a:	d04f      	beq.n	8005d3c <HAL_SPI_IRQHandler+0x1dc>
    {
      /* Disable all interrupts */
      __HAL_SPI_DISABLE_IT(hspi, SPI_IT_RXNE | SPI_IT_TXE | SPI_IT_ERR);
 8005c9c:	687b      	ldr	r3, [r7, #4]
 8005c9e:	681b      	ldr	r3, [r3, #0]
 8005ca0:	685a      	ldr	r2, [r3, #4]
 8005ca2:	687b      	ldr	r3, [r7, #4]
 8005ca4:	681b      	ldr	r3, [r3, #0]
 8005ca6:	f022 02e0 	bic.w	r2, r2, #224	@ 0xe0
 8005caa:	605a      	str	r2, [r3, #4]

      hspi->State = HAL_SPI_STATE_READY;
 8005cac:	687b      	ldr	r3, [r7, #4]
 8005cae:	2201      	movs	r2, #1
 8005cb0:	f883 2051 	strb.w	r2, [r3, #81]	@ 0x51
      /* Disable the SPI DMA requests if enabled */
      if ((HAL_IS_BIT_SET(itsource, SPI_CR2_TXDMAEN)) || (HAL_IS_BIT_SET(itsource, SPI_CR2_RXDMAEN)))
 8005cb4:	69fb      	ldr	r3, [r7, #28]
 8005cb6:	f003 0302 	and.w	r3, r3, #2
 8005cba:	2b00      	cmp	r3, #0
 8005cbc:	d104      	bne.n	8005cc8 <HAL_SPI_IRQHandler+0x168>
 8005cbe:	69fb      	ldr	r3, [r7, #28]
 8005cc0:	f003 0301 	and.w	r3, r3, #1
 8005cc4:	2b00      	cmp	r3, #0
 8005cc6:	d034      	beq.n	8005d32 <HAL_SPI_IRQHandler+0x1d2>
      {
        CLEAR_BIT(hspi->Instance->CR2, (SPI_CR2_TXDMAEN | SPI_CR2_RXDMAEN));
 8005cc8:	687b      	ldr	r3, [r7, #4]
 8005cca:	681b      	ldr	r3, [r3, #0]
 8005ccc:	685a      	ldr	r2, [r3, #4]
 8005cce:	687b      	ldr	r3, [r7, #4]
 8005cd0:	681b      	ldr	r3, [r3, #0]
 8005cd2:	f022 0203 	bic.w	r2, r2, #3
 8005cd6:	605a      	str	r2, [r3, #4]

        /* Abort the SPI DMA Rx channel */
        if (hspi->hdmarx != NULL)
 8005cd8:	687b      	ldr	r3, [r7, #4]
 8005cda:	6cdb      	ldr	r3, [r3, #76]	@ 0x4c
 8005cdc:	2b00      	cmp	r3, #0
 8005cde:	d011      	beq.n	8005d04 <HAL_SPI_IRQHandler+0x1a4>
        {
          /* Set the SPI DMA Abort callback :
          will lead to call HAL_SPI_ErrorCallback() at end of DMA abort procedure */
          hspi->hdmarx->XferAbortCallback = SPI_DMAAbortOnError;
 8005ce0:	687b      	ldr	r3, [r7, #4]
 8005ce2:	6cdb      	ldr	r3, [r3, #76]	@ 0x4c
 8005ce4:	4a17      	ldr	r2, [pc, #92]	@ (8005d44 <HAL_SPI_IRQHandler+0x1e4>)
 8005ce6:	651a      	str	r2, [r3, #80]	@ 0x50
          if (HAL_OK != HAL_DMA_Abort_IT(hspi->hdmarx))
 8005ce8:	687b      	ldr	r3, [r7, #4]
 8005cea:	6cdb      	ldr	r3, [r3, #76]	@ 0x4c
 8005cec:	4618      	mov	r0, r3
 8005cee:	f7fc ff53 	bl	8002b98 <HAL_DMA_Abort_IT>
 8005cf2:	4603      	mov	r3, r0
 8005cf4:	2b00      	cmp	r3, #0
 8005cf6:	d005      	beq.n	8005d04 <HAL_SPI_IRQHandler+0x1a4>
          {
            SET_BIT(hspi->ErrorCode, HAL_SPI_ERROR_ABORT);
 8005cf8:	687b      	ldr	r3, [r7, #4]
 8005cfa:	6d5b      	ldr	r3, [r3, #84]	@ 0x54
 8005cfc:	f043 0240 	orr.w	r2, r3, #64	@ 0x40
 8005d00:	687b      	ldr	r3, [r7, #4]
 8005d02:	655a      	str	r2, [r3, #84]	@ 0x54
          }
        }
        /* Abort the SPI DMA Tx channel */
        if (hspi->hdmatx != NULL)
 8005d04:	687b      	ldr	r3, [r7, #4]
 8005d06:	6c9b      	ldr	r3, [r3, #72]	@ 0x48
 8005d08:	2b00      	cmp	r3, #0
 8005d0a:	d016      	beq.n	8005d3a <HAL_SPI_IRQHandler+0x1da>
        {
          /* Set the SPI DMA Abort callback :
          will lead to call HAL_SPI_ErrorCallback() at end of DMA abort procedure */
          hspi->hdmatx->XferAbortCallback = SPI_DMAAbortOnError;
 8005d0c:	687b      	ldr	r3, [r7, #4]
 8005d0e:	6c9b      	ldr	r3, [r3, #72]	@ 0x48
 8005d10:	4a0c      	ldr	r2, [pc, #48]	@ (8005d44 <HAL_SPI_IRQHandler+0x1e4>)
 8005d12:	651a      	str	r2, [r3, #80]	@ 0x50
          if (HAL_OK != HAL_DMA_Abort_IT(hspi->hdmatx))
 8005d14:	687b      	ldr	r3, [r7, #4]
 8005d16:	6c9b      	ldr	r3, [r3, #72]	@ 0x48
 8005d18:	4618      	mov	r0, r3
 8005d1a:	f7fc ff3d 	bl	8002b98 <HAL_DMA_Abort_IT>
 8005d1e:	4603      	mov	r3, r0
 8005d20:	2b00      	cmp	r3, #0
 8005d22:	d00a      	beq.n	8005d3a <HAL_SPI_IRQHandler+0x1da>
          {
            SET_BIT(hspi->ErrorCode, HAL_SPI_ERROR_ABORT);
 8005d24:	687b      	ldr	r3, [r7, #4]
 8005d26:	6d5b      	ldr	r3, [r3, #84]	@ 0x54
 8005d28:	f043 0240 	orr.w	r2, r3, #64	@ 0x40
 8005d2c:	687b      	ldr	r3, [r7, #4]
 8005d2e:	655a      	str	r2, [r3, #84]	@ 0x54
        if (hspi->hdmatx != NULL)
 8005d30:	e003      	b.n	8005d3a <HAL_SPI_IRQHandler+0x1da>
      {
        /* Call user error callback */
#if (USE_HAL_SPI_REGISTER_CALLBACKS == 1U)
        hspi->ErrorCallback(hspi);
#else
        HAL_SPI_ErrorCallback(hspi);
 8005d32:	6878      	ldr	r0, [r7, #4]
 8005d34:	f7fb fcd4 	bl	80016e0 <HAL_SPI_ErrorCallback>
#endif /* USE_HAL_SPI_REGISTER_CALLBACKS */
      }
    }
    return;
 8005d38:	e000      	b.n	8005d3c <HAL_SPI_IRQHandler+0x1dc>
        if (hspi->hdmatx != NULL)
 8005d3a:	bf00      	nop
    return;
 8005d3c:	bf00      	nop
  }
}
 8005d3e:	3720      	adds	r7, #32
 8005d40:	46bd      	mov	sp, r7
 8005d42:	bd80      	pop	{r7, pc}
 8005d44:	08005e61 	.word	0x08005e61

08005d48 <HAL_SPI_TxHalfCpltCallback>:
  * @param  hspi pointer to a SPI_HandleTypeDef structure that contains
  *               the configuration information for SPI module.
  * @retval None
  */
__weak void HAL_SPI_TxHalfCpltCallback(SPI_HandleTypeDef *hspi)
{
 8005d48:	b480      	push	{r7}
 8005d4a:	b083      	sub	sp, #12
 8005d4c:	af00      	add	r7, sp, #0
 8005d4e:	6078      	str	r0, [r7, #4]
  UNUSED(hspi);

  /* NOTE : This function should not be modified, when the callback is needed,
            the HAL_SPI_TxHalfCpltCallback should be implemented in the user file
   */
}
 8005d50:	bf00      	nop
 8005d52:	370c      	adds	r7, #12
 8005d54:	46bd      	mov	sp, r7
 8005d56:	f85d 7b04 	ldr.w	r7, [sp], #4
 8005d5a:	4770      	bx	lr

08005d5c <SPI_DMATransmitCplt>:
  * @param  hdma pointer to a DMA_HandleTypeDef structure that contains
  *               the configuration information for the specified DMA module.
  * @retval None
  */
static void SPI_DMATransmitCplt(DMA_HandleTypeDef *hdma)
{
 8005d5c:	b580      	push	{r7, lr}
 8005d5e:	b086      	sub	sp, #24
 8005d60:	af00      	add	r7, sp, #0
 8005d62:	6078      	str	r0, [r7, #4]
  SPI_HandleTypeDef *hspi = (SPI_HandleTypeDef *)(((DMA_HandleTypeDef *)hdma)->Parent); /* Derogation MISRAC2012-Rule-11.5 */
 8005d64:	687b      	ldr	r3, [r7, #4]
 8005d66:	6b9b      	ldr	r3, [r3, #56]	@ 0x38
 8005d68:	617b      	str	r3, [r7, #20]
  uint32_t tickstart;

  /* Init tickstart for timeout management*/
  tickstart = HAL_GetTick();
 8005d6a:	f7fc f831 	bl	8001dd0 <HAL_GetTick>
 8005d6e:	6138      	str	r0, [r7, #16]

  /* DMA Normal Mode */
  if ((hdma->Instance->CR & DMA_SxCR_CIRC) != DMA_SxCR_CIRC)
 8005d70:	687b      	ldr	r3, [r7, #4]
 8005d72:	681b      	ldr	r3, [r3, #0]
 8005d74:	681b      	ldr	r3, [r3, #0]
 8005d76:	f403 7380 	and.w	r3, r3, #256	@ 0x100
 8005d7a:	f5b3 7f80 	cmp.w	r3, #256	@ 0x100
 8005d7e:	d03b      	beq.n	8005df8 <SPI_DMATransmitCplt+0x9c>
  {
    /* Disable ERR interrupt */
    __HAL_SPI_DISABLE_IT(hspi, SPI_IT_ERR);
 8005d80:	697b      	ldr	r3, [r7, #20]
 8005d82:	681b      	ldr	r3, [r3, #0]
 8005d84:	685a      	ldr	r2, [r3, #4]
 8005d86:	697b      	ldr	r3, [r7, #20]
 8005d88:	681b      	ldr	r3, [r3, #0]
 8005d8a:	f022 0220 	bic.w	r2, r2, #32
 8005d8e:	605a      	str	r2, [r3, #4]

    /* Disable Tx DMA Request */
    CLEAR_BIT(hspi->Instance->CR2, SPI_CR2_TXDMAEN);
 8005d90:	697b      	ldr	r3, [r7, #20]
 8005d92:	681b      	ldr	r3, [r3, #0]
 8005d94:	685a      	ldr	r2, [r3, #4]
 8005d96:	697b      	ldr	r3, [r7, #20]
 8005d98:	681b      	ldr	r3, [r3, #0]
 8005d9a:	f022 0202 	bic.w	r2, r2, #2
 8005d9e:	605a      	str	r2, [r3, #4]

    /* Check the end of the transaction */
    if (SPI_EndRxTxTransaction(hspi, SPI_DEFAULT_TIMEOUT, tickstart) != HAL_OK)
 8005da0:	693a      	ldr	r2, [r7, #16]
 8005da2:	2164      	movs	r1, #100	@ 0x64
 8005da4:	6978      	ldr	r0, [r7, #20]
 8005da6:	f000 f95d 	bl	8006064 <SPI_EndRxTxTransaction>
 8005daa:	4603      	mov	r3, r0
 8005dac:	2b00      	cmp	r3, #0
 8005dae:	d005      	beq.n	8005dbc <SPI_DMATransmitCplt+0x60>
    {
      SET_BIT(hspi->ErrorCode, HAL_SPI_ERROR_FLAG);
 8005db0:	697b      	ldr	r3, [r7, #20]
 8005db2:	6d5b      	ldr	r3, [r3, #84]	@ 0x54
 8005db4:	f043 0220 	orr.w	r2, r3, #32
 8005db8:	697b      	ldr	r3, [r7, #20]
 8005dba:	655a      	str	r2, [r3, #84]	@ 0x54
    }

    /* Clear overrun flag in 2 Lines communication mode because received data is not read */
    if (hspi->Init.Direction == SPI_DIRECTION_2LINES)
 8005dbc:	697b      	ldr	r3, [r7, #20]
 8005dbe:	689b      	ldr	r3, [r3, #8]
 8005dc0:	2b00      	cmp	r3, #0
 8005dc2:	d10a      	bne.n	8005dda <SPI_DMATransmitCplt+0x7e>
    {
      __HAL_SPI_CLEAR_OVRFLAG(hspi);
 8005dc4:	2300      	movs	r3, #0
 8005dc6:	60fb      	str	r3, [r7, #12]
 8005dc8:	697b      	ldr	r3, [r7, #20]
 8005dca:	681b      	ldr	r3, [r3, #0]
 8005dcc:	68db      	ldr	r3, [r3, #12]
 8005dce:	60fb      	str	r3, [r7, #12]
 8005dd0:	697b      	ldr	r3, [r7, #20]
 8005dd2:	681b      	ldr	r3, [r3, #0]
 8005dd4:	689b      	ldr	r3, [r3, #8]
 8005dd6:	60fb      	str	r3, [r7, #12]
 8005dd8:	68fb      	ldr	r3, [r7, #12]
    }

    hspi->TxXferCount = 0U;
 8005dda:	697b      	ldr	r3, [r7, #20]
 8005ddc:	2200      	movs	r2, #0
 8005dde:	86da      	strh	r2, [r3, #54]	@ 0x36
    hspi->State = HAL_SPI_STATE_READY;
 8005de0:	697b      	ldr	r3, [r7, #20]
 8005de2:	2201      	movs	r2, #1
 8005de4:	f883 2051 	strb.w	r2, [r3, #81]	@ 0x51

    if (hspi->ErrorCode != HAL_SPI_ERROR_NONE)
 8005de8:	697b      	ldr	r3, [r7, #20]
 8005dea:	6d5b      	ldr	r3, [r3, #84]	@ 0x54
 8005dec:	2b00      	cmp	r3, #0
 8005dee:	d003      	beq.n	8005df8 <SPI_DMATransmitCplt+0x9c>
    {
      /* Call user error callback */
#if (USE_HAL_SPI_REGISTER_CALLBACKS == 1U)
      hspi->ErrorCallback(hspi);
#else
      HAL_SPI_ErrorCallback(hspi);
 8005df0:	6978      	ldr	r0, [r7, #20]
 8005df2:	f7fb fc75 	bl	80016e0 <HAL_SPI_ErrorCallback>
#endif /* USE_HAL_SPI_REGISTER_CALLBACKS */
      return;
 8005df6:	e002      	b.n	8005dfe <SPI_DMATransmitCplt+0xa2>
  }
  /* Call user Tx complete callback */
#if (USE_HAL_SPI_REGISTER_CALLBACKS == 1U)
  hspi->TxCpltCallback(hspi);
#else
  HAL_SPI_TxCpltCallback(hspi);
 8005df8:	6978      	ldr	r0, [r7, #20]
 8005dfa:	f7fb fc87 	bl	800170c <HAL_SPI_TxCpltCallback>
#endif /* USE_HAL_SPI_REGISTER_CALLBACKS */
}
 8005dfe:	3718      	adds	r7, #24
 8005e00:	46bd      	mov	sp, r7
 8005e02:	bd80      	pop	{r7, pc}

08005e04 <SPI_DMAHalfTransmitCplt>:
  * @param  hdma pointer to a DMA_HandleTypeDef structure that contains
  *               the configuration information for the specified DMA module.
  * @retval None
  */
static void SPI_DMAHalfTransmitCplt(DMA_HandleTypeDef *hdma)
{
 8005e04:	b580      	push	{r7, lr}
 8005e06:	b084      	sub	sp, #16
 8005e08:	af00      	add	r7, sp, #0
 8005e0a:	6078      	str	r0, [r7, #4]
  SPI_HandleTypeDef *hspi = (SPI_HandleTypeDef *)(((DMA_HandleTypeDef *)hdma)->Parent); /* Derogation MISRAC2012-Rule-11.5 */
 8005e0c:	687b      	ldr	r3, [r7, #4]
 8005e0e:	6b9b      	ldr	r3, [r3, #56]	@ 0x38
 8005e10:	60fb      	str	r3, [r7, #12]

  /* Call user Tx half complete callback */
#if (USE_HAL_SPI_REGISTER_CALLBACKS == 1U)
  hspi->TxHalfCpltCallback(hspi);
#else
  HAL_SPI_TxHalfCpltCallback(hspi);
 8005e12:	68f8      	ldr	r0, [r7, #12]
 8005e14:	f7ff ff98 	bl	8005d48 <HAL_SPI_TxHalfCpltCallback>
#endif /* USE_HAL_SPI_REGISTER_CALLBACKS */
}
 8005e18:	bf00      	nop
 8005e1a:	3710      	adds	r7, #16
 8005e1c:	46bd      	mov	sp, r7
 8005e1e:	bd80      	pop	{r7, pc}

08005e20 <SPI_DMAError>:
  * @param  hdma pointer to a DMA_HandleTypeDef structure that contains
  *               the configuration information for the specified DMA module.
  * @retval None
  */
static void SPI_DMAError(DMA_HandleTypeDef *hdma)
{
 8005e20:	b580      	push	{r7, lr}
 8005e22:	b084      	sub	sp, #16
 8005e24:	af00      	add	r7, sp, #0
 8005e26:	6078      	str	r0, [r7, #4]
  SPI_HandleTypeDef *hspi = (SPI_HandleTypeDef *)(((DMA_HandleTypeDef *)hdma)->Parent); /* Derogation MISRAC2012-Rule-11.5 */
 8005e28:	687b      	ldr	r3, [r7, #4]
 8005e2a:	6b9b      	ldr	r3, [r3, #56]	@ 0x38
 8005e2c:	60fb      	str	r3, [r7, #12]

  /* Stop the disable DMA transfer on SPI side */
  CLEAR_BIT(hspi->Instance->CR2, SPI_CR2_TXDMAEN | SPI_CR2_RXDMAEN);
 8005e2e:	68fb      	ldr	r3, [r7, #12]
 8005e30:	681b      	ldr	r3, [r3, #0]
 8005e32:	685a      	ldr	r2, [r3, #4]
 8005e34:	68fb      	ldr	r3, [r7, #12]
 8005e36:	681b      	ldr	r3, [r3, #0]
 8005e38:	f022 0203 	bic.w	r2, r2, #3
 8005e3c:	605a      	str	r2, [r3, #4]

  SET_BIT(hspi->ErrorCode, HAL_SPI_ERROR_DMA);
 8005e3e:	68fb      	ldr	r3, [r7, #12]
 8005e40:	6d5b      	ldr	r3, [r3, #84]	@ 0x54
 8005e42:	f043 0210 	orr.w	r2, r3, #16
 8005e46:	68fb      	ldr	r3, [r7, #12]
 8005e48:	655a      	str	r2, [r3, #84]	@ 0x54
  hspi->State = HAL_SPI_STATE_READY;
 8005e4a:	68fb      	ldr	r3, [r7, #12]
 8005e4c:	2201      	movs	r2, #1
 8005e4e:	f883 2051 	strb.w	r2, [r3, #81]	@ 0x51
  /* Call user error callback */
#if (USE_HAL_SPI_REGISTER_CALLBACKS == 1U)
  hspi->ErrorCallback(hspi);
#else
  HAL_SPI_ErrorCallback(hspi);
 8005e52:	68f8      	ldr	r0, [r7, #12]
 8005e54:	f7fb fc44 	bl	80016e0 <HAL_SPI_ErrorCallback>
#endif /* USE_HAL_SPI_REGISTER_CALLBACKS */
}
 8005e58:	bf00      	nop
 8005e5a:	3710      	adds	r7, #16
 8005e5c:	46bd      	mov	sp, r7
 8005e5e:	bd80      	pop	{r7, pc}

08005e60 <SPI_DMAAbortOnError>:
  *         (To be called at end of DMA Abort procedure following error occurrence).
  * @param  hdma DMA handle.
  * @retval None
  */
static void SPI_DMAAbortOnError(DMA_HandleTypeDef *hdma)
{
 8005e60:	b580      	push	{r7, lr}
 8005e62:	b084      	sub	sp, #16
 8005e64:	af00      	add	r7, sp, #0
 8005e66:	6078      	str	r0, [r7, #4]
  SPI_HandleTypeDef *hspi = (SPI_HandleTypeDef *)(((DMA_HandleTypeDef *)hdma)->Parent); /* Derogation MISRAC2012-Rule-11.5 */
 8005e68:	687b      	ldr	r3, [r7, #4]
 8005e6a:	6b9b      	ldr	r3, [r3, #56]	@ 0x38
 8005e6c:	60fb      	str	r3, [r7, #12]
  hspi->RxXferCount = 0U;
 8005e6e:	68fb      	ldr	r3, [r7, #12]
 8005e70:	2200      	movs	r2, #0
 8005e72:	87da      	strh	r2, [r3, #62]	@ 0x3e
  hspi->TxXferCount = 0U;
 8005e74:	68fb      	ldr	r3, [r7, #12]
 8005e76:	2200      	movs	r2, #0
 8005e78:	86da      	strh	r2, [r3, #54]	@ 0x36

  /* Call user error callback */
#if (USE_HAL_SPI_REGISTER_CALLBACKS == 1U)
  hspi->ErrorCallback(hspi);
#else
  HAL_SPI_ErrorCallback(hspi);
 8005e7a:	68f8      	ldr	r0, [r7, #12]
 8005e7c:	f7fb fc30 	bl	80016e0 <HAL_SPI_ErrorCallback>
#endif /* USE_HAL_SPI_REGISTER_CALLBACKS */
}
 8005e80:	bf00      	nop
 8005e82:	3710      	adds	r7, #16
 8005e84:	46bd      	mov	sp, r7
 8005e86:	bd80      	pop	{r7, pc}

08005e88 <SPI_WaitFlagStateUntilTimeout>:
  * @param  Tickstart tick start value
  * @retval HAL status
  */
static HAL_StatusTypeDef SPI_WaitFlagStateUntilTimeout(SPI_HandleTypeDef *hspi, uint32_t Flag, FlagStatus State,
                                                       uint32_t Timeout, uint32_t Tickstart)
{
 8005e88:	b580      	push	{r7, lr}
 8005e8a:	b088      	sub	sp, #32
 8005e8c:	af00      	add	r7, sp, #0
 8005e8e:	60f8      	str	r0, [r7, #12]
 8005e90:	60b9      	str	r1, [r7, #8]
 8005e92:	603b      	str	r3, [r7, #0]
 8005e94:	4613      	mov	r3, r2
 8005e96:	71fb      	strb	r3, [r7, #7]
  __IO uint32_t count;
  uint32_t tmp_timeout;
  uint32_t tmp_tickstart;

  /* Adjust Timeout value  in case of end of transfer */
  tmp_timeout   = Timeout - (HAL_GetTick() - Tickstart);
 8005e98:	f7fb ff9a 	bl	8001dd0 <HAL_GetTick>
 8005e9c:	4602      	mov	r2, r0
 8005e9e:	6abb      	ldr	r3, [r7, #40]	@ 0x28
 8005ea0:	1a9b      	subs	r3, r3, r2
 8005ea2:	683a      	ldr	r2, [r7, #0]
 8005ea4:	4413      	add	r3, r2
 8005ea6:	61fb      	str	r3, [r7, #28]
  tmp_tickstart = HAL_GetTick();
 8005ea8:	f7fb ff92 	bl	8001dd0 <HAL_GetTick>
 8005eac:	61b8      	str	r0, [r7, #24]

  /* Calculate Timeout based on a software loop to avoid blocking issue if Systick is disabled */
  count = tmp_timeout * ((SystemCoreClock * 32U) >> 20U);
 8005eae:	4b39      	ldr	r3, [pc, #228]	@ (8005f94 <SPI_WaitFlagStateUntilTimeout+0x10c>)
 8005eb0:	681b      	ldr	r3, [r3, #0]
 8005eb2:	015b      	lsls	r3, r3, #5
 8005eb4:	0d1b      	lsrs	r3, r3, #20
 8005eb6:	69fa      	ldr	r2, [r7, #28]
 8005eb8:	fb02 f303 	mul.w	r3, r2, r3
 8005ebc:	617b      	str	r3, [r7, #20]

  while ((__HAL_SPI_GET_FLAG(hspi, Flag) ? SET : RESET) != State)
 8005ebe:	e054      	b.n	8005f6a <SPI_WaitFlagStateUntilTimeout+0xe2>
  {
    if (Timeout != HAL_MAX_DELAY)
 8005ec0:	683b      	ldr	r3, [r7, #0]
 8005ec2:	f1b3 3fff 	cmp.w	r3, #4294967295
 8005ec6:	d050      	beq.n	8005f6a <SPI_WaitFlagStateUntilTimeout+0xe2>
    {
      if (((HAL_GetTick() - tmp_tickstart) >= tmp_timeout) || (tmp_timeout == 0U))
 8005ec8:	f7fb ff82 	bl	8001dd0 <HAL_GetTick>
 8005ecc:	4602      	mov	r2, r0
 8005ece:	69bb      	ldr	r3, [r7, #24]
 8005ed0:	1ad3      	subs	r3, r2, r3
 8005ed2:	69fa      	ldr	r2, [r7, #28]
 8005ed4:	429a      	cmp	r2, r3
 8005ed6:	d902      	bls.n	8005ede <SPI_WaitFlagStateUntilTimeout+0x56>
 8005ed8:	69fb      	ldr	r3, [r7, #28]
 8005eda:	2b00      	cmp	r3, #0
 8005edc:	d13d      	bne.n	8005f5a <SPI_WaitFlagStateUntilTimeout+0xd2>
        /* Disable the SPI and reset the CRC: the CRC value should be cleared
           on both master and slave sides in order to resynchronize the master
           and slave for their respective CRC calculation */

        /* Disable TXE, RXNE and ERR interrupts for the interrupt process */
        __HAL_SPI_DISABLE_IT(hspi, (SPI_IT_TXE | SPI_IT_RXNE | SPI_IT_ERR));
 8005ede:	68fb      	ldr	r3, [r7, #12]
 8005ee0:	681b      	ldr	r3, [r3, #0]
 8005ee2:	685a      	ldr	r2, [r3, #4]
 8005ee4:	68fb      	ldr	r3, [r7, #12]
 8005ee6:	681b      	ldr	r3, [r3, #0]
 8005ee8:	f022 02e0 	bic.w	r2, r2, #224	@ 0xe0
 8005eec:	605a      	str	r2, [r3, #4]

        if ((hspi->Init.Mode == SPI_MODE_MASTER) && ((hspi->Init.Direction == SPI_DIRECTION_1LINE)
 8005eee:	68fb      	ldr	r3, [r7, #12]
 8005ef0:	685b      	ldr	r3, [r3, #4]
 8005ef2:	f5b3 7f82 	cmp.w	r3, #260	@ 0x104
 8005ef6:	d111      	bne.n	8005f1c <SPI_WaitFlagStateUntilTimeout+0x94>
 8005ef8:	68fb      	ldr	r3, [r7, #12]
 8005efa:	689b      	ldr	r3, [r3, #8]
 8005efc:	f5b3 4f00 	cmp.w	r3, #32768	@ 0x8000
 8005f00:	d004      	beq.n	8005f0c <SPI_WaitFlagStateUntilTimeout+0x84>
                                                     || (hspi->Init.Direction == SPI_DIRECTION_2LINES_RXONLY)))
 8005f02:	68fb      	ldr	r3, [r7, #12]
 8005f04:	689b      	ldr	r3, [r3, #8]
 8005f06:	f5b3 6f80 	cmp.w	r3, #1024	@ 0x400
 8005f0a:	d107      	bne.n	8005f1c <SPI_WaitFlagStateUntilTimeout+0x94>
        {
          /* Disable SPI peripheral */
          __HAL_SPI_DISABLE(hspi);
 8005f0c:	68fb      	ldr	r3, [r7, #12]
 8005f0e:	681b      	ldr	r3, [r3, #0]
 8005f10:	681a      	ldr	r2, [r3, #0]
 8005f12:	68fb      	ldr	r3, [r7, #12]
 8005f14:	681b      	ldr	r3, [r3, #0]
 8005f16:	f022 0240 	bic.w	r2, r2, #64	@ 0x40
 8005f1a:	601a      	str	r2, [r3, #0]
        }

        /* Reset CRC Calculation */
        if (hspi->Init.CRCCalculation == SPI_CRCCALCULATION_ENABLE)
 8005f1c:	68fb      	ldr	r3, [r7, #12]
 8005f1e:	6a9b      	ldr	r3, [r3, #40]	@ 0x28
 8005f20:	f5b3 5f00 	cmp.w	r3, #8192	@ 0x2000
 8005f24:	d10f      	bne.n	8005f46 <SPI_WaitFlagStateUntilTimeout+0xbe>
        {
          SPI_RESET_CRC(hspi);
 8005f26:	68fb      	ldr	r3, [r7, #12]
 8005f28:	681b      	ldr	r3, [r3, #0]
 8005f2a:	681a      	ldr	r2, [r3, #0]
 8005f2c:	68fb      	ldr	r3, [r7, #12]
 8005f2e:	681b      	ldr	r3, [r3, #0]
 8005f30:	f422 5200 	bic.w	r2, r2, #8192	@ 0x2000
 8005f34:	601a      	str	r2, [r3, #0]
 8005f36:	68fb      	ldr	r3, [r7, #12]
 8005f38:	681b      	ldr	r3, [r3, #0]
 8005f3a:	681a      	ldr	r2, [r3, #0]
 8005f3c:	68fb      	ldr	r3, [r7, #12]
 8005f3e:	681b      	ldr	r3, [r3, #0]
 8005f40:	f442 5200 	orr.w	r2, r2, #8192	@ 0x2000
 8005f44:	601a      	str	r2, [r3, #0]
        }

        hspi->State = HAL_SPI_STATE_READY;
 8005f46:	68fb      	ldr	r3, [r7, #12]
 8005f48:	2201      	movs	r2, #1
 8005f4a:	f883 2051 	strb.w	r2, [r3, #81]	@ 0x51

        /* Process Unlocked */
        __HAL_UNLOCK(hspi);
 8005f4e:	68fb      	ldr	r3, [r7, #12]
 8005f50:	2200      	movs	r2, #0
 8005f52:	f883 2050 	strb.w	r2, [r3, #80]	@ 0x50

        return HAL_TIMEOUT;
 8005f56:	2303      	movs	r3, #3
 8005f58:	e017      	b.n	8005f8a <SPI_WaitFlagStateUntilTimeout+0x102>
      }
      /* If Systick is disabled or not incremented, deactivate timeout to go in disable loop procedure */
      if (count == 0U)
 8005f5a:	697b      	ldr	r3, [r7, #20]
 8005f5c:	2b00      	cmp	r3, #0
 8005f5e:	d101      	bne.n	8005f64 <SPI_WaitFlagStateUntilTimeout+0xdc>
      {
        tmp_timeout = 0U;
 8005f60:	2300      	movs	r3, #0
 8005f62:	61fb      	str	r3, [r7, #28]
      }
      count--;
 8005f64:	697b      	ldr	r3, [r7, #20]
 8005f66:	3b01      	subs	r3, #1
 8005f68:	617b      	str	r3, [r7, #20]
  while ((__HAL_SPI_GET_FLAG(hspi, Flag) ? SET : RESET) != State)
 8005f6a:	68fb      	ldr	r3, [r7, #12]
 8005f6c:	681b      	ldr	r3, [r3, #0]
 8005f6e:	689a      	ldr	r2, [r3, #8]
 8005f70:	68bb      	ldr	r3, [r7, #8]
 8005f72:	4013      	ands	r3, r2
 8005f74:	68ba      	ldr	r2, [r7, #8]
 8005f76:	429a      	cmp	r2, r3
 8005f78:	bf0c      	ite	eq
 8005f7a:	2301      	moveq	r3, #1
 8005f7c:	2300      	movne	r3, #0
 8005f7e:	b2db      	uxtb	r3, r3
 8005f80:	461a      	mov	r2, r3
 8005f82:	79fb      	ldrb	r3, [r7, #7]
 8005f84:	429a      	cmp	r2, r3
 8005f86:	d19b      	bne.n	8005ec0 <SPI_WaitFlagStateUntilTimeout+0x38>
    }
  }

  return HAL_OK;
 8005f88:	2300      	movs	r3, #0
}
 8005f8a:	4618      	mov	r0, r3
 8005f8c:	3720      	adds	r7, #32
 8005f8e:	46bd      	mov	sp, r7
 8005f90:	bd80      	pop	{r7, pc}
 8005f92:	bf00      	nop
 8005f94:	20000008 	.word	0x20000008

08005f98 <SPI_EndRxTransaction>:
  * @param  Timeout Timeout duration
  * @param  Tickstart tick start value
  * @retval HAL status
  */
static HAL_StatusTypeDef SPI_EndRxTransaction(SPI_HandleTypeDef *hspi,  uint32_t Timeout, uint32_t Tickstart)
{
 8005f98:	b580      	push	{r7, lr}
 8005f9a:	b086      	sub	sp, #24
 8005f9c:	af02      	add	r7, sp, #8
 8005f9e:	60f8      	str	r0, [r7, #12]
 8005fa0:	60b9      	str	r1, [r7, #8]
 8005fa2:	607a      	str	r2, [r7, #4]
  if ((hspi->Init.Mode == SPI_MODE_MASTER) && ((hspi->Init.Direction == SPI_DIRECTION_1LINE)
 8005fa4:	68fb      	ldr	r3, [r7, #12]
 8005fa6:	685b      	ldr	r3, [r3, #4]
 8005fa8:	f5b3 7f82 	cmp.w	r3, #260	@ 0x104
 8005fac:	d111      	bne.n	8005fd2 <SPI_EndRxTransaction+0x3a>
 8005fae:	68fb      	ldr	r3, [r7, #12]
 8005fb0:	689b      	ldr	r3, [r3, #8]
 8005fb2:	f5b3 4f00 	cmp.w	r3, #32768	@ 0x8000
 8005fb6:	d004      	beq.n	8005fc2 <SPI_EndRxTransaction+0x2a>
                                               || (hspi->Init.Direction == SPI_DIRECTION_2LINES_RXONLY)))
 8005fb8:	68fb      	ldr	r3, [r7, #12]
 8005fba:	689b      	ldr	r3, [r3, #8]
 8005fbc:	f5b3 6f80 	cmp.w	r3, #1024	@ 0x400
 8005fc0:	d107      	bne.n	8005fd2 <SPI_EndRxTransaction+0x3a>
  {
    /* Disable SPI peripheral */
    __HAL_SPI_DISABLE(hspi);
 8005fc2:	68fb      	ldr	r3, [r7, #12]
 8005fc4:	681b      	ldr	r3, [r3, #0]
 8005fc6:	681a      	ldr	r2, [r3, #0]
 8005fc8:	68fb      	ldr	r3, [r7, #12]
 8005fca:	681b      	ldr	r3, [r3, #0]
 8005fcc:	f022 0240 	bic.w	r2, r2, #64	@ 0x40
 8005fd0:	601a      	str	r2, [r3, #0]
  }

  /* Erratasheet: BSY bit may stay high at the end of a data transfer in Slave mode */
  if (hspi->Init.Mode == SPI_MODE_MASTER)
 8005fd2:	68fb      	ldr	r3, [r7, #12]
 8005fd4:	685b      	ldr	r3, [r3, #4]
 8005fd6:	f5b3 7f82 	cmp.w	r3, #260	@ 0x104
 8005fda:	d12a      	bne.n	8006032 <SPI_EndRxTransaction+0x9a>
  {
    if (hspi->Init.Direction != SPI_DIRECTION_2LINES_RXONLY)
 8005fdc:	68fb      	ldr	r3, [r7, #12]
 8005fde:	689b      	ldr	r3, [r3, #8]
 8005fe0:	f5b3 6f80 	cmp.w	r3, #1024	@ 0x400
 8005fe4:	d012      	beq.n	800600c <SPI_EndRxTransaction+0x74>
    {
      /* Control the BSY flag */
      if (SPI_WaitFlagStateUntilTimeout(hspi, SPI_FLAG_BSY, RESET, Timeout, Tickstart) != HAL_OK)
 8005fe6:	687b      	ldr	r3, [r7, #4]
 8005fe8:	9300      	str	r3, [sp, #0]
 8005fea:	68bb      	ldr	r3, [r7, #8]
 8005fec:	2200      	movs	r2, #0
 8005fee:	2180      	movs	r1, #128	@ 0x80
 8005ff0:	68f8      	ldr	r0, [r7, #12]
 8005ff2:	f7ff ff49 	bl	8005e88 <SPI_WaitFlagStateUntilTimeout>
 8005ff6:	4603      	mov	r3, r0
 8005ff8:	2b00      	cmp	r3, #0
 8005ffa:	d02d      	beq.n	8006058 <SPI_EndRxTransaction+0xc0>
      {
        SET_BIT(hspi->ErrorCode, HAL_SPI_ERROR_FLAG);
 8005ffc:	68fb      	ldr	r3, [r7, #12]
 8005ffe:	6d5b      	ldr	r3, [r3, #84]	@ 0x54
 8006000:	f043 0220 	orr.w	r2, r3, #32
 8006004:	68fb      	ldr	r3, [r7, #12]
 8006006:	655a      	str	r2, [r3, #84]	@ 0x54
        return HAL_TIMEOUT;
 8006008:	2303      	movs	r3, #3
 800600a:	e026      	b.n	800605a <SPI_EndRxTransaction+0xc2>
      }
    }
    else
    {
      /* Wait the RXNE reset */
      if (SPI_WaitFlagStateUntilTimeout(hspi, SPI_FLAG_RXNE, RESET, Timeout, Tickstart) != HAL_OK)
 800600c:	687b      	ldr	r3, [r7, #4]
 800600e:	9300      	str	r3, [sp, #0]
 8006010:	68bb      	ldr	r3, [r7, #8]
 8006012:	2200      	movs	r2, #0
 8006014:	2101      	movs	r1, #1
 8006016:	68f8      	ldr	r0, [r7, #12]
 8006018:	f7ff ff36 	bl	8005e88 <SPI_WaitFlagStateUntilTimeout>
 800601c:	4603      	mov	r3, r0
 800601e:	2b00      	cmp	r3, #0
 8006020:	d01a      	beq.n	8006058 <SPI_EndRxTransaction+0xc0>
      {
        SET_BIT(hspi->ErrorCode, HAL_SPI_ERROR_FLAG);
 8006022:	68fb      	ldr	r3, [r7, #12]
 8006024:	6d5b      	ldr	r3, [r3, #84]	@ 0x54
 8006026:	f043 0220 	orr.w	r2, r3, #32
 800602a:	68fb      	ldr	r3, [r7, #12]
 800602c:	655a      	str	r2, [r3, #84]	@ 0x54
        return HAL_TIMEOUT;
 800602e:	2303      	movs	r3, #3
 8006030:	e013      	b.n	800605a <SPI_EndRxTransaction+0xc2>
    }
  }
  else
  {
    /* Wait the RXNE reset */
    if (SPI_WaitFlagStateUntilTimeout(hspi, SPI_FLAG_RXNE, RESET, Timeout, Tickstart) != HAL_OK)
 8006032:	687b      	ldr	r3, [r7, #4]
 8006034:	9300      	str	r3, [sp, #0]
 8006036:	68bb      	ldr	r3, [r7, #8]
 8006038:	2200      	movs	r2, #0
 800603a:	2101      	movs	r1, #1
 800603c:	68f8      	ldr	r0, [r7, #12]
 800603e:	f7ff ff23 	bl	8005e88 <SPI_WaitFlagStateUntilTimeout>
 8006042:	4603      	mov	r3, r0
 8006044:	2b00      	cmp	r3, #0
 8006046:	d007      	beq.n	8006058 <SPI_EndRxTransaction+0xc0>
    {
      SET_BIT(hspi->ErrorCode, HAL_SPI_ERROR_FLAG);
 8006048:	68fb      	ldr	r3, [r7, #12]
 800604a:	6d5b      	ldr	r3, [r3, #84]	@ 0x54
 800604c:	f043 0220 	orr.w	r2, r3, #32
 8006050:	68fb      	ldr	r3, [r7, #12]
 8006052:	655a      	str	r2, [r3, #84]	@ 0x54
      return HAL_TIMEOUT;
 8006054:	2303      	movs	r3, #3
 8006056:	e000      	b.n	800605a <SPI_EndRxTransaction+0xc2>
    }
  }
  return HAL_OK;
 8006058:	2300      	movs	r3, #0
}
 800605a:	4618      	mov	r0, r3
 800605c:	3710      	adds	r7, #16
 800605e:	46bd      	mov	sp, r7
 8006060:	bd80      	pop	{r7, pc}
	...

08006064 <SPI_EndRxTxTransaction>:
  * @param  Timeout Timeout duration
  * @param  Tickstart tick start value
  * @retval HAL status
  */
static HAL_StatusTypeDef SPI_EndRxTxTransaction(SPI_HandleTypeDef *hspi, uint32_t Timeout, uint32_t Tickstart)
{
 8006064:	b580      	push	{r7, lr}
 8006066:	b088      	sub	sp, #32
 8006068:	af02      	add	r7, sp, #8
 800606a:	60f8      	str	r0, [r7, #12]
 800606c:	60b9      	str	r1, [r7, #8]
 800606e:	607a      	str	r2, [r7, #4]
  /* Wait until TXE flag */
  if(SPI_WaitFlagStateUntilTimeout(hspi, SPI_FLAG_TXE, SET, Timeout, Tickstart) != HAL_OK)
 8006070:	687b      	ldr	r3, [r7, #4]
 8006072:	9300      	str	r3, [sp, #0]
 8006074:	68bb      	ldr	r3, [r7, #8]
 8006076:	2201      	movs	r2, #1
 8006078:	2102      	movs	r1, #2
 800607a:	68f8      	ldr	r0, [r7, #12]
 800607c:	f7ff ff04 	bl	8005e88 <SPI_WaitFlagStateUntilTimeout>
 8006080:	4603      	mov	r3, r0
 8006082:	2b00      	cmp	r3, #0
 8006084:	d007      	beq.n	8006096 <SPI_EndRxTxTransaction+0x32>
  {
    SET_BIT(hspi->ErrorCode, HAL_SPI_ERROR_FLAG);
 8006086:	68fb      	ldr	r3, [r7, #12]
 8006088:	6d5b      	ldr	r3, [r3, #84]	@ 0x54
 800608a:	f043 0220 	orr.w	r2, r3, #32
 800608e:	68fb      	ldr	r3, [r7, #12]
 8006090:	655a      	str	r2, [r3, #84]	@ 0x54
    return HAL_TIMEOUT;
 8006092:	2303      	movs	r3, #3
 8006094:	e032      	b.n	80060fc <SPI_EndRxTxTransaction+0x98>
  }

  /* Timeout in µs */
  __IO uint32_t count = SPI_BSY_FLAG_WORKAROUND_TIMEOUT * (SystemCoreClock / 24U / 1000000U);
 8006096:	4b1b      	ldr	r3, [pc, #108]	@ (8006104 <SPI_EndRxTxTransaction+0xa0>)
 8006098:	681b      	ldr	r3, [r3, #0]
 800609a:	4a1b      	ldr	r2, [pc, #108]	@ (8006108 <SPI_EndRxTxTransaction+0xa4>)
 800609c:	fba2 2303 	umull	r2, r3, r2, r3
 80060a0:	0d5b      	lsrs	r3, r3, #21
 80060a2:	f44f 727a 	mov.w	r2, #1000	@ 0x3e8
 80060a6:	fb02 f303 	mul.w	r3, r2, r3
 80060aa:	617b      	str	r3, [r7, #20]
  /* Erratasheet: BSY bit may stay high at the end of a data transfer in Slave mode */
  if (hspi->Init.Mode == SPI_MODE_MASTER)
 80060ac:	68fb      	ldr	r3, [r7, #12]
 80060ae:	685b      	ldr	r3, [r3, #4]
 80060b0:	f5b3 7f82 	cmp.w	r3, #260	@ 0x104
 80060b4:	d112      	bne.n	80060dc <SPI_EndRxTxTransaction+0x78>
  {
    /* Control the BSY flag */
    if (SPI_WaitFlagStateUntilTimeout(hspi, SPI_FLAG_BSY, RESET, Timeout, Tickstart) != HAL_OK)
 80060b6:	687b      	ldr	r3, [r7, #4]
 80060b8:	9300      	str	r3, [sp, #0]
 80060ba:	68bb      	ldr	r3, [r7, #8]
 80060bc:	2200      	movs	r2, #0
 80060be:	2180      	movs	r1, #128	@ 0x80
 80060c0:	68f8      	ldr	r0, [r7, #12]
 80060c2:	f7ff fee1 	bl	8005e88 <SPI_WaitFlagStateUntilTimeout>
 80060c6:	4603      	mov	r3, r0
 80060c8:	2b00      	cmp	r3, #0
 80060ca:	d016      	beq.n	80060fa <SPI_EndRxTxTransaction+0x96>
    {
      SET_BIT(hspi->ErrorCode, HAL_SPI_ERROR_FLAG);
 80060cc:	68fb      	ldr	r3, [r7, #12]
 80060ce:	6d5b      	ldr	r3, [r3, #84]	@ 0x54
 80060d0:	f043 0220 	orr.w	r2, r3, #32
 80060d4:	68fb      	ldr	r3, [r7, #12]
 80060d6:	655a      	str	r2, [r3, #84]	@ 0x54
      return HAL_TIMEOUT;
 80060d8:	2303      	movs	r3, #3
 80060da:	e00f      	b.n	80060fc <SPI_EndRxTxTransaction+0x98>
    * User have to calculate the timeout value to fit with the time of 1 byte transfer.
    * This time is directly link with the SPI clock from Master device.
    */
    do
    {
      if (count == 0U)
 80060dc:	697b      	ldr	r3, [r7, #20]
 80060de:	2b00      	cmp	r3, #0
 80060e0:	d00a      	beq.n	80060f8 <SPI_EndRxTxTransaction+0x94>
      {
        break;
      }
      count--;
 80060e2:	697b      	ldr	r3, [r7, #20]
 80060e4:	3b01      	subs	r3, #1
 80060e6:	617b      	str	r3, [r7, #20]
    } while (__HAL_SPI_GET_FLAG(hspi, SPI_FLAG_BSY) != RESET);
 80060e8:	68fb      	ldr	r3, [r7, #12]
 80060ea:	681b      	ldr	r3, [r3, #0]
 80060ec:	689b      	ldr	r3, [r3, #8]
 80060ee:	f003 0380 	and.w	r3, r3, #128	@ 0x80
 80060f2:	2b80      	cmp	r3, #128	@ 0x80
 80060f4:	d0f2      	beq.n	80060dc <SPI_EndRxTxTransaction+0x78>
 80060f6:	e000      	b.n	80060fa <SPI_EndRxTxTransaction+0x96>
        break;
 80060f8:	bf00      	nop
  }

  return HAL_OK;
 80060fa:	2300      	movs	r3, #0
}
 80060fc:	4618      	mov	r0, r3
 80060fe:	3718      	adds	r7, #24
 8006100:	46bd      	mov	sp, r7
 8006102:	bd80      	pop	{r7, pc}
 8006104:	20000008 	.word	0x20000008
 8006108:	165e9f81 	.word	0x165e9f81

0800610c <HAL_TIM_Base_Init>:
  *         Ex: call @ref HAL_TIM_Base_DeInit() before HAL_TIM_Base_Init()
  * @param  htim TIM Base handle
  * @retval HAL status
  */
HAL_StatusTypeDef HAL_TIM_Base_Init(TIM_HandleTypeDef *htim)
{
 800610c:	b580      	push	{r7, lr}
 800610e:	b082      	sub	sp, #8
 8006110:	af00      	add	r7, sp, #0
 8006112:	6078      	str	r0, [r7, #4]
  /* Check the TIM handle allocation */
  if (htim == NULL)
 8006114:	687b      	ldr	r3, [r7, #4]
 8006116:	2b00      	cmp	r3, #0
 8006118:	d101      	bne.n	800611e <HAL_TIM_Base_Init+0x12>
  {
    return HAL_ERROR;
 800611a:	2301      	movs	r3, #1
 800611c:	e041      	b.n	80061a2 <HAL_TIM_Base_Init+0x96>
  assert_param(IS_TIM_COUNTER_MODE(htim->Init.CounterMode));
  assert_param(IS_TIM_CLOCKDIVISION_DIV(htim->Init.ClockDivision));
  assert_param(IS_TIM_PERIOD(htim, htim->Init.Period));
  assert_param(IS_TIM_AUTORELOAD_PRELOAD(htim->Init.AutoReloadPreload));

  if (htim->State == HAL_TIM_STATE_RESET)
 800611e:	687b      	ldr	r3, [r7, #4]
 8006120:	f893 303d 	ldrb.w	r3, [r3, #61]	@ 0x3d
 8006124:	b2db      	uxtb	r3, r3
 8006126:	2b00      	cmp	r3, #0
 8006128:	d106      	bne.n	8006138 <HAL_TIM_Base_Init+0x2c>
  {
    /* Allocate lock resource and initialize it */
    htim->Lock = HAL_UNLOCKED;
 800612a:	687b      	ldr	r3, [r7, #4]
 800612c:	2200      	movs	r2, #0
 800612e:	f883 203c 	strb.w	r2, [r3, #60]	@ 0x3c
    }
    /* Init the low level hardware : GPIO, CLOCK, NVIC */
    htim->Base_MspInitCallback(htim);
#else
    /* Init the low level hardware : GPIO, CLOCK, NVIC */
    HAL_TIM_Base_MspInit(htim);
 8006132:	6878      	ldr	r0, [r7, #4]
 8006134:	f7fa ff76 	bl	8001024 <HAL_TIM_Base_MspInit>
#endif /* USE_HAL_TIM_REGISTER_CALLBACKS */
  }

  /* Set the TIM state */
  htim->State = HAL_TIM_STATE_BUSY;
 8006138:	687b      	ldr	r3, [r7, #4]
 800613a:	2202      	movs	r2, #2
 800613c:	f883 203d 	strb.w	r2, [r3, #61]	@ 0x3d

  /* Set the Time Base configuration */
  TIM_Base_SetConfig(htim->Instance, &htim->Init);
 8006140:	687b      	ldr	r3, [r7, #4]
 8006142:	681a      	ldr	r2, [r3, #0]
 8006144:	687b      	ldr	r3, [r7, #4]
 8006146:	3304      	adds	r3, #4
 8006148:	4619      	mov	r1, r3
 800614a:	4610      	mov	r0, r2
 800614c:	f000 fb9a 	bl	8006884 <TIM_Base_SetConfig>

  /* Initialize the DMA burst operation state */
  htim->DMABurstState = HAL_DMA_BURST_STATE_READY;
 8006150:	687b      	ldr	r3, [r7, #4]
 8006152:	2201      	movs	r2, #1
 8006154:	f883 2046 	strb.w	r2, [r3, #70]	@ 0x46

  /* Initialize the TIM channels state */
  TIM_CHANNEL_STATE_SET_ALL(htim, HAL_TIM_CHANNEL_STATE_READY);
 8006158:	687b      	ldr	r3, [r7, #4]
 800615a:	2201      	movs	r2, #1
 800615c:	f883 203e 	strb.w	r2, [r3, #62]	@ 0x3e
 8006160:	687b      	ldr	r3, [r7, #4]
 8006162:	2201      	movs	r2, #1
 8006164:	f883 203f 	strb.w	r2, [r3, #63]	@ 0x3f
 8006168:	687b      	ldr	r3, [r7, #4]
 800616a:	2201      	movs	r2, #1
 800616c:	f883 2040 	strb.w	r2, [r3, #64]	@ 0x40
 8006170:	687b      	ldr	r3, [r7, #4]
 8006172:	2201      	movs	r2, #1
 8006174:	f883 2041 	strb.w	r2, [r3, #65]	@ 0x41
  TIM_CHANNEL_N_STATE_SET_ALL(htim, HAL_TIM_CHANNEL_STATE_READY);
 8006178:	687b      	ldr	r3, [r7, #4]
 800617a:	2201      	movs	r2, #1
 800617c:	f883 2042 	strb.w	r2, [r3, #66]	@ 0x42
 8006180:	687b      	ldr	r3, [r7, #4]
 8006182:	2201      	movs	r2, #1
 8006184:	f883 2043 	strb.w	r2, [r3, #67]	@ 0x43
 8006188:	687b      	ldr	r3, [r7, #4]
 800618a:	2201      	movs	r2, #1
 800618c:	f883 2044 	strb.w	r2, [r3, #68]	@ 0x44
 8006190:	687b      	ldr	r3, [r7, #4]
 8006192:	2201      	movs	r2, #1
 8006194:	f883 2045 	strb.w	r2, [r3, #69]	@ 0x45

  /* Initialize the TIM state*/
  htim->State = HAL_TIM_STATE_READY;
 8006198:	687b      	ldr	r3, [r7, #4]
 800619a:	2201      	movs	r2, #1
 800619c:	f883 203d 	strb.w	r2, [r3, #61]	@ 0x3d

  return HAL_OK;
 80061a0:	2300      	movs	r3, #0
}
 80061a2:	4618      	mov	r0, r3
 80061a4:	3708      	adds	r7, #8
 80061a6:	46bd      	mov	sp, r7
 80061a8:	bd80      	pop	{r7, pc}
	...

080061ac <HAL_TIM_Base_Start_IT>:
  * @brief  Starts the TIM Base generation in interrupt mode.
  * @param  htim TIM Base handle
  * @retval HAL status
  */
HAL_StatusTypeDef HAL_TIM_Base_Start_IT(TIM_HandleTypeDef *htim)
{
 80061ac:	b480      	push	{r7}
 80061ae:	b085      	sub	sp, #20
 80061b0:	af00      	add	r7, sp, #0
 80061b2:	6078      	str	r0, [r7, #4]

  /* Check the parameters */
  assert_param(IS_TIM_INSTANCE(htim->Instance));

  /* Check the TIM state */
  if (htim->State != HAL_TIM_STATE_READY)
 80061b4:	687b      	ldr	r3, [r7, #4]
 80061b6:	f893 303d 	ldrb.w	r3, [r3, #61]	@ 0x3d
 80061ba:	b2db      	uxtb	r3, r3
 80061bc:	2b01      	cmp	r3, #1
 80061be:	d001      	beq.n	80061c4 <HAL_TIM_Base_Start_IT+0x18>
  {
    return HAL_ERROR;
 80061c0:	2301      	movs	r3, #1
 80061c2:	e04e      	b.n	8006262 <HAL_TIM_Base_Start_IT+0xb6>
  }

  /* Set the TIM state */
  htim->State = HAL_TIM_STATE_BUSY;
 80061c4:	687b      	ldr	r3, [r7, #4]
 80061c6:	2202      	movs	r2, #2
 80061c8:	f883 203d 	strb.w	r2, [r3, #61]	@ 0x3d

  /* Enable the TIM Update interrupt */
  __HAL_TIM_ENABLE_IT(htim, TIM_IT_UPDATE);
 80061cc:	687b      	ldr	r3, [r7, #4]
 80061ce:	681b      	ldr	r3, [r3, #0]
 80061d0:	68da      	ldr	r2, [r3, #12]
 80061d2:	687b      	ldr	r3, [r7, #4]
 80061d4:	681b      	ldr	r3, [r3, #0]
 80061d6:	f042 0201 	orr.w	r2, r2, #1
 80061da:	60da      	str	r2, [r3, #12]

  /* Enable the Peripheral, except in trigger mode where enable is automatically done with trigger */
  if (IS_TIM_SLAVE_INSTANCE(htim->Instance))
 80061dc:	687b      	ldr	r3, [r7, #4]
 80061de:	681b      	ldr	r3, [r3, #0]
 80061e0:	4a23      	ldr	r2, [pc, #140]	@ (8006270 <HAL_TIM_Base_Start_IT+0xc4>)
 80061e2:	4293      	cmp	r3, r2
 80061e4:	d022      	beq.n	800622c <HAL_TIM_Base_Start_IT+0x80>
 80061e6:	687b      	ldr	r3, [r7, #4]
 80061e8:	681b      	ldr	r3, [r3, #0]
 80061ea:	f1b3 4f80 	cmp.w	r3, #1073741824	@ 0x40000000
 80061ee:	d01d      	beq.n	800622c <HAL_TIM_Base_Start_IT+0x80>
 80061f0:	687b      	ldr	r3, [r7, #4]
 80061f2:	681b      	ldr	r3, [r3, #0]
 80061f4:	4a1f      	ldr	r2, [pc, #124]	@ (8006274 <HAL_TIM_Base_Start_IT+0xc8>)
 80061f6:	4293      	cmp	r3, r2
 80061f8:	d018      	beq.n	800622c <HAL_TIM_Base_Start_IT+0x80>
 80061fa:	687b      	ldr	r3, [r7, #4]
 80061fc:	681b      	ldr	r3, [r3, #0]
 80061fe:	4a1e      	ldr	r2, [pc, #120]	@ (8006278 <HAL_TIM_Base_Start_IT+0xcc>)
 8006200:	4293      	cmp	r3, r2
 8006202:	d013      	beq.n	800622c <HAL_TIM_Base_Start_IT+0x80>
 8006204:	687b      	ldr	r3, [r7, #4]
 8006206:	681b      	ldr	r3, [r3, #0]
 8006208:	4a1c      	ldr	r2, [pc, #112]	@ (800627c <HAL_TIM_Base_Start_IT+0xd0>)
 800620a:	4293      	cmp	r3, r2
 800620c:	d00e      	beq.n	800622c <HAL_TIM_Base_Start_IT+0x80>
 800620e:	687b      	ldr	r3, [r7, #4]
 8006210:	681b      	ldr	r3, [r3, #0]
 8006212:	4a1b      	ldr	r2, [pc, #108]	@ (8006280 <HAL_TIM_Base_Start_IT+0xd4>)
 8006214:	4293      	cmp	r3, r2
 8006216:	d009      	beq.n	800622c <HAL_TIM_Base_Start_IT+0x80>
 8006218:	687b      	ldr	r3, [r7, #4]
 800621a:	681b      	ldr	r3, [r3, #0]
 800621c:	4a19      	ldr	r2, [pc, #100]	@ (8006284 <HAL_TIM_Base_Start_IT+0xd8>)
 800621e:	4293      	cmp	r3, r2
 8006220:	d004      	beq.n	800622c <HAL_TIM_Base_Start_IT+0x80>
 8006222:	687b      	ldr	r3, [r7, #4]
 8006224:	681b      	ldr	r3, [r3, #0]
 8006226:	4a18      	ldr	r2, [pc, #96]	@ (8006288 <HAL_TIM_Base_Start_IT+0xdc>)
 8006228:	4293      	cmp	r3, r2
 800622a:	d111      	bne.n	8006250 <HAL_TIM_Base_Start_IT+0xa4>
  {
    tmpsmcr = htim->Instance->SMCR & TIM_SMCR_SMS;
 800622c:	687b      	ldr	r3, [r7, #4]
 800622e:	681b      	ldr	r3, [r3, #0]
 8006230:	689b      	ldr	r3, [r3, #8]
 8006232:	f003 0307 	and.w	r3, r3, #7
 8006236:	60fb      	str	r3, [r7, #12]
    if (!IS_TIM_SLAVEMODE_TRIGGER_ENABLED(tmpsmcr))
 8006238:	68fb      	ldr	r3, [r7, #12]
 800623a:	2b06      	cmp	r3, #6
 800623c:	d010      	beq.n	8006260 <HAL_TIM_Base_Start_IT+0xb4>
    {
      __HAL_TIM_ENABLE(htim);
 800623e:	687b      	ldr	r3, [r7, #4]
 8006240:	681b      	ldr	r3, [r3, #0]
 8006242:	681a      	ldr	r2, [r3, #0]
 8006244:	687b      	ldr	r3, [r7, #4]
 8006246:	681b      	ldr	r3, [r3, #0]
 8006248:	f042 0201 	orr.w	r2, r2, #1
 800624c:	601a      	str	r2, [r3, #0]
    if (!IS_TIM_SLAVEMODE_TRIGGER_ENABLED(tmpsmcr))
 800624e:	e007      	b.n	8006260 <HAL_TIM_Base_Start_IT+0xb4>
    }
  }
  else
  {
    __HAL_TIM_ENABLE(htim);
 8006250:	687b      	ldr	r3, [r7, #4]
 8006252:	681b      	ldr	r3, [r3, #0]
 8006254:	681a      	ldr	r2, [r3, #0]
 8006256:	687b      	ldr	r3, [r7, #4]
 8006258:	681b      	ldr	r3, [r3, #0]
 800625a:	f042 0201 	orr.w	r2, r2, #1
 800625e:	601a      	str	r2, [r3, #0]
  }

  /* Return function status */
  return HAL_OK;
 8006260:	2300      	movs	r3, #0
}
 8006262:	4618      	mov	r0, r3
 8006264:	3714      	adds	r7, #20
 8006266:	46bd      	mov	sp, r7
 8006268:	f85d 7b04 	ldr.w	r7, [sp], #4
 800626c:	4770      	bx	lr
 800626e:	bf00      	nop
 8006270:	40010000 	.word	0x40010000
 8006274:	40000400 	.word	0x40000400
 8006278:	40000800 	.word	0x40000800
 800627c:	40000c00 	.word	0x40000c00
 8006280:	40010400 	.word	0x40010400
 8006284:	40014000 	.word	0x40014000
 8006288:	40001800 	.word	0x40001800

0800628c <HAL_TIM_PWM_Init>:
  *         Ex: call @ref HAL_TIM_PWM_DeInit() before HAL_TIM_PWM_Init()
  * @param  htim TIM PWM handle
  * @retval HAL status
  */
HAL_StatusTypeDef HAL_TIM_PWM_Init(TIM_HandleTypeDef *htim)
{
 800628c:	b580      	push	{r7, lr}
 800628e:	b082      	sub	sp, #8
 8006290:	af00      	add	r7, sp, #0
 8006292:	6078      	str	r0, [r7, #4]
  /* Check the TIM handle allocation */
  if (htim == NULL)
 8006294:	687b      	ldr	r3, [r7, #4]
 8006296:	2b00      	cmp	r3, #0
 8006298:	d101      	bne.n	800629e <HAL_TIM_PWM_Init+0x12>
  {
    return HAL_ERROR;
 800629a:	2301      	movs	r3, #1
 800629c:	e041      	b.n	8006322 <HAL_TIM_PWM_Init+0x96>
  assert_param(IS_TIM_COUNTER_MODE(htim->Init.CounterMode));
  assert_param(IS_TIM_CLOCKDIVISION_DIV(htim->Init.ClockDivision));
  assert_param(IS_TIM_PERIOD(htim, htim->Init.Period));
  assert_param(IS_TIM_AUTORELOAD_PRELOAD(htim->Init.AutoReloadPreload));

  if (htim->State == HAL_TIM_STATE_RESET)
 800629e:	687b      	ldr	r3, [r7, #4]
 80062a0:	f893 303d 	ldrb.w	r3, [r3, #61]	@ 0x3d
 80062a4:	b2db      	uxtb	r3, r3
 80062a6:	2b00      	cmp	r3, #0
 80062a8:	d106      	bne.n	80062b8 <HAL_TIM_PWM_Init+0x2c>
  {
    /* Allocate lock resource and initialize it */
    htim->Lock = HAL_UNLOCKED;
 80062aa:	687b      	ldr	r3, [r7, #4]
 80062ac:	2200      	movs	r2, #0
 80062ae:	f883 203c 	strb.w	r2, [r3, #60]	@ 0x3c
    }
    /* Init the low level hardware : GPIO, CLOCK, NVIC */
    htim->PWM_MspInitCallback(htim);
#else
    /* Init the low level hardware : GPIO, CLOCK, NVIC and DMA */
    HAL_TIM_PWM_MspInit(htim);
 80062b2:	6878      	ldr	r0, [r7, #4]
 80062b4:	f000 f839 	bl	800632a <HAL_TIM_PWM_MspInit>
#endif /* USE_HAL_TIM_REGISTER_CALLBACKS */
  }

  /* Set the TIM state */
  htim->State = HAL_TIM_STATE_BUSY;
 80062b8:	687b      	ldr	r3, [r7, #4]
 80062ba:	2202      	movs	r2, #2
 80062bc:	f883 203d 	strb.w	r2, [r3, #61]	@ 0x3d

  /* Init the base time for the PWM */
  TIM_Base_SetConfig(htim->Instance, &htim->Init);
 80062c0:	687b      	ldr	r3, [r7, #4]
 80062c2:	681a      	ldr	r2, [r3, #0]
 80062c4:	687b      	ldr	r3, [r7, #4]
 80062c6:	3304      	adds	r3, #4
 80062c8:	4619      	mov	r1, r3
 80062ca:	4610      	mov	r0, r2
 80062cc:	f000 fada 	bl	8006884 <TIM_Base_SetConfig>

  /* Initialize the DMA burst operation state */
  htim->DMABurstState = HAL_DMA_BURST_STATE_READY;
 80062d0:	687b      	ldr	r3, [r7, #4]
 80062d2:	2201      	movs	r2, #1
 80062d4:	f883 2046 	strb.w	r2, [r3, #70]	@ 0x46

  /* Initialize the TIM channels state */
  TIM_CHANNEL_STATE_SET_ALL(htim, HAL_TIM_CHANNEL_STATE_READY);
 80062d8:	687b      	ldr	r3, [r7, #4]
 80062da:	2201      	movs	r2, #1
 80062dc:	f883 203e 	strb.w	r2, [r3, #62]	@ 0x3e
 80062e0:	687b      	ldr	r3, [r7, #4]
 80062e2:	2201      	movs	r2, #1
 80062e4:	f883 203f 	strb.w	r2, [r3, #63]	@ 0x3f
 80062e8:	687b      	ldr	r3, [r7, #4]
 80062ea:	2201      	movs	r2, #1
 80062ec:	f883 2040 	strb.w	r2, [r3, #64]	@ 0x40
 80062f0:	687b      	ldr	r3, [r7, #4]
 80062f2:	2201      	movs	r2, #1
 80062f4:	f883 2041 	strb.w	r2, [r3, #65]	@ 0x41
  TIM_CHANNEL_N_STATE_SET_ALL(htim, HAL_TIM_CHANNEL_STATE_READY);
 80062f8:	687b      	ldr	r3, [r7, #4]
 80062fa:	2201      	movs	r2, #1
 80062fc:	f883 2042 	strb.w	r2, [r3, #66]	@ 0x42
 8006300:	687b      	ldr	r3, [r7, #4]
 8006302:	2201      	movs	r2, #1
 8006304:	f883 2043 	strb.w	r2, [r3, #67]	@ 0x43
 8006308:	687b      	ldr	r3, [r7, #4]
 800630a:	2201      	movs	r2, #1
 800630c:	f883 2044 	strb.w	r2, [r3, #68]	@ 0x44
 8006310:	687b      	ldr	r3, [r7, #4]
 8006312:	2201      	movs	r2, #1
 8006314:	f883 2045 	strb.w	r2, [r3, #69]	@ 0x45

  /* Initialize the TIM state*/
  htim->State = HAL_TIM_STATE_READY;
 8006318:	687b      	ldr	r3, [r7, #4]
 800631a:	2201      	movs	r2, #1
 800631c:	f883 203d 	strb.w	r2, [r3, #61]	@ 0x3d

  return HAL_OK;
 8006320:	2300      	movs	r3, #0
}
 8006322:	4618      	mov	r0, r3
 8006324:	3708      	adds	r7, #8
 8006326:	46bd      	mov	sp, r7
 8006328:	bd80      	pop	{r7, pc}

0800632a <HAL_TIM_PWM_MspInit>:
  * @brief  Initializes the TIM PWM MSP.
  * @param  htim TIM PWM handle
  * @retval None
  */
__weak void HAL_TIM_PWM_MspInit(TIM_HandleTypeDef *htim)
{
 800632a:	b480      	push	{r7}
 800632c:	b083      	sub	sp, #12
 800632e:	af00      	add	r7, sp, #0
 8006330:	6078      	str	r0, [r7, #4]
  UNUSED(htim);

  /* NOTE : This function should not be modified, when the callback is needed,
            the HAL_TIM_PWM_MspInit could be implemented in the user file
   */
}
 8006332:	bf00      	nop
 8006334:	370c      	adds	r7, #12
 8006336:	46bd      	mov	sp, r7
 8006338:	f85d 7b04 	ldr.w	r7, [sp], #4
 800633c:	4770      	bx	lr

0800633e <HAL_TIM_IRQHandler>:
  * @brief  This function handles TIM interrupts requests.
  * @param  htim TIM  handle
  * @retval None
  */
void HAL_TIM_IRQHandler(TIM_HandleTypeDef *htim)
{
 800633e:	b580      	push	{r7, lr}
 8006340:	b084      	sub	sp, #16
 8006342:	af00      	add	r7, sp, #0
 8006344:	6078      	str	r0, [r7, #4]
  uint32_t itsource = htim->Instance->DIER;
 8006346:	687b      	ldr	r3, [r7, #4]
 8006348:	681b      	ldr	r3, [r3, #0]
 800634a:	68db      	ldr	r3, [r3, #12]
 800634c:	60fb      	str	r3, [r7, #12]
  uint32_t itflag   = htim->Instance->SR;
 800634e:	687b      	ldr	r3, [r7, #4]
 8006350:	681b      	ldr	r3, [r3, #0]
 8006352:	691b      	ldr	r3, [r3, #16]
 8006354:	60bb      	str	r3, [r7, #8]

  /* Capture compare 1 event */
  if ((itflag & (TIM_FLAG_CC1)) == (TIM_FLAG_CC1))
 8006356:	68bb      	ldr	r3, [r7, #8]
 8006358:	f003 0302 	and.w	r3, r3, #2
 800635c:	2b00      	cmp	r3, #0
 800635e:	d020      	beq.n	80063a2 <HAL_TIM_IRQHandler+0x64>
  {
    if ((itsource & (TIM_IT_CC1)) == (TIM_IT_CC1))
 8006360:	68fb      	ldr	r3, [r7, #12]
 8006362:	f003 0302 	and.w	r3, r3, #2
 8006366:	2b00      	cmp	r3, #0
 8006368:	d01b      	beq.n	80063a2 <HAL_TIM_IRQHandler+0x64>
    {
      {
        __HAL_TIM_CLEAR_FLAG(htim, TIM_FLAG_CC1);
 800636a:	687b      	ldr	r3, [r7, #4]
 800636c:	681b      	ldr	r3, [r3, #0]
 800636e:	f06f 0202 	mvn.w	r2, #2
 8006372:	611a      	str	r2, [r3, #16]
        htim->Channel = HAL_TIM_ACTIVE_CHANNEL_1;
 8006374:	687b      	ldr	r3, [r7, #4]
 8006376:	2201      	movs	r2, #1
 8006378:	771a      	strb	r2, [r3, #28]

        /* Input capture event */
        if ((htim->Instance->CCMR1 & TIM_CCMR1_CC1S) != 0x00U)
 800637a:	687b      	ldr	r3, [r7, #4]
 800637c:	681b      	ldr	r3, [r3, #0]
 800637e:	699b      	ldr	r3, [r3, #24]
 8006380:	f003 0303 	and.w	r3, r3, #3
 8006384:	2b00      	cmp	r3, #0
 8006386:	d003      	beq.n	8006390 <HAL_TIM_IRQHandler+0x52>
        {
#if (USE_HAL_TIM_REGISTER_CALLBACKS == 1)
          htim->IC_CaptureCallback(htim);
#else
          HAL_TIM_IC_CaptureCallback(htim);
 8006388:	6878      	ldr	r0, [r7, #4]
 800638a:	f000 fa5c 	bl	8006846 <HAL_TIM_IC_CaptureCallback>
 800638e:	e005      	b.n	800639c <HAL_TIM_IRQHandler+0x5e>
        {
#if (USE_HAL_TIM_REGISTER_CALLBACKS == 1)
          htim->OC_DelayElapsedCallback(htim);
          htim->PWM_PulseFinishedCallback(htim);
#else
          HAL_TIM_OC_DelayElapsedCallback(htim);
 8006390:	6878      	ldr	r0, [r7, #4]
 8006392:	f000 fa4e 	bl	8006832 <HAL_TIM_OC_DelayElapsedCallback>
          HAL_TIM_PWM_PulseFinishedCallback(htim);
 8006396:	6878      	ldr	r0, [r7, #4]
 8006398:	f000 fa5f 	bl	800685a <HAL_TIM_PWM_PulseFinishedCallback>
#endif /* USE_HAL_TIM_REGISTER_CALLBACKS */
        }
        htim->Channel = HAL_TIM_ACTIVE_CHANNEL_CLEARED;
 800639c:	687b      	ldr	r3, [r7, #4]
 800639e:	2200      	movs	r2, #0
 80063a0:	771a      	strb	r2, [r3, #28]
      }
    }
  }
  /* Capture compare 2 event */
  if ((itflag & (TIM_FLAG_CC2)) == (TIM_FLAG_CC2))
 80063a2:	68bb      	ldr	r3, [r7, #8]
 80063a4:	f003 0304 	and.w	r3, r3, #4
 80063a8:	2b00      	cmp	r3, #0
 80063aa:	d020      	beq.n	80063ee <HAL_TIM_IRQHandler+0xb0>
  {
    if ((itsource & (TIM_IT_CC2)) == (TIM_IT_CC2))
 80063ac:	68fb      	ldr	r3, [r7, #12]
 80063ae:	f003 0304 	and.w	r3, r3, #4
 80063b2:	2b00      	cmp	r3, #0
 80063b4:	d01b      	beq.n	80063ee <HAL_TIM_IRQHandler+0xb0>
    {
      __HAL_TIM_CLEAR_FLAG(htim, TIM_FLAG_CC2);
 80063b6:	687b      	ldr	r3, [r7, #4]
 80063b8:	681b      	ldr	r3, [r3, #0]
 80063ba:	f06f 0204 	mvn.w	r2, #4
 80063be:	611a      	str	r2, [r3, #16]
      htim->Channel = HAL_TIM_ACTIVE_CHANNEL_2;
 80063c0:	687b      	ldr	r3, [r7, #4]
 80063c2:	2202      	movs	r2, #2
 80063c4:	771a      	strb	r2, [r3, #28]
      /* Input capture event */
      if ((htim->Instance->CCMR1 & TIM_CCMR1_CC2S) != 0x00U)
 80063c6:	687b      	ldr	r3, [r7, #4]
 80063c8:	681b      	ldr	r3, [r3, #0]
 80063ca:	699b      	ldr	r3, [r3, #24]
 80063cc:	f403 7340 	and.w	r3, r3, #768	@ 0x300
 80063d0:	2b00      	cmp	r3, #0
 80063d2:	d003      	beq.n	80063dc <HAL_TIM_IRQHandler+0x9e>
      {
#if (USE_HAL_TIM_REGISTER_CALLBACKS == 1)
        htim->IC_CaptureCallback(htim);
#else
        HAL_TIM_IC_CaptureCallback(htim);
 80063d4:	6878      	ldr	r0, [r7, #4]
 80063d6:	f000 fa36 	bl	8006846 <HAL_TIM_IC_CaptureCallback>
 80063da:	e005      	b.n	80063e8 <HAL_TIM_IRQHandler+0xaa>
      {
#if (USE_HAL_TIM_REGISTER_CALLBACKS == 1)
        htim->OC_DelayElapsedCallback(htim);
        htim->PWM_PulseFinishedCallback(htim);
#else
        HAL_TIM_OC_DelayElapsedCallback(htim);
 80063dc:	6878      	ldr	r0, [r7, #4]
 80063de:	f000 fa28 	bl	8006832 <HAL_TIM_OC_DelayElapsedCallback>
        HAL_TIM_PWM_PulseFinishedCallback(htim);
 80063e2:	6878      	ldr	r0, [r7, #4]
 80063e4:	f000 fa39 	bl	800685a <HAL_TIM_PWM_PulseFinishedCallback>
#endif /* USE_HAL_TIM_REGISTER_CALLBACKS */
      }
      htim->Channel = HAL_TIM_ACTIVE_CHANNEL_CLEARED;
 80063e8:	687b      	ldr	r3, [r7, #4]
 80063ea:	2200      	movs	r2, #0
 80063ec:	771a      	strb	r2, [r3, #28]
    }
  }
  /* Capture compare 3 event */
  if ((itflag & (TIM_FLAG_CC3)) == (TIM_FLAG_CC3))
 80063ee:	68bb      	ldr	r3, [r7, #8]
 80063f0:	f003 0308 	and.w	r3, r3, #8
 80063f4:	2b00      	cmp	r3, #0
 80063f6:	d020      	beq.n	800643a <HAL_TIM_IRQHandler+0xfc>
  {
    if ((itsource & (TIM_IT_CC3)) == (TIM_IT_CC3))
 80063f8:	68fb      	ldr	r3, [r7, #12]
 80063fa:	f003 0308 	and.w	r3, r3, #8
 80063fe:	2b00      	cmp	r3, #0
 8006400:	d01b      	beq.n	800643a <HAL_TIM_IRQHandler+0xfc>
    {
      __HAL_TIM_CLEAR_FLAG(htim, TIM_FLAG_CC3);
 8006402:	687b      	ldr	r3, [r7, #4]
 8006404:	681b      	ldr	r3, [r3, #0]
 8006406:	f06f 0208 	mvn.w	r2, #8
 800640a:	611a      	str	r2, [r3, #16]
      htim->Channel = HAL_TIM_ACTIVE_CHANNEL_3;
 800640c:	687b      	ldr	r3, [r7, #4]
 800640e:	2204      	movs	r2, #4
 8006410:	771a      	strb	r2, [r3, #28]
      /* Input capture event */
      if ((htim->Instance->CCMR2 & TIM_CCMR2_CC3S) != 0x00U)
 8006412:	687b      	ldr	r3, [r7, #4]
 8006414:	681b      	ldr	r3, [r3, #0]
 8006416:	69db      	ldr	r3, [r3, #28]
 8006418:	f003 0303 	and.w	r3, r3, #3
 800641c:	2b00      	cmp	r3, #0
 800641e:	d003      	beq.n	8006428 <HAL_TIM_IRQHandler+0xea>
      {
#if (USE_HAL_TIM_REGISTER_CALLBACKS == 1)
        htim->IC_CaptureCallback(htim);
#else
        HAL_TIM_IC_CaptureCallback(htim);
 8006420:	6878      	ldr	r0, [r7, #4]
 8006422:	f000 fa10 	bl	8006846 <HAL_TIM_IC_CaptureCallback>
 8006426:	e005      	b.n	8006434 <HAL_TIM_IRQHandler+0xf6>
      {
#if (USE_HAL_TIM_REGISTER_CALLBACKS == 1)
        htim->OC_DelayElapsedCallback(htim);
        htim->PWM_PulseFinishedCallback(htim);
#else
        HAL_TIM_OC_DelayElapsedCallback(htim);
 8006428:	6878      	ldr	r0, [r7, #4]
 800642a:	f000 fa02 	bl	8006832 <HAL_TIM_OC_DelayElapsedCallback>
        HAL_TIM_PWM_PulseFinishedCallback(htim);
 800642e:	6878      	ldr	r0, [r7, #4]
 8006430:	f000 fa13 	bl	800685a <HAL_TIM_PWM_PulseFinishedCallback>
#endif /* USE_HAL_TIM_REGISTER_CALLBACKS */
      }
      htim->Channel = HAL_TIM_ACTIVE_CHANNEL_CLEARED;
 8006434:	687b      	ldr	r3, [r7, #4]
 8006436:	2200      	movs	r2, #0
 8006438:	771a      	strb	r2, [r3, #28]
    }
  }
  /* Capture compare 4 event */
  if ((itflag & (TIM_FLAG_CC4)) == (TIM_FLAG_CC4))
 800643a:	68bb      	ldr	r3, [r7, #8]
 800643c:	f003 0310 	and.w	r3, r3, #16
 8006440:	2b00      	cmp	r3, #0
 8006442:	d020      	beq.n	8006486 <HAL_TIM_IRQHandler+0x148>
  {
    if ((itsource & (TIM_IT_CC4)) == (TIM_IT_CC4))
 8006444:	68fb      	ldr	r3, [r7, #12]
 8006446:	f003 0310 	and.w	r3, r3, #16
 800644a:	2b00      	cmp	r3, #0
 800644c:	d01b      	beq.n	8006486 <HAL_TIM_IRQHandler+0x148>
    {
      __HAL_TIM_CLEAR_FLAG(htim, TIM_FLAG_CC4);
 800644e:	687b      	ldr	r3, [r7, #4]
 8006450:	681b      	ldr	r3, [r3, #0]
 8006452:	f06f 0210 	mvn.w	r2, #16
 8006456:	611a      	str	r2, [r3, #16]
      htim->Channel = HAL_TIM_ACTIVE_CHANNEL_4;
 8006458:	687b      	ldr	r3, [r7, #4]
 800645a:	2208      	movs	r2, #8
 800645c:	771a      	strb	r2, [r3, #28]
      /* Input capture event */
      if ((htim->Instance->CCMR2 & TIM_CCMR2_CC4S) != 0x00U)
 800645e:	687b      	ldr	r3, [r7, #4]
 8006460:	681b      	ldr	r3, [r3, #0]
 8006462:	69db      	ldr	r3, [r3, #28]
 8006464:	f403 7340 	and.w	r3, r3, #768	@ 0x300
 8006468:	2b00      	cmp	r3, #0
 800646a:	d003      	beq.n	8006474 <HAL_TIM_IRQHandler+0x136>
      {
#if (USE_HAL_TIM_REGISTER_CALLBACKS == 1)
        htim->IC_CaptureCallback(htim);
#else
        HAL_TIM_IC_CaptureCallback(htim);
 800646c:	6878      	ldr	r0, [r7, #4]
 800646e:	f000 f9ea 	bl	8006846 <HAL_TIM_IC_CaptureCallback>
 8006472:	e005      	b.n	8006480 <HAL_TIM_IRQHandler+0x142>
      {
#if (USE_HAL_TIM_REGISTER_CALLBACKS == 1)
        htim->OC_DelayElapsedCallback(htim);
        htim->PWM_PulseFinishedCallback(htim);
#else
        HAL_TIM_OC_DelayElapsedCallback(htim);
 8006474:	6878      	ldr	r0, [r7, #4]
 8006476:	f000 f9dc 	bl	8006832 <HAL_TIM_OC_DelayElapsedCallback>
        HAL_TIM_PWM_PulseFinishedCallback(htim);
 800647a:	6878      	ldr	r0, [r7, #4]
 800647c:	f000 f9ed 	bl	800685a <HAL_TIM_PWM_PulseFinishedCallback>
#endif /* USE_HAL_TIM_REGISTER_CALLBACKS */
      }
      htim->Channel = HAL_TIM_ACTIVE_CHANNEL_CLEARED;
 8006480:	687b      	ldr	r3, [r7, #4]
 8006482:	2200      	movs	r2, #0
 8006484:	771a      	strb	r2, [r3, #28]
    }
  }
  /* TIM Update event */
  if ((itflag & (TIM_FLAG_UPDATE)) == (TIM_FLAG_UPDATE))
 8006486:	68bb      	ldr	r3, [r7, #8]
 8006488:	f003 0301 	and.w	r3, r3, #1
 800648c:	2b00      	cmp	r3, #0
 800648e:	d00c      	beq.n	80064aa <HAL_TIM_IRQHandler+0x16c>
  {
    if ((itsource & (TIM_IT_UPDATE)) == (TIM_IT_UPDATE))
 8006490:	68fb      	ldr	r3, [r7, #12]
 8006492:	f003 0301 	and.w	r3, r3, #1
 8006496:	2b00      	cmp	r3, #0
 8006498:	d007      	beq.n	80064aa <HAL_TIM_IRQHandler+0x16c>
    {
      __HAL_TIM_CLEAR_FLAG(htim, TIM_FLAG_UPDATE);
 800649a:	687b      	ldr	r3, [r7, #4]
 800649c:	681b      	ldr	r3, [r3, #0]
 800649e:	f06f 0201 	mvn.w	r2, #1
 80064a2:	611a      	str	r2, [r3, #16]
#if (USE_HAL_TIM_REGISTER_CALLBACKS == 1)
      htim->PeriodElapsedCallback(htim);
#else
      HAL_TIM_PeriodElapsedCallback(htim);
 80064a4:	6878      	ldr	r0, [r7, #4]
 80064a6:	f7fb f9b3 	bl	8001810 <HAL_TIM_PeriodElapsedCallback>
#endif /* USE_HAL_TIM_REGISTER_CALLBACKS */
    }
  }
  /* TIM Break input event */
  if ((itflag & (TIM_FLAG_BREAK)) == (TIM_FLAG_BREAK))
 80064aa:	68bb      	ldr	r3, [r7, #8]
 80064ac:	f003 0380 	and.w	r3, r3, #128	@ 0x80
 80064b0:	2b00      	cmp	r3, #0
 80064b2:	d00c      	beq.n	80064ce <HAL_TIM_IRQHandler+0x190>
  {
    if ((itsource & (TIM_IT_BREAK)) == (TIM_IT_BREAK))
 80064b4:	68fb      	ldr	r3, [r7, #12]
 80064b6:	f003 0380 	and.w	r3, r3, #128	@ 0x80
 80064ba:	2b00      	cmp	r3, #0
 80064bc:	d007      	beq.n	80064ce <HAL_TIM_IRQHandler+0x190>
    {
      __HAL_TIM_CLEAR_FLAG(htim, TIM_FLAG_BREAK);
 80064be:	687b      	ldr	r3, [r7, #4]
 80064c0:	681b      	ldr	r3, [r3, #0]
 80064c2:	f06f 0280 	mvn.w	r2, #128	@ 0x80
 80064c6:	611a      	str	r2, [r3, #16]
#if (USE_HAL_TIM_REGISTER_CALLBACKS == 1)
      htim->BreakCallback(htim);
#else
      HAL_TIMEx_BreakCallback(htim);
 80064c8:	6878      	ldr	r0, [r7, #4]
 80064ca:	f000 fd57 	bl	8006f7c <HAL_TIMEx_BreakCallback>
#endif /* USE_HAL_TIM_REGISTER_CALLBACKS */
    }
  }
  /* TIM Trigger detection event */
  if ((itflag & (TIM_FLAG_TRIGGER)) == (TIM_FLAG_TRIGGER))
 80064ce:	68bb      	ldr	r3, [r7, #8]
 80064d0:	f003 0340 	and.w	r3, r3, #64	@ 0x40
 80064d4:	2b00      	cmp	r3, #0
 80064d6:	d00c      	beq.n	80064f2 <HAL_TIM_IRQHandler+0x1b4>
  {
    if ((itsource & (TIM_IT_TRIGGER)) == (TIM_IT_TRIGGER))
 80064d8:	68fb      	ldr	r3, [r7, #12]
 80064da:	f003 0340 	and.w	r3, r3, #64	@ 0x40
 80064de:	2b00      	cmp	r3, #0
 80064e0:	d007      	beq.n	80064f2 <HAL_TIM_IRQHandler+0x1b4>
    {
      __HAL_TIM_CLEAR_FLAG(htim, TIM_FLAG_TRIGGER);
 80064e2:	687b      	ldr	r3, [r7, #4]
 80064e4:	681b      	ldr	r3, [r3, #0]
 80064e6:	f06f 0240 	mvn.w	r2, #64	@ 0x40
 80064ea:	611a      	str	r2, [r3, #16]
#if (USE_HAL_TIM_REGISTER_CALLBACKS == 1)
      htim->TriggerCallback(htim);
#else
      HAL_TIM_TriggerCallback(htim);
 80064ec:	6878      	ldr	r0, [r7, #4]
 80064ee:	f000 f9be 	bl	800686e <HAL_TIM_TriggerCallback>
#endif /* USE_HAL_TIM_REGISTER_CALLBACKS */
    }
  }
  /* TIM commutation event */
  if ((itflag & (TIM_FLAG_COM)) == (TIM_FLAG_COM))
 80064f2:	68bb      	ldr	r3, [r7, #8]
 80064f4:	f003 0320 	and.w	r3, r3, #32
 80064f8:	2b00      	cmp	r3, #0
 80064fa:	d00c      	beq.n	8006516 <HAL_TIM_IRQHandler+0x1d8>
  {
    if ((itsource & (TIM_IT_COM)) == (TIM_IT_COM))
 80064fc:	68fb      	ldr	r3, [r7, #12]
 80064fe:	f003 0320 	and.w	r3, r3, #32
 8006502:	2b00      	cmp	r3, #0
 8006504:	d007      	beq.n	8006516 <HAL_TIM_IRQHandler+0x1d8>
    {
      __HAL_TIM_CLEAR_FLAG(htim, TIM_FLAG_COM);
 8006506:	687b      	ldr	r3, [r7, #4]
 8006508:	681b      	ldr	r3, [r3, #0]
 800650a:	f06f 0220 	mvn.w	r2, #32
 800650e:	611a      	str	r2, [r3, #16]
#if (USE_HAL_TIM_REGISTER_CALLBACKS == 1)
      htim->CommutationCallback(htim);
#else
      HAL_TIMEx_CommutCallback(htim);
 8006510:	6878      	ldr	r0, [r7, #4]
 8006512:	f000 fd29 	bl	8006f68 <HAL_TIMEx_CommutCallback>
#endif /* USE_HAL_TIM_REGISTER_CALLBACKS */
    }
  }
}
 8006516:	bf00      	nop
 8006518:	3710      	adds	r7, #16
 800651a:	46bd      	mov	sp, r7
 800651c:	bd80      	pop	{r7, pc}
	...

08006520 <HAL_TIM_PWM_ConfigChannel>:
  * @retval HAL status
  */
HAL_StatusTypeDef HAL_TIM_PWM_ConfigChannel(TIM_HandleTypeDef *htim,
                                            const TIM_OC_InitTypeDef *sConfig,
                                            uint32_t Channel)
{
 8006520:	b580      	push	{r7, lr}
 8006522:	b086      	sub	sp, #24
 8006524:	af00      	add	r7, sp, #0
 8006526:	60f8      	str	r0, [r7, #12]
 8006528:	60b9      	str	r1, [r7, #8]
 800652a:	607a      	str	r2, [r7, #4]
  HAL_StatusTypeDef status = HAL_OK;
 800652c:	2300      	movs	r3, #0
 800652e:	75fb      	strb	r3, [r7, #23]
  assert_param(IS_TIM_PWM_MODE(sConfig->OCMode));
  assert_param(IS_TIM_OC_POLARITY(sConfig->OCPolarity));
  assert_param(IS_TIM_FAST_STATE(sConfig->OCFastMode));

  /* Process Locked */
  __HAL_LOCK(htim);
 8006530:	68fb      	ldr	r3, [r7, #12]
 8006532:	f893 303c 	ldrb.w	r3, [r3, #60]	@ 0x3c
 8006536:	2b01      	cmp	r3, #1
 8006538:	d101      	bne.n	800653e <HAL_TIM_PWM_ConfigChannel+0x1e>
 800653a:	2302      	movs	r3, #2
 800653c:	e0ae      	b.n	800669c <HAL_TIM_PWM_ConfigChannel+0x17c>
 800653e:	68fb      	ldr	r3, [r7, #12]
 8006540:	2201      	movs	r2, #1
 8006542:	f883 203c 	strb.w	r2, [r3, #60]	@ 0x3c

  switch (Channel)
 8006546:	687b      	ldr	r3, [r7, #4]
 8006548:	2b0c      	cmp	r3, #12
 800654a:	f200 809f 	bhi.w	800668c <HAL_TIM_PWM_ConfigChannel+0x16c>
 800654e:	a201      	add	r2, pc, #4	@ (adr r2, 8006554 <HAL_TIM_PWM_ConfigChannel+0x34>)
 8006550:	f852 f023 	ldr.w	pc, [r2, r3, lsl #2]
 8006554:	08006589 	.word	0x08006589
 8006558:	0800668d 	.word	0x0800668d
 800655c:	0800668d 	.word	0x0800668d
 8006560:	0800668d 	.word	0x0800668d
 8006564:	080065c9 	.word	0x080065c9
 8006568:	0800668d 	.word	0x0800668d
 800656c:	0800668d 	.word	0x0800668d
 8006570:	0800668d 	.word	0x0800668d
 8006574:	0800660b 	.word	0x0800660b
 8006578:	0800668d 	.word	0x0800668d
 800657c:	0800668d 	.word	0x0800668d
 8006580:	0800668d 	.word	0x0800668d
 8006584:	0800664b 	.word	0x0800664b
    {
      /* Check the parameters */
      assert_param(IS_TIM_CC1_INSTANCE(htim->Instance));

      /* Configure the Channel 1 in PWM mode */
      TIM_OC1_SetConfig(htim->Instance, sConfig);
 8006588:	68fb      	ldr	r3, [r7, #12]
 800658a:	681b      	ldr	r3, [r3, #0]
 800658c:	68b9      	ldr	r1, [r7, #8]
 800658e:	4618      	mov	r0, r3
 8006590:	f000 fa24 	bl	80069dc <TIM_OC1_SetConfig>

      /* Set the Preload enable bit for channel1 */
      htim->Instance->CCMR1 |= TIM_CCMR1_OC1PE;
 8006594:	68fb      	ldr	r3, [r7, #12]
 8006596:	681b      	ldr	r3, [r3, #0]
 8006598:	699a      	ldr	r2, [r3, #24]
 800659a:	68fb      	ldr	r3, [r7, #12]
 800659c:	681b      	ldr	r3, [r3, #0]
 800659e:	f042 0208 	orr.w	r2, r2, #8
 80065a2:	619a      	str	r2, [r3, #24]

      /* Configure the Output Fast mode */
      htim->Instance->CCMR1 &= ~TIM_CCMR1_OC1FE;
 80065a4:	68fb      	ldr	r3, [r7, #12]
 80065a6:	681b      	ldr	r3, [r3, #0]
 80065a8:	699a      	ldr	r2, [r3, #24]
 80065aa:	68fb      	ldr	r3, [r7, #12]
 80065ac:	681b      	ldr	r3, [r3, #0]
 80065ae:	f022 0204 	bic.w	r2, r2, #4
 80065b2:	619a      	str	r2, [r3, #24]
      htim->Instance->CCMR1 |= sConfig->OCFastMode;
 80065b4:	68fb      	ldr	r3, [r7, #12]
 80065b6:	681b      	ldr	r3, [r3, #0]
 80065b8:	6999      	ldr	r1, [r3, #24]
 80065ba:	68bb      	ldr	r3, [r7, #8]
 80065bc:	691a      	ldr	r2, [r3, #16]
 80065be:	68fb      	ldr	r3, [r7, #12]
 80065c0:	681b      	ldr	r3, [r3, #0]
 80065c2:	430a      	orrs	r2, r1
 80065c4:	619a      	str	r2, [r3, #24]
      break;
 80065c6:	e064      	b.n	8006692 <HAL_TIM_PWM_ConfigChannel+0x172>
    {
      /* Check the parameters */
      assert_param(IS_TIM_CC2_INSTANCE(htim->Instance));

      /* Configure the Channel 2 in PWM mode */
      TIM_OC2_SetConfig(htim->Instance, sConfig);
 80065c8:	68fb      	ldr	r3, [r7, #12]
 80065ca:	681b      	ldr	r3, [r3, #0]
 80065cc:	68b9      	ldr	r1, [r7, #8]
 80065ce:	4618      	mov	r0, r3
 80065d0:	f000 fa74 	bl	8006abc <TIM_OC2_SetConfig>

      /* Set the Preload enable bit for channel2 */
      htim->Instance->CCMR1 |= TIM_CCMR1_OC2PE;
 80065d4:	68fb      	ldr	r3, [r7, #12]
 80065d6:	681b      	ldr	r3, [r3, #0]
 80065d8:	699a      	ldr	r2, [r3, #24]
 80065da:	68fb      	ldr	r3, [r7, #12]
 80065dc:	681b      	ldr	r3, [r3, #0]
 80065de:	f442 6200 	orr.w	r2, r2, #2048	@ 0x800
 80065e2:	619a      	str	r2, [r3, #24]

      /* Configure the Output Fast mode */
      htim->Instance->CCMR1 &= ~TIM_CCMR1_OC2FE;
 80065e4:	68fb      	ldr	r3, [r7, #12]
 80065e6:	681b      	ldr	r3, [r3, #0]
 80065e8:	699a      	ldr	r2, [r3, #24]
 80065ea:	68fb      	ldr	r3, [r7, #12]
 80065ec:	681b      	ldr	r3, [r3, #0]
 80065ee:	f422 6280 	bic.w	r2, r2, #1024	@ 0x400
 80065f2:	619a      	str	r2, [r3, #24]
      htim->Instance->CCMR1 |= sConfig->OCFastMode << 8U;
 80065f4:	68fb      	ldr	r3, [r7, #12]
 80065f6:	681b      	ldr	r3, [r3, #0]
 80065f8:	6999      	ldr	r1, [r3, #24]
 80065fa:	68bb      	ldr	r3, [r7, #8]
 80065fc:	691b      	ldr	r3, [r3, #16]
 80065fe:	021a      	lsls	r2, r3, #8
 8006600:	68fb      	ldr	r3, [r7, #12]
 8006602:	681b      	ldr	r3, [r3, #0]
 8006604:	430a      	orrs	r2, r1
 8006606:	619a      	str	r2, [r3, #24]
      break;
 8006608:	e043      	b.n	8006692 <HAL_TIM_PWM_ConfigChannel+0x172>
    {
      /* Check the parameters */
      assert_param(IS_TIM_CC3_INSTANCE(htim->Instance));

      /* Configure the Channel 3 in PWM mode */
      TIM_OC3_SetConfig(htim->Instance, sConfig);
 800660a:	68fb      	ldr	r3, [r7, #12]
 800660c:	681b      	ldr	r3, [r3, #0]
 800660e:	68b9      	ldr	r1, [r7, #8]
 8006610:	4618      	mov	r0, r3
 8006612:	f000 fac9 	bl	8006ba8 <TIM_OC3_SetConfig>

      /* Set the Preload enable bit for channel3 */
      htim->Instance->CCMR2 |= TIM_CCMR2_OC3PE;
 8006616:	68fb      	ldr	r3, [r7, #12]
 8006618:	681b      	ldr	r3, [r3, #0]
 800661a:	69da      	ldr	r2, [r3, #28]
 800661c:	68fb      	ldr	r3, [r7, #12]
 800661e:	681b      	ldr	r3, [r3, #0]
 8006620:	f042 0208 	orr.w	r2, r2, #8
 8006624:	61da      	str	r2, [r3, #28]

      /* Configure the Output Fast mode */
      htim->Instance->CCMR2 &= ~TIM_CCMR2_OC3FE;
 8006626:	68fb      	ldr	r3, [r7, #12]
 8006628:	681b      	ldr	r3, [r3, #0]
 800662a:	69da      	ldr	r2, [r3, #28]
 800662c:	68fb      	ldr	r3, [r7, #12]
 800662e:	681b      	ldr	r3, [r3, #0]
 8006630:	f022 0204 	bic.w	r2, r2, #4
 8006634:	61da      	str	r2, [r3, #28]
      htim->Instance->CCMR2 |= sConfig->OCFastMode;
 8006636:	68fb      	ldr	r3, [r7, #12]
 8006638:	681b      	ldr	r3, [r3, #0]
 800663a:	69d9      	ldr	r1, [r3, #28]
 800663c:	68bb      	ldr	r3, [r7, #8]
 800663e:	691a      	ldr	r2, [r3, #16]
 8006640:	68fb      	ldr	r3, [r7, #12]
 8006642:	681b      	ldr	r3, [r3, #0]
 8006644:	430a      	orrs	r2, r1
 8006646:	61da      	str	r2, [r3, #28]
      break;
 8006648:	e023      	b.n	8006692 <HAL_TIM_PWM_ConfigChannel+0x172>
    {
      /* Check the parameters */
      assert_param(IS_TIM_CC4_INSTANCE(htim->Instance));

      /* Configure the Channel 4 in PWM mode */
      TIM_OC4_SetConfig(htim->Instance, sConfig);
 800664a:	68fb      	ldr	r3, [r7, #12]
 800664c:	681b      	ldr	r3, [r3, #0]
 800664e:	68b9      	ldr	r1, [r7, #8]
 8006650:	4618      	mov	r0, r3
 8006652:	f000 fb1d 	bl	8006c90 <TIM_OC4_SetConfig>

      /* Set the Preload enable bit for channel4 */
      htim->Instance->CCMR2 |= TIM_CCMR2_OC4PE;
 8006656:	68fb      	ldr	r3, [r7, #12]
 8006658:	681b      	ldr	r3, [r3, #0]
 800665a:	69da      	ldr	r2, [r3, #28]
 800665c:	68fb      	ldr	r3, [r7, #12]
 800665e:	681b      	ldr	r3, [r3, #0]
 8006660:	f442 6200 	orr.w	r2, r2, #2048	@ 0x800
 8006664:	61da      	str	r2, [r3, #28]

      /* Configure the Output Fast mode */
      htim->Instance->CCMR2 &= ~TIM_CCMR2_OC4FE;
 8006666:	68fb      	ldr	r3, [r7, #12]
 8006668:	681b      	ldr	r3, [r3, #0]
 800666a:	69da      	ldr	r2, [r3, #28]
 800666c:	68fb      	ldr	r3, [r7, #12]
 800666e:	681b      	ldr	r3, [r3, #0]
 8006670:	f422 6280 	bic.w	r2, r2, #1024	@ 0x400
 8006674:	61da      	str	r2, [r3, #28]
      htim->Instance->CCMR2 |= sConfig->OCFastMode << 8U;
 8006676:	68fb      	ldr	r3, [r7, #12]
 8006678:	681b      	ldr	r3, [r3, #0]
 800667a:	69d9      	ldr	r1, [r3, #28]
 800667c:	68bb      	ldr	r3, [r7, #8]
 800667e:	691b      	ldr	r3, [r3, #16]
 8006680:	021a      	lsls	r2, r3, #8
 8006682:	68fb      	ldr	r3, [r7, #12]
 8006684:	681b      	ldr	r3, [r3, #0]
 8006686:	430a      	orrs	r2, r1
 8006688:	61da      	str	r2, [r3, #28]
      break;
 800668a:	e002      	b.n	8006692 <HAL_TIM_PWM_ConfigChannel+0x172>
    }

    default:
      status = HAL_ERROR;
 800668c:	2301      	movs	r3, #1
 800668e:	75fb      	strb	r3, [r7, #23]
      break;
 8006690:	bf00      	nop
  }

  __HAL_UNLOCK(htim);
 8006692:	68fb      	ldr	r3, [r7, #12]
 8006694:	2200      	movs	r2, #0
 8006696:	f883 203c 	strb.w	r2, [r3, #60]	@ 0x3c

  return status;
 800669a:	7dfb      	ldrb	r3, [r7, #23]
}
 800669c:	4618      	mov	r0, r3
 800669e:	3718      	adds	r7, #24
 80066a0:	46bd      	mov	sp, r7
 80066a2:	bd80      	pop	{r7, pc}

080066a4 <HAL_TIM_ConfigClockSource>:
  * @param  sClockSourceConfig pointer to a TIM_ClockConfigTypeDef structure that
  *         contains the clock source information for the TIM peripheral.
  * @retval HAL status
  */
HAL_StatusTypeDef HAL_TIM_ConfigClockSource(TIM_HandleTypeDef *htim, const TIM_ClockConfigTypeDef *sClockSourceConfig)
{
 80066a4:	b580      	push	{r7, lr}
 80066a6:	b084      	sub	sp, #16
 80066a8:	af00      	add	r7, sp, #0
 80066aa:	6078      	str	r0, [r7, #4]
 80066ac:	6039      	str	r1, [r7, #0]
  HAL_StatusTypeDef status = HAL_OK;
 80066ae:	2300      	movs	r3, #0
 80066b0:	73fb      	strb	r3, [r7, #15]
  uint32_t tmpsmcr;

  /* Process Locked */
  __HAL_LOCK(htim);
 80066b2:	687b      	ldr	r3, [r7, #4]
 80066b4:	f893 303c 	ldrb.w	r3, [r3, #60]	@ 0x3c
 80066b8:	2b01      	cmp	r3, #1
 80066ba:	d101      	bne.n	80066c0 <HAL_TIM_ConfigClockSource+0x1c>
 80066bc:	2302      	movs	r3, #2
 80066be:	e0b4      	b.n	800682a <HAL_TIM_ConfigClockSource+0x186>
 80066c0:	687b      	ldr	r3, [r7, #4]
 80066c2:	2201      	movs	r2, #1
 80066c4:	f883 203c 	strb.w	r2, [r3, #60]	@ 0x3c

  htim->State = HAL_TIM_STATE_BUSY;
 80066c8:	687b      	ldr	r3, [r7, #4]
 80066ca:	2202      	movs	r2, #2
 80066cc:	f883 203d 	strb.w	r2, [r3, #61]	@ 0x3d

  /* Check the parameters */
  assert_param(IS_TIM_CLOCKSOURCE(sClockSourceConfig->ClockSource));

  /* Reset the SMS, TS, ECE, ETPS and ETRF bits */
  tmpsmcr = htim->Instance->SMCR;
 80066d0:	687b      	ldr	r3, [r7, #4]
 80066d2:	681b      	ldr	r3, [r3, #0]
 80066d4:	689b      	ldr	r3, [r3, #8]
 80066d6:	60bb      	str	r3, [r7, #8]
  tmpsmcr &= ~(TIM_SMCR_SMS | TIM_SMCR_TS);
 80066d8:	68bb      	ldr	r3, [r7, #8]
 80066da:	f023 0377 	bic.w	r3, r3, #119	@ 0x77
 80066de:	60bb      	str	r3, [r7, #8]
  tmpsmcr &= ~(TIM_SMCR_ETF | TIM_SMCR_ETPS | TIM_SMCR_ECE | TIM_SMCR_ETP);
 80066e0:	68bb      	ldr	r3, [r7, #8]
 80066e2:	f423 437f 	bic.w	r3, r3, #65280	@ 0xff00
 80066e6:	60bb      	str	r3, [r7, #8]
  htim->Instance->SMCR = tmpsmcr;
 80066e8:	687b      	ldr	r3, [r7, #4]
 80066ea:	681b      	ldr	r3, [r3, #0]
 80066ec:	68ba      	ldr	r2, [r7, #8]
 80066ee:	609a      	str	r2, [r3, #8]

  switch (sClockSourceConfig->ClockSource)
 80066f0:	683b      	ldr	r3, [r7, #0]
 80066f2:	681b      	ldr	r3, [r3, #0]
 80066f4:	f5b3 5f00 	cmp.w	r3, #8192	@ 0x2000
 80066f8:	d03e      	beq.n	8006778 <HAL_TIM_ConfigClockSource+0xd4>
 80066fa:	f5b3 5f00 	cmp.w	r3, #8192	@ 0x2000
 80066fe:	f200 8087 	bhi.w	8006810 <HAL_TIM_ConfigClockSource+0x16c>
 8006702:	f5b3 5f80 	cmp.w	r3, #4096	@ 0x1000
 8006706:	f000 8086 	beq.w	8006816 <HAL_TIM_ConfigClockSource+0x172>
 800670a:	f5b3 5f80 	cmp.w	r3, #4096	@ 0x1000
 800670e:	d87f      	bhi.n	8006810 <HAL_TIM_ConfigClockSource+0x16c>
 8006710:	2b70      	cmp	r3, #112	@ 0x70
 8006712:	d01a      	beq.n	800674a <HAL_TIM_ConfigClockSource+0xa6>
 8006714:	2b70      	cmp	r3, #112	@ 0x70
 8006716:	d87b      	bhi.n	8006810 <HAL_TIM_ConfigClockSource+0x16c>
 8006718:	2b60      	cmp	r3, #96	@ 0x60
 800671a:	d050      	beq.n	80067be <HAL_TIM_ConfigClockSource+0x11a>
 800671c:	2b60      	cmp	r3, #96	@ 0x60
 800671e:	d877      	bhi.n	8006810 <HAL_TIM_ConfigClockSource+0x16c>
 8006720:	2b50      	cmp	r3, #80	@ 0x50
 8006722:	d03c      	beq.n	800679e <HAL_TIM_ConfigClockSource+0xfa>
 8006724:	2b50      	cmp	r3, #80	@ 0x50
 8006726:	d873      	bhi.n	8006810 <HAL_TIM_ConfigClockSource+0x16c>
 8006728:	2b40      	cmp	r3, #64	@ 0x40
 800672a:	d058      	beq.n	80067de <HAL_TIM_ConfigClockSource+0x13a>
 800672c:	2b40      	cmp	r3, #64	@ 0x40
 800672e:	d86f      	bhi.n	8006810 <HAL_TIM_ConfigClockSource+0x16c>
 8006730:	2b30      	cmp	r3, #48	@ 0x30
 8006732:	d064      	beq.n	80067fe <HAL_TIM_ConfigClockSource+0x15a>
 8006734:	2b30      	cmp	r3, #48	@ 0x30
 8006736:	d86b      	bhi.n	8006810 <HAL_TIM_ConfigClockSource+0x16c>
 8006738:	2b20      	cmp	r3, #32
 800673a:	d060      	beq.n	80067fe <HAL_TIM_ConfigClockSource+0x15a>
 800673c:	2b20      	cmp	r3, #32
 800673e:	d867      	bhi.n	8006810 <HAL_TIM_ConfigClockSource+0x16c>
 8006740:	2b00      	cmp	r3, #0
 8006742:	d05c      	beq.n	80067fe <HAL_TIM_ConfigClockSource+0x15a>
 8006744:	2b10      	cmp	r3, #16
 8006746:	d05a      	beq.n	80067fe <HAL_TIM_ConfigClockSource+0x15a>
 8006748:	e062      	b.n	8006810 <HAL_TIM_ConfigClockSource+0x16c>
      assert_param(IS_TIM_CLOCKPRESCALER(sClockSourceConfig->ClockPrescaler));
      assert_param(IS_TIM_CLOCKPOLARITY(sClockSourceConfig->ClockPolarity));
      assert_param(IS_TIM_CLOCKFILTER(sClockSourceConfig->ClockFilter));

      /* Configure the ETR Clock source */
      TIM_ETR_SetConfig(htim->Instance,
 800674a:	687b      	ldr	r3, [r7, #4]
 800674c:	6818      	ldr	r0, [r3, #0]
                        sClockSourceConfig->ClockPrescaler,
 800674e:	683b      	ldr	r3, [r7, #0]
 8006750:	6899      	ldr	r1, [r3, #8]
                        sClockSourceConfig->ClockPolarity,
 8006752:	683b      	ldr	r3, [r7, #0]
 8006754:	685a      	ldr	r2, [r3, #4]
                        sClockSourceConfig->ClockFilter);
 8006756:	683b      	ldr	r3, [r7, #0]
 8006758:	68db      	ldr	r3, [r3, #12]
      TIM_ETR_SetConfig(htim->Instance,
 800675a:	f000 fb69 	bl	8006e30 <TIM_ETR_SetConfig>

      /* Select the External clock mode1 and the ETRF trigger */
      tmpsmcr = htim->Instance->SMCR;
 800675e:	687b      	ldr	r3, [r7, #4]
 8006760:	681b      	ldr	r3, [r3, #0]
 8006762:	689b      	ldr	r3, [r3, #8]
 8006764:	60bb      	str	r3, [r7, #8]
      tmpsmcr |= (TIM_SLAVEMODE_EXTERNAL1 | TIM_CLOCKSOURCE_ETRMODE1);
 8006766:	68bb      	ldr	r3, [r7, #8]
 8006768:	f043 0377 	orr.w	r3, r3, #119	@ 0x77
 800676c:	60bb      	str	r3, [r7, #8]
      /* Write to TIMx SMCR */
      htim->Instance->SMCR = tmpsmcr;
 800676e:	687b      	ldr	r3, [r7, #4]
 8006770:	681b      	ldr	r3, [r3, #0]
 8006772:	68ba      	ldr	r2, [r7, #8]
 8006774:	609a      	str	r2, [r3, #8]
      break;
 8006776:	e04f      	b.n	8006818 <HAL_TIM_ConfigClockSource+0x174>
      assert_param(IS_TIM_CLOCKPRESCALER(sClockSourceConfig->ClockPrescaler));
      assert_param(IS_TIM_CLOCKPOLARITY(sClockSourceConfig->ClockPolarity));
      assert_param(IS_TIM_CLOCKFILTER(sClockSourceConfig->ClockFilter));

      /* Configure the ETR Clock source */
      TIM_ETR_SetConfig(htim->Instance,
 8006778:	687b      	ldr	r3, [r7, #4]
 800677a:	6818      	ldr	r0, [r3, #0]
                        sClockSourceConfig->ClockPrescaler,
 800677c:	683b      	ldr	r3, [r7, #0]
 800677e:	6899      	ldr	r1, [r3, #8]
                        sClockSourceConfig->ClockPolarity,
 8006780:	683b      	ldr	r3, [r7, #0]
 8006782:	685a      	ldr	r2, [r3, #4]
                        sClockSourceConfig->ClockFilter);
 8006784:	683b      	ldr	r3, [r7, #0]
 8006786:	68db      	ldr	r3, [r3, #12]
      TIM_ETR_SetConfig(htim->Instance,
 8006788:	f000 fb52 	bl	8006e30 <TIM_ETR_SetConfig>
      /* Enable the External clock mode2 */
      htim->Instance->SMCR |= TIM_SMCR_ECE;
 800678c:	687b      	ldr	r3, [r7, #4]
 800678e:	681b      	ldr	r3, [r3, #0]
 8006790:	689a      	ldr	r2, [r3, #8]
 8006792:	687b      	ldr	r3, [r7, #4]
 8006794:	681b      	ldr	r3, [r3, #0]
 8006796:	f442 4280 	orr.w	r2, r2, #16384	@ 0x4000
 800679a:	609a      	str	r2, [r3, #8]
      break;
 800679c:	e03c      	b.n	8006818 <HAL_TIM_ConfigClockSource+0x174>

      /* Check TI1 input conditioning related parameters */
      assert_param(IS_TIM_CLOCKPOLARITY(sClockSourceConfig->ClockPolarity));
      assert_param(IS_TIM_CLOCKFILTER(sClockSourceConfig->ClockFilter));

      TIM_TI1_ConfigInputStage(htim->Instance,
 800679e:	687b      	ldr	r3, [r7, #4]
 80067a0:	6818      	ldr	r0, [r3, #0]
                               sClockSourceConfig->ClockPolarity,
 80067a2:	683b      	ldr	r3, [r7, #0]
 80067a4:	6859      	ldr	r1, [r3, #4]
                               sClockSourceConfig->ClockFilter);
 80067a6:	683b      	ldr	r3, [r7, #0]
 80067a8:	68db      	ldr	r3, [r3, #12]
      TIM_TI1_ConfigInputStage(htim->Instance,
 80067aa:	461a      	mov	r2, r3
 80067ac:	f000 fac6 	bl	8006d3c <TIM_TI1_ConfigInputStage>
      TIM_ITRx_SetConfig(htim->Instance, TIM_CLOCKSOURCE_TI1);
 80067b0:	687b      	ldr	r3, [r7, #4]
 80067b2:	681b      	ldr	r3, [r3, #0]
 80067b4:	2150      	movs	r1, #80	@ 0x50
 80067b6:	4618      	mov	r0, r3
 80067b8:	f000 fb1f 	bl	8006dfa <TIM_ITRx_SetConfig>
      break;
 80067bc:	e02c      	b.n	8006818 <HAL_TIM_ConfigClockSource+0x174>

      /* Check TI2 input conditioning related parameters */
      assert_param(IS_TIM_CLOCKPOLARITY(sClockSourceConfig->ClockPolarity));
      assert_param(IS_TIM_CLOCKFILTER(sClockSourceConfig->ClockFilter));

      TIM_TI2_ConfigInputStage(htim->Instance,
 80067be:	687b      	ldr	r3, [r7, #4]
 80067c0:	6818      	ldr	r0, [r3, #0]
                               sClockSourceConfig->ClockPolarity,
 80067c2:	683b      	ldr	r3, [r7, #0]
 80067c4:	6859      	ldr	r1, [r3, #4]
                               sClockSourceConfig->ClockFilter);
 80067c6:	683b      	ldr	r3, [r7, #0]
 80067c8:	68db      	ldr	r3, [r3, #12]
      TIM_TI2_ConfigInputStage(htim->Instance,
 80067ca:	461a      	mov	r2, r3
 80067cc:	f000 fae5 	bl	8006d9a <TIM_TI2_ConfigInputStage>
      TIM_ITRx_SetConfig(htim->Instance, TIM_CLOCKSOURCE_TI2);
 80067d0:	687b      	ldr	r3, [r7, #4]
 80067d2:	681b      	ldr	r3, [r3, #0]
 80067d4:	2160      	movs	r1, #96	@ 0x60
 80067d6:	4618      	mov	r0, r3
 80067d8:	f000 fb0f 	bl	8006dfa <TIM_ITRx_SetConfig>
      break;
 80067dc:	e01c      	b.n	8006818 <HAL_TIM_ConfigClockSource+0x174>

      /* Check TI1 input conditioning related parameters */
      assert_param(IS_TIM_CLOCKPOLARITY(sClockSourceConfig->ClockPolarity));
      assert_param(IS_TIM_CLOCKFILTER(sClockSourceConfig->ClockFilter));

      TIM_TI1_ConfigInputStage(htim->Instance,
 80067de:	687b      	ldr	r3, [r7, #4]
 80067e0:	6818      	ldr	r0, [r3, #0]
                               sClockSourceConfig->ClockPolarity,
 80067e2:	683b      	ldr	r3, [r7, #0]
 80067e4:	6859      	ldr	r1, [r3, #4]
                               sClockSourceConfig->ClockFilter);
 80067e6:	683b      	ldr	r3, [r7, #0]
 80067e8:	68db      	ldr	r3, [r3, #12]
      TIM_TI1_ConfigInputStage(htim->Instance,
 80067ea:	461a      	mov	r2, r3
 80067ec:	f000 faa6 	bl	8006d3c <TIM_TI1_ConfigInputStage>
      TIM_ITRx_SetConfig(htim->Instance, TIM_CLOCKSOURCE_TI1ED);
 80067f0:	687b      	ldr	r3, [r7, #4]
 80067f2:	681b      	ldr	r3, [r3, #0]
 80067f4:	2140      	movs	r1, #64	@ 0x40
 80067f6:	4618      	mov	r0, r3
 80067f8:	f000 faff 	bl	8006dfa <TIM_ITRx_SetConfig>
      break;
 80067fc:	e00c      	b.n	8006818 <HAL_TIM_ConfigClockSource+0x174>
    case TIM_CLOCKSOURCE_ITR3:
    {
      /* Check whether or not the timer instance supports internal trigger input */
      assert_param(IS_TIM_CLOCKSOURCE_ITRX_INSTANCE(htim->Instance));

      TIM_ITRx_SetConfig(htim->Instance, sClockSourceConfig->ClockSource);
 80067fe:	687b      	ldr	r3, [r7, #4]
 8006800:	681a      	ldr	r2, [r3, #0]
 8006802:	683b      	ldr	r3, [r7, #0]
 8006804:	681b      	ldr	r3, [r3, #0]
 8006806:	4619      	mov	r1, r3
 8006808:	4610      	mov	r0, r2
 800680a:	f000 faf6 	bl	8006dfa <TIM_ITRx_SetConfig>
      break;
 800680e:	e003      	b.n	8006818 <HAL_TIM_ConfigClockSource+0x174>
    }

    default:
      status = HAL_ERROR;
 8006810:	2301      	movs	r3, #1
 8006812:	73fb      	strb	r3, [r7, #15]
      break;
 8006814:	e000      	b.n	8006818 <HAL_TIM_ConfigClockSource+0x174>
      break;
 8006816:	bf00      	nop
  }
  htim->State = HAL_TIM_STATE_READY;
 8006818:	687b      	ldr	r3, [r7, #4]
 800681a:	2201      	movs	r2, #1
 800681c:	f883 203d 	strb.w	r2, [r3, #61]	@ 0x3d

  __HAL_UNLOCK(htim);
 8006820:	687b      	ldr	r3, [r7, #4]
 8006822:	2200      	movs	r2, #0
 8006824:	f883 203c 	strb.w	r2, [r3, #60]	@ 0x3c

  return status;
 8006828:	7bfb      	ldrb	r3, [r7, #15]
}
 800682a:	4618      	mov	r0, r3
 800682c:	3710      	adds	r7, #16
 800682e:	46bd      	mov	sp, r7
 8006830:	bd80      	pop	{r7, pc}

08006832 <HAL_TIM_OC_DelayElapsedCallback>:
  * @brief  Output Compare callback in non-blocking mode
  * @param  htim TIM OC handle
  * @retval None
  */
__weak void HAL_TIM_OC_DelayElapsedCallback(TIM_HandleTypeDef *htim)
{
 8006832:	b480      	push	{r7}
 8006834:	b083      	sub	sp, #12
 8006836:	af00      	add	r7, sp, #0
 8006838:	6078      	str	r0, [r7, #4]
  UNUSED(htim);

  /* NOTE : This function should not be modified, when the callback is needed,
            the HAL_TIM_OC_DelayElapsedCallback could be implemented in the user file
   */
}
 800683a:	bf00      	nop
 800683c:	370c      	adds	r7, #12
 800683e:	46bd      	mov	sp, r7
 8006840:	f85d 7b04 	ldr.w	r7, [sp], #4
 8006844:	4770      	bx	lr

08006846 <HAL_TIM_IC_CaptureCallback>:
  * @brief  Input Capture callback in non-blocking mode
  * @param  htim TIM IC handle
  * @retval None
  */
__weak void HAL_TIM_IC_CaptureCallback(TIM_HandleTypeDef *htim)
{
 8006846:	b480      	push	{r7}
 8006848:	b083      	sub	sp, #12
 800684a:	af00      	add	r7, sp, #0
 800684c:	6078      	str	r0, [r7, #4]
  UNUSED(htim);

  /* NOTE : This function should not be modified, when the callback is needed,
            the HAL_TIM_IC_CaptureCallback could be implemented in the user file
   */
}
 800684e:	bf00      	nop
 8006850:	370c      	adds	r7, #12
 8006852:	46bd      	mov	sp, r7
 8006854:	f85d 7b04 	ldr.w	r7, [sp], #4
 8006858:	4770      	bx	lr

0800685a <HAL_TIM_PWM_PulseFinishedCallback>:
  * @brief  PWM Pulse finished callback in non-blocking mode
  * @param  htim TIM handle
  * @retval None
  */
__weak void HAL_TIM_PWM_PulseFinishedCallback(TIM_HandleTypeDef *htim)
{
 800685a:	b480      	push	{r7}
 800685c:	b083      	sub	sp, #12
 800685e:	af00      	add	r7, sp, #0
 8006860:	6078      	str	r0, [r7, #4]
  UNUSED(htim);

  /* NOTE : This function should not be modified, when the callback is needed,
            the HAL_TIM_PWM_PulseFinishedCallback could be implemented in the user file
   */
}
 8006862:	bf00      	nop
 8006864:	370c      	adds	r7, #12
 8006866:	46bd      	mov	sp, r7
 8006868:	f85d 7b04 	ldr.w	r7, [sp], #4
 800686c:	4770      	bx	lr

0800686e <HAL_TIM_TriggerCallback>:
  * @brief  Hall Trigger detection callback in non-blocking mode
  * @param  htim TIM handle
  * @retval None
  */
__weak void HAL_TIM_TriggerCallback(TIM_HandleTypeDef *htim)
{
 800686e:	b480      	push	{r7}
 8006870:	b083      	sub	sp, #12
 8006872:	af00      	add	r7, sp, #0
 8006874:	6078      	str	r0, [r7, #4]
  UNUSED(htim);

  /* NOTE : This function should not be modified, when the callback is needed,
            the HAL_TIM_TriggerCallback could be implemented in the user file
   */
}
 8006876:	bf00      	nop
 8006878:	370c      	adds	r7, #12
 800687a:	46bd      	mov	sp, r7
 800687c:	f85d 7b04 	ldr.w	r7, [sp], #4
 8006880:	4770      	bx	lr
	...

08006884 <TIM_Base_SetConfig>:
  * @param  TIMx TIM peripheral
  * @param  Structure TIM Base configuration structure
  * @retval None
  */
void TIM_Base_SetConfig(TIM_TypeDef *TIMx, const TIM_Base_InitTypeDef *Structure)
{
 8006884:	b480      	push	{r7}
 8006886:	b085      	sub	sp, #20
 8006888:	af00      	add	r7, sp, #0
 800688a:	6078      	str	r0, [r7, #4]
 800688c:	6039      	str	r1, [r7, #0]
  uint32_t tmpcr1;
  tmpcr1 = TIMx->CR1;
 800688e:	687b      	ldr	r3, [r7, #4]
 8006890:	681b      	ldr	r3, [r3, #0]
 8006892:	60fb      	str	r3, [r7, #12]

  /* Set TIM Time Base Unit parameters ---------------------------------------*/
  if (IS_TIM_COUNTER_MODE_SELECT_INSTANCE(TIMx))
 8006894:	687b      	ldr	r3, [r7, #4]
 8006896:	4a46      	ldr	r2, [pc, #280]	@ (80069b0 <TIM_Base_SetConfig+0x12c>)
 8006898:	4293      	cmp	r3, r2
 800689a:	d013      	beq.n	80068c4 <TIM_Base_SetConfig+0x40>
 800689c:	687b      	ldr	r3, [r7, #4]
 800689e:	f1b3 4f80 	cmp.w	r3, #1073741824	@ 0x40000000
 80068a2:	d00f      	beq.n	80068c4 <TIM_Base_SetConfig+0x40>
 80068a4:	687b      	ldr	r3, [r7, #4]
 80068a6:	4a43      	ldr	r2, [pc, #268]	@ (80069b4 <TIM_Base_SetConfig+0x130>)
 80068a8:	4293      	cmp	r3, r2
 80068aa:	d00b      	beq.n	80068c4 <TIM_Base_SetConfig+0x40>
 80068ac:	687b      	ldr	r3, [r7, #4]
 80068ae:	4a42      	ldr	r2, [pc, #264]	@ (80069b8 <TIM_Base_SetConfig+0x134>)
 80068b0:	4293      	cmp	r3, r2
 80068b2:	d007      	beq.n	80068c4 <TIM_Base_SetConfig+0x40>
 80068b4:	687b      	ldr	r3, [r7, #4]
 80068b6:	4a41      	ldr	r2, [pc, #260]	@ (80069bc <TIM_Base_SetConfig+0x138>)
 80068b8:	4293      	cmp	r3, r2
 80068ba:	d003      	beq.n	80068c4 <TIM_Base_SetConfig+0x40>
 80068bc:	687b      	ldr	r3, [r7, #4]
 80068be:	4a40      	ldr	r2, [pc, #256]	@ (80069c0 <TIM_Base_SetConfig+0x13c>)
 80068c0:	4293      	cmp	r3, r2
 80068c2:	d108      	bne.n	80068d6 <TIM_Base_SetConfig+0x52>
  {
    /* Select the Counter Mode */
    tmpcr1 &= ~(TIM_CR1_DIR | TIM_CR1_CMS);
 80068c4:	68fb      	ldr	r3, [r7, #12]
 80068c6:	f023 0370 	bic.w	r3, r3, #112	@ 0x70
 80068ca:	60fb      	str	r3, [r7, #12]
    tmpcr1 |= Structure->CounterMode;
 80068cc:	683b      	ldr	r3, [r7, #0]
 80068ce:	685b      	ldr	r3, [r3, #4]
 80068d0:	68fa      	ldr	r2, [r7, #12]
 80068d2:	4313      	orrs	r3, r2
 80068d4:	60fb      	str	r3, [r7, #12]
  }

  if (IS_TIM_CLOCK_DIVISION_INSTANCE(TIMx))
 80068d6:	687b      	ldr	r3, [r7, #4]
 80068d8:	4a35      	ldr	r2, [pc, #212]	@ (80069b0 <TIM_Base_SetConfig+0x12c>)
 80068da:	4293      	cmp	r3, r2
 80068dc:	d02b      	beq.n	8006936 <TIM_Base_SetConfig+0xb2>
 80068de:	687b      	ldr	r3, [r7, #4]
 80068e0:	f1b3 4f80 	cmp.w	r3, #1073741824	@ 0x40000000
 80068e4:	d027      	beq.n	8006936 <TIM_Base_SetConfig+0xb2>
 80068e6:	687b      	ldr	r3, [r7, #4]
 80068e8:	4a32      	ldr	r2, [pc, #200]	@ (80069b4 <TIM_Base_SetConfig+0x130>)
 80068ea:	4293      	cmp	r3, r2
 80068ec:	d023      	beq.n	8006936 <TIM_Base_SetConfig+0xb2>
 80068ee:	687b      	ldr	r3, [r7, #4]
 80068f0:	4a31      	ldr	r2, [pc, #196]	@ (80069b8 <TIM_Base_SetConfig+0x134>)
 80068f2:	4293      	cmp	r3, r2
 80068f4:	d01f      	beq.n	8006936 <TIM_Base_SetConfig+0xb2>
 80068f6:	687b      	ldr	r3, [r7, #4]
 80068f8:	4a30      	ldr	r2, [pc, #192]	@ (80069bc <TIM_Base_SetConfig+0x138>)
 80068fa:	4293      	cmp	r3, r2
 80068fc:	d01b      	beq.n	8006936 <TIM_Base_SetConfig+0xb2>
 80068fe:	687b      	ldr	r3, [r7, #4]
 8006900:	4a2f      	ldr	r2, [pc, #188]	@ (80069c0 <TIM_Base_SetConfig+0x13c>)
 8006902:	4293      	cmp	r3, r2
 8006904:	d017      	beq.n	8006936 <TIM_Base_SetConfig+0xb2>
 8006906:	687b      	ldr	r3, [r7, #4]
 8006908:	4a2e      	ldr	r2, [pc, #184]	@ (80069c4 <TIM_Base_SetConfig+0x140>)
 800690a:	4293      	cmp	r3, r2
 800690c:	d013      	beq.n	8006936 <TIM_Base_SetConfig+0xb2>
 800690e:	687b      	ldr	r3, [r7, #4]
 8006910:	4a2d      	ldr	r2, [pc, #180]	@ (80069c8 <TIM_Base_SetConfig+0x144>)
 8006912:	4293      	cmp	r3, r2
 8006914:	d00f      	beq.n	8006936 <TIM_Base_SetConfig+0xb2>
 8006916:	687b      	ldr	r3, [r7, #4]
 8006918:	4a2c      	ldr	r2, [pc, #176]	@ (80069cc <TIM_Base_SetConfig+0x148>)
 800691a:	4293      	cmp	r3, r2
 800691c:	d00b      	beq.n	8006936 <TIM_Base_SetConfig+0xb2>
 800691e:	687b      	ldr	r3, [r7, #4]
 8006920:	4a2b      	ldr	r2, [pc, #172]	@ (80069d0 <TIM_Base_SetConfig+0x14c>)
 8006922:	4293      	cmp	r3, r2
 8006924:	d007      	beq.n	8006936 <TIM_Base_SetConfig+0xb2>
 8006926:	687b      	ldr	r3, [r7, #4]
 8006928:	4a2a      	ldr	r2, [pc, #168]	@ (80069d4 <TIM_Base_SetConfig+0x150>)
 800692a:	4293      	cmp	r3, r2
 800692c:	d003      	beq.n	8006936 <TIM_Base_SetConfig+0xb2>
 800692e:	687b      	ldr	r3, [r7, #4]
 8006930:	4a29      	ldr	r2, [pc, #164]	@ (80069d8 <TIM_Base_SetConfig+0x154>)
 8006932:	4293      	cmp	r3, r2
 8006934:	d108      	bne.n	8006948 <TIM_Base_SetConfig+0xc4>
  {
    /* Set the clock division */
    tmpcr1 &= ~TIM_CR1_CKD;
 8006936:	68fb      	ldr	r3, [r7, #12]
 8006938:	f423 7340 	bic.w	r3, r3, #768	@ 0x300
 800693c:	60fb      	str	r3, [r7, #12]
    tmpcr1 |= (uint32_t)Structure->ClockDivision;
 800693e:	683b      	ldr	r3, [r7, #0]
 8006940:	68db      	ldr	r3, [r3, #12]
 8006942:	68fa      	ldr	r2, [r7, #12]
 8006944:	4313      	orrs	r3, r2
 8006946:	60fb      	str	r3, [r7, #12]
  }

  /* Set the auto-reload preload */
  MODIFY_REG(tmpcr1, TIM_CR1_ARPE, Structure->AutoReloadPreload);
 8006948:	68fb      	ldr	r3, [r7, #12]
 800694a:	f023 0280 	bic.w	r2, r3, #128	@ 0x80
 800694e:	683b      	ldr	r3, [r7, #0]
 8006950:	695b      	ldr	r3, [r3, #20]
 8006952:	4313      	orrs	r3, r2
 8006954:	60fb      	str	r3, [r7, #12]

  TIMx->CR1 = tmpcr1;
 8006956:	687b      	ldr	r3, [r7, #4]
 8006958:	68fa      	ldr	r2, [r7, #12]
 800695a:	601a      	str	r2, [r3, #0]

  /* Set the Autoreload value */
  TIMx->ARR = (uint32_t)Structure->Period ;
 800695c:	683b      	ldr	r3, [r7, #0]
 800695e:	689a      	ldr	r2, [r3, #8]
 8006960:	687b      	ldr	r3, [r7, #4]
 8006962:	62da      	str	r2, [r3, #44]	@ 0x2c

  /* Set the Prescaler value */
  TIMx->PSC = Structure->Prescaler;
 8006964:	683b      	ldr	r3, [r7, #0]
 8006966:	681a      	ldr	r2, [r3, #0]
 8006968:	687b      	ldr	r3, [r7, #4]
 800696a:	629a      	str	r2, [r3, #40]	@ 0x28

  if (IS_TIM_REPETITION_COUNTER_INSTANCE(TIMx))
 800696c:	687b      	ldr	r3, [r7, #4]
 800696e:	4a10      	ldr	r2, [pc, #64]	@ (80069b0 <TIM_Base_SetConfig+0x12c>)
 8006970:	4293      	cmp	r3, r2
 8006972:	d003      	beq.n	800697c <TIM_Base_SetConfig+0xf8>
 8006974:	687b      	ldr	r3, [r7, #4]
 8006976:	4a12      	ldr	r2, [pc, #72]	@ (80069c0 <TIM_Base_SetConfig+0x13c>)
 8006978:	4293      	cmp	r3, r2
 800697a:	d103      	bne.n	8006984 <TIM_Base_SetConfig+0x100>
  {
    /* Set the Repetition Counter value */
    TIMx->RCR = Structure->RepetitionCounter;
 800697c:	683b      	ldr	r3, [r7, #0]
 800697e:	691a      	ldr	r2, [r3, #16]
 8006980:	687b      	ldr	r3, [r7, #4]
 8006982:	631a      	str	r2, [r3, #48]	@ 0x30
  }

  /* Generate an update event to reload the Prescaler
     and the repetition counter (only for advanced timer) value immediately */
  TIMx->EGR = TIM_EGR_UG;
 8006984:	687b      	ldr	r3, [r7, #4]
 8006986:	2201      	movs	r2, #1
 8006988:	615a      	str	r2, [r3, #20]

  /* Check if the update flag is set after the Update Generation, if so clear the UIF flag */
  if (HAL_IS_BIT_SET(TIMx->SR, TIM_FLAG_UPDATE))
 800698a:	687b      	ldr	r3, [r7, #4]
 800698c:	691b      	ldr	r3, [r3, #16]
 800698e:	f003 0301 	and.w	r3, r3, #1
 8006992:	2b01      	cmp	r3, #1
 8006994:	d105      	bne.n	80069a2 <TIM_Base_SetConfig+0x11e>
  {
    /* Clear the update flag */
    CLEAR_BIT(TIMx->SR, TIM_FLAG_UPDATE);
 8006996:	687b      	ldr	r3, [r7, #4]
 8006998:	691b      	ldr	r3, [r3, #16]
 800699a:	f023 0201 	bic.w	r2, r3, #1
 800699e:	687b      	ldr	r3, [r7, #4]
 80069a0:	611a      	str	r2, [r3, #16]
  }
}
 80069a2:	bf00      	nop
 80069a4:	3714      	adds	r7, #20
 80069a6:	46bd      	mov	sp, r7
 80069a8:	f85d 7b04 	ldr.w	r7, [sp], #4
 80069ac:	4770      	bx	lr
 80069ae:	bf00      	nop
 80069b0:	40010000 	.word	0x40010000
 80069b4:	40000400 	.word	0x40000400
 80069b8:	40000800 	.word	0x40000800
 80069bc:	40000c00 	.word	0x40000c00
 80069c0:	40010400 	.word	0x40010400
 80069c4:	40014000 	.word	0x40014000
 80069c8:	40014400 	.word	0x40014400
 80069cc:	40014800 	.word	0x40014800
 80069d0:	40001800 	.word	0x40001800
 80069d4:	40001c00 	.word	0x40001c00
 80069d8:	40002000 	.word	0x40002000

080069dc <TIM_OC1_SetConfig>:
  * @param  TIMx to select the TIM peripheral
  * @param  OC_Config The output configuration structure
  * @retval None
  */
static void TIM_OC1_SetConfig(TIM_TypeDef *TIMx, const TIM_OC_InitTypeDef *OC_Config)
{
 80069dc:	b480      	push	{r7}
 80069de:	b087      	sub	sp, #28
 80069e0:	af00      	add	r7, sp, #0
 80069e2:	6078      	str	r0, [r7, #4]
 80069e4:	6039      	str	r1, [r7, #0]
  uint32_t tmpccmrx;
  uint32_t tmpccer;
  uint32_t tmpcr2;

  /* Get the TIMx CCER register value */
  tmpccer = TIMx->CCER;
 80069e6:	687b      	ldr	r3, [r7, #4]
 80069e8:	6a1b      	ldr	r3, [r3, #32]
 80069ea:	617b      	str	r3, [r7, #20]

  /* Disable the Channel 1: Reset the CC1E Bit */
  TIMx->CCER &= ~TIM_CCER_CC1E;
 80069ec:	687b      	ldr	r3, [r7, #4]
 80069ee:	6a1b      	ldr	r3, [r3, #32]
 80069f0:	f023 0201 	bic.w	r2, r3, #1
 80069f4:	687b      	ldr	r3, [r7, #4]
 80069f6:	621a      	str	r2, [r3, #32]

  /* Get the TIMx CR2 register value */
  tmpcr2 =  TIMx->CR2;
 80069f8:	687b      	ldr	r3, [r7, #4]
 80069fa:	685b      	ldr	r3, [r3, #4]
 80069fc:	613b      	str	r3, [r7, #16]

  /* Get the TIMx CCMR1 register value */
  tmpccmrx = TIMx->CCMR1;
 80069fe:	687b      	ldr	r3, [r7, #4]
 8006a00:	699b      	ldr	r3, [r3, #24]
 8006a02:	60fb      	str	r3, [r7, #12]

  /* Reset the Output Compare Mode Bits */
  tmpccmrx &= ~TIM_CCMR1_OC1M;
 8006a04:	68fb      	ldr	r3, [r7, #12]
 8006a06:	f023 0370 	bic.w	r3, r3, #112	@ 0x70
 8006a0a:	60fb      	str	r3, [r7, #12]
  tmpccmrx &= ~TIM_CCMR1_CC1S;
 8006a0c:	68fb      	ldr	r3, [r7, #12]
 8006a0e:	f023 0303 	bic.w	r3, r3, #3
 8006a12:	60fb      	str	r3, [r7, #12]
  /* Select the Output Compare Mode */
  tmpccmrx |= OC_Config->OCMode;
 8006a14:	683b      	ldr	r3, [r7, #0]
 8006a16:	681b      	ldr	r3, [r3, #0]
 8006a18:	68fa      	ldr	r2, [r7, #12]
 8006a1a:	4313      	orrs	r3, r2
 8006a1c:	60fb      	str	r3, [r7, #12]

  /* Reset the Output Polarity level */
  tmpccer &= ~TIM_CCER_CC1P;
 8006a1e:	697b      	ldr	r3, [r7, #20]
 8006a20:	f023 0302 	bic.w	r3, r3, #2
 8006a24:	617b      	str	r3, [r7, #20]
  /* Set the Output Compare Polarity */
  tmpccer |= OC_Config->OCPolarity;
 8006a26:	683b      	ldr	r3, [r7, #0]
 8006a28:	689b      	ldr	r3, [r3, #8]
 8006a2a:	697a      	ldr	r2, [r7, #20]
 8006a2c:	4313      	orrs	r3, r2
 8006a2e:	617b      	str	r3, [r7, #20]

  if (IS_TIM_CCXN_INSTANCE(TIMx, TIM_CHANNEL_1))
 8006a30:	687b      	ldr	r3, [r7, #4]
 8006a32:	4a20      	ldr	r2, [pc, #128]	@ (8006ab4 <TIM_OC1_SetConfig+0xd8>)
 8006a34:	4293      	cmp	r3, r2
 8006a36:	d003      	beq.n	8006a40 <TIM_OC1_SetConfig+0x64>
 8006a38:	687b      	ldr	r3, [r7, #4]
 8006a3a:	4a1f      	ldr	r2, [pc, #124]	@ (8006ab8 <TIM_OC1_SetConfig+0xdc>)
 8006a3c:	4293      	cmp	r3, r2
 8006a3e:	d10c      	bne.n	8006a5a <TIM_OC1_SetConfig+0x7e>
  {
    /* Check parameters */
    assert_param(IS_TIM_OCN_POLARITY(OC_Config->OCNPolarity));

    /* Reset the Output N Polarity level */
    tmpccer &= ~TIM_CCER_CC1NP;
 8006a40:	697b      	ldr	r3, [r7, #20]
 8006a42:	f023 0308 	bic.w	r3, r3, #8
 8006a46:	617b      	str	r3, [r7, #20]
    /* Set the Output N Polarity */
    tmpccer |= OC_Config->OCNPolarity;
 8006a48:	683b      	ldr	r3, [r7, #0]
 8006a4a:	68db      	ldr	r3, [r3, #12]
 8006a4c:	697a      	ldr	r2, [r7, #20]
 8006a4e:	4313      	orrs	r3, r2
 8006a50:	617b      	str	r3, [r7, #20]
    /* Reset the Output N State */
    tmpccer &= ~TIM_CCER_CC1NE;
 8006a52:	697b      	ldr	r3, [r7, #20]
 8006a54:	f023 0304 	bic.w	r3, r3, #4
 8006a58:	617b      	str	r3, [r7, #20]
  }

  if (IS_TIM_BREAK_INSTANCE(TIMx))
 8006a5a:	687b      	ldr	r3, [r7, #4]
 8006a5c:	4a15      	ldr	r2, [pc, #84]	@ (8006ab4 <TIM_OC1_SetConfig+0xd8>)
 8006a5e:	4293      	cmp	r3, r2
 8006a60:	d003      	beq.n	8006a6a <TIM_OC1_SetConfig+0x8e>
 8006a62:	687b      	ldr	r3, [r7, #4]
 8006a64:	4a14      	ldr	r2, [pc, #80]	@ (8006ab8 <TIM_OC1_SetConfig+0xdc>)
 8006a66:	4293      	cmp	r3, r2
 8006a68:	d111      	bne.n	8006a8e <TIM_OC1_SetConfig+0xb2>
    /* Check parameters */
    assert_param(IS_TIM_OCNIDLE_STATE(OC_Config->OCNIdleState));
    assert_param(IS_TIM_OCIDLE_STATE(OC_Config->OCIdleState));

    /* Reset the Output Compare and Output Compare N IDLE State */
    tmpcr2 &= ~TIM_CR2_OIS1;
 8006a6a:	693b      	ldr	r3, [r7, #16]
 8006a6c:	f423 7380 	bic.w	r3, r3, #256	@ 0x100
 8006a70:	613b      	str	r3, [r7, #16]
    tmpcr2 &= ~TIM_CR2_OIS1N;
 8006a72:	693b      	ldr	r3, [r7, #16]
 8006a74:	f423 7300 	bic.w	r3, r3, #512	@ 0x200
 8006a78:	613b      	str	r3, [r7, #16]
    /* Set the Output Idle state */
    tmpcr2 |= OC_Config->OCIdleState;
 8006a7a:	683b      	ldr	r3, [r7, #0]
 8006a7c:	695b      	ldr	r3, [r3, #20]
 8006a7e:	693a      	ldr	r2, [r7, #16]
 8006a80:	4313      	orrs	r3, r2
 8006a82:	613b      	str	r3, [r7, #16]
    /* Set the Output N Idle state */
    tmpcr2 |= OC_Config->OCNIdleState;
 8006a84:	683b      	ldr	r3, [r7, #0]
 8006a86:	699b      	ldr	r3, [r3, #24]
 8006a88:	693a      	ldr	r2, [r7, #16]
 8006a8a:	4313      	orrs	r3, r2
 8006a8c:	613b      	str	r3, [r7, #16]
  }

  /* Write to TIMx CR2 */
  TIMx->CR2 = tmpcr2;
 8006a8e:	687b      	ldr	r3, [r7, #4]
 8006a90:	693a      	ldr	r2, [r7, #16]
 8006a92:	605a      	str	r2, [r3, #4]

  /* Write to TIMx CCMR1 */
  TIMx->CCMR1 = tmpccmrx;
 8006a94:	687b      	ldr	r3, [r7, #4]
 8006a96:	68fa      	ldr	r2, [r7, #12]
 8006a98:	619a      	str	r2, [r3, #24]

  /* Set the Capture Compare Register value */
  TIMx->CCR1 = OC_Config->Pulse;
 8006a9a:	683b      	ldr	r3, [r7, #0]
 8006a9c:	685a      	ldr	r2, [r3, #4]
 8006a9e:	687b      	ldr	r3, [r7, #4]
 8006aa0:	635a      	str	r2, [r3, #52]	@ 0x34

  /* Write to TIMx CCER */
  TIMx->CCER = tmpccer;
 8006aa2:	687b      	ldr	r3, [r7, #4]
 8006aa4:	697a      	ldr	r2, [r7, #20]
 8006aa6:	621a      	str	r2, [r3, #32]
}
 8006aa8:	bf00      	nop
 8006aaa:	371c      	adds	r7, #28
 8006aac:	46bd      	mov	sp, r7
 8006aae:	f85d 7b04 	ldr.w	r7, [sp], #4
 8006ab2:	4770      	bx	lr
 8006ab4:	40010000 	.word	0x40010000
 8006ab8:	40010400 	.word	0x40010400

08006abc <TIM_OC2_SetConfig>:
  * @param  TIMx to select the TIM peripheral
  * @param  OC_Config The output configuration structure
  * @retval None
  */
void TIM_OC2_SetConfig(TIM_TypeDef *TIMx, const TIM_OC_InitTypeDef *OC_Config)
{
 8006abc:	b480      	push	{r7}
 8006abe:	b087      	sub	sp, #28
 8006ac0:	af00      	add	r7, sp, #0
 8006ac2:	6078      	str	r0, [r7, #4]
 8006ac4:	6039      	str	r1, [r7, #0]
  uint32_t tmpccmrx;
  uint32_t tmpccer;
  uint32_t tmpcr2;

  /* Get the TIMx CCER register value */
  tmpccer = TIMx->CCER;
 8006ac6:	687b      	ldr	r3, [r7, #4]
 8006ac8:	6a1b      	ldr	r3, [r3, #32]
 8006aca:	617b      	str	r3, [r7, #20]

  /* Disable the Channel 2: Reset the CC2E Bit */
  TIMx->CCER &= ~TIM_CCER_CC2E;
 8006acc:	687b      	ldr	r3, [r7, #4]
 8006ace:	6a1b      	ldr	r3, [r3, #32]
 8006ad0:	f023 0210 	bic.w	r2, r3, #16
 8006ad4:	687b      	ldr	r3, [r7, #4]
 8006ad6:	621a      	str	r2, [r3, #32]

  /* Get the TIMx CR2 register value */
  tmpcr2 =  TIMx->CR2;
 8006ad8:	687b      	ldr	r3, [r7, #4]
 8006ada:	685b      	ldr	r3, [r3, #4]
 8006adc:	613b      	str	r3, [r7, #16]

  /* Get the TIMx CCMR1 register value */
  tmpccmrx = TIMx->CCMR1;
 8006ade:	687b      	ldr	r3, [r7, #4]
 8006ae0:	699b      	ldr	r3, [r3, #24]
 8006ae2:	60fb      	str	r3, [r7, #12]

  /* Reset the Output Compare mode and Capture/Compare selection Bits */
  tmpccmrx &= ~TIM_CCMR1_OC2M;
 8006ae4:	68fb      	ldr	r3, [r7, #12]
 8006ae6:	f423 43e0 	bic.w	r3, r3, #28672	@ 0x7000
 8006aea:	60fb      	str	r3, [r7, #12]
  tmpccmrx &= ~TIM_CCMR1_CC2S;
 8006aec:	68fb      	ldr	r3, [r7, #12]
 8006aee:	f423 7340 	bic.w	r3, r3, #768	@ 0x300
 8006af2:	60fb      	str	r3, [r7, #12]

  /* Select the Output Compare Mode */
  tmpccmrx |= (OC_Config->OCMode << 8U);
 8006af4:	683b      	ldr	r3, [r7, #0]
 8006af6:	681b      	ldr	r3, [r3, #0]
 8006af8:	021b      	lsls	r3, r3, #8
 8006afa:	68fa      	ldr	r2, [r7, #12]
 8006afc:	4313      	orrs	r3, r2
 8006afe:	60fb      	str	r3, [r7, #12]

  /* Reset the Output Polarity level */
  tmpccer &= ~TIM_CCER_CC2P;
 8006b00:	697b      	ldr	r3, [r7, #20]
 8006b02:	f023 0320 	bic.w	r3, r3, #32
 8006b06:	617b      	str	r3, [r7, #20]
  /* Set the Output Compare Polarity */
  tmpccer |= (OC_Config->OCPolarity << 4U);
 8006b08:	683b      	ldr	r3, [r7, #0]
 8006b0a:	689b      	ldr	r3, [r3, #8]
 8006b0c:	011b      	lsls	r3, r3, #4
 8006b0e:	697a      	ldr	r2, [r7, #20]
 8006b10:	4313      	orrs	r3, r2
 8006b12:	617b      	str	r3, [r7, #20]

  if (IS_TIM_CCXN_INSTANCE(TIMx, TIM_CHANNEL_2))
 8006b14:	687b      	ldr	r3, [r7, #4]
 8006b16:	4a22      	ldr	r2, [pc, #136]	@ (8006ba0 <TIM_OC2_SetConfig+0xe4>)
 8006b18:	4293      	cmp	r3, r2
 8006b1a:	d003      	beq.n	8006b24 <TIM_OC2_SetConfig+0x68>
 8006b1c:	687b      	ldr	r3, [r7, #4]
 8006b1e:	4a21      	ldr	r2, [pc, #132]	@ (8006ba4 <TIM_OC2_SetConfig+0xe8>)
 8006b20:	4293      	cmp	r3, r2
 8006b22:	d10d      	bne.n	8006b40 <TIM_OC2_SetConfig+0x84>
  {
    assert_param(IS_TIM_OCN_POLARITY(OC_Config->OCNPolarity));

    /* Reset the Output N Polarity level */
    tmpccer &= ~TIM_CCER_CC2NP;
 8006b24:	697b      	ldr	r3, [r7, #20]
 8006b26:	f023 0380 	bic.w	r3, r3, #128	@ 0x80
 8006b2a:	617b      	str	r3, [r7, #20]
    /* Set the Output N Polarity */
    tmpccer |= (OC_Config->OCNPolarity << 4U);
 8006b2c:	683b      	ldr	r3, [r7, #0]
 8006b2e:	68db      	ldr	r3, [r3, #12]
 8006b30:	011b      	lsls	r3, r3, #4
 8006b32:	697a      	ldr	r2, [r7, #20]
 8006b34:	4313      	orrs	r3, r2
 8006b36:	617b      	str	r3, [r7, #20]
    /* Reset the Output N State */
    tmpccer &= ~TIM_CCER_CC2NE;
 8006b38:	697b      	ldr	r3, [r7, #20]
 8006b3a:	f023 0340 	bic.w	r3, r3, #64	@ 0x40
 8006b3e:	617b      	str	r3, [r7, #20]
  }

  if (IS_TIM_BREAK_INSTANCE(TIMx))
 8006b40:	687b      	ldr	r3, [r7, #4]
 8006b42:	4a17      	ldr	r2, [pc, #92]	@ (8006ba0 <TIM_OC2_SetConfig+0xe4>)
 8006b44:	4293      	cmp	r3, r2
 8006b46:	d003      	beq.n	8006b50 <TIM_OC2_SetConfig+0x94>
 8006b48:	687b      	ldr	r3, [r7, #4]
 8006b4a:	4a16      	ldr	r2, [pc, #88]	@ (8006ba4 <TIM_OC2_SetConfig+0xe8>)
 8006b4c:	4293      	cmp	r3, r2
 8006b4e:	d113      	bne.n	8006b78 <TIM_OC2_SetConfig+0xbc>
    /* Check parameters */
    assert_param(IS_TIM_OCNIDLE_STATE(OC_Config->OCNIdleState));
    assert_param(IS_TIM_OCIDLE_STATE(OC_Config->OCIdleState));

    /* Reset the Output Compare and Output Compare N IDLE State */
    tmpcr2 &= ~TIM_CR2_OIS2;
 8006b50:	693b      	ldr	r3, [r7, #16]
 8006b52:	f423 6380 	bic.w	r3, r3, #1024	@ 0x400
 8006b56:	613b      	str	r3, [r7, #16]
    tmpcr2 &= ~TIM_CR2_OIS2N;
 8006b58:	693b      	ldr	r3, [r7, #16]
 8006b5a:	f423 6300 	bic.w	r3, r3, #2048	@ 0x800
 8006b5e:	613b      	str	r3, [r7, #16]
    /* Set the Output Idle state */
    tmpcr2 |= (OC_Config->OCIdleState << 2U);
 8006b60:	683b      	ldr	r3, [r7, #0]
 8006b62:	695b      	ldr	r3, [r3, #20]
 8006b64:	009b      	lsls	r3, r3, #2
 8006b66:	693a      	ldr	r2, [r7, #16]
 8006b68:	4313      	orrs	r3, r2
 8006b6a:	613b      	str	r3, [r7, #16]
    /* Set the Output N Idle state */
    tmpcr2 |= (OC_Config->OCNIdleState << 2U);
 8006b6c:	683b      	ldr	r3, [r7, #0]
 8006b6e:	699b      	ldr	r3, [r3, #24]
 8006b70:	009b      	lsls	r3, r3, #2
 8006b72:	693a      	ldr	r2, [r7, #16]
 8006b74:	4313      	orrs	r3, r2
 8006b76:	613b      	str	r3, [r7, #16]
  }

  /* Write to TIMx CR2 */
  TIMx->CR2 = tmpcr2;
 8006b78:	687b      	ldr	r3, [r7, #4]
 8006b7a:	693a      	ldr	r2, [r7, #16]
 8006b7c:	605a      	str	r2, [r3, #4]

  /* Write to TIMx CCMR1 */
  TIMx->CCMR1 = tmpccmrx;
 8006b7e:	687b      	ldr	r3, [r7, #4]
 8006b80:	68fa      	ldr	r2, [r7, #12]
 8006b82:	619a      	str	r2, [r3, #24]

  /* Set the Capture Compare Register value */
  TIMx->CCR2 = OC_Config->Pulse;
 8006b84:	683b      	ldr	r3, [r7, #0]
 8006b86:	685a      	ldr	r2, [r3, #4]
 8006b88:	687b      	ldr	r3, [r7, #4]
 8006b8a:	639a      	str	r2, [r3, #56]	@ 0x38

  /* Write to TIMx CCER */
  TIMx->CCER = tmpccer;
 8006b8c:	687b      	ldr	r3, [r7, #4]
 8006b8e:	697a      	ldr	r2, [r7, #20]
 8006b90:	621a      	str	r2, [r3, #32]
}
 8006b92:	bf00      	nop
 8006b94:	371c      	adds	r7, #28
 8006b96:	46bd      	mov	sp, r7
 8006b98:	f85d 7b04 	ldr.w	r7, [sp], #4
 8006b9c:	4770      	bx	lr
 8006b9e:	bf00      	nop
 8006ba0:	40010000 	.word	0x40010000
 8006ba4:	40010400 	.word	0x40010400

08006ba8 <TIM_OC3_SetConfig>:
  * @param  TIMx to select the TIM peripheral
  * @param  OC_Config The output configuration structure
  * @retval None
  */
static void TIM_OC3_SetConfig(TIM_TypeDef *TIMx, const TIM_OC_InitTypeDef *OC_Config)
{
 8006ba8:	b480      	push	{r7}
 8006baa:	b087      	sub	sp, #28
 8006bac:	af00      	add	r7, sp, #0
 8006bae:	6078      	str	r0, [r7, #4]
 8006bb0:	6039      	str	r1, [r7, #0]
  uint32_t tmpccmrx;
  uint32_t tmpccer;
  uint32_t tmpcr2;

  /* Get the TIMx CCER register value */
  tmpccer = TIMx->CCER;
 8006bb2:	687b      	ldr	r3, [r7, #4]
 8006bb4:	6a1b      	ldr	r3, [r3, #32]
 8006bb6:	617b      	str	r3, [r7, #20]

  /* Disable the Channel 3: Reset the CC2E Bit */
  TIMx->CCER &= ~TIM_CCER_CC3E;
 8006bb8:	687b      	ldr	r3, [r7, #4]
 8006bba:	6a1b      	ldr	r3, [r3, #32]
 8006bbc:	f423 7280 	bic.w	r2, r3, #256	@ 0x100
 8006bc0:	687b      	ldr	r3, [r7, #4]
 8006bc2:	621a      	str	r2, [r3, #32]

  /* Get the TIMx CR2 register value */
  tmpcr2 =  TIMx->CR2;
 8006bc4:	687b      	ldr	r3, [r7, #4]
 8006bc6:	685b      	ldr	r3, [r3, #4]
 8006bc8:	613b      	str	r3, [r7, #16]

  /* Get the TIMx CCMR2 register value */
  tmpccmrx = TIMx->CCMR2;
 8006bca:	687b      	ldr	r3, [r7, #4]
 8006bcc:	69db      	ldr	r3, [r3, #28]
 8006bce:	60fb      	str	r3, [r7, #12]

  /* Reset the Output Compare mode and Capture/Compare selection Bits */
  tmpccmrx &= ~TIM_CCMR2_OC3M;
 8006bd0:	68fb      	ldr	r3, [r7, #12]
 8006bd2:	f023 0370 	bic.w	r3, r3, #112	@ 0x70
 8006bd6:	60fb      	str	r3, [r7, #12]
  tmpccmrx &= ~TIM_CCMR2_CC3S;
 8006bd8:	68fb      	ldr	r3, [r7, #12]
 8006bda:	f023 0303 	bic.w	r3, r3, #3
 8006bde:	60fb      	str	r3, [r7, #12]
  /* Select the Output Compare Mode */
  tmpccmrx |= OC_Config->OCMode;
 8006be0:	683b      	ldr	r3, [r7, #0]
 8006be2:	681b      	ldr	r3, [r3, #0]
 8006be4:	68fa      	ldr	r2, [r7, #12]
 8006be6:	4313      	orrs	r3, r2
 8006be8:	60fb      	str	r3, [r7, #12]

  /* Reset the Output Polarity level */
  tmpccer &= ~TIM_CCER_CC3P;
 8006bea:	697b      	ldr	r3, [r7, #20]
 8006bec:	f423 7300 	bic.w	r3, r3, #512	@ 0x200
 8006bf0:	617b      	str	r3, [r7, #20]
  /* Set the Output Compare Polarity */
  tmpccer |= (OC_Config->OCPolarity << 8U);
 8006bf2:	683b      	ldr	r3, [r7, #0]
 8006bf4:	689b      	ldr	r3, [r3, #8]
 8006bf6:	021b      	lsls	r3, r3, #8
 8006bf8:	697a      	ldr	r2, [r7, #20]
 8006bfa:	4313      	orrs	r3, r2
 8006bfc:	617b      	str	r3, [r7, #20]

  if (IS_TIM_CCXN_INSTANCE(TIMx, TIM_CHANNEL_3))
 8006bfe:	687b      	ldr	r3, [r7, #4]
 8006c00:	4a21      	ldr	r2, [pc, #132]	@ (8006c88 <TIM_OC3_SetConfig+0xe0>)
 8006c02:	4293      	cmp	r3, r2
 8006c04:	d003      	beq.n	8006c0e <TIM_OC3_SetConfig+0x66>
 8006c06:	687b      	ldr	r3, [r7, #4]
 8006c08:	4a20      	ldr	r2, [pc, #128]	@ (8006c8c <TIM_OC3_SetConfig+0xe4>)
 8006c0a:	4293      	cmp	r3, r2
 8006c0c:	d10d      	bne.n	8006c2a <TIM_OC3_SetConfig+0x82>
  {
    assert_param(IS_TIM_OCN_POLARITY(OC_Config->OCNPolarity));

    /* Reset the Output N Polarity level */
    tmpccer &= ~TIM_CCER_CC3NP;
 8006c0e:	697b      	ldr	r3, [r7, #20]
 8006c10:	f423 6300 	bic.w	r3, r3, #2048	@ 0x800
 8006c14:	617b      	str	r3, [r7, #20]
    /* Set the Output N Polarity */
    tmpccer |= (OC_Config->OCNPolarity << 8U);
 8006c16:	683b      	ldr	r3, [r7, #0]
 8006c18:	68db      	ldr	r3, [r3, #12]
 8006c1a:	021b      	lsls	r3, r3, #8
 8006c1c:	697a      	ldr	r2, [r7, #20]
 8006c1e:	4313      	orrs	r3, r2
 8006c20:	617b      	str	r3, [r7, #20]
    /* Reset the Output N State */
    tmpccer &= ~TIM_CCER_CC3NE;
 8006c22:	697b      	ldr	r3, [r7, #20]
 8006c24:	f423 6380 	bic.w	r3, r3, #1024	@ 0x400
 8006c28:	617b      	str	r3, [r7, #20]
  }

  if (IS_TIM_BREAK_INSTANCE(TIMx))
 8006c2a:	687b      	ldr	r3, [r7, #4]
 8006c2c:	4a16      	ldr	r2, [pc, #88]	@ (8006c88 <TIM_OC3_SetConfig+0xe0>)
 8006c2e:	4293      	cmp	r3, r2
 8006c30:	d003      	beq.n	8006c3a <TIM_OC3_SetConfig+0x92>
 8006c32:	687b      	ldr	r3, [r7, #4]
 8006c34:	4a15      	ldr	r2, [pc, #84]	@ (8006c8c <TIM_OC3_SetConfig+0xe4>)
 8006c36:	4293      	cmp	r3, r2
 8006c38:	d113      	bne.n	8006c62 <TIM_OC3_SetConfig+0xba>
    /* Check parameters */
    assert_param(IS_TIM_OCNIDLE_STATE(OC_Config->OCNIdleState));
    assert_param(IS_TIM_OCIDLE_STATE(OC_Config->OCIdleState));

    /* Reset the Output Compare and Output Compare N IDLE State */
    tmpcr2 &= ~TIM_CR2_OIS3;
 8006c3a:	693b      	ldr	r3, [r7, #16]
 8006c3c:	f423 5380 	bic.w	r3, r3, #4096	@ 0x1000
 8006c40:	613b      	str	r3, [r7, #16]
    tmpcr2 &= ~TIM_CR2_OIS3N;
 8006c42:	693b      	ldr	r3, [r7, #16]
 8006c44:	f423 5300 	bic.w	r3, r3, #8192	@ 0x2000
 8006c48:	613b      	str	r3, [r7, #16]
    /* Set the Output Idle state */
    tmpcr2 |= (OC_Config->OCIdleState << 4U);
 8006c4a:	683b      	ldr	r3, [r7, #0]
 8006c4c:	695b      	ldr	r3, [r3, #20]
 8006c4e:	011b      	lsls	r3, r3, #4
 8006c50:	693a      	ldr	r2, [r7, #16]
 8006c52:	4313      	orrs	r3, r2
 8006c54:	613b      	str	r3, [r7, #16]
    /* Set the Output N Idle state */
    tmpcr2 |= (OC_Config->OCNIdleState << 4U);
 8006c56:	683b      	ldr	r3, [r7, #0]
 8006c58:	699b      	ldr	r3, [r3, #24]
 8006c5a:	011b      	lsls	r3, r3, #4
 8006c5c:	693a      	ldr	r2, [r7, #16]
 8006c5e:	4313      	orrs	r3, r2
 8006c60:	613b      	str	r3, [r7, #16]
  }

  /* Write to TIMx CR2 */
  TIMx->CR2 = tmpcr2;
 8006c62:	687b      	ldr	r3, [r7, #4]
 8006c64:	693a      	ldr	r2, [r7, #16]
 8006c66:	605a      	str	r2, [r3, #4]

  /* Write to TIMx CCMR2 */
  TIMx->CCMR2 = tmpccmrx;
 8006c68:	687b      	ldr	r3, [r7, #4]
 8006c6a:	68fa      	ldr	r2, [r7, #12]
 8006c6c:	61da      	str	r2, [r3, #28]

  /* Set the Capture Compare Register value */
  TIMx->CCR3 = OC_Config->Pulse;
 8006c6e:	683b      	ldr	r3, [r7, #0]
 8006c70:	685a      	ldr	r2, [r3, #4]
 8006c72:	687b      	ldr	r3, [r7, #4]
 8006c74:	63da      	str	r2, [r3, #60]	@ 0x3c

  /* Write to TIMx CCER */
  TIMx->CCER = tmpccer;
 8006c76:	687b      	ldr	r3, [r7, #4]
 8006c78:	697a      	ldr	r2, [r7, #20]
 8006c7a:	621a      	str	r2, [r3, #32]
}
 8006c7c:	bf00      	nop
 8006c7e:	371c      	adds	r7, #28
 8006c80:	46bd      	mov	sp, r7
 8006c82:	f85d 7b04 	ldr.w	r7, [sp], #4
 8006c86:	4770      	bx	lr
 8006c88:	40010000 	.word	0x40010000
 8006c8c:	40010400 	.word	0x40010400

08006c90 <TIM_OC4_SetConfig>:
  * @param  TIMx to select the TIM peripheral
  * @param  OC_Config The output configuration structure
  * @retval None
  */
static void TIM_OC4_SetConfig(TIM_TypeDef *TIMx, const TIM_OC_InitTypeDef *OC_Config)
{
 8006c90:	b480      	push	{r7}
 8006c92:	b087      	sub	sp, #28
 8006c94:	af00      	add	r7, sp, #0
 8006c96:	6078      	str	r0, [r7, #4]
 8006c98:	6039      	str	r1, [r7, #0]
  uint32_t tmpccmrx;
  uint32_t tmpccer;
  uint32_t tmpcr2;

  /* Get the TIMx CCER register value */
  tmpccer = TIMx->CCER;
 8006c9a:	687b      	ldr	r3, [r7, #4]
 8006c9c:	6a1b      	ldr	r3, [r3, #32]
 8006c9e:	613b      	str	r3, [r7, #16]

  /* Disable the Channel 4: Reset the CC4E Bit */
  TIMx->CCER &= ~TIM_CCER_CC4E;
 8006ca0:	687b      	ldr	r3, [r7, #4]
 8006ca2:	6a1b      	ldr	r3, [r3, #32]
 8006ca4:	f423 5280 	bic.w	r2, r3, #4096	@ 0x1000
 8006ca8:	687b      	ldr	r3, [r7, #4]
 8006caa:	621a      	str	r2, [r3, #32]

  /* Get the TIMx CR2 register value */
  tmpcr2 =  TIMx->CR2;
 8006cac:	687b      	ldr	r3, [r7, #4]
 8006cae:	685b      	ldr	r3, [r3, #4]
 8006cb0:	617b      	str	r3, [r7, #20]

  /* Get the TIMx CCMR2 register value */
  tmpccmrx = TIMx->CCMR2;
 8006cb2:	687b      	ldr	r3, [r7, #4]
 8006cb4:	69db      	ldr	r3, [r3, #28]
 8006cb6:	60fb      	str	r3, [r7, #12]

  /* Reset the Output Compare mode and Capture/Compare selection Bits */
  tmpccmrx &= ~TIM_CCMR2_OC4M;
 8006cb8:	68fb      	ldr	r3, [r7, #12]
 8006cba:	f423 43e0 	bic.w	r3, r3, #28672	@ 0x7000
 8006cbe:	60fb      	str	r3, [r7, #12]
  tmpccmrx &= ~TIM_CCMR2_CC4S;
 8006cc0:	68fb      	ldr	r3, [r7, #12]
 8006cc2:	f423 7340 	bic.w	r3, r3, #768	@ 0x300
 8006cc6:	60fb      	str	r3, [r7, #12]

  /* Select the Output Compare Mode */
  tmpccmrx |= (OC_Config->OCMode << 8U);
 8006cc8:	683b      	ldr	r3, [r7, #0]
 8006cca:	681b      	ldr	r3, [r3, #0]
 8006ccc:	021b      	lsls	r3, r3, #8
 8006cce:	68fa      	ldr	r2, [r7, #12]
 8006cd0:	4313      	orrs	r3, r2
 8006cd2:	60fb      	str	r3, [r7, #12]

  /* Reset the Output Polarity level */
  tmpccer &= ~TIM_CCER_CC4P;
 8006cd4:	693b      	ldr	r3, [r7, #16]
 8006cd6:	f423 5300 	bic.w	r3, r3, #8192	@ 0x2000
 8006cda:	613b      	str	r3, [r7, #16]
  /* Set the Output Compare Polarity */
  tmpccer |= (OC_Config->OCPolarity << 12U);
 8006cdc:	683b      	ldr	r3, [r7, #0]
 8006cde:	689b      	ldr	r3, [r3, #8]
 8006ce0:	031b      	lsls	r3, r3, #12
 8006ce2:	693a      	ldr	r2, [r7, #16]
 8006ce4:	4313      	orrs	r3, r2
 8006ce6:	613b      	str	r3, [r7, #16]

  if (IS_TIM_BREAK_INSTANCE(TIMx))
 8006ce8:	687b      	ldr	r3, [r7, #4]
 8006cea:	4a12      	ldr	r2, [pc, #72]	@ (8006d34 <TIM_OC4_SetConfig+0xa4>)
 8006cec:	4293      	cmp	r3, r2
 8006cee:	d003      	beq.n	8006cf8 <TIM_OC4_SetConfig+0x68>
 8006cf0:	687b      	ldr	r3, [r7, #4]
 8006cf2:	4a11      	ldr	r2, [pc, #68]	@ (8006d38 <TIM_OC4_SetConfig+0xa8>)
 8006cf4:	4293      	cmp	r3, r2
 8006cf6:	d109      	bne.n	8006d0c <TIM_OC4_SetConfig+0x7c>
  {
    /* Check parameters */
    assert_param(IS_TIM_OCIDLE_STATE(OC_Config->OCIdleState));

    /* Reset the Output Compare IDLE State */
    tmpcr2 &= ~TIM_CR2_OIS4;
 8006cf8:	697b      	ldr	r3, [r7, #20]
 8006cfa:	f423 4380 	bic.w	r3, r3, #16384	@ 0x4000
 8006cfe:	617b      	str	r3, [r7, #20]

    /* Set the Output Idle state */
    tmpcr2 |= (OC_Config->OCIdleState << 6U);
 8006d00:	683b      	ldr	r3, [r7, #0]
 8006d02:	695b      	ldr	r3, [r3, #20]
 8006d04:	019b      	lsls	r3, r3, #6
 8006d06:	697a      	ldr	r2, [r7, #20]
 8006d08:	4313      	orrs	r3, r2
 8006d0a:	617b      	str	r3, [r7, #20]
  }

  /* Write to TIMx CR2 */
  TIMx->CR2 = tmpcr2;
 8006d0c:	687b      	ldr	r3, [r7, #4]
 8006d0e:	697a      	ldr	r2, [r7, #20]
 8006d10:	605a      	str	r2, [r3, #4]

  /* Write to TIMx CCMR2 */
  TIMx->CCMR2 = tmpccmrx;
 8006d12:	687b      	ldr	r3, [r7, #4]
 8006d14:	68fa      	ldr	r2, [r7, #12]
 8006d16:	61da      	str	r2, [r3, #28]

  /* Set the Capture Compare Register value */
  TIMx->CCR4 = OC_Config->Pulse;
 8006d18:	683b      	ldr	r3, [r7, #0]
 8006d1a:	685a      	ldr	r2, [r3, #4]
 8006d1c:	687b      	ldr	r3, [r7, #4]
 8006d1e:	641a      	str	r2, [r3, #64]	@ 0x40

  /* Write to TIMx CCER */
  TIMx->CCER = tmpccer;
 8006d20:	687b      	ldr	r3, [r7, #4]
 8006d22:	693a      	ldr	r2, [r7, #16]
 8006d24:	621a      	str	r2, [r3, #32]
}
 8006d26:	bf00      	nop
 8006d28:	371c      	adds	r7, #28
 8006d2a:	46bd      	mov	sp, r7
 8006d2c:	f85d 7b04 	ldr.w	r7, [sp], #4
 8006d30:	4770      	bx	lr
 8006d32:	bf00      	nop
 8006d34:	40010000 	.word	0x40010000
 8006d38:	40010400 	.word	0x40010400

08006d3c <TIM_TI1_ConfigInputStage>:
  * @param  TIM_ICFilter Specifies the Input Capture Filter.
  *          This parameter must be a value between 0x00 and 0x0F.
  * @retval None
  */
static void TIM_TI1_ConfigInputStage(TIM_TypeDef *TIMx, uint32_t TIM_ICPolarity, uint32_t TIM_ICFilter)
{
 8006d3c:	b480      	push	{r7}
 8006d3e:	b087      	sub	sp, #28
 8006d40:	af00      	add	r7, sp, #0
 8006d42:	60f8      	str	r0, [r7, #12]
 8006d44:	60b9      	str	r1, [r7, #8]
 8006d46:	607a      	str	r2, [r7, #4]
  uint32_t tmpccmr1;
  uint32_t tmpccer;

  /* Disable the Channel 1: Reset the CC1E Bit */
  tmpccer = TIMx->CCER;
 8006d48:	68fb      	ldr	r3, [r7, #12]
 8006d4a:	6a1b      	ldr	r3, [r3, #32]
 8006d4c:	617b      	str	r3, [r7, #20]
  TIMx->CCER &= ~TIM_CCER_CC1E;
 8006d4e:	68fb      	ldr	r3, [r7, #12]
 8006d50:	6a1b      	ldr	r3, [r3, #32]
 8006d52:	f023 0201 	bic.w	r2, r3, #1
 8006d56:	68fb      	ldr	r3, [r7, #12]
 8006d58:	621a      	str	r2, [r3, #32]
  tmpccmr1 = TIMx->CCMR1;
 8006d5a:	68fb      	ldr	r3, [r7, #12]
 8006d5c:	699b      	ldr	r3, [r3, #24]
 8006d5e:	613b      	str	r3, [r7, #16]

  /* Set the filter */
  tmpccmr1 &= ~TIM_CCMR1_IC1F;
 8006d60:	693b      	ldr	r3, [r7, #16]
 8006d62:	f023 03f0 	bic.w	r3, r3, #240	@ 0xf0
 8006d66:	613b      	str	r3, [r7, #16]
  tmpccmr1 |= (TIM_ICFilter << 4U);
 8006d68:	687b      	ldr	r3, [r7, #4]
 8006d6a:	011b      	lsls	r3, r3, #4
 8006d6c:	693a      	ldr	r2, [r7, #16]
 8006d6e:	4313      	orrs	r3, r2
 8006d70:	613b      	str	r3, [r7, #16]

  /* Select the Polarity and set the CC1E Bit */
  tmpccer &= ~(TIM_CCER_CC1P | TIM_CCER_CC1NP);
 8006d72:	697b      	ldr	r3, [r7, #20]
 8006d74:	f023 030a 	bic.w	r3, r3, #10
 8006d78:	617b      	str	r3, [r7, #20]
  tmpccer |= TIM_ICPolarity;
 8006d7a:	697a      	ldr	r2, [r7, #20]
 8006d7c:	68bb      	ldr	r3, [r7, #8]
 8006d7e:	4313      	orrs	r3, r2
 8006d80:	617b      	str	r3, [r7, #20]

  /* Write to TIMx CCMR1 and CCER registers */
  TIMx->CCMR1 = tmpccmr1;
 8006d82:	68fb      	ldr	r3, [r7, #12]
 8006d84:	693a      	ldr	r2, [r7, #16]
 8006d86:	619a      	str	r2, [r3, #24]
  TIMx->CCER = tmpccer;
 8006d88:	68fb      	ldr	r3, [r7, #12]
 8006d8a:	697a      	ldr	r2, [r7, #20]
 8006d8c:	621a      	str	r2, [r3, #32]
}
 8006d8e:	bf00      	nop
 8006d90:	371c      	adds	r7, #28
 8006d92:	46bd      	mov	sp, r7
 8006d94:	f85d 7b04 	ldr.w	r7, [sp], #4
 8006d98:	4770      	bx	lr

08006d9a <TIM_TI2_ConfigInputStage>:
  * @param  TIM_ICFilter Specifies the Input Capture Filter.
  *          This parameter must be a value between 0x00 and 0x0F.
  * @retval None
  */
static void TIM_TI2_ConfigInputStage(TIM_TypeDef *TIMx, uint32_t TIM_ICPolarity, uint32_t TIM_ICFilter)
{
 8006d9a:	b480      	push	{r7}
 8006d9c:	b087      	sub	sp, #28
 8006d9e:	af00      	add	r7, sp, #0
 8006da0:	60f8      	str	r0, [r7, #12]
 8006da2:	60b9      	str	r1, [r7, #8]
 8006da4:	607a      	str	r2, [r7, #4]
  uint32_t tmpccmr1;
  uint32_t tmpccer;

  /* Disable the Channel 2: Reset the CC2E Bit */
  tmpccer = TIMx->CCER;
 8006da6:	68fb      	ldr	r3, [r7, #12]
 8006da8:	6a1b      	ldr	r3, [r3, #32]
 8006daa:	617b      	str	r3, [r7, #20]
  TIMx->CCER &= ~TIM_CCER_CC2E;
 8006dac:	68fb      	ldr	r3, [r7, #12]
 8006dae:	6a1b      	ldr	r3, [r3, #32]
 8006db0:	f023 0210 	bic.w	r2, r3, #16
 8006db4:	68fb      	ldr	r3, [r7, #12]
 8006db6:	621a      	str	r2, [r3, #32]
  tmpccmr1 = TIMx->CCMR1;
 8006db8:	68fb      	ldr	r3, [r7, #12]
 8006dba:	699b      	ldr	r3, [r3, #24]
 8006dbc:	613b      	str	r3, [r7, #16]

  /* Set the filter */
  tmpccmr1 &= ~TIM_CCMR1_IC2F;
 8006dbe:	693b      	ldr	r3, [r7, #16]
 8006dc0:	f423 4370 	bic.w	r3, r3, #61440	@ 0xf000
 8006dc4:	613b      	str	r3, [r7, #16]
  tmpccmr1 |= (TIM_ICFilter << 12U);
 8006dc6:	687b      	ldr	r3, [r7, #4]
 8006dc8:	031b      	lsls	r3, r3, #12
 8006dca:	693a      	ldr	r2, [r7, #16]
 8006dcc:	4313      	orrs	r3, r2
 8006dce:	613b      	str	r3, [r7, #16]

  /* Select the Polarity and set the CC2E Bit */
  tmpccer &= ~(TIM_CCER_CC2P | TIM_CCER_CC2NP);
 8006dd0:	697b      	ldr	r3, [r7, #20]
 8006dd2:	f023 03a0 	bic.w	r3, r3, #160	@ 0xa0
 8006dd6:	617b      	str	r3, [r7, #20]
  tmpccer |= (TIM_ICPolarity << 4U);
 8006dd8:	68bb      	ldr	r3, [r7, #8]
 8006dda:	011b      	lsls	r3, r3, #4
 8006ddc:	697a      	ldr	r2, [r7, #20]
 8006dde:	4313      	orrs	r3, r2
 8006de0:	617b      	str	r3, [r7, #20]

  /* Write to TIMx CCMR1 and CCER registers */
  TIMx->CCMR1 = tmpccmr1 ;
 8006de2:	68fb      	ldr	r3, [r7, #12]
 8006de4:	693a      	ldr	r2, [r7, #16]
 8006de6:	619a      	str	r2, [r3, #24]
  TIMx->CCER = tmpccer;
 8006de8:	68fb      	ldr	r3, [r7, #12]
 8006dea:	697a      	ldr	r2, [r7, #20]
 8006dec:	621a      	str	r2, [r3, #32]
}
 8006dee:	bf00      	nop
 8006df0:	371c      	adds	r7, #28
 8006df2:	46bd      	mov	sp, r7
 8006df4:	f85d 7b04 	ldr.w	r7, [sp], #4
 8006df8:	4770      	bx	lr

08006dfa <TIM_ITRx_SetConfig>:
  *            @arg TIM_TS_TI2FP2: Filtered Timer Input 2
  *            @arg TIM_TS_ETRF: External Trigger input
  * @retval None
  */
static void TIM_ITRx_SetConfig(TIM_TypeDef *TIMx, uint32_t InputTriggerSource)
{
 8006dfa:	b480      	push	{r7}
 8006dfc:	b085      	sub	sp, #20
 8006dfe:	af00      	add	r7, sp, #0
 8006e00:	6078      	str	r0, [r7, #4]
 8006e02:	6039      	str	r1, [r7, #0]
  uint32_t tmpsmcr;

  /* Get the TIMx SMCR register value */
  tmpsmcr = TIMx->SMCR;
 8006e04:	687b      	ldr	r3, [r7, #4]
 8006e06:	689b      	ldr	r3, [r3, #8]
 8006e08:	60fb      	str	r3, [r7, #12]
  /* Reset the TS Bits */
  tmpsmcr &= ~TIM_SMCR_TS;
 8006e0a:	68fb      	ldr	r3, [r7, #12]
 8006e0c:	f023 0370 	bic.w	r3, r3, #112	@ 0x70
 8006e10:	60fb      	str	r3, [r7, #12]
  /* Set the Input Trigger source and the slave mode*/
  tmpsmcr |= (InputTriggerSource | TIM_SLAVEMODE_EXTERNAL1);
 8006e12:	683a      	ldr	r2, [r7, #0]
 8006e14:	68fb      	ldr	r3, [r7, #12]
 8006e16:	4313      	orrs	r3, r2
 8006e18:	f043 0307 	orr.w	r3, r3, #7
 8006e1c:	60fb      	str	r3, [r7, #12]
  /* Write to TIMx SMCR */
  TIMx->SMCR = tmpsmcr;
 8006e1e:	687b      	ldr	r3, [r7, #4]
 8006e20:	68fa      	ldr	r2, [r7, #12]
 8006e22:	609a      	str	r2, [r3, #8]
}
 8006e24:	bf00      	nop
 8006e26:	3714      	adds	r7, #20
 8006e28:	46bd      	mov	sp, r7
 8006e2a:	f85d 7b04 	ldr.w	r7, [sp], #4
 8006e2e:	4770      	bx	lr

08006e30 <TIM_ETR_SetConfig>:
  *          This parameter must be a value between 0x00 and 0x0F
  * @retval None
  */
void TIM_ETR_SetConfig(TIM_TypeDef *TIMx, uint32_t TIM_ExtTRGPrescaler,
                       uint32_t TIM_ExtTRGPolarity, uint32_t ExtTRGFilter)
{
 8006e30:	b480      	push	{r7}
 8006e32:	b087      	sub	sp, #28
 8006e34:	af00      	add	r7, sp, #0
 8006e36:	60f8      	str	r0, [r7, #12]
 8006e38:	60b9      	str	r1, [r7, #8]
 8006e3a:	607a      	str	r2, [r7, #4]
 8006e3c:	603b      	str	r3, [r7, #0]
  uint32_t tmpsmcr;

  tmpsmcr = TIMx->SMCR;
 8006e3e:	68fb      	ldr	r3, [r7, #12]
 8006e40:	689b      	ldr	r3, [r3, #8]
 8006e42:	617b      	str	r3, [r7, #20]

  /* Reset the ETR Bits */
  tmpsmcr &= ~(TIM_SMCR_ETF | TIM_SMCR_ETPS | TIM_SMCR_ECE | TIM_SMCR_ETP);
 8006e44:	697b      	ldr	r3, [r7, #20]
 8006e46:	f423 437f 	bic.w	r3, r3, #65280	@ 0xff00
 8006e4a:	617b      	str	r3, [r7, #20]

  /* Set the Prescaler, the Filter value and the Polarity */
  tmpsmcr |= (uint32_t)(TIM_ExtTRGPrescaler | (TIM_ExtTRGPolarity | (ExtTRGFilter << 8U)));
 8006e4c:	683b      	ldr	r3, [r7, #0]
 8006e4e:	021a      	lsls	r2, r3, #8
 8006e50:	687b      	ldr	r3, [r7, #4]
 8006e52:	431a      	orrs	r2, r3
 8006e54:	68bb      	ldr	r3, [r7, #8]
 8006e56:	4313      	orrs	r3, r2
 8006e58:	697a      	ldr	r2, [r7, #20]
 8006e5a:	4313      	orrs	r3, r2
 8006e5c:	617b      	str	r3, [r7, #20]

  /* Write to TIMx SMCR */
  TIMx->SMCR = tmpsmcr;
 8006e5e:	68fb      	ldr	r3, [r7, #12]
 8006e60:	697a      	ldr	r2, [r7, #20]
 8006e62:	609a      	str	r2, [r3, #8]
}
 8006e64:	bf00      	nop
 8006e66:	371c      	adds	r7, #28
 8006e68:	46bd      	mov	sp, r7
 8006e6a:	f85d 7b04 	ldr.w	r7, [sp], #4
 8006e6e:	4770      	bx	lr

08006e70 <HAL_TIMEx_MasterConfigSynchronization>:
  *         mode.
  * @retval HAL status
  */
HAL_StatusTypeDef HAL_TIMEx_MasterConfigSynchronization(TIM_HandleTypeDef *htim,
                                                        const TIM_MasterConfigTypeDef *sMasterConfig)
{
 8006e70:	b480      	push	{r7}
 8006e72:	b085      	sub	sp, #20
 8006e74:	af00      	add	r7, sp, #0
 8006e76:	6078      	str	r0, [r7, #4]
 8006e78:	6039      	str	r1, [r7, #0]
  assert_param(IS_TIM_MASTER_INSTANCE(htim->Instance));
  assert_param(IS_TIM_TRGO_SOURCE(sMasterConfig->MasterOutputTrigger));
  assert_param(IS_TIM_MSM_STATE(sMasterConfig->MasterSlaveMode));

  /* Check input state */
  __HAL_LOCK(htim);
 8006e7a:	687b      	ldr	r3, [r7, #4]
 8006e7c:	f893 303c 	ldrb.w	r3, [r3, #60]	@ 0x3c
 8006e80:	2b01      	cmp	r3, #1
 8006e82:	d101      	bne.n	8006e88 <HAL_TIMEx_MasterConfigSynchronization+0x18>
 8006e84:	2302      	movs	r3, #2
 8006e86:	e05a      	b.n	8006f3e <HAL_TIMEx_MasterConfigSynchronization+0xce>
 8006e88:	687b      	ldr	r3, [r7, #4]
 8006e8a:	2201      	movs	r2, #1
 8006e8c:	f883 203c 	strb.w	r2, [r3, #60]	@ 0x3c

  /* Change the handler state */
  htim->State = HAL_TIM_STATE_BUSY;
 8006e90:	687b      	ldr	r3, [r7, #4]
 8006e92:	2202      	movs	r2, #2
 8006e94:	f883 203d 	strb.w	r2, [r3, #61]	@ 0x3d

  /* Get the TIMx CR2 register value */
  tmpcr2 = htim->Instance->CR2;
 8006e98:	687b      	ldr	r3, [r7, #4]
 8006e9a:	681b      	ldr	r3, [r3, #0]
 8006e9c:	685b      	ldr	r3, [r3, #4]
 8006e9e:	60fb      	str	r3, [r7, #12]

  /* Get the TIMx SMCR register value */
  tmpsmcr = htim->Instance->SMCR;
 8006ea0:	687b      	ldr	r3, [r7, #4]
 8006ea2:	681b      	ldr	r3, [r3, #0]
 8006ea4:	689b      	ldr	r3, [r3, #8]
 8006ea6:	60bb      	str	r3, [r7, #8]

  /* Reset the MMS Bits */
  tmpcr2 &= ~TIM_CR2_MMS;
 8006ea8:	68fb      	ldr	r3, [r7, #12]
 8006eaa:	f023 0370 	bic.w	r3, r3, #112	@ 0x70
 8006eae:	60fb      	str	r3, [r7, #12]
  /* Select the TRGO source */
  tmpcr2 |=  sMasterConfig->MasterOutputTrigger;
 8006eb0:	683b      	ldr	r3, [r7, #0]
 8006eb2:	681b      	ldr	r3, [r3, #0]
 8006eb4:	68fa      	ldr	r2, [r7, #12]
 8006eb6:	4313      	orrs	r3, r2
 8006eb8:	60fb      	str	r3, [r7, #12]

  /* Update TIMx CR2 */
  htim->Instance->CR2 = tmpcr2;
 8006eba:	687b      	ldr	r3, [r7, #4]
 8006ebc:	681b      	ldr	r3, [r3, #0]
 8006ebe:	68fa      	ldr	r2, [r7, #12]
 8006ec0:	605a      	str	r2, [r3, #4]

  if (IS_TIM_SLAVE_INSTANCE(htim->Instance))
 8006ec2:	687b      	ldr	r3, [r7, #4]
 8006ec4:	681b      	ldr	r3, [r3, #0]
 8006ec6:	4a21      	ldr	r2, [pc, #132]	@ (8006f4c <HAL_TIMEx_MasterConfigSynchronization+0xdc>)
 8006ec8:	4293      	cmp	r3, r2
 8006eca:	d022      	beq.n	8006f12 <HAL_TIMEx_MasterConfigSynchronization+0xa2>
 8006ecc:	687b      	ldr	r3, [r7, #4]
 8006ece:	681b      	ldr	r3, [r3, #0]
 8006ed0:	f1b3 4f80 	cmp.w	r3, #1073741824	@ 0x40000000
 8006ed4:	d01d      	beq.n	8006f12 <HAL_TIMEx_MasterConfigSynchronization+0xa2>
 8006ed6:	687b      	ldr	r3, [r7, #4]
 8006ed8:	681b      	ldr	r3, [r3, #0]
 8006eda:	4a1d      	ldr	r2, [pc, #116]	@ (8006f50 <HAL_TIMEx_MasterConfigSynchronization+0xe0>)
 8006edc:	4293      	cmp	r3, r2
 8006ede:	d018      	beq.n	8006f12 <HAL_TIMEx_MasterConfigSynchronization+0xa2>
 8006ee0:	687b      	ldr	r3, [r7, #4]
 8006ee2:	681b      	ldr	r3, [r3, #0]
 8006ee4:	4a1b      	ldr	r2, [pc, #108]	@ (8006f54 <HAL_TIMEx_MasterConfigSynchronization+0xe4>)
 8006ee6:	4293      	cmp	r3, r2
 8006ee8:	d013      	beq.n	8006f12 <HAL_TIMEx_MasterConfigSynchronization+0xa2>
 8006eea:	687b      	ldr	r3, [r7, #4]
 8006eec:	681b      	ldr	r3, [r3, #0]
 8006eee:	4a1a      	ldr	r2, [pc, #104]	@ (8006f58 <HAL_TIMEx_MasterConfigSynchronization+0xe8>)
 8006ef0:	4293      	cmp	r3, r2
 8006ef2:	d00e      	beq.n	8006f12 <HAL_TIMEx_MasterConfigSynchronization+0xa2>
 8006ef4:	687b      	ldr	r3, [r7, #4]
 8006ef6:	681b      	ldr	r3, [r3, #0]
 8006ef8:	4a18      	ldr	r2, [pc, #96]	@ (8006f5c <HAL_TIMEx_MasterConfigSynchronization+0xec>)
 8006efa:	4293      	cmp	r3, r2
 8006efc:	d009      	beq.n	8006f12 <HAL_TIMEx_MasterConfigSynchronization+0xa2>
 8006efe:	687b      	ldr	r3, [r7, #4]
 8006f00:	681b      	ldr	r3, [r3, #0]
 8006f02:	4a17      	ldr	r2, [pc, #92]	@ (8006f60 <HAL_TIMEx_MasterConfigSynchronization+0xf0>)
 8006f04:	4293      	cmp	r3, r2
 8006f06:	d004      	beq.n	8006f12 <HAL_TIMEx_MasterConfigSynchronization+0xa2>
 8006f08:	687b      	ldr	r3, [r7, #4]
 8006f0a:	681b      	ldr	r3, [r3, #0]
 8006f0c:	4a15      	ldr	r2, [pc, #84]	@ (8006f64 <HAL_TIMEx_MasterConfigSynchronization+0xf4>)
 8006f0e:	4293      	cmp	r3, r2
 8006f10:	d10c      	bne.n	8006f2c <HAL_TIMEx_MasterConfigSynchronization+0xbc>
  {
    /* Reset the MSM Bit */
    tmpsmcr &= ~TIM_SMCR_MSM;
 8006f12:	68bb      	ldr	r3, [r7, #8]
 8006f14:	f023 0380 	bic.w	r3, r3, #128	@ 0x80
 8006f18:	60bb      	str	r3, [r7, #8]
    /* Set master mode */
    tmpsmcr |= sMasterConfig->MasterSlaveMode;
 8006f1a:	683b      	ldr	r3, [r7, #0]
 8006f1c:	685b      	ldr	r3, [r3, #4]
 8006f1e:	68ba      	ldr	r2, [r7, #8]
 8006f20:	4313      	orrs	r3, r2
 8006f22:	60bb      	str	r3, [r7, #8]

    /* Update TIMx SMCR */
    htim->Instance->SMCR = tmpsmcr;
 8006f24:	687b      	ldr	r3, [r7, #4]
 8006f26:	681b      	ldr	r3, [r3, #0]
 8006f28:	68ba      	ldr	r2, [r7, #8]
 8006f2a:	609a      	str	r2, [r3, #8]
  }

  /* Change the htim state */
  htim->State = HAL_TIM_STATE_READY;
 8006f2c:	687b      	ldr	r3, [r7, #4]
 8006f2e:	2201      	movs	r2, #1
 8006f30:	f883 203d 	strb.w	r2, [r3, #61]	@ 0x3d

  __HAL_UNLOCK(htim);
 8006f34:	687b      	ldr	r3, [r7, #4]
 8006f36:	2200      	movs	r2, #0
 8006f38:	f883 203c 	strb.w	r2, [r3, #60]	@ 0x3c

  return HAL_OK;
 8006f3c:	2300      	movs	r3, #0
}
 8006f3e:	4618      	mov	r0, r3
 8006f40:	3714      	adds	r7, #20
 8006f42:	46bd      	mov	sp, r7
 8006f44:	f85d 7b04 	ldr.w	r7, [sp], #4
 8006f48:	4770      	bx	lr
 8006f4a:	bf00      	nop
 8006f4c:	40010000 	.word	0x40010000
 8006f50:	40000400 	.word	0x40000400
 8006f54:	40000800 	.word	0x40000800
 8006f58:	40000c00 	.word	0x40000c00
 8006f5c:	40010400 	.word	0x40010400
 8006f60:	40014000 	.word	0x40014000
 8006f64:	40001800 	.word	0x40001800

08006f68 <HAL_TIMEx_CommutCallback>:
  * @brief  Commutation callback in non-blocking mode
  * @param  htim TIM handle
  * @retval None
  */
__weak void HAL_TIMEx_CommutCallback(TIM_HandleTypeDef *htim)
{
 8006f68:	b480      	push	{r7}
 8006f6a:	b083      	sub	sp, #12
 8006f6c:	af00      	add	r7, sp, #0
 8006f6e:	6078      	str	r0, [r7, #4]
  UNUSED(htim);

  /* NOTE : This function should not be modified, when the callback is needed,
            the HAL_TIMEx_CommutCallback could be implemented in the user file
   */
}
 8006f70:	bf00      	nop
 8006f72:	370c      	adds	r7, #12
 8006f74:	46bd      	mov	sp, r7
 8006f76:	f85d 7b04 	ldr.w	r7, [sp], #4
 8006f7a:	4770      	bx	lr

08006f7c <HAL_TIMEx_BreakCallback>:
  * @brief  Break detection callback in non-blocking mode
  * @param  htim TIM handle
  * @retval None
  */
__weak void HAL_TIMEx_BreakCallback(TIM_HandleTypeDef *htim)
{
 8006f7c:	b480      	push	{r7}
 8006f7e:	b083      	sub	sp, #12
 8006f80:	af00      	add	r7, sp, #0
 8006f82:	6078      	str	r0, [r7, #4]
  UNUSED(htim);

  /* NOTE : This function should not be modified, when the callback is needed,
            the HAL_TIMEx_BreakCallback could be implemented in the user file
   */
}
 8006f84:	bf00      	nop
 8006f86:	370c      	adds	r7, #12
 8006f88:	46bd      	mov	sp, r7
 8006f8a:	f85d 7b04 	ldr.w	r7, [sp], #4
 8006f8e:	4770      	bx	lr

08006f90 <MX_TouchGFX_Init>:
 8006f90:	b580      	push	{r7, lr}
 8006f92:	af00      	add	r7, sp, #0
 8006f94:	f003 fcda 	bl	800a94c <touchgfx_components_init>
 8006f98:	f003 fcae 	bl	800a8f8 <touchgfx_init>
 8006f9c:	bf00      	nop
 8006f9e:	bd80      	pop	{r7, pc}

08006fa0 <MX_TouchGFX_Process>:
 8006fa0:	b580      	push	{r7, lr}
 8006fa2:	af00      	add	r7, sp, #0
 8006fa4:	f003 fcda 	bl	800a95c <touchgfx_taskEntry>
 8006fa8:	bf00      	nop
 8006faa:	bd80      	pop	{r7, pc}

08006fac <_ZN8touchgfx12FontProviderD1Ev>:
     * @return The font with a font id of fontId.
     */
    virtual Font* getFont(FontId fontId) = 0;

    /** Finalizes an instance of the FontProvider class. */
    virtual ~FontProvider()
 8006fac:	b480      	push	{r7}
 8006fae:	b083      	sub	sp, #12
 8006fb0:	af00      	add	r7, sp, #0
 8006fb2:	6078      	str	r0, [r7, #4]
    {
 8006fb4:	4a04      	ldr	r2, [pc, #16]	@ (8006fc8 <_ZN8touchgfx12FontProviderD1Ev+0x1c>)
 8006fb6:	687b      	ldr	r3, [r7, #4]
 8006fb8:	601a      	str	r2, [r3, #0]
    }
 8006fba:	687b      	ldr	r3, [r7, #4]
 8006fbc:	4618      	mov	r0, r3
 8006fbe:	370c      	adds	r7, #12
 8006fc0:	46bd      	mov	sp, r7
 8006fc2:	f85d 7b04 	ldr.w	r7, [sp], #4
 8006fc6:	4770      	bx	lr
 8006fc8:	080228ec 	.word	0x080228ec

08006fcc <_ZN8touchgfx12FontProviderD0Ev>:
    virtual ~FontProvider()
 8006fcc:	b580      	push	{r7, lr}
 8006fce:	b082      	sub	sp, #8
 8006fd0:	af00      	add	r7, sp, #0
 8006fd2:	6078      	str	r0, [r7, #4]
    }
 8006fd4:	6878      	ldr	r0, [r7, #4]
 8006fd6:	f7ff ffe9 	bl	8006fac <_ZN8touchgfx12FontProviderD1Ev>
 8006fda:	2104      	movs	r1, #4
 8006fdc:	6878      	ldr	r0, [r7, #4]
 8006fde:	f019 fbe8 	bl	80207b2 <_ZdlPvj>
 8006fe2:	687b      	ldr	r3, [r7, #4]
 8006fe4:	4618      	mov	r0, r3
 8006fe6:	3708      	adds	r7, #8
 8006fe8:	46bd      	mov	sp, r7
 8006fea:	bd80      	pop	{r7, pc}

08006fec <_ZN23ApplicationFontProvider7getFontEt>:
#include <fonts/ApplicationFontProvider.hpp>
#include <fonts/GeneratedFont.hpp>
#include <texts/TypedTextDatabase.hpp>

touchgfx::Font* ApplicationFontProvider::getFont(touchgfx::FontId typography)
{
 8006fec:	b580      	push	{r7, lr}
 8006fee:	b082      	sub	sp, #8
 8006ff0:	af00      	add	r7, sp, #0
 8006ff2:	6078      	str	r0, [r7, #4]
 8006ff4:	460b      	mov	r3, r1
 8006ff6:	807b      	strh	r3, [r7, #2]
    switch (typography)
 8006ff8:	887b      	ldrh	r3, [r7, #2]
 8006ffa:	2b00      	cmp	r3, #0
 8006ffc:	d002      	beq.n	8007004 <_ZN23ApplicationFontProvider7getFontEt+0x18>
 8006ffe:	2b01      	cmp	r3, #1
 8007000:	d005      	beq.n	800700e <_ZN23ApplicationFontProvider7getFontEt+0x22>
 8007002:	e009      	b.n	8007018 <_ZN23ApplicationFontProvider7getFontEt+0x2c>
    {
    case Typography::DEFAULT:
        // Asap_Regular_80_4bpp
        return const_cast<touchgfx::Font*>(TypedTextDatabase::getFonts()[0]);
 8007004:	f002 fa76 	bl	80094f4 <_ZN17TypedTextDatabase8getFontsEv>
 8007008:	4603      	mov	r3, r0
 800700a:	681b      	ldr	r3, [r3, #0]
 800700c:	e005      	b.n	800701a <_ZN23ApplicationFontProvider7getFontEt+0x2e>
    case Typography::TYPOGRAPHY_00:
        // verdana_30_4bpp
        return const_cast<touchgfx::Font*>(TypedTextDatabase::getFonts()[1]);
 800700e:	f002 fa71 	bl	80094f4 <_ZN17TypedTextDatabase8getFontsEv>
 8007012:	4603      	mov	r3, r0
 8007014:	685b      	ldr	r3, [r3, #4]
 8007016:	e000      	b.n	800701a <_ZN23ApplicationFontProvider7getFontEt+0x2e>
    default:
        return 0;
 8007018:	2300      	movs	r3, #0
    }
}
 800701a:	4618      	mov	r0, r3
 800701c:	3708      	adds	r7, #8
 800701e:	46bd      	mov	sp, r7
 8007020:	bd80      	pop	{r7, pc}
	...

08007024 <_ZN23ApplicationFontProviderD1Ev>:
    static const touchgfx::FontId DEFAULT = 0;       // Asap_Regular_80_4bpp
    static const touchgfx::FontId TYPOGRAPHY_00 = 1; // verdana_30_4bpp
    static const uint16_t NUMBER_OF_FONTS = 2;
};

class ApplicationFontProvider : public touchgfx::FontProvider
 8007024:	b580      	push	{r7, lr}
 8007026:	b082      	sub	sp, #8
 8007028:	af00      	add	r7, sp, #0
 800702a:	6078      	str	r0, [r7, #4]
 800702c:	4a05      	ldr	r2, [pc, #20]	@ (8007044 <_ZN23ApplicationFontProviderD1Ev+0x20>)
 800702e:	687b      	ldr	r3, [r7, #4]
 8007030:	601a      	str	r2, [r3, #0]
 8007032:	687b      	ldr	r3, [r7, #4]
 8007034:	4618      	mov	r0, r3
 8007036:	f7ff ffb9 	bl	8006fac <_ZN8touchgfx12FontProviderD1Ev>
 800703a:	687b      	ldr	r3, [r7, #4]
 800703c:	4618      	mov	r0, r3
 800703e:	3708      	adds	r7, #8
 8007040:	46bd      	mov	sp, r7
 8007042:	bd80      	pop	{r7, pc}
 8007044:	080228d8 	.word	0x080228d8

08007048 <_ZN23ApplicationFontProviderD0Ev>:
 8007048:	b580      	push	{r7, lr}
 800704a:	b082      	sub	sp, #8
 800704c:	af00      	add	r7, sp, #0
 800704e:	6078      	str	r0, [r7, #4]
 8007050:	6878      	ldr	r0, [r7, #4]
 8007052:	f7ff ffe7 	bl	8007024 <_ZN23ApplicationFontProviderD1Ev>
 8007056:	2104      	movs	r1, #4
 8007058:	6878      	ldr	r0, [r7, #4]
 800705a:	f019 fbaa 	bl	80207b2 <_ZdlPvj>
 800705e:	687b      	ldr	r3, [r7, #4]
 8007060:	4618      	mov	r0, r3
 8007062:	3708      	adds	r7, #8
 8007064:	46bd      	mov	sp, r7
 8007066:	bd80      	pop	{r7, pc}

08007068 <_ZN8touchgfx4FontD1Ev>:
 */
class Font
{
public:
    /** Finalizes an instance of the Font class. */
    virtual ~Font()
 8007068:	b480      	push	{r7}
 800706a:	b083      	sub	sp, #12
 800706c:	af00      	add	r7, sp, #0
 800706e:	6078      	str	r0, [r7, #4]
    {
 8007070:	4a04      	ldr	r2, [pc, #16]	@ (8007084 <_ZN8touchgfx4FontD1Ev+0x1c>)
 8007072:	687b      	ldr	r3, [r7, #4]
 8007074:	601a      	str	r2, [r3, #0]
    }
 8007076:	687b      	ldr	r3, [r7, #4]
 8007078:	4618      	mov	r0, r3
 800707a:	370c      	adds	r7, #12
 800707c:	46bd      	mov	sp, r7
 800707e:	f85d 7b04 	ldr.w	r7, [sp], #4
 8007082:	4770      	bx	lr
 8007084:	08022cf4 	.word	0x08022cf4

08007088 <_ZN8touchgfx4FontD0Ev>:
    virtual ~Font()
 8007088:	b580      	push	{r7, lr}
 800708a:	b082      	sub	sp, #8
 800708c:	af00      	add	r7, sp, #0
 800708e:	6078      	str	r0, [r7, #4]
    }
 8007090:	6878      	ldr	r0, [r7, #4]
 8007092:	f7ff ffe9 	bl	8007068 <_ZN8touchgfx4FontD1Ev>
 8007096:	2114      	movs	r1, #20
 8007098:	6878      	ldr	r0, [r7, #4]
 800709a:	f019 fb8a 	bl	80207b2 <_ZdlPvj>
 800709e:	687b      	ldr	r3, [r7, #4]
 80070a0:	4618      	mov	r0, r3
 80070a2:	3708      	adds	r7, #8
 80070a4:	46bd      	mov	sp, r7
 80070a6:	bd80      	pop	{r7, pc}

080070a8 <_ZNK8touchgfx4Font8getGlyphEt>:
     *
     * @return A pointer to the glyph node or null if the glyph was not found.
     *
     * @see TextProvider::getNextLigature
     */
    virtual const GlyphNode* getGlyph(Unicode::UnicodeChar unicode) const
 80070a8:	b590      	push	{r4, r7, lr}
 80070aa:	b087      	sub	sp, #28
 80070ac:	af00      	add	r7, sp, #0
 80070ae:	6078      	str	r0, [r7, #4]
 80070b0:	460b      	mov	r3, r1
 80070b2:	807b      	strh	r3, [r7, #2]
    {
        if (unicode == 0)
 80070b4:	887b      	ldrh	r3, [r7, #2]
 80070b6:	2b00      	cmp	r3, #0
 80070b8:	d101      	bne.n	80070be <_ZNK8touchgfx4Font8getGlyphEt+0x16>
        {
            return 0;
 80070ba:	2300      	movs	r3, #0
 80070bc:	e010      	b.n	80070e0 <_ZNK8touchgfx4Font8getGlyphEt+0x38>
        }
        const uint8_t* dummyPixelDataPointer = 0;
 80070be:	2300      	movs	r3, #0
 80070c0:	613b      	str	r3, [r7, #16]
        uint8_t bitsPerPixelDummy = 0;
 80070c2:	2300      	movs	r3, #0
 80070c4:	73fb      	strb	r3, [r7, #15]
        const GlyphNode* glyph = getGlyph(unicode, dummyPixelDataPointer, bitsPerPixelDummy);
 80070c6:	687b      	ldr	r3, [r7, #4]
 80070c8:	681b      	ldr	r3, [r3, #0]
 80070ca:	3308      	adds	r3, #8
 80070cc:	681c      	ldr	r4, [r3, #0]
 80070ce:	f107 030f 	add.w	r3, r7, #15
 80070d2:	f107 0210 	add.w	r2, r7, #16
 80070d6:	8879      	ldrh	r1, [r7, #2]
 80070d8:	6878      	ldr	r0, [r7, #4]
 80070da:	47a0      	blx	r4
 80070dc:	6178      	str	r0, [r7, #20]
        return glyph;
 80070de:	697b      	ldr	r3, [r7, #20]
    }
 80070e0:	4618      	mov	r0, r3
 80070e2:	371c      	adds	r7, #28
 80070e4:	46bd      	mov	sp, r7
 80070e6:	bd90      	pop	{r4, r7, pc}

080070e8 <_ZNK8touchgfx4Font15getFallbackCharEv>:
     * used when no glyph is available for some character. If 0 (zero) is returned, there is
     * no default character.
     *
     * @return The default character for the typography in case no glyph is available.
     */
    virtual Unicode::UnicodeChar getFallbackChar() const
 80070e8:	b480      	push	{r7}
 80070ea:	b083      	sub	sp, #12
 80070ec:	af00      	add	r7, sp, #0
 80070ee:	6078      	str	r0, [r7, #4]
    {
        return fallbackCharacter;
 80070f0:	687b      	ldr	r3, [r7, #4]
 80070f2:	89db      	ldrh	r3, [r3, #14]
    }
 80070f4:	4618      	mov	r0, r3
 80070f6:	370c      	adds	r7, #12
 80070f8:	46bd      	mov	sp, r7
 80070fa:	f85d 7b04 	ldr.w	r7, [sp], #4
 80070fe:	4770      	bx	lr

08007100 <_ZNK8touchgfx4Font15getEllipsisCharEv>:
     *
     * @return The ellipsis character for the typography.
     *
     * @see TextArea::setWideTextAction
     */
    virtual Unicode::UnicodeChar getEllipsisChar() const
 8007100:	b480      	push	{r7}
 8007102:	b083      	sub	sp, #12
 8007104:	af00      	add	r7, sp, #0
 8007106:	6078      	str	r0, [r7, #4]
    {
        return ellipsisCharacter;
 8007108:	687b      	ldr	r3, [r7, #4]
 800710a:	8a1b      	ldrh	r3, [r3, #16]
    }
 800710c:	4618      	mov	r0, r3
 800710e:	370c      	adds	r7, #12
 8007110:	46bd      	mov	sp, r7
 8007112:	f85d 7b04 	ldr.w	r7, [sp], #4
 8007116:	4770      	bx	lr

08007118 <_ZNK8touchgfx4Font11getBaselineEv>:
     * @return The baseline position.
     *
     * @note It is not sufficient to allocate text areas with this height. Use
     *       getHeight for this.
     */
    FORCE_INLINE_FUNCTION virtual uint16_t getBaseline() const
 8007118:	b480      	push	{r7}
 800711a:	b083      	sub	sp, #12
 800711c:	af00      	add	r7, sp, #0
 800711e:	6078      	str	r0, [r7, #4]
    {
        return baselineHeight;
 8007120:	687b      	ldr	r3, [r7, #4]
 8007122:	88db      	ldrh	r3, [r3, #6]
    }
 8007124:	4618      	mov	r0, r3
 8007126:	370c      	adds	r7, #12
 8007128:	46bd      	mov	sp, r7
 800712a:	f85d 7b04 	ldr.w	r7, [sp], #4
 800712e:	4770      	bx	lr

08007130 <_ZNK8touchgfx4Font9getHeightEv>:
     * Returns the height of a font. The font may exceed the top by getPixelsAboveTop() or the
     * bottom by getPixelsBelowBottom.
     *
     * @return The font height.
     */
    FORCE_INLINE_FUNCTION virtual uint16_t getHeight() const
 8007130:	b480      	push	{r7}
 8007132:	b083      	sub	sp, #12
 8007134:	af00      	add	r7, sp, #0
 8007136:	6078      	str	r0, [r7, #4]
    {
        return fontHeight;
 8007138:	687b      	ldr	r3, [r7, #4]
 800713a:	889b      	ldrh	r3, [r3, #4]
    }
 800713c:	4618      	mov	r0, r3
 800713e:	370c      	adds	r7, #12
 8007140:	46bd      	mov	sp, r7
 8007142:	f85d 7b04 	ldr.w	r7, [sp], #4
 8007146:	4770      	bx	lr

08007148 <_ZNK8touchgfx4Font15getBitsPerPixelEv>:
    /**
     * Gets bits per pixel for this font.
     *
     * @return The number of bits used per pixel in this font.
     */
    FORCE_INLINE_FUNCTION virtual uint8_t getBitsPerPixel() const
 8007148:	b480      	push	{r7}
 800714a:	b083      	sub	sp, #12
 800714c:	af00      	add	r7, sp, #0
 800714e:	6078      	str	r0, [r7, #4]
    {
        return bPerPixel;
 8007150:	687b      	ldr	r3, [r7, #4]
 8007152:	7a9b      	ldrb	r3, [r3, #10]
 8007154:	f3c3 0306 	ubfx	r3, r3, #0, #7
 8007158:	b2db      	uxtb	r3, r3
    }
 800715a:	4618      	mov	r0, r3
 800715c:	370c      	adds	r7, #12
 800715e:	46bd      	mov	sp, r7
 8007160:	f85d 7b04 	ldr.w	r7, [sp], #4
 8007164:	4770      	bx	lr

08007166 <_ZNK8touchgfx4Font15getByteAlignRowEv>:
    /**
     * Are the glyphs saved with each glyph row byte aligned?
     *
     * @return True if each glyph row is stored byte aligned, false otherwise.
     */
    FORCE_INLINE_FUNCTION virtual uint8_t getByteAlignRow() const
 8007166:	b480      	push	{r7}
 8007168:	b083      	sub	sp, #12
 800716a:	af00      	add	r7, sp, #0
 800716c:	6078      	str	r0, [r7, #4]
    {
        return bAlignRow;
 800716e:	687b      	ldr	r3, [r7, #4]
 8007170:	7a9b      	ldrb	r3, [r3, #10]
 8007172:	f3c3 13c0 	ubfx	r3, r3, #7, #1
 8007176:	b2db      	uxtb	r3, r3
    }
 8007178:	4618      	mov	r0, r3
 800717a:	370c      	adds	r7, #12
 800717c:	46bd      	mov	sp, r7
 800717e:	f85d 7b04 	ldr.w	r7, [sp], #4
 8007182:	4770      	bx	lr

08007184 <_ZNK8touchgfx4Font17isVectorBasedFontEv>:
    /**
     * Returns true if this Font is vector based. Default is false.
     *
     * @return True if this Font is vector based.
     */
    virtual bool isVectorBasedFont() const
 8007184:	b480      	push	{r7}
 8007186:	b083      	sub	sp, #12
 8007188:	af00      	add	r7, sp, #0
 800718a:	6078      	str	r0, [r7, #4]
    {
        return false;
 800718c:	2300      	movs	r3, #0
    }
 800718e:	4618      	mov	r0, r3
 8007190:	370c      	adds	r7, #12
 8007192:	46bd      	mov	sp, r7
 8007194:	f85d 7b04 	ldr.w	r7, [sp], #4
 8007198:	4770      	bx	lr

0800719a <_ZNK8touchgfx4Font14getScaleFactorEv>:
    /**
     * Returns the scale factor
     *
     * @return The scale factor
     */
    virtual float getScaleFactor() const
 800719a:	b480      	push	{r7}
 800719c:	b083      	sub	sp, #12
 800719e:	af00      	add	r7, sp, #0
 80071a0:	6078      	str	r0, [r7, #4]
    {
        return 0;
 80071a2:	f04f 0300 	mov.w	r3, #0
 80071a6:	ee07 3a90 	vmov	s15, r3
    }
 80071aa:	eeb0 0a67 	vmov.f32	s0, s15
 80071ae:	370c      	adds	r7, #12
 80071b0:	46bd      	mov	sp, r7
 80071b2:	f85d 7b04 	ldr.w	r7, [sp], #4
 80071b6:	4770      	bx	lr

080071b8 <_ZN8touchgfx9ConstFontD1Ev>:
 *
 * @see Font
 *
 * @note Pure virtual class. Create an application-specific implementation of getPixelData().
 */
class ConstFont : public Font
 80071b8:	b580      	push	{r7, lr}
 80071ba:	b082      	sub	sp, #8
 80071bc:	af00      	add	r7, sp, #0
 80071be:	6078      	str	r0, [r7, #4]
 80071c0:	4a05      	ldr	r2, [pc, #20]	@ (80071d8 <_ZN8touchgfx9ConstFontD1Ev+0x20>)
 80071c2:	687b      	ldr	r3, [r7, #4]
 80071c4:	601a      	str	r2, [r3, #0]
 80071c6:	687b      	ldr	r3, [r7, #4]
 80071c8:	4618      	mov	r0, r3
 80071ca:	f7ff ff4d 	bl	8007068 <_ZN8touchgfx4FontD1Ev>
 80071ce:	687b      	ldr	r3, [r7, #4]
 80071d0:	4618      	mov	r0, r3
 80071d2:	3708      	adds	r7, #8
 80071d4:	46bd      	mov	sp, r7
 80071d6:	bd80      	pop	{r7, pc}
 80071d8:	080237dc 	.word	0x080237dc

080071dc <_ZN8touchgfx9ConstFontD0Ev>:
 80071dc:	b580      	push	{r7, lr}
 80071de:	b082      	sub	sp, #8
 80071e0:	af00      	add	r7, sp, #0
 80071e2:	6078      	str	r0, [r7, #4]
 80071e4:	6878      	ldr	r0, [r7, #4]
 80071e6:	f7ff ffe7 	bl	80071b8 <_ZN8touchgfx9ConstFontD1Ev>
 80071ea:	211c      	movs	r1, #28
 80071ec:	6878      	ldr	r0, [r7, #4]
 80071ee:	f019 fae0 	bl	80207b2 <_ZdlPvj>
 80071f2:	687b      	ldr	r3, [r7, #4]
 80071f4:	4618      	mov	r0, r3
 80071f6:	3708      	adds	r7, #8
 80071f8:	46bd      	mov	sp, r7
 80071fa:	bd80      	pop	{r7, pc}

080071fc <_ZN8touchgfx13GeneratedFontD1Ev>:

#include <touchgfx/ConstFont.hpp>

namespace touchgfx
{
class GeneratedFont : public ConstFont
 80071fc:	b580      	push	{r7, lr}
 80071fe:	b082      	sub	sp, #8
 8007200:	af00      	add	r7, sp, #0
 8007202:	6078      	str	r0, [r7, #4]
 8007204:	4a05      	ldr	r2, [pc, #20]	@ (800721c <_ZN8touchgfx13GeneratedFontD1Ev+0x20>)
 8007206:	687b      	ldr	r3, [r7, #4]
 8007208:	601a      	str	r2, [r3, #0]
 800720a:	687b      	ldr	r3, [r7, #4]
 800720c:	4618      	mov	r0, r3
 800720e:	f7ff ffd3 	bl	80071b8 <_ZN8touchgfx9ConstFontD1Ev>
 8007212:	687b      	ldr	r3, [r7, #4]
 8007214:	4618      	mov	r0, r3
 8007216:	3708      	adds	r7, #8
 8007218:	46bd      	mov	sp, r7
 800721a:	bd80      	pop	{r7, pc}
 800721c:	08022910 	.word	0x08022910

08007220 <_ZN8touchgfx13GeneratedFontD0Ev>:
 8007220:	b580      	push	{r7, lr}
 8007222:	b082      	sub	sp, #8
 8007224:	af00      	add	r7, sp, #0
 8007226:	6078      	str	r0, [r7, #4]
 8007228:	6878      	ldr	r0, [r7, #4]
 800722a:	f7ff ffe7 	bl	80071fc <_ZN8touchgfx13GeneratedFontD1Ev>
 800722e:	212c      	movs	r1, #44	@ 0x2c
 8007230:	6878      	ldr	r0, [r7, #4]
 8007232:	f019 fabe 	bl	80207b2 <_ZdlPvj>
 8007236:	687b      	ldr	r3, [r7, #4]
 8007238:	4618      	mov	r0, r3
 800723a:	3708      	adds	r7, #8
 800723c:	46bd      	mov	sp, r7
 800723e:	bd80      	pop	{r7, pc}

08007240 <_ZN8touchgfx9TypedTextD1Ev>:
        : typedTextId(id)
    {
    }

    /** Finalizes an instance of the TypedText class. */
    virtual ~TypedText()
 8007240:	b480      	push	{r7}
 8007242:	b083      	sub	sp, #12
 8007244:	af00      	add	r7, sp, #0
 8007246:	6078      	str	r0, [r7, #4]
    {
 8007248:	4a04      	ldr	r2, [pc, #16]	@ (800725c <_ZN8touchgfx9TypedTextD1Ev+0x1c>)
 800724a:	687b      	ldr	r3, [r7, #4]
 800724c:	601a      	str	r2, [r3, #0]
    }
 800724e:	687b      	ldr	r3, [r7, #4]
 8007250:	4618      	mov	r0, r3
 8007252:	370c      	adds	r7, #12
 8007254:	46bd      	mov	sp, r7
 8007256:	f85d 7b04 	ldr.w	r7, [sp], #4
 800725a:	4770      	bx	lr
 800725c:	08022900 	.word	0x08022900

08007260 <_ZN8touchgfx9TypedTextD0Ev>:
    virtual ~TypedText()
 8007260:	b580      	push	{r7, lr}
 8007262:	b082      	sub	sp, #8
 8007264:	af00      	add	r7, sp, #0
 8007266:	6078      	str	r0, [r7, #4]
    }
 8007268:	6878      	ldr	r0, [r7, #4]
 800726a:	f7ff ffe9 	bl	8007240 <_ZN8touchgfx9TypedTextD1Ev>
 800726e:	2108      	movs	r1, #8
 8007270:	6878      	ldr	r0, [r7, #4]
 8007272:	f019 fa9e 	bl	80207b2 <_ZdlPvj>
 8007276:	687b      	ldr	r3, [r7, #4]
 8007278:	4618      	mov	r0, r3
 800727a:	3708      	adds	r7, #8
 800727c:	46bd      	mov	sp, r7
 800727e:	bd80      	pop	{r7, pc}

08007280 <_ZNK8touchgfx13GeneratedFont12getGSUBTableEv>:

    virtual const uint8_t* getPixelData(const GlyphNode* glyph) const;

    virtual int8_t getKerning(Unicode::UnicodeChar prevChar, const GlyphNode* glyph) const;

    virtual const uint16_t* getGSUBTable() const
 8007280:	b480      	push	{r7}
 8007282:	b083      	sub	sp, #12
 8007284:	af00      	add	r7, sp, #0
 8007286:	6078      	str	r0, [r7, #4]
    {
        return gsubTable;
 8007288:	687b      	ldr	r3, [r7, #4]
 800728a:	6a5b      	ldr	r3, [r3, #36]	@ 0x24
    }
 800728c:	4618      	mov	r0, r3
 800728e:	370c      	adds	r7, #12
 8007290:	46bd      	mov	sp, r7
 8007292:	f85d 7b04 	ldr.w	r7, [sp], #4
 8007296:	4770      	bx	lr

08007298 <_ZNK8touchgfx13GeneratedFont23getContextualFormsTableEv>:

    virtual const FontContextualFormsTable* getContextualFormsTable() const
 8007298:	b480      	push	{r7}
 800729a:	b083      	sub	sp, #12
 800729c:	af00      	add	r7, sp, #0
 800729e:	6078      	str	r0, [r7, #4]
    {
        return arabicTable;
 80072a0:	687b      	ldr	r3, [r7, #4]
 80072a2:	6a9b      	ldr	r3, [r3, #40]	@ 0x28
    }
 80072a4:	4618      	mov	r0, r3
 80072a6:	370c      	adds	r7, #12
 80072a8:	46bd      	mov	sp, r7
 80072aa:	f85d 7b04 	ldr.w	r7, [sp], #4
 80072ae:	4770      	bx	lr

080072b0 <_ZN8touchgfx13GeneratedFontC1EPKNS_9GlyphNodeEttthhhhhhPKPKhPKNS_11KerningNodeEttPKtPKNS_24FontContextualFormsTableE>:
#include <fonts/GeneratedFont.hpp>
#include <math.h>

namespace touchgfx
{
GeneratedFont::GeneratedFont(const GlyphNode* glyphs, uint16_t numGlyphs, uint16_t height, uint16_t baseline, uint8_t pixAboveTop, uint8_t pixBelowBottom, uint8_t bitsPerPixel, uint8_t byteAlignRow, uint8_t maxLeft, uint8_t maxRight, const uint8_t* const* glyphDataInternalFlash, const KerningNode* kerningList, const Unicode::UnicodeChar fallbackChar, const Unicode::UnicodeChar ellipsisChar, const uint16_t* const gsubData, const FontContextualFormsTable* formsTable)
 80072b0:	b580      	push	{r7, lr}
 80072b2:	b08e      	sub	sp, #56	@ 0x38
 80072b4:	af0a      	add	r7, sp, #40	@ 0x28
 80072b6:	60f8      	str	r0, [r7, #12]
 80072b8:	60b9      	str	r1, [r7, #8]
 80072ba:	4611      	mov	r1, r2
 80072bc:	461a      	mov	r2, r3
 80072be:	460b      	mov	r3, r1
 80072c0:	80fb      	strh	r3, [r7, #6]
 80072c2:	4613      	mov	r3, r2
 80072c4:	80bb      	strh	r3, [r7, #4]
    : ConstFont(glyphs, numGlyphs, height, baseline, pixAboveTop, pixBelowBottom, bitsPerPixel, byteAlignRow, maxLeft, maxRight, fallbackChar, ellipsisChar),
      glyphData(glyphDataInternalFlash),
      kerningData(kerningList),
      gsubTable(gsubData),
      arabicTable(formsTable)
 80072c6:	68f8      	ldr	r0, [r7, #12]
 80072c8:	88b9      	ldrh	r1, [r7, #4]
 80072ca:	88fa      	ldrh	r2, [r7, #6]
 80072cc:	f8b7 3040 	ldrh.w	r3, [r7, #64]	@ 0x40
 80072d0:	9308      	str	r3, [sp, #32]
 80072d2:	8fbb      	ldrh	r3, [r7, #60]	@ 0x3c
 80072d4:	9307      	str	r3, [sp, #28]
 80072d6:	f897 3030 	ldrb.w	r3, [r7, #48]	@ 0x30
 80072da:	9306      	str	r3, [sp, #24]
 80072dc:	f897 302c 	ldrb.w	r3, [r7, #44]	@ 0x2c
 80072e0:	9305      	str	r3, [sp, #20]
 80072e2:	f897 3028 	ldrb.w	r3, [r7, #40]	@ 0x28
 80072e6:	9304      	str	r3, [sp, #16]
 80072e8:	f897 3024 	ldrb.w	r3, [r7, #36]	@ 0x24
 80072ec:	9303      	str	r3, [sp, #12]
 80072ee:	f897 3020 	ldrb.w	r3, [r7, #32]
 80072f2:	9302      	str	r3, [sp, #8]
 80072f4:	7f3b      	ldrb	r3, [r7, #28]
 80072f6:	9301      	str	r3, [sp, #4]
 80072f8:	8b3b      	ldrh	r3, [r7, #24]
 80072fa:	9300      	str	r3, [sp, #0]
 80072fc:	460b      	mov	r3, r1
 80072fe:	68b9      	ldr	r1, [r7, #8]
 8007300:	f009 f82a 	bl	8010358 <_ZN8touchgfx9ConstFontC1EPKNS_9GlyphNodeEttthhhhhhtt>
 8007304:	4a09      	ldr	r2, [pc, #36]	@ (800732c <_ZN8touchgfx13GeneratedFontC1EPKNS_9GlyphNodeEttthhhhhhPKPKhPKNS_11KerningNodeEttPKtPKNS_24FontContextualFormsTableE+0x7c>)
 8007306:	68fb      	ldr	r3, [r7, #12]
 8007308:	601a      	str	r2, [r3, #0]
      glyphData(glyphDataInternalFlash),
 800730a:	68fb      	ldr	r3, [r7, #12]
 800730c:	6b7a      	ldr	r2, [r7, #52]	@ 0x34
 800730e:	61da      	str	r2, [r3, #28]
      kerningData(kerningList),
 8007310:	68fb      	ldr	r3, [r7, #12]
 8007312:	6bba      	ldr	r2, [r7, #56]	@ 0x38
 8007314:	621a      	str	r2, [r3, #32]
      gsubTable(gsubData),
 8007316:	68fb      	ldr	r3, [r7, #12]
 8007318:	6c7a      	ldr	r2, [r7, #68]	@ 0x44
 800731a:	625a      	str	r2, [r3, #36]	@ 0x24
      arabicTable(formsTable)
 800731c:	68fb      	ldr	r3, [r7, #12]
 800731e:	6cba      	ldr	r2, [r7, #72]	@ 0x48
 8007320:	629a      	str	r2, [r3, #40]	@ 0x28
{
}
 8007322:	68fb      	ldr	r3, [r7, #12]
 8007324:	4618      	mov	r0, r3
 8007326:	3710      	adds	r7, #16
 8007328:	46bd      	mov	sp, r7
 800732a:	bd80      	pop	{r7, pc}
 800732c:	08022910 	.word	0x08022910

08007330 <_ZNK8touchgfx13GeneratedFont12getPixelDataEPKNS_9GlyphNodeE>:

const uint8_t* GeneratedFont::getPixelData(const GlyphNode* glyph) const
{
 8007330:	b480      	push	{r7}
 8007332:	b085      	sub	sp, #20
 8007334:	af00      	add	r7, sp, #0
 8007336:	6078      	str	r0, [r7, #4]
 8007338:	6039      	str	r1, [r7, #0]
    const uint8_t* const* table = (const uint8_t* const*)glyphData;
 800733a:	687b      	ldr	r3, [r7, #4]
 800733c:	69db      	ldr	r3, [r3, #28]
 800733e:	60fb      	str	r3, [r7, #12]
    return &(table[glyph->unicode / 2048][glyph->dataOffset]);
 8007340:	683b      	ldr	r3, [r7, #0]
 8007342:	889b      	ldrh	r3, [r3, #4]
 8007344:	0adb      	lsrs	r3, r3, #11
 8007346:	b29b      	uxth	r3, r3
 8007348:	009b      	lsls	r3, r3, #2
 800734a:	68fa      	ldr	r2, [r7, #12]
 800734c:	4413      	add	r3, r2
 800734e:	681a      	ldr	r2, [r3, #0]
 8007350:	683b      	ldr	r3, [r7, #0]
 8007352:	681b      	ldr	r3, [r3, #0]
 8007354:	4413      	add	r3, r2
}
 8007356:	4618      	mov	r0, r3
 8007358:	3714      	adds	r7, #20
 800735a:	46bd      	mov	sp, r7
 800735c:	f85d 7b04 	ldr.w	r7, [sp], #4
 8007360:	4770      	bx	lr

08007362 <_ZNK8touchgfx13GeneratedFont10getKerningEtPKNS_9GlyphNodeE>:

int8_t GeneratedFont::getKerning(Unicode::UnicodeChar prevChar, const GlyphNode* glyph) const
{
 8007362:	b480      	push	{r7}
 8007364:	b089      	sub	sp, #36	@ 0x24
 8007366:	af00      	add	r7, sp, #0
 8007368:	60f8      	str	r0, [r7, #12]
 800736a:	460b      	mov	r3, r1
 800736c:	607a      	str	r2, [r7, #4]
 800736e:	817b      	strh	r3, [r7, #10]
    if (!glyph || glyph->kerningTableSize == 0)
 8007370:	687b      	ldr	r3, [r7, #4]
 8007372:	2b00      	cmp	r3, #0
 8007374:	d003      	beq.n	800737e <_ZNK8touchgfx13GeneratedFont10getKerningEtPKNS_9GlyphNodeE+0x1c>
 8007376:	687b      	ldr	r3, [r7, #4]
 8007378:	7b1b      	ldrb	r3, [r3, #12]
 800737a:	2b00      	cmp	r3, #0
 800737c:	d101      	bne.n	8007382 <_ZNK8touchgfx13GeneratedFont10getKerningEtPKNS_9GlyphNodeE+0x20>
    {
        return 0;
 800737e:	2300      	movs	r3, #0
 8007380:	e031      	b.n	80073e6 <_ZNK8touchgfx13GeneratedFont10getKerningEtPKNS_9GlyphNodeE+0x84>
    }

    const KerningNode* kerndata = kerningData + glyph->kerningTablePos();
 8007382:	68fb      	ldr	r3, [r7, #12]
 8007384:	6a1a      	ldr	r2, [r3, #32]
 8007386:	687b      	ldr	r3, [r7, #4]
 8007388:	617b      	str	r3, [r7, #20]
        return ((flags & GLYPH_DATA_KERNINGTABLEPOS_BIT8_10) << 8) | _kerningTablePos;
 800738a:	697b      	ldr	r3, [r7, #20]
 800738c:	7b5b      	ldrb	r3, [r3, #13]
 800738e:	021b      	lsls	r3, r3, #8
 8007390:	b21b      	sxth	r3, r3
 8007392:	f403 63e0 	and.w	r3, r3, #1792	@ 0x700
 8007396:	b219      	sxth	r1, r3
 8007398:	697b      	ldr	r3, [r7, #20]
 800739a:	7adb      	ldrb	r3, [r3, #11]
 800739c:	b21b      	sxth	r3, r3
 800739e:	430b      	orrs	r3, r1
 80073a0:	b21b      	sxth	r3, r3
 80073a2:	b29b      	uxth	r3, r3
 80073a4:	009b      	lsls	r3, r3, #2
 80073a6:	4413      	add	r3, r2
 80073a8:	61fb      	str	r3, [r7, #28]
    for (uint16_t i = glyph->kerningTableSize; i > 0; i--, kerndata++)
 80073aa:	687b      	ldr	r3, [r7, #4]
 80073ac:	7b1b      	ldrb	r3, [r3, #12]
 80073ae:	837b      	strh	r3, [r7, #26]
 80073b0:	e013      	b.n	80073da <_ZNK8touchgfx13GeneratedFont10getKerningEtPKNS_9GlyphNodeE+0x78>
    {
        if (prevChar == kerndata->unicodePrevChar)
 80073b2:	69fb      	ldr	r3, [r7, #28]
 80073b4:	881b      	ldrh	r3, [r3, #0]
 80073b6:	897a      	ldrh	r2, [r7, #10]
 80073b8:	429a      	cmp	r2, r3
 80073ba:	d103      	bne.n	80073c4 <_ZNK8touchgfx13GeneratedFont10getKerningEtPKNS_9GlyphNodeE+0x62>
        {
            return kerndata->distance;
 80073bc:	69fb      	ldr	r3, [r7, #28]
 80073be:	f993 3002 	ldrsb.w	r3, [r3, #2]
 80073c2:	e010      	b.n	80073e6 <_ZNK8touchgfx13GeneratedFont10getKerningEtPKNS_9GlyphNodeE+0x84>
        }
        if (prevChar < kerndata->unicodePrevChar)
 80073c4:	69fb      	ldr	r3, [r7, #28]
 80073c6:	881b      	ldrh	r3, [r3, #0]
 80073c8:	897a      	ldrh	r2, [r7, #10]
 80073ca:	429a      	cmp	r2, r3
 80073cc:	d309      	bcc.n	80073e2 <_ZNK8touchgfx13GeneratedFont10getKerningEtPKNS_9GlyphNodeE+0x80>
    for (uint16_t i = glyph->kerningTableSize; i > 0; i--, kerndata++)
 80073ce:	8b7b      	ldrh	r3, [r7, #26]
 80073d0:	3b01      	subs	r3, #1
 80073d2:	837b      	strh	r3, [r7, #26]
 80073d4:	69fb      	ldr	r3, [r7, #28]
 80073d6:	3304      	adds	r3, #4
 80073d8:	61fb      	str	r3, [r7, #28]
 80073da:	8b7b      	ldrh	r3, [r7, #26]
 80073dc:	2b00      	cmp	r3, #0
 80073de:	d1e8      	bne.n	80073b2 <_ZNK8touchgfx13GeneratedFont10getKerningEtPKNS_9GlyphNodeE+0x50>
 80073e0:	e000      	b.n	80073e4 <_ZNK8touchgfx13GeneratedFont10getKerningEtPKNS_9GlyphNodeE+0x82>
        {
            break;
 80073e2:	bf00      	nop
        }
    }
    return 0;
 80073e4:	2300      	movs	r3, #0
}
 80073e6:	4618      	mov	r0, r3
 80073e8:	3724      	adds	r7, #36	@ 0x24
 80073ea:	46bd      	mov	sp, r7
 80073ec:	f85d 7b04 	ldr.w	r7, [sp], #4
 80073f0:	4770      	bx	lr
	...

080073f4 <__tcf_0>:
KEEP extern const touchgfx::KerningNode kerning_Asap_Regular_80_4bpp[] FONT_KERNING_LOCATION_FLASH_ATTRIBUTE;
touchgfx::GeneratedFont& getFont_Asap_Regular_80_4bpp();

touchgfx::GeneratedFont& getFont_Asap_Regular_80_4bpp()
{
    static touchgfx::GeneratedFont Asap_Regular_80_4bpp(glyphs_Asap_Regular_80_4bpp, 10, 80, 80, 0, 0, 4, 1, 0, 0, unicodes_Asap_Regular_80_4bpp, kerning_Asap_Regular_80_4bpp, 0, 0, 0, 0);
 80073f4:	b580      	push	{r7, lr}
 80073f6:	af00      	add	r7, sp, #0
 80073f8:	4801      	ldr	r0, [pc, #4]	@ (8007400 <__tcf_0+0xc>)
 80073fa:	f7ff feff 	bl	80071fc <_ZN8touchgfx13GeneratedFontD1Ev>
 80073fe:	bd80      	pop	{r7, pc}
 8007400:	200005b8 	.word	0x200005b8

08007404 <_Z28getFont_Asap_Regular_80_4bppv>:
{
 8007404:	b580      	push	{r7, lr}
 8007406:	b08e      	sub	sp, #56	@ 0x38
 8007408:	af0e      	add	r7, sp, #56	@ 0x38
    static touchgfx::GeneratedFont Asap_Regular_80_4bpp(glyphs_Asap_Regular_80_4bpp, 10, 80, 80, 0, 0, 4, 1, 0, 0, unicodes_Asap_Regular_80_4bpp, kerning_Asap_Regular_80_4bpp, 0, 0, 0, 0);
 800740a:	4b21      	ldr	r3, [pc, #132]	@ (8007490 <_Z28getFont_Asap_Regular_80_4bppv+0x8c>)
 800740c:	681b      	ldr	r3, [r3, #0]
 800740e:	f3bf 8f5b 	dmb	ish
 8007412:	f003 0301 	and.w	r3, r3, #1
 8007416:	2b00      	cmp	r3, #0
 8007418:	bf0c      	ite	eq
 800741a:	2301      	moveq	r3, #1
 800741c:	2300      	movne	r3, #0
 800741e:	b2db      	uxtb	r3, r3
 8007420:	2b00      	cmp	r3, #0
 8007422:	d030      	beq.n	8007486 <_Z28getFont_Asap_Regular_80_4bppv+0x82>
 8007424:	481a      	ldr	r0, [pc, #104]	@ (8007490 <_Z28getFont_Asap_Regular_80_4bppv+0x8c>)
 8007426:	f019 f9c6 	bl	80207b6 <__cxa_guard_acquire>
 800742a:	4603      	mov	r3, r0
 800742c:	2b00      	cmp	r3, #0
 800742e:	bf14      	ite	ne
 8007430:	2301      	movne	r3, #1
 8007432:	2300      	moveq	r3, #0
 8007434:	b2db      	uxtb	r3, r3
 8007436:	2b00      	cmp	r3, #0
 8007438:	d025      	beq.n	8007486 <_Z28getFont_Asap_Regular_80_4bppv+0x82>
 800743a:	2300      	movs	r3, #0
 800743c:	930c      	str	r3, [sp, #48]	@ 0x30
 800743e:	2300      	movs	r3, #0
 8007440:	930b      	str	r3, [sp, #44]	@ 0x2c
 8007442:	2300      	movs	r3, #0
 8007444:	930a      	str	r3, [sp, #40]	@ 0x28
 8007446:	2300      	movs	r3, #0
 8007448:	9309      	str	r3, [sp, #36]	@ 0x24
 800744a:	4b12      	ldr	r3, [pc, #72]	@ (8007494 <_Z28getFont_Asap_Regular_80_4bppv+0x90>)
 800744c:	9308      	str	r3, [sp, #32]
 800744e:	4b12      	ldr	r3, [pc, #72]	@ (8007498 <_Z28getFont_Asap_Regular_80_4bppv+0x94>)
 8007450:	9307      	str	r3, [sp, #28]
 8007452:	2300      	movs	r3, #0
 8007454:	9306      	str	r3, [sp, #24]
 8007456:	2300      	movs	r3, #0
 8007458:	9305      	str	r3, [sp, #20]
 800745a:	2301      	movs	r3, #1
 800745c:	9304      	str	r3, [sp, #16]
 800745e:	2304      	movs	r3, #4
 8007460:	9303      	str	r3, [sp, #12]
 8007462:	2300      	movs	r3, #0
 8007464:	9302      	str	r3, [sp, #8]
 8007466:	2300      	movs	r3, #0
 8007468:	9301      	str	r3, [sp, #4]
 800746a:	2350      	movs	r3, #80	@ 0x50
 800746c:	9300      	str	r3, [sp, #0]
 800746e:	2350      	movs	r3, #80	@ 0x50
 8007470:	220a      	movs	r2, #10
 8007472:	490a      	ldr	r1, [pc, #40]	@ (800749c <_Z28getFont_Asap_Regular_80_4bppv+0x98>)
 8007474:	480a      	ldr	r0, [pc, #40]	@ (80074a0 <_Z28getFont_Asap_Regular_80_4bppv+0x9c>)
 8007476:	f7ff ff1b 	bl	80072b0 <_ZN8touchgfx13GeneratedFontC1EPKNS_9GlyphNodeEttthhhhhhPKPKhPKNS_11KerningNodeEttPKtPKNS_24FontContextualFormsTableE>
 800747a:	480a      	ldr	r0, [pc, #40]	@ (80074a4 <_Z28getFont_Asap_Regular_80_4bppv+0xa0>)
 800747c:	f019 f9e6 	bl	802084c <atexit>
 8007480:	4803      	ldr	r0, [pc, #12]	@ (8007490 <_Z28getFont_Asap_Regular_80_4bppv+0x8c>)
 8007482:	f019 f9a4 	bl	80207ce <__cxa_guard_release>
    return Asap_Regular_80_4bpp;
 8007486:	4b06      	ldr	r3, [pc, #24]	@ (80074a0 <_Z28getFont_Asap_Regular_80_4bppv+0x9c>)
}
 8007488:	4618      	mov	r0, r3
 800748a:	46bd      	mov	sp, r7
 800748c:	bd80      	pop	{r7, pc}
 800748e:	bf00      	nop
 8007490:	200005e4 	.word	0x200005e4
 8007494:	08027340 	.word	0x08027340
 8007498:	08027354 	.word	0x08027354
 800749c:	0802719c 	.word	0x0802719c
 80074a0:	200005b8 	.word	0x200005b8
 80074a4:	080073f5 	.word	0x080073f5

080074a8 <__tcf_0>:
KEEP extern const touchgfx::KerningNode kerning_verdana_30_4bpp[] FONT_KERNING_LOCATION_FLASH_ATTRIBUTE;
touchgfx::GeneratedFont& getFont_verdana_30_4bpp();

touchgfx::GeneratedFont& getFont_verdana_30_4bpp()
{
    static touchgfx::GeneratedFont verdana_30_4bpp(glyphs_verdana_30_4bpp, 20, 30, 30, 0, 0, 4, 1, 0, 0, unicodes_verdana_30_4bpp, kerning_verdana_30_4bpp, 63, 0, 0, 0);
 80074a8:	b580      	push	{r7, lr}
 80074aa:	af00      	add	r7, sp, #0
 80074ac:	4801      	ldr	r0, [pc, #4]	@ (80074b4 <__tcf_0+0xc>)
 80074ae:	f7ff fea5 	bl	80071fc <_ZN8touchgfx13GeneratedFontD1Ev>
 80074b2:	bd80      	pop	{r7, pc}
 80074b4:	200005e8 	.word	0x200005e8

080074b8 <_Z23getFont_verdana_30_4bppv>:
{
 80074b8:	b580      	push	{r7, lr}
 80074ba:	b08e      	sub	sp, #56	@ 0x38
 80074bc:	af0e      	add	r7, sp, #56	@ 0x38
    static touchgfx::GeneratedFont verdana_30_4bpp(glyphs_verdana_30_4bpp, 20, 30, 30, 0, 0, 4, 1, 0, 0, unicodes_verdana_30_4bpp, kerning_verdana_30_4bpp, 63, 0, 0, 0);
 80074be:	4b21      	ldr	r3, [pc, #132]	@ (8007544 <_Z23getFont_verdana_30_4bppv+0x8c>)
 80074c0:	681b      	ldr	r3, [r3, #0]
 80074c2:	f3bf 8f5b 	dmb	ish
 80074c6:	f003 0301 	and.w	r3, r3, #1
 80074ca:	2b00      	cmp	r3, #0
 80074cc:	bf0c      	ite	eq
 80074ce:	2301      	moveq	r3, #1
 80074d0:	2300      	movne	r3, #0
 80074d2:	b2db      	uxtb	r3, r3
 80074d4:	2b00      	cmp	r3, #0
 80074d6:	d030      	beq.n	800753a <_Z23getFont_verdana_30_4bppv+0x82>
 80074d8:	481a      	ldr	r0, [pc, #104]	@ (8007544 <_Z23getFont_verdana_30_4bppv+0x8c>)
 80074da:	f019 f96c 	bl	80207b6 <__cxa_guard_acquire>
 80074de:	4603      	mov	r3, r0
 80074e0:	2b00      	cmp	r3, #0
 80074e2:	bf14      	ite	ne
 80074e4:	2301      	movne	r3, #1
 80074e6:	2300      	moveq	r3, #0
 80074e8:	b2db      	uxtb	r3, r3
 80074ea:	2b00      	cmp	r3, #0
 80074ec:	d025      	beq.n	800753a <_Z23getFont_verdana_30_4bppv+0x82>
 80074ee:	2300      	movs	r3, #0
 80074f0:	930c      	str	r3, [sp, #48]	@ 0x30
 80074f2:	2300      	movs	r3, #0
 80074f4:	930b      	str	r3, [sp, #44]	@ 0x2c
 80074f6:	2300      	movs	r3, #0
 80074f8:	930a      	str	r3, [sp, #40]	@ 0x28
 80074fa:	233f      	movs	r3, #63	@ 0x3f
 80074fc:	9309      	str	r3, [sp, #36]	@ 0x24
 80074fe:	4b12      	ldr	r3, [pc, #72]	@ (8007548 <_Z23getFont_verdana_30_4bppv+0x90>)
 8007500:	9308      	str	r3, [sp, #32]
 8007502:	4b12      	ldr	r3, [pc, #72]	@ (800754c <_Z23getFont_verdana_30_4bppv+0x94>)
 8007504:	9307      	str	r3, [sp, #28]
 8007506:	2300      	movs	r3, #0
 8007508:	9306      	str	r3, [sp, #24]
 800750a:	2300      	movs	r3, #0
 800750c:	9305      	str	r3, [sp, #20]
 800750e:	2301      	movs	r3, #1
 8007510:	9304      	str	r3, [sp, #16]
 8007512:	2304      	movs	r3, #4
 8007514:	9303      	str	r3, [sp, #12]
 8007516:	2300      	movs	r3, #0
 8007518:	9302      	str	r3, [sp, #8]
 800751a:	2300      	movs	r3, #0
 800751c:	9301      	str	r3, [sp, #4]
 800751e:	231e      	movs	r3, #30
 8007520:	9300      	str	r3, [sp, #0]
 8007522:	231e      	movs	r3, #30
 8007524:	2214      	movs	r2, #20
 8007526:	490a      	ldr	r1, [pc, #40]	@ (8007550 <_Z23getFont_verdana_30_4bppv+0x98>)
 8007528:	480a      	ldr	r0, [pc, #40]	@ (8007554 <_Z23getFont_verdana_30_4bppv+0x9c>)
 800752a:	f7ff fec1 	bl	80072b0 <_ZN8touchgfx13GeneratedFontC1EPKNS_9GlyphNodeEttthhhhhhPKPKhPKNS_11KerningNodeEttPKtPKNS_24FontContextualFormsTableE>
 800752e:	480a      	ldr	r0, [pc, #40]	@ (8007558 <_Z23getFont_verdana_30_4bppv+0xa0>)
 8007530:	f019 f98c 	bl	802084c <atexit>
 8007534:	4803      	ldr	r0, [pc, #12]	@ (8007544 <_Z23getFont_verdana_30_4bppv+0x8c>)
 8007536:	f019 f94a 	bl	80207ce <__cxa_guard_release>
    return verdana_30_4bpp;
 800753a:	4b06      	ldr	r3, [pc, #24]	@ (8007554 <_Z23getFont_verdana_30_4bppv+0x9c>)
}
 800753c:	4618      	mov	r0, r3
 800753e:	46bd      	mov	sp, r7
 8007540:	bd80      	pop	{r7, pc}
 8007542:	bf00      	nop
 8007544:	20000614 	.word	0x20000614
 8007548:	08027344 	.word	0x08027344
 800754c:	08027358 	.word	0x08027358
 8007550:	08027228 	.word	0x08027228
 8007554:	200005e8 	.word	0x200005e8
 8007558:	080074a9 	.word	0x080074a9

0800755c <_ZnwjPv>:
#endif // __cpp_sized_deallocation
#endif // __cpp_aligned_new

// Default placement versions of operator new.
_GLIBCXX_NODISCARD inline void* operator new(std::size_t, void* __p) _GLIBCXX_USE_NOEXCEPT
{ return __p; }
 800755c:	b480      	push	{r7}
 800755e:	b083      	sub	sp, #12
 8007560:	af00      	add	r7, sp, #0
 8007562:	6078      	str	r0, [r7, #4]
 8007564:	6039      	str	r1, [r7, #0]
 8007566:	683b      	ldr	r3, [r7, #0]
 8007568:	4618      	mov	r0, r3
 800756a:	370c      	adds	r7, #12
 800756c:	46bd      	mov	sp, r7
 800756e:	f85d 7b04 	ldr.w	r7, [sp], #4
 8007572:	4770      	bx	lr

08007574 <_ZN8touchgfx15UIEventListener16handleClickEventERKNS_10ClickEventE>:
     * This handler is invoked when a mouse click or display touch event has been detected
     * by the system.
     *
     * @param  event The event data.
     */
    virtual void handleClickEvent(const ClickEvent& event)
 8007574:	b480      	push	{r7}
 8007576:	b083      	sub	sp, #12
 8007578:	af00      	add	r7, sp, #0
 800757a:	6078      	str	r0, [r7, #4]
 800757c:	6039      	str	r1, [r7, #0]
    {
        (void)event; // Unused variable
    }
 800757e:	bf00      	nop
 8007580:	370c      	adds	r7, #12
 8007582:	46bd      	mov	sp, r7
 8007584:	f85d 7b04 	ldr.w	r7, [sp], #4
 8007588:	4770      	bx	lr

0800758a <_ZN8touchgfx15UIEventListener15handleDragEventERKNS_9DragEventE>:
    /**
     * This handler is invoked when a drag event has been detected by the system.
     *
     * @param  event The event data.
     */
    virtual void handleDragEvent(const DragEvent& event)
 800758a:	b480      	push	{r7}
 800758c:	b083      	sub	sp, #12
 800758e:	af00      	add	r7, sp, #0
 8007590:	6078      	str	r0, [r7, #4]
 8007592:	6039      	str	r1, [r7, #0]
    {
        (void)event; // Unused variable
    }
 8007594:	bf00      	nop
 8007596:	370c      	adds	r7, #12
 8007598:	46bd      	mov	sp, r7
 800759a:	f85d 7b04 	ldr.w	r7, [sp], #4
 800759e:	4770      	bx	lr

080075a0 <_ZN8touchgfx15UIEventListener18handleGestureEventERKNS_12GestureEventE>:
    /**
     * This handler is invoked when a gesture event has been detected by the system.
     *
     * @param  event The event data.
     */
    virtual void handleGestureEvent(const GestureEvent& event)
 80075a0:	b480      	push	{r7}
 80075a2:	b083      	sub	sp, #12
 80075a4:	af00      	add	r7, sp, #0
 80075a6:	6078      	str	r0, [r7, #4]
 80075a8:	6039      	str	r1, [r7, #0]
    {
        (void)event; // Unused variable
    }
 80075aa:	bf00      	nop
 80075ac:	370c      	adds	r7, #12
 80075ae:	46bd      	mov	sp, r7
 80075b0:	f85d 7b04 	ldr.w	r7, [sp], #4
 80075b4:	4770      	bx	lr

080075b6 <_ZN8touchgfx15UIEventListener14handleKeyEventEh>:
    /**
     * This handler is invoked when a key (or button) event has been detected by the system.
     *
     * @param  c The key or button pressed.
     */
    virtual void handleKeyEvent(uint8_t c)
 80075b6:	b480      	push	{r7}
 80075b8:	b083      	sub	sp, #12
 80075ba:	af00      	add	r7, sp, #0
 80075bc:	6078      	str	r0, [r7, #4]
 80075be:	460b      	mov	r3, r1
 80075c0:	70fb      	strb	r3, [r7, #3]
    {
        (void)c; // Unused variable
    }
 80075c2:	bf00      	nop
 80075c4:	370c      	adds	r7, #12
 80075c6:	46bd      	mov	sp, r7
 80075c8:	f85d 7b04 	ldr.w	r7, [sp], #4
 80075cc:	4770      	bx	lr

080075ce <_ZN8touchgfx15UIEventListener15handleTickEventEv>:

    /**
     * This handler is invoked when a system tick event has been generated. The system tick
     * period is configured in the HAL.
     */
    virtual void handleTickEvent()
 80075ce:	b480      	push	{r7}
 80075d0:	b083      	sub	sp, #12
 80075d2:	af00      	add	r7, sp, #0
 80075d4:	6078      	str	r0, [r7, #4]
    {
    }
 80075d6:	bf00      	nop
 80075d8:	370c      	adds	r7, #12
 80075da:	46bd      	mov	sp, r7
 80075dc:	f85d 7b04 	ldr.w	r7, [sp], #4
 80075e0:	4770      	bx	lr

080075e2 <_ZN8touchgfx15UIEventListener29handlePendingScreenTransitionEv>:

    /** This handler is invoked when a change screen event is pending. */
    virtual void handlePendingScreenTransition()
 80075e2:	b480      	push	{r7}
 80075e4:	b083      	sub	sp, #12
 80075e6:	af00      	add	r7, sp, #0
 80075e8:	6078      	str	r0, [r7, #4]
    {
    }
 80075ea:	bf00      	nop
 80075ec:	370c      	adds	r7, #12
 80075ee:	46bd      	mov	sp, r7
 80075f0:	f85d 7b04 	ldr.w	r7, [sp], #4
 80075f4:	4770      	bx	lr
	...

080075f8 <_ZN8touchgfx15UIEventListenerD1Ev>:

    /** Finalizes an instance of the UIEventListener class. */
    virtual ~UIEventListener()
 80075f8:	b480      	push	{r7}
 80075fa:	b083      	sub	sp, #12
 80075fc:	af00      	add	r7, sp, #0
 80075fe:	6078      	str	r0, [r7, #4]
    {
 8007600:	4a04      	ldr	r2, [pc, #16]	@ (8007614 <_ZN8touchgfx15UIEventListenerD1Ev+0x1c>)
 8007602:	687b      	ldr	r3, [r7, #4]
 8007604:	601a      	str	r2, [r3, #0]
    }
 8007606:	687b      	ldr	r3, [r7, #4]
 8007608:	4618      	mov	r0, r3
 800760a:	370c      	adds	r7, #12
 800760c:	46bd      	mov	sp, r7
 800760e:	f85d 7b04 	ldr.w	r7, [sp], #4
 8007612:	4770      	bx	lr
 8007614:	08022a98 	.word	0x08022a98

08007618 <_ZN8touchgfx15UIEventListenerD0Ev>:
    virtual ~UIEventListener()
 8007618:	b580      	push	{r7, lr}
 800761a:	b082      	sub	sp, #8
 800761c:	af00      	add	r7, sp, #0
 800761e:	6078      	str	r0, [r7, #4]
    }
 8007620:	6878      	ldr	r0, [r7, #4]
 8007622:	f7ff ffe9 	bl	80075f8 <_ZN8touchgfx15UIEventListenerD1Ev>
 8007626:	2104      	movs	r1, #4
 8007628:	6878      	ldr	r0, [r7, #4]
 800762a:	f019 f8c2 	bl	80207b2 <_ZdlPvj>
 800762e:	687b      	ldr	r3, [r7, #4]
 8007630:	4618      	mov	r0, r3
 8007632:	3708      	adds	r7, #8
 8007634:	46bd      	mov	sp, r7
 8007636:	bd80      	pop	{r7, pc}

08007638 <_ZN8touchgfx11Application19changeToStartScreenEv>:
     * @note The application will not make a complete restart - if
     *       your Model contains data, this will not be reset, unless
     *       this is explicitly done in your
     *       FrontendApplication::changeToStartScreen().
     */
    virtual void changeToStartScreen()
 8007638:	b480      	push	{r7}
 800763a:	b083      	sub	sp, #12
 800763c:	af00      	add	r7, sp, #0
 800763e:	6078      	str	r0, [r7, #4]
    {
    }
 8007640:	bf00      	nop
 8007642:	370c      	adds	r7, #12
 8007644:	46bd      	mov	sp, r7
 8007646:	f85d 7b04 	ldr.w	r7, [sp], #4
 800764a:	4770      	bx	lr

0800764c <_ZN8touchgfx11Application15appSwitchScreenEh>:
     * means to switch screen from places that does not have access to a pointer to the new
     * screen. Base implementation is empty.
     *
     * @param screenId An id that maps to the desired screen.
     */
    virtual void appSwitchScreen(uint8_t screenId)
 800764c:	b480      	push	{r7}
 800764e:	b083      	sub	sp, #12
 8007650:	af00      	add	r7, sp, #0
 8007652:	6078      	str	r0, [r7, #4]
 8007654:	460b      	mov	r3, r1
 8007656:	70fb      	strb	r3, [r7, #3]
    {
        (void)screenId; // Unused variable
    }
 8007658:	bf00      	nop
 800765a:	370c      	adds	r7, #12
 800765c:	46bd      	mov	sp, r7
 800765e:	f85d 7b04 	ldr.w	r7, [sp], #4
 8007662:	4770      	bx	lr

08007664 <_ZN8touchgfx11Application13requestRedrawERNS_4RectE>:
    /**
     * An application specific function for requesting redraw of given Rect.
     *
     * @param [in,out] rect The Rect that must be redrawn.
     */
    virtual void requestRedraw(Rect& rect)
 8007664:	b480      	push	{r7}
 8007666:	b083      	sub	sp, #12
 8007668:	af00      	add	r7, sp, #0
 800766a:	6078      	str	r0, [r7, #4]
 800766c:	6039      	str	r1, [r7, #0]
    {
        redraw = rect;
 800766e:	687b      	ldr	r3, [r7, #4]
 8007670:	683a      	ldr	r2, [r7, #0]
 8007672:	f503 7398 	add.w	r3, r3, #304	@ 0x130
 8007676:	6810      	ldr	r0, [r2, #0]
 8007678:	6851      	ldr	r1, [r2, #4]
 800767a:	c303      	stmia	r3!, {r0, r1}
    }
 800767c:	bf00      	nop
 800767e:	370c      	adds	r7, #12
 8007680:	46bd      	mov	sp, r7
 8007682:	f85d 7b04 	ldr.w	r7, [sp], #4
 8007686:	4770      	bx	lr

08007688 <_ZN8touchgfx11Application20clearAllTimerWidgetsEv>:
        timerWidgets.add(w);
    }

    /** Clears all currently registered timer widgets. */

    void clearAllTimerWidgets()
 8007688:	b580      	push	{r7, lr}
 800768a:	b082      	sub	sp, #8
 800768c:	af00      	add	r7, sp, #0
 800768e:	6078      	str	r0, [r7, #4]
    {
        timerWidgets.clear();
 8007690:	687b      	ldr	r3, [r7, #4]
 8007692:	3304      	adds	r3, #4
 8007694:	4618      	mov	r0, r3
 8007696:	f007 fd60 	bl	800f15a <_ZN8touchgfx11Application12TimerWidgets5clearEv>
    }
 800769a:	bf00      	nop
 800769c:	3708      	adds	r7, #8
 800769e:	46bd      	mov	sp, r7
 80076a0:	bd80      	pop	{r7, pc}
	...

080076a4 <_ZN8touchgfx15GenericCallbackIvvvED1Ev>:
template <>
class GenericCallback<void>
{
public:
    /** Finalizes an instance of the GenericCallback<void> class. */
    virtual ~GenericCallback()
 80076a4:	b480      	push	{r7}
 80076a6:	b083      	sub	sp, #12
 80076a8:	af00      	add	r7, sp, #0
 80076aa:	6078      	str	r0, [r7, #4]
    {
 80076ac:	4a04      	ldr	r2, [pc, #16]	@ (80076c0 <_ZN8touchgfx15GenericCallbackIvvvED1Ev+0x1c>)
 80076ae:	687b      	ldr	r3, [r7, #4]
 80076b0:	601a      	str	r2, [r3, #0]
    }
 80076b2:	687b      	ldr	r3, [r7, #4]
 80076b4:	4618      	mov	r0, r3
 80076b6:	370c      	adds	r7, #12
 80076b8:	46bd      	mov	sp, r7
 80076ba:	f85d 7b04 	ldr.w	r7, [sp], #4
 80076be:	4770      	bx	lr
 80076c0:	08022a80 	.word	0x08022a80

080076c4 <_ZN8touchgfx15GenericCallbackIvvvED0Ev>:
    virtual ~GenericCallback()
 80076c4:	b580      	push	{r7, lr}
 80076c6:	b082      	sub	sp, #8
 80076c8:	af00      	add	r7, sp, #0
 80076ca:	6078      	str	r0, [r7, #4]
    }
 80076cc:	6878      	ldr	r0, [r7, #4]
 80076ce:	f7ff ffe9 	bl	80076a4 <_ZN8touchgfx15GenericCallbackIvvvED1Ev>
 80076d2:	2104      	movs	r1, #4
 80076d4:	6878      	ldr	r0, [r7, #4]
 80076d6:	f019 f86c 	bl	80207b2 <_ZdlPvj>
 80076da:	687b      	ldr	r3, [r7, #4]
 80076dc:	4618      	mov	r0, r3
 80076de:	3708      	adds	r7, #8
 80076e0:	46bd      	mov	sp, r7
 80076e2:	bd80      	pop	{r7, pc}

080076e4 <_ZN8touchgfx3HAL11getInstanceEv>:
    /**
     * Gets the HAL instance.
     *
     * @return The HAL instance.
     */
    static HAL* getInstance()
 80076e4:	b480      	push	{r7}
 80076e6:	af00      	add	r7, sp, #0
    {
        return instance;
 80076e8:	4b03      	ldr	r3, [pc, #12]	@ (80076f8 <_ZN8touchgfx3HAL11getInstanceEv+0x14>)
 80076ea:	681b      	ldr	r3, [r3, #0]
    }
 80076ec:	4618      	mov	r0, r3
 80076ee:	46bd      	mov	sp, r7
 80076f0:	f85d 7b04 	ldr.w	r7, [sp], #4
 80076f4:	4770      	bx	lr
 80076f6:	bf00      	nop
 80076f8:	20002c5c 	.word	0x20002c5c

080076fc <_ZN8touchgfx3HAL3lcdEv>:
    /**
     * Gets a reference to the LCD.
     *
     * @return A reference to the LCD.
     */
    static LCD& lcd()
 80076fc:	b480      	push	{r7}
 80076fe:	af00      	add	r7, sp, #0
    {
        if (instance->useAuxiliaryLCD && instance->auxiliaryLCD)
 8007700:	4b0b      	ldr	r3, [pc, #44]	@ (8007730 <_ZN8touchgfx3HAL3lcdEv+0x34>)
 8007702:	681b      	ldr	r3, [r3, #0]
 8007704:	f893 3058 	ldrb.w	r3, [r3, #88]	@ 0x58
 8007708:	2b00      	cmp	r3, #0
 800770a:	d008      	beq.n	800771e <_ZN8touchgfx3HAL3lcdEv+0x22>
 800770c:	4b08      	ldr	r3, [pc, #32]	@ (8007730 <_ZN8touchgfx3HAL3lcdEv+0x34>)
 800770e:	681b      	ldr	r3, [r3, #0]
 8007710:	6cdb      	ldr	r3, [r3, #76]	@ 0x4c
 8007712:	2b00      	cmp	r3, #0
 8007714:	d003      	beq.n	800771e <_ZN8touchgfx3HAL3lcdEv+0x22>
        {
            return *instance->auxiliaryLCD;
 8007716:	4b06      	ldr	r3, [pc, #24]	@ (8007730 <_ZN8touchgfx3HAL3lcdEv+0x34>)
 8007718:	681b      	ldr	r3, [r3, #0]
 800771a:	6cdb      	ldr	r3, [r3, #76]	@ 0x4c
 800771c:	e002      	b.n	8007724 <_ZN8touchgfx3HAL3lcdEv+0x28>
        }
        return instance->lcdRef;
 800771e:	4b04      	ldr	r3, [pc, #16]	@ (8007730 <_ZN8touchgfx3HAL3lcdEv+0x34>)
 8007720:	681b      	ldr	r3, [r3, #0]
 8007722:	689b      	ldr	r3, [r3, #8]
    }
 8007724:	4618      	mov	r0, r3
 8007726:	46bd      	mov	sp, r7
 8007728:	f85d 7b04 	ldr.w	r7, [sp], #4
 800772c:	4770      	bx	lr
 800772e:	bf00      	nop
 8007730:	20002c5c 	.word	0x20002c5c

08007734 <_ZN8touchgfx10TransitionC1Ev>:
 */
class Transition
{
public:
    /** Initializes a new instance of the Transition class. */
    Transition()
 8007734:	b480      	push	{r7}
 8007736:	b083      	sub	sp, #12
 8007738:	af00      	add	r7, sp, #0
 800773a:	6078      	str	r0, [r7, #4]
        : screenContainer(0), done(false)
 800773c:	4a07      	ldr	r2, [pc, #28]	@ (800775c <_ZN8touchgfx10TransitionC1Ev+0x28>)
 800773e:	687b      	ldr	r3, [r7, #4]
 8007740:	601a      	str	r2, [r3, #0]
 8007742:	687b      	ldr	r3, [r7, #4]
 8007744:	2200      	movs	r2, #0
 8007746:	605a      	str	r2, [r3, #4]
 8007748:	687b      	ldr	r3, [r7, #4]
 800774a:	2200      	movs	r2, #0
 800774c:	721a      	strb	r2, [r3, #8]
    {
    }
 800774e:	687b      	ldr	r3, [r7, #4]
 8007750:	4618      	mov	r0, r3
 8007752:	370c      	adds	r7, #12
 8007754:	46bd      	mov	sp, r7
 8007756:	f85d 7b04 	ldr.w	r7, [sp], #4
 800775a:	4770      	bx	lr
 800775c:	08022a5c 	.word	0x08022a5c

08007760 <_ZN8touchgfx10TransitionD1Ev>:

    /** Finalizes an instance of the Transition class. */
    virtual ~Transition()
 8007760:	b480      	push	{r7}
 8007762:	b083      	sub	sp, #12
 8007764:	af00      	add	r7, sp, #0
 8007766:	6078      	str	r0, [r7, #4]
    {
 8007768:	4a04      	ldr	r2, [pc, #16]	@ (800777c <_ZN8touchgfx10TransitionD1Ev+0x1c>)
 800776a:	687b      	ldr	r3, [r7, #4]
 800776c:	601a      	str	r2, [r3, #0]
    }
 800776e:	687b      	ldr	r3, [r7, #4]
 8007770:	4618      	mov	r0, r3
 8007772:	370c      	adds	r7, #12
 8007774:	46bd      	mov	sp, r7
 8007776:	f85d 7b04 	ldr.w	r7, [sp], #4
 800777a:	4770      	bx	lr
 800777c:	08022a5c 	.word	0x08022a5c

08007780 <_ZN8touchgfx10TransitionD0Ev>:
    virtual ~Transition()
 8007780:	b580      	push	{r7, lr}
 8007782:	b082      	sub	sp, #8
 8007784:	af00      	add	r7, sp, #0
 8007786:	6078      	str	r0, [r7, #4]
    }
 8007788:	6878      	ldr	r0, [r7, #4]
 800778a:	f7ff ffe9 	bl	8007760 <_ZN8touchgfx10TransitionD1Ev>
 800778e:	210c      	movs	r1, #12
 8007790:	6878      	ldr	r0, [r7, #4]
 8007792:	f019 f80e 	bl	80207b2 <_ZdlPvj>
 8007796:	687b      	ldr	r3, [r7, #4]
 8007798:	4618      	mov	r0, r3
 800779a:	3708      	adds	r7, #8
 800779c:	46bd      	mov	sp, r7
 800779e:	bd80      	pop	{r7, pc}

080077a0 <_ZN8touchgfx10Transition15handleTickEventEv>:

    /** Called for every tick when transitioning. */
    virtual void handleTickEvent()
 80077a0:	b480      	push	{r7}
 80077a2:	b083      	sub	sp, #12
 80077a4:	af00      	add	r7, sp, #0
 80077a6:	6078      	str	r0, [r7, #4]
    {
    }
 80077a8:	bf00      	nop
 80077aa:	370c      	adds	r7, #12
 80077ac:	46bd      	mov	sp, r7
 80077ae:	f85d 7b04 	ldr.w	r7, [sp], #4
 80077b2:	4770      	bx	lr

080077b4 <_ZN8touchgfx10Transition8tearDownEv>:

    /**
     * Tears down the Animation. Called before the destructor is called, when the
     * application changes the transition.
     */
    virtual void tearDown()
 80077b4:	b480      	push	{r7}
 80077b6:	b083      	sub	sp, #12
 80077b8:	af00      	add	r7, sp, #0
 80077ba:	6078      	str	r0, [r7, #4]
    {
    }
 80077bc:	bf00      	nop
 80077be:	370c      	adds	r7, #12
 80077c0:	46bd      	mov	sp, r7
 80077c2:	f85d 7b04 	ldr.w	r7, [sp], #4
 80077c6:	4770      	bx	lr

080077c8 <_ZN8touchgfx10Transition4initEv>:

    /**
     * Initializes the transition. Called after the constructor is called, when the
     * application changes the transition.
     */
    virtual void init()
 80077c8:	b480      	push	{r7}
 80077ca:	b083      	sub	sp, #12
 80077cc:	af00      	add	r7, sp, #0
 80077ce:	6078      	str	r0, [r7, #4]
    {
    }
 80077d0:	bf00      	nop
 80077d2:	370c      	adds	r7, #12
 80077d4:	46bd      	mov	sp, r7
 80077d6:	f85d 7b04 	ldr.w	r7, [sp], #4
 80077da:	4770      	bx	lr

080077dc <_ZN8touchgfx10Transition10invalidateEv>:
    /**
     * Invalidates the screen when starting the Transition. Default is
     * to invalidate the whole screen. Subclasses can do partial
     * invalidation.
     */
    virtual void invalidate()
 80077dc:	b580      	push	{r7, lr}
 80077de:	b082      	sub	sp, #8
 80077e0:	af00      	add	r7, sp, #0
 80077e2:	6078      	str	r0, [r7, #4]
    {
        Application::getInstance()->invalidate();
 80077e4:	f007 fc94 	bl	800f110 <_ZN8touchgfx11Application11getInstanceEv>
 80077e8:	4603      	mov	r3, r0
 80077ea:	681a      	ldr	r2, [r3, #0]
 80077ec:	323c      	adds	r2, #60	@ 0x3c
 80077ee:	6812      	ldr	r2, [r2, #0]
 80077f0:	4618      	mov	r0, r3
 80077f2:	4790      	blx	r2
    }
 80077f4:	bf00      	nop
 80077f6:	3708      	adds	r7, #8
 80077f8:	46bd      	mov	sp, r7
 80077fa:	bd80      	pop	{r7, pc}

080077fc <_ZN8touchgfx10Transition18setScreenContainerERNS_9ContainerE>:
     * Sets the Screen Container. Is used by Screen to enable the transition to access the
     * Container.
     *
     * @param [in] cont The Container the transition should have access to.
     */
    virtual void setScreenContainer(Container& cont)
 80077fc:	b480      	push	{r7}
 80077fe:	b083      	sub	sp, #12
 8007800:	af00      	add	r7, sp, #0
 8007802:	6078      	str	r0, [r7, #4]
 8007804:	6039      	str	r1, [r7, #0]
    {
        screenContainer = &cont;
 8007806:	687b      	ldr	r3, [r7, #4]
 8007808:	683a      	ldr	r2, [r7, #0]
 800780a:	605a      	str	r2, [r3, #4]
    }
 800780c:	bf00      	nop
 800780e:	370c      	adds	r7, #12
 8007810:	46bd      	mov	sp, r7
 8007812:	f85d 7b04 	ldr.w	r7, [sp], #4
 8007816:	4770      	bx	lr

08007818 <_ZN8touchgfx11ApplicationD1Ev>:
class Application : public UIEventListener
 8007818:	b580      	push	{r7, lr}
 800781a:	b082      	sub	sp, #8
 800781c:	af00      	add	r7, sp, #0
 800781e:	6078      	str	r0, [r7, #4]
 8007820:	4a05      	ldr	r2, [pc, #20]	@ (8007838 <_ZN8touchgfx11ApplicationD1Ev+0x20>)
 8007822:	687b      	ldr	r3, [r7, #4]
 8007824:	601a      	str	r2, [r3, #0]
 8007826:	687b      	ldr	r3, [r7, #4]
 8007828:	4618      	mov	r0, r3
 800782a:	f7ff fee5 	bl	80075f8 <_ZN8touchgfx15UIEventListenerD1Ev>
 800782e:	687b      	ldr	r3, [r7, #4]
 8007830:	4618      	mov	r0, r3
 8007832:	3708      	adds	r7, #8
 8007834:	46bd      	mov	sp, r7
 8007836:	bd80      	pop	{r7, pc}
 8007838:	08023720 	.word	0x08023720

0800783c <_ZN8touchgfx11ApplicationD0Ev>:
 800783c:	b580      	push	{r7, lr}
 800783e:	b082      	sub	sp, #8
 8007840:	af00      	add	r7, sp, #0
 8007842:	6078      	str	r0, [r7, #4]
 8007844:	6878      	ldr	r0, [r7, #4]
 8007846:	f7ff ffe7 	bl	8007818 <_ZN8touchgfx11ApplicationD1Ev>
 800784a:	f44f 719e 	mov.w	r1, #316	@ 0x13c
 800784e:	6878      	ldr	r0, [r7, #4]
 8007850:	f018 ffaf 	bl	80207b2 <_ZdlPvj>
 8007854:	687b      	ldr	r3, [r7, #4]
 8007856:	4618      	mov	r0, r3
 8007858:	3708      	adds	r7, #8
 800785a:	46bd      	mov	sp, r7
 800785c:	bd80      	pop	{r7, pc}
	...

08007860 <_ZN8touchgfx14MVPApplicationC1Ev>:
 */
class MVPApplication : public Application
{
public:
    /** Initializes a new instance of the MVPApplication class. */
    MVPApplication()
 8007860:	b580      	push	{r7, lr}
 8007862:	b082      	sub	sp, #8
 8007864:	af00      	add	r7, sp, #0
 8007866:	6078      	str	r0, [r7, #4]
        : currentPresenter(0),
          pendingScreenTransitionCallback(0)
 8007868:	687b      	ldr	r3, [r7, #4]
 800786a:	4618      	mov	r0, r3
 800786c:	f007 fd12 	bl	800f294 <_ZN8touchgfx11ApplicationC1Ev>
 8007870:	4a09      	ldr	r2, [pc, #36]	@ (8007898 <_ZN8touchgfx14MVPApplicationC1Ev+0x38>)
 8007872:	687b      	ldr	r3, [r7, #4]
 8007874:	601a      	str	r2, [r3, #0]
        : currentPresenter(0),
 8007876:	687b      	ldr	r3, [r7, #4]
 8007878:	2200      	movs	r2, #0
 800787a:	f8c3 213c 	str.w	r2, [r3, #316]	@ 0x13c
          pendingScreenTransitionCallback(0)
 800787e:	687b      	ldr	r3, [r7, #4]
 8007880:	2200      	movs	r2, #0
 8007882:	f8c3 2140 	str.w	r2, [r3, #320]	@ 0x140
    {
        instance = this;
 8007886:	687b      	ldr	r3, [r7, #4]
 8007888:	4a04      	ldr	r2, [pc, #16]	@ (800789c <_ZN8touchgfx14MVPApplicationC1Ev+0x3c>)
 800788a:	6013      	str	r3, [r2, #0]
    }
 800788c:	687b      	ldr	r3, [r7, #4]
 800788e:	4618      	mov	r0, r3
 8007890:	3708      	adds	r7, #8
 8007892:	46bd      	mov	sp, r7
 8007894:	bd80      	pop	{r7, pc}
 8007896:	bf00      	nop
 8007898:	08022a08 	.word	0x08022a08
 800789c:	20002ca8 	.word	0x20002ca8

080078a0 <_ZN8touchgfx14MVPApplication29handlePendingScreenTransitionEv>:
    /**
     * Handles the pending screen transition.
     *
     * Delegates the work to evaluatePendingScreenTransition()
     */
    virtual void handlePendingScreenTransition()
 80078a0:	b580      	push	{r7, lr}
 80078a2:	b082      	sub	sp, #8
 80078a4:	af00      	add	r7, sp, #0
 80078a6:	6078      	str	r0, [r7, #4]
    {
        evaluatePendingScreenTransition();
 80078a8:	6878      	ldr	r0, [r7, #4]
 80078aa:	f000 f804 	bl	80078b6 <_ZN8touchgfx14MVPApplication31evaluatePendingScreenTransitionEv>
    }
 80078ae:	bf00      	nop
 80078b0:	3708      	adds	r7, #8
 80078b2:	46bd      	mov	sp, r7
 80078b4:	bd80      	pop	{r7, pc}

080078b6 <_ZN8touchgfx14MVPApplication31evaluatePendingScreenTransitionEv>:

    /**
     * Evaluates the pending Callback instances. If a callback is valid, it is executed and
     * a Screen transition is executed.
     */
    void evaluatePendingScreenTransition()
 80078b6:	b580      	push	{r7, lr}
 80078b8:	b082      	sub	sp, #8
 80078ba:	af00      	add	r7, sp, #0
 80078bc:	6078      	str	r0, [r7, #4]
    {
        if (pendingScreenTransitionCallback && pendingScreenTransitionCallback->isValid())
 80078be:	687b      	ldr	r3, [r7, #4]
 80078c0:	f8d3 3140 	ldr.w	r3, [r3, #320]	@ 0x140
 80078c4:	2b00      	cmp	r3, #0
 80078c6:	d00f      	beq.n	80078e8 <_ZN8touchgfx14MVPApplication31evaluatePendingScreenTransitionEv+0x32>
 80078c8:	687b      	ldr	r3, [r7, #4]
 80078ca:	f8d3 2140 	ldr.w	r2, [r3, #320]	@ 0x140
 80078ce:	687b      	ldr	r3, [r7, #4]
 80078d0:	f8d3 3140 	ldr.w	r3, [r3, #320]	@ 0x140
 80078d4:	681b      	ldr	r3, [r3, #0]
 80078d6:	330c      	adds	r3, #12
 80078d8:	681b      	ldr	r3, [r3, #0]
 80078da:	4610      	mov	r0, r2
 80078dc:	4798      	blx	r3
 80078de:	4603      	mov	r3, r0
 80078e0:	2b00      	cmp	r3, #0
 80078e2:	d001      	beq.n	80078e8 <_ZN8touchgfx14MVPApplication31evaluatePendingScreenTransitionEv+0x32>
 80078e4:	2301      	movs	r3, #1
 80078e6:	e000      	b.n	80078ea <_ZN8touchgfx14MVPApplication31evaluatePendingScreenTransitionEv+0x34>
 80078e8:	2300      	movs	r3, #0
 80078ea:	2b00      	cmp	r3, #0
 80078ec:	d00e      	beq.n	800790c <_ZN8touchgfx14MVPApplication31evaluatePendingScreenTransitionEv+0x56>
        {
            pendingScreenTransitionCallback->execute();
 80078ee:	687b      	ldr	r3, [r7, #4]
 80078f0:	f8d3 2140 	ldr.w	r2, [r3, #320]	@ 0x140
 80078f4:	687b      	ldr	r3, [r7, #4]
 80078f6:	f8d3 3140 	ldr.w	r3, [r3, #320]	@ 0x140
 80078fa:	681b      	ldr	r3, [r3, #0]
 80078fc:	3308      	adds	r3, #8
 80078fe:	681b      	ldr	r3, [r3, #0]
 8007900:	4610      	mov	r0, r2
 8007902:	4798      	blx	r3
            pendingScreenTransitionCallback = 0;
 8007904:	687b      	ldr	r3, [r7, #4]
 8007906:	2200      	movs	r2, #0
 8007908:	f8c3 2140 	str.w	r2, [r3, #320]	@ 0x140
        }
    }
 800790c:	bf00      	nop
 800790e:	3708      	adds	r7, #8
 8007910:	46bd      	mov	sp, r7
 8007912:	bd80      	pop	{r7, pc}

08007914 <_ZN5Model4bindEP13ModelListener>:

    /**
     * Sets the modelListener to point to the currently active presenter. Called automatically
     * when switching screen.
     */
    void bind(ModelListener* listener)
 8007914:	b480      	push	{r7}
 8007916:	b083      	sub	sp, #12
 8007918:	af00      	add	r7, sp, #0
 800791a:	6078      	str	r0, [r7, #4]
 800791c:	6039      	str	r1, [r7, #0]
    {
        modelListener = listener;
 800791e:	687b      	ldr	r3, [r7, #4]
 8007920:	683a      	ldr	r2, [r7, #0]
 8007922:	601a      	str	r2, [r3, #0]
    }
 8007924:	bf00      	nop
 8007926:	370c      	adds	r7, #12
 8007928:	46bd      	mov	sp, r7
 800792a:	f85d 7b04 	ldr.w	r7, [sp], #4
 800792e:	4770      	bx	lr

08007930 <_ZN8touchgfx14MVPApplicationD1Ev>:
class MVPApplication : public Application
 8007930:	b580      	push	{r7, lr}
 8007932:	b082      	sub	sp, #8
 8007934:	af00      	add	r7, sp, #0
 8007936:	6078      	str	r0, [r7, #4]
 8007938:	4a05      	ldr	r2, [pc, #20]	@ (8007950 <_ZN8touchgfx14MVPApplicationD1Ev+0x20>)
 800793a:	687b      	ldr	r3, [r7, #4]
 800793c:	601a      	str	r2, [r3, #0]
 800793e:	687b      	ldr	r3, [r7, #4]
 8007940:	4618      	mov	r0, r3
 8007942:	f7ff ff69 	bl	8007818 <_ZN8touchgfx11ApplicationD1Ev>
 8007946:	687b      	ldr	r3, [r7, #4]
 8007948:	4618      	mov	r0, r3
 800794a:	3708      	adds	r7, #8
 800794c:	46bd      	mov	sp, r7
 800794e:	bd80      	pop	{r7, pc}
 8007950:	08022a08 	.word	0x08022a08

08007954 <_ZN8touchgfx14MVPApplicationD0Ev>:
 8007954:	b580      	push	{r7, lr}
 8007956:	b082      	sub	sp, #8
 8007958:	af00      	add	r7, sp, #0
 800795a:	6078      	str	r0, [r7, #4]
 800795c:	6878      	ldr	r0, [r7, #4]
 800795e:	f7ff ffe7 	bl	8007930 <_ZN8touchgfx14MVPApplicationD1Ev>
 8007962:	f44f 71a2 	mov.w	r1, #324	@ 0x144
 8007966:	6878      	ldr	r0, [r7, #4]
 8007968:	f018 ff23 	bl	80207b2 <_ZdlPvj>
 800796c:	687b      	ldr	r3, [r7, #4]
 800796e:	4618      	mov	r0, r3
 8007970:	3708      	adds	r7, #8
 8007972:	46bd      	mov	sp, r7
 8007974:	bd80      	pop	{r7, pc}
	...

08007978 <_ZN23FrontendApplicationBaseD1Ev>:

class FrontendApplicationBase : public touchgfx::MVPApplication
{
public:
    FrontendApplicationBase(Model& m, FrontendHeap& heap);
    virtual ~FrontendApplicationBase() { }
 8007978:	b580      	push	{r7, lr}
 800797a:	b082      	sub	sp, #8
 800797c:	af00      	add	r7, sp, #0
 800797e:	6078      	str	r0, [r7, #4]
 8007980:	4a08      	ldr	r2, [pc, #32]	@ (80079a4 <_ZN23FrontendApplicationBaseD1Ev+0x2c>)
 8007982:	687b      	ldr	r3, [r7, #4]
 8007984:	601a      	str	r2, [r3, #0]
 8007986:	687b      	ldr	r3, [r7, #4]
 8007988:	f503 73a2 	add.w	r3, r3, #324	@ 0x144
 800798c:	4618      	mov	r0, r3
 800798e:	f000 fad3 	bl	8007f38 <_ZN8touchgfx8CallbackI23FrontendApplicationBasevvvED1Ev>
 8007992:	687b      	ldr	r3, [r7, #4]
 8007994:	4618      	mov	r0, r3
 8007996:	f7ff ffcb 	bl	8007930 <_ZN8touchgfx14MVPApplicationD1Ev>
 800799a:	687b      	ldr	r3, [r7, #4]
 800799c:	4618      	mov	r0, r3
 800799e:	3708      	adds	r7, #8
 80079a0:	46bd      	mov	sp, r7
 80079a2:	bd80      	pop	{r7, pc}
 80079a4:	0802299c 	.word	0x0802299c

080079a8 <_ZN23FrontendApplicationBaseD0Ev>:
 80079a8:	b580      	push	{r7, lr}
 80079aa:	b082      	sub	sp, #8
 80079ac:	af00      	add	r7, sp, #0
 80079ae:	6078      	str	r0, [r7, #4]
 80079b0:	6878      	ldr	r0, [r7, #4]
 80079b2:	f7ff ffe1 	bl	8007978 <_ZN23FrontendApplicationBaseD1Ev>
 80079b6:	f44f 71ae 	mov.w	r1, #348	@ 0x15c
 80079ba:	6878      	ldr	r0, [r7, #4]
 80079bc:	f018 fef9 	bl	80207b2 <_ZdlPvj>
 80079c0:	687b      	ldr	r3, [r7, #4]
 80079c2:	4618      	mov	r0, r3
 80079c4:	3708      	adds	r7, #8
 80079c6:	46bd      	mov	sp, r7
 80079c8:	bd80      	pop	{r7, pc}

080079ca <_ZN23FrontendApplicationBase19changeToStartScreenEv>:

    virtual void changeToStartScreen()
 80079ca:	b580      	push	{r7, lr}
 80079cc:	b082      	sub	sp, #8
 80079ce:	af00      	add	r7, sp, #0
 80079d0:	6078      	str	r0, [r7, #4]
    {
        gotoMainScreenNoTransition();
 80079d2:	6878      	ldr	r0, [r7, #4]
 80079d4:	f000 f888 	bl	8007ae8 <_ZN23FrontendApplicationBase26gotoMainScreenNoTransitionEv>
    }
 80079d8:	bf00      	nop
 80079da:	3708      	adds	r7, #8
 80079dc:	46bd      	mov	sp, r7
 80079de:	bd80      	pop	{r7, pc}

080079e0 <_ZN8touchgfx12NoTransition15handleTickEventEv>:
 */
class NoTransition : public Transition
{
public:
    /** Indicates that the transition is done after the first tick. */
    virtual void handleTickEvent()
 80079e0:	b480      	push	{r7}
 80079e2:	b083      	sub	sp, #12
 80079e4:	af00      	add	r7, sp, #0
 80079e6:	6078      	str	r0, [r7, #4]
    {
        done = true;
 80079e8:	687b      	ldr	r3, [r7, #4]
 80079ea:	2201      	movs	r2, #1
 80079ec:	721a      	strb	r2, [r3, #8]
    }
 80079ee:	bf00      	nop
 80079f0:	370c      	adds	r7, #12
 80079f2:	46bd      	mov	sp, r7
 80079f4:	f85d 7b04 	ldr.w	r7, [sp], #4
 80079f8:	4770      	bx	lr

080079fa <_ZN13ModelListener4bindEP5Model>:

    /**
     * Sets the model pointer to point to the Model object. Called automatically
     * when switching screen.
     */
    void bind(Model* m)
 80079fa:	b480      	push	{r7}
 80079fc:	b083      	sub	sp, #12
 80079fe:	af00      	add	r7, sp, #0
 8007a00:	6078      	str	r0, [r7, #4]
 8007a02:	6039      	str	r1, [r7, #0]
    {
        model = m;
 8007a04:	687b      	ldr	r3, [r7, #4]
 8007a06:	683a      	ldr	r2, [r7, #0]
 8007a08:	605a      	str	r2, [r3, #4]
    }
 8007a0a:	bf00      	nop
 8007a0c:	370c      	adds	r7, #12
 8007a0e:	46bd      	mov	sp, r7
 8007a10:	f85d 7b04 	ldr.w	r7, [sp], #4
 8007a14:	4770      	bx	lr
	...

08007a18 <_ZN23FrontendApplicationBaseC1ER5ModelR12FrontendHeap>:
#include <gui/main_screen/MainView.hpp>
#include <gui/main_screen/MainPresenter.hpp>

using namespace touchgfx;

FrontendApplicationBase::FrontendApplicationBase(Model& m, FrontendHeap& heap)
 8007a18:	b580      	push	{r7, lr}
 8007a1a:	b084      	sub	sp, #16
 8007a1c:	af00      	add	r7, sp, #0
 8007a1e:	60f8      	str	r0, [r7, #12]
 8007a20:	60b9      	str	r1, [r7, #8]
 8007a22:	607a      	str	r2, [r7, #4]
    : touchgfx::MVPApplication(),
      transitionCallback(),
      frontendHeap(heap),
      model(m)
 8007a24:	68fb      	ldr	r3, [r7, #12]
 8007a26:	4618      	mov	r0, r3
 8007a28:	f7ff ff1a 	bl	8007860 <_ZN8touchgfx14MVPApplicationC1Ev>
 8007a2c:	4a19      	ldr	r2, [pc, #100]	@ (8007a94 <_ZN23FrontendApplicationBaseC1ER5ModelR12FrontendHeap+0x7c>)
 8007a2e:	68fb      	ldr	r3, [r7, #12]
 8007a30:	601a      	str	r2, [r3, #0]
      transitionCallback(),
 8007a32:	68fb      	ldr	r3, [r7, #12]
 8007a34:	f503 73a2 	add.w	r3, r3, #324	@ 0x144
 8007a38:	4618      	mov	r0, r3
 8007a3a:	f000 f8ab 	bl	8007b94 <_ZN8touchgfx8CallbackI23FrontendApplicationBasevvvEC1Ev>
      frontendHeap(heap),
 8007a3e:	68fb      	ldr	r3, [r7, #12]
 8007a40:	687a      	ldr	r2, [r7, #4]
 8007a42:	f8c3 2154 	str.w	r2, [r3, #340]	@ 0x154
      model(m)
 8007a46:	68fb      	ldr	r3, [r7, #12]
 8007a48:	68ba      	ldr	r2, [r7, #8]
 8007a4a:	f8c3 2158 	str.w	r2, [r3, #344]	@ 0x158
{
    touchgfx::HAL::getInstance()->setDisplayOrientation(touchgfx::ORIENTATION_PORTRAIT);
 8007a4e:	f7ff fe49 	bl	80076e4 <_ZN8touchgfx3HAL11getInstanceEv>
 8007a52:	4603      	mov	r3, r0
 8007a54:	681a      	ldr	r2, [r3, #0]
 8007a56:	3208      	adds	r2, #8
 8007a58:	6812      	ldr	r2, [r2, #0]
 8007a5a:	2101      	movs	r1, #1
 8007a5c:	4618      	mov	r0, r3
 8007a5e:	4790      	blx	r2
    touchgfx::Texts::setLanguage(GB);
 8007a60:	2000      	movs	r0, #0
 8007a62:	f001 fccf 	bl	8009404 <_ZN8touchgfx5Texts11setLanguageEt>
    reinterpret_cast<touchgfx::LCD16bpp&>(touchgfx::HAL::lcd()).enableTextureMapperAll();
 8007a66:	f7ff fe49 	bl	80076fc <_ZN8touchgfx3HAL3lcdEv>
 8007a6a:	4603      	mov	r3, r0
 8007a6c:	4618      	mov	r0, r3
 8007a6e:	f011 fb08 	bl	8019082 <_ZN8touchgfx8LCD16bpp22enableTextureMapperAllEv>
    reinterpret_cast<touchgfx::LCD16bpp&>(touchgfx::HAL::lcd()).enableDecompressorL8_All();
 8007a72:	f7ff fe43 	bl	80076fc <_ZN8touchgfx3HAL3lcdEv>
 8007a76:	4603      	mov	r3, r0
 8007a78:	4618      	mov	r0, r3
 8007a7a:	f011 fb7d 	bl	8019178 <_ZN8touchgfx8LCD16bpp24enableDecompressorL8_AllEv>
    reinterpret_cast<touchgfx::LCD16bpp&>(touchgfx::HAL::lcd()).enableDecompressorRGB();
 8007a7e:	f7ff fe3d 	bl	80076fc <_ZN8touchgfx3HAL3lcdEv>
 8007a82:	4603      	mov	r3, r0
 8007a84:	4618      	mov	r0, r3
 8007a86:	f011 fb83 	bl	8019190 <_ZN8touchgfx8LCD16bpp21enableDecompressorRGBEv>
}
 8007a8a:	68fb      	ldr	r3, [r7, #12]
 8007a8c:	4618      	mov	r0, r3
 8007a8e:	3710      	adds	r7, #16
 8007a90:	46bd      	mov	sp, r7
 8007a92:	bd80      	pop	{r7, pc}
 8007a94:	0802299c 	.word	0x0802299c

08007a98 <_ZN8touchgfx15GenericCallbackIvvvEaSERKS1_>:
class GenericCallback<void>
 8007a98:	b480      	push	{r7}
 8007a9a:	b083      	sub	sp, #12
 8007a9c:	af00      	add	r7, sp, #0
 8007a9e:	6078      	str	r0, [r7, #4]
 8007aa0:	6039      	str	r1, [r7, #0]
 8007aa2:	687b      	ldr	r3, [r7, #4]
 8007aa4:	4618      	mov	r0, r3
 8007aa6:	370c      	adds	r7, #12
 8007aa8:	46bd      	mov	sp, r7
 8007aaa:	f85d 7b04 	ldr.w	r7, [sp], #4
 8007aae:	4770      	bx	lr

08007ab0 <_ZN8touchgfx8CallbackI23FrontendApplicationBasevvvEaSEOS2_>:
 *
 * @note The member function to call must return void. The function can have zero, one, two or
 *       three arguments of any type.
 */
template <class dest_type>
struct Callback<dest_type, void, void, void> : public GenericCallback<>
 8007ab0:	b580      	push	{r7, lr}
 8007ab2:	b082      	sub	sp, #8
 8007ab4:	af00      	add	r7, sp, #0
 8007ab6:	6078      	str	r0, [r7, #4]
 8007ab8:	6039      	str	r1, [r7, #0]
 8007aba:	687b      	ldr	r3, [r7, #4]
 8007abc:	683a      	ldr	r2, [r7, #0]
 8007abe:	4611      	mov	r1, r2
 8007ac0:	4618      	mov	r0, r3
 8007ac2:	f7ff ffe9 	bl	8007a98 <_ZN8touchgfx15GenericCallbackIvvvEaSERKS1_>
 8007ac6:	683b      	ldr	r3, [r7, #0]
 8007ac8:	685a      	ldr	r2, [r3, #4]
 8007aca:	687b      	ldr	r3, [r7, #4]
 8007acc:	605a      	str	r2, [r3, #4]
 8007ace:	687b      	ldr	r3, [r7, #4]
 8007ad0:	683a      	ldr	r2, [r7, #0]
 8007ad2:	3308      	adds	r3, #8
 8007ad4:	3208      	adds	r2, #8
 8007ad6:	e892 0003 	ldmia.w	r2, {r0, r1}
 8007ada:	e883 0003 	stmia.w	r3, {r0, r1}
 8007ade:	687b      	ldr	r3, [r7, #4]
 8007ae0:	4618      	mov	r0, r3
 8007ae2:	3708      	adds	r7, #8
 8007ae4:	46bd      	mov	sp, r7
 8007ae6:	bd80      	pop	{r7, pc}

08007ae8 <_ZN23FrontendApplicationBase26gotoMainScreenNoTransitionEv>:
 */

// Main

void FrontendApplicationBase::gotoMainScreenNoTransition()
{
 8007ae8:	b590      	push	{r4, r7, lr}
 8007aea:	b089      	sub	sp, #36	@ 0x24
 8007aec:	af00      	add	r7, sp, #0
 8007aee:	6078      	str	r0, [r7, #4]
    transitionCallback = touchgfx::Callback<FrontendApplicationBase>(this, &FrontendApplicationBase::gotoMainScreenNoTransitionImpl);
 8007af0:	687b      	ldr	r3, [r7, #4]
 8007af2:	f503 74a2 	add.w	r4, r3, #324	@ 0x144
 8007af6:	4b10      	ldr	r3, [pc, #64]	@ (8007b38 <_ZN23FrontendApplicationBase26gotoMainScreenNoTransitionEv+0x50>)
 8007af8:	61bb      	str	r3, [r7, #24]
 8007afa:	2300      	movs	r3, #0
 8007afc:	61fb      	str	r3, [r7, #28]
 8007afe:	f107 0008 	add.w	r0, r7, #8
 8007b02:	f107 0318 	add.w	r3, r7, #24
 8007b06:	cb0c      	ldmia	r3, {r2, r3}
 8007b08:	6879      	ldr	r1, [r7, #4]
 8007b0a:	f000 f85f 	bl	8007bcc <_ZN8touchgfx8CallbackI23FrontendApplicationBasevvvEC1EPS1_MS1_FvvE>
 8007b0e:	f107 0308 	add.w	r3, r7, #8
 8007b12:	4619      	mov	r1, r3
 8007b14:	4620      	mov	r0, r4
 8007b16:	f7ff ffcb 	bl	8007ab0 <_ZN8touchgfx8CallbackI23FrontendApplicationBasevvvEaSEOS2_>
 8007b1a:	f107 0308 	add.w	r3, r7, #8
 8007b1e:	4618      	mov	r0, r3
 8007b20:	f000 fa0a 	bl	8007f38 <_ZN8touchgfx8CallbackI23FrontendApplicationBasevvvED1Ev>
    pendingScreenTransitionCallback = &transitionCallback;
 8007b24:	687b      	ldr	r3, [r7, #4]
 8007b26:	f503 72a2 	add.w	r2, r3, #324	@ 0x144
 8007b2a:	687b      	ldr	r3, [r7, #4]
 8007b2c:	f8c3 2140 	str.w	r2, [r3, #320]	@ 0x140
}
 8007b30:	bf00      	nop
 8007b32:	3724      	adds	r7, #36	@ 0x24
 8007b34:	46bd      	mov	sp, r7
 8007b36:	bd90      	pop	{r4, r7, pc}
 8007b38:	08007b3d 	.word	0x08007b3d

08007b3c <_ZN23FrontendApplicationBase30gotoMainScreenNoTransitionImplEv>:

void FrontendApplicationBase::gotoMainScreenNoTransitionImpl()
{
 8007b3c:	b580      	push	{r7, lr}
 8007b3e:	b084      	sub	sp, #16
 8007b40:	af02      	add	r7, sp, #8
 8007b42:	6078      	str	r0, [r7, #4]
    touchgfx::makeTransition<MainView, MainPresenter, touchgfx::NoTransition, Model >(&currentScreen, &currentPresenter, frontendHeap, &currentTransition, &model);
 8007b44:	687b      	ldr	r3, [r7, #4]
 8007b46:	f503 719e 	add.w	r1, r3, #316	@ 0x13c
 8007b4a:	687b      	ldr	r3, [r7, #4]
 8007b4c:	f8d3 3154 	ldr.w	r3, [r3, #340]	@ 0x154
 8007b50:	461a      	mov	r2, r3
 8007b52:	687b      	ldr	r3, [r7, #4]
 8007b54:	f8d3 3158 	ldr.w	r3, [r3, #344]	@ 0x158
 8007b58:	9300      	str	r3, [sp, #0]
 8007b5a:	4b04      	ldr	r3, [pc, #16]	@ (8007b6c <_ZN23FrontendApplicationBase30gotoMainScreenNoTransitionImplEv+0x30>)
 8007b5c:	4804      	ldr	r0, [pc, #16]	@ (8007b70 <_ZN23FrontendApplicationBase30gotoMainScreenNoTransitionImplEv+0x34>)
 8007b5e:	f000 f867 	bl	8007c30 <_ZN8touchgfx14makeTransitionI8MainView13MainPresenterNS_12NoTransitionE5ModelEEPT0_PPNS_6ScreenEPPNS_9PresenterERNS_7MVPHeapEPPNS_10TransitionEPT2_>
}
 8007b62:	bf00      	nop
 8007b64:	3708      	adds	r7, #8
 8007b66:	46bd      	mov	sp, r7
 8007b68:	bd80      	pop	{r7, pc}
 8007b6a:	bf00      	nop
 8007b6c:	20002c9c 	.word	0x20002c9c
 8007b70:	20002c98 	.word	0x20002c98

08007b74 <_ZN8touchgfx15GenericCallbackIvvvEC1Ev>:
class GenericCallback<void>
 8007b74:	b480      	push	{r7}
 8007b76:	b083      	sub	sp, #12
 8007b78:	af00      	add	r7, sp, #0
 8007b7a:	6078      	str	r0, [r7, #4]
 8007b7c:	4a04      	ldr	r2, [pc, #16]	@ (8007b90 <_ZN8touchgfx15GenericCallbackIvvvEC1Ev+0x1c>)
 8007b7e:	687b      	ldr	r3, [r7, #4]
 8007b80:	601a      	str	r2, [r3, #0]
 8007b82:	687b      	ldr	r3, [r7, #4]
 8007b84:	4618      	mov	r0, r3
 8007b86:	370c      	adds	r7, #12
 8007b88:	46bd      	mov	sp, r7
 8007b8a:	f85d 7b04 	ldr.w	r7, [sp], #4
 8007b8e:	4770      	bx	lr
 8007b90:	08022a80 	.word	0x08022a80

08007b94 <_ZN8touchgfx8CallbackI23FrontendApplicationBasevvvEC1Ev>:
{
    /** Initializes a new instance of the Callback class. */
    Callback()
 8007b94:	b580      	push	{r7, lr}
 8007b96:	b082      	sub	sp, #8
 8007b98:	af00      	add	r7, sp, #0
 8007b9a:	6078      	str	r0, [r7, #4]
        : pobject(0), pmemfun(0)
 8007b9c:	687b      	ldr	r3, [r7, #4]
 8007b9e:	4618      	mov	r0, r3
 8007ba0:	f7ff ffe8 	bl	8007b74 <_ZN8touchgfx15GenericCallbackIvvvEC1Ev>
 8007ba4:	4a08      	ldr	r2, [pc, #32]	@ (8007bc8 <_ZN8touchgfx8CallbackI23FrontendApplicationBasevvvEC1Ev+0x34>)
 8007ba6:	687b      	ldr	r3, [r7, #4]
 8007ba8:	601a      	str	r2, [r3, #0]
 8007baa:	687b      	ldr	r3, [r7, #4]
 8007bac:	2200      	movs	r2, #0
 8007bae:	605a      	str	r2, [r3, #4]
 8007bb0:	687b      	ldr	r3, [r7, #4]
 8007bb2:	2200      	movs	r2, #0
 8007bb4:	609a      	str	r2, [r3, #8]
 8007bb6:	687b      	ldr	r3, [r7, #4]
 8007bb8:	2200      	movs	r2, #0
 8007bba:	60da      	str	r2, [r3, #12]
    {
    }
 8007bbc:	687b      	ldr	r3, [r7, #4]
 8007bbe:	4618      	mov	r0, r3
 8007bc0:	3708      	adds	r7, #8
 8007bc2:	46bd      	mov	sp, r7
 8007bc4:	bd80      	pop	{r7, pc}
 8007bc6:	bf00      	nop
 8007bc8:	080229f0 	.word	0x080229f0

08007bcc <_ZN8touchgfx8CallbackI23FrontendApplicationBasevvvEC1EPS1_MS1_FvvE>:
     *
     * @param [in] pObject   Pointer to the object on which the function should be called.
     * @param [in] pmemfun_0 Address of member function. This is the version where function takes zero
     *                       arguments.
     */
    Callback(dest_type* pObject, void (dest_type::*pmemfun_0)())
 8007bcc:	b580      	push	{r7, lr}
 8007bce:	b084      	sub	sp, #16
 8007bd0:	af00      	add	r7, sp, #0
 8007bd2:	60f8      	str	r0, [r7, #12]
 8007bd4:	60b9      	str	r1, [r7, #8]
 8007bd6:	4639      	mov	r1, r7
 8007bd8:	e881 000c 	stmia.w	r1, {r2, r3}
        : pobject(pObject), pmemfun(pmemfun_0)
 8007bdc:	68fb      	ldr	r3, [r7, #12]
 8007bde:	4618      	mov	r0, r3
 8007be0:	f7ff ffc8 	bl	8007b74 <_ZN8touchgfx15GenericCallbackIvvvEC1Ev>
 8007be4:	4a08      	ldr	r2, [pc, #32]	@ (8007c08 <_ZN8touchgfx8CallbackI23FrontendApplicationBasevvvEC1EPS1_MS1_FvvE+0x3c>)
 8007be6:	68fb      	ldr	r3, [r7, #12]
 8007be8:	601a      	str	r2, [r3, #0]
 8007bea:	68fb      	ldr	r3, [r7, #12]
 8007bec:	68ba      	ldr	r2, [r7, #8]
 8007bee:	605a      	str	r2, [r3, #4]
 8007bf0:	68fb      	ldr	r3, [r7, #12]
 8007bf2:	3308      	adds	r3, #8
 8007bf4:	463a      	mov	r2, r7
 8007bf6:	e892 0003 	ldmia.w	r2, {r0, r1}
 8007bfa:	e883 0003 	stmia.w	r3, {r0, r1}
    {
    }
 8007bfe:	68fb      	ldr	r3, [r7, #12]
 8007c00:	4618      	mov	r0, r3
 8007c02:	3710      	adds	r7, #16
 8007c04:	46bd      	mov	sp, r7
 8007c06:	bd80      	pop	{r7, pc}
 8007c08:	080229f0 	.word	0x080229f0

08007c0c <_ZN8touchgfx12NoTransitionC1Ev>:
class NoTransition : public Transition
 8007c0c:	b580      	push	{r7, lr}
 8007c0e:	b082      	sub	sp, #8
 8007c10:	af00      	add	r7, sp, #0
 8007c12:	6078      	str	r0, [r7, #4]
 8007c14:	687b      	ldr	r3, [r7, #4]
 8007c16:	4618      	mov	r0, r3
 8007c18:	f7ff fd8c 	bl	8007734 <_ZN8touchgfx10TransitionC1Ev>
 8007c1c:	4a03      	ldr	r2, [pc, #12]	@ (8007c2c <_ZN8touchgfx12NoTransitionC1Ev+0x20>)
 8007c1e:	687b      	ldr	r3, [r7, #4]
 8007c20:	601a      	str	r2, [r3, #0]
 8007c22:	687b      	ldr	r3, [r7, #4]
 8007c24:	4618      	mov	r0, r3
 8007c26:	3708      	adds	r7, #8
 8007c28:	46bd      	mov	sp, r7
 8007c2a:	bd80      	pop	{r7, pc}
 8007c2c:	08022978 	.word	0x08022978

08007c30 <_ZN8touchgfx14makeTransitionI8MainView13MainPresenterNS_12NoTransitionE5ModelEEPT0_PPNS_6ScreenEPPNS_9PresenterERNS_7MVPHeapEPPNS_10TransitionEPT2_>:
 *
 * @return Pointer to the new Presenter of the requested type. Incidentally it will be the same
 *         value as the old presenter due to memory reuse.
 */
template <class ScreenType, class PresenterType, class TransType, class ModelType>
PresenterType* makeTransition(Screen** currentScreen, Presenter** currentPresenter, MVPHeap& heap, Transition** currentTrans, ModelType* model)
 8007c30:	b590      	push	{r4, r7, lr}
 8007c32:	b08f      	sub	sp, #60	@ 0x3c
 8007c34:	af00      	add	r7, sp, #0
 8007c36:	60f8      	str	r0, [r7, #12]
 8007c38:	60b9      	str	r1, [r7, #8]
 8007c3a:	607a      	str	r2, [r7, #4]
 8007c3c:	603b      	str	r3, [r7, #0]
{
    assert(sizeof(ScreenType) <= heap.screenStorage.element_size() && "View allocation error: Check that all views are added to FrontendHeap::ViewTypes");
 8007c3e:	687b      	ldr	r3, [r7, #4]
 8007c40:	689a      	ldr	r2, [r3, #8]
 8007c42:	687b      	ldr	r3, [r7, #4]
 8007c44:	689b      	ldr	r3, [r3, #8]
 8007c46:	681b      	ldr	r3, [r3, #0]
 8007c48:	3320      	adds	r3, #32
 8007c4a:	681b      	ldr	r3, [r3, #0]
 8007c4c:	4610      	mov	r0, r2
 8007c4e:	4798      	blx	r3
 8007c50:	4603      	mov	r3, r0
 8007c52:	f5b3 7f96 	cmp.w	r3, #300	@ 0x12c
 8007c56:	d205      	bcs.n	8007c64 <_ZN8touchgfx14makeTransitionI8MainView13MainPresenterNS_12NoTransitionE5ModelEEPT0_PPNS_6ScreenEPPNS_9PresenterERNS_7MVPHeapEPPNS_10TransitionEPT2_+0x34>
 8007c58:	4b7d      	ldr	r3, [pc, #500]	@ (8007e50 <_ZN8touchgfx14makeTransitionI8MainView13MainPresenterNS_12NoTransitionE5ModelEEPT0_PPNS_6ScreenEPPNS_9PresenterERNS_7MVPHeapEPPNS_10TransitionEPT2_+0x220>)
 8007c5a:	4a7e      	ldr	r2, [pc, #504]	@ (8007e54 <_ZN8touchgfx14makeTransitionI8MainView13MainPresenterNS_12NoTransitionE5ModelEEPT0_PPNS_6ScreenEPPNS_9PresenterERNS_7MVPHeapEPPNS_10TransitionEPT2_+0x224>)
 8007c5c:	21a3      	movs	r1, #163	@ 0xa3
 8007c5e:	487e      	ldr	r0, [pc, #504]	@ (8007e58 <_ZN8touchgfx14makeTransitionI8MainView13MainPresenterNS_12NoTransitionE5ModelEEPT0_PPNS_6ScreenEPPNS_9PresenterERNS_7MVPHeapEPPNS_10TransitionEPT2_+0x228>)
 8007c60:	f018 fdd6 	bl	8020810 <__assert_func>
    assert(sizeof(PresenterType) <= heap.presenterStorage.element_size() && "Presenter allocation error: Check that all presenters are added to FrontendHeap::PresenterTypes");
 8007c64:	687b      	ldr	r3, [r7, #4]
 8007c66:	685a      	ldr	r2, [r3, #4]
 8007c68:	687b      	ldr	r3, [r7, #4]
 8007c6a:	685b      	ldr	r3, [r3, #4]
 8007c6c:	681b      	ldr	r3, [r3, #0]
 8007c6e:	3320      	adds	r3, #32
 8007c70:	681b      	ldr	r3, [r3, #0]
 8007c72:	4610      	mov	r0, r2
 8007c74:	4798      	blx	r3
 8007c76:	4603      	mov	r3, r0
 8007c78:	2b0f      	cmp	r3, #15
 8007c7a:	d805      	bhi.n	8007c88 <_ZN8touchgfx14makeTransitionI8MainView13MainPresenterNS_12NoTransitionE5ModelEEPT0_PPNS_6ScreenEPPNS_9PresenterERNS_7MVPHeapEPPNS_10TransitionEPT2_+0x58>
 8007c7c:	4b77      	ldr	r3, [pc, #476]	@ (8007e5c <_ZN8touchgfx14makeTransitionI8MainView13MainPresenterNS_12NoTransitionE5ModelEEPT0_PPNS_6ScreenEPPNS_9PresenterERNS_7MVPHeapEPPNS_10TransitionEPT2_+0x22c>)
 8007c7e:	4a75      	ldr	r2, [pc, #468]	@ (8007e54 <_ZN8touchgfx14makeTransitionI8MainView13MainPresenterNS_12NoTransitionE5ModelEEPT0_PPNS_6ScreenEPPNS_9PresenterERNS_7MVPHeapEPPNS_10TransitionEPT2_+0x224>)
 8007c80:	21a4      	movs	r1, #164	@ 0xa4
 8007c82:	4875      	ldr	r0, [pc, #468]	@ (8007e58 <_ZN8touchgfx14makeTransitionI8MainView13MainPresenterNS_12NoTransitionE5ModelEEPT0_PPNS_6ScreenEPPNS_9PresenterERNS_7MVPHeapEPPNS_10TransitionEPT2_+0x228>)
 8007c84:	f018 fdc4 	bl	8020810 <__assert_func>
    assert(sizeof(TransType) <= heap.transitionStorage.element_size() && "Transition allocation error: Check that all transitions are added to FrontendHeap::TransitionTypes");
 8007c88:	687b      	ldr	r3, [r7, #4]
 8007c8a:	68da      	ldr	r2, [r3, #12]
 8007c8c:	687b      	ldr	r3, [r7, #4]
 8007c8e:	68db      	ldr	r3, [r3, #12]
 8007c90:	681b      	ldr	r3, [r3, #0]
 8007c92:	3320      	adds	r3, #32
 8007c94:	681b      	ldr	r3, [r3, #0]
 8007c96:	4610      	mov	r0, r2
 8007c98:	4798      	blx	r3
 8007c9a:	4603      	mov	r3, r0
 8007c9c:	2b0b      	cmp	r3, #11
 8007c9e:	d805      	bhi.n	8007cac <_ZN8touchgfx14makeTransitionI8MainView13MainPresenterNS_12NoTransitionE5ModelEEPT0_PPNS_6ScreenEPPNS_9PresenterERNS_7MVPHeapEPPNS_10TransitionEPT2_+0x7c>
 8007ca0:	4b6f      	ldr	r3, [pc, #444]	@ (8007e60 <_ZN8touchgfx14makeTransitionI8MainView13MainPresenterNS_12NoTransitionE5ModelEEPT0_PPNS_6ScreenEPPNS_9PresenterERNS_7MVPHeapEPPNS_10TransitionEPT2_+0x230>)
 8007ca2:	4a6c      	ldr	r2, [pc, #432]	@ (8007e54 <_ZN8touchgfx14makeTransitionI8MainView13MainPresenterNS_12NoTransitionE5ModelEEPT0_PPNS_6ScreenEPPNS_9PresenterERNS_7MVPHeapEPPNS_10TransitionEPT2_+0x224>)
 8007ca4:	21a5      	movs	r1, #165	@ 0xa5
 8007ca6:	486c      	ldr	r0, [pc, #432]	@ (8007e58 <_ZN8touchgfx14makeTransitionI8MainView13MainPresenterNS_12NoTransitionE5ModelEEPT0_PPNS_6ScreenEPPNS_9PresenterERNS_7MVPHeapEPPNS_10TransitionEPT2_+0x228>)
 8007ca8:	f018 fdb2 	bl	8020810 <__assert_func>
 8007cac:	68fb      	ldr	r3, [r7, #12]
 8007cae:	62bb      	str	r3, [r7, #40]	@ 0x28
 8007cb0:	68bb      	ldr	r3, [r7, #8]
 8007cb2:	627b      	str	r3, [r7, #36]	@ 0x24
 8007cb4:	683b      	ldr	r3, [r7, #0]
 8007cb6:	623b      	str	r3, [r7, #32]
    Application::getInstance()->clearAllTimerWidgets();
 8007cb8:	f007 fa2a 	bl	800f110 <_ZN8touchgfx11Application11getInstanceEv>
 8007cbc:	4603      	mov	r3, r0
 8007cbe:	4618      	mov	r0, r3
 8007cc0:	f7ff fce2 	bl	8007688 <_ZN8touchgfx11Application20clearAllTimerWidgetsEv>
    if (*currentTrans)
 8007cc4:	6a3b      	ldr	r3, [r7, #32]
 8007cc6:	681b      	ldr	r3, [r3, #0]
 8007cc8:	2b00      	cmp	r3, #0
 8007cca:	d008      	beq.n	8007cde <_ZN8touchgfx14makeTransitionI8MainView13MainPresenterNS_12NoTransitionE5ModelEEPT0_PPNS_6ScreenEPPNS_9PresenterERNS_7MVPHeapEPPNS_10TransitionEPT2_+0xae>
        (*currentTrans)->tearDown();
 8007ccc:	6a3b      	ldr	r3, [r7, #32]
 8007cce:	681a      	ldr	r2, [r3, #0]
 8007cd0:	6a3b      	ldr	r3, [r7, #32]
 8007cd2:	681b      	ldr	r3, [r3, #0]
 8007cd4:	681b      	ldr	r3, [r3, #0]
 8007cd6:	330c      	adds	r3, #12
 8007cd8:	681b      	ldr	r3, [r3, #0]
 8007cda:	4610      	mov	r0, r2
 8007cdc:	4798      	blx	r3
    if (*currentTrans)
 8007cde:	6a3b      	ldr	r3, [r7, #32]
 8007ce0:	681b      	ldr	r3, [r3, #0]
 8007ce2:	2b00      	cmp	r3, #0
 8007ce4:	d007      	beq.n	8007cf6 <_ZN8touchgfx14makeTransitionI8MainView13MainPresenterNS_12NoTransitionE5ModelEEPT0_PPNS_6ScreenEPPNS_9PresenterERNS_7MVPHeapEPPNS_10TransitionEPT2_+0xc6>
        (*currentTrans)->~Transition();
 8007ce6:	6a3b      	ldr	r3, [r7, #32]
 8007ce8:	681a      	ldr	r2, [r3, #0]
 8007cea:	6a3b      	ldr	r3, [r7, #32]
 8007cec:	681b      	ldr	r3, [r3, #0]
 8007cee:	681b      	ldr	r3, [r3, #0]
 8007cf0:	681b      	ldr	r3, [r3, #0]
 8007cf2:	4610      	mov	r0, r2
 8007cf4:	4798      	blx	r3
    if (*currentScreen)
 8007cf6:	6abb      	ldr	r3, [r7, #40]	@ 0x28
 8007cf8:	681b      	ldr	r3, [r3, #0]
 8007cfa:	2b00      	cmp	r3, #0
 8007cfc:	d008      	beq.n	8007d10 <_ZN8touchgfx14makeTransitionI8MainView13MainPresenterNS_12NoTransitionE5ModelEEPT0_PPNS_6ScreenEPPNS_9PresenterERNS_7MVPHeapEPPNS_10TransitionEPT2_+0xe0>
        (*currentScreen)->tearDownScreen();
 8007cfe:	6abb      	ldr	r3, [r7, #40]	@ 0x28
 8007d00:	681a      	ldr	r2, [r3, #0]
 8007d02:	6abb      	ldr	r3, [r7, #40]	@ 0x28
 8007d04:	681b      	ldr	r3, [r3, #0]
 8007d06:	681b      	ldr	r3, [r3, #0]
 8007d08:	3314      	adds	r3, #20
 8007d0a:	681b      	ldr	r3, [r3, #0]
 8007d0c:	4610      	mov	r0, r2
 8007d0e:	4798      	blx	r3
    if (*currentPresenter)
 8007d10:	6a7b      	ldr	r3, [r7, #36]	@ 0x24
 8007d12:	681b      	ldr	r3, [r3, #0]
 8007d14:	2b00      	cmp	r3, #0
 8007d16:	d008      	beq.n	8007d2a <_ZN8touchgfx14makeTransitionI8MainView13MainPresenterNS_12NoTransitionE5ModelEEPT0_PPNS_6ScreenEPPNS_9PresenterERNS_7MVPHeapEPPNS_10TransitionEPT2_+0xfa>
        (*currentPresenter)->deactivate();
 8007d18:	6a7b      	ldr	r3, [r7, #36]	@ 0x24
 8007d1a:	681a      	ldr	r2, [r3, #0]
 8007d1c:	6a7b      	ldr	r3, [r7, #36]	@ 0x24
 8007d1e:	681b      	ldr	r3, [r3, #0]
 8007d20:	681b      	ldr	r3, [r3, #0]
 8007d22:	3304      	adds	r3, #4
 8007d24:	681b      	ldr	r3, [r3, #0]
 8007d26:	4610      	mov	r0, r2
 8007d28:	4798      	blx	r3
    if (*currentScreen)
 8007d2a:	6abb      	ldr	r3, [r7, #40]	@ 0x28
 8007d2c:	681b      	ldr	r3, [r3, #0]
 8007d2e:	2b00      	cmp	r3, #0
 8007d30:	d007      	beq.n	8007d42 <_ZN8touchgfx14makeTransitionI8MainView13MainPresenterNS_12NoTransitionE5ModelEEPT0_PPNS_6ScreenEPPNS_9PresenterERNS_7MVPHeapEPPNS_10TransitionEPT2_+0x112>
        (*currentScreen)->~Screen();
 8007d32:	6abb      	ldr	r3, [r7, #40]	@ 0x28
 8007d34:	681a      	ldr	r2, [r3, #0]
 8007d36:	6abb      	ldr	r3, [r7, #40]	@ 0x28
 8007d38:	681b      	ldr	r3, [r3, #0]
 8007d3a:	681b      	ldr	r3, [r3, #0]
 8007d3c:	681b      	ldr	r3, [r3, #0]
 8007d3e:	4610      	mov	r0, r2
 8007d40:	4798      	blx	r3
    if (*currentPresenter)
 8007d42:	6a7b      	ldr	r3, [r7, #36]	@ 0x24
 8007d44:	681b      	ldr	r3, [r3, #0]
 8007d46:	2b00      	cmp	r3, #0
 8007d48:	d008      	beq.n	8007d5c <_ZN8touchgfx14makeTransitionI8MainView13MainPresenterNS_12NoTransitionE5ModelEEPT0_PPNS_6ScreenEPPNS_9PresenterERNS_7MVPHeapEPPNS_10TransitionEPT2_+0x12c>
        (*currentPresenter)->~Presenter();
 8007d4a:	6a7b      	ldr	r3, [r7, #36]	@ 0x24
 8007d4c:	681a      	ldr	r2, [r3, #0]
 8007d4e:	6a7b      	ldr	r3, [r7, #36]	@ 0x24
 8007d50:	681b      	ldr	r3, [r3, #0]
 8007d52:	681b      	ldr	r3, [r3, #0]
 8007d54:	3308      	adds	r3, #8
 8007d56:	681b      	ldr	r3, [r3, #0]
 8007d58:	4610      	mov	r0, r2
 8007d5a:	4798      	blx	r3
}
 8007d5c:	bf00      	nop

    prepareTransition(currentScreen, currentPresenter, currentTrans);

    TransType* newTransition = new (&heap.transitionStorage.at<TransType>(0)) TransType;
 8007d5e:	687b      	ldr	r3, [r7, #4]
 8007d60:	68db      	ldr	r3, [r3, #12]
 8007d62:	2100      	movs	r1, #0
 8007d64:	4618      	mov	r0, r3
 8007d66:	f000 f87d 	bl	8007e64 <_ZN8touchgfx17AbstractPartition2atINS_12NoTransitionEEERT_t>
 8007d6a:	4603      	mov	r3, r0
 8007d6c:	4619      	mov	r1, r3
 8007d6e:	200c      	movs	r0, #12
 8007d70:	f7ff fbf4 	bl	800755c <_ZnwjPv>
 8007d74:	4604      	mov	r4, r0
 8007d76:	4620      	mov	r0, r4
 8007d78:	f7ff ff48 	bl	8007c0c <_ZN8touchgfx12NoTransitionC1Ev>
 8007d7c:	637c      	str	r4, [r7, #52]	@ 0x34
    ScreenType* newScreen = new (&heap.screenStorage.at<ScreenType>(0)) ScreenType;
 8007d7e:	687b      	ldr	r3, [r7, #4]
 8007d80:	689b      	ldr	r3, [r3, #8]
 8007d82:	2100      	movs	r1, #0
 8007d84:	4618      	mov	r0, r3
 8007d86:	f000 f880 	bl	8007e8a <_ZN8touchgfx17AbstractPartition2atI8MainViewEERT_t>
 8007d8a:	4603      	mov	r3, r0
 8007d8c:	4619      	mov	r1, r3
 8007d8e:	f44f 7096 	mov.w	r0, #300	@ 0x12c
 8007d92:	f7ff fbe3 	bl	800755c <_ZnwjPv>
 8007d96:	4604      	mov	r4, r0
 8007d98:	4620      	mov	r0, r4
 8007d9a:	f001 fd4f 	bl	800983c <_ZN8MainViewC1Ev>
 8007d9e:	633c      	str	r4, [r7, #48]	@ 0x30
    PresenterType* newPresenter = new (&heap.presenterStorage.at<PresenterType>(0)) PresenterType(*newScreen);
 8007da0:	687b      	ldr	r3, [r7, #4]
 8007da2:	685b      	ldr	r3, [r3, #4]
 8007da4:	2100      	movs	r1, #0
 8007da6:	4618      	mov	r0, r3
 8007da8:	f000 f882 	bl	8007eb0 <_ZN8touchgfx17AbstractPartition2atI13MainPresenterEERT_t>
 8007dac:	4603      	mov	r3, r0
 8007dae:	4619      	mov	r1, r3
 8007db0:	2010      	movs	r0, #16
 8007db2:	f7ff fbd3 	bl	800755c <_ZnwjPv>
 8007db6:	4604      	mov	r4, r0
 8007db8:	6b39      	ldr	r1, [r7, #48]	@ 0x30
 8007dba:	4620      	mov	r0, r4
 8007dbc:	f001 fcce 	bl	800975c <_ZN13MainPresenterC1ER8MainView>
 8007dc0:	62fc      	str	r4, [r7, #44]	@ 0x2c
    *currentTrans = newTransition;
 8007dc2:	683b      	ldr	r3, [r7, #0]
 8007dc4:	6b7a      	ldr	r2, [r7, #52]	@ 0x34
 8007dc6:	601a      	str	r2, [r3, #0]
    *currentPresenter = newPresenter;
 8007dc8:	68bb      	ldr	r3, [r7, #8]
 8007dca:	6afa      	ldr	r2, [r7, #44]	@ 0x2c
 8007dcc:	601a      	str	r2, [r3, #0]
    *currentScreen = newScreen;
 8007dce:	68fb      	ldr	r3, [r7, #12]
 8007dd0:	6b3a      	ldr	r2, [r7, #48]	@ 0x30
 8007dd2:	601a      	str	r2, [r3, #0]
    model->bind(newPresenter);
 8007dd4:	6afb      	ldr	r3, [r7, #44]	@ 0x2c
 8007dd6:	2b00      	cmp	r3, #0
 8007dd8:	d002      	beq.n	8007de0 <_ZN8touchgfx14makeTransitionI8MainView13MainPresenterNS_12NoTransitionE5ModelEEPT0_PPNS_6ScreenEPPNS_9PresenterERNS_7MVPHeapEPPNS_10TransitionEPT2_+0x1b0>
 8007dda:	6afb      	ldr	r3, [r7, #44]	@ 0x2c
 8007ddc:	3304      	adds	r3, #4
 8007dde:	e000      	b.n	8007de2 <_ZN8touchgfx14makeTransitionI8MainView13MainPresenterNS_12NoTransitionE5ModelEEPT0_PPNS_6ScreenEPPNS_9PresenterERNS_7MVPHeapEPPNS_10TransitionEPT2_+0x1b2>
 8007de0:	2300      	movs	r3, #0
 8007de2:	4619      	mov	r1, r3
 8007de4:	6cb8      	ldr	r0, [r7, #72]	@ 0x48
 8007de6:	f7ff fd95 	bl	8007914 <_ZN5Model4bindEP13ModelListener>
    newPresenter->bind(model);
 8007dea:	6afb      	ldr	r3, [r7, #44]	@ 0x2c
 8007dec:	3304      	adds	r3, #4
 8007dee:	6cb9      	ldr	r1, [r7, #72]	@ 0x48
 8007df0:	4618      	mov	r0, r3
 8007df2:	f7ff fe02 	bl	80079fa <_ZN13ModelListener4bindEP5Model>
    newScreen->bind(*newPresenter);
 8007df6:	6b3b      	ldr	r3, [r7, #48]	@ 0x30
 8007df8:	6af9      	ldr	r1, [r7, #44]	@ 0x2c
 8007dfa:	4618      	mov	r0, r3
 8007dfc:	f000 f86b 	bl	8007ed6 <_ZN8touchgfx4ViewI13MainPresenterE4bindERS1_>
 8007e00:	6b3b      	ldr	r3, [r7, #48]	@ 0x30
 8007e02:	61fb      	str	r3, [r7, #28]
 8007e04:	6afb      	ldr	r3, [r7, #44]	@ 0x2c
 8007e06:	61bb      	str	r3, [r7, #24]
 8007e08:	6b7b      	ldr	r3, [r7, #52]	@ 0x34
 8007e0a:	617b      	str	r3, [r7, #20]
    newScreen->setupScreen();
 8007e0c:	69fb      	ldr	r3, [r7, #28]
 8007e0e:	681b      	ldr	r3, [r3, #0]
 8007e10:	330c      	adds	r3, #12
 8007e12:	681b      	ldr	r3, [r3, #0]
 8007e14:	69f8      	ldr	r0, [r7, #28]
 8007e16:	4798      	blx	r3
    newPresenter->activate();
 8007e18:	69bb      	ldr	r3, [r7, #24]
 8007e1a:	681b      	ldr	r3, [r3, #0]
 8007e1c:	681b      	ldr	r3, [r3, #0]
 8007e1e:	69b8      	ldr	r0, [r7, #24]
 8007e20:	4798      	blx	r3
    newScreen->bindTransition(*newTransition);
 8007e22:	6979      	ldr	r1, [r7, #20]
 8007e24:	69f8      	ldr	r0, [r7, #28]
 8007e26:	f008 fe35 	bl	8010a94 <_ZN8touchgfx6Screen14bindTransitionERNS_10TransitionE>
    newTransition->init();
 8007e2a:	697b      	ldr	r3, [r7, #20]
 8007e2c:	681b      	ldr	r3, [r3, #0]
 8007e2e:	3310      	adds	r3, #16
 8007e30:	681b      	ldr	r3, [r3, #0]
 8007e32:	6978      	ldr	r0, [r7, #20]
 8007e34:	4798      	blx	r3
    newTransition->invalidate();
 8007e36:	697b      	ldr	r3, [r7, #20]
 8007e38:	681b      	ldr	r3, [r3, #0]
 8007e3a:	3314      	adds	r3, #20
 8007e3c:	681b      	ldr	r3, [r3, #0]
 8007e3e:	6978      	ldr	r0, [r7, #20]
 8007e40:	4798      	blx	r3
}
 8007e42:	bf00      	nop

    finalizeTransition((Screen*)newScreen, (Presenter*)newPresenter, (Transition*)newTransition);

    return newPresenter;
 8007e44:	6afb      	ldr	r3, [r7, #44]	@ 0x2c
}
 8007e46:	4618      	mov	r0, r3
 8007e48:	373c      	adds	r7, #60	@ 0x3c
 8007e4a:	46bd      	mov	sp, r7
 8007e4c:	bd90      	pop	{r4, r7, pc}
 8007e4e:	bf00      	nop
 8007e50:	08021870 	.word	0x08021870
 8007e54:	08021900 	.word	0x08021900
 8007e58:	080219cc 	.word	0x080219cc
 8007e5c:	08021a10 	.word	0x08021a10
 8007e60:	08021ab4 	.word	0x08021ab4

08007e64 <_ZN8touchgfx17AbstractPartition2atINS_12NoTransitionEEERT_t>:
     * @param  index The index into the Partition storage where the returned object is located.
     *
     * @return A typed reference to the object at the specified index.
     */
    template <typename T>
    T& at(const uint16_t index)
 8007e64:	b580      	push	{r7, lr}
 8007e66:	b082      	sub	sp, #8
 8007e68:	af00      	add	r7, sp, #0
 8007e6a:	6078      	str	r0, [r7, #4]
 8007e6c:	460b      	mov	r3, r1
 8007e6e:	807b      	strh	r3, [r7, #2]
    {
        return *static_cast<T*>(element(index));
 8007e70:	687b      	ldr	r3, [r7, #4]
 8007e72:	681b      	ldr	r3, [r3, #0]
 8007e74:	3324      	adds	r3, #36	@ 0x24
 8007e76:	681b      	ldr	r3, [r3, #0]
 8007e78:	887a      	ldrh	r2, [r7, #2]
 8007e7a:	4611      	mov	r1, r2
 8007e7c:	6878      	ldr	r0, [r7, #4]
 8007e7e:	4798      	blx	r3
 8007e80:	4603      	mov	r3, r0
    }
 8007e82:	4618      	mov	r0, r3
 8007e84:	3708      	adds	r7, #8
 8007e86:	46bd      	mov	sp, r7
 8007e88:	bd80      	pop	{r7, pc}

08007e8a <_ZN8touchgfx17AbstractPartition2atI8MainViewEERT_t>:
    T& at(const uint16_t index)
 8007e8a:	b580      	push	{r7, lr}
 8007e8c:	b082      	sub	sp, #8
 8007e8e:	af00      	add	r7, sp, #0
 8007e90:	6078      	str	r0, [r7, #4]
 8007e92:	460b      	mov	r3, r1
 8007e94:	807b      	strh	r3, [r7, #2]
        return *static_cast<T*>(element(index));
 8007e96:	687b      	ldr	r3, [r7, #4]
 8007e98:	681b      	ldr	r3, [r3, #0]
 8007e9a:	3324      	adds	r3, #36	@ 0x24
 8007e9c:	681b      	ldr	r3, [r3, #0]
 8007e9e:	887a      	ldrh	r2, [r7, #2]
 8007ea0:	4611      	mov	r1, r2
 8007ea2:	6878      	ldr	r0, [r7, #4]
 8007ea4:	4798      	blx	r3
 8007ea6:	4603      	mov	r3, r0
    }
 8007ea8:	4618      	mov	r0, r3
 8007eaa:	3708      	adds	r7, #8
 8007eac:	46bd      	mov	sp, r7
 8007eae:	bd80      	pop	{r7, pc}

08007eb0 <_ZN8touchgfx17AbstractPartition2atI13MainPresenterEERT_t>:
    T& at(const uint16_t index)
 8007eb0:	b580      	push	{r7, lr}
 8007eb2:	b082      	sub	sp, #8
 8007eb4:	af00      	add	r7, sp, #0
 8007eb6:	6078      	str	r0, [r7, #4]
 8007eb8:	460b      	mov	r3, r1
 8007eba:	807b      	strh	r3, [r7, #2]
        return *static_cast<T*>(element(index));
 8007ebc:	687b      	ldr	r3, [r7, #4]
 8007ebe:	681b      	ldr	r3, [r3, #0]
 8007ec0:	3324      	adds	r3, #36	@ 0x24
 8007ec2:	681b      	ldr	r3, [r3, #0]
 8007ec4:	887a      	ldrh	r2, [r7, #2]
 8007ec6:	4611      	mov	r1, r2
 8007ec8:	6878      	ldr	r0, [r7, #4]
 8007eca:	4798      	blx	r3
 8007ecc:	4603      	mov	r3, r0
    }
 8007ece:	4618      	mov	r0, r3
 8007ed0:	3708      	adds	r7, #8
 8007ed2:	46bd      	mov	sp, r7
 8007ed4:	bd80      	pop	{r7, pc}

08007ed6 <_ZN8touchgfx4ViewI13MainPresenterE4bindERS1_>:
     * Binds an instance of a specific Presenter type (subclass) to the View instance. This function
     * is called automatically when a new presenter/view pair is activated.
     *
     * @param [in] newPresenter The specific Presenter to be associated with the View.
     */
    void bind(T& newPresenter)
 8007ed6:	b480      	push	{r7}
 8007ed8:	b083      	sub	sp, #12
 8007eda:	af00      	add	r7, sp, #0
 8007edc:	6078      	str	r0, [r7, #4]
 8007ede:	6039      	str	r1, [r7, #0]
    {
        presenter = &newPresenter;
 8007ee0:	687b      	ldr	r3, [r7, #4]
 8007ee2:	683a      	ldr	r2, [r7, #0]
 8007ee4:	63da      	str	r2, [r3, #60]	@ 0x3c
    }
 8007ee6:	bf00      	nop
 8007ee8:	370c      	adds	r7, #12
 8007eea:	46bd      	mov	sp, r7
 8007eec:	f85d 7b04 	ldr.w	r7, [sp], #4
 8007ef0:	4770      	bx	lr
	...

08007ef4 <_ZN8touchgfx12NoTransitionD1Ev>:
 8007ef4:	b580      	push	{r7, lr}
 8007ef6:	b082      	sub	sp, #8
 8007ef8:	af00      	add	r7, sp, #0
 8007efa:	6078      	str	r0, [r7, #4]
 8007efc:	4a05      	ldr	r2, [pc, #20]	@ (8007f14 <_ZN8touchgfx12NoTransitionD1Ev+0x20>)
 8007efe:	687b      	ldr	r3, [r7, #4]
 8007f00:	601a      	str	r2, [r3, #0]
 8007f02:	687b      	ldr	r3, [r7, #4]
 8007f04:	4618      	mov	r0, r3
 8007f06:	f7ff fc2b 	bl	8007760 <_ZN8touchgfx10TransitionD1Ev>
 8007f0a:	687b      	ldr	r3, [r7, #4]
 8007f0c:	4618      	mov	r0, r3
 8007f0e:	3708      	adds	r7, #8
 8007f10:	46bd      	mov	sp, r7
 8007f12:	bd80      	pop	{r7, pc}
 8007f14:	08022978 	.word	0x08022978

08007f18 <_ZN8touchgfx12NoTransitionD0Ev>:
 8007f18:	b580      	push	{r7, lr}
 8007f1a:	b082      	sub	sp, #8
 8007f1c:	af00      	add	r7, sp, #0
 8007f1e:	6078      	str	r0, [r7, #4]
 8007f20:	6878      	ldr	r0, [r7, #4]
 8007f22:	f7ff ffe7 	bl	8007ef4 <_ZN8touchgfx12NoTransitionD1Ev>
 8007f26:	210c      	movs	r1, #12
 8007f28:	6878      	ldr	r0, [r7, #4]
 8007f2a:	f018 fc42 	bl	80207b2 <_ZdlPvj>
 8007f2e:	687b      	ldr	r3, [r7, #4]
 8007f30:	4618      	mov	r0, r3
 8007f32:	3708      	adds	r7, #8
 8007f34:	46bd      	mov	sp, r7
 8007f36:	bd80      	pop	{r7, pc}

08007f38 <_ZN8touchgfx8CallbackI23FrontendApplicationBasevvvED1Ev>:
struct Callback<dest_type, void, void, void> : public GenericCallback<>
 8007f38:	b580      	push	{r7, lr}
 8007f3a:	b082      	sub	sp, #8
 8007f3c:	af00      	add	r7, sp, #0
 8007f3e:	6078      	str	r0, [r7, #4]
 8007f40:	4a05      	ldr	r2, [pc, #20]	@ (8007f58 <_ZN8touchgfx8CallbackI23FrontendApplicationBasevvvED1Ev+0x20>)
 8007f42:	687b      	ldr	r3, [r7, #4]
 8007f44:	601a      	str	r2, [r3, #0]
 8007f46:	687b      	ldr	r3, [r7, #4]
 8007f48:	4618      	mov	r0, r3
 8007f4a:	f7ff fbab 	bl	80076a4 <_ZN8touchgfx15GenericCallbackIvvvED1Ev>
 8007f4e:	687b      	ldr	r3, [r7, #4]
 8007f50:	4618      	mov	r0, r3
 8007f52:	3708      	adds	r7, #8
 8007f54:	46bd      	mov	sp, r7
 8007f56:	bd80      	pop	{r7, pc}
 8007f58:	080229f0 	.word	0x080229f0

08007f5c <_ZN8touchgfx8CallbackI23FrontendApplicationBasevvvED0Ev>:
 8007f5c:	b580      	push	{r7, lr}
 8007f5e:	b082      	sub	sp, #8
 8007f60:	af00      	add	r7, sp, #0
 8007f62:	6078      	str	r0, [r7, #4]
 8007f64:	6878      	ldr	r0, [r7, #4]
 8007f66:	f7ff ffe7 	bl	8007f38 <_ZN8touchgfx8CallbackI23FrontendApplicationBasevvvED1Ev>
 8007f6a:	2110      	movs	r1, #16
 8007f6c:	6878      	ldr	r0, [r7, #4]
 8007f6e:	f018 fc20 	bl	80207b2 <_ZdlPvj>
 8007f72:	687b      	ldr	r3, [r7, #4]
 8007f74:	4618      	mov	r0, r3
 8007f76:	3708      	adds	r7, #8
 8007f78:	46bd      	mov	sp, r7
 8007f7a:	bd80      	pop	{r7, pc}

08007f7c <_ZN8touchgfx8CallbackI23FrontendApplicationBasevvvE7executeEv>:

    /**
     * Calls the member function. Do not call execute unless isValid() returns true (ie. a
     * pointer to the object and the function has been set).
     */
    virtual void execute()
 8007f7c:	b580      	push	{r7, lr}
 8007f7e:	b082      	sub	sp, #8
 8007f80:	af00      	add	r7, sp, #0
 8007f82:	6078      	str	r0, [r7, #4]
    {
        (pobject->*pmemfun)();
 8007f84:	687b      	ldr	r3, [r7, #4]
 8007f86:	685b      	ldr	r3, [r3, #4]
 8007f88:	687a      	ldr	r2, [r7, #4]
 8007f8a:	68d2      	ldr	r2, [r2, #12]
 8007f8c:	1052      	asrs	r2, r2, #1
 8007f8e:	1899      	adds	r1, r3, r2
 8007f90:	687b      	ldr	r3, [r7, #4]
 8007f92:	68db      	ldr	r3, [r3, #12]
 8007f94:	f003 0301 	and.w	r3, r3, #1
 8007f98:	2b00      	cmp	r3, #0
 8007f9a:	d102      	bne.n	8007fa2 <_ZN8touchgfx8CallbackI23FrontendApplicationBasevvvE7executeEv+0x26>
 8007f9c:	687b      	ldr	r3, [r7, #4]
 8007f9e:	689b      	ldr	r3, [r3, #8]
 8007fa0:	e00a      	b.n	8007fb8 <_ZN8touchgfx8CallbackI23FrontendApplicationBasevvvE7executeEv+0x3c>
 8007fa2:	687b      	ldr	r3, [r7, #4]
 8007fa4:	685b      	ldr	r3, [r3, #4]
 8007fa6:	687a      	ldr	r2, [r7, #4]
 8007fa8:	68d2      	ldr	r2, [r2, #12]
 8007faa:	1052      	asrs	r2, r2, #1
 8007fac:	4413      	add	r3, r2
 8007fae:	681b      	ldr	r3, [r3, #0]
 8007fb0:	687a      	ldr	r2, [r7, #4]
 8007fb2:	6892      	ldr	r2, [r2, #8]
 8007fb4:	4413      	add	r3, r2
 8007fb6:	681b      	ldr	r3, [r3, #0]
 8007fb8:	4608      	mov	r0, r1
 8007fba:	4798      	blx	r3
    }
 8007fbc:	bf00      	nop
 8007fbe:	3708      	adds	r7, #8
 8007fc0:	46bd      	mov	sp, r7
 8007fc2:	bd80      	pop	{r7, pc}

08007fc4 <_ZNK8touchgfx8CallbackI23FrontendApplicationBasevvvE7isValidEv>:
    /**
     * Function to check whether the Callback has been initialized with values.
     *
     * @return true If the callback is valid (i.e. safe to call execute).
     */
    virtual bool isValid() const
 8007fc4:	b480      	push	{r7}
 8007fc6:	b083      	sub	sp, #12
 8007fc8:	af00      	add	r7, sp, #0
 8007fca:	6078      	str	r0, [r7, #4]
    {
        return (pobject != 0) && (pmemfun != 0);
 8007fcc:	687b      	ldr	r3, [r7, #4]
 8007fce:	685b      	ldr	r3, [r3, #4]
 8007fd0:	2b00      	cmp	r3, #0
 8007fd2:	d010      	beq.n	8007ff6 <_ZNK8touchgfx8CallbackI23FrontendApplicationBasevvvE7isValidEv+0x32>
 8007fd4:	687b      	ldr	r3, [r7, #4]
 8007fd6:	689b      	ldr	r3, [r3, #8]
 8007fd8:	2b00      	cmp	r3, #0
 8007fda:	d107      	bne.n	8007fec <_ZNK8touchgfx8CallbackI23FrontendApplicationBasevvvE7isValidEv+0x28>
 8007fdc:	687b      	ldr	r3, [r7, #4]
 8007fde:	68db      	ldr	r3, [r3, #12]
 8007fe0:	f003 0301 	and.w	r3, r3, #1
 8007fe4:	2b00      	cmp	r3, #0
 8007fe6:	d101      	bne.n	8007fec <_ZNK8touchgfx8CallbackI23FrontendApplicationBasevvvE7isValidEv+0x28>
 8007fe8:	2301      	movs	r3, #1
 8007fea:	e000      	b.n	8007fee <_ZNK8touchgfx8CallbackI23FrontendApplicationBasevvvE7isValidEv+0x2a>
 8007fec:	2300      	movs	r3, #0
 8007fee:	2b01      	cmp	r3, #1
 8007ff0:	d001      	beq.n	8007ff6 <_ZNK8touchgfx8CallbackI23FrontendApplicationBasevvvE7isValidEv+0x32>
 8007ff2:	2301      	movs	r3, #1
 8007ff4:	e000      	b.n	8007ff8 <_ZNK8touchgfx8CallbackI23FrontendApplicationBasevvvE7isValidEv+0x34>
 8007ff6:	2300      	movs	r3, #0
    }
 8007ff8:	4618      	mov	r0, r3
 8007ffa:	370c      	adds	r7, #12
 8007ffc:	46bd      	mov	sp, r7
 8007ffe:	f85d 7b04 	ldr.w	r7, [sp], #4
 8008002:	4770      	bx	lr

08008004 <_ZN8touchgfx9colortypeC1Em>:
     *
     * @param  col The color.
     *
     * @see Color::getColorFromRGB
     */
    colortype(uint32_t col)
 8008004:	b480      	push	{r7}
 8008006:	b083      	sub	sp, #12
 8008008:	af00      	add	r7, sp, #0
 800800a:	6078      	str	r0, [r7, #4]
 800800c:	6039      	str	r1, [r7, #0]
        : color(col)
 800800e:	687b      	ldr	r3, [r7, #4]
 8008010:	683a      	ldr	r2, [r7, #0]
 8008012:	601a      	str	r2, [r3, #0]
    {
    }
 8008014:	687b      	ldr	r3, [r7, #4]
 8008016:	4618      	mov	r0, r3
 8008018:	370c      	adds	r7, #12
 800801a:	46bd      	mov	sp, r7
 800801c:	f85d 7b04 	ldr.w	r7, [sp], #4
 8008020:	4770      	bx	lr

08008022 <_ZN8touchgfx4RectC1Ev>:
/** Class representing a Rectangle with a few convenient methods. */
class Rect
{
public:
    /** Default constructor. Resulting in an empty Rect with coordinates 0,0. */
    Rect()
 8008022:	b480      	push	{r7}
 8008024:	b083      	sub	sp, #12
 8008026:	af00      	add	r7, sp, #0
 8008028:	6078      	str	r0, [r7, #4]
        : x(0), y(0), width(0), height(0)
 800802a:	687b      	ldr	r3, [r7, #4]
 800802c:	2200      	movs	r2, #0
 800802e:	801a      	strh	r2, [r3, #0]
 8008030:	687b      	ldr	r3, [r7, #4]
 8008032:	2200      	movs	r2, #0
 8008034:	805a      	strh	r2, [r3, #2]
 8008036:	687b      	ldr	r3, [r7, #4]
 8008038:	2200      	movs	r2, #0
 800803a:	809a      	strh	r2, [r3, #4]
 800803c:	687b      	ldr	r3, [r7, #4]
 800803e:	2200      	movs	r2, #0
 8008040:	80da      	strh	r2, [r3, #6]
    {
    }
 8008042:	687b      	ldr	r3, [r7, #4]
 8008044:	4618      	mov	r0, r3
 8008046:	370c      	adds	r7, #12
 8008048:	46bd      	mov	sp, r7
 800804a:	f85d 7b04 	ldr.w	r7, [sp], #4
 800804e:	4770      	bx	lr

08008050 <_ZN8touchgfx4RectC1Essss>:
     * @param  rectX      The x coordinate.
     * @param  rectY      The y coordinate.
     * @param  rectWidth  The width.
     * @param  rectHeight The height.
     */
    Rect(int16_t rectX, int16_t rectY, int16_t rectWidth, int16_t rectHeight)
 8008050:	b480      	push	{r7}
 8008052:	b085      	sub	sp, #20
 8008054:	af00      	add	r7, sp, #0
 8008056:	60f8      	str	r0, [r7, #12]
 8008058:	4608      	mov	r0, r1
 800805a:	4611      	mov	r1, r2
 800805c:	461a      	mov	r2, r3
 800805e:	4603      	mov	r3, r0
 8008060:	817b      	strh	r3, [r7, #10]
 8008062:	460b      	mov	r3, r1
 8008064:	813b      	strh	r3, [r7, #8]
 8008066:	4613      	mov	r3, r2
 8008068:	80fb      	strh	r3, [r7, #6]
        : x(rectX), y(rectY), width(rectWidth), height(rectHeight)
 800806a:	68fb      	ldr	r3, [r7, #12]
 800806c:	897a      	ldrh	r2, [r7, #10]
 800806e:	801a      	strh	r2, [r3, #0]
 8008070:	68fb      	ldr	r3, [r7, #12]
 8008072:	893a      	ldrh	r2, [r7, #8]
 8008074:	805a      	strh	r2, [r3, #2]
 8008076:	68fb      	ldr	r3, [r7, #12]
 8008078:	88fa      	ldrh	r2, [r7, #6]
 800807a:	809a      	strh	r2, [r3, #4]
 800807c:	68fb      	ldr	r3, [r7, #12]
 800807e:	8b3a      	ldrh	r2, [r7, #24]
 8008080:	80da      	strh	r2, [r3, #6]
    {
    }
 8008082:	68fb      	ldr	r3, [r7, #12]
 8008084:	4618      	mov	r0, r3
 8008086:	3714      	adds	r7, #20
 8008088:	46bd      	mov	sp, r7
 800808a:	f85d 7b04 	ldr.w	r7, [sp], #4
 800808e:	4770      	bx	lr

08008090 <_ZN8touchgfx6BitmapC1Et>:
     * Creates and binds a Bitmap instance to the corresponding entry in the BitmapData
     * array.
     *
     * @param  id (Optional) The unique bitmap identifier.
     */
    Bitmap(const BitmapId id = BITMAP_INVALID)
 8008090:	b480      	push	{r7}
 8008092:	b083      	sub	sp, #12
 8008094:	af00      	add	r7, sp, #0
 8008096:	6078      	str	r0, [r7, #4]
 8008098:	460b      	mov	r3, r1
 800809a:	807b      	strh	r3, [r7, #2]
        : bitmapId(id)
 800809c:	687b      	ldr	r3, [r7, #4]
 800809e:	887a      	ldrh	r2, [r7, #2]
 80080a0:	801a      	strh	r2, [r3, #0]
    {
    }
 80080a2:	687b      	ldr	r3, [r7, #4]
 80080a4:	4618      	mov	r0, r3
 80080a6:	370c      	adds	r7, #12
 80080a8:	46bd      	mov	sp, r7
 80080aa:	f85d 7b04 	ldr.w	r7, [sp], #4
 80080ae:	4770      	bx	lr

080080b0 <_ZN8touchgfx8DrawableC1Ev>:
 */
class Drawable
{
public:
    /** Initializes a new instance of the Drawable class. */
    Drawable()
 80080b0:	b580      	push	{r7, lr}
 80080b2:	b082      	sub	sp, #8
 80080b4:	af00      	add	r7, sp, #0
 80080b6:	6078      	str	r0, [r7, #4]
          nextSibling(0),
          nextDrawChainElement(0),
          cachedAbsX(0),
          cachedAbsY(0),
          touchable(false),
          visible(true)
 80080b8:	4a14      	ldr	r2, [pc, #80]	@ (800810c <_ZN8touchgfx8DrawableC1Ev+0x5c>)
 80080ba:	687b      	ldr	r3, [r7, #4]
 80080bc:	601a      	str	r2, [r3, #0]
        : rect(),
 80080be:	687b      	ldr	r3, [r7, #4]
 80080c0:	3304      	adds	r3, #4
 80080c2:	4618      	mov	r0, r3
 80080c4:	f7ff ffad 	bl	8008022 <_ZN8touchgfx4RectC1Ev>
          cachedVisibleRect(),
 80080c8:	687b      	ldr	r3, [r7, #4]
 80080ca:	330c      	adds	r3, #12
 80080cc:	4618      	mov	r0, r3
 80080ce:	f7ff ffa8 	bl	8008022 <_ZN8touchgfx4RectC1Ev>
          parent(0),
 80080d2:	687b      	ldr	r3, [r7, #4]
 80080d4:	2200      	movs	r2, #0
 80080d6:	615a      	str	r2, [r3, #20]
          nextSibling(0),
 80080d8:	687b      	ldr	r3, [r7, #4]
 80080da:	2200      	movs	r2, #0
 80080dc:	619a      	str	r2, [r3, #24]
          nextDrawChainElement(0),
 80080de:	687b      	ldr	r3, [r7, #4]
 80080e0:	2200      	movs	r2, #0
 80080e2:	61da      	str	r2, [r3, #28]
          cachedAbsX(0),
 80080e4:	687b      	ldr	r3, [r7, #4]
 80080e6:	2200      	movs	r2, #0
 80080e8:	841a      	strh	r2, [r3, #32]
          cachedAbsY(0),
 80080ea:	687b      	ldr	r3, [r7, #4]
 80080ec:	2200      	movs	r2, #0
 80080ee:	845a      	strh	r2, [r3, #34]	@ 0x22
          touchable(false),
 80080f0:	687b      	ldr	r3, [r7, #4]
 80080f2:	2200      	movs	r2, #0
 80080f4:	f883 2024 	strb.w	r2, [r3, #36]	@ 0x24
          visible(true)
 80080f8:	687b      	ldr	r3, [r7, #4]
 80080fa:	2201      	movs	r2, #1
 80080fc:	f883 2025 	strb.w	r2, [r3, #37]	@ 0x25
    {
    }
 8008100:	687b      	ldr	r3, [r7, #4]
 8008102:	4618      	mov	r0, r3
 8008104:	3708      	adds	r7, #8
 8008106:	46bd      	mov	sp, r7
 8008108:	bd80      	pop	{r7, pc}
 800810a:	bf00      	nop
 800810c:	08023774 	.word	0x08023774

08008110 <_ZN8touchgfx8DrawableD1Ev>:

    /** Finalizes an instance of the Drawable class. */
    virtual ~Drawable()
 8008110:	b480      	push	{r7}
 8008112:	b083      	sub	sp, #12
 8008114:	af00      	add	r7, sp, #0
 8008116:	6078      	str	r0, [r7, #4]
    {
 8008118:	4a04      	ldr	r2, [pc, #16]	@ (800812c <_ZN8touchgfx8DrawableD1Ev+0x1c>)
 800811a:	687b      	ldr	r3, [r7, #4]
 800811c:	601a      	str	r2, [r3, #0]
    }
 800811e:	687b      	ldr	r3, [r7, #4]
 8008120:	4618      	mov	r0, r3
 8008122:	370c      	adds	r7, #12
 8008124:	46bd      	mov	sp, r7
 8008126:	f85d 7b04 	ldr.w	r7, [sp], #4
 800812a:	4770      	bx	lr
 800812c:	08023774 	.word	0x08023774

08008130 <_ZN8touchgfx8DrawableD0Ev>:
    virtual ~Drawable()
 8008130:	b580      	push	{r7, lr}
 8008132:	b082      	sub	sp, #8
 8008134:	af00      	add	r7, sp, #0
 8008136:	6078      	str	r0, [r7, #4]
    }
 8008138:	6878      	ldr	r0, [r7, #4]
 800813a:	f7ff ffe9 	bl	8008110 <_ZN8touchgfx8DrawableD1Ev>
 800813e:	2128      	movs	r1, #40	@ 0x28
 8008140:	6878      	ldr	r0, [r7, #4]
 8008142:	f018 fb36 	bl	80207b2 <_ZdlPvj>
 8008146:	687b      	ldr	r3, [r7, #4]
 8008148:	4618      	mov	r0, r3
 800814a:	3708      	adds	r7, #8
 800814c:	46bd      	mov	sp, r7
 800814e:	bd80      	pop	{r7, pc}

08008150 <_ZNK8touchgfx8Drawable17invalidateContentEv>:
     * Tell the framework that the contents of the Drawable needs to be redrawn. If the Drawable is
     * invisible, nothing happens. Subclasses of Drawable are encouraged to implement this function
     * and invalidate as little as possible, i.e. the smallest rectangle covering the visual element(s)
     * drawn by the widget.
     */
    virtual void invalidateContent() const
 8008150:	b580      	push	{r7, lr}
 8008152:	b082      	sub	sp, #8
 8008154:	af00      	add	r7, sp, #0
 8008156:	6078      	str	r0, [r7, #4]
    {
        // Consider checking if *this is in the draw chain
        if (visible)
 8008158:	687b      	ldr	r3, [r7, #4]
 800815a:	f893 3025 	ldrb.w	r3, [r3, #37]	@ 0x25
 800815e:	2b00      	cmp	r3, #0
 8008160:	d005      	beq.n	800816e <_ZNK8touchgfx8Drawable17invalidateContentEv+0x1e>
        {
            invalidate();
 8008162:	687b      	ldr	r3, [r7, #4]
 8008164:	681b      	ldr	r3, [r3, #0]
 8008166:	3314      	adds	r3, #20
 8008168:	681b      	ldr	r3, [r3, #0]
 800816a:	6878      	ldr	r0, [r7, #4]
 800816c:	4798      	blx	r3
        }
    }
 800816e:	bf00      	nop
 8008170:	3708      	adds	r7, #8
 8008172:	46bd      	mov	sp, r7
 8008174:	bd80      	pop	{r7, pc}

08008176 <_ZN8touchgfx8Drawable13getFirstChildEv>:
     * Function for obtaining the first child of this drawable if any.
     *
     * @return A pointer on the first child drawable if any.
     * @see Container::getFirstChild
     */
    virtual Drawable* getFirstChild()
 8008176:	b480      	push	{r7}
 8008178:	b083      	sub	sp, #12
 800817a:	af00      	add	r7, sp, #0
 800817c:	6078      	str	r0, [r7, #4]
    {
        return 0;
 800817e:	2300      	movs	r3, #0
    }
 8008180:	4618      	mov	r0, r3
 8008182:	370c      	adds	r7, #12
 8008184:	46bd      	mov	sp, r7
 8008186:	f85d 7b04 	ldr.w	r7, [sp], #4
 800818a:	4770      	bx	lr

0800818c <_ZN8touchgfx8Drawable11setPositionEssss>:
     *
     * @note For most Drawable widgets, changing this does normally not automatically yield a redraw.
     *
     * @see setXY,setWidthHeight,setPosition(const Drawable&)
     */
    void setPosition(int16_t x, int16_t y, int16_t width, int16_t height)
 800818c:	b580      	push	{r7, lr}
 800818e:	b084      	sub	sp, #16
 8008190:	af00      	add	r7, sp, #0
 8008192:	60f8      	str	r0, [r7, #12]
 8008194:	4608      	mov	r0, r1
 8008196:	4611      	mov	r1, r2
 8008198:	461a      	mov	r2, r3
 800819a:	4603      	mov	r3, r0
 800819c:	817b      	strh	r3, [r7, #10]
 800819e:	460b      	mov	r3, r1
 80081a0:	813b      	strh	r3, [r7, #8]
 80081a2:	4613      	mov	r3, r2
 80081a4:	80fb      	strh	r3, [r7, #6]
    {
        setXY(x, y);
 80081a6:	f9b7 2008 	ldrsh.w	r2, [r7, #8]
 80081aa:	f9b7 300a 	ldrsh.w	r3, [r7, #10]
 80081ae:	4619      	mov	r1, r3
 80081b0:	68f8      	ldr	r0, [r7, #12]
 80081b2:	f000 f82a 	bl	800820a <_ZN8touchgfx8Drawable5setXYEss>
        setWidthHeight(width, height);
 80081b6:	f9b7 2018 	ldrsh.w	r2, [r7, #24]
 80081ba:	f9b7 3006 	ldrsh.w	r3, [r7, #6]
 80081be:	4619      	mov	r1, r3
 80081c0:	68f8      	ldr	r0, [r7, #12]
 80081c2:	f000 f87e 	bl	80082c2 <_ZN8touchgfx8Drawable14setWidthHeightEss>
    }
 80081c6:	bf00      	nop
 80081c8:	3710      	adds	r7, #16
 80081ca:	46bd      	mov	sp, r7
 80081cc:	bd80      	pop	{r7, pc}

080081ce <_ZN8touchgfx8Drawable4setXEs>:
     *
     * @param  x The new x value, relative to the parent. A negative value is allowed.
     *
     * @note For most Drawable widgets, changing this does normally not automatically yield a redraw.
     */
    virtual void setX(int16_t x)
 80081ce:	b480      	push	{r7}
 80081d0:	b083      	sub	sp, #12
 80081d2:	af00      	add	r7, sp, #0
 80081d4:	6078      	str	r0, [r7, #4]
 80081d6:	460b      	mov	r3, r1
 80081d8:	807b      	strh	r3, [r7, #2]
    {
        rect.x = x;
 80081da:	687b      	ldr	r3, [r7, #4]
 80081dc:	887a      	ldrh	r2, [r7, #2]
 80081de:	809a      	strh	r2, [r3, #4]
    }
 80081e0:	bf00      	nop
 80081e2:	370c      	adds	r7, #12
 80081e4:	46bd      	mov	sp, r7
 80081e6:	f85d 7b04 	ldr.w	r7, [sp], #4
 80081ea:	4770      	bx	lr

080081ec <_ZN8touchgfx8Drawable4setYEs>:
     *
     * @param  y The new y value, relative to the parent. A negative value is allowed.
     *
     * @note For most Drawable widgets, changing this does normally not automatically yield a redraw.
     */
    virtual void setY(int16_t y)
 80081ec:	b480      	push	{r7}
 80081ee:	b083      	sub	sp, #12
 80081f0:	af00      	add	r7, sp, #0
 80081f2:	6078      	str	r0, [r7, #4]
 80081f4:	460b      	mov	r3, r1
 80081f6:	807b      	strh	r3, [r7, #2]
    {
        rect.y = y;
 80081f8:	687b      	ldr	r3, [r7, #4]
 80081fa:	887a      	ldrh	r2, [r7, #2]
 80081fc:	80da      	strh	r2, [r3, #6]
    }
 80081fe:	bf00      	nop
 8008200:	370c      	adds	r7, #12
 8008202:	46bd      	mov	sp, r7
 8008204:	f85d 7b04 	ldr.w	r7, [sp], #4
 8008208:	4770      	bx	lr

0800820a <_ZN8touchgfx8Drawable5setXYEss>:
     *
     * @see moveTo
     *
     * @note For most Drawable widgets, changing this does normally not automatically yield a redraw.
     */
    void setXY(int16_t x, int16_t y)
 800820a:	b580      	push	{r7, lr}
 800820c:	b082      	sub	sp, #8
 800820e:	af00      	add	r7, sp, #0
 8008210:	6078      	str	r0, [r7, #4]
 8008212:	460b      	mov	r3, r1
 8008214:	807b      	strh	r3, [r7, #2]
 8008216:	4613      	mov	r3, r2
 8008218:	803b      	strh	r3, [r7, #0]
    {
        setX(x);
 800821a:	687b      	ldr	r3, [r7, #4]
 800821c:	681b      	ldr	r3, [r3, #0]
 800821e:	3330      	adds	r3, #48	@ 0x30
 8008220:	681b      	ldr	r3, [r3, #0]
 8008222:	f9b7 2002 	ldrsh.w	r2, [r7, #2]
 8008226:	4611      	mov	r1, r2
 8008228:	6878      	ldr	r0, [r7, #4]
 800822a:	4798      	blx	r3
        setY(y);
 800822c:	687b      	ldr	r3, [r7, #4]
 800822e:	681b      	ldr	r3, [r3, #0]
 8008230:	3334      	adds	r3, #52	@ 0x34
 8008232:	681b      	ldr	r3, [r3, #0]
 8008234:	f9b7 2000 	ldrsh.w	r2, [r7]
 8008238:	4611      	mov	r1, r2
 800823a:	6878      	ldr	r0, [r7, #4]
 800823c:	4798      	blx	r3
    }
 800823e:	bf00      	nop
 8008240:	3708      	adds	r7, #8
 8008242:	46bd      	mov	sp, r7
 8008244:	bd80      	pop	{r7, pc}

08008246 <_ZN8touchgfx8Drawable8setWidthEs>:
     *
     * @param  width The new width.
     *
     * @note For most Drawable widgets, changing this does normally not automatically yield a redraw.
     */
    virtual void setWidth(int16_t width)
 8008246:	b480      	push	{r7}
 8008248:	b083      	sub	sp, #12
 800824a:	af00      	add	r7, sp, #0
 800824c:	6078      	str	r0, [r7, #4]
 800824e:	460b      	mov	r3, r1
 8008250:	807b      	strh	r3, [r7, #2]
    {
        rect.width = width;
 8008252:	687b      	ldr	r3, [r7, #4]
 8008254:	887a      	ldrh	r2, [r7, #2]
 8008256:	811a      	strh	r2, [r3, #8]
    }
 8008258:	bf00      	nop
 800825a:	370c      	adds	r7, #12
 800825c:	46bd      	mov	sp, r7
 800825e:	f85d 7b04 	ldr.w	r7, [sp], #4
 8008262:	4770      	bx	lr

08008264 <_ZN8touchgfx8Drawable9setHeightEs>:
     *
     * @param  height The new height.
     *
     * @note For most Drawable widgets, changing this does normally not automatically yield a redraw.
     */
    virtual void setHeight(int16_t height)
 8008264:	b480      	push	{r7}
 8008266:	b083      	sub	sp, #12
 8008268:	af00      	add	r7, sp, #0
 800826a:	6078      	str	r0, [r7, #4]
 800826c:	460b      	mov	r3, r1
 800826e:	807b      	strh	r3, [r7, #2]
    {
        rect.height = height;
 8008270:	687b      	ldr	r3, [r7, #4]
 8008272:	887a      	ldrh	r2, [r7, #2]
 8008274:	815a      	strh	r2, [r3, #10]
    }
 8008276:	bf00      	nop
 8008278:	370c      	adds	r7, #12
 800827a:	46bd      	mov	sp, r7
 800827c:	f85d 7b04 	ldr.w	r7, [sp], #4
 8008280:	4770      	bx	lr

08008282 <_ZN8touchgfx8Drawable20childGeometryChangedEv>:
    /**
     * This function can be called on parent nodes to signal that the size or position of
     * one or more of its children has changed. Currently only used in ScrollableContainer
     * to redraw scrollbars when the size of the scrolling contents changes.
     */
    virtual void childGeometryChanged()
 8008282:	b480      	push	{r7}
 8008284:	b083      	sub	sp, #12
 8008286:	af00      	add	r7, sp, #0
 8008288:	6078      	str	r0, [r7, #4]
    {
    }
 800828a:	bf00      	nop
 800828c:	370c      	adds	r7, #12
 800828e:	46bd      	mov	sp, r7
 8008290:	f85d 7b04 	ldr.w	r7, [sp], #4
 8008294:	4770      	bx	lr

08008296 <_ZN8touchgfx8Drawable16handleClickEventERKNS_10ClickEventE>:
     * ignores the event. The event is only received if the Drawable is touchable and
     * visible.
     *
     * @param  event The ClickEvent received from the HAL.
     */
    virtual void handleClickEvent(const ClickEvent& event)
 8008296:	b480      	push	{r7}
 8008298:	b083      	sub	sp, #12
 800829a:	af00      	add	r7, sp, #0
 800829c:	6078      	str	r0, [r7, #4]
 800829e:	6039      	str	r1, [r7, #0]
    {
        (void)event; // Unused variable
    }
 80082a0:	bf00      	nop
 80082a2:	370c      	adds	r7, #12
 80082a4:	46bd      	mov	sp, r7
 80082a6:	f85d 7b04 	ldr.w	r7, [sp], #4
 80082aa:	4770      	bx	lr

080082ac <_ZN8touchgfx8Drawable18handleGestureEventERKNS_12GestureEventE>:
     * ignores the event. The event is only received if the Drawable is touchable and
     * visible.
     *
     * @param  event The GestureEvent received from the HAL.
     */
    virtual void handleGestureEvent(const GestureEvent& event)
 80082ac:	b480      	push	{r7}
 80082ae:	b083      	sub	sp, #12
 80082b0:	af00      	add	r7, sp, #0
 80082b2:	6078      	str	r0, [r7, #4]
 80082b4:	6039      	str	r1, [r7, #0]
    {
        (void)event; // Unused variable
    }
 80082b6:	bf00      	nop
 80082b8:	370c      	adds	r7, #12
 80082ba:	46bd      	mov	sp, r7
 80082bc:	f85d 7b04 	ldr.w	r7, [sp], #4
 80082c0:	4770      	bx	lr

080082c2 <_ZN8touchgfx8Drawable14setWidthHeightEss>:
     * coordinates).
     *
     * @param  width  The width.
     * @param  height The height.
     */
    void setWidthHeight(int16_t width, int16_t height)
 80082c2:	b580      	push	{r7, lr}
 80082c4:	b082      	sub	sp, #8
 80082c6:	af00      	add	r7, sp, #0
 80082c8:	6078      	str	r0, [r7, #4]
 80082ca:	460b      	mov	r3, r1
 80082cc:	807b      	strh	r3, [r7, #2]
 80082ce:	4613      	mov	r3, r2
 80082d0:	803b      	strh	r3, [r7, #0]
    {
        setWidth(width);
 80082d2:	687b      	ldr	r3, [r7, #4]
 80082d4:	681b      	ldr	r3, [r3, #0]
 80082d6:	3338      	adds	r3, #56	@ 0x38
 80082d8:	681b      	ldr	r3, [r3, #0]
 80082da:	f9b7 2002 	ldrsh.w	r2, [r7, #2]
 80082de:	4611      	mov	r1, r2
 80082e0:	6878      	ldr	r0, [r7, #4]
 80082e2:	4798      	blx	r3
        setHeight(height);
 80082e4:	687b      	ldr	r3, [r7, #4]
 80082e6:	681b      	ldr	r3, [r3, #0]
 80082e8:	333c      	adds	r3, #60	@ 0x3c
 80082ea:	681b      	ldr	r3, [r3, #0]
 80082ec:	f9b7 2000 	ldrsh.w	r2, [r7]
 80082f0:	4611      	mov	r1, r2
 80082f2:	6878      	ldr	r0, [r7, #4]
 80082f4:	4798      	blx	r3
    }
 80082f6:	bf00      	nop
 80082f8:	3708      	adds	r7, #8
 80082fa:	46bd      	mov	sp, r7
 80082fc:	bd80      	pop	{r7, pc}

080082fe <_ZN8touchgfx8Drawable15handleDragEventERKNS_9DragEventE>:
     * ignores the event. The event is only received if the drawable is touchable and
     * visible.
     *
     * @param  event The DragEvent received from the HAL.
     */
    virtual void handleDragEvent(const DragEvent& event)
 80082fe:	b480      	push	{r7}
 8008300:	b083      	sub	sp, #12
 8008302:	af00      	add	r7, sp, #0
 8008304:	6078      	str	r0, [r7, #4]
 8008306:	6039      	str	r1, [r7, #0]
    {
        (void)event; // Unused variable
    }
 8008308:	bf00      	nop
 800830a:	370c      	adds	r7, #12
 800830c:	46bd      	mov	sp, r7
 800830e:	f85d 7b04 	ldr.w	r7, [sp], #4
 8008312:	4770      	bx	lr

08008314 <_ZN8touchgfx8Drawable15handleTickEventEv>:
     * Called periodically by the framework if the Drawable instance has subscribed to timer
     * ticks.
     *
     * @see Application::registerTimerWidget
     */
    virtual void handleTickEvent()
 8008314:	b480      	push	{r7}
 8008316:	b083      	sub	sp, #12
 8008318:	af00      	add	r7, sp, #0
 800831a:	6078      	str	r0, [r7, #4]
    {
    }
 800831c:	bf00      	nop
 800831e:	370c      	adds	r7, #12
 8008320:	46bd      	mov	sp, r7
 8008322:	f85d 7b04 	ldr.w	r7, [sp], #4
 8008326:	4770      	bx	lr

08008328 <_ZN8touchgfx8Drawable12setTouchableEb>:
    /**
     * Controls whether this Drawable receives touch events or not.
     *
     * @param  touch If true it will receive touch events, if false it will not.
     */
    void setTouchable(bool touch)
 8008328:	b480      	push	{r7}
 800832a:	b083      	sub	sp, #12
 800832c:	af00      	add	r7, sp, #0
 800832e:	6078      	str	r0, [r7, #4]
 8008330:	460b      	mov	r3, r1
 8008332:	70fb      	strb	r3, [r7, #3]
    {
        touchable = touch;
 8008334:	687b      	ldr	r3, [r7, #4]
 8008336:	78fa      	ldrb	r2, [r7, #3]
 8008338:	f883 2024 	strb.w	r2, [r3, #36]	@ 0x24
    }
 800833c:	bf00      	nop
 800833e:	370c      	adds	r7, #12
 8008340:	46bd      	mov	sp, r7
 8008342:	f85d 7b04 	ldr.w	r7, [sp], #4
 8008346:	4770      	bx	lr

08008348 <_ZNK8touchgfx8Drawable9isVisibleEv>:
     *
     * @return true if the Drawable is visible.
     *
     * @see setVisible
     */
    bool isVisible() const
 8008348:	b480      	push	{r7}
 800834a:	b083      	sub	sp, #12
 800834c:	af00      	add	r7, sp, #0
 800834e:	6078      	str	r0, [r7, #4]
    {
        return visible;
 8008350:	687b      	ldr	r3, [r7, #4]
 8008352:	f893 3025 	ldrb.w	r3, [r3, #37]	@ 0x25
    }
 8008356:	4618      	mov	r0, r3
 8008358:	370c      	adds	r7, #12
 800835a:	46bd      	mov	sp, r7
 800835c:	f85d 7b04 	ldr.w	r7, [sp], #4
 8008360:	4770      	bx	lr

08008362 <_ZNK8touchgfx8Drawable11isTouchableEv>:
     *
     * @return True if touch events are received.
     *
     * @see setTouchable
     */
    bool isTouchable() const
 8008362:	b480      	push	{r7}
 8008364:	b083      	sub	sp, #12
 8008366:	af00      	add	r7, sp, #0
 8008368:	6078      	str	r0, [r7, #4]
    {
        return touchable;
 800836a:	687b      	ldr	r3, [r7, #4]
 800836c:	f893 3024 	ldrb.w	r3, [r3, #36]	@ 0x24
    }
 8008370:	4618      	mov	r0, r3
 8008372:	370c      	adds	r7, #12
 8008374:	46bd      	mov	sp, r7
 8008376:	f85d 7b04 	ldr.w	r7, [sp], #4
 800837a:	4770      	bx	lr

0800837c <_ZN8touchgfx8Drawable6moveToEss>:
     *
     * @see moveRelative, setXY
     *
     * @note Will redraw the appropriate areas of the screen.
     */
    virtual void moveTo(int16_t x, int16_t y)
 800837c:	b580      	push	{r7, lr}
 800837e:	b082      	sub	sp, #8
 8008380:	af00      	add	r7, sp, #0
 8008382:	6078      	str	r0, [r7, #4]
 8008384:	460b      	mov	r3, r1
 8008386:	807b      	strh	r3, [r7, #2]
 8008388:	4613      	mov	r3, r2
 800838a:	803b      	strh	r3, [r7, #0]
    {
        moveRelative(x - rect.x, y - rect.y);
 800838c:	687b      	ldr	r3, [r7, #4]
 800838e:	681b      	ldr	r3, [r3, #0]
 8008390:	3354      	adds	r3, #84	@ 0x54
 8008392:	681b      	ldr	r3, [r3, #0]
 8008394:	8879      	ldrh	r1, [r7, #2]
 8008396:	687a      	ldr	r2, [r7, #4]
 8008398:	f9b2 2004 	ldrsh.w	r2, [r2, #4]
 800839c:	b292      	uxth	r2, r2
 800839e:	1a8a      	subs	r2, r1, r2
 80083a0:	b292      	uxth	r2, r2
 80083a2:	b210      	sxth	r0, r2
 80083a4:	8839      	ldrh	r1, [r7, #0]
 80083a6:	687a      	ldr	r2, [r7, #4]
 80083a8:	f9b2 2006 	ldrsh.w	r2, [r2, #6]
 80083ac:	b292      	uxth	r2, r2
 80083ae:	1a8a      	subs	r2, r1, r2
 80083b0:	b292      	uxth	r2, r2
 80083b2:	b212      	sxth	r2, r2
 80083b4:	4601      	mov	r1, r0
 80083b6:	6878      	ldr	r0, [r7, #4]
 80083b8:	4798      	blx	r3
    }
 80083ba:	bf00      	nop
 80083bc:	3708      	adds	r7, #8
 80083be:	46bd      	mov	sp, r7
 80083c0:	bd80      	pop	{r7, pc}

080083c2 <_ZN8touchgfx8Drawable19resetDrawChainCacheEv>:
     *
     * Reset cached coordinate data.
     *
     * @note For TouchGFX internal use only.
     */
    void resetDrawChainCache()
 80083c2:	b480      	push	{r7}
 80083c4:	b083      	sub	sp, #12
 80083c6:	af00      	add	r7, sp, #0
 80083c8:	6078      	str	r0, [r7, #4]
    {
        // Resetting the cached indicators
        cachedVisibleRect.x = UNCACHED_INDICATOR;
 80083ca:	687b      	ldr	r3, [r7, #4]
 80083cc:	f64f 72ff 	movw	r2, #65535	@ 0xffff
 80083d0:	819a      	strh	r2, [r3, #12]
        cachedAbsX = UNCACHED_INDICATOR;
 80083d2:	687b      	ldr	r3, [r7, #4]
 80083d4:	f64f 72ff 	movw	r2, #65535	@ 0xffff
 80083d8:	841a      	strh	r2, [r3, #32]
        cachedAbsY = UNCACHED_INDICATOR;
 80083da:	687b      	ldr	r3, [r7, #4]
 80083dc:	f64f 72ff 	movw	r2, #65535	@ 0xffff
 80083e0:	845a      	strh	r2, [r3, #34]	@ 0x22
    }
 80083e2:	bf00      	nop
 80083e4:	370c      	adds	r7, #12
 80083e6:	46bd      	mov	sp, r7
 80083e8:	f85d 7b04 	ldr.w	r7, [sp], #4
 80083ec:	4770      	bx	lr

080083ee <_ZN8touchgfx8Drawable14setupDrawChainERKNS_4RectEPPS0_>:
     * @param          invalidatedArea     Include drawables that intersect with this area only.
     * @param [in,out] nextPreviousElement Modifiable element in linked list.
     *
     * @note For TouchGFX internal use only.
     */
    virtual void setupDrawChain(const Rect& invalidatedArea, Drawable** nextPreviousElement)
 80083ee:	b580      	push	{r7, lr}
 80083f0:	b084      	sub	sp, #16
 80083f2:	af00      	add	r7, sp, #0
 80083f4:	60f8      	str	r0, [r7, #12]
 80083f6:	60b9      	str	r1, [r7, #8]
 80083f8:	607a      	str	r2, [r7, #4]
    {
        (void)invalidatedArea; // Unused variable
        resetDrawChainCache();
 80083fa:	68f8      	ldr	r0, [r7, #12]
 80083fc:	f7ff ffe1 	bl	80083c2 <_ZN8touchgfx8Drawable19resetDrawChainCacheEv>
        nextDrawChainElement = *nextPreviousElement;
 8008400:	687b      	ldr	r3, [r7, #4]
 8008402:	681a      	ldr	r2, [r3, #0]
 8008404:	68fb      	ldr	r3, [r7, #12]
 8008406:	61da      	str	r2, [r3, #28]
        *nextPreviousElement = this;
 8008408:	687b      	ldr	r3, [r7, #4]
 800840a:	68fa      	ldr	r2, [r7, #12]
 800840c:	601a      	str	r2, [r3, #0]
    }
 800840e:	bf00      	nop
 8008410:	3710      	adds	r7, #16
 8008412:	46bd      	mov	sp, r7
 8008414:	bd80      	pop	{r7, pc}

08008416 <_ZN8touchgfx6Widget12getLastChildEssPPNS_8DrawableE>:
     * Since a Widget is only one Drawable, Widget::getLastChild simply yields itself as
     * result, but only if the Widget isVisible and isTouchable.
     *
     * @param [out] last Result, the address of the actual instance of the Widget.
     */
    virtual void getLastChild(int16_t /*x*/, int16_t /*y*/, Drawable** last)
 8008416:	b580      	push	{r7, lr}
 8008418:	b084      	sub	sp, #16
 800841a:	af00      	add	r7, sp, #0
 800841c:	60f8      	str	r0, [r7, #12]
 800841e:	607b      	str	r3, [r7, #4]
 8008420:	460b      	mov	r3, r1
 8008422:	817b      	strh	r3, [r7, #10]
 8008424:	4613      	mov	r3, r2
 8008426:	813b      	strh	r3, [r7, #8]
    {
        if (isVisible() && isTouchable())
 8008428:	68fb      	ldr	r3, [r7, #12]
 800842a:	4618      	mov	r0, r3
 800842c:	f7ff ff8c 	bl	8008348 <_ZNK8touchgfx8Drawable9isVisibleEv>
 8008430:	4603      	mov	r3, r0
 8008432:	2b00      	cmp	r3, #0
 8008434:	d008      	beq.n	8008448 <_ZN8touchgfx6Widget12getLastChildEssPPNS_8DrawableE+0x32>
 8008436:	68fb      	ldr	r3, [r7, #12]
 8008438:	4618      	mov	r0, r3
 800843a:	f7ff ff92 	bl	8008362 <_ZNK8touchgfx8Drawable11isTouchableEv>
 800843e:	4603      	mov	r3, r0
 8008440:	2b00      	cmp	r3, #0
 8008442:	d001      	beq.n	8008448 <_ZN8touchgfx6Widget12getLastChildEssPPNS_8DrawableE+0x32>
 8008444:	2301      	movs	r3, #1
 8008446:	e000      	b.n	800844a <_ZN8touchgfx6Widget12getLastChildEssPPNS_8DrawableE+0x34>
 8008448:	2300      	movs	r3, #0
 800844a:	2b00      	cmp	r3, #0
 800844c:	d002      	beq.n	8008454 <_ZN8touchgfx6Widget12getLastChildEssPPNS_8DrawableE+0x3e>
        {
            *last = this;
 800844e:	68fa      	ldr	r2, [r7, #12]
 8008450:	687b      	ldr	r3, [r7, #4]
 8008452:	601a      	str	r2, [r3, #0]
        }
    }
 8008454:	bf00      	nop
 8008456:	3710      	adds	r7, #16
 8008458:	46bd      	mov	sp, r7
 800845a:	bd80      	pop	{r7, pc}

0800845c <_ZN8touchgfx6ScreenD1Ev>:
public:
    /** Initializes a new instance of the Screen class. */
    Screen();

    /** Finalizes an instance of the Screen class. */
    virtual ~Screen()
 800845c:	b580      	push	{r7, lr}
 800845e:	b082      	sub	sp, #8
 8008460:	af00      	add	r7, sp, #0
 8008462:	6078      	str	r0, [r7, #4]
    {
 8008464:	4a06      	ldr	r2, [pc, #24]	@ (8008480 <_ZN8touchgfx6ScreenD1Ev+0x24>)
 8008466:	687b      	ldr	r3, [r7, #4]
 8008468:	601a      	str	r2, [r3, #0]
    }
 800846a:	687b      	ldr	r3, [r7, #4]
 800846c:	3304      	adds	r3, #4
 800846e:	4618      	mov	r0, r3
 8008470:	f000 fdce 	bl	8009010 <_ZN8touchgfx9ContainerD1Ev>
 8008474:	687b      	ldr	r3, [r7, #4]
 8008476:	4618      	mov	r0, r3
 8008478:	3708      	adds	r7, #8
 800847a:	46bd      	mov	sp, r7
 800847c:	bd80      	pop	{r7, pc}
 800847e:	bf00      	nop
 8008480:	08023880 	.word	0x08023880

08008484 <_ZN8touchgfx6ScreenD0Ev>:
    virtual ~Screen()
 8008484:	b580      	push	{r7, lr}
 8008486:	b082      	sub	sp, #8
 8008488:	af00      	add	r7, sp, #0
 800848a:	6078      	str	r0, [r7, #4]
    }
 800848c:	6878      	ldr	r0, [r7, #4]
 800848e:	f7ff ffe5 	bl	800845c <_ZN8touchgfx6ScreenD1Ev>
 8008492:	213c      	movs	r1, #60	@ 0x3c
 8008494:	6878      	ldr	r0, [r7, #4]
 8008496:	f018 f98c 	bl	80207b2 <_ZdlPvj>
 800849a:	687b      	ldr	r3, [r7, #4]
 800849c:	4618      	mov	r0, r3
 800849e:	3708      	adds	r7, #8
 80084a0:	46bd      	mov	sp, r7
 80084a2:	bd80      	pop	{r7, pc}

080084a4 <_ZN8touchgfx6Screen11setupScreenEv>:
     * version does nothing, but place any screen specific initialization code in an
     * overridden version.
     *
     * @see Application::switchScreen
     */
    virtual void setupScreen()
 80084a4:	b480      	push	{r7}
 80084a6:	b083      	sub	sp, #12
 80084a8:	af00      	add	r7, sp, #0
 80084aa:	6078      	str	r0, [r7, #4]
    {
    }
 80084ac:	bf00      	nop
 80084ae:	370c      	adds	r7, #12
 80084b0:	46bd      	mov	sp, r7
 80084b2:	f85d 7b04 	ldr.w	r7, [sp], #4
 80084b6:	4770      	bx	lr

080084b8 <_ZN8touchgfx6Screen15afterTransitionEv>:
     * version does nothing, but override to do screen specific initialization code that has
     * to be done after the transition to the screen.
     *
     * @see Application::handleTickEvent
     */
    virtual void afterTransition()
 80084b8:	b480      	push	{r7}
 80084ba:	b083      	sub	sp, #12
 80084bc:	af00      	add	r7, sp, #0
 80084be:	6078      	str	r0, [r7, #4]
    {
    }
 80084c0:	bf00      	nop
 80084c2:	370c      	adds	r7, #12
 80084c4:	46bd      	mov	sp, r7
 80084c6:	f85d 7b04 	ldr.w	r7, [sp], #4
 80084ca:	4770      	bx	lr

080084cc <_ZN8touchgfx6Screen14tearDownScreenEv>:
     * Base version does nothing, but place any screen specific cleanup code in an
     * overridden version.
     *
     * @see Application::switchScreen
     */
    virtual void tearDownScreen()
 80084cc:	b480      	push	{r7}
 80084ce:	b083      	sub	sp, #12
 80084d0:	af00      	add	r7, sp, #0
 80084d2:	6078      	str	r0, [r7, #4]
    {
    }
 80084d4:	bf00      	nop
 80084d6:	370c      	adds	r7, #12
 80084d8:	46bd      	mov	sp, r7
 80084da:	f85d 7b04 	ldr.w	r7, [sp], #4
 80084de:	4770      	bx	lr

080084e0 <_ZN8touchgfx6Screen15handleTickEventEv>:

    /**
     * Called by the Application on the current screen with a frequency of
     * Application::TICK_INTERVAL_MS.
     */
    virtual void handleTickEvent()
 80084e0:	b480      	push	{r7}
 80084e2:	b083      	sub	sp, #12
 80084e4:	af00      	add	r7, sp, #0
 80084e6:	6078      	str	r0, [r7, #4]
    {
    }
 80084e8:	bf00      	nop
 80084ea:	370c      	adds	r7, #12
 80084ec:	46bd      	mov	sp, r7
 80084ee:	f85d 7b04 	ldr.w	r7, [sp], #4
 80084f2:	4770      	bx	lr

080084f4 <_ZN8touchgfx6Screen14handleKeyEventEh>:
     * Called by the Application on the reception of a "key", the meaning of which is
     * platform/application specific. Default implementation does nothing.
     *
     * @param  key The key to handle.
     */
    virtual void handleKeyEvent(uint8_t key)
 80084f4:	b480      	push	{r7}
 80084f6:	b083      	sub	sp, #12
 80084f8:	af00      	add	r7, sp, #0
 80084fa:	6078      	str	r0, [r7, #4]
 80084fc:	460b      	mov	r3, r1
 80084fe:	70fb      	strb	r3, [r7, #3]
    {
        (void)key; // Unused variable
    }
 8008500:	bf00      	nop
 8008502:	370c      	adds	r7, #12
 8008504:	46bd      	mov	sp, r7
 8008506:	f85d 7b04 	ldr.w	r7, [sp], #4
 800850a:	4770      	bx	lr

0800850c <_ZN8touchgfx6Screen3addERNS_8DrawableE>:
     * @param [in] d The Drawable to add.
     *
     * @note Must not be called with a Drawable that was already added to the screen. If in doubt,
     *       call remove() first.
     */
    void add(Drawable& d)
 800850c:	b580      	push	{r7, lr}
 800850e:	b082      	sub	sp, #8
 8008510:	af00      	add	r7, sp, #0
 8008512:	6078      	str	r0, [r7, #4]
 8008514:	6039      	str	r1, [r7, #0]
    {
        container.add(d);
 8008516:	687b      	ldr	r3, [r7, #4]
 8008518:	3304      	adds	r3, #4
 800851a:	6839      	ldr	r1, [r7, #0]
 800851c:	4618      	mov	r0, r3
 800851e:	f003 fa71 	bl	800ba04 <_ZN8touchgfx9Container3addERNS_8DrawableE>
    }
 8008522:	bf00      	nop
 8008524:	3708      	adds	r7, #8
 8008526:	46bd      	mov	sp, r7
 8008528:	bd80      	pop	{r7, pc}
	...

0800852c <_ZN8touchgfx6WidgetC1Ev>:
class Widget : public Drawable
 800852c:	b580      	push	{r7, lr}
 800852e:	b082      	sub	sp, #8
 8008530:	af00      	add	r7, sp, #0
 8008532:	6078      	str	r0, [r7, #4]
 8008534:	687b      	ldr	r3, [r7, #4]
 8008536:	4618      	mov	r0, r3
 8008538:	f7ff fdba 	bl	80080b0 <_ZN8touchgfx8DrawableC1Ev>
 800853c:	4a03      	ldr	r2, [pc, #12]	@ (800854c <_ZN8touchgfx6WidgetC1Ev+0x20>)
 800853e:	687b      	ldr	r3, [r7, #4]
 8008540:	601a      	str	r2, [r3, #0]
 8008542:	687b      	ldr	r3, [r7, #4]
 8008544:	4618      	mov	r0, r3
 8008546:	3708      	adds	r7, #8
 8008548:	46bd      	mov	sp, r7
 800854a:	bd80      	pop	{r7, pc}
 800854c:	08022bec 	.word	0x08022bec

08008550 <_ZN8touchgfx6WidgetD1Ev>:
 8008550:	b580      	push	{r7, lr}
 8008552:	b082      	sub	sp, #8
 8008554:	af00      	add	r7, sp, #0
 8008556:	6078      	str	r0, [r7, #4]
 8008558:	4a05      	ldr	r2, [pc, #20]	@ (8008570 <_ZN8touchgfx6WidgetD1Ev+0x20>)
 800855a:	687b      	ldr	r3, [r7, #4]
 800855c:	601a      	str	r2, [r3, #0]
 800855e:	687b      	ldr	r3, [r7, #4]
 8008560:	4618      	mov	r0, r3
 8008562:	f7ff fdd5 	bl	8008110 <_ZN8touchgfx8DrawableD1Ev>
 8008566:	687b      	ldr	r3, [r7, #4]
 8008568:	4618      	mov	r0, r3
 800856a:	3708      	adds	r7, #8
 800856c:	46bd      	mov	sp, r7
 800856e:	bd80      	pop	{r7, pc}
 8008570:	08022bec 	.word	0x08022bec

08008574 <_ZN8touchgfx6WidgetD0Ev>:
 8008574:	b580      	push	{r7, lr}
 8008576:	b082      	sub	sp, #8
 8008578:	af00      	add	r7, sp, #0
 800857a:	6078      	str	r0, [r7, #4]
 800857c:	6878      	ldr	r0, [r7, #4]
 800857e:	f7ff ffe7 	bl	8008550 <_ZN8touchgfx6WidgetD1Ev>
 8008582:	2128      	movs	r1, #40	@ 0x28
 8008584:	6878      	ldr	r0, [r7, #4]
 8008586:	f018 f914 	bl	80207b2 <_ZdlPvj>
 800858a:	687b      	ldr	r3, [r7, #4]
 800858c:	4618      	mov	r0, r3
 800858e:	3708      	adds	r7, #8
 8008590:	46bd      	mov	sp, r7
 8008592:	bd80      	pop	{r7, pc}

08008594 <_ZN8touchgfx3BoxC1Ev>:
 */
class Box : public Widget
{
public:
    /** Construct a new Box with a default alpha value of 255 (solid) */
    Box()
 8008594:	b580      	push	{r7, lr}
 8008596:	b082      	sub	sp, #8
 8008598:	af00      	add	r7, sp, #0
 800859a:	6078      	str	r0, [r7, #4]
        : Widget(), alpha(255), color(0)
 800859c:	687b      	ldr	r3, [r7, #4]
 800859e:	4618      	mov	r0, r3
 80085a0:	2326      	movs	r3, #38	@ 0x26
 80085a2:	461a      	mov	r2, r3
 80085a4:	2100      	movs	r1, #0
 80085a6:	f018 fb3a 	bl	8020c1e <memset>
 80085aa:	687b      	ldr	r3, [r7, #4]
 80085ac:	4618      	mov	r0, r3
 80085ae:	f7ff ffbd 	bl	800852c <_ZN8touchgfx6WidgetC1Ev>
 80085b2:	4a09      	ldr	r2, [pc, #36]	@ (80085d8 <_ZN8touchgfx3BoxC1Ev+0x44>)
 80085b4:	687b      	ldr	r3, [r7, #4]
 80085b6:	601a      	str	r2, [r3, #0]
 80085b8:	687b      	ldr	r3, [r7, #4]
 80085ba:	22ff      	movs	r2, #255	@ 0xff
 80085bc:	f883 2026 	strb.w	r2, [r3, #38]	@ 0x26
 80085c0:	687b      	ldr	r3, [r7, #4]
 80085c2:	3328      	adds	r3, #40	@ 0x28
 80085c4:	2100      	movs	r1, #0
 80085c6:	4618      	mov	r0, r3
 80085c8:	f7ff fd1c 	bl	8008004 <_ZN8touchgfx9colortypeC1Em>
    {
    }
 80085cc:	687b      	ldr	r3, [r7, #4]
 80085ce:	4618      	mov	r0, r3
 80085d0:	3708      	adds	r7, #8
 80085d2:	46bd      	mov	sp, r7
 80085d4:	bd80      	pop	{r7, pc}
 80085d6:	bf00      	nop
 80085d8:	0802355c 	.word	0x0802355c

080085dc <_ZN8touchgfx3Box8setColorENS_9colortypeE>:
     *
     * @param  newColor The color of the box.
     *
     * @see getColor, Color::getColorFromRGB
     */
    void setColor(colortype newColor)
 80085dc:	b480      	push	{r7}
 80085de:	b083      	sub	sp, #12
 80085e0:	af00      	add	r7, sp, #0
 80085e2:	6078      	str	r0, [r7, #4]
 80085e4:	6039      	str	r1, [r7, #0]
    {
        color = newColor;
 80085e6:	687b      	ldr	r3, [r7, #4]
 80085e8:	683a      	ldr	r2, [r7, #0]
 80085ea:	629a      	str	r2, [r3, #40]	@ 0x28
    }
 80085ec:	bf00      	nop
 80085ee:	370c      	adds	r7, #12
 80085f0:	46bd      	mov	sp, r7
 80085f2:	f85d 7b04 	ldr.w	r7, [sp], #4
 80085f6:	4770      	bx	lr

080085f8 <_ZN8touchgfx14AbstractButtonC1Ev>:
 */
class AbstractButton : public Widget
{
public:
    /** Sets this Widget touchable so the user can interact with buttons. */
    AbstractButton()
 80085f8:	b580      	push	{r7, lr}
 80085fa:	b082      	sub	sp, #8
 80085fc:	af00      	add	r7, sp, #0
 80085fe:	6078      	str	r0, [r7, #4]
        : Widget(), action(), pressed(false)
 8008600:	687b      	ldr	r3, [r7, #4]
 8008602:	4618      	mov	r0, r3
 8008604:	2326      	movs	r3, #38	@ 0x26
 8008606:	461a      	mov	r2, r3
 8008608:	2100      	movs	r1, #0
 800860a:	f018 fb08 	bl	8020c1e <memset>
 800860e:	687b      	ldr	r3, [r7, #4]
 8008610:	4618      	mov	r0, r3
 8008612:	f7ff ff8b 	bl	800852c <_ZN8touchgfx6WidgetC1Ev>
 8008616:	4a0a      	ldr	r2, [pc, #40]	@ (8008640 <_ZN8touchgfx14AbstractButtonC1Ev+0x48>)
 8008618:	687b      	ldr	r3, [r7, #4]
 800861a:	601a      	str	r2, [r3, #0]
 800861c:	687b      	ldr	r3, [r7, #4]
 800861e:	2200      	movs	r2, #0
 8008620:	629a      	str	r2, [r3, #40]	@ 0x28
 8008622:	687b      	ldr	r3, [r7, #4]
 8008624:	2200      	movs	r2, #0
 8008626:	f883 202c 	strb.w	r2, [r3, #44]	@ 0x2c
    {
        setTouchable(true);
 800862a:	687b      	ldr	r3, [r7, #4]
 800862c:	2101      	movs	r1, #1
 800862e:	4618      	mov	r0, r3
 8008630:	f7ff fe7a 	bl	8008328 <_ZN8touchgfx8Drawable12setTouchableEb>
    }
 8008634:	687b      	ldr	r3, [r7, #4]
 8008636:	4618      	mov	r0, r3
 8008638:	3708      	adds	r7, #8
 800863a:	46bd      	mov	sp, r7
 800863c:	bd80      	pop	{r7, pc}
 800863e:	bf00      	nop
 8008640:	080233e8 	.word	0x080233e8

08008644 <_ZN8touchgfx14AbstractButton9setActionERNS_15GenericCallbackIRKS0_vvEE>:
     * @param  callback The callback to be executed. The callback will be executed with a
     *                  reference to the AbstractButton.
     *
     * @see GenericCallback, handleClickEvent, ClickEvent
     */
    void setAction(GenericCallback<const AbstractButton&>& callback)
 8008644:	b480      	push	{r7}
 8008646:	b083      	sub	sp, #12
 8008648:	af00      	add	r7, sp, #0
 800864a:	6078      	str	r0, [r7, #4]
 800864c:	6039      	str	r1, [r7, #0]
    {
        action = &callback;
 800864e:	687b      	ldr	r3, [r7, #4]
 8008650:	683a      	ldr	r2, [r7, #0]
 8008652:	629a      	str	r2, [r3, #40]	@ 0x28
    }
 8008654:	bf00      	nop
 8008656:	370c      	adds	r7, #12
 8008658:	46bd      	mov	sp, r7
 800865a:	f85d 7b04 	ldr.w	r7, [sp], #4
 800865e:	4770      	bx	lr

08008660 <_ZN8touchgfx14AbstractButtonD1Ev>:
class AbstractButton : public Widget
 8008660:	b580      	push	{r7, lr}
 8008662:	b082      	sub	sp, #8
 8008664:	af00      	add	r7, sp, #0
 8008666:	6078      	str	r0, [r7, #4]
 8008668:	4a05      	ldr	r2, [pc, #20]	@ (8008680 <_ZN8touchgfx14AbstractButtonD1Ev+0x20>)
 800866a:	687b      	ldr	r3, [r7, #4]
 800866c:	601a      	str	r2, [r3, #0]
 800866e:	687b      	ldr	r3, [r7, #4]
 8008670:	4618      	mov	r0, r3
 8008672:	f7ff ff6d 	bl	8008550 <_ZN8touchgfx6WidgetD1Ev>
 8008676:	687b      	ldr	r3, [r7, #4]
 8008678:	4618      	mov	r0, r3
 800867a:	3708      	adds	r7, #8
 800867c:	46bd      	mov	sp, r7
 800867e:	bd80      	pop	{r7, pc}
 8008680:	080233e8 	.word	0x080233e8

08008684 <_ZN8touchgfx14AbstractButtonD0Ev>:
 8008684:	b580      	push	{r7, lr}
 8008686:	b082      	sub	sp, #8
 8008688:	af00      	add	r7, sp, #0
 800868a:	6078      	str	r0, [r7, #4]
 800868c:	6878      	ldr	r0, [r7, #4]
 800868e:	f7ff ffe7 	bl	8008660 <_ZN8touchgfx14AbstractButtonD1Ev>
 8008692:	2130      	movs	r1, #48	@ 0x30
 8008694:	6878      	ldr	r0, [r7, #4]
 8008696:	f018 f88c 	bl	80207b2 <_ZdlPvj>
 800869a:	687b      	ldr	r3, [r7, #4]
 800869c:	4618      	mov	r0, r3
 800869e:	3708      	adds	r7, #8
 80086a0:	46bd      	mov	sp, r7
 80086a2:	bd80      	pop	{r7, pc}

080086a4 <_ZN8touchgfx6ButtonC1Ev>:
 * pressed state.
 */
class Button : public AbstractButton
{
public:
    Button()
 80086a4:	b580      	push	{r7, lr}
 80086a6:	b082      	sub	sp, #8
 80086a8:	af00      	add	r7, sp, #0
 80086aa:	6078      	str	r0, [r7, #4]
        : AbstractButton(), up(), down(), alpha(255)
 80086ac:	687b      	ldr	r3, [r7, #4]
 80086ae:	4618      	mov	r0, r3
 80086b0:	f7ff ffa2 	bl	80085f8 <_ZN8touchgfx14AbstractButtonC1Ev>
 80086b4:	4a0c      	ldr	r2, [pc, #48]	@ (80086e8 <_ZN8touchgfx6ButtonC1Ev+0x44>)
 80086b6:	687b      	ldr	r3, [r7, #4]
 80086b8:	601a      	str	r2, [r3, #0]
 80086ba:	687b      	ldr	r3, [r7, #4]
 80086bc:	332e      	adds	r3, #46	@ 0x2e
 80086be:	f64f 71ff 	movw	r1, #65535	@ 0xffff
 80086c2:	4618      	mov	r0, r3
 80086c4:	f7ff fce4 	bl	8008090 <_ZN8touchgfx6BitmapC1Et>
 80086c8:	687b      	ldr	r3, [r7, #4]
 80086ca:	3330      	adds	r3, #48	@ 0x30
 80086cc:	f64f 71ff 	movw	r1, #65535	@ 0xffff
 80086d0:	4618      	mov	r0, r3
 80086d2:	f7ff fcdd 	bl	8008090 <_ZN8touchgfx6BitmapC1Et>
 80086d6:	687b      	ldr	r3, [r7, #4]
 80086d8:	22ff      	movs	r2, #255	@ 0xff
 80086da:	f883 2032 	strb.w	r2, [r3, #50]	@ 0x32
    {
    }
 80086de:	687b      	ldr	r3, [r7, #4]
 80086e0:	4618      	mov	r0, r3
 80086e2:	3708      	adds	r7, #8
 80086e4:	46bd      	mov	sp, r7
 80086e6:	bd80      	pop	{r7, pc}
 80086e8:	080235c4 	.word	0x080235c4

080086ec <_ZN8touchgfx12ToggleButton10setBitmapsERKNS_6BitmapES3_>:
 * when it is subsequently pressed, it will pop back out.
 */
class ToggleButton : public Button
{
public:
    virtual void setBitmaps(const Bitmap& bitmapReleased, const Bitmap& bitmapPressed)
 80086ec:	b580      	push	{r7, lr}
 80086ee:	b084      	sub	sp, #16
 80086f0:	af00      	add	r7, sp, #0
 80086f2:	60f8      	str	r0, [r7, #12]
 80086f4:	60b9      	str	r1, [r7, #8]
 80086f6:	607a      	str	r2, [r7, #4]
    {
        originalPressed = bitmapPressed;
 80086f8:	68fb      	ldr	r3, [r7, #12]
 80086fa:	687a      	ldr	r2, [r7, #4]
 80086fc:	8812      	ldrh	r2, [r2, #0]
 80086fe:	869a      	strh	r2, [r3, #52]	@ 0x34
        Button::setBitmaps(bitmapReleased, bitmapPressed);
 8008700:	68fb      	ldr	r3, [r7, #12]
 8008702:	687a      	ldr	r2, [r7, #4]
 8008704:	68b9      	ldr	r1, [r7, #8]
 8008706:	4618      	mov	r0, r3
 8008708:	f004 ff10 	bl	800d52c <_ZN8touchgfx6Button10setBitmapsERKNS_6BitmapES3_>
    }
 800870c:	bf00      	nop
 800870e:	3710      	adds	r7, #16
 8008710:	46bd      	mov	sp, r7
 8008712:	bd80      	pop	{r7, pc}

08008714 <_ZN8touchgfx9TypedTextC1Et>:
    TypedText(const TypedTextId id = TYPED_TEXT_INVALID)
 8008714:	b480      	push	{r7}
 8008716:	b083      	sub	sp, #12
 8008718:	af00      	add	r7, sp, #0
 800871a:	6078      	str	r0, [r7, #4]
 800871c:	460b      	mov	r3, r1
 800871e:	807b      	strh	r3, [r7, #2]
        : typedTextId(id)
 8008720:	4a06      	ldr	r2, [pc, #24]	@ (800873c <_ZN8touchgfx9TypedTextC1Et+0x28>)
 8008722:	687b      	ldr	r3, [r7, #4]
 8008724:	601a      	str	r2, [r3, #0]
 8008726:	687b      	ldr	r3, [r7, #4]
 8008728:	887a      	ldrh	r2, [r7, #2]
 800872a:	809a      	strh	r2, [r3, #4]
    }
 800872c:	687b      	ldr	r3, [r7, #4]
 800872e:	4618      	mov	r0, r3
 8008730:	370c      	adds	r7, #12
 8008732:	46bd      	mov	sp, r7
 8008734:	f85d 7b04 	ldr.w	r7, [sp], #4
 8008738:	4770      	bx	lr
 800873a:	bf00      	nop
 800873c:	08022900 	.word	0x08022900

08008740 <_ZN8touchgfx8TextAreaC1Ev>:
 *       the pointer remains valid when drawing.
 */
class TextArea : public Widget
{
public:
    TextArea()
 8008740:	b580      	push	{r7, lr}
 8008742:	b082      	sub	sp, #8
 8008744:	af00      	add	r7, sp, #0
 8008746:	6078      	str	r0, [r7, #4]
        : Widget(), typedText(TYPED_TEXT_INVALID), color(0), linespace(0), alpha(255), indentation(0), rotation(TEXT_ROTATE_0), wideTextAction(WIDE_TEXT_NONE), boundingArea()
 8008748:	687b      	ldr	r3, [r7, #4]
 800874a:	4618      	mov	r0, r3
 800874c:	2326      	movs	r3, #38	@ 0x26
 800874e:	461a      	mov	r2, r3
 8008750:	2100      	movs	r1, #0
 8008752:	f018 fa64 	bl	8020c1e <memset>
 8008756:	687b      	ldr	r3, [r7, #4]
 8008758:	4618      	mov	r0, r3
 800875a:	f7ff fee7 	bl	800852c <_ZN8touchgfx6WidgetC1Ev>
 800875e:	4a16      	ldr	r2, [pc, #88]	@ (80087b8 <_ZN8touchgfx8TextAreaC1Ev+0x78>)
 8008760:	687b      	ldr	r3, [r7, #4]
 8008762:	601a      	str	r2, [r3, #0]
 8008764:	687b      	ldr	r3, [r7, #4]
 8008766:	3328      	adds	r3, #40	@ 0x28
 8008768:	f64f 71ff 	movw	r1, #65535	@ 0xffff
 800876c:	4618      	mov	r0, r3
 800876e:	f7ff ffd1 	bl	8008714 <_ZN8touchgfx9TypedTextC1Et>
 8008772:	687b      	ldr	r3, [r7, #4]
 8008774:	3330      	adds	r3, #48	@ 0x30
 8008776:	2100      	movs	r1, #0
 8008778:	4618      	mov	r0, r3
 800877a:	f7ff fc43 	bl	8008004 <_ZN8touchgfx9colortypeC1Em>
 800877e:	687b      	ldr	r3, [r7, #4]
 8008780:	2200      	movs	r2, #0
 8008782:	869a      	strh	r2, [r3, #52]	@ 0x34
 8008784:	687b      	ldr	r3, [r7, #4]
 8008786:	22ff      	movs	r2, #255	@ 0xff
 8008788:	f883 2036 	strb.w	r2, [r3, #54]	@ 0x36
 800878c:	687b      	ldr	r3, [r7, #4]
 800878e:	2200      	movs	r2, #0
 8008790:	f883 2037 	strb.w	r2, [r3, #55]	@ 0x37
 8008794:	687b      	ldr	r3, [r7, #4]
 8008796:	2200      	movs	r2, #0
 8008798:	f883 2038 	strb.w	r2, [r3, #56]	@ 0x38
 800879c:	687b      	ldr	r3, [r7, #4]
 800879e:	2200      	movs	r2, #0
 80087a0:	f883 2039 	strb.w	r2, [r3, #57]	@ 0x39
 80087a4:	687b      	ldr	r3, [r7, #4]
 80087a6:	333c      	adds	r3, #60	@ 0x3c
 80087a8:	4618      	mov	r0, r3
 80087aa:	f000 f8f0 	bl	800898e <_ZN8touchgfx8TextArea12BoundingAreaC1Ev>
    {
    }
 80087ae:	687b      	ldr	r3, [r7, #4]
 80087b0:	4618      	mov	r0, r3
 80087b2:	3708      	adds	r7, #8
 80087b4:	46bd      	mov	sp, r7
 80087b6:	bd80      	pop	{r7, pc}
 80087b8:	080234cc 	.word	0x080234cc

080087bc <_ZN8touchgfx8TextArea8setWidthEs>:

    virtual void setWidth(int16_t width)
 80087bc:	b590      	push	{r4, r7, lr}
 80087be:	b087      	sub	sp, #28
 80087c0:	af00      	add	r7, sp, #0
 80087c2:	6178      	str	r0, [r7, #20]
 80087c4:	460b      	mov	r3, r1
 80087c6:	827b      	strh	r3, [r7, #18]
    {
        Widget::setWidth(width);
 80087c8:	697b      	ldr	r3, [r7, #20]
 80087ca:	f9b7 2012 	ldrsh.w	r2, [r7, #18]
 80087ce:	4611      	mov	r1, r2
 80087d0:	4618      	mov	r0, r3
 80087d2:	f7ff fd38 	bl	8008246 <_ZN8touchgfx8Drawable8setWidthEs>
        boundingArea = calculateBoundingArea();
 80087d6:	697b      	ldr	r3, [r7, #20]
 80087d8:	681b      	ldr	r3, [r3, #0]
 80087da:	3384      	adds	r3, #132	@ 0x84
 80087dc:	681b      	ldr	r3, [r3, #0]
 80087de:	697c      	ldr	r4, [r7, #20]
 80087e0:	463a      	mov	r2, r7
 80087e2:	6979      	ldr	r1, [r7, #20]
 80087e4:	4610      	mov	r0, r2
 80087e6:	4798      	blx	r3
 80087e8:	f104 033c 	add.w	r3, r4, #60	@ 0x3c
 80087ec:	463a      	mov	r2, r7
 80087ee:	ca07      	ldmia	r2, {r0, r1, r2}
 80087f0:	e883 0007 	stmia.w	r3, {r0, r1, r2}
    }
 80087f4:	bf00      	nop
 80087f6:	371c      	adds	r7, #28
 80087f8:	46bd      	mov	sp, r7
 80087fa:	bd90      	pop	{r4, r7, pc}

080087fc <_ZN8touchgfx8TextArea9setHeightEs>:

    virtual void setHeight(int16_t height)
 80087fc:	b590      	push	{r4, r7, lr}
 80087fe:	b087      	sub	sp, #28
 8008800:	af00      	add	r7, sp, #0
 8008802:	6178      	str	r0, [r7, #20]
 8008804:	460b      	mov	r3, r1
 8008806:	827b      	strh	r3, [r7, #18]
    {
        Widget::setHeight(height);
 8008808:	697b      	ldr	r3, [r7, #20]
 800880a:	f9b7 2012 	ldrsh.w	r2, [r7, #18]
 800880e:	4611      	mov	r1, r2
 8008810:	4618      	mov	r0, r3
 8008812:	f7ff fd27 	bl	8008264 <_ZN8touchgfx8Drawable9setHeightEs>
        boundingArea = calculateBoundingArea();
 8008816:	697b      	ldr	r3, [r7, #20]
 8008818:	681b      	ldr	r3, [r3, #0]
 800881a:	3384      	adds	r3, #132	@ 0x84
 800881c:	681b      	ldr	r3, [r3, #0]
 800881e:	697c      	ldr	r4, [r7, #20]
 8008820:	463a      	mov	r2, r7
 8008822:	6979      	ldr	r1, [r7, #20]
 8008824:	4610      	mov	r0, r2
 8008826:	4798      	blx	r3
 8008828:	f104 033c 	add.w	r3, r4, #60	@ 0x3c
 800882c:	463a      	mov	r2, r7
 800882e:	ca07      	ldmia	r2, {r0, r1, r2}
 8008830:	e883 0007 	stmia.w	r3, {r0, r1, r2}
    }
 8008834:	bf00      	nop
 8008836:	371c      	adds	r7, #28
 8008838:	46bd      	mov	sp, r7
 800883a:	bd90      	pop	{r4, r7, pc}

0800883c <_ZNK8touchgfx8TextArea12getSolidRectEv>:

    virtual Rect getSolidRect() const
 800883c:	b580      	push	{r7, lr}
 800883e:	b082      	sub	sp, #8
 8008840:	af00      	add	r7, sp, #0
 8008842:	6078      	str	r0, [r7, #4]
 8008844:	6039      	str	r1, [r7, #0]
    {
        return Rect();
 8008846:	6878      	ldr	r0, [r7, #4]
 8008848:	f7ff fbeb 	bl	8008022 <_ZN8touchgfx4RectC1Ev>
    }
 800884c:	6878      	ldr	r0, [r7, #4]
 800884e:	3708      	adds	r7, #8
 8008850:	46bd      	mov	sp, r7
 8008852:	bd80      	pop	{r7, pc}

08008854 <_ZN8touchgfx8TextArea8setAlphaEh>:
    }

    /**
     * @copydoc Image::setAlpha
     */
    virtual void setAlpha(uint8_t newAlpha)
 8008854:	b480      	push	{r7}
 8008856:	b083      	sub	sp, #12
 8008858:	af00      	add	r7, sp, #0
 800885a:	6078      	str	r0, [r7, #4]
 800885c:	460b      	mov	r3, r1
 800885e:	70fb      	strb	r3, [r7, #3]
    {
        alpha = newAlpha;
 8008860:	687b      	ldr	r3, [r7, #4]
 8008862:	78fa      	ldrb	r2, [r7, #3]
 8008864:	f883 2036 	strb.w	r2, [r3, #54]	@ 0x36
    }
 8008868:	bf00      	nop
 800886a:	370c      	adds	r7, #12
 800886c:	46bd      	mov	sp, r7
 800886e:	f85d 7b04 	ldr.w	r7, [sp], #4
 8008872:	4770      	bx	lr

08008874 <_ZN8touchgfx8TextArea12setBaselineYEs>:
     *
     * @param  baselineY The y coordinate of the baseline of the text.
     *
     * @note setTypedText() must be called prior to setting the baseline.
     */
    virtual void setBaselineY(int16_t baselineY)
 8008874:	b5f0      	push	{r4, r5, r6, r7, lr}
 8008876:	b085      	sub	sp, #20
 8008878:	af00      	add	r7, sp, #0
 800887a:	6078      	str	r0, [r7, #4]
 800887c:	460b      	mov	r3, r1
 800887e:	807b      	strh	r3, [r7, #2]
    {
        setY(baselineY - getTypedText().getFont()->getBaseline());
 8008880:	687e      	ldr	r6, [r7, #4]
 8008882:	687b      	ldr	r3, [r7, #4]
 8008884:	681b      	ldr	r3, [r3, #0]
 8008886:	3334      	adds	r3, #52	@ 0x34
 8008888:	681c      	ldr	r4, [r3, #0]
 800888a:	887d      	ldrh	r5, [r7, #2]
 800888c:	6878      	ldr	r0, [r7, #4]
 800888e:	f000 f867 	bl	8008960 <_ZNK8touchgfx8TextArea12getTypedTextEv>
 8008892:	4603      	mov	r3, r0
 8008894:	60fb      	str	r3, [r7, #12]
     *
     * @return The font.
     */
    FORCE_INLINE_FUNCTION const Font* getFont() const
    {
        assert(typedTexts != 0 && "TypedText database has not been initialized.");
 8008896:	4b1c      	ldr	r3, [pc, #112]	@ (8008908 <_ZN8touchgfx8TextArea12setBaselineYEs+0x94>)
 8008898:	681b      	ldr	r3, [r3, #0]
 800889a:	2b00      	cmp	r3, #0
 800889c:	d105      	bne.n	80088aa <_ZN8touchgfx8TextArea12setBaselineYEs+0x36>
 800889e:	4b1b      	ldr	r3, [pc, #108]	@ (800890c <_ZN8touchgfx8TextArea12setBaselineYEs+0x98>)
 80088a0:	4a1b      	ldr	r2, [pc, #108]	@ (8008910 <_ZN8touchgfx8TextArea12setBaselineYEs+0x9c>)
 80088a2:	216c      	movs	r1, #108	@ 0x6c
 80088a4:	481b      	ldr	r0, [pc, #108]	@ (8008914 <_ZN8touchgfx8TextArea12setBaselineYEs+0xa0>)
 80088a6:	f017 ffb3 	bl	8020810 <__assert_func>
 80088aa:	68fb      	ldr	r3, [r7, #12]
 80088ac:	60bb      	str	r3, [r7, #8]
        return typedTextId < numberOfTypedTexts;
 80088ae:	68bb      	ldr	r3, [r7, #8]
 80088b0:	889a      	ldrh	r2, [r3, #4]
 80088b2:	4b19      	ldr	r3, [pc, #100]	@ (8008918 <_ZN8touchgfx8TextArea12setBaselineYEs+0xa4>)
 80088b4:	881b      	ldrh	r3, [r3, #0]
 80088b6:	429a      	cmp	r2, r3
 80088b8:	bf34      	ite	cc
 80088ba:	2301      	movcc	r3, #1
 80088bc:	2300      	movcs	r3, #0
 80088be:	b2db      	uxtb	r3, r3
        assert(hasValidId() && "typedTextId larger than numberOfTypedTexts.");
 80088c0:	2b00      	cmp	r3, #0
 80088c2:	d105      	bne.n	80088d0 <_ZN8touchgfx8TextArea12setBaselineYEs+0x5c>
 80088c4:	4b15      	ldr	r3, [pc, #84]	@ (800891c <_ZN8touchgfx8TextArea12setBaselineYEs+0xa8>)
 80088c6:	4a12      	ldr	r2, [pc, #72]	@ (8008910 <_ZN8touchgfx8TextArea12setBaselineYEs+0x9c>)
 80088c8:	216d      	movs	r1, #109	@ 0x6d
 80088ca:	4812      	ldr	r0, [pc, #72]	@ (8008914 <_ZN8touchgfx8TextArea12setBaselineYEs+0xa0>)
 80088cc:	f017 ffa0 	bl	8020810 <__assert_func>
        return fonts[typedTexts[typedTextId].fontIdx];
 80088d0:	4b13      	ldr	r3, [pc, #76]	@ (8008920 <_ZN8touchgfx8TextArea12setBaselineYEs+0xac>)
 80088d2:	681a      	ldr	r2, [r3, #0]
 80088d4:	4b0c      	ldr	r3, [pc, #48]	@ (8008908 <_ZN8touchgfx8TextArea12setBaselineYEs+0x94>)
 80088d6:	6819      	ldr	r1, [r3, #0]
 80088d8:	68fb      	ldr	r3, [r7, #12]
 80088da:	889b      	ldrh	r3, [r3, #4]
 80088dc:	005b      	lsls	r3, r3, #1
 80088de:	440b      	add	r3, r1
 80088e0:	781b      	ldrb	r3, [r3, #0]
 80088e2:	009b      	lsls	r3, r3, #2
 80088e4:	4413      	add	r3, r2
 80088e6:	681b      	ldr	r3, [r3, #0]
 80088e8:	681a      	ldr	r2, [r3, #0]
 80088ea:	3230      	adds	r2, #48	@ 0x30
 80088ec:	6812      	ldr	r2, [r2, #0]
 80088ee:	4618      	mov	r0, r3
 80088f0:	4790      	blx	r2
 80088f2:	4603      	mov	r3, r0
 80088f4:	1aeb      	subs	r3, r5, r3
 80088f6:	b29b      	uxth	r3, r3
 80088f8:	b21b      	sxth	r3, r3
 80088fa:	4619      	mov	r1, r3
 80088fc:	4630      	mov	r0, r6
 80088fe:	47a0      	blx	r4
    }
 8008900:	bf00      	nop
 8008902:	3714      	adds	r7, #20
 8008904:	46bd      	mov	sp, r7
 8008906:	bdf0      	pop	{r4, r5, r6, r7, pc}
 8008908:	20002cac 	.word	0x20002cac
 800890c:	08021b58 	.word	0x08021b58
 8008910:	08021b9c 	.word	0x08021b9c
 8008914:	08021bd8 	.word	0x08021bd8
 8008918:	20002cb0 	.word	0x20002cb0
 800891c:	08021c1c 	.word	0x08021c1c
 8008920:	20002cb4 	.word	0x20002cb4

08008924 <_ZN8touchgfx8TextArea13setXBaselineYEss>:
     * @param  x         The x coordinate of the TextArea.
     * @param  baselineY The y coordinate of the baseline of the text.
     *
     * @note setTypedText() must be called prior to setting the baseline.
     */
    virtual void setXBaselineY(int16_t x, int16_t baselineY)
 8008924:	b580      	push	{r7, lr}
 8008926:	b082      	sub	sp, #8
 8008928:	af00      	add	r7, sp, #0
 800892a:	6078      	str	r0, [r7, #4]
 800892c:	460b      	mov	r3, r1
 800892e:	807b      	strh	r3, [r7, #2]
 8008930:	4613      	mov	r3, r2
 8008932:	803b      	strh	r3, [r7, #0]
    {
        setX(x);
 8008934:	687a      	ldr	r2, [r7, #4]
 8008936:	687b      	ldr	r3, [r7, #4]
 8008938:	681b      	ldr	r3, [r3, #0]
 800893a:	3330      	adds	r3, #48	@ 0x30
 800893c:	681b      	ldr	r3, [r3, #0]
 800893e:	f9b7 1002 	ldrsh.w	r1, [r7, #2]
 8008942:	4610      	mov	r0, r2
 8008944:	4798      	blx	r3
        setBaselineY(baselineY);
 8008946:	687b      	ldr	r3, [r7, #4]
 8008948:	681b      	ldr	r3, [r3, #0]
 800894a:	3364      	adds	r3, #100	@ 0x64
 800894c:	681b      	ldr	r3, [r3, #0]
 800894e:	f9b7 2000 	ldrsh.w	r2, [r7]
 8008952:	4611      	mov	r1, r2
 8008954:	6878      	ldr	r0, [r7, #4]
 8008956:	4798      	blx	r3
    }
 8008958:	bf00      	nop
 800895a:	3708      	adds	r7, #8
 800895c:	46bd      	mov	sp, r7
 800895e:	bd80      	pop	{r7, pc}

08008960 <_ZNK8touchgfx8TextArea12getTypedTextEv>:
    /**
     * Gets the TypedText of the text area.
     *
     * @return The currently used TypedText.
     */
    const TypedText& getTypedText() const
 8008960:	b480      	push	{r7}
 8008962:	b083      	sub	sp, #12
 8008964:	af00      	add	r7, sp, #0
 8008966:	6078      	str	r0, [r7, #4]
    {
        return typedText;
 8008968:	687b      	ldr	r3, [r7, #4]
 800896a:	3328      	adds	r3, #40	@ 0x28
    }
 800896c:	4618      	mov	r0, r3
 800896e:	370c      	adds	r7, #12
 8008970:	46bd      	mov	sp, r7
 8008972:	f85d 7b04 	ldr.w	r7, [sp], #4
 8008976:	4770      	bx	lr

08008978 <_ZNK8touchgfx8TextArea12getWildcard2Ev>:
     *
     * @return A pointer to the second wildcard, if this text area has two wildcards, otherwise 0.
     *
     * @see TextAreaWithOneWildcard, TextAreaWithTwoWildcards
     */
    virtual const Unicode::UnicodeChar* getWildcard2() const
 8008978:	b480      	push	{r7}
 800897a:	b083      	sub	sp, #12
 800897c:	af00      	add	r7, sp, #0
 800897e:	6078      	str	r0, [r7, #4]
    {
        return 0;
 8008980:	2300      	movs	r3, #0
    }
 8008982:	4618      	mov	r0, r3
 8008984:	370c      	adds	r7, #12
 8008986:	46bd      	mov	sp, r7
 8008988:	f85d 7b04 	ldr.w	r7, [sp], #4
 800898c:	4770      	bx	lr

0800898e <_ZN8touchgfx8TextArea12BoundingAreaC1Ev>:
        }

        /**
         * Initializes a new instance of the BoundingArea class which is invalid by default.
         */
        BoundingArea()
 800898e:	b580      	push	{r7, lr}
 8008990:	b084      	sub	sp, #16
 8008992:	af02      	add	r7, sp, #8
 8008994:	6078      	str	r0, [r7, #4]
            : rect(Rect(0, 0, -1, -1)), // Negative width and height means invalid rectangle
 8008996:	6878      	ldr	r0, [r7, #4]
 8008998:	f04f 33ff 	mov.w	r3, #4294967295
 800899c:	9300      	str	r3, [sp, #0]
 800899e:	f04f 33ff 	mov.w	r3, #4294967295
 80089a2:	2200      	movs	r2, #0
 80089a4:	2100      	movs	r1, #0
 80089a6:	f7ff fb53 	bl	8008050 <_ZN8touchgfx4RectC1Essss>
              text(0)
 80089aa:	687b      	ldr	r3, [r7, #4]
 80089ac:	2200      	movs	r2, #0
 80089ae:	609a      	str	r2, [r3, #8]
        {
        }
 80089b0:	687b      	ldr	r3, [r7, #4]
 80089b2:	4618      	mov	r0, r3
 80089b4:	3708      	adds	r7, #8
 80089b6:	46bd      	mov	sp, r7
 80089b8:	bd80      	pop	{r7, pc}
	...

080089bc <_ZN8touchgfx8TextAreaD1Ev>:
class TextArea : public Widget
 80089bc:	b580      	push	{r7, lr}
 80089be:	b082      	sub	sp, #8
 80089c0:	af00      	add	r7, sp, #0
 80089c2:	6078      	str	r0, [r7, #4]
 80089c4:	4a08      	ldr	r2, [pc, #32]	@ (80089e8 <_ZN8touchgfx8TextAreaD1Ev+0x2c>)
 80089c6:	687b      	ldr	r3, [r7, #4]
 80089c8:	601a      	str	r2, [r3, #0]
 80089ca:	687b      	ldr	r3, [r7, #4]
 80089cc:	3328      	adds	r3, #40	@ 0x28
 80089ce:	4618      	mov	r0, r3
 80089d0:	f7fe fc36 	bl	8007240 <_ZN8touchgfx9TypedTextD1Ev>
 80089d4:	687b      	ldr	r3, [r7, #4]
 80089d6:	4618      	mov	r0, r3
 80089d8:	f7ff fdba 	bl	8008550 <_ZN8touchgfx6WidgetD1Ev>
 80089dc:	687b      	ldr	r3, [r7, #4]
 80089de:	4618      	mov	r0, r3
 80089e0:	3708      	adds	r7, #8
 80089e2:	46bd      	mov	sp, r7
 80089e4:	bd80      	pop	{r7, pc}
 80089e6:	bf00      	nop
 80089e8:	080234cc 	.word	0x080234cc

080089ec <_ZN8touchgfx8TextAreaD0Ev>:
 80089ec:	b580      	push	{r7, lr}
 80089ee:	b082      	sub	sp, #8
 80089f0:	af00      	add	r7, sp, #0
 80089f2:	6078      	str	r0, [r7, #4]
 80089f4:	6878      	ldr	r0, [r7, #4]
 80089f6:	f7ff ffe1 	bl	80089bc <_ZN8touchgfx8TextAreaD1Ev>
 80089fa:	2148      	movs	r1, #72	@ 0x48
 80089fc:	6878      	ldr	r0, [r7, #4]
 80089fe:	f017 fed8 	bl	80207b2 <_ZdlPvj>
 8008a02:	687b      	ldr	r3, [r7, #4]
 8008a04:	4618      	mov	r0, r3
 8008a06:	3708      	adds	r7, #8
 8008a08:	46bd      	mov	sp, r7
 8008a0a:	bd80      	pop	{r7, pc}

08008a0c <_ZN8touchgfx24TextAreaWithWildcardBaseC1Ev>:
 *
 */
class TextAreaWithWildcardBase : public TextArea
{
public:
    TextAreaWithWildcardBase()
 8008a0c:	b580      	push	{r7, lr}
 8008a0e:	b082      	sub	sp, #8
 8008a10:	af00      	add	r7, sp, #0
 8008a12:	6078      	str	r0, [r7, #4]
        : TextArea()
 8008a14:	687b      	ldr	r3, [r7, #4]
 8008a16:	4618      	mov	r0, r3
 8008a18:	f7ff fe92 	bl	8008740 <_ZN8touchgfx8TextAreaC1Ev>
 8008a1c:	4a03      	ldr	r2, [pc, #12]	@ (8008a2c <_ZN8touchgfx24TextAreaWithWildcardBaseC1Ev+0x20>)
 8008a1e:	687b      	ldr	r3, [r7, #4]
 8008a20:	601a      	str	r2, [r3, #0]
    {
    }
 8008a22:	687b      	ldr	r3, [r7, #4]
 8008a24:	4618      	mov	r0, r3
 8008a26:	3708      	adds	r7, #8
 8008a28:	46bd      	mov	sp, r7
 8008a2a:	bd80      	pop	{r7, pc}
 8008a2c:	08023638 	.word	0x08023638

08008a30 <_ZNK8touchgfx24TextAreaWithWildcardBase17invalidateContentEv>:

    virtual void draw(const Rect& area) const;

    virtual void invalidateContent() const
 8008a30:	b580      	push	{r7, lr}
 8008a32:	b082      	sub	sp, #8
 8008a34:	af00      	add	r7, sp, #0
 8008a36:	6078      	str	r0, [r7, #4]
    {
        Widget::invalidateContent();
 8008a38:	687b      	ldr	r3, [r7, #4]
 8008a3a:	4618      	mov	r0, r3
 8008a3c:	f7ff fb88 	bl	8008150 <_ZNK8touchgfx8Drawable17invalidateContentEv>
    }
 8008a40:	bf00      	nop
 8008a42:	3708      	adds	r7, #8
 8008a44:	46bd      	mov	sp, r7
 8008a46:	bd80      	pop	{r7, pc}

08008a48 <_ZNK8touchgfx24TextAreaWithWildcardBase21calculateBoundingAreaEv>:

protected:
    virtual TextArea::BoundingArea calculateBoundingArea() const
 8008a48:	b580      	push	{r7, lr}
 8008a4a:	b082      	sub	sp, #8
 8008a4c:	af00      	add	r7, sp, #0
 8008a4e:	6078      	str	r0, [r7, #4]
 8008a50:	6039      	str	r1, [r7, #0]
    {
        return TextArea::BoundingArea();
 8008a52:	6878      	ldr	r0, [r7, #4]
 8008a54:	f7ff ff9b 	bl	800898e <_ZN8touchgfx8TextArea12BoundingAreaC1Ev>
    }
 8008a58:	6878      	ldr	r0, [r7, #4]
 8008a5a:	3708      	adds	r7, #8
 8008a5c:	46bd      	mov	sp, r7
 8008a5e:	bd80      	pop	{r7, pc}

08008a60 <_ZN8touchgfx24TextAreaWithWildcardBaseD1Ev>:
class TextAreaWithWildcardBase : public TextArea
 8008a60:	b580      	push	{r7, lr}
 8008a62:	b082      	sub	sp, #8
 8008a64:	af00      	add	r7, sp, #0
 8008a66:	6078      	str	r0, [r7, #4]
 8008a68:	4a05      	ldr	r2, [pc, #20]	@ (8008a80 <_ZN8touchgfx24TextAreaWithWildcardBaseD1Ev+0x20>)
 8008a6a:	687b      	ldr	r3, [r7, #4]
 8008a6c:	601a      	str	r2, [r3, #0]
 8008a6e:	687b      	ldr	r3, [r7, #4]
 8008a70:	4618      	mov	r0, r3
 8008a72:	f7ff ffa3 	bl	80089bc <_ZN8touchgfx8TextAreaD1Ev>
 8008a76:	687b      	ldr	r3, [r7, #4]
 8008a78:	4618      	mov	r0, r3
 8008a7a:	3708      	adds	r7, #8
 8008a7c:	46bd      	mov	sp, r7
 8008a7e:	bd80      	pop	{r7, pc}
 8008a80:	08023638 	.word	0x08023638

08008a84 <_ZN8touchgfx24TextAreaWithWildcardBaseD0Ev>:
 8008a84:	b580      	push	{r7, lr}
 8008a86:	b082      	sub	sp, #8
 8008a88:	af00      	add	r7, sp, #0
 8008a8a:	6078      	str	r0, [r7, #4]
 8008a8c:	6878      	ldr	r0, [r7, #4]
 8008a8e:	f7ff ffe7 	bl	8008a60 <_ZN8touchgfx24TextAreaWithWildcardBaseD1Ev>
 8008a92:	2148      	movs	r1, #72	@ 0x48
 8008a94:	6878      	ldr	r0, [r7, #4]
 8008a96:	f017 fe8c 	bl	80207b2 <_ZdlPvj>
 8008a9a:	687b      	ldr	r3, [r7, #4]
 8008a9c:	4618      	mov	r0, r3
 8008a9e:	3708      	adds	r7, #8
 8008aa0:	46bd      	mov	sp, r7
 8008aa2:	bd80      	pop	{r7, pc}

08008aa4 <_ZN8touchgfx23TextAreaWithOneWildcardC1Ev>:
 *       replaced by a wildcard text.
 */
class TextAreaWithOneWildcard : public TextAreaWithWildcardBase
{
public:
    TextAreaWithOneWildcard()
 8008aa4:	b580      	push	{r7, lr}
 8008aa6:	b082      	sub	sp, #8
 8008aa8:	af00      	add	r7, sp, #0
 8008aaa:	6078      	str	r0, [r7, #4]
        : TextAreaWithWildcardBase(), wc1(0)
 8008aac:	687b      	ldr	r3, [r7, #4]
 8008aae:	4618      	mov	r0, r3
 8008ab0:	f7ff ffac 	bl	8008a0c <_ZN8touchgfx24TextAreaWithWildcardBaseC1Ev>
 8008ab4:	4a05      	ldr	r2, [pc, #20]	@ (8008acc <_ZN8touchgfx23TextAreaWithOneWildcardC1Ev+0x28>)
 8008ab6:	687b      	ldr	r3, [r7, #4]
 8008ab8:	601a      	str	r2, [r3, #0]
 8008aba:	687b      	ldr	r3, [r7, #4]
 8008abc:	2200      	movs	r2, #0
 8008abe:	649a      	str	r2, [r3, #72]	@ 0x48
    {
    }
 8008ac0:	687b      	ldr	r3, [r7, #4]
 8008ac2:	4618      	mov	r0, r3
 8008ac4:	3708      	adds	r7, #8
 8008ac6:	46bd      	mov	sp, r7
 8008ac8:	bd80      	pop	{r7, pc}
 8008aca:	bf00      	nop
 8008acc:	08022b44 	.word	0x08022b44

08008ad0 <_ZN8touchgfx23TextAreaWithOneWildcard12setWildcard1EPKt>:
     * @param  value A pointer to the UnicodeChar to set the wildcard to.
     *
     * @note The pointer passed is saved, and must be accessible whenever TextAreaWithOneWildcard
     *       may need it.
     */
    void setWildcard1(const Unicode::UnicodeChar* value)
 8008ad0:	b480      	push	{r7}
 8008ad2:	b083      	sub	sp, #12
 8008ad4:	af00      	add	r7, sp, #0
 8008ad6:	6078      	str	r0, [r7, #4]
 8008ad8:	6039      	str	r1, [r7, #0]
    {
        wc1 = value;
 8008ada:	687b      	ldr	r3, [r7, #4]
 8008adc:	683a      	ldr	r2, [r7, #0]
 8008ade:	649a      	str	r2, [r3, #72]	@ 0x48
    }
 8008ae0:	bf00      	nop
 8008ae2:	370c      	adds	r7, #12
 8008ae4:	46bd      	mov	sp, r7
 8008ae6:	f85d 7b04 	ldr.w	r7, [sp], #4
 8008aea:	4770      	bx	lr

08008aec <_ZNK8touchgfx23TextAreaWithOneWildcard12getWildcard1Ev>:

    virtual const Unicode::UnicodeChar* getWildcard1() const
 8008aec:	b480      	push	{r7}
 8008aee:	b083      	sub	sp, #12
 8008af0:	af00      	add	r7, sp, #0
 8008af2:	6078      	str	r0, [r7, #4]
    {
        return wc1;
 8008af4:	687b      	ldr	r3, [r7, #4]
 8008af6:	6c9b      	ldr	r3, [r3, #72]	@ 0x48
    }
 8008af8:	4618      	mov	r0, r3
 8008afa:	370c      	adds	r7, #12
 8008afc:	46bd      	mov	sp, r7
 8008afe:	f85d 7b04 	ldr.w	r7, [sp], #4
 8008b02:	4770      	bx	lr

08008b04 <_ZN8touchgfx23TextAreaWithOneWildcard11setWildcardEPKt>:
     * @param  value A pointer to the UnicodeChar to set the wildcard to.
     *
     * @note The pointer passed is saved, and must be accessible whenever TextAreaWithOneWildcard
     *       may need it.
     */
    void setWildcard(const Unicode::UnicodeChar* value)
 8008b04:	b580      	push	{r7, lr}
 8008b06:	b082      	sub	sp, #8
 8008b08:	af00      	add	r7, sp, #0
 8008b0a:	6078      	str	r0, [r7, #4]
 8008b0c:	6039      	str	r1, [r7, #0]
    {
        setWildcard1(value);
 8008b0e:	6839      	ldr	r1, [r7, #0]
 8008b10:	6878      	ldr	r0, [r7, #4]
 8008b12:	f7ff ffdd 	bl	8008ad0 <_ZN8touchgfx23TextAreaWithOneWildcard12setWildcard1EPKt>
    }
 8008b16:	bf00      	nop
 8008b18:	3708      	adds	r7, #8
 8008b1a:	46bd      	mov	sp, r7
 8008b1c:	bd80      	pop	{r7, pc}

08008b1e <_ZN12MainViewBase12ToggleLightsEv>:
    virtual void setupScreen();

    /*
     * Virtual Action Handlers
     */
    virtual void ToggleLights()
 8008b1e:	b480      	push	{r7}
 8008b20:	b083      	sub	sp, #12
 8008b22:	af00      	add	r7, sp, #0
 8008b24:	6078      	str	r0, [r7, #4]
    {
        // Override and implement this function in Main
    }
 8008b26:	bf00      	nop
 8008b28:	370c      	adds	r7, #12
 8008b2a:	46bd      	mov	sp, r7
 8008b2c:	f85d 7b04 	ldr.w	r7, [sp], #4
 8008b30:	4770      	bx	lr
	...

08008b34 <_ZN8touchgfx4ViewI13MainPresenterED1Ev>:
class View : public Screen
 8008b34:	b580      	push	{r7, lr}
 8008b36:	b082      	sub	sp, #8
 8008b38:	af00      	add	r7, sp, #0
 8008b3a:	6078      	str	r0, [r7, #4]
 8008b3c:	4a05      	ldr	r2, [pc, #20]	@ (8008b54 <_ZN8touchgfx4ViewI13MainPresenterED1Ev+0x20>)
 8008b3e:	687b      	ldr	r3, [r7, #4]
 8008b40:	601a      	str	r2, [r3, #0]
 8008b42:	687b      	ldr	r3, [r7, #4]
 8008b44:	4618      	mov	r0, r3
 8008b46:	f7ff fc89 	bl	800845c <_ZN8touchgfx6ScreenD1Ev>
 8008b4a:	687b      	ldr	r3, [r7, #4]
 8008b4c:	4618      	mov	r0, r3
 8008b4e:	3708      	adds	r7, #8
 8008b50:	46bd      	mov	sp, r7
 8008b52:	bd80      	pop	{r7, pc}
 8008b54:	08022b10 	.word	0x08022b10

08008b58 <_ZN8touchgfx4ViewI13MainPresenterED0Ev>:
 8008b58:	b580      	push	{r7, lr}
 8008b5a:	b082      	sub	sp, #8
 8008b5c:	af00      	add	r7, sp, #0
 8008b5e:	6078      	str	r0, [r7, #4]
 8008b60:	6878      	ldr	r0, [r7, #4]
 8008b62:	f7ff ffe7 	bl	8008b34 <_ZN8touchgfx4ViewI13MainPresenterED1Ev>
 8008b66:	2140      	movs	r1, #64	@ 0x40
 8008b68:	6878      	ldr	r0, [r7, #4]
 8008b6a:	f017 fe22 	bl	80207b2 <_ZdlPvj>
 8008b6e:	687b      	ldr	r3, [r7, #4]
 8008b70:	4618      	mov	r0, r3
 8008b72:	3708      	adds	r7, #8
 8008b74:	46bd      	mov	sp, r7
 8008b76:	bd80      	pop	{r7, pc}

08008b78 <_ZN8touchgfx6ButtonD1Ev>:
class Button : public AbstractButton
 8008b78:	b580      	push	{r7, lr}
 8008b7a:	b082      	sub	sp, #8
 8008b7c:	af00      	add	r7, sp, #0
 8008b7e:	6078      	str	r0, [r7, #4]
 8008b80:	4a05      	ldr	r2, [pc, #20]	@ (8008b98 <_ZN8touchgfx6ButtonD1Ev+0x20>)
 8008b82:	687b      	ldr	r3, [r7, #4]
 8008b84:	601a      	str	r2, [r3, #0]
 8008b86:	687b      	ldr	r3, [r7, #4]
 8008b88:	4618      	mov	r0, r3
 8008b8a:	f7ff fd69 	bl	8008660 <_ZN8touchgfx14AbstractButtonD1Ev>
 8008b8e:	687b      	ldr	r3, [r7, #4]
 8008b90:	4618      	mov	r0, r3
 8008b92:	3708      	adds	r7, #8
 8008b94:	46bd      	mov	sp, r7
 8008b96:	bd80      	pop	{r7, pc}
 8008b98:	080235c4 	.word	0x080235c4

08008b9c <_ZN8touchgfx6ButtonD0Ev>:
 8008b9c:	b580      	push	{r7, lr}
 8008b9e:	b082      	sub	sp, #8
 8008ba0:	af00      	add	r7, sp, #0
 8008ba2:	6078      	str	r0, [r7, #4]
 8008ba4:	6878      	ldr	r0, [r7, #4]
 8008ba6:	f7ff ffe7 	bl	8008b78 <_ZN8touchgfx6ButtonD1Ev>
 8008baa:	2134      	movs	r1, #52	@ 0x34
 8008bac:	6878      	ldr	r0, [r7, #4]
 8008bae:	f017 fe00 	bl	80207b2 <_ZdlPvj>
 8008bb2:	687b      	ldr	r3, [r7, #4]
 8008bb4:	4618      	mov	r0, r3
 8008bb6:	3708      	adds	r7, #8
 8008bb8:	46bd      	mov	sp, r7
 8008bba:	bd80      	pop	{r7, pc}

08008bbc <_ZN8touchgfx12ToggleButtonC1Ev>:
class ToggleButton : public Button
 8008bbc:	b580      	push	{r7, lr}
 8008bbe:	b082      	sub	sp, #8
 8008bc0:	af00      	add	r7, sp, #0
 8008bc2:	6078      	str	r0, [r7, #4]
 8008bc4:	687b      	ldr	r3, [r7, #4]
 8008bc6:	4618      	mov	r0, r3
 8008bc8:	f7ff fd6c 	bl	80086a4 <_ZN8touchgfx6ButtonC1Ev>
 8008bcc:	4a07      	ldr	r2, [pc, #28]	@ (8008bec <_ZN8touchgfx12ToggleButtonC1Ev+0x30>)
 8008bce:	687b      	ldr	r3, [r7, #4]
 8008bd0:	601a      	str	r2, [r3, #0]
 8008bd2:	687b      	ldr	r3, [r7, #4]
 8008bd4:	3334      	adds	r3, #52	@ 0x34
 8008bd6:	f64f 71ff 	movw	r1, #65535	@ 0xffff
 8008bda:	4618      	mov	r0, r3
 8008bdc:	f7ff fa58 	bl	8008090 <_ZN8touchgfx6BitmapC1Et>
 8008be0:	687b      	ldr	r3, [r7, #4]
 8008be2:	4618      	mov	r0, r3
 8008be4:	3708      	adds	r7, #8
 8008be6:	46bd      	mov	sp, r7
 8008be8:	bd80      	pop	{r7, pc}
 8008bea:	bf00      	nop
 8008bec:	08023458 	.word	0x08023458

08008bf0 <_ZN12MainViewBaseC1Ev>:
#include <gui_generated/main_screen/MainViewBase.hpp>
#include <touchgfx/Color.hpp>
#include <images/BitmapDatabase.hpp>
#include <texts/TextKeysAndLanguages.hpp>

MainViewBase::MainViewBase() :
 8008bf0:	b590      	push	{r4, r7, lr}
 8008bf2:	b097      	sub	sp, #92	@ 0x5c
 8008bf4:	af02      	add	r7, sp, #8
 8008bf6:	6178      	str	r0, [r7, #20]
    buttonCallback(this, &MainViewBase::buttonCallbackHandler)
 8008bf8:	697b      	ldr	r3, [r7, #20]
 8008bfa:	4618      	mov	r0, r3
 8008bfc:	f000 f95e 	bl	8008ebc <_ZN8touchgfx4ViewI13MainPresenterEC1Ev>
 8008c00:	4a80      	ldr	r2, [pc, #512]	@ (8008e04 <_ZN12MainViewBaseC1Ev+0x214>)
 8008c02:	697b      	ldr	r3, [r7, #20]
 8008c04:	601a      	str	r2, [r3, #0]
 8008c06:	697b      	ldr	r3, [r7, #20]
 8008c08:	3340      	adds	r3, #64	@ 0x40
 8008c0a:	4618      	mov	r0, r3
 8008c0c:	f7ff fcc2 	bl	8008594 <_ZN8touchgfx3BoxC1Ev>
 8008c10:	697b      	ldr	r3, [r7, #20]
 8008c12:	336c      	adds	r3, #108	@ 0x6c
 8008c14:	4618      	mov	r0, r3
 8008c16:	f7ff ffd1 	bl	8008bbc <_ZN8touchgfx12ToggleButtonC1Ev>
 8008c1a:	697b      	ldr	r3, [r7, #20]
 8008c1c:	33a4      	adds	r3, #164	@ 0xa4
 8008c1e:	4618      	mov	r0, r3
 8008c20:	f7ff ff40 	bl	8008aa4 <_ZN8touchgfx23TextAreaWithOneWildcardC1Ev>
 8008c24:	697b      	ldr	r3, [r7, #20]
 8008c26:	f503 708c 	add.w	r0, r3, #280	@ 0x118
 8008c2a:	4b77      	ldr	r3, [pc, #476]	@ (8008e08 <_ZN12MainViewBaseC1Ev+0x218>)
 8008c2c:	61fb      	str	r3, [r7, #28]
 8008c2e:	2300      	movs	r3, #0
 8008c30:	623b      	str	r3, [r7, #32]
 8008c32:	f107 031c 	add.w	r3, r7, #28
 8008c36:	cb0c      	ldmia	r3, {r2, r3}
 8008c38:	6979      	ldr	r1, [r7, #20]
 8008c3a:	f000 f965 	bl	8008f08 <_ZN8touchgfx8CallbackI12MainViewBaseRKNS_14AbstractButtonEvvEC1EPS1_MS1_FvS4_E>
{
    __background.setPosition(0, 0, 320, 480);
 8008c3e:	697b      	ldr	r3, [r7, #20]
 8008c40:	f103 0040 	add.w	r0, r3, #64	@ 0x40
 8008c44:	f44f 73f0 	mov.w	r3, #480	@ 0x1e0
 8008c48:	9300      	str	r3, [sp, #0]
 8008c4a:	f44f 73a0 	mov.w	r3, #320	@ 0x140
 8008c4e:	2200      	movs	r2, #0
 8008c50:	2100      	movs	r1, #0
 8008c52:	f7ff fa9b 	bl	800818c <_ZN8touchgfx8Drawable11setPositionEssss>
    __background.setColor(touchgfx::Color::getColorFromRGB(0, 0, 0));
 8008c56:	697b      	ldr	r3, [r7, #20]
 8008c58:	f103 0440 	add.w	r4, r3, #64	@ 0x40
 8008c5c:	2300      	movs	r3, #0
 8008c5e:	f887 3040 	strb.w	r3, [r7, #64]	@ 0x40
 8008c62:	2300      	movs	r3, #0
 8008c64:	f887 303f 	strb.w	r3, [r7, #63]	@ 0x3f
 8008c68:	2300      	movs	r3, #0
 8008c6a:	f887 303e 	strb.w	r3, [r7, #62]	@ 0x3e
     *
     * @return The color representation depending on LCD color format.
     */
    FORCE_INLINE_FUNCTION static colortype getColorFromRGB(uint8_t red, uint8_t green, uint8_t blue)
    {
        return 0xFF000000 | (red << 16) | (green << 8) | (blue);
 8008c6e:	f897 3040 	ldrb.w	r3, [r7, #64]	@ 0x40
 8008c72:	041a      	lsls	r2, r3, #16
 8008c74:	f897 303f 	ldrb.w	r3, [r7, #63]	@ 0x3f
 8008c78:	021b      	lsls	r3, r3, #8
 8008c7a:	431a      	orrs	r2, r3
 8008c7c:	f897 303e 	ldrb.w	r3, [r7, #62]	@ 0x3e
 8008c80:	4313      	orrs	r3, r2
 8008c82:	f043 427f 	orr.w	r2, r3, #4278190080	@ 0xff000000
 8008c86:	f107 0338 	add.w	r3, r7, #56	@ 0x38
 8008c8a:	4611      	mov	r1, r2
 8008c8c:	4618      	mov	r0, r3
 8008c8e:	f7ff f9b9 	bl	8008004 <_ZN8touchgfx9colortypeC1Em>
 8008c92:	6bbb      	ldr	r3, [r7, #56]	@ 0x38
 8008c94:	4619      	mov	r1, r3
 8008c96:	4620      	mov	r0, r4
 8008c98:	f7ff fca0 	bl	80085dc <_ZN8touchgfx3Box8setColorENS_9colortypeE>
    add(__background);
 8008c9c:	697a      	ldr	r2, [r7, #20]
 8008c9e:	697b      	ldr	r3, [r7, #20]
 8008ca0:	3340      	adds	r3, #64	@ 0x40
 8008ca2:	4619      	mov	r1, r3
 8008ca4:	4610      	mov	r0, r2
 8008ca6:	f7ff fc31 	bl	800850c <_ZN8touchgfx6Screen3addERNS_8DrawableE>

    toggleButton1.setXY(88, 210);
 8008caa:	697b      	ldr	r3, [r7, #20]
 8008cac:	336c      	adds	r3, #108	@ 0x6c
 8008cae:	22d2      	movs	r2, #210	@ 0xd2
 8008cb0:	2158      	movs	r1, #88	@ 0x58
 8008cb2:	4618      	mov	r0, r3
 8008cb4:	f7ff faa9 	bl	800820a <_ZN8touchgfx8Drawable5setXYEss>
    toggleButton1.setBitmaps(touchgfx::Bitmap(BITMAP_ALTERNATE_THEME_IMAGES_WIDGETS_TOGGLEBUTTON_LARGE_ROUND_ON_ACTIVE_ID), touchgfx::Bitmap(BITMAP_ALTERNATE_THEME_IMAGES_WIDGETS_TOGGLEBUTTON_LARGE_ROUND_OFF_DARK_ID));
 8008cb8:	697b      	ldr	r3, [r7, #20]
 8008cba:	f103 046c 	add.w	r4, r3, #108	@ 0x6c
 8008cbe:	f107 0324 	add.w	r3, r7, #36	@ 0x24
 8008cc2:	2101      	movs	r1, #1
 8008cc4:	4618      	mov	r0, r3
 8008cc6:	f7ff f9e3 	bl	8008090 <_ZN8touchgfx6BitmapC1Et>
 8008cca:	f107 0328 	add.w	r3, r7, #40	@ 0x28
 8008cce:	2100      	movs	r1, #0
 8008cd0:	4618      	mov	r0, r3
 8008cd2:	f7ff f9dd 	bl	8008090 <_ZN8touchgfx6BitmapC1Et>
 8008cd6:	f107 0228 	add.w	r2, r7, #40	@ 0x28
 8008cda:	f107 0324 	add.w	r3, r7, #36	@ 0x24
 8008cde:	4619      	mov	r1, r3
 8008ce0:	4620      	mov	r0, r4
 8008ce2:	f7ff fd03 	bl	80086ec <_ZN8touchgfx12ToggleButton10setBitmapsERKNS_6BitmapES3_>
    toggleButton1.forceState(true);
 8008ce6:	697b      	ldr	r3, [r7, #20]
 8008ce8:	336c      	adds	r3, #108	@ 0x6c
 8008cea:	2101      	movs	r1, #1
 8008cec:	4618      	mov	r0, r3
 8008cee:	f004 f84b 	bl	800cd88 <_ZN8touchgfx12ToggleButton10forceStateEb>
    toggleButton1.setAction(buttonCallback);
 8008cf2:	697b      	ldr	r3, [r7, #20]
 8008cf4:	f103 026c 	add.w	r2, r3, #108	@ 0x6c
 8008cf8:	697b      	ldr	r3, [r7, #20]
 8008cfa:	f503 738c 	add.w	r3, r3, #280	@ 0x118
 8008cfe:	4619      	mov	r1, r3
 8008d00:	4610      	mov	r0, r2
 8008d02:	f7ff fc9f 	bl	8008644 <_ZN8touchgfx14AbstractButton9setActionERNS_15GenericCallbackIRKS0_vvEE>
    add(toggleButton1);
 8008d06:	697a      	ldr	r2, [r7, #20]
 8008d08:	697b      	ldr	r3, [r7, #20]
 8008d0a:	336c      	adds	r3, #108	@ 0x6c
 8008d0c:	4619      	mov	r1, r3
 8008d0e:	4610      	mov	r0, r2
 8008d10:	f7ff fbfc 	bl	800850c <_ZN8touchgfx6Screen3addERNS_8DrawableE>

    ADCVAL.setPosition(9, 321, 303, 43);
 8008d14:	697b      	ldr	r3, [r7, #20]
 8008d16:	f103 00a4 	add.w	r0, r3, #164	@ 0xa4
 8008d1a:	232b      	movs	r3, #43	@ 0x2b
 8008d1c:	9300      	str	r3, [sp, #0]
 8008d1e:	f240 132f 	movw	r3, #303	@ 0x12f
 8008d22:	f240 1241 	movw	r2, #321	@ 0x141
 8008d26:	2109      	movs	r1, #9
 8008d28:	f7ff fa30 	bl	800818c <_ZN8touchgfx8Drawable11setPositionEssss>
    ADCVAL.setColor(touchgfx::Color::getColorFromRGB(255, 255, 255));
 8008d2c:	697b      	ldr	r3, [r7, #20]
 8008d2e:	f103 04a4 	add.w	r4, r3, #164	@ 0xa4
 8008d32:	23ff      	movs	r3, #255	@ 0xff
 8008d34:	f887 3043 	strb.w	r3, [r7, #67]	@ 0x43
 8008d38:	23ff      	movs	r3, #255	@ 0xff
 8008d3a:	f887 3042 	strb.w	r3, [r7, #66]	@ 0x42
 8008d3e:	23ff      	movs	r3, #255	@ 0xff
 8008d40:	f887 3041 	strb.w	r3, [r7, #65]	@ 0x41
 8008d44:	f897 3043 	ldrb.w	r3, [r7, #67]	@ 0x43
 8008d48:	041a      	lsls	r2, r3, #16
 8008d4a:	f897 3042 	ldrb.w	r3, [r7, #66]	@ 0x42
 8008d4e:	021b      	lsls	r3, r3, #8
 8008d50:	431a      	orrs	r2, r3
 8008d52:	f897 3041 	ldrb.w	r3, [r7, #65]	@ 0x41
 8008d56:	4313      	orrs	r3, r2
 8008d58:	f043 427f 	orr.w	r2, r3, #4278190080	@ 0xff000000
 8008d5c:	f107 0334 	add.w	r3, r7, #52	@ 0x34
 8008d60:	4611      	mov	r1, r2
 8008d62:	4618      	mov	r0, r3
 8008d64:	f7ff f94e 	bl	8008004 <_ZN8touchgfx9colortypeC1Em>
 8008d68:	6b7b      	ldr	r3, [r7, #52]	@ 0x34
 8008d6a:	647c      	str	r4, [r7, #68]	@ 0x44
 8008d6c:	61bb      	str	r3, [r7, #24]
        color = newColor;
 8008d6e:	6c7b      	ldr	r3, [r7, #68]	@ 0x44
 8008d70:	69ba      	ldr	r2, [r7, #24]
 8008d72:	631a      	str	r2, [r3, #48]	@ 0x30
    }
 8008d74:	bf00      	nop
    ADCVAL.setLinespacing(0);
 8008d76:	697b      	ldr	r3, [r7, #20]
 8008d78:	33a4      	adds	r3, #164	@ 0xa4
 8008d7a:	64fb      	str	r3, [r7, #76]	@ 0x4c
 8008d7c:	2300      	movs	r3, #0
 8008d7e:	f8a7 304a 	strh.w	r3, [r7, #74]	@ 0x4a
        linespace = space;
 8008d82:	6cfb      	ldr	r3, [r7, #76]	@ 0x4c
 8008d84:	f8b7 204a 	ldrh.w	r2, [r7, #74]	@ 0x4a
 8008d88:	869a      	strh	r2, [r3, #52]	@ 0x34
        boundingArea = calculateBoundingArea();
 8008d8a:	6cfb      	ldr	r3, [r7, #76]	@ 0x4c
 8008d8c:	681b      	ldr	r3, [r3, #0]
 8008d8e:	3384      	adds	r3, #132	@ 0x84
 8008d90:	681b      	ldr	r3, [r3, #0]
 8008d92:	6cfc      	ldr	r4, [r7, #76]	@ 0x4c
 8008d94:	463a      	mov	r2, r7
 8008d96:	6cf9      	ldr	r1, [r7, #76]	@ 0x4c
 8008d98:	4610      	mov	r0, r2
 8008d9a:	4798      	blx	r3
 8008d9c:	f104 033c 	add.w	r3, r4, #60	@ 0x3c
 8008da0:	463a      	mov	r2, r7
 8008da2:	ca07      	ldmia	r2, {r0, r1, r2}
 8008da4:	e883 0007 	stmia.w	r3, {r0, r1, r2}
    }
 8008da8:	bf00      	nop
    ADCVALBuffer[0] = 0;
 8008daa:	697b      	ldr	r3, [r7, #20]
 8008dac:	2200      	movs	r2, #0
 8008dae:	f8a3 20f0 	strh.w	r2, [r3, #240]	@ 0xf0
    ADCVAL.setWildcard(ADCVALBuffer);
 8008db2:	697b      	ldr	r3, [r7, #20]
 8008db4:	f103 02a4 	add.w	r2, r3, #164	@ 0xa4
 8008db8:	697b      	ldr	r3, [r7, #20]
 8008dba:	33f0      	adds	r3, #240	@ 0xf0
 8008dbc:	4619      	mov	r1, r3
 8008dbe:	4610      	mov	r0, r2
 8008dc0:	f7ff fea0 	bl	8008b04 <_ZN8touchgfx23TextAreaWithOneWildcard11setWildcardEPKt>
    ADCVAL.setTypedText(touchgfx::TypedText(T___SINGLEUSE_OPPC));
 8008dc4:	697b      	ldr	r3, [r7, #20]
 8008dc6:	f103 04a4 	add.w	r4, r3, #164	@ 0xa4
 8008dca:	f107 032c 	add.w	r3, r7, #44	@ 0x2c
 8008dce:	2101      	movs	r1, #1
 8008dd0:	4618      	mov	r0, r3
 8008dd2:	f7ff fc9f 	bl	8008714 <_ZN8touchgfx9TypedTextC1Et>
 8008dd6:	f107 032c 	add.w	r3, r7, #44	@ 0x2c
 8008dda:	4619      	mov	r1, r3
 8008ddc:	4620      	mov	r0, r4
 8008dde:	f004 fb53 	bl	800d488 <_ZN8touchgfx8TextArea12setTypedTextERKNS_9TypedTextE>
 8008de2:	f107 032c 	add.w	r3, r7, #44	@ 0x2c
 8008de6:	4618      	mov	r0, r3
 8008de8:	f7fe fa2a 	bl	8007240 <_ZN8touchgfx9TypedTextD1Ev>
    add(ADCVAL);
 8008dec:	697a      	ldr	r2, [r7, #20]
 8008dee:	697b      	ldr	r3, [r7, #20]
 8008df0:	33a4      	adds	r3, #164	@ 0xa4
 8008df2:	4619      	mov	r1, r3
 8008df4:	4610      	mov	r0, r2
 8008df6:	f7ff fb89 	bl	800850c <_ZN8touchgfx6Screen3addERNS_8DrawableE>
}
 8008dfa:	697b      	ldr	r3, [r7, #20]
 8008dfc:	4618      	mov	r0, r3
 8008dfe:	3754      	adds	r7, #84	@ 0x54
 8008e00:	46bd      	mov	sp, r7
 8008e02:	bd90      	pop	{r4, r7, pc}
 8008e04:	08022ac0 	.word	0x08022ac0
 8008e08:	08008e93 	.word	0x08008e93

08008e0c <_ZN12MainViewBaseD1Ev>:

MainViewBase::~MainViewBase()
 8008e0c:	b580      	push	{r7, lr}
 8008e0e:	b082      	sub	sp, #8
 8008e10:	af00      	add	r7, sp, #0
 8008e12:	6078      	str	r0, [r7, #4]
 8008e14:	4a10      	ldr	r2, [pc, #64]	@ (8008e58 <_ZN12MainViewBaseD1Ev+0x4c>)
 8008e16:	687b      	ldr	r3, [r7, #4]
 8008e18:	601a      	str	r2, [r3, #0]
{

}
 8008e1a:	687b      	ldr	r3, [r7, #4]
 8008e1c:	f503 738c 	add.w	r3, r3, #280	@ 0x118
 8008e20:	4618      	mov	r0, r3
 8008e22:	f000 f8b1 	bl	8008f88 <_ZN8touchgfx8CallbackI12MainViewBaseRKNS_14AbstractButtonEvvED1Ev>
 8008e26:	687b      	ldr	r3, [r7, #4]
 8008e28:	33a4      	adds	r3, #164	@ 0xa4
 8008e2a:	4618      	mov	r0, r3
 8008e2c:	f000 f8ce 	bl	8008fcc <_ZN8touchgfx23TextAreaWithOneWildcardD1Ev>
 8008e30:	687b      	ldr	r3, [r7, #4]
 8008e32:	336c      	adds	r3, #108	@ 0x6c
 8008e34:	4618      	mov	r0, r3
 8008e36:	f000 f92f 	bl	8009098 <_ZN8touchgfx12ToggleButtonD1Ev>
 8008e3a:	687b      	ldr	r3, [r7, #4]
 8008e3c:	3340      	adds	r3, #64	@ 0x40
 8008e3e:	4618      	mov	r0, r3
 8008e40:	f000 f908 	bl	8009054 <_ZN8touchgfx3BoxD1Ev>
 8008e44:	687b      	ldr	r3, [r7, #4]
 8008e46:	4618      	mov	r0, r3
 8008e48:	f7ff fe74 	bl	8008b34 <_ZN8touchgfx4ViewI13MainPresenterED1Ev>
 8008e4c:	687b      	ldr	r3, [r7, #4]
 8008e4e:	4618      	mov	r0, r3
 8008e50:	3708      	adds	r7, #8
 8008e52:	46bd      	mov	sp, r7
 8008e54:	bd80      	pop	{r7, pc}
 8008e56:	bf00      	nop
 8008e58:	08022ac0 	.word	0x08022ac0

08008e5c <_ZN12MainViewBaseD0Ev>:
MainViewBase::~MainViewBase()
 8008e5c:	b580      	push	{r7, lr}
 8008e5e:	b082      	sub	sp, #8
 8008e60:	af00      	add	r7, sp, #0
 8008e62:	6078      	str	r0, [r7, #4]
}
 8008e64:	6878      	ldr	r0, [r7, #4]
 8008e66:	f7ff ffd1 	bl	8008e0c <_ZN12MainViewBaseD1Ev>
 8008e6a:	f44f 7194 	mov.w	r1, #296	@ 0x128
 8008e6e:	6878      	ldr	r0, [r7, #4]
 8008e70:	f017 fc9f 	bl	80207b2 <_ZdlPvj>
 8008e74:	687b      	ldr	r3, [r7, #4]
 8008e76:	4618      	mov	r0, r3
 8008e78:	3708      	adds	r7, #8
 8008e7a:	46bd      	mov	sp, r7
 8008e7c:	bd80      	pop	{r7, pc}

08008e7e <_ZN12MainViewBase11setupScreenEv>:

void MainViewBase::setupScreen()
{
 8008e7e:	b480      	push	{r7}
 8008e80:	b083      	sub	sp, #12
 8008e82:	af00      	add	r7, sp, #0
 8008e84:	6078      	str	r0, [r7, #4]

}
 8008e86:	bf00      	nop
 8008e88:	370c      	adds	r7, #12
 8008e8a:	46bd      	mov	sp, r7
 8008e8c:	f85d 7b04 	ldr.w	r7, [sp], #4
 8008e90:	4770      	bx	lr

08008e92 <_ZN12MainViewBase21buttonCallbackHandlerERKN8touchgfx14AbstractButtonE>:

void MainViewBase::buttonCallbackHandler(const touchgfx::AbstractButton& src)
{
 8008e92:	b580      	push	{r7, lr}
 8008e94:	b082      	sub	sp, #8
 8008e96:	af00      	add	r7, sp, #0
 8008e98:	6078      	str	r0, [r7, #4]
 8008e9a:	6039      	str	r1, [r7, #0]
    if (&src == &toggleButton1)
 8008e9c:	687b      	ldr	r3, [r7, #4]
 8008e9e:	336c      	adds	r3, #108	@ 0x6c
 8008ea0:	683a      	ldr	r2, [r7, #0]
 8008ea2:	429a      	cmp	r2, r3
 8008ea4:	d105      	bne.n	8008eb2 <_ZN12MainViewBase21buttonCallbackHandlerERKN8touchgfx14AbstractButtonE+0x20>
    {
        //Interaction1
        //When toggleButton1 clicked call virtual function
        //Call ToggleLights
        ToggleLights();
 8008ea6:	687b      	ldr	r3, [r7, #4]
 8008ea8:	681b      	ldr	r3, [r3, #0]
 8008eaa:	332c      	adds	r3, #44	@ 0x2c
 8008eac:	681b      	ldr	r3, [r3, #0]
 8008eae:	6878      	ldr	r0, [r7, #4]
 8008eb0:	4798      	blx	r3
    }
}
 8008eb2:	bf00      	nop
 8008eb4:	3708      	adds	r7, #8
 8008eb6:	46bd      	mov	sp, r7
 8008eb8:	bd80      	pop	{r7, pc}
	...

08008ebc <_ZN8touchgfx4ViewI13MainPresenterEC1Ev>:
    View()
 8008ebc:	b580      	push	{r7, lr}
 8008ebe:	b082      	sub	sp, #8
 8008ec0:	af00      	add	r7, sp, #0
 8008ec2:	6078      	str	r0, [r7, #4]
        : presenter(0)
 8008ec4:	687b      	ldr	r3, [r7, #4]
 8008ec6:	4618      	mov	r0, r3
 8008ec8:	f007 fc38 	bl	801073c <_ZN8touchgfx6ScreenC1Ev>
 8008ecc:	4a05      	ldr	r2, [pc, #20]	@ (8008ee4 <_ZN8touchgfx4ViewI13MainPresenterEC1Ev+0x28>)
 8008ece:	687b      	ldr	r3, [r7, #4]
 8008ed0:	601a      	str	r2, [r3, #0]
 8008ed2:	687b      	ldr	r3, [r7, #4]
 8008ed4:	2200      	movs	r2, #0
 8008ed6:	63da      	str	r2, [r3, #60]	@ 0x3c
    }
 8008ed8:	687b      	ldr	r3, [r7, #4]
 8008eda:	4618      	mov	r0, r3
 8008edc:	3708      	adds	r7, #8
 8008ede:	46bd      	mov	sp, r7
 8008ee0:	bd80      	pop	{r7, pc}
 8008ee2:	bf00      	nop
 8008ee4:	08022b10 	.word	0x08022b10

08008ee8 <_ZN8touchgfx15GenericCallbackIRKNS_14AbstractButtonEvvEC1Ev>:
class GenericCallback<T1, void, void>
 8008ee8:	b480      	push	{r7}
 8008eea:	b083      	sub	sp, #12
 8008eec:	af00      	add	r7, sp, #0
 8008eee:	6078      	str	r0, [r7, #4]
 8008ef0:	4a04      	ldr	r2, [pc, #16]	@ (8008f04 <_ZN8touchgfx15GenericCallbackIRKNS_14AbstractButtonEvvEC1Ev+0x1c>)
 8008ef2:	687b      	ldr	r3, [r7, #4]
 8008ef4:	601a      	str	r2, [r3, #0]
 8008ef6:	687b      	ldr	r3, [r7, #4]
 8008ef8:	4618      	mov	r0, r3
 8008efa:	370c      	adds	r7, #12
 8008efc:	46bd      	mov	sp, r7
 8008efe:	f85d 7b04 	ldr.w	r7, [sp], #4
 8008f02:	4770      	bx	lr
 8008f04:	08022bd4 	.word	0x08022bd4

08008f08 <_ZN8touchgfx8CallbackI12MainViewBaseRKNS_14AbstractButtonEvvEC1EPS1_MS1_FvS4_E>:
    Callback(dest_type* pObject, void (dest_type::*pmemfun_1)(T1))
 8008f08:	b580      	push	{r7, lr}
 8008f0a:	b084      	sub	sp, #16
 8008f0c:	af00      	add	r7, sp, #0
 8008f0e:	60f8      	str	r0, [r7, #12]
 8008f10:	60b9      	str	r1, [r7, #8]
 8008f12:	4639      	mov	r1, r7
 8008f14:	e881 000c 	stmia.w	r1, {r2, r3}
        : pobject(pObject), pmemfun(pmemfun_1)
 8008f18:	68fb      	ldr	r3, [r7, #12]
 8008f1a:	4618      	mov	r0, r3
 8008f1c:	f7ff ffe4 	bl	8008ee8 <_ZN8touchgfx15GenericCallbackIRKNS_14AbstractButtonEvvEC1Ev>
 8008f20:	4a08      	ldr	r2, [pc, #32]	@ (8008f44 <_ZN8touchgfx8CallbackI12MainViewBaseRKNS_14AbstractButtonEvvEC1EPS1_MS1_FvS4_E+0x3c>)
 8008f22:	68fb      	ldr	r3, [r7, #12]
 8008f24:	601a      	str	r2, [r3, #0]
 8008f26:	68fb      	ldr	r3, [r7, #12]
 8008f28:	68ba      	ldr	r2, [r7, #8]
 8008f2a:	605a      	str	r2, [r3, #4]
 8008f2c:	68fb      	ldr	r3, [r7, #12]
 8008f2e:	3308      	adds	r3, #8
 8008f30:	463a      	mov	r2, r7
 8008f32:	e892 0003 	ldmia.w	r2, {r0, r1}
 8008f36:	e883 0003 	stmia.w	r3, {r0, r1}
    }
 8008f3a:	68fb      	ldr	r3, [r7, #12]
 8008f3c:	4618      	mov	r0, r3
 8008f3e:	3710      	adds	r7, #16
 8008f40:	46bd      	mov	sp, r7
 8008f42:	bd80      	pop	{r7, pc}
 8008f44:	08022af8 	.word	0x08022af8

08008f48 <_ZN8touchgfx15GenericCallbackIRKNS_14AbstractButtonEvvED1Ev>:
    virtual ~GenericCallback()
 8008f48:	b480      	push	{r7}
 8008f4a:	b083      	sub	sp, #12
 8008f4c:	af00      	add	r7, sp, #0
 8008f4e:	6078      	str	r0, [r7, #4]
    }
 8008f50:	4a04      	ldr	r2, [pc, #16]	@ (8008f64 <_ZN8touchgfx15GenericCallbackIRKNS_14AbstractButtonEvvED1Ev+0x1c>)
 8008f52:	687b      	ldr	r3, [r7, #4]
 8008f54:	601a      	str	r2, [r3, #0]
 8008f56:	687b      	ldr	r3, [r7, #4]
 8008f58:	4618      	mov	r0, r3
 8008f5a:	370c      	adds	r7, #12
 8008f5c:	46bd      	mov	sp, r7
 8008f5e:	f85d 7b04 	ldr.w	r7, [sp], #4
 8008f62:	4770      	bx	lr
 8008f64:	08022bd4 	.word	0x08022bd4

08008f68 <_ZN8touchgfx15GenericCallbackIRKNS_14AbstractButtonEvvED0Ev>:
    virtual ~GenericCallback()
 8008f68:	b580      	push	{r7, lr}
 8008f6a:	b082      	sub	sp, #8
 8008f6c:	af00      	add	r7, sp, #0
 8008f6e:	6078      	str	r0, [r7, #4]
    }
 8008f70:	6878      	ldr	r0, [r7, #4]
 8008f72:	f7ff ffe9 	bl	8008f48 <_ZN8touchgfx15GenericCallbackIRKNS_14AbstractButtonEvvED1Ev>
 8008f76:	2104      	movs	r1, #4
 8008f78:	6878      	ldr	r0, [r7, #4]
 8008f7a:	f017 fc1a 	bl	80207b2 <_ZdlPvj>
 8008f7e:	687b      	ldr	r3, [r7, #4]
 8008f80:	4618      	mov	r0, r3
 8008f82:	3708      	adds	r7, #8
 8008f84:	46bd      	mov	sp, r7
 8008f86:	bd80      	pop	{r7, pc}

08008f88 <_ZN8touchgfx8CallbackI12MainViewBaseRKNS_14AbstractButtonEvvED1Ev>:
struct Callback<dest_type, T1, void, void> : public GenericCallback<T1>
 8008f88:	b580      	push	{r7, lr}
 8008f8a:	b082      	sub	sp, #8
 8008f8c:	af00      	add	r7, sp, #0
 8008f8e:	6078      	str	r0, [r7, #4]
 8008f90:	4a05      	ldr	r2, [pc, #20]	@ (8008fa8 <_ZN8touchgfx8CallbackI12MainViewBaseRKNS_14AbstractButtonEvvED1Ev+0x20>)
 8008f92:	687b      	ldr	r3, [r7, #4]
 8008f94:	601a      	str	r2, [r3, #0]
 8008f96:	687b      	ldr	r3, [r7, #4]
 8008f98:	4618      	mov	r0, r3
 8008f9a:	f7ff ffd5 	bl	8008f48 <_ZN8touchgfx15GenericCallbackIRKNS_14AbstractButtonEvvED1Ev>
 8008f9e:	687b      	ldr	r3, [r7, #4]
 8008fa0:	4618      	mov	r0, r3
 8008fa2:	3708      	adds	r7, #8
 8008fa4:	46bd      	mov	sp, r7
 8008fa6:	bd80      	pop	{r7, pc}
 8008fa8:	08022af8 	.word	0x08022af8

08008fac <_ZN8touchgfx8CallbackI12MainViewBaseRKNS_14AbstractButtonEvvED0Ev>:
 8008fac:	b580      	push	{r7, lr}
 8008fae:	b082      	sub	sp, #8
 8008fb0:	af00      	add	r7, sp, #0
 8008fb2:	6078      	str	r0, [r7, #4]
 8008fb4:	6878      	ldr	r0, [r7, #4]
 8008fb6:	f7ff ffe7 	bl	8008f88 <_ZN8touchgfx8CallbackI12MainViewBaseRKNS_14AbstractButtonEvvED1Ev>
 8008fba:	2110      	movs	r1, #16
 8008fbc:	6878      	ldr	r0, [r7, #4]
 8008fbe:	f017 fbf8 	bl	80207b2 <_ZdlPvj>
 8008fc2:	687b      	ldr	r3, [r7, #4]
 8008fc4:	4618      	mov	r0, r3
 8008fc6:	3708      	adds	r7, #8
 8008fc8:	46bd      	mov	sp, r7
 8008fca:	bd80      	pop	{r7, pc}

08008fcc <_ZN8touchgfx23TextAreaWithOneWildcardD1Ev>:
class TextAreaWithOneWildcard : public TextAreaWithWildcardBase
 8008fcc:	b580      	push	{r7, lr}
 8008fce:	b082      	sub	sp, #8
 8008fd0:	af00      	add	r7, sp, #0
 8008fd2:	6078      	str	r0, [r7, #4]
 8008fd4:	4a05      	ldr	r2, [pc, #20]	@ (8008fec <_ZN8touchgfx23TextAreaWithOneWildcardD1Ev+0x20>)
 8008fd6:	687b      	ldr	r3, [r7, #4]
 8008fd8:	601a      	str	r2, [r3, #0]
 8008fda:	687b      	ldr	r3, [r7, #4]
 8008fdc:	4618      	mov	r0, r3
 8008fde:	f7ff fd3f 	bl	8008a60 <_ZN8touchgfx24TextAreaWithWildcardBaseD1Ev>
 8008fe2:	687b      	ldr	r3, [r7, #4]
 8008fe4:	4618      	mov	r0, r3
 8008fe6:	3708      	adds	r7, #8
 8008fe8:	46bd      	mov	sp, r7
 8008fea:	bd80      	pop	{r7, pc}
 8008fec:	08022b44 	.word	0x08022b44

08008ff0 <_ZN8touchgfx23TextAreaWithOneWildcardD0Ev>:
 8008ff0:	b580      	push	{r7, lr}
 8008ff2:	b082      	sub	sp, #8
 8008ff4:	af00      	add	r7, sp, #0
 8008ff6:	6078      	str	r0, [r7, #4]
 8008ff8:	6878      	ldr	r0, [r7, #4]
 8008ffa:	f7ff ffe7 	bl	8008fcc <_ZN8touchgfx23TextAreaWithOneWildcardD1Ev>
 8008ffe:	214c      	movs	r1, #76	@ 0x4c
 8009000:	6878      	ldr	r0, [r7, #4]
 8009002:	f017 fbd6 	bl	80207b2 <_ZdlPvj>
 8009006:	687b      	ldr	r3, [r7, #4]
 8009008:	4618      	mov	r0, r3
 800900a:	3708      	adds	r7, #8
 800900c:	46bd      	mov	sp, r7
 800900e:	bd80      	pop	{r7, pc}

08009010 <_ZN8touchgfx9ContainerD1Ev>:
 * intersect with the geometry of the container will be visible (e.g. setting a
 * container's width to 0 will render all children invisible).
 *
 * @see Drawable
 */
class Container : public Drawable
 8009010:	b580      	push	{r7, lr}
 8009012:	b082      	sub	sp, #8
 8009014:	af00      	add	r7, sp, #0
 8009016:	6078      	str	r0, [r7, #4]
 8009018:	4a05      	ldr	r2, [pc, #20]	@ (8009030 <_ZN8touchgfx9ContainerD1Ev+0x20>)
 800901a:	687b      	ldr	r3, [r7, #4]
 800901c:	601a      	str	r2, [r3, #0]
 800901e:	687b      	ldr	r3, [r7, #4]
 8009020:	4618      	mov	r0, r3
 8009022:	f7ff f875 	bl	8008110 <_ZN8touchgfx8DrawableD1Ev>
 8009026:	687b      	ldr	r3, [r7, #4]
 8009028:	4618      	mov	r0, r3
 800902a:	3708      	adds	r7, #8
 800902c:	46bd      	mov	sp, r7
 800902e:	bd80      	pop	{r7, pc}
 8009030:	08023200 	.word	0x08023200

08009034 <_ZN8touchgfx9ContainerD0Ev>:
 8009034:	b580      	push	{r7, lr}
 8009036:	b082      	sub	sp, #8
 8009038:	af00      	add	r7, sp, #0
 800903a:	6078      	str	r0, [r7, #4]
 800903c:	6878      	ldr	r0, [r7, #4]
 800903e:	f7ff ffe7 	bl	8009010 <_ZN8touchgfx9ContainerD1Ev>
 8009042:	212c      	movs	r1, #44	@ 0x2c
 8009044:	6878      	ldr	r0, [r7, #4]
 8009046:	f017 fbb4 	bl	80207b2 <_ZdlPvj>
 800904a:	687b      	ldr	r3, [r7, #4]
 800904c:	4618      	mov	r0, r3
 800904e:	3708      	adds	r7, #8
 8009050:	46bd      	mov	sp, r7
 8009052:	bd80      	pop	{r7, pc}

08009054 <_ZN8touchgfx3BoxD1Ev>:
class Box : public Widget
 8009054:	b580      	push	{r7, lr}
 8009056:	b082      	sub	sp, #8
 8009058:	af00      	add	r7, sp, #0
 800905a:	6078      	str	r0, [r7, #4]
 800905c:	4a05      	ldr	r2, [pc, #20]	@ (8009074 <_ZN8touchgfx3BoxD1Ev+0x20>)
 800905e:	687b      	ldr	r3, [r7, #4]
 8009060:	601a      	str	r2, [r3, #0]
 8009062:	687b      	ldr	r3, [r7, #4]
 8009064:	4618      	mov	r0, r3
 8009066:	f7ff fa73 	bl	8008550 <_ZN8touchgfx6WidgetD1Ev>
 800906a:	687b      	ldr	r3, [r7, #4]
 800906c:	4618      	mov	r0, r3
 800906e:	3708      	adds	r7, #8
 8009070:	46bd      	mov	sp, r7
 8009072:	bd80      	pop	{r7, pc}
 8009074:	0802355c 	.word	0x0802355c

08009078 <_ZN8touchgfx3BoxD0Ev>:
 8009078:	b580      	push	{r7, lr}
 800907a:	b082      	sub	sp, #8
 800907c:	af00      	add	r7, sp, #0
 800907e:	6078      	str	r0, [r7, #4]
 8009080:	6878      	ldr	r0, [r7, #4]
 8009082:	f7ff ffe7 	bl	8009054 <_ZN8touchgfx3BoxD1Ev>
 8009086:	212c      	movs	r1, #44	@ 0x2c
 8009088:	6878      	ldr	r0, [r7, #4]
 800908a:	f017 fb92 	bl	80207b2 <_ZdlPvj>
 800908e:	687b      	ldr	r3, [r7, #4]
 8009090:	4618      	mov	r0, r3
 8009092:	3708      	adds	r7, #8
 8009094:	46bd      	mov	sp, r7
 8009096:	bd80      	pop	{r7, pc}

08009098 <_ZN8touchgfx12ToggleButtonD1Ev>:
 8009098:	b580      	push	{r7, lr}
 800909a:	b082      	sub	sp, #8
 800909c:	af00      	add	r7, sp, #0
 800909e:	6078      	str	r0, [r7, #4]
 80090a0:	4a05      	ldr	r2, [pc, #20]	@ (80090b8 <_ZN8touchgfx12ToggleButtonD1Ev+0x20>)
 80090a2:	687b      	ldr	r3, [r7, #4]
 80090a4:	601a      	str	r2, [r3, #0]
 80090a6:	687b      	ldr	r3, [r7, #4]
 80090a8:	4618      	mov	r0, r3
 80090aa:	f7ff fd65 	bl	8008b78 <_ZN8touchgfx6ButtonD1Ev>
 80090ae:	687b      	ldr	r3, [r7, #4]
 80090b0:	4618      	mov	r0, r3
 80090b2:	3708      	adds	r7, #8
 80090b4:	46bd      	mov	sp, r7
 80090b6:	bd80      	pop	{r7, pc}
 80090b8:	08023458 	.word	0x08023458

080090bc <_ZN8touchgfx12ToggleButtonD0Ev>:
 80090bc:	b580      	push	{r7, lr}
 80090be:	b082      	sub	sp, #8
 80090c0:	af00      	add	r7, sp, #0
 80090c2:	6078      	str	r0, [r7, #4]
 80090c4:	6878      	ldr	r0, [r7, #4]
 80090c6:	f7ff ffe7 	bl	8009098 <_ZN8touchgfx12ToggleButtonD1Ev>
 80090ca:	2138      	movs	r1, #56	@ 0x38
 80090cc:	6878      	ldr	r0, [r7, #4]
 80090ce:	f017 fb70 	bl	80207b2 <_ZdlPvj>
 80090d2:	687b      	ldr	r3, [r7, #4]
 80090d4:	4618      	mov	r0, r3
 80090d6:	3708      	adds	r7, #8
 80090d8:	46bd      	mov	sp, r7
 80090da:	bd80      	pop	{r7, pc}

080090dc <_ZN8touchgfx8CallbackI12MainViewBaseRKNS_14AbstractButtonEvvE7executeES4_>:
    virtual void execute(T1 t1)
 80090dc:	b580      	push	{r7, lr}
 80090de:	b082      	sub	sp, #8
 80090e0:	af00      	add	r7, sp, #0
 80090e2:	6078      	str	r0, [r7, #4]
 80090e4:	6039      	str	r1, [r7, #0]
        (pobject->*pmemfun)(t1);
 80090e6:	687b      	ldr	r3, [r7, #4]
 80090e8:	685b      	ldr	r3, [r3, #4]
 80090ea:	687a      	ldr	r2, [r7, #4]
 80090ec:	68d2      	ldr	r2, [r2, #12]
 80090ee:	1052      	asrs	r2, r2, #1
 80090f0:	1898      	adds	r0, r3, r2
 80090f2:	687b      	ldr	r3, [r7, #4]
 80090f4:	68db      	ldr	r3, [r3, #12]
 80090f6:	f003 0301 	and.w	r3, r3, #1
 80090fa:	2b00      	cmp	r3, #0
 80090fc:	d102      	bne.n	8009104 <_ZN8touchgfx8CallbackI12MainViewBaseRKNS_14AbstractButtonEvvE7executeES4_+0x28>
 80090fe:	687b      	ldr	r3, [r7, #4]
 8009100:	689b      	ldr	r3, [r3, #8]
 8009102:	e00a      	b.n	800911a <_ZN8touchgfx8CallbackI12MainViewBaseRKNS_14AbstractButtonEvvE7executeES4_+0x3e>
 8009104:	687b      	ldr	r3, [r7, #4]
 8009106:	685b      	ldr	r3, [r3, #4]
 8009108:	687a      	ldr	r2, [r7, #4]
 800910a:	68d2      	ldr	r2, [r2, #12]
 800910c:	1052      	asrs	r2, r2, #1
 800910e:	4413      	add	r3, r2
 8009110:	681b      	ldr	r3, [r3, #0]
 8009112:	687a      	ldr	r2, [r7, #4]
 8009114:	6892      	ldr	r2, [r2, #8]
 8009116:	4413      	add	r3, r2
 8009118:	681b      	ldr	r3, [r3, #0]
 800911a:	6839      	ldr	r1, [r7, #0]
 800911c:	4798      	blx	r3
    }
 800911e:	bf00      	nop
 8009120:	3708      	adds	r7, #8
 8009122:	46bd      	mov	sp, r7
 8009124:	bd80      	pop	{r7, pc}

08009126 <_ZNK8touchgfx8CallbackI12MainViewBaseRKNS_14AbstractButtonEvvE7isValidEv>:
    virtual bool isValid() const
 8009126:	b480      	push	{r7}
 8009128:	b083      	sub	sp, #12
 800912a:	af00      	add	r7, sp, #0
 800912c:	6078      	str	r0, [r7, #4]
        return (pobject != 0) && (pmemfun != 0);
 800912e:	687b      	ldr	r3, [r7, #4]
 8009130:	685b      	ldr	r3, [r3, #4]
 8009132:	2b00      	cmp	r3, #0
 8009134:	d010      	beq.n	8009158 <_ZNK8touchgfx8CallbackI12MainViewBaseRKNS_14AbstractButtonEvvE7isValidEv+0x32>
 8009136:	687b      	ldr	r3, [r7, #4]
 8009138:	689b      	ldr	r3, [r3, #8]
 800913a:	2b00      	cmp	r3, #0
 800913c:	d107      	bne.n	800914e <_ZNK8touchgfx8CallbackI12MainViewBaseRKNS_14AbstractButtonEvvE7isValidEv+0x28>
 800913e:	687b      	ldr	r3, [r7, #4]
 8009140:	68db      	ldr	r3, [r3, #12]
 8009142:	f003 0301 	and.w	r3, r3, #1
 8009146:	2b00      	cmp	r3, #0
 8009148:	d101      	bne.n	800914e <_ZNK8touchgfx8CallbackI12MainViewBaseRKNS_14AbstractButtonEvvE7isValidEv+0x28>
 800914a:	2301      	movs	r3, #1
 800914c:	e000      	b.n	8009150 <_ZNK8touchgfx8CallbackI12MainViewBaseRKNS_14AbstractButtonEvvE7isValidEv+0x2a>
 800914e:	2300      	movs	r3, #0
 8009150:	2b01      	cmp	r3, #1
 8009152:	d001      	beq.n	8009158 <_ZNK8touchgfx8CallbackI12MainViewBaseRKNS_14AbstractButtonEvvE7isValidEv+0x32>
 8009154:	2301      	movs	r3, #1
 8009156:	e000      	b.n	800915a <_ZNK8touchgfx8CallbackI12MainViewBaseRKNS_14AbstractButtonEvvE7isValidEv+0x34>
 8009158:	2300      	movs	r3, #0
    }
 800915a:	4618      	mov	r0, r3
 800915c:	370c      	adds	r7, #12
 800915e:	46bd      	mov	sp, r7
 8009160:	f85d 7b04 	ldr.w	r7, [sp], #4
 8009164:	4770      	bx	lr
	...

08009168 <_ZN14BitmapDatabase11getInstanceEv>:
 8009168:	b480      	push	{r7}
 800916a:	af00      	add	r7, sp, #0
 800916c:	4b02      	ldr	r3, [pc, #8]	@ (8009178 <_ZN14BitmapDatabase11getInstanceEv+0x10>)
 800916e:	4618      	mov	r0, r3
 8009170:	46bd      	mov	sp, r7
 8009172:	f85d 7b04 	ldr.w	r7, [sp], #4
 8009176:	4770      	bx	lr
 8009178:	08022c4c 	.word	0x08022c4c

0800917c <_ZN14BitmapDatabase15getInstanceSizeEv>:
 800917c:	b480      	push	{r7}
 800917e:	af00      	add	r7, sp, #0
 8009180:	2308      	movs	r3, #8
 8009182:	4618      	mov	r0, r3
 8009184:	46bd      	mov	sp, r7
 8009186:	f85d 7b04 	ldr.w	r7, [sp], #4
 800918a:	4770      	bx	lr

0800918c <_ZNK8touchgfx4Font10getKerningEtPKNS_9GlyphNodeE>:
    virtual int8_t getKerning(Unicode::UnicodeChar prevChar, const GlyphNode* glyph) const
 800918c:	b480      	push	{r7}
 800918e:	b085      	sub	sp, #20
 8009190:	af00      	add	r7, sp, #0
 8009192:	60f8      	str	r0, [r7, #12]
 8009194:	460b      	mov	r3, r1
 8009196:	607a      	str	r2, [r7, #4]
 8009198:	817b      	strh	r3, [r7, #10]
        return 0;
 800919a:	2300      	movs	r3, #0
    }
 800919c:	4618      	mov	r0, r3
 800919e:	3714      	adds	r7, #20
 80091a0:	46bd      	mov	sp, r7
 80091a2:	f85d 7b04 	ldr.w	r7, [sp], #4
 80091a6:	4770      	bx	lr

080091a8 <_ZNK8touchgfx4Font12getGSUBTableEv>:
    virtual const uint16_t* getGSUBTable() const
 80091a8:	b480      	push	{r7}
 80091aa:	b083      	sub	sp, #12
 80091ac:	af00      	add	r7, sp, #0
 80091ae:	6078      	str	r0, [r7, #4]
        return 0;
 80091b0:	2300      	movs	r3, #0
    }
 80091b2:	4618      	mov	r0, r3
 80091b4:	370c      	adds	r7, #12
 80091b6:	46bd      	mov	sp, r7
 80091b8:	f85d 7b04 	ldr.w	r7, [sp], #4
 80091bc:	4770      	bx	lr

080091be <_ZNK8touchgfx4Font23getContextualFormsTableEv>:
    virtual const FontContextualFormsTable* getContextualFormsTable() const
 80091be:	b480      	push	{r7}
 80091c0:	b083      	sub	sp, #12
 80091c2:	af00      	add	r7, sp, #0
 80091c4:	6078      	str	r0, [r7, #4]
        return 0;
 80091c6:	2300      	movs	r3, #0
    }
 80091c8:	4618      	mov	r0, r3
 80091ca:	370c      	adds	r7, #12
 80091cc:	46bd      	mov	sp, r7
 80091ce:	f85d 7b04 	ldr.w	r7, [sp], #4
 80091d2:	4770      	bx	lr

080091d4 <_ZN8touchgfx9TypedText25registerTypedTextDatabaseEPKNS0_13TypedTextDataEPKPKNS_4FontEt>:
     *
     * @param  data A reference to the TypedTextData storage array.
     * @param  f    The fonts associated with the array.
     * @param  n    The number of typed texts in the array.
     */
    static void registerTypedTextDatabase(const TypedTextData* data, const Font* const* f, const uint16_t n)
 80091d4:	b480      	push	{r7}
 80091d6:	b085      	sub	sp, #20
 80091d8:	af00      	add	r7, sp, #0
 80091da:	60f8      	str	r0, [r7, #12]
 80091dc:	60b9      	str	r1, [r7, #8]
 80091de:	4613      	mov	r3, r2
 80091e0:	80fb      	strh	r3, [r7, #6]
    {
        typedTexts = data;
 80091e2:	4a07      	ldr	r2, [pc, #28]	@ (8009200 <_ZN8touchgfx9TypedText25registerTypedTextDatabaseEPKNS0_13TypedTextDataEPKPKNS_4FontEt+0x2c>)
 80091e4:	68fb      	ldr	r3, [r7, #12]
 80091e6:	6013      	str	r3, [r2, #0]
        fonts = f;
 80091e8:	4a06      	ldr	r2, [pc, #24]	@ (8009204 <_ZN8touchgfx9TypedText25registerTypedTextDatabaseEPKNS0_13TypedTextDataEPKPKNS_4FontEt+0x30>)
 80091ea:	68bb      	ldr	r3, [r7, #8]
 80091ec:	6013      	str	r3, [r2, #0]
        numberOfTypedTexts = n;
 80091ee:	4a06      	ldr	r2, [pc, #24]	@ (8009208 <_ZN8touchgfx9TypedText25registerTypedTextDatabaseEPKNS0_13TypedTextDataEPKPKNS_4FontEt+0x34>)
 80091f0:	88fb      	ldrh	r3, [r7, #6]
 80091f2:	8013      	strh	r3, [r2, #0]
    }
 80091f4:	bf00      	nop
 80091f6:	3714      	adds	r7, #20
 80091f8:	46bd      	mov	sp, r7
 80091fa:	f85d 7b04 	ldr.w	r7, [sp], #4
 80091fe:	4770      	bx	lr
 8009200:	20002cac 	.word	0x20002cac
 8009204:	20002cb4 	.word	0x20002cb4
 8009208:	20002cb0 	.word	0x20002cb0

0800920c <_ZNK8touchgfx4Font14getStringWidthEPKtz>:
#include <touchgfx/hal/HAL.hpp>
#include <touchgfx/lcd/LCD.hpp>
#include <texts/TypedTextDatabase.hpp>

uint16_t touchgfx::Font::getStringWidth(const touchgfx::Unicode::UnicodeChar* text, ...) const
{
 800920c:	b40e      	push	{r1, r2, r3}
 800920e:	b580      	push	{r7, lr}
 8009210:	b085      	sub	sp, #20
 8009212:	af00      	add	r7, sp, #0
 8009214:	6078      	str	r0, [r7, #4]
    va_list pArg;
    va_start(pArg, text);
 8009216:	f107 0320 	add.w	r3, r7, #32
 800921a:	60bb      	str	r3, [r7, #8]
    uint16_t width = getStringWidthLTR(TEXT_DIRECTION_LTR, text, pArg);
 800921c:	68bb      	ldr	r3, [r7, #8]
 800921e:	69fa      	ldr	r2, [r7, #28]
 8009220:	2100      	movs	r1, #0
 8009222:	6878      	ldr	r0, [r7, #4]
 8009224:	f006 fec0 	bl	800ffa8 <_ZNK8touchgfx4Font17getStringWidthLTREhPKtSt9__va_list>
 8009228:	4603      	mov	r3, r0
 800922a:	81fb      	strh	r3, [r7, #14]
    va_end(pArg);
    return width;
 800922c:	89fb      	ldrh	r3, [r7, #14]
}
 800922e:	4618      	mov	r0, r3
 8009230:	3714      	adds	r7, #20
 8009232:	46bd      	mov	sp, r7
 8009234:	e8bd 4080 	ldmia.w	sp!, {r7, lr}
 8009238:	b003      	add	sp, #12
 800923a:	4770      	bx	lr

0800923c <_ZNK8touchgfx4Font14getStringWidthEhPKtz>:

uint16_t touchgfx::Font::getStringWidth(touchgfx::TextDirection textDirection, const touchgfx::Unicode::UnicodeChar* text, ...) const
{
 800923c:	b40c      	push	{r2, r3}
 800923e:	b580      	push	{r7, lr}
 8009240:	b084      	sub	sp, #16
 8009242:	af00      	add	r7, sp, #0
 8009244:	6078      	str	r0, [r7, #4]
 8009246:	460b      	mov	r3, r1
 8009248:	70fb      	strb	r3, [r7, #3]
    va_list pArg;
    va_start(pArg, text);
 800924a:	f107 031c 	add.w	r3, r7, #28
 800924e:	60bb      	str	r3, [r7, #8]
    uint16_t width = getStringWidthLTR(textDirection, text, pArg);
 8009250:	78f9      	ldrb	r1, [r7, #3]
 8009252:	68bb      	ldr	r3, [r7, #8]
 8009254:	69ba      	ldr	r2, [r7, #24]
 8009256:	6878      	ldr	r0, [r7, #4]
 8009258:	f006 fea6 	bl	800ffa8 <_ZNK8touchgfx4Font17getStringWidthLTREhPKtSt9__va_list>
 800925c:	4603      	mov	r3, r0
 800925e:	81fb      	strh	r3, [r7, #14]
    va_end(pArg);
    return width;
 8009260:	89fb      	ldrh	r3, [r7, #14]
}
 8009262:	4618      	mov	r0, r3
 8009264:	3710      	adds	r7, #16
 8009266:	46bd      	mov	sp, r7
 8009268:	e8bd 4080 	ldmia.w	sp!, {r7, lr}
 800926c:	b002      	add	sp, #8
 800926e:	4770      	bx	lr

08009270 <_ZN8touchgfx12TextProvider15getNextLigatureEh>:

touchgfx::Unicode::UnicodeChar touchgfx::TextProvider::getNextLigature(TextDirection direction)
{
 8009270:	b580      	push	{r7, lr}
 8009272:	b08a      	sub	sp, #40	@ 0x28
 8009274:	af00      	add	r7, sp, #0
 8009276:	6078      	str	r0, [r7, #4]
 8009278:	460b      	mov	r3, r1
 800927a:	70fb      	strb	r3, [r7, #3]
    if (fontGsubTable && nextCharacters.peekChar())
 800927c:	687b      	ldr	r3, [r7, #4]
 800927e:	6c5b      	ldr	r3, [r3, #68]	@ 0x44
 8009280:	2b00      	cmp	r3, #0
 8009282:	d016      	beq.n	80092b2 <_ZN8touchgfx12TextProvider15getNextLigatureEh+0x42>
 8009284:	687b      	ldr	r3, [r7, #4]
 8009286:	3322      	adds	r3, #34	@ 0x22
 8009288:	627b      	str	r3, [r7, #36]	@ 0x24
            return used == size;
        }

        FORCE_INLINE_FUNCTION Unicode::UnicodeChar peekChar()
        {
            assert(used > 0);
 800928a:	6a7b      	ldr	r3, [r7, #36]	@ 0x24
 800928c:	8adb      	ldrh	r3, [r3, #22]
 800928e:	2b00      	cmp	r3, #0
 8009290:	d105      	bne.n	800929e <_ZN8touchgfx12TextProvider15getNextLigatureEh+0x2e>
 8009292:	4b43      	ldr	r3, [pc, #268]	@ (80093a0 <_ZN8touchgfx12TextProvider15getNextLigatureEh+0x130>)
 8009294:	4a43      	ldr	r2, [pc, #268]	@ (80093a4 <_ZN8touchgfx12TextProvider15getNextLigatureEh+0x134>)
 8009296:	21c5      	movs	r1, #197	@ 0xc5
 8009298:	4843      	ldr	r0, [pc, #268]	@ (80093a8 <_ZN8touchgfx12TextProvider15getNextLigatureEh+0x138>)
 800929a:	f017 fab9 	bl	8020810 <__assert_func>
            return buffer[pos];
 800929e:	6a7b      	ldr	r3, [r7, #36]	@ 0x24
 80092a0:	8a9b      	ldrh	r3, [r3, #20]
 80092a2:	461a      	mov	r2, r3
 80092a4:	6a7b      	ldr	r3, [r7, #36]	@ 0x24
 80092a6:	f833 3012 	ldrh.w	r3, [r3, r2, lsl #1]
 80092aa:	2b00      	cmp	r3, #0
 80092ac:	d001      	beq.n	80092b2 <_ZN8touchgfx12TextProvider15getNextLigatureEh+0x42>
 80092ae:	2301      	movs	r3, #1
 80092b0:	e000      	b.n	80092b4 <_ZN8touchgfx12TextProvider15getNextLigatureEh+0x44>
 80092b2:	2300      	movs	r3, #0
 80092b4:	2b00      	cmp	r3, #0
 80092b6:	d06a      	beq.n	800938e <_ZN8touchgfx12TextProvider15getNextLigatureEh+0x11e>
    {
        substituteGlyphs();
 80092b8:	6878      	ldr	r0, [r7, #4]
 80092ba:	f008 f944 	bl	8011546 <_ZN8touchgfx12TextProvider16substituteGlyphsEv>
        if (nextCharacters.peekChar(1) == 0x093F) // Hindi I-matra
 80092be:	687b      	ldr	r3, [r7, #4]
 80092c0:	3322      	adds	r3, #34	@ 0x22
 80092c2:	623b      	str	r3, [r7, #32]
 80092c4:	2301      	movs	r3, #1
 80092c6:	83fb      	strh	r3, [r7, #30]
        }

        FORCE_INLINE_FUNCTION Unicode::UnicodeChar peekChar(uint16_t offset)
        {
            assert(offset < used);
 80092c8:	6a3b      	ldr	r3, [r7, #32]
 80092ca:	8adb      	ldrh	r3, [r3, #22]
 80092cc:	8bfa      	ldrh	r2, [r7, #30]
 80092ce:	429a      	cmp	r2, r3
 80092d0:	d305      	bcc.n	80092de <_ZN8touchgfx12TextProvider15getNextLigatureEh+0x6e>
 80092d2:	4b36      	ldr	r3, [pc, #216]	@ (80093ac <_ZN8touchgfx12TextProvider15getNextLigatureEh+0x13c>)
 80092d4:	4a36      	ldr	r2, [pc, #216]	@ (80093b0 <_ZN8touchgfx12TextProvider15getNextLigatureEh+0x140>)
 80092d6:	21cb      	movs	r1, #203	@ 0xcb
 80092d8:	4833      	ldr	r0, [pc, #204]	@ (80093a8 <_ZN8touchgfx12TextProvider15getNextLigatureEh+0x138>)
 80092da:	f017 fa99 	bl	8020810 <__assert_func>
            const uint16_t index = pos + offset;
 80092de:	6a3b      	ldr	r3, [r7, #32]
 80092e0:	8a9a      	ldrh	r2, [r3, #20]
 80092e2:	8bfb      	ldrh	r3, [r7, #30]
 80092e4:	4413      	add	r3, r2
 80092e6:	83bb      	strh	r3, [r7, #28]
            return buffer[index < size ? index : index - size];
 80092e8:	8bbb      	ldrh	r3, [r7, #28]
 80092ea:	2b09      	cmp	r3, #9
 80092ec:	d801      	bhi.n	80092f2 <_ZN8touchgfx12TextProvider15getNextLigatureEh+0x82>
 80092ee:	8bbb      	ldrh	r3, [r7, #28]
 80092f0:	e001      	b.n	80092f6 <_ZN8touchgfx12TextProvider15getNextLigatureEh+0x86>
 80092f2:	8bbb      	ldrh	r3, [r7, #28]
 80092f4:	3b0a      	subs	r3, #10
 80092f6:	6a3a      	ldr	r2, [r7, #32]
 80092f8:	f832 3013 	ldrh.w	r3, [r2, r3, lsl #1]
 80092fc:	f640 123f 	movw	r2, #2367	@ 0x93f
 8009300:	4293      	cmp	r3, r2
 8009302:	bf0c      	ite	eq
 8009304:	2301      	moveq	r3, #1
 8009306:	2300      	movne	r3, #0
 8009308:	b2db      	uxtb	r3, r3
 800930a:	2b00      	cmp	r3, #0
 800930c:	d03f      	beq.n	800938e <_ZN8touchgfx12TextProvider15getNextLigatureEh+0x11e>
        {
            nextCharacters.replaceAt1(nextCharacters.peekChar());
 800930e:	687b      	ldr	r3, [r7, #4]
 8009310:	3322      	adds	r3, #34	@ 0x22
 8009312:	687a      	ldr	r2, [r7, #4]
 8009314:	3222      	adds	r2, #34	@ 0x22
 8009316:	60ba      	str	r2, [r7, #8]
            assert(used > 0);
 8009318:	68ba      	ldr	r2, [r7, #8]
 800931a:	8ad2      	ldrh	r2, [r2, #22]
 800931c:	2a00      	cmp	r2, #0
 800931e:	d105      	bne.n	800932c <_ZN8touchgfx12TextProvider15getNextLigatureEh+0xbc>
 8009320:	4b1f      	ldr	r3, [pc, #124]	@ (80093a0 <_ZN8touchgfx12TextProvider15getNextLigatureEh+0x130>)
 8009322:	4a20      	ldr	r2, [pc, #128]	@ (80093a4 <_ZN8touchgfx12TextProvider15getNextLigatureEh+0x134>)
 8009324:	21c5      	movs	r1, #197	@ 0xc5
 8009326:	4820      	ldr	r0, [pc, #128]	@ (80093a8 <_ZN8touchgfx12TextProvider15getNextLigatureEh+0x138>)
 8009328:	f017 fa72 	bl	8020810 <__assert_func>
            return buffer[pos];
 800932c:	68ba      	ldr	r2, [r7, #8]
 800932e:	8a92      	ldrh	r2, [r2, #20]
 8009330:	4611      	mov	r1, r2
 8009332:	68ba      	ldr	r2, [r7, #8]
 8009334:	f832 2011 	ldrh.w	r2, [r2, r1, lsl #1]
 8009338:	613b      	str	r3, [r7, #16]
 800933a:	4613      	mov	r3, r2
 800933c:	81fb      	strh	r3, [r7, #14]
            buffer[pos] = newChar;
        }

        FORCE_INLINE_FUNCTION void replaceAt1(Unicode::UnicodeChar newChar)
        {
            assert(used > 1);
 800933e:	693b      	ldr	r3, [r7, #16]
 8009340:	8adb      	ldrh	r3, [r3, #22]
 8009342:	2b01      	cmp	r3, #1
 8009344:	d806      	bhi.n	8009354 <_ZN8touchgfx12TextProvider15getNextLigatureEh+0xe4>
 8009346:	4b1b      	ldr	r3, [pc, #108]	@ (80093b4 <_ZN8touchgfx12TextProvider15getNextLigatureEh+0x144>)
 8009348:	4a1b      	ldr	r2, [pc, #108]	@ (80093b8 <_ZN8touchgfx12TextProvider15getNextLigatureEh+0x148>)
 800934a:	f44f 718e 	mov.w	r1, #284	@ 0x11c
 800934e:	4816      	ldr	r0, [pc, #88]	@ (80093a8 <_ZN8touchgfx12TextProvider15getNextLigatureEh+0x138>)
 8009350:	f017 fa5e 	bl	8020810 <__assert_func>
            const uint16_t index = pos + 1;
 8009354:	693b      	ldr	r3, [r7, #16]
 8009356:	8a9b      	ldrh	r3, [r3, #20]
 8009358:	3301      	adds	r3, #1
 800935a:	81bb      	strh	r3, [r7, #12]
            buffer[index < size ? index : 0] = newChar;
 800935c:	89bb      	ldrh	r3, [r7, #12]
 800935e:	2b09      	cmp	r3, #9
 8009360:	d801      	bhi.n	8009366 <_ZN8touchgfx12TextProvider15getNextLigatureEh+0xf6>
 8009362:	89bb      	ldrh	r3, [r7, #12]
 8009364:	e000      	b.n	8009368 <_ZN8touchgfx12TextProvider15getNextLigatureEh+0xf8>
 8009366:	2300      	movs	r3, #0
 8009368:	693a      	ldr	r2, [r7, #16]
 800936a:	89f9      	ldrh	r1, [r7, #14]
 800936c:	f822 1013 	strh.w	r1, [r2, r3, lsl #1]
        }
 8009370:	bf00      	nop
            nextCharacters.replaceAt0(0x093F);
 8009372:	687b      	ldr	r3, [r7, #4]
 8009374:	3322      	adds	r3, #34	@ 0x22
 8009376:	61bb      	str	r3, [r7, #24]
 8009378:	f640 133f 	movw	r3, #2367	@ 0x93f
 800937c:	82fb      	strh	r3, [r7, #22]
            buffer[pos] = newChar;
 800937e:	69bb      	ldr	r3, [r7, #24]
 8009380:	8a9b      	ldrh	r3, [r3, #20]
 8009382:	4619      	mov	r1, r3
 8009384:	69bb      	ldr	r3, [r7, #24]
 8009386:	8afa      	ldrh	r2, [r7, #22]
 8009388:	f823 2011 	strh.w	r2, [r3, r1, lsl #1]
        }
 800938c:	bf00      	nop
        }
    }
    return getNextChar();
 800938e:	6878      	ldr	r0, [r7, #4]
 8009390:	f007 ffdc 	bl	801134c <_ZN8touchgfx12TextProvider11getNextCharEv>
 8009394:	4603      	mov	r3, r0
}
 8009396:	4618      	mov	r0, r3
 8009398:	3728      	adds	r7, #40	@ 0x28
 800939a:	46bd      	mov	sp, r7
 800939c:	bd80      	pop	{r7, pc}
 800939e:	bf00      	nop
 80093a0:	08021c5c 	.word	0x08021c5c
 80093a4:	08021c68 	.word	0x08021c68
 80093a8:	08021d14 	.word	0x08021d14
 80093ac:	08021d5c 	.word	0x08021d5c
 80093b0:	08021d6c 	.word	0x08021d6c
 80093b4:	08021e40 	.word	0x08021e40
 80093b8:	08021e4c 	.word	0x08021e4c

080093bc <_ZN8touchgfx12TextProvider18initializeInternalEv>:

void touchgfx::TextProvider::initializeInternal()
{
 80093bc:	b580      	push	{r7, lr}
 80093be:	b082      	sub	sp, #8
 80093c0:	af00      	add	r7, sp, #0
 80093c2:	6078      	str	r0, [r7, #4]
    fillInputBuffer();
 80093c4:	6878      	ldr	r0, [r7, #4]
 80093c6:	f007 ff88 	bl	80112da <_ZN8touchgfx12TextProvider15fillInputBufferEv>
}
 80093ca:	bf00      	nop
 80093cc:	3708      	adds	r7, #8
 80093ce:	46bd      	mov	sp, r7
 80093d0:	bd80      	pop	{r7, pc}

080093d2 <_ZN8touchgfx3LCD10drawStringENS_4RectERKS1_RKNS0_13StringVisualsEPKtz>:

void touchgfx::LCD::drawString(touchgfx::Rect widgetArea, const touchgfx::Rect& invalidatedArea, const touchgfx::LCD::StringVisuals& stringVisuals, const touchgfx::Unicode::UnicodeChar* format, ...)
{
 80093d2:	b580      	push	{r7, lr}
 80093d4:	b088      	sub	sp, #32
 80093d6:	af02      	add	r7, sp, #8
 80093d8:	60f8      	str	r0, [r7, #12]
 80093da:	1d38      	adds	r0, r7, #4
 80093dc:	e880 0006 	stmia.w	r0, {r1, r2}
 80093e0:	603b      	str	r3, [r7, #0]
    va_list pArg;
    va_start(pArg, format);
 80093e2:	f107 0328 	add.w	r3, r7, #40	@ 0x28
 80093e6:	617b      	str	r3, [r7, #20]
    drawStringLTR(widgetArea, invalidatedArea, stringVisuals, format, pArg);
 80093e8:	1d39      	adds	r1, r7, #4
 80093ea:	697b      	ldr	r3, [r7, #20]
 80093ec:	9301      	str	r3, [sp, #4]
 80093ee:	6a7b      	ldr	r3, [r7, #36]	@ 0x24
 80093f0:	9300      	str	r3, [sp, #0]
 80093f2:	6a3b      	ldr	r3, [r7, #32]
 80093f4:	683a      	ldr	r2, [r7, #0]
 80093f6:	68f8      	ldr	r0, [r7, #12]
 80093f8:	f005 fa32 	bl	800e860 <_ZN8touchgfx3LCD13drawStringLTRERKNS_4RectES3_RKNS0_13StringVisualsEPKtSt9__va_list>
    va_end(pArg);
}
 80093fc:	bf00      	nop
 80093fe:	3718      	adds	r7, #24
 8009400:	46bd      	mov	sp, r7
 8009402:	bd80      	pop	{r7, pc}

08009404 <_ZN8touchgfx5Texts11setLanguageEt>:
touchgfx::LanguageId touchgfx::Texts::currentLanguage = static_cast<touchgfx::LanguageId>(0);
static const touchgfx::Unicode::UnicodeChar* currentLanguagePtr = 0;
static const uint32_t* currentLanguageIndices = 0;

void touchgfx::Texts::setLanguage(touchgfx::LanguageId id)
{
 8009404:	b590      	push	{r4, r7, lr}
 8009406:	b085      	sub	sp, #20
 8009408:	af00      	add	r7, sp, #0
 800940a:	4603      	mov	r3, r0
 800940c:	80fb      	strh	r3, [r7, #6]
    const touchgfx::TypedText::TypedTextData* currentLanguageTypedText = 0;
 800940e:	2300      	movs	r3, #0
 8009410:	60fb      	str	r3, [r7, #12]
    if (id < 1)
 8009412:	88fb      	ldrh	r3, [r7, #6]
 8009414:	2b00      	cmp	r3, #0
 8009416:	d127      	bne.n	8009468 <_ZN8touchgfx5Texts11setLanguageEt+0x64>
    {
        if (languagesArray[id] != 0)
 8009418:	88fb      	ldrh	r3, [r7, #6]
 800941a:	4a1e      	ldr	r2, [pc, #120]	@ (8009494 <_ZN8touchgfx5Texts11setLanguageEt+0x90>)
 800941c:	f852 3023 	ldr.w	r3, [r2, r3, lsl #2]
 8009420:	2b00      	cmp	r3, #0
 8009422:	d016      	beq.n	8009452 <_ZN8touchgfx5Texts11setLanguageEt+0x4e>
        {
            // Dynamic translation is added
            const TranslationHeader* translation = languagesArray[id];
 8009424:	88fb      	ldrh	r3, [r7, #6]
 8009426:	4a1b      	ldr	r2, [pc, #108]	@ (8009494 <_ZN8touchgfx5Texts11setLanguageEt+0x90>)
 8009428:	f852 3023 	ldr.w	r3, [r2, r3, lsl #2]
 800942c:	60bb      	str	r3, [r7, #8]
            currentLanguagePtr = (const touchgfx::Unicode::UnicodeChar*)(((const uint8_t*)translation) + translation->offset_to_texts);
 800942e:	68bb      	ldr	r3, [r7, #8]
 8009430:	681b      	ldr	r3, [r3, #0]
 8009432:	68ba      	ldr	r2, [r7, #8]
 8009434:	4413      	add	r3, r2
 8009436:	4a18      	ldr	r2, [pc, #96]	@ (8009498 <_ZN8touchgfx5Texts11setLanguageEt+0x94>)
 8009438:	6013      	str	r3, [r2, #0]
            currentLanguageIndices = (const uint32_t*)(((const uint8_t*)translation) + translation->offset_to_indices);
 800943a:	68bb      	ldr	r3, [r7, #8]
 800943c:	685b      	ldr	r3, [r3, #4]
 800943e:	68ba      	ldr	r2, [r7, #8]
 8009440:	4413      	add	r3, r2
 8009442:	4a16      	ldr	r2, [pc, #88]	@ (800949c <_ZN8touchgfx5Texts11setLanguageEt+0x98>)
 8009444:	6013      	str	r3, [r2, #0]
            currentLanguageTypedText = (const touchgfx::TypedText::TypedTextData*)(((const uint8_t*)translation) + translation->offset_to_typedtext);
 8009446:	68bb      	ldr	r3, [r7, #8]
 8009448:	689b      	ldr	r3, [r3, #8]
 800944a:	68ba      	ldr	r2, [r7, #8]
 800944c:	4413      	add	r3, r2
 800944e:	60fb      	str	r3, [r7, #12]
 8009450:	e00a      	b.n	8009468 <_ZN8touchgfx5Texts11setLanguageEt+0x64>
        }
        else
        {
            // Compiled and linked in languages
            currentLanguagePtr = texts_all_languages;
 8009452:	4b11      	ldr	r3, [pc, #68]	@ (8009498 <_ZN8touchgfx5Texts11setLanguageEt+0x94>)
 8009454:	4a12      	ldr	r2, [pc, #72]	@ (80094a0 <_ZN8touchgfx5Texts11setLanguageEt+0x9c>)
 8009456:	601a      	str	r2, [r3, #0]
            currentLanguageIndices = staticLanguageIndices[id];
 8009458:	4a12      	ldr	r2, [pc, #72]	@ (80094a4 <_ZN8touchgfx5Texts11setLanguageEt+0xa0>)
 800945a:	4b10      	ldr	r3, [pc, #64]	@ (800949c <_ZN8touchgfx5Texts11setLanguageEt+0x98>)
 800945c:	601a      	str	r2, [r3, #0]
            currentLanguageTypedText = typedTextDatabaseArray[id];
 800945e:	88fb      	ldrh	r3, [r7, #6]
 8009460:	4a11      	ldr	r2, [pc, #68]	@ (80094a8 <_ZN8touchgfx5Texts11setLanguageEt+0xa4>)
 8009462:	f852 3023 	ldr.w	r3, [r2, r3, lsl #2]
 8009466:	60fb      	str	r3, [r7, #12]
        }
    }

    if (currentLanguageTypedText)
 8009468:	68fb      	ldr	r3, [r7, #12]
 800946a:	2b00      	cmp	r3, #0
 800946c:	d00d      	beq.n	800948a <_ZN8touchgfx5Texts11setLanguageEt+0x86>
    {
        currentLanguage = id;
 800946e:	4a0f      	ldr	r2, [pc, #60]	@ (80094ac <_ZN8touchgfx5Texts11setLanguageEt+0xa8>)
 8009470:	88fb      	ldrh	r3, [r7, #6]
 8009472:	8013      	strh	r3, [r2, #0]
        touchgfx::TypedText::registerTypedTextDatabase(currentLanguageTypedText,
                                                       TypedTextDatabase::getFonts(), TypedTextDatabase::getInstanceSize());
 8009474:	f000 f83e 	bl	80094f4 <_ZN17TypedTextDatabase8getFontsEv>
 8009478:	4604      	mov	r4, r0
        touchgfx::TypedText::registerTypedTextDatabase(currentLanguageTypedText,
 800947a:	f000 f833 	bl	80094e4 <_ZN17TypedTextDatabase15getInstanceSizeEv>
 800947e:	4603      	mov	r3, r0
 8009480:	461a      	mov	r2, r3
 8009482:	4621      	mov	r1, r4
 8009484:	68f8      	ldr	r0, [r7, #12]
 8009486:	f7ff fea5 	bl	80091d4 <_ZN8touchgfx9TypedText25registerTypedTextDatabaseEPKNS0_13TypedTextDataEPKPKNS_4FontEt>
    }
}
 800948a:	bf00      	nop
 800948c:	3714      	adds	r7, #20
 800948e:	46bd      	mov	sp, r7
 8009490:	bd90      	pop	{r4, r7, pc}
 8009492:	bf00      	nop
 8009494:	20000618 	.word	0x20000618
 8009498:	20000620 	.word	0x20000620
 800949c:	20000624 	.word	0x20000624
 80094a0:	08062be4 	.word	0x08062be4
 80094a4:	08062bdc 	.word	0x08062bdc
 80094a8:	08062c00 	.word	0x08062c00
 80094ac:	2000061c 	.word	0x2000061c

080094b0 <_ZNK8touchgfx5Texts7getTextEt>:
{
    languagesArray[id] = (const TranslationHeader*)translation;
}

const touchgfx::Unicode::UnicodeChar* touchgfx::Texts::getText(TypedTextId id) const
{
 80094b0:	b480      	push	{r7}
 80094b2:	b083      	sub	sp, #12
 80094b4:	af00      	add	r7, sp, #0
 80094b6:	6078      	str	r0, [r7, #4]
 80094b8:	460b      	mov	r3, r1
 80094ba:	807b      	strh	r3, [r7, #2]
    return &currentLanguagePtr[currentLanguageIndices[id]];
 80094bc:	4b07      	ldr	r3, [pc, #28]	@ (80094dc <_ZNK8touchgfx5Texts7getTextEt+0x2c>)
 80094be:	681a      	ldr	r2, [r3, #0]
 80094c0:	4b07      	ldr	r3, [pc, #28]	@ (80094e0 <_ZNK8touchgfx5Texts7getTextEt+0x30>)
 80094c2:	6819      	ldr	r1, [r3, #0]
 80094c4:	887b      	ldrh	r3, [r7, #2]
 80094c6:	009b      	lsls	r3, r3, #2
 80094c8:	440b      	add	r3, r1
 80094ca:	681b      	ldr	r3, [r3, #0]
 80094cc:	005b      	lsls	r3, r3, #1
 80094ce:	4413      	add	r3, r2
}
 80094d0:	4618      	mov	r0, r3
 80094d2:	370c      	adds	r7, #12
 80094d4:	46bd      	mov	sp, r7
 80094d6:	f85d 7b04 	ldr.w	r7, [sp], #4
 80094da:	4770      	bx	lr
 80094dc:	20000620 	.word	0x20000620
 80094e0:	20000624 	.word	0x20000624

080094e4 <_ZN17TypedTextDatabase15getInstanceSizeEv>:
{
    return typedTextDatabaseArray[id];
}

uint16_t getInstanceSize()
{
 80094e4:	b480      	push	{r7}
 80094e6:	af00      	add	r7, sp, #0
    return sizeof(typedText_database_DEFAULT) / sizeof(touchgfx::TypedText::TypedTextData);
 80094e8:	2302      	movs	r3, #2
}
 80094ea:	4618      	mov	r0, r3
 80094ec:	46bd      	mov	sp, r7
 80094ee:	f85d 7b04 	ldr.w	r7, [sp], #4
 80094f2:	4770      	bx	lr

080094f4 <_ZN17TypedTextDatabase8getFontsEv>:

const touchgfx::Font** getFonts()
{
 80094f4:	b480      	push	{r7}
 80094f6:	af00      	add	r7, sp, #0
    return touchgfx_fonts;
 80094f8:	4b02      	ldr	r3, [pc, #8]	@ (8009504 <_ZN17TypedTextDatabase8getFontsEv+0x10>)
}
 80094fa:	4618      	mov	r0, r3
 80094fc:	46bd      	mov	sp, r7
 80094fe:	f85d 7b04 	ldr.w	r7, [sp], #4
 8009502:	4770      	bx	lr
 8009504:	20000628 	.word	0x20000628

08009508 <_Z41__static_initialization_and_destruction_0ii>:
    case 1:
        touchgfx_fonts[1] = &(getFont_verdana_30_4bpp());
        break;
    }
}
} // namespace TypedTextDatabase
 8009508:	b580      	push	{r7, lr}
 800950a:	b082      	sub	sp, #8
 800950c:	af00      	add	r7, sp, #0
 800950e:	6078      	str	r0, [r7, #4]
 8009510:	6039      	str	r1, [r7, #0]
 8009512:	687b      	ldr	r3, [r7, #4]
 8009514:	2b01      	cmp	r3, #1
 8009516:	d10e      	bne.n	8009536 <_Z41__static_initialization_and_destruction_0ii+0x2e>
 8009518:	683b      	ldr	r3, [r7, #0]
 800951a:	f64f 72ff 	movw	r2, #65535	@ 0xffff
 800951e:	4293      	cmp	r3, r2
 8009520:	d109      	bne.n	8009536 <_Z41__static_initialization_and_destruction_0ii+0x2e>
    &(getFont_Asap_Regular_80_4bpp()),
 8009522:	f7fd ff6f 	bl	8007404 <_Z28getFont_Asap_Regular_80_4bppv>
 8009526:	4603      	mov	r3, r0
};
 8009528:	4a05      	ldr	r2, [pc, #20]	@ (8009540 <_Z41__static_initialization_and_destruction_0ii+0x38>)
 800952a:	6013      	str	r3, [r2, #0]
    &(getFont_verdana_30_4bpp())
 800952c:	f7fd ffc4 	bl	80074b8 <_Z23getFont_verdana_30_4bppv>
 8009530:	4603      	mov	r3, r0
};
 8009532:	4a03      	ldr	r2, [pc, #12]	@ (8009540 <_Z41__static_initialization_and_destruction_0ii+0x38>)
 8009534:	6053      	str	r3, [r2, #4]
} // namespace TypedTextDatabase
 8009536:	bf00      	nop
 8009538:	3708      	adds	r7, #8
 800953a:	46bd      	mov	sp, r7
 800953c:	bd80      	pop	{r7, pc}
 800953e:	bf00      	nop
 8009540:	20000628 	.word	0x20000628

08009544 <_GLOBAL__sub_I_touchgfx_fonts>:
 8009544:	b580      	push	{r7, lr}
 8009546:	af00      	add	r7, sp, #0
 8009548:	f64f 71ff 	movw	r1, #65535	@ 0xffff
 800954c:	2001      	movs	r0, #1
 800954e:	f7ff ffdb 	bl	8009508 <_Z41__static_initialization_and_destruction_0ii>
 8009552:	bd80      	pop	{r7, pc}

08009554 <_ZN19FrontendApplicationD1Ev>:

class FrontendApplication : public FrontendApplicationBase
{
public:
    FrontendApplication(Model& m, FrontendHeap& heap);
    virtual ~FrontendApplication() { }
 8009554:	b580      	push	{r7, lr}
 8009556:	b082      	sub	sp, #8
 8009558:	af00      	add	r7, sp, #0
 800955a:	6078      	str	r0, [r7, #4]
 800955c:	4a05      	ldr	r2, [pc, #20]	@ (8009574 <_ZN19FrontendApplicationD1Ev+0x20>)
 800955e:	687b      	ldr	r3, [r7, #4]
 8009560:	601a      	str	r2, [r3, #0]
 8009562:	687b      	ldr	r3, [r7, #4]
 8009564:	4618      	mov	r0, r3
 8009566:	f7fe fa07 	bl	8007978 <_ZN23FrontendApplicationBaseD1Ev>
 800956a:	687b      	ldr	r3, [r7, #4]
 800956c:	4618      	mov	r0, r3
 800956e:	3708      	adds	r7, #8
 8009570:	46bd      	mov	sp, r7
 8009572:	bd80      	pop	{r7, pc}
 8009574:	08022d58 	.word	0x08022d58

08009578 <_ZN19FrontendApplicationD0Ev>:
 8009578:	b580      	push	{r7, lr}
 800957a:	b082      	sub	sp, #8
 800957c:	af00      	add	r7, sp, #0
 800957e:	6078      	str	r0, [r7, #4]
 8009580:	6878      	ldr	r0, [r7, #4]
 8009582:	f7ff ffe7 	bl	8009554 <_ZN19FrontendApplicationD1Ev>
 8009586:	f44f 71ae 	mov.w	r1, #348	@ 0x15c
 800958a:	6878      	ldr	r0, [r7, #4]
 800958c:	f017 f911 	bl	80207b2 <_ZdlPvj>
 8009590:	687b      	ldr	r3, [r7, #4]
 8009592:	4618      	mov	r0, r3
 8009594:	3708      	adds	r7, #8
 8009596:	46bd      	mov	sp, r7
 8009598:	bd80      	pop	{r7, pc}

0800959a <_ZN19FrontendApplication15handleTickEventEv>:

    virtual void handleTickEvent()
 800959a:	b580      	push	{r7, lr}
 800959c:	b082      	sub	sp, #8
 800959e:	af00      	add	r7, sp, #0
 80095a0:	6078      	str	r0, [r7, #4]
    {
        model.tick();
 80095a2:	687b      	ldr	r3, [r7, #4]
 80095a4:	f8d3 3158 	ldr.w	r3, [r3, #344]	@ 0x158
 80095a8:	4618      	mov	r0, r3
 80095aa:	f000 f9e9 	bl	8009980 <_ZN5Model4tickEv>
        FrontendApplicationBase::handleTickEvent();
 80095ae:	687b      	ldr	r3, [r7, #4]
 80095b0:	4618      	mov	r0, r3
 80095b2:	f005 fe2f 	bl	800f214 <_ZN8touchgfx11Application15handleTickEventEv>
    }
 80095b6:	bf00      	nop
 80095b8:	3708      	adds	r7, #8
 80095ba:	46bd      	mov	sp, r7
 80095bc:	bd80      	pop	{r7, pc}
	...

080095c0 <_ZN19FrontendApplicationC1ER5ModelR12FrontendHeap>:
#include <gui/common/FrontendApplication.hpp>

FrontendApplication::FrontendApplication(Model& m, FrontendHeap& heap)
 80095c0:	b580      	push	{r7, lr}
 80095c2:	b084      	sub	sp, #16
 80095c4:	af00      	add	r7, sp, #0
 80095c6:	60f8      	str	r0, [r7, #12]
 80095c8:	60b9      	str	r1, [r7, #8]
 80095ca:	607a      	str	r2, [r7, #4]
    : FrontendApplicationBase(m, heap)
 80095cc:	68fb      	ldr	r3, [r7, #12]
 80095ce:	687a      	ldr	r2, [r7, #4]
 80095d0:	68b9      	ldr	r1, [r7, #8]
 80095d2:	4618      	mov	r0, r3
 80095d4:	f7fe fa20 	bl	8007a18 <_ZN23FrontendApplicationBaseC1ER5ModelR12FrontendHeap>
 80095d8:	4a03      	ldr	r2, [pc, #12]	@ (80095e8 <_ZN19FrontendApplicationC1ER5ModelR12FrontendHeap+0x28>)
 80095da:	68fb      	ldr	r3, [r7, #12]
 80095dc:	601a      	str	r2, [r3, #0]
{
}
 80095de:	68fb      	ldr	r3, [r7, #12]
 80095e0:	4618      	mov	r0, r3
 80095e2:	3710      	adds	r7, #16
 80095e4:	46bd      	mov	sp, r7
 80095e6:	bd80      	pop	{r7, pc}
 80095e8:	08022d58 	.word	0x08022d58

080095ec <_ZN8touchgfx9Presenter8activateEv>:
     * Place initialization code for the Presenter here.
     *
     * The activate function is called automatically when a screen transition causes this
     * Presenter to become active. Place initialization code for the Presenter here.
     */
    virtual void activate()
 80095ec:	b480      	push	{r7}
 80095ee:	b083      	sub	sp, #12
 80095f0:	af00      	add	r7, sp, #0
 80095f2:	6078      	str	r0, [r7, #4]
    {
    }
 80095f4:	bf00      	nop
 80095f6:	370c      	adds	r7, #12
 80095f8:	46bd      	mov	sp, r7
 80095fa:	f85d 7b04 	ldr.w	r7, [sp], #4
 80095fe:	4770      	bx	lr

08009600 <_ZN8touchgfx9Presenter10deactivateEv>:
     * Place cleanup code for the Presenter here.
     *
     * The deactivate function is called automatically when a screen transition causes this
     * Presenter to become inactive. Place cleanup code for the Presenter here.
     */
    virtual void deactivate()
 8009600:	b480      	push	{r7}
 8009602:	b083      	sub	sp, #12
 8009604:	af00      	add	r7, sp, #0
 8009606:	6078      	str	r0, [r7, #4]
    {
    }
 8009608:	bf00      	nop
 800960a:	370c      	adds	r7, #12
 800960c:	46bd      	mov	sp, r7
 800960e:	f85d 7b04 	ldr.w	r7, [sp], #4
 8009612:	4770      	bx	lr

08009614 <_ZN8touchgfx9PresenterD1Ev>:

    /** Finalizes an instance of the Presenter class. */
    virtual ~Presenter()
 8009614:	b480      	push	{r7}
 8009616:	b083      	sub	sp, #12
 8009618:	af00      	add	r7, sp, #0
 800961a:	6078      	str	r0, [r7, #4]
    {
 800961c:	4a04      	ldr	r2, [pc, #16]	@ (8009630 <_ZN8touchgfx9PresenterD1Ev+0x1c>)
 800961e:	687b      	ldr	r3, [r7, #4]
 8009620:	601a      	str	r2, [r3, #0]
    }
 8009622:	687b      	ldr	r3, [r7, #4]
 8009624:	4618      	mov	r0, r3
 8009626:	370c      	adds	r7, #12
 8009628:	46bd      	mov	sp, r7
 800962a:	f85d 7b04 	ldr.w	r7, [sp], #4
 800962e:	4770      	bx	lr
 8009630:	08022df0 	.word	0x08022df0

08009634 <_ZN8touchgfx9PresenterD0Ev>:
    virtual ~Presenter()
 8009634:	b580      	push	{r7, lr}
 8009636:	b082      	sub	sp, #8
 8009638:	af00      	add	r7, sp, #0
 800963a:	6078      	str	r0, [r7, #4]
    }
 800963c:	6878      	ldr	r0, [r7, #4]
 800963e:	f7ff ffe9 	bl	8009614 <_ZN8touchgfx9PresenterD1Ev>
 8009642:	2104      	movs	r1, #4
 8009644:	6878      	ldr	r0, [r7, #4]
 8009646:	f017 f8b4 	bl	80207b2 <_ZdlPvj>
 800964a:	687b      	ldr	r3, [r7, #4]
 800964c:	4618      	mov	r0, r3
 800964e:	3708      	adds	r7, #8
 8009650:	46bd      	mov	sp, r7
 8009652:	bd80      	pop	{r7, pc}

08009654 <_ZN8touchgfx9PresenterC1Ev>:

protected:
    /** Initializes a new instance of the Presenter class. */
    Presenter()
 8009654:	b480      	push	{r7}
 8009656:	b083      	sub	sp, #12
 8009658:	af00      	add	r7, sp, #0
 800965a:	6078      	str	r0, [r7, #4]
    {
 800965c:	4a04      	ldr	r2, [pc, #16]	@ (8009670 <_ZN8touchgfx9PresenterC1Ev+0x1c>)
 800965e:	687b      	ldr	r3, [r7, #4]
 8009660:	601a      	str	r2, [r3, #0]
    }
 8009662:	687b      	ldr	r3, [r7, #4]
 8009664:	4618      	mov	r0, r3
 8009666:	370c      	adds	r7, #12
 8009668:	46bd      	mov	sp, r7
 800966a:	f85d 7b04 	ldr.w	r7, [sp], #4
 800966e:	4770      	bx	lr
 8009670:	08022df0 	.word	0x08022df0

08009674 <_ZN13ModelListenerC1Ev>:
    ModelListener() : model(0) {}
 8009674:	b480      	push	{r7}
 8009676:	b083      	sub	sp, #12
 8009678:	af00      	add	r7, sp, #0
 800967a:	6078      	str	r0, [r7, #4]
 800967c:	4a06      	ldr	r2, [pc, #24]	@ (8009698 <_ZN13ModelListenerC1Ev+0x24>)
 800967e:	687b      	ldr	r3, [r7, #4]
 8009680:	601a      	str	r2, [r3, #0]
 8009682:	687b      	ldr	r3, [r7, #4]
 8009684:	2200      	movs	r2, #0
 8009686:	605a      	str	r2, [r3, #4]
 8009688:	687b      	ldr	r3, [r7, #4]
 800968a:	4618      	mov	r0, r3
 800968c:	370c      	adds	r7, #12
 800968e:	46bd      	mov	sp, r7
 8009690:	f85d 7b04 	ldr.w	r7, [sp], #4
 8009694:	4770      	bx	lr
 8009696:	bf00      	nop
 8009698:	08022ddc 	.word	0x08022ddc

0800969c <_ZN13ModelListenerD1Ev>:
    virtual ~ModelListener() {}
 800969c:	b480      	push	{r7}
 800969e:	b083      	sub	sp, #12
 80096a0:	af00      	add	r7, sp, #0
 80096a2:	6078      	str	r0, [r7, #4]
 80096a4:	4a04      	ldr	r2, [pc, #16]	@ (80096b8 <_ZN13ModelListenerD1Ev+0x1c>)
 80096a6:	687b      	ldr	r3, [r7, #4]
 80096a8:	601a      	str	r2, [r3, #0]
 80096aa:	687b      	ldr	r3, [r7, #4]
 80096ac:	4618      	mov	r0, r3
 80096ae:	370c      	adds	r7, #12
 80096b0:	46bd      	mov	sp, r7
 80096b2:	f85d 7b04 	ldr.w	r7, [sp], #4
 80096b6:	4770      	bx	lr
 80096b8:	08022ddc 	.word	0x08022ddc

080096bc <_ZN13ModelListenerD0Ev>:
 80096bc:	b580      	push	{r7, lr}
 80096be:	b082      	sub	sp, #8
 80096c0:	af00      	add	r7, sp, #0
 80096c2:	6078      	str	r0, [r7, #4]
 80096c4:	6878      	ldr	r0, [r7, #4]
 80096c6:	f7ff ffe9 	bl	800969c <_ZN13ModelListenerD1Ev>
 80096ca:	2108      	movs	r1, #8
 80096cc:	6878      	ldr	r0, [r7, #4]
 80096ce:	f017 f870 	bl	80207b2 <_ZdlPvj>
 80096d2:	687b      	ldr	r3, [r7, #4]
 80096d4:	4618      	mov	r0, r3
 80096d6:	3708      	adds	r7, #8
 80096d8:	46bd      	mov	sp, r7
 80096da:	bd80      	pop	{r7, pc}

080096dc <_ZN13ModelListener16notifyADCChangedEm>:


    virtual void notifyADCChanged(uint32_t newVal) {}
 80096dc:	b480      	push	{r7}
 80096de:	b083      	sub	sp, #12
 80096e0:	af00      	add	r7, sp, #0
 80096e2:	6078      	str	r0, [r7, #4]
 80096e4:	6039      	str	r1, [r7, #0]
 80096e6:	bf00      	nop
 80096e8:	370c      	adds	r7, #12
 80096ea:	46bd      	mov	sp, r7
 80096ec:	f85d 7b04 	ldr.w	r7, [sp], #4
 80096f0:	4770      	bx	lr
	...

080096f4 <_ZN13MainPresenterD1Ev>:
     * The deactivate function is called automatically when this screen is "switched out"
     * (ie. made inactive). Teardown functionality can be placed here.
     */
    virtual void deactivate();

    virtual ~MainPresenter() {};
 80096f4:	b580      	push	{r7, lr}
 80096f6:	b082      	sub	sp, #8
 80096f8:	af00      	add	r7, sp, #0
 80096fa:	6078      	str	r0, [r7, #4]
 80096fc:	4a09      	ldr	r2, [pc, #36]	@ (8009724 <_ZN13MainPresenterD1Ev+0x30>)
 80096fe:	687b      	ldr	r3, [r7, #4]
 8009700:	601a      	str	r2, [r3, #0]
 8009702:	4a09      	ldr	r2, [pc, #36]	@ (8009728 <_ZN13MainPresenterD1Ev+0x34>)
 8009704:	687b      	ldr	r3, [r7, #4]
 8009706:	605a      	str	r2, [r3, #4]
 8009708:	687b      	ldr	r3, [r7, #4]
 800970a:	3304      	adds	r3, #4
 800970c:	4618      	mov	r0, r3
 800970e:	f7ff ffc5 	bl	800969c <_ZN13ModelListenerD1Ev>
 8009712:	687b      	ldr	r3, [r7, #4]
 8009714:	4618      	mov	r0, r3
 8009716:	f7ff ff7d 	bl	8009614 <_ZN8touchgfx9PresenterD1Ev>
 800971a:	687b      	ldr	r3, [r7, #4]
 800971c:	4618      	mov	r0, r3
 800971e:	3708      	adds	r7, #8
 8009720:	46bd      	mov	sp, r7
 8009722:	bd80      	pop	{r7, pc}
 8009724:	08022dac 	.word	0x08022dac
 8009728:	08022dc8 	.word	0x08022dc8

0800972c <_ZThn4_N13MainPresenterD1Ev>:
 800972c:	f1a0 0004 	sub.w	r0, r0, #4
 8009730:	e7e0      	b.n	80096f4 <_ZN13MainPresenterD1Ev>
 8009732:	bf00      	nop

08009734 <_ZN13MainPresenterD0Ev>:
 8009734:	b580      	push	{r7, lr}
 8009736:	b082      	sub	sp, #8
 8009738:	af00      	add	r7, sp, #0
 800973a:	6078      	str	r0, [r7, #4]
 800973c:	6878      	ldr	r0, [r7, #4]
 800973e:	f7ff ffd9 	bl	80096f4 <_ZN13MainPresenterD1Ev>
 8009742:	2110      	movs	r1, #16
 8009744:	6878      	ldr	r0, [r7, #4]
 8009746:	f017 f834 	bl	80207b2 <_ZdlPvj>
 800974a:	687b      	ldr	r3, [r7, #4]
 800974c:	4618      	mov	r0, r3
 800974e:	3708      	adds	r7, #8
 8009750:	46bd      	mov	sp, r7
 8009752:	bd80      	pop	{r7, pc}

08009754 <_ZThn4_N13MainPresenterD0Ev>:
 8009754:	f1a0 0004 	sub.w	r0, r0, #4
 8009758:	e7ec      	b.n	8009734 <_ZN13MainPresenterD0Ev>
	...

0800975c <_ZN13MainPresenterC1ER8MainView>:
#include <gui/main_screen/MainView.hpp>
#include <gui/main_screen/MainPresenter.hpp>

MainPresenter::MainPresenter(MainView& v)
 800975c:	b580      	push	{r7, lr}
 800975e:	b082      	sub	sp, #8
 8009760:	af00      	add	r7, sp, #0
 8009762:	6078      	str	r0, [r7, #4]
 8009764:	6039      	str	r1, [r7, #0]
    : view(v)
 8009766:	687b      	ldr	r3, [r7, #4]
 8009768:	4618      	mov	r0, r3
 800976a:	f7ff ff73 	bl	8009654 <_ZN8touchgfx9PresenterC1Ev>
 800976e:	687b      	ldr	r3, [r7, #4]
 8009770:	3304      	adds	r3, #4
 8009772:	4618      	mov	r0, r3
 8009774:	f7ff ff7e 	bl	8009674 <_ZN13ModelListenerC1Ev>
 8009778:	4a06      	ldr	r2, [pc, #24]	@ (8009794 <_ZN13MainPresenterC1ER8MainView+0x38>)
 800977a:	687b      	ldr	r3, [r7, #4]
 800977c:	601a      	str	r2, [r3, #0]
 800977e:	4a06      	ldr	r2, [pc, #24]	@ (8009798 <_ZN13MainPresenterC1ER8MainView+0x3c>)
 8009780:	687b      	ldr	r3, [r7, #4]
 8009782:	605a      	str	r2, [r3, #4]
 8009784:	687b      	ldr	r3, [r7, #4]
 8009786:	683a      	ldr	r2, [r7, #0]
 8009788:	60da      	str	r2, [r3, #12]
{
}
 800978a:	687b      	ldr	r3, [r7, #4]
 800978c:	4618      	mov	r0, r3
 800978e:	3708      	adds	r7, #8
 8009790:	46bd      	mov	sp, r7
 8009792:	bd80      	pop	{r7, pc}
 8009794:	08022dac 	.word	0x08022dac
 8009798:	08022dc8 	.word	0x08022dc8

0800979c <_ZN13MainPresenter8activateEv>:

void MainPresenter::activate()
{
 800979c:	b480      	push	{r7}
 800979e:	b083      	sub	sp, #12
 80097a0:	af00      	add	r7, sp, #0
 80097a2:	6078      	str	r0, [r7, #4]
}
 80097a4:	bf00      	nop
 80097a6:	370c      	adds	r7, #12
 80097a8:	46bd      	mov	sp, r7
 80097aa:	f85d 7b04 	ldr.w	r7, [sp], #4
 80097ae:	4770      	bx	lr

080097b0 <_ZN13MainPresenter10deactivateEv>:

void MainPresenter::deactivate()
{
 80097b0:	b480      	push	{r7}
 80097b2:	b083      	sub	sp, #12
 80097b4:	af00      	add	r7, sp, #0
 80097b6:	6078      	str	r0, [r7, #4]
}
 80097b8:	bf00      	nop
 80097ba:	370c      	adds	r7, #12
 80097bc:	46bd      	mov	sp, r7
 80097be:	f85d 7b04 	ldr.w	r7, [sp], #4
 80097c2:	4770      	bx	lr

080097c4 <_ZN13MainPresenter16notifyADCChangedEm>:


void MainPresenter::notifyADCChanged(uint32_t newVal){
 80097c4:	b580      	push	{r7, lr}
 80097c6:	b082      	sub	sp, #8
 80097c8:	af00      	add	r7, sp, #0
 80097ca:	6078      	str	r0, [r7, #4]
 80097cc:	6039      	str	r1, [r7, #0]
	view.setVal(newVal);
 80097ce:	687b      	ldr	r3, [r7, #4]
 80097d0:	68da      	ldr	r2, [r3, #12]
 80097d2:	687b      	ldr	r3, [r7, #4]
 80097d4:	68db      	ldr	r3, [r3, #12]
 80097d6:	681b      	ldr	r3, [r3, #0]
 80097d8:	3338      	adds	r3, #56	@ 0x38
 80097da:	681b      	ldr	r3, [r3, #0]
 80097dc:	6839      	ldr	r1, [r7, #0]
 80097de:	4610      	mov	r0, r2
 80097e0:	4798      	blx	r3
}
 80097e2:	bf00      	nop
 80097e4:	3708      	adds	r7, #8
 80097e6:	46bd      	mov	sp, r7
 80097e8:	bd80      	pop	{r7, pc}

080097ea <_ZThn4_N13MainPresenter16notifyADCChangedEm>:

    virtual void notifyADCChanged(uint32_t newVal);
 80097ea:	f1a0 0004 	sub.w	r0, r0, #4
 80097ee:	f7ff bfe9 	b.w	80097c4 <_ZN13MainPresenter16notifyADCChangedEm>
	...

080097f4 <_ZN8MainViewD1Ev>:

class MainView : public MainViewBase
{
public:
    MainView();
    ~MainView() {};
 80097f4:	b580      	push	{r7, lr}
 80097f6:	b082      	sub	sp, #8
 80097f8:	af00      	add	r7, sp, #0
 80097fa:	6078      	str	r0, [r7, #4]
 80097fc:	4a05      	ldr	r2, [pc, #20]	@ (8009814 <_ZN8MainViewD1Ev+0x20>)
 80097fe:	687b      	ldr	r3, [r7, #4]
 8009800:	601a      	str	r2, [r3, #0]
 8009802:	687b      	ldr	r3, [r7, #4]
 8009804:	4618      	mov	r0, r3
 8009806:	f7ff fb01 	bl	8008e0c <_ZN12MainViewBaseD1Ev>
 800980a:	687b      	ldr	r3, [r7, #4]
 800980c:	4618      	mov	r0, r3
 800980e:	3708      	adds	r7, #8
 8009810:	46bd      	mov	sp, r7
 8009812:	bd80      	pop	{r7, pc}
 8009814:	08022e08 	.word	0x08022e08

08009818 <_ZN8MainViewD0Ev>:
 8009818:	b580      	push	{r7, lr}
 800981a:	b082      	sub	sp, #8
 800981c:	af00      	add	r7, sp, #0
 800981e:	6078      	str	r0, [r7, #4]
 8009820:	6878      	ldr	r0, [r7, #4]
 8009822:	f7ff ffe7 	bl	80097f4 <_ZN8MainViewD1Ev>
 8009826:	f44f 7196 	mov.w	r1, #300	@ 0x12c
 800982a:	6878      	ldr	r0, [r7, #4]
 800982c:	f016 ffc1 	bl	80207b2 <_ZdlPvj>
 8009830:	687b      	ldr	r3, [r7, #4]
 8009832:	4618      	mov	r0, r3
 8009834:	3708      	adds	r7, #8
 8009836:	46bd      	mov	sp, r7
 8009838:	bd80      	pop	{r7, pc}
	...

0800983c <_ZN8MainViewC1Ev>:

const uint8_t UPPER_LIMIT = 42;
const uint8_t LOWER_LIMIT = 0;


MainView::MainView() : count(0) {}
 800983c:	b580      	push	{r7, lr}
 800983e:	b082      	sub	sp, #8
 8009840:	af00      	add	r7, sp, #0
 8009842:	6078      	str	r0, [r7, #4]
 8009844:	687b      	ldr	r3, [r7, #4]
 8009846:	4618      	mov	r0, r3
 8009848:	f7ff f9d2 	bl	8008bf0 <_ZN12MainViewBaseC1Ev>
 800984c:	4a05      	ldr	r2, [pc, #20]	@ (8009864 <_ZN8MainViewC1Ev+0x28>)
 800984e:	687b      	ldr	r3, [r7, #4]
 8009850:	601a      	str	r2, [r3, #0]
 8009852:	687b      	ldr	r3, [r7, #4]
 8009854:	2200      	movs	r2, #0
 8009856:	f883 2128 	strb.w	r2, [r3, #296]	@ 0x128
 800985a:	687b      	ldr	r3, [r7, #4]
 800985c:	4618      	mov	r0, r3
 800985e:	3708      	adds	r7, #8
 8009860:	46bd      	mov	sp, r7
 8009862:	bd80      	pop	{r7, pc}
 8009864:	08022e08 	.word	0x08022e08

08009868 <_ZN8MainView11setupScreenEv>:

void MainView::setupScreen()
{
 8009868:	b580      	push	{r7, lr}
 800986a:	b082      	sub	sp, #8
 800986c:	af00      	add	r7, sp, #0
 800986e:	6078      	str	r0, [r7, #4]
    updateGFXElements();
 8009870:	6878      	ldr	r0, [r7, #4]
 8009872:	f000 f855 	bl	8009920 <_ZN8MainView17updateGFXElementsEv>
    MainViewBase::setupScreen();
 8009876:	687b      	ldr	r3, [r7, #4]
 8009878:	4618      	mov	r0, r3
 800987a:	f7ff fb00 	bl	8008e7e <_ZN12MainViewBase11setupScreenEv>

}
 800987e:	bf00      	nop
 8009880:	3708      	adds	r7, #8
 8009882:	46bd      	mov	sp, r7
 8009884:	bd80      	pop	{r7, pc}

08009886 <_ZN8MainView13increaseValueEv>:

void MainView::increaseValue()
{
 8009886:	b580      	push	{r7, lr}
 8009888:	b082      	sub	sp, #8
 800988a:	af00      	add	r7, sp, #0
 800988c:	6078      	str	r0, [r7, #4]
    count = (count++ > UPPER_LIMIT) ? UPPER_LIMIT : count;
 800988e:	687b      	ldr	r3, [r7, #4]
 8009890:	f893 3128 	ldrb.w	r3, [r3, #296]	@ 0x128
 8009894:	1c5a      	adds	r2, r3, #1
 8009896:	b2d1      	uxtb	r1, r2
 8009898:	687a      	ldr	r2, [r7, #4]
 800989a:	f882 1128 	strb.w	r1, [r2, #296]	@ 0x128
 800989e:	2b2a      	cmp	r3, #42	@ 0x2a
 80098a0:	d804      	bhi.n	80098ac <_ZN8MainView13increaseValueEv+0x26>
 80098a2:	687b      	ldr	r3, [r7, #4]
 80098a4:	f503 7394 	add.w	r3, r3, #296	@ 0x128
 80098a8:	781a      	ldrb	r2, [r3, #0]
 80098aa:	e000      	b.n	80098ae <_ZN8MainView13increaseValueEv+0x28>
 80098ac:	222a      	movs	r2, #42	@ 0x2a
 80098ae:	687b      	ldr	r3, [r7, #4]
 80098b0:	f883 2128 	strb.w	r2, [r3, #296]	@ 0x128
    updateGFXElements();
 80098b4:	6878      	ldr	r0, [r7, #4]
 80098b6:	f000 f833 	bl	8009920 <_ZN8MainView17updateGFXElementsEv>
}
 80098ba:	bf00      	nop
 80098bc:	3708      	adds	r7, #8
 80098be:	46bd      	mov	sp, r7
 80098c0:	bd80      	pop	{r7, pc}

080098c2 <_ZN8MainView13decreaseValueEv>:

void MainView::decreaseValue()
{
 80098c2:	b580      	push	{r7, lr}
 80098c4:	b082      	sub	sp, #8
 80098c6:	af00      	add	r7, sp, #0
 80098c8:	6078      	str	r0, [r7, #4]
    count = (count-- <= LOWER_LIMIT) ? LOWER_LIMIT : count;
 80098ca:	687b      	ldr	r3, [r7, #4]
 80098cc:	f893 3128 	ldrb.w	r3, [r3, #296]	@ 0x128
 80098d0:	1e5a      	subs	r2, r3, #1
 80098d2:	b2d1      	uxtb	r1, r2
 80098d4:	687a      	ldr	r2, [r7, #4]
 80098d6:	f882 1128 	strb.w	r1, [r2, #296]	@ 0x128
 80098da:	2b00      	cmp	r3, #0
 80098dc:	d004      	beq.n	80098e8 <_ZN8MainView13decreaseValueEv+0x26>
 80098de:	687b      	ldr	r3, [r7, #4]
 80098e0:	f503 7394 	add.w	r3, r3, #296	@ 0x128
 80098e4:	781a      	ldrb	r2, [r3, #0]
 80098e6:	e000      	b.n	80098ea <_ZN8MainView13decreaseValueEv+0x28>
 80098e8:	2200      	movs	r2, #0
 80098ea:	687b      	ldr	r3, [r7, #4]
 80098ec:	f883 2128 	strb.w	r2, [r3, #296]	@ 0x128
    updateGFXElements();
 80098f0:	6878      	ldr	r0, [r7, #4]
 80098f2:	f000 f815 	bl	8009920 <_ZN8MainView17updateGFXElementsEv>
}
 80098f6:	bf00      	nop
 80098f8:	3708      	adds	r7, #8
 80098fa:	46bd      	mov	sp, r7
 80098fc:	bd80      	pop	{r7, pc}
	...

08009900 <_ZN8MainView12ToggleLightsEv>:

void MainView::ToggleLights(){
 8009900:	b580      	push	{r7, lr}
 8009902:	b082      	sub	sp, #8
 8009904:	af00      	add	r7, sp, #0
 8009906:	6078      	str	r0, [r7, #4]
	HAL_GPIO_TogglePin(GPIOB, GPIO_PIN_8);
 8009908:	f44f 7180 	mov.w	r1, #256	@ 0x100
 800990c:	4803      	ldr	r0, [pc, #12]	@ (800991c <_ZN8MainView12ToggleLightsEv+0x1c>)
 800990e:	f7f9 fd94 	bl	800343a <HAL_GPIO_TogglePin>


}
 8009912:	bf00      	nop
 8009914:	3708      	adds	r7, #8
 8009916:	46bd      	mov	sp, r7
 8009918:	bd80      	pop	{r7, pc}
 800991a:	bf00      	nop
 800991c:	40020400 	.word	0x40020400

08009920 <_ZN8MainView17updateGFXElementsEv>:
void MainView::updateGFXElements()
{
 8009920:	b480      	push	{r7}
 8009922:	b083      	sub	sp, #12
 8009924:	af00      	add	r7, sp, #0
 8009926:	6078      	str	r0, [r7, #4]
//    }
//    // Invalidate all GFX area, which will result in it being redrawn in next tick.
//    countTxt.invalidate();
//    buttonUp.invalidate();
//    buttonDown.invalidate();
}
 8009928:	bf00      	nop
 800992a:	370c      	adds	r7, #12
 800992c:	46bd      	mov	sp, r7
 800992e:	f85d 7b04 	ldr.w	r7, [sp], #4
 8009932:	4770      	bx	lr

08009934 <_ZN8MainView6setValEm>:

void MainView::setVal(uint32_t val){
 8009934:	b580      	push	{r7, lr}
 8009936:	b082      	sub	sp, #8
 8009938:	af00      	add	r7, sp, #0
 800993a:	6078      	str	r0, [r7, #4]
 800993c:	6039      	str	r1, [r7, #0]

	Unicode::snprintf(ADCVALBuffer, ADCVAL_SIZE, "%d", val);
 800993e:	687b      	ldr	r3, [r7, #4]
 8009940:	f103 00f0 	add.w	r0, r3, #240	@ 0xf0
 8009944:	683b      	ldr	r3, [r7, #0]
 8009946:	4a06      	ldr	r2, [pc, #24]	@ (8009960 <_ZN8MainView6setValEm+0x2c>)
 8009948:	2114      	movs	r1, #20
 800994a:	f008 fba5 	bl	8012098 <_ZN8touchgfx7Unicode8snprintfEPttPKcz>
	ADCVAL.invalidate();
 800994e:	687b      	ldr	r3, [r7, #4]
 8009950:	33a4      	adds	r3, #164	@ 0xa4
 8009952:	4618      	mov	r0, r3
 8009954:	f006 fc52 	bl	80101fc <_ZNK8touchgfx8Drawable10invalidateEv>





}
 8009958:	bf00      	nop
 800995a:	3708      	adds	r7, #8
 800995c:	46bd      	mov	sp, r7
 800995e:	bd80      	pop	{r7, pc}
 8009960:	08021f00 	.word	0x08021f00

08009964 <_ZN5ModelC1Ev>:
#include <gui/model/Model.hpp>
#include <gui/model/ModelListener.hpp>
#include "main.h"

Model::Model() : modelListener(0)
 8009964:	b480      	push	{r7}
 8009966:	b083      	sub	sp, #12
 8009968:	af00      	add	r7, sp, #0
 800996a:	6078      	str	r0, [r7, #4]
 800996c:	687b      	ldr	r3, [r7, #4]
 800996e:	2200      	movs	r2, #0
 8009970:	601a      	str	r2, [r3, #0]
{
}
 8009972:	687b      	ldr	r3, [r7, #4]
 8009974:	4618      	mov	r0, r3
 8009976:	370c      	adds	r7, #12
 8009978:	46bd      	mov	sp, r7
 800997a:	f85d 7b04 	ldr.w	r7, [sp], #4
 800997e:	4770      	bx	lr

08009980 <_ZN5Model4tickEv>:

void Model::tick()
{
 8009980:	b580      	push	{r7, lr}
 8009982:	b084      	sub	sp, #16
 8009984:	af00      	add	r7, sp, #0
 8009986:	6078      	str	r0, [r7, #4]


	uint32_t val = value_adc;
 8009988:	4b0a      	ldr	r3, [pc, #40]	@ (80099b4 <_ZN5Model4tickEv+0x34>)
 800998a:	681b      	ldr	r3, [r3, #0]
 800998c:	60fb      	str	r3, [r7, #12]

	if (modelListener != 0) {
 800998e:	687b      	ldr	r3, [r7, #4]
 8009990:	681b      	ldr	r3, [r3, #0]
 8009992:	2b00      	cmp	r3, #0
 8009994:	d009      	beq.n	80099aa <_ZN5Model4tickEv+0x2a>
		modelListener -> notifyADCChanged(val);
 8009996:	687b      	ldr	r3, [r7, #4]
 8009998:	681a      	ldr	r2, [r3, #0]
 800999a:	687b      	ldr	r3, [r7, #4]
 800999c:	681b      	ldr	r3, [r3, #0]
 800999e:	681b      	ldr	r3, [r3, #0]
 80099a0:	3308      	adds	r3, #8
 80099a2:	681b      	ldr	r3, [r3, #0]
 80099a4:	68f9      	ldr	r1, [r7, #12]
 80099a6:	4610      	mov	r0, r2
 80099a8:	4798      	blx	r3

	}


}
 80099aa:	bf00      	nop
 80099ac:	3710      	adds	r7, #16
 80099ae:	46bd      	mov	sp, r7
 80099b0:	bd80      	pop	{r7, pc}
 80099b2:	bf00      	nop
 80099b4:	20000588 	.word	0x20000588

080099b8 <_ZN8touchgfx15TouchControllerD1Ev>:
/** Basic Touch Controller interface. */
class TouchController
{
public:
    /** Finalizes an instance of the TouchController class. */
    virtual ~TouchController()
 80099b8:	b480      	push	{r7}
 80099ba:	b083      	sub	sp, #12
 80099bc:	af00      	add	r7, sp, #0
 80099be:	6078      	str	r0, [r7, #4]
    {
 80099c0:	4a04      	ldr	r2, [pc, #16]	@ (80099d4 <_ZN8touchgfx15TouchControllerD1Ev+0x1c>)
 80099c2:	687b      	ldr	r3, [r7, #4]
 80099c4:	601a      	str	r2, [r3, #0]
    }
 80099c6:	687b      	ldr	r3, [r7, #4]
 80099c8:	4618      	mov	r0, r3
 80099ca:	370c      	adds	r7, #12
 80099cc:	46bd      	mov	sp, r7
 80099ce:	f85d 7b04 	ldr.w	r7, [sp], #4
 80099d2:	4770      	bx	lr
 80099d4:	08022e64 	.word	0x08022e64

080099d8 <_ZN8touchgfx15TouchControllerD0Ev>:
    virtual ~TouchController()
 80099d8:	b580      	push	{r7, lr}
 80099da:	b082      	sub	sp, #8
 80099dc:	af00      	add	r7, sp, #0
 80099de:	6078      	str	r0, [r7, #4]
    }
 80099e0:	6878      	ldr	r0, [r7, #4]
 80099e2:	f7ff ffe9 	bl	80099b8 <_ZN8touchgfx15TouchControllerD1Ev>
 80099e6:	2104      	movs	r1, #4
 80099e8:	6878      	ldr	r0, [r7, #4]
 80099ea:	f016 fee2 	bl	80207b2 <_ZdlPvj>
 80099ee:	687b      	ldr	r3, [r7, #4]
 80099f0:	4618      	mov	r0, r3
 80099f2:	3708      	adds	r7, #8
 80099f4:	46bd      	mov	sp, r7
 80099f6:	bd80      	pop	{r7, pc}

080099f8 <_ZN20STM32TouchController4initEv>:

#include <STM32TouchController.hpp>
#include "main.h"

void STM32TouchController::init()
{
 80099f8:	b480      	push	{r7}
 80099fa:	b083      	sub	sp, #12
 80099fc:	af00      	add	r7, sp, #0
 80099fe:	6078      	str	r0, [r7, #4]
    /**
     * Initialize touch controller and driver
     *
     */
}
 8009a00:	bf00      	nop
 8009a02:	370c      	adds	r7, #12
 8009a04:	46bd      	mov	sp, r7
 8009a06:	f85d 7b04 	ldr.w	r7, [sp], #4
 8009a0a:	4770      	bx	lr

08009a0c <_ZN20STM32TouchController11sampleTouchERlS0_>:

bool STM32TouchController::sampleTouch(int32_t& x, int32_t& y)
{
 8009a0c:	b580      	push	{r7, lr}
 8009a0e:	b084      	sub	sp, #16
 8009a10:	af00      	add	r7, sp, #0
 8009a12:	60f8      	str	r0, [r7, #12]
 8009a14:	60b9      	str	r1, [r7, #8]
 8009a16:	607a      	str	r2, [r7, #4]
     * This function is called by the TouchGFX framework.
     * By default sampleTouch is called every tick, this can be adjusted by HAL::setTouchSampleRate(int8_t);
     *
     */

	return((bool) Touch_TouchGFXSampleTouch(&x,&y));
 8009a18:	6879      	ldr	r1, [r7, #4]
 8009a1a:	68b8      	ldr	r0, [r7, #8]
 8009a1c:	f7f8 f8c4 	bl	8001ba8 <Touch_TouchGFXSampleTouch>
 8009a20:	4603      	mov	r3, r0
 8009a22:	2b00      	cmp	r3, #0
 8009a24:	bf14      	ite	ne
 8009a26:	2301      	movne	r3, #1
 8009a28:	2300      	moveq	r3, #0
 8009a2a:	b2db      	uxtb	r3, r3
}
 8009a2c:	4618      	mov	r0, r3
 8009a2e:	3710      	adds	r7, #16
 8009a30:	46bd      	mov	sp, r7
 8009a32:	bd80      	pop	{r7, pc}

08009a34 <_ZN20STM32TouchControllerD1Ev>:
 * @brief This class specializes TouchController Interface.
 *
 * @sa touchgfx::TouchController
 */

class STM32TouchController : public touchgfx::TouchController
 8009a34:	b580      	push	{r7, lr}
 8009a36:	b082      	sub	sp, #8
 8009a38:	af00      	add	r7, sp, #0
 8009a3a:	6078      	str	r0, [r7, #4]
 8009a3c:	4a05      	ldr	r2, [pc, #20]	@ (8009a54 <_ZN20STM32TouchControllerD1Ev+0x20>)
 8009a3e:	687b      	ldr	r3, [r7, #4]
 8009a40:	601a      	str	r2, [r3, #0]
 8009a42:	687b      	ldr	r3, [r7, #4]
 8009a44:	4618      	mov	r0, r3
 8009a46:	f7ff ffb7 	bl	80099b8 <_ZN8touchgfx15TouchControllerD1Ev>
 8009a4a:	687b      	ldr	r3, [r7, #4]
 8009a4c:	4618      	mov	r0, r3
 8009a4e:	3708      	adds	r7, #8
 8009a50:	46bd      	mov	sp, r7
 8009a52:	bd80      	pop	{r7, pc}
 8009a54:	08022e4c 	.word	0x08022e4c

08009a58 <_ZN20STM32TouchControllerD0Ev>:
 8009a58:	b580      	push	{r7, lr}
 8009a5a:	b082      	sub	sp, #8
 8009a5c:	af00      	add	r7, sp, #0
 8009a5e:	6078      	str	r0, [r7, #4]
 8009a60:	6878      	ldr	r0, [r7, #4]
 8009a62:	f7ff ffe7 	bl	8009a34 <_ZN20STM32TouchControllerD1Ev>
 8009a66:	2104      	movs	r1, #4
 8009a68:	6878      	ldr	r0, [r7, #4]
 8009a6a:	f016 fea2 	bl	80207b2 <_ZdlPvj>
 8009a6e:	687b      	ldr	r3, [r7, #4]
 8009a70:	4618      	mov	r0, r3
 8009a72:	3708      	adds	r7, #8
 8009a74:	46bd      	mov	sp, r7
 8009a76:	bd80      	pop	{r7, pc}

08009a78 <_ZN8touchgfx4GPIO4initEv>:

/*
 * Perform configuration of IO pins.
 */
void GPIO::init()
{
 8009a78:	b480      	push	{r7}
 8009a7a:	af00      	add	r7, sp, #0

}
 8009a7c:	bf00      	nop
 8009a7e:	46bd      	mov	sp, r7
 8009a80:	f85d 7b04 	ldr.w	r7, [sp], #4
 8009a84:	4770      	bx	lr
	...

08009a88 <_ZN8touchgfx4GPIO3setENS0_7GPIO_IDE>:

/*
 * Sets a pin high.
 */
void GPIO::set(GPIO_ID id)
{
 8009a88:	b480      	push	{r7}
 8009a8a:	b083      	sub	sp, #12
 8009a8c:	af00      	add	r7, sp, #0
 8009a8e:	4603      	mov	r3, r0
 8009a90:	71fb      	strb	r3, [r7, #7]
    switch (id)
 8009a92:	79fb      	ldrb	r3, [r7, #7]
 8009a94:	2b03      	cmp	r3, #3
 8009a96:	d80c      	bhi.n	8009ab2 <_ZN8touchgfx4GPIO3setENS0_7GPIO_IDE+0x2a>
 8009a98:	a201      	add	r2, pc, #4	@ (adr r2, 8009aa0 <_ZN8touchgfx4GPIO3setENS0_7GPIO_IDE+0x18>)
 8009a9a:	f852 f023 	ldr.w	pc, [r2, r3, lsl #2]
 8009a9e:	bf00      	nop
 8009aa0:	08009ab1 	.word	0x08009ab1
 8009aa4:	08009ab1 	.word	0x08009ab1
 8009aa8:	08009ab1 	.word	0x08009ab1
 8009aac:	08009ab1 	.word	0x08009ab1
    {
    case GPIO::VSYNC_FREQ:
#if defined(VSYNC_FREQ_GPIO_Port) && defined(VSYNC_FREQ_Pin)
        HAL_GPIO_WritePin(VSYNC_FREQ_GPIO_Port, VSYNC_FREQ_Pin, GPIO_PIN_SET);
#endif
        break;
 8009ab0:	bf00      	nop
#if defined(MCU_ACTIVE_GPIO_Port) && defined(MCU_ACTIVE_Pin)
        HAL_GPIO_WritePin(MCU_ACTIVE_GPIO_Port, MCU_ACTIVE_Pin, GPIO_PIN_SET);
#endif
        break;
    }
}
 8009ab2:	bf00      	nop
 8009ab4:	370c      	adds	r7, #12
 8009ab6:	46bd      	mov	sp, r7
 8009ab8:	f85d 7b04 	ldr.w	r7, [sp], #4
 8009abc:	4770      	bx	lr
 8009abe:	bf00      	nop

08009ac0 <_ZN8touchgfx4GPIO5clearENS0_7GPIO_IDE>:

/*
 * Sets a pin low.
 */
void GPIO::clear(GPIO_ID id)
{
 8009ac0:	b480      	push	{r7}
 8009ac2:	b083      	sub	sp, #12
 8009ac4:	af00      	add	r7, sp, #0
 8009ac6:	4603      	mov	r3, r0
 8009ac8:	71fb      	strb	r3, [r7, #7]
    switch (id)
 8009aca:	79fb      	ldrb	r3, [r7, #7]
 8009acc:	2b03      	cmp	r3, #3
 8009ace:	d80c      	bhi.n	8009aea <_ZN8touchgfx4GPIO5clearENS0_7GPIO_IDE+0x2a>
 8009ad0:	a201      	add	r2, pc, #4	@ (adr r2, 8009ad8 <_ZN8touchgfx4GPIO5clearENS0_7GPIO_IDE+0x18>)
 8009ad2:	f852 f023 	ldr.w	pc, [r2, r3, lsl #2]
 8009ad6:	bf00      	nop
 8009ad8:	08009ae9 	.word	0x08009ae9
 8009adc:	08009ae9 	.word	0x08009ae9
 8009ae0:	08009ae9 	.word	0x08009ae9
 8009ae4:	08009ae9 	.word	0x08009ae9
    {
    case GPIO::VSYNC_FREQ:
#if defined(VSYNC_FREQ_GPIO_Port) && defined(VSYNC_FREQ_Pin)
        HAL_GPIO_WritePin(VSYNC_FREQ_GPIO_Port, VSYNC_FREQ_Pin, GPIO_PIN_RESET);
#endif
        break;
 8009ae8:	bf00      	nop
#if defined(MCU_ACTIVE_GPIO_Port) && defined(MCU_ACTIVE_Pin)
        HAL_GPIO_WritePin(MCU_ACTIVE_GPIO_Port, MCU_ACTIVE_Pin, GPIO_PIN_RESET);
#endif
        break;
    }
}
 8009aea:	bf00      	nop
 8009aec:	370c      	adds	r7, #12
 8009aee:	46bd      	mov	sp, r7
 8009af0:	f85d 7b04 	ldr.w	r7, [sp], #4
 8009af4:	4770      	bx	lr
 8009af6:	bf00      	nop

08009af8 <_ZN8touchgfx4GPIO6toggleENS0_7GPIO_IDE>:

/*
 * Toggles a pin.
 */
void GPIO::toggle(GPIO_ID id)
{
 8009af8:	b480      	push	{r7}
 8009afa:	b083      	sub	sp, #12
 8009afc:	af00      	add	r7, sp, #0
 8009afe:	4603      	mov	r3, r0
 8009b00:	71fb      	strb	r3, [r7, #7]
    switch (id)
 8009b02:	79fb      	ldrb	r3, [r7, #7]
 8009b04:	2b03      	cmp	r3, #3
 8009b06:	d80c      	bhi.n	8009b22 <_ZN8touchgfx4GPIO6toggleENS0_7GPIO_IDE+0x2a>
 8009b08:	a201      	add	r2, pc, #4	@ (adr r2, 8009b10 <_ZN8touchgfx4GPIO6toggleENS0_7GPIO_IDE+0x18>)
 8009b0a:	f852 f023 	ldr.w	pc, [r2, r3, lsl #2]
 8009b0e:	bf00      	nop
 8009b10:	08009b21 	.word	0x08009b21
 8009b14:	08009b21 	.word	0x08009b21
 8009b18:	08009b21 	.word	0x08009b21
 8009b1c:	08009b21 	.word	0x08009b21
    {
    case GPIO::VSYNC_FREQ:
#if defined(VSYNC_FREQ_GPIO_Port) && defined(VSYNC_FREQ_Pin)
        HAL_GPIO_TogglePin(VSYNC_FREQ_GPIO_Port, VSYNC_FREQ_Pin);
#endif
        break;
 8009b20:	bf00      	nop
#if defined(MCU_ACTIVE_GPIO_Port) && defined(MCU_ACTIVE_Pin)
        HAL_GPIO_TogglePin(MCU_ACTIVE_GPIO_Port, MCU_ACTIVE_Pin);
#endif
        break;
    }
}
 8009b22:	bf00      	nop
 8009b24:	370c      	adds	r7, #12
 8009b26:	46bd      	mov	sp, r7
 8009b28:	f85d 7b04 	ldr.w	r7, [sp], #4
 8009b2c:	4770      	bx	lr
 8009b2e:	bf00      	nop

08009b30 <_ZN8touchgfx3HALD1Ev>:
 8009b30:	b480      	push	{r7}
 8009b32:	b083      	sub	sp, #12
 8009b34:	af00      	add	r7, sp, #0
 8009b36:	6078      	str	r0, [r7, #4]
 8009b38:	4a04      	ldr	r2, [pc, #16]	@ (8009b4c <_ZN8touchgfx3HALD1Ev+0x1c>)
 8009b3a:	687b      	ldr	r3, [r7, #4]
 8009b3c:	601a      	str	r2, [r3, #0]
 8009b3e:	687b      	ldr	r3, [r7, #4]
 8009b40:	4618      	mov	r0, r3
 8009b42:	370c      	adds	r7, #12
 8009b44:	46bd      	mov	sp, r7
 8009b46:	f85d 7b04 	ldr.w	r7, [sp], #4
 8009b4a:	4770      	bx	lr
 8009b4c:	0802329c 	.word	0x0802329c

08009b50 <_ZN8touchgfx3HALD0Ev>:
 8009b50:	b580      	push	{r7, lr}
 8009b52:	b082      	sub	sp, #8
 8009b54:	af00      	add	r7, sp, #0
 8009b56:	6078      	str	r0, [r7, #4]
 8009b58:	6878      	ldr	r0, [r7, #4]
 8009b5a:	f7ff ffe9 	bl	8009b30 <_ZN8touchgfx3HALD1Ev>
 8009b5e:	217c      	movs	r1, #124	@ 0x7c
 8009b60:	6878      	ldr	r0, [r7, #4]
 8009b62:	f016 fe26 	bl	80207b2 <_ZdlPvj>
 8009b66:	687b      	ldr	r3, [r7, #4]
 8009b68:	4618      	mov	r0, r3
 8009b6a:	3708      	adds	r7, #8
 8009b6c:	46bd      	mov	sp, r7
 8009b6e:	bd80      	pop	{r7, pc}

08009b70 <_ZN8touchgfx3HAL21setDisplayOrientationENS_18DisplayOrientationE>:
 8009b70:	b480      	push	{r7}
 8009b72:	b083      	sub	sp, #12
 8009b74:	af00      	add	r7, sp, #0
 8009b76:	6078      	str	r0, [r7, #4]
 8009b78:	460b      	mov	r3, r1
 8009b7a:	70fb      	strb	r3, [r7, #3]
 8009b7c:	687b      	ldr	r3, [r7, #4]
 8009b7e:	78fa      	ldrb	r2, [r7, #3]
 8009b80:	f883 2078 	strb.w	r2, [r3, #120]	@ 0x78
 8009b84:	687b      	ldr	r3, [r7, #4]
 8009b86:	2201      	movs	r2, #1
 8009b88:	f883 2079 	strb.w	r2, [r3, #121]	@ 0x79
 8009b8c:	bf00      	nop
 8009b8e:	370c      	adds	r7, #12
 8009b90:	46bd      	mov	sp, r7
 8009b92:	f85d 7b04 	ldr.w	r7, [sp], #4
 8009b96:	4770      	bx	lr

08009b98 <_ZN8touchgfx3HAL18setFrameBufferSizeEtt>:
 8009b98:	b580      	push	{r7, lr}
 8009b9a:	b082      	sub	sp, #8
 8009b9c:	af00      	add	r7, sp, #0
 8009b9e:	6078      	str	r0, [r7, #4]
 8009ba0:	460b      	mov	r3, r1
 8009ba2:	807b      	strh	r3, [r7, #2]
 8009ba4:	4613      	mov	r3, r2
 8009ba6:	803b      	strh	r3, [r7, #0]
 8009ba8:	4b0c      	ldr	r3, [pc, #48]	@ (8009bdc <_ZN8touchgfx3HAL18setFrameBufferSizeEtt+0x44>)
 8009baa:	881b      	ldrh	r3, [r3, #0]
 8009bac:	887a      	ldrh	r2, [r7, #2]
 8009bae:	429a      	cmp	r2, r3
 8009bb0:	d304      	bcc.n	8009bbc <_ZN8touchgfx3HAL18setFrameBufferSizeEtt+0x24>
 8009bb2:	4b0b      	ldr	r3, [pc, #44]	@ (8009be0 <_ZN8touchgfx3HAL18setFrameBufferSizeEtt+0x48>)
 8009bb4:	881b      	ldrh	r3, [r3, #0]
 8009bb6:	883a      	ldrh	r2, [r7, #0]
 8009bb8:	429a      	cmp	r2, r3
 8009bba:	d205      	bcs.n	8009bc8 <_ZN8touchgfx3HAL18setFrameBufferSizeEtt+0x30>
 8009bbc:	4b09      	ldr	r3, [pc, #36]	@ (8009be4 <_ZN8touchgfx3HAL18setFrameBufferSizeEtt+0x4c>)
 8009bbe:	4a0a      	ldr	r2, [pc, #40]	@ (8009be8 <_ZN8touchgfx3HAL18setFrameBufferSizeEtt+0x50>)
 8009bc0:	219e      	movs	r1, #158	@ 0x9e
 8009bc2:	480a      	ldr	r0, [pc, #40]	@ (8009bec <_ZN8touchgfx3HAL18setFrameBufferSizeEtt+0x54>)
 8009bc4:	f016 fe24 	bl	8020810 <__assert_func>
 8009bc8:	4a09      	ldr	r2, [pc, #36]	@ (8009bf0 <_ZN8touchgfx3HAL18setFrameBufferSizeEtt+0x58>)
 8009bca:	887b      	ldrh	r3, [r7, #2]
 8009bcc:	8013      	strh	r3, [r2, #0]
 8009bce:	4a09      	ldr	r2, [pc, #36]	@ (8009bf4 <_ZN8touchgfx3HAL18setFrameBufferSizeEtt+0x5c>)
 8009bd0:	883b      	ldrh	r3, [r7, #0]
 8009bd2:	8013      	strh	r3, [r2, #0]
 8009bd4:	bf00      	nop
 8009bd6:	3708      	adds	r7, #8
 8009bd8:	46bd      	mov	sp, r7
 8009bda:	bd80      	pop	{r7, pc}
 8009bdc:	20002c50 	.word	0x20002c50
 8009be0:	20002c52 	.word	0x20002c52
 8009be4:	08021f04 	.word	0x08021f04
 8009be8:	08021f68 	.word	0x08021f68
 8009bec:	08021fac 	.word	0x08021fac
 8009bf0:	20002c56 	.word	0x20002c56
 8009bf4:	20002c58 	.word	0x20002c58

08009bf8 <_ZN8touchgfx3HAL11getBlitCapsEv>:
 8009bf8:	b580      	push	{r7, lr}
 8009bfa:	b082      	sub	sp, #8
 8009bfc:	af00      	add	r7, sp, #0
 8009bfe:	6078      	str	r0, [r7, #4]
 8009c00:	687b      	ldr	r3, [r7, #4]
 8009c02:	f893 307a 	ldrb.w	r3, [r3, #122]	@ 0x7a
 8009c06:	2b00      	cmp	r3, #0
 8009c08:	d009      	beq.n	8009c1e <_ZN8touchgfx3HAL11getBlitCapsEv+0x26>
 8009c0a:	687b      	ldr	r3, [r7, #4]
 8009c0c:	685a      	ldr	r2, [r3, #4]
 8009c0e:	687b      	ldr	r3, [r7, #4]
 8009c10:	685b      	ldr	r3, [r3, #4]
 8009c12:	681b      	ldr	r3, [r3, #0]
 8009c14:	681b      	ldr	r3, [r3, #0]
 8009c16:	4610      	mov	r0, r2
 8009c18:	4798      	blx	r3
 8009c1a:	4603      	mov	r3, r0
 8009c1c:	e000      	b.n	8009c20 <_ZN8touchgfx3HAL11getBlitCapsEv+0x28>
 8009c1e:	2300      	movs	r3, #0
 8009c20:	4618      	mov	r0, r3
 8009c22:	3708      	adds	r7, #8
 8009c24:	46bd      	mov	sp, r7
 8009c26:	bd80      	pop	{r7, pc}

08009c28 <_ZN8touchgfx3HAL15backPorchExitedEv>:
 8009c28:	b580      	push	{r7, lr}
 8009c2a:	b082      	sub	sp, #8
 8009c2c:	af00      	add	r7, sp, #0
 8009c2e:	6078      	str	r0, [r7, #4]
 8009c30:	6878      	ldr	r0, [r7, #4]
 8009c32:	f002 ff17 	bl	800ca64 <_ZN8touchgfx3HAL16swapFrameBuffersEv>
 8009c36:	687b      	ldr	r3, [r7, #4]
 8009c38:	681b      	ldr	r3, [r3, #0]
 8009c3a:	33ac      	adds	r3, #172	@ 0xac
 8009c3c:	681b      	ldr	r3, [r3, #0]
 8009c3e:	6878      	ldr	r0, [r7, #4]
 8009c40:	4798      	blx	r3
 8009c42:	bf00      	nop
 8009c44:	3708      	adds	r7, #8
 8009c46:	46bd      	mov	sp, r7
 8009c48:	bd80      	pop	{r7, pc}

08009c4a <_ZN8touchgfx3HAL9sampleKeyERh>:
 8009c4a:	b480      	push	{r7}
 8009c4c:	b083      	sub	sp, #12
 8009c4e:	af00      	add	r7, sp, #0
 8009c50:	6078      	str	r0, [r7, #4]
 8009c52:	6039      	str	r1, [r7, #0]
 8009c54:	2300      	movs	r3, #0
 8009c56:	4618      	mov	r0, r3
 8009c58:	370c      	adds	r7, #12
 8009c5a:	46bd      	mov	sp, r7
 8009c5c:	f85d 7b04 	ldr.w	r7, [sp], #4
 8009c60:	4770      	bx	lr
	...

08009c64 <_ZN8touchgfx3HAL28setFrameBufferStartAddressesEPvS1_S1_>:
 8009c64:	b580      	push	{r7, lr}
 8009c66:	b084      	sub	sp, #16
 8009c68:	af00      	add	r7, sp, #0
 8009c6a:	60f8      	str	r0, [r7, #12]
 8009c6c:	60b9      	str	r1, [r7, #8]
 8009c6e:	607a      	str	r2, [r7, #4]
 8009c70:	603b      	str	r3, [r7, #0]
 8009c72:	68bb      	ldr	r3, [r7, #8]
 8009c74:	2b00      	cmp	r3, #0
 8009c76:	d106      	bne.n	8009c86 <_ZN8touchgfx3HAL28setFrameBufferStartAddressesEPvS1_S1_+0x22>
 8009c78:	4b0f      	ldr	r3, [pc, #60]	@ (8009cb8 <_ZN8touchgfx3HAL28setFrameBufferStartAddressesEPvS1_S1_+0x54>)
 8009c7a:	4a10      	ldr	r2, [pc, #64]	@ (8009cbc <_ZN8touchgfx3HAL28setFrameBufferStartAddressesEPvS1_S1_+0x58>)
 8009c7c:	f240 21d2 	movw	r1, #722	@ 0x2d2
 8009c80:	480f      	ldr	r0, [pc, #60]	@ (8009cc0 <_ZN8touchgfx3HAL28setFrameBufferStartAddressesEPvS1_S1_+0x5c>)
 8009c82:	f016 fdc5 	bl	8020810 <__assert_func>
 8009c86:	68fb      	ldr	r3, [r7, #12]
 8009c88:	68ba      	ldr	r2, [r7, #8]
 8009c8a:	63da      	str	r2, [r3, #60]	@ 0x3c
 8009c8c:	68fb      	ldr	r3, [r7, #12]
 8009c8e:	687a      	ldr	r2, [r7, #4]
 8009c90:	641a      	str	r2, [r3, #64]	@ 0x40
 8009c92:	687b      	ldr	r3, [r7, #4]
 8009c94:	2b00      	cmp	r3, #0
 8009c96:	bf14      	ite	ne
 8009c98:	2301      	movne	r3, #1
 8009c9a:	2300      	moveq	r3, #0
 8009c9c:	b2da      	uxtb	r2, r3
 8009c9e:	4b09      	ldr	r3, [pc, #36]	@ (8009cc4 <_ZN8touchgfx3HAL28setFrameBufferStartAddressesEPvS1_S1_+0x60>)
 8009ca0:	701a      	strb	r2, [r3, #0]
 8009ca2:	68fb      	ldr	r3, [r7, #12]
 8009ca4:	681b      	ldr	r3, [r3, #0]
 8009ca6:	338c      	adds	r3, #140	@ 0x8c
 8009ca8:	681b      	ldr	r3, [r3, #0]
 8009caa:	6839      	ldr	r1, [r7, #0]
 8009cac:	68f8      	ldr	r0, [r7, #12]
 8009cae:	4798      	blx	r3
 8009cb0:	bf00      	nop
 8009cb2:	3710      	adds	r7, #16
 8009cb4:	46bd      	mov	sp, r7
 8009cb6:	bd80      	pop	{r7, pc}
 8009cb8:	08021ff0 	.word	0x08021ff0
 8009cbc:	08022028 	.word	0x08022028
 8009cc0:	08021fac 	.word	0x08021fac
 8009cc4:	20002c5a 	.word	0x20002c5a

08009cc8 <_ZN8touchgfx3HAL19setAnimationStorageEPv>:
 8009cc8:	b480      	push	{r7}
 8009cca:	b083      	sub	sp, #12
 8009ccc:	af00      	add	r7, sp, #0
 8009cce:	6078      	str	r0, [r7, #4]
 8009cd0:	6039      	str	r1, [r7, #0]
 8009cd2:	687b      	ldr	r3, [r7, #4]
 8009cd4:	683a      	ldr	r2, [r7, #0]
 8009cd6:	645a      	str	r2, [r3, #68]	@ 0x44
 8009cd8:	683b      	ldr	r3, [r7, #0]
 8009cda:	2b00      	cmp	r3, #0
 8009cdc:	bf14      	ite	ne
 8009cde:	2301      	movne	r3, #1
 8009ce0:	2300      	moveq	r3, #0
 8009ce2:	b2da      	uxtb	r2, r3
 8009ce4:	4b03      	ldr	r3, [pc, #12]	@ (8009cf4 <_ZN8touchgfx3HAL19setAnimationStorageEPv+0x2c>)
 8009ce6:	701a      	strb	r2, [r3, #0]
 8009ce8:	bf00      	nop
 8009cea:	370c      	adds	r7, #12
 8009cec:	46bd      	mov	sp, r7
 8009cee:	f85d 7b04 	ldr.w	r7, [sp], #4
 8009cf2:	4770      	bx	lr
 8009cf4:	20002c5b 	.word	0x20002c5b

08009cf8 <_ZNK8touchgfx3HAL18getFlashDataReaderEv>:
 8009cf8:	b480      	push	{r7}
 8009cfa:	b083      	sub	sp, #12
 8009cfc:	af00      	add	r7, sp, #0
 8009cfe:	6078      	str	r0, [r7, #4]
 8009d00:	2300      	movs	r3, #0
 8009d02:	4618      	mov	r0, r3
 8009d04:	370c      	adds	r7, #12
 8009d06:	46bd      	mov	sp, r7
 8009d08:	f85d 7b04 	ldr.w	r7, [sp], #4
 8009d0c:	4770      	bx	lr

08009d0e <_ZN8touchgfx3HAL9taskDelayEt>:
 8009d0e:	b580      	push	{r7, lr}
 8009d10:	b082      	sub	sp, #8
 8009d12:	af00      	add	r7, sp, #0
 8009d14:	6078      	str	r0, [r7, #4]
 8009d16:	460b      	mov	r3, r1
 8009d18:	807b      	strh	r3, [r7, #2]
 8009d1a:	687b      	ldr	r3, [r7, #4]
 8009d1c:	6b9b      	ldr	r3, [r3, #56]	@ 0x38
 8009d1e:	2b00      	cmp	r3, #0
 8009d20:	d004      	beq.n	8009d2c <_ZN8touchgfx3HAL9taskDelayEt+0x1e>
 8009d22:	687b      	ldr	r3, [r7, #4]
 8009d24:	6b9b      	ldr	r3, [r3, #56]	@ 0x38
 8009d26:	887a      	ldrh	r2, [r7, #2]
 8009d28:	4610      	mov	r0, r2
 8009d2a:	4798      	blx	r3
 8009d2c:	bf00      	nop
 8009d2e:	3708      	adds	r7, #8
 8009d30:	46bd      	mov	sp, r7
 8009d32:	bd80      	pop	{r7, pc}

08009d34 <_ZN8touchgfx3HAL17getTFTCurrentLineEv>:
 8009d34:	b480      	push	{r7}
 8009d36:	b083      	sub	sp, #12
 8009d38:	af00      	add	r7, sp, #0
 8009d3a:	6078      	str	r0, [r7, #4]
 8009d3c:	f64f 73ff 	movw	r3, #65535	@ 0xffff
 8009d40:	4618      	mov	r0, r3
 8009d42:	370c      	adds	r7, #12
 8009d44:	46bd      	mov	sp, r7
 8009d46:	f85d 7b04 	ldr.w	r7, [sp], #4
 8009d4a:	4770      	bx	lr

08009d4c <_ZN8touchgfx3HAL10getDMATypeEv>:
 8009d4c:	b580      	push	{r7, lr}
 8009d4e:	b082      	sub	sp, #8
 8009d50:	af00      	add	r7, sp, #0
 8009d52:	6078      	str	r0, [r7, #4]
 8009d54:	687b      	ldr	r3, [r7, #4]
 8009d56:	685a      	ldr	r2, [r3, #4]
 8009d58:	687b      	ldr	r3, [r7, #4]
 8009d5a:	685b      	ldr	r3, [r3, #4]
 8009d5c:	681b      	ldr	r3, [r3, #0]
 8009d5e:	3318      	adds	r3, #24
 8009d60:	681b      	ldr	r3, [r3, #0]
 8009d62:	4610      	mov	r0, r2
 8009d64:	4798      	blx	r3
 8009d66:	4603      	mov	r3, r0
 8009d68:	4618      	mov	r0, r3
 8009d6a:	3708      	adds	r7, #8
 8009d6c:	46bd      	mov	sp, r7
 8009d6e:	bd80      	pop	{r7, pc}

08009d70 <_ZN8touchgfx3HAL31performDisplayOrientationChangeEv>:
 8009d70:	b480      	push	{r7}
 8009d72:	b085      	sub	sp, #20
 8009d74:	af00      	add	r7, sp, #0
 8009d76:	6078      	str	r0, [r7, #4]
 8009d78:	687b      	ldr	r3, [r7, #4]
 8009d7a:	f893 2078 	ldrb.w	r2, [r3, #120]	@ 0x78
 8009d7e:	687b      	ldr	r3, [r7, #4]
 8009d80:	f893 3034 	ldrb.w	r3, [r3, #52]	@ 0x34
 8009d84:	429a      	cmp	r2, r3
 8009d86:	d011      	beq.n	8009dac <_ZN8touchgfx3HAL31performDisplayOrientationChangeEv+0x3c>
 8009d88:	4b14      	ldr	r3, [pc, #80]	@ (8009ddc <_ZN8touchgfx3HAL31performDisplayOrientationChangeEv+0x6c>)
 8009d8a:	781b      	ldrb	r3, [r3, #0]
 8009d8c:	2b00      	cmp	r3, #0
 8009d8e:	d11e      	bne.n	8009dce <_ZN8touchgfx3HAL31performDisplayOrientationChangeEv+0x5e>
 8009d90:	4b13      	ldr	r3, [pc, #76]	@ (8009de0 <_ZN8touchgfx3HAL31performDisplayOrientationChangeEv+0x70>)
 8009d92:	881b      	ldrh	r3, [r3, #0]
 8009d94:	81bb      	strh	r3, [r7, #12]
 8009d96:	4b13      	ldr	r3, [pc, #76]	@ (8009de4 <_ZN8touchgfx3HAL31performDisplayOrientationChangeEv+0x74>)
 8009d98:	881a      	ldrh	r2, [r3, #0]
 8009d9a:	4b11      	ldr	r3, [pc, #68]	@ (8009de0 <_ZN8touchgfx3HAL31performDisplayOrientationChangeEv+0x70>)
 8009d9c:	801a      	strh	r2, [r3, #0]
 8009d9e:	4a11      	ldr	r2, [pc, #68]	@ (8009de4 <_ZN8touchgfx3HAL31performDisplayOrientationChangeEv+0x74>)
 8009da0:	89bb      	ldrh	r3, [r7, #12]
 8009da2:	8013      	strh	r3, [r2, #0]
 8009da4:	4b0d      	ldr	r3, [pc, #52]	@ (8009ddc <_ZN8touchgfx3HAL31performDisplayOrientationChangeEv+0x6c>)
 8009da6:	2201      	movs	r2, #1
 8009da8:	701a      	strb	r2, [r3, #0]
 8009daa:	e010      	b.n	8009dce <_ZN8touchgfx3HAL31performDisplayOrientationChangeEv+0x5e>
 8009dac:	4b0b      	ldr	r3, [pc, #44]	@ (8009ddc <_ZN8touchgfx3HAL31performDisplayOrientationChangeEv+0x6c>)
 8009dae:	781b      	ldrb	r3, [r3, #0]
 8009db0:	2b00      	cmp	r3, #0
 8009db2:	d00c      	beq.n	8009dce <_ZN8touchgfx3HAL31performDisplayOrientationChangeEv+0x5e>
 8009db4:	4b0a      	ldr	r3, [pc, #40]	@ (8009de0 <_ZN8touchgfx3HAL31performDisplayOrientationChangeEv+0x70>)
 8009db6:	881b      	ldrh	r3, [r3, #0]
 8009db8:	81fb      	strh	r3, [r7, #14]
 8009dba:	4b0a      	ldr	r3, [pc, #40]	@ (8009de4 <_ZN8touchgfx3HAL31performDisplayOrientationChangeEv+0x74>)
 8009dbc:	881a      	ldrh	r2, [r3, #0]
 8009dbe:	4b08      	ldr	r3, [pc, #32]	@ (8009de0 <_ZN8touchgfx3HAL31performDisplayOrientationChangeEv+0x70>)
 8009dc0:	801a      	strh	r2, [r3, #0]
 8009dc2:	4a08      	ldr	r2, [pc, #32]	@ (8009de4 <_ZN8touchgfx3HAL31performDisplayOrientationChangeEv+0x74>)
 8009dc4:	89fb      	ldrh	r3, [r7, #14]
 8009dc6:	8013      	strh	r3, [r2, #0]
 8009dc8:	4b04      	ldr	r3, [pc, #16]	@ (8009ddc <_ZN8touchgfx3HAL31performDisplayOrientationChangeEv+0x6c>)
 8009dca:	2200      	movs	r2, #0
 8009dcc:	701a      	strb	r2, [r3, #0]
 8009dce:	bf00      	nop
 8009dd0:	3714      	adds	r7, #20
 8009dd2:	46bd      	mov	sp, r7
 8009dd4:	f85d 7b04 	ldr.w	r7, [sp], #4
 8009dd8:	4770      	bx	lr
 8009dda:	bf00      	nop
 8009ddc:	20002c54 	.word	0x20002c54
 8009de0:	20002c52 	.word	0x20002c52
 8009de4:	20002c50 	.word	0x20002c50

08009de8 <_ZN8touchgfx3HAL15InvalidateCacheEv>:
 8009de8:	b480      	push	{r7}
 8009dea:	b083      	sub	sp, #12
 8009dec:	af00      	add	r7, sp, #0
 8009dee:	6078      	str	r0, [r7, #4]
 8009df0:	bf00      	nop
 8009df2:	370c      	adds	r7, #12
 8009df4:	46bd      	mov	sp, r7
 8009df6:	f85d 7b04 	ldr.w	r7, [sp], #4
 8009dfa:	4770      	bx	lr

08009dfc <_ZN8touchgfx3HAL10FlushCacheEv>:
 8009dfc:	b480      	push	{r7}
 8009dfe:	b083      	sub	sp, #12
 8009e00:	af00      	add	r7, sp, #0
 8009e02:	6078      	str	r0, [r7, #4]
 8009e04:	bf00      	nop
 8009e06:	370c      	adds	r7, #12
 8009e08:	46bd      	mov	sp, r7
 8009e0a:	f85d 7b04 	ldr.w	r7, [sp], #4
 8009e0e:	4770      	bx	lr

08009e10 <_ZN20TouchGFXGeneratedHAL16flushFrameBufferEv>:
 8009e10:	b580      	push	{r7, lr}
 8009e12:	b082      	sub	sp, #8
 8009e14:	af00      	add	r7, sp, #0
 8009e16:	6078      	str	r0, [r7, #4]
 8009e18:	687b      	ldr	r3, [r7, #4]
 8009e1a:	4618      	mov	r0, r3
 8009e1c:	f002 f880 	bl	800bf20 <_ZN8touchgfx3HAL16flushFrameBufferEv>
 8009e20:	bf00      	nop
 8009e22:	3708      	adds	r7, #8
 8009e24:	46bd      	mov	sp, r7
 8009e26:	bd80      	pop	{r7, pc}

08009e28 <_ZN20TouchGFXGeneratedHALD1Ev>:
 8009e28:	b580      	push	{r7, lr}
 8009e2a:	b082      	sub	sp, #8
 8009e2c:	af00      	add	r7, sp, #0
 8009e2e:	6078      	str	r0, [r7, #4]
 8009e30:	4a05      	ldr	r2, [pc, #20]	@ (8009e48 <_ZN20TouchGFXGeneratedHALD1Ev+0x20>)
 8009e32:	687b      	ldr	r3, [r7, #4]
 8009e34:	601a      	str	r2, [r3, #0]
 8009e36:	687b      	ldr	r3, [r7, #4]
 8009e38:	4618      	mov	r0, r3
 8009e3a:	f7ff fe79 	bl	8009b30 <_ZN8touchgfx3HALD1Ev>
 8009e3e:	687b      	ldr	r3, [r7, #4]
 8009e40:	4618      	mov	r0, r3
 8009e42:	3708      	adds	r7, #8
 8009e44:	46bd      	mov	sp, r7
 8009e46:	bd80      	pop	{r7, pc}
 8009e48:	080230c8 	.word	0x080230c8

08009e4c <_ZN20TouchGFXGeneratedHALD0Ev>:
 8009e4c:	b580      	push	{r7, lr}
 8009e4e:	b082      	sub	sp, #8
 8009e50:	af00      	add	r7, sp, #0
 8009e52:	6078      	str	r0, [r7, #4]
 8009e54:	6878      	ldr	r0, [r7, #4]
 8009e56:	f7ff ffe7 	bl	8009e28 <_ZN20TouchGFXGeneratedHALD1Ev>
 8009e5a:	217c      	movs	r1, #124	@ 0x7c
 8009e5c:	6878      	ldr	r0, [r7, #4]
 8009e5e:	f016 fca8 	bl	80207b2 <_ZdlPvj>
 8009e62:	687b      	ldr	r3, [r7, #4]
 8009e64:	4618      	mov	r0, r3
 8009e66:	3708      	adds	r7, #8
 8009e68:	46bd      	mov	sp, r7
 8009e6a:	bd80      	pop	{r7, pc}

08009e6c <_ZN11TouchGFXHAL16flushFrameBufferEv>:
 8009e6c:	b580      	push	{r7, lr}
 8009e6e:	b082      	sub	sp, #8
 8009e70:	af00      	add	r7, sp, #0
 8009e72:	6078      	str	r0, [r7, #4]
 8009e74:	687b      	ldr	r3, [r7, #4]
 8009e76:	4618      	mov	r0, r3
 8009e78:	f7ff ffca 	bl	8009e10 <_ZN20TouchGFXGeneratedHAL16flushFrameBufferEv>
 8009e7c:	bf00      	nop
 8009e7e:	3708      	adds	r7, #8
 8009e80:	46bd      	mov	sp, r7
 8009e82:	bd80      	pop	{r7, pc}

08009e84 <_ZN11TouchGFXHAL10initializeEv>:
 8009e84:	b580      	push	{r7, lr}
 8009e86:	b082      	sub	sp, #8
 8009e88:	af00      	add	r7, sp, #0
 8009e8a:	6078      	str	r0, [r7, #4]
 8009e8c:	687b      	ldr	r3, [r7, #4]
 8009e8e:	4618      	mov	r0, r3
 8009e90:	f001 f9b8 	bl	800b204 <_ZN20TouchGFXGeneratedHAL10initializeEv>
 8009e94:	bf00      	nop
 8009e96:	3708      	adds	r7, #8
 8009e98:	46bd      	mov	sp, r7
 8009e9a:	bd80      	pop	{r7, pc}

08009e9c <_ZNK11TouchGFXHAL17getTFTFrameBufferEv>:
 8009e9c:	b580      	push	{r7, lr}
 8009e9e:	b082      	sub	sp, #8
 8009ea0:	af00      	add	r7, sp, #0
 8009ea2:	6078      	str	r0, [r7, #4]
 8009ea4:	687b      	ldr	r3, [r7, #4]
 8009ea6:	4618      	mov	r0, r3
 8009ea8:	f001 fa2a 	bl	800b300 <_ZNK20TouchGFXGeneratedHAL17getTFTFrameBufferEv>
 8009eac:	4603      	mov	r3, r0
 8009eae:	4618      	mov	r0, r3
 8009eb0:	3708      	adds	r7, #8
 8009eb2:	46bd      	mov	sp, r7
 8009eb4:	bd80      	pop	{r7, pc}

08009eb6 <_ZN11TouchGFXHAL17setTFTFrameBufferEPt>:
 8009eb6:	b580      	push	{r7, lr}
 8009eb8:	b082      	sub	sp, #8
 8009eba:	af00      	add	r7, sp, #0
 8009ebc:	6078      	str	r0, [r7, #4]
 8009ebe:	6039      	str	r1, [r7, #0]
 8009ec0:	687b      	ldr	r3, [r7, #4]
 8009ec2:	6839      	ldr	r1, [r7, #0]
 8009ec4:	4618      	mov	r0, r3
 8009ec6:	f001 fa26 	bl	800b316 <_ZN20TouchGFXGeneratedHAL17setTFTFrameBufferEPt>
 8009eca:	bf00      	nop
 8009ecc:	3708      	adds	r7, #8
 8009ece:	46bd      	mov	sp, r7
 8009ed0:	bd80      	pop	{r7, pc}

08009ed2 <_ZN11TouchGFXHAL16flushFrameBufferERKN8touchgfx4RectE>:
 8009ed2:	b580      	push	{r7, lr}
 8009ed4:	b082      	sub	sp, #8
 8009ed6:	af00      	add	r7, sp, #0
 8009ed8:	6078      	str	r0, [r7, #4]
 8009eda:	6039      	str	r1, [r7, #0]
 8009edc:	687b      	ldr	r3, [r7, #4]
 8009ede:	6839      	ldr	r1, [r7, #0]
 8009ee0:	4618      	mov	r0, r3
 8009ee2:	f001 fa23 	bl	800b32c <_ZN20TouchGFXGeneratedHAL16flushFrameBufferERKN8touchgfx4RectE>
 8009ee6:	bf00      	nop
 8009ee8:	3708      	adds	r7, #8
 8009eea:	46bd      	mov	sp, r7
 8009eec:	bd80      	pop	{r7, pc}

08009eee <_ZN11TouchGFXHAL9blockCopyEPvPKvm>:
 8009eee:	b580      	push	{r7, lr}
 8009ef0:	b084      	sub	sp, #16
 8009ef2:	af00      	add	r7, sp, #0
 8009ef4:	60f8      	str	r0, [r7, #12]
 8009ef6:	60b9      	str	r1, [r7, #8]
 8009ef8:	607a      	str	r2, [r7, #4]
 8009efa:	603b      	str	r3, [r7, #0]
 8009efc:	68f8      	ldr	r0, [r7, #12]
 8009efe:	683b      	ldr	r3, [r7, #0]
 8009f00:	687a      	ldr	r2, [r7, #4]
 8009f02:	68b9      	ldr	r1, [r7, #8]
 8009f04:	f001 fa55 	bl	800b3b2 <_ZN20TouchGFXGeneratedHAL9blockCopyEPvPKvm>
 8009f08:	4603      	mov	r3, r0
 8009f0a:	4618      	mov	r0, r3
 8009f0c:	3710      	adds	r7, #16
 8009f0e:	46bd      	mov	sp, r7
 8009f10:	bd80      	pop	{r7, pc}

08009f12 <_ZN11TouchGFXHAL19configureInterruptsEv>:
 8009f12:	b580      	push	{r7, lr}
 8009f14:	b082      	sub	sp, #8
 8009f16:	af00      	add	r7, sp, #0
 8009f18:	6078      	str	r0, [r7, #4]
 8009f1a:	687b      	ldr	r3, [r7, #4]
 8009f1c:	4618      	mov	r0, r3
 8009f1e:	f001 f9a1 	bl	800b264 <_ZN20TouchGFXGeneratedHAL19configureInterruptsEv>
 8009f22:	bf00      	nop
 8009f24:	3708      	adds	r7, #8
 8009f26:	46bd      	mov	sp, r7
 8009f28:	bd80      	pop	{r7, pc}

08009f2a <_ZN11TouchGFXHAL16enableInterruptsEv>:
 8009f2a:	b580      	push	{r7, lr}
 8009f2c:	b082      	sub	sp, #8
 8009f2e:	af00      	add	r7, sp, #0
 8009f30:	6078      	str	r0, [r7, #4]
 8009f32:	687b      	ldr	r3, [r7, #4]
 8009f34:	4618      	mov	r0, r3
 8009f36:	f001 f99f 	bl	800b278 <_ZN20TouchGFXGeneratedHAL16enableInterruptsEv>
 8009f3a:	bf00      	nop
 8009f3c:	3708      	adds	r7, #8
 8009f3e:	46bd      	mov	sp, r7
 8009f40:	bd80      	pop	{r7, pc}

08009f42 <_ZN11TouchGFXHAL17disableInterruptsEv>:
 8009f42:	b580      	push	{r7, lr}
 8009f44:	b082      	sub	sp, #8
 8009f46:	af00      	add	r7, sp, #0
 8009f48:	6078      	str	r0, [r7, #4]
 8009f4a:	687b      	ldr	r3, [r7, #4]
 8009f4c:	4618      	mov	r0, r3
 8009f4e:	f001 f99d 	bl	800b28c <_ZN20TouchGFXGeneratedHAL17disableInterruptsEv>
 8009f52:	bf00      	nop
 8009f54:	3708      	adds	r7, #8
 8009f56:	46bd      	mov	sp, r7
 8009f58:	bd80      	pop	{r7, pc}

08009f5a <_ZN11TouchGFXHAL28enableLCDControllerInterruptEv>:
 8009f5a:	b580      	push	{r7, lr}
 8009f5c:	b082      	sub	sp, #8
 8009f5e:	af00      	add	r7, sp, #0
 8009f60:	6078      	str	r0, [r7, #4]
 8009f62:	687b      	ldr	r3, [r7, #4]
 8009f64:	4618      	mov	r0, r3
 8009f66:	f001 f99b 	bl	800b2a0 <_ZN20TouchGFXGeneratedHAL28enableLCDControllerInterruptEv>
 8009f6a:	bf00      	nop
 8009f6c:	3708      	adds	r7, #8
 8009f6e:	46bd      	mov	sp, r7
 8009f70:	bd80      	pop	{r7, pc}

08009f72 <_ZN11TouchGFXHAL10beginFrameEv>:
 8009f72:	b580      	push	{r7, lr}
 8009f74:	b082      	sub	sp, #8
 8009f76:	af00      	add	r7, sp, #0
 8009f78:	6078      	str	r0, [r7, #4]
 8009f7a:	687b      	ldr	r3, [r7, #4]
 8009f7c:	4618      	mov	r0, r3
 8009f7e:	f001 f999 	bl	800b2b4 <_ZN20TouchGFXGeneratedHAL10beginFrameEv>
 8009f82:	4603      	mov	r3, r0
 8009f84:	4618      	mov	r0, r3
 8009f86:	3708      	adds	r7, #8
 8009f88:	46bd      	mov	sp, r7
 8009f8a:	bd80      	pop	{r7, pc}

08009f8c <_ZN11TouchGFXHAL8endFrameEv>:
 8009f8c:	b580      	push	{r7, lr}
 8009f8e:	b082      	sub	sp, #8
 8009f90:	af00      	add	r7, sp, #0
 8009f92:	6078      	str	r0, [r7, #4]
 8009f94:	687b      	ldr	r3, [r7, #4]
 8009f96:	4618      	mov	r0, r3
 8009f98:	f001 f999 	bl	800b2ce <_ZN20TouchGFXGeneratedHAL8endFrameEv>
 8009f9c:	bf00      	nop
 8009f9e:	3708      	adds	r7, #8
 8009fa0:	46bd      	mov	sp, r7
 8009fa2:	bd80      	pop	{r7, pc}

08009fa4 <_ZN11TouchGFXHALD1Ev>:
 8009fa4:	b580      	push	{r7, lr}
 8009fa6:	b082      	sub	sp, #8
 8009fa8:	af00      	add	r7, sp, #0
 8009faa:	6078      	str	r0, [r7, #4]
 8009fac:	4a05      	ldr	r2, [pc, #20]	@ (8009fc4 <_ZN11TouchGFXHALD1Ev+0x20>)
 8009fae:	687b      	ldr	r3, [r7, #4]
 8009fb0:	601a      	str	r2, [r3, #0]
 8009fb2:	687b      	ldr	r3, [r7, #4]
 8009fb4:	4618      	mov	r0, r3
 8009fb6:	f7ff ff37 	bl	8009e28 <_ZN20TouchGFXGeneratedHALD1Ev>
 8009fba:	687b      	ldr	r3, [r7, #4]
 8009fbc:	4618      	mov	r0, r3
 8009fbe:	3708      	adds	r7, #8
 8009fc0:	46bd      	mov	sp, r7
 8009fc2:	bd80      	pop	{r7, pc}
 8009fc4:	08022e7c 	.word	0x08022e7c

08009fc8 <_ZN11TouchGFXHALD0Ev>:
 8009fc8:	b580      	push	{r7, lr}
 8009fca:	b082      	sub	sp, #8
 8009fcc:	af00      	add	r7, sp, #0
 8009fce:	6078      	str	r0, [r7, #4]
 8009fd0:	6878      	ldr	r0, [r7, #4]
 8009fd2:	f7ff ffe7 	bl	8009fa4 <_ZN11TouchGFXHALD1Ev>
 8009fd6:	217c      	movs	r1, #124	@ 0x7c
 8009fd8:	6878      	ldr	r0, [r7, #4]
 8009fda:	f016 fbea 	bl	80207b2 <_ZdlPvj>
 8009fde:	687b      	ldr	r3, [r7, #4]
 8009fe0:	4618      	mov	r0, r3
 8009fe2:	3708      	adds	r7, #8
 8009fe4:	46bd      	mov	sp, r7
 8009fe6:	bd80      	pop	{r7, pc}

08009fe8 <_ZN8touchgfx10OSWrappers10initializeEv>:

/*
 * Initialize frame buffer semaphore and queue/mutex for VSYNC signal.
 */
void OSWrappers::initialize()
{
 8009fe8:	b480      	push	{r7}
 8009fea:	af00      	add	r7, sp, #0
    fb_sem = 0;
 8009fec:	4b05      	ldr	r3, [pc, #20]	@ (800a004 <_ZN8touchgfx10OSWrappers10initializeEv+0x1c>)
 8009fee:	2200      	movs	r2, #0
 8009ff0:	601a      	str	r2, [r3, #0]
    vsync_sem = 0;
 8009ff2:	4b05      	ldr	r3, [pc, #20]	@ (800a008 <_ZN8touchgfx10OSWrappers10initializeEv+0x20>)
 8009ff4:	2200      	movs	r2, #0
 8009ff6:	601a      	str	r2, [r3, #0]
}
 8009ff8:	bf00      	nop
 8009ffa:	46bd      	mov	sp, r7
 8009ffc:	f85d 7b04 	ldr.w	r7, [sp], #4
 800a000:	4770      	bx	lr
 800a002:	bf00      	nop
 800a004:	20000630 	.word	0x20000630
 800a008:	20000634 	.word	0x20000634

0800a00c <_ZN8touchgfx10OSWrappers24takeFrameBufferSemaphoreEv>:

/*
 * Take the frame buffer semaphore. Blocks until semaphore is available.
 */
void OSWrappers::takeFrameBufferSemaphore()
{
 800a00c:	b480      	push	{r7}
 800a00e:	af00      	add	r7, sp, #0
    while (fb_sem);
 800a010:	bf00      	nop
 800a012:	4b08      	ldr	r3, [pc, #32]	@ (800a034 <_ZN8touchgfx10OSWrappers24takeFrameBufferSemaphoreEv+0x28>)
 800a014:	681b      	ldr	r3, [r3, #0]
 800a016:	2b00      	cmp	r3, #0
 800a018:	bf14      	ite	ne
 800a01a:	2301      	movne	r3, #1
 800a01c:	2300      	moveq	r3, #0
 800a01e:	b2db      	uxtb	r3, r3
 800a020:	2b00      	cmp	r3, #0
 800a022:	d1f6      	bne.n	800a012 <_ZN8touchgfx10OSWrappers24takeFrameBufferSemaphoreEv+0x6>
    fb_sem = 1;
 800a024:	4b03      	ldr	r3, [pc, #12]	@ (800a034 <_ZN8touchgfx10OSWrappers24takeFrameBufferSemaphoreEv+0x28>)
 800a026:	2201      	movs	r2, #1
 800a028:	601a      	str	r2, [r3, #0]
}
 800a02a:	bf00      	nop
 800a02c:	46bd      	mov	sp, r7
 800a02e:	f85d 7b04 	ldr.w	r7, [sp], #4
 800a032:	4770      	bx	lr
 800a034:	20000630 	.word	0x20000630

0800a038 <_ZN8touchgfx10OSWrappers24giveFrameBufferSemaphoreEv>:

/*
 * Release the frame buffer semaphore.
 */
void OSWrappers::giveFrameBufferSemaphore()
{
 800a038:	b480      	push	{r7}
 800a03a:	af00      	add	r7, sp, #0
    fb_sem = 0;
 800a03c:	4b03      	ldr	r3, [pc, #12]	@ (800a04c <_ZN8touchgfx10OSWrappers24giveFrameBufferSemaphoreEv+0x14>)
 800a03e:	2200      	movs	r2, #0
 800a040:	601a      	str	r2, [r3, #0]
}
 800a042:	bf00      	nop
 800a044:	46bd      	mov	sp, r7
 800a046:	f85d 7b04 	ldr.w	r7, [sp], #4
 800a04a:	4770      	bx	lr
 800a04c:	20000630 	.word	0x20000630

0800a050 <_ZN8touchgfx10OSWrappers27tryTakeFrameBufferSemaphoreEv>:
 *
 * Note must return immediately! This function does not care who has the taken the semaphore,
 * it only serves to make sure that the semaphore is taken by someone.
 */
void OSWrappers::tryTakeFrameBufferSemaphore()
{
 800a050:	b480      	push	{r7}
 800a052:	af00      	add	r7, sp, #0
    fb_sem = 1;
 800a054:	4b03      	ldr	r3, [pc, #12]	@ (800a064 <_ZN8touchgfx10OSWrappers27tryTakeFrameBufferSemaphoreEv+0x14>)
 800a056:	2201      	movs	r2, #1
 800a058:	601a      	str	r2, [r3, #0]
}
 800a05a:	bf00      	nop
 800a05c:	46bd      	mov	sp, r7
 800a05e:	f85d 7b04 	ldr.w	r7, [sp], #4
 800a062:	4770      	bx	lr
 800a064:	20000630 	.word	0x20000630

0800a068 <_ZN8touchgfx10OSWrappers31giveFrameBufferSemaphoreFromISREv>:
 *
 * Release the frame buffer semaphore in a way that is safe in interrupt context.
 * Called from ISR.
 */
void OSWrappers::giveFrameBufferSemaphoreFromISR()
{
 800a068:	b480      	push	{r7}
 800a06a:	af00      	add	r7, sp, #0
    fb_sem = 0;
 800a06c:	4b03      	ldr	r3, [pc, #12]	@ (800a07c <_ZN8touchgfx10OSWrappers31giveFrameBufferSemaphoreFromISREv+0x14>)
 800a06e:	2200      	movs	r2, #0
 800a070:	601a      	str	r2, [r3, #0]
}
 800a072:	bf00      	nop
 800a074:	46bd      	mov	sp, r7
 800a076:	f85d 7b04 	ldr.w	r7, [sp], #4
 800a07a:	4770      	bx	lr
 800a07c:	20000630 	.word	0x20000630

0800a080 <_ZN8touchgfx10OSWrappers11signalVSyncEv>:
 *
 * Note This function is called from an ISR, and should (depending on OS) trigger a
 * scheduling.
 */
void OSWrappers::signalVSync()
{
 800a080:	b480      	push	{r7}
 800a082:	af00      	add	r7, sp, #0
    vsync_sem = 1;
 800a084:	4b03      	ldr	r3, [pc, #12]	@ (800a094 <_ZN8touchgfx10OSWrappers11signalVSyncEv+0x14>)
 800a086:	2201      	movs	r2, #1
 800a088:	601a      	str	r2, [r3, #0]
}
 800a08a:	bf00      	nop
 800a08c:	46bd      	mov	sp, r7
 800a08e:	f85d 7b04 	ldr.w	r7, [sp], #4
 800a092:	4770      	bx	lr
 800a094:	20000634 	.word	0x20000634

0800a098 <_ZN8touchgfx10OSWrappers19signalRenderingDoneEv>:
/*
  * Signal that the rendering of the frame has completed. Used by
  * some systems to avoid using any previous vsync.
  */
void OSWrappers::signalRenderingDone()
{
 800a098:	b480      	push	{r7}
 800a09a:	af00      	add	r7, sp, #0
    vsync_sem = 0;
 800a09c:	4b03      	ldr	r3, [pc, #12]	@ (800a0ac <_ZN8touchgfx10OSWrappers19signalRenderingDoneEv+0x14>)
 800a09e:	2200      	movs	r2, #0
 800a0a0:	601a      	str	r2, [r3, #0]
}
 800a0a2:	bf00      	nop
 800a0a4:	46bd      	mov	sp, r7
 800a0a6:	f85d 7b04 	ldr.w	r7, [sp], #4
 800a0aa:	4770      	bx	lr
 800a0ac:	20000634 	.word	0x20000634

0800a0b0 <_ZN8touchgfx10OSWrappers16isVSyncAvailableEv>:
 * @note signalRenderingDone is typically used together with this function.
 *
 * @return True if VSync occurred.
 */
bool OSWrappers::isVSyncAvailable()
{
 800a0b0:	b480      	push	{r7}
 800a0b2:	af00      	add	r7, sp, #0
    return vsync_sem;
 800a0b4:	4b05      	ldr	r3, [pc, #20]	@ (800a0cc <_ZN8touchgfx10OSWrappers16isVSyncAvailableEv+0x1c>)
 800a0b6:	681b      	ldr	r3, [r3, #0]
 800a0b8:	2b00      	cmp	r3, #0
 800a0ba:	bf14      	ite	ne
 800a0bc:	2301      	movne	r3, #1
 800a0be:	2300      	moveq	r3, #0
 800a0c0:	b2db      	uxtb	r3, r3
}
 800a0c2:	4618      	mov	r0, r3
 800a0c4:	46bd      	mov	sp, r7
 800a0c6:	f85d 7b04 	ldr.w	r7, [sp], #4
 800a0ca:	4770      	bx	lr
 800a0cc:	20000634 	.word	0x20000634

0800a0d0 <_ZN8touchgfx10OSWrappers12waitForVSyncEv>:
/*
 * This function check if a VSYNC has occured.
 * If VSYNC has occured, signal TouchGFX to start a rendering
 */
void OSWrappers::waitForVSync()
{
 800a0d0:	b580      	push	{r7, lr}
 800a0d2:	af00      	add	r7, sp, #0
    if (vsync_sem)
 800a0d4:	4b0a      	ldr	r3, [pc, #40]	@ (800a100 <_ZN8touchgfx10OSWrappers12waitForVSyncEv+0x30>)
 800a0d6:	681b      	ldr	r3, [r3, #0]
 800a0d8:	2b00      	cmp	r3, #0
 800a0da:	bf14      	ite	ne
 800a0dc:	2301      	movne	r3, #1
 800a0de:	2300      	moveq	r3, #0
 800a0e0:	b2db      	uxtb	r3, r3
 800a0e2:	2b00      	cmp	r3, #0
 800a0e4:	d00a      	beq.n	800a0fc <_ZN8touchgfx10OSWrappers12waitForVSyncEv+0x2c>
    {
        vsync_sem = 0;
 800a0e6:	4b06      	ldr	r3, [pc, #24]	@ (800a100 <_ZN8touchgfx10OSWrappers12waitForVSyncEv+0x30>)
 800a0e8:	2200      	movs	r2, #0
 800a0ea:	601a      	str	r2, [r3, #0]
        HAL::getInstance()->backPorchExited();
 800a0ec:	f7fd fafa 	bl	80076e4 <_ZN8touchgfx3HAL11getInstanceEv>
 800a0f0:	4603      	mov	r3, r0
 800a0f2:	681a      	ldr	r2, [r3, #0]
 800a0f4:	3270      	adds	r2, #112	@ 0x70
 800a0f6:	6812      	ldr	r2, [r2, #0]
 800a0f8:	4618      	mov	r0, r3
 800a0fa:	4790      	blx	r2
    }
}
 800a0fc:	bf00      	nop
 800a0fe:	bd80      	pop	{r7, pc}
 800a100:	20000634 	.word	0x20000634

0800a104 <_ZN8touchgfx9colortypeC1Ev>:
 800a104:	b480      	push	{r7}
 800a106:	b083      	sub	sp, #12
 800a108:	af00      	add	r7, sp, #0
 800a10a:	6078      	str	r0, [r7, #4]
 800a10c:	687b      	ldr	r3, [r7, #4]
 800a10e:	2200      	movs	r2, #0
 800a110:	601a      	str	r2, [r3, #0]
 800a112:	687b      	ldr	r3, [r7, #4]
 800a114:	4618      	mov	r0, r3
 800a116:	370c      	adds	r7, #12
 800a118:	46bd      	mov	sp, r7
 800a11a:	f85d 7b04 	ldr.w	r7, [sp], #4
 800a11e:	4770      	bx	lr

0800a120 <_ZN8touchgfx9DMA_QueueD1Ev>:
 800a120:	b480      	push	{r7}
 800a122:	b083      	sub	sp, #12
 800a124:	af00      	add	r7, sp, #0
 800a126:	6078      	str	r0, [r7, #4]
 800a128:	4a04      	ldr	r2, [pc, #16]	@ (800a13c <_ZN8touchgfx9DMA_QueueD1Ev+0x1c>)
 800a12a:	687b      	ldr	r3, [r7, #4]
 800a12c:	601a      	str	r2, [r3, #0]
 800a12e:	687b      	ldr	r3, [r7, #4]
 800a130:	4618      	mov	r0, r3
 800a132:	370c      	adds	r7, #12
 800a134:	46bd      	mov	sp, r7
 800a136:	f85d 7b04 	ldr.w	r7, [sp], #4
 800a13a:	4770      	bx	lr
 800a13c:	08022fa4 	.word	0x08022fa4

0800a140 <_ZN8touchgfx9DMA_QueueD0Ev>:
 800a140:	b580      	push	{r7, lr}
 800a142:	b082      	sub	sp, #8
 800a144:	af00      	add	r7, sp, #0
 800a146:	6078      	str	r0, [r7, #4]
 800a148:	6878      	ldr	r0, [r7, #4]
 800a14a:	f7ff ffe9 	bl	800a120 <_ZN8touchgfx9DMA_QueueD1Ev>
 800a14e:	2104      	movs	r1, #4
 800a150:	6878      	ldr	r0, [r7, #4]
 800a152:	f016 fb2e 	bl	80207b2 <_ZdlPvj>
 800a156:	687b      	ldr	r3, [r7, #4]
 800a158:	4618      	mov	r0, r3
 800a15a:	3708      	adds	r7, #8
 800a15c:	46bd      	mov	sp, r7
 800a15e:	bd80      	pop	{r7, pc}

0800a160 <_ZN8touchgfx13DMA_Interface10initializeEv>:
 800a160:	b480      	push	{r7}
 800a162:	b083      	sub	sp, #12
 800a164:	af00      	add	r7, sp, #0
 800a166:	6078      	str	r0, [r7, #4]
 800a168:	bf00      	nop
 800a16a:	370c      	adds	r7, #12
 800a16c:	46bd      	mov	sp, r7
 800a16e:	f85d 7b04 	ldr.w	r7, [sp], #4
 800a172:	4770      	bx	lr

0800a174 <_ZN8touchgfx13DMA_Interface10getDMATypeEv>:
 800a174:	b480      	push	{r7}
 800a176:	b083      	sub	sp, #12
 800a178:	af00      	add	r7, sp, #0
 800a17a:	6078      	str	r0, [r7, #4]
 800a17c:	2300      	movs	r3, #0
 800a17e:	4618      	mov	r0, r3
 800a180:	370c      	adds	r7, #12
 800a182:	46bd      	mov	sp, r7
 800a184:	f85d 7b04 	ldr.w	r7, [sp], #4
 800a188:	4770      	bx	lr
	...

0800a18c <_ZN8touchgfx13DMA_InterfaceD1Ev>:
 800a18c:	b480      	push	{r7}
 800a18e:	b083      	sub	sp, #12
 800a190:	af00      	add	r7, sp, #0
 800a192:	6078      	str	r0, [r7, #4]
 800a194:	4a04      	ldr	r2, [pc, #16]	@ (800a1a8 <_ZN8touchgfx13DMA_InterfaceD1Ev+0x1c>)
 800a196:	687b      	ldr	r3, [r7, #4]
 800a198:	601a      	str	r2, [r3, #0]
 800a19a:	687b      	ldr	r3, [r7, #4]
 800a19c:	4618      	mov	r0, r3
 800a19e:	370c      	adds	r7, #12
 800a1a0:	46bd      	mov	sp, r7
 800a1a2:	f85d 7b04 	ldr.w	r7, [sp], #4
 800a1a6:	4770      	bx	lr
 800a1a8:	08023374 	.word	0x08023374

0800a1ac <_ZN8touchgfx13DMA_InterfaceD0Ev>:
 800a1ac:	b580      	push	{r7, lr}
 800a1ae:	b082      	sub	sp, #8
 800a1b0:	af00      	add	r7, sp, #0
 800a1b2:	6078      	str	r0, [r7, #4]
 800a1b4:	6878      	ldr	r0, [r7, #4]
 800a1b6:	f7ff ffe9 	bl	800a18c <_ZN8touchgfx13DMA_InterfaceD1Ev>
 800a1ba:	210c      	movs	r1, #12
 800a1bc:	6878      	ldr	r0, [r7, #4]
 800a1be:	f016 faf8 	bl	80207b2 <_ZdlPvj>
 800a1c2:	687b      	ldr	r3, [r7, #4]
 800a1c4:	4618      	mov	r0, r3
 800a1c6:	3708      	adds	r7, #8
 800a1c8:	46bd      	mov	sp, r7
 800a1ca:	bd80      	pop	{r7, pc}

0800a1cc <_ZN8touchgfx13DMA_InterfaceC1ERNS_9DMA_QueueE>:
 800a1cc:	b480      	push	{r7}
 800a1ce:	b083      	sub	sp, #12
 800a1d0:	af00      	add	r7, sp, #0
 800a1d2:	6078      	str	r0, [r7, #4]
 800a1d4:	6039      	str	r1, [r7, #0]
 800a1d6:	4a09      	ldr	r2, [pc, #36]	@ (800a1fc <_ZN8touchgfx13DMA_InterfaceC1ERNS_9DMA_QueueE+0x30>)
 800a1d8:	687b      	ldr	r3, [r7, #4]
 800a1da:	601a      	str	r2, [r3, #0]
 800a1dc:	687b      	ldr	r3, [r7, #4]
 800a1de:	683a      	ldr	r2, [r7, #0]
 800a1e0:	605a      	str	r2, [r3, #4]
 800a1e2:	687b      	ldr	r3, [r7, #4]
 800a1e4:	2200      	movs	r2, #0
 800a1e6:	721a      	strb	r2, [r3, #8]
 800a1e8:	687b      	ldr	r3, [r7, #4]
 800a1ea:	2200      	movs	r2, #0
 800a1ec:	725a      	strb	r2, [r3, #9]
 800a1ee:	687b      	ldr	r3, [r7, #4]
 800a1f0:	4618      	mov	r0, r3
 800a1f2:	370c      	adds	r7, #12
 800a1f4:	46bd      	mov	sp, r7
 800a1f6:	f85d 7b04 	ldr.w	r7, [sp], #4
 800a1fa:	4770      	bx	lr
 800a1fc:	08023374 	.word	0x08023374

0800a200 <_ZN8STM32DMA18signalDMAInterruptEv>:
 800a200:	b480      	push	{r7}
 800a202:	b083      	sub	sp, #12
 800a204:	af00      	add	r7, sp, #0
 800a206:	6078      	str	r0, [r7, #4]
 800a208:	bf00      	nop
 800a20a:	370c      	adds	r7, #12
 800a20c:	46bd      	mov	sp, r7
 800a20e:	f85d 7b04 	ldr.w	r7, [sp], #4
 800a212:	4770      	bx	lr

0800a214 <_ZN8STM32DMA5flushEv>:
 800a214:	b480      	push	{r7}
 800a216:	b083      	sub	sp, #12
 800a218:	af00      	add	r7, sp, #0
 800a21a:	6078      	str	r0, [r7, #4]
 800a21c:	bf00      	nop
 800a21e:	370c      	adds	r7, #12
 800a220:	46bd      	mov	sp, r7
 800a222:	f85d 7b04 	ldr.w	r7, [sp], #4
 800a226:	4770      	bx	lr

0800a228 <_ZN8touchgfx6BlitOpC1Ev>:
 800a228:	b580      	push	{r7, lr}
 800a22a:	b082      	sub	sp, #8
 800a22c:	af00      	add	r7, sp, #0
 800a22e:	6078      	str	r0, [r7, #4]
 800a230:	687b      	ldr	r3, [r7, #4]
 800a232:	330c      	adds	r3, #12
 800a234:	4618      	mov	r0, r3
 800a236:	f7ff ff65 	bl	800a104 <_ZN8touchgfx9colortypeC1Ev>
 800a23a:	687b      	ldr	r3, [r7, #4]
 800a23c:	4618      	mov	r0, r3
 800a23e:	3708      	adds	r7, #8
 800a240:	46bd      	mov	sp, r7
 800a242:	bd80      	pop	{r7, pc}

0800a244 <_ZN8STM32DMAC1Ev>:
 800a244:	b580      	push	{r7, lr}
 800a246:	b082      	sub	sp, #8
 800a248:	af00      	add	r7, sp, #0
 800a24a:	6078      	str	r0, [r7, #4]
 800a24c:	687a      	ldr	r2, [r7, #4]
 800a24e:	687b      	ldr	r3, [r7, #4]
 800a250:	330c      	adds	r3, #12
 800a252:	4619      	mov	r1, r3
 800a254:	4610      	mov	r0, r2
 800a256:	f7ff ffb9 	bl	800a1cc <_ZN8touchgfx13DMA_InterfaceC1ERNS_9DMA_QueueE>
 800a25a:	4a0b      	ldr	r2, [pc, #44]	@ (800a288 <_ZN8STM32DMAC1Ev+0x44>)
 800a25c:	687b      	ldr	r3, [r7, #4]
 800a25e:	601a      	str	r2, [r3, #0]
 800a260:	687b      	ldr	r3, [r7, #4]
 800a262:	f103 000c 	add.w	r0, r3, #12
 800a266:	687b      	ldr	r3, [r7, #4]
 800a268:	3320      	adds	r3, #32
 800a26a:	2201      	movs	r2, #1
 800a26c:	4619      	mov	r1, r3
 800a26e:	f002 fd33 	bl	800ccd8 <_ZN8touchgfx17LockFreeDMA_QueueC1EPNS_6BlitOpEi>
 800a272:	687b      	ldr	r3, [r7, #4]
 800a274:	3320      	adds	r3, #32
 800a276:	4618      	mov	r0, r3
 800a278:	f7ff ffd6 	bl	800a228 <_ZN8touchgfx6BlitOpC1Ev>
 800a27c:	687b      	ldr	r3, [r7, #4]
 800a27e:	4618      	mov	r0, r3
 800a280:	3708      	adds	r7, #8
 800a282:	46bd      	mov	sp, r7
 800a284:	bd80      	pop	{r7, pc}
 800a286:	bf00      	nop
 800a288:	08022f54 	.word	0x08022f54

0800a28c <_ZN8STM32DMA11getBlitCapsEv>:
 800a28c:	b480      	push	{r7}
 800a28e:	b083      	sub	sp, #12
 800a290:	af00      	add	r7, sp, #0
 800a292:	6078      	str	r0, [r7, #4]
 800a294:	2300      	movs	r3, #0
 800a296:	4618      	mov	r0, r3
 800a298:	370c      	adds	r7, #12
 800a29a:	46bd      	mov	sp, r7
 800a29c:	f85d 7b04 	ldr.w	r7, [sp], #4
 800a2a0:	4770      	bx	lr
	...

0800a2a4 <_ZN8STM32DMA13setupDataCopyERKN8touchgfx6BlitOpE>:
 800a2a4:	b580      	push	{r7, lr}
 800a2a6:	b082      	sub	sp, #8
 800a2a8:	af00      	add	r7, sp, #0
 800a2aa:	6078      	str	r0, [r7, #4]
 800a2ac:	6039      	str	r1, [r7, #0]
 800a2ae:	4b03      	ldr	r3, [pc, #12]	@ (800a2bc <_ZN8STM32DMA13setupDataCopyERKN8touchgfx6BlitOpE+0x18>)
 800a2b0:	4a03      	ldr	r2, [pc, #12]	@ (800a2c0 <_ZN8STM32DMA13setupDataCopyERKN8touchgfx6BlitOpE+0x1c>)
 800a2b2:	2122      	movs	r1, #34	@ 0x22
 800a2b4:	4803      	ldr	r0, [pc, #12]	@ (800a2c4 <_ZN8STM32DMA13setupDataCopyERKN8touchgfx6BlitOpE+0x20>)
 800a2b6:	f016 faab 	bl	8020810 <__assert_func>
 800a2ba:	bf00      	nop
 800a2bc:	08022078 	.word	0x08022078
 800a2c0:	0802209c 	.word	0x0802209c
 800a2c4:	080220dc 	.word	0x080220dc

0800a2c8 <_ZN8STM32DMA13setupDataFillERKN8touchgfx6BlitOpE>:
 800a2c8:	b580      	push	{r7, lr}
 800a2ca:	b082      	sub	sp, #8
 800a2cc:	af00      	add	r7, sp, #0
 800a2ce:	6078      	str	r0, [r7, #4]
 800a2d0:	6039      	str	r1, [r7, #0]
 800a2d2:	4b03      	ldr	r3, [pc, #12]	@ (800a2e0 <_ZN8STM32DMA13setupDataFillERKN8touchgfx6BlitOpE+0x18>)
 800a2d4:	4a03      	ldr	r2, [pc, #12]	@ (800a2e4 <_ZN8STM32DMA13setupDataFillERKN8touchgfx6BlitOpE+0x1c>)
 800a2d6:	2127      	movs	r1, #39	@ 0x27
 800a2d8:	4803      	ldr	r0, [pc, #12]	@ (800a2e8 <_ZN8STM32DMA13setupDataFillERKN8touchgfx6BlitOpE+0x20>)
 800a2da:	f016 fa99 	bl	8020810 <__assert_func>
 800a2de:	bf00      	nop
 800a2e0:	08022078 	.word	0x08022078
 800a2e4:	08022108 	.word	0x08022108
 800a2e8:	080220dc 	.word	0x080220dc

0800a2ec <_ZN8STM32DMAD1Ev>:
 800a2ec:	b580      	push	{r7, lr}
 800a2ee:	b082      	sub	sp, #8
 800a2f0:	af00      	add	r7, sp, #0
 800a2f2:	6078      	str	r0, [r7, #4]
 800a2f4:	4a08      	ldr	r2, [pc, #32]	@ (800a318 <_ZN8STM32DMAD1Ev+0x2c>)
 800a2f6:	687b      	ldr	r3, [r7, #4]
 800a2f8:	601a      	str	r2, [r3, #0]
 800a2fa:	687b      	ldr	r3, [r7, #4]
 800a2fc:	330c      	adds	r3, #12
 800a2fe:	4618      	mov	r0, r3
 800a300:	f000 f81c 	bl	800a33c <_ZN8touchgfx17LockFreeDMA_QueueD1Ev>
 800a304:	687b      	ldr	r3, [r7, #4]
 800a306:	4618      	mov	r0, r3
 800a308:	f7ff ff40 	bl	800a18c <_ZN8touchgfx13DMA_InterfaceD1Ev>
 800a30c:	687b      	ldr	r3, [r7, #4]
 800a30e:	4618      	mov	r0, r3
 800a310:	3708      	adds	r7, #8
 800a312:	46bd      	mov	sp, r7
 800a314:	bd80      	pop	{r7, pc}
 800a316:	bf00      	nop
 800a318:	08022f54 	.word	0x08022f54

0800a31c <_ZN8STM32DMAD0Ev>:
 800a31c:	b580      	push	{r7, lr}
 800a31e:	b082      	sub	sp, #8
 800a320:	af00      	add	r7, sp, #0
 800a322:	6078      	str	r0, [r7, #4]
 800a324:	6878      	ldr	r0, [r7, #4]
 800a326:	f7ff ffe1 	bl	800a2ec <_ZN8STM32DMAD1Ev>
 800a32a:	2144      	movs	r1, #68	@ 0x44
 800a32c:	6878      	ldr	r0, [r7, #4]
 800a32e:	f016 fa40 	bl	80207b2 <_ZdlPvj>
 800a332:	687b      	ldr	r3, [r7, #4]
 800a334:	4618      	mov	r0, r3
 800a336:	3708      	adds	r7, #8
 800a338:	46bd      	mov	sp, r7
 800a33a:	bd80      	pop	{r7, pc}

0800a33c <_ZN8touchgfx17LockFreeDMA_QueueD1Ev>:
 800a33c:	b580      	push	{r7, lr}
 800a33e:	b082      	sub	sp, #8
 800a340:	af00      	add	r7, sp, #0
 800a342:	6078      	str	r0, [r7, #4]
 800a344:	4a05      	ldr	r2, [pc, #20]	@ (800a35c <_ZN8touchgfx17LockFreeDMA_QueueD1Ev+0x20>)
 800a346:	687b      	ldr	r3, [r7, #4]
 800a348:	601a      	str	r2, [r3, #0]
 800a34a:	687b      	ldr	r3, [r7, #4]
 800a34c:	4618      	mov	r0, r3
 800a34e:	f7ff fee7 	bl	800a120 <_ZN8touchgfx9DMA_QueueD1Ev>
 800a352:	687b      	ldr	r3, [r7, #4]
 800a354:	4618      	mov	r0, r3
 800a356:	3708      	adds	r7, #8
 800a358:	46bd      	mov	sp, r7
 800a35a:	bd80      	pop	{r7, pc}
 800a35c:	080233c4 	.word	0x080233c4

0800a360 <_ZN8touchgfx17LockFreeDMA_QueueD0Ev>:
 800a360:	b580      	push	{r7, lr}
 800a362:	b082      	sub	sp, #8
 800a364:	af00      	add	r7, sp, #0
 800a366:	6078      	str	r0, [r7, #4]
 800a368:	6878      	ldr	r0, [r7, #4]
 800a36a:	f7ff ffe7 	bl	800a33c <_ZN8touchgfx17LockFreeDMA_QueueD1Ev>
 800a36e:	2114      	movs	r1, #20
 800a370:	6878      	ldr	r0, [r7, #4]
 800a372:	f016 fa1e 	bl	80207b2 <_ZdlPvj>
 800a376:	687b      	ldr	r3, [r7, #4]
 800a378:	4618      	mov	r0, r3
 800a37a:	3708      	adds	r7, #8
 800a37c:	46bd      	mov	sp, r7
 800a37e:	bd80      	pop	{r7, pc}

0800a380 <_ZN8touchgfx9TypedText13registerTextsEPKNS_5TextsE>:
     * Registers an array of texts. This function is called automatically from
     * touchgfx_generic_init(). Should not be called under normal circumstances.
     *
     * @param  t The array of texts.
     */
    static void registerTexts(const Texts* t)
 800a380:	b480      	push	{r7}
 800a382:	b083      	sub	sp, #12
 800a384:	af00      	add	r7, sp, #0
 800a386:	6078      	str	r0, [r7, #4]
    {
        texts = t;
 800a388:	4a04      	ldr	r2, [pc, #16]	@ (800a39c <_ZN8touchgfx9TypedText13registerTextsEPKNS_5TextsE+0x1c>)
 800a38a:	687b      	ldr	r3, [r7, #4]
 800a38c:	6013      	str	r3, [r2, #0]
    }
 800a38e:	bf00      	nop
 800a390:	370c      	adds	r7, #12
 800a392:	46bd      	mov	sp, r7
 800a394:	f85d 7b04 	ldr.w	r7, [sp], #4
 800a398:	4770      	bx	lr
 800a39a:	bf00      	nop
 800a39c:	20002cb8 	.word	0x20002cb8

0800a3a0 <_ZN8touchgfx7MVPHeapC1ERNS_17AbstractPartitionES2_S2_RNS_14MVPApplicationE>:
     * @param [in] scr  A memory partition containing enough memory to hold the largest view.
     * @param [in] tra  A memory partition containing enough memory to hold the largest
     *                  transition.
     * @param [in] app  A reference to the MVPApplication instance.
     */
    MVPHeap(AbstractPartition& pres,
 800a3a0:	b480      	push	{r7}
 800a3a2:	b085      	sub	sp, #20
 800a3a4:	af00      	add	r7, sp, #0
 800a3a6:	60f8      	str	r0, [r7, #12]
 800a3a8:	60b9      	str	r1, [r7, #8]
 800a3aa:	607a      	str	r2, [r7, #4]
 800a3ac:	603b      	str	r3, [r7, #0]
            AbstractPartition& tra,
            MVPApplication& app)
        : presenterStorage(pres),
          screenStorage(scr),
          transitionStorage(tra),
          frontendApplication(app)
 800a3ae:	4a0b      	ldr	r2, [pc, #44]	@ (800a3dc <_ZN8touchgfx7MVPHeapC1ERNS_17AbstractPartitionES2_S2_RNS_14MVPApplicationE+0x3c>)
 800a3b0:	68fb      	ldr	r3, [r7, #12]
 800a3b2:	601a      	str	r2, [r3, #0]
        : presenterStorage(pres),
 800a3b4:	68fb      	ldr	r3, [r7, #12]
 800a3b6:	68ba      	ldr	r2, [r7, #8]
 800a3b8:	605a      	str	r2, [r3, #4]
          screenStorage(scr),
 800a3ba:	68fb      	ldr	r3, [r7, #12]
 800a3bc:	687a      	ldr	r2, [r7, #4]
 800a3be:	609a      	str	r2, [r3, #8]
          transitionStorage(tra),
 800a3c0:	68fb      	ldr	r3, [r7, #12]
 800a3c2:	683a      	ldr	r2, [r7, #0]
 800a3c4:	60da      	str	r2, [r3, #12]
          frontendApplication(app)
 800a3c6:	68fb      	ldr	r3, [r7, #12]
 800a3c8:	69ba      	ldr	r2, [r7, #24]
 800a3ca:	611a      	str	r2, [r3, #16]
    {
    }
 800a3cc:	68fb      	ldr	r3, [r7, #12]
 800a3ce:	4618      	mov	r0, r3
 800a3d0:	3714      	adds	r7, #20
 800a3d2:	46bd      	mov	sp, r7
 800a3d4:	f85d 7b04 	ldr.w	r7, [sp], #4
 800a3d8:	4770      	bx	lr
 800a3da:	bf00      	nop
 800a3dc:	0802308c 	.word	0x0802308c

0800a3e0 <_ZN8touchgfx7MVPHeapD1Ev>:

    /** Finalizes an instance of the MVPHeap class. */
    virtual ~MVPHeap()
 800a3e0:	b480      	push	{r7}
 800a3e2:	b083      	sub	sp, #12
 800a3e4:	af00      	add	r7, sp, #0
 800a3e6:	6078      	str	r0, [r7, #4]
    {
 800a3e8:	4a04      	ldr	r2, [pc, #16]	@ (800a3fc <_ZN8touchgfx7MVPHeapD1Ev+0x1c>)
 800a3ea:	687b      	ldr	r3, [r7, #4]
 800a3ec:	601a      	str	r2, [r3, #0]
    }
 800a3ee:	687b      	ldr	r3, [r7, #4]
 800a3f0:	4618      	mov	r0, r3
 800a3f2:	370c      	adds	r7, #12
 800a3f4:	46bd      	mov	sp, r7
 800a3f6:	f85d 7b04 	ldr.w	r7, [sp], #4
 800a3fa:	4770      	bx	lr
 800a3fc:	0802308c 	.word	0x0802308c

0800a400 <_ZN8touchgfx7MVPHeapD0Ev>:
    virtual ~MVPHeap()
 800a400:	b580      	push	{r7, lr}
 800a402:	b082      	sub	sp, #8
 800a404:	af00      	add	r7, sp, #0
 800a406:	6078      	str	r0, [r7, #4]
    }
 800a408:	6878      	ldr	r0, [r7, #4]
 800a40a:	f7ff ffe9 	bl	800a3e0 <_ZN8touchgfx7MVPHeapD1Ev>
 800a40e:	2114      	movs	r1, #20
 800a410:	6878      	ldr	r0, [r7, #4]
 800a412:	f016 f9ce 	bl	80207b2 <_ZdlPvj>
 800a416:	687b      	ldr	r3, [r7, #4]
 800a418:	4618      	mov	r0, r3
 800a41a:	3708      	adds	r7, #8
 800a41c:	46bd      	mov	sp, r7
 800a41e:	bd80      	pop	{r7, pc}

0800a420 <_ZN8touchgfx3LCDD1Ev>:
        : textureMapperClass(0), vectorFontRenderer(0)
    {
    }

    /** Finalizes an instance of the LCD class. */
    virtual ~LCD()
 800a420:	b480      	push	{r7}
 800a422:	b083      	sub	sp, #12
 800a424:	af00      	add	r7, sp, #0
 800a426:	6078      	str	r0, [r7, #4]
    {
 800a428:	4a04      	ldr	r2, [pc, #16]	@ (800a43c <_ZN8touchgfx3LCDD1Ev+0x1c>)
 800a42a:	687b      	ldr	r3, [r7, #4]
 800a42c:	601a      	str	r2, [r3, #0]
    }
 800a42e:	687b      	ldr	r3, [r7, #4]
 800a430:	4618      	mov	r0, r3
 800a432:	370c      	adds	r7, #12
 800a434:	46bd      	mov	sp, r7
 800a436:	f85d 7b04 	ldr.w	r7, [sp], #4
 800a43a:	4770      	bx	lr
 800a43c:	080236c8 	.word	0x080236c8

0800a440 <_ZN8touchgfx3LCDD0Ev>:
    virtual ~LCD()
 800a440:	b580      	push	{r7, lr}
 800a442:	b082      	sub	sp, #8
 800a444:	af00      	add	r7, sp, #0
 800a446:	6078      	str	r0, [r7, #4]
    }
 800a448:	6878      	ldr	r0, [r7, #4]
 800a44a:	f7ff ffe9 	bl	800a420 <_ZN8touchgfx3LCDD1Ev>
 800a44e:	210c      	movs	r1, #12
 800a450:	6878      	ldr	r0, [r7, #4]
 800a452:	f016 f9ae 	bl	80207b2 <_ZdlPvj>
 800a456:	687b      	ldr	r3, [r7, #4]
 800a458:	4618      	mov	r0, r3
 800a45a:	3708      	adds	r7, #8
 800a45c:	46bd      	mov	sp, r7
 800a45e:	bd80      	pop	{r7, pc}

0800a460 <_ZN8touchgfx8Gestures9DragStateC1Ev>:
    static const uint8_t MIN_VELOCITY_AT_RELEASE_BEFORE_SWIPE = 3;

    /** Defines the state of a drag. */
    struct DragState
    {
        DragState()
 800a460:	b480      	push	{r7}
 800a462:	b083      	sub	sp, #12
 800a464:	af00      	add	r7, sp, #0
 800a466:	6078      	str	r0, [r7, #4]
            : startX(0),
 800a468:	687b      	ldr	r3, [r7, #4]
 800a46a:	2200      	movs	r2, #0
 800a46c:	801a      	strh	r2, [r3, #0]
              startY(0),
 800a46e:	687b      	ldr	r3, [r7, #4]
 800a470:	2200      	movs	r2, #0
 800a472:	805a      	strh	r2, [r3, #2]
              downX(0),
 800a474:	687b      	ldr	r3, [r7, #4]
 800a476:	2200      	movs	r2, #0
 800a478:	809a      	strh	r2, [r3, #4]
              downY(0),
 800a47a:	687b      	ldr	r3, [r7, #4]
 800a47c:	2200      	movs	r2, #0
 800a47e:	80da      	strh	r2, [r3, #6]
              tickCount(0),
 800a480:	687b      	ldr	r3, [r7, #4]
 800a482:	2200      	movs	r2, #0
 800a484:	811a      	strh	r2, [r3, #8]
              velocityX(0),
 800a486:	687b      	ldr	r3, [r7, #4]
 800a488:	2200      	movs	r2, #0
 800a48a:	815a      	strh	r2, [r3, #10]
              velocityY(0),
 800a48c:	687b      	ldr	r3, [r7, #4]
 800a48e:	2200      	movs	r2, #0
 800a490:	819a      	strh	r2, [r3, #12]
              inProgress(false)
 800a492:	687b      	ldr	r3, [r7, #4]
 800a494:	2200      	movs	r2, #0
 800a496:	739a      	strb	r2, [r3, #14]
        {
        }
 800a498:	687b      	ldr	r3, [r7, #4]
 800a49a:	4618      	mov	r0, r3
 800a49c:	370c      	adds	r7, #12
 800a49e:	46bd      	mov	sp, r7
 800a4a0:	f85d 7b04 	ldr.w	r7, [sp], #4
 800a4a4:	4770      	bx	lr

0800a4a6 <_ZN8touchgfx8GesturesC1Ev>:
        bool inProgress;    ///< Whether a drag is in progress or not
    };

public:
    /** Default constructor. Does nothing. */
    Gestures()
 800a4a6:	b580      	push	{r7, lr}
 800a4a8:	b082      	sub	sp, #8
 800a4aa:	af00      	add	r7, sp, #0
 800a4ac:	6078      	str	r0, [r7, #4]
        : drag(), listener(0), dragThresholdValue(0)
 800a4ae:	687b      	ldr	r3, [r7, #4]
 800a4b0:	4618      	mov	r0, r3
 800a4b2:	f7ff ffd5 	bl	800a460 <_ZN8touchgfx8Gestures9DragStateC1Ev>
 800a4b6:	687b      	ldr	r3, [r7, #4]
 800a4b8:	2200      	movs	r2, #0
 800a4ba:	611a      	str	r2, [r3, #16]
 800a4bc:	687b      	ldr	r3, [r7, #4]
 800a4be:	2200      	movs	r2, #0
 800a4c0:	829a      	strh	r2, [r3, #20]
    {
    }
 800a4c2:	687b      	ldr	r3, [r7, #4]
 800a4c4:	4618      	mov	r0, r3
 800a4c6:	3708      	adds	r7, #8
 800a4c8:	46bd      	mov	sp, r7
 800a4ca:	bd80      	pop	{r7, pc}

0800a4cc <_ZN8touchgfx3HALC1ERNS_13DMA_InterfaceERNS_3LCDERNS_15TouchControllerEtt>:
    HAL(DMA_Interface& dmaInterface, LCD& display, TouchController& touchCtrl, uint16_t width, uint16_t height)
 800a4cc:	b580      	push	{r7, lr}
 800a4ce:	b084      	sub	sp, #16
 800a4d0:	af00      	add	r7, sp, #0
 800a4d2:	60f8      	str	r0, [r7, #12]
 800a4d4:	60b9      	str	r1, [r7, #8]
 800a4d6:	607a      	str	r2, [r7, #4]
 800a4d8:	603b      	str	r3, [r7, #0]
          lastRenderMethod(HARDWARE)
 800a4da:	4a55      	ldr	r2, [pc, #340]	@ (800a630 <_ZN8touchgfx3HALC1ERNS_13DMA_InterfaceERNS_3LCDERNS_15TouchControllerEtt+0x164>)
 800a4dc:	68fb      	ldr	r3, [r7, #12]
 800a4de:	601a      	str	r2, [r3, #0]
        : dma(dmaInterface),
 800a4e0:	68fb      	ldr	r3, [r7, #12]
 800a4e2:	68ba      	ldr	r2, [r7, #8]
 800a4e4:	605a      	str	r2, [r3, #4]
          lcdRef(display),
 800a4e6:	68fb      	ldr	r3, [r7, #12]
 800a4e8:	687a      	ldr	r2, [r7, #4]
 800a4ea:	609a      	str	r2, [r3, #8]
          touchController(touchCtrl),
 800a4ec:	68fb      	ldr	r3, [r7, #12]
 800a4ee:	683a      	ldr	r2, [r7, #0]
 800a4f0:	60da      	str	r2, [r3, #12]
          mcuInstrumentation(0),
 800a4f2:	68fb      	ldr	r3, [r7, #12]
 800a4f4:	2200      	movs	r2, #0
 800a4f6:	611a      	str	r2, [r3, #16]
          buttonController(0),
 800a4f8:	68fb      	ldr	r3, [r7, #12]
 800a4fa:	2200      	movs	r2, #0
 800a4fc:	615a      	str	r2, [r3, #20]
          frameBufferAllocator(0),
 800a4fe:	68fb      	ldr	r3, [r7, #12]
 800a500:	2200      	movs	r2, #0
 800a502:	619a      	str	r2, [r3, #24]
          gestures(),
 800a504:	68fb      	ldr	r3, [r7, #12]
 800a506:	331c      	adds	r3, #28
 800a508:	4618      	mov	r0, r3
 800a50a:	f7ff ffcc 	bl	800a4a6 <_ZN8touchgfx8GesturesC1Ev>
          nativeDisplayOrientation(ORIENTATION_LANDSCAPE),
 800a50e:	68fb      	ldr	r3, [r7, #12]
 800a510:	2200      	movs	r2, #0
 800a512:	f883 2034 	strb.w	r2, [r3, #52]	@ 0x34
          taskDelayFunc(0),
 800a516:	68fb      	ldr	r3, [r7, #12]
 800a518:	2200      	movs	r2, #0
 800a51a:	639a      	str	r2, [r3, #56]	@ 0x38
          frameBuffer0(0),
 800a51c:	68fb      	ldr	r3, [r7, #12]
 800a51e:	2200      	movs	r2, #0
 800a520:	63da      	str	r2, [r3, #60]	@ 0x3c
          frameBuffer1(0),
 800a522:	68fb      	ldr	r3, [r7, #12]
 800a524:	2200      	movs	r2, #0
 800a526:	641a      	str	r2, [r3, #64]	@ 0x40
          frameBuffer2(0),
 800a528:	68fb      	ldr	r3, [r7, #12]
 800a52a:	2200      	movs	r2, #0
 800a52c:	645a      	str	r2, [r3, #68]	@ 0x44
          refreshStrategy(REFRESH_STRATEGY_DEFAULT),
 800a52e:	68fb      	ldr	r3, [r7, #12]
 800a530:	2200      	movs	r2, #0
 800a532:	f883 2048 	strb.w	r2, [r3, #72]	@ 0x48
          fingerSize(1),
 800a536:	68fb      	ldr	r3, [r7, #12]
 800a538:	2201      	movs	r2, #1
 800a53a:	f883 2049 	strb.w	r2, [r3, #73]	@ 0x49
          lockDMAToPorch(false),
 800a53e:	68fb      	ldr	r3, [r7, #12]
 800a540:	2200      	movs	r2, #0
 800a542:	f883 204a 	strb.w	r2, [r3, #74]	@ 0x4a
          frameBufferUpdatedThisFrame(false),
 800a546:	68fb      	ldr	r3, [r7, #12]
 800a548:	2200      	movs	r2, #0
 800a54a:	f883 204b 	strb.w	r2, [r3, #75]	@ 0x4b
          auxiliaryLCD(0),
 800a54e:	68fb      	ldr	r3, [r7, #12]
 800a550:	2200      	movs	r2, #0
 800a552:	64da      	str	r2, [r3, #76]	@ 0x4c
          partialFrameBufferRect(),
 800a554:	68fb      	ldr	r3, [r7, #12]
 800a556:	3350      	adds	r3, #80	@ 0x50
 800a558:	4618      	mov	r0, r3
 800a55a:	f7fd fd62 	bl	8008022 <_ZN8touchgfx4RectC1Ev>
          useAuxiliaryLCD(false),
 800a55e:	68fb      	ldr	r3, [r7, #12]
 800a560:	2200      	movs	r2, #0
 800a562:	f883 2058 	strb.w	r2, [r3, #88]	@ 0x58
          listener(0),
 800a566:	68fb      	ldr	r3, [r7, #12]
 800a568:	2200      	movs	r2, #0
 800a56a:	65da      	str	r2, [r3, #92]	@ 0x5c
          lastX(0),
 800a56c:	68fb      	ldr	r3, [r7, #12]
 800a56e:	2200      	movs	r2, #0
 800a570:	661a      	str	r2, [r3, #96]	@ 0x60
          lastY(0),
 800a572:	68fb      	ldr	r3, [r7, #12]
 800a574:	2200      	movs	r2, #0
 800a576:	665a      	str	r2, [r3, #100]	@ 0x64
          touchSampleRate(1),
 800a578:	68fb      	ldr	r3, [r7, #12]
 800a57a:	2201      	movs	r2, #1
 800a57c:	f883 2068 	strb.w	r2, [r3, #104]	@ 0x68
          mcuLoadPct(0),
 800a580:	68fb      	ldr	r3, [r7, #12]
 800a582:	2200      	movs	r2, #0
 800a584:	f883 2069 	strb.w	r2, [r3, #105]	@ 0x69
          vSyncCnt(0),
 800a588:	68fb      	ldr	r3, [r7, #12]
 800a58a:	2200      	movs	r2, #0
 800a58c:	f883 206a 	strb.w	r2, [r3, #106]	@ 0x6a
          vSyncForFrame(1),
 800a590:	68fb      	ldr	r3, [r7, #12]
 800a592:	2201      	movs	r2, #1
 800a594:	f883 206b 	strb.w	r2, [r3, #107]	@ 0x6b
          vSyncCompensationEnabled(false),
 800a598:	68fb      	ldr	r3, [r7, #12]
 800a59a:	2200      	movs	r2, #0
 800a59c:	f883 206c 	strb.w	r2, [r3, #108]	@ 0x6c
          clientDirty(false),
 800a5a0:	68fb      	ldr	r3, [r7, #12]
 800a5a2:	2200      	movs	r2, #0
 800a5a4:	f883 206d 	strb.w	r2, [r3, #109]	@ 0x6d
          swapRequested(false),
 800a5a8:	68fb      	ldr	r3, [r7, #12]
 800a5aa:	2200      	movs	r2, #0
 800a5ac:	f883 206e 	strb.w	r2, [r3, #110]	@ 0x6e
          lastTouched(false),
 800a5b0:	68fb      	ldr	r3, [r7, #12]
 800a5b2:	2200      	movs	r2, #0
 800a5b4:	f883 206f 	strb.w	r2, [r3, #111]	@ 0x6f
          updateMCULoad(0),
 800a5b8:	68fb      	ldr	r3, [r7, #12]
 800a5ba:	2200      	movs	r2, #0
 800a5bc:	f883 2070 	strb.w	r2, [r3, #112]	@ 0x70
          cc_begin(0),
 800a5c0:	68fb      	ldr	r3, [r7, #12]
 800a5c2:	2200      	movs	r2, #0
 800a5c4:	675a      	str	r2, [r3, #116]	@ 0x74
          requestedOrientation(ORIENTATION_LANDSCAPE),
 800a5c6:	68fb      	ldr	r3, [r7, #12]
 800a5c8:	2200      	movs	r2, #0
 800a5ca:	f883 2078 	strb.w	r2, [r3, #120]	@ 0x78
          displayOrientationChangeRequested(false),
 800a5ce:	68fb      	ldr	r3, [r7, #12]
 800a5d0:	2200      	movs	r2, #0
 800a5d2:	f883 2079 	strb.w	r2, [r3, #121]	@ 0x79
          useDMAAcceleration(true),
 800a5d6:	68fb      	ldr	r3, [r7, #12]
 800a5d8:	2201      	movs	r2, #1
 800a5da:	f883 207a 	strb.w	r2, [r3, #122]	@ 0x7a
          lastRenderMethod(HARDWARE)
 800a5de:	68fb      	ldr	r3, [r7, #12]
 800a5e0:	2201      	movs	r2, #1
 800a5e2:	f883 207b 	strb.w	r2, [r3, #123]	@ 0x7b
        instance = this;
 800a5e6:	4a13      	ldr	r2, [pc, #76]	@ (800a634 <_ZN8touchgfx3HALC1ERNS_13DMA_InterfaceERNS_3LCDERNS_15TouchControllerEtt+0x168>)
 800a5e8:	68fb      	ldr	r3, [r7, #12]
 800a5ea:	6013      	str	r3, [r2, #0]
        FRAME_BUFFER_WIDTH = DISPLAY_WIDTH = width;
 800a5ec:	4a12      	ldr	r2, [pc, #72]	@ (800a638 <_ZN8touchgfx3HALC1ERNS_13DMA_InterfaceERNS_3LCDERNS_15TouchControllerEtt+0x16c>)
 800a5ee:	8b3b      	ldrh	r3, [r7, #24]
 800a5f0:	8013      	strh	r3, [r2, #0]
 800a5f2:	4b11      	ldr	r3, [pc, #68]	@ (800a638 <_ZN8touchgfx3HALC1ERNS_13DMA_InterfaceERNS_3LCDERNS_15TouchControllerEtt+0x16c>)
 800a5f4:	881a      	ldrh	r2, [r3, #0]
 800a5f6:	4b11      	ldr	r3, [pc, #68]	@ (800a63c <_ZN8touchgfx3HALC1ERNS_13DMA_InterfaceERNS_3LCDERNS_15TouchControllerEtt+0x170>)
 800a5f8:	801a      	strh	r2, [r3, #0]
        FRAME_BUFFER_HEIGHT = DISPLAY_HEIGHT = height;
 800a5fa:	4a11      	ldr	r2, [pc, #68]	@ (800a640 <_ZN8touchgfx3HALC1ERNS_13DMA_InterfaceERNS_3LCDERNS_15TouchControllerEtt+0x174>)
 800a5fc:	8bbb      	ldrh	r3, [r7, #28]
 800a5fe:	8013      	strh	r3, [r2, #0]
 800a600:	4b0f      	ldr	r3, [pc, #60]	@ (800a640 <_ZN8touchgfx3HALC1ERNS_13DMA_InterfaceERNS_3LCDERNS_15TouchControllerEtt+0x174>)
 800a602:	881a      	ldrh	r2, [r3, #0]
 800a604:	4b0f      	ldr	r3, [pc, #60]	@ (800a644 <_ZN8touchgfx3HALC1ERNS_13DMA_InterfaceERNS_3LCDERNS_15TouchControllerEtt+0x178>)
 800a606:	801a      	strh	r2, [r3, #0]
        DISPLAY_ROTATION = rotate0;
 800a608:	4b0f      	ldr	r3, [pc, #60]	@ (800a648 <_ZN8touchgfx3HALC1ERNS_13DMA_InterfaceERNS_3LCDERNS_15TouchControllerEtt+0x17c>)
 800a60a:	2200      	movs	r2, #0
 800a60c:	701a      	strb	r2, [r3, #0]
        nativeDisplayOrientation = ((width >= height) ? ORIENTATION_LANDSCAPE : ORIENTATION_PORTRAIT);
 800a60e:	8b3a      	ldrh	r2, [r7, #24]
 800a610:	8bbb      	ldrh	r3, [r7, #28]
 800a612:	429a      	cmp	r2, r3
 800a614:	bf34      	ite	cc
 800a616:	2301      	movcc	r3, #1
 800a618:	2300      	movcs	r3, #0
 800a61a:	b2db      	uxtb	r3, r3
 800a61c:	461a      	mov	r2, r3
 800a61e:	68fb      	ldr	r3, [r7, #12]
 800a620:	f883 2034 	strb.w	r2, [r3, #52]	@ 0x34
    }
 800a624:	68fb      	ldr	r3, [r7, #12]
 800a626:	4618      	mov	r0, r3
 800a628:	3710      	adds	r7, #16
 800a62a:	46bd      	mov	sp, r7
 800a62c:	bd80      	pop	{r7, pc}
 800a62e:	bf00      	nop
 800a630:	0802329c 	.word	0x0802329c
 800a634:	20002c5c 	.word	0x20002c5c
 800a638:	20002c50 	.word	0x20002c50
 800a63c:	20002c56 	.word	0x20002c56
 800a640:	20002c52 	.word	0x20002c52
 800a644:	20002c58 	.word	0x20002c58
 800a648:	20002c54 	.word	0x20002c54

0800a64c <_ZN16FrontendHeapBase15gotoStartScreenER19FrontendApplication>:
    /**
     * Determine (compile time) the Transition type of largest size.
     */
    typedef touchgfx::meta::select_type_maxsize< GeneratedTransitionTypes >::type MaxGeneratedTransitionType;

    virtual void gotoStartScreen(FrontendApplication& app)
 800a64c:	b580      	push	{r7, lr}
 800a64e:	b082      	sub	sp, #8
 800a650:	af00      	add	r7, sp, #0
 800a652:	6078      	str	r0, [r7, #4]
 800a654:	6039      	str	r1, [r7, #0]
    {
        app.gotoMainScreenNoTransition();
 800a656:	683b      	ldr	r3, [r7, #0]
 800a658:	4618      	mov	r0, r3
 800a65a:	f7fd fa45 	bl	8007ae8 <_ZN23FrontendApplicationBase26gotoMainScreenNoTransitionEv>
    }
 800a65e:	bf00      	nop
 800a660:	3708      	adds	r7, #8
 800a662:	46bd      	mov	sp, r7
 800a664:	bd80      	pop	{r7, pc}
	...

0800a668 <_ZN16FrontendHeapBaseC1ERN8touchgfx17AbstractPartitionES2_S2_R19FrontendApplication>:
protected:
    FrontendHeapBase(touchgfx::AbstractPartition& presenters, touchgfx::AbstractPartition& views, touchgfx::AbstractPartition& transitions, FrontendApplication& app)
 800a668:	b580      	push	{r7, lr}
 800a66a:	b086      	sub	sp, #24
 800a66c:	af02      	add	r7, sp, #8
 800a66e:	60f8      	str	r0, [r7, #12]
 800a670:	60b9      	str	r1, [r7, #8]
 800a672:	607a      	str	r2, [r7, #4]
 800a674:	603b      	str	r3, [r7, #0]
        : MVPHeap(presenters, views, transitions, app)
 800a676:	68f8      	ldr	r0, [r7, #12]
 800a678:	69bb      	ldr	r3, [r7, #24]
 800a67a:	9300      	str	r3, [sp, #0]
 800a67c:	683b      	ldr	r3, [r7, #0]
 800a67e:	687a      	ldr	r2, [r7, #4]
 800a680:	68b9      	ldr	r1, [r7, #8]
 800a682:	f7ff fe8d 	bl	800a3a0 <_ZN8touchgfx7MVPHeapC1ERNS_17AbstractPartitionES2_S2_RNS_14MVPApplicationE>
 800a686:	4a04      	ldr	r2, [pc, #16]	@ (800a698 <_ZN16FrontendHeapBaseC1ERN8touchgfx17AbstractPartitionES2_S2_R19FrontendApplication+0x30>)
 800a688:	68fb      	ldr	r3, [r7, #12]
 800a68a:	601a      	str	r2, [r3, #0]
    {

    }
 800a68c:	68fb      	ldr	r3, [r7, #12]
 800a68e:	4618      	mov	r0, r3
 800a690:	3710      	adds	r7, #16
 800a692:	46bd      	mov	sp, r7
 800a694:	bd80      	pop	{r7, pc}
 800a696:	bf00      	nop
 800a698:	08023078 	.word	0x08023078

0800a69c <__tcf_0>:
            > > CombinedTransitionTypes;
    typedef meta::select_type_maxsize< CombinedTransitionTypes >::type MaxTransitionType;

    static FrontendHeap& getInstance()
    {
        static FrontendHeap instance;
 800a69c:	b580      	push	{r7, lr}
 800a69e:	af00      	add	r7, sp, #0
 800a6a0:	4801      	ldr	r0, [pc, #4]	@ (800a6a8 <__tcf_0+0xc>)
 800a6a2:	f000 f969 	bl	800a978 <_ZN12FrontendHeapD1Ev>
 800a6a6:	bd80      	pop	{r7, pc}
 800a6a8:	20000638 	.word	0x20000638

0800a6ac <_ZN12FrontendHeap11getInstanceEv>:
    static FrontendHeap& getInstance()
 800a6ac:	b580      	push	{r7, lr}
 800a6ae:	af00      	add	r7, sp, #0
        static FrontendHeap instance;
 800a6b0:	4b11      	ldr	r3, [pc, #68]	@ (800a6f8 <_ZN12FrontendHeap11getInstanceEv+0x4c>)
 800a6b2:	681b      	ldr	r3, [r3, #0]
 800a6b4:	f3bf 8f5b 	dmb	ish
 800a6b8:	f003 0301 	and.w	r3, r3, #1
 800a6bc:	2b00      	cmp	r3, #0
 800a6be:	bf0c      	ite	eq
 800a6c0:	2301      	moveq	r3, #1
 800a6c2:	2300      	movne	r3, #0
 800a6c4:	b2db      	uxtb	r3, r3
 800a6c6:	2b00      	cmp	r3, #0
 800a6c8:	d013      	beq.n	800a6f2 <_ZN12FrontendHeap11getInstanceEv+0x46>
 800a6ca:	480b      	ldr	r0, [pc, #44]	@ (800a6f8 <_ZN12FrontendHeap11getInstanceEv+0x4c>)
 800a6cc:	f016 f873 	bl	80207b6 <__cxa_guard_acquire>
 800a6d0:	4603      	mov	r3, r0
 800a6d2:	2b00      	cmp	r3, #0
 800a6d4:	bf14      	ite	ne
 800a6d6:	2301      	movne	r3, #1
 800a6d8:	2300      	moveq	r3, #0
 800a6da:	b2db      	uxtb	r3, r3
 800a6dc:	2b00      	cmp	r3, #0
 800a6de:	d008      	beq.n	800a6f2 <_ZN12FrontendHeap11getInstanceEv+0x46>
 800a6e0:	4806      	ldr	r0, [pc, #24]	@ (800a6fc <_ZN12FrontendHeap11getInstanceEv+0x50>)
 800a6e2:	f000 f867 	bl	800a7b4 <_ZN12FrontendHeapC1Ev>
 800a6e6:	4806      	ldr	r0, [pc, #24]	@ (800a700 <_ZN12FrontendHeap11getInstanceEv+0x54>)
 800a6e8:	f016 f8b0 	bl	802084c <atexit>
 800a6ec:	4802      	ldr	r0, [pc, #8]	@ (800a6f8 <_ZN12FrontendHeap11getInstanceEv+0x4c>)
 800a6ee:	f016 f86e 	bl	80207ce <__cxa_guard_release>
        return instance;
 800a6f2:	4b02      	ldr	r3, [pc, #8]	@ (800a6fc <_ZN12FrontendHeap11getInstanceEv+0x50>)
    }
 800a6f4:	4618      	mov	r0, r3
 800a6f6:	bd80      	pop	{r7, pc}
 800a6f8:	20000910 	.word	0x20000910
 800a6fc:	20000638 	.word	0x20000638
 800a700:	0800a69d 	.word	0x0800a69d

0800a704 <_ZN16FrontendHeapBaseD1Ev>:
class FrontendHeapBase : public touchgfx::MVPHeap
 800a704:	b580      	push	{r7, lr}
 800a706:	b082      	sub	sp, #8
 800a708:	af00      	add	r7, sp, #0
 800a70a:	6078      	str	r0, [r7, #4]
 800a70c:	4a05      	ldr	r2, [pc, #20]	@ (800a724 <_ZN16FrontendHeapBaseD1Ev+0x20>)
 800a70e:	687b      	ldr	r3, [r7, #4]
 800a710:	601a      	str	r2, [r3, #0]
 800a712:	687b      	ldr	r3, [r7, #4]
 800a714:	4618      	mov	r0, r3
 800a716:	f7ff fe63 	bl	800a3e0 <_ZN8touchgfx7MVPHeapD1Ev>
 800a71a:	687b      	ldr	r3, [r7, #4]
 800a71c:	4618      	mov	r0, r3
 800a71e:	3708      	adds	r7, #8
 800a720:	46bd      	mov	sp, r7
 800a722:	bd80      	pop	{r7, pc}
 800a724:	08023078 	.word	0x08023078

0800a728 <_ZN16FrontendHeapBaseD0Ev>:
 800a728:	b580      	push	{r7, lr}
 800a72a:	b082      	sub	sp, #8
 800a72c:	af00      	add	r7, sp, #0
 800a72e:	6078      	str	r0, [r7, #4]
 800a730:	6878      	ldr	r0, [r7, #4]
 800a732:	f7ff ffe7 	bl	800a704 <_ZN16FrontendHeapBaseD1Ev>
 800a736:	2114      	movs	r1, #20
 800a738:	6878      	ldr	r0, [r7, #4]
 800a73a:	f016 f83a 	bl	80207b2 <_ZdlPvj>
 800a73e:	687b      	ldr	r3, [r7, #4]
 800a740:	4618      	mov	r0, r3
 800a742:	3708      	adds	r7, #8
 800a744:	46bd      	mov	sp, r7
 800a746:	bd80      	pop	{r7, pc}

0800a748 <_ZN8touchgfx9PartitionINS_4meta8TypeListI13MainPresenterNS2_INS1_3NilES4_EEEELt1EEC1Ev>:
 * @tparam NUMBER_OF_ELEMENTS Type of the number of elements.
 *
 * @see AbstractPartition
 */
template <typename ListOfTypes, uint16_t NUMBER_OF_ELEMENTS>
class Partition : public AbstractPartition
 800a748:	b580      	push	{r7, lr}
 800a74a:	b082      	sub	sp, #8
 800a74c:	af00      	add	r7, sp, #0
 800a74e:	6078      	str	r0, [r7, #4]
 800a750:	687b      	ldr	r3, [r7, #4]
 800a752:	4618      	mov	r0, r3
 800a754:	f001 f942 	bl	800b9dc <_ZN8touchgfx17AbstractPartitionC1Ev>
 800a758:	4a03      	ldr	r2, [pc, #12]	@ (800a768 <_ZN8touchgfx9PartitionINS_4meta8TypeListI13MainPresenterNS2_INS1_3NilES4_EEEELt1EEC1Ev+0x20>)
 800a75a:	687b      	ldr	r3, [r7, #4]
 800a75c:	601a      	str	r2, [r3, #0]
 800a75e:	687b      	ldr	r3, [r7, #4]
 800a760:	4618      	mov	r0, r3
 800a762:	3708      	adds	r7, #8
 800a764:	46bd      	mov	sp, r7
 800a766:	bd80      	pop	{r7, pc}
 800a768:	08023044 	.word	0x08023044

0800a76c <_ZN8touchgfx9PartitionINS_4meta8TypeListI8MainViewNS2_INS1_3NilES4_EEEELt1EEC1Ev>:
 800a76c:	b580      	push	{r7, lr}
 800a76e:	b082      	sub	sp, #8
 800a770:	af00      	add	r7, sp, #0
 800a772:	6078      	str	r0, [r7, #4]
 800a774:	687b      	ldr	r3, [r7, #4]
 800a776:	4618      	mov	r0, r3
 800a778:	f001 f930 	bl	800b9dc <_ZN8touchgfx17AbstractPartitionC1Ev>
 800a77c:	4a03      	ldr	r2, [pc, #12]	@ (800a78c <_ZN8touchgfx9PartitionINS_4meta8TypeListI8MainViewNS2_INS1_3NilES4_EEEELt1EEC1Ev+0x20>)
 800a77e:	687b      	ldr	r3, [r7, #4]
 800a780:	601a      	str	r2, [r3, #0]
 800a782:	687b      	ldr	r3, [r7, #4]
 800a784:	4618      	mov	r0, r3
 800a786:	3708      	adds	r7, #8
 800a788:	46bd      	mov	sp, r7
 800a78a:	bd80      	pop	{r7, pc}
 800a78c:	08023010 	.word	0x08023010

0800a790 <_ZN8touchgfx9PartitionINS_4meta8TypeListINS_12NoTransitionENS2_INS1_3NilES4_EEEELt1EEC1Ev>:
 800a790:	b580      	push	{r7, lr}
 800a792:	b082      	sub	sp, #8
 800a794:	af00      	add	r7, sp, #0
 800a796:	6078      	str	r0, [r7, #4]
 800a798:	687b      	ldr	r3, [r7, #4]
 800a79a:	4618      	mov	r0, r3
 800a79c:	f001 f91e 	bl	800b9dc <_ZN8touchgfx17AbstractPartitionC1Ev>
 800a7a0:	4a03      	ldr	r2, [pc, #12]	@ (800a7b0 <_ZN8touchgfx9PartitionINS_4meta8TypeListINS_12NoTransitionENS2_INS1_3NilES4_EEEELt1EEC1Ev+0x20>)
 800a7a2:	687b      	ldr	r3, [r7, #4]
 800a7a4:	601a      	str	r2, [r3, #0]
 800a7a6:	687b      	ldr	r3, [r7, #4]
 800a7a8:	4618      	mov	r0, r3
 800a7aa:	3708      	adds	r7, #8
 800a7ac:	46bd      	mov	sp, r7
 800a7ae:	bd80      	pop	{r7, pc}
 800a7b0:	08022fdc 	.word	0x08022fdc

0800a7b4 <_ZN12FrontendHeapC1Ev>:
    Partition< CombinedTransitionTypes, 1 > transitions;
    FrontendApplication app;
    Model model;

private:
    FrontendHeap() : FrontendHeapBase(presenters, views, transitions, app),
 800a7b4:	b590      	push	{r4, r7, lr}
 800a7b6:	b085      	sub	sp, #20
 800a7b8:	af02      	add	r7, sp, #8
 800a7ba:	6078      	str	r0, [r7, #4]
        app(model, *this)
 800a7bc:	6878      	ldr	r0, [r7, #4]
 800a7be:	687b      	ldr	r3, [r7, #4]
 800a7c0:	f103 0114 	add.w	r1, r3, #20
 800a7c4:	687b      	ldr	r3, [r7, #4]
 800a7c6:	f103 022c 	add.w	r2, r3, #44	@ 0x2c
 800a7ca:	687b      	ldr	r3, [r7, #4]
 800a7cc:	f503 74b0 	add.w	r4, r3, #352	@ 0x160
    FrontendHeap() : FrontendHeapBase(presenters, views, transitions, app),
 800a7d0:	687b      	ldr	r3, [r7, #4]
 800a7d2:	f503 73ba 	add.w	r3, r3, #372	@ 0x174
        app(model, *this)
 800a7d6:	9300      	str	r3, [sp, #0]
 800a7d8:	4623      	mov	r3, r4
 800a7da:	f7ff ff45 	bl	800a668 <_ZN16FrontendHeapBaseC1ERN8touchgfx17AbstractPartitionES2_S2_R19FrontendApplication>
 800a7de:	4a18      	ldr	r2, [pc, #96]	@ (800a840 <_ZN12FrontendHeapC1Ev+0x8c>)
 800a7e0:	687b      	ldr	r3, [r7, #4]
 800a7e2:	601a      	str	r2, [r3, #0]
 800a7e4:	687b      	ldr	r3, [r7, #4]
 800a7e6:	3314      	adds	r3, #20
 800a7e8:	4618      	mov	r0, r3
 800a7ea:	f7ff ffad 	bl	800a748 <_ZN8touchgfx9PartitionINS_4meta8TypeListI13MainPresenterNS2_INS1_3NilES4_EEEELt1EEC1Ev>
 800a7ee:	687b      	ldr	r3, [r7, #4]
 800a7f0:	332c      	adds	r3, #44	@ 0x2c
 800a7f2:	4618      	mov	r0, r3
 800a7f4:	f7ff ffba 	bl	800a76c <_ZN8touchgfx9PartitionINS_4meta8TypeListI8MainViewNS2_INS1_3NilES4_EEEELt1EEC1Ev>
 800a7f8:	687b      	ldr	r3, [r7, #4]
 800a7fa:	f503 73b0 	add.w	r3, r3, #352	@ 0x160
 800a7fe:	4618      	mov	r0, r3
 800a800:	f7ff ffc6 	bl	800a790 <_ZN8touchgfx9PartitionINS_4meta8TypeListINS_12NoTransitionENS2_INS1_3NilES4_EEEELt1EEC1Ev>
 800a804:	687b      	ldr	r3, [r7, #4]
 800a806:	f503 70ba 	add.w	r0, r3, #372	@ 0x174
 800a80a:	687b      	ldr	r3, [r7, #4]
 800a80c:	f503 7334 	add.w	r3, r3, #720	@ 0x2d0
 800a810:	687a      	ldr	r2, [r7, #4]
 800a812:	4619      	mov	r1, r3
 800a814:	f7fe fed4 	bl	80095c0 <_ZN19FrontendApplicationC1ER5ModelR12FrontendHeap>
 800a818:	687b      	ldr	r3, [r7, #4]
 800a81a:	f503 7334 	add.w	r3, r3, #720	@ 0x2d0
 800a81e:	4618      	mov	r0, r3
 800a820:	f7ff f8a0 	bl	8009964 <_ZN5ModelC1Ev>
    {
        gotoStartScreen(app);
 800a824:	687a      	ldr	r2, [r7, #4]
 800a826:	687b      	ldr	r3, [r7, #4]
 800a828:	f503 73ba 	add.w	r3, r3, #372	@ 0x174
 800a82c:	4619      	mov	r1, r3
 800a82e:	4610      	mov	r0, r2
 800a830:	f7ff ff0c 	bl	800a64c <_ZN16FrontendHeapBase15gotoStartScreenER19FrontendApplication>
    }
 800a834:	687b      	ldr	r3, [r7, #4]
 800a836:	4618      	mov	r0, r3
 800a838:	370c      	adds	r7, #12
 800a83a:	46bd      	mov	sp, r7
 800a83c:	bd90      	pop	{r4, r7, pc}
 800a83e:	bf00      	nop
 800a840:	08022fc8 	.word	0x08022fc8

0800a844 <_ZN20TouchGFXGeneratedHALC1ERN8touchgfx13DMA_InterfaceERNS0_3LCDERNS0_15TouchControllerEtt>:
     * @param [in,out] display Reference to LCD interface.
     * @param [in,out] tc      Reference to Touch Controller driver.
     * @param width            Width of the display.
     * @param height           Height of the display.
     */
    TouchGFXGeneratedHAL(touchgfx::DMA_Interface& dma, touchgfx::LCD& display, touchgfx::TouchController& tc, uint16_t width, uint16_t height) :
 800a844:	b580      	push	{r7, lr}
 800a846:	b086      	sub	sp, #24
 800a848:	af02      	add	r7, sp, #8
 800a84a:	60f8      	str	r0, [r7, #12]
 800a84c:	60b9      	str	r1, [r7, #8]
 800a84e:	607a      	str	r2, [r7, #4]
 800a850:	603b      	str	r3, [r7, #0]
        touchgfx::HAL(dma, display, tc, width, height)
 800a852:	68f8      	ldr	r0, [r7, #12]
 800a854:	8bbb      	ldrh	r3, [r7, #28]
 800a856:	9301      	str	r3, [sp, #4]
 800a858:	8b3b      	ldrh	r3, [r7, #24]
 800a85a:	9300      	str	r3, [sp, #0]
 800a85c:	683b      	ldr	r3, [r7, #0]
 800a85e:	687a      	ldr	r2, [r7, #4]
 800a860:	68b9      	ldr	r1, [r7, #8]
 800a862:	f7ff fe33 	bl	800a4cc <_ZN8touchgfx3HALC1ERNS_13DMA_InterfaceERNS_3LCDERNS_15TouchControllerEtt>
 800a866:	4a04      	ldr	r2, [pc, #16]	@ (800a878 <_ZN20TouchGFXGeneratedHALC1ERN8touchgfx13DMA_InterfaceERNS0_3LCDERNS0_15TouchControllerEtt+0x34>)
 800a868:	68fb      	ldr	r3, [r7, #12]
 800a86a:	601a      	str	r2, [r3, #0]
    {
    }
 800a86c:	68fb      	ldr	r3, [r7, #12]
 800a86e:	4618      	mov	r0, r3
 800a870:	3710      	adds	r7, #16
 800a872:	46bd      	mov	sp, r7
 800a874:	bd80      	pop	{r7, pc}
 800a876:	bf00      	nop
 800a878:	080230c8 	.word	0x080230c8

0800a87c <_ZN11TouchGFXHALC1ERN8touchgfx13DMA_InterfaceERNS0_3LCDERNS0_15TouchControllerEtt>:
     * @param [in,out] display Reference to LCD interface.
     * @param [in,out] tc      Reference to Touch Controller driver.
     * @param width            Width of the display.
     * @param height           Height of the display.
     */
    TouchGFXHAL(touchgfx::DMA_Interface& dma, touchgfx::LCD& display, touchgfx::TouchController& tc, uint16_t width, uint16_t height) : TouchGFXGeneratedHAL(dma, display, tc, width, height)
 800a87c:	b580      	push	{r7, lr}
 800a87e:	b086      	sub	sp, #24
 800a880:	af02      	add	r7, sp, #8
 800a882:	60f8      	str	r0, [r7, #12]
 800a884:	60b9      	str	r1, [r7, #8]
 800a886:	607a      	str	r2, [r7, #4]
 800a888:	603b      	str	r3, [r7, #0]
 800a88a:	68f8      	ldr	r0, [r7, #12]
 800a88c:	8bbb      	ldrh	r3, [r7, #28]
 800a88e:	9301      	str	r3, [sp, #4]
 800a890:	8b3b      	ldrh	r3, [r7, #24]
 800a892:	9300      	str	r3, [sp, #0]
 800a894:	683b      	ldr	r3, [r7, #0]
 800a896:	687a      	ldr	r2, [r7, #4]
 800a898:	68b9      	ldr	r1, [r7, #8]
 800a89a:	f7ff ffd3 	bl	800a844 <_ZN20TouchGFXGeneratedHALC1ERN8touchgfx13DMA_InterfaceERNS0_3LCDERNS0_15TouchControllerEtt>
 800a89e:	4a04      	ldr	r2, [pc, #16]	@ (800a8b0 <_ZN11TouchGFXHALC1ERN8touchgfx13DMA_InterfaceERNS0_3LCDERNS0_15TouchControllerEtt+0x34>)
 800a8a0:	68fb      	ldr	r3, [r7, #12]
 800a8a2:	601a      	str	r2, [r3, #0]
    {
    }
 800a8a4:	68fb      	ldr	r3, [r7, #12]
 800a8a6:	4618      	mov	r0, r3
 800a8a8:	3710      	adds	r7, #16
 800a8aa:	46bd      	mov	sp, r7
 800a8ac:	bd80      	pop	{r7, pc}
 800a8ae:	bf00      	nop
 800a8b0:	08022e7c 	.word	0x08022e7c

0800a8b4 <_ZN8touchgfx15TouchControllerC1Ev>:
class TouchController
 800a8b4:	b480      	push	{r7}
 800a8b6:	b083      	sub	sp, #12
 800a8b8:	af00      	add	r7, sp, #0
 800a8ba:	6078      	str	r0, [r7, #4]
 800a8bc:	4a04      	ldr	r2, [pc, #16]	@ (800a8d0 <_ZN8touchgfx15TouchControllerC1Ev+0x1c>)
 800a8be:	687b      	ldr	r3, [r7, #4]
 800a8c0:	601a      	str	r2, [r3, #0]
 800a8c2:	687b      	ldr	r3, [r7, #4]
 800a8c4:	4618      	mov	r0, r3
 800a8c6:	370c      	adds	r7, #12
 800a8c8:	46bd      	mov	sp, r7
 800a8ca:	f85d 7b04 	ldr.w	r7, [sp], #4
 800a8ce:	4770      	bx	lr
 800a8d0:	08022e64 	.word	0x08022e64

0800a8d4 <_ZN20STM32TouchControllerC1Ev>:
{
public:

    STM32TouchController() {}
 800a8d4:	b580      	push	{r7, lr}
 800a8d6:	b082      	sub	sp, #8
 800a8d8:	af00      	add	r7, sp, #0
 800a8da:	6078      	str	r0, [r7, #4]
 800a8dc:	687b      	ldr	r3, [r7, #4]
 800a8de:	4618      	mov	r0, r3
 800a8e0:	f7ff ffe8 	bl	800a8b4 <_ZN8touchgfx15TouchControllerC1Ev>
 800a8e4:	4a03      	ldr	r2, [pc, #12]	@ (800a8f4 <_ZN20STM32TouchControllerC1Ev+0x20>)
 800a8e6:	687b      	ldr	r3, [r7, #4]
 800a8e8:	601a      	str	r2, [r3, #0]
 800a8ea:	687b      	ldr	r3, [r7, #4]
 800a8ec:	4618      	mov	r0, r3
 800a8ee:	3708      	adds	r7, #8
 800a8f0:	46bd      	mov	sp, r7
 800a8f2:	bd80      	pop	{r7, pc}
 800a8f4:	08022e4c 	.word	0x08022e4c

0800a8f8 <touchgfx_init>:
static ApplicationFontProvider fontProvider;
static Texts texts;
static TouchGFXHAL hal(dma, display, tc, 320, 480);

void touchgfx_init()
{
 800a8f8:	b590      	push	{r4, r7, lr}
 800a8fa:	b085      	sub	sp, #20
 800a8fc:	af02      	add	r7, sp, #8
    Bitmap::registerBitmapDatabase(BitmapDatabase::getInstance(), BitmapDatabase::getInstanceSize());
 800a8fe:	f7fe fc33 	bl	8009168 <_ZN14BitmapDatabase11getInstanceEv>
 800a902:	4604      	mov	r4, r0
 800a904:	f7fe fc3a 	bl	800917c <_ZN14BitmapDatabase15getInstanceSizeEv>
 800a908:	4603      	mov	r3, r0
 800a90a:	4619      	mov	r1, r3
 800a90c:	2300      	movs	r3, #0
 800a90e:	9300      	str	r3, [sp, #0]
 800a910:	2300      	movs	r3, #0
 800a912:	2200      	movs	r2, #0
 800a914:	4620      	mov	r0, r4
 800a916:	f007 fc65 	bl	80121e4 <_ZN8touchgfx6Bitmap22registerBitmapDatabaseEPKNS0_10BitmapDataEtPtmm>
    TypedText::registerTexts(&texts);
 800a91a:	4809      	ldr	r0, [pc, #36]	@ (800a940 <touchgfx_init+0x48>)
 800a91c:	f7ff fd30 	bl	800a380 <_ZN8touchgfx9TypedText13registerTextsEPKNS_5TextsE>
    Texts::setLanguage(0);
 800a920:	2000      	movs	r0, #0
 800a922:	f7fe fd6f 	bl	8009404 <_ZN8touchgfx5Texts11setLanguageEt>

    FontManager::setFontProvider(&fontProvider);
 800a926:	4807      	ldr	r0, [pc, #28]	@ (800a944 <touchgfx_init+0x4c>)
 800a928:	f007 fbc4 	bl	80120b4 <_ZN8touchgfx11FontManager15setFontProviderEPNS_12FontProviderE>

    FrontendHeap& heap = FrontendHeap::getInstance();
 800a92c:	f7ff febe 	bl	800a6ac <_ZN12FrontendHeap11getInstanceEv>
 800a930:	6078      	str	r0, [r7, #4]
    (void)heap;

    /*
     * Initialize TouchGFX
     */
    hal.initialize();
 800a932:	4805      	ldr	r0, [pc, #20]	@ (800a948 <touchgfx_init+0x50>)
 800a934:	f7ff faa6 	bl	8009e84 <_ZN11TouchGFXHAL10initializeEv>
}
 800a938:	bf00      	nop
 800a93a:	370c      	adds	r7, #12
 800a93c:	46bd      	mov	sp, r7
 800a93e:	bd90      	pop	{r4, r7, pc}
 800a940:	200009e8 	.word	0x200009e8
 800a944:	20000020 	.word	0x20000020
 800a948:	200009ec 	.word	0x200009ec

0800a94c <touchgfx_components_init>:

void touchgfx_components_init()
{
 800a94c:	b480      	push	{r7}
 800a94e:	af00      	add	r7, sp, #0
}
 800a950:	bf00      	nop
 800a952:	46bd      	mov	sp, r7
 800a954:	f85d 7b04 	ldr.w	r7, [sp], #4
 800a958:	4770      	bx	lr
	...

0800a95c <touchgfx_taskEntry>:

void touchgfx_taskEntry()
{
 800a95c:	b580      	push	{r7, lr}
 800a95e:	af00      	add	r7, sp, #0
    /*
     * Main event loop will check for VSYNC signal, and then process next frame.
     *
     * Note This function returns immediately if there is no VSYNC signal.
     */
    if (OSWrappers::isVSyncAvailable())
 800a960:	f7ff fba6 	bl	800a0b0 <_ZN8touchgfx10OSWrappers16isVSyncAvailableEv>
 800a964:	4603      	mov	r3, r0
 800a966:	2b00      	cmp	r3, #0
 800a968:	d002      	beq.n	800a970 <touchgfx_taskEntry+0x14>
    {
        hal.backPorchExited();
 800a96a:	4802      	ldr	r0, [pc, #8]	@ (800a974 <touchgfx_taskEntry+0x18>)
 800a96c:	f7ff f95c 	bl	8009c28 <_ZN8touchgfx3HAL15backPorchExitedEv>
    }
}
 800a970:	bf00      	nop
 800a972:	bd80      	pop	{r7, pc}
 800a974:	200009ec 	.word	0x200009ec

0800a978 <_ZN12FrontendHeapD1Ev>:
class FrontendHeap : public FrontendHeapBase
 800a978:	b580      	push	{r7, lr}
 800a97a:	b082      	sub	sp, #8
 800a97c:	af00      	add	r7, sp, #0
 800a97e:	6078      	str	r0, [r7, #4]
 800a980:	4a10      	ldr	r2, [pc, #64]	@ (800a9c4 <_ZN12FrontendHeapD1Ev+0x4c>)
 800a982:	687b      	ldr	r3, [r7, #4]
 800a984:	601a      	str	r2, [r3, #0]
 800a986:	687b      	ldr	r3, [r7, #4]
 800a988:	f503 73ba 	add.w	r3, r3, #372	@ 0x174
 800a98c:	4618      	mov	r0, r3
 800a98e:	f7fe fde1 	bl	8009554 <_ZN19FrontendApplicationD1Ev>
 800a992:	687b      	ldr	r3, [r7, #4]
 800a994:	f503 73b0 	add.w	r3, r3, #352	@ 0x160
 800a998:	4618      	mov	r0, r3
 800a99a:	f000 f827 	bl	800a9ec <_ZN8touchgfx9PartitionINS_4meta8TypeListINS_12NoTransitionENS2_INS1_3NilES4_EEEELt1EED1Ev>
 800a99e:	687b      	ldr	r3, [r7, #4]
 800a9a0:	332c      	adds	r3, #44	@ 0x2c
 800a9a2:	4618      	mov	r0, r3
 800a9a4:	f000 f844 	bl	800aa30 <_ZN8touchgfx9PartitionINS_4meta8TypeListI8MainViewNS2_INS1_3NilES4_EEEELt1EED1Ev>
 800a9a8:	687b      	ldr	r3, [r7, #4]
 800a9aa:	3314      	adds	r3, #20
 800a9ac:	4618      	mov	r0, r3
 800a9ae:	f000 f863 	bl	800aa78 <_ZN8touchgfx9PartitionINS_4meta8TypeListI13MainPresenterNS2_INS1_3NilES4_EEEELt1EED1Ev>
 800a9b2:	687b      	ldr	r3, [r7, #4]
 800a9b4:	4618      	mov	r0, r3
 800a9b6:	f7ff fea5 	bl	800a704 <_ZN16FrontendHeapBaseD1Ev>
 800a9ba:	687b      	ldr	r3, [r7, #4]
 800a9bc:	4618      	mov	r0, r3
 800a9be:	3708      	adds	r7, #8
 800a9c0:	46bd      	mov	sp, r7
 800a9c2:	bd80      	pop	{r7, pc}
 800a9c4:	08022fc8 	.word	0x08022fc8

0800a9c8 <_ZN12FrontendHeapD0Ev>:
 800a9c8:	b580      	push	{r7, lr}
 800a9ca:	b082      	sub	sp, #8
 800a9cc:	af00      	add	r7, sp, #0
 800a9ce:	6078      	str	r0, [r7, #4]
 800a9d0:	6878      	ldr	r0, [r7, #4]
 800a9d2:	f7ff ffd1 	bl	800a978 <_ZN12FrontendHeapD1Ev>
 800a9d6:	f44f 7136 	mov.w	r1, #728	@ 0x2d8
 800a9da:	6878      	ldr	r0, [r7, #4]
 800a9dc:	f015 fee9 	bl	80207b2 <_ZdlPvj>
 800a9e0:	687b      	ldr	r3, [r7, #4]
 800a9e2:	4618      	mov	r0, r3
 800a9e4:	3708      	adds	r7, #8
 800a9e6:	46bd      	mov	sp, r7
 800a9e8:	bd80      	pop	{r7, pc}
	...

0800a9ec <_ZN8touchgfx9PartitionINS_4meta8TypeListINS_12NoTransitionENS2_INS1_3NilES4_EEEELt1EED1Ev>:
 800a9ec:	b580      	push	{r7, lr}
 800a9ee:	b082      	sub	sp, #8
 800a9f0:	af00      	add	r7, sp, #0
 800a9f2:	6078      	str	r0, [r7, #4]
 800a9f4:	4a05      	ldr	r2, [pc, #20]	@ (800aa0c <_ZN8touchgfx9PartitionINS_4meta8TypeListINS_12NoTransitionENS2_INS1_3NilES4_EEEELt1EED1Ev+0x20>)
 800a9f6:	687b      	ldr	r3, [r7, #4]
 800a9f8:	601a      	str	r2, [r3, #0]
 800a9fa:	687b      	ldr	r3, [r7, #4]
 800a9fc:	4618      	mov	r0, r3
 800a9fe:	f000 ffec 	bl	800b9da <_ZN8touchgfx17AbstractPartitionD1Ev>
 800aa02:	687b      	ldr	r3, [r7, #4]
 800aa04:	4618      	mov	r0, r3
 800aa06:	3708      	adds	r7, #8
 800aa08:	46bd      	mov	sp, r7
 800aa0a:	bd80      	pop	{r7, pc}
 800aa0c:	08022fdc 	.word	0x08022fdc

0800aa10 <_ZN8touchgfx9PartitionINS_4meta8TypeListINS_12NoTransitionENS2_INS1_3NilES4_EEEELt1EED0Ev>:
 800aa10:	b580      	push	{r7, lr}
 800aa12:	b082      	sub	sp, #8
 800aa14:	af00      	add	r7, sp, #0
 800aa16:	6078      	str	r0, [r7, #4]
 800aa18:	6878      	ldr	r0, [r7, #4]
 800aa1a:	f7ff ffe7 	bl	800a9ec <_ZN8touchgfx9PartitionINS_4meta8TypeListINS_12NoTransitionENS2_INS1_3NilES4_EEEELt1EED1Ev>
 800aa1e:	2114      	movs	r1, #20
 800aa20:	6878      	ldr	r0, [r7, #4]
 800aa22:	f015 fec6 	bl	80207b2 <_ZdlPvj>
 800aa26:	687b      	ldr	r3, [r7, #4]
 800aa28:	4618      	mov	r0, r3
 800aa2a:	3708      	adds	r7, #8
 800aa2c:	46bd      	mov	sp, r7
 800aa2e:	bd80      	pop	{r7, pc}

0800aa30 <_ZN8touchgfx9PartitionINS_4meta8TypeListI8MainViewNS2_INS1_3NilES4_EEEELt1EED1Ev>:
 800aa30:	b580      	push	{r7, lr}
 800aa32:	b082      	sub	sp, #8
 800aa34:	af00      	add	r7, sp, #0
 800aa36:	6078      	str	r0, [r7, #4]
 800aa38:	4a05      	ldr	r2, [pc, #20]	@ (800aa50 <_ZN8touchgfx9PartitionINS_4meta8TypeListI8MainViewNS2_INS1_3NilES4_EEEELt1EED1Ev+0x20>)
 800aa3a:	687b      	ldr	r3, [r7, #4]
 800aa3c:	601a      	str	r2, [r3, #0]
 800aa3e:	687b      	ldr	r3, [r7, #4]
 800aa40:	4618      	mov	r0, r3
 800aa42:	f000 ffca 	bl	800b9da <_ZN8touchgfx17AbstractPartitionD1Ev>
 800aa46:	687b      	ldr	r3, [r7, #4]
 800aa48:	4618      	mov	r0, r3
 800aa4a:	3708      	adds	r7, #8
 800aa4c:	46bd      	mov	sp, r7
 800aa4e:	bd80      	pop	{r7, pc}
 800aa50:	08023010 	.word	0x08023010

0800aa54 <_ZN8touchgfx9PartitionINS_4meta8TypeListI8MainViewNS2_INS1_3NilES4_EEEELt1EED0Ev>:
 800aa54:	b580      	push	{r7, lr}
 800aa56:	b082      	sub	sp, #8
 800aa58:	af00      	add	r7, sp, #0
 800aa5a:	6078      	str	r0, [r7, #4]
 800aa5c:	6878      	ldr	r0, [r7, #4]
 800aa5e:	f7ff ffe7 	bl	800aa30 <_ZN8touchgfx9PartitionINS_4meta8TypeListI8MainViewNS2_INS1_3NilES4_EEEELt1EED1Ev>
 800aa62:	f44f 719a 	mov.w	r1, #308	@ 0x134
 800aa66:	6878      	ldr	r0, [r7, #4]
 800aa68:	f015 fea3 	bl	80207b2 <_ZdlPvj>
 800aa6c:	687b      	ldr	r3, [r7, #4]
 800aa6e:	4618      	mov	r0, r3
 800aa70:	3708      	adds	r7, #8
 800aa72:	46bd      	mov	sp, r7
 800aa74:	bd80      	pop	{r7, pc}
	...

0800aa78 <_ZN8touchgfx9PartitionINS_4meta8TypeListI13MainPresenterNS2_INS1_3NilES4_EEEELt1EED1Ev>:
 800aa78:	b580      	push	{r7, lr}
 800aa7a:	b082      	sub	sp, #8
 800aa7c:	af00      	add	r7, sp, #0
 800aa7e:	6078      	str	r0, [r7, #4]
 800aa80:	4a05      	ldr	r2, [pc, #20]	@ (800aa98 <_ZN8touchgfx9PartitionINS_4meta8TypeListI13MainPresenterNS2_INS1_3NilES4_EEEELt1EED1Ev+0x20>)
 800aa82:	687b      	ldr	r3, [r7, #4]
 800aa84:	601a      	str	r2, [r3, #0]
 800aa86:	687b      	ldr	r3, [r7, #4]
 800aa88:	4618      	mov	r0, r3
 800aa8a:	f000 ffa6 	bl	800b9da <_ZN8touchgfx17AbstractPartitionD1Ev>
 800aa8e:	687b      	ldr	r3, [r7, #4]
 800aa90:	4618      	mov	r0, r3
 800aa92:	3708      	adds	r7, #8
 800aa94:	46bd      	mov	sp, r7
 800aa96:	bd80      	pop	{r7, pc}
 800aa98:	08023044 	.word	0x08023044

0800aa9c <_ZN8touchgfx9PartitionINS_4meta8TypeListI13MainPresenterNS2_INS1_3NilES4_EEEELt1EED0Ev>:
 800aa9c:	b580      	push	{r7, lr}
 800aa9e:	b082      	sub	sp, #8
 800aaa0:	af00      	add	r7, sp, #0
 800aaa2:	6078      	str	r0, [r7, #4]
 800aaa4:	6878      	ldr	r0, [r7, #4]
 800aaa6:	f7ff ffe7 	bl	800aa78 <_ZN8touchgfx9PartitionINS_4meta8TypeListI13MainPresenterNS2_INS1_3NilES4_EEEELt1EED1Ev>
 800aaaa:	2118      	movs	r1, #24
 800aaac:	6878      	ldr	r0, [r7, #4]
 800aaae:	f015 fe80 	bl	80207b2 <_ZdlPvj>
 800aab2:	687b      	ldr	r3, [r7, #4]
 800aab4:	4618      	mov	r0, r3
 800aab6:	3708      	adds	r7, #8
 800aab8:	46bd      	mov	sp, r7
 800aaba:	bd80      	pop	{r7, pc}

0800aabc <_ZN8touchgfx8LCD16bppD1Ev>:
 *
 * @see LCD
 *
 * @note All coordinates are expected to be in absolute coordinates!
 */
class LCD16bpp : public LCD
 800aabc:	b580      	push	{r7, lr}
 800aabe:	b082      	sub	sp, #8
 800aac0:	af00      	add	r7, sp, #0
 800aac2:	6078      	str	r0, [r7, #4]
 800aac4:	4a05      	ldr	r2, [pc, #20]	@ (800aadc <_ZN8touchgfx8LCD16bppD1Ev+0x20>)
 800aac6:	687b      	ldr	r3, [r7, #4]
 800aac8:	601a      	str	r2, [r3, #0]
 800aaca:	687b      	ldr	r3, [r7, #4]
 800aacc:	4618      	mov	r0, r3
 800aace:	f7ff fca7 	bl	800a420 <_ZN8touchgfx3LCDD1Ev>
 800aad2:	687b      	ldr	r3, [r7, #4]
 800aad4:	4618      	mov	r0, r3
 800aad6:	3708      	adds	r7, #8
 800aad8:	46bd      	mov	sp, r7
 800aada:	bd80      	pop	{r7, pc}
 800aadc:	08023b50 	.word	0x08023b50

0800aae0 <_ZN8touchgfx8LCD16bppD0Ev>:
 800aae0:	b580      	push	{r7, lr}
 800aae2:	b082      	sub	sp, #8
 800aae4:	af00      	add	r7, sp, #0
 800aae6:	6078      	str	r0, [r7, #4]
 800aae8:	6878      	ldr	r0, [r7, #4]
 800aaea:	f7ff ffe7 	bl	800aabc <_ZN8touchgfx8LCD16bppD1Ev>
 800aaee:	218c      	movs	r1, #140	@ 0x8c
 800aaf0:	6878      	ldr	r0, [r7, #4]
 800aaf2:	f015 fe5e 	bl	80207b2 <_ZdlPvj>
 800aaf6:	687b      	ldr	r3, [r7, #4]
 800aaf8:	4618      	mov	r0, r3
 800aafa:	3708      	adds	r7, #8
 800aafc:	46bd      	mov	sp, r7
 800aafe:	bd80      	pop	{r7, pc}

0800ab00 <_Z41__static_initialization_and_destruction_0ii>:
 800ab00:	b580      	push	{r7, lr}
 800ab02:	b084      	sub	sp, #16
 800ab04:	af02      	add	r7, sp, #8
 800ab06:	6078      	str	r0, [r7, #4]
 800ab08:	6039      	str	r1, [r7, #0]
 800ab0a:	687b      	ldr	r3, [r7, #4]
 800ab0c:	2b01      	cmp	r3, #1
 800ab0e:	d119      	bne.n	800ab44 <_Z41__static_initialization_and_destruction_0ii+0x44>
 800ab10:	683b      	ldr	r3, [r7, #0]
 800ab12:	f64f 72ff 	movw	r2, #65535	@ 0xffff
 800ab16:	4293      	cmp	r3, r2
 800ab18:	d114      	bne.n	800ab44 <_Z41__static_initialization_and_destruction_0ii+0x44>
static STM32TouchController tc;
 800ab1a:	4818      	ldr	r0, [pc, #96]	@ (800ab7c <_Z41__static_initialization_and_destruction_0ii+0x7c>)
 800ab1c:	f7ff feda 	bl	800a8d4 <_ZN20STM32TouchControllerC1Ev>
static STM32DMA dma;
 800ab20:	4817      	ldr	r0, [pc, #92]	@ (800ab80 <_Z41__static_initialization_and_destruction_0ii+0x80>)
 800ab22:	f7ff fb8f 	bl	800a244 <_ZN8STM32DMAC1Ev>
static LCD16bpp display;
 800ab26:	4817      	ldr	r0, [pc, #92]	@ (800ab84 <_Z41__static_initialization_and_destruction_0ii+0x84>)
 800ab28:	f00c fc58 	bl	80173dc <_ZN8touchgfx8LCD16bppC1Ev>
static TouchGFXHAL hal(dma, display, tc, 320, 480);
 800ab2c:	f44f 73f0 	mov.w	r3, #480	@ 0x1e0
 800ab30:	9301      	str	r3, [sp, #4]
 800ab32:	f44f 73a0 	mov.w	r3, #320	@ 0x140
 800ab36:	9300      	str	r3, [sp, #0]
 800ab38:	4b10      	ldr	r3, [pc, #64]	@ (800ab7c <_Z41__static_initialization_and_destruction_0ii+0x7c>)
 800ab3a:	4a12      	ldr	r2, [pc, #72]	@ (800ab84 <_Z41__static_initialization_and_destruction_0ii+0x84>)
 800ab3c:	4910      	ldr	r1, [pc, #64]	@ (800ab80 <_Z41__static_initialization_and_destruction_0ii+0x80>)
 800ab3e:	4812      	ldr	r0, [pc, #72]	@ (800ab88 <_Z41__static_initialization_and_destruction_0ii+0x88>)
 800ab40:	f7ff fe9c 	bl	800a87c <_ZN11TouchGFXHALC1ERN8touchgfx13DMA_InterfaceERNS0_3LCDERNS0_15TouchControllerEtt>
 800ab44:	687b      	ldr	r3, [r7, #4]
 800ab46:	2b00      	cmp	r3, #0
 800ab48:	d113      	bne.n	800ab72 <_Z41__static_initialization_and_destruction_0ii+0x72>
 800ab4a:	683b      	ldr	r3, [r7, #0]
 800ab4c:	f64f 72ff 	movw	r2, #65535	@ 0xffff
 800ab50:	4293      	cmp	r3, r2
 800ab52:	d10e      	bne.n	800ab72 <_Z41__static_initialization_and_destruction_0ii+0x72>
 800ab54:	480c      	ldr	r0, [pc, #48]	@ (800ab88 <_Z41__static_initialization_and_destruction_0ii+0x88>)
 800ab56:	f7ff fa25 	bl	8009fa4 <_ZN11TouchGFXHALD1Ev>
static ApplicationFontProvider fontProvider;
 800ab5a:	480c      	ldr	r0, [pc, #48]	@ (800ab8c <_Z41__static_initialization_and_destruction_0ii+0x8c>)
 800ab5c:	f7fc fa62 	bl	8007024 <_ZN23ApplicationFontProviderD1Ev>
static LCD16bpp display;
 800ab60:	4808      	ldr	r0, [pc, #32]	@ (800ab84 <_Z41__static_initialization_and_destruction_0ii+0x84>)
 800ab62:	f7ff ffab 	bl	800aabc <_ZN8touchgfx8LCD16bppD1Ev>
static STM32DMA dma;
 800ab66:	4806      	ldr	r0, [pc, #24]	@ (800ab80 <_Z41__static_initialization_and_destruction_0ii+0x80>)
 800ab68:	f7ff fbc0 	bl	800a2ec <_ZN8STM32DMAD1Ev>
static STM32TouchController tc;
 800ab6c:	4803      	ldr	r0, [pc, #12]	@ (800ab7c <_Z41__static_initialization_and_destruction_0ii+0x7c>)
 800ab6e:	f7fe ff61 	bl	8009a34 <_ZN20STM32TouchControllerD1Ev>
}
 800ab72:	bf00      	nop
 800ab74:	3708      	adds	r7, #8
 800ab76:	46bd      	mov	sp, r7
 800ab78:	bd80      	pop	{r7, pc}
 800ab7a:	bf00      	nop
 800ab7c:	20000914 	.word	0x20000914
 800ab80:	20000918 	.word	0x20000918
 800ab84:	2000095c 	.word	0x2000095c
 800ab88:	200009ec 	.word	0x200009ec
 800ab8c:	20000020 	.word	0x20000020

0800ab90 <_ZNK8touchgfx9PartitionINS_4meta8TypeListINS_12NoTransitionENS2_INS1_3NilES4_EEEELt1EE8capacityEv>:
    {
        INTS_PR_ELEMENT = (sizeof(typename meta::select_type_maxsize<SupportedTypesList>::type) + sizeof(int) - 1) / sizeof(int),
        SIZE_OF_ELEMENT = INTS_PR_ELEMENT * sizeof(int)
    };

    virtual uint16_t capacity() const
 800ab90:	b480      	push	{r7}
 800ab92:	b083      	sub	sp, #12
 800ab94:	af00      	add	r7, sp, #0
 800ab96:	6078      	str	r0, [r7, #4]
    {
        return NUMBER_OF_ELEMENTS;
 800ab98:	2301      	movs	r3, #1
    }
 800ab9a:	4618      	mov	r0, r3
 800ab9c:	370c      	adds	r7, #12
 800ab9e:	46bd      	mov	sp, r7
 800aba0:	f85d 7b04 	ldr.w	r7, [sp], #4
 800aba4:	4770      	bx	lr

0800aba6 <_ZN8touchgfx9PartitionINS_4meta8TypeListINS_12NoTransitionENS2_INS1_3NilES4_EEEELt1EE12element_sizeEv>:

    virtual uint32_t element_size()
 800aba6:	b480      	push	{r7}
 800aba8:	b083      	sub	sp, #12
 800abaa:	af00      	add	r7, sp, #0
 800abac:	6078      	str	r0, [r7, #4]
    {
        return sizeof(stBlocks[0]);
 800abae:	230c      	movs	r3, #12
    }
 800abb0:	4618      	mov	r0, r3
 800abb2:	370c      	adds	r7, #12
 800abb4:	46bd      	mov	sp, r7
 800abb6:	f85d 7b04 	ldr.w	r7, [sp], #4
 800abba:	4770      	bx	lr

0800abbc <_ZN8touchgfx9PartitionINS_4meta8TypeListINS_12NoTransitionENS2_INS1_3NilES4_EEEELt1EE7elementEt>:

protected:
    virtual void* element(uint16_t index)
 800abbc:	b480      	push	{r7}
 800abbe:	b083      	sub	sp, #12
 800abc0:	af00      	add	r7, sp, #0
 800abc2:	6078      	str	r0, [r7, #4]
 800abc4:	460b      	mov	r3, r1
 800abc6:	807b      	strh	r3, [r7, #2]
    {
        return &stBlocks[index];
 800abc8:	887a      	ldrh	r2, [r7, #2]
 800abca:	4613      	mov	r3, r2
 800abcc:	005b      	lsls	r3, r3, #1
 800abce:	4413      	add	r3, r2
 800abd0:	009b      	lsls	r3, r3, #2
 800abd2:	3308      	adds	r3, #8
 800abd4:	687a      	ldr	r2, [r7, #4]
 800abd6:	4413      	add	r3, r2
    }
 800abd8:	4618      	mov	r0, r3
 800abda:	370c      	adds	r7, #12
 800abdc:	46bd      	mov	sp, r7
 800abde:	f85d 7b04 	ldr.w	r7, [sp], #4
 800abe2:	4770      	bx	lr

0800abe4 <_ZNK8touchgfx9PartitionINS_4meta8TypeListINS_12NoTransitionENS2_INS1_3NilES4_EEEELt1EE7elementEt>:

    virtual const void* element(uint16_t index) const
 800abe4:	b480      	push	{r7}
 800abe6:	b083      	sub	sp, #12
 800abe8:	af00      	add	r7, sp, #0
 800abea:	6078      	str	r0, [r7, #4]
 800abec:	460b      	mov	r3, r1
 800abee:	807b      	strh	r3, [r7, #2]
    {
        return &stBlocks[index];
 800abf0:	887a      	ldrh	r2, [r7, #2]
 800abf2:	4613      	mov	r3, r2
 800abf4:	005b      	lsls	r3, r3, #1
 800abf6:	4413      	add	r3, r2
 800abf8:	009b      	lsls	r3, r3, #2
 800abfa:	3308      	adds	r3, #8
 800abfc:	687a      	ldr	r2, [r7, #4]
 800abfe:	4413      	add	r3, r2
    }
 800ac00:	4618      	mov	r0, r3
 800ac02:	370c      	adds	r7, #12
 800ac04:	46bd      	mov	sp, r7
 800ac06:	f85d 7b04 	ldr.w	r7, [sp], #4
 800ac0a:	4770      	bx	lr

0800ac0c <_ZNK8touchgfx9PartitionINS_4meta8TypeListI8MainViewNS2_INS1_3NilES4_EEEELt1EE8capacityEv>:
    virtual uint16_t capacity() const
 800ac0c:	b480      	push	{r7}
 800ac0e:	b083      	sub	sp, #12
 800ac10:	af00      	add	r7, sp, #0
 800ac12:	6078      	str	r0, [r7, #4]
        return NUMBER_OF_ELEMENTS;
 800ac14:	2301      	movs	r3, #1
    }
 800ac16:	4618      	mov	r0, r3
 800ac18:	370c      	adds	r7, #12
 800ac1a:	46bd      	mov	sp, r7
 800ac1c:	f85d 7b04 	ldr.w	r7, [sp], #4
 800ac20:	4770      	bx	lr

0800ac22 <_ZN8touchgfx9PartitionINS_4meta8TypeListI8MainViewNS2_INS1_3NilES4_EEEELt1EE12element_sizeEv>:
    virtual uint32_t element_size()
 800ac22:	b480      	push	{r7}
 800ac24:	b083      	sub	sp, #12
 800ac26:	af00      	add	r7, sp, #0
 800ac28:	6078      	str	r0, [r7, #4]
        return sizeof(stBlocks[0]);
 800ac2a:	f44f 7396 	mov.w	r3, #300	@ 0x12c
    }
 800ac2e:	4618      	mov	r0, r3
 800ac30:	370c      	adds	r7, #12
 800ac32:	46bd      	mov	sp, r7
 800ac34:	f85d 7b04 	ldr.w	r7, [sp], #4
 800ac38:	4770      	bx	lr

0800ac3a <_ZN8touchgfx9PartitionINS_4meta8TypeListI8MainViewNS2_INS1_3NilES4_EEEELt1EE7elementEt>:
    virtual void* element(uint16_t index)
 800ac3a:	b480      	push	{r7}
 800ac3c:	b083      	sub	sp, #12
 800ac3e:	af00      	add	r7, sp, #0
 800ac40:	6078      	str	r0, [r7, #4]
 800ac42:	460b      	mov	r3, r1
 800ac44:	807b      	strh	r3, [r7, #2]
        return &stBlocks[index];
 800ac46:	887b      	ldrh	r3, [r7, #2]
 800ac48:	f44f 7296 	mov.w	r2, #300	@ 0x12c
 800ac4c:	fb02 f303 	mul.w	r3, r2, r3
 800ac50:	3308      	adds	r3, #8
 800ac52:	687a      	ldr	r2, [r7, #4]
 800ac54:	4413      	add	r3, r2
    }
 800ac56:	4618      	mov	r0, r3
 800ac58:	370c      	adds	r7, #12
 800ac5a:	46bd      	mov	sp, r7
 800ac5c:	f85d 7b04 	ldr.w	r7, [sp], #4
 800ac60:	4770      	bx	lr

0800ac62 <_ZNK8touchgfx9PartitionINS_4meta8TypeListI8MainViewNS2_INS1_3NilES4_EEEELt1EE7elementEt>:
    virtual const void* element(uint16_t index) const
 800ac62:	b480      	push	{r7}
 800ac64:	b083      	sub	sp, #12
 800ac66:	af00      	add	r7, sp, #0
 800ac68:	6078      	str	r0, [r7, #4]
 800ac6a:	460b      	mov	r3, r1
 800ac6c:	807b      	strh	r3, [r7, #2]
        return &stBlocks[index];
 800ac6e:	887b      	ldrh	r3, [r7, #2]
 800ac70:	f44f 7296 	mov.w	r2, #300	@ 0x12c
 800ac74:	fb02 f303 	mul.w	r3, r2, r3
 800ac78:	3308      	adds	r3, #8
 800ac7a:	687a      	ldr	r2, [r7, #4]
 800ac7c:	4413      	add	r3, r2
    }
 800ac7e:	4618      	mov	r0, r3
 800ac80:	370c      	adds	r7, #12
 800ac82:	46bd      	mov	sp, r7
 800ac84:	f85d 7b04 	ldr.w	r7, [sp], #4
 800ac88:	4770      	bx	lr

0800ac8a <_ZNK8touchgfx9PartitionINS_4meta8TypeListI13MainPresenterNS2_INS1_3NilES4_EEEELt1EE8capacityEv>:
    virtual uint16_t capacity() const
 800ac8a:	b480      	push	{r7}
 800ac8c:	b083      	sub	sp, #12
 800ac8e:	af00      	add	r7, sp, #0
 800ac90:	6078      	str	r0, [r7, #4]
        return NUMBER_OF_ELEMENTS;
 800ac92:	2301      	movs	r3, #1
    }
 800ac94:	4618      	mov	r0, r3
 800ac96:	370c      	adds	r7, #12
 800ac98:	46bd      	mov	sp, r7
 800ac9a:	f85d 7b04 	ldr.w	r7, [sp], #4
 800ac9e:	4770      	bx	lr

0800aca0 <_ZN8touchgfx9PartitionINS_4meta8TypeListI13MainPresenterNS2_INS1_3NilES4_EEEELt1EE12element_sizeEv>:
    virtual uint32_t element_size()
 800aca0:	b480      	push	{r7}
 800aca2:	b083      	sub	sp, #12
 800aca4:	af00      	add	r7, sp, #0
 800aca6:	6078      	str	r0, [r7, #4]
        return sizeof(stBlocks[0]);
 800aca8:	2310      	movs	r3, #16
    }
 800acaa:	4618      	mov	r0, r3
 800acac:	370c      	adds	r7, #12
 800acae:	46bd      	mov	sp, r7
 800acb0:	f85d 7b04 	ldr.w	r7, [sp], #4
 800acb4:	4770      	bx	lr

0800acb6 <_ZN8touchgfx9PartitionINS_4meta8TypeListI13MainPresenterNS2_INS1_3NilES4_EEEELt1EE7elementEt>:
    virtual void* element(uint16_t index)
 800acb6:	b480      	push	{r7}
 800acb8:	b083      	sub	sp, #12
 800acba:	af00      	add	r7, sp, #0
 800acbc:	6078      	str	r0, [r7, #4]
 800acbe:	460b      	mov	r3, r1
 800acc0:	807b      	strh	r3, [r7, #2]
        return &stBlocks[index];
 800acc2:	887b      	ldrh	r3, [r7, #2]
 800acc4:	011b      	lsls	r3, r3, #4
 800acc6:	3308      	adds	r3, #8
 800acc8:	687a      	ldr	r2, [r7, #4]
 800acca:	4413      	add	r3, r2
    }
 800accc:	4618      	mov	r0, r3
 800acce:	370c      	adds	r7, #12
 800acd0:	46bd      	mov	sp, r7
 800acd2:	f85d 7b04 	ldr.w	r7, [sp], #4
 800acd6:	4770      	bx	lr

0800acd8 <_ZNK8touchgfx9PartitionINS_4meta8TypeListI13MainPresenterNS2_INS1_3NilES4_EEEELt1EE7elementEt>:
    virtual const void* element(uint16_t index) const
 800acd8:	b480      	push	{r7}
 800acda:	b083      	sub	sp, #12
 800acdc:	af00      	add	r7, sp, #0
 800acde:	6078      	str	r0, [r7, #4]
 800ace0:	460b      	mov	r3, r1
 800ace2:	807b      	strh	r3, [r7, #2]
        return &stBlocks[index];
 800ace4:	887b      	ldrh	r3, [r7, #2]
 800ace6:	011b      	lsls	r3, r3, #4
 800ace8:	3308      	adds	r3, #8
 800acea:	687a      	ldr	r2, [r7, #4]
 800acec:	4413      	add	r3, r2
    }
 800acee:	4618      	mov	r0, r3
 800acf0:	370c      	adds	r7, #12
 800acf2:	46bd      	mov	sp, r7
 800acf4:	f85d 7b04 	ldr.w	r7, [sp], #4
 800acf8:	4770      	bx	lr

0800acfa <_GLOBAL__sub_I_touchgfx_init>:
 800acfa:	b580      	push	{r7, lr}
 800acfc:	af00      	add	r7, sp, #0
 800acfe:	f64f 71ff 	movw	r1, #65535	@ 0xffff
 800ad02:	2001      	movs	r0, #1
 800ad04:	f7ff fefc 	bl	800ab00 <_Z41__static_initialization_and_destruction_0ii>
 800ad08:	bd80      	pop	{r7, pc}

0800ad0a <_GLOBAL__sub_D_touchgfx_init>:
 800ad0a:	b580      	push	{r7, lr}
 800ad0c:	af00      	add	r7, sp, #0
 800ad0e:	f64f 71ff 	movw	r1, #65535	@ 0xffff
 800ad12:	2000      	movs	r0, #0
 800ad14:	f7ff fef4 	bl	800ab00 <_Z41__static_initialization_and_destruction_0ii>
 800ad18:	bd80      	pop	{r7, pc}

0800ad1a <_ZNK8touchgfx9colortypecvmEv>:
    operator uint32_t() const
 800ad1a:	b480      	push	{r7}
 800ad1c:	b083      	sub	sp, #12
 800ad1e:	af00      	add	r7, sp, #0
 800ad20:	6078      	str	r0, [r7, #4]
        return color;
 800ad22:	687b      	ldr	r3, [r7, #4]
 800ad24:	681b      	ldr	r3, [r3, #0]
    }
 800ad26:	4618      	mov	r0, r3
 800ad28:	370c      	adds	r7, #12
 800ad2a:	46bd      	mov	sp, r7
 800ad2c:	f85d 7b04 	ldr.w	r7, [sp], #4
 800ad30:	4770      	bx	lr
	...

0800ad34 <_ZN8touchgfx20FrameBufferAllocatorD1Ev>:
     * transferred and ready to reuse.
     */
    virtual void freeBlockAfterTransfer() = 0;

    /** Finalizes an instance of the FrameBufferAllocator class. */
    virtual ~FrameBufferAllocator()
 800ad34:	b480      	push	{r7}
 800ad36:	b083      	sub	sp, #12
 800ad38:	af00      	add	r7, sp, #0
 800ad3a:	6078      	str	r0, [r7, #4]
    {
 800ad3c:	4a04      	ldr	r2, [pc, #16]	@ (800ad50 <_ZN8touchgfx20FrameBufferAllocatorD1Ev+0x1c>)
 800ad3e:	687b      	ldr	r3, [r7, #4]
 800ad40:	601a      	str	r2, [r3, #0]
    }
 800ad42:	687b      	ldr	r3, [r7, #4]
 800ad44:	4618      	mov	r0, r3
 800ad46:	370c      	adds	r7, #12
 800ad48:	46bd      	mov	sp, r7
 800ad4a:	f85d 7b04 	ldr.w	r7, [sp], #4
 800ad4e:	4770      	bx	lr
 800ad50:	080231a0 	.word	0x080231a0

0800ad54 <_ZN8touchgfx20FrameBufferAllocatorD0Ev>:
    virtual ~FrameBufferAllocator()
 800ad54:	b580      	push	{r7, lr}
 800ad56:	b082      	sub	sp, #8
 800ad58:	af00      	add	r7, sp, #0
 800ad5a:	6078      	str	r0, [r7, #4]
    }
 800ad5c:	6878      	ldr	r0, [r7, #4]
 800ad5e:	f7ff ffe9 	bl	800ad34 <_ZN8touchgfx20FrameBufferAllocatorD1Ev>
 800ad62:	2104      	movs	r1, #4
 800ad64:	6878      	ldr	r0, [r7, #4]
 800ad66:	f015 fd24 	bl	80207b2 <_ZdlPvj>
 800ad6a:	687b      	ldr	r3, [r7, #4]
 800ad6c:	4618      	mov	r0, r3
 800ad6e:	3708      	adds	r7, #8
 800ad70:	46bd      	mov	sp, r7
 800ad72:	bd80      	pop	{r7, pc}

0800ad74 <_ZN8touchgfx3HAL5vSyncEv>:
    /**
     * Called by the VSync interrupt.
     *
     * Called by the VSync interrupt for counting of LCD refreshes.
     */
    void vSync()
 800ad74:	b480      	push	{r7}
 800ad76:	b083      	sub	sp, #12
 800ad78:	af00      	add	r7, sp, #0
 800ad7a:	6078      	str	r0, [r7, #4]
    {
        vSyncCnt++;
 800ad7c:	687b      	ldr	r3, [r7, #4]
 800ad7e:	f893 306a 	ldrb.w	r3, [r3, #106]	@ 0x6a
 800ad82:	3301      	adds	r3, #1
 800ad84:	b2da      	uxtb	r2, r3
 800ad86:	687b      	ldr	r3, [r7, #4]
 800ad88:	f883 206a 	strb.w	r2, [r3, #106]	@ 0x6a
    }
 800ad8c:	bf00      	nop
 800ad8e:	370c      	adds	r7, #12
 800ad90:	46bd      	mov	sp, r7
 800ad92:	f85d 7b04 	ldr.w	r7, [sp], #4
 800ad96:	4770      	bx	lr

0800ad98 <_ZN8touchgfx3HAL23setFrameBufferAllocatorEPNS_20FrameBufferAllocatorE>:
     * Sets a framebuffer allocator. The framebuffer allocator is only used in partial
     * framebuffer mode.
     *
     * @param [in] allocator pointer to a framebuffer allocator object.
     */
    void setFrameBufferAllocator(FrameBufferAllocator* allocator)
 800ad98:	b480      	push	{r7}
 800ad9a:	b083      	sub	sp, #12
 800ad9c:	af00      	add	r7, sp, #0
 800ad9e:	6078      	str	r0, [r7, #4]
 800ada0:	6039      	str	r1, [r7, #0]
    {
        frameBufferAllocator = allocator;
 800ada2:	687b      	ldr	r3, [r7, #4]
 800ada4:	683a      	ldr	r2, [r7, #0]
 800ada6:	619a      	str	r2, [r3, #24]
    }
 800ada8:	bf00      	nop
 800adaa:	370c      	adds	r7, #12
 800adac:	46bd      	mov	sp, r7
 800adae:	f85d 7b04 	ldr.w	r7, [sp], #4
 800adb2:	4770      	bx	lr

0800adb4 <_ZN8touchgfx3HAL23getFrameBufferAllocatorEv>:
    /**
     * Gets the framebuffer allocator.
     *
     * @return The framebuffer allocator.
     */
    FrameBufferAllocator* getFrameBufferAllocator()
 800adb4:	b480      	push	{r7}
 800adb6:	b083      	sub	sp, #12
 800adb8:	af00      	add	r7, sp, #0
 800adba:	6078      	str	r0, [r7, #4]
    {
        return frameBufferAllocator;
 800adbc:	687b      	ldr	r3, [r7, #4]
 800adbe:	699b      	ldr	r3, [r3, #24]
    }
 800adc0:	4618      	mov	r0, r3
 800adc2:	370c      	adds	r7, #12
 800adc4:	46bd      	mov	sp, r7
 800adc6:	f85d 7b04 	ldr.w	r7, [sp], #4
 800adca:	4770      	bx	lr

0800adcc <_ZN8touchgfx3HAL23setFrameRefreshStrategyENS0_20FrameRefreshStrategyE>:
     *
     * @param  s The desired strategy to use.
     *
     * @return true if the desired strategy will be used, false otherwise.
     */
    bool setFrameRefreshStrategy(FrameRefreshStrategy s)
 800adcc:	b580      	push	{r7, lr}
 800adce:	b082      	sub	sp, #8
 800add0:	af00      	add	r7, sp, #0
 800add2:	6078      	str	r0, [r7, #4]
 800add4:	460b      	mov	r3, r1
 800add6:	70fb      	strb	r3, [r7, #3]
    {
        if (s == REFRESH_STRATEGY_DEFAULT || s == REFRESH_STRATEGY_PARTIAL_FRAMEBUFFER)
 800add8:	78fb      	ldrb	r3, [r7, #3]
 800adda:	2b00      	cmp	r3, #0
 800addc:	d002      	beq.n	800ade4 <_ZN8touchgfx3HAL23setFrameRefreshStrategyENS0_20FrameRefreshStrategyE+0x18>
 800adde:	78fb      	ldrb	r3, [r7, #3]
 800ade0:	2b02      	cmp	r3, #2
 800ade2:	d105      	bne.n	800adf0 <_ZN8touchgfx3HAL23setFrameRefreshStrategyENS0_20FrameRefreshStrategyE+0x24>
        {
            refreshStrategy = s;
 800ade4:	687b      	ldr	r3, [r7, #4]
 800ade6:	78fa      	ldrb	r2, [r7, #3]
 800ade8:	f883 2048 	strb.w	r2, [r3, #72]	@ 0x48
            return true;
 800adec:	2301      	movs	r3, #1
 800adee:	e027      	b.n	800ae40 <_ZN8touchgfx3HAL23setFrameRefreshStrategyENS0_20FrameRefreshStrategyE+0x74>
        }
        if (s == REFRESH_STRATEGY_OPTIM_SINGLE_BUFFER_TFT_CTRL)
 800adf0:	78fb      	ldrb	r3, [r7, #3]
 800adf2:	2b01      	cmp	r3, #1
 800adf4:	d123      	bne.n	800ae3e <_ZN8touchgfx3HAL23setFrameRefreshStrategyENS0_20FrameRefreshStrategyE+0x72>
        {
            // Perform sanity checks. This strategy requires
            //   - task delay function
            //   - a TFT controller (+ an impl of getTFTCurrentLine())
            //   - single buffering
            if (taskDelayFunc != 0 && getTFTCurrentLine() != 0xFFFF && !USE_DOUBLE_BUFFERING)
 800adf6:	687b      	ldr	r3, [r7, #4]
 800adf8:	6b9b      	ldr	r3, [r3, #56]	@ 0x38
 800adfa:	2b00      	cmp	r3, #0
 800adfc:	d014      	beq.n	800ae28 <_ZN8touchgfx3HAL23setFrameRefreshStrategyENS0_20FrameRefreshStrategyE+0x5c>
 800adfe:	687b      	ldr	r3, [r7, #4]
 800ae00:	681b      	ldr	r3, [r3, #0]
 800ae02:	339c      	adds	r3, #156	@ 0x9c
 800ae04:	681b      	ldr	r3, [r3, #0]
 800ae06:	6878      	ldr	r0, [r7, #4]
 800ae08:	4798      	blx	r3
 800ae0a:	4603      	mov	r3, r0
 800ae0c:	461a      	mov	r2, r3
 800ae0e:	f64f 73ff 	movw	r3, #65535	@ 0xffff
 800ae12:	429a      	cmp	r2, r3
 800ae14:	d008      	beq.n	800ae28 <_ZN8touchgfx3HAL23setFrameRefreshStrategyENS0_20FrameRefreshStrategyE+0x5c>
 800ae16:	4b0c      	ldr	r3, [pc, #48]	@ (800ae48 <_ZN8touchgfx3HAL23setFrameRefreshStrategyENS0_20FrameRefreshStrategyE+0x7c>)
 800ae18:	781b      	ldrb	r3, [r3, #0]
 800ae1a:	f083 0301 	eor.w	r3, r3, #1
 800ae1e:	b2db      	uxtb	r3, r3
 800ae20:	2b00      	cmp	r3, #0
 800ae22:	d001      	beq.n	800ae28 <_ZN8touchgfx3HAL23setFrameRefreshStrategyENS0_20FrameRefreshStrategyE+0x5c>
 800ae24:	2301      	movs	r3, #1
 800ae26:	e000      	b.n	800ae2a <_ZN8touchgfx3HAL23setFrameRefreshStrategyENS0_20FrameRefreshStrategyE+0x5e>
 800ae28:	2300      	movs	r3, #0
 800ae2a:	2b00      	cmp	r3, #0
 800ae2c:	d005      	beq.n	800ae3a <_ZN8touchgfx3HAL23setFrameRefreshStrategyENS0_20FrameRefreshStrategyE+0x6e>
            {
                refreshStrategy = s;
 800ae2e:	687b      	ldr	r3, [r7, #4]
 800ae30:	78fa      	ldrb	r2, [r7, #3]
 800ae32:	f883 2048 	strb.w	r2, [r3, #72]	@ 0x48
                return true;
 800ae36:	2301      	movs	r3, #1
 800ae38:	e002      	b.n	800ae40 <_ZN8touchgfx3HAL23setFrameRefreshStrategyENS0_20FrameRefreshStrategyE+0x74>
            }
            return false;
 800ae3a:	2300      	movs	r3, #0
 800ae3c:	e000      	b.n	800ae40 <_ZN8touchgfx3HAL23setFrameRefreshStrategyENS0_20FrameRefreshStrategyE+0x74>
        }
        // Unknown strategy
        return false;
 800ae3e:	2300      	movs	r3, #0
    }
 800ae40:	4618      	mov	r0, r3
 800ae42:	3708      	adds	r7, #8
 800ae44:	46bd      	mov	sp, r7
 800ae46:	bd80      	pop	{r7, pc}
 800ae48:	20002c5a 	.word	0x20002c5a

0800ae4c <_ZN8touchgfx5paint8tearDownEv>:
{
    blendL8CLUT = data;
}

void tearDown()
{
 800ae4c:	b480      	push	{r7}
 800ae4e:	af00      	add	r7, sp, #0
}
 800ae50:	bf00      	nop
 800ae52:	46bd      	mov	sp, r7
 800ae54:	f85d 7b04 	ldr.w	r7, [sp], #4
 800ae58:	4770      	bx	lr

0800ae5a <_ZN8touchgfx5paint9flushLineEPmi>:

void flushLine(uint32_t* addr, int sizebytes)
{
 800ae5a:	b480      	push	{r7}
 800ae5c:	b083      	sub	sp, #12
 800ae5e:	af00      	add	r7, sp, #0
 800ae60:	6078      	str	r0, [r7, #4]
 800ae62:	6039      	str	r1, [r7, #0]
}
 800ae64:	bf00      	nop
 800ae66:	370c      	adds	r7, #12
 800ae68:	46bd      	mov	sp, r7
 800ae6a:	f85d 7b04 	ldr.w	r7, [sp], #4
 800ae6e:	4770      	bx	lr

0800ae70 <_ZN8touchgfx5paint6rgb56514lineFromRGB565EPtPKtjh>:
        } while (++framebuffer < lineEnd);
    }
}

void lineFromRGB565(uint16_t* const ptr, const uint16_t* const data, const unsigned count, const uint8_t alpha)
{
 800ae70:	b480      	push	{r7}
 800ae72:	b08d      	sub	sp, #52	@ 0x34
 800ae74:	af00      	add	r7, sp, #0
 800ae76:	60f8      	str	r0, [r7, #12]
 800ae78:	60b9      	str	r1, [r7, #8]
 800ae7a:	607a      	str	r2, [r7, #4]
 800ae7c:	70fb      	strb	r3, [r7, #3]
    uint16_t* framebuffer = ptr;
 800ae7e:	68fb      	ldr	r3, [r7, #12]
 800ae80:	62fb      	str	r3, [r7, #44]	@ 0x2c
    const uint16_t* bitmapPointer = data;
 800ae82:	68bb      	ldr	r3, [r7, #8]
 800ae84:	62bb      	str	r3, [r7, #40]	@ 0x28
    const uint16_t* const chunkend = framebuffer + count;
 800ae86:	687b      	ldr	r3, [r7, #4]
 800ae88:	005b      	lsls	r3, r3, #1
 800ae8a:	6afa      	ldr	r2, [r7, #44]	@ 0x2c
 800ae8c:	4413      	add	r3, r2
 800ae8e:	627b      	str	r3, [r7, #36]	@ 0x24

    if (alpha == 0xFF)
 800ae90:	78fb      	ldrb	r3, [r7, #3]
 800ae92:	2bff      	cmp	r3, #255	@ 0xff
 800ae94:	d112      	bne.n	800aebc <_ZN8touchgfx5paint6rgb56514lineFromRGB565EPtPKtjh+0x4c>
    {
        do
        {
            *framebuffer = *bitmapPointer++;
 800ae96:	6abb      	ldr	r3, [r7, #40]	@ 0x28
 800ae98:	1c9a      	adds	r2, r3, #2
 800ae9a:	62ba      	str	r2, [r7, #40]	@ 0x28
 800ae9c:	881a      	ldrh	r2, [r3, #0]
 800ae9e:	6afb      	ldr	r3, [r7, #44]	@ 0x2c
 800aea0:	801a      	strh	r2, [r3, #0]
        } while (++framebuffer < chunkend);
 800aea2:	6afb      	ldr	r3, [r7, #44]	@ 0x2c
 800aea4:	3302      	adds	r3, #2
 800aea6:	62fb      	str	r3, [r7, #44]	@ 0x2c
 800aea8:	6afa      	ldr	r2, [r7, #44]	@ 0x2c
 800aeaa:	6a7b      	ldr	r3, [r7, #36]	@ 0x24
 800aeac:	429a      	cmp	r2, r3
 800aeae:	bf34      	ite	cc
 800aeb0:	2301      	movcc	r3, #1
 800aeb2:	2300      	movcs	r3, #0
 800aeb4:	b2db      	uxtb	r3, r3
 800aeb6:	2b00      	cmp	r3, #0
 800aeb8:	d1ed      	bne.n	800ae96 <_ZN8touchgfx5paint6rgb56514lineFromRGB565EPtPKtjh+0x26>
        do
        {
            *framebuffer = alphaBlend(*bitmapPointer++, *framebuffer, alpha);
        } while (++framebuffer < chunkend);
    }
}
 800aeba:	e079      	b.n	800afb0 <_ZN8touchgfx5paint6rgb56514lineFromRGB565EPtPKtjh+0x140>
            *framebuffer = alphaBlend(*bitmapPointer++, *framebuffer, alpha);
 800aebc:	6abb      	ldr	r3, [r7, #40]	@ 0x28
 800aebe:	1c9a      	adds	r2, r3, #2
 800aec0:	62ba      	str	r2, [r7, #40]	@ 0x28
 800aec2:	881a      	ldrh	r2, [r3, #0]
 800aec4:	6afb      	ldr	r3, [r7, #44]	@ 0x2c
 800aec6:	881b      	ldrh	r3, [r3, #0]
 800aec8:	847a      	strh	r2, [r7, #34]	@ 0x22
 800aeca:	843b      	strh	r3, [r7, #32]
 800aecc:	78fb      	ldrb	r3, [r7, #3]
 800aece:	77fb      	strb	r3, [r7, #31]
    return alphaBlend(newpix & RMASK, newpix & GMASK, newpix & BMASK, bufpix, alpha);
 800aed0:	8c7b      	ldrh	r3, [r7, #34]	@ 0x22
 800aed2:	f423 63ff 	bic.w	r3, r3, #2040	@ 0x7f8
 800aed6:	f023 0307 	bic.w	r3, r3, #7
 800aeda:	b299      	uxth	r1, r3
 800aedc:	8c7b      	ldrh	r3, [r7, #34]	@ 0x22
 800aede:	f403 63fc 	and.w	r3, r3, #2016	@ 0x7e0
 800aee2:	b29a      	uxth	r2, r3
 800aee4:	8c7b      	ldrh	r3, [r7, #34]	@ 0x22
 800aee6:	f003 031f 	and.w	r3, r3, #31
 800aeea:	b29b      	uxth	r3, r3
 800aeec:	83b9      	strh	r1, [r7, #28]
 800aeee:	837a      	strh	r2, [r7, #26]
 800aef0:	833b      	strh	r3, [r7, #24]
 800aef2:	8c3b      	ldrh	r3, [r7, #32]
 800aef4:	82fb      	strh	r3, [r7, #22]
 800aef6:	7ffb      	ldrb	r3, [r7, #31]
 800aef8:	757b      	strb	r3, [r7, #21]
    const uint8_t ialpha = 0xFF - alpha;
 800aefa:	7d7b      	ldrb	r3, [r7, #21]
 800aefc:	43db      	mvns	r3, r3
 800aefe:	753b      	strb	r3, [r7, #20]
    return (((R * alpha + (bufpix & RMASK) * ialpha) / 255) & RMASK) |
 800af00:	8bbb      	ldrh	r3, [r7, #28]
 800af02:	7d7a      	ldrb	r2, [r7, #21]
 800af04:	fb03 f202 	mul.w	r2, r3, r2
 800af08:	8afb      	ldrh	r3, [r7, #22]
 800af0a:	f403 4378 	and.w	r3, r3, #63488	@ 0xf800
 800af0e:	7d39      	ldrb	r1, [r7, #20]
 800af10:	fb01 f303 	mul.w	r3, r1, r3
 800af14:	4413      	add	r3, r2
 800af16:	4a29      	ldr	r2, [pc, #164]	@ (800afbc <_ZN8touchgfx5paint6rgb56514lineFromRGB565EPtPKtjh+0x14c>)
 800af18:	fb82 1203 	smull	r1, r2, r2, r3
 800af1c:	441a      	add	r2, r3
 800af1e:	11d2      	asrs	r2, r2, #7
 800af20:	17db      	asrs	r3, r3, #31
 800af22:	1ad3      	subs	r3, r2, r3
 800af24:	b21b      	sxth	r3, r3
 800af26:	f423 63ff 	bic.w	r3, r3, #2040	@ 0x7f8
 800af2a:	f023 0307 	bic.w	r3, r3, #7
 800af2e:	b21a      	sxth	r2, r3
           (((G * alpha + (bufpix & GMASK) * ialpha) / 255) & GMASK) |
 800af30:	8b7b      	ldrh	r3, [r7, #26]
 800af32:	7d79      	ldrb	r1, [r7, #21]
 800af34:	fb03 f101 	mul.w	r1, r3, r1
 800af38:	8afb      	ldrh	r3, [r7, #22]
 800af3a:	f403 63fc 	and.w	r3, r3, #2016	@ 0x7e0
 800af3e:	7d38      	ldrb	r0, [r7, #20]
 800af40:	fb00 f303 	mul.w	r3, r0, r3
 800af44:	440b      	add	r3, r1
 800af46:	491d      	ldr	r1, [pc, #116]	@ (800afbc <_ZN8touchgfx5paint6rgb56514lineFromRGB565EPtPKtjh+0x14c>)
 800af48:	fb81 0103 	smull	r0, r1, r1, r3
 800af4c:	4419      	add	r1, r3
 800af4e:	11c9      	asrs	r1, r1, #7
 800af50:	17db      	asrs	r3, r3, #31
 800af52:	1acb      	subs	r3, r1, r3
 800af54:	b21b      	sxth	r3, r3
 800af56:	f403 63fc 	and.w	r3, r3, #2016	@ 0x7e0
 800af5a:	b21b      	sxth	r3, r3
    return (((R * alpha + (bufpix & RMASK) * ialpha) / 255) & RMASK) |
 800af5c:	4313      	orrs	r3, r2
 800af5e:	b21a      	sxth	r2, r3
           (((B * alpha + (bufpix & BMASK) * ialpha) / 255) & BMASK);
 800af60:	8b3b      	ldrh	r3, [r7, #24]
 800af62:	7d79      	ldrb	r1, [r7, #21]
 800af64:	fb03 f101 	mul.w	r1, r3, r1
 800af68:	8afb      	ldrh	r3, [r7, #22]
 800af6a:	f003 031f 	and.w	r3, r3, #31
 800af6e:	7d38      	ldrb	r0, [r7, #20]
 800af70:	fb00 f303 	mul.w	r3, r0, r3
 800af74:	440b      	add	r3, r1
 800af76:	4911      	ldr	r1, [pc, #68]	@ (800afbc <_ZN8touchgfx5paint6rgb56514lineFromRGB565EPtPKtjh+0x14c>)
 800af78:	fb81 0103 	smull	r0, r1, r1, r3
 800af7c:	4419      	add	r1, r3
 800af7e:	11c9      	asrs	r1, r1, #7
 800af80:	17db      	asrs	r3, r3, #31
 800af82:	1acb      	subs	r3, r1, r3
 800af84:	b21b      	sxth	r3, r3
 800af86:	f003 031f 	and.w	r3, r3, #31
 800af8a:	b21b      	sxth	r3, r3
           (((G * alpha + (bufpix & GMASK) * ialpha) / 255) & GMASK) |
 800af8c:	4313      	orrs	r3, r2
 800af8e:	b21b      	sxth	r3, r3
           (((B * alpha + (bufpix & BMASK) * ialpha) / 255) & BMASK);
 800af90:	b29a      	uxth	r2, r3
    return alphaBlend(newpix & RMASK, newpix & GMASK, newpix & BMASK, bufpix, alpha);
 800af92:	bf00      	nop
            *framebuffer = alphaBlend(*bitmapPointer++, *framebuffer, alpha);
 800af94:	6afb      	ldr	r3, [r7, #44]	@ 0x2c
 800af96:	801a      	strh	r2, [r3, #0]
        } while (++framebuffer < chunkend);
 800af98:	6afb      	ldr	r3, [r7, #44]	@ 0x2c
 800af9a:	3302      	adds	r3, #2
 800af9c:	62fb      	str	r3, [r7, #44]	@ 0x2c
 800af9e:	6afa      	ldr	r2, [r7, #44]	@ 0x2c
 800afa0:	6a7b      	ldr	r3, [r7, #36]	@ 0x24
 800afa2:	429a      	cmp	r2, r3
 800afa4:	bf34      	ite	cc
 800afa6:	2301      	movcc	r3, #1
 800afa8:	2300      	movcs	r3, #0
 800afaa:	b2db      	uxtb	r3, r3
 800afac:	2b00      	cmp	r3, #0
 800afae:	d185      	bne.n	800aebc <_ZN8touchgfx5paint6rgb56514lineFromRGB565EPtPKtjh+0x4c>
}
 800afb0:	bf00      	nop
 800afb2:	3734      	adds	r7, #52	@ 0x34
 800afb4:	46bd      	mov	sp, r7
 800afb6:	f85d 7b04 	ldr.w	r7, [sp], #4
 800afba:	4770      	bx	lr
 800afbc:	80808081 	.word	0x80808081

0800afc0 <_ZN8touchgfx5paint6rgb56516lineFromARGB8888EPtPKmjh>:

void lineFromARGB8888(uint16_t* const ptr, const uint32_t* const data, const unsigned count, const uint8_t alpha)
{
 800afc0:	b590      	push	{r4, r7, lr}
 800afc2:	b093      	sub	sp, #76	@ 0x4c
 800afc4:	af00      	add	r7, sp, #0
 800afc6:	60f8      	str	r0, [r7, #12]
 800afc8:	60b9      	str	r1, [r7, #8]
 800afca:	607a      	str	r2, [r7, #4]
 800afcc:	70fb      	strb	r3, [r7, #3]
    uint16_t* framebuffer = ptr;
 800afce:	68fb      	ldr	r3, [r7, #12]
 800afd0:	647b      	str	r3, [r7, #68]	@ 0x44
    const uint32_t* bitmapPointer = data;
 800afd2:	68bb      	ldr	r3, [r7, #8]
 800afd4:	643b      	str	r3, [r7, #64]	@ 0x40
    const uint16_t* const chunkend = framebuffer + count;
 800afd6:	687b      	ldr	r3, [r7, #4]
 800afd8:	005b      	lsls	r3, r3, #1
 800afda:	6c7a      	ldr	r2, [r7, #68]	@ 0x44
 800afdc:	4413      	add	r3, r2
 800afde:	63fb      	str	r3, [r7, #60]	@ 0x3c
    do
    {
        const uint8_t srcAlpha = (*bitmapPointer) >> 24;
 800afe0:	6c3b      	ldr	r3, [r7, #64]	@ 0x40
 800afe2:	681b      	ldr	r3, [r3, #0]
 800afe4:	0e1b      	lsrs	r3, r3, #24
 800afe6:	f887 303b 	strb.w	r3, [r7, #59]	@ 0x3b
        const uint8_t a = LCD::div255(alpha * srcAlpha);
 800afea:	78fb      	ldrb	r3, [r7, #3]
 800afec:	b29a      	uxth	r2, r3
 800afee:	f897 303b 	ldrb.w	r3, [r7, #59]	@ 0x3b
 800aff2:	b29b      	uxth	r3, r3
 800aff4:	fb12 f303 	smulbb	r3, r2, r3
 800aff8:	b29b      	uxth	r3, r3
 800affa:	867b      	strh	r3, [r7, #50]	@ 0x32
     *
     * @return The result of a division by 255.
     */
    FORCE_INLINE_FUNCTION static uint8_t div255(uint16_t num)
    {
        return (num + 1 + (num >> 8)) >> 8;
 800affc:	8e7b      	ldrh	r3, [r7, #50]	@ 0x32
 800affe:	3301      	adds	r3, #1
 800b000:	8e7a      	ldrh	r2, [r7, #50]	@ 0x32
 800b002:	0a12      	lsrs	r2, r2, #8
 800b004:	b292      	uxth	r2, r2
 800b006:	4413      	add	r3, r2
 800b008:	121b      	asrs	r3, r3, #8
 800b00a:	b2db      	uxtb	r3, r3
 800b00c:	f887 303a 	strb.w	r3, [r7, #58]	@ 0x3a
        if (a == 0xFF)
 800b010:	f897 303a 	ldrb.w	r3, [r7, #58]	@ 0x3a
 800b014:	2bff      	cmp	r3, #255	@ 0xff
 800b016:	d133      	bne.n	800b080 <_ZN8touchgfx5paint6rgb56516lineFromARGB8888EPtPKmjh+0xc0>
        {
            *framebuffer = getNativeColor(*bitmapPointer);
 800b018:	6c3b      	ldr	r3, [r7, #64]	@ 0x40
 800b01a:	681a      	ldr	r2, [r3, #0]
 800b01c:	f107 0318 	add.w	r3, r7, #24
 800b020:	4611      	mov	r1, r2
 800b022:	4618      	mov	r0, r3
 800b024:	f7fc ffee 	bl	8008004 <_ZN8touchgfx9colortypeC1Em>
 800b028:	69bb      	ldr	r3, [r7, #24]
 800b02a:	617b      	str	r3, [r7, #20]
    return ((color >> 8) & 0xF800) | ((color >> 5) & 0x07E0) | ((color >> 3) & 0x001F);
 800b02c:	f107 0314 	add.w	r3, r7, #20
 800b030:	4618      	mov	r0, r3
 800b032:	f7ff fe72 	bl	800ad1a <_ZNK8touchgfx9colortypecvmEv>
 800b036:	4603      	mov	r3, r0
 800b038:	0a1b      	lsrs	r3, r3, #8
 800b03a:	b29b      	uxth	r3, r3
 800b03c:	f423 63ff 	bic.w	r3, r3, #2040	@ 0x7f8
 800b040:	f023 0307 	bic.w	r3, r3, #7
 800b044:	b29c      	uxth	r4, r3
 800b046:	f107 0314 	add.w	r3, r7, #20
 800b04a:	4618      	mov	r0, r3
 800b04c:	f7ff fe65 	bl	800ad1a <_ZNK8touchgfx9colortypecvmEv>
 800b050:	4603      	mov	r3, r0
 800b052:	095b      	lsrs	r3, r3, #5
 800b054:	b29b      	uxth	r3, r3
 800b056:	f403 63fc 	and.w	r3, r3, #2016	@ 0x7e0
 800b05a:	b29b      	uxth	r3, r3
 800b05c:	4323      	orrs	r3, r4
 800b05e:	b29c      	uxth	r4, r3
 800b060:	f107 0314 	add.w	r3, r7, #20
 800b064:	4618      	mov	r0, r3
 800b066:	f7ff fe58 	bl	800ad1a <_ZNK8touchgfx9colortypecvmEv>
 800b06a:	4603      	mov	r3, r0
 800b06c:	08db      	lsrs	r3, r3, #3
 800b06e:	b29b      	uxth	r3, r3
 800b070:	f003 031f 	and.w	r3, r3, #31
 800b074:	b29b      	uxth	r3, r3
 800b076:	4323      	orrs	r3, r4
 800b078:	b29a      	uxth	r2, r3
            *framebuffer = getNativeColor(*bitmapPointer);
 800b07a:	6c7b      	ldr	r3, [r7, #68]	@ 0x44
 800b07c:	801a      	strh	r2, [r3, #0]
 800b07e:	e0a9      	b.n	800b1d4 <_ZN8touchgfx5paint6rgb56516lineFromARGB8888EPtPKmjh+0x214>
        }
        else if (a)
 800b080:	f897 303a 	ldrb.w	r3, [r7, #58]	@ 0x3a
 800b084:	2b00      	cmp	r3, #0
 800b086:	f000 80a5 	beq.w	800b1d4 <_ZN8touchgfx5paint6rgb56516lineFromARGB8888EPtPKmjh+0x214>
        {
            const uint32_t newpix = *bitmapPointer;
 800b08a:	6c3b      	ldr	r3, [r7, #64]	@ 0x40
 800b08c:	681b      	ldr	r3, [r3, #0]
 800b08e:	637b      	str	r3, [r7, #52]	@ 0x34
            *framebuffer = alphaBlend24bit((newpix >> 16), (newpix >> 8), (newpix), *framebuffer, a);
 800b090:	6b7b      	ldr	r3, [r7, #52]	@ 0x34
 800b092:	0c1b      	lsrs	r3, r3, #16
 800b094:	b2d8      	uxtb	r0, r3
 800b096:	6b7b      	ldr	r3, [r7, #52]	@ 0x34
 800b098:	0a1b      	lsrs	r3, r3, #8
 800b09a:	b2d9      	uxtb	r1, r3
 800b09c:	6b7b      	ldr	r3, [r7, #52]	@ 0x34
 800b09e:	b2da      	uxtb	r2, r3
 800b0a0:	6c7b      	ldr	r3, [r7, #68]	@ 0x44
 800b0a2:	881b      	ldrh	r3, [r3, #0]
 800b0a4:	f887 0031 	strb.w	r0, [r7, #49]	@ 0x31
 800b0a8:	f887 1030 	strb.w	r1, [r7, #48]	@ 0x30
 800b0ac:	f887 202f 	strb.w	r2, [r7, #47]	@ 0x2f
 800b0b0:	85bb      	strh	r3, [r7, #44]	@ 0x2c
 800b0b2:	f897 303a 	ldrb.w	r3, [r7, #58]	@ 0x3a
 800b0b6:	f887 302b 	strb.w	r3, [r7, #43]	@ 0x2b
    const uint8_t ialpha = 0xFF - alpha;
 800b0ba:	f897 302b 	ldrb.w	r3, [r7, #43]	@ 0x2b
 800b0be:	43db      	mvns	r3, r3
 800b0c0:	f887 302a 	strb.w	r3, [r7, #42]	@ 0x2a
 800b0c4:	8dbb      	ldrh	r3, [r7, #44]	@ 0x2c
 800b0c6:	853b      	strh	r3, [r7, #40]	@ 0x28
     *
     * @return The red part of the color (0 to 255).
     */
    FORCE_INLINE_FUNCTION static uint8_t getRedFromRGB565(uint16_t color)
    {
        const uint8_t red = (color >> 8) & 0xF8;
 800b0c8:	8d3b      	ldrh	r3, [r7, #40]	@ 0x28
 800b0ca:	0a1b      	lsrs	r3, r3, #8
 800b0cc:	b29b      	uxth	r3, r3
 800b0ce:	b2db      	uxtb	r3, r3
 800b0d0:	f023 0307 	bic.w	r3, r3, #7
 800b0d4:	f887 3027 	strb.w	r3, [r7, #39]	@ 0x27
        return red | (red >> 5);
 800b0d8:	f897 3027 	ldrb.w	r3, [r7, #39]	@ 0x27
 800b0dc:	095b      	lsrs	r3, r3, #5
 800b0de:	b2da      	uxtb	r2, r3
 800b0e0:	f897 3027 	ldrb.w	r3, [r7, #39]	@ 0x27
 800b0e4:	4313      	orrs	r3, r2
 800b0e6:	b2db      	uxtb	r3, r3
    const uint8_t fbred = Color::getRedFromRGB565(bufpix);
 800b0e8:	f887 3026 	strb.w	r3, [r7, #38]	@ 0x26
 800b0ec:	8dbb      	ldrh	r3, [r7, #44]	@ 0x2c
 800b0ee:	84bb      	strh	r3, [r7, #36]	@ 0x24
     *
     * @return The green part of the color (0 to 255).
     */
    FORCE_INLINE_FUNCTION static uint8_t getGreenFromRGB565(uint16_t color)
    {
        const uint8_t green = (color >> 3) & 0xFC;
 800b0f0:	8cbb      	ldrh	r3, [r7, #36]	@ 0x24
 800b0f2:	08db      	lsrs	r3, r3, #3
 800b0f4:	b29b      	uxth	r3, r3
 800b0f6:	b2db      	uxtb	r3, r3
 800b0f8:	f023 0303 	bic.w	r3, r3, #3
 800b0fc:	f887 3023 	strb.w	r3, [r7, #35]	@ 0x23
        return green | (green >> 6);
 800b100:	f897 3023 	ldrb.w	r3, [r7, #35]	@ 0x23
 800b104:	099b      	lsrs	r3, r3, #6
 800b106:	b2da      	uxtb	r2, r3
 800b108:	f897 3023 	ldrb.w	r3, [r7, #35]	@ 0x23
 800b10c:	4313      	orrs	r3, r2
 800b10e:	b2db      	uxtb	r3, r3
    const uint8_t fbgreen = Color::getGreenFromRGB565(bufpix);
 800b110:	f887 3022 	strb.w	r3, [r7, #34]	@ 0x22
 800b114:	8dbb      	ldrh	r3, [r7, #44]	@ 0x2c
 800b116:	843b      	strh	r3, [r7, #32]
     *
     * @return The blue part of the color (0 to 255).
     */
    FORCE_INLINE_FUNCTION static uint8_t getBlueFromRGB565(uint16_t color)
    {
        const uint8_t blue = color << 3;
 800b118:	8c3b      	ldrh	r3, [r7, #32]
 800b11a:	b2db      	uxtb	r3, r3
 800b11c:	00db      	lsls	r3, r3, #3
 800b11e:	77fb      	strb	r3, [r7, #31]
        return blue | (blue >> 5);
 800b120:	7ffb      	ldrb	r3, [r7, #31]
 800b122:	095b      	lsrs	r3, r3, #5
 800b124:	b2da      	uxtb	r2, r3
 800b126:	7ffb      	ldrb	r3, [r7, #31]
 800b128:	4313      	orrs	r3, r2
 800b12a:	b2db      	uxtb	r3, r3
    const uint8_t fbblue = Color::getBlueFromRGB565(bufpix);
 800b12c:	77bb      	strb	r3, [r7, #30]
    return ((((R * alpha + fbred * ialpha) / 255) << 8) & RMASK) |
 800b12e:	f897 3031 	ldrb.w	r3, [r7, #49]	@ 0x31
 800b132:	f897 202b 	ldrb.w	r2, [r7, #43]	@ 0x2b
 800b136:	fb03 f202 	mul.w	r2, r3, r2
 800b13a:	f897 3026 	ldrb.w	r3, [r7, #38]	@ 0x26
 800b13e:	f897 102a 	ldrb.w	r1, [r7, #42]	@ 0x2a
 800b142:	fb01 f303 	mul.w	r3, r1, r3
 800b146:	4413      	add	r3, r2
 800b148:	4a2d      	ldr	r2, [pc, #180]	@ (800b200 <_ZN8touchgfx5paint6rgb56516lineFromARGB8888EPtPKmjh+0x240>)
 800b14a:	fb82 1203 	smull	r1, r2, r2, r3
 800b14e:	441a      	add	r2, r3
 800b150:	11d2      	asrs	r2, r2, #7
 800b152:	17db      	asrs	r3, r3, #31
 800b154:	1ad3      	subs	r3, r2, r3
 800b156:	021b      	lsls	r3, r3, #8
 800b158:	b21b      	sxth	r3, r3
 800b15a:	f423 63ff 	bic.w	r3, r3, #2040	@ 0x7f8
 800b15e:	f023 0307 	bic.w	r3, r3, #7
 800b162:	b21a      	sxth	r2, r3
           ((((G * alpha + fbgreen * ialpha) / 255) << 3) & GMASK) |
 800b164:	f897 3030 	ldrb.w	r3, [r7, #48]	@ 0x30
 800b168:	f897 102b 	ldrb.w	r1, [r7, #43]	@ 0x2b
 800b16c:	fb03 f101 	mul.w	r1, r3, r1
 800b170:	f897 3022 	ldrb.w	r3, [r7, #34]	@ 0x22
 800b174:	f897 002a 	ldrb.w	r0, [r7, #42]	@ 0x2a
 800b178:	fb00 f303 	mul.w	r3, r0, r3
 800b17c:	440b      	add	r3, r1
 800b17e:	4920      	ldr	r1, [pc, #128]	@ (800b200 <_ZN8touchgfx5paint6rgb56516lineFromARGB8888EPtPKmjh+0x240>)
 800b180:	fb81 0103 	smull	r0, r1, r1, r3
 800b184:	4419      	add	r1, r3
 800b186:	11c9      	asrs	r1, r1, #7
 800b188:	17db      	asrs	r3, r3, #31
 800b18a:	1acb      	subs	r3, r1, r3
 800b18c:	00db      	lsls	r3, r3, #3
 800b18e:	b21b      	sxth	r3, r3
 800b190:	f403 63fc 	and.w	r3, r3, #2016	@ 0x7e0
 800b194:	b21b      	sxth	r3, r3
    return ((((R * alpha + fbred * ialpha) / 255) << 8) & RMASK) |
 800b196:	4313      	orrs	r3, r2
 800b198:	b21a      	sxth	r2, r3
           ((((B * alpha + fbblue * ialpha) / 255) >> 3) & BMASK);
 800b19a:	f897 302f 	ldrb.w	r3, [r7, #47]	@ 0x2f
 800b19e:	f897 102b 	ldrb.w	r1, [r7, #43]	@ 0x2b
 800b1a2:	fb03 f101 	mul.w	r1, r3, r1
 800b1a6:	7fbb      	ldrb	r3, [r7, #30]
 800b1a8:	f897 002a 	ldrb.w	r0, [r7, #42]	@ 0x2a
 800b1ac:	fb00 f303 	mul.w	r3, r0, r3
 800b1b0:	440b      	add	r3, r1
 800b1b2:	4913      	ldr	r1, [pc, #76]	@ (800b200 <_ZN8touchgfx5paint6rgb56516lineFromARGB8888EPtPKmjh+0x240>)
 800b1b4:	fb81 0103 	smull	r0, r1, r1, r3
 800b1b8:	4419      	add	r1, r3
 800b1ba:	11c9      	asrs	r1, r1, #7
 800b1bc:	17db      	asrs	r3, r3, #31
 800b1be:	1acb      	subs	r3, r1, r3
 800b1c0:	10db      	asrs	r3, r3, #3
 800b1c2:	b21b      	sxth	r3, r3
 800b1c4:	f003 031f 	and.w	r3, r3, #31
 800b1c8:	b21b      	sxth	r3, r3
           ((((G * alpha + fbgreen * ialpha) / 255) << 3) & GMASK) |
 800b1ca:	4313      	orrs	r3, r2
 800b1cc:	b21b      	sxth	r3, r3
           ((((B * alpha + fbblue * ialpha) / 255) >> 3) & BMASK);
 800b1ce:	b29a      	uxth	r2, r3
            *framebuffer = alphaBlend24bit((newpix >> 16), (newpix >> 8), (newpix), *framebuffer, a);
 800b1d0:	6c7b      	ldr	r3, [r7, #68]	@ 0x44
 800b1d2:	801a      	strh	r2, [r3, #0]
        }
        bitmapPointer++;
 800b1d4:	6c3b      	ldr	r3, [r7, #64]	@ 0x40
 800b1d6:	3304      	adds	r3, #4
 800b1d8:	643b      	str	r3, [r7, #64]	@ 0x40
    } while (++framebuffer < chunkend);
 800b1da:	6c7b      	ldr	r3, [r7, #68]	@ 0x44
 800b1dc:	3302      	adds	r3, #2
 800b1de:	647b      	str	r3, [r7, #68]	@ 0x44
 800b1e0:	6c7a      	ldr	r2, [r7, #68]	@ 0x44
 800b1e2:	6bfb      	ldr	r3, [r7, #60]	@ 0x3c
 800b1e4:	429a      	cmp	r2, r3
 800b1e6:	bf34      	ite	cc
 800b1e8:	2301      	movcc	r3, #1
 800b1ea:	2300      	movcs	r3, #0
 800b1ec:	b2db      	uxtb	r3, r3
 800b1ee:	2b00      	cmp	r3, #0
 800b1f0:	f47f aef6 	bne.w	800afe0 <_ZN8touchgfx5paint6rgb56516lineFromARGB8888EPtPKmjh+0x20>
}
 800b1f4:	bf00      	nop
 800b1f6:	bf00      	nop
 800b1f8:	374c      	adds	r7, #76	@ 0x4c
 800b1fa:	46bd      	mov	sp, r7
 800b1fc:	bd90      	pop	{r4, r7, pc}
 800b1fe:	bf00      	nop
 800b200:	80808081 	.word	0x80808081

0800b204 <_ZN20TouchGFXGeneratedHAL10initializeEv>:
       3, /* number of blocks */
       2 /* bytes per pixel */
       > blockAllocator;

void TouchGFXGeneratedHAL::initialize()
{
 800b204:	b5b0      	push	{r4, r5, r7, lr}
 800b206:	b082      	sub	sp, #8
 800b208:	af00      	add	r7, sp, #0
 800b20a:	6078      	str	r0, [r7, #4]
    HAL::initialize();
 800b20c:	687b      	ldr	r3, [r7, #4]
 800b20e:	4618      	mov	r0, r3
 800b210:	f000 fedb 	bl	800bfca <_ZN8touchgfx3HAL10initializeEv>
    registerEventListener(*(Application::getInstance()));
 800b214:	687d      	ldr	r5, [r7, #4]
 800b216:	687b      	ldr	r3, [r7, #4]
 800b218:	681b      	ldr	r3, [r3, #0]
 800b21a:	3364      	adds	r3, #100	@ 0x64
 800b21c:	681c      	ldr	r4, [r3, #0]
 800b21e:	f003 ff77 	bl	800f110 <_ZN8touchgfx11Application11getInstanceEv>
 800b222:	4603      	mov	r3, r0
 800b224:	4619      	mov	r1, r3
 800b226:	4628      	mov	r0, r5
 800b228:	47a0      	blx	r4
    enableLCDControllerInterrupt();
 800b22a:	687b      	ldr	r3, [r7, #4]
 800b22c:	681b      	ldr	r3, [r3, #0]
 800b22e:	3380      	adds	r3, #128	@ 0x80
 800b230:	681b      	ldr	r3, [r3, #0]
 800b232:	6878      	ldr	r0, [r7, #4]
 800b234:	4798      	blx	r3
    enableInterrupts();
 800b236:	687b      	ldr	r3, [r7, #4]
 800b238:	681b      	ldr	r3, [r3, #0]
 800b23a:	3378      	adds	r3, #120	@ 0x78
 800b23c:	681b      	ldr	r3, [r3, #0]
 800b23e:	6878      	ldr	r0, [r7, #4]
 800b240:	4798      	blx	r3
    // Partial framebuffer strategy
    setFrameBufferAllocator(&blockAllocator);
 800b242:	687b      	ldr	r3, [r7, #4]
 800b244:	4906      	ldr	r1, [pc, #24]	@ (800b260 <_ZN20TouchGFXGeneratedHAL10initializeEv+0x5c>)
 800b246:	4618      	mov	r0, r3
 800b248:	f7ff fda6 	bl	800ad98 <_ZN8touchgfx3HAL23setFrameBufferAllocatorEPNS_20FrameBufferAllocatorE>
    setFrameRefreshStrategy(HAL::REFRESH_STRATEGY_PARTIAL_FRAMEBUFFER);
 800b24c:	687b      	ldr	r3, [r7, #4]
 800b24e:	2102      	movs	r1, #2
 800b250:	4618      	mov	r0, r3
 800b252:	f7ff fdbb 	bl	800adcc <_ZN8touchgfx3HAL23setFrameRefreshStrategyENS0_20FrameRefreshStrategyE>
}
 800b256:	bf00      	nop
 800b258:	3708      	adds	r7, #8
 800b25a:	46bd      	mov	sp, r7
 800b25c:	bdb0      	pop	{r4, r5, r7, pc}
 800b25e:	bf00      	nop
 800b260:	20000a68 	.word	0x20000a68

0800b264 <_ZN20TouchGFXGeneratedHAL19configureInterruptsEv>:

void TouchGFXGeneratedHAL::configureInterrupts()
{
 800b264:	b480      	push	{r7}
 800b266:	b083      	sub	sp, #12
 800b268:	af00      	add	r7, sp, #0
 800b26a:	6078      	str	r0, [r7, #4]
}
 800b26c:	bf00      	nop
 800b26e:	370c      	adds	r7, #12
 800b270:	46bd      	mov	sp, r7
 800b272:	f85d 7b04 	ldr.w	r7, [sp], #4
 800b276:	4770      	bx	lr

0800b278 <_ZN20TouchGFXGeneratedHAL16enableInterruptsEv>:

void TouchGFXGeneratedHAL::enableInterrupts()
{
 800b278:	b480      	push	{r7}
 800b27a:	b083      	sub	sp, #12
 800b27c:	af00      	add	r7, sp, #0
 800b27e:	6078      	str	r0, [r7, #4]
}
 800b280:	bf00      	nop
 800b282:	370c      	adds	r7, #12
 800b284:	46bd      	mov	sp, r7
 800b286:	f85d 7b04 	ldr.w	r7, [sp], #4
 800b28a:	4770      	bx	lr

0800b28c <_ZN20TouchGFXGeneratedHAL17disableInterruptsEv>:

void TouchGFXGeneratedHAL::disableInterrupts()
{
 800b28c:	b480      	push	{r7}
 800b28e:	b083      	sub	sp, #12
 800b290:	af00      	add	r7, sp, #0
 800b292:	6078      	str	r0, [r7, #4]
}
 800b294:	bf00      	nop
 800b296:	370c      	adds	r7, #12
 800b298:	46bd      	mov	sp, r7
 800b29a:	f85d 7b04 	ldr.w	r7, [sp], #4
 800b29e:	4770      	bx	lr

0800b2a0 <_ZN20TouchGFXGeneratedHAL28enableLCDControllerInterruptEv>:

void TouchGFXGeneratedHAL::enableLCDControllerInterrupt()
{
 800b2a0:	b480      	push	{r7}
 800b2a2:	b083      	sub	sp, #12
 800b2a4:	af00      	add	r7, sp, #0
 800b2a6:	6078      	str	r0, [r7, #4]
}
 800b2a8:	bf00      	nop
 800b2aa:	370c      	adds	r7, #12
 800b2ac:	46bd      	mov	sp, r7
 800b2ae:	f85d 7b04 	ldr.w	r7, [sp], #4
 800b2b2:	4770      	bx	lr

0800b2b4 <_ZN20TouchGFXGeneratedHAL10beginFrameEv>:

bool TouchGFXGeneratedHAL::beginFrame()
{
 800b2b4:	b580      	push	{r7, lr}
 800b2b6:	b082      	sub	sp, #8
 800b2b8:	af00      	add	r7, sp, #0
 800b2ba:	6078      	str	r0, [r7, #4]
    return HAL::beginFrame();
 800b2bc:	687b      	ldr	r3, [r7, #4]
 800b2be:	4618      	mov	r0, r3
 800b2c0:	f000 fe6a 	bl	800bf98 <_ZN8touchgfx3HAL10beginFrameEv>
 800b2c4:	4603      	mov	r3, r0
}
 800b2c6:	4618      	mov	r0, r3
 800b2c8:	3708      	adds	r7, #8
 800b2ca:	46bd      	mov	sp, r7
 800b2cc:	bd80      	pop	{r7, pc}

0800b2ce <_ZN20TouchGFXGeneratedHAL8endFrameEv>:

void TouchGFXGeneratedHAL::endFrame()
{
 800b2ce:	b580      	push	{r7, lr}
 800b2d0:	b082      	sub	sp, #8
 800b2d2:	af00      	add	r7, sp, #0
 800b2d4:	6078      	str	r0, [r7, #4]
    // We must guard the next frame until we're done transferring all blocks over our display interface
    // through either a semaphore if user is running an OS or a simple variable if not
    // Wait until all blocks have been transmitted
    while (touchgfxDisplayDriverTransmitActive()){}
 800b2d6:	bf00      	nop
 800b2d8:	f7f6 fa5c 	bl	8001794 <touchgfxDisplayDriverTransmitActive>
 800b2dc:	4603      	mov	r3, r0
 800b2de:	2b00      	cmp	r3, #0
 800b2e0:	bf14      	ite	ne
 800b2e2:	2301      	movne	r3, #1
 800b2e4:	2300      	moveq	r3, #0
 800b2e6:	b2db      	uxtb	r3, r3
 800b2e8:	2b00      	cmp	r3, #0
 800b2ea:	d1f5      	bne.n	800b2d8 <_ZN20TouchGFXGeneratedHAL8endFrameEv+0xa>

    HAL::endFrame();
 800b2ec:	687b      	ldr	r3, [r7, #4]
 800b2ee:	4618      	mov	r0, r3
 800b2f0:	f000 fe5e 	bl	800bfb0 <_ZN8touchgfx3HAL8endFrameEv>
    touchgfx::OSWrappers::signalRenderingDone();
 800b2f4:	f7fe fed0 	bl	800a098 <_ZN8touchgfx10OSWrappers19signalRenderingDoneEv>
}
 800b2f8:	bf00      	nop
 800b2fa:	3708      	adds	r7, #8
 800b2fc:	46bd      	mov	sp, r7
 800b2fe:	bd80      	pop	{r7, pc}

0800b300 <_ZNK20TouchGFXGeneratedHAL17getTFTFrameBufferEv>:
    fbPtr += rect.y * lcd().framebufferStride() + rect.x * 2;
    return fbPtr;
}

uint16_t* TouchGFXGeneratedHAL::getTFTFrameBuffer() const
{
 800b300:	b480      	push	{r7}
 800b302:	b083      	sub	sp, #12
 800b304:	af00      	add	r7, sp, #0
 800b306:	6078      	str	r0, [r7, #4]
    //getTFTFrameBuffer() not used for selected Frame Buffer Strategy
    return 0;
 800b308:	2300      	movs	r3, #0
}
 800b30a:	4618      	mov	r0, r3
 800b30c:	370c      	adds	r7, #12
 800b30e:	46bd      	mov	sp, r7
 800b310:	f85d 7b04 	ldr.w	r7, [sp], #4
 800b314:	4770      	bx	lr

0800b316 <_ZN20TouchGFXGeneratedHAL17setTFTFrameBufferEPt>:

void TouchGFXGeneratedHAL::setTFTFrameBuffer(uint16_t* adr)
{
 800b316:	b480      	push	{r7}
 800b318:	b083      	sub	sp, #12
 800b31a:	af00      	add	r7, sp, #0
 800b31c:	6078      	str	r0, [r7, #4]
 800b31e:	6039      	str	r1, [r7, #0]
    //setTFTFrameBuffer() not used for selected display interface
}
 800b320:	bf00      	nop
 800b322:	370c      	adds	r7, #12
 800b324:	46bd      	mov	sp, r7
 800b326:	f85d 7b04 	ldr.w	r7, [sp], #4
 800b32a:	4770      	bx	lr

0800b32c <_ZN20TouchGFXGeneratedHAL16flushFrameBufferERKN8touchgfx4RectE>:

void TouchGFXGeneratedHAL::flushFrameBuffer(const touchgfx::Rect& rect)
{
 800b32c:	b580      	push	{r7, lr}
 800b32e:	b088      	sub	sp, #32
 800b330:	af02      	add	r7, sp, #8
 800b332:	6078      	str	r0, [r7, #4]
 800b334:	6039      	str	r1, [r7, #0]
    HAL::flushFrameBuffer(rect);
 800b336:	687b      	ldr	r3, [r7, #4]
 800b338:	6839      	ldr	r1, [r7, #0]
 800b33a:	4618      	mov	r0, r3
 800b33c:	f000 fdf6 	bl	800bf2c <_ZN8touchgfx3HAL16flushFrameBufferERKNS_4RectE>
    // Once flushFrameBuffer() is called by the framework a block is already for transfer
    // Mark it ready for transfer and transmit it if user defined method isTransmittingData() does not return false
    // If data is not being transmitted, transfer the data with user defined method transmitFrameBufferBlock().
    frameBufferAllocator->markBlockReadyForTransfer();
 800b340:	687b      	ldr	r3, [r7, #4]
 800b342:	699a      	ldr	r2, [r3, #24]
 800b344:	687b      	ldr	r3, [r7, #4]
 800b346:	699b      	ldr	r3, [r3, #24]
 800b348:	681b      	ldr	r3, [r3, #0]
 800b34a:	3304      	adds	r3, #4
 800b34c:	681b      	ldr	r3, [r3, #0]
 800b34e:	4610      	mov	r0, r2
 800b350:	4798      	blx	r3
    if (!touchgfxDisplayDriverTransmitActive())
 800b352:	f7f6 fa1f 	bl	8001794 <touchgfxDisplayDriverTransmitActive>
 800b356:	4603      	mov	r3, r0
 800b358:	2b00      	cmp	r3, #0
 800b35a:	bf0c      	ite	eq
 800b35c:	2301      	moveq	r3, #1
 800b35e:	2300      	movne	r3, #0
 800b360:	b2db      	uxtb	r3, r3
 800b362:	2b00      	cmp	r3, #0
 800b364:	d021      	beq.n	800b3aa <_ZN20TouchGFXGeneratedHAL16flushFrameBufferERKN8touchgfx4RectE+0x7e>
    {
        touchgfx::Rect r;
 800b366:	f107 030c 	add.w	r3, r7, #12
 800b36a:	4618      	mov	r0, r3
 800b36c:	f7fc fe59 	bl	8008022 <_ZN8touchgfx4RectC1Ev>
        // Get pointer to block buffer and coordinates of the rect
        const uint8_t* pixels = frameBufferAllocator->getBlockForTransfer(r);
 800b370:	687b      	ldr	r3, [r7, #4]
 800b372:	699a      	ldr	r2, [r3, #24]
 800b374:	687b      	ldr	r3, [r7, #4]
 800b376:	699b      	ldr	r3, [r3, #24]
 800b378:	681b      	ldr	r3, [r3, #0]
 800b37a:	330c      	adds	r3, #12
 800b37c:	681b      	ldr	r3, [r3, #0]
 800b37e:	f107 010c 	add.w	r1, r7, #12
 800b382:	4610      	mov	r0, r2
 800b384:	4798      	blx	r3
 800b386:	6178      	str	r0, [r7, #20]
        // Start transmission of the block
        touchgfxDisplayDriverTransmitBlock((uint8_t*)pixels, r.x, r.y, r.width, r.height);
 800b388:	f9b7 300c 	ldrsh.w	r3, [r7, #12]
 800b38c:	b299      	uxth	r1, r3
 800b38e:	f9b7 300e 	ldrsh.w	r3, [r7, #14]
 800b392:	b29a      	uxth	r2, r3
 800b394:	f9b7 3010 	ldrsh.w	r3, [r7, #16]
 800b398:	b298      	uxth	r0, r3
 800b39a:	f9b7 3012 	ldrsh.w	r3, [r7, #18]
 800b39e:	b29b      	uxth	r3, r3
 800b3a0:	9300      	str	r3, [sp, #0]
 800b3a2:	4603      	mov	r3, r0
 800b3a4:	6978      	ldr	r0, [r7, #20]
 800b3a6:	f7f6 fa07 	bl	80017b8 <touchgfxDisplayDriverTransmitBlock>
    }
}
 800b3aa:	bf00      	nop
 800b3ac:	3718      	adds	r7, #24
 800b3ae:	46bd      	mov	sp, r7
 800b3b0:	bd80      	pop	{r7, pc}

0800b3b2 <_ZN20TouchGFXGeneratedHAL9blockCopyEPvPKvm>:

bool TouchGFXGeneratedHAL::blockCopy(void* RESTRICT dest, const void* RESTRICT src, uint32_t numBytes)
{
 800b3b2:	b580      	push	{r7, lr}
 800b3b4:	b084      	sub	sp, #16
 800b3b6:	af00      	add	r7, sp, #0
 800b3b8:	60f8      	str	r0, [r7, #12]
 800b3ba:	60b9      	str	r1, [r7, #8]
 800b3bc:	607a      	str	r2, [r7, #4]
 800b3be:	603b      	str	r3, [r7, #0]
    return HAL::blockCopy(dest, src, numBytes);
 800b3c0:	68f8      	ldr	r0, [r7, #12]
 800b3c2:	683b      	ldr	r3, [r7, #0]
 800b3c4:	687a      	ldr	r2, [r7, #4]
 800b3c6:	68b9      	ldr	r1, [r7, #8]
 800b3c8:	f000 ff21 	bl	800c20e <_ZN8touchgfx3HAL9blockCopyEPvPKvm>
 800b3cc:	4603      	mov	r3, r0
}
 800b3ce:	4618      	mov	r0, r3
 800b3d0:	3710      	adds	r7, #16
 800b3d2:	46bd      	mov	sp, r7
 800b3d4:	bd80      	pop	{r7, pc}

0800b3d6 <_ZN8touchgfx34FrameBufferAllocatorWaitOnTransferEv>:
/**
 * This function is called by FrameBufferAllocator if no block is
 * available.
 */
void FrameBufferAllocatorWaitOnTransfer()
{
 800b3d6:	b480      	push	{r7}
 800b3d8:	af00      	add	r7, sp, #0
    /* NOTE: This function should not be modified, when the fuction is needed,
     *       FrameBufferAllocatorWaitOnTransfer should be implemented in the user file
     */
}
 800b3da:	bf00      	nop
 800b3dc:	46bd      	mov	sp, r7
 800b3de:	f85d 7b04 	ldr.w	r7, [sp], #4
 800b3e2:	4770      	bx	lr

0800b3e4 <_ZN8touchgfx36FrameBufferAllocatorSignalBlockDrawnEv>:
 * Called by FrameBufferAllocator when a block is drawn and
 * therefore ready for transfer. The LCD driver should use this
 * method to start a transfer.
 */
void FrameBufferAllocatorSignalBlockDrawn()
{
 800b3e4:	b480      	push	{r7}
 800b3e6:	af00      	add	r7, sp, #0
    /* NOTE: This function should not be modified, when the fuction is needed,
     *       FrameBufferAllocatorSignalBlockDrawn should be implemented in the user file
     */
}
 800b3e8:	bf00      	nop
 800b3ea:	46bd      	mov	sp, r7
 800b3ec:	f85d 7b04 	ldr.w	r7, [sp], #4
 800b3f0:	4770      	bx	lr

0800b3f2 <_ZN8touchgfx16startNewTransferEv>:

// A user must call touchgfx::startNewTransfer(); once transmitFrameBufferBlock() has successfully sent a block.
void startNewTransfer()
{
 800b3f2:	b580      	push	{r7, lr}
 800b3f4:	b086      	sub	sp, #24
 800b3f6:	af02      	add	r7, sp, #8
    FrameBufferAllocator* fba = HAL::getInstance()->getFrameBufferAllocator();
 800b3f8:	f7fc f974 	bl	80076e4 <_ZN8touchgfx3HAL11getInstanceEv>
 800b3fc:	4603      	mov	r3, r0
 800b3fe:	4618      	mov	r0, r3
 800b400:	f7ff fcd8 	bl	800adb4 <_ZN8touchgfx3HAL23getFrameBufferAllocatorEv>
 800b404:	60f8      	str	r0, [r7, #12]

    // Free the previous transmitted block, marking it ready for rendering
    fba->freeBlockAfterTransfer();
 800b406:	68fb      	ldr	r3, [r7, #12]
 800b408:	681b      	ldr	r3, [r3, #0]
 800b40a:	3318      	adds	r3, #24
 800b40c:	681b      	ldr	r3, [r3, #0]
 800b40e:	68f8      	ldr	r0, [r7, #12]
 800b410:	4798      	blx	r3
    if (fba->hasBlockReadyForTransfer())
 800b412:	68fb      	ldr	r3, [r7, #12]
 800b414:	681b      	ldr	r3, [r3, #0]
 800b416:	3308      	adds	r3, #8
 800b418:	681b      	ldr	r3, [r3, #0]
 800b41a:	68f8      	ldr	r0, [r7, #12]
 800b41c:	4798      	blx	r3
 800b41e:	4603      	mov	r3, r0
 800b420:	2b00      	cmp	r3, #0
 800b422:	d01d      	beq.n	800b460 <_ZN8touchgfx16startNewTransferEv+0x6e>
    {
        touchgfx::Rect r;
 800b424:	463b      	mov	r3, r7
 800b426:	4618      	mov	r0, r3
 800b428:	f7fc fdfb 	bl	8008022 <_ZN8touchgfx4RectC1Ev>
        // Get pointer to block buffer and coordinates of the rect
        const uint8_t* pixels = fba->getBlockForTransfer(r);
 800b42c:	68fb      	ldr	r3, [r7, #12]
 800b42e:	681b      	ldr	r3, [r3, #0]
 800b430:	330c      	adds	r3, #12
 800b432:	681b      	ldr	r3, [r3, #0]
 800b434:	463a      	mov	r2, r7
 800b436:	4611      	mov	r1, r2
 800b438:	68f8      	ldr	r0, [r7, #12]
 800b43a:	4798      	blx	r3
 800b43c:	60b8      	str	r0, [r7, #8]
        // Start transmission of the block
        touchgfxDisplayDriverTransmitBlock((uint8_t*)pixels, r.x, r.y, r.width, r.height);
 800b43e:	f9b7 3000 	ldrsh.w	r3, [r7]
 800b442:	b299      	uxth	r1, r3
 800b444:	f9b7 3002 	ldrsh.w	r3, [r7, #2]
 800b448:	b29a      	uxth	r2, r3
 800b44a:	f9b7 3004 	ldrsh.w	r3, [r7, #4]
 800b44e:	b298      	uxth	r0, r3
 800b450:	f9b7 3006 	ldrsh.w	r3, [r7, #6]
 800b454:	b29b      	uxth	r3, r3
 800b456:	9300      	str	r3, [sp, #0]
 800b458:	4603      	mov	r3, r0
 800b45a:	68b8      	ldr	r0, [r7, #8]
 800b45c:	f7f6 f9ac 	bl	80017b8 <touchgfxDisplayDriverTransmitBlock>
    }
}
 800b460:	bf00      	nop
 800b462:	3710      	adds	r7, #16
 800b464:	46bd      	mov	sp, r7
 800b466:	bd80      	pop	{r7, pc}

0800b468 <DisplayDriver_TransferCompleteCallback>:

extern "C"
void DisplayDriver_TransferCompleteCallback()
{
 800b468:	b580      	push	{r7, lr}
 800b46a:	af00      	add	r7, sp, #0
    // After completed transmission start new transfer if blocks are ready.
    touchgfx::startNewTransfer();
 800b46c:	f7ff ffc1 	bl	800b3f2 <_ZN8touchgfx16startNewTransferEv>
}
 800b470:	bf00      	nop
 800b472:	bd80      	pop	{r7, pc}

0800b474 <touchgfxSignalVSync>:
}

extern "C"
void touchgfxSignalVSync(void)
{
 800b474:	b580      	push	{r7, lr}
 800b476:	af00      	add	r7, sp, #0
    /* VSync has occurred, increment TouchGFX engine vsync counter */
    touchgfx::HAL::getInstance()->vSync();
 800b478:	f7fc f934 	bl	80076e4 <_ZN8touchgfx3HAL11getInstanceEv>
 800b47c:	4603      	mov	r3, r0
 800b47e:	4618      	mov	r0, r3
 800b480:	f7ff fc78 	bl	800ad74 <_ZN8touchgfx3HAL5vSyncEv>

    /* VSync has occurred, signal TouchGFX engine */
    touchgfx::OSWrappers::signalVSync();
 800b484:	f7fe fdfc 	bl	800a080 <_ZN8touchgfx10OSWrappers11signalVSyncEv>
}
 800b488:	bf00      	nop
 800b48a:	bd80      	pop	{r7, pc}

0800b48c <_ZN8touchgfx20FrameBufferAllocatorC1Ev>:
class FrameBufferAllocator
 800b48c:	b480      	push	{r7}
 800b48e:	b083      	sub	sp, #12
 800b490:	af00      	add	r7, sp, #0
 800b492:	6078      	str	r0, [r7, #4]
 800b494:	4a04      	ldr	r2, [pc, #16]	@ (800b4a8 <_ZN8touchgfx20FrameBufferAllocatorC1Ev+0x1c>)
 800b496:	687b      	ldr	r3, [r7, #4]
 800b498:	601a      	str	r2, [r3, #0]
 800b49a:	687b      	ldr	r3, [r7, #4]
 800b49c:	4618      	mov	r0, r3
 800b49e:	370c      	adds	r7, #12
 800b4a0:	46bd      	mov	sp, r7
 800b4a2:	f85d 7b04 	ldr.w	r7, [sp], #4
 800b4a6:	4770      	bx	lr
 800b4a8:	080231a0 	.word	0x080231a0

0800b4ac <_ZN8touchgfx18ManyBlockAllocatorILm2880ELm3ELm2EEC1Ev>:
 */
template <uint32_t block_size, uint32_t blocks, uint32_t bytes_pr_pixel>
class ManyBlockAllocator : public FrameBufferAllocator
{
public:
    ManyBlockAllocator()
 800b4ac:	b5b0      	push	{r4, r5, r7, lr}
 800b4ae:	b084      	sub	sp, #16
 800b4b0:	af00      	add	r7, sp, #0
 800b4b2:	6078      	str	r0, [r7, #4]
    {
 800b4b4:	687b      	ldr	r3, [r7, #4]
 800b4b6:	4618      	mov	r0, r3
 800b4b8:	f7ff ffe8 	bl	800b48c <_ZN8touchgfx20FrameBufferAllocatorC1Ev>
 800b4bc:	4a1a      	ldr	r2, [pc, #104]	@ (800b528 <_ZN8touchgfx18ManyBlockAllocatorILm2880ELm3ELm2EEC1Ev+0x7c>)
 800b4be:	687b      	ldr	r3, [r7, #4]
 800b4c0:	601a      	str	r2, [r3, #0]
 800b4c2:	687b      	ldr	r3, [r7, #4]
 800b4c4:	f503 5307 	add.w	r3, r3, #8640	@ 0x21c0
 800b4c8:	3308      	adds	r3, #8
 800b4ca:	2402      	movs	r4, #2
 800b4cc:	461d      	mov	r5, r3
 800b4ce:	e004      	b.n	800b4da <_ZN8touchgfx18ManyBlockAllocatorILm2880ELm3ELm2EEC1Ev+0x2e>
 800b4d0:	4628      	mov	r0, r5
 800b4d2:	f7fc fda6 	bl	8008022 <_ZN8touchgfx4RectC1Ev>
 800b4d6:	3c01      	subs	r4, #1
 800b4d8:	3508      	adds	r5, #8
 800b4da:	2c00      	cmp	r4, #0
 800b4dc:	daf8      	bge.n	800b4d0 <_ZN8touchgfx18ManyBlockAllocatorILm2880ELm3ELm2EEC1Ev+0x24>
        sendingBlock = -1;
 800b4de:	687b      	ldr	r3, [r7, #4]
 800b4e0:	f503 5300 	add.w	r3, r3, #8192	@ 0x2000
 800b4e4:	461a      	mov	r2, r3
 800b4e6:	f04f 33ff 	mov.w	r3, #4294967295
 800b4ea:	f8c2 31e0 	str.w	r3, [r2, #480]	@ 0x1e0
        drawingBlock = -1;
 800b4ee:	687b      	ldr	r3, [r7, #4]
 800b4f0:	f503 5300 	add.w	r3, r3, #8192	@ 0x2000
 800b4f4:	461a      	mov	r2, r3
 800b4f6:	f04f 33ff 	mov.w	r3, #4294967295
 800b4fa:	f8c2 31e4 	str.w	r3, [r2, #484]	@ 0x1e4
        for (uint32_t i = 0; i < blocks; i++)
 800b4fe:	2300      	movs	r3, #0
 800b500:	60fb      	str	r3, [r7, #12]
 800b502:	e008      	b.n	800b516 <_ZN8touchgfx18ManyBlockAllocatorILm2880ELm3ELm2EEC1Ev+0x6a>
        {
            state[i] = EMPTY;
 800b504:	687a      	ldr	r2, [r7, #4]
 800b506:	68fb      	ldr	r3, [r7, #12]
 800b508:	4413      	add	r3, r2
 800b50a:	3304      	adds	r3, #4
 800b50c:	2200      	movs	r2, #0
 800b50e:	701a      	strb	r2, [r3, #0]
        for (uint32_t i = 0; i < blocks; i++)
 800b510:	68fb      	ldr	r3, [r7, #12]
 800b512:	3301      	adds	r3, #1
 800b514:	60fb      	str	r3, [r7, #12]
 800b516:	68fb      	ldr	r3, [r7, #12]
 800b518:	2b02      	cmp	r3, #2
 800b51a:	d9f3      	bls.n	800b504 <_ZN8touchgfx18ManyBlockAllocatorILm2880ELm3ELm2EEC1Ev+0x58>
        }
    }
 800b51c:	687b      	ldr	r3, [r7, #4]
 800b51e:	4618      	mov	r0, r3
 800b520:	3710      	adds	r7, #16
 800b522:	46bd      	mov	sp, r7
 800b524:	bdb0      	pop	{r4, r5, r7, pc}
 800b526:	bf00      	nop
 800b528:	0802309c 	.word	0x0802309c

0800b52c <_ZN8touchgfx18ManyBlockAllocatorILm2880ELm3ELm2EED1Ev>:
class ManyBlockAllocator : public FrameBufferAllocator
 800b52c:	b580      	push	{r7, lr}
 800b52e:	b082      	sub	sp, #8
 800b530:	af00      	add	r7, sp, #0
 800b532:	6078      	str	r0, [r7, #4]
 800b534:	4a05      	ldr	r2, [pc, #20]	@ (800b54c <_ZN8touchgfx18ManyBlockAllocatorILm2880ELm3ELm2EED1Ev+0x20>)
 800b536:	687b      	ldr	r3, [r7, #4]
 800b538:	601a      	str	r2, [r3, #0]
 800b53a:	687b      	ldr	r3, [r7, #4]
 800b53c:	4618      	mov	r0, r3
 800b53e:	f7ff fbf9 	bl	800ad34 <_ZN8touchgfx20FrameBufferAllocatorD1Ev>
 800b542:	687b      	ldr	r3, [r7, #4]
 800b544:	4618      	mov	r0, r3
 800b546:	3708      	adds	r7, #8
 800b548:	46bd      	mov	sp, r7
 800b54a:	bd80      	pop	{r7, pc}
 800b54c:	0802309c 	.word	0x0802309c

0800b550 <_ZN8touchgfx18ManyBlockAllocatorILm2880ELm3ELm2EED0Ev>:
 800b550:	b580      	push	{r7, lr}
 800b552:	b082      	sub	sp, #8
 800b554:	af00      	add	r7, sp, #0
 800b556:	6078      	str	r0, [r7, #4]
 800b558:	6878      	ldr	r0, [r7, #4]
 800b55a:	f7ff ffe7 	bl	800b52c <_ZN8touchgfx18ManyBlockAllocatorILm2880ELm3ELm2EED1Ev>
 800b55e:	f242 11e8 	movw	r1, #8680	@ 0x21e8
 800b562:	6878      	ldr	r0, [r7, #4]
 800b564:	f015 f925 	bl	80207b2 <_ZdlPvj>
 800b568:	687b      	ldr	r3, [r7, #4]
 800b56a:	4618      	mov	r0, r3
 800b56c:	3708      	adds	r7, #8
 800b56e:	46bd      	mov	sp, r7
 800b570:	bd80      	pop	{r7, pc}
	...

0800b574 <_Z41__static_initialization_and_destruction_0ii>:
 800b574:	b580      	push	{r7, lr}
 800b576:	b082      	sub	sp, #8
 800b578:	af00      	add	r7, sp, #0
 800b57a:	6078      	str	r0, [r7, #4]
 800b57c:	6039      	str	r1, [r7, #0]
 800b57e:	687b      	ldr	r3, [r7, #4]
 800b580:	2b01      	cmp	r3, #1
 800b582:	d107      	bne.n	800b594 <_Z41__static_initialization_and_destruction_0ii+0x20>
 800b584:	683b      	ldr	r3, [r7, #0]
 800b586:	f64f 72ff 	movw	r2, #65535	@ 0xffff
 800b58a:	4293      	cmp	r3, r2
 800b58c:	d102      	bne.n	800b594 <_Z41__static_initialization_and_destruction_0ii+0x20>
       > blockAllocator;
 800b58e:	4809      	ldr	r0, [pc, #36]	@ (800b5b4 <_Z41__static_initialization_and_destruction_0ii+0x40>)
 800b590:	f7ff ff8c 	bl	800b4ac <_ZN8touchgfx18ManyBlockAllocatorILm2880ELm3ELm2EEC1Ev>
 800b594:	687b      	ldr	r3, [r7, #4]
 800b596:	2b00      	cmp	r3, #0
 800b598:	d107      	bne.n	800b5aa <_Z41__static_initialization_and_destruction_0ii+0x36>
 800b59a:	683b      	ldr	r3, [r7, #0]
 800b59c:	f64f 72ff 	movw	r2, #65535	@ 0xffff
 800b5a0:	4293      	cmp	r3, r2
 800b5a2:	d102      	bne.n	800b5aa <_Z41__static_initialization_and_destruction_0ii+0x36>
 800b5a4:	4803      	ldr	r0, [pc, #12]	@ (800b5b4 <_Z41__static_initialization_and_destruction_0ii+0x40>)
 800b5a6:	f7ff ffc1 	bl	800b52c <_ZN8touchgfx18ManyBlockAllocatorILm2880ELm3ELm2EED1Ev>
}
 800b5aa:	bf00      	nop
 800b5ac:	3708      	adds	r7, #8
 800b5ae:	46bd      	mov	sp, r7
 800b5b0:	bd80      	pop	{r7, pc}
 800b5b2:	bf00      	nop
 800b5b4:	20000a68 	.word	0x20000a68

0800b5b8 <_ZN8touchgfx18ManyBlockAllocatorILm2880ELm3ELm2EE13allocateBlockEttttPPh>:
     * @param          height The height of the block.
     * @param [in,out] block  Pointer to pointer to return the block address in.
     *
     * @return The height of the allocated block.
     */
    virtual uint16_t allocateBlock(const uint16_t x, const uint16_t y, const uint16_t width, const uint16_t height, uint8_t** block)
 800b5b8:	b580      	push	{r7, lr}
 800b5ba:	b086      	sub	sp, #24
 800b5bc:	af00      	add	r7, sp, #0
 800b5be:	60f8      	str	r0, [r7, #12]
 800b5c0:	4608      	mov	r0, r1
 800b5c2:	4611      	mov	r1, r2
 800b5c4:	461a      	mov	r2, r3
 800b5c6:	4603      	mov	r3, r0
 800b5c8:	817b      	strh	r3, [r7, #10]
 800b5ca:	460b      	mov	r3, r1
 800b5cc:	813b      	strh	r3, [r7, #8]
 800b5ce:	4613      	mov	r3, r2
 800b5d0:	80fb      	strh	r3, [r7, #6]
    {
        drawingBlock++;
 800b5d2:	68fb      	ldr	r3, [r7, #12]
 800b5d4:	f503 5300 	add.w	r3, r3, #8192	@ 0x2000
 800b5d8:	f8d3 31e4 	ldr.w	r3, [r3, #484]	@ 0x1e4
 800b5dc:	3301      	adds	r3, #1
 800b5de:	68fa      	ldr	r2, [r7, #12]
 800b5e0:	f502 5200 	add.w	r2, r2, #8192	@ 0x2000
 800b5e4:	f8c2 31e4 	str.w	r3, [r2, #484]	@ 0x1e4
        if (drawingBlock == blocks)
 800b5e8:	68fb      	ldr	r3, [r7, #12]
 800b5ea:	f503 5300 	add.w	r3, r3, #8192	@ 0x2000
 800b5ee:	f8d3 31e4 	ldr.w	r3, [r3, #484]	@ 0x1e4
 800b5f2:	2b03      	cmp	r3, #3
 800b5f4:	d109      	bne.n	800b60a <_ZN8touchgfx18ManyBlockAllocatorILm2880ELm3ELm2EE13allocateBlockEttttPPh+0x52>
        {
            drawingBlock = 0;
 800b5f6:	68fb      	ldr	r3, [r7, #12]
 800b5f8:	f503 5300 	add.w	r3, r3, #8192	@ 0x2000
 800b5fc:	461a      	mov	r2, r3
 800b5fe:	2300      	movs	r3, #0
 800b600:	f8c2 31e4 	str.w	r3, [r2, #484]	@ 0x1e4
        }
        while (state[drawingBlock] != EMPTY)
 800b604:	e001      	b.n	800b60a <_ZN8touchgfx18ManyBlockAllocatorILm2880ELm3ELm2EE13allocateBlockEttttPPh+0x52>
        {
            FrameBufferAllocatorWaitOnTransfer();
 800b606:	f7ff fee6 	bl	800b3d6 <_ZN8touchgfx34FrameBufferAllocatorWaitOnTransferEv>
        while (state[drawingBlock] != EMPTY)
 800b60a:	68fb      	ldr	r3, [r7, #12]
 800b60c:	f503 5300 	add.w	r3, r3, #8192	@ 0x2000
 800b610:	f8d3 31e4 	ldr.w	r3, [r3, #484]	@ 0x1e4
 800b614:	68fa      	ldr	r2, [r7, #12]
 800b616:	4413      	add	r3, r2
 800b618:	791b      	ldrb	r3, [r3, #4]
 800b61a:	b2db      	uxtb	r3, r3
 800b61c:	2b00      	cmp	r3, #0
 800b61e:	bf14      	ite	ne
 800b620:	2301      	movne	r3, #1
 800b622:	2300      	moveq	r3, #0
 800b624:	b2db      	uxtb	r3, r3
 800b626:	2b00      	cmp	r3, #0
 800b628:	d1ed      	bne.n	800b606 <_ZN8touchgfx18ManyBlockAllocatorILm2880ELm3ELm2EE13allocateBlockEttttPPh+0x4e>
        }
        assert(state[drawingBlock] == EMPTY);
 800b62a:	68fb      	ldr	r3, [r7, #12]
 800b62c:	f503 5300 	add.w	r3, r3, #8192	@ 0x2000
 800b630:	f8d3 31e4 	ldr.w	r3, [r3, #484]	@ 0x1e4
 800b634:	68fa      	ldr	r2, [r7, #12]
 800b636:	4413      	add	r3, r2
 800b638:	791b      	ldrb	r3, [r3, #4]
 800b63a:	b2db      	uxtb	r3, r3
 800b63c:	2b00      	cmp	r3, #0
 800b63e:	d005      	beq.n	800b64c <_ZN8touchgfx18ManyBlockAllocatorILm2880ELm3ELm2EE13allocateBlockEttttPPh+0x94>
 800b640:	4b38      	ldr	r3, [pc, #224]	@ (800b724 <_ZN8touchgfx18ManyBlockAllocatorILm2880ELm3ELm2EE13allocateBlockEttttPPh+0x16c>)
 800b642:	4a39      	ldr	r2, [pc, #228]	@ (800b728 <_ZN8touchgfx18ManyBlockAllocatorILm2880ELm3ELm2EE13allocateBlockEttttPPh+0x170>)
 800b644:	21aa      	movs	r1, #170	@ 0xaa
 800b646:	4839      	ldr	r0, [pc, #228]	@ (800b72c <_ZN8touchgfx18ManyBlockAllocatorILm2880ELm3ELm2EE13allocateBlockEttttPPh+0x174>)
 800b648:	f015 f8e2 	bl	8020810 <__assert_func>
        state[drawingBlock] = ALLOCATED;
 800b64c:	68fb      	ldr	r3, [r7, #12]
 800b64e:	f503 5300 	add.w	r3, r3, #8192	@ 0x2000
 800b652:	f8d3 31e4 	ldr.w	r3, [r3, #484]	@ 0x1e4
 800b656:	68fa      	ldr	r2, [r7, #12]
 800b658:	4413      	add	r3, r2
 800b65a:	2201      	movs	r2, #1
 800b65c:	711a      	strb	r2, [r3, #4]
        const int32_t stride = width * bytes_pr_pixel;
 800b65e:	88fb      	ldrh	r3, [r7, #6]
 800b660:	005b      	lsls	r3, r3, #1
 800b662:	617b      	str	r3, [r7, #20]
        const int32_t lines = block_size / stride;
 800b664:	697b      	ldr	r3, [r7, #20]
 800b666:	f44f 6234 	mov.w	r2, #2880	@ 0xb40
 800b66a:	fbb2 f3f3 	udiv	r3, r2, r3
 800b66e:	613b      	str	r3, [r7, #16]
        *block = (uint8_t*)&memory[drawingBlock][0];
 800b670:	68fb      	ldr	r3, [r7, #12]
 800b672:	f503 5300 	add.w	r3, r3, #8192	@ 0x2000
 800b676:	f8d3 31e4 	ldr.w	r3, [r3, #484]	@ 0x1e4
 800b67a:	f44f 6234 	mov.w	r2, #2880	@ 0xb40
 800b67e:	fb02 f303 	mul.w	r3, r2, r3
 800b682:	3308      	adds	r3, #8
 800b684:	68fa      	ldr	r2, [r7, #12]
 800b686:	441a      	add	r2, r3
 800b688:	6a7b      	ldr	r3, [r7, #36]	@ 0x24
 800b68a:	601a      	str	r2, [r3, #0]
        blockRect[drawingBlock].x = x;
 800b68c:	68fb      	ldr	r3, [r7, #12]
 800b68e:	f503 5300 	add.w	r3, r3, #8192	@ 0x2000
 800b692:	f8d3 21e4 	ldr.w	r2, [r3, #484]	@ 0x1e4
 800b696:	f9b7 100a 	ldrsh.w	r1, [r7, #10]
 800b69a:	68fb      	ldr	r3, [r7, #12]
 800b69c:	f202 4239 	addw	r2, r2, #1081	@ 0x439
 800b6a0:	f823 1032 	strh.w	r1, [r3, r2, lsl #3]
        blockRect[drawingBlock].y = y;
 800b6a4:	68fb      	ldr	r3, [r7, #12]
 800b6a6:	f503 5300 	add.w	r3, r3, #8192	@ 0x2000
 800b6aa:	f8d3 31e4 	ldr.w	r3, [r3, #484]	@ 0x1e4
 800b6ae:	f9b7 1008 	ldrsh.w	r1, [r7, #8]
 800b6b2:	68fa      	ldr	r2, [r7, #12]
 800b6b4:	f203 4339 	addw	r3, r3, #1081	@ 0x439
 800b6b8:	00db      	lsls	r3, r3, #3
 800b6ba:	4413      	add	r3, r2
 800b6bc:	460a      	mov	r2, r1
 800b6be:	805a      	strh	r2, [r3, #2]
        blockRect[drawingBlock].width = width;
 800b6c0:	68fb      	ldr	r3, [r7, #12]
 800b6c2:	f503 5300 	add.w	r3, r3, #8192	@ 0x2000
 800b6c6:	f8d3 31e4 	ldr.w	r3, [r3, #484]	@ 0x1e4
 800b6ca:	f9b7 1006 	ldrsh.w	r1, [r7, #6]
 800b6ce:	68fa      	ldr	r2, [r7, #12]
 800b6d0:	f203 4339 	addw	r3, r3, #1081	@ 0x439
 800b6d4:	00db      	lsls	r3, r3, #3
 800b6d6:	4413      	add	r3, r2
 800b6d8:	460a      	mov	r2, r1
 800b6da:	809a      	strh	r2, [r3, #4]
        blockRect[drawingBlock].height = MIN(height, lines);
 800b6dc:	8c3a      	ldrh	r2, [r7, #32]
 800b6de:	693b      	ldr	r3, [r7, #16]
 800b6e0:	429a      	cmp	r2, r3
 800b6e2:	bfa8      	it	ge
 800b6e4:	461a      	movge	r2, r3
 800b6e6:	68fb      	ldr	r3, [r7, #12]
 800b6e8:	f503 5300 	add.w	r3, r3, #8192	@ 0x2000
 800b6ec:	f8d3 31e4 	ldr.w	r3, [r3, #484]	@ 0x1e4
 800b6f0:	b211      	sxth	r1, r2
 800b6f2:	68fa      	ldr	r2, [r7, #12]
 800b6f4:	f203 4339 	addw	r3, r3, #1081	@ 0x439
 800b6f8:	00db      	lsls	r3, r3, #3
 800b6fa:	4413      	add	r3, r2
 800b6fc:	460a      	mov	r2, r1
 800b6fe:	80da      	strh	r2, [r3, #6]
        return blockRect[drawingBlock].height;
 800b700:	68fb      	ldr	r3, [r7, #12]
 800b702:	f503 5300 	add.w	r3, r3, #8192	@ 0x2000
 800b706:	f8d3 31e4 	ldr.w	r3, [r3, #484]	@ 0x1e4
 800b70a:	68fa      	ldr	r2, [r7, #12]
 800b70c:	f203 4339 	addw	r3, r3, #1081	@ 0x439
 800b710:	00db      	lsls	r3, r3, #3
 800b712:	4413      	add	r3, r2
 800b714:	f9b3 3006 	ldrsh.w	r3, [r3, #6]
 800b718:	b29b      	uxth	r3, r3
    }
 800b71a:	4618      	mov	r0, r3
 800b71c:	3718      	adds	r7, #24
 800b71e:	46bd      	mov	sp, r7
 800b720:	bd80      	pop	{r7, pc}
 800b722:	bf00      	nop
 800b724:	080222bc 	.word	0x080222bc
 800b728:	080222dc 	.word	0x080222dc
 800b72c:	08022410 	.word	0x08022410

0800b730 <_ZN8touchgfx18ManyBlockAllocatorILm2880ELm3ELm2EE25markBlockReadyForTransferEv>:

    /** Marks a previously allocated block as ready to be transferred to the LCD. */
    virtual void markBlockReadyForTransfer()
 800b730:	b580      	push	{r7, lr}
 800b732:	b082      	sub	sp, #8
 800b734:	af00      	add	r7, sp, #0
 800b736:	6078      	str	r0, [r7, #4]
    {
        assert(state[drawingBlock] == ALLOCATED);
 800b738:	687b      	ldr	r3, [r7, #4]
 800b73a:	f503 5300 	add.w	r3, r3, #8192	@ 0x2000
 800b73e:	f8d3 31e4 	ldr.w	r3, [r3, #484]	@ 0x1e4
 800b742:	687a      	ldr	r2, [r7, #4]
 800b744:	4413      	add	r3, r2
 800b746:	791b      	ldrb	r3, [r3, #4]
 800b748:	b2db      	uxtb	r3, r3
 800b74a:	2b01      	cmp	r3, #1
 800b74c:	d005      	beq.n	800b75a <_ZN8touchgfx18ManyBlockAllocatorILm2880ELm3ELm2EE25markBlockReadyForTransferEv+0x2a>
 800b74e:	4b0a      	ldr	r3, [pc, #40]	@ (800b778 <_ZN8touchgfx18ManyBlockAllocatorILm2880ELm3ELm2EE25markBlockReadyForTransferEv+0x48>)
 800b750:	4a0a      	ldr	r2, [pc, #40]	@ (800b77c <_ZN8touchgfx18ManyBlockAllocatorILm2880ELm3ELm2EE25markBlockReadyForTransferEv+0x4c>)
 800b752:	21b9      	movs	r1, #185	@ 0xb9
 800b754:	480a      	ldr	r0, [pc, #40]	@ (800b780 <_ZN8touchgfx18ManyBlockAllocatorILm2880ELm3ELm2EE25markBlockReadyForTransferEv+0x50>)
 800b756:	f015 f85b 	bl	8020810 <__assert_func>
        state[drawingBlock] = DRAWN;
 800b75a:	687b      	ldr	r3, [r7, #4]
 800b75c:	f503 5300 	add.w	r3, r3, #8192	@ 0x2000
 800b760:	f8d3 31e4 	ldr.w	r3, [r3, #484]	@ 0x1e4
 800b764:	687a      	ldr	r2, [r7, #4]
 800b766:	4413      	add	r3, r2
 800b768:	2202      	movs	r2, #2
 800b76a:	711a      	strb	r2, [r3, #4]
        FrameBufferAllocatorSignalBlockDrawn();
 800b76c:	f7ff fe3a 	bl	800b3e4 <_ZN8touchgfx36FrameBufferAllocatorSignalBlockDrawnEv>
    }
 800b770:	bf00      	nop
 800b772:	3708      	adds	r7, #8
 800b774:	46bd      	mov	sp, r7
 800b776:	bd80      	pop	{r7, pc}
 800b778:	08022464 	.word	0x08022464
 800b77c:	08022488 	.word	0x08022488
 800b780:	08022410 	.word	0x08022410

0800b784 <_ZN8touchgfx18ManyBlockAllocatorILm2880ELm3ELm2EE24hasBlockReadyForTransferEv>:
    /**
     * Check if a block is ready for transfer to the LCD.
     *
     * @return True if a block is ready for transfer.
     */
    virtual bool hasBlockReadyForTransfer()
 800b784:	b480      	push	{r7}
 800b786:	b085      	sub	sp, #20
 800b788:	af00      	add	r7, sp, #0
 800b78a:	6078      	str	r0, [r7, #4]
    {
        for (uint32_t i = 0; i < blocks; i++)
 800b78c:	2300      	movs	r3, #0
 800b78e:	60fb      	str	r3, [r7, #12]
 800b790:	e011      	b.n	800b7b6 <_ZN8touchgfx18ManyBlockAllocatorILm2880ELm3ELm2EE24hasBlockReadyForTransferEv+0x32>
        {
            if (state[i] == DRAWN)
 800b792:	687a      	ldr	r2, [r7, #4]
 800b794:	68fb      	ldr	r3, [r7, #12]
 800b796:	4413      	add	r3, r2
 800b798:	3304      	adds	r3, #4
 800b79a:	781b      	ldrb	r3, [r3, #0]
 800b79c:	b2db      	uxtb	r3, r3
 800b79e:	2b02      	cmp	r3, #2
 800b7a0:	bf0c      	ite	eq
 800b7a2:	2301      	moveq	r3, #1
 800b7a4:	2300      	movne	r3, #0
 800b7a6:	b2db      	uxtb	r3, r3
 800b7a8:	2b00      	cmp	r3, #0
 800b7aa:	d001      	beq.n	800b7b0 <_ZN8touchgfx18ManyBlockAllocatorILm2880ELm3ELm2EE24hasBlockReadyForTransferEv+0x2c>
            {
                return true;
 800b7ac:	2301      	movs	r3, #1
 800b7ae:	e006      	b.n	800b7be <_ZN8touchgfx18ManyBlockAllocatorILm2880ELm3ELm2EE24hasBlockReadyForTransferEv+0x3a>
        for (uint32_t i = 0; i < blocks; i++)
 800b7b0:	68fb      	ldr	r3, [r7, #12]
 800b7b2:	3301      	adds	r3, #1
 800b7b4:	60fb      	str	r3, [r7, #12]
 800b7b6:	68fb      	ldr	r3, [r7, #12]
 800b7b8:	2b02      	cmp	r3, #2
 800b7ba:	d9ea      	bls.n	800b792 <_ZN8touchgfx18ManyBlockAllocatorILm2880ELm3ELm2EE24hasBlockReadyForTransferEv+0xe>
            }
        }
        return false;
 800b7bc:	2300      	movs	r3, #0
    }
 800b7be:	4618      	mov	r0, r3
 800b7c0:	3714      	adds	r7, #20
 800b7c2:	46bd      	mov	sp, r7
 800b7c4:	f85d 7b04 	ldr.w	r7, [sp], #4
 800b7c8:	4770      	bx	lr
	...

0800b7cc <_ZN8touchgfx18ManyBlockAllocatorILm2880ELm3ELm2EE19getBlockForTransferERNS_4RectE>:
     *
     * @param [in,out] rect Reference to rect to write block x, y, width, and height.
     *
     * @return Returns the address of the block ready for transfer.
     */
    virtual const uint8_t* getBlockForTransfer(Rect& rect)
 800b7cc:	b580      	push	{r7, lr}
 800b7ce:	b082      	sub	sp, #8
 800b7d0:	af00      	add	r7, sp, #0
 800b7d2:	6078      	str	r0, [r7, #4]
 800b7d4:	6039      	str	r1, [r7, #0]
    {
        sendingBlock++;
 800b7d6:	687b      	ldr	r3, [r7, #4]
 800b7d8:	f503 5300 	add.w	r3, r3, #8192	@ 0x2000
 800b7dc:	f8d3 31e0 	ldr.w	r3, [r3, #480]	@ 0x1e0
 800b7e0:	3301      	adds	r3, #1
 800b7e2:	687a      	ldr	r2, [r7, #4]
 800b7e4:	f502 5200 	add.w	r2, r2, #8192	@ 0x2000
 800b7e8:	f8c2 31e0 	str.w	r3, [r2, #480]	@ 0x1e0
        if (sendingBlock == blocks)
 800b7ec:	687b      	ldr	r3, [r7, #4]
 800b7ee:	f503 5300 	add.w	r3, r3, #8192	@ 0x2000
 800b7f2:	f8d3 31e0 	ldr.w	r3, [r3, #480]	@ 0x1e0
 800b7f6:	2b03      	cmp	r3, #3
 800b7f8:	d106      	bne.n	800b808 <_ZN8touchgfx18ManyBlockAllocatorILm2880ELm3ELm2EE19getBlockForTransferERNS_4RectE+0x3c>
        {
            sendingBlock = 0;
 800b7fa:	687b      	ldr	r3, [r7, #4]
 800b7fc:	f503 5300 	add.w	r3, r3, #8192	@ 0x2000
 800b800:	461a      	mov	r2, r3
 800b802:	2300      	movs	r3, #0
 800b804:	f8c2 31e0 	str.w	r3, [r2, #480]	@ 0x1e0
        }
        assert(state[sendingBlock] == DRAWN);
 800b808:	687b      	ldr	r3, [r7, #4]
 800b80a:	f503 5300 	add.w	r3, r3, #8192	@ 0x2000
 800b80e:	f8d3 31e0 	ldr.w	r3, [r3, #480]	@ 0x1e0
 800b812:	687a      	ldr	r2, [r7, #4]
 800b814:	4413      	add	r3, r2
 800b816:	791b      	ldrb	r3, [r3, #4]
 800b818:	b2db      	uxtb	r3, r3
 800b81a:	2b02      	cmp	r3, #2
 800b81c:	d005      	beq.n	800b82a <_ZN8touchgfx18ManyBlockAllocatorILm2880ELm3ELm2EE19getBlockForTransferERNS_4RectE+0x5e>
 800b81e:	4b16      	ldr	r3, [pc, #88]	@ (800b878 <_ZN8touchgfx18ManyBlockAllocatorILm2880ELm3ELm2EE19getBlockForTransferERNS_4RectE+0xac>)
 800b820:	4a16      	ldr	r2, [pc, #88]	@ (800b87c <_ZN8touchgfx18ManyBlockAllocatorILm2880ELm3ELm2EE19getBlockForTransferERNS_4RectE+0xb0>)
 800b822:	21dd      	movs	r1, #221	@ 0xdd
 800b824:	4816      	ldr	r0, [pc, #88]	@ (800b880 <_ZN8touchgfx18ManyBlockAllocatorILm2880ELm3ELm2EE19getBlockForTransferERNS_4RectE+0xb4>)
 800b826:	f014 fff3 	bl	8020810 <__assert_func>
        rect = blockRect[sendingBlock];
 800b82a:	687b      	ldr	r3, [r7, #4]
 800b82c:	f503 5300 	add.w	r3, r3, #8192	@ 0x2000
 800b830:	f8d3 31e0 	ldr.w	r3, [r3, #480]	@ 0x1e0
 800b834:	683a      	ldr	r2, [r7, #0]
 800b836:	6879      	ldr	r1, [r7, #4]
 800b838:	f203 4339 	addw	r3, r3, #1081	@ 0x439
 800b83c:	00db      	lsls	r3, r3, #3
 800b83e:	440b      	add	r3, r1
 800b840:	cb03      	ldmia	r3!, {r0, r1}
 800b842:	6010      	str	r0, [r2, #0]
 800b844:	6051      	str	r1, [r2, #4]
        state[sendingBlock] = SENDING;
 800b846:	687b      	ldr	r3, [r7, #4]
 800b848:	f503 5300 	add.w	r3, r3, #8192	@ 0x2000
 800b84c:	f8d3 31e0 	ldr.w	r3, [r3, #480]	@ 0x1e0
 800b850:	687a      	ldr	r2, [r7, #4]
 800b852:	4413      	add	r3, r2
 800b854:	2203      	movs	r2, #3
 800b856:	711a      	strb	r2, [r3, #4]
        return (const uint8_t*)&memory[sendingBlock][0];
 800b858:	687b      	ldr	r3, [r7, #4]
 800b85a:	f503 5300 	add.w	r3, r3, #8192	@ 0x2000
 800b85e:	f8d3 31e0 	ldr.w	r3, [r3, #480]	@ 0x1e0
 800b862:	f44f 6234 	mov.w	r2, #2880	@ 0xb40
 800b866:	fb02 f303 	mul.w	r3, r2, r3
 800b86a:	3308      	adds	r3, #8
 800b86c:	687a      	ldr	r2, [r7, #4]
 800b86e:	4413      	add	r3, r2
    }
 800b870:	4618      	mov	r0, r3
 800b872:	3708      	adds	r7, #8
 800b874:	46bd      	mov	sp, r7
 800b876:	bd80      	pop	{r7, pc}
 800b878:	0802255c 	.word	0x0802255c
 800b87c:	0802257c 	.word	0x0802257c
 800b880:	08022410 	.word	0x08022410

0800b884 <_ZN8touchgfx18ManyBlockAllocatorILm2880ELm3ELm2EE20peekBlockForTransferEv>:

    virtual const Rect& peekBlockForTransfer()
 800b884:	b580      	push	{r7, lr}
 800b886:	b084      	sub	sp, #16
 800b888:	af00      	add	r7, sp, #0
 800b88a:	6078      	str	r0, [r7, #4]
    {
        int nextSendingBlock = sendingBlock + 1;
 800b88c:	687b      	ldr	r3, [r7, #4]
 800b88e:	f503 5300 	add.w	r3, r3, #8192	@ 0x2000
 800b892:	f8d3 31e0 	ldr.w	r3, [r3, #480]	@ 0x1e0
 800b896:	3301      	adds	r3, #1
 800b898:	60fb      	str	r3, [r7, #12]
        if (nextSendingBlock == blocks)
 800b89a:	68fb      	ldr	r3, [r7, #12]
 800b89c:	2b03      	cmp	r3, #3
 800b89e:	d101      	bne.n	800b8a4 <_ZN8touchgfx18ManyBlockAllocatorILm2880ELm3ELm2EE20peekBlockForTransferEv+0x20>
        {
            nextSendingBlock = 0;
 800b8a0:	2300      	movs	r3, #0
 800b8a2:	60fb      	str	r3, [r7, #12]
        }
        assert(state[nextSendingBlock] == DRAWN);
 800b8a4:	687a      	ldr	r2, [r7, #4]
 800b8a6:	68fb      	ldr	r3, [r7, #12]
 800b8a8:	4413      	add	r3, r2
 800b8aa:	3304      	adds	r3, #4
 800b8ac:	781b      	ldrb	r3, [r3, #0]
 800b8ae:	b2db      	uxtb	r3, r3
 800b8b0:	2b02      	cmp	r3, #2
 800b8b2:	d005      	beq.n	800b8c0 <_ZN8touchgfx18ManyBlockAllocatorILm2880ELm3ELm2EE20peekBlockForTransferEv+0x3c>
 800b8b4:	4b07      	ldr	r3, [pc, #28]	@ (800b8d4 <_ZN8touchgfx18ManyBlockAllocatorILm2880ELm3ELm2EE20peekBlockForTransferEv+0x50>)
 800b8b6:	4a08      	ldr	r2, [pc, #32]	@ (800b8d8 <_ZN8touchgfx18ManyBlockAllocatorILm2880ELm3ELm2EE20peekBlockForTransferEv+0x54>)
 800b8b8:	21ea      	movs	r1, #234	@ 0xea
 800b8ba:	4808      	ldr	r0, [pc, #32]	@ (800b8dc <_ZN8touchgfx18ManyBlockAllocatorILm2880ELm3ELm2EE20peekBlockForTransferEv+0x58>)
 800b8bc:	f014 ffa8 	bl	8020810 <__assert_func>
        return blockRect[nextSendingBlock];
 800b8c0:	68fb      	ldr	r3, [r7, #12]
 800b8c2:	f203 4339 	addw	r3, r3, #1081	@ 0x439
 800b8c6:	00db      	lsls	r3, r3, #3
 800b8c8:	687a      	ldr	r2, [r7, #4]
 800b8ca:	4413      	add	r3, r2
    }
 800b8cc:	4618      	mov	r0, r3
 800b8ce:	3710      	adds	r7, #16
 800b8d0:	46bd      	mov	sp, r7
 800b8d2:	bd80      	pop	{r7, pc}
 800b8d4:	0802267c 	.word	0x0802267c
 800b8d8:	080226a0 	.word	0x080226a0
 800b8dc:	08022410 	.word	0x08022410

0800b8e0 <_ZN8touchgfx18ManyBlockAllocatorILm2880ELm3ELm2EE13hasEmptyBlockEv>:

    virtual bool hasEmptyBlock()
 800b8e0:	b480      	push	{r7}
 800b8e2:	b085      	sub	sp, #20
 800b8e4:	af00      	add	r7, sp, #0
 800b8e6:	6078      	str	r0, [r7, #4]
    {
        int nextDrawingBlock = drawingBlock + 1;
 800b8e8:	687b      	ldr	r3, [r7, #4]
 800b8ea:	f503 5300 	add.w	r3, r3, #8192	@ 0x2000
 800b8ee:	f8d3 31e4 	ldr.w	r3, [r3, #484]	@ 0x1e4
 800b8f2:	3301      	adds	r3, #1
 800b8f4:	60fb      	str	r3, [r7, #12]
        if (nextDrawingBlock == blocks)
 800b8f6:	68fb      	ldr	r3, [r7, #12]
 800b8f8:	2b03      	cmp	r3, #3
 800b8fa:	d101      	bne.n	800b900 <_ZN8touchgfx18ManyBlockAllocatorILm2880ELm3ELm2EE13hasEmptyBlockEv+0x20>
        {
            nextDrawingBlock = 0;
 800b8fc:	2300      	movs	r3, #0
 800b8fe:	60fb      	str	r3, [r7, #12]
        }
        return (state[nextDrawingBlock] == EMPTY);
 800b900:	687a      	ldr	r2, [r7, #4]
 800b902:	68fb      	ldr	r3, [r7, #12]
 800b904:	4413      	add	r3, r2
 800b906:	3304      	adds	r3, #4
 800b908:	781b      	ldrb	r3, [r3, #0]
 800b90a:	b2db      	uxtb	r3, r3
 800b90c:	2b00      	cmp	r3, #0
 800b90e:	bf0c      	ite	eq
 800b910:	2301      	moveq	r3, #1
 800b912:	2300      	movne	r3, #0
 800b914:	b2db      	uxtb	r3, r3
    }
 800b916:	4618      	mov	r0, r3
 800b918:	3714      	adds	r7, #20
 800b91a:	46bd      	mov	sp, r7
 800b91c:	f85d 7b04 	ldr.w	r7, [sp], #4
 800b920:	4770      	bx	lr
	...

0800b924 <_ZN8touchgfx18ManyBlockAllocatorILm2880ELm3ELm2EE22freeBlockAfterTransferEv>:
    /**
     * Free a block after transfer to the LCD.
     *
     * Marks a previously allocated block as transferred and ready to reuse.
     */
    virtual void freeBlockAfterTransfer()
 800b924:	b580      	push	{r7, lr}
 800b926:	b082      	sub	sp, #8
 800b928:	af00      	add	r7, sp, #0
 800b92a:	6078      	str	r0, [r7, #4]
    {
        assert(state[sendingBlock] == SENDING);
 800b92c:	687b      	ldr	r3, [r7, #4]
 800b92e:	f503 5300 	add.w	r3, r3, #8192	@ 0x2000
 800b932:	f8d3 31e0 	ldr.w	r3, [r3, #480]	@ 0x1e0
 800b936:	687a      	ldr	r2, [r7, #4]
 800b938:	4413      	add	r3, r2
 800b93a:	791b      	ldrb	r3, [r3, #4]
 800b93c:	b2db      	uxtb	r3, r3
 800b93e:	2b03      	cmp	r3, #3
 800b940:	d005      	beq.n	800b94e <_ZN8touchgfx18ManyBlockAllocatorILm2880ELm3ELm2EE22freeBlockAfterTransferEv+0x2a>
 800b942:	4b09      	ldr	r3, [pc, #36]	@ (800b968 <_ZN8touchgfx18ManyBlockAllocatorILm2880ELm3ELm2EE22freeBlockAfterTransferEv+0x44>)
 800b944:	4a09      	ldr	r2, [pc, #36]	@ (800b96c <_ZN8touchgfx18ManyBlockAllocatorILm2880ELm3ELm2EE22freeBlockAfterTransferEv+0x48>)
 800b946:	21ff      	movs	r1, #255	@ 0xff
 800b948:	4809      	ldr	r0, [pc, #36]	@ (800b970 <_ZN8touchgfx18ManyBlockAllocatorILm2880ELm3ELm2EE22freeBlockAfterTransferEv+0x4c>)
 800b94a:	f014 ff61 	bl	8020810 <__assert_func>
        state[sendingBlock] = EMPTY;
 800b94e:	687b      	ldr	r3, [r7, #4]
 800b950:	f503 5300 	add.w	r3, r3, #8192	@ 0x2000
 800b954:	f8d3 31e0 	ldr.w	r3, [r3, #480]	@ 0x1e0
 800b958:	687a      	ldr	r2, [r7, #4]
 800b95a:	4413      	add	r3, r2
 800b95c:	2200      	movs	r2, #0
 800b95e:	711a      	strb	r2, [r3, #4]
    }
 800b960:	bf00      	nop
 800b962:	3708      	adds	r7, #8
 800b964:	46bd      	mov	sp, r7
 800b966:	bd80      	pop	{r7, pc}
 800b968:	08022780 	.word	0x08022780
 800b96c:	080227a0 	.word	0x080227a0
 800b970:	08022410 	.word	0x08022410

0800b974 <_GLOBAL__sub_I__ZN8touchgfx5paint12setL8PaletteEPKh>:
 800b974:	b580      	push	{r7, lr}
 800b976:	af00      	add	r7, sp, #0
 800b978:	f64f 71ff 	movw	r1, #65535	@ 0xffff
 800b97c:	2001      	movs	r0, #1
 800b97e:	f7ff fdf9 	bl	800b574 <_Z41__static_initialization_and_destruction_0ii>
 800b982:	bd80      	pop	{r7, pc}

0800b984 <_GLOBAL__sub_D__ZN8touchgfx5paint12setL8PaletteEPKh>:
 800b984:	b580      	push	{r7, lr}
 800b986:	af00      	add	r7, sp, #0
 800b988:	f64f 71ff 	movw	r1, #65535	@ 0xffff
 800b98c:	2000      	movs	r0, #0
 800b98e:	f7ff fdf1 	bl	800b574 <_Z41__static_initialization_and_destruction_0ii>
 800b992:	bd80      	pop	{r7, pc}

0800b994 <_ZNK8touchgfx17AbstractPartition18getAllocationCountEv>:
 800b994:	8880      	ldrh	r0, [r0, #4]
 800b996:	4770      	bx	lr

0800b998 <_ZN8touchgfx17AbstractPartition7indexOfEPKv>:
 800b998:	b570      	push	{r4, r5, r6, lr}
 800b99a:	6803      	ldr	r3, [r0, #0]
 800b99c:	4605      	mov	r5, r0
 800b99e:	460c      	mov	r4, r1
 800b9a0:	6a5b      	ldr	r3, [r3, #36]	@ 0x24
 800b9a2:	2100      	movs	r1, #0
 800b9a4:	4798      	blx	r3
 800b9a6:	682b      	ldr	r3, [r5, #0]
 800b9a8:	4606      	mov	r6, r0
 800b9aa:	6a1b      	ldr	r3, [r3, #32]
 800b9ac:	4628      	mov	r0, r5
 800b9ae:	4798      	blx	r3
 800b9b0:	1ba4      	subs	r4, r4, r6
 800b9b2:	b2a4      	uxth	r4, r4
 800b9b4:	fbb4 f0f0 	udiv	r0, r4, r0
 800b9b8:	bd70      	pop	{r4, r5, r6, pc}

0800b9ba <_ZN8touchgfx17AbstractPartition5clearEv>:
 800b9ba:	2300      	movs	r3, #0
 800b9bc:	8083      	strh	r3, [r0, #4]
 800b9be:	4770      	bx	lr

0800b9c0 <_ZN8touchgfx17AbstractPartition8allocateEt>:
 800b9c0:	b510      	push	{r4, lr}
 800b9c2:	6803      	ldr	r3, [r0, #0]
 800b9c4:	8881      	ldrh	r1, [r0, #4]
 800b9c6:	6a5b      	ldr	r3, [r3, #36]	@ 0x24
 800b9c8:	4604      	mov	r4, r0
 800b9ca:	4798      	blx	r3
 800b9cc:	88a3      	ldrh	r3, [r4, #4]
 800b9ce:	3301      	adds	r3, #1
 800b9d0:	80a3      	strh	r3, [r4, #4]
 800b9d2:	bd10      	pop	{r4, pc}

0800b9d4 <_ZN8touchgfx17AbstractPartition10allocateAtEtt>:
 800b9d4:	6803      	ldr	r3, [r0, #0]
 800b9d6:	6a5b      	ldr	r3, [r3, #36]	@ 0x24
 800b9d8:	4718      	bx	r3

0800b9da <_ZN8touchgfx17AbstractPartitionD1Ev>:
 800b9da:	4770      	bx	lr

0800b9dc <_ZN8touchgfx17AbstractPartitionC1Ev>:
 800b9dc:	4a02      	ldr	r2, [pc, #8]	@ (800b9e8 <_ZN8touchgfx17AbstractPartitionC1Ev+0xc>)
 800b9de:	6002      	str	r2, [r0, #0]
 800b9e0:	2200      	movs	r2, #0
 800b9e2:	8082      	strh	r2, [r0, #4]
 800b9e4:	4770      	bx	lr
 800b9e6:	bf00      	nop
 800b9e8:	080231cc 	.word	0x080231cc

0800b9ec <_ZN8touchgfx9Container13getFirstChildEv>:
 800b9ec:	6a80      	ldr	r0, [r0, #40]	@ 0x28
 800b9ee:	4770      	bx	lr

0800b9f0 <_ZN8touchgfx9Container8containsERKNS_8DrawableE>:
 800b9f0:	6a83      	ldr	r3, [r0, #40]	@ 0x28
 800b9f2:	2000      	movs	r0, #0
 800b9f4:	b12b      	cbz	r3, 800ba02 <_ZN8touchgfx9Container8containsERKNS_8DrawableE+0x12>
 800b9f6:	b920      	cbnz	r0, 800ba02 <_ZN8touchgfx9Container8containsERKNS_8DrawableE+0x12>
 800b9f8:	1a5a      	subs	r2, r3, r1
 800b9fa:	4250      	negs	r0, r2
 800b9fc:	4150      	adcs	r0, r2
 800b9fe:	699b      	ldr	r3, [r3, #24]
 800ba00:	e7f8      	b.n	800b9f4 <_ZN8touchgfx9Container8containsERKNS_8DrawableE+0x4>
 800ba02:	4770      	bx	lr

0800ba04 <_ZN8touchgfx9Container3addERNS_8DrawableE>:
 800ba04:	2300      	movs	r3, #0
 800ba06:	6148      	str	r0, [r1, #20]
 800ba08:	618b      	str	r3, [r1, #24]
 800ba0a:	6a83      	ldr	r3, [r0, #40]	@ 0x28
 800ba0c:	b913      	cbnz	r3, 800ba14 <_ZN8touchgfx9Container3addERNS_8DrawableE+0x10>
 800ba0e:	6281      	str	r1, [r0, #40]	@ 0x28
 800ba10:	4770      	bx	lr
 800ba12:	4613      	mov	r3, r2
 800ba14:	699a      	ldr	r2, [r3, #24]
 800ba16:	2a00      	cmp	r2, #0
 800ba18:	d1fb      	bne.n	800ba12 <_ZN8touchgfx9Container3addERNS_8DrawableE+0xe>
 800ba1a:	6199      	str	r1, [r3, #24]
 800ba1c:	4770      	bx	lr

0800ba1e <_ZN8touchgfx9Container9removeAllEv>:
 800ba1e:	2200      	movs	r2, #0
 800ba20:	6a83      	ldr	r3, [r0, #40]	@ 0x28
 800ba22:	b123      	cbz	r3, 800ba2e <_ZN8touchgfx9Container9removeAllEv+0x10>
 800ba24:	6999      	ldr	r1, [r3, #24]
 800ba26:	6281      	str	r1, [r0, #40]	@ 0x28
 800ba28:	e9c3 2205 	strd	r2, r2, [r3, #20]
 800ba2c:	e7f8      	b.n	800ba20 <_ZN8touchgfx9Container9removeAllEv+0x2>
 800ba2e:	4770      	bx	lr

0800ba30 <_ZN8touchgfx9Container6unlinkEv>:
 800ba30:	2300      	movs	r3, #0
 800ba32:	6283      	str	r3, [r0, #40]	@ 0x28
 800ba34:	4770      	bx	lr

0800ba36 <_ZNK8touchgfx9Container12getSolidRectEv>:
 800ba36:	2200      	movs	r2, #0
 800ba38:	8002      	strh	r2, [r0, #0]
 800ba3a:	8042      	strh	r2, [r0, #2]
 800ba3c:	8082      	strh	r2, [r0, #4]
 800ba3e:	80c2      	strh	r2, [r0, #6]
 800ba40:	4770      	bx	lr

0800ba42 <_ZN8touchgfx9Container20moveChildrenRelativeEss>:
 800ba42:	b570      	push	{r4, r5, r6, lr}
 800ba44:	6a84      	ldr	r4, [r0, #40]	@ 0x28
 800ba46:	460d      	mov	r5, r1
 800ba48:	4616      	mov	r6, r2
 800ba4a:	b13c      	cbz	r4, 800ba5c <_ZN8touchgfx9Container20moveChildrenRelativeEss+0x1a>
 800ba4c:	6823      	ldr	r3, [r4, #0]
 800ba4e:	4620      	mov	r0, r4
 800ba50:	6d5b      	ldr	r3, [r3, #84]	@ 0x54
 800ba52:	4632      	mov	r2, r6
 800ba54:	4629      	mov	r1, r5
 800ba56:	4798      	blx	r3
 800ba58:	69a4      	ldr	r4, [r4, #24]
 800ba5a:	e7f6      	b.n	800ba4a <_ZN8touchgfx9Container20moveChildrenRelativeEss+0x8>
 800ba5c:	bd70      	pop	{r4, r5, r6, pc}

0800ba5e <_ZN8touchgfx9Container12forEachChildEPNS_15GenericCallbackIRNS_8DrawableEvvEE>:
 800ba5e:	b538      	push	{r3, r4, r5, lr}
 800ba60:	6a84      	ldr	r4, [r0, #40]	@ 0x28
 800ba62:	460d      	mov	r5, r1
 800ba64:	b134      	cbz	r4, 800ba74 <_ZN8touchgfx9Container12forEachChildEPNS_15GenericCallbackIRNS_8DrawableEvvEE+0x16>
 800ba66:	682b      	ldr	r3, [r5, #0]
 800ba68:	4621      	mov	r1, r4
 800ba6a:	689b      	ldr	r3, [r3, #8]
 800ba6c:	4628      	mov	r0, r5
 800ba6e:	4798      	blx	r3
 800ba70:	69a4      	ldr	r4, [r4, #24]
 800ba72:	e7f7      	b.n	800ba64 <_ZN8touchgfx9Container12forEachChildEPNS_15GenericCallbackIRNS_8DrawableEvvEE+0x6>
 800ba74:	bd38      	pop	{r3, r4, r5, pc}

0800ba76 <_ZN8touchgfx9Container6removeERNS_8DrawableE>:
 800ba76:	6a83      	ldr	r3, [r0, #40]	@ 0x28
 800ba78:	b19b      	cbz	r3, 800baa2 <_ZN8touchgfx9Container6removeERNS_8DrawableE+0x2c>
 800ba7a:	428b      	cmp	r3, r1
 800ba7c:	d109      	bne.n	800ba92 <_ZN8touchgfx9Container6removeERNS_8DrawableE+0x1c>
 800ba7e:	699a      	ldr	r2, [r3, #24]
 800ba80:	2100      	movs	r1, #0
 800ba82:	6159      	str	r1, [r3, #20]
 800ba84:	6282      	str	r2, [r0, #40]	@ 0x28
 800ba86:	b902      	cbnz	r2, 800ba8a <_ZN8touchgfx9Container6removeERNS_8DrawableE+0x14>
 800ba88:	4770      	bx	lr
 800ba8a:	6199      	str	r1, [r3, #24]
 800ba8c:	4770      	bx	lr
 800ba8e:	4613      	mov	r3, r2
 800ba90:	b13a      	cbz	r2, 800baa2 <_ZN8touchgfx9Container6removeERNS_8DrawableE+0x2c>
 800ba92:	699a      	ldr	r2, [r3, #24]
 800ba94:	428a      	cmp	r2, r1
 800ba96:	d1fa      	bne.n	800ba8e <_ZN8touchgfx9Container6removeERNS_8DrawableE+0x18>
 800ba98:	698a      	ldr	r2, [r1, #24]
 800ba9a:	619a      	str	r2, [r3, #24]
 800ba9c:	2300      	movs	r3, #0
 800ba9e:	e9c1 3305 	strd	r3, r3, [r1, #20]
 800baa2:	4770      	bx	lr

0800baa4 <_ZN8touchgfx9Container6insertEPNS_8DrawableERS1_>:
 800baa4:	b410      	push	{r4}
 800baa6:	6a83      	ldr	r3, [r0, #40]	@ 0x28
 800baa8:	4604      	mov	r4, r0
 800baaa:	b92b      	cbnz	r3, 800bab8 <_ZN8touchgfx9Container6insertEPNS_8DrawableERS1_+0x14>
 800baac:	6803      	ldr	r3, [r0, #0]
 800baae:	f85d 4b04 	ldr.w	r4, [sp], #4
 800bab2:	6e1b      	ldr	r3, [r3, #96]	@ 0x60
 800bab4:	4611      	mov	r1, r2
 800bab6:	4718      	bx	r3
 800bab8:	b941      	cbnz	r1, 800bacc <_ZN8touchgfx9Container6insertEPNS_8DrawableERS1_+0x28>
 800baba:	6193      	str	r3, [r2, #24]
 800babc:	6282      	str	r2, [r0, #40]	@ 0x28
 800babe:	6154      	str	r4, [r2, #20]
 800bac0:	f85d 4b04 	ldr.w	r4, [sp], #4
 800bac4:	4770      	bx	lr
 800bac6:	4603      	mov	r3, r0
 800bac8:	2800      	cmp	r0, #0
 800baca:	d0f9      	beq.n	800bac0 <_ZN8touchgfx9Container6insertEPNS_8DrawableERS1_+0x1c>
 800bacc:	4299      	cmp	r1, r3
 800bace:	6998      	ldr	r0, [r3, #24]
 800bad0:	d1f9      	bne.n	800bac6 <_ZN8touchgfx9Container6insertEPNS_8DrawableERS1_+0x22>
 800bad2:	6190      	str	r0, [r2, #24]
 800bad4:	618a      	str	r2, [r1, #24]
 800bad6:	e7f2      	b.n	800babe <_ZN8touchgfx9Container6insertEPNS_8DrawableERS1_+0x1a>

0800bad8 <_ZN8touchgfx9Container12getLastChildEssPPNS_8DrawableE>:
 800bad8:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 800badc:	461f      	mov	r7, r3
 800bade:	f890 3024 	ldrb.w	r3, [r0, #36]	@ 0x24
 800bae2:	460d      	mov	r5, r1
 800bae4:	4616      	mov	r6, r2
 800bae6:	b103      	cbz	r3, 800baea <_ZN8touchgfx9Container12getLastChildEssPPNS_8DrawableE+0x12>
 800bae8:	6038      	str	r0, [r7, #0]
 800baea:	6a84      	ldr	r4, [r0, #40]	@ 0x28
 800baec:	b314      	cbz	r4, 800bb34 <_ZN8touchgfx9Container12getLastChildEssPPNS_8DrawableE+0x5c>
 800baee:	f894 3025 	ldrb.w	r3, [r4, #37]	@ 0x25
 800baf2:	b1eb      	cbz	r3, 800bb30 <_ZN8touchgfx9Container12getLastChildEssPPNS_8DrawableE+0x58>
 800baf4:	f9b4 1004 	ldrsh.w	r1, [r4, #4]
 800baf8:	428d      	cmp	r5, r1
 800bafa:	db19      	blt.n	800bb30 <_ZN8touchgfx9Container12getLastChildEssPPNS_8DrawableE+0x58>
 800bafc:	8923      	ldrh	r3, [r4, #8]
 800bafe:	b289      	uxth	r1, r1
 800bb00:	440b      	add	r3, r1
 800bb02:	b21b      	sxth	r3, r3
 800bb04:	429d      	cmp	r5, r3
 800bb06:	da13      	bge.n	800bb30 <_ZN8touchgfx9Container12getLastChildEssPPNS_8DrawableE+0x58>
 800bb08:	f9b4 2006 	ldrsh.w	r2, [r4, #6]
 800bb0c:	4296      	cmp	r6, r2
 800bb0e:	db0f      	blt.n	800bb30 <_ZN8touchgfx9Container12getLastChildEssPPNS_8DrawableE+0x58>
 800bb10:	8963      	ldrh	r3, [r4, #10]
 800bb12:	b292      	uxth	r2, r2
 800bb14:	4413      	add	r3, r2
 800bb16:	b21b      	sxth	r3, r3
 800bb18:	429e      	cmp	r6, r3
 800bb1a:	da09      	bge.n	800bb30 <_ZN8touchgfx9Container12getLastChildEssPPNS_8DrawableE+0x58>
 800bb1c:	6823      	ldr	r3, [r4, #0]
 800bb1e:	1ab2      	subs	r2, r6, r2
 800bb20:	1a69      	subs	r1, r5, r1
 800bb22:	f8d3 8024 	ldr.w	r8, [r3, #36]	@ 0x24
 800bb26:	b212      	sxth	r2, r2
 800bb28:	463b      	mov	r3, r7
 800bb2a:	b209      	sxth	r1, r1
 800bb2c:	4620      	mov	r0, r4
 800bb2e:	47c0      	blx	r8
 800bb30:	69a4      	ldr	r4, [r4, #24]
 800bb32:	e7db      	b.n	800baec <_ZN8touchgfx9Container12getLastChildEssPPNS_8DrawableE+0x14>
 800bb34:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}

0800bb38 <_ZN8touchgfx9Container16getLastChildNearEssPPNS_8DrawableEPsS4_>:
 800bb38:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 800bb3c:	4c6e      	ldr	r4, [pc, #440]	@ (800bcf8 <_ZN8touchgfx9Container16getLastChildNearEssPPNS_8DrawableEPsS4_+0x1c0>)
 800bb3e:	b0a1      	sub	sp, #132	@ 0x84
 800bb40:	6824      	ldr	r4, [r4, #0]
 800bb42:	9d2a      	ldr	r5, [sp, #168]	@ 0xa8
 800bb44:	f894 9049 	ldrb.w	r9, [r4, #73]	@ 0x49
 800bb48:	9303      	str	r3, [sp, #12]
 800bb4a:	2400      	movs	r4, #0
 800bb4c:	802c      	strh	r4, [r5, #0]
 800bb4e:	9d2b      	ldr	r5, [sp, #172]	@ 0xac
 800bb50:	802c      	strh	r4, [r5, #0]
 800bb52:	601c      	str	r4, [r3, #0]
 800bb54:	4606      	mov	r6, r0
 800bb56:	e9cd 1201 	strd	r1, r2, [sp, #4]
 800bb5a:	f7ff ffbd 	bl	800bad8 <_ZN8touchgfx9Container12getLastChildEssPPNS_8DrawableE>
 800bb5e:	f1b9 0f03 	cmp.w	r9, #3
 800bb62:	f340 80c2 	ble.w	800bcea <_ZN8touchgfx9Container16getLastChildNearEssPPNS_8DrawableEPsS4_+0x1b2>
 800bb66:	4631      	mov	r1, r6
 800bb68:	a80c      	add	r0, sp, #48	@ 0x30
 800bb6a:	f004 fbe3 	bl	8010334 <_ZNK8touchgfx8Drawable15getAbsoluteRectEv>
 800bb6e:	f9bd 3030 	ldrsh.w	r3, [sp, #48]	@ 0x30
 800bb72:	9306      	str	r3, [sp, #24]
 800bb74:	f9bd 3032 	ldrsh.w	r3, [sp, #50]	@ 0x32
 800bb78:	9307      	str	r3, [sp, #28]
 800bb7a:	9b03      	ldr	r3, [sp, #12]
 800bb7c:	f8d3 a000 	ldr.w	sl, [r3]
 800bb80:	f1ba 0f00 	cmp.w	sl, #0
 800bb84:	f000 80b4 	beq.w	800bcf0 <_ZN8touchgfx9Container16getLastChildNearEssPPNS_8DrawableEPsS4_+0x1b8>
 800bb88:	4651      	mov	r1, sl
 800bb8a:	a810      	add	r0, sp, #64	@ 0x40
 800bb8c:	f004 fbd2 	bl	8010334 <_ZNK8touchgfx8Drawable15getAbsoluteRectEv>
 800bb90:	9b01      	ldr	r3, [sp, #4]
 800bb92:	9a06      	ldr	r2, [sp, #24]
 800bb94:	f9bd 1044 	ldrsh.w	r1, [sp, #68]	@ 0x44
 800bb98:	189d      	adds	r5, r3, r2
 800bb9a:	f9bd 3040 	ldrsh.w	r3, [sp, #64]	@ 0x40
 800bb9e:	9a07      	ldr	r2, [sp, #28]
 800bba0:	2002      	movs	r0, #2
 800bba2:	fb91 f1f0 	sdiv	r1, r1, r0
 800bba6:	4419      	add	r1, r3
 800bba8:	1a6d      	subs	r5, r5, r1
 800bbaa:	9b02      	ldr	r3, [sp, #8]
 800bbac:	f9bd 1042 	ldrsh.w	r1, [sp, #66]	@ 0x42
 800bbb0:	4413      	add	r3, r2
 800bbb2:	f9bd 2046 	ldrsh.w	r2, [sp, #70]	@ 0x46
 800bbb6:	fb92 f2f0 	sdiv	r2, r2, r0
 800bbba:	440a      	add	r2, r1
 800bbbc:	1a9b      	subs	r3, r3, r2
 800bbbe:	435b      	muls	r3, r3
 800bbc0:	fb05 3505 	mla	r5, r5, r5, r3
 800bbc4:	4f4d      	ldr	r7, [pc, #308]	@ (800bcfc <_ZN8touchgfx9Container16getLastChildNearEssPPNS_8DrawableEPsS4_+0x1c4>)
 800bbc6:	cf0f      	ldmia	r7!, {r0, r1, r2, r3}
 800bbc8:	ac10      	add	r4, sp, #64	@ 0x40
 800bbca:	c40f      	stmia	r4!, {r0, r1, r2, r3}
 800bbcc:	cf0f      	ldmia	r7!, {r0, r1, r2, r3}
 800bbce:	c40f      	stmia	r4!, {r0, r1, r2, r3}
 800bbd0:	cf0f      	ldmia	r7!, {r0, r1, r2, r3}
 800bbd2:	c40f      	stmia	r4!, {r0, r1, r2, r3}
 800bbd4:	e897 000f 	ldmia.w	r7, {r0, r1, r2, r3}
 800bbd8:	f1b9 0f0c 	cmp.w	r9, #12
 800bbdc:	e884 000f 	stmia.w	r4, {r0, r1, r2, r3}
 800bbe0:	f04f 0303 	mov.w	r3, #3
 800bbe4:	bfc8      	it	gt
 800bbe6:	4698      	movgt	r8, r3
 800bbe8:	f8cd 9000 	str.w	r9, [sp]
 800bbec:	f04f 0400 	mov.w	r4, #0
 800bbf0:	bfdc      	itt	le
 800bbf2:	f109 32ff 	addle.w	r2, r9, #4294967295
 800bbf6:	fb92 f8f3 	sdivle	r8, r2, r3
 800bbfa:	1c63      	adds	r3, r4, #1
 800bbfc:	aa10      	add	r2, sp, #64	@ 0x40
 800bbfe:	f004 0401 	and.w	r4, r4, #1
 800bc02:	9308      	str	r3, [sp, #32]
 800bc04:	eb02 1444 	add.w	r4, r2, r4, lsl #5
 800bc08:	9b00      	ldr	r3, [sp, #0]
 800bc0a:	fb93 f3f8 	sdiv	r3, r3, r8
 800bc0e:	b29b      	uxth	r3, r3
 800bc10:	3404      	adds	r4, #4
 800bc12:	f04f 0b00 	mov.w	fp, #0
 800bc16:	9304      	str	r3, [sp, #16]
 800bc18:	9a04      	ldr	r2, [sp, #16]
 800bc1a:	f854 3c04 	ldr.w	r3, [r4, #-4]
 800bc1e:	fb13 f302 	smulbb	r3, r3, r2
 800bc22:	9a01      	ldr	r2, [sp, #4]
 800bc24:	b29b      	uxth	r3, r3
 800bc26:	1899      	adds	r1, r3, r2
 800bc28:	9305      	str	r3, [sp, #20]
 800bc2a:	f9b6 3004 	ldrsh.w	r3, [r6, #4]
 800bc2e:	b209      	sxth	r1, r1
 800bc30:	4299      	cmp	r1, r3
 800bc32:	db4d      	blt.n	800bcd0 <_ZN8touchgfx9Container16getLastChildNearEssPPNS_8DrawableEPsS4_+0x198>
 800bc34:	8932      	ldrh	r2, [r6, #8]
 800bc36:	4413      	add	r3, r2
 800bc38:	b21b      	sxth	r3, r3
 800bc3a:	4299      	cmp	r1, r3
 800bc3c:	da48      	bge.n	800bcd0 <_ZN8touchgfx9Container16getLastChildNearEssPPNS_8DrawableEPsS4_+0x198>
 800bc3e:	9b04      	ldr	r3, [sp, #16]
 800bc40:	6827      	ldr	r7, [r4, #0]
 800bc42:	fb17 f703 	smulbb	r7, r7, r3
 800bc46:	9b02      	ldr	r3, [sp, #8]
 800bc48:	b2bf      	uxth	r7, r7
 800bc4a:	18fa      	adds	r2, r7, r3
 800bc4c:	f9b6 3006 	ldrsh.w	r3, [r6, #6]
 800bc50:	b212      	sxth	r2, r2
 800bc52:	429a      	cmp	r2, r3
 800bc54:	db3c      	blt.n	800bcd0 <_ZN8touchgfx9Container16getLastChildNearEssPPNS_8DrawableEPsS4_+0x198>
 800bc56:	8970      	ldrh	r0, [r6, #10]
 800bc58:	4403      	add	r3, r0
 800bc5a:	b21b      	sxth	r3, r3
 800bc5c:	429a      	cmp	r2, r3
 800bc5e:	da37      	bge.n	800bcd0 <_ZN8touchgfx9Container16getLastChildNearEssPPNS_8DrawableEPsS4_+0x198>
 800bc60:	2300      	movs	r3, #0
 800bc62:	930b      	str	r3, [sp, #44]	@ 0x2c
 800bc64:	4630      	mov	r0, r6
 800bc66:	ab0b      	add	r3, sp, #44	@ 0x2c
 800bc68:	f7ff ff36 	bl	800bad8 <_ZN8touchgfx9Container12getLastChildEssPPNS_8DrawableE>
 800bc6c:	9a0b      	ldr	r2, [sp, #44]	@ 0x2c
 800bc6e:	b37a      	cbz	r2, 800bcd0 <_ZN8touchgfx9Container16getLastChildNearEssPPNS_8DrawableEPsS4_+0x198>
 800bc70:	4552      	cmp	r2, sl
 800bc72:	d02d      	beq.n	800bcd0 <_ZN8touchgfx9Container16getLastChildNearEssPPNS_8DrawableEPsS4_+0x198>
 800bc74:	4611      	mov	r1, r2
 800bc76:	a80e      	add	r0, sp, #56	@ 0x38
 800bc78:	9209      	str	r2, [sp, #36]	@ 0x24
 800bc7a:	f004 fb5b 	bl	8010334 <_ZNK8touchgfx8Drawable15getAbsoluteRectEv>
 800bc7e:	9a06      	ldr	r2, [sp, #24]
 800bc80:	f9bd 0038 	ldrsh.w	r0, [sp, #56]	@ 0x38
 800bc84:	9b01      	ldr	r3, [sp, #4]
 800bc86:	f9bd 103c 	ldrsh.w	r1, [sp, #60]	@ 0x3c
 800bc8a:	f9bd c03e 	ldrsh.w	ip, [sp, #62]	@ 0x3e
 800bc8e:	4413      	add	r3, r2
 800bc90:	f04f 0e02 	mov.w	lr, #2
 800bc94:	fb91 f1fe 	sdiv	r1, r1, lr
 800bc98:	4401      	add	r1, r0
 800bc9a:	1a58      	subs	r0, r3, r1
 800bc9c:	9a07      	ldr	r2, [sp, #28]
 800bc9e:	9b02      	ldr	r3, [sp, #8]
 800bca0:	f9bd 103a 	ldrsh.w	r1, [sp, #58]	@ 0x3a
 800bca4:	fb9c fcfe 	sdiv	ip, ip, lr
 800bca8:	4413      	add	r3, r2
 800bcaa:	448c      	add	ip, r1
 800bcac:	eba3 030c 	sub.w	r3, r3, ip
 800bcb0:	435b      	muls	r3, r3
 800bcb2:	fb00 3300 	mla	r3, r0, r0, r3
 800bcb6:	42ab      	cmp	r3, r5
 800bcb8:	9a09      	ldr	r2, [sp, #36]	@ 0x24
 800bcba:	d208      	bcs.n	800bcce <_ZN8touchgfx9Container16getLastChildNearEssPPNS_8DrawableEPsS4_+0x196>
 800bcbc:	9803      	ldr	r0, [sp, #12]
 800bcbe:	990b      	ldr	r1, [sp, #44]	@ 0x2c
 800bcc0:	6001      	str	r1, [r0, #0]
 800bcc2:	992a      	ldr	r1, [sp, #168]	@ 0xa8
 800bcc4:	9805      	ldr	r0, [sp, #20]
 800bcc6:	8008      	strh	r0, [r1, #0]
 800bcc8:	992b      	ldr	r1, [sp, #172]	@ 0xac
 800bcca:	461d      	mov	r5, r3
 800bccc:	800f      	strh	r7, [r1, #0]
 800bcce:	4692      	mov	sl, r2
 800bcd0:	f10b 0b01 	add.w	fp, fp, #1
 800bcd4:	f1bb 0f04 	cmp.w	fp, #4
 800bcd8:	f104 0408 	add.w	r4, r4, #8
 800bcdc:	d19c      	bne.n	800bc18 <_ZN8touchgfx9Container16getLastChildNearEssPPNS_8DrawableEPsS4_+0xe0>
 800bcde:	9b00      	ldr	r3, [sp, #0]
 800bce0:	9c08      	ldr	r4, [sp, #32]
 800bce2:	444b      	add	r3, r9
 800bce4:	4544      	cmp	r4, r8
 800bce6:	9300      	str	r3, [sp, #0]
 800bce8:	d187      	bne.n	800bbfa <_ZN8touchgfx9Container16getLastChildNearEssPPNS_8DrawableEPsS4_+0xc2>
 800bcea:	b021      	add	sp, #132	@ 0x84
 800bcec:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 800bcf0:	f04f 35ff 	mov.w	r5, #4294967295
 800bcf4:	e766      	b.n	800bbc4 <_ZN8touchgfx9Container16getLastChildNearEssPPNS_8DrawableEPsS4_+0x8c>
 800bcf6:	bf00      	nop
 800bcf8:	20002c5c 	.word	0x20002c5c
 800bcfc:	08022870 	.word	0x08022870

0800bd00 <_ZN8touchgfx4RectaNERKS0_>:
 800bd00:	e92d 43f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, lr}
 800bd04:	f9b1 7000 	ldrsh.w	r7, [r1]
 800bd08:	888c      	ldrh	r4, [r1, #4]
 800bd0a:	f9b0 9000 	ldrsh.w	r9, [r0]
 800bd0e:	443c      	add	r4, r7
 800bd10:	b2a4      	uxth	r4, r4
 800bd12:	fa0f f884 	sxth.w	r8, r4
 800bd16:	45c1      	cmp	r9, r8
 800bd18:	da2f      	bge.n	800bd7a <_ZN8touchgfx4RectaNERKS0_+0x7a>
 800bd1a:	8882      	ldrh	r2, [r0, #4]
 800bd1c:	444a      	add	r2, r9
 800bd1e:	b292      	uxth	r2, r2
 800bd20:	fa0f fe82 	sxth.w	lr, r2
 800bd24:	4577      	cmp	r7, lr
 800bd26:	da28      	bge.n	800bd7a <_ZN8touchgfx4RectaNERKS0_+0x7a>
 800bd28:	f9b1 5002 	ldrsh.w	r5, [r1, #2]
 800bd2c:	88cb      	ldrh	r3, [r1, #6]
 800bd2e:	f9b0 6002 	ldrsh.w	r6, [r0, #2]
 800bd32:	442b      	add	r3, r5
 800bd34:	b21b      	sxth	r3, r3
 800bd36:	429e      	cmp	r6, r3
 800bd38:	da1f      	bge.n	800bd7a <_ZN8touchgfx4RectaNERKS0_+0x7a>
 800bd3a:	88c3      	ldrh	r3, [r0, #6]
 800bd3c:	4433      	add	r3, r6
 800bd3e:	b29b      	uxth	r3, r3
 800bd40:	fa0f fc83 	sxth.w	ip, r3
 800bd44:	4565      	cmp	r5, ip
 800bd46:	da18      	bge.n	800bd7a <_ZN8touchgfx4RectaNERKS0_+0x7a>
 800bd48:	454f      	cmp	r7, r9
 800bd4a:	bfb8      	it	lt
 800bd4c:	464f      	movlt	r7, r9
 800bd4e:	42b5      	cmp	r5, r6
 800bd50:	bfb8      	it	lt
 800bd52:	4635      	movlt	r5, r6
 800bd54:	45f0      	cmp	r8, lr
 800bd56:	bfd8      	it	le
 800bd58:	4622      	movle	r2, r4
 800bd5a:	1bd2      	subs	r2, r2, r7
 800bd5c:	8082      	strh	r2, [r0, #4]
 800bd5e:	884a      	ldrh	r2, [r1, #2]
 800bd60:	88c9      	ldrh	r1, [r1, #6]
 800bd62:	8007      	strh	r7, [r0, #0]
 800bd64:	440a      	add	r2, r1
 800bd66:	b292      	uxth	r2, r2
 800bd68:	b211      	sxth	r1, r2
 800bd6a:	458c      	cmp	ip, r1
 800bd6c:	bfa8      	it	ge
 800bd6e:	4613      	movge	r3, r2
 800bd70:	1b5b      	subs	r3, r3, r5
 800bd72:	80c3      	strh	r3, [r0, #6]
 800bd74:	8045      	strh	r5, [r0, #2]
 800bd76:	e8bd 83f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, pc}
 800bd7a:	2300      	movs	r3, #0
 800bd7c:	8003      	strh	r3, [r0, #0]
 800bd7e:	8043      	strh	r3, [r0, #2]
 800bd80:	8083      	strh	r3, [r0, #4]
 800bd82:	80c3      	strh	r3, [r0, #6]
 800bd84:	e7f7      	b.n	800bd76 <_ZN8touchgfx4RectaNERKS0_+0x76>

0800bd86 <_ZNK8touchgfx4Rect7isEmptyEv>:
 800bd86:	f9b0 3004 	ldrsh.w	r3, [r0, #4]
 800bd8a:	2b00      	cmp	r3, #0
 800bd8c:	dd06      	ble.n	800bd9c <_ZNK8touchgfx4Rect7isEmptyEv+0x16>
 800bd8e:	f9b0 0006 	ldrsh.w	r0, [r0, #6]
 800bd92:	2800      	cmp	r0, #0
 800bd94:	bfcc      	ite	gt
 800bd96:	2000      	movgt	r0, #0
 800bd98:	2001      	movle	r0, #1
 800bd9a:	4770      	bx	lr
 800bd9c:	2001      	movs	r0, #1
 800bd9e:	4770      	bx	lr

0800bda0 <_ZNK8touchgfx9Container16getContainedAreaEv>:
 800bda0:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 800bda4:	2300      	movs	r3, #0
 800bda6:	6a8d      	ldr	r5, [r1, #40]	@ 0x28
 800bda8:	8003      	strh	r3, [r0, #0]
 800bdaa:	4604      	mov	r4, r0
 800bdac:	8043      	strh	r3, [r0, #2]
 800bdae:	8083      	strh	r3, [r0, #4]
 800bdb0:	80c3      	strh	r3, [r0, #6]
 800bdb2:	2d00      	cmp	r5, #0
 800bdb4:	d040      	beq.n	800be38 <_ZNK8touchgfx9Container16getContainedAreaEv+0x98>
 800bdb6:	1d28      	adds	r0, r5, #4
 800bdb8:	f7ff ffe5 	bl	800bd86 <_ZNK8touchgfx4Rect7isEmptyEv>
 800bdbc:	b988      	cbnz	r0, 800bde2 <_ZNK8touchgfx9Container16getContainedAreaEv+0x42>
 800bdbe:	4620      	mov	r0, r4
 800bdc0:	f7ff ffe1 	bl	800bd86 <_ZNK8touchgfx4Rect7isEmptyEv>
 800bdc4:	f9b5 2004 	ldrsh.w	r2, [r5, #4]
 800bdc8:	f9b5 3006 	ldrsh.w	r3, [r5, #6]
 800bdcc:	f9b5 e008 	ldrsh.w	lr, [r5, #8]
 800bdd0:	f9b5 c00a 	ldrsh.w	ip, [r5, #10]
 800bdd4:	b138      	cbz	r0, 800bde6 <_ZNK8touchgfx9Container16getContainedAreaEv+0x46>
 800bdd6:	8022      	strh	r2, [r4, #0]
 800bdd8:	8063      	strh	r3, [r4, #2]
 800bdda:	f8a4 e004 	strh.w	lr, [r4, #4]
 800bdde:	f8a4 c006 	strh.w	ip, [r4, #6]
 800bde2:	69ad      	ldr	r5, [r5, #24]
 800bde4:	e7e5      	b.n	800bdb2 <_ZNK8touchgfx9Container16getContainedAreaEv+0x12>
 800bde6:	f9b4 0000 	ldrsh.w	r0, [r4]
 800bdea:	f9b4 1002 	ldrsh.w	r1, [r4, #2]
 800bdee:	f8b4 8004 	ldrh.w	r8, [r4, #4]
 800bdf2:	4290      	cmp	r0, r2
 800bdf4:	4607      	mov	r7, r0
 800bdf6:	bfa8      	it	ge
 800bdf8:	4617      	movge	r7, r2
 800bdfa:	4472      	add	r2, lr
 800bdfc:	f8b4 e006 	ldrh.w	lr, [r4, #6]
 800be00:	8027      	strh	r7, [r4, #0]
 800be02:	4299      	cmp	r1, r3
 800be04:	460e      	mov	r6, r1
 800be06:	4440      	add	r0, r8
 800be08:	bfa8      	it	ge
 800be0a:	461e      	movge	r6, r3
 800be0c:	4471      	add	r1, lr
 800be0e:	4463      	add	r3, ip
 800be10:	b200      	sxth	r0, r0
 800be12:	b212      	sxth	r2, r2
 800be14:	b209      	sxth	r1, r1
 800be16:	b21b      	sxth	r3, r3
 800be18:	4290      	cmp	r0, r2
 800be1a:	bfac      	ite	ge
 800be1c:	ebc7 0200 	rsbge	r2, r7, r0
 800be20:	ebc7 0202 	rsblt	r2, r7, r2
 800be24:	4299      	cmp	r1, r3
 800be26:	bfac      	ite	ge
 800be28:	ebc6 0301 	rsbge	r3, r6, r1
 800be2c:	ebc6 0303 	rsblt	r3, r6, r3
 800be30:	8066      	strh	r6, [r4, #2]
 800be32:	80a2      	strh	r2, [r4, #4]
 800be34:	80e3      	strh	r3, [r4, #6]
 800be36:	e7d4      	b.n	800bde2 <_ZNK8touchgfx9Container16getContainedAreaEv+0x42>
 800be38:	4620      	mov	r0, r4
 800be3a:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}

0800be3e <_ZNK8touchgfx9Container4drawERKNS_4RectE>:
 800be3e:	e92d 41f3 	stmdb	sp!, {r0, r1, r4, r5, r6, r7, r8, lr}
 800be42:	f890 3025 	ldrb.w	r3, [r0, #37]	@ 0x25
 800be46:	b383      	cbz	r3, 800beaa <_ZNK8touchgfx9Container4drawERKNS_4RectE+0x6c>
 800be48:	6a84      	ldr	r4, [r0, #40]	@ 0x28
 800be4a:	b374      	cbz	r4, 800beaa <_ZNK8touchgfx9Container4drawERKNS_4RectE+0x6c>
 800be4c:	f9b1 5000 	ldrsh.w	r5, [r1]
 800be50:	f9b1 6002 	ldrsh.w	r6, [r1, #2]
 800be54:	f9b1 7004 	ldrsh.w	r7, [r1, #4]
 800be58:	f9b1 8006 	ldrsh.w	r8, [r1, #6]
 800be5c:	f894 3025 	ldrb.w	r3, [r4, #37]	@ 0x25
 800be60:	b303      	cbz	r3, 800bea4 <_ZNK8touchgfx9Container4drawERKNS_4RectE+0x66>
 800be62:	4668      	mov	r0, sp
 800be64:	1d21      	adds	r1, r4, #4
 800be66:	f8ad 5000 	strh.w	r5, [sp]
 800be6a:	f8ad 6002 	strh.w	r6, [sp, #2]
 800be6e:	f8ad 7004 	strh.w	r7, [sp, #4]
 800be72:	f8ad 8006 	strh.w	r8, [sp, #6]
 800be76:	f7ff ff43 	bl	800bd00 <_ZN8touchgfx4RectaNERKS0_>
 800be7a:	4668      	mov	r0, sp
 800be7c:	f7ff ff83 	bl	800bd86 <_ZNK8touchgfx4Rect7isEmptyEv>
 800be80:	b980      	cbnz	r0, 800bea4 <_ZNK8touchgfx9Container4drawERKNS_4RectE+0x66>
 800be82:	f8bd 3000 	ldrh.w	r3, [sp]
 800be86:	88a2      	ldrh	r2, [r4, #4]
 800be88:	1a9b      	subs	r3, r3, r2
 800be8a:	f8ad 3000 	strh.w	r3, [sp]
 800be8e:	88e2      	ldrh	r2, [r4, #6]
 800be90:	f8bd 3002 	ldrh.w	r3, [sp, #2]
 800be94:	1a9b      	subs	r3, r3, r2
 800be96:	f8ad 3002 	strh.w	r3, [sp, #2]
 800be9a:	6823      	ldr	r3, [r4, #0]
 800be9c:	4669      	mov	r1, sp
 800be9e:	689b      	ldr	r3, [r3, #8]
 800bea0:	4620      	mov	r0, r4
 800bea2:	4798      	blx	r3
 800bea4:	69a4      	ldr	r4, [r4, #24]
 800bea6:	2c00      	cmp	r4, #0
 800bea8:	d1d8      	bne.n	800be5c <_ZNK8touchgfx9Container4drawERKNS_4RectE+0x1e>
 800beaa:	b002      	add	sp, #8
 800beac:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}

0800beb0 <_ZN8touchgfx9Container14setupDrawChainERKNS_4RectEPPNS_8DrawableE>:
 800beb0:	b573      	push	{r0, r1, r4, r5, r6, lr}
 800beb2:	f890 3025 	ldrb.w	r3, [r0, #37]	@ 0x25
 800beb6:	460d      	mov	r5, r1
 800beb8:	4616      	mov	r6, r2
 800beba:	b323      	cbz	r3, 800bf06 <_ZN8touchgfx9Container14setupDrawChainERKNS_4RectEPPNS_8DrawableE+0x56>
 800bebc:	6a84      	ldr	r4, [r0, #40]	@ 0x28
 800bebe:	b314      	cbz	r4, 800bf06 <_ZN8touchgfx9Container14setupDrawChainERKNS_4RectEPPNS_8DrawableE+0x56>
 800bec0:	f894 3025 	ldrb.w	r3, [r4, #37]	@ 0x25
 800bec4:	b1eb      	cbz	r3, 800bf02 <_ZN8touchgfx9Container14setupDrawChainERKNS_4RectEPPNS_8DrawableE+0x52>
 800bec6:	6828      	ldr	r0, [r5, #0]
 800bec8:	6869      	ldr	r1, [r5, #4]
 800beca:	466b      	mov	r3, sp
 800becc:	c303      	stmia	r3!, {r0, r1}
 800bece:	4668      	mov	r0, sp
 800bed0:	1d21      	adds	r1, r4, #4
 800bed2:	f7ff ff15 	bl	800bd00 <_ZN8touchgfx4RectaNERKS0_>
 800bed6:	4668      	mov	r0, sp
 800bed8:	f7ff ff55 	bl	800bd86 <_ZNK8touchgfx4Rect7isEmptyEv>
 800bedc:	b988      	cbnz	r0, 800bf02 <_ZN8touchgfx9Container14setupDrawChainERKNS_4RectEPPNS_8DrawableE+0x52>
 800bede:	f8bd 3000 	ldrh.w	r3, [sp]
 800bee2:	88a2      	ldrh	r2, [r4, #4]
 800bee4:	1a9b      	subs	r3, r3, r2
 800bee6:	f8ad 3000 	strh.w	r3, [sp]
 800beea:	88e2      	ldrh	r2, [r4, #6]
 800beec:	f8bd 3002 	ldrh.w	r3, [sp, #2]
 800bef0:	1a9b      	subs	r3, r3, r2
 800bef2:	f8ad 3002 	strh.w	r3, [sp, #2]
 800bef6:	6823      	ldr	r3, [r4, #0]
 800bef8:	4632      	mov	r2, r6
 800befa:	6ddb      	ldr	r3, [r3, #92]	@ 0x5c
 800befc:	4669      	mov	r1, sp
 800befe:	4620      	mov	r0, r4
 800bf00:	4798      	blx	r3
 800bf02:	69a4      	ldr	r4, [r4, #24]
 800bf04:	e7db      	b.n	800bebe <_ZN8touchgfx9Container14setupDrawChainERKNS_4RectEPPNS_8DrawableE+0xe>
 800bf06:	b002      	add	sp, #8
 800bf08:	bd70      	pop	{r4, r5, r6, pc}

0800bf0a <_ZN8touchgfx3HAL27drawDrawableInDynamicBitmapERNS_8DrawableEt>:
 800bf0a:	b513      	push	{r0, r1, r4, lr}
 800bf0c:	6803      	ldr	r3, [r0, #0]
 800bf0e:	f8d3 40a8 	ldr.w	r4, [r3, #168]	@ 0xa8
 800bf12:	2300      	movs	r3, #0
 800bf14:	e9cd 3300 	strd	r3, r3, [sp]
 800bf18:	466b      	mov	r3, sp
 800bf1a:	47a0      	blx	r4
 800bf1c:	b002      	add	sp, #8
 800bf1e:	bd10      	pop	{r4, pc}

0800bf20 <_ZN8touchgfx3HAL16flushFrameBufferEv>:
 800bf20:	2301      	movs	r3, #1
 800bf22:	f880 304b 	strb.w	r3, [r0, #75]	@ 0x4b
 800bf26:	f880 306d 	strb.w	r3, [r0, #109]	@ 0x6d
 800bf2a:	4770      	bx	lr

0800bf2c <_ZN8touchgfx3HAL16flushFrameBufferERKNS_4RectE>:
 800bf2c:	2301      	movs	r3, #1
 800bf2e:	f880 304b 	strb.w	r3, [r0, #75]	@ 0x4b
 800bf32:	f880 306d 	strb.w	r3, [r0, #109]	@ 0x6d
 800bf36:	4770      	bx	lr

0800bf38 <_ZN8touchgfx3HAL17allowDMATransfersEv>:
 800bf38:	6843      	ldr	r3, [r0, #4]
 800bf3a:	2201      	movs	r2, #1
 800bf3c:	725a      	strb	r2, [r3, #9]
 800bf3e:	6840      	ldr	r0, [r0, #4]
 800bf40:	6803      	ldr	r3, [r0, #0]
 800bf42:	691b      	ldr	r3, [r3, #16]
 800bf44:	4718      	bx	r3

0800bf46 <_ZN8touchgfx3HAL8flushDMAEv>:
 800bf46:	6840      	ldr	r0, [r0, #4]
 800bf48:	6803      	ldr	r3, [r0, #0]
 800bf4a:	689b      	ldr	r3, [r3, #8]
 800bf4c:	4718      	bx	r3

0800bf4e <_ZN8touchgfx3HAL8blitCopyEPKtttttthbtNS_6Bitmap12BitmapFormatES4_b>:
 800bf4e:	b530      	push	{r4, r5, lr}
 800bf50:	b08b      	sub	sp, #44	@ 0x2c
 800bf52:	6804      	ldr	r4, [r0, #0]
 800bf54:	f89d 5058 	ldrb.w	r5, [sp, #88]	@ 0x58
 800bf58:	9509      	str	r5, [sp, #36]	@ 0x24
 800bf5a:	f89d 5054 	ldrb.w	r5, [sp, #84]	@ 0x54
 800bf5e:	9508      	str	r5, [sp, #32]
 800bf60:	f89d 5050 	ldrb.w	r5, [sp, #80]	@ 0x50
 800bf64:	9507      	str	r5, [sp, #28]
 800bf66:	f8bd 504c 	ldrh.w	r5, [sp, #76]	@ 0x4c
 800bf6a:	9506      	str	r5, [sp, #24]
 800bf6c:	f89d 5048 	ldrb.w	r5, [sp, #72]	@ 0x48
 800bf70:	9505      	str	r5, [sp, #20]
 800bf72:	f89d 5044 	ldrb.w	r5, [sp, #68]	@ 0x44
 800bf76:	9504      	str	r5, [sp, #16]
 800bf78:	f8bd 5040 	ldrh.w	r5, [sp, #64]	@ 0x40
 800bf7c:	9503      	str	r5, [sp, #12]
 800bf7e:	f8bd 503c 	ldrh.w	r5, [sp, #60]	@ 0x3c
 800bf82:	9502      	str	r5, [sp, #8]
 800bf84:	f8bd 5038 	ldrh.w	r5, [sp, #56]	@ 0x38
 800bf88:	e9cd 3500 	strd	r3, r5, [sp]
 800bf8c:	4613      	mov	r3, r2
 800bf8e:	6be4      	ldr	r4, [r4, #60]	@ 0x3c
 800bf90:	2200      	movs	r2, #0
 800bf92:	47a0      	blx	r4
 800bf94:	b00b      	add	sp, #44	@ 0x2c
 800bf96:	bd30      	pop	{r4, r5, pc}

0800bf98 <_ZN8touchgfx3HAL10beginFrameEv>:
 800bf98:	4b04      	ldr	r3, [pc, #16]	@ (800bfac <_ZN8touchgfx3HAL10beginFrameEv+0x14>)
 800bf9a:	781b      	ldrb	r3, [r3, #0]
 800bf9c:	b123      	cbz	r3, 800bfa8 <_ZN8touchgfx3HAL10beginFrameEv+0x10>
 800bf9e:	f890 006e 	ldrb.w	r0, [r0, #110]	@ 0x6e
 800bfa2:	f080 0001 	eor.w	r0, r0, #1
 800bfa6:	4770      	bx	lr
 800bfa8:	2001      	movs	r0, #1
 800bfaa:	4770      	bx	lr
 800bfac:	20002c5a 	.word	0x20002c5a

0800bfb0 <_ZN8touchgfx3HAL8endFrameEv>:
 800bfb0:	b510      	push	{r4, lr}
 800bfb2:	4604      	mov	r4, r0
 800bfb4:	6840      	ldr	r0, [r0, #4]
 800bfb6:	6803      	ldr	r3, [r0, #0]
 800bfb8:	689b      	ldr	r3, [r3, #8]
 800bfba:	4798      	blx	r3
 800bfbc:	f894 306d 	ldrb.w	r3, [r4, #109]	@ 0x6d
 800bfc0:	b113      	cbz	r3, 800bfc8 <_ZN8touchgfx3HAL8endFrameEv+0x18>
 800bfc2:	2301      	movs	r3, #1
 800bfc4:	f884 306e 	strb.w	r3, [r4, #110]	@ 0x6e
 800bfc8:	bd10      	pop	{r4, pc}

0800bfca <_ZN8touchgfx3HAL10initializeEv>:
 800bfca:	b510      	push	{r4, lr}
 800bfcc:	4604      	mov	r4, r0
 800bfce:	f7fe f80b 	bl	8009fe8 <_ZN8touchgfx10OSWrappers10initializeEv>
 800bfd2:	f7fd fd51 	bl	8009a78 <_ZN8touchgfx4GPIO4initEv>
 800bfd6:	6860      	ldr	r0, [r4, #4]
 800bfd8:	6803      	ldr	r3, [r0, #0]
 800bfda:	68db      	ldr	r3, [r3, #12]
 800bfdc:	4798      	blx	r3
 800bfde:	68e0      	ldr	r0, [r4, #12]
 800bfe0:	6803      	ldr	r3, [r0, #0]
 800bfe2:	689b      	ldr	r3, [r3, #8]
 800bfe4:	4798      	blx	r3
 800bfe6:	6823      	ldr	r3, [r4, #0]
 800bfe8:	4620      	mov	r0, r4
 800bfea:	6f5b      	ldr	r3, [r3, #116]	@ 0x74
 800bfec:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
 800bff0:	4718      	bx	r3

0800bff2 <_ZN8touchgfx3HAL9taskEntryEv>:
 800bff2:	b508      	push	{r3, lr}
 800bff4:	6803      	ldr	r3, [r0, #0]
 800bff6:	4604      	mov	r4, r0
 800bff8:	f8d3 3080 	ldr.w	r3, [r3, #128]	@ 0x80
 800bffc:	4798      	blx	r3
 800bffe:	6823      	ldr	r3, [r4, #0]
 800c000:	6f9b      	ldr	r3, [r3, #120]	@ 0x78
 800c002:	4620      	mov	r0, r4
 800c004:	4798      	blx	r3
 800c006:	f7fe f863 	bl	800a0d0 <_ZN8touchgfx10OSWrappers12waitForVSyncEv>
 800c00a:	6823      	ldr	r3, [r4, #0]
 800c00c:	6f1b      	ldr	r3, [r3, #112]	@ 0x70
 800c00e:	e7f8      	b.n	800c002 <_ZN8touchgfx3HAL9taskEntryEv+0x10>

0800c010 <_ZN8touchgfx3HAL4tickEv>:
 800c010:	b57f      	push	{r0, r1, r2, r3, r4, r5, r6, lr}
 800c012:	6803      	ldr	r3, [r0, #0]
 800c014:	4d5b      	ldr	r5, [pc, #364]	@ (800c184 <_ZN8touchgfx3HAL4tickEv+0x174>)
 800c016:	f8d3 30b0 	ldr.w	r3, [r3, #176]	@ 0xb0
 800c01a:	4604      	mov	r4, r0
 800c01c:	4798      	blx	r3
 800c01e:	2800      	cmp	r0, #0
 800c020:	f000 8095 	beq.w	800c14e <_ZN8touchgfx3HAL4tickEv+0x13e>
 800c024:	2001      	movs	r0, #1
 800c026:	f7fd fd2f 	bl	8009a88 <_ZN8touchgfx4GPIO3setENS0_7GPIO_IDE>
 800c02a:	f894 306a 	ldrb.w	r3, [r4, #106]	@ 0x6a
 800c02e:	f884 306b 	strb.w	r3, [r4, #107]	@ 0x6b
 800c032:	f894 3079 	ldrb.w	r3, [r4, #121]	@ 0x79
 800c036:	2600      	movs	r6, #0
 800c038:	f884 606a 	strb.w	r6, [r4, #106]	@ 0x6a
 800c03c:	f884 604b 	strb.w	r6, [r4, #75]	@ 0x4b
 800c040:	b133      	cbz	r3, 800c050 <_ZN8touchgfx3HAL4tickEv+0x40>
 800c042:	6823      	ldr	r3, [r4, #0]
 800c044:	4620      	mov	r0, r4
 800c046:	f8d3 30c4 	ldr.w	r3, [r3, #196]	@ 0xc4
 800c04a:	4798      	blx	r3
 800c04c:	f884 6079 	strb.w	r6, [r4, #121]	@ 0x79
 800c050:	f894 304a 	ldrb.w	r3, [r4, #74]	@ 0x4a
 800c054:	6862      	ldr	r2, [r4, #4]
 800c056:	f083 0301 	eor.w	r3, r3, #1
 800c05a:	7253      	strb	r3, [r2, #9]
 800c05c:	2601      	movs	r6, #1
 800c05e:	702e      	strb	r6, [r5, #0]
 800c060:	f003 f856 	bl	800f110 <_ZN8touchgfx11Application11getInstanceEv>
 800c064:	6803      	ldr	r3, [r0, #0]
 800c066:	6b5b      	ldr	r3, [r3, #52]	@ 0x34
 800c068:	4798      	blx	r3
 800c06a:	f894 306b 	ldrb.w	r3, [r4, #107]	@ 0x6b
 800c06e:	b90b      	cbnz	r3, 800c074 <_ZN8touchgfx3HAL4tickEv+0x64>
 800c070:	f884 606b 	strb.w	r6, [r4, #107]	@ 0x6b
 800c074:	f003 f84c 	bl	800f110 <_ZN8touchgfx11Application11getInstanceEv>
 800c078:	6803      	ldr	r3, [r0, #0]
 800c07a:	695b      	ldr	r3, [r3, #20]
 800c07c:	4798      	blx	r3
 800c07e:	6de0      	ldr	r0, [r4, #92]	@ 0x5c
 800c080:	6803      	ldr	r3, [r0, #0]
 800c082:	691b      	ldr	r3, [r3, #16]
 800c084:	4798      	blx	r3
 800c086:	f894 306b 	ldrb.w	r3, [r4, #107]	@ 0x6b
 800c08a:	f894 206c 	ldrb.w	r2, [r4, #108]	@ 0x6c
 800c08e:	3b01      	subs	r3, #1
 800c090:	b2db      	uxtb	r3, r3
 800c092:	f884 306b 	strb.w	r3, [r4, #107]	@ 0x6b
 800c096:	b10a      	cbz	r2, 800c09c <_ZN8touchgfx3HAL4tickEv+0x8c>
 800c098:	2b00      	cmp	r3, #0
 800c09a:	d1eb      	bne.n	800c074 <_ZN8touchgfx3HAL4tickEv+0x64>
 800c09c:	4a3a      	ldr	r2, [pc, #232]	@ (800c188 <_ZN8touchgfx3HAL4tickEv+0x178>)
 800c09e:	f994 1068 	ldrsb.w	r1, [r4, #104]	@ 0x68
 800c0a2:	7813      	ldrb	r3, [r2, #0]
 800c0a4:	3301      	adds	r3, #1
 800c0a6:	b25b      	sxtb	r3, r3
 800c0a8:	4299      	cmp	r1, r3
 800c0aa:	7013      	strb	r3, [r2, #0]
 800c0ac:	dc10      	bgt.n	800c0d0 <_ZN8touchgfx3HAL4tickEv+0xc0>
 800c0ae:	68e0      	ldr	r0, [r4, #12]
 800c0b0:	2300      	movs	r3, #0
 800c0b2:	7013      	strb	r3, [r2, #0]
 800c0b4:	6803      	ldr	r3, [r0, #0]
 800c0b6:	aa03      	add	r2, sp, #12
 800c0b8:	68db      	ldr	r3, [r3, #12]
 800c0ba:	a902      	add	r1, sp, #8
 800c0bc:	4798      	blx	r3
 800c0be:	6823      	ldr	r3, [r4, #0]
 800c0c0:	2800      	cmp	r0, #0
 800c0c2:	d050      	beq.n	800c166 <_ZN8touchgfx3HAL4tickEv+0x156>
 800c0c4:	f8d3 30bc 	ldr.w	r3, [r3, #188]	@ 0xbc
 800c0c8:	e9dd 1202 	ldrd	r1, r2, [sp, #8]
 800c0cc:	4620      	mov	r0, r4
 800c0ce:	4798      	blx	r3
 800c0d0:	6960      	ldr	r0, [r4, #20]
 800c0d2:	2300      	movs	r3, #0
 800c0d4:	f88d 3007 	strb.w	r3, [sp, #7]
 800c0d8:	b158      	cbz	r0, 800c0f2 <_ZN8touchgfx3HAL4tickEv+0xe2>
 800c0da:	6803      	ldr	r3, [r0, #0]
 800c0dc:	f10d 0107 	add.w	r1, sp, #7
 800c0e0:	68db      	ldr	r3, [r3, #12]
 800c0e2:	4798      	blx	r3
 800c0e4:	b128      	cbz	r0, 800c0f2 <_ZN8touchgfx3HAL4tickEv+0xe2>
 800c0e6:	6de0      	ldr	r0, [r4, #92]	@ 0x5c
 800c0e8:	f89d 1007 	ldrb.w	r1, [sp, #7]
 800c0ec:	6803      	ldr	r3, [r0, #0]
 800c0ee:	68db      	ldr	r3, [r3, #12]
 800c0f0:	4798      	blx	r3
 800c0f2:	f104 001c 	add.w	r0, r4, #28
 800c0f6:	f014 faa7 	bl	8020648 <_ZN8touchgfx8Gestures4tickEv>
 800c0fa:	f894 3070 	ldrb.w	r3, [r4, #112]	@ 0x70
 800c0fe:	b30b      	cbz	r3, 800c144 <_ZN8touchgfx3HAL4tickEv+0x134>
 800c100:	6920      	ldr	r0, [r4, #16]
 800c102:	6803      	ldr	r3, [r0, #0]
 800c104:	691b      	ldr	r3, [r3, #16]
 800c106:	4798      	blx	r3
 800c108:	6f63      	ldr	r3, [r4, #116]	@ 0x74
 800c10a:	4606      	mov	r6, r0
 800c10c:	b903      	cbnz	r3, 800c110 <_ZN8touchgfx3HAL4tickEv+0x100>
 800c10e:	6760      	str	r0, [r4, #116]	@ 0x74
 800c110:	6f63      	ldr	r3, [r4, #116]	@ 0x74
 800c112:	4a1e      	ldr	r2, [pc, #120]	@ (800c18c <_ZN8touchgfx3HAL4tickEv+0x17c>)
 800c114:	1af3      	subs	r3, r6, r3
 800c116:	4293      	cmp	r3, r2
 800c118:	d914      	bls.n	800c144 <_ZN8touchgfx3HAL4tickEv+0x134>
 800c11a:	6920      	ldr	r0, [r4, #16]
 800c11c:	6803      	ldr	r3, [r0, #0]
 800c11e:	699b      	ldr	r3, [r3, #24]
 800c120:	4798      	blx	r3
 800c122:	6f63      	ldr	r3, [r4, #116]	@ 0x74
 800c124:	2264      	movs	r2, #100	@ 0x64
 800c126:	1af3      	subs	r3, r6, r3
 800c128:	fbb3 f3f2 	udiv	r3, r3, r2
 800c12c:	fbb0 f0f3 	udiv	r0, r0, r3
 800c130:	2800      	cmp	r0, #0
 800c132:	dc1d      	bgt.n	800c170 <_ZN8touchgfx3HAL4tickEv+0x160>
 800c134:	f884 2069 	strb.w	r2, [r4, #105]	@ 0x69
 800c138:	6920      	ldr	r0, [r4, #16]
 800c13a:	6803      	ldr	r3, [r0, #0]
 800c13c:	2100      	movs	r1, #0
 800c13e:	69db      	ldr	r3, [r3, #28]
 800c140:	4798      	blx	r3
 800c142:	6766      	str	r6, [r4, #116]	@ 0x74
 800c144:	f002 ffe4 	bl	800f110 <_ZN8touchgfx11Application11getInstanceEv>
 800c148:	6803      	ldr	r3, [r0, #0]
 800c14a:	6b9b      	ldr	r3, [r3, #56]	@ 0x38
 800c14c:	4798      	blx	r3
 800c14e:	6823      	ldr	r3, [r4, #0]
 800c150:	4620      	mov	r0, r4
 800c152:	f8d3 30b4 	ldr.w	r3, [r3, #180]	@ 0xb4
 800c156:	4798      	blx	r3
 800c158:	2001      	movs	r0, #1
 800c15a:	f7fd fcb1 	bl	8009ac0 <_ZN8touchgfx4GPIO5clearENS0_7GPIO_IDE>
 800c15e:	2300      	movs	r3, #0
 800c160:	702b      	strb	r3, [r5, #0]
 800c162:	b004      	add	sp, #16
 800c164:	bd70      	pop	{r4, r5, r6, pc}
 800c166:	f8d3 30c0 	ldr.w	r3, [r3, #192]	@ 0xc0
 800c16a:	4620      	mov	r0, r4
 800c16c:	4798      	blx	r3
 800c16e:	e7af      	b.n	800c0d0 <_ZN8touchgfx3HAL4tickEv+0xc0>
 800c170:	2863      	cmp	r0, #99	@ 0x63
 800c172:	bfcb      	itete	gt
 800c174:	2300      	movgt	r3, #0
 800c176:	f1c0 0064 	rsble	r0, r0, #100	@ 0x64
 800c17a:	f884 3069 	strbgt.w	r3, [r4, #105]	@ 0x69
 800c17e:	f884 0069 	strble.w	r0, [r4, #105]	@ 0x69
 800c182:	e7d9      	b.n	800c138 <_ZN8touchgfx3HAL4tickEv+0x128>
 800c184:	20002c60 	.word	0x20002c60
 800c188:	20002c61 	.word	0x20002c61
 800c18c:	05f5e100 	.word	0x05f5e100

0800c190 <_ZN8touchgfx3HAL17unlockFrameBufferEv>:
 800c190:	b510      	push	{r4, lr}
 800c192:	4604      	mov	r4, r0
 800c194:	f7fd ff50 	bl	800a038 <_ZN8touchgfx10OSWrappers24giveFrameBufferSemaphoreEv>
 800c198:	6863      	ldr	r3, [r4, #4]
 800c19a:	2200      	movs	r2, #0
 800c19c:	729a      	strb	r2, [r3, #10]
 800c19e:	bd10      	pop	{r4, pc}

0800c1a0 <_ZN8touchgfx3HAL21registerEventListenerERNS_15UIEventListenerE>:
 800c1a0:	65c1      	str	r1, [r0, #92]	@ 0x5c
 800c1a2:	301c      	adds	r0, #28
 800c1a4:	f014 ba4e 	b.w	8020644 <_ZN8touchgfx8Gestures21registerEventListenerERNS_15UIEventListenerE>

0800c1a8 <_ZN8touchgfx3HAL5touchEll>:
 800c1a8:	b530      	push	{r4, r5, lr}
 800c1aa:	b087      	sub	sp, #28
 800c1ac:	4604      	mov	r4, r0
 800c1ae:	a804      	add	r0, sp, #16
 800c1b0:	e9cd 1204 	strd	r1, r2, [sp, #16]
 800c1b4:	f002 fd9e 	bl	800ecf4 <_ZN8touchgfx16TouchCalibration14translatePointERNS_5PointE>
 800c1b8:	9b04      	ldr	r3, [sp, #16]
 800c1ba:	f8ad 300c 	strh.w	r3, [sp, #12]
 800c1be:	a906      	add	r1, sp, #24
 800c1c0:	9b05      	ldr	r3, [sp, #20]
 800c1c2:	f821 3d0a 	strh.w	r3, [r1, #-10]!
 800c1c6:	a803      	add	r0, sp, #12
 800c1c8:	f002 fde6 	bl	800ed98 <_ZN8touchgfx21DisplayTransformation29transformFrameBufferToDisplayERsS1_>
 800c1cc:	f894 106f 	ldrb.w	r1, [r4, #111]	@ 0x6f
 800c1d0:	f8bd 200c 	ldrh.w	r2, [sp, #12]
 800c1d4:	f8bd 300e 	ldrh.w	r3, [sp, #14]
 800c1d8:	f104 001c 	add.w	r0, r4, #28
 800c1dc:	b189      	cbz	r1, 800c202 <_ZN8touchgfx3HAL5touchEll+0x5a>
 800c1de:	f8b4 5064 	ldrh.w	r5, [r4, #100]	@ 0x64
 800c1e2:	9300      	str	r3, [sp, #0]
 800c1e4:	f8b4 1060 	ldrh.w	r1, [r4, #96]	@ 0x60
 800c1e8:	4613      	mov	r3, r2
 800c1ea:	462a      	mov	r2, r5
 800c1ec:	f014 fa3a 	bl	8020664 <_ZN8touchgfx8Gestures17registerDragEventEtttt>
 800c1f0:	b128      	cbz	r0, 800c1fe <_ZN8touchgfx3HAL5touchEll+0x56>
 800c1f2:	f9bd 300c 	ldrsh.w	r3, [sp, #12]
 800c1f6:	6623      	str	r3, [r4, #96]	@ 0x60
 800c1f8:	f9bd 300e 	ldrsh.w	r3, [sp, #14]
 800c1fc:	6663      	str	r3, [r4, #100]	@ 0x64
 800c1fe:	b007      	add	sp, #28
 800c200:	bd30      	pop	{r4, r5, pc}
 800c202:	f014 fa6f 	bl	80206e4 <_ZN8touchgfx8Gestures18registerClickEventENS_10ClickEvent14ClickEventTypeEtt>
 800c206:	2301      	movs	r3, #1
 800c208:	f884 306f 	strb.w	r3, [r4, #111]	@ 0x6f
 800c20c:	e7f1      	b.n	800c1f2 <_ZN8touchgfx3HAL5touchEll+0x4a>

0800c20e <_ZN8touchgfx3HAL9blockCopyEPvPKvm>:
 800c20e:	b510      	push	{r4, lr}
 800c210:	2b00      	cmp	r3, #0
 800c212:	d046      	beq.n	800c2a2 <_ZN8touchgfx3HAL9blockCopyEPvPKvm+0x94>
 800c214:	ea81 0002 	eor.w	r0, r1, r2
 800c218:	07c4      	lsls	r4, r0, #31
 800c21a:	d508      	bpl.n	800c22e <_ZN8touchgfx3HAL9blockCopyEPvPKvm+0x20>
 800c21c:	440b      	add	r3, r1
 800c21e:	3a01      	subs	r2, #1
 800c220:	428b      	cmp	r3, r1
 800c222:	d93e      	bls.n	800c2a2 <_ZN8touchgfx3HAL9blockCopyEPvPKvm+0x94>
 800c224:	f812 0f01 	ldrb.w	r0, [r2, #1]!
 800c228:	f801 0b01 	strb.w	r0, [r1], #1
 800c22c:	e7f8      	b.n	800c220 <_ZN8touchgfx3HAL9blockCopyEPvPKvm+0x12>
 800c22e:	07d0      	lsls	r0, r2, #31
 800c230:	bf42      	ittt	mi
 800c232:	f812 0b01 	ldrbmi.w	r0, [r2], #1
 800c236:	f801 0b01 	strbmi.w	r0, [r1], #1
 800c23a:	f103 33ff 	addmi.w	r3, r3, #4294967295
 800c23e:	2b01      	cmp	r3, #1
 800c240:	d911      	bls.n	800c266 <_ZN8touchgfx3HAL9blockCopyEPvPKvm+0x58>
 800c242:	ea81 0402 	eor.w	r4, r1, r2
 800c246:	07a4      	lsls	r4, r4, #30
 800c248:	4610      	mov	r0, r2
 800c24a:	d022      	beq.n	800c292 <_ZN8touchgfx3HAL9blockCopyEPvPKvm+0x84>
 800c24c:	f023 0401 	bic.w	r4, r3, #1
 800c250:	440c      	add	r4, r1
 800c252:	428c      	cmp	r4, r1
 800c254:	4602      	mov	r2, r0
 800c256:	d904      	bls.n	800c262 <_ZN8touchgfx3HAL9blockCopyEPvPKvm+0x54>
 800c258:	8812      	ldrh	r2, [r2, #0]
 800c25a:	f821 2b02 	strh.w	r2, [r1], #2
 800c25e:	3002      	adds	r0, #2
 800c260:	e7f7      	b.n	800c252 <_ZN8touchgfx3HAL9blockCopyEPvPKvm+0x44>
 800c262:	f003 0301 	and.w	r3, r3, #1
 800c266:	f023 0003 	bic.w	r0, r3, #3
 800c26a:	4408      	add	r0, r1
 800c26c:	4288      	cmp	r0, r1
 800c26e:	4614      	mov	r4, r2
 800c270:	d904      	bls.n	800c27c <_ZN8touchgfx3HAL9blockCopyEPvPKvm+0x6e>
 800c272:	6824      	ldr	r4, [r4, #0]
 800c274:	f841 4b04 	str.w	r4, [r1], #4
 800c278:	3204      	adds	r2, #4
 800c27a:	e7f7      	b.n	800c26c <_ZN8touchgfx3HAL9blockCopyEPvPKvm+0x5e>
 800c27c:	f003 0303 	and.w	r3, r3, #3
 800c280:	440b      	add	r3, r1
 800c282:	3a01      	subs	r2, #1
 800c284:	428b      	cmp	r3, r1
 800c286:	d90c      	bls.n	800c2a2 <_ZN8touchgfx3HAL9blockCopyEPvPKvm+0x94>
 800c288:	f812 0f01 	ldrb.w	r0, [r2, #1]!
 800c28c:	f801 0b01 	strb.w	r0, [r1], #1
 800c290:	e7f8      	b.n	800c284 <_ZN8touchgfx3HAL9blockCopyEPvPKvm+0x76>
 800c292:	0790      	lsls	r0, r2, #30
 800c294:	d0e7      	beq.n	800c266 <_ZN8touchgfx3HAL9blockCopyEPvPKvm+0x58>
 800c296:	f832 0b02 	ldrh.w	r0, [r2], #2
 800c29a:	f821 0b02 	strh.w	r0, [r1], #2
 800c29e:	3b02      	subs	r3, #2
 800c2a0:	e7e1      	b.n	800c266 <_ZN8touchgfx3HAL9blockCopyEPvPKvm+0x58>
 800c2a2:	2001      	movs	r0, #1
 800c2a4:	bd10      	pop	{r4, pc}

0800c2a6 <_ZN8touchgfx3HAL7noTouchEv>:
 800c2a6:	b510      	push	{r4, lr}
 800c2a8:	f890 306f 	ldrb.w	r3, [r0, #111]	@ 0x6f
 800c2ac:	4604      	mov	r4, r0
 800c2ae:	b153      	cbz	r3, 800c2c6 <_ZN8touchgfx3HAL7noTouchEv+0x20>
 800c2b0:	f8b0 3064 	ldrh.w	r3, [r0, #100]	@ 0x64
 800c2b4:	f8b0 2060 	ldrh.w	r2, [r0, #96]	@ 0x60
 800c2b8:	2101      	movs	r1, #1
 800c2ba:	301c      	adds	r0, #28
 800c2bc:	f014 fa12 	bl	80206e4 <_ZN8touchgfx8Gestures18registerClickEventENS_10ClickEvent14ClickEventTypeEtt>
 800c2c0:	2300      	movs	r3, #0
 800c2c2:	f884 306f 	strb.w	r3, [r4, #111]	@ 0x6f
 800c2c6:	bd10      	pop	{r4, pc}

0800c2c8 <_ZN8touchgfx3HAL27configurePartialFrameBufferEtttt>:
 800c2c8:	e92d 43f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, lr}
 800c2cc:	b085      	sub	sp, #20
 800c2ce:	ad04      	add	r5, sp, #16
 800c2d0:	4604      	mov	r4, r0
 800c2d2:	2000      	movs	r0, #0
 800c2d4:	f845 0d04 	str.w	r0, [r5, #-4]!
 800c2d8:	69a0      	ldr	r0, [r4, #24]
 800c2da:	6806      	ldr	r6, [r0, #0]
 800c2dc:	9501      	str	r5, [sp, #4]
 800c2de:	f8bd 5030 	ldrh.w	r5, [sp, #48]	@ 0x30
 800c2e2:	9500      	str	r5, [sp, #0]
 800c2e4:	6835      	ldr	r5, [r6, #0]
 800c2e6:	4699      	mov	r9, r3
 800c2e8:	460f      	mov	r7, r1
 800c2ea:	4690      	mov	r8, r2
 800c2ec:	47a8      	blx	r5
 800c2ee:	4d10      	ldr	r5, [pc, #64]	@ (800c330 <_ZN8touchgfx3HAL27configurePartialFrameBufferEtttt+0x68>)
 800c2f0:	4606      	mov	r6, r0
 800c2f2:	f8a5 9000 	strh.w	r9, [r5]
 800c2f6:	f7fb fa01 	bl	80076fc <_ZN8touchgfx3HAL3lcdEv>
 800c2fa:	6803      	ldr	r3, [r0, #0]
 800c2fc:	6adb      	ldr	r3, [r3, #44]	@ 0x2c
 800c2fe:	4798      	blx	r3
 800c300:	b128      	cbz	r0, 800c30e <_ZN8touchgfx3HAL27configurePartialFrameBufferEtttt+0x46>
 800c302:	2801      	cmp	r0, #1
 800c304:	d00b      	beq.n	800c31e <_ZN8touchgfx3HAL27configurePartialFrameBufferEtttt+0x56>
 800c306:	4630      	mov	r0, r6
 800c308:	b005      	add	sp, #20
 800c30a:	e8bd 83f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, pc}
 800c30e:	882b      	ldrh	r3, [r5, #0]
 800c310:	fb08 7203 	mla	r2, r8, r3, r7
 800c314:	9b03      	ldr	r3, [sp, #12]
 800c316:	eba3 0342 	sub.w	r3, r3, r2, lsl #1
 800c31a:	63e3      	str	r3, [r4, #60]	@ 0x3c
 800c31c:	e7f3      	b.n	800c306 <_ZN8touchgfx3HAL27configurePartialFrameBufferEtttt+0x3e>
 800c31e:	882a      	ldrh	r2, [r5, #0]
 800c320:	9b03      	ldr	r3, [sp, #12]
 800c322:	fb08 7202 	mla	r2, r8, r2, r7
 800c326:	eb02 0242 	add.w	r2, r2, r2, lsl #1
 800c32a:	1a9a      	subs	r2, r3, r2
 800c32c:	63e2      	str	r2, [r4, #60]	@ 0x3c
 800c32e:	e7ea      	b.n	800c306 <_ZN8touchgfx3HAL27configurePartialFrameBufferEtttt+0x3e>
 800c330:	20002c56 	.word	0x20002c56

0800c334 <_ZN8touchgfx3HAL8blitCopyEPKtttttthbb>:
 800c334:	b5f0      	push	{r4, r5, r6, r7, lr}
 800c336:	b08b      	sub	sp, #44	@ 0x2c
 800c338:	4617      	mov	r7, r2
 800c33a:	4604      	mov	r4, r0
 800c33c:	460e      	mov	r6, r1
 800c33e:	461d      	mov	r5, r3
 800c340:	f7fb f9dc 	bl	80076fc <_ZN8touchgfx3HAL3lcdEv>
 800c344:	6803      	ldr	r3, [r0, #0]
 800c346:	6adb      	ldr	r3, [r3, #44]	@ 0x2c
 800c348:	4798      	blx	r3
 800c34a:	f89d 3054 	ldrb.w	r3, [sp, #84]	@ 0x54
 800c34e:	9007      	str	r0, [sp, #28]
 800c350:	e9cd 0308 	strd	r0, r3, [sp, #32]
 800c354:	4b0d      	ldr	r3, [pc, #52]	@ (800c38c <_ZN8touchgfx3HAL8blitCopyEPKtttttthbb+0x58>)
 800c356:	6822      	ldr	r2, [r4, #0]
 800c358:	881b      	ldrh	r3, [r3, #0]
 800c35a:	9306      	str	r3, [sp, #24]
 800c35c:	f89d 3050 	ldrb.w	r3, [sp, #80]	@ 0x50
 800c360:	9305      	str	r3, [sp, #20]
 800c362:	f89d 304c 	ldrb.w	r3, [sp, #76]	@ 0x4c
 800c366:	9304      	str	r3, [sp, #16]
 800c368:	f8bd 3048 	ldrh.w	r3, [sp, #72]	@ 0x48
 800c36c:	9303      	str	r3, [sp, #12]
 800c36e:	f8bd 3044 	ldrh.w	r3, [sp, #68]	@ 0x44
 800c372:	9302      	str	r3, [sp, #8]
 800c374:	f8bd 3040 	ldrh.w	r3, [sp, #64]	@ 0x40
 800c378:	e9cd 5300 	strd	r5, r3, [sp]
 800c37c:	4631      	mov	r1, r6
 800c37e:	6bd5      	ldr	r5, [r2, #60]	@ 0x3c
 800c380:	463b      	mov	r3, r7
 800c382:	2200      	movs	r2, #0
 800c384:	4620      	mov	r0, r4
 800c386:	47a8      	blx	r5
 800c388:	b00b      	add	sp, #44	@ 0x2c
 800c38a:	bdf0      	pop	{r4, r5, r6, r7, pc}
 800c38c:	20002c56 	.word	0x20002c56

0800c390 <_ZN8touchgfx3HAL16blitCopyARGB8888EPKtttttthb>:
 800c390:	e92d 43f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, lr}
 800c394:	4698      	mov	r8, r3
 800c396:	6803      	ldr	r3, [r0, #0]
 800c398:	6bdd      	ldr	r5, [r3, #60]	@ 0x3c
 800c39a:	4b15      	ldr	r3, [pc, #84]	@ (800c3f0 <_ZN8touchgfx3HAL16blitCopyARGB8888EPKtttttthb+0x60>)
 800c39c:	b08b      	sub	sp, #44	@ 0x2c
 800c39e:	4617      	mov	r7, r2
 800c3a0:	f8b3 9000 	ldrh.w	r9, [r3]
 800c3a4:	460e      	mov	r6, r1
 800c3a6:	4604      	mov	r4, r0
 800c3a8:	f7fb f9a8 	bl	80076fc <_ZN8touchgfx3HAL3lcdEv>
 800c3ac:	6803      	ldr	r3, [r0, #0]
 800c3ae:	6adb      	ldr	r3, [r3, #44]	@ 0x2c
 800c3b0:	4798      	blx	r3
 800c3b2:	f89d 3058 	ldrb.w	r3, [sp, #88]	@ 0x58
 800c3b6:	e9cd 0308 	strd	r0, r3, [sp, #32]
 800c3ba:	2302      	movs	r3, #2
 800c3bc:	e9cd 9306 	strd	r9, r3, [sp, #24]
 800c3c0:	2301      	movs	r3, #1
 800c3c2:	9305      	str	r3, [sp, #20]
 800c3c4:	f89d 3054 	ldrb.w	r3, [sp, #84]	@ 0x54
 800c3c8:	9304      	str	r3, [sp, #16]
 800c3ca:	f8bd 3050 	ldrh.w	r3, [sp, #80]	@ 0x50
 800c3ce:	9303      	str	r3, [sp, #12]
 800c3d0:	f8bd 304c 	ldrh.w	r3, [sp, #76]	@ 0x4c
 800c3d4:	9302      	str	r3, [sp, #8]
 800c3d6:	f8bd 3048 	ldrh.w	r3, [sp, #72]	@ 0x48
 800c3da:	2200      	movs	r2, #0
 800c3dc:	e9cd 8300 	strd	r8, r3, [sp]
 800c3e0:	4631      	mov	r1, r6
 800c3e2:	463b      	mov	r3, r7
 800c3e4:	4620      	mov	r0, r4
 800c3e6:	47a8      	blx	r5
 800c3e8:	b00b      	add	sp, #44	@ 0x2c
 800c3ea:	e8bd 83f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, pc}
 800c3ee:	bf00      	nop
 800c3f0:	20002c56 	.word	0x20002c56

0800c3f4 <_ZN8touchgfx3HAL8blitFillENS_9colortypeEtttthb>:
 800c3f4:	e92d 43f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, lr}
 800c3f8:	4698      	mov	r8, r3
 800c3fa:	6803      	ldr	r3, [r0, #0]
 800c3fc:	6d9d      	ldr	r5, [r3, #88]	@ 0x58
 800c3fe:	4b11      	ldr	r3, [pc, #68]	@ (800c444 <_ZN8touchgfx3HAL8blitFillENS_9colortypeEtttthb+0x50>)
 800c400:	b087      	sub	sp, #28
 800c402:	f8b3 9000 	ldrh.w	r9, [r3]
 800c406:	460e      	mov	r6, r1
 800c408:	4617      	mov	r7, r2
 800c40a:	4604      	mov	r4, r0
 800c40c:	f7fb f976 	bl	80076fc <_ZN8touchgfx3HAL3lcdEv>
 800c410:	6803      	ldr	r3, [r0, #0]
 800c412:	6adb      	ldr	r3, [r3, #44]	@ 0x2c
 800c414:	4798      	blx	r3
 800c416:	f89d 3044 	ldrb.w	r3, [sp, #68]	@ 0x44
 800c41a:	f8cd 900c 	str.w	r9, [sp, #12]
 800c41e:	e9cd 0304 	strd	r0, r3, [sp, #16]
 800c422:	f89d 3040 	ldrb.w	r3, [sp, #64]	@ 0x40
 800c426:	9302      	str	r3, [sp, #8]
 800c428:	f8bd 303c 	ldrh.w	r3, [sp, #60]	@ 0x3c
 800c42c:	9301      	str	r3, [sp, #4]
 800c42e:	f8bd 3038 	ldrh.w	r3, [sp, #56]	@ 0x38
 800c432:	9300      	str	r3, [sp, #0]
 800c434:	463a      	mov	r2, r7
 800c436:	4643      	mov	r3, r8
 800c438:	4631      	mov	r1, r6
 800c43a:	4620      	mov	r0, r4
 800c43c:	47a8      	blx	r5
 800c43e:	b007      	add	sp, #28
 800c440:	e8bd 83f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, pc}
 800c444:	20002c56 	.word	0x20002c56

0800c448 <_ZN8touchgfx3HAL27drawDrawableInDynamicBitmapERNS_8DrawableEtRKNS_4RectE>:
 800c448:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 800c44c:	4604      	mov	r4, r0
 800c44e:	b08f      	sub	sp, #60	@ 0x3c
 800c450:	4610      	mov	r0, r2
 800c452:	460d      	mov	r5, r1
 800c454:	4691      	mov	r9, r2
 800c456:	461e      	mov	r6, r3
 800c458:	f005 fe44 	bl	80120e4 <_ZN8touchgfx6Bitmap23dynamicBitmapGetAddressEt>
 800c45c:	2800      	cmp	r0, #0
 800c45e:	f000 809d 	beq.w	800c59c <_ZN8touchgfx3HAL27drawDrawableInDynamicBitmapERNS_8DrawableEtRKNS_4RectE+0x154>
 800c462:	6823      	ldr	r3, [r4, #0]
 800c464:	f8df b198 	ldr.w	fp, [pc, #408]	@ 800c600 <_ZN8touchgfx3HAL27drawDrawableInDynamicBitmapERNS_8DrawableEtRKNS_4RectE+0x1b8>
 800c468:	6a9b      	ldr	r3, [r3, #40]	@ 0x28
 800c46a:	f8df a198 	ldr.w	sl, [pc, #408]	@ 800c604 <_ZN8touchgfx3HAL27drawDrawableInDynamicBitmapERNS_8DrawableEtRKNS_4RectE+0x1bc>
 800c46e:	4f61      	ldr	r7, [pc, #388]	@ (800c5f4 <_ZN8touchgfx3HAL27drawDrawableInDynamicBitmapERNS_8DrawableEtRKNS_4RectE+0x1ac>)
 800c470:	4620      	mov	r0, r4
 800c472:	4798      	blx	r3
 800c474:	6823      	ldr	r3, [r4, #0]
 800c476:	4620      	mov	r0, r4
 800c478:	6adb      	ldr	r3, [r3, #44]	@ 0x2c
 800c47a:	4798      	blx	r3
 800c47c:	f8bb 3000 	ldrh.w	r3, [fp]
 800c480:	9301      	str	r3, [sp, #4]
 800c482:	f10d 0838 	add.w	r8, sp, #56	@ 0x38
 800c486:	f8ba 3000 	ldrh.w	r3, [sl]
 800c48a:	9302      	str	r3, [sp, #8]
 800c48c:	883b      	ldrh	r3, [r7, #0]
 800c48e:	f828 9d1c 	strh.w	r9, [r8, #-28]!
 800c492:	9303      	str	r3, [sp, #12]
 800c494:	4b58      	ldr	r3, [pc, #352]	@ (800c5f8 <_ZN8touchgfx3HAL27drawDrawableInDynamicBitmapERNS_8DrawableEtRKNS_4RectE+0x1b0>)
 800c496:	9305      	str	r3, [sp, #20]
 800c498:	881a      	ldrh	r2, [r3, #0]
 800c49a:	9204      	str	r2, [sp, #16]
 800c49c:	4640      	mov	r0, r8
 800c49e:	f005 feb5 	bl	801220c <_ZNK8touchgfx6Bitmap8getWidthEv>
 800c4a2:	8038      	strh	r0, [r7, #0]
 800c4a4:	4640      	mov	r0, r8
 800c4a6:	f005 fee5 	bl	8012274 <_ZNK8touchgfx6Bitmap9getHeightEv>
 800c4aa:	9b05      	ldr	r3, [sp, #20]
 800c4ac:	b280      	uxth	r0, r0
 800c4ae:	8018      	strh	r0, [r3, #0]
 800c4b0:	4b52      	ldr	r3, [pc, #328]	@ (800c5fc <_ZN8touchgfx3HAL27drawDrawableInDynamicBitmapERNS_8DrawableEtRKNS_4RectE+0x1b4>)
 800c4b2:	781b      	ldrb	r3, [r3, #0]
 800c4b4:	2b00      	cmp	r3, #0
 800c4b6:	d174      	bne.n	800c5a2 <_ZN8touchgfx3HAL27drawDrawableInDynamicBitmapERNS_8DrawableEtRKNS_4RectE+0x15a>
 800c4b8:	883b      	ldrh	r3, [r7, #0]
 800c4ba:	f8ab 3000 	strh.w	r3, [fp]
 800c4be:	f8aa 0000 	strh.w	r0, [sl]
 800c4c2:	4648      	mov	r0, r9
 800c4c4:	e9d4 870f 	ldrd	r8, r7, [r4, #60]	@ 0x3c
 800c4c8:	f005 fe0c 	bl	80120e4 <_ZN8touchgfx6Bitmap23dynamicBitmapGetAddressEt>
 800c4cc:	e9c4 000f 	strd	r0, r0, [r4, #60]	@ 0x3c
 800c4d0:	2200      	movs	r2, #0
 800c4d2:	4611      	mov	r1, r2
 800c4d4:	4628      	mov	r0, r5
 800c4d6:	f9b5 9004 	ldrsh.w	r9, [r5, #4]
 800c4da:	f9b5 a006 	ldrsh.w	sl, [r5, #6]
 800c4de:	f7fb fe94 	bl	800820a <_ZN8touchgfx8Drawable5setXYEss>
 800c4e2:	2301      	movs	r3, #1
 800c4e4:	f895 b025 	ldrb.w	fp, [r5, #37]	@ 0x25
 800c4e8:	f885 3025 	strb.w	r3, [r5, #37]	@ 0x25
 800c4ec:	f9b6 3004 	ldrsh.w	r3, [r6, #4]
 800c4f0:	2b00      	cmp	r3, #0
 800c4f2:	dd5c      	ble.n	800c5ae <_ZN8touchgfx3HAL27drawDrawableInDynamicBitmapERNS_8DrawableEtRKNS_4RectE+0x166>
 800c4f4:	f9b6 3006 	ldrsh.w	r3, [r6, #6]
 800c4f8:	2b00      	cmp	r3, #0
 800c4fa:	dd58      	ble.n	800c5ae <_ZN8touchgfx3HAL27drawDrawableInDynamicBitmapERNS_8DrawableEtRKNS_4RectE+0x166>
 800c4fc:	462a      	mov	r2, r5
 800c4fe:	ab0a      	add	r3, sp, #40	@ 0x28
 800c500:	f852 0f04 	ldr.w	r0, [r2, #4]!
 800c504:	6851      	ldr	r1, [r2, #4]
 800c506:	c303      	stmia	r3!, {r0, r1}
 800c508:	4631      	mov	r1, r6
 800c50a:	a80a      	add	r0, sp, #40	@ 0x28
 800c50c:	f7ff fbf8 	bl	800bd00 <_ZN8touchgfx4RectaNERKS0_>
 800c510:	4b38      	ldr	r3, [pc, #224]	@ (800c5f4 <_ZN8touchgfx3HAL27drawDrawableInDynamicBitmapERNS_8DrawableEtRKNS_4RectE+0x1ac>)
 800c512:	f9b3 2000 	ldrsh.w	r2, [r3]
 800c516:	f8ad 2034 	strh.w	r2, [sp, #52]	@ 0x34
 800c51a:	2100      	movs	r1, #0
 800c51c:	aa0a      	add	r2, sp, #40	@ 0x28
 800c51e:	4b36      	ldr	r3, [pc, #216]	@ (800c5f8 <_ZN8touchgfx3HAL27drawDrawableInDynamicBitmapERNS_8DrawableEtRKNS_4RectE+0x1b0>)
 800c520:	910c      	str	r1, [sp, #48]	@ 0x30
 800c522:	e892 0003 	ldmia.w	r2, {r0, r1}
 800c526:	f9b3 3000 	ldrsh.w	r3, [r3]
 800c52a:	f8ad 3036 	strh.w	r3, [sp, #54]	@ 0x36
 800c52e:	ab08      	add	r3, sp, #32
 800c530:	e883 0003 	stmia.w	r3, {r0, r1}
 800c534:	4618      	mov	r0, r3
 800c536:	a90c      	add	r1, sp, #48	@ 0x30
 800c538:	f7ff fbe2 	bl	800bd00 <_ZN8touchgfx4RectaNERKS0_>
 800c53c:	6ce3      	ldr	r3, [r4, #76]	@ 0x4c
 800c53e:	2b00      	cmp	r3, #0
 800c540:	d13c      	bne.n	800c5bc <_ZN8touchgfx3HAL27drawDrawableInDynamicBitmapERNS_8DrawableEtRKNS_4RectE+0x174>
 800c542:	2000      	movs	r0, #0
 800c544:	f884 0058 	strb.w	r0, [r4, #88]	@ 0x58
 800c548:	2600      	movs	r6, #0
 800c54a:	682a      	ldr	r2, [r5, #0]
 800c54c:	696b      	ldr	r3, [r5, #20]
 800c54e:	616e      	str	r6, [r5, #20]
 800c550:	9305      	str	r3, [sp, #20]
 800c552:	6892      	ldr	r2, [r2, #8]
 800c554:	a908      	add	r1, sp, #32
 800c556:	4628      	mov	r0, r5
 800c558:	4790      	blx	r2
 800c55a:	9b05      	ldr	r3, [sp, #20]
 800c55c:	616b      	str	r3, [r5, #20]
 800c55e:	4652      	mov	r2, sl
 800c560:	f884 6058 	strb.w	r6, [r4, #88]	@ 0x58
 800c564:	4649      	mov	r1, r9
 800c566:	4628      	mov	r0, r5
 800c568:	f885 b025 	strb.w	fp, [r5, #37]	@ 0x25
 800c56c:	f7fb fe4d 	bl	800820a <_ZN8touchgfx8Drawable5setXYEss>
 800c570:	4b23      	ldr	r3, [pc, #140]	@ (800c600 <_ZN8touchgfx3HAL27drawDrawableInDynamicBitmapERNS_8DrawableEtRKNS_4RectE+0x1b8>)
 800c572:	9a01      	ldr	r2, [sp, #4]
 800c574:	801a      	strh	r2, [r3, #0]
 800c576:	4b23      	ldr	r3, [pc, #140]	@ (800c604 <_ZN8touchgfx3HAL27drawDrawableInDynamicBitmapERNS_8DrawableEtRKNS_4RectE+0x1bc>)
 800c578:	9a02      	ldr	r2, [sp, #8]
 800c57a:	801a      	strh	r2, [r3, #0]
 800c57c:	4b1d      	ldr	r3, [pc, #116]	@ (800c5f4 <_ZN8touchgfx3HAL27drawDrawableInDynamicBitmapERNS_8DrawableEtRKNS_4RectE+0x1ac>)
 800c57e:	9a03      	ldr	r2, [sp, #12]
 800c580:	801a      	strh	r2, [r3, #0]
 800c582:	4b1d      	ldr	r3, [pc, #116]	@ (800c5f8 <_ZN8touchgfx3HAL27drawDrawableInDynamicBitmapERNS_8DrawableEtRKNS_4RectE+0x1b0>)
 800c584:	9a04      	ldr	r2, [sp, #16]
 800c586:	801a      	strh	r2, [r3, #0]
 800c588:	e9c4 870f 	strd	r8, r7, [r4, #60]	@ 0x3c
 800c58c:	6823      	ldr	r3, [r4, #0]
 800c58e:	4620      	mov	r0, r4
 800c590:	6a9b      	ldr	r3, [r3, #40]	@ 0x28
 800c592:	4798      	blx	r3
 800c594:	6823      	ldr	r3, [r4, #0]
 800c596:	4620      	mov	r0, r4
 800c598:	6adb      	ldr	r3, [r3, #44]	@ 0x2c
 800c59a:	4798      	blx	r3
 800c59c:	b00f      	add	sp, #60	@ 0x3c
 800c59e:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 800c5a2:	883b      	ldrh	r3, [r7, #0]
 800c5a4:	f8ab 0000 	strh.w	r0, [fp]
 800c5a8:	f8aa 3000 	strh.w	r3, [sl]
 800c5ac:	e789      	b.n	800c4c2 <_ZN8touchgfx3HAL27drawDrawableInDynamicBitmapERNS_8DrawableEtRKNS_4RectE+0x7a>
 800c5ae:	462a      	mov	r2, r5
 800c5b0:	ab0a      	add	r3, sp, #40	@ 0x28
 800c5b2:	f852 0f04 	ldr.w	r0, [r2, #4]!
 800c5b6:	6851      	ldr	r1, [r2, #4]
 800c5b8:	c303      	stmia	r3!, {r0, r1}
 800c5ba:	e7a9      	b.n	800c510 <_ZN8touchgfx3HAL27drawDrawableInDynamicBitmapERNS_8DrawableEtRKNS_4RectE+0xc8>
 800c5bc:	a807      	add	r0, sp, #28
 800c5be:	f005 ff9b 	bl	80124f8 <_ZNK8touchgfx6Bitmap9getFormatEv>
 800c5c2:	4606      	mov	r6, r0
 800c5c4:	6ce0      	ldr	r0, [r4, #76]	@ 0x4c
 800c5c6:	6803      	ldr	r3, [r0, #0]
 800c5c8:	6adb      	ldr	r3, [r3, #44]	@ 0x2c
 800c5ca:	4798      	blx	r3
 800c5cc:	4286      	cmp	r6, r0
 800c5ce:	d1b8      	bne.n	800c542 <_ZN8touchgfx3HAL27drawDrawableInDynamicBitmapERNS_8DrawableEtRKNS_4RectE+0xfa>
 800c5d0:	f7fb f894 	bl	80076fc <_ZN8touchgfx3HAL3lcdEv>
 800c5d4:	6803      	ldr	r3, [r0, #0]
 800c5d6:	4606      	mov	r6, r0
 800c5d8:	6b5b      	ldr	r3, [r3, #52]	@ 0x34
 800c5da:	9305      	str	r3, [sp, #20]
 800c5dc:	a807      	add	r0, sp, #28
 800c5de:	f005 ff8b 	bl	80124f8 <_ZNK8touchgfx6Bitmap9getFormatEv>
 800c5e2:	9b05      	ldr	r3, [sp, #20]
 800c5e4:	4601      	mov	r1, r0
 800c5e6:	4630      	mov	r0, r6
 800c5e8:	4798      	blx	r3
 800c5ea:	f080 0001 	eor.w	r0, r0, #1
 800c5ee:	b2c0      	uxtb	r0, r0
 800c5f0:	e7a8      	b.n	800c544 <_ZN8touchgfx3HAL27drawDrawableInDynamicBitmapERNS_8DrawableEtRKNS_4RectE+0xfc>
 800c5f2:	bf00      	nop
 800c5f4:	20002c50 	.word	0x20002c50
 800c5f8:	20002c52 	.word	0x20002c52
 800c5fc:	20002c54 	.word	0x20002c54
 800c600:	20002c56 	.word	0x20002c56
 800c604:	20002c58 	.word	0x20002c58

0800c608 <_ZN8touchgfx3HAL20getClientFrameBufferEv>:
 800c608:	b510      	push	{r4, lr}
 800c60a:	4b07      	ldr	r3, [pc, #28]	@ (800c628 <_ZN8touchgfx3HAL20getClientFrameBufferEv+0x20>)
 800c60c:	781b      	ldrb	r3, [r3, #0]
 800c60e:	4604      	mov	r4, r0
 800c610:	b13b      	cbz	r3, 800c622 <_ZN8touchgfx3HAL20getClientFrameBufferEv+0x1a>
 800c612:	6803      	ldr	r3, [r0, #0]
 800c614:	6b1b      	ldr	r3, [r3, #48]	@ 0x30
 800c616:	4798      	blx	r3
 800c618:	6be3      	ldr	r3, [r4, #60]	@ 0x3c
 800c61a:	4283      	cmp	r3, r0
 800c61c:	d101      	bne.n	800c622 <_ZN8touchgfx3HAL20getClientFrameBufferEv+0x1a>
 800c61e:	6c20      	ldr	r0, [r4, #64]	@ 0x40
 800c620:	bd10      	pop	{r4, pc}
 800c622:	6be0      	ldr	r0, [r4, #60]	@ 0x3c
 800c624:	e7fc      	b.n	800c620 <_ZN8touchgfx3HAL20getClientFrameBufferEv+0x18>
 800c626:	bf00      	nop
 800c628:	20002c5a 	.word	0x20002c5a

0800c62c <_ZN8touchgfx3HAL12blitCopyWordEPKttttttt>:
 800c62c:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 800c630:	b08a      	sub	sp, #40	@ 0x28
 800c632:	461d      	mov	r5, r3
 800c634:	f44f 6380 	mov.w	r3, #1024	@ 0x400
 800c638:	e9cd 3101 	strd	r3, r1, [sp, #4]
 800c63c:	f8bd 3040 	ldrh.w	r3, [sp, #64]	@ 0x40
 800c640:	f8ad 3018 	strh.w	r3, [sp, #24]
 800c644:	f8bd 3044 	ldrh.w	r3, [sp, #68]	@ 0x44
 800c648:	f8ad 301a 	strh.w	r3, [sp, #26]
 800c64c:	2400      	movs	r4, #0
 800c64e:	f8bd 3048 	ldrh.w	r3, [sp, #72]	@ 0x48
 800c652:	f8bd 604c 	ldrh.w	r6, [sp, #76]	@ 0x4c
 800c656:	f8ad 301c 	strh.w	r3, [sp, #28]
 800c65a:	4690      	mov	r8, r2
 800c65c:	4607      	mov	r7, r0
 800c65e:	9404      	str	r4, [sp, #16]
 800c660:	f88d 4020 	strb.w	r4, [sp, #32]
 800c664:	f7ff ffd0 	bl	800c608 <_ZN8touchgfx3HAL20getClientFrameBufferEv>
 800c668:	fb06 8505 	mla	r5, r6, r5, r8
 800c66c:	eb00 0545 	add.w	r5, r0, r5, lsl #1
 800c670:	6878      	ldr	r0, [r7, #4]
 800c672:	9505      	str	r5, [sp, #20]
 800c674:	f8ad 601e 	strh.w	r6, [sp, #30]
 800c678:	f88d 4022 	strb.w	r4, [sp, #34]	@ 0x22
 800c67c:	f88d 4021 	strb.w	r4, [sp, #33]	@ 0x21
 800c680:	f88d 4023 	strb.w	r4, [sp, #35]	@ 0x23
 800c684:	f88d 4024 	strb.w	r4, [sp, #36]	@ 0x24
 800c688:	6803      	ldr	r3, [r0, #0]
 800c68a:	a901      	add	r1, sp, #4
 800c68c:	685b      	ldr	r3, [r3, #4]
 800c68e:	4798      	blx	r3
 800c690:	b00a      	add	sp, #40	@ 0x28
 800c692:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}

0800c696 <_ZN8touchgfx3HAL12blitFillWordEtttttt>:
 800c696:	e92d 43f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, lr}
 800c69a:	b08b      	sub	sp, #44	@ 0x2c
 800c69c:	2400      	movs	r4, #0
 800c69e:	461d      	mov	r5, r3
 800c6a0:	f44f 6300 	mov.w	r3, #2048	@ 0x800
 800c6a4:	4688      	mov	r8, r1
 800c6a6:	4691      	mov	r9, r2
 800c6a8:	f8bd 6050 	ldrh.w	r6, [sp, #80]	@ 0x50
 800c6ac:	9404      	str	r4, [sp, #16]
 800c6ae:	4607      	mov	r7, r0
 800c6b0:	e9cd 3401 	strd	r3, r4, [sp, #4]
 800c6b4:	f7ff ffa8 	bl	800c608 <_ZN8touchgfx3HAL20getClientFrameBufferEv>
 800c6b8:	fb06 9505 	mla	r5, r6, r5, r9
 800c6bc:	f8bd 3048 	ldrh.w	r3, [sp, #72]	@ 0x48
 800c6c0:	f8ad 3018 	strh.w	r3, [sp, #24]
 800c6c4:	eb00 0545 	add.w	r5, r0, r5, lsl #1
 800c6c8:	f8bd 304c 	ldrh.w	r3, [sp, #76]	@ 0x4c
 800c6cc:	6878      	ldr	r0, [r7, #4]
 800c6ce:	9505      	str	r5, [sp, #20]
 800c6d0:	f8ad 301a 	strh.w	r3, [sp, #26]
 800c6d4:	f8ad 401c 	strh.w	r4, [sp, #28]
 800c6d8:	f8ad 601e 	strh.w	r6, [sp, #30]
 800c6dc:	f8cd 8010 	str.w	r8, [sp, #16]
 800c6e0:	f8ad 4020 	strh.w	r4, [sp, #32]
 800c6e4:	f88d 4022 	strb.w	r4, [sp, #34]	@ 0x22
 800c6e8:	f88d 4023 	strb.w	r4, [sp, #35]	@ 0x23
 800c6ec:	f88d 4024 	strb.w	r4, [sp, #36]	@ 0x24
 800c6f0:	6803      	ldr	r3, [r0, #0]
 800c6f2:	a901      	add	r1, sp, #4
 800c6f4:	685b      	ldr	r3, [r3, #4]
 800c6f6:	4798      	blx	r3
 800c6f8:	b00b      	add	sp, #44	@ 0x2c
 800c6fa:	e8bd 83f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, pc}
	...

0800c700 <_ZN8touchgfx3HAL8blitCopyEPKtPKhttttthbtNS_6Bitmap12BitmapFormatES6_b>:
 800c700:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 800c704:	b08a      	sub	sp, #40	@ 0x28
 800c706:	4698      	mov	r8, r3
 800c708:	f89d 505c 	ldrb.w	r5, [sp, #92]	@ 0x5c
 800c70c:	f89d c054 	ldrb.w	ip, [sp, #84]	@ 0x54
 800c710:	f8bd 7058 	ldrh.w	r7, [sp, #88]	@ 0x58
 800c714:	f89d 4060 	ldrb.w	r4, [sp, #96]	@ 0x60
 800c718:	2300      	movs	r3, #0
 800c71a:	2d0b      	cmp	r5, #11
 800c71c:	4606      	mov	r6, r0
 800c71e:	9304      	str	r3, [sp, #16]
 800c720:	f89d 0050 	ldrb.w	r0, [sp, #80]	@ 0x50
 800c724:	d138      	bne.n	800c798 <_ZN8touchgfx3HAL8blitCopyEPKtPKhttttthbtNS_6Bitmap12BitmapFormatES6_b+0x98>
 800c726:	2380      	movs	r3, #128	@ 0x80
 800c728:	e9cd 3101 	strd	r3, r1, [sp, #4]
 800c72c:	f8bd 3044 	ldrh.w	r3, [sp, #68]	@ 0x44
 800c730:	f8ad 3018 	strh.w	r3, [sp, #24]
 800c734:	f8bd 3048 	ldrh.w	r3, [sp, #72]	@ 0x48
 800c738:	f8ad 301a 	strh.w	r3, [sp, #26]
 800c73c:	f88d 0020 	strb.w	r0, [sp, #32]
 800c740:	f8bd 304c 	ldrh.w	r3, [sp, #76]	@ 0x4c
 800c744:	f8ad 301c 	strh.w	r3, [sp, #28]
 800c748:	4630      	mov	r0, r6
 800c74a:	9203      	str	r2, [sp, #12]
 800c74c:	f7ff ff5c 	bl	800c608 <_ZN8touchgfx3HAL20getClientFrameBufferEv>
 800c750:	2c0b      	cmp	r4, #11
 800c752:	bf98      	it	ls
 800c754:	4b1b      	ldrls	r3, [pc, #108]	@ (800c7c4 <_ZN8touchgfx3HAL8blitCopyEPKtPKhttttthbtNS_6Bitmap12BitmapFormatES6_b+0xc4>)
 800c756:	f8bd 2040 	ldrh.w	r2, [sp, #64]	@ 0x40
 800c75a:	bf98      	it	ls
 800c75c:	5d19      	ldrbls	r1, [r3, r4]
 800c75e:	f8ad 701e 	strh.w	r7, [sp, #30]
 800c762:	bf88      	it	hi
 800c764:	2100      	movhi	r1, #0
 800c766:	fb02 8307 	mla	r3, r2, r7, r8
 800c76a:	10c9      	asrs	r1, r1, #3
 800c76c:	fb01 0003 	mla	r0, r1, r3, r0
 800c770:	f89d 3064 	ldrb.w	r3, [sp, #100]	@ 0x64
 800c774:	9005      	str	r0, [sp, #20]
 800c776:	f88d 3023 	strb.w	r3, [sp, #35]	@ 0x23
 800c77a:	6870      	ldr	r0, [r6, #4]
 800c77c:	f88d 5021 	strb.w	r5, [sp, #33]	@ 0x21
 800c780:	2300      	movs	r3, #0
 800c782:	f88d 4022 	strb.w	r4, [sp, #34]	@ 0x22
 800c786:	f88d 3024 	strb.w	r3, [sp, #36]	@ 0x24
 800c78a:	6803      	ldr	r3, [r0, #0]
 800c78c:	a901      	add	r1, sp, #4
 800c78e:	685b      	ldr	r3, [r3, #4]
 800c790:	4798      	blx	r3
 800c792:	b00a      	add	sp, #40	@ 0x28
 800c794:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
 800c798:	2d02      	cmp	r5, #2
 800c79a:	d109      	bne.n	800c7b0 <_ZN8touchgfx3HAL8blitCopyEPKtPKhttttthbtNS_6Bitmap12BitmapFormatES6_b+0xb0>
 800c79c:	28ff      	cmp	r0, #255	@ 0xff
 800c79e:	d105      	bne.n	800c7ac <_ZN8touchgfx3HAL8blitCopyEPKtPKhttttthbtNS_6Bitmap12BitmapFormatES6_b+0xac>
 800c7a0:	f1bc 0f00 	cmp.w	ip, #0
 800c7a4:	bf14      	ite	ne
 800c7a6:	2340      	movne	r3, #64	@ 0x40
 800c7a8:	2320      	moveq	r3, #32
 800c7aa:	e7bd      	b.n	800c728 <_ZN8touchgfx3HAL8blitCopyEPKtPKhttttthbtNS_6Bitmap12BitmapFormatES6_b+0x28>
 800c7ac:	2340      	movs	r3, #64	@ 0x40
 800c7ae:	e7bb      	b.n	800c728 <_ZN8touchgfx3HAL8blitCopyEPKtPKhttttthbtNS_6Bitmap12BitmapFormatES6_b+0x28>
 800c7b0:	28ff      	cmp	r0, #255	@ 0xff
 800c7b2:	d105      	bne.n	800c7c0 <_ZN8touchgfx3HAL8blitCopyEPKtPKhttttthbtNS_6Bitmap12BitmapFormatES6_b+0xc0>
 800c7b4:	f1bc 0f00 	cmp.w	ip, #0
 800c7b8:	bf14      	ite	ne
 800c7ba:	2304      	movne	r3, #4
 800c7bc:	2301      	moveq	r3, #1
 800c7be:	e7b3      	b.n	800c728 <_ZN8touchgfx3HAL8blitCopyEPKtPKhttttthbtNS_6Bitmap12BitmapFormatES6_b+0x28>
 800c7c0:	2304      	movs	r3, #4
 800c7c2:	e7b1      	b.n	800c728 <_ZN8touchgfx3HAL8blitCopyEPKtPKhttttthbtNS_6Bitmap12BitmapFormatES6_b+0x28>
 800c7c4:	08023288 	.word	0x08023288

0800c7c8 <_ZN8touchgfx3HAL8blitFillENS_9colortypeEtttthtNS_6Bitmap12BitmapFormatEb>:
 800c7c8:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 800c7cc:	b08b      	sub	sp, #44	@ 0x2c
 800c7ce:	461d      	mov	r5, r3
 800c7d0:	f89d 9058 	ldrb.w	r9, [sp, #88]	@ 0x58
 800c7d4:	f89d 6060 	ldrb.w	r6, [sp, #96]	@ 0x60
 800c7d8:	f8bd a05c 	ldrh.w	sl, [sp, #92]	@ 0x5c
 800c7dc:	f1b9 0fff 	cmp.w	r9, #255	@ 0xff
 800c7e0:	bf14      	ite	ne
 800c7e2:	2308      	movne	r3, #8
 800c7e4:	2302      	moveq	r3, #2
 800c7e6:	2400      	movs	r4, #0
 800c7e8:	e9cd 3401 	strd	r3, r4, [sp, #4]
 800c7ec:	4688      	mov	r8, r1
 800c7ee:	4693      	mov	fp, r2
 800c7f0:	9404      	str	r4, [sp, #16]
 800c7f2:	4607      	mov	r7, r0
 800c7f4:	f7ff ff08 	bl	800c608 <_ZN8touchgfx3HAL20getClientFrameBufferEv>
 800c7f8:	2e0b      	cmp	r6, #11
 800c7fa:	bf98      	it	ls
 800c7fc:	4b15      	ldrls	r3, [pc, #84]	@ (800c854 <_ZN8touchgfx3HAL8blitFillENS_9colortypeEtttthtNS_6Bitmap12BitmapFormatEb+0x8c>)
 800c7fe:	f89d 2064 	ldrb.w	r2, [sp, #100]	@ 0x64
 800c802:	bf98      	it	ls
 800c804:	5d9c      	ldrbls	r4, [r3, r6]
 800c806:	f8bd 3050 	ldrh.w	r3, [sp, #80]	@ 0x50
 800c80a:	f8ad 3018 	strh.w	r3, [sp, #24]
 800c80e:	fb05 b50a 	mla	r5, r5, sl, fp
 800c812:	f8bd 3054 	ldrh.w	r3, [sp, #84]	@ 0x54
 800c816:	f8ad 301a 	strh.w	r3, [sp, #26]
 800c81a:	10e4      	asrs	r4, r4, #3
 800c81c:	fb04 0405 	mla	r4, r4, r5, r0
 800c820:	2300      	movs	r3, #0
 800c822:	6878      	ldr	r0, [r7, #4]
 800c824:	9405      	str	r4, [sp, #20]
 800c826:	f8ad 301c 	strh.w	r3, [sp, #28]
 800c82a:	f8ad a01e 	strh.w	sl, [sp, #30]
 800c82e:	f8cd 8010 	str.w	r8, [sp, #16]
 800c832:	f88d 9020 	strb.w	r9, [sp, #32]
 800c836:	f88d 2023 	strb.w	r2, [sp, #35]	@ 0x23
 800c83a:	f88d 3024 	strb.w	r3, [sp, #36]	@ 0x24
 800c83e:	f88d 6021 	strb.w	r6, [sp, #33]	@ 0x21
 800c842:	f88d 6022 	strb.w	r6, [sp, #34]	@ 0x22
 800c846:	6803      	ldr	r3, [r0, #0]
 800c848:	a901      	add	r1, sp, #4
 800c84a:	685b      	ldr	r3, [r3, #4]
 800c84c:	4798      	blx	r3
 800c84e:	b00b      	add	sp, #44	@ 0x2c
 800c850:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 800c854:	08023288 	.word	0x08023288

0800c858 <_ZNK8touchgfx3HAL13getDstAddressEttPt>:
 800c858:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 800c85c:	461e      	mov	r6, r3
 800c85e:	4b0a      	ldr	r3, [pc, #40]	@ (800c888 <_ZNK8touchgfx3HAL13getDstAddressEttPt+0x30>)
 800c860:	460f      	mov	r7, r1
 800c862:	881d      	ldrh	r5, [r3, #0]
 800c864:	4690      	mov	r8, r2
 800c866:	f7fa ff49 	bl	80076fc <_ZN8touchgfx3HAL3lcdEv>
 800c86a:	6803      	ldr	r3, [r0, #0]
 800c86c:	6adb      	ldr	r3, [r3, #44]	@ 0x2c
 800c86e:	4798      	blx	r3
 800c870:	280b      	cmp	r0, #11
 800c872:	bf9a      	itte	ls
 800c874:	4b05      	ldrls	r3, [pc, #20]	@ (800c88c <_ZNK8touchgfx3HAL13getDstAddressEttPt+0x34>)
 800c876:	5c1c      	ldrbls	r4, [r3, r0]
 800c878:	2400      	movhi	r4, #0
 800c87a:	fb08 7005 	mla	r0, r8, r5, r7
 800c87e:	10e4      	asrs	r4, r4, #3
 800c880:	fb04 6000 	mla	r0, r4, r0, r6
 800c884:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
 800c888:	20002c56 	.word	0x20002c56
 800c88c:	08023288 	.word	0x08023288

0800c890 <_ZN8touchgfx3HAL13blitCopyGlyphEPKhtttttNS_9colortypeEhNS_14BlitOperationsEb>:
 800c890:	b5f0      	push	{r4, r5, r6, r7, lr}
 800c892:	b08b      	sub	sp, #44	@ 0x2c
 800c894:	461f      	mov	r7, r3
 800c896:	f8bd 3054 	ldrh.w	r3, [sp, #84]	@ 0x54
 800c89a:	e9cd 3101 	strd	r3, r1, [sp, #4]
 800c89e:	f8bd 3040 	ldrh.w	r3, [sp, #64]	@ 0x40
 800c8a2:	f8ad 3018 	strh.w	r3, [sp, #24]
 800c8a6:	f8bd 3044 	ldrh.w	r3, [sp, #68]	@ 0x44
 800c8aa:	f8ad 301a 	strh.w	r3, [sp, #26]
 800c8ae:	f8bd 3048 	ldrh.w	r3, [sp, #72]	@ 0x48
 800c8b2:	f8ad 301c 	strh.w	r3, [sp, #28]
 800c8b6:	2500      	movs	r5, #0
 800c8b8:	f89d 3050 	ldrb.w	r3, [sp, #80]	@ 0x50
 800c8bc:	f88d 3020 	strb.w	r3, [sp, #32]
 800c8c0:	4604      	mov	r4, r0
 800c8c2:	4616      	mov	r6, r2
 800c8c4:	9504      	str	r5, [sp, #16]
 800c8c6:	f7ff fe9f 	bl	800c608 <_ZN8touchgfx3HAL20getClientFrameBufferEv>
 800c8ca:	463a      	mov	r2, r7
 800c8cc:	4631      	mov	r1, r6
 800c8ce:	4603      	mov	r3, r0
 800c8d0:	4620      	mov	r0, r4
 800c8d2:	f7ff ffc1 	bl	800c858 <_ZNK8touchgfx3HAL13getDstAddressEttPt>
 800c8d6:	4b0e      	ldr	r3, [pc, #56]	@ (800c910 <_ZN8touchgfx3HAL13blitCopyGlyphEPKhtttttNS_9colortypeEhNS_14BlitOperationsEb+0x80>)
 800c8d8:	9005      	str	r0, [sp, #20]
 800c8da:	881b      	ldrh	r3, [r3, #0]
 800c8dc:	f8ad 301e 	strh.w	r3, [sp, #30]
 800c8e0:	f7fa ff0c 	bl	80076fc <_ZN8touchgfx3HAL3lcdEv>
 800c8e4:	6803      	ldr	r3, [r0, #0]
 800c8e6:	6adb      	ldr	r3, [r3, #44]	@ 0x2c
 800c8e8:	4798      	blx	r3
 800c8ea:	9b13      	ldr	r3, [sp, #76]	@ 0x4c
 800c8ec:	f88d 0022 	strb.w	r0, [sp, #34]	@ 0x22
 800c8f0:	f88d 0021 	strb.w	r0, [sp, #33]	@ 0x21
 800c8f4:	9304      	str	r3, [sp, #16]
 800c8f6:	6860      	ldr	r0, [r4, #4]
 800c8f8:	f89d 3058 	ldrb.w	r3, [sp, #88]	@ 0x58
 800c8fc:	f88d 3023 	strb.w	r3, [sp, #35]	@ 0x23
 800c900:	f88d 5024 	strb.w	r5, [sp, #36]	@ 0x24
 800c904:	6803      	ldr	r3, [r0, #0]
 800c906:	a901      	add	r1, sp, #4
 800c908:	685b      	ldr	r3, [r3, #4]
 800c90a:	4798      	blx	r3
 800c90c:	b00b      	add	sp, #44	@ 0x2c
 800c90e:	bdf0      	pop	{r4, r5, r6, r7, pc}
 800c910:	20002c56 	.word	0x20002c56

0800c914 <_ZN8touchgfx3HAL20copyFBRegionToMemoryENS_4RectE>:
 800c914:	b5f0      	push	{r4, r5, r6, r7, lr}
 800c916:	b08d      	sub	sp, #52	@ 0x34
 800c918:	466b      	mov	r3, sp
 800c91a:	e883 0006 	stmia.w	r3, {r1, r2}
 800c91e:	2300      	movs	r3, #0
 800c920:	9306      	str	r3, [sp, #24]
 800c922:	6803      	ldr	r3, [r0, #0]
 800c924:	f8bd 6000 	ldrh.w	r6, [sp]
 800c928:	6b1b      	ldr	r3, [r3, #48]	@ 0x30
 800c92a:	f8bd 7002 	ldrh.w	r7, [sp, #2]
 800c92e:	2501      	movs	r5, #1
 800c930:	9503      	str	r5, [sp, #12]
 800c932:	4604      	mov	r4, r0
 800c934:	4798      	blx	r3
 800c936:	463a      	mov	r2, r7
 800c938:	4631      	mov	r1, r6
 800c93a:	4603      	mov	r3, r0
 800c93c:	4620      	mov	r0, r4
 800c93e:	f7ff ff8b 	bl	800c858 <_ZNK8touchgfx3HAL13getDstAddressEttPt>
 800c942:	6c63      	ldr	r3, [r4, #68]	@ 0x44
 800c944:	9307      	str	r3, [sp, #28]
 800c946:	f8bd 3004 	ldrh.w	r3, [sp, #4]
 800c94a:	f8ad 3020 	strh.w	r3, [sp, #32]
 800c94e:	f8bd 3006 	ldrh.w	r3, [sp, #6]
 800c952:	f8ad 3022 	strh.w	r3, [sp, #34]	@ 0x22
 800c956:	4b0f      	ldr	r3, [pc, #60]	@ (800c994 <_ZN8touchgfx3HAL20copyFBRegionToMemoryENS_4RectE+0x80>)
 800c958:	9004      	str	r0, [sp, #16]
 800c95a:	881b      	ldrh	r3, [r3, #0]
 800c95c:	f8ad 3024 	strh.w	r3, [sp, #36]	@ 0x24
 800c960:	f8ad 3026 	strh.w	r3, [sp, #38]	@ 0x26
 800c964:	f7fa feca 	bl	80076fc <_ZN8touchgfx3HAL3lcdEv>
 800c968:	6803      	ldr	r3, [r0, #0]
 800c96a:	6adb      	ldr	r3, [r3, #44]	@ 0x2c
 800c96c:	4798      	blx	r3
 800c96e:	23ff      	movs	r3, #255	@ 0xff
 800c970:	f88d 0029 	strb.w	r0, [sp, #41]	@ 0x29
 800c974:	f88d 002a 	strb.w	r0, [sp, #42]	@ 0x2a
 800c978:	6860      	ldr	r0, [r4, #4]
 800c97a:	f88d 3028 	strb.w	r3, [sp, #40]	@ 0x28
 800c97e:	f88d 502b 	strb.w	r5, [sp, #43]	@ 0x2b
 800c982:	f88d 502c 	strb.w	r5, [sp, #44]	@ 0x2c
 800c986:	6803      	ldr	r3, [r0, #0]
 800c988:	a903      	add	r1, sp, #12
 800c98a:	685b      	ldr	r3, [r3, #4]
 800c98c:	4798      	blx	r3
 800c98e:	6c60      	ldr	r0, [r4, #68]	@ 0x44
 800c990:	b00d      	add	sp, #52	@ 0x34
 800c992:	bdf0      	pop	{r4, r5, r6, r7, pc}
 800c994:	20002c56 	.word	0x20002c56

0800c998 <_ZN8touchgfx3HAL20copyFBRegionToMemoryENS_4RectEPtm>:
 800c998:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 800c99c:	b08c      	sub	sp, #48	@ 0x30
 800c99e:	461e      	mov	r6, r3
 800c9a0:	466d      	mov	r5, sp
 800c9a2:	2300      	movs	r3, #0
 800c9a4:	e885 0006 	stmia.w	r5, {r1, r2}
 800c9a8:	9306      	str	r3, [sp, #24]
 800c9aa:	6803      	ldr	r3, [r0, #0]
 800c9ac:	f8bd 7000 	ldrh.w	r7, [sp]
 800c9b0:	6b1b      	ldr	r3, [r3, #48]	@ 0x30
 800c9b2:	f8bd 8002 	ldrh.w	r8, [sp, #2]
 800c9b6:	2501      	movs	r5, #1
 800c9b8:	9503      	str	r5, [sp, #12]
 800c9ba:	4604      	mov	r4, r0
 800c9bc:	4798      	blx	r3
 800c9be:	4642      	mov	r2, r8
 800c9c0:	4639      	mov	r1, r7
 800c9c2:	4603      	mov	r3, r0
 800c9c4:	4620      	mov	r0, r4
 800c9c6:	f7ff ff47 	bl	800c858 <_ZNK8touchgfx3HAL13getDstAddressEttPt>
 800c9ca:	f8bd 3004 	ldrh.w	r3, [sp, #4]
 800c9ce:	f8ad 3020 	strh.w	r3, [sp, #32]
 800c9d2:	f8bd 3006 	ldrh.w	r3, [sp, #6]
 800c9d6:	f8ad 3022 	strh.w	r3, [sp, #34]	@ 0x22
 800c9da:	4b11      	ldr	r3, [pc, #68]	@ (800ca20 <_ZN8touchgfx3HAL20copyFBRegionToMemoryENS_4RectEPtm+0x88>)
 800c9dc:	9004      	str	r0, [sp, #16]
 800c9de:	881b      	ldrh	r3, [r3, #0]
 800c9e0:	f8ad 3024 	strh.w	r3, [sp, #36]	@ 0x24
 800c9e4:	9b12      	ldr	r3, [sp, #72]	@ 0x48
 800c9e6:	f8ad 3026 	strh.w	r3, [sp, #38]	@ 0x26
 800c9ea:	9607      	str	r6, [sp, #28]
 800c9ec:	f7fa fe86 	bl	80076fc <_ZN8touchgfx3HAL3lcdEv>
 800c9f0:	6803      	ldr	r3, [r0, #0]
 800c9f2:	6adb      	ldr	r3, [r3, #44]	@ 0x2c
 800c9f4:	4798      	blx	r3
 800c9f6:	23ff      	movs	r3, #255	@ 0xff
 800c9f8:	f88d 0029 	strb.w	r0, [sp, #41]	@ 0x29
 800c9fc:	f88d 002a 	strb.w	r0, [sp, #42]	@ 0x2a
 800ca00:	6860      	ldr	r0, [r4, #4]
 800ca02:	f88d 3028 	strb.w	r3, [sp, #40]	@ 0x28
 800ca06:	f88d 502b 	strb.w	r5, [sp, #43]	@ 0x2b
 800ca0a:	f88d 502c 	strb.w	r5, [sp, #44]	@ 0x2c
 800ca0e:	6803      	ldr	r3, [r0, #0]
 800ca10:	a903      	add	r1, sp, #12
 800ca12:	685b      	ldr	r3, [r3, #4]
 800ca14:	4798      	blx	r3
 800ca16:	4630      	mov	r0, r6
 800ca18:	b00c      	add	sp, #48	@ 0x30
 800ca1a:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
 800ca1e:	bf00      	nop
 800ca20:	20002c56 	.word	0x20002c56

0800ca24 <_ZN8touchgfx3HAL25copyFromTFTToClientBufferENS_4RectE>:
 800ca24:	b5f0      	push	{r4, r5, r6, r7, lr}
 800ca26:	b085      	sub	sp, #20
 800ca28:	ac02      	add	r4, sp, #8
 800ca2a:	e884 0006 	stmia.w	r4, {r1, r2}
 800ca2e:	4605      	mov	r5, r0
 800ca30:	f8bd 6008 	ldrh.w	r6, [sp, #8]
 800ca34:	f8bd 700a 	ldrh.w	r7, [sp, #10]
 800ca38:	f7ff fde6 	bl	800c608 <_ZN8touchgfx3HAL20getClientFrameBufferEv>
 800ca3c:	463a      	mov	r2, r7
 800ca3e:	4603      	mov	r3, r0
 800ca40:	4631      	mov	r1, r6
 800ca42:	4628      	mov	r0, r5
 800ca44:	f7ff ff08 	bl	800c858 <_ZNK8touchgfx3HAL13getDstAddressEttPt>
 800ca48:	4a05      	ldr	r2, [pc, #20]	@ (800ca60 <_ZN8touchgfx3HAL25copyFromTFTToClientBufferENS_4RectE+0x3c>)
 800ca4a:	682b      	ldr	r3, [r5, #0]
 800ca4c:	8812      	ldrh	r2, [r2, #0]
 800ca4e:	9200      	str	r2, [sp, #0]
 800ca50:	6ede      	ldr	r6, [r3, #108]	@ 0x6c
 800ca52:	e894 0006 	ldmia.w	r4, {r1, r2}
 800ca56:	4603      	mov	r3, r0
 800ca58:	4628      	mov	r0, r5
 800ca5a:	47b0      	blx	r6
 800ca5c:	b005      	add	sp, #20
 800ca5e:	bdf0      	pop	{r4, r5, r6, r7, pc}
 800ca60:	20002c56 	.word	0x20002c56

0800ca64 <_ZN8touchgfx3HAL16swapFrameBuffersEv>:
 800ca64:	b570      	push	{r4, r5, r6, lr}
 800ca66:	f890 306e 	ldrb.w	r3, [r0, #110]	@ 0x6e
 800ca6a:	4604      	mov	r4, r0
 800ca6c:	b19b      	cbz	r3, 800ca96 <_ZN8touchgfx3HAL16swapFrameBuffersEv+0x32>
 800ca6e:	2002      	movs	r0, #2
 800ca70:	f7fd f842 	bl	8009af8 <_ZN8touchgfx4GPIO6toggleENS0_7GPIO_IDE>
 800ca74:	2300      	movs	r3, #0
 800ca76:	f884 306e 	strb.w	r3, [r4, #110]	@ 0x6e
 800ca7a:	f884 306d 	strb.w	r3, [r4, #109]	@ 0x6d
 800ca7e:	6823      	ldr	r3, [r4, #0]
 800ca80:	4620      	mov	r0, r4
 800ca82:	f8d3 50b8 	ldr.w	r5, [r3, #184]	@ 0xb8
 800ca86:	f7ff fdbf 	bl	800c608 <_ZN8touchgfx3HAL20getClientFrameBufferEv>
 800ca8a:	462b      	mov	r3, r5
 800ca8c:	4601      	mov	r1, r0
 800ca8e:	4620      	mov	r0, r4
 800ca90:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
 800ca94:	4718      	bx	r3
 800ca96:	bd70      	pop	{r4, r5, r6, pc}

0800ca98 <_ZN8touchgfx3HAL18setRenderingMethodENS0_15RenderingMethodE>:
 800ca98:	b538      	push	{r3, r4, r5, lr}
 800ca9a:	f890 307b 	ldrb.w	r3, [r0, #123]	@ 0x7b
 800ca9e:	428b      	cmp	r3, r1
 800caa0:	4604      	mov	r4, r0
 800caa2:	460d      	mov	r5, r1
 800caa4:	d006      	beq.n	800cab4 <_ZN8touchgfx3HAL18setRenderingMethodENS0_15RenderingMethodE+0x1c>
 800caa6:	6803      	ldr	r3, [r0, #0]
 800caa8:	b929      	cbnz	r1, 800cab6 <_ZN8touchgfx3HAL18setRenderingMethodENS0_15RenderingMethodE+0x1e>
 800caaa:	f8d3 30c8 	ldr.w	r3, [r3, #200]	@ 0xc8
 800caae:	4798      	blx	r3
 800cab0:	f884 507b 	strb.w	r5, [r4, #123]	@ 0x7b
 800cab4:	bd38      	pop	{r3, r4, r5, pc}
 800cab6:	f8d3 30cc 	ldr.w	r3, [r3, #204]	@ 0xcc
 800caba:	e7f8      	b.n	800caae <_ZN8touchgfx3HAL18setRenderingMethodENS0_15RenderingMethodE+0x16>

0800cabc <_ZN8touchgfx3HAL15lockFrameBufferEv>:
 800cabc:	b510      	push	{r4, lr}
 800cabe:	4b0d      	ldr	r3, [pc, #52]	@ (800caf4 <_ZN8touchgfx3HAL15lockFrameBufferEv+0x38>)
 800cac0:	781b      	ldrb	r3, [r3, #0]
 800cac2:	4604      	mov	r4, r0
 800cac4:	b95b      	cbnz	r3, 800cade <_ZN8touchgfx3HAL15lockFrameBufferEv+0x22>
 800cac6:	f890 3048 	ldrb.w	r3, [r0, #72]	@ 0x48
 800caca:	2b02      	cmp	r3, #2
 800cacc:	d007      	beq.n	800cade <_ZN8touchgfx3HAL15lockFrameBufferEv+0x22>
 800cace:	6840      	ldr	r0, [r0, #4]
 800cad0:	f000 f90e 	bl	800ccf0 <_ZN8touchgfx13DMA_Interface15isDmaQueueEmptyEv>
 800cad4:	b118      	cbz	r0, 800cade <_ZN8touchgfx3HAL15lockFrameBufferEv+0x22>
 800cad6:	6862      	ldr	r2, [r4, #4]
 800cad8:	7a53      	ldrb	r3, [r2, #9]
 800cada:	2b00      	cmp	r3, #0
 800cadc:	d0fc      	beq.n	800cad8 <_ZN8touchgfx3HAL15lockFrameBufferEv+0x1c>
 800cade:	f7fd fa95 	bl	800a00c <_ZN8touchgfx10OSWrappers24takeFrameBufferSemaphoreEv>
 800cae2:	4620      	mov	r0, r4
 800cae4:	2100      	movs	r1, #0
 800cae6:	f7ff ffd7 	bl	800ca98 <_ZN8touchgfx3HAL18setRenderingMethodENS0_15RenderingMethodE>
 800caea:	4620      	mov	r0, r4
 800caec:	f7ff fd8c 	bl	800c608 <_ZN8touchgfx3HAL20getClientFrameBufferEv>
 800caf0:	bd10      	pop	{r4, pc}
 800caf2:	bf00      	nop
 800caf4:	20002c5a 	.word	0x20002c5a

0800caf8 <_ZN8touchgfx13DMA_Interface5flushEv>:
 800caf8:	6803      	ldr	r3, [r0, #0]
 800cafa:	6c5b      	ldr	r3, [r3, #68]	@ 0x44
 800cafc:	4718      	bx	r3

0800cafe <_ZN8touchgfx17LockFreeDMA_Queue7isEmptyEv>:
 800cafe:	e9d0 2003 	ldrd	r2, r0, [r0, #12]
 800cb02:	1a13      	subs	r3, r2, r0
 800cb04:	4258      	negs	r0, r3
 800cb06:	4158      	adcs	r0, r3
 800cb08:	4770      	bx	lr

0800cb0a <_ZN8touchgfx17LockFreeDMA_Queue6isFullEv>:
 800cb0a:	e9d0 2303 	ldrd	r2, r3, [r0, #12]
 800cb0e:	1a9b      	subs	r3, r3, r2
 800cb10:	2b00      	cmp	r3, #0
 800cb12:	bfdc      	itt	le
 800cb14:	6882      	ldrle	r2, [r0, #8]
 800cb16:	189b      	addle	r3, r3, r2
 800cb18:	2b01      	cmp	r3, #1
 800cb1a:	bfcc      	ite	gt
 800cb1c:	2000      	movgt	r0, #0
 800cb1e:	2001      	movle	r0, #1
 800cb20:	4770      	bx	lr

0800cb22 <_ZN8touchgfx17LockFreeDMA_Queue5firstEv>:
 800cb22:	6902      	ldr	r2, [r0, #16]
 800cb24:	6843      	ldr	r3, [r0, #4]
 800cb26:	2024      	movs	r0, #36	@ 0x24
 800cb28:	fb00 3002 	mla	r0, r0, r2, r3
 800cb2c:	4770      	bx	lr

0800cb2e <_ZN8touchgfx13DMA_Interface13seedExecutionEv>:
 800cb2e:	6803      	ldr	r3, [r0, #0]
 800cb30:	691b      	ldr	r3, [r3, #16]
 800cb32:	4718      	bx	r3

0800cb34 <_ZN8touchgfx13DMA_Interface7executeEv>:
 800cb34:	b570      	push	{r4, r5, r6, lr}
 800cb36:	2301      	movs	r3, #1
 800cb38:	7203      	strb	r3, [r0, #8]
 800cb3a:	4604      	mov	r4, r0
 800cb3c:	6840      	ldr	r0, [r0, #4]
 800cb3e:	6803      	ldr	r3, [r0, #0]
 800cb40:	699b      	ldr	r3, [r3, #24]
 800cb42:	4798      	blx	r3
 800cb44:	6803      	ldr	r3, [r0, #0]
 800cb46:	2b40      	cmp	r3, #64	@ 0x40
 800cb48:	4605      	mov	r5, r0
 800cb4a:	d00c      	beq.n	800cb66 <_ZN8touchgfx13DMA_Interface7executeEv+0x32>
 800cb4c:	d810      	bhi.n	800cb70 <_ZN8touchgfx13DMA_Interface7executeEv+0x3c>
 800cb4e:	2b04      	cmp	r3, #4
 800cb50:	d01d      	beq.n	800cb8e <_ZN8touchgfx13DMA_Interface7executeEv+0x5a>
 800cb52:	d804      	bhi.n	800cb5e <_ZN8touchgfx13DMA_Interface7executeEv+0x2a>
 800cb54:	2b01      	cmp	r3, #1
 800cb56:	d006      	beq.n	800cb66 <_ZN8touchgfx13DMA_Interface7executeEv+0x32>
 800cb58:	2b02      	cmp	r3, #2
 800cb5a:	d02c      	beq.n	800cbb6 <_ZN8touchgfx13DMA_Interface7executeEv+0x82>
 800cb5c:	bd70      	pop	{r4, r5, r6, pc}
 800cb5e:	2b08      	cmp	r3, #8
 800cb60:	d01d      	beq.n	800cb9e <_ZN8touchgfx13DMA_Interface7executeEv+0x6a>
 800cb62:	2b20      	cmp	r3, #32
 800cb64:	d1fa      	bne.n	800cb5c <_ZN8touchgfx13DMA_Interface7executeEv+0x28>
 800cb66:	6823      	ldr	r3, [r4, #0]
 800cb68:	4620      	mov	r0, r4
 800cb6a:	6bdb      	ldr	r3, [r3, #60]	@ 0x3c
 800cb6c:	4798      	blx	r3
 800cb6e:	e013      	b.n	800cb98 <_ZN8touchgfx13DMA_Interface7executeEv+0x64>
 800cb70:	f5b3 7f00 	cmp.w	r3, #512	@ 0x200
 800cb74:	d0f7      	beq.n	800cb66 <_ZN8touchgfx13DMA_Interface7executeEv+0x32>
 800cb76:	d804      	bhi.n	800cb82 <_ZN8touchgfx13DMA_Interface7executeEv+0x4e>
 800cb78:	2b80      	cmp	r3, #128	@ 0x80
 800cb7a:	d0f4      	beq.n	800cb66 <_ZN8touchgfx13DMA_Interface7executeEv+0x32>
 800cb7c:	f5b3 7f80 	cmp.w	r3, #256	@ 0x100
 800cb80:	e7f0      	b.n	800cb64 <_ZN8touchgfx13DMA_Interface7executeEv+0x30>
 800cb82:	f5b3 6f80 	cmp.w	r3, #1024	@ 0x400
 800cb86:	d0ee      	beq.n	800cb66 <_ZN8touchgfx13DMA_Interface7executeEv+0x32>
 800cb88:	f5b3 6f00 	cmp.w	r3, #2048	@ 0x800
 800cb8c:	e7e5      	b.n	800cb5a <_ZN8touchgfx13DMA_Interface7executeEv+0x26>
 800cb8e:	6823      	ldr	r3, [r4, #0]
 800cb90:	7f01      	ldrb	r1, [r0, #28]
 800cb92:	6b9b      	ldr	r3, [r3, #56]	@ 0x38
 800cb94:	4620      	mov	r0, r4
 800cb96:	4798      	blx	r3
 800cb98:	6823      	ldr	r3, [r4, #0]
 800cb9a:	6b1b      	ldr	r3, [r3, #48]	@ 0x30
 800cb9c:	e006      	b.n	800cbac <_ZN8touchgfx13DMA_Interface7executeEv+0x78>
 800cb9e:	6823      	ldr	r3, [r4, #0]
 800cba0:	7f01      	ldrb	r1, [r0, #28]
 800cba2:	6b9b      	ldr	r3, [r3, #56]	@ 0x38
 800cba4:	4620      	mov	r0, r4
 800cba6:	4798      	blx	r3
 800cba8:	6823      	ldr	r3, [r4, #0]
 800cbaa:	6b5b      	ldr	r3, [r3, #52]	@ 0x34
 800cbac:	4629      	mov	r1, r5
 800cbae:	4620      	mov	r0, r4
 800cbb0:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
 800cbb4:	4718      	bx	r3
 800cbb6:	6823      	ldr	r3, [r4, #0]
 800cbb8:	4620      	mov	r0, r4
 800cbba:	6bdb      	ldr	r3, [r3, #60]	@ 0x3c
 800cbbc:	4798      	blx	r3
 800cbbe:	e7f3      	b.n	800cba8 <_ZN8touchgfx13DMA_Interface7executeEv+0x74>

0800cbc0 <_ZN8touchgfx13DMA_Interface11enableAlphaEh>:
 800cbc0:	4770      	bx	lr

0800cbc2 <_ZN8touchgfx13DMA_Interface12disableAlphaEv>:
 800cbc2:	4770      	bx	lr

0800cbc4 <_ZN8touchgfx17LockFreeDMA_Queue10pushCopyOfERKNS_6BlitOpE>:
 800cbc4:	e9d0 3203 	ldrd	r3, r2, [r0, #12]
 800cbc8:	1ad2      	subs	r2, r2, r3
 800cbca:	2a00      	cmp	r2, #0
 800cbcc:	b510      	push	{r4, lr}
 800cbce:	bfdc      	itt	le
 800cbd0:	6884      	ldrle	r4, [r0, #8]
 800cbd2:	1912      	addle	r2, r2, r4
 800cbd4:	2a01      	cmp	r2, #1
 800cbd6:	dd16      	ble.n	800cc06 <_ZN8touchgfx17LockFreeDMA_Queue10pushCopyOfERKNS_6BlitOpE+0x42>
 800cbd8:	6842      	ldr	r2, [r0, #4]
 800cbda:	2424      	movs	r4, #36	@ 0x24
 800cbdc:	fb04 2303 	mla	r3, r4, r3, r2
 800cbe0:	f101 0220 	add.w	r2, r1, #32
 800cbe4:	f851 4b04 	ldr.w	r4, [r1], #4
 800cbe8:	f843 4b04 	str.w	r4, [r3], #4
 800cbec:	4291      	cmp	r1, r2
 800cbee:	d1f9      	bne.n	800cbe4 <_ZN8touchgfx17LockFreeDMA_Queue10pushCopyOfERKNS_6BlitOpE+0x20>
 800cbf0:	780a      	ldrb	r2, [r1, #0]
 800cbf2:	701a      	strb	r2, [r3, #0]
 800cbf4:	68c3      	ldr	r3, [r0, #12]
 800cbf6:	6882      	ldr	r2, [r0, #8]
 800cbf8:	f3bf 8f5b 	dmb	ish
 800cbfc:	3301      	adds	r3, #1
 800cbfe:	429a      	cmp	r2, r3
 800cc00:	bfd8      	it	le
 800cc02:	1a9b      	suble	r3, r3, r2
 800cc04:	60c3      	str	r3, [r0, #12]
 800cc06:	bd10      	pop	{r4, pc}

0800cc08 <_ZN8touchgfx17LockFreeDMA_Queue3popEv>:
 800cc08:	6903      	ldr	r3, [r0, #16]
 800cc0a:	6882      	ldr	r2, [r0, #8]
 800cc0c:	f3bf 8f5b 	dmb	ish
 800cc10:	3301      	adds	r3, #1
 800cc12:	429a      	cmp	r2, r3
 800cc14:	bfd8      	it	le
 800cc16:	1a9b      	suble	r3, r3, r2
 800cc18:	6103      	str	r3, [r0, #16]
 800cc1a:	4770      	bx	lr

0800cc1c <_ZN8touchgfx13DMA_Interface10addToQueueERKNS_6BlitOpE>:
 800cc1c:	b570      	push	{r4, r5, r6, lr}
 800cc1e:	4604      	mov	r4, r0
 800cc20:	460e      	mov	r6, r1
 800cc22:	6860      	ldr	r0, [r4, #4]
 800cc24:	6803      	ldr	r3, [r0, #0]
 800cc26:	685b      	ldr	r3, [r3, #4]
 800cc28:	4798      	blx	r3
 800cc2a:	2800      	cmp	r0, #0
 800cc2c:	d1f9      	bne.n	800cc22 <_ZN8touchgfx13DMA_Interface10addToQueueERKNS_6BlitOpE+0x6>
 800cc2e:	4d0d      	ldr	r5, [pc, #52]	@ (800cc64 <_ZN8touchgfx13DMA_Interface10addToQueueERKNS_6BlitOpE+0x48>)
 800cc30:	6828      	ldr	r0, [r5, #0]
 800cc32:	6803      	ldr	r3, [r0, #0]
 800cc34:	6fdb      	ldr	r3, [r3, #124]	@ 0x7c
 800cc36:	4798      	blx	r3
 800cc38:	f7fd fa0a 	bl	800a050 <_ZN8touchgfx10OSWrappers27tryTakeFrameBufferSemaphoreEv>
 800cc3c:	6828      	ldr	r0, [r5, #0]
 800cc3e:	2101      	movs	r1, #1
 800cc40:	f7ff ff2a 	bl	800ca98 <_ZN8touchgfx3HAL18setRenderingMethodENS0_15RenderingMethodE>
 800cc44:	6860      	ldr	r0, [r4, #4]
 800cc46:	6803      	ldr	r3, [r0, #0]
 800cc48:	4631      	mov	r1, r6
 800cc4a:	689b      	ldr	r3, [r3, #8]
 800cc4c:	4798      	blx	r3
 800cc4e:	6823      	ldr	r3, [r4, #0]
 800cc50:	4620      	mov	r0, r4
 800cc52:	6adb      	ldr	r3, [r3, #44]	@ 0x2c
 800cc54:	4798      	blx	r3
 800cc56:	6828      	ldr	r0, [r5, #0]
 800cc58:	6803      	ldr	r3, [r0, #0]
 800cc5a:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
 800cc5e:	6f9b      	ldr	r3, [r3, #120]	@ 0x78
 800cc60:	4718      	bx	r3
 800cc62:	bf00      	nop
 800cc64:	20002c5c 	.word	0x20002c5c

0800cc68 <_ZN8touchgfx13DMA_Interface27waitForFrameBufferSemaphoreEv>:
 800cc68:	b508      	push	{r3, lr}
 800cc6a:	f7fd f9cf 	bl	800a00c <_ZN8touchgfx10OSWrappers24takeFrameBufferSemaphoreEv>
 800cc6e:	e8bd 4008 	ldmia.w	sp!, {r3, lr}
 800cc72:	f7fd b9e1 	b.w	800a038 <_ZN8touchgfx10OSWrappers24giveFrameBufferSemaphoreEv>

0800cc76 <_ZN8touchgfx13DMA_Interface5startEv>:
 800cc76:	b510      	push	{r4, lr}
 800cc78:	4604      	mov	r4, r0
 800cc7a:	6840      	ldr	r0, [r0, #4]
 800cc7c:	6803      	ldr	r3, [r0, #0]
 800cc7e:	681b      	ldr	r3, [r3, #0]
 800cc80:	4798      	blx	r3
 800cc82:	b948      	cbnz	r0, 800cc98 <_ZN8touchgfx13DMA_Interface5startEv+0x22>
 800cc84:	7a63      	ldrb	r3, [r4, #9]
 800cc86:	b13b      	cbz	r3, 800cc98 <_ZN8touchgfx13DMA_Interface5startEv+0x22>
 800cc88:	7a23      	ldrb	r3, [r4, #8]
 800cc8a:	b92b      	cbnz	r3, 800cc98 <_ZN8touchgfx13DMA_Interface5startEv+0x22>
 800cc8c:	6823      	ldr	r3, [r4, #0]
 800cc8e:	4620      	mov	r0, r4
 800cc90:	6a5b      	ldr	r3, [r3, #36]	@ 0x24
 800cc92:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
 800cc96:	4718      	bx	r3
 800cc98:	bd10      	pop	{r4, pc}

0800cc9a <_ZN8touchgfx13DMA_Interface16executeCompletedEv>:
 800cc9a:	b570      	push	{r4, r5, r6, lr}
 800cc9c:	4604      	mov	r4, r0
 800cc9e:	6840      	ldr	r0, [r0, #4]
 800cca0:	6803      	ldr	r3, [r0, #0]
 800cca2:	681b      	ldr	r3, [r3, #0]
 800cca4:	4798      	blx	r3
 800cca6:	4605      	mov	r5, r0
 800cca8:	b930      	cbnz	r0, 800ccb8 <_ZN8touchgfx13DMA_Interface16executeCompletedEv+0x1e>
 800ccaa:	7a23      	ldrb	r3, [r4, #8]
 800ccac:	b123      	cbz	r3, 800ccb8 <_ZN8touchgfx13DMA_Interface16executeCompletedEv+0x1e>
 800ccae:	6860      	ldr	r0, [r4, #4]
 800ccb0:	6803      	ldr	r3, [r0, #0]
 800ccb2:	695b      	ldr	r3, [r3, #20]
 800ccb4:	4798      	blx	r3
 800ccb6:	7225      	strb	r5, [r4, #8]
 800ccb8:	6860      	ldr	r0, [r4, #4]
 800ccba:	6803      	ldr	r3, [r0, #0]
 800ccbc:	681b      	ldr	r3, [r3, #0]
 800ccbe:	4798      	blx	r3
 800ccc0:	b928      	cbnz	r0, 800ccce <_ZN8touchgfx13DMA_Interface16executeCompletedEv+0x34>
 800ccc2:	6823      	ldr	r3, [r4, #0]
 800ccc4:	4620      	mov	r0, r4
 800ccc6:	6a5b      	ldr	r3, [r3, #36]	@ 0x24
 800ccc8:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
 800cccc:	4718      	bx	r3
 800ccce:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
 800ccd2:	f7fd b9c9 	b.w	800a068 <_ZN8touchgfx10OSWrappers31giveFrameBufferSemaphoreFromISREv>
	...

0800ccd8 <_ZN8touchgfx17LockFreeDMA_QueueC1EPNS_6BlitOpEi>:
 800ccd8:	b510      	push	{r4, lr}
 800ccda:	4c04      	ldr	r4, [pc, #16]	@ (800ccec <_ZN8touchgfx17LockFreeDMA_QueueC1EPNS_6BlitOpEi+0x14>)
 800ccdc:	6082      	str	r2, [r0, #8]
 800ccde:	2200      	movs	r2, #0
 800cce0:	e9c0 4100 	strd	r4, r1, [r0]
 800cce4:	e9c0 2203 	strd	r2, r2, [r0, #12]
 800cce8:	bd10      	pop	{r4, pc}
 800ccea:	bf00      	nop
 800ccec:	080233c4 	.word	0x080233c4

0800ccf0 <_ZN8touchgfx13DMA_Interface15isDmaQueueEmptyEv>:
 800ccf0:	6840      	ldr	r0, [r0, #4]
 800ccf2:	6803      	ldr	r3, [r0, #0]
 800ccf4:	681b      	ldr	r3, [r3, #0]
 800ccf6:	4718      	bx	r3

0800ccf8 <_ZNK8touchgfx14AbstractButton15getPressedStateEv>:
 800ccf8:	f890 002c 	ldrb.w	r0, [r0, #44]	@ 0x2c
 800ccfc:	4770      	bx	lr

0800ccfe <_ZN8touchgfx14AbstractButton13executeActionEv>:
 800ccfe:	b510      	push	{r4, lr}
 800cd00:	4604      	mov	r4, r0
 800cd02:	6a80      	ldr	r0, [r0, #40]	@ 0x28
 800cd04:	b150      	cbz	r0, 800cd1c <_ZN8touchgfx14AbstractButton13executeActionEv+0x1e>
 800cd06:	6803      	ldr	r3, [r0, #0]
 800cd08:	68db      	ldr	r3, [r3, #12]
 800cd0a:	4798      	blx	r3
 800cd0c:	b130      	cbz	r0, 800cd1c <_ZN8touchgfx14AbstractButton13executeActionEv+0x1e>
 800cd0e:	6aa0      	ldr	r0, [r4, #40]	@ 0x28
 800cd10:	6803      	ldr	r3, [r0, #0]
 800cd12:	4621      	mov	r1, r4
 800cd14:	689b      	ldr	r3, [r3, #8]
 800cd16:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
 800cd1a:	4718      	bx	r3
 800cd1c:	bd10      	pop	{r4, pc}

0800cd1e <_ZN8touchgfx14AbstractButton16handleClickEventERKNS_10ClickEventE>:
 800cd1e:	b570      	push	{r4, r5, r6, lr}
 800cd20:	790b      	ldrb	r3, [r1, #4]
 800cd22:	f890 502c 	ldrb.w	r5, [r0, #44]	@ 0x2c
 800cd26:	2b00      	cmp	r3, #0
 800cd28:	bf0c      	ite	eq
 800cd2a:	2301      	moveq	r3, #1
 800cd2c:	2300      	movne	r3, #0
 800cd2e:	4604      	mov	r4, r0
 800cd30:	460e      	mov	r6, r1
 800cd32:	f880 302c 	strb.w	r3, [r0, #44]	@ 0x2c
 800cd36:	d109      	bne.n	800cd4c <_ZN8touchgfx14AbstractButton16handleClickEventERKNS_10ClickEventE+0x2e>
 800cd38:	b14d      	cbz	r5, 800cd4e <_ZN8touchgfx14AbstractButton16handleClickEventERKNS_10ClickEventE+0x30>
 800cd3a:	7933      	ldrb	r3, [r6, #4]
 800cd3c:	2b01      	cmp	r3, #1
 800cd3e:	d10c      	bne.n	800cd5a <_ZN8touchgfx14AbstractButton16handleClickEventERKNS_10ClickEventE+0x3c>
 800cd40:	6823      	ldr	r3, [r4, #0]
 800cd42:	4620      	mov	r0, r4
 800cd44:	6e1b      	ldr	r3, [r3, #96]	@ 0x60
 800cd46:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
 800cd4a:	4718      	bx	r3
 800cd4c:	b12d      	cbz	r5, 800cd5a <_ZN8touchgfx14AbstractButton16handleClickEventERKNS_10ClickEventE+0x3c>
 800cd4e:	6823      	ldr	r3, [r4, #0]
 800cd50:	4620      	mov	r0, r4
 800cd52:	695b      	ldr	r3, [r3, #20]
 800cd54:	4798      	blx	r3
 800cd56:	2d00      	cmp	r5, #0
 800cd58:	d1ef      	bne.n	800cd3a <_ZN8touchgfx14AbstractButton16handleClickEventERKNS_10ClickEventE+0x1c>
 800cd5a:	bd70      	pop	{r4, r5, r6, pc}

0800cd5c <_ZN8touchgfx12ToggleButton16handleClickEventERKNS_10ClickEventE>:
 800cd5c:	f890 302c 	ldrb.w	r3, [r0, #44]	@ 0x2c
 800cd60:	b133      	cbz	r3, 800cd70 <_ZN8touchgfx12ToggleButton16handleClickEventERKNS_10ClickEventE+0x14>
 800cd62:	790b      	ldrb	r3, [r1, #4]
 800cd64:	2b01      	cmp	r3, #1
 800cd66:	bf01      	itttt	eq
 800cd68:	8dc3      	ldrheq	r3, [r0, #46]	@ 0x2e
 800cd6a:	8e02      	ldrheq	r2, [r0, #48]	@ 0x30
 800cd6c:	85c2      	strheq	r2, [r0, #46]	@ 0x2e
 800cd6e:	8603      	strheq	r3, [r0, #48]	@ 0x30
 800cd70:	f7ff bfd5 	b.w	800cd1e <_ZN8touchgfx14AbstractButton16handleClickEventERKNS_10ClickEventE>

0800cd74 <_ZNK8touchgfx6Button17invalidateContentEv>:
 800cd74:	f890 2032 	ldrb.w	r2, [r0, #50]	@ 0x32
 800cd78:	b12a      	cbz	r2, 800cd86 <_ZNK8touchgfx6Button17invalidateContentEv+0x12>
 800cd7a:	f890 2025 	ldrb.w	r2, [r0, #37]	@ 0x25
 800cd7e:	b112      	cbz	r2, 800cd86 <_ZNK8touchgfx6Button17invalidateContentEv+0x12>
 800cd80:	6803      	ldr	r3, [r0, #0]
 800cd82:	695b      	ldr	r3, [r3, #20]
 800cd84:	4718      	bx	r3
 800cd86:	4770      	bx	lr

0800cd88 <_ZN8touchgfx12ToggleButton10forceStateEb>:
 800cd88:	8e83      	ldrh	r3, [r0, #52]	@ 0x34
 800cd8a:	b129      	cbz	r1, 800cd98 <_ZN8touchgfx12ToggleButton10forceStateEb+0x10>
 800cd8c:	8dc2      	ldrh	r2, [r0, #46]	@ 0x2e
 800cd8e:	429a      	cmp	r2, r3
 800cd90:	d007      	beq.n	800cda2 <_ZN8touchgfx12ToggleButton10forceStateEb+0x1a>
 800cd92:	8602      	strh	r2, [r0, #48]	@ 0x30
 800cd94:	85c3      	strh	r3, [r0, #46]	@ 0x2e
 800cd96:	4770      	bx	lr
 800cd98:	8e02      	ldrh	r2, [r0, #48]	@ 0x30
 800cd9a:	429a      	cmp	r2, r3
 800cd9c:	bf1c      	itt	ne
 800cd9e:	85c2      	strhne	r2, [r0, #46]	@ 0x2e
 800cda0:	8603      	strhne	r3, [r0, #48]	@ 0x30
 800cda2:	4770      	bx	lr

0800cda4 <_ZNK8touchgfx8TextArea12getWildcard1Ev>:
 800cda4:	2000      	movs	r0, #0
 800cda6:	4770      	bx	lr

0800cda8 <_ZNK8touchgfx8TextArea12getAlignmentEv>:
 800cda8:	4b07      	ldr	r3, [pc, #28]	@ (800cdc8 <_ZNK8touchgfx8TextArea12getAlignmentEv+0x20>)
 800cdaa:	8d82      	ldrh	r2, [r0, #44]	@ 0x2c
 800cdac:	881b      	ldrh	r3, [r3, #0]
 800cdae:	4293      	cmp	r3, r2
 800cdb0:	bf81      	itttt	hi
 800cdb2:	4b06      	ldrhi	r3, [pc, #24]	@ (800cdcc <_ZNK8touchgfx8TextArea12getAlignmentEv+0x24>)
 800cdb4:	681b      	ldrhi	r3, [r3, #0]
 800cdb6:	eb03 0342 	addhi.w	r3, r3, r2, lsl #1
 800cdba:	7858      	ldrbhi	r0, [r3, #1]
 800cdbc:	bf8c      	ite	hi
 800cdbe:	f000 0003 	andhi.w	r0, r0, #3
 800cdc2:	2000      	movls	r0, #0
 800cdc4:	4770      	bx	lr
 800cdc6:	bf00      	nop
 800cdc8:	20002cb0 	.word	0x20002cb0
 800cdcc:	20002cac 	.word	0x20002cac

0800cdd0 <_ZNK8touchgfx8TextArea13getTextHeightEv>:
 800cdd0:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 800cdd4:	4b10      	ldr	r3, [pc, #64]	@ (800ce18 <_ZNK8touchgfx8TextArea13getTextHeightEv+0x48>)
 800cdd6:	8d81      	ldrh	r1, [r0, #44]	@ 0x2c
 800cdd8:	881b      	ldrh	r3, [r3, #0]
 800cdda:	428b      	cmp	r3, r1
 800cddc:	4604      	mov	r4, r0
 800cdde:	d918      	bls.n	800ce12 <_ZNK8touchgfx8TextArea13getTextHeightEv+0x42>
 800cde0:	6803      	ldr	r3, [r0, #0]
 800cde2:	6f9d      	ldr	r5, [r3, #120]	@ 0x78
 800cde4:	4b0d      	ldr	r3, [pc, #52]	@ (800ce1c <_ZNK8touchgfx8TextArea13getTextHeightEv+0x4c>)
 800cde6:	6818      	ldr	r0, [r3, #0]
 800cde8:	f7fc fb62 	bl	80094b0 <_ZNK8touchgfx5Texts7getTextEt>
 800cdec:	6823      	ldr	r3, [r4, #0]
 800cdee:	4606      	mov	r6, r0
 800cdf0:	6fdb      	ldr	r3, [r3, #124]	@ 0x7c
 800cdf2:	4620      	mov	r0, r4
 800cdf4:	4798      	blx	r3
 800cdf6:	6823      	ldr	r3, [r4, #0]
 800cdf8:	4607      	mov	r7, r0
 800cdfa:	f8d3 3080 	ldr.w	r3, [r3, #128]	@ 0x80
 800cdfe:	4620      	mov	r0, r4
 800ce00:	4798      	blx	r3
 800ce02:	463a      	mov	r2, r7
 800ce04:	4603      	mov	r3, r0
 800ce06:	4631      	mov	r1, r6
 800ce08:	4620      	mov	r0, r4
 800ce0a:	46ac      	mov	ip, r5
 800ce0c:	e8bd 41f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, lr}
 800ce10:	4760      	bx	ip
 800ce12:	2000      	movs	r0, #0
 800ce14:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
 800ce18:	20002cb0 	.word	0x20002cb0
 800ce1c:	20002cb8 	.word	0x20002cb8

0800ce20 <_ZNK8touchgfx8TextArea12getTextWidthEv>:
 800ce20:	e92d 43f7 	stmdb	sp!, {r0, r1, r2, r4, r5, r6, r7, r8, r9, lr}
 800ce24:	4b17      	ldr	r3, [pc, #92]	@ (800ce84 <_ZNK8touchgfx8TextArea12getTextWidthEv+0x64>)
 800ce26:	8d81      	ldrh	r1, [r0, #44]	@ 0x2c
 800ce28:	881b      	ldrh	r3, [r3, #0]
 800ce2a:	428b      	cmp	r3, r1
 800ce2c:	4604      	mov	r4, r0
 800ce2e:	d926      	bls.n	800ce7e <_ZNK8touchgfx8TextArea12getTextWidthEv+0x5e>
 800ce30:	4b15      	ldr	r3, [pc, #84]	@ (800ce88 <_ZNK8touchgfx8TextArea12getTextWidthEv+0x68>)
 800ce32:	681b      	ldr	r3, [r3, #0]
 800ce34:	eb03 0241 	add.w	r2, r3, r1, lsl #1
 800ce38:	f813 0011 	ldrb.w	r0, [r3, r1, lsl #1]
 800ce3c:	4b13      	ldr	r3, [pc, #76]	@ (800ce8c <_ZNK8touchgfx8TextArea12getTextWidthEv+0x6c>)
 800ce3e:	7855      	ldrb	r5, [r2, #1]
 800ce40:	681b      	ldr	r3, [r3, #0]
 800ce42:	f853 6020 	ldr.w	r6, [r3, r0, lsl #2]
 800ce46:	6833      	ldr	r3, [r6, #0]
 800ce48:	69df      	ldr	r7, [r3, #28]
 800ce4a:	4b11      	ldr	r3, [pc, #68]	@ (800ce90 <_ZNK8touchgfx8TextArea12getTextWidthEv+0x70>)
 800ce4c:	6818      	ldr	r0, [r3, #0]
 800ce4e:	f7fc fb2f 	bl	80094b0 <_ZNK8touchgfx5Texts7getTextEt>
 800ce52:	6823      	ldr	r3, [r4, #0]
 800ce54:	4680      	mov	r8, r0
 800ce56:	6fdb      	ldr	r3, [r3, #124]	@ 0x7c
 800ce58:	4620      	mov	r0, r4
 800ce5a:	4798      	blx	r3
 800ce5c:	6823      	ldr	r3, [r4, #0]
 800ce5e:	4681      	mov	r9, r0
 800ce60:	f8d3 3080 	ldr.w	r3, [r3, #128]	@ 0x80
 800ce64:	4620      	mov	r0, r4
 800ce66:	4798      	blx	r3
 800ce68:	f3c5 0581 	ubfx	r5, r5, #2, #2
 800ce6c:	9000      	str	r0, [sp, #0]
 800ce6e:	464b      	mov	r3, r9
 800ce70:	4642      	mov	r2, r8
 800ce72:	4629      	mov	r1, r5
 800ce74:	4630      	mov	r0, r6
 800ce76:	47b8      	blx	r7
 800ce78:	b003      	add	sp, #12
 800ce7a:	e8bd 83f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, pc}
 800ce7e:	2000      	movs	r0, #0
 800ce80:	e7fa      	b.n	800ce78 <_ZNK8touchgfx8TextArea12getTextWidthEv+0x58>
 800ce82:	bf00      	nop
 800ce84:	20002cb0 	.word	0x20002cb0
 800ce88:	20002cac 	.word	0x20002cac
 800ce8c:	20002cb4 	.word	0x20002cb4
 800ce90:	20002cb8 	.word	0x20002cb8

0800ce94 <_ZNK8touchgfx8TextArea19calculateTextHeightEPKtz>:
 800ce94:	b40e      	push	{r1, r2, r3}
 800ce96:	e92d 47f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
 800ce9a:	4b2f      	ldr	r3, [pc, #188]	@ (800cf58 <_ZNK8touchgfx8TextArea19calculateTextHeightEPKtz+0xc4>)
 800ce9c:	881a      	ldrh	r2, [r3, #0]
 800ce9e:	8d83      	ldrh	r3, [r0, #44]	@ 0x2c
 800cea0:	429a      	cmp	r2, r3
 800cea2:	b09d      	sub	sp, #116	@ 0x74
 800cea4:	4604      	mov	r4, r0
 800cea6:	d954      	bls.n	800cf52 <_ZNK8touchgfx8TextArea19calculateTextHeightEPKtz+0xbe>
 800cea8:	f8df 90b0 	ldr.w	r9, [pc, #176]	@ 800cf5c <_ZNK8touchgfx8TextArea19calculateTextHeightEPKtz+0xc8>
 800ceac:	f8df 80b0 	ldr.w	r8, [pc, #176]	@ 800cf60 <_ZNK8touchgfx8TextArea19calculateTextHeightEPKtz+0xcc>
 800ceb0:	aa26      	add	r2, sp, #152	@ 0x98
 800ceb2:	9202      	str	r2, [sp, #8]
 800ceb4:	f8d9 2000 	ldr.w	r2, [r9]
 800ceb8:	f812 2013 	ldrb.w	r2, [r2, r3, lsl #1]
 800cebc:	f8d8 3000 	ldr.w	r3, [r8]
 800cec0:	f853 5022 	ldr.w	r5, [r3, r2, lsl #2]
 800cec4:	682b      	ldr	r3, [r5, #0]
 800cec6:	4628      	mov	r0, r5
 800cec8:	6b9b      	ldr	r3, [r3, #56]	@ 0x38
 800ceca:	4798      	blx	r3
 800cecc:	b207      	sxth	r7, r0
 800cece:	4606      	mov	r6, r0
 800ced0:	a803      	add	r0, sp, #12
 800ced2:	f003 fde5 	bl	8010aa0 <_ZN8touchgfx12TextProviderC1Ev>
 800ced6:	682b      	ldr	r3, [r5, #0]
 800ced8:	4628      	mov	r0, r5
 800ceda:	6cdb      	ldr	r3, [r3, #76]	@ 0x4c
 800cedc:	4798      	blx	r3
 800cede:	682b      	ldr	r3, [r5, #0]
 800cee0:	4682      	mov	sl, r0
 800cee2:	6d1b      	ldr	r3, [r3, #80]	@ 0x50
 800cee4:	4628      	mov	r0, r5
 800cee6:	4798      	blx	r3
 800cee8:	4653      	mov	r3, sl
 800ceea:	9000      	str	r0, [sp, #0]
 800ceec:	9a02      	ldr	r2, [sp, #8]
 800ceee:	9925      	ldr	r1, [sp, #148]	@ 0x94
 800cef0:	a803      	add	r0, sp, #12
 800cef2:	f003 fe30 	bl	8010b56 <_ZN8touchgfx12TextProvider10initializeEPKtSt9__va_listS2_PKNS_24FontContextualFormsTableE>
 800cef6:	8da2      	ldrh	r2, [r4, #44]	@ 0x2c
 800cef8:	f8d9 3000 	ldr.w	r3, [r9]
 800cefc:	f894 c037 	ldrb.w	ip, [r4, #55]	@ 0x37
 800cf00:	8925      	ldrh	r5, [r4, #8]
 800cf02:	f813 0012 	ldrb.w	r0, [r3, r2, lsl #1]
 800cf06:	eb03 0142 	add.w	r1, r3, r2, lsl #1
 800cf0a:	eba5 050c 	sub.w	r5, r5, ip
 800cf0e:	784a      	ldrb	r2, [r1, #1]
 800cf10:	f8d8 3000 	ldr.w	r3, [r8]
 800cf14:	f894 1039 	ldrb.w	r1, [r4, #57]	@ 0x39
 800cf18:	b22d      	sxth	r5, r5
 800cf1a:	9500      	str	r5, [sp, #0]
 800cf1c:	f853 3020 	ldr.w	r3, [r3, r0, lsl #2]
 800cf20:	f3c2 0281 	ubfx	r2, r2, #2, #2
 800cf24:	a803      	add	r0, sp, #12
 800cf26:	f001 fc6b 	bl	800e800 <_ZN8touchgfx3LCD11getNumLinesERNS_12TextProviderENS_14WideTextActionEhPKNS_4FontEs>
 800cf2a:	f9b4 2034 	ldrsh.w	r2, [r4, #52]	@ 0x34
 800cf2e:	18b9      	adds	r1, r7, r2
 800cf30:	2900      	cmp	r1, #0
 800cf32:	b203      	sxth	r3, r0
 800cf34:	dd0b      	ble.n	800cf4e <_ZNK8touchgfx8TextArea19calculateTextHeightEPKtz+0xba>
 800cf36:	3b01      	subs	r3, #1
 800cf38:	fb13 f302 	smulbb	r3, r3, r2
 800cf3c:	fb16 3300 	smlabb	r3, r6, r0, r3
 800cf40:	b21f      	sxth	r7, r3
 800cf42:	4638      	mov	r0, r7
 800cf44:	b01d      	add	sp, #116	@ 0x74
 800cf46:	e8bd 47f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
 800cf4a:	b003      	add	sp, #12
 800cf4c:	4770      	bx	lr
 800cf4e:	2b00      	cmp	r3, #0
 800cf50:	dcf7      	bgt.n	800cf42 <_ZNK8touchgfx8TextArea19calculateTextHeightEPKtz+0xae>
 800cf52:	2700      	movs	r7, #0
 800cf54:	e7f5      	b.n	800cf42 <_ZNK8touchgfx8TextArea19calculateTextHeightEPKtz+0xae>
 800cf56:	bf00      	nop
 800cf58:	20002cb0 	.word	0x20002cb0
 800cf5c:	20002cac 	.word	0x20002cac
 800cf60:	20002cb4 	.word	0x20002cb4

0800cf64 <_ZNK8touchgfx8TextArea21calculateBoundingAreaEv>:
 800cf64:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 800cf68:	4bbc      	ldr	r3, [pc, #752]	@ (800d25c <_ZNK8touchgfx8TextArea21calculateBoundingAreaEv+0x2f8>)
 800cf6a:	460c      	mov	r4, r1
 800cf6c:	881b      	ldrh	r3, [r3, #0]
 800cf6e:	8d89      	ldrh	r1, [r1, #44]	@ 0x2c
 800cf70:	428b      	cmp	r3, r1
 800cf72:	b0a9      	sub	sp, #164	@ 0xa4
 800cf74:	4680      	mov	r8, r0
 800cf76:	d809      	bhi.n	800cf8c <_ZNK8touchgfx8TextArea21calculateBoundingAreaEv+0x28>
 800cf78:	2300      	movs	r3, #0
 800cf7a:	f04f 32ff 	mov.w	r2, #4294967295
 800cf7e:	e9c0 3200 	strd	r3, r2, [r0]
 800cf82:	6083      	str	r3, [r0, #8]
 800cf84:	4640      	mov	r0, r8
 800cf86:	b029      	add	sp, #164	@ 0xa4
 800cf88:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 800cf8c:	4eb4      	ldr	r6, [pc, #720]	@ (800d260 <_ZNK8touchgfx8TextArea21calculateBoundingAreaEv+0x2fc>)
 800cf8e:	6833      	ldr	r3, [r6, #0]
 800cf90:	f813 2011 	ldrb.w	r2, [r3, r1, lsl #1]
 800cf94:	4bb3      	ldr	r3, [pc, #716]	@ (800d264 <_ZNK8touchgfx8TextArea21calculateBoundingAreaEv+0x300>)
 800cf96:	681b      	ldr	r3, [r3, #0]
 800cf98:	f853 5022 	ldr.w	r5, [r3, r2, lsl #2]
 800cf9c:	4bb2      	ldr	r3, [pc, #712]	@ (800d268 <_ZNK8touchgfx8TextArea21calculateBoundingAreaEv+0x304>)
 800cf9e:	6818      	ldr	r0, [r3, #0]
 800cfa0:	f7fc fa86 	bl	80094b0 <_ZNK8touchgfx5Texts7getTextEt>
 800cfa4:	682b      	ldr	r3, [r5, #0]
 800cfa6:	4681      	mov	r9, r0
 800cfa8:	6b9b      	ldr	r3, [r3, #56]	@ 0x38
 800cfaa:	4628      	mov	r0, r5
 800cfac:	4798      	blx	r3
 800cfae:	8ea7      	ldrh	r7, [r4, #52]	@ 0x34
 800cfb0:	b203      	sxth	r3, r0
 800cfb2:	4407      	add	r7, r0
 800cfb4:	9304      	str	r3, [sp, #16]
 800cfb6:	b2bb      	uxth	r3, r7
 800cfb8:	9303      	str	r3, [sp, #12]
 800cfba:	f894 3039 	ldrb.w	r3, [r4, #57]	@ 0x39
 800cfbe:	4682      	mov	sl, r0
 800cfc0:	a80f      	add	r0, sp, #60	@ 0x3c
 800cfc2:	2b00      	cmp	r3, #0
 800cfc4:	f040 80a6 	bne.w	800d114 <_ZNK8touchgfx8TextArea21calculateBoundingAreaEv+0x1b0>
 800cfc8:	f003 fd6a 	bl	8010aa0 <_ZN8touchgfx12TextProviderC1Ev>
 800cfcc:	682b      	ldr	r3, [r5, #0]
 800cfce:	4628      	mov	r0, r5
 800cfd0:	6cdb      	ldr	r3, [r3, #76]	@ 0x4c
 800cfd2:	4798      	blx	r3
 800cfd4:	682b      	ldr	r3, [r5, #0]
 800cfd6:	4606      	mov	r6, r0
 800cfd8:	6d1b      	ldr	r3, [r3, #80]	@ 0x50
 800cfda:	4628      	mov	r0, r5
 800cfdc:	4798      	blx	r3
 800cfde:	6823      	ldr	r3, [r4, #0]
 800cfe0:	4607      	mov	r7, r0
 800cfe2:	6fdb      	ldr	r3, [r3, #124]	@ 0x7c
 800cfe4:	4620      	mov	r0, r4
 800cfe6:	4798      	blx	r3
 800cfe8:	6823      	ldr	r3, [r4, #0]
 800cfea:	4683      	mov	fp, r0
 800cfec:	f8d3 3080 	ldr.w	r3, [r3, #128]	@ 0x80
 800cff0:	4620      	mov	r0, r4
 800cff2:	4798      	blx	r3
 800cff4:	463b      	mov	r3, r7
 800cff6:	e9cd b000 	strd	fp, r0, [sp]
 800cffa:	4649      	mov	r1, r9
 800cffc:	4632      	mov	r2, r6
 800cffe:	a80f      	add	r0, sp, #60	@ 0x3c
 800d000:	f003 fdbe 	bl	8010b80 <_ZN8touchgfx12TextProvider10initializeEPKtS2_PKNS_24FontContextualFormsTableEz>
 800d004:	f894 3038 	ldrb.w	r3, [r4, #56]	@ 0x38
 800d008:	f8df b254 	ldr.w	fp, [pc, #596]	@ 800d260 <_ZNK8touchgfx8TextArea21calculateBoundingAreaEv+0x2fc>
 800d00c:	f013 0ffd 	tst.w	r3, #253	@ 0xfd
 800d010:	f04f 0600 	mov.w	r6, #0
 800d014:	bf0c      	ite	eq
 800d016:	f9b4 900a 	ldrsheq.w	r9, [r4, #10]
 800d01a:	f9b4 9008 	ldrshne.w	r9, [r4, #8]
 800d01e:	4637      	mov	r7, r6
 800d020:	8da2      	ldrh	r2, [r4, #44]	@ 0x2c
 800d022:	f8db 3000 	ldr.w	r3, [fp]
 800d026:	eb03 0342 	add.w	r3, r3, r2, lsl #1
 800d02a:	4629      	mov	r1, r5
 800d02c:	785b      	ldrb	r3, [r3, #1]
 800d02e:	f647 72ff 	movw	r2, #32767	@ 0x7fff
 800d032:	f3c3 0381 	ubfx	r3, r3, #2, #2
 800d036:	a80f      	add	r0, sp, #60	@ 0x3c
 800d038:	f001 f8e9 	bl	800e20e <_ZN8touchgfx3LCD11stringWidthERNS_12TextProviderERKNS_4FontEih>
 800d03c:	9b03      	ldr	r3, [sp, #12]
 800d03e:	4286      	cmp	r6, r0
 800d040:	bfb8      	it	lt
 800d042:	4606      	movlt	r6, r0
 800d044:	3701      	adds	r7, #1
 800d046:	eba9 0903 	sub.w	r9, r9, r3
 800d04a:	a80f      	add	r0, sp, #60	@ 0x3c
 800d04c:	b236      	sxth	r6, r6
 800d04e:	b2bf      	uxth	r7, r7
 800d050:	fa0f f989 	sxth.w	r9, r9
 800d054:	f003 fd4b 	bl	8010aee <_ZN8touchgfx12TextProvider11endOfStringEv>
 800d058:	b918      	cbnz	r0, 800d062 <_ZNK8touchgfx8TextArea21calculateBoundingAreaEv+0xfe>
 800d05a:	7a2b      	ldrb	r3, [r5, #8]
 800d05c:	444b      	add	r3, r9
 800d05e:	2b00      	cmp	r3, #0
 800d060:	dcde      	bgt.n	800d020 <_ZNK8touchgfx8TextArea21calculateBoundingAreaEv+0xbc>
 800d062:	9b03      	ldr	r3, [sp, #12]
 800d064:	9a04      	ldr	r2, [sp, #16]
 800d066:	f895 9009 	ldrb.w	r9, [r5, #9]
 800d06a:	fb13 f707 	smulbb	r7, r3, r7
 800d06e:	8ea3      	ldrh	r3, [r4, #52]	@ 0x34
 800d070:	1aff      	subs	r7, r7, r3
 800d072:	b2bf      	uxth	r7, r7
 800d074:	b23b      	sxth	r3, r7
 800d076:	429a      	cmp	r2, r3
 800d078:	bfa8      	it	ge
 800d07a:	4657      	movge	r7, sl
 800d07c:	f894 3038 	ldrb.w	r3, [r4, #56]	@ 0x38
 800d080:	f013 0ffd 	tst.w	r3, #253	@ 0xfd
 800d084:	6823      	ldr	r3, [r4, #0]
 800d086:	bf08      	it	eq
 800d088:	f9b4 a008 	ldrsheq.w	sl, [r4, #8]
 800d08c:	6edb      	ldr	r3, [r3, #108]	@ 0x6c
 800d08e:	bf18      	it	ne
 800d090:	f9b4 a00a 	ldrshne.w	sl, [r4, #10]
 800d094:	4620      	mov	r0, r4
 800d096:	4798      	blx	r3
 800d098:	444f      	add	r7, r9
 800d09a:	fa1f f987 	uxth.w	r9, r7
 800d09e:	2801      	cmp	r0, #1
 800d0a0:	fa0f f789 	sxth.w	r7, r9
 800d0a4:	b2b3      	uxth	r3, r6
 800d0a6:	f000 80e1 	beq.w	800d26c <_ZNK8touchgfx8TextArea21calculateBoundingAreaEv+0x308>
 800d0aa:	2802      	cmp	r0, #2
 800d0ac:	f894 6037 	ldrb.w	r6, [r4, #55]	@ 0x37
 800d0b0:	f000 80e2 	beq.w	800d278 <_ZNK8touchgfx8TextArea21calculateBoundingAreaEv+0x314>
 800d0b4:	7aea      	ldrb	r2, [r5, #11]
 800d0b6:	7b2d      	ldrb	r5, [r5, #12]
 800d0b8:	b236      	sxth	r6, r6
 800d0ba:	1ab6      	subs	r6, r6, r2
 800d0bc:	442a      	add	r2, r5
 800d0be:	4413      	add	r3, r2
 800d0c0:	f894 2038 	ldrb.w	r2, [r4, #56]	@ 0x38
 800d0c4:	fa1f fa86 	uxth.w	sl, r6
 800d0c8:	b29b      	uxth	r3, r3
 800d0ca:	2a02      	cmp	r2, #2
 800d0cc:	fa0f fb8a 	sxth.w	fp, sl
 800d0d0:	b21e      	sxth	r6, r3
 800d0d2:	f000 80d5 	beq.w	800d280 <_ZNK8touchgfx8TextArea21calculateBoundingAreaEv+0x31c>
 800d0d6:	2a03      	cmp	r2, #3
 800d0d8:	f000 80dd 	beq.w	800d296 <_ZNK8touchgfx8TextArea21calculateBoundingAreaEv+0x332>
 800d0dc:	2a01      	cmp	r2, #1
 800d0de:	f040 80e5 	bne.w	800d2ac <_ZNK8touchgfx8TextArea21calculateBoundingAreaEv+0x348>
 800d0e2:	8925      	ldrh	r5, [r4, #8]
 800d0e4:	4633      	mov	r3, r6
 800d0e6:	eba5 0909 	sub.w	r9, r5, r9
 800d0ea:	463e      	mov	r6, r7
 800d0ec:	465d      	mov	r5, fp
 800d0ee:	461f      	mov	r7, r3
 800d0f0:	fa0f fb89 	sxth.w	fp, r9
 800d0f4:	4b5c      	ldr	r3, [pc, #368]	@ (800d268 <_ZNK8touchgfx8TextArea21calculateBoundingAreaEv+0x304>)
 800d0f6:	8da1      	ldrh	r1, [r4, #44]	@ 0x2c
 800d0f8:	6818      	ldr	r0, [r3, #0]
 800d0fa:	f7fc f9d9 	bl	80094b0 <_ZNK8touchgfx5Texts7getTextEt>
 800d0fe:	f8a8 b000 	strh.w	fp, [r8]
 800d102:	f8a8 5002 	strh.w	r5, [r8, #2]
 800d106:	f8a8 6004 	strh.w	r6, [r8, #4]
 800d10a:	f8a8 7006 	strh.w	r7, [r8, #6]
 800d10e:	f8c8 0008 	str.w	r0, [r8, #8]
 800d112:	e737      	b.n	800cf84 <_ZNK8touchgfx8TextArea21calculateBoundingAreaEv+0x20>
 800d114:	f003 fcc4 	bl	8010aa0 <_ZN8touchgfx12TextProviderC1Ev>
 800d118:	682b      	ldr	r3, [r5, #0]
 800d11a:	4628      	mov	r0, r5
 800d11c:	6cdb      	ldr	r3, [r3, #76]	@ 0x4c
 800d11e:	4798      	blx	r3
 800d120:	682b      	ldr	r3, [r5, #0]
 800d122:	4607      	mov	r7, r0
 800d124:	6d1b      	ldr	r3, [r3, #80]	@ 0x50
 800d126:	4628      	mov	r0, r5
 800d128:	4798      	blx	r3
 800d12a:	6823      	ldr	r3, [r4, #0]
 800d12c:	4683      	mov	fp, r0
 800d12e:	6fdb      	ldr	r3, [r3, #124]	@ 0x7c
 800d130:	4620      	mov	r0, r4
 800d132:	4798      	blx	r3
 800d134:	6822      	ldr	r2, [r4, #0]
 800d136:	9005      	str	r0, [sp, #20]
 800d138:	f8d2 2080 	ldr.w	r2, [r2, #128]	@ 0x80
 800d13c:	4620      	mov	r0, r4
 800d13e:	4790      	blx	r2
 800d140:	9b05      	ldr	r3, [sp, #20]
 800d142:	9001      	str	r0, [sp, #4]
 800d144:	463a      	mov	r2, r7
 800d146:	4649      	mov	r1, r9
 800d148:	9300      	str	r3, [sp, #0]
 800d14a:	a80f      	add	r0, sp, #60	@ 0x3c
 800d14c:	465b      	mov	r3, fp
 800d14e:	f003 fd17 	bl	8010b80 <_ZN8touchgfx12TextProvider10initializeEPKtS2_PKNS_24FontContextualFormsTableEz>
 800d152:	f894 3038 	ldrb.w	r3, [r4, #56]	@ 0x38
 800d156:	f9b4 9008 	ldrsh.w	r9, [r4, #8]
 800d15a:	8da1      	ldrh	r1, [r4, #44]	@ 0x2c
 800d15c:	f894 0039 	ldrb.w	r0, [r4, #57]	@ 0x39
 800d160:	f013 0ffd 	tst.w	r3, #253	@ 0xfd
 800d164:	f9b4 300a 	ldrsh.w	r3, [r4, #10]
 800d168:	bf0a      	itet	eq
 800d16a:	464a      	moveq	r2, r9
 800d16c:	461a      	movne	r2, r3
 800d16e:	4699      	moveq	r9, r3
 800d170:	f894 3037 	ldrb.w	r3, [r4, #55]	@ 0x37
 800d174:	1ad2      	subs	r2, r2, r3
 800d176:	6833      	ldr	r3, [r6, #0]
 800d178:	f9b4 6034 	ldrsh.w	r6, [r4, #52]	@ 0x34
 800d17c:	eb03 0341 	add.w	r3, r3, r1, lsl #1
 800d180:	af0f      	add	r7, sp, #60	@ 0x3c
 800d182:	7859      	ldrb	r1, [r3, #1]
 800d184:	9707      	str	r7, [sp, #28]
 800d186:	2300      	movs	r3, #0
 800d188:	f3c1 0181 	ubfx	r1, r1, #2, #2
 800d18c:	f8ad 3018 	strh.w	r3, [sp, #24]
 800d190:	f88d 1020 	strb.w	r1, [sp, #32]
 800d194:	f88d 0021 	strb.w	r0, [sp, #33]	@ 0x21
 800d198:	9509      	str	r5, [sp, #36]	@ 0x24
 800d19a:	f8ad 2028 	strh.w	r2, [sp, #40]	@ 0x28
 800d19e:	f8ad 902a 	strh.w	r9, [sp, #42]	@ 0x2a
 800d1a2:	f8ad 602c 	strh.w	r6, [sp, #44]	@ 0x2c
 800d1a6:	f8ad 302e 	strh.w	r3, [sp, #46]	@ 0x2e
 800d1aa:	f8ad 3030 	strh.w	r3, [sp, #48]	@ 0x30
 800d1ae:	f8ad 3032 	strh.w	r3, [sp, #50]	@ 0x32
 800d1b2:	f8ad 3034 	strh.w	r3, [sp, #52]	@ 0x34
 800d1b6:	f8ad 3036 	strh.w	r3, [sp, #54]	@ 0x36
 800d1ba:	f8ad 3038 	strh.w	r3, [sp, #56]	@ 0x38
 800d1be:	f88d 303a 	strb.w	r3, [sp, #58]	@ 0x3a
 800d1c2:	b350      	cbz	r0, 800d21a <_ZNK8touchgfx8TextArea21calculateBoundingAreaEv+0x2b6>
 800d1c4:	682b      	ldr	r3, [r5, #0]
 800d1c6:	4628      	mov	r0, r5
 800d1c8:	695b      	ldr	r3, [r3, #20]
 800d1ca:	4798      	blx	r3
 800d1cc:	4607      	mov	r7, r0
 800d1ce:	b320      	cbz	r0, 800d21a <_ZNK8touchgfx8TextArea21calculateBoundingAreaEv+0x2b6>
 800d1d0:	9809      	ldr	r0, [sp, #36]	@ 0x24
 800d1d2:	6803      	ldr	r3, [r0, #0]
 800d1d4:	4639      	mov	r1, r7
 800d1d6:	68db      	ldr	r3, [r3, #12]
 800d1d8:	4798      	blx	r3
 800d1da:	4606      	mov	r6, r0
 800d1dc:	b1e8      	cbz	r0, 800d21a <_ZNK8touchgfx8TextArea21calculateBoundingAreaEv+0x2b6>
 800d1de:	7b43      	ldrb	r3, [r0, #13]
 800d1e0:	7a82      	ldrb	r2, [r0, #10]
 800d1e2:	005b      	lsls	r3, r3, #1
 800d1e4:	f403 7380 	and.w	r3, r3, #256	@ 0x100
 800d1e8:	4313      	orrs	r3, r2
 800d1ea:	f8ad 3038 	strh.w	r3, [sp, #56]	@ 0x38
 800d1ee:	f89d 3021 	ldrb.w	r3, [sp, #33]	@ 0x21
 800d1f2:	2b06      	cmp	r3, #6
 800d1f4:	d111      	bne.n	800d21a <_ZNK8touchgfx8TextArea21calculateBoundingAreaEv+0x2b6>
 800d1f6:	9809      	ldr	r0, [sp, #36]	@ 0x24
 800d1f8:	6803      	ldr	r3, [r0, #0]
 800d1fa:	4632      	mov	r2, r6
 800d1fc:	6c5b      	ldr	r3, [r3, #68]	@ 0x44
 800d1fe:	4639      	mov	r1, r7
 800d200:	4798      	blx	r3
 800d202:	7b73      	ldrb	r3, [r6, #13]
 800d204:	005b      	lsls	r3, r3, #1
 800d206:	f403 7280 	and.w	r2, r3, #256	@ 0x100
 800d20a:	7ab3      	ldrb	r3, [r6, #10]
 800d20c:	4313      	orrs	r3, r2
 800d20e:	4418      	add	r0, r3
 800d210:	f8bd 3038 	ldrh.w	r3, [sp, #56]	@ 0x38
 800d214:	4418      	add	r0, r3
 800d216:	f8ad 0038 	strh.w	r0, [sp, #56]	@ 0x38
 800d21a:	2600      	movs	r6, #0
 800d21c:	4637      	mov	r7, r6
 800d21e:	a806      	add	r0, sp, #24
 800d220:	f001 f9ea 	bl	800e5f8 <_ZN8touchgfx3LCD22WideTextInternalStruct23scanStringLengthForLineEv>
 800d224:	f8bd 0036 	ldrh.w	r0, [sp, #54]	@ 0x36
 800d228:	9b03      	ldr	r3, [sp, #12]
 800d22a:	4286      	cmp	r6, r0
 800d22c:	eba9 0903 	sub.w	r9, r9, r3
 800d230:	f8bd 3018 	ldrh.w	r3, [sp, #24]
 800d234:	bfb8      	it	lt
 800d236:	4606      	movlt	r6, r0
 800d238:	3701      	adds	r7, #1
 800d23a:	b236      	sxth	r6, r6
 800d23c:	b2bf      	uxth	r7, r7
 800d23e:	fa0f f989 	sxth.w	r9, r9
 800d242:	2b00      	cmp	r3, #0
 800d244:	f43f af0d 	beq.w	800d062 <_ZNK8touchgfx8TextArea21calculateBoundingAreaEv+0xfe>
 800d248:	f89d 303a 	ldrb.w	r3, [sp, #58]	@ 0x3a
 800d24c:	2b00      	cmp	r3, #0
 800d24e:	f47f af08 	bne.w	800d062 <_ZNK8touchgfx8TextArea21calculateBoundingAreaEv+0xfe>
 800d252:	7a2b      	ldrb	r3, [r5, #8]
 800d254:	444b      	add	r3, r9
 800d256:	2b00      	cmp	r3, #0
 800d258:	dce1      	bgt.n	800d21e <_ZNK8touchgfx8TextArea21calculateBoundingAreaEv+0x2ba>
 800d25a:	e702      	b.n	800d062 <_ZNK8touchgfx8TextArea21calculateBoundingAreaEv+0xfe>
 800d25c:	20002cb0 	.word	0x20002cb0
 800d260:	20002cac 	.word	0x20002cac
 800d264:	20002cb4 	.word	0x20002cb4
 800d268:	20002cb8 	.word	0x20002cb8
 800d26c:	ebaa 0606 	sub.w	r6, sl, r6
 800d270:	2002      	movs	r0, #2
 800d272:	fb96 f6f0 	sdiv	r6, r6, r0
 800d276:	e71d      	b.n	800d0b4 <_ZNK8touchgfx8TextArea21calculateBoundingAreaEv+0x150>
 800d278:	441e      	add	r6, r3
 800d27a:	ebaa 0606 	sub.w	r6, sl, r6
 800d27e:	e719      	b.n	800d0b4 <_ZNK8touchgfx8TextArea21calculateBoundingAreaEv+0x150>
 800d280:	8925      	ldrh	r5, [r4, #8]
 800d282:	1aed      	subs	r5, r5, r3
 800d284:	eba5 050a 	sub.w	r5, r5, sl
 800d288:	fa0f fb85 	sxth.w	fp, r5
 800d28c:	8965      	ldrh	r5, [r4, #10]
 800d28e:	eba5 0509 	sub.w	r5, r5, r9
 800d292:	b22d      	sxth	r5, r5
 800d294:	e72e      	b.n	800d0f4 <_ZNK8touchgfx8TextArea21calculateBoundingAreaEv+0x190>
 800d296:	8965      	ldrh	r5, [r4, #10]
 800d298:	1aed      	subs	r5, r5, r3
 800d29a:	eba5 050a 	sub.w	r5, r5, sl
 800d29e:	4633      	mov	r3, r6
 800d2a0:	b22d      	sxth	r5, r5
 800d2a2:	463e      	mov	r6, r7
 800d2a4:	f04f 0b00 	mov.w	fp, #0
 800d2a8:	461f      	mov	r7, r3
 800d2aa:	e723      	b.n	800d0f4 <_ZNK8touchgfx8TextArea21calculateBoundingAreaEv+0x190>
 800d2ac:	2500      	movs	r5, #0
 800d2ae:	e721      	b.n	800d0f4 <_ZNK8touchgfx8TextArea21calculateBoundingAreaEv+0x190>

0800d2b0 <_ZNK8touchgfx8TextArea17invalidateContentEv>:
 800d2b0:	b513      	push	{r0, r1, r4, lr}
 800d2b2:	f890 3036 	ldrb.w	r3, [r0, #54]	@ 0x36
 800d2b6:	4604      	mov	r4, r0
 800d2b8:	b1fb      	cbz	r3, 800d2fa <_ZNK8touchgfx8TextArea17invalidateContentEv+0x4a>
 800d2ba:	4b16      	ldr	r3, [pc, #88]	@ (800d314 <_ZNK8touchgfx8TextArea17invalidateContentEv+0x64>)
 800d2bc:	8d81      	ldrh	r1, [r0, #44]	@ 0x2c
 800d2be:	881b      	ldrh	r3, [r3, #0]
 800d2c0:	428b      	cmp	r3, r1
 800d2c2:	d91a      	bls.n	800d2fa <_ZNK8touchgfx8TextArea17invalidateContentEv+0x4a>
 800d2c4:	f9b0 3008 	ldrsh.w	r3, [r0, #8]
 800d2c8:	2b00      	cmp	r3, #0
 800d2ca:	dd16      	ble.n	800d2fa <_ZNK8touchgfx8TextArea17invalidateContentEv+0x4a>
 800d2cc:	f9b0 300a 	ldrsh.w	r3, [r0, #10]
 800d2d0:	2b00      	cmp	r3, #0
 800d2d2:	dd12      	ble.n	800d2fa <_ZNK8touchgfx8TextArea17invalidateContentEv+0x4a>
 800d2d4:	4b10      	ldr	r3, [pc, #64]	@ (800d318 <_ZNK8touchgfx8TextArea17invalidateContentEv+0x68>)
 800d2d6:	6818      	ldr	r0, [r3, #0]
 800d2d8:	f7fc f8ea 	bl	80094b0 <_ZNK8touchgfx5Texts7getTextEt>
 800d2dc:	f9b4 3042 	ldrsh.w	r3, [r4, #66]	@ 0x42
 800d2e0:	6822      	ldr	r2, [r4, #0]
 800d2e2:	2b00      	cmp	r3, #0
 800d2e4:	db06      	blt.n	800d2f4 <_ZNK8touchgfx8TextArea17invalidateContentEv+0x44>
 800d2e6:	f9b4 3040 	ldrsh.w	r3, [r4, #64]	@ 0x40
 800d2ea:	2b00      	cmp	r3, #0
 800d2ec:	db02      	blt.n	800d2f4 <_ZNK8touchgfx8TextArea17invalidateContentEv+0x44>
 800d2ee:	6c63      	ldr	r3, [r4, #68]	@ 0x44
 800d2f0:	4298      	cmp	r0, r3
 800d2f2:	d004      	beq.n	800d2fe <_ZNK8touchgfx8TextArea17invalidateContentEv+0x4e>
 800d2f4:	6953      	ldr	r3, [r2, #20]
 800d2f6:	4620      	mov	r0, r4
 800d2f8:	4798      	blx	r3
 800d2fa:	b002      	add	sp, #8
 800d2fc:	bd10      	pop	{r4, pc}
 800d2fe:	f104 013c 	add.w	r1, r4, #60	@ 0x3c
 800d302:	c903      	ldmia	r1, {r0, r1}
 800d304:	466b      	mov	r3, sp
 800d306:	e883 0003 	stmia.w	r3, {r0, r1}
 800d30a:	6912      	ldr	r2, [r2, #16]
 800d30c:	4619      	mov	r1, r3
 800d30e:	4620      	mov	r0, r4
 800d310:	4790      	blx	r2
 800d312:	e7f2      	b.n	800d2fa <_ZNK8touchgfx8TextArea17invalidateContentEv+0x4a>
 800d314:	20002cb0 	.word	0x20002cb0
 800d318:	20002cb8 	.word	0x20002cb8

0800d31c <_ZNK8touchgfx8TextArea4drawERKNS_4RectE>:
 800d31c:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 800d320:	4b44      	ldr	r3, [pc, #272]	@ (800d434 <_ZNK8touchgfx8TextArea4drawERKNS_4RectE+0x118>)
 800d322:	8d82      	ldrh	r2, [r0, #44]	@ 0x2c
 800d324:	881b      	ldrh	r3, [r3, #0]
 800d326:	4293      	cmp	r3, r2
 800d328:	b08e      	sub	sp, #56	@ 0x38
 800d32a:	4604      	mov	r4, r0
 800d32c:	d97e      	bls.n	800d42c <_ZNK8touchgfx8TextArea4drawERKNS_4RectE+0x110>
 800d32e:	6808      	ldr	r0, [r1, #0]
 800d330:	4d41      	ldr	r5, [pc, #260]	@ (800d438 <_ZNK8touchgfx8TextArea4drawERKNS_4RectE+0x11c>)
 800d332:	6849      	ldr	r1, [r1, #4]
 800d334:	ab05      	add	r3, sp, #20
 800d336:	c303      	stmia	r3!, {r0, r1}
 800d338:	4611      	mov	r1, r2
 800d33a:	6828      	ldr	r0, [r5, #0]
 800d33c:	f7fc f8b8 	bl	80094b0 <_ZNK8touchgfx5Texts7getTextEt>
 800d340:	f9b4 3042 	ldrsh.w	r3, [r4, #66]	@ 0x42
 800d344:	2b00      	cmp	r3, #0
 800d346:	db11      	blt.n	800d36c <_ZNK8touchgfx8TextArea4drawERKNS_4RectE+0x50>
 800d348:	f9b4 3040 	ldrsh.w	r3, [r4, #64]	@ 0x40
 800d34c:	2b00      	cmp	r3, #0
 800d34e:	db0d      	blt.n	800d36c <_ZNK8touchgfx8TextArea4drawERKNS_4RectE+0x50>
 800d350:	6c63      	ldr	r3, [r4, #68]	@ 0x44
 800d352:	4298      	cmp	r0, r3
 800d354:	d10a      	bne.n	800d36c <_ZNK8touchgfx8TextArea4drawERKNS_4RectE+0x50>
 800d356:	f104 023c 	add.w	r2, r4, #60	@ 0x3c
 800d35a:	e892 0003 	ldmia.w	r2, {r0, r1}
 800d35e:	ab09      	add	r3, sp, #36	@ 0x24
 800d360:	e883 0003 	stmia.w	r3, {r0, r1}
 800d364:	4619      	mov	r1, r3
 800d366:	a805      	add	r0, sp, #20
 800d368:	f7fe fcca 	bl	800bd00 <_ZN8touchgfx4RectaNERKS0_>
 800d36c:	f9bd 3018 	ldrsh.w	r3, [sp, #24]
 800d370:	2b00      	cmp	r3, #0
 800d372:	dd5b      	ble.n	800d42c <_ZNK8touchgfx8TextArea4drawERKNS_4RectE+0x110>
 800d374:	f9bd 301a 	ldrsh.w	r3, [sp, #26]
 800d378:	2b00      	cmp	r3, #0
 800d37a:	dd57      	ble.n	800d42c <_ZNK8touchgfx8TextArea4drawERKNS_4RectE+0x110>
 800d37c:	4f2f      	ldr	r7, [pc, #188]	@ (800d43c <_ZNK8touchgfx8TextArea4drawERKNS_4RectE+0x120>)
 800d37e:	8da2      	ldrh	r2, [r4, #44]	@ 0x2c
 800d380:	683b      	ldr	r3, [r7, #0]
 800d382:	f813 2012 	ldrb.w	r2, [r3, r2, lsl #1]
 800d386:	4b2e      	ldr	r3, [pc, #184]	@ (800d440 <_ZNK8touchgfx8TextArea4drawERKNS_4RectE+0x124>)
 800d388:	681b      	ldr	r3, [r3, #0]
 800d38a:	f853 6022 	ldr.w	r6, [r3, r2, lsl #2]
 800d38e:	2e00      	cmp	r6, #0
 800d390:	d04c      	beq.n	800d42c <_ZNK8touchgfx8TextArea4drawERKNS_4RectE+0x110>
 800d392:	6823      	ldr	r3, [r4, #0]
 800d394:	f894 8036 	ldrb.w	r8, [r4, #54]	@ 0x36
 800d398:	6edb      	ldr	r3, [r3, #108]	@ 0x6c
 800d39a:	4620      	mov	r0, r4
 800d39c:	4798      	blx	r3
 800d39e:	8da2      	ldrh	r2, [r4, #44]	@ 0x2c
 800d3a0:	683b      	ldr	r3, [r7, #0]
 800d3a2:	f9b4 c034 	ldrsh.w	ip, [r4, #52]	@ 0x34
 800d3a6:	f894 e038 	ldrb.w	lr, [r4, #56]	@ 0x38
 800d3aa:	f894 7037 	ldrb.w	r7, [r4, #55]	@ 0x37
 800d3ae:	6b21      	ldr	r1, [r4, #48]	@ 0x30
 800d3b0:	eb03 0342 	add.w	r3, r3, r2, lsl #1
 800d3b4:	f894 2039 	ldrb.w	r2, [r4, #57]	@ 0x39
 800d3b8:	785b      	ldrb	r3, [r3, #1]
 800d3ba:	9609      	str	r6, [sp, #36]	@ 0x24
 800d3bc:	f3c3 0381 	ubfx	r3, r3, #2, #2
 800d3c0:	f88d 3029 	strb.w	r3, [sp, #41]	@ 0x29
 800d3c4:	4b1f      	ldr	r3, [pc, #124]	@ (800d444 <_ZNK8touchgfx8TextArea4drawERKNS_4RectE+0x128>)
 800d3c6:	f88d 0028 	strb.w	r0, [sp, #40]	@ 0x28
 800d3ca:	681b      	ldr	r3, [r3, #0]
 800d3cc:	f88d e02a 	strb.w	lr, [sp, #42]	@ 0x2a
 800d3d0:	910b      	str	r1, [sp, #44]	@ 0x2c
 800d3d2:	f8ad c030 	strh.w	ip, [sp, #48]	@ 0x30
 800d3d6:	f88d 8032 	strb.w	r8, [sp, #50]	@ 0x32
 800d3da:	f88d 7033 	strb.w	r7, [sp, #51]	@ 0x33
 800d3de:	f88d 2034 	strb.w	r2, [sp, #52]	@ 0x34
 800d3e2:	f893 2058 	ldrb.w	r2, [r3, #88]	@ 0x58
 800d3e6:	b10a      	cbz	r2, 800d3ec <_ZNK8touchgfx8TextArea4drawERKNS_4RectE+0xd0>
 800d3e8:	6cde      	ldr	r6, [r3, #76]	@ 0x4c
 800d3ea:	b906      	cbnz	r6, 800d3ee <_ZNK8touchgfx8TextArea4drawERKNS_4RectE+0xd2>
 800d3ec:	689e      	ldr	r6, [r3, #8]
 800d3ee:	af07      	add	r7, sp, #28
 800d3f0:	4621      	mov	r1, r4
 800d3f2:	4638      	mov	r0, r7
 800d3f4:	f002 ff9e 	bl	8010334 <_ZNK8touchgfx8Drawable15getAbsoluteRectEv>
 800d3f8:	8da1      	ldrh	r1, [r4, #44]	@ 0x2c
 800d3fa:	6828      	ldr	r0, [r5, #0]
 800d3fc:	f7fc f858 	bl	80094b0 <_ZNK8touchgfx5Texts7getTextEt>
 800d400:	6823      	ldr	r3, [r4, #0]
 800d402:	4605      	mov	r5, r0
 800d404:	6fdb      	ldr	r3, [r3, #124]	@ 0x7c
 800d406:	4620      	mov	r0, r4
 800d408:	4798      	blx	r3
 800d40a:	6823      	ldr	r3, [r4, #0]
 800d40c:	4680      	mov	r8, r0
 800d40e:	f8d3 3080 	ldr.w	r3, [r3, #128]	@ 0x80
 800d412:	4620      	mov	r0, r4
 800d414:	4798      	blx	r3
 800d416:	e9cd 8002 	strd	r8, r0, [sp, #8]
 800d41a:	ab09      	add	r3, sp, #36	@ 0x24
 800d41c:	9300      	str	r3, [sp, #0]
 800d41e:	9501      	str	r5, [sp, #4]
 800d420:	ab05      	add	r3, sp, #20
 800d422:	e897 0006 	ldmia.w	r7, {r1, r2}
 800d426:	4630      	mov	r0, r6
 800d428:	f7fb ffd3 	bl	80093d2 <_ZN8touchgfx3LCD10drawStringENS_4RectERKS1_RKNS0_13StringVisualsEPKtz>
 800d42c:	b00e      	add	sp, #56	@ 0x38
 800d42e:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
 800d432:	bf00      	nop
 800d434:	20002cb0 	.word	0x20002cb0
 800d438:	20002cb8 	.word	0x20002cb8
 800d43c:	20002cac 	.word	0x20002cac
 800d440:	20002cb4 	.word	0x20002cb4
 800d444:	20002c5c 	.word	0x20002c5c

0800d448 <_ZN8touchgfx8TextArea19resizeToCurrentTextEv>:
 800d448:	b538      	push	{r3, r4, r5, lr}
 800d44a:	4b0e      	ldr	r3, [pc, #56]	@ (800d484 <_ZN8touchgfx8TextArea19resizeToCurrentTextEv+0x3c>)
 800d44c:	8d82      	ldrh	r2, [r0, #44]	@ 0x2c
 800d44e:	881b      	ldrh	r3, [r3, #0]
 800d450:	429a      	cmp	r2, r3
 800d452:	4604      	mov	r4, r0
 800d454:	d214      	bcs.n	800d480 <_ZN8touchgfx8TextArea19resizeToCurrentTextEv+0x38>
 800d456:	6803      	ldr	r3, [r0, #0]
 800d458:	6f5b      	ldr	r3, [r3, #116]	@ 0x74
 800d45a:	4798      	blx	r3
 800d45c:	6823      	ldr	r3, [r4, #0]
 800d45e:	4605      	mov	r5, r0
 800d460:	6f1b      	ldr	r3, [r3, #112]	@ 0x70
 800d462:	4620      	mov	r0, r4
 800d464:	4798      	blx	r3
 800d466:	f894 3038 	ldrb.w	r3, [r4, #56]	@ 0x38
 800d46a:	b22d      	sxth	r5, r5
 800d46c:	f013 0ffd 	tst.w	r3, #253	@ 0xfd
 800d470:	4601      	mov	r1, r0
 800d472:	bf06      	itte	eq
 800d474:	4602      	moveq	r2, r0
 800d476:	4629      	moveq	r1, r5
 800d478:	462a      	movne	r2, r5
 800d47a:	4620      	mov	r0, r4
 800d47c:	f7fa ff21 	bl	80082c2 <_ZN8touchgfx8Drawable14setWidthHeightEss>
 800d480:	bd38      	pop	{r3, r4, r5, pc}
 800d482:	bf00      	nop
 800d484:	20002cb0 	.word	0x20002cb0

0800d488 <_ZN8touchgfx8TextArea12setTypedTextERKNS_9TypedTextE>:
 800d488:	b530      	push	{r4, r5, lr}
 800d48a:	888b      	ldrh	r3, [r1, #4]
 800d48c:	8583      	strh	r3, [r0, #44]	@ 0x2c
 800d48e:	f9b0 3008 	ldrsh.w	r3, [r0, #8]
 800d492:	b085      	sub	sp, #20
 800d494:	4604      	mov	r4, r0
 800d496:	b923      	cbnz	r3, 800d4a2 <_ZN8touchgfx8TextArea12setTypedTextERKNS_9TypedTextE+0x1a>
 800d498:	f9b0 300a 	ldrsh.w	r3, [r0, #10]
 800d49c:	b90b      	cbnz	r3, 800d4a2 <_ZN8touchgfx8TextArea12setTypedTextERKNS_9TypedTextE+0x1a>
 800d49e:	f7ff ffd3 	bl	800d448 <_ZN8touchgfx8TextArea19resizeToCurrentTextEv>
 800d4a2:	6823      	ldr	r3, [r4, #0]
 800d4a4:	466d      	mov	r5, sp
 800d4a6:	4621      	mov	r1, r4
 800d4a8:	4628      	mov	r0, r5
 800d4aa:	f8d3 3084 	ldr.w	r3, [r3, #132]	@ 0x84
 800d4ae:	4798      	blx	r3
 800d4b0:	e895 0007 	ldmia.w	r5, {r0, r1, r2}
 800d4b4:	343c      	adds	r4, #60	@ 0x3c
 800d4b6:	e884 0007 	stmia.w	r4, {r0, r1, r2}
 800d4ba:	b005      	add	sp, #20
 800d4bc:	bd30      	pop	{r4, r5, pc}

0800d4be <_ZNK8touchgfx3Box12getSolidRectEv>:
 800d4be:	2300      	movs	r3, #0
 800d4c0:	8083      	strh	r3, [r0, #4]
 800d4c2:	80c3      	strh	r3, [r0, #6]
 800d4c4:	8003      	strh	r3, [r0, #0]
 800d4c6:	8043      	strh	r3, [r0, #2]
 800d4c8:	f891 3026 	ldrb.w	r3, [r1, #38]	@ 0x26
 800d4cc:	2bff      	cmp	r3, #255	@ 0xff
 800d4ce:	bf01      	itttt	eq
 800d4d0:	890b      	ldrheq	r3, [r1, #8]
 800d4d2:	8083      	strheq	r3, [r0, #4]
 800d4d4:	894b      	ldrheq	r3, [r1, #10]
 800d4d6:	80c3      	strheq	r3, [r0, #6]
 800d4d8:	4770      	bx	lr
	...

0800d4dc <_ZNK8touchgfx3Box4drawERKNS_4RectE>:
 800d4dc:	b537      	push	{r0, r1, r2, r4, r5, lr}
 800d4de:	4604      	mov	r4, r0
 800d4e0:	6808      	ldr	r0, [r1, #0]
 800d4e2:	6849      	ldr	r1, [r1, #4]
 800d4e4:	466b      	mov	r3, sp
 800d4e6:	c303      	stmia	r3!, {r0, r1}
 800d4e8:	6823      	ldr	r3, [r4, #0]
 800d4ea:	4669      	mov	r1, sp
 800d4ec:	6adb      	ldr	r3, [r3, #44]	@ 0x2c
 800d4ee:	4620      	mov	r0, r4
 800d4f0:	4798      	blx	r3
 800d4f2:	4b08      	ldr	r3, [pc, #32]	@ (800d514 <_ZNK8touchgfx3Box4drawERKNS_4RectE+0x38>)
 800d4f4:	681b      	ldr	r3, [r3, #0]
 800d4f6:	f893 2058 	ldrb.w	r2, [r3, #88]	@ 0x58
 800d4fa:	b10a      	cbz	r2, 800d500 <_ZNK8touchgfx3Box4drawERKNS_4RectE+0x24>
 800d4fc:	6cd8      	ldr	r0, [r3, #76]	@ 0x4c
 800d4fe:	b900      	cbnz	r0, 800d502 <_ZNK8touchgfx3Box4drawERKNS_4RectE+0x26>
 800d500:	6898      	ldr	r0, [r3, #8]
 800d502:	6803      	ldr	r3, [r0, #0]
 800d504:	6aa2      	ldr	r2, [r4, #40]	@ 0x28
 800d506:	6a1d      	ldr	r5, [r3, #32]
 800d508:	f894 3026 	ldrb.w	r3, [r4, #38]	@ 0x26
 800d50c:	4669      	mov	r1, sp
 800d50e:	47a8      	blx	r5
 800d510:	b003      	add	sp, #12
 800d512:	bd30      	pop	{r4, r5, pc}
 800d514:	20002c5c 	.word	0x20002c5c

0800d518 <_ZNK8touchgfx3Box17invalidateContentEv>:
 800d518:	f890 2026 	ldrb.w	r2, [r0, #38]	@ 0x26
 800d51c:	b12a      	cbz	r2, 800d52a <_ZNK8touchgfx3Box17invalidateContentEv+0x12>
 800d51e:	f890 2025 	ldrb.w	r2, [r0, #37]	@ 0x25
 800d522:	b112      	cbz	r2, 800d52a <_ZNK8touchgfx3Box17invalidateContentEv+0x12>
 800d524:	6803      	ldr	r3, [r0, #0]
 800d526:	695b      	ldr	r3, [r3, #20]
 800d528:	4718      	bx	r3
 800d52a:	4770      	bx	lr

0800d52c <_ZN8touchgfx6Button10setBitmapsERKNS_6BitmapES3_>:
 800d52c:	b570      	push	{r4, r5, r6, lr}
 800d52e:	880b      	ldrh	r3, [r1, #0]
 800d530:	85c3      	strh	r3, [r0, #46]	@ 0x2e
 800d532:	4605      	mov	r5, r0
 800d534:	8813      	ldrh	r3, [r2, #0]
 800d536:	f825 3f30 	strh.w	r3, [r5, #48]!
 800d53a:	4604      	mov	r4, r0
 800d53c:	4628      	mov	r0, r5
 800d53e:	f004 fe65 	bl	801220c <_ZNK8touchgfx6Bitmap8getWidthEv>
 800d542:	4606      	mov	r6, r0
 800d544:	4628      	mov	r0, r5
 800d546:	f004 fe95 	bl	8012274 <_ZNK8touchgfx6Bitmap9getHeightEv>
 800d54a:	6823      	ldr	r3, [r4, #0]
 800d54c:	4605      	mov	r5, r0
 800d54e:	4631      	mov	r1, r6
 800d550:	4620      	mov	r0, r4
 800d552:	6b9b      	ldr	r3, [r3, #56]	@ 0x38
 800d554:	4798      	blx	r3
 800d556:	6823      	ldr	r3, [r4, #0]
 800d558:	4629      	mov	r1, r5
 800d55a:	4620      	mov	r0, r4
 800d55c:	6bdb      	ldr	r3, [r3, #60]	@ 0x3c
 800d55e:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
 800d562:	4718      	bx	r3

0800d564 <_ZNK8touchgfx6Button12getSolidRectEv>:
 800d564:	b510      	push	{r4, lr}
 800d566:	f891 3032 	ldrb.w	r3, [r1, #50]	@ 0x32
 800d56a:	2bff      	cmp	r3, #255	@ 0xff
 800d56c:	4604      	mov	r4, r0
 800d56e:	d006      	beq.n	800d57e <_ZNK8touchgfx6Button12getSolidRectEv+0x1a>
 800d570:	2300      	movs	r3, #0
 800d572:	8003      	strh	r3, [r0, #0]
 800d574:	8043      	strh	r3, [r0, #2]
 800d576:	8083      	strh	r3, [r0, #4]
 800d578:	80c3      	strh	r3, [r0, #6]
 800d57a:	4620      	mov	r0, r4
 800d57c:	bd10      	pop	{r4, pc}
 800d57e:	f891 302c 	ldrb.w	r3, [r1, #44]	@ 0x2c
 800d582:	b11b      	cbz	r3, 800d58c <_ZNK8touchgfx6Button12getSolidRectEv+0x28>
 800d584:	3130      	adds	r1, #48	@ 0x30
 800d586:	f004 fea9 	bl	80122dc <_ZNK8touchgfx6Bitmap12getSolidRectEv>
 800d58a:	e7f6      	b.n	800d57a <_ZNK8touchgfx6Button12getSolidRectEv+0x16>
 800d58c:	312e      	adds	r1, #46	@ 0x2e
 800d58e:	e7fa      	b.n	800d586 <_ZNK8touchgfx6Button12getSolidRectEv+0x22>

0800d590 <_ZNK8touchgfx6Button4drawERKNS_4RectE>:
 800d590:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 800d594:	f890 302c 	ldrb.w	r3, [r0, #44]	@ 0x2c
 800d598:	b08a      	sub	sp, #40	@ 0x28
 800d59a:	4604      	mov	r4, r0
 800d59c:	4688      	mov	r8, r1
 800d59e:	2b00      	cmp	r3, #0
 800d5a0:	d066      	beq.n	800d670 <_ZNK8touchgfx6Button4drawERKNS_4RectE+0xe0>
 800d5a2:	8e03      	ldrh	r3, [r0, #48]	@ 0x30
 800d5a4:	f8ad 3014 	strh.w	r3, [sp, #20]
 800d5a8:	a805      	add	r0, sp, #20
 800d5aa:	f004 fe2f 	bl	801220c <_ZNK8touchgfx6Bitmap8getWidthEv>
 800d5ae:	4607      	mov	r7, r0
 800d5b0:	a805      	add	r0, sp, #20
 800d5b2:	f004 fe5f 	bl	8012274 <_ZNK8touchgfx6Bitmap9getHeightEv>
 800d5b6:	f9b8 6000 	ldrsh.w	r6, [r8]
 800d5ba:	f8b8 2004 	ldrh.w	r2, [r8, #4]
 800d5be:	4432      	add	r2, r6
 800d5c0:	b292      	uxth	r2, r2
 800d5c2:	2300      	movs	r3, #0
 800d5c4:	fa0f fc82 	sxth.w	ip, r2
 800d5c8:	459c      	cmp	ip, r3
 800d5ca:	9306      	str	r3, [sp, #24]
 800d5cc:	dd52      	ble.n	800d674 <_ZNK8touchgfx6Button4drawERKNS_4RectE+0xe4>
 800d5ce:	42b7      	cmp	r7, r6
 800d5d0:	dd50      	ble.n	800d674 <_ZNK8touchgfx6Button4drawERKNS_4RectE+0xe4>
 800d5d2:	f9b8 5002 	ldrsh.w	r5, [r8, #2]
 800d5d6:	f8b8 3006 	ldrh.w	r3, [r8, #6]
 800d5da:	442b      	add	r3, r5
 800d5dc:	b29b      	uxth	r3, r3
 800d5de:	b219      	sxth	r1, r3
 800d5e0:	2900      	cmp	r1, #0
 800d5e2:	dd47      	ble.n	800d674 <_ZNK8touchgfx6Button4drawERKNS_4RectE+0xe4>
 800d5e4:	42a8      	cmp	r0, r5
 800d5e6:	dd45      	ble.n	800d674 <_ZNK8touchgfx6Button4drawERKNS_4RectE+0xe4>
 800d5e8:	4567      	cmp	r7, ip
 800d5ea:	bfb8      	it	lt
 800d5ec:	b2ba      	uxthlt	r2, r7
 800d5ee:	4288      	cmp	r0, r1
 800d5f0:	ea26 76e6 	bic.w	r6, r6, r6, asr #31
 800d5f4:	ea25 75e5 	bic.w	r5, r5, r5, asr #31
 800d5f8:	bfb8      	it	lt
 800d5fa:	b283      	uxthlt	r3, r0
 800d5fc:	1b92      	subs	r2, r2, r6
 800d5fe:	1b5b      	subs	r3, r3, r5
 800d600:	f8ad 201c 	strh.w	r2, [sp, #28]
 800d604:	f8ad 301e 	strh.w	r3, [sp, #30]
 800d608:	f8ad 6018 	strh.w	r6, [sp, #24]
 800d60c:	f8ad 501a 	strh.w	r5, [sp, #26]
 800d610:	f8bd 2014 	ldrh.w	r2, [sp, #20]
 800d614:	f64f 73ff 	movw	r3, #65535	@ 0xffff
 800d618:	429a      	cmp	r2, r3
 800d61a:	d026      	beq.n	800d66a <_ZNK8touchgfx6Button4drawERKNS_4RectE+0xda>
 800d61c:	f9bd 301c 	ldrsh.w	r3, [sp, #28]
 800d620:	2b00      	cmp	r3, #0
 800d622:	dd22      	ble.n	800d66a <_ZNK8touchgfx6Button4drawERKNS_4RectE+0xda>
 800d624:	f9bd 301e 	ldrsh.w	r3, [sp, #30]
 800d628:	2b00      	cmp	r3, #0
 800d62a:	dd1e      	ble.n	800d66a <_ZNK8touchgfx6Button4drawERKNS_4RectE+0xda>
 800d62c:	2300      	movs	r3, #0
 800d62e:	e9cd 3308 	strd	r3, r3, [sp, #32]
 800d632:	6823      	ldr	r3, [r4, #0]
 800d634:	a908      	add	r1, sp, #32
 800d636:	6adb      	ldr	r3, [r3, #44]	@ 0x2c
 800d638:	4620      	mov	r0, r4
 800d63a:	4798      	blx	r3
 800d63c:	4b0f      	ldr	r3, [pc, #60]	@ (800d67c <_ZNK8touchgfx6Button4drawERKNS_4RectE+0xec>)
 800d63e:	681b      	ldr	r3, [r3, #0]
 800d640:	f893 2058 	ldrb.w	r2, [r3, #88]	@ 0x58
 800d644:	b10a      	cbz	r2, 800d64a <_ZNK8touchgfx6Button4drawERKNS_4RectE+0xba>
 800d646:	6cd8      	ldr	r0, [r3, #76]	@ 0x4c
 800d648:	b900      	cbnz	r0, 800d64c <_ZNK8touchgfx6Button4drawERKNS_4RectE+0xbc>
 800d64a:	6898      	ldr	r0, [r3, #8]
 800d64c:	6801      	ldr	r1, [r0, #0]
 800d64e:	f9bd 3022 	ldrsh.w	r3, [sp, #34]	@ 0x22
 800d652:	f9bd 2020 	ldrsh.w	r2, [sp, #32]
 800d656:	2501      	movs	r5, #1
 800d658:	9502      	str	r5, [sp, #8]
 800d65a:	f894 4032 	ldrb.w	r4, [r4, #50]	@ 0x32
 800d65e:	9401      	str	r4, [sp, #4]
 800d660:	ac06      	add	r4, sp, #24
 800d662:	9400      	str	r4, [sp, #0]
 800d664:	688c      	ldr	r4, [r1, #8]
 800d666:	a905      	add	r1, sp, #20
 800d668:	47a0      	blx	r4
 800d66a:	b00a      	add	sp, #40	@ 0x28
 800d66c:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
 800d670:	8dc3      	ldrh	r3, [r0, #46]	@ 0x2e
 800d672:	e797      	b.n	800d5a4 <_ZNK8touchgfx6Button4drawERKNS_4RectE+0x14>
 800d674:	2300      	movs	r3, #0
 800d676:	9307      	str	r3, [sp, #28]
 800d678:	e7ca      	b.n	800d610 <_ZNK8touchgfx6Button4drawERKNS_4RectE+0x80>
 800d67a:	bf00      	nop
 800d67c:	20002c5c 	.word	0x20002c5c

0800d680 <_ZNK8touchgfx24TextAreaWithWildcardBase4drawERKNS_4RectE>:
 800d680:	e92d 43f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, lr}
 800d684:	4b2f      	ldr	r3, [pc, #188]	@ (800d744 <_ZNK8touchgfx24TextAreaWithWildcardBase4drawERKNS_4RectE+0xc4>)
 800d686:	8d82      	ldrh	r2, [r0, #44]	@ 0x2c
 800d688:	881b      	ldrh	r3, [r3, #0]
 800d68a:	4293      	cmp	r3, r2
 800d68c:	b08d      	sub	sp, #52	@ 0x34
 800d68e:	4604      	mov	r4, r0
 800d690:	460f      	mov	r7, r1
 800d692:	d954      	bls.n	800d73e <_ZNK8touchgfx24TextAreaWithWildcardBase4drawERKNS_4RectE+0xbe>
 800d694:	4b2c      	ldr	r3, [pc, #176]	@ (800d748 <_ZNK8touchgfx24TextAreaWithWildcardBase4drawERKNS_4RectE+0xc8>)
 800d696:	6819      	ldr	r1, [r3, #0]
 800d698:	eb01 0342 	add.w	r3, r1, r2, lsl #1
 800d69c:	f811 1012 	ldrb.w	r1, [r1, r2, lsl #1]
 800d6a0:	4a2a      	ldr	r2, [pc, #168]	@ (800d74c <_ZNK8touchgfx24TextAreaWithWildcardBase4drawERKNS_4RectE+0xcc>)
 800d6a2:	6812      	ldr	r2, [r2, #0]
 800d6a4:	f852 1021 	ldr.w	r1, [r2, r1, lsl #2]
 800d6a8:	2900      	cmp	r1, #0
 800d6aa:	d048      	beq.n	800d73e <_ZNK8touchgfx24TextAreaWithWildcardBase4drawERKNS_4RectE+0xbe>
 800d6ac:	785a      	ldrb	r2, [r3, #1]
 800d6ae:	f894 3039 	ldrb.w	r3, [r4, #57]	@ 0x39
 800d6b2:	f88d 302c 	strb.w	r3, [sp, #44]	@ 0x2c
 800d6b6:	4b26      	ldr	r3, [pc, #152]	@ (800d750 <_ZNK8touchgfx24TextAreaWithWildcardBase4drawERKNS_4RectE+0xd0>)
 800d6b8:	f890 5036 	ldrb.w	r5, [r0, #54]	@ 0x36
 800d6bc:	f9b0 c034 	ldrsh.w	ip, [r0, #52]	@ 0x34
 800d6c0:	f890 e038 	ldrb.w	lr, [r0, #56]	@ 0x38
 800d6c4:	6b26      	ldr	r6, [r4, #48]	@ 0x30
 800d6c6:	f890 0037 	ldrb.w	r0, [r0, #55]	@ 0x37
 800d6ca:	9107      	str	r1, [sp, #28]
 800d6cc:	f3c2 0801 	ubfx	r8, r2, #0, #2
 800d6d0:	f3c2 0281 	ubfx	r2, r2, #2, #2
 800d6d4:	f88d 2021 	strb.w	r2, [sp, #33]	@ 0x21
 800d6d8:	681a      	ldr	r2, [r3, #0]
 800d6da:	f88d 8020 	strb.w	r8, [sp, #32]
 800d6de:	f892 3058 	ldrb.w	r3, [r2, #88]	@ 0x58
 800d6e2:	f88d e022 	strb.w	lr, [sp, #34]	@ 0x22
 800d6e6:	9609      	str	r6, [sp, #36]	@ 0x24
 800d6e8:	f8ad c028 	strh.w	ip, [sp, #40]	@ 0x28
 800d6ec:	f88d 502a 	strb.w	r5, [sp, #42]	@ 0x2a
 800d6f0:	f88d 002b 	strb.w	r0, [sp, #43]	@ 0x2b
 800d6f4:	b10b      	cbz	r3, 800d6fa <_ZNK8touchgfx24TextAreaWithWildcardBase4drawERKNS_4RectE+0x7a>
 800d6f6:	6cd5      	ldr	r5, [r2, #76]	@ 0x4c
 800d6f8:	b905      	cbnz	r5, 800d6fc <_ZNK8touchgfx24TextAreaWithWildcardBase4drawERKNS_4RectE+0x7c>
 800d6fa:	6895      	ldr	r5, [r2, #8]
 800d6fc:	ae05      	add	r6, sp, #20
 800d6fe:	4621      	mov	r1, r4
 800d700:	4630      	mov	r0, r6
 800d702:	f002 fe17 	bl	8010334 <_ZNK8touchgfx8Drawable15getAbsoluteRectEv>
 800d706:	4b13      	ldr	r3, [pc, #76]	@ (800d754 <_ZNK8touchgfx24TextAreaWithWildcardBase4drawERKNS_4RectE+0xd4>)
 800d708:	8da1      	ldrh	r1, [r4, #44]	@ 0x2c
 800d70a:	6818      	ldr	r0, [r3, #0]
 800d70c:	f7fb fed0 	bl	80094b0 <_ZNK8touchgfx5Texts7getTextEt>
 800d710:	6823      	ldr	r3, [r4, #0]
 800d712:	4680      	mov	r8, r0
 800d714:	6fdb      	ldr	r3, [r3, #124]	@ 0x7c
 800d716:	4620      	mov	r0, r4
 800d718:	4798      	blx	r3
 800d71a:	6823      	ldr	r3, [r4, #0]
 800d71c:	4681      	mov	r9, r0
 800d71e:	f8d3 3080 	ldr.w	r3, [r3, #128]	@ 0x80
 800d722:	4620      	mov	r0, r4
 800d724:	4798      	blx	r3
 800d726:	e9cd 9002 	strd	r9, r0, [sp, #8]
 800d72a:	ab07      	add	r3, sp, #28
 800d72c:	9300      	str	r3, [sp, #0]
 800d72e:	f8cd 8004 	str.w	r8, [sp, #4]
 800d732:	463b      	mov	r3, r7
 800d734:	e896 0006 	ldmia.w	r6, {r1, r2}
 800d738:	4628      	mov	r0, r5
 800d73a:	f7fb fe4a 	bl	80093d2 <_ZN8touchgfx3LCD10drawStringENS_4RectERKS1_RKNS0_13StringVisualsEPKtz>
 800d73e:	b00d      	add	sp, #52	@ 0x34
 800d740:	e8bd 83f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, pc}
 800d744:	20002cb0 	.word	0x20002cb0
 800d748:	20002cac 	.word	0x20002cac
 800d74c:	20002cb4 	.word	0x20002cb4
 800d750:	20002c5c 	.word	0x20002c5c
 800d754:	20002cb8 	.word	0x20002cb8

0800d758 <_ZN8touchgfx3LCD27supportDynamicBitmapDrawingENS_6Bitmap12BitmapFormatE>:
 800d758:	b510      	push	{r4, lr}
 800d75a:	6803      	ldr	r3, [r0, #0]
 800d75c:	6adb      	ldr	r3, [r3, #44]	@ 0x2c
 800d75e:	460c      	mov	r4, r1
 800d760:	4798      	blx	r3
 800d762:	1b03      	subs	r3, r0, r4
 800d764:	4258      	negs	r0, r3
 800d766:	4158      	adcs	r0, r3
 800d768:	bd10      	pop	{r4, pc}
	...

0800d76c <_ZN8touchgfx3LCD15setDefaultColorENS_9colortypeE>:
 800d76c:	4b01      	ldr	r3, [pc, #4]	@ (800d774 <_ZN8touchgfx3LCD15setDefaultColorENS_9colortypeE+0x8>)
 800d76e:	6019      	str	r1, [r3, #0]
 800d770:	4770      	bx	lr
 800d772:	bf00      	nop
 800d774:	20002c64 	.word	0x20002c64

0800d778 <_ZN8touchgfx3LCD18drawTextureMapQuadERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht>:
 800d778:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 800d77c:	4696      	mov	lr, r2
 800d77e:	4605      	mov	r5, r0
 800d780:	4614      	mov	r4, r2
 800d782:	460e      	mov	r6, r1
 800d784:	461f      	mov	r7, r3
 800d786:	e8be 000f 	ldmia.w	lr!, {r0, r1, r2, r3}
 800d78a:	b097      	sub	sp, #92	@ 0x5c
 800d78c:	f10d 0c1c 	add.w	ip, sp, #28
 800d790:	e8ac 000f 	stmia.w	ip!, {r0, r1, r2, r3}
 800d794:	f8de 3000 	ldr.w	r3, [lr]
 800d798:	f8cc 3000 	str.w	r3, [ip]
 800d79c:	f104 0e14 	add.w	lr, r4, #20
 800d7a0:	e8be 000f 	ldmia.w	lr!, {r0, r1, r2, r3}
 800d7a4:	f10d 0c30 	add.w	ip, sp, #48	@ 0x30
 800d7a8:	e8ac 000f 	stmia.w	ip!, {r0, r1, r2, r3}
 800d7ac:	f8de 3000 	ldr.w	r3, [lr]
 800d7b0:	f8cc 3000 	str.w	r3, [ip]
 800d7b4:	f104 0e28 	add.w	lr, r4, #40	@ 0x28
 800d7b8:	e8be 000f 	ldmia.w	lr!, {r0, r1, r2, r3}
 800d7bc:	f10d 0c44 	add.w	ip, sp, #68	@ 0x44
 800d7c0:	e8ac 000f 	stmia.w	ip!, {r0, r1, r2, r3}
 800d7c4:	f89d 908c 	ldrb.w	r9, [sp, #140]	@ 0x8c
 800d7c8:	f8bd a090 	ldrh.w	sl, [sp, #144]	@ 0x90
 800d7cc:	f8bd 8088 	ldrh.w	r8, [sp, #136]	@ 0x88
 800d7d0:	f8de 3000 	ldr.w	r3, [lr]
 800d7d4:	f8cc 3000 	str.w	r3, [ip]
 800d7d8:	9a21      	ldr	r2, [sp, #132]	@ 0x84
 800d7da:	682b      	ldr	r3, [r5, #0]
 800d7dc:	9201      	str	r2, [sp, #4]
 800d7de:	e9cd 9a03 	strd	r9, sl, [sp, #12]
 800d7e2:	9a20      	ldr	r2, [sp, #128]	@ 0x80
 800d7e4:	9200      	str	r2, [sp, #0]
 800d7e6:	f8cd 8008 	str.w	r8, [sp, #8]
 800d7ea:	f8d3 b03c 	ldr.w	fp, [r3, #60]	@ 0x3c
 800d7ee:	aa07      	add	r2, sp, #28
 800d7f0:	463b      	mov	r3, r7
 800d7f2:	4631      	mov	r1, r6
 800d7f4:	4628      	mov	r0, r5
 800d7f6:	47d8      	blx	fp
 800d7f8:	46a6      	mov	lr, r4
 800d7fa:	e8be 000f 	ldmia.w	lr!, {r0, r1, r2, r3}
 800d7fe:	f10d 0c1c 	add.w	ip, sp, #28
 800d802:	e8ac 000f 	stmia.w	ip!, {r0, r1, r2, r3}
 800d806:	f8de 3000 	ldr.w	r3, [lr]
 800d80a:	f8cc 3000 	str.w	r3, [ip]
 800d80e:	f104 0e28 	add.w	lr, r4, #40	@ 0x28
 800d812:	e8be 000f 	ldmia.w	lr!, {r0, r1, r2, r3}
 800d816:	f10d 0c30 	add.w	ip, sp, #48	@ 0x30
 800d81a:	e8ac 000f 	stmia.w	ip!, {r0, r1, r2, r3}
 800d81e:	343c      	adds	r4, #60	@ 0x3c
 800d820:	f8de 3000 	ldr.w	r3, [lr]
 800d824:	f8cc 3000 	str.w	r3, [ip]
 800d828:	cc0f      	ldmia	r4!, {r0, r1, r2, r3}
 800d82a:	f10d 0c44 	add.w	ip, sp, #68	@ 0x44
 800d82e:	e8ac 000f 	stmia.w	ip!, {r0, r1, r2, r3}
 800d832:	6823      	ldr	r3, [r4, #0]
 800d834:	f8cc 3000 	str.w	r3, [ip]
 800d838:	682b      	ldr	r3, [r5, #0]
 800d83a:	e9cd 9a03 	strd	r9, sl, [sp, #12]
 800d83e:	9a21      	ldr	r2, [sp, #132]	@ 0x84
 800d840:	9201      	str	r2, [sp, #4]
 800d842:	9a20      	ldr	r2, [sp, #128]	@ 0x80
 800d844:	9200      	str	r2, [sp, #0]
 800d846:	f8cd 8008 	str.w	r8, [sp, #8]
 800d84a:	6bdc      	ldr	r4, [r3, #60]	@ 0x3c
 800d84c:	aa07      	add	r2, sp, #28
 800d84e:	463b      	mov	r3, r7
 800d850:	4631      	mov	r1, r6
 800d852:	4628      	mov	r0, r5
 800d854:	47a0      	blx	r4
 800d856:	b017      	add	sp, #92	@ 0x5c
 800d858:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}

0800d85c <_ZN8touchgfx3LCD28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth>:
 800d85c:	2000      	movs	r0, #0
 800d85e:	4770      	bx	lr

0800d860 <_ZN8touchgfx3LCD22drawTextureMapScanLineERKNS_14DrawingSurfaceERKNS_9GradientsEPKNS_4EdgeES9_RKNS_14TextureSurfaceERKNS_4RectESF_tht>:
 800d860:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 800d864:	b08d      	sub	sp, #52	@ 0x34
 800d866:	4688      	mov	r8, r1
 800d868:	9916      	ldr	r1, [sp, #88]	@ 0x58
 800d86a:	f8d3 c000 	ldr.w	ip, [r3]
 800d86e:	680f      	ldr	r7, [r1, #0]
 800d870:	f8bd 4070 	ldrh.w	r4, [sp, #112]	@ 0x70
 800d874:	ed92 4a09 	vldr	s8, [r2, #36]	@ 0x24
 800d878:	edd2 4a0b 	vldr	s9, [r2, #44]	@ 0x2c
 800d87c:	edd3 6a07 	vldr	s13, [r3, #28]
 800d880:	9918      	ldr	r1, [sp, #96]	@ 0x60
 800d882:	f8dd a064 	ldr.w	sl, [sp, #100]	@ 0x64
 800d886:	f9b1 9000 	ldrsh.w	r9, [r1]
 800d88a:	f9ba 1000 	ldrsh.w	r1, [sl]
 800d88e:	edd3 1a0a 	vldr	s3, [r3, #40]	@ 0x28
 800d892:	ed93 2a0d 	vldr	s4, [r3, #52]	@ 0x34
 800d896:	eba7 070c 	sub.w	r7, r7, ip
 800d89a:	42bc      	cmp	r4, r7
 800d89c:	bfa8      	it	ge
 800d89e:	463c      	movge	r4, r7
 800d8a0:	ee07 4a90 	vmov	s15, r4
 800d8a4:	eeb8 5ae7 	vcvt.f32.s32	s10, s15
 800d8a8:	edd2 7a0d 	vldr	s15, [r2, #52]	@ 0x34
 800d8ac:	ee25 4a04 	vmul.f32	s8, s10, s8
 800d8b0:	ee65 4a24 	vmul.f32	s9, s10, s9
 800d8b4:	ee25 5a27 	vmul.f32	s10, s10, s15
 800d8b8:	eef7 7a00 	vmov.f32	s15, #112	@ 0x3f800000  1.0
 800d8bc:	ee87 7aa6 	vdiv.f32	s14, s15, s13
 800d8c0:	eb09 0e0c 	add.w	lr, r9, ip
 800d8c4:	4571      	cmp	r1, lr
 800d8c6:	ee71 0aa4 	vadd.f32	s1, s3, s9
 800d8ca:	ee32 1a05 	vadd.f32	s2, s4, s10
 800d8ce:	ee36 0a84 	vadd.f32	s0, s13, s8
 800d8d2:	ee61 1a87 	vmul.f32	s3, s3, s14
 800d8d6:	ee22 2a07 	vmul.f32	s4, s4, s14
 800d8da:	f340 808d 	ble.w	800d9f8 <_ZN8touchgfx3LCD22drawTextureMapScanLineERKNS_14DrawingSurfaceERKNS_9GradientsEPKNS_4EdgeES9_RKNS_14TextureSurfaceERKNS_4RectESF_tht+0x198>
 800d8de:	eba1 060e 	sub.w	r6, r1, lr
 800d8e2:	fb96 f5f4 	sdiv	r5, r6, r4
 800d8e6:	ee07 5a10 	vmov	s14, r5
 800d8ea:	eeb8 7ac7 	vcvt.f32.s32	s14, s14
 800d8ee:	2d00      	cmp	r5, #0
 800d8f0:	fb04 6615 	mls	r6, r4, r5, r6
 800d8f4:	eea7 0a04 	vfma.f32	s0, s14, s8
 800d8f8:	eee7 0a24 	vfma.f32	s1, s14, s9
 800d8fc:	eea7 1a05 	vfma.f32	s2, s14, s10
 800d900:	dd13      	ble.n	800d92a <_ZN8touchgfx3LCD22drawTextureMapScanLineERKNS_14DrawingSurfaceERKNS_9GradientsEPKNS_4EdgeES9_RKNS_14TextureSurfaceERKNS_4RectESF_tht+0xca>
 800d902:	ee70 6a44 	vsub.f32	s13, s0, s8
 800d906:	ee70 1ae4 	vsub.f32	s3, s1, s9
 800d90a:	eef5 6a40 	vcmp.f32	s13, #0.0
 800d90e:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 800d912:	bf18      	it	ne
 800d914:	ee87 7aa6 	vdivne.f32	s14, s15, s13
 800d918:	ee31 2a45 	vsub.f32	s4, s2, s10
 800d91c:	bf08      	it	eq
 800d91e:	eeb0 7a67 	vmoveq.f32	s14, s15
 800d922:	ee61 1a87 	vmul.f32	s3, s3, s14
 800d926:	ee22 2a07 	vmul.f32	s4, s4, s14
 800d92a:	fb05 f204 	mul.w	r2, r5, r4
 800d92e:	1abf      	subs	r7, r7, r2
 800d930:	4494      	add	ip, r2
 800d932:	f8ba 2004 	ldrh.w	r2, [sl, #4]
 800d936:	4411      	add	r1, r2
 800d938:	eb09 020c 	add.w	r2, r9, ip
 800d93c:	443a      	add	r2, r7
 800d93e:	b209      	sxth	r1, r1
 800d940:	428a      	cmp	r2, r1
 800d942:	bfc4      	itt	gt
 800d944:	eba1 0209 	subgt.w	r2, r1, r9
 800d948:	eba2 070c 	subgt.w	r7, r2, ip
 800d94c:	2f00      	cmp	r7, #0
 800d94e:	dd50      	ble.n	800d9f2 <_ZN8touchgfx3LCD22drawTextureMapScanLineERKNS_14DrawingSurfaceERKNS_9GradientsEPKNS_4EdgeES9_RKNS_14TextureSurfaceERKNS_4RectESF_tht+0x192>
 800d950:	fb97 f1f4 	sdiv	r1, r7, r4
 800d954:	fb04 7211 	mls	r2, r4, r1, r7
 800d958:	b90a      	cbnz	r2, 800d95e <_ZN8touchgfx3LCD22drawTextureMapScanLineERKNS_14DrawingSurfaceERKNS_9GradientsEPKNS_4EdgeES9_RKNS_14TextureSurfaceERKNS_4RectESF_tht+0xfe>
 800d95a:	3901      	subs	r1, #1
 800d95c:	4622      	mov	r2, r4
 800d95e:	eec7 3a80 	vdiv.f32	s7, s15, s0
 800d962:	6840      	ldr	r0, [r0, #4]
 800d964:	900b      	str	r0, [sp, #44]	@ 0x2c
 800d966:	f8d0 a000 	ldr.w	sl, [r0]
 800d96a:	9817      	ldr	r0, [sp, #92]	@ 0x5c
 800d96c:	9008      	str	r0, [sp, #32]
 800d96e:	f89d b06c 	ldrb.w	fp, [sp, #108]	@ 0x6c
 800d972:	9818      	ldr	r0, [sp, #96]	@ 0x60
 800d974:	f8cd b024 	str.w	fp, [sp, #36]	@ 0x24
 800d978:	f9b0 b002 	ldrsh.w	fp, [r0, #2]
 800d97c:	695b      	ldr	r3, [r3, #20]
 800d97e:	980b      	ldr	r0, [sp, #44]	@ 0x2c
 800d980:	445b      	add	r3, fp
 800d982:	eef0 6a42 	vmov.f32	s13, s4
 800d986:	ee60 2aa3 	vmul.f32	s5, s1, s7
 800d98a:	ee21 3a23 	vmul.f32	s6, s2, s7
 800d98e:	ee72 7ae1 	vsub.f32	s15, s5, s3
 800d992:	eefe 6ac8 	vcvt.s32.f32	s13, s13, #16
 800d996:	eefe 7ac8 	vcvt.s32.f32	s15, s15, #16
 800d99a:	9307      	str	r3, [sp, #28]
 800d99c:	ee17 7a90 	vmov	r7, s15
 800d9a0:	ee73 7a42 	vsub.f32	s15, s6, s4
 800d9a4:	eeb0 7a61 	vmov.f32	s14, s3
 800d9a8:	eefe 7ac8 	vcvt.s32.f32	s15, s15, #16
 800d9ac:	ee16 3a90 	vmov	r3, s13
 800d9b0:	fb97 f7f4 	sdiv	r7, r7, r4
 800d9b4:	ee17 ca90 	vmov	ip, s15
 800d9b8:	eebe 7ac8 	vcvt.s32.f32	s14, s14, #16
 800d9bc:	fb9c fcf4 	sdiv	ip, ip, r4
 800d9c0:	fb0c 3306 	mla	r3, ip, r6, r3
 800d9c4:	9302      	str	r3, [sp, #8]
 800d9c6:	ee17 3a10 	vmov	r3, s14
 800d9ca:	44b6      	add	lr, r6
 800d9cc:	fb04 e505 	mla	r5, r4, r5, lr
 800d9d0:	e9cd 7c03 	strd	r7, ip, [sp, #12]
 800d9d4:	fb07 3706 	mla	r7, r7, r6, r3
 800d9d8:	e9cd 8505 	strd	r8, r5, [sp, #20]
 800d9dc:	e9cd 4700 	strd	r4, r7, [sp]
 800d9e0:	2900      	cmp	r1, #0
 800d9e2:	bfcc      	ite	gt
 800d9e4:	46a1      	movgt	r9, r4
 800d9e6:	4691      	movle	r9, r2
 800d9e8:	eba9 0306 	sub.w	r3, r9, r6
 800d9ec:	f8da 4008 	ldr.w	r4, [sl, #8]
 800d9f0:	47a0      	blx	r4
 800d9f2:	b00d      	add	sp, #52	@ 0x34
 800d9f4:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 800d9f8:	2500      	movs	r5, #0
 800d9fa:	462e      	mov	r6, r5
 800d9fc:	e799      	b.n	800d932 <_ZN8touchgfx3LCD22drawTextureMapScanLineERKNS_14DrawingSurfaceERKNS_9GradientsEPKNS_4EdgeES9_RKNS_14TextureSurfaceERKNS_4RectESF_tht+0xd2>
	...

0800da00 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht>:
 800da00:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 800da04:	b0db      	sub	sp, #364	@ 0x16c
 800da06:	461d      	mov	r5, r3
 800da08:	f8bd 3198 	ldrh.w	r3, [sp, #408]	@ 0x198
 800da0c:	930a      	str	r3, [sp, #40]	@ 0x28
 800da0e:	f89d 319c 	ldrb.w	r3, [sp, #412]	@ 0x19c
 800da12:	930b      	str	r3, [sp, #44]	@ 0x2c
 800da14:	f8bd 31a0 	ldrh.w	r3, [sp, #416]	@ 0x1a0
 800da18:	9310      	str	r3, [sp, #64]	@ 0x40
 800da1a:	6803      	ldr	r3, [r0, #0]
 800da1c:	910f      	str	r1, [sp, #60]	@ 0x3c
 800da1e:	6c5f      	ldr	r7, [r3, #68]	@ 0x44
 800da20:	9009      	str	r0, [sp, #36]	@ 0x24
 800da22:	4614      	mov	r4, r2
 800da24:	4629      	mov	r1, r5
 800da26:	e9dd 230a 	ldrd	r2, r3, [sp, #40]	@ 0x28
 800da2a:	f8dd b194 	ldr.w	fp, [sp, #404]	@ 0x194
 800da2e:	47b8      	blx	r7
 800da30:	9b09      	ldr	r3, [sp, #36]	@ 0x24
 800da32:	6058      	str	r0, [r3, #4]
 800da34:	2800      	cmp	r0, #0
 800da36:	f000 83a1 	beq.w	800e17c <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x77c>
 800da3a:	682b      	ldr	r3, [r5, #0]
 800da3c:	9314      	str	r3, [sp, #80]	@ 0x50
 800da3e:	686b      	ldr	r3, [r5, #4]
 800da40:	9315      	str	r3, [sp, #84]	@ 0x54
 800da42:	4bc4      	ldr	r3, [pc, #784]	@ (800dd54 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x354>)
 800da44:	ed94 7a02 	vldr	s14, [r4, #8]
 800da48:	7819      	ldrb	r1, [r3, #0]
 800da4a:	e9d5 2302 	ldrd	r2, r3, [r5, #8]
 800da4e:	eef2 7a04 	vmov.f32	s15, #36	@ 0x41200000  10.0
 800da52:	2900      	cmp	r1, #0
 800da54:	eeb4 7ae7 	vcmpe.f32	s14, s15
 800da58:	bf16      	itet	ne
 800da5a:	4619      	movne	r1, r3
 800da5c:	4611      	moveq	r1, r2
 800da5e:	4613      	movne	r3, r2
 800da60:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 800da64:	9116      	str	r1, [sp, #88]	@ 0x58
 800da66:	e9cd 3217 	strd	r3, r2, [sp, #92]	@ 0x5c
 800da6a:	f240 8387 	bls.w	800e17c <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x77c>
 800da6e:	ed94 7a07 	vldr	s14, [r4, #28]
 800da72:	eeb4 7ae7 	vcmpe.f32	s14, s15
 800da76:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 800da7a:	f240 837f 	bls.w	800e17c <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x77c>
 800da7e:	ed94 7a0c 	vldr	s14, [r4, #48]	@ 0x30
 800da82:	eeb4 7ae7 	vcmpe.f32	s14, s15
 800da86:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 800da8a:	f240 8377 	bls.w	800e17c <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x77c>
 800da8e:	6822      	ldr	r2, [r4, #0]
 800da90:	4bb1      	ldr	r3, [pc, #708]	@ (800dd58 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x358>)
 800da92:	429a      	cmp	r2, r3
 800da94:	f2c0 8372 	blt.w	800e17c <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x77c>
 800da98:	49b0      	ldr	r1, [pc, #704]	@ (800dd5c <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x35c>)
 800da9a:	6963      	ldr	r3, [r4, #20]
 800da9c:	428a      	cmp	r2, r1
 800da9e:	f300 836d 	bgt.w	800e17c <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x77c>
 800daa2:	f503 331c 	add.w	r3, r3, #159744	@ 0x27000
 800daa6:	48ae      	ldr	r0, [pc, #696]	@ (800dd60 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x360>)
 800daa8:	33ff      	adds	r3, #255	@ 0xff
 800daaa:	4283      	cmp	r3, r0
 800daac:	f200 8366 	bhi.w	800e17c <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x77c>
 800dab0:	6aa3      	ldr	r3, [r4, #40]	@ 0x28
 800dab2:	4dac      	ldr	r5, [pc, #688]	@ (800dd64 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x364>)
 800dab4:	f503 331c 	add.w	r3, r3, #159744	@ 0x27000
 800dab8:	33ff      	adds	r3, #255	@ 0xff
 800daba:	42ab      	cmp	r3, r5
 800dabc:	f200 835e 	bhi.w	800e17c <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x77c>
 800dac0:	6862      	ldr	r2, [r4, #4]
 800dac2:	f502 331c 	add.w	r3, r2, #159744	@ 0x27000
 800dac6:	33ff      	adds	r3, #255	@ 0xff
 800dac8:	4283      	cmp	r3, r0
 800daca:	f200 8357 	bhi.w	800e17c <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x77c>
 800dace:	69a1      	ldr	r1, [r4, #24]
 800dad0:	f501 331c 	add.w	r3, r1, #159744	@ 0x27000
 800dad4:	33ff      	adds	r3, #255	@ 0xff
 800dad6:	4283      	cmp	r3, r0
 800dad8:	f200 8350 	bhi.w	800e17c <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x77c>
 800dadc:	6ae3      	ldr	r3, [r4, #44]	@ 0x2c
 800dade:	f503 301c 	add.w	r0, r3, #159744	@ 0x27000
 800dae2:	30ff      	adds	r0, #255	@ 0xff
 800dae4:	42a8      	cmp	r0, r5
 800dae6:	f200 8349 	bhi.w	800e17c <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x77c>
 800daea:	428a      	cmp	r2, r1
 800daec:	f280 8110 	bge.w	800dd10 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x310>
 800daf0:	429a      	cmp	r2, r3
 800daf2:	f300 8119 	bgt.w	800dd28 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x328>
 800daf6:	4299      	cmp	r1, r3
 800daf8:	f280 811d 	bge.w	800dd36 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x336>
 800dafc:	2502      	movs	r5, #2
 800dafe:	2701      	movs	r7, #1
 800db00:	46a9      	mov	r9, r5
 800db02:	46b8      	mov	r8, r7
 800db04:	f04f 0a00 	mov.w	sl, #0
 800db08:	4621      	mov	r1, r4
 800db0a:	a849      	add	r0, sp, #292	@ 0x124
 800db0c:	f003 fd3a 	bl	8011584 <_ZN8touchgfx9GradientsC1EPKNS_7Point3DE>
 800db10:	4622      	mov	r2, r4
 800db12:	4653      	mov	r3, sl
 800db14:	a949      	add	r1, sp, #292	@ 0x124
 800db16:	f8cd 9000 	str.w	r9, [sp]
 800db1a:	a819      	add	r0, sp, #100	@ 0x64
 800db1c:	f003 fe62 	bl	80117e4 <_ZN8touchgfx4EdgeC1ERKNS_9GradientsEPKNS_7Point3DEii>
 800db20:	4622      	mov	r2, r4
 800db22:	4653      	mov	r3, sl
 800db24:	a949      	add	r1, sp, #292	@ 0x124
 800db26:	f8cd 8000 	str.w	r8, [sp]
 800db2a:	a829      	add	r0, sp, #164	@ 0xa4
 800db2c:	f003 fe5a 	bl	80117e4 <_ZN8touchgfx4EdgeC1ERKNS_9GradientsEPKNS_7Point3DEii>
 800db30:	4643      	mov	r3, r8
 800db32:	4622      	mov	r2, r4
 800db34:	a949      	add	r1, sp, #292	@ 0x124
 800db36:	f8cd 9000 	str.w	r9, [sp]
 800db3a:	a839      	add	r0, sp, #228	@ 0xe4
 800db3c:	f003 fe52 	bl	80117e4 <_ZN8touchgfx4EdgeC1ERKNS_9GradientsEPKNS_7Point3DEii>
 800db40:	42af      	cmp	r7, r5
 800db42:	bfb5      	itete	lt
 800db44:	2300      	movlt	r3, #0
 800db46:	2301      	movge	r3, #1
 800db48:	930e      	strlt	r3, [sp, #56]	@ 0x38
 800db4a:	930e      	strge	r3, [sp, #56]	@ 0x38
 800db4c:	9b0f      	ldr	r3, [sp, #60]	@ 0x3c
 800db4e:	e893 0003 	ldmia.w	r3, {r0, r1}
 800db52:	af12      	add	r7, sp, #72	@ 0x48
 800db54:	bfb9      	ittee	lt
 800db56:	ad29      	addlt	r5, sp, #164	@ 0xa4
 800db58:	ac19      	addlt	r4, sp, #100	@ 0x64
 800db5a:	ad19      	addge	r5, sp, #100	@ 0x64
 800db5c:	ac29      	addge	r4, sp, #164	@ 0xa4
 800db5e:	e887 0003 	stmia.w	r7, {r0, r1}
 800db62:	b928      	cbnz	r0, 800db70 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x170>
 800db64:	4b80      	ldr	r3, [pc, #512]	@ (800dd68 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x368>)
 800db66:	6818      	ldr	r0, [r3, #0]
 800db68:	6803      	ldr	r3, [r0, #0]
 800db6a:	6a9b      	ldr	r3, [r3, #40]	@ 0x28
 800db6c:	4798      	blx	r3
 800db6e:	6038      	str	r0, [r7, #0]
 800db70:	9b64      	ldr	r3, [sp, #400]	@ 0x190
 800db72:	f8bb 0006 	ldrh.w	r0, [fp, #6]
 800db76:	f9b3 3002 	ldrsh.w	r3, [r3, #2]
 800db7a:	930c      	str	r3, [sp, #48]	@ 0x30
 800db7c:	990c      	ldr	r1, [sp, #48]	@ 0x30
 800db7e:	6963      	ldr	r3, [r4, #20]
 800db80:	9a2f      	ldr	r2, [sp, #188]	@ 0xbc
 800db82:	440b      	add	r3, r1
 800db84:	f9bb 1002 	ldrsh.w	r1, [fp, #2]
 800db88:	4408      	add	r0, r1
 800db8a:	b200      	sxth	r0, r0
 800db8c:	4283      	cmp	r3, r0
 800db8e:	900d      	str	r0, [sp, #52]	@ 0x34
 800db90:	f280 80dd 	bge.w	800dd4e <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x34e>
 800db94:	428b      	cmp	r3, r1
 800db96:	da08      	bge.n	800dbaa <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x1aa>
 800db98:	2a00      	cmp	r2, #0
 800db9a:	dd06      	ble.n	800dbaa <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x1aa>
 800db9c:	1acb      	subs	r3, r1, r3
 800db9e:	429a      	cmp	r2, r3
 800dba0:	f2c0 80e4 	blt.w	800dd6c <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x36c>
 800dba4:	2b00      	cmp	r3, #0
 800dba6:	f300 80e2 	bgt.w	800dd6e <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x36e>
 800dbaa:	6967      	ldr	r7, [r4, #20]
 800dbac:	9b0c      	ldr	r3, [sp, #48]	@ 0x30
 800dbae:	443b      	add	r3, r7
 800dbb0:	461f      	mov	r7, r3
 800dbb2:	9b0d      	ldr	r3, [sp, #52]	@ 0x34
 800dbb4:	1bdf      	subs	r7, r3, r7
 800dbb6:	4297      	cmp	r7, r2
 800dbb8:	bfa8      	it	ge
 800dbba:	4617      	movge	r7, r2
 800dbbc:	f10d 0850 	add.w	r8, sp, #80	@ 0x50
 800dbc0:	2f00      	cmp	r7, #0
 800dbc2:	f340 8166 	ble.w	800de92 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x492>
 800dbc6:	9b64      	ldr	r3, [sp, #400]	@ 0x190
 800dbc8:	6829      	ldr	r1, [r5, #0]
 800dbca:	f9b3 2000 	ldrsh.w	r2, [r3]
 800dbce:	f9bb 3000 	ldrsh.w	r3, [fp]
 800dbd2:	6820      	ldr	r0, [r4, #0]
 800dbd4:	4411      	add	r1, r2
 800dbd6:	4299      	cmp	r1, r3
 800dbd8:	dd1a      	ble.n	800dc10 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x210>
 800dbda:	f8bb 1004 	ldrh.w	r1, [fp, #4]
 800dbde:	440b      	add	r3, r1
 800dbe0:	4402      	add	r2, r0
 800dbe2:	b21b      	sxth	r3, r3
 800dbe4:	429a      	cmp	r2, r3
 800dbe6:	dc13      	bgt.n	800dc10 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x210>
 800dbe8:	9b09      	ldr	r3, [sp, #36]	@ 0x24
 800dbea:	9a10      	ldr	r2, [sp, #64]	@ 0x40
 800dbec:	681b      	ldr	r3, [r3, #0]
 800dbee:	9206      	str	r2, [sp, #24]
 800dbf0:	9a0b      	ldr	r2, [sp, #44]	@ 0x2c
 800dbf2:	9205      	str	r2, [sp, #20]
 800dbf4:	9a0a      	ldr	r2, [sp, #40]	@ 0x28
 800dbf6:	9500      	str	r5, [sp, #0]
 800dbf8:	e9cd b203 	strd	fp, r2, [sp, #12]
 800dbfc:	9a64      	ldr	r2, [sp, #400]	@ 0x190
 800dbfe:	9809      	ldr	r0, [sp, #36]	@ 0x24
 800dc00:	e9cd 8201 	strd	r8, r2, [sp, #4]
 800dc04:	a912      	add	r1, sp, #72	@ 0x48
 800dc06:	f8d3 9048 	ldr.w	r9, [r3, #72]	@ 0x48
 800dc0a:	aa49      	add	r2, sp, #292	@ 0x124
 800dc0c:	4623      	mov	r3, r4
 800dc0e:	47c8      	blx	r9
 800dc10:	e9d4 2300 	ldrd	r2, r3, [r4]
 800dc14:	441a      	add	r2, r3
 800dc16:	6963      	ldr	r3, [r4, #20]
 800dc18:	ed94 7a0a 	vldr	s14, [r4, #40]	@ 0x28
 800dc1c:	edd4 7a0b 	vldr	s15, [r4, #44]	@ 0x2c
 800dc20:	edd4 6a0e 	vldr	s13, [r4, #56]	@ 0x38
 800dc24:	68a1      	ldr	r1, [r4, #8]
 800dc26:	ed94 6a08 	vldr	s12, [r4, #32]
 800dc2a:	6022      	str	r2, [r4, #0]
 800dc2c:	3301      	adds	r3, #1
 800dc2e:	6163      	str	r3, [r4, #20]
 800dc30:	69a3      	ldr	r3, [r4, #24]
 800dc32:	ee37 7a27 	vadd.f32	s14, s14, s15
 800dc36:	3b01      	subs	r3, #1
 800dc38:	edd4 7a0d 	vldr	s15, [r4, #52]	@ 0x34
 800dc3c:	61a3      	str	r3, [r4, #24]
 800dc3e:	6923      	ldr	r3, [r4, #16]
 800dc40:	ed84 7a0a 	vstr	s14, [r4, #40]	@ 0x28
 800dc44:	ee77 7aa6 	vadd.f32	s15, s15, s13
 800dc48:	edd4 6a07 	vldr	s13, [r4, #28]
 800dc4c:	edc4 7a0d 	vstr	s15, [r4, #52]	@ 0x34
 800dc50:	440b      	add	r3, r1
 800dc52:	68e1      	ldr	r1, [r4, #12]
 800dc54:	6123      	str	r3, [r4, #16]
 800dc56:	ee76 6a86 	vadd.f32	s13, s13, s12
 800dc5a:	428b      	cmp	r3, r1
 800dc5c:	edc4 6a07 	vstr	s13, [r4, #28]
 800dc60:	db15      	blt.n	800dc8e <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x28e>
 800dc62:	ed94 6a09 	vldr	s12, [r4, #36]	@ 0x24
 800dc66:	ee76 6a26 	vadd.f32	s13, s12, s13
 800dc6a:	3201      	adds	r2, #1
 800dc6c:	edc4 6a07 	vstr	s13, [r4, #28]
 800dc70:	edd4 6a0c 	vldr	s13, [r4, #48]	@ 0x30
 800dc74:	6022      	str	r2, [r4, #0]
 800dc76:	ee36 7a87 	vadd.f32	s14, s13, s14
 800dc7a:	1a5b      	subs	r3, r3, r1
 800dc7c:	ed84 7a0a 	vstr	s14, [r4, #40]	@ 0x28
 800dc80:	ed94 7a0f 	vldr	s14, [r4, #60]	@ 0x3c
 800dc84:	6123      	str	r3, [r4, #16]
 800dc86:	ee77 7a27 	vadd.f32	s15, s14, s15
 800dc8a:	edc4 7a0d 	vstr	s15, [r4, #52]	@ 0x34
 800dc8e:	e9d5 2300 	ldrd	r2, r3, [r5]
 800dc92:	441a      	add	r2, r3
 800dc94:	696b      	ldr	r3, [r5, #20]
 800dc96:	ed95 7a0a 	vldr	s14, [r5, #40]	@ 0x28
 800dc9a:	edd5 7a0b 	vldr	s15, [r5, #44]	@ 0x2c
 800dc9e:	edd5 6a0e 	vldr	s13, [r5, #56]	@ 0x38
 800dca2:	68a9      	ldr	r1, [r5, #8]
 800dca4:	ed95 6a08 	vldr	s12, [r5, #32]
 800dca8:	602a      	str	r2, [r5, #0]
 800dcaa:	3301      	adds	r3, #1
 800dcac:	616b      	str	r3, [r5, #20]
 800dcae:	69ab      	ldr	r3, [r5, #24]
 800dcb0:	ee37 7a27 	vadd.f32	s14, s14, s15
 800dcb4:	3b01      	subs	r3, #1
 800dcb6:	edd5 7a0d 	vldr	s15, [r5, #52]	@ 0x34
 800dcba:	61ab      	str	r3, [r5, #24]
 800dcbc:	692b      	ldr	r3, [r5, #16]
 800dcbe:	ed85 7a0a 	vstr	s14, [r5, #40]	@ 0x28
 800dcc2:	ee77 7aa6 	vadd.f32	s15, s15, s13
 800dcc6:	edd5 6a07 	vldr	s13, [r5, #28]
 800dcca:	edc5 7a0d 	vstr	s15, [r5, #52]	@ 0x34
 800dcce:	440b      	add	r3, r1
 800dcd0:	68e9      	ldr	r1, [r5, #12]
 800dcd2:	612b      	str	r3, [r5, #16]
 800dcd4:	ee76 6a86 	vadd.f32	s13, s13, s12
 800dcd8:	428b      	cmp	r3, r1
 800dcda:	edc5 6a07 	vstr	s13, [r5, #28]
 800dcde:	db15      	blt.n	800dd0c <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x30c>
 800dce0:	ed95 6a09 	vldr	s12, [r5, #36]	@ 0x24
 800dce4:	ee76 6a26 	vadd.f32	s13, s12, s13
 800dce8:	3201      	adds	r2, #1
 800dcea:	edc5 6a07 	vstr	s13, [r5, #28]
 800dcee:	edd5 6a0c 	vldr	s13, [r5, #48]	@ 0x30
 800dcf2:	602a      	str	r2, [r5, #0]
 800dcf4:	ee36 7a87 	vadd.f32	s14, s13, s14
 800dcf8:	1a5b      	subs	r3, r3, r1
 800dcfa:	ed85 7a0a 	vstr	s14, [r5, #40]	@ 0x28
 800dcfe:	ed95 7a0f 	vldr	s14, [r5, #60]	@ 0x3c
 800dd02:	612b      	str	r3, [r5, #16]
 800dd04:	ee77 7a27 	vadd.f32	s15, s14, s15
 800dd08:	edc5 7a0d 	vstr	s15, [r5, #52]	@ 0x34
 800dd0c:	3f01      	subs	r7, #1
 800dd0e:	e757      	b.n	800dbc0 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x1c0>
 800dd10:	4299      	cmp	r1, r3
 800dd12:	dc13      	bgt.n	800dd3c <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x33c>
 800dd14:	429a      	cmp	r2, r3
 800dd16:	da14      	bge.n	800dd42 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x342>
 800dd18:	2502      	movs	r5, #2
 800dd1a:	2703      	movs	r7, #3
 800dd1c:	46a9      	mov	r9, r5
 800dd1e:	f04f 0800 	mov.w	r8, #0
 800dd22:	f04f 0a01 	mov.w	sl, #1
 800dd26:	e6ef      	b.n	800db08 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x108>
 800dd28:	2501      	movs	r5, #1
 800dd2a:	2700      	movs	r7, #0
 800dd2c:	46a9      	mov	r9, r5
 800dd2e:	46b8      	mov	r8, r7
 800dd30:	f04f 0a02 	mov.w	sl, #2
 800dd34:	e6e8      	b.n	800db08 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x108>
 800dd36:	2501      	movs	r5, #1
 800dd38:	2702      	movs	r7, #2
 800dd3a:	e6e1      	b.n	800db00 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x100>
 800dd3c:	2500      	movs	r5, #0
 800dd3e:	2701      	movs	r7, #1
 800dd40:	e7f4      	b.n	800dd2c <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x32c>
 800dd42:	2702      	movs	r7, #2
 800dd44:	2503      	movs	r5, #3
 800dd46:	f04f 0900 	mov.w	r9, #0
 800dd4a:	46b8      	mov	r8, r7
 800dd4c:	e7e9      	b.n	800dd22 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x322>
 800dd4e:	4613      	mov	r3, r2
 800dd50:	e728      	b.n	800dba4 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x1a4>
 800dd52:	bf00      	nop
 800dd54:	20002c54 	.word	0x20002c54
 800dd58:	fffd8f01 	.word	0xfffd8f01
 800dd5c:	00027100 	.word	0x00027100
 800dd60:	0004e1ff 	.word	0x0004e1ff
 800dd64:	0004e1fe 	.word	0x0004e1fe
 800dd68:	20002c5c 	.word	0x20002c5c
 800dd6c:	4613      	mov	r3, r2
 800dd6e:	992b      	ldr	r1, [sp, #172]	@ 0xac
 800dd70:	9111      	str	r1, [sp, #68]	@ 0x44
 800dd72:	e9dd 0a29 	ldrd	r0, sl, [sp, #164]	@ 0xa4
 800dd76:	e9dd 812c 	ldrd	r8, r1, [sp, #176]	@ 0xb0
 800dd7a:	9f2e      	ldr	r7, [sp, #184]	@ 0xb8
 800dd7c:	eddd 4a34 	vldr	s9, [sp, #208]	@ 0xd0
 800dd80:	ed9d 7a33 	vldr	s14, [sp, #204]	@ 0xcc
 800dd84:	ed9d 4a37 	vldr	s8, [sp, #220]	@ 0xdc
 800dd88:	eddd 7a36 	vldr	s15, [sp, #216]	@ 0xd8
 800dd8c:	eddd 3a31 	vldr	s7, [sp, #196]	@ 0xc4
 800dd90:	eddd 6a30 	vldr	s13, [sp, #192]	@ 0xc0
 800dd94:	ed9d 5a32 	vldr	s10, [sp, #200]	@ 0xc8
 800dd98:	eddd 5a35 	vldr	s11, [sp, #212]	@ 0xd4
 800dd9c:	ed9d 6a38 	vldr	s12, [sp, #224]	@ 0xe0
 800dda0:	469e      	mov	lr, r3
 800dda2:	469c      	mov	ip, r3
 800dda4:	f04f 0900 	mov.w	r9, #0
 800dda8:	f1bc 0f00 	cmp.w	ip, #0
 800ddac:	d147      	bne.n	800de3e <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x43e>
 800ddae:	eb03 0c07 	add.w	ip, r3, r7
 800ddb2:	1ad7      	subs	r7, r2, r3
 800ddb4:	f1b9 0f00 	cmp.w	r9, #0
 800ddb8:	d009      	beq.n	800ddce <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x3ce>
 800ddba:	e9cd c72e 	strd	ip, r7, [sp, #184]	@ 0xb8
 800ddbe:	9029      	str	r0, [sp, #164]	@ 0xa4
 800ddc0:	ed8d 7a33 	vstr	s14, [sp, #204]	@ 0xcc
 800ddc4:	edcd 7a36 	vstr	s15, [sp, #216]	@ 0xd8
 800ddc8:	edcd 6a30 	vstr	s13, [sp, #192]	@ 0xc0
 800ddcc:	912d      	str	r1, [sp, #180]	@ 0xb4
 800ddce:	991b      	ldr	r1, [sp, #108]	@ 0x6c
 800ddd0:	9111      	str	r1, [sp, #68]	@ 0x44
 800ddd2:	e9dd 0a19 	ldrd	r0, sl, [sp, #100]	@ 0x64
 800ddd6:	e9dd c71e 	ldrd	ip, r7, [sp, #120]	@ 0x78
 800ddda:	e9dd 911c 	ldrd	r9, r1, [sp, #112]	@ 0x70
 800ddde:	eddd 4a24 	vldr	s9, [sp, #144]	@ 0x90
 800dde2:	eddd 6a23 	vldr	s13, [sp, #140]	@ 0x8c
 800dde6:	ed9d 4a27 	vldr	s8, [sp, #156]	@ 0x9c
 800ddea:	ed9d 7a26 	vldr	s14, [sp, #152]	@ 0x98
 800ddee:	eddd 3a21 	vldr	s7, [sp, #132]	@ 0x84
 800ddf2:	eddd 7a20 	vldr	s15, [sp, #128]	@ 0x80
 800ddf6:	ed9d 5a22 	vldr	s10, [sp, #136]	@ 0x88
 800ddfa:	eddd 5a25 	vldr	s11, [sp, #148]	@ 0x94
 800ddfe:	ed9d 6a28 	vldr	s12, [sp, #160]	@ 0xa0
 800de02:	f04f 0800 	mov.w	r8, #0
 800de06:	f1be 0f00 	cmp.w	lr, #0
 800de0a:	d031      	beq.n	800de70 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x470>
 800de0c:	9e11      	ldr	r6, [sp, #68]	@ 0x44
 800de0e:	4431      	add	r1, r6
 800de10:	4549      	cmp	r1, r9
 800de12:	4450      	add	r0, sl
 800de14:	ee76 6aa4 	vadd.f32	s13, s13, s9
 800de18:	ee37 7a04 	vadd.f32	s14, s14, s8
 800de1c:	ee77 7aa3 	vadd.f32	s15, s15, s7
 800de20:	db08      	blt.n	800de34 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x434>
 800de22:	ee77 7a85 	vadd.f32	s15, s15, s10
 800de26:	ee76 6aa5 	vadd.f32	s13, s13, s11
 800de2a:	ee37 7a06 	vadd.f32	s14, s14, s12
 800de2e:	3001      	adds	r0, #1
 800de30:	eba1 0109 	sub.w	r1, r1, r9
 800de34:	f10e 3eff 	add.w	lr, lr, #4294967295
 800de38:	f04f 0801 	mov.w	r8, #1
 800de3c:	e7e3      	b.n	800de06 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x406>
 800de3e:	9e11      	ldr	r6, [sp, #68]	@ 0x44
 800de40:	4431      	add	r1, r6
 800de42:	4541      	cmp	r1, r8
 800de44:	4450      	add	r0, sl
 800de46:	ee37 7a24 	vadd.f32	s14, s14, s9
 800de4a:	ee77 7a84 	vadd.f32	s15, s15, s8
 800de4e:	ee76 6aa3 	vadd.f32	s13, s13, s7
 800de52:	db08      	blt.n	800de66 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x466>
 800de54:	ee76 6a85 	vadd.f32	s13, s13, s10
 800de58:	ee37 7a25 	vadd.f32	s14, s14, s11
 800de5c:	ee77 7a86 	vadd.f32	s15, s15, s12
 800de60:	3001      	adds	r0, #1
 800de62:	eba1 0108 	sub.w	r1, r1, r8
 800de66:	f10c 3cff 	add.w	ip, ip, #4294967295
 800de6a:	f04f 0901 	mov.w	r9, #1
 800de6e:	e79b      	b.n	800dda8 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x3a8>
 800de70:	449c      	add	ip, r3
 800de72:	1aff      	subs	r7, r7, r3
 800de74:	f1b8 0f00 	cmp.w	r8, #0
 800de78:	d009      	beq.n	800de8e <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x48e>
 800de7a:	e9cd c71e 	strd	ip, r7, [sp, #120]	@ 0x78
 800de7e:	9019      	str	r0, [sp, #100]	@ 0x64
 800de80:	edcd 6a23 	vstr	s13, [sp, #140]	@ 0x8c
 800de84:	ed8d 7a26 	vstr	s14, [sp, #152]	@ 0x98
 800de88:	edcd 7a20 	vstr	s15, [sp, #128]	@ 0x80
 800de8c:	911d      	str	r1, [sp, #116]	@ 0x74
 800de8e:	1ad2      	subs	r2, r2, r3
 800de90:	e68b      	b.n	800dbaa <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x1aa>
 800de92:	9b0e      	ldr	r3, [sp, #56]	@ 0x38
 800de94:	9a3f      	ldr	r2, [sp, #252]	@ 0xfc
 800de96:	2b00      	cmp	r3, #0
 800de98:	f000 80d1 	beq.w	800e03e <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x63e>
 800de9c:	ad19      	add	r5, sp, #100	@ 0x64
 800de9e:	ac39      	add	r4, sp, #228	@ 0xe4
 800dea0:	9b64      	ldr	r3, [sp, #400]	@ 0x190
 800dea2:	f8bb 0006 	ldrh.w	r0, [fp, #6]
 800dea6:	f9b3 3002 	ldrsh.w	r3, [r3, #2]
 800deaa:	930c      	str	r3, [sp, #48]	@ 0x30
 800deac:	990c      	ldr	r1, [sp, #48]	@ 0x30
 800deae:	6963      	ldr	r3, [r4, #20]
 800deb0:	440b      	add	r3, r1
 800deb2:	f9bb 1002 	ldrsh.w	r1, [fp, #2]
 800deb6:	4408      	add	r0, r1
 800deb8:	b200      	sxth	r0, r0
 800deba:	4283      	cmp	r3, r0
 800debc:	900d      	str	r0, [sp, #52]	@ 0x34
 800debe:	f280 80c1 	bge.w	800e044 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x644>
 800dec2:	428b      	cmp	r3, r1
 800dec4:	da08      	bge.n	800ded8 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x4d8>
 800dec6:	2a00      	cmp	r2, #0
 800dec8:	dd06      	ble.n	800ded8 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x4d8>
 800deca:	1acb      	subs	r3, r1, r3
 800decc:	429a      	cmp	r2, r3
 800dece:	f2c0 80bb 	blt.w	800e048 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x648>
 800ded2:	2b00      	cmp	r3, #0
 800ded4:	f300 80b9 	bgt.w	800e04a <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x64a>
 800ded8:	6967      	ldr	r7, [r4, #20]
 800deda:	9b0c      	ldr	r3, [sp, #48]	@ 0x30
 800dedc:	443b      	add	r3, r7
 800dede:	461f      	mov	r7, r3
 800dee0:	9b0d      	ldr	r3, [sp, #52]	@ 0x34
 800dee2:	1bdf      	subs	r7, r3, r7
 800dee4:	4297      	cmp	r7, r2
 800dee6:	bfa8      	it	ge
 800dee8:	4617      	movge	r7, r2
 800deea:	f10d 0850 	add.w	r8, sp, #80	@ 0x50
 800deee:	2f00      	cmp	r7, #0
 800def0:	f340 813c 	ble.w	800e16c <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x76c>
 800def4:	9b64      	ldr	r3, [sp, #400]	@ 0x190
 800def6:	6829      	ldr	r1, [r5, #0]
 800def8:	f9b3 2000 	ldrsh.w	r2, [r3]
 800defc:	f9bb 3000 	ldrsh.w	r3, [fp]
 800df00:	6820      	ldr	r0, [r4, #0]
 800df02:	4411      	add	r1, r2
 800df04:	4299      	cmp	r1, r3
 800df06:	dd1a      	ble.n	800df3e <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x53e>
 800df08:	f8bb 1004 	ldrh.w	r1, [fp, #4]
 800df0c:	440b      	add	r3, r1
 800df0e:	4402      	add	r2, r0
 800df10:	b21b      	sxth	r3, r3
 800df12:	429a      	cmp	r2, r3
 800df14:	dc13      	bgt.n	800df3e <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x53e>
 800df16:	9b09      	ldr	r3, [sp, #36]	@ 0x24
 800df18:	9a10      	ldr	r2, [sp, #64]	@ 0x40
 800df1a:	681b      	ldr	r3, [r3, #0]
 800df1c:	9206      	str	r2, [sp, #24]
 800df1e:	9a0b      	ldr	r2, [sp, #44]	@ 0x2c
 800df20:	9205      	str	r2, [sp, #20]
 800df22:	9a0a      	ldr	r2, [sp, #40]	@ 0x28
 800df24:	9500      	str	r5, [sp, #0]
 800df26:	e9cd b203 	strd	fp, r2, [sp, #12]
 800df2a:	9a64      	ldr	r2, [sp, #400]	@ 0x190
 800df2c:	9809      	ldr	r0, [sp, #36]	@ 0x24
 800df2e:	e9cd 8201 	strd	r8, r2, [sp, #4]
 800df32:	a912      	add	r1, sp, #72	@ 0x48
 800df34:	f8d3 9048 	ldr.w	r9, [r3, #72]	@ 0x48
 800df38:	aa49      	add	r2, sp, #292	@ 0x124
 800df3a:	4623      	mov	r3, r4
 800df3c:	47c8      	blx	r9
 800df3e:	e9d4 2300 	ldrd	r2, r3, [r4]
 800df42:	441a      	add	r2, r3
 800df44:	6963      	ldr	r3, [r4, #20]
 800df46:	ed94 7a0a 	vldr	s14, [r4, #40]	@ 0x28
 800df4a:	edd4 7a0b 	vldr	s15, [r4, #44]	@ 0x2c
 800df4e:	edd4 6a0e 	vldr	s13, [r4, #56]	@ 0x38
 800df52:	68a1      	ldr	r1, [r4, #8]
 800df54:	ed94 6a08 	vldr	s12, [r4, #32]
 800df58:	6022      	str	r2, [r4, #0]
 800df5a:	3301      	adds	r3, #1
 800df5c:	6163      	str	r3, [r4, #20]
 800df5e:	69a3      	ldr	r3, [r4, #24]
 800df60:	ee37 7a27 	vadd.f32	s14, s14, s15
 800df64:	3b01      	subs	r3, #1
 800df66:	edd4 7a0d 	vldr	s15, [r4, #52]	@ 0x34
 800df6a:	61a3      	str	r3, [r4, #24]
 800df6c:	6923      	ldr	r3, [r4, #16]
 800df6e:	ed84 7a0a 	vstr	s14, [r4, #40]	@ 0x28
 800df72:	ee77 7aa6 	vadd.f32	s15, s15, s13
 800df76:	edd4 6a07 	vldr	s13, [r4, #28]
 800df7a:	edc4 7a0d 	vstr	s15, [r4, #52]	@ 0x34
 800df7e:	440b      	add	r3, r1
 800df80:	68e1      	ldr	r1, [r4, #12]
 800df82:	6123      	str	r3, [r4, #16]
 800df84:	ee76 6a86 	vadd.f32	s13, s13, s12
 800df88:	428b      	cmp	r3, r1
 800df8a:	edc4 6a07 	vstr	s13, [r4, #28]
 800df8e:	db15      	blt.n	800dfbc <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x5bc>
 800df90:	ed94 6a09 	vldr	s12, [r4, #36]	@ 0x24
 800df94:	ee76 6a26 	vadd.f32	s13, s12, s13
 800df98:	3201      	adds	r2, #1
 800df9a:	edc4 6a07 	vstr	s13, [r4, #28]
 800df9e:	edd4 6a0c 	vldr	s13, [r4, #48]	@ 0x30
 800dfa2:	6022      	str	r2, [r4, #0]
 800dfa4:	ee36 7a87 	vadd.f32	s14, s13, s14
 800dfa8:	1a5b      	subs	r3, r3, r1
 800dfaa:	ed84 7a0a 	vstr	s14, [r4, #40]	@ 0x28
 800dfae:	ed94 7a0f 	vldr	s14, [r4, #60]	@ 0x3c
 800dfb2:	6123      	str	r3, [r4, #16]
 800dfb4:	ee77 7a27 	vadd.f32	s15, s14, s15
 800dfb8:	edc4 7a0d 	vstr	s15, [r4, #52]	@ 0x34
 800dfbc:	e9d5 2300 	ldrd	r2, r3, [r5]
 800dfc0:	441a      	add	r2, r3
 800dfc2:	696b      	ldr	r3, [r5, #20]
 800dfc4:	ed95 7a0a 	vldr	s14, [r5, #40]	@ 0x28
 800dfc8:	edd5 7a0b 	vldr	s15, [r5, #44]	@ 0x2c
 800dfcc:	edd5 6a0e 	vldr	s13, [r5, #56]	@ 0x38
 800dfd0:	68a9      	ldr	r1, [r5, #8]
 800dfd2:	ed95 6a08 	vldr	s12, [r5, #32]
 800dfd6:	602a      	str	r2, [r5, #0]
 800dfd8:	3301      	adds	r3, #1
 800dfda:	616b      	str	r3, [r5, #20]
 800dfdc:	69ab      	ldr	r3, [r5, #24]
 800dfde:	ee37 7a27 	vadd.f32	s14, s14, s15
 800dfe2:	3b01      	subs	r3, #1
 800dfe4:	edd5 7a0d 	vldr	s15, [r5, #52]	@ 0x34
 800dfe8:	61ab      	str	r3, [r5, #24]
 800dfea:	692b      	ldr	r3, [r5, #16]
 800dfec:	ed85 7a0a 	vstr	s14, [r5, #40]	@ 0x28
 800dff0:	ee77 7aa6 	vadd.f32	s15, s15, s13
 800dff4:	edd5 6a07 	vldr	s13, [r5, #28]
 800dff8:	edc5 7a0d 	vstr	s15, [r5, #52]	@ 0x34
 800dffc:	440b      	add	r3, r1
 800dffe:	68e9      	ldr	r1, [r5, #12]
 800e000:	612b      	str	r3, [r5, #16]
 800e002:	ee76 6a86 	vadd.f32	s13, s13, s12
 800e006:	428b      	cmp	r3, r1
 800e008:	edc5 6a07 	vstr	s13, [r5, #28]
 800e00c:	db15      	blt.n	800e03a <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x63a>
 800e00e:	ed95 6a09 	vldr	s12, [r5, #36]	@ 0x24
 800e012:	ee76 6a26 	vadd.f32	s13, s12, s13
 800e016:	3201      	adds	r2, #1
 800e018:	edc5 6a07 	vstr	s13, [r5, #28]
 800e01c:	edd5 6a0c 	vldr	s13, [r5, #48]	@ 0x30
 800e020:	602a      	str	r2, [r5, #0]
 800e022:	ee36 7a87 	vadd.f32	s14, s13, s14
 800e026:	1a5b      	subs	r3, r3, r1
 800e028:	ed85 7a0a 	vstr	s14, [r5, #40]	@ 0x28
 800e02c:	ed95 7a0f 	vldr	s14, [r5, #60]	@ 0x3c
 800e030:	612b      	str	r3, [r5, #16]
 800e032:	ee77 7a27 	vadd.f32	s15, s14, s15
 800e036:	edc5 7a0d 	vstr	s15, [r5, #52]	@ 0x34
 800e03a:	3f01      	subs	r7, #1
 800e03c:	e757      	b.n	800deee <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x4ee>
 800e03e:	ad39      	add	r5, sp, #228	@ 0xe4
 800e040:	ac19      	add	r4, sp, #100	@ 0x64
 800e042:	e72d      	b.n	800dea0 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x4a0>
 800e044:	4613      	mov	r3, r2
 800e046:	e744      	b.n	800ded2 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x4d2>
 800e048:	4613      	mov	r3, r2
 800e04a:	e9dd 0a39 	ldrd	r0, sl, [sp, #228]	@ 0xe4
 800e04e:	9e3b      	ldr	r6, [sp, #236]	@ 0xec
 800e050:	f8dd c0f8 	ldr.w	ip, [sp, #248]	@ 0xf8
 800e054:	ed9d 7a43 	vldr	s14, [sp, #268]	@ 0x10c
 800e058:	eddd 4a44 	vldr	s9, [sp, #272]	@ 0x110
 800e05c:	eddd 7a46 	vldr	s15, [sp, #280]	@ 0x118
 800e060:	ed9d 4a47 	vldr	s8, [sp, #284]	@ 0x11c
 800e064:	eddd 6a40 	vldr	s13, [sp, #256]	@ 0x100
 800e068:	eddd 3a41 	vldr	s7, [sp, #260]	@ 0x104
 800e06c:	993d      	ldr	r1, [sp, #244]	@ 0xf4
 800e06e:	f8dd 80f0 	ldr.w	r8, [sp, #240]	@ 0xf0
 800e072:	ed9d 5a42 	vldr	s10, [sp, #264]	@ 0x108
 800e076:	eddd 5a45 	vldr	s11, [sp, #276]	@ 0x114
 800e07a:	ed9d 6a48 	vldr	s12, [sp, #288]	@ 0x120
 800e07e:	960e      	str	r6, [sp, #56]	@ 0x38
 800e080:	469e      	mov	lr, r3
 800e082:	461f      	mov	r7, r3
 800e084:	f04f 0900 	mov.w	r9, #0
 800e088:	2f00      	cmp	r7, #0
 800e08a:	d146      	bne.n	800e11a <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x71a>
 800e08c:	449c      	add	ip, r3
 800e08e:	1ad7      	subs	r7, r2, r3
 800e090:	f1b9 0f00 	cmp.w	r9, #0
 800e094:	d009      	beq.n	800e0aa <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x6aa>
 800e096:	e9cd c73e 	strd	ip, r7, [sp, #248]	@ 0xf8
 800e09a:	9039      	str	r0, [sp, #228]	@ 0xe4
 800e09c:	913d      	str	r1, [sp, #244]	@ 0xf4
 800e09e:	edcd 6a40 	vstr	s13, [sp, #256]	@ 0x100
 800e0a2:	ed8d 7a43 	vstr	s14, [sp, #268]	@ 0x10c
 800e0a6:	edcd 7a46 	vstr	s15, [sp, #280]	@ 0x118
 800e0aa:	991b      	ldr	r1, [sp, #108]	@ 0x6c
 800e0ac:	910e      	str	r1, [sp, #56]	@ 0x38
 800e0ae:	e9dd 0a19 	ldrd	r0, sl, [sp, #100]	@ 0x64
 800e0b2:	e9dd c71e 	ldrd	ip, r7, [sp, #120]	@ 0x78
 800e0b6:	e9dd 911c 	ldrd	r9, r1, [sp, #112]	@ 0x70
 800e0ba:	eddd 4a24 	vldr	s9, [sp, #144]	@ 0x90
 800e0be:	eddd 6a23 	vldr	s13, [sp, #140]	@ 0x8c
 800e0c2:	ed9d 4a27 	vldr	s8, [sp, #156]	@ 0x9c
 800e0c6:	ed9d 7a26 	vldr	s14, [sp, #152]	@ 0x98
 800e0ca:	eddd 3a21 	vldr	s7, [sp, #132]	@ 0x84
 800e0ce:	eddd 7a20 	vldr	s15, [sp, #128]	@ 0x80
 800e0d2:	ed9d 5a22 	vldr	s10, [sp, #136]	@ 0x88
 800e0d6:	eddd 5a25 	vldr	s11, [sp, #148]	@ 0x94
 800e0da:	ed9d 6a28 	vldr	s12, [sp, #160]	@ 0xa0
 800e0de:	f04f 0800 	mov.w	r8, #0
 800e0e2:	f1be 0f00 	cmp.w	lr, #0
 800e0e6:	d030      	beq.n	800e14a <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x74a>
 800e0e8:	9e0e      	ldr	r6, [sp, #56]	@ 0x38
 800e0ea:	4431      	add	r1, r6
 800e0ec:	4549      	cmp	r1, r9
 800e0ee:	4450      	add	r0, sl
 800e0f0:	ee76 6aa4 	vadd.f32	s13, s13, s9
 800e0f4:	ee37 7a04 	vadd.f32	s14, s14, s8
 800e0f8:	ee77 7aa3 	vadd.f32	s15, s15, s7
 800e0fc:	db08      	blt.n	800e110 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x710>
 800e0fe:	ee77 7a85 	vadd.f32	s15, s15, s10
 800e102:	ee76 6aa5 	vadd.f32	s13, s13, s11
 800e106:	ee37 7a06 	vadd.f32	s14, s14, s12
 800e10a:	3001      	adds	r0, #1
 800e10c:	eba1 0109 	sub.w	r1, r1, r9
 800e110:	f10e 3eff 	add.w	lr, lr, #4294967295
 800e114:	f04f 0801 	mov.w	r8, #1
 800e118:	e7e3      	b.n	800e0e2 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x6e2>
 800e11a:	9e0e      	ldr	r6, [sp, #56]	@ 0x38
 800e11c:	4431      	add	r1, r6
 800e11e:	4541      	cmp	r1, r8
 800e120:	4450      	add	r0, sl
 800e122:	ee37 7a24 	vadd.f32	s14, s14, s9
 800e126:	ee77 7a84 	vadd.f32	s15, s15, s8
 800e12a:	ee76 6aa3 	vadd.f32	s13, s13, s7
 800e12e:	db08      	blt.n	800e142 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x742>
 800e130:	ee76 6a85 	vadd.f32	s13, s13, s10
 800e134:	ee37 7a25 	vadd.f32	s14, s14, s11
 800e138:	ee77 7a86 	vadd.f32	s15, s15, s12
 800e13c:	3001      	adds	r0, #1
 800e13e:	eba1 0108 	sub.w	r1, r1, r8
 800e142:	3f01      	subs	r7, #1
 800e144:	f04f 0901 	mov.w	r9, #1
 800e148:	e79e      	b.n	800e088 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x688>
 800e14a:	449c      	add	ip, r3
 800e14c:	1aff      	subs	r7, r7, r3
 800e14e:	f1b8 0f00 	cmp.w	r8, #0
 800e152:	d009      	beq.n	800e168 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x768>
 800e154:	e9cd c71e 	strd	ip, r7, [sp, #120]	@ 0x78
 800e158:	9019      	str	r0, [sp, #100]	@ 0x64
 800e15a:	edcd 6a23 	vstr	s13, [sp, #140]	@ 0x8c
 800e15e:	ed8d 7a26 	vstr	s14, [sp, #152]	@ 0x98
 800e162:	edcd 7a20 	vstr	s15, [sp, #128]	@ 0x80
 800e166:	911d      	str	r1, [sp, #116]	@ 0x74
 800e168:	1ad2      	subs	r2, r2, r3
 800e16a:	e6b5      	b.n	800ded8 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x4d8>
 800e16c:	9b0f      	ldr	r3, [sp, #60]	@ 0x3c
 800e16e:	681b      	ldr	r3, [r3, #0]
 800e170:	b923      	cbnz	r3, 800e17c <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x77c>
 800e172:	4b04      	ldr	r3, [pc, #16]	@ (800e184 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x784>)
 800e174:	6818      	ldr	r0, [r3, #0]
 800e176:	6803      	ldr	r3, [r0, #0]
 800e178:	6adb      	ldr	r3, [r3, #44]	@ 0x2c
 800e17a:	4798      	blx	r3
 800e17c:	b05b      	add	sp, #364	@ 0x16c
 800e17e:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 800e182:	bf00      	nop
 800e184:	20002c5c 	.word	0x20002c5c

0800e188 <_ZN8touchgfx3LCD22WideTextInternalStructC1ERNS_12TextProviderEtthPKNS_4FontEsNS_14WideTextActionE>:
 800e188:	b570      	push	{r4, r5, r6, lr}
 800e18a:	4604      	mov	r4, r0
 800e18c:	f89d 601c 	ldrb.w	r6, [sp, #28]
 800e190:	9805      	ldr	r0, [sp, #20]
 800e192:	6061      	str	r1, [r4, #4]
 800e194:	2500      	movs	r5, #0
 800e196:	f89d 1010 	ldrb.w	r1, [sp, #16]
 800e19a:	8263      	strh	r3, [r4, #18]
 800e19c:	f9bd 3018 	ldrsh.w	r3, [sp, #24]
 800e1a0:	8025      	strh	r5, [r4, #0]
 800e1a2:	7221      	strb	r1, [r4, #8]
 800e1a4:	7266      	strb	r6, [r4, #9]
 800e1a6:	60e0      	str	r0, [r4, #12]
 800e1a8:	8222      	strh	r2, [r4, #16]
 800e1aa:	82a3      	strh	r3, [r4, #20]
 800e1ac:	82e5      	strh	r5, [r4, #22]
 800e1ae:	8325      	strh	r5, [r4, #24]
 800e1b0:	8365      	strh	r5, [r4, #26]
 800e1b2:	83a5      	strh	r5, [r4, #28]
 800e1b4:	83e5      	strh	r5, [r4, #30]
 800e1b6:	8425      	strh	r5, [r4, #32]
 800e1b8:	f884 5022 	strb.w	r5, [r4, #34]	@ 0x22
 800e1bc:	b32e      	cbz	r6, 800e20a <_ZN8touchgfx3LCD22WideTextInternalStructC1ERNS_12TextProviderEtthPKNS_4FontEsNS_14WideTextActionE+0x82>
 800e1be:	6803      	ldr	r3, [r0, #0]
 800e1c0:	695b      	ldr	r3, [r3, #20]
 800e1c2:	4798      	blx	r3
 800e1c4:	4606      	mov	r6, r0
 800e1c6:	b300      	cbz	r0, 800e20a <_ZN8touchgfx3LCD22WideTextInternalStructC1ERNS_12TextProviderEtthPKNS_4FontEsNS_14WideTextActionE+0x82>
 800e1c8:	68e0      	ldr	r0, [r4, #12]
 800e1ca:	6803      	ldr	r3, [r0, #0]
 800e1cc:	4631      	mov	r1, r6
 800e1ce:	68db      	ldr	r3, [r3, #12]
 800e1d0:	4798      	blx	r3
 800e1d2:	4605      	mov	r5, r0
 800e1d4:	b1c8      	cbz	r0, 800e20a <_ZN8touchgfx3LCD22WideTextInternalStructC1ERNS_12TextProviderEtthPKNS_4FontEsNS_14WideTextActionE+0x82>
 800e1d6:	7b43      	ldrb	r3, [r0, #13]
 800e1d8:	7a82      	ldrb	r2, [r0, #10]
 800e1da:	005b      	lsls	r3, r3, #1
 800e1dc:	f403 7380 	and.w	r3, r3, #256	@ 0x100
 800e1e0:	4313      	orrs	r3, r2
 800e1e2:	8423      	strh	r3, [r4, #32]
 800e1e4:	7a63      	ldrb	r3, [r4, #9]
 800e1e6:	2b06      	cmp	r3, #6
 800e1e8:	d10f      	bne.n	800e20a <_ZN8touchgfx3LCD22WideTextInternalStructC1ERNS_12TextProviderEtthPKNS_4FontEsNS_14WideTextActionE+0x82>
 800e1ea:	68e0      	ldr	r0, [r4, #12]
 800e1ec:	6803      	ldr	r3, [r0, #0]
 800e1ee:	462a      	mov	r2, r5
 800e1f0:	6c5b      	ldr	r3, [r3, #68]	@ 0x44
 800e1f2:	4631      	mov	r1, r6
 800e1f4:	4798      	blx	r3
 800e1f6:	7b6b      	ldrb	r3, [r5, #13]
 800e1f8:	005b      	lsls	r3, r3, #1
 800e1fa:	f403 7280 	and.w	r2, r3, #256	@ 0x100
 800e1fe:	7aab      	ldrb	r3, [r5, #10]
 800e200:	4313      	orrs	r3, r2
 800e202:	4418      	add	r0, r3
 800e204:	8c23      	ldrh	r3, [r4, #32]
 800e206:	4418      	add	r0, r3
 800e208:	8420      	strh	r0, [r4, #32]
 800e20a:	4620      	mov	r0, r4
 800e20c:	bd70      	pop	{r4, r5, r6, pc}

0800e20e <_ZN8touchgfx3LCD11stringWidthERNS_12TextProviderERKNS_4FontEih>:
 800e20e:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 800e212:	2400      	movs	r4, #0
 800e214:	b085      	sub	sp, #20
 800e216:	4681      	mov	r9, r0
 800e218:	4688      	mov	r8, r1
 800e21a:	4692      	mov	sl, r2
 800e21c:	469b      	mov	fp, r3
 800e21e:	4627      	mov	r7, r4
 800e220:	4625      	mov	r5, r4
 800e222:	4626      	mov	r6, r4
 800e224:	4554      	cmp	r4, sl
 800e226:	da2a      	bge.n	800e27e <_ZN8touchgfx3LCD11stringWidthERNS_12TextProviderERKNS_4FontEih+0x70>
 800e228:	2300      	movs	r3, #0
 800e22a:	9303      	str	r3, [sp, #12]
 800e22c:	f64f 63ff 	movw	r3, #65279	@ 0xfeff
 800e230:	429d      	cmp	r5, r3
 800e232:	d004      	beq.n	800e23e <_ZN8touchgfx3LCD11stringWidthERNS_12TextProviderERKNS_4FontEih+0x30>
 800e234:	f242 030b 	movw	r3, #8203	@ 0x200b
 800e238:	429d      	cmp	r5, r3
 800e23a:	bf18      	it	ne
 800e23c:	462f      	movne	r7, r5
 800e23e:	ab03      	add	r3, sp, #12
 800e240:	4642      	mov	r2, r8
 800e242:	4659      	mov	r1, fp
 800e244:	4648      	mov	r0, r9
 800e246:	f002 ffb3 	bl	80111b0 <_ZN8touchgfx12TextProvider15getNextLigatureEhPKNS_4FontERPKNS_9GlyphNodeE>
 800e24a:	4605      	mov	r5, r0
 800e24c:	b1b8      	cbz	r0, 800e27e <_ZN8touchgfx3LCD11stringWidthERNS_12TextProviderERKNS_4FontEih+0x70>
 800e24e:	280a      	cmp	r0, #10
 800e250:	d015      	beq.n	800e27e <_ZN8touchgfx3LCD11stringWidthERNS_12TextProviderERKNS_4FontEih+0x70>
 800e252:	9a03      	ldr	r2, [sp, #12]
 800e254:	b18a      	cbz	r2, 800e27a <_ZN8touchgfx3LCD11stringWidthERNS_12TextProviderERKNS_4FontEih+0x6c>
 800e256:	7b50      	ldrb	r0, [r2, #13]
 800e258:	7a93      	ldrb	r3, [r2, #10]
 800e25a:	8895      	ldrh	r5, [r2, #4]
 800e25c:	0040      	lsls	r0, r0, #1
 800e25e:	f400 7080 	and.w	r0, r0, #256	@ 0x100
 800e262:	4303      	orrs	r3, r0
 800e264:	9301      	str	r3, [sp, #4]
 800e266:	f8d8 3000 	ldr.w	r3, [r8]
 800e26a:	4639      	mov	r1, r7
 800e26c:	6c5b      	ldr	r3, [r3, #68]	@ 0x44
 800e26e:	4640      	mov	r0, r8
 800e270:	4798      	blx	r3
 800e272:	9b01      	ldr	r3, [sp, #4]
 800e274:	4418      	add	r0, r3
 800e276:	4406      	add	r6, r0
 800e278:	b2b6      	uxth	r6, r6
 800e27a:	3401      	adds	r4, #1
 800e27c:	e7d2      	b.n	800e224 <_ZN8touchgfx3LCD11stringWidthERNS_12TextProviderERKNS_4FontEih+0x16>
 800e27e:	4630      	mov	r0, r6
 800e280:	b005      	add	sp, #20
 800e282:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}

0800e286 <_ZN8touchgfx3LCD10rotateRectERNS_4RectERKS1_NS_12TextRotationE>:
 800e286:	2a02      	cmp	r2, #2
 800e288:	b530      	push	{r4, r5, lr}
 800e28a:	d011      	beq.n	800e2b0 <_ZN8touchgfx3LCD10rotateRectERNS_4RectERKS1_NS_12TextRotationE+0x2a>
 800e28c:	2a03      	cmp	r2, #3
 800e28e:	d01c      	beq.n	800e2ca <_ZN8touchgfx3LCD10rotateRectERNS_4RectERKS1_NS_12TextRotationE+0x44>
 800e290:	2a01      	cmp	r2, #1
 800e292:	d10c      	bne.n	800e2ae <_ZN8touchgfx3LCD10rotateRectERNS_4RectERKS1_NS_12TextRotationE+0x28>
 800e294:	888b      	ldrh	r3, [r1, #4]
 800e296:	8801      	ldrh	r1, [r0, #0]
 800e298:	f9b0 2004 	ldrsh.w	r2, [r0, #4]
 800e29c:	8844      	ldrh	r4, [r0, #2]
 800e29e:	8004      	strh	r4, [r0, #0]
 800e2a0:	1a5b      	subs	r3, r3, r1
 800e2a2:	1a9b      	subs	r3, r3, r2
 800e2a4:	f9b0 1006 	ldrsh.w	r1, [r0, #6]
 800e2a8:	8043      	strh	r3, [r0, #2]
 800e2aa:	8081      	strh	r1, [r0, #4]
 800e2ac:	80c2      	strh	r2, [r0, #6]
 800e2ae:	bd30      	pop	{r4, r5, pc}
 800e2b0:	88cb      	ldrh	r3, [r1, #6]
 800e2b2:	8842      	ldrh	r2, [r0, #2]
 800e2b4:	1a9b      	subs	r3, r3, r2
 800e2b6:	88c2      	ldrh	r2, [r0, #6]
 800e2b8:	1a9b      	subs	r3, r3, r2
 800e2ba:	888a      	ldrh	r2, [r1, #4]
 800e2bc:	8801      	ldrh	r1, [r0, #0]
 800e2be:	8043      	strh	r3, [r0, #2]
 800e2c0:	1a52      	subs	r2, r2, r1
 800e2c2:	8881      	ldrh	r1, [r0, #4]
 800e2c4:	1a52      	subs	r2, r2, r1
 800e2c6:	8002      	strh	r2, [r0, #0]
 800e2c8:	e7f1      	b.n	800e2ae <_ZN8touchgfx3LCD10rotateRectERNS_4RectERKS1_NS_12TextRotationE+0x28>
 800e2ca:	88cb      	ldrh	r3, [r1, #6]
 800e2cc:	8841      	ldrh	r1, [r0, #2]
 800e2ce:	f9b0 2006 	ldrsh.w	r2, [r0, #6]
 800e2d2:	f9b0 5000 	ldrsh.w	r5, [r0]
 800e2d6:	f9b0 4004 	ldrsh.w	r4, [r0, #4]
 800e2da:	8045      	strh	r5, [r0, #2]
 800e2dc:	1a5b      	subs	r3, r3, r1
 800e2de:	1a9b      	subs	r3, r3, r2
 800e2e0:	8003      	strh	r3, [r0, #0]
 800e2e2:	8082      	strh	r2, [r0, #4]
 800e2e4:	80c4      	strh	r4, [r0, #6]
 800e2e6:	e7e2      	b.n	800e2ae <_ZN8touchgfx3LCD10rotateRectERNS_4RectERKS1_NS_12TextRotationE+0x28>

0800e2e8 <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEssRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib>:
 800e2e8:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 800e2ec:	b09f      	sub	sp, #124	@ 0x7c
 800e2ee:	920f      	str	r2, [sp, #60]	@ 0x3c
 800e2f0:	9312      	str	r3, [sp, #72]	@ 0x48
 800e2f2:	9a29      	ldr	r2, [sp, #164]	@ 0xa4
 800e2f4:	9b29      	ldr	r3, [sp, #164]	@ 0xa4
 800e2f6:	9d2a      	ldr	r5, [sp, #168]	@ 0xa8
 800e2f8:	8812      	ldrh	r2, [r2, #0]
 800e2fa:	889b      	ldrh	r3, [r3, #4]
 800e2fc:	900e      	str	r0, [sp, #56]	@ 0x38
 800e2fe:	4413      	add	r3, r2
 800e300:	6828      	ldr	r0, [r5, #0]
 800e302:	9117      	str	r1, [sp, #92]	@ 0x5c
 800e304:	b21b      	sxth	r3, r3
 800e306:	9311      	str	r3, [sp, #68]	@ 0x44
 800e308:	6803      	ldr	r3, [r0, #0]
 800e30a:	f89d b0ac 	ldrb.w	fp, [sp, #172]	@ 0xac
 800e30e:	6d5b      	ldr	r3, [r3, #84]	@ 0x54
 800e310:	f89d 40b8 	ldrb.w	r4, [sp, #184]	@ 0xb8
 800e314:	4798      	blx	r3
 800e316:	682b      	ldr	r3, [r5, #0]
 800e318:	9013      	str	r0, [sp, #76]	@ 0x4c
 800e31a:	7b1a      	ldrb	r2, [r3, #12]
 800e31c:	7adb      	ldrb	r3, [r3, #11]
 800e31e:	9215      	str	r2, [sp, #84]	@ 0x54
 800e320:	9316      	str	r3, [sp, #88]	@ 0x58
 800e322:	f9bd 60a0 	ldrsh.w	r6, [sp, #160]	@ 0xa0
 800e326:	2c00      	cmp	r4, #0
 800e328:	d067      	beq.n	800e3fa <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEssRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0x112>
 800e32a:	7c2b      	ldrb	r3, [r5, #16]
 800e32c:	9a2d      	ldr	r2, [sp, #180]	@ 0xb4
 800e32e:	2b06      	cmp	r3, #6
 800e330:	bf14      	ite	ne
 800e332:	2301      	movne	r3, #1
 800e334:	2302      	moveq	r3, #2
 800e336:	4413      	add	r3, r2
 800e338:	f04f 0900 	mov.w	r9, #0
 800e33c:	9310      	str	r3, [sp, #64]	@ 0x40
 800e33e:	f8cd 9034 	str.w	r9, [sp, #52]	@ 0x34
 800e342:	464c      	mov	r4, r9
 800e344:	f8cd 9030 	str.w	r9, [sp, #48]	@ 0x30
 800e348:	9b0d      	ldr	r3, [sp, #52]	@ 0x34
 800e34a:	9a10      	ldr	r2, [sp, #64]	@ 0x40
 800e34c:	4293      	cmp	r3, r2
 800e34e:	f280 808b 	bge.w	800e468 <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEssRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0x180>
 800e352:	2300      	movs	r3, #0
 800e354:	e9cd 331c 	strd	r3, r3, [sp, #112]	@ 0x70
 800e358:	f88d 306f 	strb.w	r3, [sp, #111]	@ 0x6f
 800e35c:	f64f 63ff 	movw	r3, #65279	@ 0xfeff
 800e360:	429c      	cmp	r4, r3
 800e362:	d006      	beq.n	800e372 <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEssRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0x8a>
 800e364:	9b0c      	ldr	r3, [sp, #48]	@ 0x30
 800e366:	f242 020b 	movw	r2, #8203	@ 0x200b
 800e36a:	4294      	cmp	r4, r2
 800e36c:	bf18      	it	ne
 800e36e:	4623      	movne	r3, r4
 800e370:	930c      	str	r3, [sp, #48]	@ 0x30
 800e372:	9b0d      	ldr	r3, [sp, #52]	@ 0x34
 800e374:	992d      	ldr	r1, [sp, #180]	@ 0xb4
 800e376:	682a      	ldr	r2, [r5, #0]
 800e378:	428b      	cmp	r3, r1
 800e37a:	db40      	blt.n	800e3fe <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEssRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0x116>
 800e37c:	6813      	ldr	r3, [r2, #0]
 800e37e:	4610      	mov	r0, r2
 800e380:	695b      	ldr	r3, [r3, #20]
 800e382:	4798      	blx	r3
 800e384:	4604      	mov	r4, r0
 800e386:	6828      	ldr	r0, [r5, #0]
 800e388:	6803      	ldr	r3, [r0, #0]
 800e38a:	aa1d      	add	r2, sp, #116	@ 0x74
 800e38c:	689f      	ldr	r7, [r3, #8]
 800e38e:	4621      	mov	r1, r4
 800e390:	f10d 036f 	add.w	r3, sp, #111	@ 0x6f
 800e394:	47b8      	blx	r7
 800e396:	901c      	str	r0, [sp, #112]	@ 0x70
 800e398:	f64f 63ff 	movw	r3, #65279	@ 0xfeff
 800e39c:	429c      	cmp	r4, r3
 800e39e:	f000 80ea 	beq.w	800e576 <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEssRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0x28e>
 800e3a2:	f242 030b 	movw	r3, #8203	@ 0x200b
 800e3a6:	429c      	cmp	r4, r3
 800e3a8:	f000 80e5 	beq.w	800e576 <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEssRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0x28e>
 800e3ac:	2c00      	cmp	r4, #0
 800e3ae:	f000 810c 	beq.w	800e5ca <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEssRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0x2e2>
 800e3b2:	2c0a      	cmp	r4, #10
 800e3b4:	d05e      	beq.n	800e474 <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEssRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0x18c>
 800e3b6:	9a1c      	ldr	r2, [sp, #112]	@ 0x70
 800e3b8:	b36a      	cbz	r2, 800e416 <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEssRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0x12e>
 800e3ba:	8894      	ldrh	r4, [r2, #4]
 800e3bc:	f1bb 0f00 	cmp.w	fp, #0
 800e3c0:	d03a      	beq.n	800e438 <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEssRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0x150>
 800e3c2:	f892 900d 	ldrb.w	r9, [r2, #13]
 800e3c6:	ea4f 0949 	mov.w	r9, r9, lsl #1
 800e3ca:	f409 7380 	and.w	r3, r9, #256	@ 0x100
 800e3ce:	f892 900a 	ldrb.w	r9, [r2, #10]
 800e3d2:	f1bb 0f01 	cmp.w	fp, #1
 800e3d6:	ea49 0903 	orr.w	r9, r9, r3
 800e3da:	d133      	bne.n	800e444 <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEssRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0x15c>
 800e3dc:	9b0c      	ldr	r3, [sp, #48]	@ 0x30
 800e3de:	eba6 0609 	sub.w	r6, r6, r9
 800e3e2:	2b00      	cmp	r3, #0
 800e3e4:	d14d      	bne.n	800e482 <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEssRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0x19a>
 800e3e6:	9a15      	ldr	r2, [sp, #84]	@ 0x54
 800e3e8:	eb09 0306 	add.w	r3, r9, r6
 800e3ec:	4413      	add	r3, r2
 800e3ee:	9a29      	ldr	r2, [sp, #164]	@ 0xa4
 800e3f0:	f9b2 2000 	ldrsh.w	r2, [r2]
 800e3f4:	4293      	cmp	r3, r2
 800e3f6:	da4e      	bge.n	800e496 <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEssRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0x1ae>
 800e3f8:	e036      	b.n	800e468 <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEssRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0x180>
 800e3fa:	9b2d      	ldr	r3, [sp, #180]	@ 0xb4
 800e3fc:	e79c      	b.n	800e338 <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEssRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0x50>
 800e3fe:	f10d 036f 	add.w	r3, sp, #111	@ 0x6f
 800e402:	9301      	str	r3, [sp, #4]
 800e404:	ab1d      	add	r3, sp, #116	@ 0x74
 800e406:	9300      	str	r3, [sp, #0]
 800e408:	4659      	mov	r1, fp
 800e40a:	ab1c      	add	r3, sp, #112	@ 0x70
 800e40c:	982c      	ldr	r0, [sp, #176]	@ 0xb0
 800e40e:	f002 ff18 	bl	8011242 <_ZN8touchgfx12TextProvider15getNextLigatureEhPKNS_4FontERPKNS_9GlyphNodeERPKhRh>
 800e412:	4604      	mov	r4, r0
 800e414:	e7c0      	b.n	800e398 <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEssRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0xb0>
 800e416:	6828      	ldr	r0, [r5, #0]
 800e418:	6803      	ldr	r3, [r0, #0]
 800e41a:	691b      	ldr	r3, [r3, #16]
 800e41c:	4798      	blx	r3
 800e41e:	f64f 63ff 	movw	r3, #65279	@ 0xfeff
 800e422:	4298      	cmp	r0, r3
 800e424:	f000 80a7 	beq.w	800e576 <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEssRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0x28e>
 800e428:	f242 030b 	movw	r3, #8203	@ 0x200b
 800e42c:	4298      	cmp	r0, r3
 800e42e:	f000 80a2 	beq.w	800e576 <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEssRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0x28e>
 800e432:	f1bb 0f00 	cmp.w	fp, #0
 800e436:	d100      	bne.n	800e43a <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEssRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0x152>
 800e438:	444e      	add	r6, r9
 800e43a:	9a1c      	ldr	r2, [sp, #112]	@ 0x70
 800e43c:	2a00      	cmp	r2, #0
 800e43e:	d1c0      	bne.n	800e3c2 <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEssRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0xda>
 800e440:	4691      	mov	r9, r2
 800e442:	e098      	b.n	800e576 <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEssRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0x28e>
 800e444:	9b0c      	ldr	r3, [sp, #48]	@ 0x30
 800e446:	2b00      	cmp	r3, #0
 800e448:	f000 80c1 	beq.w	800e5ce <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEssRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0x2e6>
 800e44c:	f1bb 0f00 	cmp.w	fp, #0
 800e450:	d117      	bne.n	800e482 <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEssRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0x19a>
 800e452:	6828      	ldr	r0, [r5, #0]
 800e454:	990c      	ldr	r1, [sp, #48]	@ 0x30
 800e456:	6803      	ldr	r3, [r0, #0]
 800e458:	6c5b      	ldr	r3, [r3, #68]	@ 0x44
 800e45a:	4798      	blx	r3
 800e45c:	4406      	add	r6, r0
 800e45e:	9b16      	ldr	r3, [sp, #88]	@ 0x58
 800e460:	9a11      	ldr	r2, [sp, #68]	@ 0x44
 800e462:	1af3      	subs	r3, r6, r3
 800e464:	4293      	cmp	r3, r2
 800e466:	dd16      	ble.n	800e496 <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEssRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0x1ae>
 800e468:	2c00      	cmp	r4, #0
 800e46a:	f000 80ae 	beq.w	800e5ca <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEssRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0x2e2>
 800e46e:	2c0a      	cmp	r4, #10
 800e470:	f040 809c 	bne.w	800e5ac <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEssRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0x2c4>
 800e474:	240a      	movs	r4, #10
 800e476:	fab4 f084 	clz	r0, r4
 800e47a:	0940      	lsrs	r0, r0, #5
 800e47c:	b01f      	add	sp, #124	@ 0x7c
 800e47e:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 800e482:	6828      	ldr	r0, [r5, #0]
 800e484:	990c      	ldr	r1, [sp, #48]	@ 0x30
 800e486:	6803      	ldr	r3, [r0, #0]
 800e488:	6c5b      	ldr	r3, [r3, #68]	@ 0x44
 800e48a:	4798      	blx	r3
 800e48c:	f1bb 0f01 	cmp.w	fp, #1
 800e490:	eba6 0600 	sub.w	r6, r6, r0
 800e494:	d0a7      	beq.n	800e3e6 <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEssRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0xfe>
 800e496:	981c      	ldr	r0, [sp, #112]	@ 0x70
 800e498:	9b29      	ldr	r3, [sp, #164]	@ 0xa4
 800e49a:	f990 1009 	ldrsb.w	r1, [r0, #9]
 800e49e:	f9b3 8000 	ldrsh.w	r8, [r3]
 800e4a2:	7b43      	ldrb	r3, [r0, #13]
 800e4a4:	015b      	lsls	r3, r3, #5
 800e4a6:	f403 7280 	and.w	r2, r3, #256	@ 0x100
 800e4aa:	7983      	ldrb	r3, [r0, #6]
 800e4ac:	4431      	add	r1, r6
 800e4ae:	4313      	orrs	r3, r2
 800e4b0:	440b      	add	r3, r1
 800e4b2:	4543      	cmp	r3, r8
 800e4b4:	db5f      	blt.n	800e576 <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEssRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0x28e>
 800e4b6:	9b11      	ldr	r3, [sp, #68]	@ 0x44
 800e4b8:	4299      	cmp	r1, r3
 800e4ba:	da5c      	bge.n	800e576 <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEssRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0x28e>
 800e4bc:	6828      	ldr	r0, [r5, #0]
 800e4be:	6803      	ldr	r3, [r0, #0]
 800e4c0:	45b0      	cmp	r8, r6
 800e4c2:	bfc8      	it	gt
 800e4c4:	eba8 0806 	subgt.w	r8, r8, r6
 800e4c8:	6b1b      	ldr	r3, [r3, #48]	@ 0x30
 800e4ca:	bfcc      	ite	gt
 800e4cc:	fa1f f888 	uxthgt.w	r8, r8
 800e4d0:	f04f 0800 	movle.w	r8, #0
 800e4d4:	4798      	blx	r3
 800e4d6:	9a1c      	ldr	r2, [sp, #112]	@ 0x70
 800e4d8:	7b53      	ldrb	r3, [r2, #13]
 800e4da:	00d9      	lsls	r1, r3, #3
 800e4dc:	f401 7780 	and.w	r7, r1, #256	@ 0x100
 800e4e0:	7a11      	ldrb	r1, [r2, #8]
 800e4e2:	4339      	orrs	r1, r7
 800e4e4:	065f      	lsls	r7, r3, #25
 800e4e6:	9f12      	ldr	r7, [sp, #72]	@ 0x48
 800e4e8:	bf44      	itt	mi
 800e4ea:	f5a1 7100 	submi.w	r1, r1, #512	@ 0x200
 800e4ee:	b209      	sxthmi	r1, r1
 800e4f0:	19c7      	adds	r7, r0, r7
 800e4f2:	1a7f      	subs	r7, r7, r1
 800e4f4:	9929      	ldr	r1, [sp, #164]	@ 0xa4
 800e4f6:	b2bf      	uxth	r7, r7
 800e4f8:	f9b1 1002 	ldrsh.w	r1, [r1, #2]
 800e4fc:	fa0f fa87 	sxth.w	sl, r7
 800e500:	4551      	cmp	r1, sl
 800e502:	dd3c      	ble.n	800e57e <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEssRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0x296>
 800e504:	011b      	lsls	r3, r3, #4
 800e506:	79d0      	ldrb	r0, [r2, #7]
 800e508:	f403 7380 	and.w	r3, r3, #256	@ 0x100
 800e50c:	4303      	orrs	r3, r0
 800e50e:	449a      	add	sl, r3
 800e510:	4551      	cmp	r1, sl
 800e512:	dc30      	bgt.n	800e576 <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEssRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0x28e>
 800e514:	1bcf      	subs	r7, r1, r7
 800e516:	b23f      	sxth	r7, r7
 800e518:	468a      	mov	sl, r1
 800e51a:	9219      	str	r2, [sp, #100]	@ 0x64
 800e51c:	9a13      	ldr	r2, [sp, #76]	@ 0x4c
 800e51e:	9b1d      	ldr	r3, [sp, #116]	@ 0x74
 800e520:	6828      	ldr	r0, [r5, #0]
 800e522:	2a00      	cmp	r2, #0
 800e524:	d12d      	bne.n	800e582 <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEssRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0x29a>
 800e526:	9318      	str	r3, [sp, #96]	@ 0x60
 800e528:	9b0e      	ldr	r3, [sp, #56]	@ 0x38
 800e52a:	6819      	ldr	r1, [r3, #0]
 800e52c:	6ccb      	ldr	r3, [r1, #76]	@ 0x4c
 800e52e:	6801      	ldr	r1, [r0, #0]
 800e530:	9314      	str	r3, [sp, #80]	@ 0x50
 800e532:	6c09      	ldr	r1, [r1, #64]	@ 0x40
 800e534:	4788      	blx	r1
 800e536:	79a9      	ldrb	r1, [r5, #6]
 800e538:	910b      	str	r1, [sp, #44]	@ 0x2c
 800e53a:	7ba9      	ldrb	r1, [r5, #14]
 800e53c:	910a      	str	r1, [sp, #40]	@ 0x28
 800e53e:	f89d 106f 	ldrb.w	r1, [sp, #111]	@ 0x6f
 800e542:	9109      	str	r1, [sp, #36]	@ 0x24
 800e544:	68a9      	ldr	r1, [r5, #8]
 800e546:	9b18      	ldr	r3, [sp, #96]	@ 0x60
 800e548:	9306      	str	r3, [sp, #24]
 800e54a:	b2bf      	uxth	r7, r7
 800e54c:	e9cd 8702 	strd	r8, r7, [sp, #8]
 800e550:	9b29      	ldr	r3, [sp, #164]	@ 0xa4
 800e552:	9304      	str	r3, [sp, #16]
 800e554:	44b0      	add	r8, r6
 800e556:	e9cd 0107 	strd	r0, r1, [sp, #28]
 800e55a:	fa0f f388 	sxth.w	r3, r8
 800e55e:	9300      	str	r3, [sp, #0]
 800e560:	9a19      	ldr	r2, [sp, #100]	@ 0x64
 800e562:	9b0f      	ldr	r3, [sp, #60]	@ 0x3c
 800e564:	9205      	str	r2, [sp, #20]
 800e566:	f8cd a004 	str.w	sl, [sp, #4]
 800e56a:	681a      	ldr	r2, [r3, #0]
 800e56c:	9917      	ldr	r1, [sp, #92]	@ 0x5c
 800e56e:	685b      	ldr	r3, [r3, #4]
 800e570:	980e      	ldr	r0, [sp, #56]	@ 0x38
 800e572:	9f14      	ldr	r7, [sp, #80]	@ 0x50
 800e574:	47b8      	blx	r7
 800e576:	9b0d      	ldr	r3, [sp, #52]	@ 0x34
 800e578:	3301      	adds	r3, #1
 800e57a:	930d      	str	r3, [sp, #52]	@ 0x34
 800e57c:	e6e4      	b.n	800e348 <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEssRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0x60>
 800e57e:	2700      	movs	r7, #0
 800e580:	e7cb      	b.n	800e51a <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEssRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0x232>
 800e582:	9a0e      	ldr	r2, [sp, #56]	@ 0x38
 800e584:	f8d2 c008 	ldr.w	ip, [r2, #8]
 800e588:	9a12      	ldr	r2, [sp, #72]	@ 0x48
 800e58a:	f8dc 1000 	ldr.w	r1, [ip]
 800e58e:	e9cd 6204 	strd	r6, r2, [sp, #16]
 800e592:	79aa      	ldrb	r2, [r5, #6]
 800e594:	9203      	str	r2, [sp, #12]
 800e596:	7baa      	ldrb	r2, [r5, #14]
 800e598:	9202      	str	r2, [sp, #8]
 800e59a:	68aa      	ldr	r2, [r5, #8]
 800e59c:	e9cd 0200 	strd	r0, r2, [sp]
 800e5a0:	9a29      	ldr	r2, [sp, #164]	@ 0xa4
 800e5a2:	688f      	ldr	r7, [r1, #8]
 800e5a4:	990f      	ldr	r1, [sp, #60]	@ 0x3c
 800e5a6:	4660      	mov	r0, ip
 800e5a8:	47b8      	blx	r7
 800e5aa:	e7e4      	b.n	800e576 <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEssRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0x28e>
 800e5ac:	9d0d      	ldr	r5, [sp, #52]	@ 0x34
 800e5ae:	9b2d      	ldr	r3, [sp, #180]	@ 0xb4
 800e5b0:	3501      	adds	r5, #1
 800e5b2:	429d      	cmp	r5, r3
 800e5b4:	f6bf af5f 	bge.w	800e476 <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEssRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0x18e>
 800e5b8:	4659      	mov	r1, fp
 800e5ba:	982c      	ldr	r0, [sp, #176]	@ 0xb0
 800e5bc:	f7fa fe58 	bl	8009270 <_ZN8touchgfx12TextProvider15getNextLigatureEh>
 800e5c0:	4604      	mov	r4, r0
 800e5c2:	b110      	cbz	r0, 800e5ca <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEssRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0x2e2>
 800e5c4:	280a      	cmp	r0, #10
 800e5c6:	d1f2      	bne.n	800e5ae <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEssRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0x2c6>
 800e5c8:	e754      	b.n	800e474 <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEssRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0x18c>
 800e5ca:	2400      	movs	r4, #0
 800e5cc:	e753      	b.n	800e476 <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEssRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0x18e>
 800e5ce:	f1bb 0f00 	cmp.w	fp, #0
 800e5d2:	f43f af44 	beq.w	800e45e <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEssRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0x176>
 800e5d6:	e75e      	b.n	800e496 <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEssRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0x1ae>

0800e5d8 <_ZN8touchgfx3LCD22WideTextInternalStruct7addWordEttt>:
 800e5d8:	b530      	push	{r4, r5, lr}
 800e5da:	8ac4      	ldrh	r4, [r0, #22]
 800e5dc:	8b45      	ldrh	r5, [r0, #26]
 800e5de:	8343      	strh	r3, [r0, #26]
 800e5e0:	442c      	add	r4, r5
 800e5e2:	1ae4      	subs	r4, r4, r3
 800e5e4:	82c4      	strh	r4, [r0, #22]
 800e5e6:	8b83      	ldrh	r3, [r0, #28]
 800e5e8:	8b04      	ldrh	r4, [r0, #24]
 800e5ea:	4422      	add	r2, r4
 800e5ec:	440c      	add	r4, r1
 800e5ee:	1a59      	subs	r1, r3, r1
 800e5f0:	83c2      	strh	r2, [r0, #30]
 800e5f2:	8304      	strh	r4, [r0, #24]
 800e5f4:	8381      	strh	r1, [r0, #28]
 800e5f6:	bd30      	pop	{r4, r5, pc}

0800e5f8 <_ZN8touchgfx3LCD22WideTextInternalStruct23scanStringLengthForLineEv>:
 800e5f8:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 800e5fc:	4604      	mov	r4, r0
 800e5fe:	8a47      	ldrh	r7, [r0, #18]
 800e600:	68c0      	ldr	r0, [r0, #12]
 800e602:	6803      	ldr	r3, [r0, #0]
 800e604:	b085      	sub	sp, #20
 800e606:	6b9b      	ldr	r3, [r3, #56]	@ 0x38
 800e608:	4798      	blx	r3
 800e60a:	f9b4 6014 	ldrsh.w	r6, [r4, #20]
 800e60e:	7a63      	ldrb	r3, [r4, #9]
 800e610:	eb06 0640 	add.w	r6, r6, r0, lsl #1
 800e614:	42b7      	cmp	r7, r6
 800e616:	f103 33ff 	add.w	r3, r3, #4294967295
 800e61a:	bfac      	ite	ge
 800e61c:	f04f 0900 	movge.w	r9, #0
 800e620:	f04f 0901 	movlt.w	r9, #1
 800e624:	2b05      	cmp	r3, #5
 800e626:	d804      	bhi.n	800e632 <_ZN8touchgfx3LCD22WideTextInternalStruct23scanStringLengthForLineEv+0x3a>
 800e628:	e8df f003 	tbb	[pc, r3]
 800e62c:	470e0854 	.word	0x470e0854
 800e630:	4c4c      	.short	0x4c4c
 800e632:	2500      	movs	r5, #0
 800e634:	46a9      	mov	r9, r5
 800e636:	462e      	mov	r6, r5
 800e638:	462f      	mov	r7, r5
 800e63a:	e00d      	b.n	800e658 <_ZN8touchgfx3LCD22WideTextInternalStruct23scanStringLengthForLineEv+0x60>
 800e63c:	42b7      	cmp	r7, r6
 800e63e:	bfb4      	ite	lt
 800e640:	2600      	movlt	r6, #0
 800e642:	2601      	movge	r6, #1
 800e644:	2500      	movs	r5, #0
 800e646:	e7f7      	b.n	800e638 <_ZN8touchgfx3LCD22WideTextInternalStruct23scanStringLengthForLineEv+0x40>
 800e648:	42b7      	cmp	r7, r6
 800e64a:	464d      	mov	r5, r9
 800e64c:	f04f 0900 	mov.w	r9, #0
 800e650:	bfb4      	ite	lt
 800e652:	2600      	movlt	r6, #0
 800e654:	2601      	movge	r6, #1
 800e656:	464f      	mov	r7, r9
 800e658:	f04f 0800 	mov.w	r8, #0
 800e65c:	f8a4 8016 	strh.w	r8, [r4, #22]
 800e660:	f8a4 8018 	strh.w	r8, [r4, #24]
 800e664:	f8cd 8004 	str.w	r8, [sp, #4]
 800e668:	2300      	movs	r3, #0
 800e66a:	9303      	str	r3, [sp, #12]
 800e66c:	8823      	ldrh	r3, [r4, #0]
 800e66e:	2b20      	cmp	r3, #32
 800e670:	d034      	beq.n	800e6dc <_ZN8touchgfx3LCD22WideTextInternalStruct23scanStringLengthForLineEv+0xe4>
 800e672:	f242 010b 	movw	r1, #8203	@ 0x200b
 800e676:	1a5a      	subs	r2, r3, r1
 800e678:	f1d2 0a00 	rsbs	sl, r2, #0
 800e67c:	eb4a 0a02 	adc.w	sl, sl, r2
 800e680:	f64f 62ff 	movw	r2, #65279	@ 0xfeff
 800e684:	4293      	cmp	r3, r2
 800e686:	d009      	beq.n	800e69c <_ZN8touchgfx3LCD22WideTextInternalStruct23scanStringLengthForLineEv+0xa4>
 800e688:	428b      	cmp	r3, r1
 800e68a:	9a01      	ldr	r2, [sp, #4]
 800e68c:	bf18      	it	ne
 800e68e:	461a      	movne	r2, r3
 800e690:	9201      	str	r2, [sp, #4]
 800e692:	bf0c      	ite	eq
 800e694:	f04f 0a01 	moveq.w	sl, #1
 800e698:	f04f 0a00 	movne.w	sl, #0
 800e69c:	ab03      	add	r3, sp, #12
 800e69e:	68e2      	ldr	r2, [r4, #12]
 800e6a0:	7a21      	ldrb	r1, [r4, #8]
 800e6a2:	6860      	ldr	r0, [r4, #4]
 800e6a4:	f002 fd84 	bl	80111b0 <_ZN8touchgfx12TextProvider15getNextLigatureEhPKNS_4FontERPKNS_9GlyphNodeE>
 800e6a8:	8020      	strh	r0, [r4, #0]
 800e6aa:	b9d8      	cbnz	r0, 800e6e4 <_ZN8touchgfx3LCD22WideTextInternalStruct23scanStringLengthForLineEv+0xec>
 800e6ac:	8ba2      	ldrh	r2, [r4, #28]
 800e6ae:	2300      	movs	r3, #0
 800e6b0:	4611      	mov	r1, r2
 800e6b2:	4620      	mov	r0, r4
 800e6b4:	f7ff ff90 	bl	800e5d8 <_ZN8touchgfx3LCD22WideTextInternalStruct7addWordEttt>
 800e6b8:	e06e      	b.n	800e798 <_ZN8touchgfx3LCD22WideTextInternalStruct23scanStringLengthForLineEv+0x1a0>
 800e6ba:	2500      	movs	r5, #0
 800e6bc:	46a9      	mov	r9, r5
 800e6be:	462e      	mov	r6, r5
 800e6c0:	2701      	movs	r7, #1
 800e6c2:	e7c9      	b.n	800e658 <_ZN8touchgfx3LCD22WideTextInternalStruct23scanStringLengthForLineEv+0x60>
 800e6c4:	42b7      	cmp	r7, r6
 800e6c6:	f04f 0500 	mov.w	r5, #0
 800e6ca:	bfb4      	ite	lt
 800e6cc:	2700      	movlt	r7, #0
 800e6ce:	2701      	movge	r7, #1
 800e6d0:	462e      	mov	r6, r5
 800e6d2:	e7c1      	b.n	800e658 <_ZN8touchgfx3LCD22WideTextInternalStruct23scanStringLengthForLineEv+0x60>
 800e6d4:	2500      	movs	r5, #0
 800e6d6:	46a9      	mov	r9, r5
 800e6d8:	2601      	movs	r6, #1
 800e6da:	e7ad      	b.n	800e638 <_ZN8touchgfx3LCD22WideTextInternalStruct23scanStringLengthForLineEv+0x40>
 800e6dc:	9301      	str	r3, [sp, #4]
 800e6de:	f04f 0a01 	mov.w	sl, #1
 800e6e2:	e7db      	b.n	800e69c <_ZN8touchgfx3LCD22WideTextInternalStruct23scanStringLengthForLineEv+0xa4>
 800e6e4:	8b63      	ldrh	r3, [r4, #26]
 800e6e6:	280a      	cmp	r0, #10
 800e6e8:	f103 0301 	add.w	r3, r3, #1
 800e6ec:	8363      	strh	r3, [r4, #26]
 800e6ee:	d0dd      	beq.n	800e6ac <_ZN8touchgfx3LCD22WideTextInternalStruct23scanStringLengthForLineEv+0xb4>
 800e6f0:	9a03      	ldr	r2, [sp, #12]
 800e6f2:	bb62      	cbnz	r2, 800e74e <_ZN8touchgfx3LCD22WideTextInternalStruct23scanStringLengthForLineEv+0x156>
 800e6f4:	f64f 63ff 	movw	r3, #65279	@ 0xfeff
 800e6f8:	4298      	cmp	r0, r3
 800e6fa:	d003      	beq.n	800e704 <_ZN8touchgfx3LCD22WideTextInternalStruct23scanStringLengthForLineEv+0x10c>
 800e6fc:	f242 030b 	movw	r3, #8203	@ 0x200b
 800e700:	4298      	cmp	r0, r3
 800e702:	d1b1      	bne.n	800e668 <_ZN8touchgfx3LCD22WideTextInternalStruct23scanStringLengthForLineEv+0x70>
 800e704:	8823      	ldrh	r3, [r4, #0]
 800e706:	8ba1      	ldrh	r1, [r4, #28]
 800e708:	2b20      	cmp	r3, #32
 800e70a:	d003      	beq.n	800e714 <_ZN8touchgfx3LCD22WideTextInternalStruct23scanStringLengthForLineEv+0x11c>
 800e70c:	f242 000b 	movw	r0, #8203	@ 0x200b
 800e710:	4283      	cmp	r3, r0
 800e712:	d131      	bne.n	800e778 <_ZN8touchgfx3LCD22WideTextInternalStruct23scanStringLengthForLineEv+0x180>
 800e714:	f1ba 0f00 	cmp.w	sl, #0
 800e718:	bf0a      	itet	eq
 800e71a:	4688      	moveq	r8, r1
 800e71c:	4650      	movne	r0, sl
 800e71e:	2001      	moveq	r0, #1
 800e720:	440a      	add	r2, r1
 800e722:	8b23      	ldrh	r3, [r4, #24]
 800e724:	f8b4 c010 	ldrh.w	ip, [r4, #16]
 800e728:	b292      	uxth	r2, r2
 800e72a:	83a2      	strh	r2, [r4, #28]
 800e72c:	4413      	add	r3, r2
 800e72e:	f1b9 0f00 	cmp.w	r9, #0
 800e732:	d102      	bne.n	800e73a <_ZN8touchgfx3LCD22WideTextInternalStruct23scanStringLengthForLineEv+0x142>
 800e734:	2d00      	cmp	r5, #0
 800e736:	d042      	beq.n	800e7be <_ZN8touchgfx3LCD22WideTextInternalStruct23scanStringLengthForLineEv+0x1c6>
 800e738:	b300      	cbz	r0, 800e77c <_ZN8touchgfx3LCD22WideTextInternalStruct23scanStringLengthForLineEv+0x184>
 800e73a:	8c21      	ldrh	r1, [r4, #32]
 800e73c:	4419      	add	r1, r3
 800e73e:	458c      	cmp	ip, r1
 800e740:	da37      	bge.n	800e7b2 <_ZN8touchgfx3LCD22WideTextInternalStruct23scanStringLengthForLineEv+0x1ba>
 800e742:	8ae1      	ldrh	r1, [r4, #22]
 800e744:	2900      	cmp	r1, #0
 800e746:	d034      	beq.n	800e7b2 <_ZN8touchgfx3LCD22WideTextInternalStruct23scanStringLengthForLineEv+0x1ba>
 800e748:	4563      	cmp	r3, ip
 800e74a:	dd8d      	ble.n	800e668 <_ZN8touchgfx3LCD22WideTextInternalStruct23scanStringLengthForLineEv+0x70>
 800e74c:	e01d      	b.n	800e78a <_ZN8touchgfx3LCD22WideTextInternalStruct23scanStringLengthForLineEv+0x192>
 800e74e:	8893      	ldrh	r3, [r2, #4]
 800e750:	8023      	strh	r3, [r4, #0]
 800e752:	f892 b00d 	ldrb.w	fp, [r2, #13]
 800e756:	9901      	ldr	r1, [sp, #4]
 800e758:	ea4f 0b4b 	mov.w	fp, fp, lsl #1
 800e75c:	f40b 7080 	and.w	r0, fp, #256	@ 0x100
 800e760:	f892 b00a 	ldrb.w	fp, [r2, #10]
 800e764:	ea4b 0b00 	orr.w	fp, fp, r0
 800e768:	68e0      	ldr	r0, [r4, #12]
 800e76a:	6803      	ldr	r3, [r0, #0]
 800e76c:	6c5b      	ldr	r3, [r3, #68]	@ 0x44
 800e76e:	4798      	blx	r3
 800e770:	eb0b 0200 	add.w	r2, fp, r0
 800e774:	b292      	uxth	r2, r2
 800e776:	e7c5      	b.n	800e704 <_ZN8touchgfx3LCD22WideTextInternalStruct23scanStringLengthForLineEv+0x10c>
 800e778:	2000      	movs	r0, #0
 800e77a:	e7d1      	b.n	800e720 <_ZN8touchgfx3LCD22WideTextInternalStruct23scanStringLengthForLineEv+0x128>
 800e77c:	4563      	cmp	r3, ip
 800e77e:	f77f af73 	ble.w	800e668 <_ZN8touchgfx3LCD22WideTextInternalStruct23scanStringLengthForLineEv+0x70>
 800e782:	8ae3      	ldrh	r3, [r4, #22]
 800e784:	2b00      	cmp	r3, #0
 800e786:	f43f af6f 	beq.w	800e668 <_ZN8touchgfx3LCD22WideTextInternalStruct23scanStringLengthForLineEv+0x70>
 800e78a:	2301      	movs	r3, #1
 800e78c:	f884 3022 	strb.w	r3, [r4, #34]	@ 0x22
 800e790:	8c22      	ldrh	r2, [r4, #32]
 800e792:	8be3      	ldrh	r3, [r4, #30]
 800e794:	4413      	add	r3, r2
 800e796:	83e3      	strh	r3, [r4, #30]
 800e798:	68e0      	ldr	r0, [r4, #12]
 800e79a:	6803      	ldr	r3, [r0, #0]
 800e79c:	6b9b      	ldr	r3, [r3, #56]	@ 0x38
 800e79e:	4798      	blx	r3
 800e7a0:	f9b4 3014 	ldrsh.w	r3, [r4, #20]
 800e7a4:	4418      	add	r0, r3
 800e7a6:	8a63      	ldrh	r3, [r4, #18]
 800e7a8:	1a18      	subs	r0, r3, r0
 800e7aa:	8260      	strh	r0, [r4, #18]
 800e7ac:	b005      	add	sp, #20
 800e7ae:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 800e7b2:	2300      	movs	r3, #0
 800e7b4:	4611      	mov	r1, r2
 800e7b6:	4620      	mov	r0, r4
 800e7b8:	f7ff ff0e 	bl	800e5d8 <_ZN8touchgfx3LCD22WideTextInternalStruct7addWordEttt>
 800e7bc:	e754      	b.n	800e668 <_ZN8touchgfx3LCD22WideTextInternalStruct23scanStringLengthForLineEv+0x70>
 800e7be:	4563      	cmp	r3, ip
 800e7c0:	dd14      	ble.n	800e7ec <_ZN8touchgfx3LCD22WideTextInternalStruct23scanStringLengthForLineEv+0x1f4>
 800e7c2:	b117      	cbz	r7, 800e7ca <_ZN8touchgfx3LCD22WideTextInternalStruct23scanStringLengthForLineEv+0x1d2>
 800e7c4:	2301      	movs	r3, #1
 800e7c6:	460a      	mov	r2, r1
 800e7c8:	e772      	b.n	800e6b0 <_ZN8touchgfx3LCD22WideTextInternalStruct23scanStringLengthForLineEv+0xb8>
 800e7ca:	2e00      	cmp	r6, #0
 800e7cc:	f43f af4c 	beq.w	800e668 <_ZN8touchgfx3LCD22WideTextInternalStruct23scanStringLengthForLineEv+0x70>
 800e7d0:	2800      	cmp	r0, #0
 800e7d2:	f47f af49 	bne.w	800e668 <_ZN8touchgfx3LCD22WideTextInternalStruct23scanStringLengthForLineEv+0x70>
 800e7d6:	f1ba 0f00 	cmp.w	sl, #0
 800e7da:	d002      	beq.n	800e7e2 <_ZN8touchgfx3LCD22WideTextInternalStruct23scanStringLengthForLineEv+0x1ea>
 800e7dc:	2301      	movs	r3, #1
 800e7de:	4642      	mov	r2, r8
 800e7e0:	e767      	b.n	800e6b2 <_ZN8touchgfx3LCD22WideTextInternalStruct23scanStringLengthForLineEv+0xba>
 800e7e2:	8ae3      	ldrh	r3, [r4, #22]
 800e7e4:	2b00      	cmp	r3, #0
 800e7e6:	f43f af3f 	beq.w	800e668 <_ZN8touchgfx3LCD22WideTextInternalStruct23scanStringLengthForLineEv+0x70>
 800e7ea:	e7d5      	b.n	800e798 <_ZN8touchgfx3LCD22WideTextInternalStruct23scanStringLengthForLineEv+0x1a0>
 800e7ec:	2800      	cmp	r0, #0
 800e7ee:	f47f af3b 	bne.w	800e668 <_ZN8touchgfx3LCD22WideTextInternalStruct23scanStringLengthForLineEv+0x70>
 800e7f2:	f1ba 0f00 	cmp.w	sl, #0
 800e7f6:	f43f af37 	beq.w	800e668 <_ZN8touchgfx3LCD22WideTextInternalStruct23scanStringLengthForLineEv+0x70>
 800e7fa:	2301      	movs	r3, #1
 800e7fc:	4642      	mov	r2, r8
 800e7fe:	e7da      	b.n	800e7b6 <_ZN8touchgfx3LCD22WideTextInternalStruct23scanStringLengthForLineEv+0x1be>

0800e800 <_ZN8touchgfx3LCD11getNumLinesERNS_12TextProviderENS_14WideTextActionEhPKNS_4FontEs>:
 800e800:	b5f0      	push	{r4, r5, r6, r7, lr}
 800e802:	4605      	mov	r5, r0
 800e804:	b08f      	sub	sp, #60	@ 0x3c
 800e806:	4617      	mov	r7, r2
 800e808:	461c      	mov	r4, r3
 800e80a:	460e      	mov	r6, r1
 800e80c:	b1d1      	cbz	r1, 800e844 <_ZN8touchgfx3LCD11getNumLinesERNS_12TextProviderENS_14WideTextActionEhPKNS_4FontEs+0x44>
 800e80e:	681b      	ldr	r3, [r3, #0]
 800e810:	4620      	mov	r0, r4
 800e812:	6b9b      	ldr	r3, [r3, #56]	@ 0x38
 800e814:	4798      	blx	r3
 800e816:	4240      	negs	r0, r0
 800e818:	b200      	sxth	r0, r0
 800e81a:	e9cd 4001 	strd	r4, r0, [sp, #4]
 800e81e:	9603      	str	r6, [sp, #12]
 800e820:	9700      	str	r7, [sp, #0]
 800e822:	f64f 73ff 	movw	r3, #65535	@ 0xffff
 800e826:	f8bd 2050 	ldrh.w	r2, [sp, #80]	@ 0x50
 800e82a:	4629      	mov	r1, r5
 800e82c:	a805      	add	r0, sp, #20
 800e82e:	f7ff fcab 	bl	800e188 <_ZN8touchgfx3LCD22WideTextInternalStructC1ERNS_12TextProviderEtthPKNS_4FontEsNS_14WideTextActionE>
 800e832:	2401      	movs	r4, #1
 800e834:	a805      	add	r0, sp, #20
 800e836:	f7ff fedf 	bl	800e5f8 <_ZN8touchgfx3LCD22WideTextInternalStruct23scanStringLengthForLineEv>
 800e83a:	f8bd 3014 	ldrh.w	r3, [sp, #20]
 800e83e:	b163      	cbz	r3, 800e85a <_ZN8touchgfx3LCD11getNumLinesERNS_12TextProviderENS_14WideTextActionEhPKNS_4FontEs+0x5a>
 800e840:	3401      	adds	r4, #1
 800e842:	e7f7      	b.n	800e834 <_ZN8touchgfx3LCD11getNumLinesERNS_12TextProviderENS_14WideTextActionEhPKNS_4FontEs+0x34>
 800e844:	f002 fd82 	bl	801134c <_ZN8touchgfx12TextProvider11getNextCharEv>
 800e848:	2401      	movs	r4, #1
 800e84a:	280a      	cmp	r0, #10
 800e84c:	4628      	mov	r0, r5
 800e84e:	bf08      	it	eq
 800e850:	3401      	addeq	r4, #1
 800e852:	f002 fd7b 	bl	801134c <_ZN8touchgfx12TextProvider11getNextCharEv>
 800e856:	2800      	cmp	r0, #0
 800e858:	d1f7      	bne.n	800e84a <_ZN8touchgfx3LCD11getNumLinesERNS_12TextProviderENS_14WideTextActionEhPKNS_4FontEs+0x4a>
 800e85a:	b2a0      	uxth	r0, r4
 800e85c:	b00f      	add	sp, #60	@ 0x3c
 800e85e:	bdf0      	pop	{r4, r5, r6, r7, pc}

0800e860 <_ZN8touchgfx3LCD13drawStringLTRERKNS_4RectES3_RKNS0_13StringVisualsEPKtSt9__va_list>:
 800e860:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 800e864:	b0e3      	sub	sp, #396	@ 0x18c
 800e866:	461c      	mov	r4, r3
 800e868:	9b6c      	ldr	r3, [sp, #432]	@ 0x1b0
 800e86a:	4683      	mov	fp, r0
 800e86c:	4688      	mov	r8, r1
 800e86e:	2b00      	cmp	r3, #0
 800e870:	f000 8112 	beq.w	800ea98 <_ZN8touchgfx3LCD13drawStringLTRERKNS_4RectES3_RKNS0_13StringVisualsEPKtSt9__va_list+0x238>
 800e874:	6823      	ldr	r3, [r4, #0]
 800e876:	2b00      	cmp	r3, #0
 800e878:	f000 810e 	beq.w	800ea98 <_ZN8touchgfx3LCD13drawStringLTRERKNS_4RectES3_RKNS0_13StringVisualsEPKtSt9__va_list+0x238>
 800e87c:	7ba3      	ldrb	r3, [r4, #14]
 800e87e:	2b00      	cmp	r3, #0
 800e880:	f000 810a 	beq.w	800ea98 <_ZN8touchgfx3LCD13drawStringLTRERKNS_4RectES3_RKNS0_13StringVisualsEPKtSt9__va_list+0x238>
 800e884:	6810      	ldr	r0, [r2, #0]
 800e886:	6851      	ldr	r1, [r2, #4]
 800e888:	f9b8 2004 	ldrsh.w	r2, [r8, #4]
 800e88c:	f8ad 2034 	strh.w	r2, [sp, #52]	@ 0x34
 800e890:	ad0a      	add	r5, sp, #40	@ 0x28
 800e892:	462b      	mov	r3, r5
 800e894:	c303      	stmia	r3!, {r0, r1}
 800e896:	2100      	movs	r1, #0
 800e898:	f9b8 3006 	ldrsh.w	r3, [r8, #6]
 800e89c:	910c      	str	r1, [sp, #48]	@ 0x30
 800e89e:	79a2      	ldrb	r2, [r4, #6]
 800e8a0:	f8ad 3036 	strh.w	r3, [sp, #54]	@ 0x36
 800e8a4:	a90c      	add	r1, sp, #48	@ 0x30
 800e8a6:	4628      	mov	r0, r5
 800e8a8:	f7ff fced 	bl	800e286 <_ZN8touchgfx3LCD10rotateRectERNS_4RectERKS1_NS_12TextRotationE>
 800e8ac:	a90c      	add	r1, sp, #48	@ 0x30
 800e8ae:	4608      	mov	r0, r1
 800e8b0:	79a2      	ldrb	r2, [r4, #6]
 800e8b2:	f7ff fce8 	bl	800e286 <_ZN8touchgfx3LCD10rotateRectERNS_4RectERKS1_NS_12TextRotationE>
 800e8b6:	a817      	add	r0, sp, #92	@ 0x5c
 800e8b8:	f002 f8f2 	bl	8010aa0 <_ZN8touchgfx12TextProviderC1Ev>
 800e8bc:	6820      	ldr	r0, [r4, #0]
 800e8be:	6803      	ldr	r3, [r0, #0]
 800e8c0:	6cdb      	ldr	r3, [r3, #76]	@ 0x4c
 800e8c2:	4798      	blx	r3
 800e8c4:	4606      	mov	r6, r0
 800e8c6:	6820      	ldr	r0, [r4, #0]
 800e8c8:	6803      	ldr	r3, [r0, #0]
 800e8ca:	6d1b      	ldr	r3, [r3, #80]	@ 0x50
 800e8cc:	4798      	blx	r3
 800e8ce:	4633      	mov	r3, r6
 800e8d0:	9a6d      	ldr	r2, [sp, #436]	@ 0x1b4
 800e8d2:	996c      	ldr	r1, [sp, #432]	@ 0x1b0
 800e8d4:	9000      	str	r0, [sp, #0]
 800e8d6:	a817      	add	r0, sp, #92	@ 0x5c
 800e8d8:	f002 f93d 	bl	8010b56 <_ZN8touchgfx12TextProvider10initializeEPKtSt9__va_listS2_PKNS_24FontContextualFormsTableE>
 800e8dc:	6820      	ldr	r0, [r4, #0]
 800e8de:	f894 a004 	ldrb.w	sl, [r4, #4]
 800e8e2:	6803      	ldr	r3, [r0, #0]
 800e8e4:	6b9b      	ldr	r3, [r3, #56]	@ 0x38
 800e8e6:	4798      	blx	r3
 800e8e8:	f9b4 600c 	ldrsh.w	r6, [r4, #12]
 800e8ec:	6823      	ldr	r3, [r4, #0]
 800e8ee:	4607      	mov	r7, r0
 800e8f0:	4406      	add	r6, r0
 800e8f2:	a830      	add	r0, sp, #192	@ 0xc0
 800e8f4:	f893 9009 	ldrb.w	r9, [r3, #9]
 800e8f8:	f002 f8d2 	bl	8010aa0 <_ZN8touchgfx12TextProviderC1Ev>
 800e8fc:	7c23      	ldrb	r3, [r4, #16]
 800e8fe:	b17b      	cbz	r3, 800e920 <_ZN8touchgfx3LCD13drawStringLTRERKNS_4RectES3_RKNS0_13StringVisualsEPKtSt9__va_list+0xc0>
 800e900:	6820      	ldr	r0, [r4, #0]
 800e902:	6803      	ldr	r3, [r0, #0]
 800e904:	6cdb      	ldr	r3, [r3, #76]	@ 0x4c
 800e906:	4798      	blx	r3
 800e908:	9009      	str	r0, [sp, #36]	@ 0x24
 800e90a:	6820      	ldr	r0, [r4, #0]
 800e90c:	6802      	ldr	r2, [r0, #0]
 800e90e:	6d12      	ldr	r2, [r2, #80]	@ 0x50
 800e910:	4790      	blx	r2
 800e912:	9b09      	ldr	r3, [sp, #36]	@ 0x24
 800e914:	9000      	str	r0, [sp, #0]
 800e916:	9a6d      	ldr	r2, [sp, #436]	@ 0x1b4
 800e918:	996c      	ldr	r1, [sp, #432]	@ 0x1b0
 800e91a:	a830      	add	r0, sp, #192	@ 0xc0
 800e91c:	f002 f91b 	bl	8010b56 <_ZN8touchgfx12TextProvider10initializeEPKtSt9__va_listS2_PKNS_24FontContextualFormsTableE>
 800e920:	f8bd 1034 	ldrh.w	r1, [sp, #52]	@ 0x34
 800e924:	7be2      	ldrb	r2, [r4, #15]
 800e926:	f8bd 3036 	ldrh.w	r3, [sp, #54]	@ 0x36
 800e92a:	1a8a      	subs	r2, r1, r2
 800e92c:	7c21      	ldrb	r1, [r4, #16]
 800e92e:	9103      	str	r1, [sp, #12]
 800e930:	f9b4 100c 	ldrsh.w	r1, [r4, #12]
 800e934:	9102      	str	r1, [sp, #8]
 800e936:	6821      	ldr	r1, [r4, #0]
 800e938:	9101      	str	r1, [sp, #4]
 800e93a:	7961      	ldrb	r1, [r4, #5]
 800e93c:	9100      	str	r1, [sp, #0]
 800e93e:	b292      	uxth	r2, r2
 800e940:	a930      	add	r1, sp, #192	@ 0xc0
 800e942:	a80e      	add	r0, sp, #56	@ 0x38
 800e944:	f7ff fc20 	bl	800e188 <_ZN8touchgfx3LCD22WideTextInternalStructC1ERNS_12TextProviderEtthPKNS_4FontEsNS_14WideTextActionE>
 800e948:	2e00      	cmp	r6, #0
 800e94a:	dc5b      	bgt.n	800ea04 <_ZN8touchgfx3LCD13drawStringLTRERKNS_4RectES3_RKNS0_13StringVisualsEPKtSt9__va_list+0x1a4>
 800e94c:	af17      	add	r7, sp, #92	@ 0x5c
 800e94e:	f04f 0900 	mov.w	r9, #0
 800e952:	7c23      	ldrb	r3, [r4, #16]
 800e954:	2b00      	cmp	r3, #0
 800e956:	f000 80b1 	beq.w	800eabc <_ZN8touchgfx3LCD13drawStringLTRERKNS_4RectES3_RKNS0_13StringVisualsEPKtSt9__va_list+0x25c>
 800e95a:	a80e      	add	r0, sp, #56	@ 0x38
 800e95c:	f7ff fe4c 	bl	800e5f8 <_ZN8touchgfx3LCD22WideTextInternalStruct23scanStringLengthForLineEv>
 800e960:	f1ba 0f00 	cmp.w	sl, #0
 800e964:	f000 80a5 	beq.w	800eab2 <_ZN8touchgfx3LCD13drawStringLTRERKNS_4RectES3_RKNS0_13StringVisualsEPKtSt9__va_list+0x252>
 800e968:	7c23      	ldrb	r3, [r4, #16]
 800e96a:	9309      	str	r3, [sp, #36]	@ 0x24
 800e96c:	2264      	movs	r2, #100	@ 0x64
 800e96e:	4639      	mov	r1, r7
 800e970:	a849      	add	r0, sp, #292	@ 0x124
 800e972:	f012 fa24 	bl	8020dbe <memcpy>
 800e976:	9b09      	ldr	r3, [sp, #36]	@ 0x24
 800e978:	2b00      	cmp	r3, #0
 800e97a:	f000 80a7 	beq.w	800eacc <_ZN8touchgfx3LCD13drawStringLTRERKNS_4RectES3_RKNS0_13StringVisualsEPKtSt9__va_list+0x26c>
 800e97e:	f9bd 3056 	ldrsh.w	r3, [sp, #86]	@ 0x56
 800e982:	7922      	ldrb	r2, [r4, #4]
 800e984:	2a01      	cmp	r2, #1
 800e986:	f040 808a 	bne.w	800ea9e <_ZN8touchgfx3LCD13drawStringLTRERKNS_4RectES3_RKNS0_13StringVisualsEPKtSt9__va_list+0x23e>
 800e98a:	f9bd 0034 	ldrsh.w	r0, [sp, #52]	@ 0x34
 800e98e:	1ac0      	subs	r0, r0, r3
 800e990:	2302      	movs	r3, #2
 800e992:	fb90 f0f3 	sdiv	r0, r0, r3
 800e996:	b200      	sxth	r0, r0
 800e998:	7c23      	ldrb	r3, [r4, #16]
 800e99a:	2b00      	cmp	r3, #0
 800e99c:	f000 808b 	beq.w	800eab6 <_ZN8touchgfx3LCD13drawStringLTRERKNS_4RectES3_RKNS0_13StringVisualsEPKtSt9__va_list+0x256>
 800e9a0:	f8bd 204e 	ldrh.w	r2, [sp, #78]	@ 0x4e
 800e9a4:	f89d 105a 	ldrb.w	r1, [sp, #90]	@ 0x5a
 800e9a8:	f9bd 3032 	ldrsh.w	r3, [sp, #50]	@ 0x32
 800e9ac:	e9cd 2105 	strd	r2, r1, [sp, #20]
 800e9b0:	f8bd 2030 	ldrh.w	r2, [sp, #48]	@ 0x30
 800e9b4:	4410      	add	r0, r2
 800e9b6:	b200      	sxth	r0, r0
 800e9b8:	9000      	str	r0, [sp, #0]
 800e9ba:	e9cd 9703 	strd	r9, r7, [sp, #12]
 800e9be:	e9cd 5401 	strd	r5, r4, [sp, #4]
 800e9c2:	4642      	mov	r2, r8
 800e9c4:	2100      	movs	r1, #0
 800e9c6:	4658      	mov	r0, fp
 800e9c8:	f7ff fc8e 	bl	800e2e8 <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEssRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib>
 800e9cc:	2800      	cmp	r0, #0
 800e9ce:	d163      	bne.n	800ea98 <_ZN8touchgfx3LCD13drawStringLTRERKNS_4RectES3_RKNS0_13StringVisualsEPKtSt9__va_list+0x238>
 800e9d0:	f8bd 3032 	ldrh.w	r3, [sp, #50]	@ 0x32
 800e9d4:	f8bd 1036 	ldrh.w	r1, [sp, #54]	@ 0x36
 800e9d8:	b2b2      	uxth	r2, r6
 800e9da:	4413      	add	r3, r2
 800e9dc:	1a8a      	subs	r2, r1, r2
 800e9de:	f8ad 2036 	strh.w	r2, [sp, #54]	@ 0x36
 800e9e2:	f89d 205a 	ldrb.w	r2, [sp, #90]	@ 0x5a
 800e9e6:	b21b      	sxth	r3, r3
 800e9e8:	f8ad 3032 	strh.w	r3, [sp, #50]	@ 0x32
 800e9ec:	2a00      	cmp	r2, #0
 800e9ee:	d153      	bne.n	800ea98 <_ZN8touchgfx3LCD13drawStringLTRERKNS_4RectES3_RKNS0_13StringVisualsEPKtSt9__va_list+0x238>
 800e9f0:	6822      	ldr	r2, [r4, #0]
 800e9f2:	8869      	ldrh	r1, [r5, #2]
 800e9f4:	7a12      	ldrb	r2, [r2, #8]
 800e9f6:	1a9b      	subs	r3, r3, r2
 800e9f8:	88ea      	ldrh	r2, [r5, #6]
 800e9fa:	440a      	add	r2, r1
 800e9fc:	b212      	sxth	r2, r2
 800e9fe:	4293      	cmp	r3, r2
 800ea00:	dda7      	ble.n	800e952 <_ZN8touchgfx3LCD13drawStringLTRERKNS_4RectES3_RKNS0_13StringVisualsEPKtSt9__va_list+0xf2>
 800ea02:	e049      	b.n	800ea98 <_ZN8touchgfx3LCD13drawStringLTRERKNS_4RectES3_RKNS0_13StringVisualsEPKtSt9__va_list+0x238>
 800ea04:	7c23      	ldrb	r3, [r4, #16]
 800ea06:	444f      	add	r7, r9
 800ea08:	b1c3      	cbz	r3, 800ea3c <_ZN8touchgfx3LCD13drawStringLTRERKNS_4RectES3_RKNS0_13StringVisualsEPKtSt9__va_list+0x1dc>
 800ea0a:	f64f 79ff 	movw	r9, #65535	@ 0xffff
 800ea0e:	f9bd 3032 	ldrsh.w	r3, [sp, #50]	@ 0x32
 800ea12:	f9b5 2002 	ldrsh.w	r2, [r5, #2]
 800ea16:	443b      	add	r3, r7
 800ea18:	4293      	cmp	r3, r2
 800ea1a:	da97      	bge.n	800e94c <_ZN8touchgfx3LCD13drawStringLTRERKNS_4RectES3_RKNS0_13StringVisualsEPKtSt9__va_list+0xec>
 800ea1c:	a80e      	add	r0, sp, #56	@ 0x38
 800ea1e:	f7ff fdeb 	bl	800e5f8 <_ZN8touchgfx3LCD22WideTextInternalStruct23scanStringLengthForLineEv>
 800ea22:	f8bd 304e 	ldrh.w	r3, [sp, #78]	@ 0x4e
 800ea26:	3b01      	subs	r3, #1
 800ea28:	b29b      	uxth	r3, r3
 800ea2a:	454b      	cmp	r3, r9
 800ea2c:	9309      	str	r3, [sp, #36]	@ 0x24
 800ea2e:	d021      	beq.n	800ea74 <_ZN8touchgfx3LCD13drawStringLTRERKNS_4RectES3_RKNS0_13StringVisualsEPKtSt9__va_list+0x214>
 800ea30:	7961      	ldrb	r1, [r4, #5]
 800ea32:	a817      	add	r0, sp, #92	@ 0x5c
 800ea34:	f7fa fc1c 	bl	8009270 <_ZN8touchgfx12TextProvider15getNextLigatureEh>
 800ea38:	9b09      	ldr	r3, [sp, #36]	@ 0x24
 800ea3a:	e7f4      	b.n	800ea26 <_ZN8touchgfx3LCD13drawStringLTRERKNS_4RectES3_RKNS0_13StringVisualsEPKtSt9__va_list+0x1c6>
 800ea3c:	fa1f f986 	uxth.w	r9, r6
 800ea40:	f9bd 3032 	ldrsh.w	r3, [sp, #50]	@ 0x32
 800ea44:	f9b5 2002 	ldrsh.w	r2, [r5, #2]
 800ea48:	443b      	add	r3, r7
 800ea4a:	4293      	cmp	r3, r2
 800ea4c:	f6bf af7e 	bge.w	800e94c <_ZN8touchgfx3LCD13drawStringLTRERKNS_4RectES3_RKNS0_13StringVisualsEPKtSt9__va_list+0xec>
 800ea50:	a817      	add	r0, sp, #92	@ 0x5c
 800ea52:	f002 fc7b 	bl	801134c <_ZN8touchgfx12TextProvider11getNextCharEv>
 800ea56:	b1f8      	cbz	r0, 800ea98 <_ZN8touchgfx3LCD13drawStringLTRERKNS_4RectES3_RKNS0_13StringVisualsEPKtSt9__va_list+0x238>
 800ea58:	280a      	cmp	r0, #10
 800ea5a:	d1f1      	bne.n	800ea40 <_ZN8touchgfx3LCD13drawStringLTRERKNS_4RectES3_RKNS0_13StringVisualsEPKtSt9__va_list+0x1e0>
 800ea5c:	f8bd 3032 	ldrh.w	r3, [sp, #50]	@ 0x32
 800ea60:	444b      	add	r3, r9
 800ea62:	f8ad 3032 	strh.w	r3, [sp, #50]	@ 0x32
 800ea66:	f8bd 3036 	ldrh.w	r3, [sp, #54]	@ 0x36
 800ea6a:	eba3 0309 	sub.w	r3, r3, r9
 800ea6e:	f8ad 3036 	strh.w	r3, [sp, #54]	@ 0x36
 800ea72:	e7e5      	b.n	800ea40 <_ZN8touchgfx3LCD13drawStringLTRERKNS_4RectES3_RKNS0_13StringVisualsEPKtSt9__va_list+0x1e0>
 800ea74:	f8bd 2032 	ldrh.w	r2, [sp, #50]	@ 0x32
 800ea78:	b2b3      	uxth	r3, r6
 800ea7a:	441a      	add	r2, r3
 800ea7c:	f8ad 2032 	strh.w	r2, [sp, #50]	@ 0x32
 800ea80:	f8bd 2036 	ldrh.w	r2, [sp, #54]	@ 0x36
 800ea84:	1ad3      	subs	r3, r2, r3
 800ea86:	f8ad 3036 	strh.w	r3, [sp, #54]	@ 0x36
 800ea8a:	f8bd 3038 	ldrh.w	r3, [sp, #56]	@ 0x38
 800ea8e:	b11b      	cbz	r3, 800ea98 <_ZN8touchgfx3LCD13drawStringLTRERKNS_4RectES3_RKNS0_13StringVisualsEPKtSt9__va_list+0x238>
 800ea90:	f89d 305a 	ldrb.w	r3, [sp, #90]	@ 0x5a
 800ea94:	2b00      	cmp	r3, #0
 800ea96:	d0ba      	beq.n	800ea0e <_ZN8touchgfx3LCD13drawStringLTRERKNS_4RectES3_RKNS0_13StringVisualsEPKtSt9__va_list+0x1ae>
 800ea98:	b063      	add	sp, #396	@ 0x18c
 800ea9a:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 800ea9e:	2a02      	cmp	r2, #2
 800eaa0:	d105      	bne.n	800eaae <_ZN8touchgfx3LCD13drawStringLTRERKNS_4RectES3_RKNS0_13StringVisualsEPKtSt9__va_list+0x24e>
 800eaa2:	7be2      	ldrb	r2, [r4, #15]
 800eaa4:	f8bd 0034 	ldrh.w	r0, [sp, #52]	@ 0x34
 800eaa8:	1a80      	subs	r0, r0, r2
 800eaaa:	1ac0      	subs	r0, r0, r3
 800eaac:	e773      	b.n	800e996 <_ZN8touchgfx3LCD13drawStringLTRERKNS_4RectES3_RKNS0_13StringVisualsEPKtSt9__va_list+0x136>
 800eaae:	2000      	movs	r0, #0
 800eab0:	e772      	b.n	800e998 <_ZN8touchgfx3LCD13drawStringLTRERKNS_4RectES3_RKNS0_13StringVisualsEPKtSt9__va_list+0x138>
 800eab2:	7be0      	ldrb	r0, [r4, #15]
 800eab4:	e770      	b.n	800e998 <_ZN8touchgfx3LCD13drawStringLTRERKNS_4RectES3_RKNS0_13StringVisualsEPKtSt9__va_list+0x138>
 800eab6:	f647 72ff 	movw	r2, #32767	@ 0x7fff
 800eaba:	e773      	b.n	800e9a4 <_ZN8touchgfx3LCD13drawStringLTRERKNS_4RectES3_RKNS0_13StringVisualsEPKtSt9__va_list+0x144>
 800eabc:	f1ba 0f00 	cmp.w	sl, #0
 800eac0:	d0f7      	beq.n	800eab2 <_ZN8touchgfx3LCD13drawStringLTRERKNS_4RectES3_RKNS0_13StringVisualsEPKtSt9__va_list+0x252>
 800eac2:	2264      	movs	r2, #100	@ 0x64
 800eac4:	4639      	mov	r1, r7
 800eac6:	a849      	add	r0, sp, #292	@ 0x124
 800eac8:	f012 f979 	bl	8020dbe <memcpy>
 800eacc:	2300      	movs	r3, #0
 800eace:	f647 72ff 	movw	r2, #32767	@ 0x7fff
 800ead2:	6821      	ldr	r1, [r4, #0]
 800ead4:	a849      	add	r0, sp, #292	@ 0x124
 800ead6:	f7ff fb9a 	bl	800e20e <_ZN8touchgfx3LCD11stringWidthERNS_12TextProviderERKNS_4FontEih>
 800eada:	b203      	sxth	r3, r0
 800eadc:	e751      	b.n	800e982 <_ZN8touchgfx3LCD13drawStringLTRERKNS_4RectES3_RKNS0_13StringVisualsEPKtSt9__va_list+0x122>

0800eade <_ZN8touchgfx3LCD5realXERKNS_4RectEssNS_12TextRotationE>:
 800eade:	2b03      	cmp	r3, #3
 800eae0:	d818      	bhi.n	800eb14 <_ZN8touchgfx3LCD5realXERKNS_4RectEssNS_12TextRotationE+0x36>
 800eae2:	e8df f003 	tbb	[pc, r3]
 800eae6:	0602      	.short	0x0602
 800eae8:	130d      	.short	0x130d
 800eaea:	f9b0 2000 	ldrsh.w	r2, [r0]
 800eaee:	1850      	adds	r0, r2, r1
 800eaf0:	4770      	bx	lr
 800eaf2:	8803      	ldrh	r3, [r0, #0]
 800eaf4:	8880      	ldrh	r0, [r0, #4]
 800eaf6:	4418      	add	r0, r3
 800eaf8:	b200      	sxth	r0, r0
 800eafa:	1a80      	subs	r0, r0, r2
 800eafc:	3801      	subs	r0, #1
 800eafe:	4770      	bx	lr
 800eb00:	8803      	ldrh	r3, [r0, #0]
 800eb02:	8880      	ldrh	r0, [r0, #4]
 800eb04:	4418      	add	r0, r3
 800eb06:	b200      	sxth	r0, r0
 800eb08:	1a40      	subs	r0, r0, r1
 800eb0a:	e7f7      	b.n	800eafc <_ZN8touchgfx3LCD5realXERKNS_4RectEssNS_12TextRotationE+0x1e>
 800eb0c:	f9b0 0000 	ldrsh.w	r0, [r0]
 800eb10:	4410      	add	r0, r2
 800eb12:	4770      	bx	lr
 800eb14:	2000      	movs	r0, #0
 800eb16:	4770      	bx	lr

0800eb18 <_ZN8touchgfx3LCD5realYERKNS_4RectEssNS_12TextRotationE>:
 800eb18:	2b03      	cmp	r3, #3
 800eb1a:	d817      	bhi.n	800eb4c <_ZN8touchgfx3LCD5realYERKNS_4RectEssNS_12TextRotationE+0x34>
 800eb1c:	e8df f003 	tbb	[pc, r3]
 800eb20:	10090602 	.word	0x10090602
 800eb24:	f9b0 1002 	ldrsh.w	r1, [r0, #2]
 800eb28:	1850      	adds	r0, r2, r1
 800eb2a:	4770      	bx	lr
 800eb2c:	f9b0 2002 	ldrsh.w	r2, [r0, #2]
 800eb30:	e7fa      	b.n	800eb28 <_ZN8touchgfx3LCD5realYERKNS_4RectEssNS_12TextRotationE+0x10>
 800eb32:	8843      	ldrh	r3, [r0, #2]
 800eb34:	88c0      	ldrh	r0, [r0, #6]
 800eb36:	4418      	add	r0, r3
 800eb38:	b200      	sxth	r0, r0
 800eb3a:	1a80      	subs	r0, r0, r2
 800eb3c:	3801      	subs	r0, #1
 800eb3e:	4770      	bx	lr
 800eb40:	8843      	ldrh	r3, [r0, #2]
 800eb42:	88c0      	ldrh	r0, [r0, #6]
 800eb44:	4418      	add	r0, r3
 800eb46:	b200      	sxth	r0, r0
 800eb48:	1a40      	subs	r0, r0, r1
 800eb4a:	e7f7      	b.n	800eb3c <_ZN8touchgfx3LCD5realYERKNS_4RectEssNS_12TextRotationE+0x24>
 800eb4c:	2000      	movs	r0, #0
 800eb4e:	4770      	bx	lr

0800eb50 <_GLOBAL__sub_I__ZN8touchgfx3LCD12defaultColorE>:
 800eb50:	4b01      	ldr	r3, [pc, #4]	@ (800eb58 <_GLOBAL__sub_I__ZN8touchgfx3LCD12defaultColorE+0x8>)
 800eb52:	2200      	movs	r2, #0
 800eb54:	601a      	str	r2, [r3, #0]
 800eb56:	4770      	bx	lr
 800eb58:	20002c64 	.word	0x20002c64

0800eb5c <_ZN8touchgfx16TouchCalibration4clzuEm>:
 800eb5c:	4603      	mov	r3, r0
 800eb5e:	b1c8      	cbz	r0, 800eb94 <_ZN8touchgfx16TouchCalibration4clzuEm+0x38>
 800eb60:	0c02      	lsrs	r2, r0, #16
 800eb62:	0412      	lsls	r2, r2, #16
 800eb64:	b9a2      	cbnz	r2, 800eb90 <_ZN8touchgfx16TouchCalibration4clzuEm+0x34>
 800eb66:	0403      	lsls	r3, r0, #16
 800eb68:	2010      	movs	r0, #16
 800eb6a:	f013 4f7f 	tst.w	r3, #4278190080	@ 0xff000000
 800eb6e:	bf04      	itt	eq
 800eb70:	021b      	lsleq	r3, r3, #8
 800eb72:	3008      	addeq	r0, #8
 800eb74:	f013 4f70 	tst.w	r3, #4026531840	@ 0xf0000000
 800eb78:	bf04      	itt	eq
 800eb7a:	011b      	lsleq	r3, r3, #4
 800eb7c:	3004      	addeq	r0, #4
 800eb7e:	f013 4f40 	tst.w	r3, #3221225472	@ 0xc0000000
 800eb82:	bf04      	itt	eq
 800eb84:	009b      	lsleq	r3, r3, #2
 800eb86:	3002      	addeq	r0, #2
 800eb88:	2b00      	cmp	r3, #0
 800eb8a:	db04      	blt.n	800eb96 <_ZN8touchgfx16TouchCalibration4clzuEm+0x3a>
 800eb8c:	3001      	adds	r0, #1
 800eb8e:	4770      	bx	lr
 800eb90:	2000      	movs	r0, #0
 800eb92:	e7ea      	b.n	800eb6a <_ZN8touchgfx16TouchCalibration4clzuEm+0xe>
 800eb94:	2020      	movs	r0, #32
 800eb96:	4770      	bx	lr

0800eb98 <_ZN8touchgfx16TouchCalibration7muldivuEmmmmmRm>:
 800eb98:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 800eb9c:	b087      	sub	sp, #28
 800eb9e:	460d      	mov	r5, r1
 800eba0:	4616      	mov	r6, r2
 800eba2:	4698      	mov	r8, r3
 800eba4:	e9dd 4710 	ldrd	r4, r7, [sp, #64]	@ 0x40
 800eba8:	4601      	mov	r1, r0
 800ebaa:	b120      	cbz	r0, 800ebb6 <_ZN8touchgfx16TouchCalibration7muldivuEmmmmmRm+0x1e>
 800ebac:	b11a      	cbz	r2, 800ebb6 <_ZN8touchgfx16TouchCalibration7muldivuEmmmmmRm+0x1e>
 800ebae:	2d1f      	cmp	r5, #31
 800ebb0:	d801      	bhi.n	800ebb6 <_ZN8touchgfx16TouchCalibration7muldivuEmmmmmRm+0x1e>
 800ebb2:	2b1f      	cmp	r3, #31
 800ebb4:	d904      	bls.n	800ebc0 <_ZN8touchgfx16TouchCalibration7muldivuEmmmmmRm+0x28>
 800ebb6:	2000      	movs	r0, #0
 800ebb8:	6038      	str	r0, [r7, #0]
 800ebba:	b007      	add	sp, #28
 800ebbc:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 800ebc0:	b97d      	cbnz	r5, 800ebe2 <_ZN8touchgfx16TouchCalibration7muldivuEmmmmmRm+0x4a>
 800ebc2:	b143      	cbz	r3, 800ebd6 <_ZN8touchgfx16TouchCalibration7muldivuEmmmmmRm+0x3e>
 800ebc4:	4602      	mov	r2, r0
 800ebc6:	e9cd 4700 	strd	r4, r7, [sp]
 800ebca:	462b      	mov	r3, r5
 800ebcc:	4641      	mov	r1, r8
 800ebce:	4630      	mov	r0, r6
 800ebd0:	f7ff ffe2 	bl	800eb98 <_ZN8touchgfx16TouchCalibration7muldivuEmmmmmRm>
 800ebd4:	e7f1      	b.n	800ebba <_ZN8touchgfx16TouchCalibration7muldivuEmmmmmRm+0x22>
 800ebd6:	f04f 33ff 	mov.w	r3, #4294967295
 800ebda:	603b      	str	r3, [r7, #0]
 800ebdc:	f06f 4000 	mvn.w	r0, #2147483648	@ 0x80000000
 800ebe0:	e7eb      	b.n	800ebba <_ZN8touchgfx16TouchCalibration7muldivuEmmmmmRm+0x22>
 800ebe2:	fa32 fa05 	lsrs.w	sl, r2, r5
 800ebe6:	d106      	bne.n	800ebf6 <_ZN8touchgfx16TouchCalibration7muldivuEmmmmmRm+0x5e>
 800ebe8:	4346      	muls	r6, r0
 800ebea:	fbb6 f0f4 	udiv	r0, r6, r4
 800ebee:	fb04 6610 	mls	r6, r4, r0, r6
 800ebf2:	603e      	str	r6, [r7, #0]
 800ebf4:	e7e1      	b.n	800ebba <_ZN8touchgfx16TouchCalibration7muldivuEmmmmmRm+0x22>
 800ebf6:	2201      	movs	r2, #1
 800ebf8:	40aa      	lsls	r2, r5
 800ebfa:	3a01      	subs	r2, #1
 800ebfc:	4016      	ands	r6, r2
 800ebfe:	fa00 fb05 	lsl.w	fp, r0, r5
 800ec02:	4630      	mov	r0, r6
 800ec04:	fbbb f9f4 	udiv	r9, fp, r4
 800ec08:	fb0a f309 	mul.w	r3, sl, r9
 800ec0c:	9303      	str	r3, [sp, #12]
 800ec0e:	f7ff ffa5 	bl	800eb5c <_ZN8touchgfx16TouchCalibration4clzuEm>
 800ec12:	462b      	mov	r3, r5
 800ec14:	460a      	mov	r2, r1
 800ec16:	e9cd 4700 	strd	r4, r7, [sp]
 800ec1a:	4601      	mov	r1, r0
 800ec1c:	4630      	mov	r0, r6
 800ec1e:	f7ff ffbb 	bl	800eb98 <_ZN8touchgfx16TouchCalibration7muldivuEmmmmmRm>
 800ec22:	fb04 b919 	mls	r9, r4, r9, fp
 800ec26:	4606      	mov	r6, r0
 800ec28:	4648      	mov	r0, r9
 800ec2a:	eb05 0108 	add.w	r1, r5, r8
 800ec2e:	f7ff ff95 	bl	800eb5c <_ZN8touchgfx16TouchCalibration4clzuEm>
 800ec32:	ab05      	add	r3, sp, #20
 800ec34:	e9cd 4300 	strd	r4, r3, [sp]
 800ec38:	464a      	mov	r2, r9
 800ec3a:	4603      	mov	r3, r0
 800ec3c:	4650      	mov	r0, sl
 800ec3e:	f7ff ffab 	bl	800eb98 <_ZN8touchgfx16TouchCalibration7muldivuEmmmmmRm>
 800ec42:	6839      	ldr	r1, [r7, #0]
 800ec44:	9a05      	ldr	r2, [sp, #20]
 800ec46:	9b03      	ldr	r3, [sp, #12]
 800ec48:	4411      	add	r1, r2
 800ec4a:	fbb1 f2f4 	udiv	r2, r1, r4
 800ec4e:	18d3      	adds	r3, r2, r3
 800ec50:	441e      	add	r6, r3
 800ec52:	fb04 1412 	mls	r4, r4, r2, r1
 800ec56:	4430      	add	r0, r6
 800ec58:	603c      	str	r4, [r7, #0]
 800ec5a:	e7ae      	b.n	800ebba <_ZN8touchgfx16TouchCalibration7muldivuEmmmmmRm+0x22>

0800ec5c <_ZN8touchgfx16TouchCalibration6muldivEllllRl>:
 800ec5c:	e92d 43f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, lr}
 800ec60:	b085      	sub	sp, #20
 800ec62:	f1b0 0900 	subs.w	r9, r0, #0
 800ec66:	9c0c      	ldr	r4, [sp, #48]	@ 0x30
 800ec68:	461d      	mov	r5, r3
 800ec6a:	bfbf      	itttt	lt
 800ec6c:	6823      	ldrlt	r3, [r4, #0]
 800ec6e:	425b      	neglt	r3, r3
 800ec70:	f1c9 0900 	rsblt	r9, r9, #0
 800ec74:	6023      	strlt	r3, [r4, #0]
 800ec76:	bfb4      	ite	lt
 800ec78:	f04f 36ff 	movlt.w	r6, #4294967295
 800ec7c:	2601      	movge	r6, #1
 800ec7e:	2a00      	cmp	r2, #0
 800ec80:	4617      	mov	r7, r2
 800ec82:	da04      	bge.n	800ec8e <_ZN8touchgfx16TouchCalibration6muldivEllllRl+0x32>
 800ec84:	6823      	ldr	r3, [r4, #0]
 800ec86:	425b      	negs	r3, r3
 800ec88:	4257      	negs	r7, r2
 800ec8a:	4276      	negs	r6, r6
 800ec8c:	6023      	str	r3, [r4, #0]
 800ec8e:	2d00      	cmp	r5, #0
 800ec90:	4638      	mov	r0, r7
 800ec92:	bfba      	itte	lt
 800ec94:	426d      	neglt	r5, r5
 800ec96:	f04f 38ff 	movlt.w	r8, #4294967295
 800ec9a:	f04f 0801 	movge.w	r8, #1
 800ec9e:	f7ff ff5d 	bl	800eb5c <_ZN8touchgfx16TouchCalibration4clzuEm>
 800eca2:	ab03      	add	r3, sp, #12
 800eca4:	e9cd 5300 	strd	r5, r3, [sp]
 800eca8:	463a      	mov	r2, r7
 800ecaa:	4603      	mov	r3, r0
 800ecac:	4648      	mov	r0, r9
 800ecae:	f7ff ff73 	bl	800eb98 <_ZN8touchgfx16TouchCalibration7muldivuEmmmmmRm>
 800ecb2:	6823      	ldr	r3, [r4, #0]
 800ecb4:	9a03      	ldr	r2, [sp, #12]
 800ecb6:	4546      	cmp	r6, r8
 800ecb8:	441a      	add	r2, r3
 800ecba:	fb92 f3f5 	sdiv	r3, r2, r5
 800ecbe:	4418      	add	r0, r3
 800ecc0:	bf18      	it	ne
 800ecc2:	4240      	negne	r0, r0
 800ecc4:	fb05 2313 	mls	r3, r5, r3, r2
 800ecc8:	1c72      	adds	r2, r6, #1
 800ecca:	6023      	str	r3, [r4, #0]
 800eccc:	d105      	bne.n	800ecda <_ZN8touchgfx16TouchCalibration6muldivEllllRl+0x7e>
 800ecce:	2b00      	cmp	r3, #0
 800ecd0:	f1c3 0200 	rsb	r2, r3, #0
 800ecd4:	db0b      	blt.n	800ecee <_ZN8touchgfx16TouchCalibration6muldivEllllRl+0x92>
 800ecd6:	6022      	str	r2, [r4, #0]
 800ecd8:	e006      	b.n	800ece8 <_ZN8touchgfx16TouchCalibration6muldivEllllRl+0x8c>
 800ecda:	2e01      	cmp	r6, #1
 800ecdc:	d104      	bne.n	800ece8 <_ZN8touchgfx16TouchCalibration6muldivEllllRl+0x8c>
 800ecde:	2b00      	cmp	r3, #0
 800ece0:	da02      	bge.n	800ece8 <_ZN8touchgfx16TouchCalibration6muldivEllllRl+0x8c>
 800ece2:	442b      	add	r3, r5
 800ece4:	3801      	subs	r0, #1
 800ece6:	6023      	str	r3, [r4, #0]
 800ece8:	b005      	add	sp, #20
 800ecea:	e8bd 83f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, pc}
 800ecee:	3801      	subs	r0, #1
 800ecf0:	1b52      	subs	r2, r2, r5
 800ecf2:	e7f0      	b.n	800ecd6 <_ZN8touchgfx16TouchCalibration6muldivEllllRl+0x7a>

0800ecf4 <_ZN8touchgfx16TouchCalibration14translatePointERNS_5PointE>:
 800ecf4:	e92d 41ff 	stmdb	sp!, {r0, r1, r2, r3, r4, r5, r6, r7, r8, lr}
 800ecf8:	4c1c      	ldr	r4, [pc, #112]	@ (800ed6c <_ZN8touchgfx16TouchCalibration14translatePointERNS_5PointE+0x78>)
 800ecfa:	6807      	ldr	r7, [r0, #0]
 800ecfc:	69a3      	ldr	r3, [r4, #24]
 800ecfe:	4605      	mov	r5, r0
 800ed00:	b92b      	cbnz	r3, 800ed0e <_ZN8touchgfx16TouchCalibration14translatePointERNS_5PointE+0x1a>
 800ed02:	6840      	ldr	r0, [r0, #4]
 800ed04:	e9c5 7000 	strd	r7, r0, [r5]
 800ed08:	b004      	add	sp, #16
 800ed0a:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
 800ed0e:	68a2      	ldr	r2, [r4, #8]
 800ed10:	6820      	ldr	r0, [r4, #0]
 800ed12:	ae04      	add	r6, sp, #16
 800ed14:	f04f 0802 	mov.w	r8, #2
 800ed18:	fb93 f1f8 	sdiv	r1, r3, r8
 800ed1c:	440a      	add	r2, r1
 800ed1e:	f846 2d04 	str.w	r2, [r6, #-4]!
 800ed22:	69e1      	ldr	r1, [r4, #28]
 800ed24:	9600      	str	r6, [sp, #0]
 800ed26:	463a      	mov	r2, r7
 800ed28:	f7ff ff98 	bl	800ec5c <_ZN8touchgfx16TouchCalibration6muldivEllllRl>
 800ed2c:	69a3      	ldr	r3, [r4, #24]
 800ed2e:	686a      	ldr	r2, [r5, #4]
 800ed30:	6a21      	ldr	r1, [r4, #32]
 800ed32:	9600      	str	r6, [sp, #0]
 800ed34:	4607      	mov	r7, r0
 800ed36:	6860      	ldr	r0, [r4, #4]
 800ed38:	f7ff ff90 	bl	800ec5c <_ZN8touchgfx16TouchCalibration6muldivEllllRl>
 800ed3c:	6962      	ldr	r2, [r4, #20]
 800ed3e:	69a3      	ldr	r3, [r4, #24]
 800ed40:	fb93 f8f8 	sdiv	r8, r3, r8
 800ed44:	4442      	add	r2, r8
 800ed46:	9203      	str	r2, [sp, #12]
 800ed48:	6a61      	ldr	r1, [r4, #36]	@ 0x24
 800ed4a:	682a      	ldr	r2, [r5, #0]
 800ed4c:	9600      	str	r6, [sp, #0]
 800ed4e:	4407      	add	r7, r0
 800ed50:	68e0      	ldr	r0, [r4, #12]
 800ed52:	f7ff ff83 	bl	800ec5c <_ZN8touchgfx16TouchCalibration6muldivEllllRl>
 800ed56:	9600      	str	r6, [sp, #0]
 800ed58:	4680      	mov	r8, r0
 800ed5a:	69a3      	ldr	r3, [r4, #24]
 800ed5c:	686a      	ldr	r2, [r5, #4]
 800ed5e:	6aa1      	ldr	r1, [r4, #40]	@ 0x28
 800ed60:	6920      	ldr	r0, [r4, #16]
 800ed62:	f7ff ff7b 	bl	800ec5c <_ZN8touchgfx16TouchCalibration6muldivEllllRl>
 800ed66:	4440      	add	r0, r8
 800ed68:	e7cc      	b.n	800ed04 <_ZN8touchgfx16TouchCalibration14translatePointERNS_5PointE+0x10>
 800ed6a:	bf00      	nop
 800ed6c:	20002c68 	.word	0x20002c68

0800ed70 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERsS1_>:
 800ed70:	4b07      	ldr	r3, [pc, #28]	@ (800ed90 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERsS1_+0x20>)
 800ed72:	781b      	ldrb	r3, [r3, #0]
 800ed74:	2b01      	cmp	r3, #1
 800ed76:	d109      	bne.n	800ed8c <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERsS1_+0x1c>
 800ed78:	f9b1 3000 	ldrsh.w	r3, [r1]
 800ed7c:	f9b0 2000 	ldrsh.w	r2, [r0]
 800ed80:	8003      	strh	r3, [r0, #0]
 800ed82:	4b04      	ldr	r3, [pc, #16]	@ (800ed94 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERsS1_+0x24>)
 800ed84:	881b      	ldrh	r3, [r3, #0]
 800ed86:	3b01      	subs	r3, #1
 800ed88:	1a9b      	subs	r3, r3, r2
 800ed8a:	800b      	strh	r3, [r1, #0]
 800ed8c:	4770      	bx	lr
 800ed8e:	bf00      	nop
 800ed90:	20002c54 	.word	0x20002c54
 800ed94:	20002c50 	.word	0x20002c50

0800ed98 <_ZN8touchgfx21DisplayTransformation29transformFrameBufferToDisplayERsS1_>:
 800ed98:	b510      	push	{r4, lr}
 800ed9a:	4b07      	ldr	r3, [pc, #28]	@ (800edb8 <_ZN8touchgfx21DisplayTransformation29transformFrameBufferToDisplayERsS1_+0x20>)
 800ed9c:	781b      	ldrb	r3, [r3, #0]
 800ed9e:	2b01      	cmp	r3, #1
 800eda0:	d108      	bne.n	800edb4 <_ZN8touchgfx21DisplayTransformation29transformFrameBufferToDisplayERsS1_+0x1c>
 800eda2:	4b06      	ldr	r3, [pc, #24]	@ (800edbc <_ZN8touchgfx21DisplayTransformation29transformFrameBufferToDisplayERsS1_+0x24>)
 800eda4:	880c      	ldrh	r4, [r1, #0]
 800eda6:	881b      	ldrh	r3, [r3, #0]
 800eda8:	f9b0 2000 	ldrsh.w	r2, [r0]
 800edac:	3b01      	subs	r3, #1
 800edae:	1b1b      	subs	r3, r3, r4
 800edb0:	8003      	strh	r3, [r0, #0]
 800edb2:	800a      	strh	r2, [r1, #0]
 800edb4:	bd10      	pop	{r4, pc}
 800edb6:	bf00      	nop
 800edb8:	20002c54 	.word	0x20002c54
 800edbc:	20002c50 	.word	0x20002c50

0800edc0 <_ZN8touchgfx21DisplayTransformation29transformFrameBufferToDisplayERNS_4RectE>:
 800edc0:	b510      	push	{r4, lr}
 800edc2:	4b0a      	ldr	r3, [pc, #40]	@ (800edec <_ZN8touchgfx21DisplayTransformation29transformFrameBufferToDisplayERNS_4RectE+0x2c>)
 800edc4:	781b      	ldrb	r3, [r3, #0]
 800edc6:	2b01      	cmp	r3, #1
 800edc8:	d10e      	bne.n	800ede8 <_ZN8touchgfx21DisplayTransformation29transformFrameBufferToDisplayERNS_4RectE+0x28>
 800edca:	f9b0 1006 	ldrsh.w	r1, [r0, #6]
 800edce:	8843      	ldrh	r3, [r0, #2]
 800edd0:	f9b0 4000 	ldrsh.w	r4, [r0]
 800edd4:	8044      	strh	r4, [r0, #2]
 800edd6:	18ca      	adds	r2, r1, r3
 800edd8:	4b05      	ldr	r3, [pc, #20]	@ (800edf0 <_ZN8touchgfx21DisplayTransformation29transformFrameBufferToDisplayERNS_4RectE+0x30>)
 800edda:	881b      	ldrh	r3, [r3, #0]
 800eddc:	1a9b      	subs	r3, r3, r2
 800edde:	8003      	strh	r3, [r0, #0]
 800ede0:	f9b0 3004 	ldrsh.w	r3, [r0, #4]
 800ede4:	80c3      	strh	r3, [r0, #6]
 800ede6:	8081      	strh	r1, [r0, #4]
 800ede8:	bd10      	pop	{r4, pc}
 800edea:	bf00      	nop
 800edec:	20002c54 	.word	0x20002c54
 800edf0:	20002c50 	.word	0x20002c50

0800edf4 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectE>:
 800edf4:	4b08      	ldr	r3, [pc, #32]	@ (800ee18 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectE+0x24>)
 800edf6:	781b      	ldrb	r3, [r3, #0]
 800edf8:	2b01      	cmp	r3, #1
 800edfa:	d10c      	bne.n	800ee16 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectE+0x22>
 800edfc:	8803      	ldrh	r3, [r0, #0]
 800edfe:	f9b0 1004 	ldrsh.w	r1, [r0, #4]
 800ee02:	8842      	ldrh	r2, [r0, #2]
 800ee04:	8002      	strh	r2, [r0, #0]
 800ee06:	185a      	adds	r2, r3, r1
 800ee08:	4b04      	ldr	r3, [pc, #16]	@ (800ee1c <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectE+0x28>)
 800ee0a:	881b      	ldrh	r3, [r3, #0]
 800ee0c:	1a9b      	subs	r3, r3, r2
 800ee0e:	8043      	strh	r3, [r0, #2]
 800ee10:	88c3      	ldrh	r3, [r0, #6]
 800ee12:	8083      	strh	r3, [r0, #4]
 800ee14:	80c1      	strh	r1, [r0, #6]
 800ee16:	4770      	bx	lr
 800ee18:	20002c54 	.word	0x20002c54
 800ee1c:	20002c50 	.word	0x20002c50

0800ee20 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERsS1_RKNS_4RectE>:
 800ee20:	b510      	push	{r4, lr}
 800ee22:	4b07      	ldr	r3, [pc, #28]	@ (800ee40 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERsS1_RKNS_4RectE+0x20>)
 800ee24:	781b      	ldrb	r3, [r3, #0]
 800ee26:	2b01      	cmp	r3, #1
 800ee28:	d108      	bne.n	800ee3c <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERsS1_RKNS_4RectE+0x1c>
 800ee2a:	f9b1 3000 	ldrsh.w	r3, [r1]
 800ee2e:	f9b0 4000 	ldrsh.w	r4, [r0]
 800ee32:	8003      	strh	r3, [r0, #0]
 800ee34:	8893      	ldrh	r3, [r2, #4]
 800ee36:	3b01      	subs	r3, #1
 800ee38:	1b1b      	subs	r3, r3, r4
 800ee3a:	800b      	strh	r3, [r1, #0]
 800ee3c:	bd10      	pop	{r4, pc}
 800ee3e:	bf00      	nop
 800ee40:	20002c54 	.word	0x20002c54

0800ee44 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectERKS1_>:
 800ee44:	b510      	push	{r4, lr}
 800ee46:	4b0a      	ldr	r3, [pc, #40]	@ (800ee70 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectERKS1_+0x2c>)
 800ee48:	781b      	ldrb	r3, [r3, #0]
 800ee4a:	2b01      	cmp	r3, #1
 800ee4c:	460a      	mov	r2, r1
 800ee4e:	d10d      	bne.n	800ee6c <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectERKS1_+0x28>
 800ee50:	8881      	ldrh	r1, [r0, #4]
 800ee52:	8803      	ldrh	r3, [r0, #0]
 800ee54:	440b      	add	r3, r1
 800ee56:	4601      	mov	r1, r0
 800ee58:	3b01      	subs	r3, #1
 800ee5a:	f821 3b02 	strh.w	r3, [r1], #2
 800ee5e:	f7ff ffdf 	bl	800ee20 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERsS1_RKNS_4RectE>
 800ee62:	f9b0 3004 	ldrsh.w	r3, [r0, #4]
 800ee66:	88c2      	ldrh	r2, [r0, #6]
 800ee68:	8082      	strh	r2, [r0, #4]
 800ee6a:	80c3      	strh	r3, [r0, #6]
 800ee6c:	bd10      	pop	{r4, pc}
 800ee6e:	bf00      	nop
 800ee70:	20002c54 	.word	0x20002c54

0800ee74 <_ZN8touchgfx11Application13requestRedrawEv>:
 800ee74:	4b06      	ldr	r3, [pc, #24]	@ (800ee90 <_ZN8touchgfx11Application13requestRedrawEv+0x1c>)
 800ee76:	f9b3 2000 	ldrsh.w	r2, [r3]
 800ee7a:	4b06      	ldr	r3, [pc, #24]	@ (800ee94 <_ZN8touchgfx11Application13requestRedrawEv+0x20>)
 800ee7c:	f8a0 2134 	strh.w	r2, [r0, #308]	@ 0x134
 800ee80:	f9b3 3000 	ldrsh.w	r3, [r3]
 800ee84:	f8a0 3136 	strh.w	r3, [r0, #310]	@ 0x136
 800ee88:	2100      	movs	r1, #0
 800ee8a:	f8c0 1130 	str.w	r1, [r0, #304]	@ 0x130
 800ee8e:	4770      	bx	lr
 800ee90:	20002c50 	.word	0x20002c50
 800ee94:	20002c52 	.word	0x20002c52

0800ee98 <_ZN8touchgfx11Application16handleClickEventERKNS_10ClickEventE>:
 800ee98:	4b03      	ldr	r3, [pc, #12]	@ (800eea8 <_ZN8touchgfx11Application16handleClickEventERKNS_10ClickEventE+0x10>)
 800ee9a:	6818      	ldr	r0, [r3, #0]
 800ee9c:	b110      	cbz	r0, 800eea4 <_ZN8touchgfx11Application16handleClickEventERKNS_10ClickEventE+0xc>
 800ee9e:	6803      	ldr	r3, [r0, #0]
 800eea0:	699b      	ldr	r3, [r3, #24]
 800eea2:	4718      	bx	r3
 800eea4:	4770      	bx	lr
 800eea6:	bf00      	nop
 800eea8:	20002c98 	.word	0x20002c98

0800eeac <_ZN8touchgfx11Application29handlePendingScreenTransitionEv>:
 800eeac:	4770      	bx	lr
	...

0800eeb0 <_ZN8touchgfx11Application4drawEv>:
 800eeb0:	b507      	push	{r0, r1, r2, lr}
 800eeb2:	4b09      	ldr	r3, [pc, #36]	@ (800eed8 <_ZN8touchgfx11Application4drawEv+0x28>)
 800eeb4:	f9b3 2000 	ldrsh.w	r2, [r3]
 800eeb8:	4b08      	ldr	r3, [pc, #32]	@ (800eedc <_ZN8touchgfx11Application4drawEv+0x2c>)
 800eeba:	f8ad 2004 	strh.w	r2, [sp, #4]
 800eebe:	f9b3 3000 	ldrsh.w	r3, [r3]
 800eec2:	f8ad 3006 	strh.w	r3, [sp, #6]
 800eec6:	6803      	ldr	r3, [r0, #0]
 800eec8:	2100      	movs	r1, #0
 800eeca:	9100      	str	r1, [sp, #0]
 800eecc:	6c9b      	ldr	r3, [r3, #72]	@ 0x48
 800eece:	4669      	mov	r1, sp
 800eed0:	4798      	blx	r3
 800eed2:	b003      	add	sp, #12
 800eed4:	f85d fb04 	ldr.w	pc, [sp], #4
 800eed8:	20002c50 	.word	0x20002c50
 800eedc:	20002c52 	.word	0x20002c52

0800eee0 <_ZN8touchgfx11Application10invalidateEv>:
 800eee0:	4b09      	ldr	r3, [pc, #36]	@ (800ef08 <_ZN8touchgfx11Application10invalidateEv+0x28>)
 800eee2:	f9b3 2000 	ldrsh.w	r2, [r3]
 800eee6:	4b09      	ldr	r3, [pc, #36]	@ (800ef0c <_ZN8touchgfx11Application10invalidateEv+0x2c>)
 800eee8:	b082      	sub	sp, #8
 800eeea:	f9b3 3000 	ldrsh.w	r3, [r3]
 800eeee:	f8ad 2004 	strh.w	r2, [sp, #4]
 800eef2:	2100      	movs	r1, #0
 800eef4:	f8ad 3006 	strh.w	r3, [sp, #6]
 800eef8:	9100      	str	r1, [sp, #0]
 800eefa:	6803      	ldr	r3, [r0, #0]
 800eefc:	aa02      	add	r2, sp, #8
 800eefe:	e912 0006 	ldmdb	r2, {r1, r2}
 800ef02:	6c1b      	ldr	r3, [r3, #64]	@ 0x40
 800ef04:	b002      	add	sp, #8
 800ef06:	4718      	bx	r3
 800ef08:	20002c50 	.word	0x20002c50
 800ef0c:	20002c52 	.word	0x20002c52

0800ef10 <_ZN8touchgfx11Application15handleDragEventERKNS_9DragEventE>:
 800ef10:	4b03      	ldr	r3, [pc, #12]	@ (800ef20 <_ZN8touchgfx11Application15handleDragEventERKNS_9DragEventE+0x10>)
 800ef12:	6818      	ldr	r0, [r3, #0]
 800ef14:	b110      	cbz	r0, 800ef1c <_ZN8touchgfx11Application15handleDragEventERKNS_9DragEventE+0xc>
 800ef16:	6803      	ldr	r3, [r0, #0]
 800ef18:	69db      	ldr	r3, [r3, #28]
 800ef1a:	4718      	bx	r3
 800ef1c:	4770      	bx	lr
 800ef1e:	bf00      	nop
 800ef20:	20002c98 	.word	0x20002c98

0800ef24 <_ZN8touchgfx11Application18handleGestureEventERKNS_12GestureEventE>:
 800ef24:	4b03      	ldr	r3, [pc, #12]	@ (800ef34 <_ZN8touchgfx11Application18handleGestureEventERKNS_12GestureEventE+0x10>)
 800ef26:	6818      	ldr	r0, [r3, #0]
 800ef28:	b110      	cbz	r0, 800ef30 <_ZN8touchgfx11Application18handleGestureEventERKNS_12GestureEventE+0xc>
 800ef2a:	6803      	ldr	r3, [r0, #0]
 800ef2c:	6a1b      	ldr	r3, [r3, #32]
 800ef2e:	4718      	bx	r3
 800ef30:	4770      	bx	lr
 800ef32:	bf00      	nop
 800ef34:	20002c98 	.word	0x20002c98

0800ef38 <_ZN8touchgfx11Application16clearCachedAreasEv>:
 800ef38:	2300      	movs	r3, #0
 800ef3a:	f8a0 30ec 	strh.w	r3, [r0, #236]	@ 0xec
 800ef3e:	4770      	bx	lr

0800ef40 <_ZN8touchgfx11Application14handleKeyEventEh>:
 800ef40:	4b03      	ldr	r3, [pc, #12]	@ (800ef50 <_ZN8touchgfx11Application14handleKeyEventEh+0x10>)
 800ef42:	6818      	ldr	r0, [r3, #0]
 800ef44:	b110      	cbz	r0, 800ef4c <_ZN8touchgfx11Application14handleKeyEventEh+0xc>
 800ef46:	6803      	ldr	r3, [r0, #0]
 800ef48:	6a9b      	ldr	r3, [r3, #40]	@ 0x28
 800ef4a:	4718      	bx	r3
 800ef4c:	4770      	bx	lr
 800ef4e:	bf00      	nop
 800ef50:	20002c98 	.word	0x20002c98

0800ef54 <_ZNK8touchgfx4Rect9intersectERKS0_>:
 800ef54:	b510      	push	{r4, lr}
 800ef56:	f9b1 4000 	ldrsh.w	r4, [r1]
 800ef5a:	888a      	ldrh	r2, [r1, #4]
 800ef5c:	f9b0 3000 	ldrsh.w	r3, [r0]
 800ef60:	4422      	add	r2, r4
 800ef62:	b212      	sxth	r2, r2
 800ef64:	4293      	cmp	r3, r2
 800ef66:	da15      	bge.n	800ef94 <_ZNK8touchgfx4Rect9intersectERKS0_+0x40>
 800ef68:	8882      	ldrh	r2, [r0, #4]
 800ef6a:	4413      	add	r3, r2
 800ef6c:	b21b      	sxth	r3, r3
 800ef6e:	429c      	cmp	r4, r3
 800ef70:	da10      	bge.n	800ef94 <_ZNK8touchgfx4Rect9intersectERKS0_+0x40>
 800ef72:	f9b1 3002 	ldrsh.w	r3, [r1, #2]
 800ef76:	88c9      	ldrh	r1, [r1, #6]
 800ef78:	f9b0 2002 	ldrsh.w	r2, [r0, #2]
 800ef7c:	4419      	add	r1, r3
 800ef7e:	b209      	sxth	r1, r1
 800ef80:	428a      	cmp	r2, r1
 800ef82:	da07      	bge.n	800ef94 <_ZNK8touchgfx4Rect9intersectERKS0_+0x40>
 800ef84:	88c0      	ldrh	r0, [r0, #6]
 800ef86:	4410      	add	r0, r2
 800ef88:	b200      	sxth	r0, r0
 800ef8a:	4283      	cmp	r3, r0
 800ef8c:	bfac      	ite	ge
 800ef8e:	2000      	movge	r0, #0
 800ef90:	2001      	movlt	r0, #1
 800ef92:	bd10      	pop	{r4, pc}
 800ef94:	2000      	movs	r0, #0
 800ef96:	e7fc      	b.n	800ef92 <_ZNK8touchgfx4Rect9intersectERKS0_+0x3e>

0800ef98 <_ZN8touchgfx4Rect10restrictToEss>:
 800ef98:	f9b0 3000 	ldrsh.w	r3, [r0]
 800ef9c:	2b00      	cmp	r3, #0
 800ef9e:	b510      	push	{r4, lr}
 800efa0:	da04      	bge.n	800efac <_ZN8touchgfx4Rect10restrictToEss+0x14>
 800efa2:	8884      	ldrh	r4, [r0, #4]
 800efa4:	4423      	add	r3, r4
 800efa6:	8083      	strh	r3, [r0, #4]
 800efa8:	2300      	movs	r3, #0
 800efaa:	8003      	strh	r3, [r0, #0]
 800efac:	f9b0 4000 	ldrsh.w	r4, [r0]
 800efb0:	f9b0 3004 	ldrsh.w	r3, [r0, #4]
 800efb4:	1b09      	subs	r1, r1, r4
 800efb6:	428b      	cmp	r3, r1
 800efb8:	f9b0 3002 	ldrsh.w	r3, [r0, #2]
 800efbc:	bfc8      	it	gt
 800efbe:	8081      	strhgt	r1, [r0, #4]
 800efc0:	2b00      	cmp	r3, #0
 800efc2:	da04      	bge.n	800efce <_ZN8touchgfx4Rect10restrictToEss+0x36>
 800efc4:	88c1      	ldrh	r1, [r0, #6]
 800efc6:	440b      	add	r3, r1
 800efc8:	80c3      	strh	r3, [r0, #6]
 800efca:	2300      	movs	r3, #0
 800efcc:	8043      	strh	r3, [r0, #2]
 800efce:	f9b0 1002 	ldrsh.w	r1, [r0, #2]
 800efd2:	f9b0 3006 	ldrsh.w	r3, [r0, #6]
 800efd6:	1a52      	subs	r2, r2, r1
 800efd8:	4293      	cmp	r3, r2
 800efda:	bfc8      	it	gt
 800efdc:	80c2      	strhgt	r2, [r0, #6]
 800efde:	bd10      	pop	{r4, pc}

0800efe0 <_ZN8touchgfx11Application4drawERNS_4RectE>:
 800efe0:	b510      	push	{r4, lr}
 800efe2:	4b10      	ldr	r3, [pc, #64]	@ (800f024 <_ZN8touchgfx11Application4drawERNS_4RectE+0x44>)
 800efe4:	f9b3 2000 	ldrsh.w	r2, [r3]
 800efe8:	4b0f      	ldr	r3, [pc, #60]	@ (800f028 <_ZN8touchgfx11Application4drawERNS_4RectE+0x48>)
 800efea:	460c      	mov	r4, r1
 800efec:	4620      	mov	r0, r4
 800efee:	f9b3 1000 	ldrsh.w	r1, [r3]
 800eff2:	f7ff ffd1 	bl	800ef98 <_ZN8touchgfx4Rect10restrictToEss>
 800eff6:	4b0d      	ldr	r3, [pc, #52]	@ (800f02c <_ZN8touchgfx11Application4drawERNS_4RectE+0x4c>)
 800eff8:	6818      	ldr	r0, [r3, #0]
 800effa:	b190      	cbz	r0, 800f022 <_ZN8touchgfx11Application4drawERNS_4RectE+0x42>
 800effc:	6803      	ldr	r3, [r0, #0]
 800effe:	4621      	mov	r1, r4
 800f000:	689b      	ldr	r3, [r3, #8]
 800f002:	4798      	blx	r3
 800f004:	4b0a      	ldr	r3, [pc, #40]	@ (800f030 <_ZN8touchgfx11Application4drawERNS_4RectE+0x50>)
 800f006:	6818      	ldr	r0, [r3, #0]
 800f008:	b118      	cbz	r0, 800f012 <_ZN8touchgfx11Application4drawERNS_4RectE+0x32>
 800f00a:	6803      	ldr	r3, [r0, #0]
 800f00c:	4621      	mov	r1, r4
 800f00e:	689b      	ldr	r3, [r3, #8]
 800f010:	4798      	blx	r3
 800f012:	4b08      	ldr	r3, [pc, #32]	@ (800f034 <_ZN8touchgfx11Application4drawERNS_4RectE+0x54>)
 800f014:	6818      	ldr	r0, [r3, #0]
 800f016:	6803      	ldr	r3, [r0, #0]
 800f018:	4621      	mov	r1, r4
 800f01a:	69db      	ldr	r3, [r3, #28]
 800f01c:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
 800f020:	4718      	bx	r3
 800f022:	bd10      	pop	{r4, pc}
 800f024:	20002c52 	.word	0x20002c52
 800f028:	20002c50 	.word	0x20002c50
 800f02c:	20002c98 	.word	0x20002c98
 800f030:	20002c94 	.word	0x20002c94
 800f034:	20002c5c 	.word	0x20002c5c

0800f038 <_ZNK8touchgfx4Rect8includesERKS0_>:
 800f038:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 800f03a:	4606      	mov	r6, r0
 800f03c:	4608      	mov	r0, r1
 800f03e:	460f      	mov	r7, r1
 800f040:	f7fc fea1 	bl	800bd86 <_ZNK8touchgfx4Rect7isEmptyEv>
 800f044:	b9e8      	cbnz	r0, 800f082 <_ZNK8touchgfx4Rect8includesERKS0_+0x4a>
 800f046:	f9b7 5000 	ldrsh.w	r5, [r7]
 800f04a:	f9b6 4000 	ldrsh.w	r4, [r6]
 800f04e:	42a5      	cmp	r5, r4
 800f050:	db17      	blt.n	800f082 <_ZNK8touchgfx4Rect8includesERKS0_+0x4a>
 800f052:	f9b7 2002 	ldrsh.w	r2, [r7, #2]
 800f056:	f9b6 3002 	ldrsh.w	r3, [r6, #2]
 800f05a:	429a      	cmp	r2, r3
 800f05c:	db11      	blt.n	800f082 <_ZNK8touchgfx4Rect8includesERKS0_+0x4a>
 800f05e:	88b9      	ldrh	r1, [r7, #4]
 800f060:	440d      	add	r5, r1
 800f062:	88b1      	ldrh	r1, [r6, #4]
 800f064:	440c      	add	r4, r1
 800f066:	b22d      	sxth	r5, r5
 800f068:	b224      	sxth	r4, r4
 800f06a:	42a5      	cmp	r5, r4
 800f06c:	dc09      	bgt.n	800f082 <_ZNK8touchgfx4Rect8includesERKS0_+0x4a>
 800f06e:	88f8      	ldrh	r0, [r7, #6]
 800f070:	4410      	add	r0, r2
 800f072:	88f2      	ldrh	r2, [r6, #6]
 800f074:	4413      	add	r3, r2
 800f076:	b200      	sxth	r0, r0
 800f078:	b21b      	sxth	r3, r3
 800f07a:	4298      	cmp	r0, r3
 800f07c:	bfcc      	ite	gt
 800f07e:	2000      	movgt	r0, #0
 800f080:	2001      	movle	r0, #1
 800f082:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}

0800f084 <_ZN8touchgfx4Rect11expandToFitERKS0_>:
 800f084:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 800f086:	4604      	mov	r4, r0
 800f088:	4608      	mov	r0, r1
 800f08a:	460d      	mov	r5, r1
 800f08c:	f7fc fe7b 	bl	800bd86 <_ZNK8touchgfx4Rect7isEmptyEv>
 800f090:	b978      	cbnz	r0, 800f0b2 <_ZN8touchgfx4Rect11expandToFitERKS0_+0x2e>
 800f092:	4620      	mov	r0, r4
 800f094:	f7fc fe77 	bl	800bd86 <_ZNK8touchgfx4Rect7isEmptyEv>
 800f098:	f9b5 6000 	ldrsh.w	r6, [r5]
 800f09c:	b150      	cbz	r0, 800f0b4 <_ZN8touchgfx4Rect11expandToFitERKS0_+0x30>
 800f09e:	8026      	strh	r6, [r4, #0]
 800f0a0:	f9b5 3002 	ldrsh.w	r3, [r5, #2]
 800f0a4:	8063      	strh	r3, [r4, #2]
 800f0a6:	f9b5 3004 	ldrsh.w	r3, [r5, #4]
 800f0aa:	80a3      	strh	r3, [r4, #4]
 800f0ac:	f9b5 3006 	ldrsh.w	r3, [r5, #6]
 800f0b0:	80e3      	strh	r3, [r4, #6]
 800f0b2:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
 800f0b4:	f9b4 1000 	ldrsh.w	r1, [r4]
 800f0b8:	f9b5 2002 	ldrsh.w	r2, [r5, #2]
 800f0bc:	f9b4 3002 	ldrsh.w	r3, [r4, #2]
 800f0c0:	f8b5 c004 	ldrh.w	ip, [r5, #4]
 800f0c4:	88ed      	ldrh	r5, [r5, #6]
 800f0c6:	42b1      	cmp	r1, r6
 800f0c8:	460f      	mov	r7, r1
 800f0ca:	bfa8      	it	ge
 800f0cc:	4637      	movge	r7, r6
 800f0ce:	4293      	cmp	r3, r2
 800f0d0:	4618      	mov	r0, r3
 800f0d2:	4466      	add	r6, ip
 800f0d4:	bfa8      	it	ge
 800f0d6:	4610      	movge	r0, r2
 800f0d8:	f8b4 c004 	ldrh.w	ip, [r4, #4]
 800f0dc:	8027      	strh	r7, [r4, #0]
 800f0de:	442a      	add	r2, r5
 800f0e0:	88e5      	ldrh	r5, [r4, #6]
 800f0e2:	8060      	strh	r0, [r4, #2]
 800f0e4:	4461      	add	r1, ip
 800f0e6:	442b      	add	r3, r5
 800f0e8:	b236      	sxth	r6, r6
 800f0ea:	b209      	sxth	r1, r1
 800f0ec:	b212      	sxth	r2, r2
 800f0ee:	b21b      	sxth	r3, r3
 800f0f0:	428e      	cmp	r6, r1
 800f0f2:	bfac      	ite	ge
 800f0f4:	ebc7 0106 	rsbge	r1, r7, r6
 800f0f8:	ebc7 0101 	rsblt	r1, r7, r1
 800f0fc:	429a      	cmp	r2, r3
 800f0fe:	bfac      	ite	ge
 800f100:	ebc0 0202 	rsbge	r2, r0, r2
 800f104:	ebc0 0203 	rsblt	r2, r0, r3
 800f108:	80a1      	strh	r1, [r4, #4]
 800f10a:	80e2      	strh	r2, [r4, #6]
 800f10c:	e7d1      	b.n	800f0b2 <_ZN8touchgfx4Rect11expandToFitERKS0_+0x2e>
	...

0800f110 <_ZN8touchgfx11Application11getInstanceEv>:
 800f110:	4b01      	ldr	r3, [pc, #4]	@ (800f118 <_ZN8touchgfx11Application11getInstanceEv+0x8>)
 800f112:	6818      	ldr	r0, [r3, #0]
 800f114:	4770      	bx	lr
 800f116:	bf00      	nop
 800f118:	20002ca8 	.word	0x20002ca8

0800f11c <_ZN8touchgfx11Application12TimerWidgets10tickActiveEv>:
 800f11c:	b510      	push	{r4, lr}
 800f11e:	2300      	movs	r3, #0
 800f120:	f8a0 30a4 	strh.w	r3, [r0, #164]	@ 0xa4
 800f124:	f8b0 3080 	ldrh.w	r3, [r0, #128]	@ 0x80
 800f128:	f8a0 30a6 	strh.w	r3, [r0, #166]	@ 0xa6
 800f12c:	4604      	mov	r4, r0
 800f12e:	f8b4 30a4 	ldrh.w	r3, [r4, #164]	@ 0xa4
 800f132:	f8b4 20a6 	ldrh.w	r2, [r4, #166]	@ 0xa6
 800f136:	429a      	cmp	r2, r3
 800f138:	d90e      	bls.n	800f158 <_ZN8touchgfx11Application12TimerWidgets10tickActiveEv+0x3c>
 800f13a:	18e2      	adds	r2, r4, r3
 800f13c:	f892 2084 	ldrb.w	r2, [r2, #132]	@ 0x84
 800f140:	b122      	cbz	r2, 800f14c <_ZN8touchgfx11Application12TimerWidgets10tickActiveEv+0x30>
 800f142:	f854 0023 	ldr.w	r0, [r4, r3, lsl #2]
 800f146:	6803      	ldr	r3, [r0, #0]
 800f148:	6d1b      	ldr	r3, [r3, #80]	@ 0x50
 800f14a:	4798      	blx	r3
 800f14c:	f8b4 30a4 	ldrh.w	r3, [r4, #164]	@ 0xa4
 800f150:	3301      	adds	r3, #1
 800f152:	f8a4 30a4 	strh.w	r3, [r4, #164]	@ 0xa4
 800f156:	e7ea      	b.n	800f12e <_ZN8touchgfx11Application12TimerWidgets10tickActiveEv+0x12>
 800f158:	bd10      	pop	{r4, pc}

0800f15a <_ZN8touchgfx11Application12TimerWidgets5clearEv>:
 800f15a:	2300      	movs	r3, #0
 800f15c:	f8a0 3080 	strh.w	r3, [r0, #128]	@ 0x80
 800f160:	f100 0284 	add.w	r2, r0, #132	@ 0x84
 800f164:	30a4      	adds	r0, #164	@ 0xa4
 800f166:	f802 3b01 	strb.w	r3, [r2], #1
 800f16a:	4282      	cmp	r2, r0
 800f16c:	d1fb      	bne.n	800f166 <_ZN8touchgfx11Application12TimerWidgets5clearEv+0xc>
 800f16e:	4770      	bx	lr

0800f170 <_ZN8touchgfx11Application12switchScreenEPNS_6ScreenE>:
 800f170:	b570      	push	{r4, r5, r6, lr}
 800f172:	4c0b      	ldr	r4, [pc, #44]	@ (800f1a0 <_ZN8touchgfx11Application12switchScreenEPNS_6ScreenE+0x30>)
 800f174:	4605      	mov	r5, r0
 800f176:	6820      	ldr	r0, [r4, #0]
 800f178:	460e      	mov	r6, r1
 800f17a:	b110      	cbz	r0, 800f182 <_ZN8touchgfx11Application12switchScreenEPNS_6ScreenE+0x12>
 800f17c:	6803      	ldr	r3, [r0, #0]
 800f17e:	695b      	ldr	r3, [r3, #20]
 800f180:	4798      	blx	r3
 800f182:	1d28      	adds	r0, r5, #4
 800f184:	f7ff ffe9 	bl	800f15a <_ZN8touchgfx11Application12TimerWidgets5clearEv>
 800f188:	6026      	str	r6, [r4, #0]
 800f18a:	6833      	ldr	r3, [r6, #0]
 800f18c:	4630      	mov	r0, r6
 800f18e:	68db      	ldr	r3, [r3, #12]
 800f190:	4798      	blx	r3
 800f192:	682b      	ldr	r3, [r5, #0]
 800f194:	4628      	mov	r0, r5
 800f196:	6c5b      	ldr	r3, [r3, #68]	@ 0x44
 800f198:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
 800f19c:	4718      	bx	r3
 800f19e:	bf00      	nop
 800f1a0:	20002c98 	.word	0x20002c98

0800f1a4 <_ZN8touchgfx11Application12TimerWidgets7compactEv>:
 800f1a4:	2300      	movs	r3, #0
 800f1a6:	f8b0 c080 	ldrh.w	ip, [r0, #128]	@ 0x80
 800f1aa:	f8b0 10a4 	ldrh.w	r1, [r0, #164]	@ 0xa4
 800f1ae:	b5f0      	push	{r4, r5, r6, r7, lr}
 800f1b0:	461a      	mov	r2, r3
 800f1b2:	461c      	mov	r4, r3
 800f1b4:	461d      	mov	r5, r3
 800f1b6:	459c      	cmp	ip, r3
 800f1b8:	dd1a      	ble.n	800f1f0 <_ZN8touchgfx11Application12TimerWidgets7compactEv+0x4c>
 800f1ba:	18c6      	adds	r6, r0, r3
 800f1bc:	f896 6084 	ldrb.w	r6, [r6, #132]	@ 0x84
 800f1c0:	b16e      	cbz	r6, 800f1de <_ZN8touchgfx11Application12TimerWidgets7compactEv+0x3a>
 800f1c2:	429a      	cmp	r2, r3
 800f1c4:	d008      	beq.n	800f1d8 <_ZN8touchgfx11Application12TimerWidgets7compactEv+0x34>
 800f1c6:	fa1f fe82 	uxth.w	lr, r2
 800f1ca:	f850 7023 	ldr.w	r7, [r0, r3, lsl #2]
 800f1ce:	f840 702e 	str.w	r7, [r0, lr, lsl #2]
 800f1d2:	1887      	adds	r7, r0, r2
 800f1d4:	f887 6084 	strb.w	r6, [r7, #132]	@ 0x84
 800f1d8:	3201      	adds	r2, #1
 800f1da:	3301      	adds	r3, #1
 800f1dc:	e7eb      	b.n	800f1b6 <_ZN8touchgfx11Application12TimerWidgets7compactEv+0x12>
 800f1de:	f8b0 60a6 	ldrh.w	r6, [r0, #166]	@ 0xa6
 800f1e2:	4299      	cmp	r1, r3
 800f1e4:	bfa8      	it	ge
 800f1e6:	3501      	addge	r5, #1
 800f1e8:	429e      	cmp	r6, r3
 800f1ea:	bfc8      	it	gt
 800f1ec:	3401      	addgt	r4, #1
 800f1ee:	e7f4      	b.n	800f1da <_ZN8touchgfx11Application12TimerWidgets7compactEv+0x36>
 800f1f0:	f8b0 30a6 	ldrh.w	r3, [r0, #166]	@ 0xa6
 800f1f4:	1b49      	subs	r1, r1, r5
 800f1f6:	1b1b      	subs	r3, r3, r4
 800f1f8:	f8a0 10a4 	strh.w	r1, [r0, #164]	@ 0xa4
 800f1fc:	f8a0 30a6 	strh.w	r3, [r0, #166]	@ 0xa6
 800f200:	f8b0 3080 	ldrh.w	r3, [r0, #128]	@ 0x80
 800f204:	4293      	cmp	r3, r2
 800f206:	dd03      	ble.n	800f210 <_ZN8touchgfx11Application12TimerWidgets7compactEv+0x6c>
 800f208:	3b01      	subs	r3, #1
 800f20a:	f8a0 3080 	strh.w	r3, [r0, #128]	@ 0x80
 800f20e:	e7f7      	b.n	800f200 <_ZN8touchgfx11Application12TimerWidgets7compactEv+0x5c>
 800f210:	bdf0      	pop	{r4, r5, r6, r7, pc}
	...

0800f214 <_ZN8touchgfx11Application15handleTickEventEv>:
 800f214:	b570      	push	{r4, r5, r6, lr}
 800f216:	4d16      	ldr	r5, [pc, #88]	@ (800f270 <_ZN8touchgfx11Application15handleTickEventEv+0x5c>)
 800f218:	4604      	mov	r4, r0
 800f21a:	6828      	ldr	r0, [r5, #0]
 800f21c:	b140      	cbz	r0, 800f230 <_ZN8touchgfx11Application15handleTickEventEv+0x1c>
 800f21e:	7a03      	ldrb	r3, [r0, #8]
 800f220:	b933      	cbnz	r3, 800f230 <_ZN8touchgfx11Application15handleTickEventEv+0x1c>
 800f222:	f884 3138 	strb.w	r3, [r4, #312]	@ 0x138
 800f226:	6803      	ldr	r3, [r0, #0]
 800f228:	689b      	ldr	r3, [r3, #8]
 800f22a:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
 800f22e:	4718      	bx	r3
 800f230:	f894 3138 	ldrb.w	r3, [r4, #312]	@ 0x138
 800f234:	4e0f      	ldr	r6, [pc, #60]	@ (800f274 <_ZN8touchgfx11Application15handleTickEventEv+0x60>)
 800f236:	b973      	cbnz	r3, 800f256 <_ZN8touchgfx11Application15handleTickEventEv+0x42>
 800f238:	b168      	cbz	r0, 800f256 <_ZN8touchgfx11Application15handleTickEventEv+0x42>
 800f23a:	7a03      	ldrb	r3, [r0, #8]
 800f23c:	b15b      	cbz	r3, 800f256 <_ZN8touchgfx11Application15handleTickEventEv+0x42>
 800f23e:	6830      	ldr	r0, [r6, #0]
 800f240:	b110      	cbz	r0, 800f248 <_ZN8touchgfx11Application15handleTickEventEv+0x34>
 800f242:	6803      	ldr	r3, [r0, #0]
 800f244:	691b      	ldr	r3, [r3, #16]
 800f246:	4798      	blx	r3
 800f248:	6828      	ldr	r0, [r5, #0]
 800f24a:	6803      	ldr	r3, [r0, #0]
 800f24c:	68db      	ldr	r3, [r3, #12]
 800f24e:	4798      	blx	r3
 800f250:	2301      	movs	r3, #1
 800f252:	f884 3138 	strb.w	r3, [r4, #312]	@ 0x138
 800f256:	3404      	adds	r4, #4
 800f258:	4620      	mov	r0, r4
 800f25a:	f7ff ff5f 	bl	800f11c <_ZN8touchgfx11Application12TimerWidgets10tickActiveEv>
 800f25e:	4620      	mov	r0, r4
 800f260:	f7ff ffa0 	bl	800f1a4 <_ZN8touchgfx11Application12TimerWidgets7compactEv>
 800f264:	6830      	ldr	r0, [r6, #0]
 800f266:	b110      	cbz	r0, 800f26e <_ZN8touchgfx11Application15handleTickEventEv+0x5a>
 800f268:	6803      	ldr	r3, [r0, #0]
 800f26a:	6a5b      	ldr	r3, [r3, #36]	@ 0x24
 800f26c:	e7dd      	b.n	800f22a <_ZN8touchgfx11Application15handleTickEventEv+0x16>
 800f26e:	bd70      	pop	{r4, r5, r6, pc}
 800f270:	20002c9c 	.word	0x20002c9c
 800f274:	20002c98 	.word	0x20002c98

0800f278 <_ZN8touchgfx6VectorINS_4RectELt8EEC1Ev>:
 800f278:	4603      	mov	r3, r0
 800f27a:	f100 0140 	add.w	r1, r0, #64	@ 0x40
 800f27e:	2200      	movs	r2, #0
 800f280:	801a      	strh	r2, [r3, #0]
 800f282:	805a      	strh	r2, [r3, #2]
 800f284:	809a      	strh	r2, [r3, #4]
 800f286:	80da      	strh	r2, [r3, #6]
 800f288:	3308      	adds	r3, #8
 800f28a:	428b      	cmp	r3, r1
 800f28c:	d1f8      	bne.n	800f280 <_ZN8touchgfx6VectorINS_4RectELt8EEC1Ev+0x8>
 800f28e:	f8a0 2040 	strh.w	r2, [r0, #64]	@ 0x40
 800f292:	4770      	bx	lr

0800f294 <_ZN8touchgfx11ApplicationC1Ev>:
 800f294:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 800f296:	4606      	mov	r6, r0
 800f298:	4b1c      	ldr	r3, [pc, #112]	@ (800f30c <_ZN8touchgfx11ApplicationC1Ev+0x78>)
 800f29a:	f846 3b04 	str.w	r3, [r6], #4
 800f29e:	4604      	mov	r4, r0
 800f2a0:	2500      	movs	r5, #0
 800f2a2:	22a8      	movs	r2, #168	@ 0xa8
 800f2a4:	2100      	movs	r1, #0
 800f2a6:	4630      	mov	r0, r6
 800f2a8:	f011 fcb9 	bl	8020c1e <memset>
 800f2ac:	f8a4 5084 	strh.w	r5, [r4, #132]	@ 0x84
 800f2b0:	f104 00ac 	add.w	r0, r4, #172	@ 0xac
 800f2b4:	f7ff ffe0 	bl	800f278 <_ZN8touchgfx6VectorINS_4RectELt8EEC1Ev>
 800f2b8:	f104 00ee 	add.w	r0, r4, #238	@ 0xee
 800f2bc:	f7ff ffdc 	bl	800f278 <_ZN8touchgfx6VectorINS_4RectELt8EEC1Ev>
 800f2c0:	f8a4 5130 	strh.w	r5, [r4, #304]	@ 0x130
 800f2c4:	f8a4 5132 	strh.w	r5, [r4, #306]	@ 0x132
 800f2c8:	f8a4 5134 	strh.w	r5, [r4, #308]	@ 0x134
 800f2cc:	f8a4 5136 	strh.w	r5, [r4, #310]	@ 0x136
 800f2d0:	f884 5138 	strb.w	r5, [r4, #312]	@ 0x138
 800f2d4:	490e      	ldr	r1, [pc, #56]	@ (800f310 <_ZN8touchgfx11ApplicationC1Ev+0x7c>)
 800f2d6:	480f      	ldr	r0, [pc, #60]	@ (800f314 <_ZN8touchgfx11ApplicationC1Ev+0x80>)
 800f2d8:	4f0f      	ldr	r7, [pc, #60]	@ (800f318 <_ZN8touchgfx11ApplicationC1Ev+0x84>)
 800f2da:	f011 f941 	bl	8020560 <CRC_Lock>
 800f2de:	4b0f      	ldr	r3, [pc, #60]	@ (800f31c <_ZN8touchgfx11ApplicationC1Ev+0x88>)
 800f2e0:	b158      	cbz	r0, 800f2fa <_ZN8touchgfx11ApplicationC1Ev+0x66>
 800f2e2:	801d      	strh	r5, [r3, #0]
 800f2e4:	4a0e      	ldr	r2, [pc, #56]	@ (800f320 <_ZN8touchgfx11ApplicationC1Ev+0x8c>)
 800f2e6:	2300      	movs	r3, #0
 800f2e8:	6013      	str	r3, [r2, #0]
 800f2ea:	4a0e      	ldr	r2, [pc, #56]	@ (800f324 <_ZN8touchgfx11ApplicationC1Ev+0x90>)
 800f2ec:	603b      	str	r3, [r7, #0]
 800f2ee:	4630      	mov	r0, r6
 800f2f0:	6013      	str	r3, [r2, #0]
 800f2f2:	f7ff ff32 	bl	800f15a <_ZN8touchgfx11Application12TimerWidgets5clearEv>
 800f2f6:	4620      	mov	r0, r4
 800f2f8:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
 800f2fa:	f44f 6280 	mov.w	r2, #1024	@ 0x400
 800f2fe:	2002      	movs	r0, #2
 800f300:	801a      	strh	r2, [r3, #0]
 800f302:	6038      	str	r0, [r7, #0]
 800f304:	f001 fa52 	bl	80107ac <_ZN8touchgfx6Screen4drawEv>
 800f308:	e7ec      	b.n	800f2e4 <_ZN8touchgfx11ApplicationC1Ev+0x50>
 800f30a:	bf00      	nop
 800f30c:	08023720 	.word	0x08023720
 800f310:	b5e8b5cd 	.word	0xb5e8b5cd
 800f314:	f407a5c2 	.word	0xf407a5c2
 800f318:	20002c98 	.word	0x20002c98
 800f31c:	20000024 	.word	0x20000024
 800f320:	20002ca8 	.word	0x20002ca8
 800f324:	20002c9c 	.word	0x20002c9c

0800f328 <_ZN8touchgfx6VectorINS_4RectELt8EE13quickRemoveAtEt>:
 800f328:	f8b0 3040 	ldrh.w	r3, [r0, #64]	@ 0x40
 800f32c:	3b01      	subs	r3, #1
 800f32e:	b29b      	uxth	r3, r3
 800f330:	428b      	cmp	r3, r1
 800f332:	b510      	push	{r4, lr}
 800f334:	f8a0 3040 	strh.w	r3, [r0, #64]	@ 0x40
 800f338:	d908      	bls.n	800f34c <_ZN8touchgfx6VectorINS_4RectELt8EE13quickRemoveAtEt+0x24>
 800f33a:	eb00 03c3 	add.w	r3, r0, r3, lsl #3
 800f33e:	eb00 04c1 	add.w	r4, r0, r1, lsl #3
 800f342:	681a      	ldr	r2, [r3, #0]
 800f344:	f840 2031 	str.w	r2, [r0, r1, lsl #3]
 800f348:	685a      	ldr	r2, [r3, #4]
 800f34a:	6062      	str	r2, [r4, #4]
 800f34c:	bd10      	pop	{r4, pc}
	...

0800f350 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE>:
 800f350:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 800f354:	4b8f      	ldr	r3, [pc, #572]	@ (800f594 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x244>)
 800f356:	b08f      	sub	sp, #60	@ 0x3c
 800f358:	ac0a      	add	r4, sp, #40	@ 0x28
 800f35a:	e884 0006 	stmia.w	r4, {r1, r2}
 800f35e:	f9b3 2000 	ldrsh.w	r2, [r3]
 800f362:	4b8d      	ldr	r3, [pc, #564]	@ (800f598 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x248>)
 800f364:	4683      	mov	fp, r0
 800f366:	f9b3 1000 	ldrsh.w	r1, [r3]
 800f36a:	4620      	mov	r0, r4
 800f36c:	f7ff fe14 	bl	800ef98 <_ZN8touchgfx4Rect10restrictToEss>
 800f370:	4620      	mov	r0, r4
 800f372:	f7fc fd08 	bl	800bd86 <_ZNK8touchgfx4Rect7isEmptyEv>
 800f376:	2800      	cmp	r0, #0
 800f378:	d16a      	bne.n	800f450 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x100>
 800f37a:	9403      	str	r4, [sp, #12]
 800f37c:	f8bb 40ec 	ldrh.w	r4, [fp, #236]	@ 0xec
 800f380:	f10b 03ac 	add.w	r3, fp, #172	@ 0xac
 800f384:	eb0b 05c4 	add.w	r5, fp, r4, lsl #3
 800f388:	35a4      	adds	r5, #164	@ 0xa4
 800f38a:	9301      	str	r3, [sp, #4]
 800f38c:	b15c      	cbz	r4, 800f3a6 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x56>
 800f38e:	4629      	mov	r1, r5
 800f390:	9803      	ldr	r0, [sp, #12]
 800f392:	f7ff fe51 	bl	800f038 <_ZNK8touchgfx4Rect8includesERKS0_>
 800f396:	3c01      	subs	r4, #1
 800f398:	b118      	cbz	r0, 800f3a2 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x52>
 800f39a:	b2a1      	uxth	r1, r4
 800f39c:	9801      	ldr	r0, [sp, #4]
 800f39e:	f7ff ffc3 	bl	800f328 <_ZN8touchgfx6VectorINS_4RectELt8EE13quickRemoveAtEt>
 800f3a2:	3d08      	subs	r5, #8
 800f3a4:	e7f2      	b.n	800f38c <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x3c>
 800f3a6:	f8bb a0ec 	ldrh.w	sl, [fp, #236]	@ 0xec
 800f3aa:	f8cd a010 	str.w	sl, [sp, #16]
 800f3ae:	f10a 33ff 	add.w	r3, sl, #4294967295
 800f3b2:	9302      	str	r3, [sp, #8]
 800f3b4:	ea4f 03ca 	mov.w	r3, sl, lsl #3
 800f3b8:	f103 04a4 	add.w	r4, r3, #164	@ 0xa4
 800f3bc:	9306      	str	r3, [sp, #24]
 800f3be:	445c      	add	r4, fp
 800f3c0:	2500      	movs	r5, #0
 800f3c2:	4626      	mov	r6, r4
 800f3c4:	f8cd a014 	str.w	sl, [sp, #20]
 800f3c8:	462f      	mov	r7, r5
 800f3ca:	9b05      	ldr	r3, [sp, #20]
 800f3cc:	2b00      	cmp	r3, #0
 800f3ce:	d073      	beq.n	800f4b8 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x168>
 800f3d0:	9903      	ldr	r1, [sp, #12]
 800f3d2:	4630      	mov	r0, r6
 800f3d4:	f7ff fdbe 	bl	800ef54 <_ZNK8touchgfx4Rect9intersectERKS0_>
 800f3d8:	b350      	cbz	r0, 800f430 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0xe0>
 800f3da:	f9bd e028 	ldrsh.w	lr, [sp, #40]	@ 0x28
 800f3de:	f9b6 c000 	ldrsh.w	ip, [r6]
 800f3e2:	f9bd 802a 	ldrsh.w	r8, [sp, #42]	@ 0x2a
 800f3e6:	f9b6 9002 	ldrsh.w	r9, [r6, #2]
 800f3ea:	45e6      	cmp	lr, ip
 800f3ec:	db33      	blt.n	800f456 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x106>
 800f3ee:	f8bd 202c 	ldrh.w	r2, [sp, #44]	@ 0x2c
 800f3f2:	88b3      	ldrh	r3, [r6, #4]
 800f3f4:	4472      	add	r2, lr
 800f3f6:	4463      	add	r3, ip
 800f3f8:	b212      	sxth	r2, r2
 800f3fa:	b21b      	sxth	r3, r3
 800f3fc:	429a      	cmp	r2, r3
 800f3fe:	dc2a      	bgt.n	800f456 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x106>
 800f400:	88f3      	ldrh	r3, [r6, #6]
 800f402:	f8bd 102e 	ldrh.w	r1, [sp, #46]	@ 0x2e
 800f406:	fa1f f289 	uxth.w	r2, r9
 800f40a:	4413      	add	r3, r2
 800f40c:	b29b      	uxth	r3, r3
 800f40e:	45c8      	cmp	r8, r9
 800f410:	fa1f fc88 	uxth.w	ip, r8
 800f414:	fa0f fe83 	sxth.w	lr, r3
 800f418:	db0f      	blt.n	800f43a <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0xea>
 800f41a:	eba3 030c 	sub.w	r3, r3, ip
 800f41e:	1ac9      	subs	r1, r1, r3
 800f420:	b209      	sxth	r1, r1
 800f422:	2900      	cmp	r1, #0
 800f424:	f8ad 102e 	strh.w	r1, [sp, #46]	@ 0x2e
 800f428:	dd12      	ble.n	800f450 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x100>
 800f42a:	f8ad e02a 	strh.w	lr, [sp, #42]	@ 0x2a
 800f42e:	4605      	mov	r5, r0
 800f430:	9b05      	ldr	r3, [sp, #20]
 800f432:	3b01      	subs	r3, #1
 800f434:	9305      	str	r3, [sp, #20]
 800f436:	3e08      	subs	r6, #8
 800f438:	e7c7      	b.n	800f3ca <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x7a>
 800f43a:	4461      	add	r1, ip
 800f43c:	b209      	sxth	r1, r1
 800f43e:	4571      	cmp	r1, lr
 800f440:	dc38      	bgt.n	800f4b4 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x164>
 800f442:	eba2 020c 	sub.w	r2, r2, ip
 800f446:	b212      	sxth	r2, r2
 800f448:	f8ad 202e 	strh.w	r2, [sp, #46]	@ 0x2e
 800f44c:	2a00      	cmp	r2, #0
 800f44e:	dcee      	bgt.n	800f42e <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0xde>
 800f450:	b00f      	add	sp, #60	@ 0x3c
 800f452:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 800f456:	45c8      	cmp	r8, r9
 800f458:	db2c      	blt.n	800f4b4 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x164>
 800f45a:	88f3      	ldrh	r3, [r6, #6]
 800f45c:	4499      	add	r9, r3
 800f45e:	f8bd 302e 	ldrh.w	r3, [sp, #46]	@ 0x2e
 800f462:	4498      	add	r8, r3
 800f464:	fa0f f989 	sxth.w	r9, r9
 800f468:	fa0f f888 	sxth.w	r8, r8
 800f46c:	45c1      	cmp	r9, r8
 800f46e:	db21      	blt.n	800f4b4 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x164>
 800f470:	88b3      	ldrh	r3, [r6, #4]
 800f472:	f8bd 102c 	ldrh.w	r1, [sp, #44]	@ 0x2c
 800f476:	fa1f f28c 	uxth.w	r2, ip
 800f47a:	4413      	add	r3, r2
 800f47c:	b29b      	uxth	r3, r3
 800f47e:	45e6      	cmp	lr, ip
 800f480:	fa1f f88e 	uxth.w	r8, lr
 800f484:	fa0f f983 	sxth.w	r9, r3
 800f488:	db0a      	blt.n	800f4a0 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x150>
 800f48a:	eba3 0308 	sub.w	r3, r3, r8
 800f48e:	1ac9      	subs	r1, r1, r3
 800f490:	b209      	sxth	r1, r1
 800f492:	2900      	cmp	r1, #0
 800f494:	f8ad 102c 	strh.w	r1, [sp, #44]	@ 0x2c
 800f498:	ddda      	ble.n	800f450 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x100>
 800f49a:	f8ad 9028 	strh.w	r9, [sp, #40]	@ 0x28
 800f49e:	e7c6      	b.n	800f42e <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0xde>
 800f4a0:	4441      	add	r1, r8
 800f4a2:	b209      	sxth	r1, r1
 800f4a4:	4549      	cmp	r1, r9
 800f4a6:	dc05      	bgt.n	800f4b4 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x164>
 800f4a8:	eba2 0208 	sub.w	r2, r2, r8
 800f4ac:	b212      	sxth	r2, r2
 800f4ae:	f8ad 202c 	strh.w	r2, [sp, #44]	@ 0x2c
 800f4b2:	e7cb      	b.n	800f44c <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0xfc>
 800f4b4:	4607      	mov	r7, r0
 800f4b6:	e7bb      	b.n	800f430 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0xe0>
 800f4b8:	2d00      	cmp	r5, #0
 800f4ba:	d181      	bne.n	800f3c0 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x70>
 800f4bc:	2f00      	cmp	r7, #0
 800f4be:	f000 81dd 	beq.w	800f87c <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x52c>
 800f4c2:	f9bd 6028 	ldrsh.w	r6, [sp, #40]	@ 0x28
 800f4c6:	f9bd 702a 	ldrsh.w	r7, [sp, #42]	@ 0x2a
 800f4ca:	f8bd a02e 	ldrh.w	sl, [sp, #46]	@ 0x2e
 800f4ce:	b2b3      	uxth	r3, r6
 800f4d0:	9305      	str	r3, [sp, #20]
 800f4d2:	9a05      	ldr	r2, [sp, #20]
 800f4d4:	f8bd 302c 	ldrh.w	r3, [sp, #44]	@ 0x2c
 800f4d8:	4413      	add	r3, r2
 800f4da:	b2ba      	uxth	r2, r7
 800f4dc:	4492      	add	sl, r2
 800f4de:	b29b      	uxth	r3, r3
 800f4e0:	fa1f fa8a 	uxth.w	sl, sl
 800f4e4:	fa0f f883 	sxth.w	r8, r3
 800f4e8:	fa0f f98a 	sxth.w	r9, sl
 800f4ec:	e9cd 2307 	strd	r2, r3, [sp, #28]
 800f4f0:	9b04      	ldr	r3, [sp, #16]
 800f4f2:	2b00      	cmp	r3, #0
 800f4f4:	d052      	beq.n	800f59c <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x24c>
 800f4f6:	9903      	ldr	r1, [sp, #12]
 800f4f8:	4620      	mov	r0, r4
 800f4fa:	f7ff fd2b 	bl	800ef54 <_ZNK8touchgfx4Rect9intersectERKS0_>
 800f4fe:	e9dd 2307 	ldrd	r2, r3, [sp, #28]
 800f502:	b1c0      	cbz	r0, 800f536 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x1e6>
 800f504:	f9b4 e000 	ldrsh.w	lr, [r4]
 800f508:	f9b4 1002 	ldrsh.w	r1, [r4, #2]
 800f50c:	4576      	cmp	r6, lr
 800f50e:	dc22      	bgt.n	800f556 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x206>
 800f510:	f8b4 c004 	ldrh.w	ip, [r4, #4]
 800f514:	44f4      	add	ip, lr
 800f516:	fa0f fc8c 	sxth.w	ip, ip
 800f51a:	45e0      	cmp	r8, ip
 800f51c:	db1b      	blt.n	800f556 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x206>
 800f51e:	428f      	cmp	r7, r1
 800f520:	fa1f fc81 	uxth.w	ip, r1
 800f524:	88e1      	ldrh	r1, [r4, #6]
 800f526:	dc0d      	bgt.n	800f544 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x1f4>
 800f528:	ebaa 0c0c 	sub.w	ip, sl, ip
 800f52c:	eba1 010c 	sub.w	r1, r1, ip
 800f530:	f8a4 9002 	strh.w	r9, [r4, #2]
 800f534:	80e1      	strh	r1, [r4, #6]
 800f536:	4628      	mov	r0, r5
 800f538:	9904      	ldr	r1, [sp, #16]
 800f53a:	3901      	subs	r1, #1
 800f53c:	9104      	str	r1, [sp, #16]
 800f53e:	3c08      	subs	r4, #8
 800f540:	4605      	mov	r5, r0
 800f542:	e7d3      	b.n	800f4ec <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x19c>
 800f544:	4461      	add	r1, ip
 800f546:	b209      	sxth	r1, r1
 800f548:	4549      	cmp	r1, r9
 800f54a:	dcf5      	bgt.n	800f538 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x1e8>
 800f54c:	eba2 0c0c 	sub.w	ip, r2, ip
 800f550:	f8a4 c006 	strh.w	ip, [r4, #6]
 800f554:	e7ef      	b.n	800f536 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x1e6>
 800f556:	428f      	cmp	r7, r1
 800f558:	dcee      	bgt.n	800f538 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x1e8>
 800f55a:	f8b4 c006 	ldrh.w	ip, [r4, #6]
 800f55e:	4461      	add	r1, ip
 800f560:	b209      	sxth	r1, r1
 800f562:	4589      	cmp	r9, r1
 800f564:	dbe8      	blt.n	800f538 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x1e8>
 800f566:	4576      	cmp	r6, lr
 800f568:	fa1f fc8e 	uxth.w	ip, lr
 800f56c:	88a1      	ldrh	r1, [r4, #4]
 800f56e:	dc07      	bgt.n	800f580 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x230>
 800f570:	eba3 0c0c 	sub.w	ip, r3, ip
 800f574:	eba1 010c 	sub.w	r1, r1, ip
 800f578:	f8a4 8000 	strh.w	r8, [r4]
 800f57c:	80a1      	strh	r1, [r4, #4]
 800f57e:	e7da      	b.n	800f536 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x1e6>
 800f580:	4461      	add	r1, ip
 800f582:	b209      	sxth	r1, r1
 800f584:	4588      	cmp	r8, r1
 800f586:	dbd7      	blt.n	800f538 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x1e8>
 800f588:	9905      	ldr	r1, [sp, #20]
 800f58a:	eba1 0c0c 	sub.w	ip, r1, ip
 800f58e:	f8a4 c004 	strh.w	ip, [r4, #4]
 800f592:	e7d0      	b.n	800f536 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x1e6>
 800f594:	20002c52 	.word	0x20002c52
 800f598:	20002c50 	.word	0x20002c50
 800f59c:	2d00      	cmp	r5, #0
 800f59e:	f000 816d 	beq.w	800f87c <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x52c>
 800f5a2:	9b06      	ldr	r3, [sp, #24]
 800f5a4:	445b      	add	r3, fp
 800f5a6:	461c      	mov	r4, r3
 800f5a8:	9b02      	ldr	r3, [sp, #8]
 800f5aa:	3301      	adds	r3, #1
 800f5ac:	f000 8166 	beq.w	800f87c <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x52c>
 800f5b0:	f104 05a4 	add.w	r5, r4, #164	@ 0xa4
 800f5b4:	4629      	mov	r1, r5
 800f5b6:	9803      	ldr	r0, [sp, #12]
 800f5b8:	f7ff fd3e 	bl	800f038 <_ZNK8touchgfx4Rect8includesERKS0_>
 800f5bc:	b120      	cbz	r0, 800f5c8 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x278>
 800f5be:	f8bd 1008 	ldrh.w	r1, [sp, #8]
 800f5c2:	9801      	ldr	r0, [sp, #4]
 800f5c4:	f7ff feb0 	bl	800f328 <_ZN8touchgfx6VectorINS_4RectELt8EE13quickRemoveAtEt>
 800f5c8:	9903      	ldr	r1, [sp, #12]
 800f5ca:	4628      	mov	r0, r5
 800f5cc:	f7ff fcc2 	bl	800ef54 <_ZNK8touchgfx4Rect9intersectERKS0_>
 800f5d0:	2800      	cmp	r0, #0
 800f5d2:	f000 809c 	beq.w	800f70e <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x3be>
 800f5d6:	f9b4 90a4 	ldrsh.w	r9, [r4, #164]	@ 0xa4
 800f5da:	f9b4 30a8 	ldrsh.w	r3, [r4, #168]	@ 0xa8
 800f5de:	f9bd 0028 	ldrsh.w	r0, [sp, #40]	@ 0x28
 800f5e2:	9309      	str	r3, [sp, #36]	@ 0x24
 800f5e4:	fa1f f189 	uxth.w	r1, r9
 800f5e8:	eb01 0c03 	add.w	ip, r1, r3
 800f5ec:	fa1f fa8c 	uxth.w	sl, ip
 800f5f0:	f8bd c02c 	ldrh.w	ip, [sp, #44]	@ 0x2c
 800f5f4:	f9bd e02a 	ldrsh.w	lr, [sp, #42]	@ 0x2a
 800f5f8:	f9b4 20a6 	ldrsh.w	r2, [r4, #166]	@ 0xa6
 800f5fc:	b283      	uxth	r3, r0
 800f5fe:	eb03 050c 	add.w	r5, r3, ip
 800f602:	b2ad      	uxth	r5, r5
 800f604:	9505      	str	r5, [sp, #20]
 800f606:	f9bd 5014 	ldrsh.w	r5, [sp, #20]
 800f60a:	9504      	str	r5, [sp, #16]
 800f60c:	4548      	cmp	r0, r9
 800f60e:	f8bb 50ec 	ldrh.w	r5, [fp, #236]	@ 0xec
 800f612:	f340 8099 	ble.w	800f748 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x3f8>
 800f616:	1a5b      	subs	r3, r3, r1
 800f618:	b29b      	uxth	r3, r3
 800f61a:	4596      	cmp	lr, r2
 800f61c:	fa0f f08a 	sxth.w	r0, sl
 800f620:	b21e      	sxth	r6, r3
 800f622:	dd2e      	ble.n	800f682 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x332>
 800f624:	9f02      	ldr	r7, [sp, #8]
 800f626:	f8bd 402e 	ldrh.w	r4, [sp, #46]	@ 0x2e
 800f62a:	eb0b 08c7 	add.w	r8, fp, r7, lsl #3
 800f62e:	9f04      	ldr	r7, [sp, #16]
 800f630:	1a3f      	subs	r7, r7, r0
 800f632:	f8b8 00b2 	ldrh.w	r0, [r8, #178]	@ 0xb2
 800f636:	fa1f fe8e 	uxth.w	lr, lr
 800f63a:	b292      	uxth	r2, r2
 800f63c:	ebae 0102 	sub.w	r1, lr, r2
 800f640:	44a6      	add	lr, r4
 800f642:	4402      	add	r2, r0
 800f644:	b289      	uxth	r1, r1
 800f646:	fa0f fe8e 	sxth.w	lr, lr
 800f64a:	b212      	sxth	r2, r2
 800f64c:	b20d      	sxth	r5, r1
 800f64e:	ebae 0202 	sub.w	r2, lr, r2
 800f652:	436f      	muls	r7, r5
 800f654:	4372      	muls	r2, r6
 800f656:	4297      	cmp	r7, r2
 800f658:	db09      	blt.n	800f66e <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x31e>
 800f65a:	f8b8 20ac 	ldrh.w	r2, [r8, #172]	@ 0xac
 800f65e:	f8a8 50b2 	strh.w	r5, [r8, #178]	@ 0xb2
 800f662:	f8ad 2028 	strh.w	r2, [sp, #40]	@ 0x28
 800f666:	449c      	add	ip, r3
 800f668:	f8ad c02c 	strh.w	ip, [sp, #44]	@ 0x2c
 800f66c:	e686      	b.n	800f37c <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x2c>
 800f66e:	4421      	add	r1, r4
 800f670:	f8b8 30ae 	ldrh.w	r3, [r8, #174]	@ 0xae
 800f674:	f8a8 60b0 	strh.w	r6, [r8, #176]	@ 0xb0
 800f678:	f8ad 102e 	strh.w	r1, [sp, #46]	@ 0x2e
 800f67c:	f8ad 302a 	strh.w	r3, [sp, #42]	@ 0x2a
 800f680:	e67c      	b.n	800f37c <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x2c>
 800f682:	9f04      	ldr	r7, [sp, #16]
 800f684:	42b8      	cmp	r0, r7
 800f686:	da27      	bge.n	800f6d8 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x388>
 800f688:	9902      	ldr	r1, [sp, #8]
 800f68a:	f8bd 502e 	ldrh.w	r5, [sp, #46]	@ 0x2e
 800f68e:	eb0b 04c1 	add.w	r4, fp, r1, lsl #3
 800f692:	eb05 010e 	add.w	r1, r5, lr
 800f696:	fa1f f881 	uxth.w	r8, r1
 800f69a:	f8b4 10b2 	ldrh.w	r1, [r4, #178]	@ 0xb2
 800f69e:	4411      	add	r1, r2
 800f6a0:	eba1 0108 	sub.w	r1, r1, r8
 800f6a4:	b289      	uxth	r1, r1
 800f6a6:	fa0f f988 	sxth.w	r9, r8
 800f6aa:	eba2 020e 	sub.w	r2, r2, lr
 800f6ae:	fa0f f881 	sxth.w	r8, r1
 800f6b2:	1a3f      	subs	r7, r7, r0
 800f6b4:	4372      	muls	r2, r6
 800f6b6:	fb08 f707 	mul.w	r7, r8, r7
 800f6ba:	42ba      	cmp	r2, r7
 800f6bc:	dc06      	bgt.n	800f6cc <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x37c>
 800f6be:	f8a4 90ae 	strh.w	r9, [r4, #174]	@ 0xae
 800f6c2:	f8a4 80b2 	strh.w	r8, [r4, #178]	@ 0xb2
 800f6c6:	f8b4 20ac 	ldrh.w	r2, [r4, #172]	@ 0xac
 800f6ca:	e7ca      	b.n	800f662 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x312>
 800f6cc:	f8a4 60b0 	strh.w	r6, [r4, #176]	@ 0xb0
 800f6d0:	4429      	add	r1, r5
 800f6d2:	f8ad 102e 	strh.w	r1, [sp, #46]	@ 0x2e
 800f6d6:	e651      	b.n	800f37c <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x2c>
 800f6d8:	9805      	ldr	r0, [sp, #20]
 800f6da:	ebaa 0000 	sub.w	r0, sl, r0
 800f6de:	b280      	uxth	r0, r0
 800f6e0:	2d06      	cmp	r5, #6
 800f6e2:	fa0f fe80 	sxth.w	lr, r0
 800f6e6:	d817      	bhi.n	800f718 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x3c8>
 800f6e8:	9b04      	ldr	r3, [sp, #16]
 800f6ea:	f8a4 30a4 	strh.w	r3, [r4, #164]	@ 0xa4
 800f6ee:	1c6b      	adds	r3, r5, #1
 800f6f0:	f9b4 10aa 	ldrsh.w	r1, [r4, #170]	@ 0xaa
 800f6f4:	f8a4 e0a8 	strh.w	lr, [r4, #168]	@ 0xa8
 800f6f8:	f8ab 30ec 	strh.w	r3, [fp, #236]	@ 0xec
 800f6fc:	9b01      	ldr	r3, [sp, #4]
 800f6fe:	9801      	ldr	r0, [sp, #4]
 800f700:	eb03 03c5 	add.w	r3, r3, r5, lsl #3
 800f704:	f820 9035 	strh.w	r9, [r0, r5, lsl #3]
 800f708:	805a      	strh	r2, [r3, #2]
 800f70a:	809e      	strh	r6, [r3, #4]
 800f70c:	80d9      	strh	r1, [r3, #6]
 800f70e:	9b02      	ldr	r3, [sp, #8]
 800f710:	3b01      	subs	r3, #1
 800f712:	9302      	str	r3, [sp, #8]
 800f714:	3c08      	subs	r4, #8
 800f716:	e747      	b.n	800f5a8 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x258>
 800f718:	9a02      	ldr	r2, [sp, #8]
 800f71a:	45b6      	cmp	lr, r6
 800f71c:	ea4f 02c2 	mov.w	r2, r2, lsl #3
 800f720:	db0d      	blt.n	800f73e <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x3ee>
 800f722:	449c      	add	ip, r3
 800f724:	fa1f fc8c 	uxth.w	ip, ip
 800f728:	445a      	add	r2, fp
 800f72a:	f8ad c02c 	strh.w	ip, [sp, #44]	@ 0x2c
 800f72e:	448c      	add	ip, r1
 800f730:	f8ad 9028 	strh.w	r9, [sp, #40]	@ 0x28
 800f734:	f8a2 c0ac 	strh.w	ip, [r2, #172]	@ 0xac
 800f738:	f8a2 e0b0 	strh.w	lr, [r2, #176]	@ 0xb0
 800f73c:	e61e      	b.n	800f37c <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x2c>
 800f73e:	445a      	add	r2, fp
 800f740:	4484      	add	ip, r0
 800f742:	f8a2 60b0 	strh.w	r6, [r2, #176]	@ 0xb0
 800f746:	e78f      	b.n	800f668 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x318>
 800f748:	f8bd 602e 	ldrh.w	r6, [sp, #46]	@ 0x2e
 800f74c:	fa1f f18e 	uxth.w	r1, lr
 800f750:	eb01 0806 	add.w	r8, r1, r6
 800f754:	b293      	uxth	r3, r2
 800f756:	fa1f f888 	uxth.w	r8, r8
 800f75a:	9306      	str	r3, [sp, #24]
 800f75c:	fa0f f388 	sxth.w	r3, r8
 800f760:	9307      	str	r3, [sp, #28]
 800f762:	9f06      	ldr	r7, [sp, #24]
 800f764:	f8b4 30aa 	ldrh.w	r3, [r4, #170]	@ 0xaa
 800f768:	443b      	add	r3, r7
 800f76a:	b29b      	uxth	r3, r3
 800f76c:	4596      	cmp	lr, r2
 800f76e:	9308      	str	r3, [sp, #32]
 800f770:	da24      	bge.n	800f7bc <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x46c>
 800f772:	9905      	ldr	r1, [sp, #20]
 800f774:	eba3 0308 	sub.w	r3, r3, r8
 800f778:	ebaa 0401 	sub.w	r4, sl, r1
 800f77c:	b2a4      	uxth	r4, r4
 800f77e:	b29b      	uxth	r3, r3
 800f780:	b225      	sxth	r5, r4
 800f782:	b219      	sxth	r1, r3
 800f784:	eba2 020e 	sub.w	r2, r2, lr
 800f788:	eba9 0000 	sub.w	r0, r9, r0
 800f78c:	436a      	muls	r2, r5
 800f78e:	4348      	muls	r0, r1
 800f790:	4282      	cmp	r2, r0
 800f792:	9a02      	ldr	r2, [sp, #8]
 800f794:	ea4f 02c2 	mov.w	r2, r2, lsl #3
 800f798:	445a      	add	r2, fp
 800f79a:	dc06      	bgt.n	800f7aa <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x45a>
 800f79c:	9b07      	ldr	r3, [sp, #28]
 800f79e:	f8a2 10b2 	strh.w	r1, [r2, #178]	@ 0xb2
 800f7a2:	f8a2 30ae 	strh.w	r3, [r2, #174]	@ 0xae
 800f7a6:	44a4      	add	ip, r4
 800f7a8:	e75e      	b.n	800f668 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x318>
 800f7aa:	9904      	ldr	r1, [sp, #16]
 800f7ac:	f8a2 50b0 	strh.w	r5, [r2, #176]	@ 0xb0
 800f7b0:	f8a2 10ac 	strh.w	r1, [r2, #172]	@ 0xac
 800f7b4:	4433      	add	r3, r6
 800f7b6:	f8ad 302e 	strh.w	r3, [sp, #46]	@ 0x2e
 800f7ba:	e5df      	b.n	800f37c <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x2c>
 800f7bc:	9f06      	ldr	r7, [sp, #24]
 800f7be:	9b04      	ldr	r3, [sp, #16]
 800f7c0:	1bc9      	subs	r1, r1, r7
 800f7c2:	fa0f f78a 	sxth.w	r7, sl
 800f7c6:	b289      	uxth	r1, r1
 800f7c8:	429f      	cmp	r7, r3
 800f7ca:	fa0f fe81 	sxth.w	lr, r1
 800f7ce:	dd23      	ble.n	800f818 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x4c8>
 800f7d0:	9a05      	ldr	r2, [sp, #20]
 800f7d2:	f9bd 3020 	ldrsh.w	r3, [sp, #32]
 800f7d6:	9d07      	ldr	r5, [sp, #28]
 800f7d8:	ebaa 0202 	sub.w	r2, sl, r2
 800f7dc:	b292      	uxth	r2, r2
 800f7de:	eba5 0a03 	sub.w	sl, r5, r3
 800f7e2:	b214      	sxth	r4, r2
 800f7e4:	eba9 0000 	sub.w	r0, r9, r0
 800f7e8:	9b02      	ldr	r3, [sp, #8]
 800f7ea:	fb0e f000 	mul.w	r0, lr, r0
 800f7ee:	fb04 fa0a 	mul.w	sl, r4, sl
 800f7f2:	00db      	lsls	r3, r3, #3
 800f7f4:	4550      	cmp	r0, sl
 800f7f6:	445b      	add	r3, fp
 800f7f8:	db03      	blt.n	800f802 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x4b2>
 800f7fa:	f8a3 e0b2 	strh.w	lr, [r3, #178]	@ 0xb2
 800f7fe:	4494      	add	ip, r2
 800f800:	e732      	b.n	800f668 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x318>
 800f802:	9a04      	ldr	r2, [sp, #16]
 800f804:	f8a3 20ac 	strh.w	r2, [r3, #172]	@ 0xac
 800f808:	f8a3 40b0 	strh.w	r4, [r3, #176]	@ 0xb0
 800f80c:	f8b3 30ae 	ldrh.w	r3, [r3, #174]	@ 0xae
 800f810:	f8ad 302a 	strh.w	r3, [sp, #42]	@ 0x2a
 800f814:	4431      	add	r1, r6
 800f816:	e75c      	b.n	800f6d2 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x382>
 800f818:	9b08      	ldr	r3, [sp, #32]
 800f81a:	eba3 0308 	sub.w	r3, r3, r8
 800f81e:	b29b      	uxth	r3, r3
 800f820:	2d06      	cmp	r5, #6
 800f822:	b218      	sxth	r0, r3
 800f824:	d813      	bhi.n	800f84e <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x4fe>
 800f826:	9b07      	ldr	r3, [sp, #28]
 800f828:	f8a4 30a6 	strh.w	r3, [r4, #166]	@ 0xa6
 800f82c:	1c6b      	adds	r3, r5, #1
 800f82e:	f8a4 00aa 	strh.w	r0, [r4, #170]	@ 0xaa
 800f832:	f8ab 30ec 	strh.w	r3, [fp, #236]	@ 0xec
 800f836:	9b01      	ldr	r3, [sp, #4]
 800f838:	9901      	ldr	r1, [sp, #4]
 800f83a:	eb03 03c5 	add.w	r3, r3, r5, lsl #3
 800f83e:	f821 9035 	strh.w	r9, [r1, r5, lsl #3]
 800f842:	805a      	strh	r2, [r3, #2]
 800f844:	9a09      	ldr	r2, [sp, #36]	@ 0x24
 800f846:	809a      	strh	r2, [r3, #4]
 800f848:	f8a3 e006 	strh.w	lr, [r3, #6]
 800f84c:	e75f      	b.n	800f70e <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x3be>
 800f84e:	9c02      	ldr	r4, [sp, #8]
 800f850:	4570      	cmp	r0, lr
 800f852:	ea4f 04c4 	mov.w	r4, r4, lsl #3
 800f856:	db0d      	blt.n	800f874 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x524>
 800f858:	4431      	add	r1, r6
 800f85a:	9b06      	ldr	r3, [sp, #24]
 800f85c:	f8ad 202a 	strh.w	r2, [sp, #42]	@ 0x2a
 800f860:	b289      	uxth	r1, r1
 800f862:	445c      	add	r4, fp
 800f864:	f8ad 102e 	strh.w	r1, [sp, #46]	@ 0x2e
 800f868:	4419      	add	r1, r3
 800f86a:	f8a4 10ae 	strh.w	r1, [r4, #174]	@ 0xae
 800f86e:	f8a4 00b2 	strh.w	r0, [r4, #178]	@ 0xb2
 800f872:	e583      	b.n	800f37c <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x2c>
 800f874:	445c      	add	r4, fp
 800f876:	f8a4 e0b2 	strh.w	lr, [r4, #178]	@ 0xb2
 800f87a:	e79b      	b.n	800f7b4 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x464>
 800f87c:	f8bb 40ec 	ldrh.w	r4, [fp, #236]	@ 0xec
 800f880:	1e65      	subs	r5, r4, #1
 800f882:	b2ad      	uxth	r5, r5
 800f884:	eb0b 04c4 	add.w	r4, fp, r4, lsl #3
 800f888:	f64f 76ff 	movw	r6, #65535	@ 0xffff
 800f88c:	42b5      	cmp	r5, r6
 800f88e:	d044      	beq.n	800f91a <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x5ca>
 800f890:	f9bd 202a 	ldrsh.w	r2, [sp, #42]	@ 0x2a
 800f894:	f9b4 00a6 	ldrsh.w	r0, [r4, #166]	@ 0xa6
 800f898:	f9bd 1028 	ldrsh.w	r1, [sp, #40]	@ 0x28
 800f89c:	f9b4 70a4 	ldrsh.w	r7, [r4, #164]	@ 0xa4
 800f8a0:	4282      	cmp	r2, r0
 800f8a2:	d11f      	bne.n	800f8e4 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x594>
 800f8a4:	f9bd c02e 	ldrsh.w	ip, [sp, #46]	@ 0x2e
 800f8a8:	f9b4 30aa 	ldrsh.w	r3, [r4, #170]	@ 0xaa
 800f8ac:	459c      	cmp	ip, r3
 800f8ae:	d119      	bne.n	800f8e4 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x594>
 800f8b0:	f8b4 30a8 	ldrh.w	r3, [r4, #168]	@ 0xa8
 800f8b4:	f8bd 202c 	ldrh.w	r2, [sp, #44]	@ 0x2c
 800f8b8:	19d8      	adds	r0, r3, r7
 800f8ba:	b200      	sxth	r0, r0
 800f8bc:	4288      	cmp	r0, r1
 800f8be:	d109      	bne.n	800f8d4 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x584>
 800f8c0:	f8ad 7028 	strh.w	r7, [sp, #40]	@ 0x28
 800f8c4:	4413      	add	r3, r2
 800f8c6:	f8ad 302c 	strh.w	r3, [sp, #44]	@ 0x2c
 800f8ca:	4629      	mov	r1, r5
 800f8cc:	9801      	ldr	r0, [sp, #4]
 800f8ce:	f7ff fd2b 	bl	800f328 <_ZN8touchgfx6VectorINS_4RectELt8EE13quickRemoveAtEt>
 800f8d2:	e003      	b.n	800f8dc <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x58c>
 800f8d4:	4411      	add	r1, r2
 800f8d6:	b209      	sxth	r1, r1
 800f8d8:	42b9      	cmp	r1, r7
 800f8da:	d0f3      	beq.n	800f8c4 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x574>
 800f8dc:	3d01      	subs	r5, #1
 800f8de:	b2ad      	uxth	r5, r5
 800f8e0:	3c08      	subs	r4, #8
 800f8e2:	e7d3      	b.n	800f88c <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x53c>
 800f8e4:	42b9      	cmp	r1, r7
 800f8e6:	d1f9      	bne.n	800f8dc <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x58c>
 800f8e8:	f9bd 102c 	ldrsh.w	r1, [sp, #44]	@ 0x2c
 800f8ec:	f9b4 30a8 	ldrsh.w	r3, [r4, #168]	@ 0xa8
 800f8f0:	4299      	cmp	r1, r3
 800f8f2:	d1f3      	bne.n	800f8dc <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x58c>
 800f8f4:	f8b4 30aa 	ldrh.w	r3, [r4, #170]	@ 0xaa
 800f8f8:	f8bd 102e 	ldrh.w	r1, [sp, #46]	@ 0x2e
 800f8fc:	181f      	adds	r7, r3, r0
 800f8fe:	b23f      	sxth	r7, r7
 800f900:	42ba      	cmp	r2, r7
 800f902:	d105      	bne.n	800f910 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x5c0>
 800f904:	f8ad 002a 	strh.w	r0, [sp, #42]	@ 0x2a
 800f908:	440b      	add	r3, r1
 800f90a:	f8ad 302e 	strh.w	r3, [sp, #46]	@ 0x2e
 800f90e:	e7dc      	b.n	800f8ca <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x57a>
 800f910:	440a      	add	r2, r1
 800f912:	b212      	sxth	r2, r2
 800f914:	4290      	cmp	r0, r2
 800f916:	d1e1      	bne.n	800f8dc <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x58c>
 800f918:	e7f6      	b.n	800f908 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x5b8>
 800f91a:	f8bb 60ec 	ldrh.w	r6, [fp, #236]	@ 0xec
 800f91e:	2e07      	cmp	r6, #7
 800f920:	ea4f 04c6 	mov.w	r4, r6, lsl #3
 800f924:	d812      	bhi.n	800f94c <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x5fc>
 800f926:	1c75      	adds	r5, r6, #1
 800f928:	f8ab 50ec 	strh.w	r5, [fp, #236]	@ 0xec
 800f92c:	9d01      	ldr	r5, [sp, #4]
 800f92e:	f9bd 0028 	ldrsh.w	r0, [sp, #40]	@ 0x28
 800f932:	f9bd 102a 	ldrsh.w	r1, [sp, #42]	@ 0x2a
 800f936:	f9bd 202c 	ldrsh.w	r2, [sp, #44]	@ 0x2c
 800f93a:	f9bd 302e 	ldrsh.w	r3, [sp, #46]	@ 0x2e
 800f93e:	f825 0036 	strh.w	r0, [r5, r6, lsl #3]
 800f942:	442c      	add	r4, r5
 800f944:	8061      	strh	r1, [r4, #2]
 800f946:	80a2      	strh	r2, [r4, #4]
 800f948:	80e3      	strh	r3, [r4, #6]
 800f94a:	e581      	b.n	800f450 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x100>
 800f94c:	f10b 03ac 	add.w	r3, fp, #172	@ 0xac
 800f950:	3e01      	subs	r6, #1
 800f952:	445c      	add	r4, fp
 800f954:	f06f 4a00 	mvn.w	sl, #2147483648	@ 0x80000000
 800f958:	f04f 37ff 	mov.w	r7, #4294967295
 800f95c:	2500      	movs	r5, #0
 800f95e:	9305      	str	r3, [sp, #20]
 800f960:	f9b4 30a8 	ldrsh.w	r3, [r4, #168]	@ 0xa8
 800f964:	9302      	str	r3, [sp, #8]
 800f966:	1e72      	subs	r2, r6, #1
 800f968:	f9b4 30aa 	ldrsh.w	r3, [r4, #170]	@ 0xaa
 800f96c:	9304      	str	r3, [sp, #16]
 800f96e:	4691      	mov	r9, r2
 800f970:	f104 03a4 	add.w	r3, r4, #164	@ 0xa4
 800f974:	f1b9 3fff 	cmp.w	r9, #4294967295
 800f978:	bf14      	ite	ne
 800f97a:	9905      	ldrne	r1, [sp, #20]
 800f97c:	f8dd e00c 	ldreq.w	lr, [sp, #12]
 800f980:	6818      	ldr	r0, [r3, #0]
 800f982:	9207      	str	r2, [sp, #28]
 800f984:	bf18      	it	ne
 800f986:	eb01 0ec9 	addne.w	lr, r1, r9, lsl #3
 800f98a:	f10d 0c30 	add.w	ip, sp, #48	@ 0x30
 800f98e:	f8be 1006 	ldrh.w	r1, [lr, #6]
 800f992:	f8be 8004 	ldrh.w	r8, [lr, #4]
 800f996:	9306      	str	r3, [sp, #24]
 800f998:	fb18 f801 	smulbb	r8, r8, r1
 800f99c:	6859      	ldr	r1, [r3, #4]
 800f99e:	e8ac 0003 	stmia.w	ip!, {r0, r1}
 800f9a2:	4671      	mov	r1, lr
 800f9a4:	a80c      	add	r0, sp, #48	@ 0x30
 800f9a6:	f7ff fb6d 	bl	800f084 <_ZN8touchgfx4Rect11expandToFitERKS0_>
 800f9aa:	f8bd 1036 	ldrh.w	r1, [sp, #54]	@ 0x36
 800f9ae:	f8bd 0034 	ldrh.w	r0, [sp, #52]	@ 0x34
 800f9b2:	9b04      	ldr	r3, [sp, #16]
 800f9b4:	9a02      	ldr	r2, [sp, #8]
 800f9b6:	fb10 f001 	smulbb	r0, r0, r1
 800f9ba:	fb02 8803 	mla	r8, r2, r3, r8
 800f9be:	eba0 0108 	sub.w	r1, r0, r8
 800f9c2:	f04f 0c08 	mov.w	ip, #8
 800f9c6:	fb90 f0fc 	sdiv	r0, r0, ip
 800f9ca:	4288      	cmp	r0, r1
 800f9cc:	dc20      	bgt.n	800fa10 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x6c0>
 800f9ce:	4551      	cmp	r1, sl
 800f9d0:	e9dd 3206 	ldrd	r3, r2, [sp, #24]
 800f9d4:	da03      	bge.n	800f9de <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x68e>
 800f9d6:	b1d9      	cbz	r1, 800fa10 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x6c0>
 800f9d8:	468a      	mov	sl, r1
 800f9da:	464f      	mov	r7, r9
 800f9dc:	4635      	mov	r5, r6
 800f9de:	f109 39ff 	add.w	r9, r9, #4294967295
 800f9e2:	f119 0f02 	cmn.w	r9, #2
 800f9e6:	d1c5      	bne.n	800f974 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x624>
 800f9e8:	4616      	mov	r6, r2
 800f9ea:	3201      	adds	r2, #1
 800f9ec:	f1a4 0408 	sub.w	r4, r4, #8
 800f9f0:	d1b6      	bne.n	800f960 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x610>
 800f9f2:	9b01      	ldr	r3, [sp, #4]
 800f9f4:	b2ac      	uxth	r4, r5
 800f9f6:	00ed      	lsls	r5, r5, #3
 800f9f8:	1958      	adds	r0, r3, r5
 800f9fa:	1c7b      	adds	r3, r7, #1
 800f9fc:	d10b      	bne.n	800fa16 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x6c6>
 800f9fe:	4601      	mov	r1, r0
 800fa00:	9803      	ldr	r0, [sp, #12]
 800fa02:	f7ff fb3f 	bl	800f084 <_ZN8touchgfx4Rect11expandToFitERKS0_>
 800fa06:	4621      	mov	r1, r4
 800fa08:	9801      	ldr	r0, [sp, #4]
 800fa0a:	f7ff fc8d 	bl	800f328 <_ZN8touchgfx6VectorINS_4RectELt8EE13quickRemoveAtEt>
 800fa0e:	e4b5      	b.n	800f37c <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x2c>
 800fa10:	464f      	mov	r7, r9
 800fa12:	4635      	mov	r5, r6
 800fa14:	e7ed      	b.n	800f9f2 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x6a2>
 800fa16:	9b01      	ldr	r3, [sp, #4]
 800fa18:	00ff      	lsls	r7, r7, #3
 800fa1a:	19d9      	adds	r1, r3, r7
 800fa1c:	f7ff fb32 	bl	800f084 <_ZN8touchgfx4Rect11expandToFitERKS0_>
 800fa20:	9b03      	ldr	r3, [sp, #12]
 800fa22:	cb03      	ldmia	r3!, {r0, r1}
 800fa24:	445f      	add	r7, fp
 800fa26:	445d      	add	r5, fp
 800fa28:	f8c7 00ac 	str.w	r0, [r7, #172]	@ 0xac
 800fa2c:	f8c7 10b0 	str.w	r1, [r7, #176]	@ 0xb0
 800fa30:	f855 0fac 	ldr.w	r0, [r5, #172]!
 800fa34:	9b03      	ldr	r3, [sp, #12]
 800fa36:	6869      	ldr	r1, [r5, #4]
 800fa38:	c303      	stmia	r3!, {r0, r1}
 800fa3a:	e7e4      	b.n	800fa06 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x6b6>

0800fa3c <_ZN8touchgfx11Application15drawCachedAreasEv>:
 800fa3c:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 800fa40:	f500 7698 	add.w	r6, r0, #304	@ 0x130
 800fa44:	b09b      	sub	sp, #108	@ 0x6c
 800fa46:	4604      	mov	r4, r0
 800fa48:	4630      	mov	r0, r6
 800fa4a:	f7fc f99c 	bl	800bd86 <_ZNK8touchgfx4Rect7isEmptyEv>
 800fa4e:	4605      	mov	r5, r0
 800fa50:	b948      	cbnz	r0, 800fa66 <_ZN8touchgfx11Application15drawCachedAreasEv+0x2a>
 800fa52:	6823      	ldr	r3, [r4, #0]
 800fa54:	e896 0006 	ldmia.w	r6, {r1, r2}
 800fa58:	6c1b      	ldr	r3, [r3, #64]	@ 0x40
 800fa5a:	4620      	mov	r0, r4
 800fa5c:	4798      	blx	r3
 800fa5e:	f8c4 5130 	str.w	r5, [r4, #304]	@ 0x130
 800fa62:	f8c4 5134 	str.w	r5, [r4, #308]	@ 0x134
 800fa66:	4bc6      	ldr	r3, [pc, #792]	@ (800fd80 <_ZN8touchgfx11Application15drawCachedAreasEv+0x344>)
 800fa68:	681b      	ldr	r3, [r3, #0]
 800fa6a:	2b00      	cmp	r3, #0
 800fa6c:	d03f      	beq.n	800faee <_ZN8touchgfx11Application15drawCachedAreasEv+0xb2>
 800fa6e:	4dc5      	ldr	r5, [pc, #788]	@ (800fd84 <_ZN8touchgfx11Application15drawCachedAreasEv+0x348>)
 800fa70:	4628      	mov	r0, r5
 800fa72:	f7fc f988 	bl	800bd86 <_ZNK8touchgfx4Rect7isEmptyEv>
 800fa76:	4606      	mov	r6, r0
 800fa78:	2800      	cmp	r0, #0
 800fa7a:	d138      	bne.n	800faee <_ZN8touchgfx11Application15drawCachedAreasEv+0xb2>
 800fa7c:	4628      	mov	r0, r5
 800fa7e:	f7ff f99f 	bl	800edc0 <_ZN8touchgfx21DisplayTransformation29transformFrameBufferToDisplayERNS_4RectE>
 800fa82:	6823      	ldr	r3, [r4, #0]
 800fa84:	6829      	ldr	r1, [r5, #0]
 800fa86:	6c1b      	ldr	r3, [r3, #64]	@ 0x40
 800fa88:	686a      	ldr	r2, [r5, #4]
 800fa8a:	4620      	mov	r0, r4
 800fa8c:	4798      	blx	r3
 800fa8e:	802e      	strh	r6, [r5, #0]
 800fa90:	806e      	strh	r6, [r5, #2]
 800fa92:	80ae      	strh	r6, [r5, #4]
 800fa94:	80ee      	strh	r6, [r5, #6]
 800fa96:	f10d 0824 	add.w	r8, sp, #36	@ 0x24
 800fa9a:	4dbb      	ldr	r5, [pc, #748]	@ (800fd88 <_ZN8touchgfx11Application15drawCachedAreasEv+0x34c>)
 800fa9c:	4640      	mov	r0, r8
 800fa9e:	f7ff fbeb 	bl	800f278 <_ZN8touchgfx6VectorINS_4RectELt8EEC1Ev>
 800faa2:	882e      	ldrh	r6, [r5, #0]
 800faa4:	f8b4 70ec 	ldrh.w	r7, [r4, #236]	@ 0xec
 800faa8:	4633      	mov	r3, r6
 800faaa:	f104 00ac 	add.w	r0, r4, #172	@ 0xac
 800faae:	42bb      	cmp	r3, r7
 800fab0:	d224      	bcs.n	800fafc <_ZN8touchgfx11Application15drawCachedAreasEv+0xc0>
 800fab2:	f8bd 1064 	ldrh.w	r1, [sp, #100]	@ 0x64
 800fab6:	2907      	cmp	r1, #7
 800fab8:	d816      	bhi.n	800fae8 <_ZN8touchgfx11Application15drawCachedAreasEv+0xac>
 800faba:	eb00 02c3 	add.w	r2, r0, r3, lsl #3
 800fabe:	f930 9033 	ldrsh.w	r9, [r0, r3, lsl #3]
 800fac2:	f9b2 a002 	ldrsh.w	sl, [r2, #2]
 800fac6:	f9b2 e004 	ldrsh.w	lr, [r2, #4]
 800faca:	f9b2 c006 	ldrsh.w	ip, [r2, #6]
 800face:	1c4a      	adds	r2, r1, #1
 800fad0:	f8ad 2064 	strh.w	r2, [sp, #100]	@ 0x64
 800fad4:	eb08 02c1 	add.w	r2, r8, r1, lsl #3
 800fad8:	f828 9031 	strh.w	r9, [r8, r1, lsl #3]
 800fadc:	f8a2 a002 	strh.w	sl, [r2, #2]
 800fae0:	f8a2 e004 	strh.w	lr, [r2, #4]
 800fae4:	f8a2 c006 	strh.w	ip, [r2, #6]
 800fae8:	3301      	adds	r3, #1
 800faea:	b29b      	uxth	r3, r3
 800faec:	e7df      	b.n	800faae <_ZN8touchgfx11Application15drawCachedAreasEv+0x72>
 800faee:	f8b4 30ec 	ldrh.w	r3, [r4, #236]	@ 0xec
 800faf2:	2b00      	cmp	r3, #0
 800faf4:	d1cf      	bne.n	800fa96 <_ZN8touchgfx11Application15drawCachedAreasEv+0x5a>
 800faf6:	b01b      	add	sp, #108	@ 0x6c
 800faf8:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 800fafc:	f8b4 312e 	ldrh.w	r3, [r4, #302]	@ 0x12e
 800fb00:	42b3      	cmp	r3, r6
 800fb02:	d90c      	bls.n	800fb1e <_ZN8touchgfx11Application15drawCachedAreasEv+0xe2>
 800fb04:	eb04 03c6 	add.w	r3, r4, r6, lsl #3
 800fb08:	6822      	ldr	r2, [r4, #0]
 800fb0a:	f8d3 10ee 	ldr.w	r1, [r3, #238]	@ 0xee
 800fb0e:	6c17      	ldr	r7, [r2, #64]	@ 0x40
 800fb10:	f8d3 20f2 	ldr.w	r2, [r3, #242]	@ 0xf2
 800fb14:	4620      	mov	r0, r4
 800fb16:	3601      	adds	r6, #1
 800fb18:	47b8      	blx	r7
 800fb1a:	b2b6      	uxth	r6, r6
 800fb1c:	e7ee      	b.n	800fafc <_ZN8touchgfx11Application15drawCachedAreasEv+0xc0>
 800fb1e:	4a9b      	ldr	r2, [pc, #620]	@ (800fd8c <_ZN8touchgfx11Application15drawCachedAreasEv+0x350>)
 800fb20:	6813      	ldr	r3, [r2, #0]
 800fb22:	f893 3048 	ldrb.w	r3, [r3, #72]	@ 0x48
 800fb26:	2b01      	cmp	r3, #1
 800fb28:	4691      	mov	r9, r2
 800fb2a:	f040 80e2 	bne.w	800fcf2 <_ZN8touchgfx11Application15drawCachedAreasEv+0x2b6>
 800fb2e:	8829      	ldrh	r1, [r5, #0]
 800fb30:	f8b4 70ec 	ldrh.w	r7, [r4, #236]	@ 0xec
 800fb34:	eb04 03c1 	add.w	r3, r4, r1, lsl #3
 800fb38:	33ae      	adds	r3, #174	@ 0xae
 800fb3a:	2600      	movs	r6, #0
 800fb3c:	428f      	cmp	r7, r1
 800fb3e:	f103 0308 	add.w	r3, r3, #8
 800fb42:	dd0a      	ble.n	800fb5a <_ZN8touchgfx11Application15drawCachedAreasEv+0x11e>
 800fb44:	f833 2c04 	ldrh.w	r2, [r3, #-4]
 800fb48:	f833 0c08 	ldrh.w	r0, [r3, #-8]
 800fb4c:	4402      	add	r2, r0
 800fb4e:	b212      	sxth	r2, r2
 800fb50:	4296      	cmp	r6, r2
 800fb52:	bfb8      	it	lt
 800fb54:	4616      	movlt	r6, r2
 800fb56:	3101      	adds	r1, #1
 800fb58:	e7f0      	b.n	800fb3c <_ZN8touchgfx11Application15drawCachedAreasEv+0x100>
 800fb5a:	4b8d      	ldr	r3, [pc, #564]	@ (800fd90 <_ZN8touchgfx11Application15drawCachedAreasEv+0x354>)
 800fb5c:	f8df 922c 	ldr.w	r9, [pc, #556]	@ 800fd8c <_ZN8touchgfx11Application15drawCachedAreasEv+0x350>
 800fb60:	881b      	ldrh	r3, [r3, #0]
 800fb62:	2b0f      	cmp	r3, #15
 800fb64:	bf88      	it	hi
 800fb66:	ea4f 0bd3 	movhi.w	fp, r3, lsr #3
 800fb6a:	f04f 0300 	mov.w	r3, #0
 800fb6e:	e9cd 3305 	strd	r3, r3, [sp, #20]
 800fb72:	bf98      	it	ls
 800fb74:	f04f 0b01 	movls.w	fp, #1
 800fb78:	f8bd 7016 	ldrh.w	r7, [sp, #22]
 800fb7c:	f8bd 001a 	ldrh.w	r0, [sp, #26]
 800fb80:	4b82      	ldr	r3, [pc, #520]	@ (800fd8c <_ZN8touchgfx11Application15drawCachedAreasEv+0x350>)
 800fb82:	4438      	add	r0, r7
 800fb84:	b207      	sxth	r7, r0
 800fb86:	6818      	ldr	r0, [r3, #0]
 800fb88:	42b7      	cmp	r7, r6
 800fb8a:	6803      	ldr	r3, [r0, #0]
 800fb8c:	f280 8083 	bge.w	800fc96 <_ZN8touchgfx11Application15drawCachedAreasEv+0x25a>
 800fb90:	f8d3 309c 	ldr.w	r3, [r3, #156]	@ 0x9c
 800fb94:	4798      	blx	r3
 800fb96:	eb07 030b 	add.w	r3, r7, fp
 800fb9a:	4298      	cmp	r0, r3
 800fb9c:	da07      	bge.n	800fbae <_ZN8touchgfx11Application15drawCachedAreasEv+0x172>
 800fb9e:	42b0      	cmp	r0, r6
 800fba0:	da05      	bge.n	800fbae <_ZN8touchgfx11Application15drawCachedAreasEv+0x172>
 800fba2:	4287      	cmp	r7, r0
 800fba4:	dd6c      	ble.n	800fc80 <_ZN8touchgfx11Application15drawCachedAreasEv+0x244>
 800fba6:	2f00      	cmp	r7, #0
 800fba8:	dd6a      	ble.n	800fc80 <_ZN8touchgfx11Application15drawCachedAreasEv+0x244>
 800fbaa:	4630      	mov	r0, r6
 800fbac:	e004      	b.n	800fbb8 <_ZN8touchgfx11Application15drawCachedAreasEv+0x17c>
 800fbae:	4287      	cmp	r7, r0
 800fbb0:	dcfb      	bgt.n	800fbaa <_ZN8touchgfx11Application15drawCachedAreasEv+0x16e>
 800fbb2:	42b0      	cmp	r0, r6
 800fbb4:	bfa8      	it	ge
 800fbb6:	4630      	movge	r0, r6
 800fbb8:	4b76      	ldr	r3, [pc, #472]	@ (800fd94 <_ZN8touchgfx11Application15drawCachedAreasEv+0x358>)
 800fbba:	f8ad 7016 	strh.w	r7, [sp, #22]
 800fbbe:	1bc0      	subs	r0, r0, r7
 800fbc0:	f9b3 3000 	ldrsh.w	r3, [r3]
 800fbc4:	882f      	ldrh	r7, [r5, #0]
 800fbc6:	f8ad 3018 	strh.w	r3, [sp, #24]
 800fbca:	2200      	movs	r2, #0
 800fbcc:	f8ad 2014 	strh.w	r2, [sp, #20]
 800fbd0:	f8ad 001a 	strh.w	r0, [sp, #26]
 800fbd4:	f8b4 30ec 	ldrh.w	r3, [r4, #236]	@ 0xec
 800fbd8:	42bb      	cmp	r3, r7
 800fbda:	d9cd      	bls.n	800fb78 <_ZN8touchgfx11Application15drawCachedAreasEv+0x13c>
 800fbdc:	eb04 02c7 	add.w	r2, r4, r7, lsl #3
 800fbe0:	ab07      	add	r3, sp, #28
 800fbe2:	f852 0fac 	ldr.w	r0, [r2, #172]!
 800fbe6:	6851      	ldr	r1, [r2, #4]
 800fbe8:	c303      	stmia	r3!, {r0, r1}
 800fbea:	a905      	add	r1, sp, #20
 800fbec:	a807      	add	r0, sp, #28
 800fbee:	f7ff f9b1 	bl	800ef54 <_ZNK8touchgfx4Rect9intersectERKS0_>
 800fbf2:	2800      	cmp	r0, #0
 800fbf4:	d04c      	beq.n	800fc90 <_ZN8touchgfx11Application15drawCachedAreasEv+0x254>
 800fbf6:	f9bd 001c 	ldrsh.w	r0, [sp, #28]
 800fbfa:	f9bd 2014 	ldrsh.w	r2, [sp, #20]
 800fbfe:	f8bd a020 	ldrh.w	sl, [sp, #32]
 800fc02:	f9bd 101e 	ldrsh.w	r1, [sp, #30]
 800fc06:	f9bd 3016 	ldrsh.w	r3, [sp, #22]
 800fc0a:	9302      	str	r3, [sp, #8]
 800fc0c:	4686      	mov	lr, r0
 800fc0e:	4290      	cmp	r0, r2
 800fc10:	4450      	add	r0, sl
 800fc12:	f8bd a018 	ldrh.w	sl, [sp, #24]
 800fc16:	bfb8      	it	lt
 800fc18:	4696      	movlt	lr, r2
 800fc1a:	4452      	add	r2, sl
 800fc1c:	4299      	cmp	r1, r3
 800fc1e:	b280      	uxth	r0, r0
 800fc20:	b292      	uxth	r2, r2
 800fc22:	468c      	mov	ip, r1
 800fc24:	fa0f fa82 	sxth.w	sl, r2
 800fc28:	bfb8      	it	lt
 800fc2a:	469c      	movlt	ip, r3
 800fc2c:	b203      	sxth	r3, r0
 800fc2e:	4553      	cmp	r3, sl
 800fc30:	bfb8      	it	lt
 800fc32:	4602      	movlt	r2, r0
 800fc34:	eba2 020e 	sub.w	r2, r2, lr
 800fc38:	f8ad 2020 	strh.w	r2, [sp, #32]
 800fc3c:	f8bd 2022 	ldrh.w	r2, [sp, #34]	@ 0x22
 800fc40:	9b02      	ldr	r3, [sp, #8]
 800fc42:	f8ad e01c 	strh.w	lr, [sp, #28]
 800fc46:	4411      	add	r1, r2
 800fc48:	f8bd 201a 	ldrh.w	r2, [sp, #26]
 800fc4c:	f8ad c01e 	strh.w	ip, [sp, #30]
 800fc50:	4413      	add	r3, r2
 800fc52:	b289      	uxth	r1, r1
 800fc54:	b29b      	uxth	r3, r3
 800fc56:	b208      	sxth	r0, r1
 800fc58:	b21a      	sxth	r2, r3
 800fc5a:	4290      	cmp	r0, r2
 800fc5c:	bfb8      	it	lt
 800fc5e:	460b      	movlt	r3, r1
 800fc60:	eba3 030c 	sub.w	r3, r3, ip
 800fc64:	f8ad 3022 	strh.w	r3, [sp, #34]	@ 0x22
 800fc68:	a807      	add	r0, sp, #28
 800fc6a:	f7fc f88c 	bl	800bd86 <_ZNK8touchgfx4Rect7isEmptyEv>
 800fc6e:	b920      	cbnz	r0, 800fc7a <_ZN8touchgfx11Application15drawCachedAreasEv+0x23e>
 800fc70:	6823      	ldr	r3, [r4, #0]
 800fc72:	a907      	add	r1, sp, #28
 800fc74:	6c9b      	ldr	r3, [r3, #72]	@ 0x48
 800fc76:	4620      	mov	r0, r4
 800fc78:	4798      	blx	r3
 800fc7a:	3701      	adds	r7, #1
 800fc7c:	b2bf      	uxth	r7, r7
 800fc7e:	e7a9      	b.n	800fbd4 <_ZN8touchgfx11Application15drawCachedAreasEv+0x198>
 800fc80:	f8d9 0000 	ldr.w	r0, [r9]
 800fc84:	6803      	ldr	r3, [r0, #0]
 800fc86:	2101      	movs	r1, #1
 800fc88:	f8d3 3098 	ldr.w	r3, [r3, #152]	@ 0x98
 800fc8c:	4798      	blx	r3
 800fc8e:	e773      	b.n	800fb78 <_ZN8touchgfx11Application15drawCachedAreasEv+0x13c>
 800fc90:	e9cd 0007 	strd	r0, r0, [sp, #28]
 800fc94:	e7e8      	b.n	800fc68 <_ZN8touchgfx11Application15drawCachedAreasEv+0x22c>
 800fc96:	6a5b      	ldr	r3, [r3, #36]	@ 0x24
 800fc98:	4798      	blx	r3
 800fc9a:	4b3f      	ldr	r3, [pc, #252]	@ (800fd98 <_ZN8touchgfx11Application15drawCachedAreasEv+0x35c>)
 800fc9c:	781b      	ldrb	r3, [r3, #0]
 800fc9e:	2b00      	cmp	r3, #0
 800fca0:	f43f af29 	beq.w	800faf6 <_ZN8touchgfx11Application15drawCachedAreasEv+0xba>
 800fca4:	2300      	movs	r3, #0
 800fca6:	f8a4 312e 	strh.w	r3, [r4, #302]	@ 0x12e
 800fcaa:	882b      	ldrh	r3, [r5, #0]
 800fcac:	f8bd 5064 	ldrh.w	r5, [sp, #100]	@ 0x64
 800fcb0:	f104 00ee 	add.w	r0, r4, #238	@ 0xee
 800fcb4:	42ab      	cmp	r3, r5
 800fcb6:	f4bf af1e 	bcs.w	800faf6 <_ZN8touchgfx11Application15drawCachedAreasEv+0xba>
 800fcba:	f8b4 112e 	ldrh.w	r1, [r4, #302]	@ 0x12e
 800fcbe:	2907      	cmp	r1, #7
 800fcc0:	d814      	bhi.n	800fcec <_ZN8touchgfx11Application15drawCachedAreasEv+0x2b0>
 800fcc2:	eb08 02c3 	add.w	r2, r8, r3, lsl #3
 800fcc6:	f938 e033 	ldrsh.w	lr, [r8, r3, lsl #3]
 800fcca:	f9b2 c002 	ldrsh.w	ip, [r2, #2]
 800fcce:	f9b2 7004 	ldrsh.w	r7, [r2, #4]
 800fcd2:	f9b2 6006 	ldrsh.w	r6, [r2, #6]
 800fcd6:	1c4a      	adds	r2, r1, #1
 800fcd8:	f8a4 212e 	strh.w	r2, [r4, #302]	@ 0x12e
 800fcdc:	eb00 02c1 	add.w	r2, r0, r1, lsl #3
 800fce0:	f820 e031 	strh.w	lr, [r0, r1, lsl #3]
 800fce4:	f8a2 c002 	strh.w	ip, [r2, #2]
 800fce8:	8097      	strh	r7, [r2, #4]
 800fcea:	80d6      	strh	r6, [r2, #6]
 800fcec:	3301      	adds	r3, #1
 800fcee:	b29b      	uxth	r3, r3
 800fcf0:	e7e0      	b.n	800fcb4 <_ZN8touchgfx11Application15drawCachedAreasEv+0x278>
 800fcf2:	2b02      	cmp	r3, #2
 800fcf4:	f040 8133 	bne.w	800ff5e <_ZN8touchgfx11Application15drawCachedAreasEv+0x522>
 800fcf8:	4b28      	ldr	r3, [pc, #160]	@ (800fd9c <_ZN8touchgfx11Application15drawCachedAreasEv+0x360>)
 800fcfa:	781b      	ldrb	r3, [r3, #0]
 800fcfc:	2b01      	cmp	r3, #1
 800fcfe:	f104 0aac 	add.w	sl, r4, #172	@ 0xac
 800fd02:	f000 8098 	beq.w	800fe36 <_ZN8touchgfx11Application15drawCachedAreasEv+0x3fa>
 800fd06:	882a      	ldrh	r2, [r5, #0]
 800fd08:	f8b4 10ec 	ldrh.w	r1, [r4, #236]	@ 0xec
 800fd0c:	3201      	adds	r2, #1
 800fd0e:	b292      	uxth	r2, r2
 800fd10:	2900      	cmp	r1, #0
 800fd12:	d0c2      	beq.n	800fc9a <_ZN8touchgfx11Application15drawCachedAreasEv+0x25e>
 800fd14:	f8b4 60ae 	ldrh.w	r6, [r4, #174]	@ 0xae
 800fd18:	f8b4 30b2 	ldrh.w	r3, [r4, #178]	@ 0xb2
 800fd1c:	441e      	add	r6, r3
 800fd1e:	b236      	sxth	r6, r6
 800fd20:	4694      	mov	ip, r2
 800fd22:	f04f 0900 	mov.w	r9, #0
 800fd26:	fa1f f38c 	uxth.w	r3, ip
 800fd2a:	4299      	cmp	r1, r3
 800fd2c:	ea4f 07c9 	mov.w	r7, r9, lsl #3
 800fd30:	f240 80bf 	bls.w	800feb2 <_ZN8touchgfx11Application15drawCachedAreasEv+0x476>
 800fd34:	4427      	add	r7, r4
 800fd36:	eb04 0ecc 	add.w	lr, r4, ip, lsl #3
 800fd3a:	f9b7 30ae 	ldrsh.w	r3, [r7, #174]	@ 0xae
 800fd3e:	f9be 00ae 	ldrsh.w	r0, [lr, #174]	@ 0xae
 800fd42:	4283      	cmp	r3, r0
 800fd44:	f340 80a1 	ble.w	800fe8a <_ZN8touchgfx11Application15drawCachedAreasEv+0x44e>
 800fd48:	f8be 60b2 	ldrh.w	r6, [lr, #178]	@ 0xb2
 800fd4c:	4406      	add	r6, r0
 800fd4e:	b236      	sxth	r6, r6
 800fd50:	429e      	cmp	r6, r3
 800fd52:	bfa8      	it	ge
 800fd54:	461e      	movge	r6, r3
 800fd56:	46e1      	mov	r9, ip
 800fd58:	f10c 0c01 	add.w	ip, ip, #1
 800fd5c:	e7e3      	b.n	800fd26 <_ZN8touchgfx11Application15drawCachedAreasEv+0x2ea>
 800fd5e:	d10a      	bne.n	800fd76 <_ZN8touchgfx11Application15drawCachedAreasEv+0x33a>
 800fd60:	f9b6 00b2 	ldrsh.w	r0, [r6, #178]	@ 0xb2
 800fd64:	f9be 10b2 	ldrsh.w	r1, [lr, #178]	@ 0xb2
 800fd68:	4562      	cmp	r2, ip
 800fd6a:	bfb8      	it	lt
 800fd6c:	4662      	movlt	r2, ip
 800fd6e:	4288      	cmp	r0, r1
 800fd70:	bfb8      	it	lt
 800fd72:	461f      	movlt	r7, r3
 800fd74:	e087      	b.n	800fe86 <_ZN8touchgfx11Application15drawCachedAreasEv+0x44a>
 800fd76:	428a      	cmp	r2, r1
 800fd78:	bfb8      	it	lt
 800fd7a:	460a      	movlt	r2, r1
 800fd7c:	e083      	b.n	800fe86 <_ZN8touchgfx11Application15drawCachedAreasEv+0x44a>
 800fd7e:	bf00      	nop
 800fd80:	20002c94 	.word	0x20002c94
 800fd84:	20002ca0 	.word	0x20002ca0
 800fd88:	20000024 	.word	0x20000024
 800fd8c:	20002c5c 	.word	0x20002c5c
 800fd90:	20002c52 	.word	0x20002c52
 800fd94:	20002c50 	.word	0x20002c50
 800fd98:	20002c5a 	.word	0x20002c5a
 800fd9c:	20002c54 	.word	0x20002c54
 800fda0:	19a1      	adds	r1, r4, r6
 800fda2:	ab07      	add	r3, sp, #28
 800fda4:	f851 0fac 	ldr.w	r0, [r1, #172]!
 800fda8:	6849      	ldr	r1, [r1, #4]
 800fdaa:	c303      	stmia	r3!, {r0, r1}
 800fdac:	f9bd 3020 	ldrsh.w	r3, [sp, #32]
 800fdb0:	f8bd 101c 	ldrh.w	r1, [sp, #28]
 800fdb4:	2b13      	cmp	r3, #19
 800fdb6:	bfd8      	it	le
 800fdb8:	f9bd 201c 	ldrshle.w	r2, [sp, #28]
 800fdbc:	f8ad 201c 	strh.w	r2, [sp, #28]
 800fdc0:	440b      	add	r3, r1
 800fdc2:	1a9b      	subs	r3, r3, r2
 800fdc4:	a807      	add	r0, sp, #28
 800fdc6:	f8ad 3020 	strh.w	r3, [sp, #32]
 800fdca:	f7ff f813 	bl	800edf4 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectE>
 800fdce:	a807      	add	r0, sp, #28
 800fdd0:	f7fb ffd9 	bl	800bd86 <_ZNK8touchgfx4Rect7isEmptyEv>
 800fdd4:	bb78      	cbnz	r0, 800fe36 <_ZN8touchgfx11Application15drawCachedAreasEv+0x3fa>
 800fdd6:	f9bd c022 	ldrsh.w	ip, [sp, #34]	@ 0x22
 800fdda:	f8d9 0000 	ldr.w	r0, [r9]
 800fdde:	f8bd 3020 	ldrh.w	r3, [sp, #32]
 800fde2:	f8d0 e000 	ldr.w	lr, [r0]
 800fde6:	f8bd 201e 	ldrh.w	r2, [sp, #30]
 800fdea:	f8bd 101c 	ldrh.w	r1, [sp, #28]
 800fdee:	f1bc 0f14 	cmp.w	ip, #20
 800fdf2:	bfa8      	it	ge
 800fdf4:	f04f 0c14 	movge.w	ip, #20
 800fdf8:	fa1f fc8c 	uxth.w	ip, ip
 800fdfc:	f8cd c000 	str.w	ip, [sp]
 800fe00:	f8de b090 	ldr.w	fp, [lr, #144]	@ 0x90
 800fe04:	47d8      	blx	fp
 800fe06:	4683      	mov	fp, r0
 800fe08:	f8ad 0022 	strh.w	r0, [sp, #34]	@ 0x22
 800fe0c:	a807      	add	r0, sp, #28
 800fe0e:	f7fe ffd7 	bl	800edc0 <_ZN8touchgfx21DisplayTransformation29transformFrameBufferToDisplayERNS_4RectE>
 800fe12:	6823      	ldr	r3, [r4, #0]
 800fe14:	4426      	add	r6, r4
 800fe16:	4620      	mov	r0, r4
 800fe18:	6c9b      	ldr	r3, [r3, #72]	@ 0x48
 800fe1a:	a907      	add	r1, sp, #28
 800fe1c:	4798      	blx	r3
 800fe1e:	f8b6 00b0 	ldrh.w	r0, [r6, #176]	@ 0xb0
 800fe22:	eba0 000b 	sub.w	r0, r0, fp
 800fe26:	b200      	sxth	r0, r0
 800fe28:	f8a6 00b0 	strh.w	r0, [r6, #176]	@ 0xb0
 800fe2c:	b918      	cbnz	r0, 800fe36 <_ZN8touchgfx11Application15drawCachedAreasEv+0x3fa>
 800fe2e:	b2b9      	uxth	r1, r7
 800fe30:	4650      	mov	r0, sl
 800fe32:	f7ff fa79 	bl	800f328 <_ZN8touchgfx6VectorINS_4RectELt8EE13quickRemoveAtEt>
 800fe36:	f8b4 b0ec 	ldrh.w	fp, [r4, #236]	@ 0xec
 800fe3a:	f1bb 0f00 	cmp.w	fp, #0
 800fe3e:	f43f af2c 	beq.w	800fc9a <_ZN8touchgfx11Application15drawCachedAreasEv+0x25e>
 800fe42:	882b      	ldrh	r3, [r5, #0]
 800fe44:	f9b4 20ac 	ldrsh.w	r2, [r4, #172]	@ 0xac
 800fe48:	3301      	adds	r3, #1
 800fe4a:	b29b      	uxth	r3, r3
 800fe4c:	2700      	movs	r7, #0
 800fe4e:	b299      	uxth	r1, r3
 800fe50:	458b      	cmp	fp, r1
 800fe52:	ea4f 06c7 	mov.w	r6, r7, lsl #3
 800fe56:	d9a3      	bls.n	800fda0 <_ZN8touchgfx11Application15drawCachedAreasEv+0x364>
 800fe58:	4426      	add	r6, r4
 800fe5a:	eb04 0ec3 	add.w	lr, r4, r3, lsl #3
 800fe5e:	f8b6 10ac 	ldrh.w	r1, [r6, #172]	@ 0xac
 800fe62:	f8b6 00b0 	ldrh.w	r0, [r6, #176]	@ 0xb0
 800fe66:	f9be c0ac 	ldrsh.w	ip, [lr, #172]	@ 0xac
 800fe6a:	4408      	add	r0, r1
 800fe6c:	f8be 10b0 	ldrh.w	r1, [lr, #176]	@ 0xb0
 800fe70:	4461      	add	r1, ip
 800fe72:	b200      	sxth	r0, r0
 800fe74:	b209      	sxth	r1, r1
 800fe76:	4288      	cmp	r0, r1
 800fe78:	f6bf af71 	bge.w	800fd5e <_ZN8touchgfx11Application15drawCachedAreasEv+0x322>
 800fe7c:	4584      	cmp	ip, r0
 800fe7e:	4662      	mov	r2, ip
 800fe80:	461f      	mov	r7, r3
 800fe82:	bfb8      	it	lt
 800fe84:	4602      	movlt	r2, r0
 800fe86:	3301      	adds	r3, #1
 800fe88:	e7e1      	b.n	800fe4e <_ZN8touchgfx11Application15drawCachedAreasEv+0x412>
 800fe8a:	d10e      	bne.n	800feaa <_ZN8touchgfx11Application15drawCachedAreasEv+0x46e>
 800fe8c:	f9be 00b0 	ldrsh.w	r0, [lr, #176]	@ 0xb0
 800fe90:	f8be e0b2 	ldrh.w	lr, [lr, #178]	@ 0xb2
 800fe94:	f9b7 70b0 	ldrsh.w	r7, [r7, #176]	@ 0xb0
 800fe98:	4473      	add	r3, lr
 800fe9a:	b21b      	sxth	r3, r3
 800fe9c:	429e      	cmp	r6, r3
 800fe9e:	bfa8      	it	ge
 800fea0:	461e      	movge	r6, r3
 800fea2:	4287      	cmp	r7, r0
 800fea4:	bfb8      	it	lt
 800fea6:	46e1      	movlt	r9, ip
 800fea8:	e756      	b.n	800fd58 <_ZN8touchgfx11Application15drawCachedAreasEv+0x31c>
 800feaa:	4286      	cmp	r6, r0
 800feac:	bfa8      	it	ge
 800feae:	4606      	movge	r6, r0
 800feb0:	e752      	b.n	800fd58 <_ZN8touchgfx11Application15drawCachedAreasEv+0x31c>
 800feb2:	eb0a 0007 	add.w	r0, sl, r7
 800feb6:	4427      	add	r7, r4
 800feb8:	e9cd 2102 	strd	r2, r1, [sp, #8]
 800febc:	f9b7 b0b2 	ldrsh.w	fp, [r7, #178]	@ 0xb2
 800fec0:	f1bb 0f13 	cmp.w	fp, #19
 800fec4:	bfde      	ittt	le
 800fec6:	f8b7 60ae 	ldrhle.w	r6, [r7, #174]	@ 0xae
 800feca:	445e      	addle	r6, fp
 800fecc:	b236      	sxthle	r6, r6
 800fece:	f7fb ff5a 	bl	800bd86 <_ZNK8touchgfx4Rect7isEmptyEv>
 800fed2:	e9dd 2102 	ldrd	r2, r1, [sp, #8]
 800fed6:	2800      	cmp	r0, #0
 800fed8:	f47f af1a 	bne.w	800fd10 <_ZN8touchgfx11Application15drawCachedAreasEv+0x2d4>
 800fedc:	f9b7 20ae 	ldrsh.w	r2, [r7, #174]	@ 0xae
 800fee0:	f8ad 0022 	strh.w	r0, [sp, #34]	@ 0x22
 800fee4:	482a      	ldr	r0, [pc, #168]	@ (800ff90 <_ZN8touchgfx11Application15drawCachedAreasEv+0x554>)
 800fee6:	f9b7 10ac 	ldrsh.w	r1, [r7, #172]	@ 0xac
 800feea:	f9b7 30b0 	ldrsh.w	r3, [r7, #176]	@ 0xb0
 800feee:	6800      	ldr	r0, [r0, #0]
 800fef0:	f8ad 101c 	strh.w	r1, [sp, #28]
 800fef4:	1ab6      	subs	r6, r6, r2
 800fef6:	2e14      	cmp	r6, #20
 800fef8:	f8ad 201e 	strh.w	r2, [sp, #30]
 800fefc:	f8ad 3020 	strh.w	r3, [sp, #32]
 800ff00:	bfa8      	it	ge
 800ff02:	2614      	movge	r6, #20
 800ff04:	f8d0 c000 	ldr.w	ip, [r0]
 800ff08:	b2b6      	uxth	r6, r6
 800ff0a:	fa1f fb8b 	uxth.w	fp, fp
 800ff0e:	455e      	cmp	r6, fp
 800ff10:	bf94      	ite	ls
 800ff12:	9600      	strls	r6, [sp, #0]
 800ff14:	f8cd b000 	strhi.w	fp, [sp]
 800ff18:	b292      	uxth	r2, r2
 800ff1a:	f8dc 6090 	ldr.w	r6, [ip, #144]	@ 0x90
 800ff1e:	b29b      	uxth	r3, r3
 800ff20:	b289      	uxth	r1, r1
 800ff22:	47b0      	blx	r6
 800ff24:	6823      	ldr	r3, [r4, #0]
 800ff26:	f8ad 0022 	strh.w	r0, [sp, #34]	@ 0x22
 800ff2a:	6c9b      	ldr	r3, [r3, #72]	@ 0x48
 800ff2c:	a907      	add	r1, sp, #28
 800ff2e:	4620      	mov	r0, r4
 800ff30:	4798      	blx	r3
 800ff32:	f8bd 1022 	ldrh.w	r1, [sp, #34]	@ 0x22
 800ff36:	f8b7 30b2 	ldrh.w	r3, [r7, #178]	@ 0xb2
 800ff3a:	f8b7 20ae 	ldrh.w	r2, [r7, #174]	@ 0xae
 800ff3e:	1a5b      	subs	r3, r3, r1
 800ff40:	440a      	add	r2, r1
 800ff42:	b21b      	sxth	r3, r3
 800ff44:	f8a7 20ae 	strh.w	r2, [r7, #174]	@ 0xae
 800ff48:	f8a7 30b2 	strh.w	r3, [r7, #178]	@ 0xb2
 800ff4c:	2b00      	cmp	r3, #0
 800ff4e:	f47f aeda 	bne.w	800fd06 <_ZN8touchgfx11Application15drawCachedAreasEv+0x2ca>
 800ff52:	fa1f f189 	uxth.w	r1, r9
 800ff56:	4650      	mov	r0, sl
 800ff58:	f7ff f9e6 	bl	800f328 <_ZN8touchgfx6VectorINS_4RectELt8EE13quickRemoveAtEt>
 800ff5c:	e6d3      	b.n	800fd06 <_ZN8touchgfx11Application15drawCachedAreasEv+0x2ca>
 800ff5e:	882e      	ldrh	r6, [r5, #0]
 800ff60:	f8b4 30ec 	ldrh.w	r3, [r4, #236]	@ 0xec
 800ff64:	42b3      	cmp	r3, r6
 800ff66:	f67f ae98 	bls.w	800fc9a <_ZN8touchgfx11Application15drawCachedAreasEv+0x25e>
 800ff6a:	eb04 02c6 	add.w	r2, r4, r6, lsl #3
 800ff6e:	ab07      	add	r3, sp, #28
 800ff70:	f852 0fac 	ldr.w	r0, [r2, #172]!
 800ff74:	6851      	ldr	r1, [r2, #4]
 800ff76:	c303      	stmia	r3!, {r0, r1}
 800ff78:	a807      	add	r0, sp, #28
 800ff7a:	f7fb ff04 	bl	800bd86 <_ZNK8touchgfx4Rect7isEmptyEv>
 800ff7e:	b920      	cbnz	r0, 800ff8a <_ZN8touchgfx11Application15drawCachedAreasEv+0x54e>
 800ff80:	6823      	ldr	r3, [r4, #0]
 800ff82:	a907      	add	r1, sp, #28
 800ff84:	6c9b      	ldr	r3, [r3, #72]	@ 0x48
 800ff86:	4620      	mov	r0, r4
 800ff88:	4798      	blx	r3
 800ff8a:	3601      	adds	r6, #1
 800ff8c:	b2b6      	uxth	r6, r6
 800ff8e:	e7e7      	b.n	800ff60 <_ZN8touchgfx11Application15drawCachedAreasEv+0x524>
 800ff90:	20002c5c 	.word	0x20002c5c

0800ff94 <_GLOBAL__sub_I__ZN8touchgfx11Application8instanceE>:
 800ff94:	4b03      	ldr	r3, [pc, #12]	@ (800ffa4 <_GLOBAL__sub_I__ZN8touchgfx11Application8instanceE+0x10>)
 800ff96:	2200      	movs	r2, #0
 800ff98:	801a      	strh	r2, [r3, #0]
 800ff9a:	805a      	strh	r2, [r3, #2]
 800ff9c:	809a      	strh	r2, [r3, #4]
 800ff9e:	80da      	strh	r2, [r3, #6]
 800ffa0:	4770      	bx	lr
 800ffa2:	bf00      	nop
 800ffa4:	20002ca0 	.word	0x20002ca0

0800ffa8 <_ZNK8touchgfx4Font17getStringWidthLTREhPKtSt9__va_list>:
 800ffa8:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 800ffac:	4606      	mov	r6, r0
 800ffae:	b09d      	sub	sp, #116	@ 0x74
 800ffb0:	a803      	add	r0, sp, #12
 800ffb2:	4614      	mov	r4, r2
 800ffb4:	468a      	mov	sl, r1
 800ffb6:	461d      	mov	r5, r3
 800ffb8:	f000 fd72 	bl	8010aa0 <_ZN8touchgfx12TextProviderC1Ev>
 800ffbc:	6833      	ldr	r3, [r6, #0]
 800ffbe:	4630      	mov	r0, r6
 800ffc0:	6cdb      	ldr	r3, [r3, #76]	@ 0x4c
 800ffc2:	4798      	blx	r3
 800ffc4:	6833      	ldr	r3, [r6, #0]
 800ffc6:	4607      	mov	r7, r0
 800ffc8:	6d1b      	ldr	r3, [r3, #80]	@ 0x50
 800ffca:	4630      	mov	r0, r6
 800ffcc:	4798      	blx	r3
 800ffce:	462a      	mov	r2, r5
 800ffd0:	9000      	str	r0, [sp, #0]
 800ffd2:	4621      	mov	r1, r4
 800ffd4:	463b      	mov	r3, r7
 800ffd6:	a803      	add	r0, sp, #12
 800ffd8:	f000 fdbd 	bl	8010b56 <_ZN8touchgfx12TextProvider10initializeEPKtSt9__va_listS2_PKNS_24FontContextualFormsTableE>
 800ffdc:	2500      	movs	r5, #0
 800ffde:	462c      	mov	r4, r5
 800ffe0:	46a9      	mov	r9, r5
 800ffe2:	46a8      	mov	r8, r5
 800ffe4:	f242 0b0b 	movw	fp, #8203	@ 0x200b
 800ffe8:	2300      	movs	r3, #0
 800ffea:	9302      	str	r3, [sp, #8]
 800ffec:	f64f 63ff 	movw	r3, #65279	@ 0xfeff
 800fff0:	429c      	cmp	r4, r3
 800fff2:	d002      	beq.n	800fffa <_ZNK8touchgfx4Font17getStringWidthLTREhPKtSt9__va_list+0x52>
 800fff4:	455c      	cmp	r4, fp
 800fff6:	bf18      	it	ne
 800fff8:	4625      	movne	r5, r4
 800fffa:	ab02      	add	r3, sp, #8
 800fffc:	4632      	mov	r2, r6
 800fffe:	4651      	mov	r1, sl
 8010000:	a803      	add	r0, sp, #12
 8010002:	f001 f8d5 	bl	80111b0 <_ZN8touchgfx12TextProvider15getNextLigatureEhPKNS_4FontERPKNS_9GlyphNodeE>
 8010006:	4604      	mov	r4, r0
 8010008:	b108      	cbz	r0, 801000e <_ZNK8touchgfx4Font17getStringWidthLTREhPKtSt9__va_list+0x66>
 801000a:	280a      	cmp	r0, #10
 801000c:	d10a      	bne.n	8010024 <_ZNK8touchgfx4Font17getStringWidthLTREhPKtSt9__va_list+0x7c>
 801000e:	45c1      	cmp	r9, r8
 8010010:	bf38      	it	cc
 8010012:	46c1      	movcc	r9, r8
 8010014:	f04f 0800 	mov.w	r8, #0
 8010018:	2c00      	cmp	r4, #0
 801001a:	d1e5      	bne.n	800ffe8 <_ZNK8touchgfx4Font17getStringWidthLTREhPKtSt9__va_list+0x40>
 801001c:	4648      	mov	r0, r9
 801001e:	b01d      	add	sp, #116	@ 0x74
 8010020:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 8010024:	9a02      	ldr	r2, [sp, #8]
 8010026:	2a00      	cmp	r2, #0
 8010028:	d0de      	beq.n	800ffe8 <_ZNK8touchgfx4Font17getStringWidthLTREhPKtSt9__va_list+0x40>
 801002a:	7b57      	ldrb	r7, [r2, #13]
 801002c:	6833      	ldr	r3, [r6, #0]
 801002e:	8894      	ldrh	r4, [r2, #4]
 8010030:	6c5b      	ldr	r3, [r3, #68]	@ 0x44
 8010032:	007f      	lsls	r7, r7, #1
 8010034:	f407 7080 	and.w	r0, r7, #256	@ 0x100
 8010038:	7a97      	ldrb	r7, [r2, #10]
 801003a:	4629      	mov	r1, r5
 801003c:	4307      	orrs	r7, r0
 801003e:	4630      	mov	r0, r6
 8010040:	4798      	blx	r3
 8010042:	4438      	add	r0, r7
 8010044:	4480      	add	r8, r0
 8010046:	fa1f f888 	uxth.w	r8, r8
 801004a:	e7e5      	b.n	8010018 <_ZNK8touchgfx4Font17getStringWidthLTREhPKtSt9__va_list+0x70>

0801004c <_ZNK8touchgfx4Font12getCharWidthEt>:
 801004c:	b508      	push	{r3, lr}
 801004e:	6803      	ldr	r3, [r0, #0]
 8010050:	68db      	ldr	r3, [r3, #12]
 8010052:	4798      	blx	r3
 8010054:	b128      	cbz	r0, 8010062 <_ZNK8touchgfx4Font12getCharWidthEt+0x16>
 8010056:	7b43      	ldrb	r3, [r0, #13]
 8010058:	7a80      	ldrb	r0, [r0, #10]
 801005a:	005b      	lsls	r3, r3, #1
 801005c:	f403 7380 	and.w	r3, r3, #256	@ 0x100
 8010060:	4318      	orrs	r0, r3
 8010062:	bd08      	pop	{r3, pc}

08010064 <_ZNK8touchgfx4Font16getMaxTextHeightEPKtz>:
 8010064:	b40e      	push	{r1, r2, r3}
 8010066:	b5f0      	push	{r4, r5, r6, r7, lr}
 8010068:	b09e      	sub	sp, #120	@ 0x78
 801006a:	ab23      	add	r3, sp, #140	@ 0x8c
 801006c:	4605      	mov	r5, r0
 801006e:	f853 4b04 	ldr.w	r4, [r3], #4
 8010072:	9303      	str	r3, [sp, #12]
 8010074:	a805      	add	r0, sp, #20
 8010076:	f000 fd13 	bl	8010aa0 <_ZN8touchgfx12TextProviderC1Ev>
 801007a:	682b      	ldr	r3, [r5, #0]
 801007c:	4628      	mov	r0, r5
 801007e:	6cdb      	ldr	r3, [r3, #76]	@ 0x4c
 8010080:	4798      	blx	r3
 8010082:	682b      	ldr	r3, [r5, #0]
 8010084:	4606      	mov	r6, r0
 8010086:	6d1b      	ldr	r3, [r3, #80]	@ 0x50
 8010088:	4628      	mov	r0, r5
 801008a:	4798      	blx	r3
 801008c:	4633      	mov	r3, r6
 801008e:	ae1e      	add	r6, sp, #120	@ 0x78
 8010090:	4621      	mov	r1, r4
 8010092:	9000      	str	r0, [sp, #0]
 8010094:	9a03      	ldr	r2, [sp, #12]
 8010096:	2400      	movs	r4, #0
 8010098:	a805      	add	r0, sp, #20
 801009a:	f000 fd5c 	bl	8010b56 <_ZN8touchgfx12TextProvider10initializeEPKtSt9__va_listS2_PKNS_24FontContextualFormsTableE>
 801009e:	f846 4d68 	str.w	r4, [r6, #-104]!
 80100a2:	462a      	mov	r2, r5
 80100a4:	4633      	mov	r3, r6
 80100a6:	4621      	mov	r1, r4
 80100a8:	a805      	add	r0, sp, #20
 80100aa:	f001 f881 	bl	80111b0 <_ZN8touchgfx12TextProvider15getNextLigatureEhPKNS_4FontERPKNS_9GlyphNodeE>
 80100ae:	b1f0      	cbz	r0, 80100ee <_ZNK8touchgfx4Font16getMaxTextHeightEPKtz+0x8a>
 80100b0:	280a      	cmp	r0, #10
 80100b2:	d018      	beq.n	80100e6 <_ZNK8touchgfx4Font16getMaxTextHeightEPKtz+0x82>
 80100b4:	9f04      	ldr	r7, [sp, #16]
 80100b6:	b1b7      	cbz	r7, 80100e6 <_ZNK8touchgfx4Font16getMaxTextHeightEPKtz+0x82>
 80100b8:	7b78      	ldrb	r0, [r7, #13]
 80100ba:	7a3b      	ldrb	r3, [r7, #8]
 80100bc:	88ea      	ldrh	r2, [r5, #6]
 80100be:	00c1      	lsls	r1, r0, #3
 80100c0:	f401 7180 	and.w	r1, r1, #256	@ 0x100
 80100c4:	4319      	orrs	r1, r3
 80100c6:	0643      	lsls	r3, r0, #25
 80100c8:	bf44      	itt	mi
 80100ca:	f5a1 7300 	submi.w	r3, r1, #512	@ 0x200
 80100ce:	b219      	sxthmi	r1, r3
 80100d0:	0100      	lsls	r0, r0, #4
 80100d2:	79fb      	ldrb	r3, [r7, #7]
 80100d4:	f400 7080 	and.w	r0, r0, #256	@ 0x100
 80100d8:	4303      	orrs	r3, r0
 80100da:	4413      	add	r3, r2
 80100dc:	1a5b      	subs	r3, r3, r1
 80100de:	b21b      	sxth	r3, r3
 80100e0:	429c      	cmp	r4, r3
 80100e2:	bfb8      	it	lt
 80100e4:	461c      	movlt	r4, r3
 80100e6:	4633      	mov	r3, r6
 80100e8:	462a      	mov	r2, r5
 80100ea:	2100      	movs	r1, #0
 80100ec:	e7dc      	b.n	80100a8 <_ZNK8touchgfx4Font16getMaxTextHeightEPKtz+0x44>
 80100ee:	b2a0      	uxth	r0, r4
 80100f0:	b01e      	add	sp, #120	@ 0x78
 80100f2:	e8bd 40f0 	ldmia.w	sp!, {r4, r5, r6, r7, lr}
 80100f6:	b003      	add	sp, #12
 80100f8:	4770      	bx	lr

080100fa <_ZNK8touchgfx4Font20getMinimumTextHeightEv>:
 80100fa:	7a43      	ldrb	r3, [r0, #9]
 80100fc:	8880      	ldrh	r0, [r0, #4]
 80100fe:	4418      	add	r0, r3
 8010100:	b280      	uxth	r0, r0
 8010102:	4770      	bx	lr

08010104 <_ZNK8touchgfx4Font13getFontHeightEv>:
 8010104:	6803      	ldr	r3, [r0, #0]
 8010106:	6b1b      	ldr	r3, [r3, #48]	@ 0x30
 8010108:	4718      	bx	r3

0801010a <_ZNK8touchgfx4Font16getNumberOfLinesEPKtz>:
 801010a:	b40e      	push	{r1, r2, r3}
 801010c:	b570      	push	{r4, r5, r6, lr}
 801010e:	b09d      	sub	sp, #116	@ 0x74
 8010110:	ab21      	add	r3, sp, #132	@ 0x84
 8010112:	4604      	mov	r4, r0
 8010114:	f853 5b04 	ldr.w	r5, [r3], #4
 8010118:	9302      	str	r3, [sp, #8]
 801011a:	a803      	add	r0, sp, #12
 801011c:	f000 fcc0 	bl	8010aa0 <_ZN8touchgfx12TextProviderC1Ev>
 8010120:	6823      	ldr	r3, [r4, #0]
 8010122:	4620      	mov	r0, r4
 8010124:	6cdb      	ldr	r3, [r3, #76]	@ 0x4c
 8010126:	4798      	blx	r3
 8010128:	6823      	ldr	r3, [r4, #0]
 801012a:	4606      	mov	r6, r0
 801012c:	6d1b      	ldr	r3, [r3, #80]	@ 0x50
 801012e:	4620      	mov	r0, r4
 8010130:	4798      	blx	r3
 8010132:	4633      	mov	r3, r6
 8010134:	9000      	str	r0, [sp, #0]
 8010136:	9a02      	ldr	r2, [sp, #8]
 8010138:	4629      	mov	r1, r5
 801013a:	a803      	add	r0, sp, #12
 801013c:	f000 fd0b 	bl	8010b56 <_ZN8touchgfx12TextProvider10initializeEPKtSt9__va_listS2_PKNS_24FontContextualFormsTableE>
 8010140:	a803      	add	r0, sp, #12
 8010142:	f001 f903 	bl	801134c <_ZN8touchgfx12TextProvider11getNextCharEv>
 8010146:	2401      	movs	r4, #1
 8010148:	b2a3      	uxth	r3, r4
 801014a:	b140      	cbz	r0, 801015e <_ZNK8touchgfx4Font16getNumberOfLinesEPKtz+0x54>
 801014c:	280a      	cmp	r0, #10
 801014e:	bf08      	it	eq
 8010150:	3301      	addeq	r3, #1
 8010152:	a803      	add	r0, sp, #12
 8010154:	bf08      	it	eq
 8010156:	b21c      	sxtheq	r4, r3
 8010158:	f001 f8f8 	bl	801134c <_ZN8touchgfx12TextProvider11getNextCharEv>
 801015c:	e7f4      	b.n	8010148 <_ZNK8touchgfx4Font16getNumberOfLinesEPKtz+0x3e>
 801015e:	4618      	mov	r0, r3
 8010160:	b01d      	add	sp, #116	@ 0x74
 8010162:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
 8010166:	b003      	add	sp, #12
 8010168:	4770      	bx	lr

0801016a <_ZNK8touchgfx4Font15getSpacingAboveEPKtz>:
 801016a:	b40e      	push	{r1, r2, r3}
 801016c:	b5f0      	push	{r4, r5, r6, r7, lr}
 801016e:	b09e      	sub	sp, #120	@ 0x78
 8010170:	ab23      	add	r3, sp, #140	@ 0x8c
 8010172:	4604      	mov	r4, r0
 8010174:	f853 5b04 	ldr.w	r5, [r3], #4
 8010178:	9303      	str	r3, [sp, #12]
 801017a:	a805      	add	r0, sp, #20
 801017c:	f000 fc90 	bl	8010aa0 <_ZN8touchgfx12TextProviderC1Ev>
 8010180:	6823      	ldr	r3, [r4, #0]
 8010182:	4620      	mov	r0, r4
 8010184:	6cdb      	ldr	r3, [r3, #76]	@ 0x4c
 8010186:	4798      	blx	r3
 8010188:	6823      	ldr	r3, [r4, #0]
 801018a:	4606      	mov	r6, r0
 801018c:	6d1b      	ldr	r3, [r3, #80]	@ 0x50
 801018e:	4620      	mov	r0, r4
 8010190:	4798      	blx	r3
 8010192:	4633      	mov	r3, r6
 8010194:	4629      	mov	r1, r5
 8010196:	9000      	str	r0, [sp, #0]
 8010198:	9a03      	ldr	r2, [sp, #12]
 801019a:	a805      	add	r0, sp, #20
 801019c:	ad1e      	add	r5, sp, #120	@ 0x78
 801019e:	f000 fcda 	bl	8010b56 <_ZN8touchgfx12TextProvider10initializeEPKtSt9__va_listS2_PKNS_24FontContextualFormsTableE>
 80101a2:	2100      	movs	r1, #0
 80101a4:	f845 1d68 	str.w	r1, [r5, #-104]!
 80101a8:	4622      	mov	r2, r4
 80101aa:	462b      	mov	r3, r5
 80101ac:	a805      	add	r0, sp, #20
 80101ae:	f000 ffff 	bl	80111b0 <_ZN8touchgfx12TextProvider15getNextLigatureEhPKNS_4FontERPKNS_9GlyphNodeE>
 80101b2:	f647 76ff 	movw	r6, #32767	@ 0x7fff
 80101b6:	b1d8      	cbz	r0, 80101f0 <_ZNK8touchgfx4Font15getSpacingAboveEPKtz+0x86>
 80101b8:	280a      	cmp	r0, #10
 80101ba:	d012      	beq.n	80101e2 <_ZNK8touchgfx4Font15getSpacingAboveEPKtz+0x78>
 80101bc:	9804      	ldr	r0, [sp, #16]
 80101be:	b180      	cbz	r0, 80101e2 <_ZNK8touchgfx4Font15getSpacingAboveEPKtz+0x78>
 80101c0:	7b47      	ldrb	r7, [r0, #13]
 80101c2:	88e2      	ldrh	r2, [r4, #6]
 80101c4:	00fb      	lsls	r3, r7, #3
 80101c6:	f403 7180 	and.w	r1, r3, #256	@ 0x100
 80101ca:	7a03      	ldrb	r3, [r0, #8]
 80101cc:	430b      	orrs	r3, r1
 80101ce:	0679      	lsls	r1, r7, #25
 80101d0:	bf44      	itt	mi
 80101d2:	f5a3 7300 	submi.w	r3, r3, #512	@ 0x200
 80101d6:	b21b      	sxthmi	r3, r3
 80101d8:	1ad3      	subs	r3, r2, r3
 80101da:	b21b      	sxth	r3, r3
 80101dc:	429e      	cmp	r6, r3
 80101de:	bfa8      	it	ge
 80101e0:	461e      	movge	r6, r3
 80101e2:	462b      	mov	r3, r5
 80101e4:	4622      	mov	r2, r4
 80101e6:	2100      	movs	r1, #0
 80101e8:	a805      	add	r0, sp, #20
 80101ea:	f000 ffe1 	bl	80111b0 <_ZN8touchgfx12TextProvider15getNextLigatureEhPKNS_4FontERPKNS_9GlyphNodeE>
 80101ee:	e7e2      	b.n	80101b6 <_ZNK8touchgfx4Font15getSpacingAboveEPKtz+0x4c>
 80101f0:	4630      	mov	r0, r6
 80101f2:	b01e      	add	sp, #120	@ 0x78
 80101f4:	e8bd 40f0 	ldmia.w	sp!, {r4, r5, r6, r7, lr}
 80101f8:	b003      	add	sp, #12
 80101fa:	4770      	bx	lr

080101fc <_ZNK8touchgfx8Drawable10invalidateEv>:
 80101fc:	b513      	push	{r0, r1, r4, lr}
 80101fe:	6803      	ldr	r3, [r0, #0]
 8010200:	f9b0 1008 	ldrsh.w	r1, [r0, #8]
 8010204:	f9b0 200a 	ldrsh.w	r2, [r0, #10]
 8010208:	f8ad 1004 	strh.w	r1, [sp, #4]
 801020c:	2400      	movs	r4, #0
 801020e:	9400      	str	r4, [sp, #0]
 8010210:	f8ad 2006 	strh.w	r2, [sp, #6]
 8010214:	691b      	ldr	r3, [r3, #16]
 8010216:	4669      	mov	r1, sp
 8010218:	4798      	blx	r3
 801021a:	b002      	add	sp, #8
 801021c:	bd10      	pop	{r4, pc}

0801021e <_ZN8touchgfx8Drawable20getSolidRectAbsoluteEv>:
 801021e:	b538      	push	{r3, r4, r5, lr}
 8010220:	680b      	ldr	r3, [r1, #0]
 8010222:	460c      	mov	r4, r1
 8010224:	68db      	ldr	r3, [r3, #12]
 8010226:	4605      	mov	r5, r0
 8010228:	4798      	blx	r3
 801022a:	6823      	ldr	r3, [r4, #0]
 801022c:	4620      	mov	r0, r4
 801022e:	6adb      	ldr	r3, [r3, #44]	@ 0x2c
 8010230:	4629      	mov	r1, r5
 8010232:	4798      	blx	r3
 8010234:	4628      	mov	r0, r5
 8010236:	bd38      	pop	{r3, r4, r5, pc}

08010238 <_ZNK8touchgfx8Drawable23translateRectToAbsoluteERNS_4RectE>:
 8010238:	b410      	push	{r4}
 801023a:	880a      	ldrh	r2, [r1, #0]
 801023c:	8884      	ldrh	r4, [r0, #4]
 801023e:	4422      	add	r2, r4
 8010240:	800a      	strh	r2, [r1, #0]
 8010242:	88c4      	ldrh	r4, [r0, #6]
 8010244:	884a      	ldrh	r2, [r1, #2]
 8010246:	4422      	add	r2, r4
 8010248:	804a      	strh	r2, [r1, #2]
 801024a:	6940      	ldr	r0, [r0, #20]
 801024c:	b120      	cbz	r0, 8010258 <_ZNK8touchgfx8Drawable23translateRectToAbsoluteERNS_4RectE+0x20>
 801024e:	6803      	ldr	r3, [r0, #0]
 8010250:	f85d 4b04 	ldr.w	r4, [sp], #4
 8010254:	6adb      	ldr	r3, [r3, #44]	@ 0x2c
 8010256:	4718      	bx	r3
 8010258:	f85d 4b04 	ldr.w	r4, [sp], #4
 801025c:	4770      	bx	lr

0801025e <_ZNK8touchgfx8Drawable14getVisibleRectERNS_4RectE>:
 801025e:	b570      	push	{r4, r5, r6, lr}
 8010260:	8882      	ldrh	r2, [r0, #4]
 8010262:	880b      	ldrh	r3, [r1, #0]
 8010264:	4413      	add	r3, r2
 8010266:	800b      	strh	r3, [r1, #0]
 8010268:	88c2      	ldrh	r2, [r0, #6]
 801026a:	884b      	ldrh	r3, [r1, #2]
 801026c:	460c      	mov	r4, r1
 801026e:	4413      	add	r3, r2
 8010270:	804b      	strh	r3, [r1, #2]
 8010272:	4605      	mov	r5, r0
 8010274:	1d01      	adds	r1, r0, #4
 8010276:	4620      	mov	r0, r4
 8010278:	f7fb fd42 	bl	800bd00 <_ZN8touchgfx4RectaNERKS0_>
 801027c:	f9b4 3004 	ldrsh.w	r3, [r4, #4]
 8010280:	2b00      	cmp	r3, #0
 8010282:	dd0b      	ble.n	801029c <_ZNK8touchgfx8Drawable14getVisibleRectERNS_4RectE+0x3e>
 8010284:	f9b4 3006 	ldrsh.w	r3, [r4, #6]
 8010288:	2b00      	cmp	r3, #0
 801028a:	dd07      	ble.n	801029c <_ZNK8touchgfx8Drawable14getVisibleRectERNS_4RectE+0x3e>
 801028c:	6968      	ldr	r0, [r5, #20]
 801028e:	b128      	cbz	r0, 801029c <_ZNK8touchgfx8Drawable14getVisibleRectERNS_4RectE+0x3e>
 8010290:	6803      	ldr	r3, [r0, #0]
 8010292:	4621      	mov	r1, r4
 8010294:	6a9b      	ldr	r3, [r3, #40]	@ 0x28
 8010296:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
 801029a:	4718      	bx	r3
 801029c:	bd70      	pop	{r4, r5, r6, pc}
	...

080102a0 <_ZNK8touchgfx8Drawable14invalidateRectERNS_4RectE>:
 80102a0:	b570      	push	{r4, r5, r6, lr}
 80102a2:	8882      	ldrh	r2, [r0, #4]
 80102a4:	880b      	ldrh	r3, [r1, #0]
 80102a6:	4413      	add	r3, r2
 80102a8:	800b      	strh	r3, [r1, #0]
 80102aa:	88c2      	ldrh	r2, [r0, #6]
 80102ac:	884b      	ldrh	r3, [r1, #2]
 80102ae:	460c      	mov	r4, r1
 80102b0:	4413      	add	r3, r2
 80102b2:	804b      	strh	r3, [r1, #2]
 80102b4:	4605      	mov	r5, r0
 80102b6:	1d01      	adds	r1, r0, #4
 80102b8:	4620      	mov	r0, r4
 80102ba:	f7fb fd21 	bl	800bd00 <_ZN8touchgfx4RectaNERKS0_>
 80102be:	f9b4 3004 	ldrsh.w	r3, [r4, #4]
 80102c2:	2b00      	cmp	r3, #0
 80102c4:	dd19      	ble.n	80102fa <_ZNK8touchgfx8Drawable14invalidateRectERNS_4RectE+0x5a>
 80102c6:	f9b4 3006 	ldrsh.w	r3, [r4, #6]
 80102ca:	2b00      	cmp	r3, #0
 80102cc:	dd15      	ble.n	80102fa <_ZNK8touchgfx8Drawable14invalidateRectERNS_4RectE+0x5a>
 80102ce:	6968      	ldr	r0, [r5, #20]
 80102d0:	b128      	cbz	r0, 80102de <_ZNK8touchgfx8Drawable14invalidateRectERNS_4RectE+0x3e>
 80102d2:	6803      	ldr	r3, [r0, #0]
 80102d4:	4621      	mov	r1, r4
 80102d6:	691b      	ldr	r3, [r3, #16]
 80102d8:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
 80102dc:	4718      	bx	r3
 80102de:	4b07      	ldr	r3, [pc, #28]	@ (80102fc <_ZNK8touchgfx8Drawable14invalidateRectERNS_4RectE+0x5c>)
 80102e0:	681b      	ldr	r3, [r3, #0]
 80102e2:	3304      	adds	r3, #4
 80102e4:	429d      	cmp	r5, r3
 80102e6:	d108      	bne.n	80102fa <_ZNK8touchgfx8Drawable14invalidateRectERNS_4RectE+0x5a>
 80102e8:	f7fe ff12 	bl	800f110 <_ZN8touchgfx11Application11getInstanceEv>
 80102ec:	6803      	ldr	r3, [r0, #0]
 80102ee:	6821      	ldr	r1, [r4, #0]
 80102f0:	6862      	ldr	r2, [r4, #4]
 80102f2:	6c1b      	ldr	r3, [r3, #64]	@ 0x40
 80102f4:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
 80102f8:	4718      	bx	r3
 80102fa:	bd70      	pop	{r4, r5, r6, pc}
 80102fc:	20002c98 	.word	0x20002c98

08010300 <_ZN8touchgfx8Drawable12moveRelativeEss>:
 8010300:	b570      	push	{r4, r5, r6, lr}
 8010302:	4604      	mov	r4, r0
 8010304:	4616      	mov	r6, r2
 8010306:	460d      	mov	r5, r1
 8010308:	b901      	cbnz	r1, 801030c <_ZN8touchgfx8Drawable12moveRelativeEss+0xc>
 801030a:	b192      	cbz	r2, 8010332 <_ZN8touchgfx8Drawable12moveRelativeEss+0x32>
 801030c:	6823      	ldr	r3, [r4, #0]
 801030e:	4620      	mov	r0, r4
 8010310:	699b      	ldr	r3, [r3, #24]
 8010312:	4798      	blx	r3
 8010314:	88e2      	ldrh	r2, [r4, #6]
 8010316:	88a1      	ldrh	r1, [r4, #4]
 8010318:	4432      	add	r2, r6
 801031a:	4429      	add	r1, r5
 801031c:	4620      	mov	r0, r4
 801031e:	b212      	sxth	r2, r2
 8010320:	b209      	sxth	r1, r1
 8010322:	f7f7 ff72 	bl	800820a <_ZN8touchgfx8Drawable5setXYEss>
 8010326:	6823      	ldr	r3, [r4, #0]
 8010328:	4620      	mov	r0, r4
 801032a:	699b      	ldr	r3, [r3, #24]
 801032c:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
 8010330:	4718      	bx	r3
 8010332:	bd70      	pop	{r4, r5, r6, pc}

08010334 <_ZNK8touchgfx8Drawable15getAbsoluteRectEv>:
 8010334:	b510      	push	{r4, lr}
 8010336:	4604      	mov	r4, r0
 8010338:	4608      	mov	r0, r1
 801033a:	2300      	movs	r3, #0
 801033c:	8023      	strh	r3, [r4, #0]
 801033e:	8063      	strh	r3, [r4, #2]
 8010340:	6803      	ldr	r3, [r0, #0]
 8010342:	f9b0 200a 	ldrsh.w	r2, [r0, #10]
 8010346:	f9b1 1008 	ldrsh.w	r1, [r1, #8]
 801034a:	80a1      	strh	r1, [r4, #4]
 801034c:	80e2      	strh	r2, [r4, #6]
 801034e:	6adb      	ldr	r3, [r3, #44]	@ 0x2c
 8010350:	4621      	mov	r1, r4
 8010352:	4798      	blx	r3
 8010354:	4620      	mov	r0, r4
 8010356:	bd10      	pop	{r4, pc}

08010358 <_ZN8touchgfx9ConstFontC1EPKNS_9GlyphNodeEttthhhhhhtt>:
 8010358:	b530      	push	{r4, r5, lr}
 801035a:	8083      	strh	r3, [r0, #4]
 801035c:	f8bd 300c 	ldrh.w	r3, [sp, #12]
 8010360:	80c3      	strh	r3, [r0, #6]
 8010362:	f89d 3010 	ldrb.w	r3, [sp, #16]
 8010366:	7203      	strb	r3, [r0, #8]
 8010368:	f89d 3014 	ldrb.w	r3, [sp, #20]
 801036c:	f89d 5018 	ldrb.w	r5, [sp, #24]
 8010370:	7243      	strb	r3, [r0, #9]
 8010372:	7a83      	ldrb	r3, [r0, #10]
 8010374:	6141      	str	r1, [r0, #20]
 8010376:	f365 0306 	bfi	r3, r5, #0, #7
 801037a:	f89d 501c 	ldrb.w	r5, [sp, #28]
 801037e:	8302      	strh	r2, [r0, #24]
 8010380:	f365 13c7 	bfi	r3, r5, #7, #1
 8010384:	7283      	strb	r3, [r0, #10]
 8010386:	f89d 3020 	ldrb.w	r3, [sp, #32]
 801038a:	72c3      	strb	r3, [r0, #11]
 801038c:	f89d 3024 	ldrb.w	r3, [sp, #36]	@ 0x24
 8010390:	7303      	strb	r3, [r0, #12]
 8010392:	f8bd 3028 	ldrh.w	r3, [sp, #40]	@ 0x28
 8010396:	81c3      	strh	r3, [r0, #14]
 8010398:	f8bd 302c 	ldrh.w	r3, [sp, #44]	@ 0x2c
 801039c:	8203      	strh	r3, [r0, #16]
 801039e:	4b01      	ldr	r3, [pc, #4]	@ (80103a4 <_ZN8touchgfx9ConstFontC1EPKNS_9GlyphNodeEttthhhhhhtt+0x4c>)
 80103a0:	6003      	str	r3, [r0, #0]
 80103a2:	bd30      	pop	{r4, r5, pc}
 80103a4:	080237dc 	.word	0x080237dc

080103a8 <_ZNK8touchgfx9ConstFont4findEt>:
 80103a8:	b5f0      	push	{r4, r5, r6, r7, lr}
 80103aa:	6944      	ldr	r4, [r0, #20]
 80103ac:	b3bc      	cbz	r4, 801041e <_ZNK8touchgfx9ConstFont4findEt+0x76>
 80103ae:	88a3      	ldrh	r3, [r4, #4]
 80103b0:	8b02      	ldrh	r2, [r0, #24]
 80103b2:	1acb      	subs	r3, r1, r3
 80103b4:	f102 32ff 	add.w	r2, r2, #4294967295
 80103b8:	d431      	bmi.n	801041e <_ZNK8touchgfx9ConstFont4findEt+0x76>
 80103ba:	4293      	cmp	r3, r2
 80103bc:	dd0c      	ble.n	80103d8 <_ZNK8touchgfx9ConstFont4findEt+0x30>
 80103be:	230e      	movs	r3, #14
 80103c0:	fb03 4302 	mla	r3, r3, r2, r4
 80103c4:	889b      	ldrh	r3, [r3, #4]
 80103c6:	1a5b      	subs	r3, r3, r1
 80103c8:	1ad3      	subs	r3, r2, r3
 80103ca:	429a      	cmp	r2, r3
 80103cc:	db27      	blt.n	801041e <_ZNK8touchgfx9ConstFont4findEt+0x76>
 80103ce:	2b00      	cmp	r3, #0
 80103d0:	bfbc      	itt	lt
 80103d2:	2302      	movlt	r3, #2
 80103d4:	fb92 f3f3 	sdivlt	r3, r2, r3
 80103d8:	2500      	movs	r5, #0
 80103da:	260e      	movs	r6, #14
 80103dc:	4295      	cmp	r5, r2
 80103de:	dc1e      	bgt.n	801041e <_ZNK8touchgfx9ConstFont4findEt+0x76>
 80103e0:	fb06 4003 	mla	r0, r6, r3, r4
 80103e4:	8887      	ldrh	r7, [r0, #4]
 80103e6:	42b9      	cmp	r1, r7
 80103e8:	d01a      	beq.n	8010420 <_ZNK8touchgfx9ConstFont4findEt+0x78>
 80103ea:	d20d      	bcs.n	8010408 <_ZNK8touchgfx9ConstFont4findEt+0x60>
 80103ec:	1e5a      	subs	r2, r3, #1
 80103ee:	4295      	cmp	r5, r2
 80103f0:	dc15      	bgt.n	801041e <_ZNK8touchgfx9ConstFont4findEt+0x76>
 80103f2:	f830 3c0a 	ldrh.w	r3, [r0, #-10]
 80103f6:	1a5b      	subs	r3, r3, r1
 80103f8:	1ad3      	subs	r3, r2, r3
 80103fa:	429a      	cmp	r2, r3
 80103fc:	db0f      	blt.n	801041e <_ZNK8touchgfx9ConstFont4findEt+0x76>
 80103fe:	429d      	cmp	r5, r3
 8010400:	ddec      	ble.n	80103dc <_ZNK8touchgfx9ConstFont4findEt+0x34>
 8010402:	1953      	adds	r3, r2, r5
 8010404:	105b      	asrs	r3, r3, #1
 8010406:	e7e9      	b.n	80103dc <_ZNK8touchgfx9ConstFont4findEt+0x34>
 8010408:	1c5d      	adds	r5, r3, #1
 801040a:	42aa      	cmp	r2, r5
 801040c:	db07      	blt.n	801041e <_ZNK8touchgfx9ConstFont4findEt+0x76>
 801040e:	8a43      	ldrh	r3, [r0, #18]
 8010410:	1acb      	subs	r3, r1, r3
 8010412:	442b      	add	r3, r5
 8010414:	429d      	cmp	r5, r3
 8010416:	dc02      	bgt.n	801041e <_ZNK8touchgfx9ConstFont4findEt+0x76>
 8010418:	429a      	cmp	r2, r3
 801041a:	dadf      	bge.n	80103dc <_ZNK8touchgfx9ConstFont4findEt+0x34>
 801041c:	e7f1      	b.n	8010402 <_ZNK8touchgfx9ConstFont4findEt+0x5a>
 801041e:	2000      	movs	r0, #0
 8010420:	bdf0      	pop	{r4, r5, r6, r7, pc}

08010422 <_ZNK8touchgfx9ConstFont8getGlyphEtRPKhRh>:
 8010422:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 8010424:	4604      	mov	r4, r0
 8010426:	4617      	mov	r7, r2
 8010428:	461e      	mov	r6, r3
 801042a:	b911      	cbnz	r1, 8010432 <_ZNK8touchgfx9ConstFont8getGlyphEtRPKhRh+0x10>
 801042c:	2500      	movs	r5, #0
 801042e:	4628      	mov	r0, r5
 8010430:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
 8010432:	290a      	cmp	r1, #10
 8010434:	d0fa      	beq.n	801042c <_ZNK8touchgfx9ConstFont8getGlyphEtRPKhRh+0xa>
 8010436:	f64f 62ff 	movw	r2, #65279	@ 0xfeff
 801043a:	4291      	cmp	r1, r2
 801043c:	d0f6      	beq.n	801042c <_ZNK8touchgfx9ConstFont8getGlyphEtRPKhRh+0xa>
 801043e:	f242 020b 	movw	r2, #8203	@ 0x200b
 8010442:	4291      	cmp	r1, r2
 8010444:	d0f2      	beq.n	801042c <_ZNK8touchgfx9ConstFont8getGlyphEtRPKhRh+0xa>
 8010446:	f7ff ffaf 	bl	80103a8 <_ZNK8touchgfx9ConstFont4findEt>
 801044a:	4605      	mov	r5, r0
 801044c:	b950      	cbnz	r0, 8010464 <_ZNK8touchgfx9ConstFont8getGlyphEtRPKhRh+0x42>
 801044e:	6823      	ldr	r3, [r4, #0]
 8010450:	4620      	mov	r0, r4
 8010452:	691b      	ldr	r3, [r3, #16]
 8010454:	4798      	blx	r3
 8010456:	4601      	mov	r1, r0
 8010458:	4620      	mov	r0, r4
 801045a:	f7ff ffa5 	bl	80103a8 <_ZNK8touchgfx9ConstFont4findEt>
 801045e:	4605      	mov	r5, r0
 8010460:	2800      	cmp	r0, #0
 8010462:	d0e3      	beq.n	801042c <_ZNK8touchgfx9ConstFont8getGlyphEtRPKhRh+0xa>
 8010464:	6823      	ldr	r3, [r4, #0]
 8010466:	4629      	mov	r1, r5
 8010468:	6ddb      	ldr	r3, [r3, #92]	@ 0x5c
 801046a:	4620      	mov	r0, r4
 801046c:	4798      	blx	r3
 801046e:	6038      	str	r0, [r7, #0]
 8010470:	6823      	ldr	r3, [r4, #0]
 8010472:	4620      	mov	r0, r4
 8010474:	6bdb      	ldr	r3, [r3, #60]	@ 0x3c
 8010476:	4798      	blx	r3
 8010478:	7030      	strb	r0, [r6, #0]
 801047a:	e7d8      	b.n	801042e <_ZNK8touchgfx9ConstFont8getGlyphEtRPKhRh+0xc>

0801047c <_ZNK8touchgfx10ClickEvent12getEventTypeEv>:
 801047c:	2000      	movs	r0, #0
 801047e:	4770      	bx	lr

08010480 <_ZNK8touchgfx9DragEvent12getEventTypeEv>:
 8010480:	2001      	movs	r0, #1
 8010482:	4770      	bx	lr

08010484 <_ZNK8touchgfx12GestureEvent12getEventTypeEv>:
 8010484:	2002      	movs	r0, #2
 8010486:	4770      	bx	lr

08010488 <_ZN8touchgfx12GestureEventD1Ev>:
 8010488:	4770      	bx	lr

0801048a <_ZN8touchgfx9DragEventD1Ev>:
 801048a:	4770      	bx	lr

0801048c <_ZN8touchgfx10ClickEventD1Ev>:
 801048c:	4770      	bx	lr

0801048e <_ZN8touchgfx10ClickEventD0Ev>:
 801048e:	b510      	push	{r4, lr}
 8010490:	210c      	movs	r1, #12
 8010492:	4604      	mov	r4, r0
 8010494:	f010 f98d 	bl	80207b2 <_ZdlPvj>
 8010498:	4620      	mov	r0, r4
 801049a:	bd10      	pop	{r4, pc}

0801049c <_ZN8touchgfx9DragEventD0Ev>:
 801049c:	b510      	push	{r4, lr}
 801049e:	2110      	movs	r1, #16
 80104a0:	4604      	mov	r4, r0
 80104a2:	f010 f986 	bl	80207b2 <_ZdlPvj>
 80104a6:	4620      	mov	r0, r4
 80104a8:	bd10      	pop	{r4, pc}

080104aa <_ZN8touchgfx12GestureEventD0Ev>:
 80104aa:	b510      	push	{r4, lr}
 80104ac:	210c      	movs	r1, #12
 80104ae:	4604      	mov	r4, r0
 80104b0:	f010 f97f 	bl	80207b2 <_ZdlPvj>
 80104b4:	4620      	mov	r0, r4
 80104b6:	bd10      	pop	{r4, pc}

080104b8 <_ZN8touchgfx6Screen18handleGestureEventERKNS_12GestureEventE>:
 80104b8:	b530      	push	{r4, r5, lr}
 80104ba:	460d      	mov	r5, r1
 80104bc:	6b01      	ldr	r1, [r0, #48]	@ 0x30
 80104be:	b087      	sub	sp, #28
 80104c0:	4604      	mov	r4, r0
 80104c2:	b301      	cbz	r1, 8010506 <_ZN8touchgfx6Screen18handleGestureEventERKNS_12GestureEventE+0x4e>
 80104c4:	a801      	add	r0, sp, #4
 80104c6:	f7ff ff35 	bl	8010334 <_ZNK8touchgfx8Drawable15getAbsoluteRectEv>
 80104ca:	892a      	ldrh	r2, [r5, #8]
 80104cc:	f8bd 3004 	ldrh.w	r3, [sp, #4]
 80104d0:	7928      	ldrb	r0, [r5, #4]
 80104d2:	f9b5 1006 	ldrsh.w	r1, [r5, #6]
 80104d6:	f88d 0010 	strb.w	r0, [sp, #16]
 80104da:	1ad2      	subs	r2, r2, r3
 80104dc:	8ea3      	ldrh	r3, [r4, #52]	@ 0x34
 80104de:	6b20      	ldr	r0, [r4, #48]	@ 0x30
 80104e0:	f8ad 1012 	strh.w	r1, [sp, #18]
 80104e4:	441a      	add	r2, r3
 80104e6:	896b      	ldrh	r3, [r5, #10]
 80104e8:	f8bd 5006 	ldrh.w	r5, [sp, #6]
 80104ec:	f8ad 2014 	strh.w	r2, [sp, #20]
 80104f0:	1b5b      	subs	r3, r3, r5
 80104f2:	8ee5      	ldrh	r5, [r4, #54]	@ 0x36
 80104f4:	442b      	add	r3, r5
 80104f6:	4d05      	ldr	r5, [pc, #20]	@ (801050c <_ZN8touchgfx6Screen18handleGestureEventERKNS_12GestureEventE+0x54>)
 80104f8:	9503      	str	r5, [sp, #12]
 80104fa:	f8ad 3016 	strh.w	r3, [sp, #22]
 80104fe:	6803      	ldr	r3, [r0, #0]
 8010500:	a903      	add	r1, sp, #12
 8010502:	6c9b      	ldr	r3, [r3, #72]	@ 0x48
 8010504:	4798      	blx	r3
 8010506:	b007      	add	sp, #28
 8010508:	bd30      	pop	{r4, r5, pc}
 801050a:	bf00      	nop
 801050c:	0802386c 	.word	0x0802386c

08010510 <_ZN8touchgfx6Screen16handleClickEventERKNS_10ClickEventE>:
 8010510:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 8010514:	6b03      	ldr	r3, [r0, #48]	@ 0x30
 8010516:	b08a      	sub	sp, #40	@ 0x28
 8010518:	4604      	mov	r4, r0
 801051a:	460d      	mov	r5, r1
 801051c:	b113      	cbz	r3, 8010524 <_ZN8touchgfx6Screen16handleClickEventERKNS_10ClickEventE+0x14>
 801051e:	790b      	ldrb	r3, [r1, #4]
 8010520:	2b00      	cmp	r3, #0
 8010522:	d044      	beq.n	80105ae <_ZN8touchgfx6Screen16handleClickEventERKNS_10ClickEventE+0x9e>
 8010524:	f104 0804 	add.w	r8, r4, #4
 8010528:	4641      	mov	r1, r8
 801052a:	a803      	add	r0, sp, #12
 801052c:	f7ff ff02 	bl	8010334 <_ZNK8touchgfx8Drawable15getAbsoluteRectEv>
 8010530:	792b      	ldrb	r3, [r5, #4]
 8010532:	f9bd 700c 	ldrsh.w	r7, [sp, #12]
 8010536:	f9bd 600e 	ldrsh.w	r6, [sp, #14]
 801053a:	b983      	cbnz	r3, 801055e <_ZN8touchgfx6Screen16handleClickEventERKNS_10ClickEventE+0x4e>
 801053c:	892a      	ldrh	r2, [r5, #8]
 801053e:	88e9      	ldrh	r1, [r5, #6]
 8010540:	f104 0336 	add.w	r3, r4, #54	@ 0x36
 8010544:	1b92      	subs	r2, r2, r6
 8010546:	1bc9      	subs	r1, r1, r7
 8010548:	9301      	str	r3, [sp, #4]
 801054a:	f104 0334 	add.w	r3, r4, #52	@ 0x34
 801054e:	9300      	str	r3, [sp, #0]
 8010550:	b212      	sxth	r2, r2
 8010552:	f104 0330 	add.w	r3, r4, #48	@ 0x30
 8010556:	b209      	sxth	r1, r1
 8010558:	4640      	mov	r0, r8
 801055a:	f7fb faed 	bl	800bb38 <_ZN8touchgfx9Container16getLastChildNearEssPPNS_8DrawableEPsS4_>
 801055e:	6b21      	ldr	r1, [r4, #48]	@ 0x30
 8010560:	b329      	cbz	r1, 80105ae <_ZN8touchgfx6Screen16handleClickEventERKNS_10ClickEventE+0x9e>
 8010562:	a805      	add	r0, sp, #20
 8010564:	f7ff fee6 	bl	8010334 <_ZNK8touchgfx8Drawable15getAbsoluteRectEv>
 8010568:	f8bd 2014 	ldrh.w	r2, [sp, #20]
 801056c:	792b      	ldrb	r3, [r5, #4]
 801056e:	6b20      	ldr	r0, [r4, #48]	@ 0x30
 8010570:	f88d 3020 	strb.w	r3, [sp, #32]
 8010574:	1abf      	subs	r7, r7, r2
 8010576:	88ea      	ldrh	r2, [r5, #6]
 8010578:	4417      	add	r7, r2
 801057a:	8ea2      	ldrh	r2, [r4, #52]	@ 0x34
 801057c:	4417      	add	r7, r2
 801057e:	f8bd 2016 	ldrh.w	r2, [sp, #22]
 8010582:	f8ad 7022 	strh.w	r7, [sp, #34]	@ 0x22
 8010586:	1ab6      	subs	r6, r6, r2
 8010588:	892a      	ldrh	r2, [r5, #8]
 801058a:	4416      	add	r6, r2
 801058c:	8ee2      	ldrh	r2, [r4, #54]	@ 0x36
 801058e:	4416      	add	r6, r2
 8010590:	f8ad 6024 	strh.w	r6, [sp, #36]	@ 0x24
 8010594:	4a07      	ldr	r2, [pc, #28]	@ (80105b4 <_ZN8touchgfx6Screen16handleClickEventERKNS_10ClickEventE+0xa4>)
 8010596:	9207      	str	r2, [sp, #28]
 8010598:	2600      	movs	r6, #0
 801059a:	f8ad 6026 	strh.w	r6, [sp, #38]	@ 0x26
 801059e:	6803      	ldr	r3, [r0, #0]
 80105a0:	a907      	add	r1, sp, #28
 80105a2:	6c5b      	ldr	r3, [r3, #68]	@ 0x44
 80105a4:	4798      	blx	r3
 80105a6:	792b      	ldrb	r3, [r5, #4]
 80105a8:	b10b      	cbz	r3, 80105ae <_ZN8touchgfx6Screen16handleClickEventERKNS_10ClickEventE+0x9e>
 80105aa:	e9c4 660c 	strd	r6, r6, [r4, #48]	@ 0x30
 80105ae:	b00a      	add	sp, #40	@ 0x28
 80105b0:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
 80105b4:	08023844 	.word	0x08023844

080105b8 <_ZN8touchgfx6Screen15handleDragEventERKNS_9DragEventE>:
 80105b8:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 80105bc:	460c      	mov	r4, r1
 80105be:	6b01      	ldr	r1, [r0, #48]	@ 0x30
 80105c0:	b088      	sub	sp, #32
 80105c2:	4605      	mov	r5, r0
 80105c4:	2900      	cmp	r1, #0
 80105c6:	d06d      	beq.n	80106a4 <_ZN8touchgfx6Screen15handleDragEventERKNS_9DragEventE+0xec>
 80105c8:	4668      	mov	r0, sp
 80105ca:	f7ff feb3 	bl	8010334 <_ZNK8touchgfx8Drawable15getAbsoluteRectEv>
 80105ce:	8ea9      	ldrh	r1, [r5, #52]	@ 0x34
 80105d0:	88e3      	ldrh	r3, [r4, #6]
 80105d2:	f9bd 8000 	ldrsh.w	r8, [sp]
 80105d6:	f9bd 7002 	ldrsh.w	r7, [sp, #2]
 80105da:	440b      	add	r3, r1
 80105dc:	b21b      	sxth	r3, r3
 80105de:	4543      	cmp	r3, r8
 80105e0:	db31      	blt.n	8010646 <_ZN8touchgfx6Screen15handleDragEventERKNS_9DragEventE+0x8e>
 80105e2:	f8bd c004 	ldrh.w	ip, [sp, #4]
 80105e6:	44c4      	add	ip, r8
 80105e8:	fa0f fc8c 	sxth.w	ip, ip
 80105ec:	4563      	cmp	r3, ip
 80105ee:	da2a      	bge.n	8010646 <_ZN8touchgfx6Screen15handleDragEventERKNS_9DragEventE+0x8e>
 80105f0:	8eea      	ldrh	r2, [r5, #54]	@ 0x36
 80105f2:	8926      	ldrh	r6, [r4, #8]
 80105f4:	4416      	add	r6, r2
 80105f6:	b236      	sxth	r6, r6
 80105f8:	42be      	cmp	r6, r7
 80105fa:	db24      	blt.n	8010646 <_ZN8touchgfx6Screen15handleDragEventERKNS_9DragEventE+0x8e>
 80105fc:	f8bd 0006 	ldrh.w	r0, [sp, #6]
 8010600:	4438      	add	r0, r7
 8010602:	b200      	sxth	r0, r0
 8010604:	4286      	cmp	r6, r0
 8010606:	da1e      	bge.n	8010646 <_ZN8touchgfx6Screen15handleDragEventERKNS_9DragEventE+0x8e>
 8010608:	8963      	ldrh	r3, [r4, #10]
 801060a:	4419      	add	r1, r3
 801060c:	b209      	sxth	r1, r1
 801060e:	4541      	cmp	r1, r8
 8010610:	db08      	blt.n	8010624 <_ZN8touchgfx6Screen15handleDragEventERKNS_9DragEventE+0x6c>
 8010612:	4561      	cmp	r1, ip
 8010614:	da06      	bge.n	8010624 <_ZN8touchgfx6Screen15handleDragEventERKNS_9DragEventE+0x6c>
 8010616:	89a3      	ldrh	r3, [r4, #12]
 8010618:	441a      	add	r2, r3
 801061a:	b212      	sxth	r2, r2
 801061c:	42ba      	cmp	r2, r7
 801061e:	db01      	blt.n	8010624 <_ZN8touchgfx6Screen15handleDragEventERKNS_9DragEventE+0x6c>
 8010620:	4282      	cmp	r2, r0
 8010622:	db10      	blt.n	8010646 <_ZN8touchgfx6Screen15handleDragEventERKNS_9DragEventE+0x8e>
 8010624:	4b21      	ldr	r3, [pc, #132]	@ (80106ac <_ZN8touchgfx6Screen15handleDragEventERKNS_9DragEventE+0xf4>)
 8010626:	9304      	str	r3, [sp, #16]
 8010628:	2302      	movs	r3, #2
 801062a:	f88d 3014 	strb.w	r3, [sp, #20]
 801062e:	6b28      	ldr	r0, [r5, #48]	@ 0x30
 8010630:	2300      	movs	r3, #0
 8010632:	f8ad 3016 	strh.w	r3, [sp, #22]
 8010636:	f8ad 3018 	strh.w	r3, [sp, #24]
 801063a:	f8ad 301a 	strh.w	r3, [sp, #26]
 801063e:	6803      	ldr	r3, [r0, #0]
 8010640:	a904      	add	r1, sp, #16
 8010642:	6c5b      	ldr	r3, [r3, #68]	@ 0x44
 8010644:	4798      	blx	r3
 8010646:	1d29      	adds	r1, r5, #4
 8010648:	a802      	add	r0, sp, #8
 801064a:	f7ff fe73 	bl	8010334 <_ZNK8touchgfx8Drawable15getAbsoluteRectEv>
 801064e:	f8bd 3008 	ldrh.w	r3, [sp, #8]
 8010652:	88e0      	ldrh	r0, [r4, #6]
 8010654:	7921      	ldrb	r1, [r4, #4]
 8010656:	f8b5 c034 	ldrh.w	ip, [r5, #52]	@ 0x34
 801065a:	8922      	ldrh	r2, [r4, #8]
 801065c:	8eee      	ldrh	r6, [r5, #54]	@ 0x36
 801065e:	f88d 1014 	strb.w	r1, [sp, #20]
 8010662:	eba3 0808 	sub.w	r8, r3, r8
 8010666:	f8bd 300a 	ldrh.w	r3, [sp, #10]
 801066a:	1bdf      	subs	r7, r3, r7
 801066c:	b2bb      	uxth	r3, r7
 801066e:	fa1f f888 	uxth.w	r8, r8
 8010672:	8967      	ldrh	r7, [r4, #10]
 8010674:	89a4      	ldrh	r4, [r4, #12]
 8010676:	4440      	add	r0, r8
 8010678:	4460      	add	r0, ip
 801067a:	441a      	add	r2, r3
 801067c:	44b8      	add	r8, r7
 801067e:	4423      	add	r3, r4
 8010680:	f8ad 0016 	strh.w	r0, [sp, #22]
 8010684:	4433      	add	r3, r6
 8010686:	4432      	add	r2, r6
 8010688:	44e0      	add	r8, ip
 801068a:	4c09      	ldr	r4, [pc, #36]	@ (80106b0 <_ZN8touchgfx6Screen15handleDragEventERKNS_9DragEventE+0xf8>)
 801068c:	6b28      	ldr	r0, [r5, #48]	@ 0x30
 801068e:	9404      	str	r4, [sp, #16]
 8010690:	f8ad 2018 	strh.w	r2, [sp, #24]
 8010694:	f8ad 801a 	strh.w	r8, [sp, #26]
 8010698:	f8ad 301c 	strh.w	r3, [sp, #28]
 801069c:	6803      	ldr	r3, [r0, #0]
 801069e:	a904      	add	r1, sp, #16
 80106a0:	6cdb      	ldr	r3, [r3, #76]	@ 0x4c
 80106a2:	4798      	blx	r3
 80106a4:	b008      	add	sp, #32
 80106a6:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
 80106aa:	bf00      	nop
 80106ac:	08023844 	.word	0x08023844
 80106b0:	08023858 	.word	0x08023858

080106b4 <_ZN8touchgfx8Drawable20getCachedVisibleRectEv>:
 80106b4:	b537      	push	{r0, r1, r2, r4, r5, lr}
 80106b6:	4604      	mov	r4, r0
 80106b8:	f934 2f0c 	ldrsh.w	r2, [r4, #12]!
 80106bc:	3201      	adds	r2, #1
 80106be:	d112      	bne.n	80106e6 <_ZN8touchgfx8Drawable20getCachedVisibleRectEv+0x32>
 80106c0:	6803      	ldr	r3, [r0, #0]
 80106c2:	f9b0 1008 	ldrsh.w	r1, [r0, #8]
 80106c6:	f9b0 200a 	ldrsh.w	r2, [r0, #10]
 80106ca:	f8ad 1004 	strh.w	r1, [sp, #4]
 80106ce:	2500      	movs	r5, #0
 80106d0:	9500      	str	r5, [sp, #0]
 80106d2:	466d      	mov	r5, sp
 80106d4:	4629      	mov	r1, r5
 80106d6:	f8ad 2006 	strh.w	r2, [sp, #6]
 80106da:	6a9b      	ldr	r3, [r3, #40]	@ 0x28
 80106dc:	4798      	blx	r3
 80106de:	e895 0003 	ldmia.w	r5, {r0, r1}
 80106e2:	e884 0003 	stmia.w	r4, {r0, r1}
 80106e6:	4620      	mov	r0, r4
 80106e8:	b003      	add	sp, #12
 80106ea:	bd30      	pop	{r4, r5, pc}

080106ec <_ZN8touchgfx8Drawable13getCachedAbsXEv>:
 80106ec:	b513      	push	{r0, r1, r4, lr}
 80106ee:	f9b0 3020 	ldrsh.w	r3, [r0, #32]
 80106f2:	3301      	adds	r3, #1
 80106f4:	4604      	mov	r4, r0
 80106f6:	d109      	bne.n	801070c <_ZN8touchgfx8Drawable13getCachedAbsXEv+0x20>
 80106f8:	4601      	mov	r1, r0
 80106fa:	4668      	mov	r0, sp
 80106fc:	f7ff fe1a 	bl	8010334 <_ZNK8touchgfx8Drawable15getAbsoluteRectEv>
 8010700:	f8bd 3000 	ldrh.w	r3, [sp]
 8010704:	8423      	strh	r3, [r4, #32]
 8010706:	f8bd 3002 	ldrh.w	r3, [sp, #2]
 801070a:	8463      	strh	r3, [r4, #34]	@ 0x22
 801070c:	f9b4 0020 	ldrsh.w	r0, [r4, #32]
 8010710:	b002      	add	sp, #8
 8010712:	bd10      	pop	{r4, pc}

08010714 <_ZN8touchgfx8Drawable13getCachedAbsYEv>:
 8010714:	b513      	push	{r0, r1, r4, lr}
 8010716:	f9b0 3022 	ldrsh.w	r3, [r0, #34]	@ 0x22
 801071a:	3301      	adds	r3, #1
 801071c:	4604      	mov	r4, r0
 801071e:	d109      	bne.n	8010734 <_ZN8touchgfx8Drawable13getCachedAbsYEv+0x20>
 8010720:	4601      	mov	r1, r0
 8010722:	4668      	mov	r0, sp
 8010724:	f7ff fe06 	bl	8010334 <_ZNK8touchgfx8Drawable15getAbsoluteRectEv>
 8010728:	f8bd 3000 	ldrh.w	r3, [sp]
 801072c:	8423      	strh	r3, [r4, #32]
 801072e:	f8bd 3002 	ldrh.w	r3, [sp, #2]
 8010732:	8463      	strh	r3, [r4, #34]	@ 0x22
 8010734:	f9b4 0022 	ldrsh.w	r0, [r4, #34]	@ 0x22
 8010738:	b002      	add	sp, #8
 801073a:	bd10      	pop	{r4, pc}

0801073c <_ZN8touchgfx6ScreenC1Ev>:
 801073c:	b570      	push	{r4, r5, r6, lr}
 801073e:	4605      	mov	r5, r0
 8010740:	4b16      	ldr	r3, [pc, #88]	@ (801079c <_ZN8touchgfx6ScreenC1Ev+0x60>)
 8010742:	f845 3b04 	str.w	r3, [r5], #4
 8010746:	2300      	movs	r3, #0
 8010748:	8103      	strh	r3, [r0, #8]
 801074a:	8143      	strh	r3, [r0, #10]
 801074c:	8183      	strh	r3, [r0, #12]
 801074e:	81c3      	strh	r3, [r0, #14]
 8010750:	8203      	strh	r3, [r0, #16]
 8010752:	8243      	strh	r3, [r0, #18]
 8010754:	8283      	strh	r3, [r0, #20]
 8010756:	82c3      	strh	r3, [r0, #22]
 8010758:	e9c0 3306 	strd	r3, r3, [r0, #24]
 801075c:	6203      	str	r3, [r0, #32]
 801075e:	8483      	strh	r3, [r0, #36]	@ 0x24
 8010760:	84c3      	strh	r3, [r0, #38]	@ 0x26
 8010762:	f880 3028 	strb.w	r3, [r0, #40]	@ 0x28
 8010766:	4a0e      	ldr	r2, [pc, #56]	@ (80107a0 <_ZN8touchgfx6ScreenC1Ev+0x64>)
 8010768:	6343      	str	r3, [r0, #52]	@ 0x34
 801076a:	e9c0 330b 	strd	r3, r3, [r0, #44]	@ 0x2c
 801076e:	4b0d      	ldr	r3, [pc, #52]	@ (80107a4 <_ZN8touchgfx6ScreenC1Ev+0x68>)
 8010770:	6042      	str	r2, [r0, #4]
 8010772:	f9b3 6000 	ldrsh.w	r6, [r3]
 8010776:	6b93      	ldr	r3, [r2, #56]	@ 0x38
 8010778:	4a0b      	ldr	r2, [pc, #44]	@ (80107a8 <_ZN8touchgfx6ScreenC1Ev+0x6c>)
 801077a:	4604      	mov	r4, r0
 801077c:	2101      	movs	r1, #1
 801077e:	f880 1029 	strb.w	r1, [r0, #41]	@ 0x29
 8010782:	f880 1038 	strb.w	r1, [r0, #56]	@ 0x38
 8010786:	f9b2 1000 	ldrsh.w	r1, [r2]
 801078a:	4628      	mov	r0, r5
 801078c:	4798      	blx	r3
 801078e:	6863      	ldr	r3, [r4, #4]
 8010790:	4628      	mov	r0, r5
 8010792:	6bdb      	ldr	r3, [r3, #60]	@ 0x3c
 8010794:	4631      	mov	r1, r6
 8010796:	4798      	blx	r3
 8010798:	4620      	mov	r0, r4
 801079a:	bd70      	pop	{r4, r5, r6, pc}
 801079c:	08023880 	.word	0x08023880
 80107a0:	08023200 	.word	0x08023200
 80107a4:	20002c52 	.word	0x20002c52
 80107a8:	20002c50 	.word	0x20002c50

080107ac <_ZN8touchgfx6Screen4drawEv>:
 80107ac:	b507      	push	{r0, r1, r2, lr}
 80107ae:	4b09      	ldr	r3, [pc, #36]	@ (80107d4 <_ZN8touchgfx6Screen4drawEv+0x28>)
 80107b0:	f9b3 2000 	ldrsh.w	r2, [r3]
 80107b4:	4b08      	ldr	r3, [pc, #32]	@ (80107d8 <_ZN8touchgfx6Screen4drawEv+0x2c>)
 80107b6:	f8ad 2004 	strh.w	r2, [sp, #4]
 80107ba:	f9b3 3000 	ldrsh.w	r3, [r3]
 80107be:	f8ad 3006 	strh.w	r3, [sp, #6]
 80107c2:	6803      	ldr	r3, [r0, #0]
 80107c4:	2100      	movs	r1, #0
 80107c6:	9100      	str	r1, [sp, #0]
 80107c8:	689b      	ldr	r3, [r3, #8]
 80107ca:	4669      	mov	r1, sp
 80107cc:	4798      	blx	r3
 80107ce:	b003      	add	sp, #12
 80107d0:	f85d fb04 	ldr.w	pc, [sp], #4
 80107d4:	20002c50 	.word	0x20002c50
 80107d8:	20002c52 	.word	0x20002c52

080107dc <_ZN8touchgfx6Screen5JSMOCERKNS_4RectEPNS_8DrawableE>:
 80107dc:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 80107e0:	f9b1 3004 	ldrsh.w	r3, [r1, #4]
 80107e4:	2b00      	cmp	r3, #0
 80107e6:	b089      	sub	sp, #36	@ 0x24
 80107e8:	4680      	mov	r8, r0
 80107ea:	460c      	mov	r4, r1
 80107ec:	4615      	mov	r5, r2
 80107ee:	dd0e      	ble.n	801080e <_ZN8touchgfx6Screen5JSMOCERKNS_4RectEPNS_8DrawableE+0x32>
 80107f0:	f9b1 3006 	ldrsh.w	r3, [r1, #6]
 80107f4:	2b00      	cmp	r3, #0
 80107f6:	dd0a      	ble.n	801080e <_ZN8touchgfx6Screen5JSMOCERKNS_4RectEPNS_8DrawableE+0x32>
 80107f8:	4628      	mov	r0, r5
 80107fa:	f7ff ff5b 	bl	80106b4 <_ZN8touchgfx8Drawable20getCachedVisibleRectEv>
 80107fe:	4621      	mov	r1, r4
 8010800:	f7fe fba8 	bl	800ef54 <_ZNK8touchgfx4Rect9intersectERKS0_>
 8010804:	69eb      	ldr	r3, [r5, #28]
 8010806:	b928      	cbnz	r0, 8010814 <_ZN8touchgfx6Screen5JSMOCERKNS_4RectEPNS_8DrawableE+0x38>
 8010808:	461d      	mov	r5, r3
 801080a:	2b00      	cmp	r3, #0
 801080c:	d1f4      	bne.n	80107f8 <_ZN8touchgfx6Screen5JSMOCERKNS_4RectEPNS_8DrawableE+0x1c>
 801080e:	b009      	add	sp, #36	@ 0x24
 8010810:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 8010814:	ae04      	add	r6, sp, #16
 8010816:	2b00      	cmp	r3, #0
 8010818:	f000 80b5 	beq.w	8010986 <_ZN8touchgfx6Screen5JSMOCERKNS_4RectEPNS_8DrawableE+0x1aa>
 801081c:	682b      	ldr	r3, [r5, #0]
 801081e:	4629      	mov	r1, r5
 8010820:	68db      	ldr	r3, [r3, #12]
 8010822:	a802      	add	r0, sp, #8
 8010824:	4798      	blx	r3
 8010826:	4628      	mov	r0, r5
 8010828:	f7ff ff60 	bl	80106ec <_ZN8touchgfx8Drawable13getCachedAbsXEv>
 801082c:	f8bd 7008 	ldrh.w	r7, [sp, #8]
 8010830:	4407      	add	r7, r0
 8010832:	4628      	mov	r0, r5
 8010834:	f7ff ff6e 	bl	8010714 <_ZN8touchgfx8Drawable13getCachedAbsYEv>
 8010838:	f8bd 300a 	ldrh.w	r3, [sp, #10]
 801083c:	f9bd 200c 	ldrsh.w	r2, [sp, #12]
 8010840:	f8ad 2014 	strh.w	r2, [sp, #20]
 8010844:	4418      	add	r0, r3
 8010846:	4621      	mov	r1, r4
 8010848:	f9bd 300e 	ldrsh.w	r3, [sp, #14]
 801084c:	f8ad 0012 	strh.w	r0, [sp, #18]
 8010850:	b23f      	sxth	r7, r7
 8010852:	4630      	mov	r0, r6
 8010854:	f8ad 3016 	strh.w	r3, [sp, #22]
 8010858:	f8ad 7010 	strh.w	r7, [sp, #16]
 801085c:	f7fb fa50 	bl	800bd00 <_ZN8touchgfx4RectaNERKS0_>
 8010860:	4628      	mov	r0, r5
 8010862:	f7ff ff27 	bl	80106b4 <_ZN8touchgfx8Drawable20getCachedVisibleRectEv>
 8010866:	4602      	mov	r2, r0
 8010868:	e896 0003 	ldmia.w	r6, {r0, r1}
 801086c:	ab06      	add	r3, sp, #24
 801086e:	e883 0003 	stmia.w	r3, {r0, r1}
 8010872:	4611      	mov	r1, r2
 8010874:	4618      	mov	r0, r3
 8010876:	f7fb fa43 	bl	800bd00 <_ZN8touchgfx4RectaNERKS0_>
 801087a:	f9bd 3018 	ldrsh.w	r3, [sp, #24]
 801087e:	f9b4 1000 	ldrsh.w	r1, [r4]
 8010882:	f9bd a01a 	ldrsh.w	sl, [sp, #26]
 8010886:	f9bd b01c 	ldrsh.w	fp, [sp, #28]
 801088a:	f9bd 901e 	ldrsh.w	r9, [sp, #30]
 801088e:	4299      	cmp	r1, r3
 8010890:	d10b      	bne.n	80108aa <_ZN8touchgfx6Screen5JSMOCERKNS_4RectEPNS_8DrawableE+0xce>
 8010892:	f9b4 2002 	ldrsh.w	r2, [r4, #2]
 8010896:	4552      	cmp	r2, sl
 8010898:	d107      	bne.n	80108aa <_ZN8touchgfx6Screen5JSMOCERKNS_4RectEPNS_8DrawableE+0xce>
 801089a:	f9b4 2004 	ldrsh.w	r2, [r4, #4]
 801089e:	455a      	cmp	r2, fp
 80108a0:	d103      	bne.n	80108aa <_ZN8touchgfx6Screen5JSMOCERKNS_4RectEPNS_8DrawableE+0xce>
 80108a2:	f9b4 2006 	ldrsh.w	r2, [r4, #6]
 80108a6:	454a      	cmp	r2, r9
 80108a8:	d06d      	beq.n	8010986 <_ZN8touchgfx6Screen5JSMOCERKNS_4RectEPNS_8DrawableE+0x1aa>
 80108aa:	f1bb 0f00 	cmp.w	fp, #0
 80108ae:	dd65      	ble.n	801097c <_ZN8touchgfx6Screen5JSMOCERKNS_4RectEPNS_8DrawableE+0x1a0>
 80108b0:	f1b9 0f00 	cmp.w	r9, #0
 80108b4:	dd62      	ble.n	801097c <_ZN8touchgfx6Screen5JSMOCERKNS_4RectEPNS_8DrawableE+0x1a0>
 80108b6:	f9b4 2002 	ldrsh.w	r2, [r4, #2]
 80108ba:	fa1f f08a 	uxth.w	r0, sl
 80108be:	4552      	cmp	r2, sl
 80108c0:	9000      	str	r0, [sp, #0]
 80108c2:	da12      	bge.n	80108ea <_ZN8touchgfx6Screen5JSMOCERKNS_4RectEPNS_8DrawableE+0x10e>
 80108c4:	9301      	str	r3, [sp, #4]
 80108c6:	9b00      	ldr	r3, [sp, #0]
 80108c8:	f9b4 0004 	ldrsh.w	r0, [r4, #4]
 80108cc:	f8ad 2012 	strh.w	r2, [sp, #18]
 80108d0:	1a9a      	subs	r2, r3, r2
 80108d2:	f8ad 1010 	strh.w	r1, [sp, #16]
 80108d6:	f8ad 0014 	strh.w	r0, [sp, #20]
 80108da:	f8ad 2016 	strh.w	r2, [sp, #22]
 80108de:	69ea      	ldr	r2, [r5, #28]
 80108e0:	4631      	mov	r1, r6
 80108e2:	4640      	mov	r0, r8
 80108e4:	f7ff ff7a 	bl	80107dc <_ZN8touchgfx6Screen5JSMOCERKNS_4RectEPNS_8DrawableE>
 80108e8:	9b01      	ldr	r3, [sp, #4]
 80108ea:	f9b4 2000 	ldrsh.w	r2, [r4]
 80108ee:	429a      	cmp	r2, r3
 80108f0:	b29f      	uxth	r7, r3
 80108f2:	da0d      	bge.n	8010910 <_ZN8touchgfx6Screen5JSMOCERKNS_4RectEPNS_8DrawableE+0x134>
 80108f4:	f8ad 2010 	strh.w	r2, [sp, #16]
 80108f8:	1aba      	subs	r2, r7, r2
 80108fa:	f8ad a012 	strh.w	sl, [sp, #18]
 80108fe:	f8ad 2014 	strh.w	r2, [sp, #20]
 8010902:	f8ad 9016 	strh.w	r9, [sp, #22]
 8010906:	69ea      	ldr	r2, [r5, #28]
 8010908:	4631      	mov	r1, r6
 801090a:	4640      	mov	r0, r8
 801090c:	f7ff ff66 	bl	80107dc <_ZN8touchgfx6Screen5JSMOCERKNS_4RectEPNS_8DrawableE>
 8010910:	8822      	ldrh	r2, [r4, #0]
 8010912:	88a3      	ldrh	r3, [r4, #4]
 8010914:	445f      	add	r7, fp
 8010916:	4413      	add	r3, r2
 8010918:	b29b      	uxth	r3, r3
 801091a:	b2bf      	uxth	r7, r7
 801091c:	b23a      	sxth	r2, r7
 801091e:	b219      	sxth	r1, r3
 8010920:	4291      	cmp	r1, r2
 8010922:	dd0d      	ble.n	8010940 <_ZN8touchgfx6Screen5JSMOCERKNS_4RectEPNS_8DrawableE+0x164>
 8010924:	1bdb      	subs	r3, r3, r7
 8010926:	f8ad 2010 	strh.w	r2, [sp, #16]
 801092a:	f8ad a012 	strh.w	sl, [sp, #18]
 801092e:	f8ad 3014 	strh.w	r3, [sp, #20]
 8010932:	f8ad 9016 	strh.w	r9, [sp, #22]
 8010936:	69ea      	ldr	r2, [r5, #28]
 8010938:	4631      	mov	r1, r6
 801093a:	4640      	mov	r0, r8
 801093c:	f7ff ff4e 	bl	80107dc <_ZN8touchgfx6Screen5JSMOCERKNS_4RectEPNS_8DrawableE>
 8010940:	88e2      	ldrh	r2, [r4, #6]
 8010942:	8863      	ldrh	r3, [r4, #2]
 8010944:	4413      	add	r3, r2
 8010946:	9a00      	ldr	r2, [sp, #0]
 8010948:	444a      	add	r2, r9
 801094a:	b29b      	uxth	r3, r3
 801094c:	fa1f f982 	uxth.w	r9, r2
 8010950:	fa0f f289 	sxth.w	r2, r9
 8010954:	b219      	sxth	r1, r3
 8010956:	428a      	cmp	r2, r1
 8010958:	da15      	bge.n	8010986 <_ZN8touchgfx6Screen5JSMOCERKNS_4RectEPNS_8DrawableE+0x1aa>
 801095a:	f9b4 1004 	ldrsh.w	r1, [r4, #4]
 801095e:	f9b4 0000 	ldrsh.w	r0, [r4]
 8010962:	f8ad 1014 	strh.w	r1, [sp, #20]
 8010966:	eba3 0309 	sub.w	r3, r3, r9
 801096a:	f8ad 0010 	strh.w	r0, [sp, #16]
 801096e:	f8ad 2012 	strh.w	r2, [sp, #18]
 8010972:	f8ad 3016 	strh.w	r3, [sp, #22]
 8010976:	69ea      	ldr	r2, [r5, #28]
 8010978:	4631      	mov	r1, r6
 801097a:	e001      	b.n	8010980 <_ZN8touchgfx6Screen5JSMOCERKNS_4RectEPNS_8DrawableE+0x1a4>
 801097c:	69ea      	ldr	r2, [r5, #28]
 801097e:	4621      	mov	r1, r4
 8010980:	4640      	mov	r0, r8
 8010982:	f7ff ff2b 	bl	80107dc <_ZN8touchgfx6Screen5JSMOCERKNS_4RectEPNS_8DrawableE>
 8010986:	4628      	mov	r0, r5
 8010988:	f7ff fe94 	bl	80106b4 <_ZN8touchgfx8Drawable20getCachedVisibleRectEv>
 801098c:	6861      	ldr	r1, [r4, #4]
 801098e:	4602      	mov	r2, r0
 8010990:	6820      	ldr	r0, [r4, #0]
 8010992:	4633      	mov	r3, r6
 8010994:	c303      	stmia	r3!, {r0, r1}
 8010996:	4611      	mov	r1, r2
 8010998:	4630      	mov	r0, r6
 801099a:	f7fb f9b1 	bl	800bd00 <_ZN8touchgfx4RectaNERKS0_>
 801099e:	f9bd 3014 	ldrsh.w	r3, [sp, #20]
 80109a2:	2b00      	cmp	r3, #0
 80109a4:	f77f af33 	ble.w	801080e <_ZN8touchgfx6Screen5JSMOCERKNS_4RectEPNS_8DrawableE+0x32>
 80109a8:	f9bd 3016 	ldrsh.w	r3, [sp, #22]
 80109ac:	2b00      	cmp	r3, #0
 80109ae:	f77f af2e 	ble.w	801080e <_ZN8touchgfx6Screen5JSMOCERKNS_4RectEPNS_8DrawableE+0x32>
 80109b2:	4628      	mov	r0, r5
 80109b4:	f7ff fe9a 	bl	80106ec <_ZN8touchgfx8Drawable13getCachedAbsXEv>
 80109b8:	f8bd 3010 	ldrh.w	r3, [sp, #16]
 80109bc:	1a18      	subs	r0, r3, r0
 80109be:	f8ad 0010 	strh.w	r0, [sp, #16]
 80109c2:	4628      	mov	r0, r5
 80109c4:	f7ff fea6 	bl	8010714 <_ZN8touchgfx8Drawable13getCachedAbsYEv>
 80109c8:	f8bd 3012 	ldrh.w	r3, [sp, #18]
 80109cc:	1a18      	subs	r0, r3, r0
 80109ce:	f8ad 0012 	strh.w	r0, [sp, #18]
 80109d2:	682b      	ldr	r3, [r5, #0]
 80109d4:	4631      	mov	r1, r6
 80109d6:	689b      	ldr	r3, [r3, #8]
 80109d8:	4628      	mov	r0, r5
 80109da:	4798      	blx	r3
 80109dc:	e717      	b.n	801080e <_ZN8touchgfx6Screen5JSMOCERKNS_4RectEPNS_8DrawableE+0x32>

080109de <_ZN8touchgfx6Screen9startSMOCERKNS_4RectE>:
 80109de:	b570      	push	{r4, r5, r6, lr}
 80109e0:	460c      	mov	r4, r1
 80109e2:	b086      	sub	sp, #24
 80109e4:	1d06      	adds	r6, r0, #4
 80109e6:	2300      	movs	r3, #0
 80109e8:	4631      	mov	r1, r6
 80109ea:	4605      	mov	r5, r0
 80109ec:	a802      	add	r0, sp, #8
 80109ee:	9301      	str	r3, [sp, #4]
 80109f0:	f7ff fca0 	bl	8010334 <_ZNK8touchgfx8Drawable15getAbsoluteRectEv>
 80109f4:	f8bd 3008 	ldrh.w	r3, [sp, #8]
 80109f8:	8822      	ldrh	r2, [r4, #0]
 80109fa:	f8bd 100a 	ldrh.w	r1, [sp, #10]
 80109fe:	f9b4 0004 	ldrsh.w	r0, [r4, #4]
 8010a02:	f8ad 0014 	strh.w	r0, [sp, #20]
 8010a06:	1ad2      	subs	r2, r2, r3
 8010a08:	8863      	ldrh	r3, [r4, #2]
 8010a0a:	f8ad 2010 	strh.w	r2, [sp, #16]
 8010a0e:	1a5b      	subs	r3, r3, r1
 8010a10:	f9b4 1006 	ldrsh.w	r1, [r4, #6]
 8010a14:	f8ad 1016 	strh.w	r1, [sp, #22]
 8010a18:	aa01      	add	r2, sp, #4
 8010a1a:	a904      	add	r1, sp, #16
 8010a1c:	4630      	mov	r0, r6
 8010a1e:	f8ad 3012 	strh.w	r3, [sp, #18]
 8010a22:	f7fb fa45 	bl	800beb0 <_ZN8touchgfx9Container14setupDrawChainERKNS_4RectEPPNS_8DrawableE>
 8010a26:	9a01      	ldr	r2, [sp, #4]
 8010a28:	b11a      	cbz	r2, 8010a32 <_ZN8touchgfx6Screen9startSMOCERKNS_4RectE+0x54>
 8010a2a:	4621      	mov	r1, r4
 8010a2c:	4628      	mov	r0, r5
 8010a2e:	f7ff fed5 	bl	80107dc <_ZN8touchgfx6Screen5JSMOCERKNS_4RectEPNS_8DrawableE>
 8010a32:	b006      	add	sp, #24
 8010a34:	bd70      	pop	{r4, r5, r6, pc}

08010a36 <_ZN8touchgfx6Screen4drawERNS_4RectE>:
 8010a36:	b530      	push	{r4, r5, lr}
 8010a38:	4602      	mov	r2, r0
 8010a3a:	4604      	mov	r4, r0
 8010a3c:	f852 0f08 	ldr.w	r0, [r2, #8]!
 8010a40:	b085      	sub	sp, #20
 8010a42:	460d      	mov	r5, r1
 8010a44:	6851      	ldr	r1, [r2, #4]
 8010a46:	466b      	mov	r3, sp
 8010a48:	c303      	stmia	r3!, {r0, r1}
 8010a4a:	4629      	mov	r1, r5
 8010a4c:	4668      	mov	r0, sp
 8010a4e:	f7fb f957 	bl	800bd00 <_ZN8touchgfx4RectaNERKS0_>
 8010a52:	f894 3038 	ldrb.w	r3, [r4, #56]	@ 0x38
 8010a56:	b12b      	cbz	r3, 8010a64 <_ZN8touchgfx6Screen4drawERNS_4RectE+0x2e>
 8010a58:	4669      	mov	r1, sp
 8010a5a:	4620      	mov	r0, r4
 8010a5c:	f7ff ffbf 	bl	80109de <_ZN8touchgfx6Screen9startSMOCERKNS_4RectE>
 8010a60:	b005      	add	sp, #20
 8010a62:	bd30      	pop	{r4, r5, pc}
 8010a64:	3404      	adds	r4, #4
 8010a66:	4621      	mov	r1, r4
 8010a68:	a802      	add	r0, sp, #8
 8010a6a:	f7ff fc63 	bl	8010334 <_ZNK8touchgfx8Drawable15getAbsoluteRectEv>
 8010a6e:	f8bd 3000 	ldrh.w	r3, [sp]
 8010a72:	f8bd 2008 	ldrh.w	r2, [sp, #8]
 8010a76:	1a9b      	subs	r3, r3, r2
 8010a78:	f8ad 3000 	strh.w	r3, [sp]
 8010a7c:	f8bd 200a 	ldrh.w	r2, [sp, #10]
 8010a80:	f8bd 3002 	ldrh.w	r3, [sp, #2]
 8010a84:	4669      	mov	r1, sp
 8010a86:	1a9b      	subs	r3, r3, r2
 8010a88:	4620      	mov	r0, r4
 8010a8a:	f8ad 3002 	strh.w	r3, [sp, #2]
 8010a8e:	f7fb f9d6 	bl	800be3e <_ZNK8touchgfx9Container4drawERKNS_4RectE>
 8010a92:	e7e5      	b.n	8010a60 <_ZN8touchgfx6Screen4drawERNS_4RectE+0x2a>

08010a94 <_ZN8touchgfx6Screen14bindTransitionERNS_10TransitionE>:
 8010a94:	680a      	ldr	r2, [r1, #0]
 8010a96:	460b      	mov	r3, r1
 8010a98:	6992      	ldr	r2, [r2, #24]
 8010a9a:	1d01      	adds	r1, r0, #4
 8010a9c:	4618      	mov	r0, r3
 8010a9e:	4710      	bx	r2

08010aa0 <_ZN8touchgfx12TextProviderC1Ev>:
 8010aa0:	b538      	push	{r3, r4, r5, lr}
 8010aa2:	2500      	movs	r5, #0
 8010aa4:	2302      	movs	r3, #2
 8010aa6:	4604      	mov	r4, r0
 8010aa8:	e9c0 5500 	strd	r5, r5, [r0]
 8010aac:	7403      	strb	r3, [r0, #16]
 8010aae:	6145      	str	r5, [r0, #20]
 8010ab0:	7605      	strb	r5, [r0, #24]
 8010ab2:	83c5      	strh	r5, [r0, #30]
 8010ab4:	8405      	strh	r5, [r0, #32]
 8010ab6:	86c5      	strh	r5, [r0, #54]	@ 0x36
 8010ab8:	8705      	strh	r5, [r0, #56]	@ 0x38
 8010aba:	87c5      	strh	r5, [r0, #62]	@ 0x3e
 8010abc:	f8a0 5040 	strh.w	r5, [r0, #64]	@ 0x40
 8010ac0:	e9c0 5511 	strd	r5, r5, [r0, #68]	@ 0x44
 8010ac4:	220e      	movs	r2, #14
 8010ac6:	4629      	mov	r1, r5
 8010ac8:	304c      	adds	r0, #76	@ 0x4c
 8010aca:	f010 f8a8 	bl	8020c1e <memset>
 8010ace:	2301      	movs	r3, #1
 8010ad0:	4620      	mov	r0, r4
 8010ad2:	f8a4 505a 	strh.w	r5, [r4, #90]	@ 0x5a
 8010ad6:	f8a4 505c 	strh.w	r5, [r4, #92]	@ 0x5c
 8010ada:	f8a4 505e 	strh.w	r5, [r4, #94]	@ 0x5e
 8010ade:	f884 3060 	strb.w	r3, [r4, #96]	@ 0x60
 8010ae2:	f884 5061 	strb.w	r5, [r4, #97]	@ 0x61
 8010ae6:	f7f8 fc69 	bl	80093bc <_ZN8touchgfx12TextProvider18initializeInternalEv>
 8010aea:	4620      	mov	r0, r4
 8010aec:	bd38      	pop	{r3, r4, r5, pc}

08010aee <_ZN8touchgfx12TextProvider11endOfStringEv>:
 8010aee:	8ec3      	ldrh	r3, [r0, #54]	@ 0x36
 8010af0:	eb00 0043 	add.w	r0, r0, r3, lsl #1
 8010af4:	8c40      	ldrh	r0, [r0, #34]	@ 0x22
 8010af6:	fab0 f080 	clz	r0, r0
 8010afa:	0940      	lsrs	r0, r0, #5
 8010afc:	4770      	bx	lr

08010afe <_ZN8touchgfx12TextProvider19getNextCharInternalEv>:
 8010afe:	b530      	push	{r4, r5, lr}
 8010b00:	2500      	movs	r5, #0
 8010b02:	2401      	movs	r4, #1
 8010b04:	6843      	ldr	r3, [r0, #4]
 8010b06:	b913      	cbnz	r3, 8010b0e <_ZN8touchgfx12TextProvider19getNextCharInternalEv+0x10>
 8010b08:	6803      	ldr	r3, [r0, #0]
 8010b0a:	b313      	cbz	r3, 8010b52 <_ZN8touchgfx12TextProvider19getNextCharInternalEv+0x54>
 8010b0c:	6043      	str	r3, [r0, #4]
 8010b0e:	7e03      	ldrb	r3, [r0, #24]
 8010b10:	b143      	cbz	r3, 8010b24 <_ZN8touchgfx12TextProvider19getNextCharInternalEv+0x26>
 8010b12:	6943      	ldr	r3, [r0, #20]
 8010b14:	b12b      	cbz	r3, 8010b22 <_ZN8touchgfx12TextProvider19getNextCharInternalEv+0x24>
 8010b16:	881a      	ldrh	r2, [r3, #0]
 8010b18:	b11a      	cbz	r2, 8010b22 <_ZN8touchgfx12TextProvider19getNextCharInternalEv+0x24>
 8010b1a:	1c9a      	adds	r2, r3, #2
 8010b1c:	6142      	str	r2, [r0, #20]
 8010b1e:	8818      	ldrh	r0, [r3, #0]
 8010b20:	bd30      	pop	{r4, r5, pc}
 8010b22:	7605      	strb	r5, [r0, #24]
 8010b24:	6843      	ldr	r3, [r0, #4]
 8010b26:	8819      	ldrh	r1, [r3, #0]
 8010b28:	b199      	cbz	r1, 8010b52 <_ZN8touchgfx12TextProvider19getNextCharInternalEv+0x54>
 8010b2a:	1c9a      	adds	r2, r3, #2
 8010b2c:	2902      	cmp	r1, #2
 8010b2e:	6042      	str	r2, [r0, #4]
 8010b30:	d1f5      	bne.n	8010b1e <_ZN8touchgfx12TextProvider19getNextCharInternalEv+0x20>
 8010b32:	7c03      	ldrb	r3, [r0, #16]
 8010b34:	2b01      	cmp	r3, #1
 8010b36:	d8e5      	bhi.n	8010b04 <_ZN8touchgfx12TextProvider19getNextCharInternalEv+0x6>
 8010b38:	1c5a      	adds	r2, r3, #1
 8010b3a:	3302      	adds	r3, #2
 8010b3c:	7402      	strb	r2, [r0, #16]
 8010b3e:	f850 3023 	ldr.w	r3, [r0, r3, lsl #2]
 8010b42:	6143      	str	r3, [r0, #20]
 8010b44:	2b00      	cmp	r3, #0
 8010b46:	d0dd      	beq.n	8010b04 <_ZN8touchgfx12TextProvider19getNextCharInternalEv+0x6>
 8010b48:	881b      	ldrh	r3, [r3, #0]
 8010b4a:	2b00      	cmp	r3, #0
 8010b4c:	d0da      	beq.n	8010b04 <_ZN8touchgfx12TextProvider19getNextCharInternalEv+0x6>
 8010b4e:	7604      	strb	r4, [r0, #24]
 8010b50:	e7d8      	b.n	8010b04 <_ZN8touchgfx12TextProvider19getNextCharInternalEv+0x6>
 8010b52:	2000      	movs	r0, #0
 8010b54:	e7e4      	b.n	8010b20 <_ZN8touchgfx12TextProvider19getNextCharInternalEv+0x22>

08010b56 <_ZN8touchgfx12TextProvider10initializeEPKtSt9__va_listS2_PKNS_24FontContextualFormsTableE>:
 8010b56:	b430      	push	{r4, r5}
 8010b58:	6001      	str	r1, [r0, #0]
 8010b5a:	2100      	movs	r1, #0
 8010b5c:	6041      	str	r1, [r0, #4]
 8010b5e:	6815      	ldr	r5, [r2, #0]
 8010b60:	6085      	str	r5, [r0, #8]
 8010b62:	6852      	ldr	r2, [r2, #4]
 8010b64:	6443      	str	r3, [r0, #68]	@ 0x44
 8010b66:	9b02      	ldr	r3, [sp, #8]
 8010b68:	60c2      	str	r2, [r0, #12]
 8010b6a:	7401      	strb	r1, [r0, #16]
 8010b6c:	6141      	str	r1, [r0, #20]
 8010b6e:	7601      	strb	r1, [r0, #24]
 8010b70:	8701      	strh	r1, [r0, #56]	@ 0x38
 8010b72:	8401      	strh	r1, [r0, #32]
 8010b74:	f8a0 1040 	strh.w	r1, [r0, #64]	@ 0x40
 8010b78:	6483      	str	r3, [r0, #72]	@ 0x48
 8010b7a:	bc30      	pop	{r4, r5}
 8010b7c:	f7f8 bc1e 	b.w	80093bc <_ZN8touchgfx12TextProvider18initializeInternalEv>

08010b80 <_ZN8touchgfx12TextProvider10initializeEPKtS2_PKNS_24FontContextualFormsTableEz>:
 8010b80:	b408      	push	{r3}
 8010b82:	b510      	push	{r4, lr}
 8010b84:	b085      	sub	sp, #20
 8010b86:	ac07      	add	r4, sp, #28
 8010b88:	f854 3b04 	ldr.w	r3, [r4], #4
 8010b8c:	9300      	str	r3, [sp, #0]
 8010b8e:	4613      	mov	r3, r2
 8010b90:	4622      	mov	r2, r4
 8010b92:	9403      	str	r4, [sp, #12]
 8010b94:	f7ff ffdf 	bl	8010b56 <_ZN8touchgfx12TextProvider10initializeEPKtSt9__va_listS2_PKNS_24FontContextualFormsTableE>
 8010b98:	b005      	add	sp, #20
 8010b9a:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
 8010b9e:	b001      	add	sp, #4
 8010ba0:	4770      	bx	lr

08010ba2 <_ZN8touchgfx12TextProvider16adjustHindiGlyphEPKNS_9GlyphNodeE>:
 8010ba2:	b5f0      	push	{r4, r5, r6, r7, lr}
 8010ba4:	4605      	mov	r5, r0
 8010ba6:	4608      	mov	r0, r1
 8010ba8:	b1e9      	cbz	r1, 8010be6 <_ZN8touchgfx12TextProvider16adjustHindiGlyphEPKNS_9GlyphNodeE+0x44>
 8010baa:	f105 044c 	add.w	r4, r5, #76	@ 0x4c
 8010bae:	460b      	mov	r3, r1
 8010bb0:	f101 0708 	add.w	r7, r1, #8
 8010bb4:	4622      	mov	r2, r4
 8010bb6:	6818      	ldr	r0, [r3, #0]
 8010bb8:	6859      	ldr	r1, [r3, #4]
 8010bba:	4626      	mov	r6, r4
 8010bbc:	c603      	stmia	r6!, {r0, r1}
 8010bbe:	3308      	adds	r3, #8
 8010bc0:	42bb      	cmp	r3, r7
 8010bc2:	4634      	mov	r4, r6
 8010bc4:	d1f7      	bne.n	8010bb6 <_ZN8touchgfx12TextProvider16adjustHindiGlyphEPKNS_9GlyphNodeE+0x14>
 8010bc6:	6818      	ldr	r0, [r3, #0]
 8010bc8:	6030      	str	r0, [r6, #0]
 8010bca:	889b      	ldrh	r3, [r3, #4]
 8010bcc:	80b3      	strh	r3, [r6, #4]
 8010bce:	f895 3059 	ldrb.w	r3, [r5, #89]	@ 0x59
 8010bd2:	015b      	lsls	r3, r3, #5
 8010bd4:	f403 7180 	and.w	r1, r3, #256	@ 0x100
 8010bd8:	f895 3052 	ldrb.w	r3, [r5, #82]	@ 0x52
 8010bdc:	430b      	orrs	r3, r1
 8010bde:	425b      	negs	r3, r3
 8010be0:	f885 3055 	strb.w	r3, [r5, #85]	@ 0x55
 8010be4:	4610      	mov	r0, r2
 8010be6:	bdf0      	pop	{r4, r5, r6, r7, pc}

08010be8 <_ZNK8touchgfx12TextProvider15thaiLookupGlyphEPKNS_9GlyphNodeEPKNS_4FontEt>:
 8010be8:	b538      	push	{r3, r4, r5, lr}
 8010bea:	460c      	mov	r4, r1
 8010bec:	6811      	ldr	r1, [r2, #0]
 8010bee:	4610      	mov	r0, r2
 8010bf0:	68cd      	ldr	r5, [r1, #12]
 8010bf2:	4619      	mov	r1, r3
 8010bf4:	47a8      	blx	r5
 8010bf6:	2800      	cmp	r0, #0
 8010bf8:	bf08      	it	eq
 8010bfa:	4620      	moveq	r0, r4
 8010bfc:	bd38      	pop	{r3, r4, r5, pc}
	...

08010c00 <_ZN8touchgfx12TextProvider15adjustThaiGlyphEPKNS_4FontEPKNS_9GlyphNodeE>:
 8010c00:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 8010c04:	468c      	mov	ip, r1
 8010c06:	4605      	mov	r5, r0
 8010c08:	4614      	mov	r4, r2
 8010c0a:	b942      	cbnz	r2, 8010c1e <_ZN8touchgfx12TextProvider15adjustThaiGlyphEPKNS_4FontEPKNS_9GlyphNodeE+0x1e>
 8010c0c:	f8a5 205a 	strh.w	r2, [r5, #90]	@ 0x5a
 8010c10:	f8a5 205c 	strh.w	r2, [r5, #92]	@ 0x5c
 8010c14:	f8a5 205e 	strh.w	r2, [r5, #94]	@ 0x5e
 8010c18:	4620      	mov	r0, r4
 8010c1a:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
 8010c1e:	7b50      	ldrb	r0, [r2, #13]
 8010c20:	8893      	ldrh	r3, [r2, #4]
 8010c22:	0106      	lsls	r6, r0, #4
 8010c24:	f406 7280 	and.w	r2, r6, #256	@ 0x100
 8010c28:	79e6      	ldrb	r6, [r4, #7]
 8010c2a:	f46f 6163 	mvn.w	r1, #3632	@ 0xe30
 8010c2e:	4316      	orrs	r6, r2
 8010c30:	185a      	adds	r2, r3, r1
 8010c32:	b291      	uxth	r1, r2
 8010c34:	291d      	cmp	r1, #29
 8010c36:	b2b7      	uxth	r7, r6
 8010c38:	d87e      	bhi.n	8010d38 <_ZN8touchgfx12TextProvider15adjustThaiGlyphEPKNS_4FontEPKNS_9GlyphNodeE+0x138>
 8010c3a:	2201      	movs	r2, #1
 8010c3c:	408a      	lsls	r2, r1
 8010c3e:	498a      	ldr	r1, [pc, #552]	@ (8010e68 <_ZN8touchgfx12TextProvider15adjustThaiGlyphEPKNS_4FontEPKNS_9GlyphNodeE+0x268>)
 8010c40:	420a      	tst	r2, r1
 8010c42:	ea4f 06e6 	mov.w	r6, r6, asr #3
 8010c46:	d12d      	bne.n	8010ca4 <_ZN8touchgfx12TextProvider15adjustThaiGlyphEPKNS_4FontEPKNS_9GlyphNodeE+0xa4>
 8010c48:	f412 7f60 	tst.w	r2, #896	@ 0x380
 8010c4c:	d074      	beq.n	8010d38 <_ZN8touchgfx12TextProvider15adjustThaiGlyphEPKNS_4FontEPKNS_9GlyphNodeE+0x138>
 8010c4e:	f105 024c 	add.w	r2, r5, #76	@ 0x4c
 8010c52:	4623      	mov	r3, r4
 8010c54:	f104 0e08 	add.w	lr, r4, #8
 8010c58:	4614      	mov	r4, r2
 8010c5a:	6818      	ldr	r0, [r3, #0]
 8010c5c:	6859      	ldr	r1, [r3, #4]
 8010c5e:	4694      	mov	ip, r2
 8010c60:	e8ac 0003 	stmia.w	ip!, {r0, r1}
 8010c64:	3308      	adds	r3, #8
 8010c66:	4573      	cmp	r3, lr
 8010c68:	4662      	mov	r2, ip
 8010c6a:	d1f6      	bne.n	8010c5a <_ZN8touchgfx12TextProvider15adjustThaiGlyphEPKNS_4FontEPKNS_9GlyphNodeE+0x5a>
 8010c6c:	6818      	ldr	r0, [r3, #0]
 8010c6e:	f8cc 0000 	str.w	r0, [ip]
 8010c72:	889b      	ldrh	r3, [r3, #4]
 8010c74:	f8ac 3004 	strh.w	r3, [ip, #4]
 8010c78:	f8b5 105c 	ldrh.w	r1, [r5, #92]	@ 0x5c
 8010c7c:	f895 0059 	ldrb.w	r0, [r5, #89]	@ 0x59
 8010c80:	b2b3      	uxth	r3, r6
 8010c82:	1aca      	subs	r2, r1, r3
 8010c84:	b292      	uxth	r2, r2
 8010c86:	f885 2054 	strb.w	r2, [r5, #84]	@ 0x54
 8010c8a:	10d2      	asrs	r2, r2, #3
 8010c8c:	f020 0060 	bic.w	r0, r0, #96	@ 0x60
 8010c90:	f002 0260 	and.w	r2, r2, #96	@ 0x60
 8010c94:	4302      	orrs	r2, r0
 8010c96:	1bcf      	subs	r7, r1, r7
 8010c98:	f885 2059 	strb.w	r2, [r5, #89]	@ 0x59
 8010c9c:	1afb      	subs	r3, r7, r3
 8010c9e:	f8a5 305c 	strh.w	r3, [r5, #92]	@ 0x5c
 8010ca2:	e7b9      	b.n	8010c18 <_ZN8touchgfx12TextProvider15adjustThaiGlyphEPKNS_4FontEPKNS_9GlyphNodeE+0x18>
 8010ca4:	f105 024c 	add.w	r2, r5, #76	@ 0x4c
 8010ca8:	4623      	mov	r3, r4
 8010caa:	f104 0808 	add.w	r8, r4, #8
 8010cae:	4614      	mov	r4, r2
 8010cb0:	6818      	ldr	r0, [r3, #0]
 8010cb2:	6859      	ldr	r1, [r3, #4]
 8010cb4:	4696      	mov	lr, r2
 8010cb6:	e8ae 0003 	stmia.w	lr!, {r0, r1}
 8010cba:	3308      	adds	r3, #8
 8010cbc:	4543      	cmp	r3, r8
 8010cbe:	4672      	mov	r2, lr
 8010cc0:	d1f6      	bne.n	8010cb0 <_ZN8touchgfx12TextProvider15adjustThaiGlyphEPKNS_4FontEPKNS_9GlyphNodeE+0xb0>
 8010cc2:	6818      	ldr	r0, [r3, #0]
 8010cc4:	f8ce 0000 	str.w	r0, [lr]
 8010cc8:	889b      	ldrh	r3, [r3, #4]
 8010cca:	f8ae 3004 	strh.w	r3, [lr, #4]
 8010cce:	8eeb      	ldrh	r3, [r5, #54]	@ 0x36
 8010cd0:	eb05 0343 	add.w	r3, r5, r3, lsl #1
 8010cd4:	8c59      	ldrh	r1, [r3, #34]	@ 0x22
 8010cd6:	f640 6333 	movw	r3, #3635	@ 0xe33
 8010cda:	4299      	cmp	r1, r3
 8010cdc:	d111      	bne.n	8010d02 <_ZN8touchgfx12TextProvider15adjustThaiGlyphEPKNS_4FontEPKNS_9GlyphNodeE+0x102>
 8010cde:	f8dc 3000 	ldr.w	r3, [ip]
 8010ce2:	4660      	mov	r0, ip
 8010ce4:	68db      	ldr	r3, [r3, #12]
 8010ce6:	4798      	blx	r3
 8010ce8:	7b41      	ldrb	r1, [r0, #13]
 8010cea:	00cb      	lsls	r3, r1, #3
 8010cec:	f403 7280 	and.w	r2, r3, #256	@ 0x100
 8010cf0:	7a03      	ldrb	r3, [r0, #8]
 8010cf2:	4313      	orrs	r3, r2
 8010cf4:	064a      	lsls	r2, r1, #25
 8010cf6:	bf44      	itt	mi
 8010cf8:	f5a3 7300 	submi.w	r3, r3, #512	@ 0x200
 8010cfc:	b21b      	sxthmi	r3, r3
 8010cfe:	f8a5 305a 	strh.w	r3, [r5, #90]	@ 0x5a
 8010d02:	f8b5 305a 	ldrh.w	r3, [r5, #90]	@ 0x5a
 8010d06:	f895 2059 	ldrb.w	r2, [r5, #89]	@ 0x59
 8010d0a:	443b      	add	r3, r7
 8010d0c:	4433      	add	r3, r6
 8010d0e:	b29b      	uxth	r3, r3
 8010d10:	f8a5 305a 	strh.w	r3, [r5, #90]	@ 0x5a
 8010d14:	f885 3054 	strb.w	r3, [r5, #84]	@ 0x54
 8010d18:	10db      	asrs	r3, r3, #3
 8010d1a:	f022 0260 	bic.w	r2, r2, #96	@ 0x60
 8010d1e:	f003 0360 	and.w	r3, r3, #96	@ 0x60
 8010d22:	4313      	orrs	r3, r2
 8010d24:	f885 3059 	strb.w	r3, [r5, #89]	@ 0x59
 8010d28:	f895 205e 	ldrb.w	r2, [r5, #94]	@ 0x5e
 8010d2c:	f895 3055 	ldrb.w	r3, [r5, #85]	@ 0x55
 8010d30:	1a9b      	subs	r3, r3, r2
 8010d32:	f885 3055 	strb.w	r3, [r5, #85]	@ 0x55
 8010d36:	e76f      	b.n	8010c18 <_ZN8touchgfx12TextProvider15adjustThaiGlyphEPKNS_4FontEPKNS_9GlyphNodeE+0x18>
 8010d38:	f023 0204 	bic.w	r2, r3, #4
 8010d3c:	f640 611b 	movw	r1, #3611	@ 0xe1b
 8010d40:	428a      	cmp	r2, r1
 8010d42:	d003      	beq.n	8010d4c <_ZN8touchgfx12TextProvider15adjustThaiGlyphEPKNS_4FontEPKNS_9GlyphNodeE+0x14c>
 8010d44:	f640 621d 	movw	r2, #3613	@ 0xe1d
 8010d48:	4293      	cmp	r3, r2
 8010d4a:	d137      	bne.n	8010dbc <_ZN8touchgfx12TextProvider15adjustThaiGlyphEPKNS_4FontEPKNS_9GlyphNodeE+0x1bc>
 8010d4c:	f105 064c 	add.w	r6, r5, #76	@ 0x4c
 8010d50:	4622      	mov	r2, r4
 8010d52:	f104 0808 	add.w	r8, r4, #8
 8010d56:	4634      	mov	r4, r6
 8010d58:	6810      	ldr	r0, [r2, #0]
 8010d5a:	6851      	ldr	r1, [r2, #4]
 8010d5c:	46b6      	mov	lr, r6
 8010d5e:	e8ae 0003 	stmia.w	lr!, {r0, r1}
 8010d62:	3208      	adds	r2, #8
 8010d64:	4542      	cmp	r2, r8
 8010d66:	4676      	mov	r6, lr
 8010d68:	d1f6      	bne.n	8010d58 <_ZN8touchgfx12TextProvider15adjustThaiGlyphEPKNS_4FontEPKNS_9GlyphNodeE+0x158>
 8010d6a:	6810      	ldr	r0, [r2, #0]
 8010d6c:	f8ce 0000 	str.w	r0, [lr]
 8010d70:	8892      	ldrh	r2, [r2, #4]
 8010d72:	f8ae 2004 	strh.w	r2, [lr, #4]
 8010d76:	3b01      	subs	r3, #1
 8010d78:	b29b      	uxth	r3, r3
 8010d7a:	4662      	mov	r2, ip
 8010d7c:	4621      	mov	r1, r4
 8010d7e:	4628      	mov	r0, r5
 8010d80:	f7ff ff32 	bl	8010be8 <_ZNK8touchgfx12TextProvider15thaiLookupGlyphEPKNS_9GlyphNodeEPKNS_4FontEt>
 8010d84:	7b41      	ldrb	r1, [r0, #13]
 8010d86:	00cb      	lsls	r3, r1, #3
 8010d88:	f403 7280 	and.w	r2, r3, #256	@ 0x100
 8010d8c:	7a03      	ldrb	r3, [r0, #8]
 8010d8e:	0648      	lsls	r0, r1, #25
 8010d90:	ea43 0302 	orr.w	r3, r3, r2
 8010d94:	bf44      	itt	mi
 8010d96:	f5a3 7300 	submi.w	r3, r3, #512	@ 0x200
 8010d9a:	b21b      	sxthmi	r3, r3
 8010d9c:	f8a5 305a 	strh.w	r3, [r5, #90]	@ 0x5a
 8010da0:	f895 3059 	ldrb.w	r3, [r5, #89]	@ 0x59
 8010da4:	f895 2056 	ldrb.w	r2, [r5, #86]	@ 0x56
 8010da8:	005b      	lsls	r3, r3, #1
 8010daa:	f403 7380 	and.w	r3, r3, #256	@ 0x100
 8010dae:	4313      	orrs	r3, r2
 8010db0:	115a      	asrs	r2, r3, #5
 8010db2:	eb02 0393 	add.w	r3, r2, r3, lsr #2
 8010db6:	f8a5 305e 	strh.w	r3, [r5, #94]	@ 0x5e
 8010dba:	e046      	b.n	8010e4a <_ZN8touchgfx12TextProvider15adjustThaiGlyphEPKNS_4FontEPKNS_9GlyphNodeE+0x24a>
 8010dbc:	00c2      	lsls	r2, r0, #3
 8010dbe:	f402 7180 	and.w	r1, r2, #256	@ 0x100
 8010dc2:	7a22      	ldrb	r2, [r4, #8]
 8010dc4:	430a      	orrs	r2, r1
 8010dc6:	0641      	lsls	r1, r0, #25
 8010dc8:	bf44      	itt	mi
 8010dca:	f5a2 7200 	submi.w	r2, r2, #512	@ 0x200
 8010dce:	b212      	sxthmi	r2, r2
 8010dd0:	f8a5 205a 	strh.w	r2, [r5, #90]	@ 0x5a
 8010dd4:	f640 6109 	movw	r1, #3593	@ 0xe09
 8010dd8:	f023 0210 	bic.w	r2, r3, #16
 8010ddc:	428a      	cmp	r2, r1
 8010dde:	d003      	beq.n	8010de8 <_ZN8touchgfx12TextProvider15adjustThaiGlyphEPKNS_4FontEPKNS_9GlyphNodeE+0x1e8>
 8010de0:	f640 6213 	movw	r2, #3603	@ 0xe13
 8010de4:	4293      	cmp	r3, r2
 8010de6:	d13d      	bne.n	8010e64 <_ZN8touchgfx12TextProvider15adjustThaiGlyphEPKNS_4FontEPKNS_9GlyphNodeE+0x264>
 8010de8:	f105 024c 	add.w	r2, r5, #76	@ 0x4c
 8010dec:	f104 0808 	add.w	r8, r4, #8
 8010df0:	4696      	mov	lr, r2
 8010df2:	6820      	ldr	r0, [r4, #0]
 8010df4:	6861      	ldr	r1, [r4, #4]
 8010df6:	4616      	mov	r6, r2
 8010df8:	c603      	stmia	r6!, {r0, r1}
 8010dfa:	3408      	adds	r4, #8
 8010dfc:	4544      	cmp	r4, r8
 8010dfe:	4632      	mov	r2, r6
 8010e00:	d1f7      	bne.n	8010df2 <_ZN8touchgfx12TextProvider15adjustThaiGlyphEPKNS_4FontEPKNS_9GlyphNodeE+0x1f2>
 8010e02:	6820      	ldr	r0, [r4, #0]
 8010e04:	6030      	str	r0, [r6, #0]
 8010e06:	88a1      	ldrh	r1, [r4, #4]
 8010e08:	80b1      	strh	r1, [r6, #4]
 8010e0a:	f895 6059 	ldrb.w	r6, [r5, #89]	@ 0x59
 8010e0e:	0076      	lsls	r6, r6, #1
 8010e10:	f406 7280 	and.w	r2, r6, #256	@ 0x100
 8010e14:	f895 6056 	ldrb.w	r6, [r5, #86]	@ 0x56
 8010e18:	4316      	orrs	r6, r2
 8010e1a:	f640 6213 	movw	r2, #3603	@ 0xe13
 8010e1e:	4293      	cmp	r3, r2
 8010e20:	bf1a      	itte	ne
 8010e22:	f103 33ff 	addne.w	r3, r3, #4294967295
 8010e26:	b29b      	uxthne	r3, r3
 8010e28:	f640 630c 	movweq	r3, #3596	@ 0xe0c
 8010e2c:	4662      	mov	r2, ip
 8010e2e:	4671      	mov	r1, lr
 8010e30:	4628      	mov	r0, r5
 8010e32:	4674      	mov	r4, lr
 8010e34:	f7ff fed8 	bl	8010be8 <_ZNK8touchgfx12TextProvider15thaiLookupGlyphEPKNS_9GlyphNodeEPKNS_4FontEt>
 8010e38:	7b43      	ldrb	r3, [r0, #13]
 8010e3a:	7a82      	ldrb	r2, [r0, #10]
 8010e3c:	005b      	lsls	r3, r3, #1
 8010e3e:	f403 7380 	and.w	r3, r3, #256	@ 0x100
 8010e42:	4313      	orrs	r3, r2
 8010e44:	1af6      	subs	r6, r6, r3
 8010e46:	f8a5 605e 	strh.w	r6, [r5, #94]	@ 0x5e
 8010e4a:	7b61      	ldrb	r1, [r4, #13]
 8010e4c:	00cb      	lsls	r3, r1, #3
 8010e4e:	f403 7280 	and.w	r2, r3, #256	@ 0x100
 8010e52:	7a23      	ldrb	r3, [r4, #8]
 8010e54:	4313      	orrs	r3, r2
 8010e56:	064a      	lsls	r2, r1, #25
 8010e58:	bf44      	itt	mi
 8010e5a:	f5a3 7300 	submi.w	r3, r3, #512	@ 0x200
 8010e5e:	b21b      	sxthmi	r3, r3
 8010e60:	1bdb      	subs	r3, r3, r7
 8010e62:	e71c      	b.n	8010c9e <_ZN8touchgfx12TextProvider15adjustThaiGlyphEPKNS_4FontEPKNS_9GlyphNodeE+0x9e>
 8010e64:	2300      	movs	r3, #0
 8010e66:	e7a6      	b.n	8010db6 <_ZN8touchgfx12TextProvider15adjustThaiGlyphEPKNS_4FontEPKNS_9GlyphNodeE+0x1b6>
 8010e68:	3fc00079 	.word	0x3fc00079

08010e6c <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt>:
 8010e6c:	e92d 43f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, lr}
 8010e70:	4604      	mov	r4, r0
 8010e72:	b942      	cbnz	r2, 8010e86 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x1a>
 8010e74:	f44f 4300 	mov.w	r3, #32768	@ 0x8000
 8010e78:	f8a0 305a 	strh.w	r3, [r0, #90]	@ 0x5a
 8010e7c:	f8a0 305c 	strh.w	r3, [r0, #92]	@ 0x5c
 8010e80:	f8a4 305e 	strh.w	r3, [r4, #94]	@ 0x5e
 8010e84:	e047      	b.n	8010f16 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0xaa>
 8010e86:	7b51      	ldrb	r1, [r2, #13]
 8010e88:	8893      	ldrh	r3, [r2, #4]
 8010e8a:	010d      	lsls	r5, r1, #4
 8010e8c:	f405 7080 	and.w	r0, r5, #256	@ 0x100
 8010e90:	79d5      	ldrb	r5, [r2, #7]
 8010e92:	4305      	orrs	r5, r0
 8010e94:	2d04      	cmp	r5, #4
 8010e96:	bfcc      	ite	gt
 8010e98:	ea4f 0e95 	movgt.w	lr, r5, lsr #2
 8010e9c:	f04f 0e01 	movle.w	lr, #1
 8010ea0:	f5b3 6fdd 	cmp.w	r3, #1768	@ 0x6e8
 8010ea4:	f200 80ab 	bhi.w	8010ffe <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x192>
 8010ea8:	f240 60e7 	movw	r0, #1767	@ 0x6e7
 8010eac:	4283      	cmp	r3, r0
 8010eae:	d216      	bcs.n	8010ede <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x72>
 8010eb0:	f240 605b 	movw	r0, #1627	@ 0x65b
 8010eb4:	4283      	cmp	r3, r0
 8010eb6:	d859      	bhi.n	8010f6c <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x100>
 8010eb8:	f240 6057 	movw	r0, #1623	@ 0x657
 8010ebc:	4283      	cmp	r3, r0
 8010ebe:	d20e      	bcs.n	8010ede <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x72>
 8010ec0:	f5b3 6fca 	cmp.w	r3, #1616	@ 0x650
 8010ec4:	d24a      	bcs.n	8010f5c <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0xf0>
 8010ec6:	f240 604e 	movw	r0, #1614	@ 0x64e
 8010eca:	4283      	cmp	r3, r0
 8010ecc:	d207      	bcs.n	8010ede <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x72>
 8010ece:	f240 601a 	movw	r0, #1562	@ 0x61a
 8010ed2:	4283      	cmp	r3, r0
 8010ed4:	d02a      	beq.n	8010f2c <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0xc0>
 8010ed6:	d821      	bhi.n	8010f1c <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0xb0>
 8010ed8:	f5b3 6fc2 	cmp.w	r3, #1552	@ 0x610
 8010edc:	d35b      	bcc.n	8010f96 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x12a>
 8010ede:	f9b4 305a 	ldrsh.w	r3, [r4, #90]	@ 0x5a
 8010ee2:	f513 4f00 	cmn.w	r3, #32768	@ 0x8000
 8010ee6:	f040 80d0 	bne.w	801108a <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x21e>
 8010eea:	f9b4 005c 	ldrsh.w	r0, [r4, #92]	@ 0x5c
 8010eee:	f510 4f00 	cmn.w	r0, #32768	@ 0x8000
 8010ef2:	f040 80ca 	bne.w	801108a <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x21e>
 8010ef6:	00cb      	lsls	r3, r1, #3
 8010ef8:	f403 7080 	and.w	r0, r3, #256	@ 0x100
 8010efc:	7a13      	ldrb	r3, [r2, #8]
 8010efe:	0649      	lsls	r1, r1, #25
 8010f00:	ea43 0300 	orr.w	r3, r3, r0
 8010f04:	bf44      	itt	mi
 8010f06:	f5a3 7300 	submi.w	r3, r3, #512	@ 0x200
 8010f0a:	b21b      	sxthmi	r3, r3
 8010f0c:	f8a4 305a 	strh.w	r3, [r4, #90]	@ 0x5a
 8010f10:	1b5d      	subs	r5, r3, r5
 8010f12:	f8a4 505c 	strh.w	r5, [r4, #92]	@ 0x5c
 8010f16:	4610      	mov	r0, r2
 8010f18:	e8bd 83f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, pc}
 8010f1c:	f240 604b 	movw	r0, #1611	@ 0x64b
 8010f20:	4283      	cmp	r3, r0
 8010f22:	d338      	bcc.n	8010f96 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x12a>
 8010f24:	f240 604c 	movw	r0, #1612	@ 0x64c
 8010f28:	4283      	cmp	r3, r0
 8010f2a:	d9d8      	bls.n	8010ede <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x72>
 8010f2c:	f9b4 005a 	ldrsh.w	r0, [r4, #90]	@ 0x5a
 8010f30:	f9b4 305c 	ldrsh.w	r3, [r4, #92]	@ 0x5c
 8010f34:	f510 4f00 	cmn.w	r0, #32768	@ 0x8000
 8010f38:	f040 80f2 	bne.w	8011120 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x2b4>
 8010f3c:	f513 4f00 	cmn.w	r3, #32768	@ 0x8000
 8010f40:	f040 80ee 	bne.w	8011120 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x2b4>
 8010f44:	00cb      	lsls	r3, r1, #3
 8010f46:	f403 7080 	and.w	r0, r3, #256	@ 0x100
 8010f4a:	7a13      	ldrb	r3, [r2, #8]
 8010f4c:	064e      	lsls	r6, r1, #25
 8010f4e:	ea43 0300 	orr.w	r3, r3, r0
 8010f52:	bf44      	itt	mi
 8010f54:	f5a3 7300 	submi.w	r3, r3, #512	@ 0x200
 8010f58:	b21b      	sxthmi	r3, r3
 8010f5a:	e7d9      	b.n	8010f10 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0xa4>
 8010f5c:	f240 6054 	movw	r0, #1620	@ 0x654
 8010f60:	4283      	cmp	r3, r0
 8010f62:	d8e3      	bhi.n	8010f2c <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0xc0>
 8010f64:	f5b3 6fca 	cmp.w	r3, #1616	@ 0x650
 8010f68:	d9e0      	bls.n	8010f2c <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0xc0>
 8010f6a:	e7b8      	b.n	8010ede <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x72>
 8010f6c:	f240 6074 	movw	r0, #1652	@ 0x674
 8010f70:	4283      	cmp	r3, r0
 8010f72:	d0b4      	beq.n	8010ede <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x72>
 8010f74:	d82d      	bhi.n	8010fd2 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x166>
 8010f76:	f240 605e 	movw	r0, #1630	@ 0x65e
 8010f7a:	4283      	cmp	r3, r0
 8010f7c:	d804      	bhi.n	8010f88 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x11c>
 8010f7e:	f240 605d 	movw	r0, #1629	@ 0x65d
 8010f82:	4283      	cmp	r3, r0
 8010f84:	d3d2      	bcc.n	8010f2c <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0xc0>
 8010f86:	e7aa      	b.n	8010ede <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x72>
 8010f88:	f240 605f 	movw	r0, #1631	@ 0x65f
 8010f8c:	4283      	cmp	r3, r0
 8010f8e:	d0cd      	beq.n	8010f2c <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0xc0>
 8010f90:	f5b3 6fce 	cmp.w	r3, #1648	@ 0x670
 8010f94:	d0a3      	beq.n	8010ede <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x72>
 8010f96:	00cb      	lsls	r3, r1, #3
 8010f98:	f403 7080 	and.w	r0, r3, #256	@ 0x100
 8010f9c:	7a13      	ldrb	r3, [r2, #8]
 8010f9e:	0649      	lsls	r1, r1, #25
 8010fa0:	ea43 0300 	orr.w	r3, r3, r0
 8010fa4:	bf44      	itt	mi
 8010fa6:	f5a3 7300 	submi.w	r3, r3, #512	@ 0x200
 8010faa:	b21b      	sxthmi	r3, r3
 8010fac:	1b5d      	subs	r5, r3, r5
 8010fae:	f8a4 305a 	strh.w	r3, [r4, #90]	@ 0x5a
 8010fb2:	f8a4 505c 	strh.w	r5, [r4, #92]	@ 0x5c
 8010fb6:	7b53      	ldrb	r3, [r2, #13]
 8010fb8:	015b      	lsls	r3, r3, #5
 8010fba:	f403 7180 	and.w	r1, r3, #256	@ 0x100
 8010fbe:	7993      	ldrb	r3, [r2, #6]
 8010fc0:	430b      	orrs	r3, r1
 8010fc2:	005b      	lsls	r3, r3, #1
 8010fc4:	2105      	movs	r1, #5
 8010fc6:	fb93 f3f1 	sdiv	r3, r3, r1
 8010fca:	f992 1009 	ldrsb.w	r1, [r2, #9]
 8010fce:	440b      	add	r3, r1
 8010fd0:	e756      	b.n	8010e80 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x14>
 8010fd2:	f240 60e2 	movw	r0, #1762	@ 0x6e2
 8010fd6:	4283      	cmp	r3, r0
 8010fd8:	d809      	bhi.n	8010fee <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x182>
 8010fda:	f240 60df 	movw	r0, #1759	@ 0x6df
 8010fde:	4283      	cmp	r3, r0
 8010fe0:	f4bf af7d 	bcs.w	8010ede <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x72>
 8010fe4:	f2a3 63d6 	subw	r3, r3, #1750	@ 0x6d6
 8010fe8:	2b05      	cmp	r3, #5
 8010fea:	d8d4      	bhi.n	8010f96 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x12a>
 8010fec:	e777      	b.n	8010ede <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x72>
 8010fee:	f240 60e3 	movw	r0, #1763	@ 0x6e3
 8010ff2:	4283      	cmp	r3, r0
 8010ff4:	d09a      	beq.n	8010f2c <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0xc0>
 8010ff6:	f240 60e4 	movw	r0, #1764	@ 0x6e4
 8010ffa:	4283      	cmp	r3, r0
 8010ffc:	e7ca      	b.n	8010f94 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x128>
 8010ffe:	f5b3 6f0f 	cmp.w	r3, #2288	@ 0x8f0
 8011002:	d22b      	bcs.n	801105c <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x1f0>
 8011004:	f640 00ed 	movw	r0, #2285	@ 0x8ed
 8011008:	4283      	cmp	r3, r0
 801100a:	d28f      	bcs.n	8010f2c <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0xc0>
 801100c:	f640 00e5 	movw	r0, #2277	@ 0x8e5
 8011010:	4283      	cmp	r3, r0
 8011012:	d816      	bhi.n	8011042 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x1d6>
 8011014:	f640 00e4 	movw	r0, #2276	@ 0x8e4
 8011018:	4283      	cmp	r3, r0
 801101a:	f4bf af60 	bcs.w	8010ede <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x72>
 801101e:	f240 60ec 	movw	r0, #1772	@ 0x6ec
 8011022:	4283      	cmp	r3, r0
 8011024:	d80a      	bhi.n	801103c <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x1d0>
 8011026:	f240 60eb 	movw	r0, #1771	@ 0x6eb
 801102a:	4283      	cmp	r3, r0
 801102c:	f4bf af57 	bcs.w	8010ede <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x72>
 8011030:	f240 60ea 	movw	r0, #1770	@ 0x6ea
 8011034:	4283      	cmp	r3, r0
 8011036:	f43f af79 	beq.w	8010f2c <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0xc0>
 801103a:	e7ac      	b.n	8010f96 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x12a>
 801103c:	f240 60ed 	movw	r0, #1773	@ 0x6ed
 8011040:	e7f8      	b.n	8011034 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x1c8>
 8011042:	f640 00e8 	movw	r0, #2280	@ 0x8e8
 8011046:	4283      	cmp	r3, r0
 8011048:	d802      	bhi.n	8011050 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x1e4>
 801104a:	f640 00e7 	movw	r0, #2279	@ 0x8e7
 801104e:	e798      	b.n	8010f82 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x116>
 8011050:	f640 00e9 	movw	r0, #2281	@ 0x8e9
 8011054:	4283      	cmp	r3, r0
 8011056:	f47f af42 	bne.w	8010ede <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x72>
 801105a:	e767      	b.n	8010f2c <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0xc0>
 801105c:	f640 00f6 	movw	r0, #2294	@ 0x8f6
 8011060:	4283      	cmp	r3, r0
 8011062:	f43f af63 	beq.w	8010f2c <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0xc0>
 8011066:	d802      	bhi.n	801106e <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x202>
 8011068:	f640 00f2 	movw	r0, #2290	@ 0x8f2
 801106c:	e7f2      	b.n	8011054 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x1e8>
 801106e:	f640 00fa 	movw	r0, #2298	@ 0x8fa
 8011072:	4283      	cmp	r3, r0
 8011074:	d805      	bhi.n	8011082 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x216>
 8011076:	f640 00f9 	movw	r0, #2297	@ 0x8f9
 801107a:	4283      	cmp	r3, r0
 801107c:	f4ff af2f 	bcc.w	8010ede <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x72>
 8011080:	e754      	b.n	8010f2c <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0xc0>
 8011082:	f640 00fe 	movw	r0, #2302	@ 0x8fe
 8011086:	4283      	cmp	r3, r0
 8011088:	e7af      	b.n	8010fea <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x17e>
 801108a:	f104 0c4c 	add.w	ip, r4, #76	@ 0x4c
 801108e:	4617      	mov	r7, r2
 8011090:	f102 0808 	add.w	r8, r2, #8
 8011094:	4666      	mov	r6, ip
 8011096:	6838      	ldr	r0, [r7, #0]
 8011098:	6879      	ldr	r1, [r7, #4]
 801109a:	46e6      	mov	lr, ip
 801109c:	e8ae 0003 	stmia.w	lr!, {r0, r1}
 80110a0:	3708      	adds	r7, #8
 80110a2:	4547      	cmp	r7, r8
 80110a4:	46f4      	mov	ip, lr
 80110a6:	d1f6      	bne.n	8011096 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x22a>
 80110a8:	6838      	ldr	r0, [r7, #0]
 80110aa:	f8ce 0000 	str.w	r0, [lr]
 80110ae:	88b9      	ldrh	r1, [r7, #4]
 80110b0:	f8ae 1004 	strh.w	r1, [lr, #4]
 80110b4:	f9b4 005e 	ldrsh.w	r0, [r4, #94]	@ 0x5e
 80110b8:	f510 4f00 	cmn.w	r0, #32768	@ 0x8000
 80110bc:	d009      	beq.n	80110d2 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x266>
 80110be:	7b51      	ldrb	r1, [r2, #13]
 80110c0:	7992      	ldrb	r2, [r2, #6]
 80110c2:	0149      	lsls	r1, r1, #5
 80110c4:	f401 7180 	and.w	r1, r1, #256	@ 0x100
 80110c8:	4311      	orrs	r1, r2
 80110ca:	eba0 0051 	sub.w	r0, r0, r1, lsr #1
 80110ce:	f884 0055 	strb.w	r0, [r4, #85]	@ 0x55
 80110d2:	f513 4f00 	cmn.w	r3, #32768	@ 0x8000
 80110d6:	b2ad      	uxth	r5, r5
 80110d8:	d00d      	beq.n	80110f6 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x28a>
 80110da:	442b      	add	r3, r5
 80110dc:	b29b      	uxth	r3, r3
 80110de:	f894 2059 	ldrb.w	r2, [r4, #89]	@ 0x59
 80110e2:	f884 3054 	strb.w	r3, [r4, #84]	@ 0x54
 80110e6:	10db      	asrs	r3, r3, #3
 80110e8:	f022 0260 	bic.w	r2, r2, #96	@ 0x60
 80110ec:	f003 0360 	and.w	r3, r3, #96	@ 0x60
 80110f0:	4313      	orrs	r3, r2
 80110f2:	f884 3059 	strb.w	r3, [r4, #89]	@ 0x59
 80110f6:	f894 1059 	ldrb.w	r1, [r4, #89]	@ 0x59
 80110fa:	00cb      	lsls	r3, r1, #3
 80110fc:	f403 7280 	and.w	r2, r3, #256	@ 0x100
 8011100:	f894 3054 	ldrb.w	r3, [r4, #84]	@ 0x54
 8011104:	064f      	lsls	r7, r1, #25
 8011106:	ea43 0302 	orr.w	r3, r3, r2
 801110a:	bf44      	itt	mi
 801110c:	f5a3 7300 	submi.w	r3, r3, #512	@ 0x200
 8011110:	b21b      	sxthmi	r3, r3
 8011112:	f8a4 305a 	strh.w	r3, [r4, #90]	@ 0x5a
 8011116:	1b5b      	subs	r3, r3, r5
 8011118:	f8a4 305c 	strh.w	r3, [r4, #92]	@ 0x5c
 801111c:	4632      	mov	r2, r6
 801111e:	e6fa      	b.n	8010f16 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0xaa>
 8011120:	f104 0c4c 	add.w	ip, r4, #76	@ 0x4c
 8011124:	4617      	mov	r7, r2
 8011126:	f102 0908 	add.w	r9, r2, #8
 801112a:	4666      	mov	r6, ip
 801112c:	6838      	ldr	r0, [r7, #0]
 801112e:	6879      	ldr	r1, [r7, #4]
 8011130:	46e0      	mov	r8, ip
 8011132:	e8a8 0003 	stmia.w	r8!, {r0, r1}
 8011136:	3708      	adds	r7, #8
 8011138:	454f      	cmp	r7, r9
 801113a:	46c4      	mov	ip, r8
 801113c:	d1f6      	bne.n	801112c <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x2c0>
 801113e:	6838      	ldr	r0, [r7, #0]
 8011140:	f8c8 0000 	str.w	r0, [r8]
 8011144:	88b9      	ldrh	r1, [r7, #4]
 8011146:	f8a8 1004 	strh.w	r1, [r8, #4]
 801114a:	f9b4 005e 	ldrsh.w	r0, [r4, #94]	@ 0x5e
 801114e:	f510 4f00 	cmn.w	r0, #32768	@ 0x8000
 8011152:	d009      	beq.n	8011168 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x2fc>
 8011154:	7b51      	ldrb	r1, [r2, #13]
 8011156:	7992      	ldrb	r2, [r2, #6]
 8011158:	0149      	lsls	r1, r1, #5
 801115a:	f401 7180 	and.w	r1, r1, #256	@ 0x100
 801115e:	4311      	orrs	r1, r2
 8011160:	eba0 0051 	sub.w	r0, r0, r1, lsr #1
 8011164:	f884 0055 	strb.w	r0, [r4, #85]	@ 0x55
 8011168:	f513 4f00 	cmn.w	r3, #32768	@ 0x8000
 801116c:	d00e      	beq.n	801118c <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x320>
 801116e:	eba3 030e 	sub.w	r3, r3, lr
 8011172:	f894 2059 	ldrb.w	r2, [r4, #89]	@ 0x59
 8011176:	b29b      	uxth	r3, r3
 8011178:	f884 3054 	strb.w	r3, [r4, #84]	@ 0x54
 801117c:	10db      	asrs	r3, r3, #3
 801117e:	f003 0360 	and.w	r3, r3, #96	@ 0x60
 8011182:	f022 0260 	bic.w	r2, r2, #96	@ 0x60
 8011186:	4313      	orrs	r3, r2
 8011188:	f884 3059 	strb.w	r3, [r4, #89]	@ 0x59
 801118c:	f894 1059 	ldrb.w	r1, [r4, #89]	@ 0x59
 8011190:	00cb      	lsls	r3, r1, #3
 8011192:	f403 7280 	and.w	r2, r3, #256	@ 0x100
 8011196:	f894 3054 	ldrb.w	r3, [r4, #84]	@ 0x54
 801119a:	0648      	lsls	r0, r1, #25
 801119c:	ea43 0302 	orr.w	r3, r3, r2
 80111a0:	bf44      	itt	mi
 80111a2:	f5a3 7300 	submi.w	r3, r3, #512	@ 0x200
 80111a6:	b21b      	sxthmi	r3, r3
 80111a8:	1b5d      	subs	r5, r3, r5
 80111aa:	f8a4 505c 	strh.w	r5, [r4, #92]	@ 0x5c
 80111ae:	e7b5      	b.n	801111c <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x2b0>

080111b0 <_ZN8touchgfx12TextProvider15getNextLigatureEhPKNS_4FontERPKNS_9GlyphNodeE>:
 80111b0:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 80111b4:	461e      	mov	r6, r3
 80111b6:	8ec3      	ldrh	r3, [r0, #54]	@ 0x36
 80111b8:	eb00 0343 	add.w	r3, r0, r3, lsl #1
 80111bc:	4604      	mov	r4, r0
 80111be:	4617      	mov	r7, r2
 80111c0:	f8b3 8022 	ldrh.w	r8, [r3, #34]	@ 0x22
 80111c4:	f7f8 f854 	bl	8009270 <_ZN8touchgfx12TextProvider15getNextLigatureEh>
 80111c8:	4605      	mov	r5, r0
 80111ca:	b918      	cbnz	r0, 80111d4 <_ZN8touchgfx12TextProvider15getNextLigatureEhPKNS_4FontERPKNS_9GlyphNodeE+0x24>
 80111cc:	6030      	str	r0, [r6, #0]
 80111ce:	4628      	mov	r0, r5
 80111d0:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
 80111d4:	683b      	ldr	r3, [r7, #0]
 80111d6:	4601      	mov	r1, r0
 80111d8:	68db      	ldr	r3, [r3, #12]
 80111da:	4638      	mov	r0, r7
 80111dc:	4798      	blx	r3
 80111de:	f5a8 63c0 	sub.w	r3, r8, #1536	@ 0x600
 80111e2:	f5b3 7f40 	cmp.w	r3, #768	@ 0x300
 80111e6:	4602      	mov	r2, r0
 80111e8:	6030      	str	r0, [r6, #0]
 80111ea:	d213      	bcs.n	8011214 <_ZN8touchgfx12TextProvider15getNextLigatureEhPKNS_4FontERPKNS_9GlyphNodeE+0x64>
 80111ec:	4643      	mov	r3, r8
 80111ee:	4639      	mov	r1, r7
 80111f0:	4620      	mov	r0, r4
 80111f2:	f7ff fe3b 	bl	8010e6c <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt>
 80111f6:	6030      	str	r0, [r6, #0]
 80111f8:	6833      	ldr	r3, [r6, #0]
 80111fa:	b143      	cbz	r3, 801120e <_ZN8touchgfx12TextProvider15getNextLigatureEhPKNS_4FontERPKNS_9GlyphNodeE+0x5e>
 80111fc:	7b5a      	ldrb	r2, [r3, #13]
 80111fe:	7a9b      	ldrb	r3, [r3, #10]
 8011200:	0052      	lsls	r2, r2, #1
 8011202:	f402 7280 	and.w	r2, r2, #256	@ 0x100
 8011206:	4313      	orrs	r3, r2
 8011208:	bf0c      	ite	eq
 801120a:	2301      	moveq	r3, #1
 801120c:	2300      	movne	r3, #0
 801120e:	f884 3061 	strb.w	r3, [r4, #97]	@ 0x61
 8011212:	e7dc      	b.n	80111ce <_ZN8touchgfx12TextProvider15getNextLigatureEhPKNS_4FontERPKNS_9GlyphNodeE+0x1e>
 8011214:	f5a5 6360 	sub.w	r3, r5, #3584	@ 0xe00
 8011218:	b29b      	uxth	r3, r3
 801121a:	2b7f      	cmp	r3, #127	@ 0x7f
 801121c:	d804      	bhi.n	8011228 <_ZN8touchgfx12TextProvider15getNextLigatureEhPKNS_4FontERPKNS_9GlyphNodeE+0x78>
 801121e:	4639      	mov	r1, r7
 8011220:	4620      	mov	r0, r4
 8011222:	f7ff fced 	bl	8010c00 <_ZN8touchgfx12TextProvider15adjustThaiGlyphEPKNS_4FontEPKNS_9GlyphNodeE>
 8011226:	e7e6      	b.n	80111f6 <_ZN8touchgfx12TextProvider15getNextLigatureEhPKNS_4FontERPKNS_9GlyphNodeE+0x46>
 8011228:	f894 3061 	ldrb.w	r3, [r4, #97]	@ 0x61
 801122c:	2b00      	cmp	r3, #0
 801122e:	d0e3      	beq.n	80111f8 <_ZN8touchgfx12TextProvider15getNextLigatureEhPKNS_4FontERPKNS_9GlyphNodeE+0x48>
 8011230:	f640 1302 	movw	r3, #2306	@ 0x902
 8011234:	429d      	cmp	r5, r3
 8011236:	d1df      	bne.n	80111f8 <_ZN8touchgfx12TextProvider15getNextLigatureEhPKNS_4FontERPKNS_9GlyphNodeE+0x48>
 8011238:	4601      	mov	r1, r0
 801123a:	4620      	mov	r0, r4
 801123c:	f7ff fcb1 	bl	8010ba2 <_ZN8touchgfx12TextProvider16adjustHindiGlyphEPKNS_9GlyphNodeE>
 8011240:	e7d9      	b.n	80111f6 <_ZN8touchgfx12TextProvider15getNextLigatureEhPKNS_4FontERPKNS_9GlyphNodeE+0x46>

08011242 <_ZN8touchgfx12TextProvider15getNextLigatureEhPKNS_4FontERPKNS_9GlyphNodeERPKhRh>:
 8011242:	e92d 43f8 	stmdb	sp!, {r3, r4, r5, r6, r7, r8, r9, lr}
 8011246:	461e      	mov	r6, r3
 8011248:	8ec3      	ldrh	r3, [r0, #54]	@ 0x36
 801124a:	eb00 0343 	add.w	r3, r0, r3, lsl #1
 801124e:	4604      	mov	r4, r0
 8011250:	4617      	mov	r7, r2
 8011252:	f8b3 8022 	ldrh.w	r8, [r3, #34]	@ 0x22
 8011256:	f7f8 f80b 	bl	8009270 <_ZN8touchgfx12TextProvider15getNextLigatureEh>
 801125a:	4605      	mov	r5, r0
 801125c:	b918      	cbnz	r0, 8011266 <_ZN8touchgfx12TextProvider15getNextLigatureEhPKNS_4FontERPKNS_9GlyphNodeERPKhRh+0x24>
 801125e:	6030      	str	r0, [r6, #0]
 8011260:	4628      	mov	r0, r5
 8011262:	e8bd 83f8 	ldmia.w	sp!, {r3, r4, r5, r6, r7, r8, r9, pc}
 8011266:	683b      	ldr	r3, [r7, #0]
 8011268:	4601      	mov	r1, r0
 801126a:	f8d3 9008 	ldr.w	r9, [r3, #8]
 801126e:	4638      	mov	r0, r7
 8011270:	e9dd 2308 	ldrd	r2, r3, [sp, #32]
 8011274:	47c8      	blx	r9
 8011276:	f5a8 63c0 	sub.w	r3, r8, #1536	@ 0x600
 801127a:	f5b3 7f40 	cmp.w	r3, #768	@ 0x300
 801127e:	4602      	mov	r2, r0
 8011280:	6030      	str	r0, [r6, #0]
 8011282:	d213      	bcs.n	80112ac <_ZN8touchgfx12TextProvider15getNextLigatureEhPKNS_4FontERPKNS_9GlyphNodeERPKhRh+0x6a>
 8011284:	4643      	mov	r3, r8
 8011286:	4639      	mov	r1, r7
 8011288:	4620      	mov	r0, r4
 801128a:	f7ff fdef 	bl	8010e6c <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt>
 801128e:	6030      	str	r0, [r6, #0]
 8011290:	6833      	ldr	r3, [r6, #0]
 8011292:	b143      	cbz	r3, 80112a6 <_ZN8touchgfx12TextProvider15getNextLigatureEhPKNS_4FontERPKNS_9GlyphNodeERPKhRh+0x64>
 8011294:	7b5a      	ldrb	r2, [r3, #13]
 8011296:	7a9b      	ldrb	r3, [r3, #10]
 8011298:	0052      	lsls	r2, r2, #1
 801129a:	f402 7280 	and.w	r2, r2, #256	@ 0x100
 801129e:	4313      	orrs	r3, r2
 80112a0:	bf0c      	ite	eq
 80112a2:	2301      	moveq	r3, #1
 80112a4:	2300      	movne	r3, #0
 80112a6:	f884 3061 	strb.w	r3, [r4, #97]	@ 0x61
 80112aa:	e7d9      	b.n	8011260 <_ZN8touchgfx12TextProvider15getNextLigatureEhPKNS_4FontERPKNS_9GlyphNodeERPKhRh+0x1e>
 80112ac:	f5a5 6360 	sub.w	r3, r5, #3584	@ 0xe00
 80112b0:	b29b      	uxth	r3, r3
 80112b2:	2b7f      	cmp	r3, #127	@ 0x7f
 80112b4:	d804      	bhi.n	80112c0 <_ZN8touchgfx12TextProvider15getNextLigatureEhPKNS_4FontERPKNS_9GlyphNodeERPKhRh+0x7e>
 80112b6:	4639      	mov	r1, r7
 80112b8:	4620      	mov	r0, r4
 80112ba:	f7ff fca1 	bl	8010c00 <_ZN8touchgfx12TextProvider15adjustThaiGlyphEPKNS_4FontEPKNS_9GlyphNodeE>
 80112be:	e7e6      	b.n	801128e <_ZN8touchgfx12TextProvider15getNextLigatureEhPKNS_4FontERPKNS_9GlyphNodeERPKhRh+0x4c>
 80112c0:	f894 3061 	ldrb.w	r3, [r4, #97]	@ 0x61
 80112c4:	2b00      	cmp	r3, #0
 80112c6:	d0e3      	beq.n	8011290 <_ZN8touchgfx12TextProvider15getNextLigatureEhPKNS_4FontERPKNS_9GlyphNodeERPKhRh+0x4e>
 80112c8:	f640 1302 	movw	r3, #2306	@ 0x902
 80112cc:	429d      	cmp	r5, r3
 80112ce:	d1df      	bne.n	8011290 <_ZN8touchgfx12TextProvider15getNextLigatureEhPKNS_4FontERPKNS_9GlyphNodeERPKhRh+0x4e>
 80112d0:	4601      	mov	r1, r0
 80112d2:	4620      	mov	r0, r4
 80112d4:	f7ff fc65 	bl	8010ba2 <_ZN8touchgfx12TextProvider16adjustHindiGlyphEPKNS_9GlyphNodeE>
 80112d8:	e7d9      	b.n	801128e <_ZN8touchgfx12TextProvider15getNextLigatureEhPKNS_4FontERPKNS_9GlyphNodeERPKhRh+0x4c>

080112da <_ZN8touchgfx12TextProvider15fillInputBufferEv>:
 80112da:	b510      	push	{r4, lr}
 80112dc:	4604      	mov	r4, r0
 80112de:	f8b4 1040 	ldrh.w	r1, [r4, #64]	@ 0x40
 80112e2:	8f23      	ldrh	r3, [r4, #56]	@ 0x38
 80112e4:	b1f1      	cbz	r1, 8011324 <_ZN8touchgfx12TextProvider15fillInputBufferEv+0x4a>
 80112e6:	2b0a      	cmp	r3, #10
 80112e8:	d02f      	beq.n	801134a <_ZN8touchgfx12TextProvider15fillInputBufferEv+0x70>
 80112ea:	8fe2      	ldrh	r2, [r4, #62]	@ 0x3e
 80112ec:	eb04 0042 	add.w	r0, r4, r2, lsl #1
 80112f0:	3901      	subs	r1, #1
 80112f2:	8f40      	ldrh	r0, [r0, #58]	@ 0x3a
 80112f4:	f8a4 1040 	strh.w	r1, [r4, #64]	@ 0x40
 80112f8:	1c51      	adds	r1, r2, #1
 80112fa:	b289      	uxth	r1, r1
 80112fc:	2901      	cmp	r1, #1
 80112fe:	bf84      	itt	hi
 8011300:	f102 32ff 	addhi.w	r2, r2, #4294967295
 8011304:	87e2      	strhhi	r2, [r4, #62]	@ 0x3e
 8011306:	f103 0201 	add.w	r2, r3, #1
 801130a:	8722      	strh	r2, [r4, #56]	@ 0x38
 801130c:	8ee2      	ldrh	r2, [r4, #54]	@ 0x36
 801130e:	bf98      	it	ls
 8011310:	87e1      	strhls	r1, [r4, #62]	@ 0x3e
 8011312:	4413      	add	r3, r2
 8011314:	b29b      	uxth	r3, r3
 8011316:	2b09      	cmp	r3, #9
 8011318:	bf88      	it	hi
 801131a:	3b0a      	subhi	r3, #10
 801131c:	eb04 0343 	add.w	r3, r4, r3, lsl #1
 8011320:	8458      	strh	r0, [r3, #34]	@ 0x22
 8011322:	e7dc      	b.n	80112de <_ZN8touchgfx12TextProvider15fillInputBufferEv+0x4>
 8011324:	8f23      	ldrh	r3, [r4, #56]	@ 0x38
 8011326:	2b0a      	cmp	r3, #10
 8011328:	d00f      	beq.n	801134a <_ZN8touchgfx12TextProvider15fillInputBufferEv+0x70>
 801132a:	4620      	mov	r0, r4
 801132c:	f7ff fbe7 	bl	8010afe <_ZN8touchgfx12TextProvider19getNextCharInternalEv>
 8011330:	8f23      	ldrh	r3, [r4, #56]	@ 0x38
 8011332:	1c5a      	adds	r2, r3, #1
 8011334:	8722      	strh	r2, [r4, #56]	@ 0x38
 8011336:	8ee2      	ldrh	r2, [r4, #54]	@ 0x36
 8011338:	4413      	add	r3, r2
 801133a:	b29b      	uxth	r3, r3
 801133c:	2b09      	cmp	r3, #9
 801133e:	bf88      	it	hi
 8011340:	3b0a      	subhi	r3, #10
 8011342:	eb04 0343 	add.w	r3, r4, r3, lsl #1
 8011346:	8458      	strh	r0, [r3, #34]	@ 0x22
 8011348:	e7ec      	b.n	8011324 <_ZN8touchgfx12TextProvider15fillInputBufferEv+0x4a>
 801134a:	bd10      	pop	{r4, pc}

0801134c <_ZN8touchgfx12TextProvider11getNextCharEv>:
 801134c:	b538      	push	{r3, r4, r5, lr}
 801134e:	8ec3      	ldrh	r3, [r0, #54]	@ 0x36
 8011350:	eb00 0243 	add.w	r2, r0, r3, lsl #1
 8011354:	4604      	mov	r4, r0
 8011356:	8c55      	ldrh	r5, [r2, #34]	@ 0x22
 8011358:	8f02      	ldrh	r2, [r0, #56]	@ 0x38
 801135a:	3a01      	subs	r2, #1
 801135c:	8702      	strh	r2, [r0, #56]	@ 0x38
 801135e:	1c5a      	adds	r2, r3, #1
 8011360:	b292      	uxth	r2, r2
 8011362:	2a09      	cmp	r2, #9
 8011364:	bf86      	itte	hi
 8011366:	3b09      	subhi	r3, #9
 8011368:	86c3      	strhhi	r3, [r0, #54]	@ 0x36
 801136a:	86c2      	strhls	r2, [r0, #54]	@ 0x36
 801136c:	f7ff ffb5 	bl	80112da <_ZN8touchgfx12TextProvider15fillInputBufferEv>
 8011370:	8c23      	ldrh	r3, [r4, #32]
 8011372:	2b01      	cmp	r3, #1
 8011374:	bf9c      	itt	ls
 8011376:	3301      	addls	r3, #1
 8011378:	8423      	strhls	r3, [r4, #32]
 801137a:	8be3      	ldrh	r3, [r4, #30]
 801137c:	b90b      	cbnz	r3, 8011382 <_ZN8touchgfx12TextProvider11getNextCharEv+0x36>
 801137e:	2302      	movs	r3, #2
 8011380:	83e3      	strh	r3, [r4, #30]
 8011382:	8be3      	ldrh	r3, [r4, #30]
 8011384:	3b01      	subs	r3, #1
 8011386:	b29b      	uxth	r3, r3
 8011388:	83e3      	strh	r3, [r4, #30]
 801138a:	eb04 0443 	add.w	r4, r4, r3, lsl #1
 801138e:	4628      	mov	r0, r5
 8011390:	8365      	strh	r5, [r4, #26]
 8011392:	bd38      	pop	{r3, r4, r5, pc}

08011394 <_ZN8touchgfx12TextProvider22replaceInputCharactersEttPKt>:
 8011394:	428a      	cmp	r2, r1
 8011396:	e92d 47f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
 801139a:	8ec7      	ldrh	r7, [r0, #54]	@ 0x36
 801139c:	d931      	bls.n	8011402 <_ZN8touchgfx12TextProvider22replaceInputCharactersEttPKt+0x6e>
 801139e:	8f05      	ldrh	r5, [r0, #56]	@ 0x38
 80113a0:	f8b0 8040 	ldrh.w	r8, [r0, #64]	@ 0x40
 80113a4:	f8b0 c03e 	ldrh.w	ip, [r0, #62]	@ 0x3e
 80113a8:	19ee      	adds	r6, r5, r7
 80113aa:	1a54      	subs	r4, r2, r1
 80113ac:	3e01      	subs	r6, #1
 80113ae:	fa1f fe84 	uxth.w	lr, r4
 80113b2:	b2b4      	uxth	r4, r6
 80113b4:	eba4 090e 	sub.w	r9, r4, lr
 80113b8:	fa1f f989 	uxth.w	r9, r9
 80113bc:	2c09      	cmp	r4, #9
 80113be:	4626      	mov	r6, r4
 80113c0:	bf88      	it	hi
 80113c2:	f1a4 060a 	subhi.w	r6, r4, #10
 80113c6:	f1bc 0f00 	cmp.w	ip, #0
 80113ca:	bf08      	it	eq
 80113cc:	f04f 0c02 	moveq.w	ip, #2
 80113d0:	eb00 0646 	add.w	r6, r0, r6, lsl #1
 80113d4:	f10c 3cff 	add.w	ip, ip, #4294967295
 80113d8:	fa1f fc8c 	uxth.w	ip, ip
 80113dc:	3c01      	subs	r4, #1
 80113de:	f8b6 a022 	ldrh.w	sl, [r6, #34]	@ 0x22
 80113e2:	b2a4      	uxth	r4, r4
 80113e4:	eb00 064c 	add.w	r6, r0, ip, lsl #1
 80113e8:	454c      	cmp	r4, r9
 80113ea:	f8a6 a03a 	strh.w	sl, [r6, #58]	@ 0x3a
 80113ee:	d1e5      	bne.n	80113bc <_ZN8touchgfx12TextProvider22replaceInputCharactersEttPKt+0x28>
 80113f0:	eba5 050e 	sub.w	r5, r5, lr
 80113f4:	eb0e 0408 	add.w	r4, lr, r8
 80113f8:	8705      	strh	r5, [r0, #56]	@ 0x38
 80113fa:	f8a0 4040 	strh.w	r4, [r0, #64]	@ 0x40
 80113fe:	f8a0 c03e 	strh.w	ip, [r0, #62]	@ 0x3e
 8011402:	8f04      	ldrh	r4, [r0, #56]	@ 0x38
 8011404:	1a64      	subs	r4, r4, r1
 8011406:	4439      	add	r1, r7
 8011408:	b289      	uxth	r1, r1
 801140a:	2909      	cmp	r1, #9
 801140c:	bf88      	it	hi
 801140e:	390a      	subhi	r1, #10
 8011410:	8704      	strh	r4, [r0, #56]	@ 0x38
 8011412:	86c1      	strh	r1, [r0, #54]	@ 0x36
 8011414:	250a      	movs	r5, #10
 8011416:	b18a      	cbz	r2, 801143c <_ZN8touchgfx12TextProvider22replaceInputCharactersEttPKt+0xa8>
 8011418:	8f01      	ldrh	r1, [r0, #56]	@ 0x38
 801141a:	3a01      	subs	r2, #1
 801141c:	b292      	uxth	r2, r2
 801141e:	3101      	adds	r1, #1
 8011420:	f833 4012 	ldrh.w	r4, [r3, r2, lsl #1]
 8011424:	8701      	strh	r1, [r0, #56]	@ 0x38
 8011426:	8ec1      	ldrh	r1, [r0, #54]	@ 0x36
 8011428:	b901      	cbnz	r1, 801142c <_ZN8touchgfx12TextProvider22replaceInputCharactersEttPKt+0x98>
 801142a:	86c5      	strh	r5, [r0, #54]	@ 0x36
 801142c:	8ec1      	ldrh	r1, [r0, #54]	@ 0x36
 801142e:	3901      	subs	r1, #1
 8011430:	b289      	uxth	r1, r1
 8011432:	86c1      	strh	r1, [r0, #54]	@ 0x36
 8011434:	eb00 0141 	add.w	r1, r0, r1, lsl #1
 8011438:	844c      	strh	r4, [r1, #34]	@ 0x22
 801143a:	e7ec      	b.n	8011416 <_ZN8touchgfx12TextProvider22replaceInputCharactersEttPKt+0x82>
 801143c:	e8bd 47f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
 8011440:	f7ff bf4b 	b.w	80112da <_ZN8touchgfx12TextProvider15fillInputBufferEv>

08011444 <_ZN8touchgfx12TextProvider13gsubRuleMatchEPKtttt>:
 8011444:	b570      	push	{r4, r5, r6, lr}
 8011446:	2500      	movs	r5, #0
 8011448:	4295      	cmp	r5, r2
 801144a:	d011      	beq.n	8011470 <_ZN8touchgfx12TextProvider13gsubRuleMatchEPKtttt+0x2c>
 801144c:	8bc4      	ldrh	r4, [r0, #30]
 801144e:	f831 6b02 	ldrh.w	r6, [r1], #2
 8011452:	4414      	add	r4, r2
 8011454:	3c01      	subs	r4, #1
 8011456:	1b64      	subs	r4, r4, r5
 8011458:	b2a4      	uxth	r4, r4
 801145a:	2c01      	cmp	r4, #1
 801145c:	bf88      	it	hi
 801145e:	3c02      	subhi	r4, #2
 8011460:	eb00 0444 	add.w	r4, r0, r4, lsl #1
 8011464:	8b64      	ldrh	r4, [r4, #26]
 8011466:	42b4      	cmp	r4, r6
 8011468:	d117      	bne.n	801149a <_ZN8touchgfx12TextProvider13gsubRuleMatchEPKtttt+0x56>
 801146a:	3501      	adds	r5, #1
 801146c:	b2ad      	uxth	r5, r5
 801146e:	e7eb      	b.n	8011448 <_ZN8touchgfx12TextProvider13gsubRuleMatchEPKtttt+0x4>
 8011470:	f8bd 2010 	ldrh.w	r2, [sp, #16]
 8011474:	2400      	movs	r4, #0
 8011476:	4413      	add	r3, r2
 8011478:	b2a2      	uxth	r2, r4
 801147a:	429a      	cmp	r2, r3
 801147c:	da0f      	bge.n	801149e <_ZN8touchgfx12TextProvider13gsubRuleMatchEPKtttt+0x5a>
 801147e:	8ec6      	ldrh	r6, [r0, #54]	@ 0x36
 8011480:	f831 5014 	ldrh.w	r5, [r1, r4, lsl #1]
 8011484:	4432      	add	r2, r6
 8011486:	b292      	uxth	r2, r2
 8011488:	2a09      	cmp	r2, #9
 801148a:	bf88      	it	hi
 801148c:	3a0a      	subhi	r2, #10
 801148e:	eb00 0242 	add.w	r2, r0, r2, lsl #1
 8011492:	3401      	adds	r4, #1
 8011494:	8c52      	ldrh	r2, [r2, #34]	@ 0x22
 8011496:	42aa      	cmp	r2, r5
 8011498:	d0ee      	beq.n	8011478 <_ZN8touchgfx12TextProvider13gsubRuleMatchEPKtttt+0x34>
 801149a:	2000      	movs	r0, #0
 801149c:	bd70      	pop	{r4, r5, r6, pc}
 801149e:	2001      	movs	r0, #1
 80114a0:	e7fc      	b.n	801149c <_ZN8touchgfx12TextProvider13gsubRuleMatchEPKtttt+0x58>

080114a2 <_ZN8touchgfx12TextProvider14applyGsubRulesEPKtt>:
 80114a2:	e92d 4ff7 	stmdb	sp!, {r0, r1, r2, r4, r5, r6, r7, r8, r9, sl, fp, lr}
 80114a6:	4605      	mov	r5, r0
 80114a8:	4616      	mov	r6, r2
 80114aa:	1c8c      	adds	r4, r1, #2
 80114ac:	8809      	ldrh	r1, [r1, #0]
 80114ae:	ea4f 3a11 	mov.w	sl, r1, lsr #12
 80114b2:	f834 301a 	ldrh.w	r3, [r4, sl, lsl #1]
 80114b6:	42b3      	cmp	r3, r6
 80114b8:	d124      	bne.n	8011504 <_ZN8touchgfx12TextProvider14applyGsubRulesEPKtt+0x62>
 80114ba:	f3c1 2903 	ubfx	r9, r1, #8, #4
 80114be:	f3c1 1803 	ubfx	r8, r1, #4, #4
 80114c2:	f001 070f 	and.w	r7, r1, #15
 80114c6:	f8cd 8000 	str.w	r8, [sp]
 80114ca:	464b      	mov	r3, r9
 80114cc:	4652      	mov	r2, sl
 80114ce:	4621      	mov	r1, r4
 80114d0:	4628      	mov	r0, r5
 80114d2:	f7ff ffb7 	bl	8011444 <_ZN8touchgfx12TextProvider13gsubRuleMatchEPKtttt>
 80114d6:	4683      	mov	fp, r0
 80114d8:	b168      	cbz	r0, 80114f6 <_ZN8touchgfx12TextProvider14applyGsubRulesEPKtt+0x54>
 80114da:	eb0a 0109 	add.w	r1, sl, r9
 80114de:	4441      	add	r1, r8
 80114e0:	eb04 0341 	add.w	r3, r4, r1, lsl #1
 80114e4:	463a      	mov	r2, r7
 80114e6:	4649      	mov	r1, r9
 80114e8:	4628      	mov	r0, r5
 80114ea:	f7ff ff53 	bl	8011394 <_ZN8touchgfx12TextProvider22replaceInputCharactersEttPKt>
 80114ee:	4658      	mov	r0, fp
 80114f0:	b003      	add	sp, #12
 80114f2:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 80114f6:	eb07 010a 	add.w	r1, r7, sl
 80114fa:	4449      	add	r1, r9
 80114fc:	4441      	add	r1, r8
 80114fe:	eb04 0141 	add.w	r1, r4, r1, lsl #1
 8011502:	e7d2      	b.n	80114aa <_ZN8touchgfx12TextProvider14applyGsubRulesEPKtt+0x8>
 8011504:	f04f 0b00 	mov.w	fp, #0
 8011508:	e7f1      	b.n	80114ee <_ZN8touchgfx12TextProvider14applyGsubRulesEPKtt+0x4c>

0801150a <_ZNK8touchgfx12TextProvider21gsubTableBinarySearchEtPKtt>:
 801150a:	b570      	push	{r4, r5, r6, lr}
 801150c:	8810      	ldrh	r0, [r2, #0]
 801150e:	4298      	cmp	r0, r3
 8011510:	d817      	bhi.n	8011542 <_ZNK8touchgfx12TextProvider21gsubTableBinarySearchEtPKtt+0x38>
 8011512:	1e48      	subs	r0, r1, #1
 8011514:	f832 0020 	ldrh.w	r0, [r2, r0, lsl #2]
 8011518:	4298      	cmp	r0, r3
 801151a:	d312      	bcc.n	8011542 <_ZNK8touchgfx12TextProvider21gsubTableBinarySearchEtPKtt+0x38>
 801151c:	2400      	movs	r4, #0
 801151e:	428c      	cmp	r4, r1
 8011520:	d20f      	bcs.n	8011542 <_ZNK8touchgfx12TextProvider21gsubTableBinarySearchEtPKtt+0x38>
 8011522:	1860      	adds	r0, r4, r1
 8011524:	1040      	asrs	r0, r0, #1
 8011526:	0085      	lsls	r5, r0, #2
 8011528:	f832 6020 	ldrh.w	r6, [r2, r0, lsl #2]
 801152c:	42b3      	cmp	r3, r6
 801152e:	d902      	bls.n	8011536 <_ZNK8touchgfx12TextProvider21gsubTableBinarySearchEtPKtt+0x2c>
 8011530:	3001      	adds	r0, #1
 8011532:	b284      	uxth	r4, r0
 8011534:	e7f3      	b.n	801151e <_ZNK8touchgfx12TextProvider21gsubTableBinarySearchEtPKtt+0x14>
 8011536:	d201      	bcs.n	801153c <_ZNK8touchgfx12TextProvider21gsubTableBinarySearchEtPKtt+0x32>
 8011538:	b281      	uxth	r1, r0
 801153a:	e7f0      	b.n	801151e <_ZNK8touchgfx12TextProvider21gsubTableBinarySearchEtPKtt+0x14>
 801153c:	442a      	add	r2, r5
 801153e:	8850      	ldrh	r0, [r2, #2]
 8011540:	bd70      	pop	{r4, r5, r6, pc}
 8011542:	2000      	movs	r0, #0
 8011544:	e7fc      	b.n	8011540 <_ZNK8touchgfx12TextProvider21gsubTableBinarySearchEtPKtt+0x36>

08011546 <_ZN8touchgfx12TextProvider16substituteGlyphsEv>:
 8011546:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 801154a:	6c45      	ldr	r5, [r0, #68]	@ 0x44
 801154c:	886f      	ldrh	r7, [r5, #2]
 801154e:	4604      	mov	r4, r0
 8011550:	087f      	lsrs	r7, r7, #1
 8011552:	260b      	movs	r6, #11
 8011554:	3e01      	subs	r6, #1
 8011556:	d013      	beq.n	8011580 <_ZN8touchgfx12TextProvider16substituteGlyphsEv+0x3a>
 8011558:	8ee3      	ldrh	r3, [r4, #54]	@ 0x36
 801155a:	eb04 0343 	add.w	r3, r4, r3, lsl #1
 801155e:	462a      	mov	r2, r5
 8011560:	f8b3 8022 	ldrh.w	r8, [r3, #34]	@ 0x22
 8011564:	4639      	mov	r1, r7
 8011566:	4643      	mov	r3, r8
 8011568:	4620      	mov	r0, r4
 801156a:	f7ff ffce 	bl	801150a <_ZNK8touchgfx12TextProvider21gsubTableBinarySearchEtPKtt>
 801156e:	b138      	cbz	r0, 8011580 <_ZN8touchgfx12TextProvider16substituteGlyphsEv+0x3a>
 8011570:	eb05 0140 	add.w	r1, r5, r0, lsl #1
 8011574:	4642      	mov	r2, r8
 8011576:	4620      	mov	r0, r4
 8011578:	f7ff ff93 	bl	80114a2 <_ZN8touchgfx12TextProvider14applyGsubRulesEPKtt>
 801157c:	2800      	cmp	r0, #0
 801157e:	d1e9      	bne.n	8011554 <_ZN8touchgfx12TextProvider16substituteGlyphsEv+0xe>
 8011580:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}

08011584 <_ZN8touchgfx9GradientsC1EPKNS_7Point3DE>:
 8011584:	b570      	push	{r4, r5, r6, lr}
 8011586:	694a      	ldr	r2, [r1, #20]
 8011588:	6a8d      	ldr	r5, [r1, #40]	@ 0x28
 801158a:	684b      	ldr	r3, [r1, #4]
 801158c:	6ace      	ldr	r6, [r1, #44]	@ 0x2c
 801158e:	1b54      	subs	r4, r2, r5
 8011590:	f000 8106 	beq.w	80117a0 <_ZN8touchgfx9GradientsC1EPKNS_7Point3DE+0x21c>
 8011594:	1b9b      	subs	r3, r3, r6
 8011596:	d003      	beq.n	80115a0 <_ZN8touchgfx9GradientsC1EPKNS_7Point3DE+0x1c>
 8011598:	4363      	muls	r3, r4
 801159a:	2210      	movs	r2, #16
 801159c:	fb93 f3f2 	sdiv	r3, r3, r2
 80115a0:	680c      	ldr	r4, [r1, #0]
 80115a2:	698a      	ldr	r2, [r1, #24]
 80115a4:	1b65      	subs	r5, r4, r5
 80115a6:	f000 80fd 	beq.w	80117a4 <_ZN8touchgfx9GradientsC1EPKNS_7Point3DE+0x220>
 80115aa:	1b92      	subs	r2, r2, r6
 80115ac:	d003      	beq.n	80115b6 <_ZN8touchgfx9GradientsC1EPKNS_7Point3DE+0x32>
 80115ae:	436a      	muls	r2, r5
 80115b0:	2410      	movs	r4, #16
 80115b2:	fb92 f2f4 	sdiv	r2, r2, r4
 80115b6:	1a9b      	subs	r3, r3, r2
 80115b8:	ee07 3a90 	vmov	s15, r3
 80115bc:	ed9f 4a88 	vldr	s8, [pc, #544]	@ 80117e0 <_ZN8touchgfx9GradientsC1EPKNS_7Point3DE+0x25c>
 80115c0:	eef8 7ae7 	vcvt.f32.s32	s15, s15
 80115c4:	eeb7 7a00 	vmov.f32	s14, #112	@ 0x3f800000  1.0
 80115c8:	ee67 7a84 	vmul.f32	s15, s15, s8
 80115cc:	460a      	mov	r2, r1
 80115ce:	ee87 3a27 	vdiv.f32	s6, s14, s15
 80115d2:	4603      	mov	r3, r0
 80115d4:	f100 040c 	add.w	r4, r0, #12
 80115d8:	eeb1 6a43 	vneg.f32	s12, s6
 80115dc:	edd2 7a02 	vldr	s15, [r2, #8]
 80115e0:	eec7 6a27 	vdiv.f32	s13, s14, s15
 80115e4:	3214      	adds	r2, #20
 80115e6:	ece3 6a01 	vstmia	r3!, {s13}
 80115ea:	ed52 7a02 	vldr	s15, [r2, #-8]
 80115ee:	ee67 7aa6 	vmul.f32	s15, s15, s13
 80115f2:	429c      	cmp	r4, r3
 80115f4:	edc3 7a02 	vstr	s15, [r3, #8]
 80115f8:	ed52 7a01 	vldr	s15, [r2, #-4]
 80115fc:	ee67 7aa6 	vmul.f32	s15, s15, s13
 8011600:	edc3 7a05 	vstr	s15, [r3, #20]
 8011604:	d1ea      	bne.n	80115dc <_ZN8touchgfx9GradientsC1EPKNS_7Point3DE+0x58>
 8011606:	6aca      	ldr	r2, [r1, #44]	@ 0x2c
 8011608:	698b      	ldr	r3, [r1, #24]
 801160a:	edd0 4a02 	vldr	s9, [r0, #8]
 801160e:	edd0 3a00 	vldr	s7, [r0]
 8011612:	edd0 6a01 	vldr	s13, [r0, #4]
 8011616:	ed90 5a05 	vldr	s10, [r0, #20]
 801161a:	ed90 2a03 	vldr	s4, [r0, #12]
 801161e:	edd0 5a04 	vldr	s11, [r0, #16]
 8011622:	ed90 1a07 	vldr	s2, [r0, #28]
 8011626:	edd0 2a06 	vldr	s5, [r0, #24]
 801162a:	1a9b      	subs	r3, r3, r2
 801162c:	ee07 3a90 	vmov	s15, r3
 8011630:	684b      	ldr	r3, [r1, #4]
 8011632:	1a9b      	subs	r3, r3, r2
 8011634:	ee07 3a10 	vmov	s14, r3
 8011638:	eef8 7ae7 	vcvt.f32.s32	s15, s15
 801163c:	ee76 6ae4 	vsub.f32	s13, s13, s9
 8011640:	ee67 7a84 	vmul.f32	s15, s15, s8
 8011644:	ee73 4ae4 	vsub.f32	s9, s7, s9
 8011648:	eeb8 7ac7 	vcvt.f32.s32	s14, s14
 801164c:	ee64 7ae7 	vnmul.f32	s15, s9, s15
 8011650:	ee27 7a04 	vmul.f32	s14, s14, s8
 8011654:	ee75 5ac5 	vsub.f32	s11, s11, s10
 8011658:	eee6 7a87 	vfma.f32	s15, s13, s14
 801165c:	ee32 5a45 	vsub.f32	s10, s4, s10
 8011660:	ee67 7a83 	vmul.f32	s15, s15, s6
 8011664:	edc0 7a09 	vstr	s15, [r0, #36]	@ 0x24
 8011668:	6a8c      	ldr	r4, [r1, #40]	@ 0x28
 801166a:	694a      	ldr	r2, [r1, #20]
 801166c:	1b13      	subs	r3, r2, r4
 801166e:	ee07 3a10 	vmov	s14, r3
 8011672:	eeb8 7ac7 	vcvt.f32.s32	s14, s14
 8011676:	680b      	ldr	r3, [r1, #0]
 8011678:	ee27 7a04 	vmul.f32	s14, s14, s8
 801167c:	1b1b      	subs	r3, r3, r4
 801167e:	ee64 4ac7 	vnmul.f32	s9, s9, s14
 8011682:	ee07 3a10 	vmov	s14, r3
 8011686:	eeb8 7ac7 	vcvt.f32.s32	s14, s14
 801168a:	ee27 7a04 	vmul.f32	s14, s14, s8
 801168e:	eee6 4a87 	vfma.f32	s9, s13, s14
 8011692:	ee64 4a86 	vmul.f32	s9, s9, s12
 8011696:	edc0 4a0a 	vstr	s9, [r0, #40]	@ 0x28
 801169a:	6aca      	ldr	r2, [r1, #44]	@ 0x2c
 801169c:	698b      	ldr	r3, [r1, #24]
 801169e:	1a9b      	subs	r3, r3, r2
 80116a0:	ee06 3a90 	vmov	s13, r3
 80116a4:	684b      	ldr	r3, [r1, #4]
 80116a6:	1a9b      	subs	r3, r3, r2
 80116a8:	ee07 3a10 	vmov	s14, r3
 80116ac:	eef8 6ae6 	vcvt.f32.s32	s13, s13
 80116b0:	eeb8 7ac7 	vcvt.f32.s32	s14, s14
 80116b4:	ee66 6a84 	vmul.f32	s13, s13, s8
 80116b8:	ee27 7a04 	vmul.f32	s14, s14, s8
 80116bc:	ee65 6a66 	vnmul.f32	s13, s10, s13
 80116c0:	eee5 6a87 	vfma.f32	s13, s11, s14
 80116c4:	ee66 6a83 	vmul.f32	s13, s13, s6
 80116c8:	edc0 6a0b 	vstr	s13, [r0, #44]	@ 0x2c
 80116cc:	6a8c      	ldr	r4, [r1, #40]	@ 0x28
 80116ce:	694a      	ldr	r2, [r1, #20]
 80116d0:	1b13      	subs	r3, r2, r4
 80116d2:	ee07 3a10 	vmov	s14, r3
 80116d6:	eeb8 7ac7 	vcvt.f32.s32	s14, s14
 80116da:	680b      	ldr	r3, [r1, #0]
 80116dc:	ee27 7a04 	vmul.f32	s14, s14, s8
 80116e0:	1b1b      	subs	r3, r3, r4
 80116e2:	ee25 5a47 	vnmul.f32	s10, s10, s14
 80116e6:	ee07 3a10 	vmov	s14, r3
 80116ea:	eeb8 7ac7 	vcvt.f32.s32	s14, s14
 80116ee:	ee27 7a04 	vmul.f32	s14, s14, s8
 80116f2:	eea5 5a87 	vfma.f32	s10, s11, s14
 80116f6:	edd0 5a08 	vldr	s11, [r0, #32]
 80116fa:	ee25 5a06 	vmul.f32	s10, s10, s12
 80116fe:	ee31 1a65 	vsub.f32	s2, s2, s11
 8011702:	ed80 5a0c 	vstr	s10, [r0, #48]	@ 0x30
 8011706:	6aca      	ldr	r2, [r1, #44]	@ 0x2c
 8011708:	698b      	ldr	r3, [r1, #24]
 801170a:	1a9b      	subs	r3, r3, r2
 801170c:	ee07 3a10 	vmov	s14, r3
 8011710:	684b      	ldr	r3, [r1, #4]
 8011712:	1a9b      	subs	r3, r3, r2
 8011714:	ee01 3a90 	vmov	s3, r3
 8011718:	eeb8 7ac7 	vcvt.f32.s32	s14, s14
 801171c:	ee72 5ae5 	vsub.f32	s11, s5, s11
 8011720:	ee27 7a04 	vmul.f32	s14, s14, s8
 8011724:	eef8 1ae1 	vcvt.f32.s32	s3, s3
 8011728:	ee25 7ac7 	vnmul.f32	s14, s11, s14
 801172c:	ee61 1a84 	vmul.f32	s3, s3, s8
 8011730:	eea1 7a21 	vfma.f32	s14, s2, s3
 8011734:	ee27 7a03 	vmul.f32	s14, s14, s6
 8011738:	ed80 7a0d 	vstr	s14, [r0, #52]	@ 0x34
 801173c:	6a8c      	ldr	r4, [r1, #40]	@ 0x28
 801173e:	694a      	ldr	r2, [r1, #20]
 8011740:	1b13      	subs	r3, r2, r4
 8011742:	ee03 3a10 	vmov	s6, r3
 8011746:	eeb8 3ac3 	vcvt.f32.s32	s6, s6
 801174a:	680b      	ldr	r3, [r1, #0]
 801174c:	ee23 3a04 	vmul.f32	s6, s6, s8
 8011750:	1b1b      	subs	r3, r3, r4
 8011752:	ee65 5ac3 	vnmul.f32	s11, s11, s6
 8011756:	ee03 3a10 	vmov	s6, r3
 801175a:	eeb8 3ac3 	vcvt.f32.s32	s6, s6
 801175e:	ee23 4a04 	vmul.f32	s8, s6, s8
 8011762:	eee1 5a04 	vfma.f32	s11, s2, s8
 8011766:	ee25 6a86 	vmul.f32	s12, s11, s12
 801176a:	ee62 5a67 	vnmul.f32	s11, s4, s15
 801176e:	ed80 6a0e 	vstr	s12, [r0, #56]	@ 0x38
 8011772:	eee3 5aa6 	vfma.f32	s11, s7, s13
 8011776:	eef5 5ac0 	vcmpe.f32	s11, #0.0
 801177a:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 801177e:	dd13      	ble.n	80117a8 <_ZN8touchgfx9GradientsC1EPKNS_7Point3DE+0x224>
 8011780:	f44f 4300 	mov.w	r3, #32768	@ 0x8000
 8011784:	ee62 7ae7 	vnmul.f32	s15, s5, s15
 8011788:	63c3      	str	r3, [r0, #60]	@ 0x3c
 801178a:	eee3 7a87 	vfma.f32	s15, s7, s14
 801178e:	eef5 7ac0 	vcmpe.f32	s15, #0.0
 8011792:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 8011796:	dd15      	ble.n	80117c4 <_ZN8touchgfx9GradientsC1EPKNS_7Point3DE+0x240>
 8011798:	f44f 4300 	mov.w	r3, #32768	@ 0x8000
 801179c:	6403      	str	r3, [r0, #64]	@ 0x40
 801179e:	bd70      	pop	{r4, r5, r6, pc}
 80117a0:	4623      	mov	r3, r4
 80117a2:	e6fd      	b.n	80115a0 <_ZN8touchgfx9GradientsC1EPKNS_7Point3DE+0x1c>
 80117a4:	462a      	mov	r2, r5
 80117a6:	e706      	b.n	80115b6 <_ZN8touchgfx9GradientsC1EPKNS_7Point3DE+0x32>
 80117a8:	d502      	bpl.n	80117b0 <_ZN8touchgfx9GradientsC1EPKNS_7Point3DE+0x22c>
 80117aa:	f647 73ff 	movw	r3, #32767	@ 0x7fff
 80117ae:	e7e9      	b.n	8011784 <_ZN8touchgfx9GradientsC1EPKNS_7Point3DE+0x200>
 80117b0:	ee22 2a64 	vnmul.f32	s4, s4, s9
 80117b4:	eea3 2a85 	vfma.f32	s4, s7, s10
 80117b8:	eeb5 2ac0 	vcmpe.f32	s4, #0.0
 80117bc:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 80117c0:	dade      	bge.n	8011780 <_ZN8touchgfx9GradientsC1EPKNS_7Point3DE+0x1fc>
 80117c2:	e7f2      	b.n	80117aa <_ZN8touchgfx9GradientsC1EPKNS_7Point3DE+0x226>
 80117c4:	d502      	bpl.n	80117cc <_ZN8touchgfx9GradientsC1EPKNS_7Point3DE+0x248>
 80117c6:	f647 73ff 	movw	r3, #32767	@ 0x7fff
 80117ca:	e7e7      	b.n	801179c <_ZN8touchgfx9GradientsC1EPKNS_7Point3DE+0x218>
 80117cc:	ee62 4ae4 	vnmul.f32	s9, s5, s9
 80117d0:	eee3 4a86 	vfma.f32	s9, s7, s12
 80117d4:	eef5 4ac0 	vcmpe.f32	s9, #0.0
 80117d8:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 80117dc:	dadc      	bge.n	8011798 <_ZN8touchgfx9GradientsC1EPKNS_7Point3DE+0x214>
 80117de:	e7f2      	b.n	80117c6 <_ZN8touchgfx9GradientsC1EPKNS_7Point3DE+0x242>
 80117e0:	3d800000 	.word	0x3d800000

080117e4 <_ZN8touchgfx4EdgeC1ERKNS_9GradientsEPKNS_7Point3DEii>:
 80117e4:	e92d 47f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
 80117e8:	2714      	movs	r7, #20
 80117ea:	435f      	muls	r7, r3
 80117ec:	eb02 0c07 	add.w	ip, r2, r7
 80117f0:	f8dc 5004 	ldr.w	r5, [ip, #4]
 80117f4:	f115 0e0f 	adds.w	lr, r5, #15
 80117f8:	f100 80a2 	bmi.w	8011940 <_ZN8touchgfx4EdgeC1ERKNS_9GradientsEPKNS_7Point3DEii+0x15c>
 80117fc:	ea4f 1e2e 	mov.w	lr, lr, asr #4
 8011800:	9c08      	ldr	r4, [sp, #32]
 8011802:	f8c0 e014 	str.w	lr, [r0, #20]
 8011806:	2614      	movs	r6, #20
 8011808:	4366      	muls	r6, r4
 801180a:	eb02 0806 	add.w	r8, r2, r6
 801180e:	f8d8 5004 	ldr.w	r5, [r8, #4]
 8011812:	f115 040f 	adds.w	r4, r5, #15
 8011816:	f100 809f 	bmi.w	8011958 <_ZN8touchgfx4EdgeC1ERKNS_9GradientsEPKNS_7Point3DEii+0x174>
 801181a:	1124      	asrs	r4, r4, #4
 801181c:	eba4 040e 	sub.w	r4, r4, lr
 8011820:	6184      	str	r4, [r0, #24]
 8011822:	2c00      	cmp	r4, #0
 8011824:	f000 808a 	beq.w	801193c <_ZN8touchgfx4EdgeC1ERKNS_9GradientsEPKNS_7Point3DEii+0x158>
 8011828:	f8dc 9004 	ldr.w	r9, [ip, #4]
 801182c:	f8d8 4004 	ldr.w	r4, [r8, #4]
 8011830:	5995      	ldr	r5, [r2, r6]
 8011832:	eba4 0809 	sub.w	r8, r4, r9
 8011836:	59d4      	ldr	r4, [r2, r7]
 8011838:	eba5 0a04 	sub.w	sl, r5, r4
 801183c:	ea4f 150a 	mov.w	r5, sl, lsl #4
 8011840:	fb0e fe05 	mul.w	lr, lr, r5
 8011844:	fb0a ee19 	mls	lr, sl, r9, lr
 8011848:	fb08 e404 	mla	r4, r8, r4, lr
 801184c:	ea4f 1608 	mov.w	r6, r8, lsl #4
 8011850:	3c01      	subs	r4, #1
 8011852:	19a4      	adds	r4, r4, r6
 8011854:	f100 808c 	bmi.w	8011970 <_ZN8touchgfx4EdgeC1ERKNS_9GradientsEPKNS_7Point3DEii+0x18c>
 8011858:	fb94 fef6 	sdiv	lr, r4, r6
 801185c:	f8c0 e000 	str.w	lr, [r0]
 8011860:	fb06 441e 	mls	r4, r6, lr, r4
 8011864:	6104      	str	r4, [r0, #16]
 8011866:	2d00      	cmp	r5, #0
 8011868:	f2c0 8095 	blt.w	8011996 <_ZN8touchgfx4EdgeC1ERKNS_9GradientsEPKNS_7Point3DEii+0x1b2>
 801186c:	fb95 f4f6 	sdiv	r4, r5, r6
 8011870:	6044      	str	r4, [r0, #4]
 8011872:	fb06 5514 	mls	r5, r6, r4, r5
 8011876:	6085      	str	r5, [r0, #8]
 8011878:	60c6      	str	r6, [r0, #12]
 801187a:	f8dc 4004 	ldr.w	r4, [ip, #4]
 801187e:	6945      	ldr	r5, [r0, #20]
 8011880:	59d2      	ldr	r2, [r2, r7]
 8011882:	eddf 6a4d 	vldr	s13, [pc, #308]	@ 80119b8 <_ZN8touchgfx4EdgeC1ERKNS_9GradientsEPKNS_7Point3DEii+0x1d4>
 8011886:	ed91 6a0a 	vldr	s12, [r1, #40]	@ 0x28
 801188a:	ebc4 1405 	rsb	r4, r4, r5, lsl #4
 801188e:	ee07 4a10 	vmov	s14, r4
 8011892:	6804      	ldr	r4, [r0, #0]
 8011894:	ebc2 1204 	rsb	r2, r2, r4, lsl #4
 8011898:	ee07 2a90 	vmov	s15, r2
 801189c:	eeb8 7ac7 	vcvt.f32.s32	s14, s14
 80118a0:	eef8 7ae7 	vcvt.f32.s32	s15, s15
 80118a4:	eb01 0383 	add.w	r3, r1, r3, lsl #2
 80118a8:	ee27 7a26 	vmul.f32	s14, s14, s13
 80118ac:	ee67 7aa6 	vmul.f32	s15, s15, s13
 80118b0:	edd3 6a00 	vldr	s13, [r3]
 80118b4:	eee6 6a07 	vfma.f32	s13, s12, s14
 80118b8:	ed91 6a09 	vldr	s12, [r1, #36]	@ 0x24
 80118bc:	eee6 6a27 	vfma.f32	s13, s12, s15
 80118c0:	edc0 6a07 	vstr	s13, [r0, #28]
 80118c4:	edd0 6a01 	vldr	s13, [r0, #4]
 80118c8:	edd1 5a09 	vldr	s11, [r1, #36]	@ 0x24
 80118cc:	ed91 6a0a 	vldr	s12, [r1, #40]	@ 0x28
 80118d0:	eef8 6ae6 	vcvt.f32.s32	s13, s13
 80118d4:	eea6 6aa5 	vfma.f32	s12, s13, s11
 80118d8:	ed80 6a08 	vstr	s12, [r0, #32]
 80118dc:	6a4a      	ldr	r2, [r1, #36]	@ 0x24
 80118de:	6242      	str	r2, [r0, #36]	@ 0x24
 80118e0:	edd1 5a0c 	vldr	s11, [r1, #48]	@ 0x30
 80118e4:	ed93 6a03 	vldr	s12, [r3, #12]
 80118e8:	eea5 6a87 	vfma.f32	s12, s11, s14
 80118ec:	edd1 5a0b 	vldr	s11, [r1, #44]	@ 0x2c
 80118f0:	eea5 6aa7 	vfma.f32	s12, s11, s15
 80118f4:	ed80 6a0a 	vstr	s12, [r0, #40]	@ 0x28
 80118f8:	edd1 5a0b 	vldr	s11, [r1, #44]	@ 0x2c
 80118fc:	ed91 6a0c 	vldr	s12, [r1, #48]	@ 0x30
 8011900:	eea6 6aa5 	vfma.f32	s12, s13, s11
 8011904:	ed80 6a0b 	vstr	s12, [r0, #44]	@ 0x2c
 8011908:	6aca      	ldr	r2, [r1, #44]	@ 0x2c
 801190a:	6302      	str	r2, [r0, #48]	@ 0x30
 801190c:	ed93 6a06 	vldr	s12, [r3, #24]
 8011910:	edd1 5a0e 	vldr	s11, [r1, #56]	@ 0x38
 8011914:	eea5 6a87 	vfma.f32	s12, s11, s14
 8011918:	eeb0 7a46 	vmov.f32	s14, s12
 801191c:	ed91 6a0d 	vldr	s12, [r1, #52]	@ 0x34
 8011920:	eea6 7a27 	vfma.f32	s14, s12, s15
 8011924:	ed80 7a0d 	vstr	s14, [r0, #52]	@ 0x34
 8011928:	ed91 7a0d 	vldr	s14, [r1, #52]	@ 0x34
 801192c:	edd1 7a0e 	vldr	s15, [r1, #56]	@ 0x38
 8011930:	eee6 7a87 	vfma.f32	s15, s13, s14
 8011934:	edc0 7a0e 	vstr	s15, [r0, #56]	@ 0x38
 8011938:	6b4b      	ldr	r3, [r1, #52]	@ 0x34
 801193a:	63c3      	str	r3, [r0, #60]	@ 0x3c
 801193c:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
 8011940:	f1c5 0501 	rsb	r5, r5, #1
 8011944:	f015 050f 	ands.w	r5, r5, #15
 8011948:	bf18      	it	ne
 801194a:	2501      	movne	r5, #1
 801194c:	2410      	movs	r4, #16
 801194e:	fb9e fef4 	sdiv	lr, lr, r4
 8011952:	ebae 0e05 	sub.w	lr, lr, r5
 8011956:	e753      	b.n	8011800 <_ZN8touchgfx4EdgeC1ERKNS_9GradientsEPKNS_7Point3DEii+0x1c>
 8011958:	f1c5 0501 	rsb	r5, r5, #1
 801195c:	f015 050f 	ands.w	r5, r5, #15
 8011960:	bf18      	it	ne
 8011962:	2501      	movne	r5, #1
 8011964:	f04f 0910 	mov.w	r9, #16
 8011968:	fb94 f4f9 	sdiv	r4, r4, r9
 801196c:	1b64      	subs	r4, r4, r5
 801196e:	e755      	b.n	801181c <_ZN8touchgfx4EdgeC1ERKNS_9GradientsEPKNS_7Point3DEii+0x38>
 8011970:	4264      	negs	r4, r4
 8011972:	fb94 fef6 	sdiv	lr, r4, r6
 8011976:	f1ce 0800 	rsb	r8, lr, #0
 801197a:	fb06 441e 	mls	r4, r6, lr, r4
 801197e:	f8c0 8000 	str.w	r8, [r0]
 8011982:	6104      	str	r4, [r0, #16]
 8011984:	2c00      	cmp	r4, #0
 8011986:	f43f af6e 	beq.w	8011866 <_ZN8touchgfx4EdgeC1ERKNS_9GradientsEPKNS_7Point3DEii+0x82>
 801198a:	ea6f 0e0e 	mvn.w	lr, lr
 801198e:	f8c0 e000 	str.w	lr, [r0]
 8011992:	1b34      	subs	r4, r6, r4
 8011994:	e766      	b.n	8011864 <_ZN8touchgfx4EdgeC1ERKNS_9GradientsEPKNS_7Point3DEii+0x80>
 8011996:	426d      	negs	r5, r5
 8011998:	fb95 f4f6 	sdiv	r4, r5, r6
 801199c:	f1c4 0e00 	rsb	lr, r4, #0
 80119a0:	fb06 5514 	mls	r5, r6, r4, r5
 80119a4:	f8c0 e004 	str.w	lr, [r0, #4]
 80119a8:	6085      	str	r5, [r0, #8]
 80119aa:	2d00      	cmp	r5, #0
 80119ac:	f43f af64 	beq.w	8011878 <_ZN8touchgfx4EdgeC1ERKNS_9GradientsEPKNS_7Point3DEii+0x94>
 80119b0:	43e4      	mvns	r4, r4
 80119b2:	6044      	str	r4, [r0, #4]
 80119b4:	1b75      	subs	r5, r6, r5
 80119b6:	e75e      	b.n	8011876 <_ZN8touchgfx4EdgeC1ERKNS_9GradientsEPKNS_7Point3DEii+0x92>
 80119b8:	3d800000 	.word	0x3d800000

080119bc <_ZN8touchgfx7Unicode6strlenEPKt>:
 80119bc:	4602      	mov	r2, r0
 80119be:	b148      	cbz	r0, 80119d4 <_ZN8touchgfx7Unicode6strlenEPKt+0x18>
 80119c0:	2300      	movs	r3, #0
 80119c2:	b298      	uxth	r0, r3
 80119c4:	3301      	adds	r3, #1
 80119c6:	eb02 0143 	add.w	r1, r2, r3, lsl #1
 80119ca:	f831 1c02 	ldrh.w	r1, [r1, #-2]
 80119ce:	2900      	cmp	r1, #0
 80119d0:	d1f7      	bne.n	80119c2 <_ZN8touchgfx7Unicode6strlenEPKt+0x6>
 80119d2:	4770      	bx	lr
 80119d4:	4770      	bx	lr

080119d6 <_ZN8touchgfx7Unicode7strncpyEPtPKct>:
 80119d6:	b530      	push	{r4, r5, lr}
 80119d8:	4604      	mov	r4, r0
 80119da:	b159      	cbz	r1, 80119f4 <_ZN8touchgfx7Unicode7strncpyEPtPKct+0x1e>
 80119dc:	b148      	cbz	r0, 80119f2 <_ZN8touchgfx7Unicode7strncpyEPtPKct+0x1c>
 80119de:	2300      	movs	r3, #0
 80119e0:	b298      	uxth	r0, r3
 80119e2:	4282      	cmp	r2, r0
 80119e4:	d905      	bls.n	80119f2 <_ZN8touchgfx7Unicode7strncpyEPtPKct+0x1c>
 80119e6:	5ccd      	ldrb	r5, [r1, r3]
 80119e8:	f824 5013 	strh.w	r5, [r4, r3, lsl #1]
 80119ec:	3301      	adds	r3, #1
 80119ee:	2d00      	cmp	r5, #0
 80119f0:	d1f6      	bne.n	80119e0 <_ZN8touchgfx7Unicode7strncpyEPtPKct+0xa>
 80119f2:	bd30      	pop	{r4, r5, pc}
 80119f4:	4608      	mov	r0, r1
 80119f6:	e7fc      	b.n	80119f2 <_ZN8touchgfx7Unicode7strncpyEPtPKct+0x1c>

080119f8 <_ZN8touchgfx7Unicode4itoaElPtti.part.2>:
 80119f8:	b5f0      	push	{r4, r5, r6, r7, lr}
 80119fa:	b08b      	sub	sp, #44	@ 0x2c
 80119fc:	468c      	mov	ip, r1
 80119fe:	2100      	movs	r1, #0
 8011a00:	f88d 1024 	strb.w	r1, [sp, #36]	@ 0x24
 8011a04:	4604      	mov	r4, r0
 8011a06:	261f      	movs	r6, #31
 8011a08:	af01      	add	r7, sp, #4
 8011a0a:	fb94 fef3 	sdiv	lr, r4, r3
 8011a0e:	fb03 441e 	mls	r4, r3, lr, r4
 8011a12:	ea84 75e4 	eor.w	r5, r4, r4, asr #31
 8011a16:	eba5 75e4 	sub.w	r5, r5, r4, asr #31
 8011a1a:	b2ec      	uxtb	r4, r5
 8011a1c:	2d09      	cmp	r5, #9
 8011a1e:	bfd4      	ite	le
 8011a20:	3430      	addle	r4, #48	@ 0x30
 8011a22:	3457      	addgt	r4, #87	@ 0x57
 8011a24:	b2e4      	uxtb	r4, r4
 8011a26:	55bc      	strb	r4, [r7, r6]
 8011a28:	4674      	mov	r4, lr
 8011a2a:	1e71      	subs	r1, r6, #1
 8011a2c:	b974      	cbnz	r4, 8011a4c <_ZN8touchgfx7Unicode4itoaElPtti.part.2+0x54>
 8011a2e:	2800      	cmp	r0, #0
 8011a30:	da05      	bge.n	8011a3e <_ZN8touchgfx7Unicode4itoaElPtti.part.2+0x46>
 8011a32:	ab0a      	add	r3, sp, #40	@ 0x28
 8011a34:	4419      	add	r1, r3
 8011a36:	232d      	movs	r3, #45	@ 0x2d
 8011a38:	f801 3c24 	strb.w	r3, [r1, #-36]
 8011a3c:	1eb1      	subs	r1, r6, #2
 8011a3e:	3101      	adds	r1, #1
 8011a40:	4439      	add	r1, r7
 8011a42:	4660      	mov	r0, ip
 8011a44:	f7ff ffc7 	bl	80119d6 <_ZN8touchgfx7Unicode7strncpyEPtPKct>
 8011a48:	b00b      	add	sp, #44	@ 0x2c
 8011a4a:	bdf0      	pop	{r4, r5, r6, r7, pc}
 8011a4c:	460e      	mov	r6, r1
 8011a4e:	e7dc      	b.n	8011a0a <_ZN8touchgfx7Unicode4itoaElPtti.part.2+0x12>

08011a50 <_ZN8touchgfx7Unicode4utoaEmPtti.part.3>:
 8011a50:	b5f0      	push	{r4, r5, r6, r7, lr}
 8011a52:	b08b      	sub	sp, #44	@ 0x2c
 8011a54:	468c      	mov	ip, r1
 8011a56:	2100      	movs	r1, #0
 8011a58:	f88d 1024 	strb.w	r1, [sp, #36]	@ 0x24
 8011a5c:	ae01      	add	r6, sp, #4
 8011a5e:	211f      	movs	r1, #31
 8011a60:	fbb0 f7f3 	udiv	r7, r0, r3
 8011a64:	fb03 0517 	mls	r5, r3, r7, r0
 8011a68:	b2ec      	uxtb	r4, r5
 8011a6a:	2d09      	cmp	r5, #9
 8011a6c:	bfd4      	ite	le
 8011a6e:	3430      	addle	r4, #48	@ 0x30
 8011a70:	3457      	addgt	r4, #87	@ 0x57
 8011a72:	b2e4      	uxtb	r4, r4
 8011a74:	558c      	strb	r4, [r1, r6]
 8011a76:	4638      	mov	r0, r7
 8011a78:	1e4c      	subs	r4, r1, #1
 8011a7a:	b92f      	cbnz	r7, 8011a88 <_ZN8touchgfx7Unicode4utoaEmPtti.part.3+0x38>
 8011a7c:	4431      	add	r1, r6
 8011a7e:	4660      	mov	r0, ip
 8011a80:	f7ff ffa9 	bl	80119d6 <_ZN8touchgfx7Unicode7strncpyEPtPKct>
 8011a84:	b00b      	add	sp, #44	@ 0x2c
 8011a86:	bdf0      	pop	{r4, r5, r6, r7, pc}
 8011a88:	4621      	mov	r1, r4
 8011a8a:	e7e9      	b.n	8011a60 <_ZN8touchgfx7Unicode4utoaEmPtti.part.3+0x10>

08011a8c <_ZN8touchgfx7Unicode13composeStringERPKtttbbibibRitPt>:
 8011a8c:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8011a90:	4691      	mov	r9, r2
 8011a92:	b085      	sub	sp, #20
 8011a94:	6802      	ldr	r2, [r0, #0]
 8011a96:	9201      	str	r2, [sp, #4]
 8011a98:	4688      	mov	r8, r1
 8011a9a:	4683      	mov	fp, r0
 8011a9c:	f89d 1040 	ldrb.w	r1, [sp, #64]	@ 0x40
 8011aa0:	9103      	str	r1, [sp, #12]
 8011aa2:	4610      	mov	r0, r2
 8011aa4:	461c      	mov	r4, r3
 8011aa6:	f89d 3048 	ldrb.w	r3, [sp, #72]	@ 0x48
 8011aaa:	9302      	str	r3, [sp, #8]
 8011aac:	f7ff ff86 	bl	80119bc <_ZN8touchgfx7Unicode6strlenEPKt>
 8011ab0:	f1b8 0f00 	cmp.w	r8, #0
 8011ab4:	bf0c      	ite	eq
 8011ab6:	4684      	moveq	ip, r0
 8011ab8:	f100 0c01 	addne.w	ip, r0, #1
 8011abc:	f1b9 0f69 	cmp.w	r9, #105	@ 0x69
 8011ac0:	f89d 6038 	ldrb.w	r6, [sp, #56]	@ 0x38
 8011ac4:	9f0f      	ldr	r7, [sp, #60]	@ 0x3c
 8011ac6:	9d13      	ldr	r5, [sp, #76]	@ 0x4c
 8011ac8:	f8dd a054 	ldr.w	sl, [sp, #84]	@ 0x54
 8011acc:	9903      	ldr	r1, [sp, #12]
 8011ace:	fa1f fc8c 	uxth.w	ip, ip
 8011ad2:	e9dd 2301 	ldrd	r2, r3, [sp, #4]
 8011ad6:	d041      	beq.n	8011b5c <_ZN8touchgfx7Unicode13composeStringERPKtttbbibibRitPt+0xd0>
 8011ad8:	d834      	bhi.n	8011b44 <_ZN8touchgfx7Unicode13composeStringERPKtttbbibibRitPt+0xb8>
 8011ada:	f1b9 0f63 	cmp.w	r9, #99	@ 0x63
 8011ade:	d059      	beq.n	8011b94 <_ZN8touchgfx7Unicode13composeStringERPKtttbbibibRitPt+0x108>
 8011ae0:	f1b9 0f64 	cmp.w	r9, #100	@ 0x64
 8011ae4:	d03a      	beq.n	8011b5c <_ZN8touchgfx7Unicode13composeStringERPKtttbbibibRitPt+0xd0>
 8011ae6:	f1b9 0f58 	cmp.w	r9, #88	@ 0x58
 8011aea:	d034      	beq.n	8011b56 <_ZN8touchgfx7Unicode13composeStringERPKtttbbibibRitPt+0xca>
 8011aec:	2400      	movs	r4, #0
 8011aee:	f8bd 2050 	ldrh.w	r2, [sp, #80]	@ 0x50
 8011af2:	3a01      	subs	r2, #1
 8011af4:	b169      	cbz	r1, 8011b12 <_ZN8touchgfx7Unicode13composeStringERPKtttbbibibRitPt+0x86>
 8011af6:	9911      	ldr	r1, [sp, #68]	@ 0x44
 8011af8:	458c      	cmp	ip, r1
 8011afa:	da09      	bge.n	8011b10 <_ZN8touchgfx7Unicode13composeStringERPKtttbbibibRitPt+0x84>
 8011afc:	eba1 010c 	sub.w	r1, r1, ip
 8011b00:	b289      	uxth	r1, r1
 8011b02:	b933      	cbnz	r3, 8011b12 <_ZN8touchgfx7Unicode13composeStringERPKtttbbibibRitPt+0x86>
 8011b04:	2e00      	cmp	r6, #0
 8011b06:	d051      	beq.n	8011bac <_ZN8touchgfx7Unicode13composeStringERPKtttbbibibRitPt+0x120>
 8011b08:	2800      	cmp	r0, #0
 8011b0a:	d04f      	beq.n	8011bac <_ZN8touchgfx7Unicode13composeStringERPKtttbbibibRitPt+0x120>
 8011b0c:	440c      	add	r4, r1
 8011b0e:	b2a4      	uxth	r4, r4
 8011b10:	2100      	movs	r1, #0
 8011b12:	682b      	ldr	r3, [r5, #0]
 8011b14:	4293      	cmp	r3, r2
 8011b16:	da07      	bge.n	8011b28 <_ZN8touchgfx7Unicode13composeStringERPKtttbbibibRitPt+0x9c>
 8011b18:	f1b8 0f00 	cmp.w	r8, #0
 8011b1c:	d004      	beq.n	8011b28 <_ZN8touchgfx7Unicode13composeStringERPKtttbbibibRitPt+0x9c>
 8011b1e:	f82a 8013 	strh.w	r8, [sl, r3, lsl #1]
 8011b22:	682b      	ldr	r3, [r5, #0]
 8011b24:	3301      	adds	r3, #1
 8011b26:	602b      	str	r3, [r5, #0]
 8011b28:	2730      	movs	r7, #48	@ 0x30
 8011b2a:	2c00      	cmp	r4, #0
 8011b2c:	d04e      	beq.n	8011bcc <_ZN8touchgfx7Unicode13composeStringERPKtttbbibibRitPt+0x140>
 8011b2e:	682e      	ldr	r6, [r5, #0]
 8011b30:	3c01      	subs	r4, #1
 8011b32:	42b2      	cmp	r2, r6
 8011b34:	b2a4      	uxth	r4, r4
 8011b36:	dd49      	ble.n	8011bcc <_ZN8touchgfx7Unicode13composeStringERPKtttbbibibRitPt+0x140>
 8011b38:	f82a 7016 	strh.w	r7, [sl, r6, lsl #1]
 8011b3c:	682b      	ldr	r3, [r5, #0]
 8011b3e:	3301      	adds	r3, #1
 8011b40:	602b      	str	r3, [r5, #0]
 8011b42:	e7f2      	b.n	8011b2a <_ZN8touchgfx7Unicode13composeStringERPKtttbbibibRitPt+0x9e>
 8011b44:	f1b9 0f73 	cmp.w	r9, #115	@ 0x73
 8011b48:	d01d      	beq.n	8011b86 <_ZN8touchgfx7Unicode13composeStringERPKtttbbibibRitPt+0xfa>
 8011b4a:	f1b9 0f78 	cmp.w	r9, #120	@ 0x78
 8011b4e:	d002      	beq.n	8011b56 <_ZN8touchgfx7Unicode13composeStringERPKtttbbibibRitPt+0xca>
 8011b50:	f1b9 0f6f 	cmp.w	r9, #111	@ 0x6f
 8011b54:	e7c9      	b.n	8011aea <_ZN8touchgfx7Unicode13composeStringERPKtttbbibibRitPt+0x5e>
 8011b56:	4684      	mov	ip, r0
 8011b58:	f04f 0800 	mov.w	r8, #0
 8011b5c:	2c00      	cmp	r4, #0
 8011b5e:	d0c6      	beq.n	8011aee <_ZN8touchgfx7Unicode13composeStringERPKtttbbibibRitPt+0x62>
 8011b60:	b947      	cbnz	r7, 8011b74 <_ZN8touchgfx7Unicode13composeStringERPKtttbbibibRitPt+0xe8>
 8011b62:	2801      	cmp	r0, #1
 8011b64:	d106      	bne.n	8011b74 <_ZN8touchgfx7Unicode13composeStringERPKtttbbibibRitPt+0xe8>
 8011b66:	8814      	ldrh	r4, [r2, #0]
 8011b68:	2c30      	cmp	r4, #48	@ 0x30
 8011b6a:	bf02      	ittt	eq
 8011b6c:	3202      	addeq	r2, #2
 8011b6e:	f8cb 2000 	streq.w	r2, [fp]
 8011b72:	4638      	moveq	r0, r7
 8011b74:	45bc      	cmp	ip, r7
 8011b76:	da14      	bge.n	8011ba2 <_ZN8touchgfx7Unicode13composeStringERPKtttbbibibRitPt+0x116>
 8011b78:	b2bf      	uxth	r7, r7
 8011b7a:	eba7 040c 	sub.w	r4, r7, ip
 8011b7e:	b2a4      	uxth	r4, r4
 8011b80:	46bc      	mov	ip, r7
 8011b82:	2600      	movs	r6, #0
 8011b84:	e7b3      	b.n	8011aee <_ZN8touchgfx7Unicode13composeStringERPKtttbbibibRitPt+0x62>
 8011b86:	4684      	mov	ip, r0
 8011b88:	b16c      	cbz	r4, 8011ba6 <_ZN8touchgfx7Unicode13composeStringERPKtttbbibibRitPt+0x11a>
 8011b8a:	42b8      	cmp	r0, r7
 8011b8c:	dd00      	ble.n	8011b90 <_ZN8touchgfx7Unicode13composeStringERPKtttbbibibRitPt+0x104>
 8011b8e:	b2b8      	uxth	r0, r7
 8011b90:	2400      	movs	r4, #0
 8011b92:	e003      	b.n	8011b9c <_ZN8touchgfx7Unicode13composeStringERPKtttbbibibRitPt+0x110>
 8011b94:	f04f 0c01 	mov.w	ip, #1
 8011b98:	2400      	movs	r4, #0
 8011b9a:	4660      	mov	r0, ip
 8011b9c:	4626      	mov	r6, r4
 8011b9e:	46a0      	mov	r8, r4
 8011ba0:	e7a5      	b.n	8011aee <_ZN8touchgfx7Unicode13composeStringERPKtttbbibibRitPt+0x62>
 8011ba2:	2400      	movs	r4, #0
 8011ba4:	e7ed      	b.n	8011b82 <_ZN8touchgfx7Unicode13composeStringERPKtttbbibibRitPt+0xf6>
 8011ba6:	4626      	mov	r6, r4
 8011ba8:	46a0      	mov	r8, r4
 8011baa:	e7a0      	b.n	8011aee <_ZN8touchgfx7Unicode13composeStringERPKtttbbibibRitPt+0x62>
 8011bac:	2900      	cmp	r1, #0
 8011bae:	d0b0      	beq.n	8011b12 <_ZN8touchgfx7Unicode13composeStringERPKtttbbibibRitPt+0x86>
 8011bb0:	2720      	movs	r7, #32
 8011bb2:	682e      	ldr	r6, [r5, #0]
 8011bb4:	2900      	cmp	r1, #0
 8011bb6:	d0ac      	beq.n	8011b12 <_ZN8touchgfx7Unicode13composeStringERPKtttbbibibRitPt+0x86>
 8011bb8:	3901      	subs	r1, #1
 8011bba:	4296      	cmp	r6, r2
 8011bbc:	b289      	uxth	r1, r1
 8011bbe:	daa7      	bge.n	8011b10 <_ZN8touchgfx7Unicode13composeStringERPKtttbbibibRitPt+0x84>
 8011bc0:	f82a 7016 	strh.w	r7, [sl, r6, lsl #1]
 8011bc4:	682b      	ldr	r3, [r5, #0]
 8011bc6:	3301      	adds	r3, #1
 8011bc8:	602b      	str	r3, [r5, #0]
 8011bca:	e7f2      	b.n	8011bb2 <_ZN8touchgfx7Unicode13composeStringERPKtttbbibibRitPt+0x126>
 8011bcc:	b188      	cbz	r0, 8011bf2 <_ZN8touchgfx7Unicode13composeStringERPKtttbbibibRitPt+0x166>
 8011bce:	682b      	ldr	r3, [r5, #0]
 8011bd0:	3801      	subs	r0, #1
 8011bd2:	429a      	cmp	r2, r3
 8011bd4:	b280      	uxth	r0, r0
 8011bd6:	dd0c      	ble.n	8011bf2 <_ZN8touchgfx7Unicode13composeStringERPKtttbbibibRitPt+0x166>
 8011bd8:	f8db 3000 	ldr.w	r3, [fp]
 8011bdc:	1c9c      	adds	r4, r3, #2
 8011bde:	f8cb 4000 	str.w	r4, [fp]
 8011be2:	881c      	ldrh	r4, [r3, #0]
 8011be4:	682b      	ldr	r3, [r5, #0]
 8011be6:	f82a 4013 	strh.w	r4, [sl, r3, lsl #1]
 8011bea:	682b      	ldr	r3, [r5, #0]
 8011bec:	3301      	adds	r3, #1
 8011bee:	602b      	str	r3, [r5, #0]
 8011bf0:	e7ec      	b.n	8011bcc <_ZN8touchgfx7Unicode13composeStringERPKtttbbibibRitPt+0x140>
 8011bf2:	2620      	movs	r6, #32
 8011bf4:	b151      	cbz	r1, 8011c0c <_ZN8touchgfx7Unicode13composeStringERPKtttbbibibRitPt+0x180>
 8011bf6:	6828      	ldr	r0, [r5, #0]
 8011bf8:	3901      	subs	r1, #1
 8011bfa:	4282      	cmp	r2, r0
 8011bfc:	b289      	uxth	r1, r1
 8011bfe:	dd05      	ble.n	8011c0c <_ZN8touchgfx7Unicode13composeStringERPKtttbbibibRitPt+0x180>
 8011c00:	f82a 6010 	strh.w	r6, [sl, r0, lsl #1]
 8011c04:	682b      	ldr	r3, [r5, #0]
 8011c06:	3301      	adds	r3, #1
 8011c08:	602b      	str	r3, [r5, #0]
 8011c0a:	e7f3      	b.n	8011bf4 <_ZN8touchgfx7Unicode13composeStringERPKtttbbibibRitPt+0x168>
 8011c0c:	b005      	add	sp, #20
 8011c0e:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}

08011c12 <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_>:
 8011c12:	e92d 43f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, lr}
 8011c16:	e9dd 8c07 	ldrd	r8, ip, [sp, #28]
 8011c1a:	e9dd e609 	ldrd	lr, r6, [sp, #36]	@ 0x24
 8011c1e:	e9dd 750b 	ldrd	r7, r5, [sp, #44]	@ 0x2c
 8011c22:	2400      	movs	r4, #0
 8011c24:	8014      	strh	r4, [r2, #0]
 8011c26:	701c      	strb	r4, [r3, #0]
 8011c28:	f888 4000 	strb.w	r4, [r8]
 8011c2c:	f88c 4000 	strb.w	r4, [ip]
 8011c30:	f88e 4000 	strb.w	r4, [lr]
 8011c34:	703c      	strb	r4, [r7, #0]
 8011c36:	6804      	ldr	r4, [r0, #0]
 8011c38:	b1a4      	cbz	r4, 8011c64 <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0x52>
 8011c3a:	8824      	ldrh	r4, [r4, #0]
 8011c3c:	f04f 0901 	mov.w	r9, #1
 8011c40:	b314      	cbz	r4, 8011c88 <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0x76>
 8011c42:	2c2b      	cmp	r4, #43	@ 0x2b
 8011c44:	d001      	beq.n	8011c4a <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0x38>
 8011c46:	2c20      	cmp	r4, #32
 8011c48:	d110      	bne.n	8011c6c <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0x5a>
 8011c4a:	8014      	strh	r4, [r2, #0]
 8011c4c:	6804      	ldr	r4, [r0, #0]
 8011c4e:	b10c      	cbz	r4, 8011c54 <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0x42>
 8011c50:	3402      	adds	r4, #2
 8011c52:	6004      	str	r4, [r0, #0]
 8011c54:	680c      	ldr	r4, [r1, #0]
 8011c56:	b10c      	cbz	r4, 8011c5c <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0x4a>
 8011c58:	3401      	adds	r4, #1
 8011c5a:	600c      	str	r4, [r1, #0]
 8011c5c:	6804      	ldr	r4, [r0, #0]
 8011c5e:	b17c      	cbz	r4, 8011c80 <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0x6e>
 8011c60:	8824      	ldrh	r4, [r4, #0]
 8011c62:	e7ed      	b.n	8011c40 <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0x2e>
 8011c64:	680c      	ldr	r4, [r1, #0]
 8011c66:	b17c      	cbz	r4, 8011c88 <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0x76>
 8011c68:	7824      	ldrb	r4, [r4, #0]
 8011c6a:	e7e7      	b.n	8011c3c <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0x2a>
 8011c6c:	2c2d      	cmp	r4, #45	@ 0x2d
 8011c6e:	d102      	bne.n	8011c76 <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0x64>
 8011c70:	f883 9000 	strb.w	r9, [r3]
 8011c74:	e7ea      	b.n	8011c4c <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0x3a>
 8011c76:	2c23      	cmp	r4, #35	@ 0x23
 8011c78:	d107      	bne.n	8011c8a <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0x78>
 8011c7a:	f888 9000 	strb.w	r9, [r8]
 8011c7e:	e7e5      	b.n	8011c4c <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0x3a>
 8011c80:	680c      	ldr	r4, [r1, #0]
 8011c82:	b10c      	cbz	r4, 8011c88 <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0x76>
 8011c84:	7824      	ldrb	r4, [r4, #0]
 8011c86:	e7db      	b.n	8011c40 <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0x2e>
 8011c88:	2400      	movs	r4, #0
 8011c8a:	f1a4 0330 	sub.w	r3, r4, #48	@ 0x30
 8011c8e:	2b09      	cmp	r3, #9
 8011c90:	d901      	bls.n	8011c96 <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0x84>
 8011c92:	2c2a      	cmp	r4, #42	@ 0x2a
 8011c94:	d122      	bne.n	8011cdc <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0xca>
 8011c96:	2301      	movs	r3, #1
 8011c98:	2c30      	cmp	r4, #48	@ 0x30
 8011c9a:	f88e 3000 	strb.w	r3, [lr]
 8011c9e:	d10d      	bne.n	8011cbc <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0xaa>
 8011ca0:	f88c 3000 	strb.w	r3, [ip]
 8011ca4:	6803      	ldr	r3, [r0, #0]
 8011ca6:	b10b      	cbz	r3, 8011cac <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0x9a>
 8011ca8:	3302      	adds	r3, #2
 8011caa:	6003      	str	r3, [r0, #0]
 8011cac:	680b      	ldr	r3, [r1, #0]
 8011cae:	b10b      	cbz	r3, 8011cb4 <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0xa2>
 8011cb0:	3301      	adds	r3, #1
 8011cb2:	600b      	str	r3, [r1, #0]
 8011cb4:	6803      	ldr	r3, [r0, #0]
 8011cb6:	2b00      	cmp	r3, #0
 8011cb8:	d02f      	beq.n	8011d1a <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0x108>
 8011cba:	881c      	ldrh	r4, [r3, #0]
 8011cbc:	2c2a      	cmp	r4, #42	@ 0x2a
 8011cbe:	d135      	bne.n	8011d2c <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0x11a>
 8011cc0:	f04f 33ff 	mov.w	r3, #4294967295
 8011cc4:	6033      	str	r3, [r6, #0]
 8011cc6:	6803      	ldr	r3, [r0, #0]
 8011cc8:	b10b      	cbz	r3, 8011cce <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0xbc>
 8011cca:	3302      	adds	r3, #2
 8011ccc:	6003      	str	r3, [r0, #0]
 8011cce:	680b      	ldr	r3, [r1, #0]
 8011cd0:	b10b      	cbz	r3, 8011cd6 <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0xc4>
 8011cd2:	3301      	adds	r3, #1
 8011cd4:	600b      	str	r3, [r1, #0]
 8011cd6:	6803      	ldr	r3, [r0, #0]
 8011cd8:	b31b      	cbz	r3, 8011d22 <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0x110>
 8011cda:	881c      	ldrh	r4, [r3, #0]
 8011cdc:	2c2e      	cmp	r4, #46	@ 0x2e
 8011cde:	d11a      	bne.n	8011d16 <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0x104>
 8011ce0:	2301      	movs	r3, #1
 8011ce2:	703b      	strb	r3, [r7, #0]
 8011ce4:	6803      	ldr	r3, [r0, #0]
 8011ce6:	b10b      	cbz	r3, 8011cec <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0xda>
 8011ce8:	3302      	adds	r3, #2
 8011cea:	6003      	str	r3, [r0, #0]
 8011cec:	680b      	ldr	r3, [r1, #0]
 8011cee:	b10b      	cbz	r3, 8011cf4 <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0xe2>
 8011cf0:	3301      	adds	r3, #1
 8011cf2:	600b      	str	r3, [r1, #0]
 8011cf4:	6803      	ldr	r3, [r0, #0]
 8011cf6:	2b00      	cmp	r3, #0
 8011cf8:	d036      	beq.n	8011d68 <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0x156>
 8011cfa:	881b      	ldrh	r3, [r3, #0]
 8011cfc:	2b2a      	cmp	r3, #42	@ 0x2a
 8011cfe:	d137      	bne.n	8011d70 <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0x15e>
 8011d00:	f04f 33ff 	mov.w	r3, #4294967295
 8011d04:	602b      	str	r3, [r5, #0]
 8011d06:	6803      	ldr	r3, [r0, #0]
 8011d08:	b10b      	cbz	r3, 8011d0e <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0xfc>
 8011d0a:	3302      	adds	r3, #2
 8011d0c:	6003      	str	r3, [r0, #0]
 8011d0e:	680b      	ldr	r3, [r1, #0]
 8011d10:	b10b      	cbz	r3, 8011d16 <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0x104>
 8011d12:	3301      	adds	r3, #1
 8011d14:	600b      	str	r3, [r1, #0]
 8011d16:	e8bd 83f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, pc}
 8011d1a:	680c      	ldr	r4, [r1, #0]
 8011d1c:	b134      	cbz	r4, 8011d2c <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0x11a>
 8011d1e:	7824      	ldrb	r4, [r4, #0]
 8011d20:	e7cc      	b.n	8011cbc <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0xaa>
 8011d22:	680b      	ldr	r3, [r1, #0]
 8011d24:	2b00      	cmp	r3, #0
 8011d26:	d0f6      	beq.n	8011d16 <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0x104>
 8011d28:	781c      	ldrb	r4, [r3, #0]
 8011d2a:	e7d7      	b.n	8011cdc <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0xca>
 8011d2c:	2300      	movs	r3, #0
 8011d2e:	6033      	str	r3, [r6, #0]
 8011d30:	220a      	movs	r2, #10
 8011d32:	f1a4 0c30 	sub.w	ip, r4, #48	@ 0x30
 8011d36:	fa1f f38c 	uxth.w	r3, ip
 8011d3a:	2b09      	cmp	r3, #9
 8011d3c:	d8ce      	bhi.n	8011cdc <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0xca>
 8011d3e:	6833      	ldr	r3, [r6, #0]
 8011d40:	fb02 c303 	mla	r3, r2, r3, ip
 8011d44:	6033      	str	r3, [r6, #0]
 8011d46:	6803      	ldr	r3, [r0, #0]
 8011d48:	b10b      	cbz	r3, 8011d4e <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0x13c>
 8011d4a:	3302      	adds	r3, #2
 8011d4c:	6003      	str	r3, [r0, #0]
 8011d4e:	680b      	ldr	r3, [r1, #0]
 8011d50:	b10b      	cbz	r3, 8011d56 <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0x144>
 8011d52:	3301      	adds	r3, #1
 8011d54:	600b      	str	r3, [r1, #0]
 8011d56:	6803      	ldr	r3, [r0, #0]
 8011d58:	b10b      	cbz	r3, 8011d5e <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0x14c>
 8011d5a:	881c      	ldrh	r4, [r3, #0]
 8011d5c:	e7e9      	b.n	8011d32 <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0x120>
 8011d5e:	680c      	ldr	r4, [r1, #0]
 8011d60:	2c00      	cmp	r4, #0
 8011d62:	d0e6      	beq.n	8011d32 <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0x120>
 8011d64:	7824      	ldrb	r4, [r4, #0]
 8011d66:	e7e4      	b.n	8011d32 <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0x120>
 8011d68:	680b      	ldr	r3, [r1, #0]
 8011d6a:	b10b      	cbz	r3, 8011d70 <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0x15e>
 8011d6c:	781b      	ldrb	r3, [r3, #0]
 8011d6e:	e7c5      	b.n	8011cfc <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0xea>
 8011d70:	2200      	movs	r2, #0
 8011d72:	602a      	str	r2, [r5, #0]
 8011d74:	240a      	movs	r4, #10
 8011d76:	3b30      	subs	r3, #48	@ 0x30
 8011d78:	b29e      	uxth	r6, r3
 8011d7a:	2e09      	cmp	r6, #9
 8011d7c:	682a      	ldr	r2, [r5, #0]
 8011d7e:	d813      	bhi.n	8011da8 <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0x196>
 8011d80:	fb04 3302 	mla	r3, r4, r2, r3
 8011d84:	602b      	str	r3, [r5, #0]
 8011d86:	6803      	ldr	r3, [r0, #0]
 8011d88:	b10b      	cbz	r3, 8011d8e <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0x17c>
 8011d8a:	3302      	adds	r3, #2
 8011d8c:	6003      	str	r3, [r0, #0]
 8011d8e:	680b      	ldr	r3, [r1, #0]
 8011d90:	b10b      	cbz	r3, 8011d96 <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0x184>
 8011d92:	3301      	adds	r3, #1
 8011d94:	600b      	str	r3, [r1, #0]
 8011d96:	6803      	ldr	r3, [r0, #0]
 8011d98:	b10b      	cbz	r3, 8011d9e <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0x18c>
 8011d9a:	881b      	ldrh	r3, [r3, #0]
 8011d9c:	e7eb      	b.n	8011d76 <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0x164>
 8011d9e:	680b      	ldr	r3, [r1, #0]
 8011da0:	2b00      	cmp	r3, #0
 8011da2:	d0e8      	beq.n	8011d76 <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0x164>
 8011da4:	781b      	ldrb	r3, [r3, #0]
 8011da6:	e7e6      	b.n	8011d76 <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0x164>
 8011da8:	2a06      	cmp	r2, #6
 8011daa:	bfa8      	it	ge
 8011dac:	2206      	movge	r2, #6
 8011dae:	602a      	str	r2, [r5, #0]
 8011db0:	e7b1      	b.n	8011d16 <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0x104>

08011db2 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list>:
 8011db2:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8011db6:	b0a3      	sub	sp, #140	@ 0x8c
 8011db8:	2600      	movs	r6, #0
 8011dba:	f10d 0944 	add.w	r9, sp, #68	@ 0x44
 8011dbe:	4607      	mov	r7, r0
 8011dc0:	4688      	mov	r8, r1
 8011dc2:	e9cd 3208 	strd	r3, r2, [sp, #32]
 8011dc6:	4631      	mov	r1, r6
 8011dc8:	2242      	movs	r2, #66	@ 0x42
 8011dca:	4648      	mov	r0, r9
 8011dcc:	9c2c      	ldr	r4, [sp, #176]	@ 0xb0
 8011dce:	960d      	str	r6, [sp, #52]	@ 0x34
 8011dd0:	f00e ff25 	bl	8020c1e <memset>
 8011dd4:	b15f      	cbz	r7, 8011dee <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x3c>
 8011dd6:	f108 3aff 	add.w	sl, r8, #4294967295
 8011dda:	9a09      	ldr	r2, [sp, #36]	@ 0x24
 8011ddc:	9b0d      	ldr	r3, [sp, #52]	@ 0x34
 8011dde:	b152      	cbz	r2, 8011df6 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x44>
 8011de0:	8812      	ldrh	r2, [r2, #0]
 8011de2:	b10a      	cbz	r2, 8011de8 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x36>
 8011de4:	459a      	cmp	sl, r3
 8011de6:	dc2e      	bgt.n	8011e46 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x94>
 8011de8:	2200      	movs	r2, #0
 8011dea:	f827 2013 	strh.w	r2, [r7, r3, lsl #1]
 8011dee:	4638      	mov	r0, r7
 8011df0:	b023      	add	sp, #140	@ 0x8c
 8011df2:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 8011df6:	9a08      	ldr	r2, [sp, #32]
 8011df8:	2a00      	cmp	r2, #0
 8011dfa:	d0f5      	beq.n	8011de8 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x36>
 8011dfc:	7812      	ldrb	r2, [r2, #0]
 8011dfe:	e7f0      	b.n	8011de2 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x30>
 8011e00:	2d00      	cmp	r5, #0
 8011e02:	d0ea      	beq.n	8011dda <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x28>
 8011e04:	782a      	ldrb	r2, [r5, #0]
 8011e06:	b142      	cbz	r2, 8011e1a <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x68>
 8011e08:	2a25      	cmp	r2, #37	@ 0x25
 8011e0a:	d001      	beq.n	8011e10 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x5e>
 8011e0c:	459a      	cmp	sl, r3
 8011e0e:	dc08      	bgt.n	8011e22 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x70>
 8011e10:	f1bb 0f00 	cmp.w	fp, #0
 8011e14:	d121      	bne.n	8011e5a <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0xa8>
 8011e16:	2d00      	cmp	r5, #0
 8011e18:	d0df      	beq.n	8011dda <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x28>
 8011e1a:	782a      	ldrb	r2, [r5, #0]
 8011e1c:	f04f 0b00 	mov.w	fp, #0
 8011e20:	e01d      	b.n	8011e5e <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0xac>
 8011e22:	f1bb 0f00 	cmp.w	fp, #0
 8011e26:	d078      	beq.n	8011f1a <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x168>
 8011e28:	f8bb 2000 	ldrh.w	r2, [fp]
 8011e2c:	f827 2013 	strh.w	r2, [r7, r3, lsl #1]
 8011e30:	f1bb 0f00 	cmp.w	fp, #0
 8011e34:	d002      	beq.n	8011e3c <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x8a>
 8011e36:	f10b 0202 	add.w	r2, fp, #2
 8011e3a:	9209      	str	r2, [sp, #36]	@ 0x24
 8011e3c:	b10d      	cbz	r5, 8011e42 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x90>
 8011e3e:	3501      	adds	r5, #1
 8011e40:	9508      	str	r5, [sp, #32]
 8011e42:	3301      	adds	r3, #1
 8011e44:	930d      	str	r3, [sp, #52]	@ 0x34
 8011e46:	e9dd 5b08 	ldrd	r5, fp, [sp, #32]
 8011e4a:	9b0d      	ldr	r3, [sp, #52]	@ 0x34
 8011e4c:	f1bb 0f00 	cmp.w	fp, #0
 8011e50:	d0d6      	beq.n	8011e00 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x4e>
 8011e52:	f8bb 2000 	ldrh.w	r2, [fp]
 8011e56:	2a00      	cmp	r2, #0
 8011e58:	d1d6      	bne.n	8011e08 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x56>
 8011e5a:	f8bb 2000 	ldrh.w	r2, [fp]
 8011e5e:	2a00      	cmp	r2, #0
 8011e60:	d0bb      	beq.n	8011dda <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x28>
 8011e62:	459a      	cmp	sl, r3
 8011e64:	ddb9      	ble.n	8011dda <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x28>
 8011e66:	f8ad 6032 	strh.w	r6, [sp, #50]	@ 0x32
 8011e6a:	f88d 602d 	strb.w	r6, [sp, #45]	@ 0x2d
 8011e6e:	f88d 602e 	strb.w	r6, [sp, #46]	@ 0x2e
 8011e72:	f88d 602f 	strb.w	r6, [sp, #47]	@ 0x2f
 8011e76:	f88d 6030 	strb.w	r6, [sp, #48]	@ 0x30
 8011e7a:	960e      	str	r6, [sp, #56]	@ 0x38
 8011e7c:	f88d 6031 	strb.w	r6, [sp, #49]	@ 0x31
 8011e80:	960f      	str	r6, [sp, #60]	@ 0x3c
 8011e82:	f1bb 0f00 	cmp.w	fp, #0
 8011e86:	d002      	beq.n	8011e8e <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0xdc>
 8011e88:	f10b 0302 	add.w	r3, fp, #2
 8011e8c:	9309      	str	r3, [sp, #36]	@ 0x24
 8011e8e:	b10d      	cbz	r5, 8011e94 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0xe2>
 8011e90:	1c6b      	adds	r3, r5, #1
 8011e92:	9308      	str	r3, [sp, #32]
 8011e94:	ab0f      	add	r3, sp, #60	@ 0x3c
 8011e96:	9305      	str	r3, [sp, #20]
 8011e98:	f10d 0331 	add.w	r3, sp, #49	@ 0x31
 8011e9c:	9304      	str	r3, [sp, #16]
 8011e9e:	ab0e      	add	r3, sp, #56	@ 0x38
 8011ea0:	9303      	str	r3, [sp, #12]
 8011ea2:	ab0c      	add	r3, sp, #48	@ 0x30
 8011ea4:	9302      	str	r3, [sp, #8]
 8011ea6:	f10d 032f 	add.w	r3, sp, #47	@ 0x2f
 8011eaa:	9301      	str	r3, [sp, #4]
 8011eac:	f10d 032e 	add.w	r3, sp, #46	@ 0x2e
 8011eb0:	9300      	str	r3, [sp, #0]
 8011eb2:	f10d 0232 	add.w	r2, sp, #50	@ 0x32
 8011eb6:	f10d 032d 	add.w	r3, sp, #45	@ 0x2d
 8011eba:	a908      	add	r1, sp, #32
 8011ebc:	a809      	add	r0, sp, #36	@ 0x24
 8011ebe:	f7ff fea8 	bl	8011c12 <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_>
 8011ec2:	9b0e      	ldr	r3, [sp, #56]	@ 0x38
 8011ec4:	2b00      	cmp	r3, #0
 8011ec6:	bfbe      	ittt	lt
 8011ec8:	6823      	ldrlt	r3, [r4, #0]
 8011eca:	ea23 73e3 	biclt.w	r3, r3, r3, asr #31
 8011ece:	930e      	strlt	r3, [sp, #56]	@ 0x38
 8011ed0:	9b0f      	ldr	r3, [sp, #60]	@ 0x3c
 8011ed2:	bfb8      	it	lt
 8011ed4:	3404      	addlt	r4, #4
 8011ed6:	2b00      	cmp	r3, #0
 8011ed8:	bfb8      	it	lt
 8011eda:	6823      	ldrlt	r3, [r4, #0]
 8011edc:	e9dd 2108 	ldrd	r2, r1, [sp, #32]
 8011ee0:	bfbe      	ittt	lt
 8011ee2:	ea23 73e3 	biclt.w	r3, r3, r3, asr #31
 8011ee6:	930f      	strlt	r3, [sp, #60]	@ 0x3c
 8011ee8:	3404      	addlt	r4, #4
 8011eea:	b1d9      	cbz	r1, 8011f24 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x172>
 8011eec:	880b      	ldrh	r3, [r1, #0]
 8011eee:	2b69      	cmp	r3, #105	@ 0x69
 8011ef0:	d01f      	beq.n	8011f32 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x180>
 8011ef2:	d82f      	bhi.n	8011f54 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x1a2>
 8011ef4:	2b58      	cmp	r3, #88	@ 0x58
 8011ef6:	d01c      	beq.n	8011f32 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x180>
 8011ef8:	d818      	bhi.n	8011f2c <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x17a>
 8011efa:	2b25      	cmp	r3, #37	@ 0x25
 8011efc:	d034      	beq.n	8011f68 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x1b6>
 8011efe:	e9cd 5b08 	strd	r5, fp, [sp, #32]
 8011f02:	9b0d      	ldr	r3, [sp, #52]	@ 0x34
 8011f04:	f1bb 0f00 	cmp.w	fp, #0
 8011f08:	f000 80b8 	beq.w	801207c <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x2ca>
 8011f0c:	f8bb 5000 	ldrh.w	r5, [fp]
 8011f10:	f827 5013 	strh.w	r5, [r7, r3, lsl #1]
 8011f14:	3301      	adds	r3, #1
 8011f16:	930d      	str	r3, [sp, #52]	@ 0x34
 8011f18:	e029      	b.n	8011f6e <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x1bc>
 8011f1a:	b10d      	cbz	r5, 8011f20 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x16e>
 8011f1c:	782a      	ldrb	r2, [r5, #0]
 8011f1e:	e785      	b.n	8011e2c <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x7a>
 8011f20:	462a      	mov	r2, r5
 8011f22:	e783      	b.n	8011e2c <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x7a>
 8011f24:	2a00      	cmp	r2, #0
 8011f26:	d0ea      	beq.n	8011efe <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x14c>
 8011f28:	7813      	ldrb	r3, [r2, #0]
 8011f2a:	e7e0      	b.n	8011eee <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x13c>
 8011f2c:	3b63      	subs	r3, #99	@ 0x63
 8011f2e:	2b01      	cmp	r3, #1
 8011f30:	d8e5      	bhi.n	8011efe <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x14c>
 8011f32:	f8cd 9040 	str.w	r9, [sp, #64]	@ 0x40
 8011f36:	b329      	cbz	r1, 8011f84 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x1d2>
 8011f38:	880b      	ldrh	r3, [r1, #0]
 8011f3a:	2b69      	cmp	r3, #105	@ 0x69
 8011f3c:	d063      	beq.n	8012006 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x254>
 8011f3e:	d825      	bhi.n	8011f8c <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x1da>
 8011f40:	2b63      	cmp	r3, #99	@ 0x63
 8011f42:	d038      	beq.n	8011fb6 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x204>
 8011f44:	2b64      	cmp	r3, #100	@ 0x64
 8011f46:	d05e      	beq.n	8012006 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x254>
 8011f48:	2b58      	cmp	r3, #88	@ 0x58
 8011f4a:	d07b      	beq.n	8012044 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x292>
 8011f4c:	f8ad 6044 	strh.w	r6, [sp, #68]	@ 0x44
 8011f50:	4625      	mov	r5, r4
 8011f52:	e036      	b.n	8011fc2 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x210>
 8011f54:	2b73      	cmp	r3, #115	@ 0x73
 8011f56:	d0ec      	beq.n	8011f32 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x180>
 8011f58:	d802      	bhi.n	8011f60 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x1ae>
 8011f5a:	2b6f      	cmp	r3, #111	@ 0x6f
 8011f5c:	d1cf      	bne.n	8011efe <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x14c>
 8011f5e:	e7e8      	b.n	8011f32 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x180>
 8011f60:	2b75      	cmp	r3, #117	@ 0x75
 8011f62:	d0e6      	beq.n	8011f32 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x180>
 8011f64:	2b78      	cmp	r3, #120	@ 0x78
 8011f66:	e7f9      	b.n	8011f5c <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x1aa>
 8011f68:	9a0d      	ldr	r2, [sp, #52]	@ 0x34
 8011f6a:	f827 3012 	strh.w	r3, [r7, r2, lsl #1]
 8011f6e:	9b09      	ldr	r3, [sp, #36]	@ 0x24
 8011f70:	b10b      	cbz	r3, 8011f76 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x1c4>
 8011f72:	3302      	adds	r3, #2
 8011f74:	9309      	str	r3, [sp, #36]	@ 0x24
 8011f76:	9b08      	ldr	r3, [sp, #32]
 8011f78:	2b00      	cmp	r3, #0
 8011f7a:	f43f af2e 	beq.w	8011dda <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x28>
 8011f7e:	3301      	adds	r3, #1
 8011f80:	9308      	str	r3, [sp, #32]
 8011f82:	e72a      	b.n	8011dda <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x28>
 8011f84:	2a00      	cmp	r2, #0
 8011f86:	d0e1      	beq.n	8011f4c <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x19a>
 8011f88:	7813      	ldrb	r3, [r2, #0]
 8011f8a:	e7d6      	b.n	8011f3a <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x188>
 8011f8c:	2b73      	cmp	r3, #115	@ 0x73
 8011f8e:	d036      	beq.n	8011ffe <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x24c>
 8011f90:	d807      	bhi.n	8011fa2 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x1f0>
 8011f92:	2b6f      	cmp	r3, #111	@ 0x6f
 8011f94:	d1da      	bne.n	8011f4c <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x19a>
 8011f96:	9a0d      	ldr	r2, [sp, #52]	@ 0x34
 8011f98:	1d25      	adds	r5, r4, #4
 8011f9a:	eba8 0202 	sub.w	r2, r8, r2
 8011f9e:	2308      	movs	r3, #8
 8011fa0:	e04a      	b.n	8012038 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x286>
 8011fa2:	2b75      	cmp	r3, #117	@ 0x75
 8011fa4:	d043      	beq.n	801202e <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x27c>
 8011fa6:	2b78      	cmp	r3, #120	@ 0x78
 8011fa8:	d1d0      	bne.n	8011f4c <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x19a>
 8011faa:	9a0d      	ldr	r2, [sp, #52]	@ 0x34
 8011fac:	1d25      	adds	r5, r4, #4
 8011fae:	eba8 0202 	sub.w	r2, r8, r2
 8011fb2:	2310      	movs	r3, #16
 8011fb4:	e040      	b.n	8012038 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x286>
 8011fb6:	6823      	ldr	r3, [r4, #0]
 8011fb8:	f8ad 3044 	strh.w	r3, [sp, #68]	@ 0x44
 8011fbc:	1d25      	adds	r5, r4, #4
 8011fbe:	f8ad 6046 	strh.w	r6, [sp, #70]	@ 0x46
 8011fc2:	9b09      	ldr	r3, [sp, #36]	@ 0x24
 8011fc4:	f8bd 1032 	ldrh.w	r1, [sp, #50]	@ 0x32
 8011fc8:	2b00      	cmp	r3, #0
 8011fca:	d052      	beq.n	8012072 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x2c0>
 8011fcc:	881a      	ldrh	r2, [r3, #0]
 8011fce:	f89d 3031 	ldrb.w	r3, [sp, #49]	@ 0x31
 8011fd2:	a80d      	add	r0, sp, #52	@ 0x34
 8011fd4:	9005      	str	r0, [sp, #20]
 8011fd6:	f89d 002d 	ldrb.w	r0, [sp, #45]	@ 0x2d
 8011fda:	9004      	str	r0, [sp, #16]
 8011fdc:	980e      	ldr	r0, [sp, #56]	@ 0x38
 8011fde:	9003      	str	r0, [sp, #12]
 8011fe0:	f89d 0030 	ldrb.w	r0, [sp, #48]	@ 0x30
 8011fe4:	9002      	str	r0, [sp, #8]
 8011fe6:	980f      	ldr	r0, [sp, #60]	@ 0x3c
 8011fe8:	9001      	str	r0, [sp, #4]
 8011fea:	f89d 002f 	ldrb.w	r0, [sp, #47]	@ 0x2f
 8011fee:	9000      	str	r0, [sp, #0]
 8011ff0:	e9cd 8706 	strd	r8, r7, [sp, #24]
 8011ff4:	a810      	add	r0, sp, #64	@ 0x40
 8011ff6:	f7ff fd49 	bl	8011a8c <_ZN8touchgfx7Unicode13composeStringERPKtttbbibibRitPt>
 8011ffa:	462c      	mov	r4, r5
 8011ffc:	e7b7      	b.n	8011f6e <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x1bc>
 8011ffe:	6823      	ldr	r3, [r4, #0]
 8012000:	1d25      	adds	r5, r4, #4
 8012002:	9310      	str	r3, [sp, #64]	@ 0x40
 8012004:	e7dd      	b.n	8011fc2 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x210>
 8012006:	9a0d      	ldr	r2, [sp, #52]	@ 0x34
 8012008:	6820      	ldr	r0, [r4, #0]
 801200a:	eba8 0202 	sub.w	r2, r8, r2
 801200e:	230a      	movs	r3, #10
 8012010:	b292      	uxth	r2, r2
 8012012:	4649      	mov	r1, r9
 8012014:	f7ff fcf0 	bl	80119f8 <_ZN8touchgfx7Unicode4itoaElPtti.part.2>
 8012018:	f8bd 3044 	ldrh.w	r3, [sp, #68]	@ 0x44
 801201c:	2b2d      	cmp	r3, #45	@ 0x2d
 801201e:	f104 0504 	add.w	r5, r4, #4
 8012022:	d1ce      	bne.n	8011fc2 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x210>
 8012024:	f8ad 3032 	strh.w	r3, [sp, #50]	@ 0x32
 8012028:	9b10      	ldr	r3, [sp, #64]	@ 0x40
 801202a:	3302      	adds	r3, #2
 801202c:	e7e9      	b.n	8012002 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x250>
 801202e:	9a0d      	ldr	r2, [sp, #52]	@ 0x34
 8012030:	1d25      	adds	r5, r4, #4
 8012032:	eba8 0202 	sub.w	r2, r8, r2
 8012036:	230a      	movs	r3, #10
 8012038:	b292      	uxth	r2, r2
 801203a:	4649      	mov	r1, r9
 801203c:	6820      	ldr	r0, [r4, #0]
 801203e:	f7ff fd07 	bl	8011a50 <_ZN8touchgfx7Unicode4utoaEmPtti.part.3>
 8012042:	e7be      	b.n	8011fc2 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x210>
 8012044:	9a0d      	ldr	r2, [sp, #52]	@ 0x34
 8012046:	6820      	ldr	r0, [r4, #0]
 8012048:	eba8 0202 	sub.w	r2, r8, r2
 801204c:	b292      	uxth	r2, r2
 801204e:	2310      	movs	r3, #16
 8012050:	4649      	mov	r1, r9
 8012052:	f7ff fcfd 	bl	8011a50 <_ZN8touchgfx7Unicode4utoaEmPtti.part.3>
 8012056:	1d25      	adds	r5, r4, #4
 8012058:	f10d 0242 	add.w	r2, sp, #66	@ 0x42
 801205c:	f832 3f02 	ldrh.w	r3, [r2, #2]!
 8012060:	2b00      	cmp	r3, #0
 8012062:	d0ae      	beq.n	8011fc2 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x210>
 8012064:	f1a3 0161 	sub.w	r1, r3, #97	@ 0x61
 8012068:	2919      	cmp	r1, #25
 801206a:	d8f7      	bhi.n	801205c <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x2aa>
 801206c:	3b20      	subs	r3, #32
 801206e:	8013      	strh	r3, [r2, #0]
 8012070:	e7f4      	b.n	801205c <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x2aa>
 8012072:	9a08      	ldr	r2, [sp, #32]
 8012074:	2a00      	cmp	r2, #0
 8012076:	d0aa      	beq.n	8011fce <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x21c>
 8012078:	7812      	ldrb	r2, [r2, #0]
 801207a:	e7a8      	b.n	8011fce <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x21c>
 801207c:	2d00      	cmp	r5, #0
 801207e:	f43f af47 	beq.w	8011f10 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x15e>
 8012082:	782d      	ldrb	r5, [r5, #0]
 8012084:	e744      	b.n	8011f10 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x15e>

08012086 <_ZN8touchgfx7Unicode9vsnprintfEPttPKcSt9__va_list>:
 8012086:	b507      	push	{r0, r1, r2, lr}
 8012088:	9300      	str	r3, [sp, #0]
 801208a:	4613      	mov	r3, r2
 801208c:	2200      	movs	r2, #0
 801208e:	f7ff fe90 	bl	8011db2 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list>
 8012092:	b003      	add	sp, #12
 8012094:	f85d fb04 	ldr.w	pc, [sp], #4

08012098 <_ZN8touchgfx7Unicode8snprintfEPttPKcz>:
 8012098:	b40c      	push	{r2, r3}
 801209a:	b507      	push	{r0, r1, r2, lr}
 801209c:	ab04      	add	r3, sp, #16
 801209e:	f853 2b04 	ldr.w	r2, [r3], #4
 80120a2:	9301      	str	r3, [sp, #4]
 80120a4:	f7ff ffef 	bl	8012086 <_ZN8touchgfx7Unicode9vsnprintfEPttPKcSt9__va_list>
 80120a8:	b003      	add	sp, #12
 80120aa:	f85d eb04 	ldr.w	lr, [sp], #4
 80120ae:	b002      	add	sp, #8
 80120b0:	4770      	bx	lr
	...

080120b4 <_ZN8touchgfx11FontManager15setFontProviderEPNS_12FontProviderE>:
 80120b4:	4b01      	ldr	r3, [pc, #4]	@ (80120bc <_ZN8touchgfx11FontManager15setFontProviderEPNS_12FontProviderE+0x8>)
 80120b6:	6018      	str	r0, [r3, #0]
 80120b8:	4770      	bx	lr
 80120ba:	bf00      	nop
 80120bc:	20002cbc 	.word	0x20002cbc

080120c0 <_ZN8touchgfx6Bitmap15isDynamicBitmapEt>:
 80120c0:	4b06      	ldr	r3, [pc, #24]	@ (80120dc <_ZN8touchgfx6Bitmap15isDynamicBitmapEt+0x1c>)
 80120c2:	881a      	ldrh	r2, [r3, #0]
 80120c4:	4282      	cmp	r2, r0
 80120c6:	d807      	bhi.n	80120d8 <_ZN8touchgfx6Bitmap15isDynamicBitmapEt+0x18>
 80120c8:	4b05      	ldr	r3, [pc, #20]	@ (80120e0 <_ZN8touchgfx6Bitmap15isDynamicBitmapEt+0x20>)
 80120ca:	881b      	ldrh	r3, [r3, #0]
 80120cc:	4413      	add	r3, r2
 80120ce:	4298      	cmp	r0, r3
 80120d0:	bfac      	ite	ge
 80120d2:	2000      	movge	r0, #0
 80120d4:	2001      	movlt	r0, #1
 80120d6:	4770      	bx	lr
 80120d8:	2000      	movs	r0, #0
 80120da:	4770      	bx	lr
 80120dc:	20002cdc 	.word	0x20002cdc
 80120e0:	20002ce0 	.word	0x20002ce0

080120e4 <_ZN8touchgfx6Bitmap23dynamicBitmapGetAddressEt>:
 80120e4:	b508      	push	{r3, lr}
 80120e6:	4601      	mov	r1, r0
 80120e8:	f7ff ffea 	bl	80120c0 <_ZN8touchgfx6Bitmap15isDynamicBitmapEt>
 80120ec:	b118      	cbz	r0, 80120f6 <_ZN8touchgfx6Bitmap23dynamicBitmapGetAddressEt+0x12>
 80120ee:	4b02      	ldr	r3, [pc, #8]	@ (80120f8 <_ZN8touchgfx6Bitmap23dynamicBitmapGetAddressEt+0x14>)
 80120f0:	681b      	ldr	r3, [r3, #0]
 80120f2:	f853 0021 	ldr.w	r0, [r3, r1, lsl #2]
 80120f6:	bd08      	pop	{r3, pc}
 80120f8:	20002cc0 	.word	0x20002cc0

080120fc <_ZN8touchgfx6Bitmap10clearCacheEv>:
 80120fc:	b5f0      	push	{r4, r5, r6, r7, lr}
 80120fe:	4c24      	ldr	r4, [pc, #144]	@ (8012190 <_ZN8touchgfx6Bitmap10clearCacheEv+0x94>)
 8012100:	6823      	ldr	r3, [r4, #0]
 8012102:	2b00      	cmp	r3, #0
 8012104:	d042      	beq.n	801218c <_ZN8touchgfx6Bitmap10clearCacheEv+0x90>
 8012106:	4a23      	ldr	r2, [pc, #140]	@ (8012194 <_ZN8touchgfx6Bitmap10clearCacheEv+0x98>)
 8012108:	4d23      	ldr	r5, [pc, #140]	@ (8012198 <_ZN8touchgfx6Bitmap10clearCacheEv+0x9c>)
 801210a:	8811      	ldrh	r1, [r2, #0]
 801210c:	f8b5 c000 	ldrh.w	ip, [r5]
 8012110:	4822      	ldr	r0, [pc, #136]	@ (801219c <_ZN8touchgfx6Bitmap10clearCacheEv+0xa0>)
 8012112:	4461      	add	r1, ip
 8012114:	1c4a      	adds	r2, r1, #1
 8012116:	f022 0201 	bic.w	r2, r2, #1
 801211a:	008f      	lsls	r7, r1, #2
 801211c:	0412      	lsls	r2, r2, #16
 801211e:	19de      	adds	r6, r3, r7
 8012120:	0c12      	lsrs	r2, r2, #16
 8012122:	eb07 0742 	add.w	r7, r7, r2, lsl #1
 8012126:	6006      	str	r6, [r0, #0]
 8012128:	4e1d      	ldr	r6, [pc, #116]	@ (80121a0 <_ZN8touchgfx6Bitmap10clearCacheEv+0xa4>)
 801212a:	19da      	adds	r2, r3, r7
 801212c:	6032      	str	r2, [r6, #0]
 801212e:	220e      	movs	r2, #14
 8012130:	fb02 f20c 	mul.w	r2, r2, ip
 8012134:	3203      	adds	r2, #3
 8012136:	f022 0203 	bic.w	r2, r2, #3
 801213a:	443a      	add	r2, r7
 801213c:	4f19      	ldr	r7, [pc, #100]	@ (80121a4 <_ZN8touchgfx6Bitmap10clearCacheEv+0xa8>)
 801213e:	4413      	add	r3, r2
 8012140:	603b      	str	r3, [r7, #0]
 8012142:	4f19      	ldr	r7, [pc, #100]	@ (80121a8 <_ZN8touchgfx6Bitmap10clearCacheEv+0xac>)
 8012144:	2300      	movs	r3, #0
 8012146:	803b      	strh	r3, [r7, #0]
 8012148:	4f18      	ldr	r7, [pc, #96]	@ (80121ac <_ZN8touchgfx6Bitmap10clearCacheEv+0xb0>)
 801214a:	683f      	ldr	r7, [r7, #0]
 801214c:	1aba      	subs	r2, r7, r2
 801214e:	4f18      	ldr	r7, [pc, #96]	@ (80121b0 <_ZN8touchgfx6Bitmap10clearCacheEv+0xb4>)
 8012150:	603a      	str	r2, [r7, #0]
 8012152:	4a18      	ldr	r2, [pc, #96]	@ (80121b4 <_ZN8touchgfx6Bitmap10clearCacheEv+0xb8>)
 8012154:	469c      	mov	ip, r3
 8012156:	8013      	strh	r3, [r2, #0]
 8012158:	f64f 77ff 	movw	r7, #65535	@ 0xffff
 801215c:	428b      	cmp	r3, r1
 801215e:	d10d      	bne.n	801217c <_ZN8touchgfx6Bitmap10clearCacheEv+0x80>
 8012160:	882d      	ldrh	r5, [r5, #0]
 8012162:	6830      	ldr	r0, [r6, #0]
 8012164:	2300      	movs	r3, #0
 8012166:	240e      	movs	r4, #14
 8012168:	429d      	cmp	r5, r3
 801216a:	d90f      	bls.n	801218c <_ZN8touchgfx6Bitmap10clearCacheEv+0x90>
 801216c:	fb04 0203 	mla	r2, r4, r3, r0
 8012170:	3301      	adds	r3, #1
 8012172:	7b11      	ldrb	r1, [r2, #12]
 8012174:	f36f 1145 	bfc	r1, #5, #1
 8012178:	7311      	strb	r1, [r2, #12]
 801217a:	e7f5      	b.n	8012168 <_ZN8touchgfx6Bitmap10clearCacheEv+0x6c>
 801217c:	6822      	ldr	r2, [r4, #0]
 801217e:	f842 c023 	str.w	ip, [r2, r3, lsl #2]
 8012182:	6802      	ldr	r2, [r0, #0]
 8012184:	f822 7013 	strh.w	r7, [r2, r3, lsl #1]
 8012188:	3301      	adds	r3, #1
 801218a:	e7e7      	b.n	801215c <_ZN8touchgfx6Bitmap10clearCacheEv+0x60>
 801218c:	bdf0      	pop	{r4, r5, r6, r7, pc}
 801218e:	bf00      	nop
 8012190:	20002cc0 	.word	0x20002cc0
 8012194:	20002cdc 	.word	0x20002cdc
 8012198:	20002ce0 	.word	0x20002ce0
 801219c:	20002cd4 	.word	0x20002cd4
 80121a0:	20002cc4 	.word	0x20002cc4
 80121a4:	20002ccc 	.word	0x20002ccc
 80121a8:	20002cde 	.word	0x20002cde
 80121ac:	20002cc8 	.word	0x20002cc8
 80121b0:	20002cd8 	.word	0x20002cd8
 80121b4:	20002cd0 	.word	0x20002cd0

080121b8 <_ZN8touchgfx6Bitmap8setCacheEPtmm>:
 80121b8:	4b06      	ldr	r3, [pc, #24]	@ (80121d4 <_ZN8touchgfx6Bitmap8setCacheEPtmm+0x1c>)
 80121ba:	681b      	ldr	r3, [r3, #0]
 80121bc:	b943      	cbnz	r3, 80121d0 <_ZN8touchgfx6Bitmap8setCacheEPtmm+0x18>
 80121be:	b139      	cbz	r1, 80121d0 <_ZN8touchgfx6Bitmap8setCacheEPtmm+0x18>
 80121c0:	4b05      	ldr	r3, [pc, #20]	@ (80121d8 <_ZN8touchgfx6Bitmap8setCacheEPtmm+0x20>)
 80121c2:	801a      	strh	r2, [r3, #0]
 80121c4:	4b05      	ldr	r3, [pc, #20]	@ (80121dc <_ZN8touchgfx6Bitmap8setCacheEPtmm+0x24>)
 80121c6:	6019      	str	r1, [r3, #0]
 80121c8:	4b05      	ldr	r3, [pc, #20]	@ (80121e0 <_ZN8touchgfx6Bitmap8setCacheEPtmm+0x28>)
 80121ca:	6018      	str	r0, [r3, #0]
 80121cc:	f7ff bf96 	b.w	80120fc <_ZN8touchgfx6Bitmap10clearCacheEv>
 80121d0:	4770      	bx	lr
 80121d2:	bf00      	nop
 80121d4:	20002ccc 	.word	0x20002ccc
 80121d8:	20002ce0 	.word	0x20002ce0
 80121dc:	20002cc8 	.word	0x20002cc8
 80121e0:	20002cc0 	.word	0x20002cc0

080121e4 <_ZN8touchgfx6Bitmap22registerBitmapDatabaseEPKNS0_10BitmapDataEtPtmm>:
 80121e4:	b470      	push	{r4, r5, r6}
 80121e6:	4c07      	ldr	r4, [pc, #28]	@ (8012204 <_ZN8touchgfx6Bitmap22registerBitmapDatabaseEPKNS0_10BitmapDataEtPtmm+0x20>)
 80121e8:	6826      	ldr	r6, [r4, #0]
 80121ea:	4605      	mov	r5, r0
 80121ec:	4610      	mov	r0, r2
 80121ee:	9a03      	ldr	r2, [sp, #12]
 80121f0:	b936      	cbnz	r6, 8012200 <_ZN8touchgfx6Bitmap22registerBitmapDatabaseEPKNS0_10BitmapDataEtPtmm+0x1c>
 80121f2:	6025      	str	r5, [r4, #0]
 80121f4:	4c04      	ldr	r4, [pc, #16]	@ (8012208 <_ZN8touchgfx6Bitmap22registerBitmapDatabaseEPKNS0_10BitmapDataEtPtmm+0x24>)
 80121f6:	8021      	strh	r1, [r4, #0]
 80121f8:	bc70      	pop	{r4, r5, r6}
 80121fa:	4619      	mov	r1, r3
 80121fc:	f7ff bfdc 	b.w	80121b8 <_ZN8touchgfx6Bitmap8setCacheEPtmm>
 8012200:	bc70      	pop	{r4, r5, r6}
 8012202:	4770      	bx	lr
 8012204:	20002ce4 	.word	0x20002ce4
 8012208:	20002cdc 	.word	0x20002cdc

0801220c <_ZNK8touchgfx6Bitmap8getWidthEv>:
 801220c:	4a12      	ldr	r2, [pc, #72]	@ (8012258 <_ZNK8touchgfx6Bitmap8getWidthEv+0x4c>)
 801220e:	8803      	ldrh	r3, [r0, #0]
 8012210:	8812      	ldrh	r2, [r2, #0]
 8012212:	4293      	cmp	r3, r2
 8012214:	d207      	bcs.n	8012226 <_ZNK8touchgfx6Bitmap8getWidthEv+0x1a>
 8012216:	4a11      	ldr	r2, [pc, #68]	@ (801225c <_ZNK8touchgfx6Bitmap8getWidthEv+0x50>)
 8012218:	6812      	ldr	r2, [r2, #0]
 801221a:	2114      	movs	r1, #20
 801221c:	fb01 2303 	mla	r3, r1, r3, r2
 8012220:	f9b3 0008 	ldrsh.w	r0, [r3, #8]
 8012224:	4770      	bx	lr
 8012226:	490e      	ldr	r1, [pc, #56]	@ (8012260 <_ZNK8touchgfx6Bitmap8getWidthEv+0x54>)
 8012228:	8809      	ldrh	r1, [r1, #0]
 801222a:	4411      	add	r1, r2
 801222c:	428b      	cmp	r3, r1
 801222e:	da04      	bge.n	801223a <_ZNK8touchgfx6Bitmap8getWidthEv+0x2e>
 8012230:	1a9b      	subs	r3, r3, r2
 8012232:	4a0c      	ldr	r2, [pc, #48]	@ (8012264 <_ZNK8touchgfx6Bitmap8getWidthEv+0x58>)
 8012234:	210e      	movs	r1, #14
 8012236:	6812      	ldr	r2, [r2, #0]
 8012238:	e7f0      	b.n	801221c <_ZNK8touchgfx6Bitmap8getWidthEv+0x10>
 801223a:	f64f 72fe 	movw	r2, #65534	@ 0xfffe
 801223e:	4293      	cmp	r3, r2
 8012240:	d108      	bne.n	8012254 <_ZNK8touchgfx6Bitmap8getWidthEv+0x48>
 8012242:	4b09      	ldr	r3, [pc, #36]	@ (8012268 <_ZNK8touchgfx6Bitmap8getWidthEv+0x5c>)
 8012244:	781b      	ldrb	r3, [r3, #0]
 8012246:	b91b      	cbnz	r3, 8012250 <_ZNK8touchgfx6Bitmap8getWidthEv+0x44>
 8012248:	4b08      	ldr	r3, [pc, #32]	@ (801226c <_ZNK8touchgfx6Bitmap8getWidthEv+0x60>)
 801224a:	f9b3 0000 	ldrsh.w	r0, [r3]
 801224e:	4770      	bx	lr
 8012250:	4b07      	ldr	r3, [pc, #28]	@ (8012270 <_ZNK8touchgfx6Bitmap8getWidthEv+0x64>)
 8012252:	e7fa      	b.n	801224a <_ZNK8touchgfx6Bitmap8getWidthEv+0x3e>
 8012254:	2000      	movs	r0, #0
 8012256:	4770      	bx	lr
 8012258:	20002cdc 	.word	0x20002cdc
 801225c:	20002ce4 	.word	0x20002ce4
 8012260:	20002ce0 	.word	0x20002ce0
 8012264:	20002cc4 	.word	0x20002cc4
 8012268:	20002c54 	.word	0x20002c54
 801226c:	20002c56 	.word	0x20002c56
 8012270:	20002c58 	.word	0x20002c58

08012274 <_ZNK8touchgfx6Bitmap9getHeightEv>:
 8012274:	4a12      	ldr	r2, [pc, #72]	@ (80122c0 <_ZNK8touchgfx6Bitmap9getHeightEv+0x4c>)
 8012276:	8803      	ldrh	r3, [r0, #0]
 8012278:	8812      	ldrh	r2, [r2, #0]
 801227a:	4293      	cmp	r3, r2
 801227c:	d207      	bcs.n	801228e <_ZNK8touchgfx6Bitmap9getHeightEv+0x1a>
 801227e:	4a11      	ldr	r2, [pc, #68]	@ (80122c4 <_ZNK8touchgfx6Bitmap9getHeightEv+0x50>)
 8012280:	6812      	ldr	r2, [r2, #0]
 8012282:	2114      	movs	r1, #20
 8012284:	fb01 2303 	mla	r3, r1, r3, r2
 8012288:	f9b3 000a 	ldrsh.w	r0, [r3, #10]
 801228c:	4770      	bx	lr
 801228e:	490e      	ldr	r1, [pc, #56]	@ (80122c8 <_ZNK8touchgfx6Bitmap9getHeightEv+0x54>)
 8012290:	8809      	ldrh	r1, [r1, #0]
 8012292:	4411      	add	r1, r2
 8012294:	428b      	cmp	r3, r1
 8012296:	da04      	bge.n	80122a2 <_ZNK8touchgfx6Bitmap9getHeightEv+0x2e>
 8012298:	1a9b      	subs	r3, r3, r2
 801229a:	4a0c      	ldr	r2, [pc, #48]	@ (80122cc <_ZNK8touchgfx6Bitmap9getHeightEv+0x58>)
 801229c:	210e      	movs	r1, #14
 801229e:	6812      	ldr	r2, [r2, #0]
 80122a0:	e7f0      	b.n	8012284 <_ZNK8touchgfx6Bitmap9getHeightEv+0x10>
 80122a2:	f64f 72fe 	movw	r2, #65534	@ 0xfffe
 80122a6:	4293      	cmp	r3, r2
 80122a8:	d108      	bne.n	80122bc <_ZNK8touchgfx6Bitmap9getHeightEv+0x48>
 80122aa:	4b09      	ldr	r3, [pc, #36]	@ (80122d0 <_ZNK8touchgfx6Bitmap9getHeightEv+0x5c>)
 80122ac:	781b      	ldrb	r3, [r3, #0]
 80122ae:	b91b      	cbnz	r3, 80122b8 <_ZNK8touchgfx6Bitmap9getHeightEv+0x44>
 80122b0:	4b08      	ldr	r3, [pc, #32]	@ (80122d4 <_ZNK8touchgfx6Bitmap9getHeightEv+0x60>)
 80122b2:	f9b3 0000 	ldrsh.w	r0, [r3]
 80122b6:	4770      	bx	lr
 80122b8:	4b07      	ldr	r3, [pc, #28]	@ (80122d8 <_ZNK8touchgfx6Bitmap9getHeightEv+0x64>)
 80122ba:	e7fa      	b.n	80122b2 <_ZNK8touchgfx6Bitmap9getHeightEv+0x3e>
 80122bc:	2000      	movs	r0, #0
 80122be:	4770      	bx	lr
 80122c0:	20002cdc 	.word	0x20002cdc
 80122c4:	20002ce4 	.word	0x20002ce4
 80122c8:	20002ce0 	.word	0x20002ce0
 80122cc:	20002cc4 	.word	0x20002cc4
 80122d0:	20002c54 	.word	0x20002c54
 80122d4:	20002c58 	.word	0x20002c58
 80122d8:	20002c56 	.word	0x20002c56

080122dc <_ZNK8touchgfx6Bitmap12getSolidRectEv>:
 80122dc:	b530      	push	{r4, r5, lr}
 80122de:	4a22      	ldr	r2, [pc, #136]	@ (8012368 <_ZNK8touchgfx6Bitmap12getSolidRectEv+0x8c>)
 80122e0:	880b      	ldrh	r3, [r1, #0]
 80122e2:	8812      	ldrh	r2, [r2, #0]
 80122e4:	4293      	cmp	r3, r2
 80122e6:	d213      	bcs.n	8012310 <_ZNK8touchgfx6Bitmap12getSolidRectEv+0x34>
 80122e8:	4a20      	ldr	r2, [pc, #128]	@ (801236c <_ZNK8touchgfx6Bitmap12getSolidRectEv+0x90>)
 80122ea:	6812      	ldr	r2, [r2, #0]
 80122ec:	2114      	movs	r1, #20
 80122ee:	fb01 2303 	mla	r3, r1, r3, r2
 80122f2:	8a1a      	ldrh	r2, [r3, #16]
 80122f4:	f9b3 400c 	ldrsh.w	r4, [r3, #12]
 80122f8:	f9b3 100e 	ldrsh.w	r1, [r3, #14]
 80122fc:	8a5b      	ldrh	r3, [r3, #18]
 80122fe:	8004      	strh	r4, [r0, #0]
 8012300:	f3c2 020c 	ubfx	r2, r2, #0, #13
 8012304:	f3c3 030c 	ubfx	r3, r3, #0, #13
 8012308:	8041      	strh	r1, [r0, #2]
 801230a:	8082      	strh	r2, [r0, #4]
 801230c:	80c3      	strh	r3, [r0, #6]
 801230e:	e024      	b.n	801235a <_ZNK8touchgfx6Bitmap12getSolidRectEv+0x7e>
 8012310:	4917      	ldr	r1, [pc, #92]	@ (8012370 <_ZNK8touchgfx6Bitmap12getSolidRectEv+0x94>)
 8012312:	8809      	ldrh	r1, [r1, #0]
 8012314:	4411      	add	r1, r2
 8012316:	428b      	cmp	r3, r1
 8012318:	da10      	bge.n	801233c <_ZNK8touchgfx6Bitmap12getSolidRectEv+0x60>
 801231a:	1a9b      	subs	r3, r3, r2
 801231c:	220e      	movs	r2, #14
 801231e:	4353      	muls	r3, r2
 8012320:	4a14      	ldr	r2, [pc, #80]	@ (8012374 <_ZNK8touchgfx6Bitmap12getSolidRectEv+0x98>)
 8012322:	6811      	ldr	r1, [r2, #0]
 8012324:	18ca      	adds	r2, r1, r3
 8012326:	5ecd      	ldrsh	r5, [r1, r3]
 8012328:	f9b2 4002 	ldrsh.w	r4, [r2, #2]
 801232c:	f9b2 1004 	ldrsh.w	r1, [r2, #4]
 8012330:	f9b2 3006 	ldrsh.w	r3, [r2, #6]
 8012334:	8005      	strh	r5, [r0, #0]
 8012336:	8044      	strh	r4, [r0, #2]
 8012338:	8081      	strh	r1, [r0, #4]
 801233a:	e7e7      	b.n	801230c <_ZNK8touchgfx6Bitmap12getSolidRectEv+0x30>
 801233c:	f64f 72fe 	movw	r2, #65534	@ 0xfffe
 8012340:	4293      	cmp	r3, r2
 8012342:	d10b      	bne.n	801235c <_ZNK8touchgfx6Bitmap12getSolidRectEv+0x80>
 8012344:	4b0c      	ldr	r3, [pc, #48]	@ (8012378 <_ZNK8touchgfx6Bitmap12getSolidRectEv+0x9c>)
 8012346:	f9b3 1000 	ldrsh.w	r1, [r3]
 801234a:	4b0c      	ldr	r3, [pc, #48]	@ (801237c <_ZNK8touchgfx6Bitmap12getSolidRectEv+0xa0>)
 801234c:	8081      	strh	r1, [r0, #4]
 801234e:	f9b3 2000 	ldrsh.w	r2, [r3]
 8012352:	80c2      	strh	r2, [r0, #6]
 8012354:	2300      	movs	r3, #0
 8012356:	8003      	strh	r3, [r0, #0]
 8012358:	8043      	strh	r3, [r0, #2]
 801235a:	bd30      	pop	{r4, r5, pc}
 801235c:	2300      	movs	r3, #0
 801235e:	8003      	strh	r3, [r0, #0]
 8012360:	8043      	strh	r3, [r0, #2]
 8012362:	8083      	strh	r3, [r0, #4]
 8012364:	e7d2      	b.n	801230c <_ZNK8touchgfx6Bitmap12getSolidRectEv+0x30>
 8012366:	bf00      	nop
 8012368:	20002cdc 	.word	0x20002cdc
 801236c:	20002ce4 	.word	0x20002ce4
 8012370:	20002ce0 	.word	0x20002ce0
 8012374:	20002cc4 	.word	0x20002cc4
 8012378:	20002c50 	.word	0x20002c50
 801237c:	20002c52 	.word	0x20002c52

08012380 <_ZNK8touchgfx6Bitmap20hasTransparentPixelsEv>:
 8012380:	4a17      	ldr	r2, [pc, #92]	@ (80123e0 <_ZNK8touchgfx6Bitmap20hasTransparentPixelsEv+0x60>)
 8012382:	8803      	ldrh	r3, [r0, #0]
 8012384:	8812      	ldrh	r2, [r2, #0]
 8012386:	4293      	cmp	r3, r2
 8012388:	d213      	bcs.n	80123b2 <_ZNK8touchgfx6Bitmap20hasTransparentPixelsEv+0x32>
 801238a:	4a16      	ldr	r2, [pc, #88]	@ (80123e4 <_ZNK8touchgfx6Bitmap20hasTransparentPixelsEv+0x64>)
 801238c:	6812      	ldr	r2, [r2, #0]
 801238e:	2114      	movs	r1, #20
 8012390:	fb01 2303 	mla	r3, r1, r3, r2
 8012394:	8a1a      	ldrh	r2, [r3, #16]
 8012396:	8919      	ldrh	r1, [r3, #8]
 8012398:	f3c2 020c 	ubfx	r2, r2, #0, #13
 801239c:	428a      	cmp	r2, r1
 801239e:	db1d      	blt.n	80123dc <_ZNK8touchgfx6Bitmap20hasTransparentPixelsEv+0x5c>
 80123a0:	8a58      	ldrh	r0, [r3, #18]
 80123a2:	f3c0 000c 	ubfx	r0, r0, #0, #13
 80123a6:	895b      	ldrh	r3, [r3, #10]
 80123a8:	4298      	cmp	r0, r3
 80123aa:	bfac      	ite	ge
 80123ac:	2000      	movge	r0, #0
 80123ae:	2001      	movlt	r0, #1
 80123b0:	4770      	bx	lr
 80123b2:	490d      	ldr	r1, [pc, #52]	@ (80123e8 <_ZNK8touchgfx6Bitmap20hasTransparentPixelsEv+0x68>)
 80123b4:	8809      	ldrh	r1, [r1, #0]
 80123b6:	4411      	add	r1, r2
 80123b8:	428b      	cmp	r3, r1
 80123ba:	da0d      	bge.n	80123d8 <_ZNK8touchgfx6Bitmap20hasTransparentPixelsEv+0x58>
 80123bc:	1a9b      	subs	r3, r3, r2
 80123be:	4a0b      	ldr	r2, [pc, #44]	@ (80123ec <_ZNK8touchgfx6Bitmap20hasTransparentPixelsEv+0x6c>)
 80123c0:	6812      	ldr	r2, [r2, #0]
 80123c2:	210e      	movs	r1, #14
 80123c4:	fb01 2303 	mla	r3, r1, r3, r2
 80123c8:	f9b3 1004 	ldrsh.w	r1, [r3, #4]
 80123cc:	891a      	ldrh	r2, [r3, #8]
 80123ce:	4291      	cmp	r1, r2
 80123d0:	db04      	blt.n	80123dc <_ZNK8touchgfx6Bitmap20hasTransparentPixelsEv+0x5c>
 80123d2:	f9b3 0006 	ldrsh.w	r0, [r3, #6]
 80123d6:	e7e6      	b.n	80123a6 <_ZNK8touchgfx6Bitmap20hasTransparentPixelsEv+0x26>
 80123d8:	2000      	movs	r0, #0
 80123da:	4770      	bx	lr
 80123dc:	2001      	movs	r0, #1
 80123de:	4770      	bx	lr
 80123e0:	20002cdc 	.word	0x20002cdc
 80123e4:	20002ce4 	.word	0x20002ce4
 80123e8:	20002ce0 	.word	0x20002ce0
 80123ec:	20002cc4 	.word	0x20002cc4

080123f0 <_ZNK8touchgfx6Bitmap7getDataEv>:
 80123f0:	4a12      	ldr	r2, [pc, #72]	@ (801243c <_ZNK8touchgfx6Bitmap7getDataEv+0x4c>)
 80123f2:	8803      	ldrh	r3, [r0, #0]
 80123f4:	8811      	ldrh	r1, [r2, #0]
 80123f6:	428b      	cmp	r3, r1
 80123f8:	d20b      	bcs.n	8012412 <_ZNK8touchgfx6Bitmap7getDataEv+0x22>
 80123fa:	4a11      	ldr	r2, [pc, #68]	@ (8012440 <_ZNK8touchgfx6Bitmap7getDataEv+0x50>)
 80123fc:	6812      	ldr	r2, [r2, #0]
 80123fe:	b112      	cbz	r2, 8012406 <_ZNK8touchgfx6Bitmap7getDataEv+0x16>
 8012400:	f852 0023 	ldr.w	r0, [r2, r3, lsl #2]
 8012404:	b9c0      	cbnz	r0, 8012438 <_ZNK8touchgfx6Bitmap7getDataEv+0x48>
 8012406:	4a0f      	ldr	r2, [pc, #60]	@ (8012444 <_ZNK8touchgfx6Bitmap7getDataEv+0x54>)
 8012408:	6811      	ldr	r1, [r2, #0]
 801240a:	2214      	movs	r2, #20
 801240c:	4353      	muls	r3, r2
 801240e:	58c8      	ldr	r0, [r1, r3]
 8012410:	4770      	bx	lr
 8012412:	4a0d      	ldr	r2, [pc, #52]	@ (8012448 <_ZNK8touchgfx6Bitmap7getDataEv+0x58>)
 8012414:	8812      	ldrh	r2, [r2, #0]
 8012416:	440a      	add	r2, r1
 8012418:	4293      	cmp	r3, r2
 801241a:	da04      	bge.n	8012426 <_ZNK8touchgfx6Bitmap7getDataEv+0x36>
 801241c:	4a08      	ldr	r2, [pc, #32]	@ (8012440 <_ZNK8touchgfx6Bitmap7getDataEv+0x50>)
 801241e:	6812      	ldr	r2, [r2, #0]
 8012420:	f852 0023 	ldr.w	r0, [r2, r3, lsl #2]
 8012424:	4770      	bx	lr
 8012426:	f64f 72fe 	movw	r2, #65534	@ 0xfffe
 801242a:	4293      	cmp	r3, r2
 801242c:	d103      	bne.n	8012436 <_ZNK8touchgfx6Bitmap7getDataEv+0x46>
 801242e:	4b07      	ldr	r3, [pc, #28]	@ (801244c <_ZNK8touchgfx6Bitmap7getDataEv+0x5c>)
 8012430:	681b      	ldr	r3, [r3, #0]
 8012432:	6c58      	ldr	r0, [r3, #68]	@ 0x44
 8012434:	4770      	bx	lr
 8012436:	2000      	movs	r0, #0
 8012438:	4770      	bx	lr
 801243a:	bf00      	nop
 801243c:	20002cdc 	.word	0x20002cdc
 8012440:	20002cc0 	.word	0x20002cc0
 8012444:	20002ce4 	.word	0x20002ce4
 8012448:	20002ce0 	.word	0x20002ce0
 801244c:	20002c5c 	.word	0x20002c5c

08012450 <_ZNK8touchgfx6Bitmap12getExtraDataEv>:
 8012450:	4b24      	ldr	r3, [pc, #144]	@ (80124e4 <_ZNK8touchgfx6Bitmap12getExtraDataEv+0x94>)
 8012452:	8802      	ldrh	r2, [r0, #0]
 8012454:	8818      	ldrh	r0, [r3, #0]
 8012456:	4282      	cmp	r2, r0
 8012458:	d221      	bcs.n	801249e <_ZNK8touchgfx6Bitmap12getExtraDataEv+0x4e>
 801245a:	4b23      	ldr	r3, [pc, #140]	@ (80124e8 <_ZNK8touchgfx6Bitmap12getExtraDataEv+0x98>)
 801245c:	6819      	ldr	r1, [r3, #0]
 801245e:	2314      	movs	r3, #20
 8012460:	fb03 1302 	mla	r3, r3, r2, r1
 8012464:	6858      	ldr	r0, [r3, #4]
 8012466:	2800      	cmp	r0, #0
 8012468:	d03a      	beq.n	80124e0 <_ZNK8touchgfx6Bitmap12getExtraDataEv+0x90>
 801246a:	4920      	ldr	r1, [pc, #128]	@ (80124ec <_ZNK8touchgfx6Bitmap12getExtraDataEv+0x9c>)
 801246c:	6809      	ldr	r1, [r1, #0]
 801246e:	2900      	cmp	r1, #0
 8012470:	d036      	beq.n	80124e0 <_ZNK8touchgfx6Bitmap12getExtraDataEv+0x90>
 8012472:	f851 1022 	ldr.w	r1, [r1, r2, lsl #2]
 8012476:	2900      	cmp	r1, #0
 8012478:	d032      	beq.n	80124e0 <_ZNK8touchgfx6Bitmap12getExtraDataEv+0x90>
 801247a:	891a      	ldrh	r2, [r3, #8]
 801247c:	8958      	ldrh	r0, [r3, #10]
 801247e:	4350      	muls	r0, r2
 8012480:	7c5a      	ldrb	r2, [r3, #17]
 8012482:	7cdb      	ldrb	r3, [r3, #19]
 8012484:	0952      	lsrs	r2, r2, #5
 8012486:	f3c3 1342 	ubfx	r3, r3, #5, #3
 801248a:	ea43 03c2 	orr.w	r3, r3, r2, lsl #3
 801248e:	2b0b      	cmp	r3, #11
 8012490:	bf18      	it	ne
 8012492:	0040      	lslne	r0, r0, #1
 8012494:	3003      	adds	r0, #3
 8012496:	f020 0003 	bic.w	r0, r0, #3
 801249a:	4408      	add	r0, r1
 801249c:	4770      	bx	lr
 801249e:	4b14      	ldr	r3, [pc, #80]	@ (80124f0 <_ZNK8touchgfx6Bitmap12getExtraDataEv+0xa0>)
 80124a0:	881b      	ldrh	r3, [r3, #0]
 80124a2:	4403      	add	r3, r0
 80124a4:	429a      	cmp	r2, r3
 80124a6:	da1a      	bge.n	80124de <_ZNK8touchgfx6Bitmap12getExtraDataEv+0x8e>
 80124a8:	4b12      	ldr	r3, [pc, #72]	@ (80124f4 <_ZNK8touchgfx6Bitmap12getExtraDataEv+0xa4>)
 80124aa:	681b      	ldr	r3, [r3, #0]
 80124ac:	1a10      	subs	r0, r2, r0
 80124ae:	210e      	movs	r1, #14
 80124b0:	fb01 3000 	mla	r0, r1, r0, r3
 80124b4:	7b03      	ldrb	r3, [r0, #12]
 80124b6:	f003 031f 	and.w	r3, r3, #31
 80124ba:	2b0b      	cmp	r3, #11
 80124bc:	d10b      	bne.n	80124d6 <_ZNK8touchgfx6Bitmap12getExtraDataEv+0x86>
 80124be:	8903      	ldrh	r3, [r0, #8]
 80124c0:	8940      	ldrh	r0, [r0, #10]
 80124c2:	4358      	muls	r0, r3
 80124c4:	4b09      	ldr	r3, [pc, #36]	@ (80124ec <_ZNK8touchgfx6Bitmap12getExtraDataEv+0x9c>)
 80124c6:	6819      	ldr	r1, [r3, #0]
 80124c8:	3003      	adds	r0, #3
 80124ca:	f020 0303 	bic.w	r3, r0, #3
 80124ce:	f851 0022 	ldr.w	r0, [r1, r2, lsl #2]
 80124d2:	4418      	add	r0, r3
 80124d4:	4770      	bx	lr
 80124d6:	2b0d      	cmp	r3, #13
 80124d8:	d101      	bne.n	80124de <_ZNK8touchgfx6Bitmap12getExtraDataEv+0x8e>
 80124da:	300d      	adds	r0, #13
 80124dc:	4770      	bx	lr
 80124de:	2000      	movs	r0, #0
 80124e0:	4770      	bx	lr
 80124e2:	bf00      	nop
 80124e4:	20002cdc 	.word	0x20002cdc
 80124e8:	20002ce4 	.word	0x20002ce4
 80124ec:	20002cc0 	.word	0x20002cc0
 80124f0:	20002ce0 	.word	0x20002ce0
 80124f4:	20002cc4 	.word	0x20002cc4

080124f8 <_ZNK8touchgfx6Bitmap9getFormatEv>:
 80124f8:	b510      	push	{r4, lr}
 80124fa:	4b1f      	ldr	r3, [pc, #124]	@ (8012578 <_ZNK8touchgfx6Bitmap9getFormatEv+0x80>)
 80124fc:	8802      	ldrh	r2, [r0, #0]
 80124fe:	881b      	ldrh	r3, [r3, #0]
 8012500:	429a      	cmp	r2, r3
 8012502:	d21a      	bcs.n	801253a <_ZNK8touchgfx6Bitmap9getFormatEv+0x42>
 8012504:	4b1d      	ldr	r3, [pc, #116]	@ (801257c <_ZNK8touchgfx6Bitmap9getFormatEv+0x84>)
 8012506:	681b      	ldr	r3, [r3, #0]
 8012508:	2114      	movs	r1, #20
 801250a:	fb01 3102 	mla	r1, r1, r2, r3
 801250e:	7c4b      	ldrb	r3, [r1, #17]
 8012510:	0958      	lsrs	r0, r3, #5
 8012512:	7ccb      	ldrb	r3, [r1, #19]
 8012514:	491a      	ldr	r1, [pc, #104]	@ (8012580 <_ZNK8touchgfx6Bitmap9getFormatEv+0x88>)
 8012516:	f3c3 1342 	ubfx	r3, r3, #5, #3
 801251a:	6809      	ldr	r1, [r1, #0]
 801251c:	ea43 03c0 	orr.w	r3, r3, r0, lsl #3
 8012520:	b2d8      	uxtb	r0, r3
 8012522:	b149      	cbz	r1, 8012538 <_ZNK8touchgfx6Bitmap9getFormatEv+0x40>
 8012524:	f851 2022 	ldr.w	r2, [r1, r2, lsl #2]
 8012528:	b132      	cbz	r2, 8012538 <_ZNK8touchgfx6Bitmap9getFormatEv+0x40>
 801252a:	2b0e      	cmp	r3, #14
 801252c:	d021      	beq.n	8012572 <_ZNK8touchgfx6Bitmap9getFormatEv+0x7a>
 801252e:	280f      	cmp	r0, #15
 8012530:	d01d      	beq.n	801256e <_ZNK8touchgfx6Bitmap9getFormatEv+0x76>
 8012532:	2810      	cmp	r0, #16
 8012534:	bf08      	it	eq
 8012536:	2002      	moveq	r0, #2
 8012538:	bd10      	pop	{r4, pc}
 801253a:	4912      	ldr	r1, [pc, #72]	@ (8012584 <_ZNK8touchgfx6Bitmap9getFormatEv+0x8c>)
 801253c:	8809      	ldrh	r1, [r1, #0]
 801253e:	4419      	add	r1, r3
 8012540:	428a      	cmp	r2, r1
 8012542:	da09      	bge.n	8012558 <_ZNK8touchgfx6Bitmap9getFormatEv+0x60>
 8012544:	1ad3      	subs	r3, r2, r3
 8012546:	4a10      	ldr	r2, [pc, #64]	@ (8012588 <_ZNK8touchgfx6Bitmap9getFormatEv+0x90>)
 8012548:	6812      	ldr	r2, [r2, #0]
 801254a:	210e      	movs	r1, #14
 801254c:	fb01 2303 	mla	r3, r1, r3, r2
 8012550:	7b18      	ldrb	r0, [r3, #12]
 8012552:	f000 001f 	and.w	r0, r0, #31
 8012556:	e7ef      	b.n	8012538 <_ZNK8touchgfx6Bitmap9getFormatEv+0x40>
 8012558:	f64f 73fe 	movw	r3, #65534	@ 0xfffe
 801255c:	429a      	cmp	r2, r3
 801255e:	d108      	bne.n	8012572 <_ZNK8touchgfx6Bitmap9getFormatEv+0x7a>
 8012560:	f7f5 f8cc 	bl	80076fc <_ZN8touchgfx3HAL3lcdEv>
 8012564:	6803      	ldr	r3, [r0, #0]
 8012566:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
 801256a:	6adb      	ldr	r3, [r3, #44]	@ 0x2c
 801256c:	4718      	bx	r3
 801256e:	2001      	movs	r0, #1
 8012570:	e7e2      	b.n	8012538 <_ZNK8touchgfx6Bitmap9getFormatEv+0x40>
 8012572:	2000      	movs	r0, #0
 8012574:	e7e0      	b.n	8012538 <_ZNK8touchgfx6Bitmap9getFormatEv+0x40>
 8012576:	bf00      	nop
 8012578:	20002cdc 	.word	0x20002cdc
 801257c:	20002ce4 	.word	0x20002ce4
 8012580:	20002cc0 	.word	0x20002cc0
 8012584:	20002ce0 	.word	0x20002ce0
 8012588:	20002cc4 	.word	0x20002cc4

0801258c <_ZNK8touchgfx8LCD16bpp8bitDepthEv>:
 801258c:	2010      	movs	r0, #16
 801258e:	4770      	bx	lr

08012590 <_ZNK8touchgfx8LCD16bpp17framebufferFormatEv>:
 8012590:	2000      	movs	r0, #0
 8012592:	4770      	bx	lr

08012594 <_ZNK8touchgfx8LCD16bpp17framebufferStrideEv>:
 8012594:	4b02      	ldr	r3, [pc, #8]	@ (80125a0 <_ZNK8touchgfx8LCD16bpp17framebufferStrideEv+0xc>)
 8012596:	8818      	ldrh	r0, [r3, #0]
 8012598:	0040      	lsls	r0, r0, #1
 801259a:	b280      	uxth	r0, r0
 801259c:	4770      	bx	lr
 801259e:	bf00      	nop
 80125a0:	20002c56 	.word	0x20002c56

080125a4 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth>:
 80125a4:	2bff      	cmp	r3, #255	@ 0xff
 80125a6:	d05e      	beq.n	8012666 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0xc2>
 80125a8:	2a0b      	cmp	r2, #11
 80125aa:	d058      	beq.n	801265e <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0xba>
 80125ac:	d80e      	bhi.n	80125cc <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x28>
 80125ae:	2a03      	cmp	r2, #3
 80125b0:	d04d      	beq.n	801264e <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0xaa>
 80125b2:	d804      	bhi.n	80125be <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x1a>
 80125b4:	2a01      	cmp	r2, #1
 80125b6:	d04c      	beq.n	8012652 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0xae>
 80125b8:	d94d      	bls.n	8012656 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0xb2>
 80125ba:	6bc3      	ldr	r3, [r0, #60]	@ 0x3c
 80125bc:	e031      	b.n	8012622 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x7e>
 80125be:	2a09      	cmp	r2, #9
 80125c0:	d04d      	beq.n	801265e <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0xba>
 80125c2:	d84a      	bhi.n	801265a <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0xb6>
 80125c4:	2a08      	cmp	r2, #8
 80125c6:	d048      	beq.n	801265a <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0xb6>
 80125c8:	2300      	movs	r3, #0
 80125ca:	e02a      	b.n	8012622 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x7e>
 80125cc:	2a2f      	cmp	r2, #47	@ 0x2f
 80125ce:	d02c      	beq.n	801262a <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x86>
 80125d0:	d811      	bhi.n	80125f6 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x52>
 80125d2:	2a2d      	cmp	r2, #45	@ 0x2d
 80125d4:	d018      	beq.n	8012608 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x64>
 80125d6:	d831      	bhi.n	801263c <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x98>
 80125d8:	2a2c      	cmp	r2, #44	@ 0x2c
 80125da:	d1f5      	bne.n	80125c8 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x24>
 80125dc:	684a      	ldr	r2, [r1, #4]
 80125de:	7813      	ldrb	r3, [r2, #0]
 80125e0:	7852      	ldrb	r2, [r2, #1]
 80125e2:	2a00      	cmp	r2, #0
 80125e4:	d1f0      	bne.n	80125c8 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x24>
 80125e6:	2b01      	cmp	r3, #1
 80125e8:	d01d      	beq.n	8012626 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x82>
 80125ea:	2b00      	cmp	r3, #0
 80125ec:	d02d      	beq.n	801264a <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0xa6>
 80125ee:	2b02      	cmp	r3, #2
 80125f0:	d1ea      	bne.n	80125c8 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x24>
 80125f2:	68c3      	ldr	r3, [r0, #12]
 80125f4:	e015      	b.n	8012622 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x7e>
 80125f6:	2a31      	cmp	r2, #49	@ 0x31
 80125f8:	d004      	beq.n	8012604 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x60>
 80125fa:	d332      	bcc.n	8012662 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0xbe>
 80125fc:	2a32      	cmp	r2, #50	@ 0x32
 80125fe:	d030      	beq.n	8012662 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0xbe>
 8012600:	2a33      	cmp	r2, #51	@ 0x33
 8012602:	d1e1      	bne.n	80125c8 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x24>
 8012604:	6f43      	ldr	r3, [r0, #116]	@ 0x74
 8012606:	e00c      	b.n	8012622 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x7e>
 8012608:	684a      	ldr	r2, [r1, #4]
 801260a:	7813      	ldrb	r3, [r2, #0]
 801260c:	7852      	ldrb	r2, [r2, #1]
 801260e:	2a00      	cmp	r2, #0
 8012610:	d1da      	bne.n	80125c8 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x24>
 8012612:	2b01      	cmp	r3, #1
 8012614:	d004      	beq.n	8012620 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x7c>
 8012616:	d30f      	bcc.n	8012638 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x94>
 8012618:	2b02      	cmp	r3, #2
 801261a:	d1d5      	bne.n	80125c8 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x24>
 801261c:	6943      	ldr	r3, [r0, #20]
 801261e:	e000      	b.n	8012622 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x7e>
 8012620:	6a43      	ldr	r3, [r0, #36]	@ 0x24
 8012622:	4618      	mov	r0, r3
 8012624:	4770      	bx	lr
 8012626:	69c3      	ldr	r3, [r0, #28]
 8012628:	e7fb      	b.n	8012622 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x7e>
 801262a:	684b      	ldr	r3, [r1, #4]
 801262c:	781a      	ldrb	r2, [r3, #0]
 801262e:	785b      	ldrb	r3, [r3, #1]
 8012630:	2b00      	cmp	r3, #0
 8012632:	d1c9      	bne.n	80125c8 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x24>
 8012634:	2a00      	cmp	r2, #0
 8012636:	d1f4      	bne.n	8012622 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x7e>
 8012638:	6b43      	ldr	r3, [r0, #52]	@ 0x34
 801263a:	e7f2      	b.n	8012622 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x7e>
 801263c:	684b      	ldr	r3, [r1, #4]
 801263e:	781a      	ldrb	r2, [r3, #0]
 8012640:	785b      	ldrb	r3, [r3, #1]
 8012642:	2b00      	cmp	r3, #0
 8012644:	d1c0      	bne.n	80125c8 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x24>
 8012646:	2a00      	cmp	r2, #0
 8012648:	d1eb      	bne.n	8012622 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x7e>
 801264a:	6ac3      	ldr	r3, [r0, #44]	@ 0x2c
 801264c:	e7e9      	b.n	8012622 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x7e>
 801264e:	6cc3      	ldr	r3, [r0, #76]	@ 0x4c
 8012650:	e7e7      	b.n	8012622 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x7e>
 8012652:	6d43      	ldr	r3, [r0, #84]	@ 0x54
 8012654:	e7e5      	b.n	8012622 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x7e>
 8012656:	6c43      	ldr	r3, [r0, #68]	@ 0x44
 8012658:	e7e3      	b.n	8012622 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x7e>
 801265a:	6dc3      	ldr	r3, [r0, #92]	@ 0x5c
 801265c:	e7e1      	b.n	8012622 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x7e>
 801265e:	6e43      	ldr	r3, [r0, #100]	@ 0x64
 8012660:	e7df      	b.n	8012622 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x7e>
 8012662:	6ec3      	ldr	r3, [r0, #108]	@ 0x6c
 8012664:	e7dd      	b.n	8012622 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x7e>
 8012666:	2a0b      	cmp	r2, #11
 8012668:	d059      	beq.n	801271e <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x17a>
 801266a:	d80e      	bhi.n	801268a <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0xe6>
 801266c:	2a03      	cmp	r2, #3
 801266e:	d050      	beq.n	8012712 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x16e>
 8012670:	d804      	bhi.n	801267c <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0xd8>
 8012672:	2a01      	cmp	r2, #1
 8012674:	d04f      	beq.n	8012716 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x172>
 8012676:	d950      	bls.n	801271a <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x176>
 8012678:	6c03      	ldr	r3, [r0, #64]	@ 0x40
 801267a:	e7d2      	b.n	8012622 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x7e>
 801267c:	2a09      	cmp	r2, #9
 801267e:	d04e      	beq.n	801271e <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x17a>
 8012680:	d801      	bhi.n	8012686 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0xe2>
 8012682:	2a08      	cmp	r2, #8
 8012684:	d1a0      	bne.n	80125c8 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x24>
 8012686:	6e03      	ldr	r3, [r0, #96]	@ 0x60
 8012688:	e7cb      	b.n	8012622 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x7e>
 801268a:	2a2f      	cmp	r2, #47	@ 0x2f
 801268c:	d02d      	beq.n	80126ea <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x146>
 801268e:	d811      	bhi.n	80126b4 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x110>
 8012690:	2a2d      	cmp	r2, #45	@ 0x2d
 8012692:	d018      	beq.n	80126c6 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x122>
 8012694:	d833      	bhi.n	80126fe <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x15a>
 8012696:	2a2c      	cmp	r2, #44	@ 0x2c
 8012698:	d196      	bne.n	80125c8 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x24>
 801269a:	684a      	ldr	r2, [r1, #4]
 801269c:	7813      	ldrb	r3, [r2, #0]
 801269e:	7852      	ldrb	r2, [r2, #1]
 80126a0:	2a00      	cmp	r2, #0
 80126a2:	d191      	bne.n	80125c8 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x24>
 80126a4:	2b01      	cmp	r3, #1
 80126a6:	d01e      	beq.n	80126e6 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x142>
 80126a8:	2b00      	cmp	r3, #0
 80126aa:	d030      	beq.n	801270e <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x16a>
 80126ac:	2b02      	cmp	r3, #2
 80126ae:	d18b      	bne.n	80125c8 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x24>
 80126b0:	6903      	ldr	r3, [r0, #16]
 80126b2:	e7b6      	b.n	8012622 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x7e>
 80126b4:	2a31      	cmp	r2, #49	@ 0x31
 80126b6:	d004      	beq.n	80126c2 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x11e>
 80126b8:	d333      	bcc.n	8012722 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x17e>
 80126ba:	2a32      	cmp	r2, #50	@ 0x32
 80126bc:	d031      	beq.n	8012722 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x17e>
 80126be:	2a33      	cmp	r2, #51	@ 0x33
 80126c0:	d182      	bne.n	80125c8 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x24>
 80126c2:	6f83      	ldr	r3, [r0, #120]	@ 0x78
 80126c4:	e7ad      	b.n	8012622 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x7e>
 80126c6:	684a      	ldr	r2, [r1, #4]
 80126c8:	7813      	ldrb	r3, [r2, #0]
 80126ca:	7852      	ldrb	r2, [r2, #1]
 80126cc:	2a00      	cmp	r2, #0
 80126ce:	f47f af7b 	bne.w	80125c8 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x24>
 80126d2:	2b01      	cmp	r3, #1
 80126d4:	d005      	beq.n	80126e2 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x13e>
 80126d6:	d310      	bcc.n	80126fa <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x156>
 80126d8:	2b02      	cmp	r3, #2
 80126da:	f47f af75 	bne.w	80125c8 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x24>
 80126de:	6983      	ldr	r3, [r0, #24]
 80126e0:	e79f      	b.n	8012622 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x7e>
 80126e2:	6a83      	ldr	r3, [r0, #40]	@ 0x28
 80126e4:	e79d      	b.n	8012622 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x7e>
 80126e6:	6a03      	ldr	r3, [r0, #32]
 80126e8:	e79b      	b.n	8012622 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x7e>
 80126ea:	684b      	ldr	r3, [r1, #4]
 80126ec:	781a      	ldrb	r2, [r3, #0]
 80126ee:	785b      	ldrb	r3, [r3, #1]
 80126f0:	2b00      	cmp	r3, #0
 80126f2:	f47f af69 	bne.w	80125c8 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x24>
 80126f6:	2a00      	cmp	r2, #0
 80126f8:	d193      	bne.n	8012622 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x7e>
 80126fa:	6b83      	ldr	r3, [r0, #56]	@ 0x38
 80126fc:	e791      	b.n	8012622 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x7e>
 80126fe:	684b      	ldr	r3, [r1, #4]
 8012700:	781a      	ldrb	r2, [r3, #0]
 8012702:	785b      	ldrb	r3, [r3, #1]
 8012704:	2b00      	cmp	r3, #0
 8012706:	f47f af5f 	bne.w	80125c8 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x24>
 801270a:	2a00      	cmp	r2, #0
 801270c:	d189      	bne.n	8012622 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x7e>
 801270e:	6b03      	ldr	r3, [r0, #48]	@ 0x30
 8012710:	e787      	b.n	8012622 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x7e>
 8012712:	6d03      	ldr	r3, [r0, #80]	@ 0x50
 8012714:	e785      	b.n	8012622 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x7e>
 8012716:	6d83      	ldr	r3, [r0, #88]	@ 0x58
 8012718:	e783      	b.n	8012622 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x7e>
 801271a:	6c83      	ldr	r3, [r0, #72]	@ 0x48
 801271c:	e781      	b.n	8012622 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x7e>
 801271e:	6e83      	ldr	r3, [r0, #104]	@ 0x68
 8012720:	e77f      	b.n	8012622 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x7e>
 8012722:	6f03      	ldr	r3, [r0, #112]	@ 0x70
 8012724:	e77d      	b.n	8012622 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x7e>

08012726 <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff>:
 8012726:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 801272a:	b087      	sub	sp, #28
 801272c:	9815      	ldr	r0, [sp, #84]	@ 0x54
 801272e:	9205      	str	r2, [sp, #20]
 8012730:	f89d 2064 	ldrb.w	r2, [sp, #100]	@ 0x64
 8012734:	9202      	str	r2, [sp, #8]
 8012736:	e9dd 2416 	ldrd	r2, r4, [sp, #88]	@ 0x58
 801273a:	9101      	str	r1, [sp, #4]
 801273c:	6841      	ldr	r1, [r0, #4]
 801273e:	f8dd e060 	ldr.w	lr, [sp, #96]	@ 0x60
 8012742:	fb01 2404 	mla	r4, r1, r4, r2
 8012746:	6802      	ldr	r2, [r0, #0]
 8012748:	eb02 0444 	add.w	r4, r2, r4, lsl #1
 801274c:	f8de 2000 	ldr.w	r2, [lr]
 8012750:	9203      	str	r2, [sp, #12]
 8012752:	f8de 2004 	ldr.w	r2, [lr, #4]
 8012756:	3204      	adds	r2, #4
 8012758:	9204      	str	r2, [sp, #16]
 801275a:	9a02      	ldr	r2, [sp, #8]
 801275c:	43d6      	mvns	r6, r2
 801275e:	b2f6      	uxtb	r6, r6
 8012760:	9a01      	ldr	r2, [sp, #4]
 8012762:	2a00      	cmp	r2, #0
 8012764:	dc03      	bgt.n	801276e <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x48>
 8012766:	9a05      	ldr	r2, [sp, #20]
 8012768:	2a00      	cmp	r2, #0
 801276a:	f340 8129 	ble.w	80129c0 <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x29a>
 801276e:	9a11      	ldr	r2, [sp, #68]	@ 0x44
 8012770:	f9be c008 	ldrsh.w	ip, [lr, #8]
 8012774:	f9be 700c 	ldrsh.w	r7, [lr, #12]
 8012778:	f502 4100 	add.w	r1, r2, #32768	@ 0x8000
 801277c:	9a12      	ldr	r2, [sp, #72]	@ 0x48
 801277e:	f502 4200 	add.w	r2, r2, #32768	@ 0x8000
 8012782:	2b00      	cmp	r3, #0
 8012784:	dd0e      	ble.n	80127a4 <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x7e>
 8012786:	1408      	asrs	r0, r1, #16
 8012788:	d405      	bmi.n	8012796 <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x70>
 801278a:	4560      	cmp	r0, ip
 801278c:	da03      	bge.n	8012796 <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x70>
 801278e:	1410      	asrs	r0, r2, #16
 8012790:	d401      	bmi.n	8012796 <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x70>
 8012792:	42b8      	cmp	r0, r7
 8012794:	db07      	blt.n	80127a6 <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x80>
 8012796:	9813      	ldr	r0, [sp, #76]	@ 0x4c
 8012798:	4401      	add	r1, r0
 801279a:	9814      	ldr	r0, [sp, #80]	@ 0x50
 801279c:	3b01      	subs	r3, #1
 801279e:	4402      	add	r2, r0
 80127a0:	3402      	adds	r4, #2
 80127a2:	e7ee      	b.n	8012782 <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x5c>
 80127a4:	d071      	beq.n	801288a <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x164>
 80127a6:	9d13      	ldr	r5, [sp, #76]	@ 0x4c
 80127a8:	1e58      	subs	r0, r3, #1
 80127aa:	fb05 1500 	mla	r5, r5, r0, r1
 80127ae:	142d      	asrs	r5, r5, #16
 80127b0:	d45f      	bmi.n	8012872 <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x14c>
 80127b2:	4565      	cmp	r5, ip
 80127b4:	da5d      	bge.n	8012872 <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x14c>
 80127b6:	9d14      	ldr	r5, [sp, #80]	@ 0x50
 80127b8:	fb05 2000 	mla	r0, r5, r0, r2
 80127bc:	1400      	asrs	r0, r0, #16
 80127be:	d458      	bmi.n	8012872 <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x14c>
 80127c0:	42b8      	cmp	r0, r7
 80127c2:	da56      	bge.n	8012872 <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x14c>
 80127c4:	f8bd b008 	ldrh.w	fp, [sp, #8]
 80127c8:	4699      	mov	r9, r3
 80127ca:	46a2      	mov	sl, r4
 80127cc:	f1b9 0f00 	cmp.w	r9, #0
 80127d0:	dd57      	ble.n	8012882 <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x15c>
 80127d2:	f9be 7008 	ldrsh.w	r7, [lr, #8]
 80127d6:	9803      	ldr	r0, [sp, #12]
 80127d8:	ea4f 4c22 	mov.w	ip, r2, asr #16
 80127dc:	140d      	asrs	r5, r1, #16
 80127de:	fb07 000c 	mla	r0, r7, ip, r0
 80127e2:	f109 39ff 	add.w	r9, r9, #4294967295
 80127e6:	5d40      	ldrb	r0, [r0, r5]
 80127e8:	9d04      	ldr	r5, [sp, #16]
 80127ea:	f835 0010 	ldrh.w	r0, [r5, r0, lsl #1]
 80127ee:	f8ba 5000 	ldrh.w	r5, [sl]
 80127f2:	122f      	asrs	r7, r5, #8
 80127f4:	ea4f 2c20 	mov.w	ip, r0, asr #8
 80127f8:	f007 07f8 	and.w	r7, r7, #248	@ 0xf8
 80127fc:	fb17 f706 	smulbb	r7, r7, r6
 8012800:	ea4f 08e5 	mov.w	r8, r5, asr #3
 8012804:	f00c 0cf8 	and.w	ip, ip, #248	@ 0xf8
 8012808:	00ed      	lsls	r5, r5, #3
 801280a:	fb0c 7c0b 	mla	ip, ip, fp, r7
 801280e:	f008 08fc 	and.w	r8, r8, #252	@ 0xfc
 8012812:	10c7      	asrs	r7, r0, #3
 8012814:	b2ed      	uxtb	r5, r5
 8012816:	00c0      	lsls	r0, r0, #3
 8012818:	fb18 f806 	smulbb	r8, r8, r6
 801281c:	fb15 f506 	smulbb	r5, r5, r6
 8012820:	f007 07fc 	and.w	r7, r7, #252	@ 0xfc
 8012824:	b2c0      	uxtb	r0, r0
 8012826:	fa1f fc8c 	uxth.w	ip, ip
 801282a:	fb07 870b 	mla	r7, r7, fp, r8
 801282e:	fb00 500b 	mla	r0, r0, fp, r5
 8012832:	b280      	uxth	r0, r0
 8012834:	b2bf      	uxth	r7, r7
 8012836:	f10c 0501 	add.w	r5, ip, #1
 801283a:	eb05 2c1c 	add.w	ip, r5, ip, lsr #8
 801283e:	f107 0801 	add.w	r8, r7, #1
 8012842:	1c45      	adds	r5, r0, #1
 8012844:	eb05 2510 	add.w	r5, r5, r0, lsr #8
 8012848:	eb08 2817 	add.w	r8, r8, r7, lsr #8
 801284c:	9813      	ldr	r0, [sp, #76]	@ 0x4c
 801284e:	f40c 4c78 	and.w	ip, ip, #63488	@ 0xf800
 8012852:	f3c5 25c4 	ubfx	r5, r5, #11, #5
 8012856:	ea4f 1858 	mov.w	r8, r8, lsr #5
 801285a:	ea45 0c0c 	orr.w	ip, r5, ip
 801285e:	f408 68fc 	and.w	r8, r8, #2016	@ 0x7e0
 8012862:	4401      	add	r1, r0
 8012864:	9814      	ldr	r0, [sp, #80]	@ 0x50
 8012866:	ea4c 0c08 	orr.w	ip, ip, r8
 801286a:	f82a cb02 	strh.w	ip, [sl], #2
 801286e:	4402      	add	r2, r0
 8012870:	e7ac      	b.n	80127cc <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xa6>
 8012872:	f8bd a008 	ldrh.w	sl, [sp, #8]
 8012876:	f04f 0800 	mov.w	r8, #0
 801287a:	eb03 0008 	add.w	r0, r3, r8
 801287e:	2800      	cmp	r0, #0
 8012880:	dc41      	bgt.n	8012906 <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1e0>
 8012882:	ea23 73e3 	bic.w	r3, r3, r3, asr #31
 8012886:	eb04 0443 	add.w	r4, r4, r3, lsl #1
 801288a:	9b01      	ldr	r3, [sp, #4]
 801288c:	2b00      	cmp	r3, #0
 801288e:	f340 8097 	ble.w	80129c0 <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x29a>
 8012892:	ee30 0a04 	vadd.f32	s0, s0, s8
 8012896:	eeb7 7a00 	vmov.f32	s14, #112	@ 0x3f800000  1.0
 801289a:	eec7 7a00 	vdiv.f32	s15, s14, s0
 801289e:	9b10      	ldr	r3, [sp, #64]	@ 0x40
 80128a0:	ee70 0aa4 	vadd.f32	s1, s1, s9
 80128a4:	ee31 1a05 	vadd.f32	s2, s2, s10
 80128a8:	ee20 7aa7 	vmul.f32	s14, s1, s15
 80128ac:	eef0 6a62 	vmov.f32	s13, s5
 80128b0:	ee61 7a27 	vmul.f32	s15, s2, s15
 80128b4:	eefe 6ac8 	vcvt.s32.f32	s13, s13, #16
 80128b8:	ee77 2a62 	vsub.f32	s5, s14, s5
 80128bc:	edcd 6a11 	vstr	s13, [sp, #68]	@ 0x44
 80128c0:	eefe 2ac8 	vcvt.s32.f32	s5, s5, #16
 80128c4:	eef0 6a43 	vmov.f32	s13, s6
 80128c8:	ee37 3ac3 	vsub.f32	s6, s15, s6
 80128cc:	ee12 2a90 	vmov	r2, s5
 80128d0:	eebe 3ac8 	vcvt.s32.f32	s6, s6, #16
 80128d4:	fb92 f3f3 	sdiv	r3, r2, r3
 80128d8:	ee13 2a10 	vmov	r2, s6
 80128dc:	9313      	str	r3, [sp, #76]	@ 0x4c
 80128de:	9b10      	ldr	r3, [sp, #64]	@ 0x40
 80128e0:	fb92 f3f3 	sdiv	r3, r2, r3
 80128e4:	9314      	str	r3, [sp, #80]	@ 0x50
 80128e6:	9b01      	ldr	r3, [sp, #4]
 80128e8:	9a05      	ldr	r2, [sp, #20]
 80128ea:	eefe 6ac8 	vcvt.s32.f32	s13, s13, #16
 80128ee:	3b01      	subs	r3, #1
 80128f0:	9301      	str	r3, [sp, #4]
 80128f2:	edcd 6a12 	vstr	s13, [sp, #72]	@ 0x48
 80128f6:	9b10      	ldr	r3, [sp, #64]	@ 0x40
 80128f8:	eeb0 3a67 	vmov.f32	s6, s15
 80128fc:	bf08      	it	eq
 80128fe:	4613      	moveq	r3, r2
 8012900:	eef0 2a47 	vmov.f32	s5, s14
 8012904:	e72c      	b.n	8012760 <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3a>
 8012906:	140f      	asrs	r7, r1, #16
 8012908:	d453      	bmi.n	80129b2 <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x28c>
 801290a:	f8de 5008 	ldr.w	r5, [lr, #8]
 801290e:	42bd      	cmp	r5, r7
 8012910:	dd4f      	ble.n	80129b2 <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x28c>
 8012912:	ea5f 4c22 	movs.w	ip, r2, asr #16
 8012916:	d44c      	bmi.n	80129b2 <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x28c>
 8012918:	f8de 000c 	ldr.w	r0, [lr, #12]
 801291c:	4560      	cmp	r0, ip
 801291e:	dd48      	ble.n	80129b2 <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x28c>
 8012920:	9803      	ldr	r0, [sp, #12]
 8012922:	b22d      	sxth	r5, r5
 8012924:	fb0c 0505 	mla	r5, ip, r5, r0
 8012928:	5de8      	ldrb	r0, [r5, r7]
 801292a:	9d04      	ldr	r5, [sp, #16]
 801292c:	f835 0010 	ldrh.w	r0, [r5, r0, lsl #1]
 8012930:	f06f 0501 	mvn.w	r5, #1
 8012934:	fb05 fb08 	mul.w	fp, r5, r8
 8012938:	ea4f 2c20 	mov.w	ip, r0, asr #8
 801293c:	f834 500b 	ldrh.w	r5, [r4, fp]
 8012940:	122f      	asrs	r7, r5, #8
 8012942:	f007 07f8 	and.w	r7, r7, #248	@ 0xf8
 8012946:	fb17 f706 	smulbb	r7, r7, r6
 801294a:	ea4f 09e5 	mov.w	r9, r5, asr #3
 801294e:	f00c 0cf8 	and.w	ip, ip, #248	@ 0xf8
 8012952:	00ed      	lsls	r5, r5, #3
 8012954:	fb0c 7c0a 	mla	ip, ip, sl, r7
 8012958:	f009 09fc 	and.w	r9, r9, #252	@ 0xfc
 801295c:	10c7      	asrs	r7, r0, #3
 801295e:	b2ed      	uxtb	r5, r5
 8012960:	00c0      	lsls	r0, r0, #3
 8012962:	fb19 f906 	smulbb	r9, r9, r6
 8012966:	fb15 f506 	smulbb	r5, r5, r6
 801296a:	f007 07fc 	and.w	r7, r7, #252	@ 0xfc
 801296e:	b2c0      	uxtb	r0, r0
 8012970:	fa1f fc8c 	uxth.w	ip, ip
 8012974:	fb07 970a 	mla	r7, r7, sl, r9
 8012978:	fb00 500a 	mla	r0, r0, sl, r5
 801297c:	b2bf      	uxth	r7, r7
 801297e:	b280      	uxth	r0, r0
 8012980:	f10c 0501 	add.w	r5, ip, #1
 8012984:	eb05 2c1c 	add.w	ip, r5, ip, lsr #8
 8012988:	f107 0901 	add.w	r9, r7, #1
 801298c:	1c45      	adds	r5, r0, #1
 801298e:	eb05 2510 	add.w	r5, r5, r0, lsr #8
 8012992:	eb09 2917 	add.w	r9, r9, r7, lsr #8
 8012996:	f40c 4c78 	and.w	ip, ip, #63488	@ 0xf800
 801299a:	f3c5 25c4 	ubfx	r5, r5, #11, #5
 801299e:	ea4f 1959 	mov.w	r9, r9, lsr #5
 80129a2:	ea45 0c0c 	orr.w	ip, r5, ip
 80129a6:	f409 69fc 	and.w	r9, r9, #2016	@ 0x7e0
 80129aa:	ea4c 0c09 	orr.w	ip, ip, r9
 80129ae:	f824 c00b 	strh.w	ip, [r4, fp]
 80129b2:	9813      	ldr	r0, [sp, #76]	@ 0x4c
 80129b4:	4401      	add	r1, r0
 80129b6:	9814      	ldr	r0, [sp, #80]	@ 0x50
 80129b8:	f108 38ff 	add.w	r8, r8, #4294967295
 80129bc:	4402      	add	r2, r0
 80129be:	e75c      	b.n	801287a <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x154>
 80129c0:	b007      	add	sp, #28
 80129c2:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}

080129c6 <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff>:
 80129c6:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 80129ca:	b085      	sub	sp, #20
 80129cc:	4693      	mov	fp, r2
 80129ce:	9e13      	ldr	r6, [sp, #76]	@ 0x4c
 80129d0:	9d16      	ldr	r5, [sp, #88]	@ 0x58
 80129d2:	6870      	ldr	r0, [r6, #4]
 80129d4:	9100      	str	r1, [sp, #0]
 80129d6:	e9dd 2414 	ldrd	r2, r4, [sp, #80]	@ 0x50
 80129da:	fb00 2404 	mla	r4, r0, r4, r2
 80129de:	6832      	ldr	r2, [r6, #0]
 80129e0:	eb02 0444 	add.w	r4, r2, r4, lsl #1
 80129e4:	682a      	ldr	r2, [r5, #0]
 80129e6:	9201      	str	r2, [sp, #4]
 80129e8:	686a      	ldr	r2, [r5, #4]
 80129ea:	e9dd ec11 	ldrd	lr, ip, [sp, #68]	@ 0x44
 80129ee:	3204      	adds	r2, #4
 80129f0:	9202      	str	r2, [sp, #8]
 80129f2:	eef7 6a00 	vmov.f32	s13, #112	@ 0x3f800000  1.0
 80129f6:	9a00      	ldr	r2, [sp, #0]
 80129f8:	2a00      	cmp	r2, #0
 80129fa:	dc03      	bgt.n	8012a04 <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3e>
 80129fc:	f1bb 0f00 	cmp.w	fp, #0
 8012a00:	f340 80a0 	ble.w	8012b44 <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x17e>
 8012a04:	9a0f      	ldr	r2, [sp, #60]	@ 0x3c
 8012a06:	f9b5 9008 	ldrsh.w	r9, [r5, #8]
 8012a0a:	f9b5 800c 	ldrsh.w	r8, [r5, #12]
 8012a0e:	f502 4000 	add.w	r0, r2, #32768	@ 0x8000
 8012a12:	9a10      	ldr	r2, [sp, #64]	@ 0x40
 8012a14:	f502 4200 	add.w	r2, r2, #32768	@ 0x8000
 8012a18:	2b00      	cmp	r3, #0
 8012a1a:	dd0c      	ble.n	8012a36 <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x70>
 8012a1c:	1406      	asrs	r6, r0, #16
 8012a1e:	d405      	bmi.n	8012a2c <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x66>
 8012a20:	454e      	cmp	r6, r9
 8012a22:	da03      	bge.n	8012a2c <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x66>
 8012a24:	1416      	asrs	r6, r2, #16
 8012a26:	d401      	bmi.n	8012a2c <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x66>
 8012a28:	4546      	cmp	r6, r8
 8012a2a:	db05      	blt.n	8012a38 <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x72>
 8012a2c:	4470      	add	r0, lr
 8012a2e:	4462      	add	r2, ip
 8012a30:	3b01      	subs	r3, #1
 8012a32:	3402      	adds	r4, #2
 8012a34:	e7f0      	b.n	8012a18 <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x52>
 8012a36:	d00f      	beq.n	8012a58 <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x92>
 8012a38:	1e5e      	subs	r6, r3, #1
 8012a3a:	fb0e 0706 	mla	r7, lr, r6, r0
 8012a3e:	143f      	asrs	r7, r7, #16
 8012a40:	d541      	bpl.n	8012ac6 <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x100>
 8012a42:	eb04 0643 	add.w	r6, r4, r3, lsl #1
 8012a46:	4698      	mov	r8, r3
 8012a48:	9603      	str	r6, [sp, #12]
 8012a4a:	f1b8 0f00 	cmp.w	r8, #0
 8012a4e:	dc59      	bgt.n	8012b04 <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x13e>
 8012a50:	ea23 73e3 	bic.w	r3, r3, r3, asr #31
 8012a54:	eb04 0443 	add.w	r4, r4, r3, lsl #1
 8012a58:	9b00      	ldr	r3, [sp, #0]
 8012a5a:	2b00      	cmp	r3, #0
 8012a5c:	dd72      	ble.n	8012b44 <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x17e>
 8012a5e:	ee30 0a04 	vadd.f32	s0, s0, s8
 8012a62:	ee70 0aa4 	vadd.f32	s1, s1, s9
 8012a66:	eec6 7a80 	vdiv.f32	s15, s13, s0
 8012a6a:	9b0e      	ldr	r3, [sp, #56]	@ 0x38
 8012a6c:	ee31 1a05 	vadd.f32	s2, s2, s10
 8012a70:	ee20 7aa7 	vmul.f32	s14, s1, s15
 8012a74:	eeb0 6a62 	vmov.f32	s12, s5
 8012a78:	ee61 7a27 	vmul.f32	s15, s2, s15
 8012a7c:	eebe 6ac8 	vcvt.s32.f32	s12, s12, #16
 8012a80:	ee77 2a62 	vsub.f32	s5, s14, s5
 8012a84:	ed8d 6a0f 	vstr	s12, [sp, #60]	@ 0x3c
 8012a88:	eefe 2ac8 	vcvt.s32.f32	s5, s5, #16
 8012a8c:	eeb0 6a43 	vmov.f32	s12, s6
 8012a90:	ee37 3ac3 	vsub.f32	s6, s15, s6
 8012a94:	ee12 2a90 	vmov	r2, s5
 8012a98:	eebe 3ac8 	vcvt.s32.f32	s6, s6, #16
 8012a9c:	fb92 fef3 	sdiv	lr, r2, r3
 8012aa0:	ee13 2a10 	vmov	r2, s6
 8012aa4:	fb92 fcf3 	sdiv	ip, r2, r3
 8012aa8:	9b00      	ldr	r3, [sp, #0]
 8012aaa:	eebe 6ac8 	vcvt.s32.f32	s12, s12, #16
 8012aae:	3b01      	subs	r3, #1
 8012ab0:	9300      	str	r3, [sp, #0]
 8012ab2:	ed8d 6a10 	vstr	s12, [sp, #64]	@ 0x40
 8012ab6:	9b0e      	ldr	r3, [sp, #56]	@ 0x38
 8012ab8:	eeb0 3a67 	vmov.f32	s6, s15
 8012abc:	bf08      	it	eq
 8012abe:	465b      	moveq	r3, fp
 8012ac0:	eef0 2a47 	vmov.f32	s5, s14
 8012ac4:	e797      	b.n	80129f6 <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x30>
 8012ac6:	454f      	cmp	r7, r9
 8012ac8:	dabb      	bge.n	8012a42 <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x7c>
 8012aca:	fb0c 2606 	mla	r6, ip, r6, r2
 8012ace:	1436      	asrs	r6, r6, #16
 8012ad0:	d4b7      	bmi.n	8012a42 <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x7c>
 8012ad2:	4546      	cmp	r6, r8
 8012ad4:	dab5      	bge.n	8012a42 <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x7c>
 8012ad6:	461e      	mov	r6, r3
 8012ad8:	46a0      	mov	r8, r4
 8012ada:	2e00      	cmp	r6, #0
 8012adc:	ddb8      	ble.n	8012a50 <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x8a>
 8012ade:	f9b5 a008 	ldrsh.w	sl, [r5, #8]
 8012ae2:	9901      	ldr	r1, [sp, #4]
 8012ae4:	1417      	asrs	r7, r2, #16
 8012ae6:	ea4f 4920 	mov.w	r9, r0, asr #16
 8012aea:	fb0a 1707 	mla	r7, sl, r7, r1
 8012aee:	9902      	ldr	r1, [sp, #8]
 8012af0:	f817 7009 	ldrb.w	r7, [r7, r9]
 8012af4:	f831 7017 	ldrh.w	r7, [r1, r7, lsl #1]
 8012af8:	f828 7b02 	strh.w	r7, [r8], #2
 8012afc:	4470      	add	r0, lr
 8012afe:	4462      	add	r2, ip
 8012b00:	3e01      	subs	r6, #1
 8012b02:	e7ea      	b.n	8012ada <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x114>
 8012b04:	ea5f 4920 	movs.w	r9, r0, asr #16
 8012b08:	d417      	bmi.n	8012b3a <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x174>
 8012b0a:	68ae      	ldr	r6, [r5, #8]
 8012b0c:	454e      	cmp	r6, r9
 8012b0e:	dd14      	ble.n	8012b3a <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x174>
 8012b10:	ea5f 4a22 	movs.w	sl, r2, asr #16
 8012b14:	d411      	bmi.n	8012b3a <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x174>
 8012b16:	68ef      	ldr	r7, [r5, #12]
 8012b18:	4557      	cmp	r7, sl
 8012b1a:	dd0e      	ble.n	8012b3a <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x174>
 8012b1c:	9f01      	ldr	r7, [sp, #4]
 8012b1e:	b236      	sxth	r6, r6
 8012b20:	fb0a 7606 	mla	r6, sl, r6, r7
 8012b24:	9f02      	ldr	r7, [sp, #8]
 8012b26:	f816 6009 	ldrb.w	r6, [r6, r9]
 8012b2a:	f06f 0101 	mvn.w	r1, #1
 8012b2e:	f837 7016 	ldrh.w	r7, [r7, r6, lsl #1]
 8012b32:	fb01 f608 	mul.w	r6, r1, r8
 8012b36:	9903      	ldr	r1, [sp, #12]
 8012b38:	538f      	strh	r7, [r1, r6]
 8012b3a:	4470      	add	r0, lr
 8012b3c:	4462      	add	r2, ip
 8012b3e:	f108 38ff 	add.w	r8, r8, #4294967295
 8012b42:	e782      	b.n	8012a4a <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x84>
 8012b44:	b005      	add	sp, #20
 8012b46:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}

08012b4a <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB888_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff>:
 8012b4a:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8012b4e:	b087      	sub	sp, #28
 8012b50:	9c15      	ldr	r4, [sp, #84]	@ 0x54
 8012b52:	9205      	str	r2, [sp, #20]
 8012b54:	f89d 2064 	ldrb.w	r2, [sp, #100]	@ 0x64
 8012b58:	9203      	str	r2, [sp, #12]
 8012b5a:	e9dd 2016 	ldrd	r2, r0, [sp, #88]	@ 0x58
 8012b5e:	9102      	str	r1, [sp, #8]
 8012b60:	6861      	ldr	r1, [r4, #4]
 8012b62:	f8dd c060 	ldr.w	ip, [sp, #96]	@ 0x60
 8012b66:	fb01 2000 	mla	r0, r1, r0, r2
 8012b6a:	6822      	ldr	r2, [r4, #0]
 8012b6c:	eb02 0240 	add.w	r2, r2, r0, lsl #1
 8012b70:	9200      	str	r2, [sp, #0]
 8012b72:	f8dc 2000 	ldr.w	r2, [ip]
 8012b76:	9204      	str	r2, [sp, #16]
 8012b78:	f8dc 2004 	ldr.w	r2, [ip, #4]
 8012b7c:	3204      	adds	r2, #4
 8012b7e:	9201      	str	r2, [sp, #4]
 8012b80:	9a03      	ldr	r2, [sp, #12]
 8012b82:	43d5      	mvns	r5, r2
 8012b84:	b2ed      	uxtb	r5, r5
 8012b86:	9a02      	ldr	r2, [sp, #8]
 8012b88:	2a00      	cmp	r2, #0
 8012b8a:	dc03      	bgt.n	8012b94 <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB888_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x4a>
 8012b8c:	9a05      	ldr	r2, [sp, #20]
 8012b8e:	2a00      	cmp	r2, #0
 8012b90:	f340 812c 	ble.w	8012dec <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB888_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2a2>
 8012b94:	9a11      	ldr	r2, [sp, #68]	@ 0x44
 8012b96:	f9bc e008 	ldrsh.w	lr, [ip, #8]
 8012b9a:	f9bc 700c 	ldrsh.w	r7, [ip, #12]
 8012b9e:	f502 4100 	add.w	r1, r2, #32768	@ 0x8000
 8012ba2:	9a12      	ldr	r2, [sp, #72]	@ 0x48
 8012ba4:	f502 4200 	add.w	r2, r2, #32768	@ 0x8000
 8012ba8:	2b00      	cmp	r3, #0
 8012baa:	dd10      	ble.n	8012bce <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB888_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x84>
 8012bac:	140c      	asrs	r4, r1, #16
 8012bae:	d405      	bmi.n	8012bbc <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB888_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x72>
 8012bb0:	4574      	cmp	r4, lr
 8012bb2:	da03      	bge.n	8012bbc <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB888_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x72>
 8012bb4:	1414      	asrs	r4, r2, #16
 8012bb6:	d401      	bmi.n	8012bbc <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB888_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x72>
 8012bb8:	42bc      	cmp	r4, r7
 8012bba:	db09      	blt.n	8012bd0 <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB888_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x86>
 8012bbc:	9c13      	ldr	r4, [sp, #76]	@ 0x4c
 8012bbe:	9800      	ldr	r0, [sp, #0]
 8012bc0:	4421      	add	r1, r4
 8012bc2:	9c14      	ldr	r4, [sp, #80]	@ 0x50
 8012bc4:	3002      	adds	r0, #2
 8012bc6:	4422      	add	r2, r4
 8012bc8:	3b01      	subs	r3, #1
 8012bca:	9000      	str	r0, [sp, #0]
 8012bcc:	e7ec      	b.n	8012ba8 <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB888_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x5e>
 8012bce:	d071      	beq.n	8012cb4 <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB888_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x16a>
 8012bd0:	9e13      	ldr	r6, [sp, #76]	@ 0x4c
 8012bd2:	1e5c      	subs	r4, r3, #1
 8012bd4:	fb06 1604 	mla	r6, r6, r4, r1
 8012bd8:	1436      	asrs	r6, r6, #16
 8012bda:	d45d      	bmi.n	8012c98 <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB888_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x14e>
 8012bdc:	4576      	cmp	r6, lr
 8012bde:	da5b      	bge.n	8012c98 <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB888_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x14e>
 8012be0:	9e14      	ldr	r6, [sp, #80]	@ 0x50
 8012be2:	fb06 2404 	mla	r4, r6, r4, r2
 8012be6:	1424      	asrs	r4, r4, #16
 8012be8:	d456      	bmi.n	8012c98 <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB888_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x14e>
 8012bea:	42bc      	cmp	r4, r7
 8012bec:	da54      	bge.n	8012c98 <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB888_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x14e>
 8012bee:	f8dd 9000 	ldr.w	r9, [sp]
 8012bf2:	f8bd a00c 	ldrh.w	sl, [sp, #12]
 8012bf6:	4698      	mov	r8, r3
 8012bf8:	f1b8 0f00 	cmp.w	r8, #0
 8012bfc:	dd54      	ble.n	8012ca8 <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB888_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x15e>
 8012bfe:	f9bc 7008 	ldrsh.w	r7, [ip, #8]
 8012c02:	9804      	ldr	r0, [sp, #16]
 8012c04:	1414      	asrs	r4, r2, #16
 8012c06:	fb07 0404 	mla	r4, r7, r4, r0
 8012c0a:	140e      	asrs	r6, r1, #16
 8012c0c:	9801      	ldr	r0, [sp, #4]
 8012c0e:	f814 e006 	ldrb.w	lr, [r4, r6]
 8012c12:	f8b9 4000 	ldrh.w	r4, [r9]
 8012c16:	eb0e 0e4e 	add.w	lr, lr, lr, lsl #1
 8012c1a:	eb00 0b0e 	add.w	fp, r0, lr
 8012c1e:	1227      	asrs	r7, r4, #8
 8012c20:	f89b 6002 	ldrb.w	r6, [fp, #2]
 8012c24:	f89b b001 	ldrb.w	fp, [fp, #1]
 8012c28:	f810 e00e 	ldrb.w	lr, [r0, lr]
 8012c2c:	9813      	ldr	r0, [sp, #76]	@ 0x4c
 8012c2e:	fb16 f60a 	smulbb	r6, r6, sl
 8012c32:	f007 07f8 	and.w	r7, r7, #248	@ 0xf8
 8012c36:	fb07 6705 	mla	r7, r7, r5, r6
 8012c3a:	10e6      	asrs	r6, r4, #3
 8012c3c:	00e4      	lsls	r4, r4, #3
 8012c3e:	b2e4      	uxtb	r4, r4
 8012c40:	fb1b fb0a 	smulbb	fp, fp, sl
 8012c44:	fb14 f405 	smulbb	r4, r4, r5
 8012c48:	f006 06fc 	and.w	r6, r6, #252	@ 0xfc
 8012c4c:	b2bf      	uxth	r7, r7
 8012c4e:	fb06 b605 	mla	r6, r6, r5, fp
 8012c52:	fb0e 4e0a 	mla	lr, lr, sl, r4
 8012c56:	b2b6      	uxth	r6, r6
 8012c58:	fa1f fe8e 	uxth.w	lr, lr
 8012c5c:	1c7c      	adds	r4, r7, #1
 8012c5e:	eb04 2717 	add.w	r7, r4, r7, lsr #8
 8012c62:	f106 0b01 	add.w	fp, r6, #1
 8012c66:	f10e 0401 	add.w	r4, lr, #1
 8012c6a:	eb04 241e 	add.w	r4, r4, lr, lsr #8
 8012c6e:	eb0b 2b16 	add.w	fp, fp, r6, lsr #8
 8012c72:	f407 4778 	and.w	r7, r7, #63488	@ 0xf800
 8012c76:	f3c4 24c4 	ubfx	r4, r4, #11, #5
 8012c7a:	ea4f 1b5b 	mov.w	fp, fp, lsr #5
 8012c7e:	4327      	orrs	r7, r4
 8012c80:	f40b 6bfc 	and.w	fp, fp, #2016	@ 0x7e0
 8012c84:	4401      	add	r1, r0
 8012c86:	9814      	ldr	r0, [sp, #80]	@ 0x50
 8012c88:	ea47 070b 	orr.w	r7, r7, fp
 8012c8c:	f829 7b02 	strh.w	r7, [r9], #2
 8012c90:	4402      	add	r2, r0
 8012c92:	f108 38ff 	add.w	r8, r8, #4294967295
 8012c96:	e7af      	b.n	8012bf8 <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB888_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xae>
 8012c98:	f8bd 900c 	ldrh.w	r9, [sp, #12]
 8012c9c:	f04f 0e00 	mov.w	lr, #0
 8012ca0:	eb03 040e 	add.w	r4, r3, lr
 8012ca4:	2c00      	cmp	r4, #0
 8012ca6:	dc43      	bgt.n	8012d30 <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB888_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1e6>
 8012ca8:	9a00      	ldr	r2, [sp, #0]
 8012caa:	ea23 73e3 	bic.w	r3, r3, r3, asr #31
 8012cae:	eb02 0343 	add.w	r3, r2, r3, lsl #1
 8012cb2:	9300      	str	r3, [sp, #0]
 8012cb4:	9b02      	ldr	r3, [sp, #8]
 8012cb6:	2b00      	cmp	r3, #0
 8012cb8:	f340 8098 	ble.w	8012dec <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB888_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2a2>
 8012cbc:	ee30 0a04 	vadd.f32	s0, s0, s8
 8012cc0:	eeb7 7a00 	vmov.f32	s14, #112	@ 0x3f800000  1.0
 8012cc4:	eec7 7a00 	vdiv.f32	s15, s14, s0
 8012cc8:	9b10      	ldr	r3, [sp, #64]	@ 0x40
 8012cca:	ee70 0aa4 	vadd.f32	s1, s1, s9
 8012cce:	ee31 1a05 	vadd.f32	s2, s2, s10
 8012cd2:	ee20 7aa7 	vmul.f32	s14, s1, s15
 8012cd6:	eef0 6a62 	vmov.f32	s13, s5
 8012cda:	ee61 7a27 	vmul.f32	s15, s2, s15
 8012cde:	eefe 6ac8 	vcvt.s32.f32	s13, s13, #16
 8012ce2:	ee77 2a62 	vsub.f32	s5, s14, s5
 8012ce6:	edcd 6a11 	vstr	s13, [sp, #68]	@ 0x44
 8012cea:	eefe 2ac8 	vcvt.s32.f32	s5, s5, #16
 8012cee:	eef0 6a43 	vmov.f32	s13, s6
 8012cf2:	ee37 3ac3 	vsub.f32	s6, s15, s6
 8012cf6:	ee12 2a90 	vmov	r2, s5
 8012cfa:	eebe 3ac8 	vcvt.s32.f32	s6, s6, #16
 8012cfe:	fb92 f3f3 	sdiv	r3, r2, r3
 8012d02:	ee13 2a10 	vmov	r2, s6
 8012d06:	9313      	str	r3, [sp, #76]	@ 0x4c
 8012d08:	9b10      	ldr	r3, [sp, #64]	@ 0x40
 8012d0a:	fb92 f3f3 	sdiv	r3, r2, r3
 8012d0e:	9314      	str	r3, [sp, #80]	@ 0x50
 8012d10:	9b02      	ldr	r3, [sp, #8]
 8012d12:	9a05      	ldr	r2, [sp, #20]
 8012d14:	eefe 6ac8 	vcvt.s32.f32	s13, s13, #16
 8012d18:	3b01      	subs	r3, #1
 8012d1a:	9302      	str	r3, [sp, #8]
 8012d1c:	edcd 6a12 	vstr	s13, [sp, #72]	@ 0x48
 8012d20:	9b10      	ldr	r3, [sp, #64]	@ 0x40
 8012d22:	eeb0 3a67 	vmov.f32	s6, s15
 8012d26:	bf08      	it	eq
 8012d28:	4613      	moveq	r3, r2
 8012d2a:	eef0 2a47 	vmov.f32	s5, s14
 8012d2e:	e72a      	b.n	8012b86 <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB888_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3c>
 8012d30:	140f      	asrs	r7, r1, #16
 8012d32:	d454      	bmi.n	8012dde <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB888_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x294>
 8012d34:	f8dc 6008 	ldr.w	r6, [ip, #8]
 8012d38:	42be      	cmp	r6, r7
 8012d3a:	dd50      	ble.n	8012dde <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB888_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x294>
 8012d3c:	ea5f 4822 	movs.w	r8, r2, asr #16
 8012d40:	d44d      	bmi.n	8012dde <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB888_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x294>
 8012d42:	f8dc 400c 	ldr.w	r4, [ip, #12]
 8012d46:	4544      	cmp	r4, r8
 8012d48:	dd49      	ble.n	8012dde <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB888_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x294>
 8012d4a:	9c04      	ldr	r4, [sp, #16]
 8012d4c:	b236      	sxth	r6, r6
 8012d4e:	fb08 4606 	mla	r6, r8, r6, r4
 8012d52:	f06f 0001 	mvn.w	r0, #1
 8012d56:	f816 8007 	ldrb.w	r8, [r6, r7]
 8012d5a:	9c01      	ldr	r4, [sp, #4]
 8012d5c:	fb00 fa0e 	mul.w	sl, r0, lr
 8012d60:	eb08 0848 	add.w	r8, r8, r8, lsl #1
 8012d64:	9800      	ldr	r0, [sp, #0]
 8012d66:	eb04 0b08 	add.w	fp, r4, r8
 8012d6a:	f830 400a 	ldrh.w	r4, [r0, sl]
 8012d6e:	f89b 6002 	ldrb.w	r6, [fp, #2]
 8012d72:	9801      	ldr	r0, [sp, #4]
 8012d74:	f89b b001 	ldrb.w	fp, [fp, #1]
 8012d78:	f810 8008 	ldrb.w	r8, [r0, r8]
 8012d7c:	9800      	ldr	r0, [sp, #0]
 8012d7e:	1227      	asrs	r7, r4, #8
 8012d80:	fb16 f609 	smulbb	r6, r6, r9
 8012d84:	f007 07f8 	and.w	r7, r7, #248	@ 0xf8
 8012d88:	fb07 6705 	mla	r7, r7, r5, r6
 8012d8c:	10e6      	asrs	r6, r4, #3
 8012d8e:	00e4      	lsls	r4, r4, #3
 8012d90:	b2e4      	uxtb	r4, r4
 8012d92:	fb1b fb09 	smulbb	fp, fp, r9
 8012d96:	fb14 f405 	smulbb	r4, r4, r5
 8012d9a:	f006 06fc 	and.w	r6, r6, #252	@ 0xfc
 8012d9e:	b2bf      	uxth	r7, r7
 8012da0:	fb06 b605 	mla	r6, r6, r5, fp
 8012da4:	fb08 4809 	mla	r8, r8, r9, r4
 8012da8:	b2b6      	uxth	r6, r6
 8012daa:	fa1f f888 	uxth.w	r8, r8
 8012dae:	1c7c      	adds	r4, r7, #1
 8012db0:	eb04 2717 	add.w	r7, r4, r7, lsr #8
 8012db4:	f106 0b01 	add.w	fp, r6, #1
 8012db8:	f108 0401 	add.w	r4, r8, #1
 8012dbc:	eb04 2418 	add.w	r4, r4, r8, lsr #8
 8012dc0:	eb0b 2b16 	add.w	fp, fp, r6, lsr #8
 8012dc4:	f407 4778 	and.w	r7, r7, #63488	@ 0xf800
 8012dc8:	f3c4 24c4 	ubfx	r4, r4, #11, #5
 8012dcc:	ea4f 1b5b 	mov.w	fp, fp, lsr #5
 8012dd0:	4327      	orrs	r7, r4
 8012dd2:	f40b 6bfc 	and.w	fp, fp, #2016	@ 0x7e0
 8012dd6:	ea47 070b 	orr.w	r7, r7, fp
 8012dda:	f820 700a 	strh.w	r7, [r0, sl]
 8012dde:	9813      	ldr	r0, [sp, #76]	@ 0x4c
 8012de0:	4401      	add	r1, r0
 8012de2:	9814      	ldr	r0, [sp, #80]	@ 0x50
 8012de4:	f10e 3eff 	add.w	lr, lr, #4294967295
 8012de8:	4402      	add	r2, r0
 8012dea:	e759      	b.n	8012ca0 <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB888_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x156>
 8012dec:	b007      	add	sp, #28
 8012dee:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
	...

08012df4 <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB888_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff>:
 8012df4:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8012df8:	b085      	sub	sp, #20
 8012dfa:	eef7 6a00 	vmov.f32	s13, #112	@ 0x3f800000  1.0
 8012dfe:	9e13      	ldr	r6, [sp, #76]	@ 0x4c
 8012e00:	9203      	str	r2, [sp, #12]
 8012e02:	e9dd 2414 	ldrd	r2, r4, [sp, #80]	@ 0x50
 8012e06:	6870      	ldr	r0, [r6, #4]
 8012e08:	9d16      	ldr	r5, [sp, #88]	@ 0x58
 8012e0a:	f8dd c044 	ldr.w	ip, [sp, #68]	@ 0x44
 8012e0e:	686f      	ldr	r7, [r5, #4]
 8012e10:	9101      	str	r1, [sp, #4]
 8012e12:	fb00 2404 	mla	r4, r0, r4, r2
 8012e16:	6832      	ldr	r2, [r6, #0]
 8012e18:	eb02 0444 	add.w	r4, r2, r4, lsl #1
 8012e1c:	682a      	ldr	r2, [r5, #0]
 8012e1e:	9202      	str	r2, [sp, #8]
 8012e20:	3704      	adds	r7, #4
 8012e22:	9a01      	ldr	r2, [sp, #4]
 8012e24:	2a00      	cmp	r2, #0
 8012e26:	dc03      	bgt.n	8012e30 <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB888_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3c>
 8012e28:	9a03      	ldr	r2, [sp, #12]
 8012e2a:	2a00      	cmp	r2, #0
 8012e2c:	f340 80cc 	ble.w	8012fc8 <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB888_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1d4>
 8012e30:	9a0f      	ldr	r2, [sp, #60]	@ 0x3c
 8012e32:	f9b5 9008 	ldrsh.w	r9, [r5, #8]
 8012e36:	f9b5 800c 	ldrsh.w	r8, [r5, #12]
 8012e3a:	f502 4000 	add.w	r0, r2, #32768	@ 0x8000
 8012e3e:	9a10      	ldr	r2, [sp, #64]	@ 0x40
 8012e40:	f502 4200 	add.w	r2, r2, #32768	@ 0x8000
 8012e44:	2b00      	cmp	r3, #0
 8012e46:	dd0d      	ble.n	8012e64 <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB888_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x70>
 8012e48:	1406      	asrs	r6, r0, #16
 8012e4a:	d405      	bmi.n	8012e58 <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB888_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x64>
 8012e4c:	454e      	cmp	r6, r9
 8012e4e:	da03      	bge.n	8012e58 <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB888_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x64>
 8012e50:	1416      	asrs	r6, r2, #16
 8012e52:	d401      	bmi.n	8012e58 <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB888_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x64>
 8012e54:	4546      	cmp	r6, r8
 8012e56:	db06      	blt.n	8012e66 <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB888_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x72>
 8012e58:	9e12      	ldr	r6, [sp, #72]	@ 0x48
 8012e5a:	4460      	add	r0, ip
 8012e5c:	4432      	add	r2, r6
 8012e5e:	3b01      	subs	r3, #1
 8012e60:	3402      	adds	r4, #2
 8012e62:	e7ef      	b.n	8012e44 <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB888_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x50>
 8012e64:	d00f      	beq.n	8012e86 <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB888_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x92>
 8012e66:	1e5e      	subs	r6, r3, #1
 8012e68:	fb0c 0e06 	mla	lr, ip, r6, r0
 8012e6c:	ea5f 4e2e 	movs.w	lr, lr, asr #16
 8012e70:	d543      	bpl.n	8012efa <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB888_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x106>
 8012e72:	4698      	mov	r8, r3
 8012e74:	eb04 0a43 	add.w	sl, r4, r3, lsl #1
 8012e78:	f1b8 0f00 	cmp.w	r8, #0
 8012e7c:	dc71      	bgt.n	8012f62 <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB888_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x16e>
 8012e7e:	ea23 73e3 	bic.w	r3, r3, r3, asr #31
 8012e82:	eb04 0443 	add.w	r4, r4, r3, lsl #1
 8012e86:	9b01      	ldr	r3, [sp, #4]
 8012e88:	2b00      	cmp	r3, #0
 8012e8a:	f340 809d 	ble.w	8012fc8 <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB888_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1d4>
 8012e8e:	ee30 0a04 	vadd.f32	s0, s0, s8
 8012e92:	ee70 0aa4 	vadd.f32	s1, s1, s9
 8012e96:	eec6 7a80 	vdiv.f32	s15, s13, s0
 8012e9a:	9b0e      	ldr	r3, [sp, #56]	@ 0x38
 8012e9c:	ee31 1a05 	vadd.f32	s2, s2, s10
 8012ea0:	ee20 7aa7 	vmul.f32	s14, s1, s15
 8012ea4:	eeb0 6a62 	vmov.f32	s12, s5
 8012ea8:	ee61 7a27 	vmul.f32	s15, s2, s15
 8012eac:	eebe 6ac8 	vcvt.s32.f32	s12, s12, #16
 8012eb0:	ee77 2a62 	vsub.f32	s5, s14, s5
 8012eb4:	ed8d 6a0f 	vstr	s12, [sp, #60]	@ 0x3c
 8012eb8:	eefe 2ac8 	vcvt.s32.f32	s5, s5, #16
 8012ebc:	eeb0 6a43 	vmov.f32	s12, s6
 8012ec0:	ee37 3ac3 	vsub.f32	s6, s15, s6
 8012ec4:	ee12 2a90 	vmov	r2, s5
 8012ec8:	eebe 3ac8 	vcvt.s32.f32	s6, s6, #16
 8012ecc:	fb92 fcf3 	sdiv	ip, r2, r3
 8012ed0:	ee13 2a10 	vmov	r2, s6
 8012ed4:	fb92 f3f3 	sdiv	r3, r2, r3
 8012ed8:	9312      	str	r3, [sp, #72]	@ 0x48
 8012eda:	9b01      	ldr	r3, [sp, #4]
 8012edc:	9a03      	ldr	r2, [sp, #12]
 8012ede:	eebe 6ac8 	vcvt.s32.f32	s12, s12, #16
 8012ee2:	3b01      	subs	r3, #1
 8012ee4:	9301      	str	r3, [sp, #4]
 8012ee6:	ed8d 6a10 	vstr	s12, [sp, #64]	@ 0x40
 8012eea:	9b0e      	ldr	r3, [sp, #56]	@ 0x38
 8012eec:	eeb0 3a67 	vmov.f32	s6, s15
 8012ef0:	bf08      	it	eq
 8012ef2:	4613      	moveq	r3, r2
 8012ef4:	eef0 2a47 	vmov.f32	s5, s14
 8012ef8:	e793      	b.n	8012e22 <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB888_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2e>
 8012efa:	45ce      	cmp	lr, r9
 8012efc:	dab9      	bge.n	8012e72 <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB888_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x7e>
 8012efe:	9912      	ldr	r1, [sp, #72]	@ 0x48
 8012f00:	fb01 2606 	mla	r6, r1, r6, r2
 8012f04:	1436      	asrs	r6, r6, #16
 8012f06:	d4b4      	bmi.n	8012e72 <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB888_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x7e>
 8012f08:	4546      	cmp	r6, r8
 8012f0a:	dab2      	bge.n	8012e72 <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB888_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x7e>
 8012f0c:	4698      	mov	r8, r3
 8012f0e:	46a2      	mov	sl, r4
 8012f10:	f1b8 0f00 	cmp.w	r8, #0
 8012f14:	ddb3      	ble.n	8012e7e <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB888_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x8a>
 8012f16:	f9b5 9008 	ldrsh.w	r9, [r5, #8]
 8012f1a:	9902      	ldr	r1, [sp, #8]
 8012f1c:	1416      	asrs	r6, r2, #16
 8012f1e:	fb09 1606 	mla	r6, r9, r6, r1
 8012f22:	ea4f 4e20 	mov.w	lr, r0, asr #16
 8012f26:	492a      	ldr	r1, [pc, #168]	@ (8012fd0 <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB888_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1dc>)
 8012f28:	f816 e00e 	ldrb.w	lr, [r6, lr]
 8012f2c:	eb0e 0e4e 	add.w	lr, lr, lr, lsl #1
 8012f30:	eb07 0b0e 	add.w	fp, r7, lr
 8012f34:	4460      	add	r0, ip
 8012f36:	f89b 6001 	ldrb.w	r6, [fp, #1]
 8012f3a:	f89b 9002 	ldrb.w	r9, [fp, #2]
 8012f3e:	00f6      	lsls	r6, r6, #3
 8012f40:	ea01 2909 	and.w	r9, r1, r9, lsl #8
 8012f44:	f406 66fc 	and.w	r6, r6, #2016	@ 0x7e0
 8012f48:	ea49 0606 	orr.w	r6, r9, r6
 8012f4c:	f817 900e 	ldrb.w	r9, [r7, lr]
 8012f50:	9912      	ldr	r1, [sp, #72]	@ 0x48
 8012f52:	ea46 06d9 	orr.w	r6, r6, r9, lsr #3
 8012f56:	f82a 6b02 	strh.w	r6, [sl], #2
 8012f5a:	440a      	add	r2, r1
 8012f5c:	f108 38ff 	add.w	r8, r8, #4294967295
 8012f60:	e7d6      	b.n	8012f10 <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB888_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x11c>
 8012f62:	ea5f 4920 	movs.w	r9, r0, asr #16
 8012f66:	d429      	bmi.n	8012fbc <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB888_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1c8>
 8012f68:	68ae      	ldr	r6, [r5, #8]
 8012f6a:	454e      	cmp	r6, r9
 8012f6c:	dd26      	ble.n	8012fbc <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB888_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1c8>
 8012f6e:	ea5f 4b22 	movs.w	fp, r2, asr #16
 8012f72:	d423      	bmi.n	8012fbc <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB888_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1c8>
 8012f74:	68e9      	ldr	r1, [r5, #12]
 8012f76:	4559      	cmp	r1, fp
 8012f78:	dd20      	ble.n	8012fbc <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB888_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1c8>
 8012f7a:	9902      	ldr	r1, [sp, #8]
 8012f7c:	fa0f fe86 	sxth.w	lr, r6
 8012f80:	fb0b 1e0e 	mla	lr, fp, lr, r1
 8012f84:	f06f 0101 	mvn.w	r1, #1
 8012f88:	f81e e009 	ldrb.w	lr, [lr, r9]
 8012f8c:	eb0e 0e4e 	add.w	lr, lr, lr, lsl #1
 8012f90:	eb07 060e 	add.w	r6, r7, lr
 8012f94:	fb01 f908 	mul.w	r9, r1, r8
 8012f98:	f896 b002 	ldrb.w	fp, [r6, #2]
 8012f9c:	7876      	ldrb	r6, [r6, #1]
 8012f9e:	f2a1 71fe 	subw	r1, r1, #2046	@ 0x7fe
 8012fa2:	00f6      	lsls	r6, r6, #3
 8012fa4:	ea01 2b0b 	and.w	fp, r1, fp, lsl #8
 8012fa8:	f406 66fc 	and.w	r6, r6, #2016	@ 0x7e0
 8012fac:	ea4b 0606 	orr.w	r6, fp, r6
 8012fb0:	f817 b00e 	ldrb.w	fp, [r7, lr]
 8012fb4:	ea46 06db 	orr.w	r6, r6, fp, lsr #3
 8012fb8:	f82a 6009 	strh.w	r6, [sl, r9]
 8012fbc:	9912      	ldr	r1, [sp, #72]	@ 0x48
 8012fbe:	4460      	add	r0, ip
 8012fc0:	440a      	add	r2, r1
 8012fc2:	f108 38ff 	add.w	r8, r8, #4294967295
 8012fc6:	e757      	b.n	8012e78 <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB888_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x84>
 8012fc8:	b005      	add	sp, #20
 8012fca:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 8012fce:	bf00      	nop
 8012fd0:	fffff800 	.word	0xfffff800

08012fd4 <_ZN8touchgfx8LCD16bpp54TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff>:
 8012fd4:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8012fd8:	b087      	sub	sp, #28
 8012fda:	468b      	mov	fp, r1
 8012fdc:	9815      	ldr	r0, [sp, #84]	@ 0x54
 8012fde:	9204      	str	r2, [sp, #16]
 8012fe0:	f89d 2064 	ldrb.w	r2, [sp, #100]	@ 0x64
 8012fe4:	9205      	str	r2, [sp, #20]
 8012fe6:	e9dd 2416 	ldrd	r2, r4, [sp, #88]	@ 0x58
 8012fea:	6841      	ldr	r1, [r0, #4]
 8012fec:	f8dd c060 	ldr.w	ip, [sp, #96]	@ 0x60
 8012ff0:	fb01 2404 	mla	r4, r1, r4, r2
 8012ff4:	6802      	ldr	r2, [r0, #0]
 8012ff6:	eb02 0444 	add.w	r4, r2, r4, lsl #1
 8012ffa:	f8dc 2000 	ldr.w	r2, [ip]
 8012ffe:	9201      	str	r2, [sp, #4]
 8013000:	f8dc 2004 	ldr.w	r2, [ip, #4]
 8013004:	3204      	adds	r2, #4
 8013006:	9202      	str	r2, [sp, #8]
 8013008:	eef7 6a00 	vmov.f32	s13, #112	@ 0x3f800000  1.0
 801300c:	f1bb 0f00 	cmp.w	fp, #0
 8013010:	dc03      	bgt.n	801301a <_ZN8touchgfx8LCD16bpp54TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x46>
 8013012:	9a04      	ldr	r2, [sp, #16]
 8013014:	2a00      	cmp	r2, #0
 8013016:	f340 8138 	ble.w	801328a <_ZN8touchgfx8LCD16bpp54TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2b6>
 801301a:	9a11      	ldr	r2, [sp, #68]	@ 0x44
 801301c:	f9bc 7008 	ldrsh.w	r7, [ip, #8]
 8013020:	f9bc 600c 	ldrsh.w	r6, [ip, #12]
 8013024:	f502 4000 	add.w	r0, r2, #32768	@ 0x8000
 8013028:	9a12      	ldr	r2, [sp, #72]	@ 0x48
 801302a:	f502 4100 	add.w	r1, r2, #32768	@ 0x8000
 801302e:	2b00      	cmp	r3, #0
 8013030:	dd0e      	ble.n	8013050 <_ZN8touchgfx8LCD16bpp54TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x7c>
 8013032:	1402      	asrs	r2, r0, #16
 8013034:	d405      	bmi.n	8013042 <_ZN8touchgfx8LCD16bpp54TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x6e>
 8013036:	42ba      	cmp	r2, r7
 8013038:	da03      	bge.n	8013042 <_ZN8touchgfx8LCD16bpp54TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x6e>
 801303a:	140a      	asrs	r2, r1, #16
 801303c:	d401      	bmi.n	8013042 <_ZN8touchgfx8LCD16bpp54TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x6e>
 801303e:	42b2      	cmp	r2, r6
 8013040:	db07      	blt.n	8013052 <_ZN8touchgfx8LCD16bpp54TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x7e>
 8013042:	9a13      	ldr	r2, [sp, #76]	@ 0x4c
 8013044:	4410      	add	r0, r2
 8013046:	9a14      	ldr	r2, [sp, #80]	@ 0x50
 8013048:	3b01      	subs	r3, #1
 801304a:	4411      	add	r1, r2
 801304c:	3402      	adds	r4, #2
 801304e:	e7ee      	b.n	801302e <_ZN8touchgfx8LCD16bpp54TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x5a>
 8013050:	d019      	beq.n	8013086 <_ZN8touchgfx8LCD16bpp54TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xb2>
 8013052:	9d13      	ldr	r5, [sp, #76]	@ 0x4c
 8013054:	1e5a      	subs	r2, r3, #1
 8013056:	fb05 0502 	mla	r5, r5, r2, r0
 801305a:	142d      	asrs	r5, r5, #16
 801305c:	d409      	bmi.n	8013072 <_ZN8touchgfx8LCD16bpp54TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x9e>
 801305e:	42bd      	cmp	r5, r7
 8013060:	da07      	bge.n	8013072 <_ZN8touchgfx8LCD16bpp54TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x9e>
 8013062:	9d14      	ldr	r5, [sp, #80]	@ 0x50
 8013064:	fb05 1202 	mla	r2, r5, r2, r1
 8013068:	1412      	asrs	r2, r2, #16
 801306a:	d402      	bmi.n	8013072 <_ZN8touchgfx8LCD16bpp54TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x9e>
 801306c:	42b2      	cmp	r2, r6
 801306e:	f2c0 80ac 	blt.w	80131ca <_ZN8touchgfx8LCD16bpp54TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1f6>
 8013072:	f04f 0e00 	mov.w	lr, #0
 8013076:	eb03 020e 	add.w	r2, r3, lr
 801307a:	2a00      	cmp	r2, #0
 801307c:	dc3e      	bgt.n	80130fc <_ZN8touchgfx8LCD16bpp54TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x128>
 801307e:	ea23 73e3 	bic.w	r3, r3, r3, asr #31
 8013082:	eb04 0443 	add.w	r4, r4, r3, lsl #1
 8013086:	f1bb 0f00 	cmp.w	fp, #0
 801308a:	f340 80fe 	ble.w	801328a <_ZN8touchgfx8LCD16bpp54TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2b6>
 801308e:	ee30 0a04 	vadd.f32	s0, s0, s8
 8013092:	ee70 0aa4 	vadd.f32	s1, s1, s9
 8013096:	eec6 7a80 	vdiv.f32	s15, s13, s0
 801309a:	9b10      	ldr	r3, [sp, #64]	@ 0x40
 801309c:	f1bb 0b01 	subs.w	fp, fp, #1
 80130a0:	ee31 1a05 	vadd.f32	s2, s2, s10
 80130a4:	ee20 7aa7 	vmul.f32	s14, s1, s15
 80130a8:	eeb0 6a62 	vmov.f32	s12, s5
 80130ac:	ee61 7a27 	vmul.f32	s15, s2, s15
 80130b0:	eebe 6ac8 	vcvt.s32.f32	s12, s12, #16
 80130b4:	ee77 2a62 	vsub.f32	s5, s14, s5
 80130b8:	ed8d 6a11 	vstr	s12, [sp, #68]	@ 0x44
 80130bc:	eefe 2ac8 	vcvt.s32.f32	s5, s5, #16
 80130c0:	eeb0 6a43 	vmov.f32	s12, s6
 80130c4:	ee37 3ac3 	vsub.f32	s6, s15, s6
 80130c8:	ee12 2a90 	vmov	r2, s5
 80130cc:	eebe 3ac8 	vcvt.s32.f32	s6, s6, #16
 80130d0:	fb92 f3f3 	sdiv	r3, r2, r3
 80130d4:	ee13 2a10 	vmov	r2, s6
 80130d8:	eebe 6ac8 	vcvt.s32.f32	s12, s12, #16
 80130dc:	9313      	str	r3, [sp, #76]	@ 0x4c
 80130de:	9b10      	ldr	r3, [sp, #64]	@ 0x40
 80130e0:	fb92 f3f3 	sdiv	r3, r2, r3
 80130e4:	9a04      	ldr	r2, [sp, #16]
 80130e6:	9314      	str	r3, [sp, #80]	@ 0x50
 80130e8:	ed8d 6a12 	vstr	s12, [sp, #72]	@ 0x48
 80130ec:	9b10      	ldr	r3, [sp, #64]	@ 0x40
 80130ee:	eeb0 3a67 	vmov.f32	s6, s15
 80130f2:	bf08      	it	eq
 80130f4:	4613      	moveq	r3, r2
 80130f6:	eef0 2a47 	vmov.f32	s5, s14
 80130fa:	e787      	b.n	801300c <_ZN8touchgfx8LCD16bpp54TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x38>
 80130fc:	1406      	asrs	r6, r0, #16
 80130fe:	d45d      	bmi.n	80131bc <_ZN8touchgfx8LCD16bpp54TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1e8>
 8013100:	f8dc 5008 	ldr.w	r5, [ip, #8]
 8013104:	42b5      	cmp	r5, r6
 8013106:	dd59      	ble.n	80131bc <_ZN8touchgfx8LCD16bpp54TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1e8>
 8013108:	140f      	asrs	r7, r1, #16
 801310a:	d457      	bmi.n	80131bc <_ZN8touchgfx8LCD16bpp54TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1e8>
 801310c:	f8dc 200c 	ldr.w	r2, [ip, #12]
 8013110:	42ba      	cmp	r2, r7
 8013112:	dd53      	ble.n	80131bc <_ZN8touchgfx8LCD16bpp54TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1e8>
 8013114:	9a01      	ldr	r2, [sp, #4]
 8013116:	b22d      	sxth	r5, r5
 8013118:	fb07 2505 	mla	r5, r7, r5, r2
 801311c:	5daa      	ldrb	r2, [r5, r6]
 801311e:	9d02      	ldr	r5, [sp, #8]
 8013120:	f855 5022 	ldr.w	r5, [r5, r2, lsl #2]
 8013124:	0e2e      	lsrs	r6, r5, #24
 8013126:	d049      	beq.n	80131bc <_ZN8touchgfx8LCD16bpp54TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1e8>
 8013128:	f06f 0201 	mvn.w	r2, #1
 801312c:	fb02 f20e 	mul.w	r2, r2, lr
 8013130:	9203      	str	r2, [sp, #12]
 8013132:	f834 8002 	ldrh.w	r8, [r4, r2]
 8013136:	9a05      	ldr	r2, [sp, #20]
 8013138:	4356      	muls	r6, r2
 801313a:	1c72      	adds	r2, r6, #1
 801313c:	eb02 2226 	add.w	r2, r2, r6, asr #8
 8013140:	1212      	asrs	r2, r2, #8
 8013142:	fa1f f982 	uxth.w	r9, r2
 8013146:	ea4f 2728 	mov.w	r7, r8, asr #8
 801314a:	f3c5 4607 	ubfx	r6, r5, #16, #8
 801314e:	43d2      	mvns	r2, r2
 8013150:	b2d2      	uxtb	r2, r2
 8013152:	fb16 f609 	smulbb	r6, r6, r9
 8013156:	f007 07f8 	and.w	r7, r7, #248	@ 0xf8
 801315a:	fb07 6702 	mla	r7, r7, r2, r6
 801315e:	f3c5 2a07 	ubfx	sl, r5, #8, #8
 8013162:	ea4f 06e8 	mov.w	r6, r8, asr #3
 8013166:	b2ed      	uxtb	r5, r5
 8013168:	ea4f 08c8 	mov.w	r8, r8, lsl #3
 801316c:	fa5f f888 	uxtb.w	r8, r8
 8013170:	fb15 f509 	smulbb	r5, r5, r9
 8013174:	fb08 5502 	mla	r5, r8, r2, r5
 8013178:	b2bf      	uxth	r7, r7
 801317a:	fb1a fa09 	smulbb	sl, sl, r9
 801317e:	b2ad      	uxth	r5, r5
 8013180:	f006 06fc 	and.w	r6, r6, #252	@ 0xfc
 8013184:	fb06 a602 	mla	r6, r6, r2, sl
 8013188:	1c7a      	adds	r2, r7, #1
 801318a:	f105 0a01 	add.w	sl, r5, #1
 801318e:	eb02 2717 	add.w	r7, r2, r7, lsr #8
 8013192:	eb0a 2a15 	add.w	sl, sl, r5, lsr #8
 8013196:	b2b6      	uxth	r6, r6
 8013198:	f3ca 2ac4 	ubfx	sl, sl, #11, #5
 801319c:	f407 4778 	and.w	r7, r7, #63488	@ 0xf800
 80131a0:	ea4a 0707 	orr.w	r7, sl, r7
 80131a4:	f106 0a01 	add.w	sl, r6, #1
 80131a8:	eb0a 2a16 	add.w	sl, sl, r6, lsr #8
 80131ac:	ea4f 1a5a 	mov.w	sl, sl, lsr #5
 80131b0:	f40a 6afc 	and.w	sl, sl, #2016	@ 0x7e0
 80131b4:	9a03      	ldr	r2, [sp, #12]
 80131b6:	ea47 070a 	orr.w	r7, r7, sl
 80131ba:	52a7      	strh	r7, [r4, r2]
 80131bc:	9a13      	ldr	r2, [sp, #76]	@ 0x4c
 80131be:	4410      	add	r0, r2
 80131c0:	9a14      	ldr	r2, [sp, #80]	@ 0x50
 80131c2:	f10e 3eff 	add.w	lr, lr, #4294967295
 80131c6:	4411      	add	r1, r2
 80131c8:	e755      	b.n	8013076 <_ZN8touchgfx8LCD16bpp54TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xa2>
 80131ca:	f04f 0800 	mov.w	r8, #0
 80131ce:	eba3 0208 	sub.w	r2, r3, r8
 80131d2:	2a00      	cmp	r2, #0
 80131d4:	f77f af53 	ble.w	801307e <_ZN8touchgfx8LCD16bpp54TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xaa>
 80131d8:	f9bc 6008 	ldrsh.w	r6, [ip, #8]
 80131dc:	9f01      	ldr	r7, [sp, #4]
 80131de:	140a      	asrs	r2, r1, #16
 80131e0:	1405      	asrs	r5, r0, #16
 80131e2:	fb06 7202 	mla	r2, r6, r2, r7
 80131e6:	5d52      	ldrb	r2, [r2, r5]
 80131e8:	9d02      	ldr	r5, [sp, #8]
 80131ea:	f855 5022 	ldr.w	r5, [r5, r2, lsl #2]
 80131ee:	0e2e      	lsrs	r6, r5, #24
 80131f0:	d044      	beq.n	801327c <_ZN8touchgfx8LCD16bpp54TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2a8>
 80131f2:	9a05      	ldr	r2, [sp, #20]
 80131f4:	f834 e018 	ldrh.w	lr, [r4, r8, lsl #1]
 80131f8:	4356      	muls	r6, r2
 80131fa:	1c72      	adds	r2, r6, #1
 80131fc:	eb02 2226 	add.w	r2, r2, r6, asr #8
 8013200:	1212      	asrs	r2, r2, #8
 8013202:	fa1f f982 	uxth.w	r9, r2
 8013206:	ea4f 272e 	mov.w	r7, lr, asr #8
 801320a:	f3c5 4607 	ubfx	r6, r5, #16, #8
 801320e:	43d2      	mvns	r2, r2
 8013210:	b2d2      	uxtb	r2, r2
 8013212:	fb16 f609 	smulbb	r6, r6, r9
 8013216:	f007 07f8 	and.w	r7, r7, #248	@ 0xf8
 801321a:	fb07 6702 	mla	r7, r7, r2, r6
 801321e:	f3c5 2a07 	ubfx	sl, r5, #8, #8
 8013222:	ea4f 06ee 	mov.w	r6, lr, asr #3
 8013226:	b2ed      	uxtb	r5, r5
 8013228:	ea4f 0ece 	mov.w	lr, lr, lsl #3
 801322c:	fa5f fe8e 	uxtb.w	lr, lr
 8013230:	fb15 f509 	smulbb	r5, r5, r9
 8013234:	fb0e 5502 	mla	r5, lr, r2, r5
 8013238:	b2bf      	uxth	r7, r7
 801323a:	fb1a fa09 	smulbb	sl, sl, r9
 801323e:	b2ad      	uxth	r5, r5
 8013240:	f006 06fc 	and.w	r6, r6, #252	@ 0xfc
 8013244:	fb06 a602 	mla	r6, r6, r2, sl
 8013248:	1c7a      	adds	r2, r7, #1
 801324a:	f105 0a01 	add.w	sl, r5, #1
 801324e:	eb02 2717 	add.w	r7, r2, r7, lsr #8
 8013252:	eb0a 2a15 	add.w	sl, sl, r5, lsr #8
 8013256:	b2b6      	uxth	r6, r6
 8013258:	f3ca 2ac4 	ubfx	sl, sl, #11, #5
 801325c:	f407 4778 	and.w	r7, r7, #63488	@ 0xf800
 8013260:	ea4a 0707 	orr.w	r7, sl, r7
 8013264:	f106 0a01 	add.w	sl, r6, #1
 8013268:	eb0a 2a16 	add.w	sl, sl, r6, lsr #8
 801326c:	ea4f 1a5a 	mov.w	sl, sl, lsr #5
 8013270:	f40a 6afc 	and.w	sl, sl, #2016	@ 0x7e0
 8013274:	ea47 070a 	orr.w	r7, r7, sl
 8013278:	f824 7018 	strh.w	r7, [r4, r8, lsl #1]
 801327c:	9a13      	ldr	r2, [sp, #76]	@ 0x4c
 801327e:	4410      	add	r0, r2
 8013280:	9a14      	ldr	r2, [sp, #80]	@ 0x50
 8013282:	f108 0801 	add.w	r8, r8, #1
 8013286:	4411      	add	r1, r2
 8013288:	e7a1      	b.n	80131ce <_ZN8touchgfx8LCD16bpp54TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1fa>
 801328a:	b007      	add	sp, #28
 801328c:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}

08013290 <_ZN8touchgfx8LCD16bpp56TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff>:
 8013290:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8013294:	b085      	sub	sp, #20
 8013296:	468b      	mov	fp, r1
 8013298:	9813      	ldr	r0, [sp, #76]	@ 0x4c
 801329a:	9203      	str	r2, [sp, #12]
 801329c:	e9dd 2414 	ldrd	r2, r4, [sp, #80]	@ 0x50
 80132a0:	6841      	ldr	r1, [r0, #4]
 80132a2:	f8dd e058 	ldr.w	lr, [sp, #88]	@ 0x58
 80132a6:	fb01 2404 	mla	r4, r1, r4, r2
 80132aa:	6802      	ldr	r2, [r0, #0]
 80132ac:	eb02 0444 	add.w	r4, r2, r4, lsl #1
 80132b0:	f8de 2000 	ldr.w	r2, [lr]
 80132b4:	9200      	str	r2, [sp, #0]
 80132b6:	f8de 2004 	ldr.w	r2, [lr, #4]
 80132ba:	3204      	adds	r2, #4
 80132bc:	9201      	str	r2, [sp, #4]
 80132be:	eef7 6a00 	vmov.f32	s13, #112	@ 0x3f800000  1.0
 80132c2:	f1bb 0f00 	cmp.w	fp, #0
 80132c6:	dc03      	bgt.n	80132d0 <_ZN8touchgfx8LCD16bpp56TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x40>
 80132c8:	9a03      	ldr	r2, [sp, #12]
 80132ca:	2a00      	cmp	r2, #0
 80132cc:	f340 8153 	ble.w	8013576 <_ZN8touchgfx8LCD16bpp56TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2e6>
 80132d0:	9a0f      	ldr	r2, [sp, #60]	@ 0x3c
 80132d2:	f9be 7008 	ldrsh.w	r7, [lr, #8]
 80132d6:	f9be 600c 	ldrsh.w	r6, [lr, #12]
 80132da:	f502 4100 	add.w	r1, r2, #32768	@ 0x8000
 80132de:	9a10      	ldr	r2, [sp, #64]	@ 0x40
 80132e0:	f502 4200 	add.w	r2, r2, #32768	@ 0x8000
 80132e4:	2b00      	cmp	r3, #0
 80132e6:	dd0e      	ble.n	8013306 <_ZN8touchgfx8LCD16bpp56TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x76>
 80132e8:	1408      	asrs	r0, r1, #16
 80132ea:	d405      	bmi.n	80132f8 <_ZN8touchgfx8LCD16bpp56TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x68>
 80132ec:	42b8      	cmp	r0, r7
 80132ee:	da03      	bge.n	80132f8 <_ZN8touchgfx8LCD16bpp56TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x68>
 80132f0:	1410      	asrs	r0, r2, #16
 80132f2:	d401      	bmi.n	80132f8 <_ZN8touchgfx8LCD16bpp56TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x68>
 80132f4:	42b0      	cmp	r0, r6
 80132f6:	db07      	blt.n	8013308 <_ZN8touchgfx8LCD16bpp56TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x78>
 80132f8:	9811      	ldr	r0, [sp, #68]	@ 0x44
 80132fa:	4401      	add	r1, r0
 80132fc:	9812      	ldr	r0, [sp, #72]	@ 0x48
 80132fe:	3b01      	subs	r3, #1
 8013300:	4402      	add	r2, r0
 8013302:	3402      	adds	r4, #2
 8013304:	e7ee      	b.n	80132e4 <_ZN8touchgfx8LCD16bpp56TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x54>
 8013306:	d017      	beq.n	8013338 <_ZN8touchgfx8LCD16bpp56TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xa8>
 8013308:	9d11      	ldr	r5, [sp, #68]	@ 0x44
 801330a:	1e58      	subs	r0, r3, #1
 801330c:	fb05 1500 	mla	r5, r5, r0, r1
 8013310:	142d      	asrs	r5, r5, #16
 8013312:	d409      	bmi.n	8013328 <_ZN8touchgfx8LCD16bpp56TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x98>
 8013314:	42bd      	cmp	r5, r7
 8013316:	da07      	bge.n	8013328 <_ZN8touchgfx8LCD16bpp56TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x98>
 8013318:	9d12      	ldr	r5, [sp, #72]	@ 0x48
 801331a:	fb05 2000 	mla	r0, r5, r0, r2
 801331e:	1400      	asrs	r0, r0, #16
 8013320:	d402      	bmi.n	8013328 <_ZN8touchgfx8LCD16bpp56TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x98>
 8013322:	42b0      	cmp	r0, r6
 8013324:	f2c0 80bc 	blt.w	80134a0 <_ZN8touchgfx8LCD16bpp56TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x210>
 8013328:	2600      	movs	r6, #0
 801332a:	1998      	adds	r0, r3, r6
 801332c:	2800      	cmp	r0, #0
 801332e:	dc3e      	bgt.n	80133ae <_ZN8touchgfx8LCD16bpp56TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x11e>
 8013330:	ea23 73e3 	bic.w	r3, r3, r3, asr #31
 8013334:	eb04 0443 	add.w	r4, r4, r3, lsl #1
 8013338:	f1bb 0f00 	cmp.w	fp, #0
 801333c:	f340 811b 	ble.w	8013576 <_ZN8touchgfx8LCD16bpp56TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2e6>
 8013340:	ee30 0a04 	vadd.f32	s0, s0, s8
 8013344:	ee70 0aa4 	vadd.f32	s1, s1, s9
 8013348:	eec6 7a80 	vdiv.f32	s15, s13, s0
 801334c:	9b0e      	ldr	r3, [sp, #56]	@ 0x38
 801334e:	f1bb 0b01 	subs.w	fp, fp, #1
 8013352:	ee31 1a05 	vadd.f32	s2, s2, s10
 8013356:	ee20 7aa7 	vmul.f32	s14, s1, s15
 801335a:	eeb0 6a62 	vmov.f32	s12, s5
 801335e:	ee61 7a27 	vmul.f32	s15, s2, s15
 8013362:	eebe 6ac8 	vcvt.s32.f32	s12, s12, #16
 8013366:	ee77 2a62 	vsub.f32	s5, s14, s5
 801336a:	ed8d 6a0f 	vstr	s12, [sp, #60]	@ 0x3c
 801336e:	eefe 2ac8 	vcvt.s32.f32	s5, s5, #16
 8013372:	eeb0 6a43 	vmov.f32	s12, s6
 8013376:	ee37 3ac3 	vsub.f32	s6, s15, s6
 801337a:	ee12 2a90 	vmov	r2, s5
 801337e:	eebe 3ac8 	vcvt.s32.f32	s6, s6, #16
 8013382:	fb92 f3f3 	sdiv	r3, r2, r3
 8013386:	ee13 2a10 	vmov	r2, s6
 801338a:	eebe 6ac8 	vcvt.s32.f32	s12, s12, #16
 801338e:	9311      	str	r3, [sp, #68]	@ 0x44
 8013390:	9b0e      	ldr	r3, [sp, #56]	@ 0x38
 8013392:	fb92 f3f3 	sdiv	r3, r2, r3
 8013396:	9a03      	ldr	r2, [sp, #12]
 8013398:	9312      	str	r3, [sp, #72]	@ 0x48
 801339a:	ed8d 6a10 	vstr	s12, [sp, #64]	@ 0x40
 801339e:	9b0e      	ldr	r3, [sp, #56]	@ 0x38
 80133a0:	eeb0 3a67 	vmov.f32	s6, s15
 80133a4:	bf08      	it	eq
 80133a6:	4613      	moveq	r3, r2
 80133a8:	eef0 2a47 	vmov.f32	s5, s14
 80133ac:	e789      	b.n	80132c2 <_ZN8touchgfx8LCD16bpp56TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x32>
 80133ae:	140f      	asrs	r7, r1, #16
 80133b0:	d426      	bmi.n	8013400 <_ZN8touchgfx8LCD16bpp56TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x170>
 80133b2:	f8de 5008 	ldr.w	r5, [lr, #8]
 80133b6:	42bd      	cmp	r5, r7
 80133b8:	dd22      	ble.n	8013400 <_ZN8touchgfx8LCD16bpp56TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x170>
 80133ba:	ea5f 4c22 	movs.w	ip, r2, asr #16
 80133be:	d41f      	bmi.n	8013400 <_ZN8touchgfx8LCD16bpp56TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x170>
 80133c0:	f8de 000c 	ldr.w	r0, [lr, #12]
 80133c4:	4560      	cmp	r0, ip
 80133c6:	dd1b      	ble.n	8013400 <_ZN8touchgfx8LCD16bpp56TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x170>
 80133c8:	9800      	ldr	r0, [sp, #0]
 80133ca:	b22d      	sxth	r5, r5
 80133cc:	fb0c 0505 	mla	r5, ip, r5, r0
 80133d0:	5de8      	ldrb	r0, [r5, r7]
 80133d2:	9d01      	ldr	r5, [sp, #4]
 80133d4:	f855 0020 	ldr.w	r0, [r5, r0, lsl #2]
 80133d8:	0e07      	lsrs	r7, r0, #24
 80133da:	2fff      	cmp	r7, #255	@ 0xff
 80133dc:	d116      	bne.n	801340c <_ZN8touchgfx8LCD16bpp56TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x17c>
 80133de:	f06f 0501 	mvn.w	r5, #1
 80133e2:	fb05 f706 	mul.w	r7, r5, r6
 80133e6:	f2a5 75fe 	subw	r5, r5, #2046	@ 0x7fe
 80133ea:	ea05 2c10 	and.w	ip, r5, r0, lsr #8
 80133ee:	0945      	lsrs	r5, r0, #5
 80133f0:	f405 65fc 	and.w	r5, r5, #2016	@ 0x7e0
 80133f4:	ea4c 0505 	orr.w	r5, ip, r5
 80133f8:	f3c0 00c4 	ubfx	r0, r0, #3, #5
 80133fc:	4305      	orrs	r5, r0
 80133fe:	53e5      	strh	r5, [r4, r7]
 8013400:	9811      	ldr	r0, [sp, #68]	@ 0x44
 8013402:	4401      	add	r1, r0
 8013404:	9812      	ldr	r0, [sp, #72]	@ 0x48
 8013406:	3e01      	subs	r6, #1
 8013408:	4402      	add	r2, r0
 801340a:	e78e      	b.n	801332a <_ZN8touchgfx8LCD16bpp56TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x9a>
 801340c:	b2fd      	uxtb	r5, r7
 801340e:	2f00      	cmp	r7, #0
 8013410:	d0f6      	beq.n	8013400 <_ZN8touchgfx8LCD16bpp56TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x170>
 8013412:	f06f 0701 	mvn.w	r7, #1
 8013416:	4377      	muls	r7, r6
 8013418:	fa1f f985 	uxth.w	r9, r5
 801341c:	f834 8007 	ldrh.w	r8, [r4, r7]
 8013420:	9702      	str	r7, [sp, #8]
 8013422:	ea4f 2c28 	mov.w	ip, r8, asr #8
 8013426:	f3c0 4707 	ubfx	r7, r0, #16, #8
 801342a:	43ed      	mvns	r5, r5
 801342c:	b2ed      	uxtb	r5, r5
 801342e:	fb17 f709 	smulbb	r7, r7, r9
 8013432:	f00c 0cf8 	and.w	ip, ip, #248	@ 0xf8
 8013436:	fb0c 7c05 	mla	ip, ip, r5, r7
 801343a:	f3c0 2a07 	ubfx	sl, r0, #8, #8
 801343e:	ea4f 07e8 	mov.w	r7, r8, asr #3
 8013442:	b2c0      	uxtb	r0, r0
 8013444:	ea4f 08c8 	mov.w	r8, r8, lsl #3
 8013448:	fa5f f888 	uxtb.w	r8, r8
 801344c:	fb10 f009 	smulbb	r0, r0, r9
 8013450:	fb08 0005 	mla	r0, r8, r5, r0
 8013454:	b280      	uxth	r0, r0
 8013456:	fa1f fc8c 	uxth.w	ip, ip
 801345a:	fb1a fa09 	smulbb	sl, sl, r9
 801345e:	f007 07fc 	and.w	r7, r7, #252	@ 0xfc
 8013462:	fb07 a705 	mla	r7, r7, r5, sl
 8013466:	f100 0a01 	add.w	sl, r0, #1
 801346a:	f10c 0501 	add.w	r5, ip, #1
 801346e:	eb0a 2a10 	add.w	sl, sl, r0, lsr #8
 8013472:	eb05 2c1c 	add.w	ip, r5, ip, lsr #8
 8013476:	b2bf      	uxth	r7, r7
 8013478:	f3ca 2ac4 	ubfx	sl, sl, #11, #5
 801347c:	f40c 4c78 	and.w	ip, ip, #63488	@ 0xf800
 8013480:	ea4a 0c0c 	orr.w	ip, sl, ip
 8013484:	f107 0a01 	add.w	sl, r7, #1
 8013488:	eb0a 2a17 	add.w	sl, sl, r7, lsr #8
 801348c:	ea4f 1a5a 	mov.w	sl, sl, lsr #5
 8013490:	f40a 6afc 	and.w	sl, sl, #2016	@ 0x7e0
 8013494:	9802      	ldr	r0, [sp, #8]
 8013496:	ea4c 0c0a 	orr.w	ip, ip, sl
 801349a:	f824 c000 	strh.w	ip, [r4, r0]
 801349e:	e7af      	b.n	8013400 <_ZN8touchgfx8LCD16bpp56TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x170>
 80134a0:	f04f 0800 	mov.w	r8, #0
 80134a4:	eba3 0008 	sub.w	r0, r3, r8
 80134a8:	2800      	cmp	r0, #0
 80134aa:	f77f af41 	ble.w	8013330 <_ZN8touchgfx8LCD16bpp56TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xa0>
 80134ae:	f9be 6008 	ldrsh.w	r6, [lr, #8]
 80134b2:	9f00      	ldr	r7, [sp, #0]
 80134b4:	1410      	asrs	r0, r2, #16
 80134b6:	140d      	asrs	r5, r1, #16
 80134b8:	fb06 7000 	mla	r0, r6, r0, r7
 80134bc:	5d40      	ldrb	r0, [r0, r5]
 80134be:	9d01      	ldr	r5, [sp, #4]
 80134c0:	f855 5020 	ldr.w	r5, [r5, r0, lsl #2]
 80134c4:	0e2e      	lsrs	r6, r5, #24
 80134c6:	2eff      	cmp	r6, #255	@ 0xff
 80134c8:	d112      	bne.n	80134f0 <_ZN8touchgfx8LCD16bpp56TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x260>
 80134ca:	482c      	ldr	r0, [pc, #176]	@ (801357c <_ZN8touchgfx8LCD16bpp56TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2ec>)
 80134cc:	ea00 2615 	and.w	r6, r0, r5, lsr #8
 80134d0:	0968      	lsrs	r0, r5, #5
 80134d2:	f400 60fc 	and.w	r0, r0, #2016	@ 0x7e0
 80134d6:	4330      	orrs	r0, r6
 80134d8:	f3c5 05c4 	ubfx	r5, r5, #3, #5
 80134dc:	4328      	orrs	r0, r5
 80134de:	f824 0018 	strh.w	r0, [r4, r8, lsl #1]
 80134e2:	9811      	ldr	r0, [sp, #68]	@ 0x44
 80134e4:	4401      	add	r1, r0
 80134e6:	9812      	ldr	r0, [sp, #72]	@ 0x48
 80134e8:	f108 0801 	add.w	r8, r8, #1
 80134ec:	4402      	add	r2, r0
 80134ee:	e7d9      	b.n	80134a4 <_ZN8touchgfx8LCD16bpp56TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x214>
 80134f0:	b2f0      	uxtb	r0, r6
 80134f2:	2e00      	cmp	r6, #0
 80134f4:	d0f5      	beq.n	80134e2 <_ZN8touchgfx8LCD16bpp56TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x252>
 80134f6:	f834 c018 	ldrh.w	ip, [r4, r8, lsl #1]
 80134fa:	fa1f f980 	uxth.w	r9, r0
 80134fe:	ea4f 272c 	mov.w	r7, ip, asr #8
 8013502:	f3c5 4607 	ubfx	r6, r5, #16, #8
 8013506:	43c0      	mvns	r0, r0
 8013508:	b2c0      	uxtb	r0, r0
 801350a:	fb16 f609 	smulbb	r6, r6, r9
 801350e:	f007 07f8 	and.w	r7, r7, #248	@ 0xf8
 8013512:	fb07 6700 	mla	r7, r7, r0, r6
 8013516:	f3c5 2a07 	ubfx	sl, r5, #8, #8
 801351a:	ea4f 06ec 	mov.w	r6, ip, asr #3
 801351e:	b2ed      	uxtb	r5, r5
 8013520:	ea4f 0ccc 	mov.w	ip, ip, lsl #3
 8013524:	fa5f fc8c 	uxtb.w	ip, ip
 8013528:	fb15 f509 	smulbb	r5, r5, r9
 801352c:	fb0c 5500 	mla	r5, ip, r0, r5
 8013530:	b2bf      	uxth	r7, r7
 8013532:	fb1a fa09 	smulbb	sl, sl, r9
 8013536:	b2ad      	uxth	r5, r5
 8013538:	f006 06fc 	and.w	r6, r6, #252	@ 0xfc
 801353c:	fb06 a600 	mla	r6, r6, r0, sl
 8013540:	1c78      	adds	r0, r7, #1
 8013542:	f105 0a01 	add.w	sl, r5, #1
 8013546:	eb00 2717 	add.w	r7, r0, r7, lsr #8
 801354a:	eb0a 2a15 	add.w	sl, sl, r5, lsr #8
 801354e:	b2b6      	uxth	r6, r6
 8013550:	f3ca 2ac4 	ubfx	sl, sl, #11, #5
 8013554:	f407 4778 	and.w	r7, r7, #63488	@ 0xf800
 8013558:	ea4a 0707 	orr.w	r7, sl, r7
 801355c:	f106 0a01 	add.w	sl, r6, #1
 8013560:	eb0a 2a16 	add.w	sl, sl, r6, lsr #8
 8013564:	ea4f 1a5a 	mov.w	sl, sl, lsr #5
 8013568:	f40a 6afc 	and.w	sl, sl, #2016	@ 0x7e0
 801356c:	ea47 070a 	orr.w	r7, r7, sl
 8013570:	f824 7018 	strh.w	r7, [r4, r8, lsl #1]
 8013574:	e7b5      	b.n	80134e2 <_ZN8touchgfx8LCD16bpp56TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x252>
 8013576:	b005      	add	sp, #20
 8013578:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 801357c:	fffff800 	.word	0xfffff800

08013580 <_ZN8touchgfx8LCD16bpp49TextureMapper_RGB565_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff>:
 8013580:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8013584:	b087      	sub	sp, #28
 8013586:	468b      	mov	fp, r1
 8013588:	9c15      	ldr	r4, [sp, #84]	@ 0x54
 801358a:	9204      	str	r2, [sp, #16]
 801358c:	f89d 2064 	ldrb.w	r2, [sp, #100]	@ 0x64
 8013590:	9205      	str	r2, [sp, #20]
 8013592:	e9dd 2016 	ldrd	r2, r0, [sp, #88]	@ 0x58
 8013596:	6861      	ldr	r1, [r4, #4]
 8013598:	f8dd e060 	ldr.w	lr, [sp, #96]	@ 0x60
 801359c:	fb01 2000 	mla	r0, r1, r0, r2
 80135a0:	6822      	ldr	r2, [r4, #0]
 80135a2:	eb02 0040 	add.w	r0, r2, r0, lsl #1
 80135a6:	f8de 2000 	ldr.w	r2, [lr]
 80135aa:	9201      	str	r2, [sp, #4]
 80135ac:	f8de 2004 	ldr.w	r2, [lr, #4]
 80135b0:	9202      	str	r2, [sp, #8]
 80135b2:	eef7 6a00 	vmov.f32	s13, #112	@ 0x3f800000  1.0
 80135b6:	f1bb 0f00 	cmp.w	fp, #0
 80135ba:	dc03      	bgt.n	80135c4 <_ZN8touchgfx8LCD16bpp49TextureMapper_RGB565_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x44>
 80135bc:	9a04      	ldr	r2, [sp, #16]
 80135be:	2a00      	cmp	r2, #0
 80135c0:	f340 8142 	ble.w	8013848 <_ZN8touchgfx8LCD16bpp49TextureMapper_RGB565_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2c8>
 80135c4:	9a11      	ldr	r2, [sp, #68]	@ 0x44
 80135c6:	f9be 7008 	ldrsh.w	r7, [lr, #8]
 80135ca:	f9be 600c 	ldrsh.w	r6, [lr, #12]
 80135ce:	f502 4100 	add.w	r1, r2, #32768	@ 0x8000
 80135d2:	9a12      	ldr	r2, [sp, #72]	@ 0x48
 80135d4:	f502 4200 	add.w	r2, r2, #32768	@ 0x8000
 80135d8:	2b00      	cmp	r3, #0
 80135da:	dd0e      	ble.n	80135fa <_ZN8touchgfx8LCD16bpp49TextureMapper_RGB565_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x7a>
 80135dc:	140c      	asrs	r4, r1, #16
 80135de:	d405      	bmi.n	80135ec <_ZN8touchgfx8LCD16bpp49TextureMapper_RGB565_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x6c>
 80135e0:	42bc      	cmp	r4, r7
 80135e2:	da03      	bge.n	80135ec <_ZN8touchgfx8LCD16bpp49TextureMapper_RGB565_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x6c>
 80135e4:	1414      	asrs	r4, r2, #16
 80135e6:	d401      	bmi.n	80135ec <_ZN8touchgfx8LCD16bpp49TextureMapper_RGB565_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x6c>
 80135e8:	42b4      	cmp	r4, r6
 80135ea:	db07      	blt.n	80135fc <_ZN8touchgfx8LCD16bpp49TextureMapper_RGB565_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x7c>
 80135ec:	9c13      	ldr	r4, [sp, #76]	@ 0x4c
 80135ee:	4421      	add	r1, r4
 80135f0:	9c14      	ldr	r4, [sp, #80]	@ 0x50
 80135f2:	3b01      	subs	r3, #1
 80135f4:	4422      	add	r2, r4
 80135f6:	3002      	adds	r0, #2
 80135f8:	e7ee      	b.n	80135d8 <_ZN8touchgfx8LCD16bpp49TextureMapper_RGB565_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x58>
 80135fa:	d019      	beq.n	8013630 <_ZN8touchgfx8LCD16bpp49TextureMapper_RGB565_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xb0>
 80135fc:	9d13      	ldr	r5, [sp, #76]	@ 0x4c
 80135fe:	1e5c      	subs	r4, r3, #1
 8013600:	fb05 1504 	mla	r5, r5, r4, r1
 8013604:	142d      	asrs	r5, r5, #16
 8013606:	d409      	bmi.n	801361c <_ZN8touchgfx8LCD16bpp49TextureMapper_RGB565_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x9c>
 8013608:	42bd      	cmp	r5, r7
 801360a:	da07      	bge.n	801361c <_ZN8touchgfx8LCD16bpp49TextureMapper_RGB565_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x9c>
 801360c:	9d14      	ldr	r5, [sp, #80]	@ 0x50
 801360e:	fb05 2404 	mla	r4, r5, r4, r2
 8013612:	1424      	asrs	r4, r4, #16
 8013614:	d402      	bmi.n	801361c <_ZN8touchgfx8LCD16bpp49TextureMapper_RGB565_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x9c>
 8013616:	42b4      	cmp	r4, r6
 8013618:	f2c0 80b1 	blt.w	801377e <_ZN8touchgfx8LCD16bpp49TextureMapper_RGB565_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1fe>
 801361c:	f04f 0800 	mov.w	r8, #0
 8013620:	eb03 0408 	add.w	r4, r3, r8
 8013624:	2c00      	cmp	r4, #0
 8013626:	dc3e      	bgt.n	80136a6 <_ZN8touchgfx8LCD16bpp49TextureMapper_RGB565_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x126>
 8013628:	ea23 73e3 	bic.w	r3, r3, r3, asr #31
 801362c:	eb00 0043 	add.w	r0, r0, r3, lsl #1
 8013630:	f1bb 0f00 	cmp.w	fp, #0
 8013634:	f340 8108 	ble.w	8013848 <_ZN8touchgfx8LCD16bpp49TextureMapper_RGB565_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2c8>
 8013638:	ee30 0a04 	vadd.f32	s0, s0, s8
 801363c:	ee70 0aa4 	vadd.f32	s1, s1, s9
 8013640:	eec6 7a80 	vdiv.f32	s15, s13, s0
 8013644:	9b10      	ldr	r3, [sp, #64]	@ 0x40
 8013646:	f1bb 0b01 	subs.w	fp, fp, #1
 801364a:	ee31 1a05 	vadd.f32	s2, s2, s10
 801364e:	ee20 7aa7 	vmul.f32	s14, s1, s15
 8013652:	eeb0 6a62 	vmov.f32	s12, s5
 8013656:	ee61 7a27 	vmul.f32	s15, s2, s15
 801365a:	eebe 6ac8 	vcvt.s32.f32	s12, s12, #16
 801365e:	ee77 2a62 	vsub.f32	s5, s14, s5
 8013662:	ed8d 6a11 	vstr	s12, [sp, #68]	@ 0x44
 8013666:	eefe 2ac8 	vcvt.s32.f32	s5, s5, #16
 801366a:	eeb0 6a43 	vmov.f32	s12, s6
 801366e:	ee37 3ac3 	vsub.f32	s6, s15, s6
 8013672:	ee12 2a90 	vmov	r2, s5
 8013676:	eebe 3ac8 	vcvt.s32.f32	s6, s6, #16
 801367a:	fb92 f3f3 	sdiv	r3, r2, r3
 801367e:	ee13 2a10 	vmov	r2, s6
 8013682:	eebe 6ac8 	vcvt.s32.f32	s12, s12, #16
 8013686:	9313      	str	r3, [sp, #76]	@ 0x4c
 8013688:	9b10      	ldr	r3, [sp, #64]	@ 0x40
 801368a:	fb92 f3f3 	sdiv	r3, r2, r3
 801368e:	9a04      	ldr	r2, [sp, #16]
 8013690:	9314      	str	r3, [sp, #80]	@ 0x50
 8013692:	ed8d 6a12 	vstr	s12, [sp, #72]	@ 0x48
 8013696:	9b10      	ldr	r3, [sp, #64]	@ 0x40
 8013698:	eeb0 3a67 	vmov.f32	s6, s15
 801369c:	bf08      	it	eq
 801369e:	4613      	moveq	r3, r2
 80136a0:	eef0 2a47 	vmov.f32	s5, s14
 80136a4:	e787      	b.n	80135b6 <_ZN8touchgfx8LCD16bpp49TextureMapper_RGB565_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x36>
 80136a6:	140e      	asrs	r6, r1, #16
 80136a8:	d462      	bmi.n	8013770 <_ZN8touchgfx8LCD16bpp49TextureMapper_RGB565_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1f0>
 80136aa:	f8de 5008 	ldr.w	r5, [lr, #8]
 80136ae:	42b5      	cmp	r5, r6
 80136b0:	dd5e      	ble.n	8013770 <_ZN8touchgfx8LCD16bpp49TextureMapper_RGB565_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1f0>
 80136b2:	1417      	asrs	r7, r2, #16
 80136b4:	d45c      	bmi.n	8013770 <_ZN8touchgfx8LCD16bpp49TextureMapper_RGB565_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1f0>
 80136b6:	f8de 400c 	ldr.w	r4, [lr, #12]
 80136ba:	42bc      	cmp	r4, r7
 80136bc:	dd58      	ble.n	8013770 <_ZN8touchgfx8LCD16bpp49TextureMapper_RGB565_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1f0>
 80136be:	b22d      	sxth	r5, r5
 80136c0:	fb07 6505 	mla	r5, r7, r5, r6
 80136c4:	9c02      	ldr	r4, [sp, #8]
 80136c6:	5d66      	ldrb	r6, [r4, r5]
 80136c8:	2e00      	cmp	r6, #0
 80136ca:	d051      	beq.n	8013770 <_ZN8touchgfx8LCD16bpp49TextureMapper_RGB565_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1f0>
 80136cc:	9c01      	ldr	r4, [sp, #4]
 80136ce:	f834 9015 	ldrh.w	r9, [r4, r5, lsl #1]
 80136d2:	f06f 0401 	mvn.w	r4, #1
 80136d6:	fb04 f408 	mul.w	r4, r4, r8
 80136da:	9403      	str	r4, [sp, #12]
 80136dc:	5b05      	ldrh	r5, [r0, r4]
 80136de:	9c05      	ldr	r4, [sp, #20]
 80136e0:	4366      	muls	r6, r4
 80136e2:	1c74      	adds	r4, r6, #1
 80136e4:	eb04 2416 	add.w	r4, r4, r6, lsr #8
 80136e8:	1224      	asrs	r4, r4, #8
 80136ea:	b2a7      	uxth	r7, r4
 80136ec:	122e      	asrs	r6, r5, #8
 80136ee:	43e4      	mvns	r4, r4
 80136f0:	b2e4      	uxtb	r4, r4
 80136f2:	ea4f 2c29 	mov.w	ip, r9, asr #8
 80136f6:	f006 06f8 	and.w	r6, r6, #248	@ 0xf8
 80136fa:	fb16 f604 	smulbb	r6, r6, r4
 80136fe:	ea4f 0ae5 	mov.w	sl, r5, asr #3
 8013702:	f00c 0cf8 	and.w	ip, ip, #248	@ 0xf8
 8013706:	00ed      	lsls	r5, r5, #3
 8013708:	fb0c 6c07 	mla	ip, ip, r7, r6
 801370c:	b2ed      	uxtb	r5, r5
 801370e:	ea4f 06e9 	mov.w	r6, r9, asr #3
 8013712:	ea4f 09c9 	mov.w	r9, r9, lsl #3
 8013716:	fb15 f504 	smulbb	r5, r5, r4
 801371a:	fa5f f989 	uxtb.w	r9, r9
 801371e:	f00a 0afc 	and.w	sl, sl, #252	@ 0xfc
 8013722:	fb09 5507 	mla	r5, r9, r7, r5
 8013726:	fb1a fa04 	smulbb	sl, sl, r4
 801372a:	fa1f fc8c 	uxth.w	ip, ip
 801372e:	b2ad      	uxth	r5, r5
 8013730:	f006 06fc 	and.w	r6, r6, #252	@ 0xfc
 8013734:	fb06 a607 	mla	r6, r6, r7, sl
 8013738:	f10c 0401 	add.w	r4, ip, #1
 801373c:	f105 0a01 	add.w	sl, r5, #1
 8013740:	eb04 2c1c 	add.w	ip, r4, ip, lsr #8
 8013744:	eb0a 2a15 	add.w	sl, sl, r5, lsr #8
 8013748:	b2b6      	uxth	r6, r6
 801374a:	f3ca 2ac4 	ubfx	sl, sl, #11, #5
 801374e:	f40c 4c78 	and.w	ip, ip, #63488	@ 0xf800
 8013752:	ea4a 0c0c 	orr.w	ip, sl, ip
 8013756:	f106 0a01 	add.w	sl, r6, #1
 801375a:	eb0a 2a16 	add.w	sl, sl, r6, lsr #8
 801375e:	ea4f 1a5a 	mov.w	sl, sl, lsr #5
 8013762:	f40a 6afc 	and.w	sl, sl, #2016	@ 0x7e0
 8013766:	9c03      	ldr	r4, [sp, #12]
 8013768:	ea4c 0c0a 	orr.w	ip, ip, sl
 801376c:	f820 c004 	strh.w	ip, [r0, r4]
 8013770:	9c13      	ldr	r4, [sp, #76]	@ 0x4c
 8013772:	4421      	add	r1, r4
 8013774:	9c14      	ldr	r4, [sp, #80]	@ 0x50
 8013776:	f108 38ff 	add.w	r8, r8, #4294967295
 801377a:	4422      	add	r2, r4
 801377c:	e750      	b.n	8013620 <_ZN8touchgfx8LCD16bpp49TextureMapper_RGB565_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xa0>
 801377e:	f04f 0900 	mov.w	r9, #0
 8013782:	eba3 0409 	sub.w	r4, r3, r9
 8013786:	2c00      	cmp	r4, #0
 8013788:	f77f af4e 	ble.w	8013628 <_ZN8touchgfx8LCD16bpp49TextureMapper_RGB565_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xa8>
 801378c:	f9be 6008 	ldrsh.w	r6, [lr, #8]
 8013790:	140d      	asrs	r5, r1, #16
 8013792:	1414      	asrs	r4, r2, #16
 8013794:	fb06 5404 	mla	r4, r6, r4, r5
 8013798:	9d02      	ldr	r5, [sp, #8]
 801379a:	5d2e      	ldrb	r6, [r5, r4]
 801379c:	2e00      	cmp	r6, #0
 801379e:	d04c      	beq.n	801383a <_ZN8touchgfx8LCD16bpp49TextureMapper_RGB565_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2ba>
 80137a0:	9d01      	ldr	r5, [sp, #4]
 80137a2:	f835 8014 	ldrh.w	r8, [r5, r4, lsl #1]
 80137a6:	9c05      	ldr	r4, [sp, #20]
 80137a8:	f830 5019 	ldrh.w	r5, [r0, r9, lsl #1]
 80137ac:	4366      	muls	r6, r4
 80137ae:	1c74      	adds	r4, r6, #1
 80137b0:	eb04 2416 	add.w	r4, r4, r6, lsr #8
 80137b4:	1224      	asrs	r4, r4, #8
 80137b6:	b2a7      	uxth	r7, r4
 80137b8:	122e      	asrs	r6, r5, #8
 80137ba:	43e4      	mvns	r4, r4
 80137bc:	b2e4      	uxtb	r4, r4
 80137be:	ea4f 2c28 	mov.w	ip, r8, asr #8
 80137c2:	f006 06f8 	and.w	r6, r6, #248	@ 0xf8
 80137c6:	fb16 f604 	smulbb	r6, r6, r4
 80137ca:	ea4f 0ae5 	mov.w	sl, r5, asr #3
 80137ce:	f00c 0cf8 	and.w	ip, ip, #248	@ 0xf8
 80137d2:	00ed      	lsls	r5, r5, #3
 80137d4:	fb0c 6c07 	mla	ip, ip, r7, r6
 80137d8:	b2ed      	uxtb	r5, r5
 80137da:	ea4f 06e8 	mov.w	r6, r8, asr #3
 80137de:	ea4f 08c8 	mov.w	r8, r8, lsl #3
 80137e2:	fb15 f504 	smulbb	r5, r5, r4
 80137e6:	fa5f f888 	uxtb.w	r8, r8
 80137ea:	f00a 0afc 	and.w	sl, sl, #252	@ 0xfc
 80137ee:	fb08 5507 	mla	r5, r8, r7, r5
 80137f2:	fb1a fa04 	smulbb	sl, sl, r4
 80137f6:	fa1f fc8c 	uxth.w	ip, ip
 80137fa:	b2ad      	uxth	r5, r5
 80137fc:	f006 06fc 	and.w	r6, r6, #252	@ 0xfc
 8013800:	fb06 a607 	mla	r6, r6, r7, sl
 8013804:	f10c 0401 	add.w	r4, ip, #1
 8013808:	f105 0a01 	add.w	sl, r5, #1
 801380c:	eb04 2c1c 	add.w	ip, r4, ip, lsr #8
 8013810:	eb0a 2a15 	add.w	sl, sl, r5, lsr #8
 8013814:	b2b6      	uxth	r6, r6
 8013816:	f3ca 2ac4 	ubfx	sl, sl, #11, #5
 801381a:	f40c 4c78 	and.w	ip, ip, #63488	@ 0xf800
 801381e:	ea4a 0c0c 	orr.w	ip, sl, ip
 8013822:	f106 0a01 	add.w	sl, r6, #1
 8013826:	eb0a 2a16 	add.w	sl, sl, r6, lsr #8
 801382a:	ea4f 1a5a 	mov.w	sl, sl, lsr #5
 801382e:	f40a 6afc 	and.w	sl, sl, #2016	@ 0x7e0
 8013832:	ea4c 0c0a 	orr.w	ip, ip, sl
 8013836:	f820 c019 	strh.w	ip, [r0, r9, lsl #1]
 801383a:	9c13      	ldr	r4, [sp, #76]	@ 0x4c
 801383c:	4421      	add	r1, r4
 801383e:	9c14      	ldr	r4, [sp, #80]	@ 0x50
 8013840:	f109 0901 	add.w	r9, r9, #1
 8013844:	4422      	add	r2, r4
 8013846:	e79c      	b.n	8013782 <_ZN8touchgfx8LCD16bpp49TextureMapper_RGB565_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x202>
 8013848:	b007      	add	sp, #28
 801384a:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}

0801384e <_ZN8touchgfx8LCD16bpp51TextureMapper_RGB565_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff>:
 801384e:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8013852:	b085      	sub	sp, #20
 8013854:	468b      	mov	fp, r1
 8013856:	9c13      	ldr	r4, [sp, #76]	@ 0x4c
 8013858:	9203      	str	r2, [sp, #12]
 801385a:	e9dd 2014 	ldrd	r2, r0, [sp, #80]	@ 0x50
 801385e:	6861      	ldr	r1, [r4, #4]
 8013860:	f8dd 8058 	ldr.w	r8, [sp, #88]	@ 0x58
 8013864:	fb01 2000 	mla	r0, r1, r0, r2
 8013868:	6822      	ldr	r2, [r4, #0]
 801386a:	eb02 0040 	add.w	r0, r2, r0, lsl #1
 801386e:	f8d8 2000 	ldr.w	r2, [r8]
 8013872:	9200      	str	r2, [sp, #0]
 8013874:	f8d8 2004 	ldr.w	r2, [r8, #4]
 8013878:	9201      	str	r2, [sp, #4]
 801387a:	eef7 6a00 	vmov.f32	s13, #112	@ 0x3f800000  1.0
 801387e:	f1bb 0f00 	cmp.w	fp, #0
 8013882:	dc03      	bgt.n	801388c <_ZN8touchgfx8LCD16bpp51TextureMapper_RGB565_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3e>
 8013884:	9a03      	ldr	r2, [sp, #12]
 8013886:	2a00      	cmp	r2, #0
 8013888:	f340 8146 	ble.w	8013b18 <_ZN8touchgfx8LCD16bpp51TextureMapper_RGB565_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2ca>
 801388c:	9a0f      	ldr	r2, [sp, #60]	@ 0x3c
 801388e:	f9b8 7008 	ldrsh.w	r7, [r8, #8]
 8013892:	f9b8 600c 	ldrsh.w	r6, [r8, #12]
 8013896:	f502 4100 	add.w	r1, r2, #32768	@ 0x8000
 801389a:	9a10      	ldr	r2, [sp, #64]	@ 0x40
 801389c:	f502 4200 	add.w	r2, r2, #32768	@ 0x8000
 80138a0:	2b00      	cmp	r3, #0
 80138a2:	dd0e      	ble.n	80138c2 <_ZN8touchgfx8LCD16bpp51TextureMapper_RGB565_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x74>
 80138a4:	140c      	asrs	r4, r1, #16
 80138a6:	d405      	bmi.n	80138b4 <_ZN8touchgfx8LCD16bpp51TextureMapper_RGB565_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x66>
 80138a8:	42bc      	cmp	r4, r7
 80138aa:	da03      	bge.n	80138b4 <_ZN8touchgfx8LCD16bpp51TextureMapper_RGB565_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x66>
 80138ac:	1414      	asrs	r4, r2, #16
 80138ae:	d401      	bmi.n	80138b4 <_ZN8touchgfx8LCD16bpp51TextureMapper_RGB565_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x66>
 80138b0:	42b4      	cmp	r4, r6
 80138b2:	db07      	blt.n	80138c4 <_ZN8touchgfx8LCD16bpp51TextureMapper_RGB565_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x76>
 80138b4:	9c11      	ldr	r4, [sp, #68]	@ 0x44
 80138b6:	4421      	add	r1, r4
 80138b8:	9c12      	ldr	r4, [sp, #72]	@ 0x48
 80138ba:	3b01      	subs	r3, #1
 80138bc:	4422      	add	r2, r4
 80138be:	3002      	adds	r0, #2
 80138c0:	e7ee      	b.n	80138a0 <_ZN8touchgfx8LCD16bpp51TextureMapper_RGB565_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x52>
 80138c2:	d017      	beq.n	80138f4 <_ZN8touchgfx8LCD16bpp51TextureMapper_RGB565_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xa6>
 80138c4:	9d11      	ldr	r5, [sp, #68]	@ 0x44
 80138c6:	1e5c      	subs	r4, r3, #1
 80138c8:	fb05 1504 	mla	r5, r5, r4, r1
 80138cc:	142d      	asrs	r5, r5, #16
 80138ce:	d409      	bmi.n	80138e4 <_ZN8touchgfx8LCD16bpp51TextureMapper_RGB565_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x96>
 80138d0:	42bd      	cmp	r5, r7
 80138d2:	da07      	bge.n	80138e4 <_ZN8touchgfx8LCD16bpp51TextureMapper_RGB565_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x96>
 80138d4:	9d12      	ldr	r5, [sp, #72]	@ 0x48
 80138d6:	fb05 2404 	mla	r4, r5, r4, r2
 80138da:	1424      	asrs	r4, r4, #16
 80138dc:	d402      	bmi.n	80138e4 <_ZN8touchgfx8LCD16bpp51TextureMapper_RGB565_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x96>
 80138de:	42b4      	cmp	r4, r6
 80138e0:	f2c0 80b3 	blt.w	8013a4a <_ZN8touchgfx8LCD16bpp51TextureMapper_RGB565_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1fc>
 80138e4:	2600      	movs	r6, #0
 80138e6:	199c      	adds	r4, r3, r6
 80138e8:	2c00      	cmp	r4, #0
 80138ea:	dc3e      	bgt.n	801396a <_ZN8touchgfx8LCD16bpp51TextureMapper_RGB565_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x11c>
 80138ec:	ea23 73e3 	bic.w	r3, r3, r3, asr #31
 80138f0:	eb00 0043 	add.w	r0, r0, r3, lsl #1
 80138f4:	f1bb 0f00 	cmp.w	fp, #0
 80138f8:	f340 810e 	ble.w	8013b18 <_ZN8touchgfx8LCD16bpp51TextureMapper_RGB565_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2ca>
 80138fc:	ee30 0a04 	vadd.f32	s0, s0, s8
 8013900:	ee70 0aa4 	vadd.f32	s1, s1, s9
 8013904:	eec6 7a80 	vdiv.f32	s15, s13, s0
 8013908:	9b0e      	ldr	r3, [sp, #56]	@ 0x38
 801390a:	f1bb 0b01 	subs.w	fp, fp, #1
 801390e:	ee31 1a05 	vadd.f32	s2, s2, s10
 8013912:	ee20 7aa7 	vmul.f32	s14, s1, s15
 8013916:	eeb0 6a62 	vmov.f32	s12, s5
 801391a:	ee61 7a27 	vmul.f32	s15, s2, s15
 801391e:	eebe 6ac8 	vcvt.s32.f32	s12, s12, #16
 8013922:	ee77 2a62 	vsub.f32	s5, s14, s5
 8013926:	ed8d 6a0f 	vstr	s12, [sp, #60]	@ 0x3c
 801392a:	eefe 2ac8 	vcvt.s32.f32	s5, s5, #16
 801392e:	eeb0 6a43 	vmov.f32	s12, s6
 8013932:	ee37 3ac3 	vsub.f32	s6, s15, s6
 8013936:	ee12 2a90 	vmov	r2, s5
 801393a:	eebe 3ac8 	vcvt.s32.f32	s6, s6, #16
 801393e:	fb92 f3f3 	sdiv	r3, r2, r3
 8013942:	ee13 2a10 	vmov	r2, s6
 8013946:	eebe 6ac8 	vcvt.s32.f32	s12, s12, #16
 801394a:	9311      	str	r3, [sp, #68]	@ 0x44
 801394c:	9b0e      	ldr	r3, [sp, #56]	@ 0x38
 801394e:	fb92 f3f3 	sdiv	r3, r2, r3
 8013952:	9a03      	ldr	r2, [sp, #12]
 8013954:	9312      	str	r3, [sp, #72]	@ 0x48
 8013956:	ed8d 6a10 	vstr	s12, [sp, #64]	@ 0x40
 801395a:	9b0e      	ldr	r3, [sp, #56]	@ 0x38
 801395c:	eeb0 3a67 	vmov.f32	s6, s15
 8013960:	bf08      	it	eq
 8013962:	4613      	moveq	r3, r2
 8013964:	eef0 2a47 	vmov.f32	s5, s14
 8013968:	e789      	b.n	801387e <_ZN8touchgfx8LCD16bpp51TextureMapper_RGB565_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x30>
 801396a:	140f      	asrs	r7, r1, #16
 801396c:	d418      	bmi.n	80139a0 <_ZN8touchgfx8LCD16bpp51TextureMapper_RGB565_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x152>
 801396e:	f8d8 5008 	ldr.w	r5, [r8, #8]
 8013972:	42bd      	cmp	r5, r7
 8013974:	dd14      	ble.n	80139a0 <_ZN8touchgfx8LCD16bpp51TextureMapper_RGB565_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x152>
 8013976:	ea5f 4c22 	movs.w	ip, r2, asr #16
 801397a:	d411      	bmi.n	80139a0 <_ZN8touchgfx8LCD16bpp51TextureMapper_RGB565_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x152>
 801397c:	f8d8 400c 	ldr.w	r4, [r8, #12]
 8013980:	4564      	cmp	r4, ip
 8013982:	dd0d      	ble.n	80139a0 <_ZN8touchgfx8LCD16bpp51TextureMapper_RGB565_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x152>
 8013984:	b22d      	sxth	r5, r5
 8013986:	fb0c 7505 	mla	r5, ip, r5, r7
 801398a:	9c01      	ldr	r4, [sp, #4]
 801398c:	5d64      	ldrb	r4, [r4, r5]
 801398e:	2cff      	cmp	r4, #255	@ 0xff
 8013990:	d10c      	bne.n	80139ac <_ZN8touchgfx8LCD16bpp51TextureMapper_RGB565_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x15e>
 8013992:	9c00      	ldr	r4, [sp, #0]
 8013994:	f834 5015 	ldrh.w	r5, [r4, r5, lsl #1]
 8013998:	f06f 0401 	mvn.w	r4, #1
 801399c:	4374      	muls	r4, r6
 801399e:	5305      	strh	r5, [r0, r4]
 80139a0:	9c11      	ldr	r4, [sp, #68]	@ 0x44
 80139a2:	4421      	add	r1, r4
 80139a4:	9c12      	ldr	r4, [sp, #72]	@ 0x48
 80139a6:	3e01      	subs	r6, #1
 80139a8:	4422      	add	r2, r4
 80139aa:	e79c      	b.n	80138e6 <_ZN8touchgfx8LCD16bpp51TextureMapper_RGB565_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x98>
 80139ac:	2c00      	cmp	r4, #0
 80139ae:	d0f7      	beq.n	80139a0 <_ZN8touchgfx8LCD16bpp51TextureMapper_RGB565_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x152>
 80139b0:	9f00      	ldr	r7, [sp, #0]
 80139b2:	f837 9015 	ldrh.w	r9, [r7, r5, lsl #1]
 80139b6:	f06f 0501 	mvn.w	r5, #1
 80139ba:	4375      	muls	r5, r6
 80139bc:	9502      	str	r5, [sp, #8]
 80139be:	5b45      	ldrh	r5, [r0, r5]
 80139c0:	fa1f fc84 	uxth.w	ip, r4
 80139c4:	122f      	asrs	r7, r5, #8
 80139c6:	43e4      	mvns	r4, r4
 80139c8:	b2e4      	uxtb	r4, r4
 80139ca:	ea4f 2e29 	mov.w	lr, r9, asr #8
 80139ce:	f007 07f8 	and.w	r7, r7, #248	@ 0xf8
 80139d2:	fb17 f704 	smulbb	r7, r7, r4
 80139d6:	ea4f 0ae5 	mov.w	sl, r5, asr #3
 80139da:	f00e 0ef8 	and.w	lr, lr, #248	@ 0xf8
 80139de:	00ed      	lsls	r5, r5, #3
 80139e0:	fb0e 7e0c 	mla	lr, lr, ip, r7
 80139e4:	b2ed      	uxtb	r5, r5
 80139e6:	ea4f 07e9 	mov.w	r7, r9, asr #3
 80139ea:	ea4f 09c9 	mov.w	r9, r9, lsl #3
 80139ee:	fb15 f504 	smulbb	r5, r5, r4
 80139f2:	fa5f f989 	uxtb.w	r9, r9
 80139f6:	f00a 0afc 	and.w	sl, sl, #252	@ 0xfc
 80139fa:	fb09 550c 	mla	r5, r9, ip, r5
 80139fe:	fb1a fa04 	smulbb	sl, sl, r4
 8013a02:	fa1f fe8e 	uxth.w	lr, lr
 8013a06:	b2ad      	uxth	r5, r5
 8013a08:	f007 07fc 	and.w	r7, r7, #252	@ 0xfc
 8013a0c:	fb07 a70c 	mla	r7, r7, ip, sl
 8013a10:	f10e 0401 	add.w	r4, lr, #1
 8013a14:	f105 0a01 	add.w	sl, r5, #1
 8013a18:	eb04 2e1e 	add.w	lr, r4, lr, lsr #8
 8013a1c:	eb0a 2a15 	add.w	sl, sl, r5, lsr #8
 8013a20:	b2bf      	uxth	r7, r7
 8013a22:	f3ca 2ac4 	ubfx	sl, sl, #11, #5
 8013a26:	f40e 4e78 	and.w	lr, lr, #63488	@ 0xf800
 8013a2a:	ea4a 0e0e 	orr.w	lr, sl, lr
 8013a2e:	f107 0a01 	add.w	sl, r7, #1
 8013a32:	eb0a 2a17 	add.w	sl, sl, r7, lsr #8
 8013a36:	ea4f 1a5a 	mov.w	sl, sl, lsr #5
 8013a3a:	f40a 6afc 	and.w	sl, sl, #2016	@ 0x7e0
 8013a3e:	9c02      	ldr	r4, [sp, #8]
 8013a40:	ea4e 0e0a 	orr.w	lr, lr, sl
 8013a44:	f820 e004 	strh.w	lr, [r0, r4]
 8013a48:	e7aa      	b.n	80139a0 <_ZN8touchgfx8LCD16bpp51TextureMapper_RGB565_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x152>
 8013a4a:	f04f 0900 	mov.w	r9, #0
 8013a4e:	eba3 0409 	sub.w	r4, r3, r9
 8013a52:	2c00      	cmp	r4, #0
 8013a54:	f77f af4a 	ble.w	80138ec <_ZN8touchgfx8LCD16bpp51TextureMapper_RGB565_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x9e>
 8013a58:	f9b8 6008 	ldrsh.w	r6, [r8, #8]
 8013a5c:	1414      	asrs	r4, r2, #16
 8013a5e:	140d      	asrs	r5, r1, #16
 8013a60:	fb06 5504 	mla	r5, r6, r4, r5
 8013a64:	9c01      	ldr	r4, [sp, #4]
 8013a66:	5d64      	ldrb	r4, [r4, r5]
 8013a68:	2cff      	cmp	r4, #255	@ 0xff
 8013a6a:	d10b      	bne.n	8013a84 <_ZN8touchgfx8LCD16bpp51TextureMapper_RGB565_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x236>
 8013a6c:	9c00      	ldr	r4, [sp, #0]
 8013a6e:	f834 4015 	ldrh.w	r4, [r4, r5, lsl #1]
 8013a72:	f820 4019 	strh.w	r4, [r0, r9, lsl #1]
 8013a76:	9c11      	ldr	r4, [sp, #68]	@ 0x44
 8013a78:	4421      	add	r1, r4
 8013a7a:	9c12      	ldr	r4, [sp, #72]	@ 0x48
 8013a7c:	f109 0901 	add.w	r9, r9, #1
 8013a80:	4422      	add	r2, r4
 8013a82:	e7e4      	b.n	8013a4e <_ZN8touchgfx8LCD16bpp51TextureMapper_RGB565_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x200>
 8013a84:	2c00      	cmp	r4, #0
 8013a86:	d0f6      	beq.n	8013a76 <_ZN8touchgfx8LCD16bpp51TextureMapper_RGB565_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x228>
 8013a88:	9e00      	ldr	r6, [sp, #0]
 8013a8a:	f836 e015 	ldrh.w	lr, [r6, r5, lsl #1]
 8013a8e:	f830 5019 	ldrh.w	r5, [r0, r9, lsl #1]
 8013a92:	b2a7      	uxth	r7, r4
 8013a94:	122e      	asrs	r6, r5, #8
 8013a96:	43e4      	mvns	r4, r4
 8013a98:	b2e4      	uxtb	r4, r4
 8013a9a:	ea4f 2c2e 	mov.w	ip, lr, asr #8
 8013a9e:	f006 06f8 	and.w	r6, r6, #248	@ 0xf8
 8013aa2:	fb16 f604 	smulbb	r6, r6, r4
 8013aa6:	ea4f 0ae5 	mov.w	sl, r5, asr #3
 8013aaa:	f00c 0cf8 	and.w	ip, ip, #248	@ 0xf8
 8013aae:	00ed      	lsls	r5, r5, #3
 8013ab0:	fb0c 6c07 	mla	ip, ip, r7, r6
 8013ab4:	b2ed      	uxtb	r5, r5
 8013ab6:	ea4f 06ee 	mov.w	r6, lr, asr #3
 8013aba:	ea4f 0ece 	mov.w	lr, lr, lsl #3
 8013abe:	fb15 f504 	smulbb	r5, r5, r4
 8013ac2:	fa5f fe8e 	uxtb.w	lr, lr
 8013ac6:	f00a 0afc 	and.w	sl, sl, #252	@ 0xfc
 8013aca:	fb0e 5507 	mla	r5, lr, r7, r5
 8013ace:	fb1a fa04 	smulbb	sl, sl, r4
 8013ad2:	fa1f fc8c 	uxth.w	ip, ip
 8013ad6:	b2ad      	uxth	r5, r5
 8013ad8:	f006 06fc 	and.w	r6, r6, #252	@ 0xfc
 8013adc:	fb06 a607 	mla	r6, r6, r7, sl
 8013ae0:	f10c 0401 	add.w	r4, ip, #1
 8013ae4:	f105 0a01 	add.w	sl, r5, #1
 8013ae8:	eb04 2c1c 	add.w	ip, r4, ip, lsr #8
 8013aec:	eb0a 2a15 	add.w	sl, sl, r5, lsr #8
 8013af0:	b2b6      	uxth	r6, r6
 8013af2:	f3ca 2ac4 	ubfx	sl, sl, #11, #5
 8013af6:	f40c 4c78 	and.w	ip, ip, #63488	@ 0xf800
 8013afa:	ea4a 0c0c 	orr.w	ip, sl, ip
 8013afe:	f106 0a01 	add.w	sl, r6, #1
 8013b02:	eb0a 2a16 	add.w	sl, sl, r6, lsr #8
 8013b06:	ea4f 1a5a 	mov.w	sl, sl, lsr #5
 8013b0a:	f40a 6afc 	and.w	sl, sl, #2016	@ 0x7e0
 8013b0e:	ea4c 0c0a 	orr.w	ip, ip, sl
 8013b12:	f820 c019 	strh.w	ip, [r0, r9, lsl #1]
 8013b16:	e7ae      	b.n	8013a76 <_ZN8touchgfx8LCD16bpp51TextureMapper_RGB565_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x228>
 8013b18:	b005      	add	sp, #20
 8013b1a:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}

08013b1e <_ZN8touchgfx8LCD16bpp46TextureMapper_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff>:
 8013b1e:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8013b22:	b085      	sub	sp, #20
 8013b24:	9813      	ldr	r0, [sp, #76]	@ 0x4c
 8013b26:	9203      	str	r2, [sp, #12]
 8013b28:	f89d 205c 	ldrb.w	r2, [sp, #92]	@ 0x5c
 8013b2c:	9201      	str	r2, [sp, #4]
 8013b2e:	e9dd 2414 	ldrd	r2, r4, [sp, #80]	@ 0x50
 8013b32:	9100      	str	r1, [sp, #0]
 8013b34:	6841      	ldr	r1, [r0, #4]
 8013b36:	f8dd e058 	ldr.w	lr, [sp, #88]	@ 0x58
 8013b3a:	fb01 2404 	mla	r4, r1, r4, r2
 8013b3e:	6802      	ldr	r2, [r0, #0]
 8013b40:	eb02 0444 	add.w	r4, r2, r4, lsl #1
 8013b44:	f8de 2000 	ldr.w	r2, [lr]
 8013b48:	9202      	str	r2, [sp, #8]
 8013b4a:	9a01      	ldr	r2, [sp, #4]
 8013b4c:	43d6      	mvns	r6, r2
 8013b4e:	b2f6      	uxtb	r6, r6
 8013b50:	9a00      	ldr	r2, [sp, #0]
 8013b52:	2a00      	cmp	r2, #0
 8013b54:	dc03      	bgt.n	8013b5e <_ZN8touchgfx8LCD16bpp46TextureMapper_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x40>
 8013b56:	9a03      	ldr	r2, [sp, #12]
 8013b58:	2a00      	cmp	r2, #0
 8013b5a:	f340 8124 	ble.w	8013da6 <_ZN8touchgfx8LCD16bpp46TextureMapper_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x288>
 8013b5e:	9a0f      	ldr	r2, [sp, #60]	@ 0x3c
 8013b60:	f9be c008 	ldrsh.w	ip, [lr, #8]
 8013b64:	f9be 700c 	ldrsh.w	r7, [lr, #12]
 8013b68:	f502 4100 	add.w	r1, r2, #32768	@ 0x8000
 8013b6c:	9a10      	ldr	r2, [sp, #64]	@ 0x40
 8013b6e:	f502 4200 	add.w	r2, r2, #32768	@ 0x8000
 8013b72:	2b00      	cmp	r3, #0
 8013b74:	dd0e      	ble.n	8013b94 <_ZN8touchgfx8LCD16bpp46TextureMapper_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x76>
 8013b76:	1408      	asrs	r0, r1, #16
 8013b78:	d405      	bmi.n	8013b86 <_ZN8touchgfx8LCD16bpp46TextureMapper_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x68>
 8013b7a:	4560      	cmp	r0, ip
 8013b7c:	da03      	bge.n	8013b86 <_ZN8touchgfx8LCD16bpp46TextureMapper_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x68>
 8013b7e:	1410      	asrs	r0, r2, #16
 8013b80:	d401      	bmi.n	8013b86 <_ZN8touchgfx8LCD16bpp46TextureMapper_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x68>
 8013b82:	42b8      	cmp	r0, r7
 8013b84:	db07      	blt.n	8013b96 <_ZN8touchgfx8LCD16bpp46TextureMapper_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x78>
 8013b86:	9811      	ldr	r0, [sp, #68]	@ 0x44
 8013b88:	4401      	add	r1, r0
 8013b8a:	9812      	ldr	r0, [sp, #72]	@ 0x48
 8013b8c:	3b01      	subs	r3, #1
 8013b8e:	4402      	add	r2, r0
 8013b90:	3402      	adds	r4, #2
 8013b92:	e7ee      	b.n	8013b72 <_ZN8touchgfx8LCD16bpp46TextureMapper_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x54>
 8013b94:	d06e      	beq.n	8013c74 <_ZN8touchgfx8LCD16bpp46TextureMapper_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x156>
 8013b96:	9d11      	ldr	r5, [sp, #68]	@ 0x44
 8013b98:	1e58      	subs	r0, r3, #1
 8013b9a:	fb05 1500 	mla	r5, r5, r0, r1
 8013b9e:	142d      	asrs	r5, r5, #16
 8013ba0:	d45c      	bmi.n	8013c5c <_ZN8touchgfx8LCD16bpp46TextureMapper_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x13e>
 8013ba2:	4565      	cmp	r5, ip
 8013ba4:	da5a      	bge.n	8013c5c <_ZN8touchgfx8LCD16bpp46TextureMapper_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x13e>
 8013ba6:	9d12      	ldr	r5, [sp, #72]	@ 0x48
 8013ba8:	fb05 2000 	mla	r0, r5, r0, r2
 8013bac:	1400      	asrs	r0, r0, #16
 8013bae:	d455      	bmi.n	8013c5c <_ZN8touchgfx8LCD16bpp46TextureMapper_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x13e>
 8013bb0:	42b8      	cmp	r0, r7
 8013bb2:	da53      	bge.n	8013c5c <_ZN8touchgfx8LCD16bpp46TextureMapper_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x13e>
 8013bb4:	f8bd b004 	ldrh.w	fp, [sp, #4]
 8013bb8:	4699      	mov	r9, r3
 8013bba:	46a2      	mov	sl, r4
 8013bbc:	f1b9 0f00 	cmp.w	r9, #0
 8013bc0:	dd54      	ble.n	8013c6c <_ZN8touchgfx8LCD16bpp46TextureMapper_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x14e>
 8013bc2:	f9be 7008 	ldrsh.w	r7, [lr, #8]
 8013bc6:	140d      	asrs	r5, r1, #16
 8013bc8:	1410      	asrs	r0, r2, #16
 8013bca:	fb07 5000 	mla	r0, r7, r0, r5
 8013bce:	9d02      	ldr	r5, [sp, #8]
 8013bd0:	f835 0010 	ldrh.w	r0, [r5, r0, lsl #1]
 8013bd4:	f8ba 5000 	ldrh.w	r5, [sl]
 8013bd8:	122f      	asrs	r7, r5, #8
 8013bda:	ea4f 2c20 	mov.w	ip, r0, asr #8
 8013bde:	f007 07f8 	and.w	r7, r7, #248	@ 0xf8
 8013be2:	fb17 f706 	smulbb	r7, r7, r6
 8013be6:	ea4f 08e5 	mov.w	r8, r5, asr #3
 8013bea:	f00c 0cf8 	and.w	ip, ip, #248	@ 0xf8
 8013bee:	00ed      	lsls	r5, r5, #3
 8013bf0:	fb0c 7c0b 	mla	ip, ip, fp, r7
 8013bf4:	f008 08fc 	and.w	r8, r8, #252	@ 0xfc
 8013bf8:	10c7      	asrs	r7, r0, #3
 8013bfa:	b2ed      	uxtb	r5, r5
 8013bfc:	00c0      	lsls	r0, r0, #3
 8013bfe:	fb18 f806 	smulbb	r8, r8, r6
 8013c02:	fb15 f506 	smulbb	r5, r5, r6
 8013c06:	f007 07fc 	and.w	r7, r7, #252	@ 0xfc
 8013c0a:	b2c0      	uxtb	r0, r0
 8013c0c:	fa1f fc8c 	uxth.w	ip, ip
 8013c10:	fb07 870b 	mla	r7, r7, fp, r8
 8013c14:	fb00 500b 	mla	r0, r0, fp, r5
 8013c18:	b280      	uxth	r0, r0
 8013c1a:	b2bf      	uxth	r7, r7
 8013c1c:	f10c 0501 	add.w	r5, ip, #1
 8013c20:	eb05 2c1c 	add.w	ip, r5, ip, lsr #8
 8013c24:	f107 0801 	add.w	r8, r7, #1
 8013c28:	1c45      	adds	r5, r0, #1
 8013c2a:	eb05 2510 	add.w	r5, r5, r0, lsr #8
 8013c2e:	eb08 2817 	add.w	r8, r8, r7, lsr #8
 8013c32:	9811      	ldr	r0, [sp, #68]	@ 0x44
 8013c34:	f40c 4c78 	and.w	ip, ip, #63488	@ 0xf800
 8013c38:	f3c5 25c4 	ubfx	r5, r5, #11, #5
 8013c3c:	ea4f 1858 	mov.w	r8, r8, lsr #5
 8013c40:	ea45 0c0c 	orr.w	ip, r5, ip
 8013c44:	f408 68fc 	and.w	r8, r8, #2016	@ 0x7e0
 8013c48:	4401      	add	r1, r0
 8013c4a:	9812      	ldr	r0, [sp, #72]	@ 0x48
 8013c4c:	ea4c 0c08 	orr.w	ip, ip, r8
 8013c50:	f82a cb02 	strh.w	ip, [sl], #2
 8013c54:	4402      	add	r2, r0
 8013c56:	f109 39ff 	add.w	r9, r9, #4294967295
 8013c5a:	e7af      	b.n	8013bbc <_ZN8touchgfx8LCD16bpp46TextureMapper_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x9e>
 8013c5c:	f8bd a004 	ldrh.w	sl, [sp, #4]
 8013c60:	f04f 0800 	mov.w	r8, #0
 8013c64:	eb03 0008 	add.w	r0, r3, r8
 8013c68:	2800      	cmp	r0, #0
 8013c6a:	dc41      	bgt.n	8013cf0 <_ZN8touchgfx8LCD16bpp46TextureMapper_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1d2>
 8013c6c:	ea23 73e3 	bic.w	r3, r3, r3, asr #31
 8013c70:	eb04 0443 	add.w	r4, r4, r3, lsl #1
 8013c74:	9b00      	ldr	r3, [sp, #0]
 8013c76:	2b00      	cmp	r3, #0
 8013c78:	f340 8095 	ble.w	8013da6 <_ZN8touchgfx8LCD16bpp46TextureMapper_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x288>
 8013c7c:	ee30 0a04 	vadd.f32	s0, s0, s8
 8013c80:	eeb7 7a00 	vmov.f32	s14, #112	@ 0x3f800000  1.0
 8013c84:	eec7 7a00 	vdiv.f32	s15, s14, s0
 8013c88:	9b0e      	ldr	r3, [sp, #56]	@ 0x38
 8013c8a:	ee70 0aa4 	vadd.f32	s1, s1, s9
 8013c8e:	ee31 1a05 	vadd.f32	s2, s2, s10
 8013c92:	ee20 7aa7 	vmul.f32	s14, s1, s15
 8013c96:	eef0 6a62 	vmov.f32	s13, s5
 8013c9a:	ee61 7a27 	vmul.f32	s15, s2, s15
 8013c9e:	eefe 6ac8 	vcvt.s32.f32	s13, s13, #16
 8013ca2:	ee77 2a62 	vsub.f32	s5, s14, s5
 8013ca6:	edcd 6a0f 	vstr	s13, [sp, #60]	@ 0x3c
 8013caa:	eefe 2ac8 	vcvt.s32.f32	s5, s5, #16
 8013cae:	eef0 6a43 	vmov.f32	s13, s6
 8013cb2:	ee37 3ac3 	vsub.f32	s6, s15, s6
 8013cb6:	ee12 2a90 	vmov	r2, s5
 8013cba:	eebe 3ac8 	vcvt.s32.f32	s6, s6, #16
 8013cbe:	fb92 f3f3 	sdiv	r3, r2, r3
 8013cc2:	ee13 2a10 	vmov	r2, s6
 8013cc6:	9311      	str	r3, [sp, #68]	@ 0x44
 8013cc8:	9b0e      	ldr	r3, [sp, #56]	@ 0x38
 8013cca:	fb92 f3f3 	sdiv	r3, r2, r3
 8013cce:	9312      	str	r3, [sp, #72]	@ 0x48
 8013cd0:	9b00      	ldr	r3, [sp, #0]
 8013cd2:	9a03      	ldr	r2, [sp, #12]
 8013cd4:	eefe 6ac8 	vcvt.s32.f32	s13, s13, #16
 8013cd8:	3b01      	subs	r3, #1
 8013cda:	9300      	str	r3, [sp, #0]
 8013cdc:	edcd 6a10 	vstr	s13, [sp, #64]	@ 0x40
 8013ce0:	9b0e      	ldr	r3, [sp, #56]	@ 0x38
 8013ce2:	eeb0 3a67 	vmov.f32	s6, s15
 8013ce6:	bf08      	it	eq
 8013ce8:	4613      	moveq	r3, r2
 8013cea:	eef0 2a47 	vmov.f32	s5, s14
 8013cee:	e72f      	b.n	8013b50 <_ZN8touchgfx8LCD16bpp46TextureMapper_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x32>
 8013cf0:	140f      	asrs	r7, r1, #16
 8013cf2:	d451      	bmi.n	8013d98 <_ZN8touchgfx8LCD16bpp46TextureMapper_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x27a>
 8013cf4:	f8de 5008 	ldr.w	r5, [lr, #8]
 8013cf8:	42bd      	cmp	r5, r7
 8013cfa:	dd4d      	ble.n	8013d98 <_ZN8touchgfx8LCD16bpp46TextureMapper_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x27a>
 8013cfc:	ea5f 4c22 	movs.w	ip, r2, asr #16
 8013d00:	d44a      	bmi.n	8013d98 <_ZN8touchgfx8LCD16bpp46TextureMapper_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x27a>
 8013d02:	f8de 000c 	ldr.w	r0, [lr, #12]
 8013d06:	4560      	cmp	r0, ip
 8013d08:	dd46      	ble.n	8013d98 <_ZN8touchgfx8LCD16bpp46TextureMapper_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x27a>
 8013d0a:	b22d      	sxth	r5, r5
 8013d0c:	fb0c 7505 	mla	r5, ip, r5, r7
 8013d10:	9802      	ldr	r0, [sp, #8]
 8013d12:	f830 0015 	ldrh.w	r0, [r0, r5, lsl #1]
 8013d16:	f06f 0501 	mvn.w	r5, #1
 8013d1a:	fb05 fb08 	mul.w	fp, r5, r8
 8013d1e:	ea4f 2c20 	mov.w	ip, r0, asr #8
 8013d22:	f834 500b 	ldrh.w	r5, [r4, fp]
 8013d26:	122f      	asrs	r7, r5, #8
 8013d28:	f007 07f8 	and.w	r7, r7, #248	@ 0xf8
 8013d2c:	fb17 f706 	smulbb	r7, r7, r6
 8013d30:	ea4f 09e5 	mov.w	r9, r5, asr #3
 8013d34:	f00c 0cf8 	and.w	ip, ip, #248	@ 0xf8
 8013d38:	00ed      	lsls	r5, r5, #3
 8013d3a:	fb0c 7c0a 	mla	ip, ip, sl, r7
 8013d3e:	f009 09fc 	and.w	r9, r9, #252	@ 0xfc
 8013d42:	10c7      	asrs	r7, r0, #3
 8013d44:	b2ed      	uxtb	r5, r5
 8013d46:	00c0      	lsls	r0, r0, #3
 8013d48:	fb19 f906 	smulbb	r9, r9, r6
 8013d4c:	fb15 f506 	smulbb	r5, r5, r6
 8013d50:	f007 07fc 	and.w	r7, r7, #252	@ 0xfc
 8013d54:	b2c0      	uxtb	r0, r0
 8013d56:	fa1f fc8c 	uxth.w	ip, ip
 8013d5a:	fb07 970a 	mla	r7, r7, sl, r9
 8013d5e:	fb00 500a 	mla	r0, r0, sl, r5
 8013d62:	b2bf      	uxth	r7, r7
 8013d64:	b280      	uxth	r0, r0
 8013d66:	f10c 0501 	add.w	r5, ip, #1
 8013d6a:	eb05 2c1c 	add.w	ip, r5, ip, lsr #8
 8013d6e:	f107 0901 	add.w	r9, r7, #1
 8013d72:	1c45      	adds	r5, r0, #1
 8013d74:	eb05 2510 	add.w	r5, r5, r0, lsr #8
 8013d78:	eb09 2917 	add.w	r9, r9, r7, lsr #8
 8013d7c:	f40c 4c78 	and.w	ip, ip, #63488	@ 0xf800
 8013d80:	f3c5 25c4 	ubfx	r5, r5, #11, #5
 8013d84:	ea4f 1959 	mov.w	r9, r9, lsr #5
 8013d88:	ea45 0c0c 	orr.w	ip, r5, ip
 8013d8c:	f409 69fc 	and.w	r9, r9, #2016	@ 0x7e0
 8013d90:	ea4c 0c09 	orr.w	ip, ip, r9
 8013d94:	f824 c00b 	strh.w	ip, [r4, fp]
 8013d98:	9811      	ldr	r0, [sp, #68]	@ 0x44
 8013d9a:	4401      	add	r1, r0
 8013d9c:	9812      	ldr	r0, [sp, #72]	@ 0x48
 8013d9e:	f108 38ff 	add.w	r8, r8, #4294967295
 8013da2:	4402      	add	r2, r0
 8013da4:	e75e      	b.n	8013c64 <_ZN8touchgfx8LCD16bpp46TextureMapper_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x146>
 8013da6:	b005      	add	sp, #20
 8013da8:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}

08013dac <_ZN8touchgfx8LCD16bpp48TextureMapper_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff>:
 8013dac:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8013db0:	b085      	sub	sp, #20
 8013db2:	4693      	mov	fp, r2
 8013db4:	9e13      	ldr	r6, [sp, #76]	@ 0x4c
 8013db6:	9d16      	ldr	r5, [sp, #88]	@ 0x58
 8013db8:	6870      	ldr	r0, [r6, #4]
 8013dba:	9101      	str	r1, [sp, #4]
 8013dbc:	e9dd 2414 	ldrd	r2, r4, [sp, #80]	@ 0x50
 8013dc0:	fb00 2404 	mla	r4, r0, r4, r2
 8013dc4:	6832      	ldr	r2, [r6, #0]
 8013dc6:	e9dd ec11 	ldrd	lr, ip, [sp, #68]	@ 0x44
 8013dca:	eb02 0444 	add.w	r4, r2, r4, lsl #1
 8013dce:	682a      	ldr	r2, [r5, #0]
 8013dd0:	9202      	str	r2, [sp, #8]
 8013dd2:	eef7 6a00 	vmov.f32	s13, #112	@ 0x3f800000  1.0
 8013dd6:	9a01      	ldr	r2, [sp, #4]
 8013dd8:	2a00      	cmp	r2, #0
 8013dda:	dc03      	bgt.n	8013de4 <_ZN8touchgfx8LCD16bpp48TextureMapper_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x38>
 8013ddc:	f1bb 0f00 	cmp.w	fp, #0
 8013de0:	f340 809a 	ble.w	8013f18 <_ZN8touchgfx8LCD16bpp48TextureMapper_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x16c>
 8013de4:	9a0f      	ldr	r2, [sp, #60]	@ 0x3c
 8013de6:	f9b5 9008 	ldrsh.w	r9, [r5, #8]
 8013dea:	f9b5 800c 	ldrsh.w	r8, [r5, #12]
 8013dee:	f502 4000 	add.w	r0, r2, #32768	@ 0x8000
 8013df2:	9a10      	ldr	r2, [sp, #64]	@ 0x40
 8013df4:	f502 4200 	add.w	r2, r2, #32768	@ 0x8000
 8013df8:	2b00      	cmp	r3, #0
 8013dfa:	dd0c      	ble.n	8013e16 <_ZN8touchgfx8LCD16bpp48TextureMapper_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x6a>
 8013dfc:	1406      	asrs	r6, r0, #16
 8013dfe:	d405      	bmi.n	8013e0c <_ZN8touchgfx8LCD16bpp48TextureMapper_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x60>
 8013e00:	454e      	cmp	r6, r9
 8013e02:	da03      	bge.n	8013e0c <_ZN8touchgfx8LCD16bpp48TextureMapper_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x60>
 8013e04:	1416      	asrs	r6, r2, #16
 8013e06:	d401      	bmi.n	8013e0c <_ZN8touchgfx8LCD16bpp48TextureMapper_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x60>
 8013e08:	4546      	cmp	r6, r8
 8013e0a:	db05      	blt.n	8013e18 <_ZN8touchgfx8LCD16bpp48TextureMapper_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x6c>
 8013e0c:	4470      	add	r0, lr
 8013e0e:	4462      	add	r2, ip
 8013e10:	3b01      	subs	r3, #1
 8013e12:	3402      	adds	r4, #2
 8013e14:	e7f0      	b.n	8013df8 <_ZN8touchgfx8LCD16bpp48TextureMapper_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x4c>
 8013e16:	d00f      	beq.n	8013e38 <_ZN8touchgfx8LCD16bpp48TextureMapper_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x8c>
 8013e18:	1e5e      	subs	r6, r3, #1
 8013e1a:	fb0e 0706 	mla	r7, lr, r6, r0
 8013e1e:	143f      	asrs	r7, r7, #16
 8013e20:	d541      	bpl.n	8013ea6 <_ZN8touchgfx8LCD16bpp48TextureMapper_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xfa>
 8013e22:	eb04 0643 	add.w	r6, r4, r3, lsl #1
 8013e26:	4698      	mov	r8, r3
 8013e28:	9603      	str	r6, [sp, #12]
 8013e2a:	f1b8 0f00 	cmp.w	r8, #0
 8013e2e:	dc56      	bgt.n	8013ede <_ZN8touchgfx8LCD16bpp48TextureMapper_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x132>
 8013e30:	ea23 73e3 	bic.w	r3, r3, r3, asr #31
 8013e34:	eb04 0443 	add.w	r4, r4, r3, lsl #1
 8013e38:	9b01      	ldr	r3, [sp, #4]
 8013e3a:	2b00      	cmp	r3, #0
 8013e3c:	dd6c      	ble.n	8013f18 <_ZN8touchgfx8LCD16bpp48TextureMapper_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x16c>
 8013e3e:	ee30 0a04 	vadd.f32	s0, s0, s8
 8013e42:	ee70 0aa4 	vadd.f32	s1, s1, s9
 8013e46:	eec6 7a80 	vdiv.f32	s15, s13, s0
 8013e4a:	9b0e      	ldr	r3, [sp, #56]	@ 0x38
 8013e4c:	ee31 1a05 	vadd.f32	s2, s2, s10
 8013e50:	ee20 7aa7 	vmul.f32	s14, s1, s15
 8013e54:	eeb0 6a62 	vmov.f32	s12, s5
 8013e58:	ee61 7a27 	vmul.f32	s15, s2, s15
 8013e5c:	eebe 6ac8 	vcvt.s32.f32	s12, s12, #16
 8013e60:	ee77 2a62 	vsub.f32	s5, s14, s5
 8013e64:	ed8d 6a0f 	vstr	s12, [sp, #60]	@ 0x3c
 8013e68:	eefe 2ac8 	vcvt.s32.f32	s5, s5, #16
 8013e6c:	eeb0 6a43 	vmov.f32	s12, s6
 8013e70:	ee37 3ac3 	vsub.f32	s6, s15, s6
 8013e74:	ee12 2a90 	vmov	r2, s5
 8013e78:	eebe 3ac8 	vcvt.s32.f32	s6, s6, #16
 8013e7c:	fb92 fef3 	sdiv	lr, r2, r3
 8013e80:	ee13 2a10 	vmov	r2, s6
 8013e84:	fb92 fcf3 	sdiv	ip, r2, r3
 8013e88:	9b01      	ldr	r3, [sp, #4]
 8013e8a:	eebe 6ac8 	vcvt.s32.f32	s12, s12, #16
 8013e8e:	3b01      	subs	r3, #1
 8013e90:	9301      	str	r3, [sp, #4]
 8013e92:	ed8d 6a10 	vstr	s12, [sp, #64]	@ 0x40
 8013e96:	9b0e      	ldr	r3, [sp, #56]	@ 0x38
 8013e98:	eeb0 3a67 	vmov.f32	s6, s15
 8013e9c:	bf08      	it	eq
 8013e9e:	465b      	moveq	r3, fp
 8013ea0:	eef0 2a47 	vmov.f32	s5, s14
 8013ea4:	e797      	b.n	8013dd6 <_ZN8touchgfx8LCD16bpp48TextureMapper_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2a>
 8013ea6:	454f      	cmp	r7, r9
 8013ea8:	dabb      	bge.n	8013e22 <_ZN8touchgfx8LCD16bpp48TextureMapper_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x76>
 8013eaa:	fb0c 2606 	mla	r6, ip, r6, r2
 8013eae:	1436      	asrs	r6, r6, #16
 8013eb0:	d4b7      	bmi.n	8013e22 <_ZN8touchgfx8LCD16bpp48TextureMapper_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x76>
 8013eb2:	4546      	cmp	r6, r8
 8013eb4:	dab5      	bge.n	8013e22 <_ZN8touchgfx8LCD16bpp48TextureMapper_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x76>
 8013eb6:	461e      	mov	r6, r3
 8013eb8:	46a0      	mov	r8, r4
 8013eba:	2e00      	cmp	r6, #0
 8013ebc:	ddb8      	ble.n	8013e30 <_ZN8touchgfx8LCD16bpp48TextureMapper_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x84>
 8013ebe:	f9b5 a008 	ldrsh.w	sl, [r5, #8]
 8013ec2:	9902      	ldr	r1, [sp, #8]
 8013ec4:	1417      	asrs	r7, r2, #16
 8013ec6:	ea4f 4920 	mov.w	r9, r0, asr #16
 8013eca:	fb0a 9707 	mla	r7, sl, r7, r9
 8013ece:	4470      	add	r0, lr
 8013ed0:	f831 7017 	ldrh.w	r7, [r1, r7, lsl #1]
 8013ed4:	f828 7b02 	strh.w	r7, [r8], #2
 8013ed8:	4462      	add	r2, ip
 8013eda:	3e01      	subs	r6, #1
 8013edc:	e7ed      	b.n	8013eba <_ZN8touchgfx8LCD16bpp48TextureMapper_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x10e>
 8013ede:	ea5f 4920 	movs.w	r9, r0, asr #16
 8013ee2:	d414      	bmi.n	8013f0e <_ZN8touchgfx8LCD16bpp48TextureMapper_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x162>
 8013ee4:	68ae      	ldr	r6, [r5, #8]
 8013ee6:	454e      	cmp	r6, r9
 8013ee8:	dd11      	ble.n	8013f0e <_ZN8touchgfx8LCD16bpp48TextureMapper_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x162>
 8013eea:	ea5f 4a22 	movs.w	sl, r2, asr #16
 8013eee:	d40e      	bmi.n	8013f0e <_ZN8touchgfx8LCD16bpp48TextureMapper_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x162>
 8013ef0:	68ef      	ldr	r7, [r5, #12]
 8013ef2:	4557      	cmp	r7, sl
 8013ef4:	dd0b      	ble.n	8013f0e <_ZN8touchgfx8LCD16bpp48TextureMapper_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x162>
 8013ef6:	b236      	sxth	r6, r6
 8013ef8:	fb0a 9606 	mla	r6, sl, r6, r9
 8013efc:	9f02      	ldr	r7, [sp, #8]
 8013efe:	f06f 0101 	mvn.w	r1, #1
 8013f02:	f837 7016 	ldrh.w	r7, [r7, r6, lsl #1]
 8013f06:	fb01 f608 	mul.w	r6, r1, r8
 8013f0a:	9903      	ldr	r1, [sp, #12]
 8013f0c:	538f      	strh	r7, [r1, r6]
 8013f0e:	4470      	add	r0, lr
 8013f10:	4462      	add	r2, ip
 8013f12:	f108 38ff 	add.w	r8, r8, #4294967295
 8013f16:	e788      	b.n	8013e2a <_ZN8touchgfx8LCD16bpp48TextureMapper_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x7e>
 8013f18:	b005      	add	sp, #20
 8013f1a:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}

08013f1e <_ZN8touchgfx8LCD16bpp51TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff>:
 8013f1e:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8013f22:	b087      	sub	sp, #28
 8013f24:	468b      	mov	fp, r1
 8013f26:	9815      	ldr	r0, [sp, #84]	@ 0x54
 8013f28:	9203      	str	r2, [sp, #12]
 8013f2a:	f89d 2064 	ldrb.w	r2, [sp, #100]	@ 0x64
 8013f2e:	9204      	str	r2, [sp, #16]
 8013f30:	e9dd 2516 	ldrd	r2, r5, [sp, #88]	@ 0x58
 8013f34:	6841      	ldr	r1, [r0, #4]
 8013f36:	f8dd 9060 	ldr.w	r9, [sp, #96]	@ 0x60
 8013f3a:	fb01 2505 	mla	r5, r1, r5, r2
 8013f3e:	6802      	ldr	r2, [r0, #0]
 8013f40:	eb02 0545 	add.w	r5, r2, r5, lsl #1
 8013f44:	f8d9 2000 	ldr.w	r2, [r9]
 8013f48:	9201      	str	r2, [sp, #4]
 8013f4a:	eef7 6a00 	vmov.f32	s13, #112	@ 0x3f800000  1.0
 8013f4e:	f1bb 0f00 	cmp.w	fp, #0
 8013f52:	dc03      	bgt.n	8013f5c <_ZN8touchgfx8LCD16bpp51TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3e>
 8013f54:	9a03      	ldr	r2, [sp, #12]
 8013f56:	2a00      	cmp	r2, #0
 8013f58:	f340 8159 	ble.w	801420e <_ZN8touchgfx8LCD16bpp51TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2f0>
 8013f5c:	9a11      	ldr	r2, [sp, #68]	@ 0x44
 8013f5e:	f9b9 7008 	ldrsh.w	r7, [r9, #8]
 8013f62:	f9b9 600c 	ldrsh.w	r6, [r9, #12]
 8013f66:	f502 4000 	add.w	r0, r2, #32768	@ 0x8000
 8013f6a:	9a12      	ldr	r2, [sp, #72]	@ 0x48
 8013f6c:	f502 4100 	add.w	r1, r2, #32768	@ 0x8000
 8013f70:	2b00      	cmp	r3, #0
 8013f72:	dd0e      	ble.n	8013f92 <_ZN8touchgfx8LCD16bpp51TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x74>
 8013f74:	1402      	asrs	r2, r0, #16
 8013f76:	d405      	bmi.n	8013f84 <_ZN8touchgfx8LCD16bpp51TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x66>
 8013f78:	42ba      	cmp	r2, r7
 8013f7a:	da03      	bge.n	8013f84 <_ZN8touchgfx8LCD16bpp51TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x66>
 8013f7c:	140a      	asrs	r2, r1, #16
 8013f7e:	d401      	bmi.n	8013f84 <_ZN8touchgfx8LCD16bpp51TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x66>
 8013f80:	42b2      	cmp	r2, r6
 8013f82:	db07      	blt.n	8013f94 <_ZN8touchgfx8LCD16bpp51TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x76>
 8013f84:	9a13      	ldr	r2, [sp, #76]	@ 0x4c
 8013f86:	4410      	add	r0, r2
 8013f88:	9a14      	ldr	r2, [sp, #80]	@ 0x50
 8013f8a:	3b01      	subs	r3, #1
 8013f8c:	4411      	add	r1, r2
 8013f8e:	3502      	adds	r5, #2
 8013f90:	e7ee      	b.n	8013f70 <_ZN8touchgfx8LCD16bpp51TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x52>
 8013f92:	d017      	beq.n	8013fc4 <_ZN8touchgfx8LCD16bpp51TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xa6>
 8013f94:	9c13      	ldr	r4, [sp, #76]	@ 0x4c
 8013f96:	1e5a      	subs	r2, r3, #1
 8013f98:	fb04 0402 	mla	r4, r4, r2, r0
 8013f9c:	1424      	asrs	r4, r4, #16
 8013f9e:	d409      	bmi.n	8013fb4 <_ZN8touchgfx8LCD16bpp51TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x96>
 8013fa0:	42bc      	cmp	r4, r7
 8013fa2:	da07      	bge.n	8013fb4 <_ZN8touchgfx8LCD16bpp51TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x96>
 8013fa4:	9c14      	ldr	r4, [sp, #80]	@ 0x50
 8013fa6:	fb04 1202 	mla	r2, r4, r2, r1
 8013faa:	1412      	asrs	r2, r2, #16
 8013fac:	d402      	bmi.n	8013fb4 <_ZN8touchgfx8LCD16bpp51TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x96>
 8013fae:	42b2      	cmp	r2, r6
 8013fb0:	f2c0 80bf 	blt.w	8014132 <_ZN8touchgfx8LCD16bpp51TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x214>
 8013fb4:	2700      	movs	r7, #0
 8013fb6:	19da      	adds	r2, r3, r7
 8013fb8:	2a00      	cmp	r2, #0
 8013fba:	dc3e      	bgt.n	801403a <_ZN8touchgfx8LCD16bpp51TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x11c>
 8013fbc:	ea23 73e3 	bic.w	r3, r3, r3, asr #31
 8013fc0:	eb05 0543 	add.w	r5, r5, r3, lsl #1
 8013fc4:	f1bb 0f00 	cmp.w	fp, #0
 8013fc8:	f340 8121 	ble.w	801420e <_ZN8touchgfx8LCD16bpp51TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2f0>
 8013fcc:	ee30 0a04 	vadd.f32	s0, s0, s8
 8013fd0:	ee70 0aa4 	vadd.f32	s1, s1, s9
 8013fd4:	eec6 7a80 	vdiv.f32	s15, s13, s0
 8013fd8:	9b10      	ldr	r3, [sp, #64]	@ 0x40
 8013fda:	f1bb 0b01 	subs.w	fp, fp, #1
 8013fde:	ee31 1a05 	vadd.f32	s2, s2, s10
 8013fe2:	ee20 7aa7 	vmul.f32	s14, s1, s15
 8013fe6:	eeb0 6a62 	vmov.f32	s12, s5
 8013fea:	ee61 7a27 	vmul.f32	s15, s2, s15
 8013fee:	eebe 6ac8 	vcvt.s32.f32	s12, s12, #16
 8013ff2:	ee77 2a62 	vsub.f32	s5, s14, s5
 8013ff6:	ed8d 6a11 	vstr	s12, [sp, #68]	@ 0x44
 8013ffa:	eefe 2ac8 	vcvt.s32.f32	s5, s5, #16
 8013ffe:	eeb0 6a43 	vmov.f32	s12, s6
 8014002:	ee37 3ac3 	vsub.f32	s6, s15, s6
 8014006:	ee12 2a90 	vmov	r2, s5
 801400a:	eebe 3ac8 	vcvt.s32.f32	s6, s6, #16
 801400e:	fb92 f3f3 	sdiv	r3, r2, r3
 8014012:	ee13 2a10 	vmov	r2, s6
 8014016:	eebe 6ac8 	vcvt.s32.f32	s12, s12, #16
 801401a:	9313      	str	r3, [sp, #76]	@ 0x4c
 801401c:	9b10      	ldr	r3, [sp, #64]	@ 0x40
 801401e:	fb92 f3f3 	sdiv	r3, r2, r3
 8014022:	9a03      	ldr	r2, [sp, #12]
 8014024:	9314      	str	r3, [sp, #80]	@ 0x50
 8014026:	ed8d 6a12 	vstr	s12, [sp, #72]	@ 0x48
 801402a:	9b10      	ldr	r3, [sp, #64]	@ 0x40
 801402c:	eeb0 3a67 	vmov.f32	s6, s15
 8014030:	bf08      	it	eq
 8014032:	4613      	moveq	r3, r2
 8014034:	eef0 2a47 	vmov.f32	s5, s14
 8014038:	e789      	b.n	8013f4e <_ZN8touchgfx8LCD16bpp51TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x30>
 801403a:	1406      	asrs	r6, r0, #16
 801403c:	d42d      	bmi.n	801409a <_ZN8touchgfx8LCD16bpp51TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x17c>
 801403e:	f8d9 4008 	ldr.w	r4, [r9, #8]
 8014042:	42b4      	cmp	r4, r6
 8014044:	dd29      	ble.n	801409a <_ZN8touchgfx8LCD16bpp51TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x17c>
 8014046:	ea5f 4c21 	movs.w	ip, r1, asr #16
 801404a:	d426      	bmi.n	801409a <_ZN8touchgfx8LCD16bpp51TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x17c>
 801404c:	f8d9 200c 	ldr.w	r2, [r9, #12]
 8014050:	4562      	cmp	r2, ip
 8014052:	dd22      	ble.n	801409a <_ZN8touchgfx8LCD16bpp51TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x17c>
 8014054:	b224      	sxth	r4, r4
 8014056:	9a01      	ldr	r2, [sp, #4]
 8014058:	fb0c 6404 	mla	r4, ip, r4, r6
 801405c:	f852 4024 	ldr.w	r4, [r2, r4, lsl #2]
 8014060:	0e22      	lsrs	r2, r4, #24
 8014062:	d01a      	beq.n	801409a <_ZN8touchgfx8LCD16bpp51TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x17c>
 8014064:	9e04      	ldr	r6, [sp, #16]
 8014066:	4372      	muls	r2, r6
 8014068:	1c56      	adds	r6, r2, #1
 801406a:	eb06 2222 	add.w	r2, r6, r2, asr #8
 801406e:	1212      	asrs	r2, r2, #8
 8014070:	0a26      	lsrs	r6, r4, #8
 8014072:	2aff      	cmp	r2, #255	@ 0xff
 8014074:	9605      	str	r6, [sp, #20]
 8014076:	d116      	bne.n	80140a6 <_ZN8touchgfx8LCD16bpp51TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x188>
 8014078:	f06f 0201 	mvn.w	r2, #1
 801407c:	fb02 fc07 	mul.w	ip, r2, r7
 8014080:	f426 66ff 	bic.w	r6, r6, #2040	@ 0x7f8
 8014084:	0962      	lsrs	r2, r4, #5
 8014086:	f402 62fc 	and.w	r2, r2, #2016	@ 0x7e0
 801408a:	f026 0607 	bic.w	r6, r6, #7
 801408e:	4316      	orrs	r6, r2
 8014090:	f3c4 04c4 	ubfx	r4, r4, #3, #5
 8014094:	4326      	orrs	r6, r4
 8014096:	f825 600c 	strh.w	r6, [r5, ip]
 801409a:	9a13      	ldr	r2, [sp, #76]	@ 0x4c
 801409c:	4410      	add	r0, r2
 801409e:	9a14      	ldr	r2, [sp, #80]	@ 0x50
 80140a0:	3f01      	subs	r7, #1
 80140a2:	4411      	add	r1, r2
 80140a4:	e787      	b.n	8013fb6 <_ZN8touchgfx8LCD16bpp51TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x98>
 80140a6:	f06f 0601 	mvn.w	r6, #1
 80140aa:	437e      	muls	r6, r7
 80140ac:	fa1f fa82 	uxth.w	sl, r2
 80140b0:	f835 8006 	ldrh.w	r8, [r5, r6]
 80140b4:	9602      	str	r6, [sp, #8]
 80140b6:	ea4f 2e28 	mov.w	lr, r8, asr #8
 80140ba:	f3c4 4c07 	ubfx	ip, r4, #16, #8
 80140be:	43d2      	mvns	r2, r2
 80140c0:	b2d2      	uxtb	r2, r2
 80140c2:	fb1c fc0a 	smulbb	ip, ip, sl
 80140c6:	f00e 0ef8 	and.w	lr, lr, #248	@ 0xf8
 80140ca:	fb0e ce02 	mla	lr, lr, r2, ip
 80140ce:	b2e4      	uxtb	r4, r4
 80140d0:	ea4f 0ce8 	mov.w	ip, r8, asr #3
 80140d4:	ea4f 08c8 	mov.w	r8, r8, lsl #3
 80140d8:	f89d 6014 	ldrb.w	r6, [sp, #20]
 80140dc:	fa5f f888 	uxtb.w	r8, r8
 80140e0:	fb14 f40a 	smulbb	r4, r4, sl
 80140e4:	fb08 4402 	mla	r4, r8, r2, r4
 80140e8:	fa1f fe8e 	uxth.w	lr, lr
 80140ec:	fb16 f60a 	smulbb	r6, r6, sl
 80140f0:	b2a4      	uxth	r4, r4
 80140f2:	f00c 0cfc 	and.w	ip, ip, #252	@ 0xfc
 80140f6:	fb0c 6c02 	mla	ip, ip, r2, r6
 80140fa:	f10e 0201 	add.w	r2, lr, #1
 80140fe:	1c66      	adds	r6, r4, #1
 8014100:	eb02 2e1e 	add.w	lr, r2, lr, lsr #8
 8014104:	eb06 2614 	add.w	r6, r6, r4, lsr #8
 8014108:	fa1f fc8c 	uxth.w	ip, ip
 801410c:	f3c6 26c4 	ubfx	r6, r6, #11, #5
 8014110:	f40e 4e78 	and.w	lr, lr, #63488	@ 0xf800
 8014114:	ea46 0e0e 	orr.w	lr, r6, lr
 8014118:	f10c 0601 	add.w	r6, ip, #1
 801411c:	eb06 261c 	add.w	r6, r6, ip, lsr #8
 8014120:	0976      	lsrs	r6, r6, #5
 8014122:	f406 66fc 	and.w	r6, r6, #2016	@ 0x7e0
 8014126:	9a02      	ldr	r2, [sp, #8]
 8014128:	ea4e 0e06 	orr.w	lr, lr, r6
 801412c:	f825 e002 	strh.w	lr, [r5, r2]
 8014130:	e7b3      	b.n	801409a <_ZN8touchgfx8LCD16bpp51TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x17c>
 8014132:	f04f 0800 	mov.w	r8, #0
 8014136:	eba3 0208 	sub.w	r2, r3, r8
 801413a:	2a00      	cmp	r2, #0
 801413c:	f77f af3e 	ble.w	8013fbc <_ZN8touchgfx8LCD16bpp51TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x9e>
 8014140:	f9b9 6008 	ldrsh.w	r6, [r9, #8]
 8014144:	1404      	asrs	r4, r0, #16
 8014146:	140a      	asrs	r2, r1, #16
 8014148:	fb06 4202 	mla	r2, r6, r2, r4
 801414c:	9c01      	ldr	r4, [sp, #4]
 801414e:	f854 4022 	ldr.w	r4, [r4, r2, lsl #2]
 8014152:	0e22      	lsrs	r2, r4, #24
 8014154:	d016      	beq.n	8014184 <_ZN8touchgfx8LCD16bpp51TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x266>
 8014156:	9e04      	ldr	r6, [sp, #16]
 8014158:	4372      	muls	r2, r6
 801415a:	1c56      	adds	r6, r2, #1
 801415c:	eb06 2222 	add.w	r2, r6, r2, asr #8
 8014160:	1212      	asrs	r2, r2, #8
 8014162:	2aff      	cmp	r2, #255	@ 0xff
 8014164:	ea4f 2614 	mov.w	r6, r4, lsr #8
 8014168:	d113      	bne.n	8014192 <_ZN8touchgfx8LCD16bpp51TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x274>
 801416a:	0962      	lsrs	r2, r4, #5
 801416c:	f426 66ff 	bic.w	r6, r6, #2040	@ 0x7f8
 8014170:	f402 62fc 	and.w	r2, r2, #2016	@ 0x7e0
 8014174:	f026 0607 	bic.w	r6, r6, #7
 8014178:	4316      	orrs	r6, r2
 801417a:	f3c4 04c4 	ubfx	r4, r4, #3, #5
 801417e:	4326      	orrs	r6, r4
 8014180:	f825 6018 	strh.w	r6, [r5, r8, lsl #1]
 8014184:	9a13      	ldr	r2, [sp, #76]	@ 0x4c
 8014186:	4410      	add	r0, r2
 8014188:	9a14      	ldr	r2, [sp, #80]	@ 0x50
 801418a:	f108 0801 	add.w	r8, r8, #1
 801418e:	4411      	add	r1, r2
 8014190:	e7d1      	b.n	8014136 <_ZN8touchgfx8LCD16bpp51TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x218>
 8014192:	f835 e018 	ldrh.w	lr, [r5, r8, lsl #1]
 8014196:	fa1f fa82 	uxth.w	sl, r2
 801419a:	ea4f 2c2e 	mov.w	ip, lr, asr #8
 801419e:	f3c4 4707 	ubfx	r7, r4, #16, #8
 80141a2:	43d2      	mvns	r2, r2
 80141a4:	b2d2      	uxtb	r2, r2
 80141a6:	fb17 f70a 	smulbb	r7, r7, sl
 80141aa:	f00c 0cf8 	and.w	ip, ip, #248	@ 0xf8
 80141ae:	fb0c 7c02 	mla	ip, ip, r2, r7
 80141b2:	b2e4      	uxtb	r4, r4
 80141b4:	ea4f 07ee 	mov.w	r7, lr, asr #3
 80141b8:	ea4f 0ece 	mov.w	lr, lr, lsl #3
 80141bc:	fa5f fe8e 	uxtb.w	lr, lr
 80141c0:	fb14 f40a 	smulbb	r4, r4, sl
 80141c4:	fb0e 4402 	mla	r4, lr, r2, r4
 80141c8:	b2f6      	uxtb	r6, r6
 80141ca:	fa1f fc8c 	uxth.w	ip, ip
 80141ce:	fb16 f60a 	smulbb	r6, r6, sl
 80141d2:	b2a4      	uxth	r4, r4
 80141d4:	f007 07fc 	and.w	r7, r7, #252	@ 0xfc
 80141d8:	fb07 6702 	mla	r7, r7, r2, r6
 80141dc:	f10c 0201 	add.w	r2, ip, #1
 80141e0:	1c66      	adds	r6, r4, #1
 80141e2:	eb02 2c1c 	add.w	ip, r2, ip, lsr #8
 80141e6:	eb06 2614 	add.w	r6, r6, r4, lsr #8
 80141ea:	b2bf      	uxth	r7, r7
 80141ec:	f3c6 26c4 	ubfx	r6, r6, #11, #5
 80141f0:	f40c 4c78 	and.w	ip, ip, #63488	@ 0xf800
 80141f4:	ea46 0c0c 	orr.w	ip, r6, ip
 80141f8:	1c7e      	adds	r6, r7, #1
 80141fa:	eb06 2617 	add.w	r6, r6, r7, lsr #8
 80141fe:	0976      	lsrs	r6, r6, #5
 8014200:	f406 66fc 	and.w	r6, r6, #2016	@ 0x7e0
 8014204:	ea4c 0c06 	orr.w	ip, ip, r6
 8014208:	f825 c018 	strh.w	ip, [r5, r8, lsl #1]
 801420c:	e7ba      	b.n	8014184 <_ZN8touchgfx8LCD16bpp51TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x266>
 801420e:	b007      	add	sp, #28
 8014210:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}

08014214 <_ZN8touchgfx8LCD16bpp53TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff>:
 8014214:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8014218:	b085      	sub	sp, #20
 801421a:	468b      	mov	fp, r1
 801421c:	9813      	ldr	r0, [sp, #76]	@ 0x4c
 801421e:	9203      	str	r2, [sp, #12]
 8014220:	e9dd 2414 	ldrd	r2, r4, [sp, #80]	@ 0x50
 8014224:	6841      	ldr	r1, [r0, #4]
 8014226:	f8dd 8058 	ldr.w	r8, [sp, #88]	@ 0x58
 801422a:	fb01 2404 	mla	r4, r1, r4, r2
 801422e:	6802      	ldr	r2, [r0, #0]
 8014230:	eb02 0444 	add.w	r4, r2, r4, lsl #1
 8014234:	f8d8 2000 	ldr.w	r2, [r8]
 8014238:	9201      	str	r2, [sp, #4]
 801423a:	eef7 6a00 	vmov.f32	s13, #112	@ 0x3f800000  1.0
 801423e:	f1bb 0f00 	cmp.w	fp, #0
 8014242:	dc03      	bgt.n	801424c <_ZN8touchgfx8LCD16bpp53TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x38>
 8014244:	9a03      	ldr	r2, [sp, #12]
 8014246:	2a00      	cmp	r2, #0
 8014248:	f340 814f 	ble.w	80144ea <_ZN8touchgfx8LCD16bpp53TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2d6>
 801424c:	9a0f      	ldr	r2, [sp, #60]	@ 0x3c
 801424e:	f9b8 7008 	ldrsh.w	r7, [r8, #8]
 8014252:	f9b8 600c 	ldrsh.w	r6, [r8, #12]
 8014256:	f502 4100 	add.w	r1, r2, #32768	@ 0x8000
 801425a:	9a10      	ldr	r2, [sp, #64]	@ 0x40
 801425c:	f502 4200 	add.w	r2, r2, #32768	@ 0x8000
 8014260:	2b00      	cmp	r3, #0
 8014262:	dd0e      	ble.n	8014282 <_ZN8touchgfx8LCD16bpp53TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x6e>
 8014264:	1408      	asrs	r0, r1, #16
 8014266:	d405      	bmi.n	8014274 <_ZN8touchgfx8LCD16bpp53TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x60>
 8014268:	42b8      	cmp	r0, r7
 801426a:	da03      	bge.n	8014274 <_ZN8touchgfx8LCD16bpp53TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x60>
 801426c:	1410      	asrs	r0, r2, #16
 801426e:	d401      	bmi.n	8014274 <_ZN8touchgfx8LCD16bpp53TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x60>
 8014270:	42b0      	cmp	r0, r6
 8014272:	db07      	blt.n	8014284 <_ZN8touchgfx8LCD16bpp53TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x70>
 8014274:	9811      	ldr	r0, [sp, #68]	@ 0x44
 8014276:	4401      	add	r1, r0
 8014278:	9812      	ldr	r0, [sp, #72]	@ 0x48
 801427a:	3b01      	subs	r3, #1
 801427c:	4402      	add	r2, r0
 801427e:	3402      	adds	r4, #2
 8014280:	e7ee      	b.n	8014260 <_ZN8touchgfx8LCD16bpp53TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x4c>
 8014282:	d017      	beq.n	80142b4 <_ZN8touchgfx8LCD16bpp53TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xa0>
 8014284:	9d11      	ldr	r5, [sp, #68]	@ 0x44
 8014286:	1e58      	subs	r0, r3, #1
 8014288:	fb05 1500 	mla	r5, r5, r0, r1
 801428c:	142d      	asrs	r5, r5, #16
 801428e:	d409      	bmi.n	80142a4 <_ZN8touchgfx8LCD16bpp53TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x90>
 8014290:	42bd      	cmp	r5, r7
 8014292:	da07      	bge.n	80142a4 <_ZN8touchgfx8LCD16bpp53TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x90>
 8014294:	9d12      	ldr	r5, [sp, #72]	@ 0x48
 8014296:	fb05 2000 	mla	r0, r5, r0, r2
 801429a:	1400      	asrs	r0, r0, #16
 801429c:	d402      	bmi.n	80142a4 <_ZN8touchgfx8LCD16bpp53TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x90>
 801429e:	42b0      	cmp	r0, r6
 80142a0:	f2c0 80ba 	blt.w	8014418 <_ZN8touchgfx8LCD16bpp53TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x204>
 80142a4:	2600      	movs	r6, #0
 80142a6:	1998      	adds	r0, r3, r6
 80142a8:	2800      	cmp	r0, #0
 80142aa:	dc3e      	bgt.n	801432a <_ZN8touchgfx8LCD16bpp53TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x116>
 80142ac:	ea23 73e3 	bic.w	r3, r3, r3, asr #31
 80142b0:	eb04 0443 	add.w	r4, r4, r3, lsl #1
 80142b4:	f1bb 0f00 	cmp.w	fp, #0
 80142b8:	f340 8117 	ble.w	80144ea <_ZN8touchgfx8LCD16bpp53TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2d6>
 80142bc:	ee30 0a04 	vadd.f32	s0, s0, s8
 80142c0:	ee70 0aa4 	vadd.f32	s1, s1, s9
 80142c4:	eec6 7a80 	vdiv.f32	s15, s13, s0
 80142c8:	9b0e      	ldr	r3, [sp, #56]	@ 0x38
 80142ca:	f1bb 0b01 	subs.w	fp, fp, #1
 80142ce:	ee31 1a05 	vadd.f32	s2, s2, s10
 80142d2:	ee20 7aa7 	vmul.f32	s14, s1, s15
 80142d6:	eeb0 6a62 	vmov.f32	s12, s5
 80142da:	ee61 7a27 	vmul.f32	s15, s2, s15
 80142de:	eebe 6ac8 	vcvt.s32.f32	s12, s12, #16
 80142e2:	ee77 2a62 	vsub.f32	s5, s14, s5
 80142e6:	ed8d 6a0f 	vstr	s12, [sp, #60]	@ 0x3c
 80142ea:	eefe 2ac8 	vcvt.s32.f32	s5, s5, #16
 80142ee:	eeb0 6a43 	vmov.f32	s12, s6
 80142f2:	ee37 3ac3 	vsub.f32	s6, s15, s6
 80142f6:	ee12 2a90 	vmov	r2, s5
 80142fa:	eebe 3ac8 	vcvt.s32.f32	s6, s6, #16
 80142fe:	fb92 f3f3 	sdiv	r3, r2, r3
 8014302:	ee13 2a10 	vmov	r2, s6
 8014306:	eebe 6ac8 	vcvt.s32.f32	s12, s12, #16
 801430a:	9311      	str	r3, [sp, #68]	@ 0x44
 801430c:	9b0e      	ldr	r3, [sp, #56]	@ 0x38
 801430e:	fb92 f3f3 	sdiv	r3, r2, r3
 8014312:	9a03      	ldr	r2, [sp, #12]
 8014314:	9312      	str	r3, [sp, #72]	@ 0x48
 8014316:	ed8d 6a10 	vstr	s12, [sp, #64]	@ 0x40
 801431a:	9b0e      	ldr	r3, [sp, #56]	@ 0x38
 801431c:	eeb0 3a67 	vmov.f32	s6, s15
 8014320:	bf08      	it	eq
 8014322:	4613      	moveq	r3, r2
 8014324:	eef0 2a47 	vmov.f32	s5, s14
 8014328:	e789      	b.n	801423e <_ZN8touchgfx8LCD16bpp53TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2a>
 801432a:	140f      	asrs	r7, r1, #16
 801432c:	d424      	bmi.n	8014378 <_ZN8touchgfx8LCD16bpp53TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x164>
 801432e:	f8d8 5008 	ldr.w	r5, [r8, #8]
 8014332:	42bd      	cmp	r5, r7
 8014334:	dd20      	ble.n	8014378 <_ZN8touchgfx8LCD16bpp53TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x164>
 8014336:	ea5f 4c22 	movs.w	ip, r2, asr #16
 801433a:	d41d      	bmi.n	8014378 <_ZN8touchgfx8LCD16bpp53TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x164>
 801433c:	f8d8 000c 	ldr.w	r0, [r8, #12]
 8014340:	4560      	cmp	r0, ip
 8014342:	dd19      	ble.n	8014378 <_ZN8touchgfx8LCD16bpp53TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x164>
 8014344:	b22d      	sxth	r5, r5
 8014346:	fb0c 7505 	mla	r5, ip, r5, r7
 801434a:	9801      	ldr	r0, [sp, #4]
 801434c:	f850 0025 	ldr.w	r0, [r0, r5, lsl #2]
 8014350:	0e07      	lsrs	r7, r0, #24
 8014352:	2fff      	cmp	r7, #255	@ 0xff
 8014354:	d116      	bne.n	8014384 <_ZN8touchgfx8LCD16bpp53TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x170>
 8014356:	f06f 0501 	mvn.w	r5, #1
 801435a:	fb05 f706 	mul.w	r7, r5, r6
 801435e:	f2a5 75fe 	subw	r5, r5, #2046	@ 0x7fe
 8014362:	ea05 2c10 	and.w	ip, r5, r0, lsr #8
 8014366:	0945      	lsrs	r5, r0, #5
 8014368:	f405 65fc 	and.w	r5, r5, #2016	@ 0x7e0
 801436c:	ea4c 0505 	orr.w	r5, ip, r5
 8014370:	f3c0 00c4 	ubfx	r0, r0, #3, #5
 8014374:	4305      	orrs	r5, r0
 8014376:	53e5      	strh	r5, [r4, r7]
 8014378:	9811      	ldr	r0, [sp, #68]	@ 0x44
 801437a:	4401      	add	r1, r0
 801437c:	9812      	ldr	r0, [sp, #72]	@ 0x48
 801437e:	3e01      	subs	r6, #1
 8014380:	4402      	add	r2, r0
 8014382:	e790      	b.n	80142a6 <_ZN8touchgfx8LCD16bpp53TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x92>
 8014384:	b2fd      	uxtb	r5, r7
 8014386:	2f00      	cmp	r7, #0
 8014388:	d0f6      	beq.n	8014378 <_ZN8touchgfx8LCD16bpp53TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x164>
 801438a:	f06f 0701 	mvn.w	r7, #1
 801438e:	4377      	muls	r7, r6
 8014390:	fa1f f985 	uxth.w	r9, r5
 8014394:	f834 e007 	ldrh.w	lr, [r4, r7]
 8014398:	9702      	str	r7, [sp, #8]
 801439a:	ea4f 2c2e 	mov.w	ip, lr, asr #8
 801439e:	f3c0 4707 	ubfx	r7, r0, #16, #8
 80143a2:	43ed      	mvns	r5, r5
 80143a4:	b2ed      	uxtb	r5, r5
 80143a6:	fb17 f709 	smulbb	r7, r7, r9
 80143aa:	f00c 0cf8 	and.w	ip, ip, #248	@ 0xf8
 80143ae:	fb0c 7c05 	mla	ip, ip, r5, r7
 80143b2:	f3c0 2a07 	ubfx	sl, r0, #8, #8
 80143b6:	ea4f 07ee 	mov.w	r7, lr, asr #3
 80143ba:	b2c0      	uxtb	r0, r0
 80143bc:	ea4f 0ece 	mov.w	lr, lr, lsl #3
 80143c0:	fa5f fe8e 	uxtb.w	lr, lr
 80143c4:	fb10 f009 	smulbb	r0, r0, r9
 80143c8:	fb0e 0005 	mla	r0, lr, r5, r0
 80143cc:	b280      	uxth	r0, r0
 80143ce:	fa1f fc8c 	uxth.w	ip, ip
 80143d2:	fb1a fa09 	smulbb	sl, sl, r9
 80143d6:	f007 07fc 	and.w	r7, r7, #252	@ 0xfc
 80143da:	fb07 a705 	mla	r7, r7, r5, sl
 80143de:	f100 0a01 	add.w	sl, r0, #1
 80143e2:	f10c 0501 	add.w	r5, ip, #1
 80143e6:	eb0a 2a10 	add.w	sl, sl, r0, lsr #8
 80143ea:	eb05 2c1c 	add.w	ip, r5, ip, lsr #8
 80143ee:	b2bf      	uxth	r7, r7
 80143f0:	f3ca 2ac4 	ubfx	sl, sl, #11, #5
 80143f4:	f40c 4c78 	and.w	ip, ip, #63488	@ 0xf800
 80143f8:	ea4a 0c0c 	orr.w	ip, sl, ip
 80143fc:	f107 0a01 	add.w	sl, r7, #1
 8014400:	eb0a 2a17 	add.w	sl, sl, r7, lsr #8
 8014404:	ea4f 1a5a 	mov.w	sl, sl, lsr #5
 8014408:	f40a 6afc 	and.w	sl, sl, #2016	@ 0x7e0
 801440c:	9802      	ldr	r0, [sp, #8]
 801440e:	ea4c 0c0a 	orr.w	ip, ip, sl
 8014412:	f824 c000 	strh.w	ip, [r4, r0]
 8014416:	e7af      	b.n	8014378 <_ZN8touchgfx8LCD16bpp53TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x164>
 8014418:	f04f 0e00 	mov.w	lr, #0
 801441c:	eba3 000e 	sub.w	r0, r3, lr
 8014420:	2800      	cmp	r0, #0
 8014422:	f77f af43 	ble.w	80142ac <_ZN8touchgfx8LCD16bpp53TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x98>
 8014426:	f9b8 6008 	ldrsh.w	r6, [r8, #8]
 801442a:	140d      	asrs	r5, r1, #16
 801442c:	1410      	asrs	r0, r2, #16
 801442e:	fb06 5000 	mla	r0, r6, r0, r5
 8014432:	9d01      	ldr	r5, [sp, #4]
 8014434:	f855 5020 	ldr.w	r5, [r5, r0, lsl #2]
 8014438:	0e2e      	lsrs	r6, r5, #24
 801443a:	2eff      	cmp	r6, #255	@ 0xff
 801443c:	d112      	bne.n	8014464 <_ZN8touchgfx8LCD16bpp53TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x250>
 801443e:	482c      	ldr	r0, [pc, #176]	@ (80144f0 <_ZN8touchgfx8LCD16bpp53TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2dc>)
 8014440:	ea00 2615 	and.w	r6, r0, r5, lsr #8
 8014444:	0968      	lsrs	r0, r5, #5
 8014446:	f400 60fc 	and.w	r0, r0, #2016	@ 0x7e0
 801444a:	4330      	orrs	r0, r6
 801444c:	f3c5 05c4 	ubfx	r5, r5, #3, #5
 8014450:	4328      	orrs	r0, r5
 8014452:	f824 001e 	strh.w	r0, [r4, lr, lsl #1]
 8014456:	9811      	ldr	r0, [sp, #68]	@ 0x44
 8014458:	4401      	add	r1, r0
 801445a:	9812      	ldr	r0, [sp, #72]	@ 0x48
 801445c:	f10e 0e01 	add.w	lr, lr, #1
 8014460:	4402      	add	r2, r0
 8014462:	e7db      	b.n	801441c <_ZN8touchgfx8LCD16bpp53TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x208>
 8014464:	b2f0      	uxtb	r0, r6
 8014466:	2e00      	cmp	r6, #0
 8014468:	d0f5      	beq.n	8014456 <_ZN8touchgfx8LCD16bpp53TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x242>
 801446a:	f834 c01e 	ldrh.w	ip, [r4, lr, lsl #1]
 801446e:	fa1f f980 	uxth.w	r9, r0
 8014472:	ea4f 272c 	mov.w	r7, ip, asr #8
 8014476:	f3c5 4607 	ubfx	r6, r5, #16, #8
 801447a:	43c0      	mvns	r0, r0
 801447c:	b2c0      	uxtb	r0, r0
 801447e:	fb16 f609 	smulbb	r6, r6, r9
 8014482:	f007 07f8 	and.w	r7, r7, #248	@ 0xf8
 8014486:	fb07 6700 	mla	r7, r7, r0, r6
 801448a:	f3c5 2a07 	ubfx	sl, r5, #8, #8
 801448e:	ea4f 06ec 	mov.w	r6, ip, asr #3
 8014492:	b2ed      	uxtb	r5, r5
 8014494:	ea4f 0ccc 	mov.w	ip, ip, lsl #3
 8014498:	fa5f fc8c 	uxtb.w	ip, ip
 801449c:	fb15 f509 	smulbb	r5, r5, r9
 80144a0:	fb0c 5500 	mla	r5, ip, r0, r5
 80144a4:	b2bf      	uxth	r7, r7
 80144a6:	fb1a fa09 	smulbb	sl, sl, r9
 80144aa:	b2ad      	uxth	r5, r5
 80144ac:	f006 06fc 	and.w	r6, r6, #252	@ 0xfc
 80144b0:	fb06 a600 	mla	r6, r6, r0, sl
 80144b4:	1c78      	adds	r0, r7, #1
 80144b6:	f105 0a01 	add.w	sl, r5, #1
 80144ba:	eb00 2717 	add.w	r7, r0, r7, lsr #8
 80144be:	eb0a 2a15 	add.w	sl, sl, r5, lsr #8
 80144c2:	b2b6      	uxth	r6, r6
 80144c4:	f3ca 2ac4 	ubfx	sl, sl, #11, #5
 80144c8:	f407 4778 	and.w	r7, r7, #63488	@ 0xf800
 80144cc:	ea4a 0707 	orr.w	r7, sl, r7
 80144d0:	f106 0a01 	add.w	sl, r6, #1
 80144d4:	eb0a 2a16 	add.w	sl, sl, r6, lsr #8
 80144d8:	ea4f 1a5a 	mov.w	sl, sl, lsr #5
 80144dc:	f40a 6afc 	and.w	sl, sl, #2016	@ 0x7e0
 80144e0:	ea47 070a 	orr.w	r7, r7, sl
 80144e4:	f824 701e 	strh.w	r7, [r4, lr, lsl #1]
 80144e8:	e7b5      	b.n	8014456 <_ZN8touchgfx8LCD16bpp53TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x242>
 80144ea:	b005      	add	sp, #20
 80144ec:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 80144f0:	fffff800 	.word	0xfffff800

080144f4 <_ZN8touchgfx8LCD16bpp35TextureMapper_A4_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff>:
 80144f4:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 80144f8:	b087      	sub	sp, #28
 80144fa:	468b      	mov	fp, r1
 80144fc:	9815      	ldr	r0, [sp, #84]	@ 0x54
 80144fe:	9203      	str	r2, [sp, #12]
 8014500:	f89d 2064 	ldrb.w	r2, [sp, #100]	@ 0x64
 8014504:	9204      	str	r2, [sp, #16]
 8014506:	e9dd 2416 	ldrd	r2, r4, [sp, #88]	@ 0x58
 801450a:	6841      	ldr	r1, [r0, #4]
 801450c:	f8dd 9060 	ldr.w	r9, [sp, #96]	@ 0x60
 8014510:	fb01 2404 	mla	r4, r1, r4, r2
 8014514:	6802      	ldr	r2, [r0, #0]
 8014516:	eb02 0444 	add.w	r4, r2, r4, lsl #1
 801451a:	f8d9 2008 	ldr.w	r2, [r9, #8]
 801451e:	3201      	adds	r2, #1
 8014520:	f022 0201 	bic.w	r2, r2, #1
 8014524:	9200      	str	r2, [sp, #0]
 8014526:	f8d9 2000 	ldr.w	r2, [r9]
 801452a:	9201      	str	r2, [sp, #4]
 801452c:	eef7 6a00 	vmov.f32	s13, #112	@ 0x3f800000  1.0
 8014530:	f1bb 0f00 	cmp.w	fp, #0
 8014534:	dc03      	bgt.n	801453e <_ZN8touchgfx8LCD16bpp35TextureMapper_A4_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x4a>
 8014536:	9a03      	ldr	r2, [sp, #12]
 8014538:	2a00      	cmp	r2, #0
 801453a:	f340 8169 	ble.w	8014810 <_ZN8touchgfx8LCD16bpp35TextureMapper_A4_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x31c>
 801453e:	9a11      	ldr	r2, [sp, #68]	@ 0x44
 8014540:	f9b9 7008 	ldrsh.w	r7, [r9, #8]
 8014544:	f9b9 600c 	ldrsh.w	r6, [r9, #12]
 8014548:	f502 4000 	add.w	r0, r2, #32768	@ 0x8000
 801454c:	9a12      	ldr	r2, [sp, #72]	@ 0x48
 801454e:	f502 4100 	add.w	r1, r2, #32768	@ 0x8000
 8014552:	2b00      	cmp	r3, #0
 8014554:	dd0e      	ble.n	8014574 <_ZN8touchgfx8LCD16bpp35TextureMapper_A4_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x80>
 8014556:	1402      	asrs	r2, r0, #16
 8014558:	d405      	bmi.n	8014566 <_ZN8touchgfx8LCD16bpp35TextureMapper_A4_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x72>
 801455a:	42ba      	cmp	r2, r7
 801455c:	da03      	bge.n	8014566 <_ZN8touchgfx8LCD16bpp35TextureMapper_A4_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x72>
 801455e:	140a      	asrs	r2, r1, #16
 8014560:	d401      	bmi.n	8014566 <_ZN8touchgfx8LCD16bpp35TextureMapper_A4_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x72>
 8014562:	42b2      	cmp	r2, r6
 8014564:	db07      	blt.n	8014576 <_ZN8touchgfx8LCD16bpp35TextureMapper_A4_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x82>
 8014566:	9a13      	ldr	r2, [sp, #76]	@ 0x4c
 8014568:	4410      	add	r0, r2
 801456a:	9a14      	ldr	r2, [sp, #80]	@ 0x50
 801456c:	3b01      	subs	r3, #1
 801456e:	4411      	add	r1, r2
 8014570:	3402      	adds	r4, #2
 8014572:	e7ee      	b.n	8014552 <_ZN8touchgfx8LCD16bpp35TextureMapper_A4_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x5e>
 8014574:	d017      	beq.n	80145a6 <_ZN8touchgfx8LCD16bpp35TextureMapper_A4_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xb2>
 8014576:	9d13      	ldr	r5, [sp, #76]	@ 0x4c
 8014578:	1e5a      	subs	r2, r3, #1
 801457a:	fb05 0502 	mla	r5, r5, r2, r0
 801457e:	142d      	asrs	r5, r5, #16
 8014580:	d409      	bmi.n	8014596 <_ZN8touchgfx8LCD16bpp35TextureMapper_A4_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xa2>
 8014582:	42bd      	cmp	r5, r7
 8014584:	da07      	bge.n	8014596 <_ZN8touchgfx8LCD16bpp35TextureMapper_A4_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xa2>
 8014586:	9d14      	ldr	r5, [sp, #80]	@ 0x50
 8014588:	fb05 1202 	mla	r2, r5, r2, r1
 801458c:	1412      	asrs	r2, r2, #16
 801458e:	d402      	bmi.n	8014596 <_ZN8touchgfx8LCD16bpp35TextureMapper_A4_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xa2>
 8014590:	42b2      	cmp	r2, r6
 8014592:	f2c0 80c7 	blt.w	8014724 <_ZN8touchgfx8LCD16bpp35TextureMapper_A4_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x230>
 8014596:	2700      	movs	r7, #0
 8014598:	19da      	adds	r2, r3, r7
 801459a:	2a00      	cmp	r2, #0
 801459c:	dc3e      	bgt.n	801461c <_ZN8touchgfx8LCD16bpp35TextureMapper_A4_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x128>
 801459e:	ea23 73e3 	bic.w	r3, r3, r3, asr #31
 80145a2:	eb04 0443 	add.w	r4, r4, r3, lsl #1
 80145a6:	f1bb 0f00 	cmp.w	fp, #0
 80145aa:	f340 8131 	ble.w	8014810 <_ZN8touchgfx8LCD16bpp35TextureMapper_A4_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x31c>
 80145ae:	ee30 0a04 	vadd.f32	s0, s0, s8
 80145b2:	ee70 0aa4 	vadd.f32	s1, s1, s9
 80145b6:	eec6 7a80 	vdiv.f32	s15, s13, s0
 80145ba:	9b10      	ldr	r3, [sp, #64]	@ 0x40
 80145bc:	f1bb 0b01 	subs.w	fp, fp, #1
 80145c0:	ee31 1a05 	vadd.f32	s2, s2, s10
 80145c4:	ee20 7aa7 	vmul.f32	s14, s1, s15
 80145c8:	eeb0 6a62 	vmov.f32	s12, s5
 80145cc:	ee61 7a27 	vmul.f32	s15, s2, s15
 80145d0:	eebe 6ac8 	vcvt.s32.f32	s12, s12, #16
 80145d4:	ee77 2a62 	vsub.f32	s5, s14, s5
 80145d8:	ed8d 6a11 	vstr	s12, [sp, #68]	@ 0x44
 80145dc:	eefe 2ac8 	vcvt.s32.f32	s5, s5, #16
 80145e0:	eeb0 6a43 	vmov.f32	s12, s6
 80145e4:	ee37 3ac3 	vsub.f32	s6, s15, s6
 80145e8:	ee12 2a90 	vmov	r2, s5
 80145ec:	eebe 3ac8 	vcvt.s32.f32	s6, s6, #16
 80145f0:	fb92 f3f3 	sdiv	r3, r2, r3
 80145f4:	ee13 2a10 	vmov	r2, s6
 80145f8:	eebe 6ac8 	vcvt.s32.f32	s12, s12, #16
 80145fc:	9313      	str	r3, [sp, #76]	@ 0x4c
 80145fe:	9b10      	ldr	r3, [sp, #64]	@ 0x40
 8014600:	fb92 f3f3 	sdiv	r3, r2, r3
 8014604:	9a03      	ldr	r2, [sp, #12]
 8014606:	9314      	str	r3, [sp, #80]	@ 0x50
 8014608:	ed8d 6a12 	vstr	s12, [sp, #72]	@ 0x48
 801460c:	9b10      	ldr	r3, [sp, #64]	@ 0x40
 801460e:	eeb0 3a67 	vmov.f32	s6, s15
 8014612:	bf08      	it	eq
 8014614:	4613      	moveq	r3, r2
 8014616:	eef0 2a47 	vmov.f32	s5, s14
 801461a:	e789      	b.n	8014530 <_ZN8touchgfx8LCD16bpp35TextureMapper_A4_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3c>
 801461c:	1405      	asrs	r5, r0, #16
 801461e:	d435      	bmi.n	801468c <_ZN8touchgfx8LCD16bpp35TextureMapper_A4_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x198>
 8014620:	f8d9 2008 	ldr.w	r2, [r9, #8]
 8014624:	42aa      	cmp	r2, r5
 8014626:	dd31      	ble.n	801468c <_ZN8touchgfx8LCD16bpp35TextureMapper_A4_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x198>
 8014628:	140e      	asrs	r6, r1, #16
 801462a:	d42f      	bmi.n	801468c <_ZN8touchgfx8LCD16bpp35TextureMapper_A4_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x198>
 801462c:	f8d9 200c 	ldr.w	r2, [r9, #12]
 8014630:	42b2      	cmp	r2, r6
 8014632:	dd2b      	ble.n	801468c <_ZN8touchgfx8LCD16bpp35TextureMapper_A4_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x198>
 8014634:	9a00      	ldr	r2, [sp, #0]
 8014636:	fb06 5502 	mla	r5, r6, r2, r5
 801463a:	086a      	lsrs	r2, r5, #1
 801463c:	9e01      	ldr	r6, [sp, #4]
 801463e:	5cb2      	ldrb	r2, [r6, r2]
 8014640:	07ee      	lsls	r6, r5, #31
 8014642:	bf54      	ite	pl
 8014644:	f002 020f 	andpl.w	r2, r2, #15
 8014648:	1112      	asrmi	r2, r2, #4
 801464a:	eb02 1202 	add.w	r2, r2, r2, lsl #4
 801464e:	b2d2      	uxtb	r2, r2
 8014650:	b1e2      	cbz	r2, 801468c <_ZN8touchgfx8LCD16bpp35TextureMapper_A4_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x198>
 8014652:	9d04      	ldr	r5, [sp, #16]
 8014654:	436a      	muls	r2, r5
 8014656:	1c55      	adds	r5, r2, #1
 8014658:	eb05 2222 	add.w	r2, r5, r2, asr #8
 801465c:	4d6e      	ldr	r5, [pc, #440]	@ (8014818 <_ZN8touchgfx8LCD16bpp35TextureMapper_A4_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x324>)
 801465e:	682d      	ldr	r5, [r5, #0]
 8014660:	1212      	asrs	r2, r2, #8
 8014662:	0a2e      	lsrs	r6, r5, #8
 8014664:	2aff      	cmp	r2, #255	@ 0xff
 8014666:	9605      	str	r6, [sp, #20]
 8014668:	d116      	bne.n	8014698 <_ZN8touchgfx8LCD16bpp35TextureMapper_A4_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1a4>
 801466a:	f06f 0201 	mvn.w	r2, #1
 801466e:	fb02 fc07 	mul.w	ip, r2, r7
 8014672:	f426 66ff 	bic.w	r6, r6, #2040	@ 0x7f8
 8014676:	096a      	lsrs	r2, r5, #5
 8014678:	f402 62fc 	and.w	r2, r2, #2016	@ 0x7e0
 801467c:	f026 0607 	bic.w	r6, r6, #7
 8014680:	4316      	orrs	r6, r2
 8014682:	f3c5 05c4 	ubfx	r5, r5, #3, #5
 8014686:	432e      	orrs	r6, r5
 8014688:	f824 600c 	strh.w	r6, [r4, ip]
 801468c:	9a13      	ldr	r2, [sp, #76]	@ 0x4c
 801468e:	4410      	add	r0, r2
 8014690:	9a14      	ldr	r2, [sp, #80]	@ 0x50
 8014692:	3f01      	subs	r7, #1
 8014694:	4411      	add	r1, r2
 8014696:	e77f      	b.n	8014598 <_ZN8touchgfx8LCD16bpp35TextureMapper_A4_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xa4>
 8014698:	f06f 0601 	mvn.w	r6, #1
 801469c:	437e      	muls	r6, r7
 801469e:	fa1f fa82 	uxth.w	sl, r2
 80146a2:	f834 8006 	ldrh.w	r8, [r4, r6]
 80146a6:	9602      	str	r6, [sp, #8]
 80146a8:	ea4f 2e28 	mov.w	lr, r8, asr #8
 80146ac:	f3c5 4c07 	ubfx	ip, r5, #16, #8
 80146b0:	43d2      	mvns	r2, r2
 80146b2:	b2d2      	uxtb	r2, r2
 80146b4:	fb1c fc0a 	smulbb	ip, ip, sl
 80146b8:	f00e 0ef8 	and.w	lr, lr, #248	@ 0xf8
 80146bc:	fb0e ce02 	mla	lr, lr, r2, ip
 80146c0:	b2ed      	uxtb	r5, r5
 80146c2:	ea4f 0ce8 	mov.w	ip, r8, asr #3
 80146c6:	ea4f 08c8 	mov.w	r8, r8, lsl #3
 80146ca:	f89d 6014 	ldrb.w	r6, [sp, #20]
 80146ce:	fa5f f888 	uxtb.w	r8, r8
 80146d2:	fb15 f50a 	smulbb	r5, r5, sl
 80146d6:	fb08 5502 	mla	r5, r8, r2, r5
 80146da:	fa1f fe8e 	uxth.w	lr, lr
 80146de:	fb16 f60a 	smulbb	r6, r6, sl
 80146e2:	b2ad      	uxth	r5, r5
 80146e4:	f00c 0cfc 	and.w	ip, ip, #252	@ 0xfc
 80146e8:	fb0c 6c02 	mla	ip, ip, r2, r6
 80146ec:	f10e 0201 	add.w	r2, lr, #1
 80146f0:	1c6e      	adds	r6, r5, #1
 80146f2:	eb02 2e1e 	add.w	lr, r2, lr, lsr #8
 80146f6:	eb06 2615 	add.w	r6, r6, r5, lsr #8
 80146fa:	fa1f fc8c 	uxth.w	ip, ip
 80146fe:	f3c6 26c4 	ubfx	r6, r6, #11, #5
 8014702:	f40e 4e78 	and.w	lr, lr, #63488	@ 0xf800
 8014706:	ea46 0e0e 	orr.w	lr, r6, lr
 801470a:	f10c 0601 	add.w	r6, ip, #1
 801470e:	eb06 261c 	add.w	r6, r6, ip, lsr #8
 8014712:	0976      	lsrs	r6, r6, #5
 8014714:	f406 66fc 	and.w	r6, r6, #2016	@ 0x7e0
 8014718:	9a02      	ldr	r2, [sp, #8]
 801471a:	ea4e 0e06 	orr.w	lr, lr, r6
 801471e:	f824 e002 	strh.w	lr, [r4, r2]
 8014722:	e7b3      	b.n	801468c <_ZN8touchgfx8LCD16bpp35TextureMapper_A4_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x198>
 8014724:	f04f 0800 	mov.w	r8, #0
 8014728:	eba3 0208 	sub.w	r2, r3, r8
 801472c:	2a00      	cmp	r2, #0
 801472e:	f77f af36 	ble.w	801459e <_ZN8touchgfx8LCD16bpp35TextureMapper_A4_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xaa>
 8014732:	9e00      	ldr	r6, [sp, #0]
 8014734:	1402      	asrs	r2, r0, #16
 8014736:	140d      	asrs	r5, r1, #16
 8014738:	fb06 2505 	mla	r5, r6, r5, r2
 801473c:	086a      	lsrs	r2, r5, #1
 801473e:	9e01      	ldr	r6, [sp, #4]
 8014740:	5cb2      	ldrb	r2, [r6, r2]
 8014742:	07ed      	lsls	r5, r5, #31
 8014744:	bf54      	ite	pl
 8014746:	f002 020f 	andpl.w	r2, r2, #15
 801474a:	1112      	asrmi	r2, r2, #4
 801474c:	eb02 1202 	add.w	r2, r2, r2, lsl #4
 8014750:	b2d2      	uxtb	r2, r2
 8014752:	b1c2      	cbz	r2, 8014786 <_ZN8touchgfx8LCD16bpp35TextureMapper_A4_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x292>
 8014754:	9d04      	ldr	r5, [sp, #16]
 8014756:	436a      	muls	r2, r5
 8014758:	1c55      	adds	r5, r2, #1
 801475a:	eb05 2222 	add.w	r2, r5, r2, asr #8
 801475e:	4d2e      	ldr	r5, [pc, #184]	@ (8014818 <_ZN8touchgfx8LCD16bpp35TextureMapper_A4_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x324>)
 8014760:	1212      	asrs	r2, r2, #8
 8014762:	682e      	ldr	r6, [r5, #0]
 8014764:	2aff      	cmp	r2, #255	@ 0xff
 8014766:	ea4f 2516 	mov.w	r5, r6, lsr #8
 801476a:	d113      	bne.n	8014794 <_ZN8touchgfx8LCD16bpp35TextureMapper_A4_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2a0>
 801476c:	0972      	lsrs	r2, r6, #5
 801476e:	f425 65ff 	bic.w	r5, r5, #2040	@ 0x7f8
 8014772:	f402 62fc 	and.w	r2, r2, #2016	@ 0x7e0
 8014776:	f025 0507 	bic.w	r5, r5, #7
 801477a:	4315      	orrs	r5, r2
 801477c:	f3c6 06c4 	ubfx	r6, r6, #3, #5
 8014780:	4335      	orrs	r5, r6
 8014782:	f824 5018 	strh.w	r5, [r4, r8, lsl #1]
 8014786:	9a13      	ldr	r2, [sp, #76]	@ 0x4c
 8014788:	4410      	add	r0, r2
 801478a:	9a14      	ldr	r2, [sp, #80]	@ 0x50
 801478c:	f108 0801 	add.w	r8, r8, #1
 8014790:	4411      	add	r1, r2
 8014792:	e7c9      	b.n	8014728 <_ZN8touchgfx8LCD16bpp35TextureMapper_A4_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x234>
 8014794:	f834 e018 	ldrh.w	lr, [r4, r8, lsl #1]
 8014798:	fa1f fa82 	uxth.w	sl, r2
 801479c:	ea4f 2c2e 	mov.w	ip, lr, asr #8
 80147a0:	f3c6 4707 	ubfx	r7, r6, #16, #8
 80147a4:	43d2      	mvns	r2, r2
 80147a6:	b2d2      	uxtb	r2, r2
 80147a8:	fb17 f70a 	smulbb	r7, r7, sl
 80147ac:	f00c 0cf8 	and.w	ip, ip, #248	@ 0xf8
 80147b0:	fb0c 7c02 	mla	ip, ip, r2, r7
 80147b4:	b2f6      	uxtb	r6, r6
 80147b6:	ea4f 07ee 	mov.w	r7, lr, asr #3
 80147ba:	ea4f 0ece 	mov.w	lr, lr, lsl #3
 80147be:	fa5f fe8e 	uxtb.w	lr, lr
 80147c2:	fb16 f60a 	smulbb	r6, r6, sl
 80147c6:	fb0e 6602 	mla	r6, lr, r2, r6
 80147ca:	b2ed      	uxtb	r5, r5
 80147cc:	fa1f fc8c 	uxth.w	ip, ip
 80147d0:	fb15 f50a 	smulbb	r5, r5, sl
 80147d4:	b2b6      	uxth	r6, r6
 80147d6:	f007 07fc 	and.w	r7, r7, #252	@ 0xfc
 80147da:	fb07 5702 	mla	r7, r7, r2, r5
 80147de:	f10c 0201 	add.w	r2, ip, #1
 80147e2:	1c75      	adds	r5, r6, #1
 80147e4:	eb02 2c1c 	add.w	ip, r2, ip, lsr #8
 80147e8:	eb05 2516 	add.w	r5, r5, r6, lsr #8
 80147ec:	b2bf      	uxth	r7, r7
 80147ee:	f3c5 25c4 	ubfx	r5, r5, #11, #5
 80147f2:	f40c 4c78 	and.w	ip, ip, #63488	@ 0xf800
 80147f6:	ea45 0c0c 	orr.w	ip, r5, ip
 80147fa:	1c7d      	adds	r5, r7, #1
 80147fc:	eb05 2517 	add.w	r5, r5, r7, lsr #8
 8014800:	096d      	lsrs	r5, r5, #5
 8014802:	f405 65fc 	and.w	r5, r5, #2016	@ 0x7e0
 8014806:	ea4c 0c05 	orr.w	ip, ip, r5
 801480a:	f824 c018 	strh.w	ip, [r4, r8, lsl #1]
 801480e:	e7ba      	b.n	8014786 <_ZN8touchgfx8LCD16bpp35TextureMapper_A4_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x292>
 8014810:	b007      	add	sp, #28
 8014812:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 8014816:	bf00      	nop
 8014818:	20002c64 	.word	0x20002c64

0801481c <_ZN8touchgfx8LCD16bpp37TextureMapper_A4_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff>:
 801481c:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8014820:	b087      	sub	sp, #28
 8014822:	f8df 830c 	ldr.w	r8, [pc, #780]	@ 8014b30 <_ZN8touchgfx8LCD16bpp37TextureMapper_A4_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x314>
 8014826:	9815      	ldr	r0, [sp, #84]	@ 0x54
 8014828:	9205      	str	r2, [sp, #20]
 801482a:	e9dd 2416 	ldrd	r2, r4, [sp, #88]	@ 0x58
 801482e:	9101      	str	r1, [sp, #4]
 8014830:	6841      	ldr	r1, [r0, #4]
 8014832:	f8dd b060 	ldr.w	fp, [sp, #96]	@ 0x60
 8014836:	fb01 2404 	mla	r4, r1, r4, r2
 801483a:	6802      	ldr	r2, [r0, #0]
 801483c:	eb02 0444 	add.w	r4, r2, r4, lsl #1
 8014840:	f8db 2008 	ldr.w	r2, [fp, #8]
 8014844:	3201      	adds	r2, #1
 8014846:	f022 0201 	bic.w	r2, r2, #1
 801484a:	9202      	str	r2, [sp, #8]
 801484c:	f8db 2000 	ldr.w	r2, [fp]
 8014850:	9203      	str	r2, [sp, #12]
 8014852:	eef7 6a00 	vmov.f32	s13, #112	@ 0x3f800000  1.0
 8014856:	9a01      	ldr	r2, [sp, #4]
 8014858:	2a00      	cmp	r2, #0
 801485a:	dc03      	bgt.n	8014864 <_ZN8touchgfx8LCD16bpp37TextureMapper_A4_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x48>
 801485c:	9a05      	ldr	r2, [sp, #20]
 801485e:	2a00      	cmp	r2, #0
 8014860:	f340 8162 	ble.w	8014b28 <_ZN8touchgfx8LCD16bpp37TextureMapper_A4_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x30c>
 8014864:	9a11      	ldr	r2, [sp, #68]	@ 0x44
 8014866:	f9bb 7008 	ldrsh.w	r7, [fp, #8]
 801486a:	f9bb 600c 	ldrsh.w	r6, [fp, #12]
 801486e:	f502 4000 	add.w	r0, r2, #32768	@ 0x8000
 8014872:	9a12      	ldr	r2, [sp, #72]	@ 0x48
 8014874:	f502 4100 	add.w	r1, r2, #32768	@ 0x8000
 8014878:	2b00      	cmp	r3, #0
 801487a:	dd0e      	ble.n	801489a <_ZN8touchgfx8LCD16bpp37TextureMapper_A4_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x7e>
 801487c:	1402      	asrs	r2, r0, #16
 801487e:	d405      	bmi.n	801488c <_ZN8touchgfx8LCD16bpp37TextureMapper_A4_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x70>
 8014880:	42ba      	cmp	r2, r7
 8014882:	da03      	bge.n	801488c <_ZN8touchgfx8LCD16bpp37TextureMapper_A4_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x70>
 8014884:	140a      	asrs	r2, r1, #16
 8014886:	d401      	bmi.n	801488c <_ZN8touchgfx8LCD16bpp37TextureMapper_A4_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x70>
 8014888:	42b2      	cmp	r2, r6
 801488a:	db07      	blt.n	801489c <_ZN8touchgfx8LCD16bpp37TextureMapper_A4_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x80>
 801488c:	9a13      	ldr	r2, [sp, #76]	@ 0x4c
 801488e:	4410      	add	r0, r2
 8014890:	9a14      	ldr	r2, [sp, #80]	@ 0x50
 8014892:	3b01      	subs	r3, #1
 8014894:	4411      	add	r1, r2
 8014896:	3402      	adds	r4, #2
 8014898:	e7ee      	b.n	8014878 <_ZN8touchgfx8LCD16bpp37TextureMapper_A4_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x5c>
 801489a:	d017      	beq.n	80148cc <_ZN8touchgfx8LCD16bpp37TextureMapper_A4_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xb0>
 801489c:	9d13      	ldr	r5, [sp, #76]	@ 0x4c
 801489e:	1e5a      	subs	r2, r3, #1
 80148a0:	fb05 0502 	mla	r5, r5, r2, r0
 80148a4:	142d      	asrs	r5, r5, #16
 80148a6:	d409      	bmi.n	80148bc <_ZN8touchgfx8LCD16bpp37TextureMapper_A4_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xa0>
 80148a8:	42bd      	cmp	r5, r7
 80148aa:	da07      	bge.n	80148bc <_ZN8touchgfx8LCD16bpp37TextureMapper_A4_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xa0>
 80148ac:	9d14      	ldr	r5, [sp, #80]	@ 0x50
 80148ae:	fb05 1202 	mla	r2, r5, r2, r1
 80148b2:	1412      	asrs	r2, r2, #16
 80148b4:	d402      	bmi.n	80148bc <_ZN8touchgfx8LCD16bpp37TextureMapper_A4_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xa0>
 80148b6:	42b2      	cmp	r2, r6
 80148b8:	f2c0 80c3 	blt.w	8014a42 <_ZN8touchgfx8LCD16bpp37TextureMapper_A4_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x226>
 80148bc:	2500      	movs	r5, #0
 80148be:	195a      	adds	r2, r3, r5
 80148c0:	2a00      	cmp	r2, #0
 80148c2:	dc3f      	bgt.n	8014944 <_ZN8touchgfx8LCD16bpp37TextureMapper_A4_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x128>
 80148c4:	ea23 73e3 	bic.w	r3, r3, r3, asr #31
 80148c8:	eb04 0443 	add.w	r4, r4, r3, lsl #1
 80148cc:	9b01      	ldr	r3, [sp, #4]
 80148ce:	2b00      	cmp	r3, #0
 80148d0:	f340 812a 	ble.w	8014b28 <_ZN8touchgfx8LCD16bpp37TextureMapper_A4_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x30c>
 80148d4:	ee30 0a04 	vadd.f32	s0, s0, s8
 80148d8:	ee70 0aa4 	vadd.f32	s1, s1, s9
 80148dc:	eec6 7a80 	vdiv.f32	s15, s13, s0
 80148e0:	9b10      	ldr	r3, [sp, #64]	@ 0x40
 80148e2:	ee31 1a05 	vadd.f32	s2, s2, s10
 80148e6:	ee20 7aa7 	vmul.f32	s14, s1, s15
 80148ea:	eeb0 6a62 	vmov.f32	s12, s5
 80148ee:	ee61 7a27 	vmul.f32	s15, s2, s15
 80148f2:	eebe 6ac8 	vcvt.s32.f32	s12, s12, #16
 80148f6:	ee77 2a62 	vsub.f32	s5, s14, s5
 80148fa:	ed8d 6a11 	vstr	s12, [sp, #68]	@ 0x44
 80148fe:	eefe 2ac8 	vcvt.s32.f32	s5, s5, #16
 8014902:	eeb0 6a43 	vmov.f32	s12, s6
 8014906:	ee37 3ac3 	vsub.f32	s6, s15, s6
 801490a:	ee12 2a90 	vmov	r2, s5
 801490e:	eebe 3ac8 	vcvt.s32.f32	s6, s6, #16
 8014912:	fb92 f3f3 	sdiv	r3, r2, r3
 8014916:	ee13 2a10 	vmov	r2, s6
 801491a:	9313      	str	r3, [sp, #76]	@ 0x4c
 801491c:	9b10      	ldr	r3, [sp, #64]	@ 0x40
 801491e:	fb92 f3f3 	sdiv	r3, r2, r3
 8014922:	9314      	str	r3, [sp, #80]	@ 0x50
 8014924:	9b01      	ldr	r3, [sp, #4]
 8014926:	9a05      	ldr	r2, [sp, #20]
 8014928:	eebe 6ac8 	vcvt.s32.f32	s12, s12, #16
 801492c:	3b01      	subs	r3, #1
 801492e:	9301      	str	r3, [sp, #4]
 8014930:	ed8d 6a12 	vstr	s12, [sp, #72]	@ 0x48
 8014934:	9b10      	ldr	r3, [sp, #64]	@ 0x40
 8014936:	eeb0 3a67 	vmov.f32	s6, s15
 801493a:	bf08      	it	eq
 801493c:	4613      	moveq	r3, r2
 801493e:	eef0 2a47 	vmov.f32	s5, s14
 8014942:	e788      	b.n	8014856 <_ZN8touchgfx8LCD16bpp37TextureMapper_A4_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3a>
 8014944:	1406      	asrs	r6, r0, #16
 8014946:	d42c      	bmi.n	80149a2 <_ZN8touchgfx8LCD16bpp37TextureMapper_A4_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x186>
 8014948:	f8db 2008 	ldr.w	r2, [fp, #8]
 801494c:	42b2      	cmp	r2, r6
 801494e:	dd28      	ble.n	80149a2 <_ZN8touchgfx8LCD16bpp37TextureMapper_A4_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x186>
 8014950:	140f      	asrs	r7, r1, #16
 8014952:	d426      	bmi.n	80149a2 <_ZN8touchgfx8LCD16bpp37TextureMapper_A4_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x186>
 8014954:	f8db 200c 	ldr.w	r2, [fp, #12]
 8014958:	42ba      	cmp	r2, r7
 801495a:	dd22      	ble.n	80149a2 <_ZN8touchgfx8LCD16bpp37TextureMapper_A4_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x186>
 801495c:	9a02      	ldr	r2, [sp, #8]
 801495e:	fb07 6602 	mla	r6, r7, r2, r6
 8014962:	0872      	lsrs	r2, r6, #1
 8014964:	9f03      	ldr	r7, [sp, #12]
 8014966:	5cba      	ldrb	r2, [r7, r2]
 8014968:	07f6      	lsls	r6, r6, #31
 801496a:	bf54      	ite	pl
 801496c:	f002 020f 	andpl.w	r2, r2, #15
 8014970:	1112      	asrmi	r2, r2, #4
 8014972:	eb02 1202 	add.w	r2, r2, r2, lsl #4
 8014976:	b2d2      	uxtb	r2, r2
 8014978:	2aff      	cmp	r2, #255	@ 0xff
 801497a:	d118      	bne.n	80149ae <_ZN8touchgfx8LCD16bpp37TextureMapper_A4_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x192>
 801497c:	f8d8 2000 	ldr.w	r2, [r8]
 8014980:	f06f 0601 	mvn.w	r6, #1
 8014984:	fb06 f705 	mul.w	r7, r6, r5
 8014988:	f2a6 76fe 	subw	r6, r6, #2046	@ 0x7fe
 801498c:	ea06 2c12 	and.w	ip, r6, r2, lsr #8
 8014990:	0956      	lsrs	r6, r2, #5
 8014992:	f406 66fc 	and.w	r6, r6, #2016	@ 0x7e0
 8014996:	ea4c 0606 	orr.w	r6, ip, r6
 801499a:	f3c2 02c4 	ubfx	r2, r2, #3, #5
 801499e:	4316      	orrs	r6, r2
 80149a0:	53e6      	strh	r6, [r4, r7]
 80149a2:	9a13      	ldr	r2, [sp, #76]	@ 0x4c
 80149a4:	4410      	add	r0, r2
 80149a6:	9a14      	ldr	r2, [sp, #80]	@ 0x50
 80149a8:	3d01      	subs	r5, #1
 80149aa:	4411      	add	r1, r2
 80149ac:	e787      	b.n	80148be <_ZN8touchgfx8LCD16bpp37TextureMapper_A4_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xa2>
 80149ae:	2a00      	cmp	r2, #0
 80149b0:	d0f7      	beq.n	80149a2 <_ZN8touchgfx8LCD16bpp37TextureMapper_A4_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x186>
 80149b2:	f06f 0601 	mvn.w	r6, #1
 80149b6:	436e      	muls	r6, r5
 80149b8:	f8d8 c000 	ldr.w	ip, [r8]
 80149bc:	f834 e006 	ldrh.w	lr, [r4, r6]
 80149c0:	9604      	str	r6, [sp, #16]
 80149c2:	fa1f f982 	uxth.w	r9, r2
 80149c6:	ea4f 272e 	mov.w	r7, lr, asr #8
 80149ca:	f3cc 4607 	ubfx	r6, ip, #16, #8
 80149ce:	43d2      	mvns	r2, r2
 80149d0:	b2d2      	uxtb	r2, r2
 80149d2:	fb16 f609 	smulbb	r6, r6, r9
 80149d6:	f007 07f8 	and.w	r7, r7, #248	@ 0xf8
 80149da:	fb07 6702 	mla	r7, r7, r2, r6
 80149de:	f3cc 2a07 	ubfx	sl, ip, #8, #8
 80149e2:	ea4f 06ee 	mov.w	r6, lr, asr #3
 80149e6:	fa5f fc8c 	uxtb.w	ip, ip
 80149ea:	ea4f 0ece 	mov.w	lr, lr, lsl #3
 80149ee:	fa5f fe8e 	uxtb.w	lr, lr
 80149f2:	fb1c fc09 	smulbb	ip, ip, r9
 80149f6:	fb0e cc02 	mla	ip, lr, r2, ip
 80149fa:	b2bf      	uxth	r7, r7
 80149fc:	fb1a fa09 	smulbb	sl, sl, r9
 8014a00:	fa1f fc8c 	uxth.w	ip, ip
 8014a04:	f006 06fc 	and.w	r6, r6, #252	@ 0xfc
 8014a08:	fb06 a602 	mla	r6, r6, r2, sl
 8014a0c:	1c7a      	adds	r2, r7, #1
 8014a0e:	f10c 0a01 	add.w	sl, ip, #1
 8014a12:	eb02 2717 	add.w	r7, r2, r7, lsr #8
 8014a16:	eb0a 2a1c 	add.w	sl, sl, ip, lsr #8
 8014a1a:	b2b6      	uxth	r6, r6
 8014a1c:	f3ca 2ac4 	ubfx	sl, sl, #11, #5
 8014a20:	f407 4778 	and.w	r7, r7, #63488	@ 0xf800
 8014a24:	ea4a 0707 	orr.w	r7, sl, r7
 8014a28:	f106 0a01 	add.w	sl, r6, #1
 8014a2c:	eb0a 2a16 	add.w	sl, sl, r6, lsr #8
 8014a30:	ea4f 1a5a 	mov.w	sl, sl, lsr #5
 8014a34:	f40a 6afc 	and.w	sl, sl, #2016	@ 0x7e0
 8014a38:	9a04      	ldr	r2, [sp, #16]
 8014a3a:	ea47 070a 	orr.w	r7, r7, sl
 8014a3e:	52a7      	strh	r7, [r4, r2]
 8014a40:	e7af      	b.n	80149a2 <_ZN8touchgfx8LCD16bpp37TextureMapper_A4_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x186>
 8014a42:	f04f 0e00 	mov.w	lr, #0
 8014a46:	eba3 020e 	sub.w	r2, r3, lr
 8014a4a:	2a00      	cmp	r2, #0
 8014a4c:	f77f af3a 	ble.w	80148c4 <_ZN8touchgfx8LCD16bpp37TextureMapper_A4_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xa8>
 8014a50:	9e02      	ldr	r6, [sp, #8]
 8014a52:	1402      	asrs	r2, r0, #16
 8014a54:	140d      	asrs	r5, r1, #16
 8014a56:	fb06 2505 	mla	r5, r6, r5, r2
 8014a5a:	086a      	lsrs	r2, r5, #1
 8014a5c:	9e03      	ldr	r6, [sp, #12]
 8014a5e:	5cb2      	ldrb	r2, [r6, r2]
 8014a60:	07ed      	lsls	r5, r5, #31
 8014a62:	bf54      	ite	pl
 8014a64:	f002 020f 	andpl.w	r2, r2, #15
 8014a68:	1112      	asrmi	r2, r2, #4
 8014a6a:	eb02 1202 	add.w	r2, r2, r2, lsl #4
 8014a6e:	b2d2      	uxtb	r2, r2
 8014a70:	2aff      	cmp	r2, #255	@ 0xff
 8014a72:	d115      	bne.n	8014aa0 <_ZN8touchgfx8LCD16bpp37TextureMapper_A4_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x284>
 8014a74:	f8d8 5000 	ldr.w	r5, [r8]
 8014a78:	f6a2 02ff 	subw	r2, r2, #2303	@ 0x8ff
 8014a7c:	ea02 2615 	and.w	r6, r2, r5, lsr #8
 8014a80:	096a      	lsrs	r2, r5, #5
 8014a82:	f402 62fc 	and.w	r2, r2, #2016	@ 0x7e0
 8014a86:	4332      	orrs	r2, r6
 8014a88:	f3c5 05c4 	ubfx	r5, r5, #3, #5
 8014a8c:	432a      	orrs	r2, r5
 8014a8e:	f824 201e 	strh.w	r2, [r4, lr, lsl #1]
 8014a92:	9a13      	ldr	r2, [sp, #76]	@ 0x4c
 8014a94:	4410      	add	r0, r2
 8014a96:	9a14      	ldr	r2, [sp, #80]	@ 0x50
 8014a98:	f10e 0e01 	add.w	lr, lr, #1
 8014a9c:	4411      	add	r1, r2
 8014a9e:	e7d2      	b.n	8014a46 <_ZN8touchgfx8LCD16bpp37TextureMapper_A4_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x22a>
 8014aa0:	2a00      	cmp	r2, #0
 8014aa2:	d0f6      	beq.n	8014a92 <_ZN8touchgfx8LCD16bpp37TextureMapper_A4_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x276>
 8014aa4:	f8d8 7000 	ldr.w	r7, [r8]
 8014aa8:	f834 c01e 	ldrh.w	ip, [r4, lr, lsl #1]
 8014aac:	fa1f f982 	uxth.w	r9, r2
 8014ab0:	ea4f 262c 	mov.w	r6, ip, asr #8
 8014ab4:	f3c7 4507 	ubfx	r5, r7, #16, #8
 8014ab8:	43d2      	mvns	r2, r2
 8014aba:	b2d2      	uxtb	r2, r2
 8014abc:	fb15 f509 	smulbb	r5, r5, r9
 8014ac0:	f006 06f8 	and.w	r6, r6, #248	@ 0xf8
 8014ac4:	fb06 5602 	mla	r6, r6, r2, r5
 8014ac8:	f3c7 2a07 	ubfx	sl, r7, #8, #8
 8014acc:	ea4f 05ec 	mov.w	r5, ip, asr #3
 8014ad0:	b2ff      	uxtb	r7, r7
 8014ad2:	ea4f 0ccc 	mov.w	ip, ip, lsl #3
 8014ad6:	fa5f fc8c 	uxtb.w	ip, ip
 8014ada:	fb17 f709 	smulbb	r7, r7, r9
 8014ade:	fb0c 7702 	mla	r7, ip, r2, r7
 8014ae2:	b2b6      	uxth	r6, r6
 8014ae4:	fb1a fa09 	smulbb	sl, sl, r9
 8014ae8:	b2bf      	uxth	r7, r7
 8014aea:	f005 05fc 	and.w	r5, r5, #252	@ 0xfc
 8014aee:	fb05 a502 	mla	r5, r5, r2, sl
 8014af2:	1c72      	adds	r2, r6, #1
 8014af4:	f107 0a01 	add.w	sl, r7, #1
 8014af8:	eb02 2616 	add.w	r6, r2, r6, lsr #8
 8014afc:	eb0a 2a17 	add.w	sl, sl, r7, lsr #8
 8014b00:	b2ad      	uxth	r5, r5
 8014b02:	f3ca 2ac4 	ubfx	sl, sl, #11, #5
 8014b06:	f406 4678 	and.w	r6, r6, #63488	@ 0xf800
 8014b0a:	ea4a 0606 	orr.w	r6, sl, r6
 8014b0e:	f105 0a01 	add.w	sl, r5, #1
 8014b12:	eb0a 2a15 	add.w	sl, sl, r5, lsr #8
 8014b16:	ea4f 1a5a 	mov.w	sl, sl, lsr #5
 8014b1a:	f40a 6afc 	and.w	sl, sl, #2016	@ 0x7e0
 8014b1e:	ea46 060a 	orr.w	r6, r6, sl
 8014b22:	f824 601e 	strh.w	r6, [r4, lr, lsl #1]
 8014b26:	e7b4      	b.n	8014a92 <_ZN8touchgfx8LCD16bpp37TextureMapper_A4_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x276>
 8014b28:	b007      	add	sp, #28
 8014b2a:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 8014b2e:	bf00      	nop
 8014b30:	20002c64 	.word	0x20002c64

08014b34 <_ZN8touchgfx8LCD16bpp19DecompressorRGB_QOID1Ev>:
 8014b34:	4770      	bx	lr

08014b36 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW9D1Ev>:
 8014b36:	4770      	bx	lr

08014b38 <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLED1Ev>:
 8014b38:	4770      	bx	lr

08014b3a <_ZN8touchgfx8LCD16bpp17DecompressorL8_L4D1Ev>:
 8014b3a:	4770      	bx	lr

08014b3c <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGAD1Ev>:
 8014b3c:	4770      	bx	lr

08014b3e <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GAD1Ev>:
 8014b3e:	4770      	bx	lr

08014b40 <_ZN8touchgfx8LCD16bpp37TextureMapper_A4_NearestNeighbor_NoGAD1Ev>:
 8014b40:	4770      	bx	lr

08014b42 <_ZN8touchgfx8LCD16bpp35TextureMapper_A4_NearestNeighbor_GAD1Ev>:
 8014b42:	4770      	bx	lr

08014b44 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGAD1Ev>:
 8014b44:	4770      	bx	lr

08014b46 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GAD1Ev>:
 8014b46:	4770      	bx	lr

08014b48 <_ZN8touchgfx8LCD16bpp53TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_NoGAD1Ev>:
 8014b48:	4770      	bx	lr

08014b4a <_ZN8touchgfx8LCD16bpp51TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_GAD1Ev>:
 8014b4a:	4770      	bx	lr

08014b4c <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGAD1Ev>:
 8014b4c:	4770      	bx	lr

08014b4e <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GAD1Ev>:
 8014b4e:	4770      	bx	lr

08014b50 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGAD1Ev>:
 8014b50:	4770      	bx	lr

08014b52 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GAD1Ev>:
 8014b52:	4770      	bx	lr

08014b54 <_ZN8touchgfx8LCD16bpp48TextureMapper_RGB565_Opaque_NearestNeighbor_NoGAD1Ev>:
 8014b54:	4770      	bx	lr

08014b56 <_ZN8touchgfx8LCD16bpp46TextureMapper_RGB565_Opaque_NearestNeighbor_GAD1Ev>:
 8014b56:	4770      	bx	lr

08014b58 <_ZN8touchgfx8LCD16bpp51TextureMapper_RGB565_NonOpaque_NearestNeighbor_NoGAD1Ev>:
 8014b58:	4770      	bx	lr

08014b5a <_ZN8touchgfx8LCD16bpp49TextureMapper_RGB565_NonOpaque_NearestNeighbor_GAD1Ev>:
 8014b5a:	4770      	bx	lr

08014b5c <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGAD1Ev>:
 8014b5c:	4770      	bx	lr

08014b5e <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GAD1Ev>:
 8014b5e:	4770      	bx	lr

08014b60 <_ZN8touchgfx8LCD16bpp56TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGAD1Ev>:
 8014b60:	4770      	bx	lr

08014b62 <_ZN8touchgfx8LCD16bpp54TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_GAD1Ev>:
 8014b62:	4770      	bx	lr

08014b64 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGAD1Ev>:
 8014b64:	4770      	bx	lr

08014b66 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GAD1Ev>:
 8014b66:	4770      	bx	lr

08014b68 <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB888_Opaque_NearestNeighbor_NoGAD1Ev>:
 8014b68:	4770      	bx	lr

08014b6a <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB888_Opaque_NearestNeighbor_GAD1Ev>:
 8014b6a:	4770      	bx	lr

08014b6c <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGAD1Ev>:
 8014b6c:	4770      	bx	lr

08014b6e <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GAD1Ev>:
 8014b6e:	4770      	bx	lr

08014b70 <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB565_Opaque_NearestNeighbor_NoGAD1Ev>:
 8014b70:	4770      	bx	lr

08014b72 <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB565_Opaque_NearestNeighbor_GAD1Ev>:
 8014b72:	4770      	bx	lr

08014b74 <_ZN8touchgfx8LCD16bpp29copyFrameBufferRegionToMemoryERKNS_4RectES3_t>:
 8014b74:	e92d 47f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
 8014b78:	b088      	sub	sp, #32
 8014b7a:	ac08      	add	r4, sp, #32
 8014b7c:	4606      	mov	r6, r0
 8014b7e:	f824 3d0c 	strh.w	r3, [r4, #-12]!
 8014b82:	4620      	mov	r0, r4
 8014b84:	4688      	mov	r8, r1
 8014b86:	4691      	mov	r9, r2
 8014b88:	f7fd fc32 	bl	80123f0 <_ZNK8touchgfx6Bitmap7getDataEv>
 8014b8c:	6833      	ldr	r3, [r6, #0]
 8014b8e:	4605      	mov	r5, r0
 8014b90:	4620      	mov	r0, r4
 8014b92:	699f      	ldr	r7, [r3, #24]
 8014b94:	f7fd fb3a 	bl	801220c <_ZNK8touchgfx6Bitmap8getWidthEv>
 8014b98:	4682      	mov	sl, r0
 8014b9a:	4620      	mov	r0, r4
 8014b9c:	f7fd fb6a 	bl	8012274 <_ZNK8touchgfx6Bitmap9getHeightEv>
 8014ba0:	9500      	str	r5, [sp, #0]
 8014ba2:	e9cd a001 	strd	sl, r0, [sp, #4]
 8014ba6:	464b      	mov	r3, r9
 8014ba8:	a806      	add	r0, sp, #24
 8014baa:	4642      	mov	r2, r8
 8014bac:	4631      	mov	r1, r6
 8014bae:	47b8      	blx	r7
 8014bb0:	4628      	mov	r0, r5
 8014bb2:	b008      	add	sp, #32
 8014bb4:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}

08014bb8 <_ZN8touchgfx8LCD16bpp29copyAreaFromTFTToClientBufferERKNS_4RectE>:
 8014bb8:	e92d 47ff 	stmdb	sp!, {r0, r1, r2, r3, r4, r5, r6, r7, r8, r9, sl, lr}
 8014bbc:	2300      	movs	r3, #0
 8014bbe:	9300      	str	r3, [sp, #0]
 8014bc0:	4b3d      	ldr	r3, [pc, #244]	@ (8014cb8 <_ZN8touchgfx8LCD16bpp29copyAreaFromTFTToClientBufferERKNS_4RectE+0x100>)
 8014bc2:	781b      	ldrb	r3, [r3, #0]
 8014bc4:	2b00      	cmp	r3, #0
 8014bc6:	d137      	bne.n	8014c38 <_ZN8touchgfx8LCD16bpp29copyAreaFromTFTToClientBufferERKNS_4RectE+0x80>
 8014bc8:	4a3c      	ldr	r2, [pc, #240]	@ (8014cbc <_ZN8touchgfx8LCD16bpp29copyAreaFromTFTToClientBufferERKNS_4RectE+0x104>)
 8014bca:	f9b2 2000 	ldrsh.w	r2, [r2]
 8014bce:	f8ad 2004 	strh.w	r2, [sp, #4]
 8014bd2:	2b00      	cmp	r3, #0
 8014bd4:	d132      	bne.n	8014c3c <_ZN8touchgfx8LCD16bpp29copyAreaFromTFTToClientBufferERKNS_4RectE+0x84>
 8014bd6:	4b3a      	ldr	r3, [pc, #232]	@ (8014cc0 <_ZN8touchgfx8LCD16bpp29copyAreaFromTFTToClientBufferERKNS_4RectE+0x108>)
 8014bd8:	f9b3 3000 	ldrsh.w	r3, [r3]
 8014bdc:	6808      	ldr	r0, [r1, #0]
 8014bde:	6849      	ldr	r1, [r1, #4]
 8014be0:	f8ad 3006 	strh.w	r3, [sp, #6]
 8014be4:	ac02      	add	r4, sp, #8
 8014be6:	ab02      	add	r3, sp, #8
 8014be8:	c303      	stmia	r3!, {r0, r1}
 8014bea:	4669      	mov	r1, sp
 8014bec:	4620      	mov	r0, r4
 8014bee:	f7fa f929 	bl	800ee44 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectERKS1_>
 8014bf2:	4668      	mov	r0, sp
 8014bf4:	f7fa f8fe 	bl	800edf4 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectE>
 8014bf8:	f8bd 3008 	ldrh.w	r3, [sp, #8]
 8014bfc:	f8bd 2000 	ldrh.w	r2, [sp]
 8014c00:	4d30      	ldr	r5, [pc, #192]	@ (8014cc4 <_ZN8touchgfx8LCD16bpp29copyAreaFromTFTToClientBufferERKNS_4RectE+0x10c>)
 8014c02:	4413      	add	r3, r2
 8014c04:	f8ad 3008 	strh.w	r3, [sp, #8]
 8014c08:	f8bd 2002 	ldrh.w	r2, [sp, #2]
 8014c0c:	f8bd 300a 	ldrh.w	r3, [sp, #10]
 8014c10:	6828      	ldr	r0, [r5, #0]
 8014c12:	4413      	add	r3, r2
 8014c14:	f8ad 300a 	strh.w	r3, [sp, #10]
 8014c18:	6803      	ldr	r3, [r0, #0]
 8014c1a:	6b9b      	ldr	r3, [r3, #56]	@ 0x38
 8014c1c:	4798      	blx	r3
 8014c1e:	f010 0f01 	tst.w	r0, #1
 8014c22:	462f      	mov	r7, r5
 8014c24:	d00c      	beq.n	8014c40 <_ZN8touchgfx8LCD16bpp29copyAreaFromTFTToClientBufferERKNS_4RectE+0x88>
 8014c26:	6828      	ldr	r0, [r5, #0]
 8014c28:	6803      	ldr	r3, [r0, #0]
 8014c2a:	e894 0006 	ldmia.w	r4, {r1, r2}
 8014c2e:	6ddb      	ldr	r3, [r3, #92]	@ 0x5c
 8014c30:	4798      	blx	r3
 8014c32:	b004      	add	sp, #16
 8014c34:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
 8014c38:	4a21      	ldr	r2, [pc, #132]	@ (8014cc0 <_ZN8touchgfx8LCD16bpp29copyAreaFromTFTToClientBufferERKNS_4RectE+0x108>)
 8014c3a:	e7c6      	b.n	8014bca <_ZN8touchgfx8LCD16bpp29copyAreaFromTFTToClientBufferERKNS_4RectE+0x12>
 8014c3c:	4b1f      	ldr	r3, [pc, #124]	@ (8014cbc <_ZN8touchgfx8LCD16bpp29copyAreaFromTFTToClientBufferERKNS_4RectE+0x104>)
 8014c3e:	e7cb      	b.n	8014bd8 <_ZN8touchgfx8LCD16bpp29copyAreaFromTFTToClientBufferERKNS_4RectE+0x20>
 8014c40:	6838      	ldr	r0, [r7, #0]
 8014c42:	f9bd 800c 	ldrsh.w	r8, [sp, #12]
 8014c46:	6803      	ldr	r3, [r0, #0]
 8014c48:	f9bd 500e 	ldrsh.w	r5, [sp, #14]
 8014c4c:	6b1b      	ldr	r3, [r3, #48]	@ 0x30
 8014c4e:	4798      	blx	r3
 8014c50:	f9bd 3008 	ldrsh.w	r3, [sp, #8]
 8014c54:	f8bd 200a 	ldrh.w	r2, [sp, #10]
 8014c58:	f8bd 6004 	ldrh.w	r6, [sp, #4]
 8014c5c:	fb16 3602 	smlabb	r6, r6, r2, r3
 8014c60:	eb00 0646 	add.w	r6, r0, r6, lsl #1
 8014c64:	6838      	ldr	r0, [r7, #0]
 8014c66:	6803      	ldr	r3, [r0, #0]
 8014c68:	6a9b      	ldr	r3, [r3, #40]	@ 0x28
 8014c6a:	4798      	blx	r3
 8014c6c:	4a13      	ldr	r2, [pc, #76]	@ (8014cbc <_ZN8touchgfx8LCD16bpp29copyAreaFromTFTToClientBufferERKNS_4RectE+0x104>)
 8014c6e:	f9bd 400a 	ldrsh.w	r4, [sp, #10]
 8014c72:	8813      	ldrh	r3, [r2, #0]
 8014c74:	f9bd 1008 	ldrsh.w	r1, [sp, #8]
 8014c78:	fb03 1404 	mla	r4, r3, r4, r1
 8014c7c:	eb00 0444 	add.w	r4, r0, r4, lsl #1
 8014c80:	435d      	muls	r5, r3
 8014c82:	eb04 0545 	add.w	r5, r4, r5, lsl #1
 8014c86:	ea4f 0848 	mov.w	r8, r8, lsl #1
 8014c8a:	4691      	mov	r9, r2
 8014c8c:	6838      	ldr	r0, [r7, #0]
 8014c8e:	42ac      	cmp	r4, r5
 8014c90:	6803      	ldr	r3, [r0, #0]
 8014c92:	d20e      	bcs.n	8014cb2 <_ZN8touchgfx8LCD16bpp29copyAreaFromTFTToClientBufferERKNS_4RectE+0xfa>
 8014c94:	f8d3 a034 	ldr.w	sl, [r3, #52]	@ 0x34
 8014c98:	4632      	mov	r2, r6
 8014c9a:	4643      	mov	r3, r8
 8014c9c:	4621      	mov	r1, r4
 8014c9e:	47d0      	blx	sl
 8014ca0:	f8b9 3000 	ldrh.w	r3, [r9]
 8014ca4:	eb04 0443 	add.w	r4, r4, r3, lsl #1
 8014ca8:	f9bd 3004 	ldrsh.w	r3, [sp, #4]
 8014cac:	eb06 0643 	add.w	r6, r6, r3, lsl #1
 8014cb0:	e7ec      	b.n	8014c8c <_ZN8touchgfx8LCD16bpp29copyAreaFromTFTToClientBufferERKNS_4RectE+0xd4>
 8014cb2:	6adb      	ldr	r3, [r3, #44]	@ 0x2c
 8014cb4:	4798      	blx	r3
 8014cb6:	e7bc      	b.n	8014c32 <_ZN8touchgfx8LCD16bpp29copyAreaFromTFTToClientBufferERKNS_4RectE+0x7a>
 8014cb8:	20002c54 	.word	0x20002c54
 8014cbc:	20002c56 	.word	0x20002c56
 8014cc0:	20002c58 	.word	0x20002c58
 8014cc4:	20002c5c 	.word	0x20002c5c

08014cc8 <_ZN8touchgfx8LCD16bpp8blitCopyEPKtRKNS_4RectES5_hb>:
 8014cc8:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8014ccc:	b08b      	sub	sp, #44	@ 0x2c
 8014cce:	460f      	mov	r7, r1
 8014cd0:	f89d b050 	ldrb.w	fp, [sp, #80]	@ 0x50
 8014cd4:	f89d 4054 	ldrb.w	r4, [sp, #84]	@ 0x54
 8014cd8:	4616      	mov	r6, r2
 8014cda:	f1bb 0f00 	cmp.w	fp, #0
 8014cde:	d04a      	beq.n	8014d76 <_ZN8touchgfx8LCD16bpp8blitCopyEPKtRKNS_4RectES5_hb+0xae>
 8014ce0:	6810      	ldr	r0, [r2, #0]
 8014ce2:	6851      	ldr	r1, [r2, #4]
 8014ce4:	ad06      	add	r5, sp, #24
 8014ce6:	c503      	stmia	r5!, {r0, r1}
 8014ce8:	6818      	ldr	r0, [r3, #0]
 8014cea:	6859      	ldr	r1, [r3, #4]
 8014cec:	ad08      	add	r5, sp, #32
 8014cee:	c503      	stmia	r5!, {r0, r1}
 8014cf0:	a806      	add	r0, sp, #24
 8014cf2:	f7fa f87f 	bl	800edf4 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectE>
 8014cf6:	4631      	mov	r1, r6
 8014cf8:	a808      	add	r0, sp, #32
 8014cfa:	f7fa f8a3 	bl	800ee44 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectERKS1_>
 8014cfe:	f9bd 2020 	ldrsh.w	r2, [sp, #32]
 8014d02:	f9bd 3022 	ldrsh.w	r3, [sp, #34]	@ 0x22
 8014d06:	f8bd 601c 	ldrh.w	r6, [sp, #28]
 8014d0a:	f9bd 8024 	ldrsh.w	r8, [sp, #36]	@ 0x24
 8014d0e:	f9bd 5026 	ldrsh.w	r5, [sp, #38]	@ 0x26
 8014d12:	fb16 2103 	smlabb	r1, r6, r3, r2
 8014d16:	eb07 0641 	add.w	r6, r7, r1, lsl #1
 8014d1a:	f8bd 1018 	ldrh.w	r1, [sp, #24]
 8014d1e:	4f5f      	ldr	r7, [pc, #380]	@ (8014e9c <_ZN8touchgfx8LCD16bpp8blitCopyEPKtRKNS_4RectES5_hb+0x1d4>)
 8014d20:	440a      	add	r2, r1
 8014d22:	f8ad 2020 	strh.w	r2, [sp, #32]
 8014d26:	f8bd 201a 	ldrh.w	r2, [sp, #26]
 8014d2a:	6838      	ldr	r0, [r7, #0]
 8014d2c:	4413      	add	r3, r2
 8014d2e:	f8ad 3022 	strh.w	r3, [sp, #34]	@ 0x22
 8014d32:	6803      	ldr	r3, [r0, #0]
 8014d34:	6b9b      	ldr	r3, [r3, #56]	@ 0x38
 8014d36:	4798      	blx	r3
 8014d38:	f1bb 0fff 	cmp.w	fp, #255	@ 0xff
 8014d3c:	46b9      	mov	r9, r7
 8014d3e:	d11d      	bne.n	8014d7c <_ZN8touchgfx8LCD16bpp8blitCopyEPKtRKNS_4RectES5_hb+0xb4>
 8014d40:	b9fc      	cbnz	r4, 8014d82 <_ZN8touchgfx8LCD16bpp8blitCopyEPKtRKNS_4RectES5_hb+0xba>
 8014d42:	f010 0f01 	tst.w	r0, #1
 8014d46:	d01c      	beq.n	8014d82 <_ZN8touchgfx8LCD16bpp8blitCopyEPKtRKNS_4RectES5_hb+0xba>
 8014d48:	f8d9 0000 	ldr.w	r0, [r9]
 8014d4c:	f8bd 3022 	ldrh.w	r3, [sp, #34]	@ 0x22
 8014d50:	6801      	ldr	r1, [r0, #0]
 8014d52:	f8cd b00c 	str.w	fp, [sp, #12]
 8014d56:	2700      	movs	r7, #0
 8014d58:	e9cd 4704 	strd	r4, r7, [sp, #16]
 8014d5c:	f8bd 401c 	ldrh.w	r4, [sp, #28]
 8014d60:	9402      	str	r4, [sp, #8]
 8014d62:	b2ad      	uxth	r5, r5
 8014d64:	fa1f f488 	uxth.w	r4, r8
 8014d68:	9501      	str	r5, [sp, #4]
 8014d6a:	9400      	str	r4, [sp, #0]
 8014d6c:	6c4c      	ldr	r4, [r1, #68]	@ 0x44
 8014d6e:	f8bd 2020 	ldrh.w	r2, [sp, #32]
 8014d72:	4631      	mov	r1, r6
 8014d74:	47a0      	blx	r4
 8014d76:	b00b      	add	sp, #44	@ 0x2c
 8014d78:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 8014d7c:	f010 0f04 	tst.w	r0, #4
 8014d80:	e7e1      	b.n	8014d46 <_ZN8touchgfx8LCD16bpp8blitCopyEPKtRKNS_4RectES5_hb+0x7e>
 8014d82:	f8d9 0000 	ldr.w	r0, [r9]
 8014d86:	6803      	ldr	r3, [r0, #0]
 8014d88:	6a9b      	ldr	r3, [r3, #40]	@ 0x28
 8014d8a:	4798      	blx	r3
 8014d8c:	4b44      	ldr	r3, [pc, #272]	@ (8014ea0 <_ZN8touchgfx8LCD16bpp8blitCopyEPKtRKNS_4RectES5_hb+0x1d8>)
 8014d8e:	f9bd 4022 	ldrsh.w	r4, [sp, #34]	@ 0x22
 8014d92:	881a      	ldrh	r2, [r3, #0]
 8014d94:	f9bd 1020 	ldrsh.w	r1, [sp, #32]
 8014d98:	f1bb 0fff 	cmp.w	fp, #255	@ 0xff
 8014d9c:	fb02 1404 	mla	r4, r2, r4, r1
 8014da0:	eb00 0444 	add.w	r4, r0, r4, lsl #1
 8014da4:	469a      	mov	sl, r3
 8014da6:	fb05 f502 	mul.w	r5, r5, r2
 8014daa:	ea4f 0748 	mov.w	r7, r8, lsl #1
 8014dae:	d059      	beq.n	8014e64 <_ZN8touchgfx8LCD16bpp8blitCopyEPKtRKNS_4RectES5_hb+0x19c>
 8014db0:	f1cb 09ff 	rsb	r9, fp, #255	@ 0xff
 8014db4:	eb04 0545 	add.w	r5, r4, r5, lsl #1
 8014db8:	fa1f f28b 	uxth.w	r2, fp
 8014dbc:	fa1f f989 	uxth.w	r9, r9
 8014dc0:	469e      	mov	lr, r3
 8014dc2:	42ac      	cmp	r4, r5
 8014dc4:	d264      	bcs.n	8014e90 <_ZN8touchgfx8LCD16bpp8blitCopyEPKtRKNS_4RectES5_hb+0x1c8>
 8014dc6:	eb04 0a07 	add.w	sl, r4, r7
 8014dca:	4554      	cmp	r4, sl
 8014dcc:	d23d      	bcs.n	8014e4a <_ZN8touchgfx8LCD16bpp8blitCopyEPKtRKNS_4RectES5_hb+0x182>
 8014dce:	8821      	ldrh	r1, [r4, #0]
 8014dd0:	f836 3b02 	ldrh.w	r3, [r6], #2
 8014dd4:	1208      	asrs	r0, r1, #8
 8014dd6:	ea4f 2c23 	mov.w	ip, r3, asr #8
 8014dda:	f000 00f8 	and.w	r0, r0, #248	@ 0xf8
 8014dde:	fb10 f009 	smulbb	r0, r0, r9
 8014de2:	ea4f 0be1 	mov.w	fp, r1, asr #3
 8014de6:	f00c 0cf8 	and.w	ip, ip, #248	@ 0xf8
 8014dea:	00c9      	lsls	r1, r1, #3
 8014dec:	fb0c 0c02 	mla	ip, ip, r2, r0
 8014df0:	f00b 0bfc 	and.w	fp, fp, #252	@ 0xfc
 8014df4:	10d8      	asrs	r0, r3, #3
 8014df6:	b2c9      	uxtb	r1, r1
 8014df8:	00db      	lsls	r3, r3, #3
 8014dfa:	fa1f fc8c 	uxth.w	ip, ip
 8014dfe:	fb1b fb09 	smulbb	fp, fp, r9
 8014e02:	f000 00fc 	and.w	r0, r0, #252	@ 0xfc
 8014e06:	b2db      	uxtb	r3, r3
 8014e08:	fb11 f109 	smulbb	r1, r1, r9
 8014e0c:	fb00 b002 	mla	r0, r0, r2, fp
 8014e10:	fb03 1302 	mla	r3, r3, r2, r1
 8014e14:	f10c 0b01 	add.w	fp, ip, #1
 8014e18:	b29b      	uxth	r3, r3
 8014e1a:	eb0b 2c1c 	add.w	ip, fp, ip, lsr #8
 8014e1e:	b280      	uxth	r0, r0
 8014e20:	f40c 4b78 	and.w	fp, ip, #63488	@ 0xf800
 8014e24:	f103 0c01 	add.w	ip, r3, #1
 8014e28:	eb0c 2c13 	add.w	ip, ip, r3, lsr #8
 8014e2c:	1c43      	adds	r3, r0, #1
 8014e2e:	eb03 2010 	add.w	r0, r3, r0, lsr #8
 8014e32:	f3cc 2cc4 	ubfx	ip, ip, #11, #5
 8014e36:	0940      	lsrs	r0, r0, #5
 8014e38:	ea4c 0c0b 	orr.w	ip, ip, fp
 8014e3c:	f400 60fc 	and.w	r0, r0, #2016	@ 0x7e0
 8014e40:	ea4c 0c00 	orr.w	ip, ip, r0
 8014e44:	f824 cb02 	strh.w	ip, [r4], #2
 8014e48:	e7bf      	b.n	8014dca <_ZN8touchgfx8LCD16bpp8blitCopyEPKtRKNS_4RectES5_hb+0x102>
 8014e4a:	f8be 3000 	ldrh.w	r3, [lr]
 8014e4e:	eba3 0308 	sub.w	r3, r3, r8
 8014e52:	eb04 0443 	add.w	r4, r4, r3, lsl #1
 8014e56:	f9bd 301c 	ldrsh.w	r3, [sp, #28]
 8014e5a:	eba3 0308 	sub.w	r3, r3, r8
 8014e5e:	eb06 0643 	add.w	r6, r6, r3, lsl #1
 8014e62:	e7ae      	b.n	8014dc2 <_ZN8touchgfx8LCD16bpp8blitCopyEPKtRKNS_4RectES5_hb+0xfa>
 8014e64:	eb04 0545 	add.w	r5, r4, r5, lsl #1
 8014e68:	f8d9 0000 	ldr.w	r0, [r9]
 8014e6c:	42ac      	cmp	r4, r5
 8014e6e:	6803      	ldr	r3, [r0, #0]
 8014e70:	d20e      	bcs.n	8014e90 <_ZN8touchgfx8LCD16bpp8blitCopyEPKtRKNS_4RectES5_hb+0x1c8>
 8014e72:	f8d3 8034 	ldr.w	r8, [r3, #52]	@ 0x34
 8014e76:	4632      	mov	r2, r6
 8014e78:	463b      	mov	r3, r7
 8014e7a:	4621      	mov	r1, r4
 8014e7c:	47c0      	blx	r8
 8014e7e:	f8ba 3000 	ldrh.w	r3, [sl]
 8014e82:	eb04 0443 	add.w	r4, r4, r3, lsl #1
 8014e86:	f9bd 301c 	ldrsh.w	r3, [sp, #28]
 8014e8a:	eb06 0643 	add.w	r6, r6, r3, lsl #1
 8014e8e:	e7eb      	b.n	8014e68 <_ZN8touchgfx8LCD16bpp8blitCopyEPKtRKNS_4RectES5_hb+0x1a0>
 8014e90:	4b02      	ldr	r3, [pc, #8]	@ (8014e9c <_ZN8touchgfx8LCD16bpp8blitCopyEPKtRKNS_4RectES5_hb+0x1d4>)
 8014e92:	6818      	ldr	r0, [r3, #0]
 8014e94:	6803      	ldr	r3, [r0, #0]
 8014e96:	6adb      	ldr	r3, [r3, #44]	@ 0x2c
 8014e98:	4798      	blx	r3
 8014e9a:	e76c      	b.n	8014d76 <_ZN8touchgfx8LCD16bpp8blitCopyEPKtRKNS_4RectES5_hb+0xae>
 8014e9c:	20002c5c 	.word	0x20002c5c
 8014ea0:	20002c56 	.word	0x20002c56

08014ea4 <_ZN8touchgfx8LCD16bpp17DecompressorL8_L4D0Ev>:
 8014ea4:	b510      	push	{r4, lr}
 8014ea6:	2104      	movs	r1, #4
 8014ea8:	4604      	mov	r4, r0
 8014eaa:	f00b fc82 	bl	80207b2 <_ZdlPvj>
 8014eae:	4620      	mov	r0, r4
 8014eb0:	bd10      	pop	{r4, pc}

08014eb2 <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLED0Ev>:
 8014eb2:	b510      	push	{r4, lr}
 8014eb4:	2104      	movs	r1, #4
 8014eb6:	4604      	mov	r4, r0
 8014eb8:	f00b fc7b 	bl	80207b2 <_ZdlPvj>
 8014ebc:	4620      	mov	r0, r4
 8014ebe:	bd10      	pop	{r4, pc}

08014ec0 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW9D0Ev>:
 8014ec0:	b510      	push	{r4, lr}
 8014ec2:	f640 0144 	movw	r1, #2116	@ 0x844
 8014ec6:	4604      	mov	r4, r0
 8014ec8:	f00b fc73 	bl	80207b2 <_ZdlPvj>
 8014ecc:	4620      	mov	r0, r4
 8014ece:	bd10      	pop	{r4, pc}

08014ed0 <_ZN8touchgfx8LCD16bpp19DecompressorRGB_QOID0Ev>:
 8014ed0:	b510      	push	{r4, lr}
 8014ed2:	f44f 7182 	mov.w	r1, #260	@ 0x104
 8014ed6:	4604      	mov	r4, r0
 8014ed8:	f00b fc6b 	bl	80207b2 <_ZdlPvj>
 8014edc:	4620      	mov	r0, r4
 8014ede:	bd10      	pop	{r4, pc}

08014ee0 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGAD0Ev>:
 8014ee0:	b510      	push	{r4, lr}
 8014ee2:	2104      	movs	r1, #4
 8014ee4:	4604      	mov	r4, r0
 8014ee6:	f00b fc64 	bl	80207b2 <_ZdlPvj>
 8014eea:	4620      	mov	r0, r4
 8014eec:	bd10      	pop	{r4, pc}

08014eee <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GAD0Ev>:
 8014eee:	b510      	push	{r4, lr}
 8014ef0:	2104      	movs	r1, #4
 8014ef2:	4604      	mov	r4, r0
 8014ef4:	f00b fc5d 	bl	80207b2 <_ZdlPvj>
 8014ef8:	4620      	mov	r0, r4
 8014efa:	bd10      	pop	{r4, pc}

08014efc <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB565_Opaque_NearestNeighbor_NoGAD0Ev>:
 8014efc:	b510      	push	{r4, lr}
 8014efe:	2104      	movs	r1, #4
 8014f00:	4604      	mov	r4, r0
 8014f02:	f00b fc56 	bl	80207b2 <_ZdlPvj>
 8014f06:	4620      	mov	r0, r4
 8014f08:	bd10      	pop	{r4, pc}

08014f0a <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB565_Opaque_NearestNeighbor_GAD0Ev>:
 8014f0a:	b510      	push	{r4, lr}
 8014f0c:	2104      	movs	r1, #4
 8014f0e:	4604      	mov	r4, r0
 8014f10:	f00b fc4f 	bl	80207b2 <_ZdlPvj>
 8014f14:	4620      	mov	r0, r4
 8014f16:	bd10      	pop	{r4, pc}

08014f18 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGAD0Ev>:
 8014f18:	b510      	push	{r4, lr}
 8014f1a:	2104      	movs	r1, #4
 8014f1c:	4604      	mov	r4, r0
 8014f1e:	f00b fc48 	bl	80207b2 <_ZdlPvj>
 8014f22:	4620      	mov	r0, r4
 8014f24:	bd10      	pop	{r4, pc}

08014f26 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GAD0Ev>:
 8014f26:	b510      	push	{r4, lr}
 8014f28:	2104      	movs	r1, #4
 8014f2a:	4604      	mov	r4, r0
 8014f2c:	f00b fc41 	bl	80207b2 <_ZdlPvj>
 8014f30:	4620      	mov	r0, r4
 8014f32:	bd10      	pop	{r4, pc}

08014f34 <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB888_Opaque_NearestNeighbor_NoGAD0Ev>:
 8014f34:	b510      	push	{r4, lr}
 8014f36:	2104      	movs	r1, #4
 8014f38:	4604      	mov	r4, r0
 8014f3a:	f00b fc3a 	bl	80207b2 <_ZdlPvj>
 8014f3e:	4620      	mov	r0, r4
 8014f40:	bd10      	pop	{r4, pc}

08014f42 <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB888_Opaque_NearestNeighbor_GAD0Ev>:
 8014f42:	b510      	push	{r4, lr}
 8014f44:	2104      	movs	r1, #4
 8014f46:	4604      	mov	r4, r0
 8014f48:	f00b fc33 	bl	80207b2 <_ZdlPvj>
 8014f4c:	4620      	mov	r0, r4
 8014f4e:	bd10      	pop	{r4, pc}

08014f50 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGAD0Ev>:
 8014f50:	b510      	push	{r4, lr}
 8014f52:	2104      	movs	r1, #4
 8014f54:	4604      	mov	r4, r0
 8014f56:	f00b fc2c 	bl	80207b2 <_ZdlPvj>
 8014f5a:	4620      	mov	r0, r4
 8014f5c:	bd10      	pop	{r4, pc}

08014f5e <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GAD0Ev>:
 8014f5e:	b510      	push	{r4, lr}
 8014f60:	2104      	movs	r1, #4
 8014f62:	4604      	mov	r4, r0
 8014f64:	f00b fc25 	bl	80207b2 <_ZdlPvj>
 8014f68:	4620      	mov	r0, r4
 8014f6a:	bd10      	pop	{r4, pc}

08014f6c <_ZN8touchgfx8LCD16bpp56TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGAD0Ev>:
 8014f6c:	b510      	push	{r4, lr}
 8014f6e:	2104      	movs	r1, #4
 8014f70:	4604      	mov	r4, r0
 8014f72:	f00b fc1e 	bl	80207b2 <_ZdlPvj>
 8014f76:	4620      	mov	r0, r4
 8014f78:	bd10      	pop	{r4, pc}

08014f7a <_ZN8touchgfx8LCD16bpp54TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_GAD0Ev>:
 8014f7a:	b510      	push	{r4, lr}
 8014f7c:	2104      	movs	r1, #4
 8014f7e:	4604      	mov	r4, r0
 8014f80:	f00b fc17 	bl	80207b2 <_ZdlPvj>
 8014f84:	4620      	mov	r0, r4
 8014f86:	bd10      	pop	{r4, pc}

08014f88 <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGAD0Ev>:
 8014f88:	b510      	push	{r4, lr}
 8014f8a:	2104      	movs	r1, #4
 8014f8c:	4604      	mov	r4, r0
 8014f8e:	f00b fc10 	bl	80207b2 <_ZdlPvj>
 8014f92:	4620      	mov	r0, r4
 8014f94:	bd10      	pop	{r4, pc}

08014f96 <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GAD0Ev>:
 8014f96:	b510      	push	{r4, lr}
 8014f98:	2104      	movs	r1, #4
 8014f9a:	4604      	mov	r4, r0
 8014f9c:	f00b fc09 	bl	80207b2 <_ZdlPvj>
 8014fa0:	4620      	mov	r0, r4
 8014fa2:	bd10      	pop	{r4, pc}

08014fa4 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGAD0Ev>:
 8014fa4:	b510      	push	{r4, lr}
 8014fa6:	2104      	movs	r1, #4
 8014fa8:	4604      	mov	r4, r0
 8014faa:	f00b fc02 	bl	80207b2 <_ZdlPvj>
 8014fae:	4620      	mov	r0, r4
 8014fb0:	bd10      	pop	{r4, pc}

08014fb2 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GAD0Ev>:
 8014fb2:	b510      	push	{r4, lr}
 8014fb4:	2104      	movs	r1, #4
 8014fb6:	4604      	mov	r4, r0
 8014fb8:	f00b fbfb 	bl	80207b2 <_ZdlPvj>
 8014fbc:	4620      	mov	r0, r4
 8014fbe:	bd10      	pop	{r4, pc}

08014fc0 <_ZN8touchgfx8LCD16bpp48TextureMapper_RGB565_Opaque_NearestNeighbor_NoGAD0Ev>:
 8014fc0:	b510      	push	{r4, lr}
 8014fc2:	2104      	movs	r1, #4
 8014fc4:	4604      	mov	r4, r0
 8014fc6:	f00b fbf4 	bl	80207b2 <_ZdlPvj>
 8014fca:	4620      	mov	r0, r4
 8014fcc:	bd10      	pop	{r4, pc}

08014fce <_ZN8touchgfx8LCD16bpp46TextureMapper_RGB565_Opaque_NearestNeighbor_GAD0Ev>:
 8014fce:	b510      	push	{r4, lr}
 8014fd0:	2104      	movs	r1, #4
 8014fd2:	4604      	mov	r4, r0
 8014fd4:	f00b fbed 	bl	80207b2 <_ZdlPvj>
 8014fd8:	4620      	mov	r0, r4
 8014fda:	bd10      	pop	{r4, pc}

08014fdc <_ZN8touchgfx8LCD16bpp51TextureMapper_RGB565_NonOpaque_NearestNeighbor_NoGAD0Ev>:
 8014fdc:	b510      	push	{r4, lr}
 8014fde:	2104      	movs	r1, #4
 8014fe0:	4604      	mov	r4, r0
 8014fe2:	f00b fbe6 	bl	80207b2 <_ZdlPvj>
 8014fe6:	4620      	mov	r0, r4
 8014fe8:	bd10      	pop	{r4, pc}

08014fea <_ZN8touchgfx8LCD16bpp49TextureMapper_RGB565_NonOpaque_NearestNeighbor_GAD0Ev>:
 8014fea:	b510      	push	{r4, lr}
 8014fec:	2104      	movs	r1, #4
 8014fee:	4604      	mov	r4, r0
 8014ff0:	f00b fbdf 	bl	80207b2 <_ZdlPvj>
 8014ff4:	4620      	mov	r0, r4
 8014ff6:	bd10      	pop	{r4, pc}

08014ff8 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGAD0Ev>:
 8014ff8:	b510      	push	{r4, lr}
 8014ffa:	2104      	movs	r1, #4
 8014ffc:	4604      	mov	r4, r0
 8014ffe:	f00b fbd8 	bl	80207b2 <_ZdlPvj>
 8015002:	4620      	mov	r0, r4
 8015004:	bd10      	pop	{r4, pc}

08015006 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GAD0Ev>:
 8015006:	b510      	push	{r4, lr}
 8015008:	2104      	movs	r1, #4
 801500a:	4604      	mov	r4, r0
 801500c:	f00b fbd1 	bl	80207b2 <_ZdlPvj>
 8015010:	4620      	mov	r0, r4
 8015012:	bd10      	pop	{r4, pc}

08015014 <_ZN8touchgfx8LCD16bpp53TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_NoGAD0Ev>:
 8015014:	b510      	push	{r4, lr}
 8015016:	2104      	movs	r1, #4
 8015018:	4604      	mov	r4, r0
 801501a:	f00b fbca 	bl	80207b2 <_ZdlPvj>
 801501e:	4620      	mov	r0, r4
 8015020:	bd10      	pop	{r4, pc}

08015022 <_ZN8touchgfx8LCD16bpp51TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_GAD0Ev>:
 8015022:	b510      	push	{r4, lr}
 8015024:	2104      	movs	r1, #4
 8015026:	4604      	mov	r4, r0
 8015028:	f00b fbc3 	bl	80207b2 <_ZdlPvj>
 801502c:	4620      	mov	r0, r4
 801502e:	bd10      	pop	{r4, pc}

08015030 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGAD0Ev>:
 8015030:	b510      	push	{r4, lr}
 8015032:	2104      	movs	r1, #4
 8015034:	4604      	mov	r4, r0
 8015036:	f00b fbbc 	bl	80207b2 <_ZdlPvj>
 801503a:	4620      	mov	r0, r4
 801503c:	bd10      	pop	{r4, pc}

0801503e <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GAD0Ev>:
 801503e:	b510      	push	{r4, lr}
 8015040:	2104      	movs	r1, #4
 8015042:	4604      	mov	r4, r0
 8015044:	f00b fbb5 	bl	80207b2 <_ZdlPvj>
 8015048:	4620      	mov	r0, r4
 801504a:	bd10      	pop	{r4, pc}

0801504c <_ZN8touchgfx8LCD16bpp37TextureMapper_A4_NearestNeighbor_NoGAD0Ev>:
 801504c:	b510      	push	{r4, lr}
 801504e:	2104      	movs	r1, #4
 8015050:	4604      	mov	r4, r0
 8015052:	f00b fbae 	bl	80207b2 <_ZdlPvj>
 8015056:	4620      	mov	r0, r4
 8015058:	bd10      	pop	{r4, pc}

0801505a <_ZN8touchgfx8LCD16bpp35TextureMapper_A4_NearestNeighbor_GAD0Ev>:
 801505a:	b510      	push	{r4, lr}
 801505c:	2104      	movs	r1, #4
 801505e:	4604      	mov	r4, r0
 8015060:	f00b fba7 	bl	80207b2 <_ZdlPvj>
 8015064:	4620      	mov	r0, r4
 8015066:	bd10      	pop	{r4, pc}

08015068 <_ZN8touchgfx8LCD16bpp19DecompressorRGB_QOI16blitCopyARGB8888EPKhRKNS_4RectES6_h>:
 8015068:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 801506c:	b08f      	sub	sp, #60	@ 0x3c
 801506e:	4616      	mov	r6, r2
 8015070:	f89d 2060 	ldrb.w	r2, [sp, #96]	@ 0x60
 8015074:	9205      	str	r2, [sp, #20]
 8015076:	4682      	mov	sl, r0
 8015078:	460d      	mov	r5, r1
 801507a:	2a00      	cmp	r2, #0
 801507c:	f000 82b7 	beq.w	80155ee <_ZN8touchgfx8LCD16bpp19DecompressorRGB_QOI16blitCopyARGB8888EPKhRKNS_4RectES6_h+0x586>
 8015080:	6830      	ldr	r0, [r6, #0]
 8015082:	6871      	ldr	r1, [r6, #4]
 8015084:	ac0a      	add	r4, sp, #40	@ 0x28
 8015086:	c403      	stmia	r4!, {r0, r1}
 8015088:	6818      	ldr	r0, [r3, #0]
 801508a:	6859      	ldr	r1, [r3, #4]
 801508c:	ac0c      	add	r4, sp, #48	@ 0x30
 801508e:	c403      	stmia	r4!, {r0, r1}
 8015090:	a80a      	add	r0, sp, #40	@ 0x28
 8015092:	f7f9 feaf 	bl	800edf4 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectE>
 8015096:	4631      	mov	r1, r6
 8015098:	a80c      	add	r0, sp, #48	@ 0x30
 801509a:	f7f9 fed3 	bl	800ee44 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectERKS1_>
 801509e:	f9bd 202c 	ldrsh.w	r2, [sp, #44]	@ 0x2c
 80150a2:	f5b2 6f80 	cmp.w	r2, #1024	@ 0x400
 80150a6:	bfd7      	itett	le
 80150a8:	b293      	uxthle	r3, r2
 80150aa:	2301      	movgt	r3, #1
 80150ac:	f44f 6180 	movle.w	r1, #1024	@ 0x400
 80150b0:	fb91 f3f3 	sdivle	r3, r1, r3
 80150b4:	9300      	str	r3, [sp, #0]
 80150b6:	f105 0308 	add.w	r3, r5, #8
 80150ba:	9900      	ldr	r1, [sp, #0]
 80150bc:	9306      	str	r3, [sp, #24]
 80150be:	f9bd 302e 	ldrsh.w	r3, [sp, #46]	@ 0x2e
 80150c2:	440b      	add	r3, r1
 80150c4:	3b01      	subs	r3, #1
 80150c6:	fb93 f3f1 	sdiv	r3, r3, r1
 80150ca:	9906      	ldr	r1, [sp, #24]
 80150cc:	3b01      	subs	r3, #1
 80150ce:	b29b      	uxth	r3, r3
 80150d0:	eb01 0383 	add.w	r3, r1, r3, lsl #2
 80150d4:	9307      	str	r3, [sp, #28]
 80150d6:	9900      	ldr	r1, [sp, #0]
 80150d8:	f9bd 3032 	ldrsh.w	r3, [sp, #50]	@ 0x32
 80150dc:	fb93 f0f1 	sdiv	r0, r3, r1
 80150e0:	b284      	uxth	r4, r0
 80150e2:	9402      	str	r4, [sp, #8]
 80150e4:	9d02      	ldr	r5, [sp, #8]
 80150e6:	9c00      	ldr	r4, [sp, #0]
 80150e8:	f8bd 1030 	ldrh.w	r1, [sp, #48]	@ 0x30
 80150ec:	fb05 3414 	mls	r4, r5, r4, r3
 80150f0:	fb14 f402 	smulbb	r4, r4, r2
 80150f4:	440c      	add	r4, r1
 80150f6:	b2a4      	uxth	r4, r4
 80150f8:	2d00      	cmp	r5, #0
 80150fa:	d06c      	beq.n	80151d6 <_ZN8touchgfx8LCD16bpp19DecompressorRGB_QOI16blitCopyARGB8888EPKhRKNS_4RectES6_h+0x16e>
 80150fc:	1e6a      	subs	r2, r5, #1
 80150fe:	9806      	ldr	r0, [sp, #24]
 8015100:	f850 6022 	ldr.w	r6, [r0, r2, lsl #2]
 8015104:	9a07      	ldr	r2, [sp, #28]
 8015106:	ba36      	rev	r6, r6
 8015108:	4416      	add	r6, r2
 801510a:	f8bd 2028 	ldrh.w	r2, [sp, #40]	@ 0x28
 801510e:	f9bd 5036 	ldrsh.w	r5, [sp, #54]	@ 0x36
 8015112:	f8df 9334 	ldr.w	r9, [pc, #820]	@ 8015448 <_ZN8touchgfx8LCD16bpp19DecompressorRGB_QOI16blitCopyARGB8888EPKhRKNS_4RectES6_h+0x3e0>
 8015116:	4411      	add	r1, r2
 8015118:	f8bd 202a 	ldrh.w	r2, [sp, #42]	@ 0x2a
 801511c:	f8ad 1030 	strh.w	r1, [sp, #48]	@ 0x30
 8015120:	4413      	add	r3, r2
 8015122:	f8ad 3032 	strh.w	r3, [sp, #50]	@ 0x32
 8015126:	f9bd 3034 	ldrsh.w	r3, [sp, #52]	@ 0x34
 801512a:	9301      	str	r3, [sp, #4]
 801512c:	4bc4      	ldr	r3, [pc, #784]	@ (8015440 <_ZN8touchgfx8LCD16bpp19DecompressorRGB_QOI16blitCopyARGB8888EPKhRKNS_4RectES6_h+0x3d8>)
 801512e:	6818      	ldr	r0, [r3, #0]
 8015130:	6803      	ldr	r3, [r0, #0]
 8015132:	6a9b      	ldr	r3, [r3, #40]	@ 0x28
 8015134:	4798      	blx	r3
 8015136:	4bc3      	ldr	r3, [pc, #780]	@ (8015444 <_ZN8touchgfx8LCD16bpp19DecompressorRGB_QOI16blitCopyARGB8888EPKhRKNS_4RectES6_h+0x3dc>)
 8015138:	f9bd 2030 	ldrsh.w	r2, [sp, #48]	@ 0x30
 801513c:	881b      	ldrh	r3, [r3, #0]
 801513e:	f9bd 8032 	ldrsh.w	r8, [sp, #50]	@ 0x32
 8015142:	fb03 2808 	mla	r8, r3, r8, r2
 8015146:	eb00 0848 	add.w	r8, r0, r8, lsl #1
 801514a:	436b      	muls	r3, r5
 801514c:	eb08 0343 	add.w	r3, r8, r3, lsl #1
 8015150:	9309      	str	r3, [sp, #36]	@ 0x24
 8015152:	2500      	movs	r5, #0
 8015154:	f9bd 302c 	ldrsh.w	r3, [sp, #44]	@ 0x2c
 8015158:	fb94 f3f3 	sdiv	r3, r4, r3
 801515c:	9304      	str	r3, [sp, #16]
 801515e:	f10a 0304 	add.w	r3, sl, #4
 8015162:	f44f 7280 	mov.w	r2, #256	@ 0x100
 8015166:	4629      	mov	r1, r5
 8015168:	4618      	mov	r0, r3
 801516a:	9308      	str	r3, [sp, #32]
 801516c:	f00b fd57 	bl	8020c1e <memset>
 8015170:	9b09      	ldr	r3, [sp, #36]	@ 0x24
 8015172:	4543      	cmp	r3, r8
 8015174:	f240 8236 	bls.w	80155e4 <_ZN8touchgfx8LCD16bpp19DecompressorRGB_QOI16blitCopyARGB8888EPKhRKNS_4RectES6_h+0x57c>
 8015178:	2203      	movs	r2, #3
 801517a:	2107      	movs	r1, #7
 801517c:	200b      	movs	r0, #11
 801517e:	2c00      	cmp	r4, #0
 8015180:	f000 8131 	beq.w	80153e6 <_ZN8touchgfx8LCD16bpp19DecompressorRGB_QOI16blitCopyARGB8888EPKhRKNS_4RectES6_h+0x37e>
 8015184:	7833      	ldrb	r3, [r6, #0]
 8015186:	b2db      	uxtb	r3, r3
 8015188:	2bfe      	cmp	r3, #254	@ 0xfe
 801518a:	d126      	bne.n	80151da <_ZN8touchgfx8LCD16bpp19DecompressorRGB_QOI16blitCopyARGB8888EPKhRKNS_4RectES6_h+0x172>
 801518c:	f896 e001 	ldrb.w	lr, [r6, #1]
 8015190:	f896 c002 	ldrb.w	ip, [r6, #2]
 8015194:	f896 b003 	ldrb.w	fp, [r6, #3]
 8015198:	fa5f fe8e 	uxtb.w	lr, lr
 801519c:	fa5f fc8c 	uxtb.w	ip, ip
 80151a0:	f36e 0507 	bfi	r5, lr, #0, #8
 80151a4:	f36c 250f 	bfi	r5, ip, #8, #8
 80151a8:	fa5f fb8b 	uxtb.w	fp, fp
 80151ac:	eb0c 0c8c 	add.w	ip, ip, ip, lsl #2
 80151b0:	f36b 4517 	bfi	r5, fp, #16, #8
 80151b4:	fb12 cc0b 	smlabb	ip, r2, fp, ip
 80151b8:	0e2b      	lsrs	r3, r5, #24
 80151ba:	fb11 cc0e 	smlabb	ip, r1, lr, ip
 80151be:	fb10 c303 	smlabb	r3, r0, r3, ip
 80151c2:	f003 033f 	and.w	r3, r3, #63	@ 0x3f
 80151c6:	eb0a 0383 	add.w	r3, sl, r3, lsl #2
 80151ca:	3c01      	subs	r4, #1
 80151cc:	1d37      	adds	r7, r6, #4
 80151ce:	b2a4      	uxth	r4, r4
 80151d0:	605d      	str	r5, [r3, #4]
 80151d2:	463e      	mov	r6, r7
 80151d4:	e7d3      	b.n	801517e <_ZN8touchgfx8LCD16bpp19DecompressorRGB_QOI16blitCopyARGB8888EPKhRKNS_4RectES6_h+0x116>
 80151d6:	9e07      	ldr	r6, [sp, #28]
 80151d8:	e797      	b.n	801510a <_ZN8touchgfx8LCD16bpp19DecompressorRGB_QOI16blitCopyARGB8888EPKhRKNS_4RectES6_h+0xa2>
 80151da:	2bff      	cmp	r3, #255	@ 0xff
 80151dc:	d127      	bne.n	801522e <_ZN8touchgfx8LCD16bpp19DecompressorRGB_QOI16blitCopyARGB8888EPKhRKNS_4RectES6_h+0x1c6>
 80151de:	f896 c001 	ldrb.w	ip, [r6, #1]
 80151e2:	78b3      	ldrb	r3, [r6, #2]
 80151e4:	f896 e003 	ldrb.w	lr, [r6, #3]
 80151e8:	f896 b004 	ldrb.w	fp, [r6, #4]
 80151ec:	fa5f fc8c 	uxtb.w	ip, ip
 80151f0:	b2db      	uxtb	r3, r3
 80151f2:	f36c 0507 	bfi	r5, ip, #0, #8
 80151f6:	f363 250f 	bfi	r5, r3, #8, #8
 80151fa:	fa5f fe8e 	uxtb.w	lr, lr
 80151fe:	eb03 0383 	add.w	r3, r3, r3, lsl #2
 8015202:	fb12 330e 	smlabb	r3, r2, lr, r3
 8015206:	fa5f fb8b 	uxtb.w	fp, fp
 801520a:	f36e 4517 	bfi	r5, lr, #16, #8
 801520e:	fb11 330c 	smlabb	r3, r1, ip, r3
 8015212:	f36b 651f 	bfi	r5, fp, #24, #8
 8015216:	fb10 3b0b 	smlabb	fp, r0, fp, r3
 801521a:	f00b 0b3f 	and.w	fp, fp, #63	@ 0x3f
 801521e:	eb0a 0b8b 	add.w	fp, sl, fp, lsl #2
 8015222:	3c01      	subs	r4, #1
 8015224:	1d77      	adds	r7, r6, #5
 8015226:	b2a4      	uxth	r4, r4
 8015228:	f8cb 5004 	str.w	r5, [fp, #4]
 801522c:	e7d1      	b.n	80151d2 <_ZN8touchgfx8LCD16bpp19DecompressorRGB_QOI16blitCopyARGB8888EPKhRKNS_4RectES6_h+0x16a>
 801522e:	ea5f 1ca3 	movs.w	ip, r3, asr #6
 8015232:	f106 0701 	add.w	r7, r6, #1
 8015236:	d107      	bne.n	8015248 <_ZN8touchgfx8LCD16bpp19DecompressorRGB_QOI16blitCopyARGB8888EPKhRKNS_4RectES6_h+0x1e0>
 8015238:	f003 033f 	and.w	r3, r3, #63	@ 0x3f
 801523c:	eb0a 0383 	add.w	r3, sl, r3, lsl #2
 8015240:	685d      	ldr	r5, [r3, #4]
 8015242:	3c01      	subs	r4, #1
 8015244:	b2a4      	uxth	r4, r4
 8015246:	e7c4      	b.n	80151d2 <_ZN8touchgfx8LCD16bpp19DecompressorRGB_QOI16blitCopyARGB8888EPKhRKNS_4RectES6_h+0x16a>
 8015248:	f1bc 0f01 	cmp.w	ip, #1
 801524c:	d12c      	bne.n	80152a8 <_ZN8touchgfx8LCD16bpp19DecompressorRGB_QOI16blitCopyARGB8888EPKhRKNS_4RectES6_h+0x240>
 801524e:	f003 0e03 	and.w	lr, r3, #3
 8015252:	f1ae 0e02 	sub.w	lr, lr, #2
 8015256:	eb05 0ece 	add.w	lr, r5, lr, lsl #3
 801525a:	fa5f fe8e 	uxtb.w	lr, lr
 801525e:	f003 0c0c 	and.w	ip, r3, #12
 8015262:	f36e 0507 	bfi	r5, lr, #0, #8
 8015266:	f1ac 0c08 	sub.w	ip, ip, #8
 801526a:	eb0c 2c15 	add.w	ip, ip, r5, lsr #8
 801526e:	f00c 0cff 	and.w	ip, ip, #255	@ 0xff
 8015272:	f36c 250f 	bfi	r5, ip, #8, #8
 8015276:	f3c3 1301 	ubfx	r3, r3, #4, #2
 801527a:	f3c5 4607 	ubfx	r6, r5, #16, #8
 801527e:	3b02      	subs	r3, #2
 8015280:	eb06 03c3 	add.w	r3, r6, r3, lsl #3
 8015284:	b2db      	uxtb	r3, r3
 8015286:	eb0c 0c8c 	add.w	ip, ip, ip, lsl #2
 801528a:	f363 4517 	bfi	r5, r3, #16, #8
 801528e:	fb12 cc03 	smlabb	ip, r2, r3, ip
 8015292:	0e2e      	lsrs	r6, r5, #24
 8015294:	fb11 cc0e 	smlabb	ip, r1, lr, ip
 8015298:	fb10 c606 	smlabb	r6, r0, r6, ip
 801529c:	f006 063f 	and.w	r6, r6, #63	@ 0x3f
 80152a0:	eb0a 0686 	add.w	r6, sl, r6, lsl #2
 80152a4:	6075      	str	r5, [r6, #4]
 80152a6:	e7cc      	b.n	8015242 <_ZN8touchgfx8LCD16bpp19DecompressorRGB_QOI16blitCopyARGB8888EPKhRKNS_4RectES6_h+0x1da>
 80152a8:	f1bc 0f02 	cmp.w	ip, #2
 80152ac:	f003 033f 	and.w	r3, r3, #63	@ 0x3f
 80152b0:	d12a      	bne.n	8015308 <_ZN8touchgfx8LCD16bpp19DecompressorRGB_QOI16blitCopyARGB8888EPKhRKNS_4RectES6_h+0x2a0>
 80152b2:	1cb7      	adds	r7, r6, #2
 80152b4:	7876      	ldrb	r6, [r6, #1]
 80152b6:	b2f6      	uxtb	r6, r6
 80152b8:	f006 0c0f 	and.w	ip, r6, #15
 80152bc:	3b20      	subs	r3, #32
 80152be:	f1ac 0c08 	sub.w	ip, ip, #8
 80152c2:	449c      	add	ip, r3
 80152c4:	eb05 0ccc 	add.w	ip, r5, ip, lsl #3
 80152c8:	fa5f fc8c 	uxtb.w	ip, ip
 80152cc:	f36c 0507 	bfi	r5, ip, #0, #8
 80152d0:	f3c5 2e07 	ubfx	lr, r5, #8, #8
 80152d4:	eb0e 0e83 	add.w	lr, lr, r3, lsl #2
 80152d8:	fa5f fe8e 	uxtb.w	lr, lr
 80152dc:	1136      	asrs	r6, r6, #4
 80152de:	f36e 250f 	bfi	r5, lr, #8, #8
 80152e2:	3e08      	subs	r6, #8
 80152e4:	4433      	add	r3, r6
 80152e6:	f3c5 4607 	ubfx	r6, r5, #16, #8
 80152ea:	eb06 03c3 	add.w	r3, r6, r3, lsl #3
 80152ee:	b2db      	uxtb	r3, r3
 80152f0:	eb0e 0e8e 	add.w	lr, lr, lr, lsl #2
 80152f4:	f363 4517 	bfi	r5, r3, #16, #8
 80152f8:	fb12 ee03 	smlabb	lr, r2, r3, lr
 80152fc:	0e2e      	lsrs	r6, r5, #24
 80152fe:	fb11 ee0c 	smlabb	lr, r1, ip, lr
 8015302:	fb10 e606 	smlabb	r6, r0, r6, lr
 8015306:	e7c9      	b.n	801529c <_ZN8touchgfx8LCD16bpp19DecompressorRGB_QOI16blitCopyARGB8888EPKhRKNS_4RectES6_h+0x234>
 8015308:	1c5e      	adds	r6, r3, #1
 801530a:	42a6      	cmp	r6, r4
 801530c:	dd4e      	ble.n	80153ac <_ZN8touchgfx8LCD16bpp19DecompressorRGB_QOI16blitCopyARGB8888EPKhRKNS_4RectES6_h+0x344>
 801530e:	1b36      	subs	r6, r6, r4
 8015310:	2e00      	cmp	r6, #0
 8015312:	dc4e      	bgt.n	80153b2 <_ZN8touchgfx8LCD16bpp19DecompressorRGB_QOI16blitCopyARGB8888EPKhRKNS_4RectES6_h+0x34a>
 8015314:	f8dd b004 	ldr.w	fp, [sp, #4]
 8015318:	2400      	movs	r4, #0
 801531a:	f1bb 0f00 	cmp.w	fp, #0
 801531e:	f340 8122 	ble.w	8015566 <_ZN8touchgfx8LCD16bpp19DecompressorRGB_QOI16blitCopyARGB8888EPKhRKNS_4RectES6_h+0x4fe>
 8015322:	1c7b      	adds	r3, r7, #1
 8015324:	9303      	str	r3, [sp, #12]
 8015326:	783b      	ldrb	r3, [r7, #0]
 8015328:	b2db      	uxtb	r3, r3
 801532a:	2bfe      	cmp	r3, #254	@ 0xfe
 801532c:	d160      	bne.n	80153f0 <_ZN8touchgfx8LCD16bpp19DecompressorRGB_QOI16blitCopyARGB8888EPKhRKNS_4RectES6_h+0x388>
 801532e:	7879      	ldrb	r1, [r7, #1]
 8015330:	78ba      	ldrb	r2, [r7, #2]
 8015332:	78f8      	ldrb	r0, [r7, #3]
 8015334:	b2c9      	uxtb	r1, r1
 8015336:	f361 0507 	bfi	r5, r1, #0, #8
 801533a:	b2d2      	uxtb	r2, r2
 801533c:	1d3b      	adds	r3, r7, #4
 801533e:	f362 250f 	bfi	r5, r2, #8, #8
 8015342:	b2c0      	uxtb	r0, r0
 8015344:	9303      	str	r3, [sp, #12]
 8015346:	eb02 0282 	add.w	r2, r2, r2, lsl #2
 801534a:	2303      	movs	r3, #3
 801534c:	fb13 2200 	smlabb	r2, r3, r0, r2
 8015350:	f360 4517 	bfi	r5, r0, #16, #8
 8015354:	2307      	movs	r3, #7
 8015356:	fb13 2101 	smlabb	r1, r3, r1, r2
 801535a:	0e2e      	lsrs	r6, r5, #24
 801535c:	230b      	movs	r3, #11
 801535e:	fb13 1306 	smlabb	r3, r3, r6, r1
 8015362:	f003 033f 	and.w	r3, r3, #63	@ 0x3f
 8015366:	eb0a 0383 	add.w	r3, sl, r3, lsl #2
 801536a:	605d      	str	r5, [r3, #4]
 801536c:	2601      	movs	r6, #1
 801536e:	4637      	mov	r7, r6
 8015370:	0e2b      	lsrs	r3, r5, #24
 8015372:	ebab 0b07 	sub.w	fp, fp, r7
 8015376:	eba6 0607 	sub.w	r6, r6, r7
 801537a:	f040 80d3 	bne.w	8015524 <_ZN8touchgfx8LCD16bpp19DecompressorRGB_QOI16blitCopyARGB8888EPKhRKNS_4RectES6_h+0x4bc>
 801537e:	b18c      	cbz	r4, 80153a4 <_ZN8touchgfx8LCD16bpp19DecompressorRGB_QOI16blitCopyARGB8888EPKhRKNS_4RectES6_h+0x33c>
 8015380:	4648      	mov	r0, r9
 8015382:	00a1      	lsls	r1, r4, #2
 8015384:	f7f5 fd69 	bl	800ae5a <_ZN8touchgfx5paint9flushLineEPmi>
 8015388:	9b05      	ldr	r3, [sp, #20]
 801538a:	4622      	mov	r2, r4
 801538c:	4649      	mov	r1, r9
 801538e:	4640      	mov	r0, r8
 8015390:	f7f5 fe16 	bl	800afc0 <_ZN8touchgfx5paint6rgb56516lineFromARGB8888EPtPKmjh>
 8015394:	4b2c      	ldr	r3, [pc, #176]	@ (8015448 <_ZN8touchgfx8LCD16bpp19DecompressorRGB_QOI16blitCopyARGB8888EPKhRKNS_4RectES6_h+0x3e0>)
 8015396:	4a2d      	ldr	r2, [pc, #180]	@ (801544c <_ZN8touchgfx8LCD16bpp19DecompressorRGB_QOI16blitCopyARGB8888EPKhRKNS_4RectES6_h+0x3e4>)
 8015398:	4599      	cmp	r9, r3
 801539a:	bf08      	it	eq
 801539c:	4613      	moveq	r3, r2
 801539e:	eb08 0844 	add.w	r8, r8, r4, lsl #1
 80153a2:	4699      	mov	r9, r3
 80153a4:	eb08 0847 	add.w	r8, r8, r7, lsl #1
 80153a8:	2400      	movs	r4, #0
 80153aa:	e0da      	b.n	8015562 <_ZN8touchgfx8LCD16bpp19DecompressorRGB_QOI16blitCopyARGB8888EPKhRKNS_4RectES6_h+0x4fa>
 80153ac:	1ba6      	subs	r6, r4, r6
 80153ae:	b2b4      	uxth	r4, r6
 80153b0:	e70f      	b.n	80151d2 <_ZN8touchgfx8LCD16bpp19DecompressorRGB_QOI16blitCopyARGB8888EPKhRKNS_4RectES6_h+0x16a>
 80153b2:	9b01      	ldr	r3, [sp, #4]
 80153b4:	9a01      	ldr	r2, [sp, #4]
 80153b6:	42b3      	cmp	r3, r6
 80153b8:	bfa8      	it	ge
 80153ba:	4633      	movge	r3, r6
 80153bc:	0e2c      	lsrs	r4, r5, #24
 80153be:	eba2 0b03 	sub.w	fp, r2, r3
 80153c2:	eba6 0603 	sub.w	r6, r6, r3
 80153c6:	d00b      	beq.n	80153e0 <_ZN8touchgfx8LCD16bpp19DecompressorRGB_QOI16blitCopyARGB8888EPKhRKNS_4RectES6_h+0x378>
 80153c8:	f1a9 0104 	sub.w	r1, r9, #4
 80153cc:	461a      	mov	r2, r3
 80153ce:	2a00      	cmp	r2, #0
 80153d0:	dc02      	bgt.n	80153d8 <_ZN8touchgfx8LCD16bpp19DecompressorRGB_QOI16blitCopyARGB8888EPKhRKNS_4RectES6_h+0x370>
 80153d2:	ea23 74e3 	bic.w	r4, r3, r3, asr #31
 80153d6:	e7a0      	b.n	801531a <_ZN8touchgfx8LCD16bpp19DecompressorRGB_QOI16blitCopyARGB8888EPKhRKNS_4RectES6_h+0x2b2>
 80153d8:	f841 5f04 	str.w	r5, [r1, #4]!
 80153dc:	3a01      	subs	r2, #1
 80153de:	e7f6      	b.n	80153ce <_ZN8touchgfx8LCD16bpp19DecompressorRGB_QOI16blitCopyARGB8888EPKhRKNS_4RectES6_h+0x366>
 80153e0:	eb08 0843 	add.w	r8, r8, r3, lsl #1
 80153e4:	e799      	b.n	801531a <_ZN8touchgfx8LCD16bpp19DecompressorRGB_QOI16blitCopyARGB8888EPKhRKNS_4RectES6_h+0x2b2>
 80153e6:	4637      	mov	r7, r6
 80153e8:	f8dd b004 	ldr.w	fp, [sp, #4]
 80153ec:	4626      	mov	r6, r4
 80153ee:	e794      	b.n	801531a <_ZN8touchgfx8LCD16bpp19DecompressorRGB_QOI16blitCopyARGB8888EPKhRKNS_4RectES6_h+0x2b2>
 80153f0:	2bff      	cmp	r3, #255	@ 0xff
 80153f2:	d11d      	bne.n	8015430 <_ZN8touchgfx8LCD16bpp19DecompressorRGB_QOI16blitCopyARGB8888EPKhRKNS_4RectES6_h+0x3c8>
 80153f4:	7878      	ldrb	r0, [r7, #1]
 80153f6:	78ba      	ldrb	r2, [r7, #2]
 80153f8:	78fe      	ldrb	r6, [r7, #3]
 80153fa:	1d7b      	adds	r3, r7, #5
 80153fc:	b2c0      	uxtb	r0, r0
 80153fe:	9303      	str	r3, [sp, #12]
 8015400:	793b      	ldrb	r3, [r7, #4]
 8015402:	f360 0507 	bfi	r5, r0, #0, #8
 8015406:	b2d2      	uxtb	r2, r2
 8015408:	b2d9      	uxtb	r1, r3
 801540a:	f362 250f 	bfi	r5, r2, #8, #8
 801540e:	b2f6      	uxtb	r6, r6
 8015410:	2303      	movs	r3, #3
 8015412:	eb02 0282 	add.w	r2, r2, r2, lsl #2
 8015416:	fb13 2206 	smlabb	r2, r3, r6, r2
 801541a:	2307      	movs	r3, #7
 801541c:	fb13 2000 	smlabb	r0, r3, r0, r2
 8015420:	f366 4517 	bfi	r5, r6, #16, #8
 8015424:	230b      	movs	r3, #11
 8015426:	f361 651f 	bfi	r5, r1, #24, #8
 801542a:	fb13 0301 	smlabb	r3, r3, r1, r0
 801542e:	e798      	b.n	8015362 <_ZN8touchgfx8LCD16bpp19DecompressorRGB_QOI16blitCopyARGB8888EPKhRKNS_4RectES6_h+0x2fa>
 8015430:	119e      	asrs	r6, r3, #6
 8015432:	d10d      	bne.n	8015450 <_ZN8touchgfx8LCD16bpp19DecompressorRGB_QOI16blitCopyARGB8888EPKhRKNS_4RectES6_h+0x3e8>
 8015434:	f003 033f 	and.w	r3, r3, #63	@ 0x3f
 8015438:	eb0a 0383 	add.w	r3, sl, r3, lsl #2
 801543c:	685d      	ldr	r5, [r3, #4]
 801543e:	e795      	b.n	801536c <_ZN8touchgfx8LCD16bpp19DecompressorRGB_QOI16blitCopyARGB8888EPKhRKNS_4RectES6_h+0x304>
 8015440:	20002c5c 	.word	0x20002c5c
 8015444:	20002c56 	.word	0x20002c56
 8015448:	20000120 	.word	0x20000120
 801544c:	20000220 	.word	0x20000220
 8015450:	2e01      	cmp	r6, #1
 8015452:	ea4f 6115 	mov.w	r1, r5, lsr #24
 8015456:	d12b      	bne.n	80154b0 <_ZN8touchgfx8LCD16bpp19DecompressorRGB_QOI16blitCopyARGB8888EPKhRKNS_4RectES6_h+0x448>
 8015458:	f003 0003 	and.w	r0, r3, #3
 801545c:	3802      	subs	r0, #2
 801545e:	eb05 00c0 	add.w	r0, r5, r0, lsl #3
 8015462:	b2c0      	uxtb	r0, r0
 8015464:	f003 020c 	and.w	r2, r3, #12
 8015468:	f360 0507 	bfi	r5, r0, #0, #8
 801546c:	3a08      	subs	r2, #8
 801546e:	eb02 2215 	add.w	r2, r2, r5, lsr #8
 8015472:	f002 02ff 	and.w	r2, r2, #255	@ 0xff
 8015476:	f362 250f 	bfi	r5, r2, #8, #8
 801547a:	f3c3 1301 	ubfx	r3, r3, #4, #2
 801547e:	1e9f      	subs	r7, r3, #2
 8015480:	f3c5 4307 	ubfx	r3, r5, #16, #8
 8015484:	eb03 03c7 	add.w	r3, r3, r7, lsl #3
 8015488:	b2db      	uxtb	r3, r3
 801548a:	2703      	movs	r7, #3
 801548c:	eb02 0282 	add.w	r2, r2, r2, lsl #2
 8015490:	fb17 2203 	smlabb	r2, r7, r3, r2
 8015494:	2707      	movs	r7, #7
 8015496:	f363 4517 	bfi	r5, r3, #16, #8
 801549a:	fb17 2000 	smlabb	r0, r7, r0, r2
 801549e:	230b      	movs	r3, #11
 80154a0:	fb13 0101 	smlabb	r1, r3, r1, r0
 80154a4:	f001 013f 	and.w	r1, r1, #63	@ 0x3f
 80154a8:	eb0a 0181 	add.w	r1, sl, r1, lsl #2
 80154ac:	604d      	str	r5, [r1, #4]
 80154ae:	e75e      	b.n	801536e <_ZN8touchgfx8LCD16bpp19DecompressorRGB_QOI16blitCopyARGB8888EPKhRKNS_4RectES6_h+0x306>
 80154b0:	2e02      	cmp	r6, #2
 80154b2:	f003 033f 	and.w	r3, r3, #63	@ 0x3f
 80154b6:	d12f      	bne.n	8015518 <_ZN8touchgfx8LCD16bpp19DecompressorRGB_QOI16blitCopyARGB8888EPKhRKNS_4RectES6_h+0x4b0>
 80154b8:	7878      	ldrb	r0, [r7, #1]
 80154ba:	1cba      	adds	r2, r7, #2
 80154bc:	b2c0      	uxtb	r0, r0
 80154be:	9203      	str	r2, [sp, #12]
 80154c0:	f000 020f 	and.w	r2, r0, #15
 80154c4:	3b20      	subs	r3, #32
 80154c6:	3a08      	subs	r2, #8
 80154c8:	441a      	add	r2, r3
 80154ca:	eb05 02c2 	add.w	r2, r5, r2, lsl #3
 80154ce:	b2d2      	uxtb	r2, r2
 80154d0:	f362 0507 	bfi	r5, r2, #0, #8
 80154d4:	f3c5 2607 	ubfx	r6, r5, #8, #8
 80154d8:	eb06 0683 	add.w	r6, r6, r3, lsl #2
 80154dc:	b2f6      	uxtb	r6, r6
 80154de:	1100      	asrs	r0, r0, #4
 80154e0:	f366 250f 	bfi	r5, r6, #8, #8
 80154e4:	3808      	subs	r0, #8
 80154e6:	4403      	add	r3, r0
 80154e8:	f3c5 4007 	ubfx	r0, r5, #16, #8
 80154ec:	eb00 03c3 	add.w	r3, r0, r3, lsl #3
 80154f0:	b2db      	uxtb	r3, r3
 80154f2:	2003      	movs	r0, #3
 80154f4:	eb06 0686 	add.w	r6, r6, r6, lsl #2
 80154f8:	fb10 6603 	smlabb	r6, r0, r3, r6
 80154fc:	2007      	movs	r0, #7
 80154fe:	f363 4517 	bfi	r5, r3, #16, #8
 8015502:	fb10 6202 	smlabb	r2, r0, r2, r6
 8015506:	230b      	movs	r3, #11
 8015508:	fb13 2101 	smlabb	r1, r3, r1, r2
 801550c:	f001 013f 	and.w	r1, r1, #63	@ 0x3f
 8015510:	eb0a 0181 	add.w	r1, sl, r1, lsl #2
 8015514:	604d      	str	r5, [r1, #4]
 8015516:	e729      	b.n	801536c <_ZN8touchgfx8LCD16bpp19DecompressorRGB_QOI16blitCopyARGB8888EPKhRKNS_4RectES6_h+0x304>
 8015518:	1c5e      	adds	r6, r3, #1
 801551a:	45b3      	cmp	fp, r6
 801551c:	465f      	mov	r7, fp
 801551e:	bfa8      	it	ge
 8015520:	4637      	movge	r7, r6
 8015522:	e725      	b.n	8015370 <_ZN8touchgfx8LCD16bpp19DecompressorRGB_QOI16blitCopyARGB8888EPKhRKNS_4RectES6_h+0x308>
 8015524:	193b      	adds	r3, r7, r4
 8015526:	2b40      	cmp	r3, #64	@ 0x40
 8015528:	dd13      	ble.n	8015552 <_ZN8touchgfx8LCD16bpp19DecompressorRGB_QOI16blitCopyARGB8888EPKhRKNS_4RectES6_h+0x4ea>
 801552a:	4648      	mov	r0, r9
 801552c:	00a1      	lsls	r1, r4, #2
 801552e:	f7f5 fc94 	bl	800ae5a <_ZN8touchgfx5paint9flushLineEPmi>
 8015532:	4649      	mov	r1, r9
 8015534:	9b05      	ldr	r3, [sp, #20]
 8015536:	4622      	mov	r2, r4
 8015538:	4640      	mov	r0, r8
 801553a:	f7f5 fd41 	bl	800afc0 <_ZN8touchgfx5paint6rgb56516lineFromARGB8888EPtPKmjh>
 801553e:	4b2d      	ldr	r3, [pc, #180]	@ (80155f4 <_ZN8touchgfx8LCD16bpp19DecompressorRGB_QOI16blitCopyARGB8888EPKhRKNS_4RectES6_h+0x58c>)
 8015540:	4599      	cmp	r9, r3
 8015542:	bf0c      	ite	eq
 8015544:	f8df 90b8 	ldreq.w	r9, [pc, #184]	@ 8015600 <_ZN8touchgfx8LCD16bpp19DecompressorRGB_QOI16blitCopyARGB8888EPKhRKNS_4RectES6_h+0x598>
 8015548:	f8df 90a8 	ldrne.w	r9, [pc, #168]	@ 80155f4 <_ZN8touchgfx8LCD16bpp19DecompressorRGB_QOI16blitCopyARGB8888EPKhRKNS_4RectES6_h+0x58c>
 801554c:	eb08 0844 	add.w	r8, r8, r4, lsl #1
 8015550:	2400      	movs	r4, #0
 8015552:	eb09 0284 	add.w	r2, r9, r4, lsl #2
 8015556:	463b      	mov	r3, r7
 8015558:	3b01      	subs	r3, #1
 801555a:	f842 5b04 	str.w	r5, [r2], #4
 801555e:	d1fb      	bne.n	8015558 <_ZN8touchgfx8LCD16bpp19DecompressorRGB_QOI16blitCopyARGB8888EPKhRKNS_4RectES6_h+0x4f0>
 8015560:	443c      	add	r4, r7
 8015562:	9f03      	ldr	r7, [sp, #12]
 8015564:	e6d9      	b.n	801531a <_ZN8touchgfx8LCD16bpp19DecompressorRGB_QOI16blitCopyARGB8888EPKhRKNS_4RectES6_h+0x2b2>
 8015566:	b15c      	cbz	r4, 8015580 <_ZN8touchgfx8LCD16bpp19DecompressorRGB_QOI16blitCopyARGB8888EPKhRKNS_4RectES6_h+0x518>
 8015568:	00a1      	lsls	r1, r4, #2
 801556a:	4648      	mov	r0, r9
 801556c:	f7f5 fc75 	bl	800ae5a <_ZN8touchgfx5paint9flushLineEPmi>
 8015570:	4640      	mov	r0, r8
 8015572:	9b05      	ldr	r3, [sp, #20]
 8015574:	4622      	mov	r2, r4
 8015576:	4649      	mov	r1, r9
 8015578:	f7f5 fd22 	bl	800afc0 <_ZN8touchgfx5paint6rgb56516lineFromARGB8888EPtPKmjh>
 801557c:	eb08 0844 	add.w	r8, r8, r4, lsl #1
 8015580:	4b1d      	ldr	r3, [pc, #116]	@ (80155f8 <_ZN8touchgfx8LCD16bpp19DecompressorRGB_QOI16blitCopyARGB8888EPKhRKNS_4RectES6_h+0x590>)
 8015582:	9a01      	ldr	r2, [sp, #4]
 8015584:	881b      	ldrh	r3, [r3, #0]
 8015586:	1a9b      	subs	r3, r3, r2
 8015588:	eb08 0843 	add.w	r8, r8, r3, lsl #1
 801558c:	9b04      	ldr	r3, [sp, #16]
 801558e:	3301      	adds	r3, #1
 8015590:	9304      	str	r3, [sp, #16]
 8015592:	9a04      	ldr	r2, [sp, #16]
 8015594:	9b00      	ldr	r3, [sp, #0]
 8015596:	4293      	cmp	r3, r2
 8015598:	d11d      	bne.n	80155d6 <_ZN8touchgfx8LCD16bpp19DecompressorRGB_QOI16blitCopyARGB8888EPKhRKNS_4RectES6_h+0x56e>
 801559a:	9b02      	ldr	r3, [sp, #8]
 801559c:	9a02      	ldr	r2, [sp, #8]
 801559e:	f8bd 4030 	ldrh.w	r4, [sp, #48]	@ 0x30
 80155a2:	f8bd 6028 	ldrh.w	r6, [sp, #40]	@ 0x28
 80155a6:	9808      	ldr	r0, [sp, #32]
 80155a8:	f103 0b01 	add.w	fp, r3, #1
 80155ac:	9b06      	ldr	r3, [sp, #24]
 80155ae:	f853 7022 	ldr.w	r7, [r3, r2, lsl #2]
 80155b2:	9b07      	ldr	r3, [sp, #28]
 80155b4:	2500      	movs	r5, #0
 80155b6:	ba3f      	rev	r7, r7
 80155b8:	1ba4      	subs	r4, r4, r6
 80155ba:	f44f 7280 	mov.w	r2, #256	@ 0x100
 80155be:	4629      	mov	r1, r5
 80155c0:	441f      	add	r7, r3
 80155c2:	b2a4      	uxth	r4, r4
 80155c4:	f00b fb2b 	bl	8020c1e <memset>
 80155c8:	f8cd b008 	str.w	fp, [sp, #8]
 80155cc:	9504      	str	r5, [sp, #16]
 80155ce:	f7f5 fc3d 	bl	800ae4c <_ZN8touchgfx5paint8tearDownEv>
 80155d2:	463e      	mov	r6, r7
 80155d4:	e5cc      	b.n	8015170 <_ZN8touchgfx8LCD16bpp19DecompressorRGB_QOI16blitCopyARGB8888EPKhRKNS_4RectES6_h+0x108>
 80155d6:	f8bd 402c 	ldrh.w	r4, [sp, #44]	@ 0x2c
 80155da:	9b01      	ldr	r3, [sp, #4]
 80155dc:	1ae4      	subs	r4, r4, r3
 80155de:	1ba4      	subs	r4, r4, r6
 80155e0:	b2a4      	uxth	r4, r4
 80155e2:	e7f4      	b.n	80155ce <_ZN8touchgfx8LCD16bpp19DecompressorRGB_QOI16blitCopyARGB8888EPKhRKNS_4RectES6_h+0x566>
 80155e4:	4b05      	ldr	r3, [pc, #20]	@ (80155fc <_ZN8touchgfx8LCD16bpp19DecompressorRGB_QOI16blitCopyARGB8888EPKhRKNS_4RectES6_h+0x594>)
 80155e6:	6818      	ldr	r0, [r3, #0]
 80155e8:	6803      	ldr	r3, [r0, #0]
 80155ea:	6adb      	ldr	r3, [r3, #44]	@ 0x2c
 80155ec:	4798      	blx	r3
 80155ee:	b00f      	add	sp, #60	@ 0x3c
 80155f0:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 80155f4:	20000120 	.word	0x20000120
 80155f8:	20002c56 	.word	0x20002c56
 80155fc:	20002c5c 	.word	0x20002c5c
 8015600:	20000220 	.word	0x20000220

08015604 <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE14blitCopyRGB565EPKhS3_RKNS_4RectES6_h>:
 8015604:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8015608:	b08f      	sub	sp, #60	@ 0x3c
 801560a:	461c      	mov	r4, r3
 801560c:	9205      	str	r2, [sp, #20]
 801560e:	f89d 2064 	ldrb.w	r2, [sp, #100]	@ 0x64
 8015612:	9100      	str	r1, [sp, #0]
 8015614:	9b18      	ldr	r3, [sp, #96]	@ 0x60
 8015616:	9201      	str	r2, [sp, #4]
 8015618:	2a00      	cmp	r2, #0
 801561a:	f000 8115 	beq.w	8015848 <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE14blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x244>
 801561e:	6820      	ldr	r0, [r4, #0]
 8015620:	6861      	ldr	r1, [r4, #4]
 8015622:	aa0a      	add	r2, sp, #40	@ 0x28
 8015624:	c203      	stmia	r2!, {r0, r1}
 8015626:	6818      	ldr	r0, [r3, #0]
 8015628:	6859      	ldr	r1, [r3, #4]
 801562a:	aa0c      	add	r2, sp, #48	@ 0x30
 801562c:	c203      	stmia	r2!, {r0, r1}
 801562e:	a80a      	add	r0, sp, #40	@ 0x28
 8015630:	f7f9 fbe0 	bl	800edf4 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectE>
 8015634:	4621      	mov	r1, r4
 8015636:	a80c      	add	r0, sp, #48	@ 0x30
 8015638:	f7f9 fc04 	bl	800ee44 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectERKS1_>
 801563c:	f9bd 602c 	ldrsh.w	r6, [sp, #44]	@ 0x2c
 8015640:	f9bd 502e 	ldrsh.w	r5, [sp, #46]	@ 0x2e
 8015644:	f8bd 0030 	ldrh.w	r0, [sp, #48]	@ 0x30
 8015648:	f5b6 6f80 	cmp.w	r6, #1024	@ 0x400
 801564c:	bfde      	ittt	le
 801564e:	b2b3      	uxthle	r3, r6
 8015650:	f44f 6280 	movle.w	r2, #1024	@ 0x400
 8015654:	fb92 f3f3 	sdivle	r3, r2, r3
 8015658:	f9bd 2032 	ldrsh.w	r2, [sp, #50]	@ 0x32
 801565c:	bfc8      	it	gt
 801565e:	2301      	movgt	r3, #1
 8015660:	fb92 f1f3 	sdiv	r1, r2, r3
 8015664:	fa1f fc81 	uxth.w	ip, r1
 8015668:	fb0c 2413 	mls	r4, ip, r3, r2
 801566c:	fb14 f406 	smulbb	r4, r4, r6
 8015670:	441d      	add	r5, r3
 8015672:	4404      	add	r4, r0
 8015674:	4661      	mov	r1, ip
 8015676:	3d01      	subs	r5, #1
 8015678:	b2a4      	uxth	r4, r4
 801567a:	fb95 f5f3 	sdiv	r5, r5, r3
 801567e:	b131      	cbz	r1, 801568e <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE14blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x8a>
 8015680:	9b05      	ldr	r3, [sp, #20]
 8015682:	9900      	ldr	r1, [sp, #0]
 8015684:	f853 302c 	ldr.w	r3, [r3, ip, lsl #2]
 8015688:	ba1b      	rev	r3, r3
 801568a:	4419      	add	r1, r3
 801568c:	9100      	str	r1, [sp, #0]
 801568e:	f8bd 3028 	ldrh.w	r3, [sp, #40]	@ 0x28
 8015692:	f9bd 8034 	ldrsh.w	r8, [sp, #52]	@ 0x34
 8015696:	f9bd 6036 	ldrsh.w	r6, [sp, #54]	@ 0x36
 801569a:	4418      	add	r0, r3
 801569c:	f8bd 302a 	ldrh.w	r3, [sp, #42]	@ 0x2a
 80156a0:	f8ad 0030 	strh.w	r0, [sp, #48]	@ 0x30
 80156a4:	441a      	add	r2, r3
 80156a6:	4b6a      	ldr	r3, [pc, #424]	@ (8015850 <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE14blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x24c>)
 80156a8:	f8ad 2032 	strh.w	r2, [sp, #50]	@ 0x32
 80156ac:	6818      	ldr	r0, [r3, #0]
 80156ae:	6803      	ldr	r3, [r0, #0]
 80156b0:	6a9b      	ldr	r3, [r3, #40]	@ 0x28
 80156b2:	4798      	blx	r3
 80156b4:	4967      	ldr	r1, [pc, #412]	@ (8015854 <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE14blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x250>)
 80156b6:	f9bd 2032 	ldrsh.w	r2, [sp, #50]	@ 0x32
 80156ba:	880b      	ldrh	r3, [r1, #0]
 80156bc:	f9bd c030 	ldrsh.w	ip, [sp, #48]	@ 0x30
 80156c0:	9109      	str	r1, [sp, #36]	@ 0x24
 80156c2:	fb03 c202 	mla	r2, r3, r2, ip
 80156c6:	eb00 0042 	add.w	r0, r0, r2, lsl #1
 80156ca:	4373      	muls	r3, r6
 80156cc:	b2ad      	uxth	r5, r5
 80156ce:	eb00 0343 	add.w	r3, r0, r3, lsl #1
 80156d2:	00ad      	lsls	r5, r5, #2
 80156d4:	9306      	str	r3, [sp, #24]
 80156d6:	1d2b      	adds	r3, r5, #4
 80156d8:	9307      	str	r3, [sp, #28]
 80156da:	9b01      	ldr	r3, [sp, #4]
 80156dc:	f8bd 1004 	ldrh.w	r1, [sp, #4]
 80156e0:	9103      	str	r1, [sp, #12]
 80156e2:	f1c3 02ff 	rsb	r2, r3, #255	@ 0xff
 80156e6:	2c00      	cmp	r4, #0
 80156e8:	bf0c      	ite	eq
 80156ea:	46c6      	moveq	lr, r8
 80156ec:	f04f 0e00 	movne.w	lr, #0
 80156f0:	2300      	movs	r3, #0
 80156f2:	b292      	uxth	r2, r2
 80156f4:	fa1f fe8e 	uxth.w	lr, lr
 80156f8:	9302      	str	r3, [sp, #8]
 80156fa:	9204      	str	r2, [sp, #16]
 80156fc:	9a06      	ldr	r2, [sp, #24]
 80156fe:	4282      	cmp	r2, r0
 8015700:	f240 809d 	bls.w	801583e <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE14blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x23a>
 8015704:	b963      	cbnz	r3, 8015720 <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE14blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x11c>
 8015706:	9b00      	ldr	r3, [sp, #0]
 8015708:	781a      	ldrb	r2, [r3, #0]
 801570a:	0993      	lsrs	r3, r2, #6
 801570c:	f002 023f 	and.w	r2, r2, #63	@ 0x3f
 8015710:	9202      	str	r2, [sp, #8]
 8015712:	1e5a      	subs	r2, r3, #1
 8015714:	2a02      	cmp	r2, #2
 8015716:	d815      	bhi.n	8015744 <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE14blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x140>
 8015718:	9a00      	ldr	r2, [sp, #0]
 801571a:	3201      	adds	r2, #1
 801571c:	9200      	str	r2, [sp, #0]
 801571e:	b29b      	uxth	r3, r3
 8015720:	b1b4      	cbz	r4, 8015750 <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE14blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x14c>
 8015722:	429c      	cmp	r4, r3
 8015724:	bf95      	itete	ls
 8015726:	1b1c      	subls	r4, r3, r4
 8015728:	1ae4      	subhi	r4, r4, r3
 801572a:	fa1f fa84 	uxthls.w	sl, r4
 801572e:	b2a4      	uxthhi	r4, r4
 8015730:	bf87      	ittee	hi
 8015732:	4671      	movhi	r1, lr
 8015734:	f04f 0a00 	movhi.w	sl, #0
 8015738:	fa1f f188 	uxthls.w	r1, r8
 801573c:	2400      	movls	r4, #0
 801573e:	4653      	mov	r3, sl
 8015740:	468e      	mov	lr, r1
 8015742:	e7db      	b.n	80156fc <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE14blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0xf8>
 8015744:	9a00      	ldr	r2, [sp, #0]
 8015746:	9b00      	ldr	r3, [sp, #0]
 8015748:	3202      	adds	r2, #2
 801574a:	785b      	ldrb	r3, [r3, #1]
 801574c:	9200      	str	r2, [sp, #0]
 801574e:	e7e7      	b.n	8015720 <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE14blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x11c>
 8015750:	2202      	movs	r2, #2
 8015752:	4615      	mov	r5, r2
 8015754:	9907      	ldr	r1, [sp, #28]
 8015756:	9a02      	ldr	r2, [sp, #8]
 8015758:	fb15 1202 	smlabb	r2, r5, r2, r1
 801575c:	9905      	ldr	r1, [sp, #20]
 801575e:	4573      	cmp	r3, lr
 8015760:	f831 c002 	ldrh.w	ip, [r1, r2]
 8015764:	9a01      	ldr	r2, [sp, #4]
 8015766:	bf2b      	itete	cs
 8015768:	eba3 0a0e 	subcs.w	sl, r3, lr
 801576c:	ebae 0103 	subcc.w	r1, lr, r3
 8015770:	46f1      	movcs	r9, lr
 8015772:	4699      	movcc	r9, r3
 8015774:	bf27      	ittee	cs
 8015776:	fa1f fa8a 	uxthcs.w	sl, sl
 801577a:	4621      	movcs	r1, r4
 801577c:	b289      	uxthcc	r1, r1
 801577e:	46a2      	movcc	sl, r4
 8015780:	2aff      	cmp	r2, #255	@ 0xff
 8015782:	ea4f 0949 	mov.w	r9, r9, lsl #1
 8015786:	d105      	bne.n	8015794 <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE14blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x190>
 8015788:	4481      	add	r9, r0
 801578a:	4581      	cmp	r9, r0
 801578c:	d045      	beq.n	801581a <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE14blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x216>
 801578e:	f820 cb02 	strh.w	ip, [r0], #2
 8015792:	e7fa      	b.n	801578a <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE14blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x186>
 8015794:	9d03      	ldr	r5, [sp, #12]
 8015796:	ea4f 222c 	mov.w	r2, ip, asr #8
 801579a:	ea4f 0bec 	mov.w	fp, ip, asr #3
 801579e:	f002 02f8 	and.w	r2, r2, #248	@ 0xf8
 80157a2:	ea4f 0ccc 	mov.w	ip, ip, lsl #3
 80157a6:	436a      	muls	r2, r5
 80157a8:	f00b 0bfc 	and.w	fp, fp, #252	@ 0xfc
 80157ac:	fa5f fc8c 	uxtb.w	ip, ip
 80157b0:	9208      	str	r2, [sp, #32]
 80157b2:	fb0b fb05 	mul.w	fp, fp, r5
 80157b6:	fb0c fc05 	mul.w	ip, ip, r5
 80157ba:	4481      	add	r9, r0
 80157bc:	4581      	cmp	r9, r0
 80157be:	d02c      	beq.n	801581a <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE14blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x216>
 80157c0:	8802      	ldrh	r2, [r0, #0]
 80157c2:	9d04      	ldr	r5, [sp, #16]
 80157c4:	9f04      	ldr	r7, [sp, #16]
 80157c6:	1216      	asrs	r6, r2, #8
 80157c8:	f006 06f8 	and.w	r6, r6, #248	@ 0xf8
 80157cc:	fb16 f605 	smulbb	r6, r6, r5
 80157d0:	9d08      	ldr	r5, [sp, #32]
 80157d2:	442e      	add	r6, r5
 80157d4:	10d5      	asrs	r5, r2, #3
 80157d6:	00d2      	lsls	r2, r2, #3
 80157d8:	b2d2      	uxtb	r2, r2
 80157da:	fb12 f207 	smulbb	r2, r2, r7
 80157de:	b2b6      	uxth	r6, r6
 80157e0:	f005 05fc 	and.w	r5, r5, #252	@ 0xfc
 80157e4:	4462      	add	r2, ip
 80157e6:	fb15 f507 	smulbb	r5, r5, r7
 80157ea:	b292      	uxth	r2, r2
 80157ec:	1c77      	adds	r7, r6, #1
 80157ee:	eb07 2616 	add.w	r6, r7, r6, lsr #8
 80157f2:	1c57      	adds	r7, r2, #1
 80157f4:	445d      	add	r5, fp
 80157f6:	eb07 2212 	add.w	r2, r7, r2, lsr #8
 80157fa:	b2ad      	uxth	r5, r5
 80157fc:	f3c2 22c4 	ubfx	r2, r2, #11, #5
 8015800:	f406 4678 	and.w	r6, r6, #63488	@ 0xf800
 8015804:	4316      	orrs	r6, r2
 8015806:	1c6a      	adds	r2, r5, #1
 8015808:	eb02 2515 	add.w	r5, r2, r5, lsr #8
 801580c:	096d      	lsrs	r5, r5, #5
 801580e:	f405 65fc 	and.w	r5, r5, #2016	@ 0x7e0
 8015812:	432e      	orrs	r6, r5
 8015814:	f820 6b02 	strh.w	r6, [r0], #2
 8015818:	e7d0      	b.n	80157bc <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE14blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x1b8>
 801581a:	4573      	cmp	r3, lr
 801581c:	d38f      	bcc.n	801573e <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE14blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x13a>
 801581e:	f8bd 402c 	ldrh.w	r4, [sp, #44]	@ 0x2c
 8015822:	9b09      	ldr	r3, [sp, #36]	@ 0x24
 8015824:	fa1f f188 	uxth.w	r1, r8
 8015828:	1a64      	subs	r4, r4, r1
 801582a:	881b      	ldrh	r3, [r3, #0]
 801582c:	b2a4      	uxth	r4, r4
 801582e:	2c00      	cmp	r4, #0
 8015830:	eba3 0308 	sub.w	r3, r3, r8
 8015834:	bf18      	it	ne
 8015836:	2100      	movne	r1, #0
 8015838:	eb00 0043 	add.w	r0, r0, r3, lsl #1
 801583c:	e77f      	b.n	801573e <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE14blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x13a>
 801583e:	4b04      	ldr	r3, [pc, #16]	@ (8015850 <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE14blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x24c>)
 8015840:	6818      	ldr	r0, [r3, #0]
 8015842:	6803      	ldr	r3, [r0, #0]
 8015844:	6adb      	ldr	r3, [r3, #44]	@ 0x2c
 8015846:	4798      	blx	r3
 8015848:	b00f      	add	sp, #60	@ 0x3c
 801584a:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 801584e:	bf00      	nop
 8015850:	20002c5c 	.word	0x20002c5c
 8015854:	20002c56 	.word	0x20002c56

08015858 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB565EPKhS3_RKNS_4RectES6_h>:
 8015858:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 801585c:	b09f      	sub	sp, #124	@ 0x7c
 801585e:	e9cd 1213 	strd	r1, r2, [sp, #76]	@ 0x4c
 8015862:	f89d 20a4 	ldrb.w	r2, [sp, #164]	@ 0xa4
 8015866:	9209      	str	r2, [sp, #36]	@ 0x24
 8015868:	461d      	mov	r5, r3
 801586a:	4604      	mov	r4, r0
 801586c:	9b28      	ldr	r3, [sp, #160]	@ 0xa0
 801586e:	2a00      	cmp	r2, #0
 8015870:	f000 81eb 	beq.w	8015c4a <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x3f2>
 8015874:	6828      	ldr	r0, [r5, #0]
 8015876:	6869      	ldr	r1, [r5, #4]
 8015878:	aa1a      	add	r2, sp, #104	@ 0x68
 801587a:	c203      	stmia	r2!, {r0, r1}
 801587c:	6818      	ldr	r0, [r3, #0]
 801587e:	6859      	ldr	r1, [r3, #4]
 8015880:	aa1c      	add	r2, sp, #112	@ 0x70
 8015882:	c203      	stmia	r2!, {r0, r1}
 8015884:	a81a      	add	r0, sp, #104	@ 0x68
 8015886:	f7f9 fab5 	bl	800edf4 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectE>
 801588a:	4629      	mov	r1, r5
 801588c:	a81c      	add	r0, sp, #112	@ 0x70
 801588e:	f7f9 fad9 	bl	800ee44 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectERKS1_>
 8015892:	f9bd 306c 	ldrsh.w	r3, [sp, #108]	@ 0x6c
 8015896:	f9bd 806e 	ldrsh.w	r8, [sp, #110]	@ 0x6e
 801589a:	f9bd 6076 	ldrsh.w	r6, [sp, #118]	@ 0x76
 801589e:	f5b3 6f80 	cmp.w	r3, #1024	@ 0x400
 80158a2:	bfd7      	itett	le
 80158a4:	b29a      	uxthle	r2, r3
 80158a6:	2201      	movgt	r2, #1
 80158a8:	f44f 6180 	movle.w	r1, #1024	@ 0x400
 80158ac:	fb91 f2f2 	sdivle	r2, r1, r2
 80158b0:	9202      	str	r2, [sp, #8]
 80158b2:	9802      	ldr	r0, [sp, #8]
 80158b4:	f9bd 2072 	ldrsh.w	r2, [sp, #114]	@ 0x72
 80158b8:	fb92 f0f0 	sdiv	r0, r2, r0
 80158bc:	b280      	uxth	r0, r0
 80158be:	9010      	str	r0, [sp, #64]	@ 0x40
 80158c0:	9902      	ldr	r1, [sp, #8]
 80158c2:	9802      	ldr	r0, [sp, #8]
 80158c4:	9d10      	ldr	r5, [sp, #64]	@ 0x40
 80158c6:	4488      	add	r8, r1
 80158c8:	fb05 2510 	mls	r5, r5, r0, r2
 80158cc:	fb15 f503 	smulbb	r5, r5, r3
 80158d0:	f108 38ff 	add.w	r8, r8, #4294967295
 80158d4:	f8bd 3068 	ldrh.w	r3, [sp, #104]	@ 0x68
 80158d8:	fb98 f8f1 	sdiv	r8, r8, r1
 80158dc:	f8bd 1070 	ldrh.w	r1, [sp, #112]	@ 0x70
 80158e0:	440d      	add	r5, r1
 80158e2:	4419      	add	r1, r3
 80158e4:	f8bd 306a 	ldrh.w	r3, [sp, #106]	@ 0x6a
 80158e8:	f8ad 1070 	strh.w	r1, [sp, #112]	@ 0x70
 80158ec:	441a      	add	r2, r3
 80158ee:	f9bd 3074 	ldrsh.w	r3, [sp, #116]	@ 0x74
 80158f2:	9304      	str	r3, [sp, #16]
 80158f4:	4b95      	ldr	r3, [pc, #596]	@ (8015b4c <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x2f4>)
 80158f6:	f8ad 2072 	strh.w	r2, [sp, #114]	@ 0x72
 80158fa:	6818      	ldr	r0, [r3, #0]
 80158fc:	6803      	ldr	r3, [r0, #0]
 80158fe:	6a9b      	ldr	r3, [r3, #40]	@ 0x28
 8015900:	4798      	blx	r3
 8015902:	4b93      	ldr	r3, [pc, #588]	@ (8015b50 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x2f8>)
 8015904:	f9bd 1072 	ldrsh.w	r1, [sp, #114]	@ 0x72
 8015908:	881a      	ldrh	r2, [r3, #0]
 801590a:	f9bd 7070 	ldrsh.w	r7, [sp, #112]	@ 0x70
 801590e:	9318      	str	r3, [sp, #96]	@ 0x60
 8015910:	fb02 7101 	mla	r1, r2, r1, r7
 8015914:	eb00 0041 	add.w	r0, r0, r1, lsl #1
 8015918:	4356      	muls	r6, r2
 801591a:	eb00 0246 	add.w	r2, r0, r6, lsl #1
 801591e:	f108 0801 	add.w	r8, r8, #1
 8015922:	920a      	str	r2, [sp, #40]	@ 0x28
 8015924:	9a14      	ldr	r2, [sp, #80]	@ 0x50
 8015926:	f8bd 3024 	ldrh.w	r3, [sp, #36]	@ 0x24
 801592a:	930f      	str	r3, [sp, #60]	@ 0x3c
 801592c:	fa1f f888 	uxth.w	r8, r8
 8015930:	eb02 0888 	add.w	r8, r2, r8, lsl #2
 8015934:	f108 0204 	add.w	r2, r8, #4
 8015938:	9211      	str	r2, [sp, #68]	@ 0x44
 801593a:	9a09      	ldr	r2, [sp, #36]	@ 0x24
 801593c:	4b85      	ldr	r3, [pc, #532]	@ (8015b54 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x2fc>)
 801593e:	f1c2 02ff 	rsb	r2, r2, #255	@ 0xff
 8015942:	b2ad      	uxth	r5, r5
 8015944:	9215      	str	r2, [sp, #84]	@ 0x54
 8015946:	2d00      	cmp	r5, #0
 8015948:	9a04      	ldr	r2, [sp, #16]
 801594a:	f04f 0100 	mov.w	r1, #0
 801594e:	bf18      	it	ne
 8015950:	2200      	movne	r2, #0
 8015952:	1b1b      	subs	r3, r3, r4
 8015954:	b292      	uxth	r2, r2
 8015956:	910d      	str	r1, [sp, #52]	@ 0x34
 8015958:	9319      	str	r3, [sp, #100]	@ 0x64
 801595a:	9910      	ldr	r1, [sp, #64]	@ 0x40
 801595c:	9b0d      	ldr	r3, [sp, #52]	@ 0x34
 801595e:	fa11 f383 	uxtah	r3, r1, r3
 8015962:	9914      	ldr	r1, [sp, #80]	@ 0x50
 8015964:	eb01 0383 	add.w	r3, r1, r3, lsl #2
 8015968:	3304      	adds	r3, #4
 801596a:	9306      	str	r3, [sp, #24]
 801596c:	9b0a      	ldr	r3, [sp, #40]	@ 0x28
 801596e:	4283      	cmp	r3, r0
 8015970:	f240 8166 	bls.w	8015c40 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x3e8>
 8015974:	9902      	ldr	r1, [sp, #8]
 8015976:	f8bd 306c 	ldrh.w	r3, [sp, #108]	@ 0x6c
 801597a:	fbb5 f3f3 	udiv	r3, r5, r3
 801597e:	1acb      	subs	r3, r1, r3
 8015980:	b29b      	uxth	r3, r3
 8015982:	9316      	str	r3, [sp, #88]	@ 0x58
 8015984:	9b06      	ldr	r3, [sp, #24]
 8015986:	9e06      	ldr	r6, [sp, #24]
 8015988:	7859      	ldrb	r1, [r3, #1]
 801598a:	789b      	ldrb	r3, [r3, #2]
 801598c:	7836      	ldrb	r6, [r6, #0]
 801598e:	9612      	str	r6, [sp, #72]	@ 0x48
 8015990:	021b      	lsls	r3, r3, #8
 8015992:	ea43 4301 	orr.w	r3, r3, r1, lsl #16
 8015996:	9906      	ldr	r1, [sp, #24]
 8015998:	78c9      	ldrb	r1, [r1, #3]
 801599a:	430b      	orrs	r3, r1
 801599c:	9913      	ldr	r1, [sp, #76]	@ 0x4c
 801599e:	3601      	adds	r6, #1
 80159a0:	4419      	add	r1, r3
 80159a2:	9605      	str	r6, [sp, #20]
 80159a4:	1c4e      	adds	r6, r1, #1
 80159a6:	9603      	str	r6, [sp, #12]
 80159a8:	7849      	ldrb	r1, [r1, #1]
 80159aa:	9e13      	ldr	r6, [sp, #76]	@ 0x4c
 80159ac:	0209      	lsls	r1, r1, #8
 80159ae:	5cf3      	ldrb	r3, [r6, r3]
 80159b0:	f401 71ff 	and.w	r1, r1, #510	@ 0x1fe
 80159b4:	4319      	orrs	r1, r3
 80159b6:	b28b      	uxth	r3, r1
 80159b8:	930c      	str	r3, [sp, #48]	@ 0x30
 80159ba:	2300      	movs	r3, #0
 80159bc:	f04f 0a01 	mov.w	sl, #1
 80159c0:	9307      	str	r3, [sp, #28]
 80159c2:	469c      	mov	ip, r3
 80159c4:	f8bd 3054 	ldrh.w	r3, [sp, #84]	@ 0x54
 80159c8:	f884 1804 	strb.w	r1, [r4, #2052]	@ 0x804
 80159cc:	46d3      	mov	fp, sl
 80159ce:	4657      	mov	r7, sl
 80159d0:	930e      	str	r3, [sp, #56]	@ 0x38
 80159d2:	2d00      	cmp	r5, #0
 80159d4:	d07e      	beq.n	8015ad4 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x27c>
 80159d6:	42af      	cmp	r7, r5
 80159d8:	d26e      	bcs.n	8015ab8 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x260>
 80159da:	9b0a      	ldr	r3, [sp, #40]	@ 0x28
 80159dc:	9201      	str	r2, [sp, #4]
 80159de:	1bed      	subs	r5, r5, r7
 80159e0:	4283      	cmp	r3, r0
 80159e2:	b2ad      	uxth	r5, r5
 80159e4:	d802      	bhi.n	80159ec <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x194>
 80159e6:	e073      	b.n	8015ad0 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x278>
 80159e8:	2b00      	cmp	r3, #0
 80159ea:	d15f      	bne.n	8015aac <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x254>
 80159ec:	9b03      	ldr	r3, [sp, #12]
 80159ee:	785b      	ldrb	r3, [r3, #1]
 80159f0:	f1cb 0207 	rsb	r2, fp, #7
 80159f4:	4093      	lsls	r3, r2
 80159f6:	005b      	lsls	r3, r3, #1
 80159f8:	f403 72ff 	and.w	r2, r3, #510	@ 0x1fe
 80159fc:	9b03      	ldr	r3, [sp, #12]
 80159fe:	781b      	ldrb	r3, [r3, #0]
 8015a00:	fa43 f30b 	asr.w	r3, r3, fp
 8015a04:	b2db      	uxtb	r3, r3
 8015a06:	4313      	orrs	r3, r2
 8015a08:	f10b 0201 	add.w	r2, fp, #1
 8015a0c:	fa5f fb82 	uxtb.w	fp, r2
 8015a10:	9a03      	ldr	r2, [sp, #12]
 8015a12:	f1bb 0f08 	cmp.w	fp, #8
 8015a16:	bf15      	itete	ne
 8015a18:	3201      	addne	r2, #1
 8015a1a:	3202      	addeq	r2, #2
 8015a1c:	9203      	strne	r2, [sp, #12]
 8015a1e:	9203      	streq	r2, [sp, #12]
 8015a20:	9a12      	ldr	r2, [sp, #72]	@ 0x48
 8015a22:	b29f      	uxth	r7, r3
 8015a24:	bf08      	it	eq
 8015a26:	f04f 0b00 	moveq.w	fp, #0
 8015a2a:	42ba      	cmp	r2, r7
 8015a2c:	d309      	bcc.n	8015a42 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x1ea>
 8015a2e:	f884 3804 	strb.w	r3, [r4, #2052]	@ 0x804
 8015a32:	2301      	movs	r3, #1
 8015a34:	9a05      	ldr	r2, [sp, #20]
 8015a36:	f5b2 7f00 	cmp.w	r2, #512	@ 0x200
 8015a3a:	d30e      	bcc.n	8015a5a <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x202>
 8015a3c:	469a      	mov	sl, r3
 8015a3e:	2600      	movs	r6, #0
 8015a40:	e035      	b.n	8015aae <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x256>
 8015a42:	9b05      	ldr	r3, [sp, #20]
 8015a44:	429f      	cmp	r7, r3
 8015a46:	d318      	bcc.n	8015a7a <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x222>
 8015a48:	eb04 030a 	add.w	r3, r4, sl
 8015a4c:	f894 2804 	ldrb.w	r2, [r4, #2052]	@ 0x804
 8015a50:	f883 2804 	strb.w	r2, [r3, #2052]	@ 0x804
 8015a54:	f10a 0301 	add.w	r3, sl, #1
 8015a58:	b29b      	uxth	r3, r3
 8015a5a:	9a05      	ldr	r2, [sp, #20]
 8015a5c:	f894 6804 	ldrb.w	r6, [r4, #2052]	@ 0x804
 8015a60:	990c      	ldr	r1, [sp, #48]	@ 0x30
 8015a62:	eb04 0282 	add.w	r2, r4, r2, lsl #2
 8015a66:	7116      	strb	r6, [r2, #4]
 8015a68:	f10a 0601 	add.w	r6, sl, #1
 8015a6c:	80d1      	strh	r1, [r2, #6]
 8015a6e:	7156      	strb	r6, [r2, #5]
 8015a70:	9a05      	ldr	r2, [sp, #20]
 8015a72:	3201      	adds	r2, #1
 8015a74:	b292      	uxth	r2, r2
 8015a76:	9205      	str	r2, [sp, #20]
 8015a78:	e7e0      	b.n	8015a3c <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x1e4>
 8015a7a:	eb04 0387 	add.w	r3, r4, r7, lsl #2
 8015a7e:	463a      	mov	r2, r7
 8015a80:	795b      	ldrb	r3, [r3, #5]
 8015a82:	f603 0604 	addw	r6, r3, #2052	@ 0x804
 8015a86:	4426      	add	r6, r4
 8015a88:	9919      	ldr	r1, [sp, #100]	@ 0x64
 8015a8a:	eb01 0c06 	add.w	ip, r1, r6
 8015a8e:	f1bc 0f00 	cmp.w	ip, #0
 8015a92:	dd07      	ble.n	8015aa4 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x24c>
 8015a94:	eb04 0282 	add.w	r2, r4, r2, lsl #2
 8015a98:	f892 c004 	ldrb.w	ip, [r2, #4]
 8015a9c:	f806 cd01 	strb.w	ip, [r6, #-1]!
 8015aa0:	88d2      	ldrh	r2, [r2, #6]
 8015aa2:	e7f1      	b.n	8015a88 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x230>
 8015aa4:	f884 2804 	strb.w	r2, [r4, #2052]	@ 0x804
 8015aa8:	b29b      	uxth	r3, r3
 8015aaa:	e7c3      	b.n	8015a34 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x1dc>
 8015aac:	9f0c      	ldr	r7, [sp, #48]	@ 0x30
 8015aae:	970c      	str	r7, [sp, #48]	@ 0x30
 8015ab0:	9a01      	ldr	r2, [sp, #4]
 8015ab2:	46b4      	mov	ip, r6
 8015ab4:	461f      	mov	r7, r3
 8015ab6:	e78c      	b.n	80159d2 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x17a>
 8015ab8:	1b7b      	subs	r3, r7, r5
 8015aba:	f8bd 2010 	ldrh.w	r2, [sp, #16]
 8015abe:	9201      	str	r2, [sp, #4]
 8015ac0:	eb0c 0605 	add.w	r6, ip, r5
 8015ac4:	b29b      	uxth	r3, r3
 8015ac6:	b2b6      	uxth	r6, r6
 8015ac8:	2500      	movs	r5, #0
 8015aca:	9a0a      	ldr	r2, [sp, #40]	@ 0x28
 8015acc:	4282      	cmp	r2, r0
 8015ace:	d88b      	bhi.n	80159e8 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x190>
 8015ad0:	9a01      	ldr	r2, [sp, #4]
 8015ad2:	e74b      	b.n	801596c <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x114>
 8015ad4:	4297      	cmp	r7, r2
 8015ad6:	d332      	bcc.n	8015b3e <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x2e6>
 8015ad8:	1abb      	subs	r3, r7, r2
 8015ada:	b29b      	uxth	r3, r3
 8015adc:	9208      	str	r2, [sp, #32]
 8015ade:	9501      	str	r5, [sp, #4]
 8015ae0:	9909      	ldr	r1, [sp, #36]	@ 0x24
 8015ae2:	29ff      	cmp	r1, #255	@ 0xff
 8015ae4:	9908      	ldr	r1, [sp, #32]
 8015ae6:	eb0c 0601 	add.w	r6, ip, r1
 8015aea:	d135      	bne.n	8015b58 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x300>
 8015aec:	f1a0 0e02 	sub.w	lr, r0, #2
 8015af0:	b2b6      	uxth	r6, r6
 8015af2:	45b4      	cmp	ip, r6
 8015af4:	f040 808c 	bne.w	8015c10 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x3b8>
 8015af8:	9908      	ldr	r1, [sp, #32]
 8015afa:	4297      	cmp	r7, r2
 8015afc:	eb00 0041 	add.w	r0, r0, r1, lsl #1
 8015b00:	d3e2      	bcc.n	8015ac8 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x270>
 8015b02:	9a18      	ldr	r2, [sp, #96]	@ 0x60
 8015b04:	9904      	ldr	r1, [sp, #16]
 8015b06:	8812      	ldrh	r2, [r2, #0]
 8015b08:	1a52      	subs	r2, r2, r1
 8015b0a:	eb00 0042 	add.w	r0, r0, r2, lsl #1
 8015b0e:	9a07      	ldr	r2, [sp, #28]
 8015b10:	9916      	ldr	r1, [sp, #88]	@ 0x58
 8015b12:	3201      	adds	r2, #1
 8015b14:	428a      	cmp	r2, r1
 8015b16:	9207      	str	r2, [sp, #28]
 8015b18:	f040 8087 	bne.w	8015c2a <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x3d2>
 8015b1c:	f8bd 5070 	ldrh.w	r5, [sp, #112]	@ 0x70
 8015b20:	f8bd 7068 	ldrh.w	r7, [sp, #104]	@ 0x68
 8015b24:	9b04      	ldr	r3, [sp, #16]
 8015b26:	1bed      	subs	r5, r5, r7
 8015b28:	b2ad      	uxth	r5, r5
 8015b2a:	2d00      	cmp	r5, #0
 8015b2c:	bf08      	it	eq
 8015b2e:	461a      	moveq	r2, r3
 8015b30:	9b0d      	ldr	r3, [sp, #52]	@ 0x34
 8015b32:	bf18      	it	ne
 8015b34:	2200      	movne	r2, #0
 8015b36:	3301      	adds	r3, #1
 8015b38:	930d      	str	r3, [sp, #52]	@ 0x34
 8015b3a:	b292      	uxth	r2, r2
 8015b3c:	e70d      	b.n	801595a <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x102>
 8015b3e:	1bd1      	subs	r1, r2, r7
 8015b40:	b28b      	uxth	r3, r1
 8015b42:	9301      	str	r3, [sp, #4]
 8015b44:	9708      	str	r7, [sp, #32]
 8015b46:	462b      	mov	r3, r5
 8015b48:	e7ca      	b.n	8015ae0 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x288>
 8015b4a:	bf00      	nop
 8015b4c:	20002c5c 	.word	0x20002c5c
 8015b50:	20002c56 	.word	0x20002c56
 8015b54:	fffff7fb 	.word	0xfffff7fb
 8015b58:	b2b6      	uxth	r6, r6
 8015b5a:	900b      	str	r0, [sp, #44]	@ 0x2c
 8015b5c:	45b4      	cmp	ip, r6
 8015b5e:	d0cb      	beq.n	8015af8 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x2a0>
 8015b60:	f10c 0101 	add.w	r1, ip, #1
 8015b64:	44a4      	add	ip, r4
 8015b66:	9117      	str	r1, [sp, #92]	@ 0x5c
 8015b68:	f89c 5804 	ldrb.w	r5, [ip, #2052]	@ 0x804
 8015b6c:	9911      	ldr	r1, [sp, #68]	@ 0x44
 8015b6e:	f831 5015 	ldrh.w	r5, [r1, r5, lsl #1]
 8015b72:	990b      	ldr	r1, [sp, #44]	@ 0x2c
 8015b74:	f8b1 c000 	ldrh.w	ip, [r1]
 8015b78:	990e      	ldr	r1, [sp, #56]	@ 0x38
 8015b7a:	ea4f 2e2c 	mov.w	lr, ip, asr #8
 8015b7e:	f00e 0ef8 	and.w	lr, lr, #248	@ 0xf8
 8015b82:	fb1e fe01 	smulbb	lr, lr, r1
 8015b86:	ea4f 2825 	mov.w	r8, r5, asr #8
 8015b8a:	990f      	ldr	r1, [sp, #60]	@ 0x3c
 8015b8c:	f008 08f8 	and.w	r8, r8, #248	@ 0xf8
 8015b90:	fb08 e801 	mla	r8, r8, r1, lr
 8015b94:	ea4f 09ec 	mov.w	r9, ip, asr #3
 8015b98:	990e      	ldr	r1, [sp, #56]	@ 0x38
 8015b9a:	f009 09fc 	and.w	r9, r9, #252	@ 0xfc
 8015b9e:	fb19 f901 	smulbb	r9, r9, r1
 8015ba2:	ea4f 0ee5 	mov.w	lr, r5, asr #3
 8015ba6:	990f      	ldr	r1, [sp, #60]	@ 0x3c
 8015ba8:	f00e 0efc 	and.w	lr, lr, #252	@ 0xfc
 8015bac:	fb0e 9e01 	mla	lr, lr, r1, r9
 8015bb0:	ea4f 0ccc 	mov.w	ip, ip, lsl #3
 8015bb4:	990e      	ldr	r1, [sp, #56]	@ 0x38
 8015bb6:	fa5f fc8c 	uxtb.w	ip, ip
 8015bba:	fb1c fc01 	smulbb	ip, ip, r1
 8015bbe:	00ed      	lsls	r5, r5, #3
 8015bc0:	990f      	ldr	r1, [sp, #60]	@ 0x3c
 8015bc2:	b2ed      	uxtb	r5, r5
 8015bc4:	fb05 c501 	mla	r5, r5, r1, ip
 8015bc8:	fa1f f888 	uxth.w	r8, r8
 8015bcc:	fa1f fe8e 	uxth.w	lr, lr
 8015bd0:	b2ad      	uxth	r5, r5
 8015bd2:	f108 0c01 	add.w	ip, r8, #1
 8015bd6:	eb0c 2818 	add.w	r8, ip, r8, lsr #8
 8015bda:	f10e 0901 	add.w	r9, lr, #1
 8015bde:	f105 0c01 	add.w	ip, r5, #1
 8015be2:	eb0c 2c15 	add.w	ip, ip, r5, lsr #8
 8015be6:	eb09 291e 	add.w	r9, r9, lr, lsr #8
 8015bea:	f3cc 2cc4 	ubfx	ip, ip, #11, #5
 8015bee:	f408 4878 	and.w	r8, r8, #63488	@ 0xf800
 8015bf2:	ea4f 1959 	mov.w	r9, r9, lsr #5
 8015bf6:	ea4c 0808 	orr.w	r8, ip, r8
 8015bfa:	990b      	ldr	r1, [sp, #44]	@ 0x2c
 8015bfc:	f8bd c05c 	ldrh.w	ip, [sp, #92]	@ 0x5c
 8015c00:	f409 69fc 	and.w	r9, r9, #2016	@ 0x7e0
 8015c04:	ea48 0809 	orr.w	r8, r8, r9
 8015c08:	f821 8b02 	strh.w	r8, [r1], #2
 8015c0c:	910b      	str	r1, [sp, #44]	@ 0x2c
 8015c0e:	e7a5      	b.n	8015b5c <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x304>
 8015c10:	f10c 0801 	add.w	r8, ip, #1
 8015c14:	44a4      	add	ip, r4
 8015c16:	9911      	ldr	r1, [sp, #68]	@ 0x44
 8015c18:	f89c 5804 	ldrb.w	r5, [ip, #2052]	@ 0x804
 8015c1c:	f831 5015 	ldrh.w	r5, [r1, r5, lsl #1]
 8015c20:	f82e 5f02 	strh.w	r5, [lr, #2]!
 8015c24:	fa1f fc88 	uxth.w	ip, r8
 8015c28:	e763      	b.n	8015af2 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x29a>
 8015c2a:	f8bd 2010 	ldrh.w	r2, [sp, #16]
 8015c2e:	f8bd 506c 	ldrh.w	r5, [sp, #108]	@ 0x6c
 8015c32:	1aad      	subs	r5, r5, r2
 8015c34:	b2ad      	uxth	r5, r5
 8015c36:	2d00      	cmp	r5, #0
 8015c38:	bf18      	it	ne
 8015c3a:	2200      	movne	r2, #0
 8015c3c:	9201      	str	r2, [sp, #4]
 8015c3e:	e744      	b.n	8015aca <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x272>
 8015c40:	4b03      	ldr	r3, [pc, #12]	@ (8015c50 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x3f8>)
 8015c42:	6818      	ldr	r0, [r3, #0]
 8015c44:	6803      	ldr	r3, [r0, #0]
 8015c46:	6adb      	ldr	r3, [r3, #44]	@ 0x2c
 8015c48:	4798      	blx	r3
 8015c4a:	b01f      	add	sp, #124	@ 0x7c
 8015c4c:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 8015c50:	20002c5c 	.word	0x20002c5c

08015c54 <_ZN8touchgfx8LCD16bpp19DecompressorRGB_QOI14blitCopyRGB565EPKhRKNS_4RectES6_h>:
 8015c54:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8015c58:	b093      	sub	sp, #76	@ 0x4c
 8015c5a:	4616      	mov	r6, r2
 8015c5c:	f89d 2070 	ldrb.w	r2, [sp, #112]	@ 0x70
 8015c60:	9003      	str	r0, [sp, #12]
 8015c62:	460d      	mov	r5, r1
 8015c64:	9201      	str	r2, [sp, #4]
 8015c66:	2a00      	cmp	r2, #0
 8015c68:	f000 8304 	beq.w	8016274 <_ZN8touchgfx8LCD16bpp19DecompressorRGB_QOI14blitCopyRGB565EPKhRKNS_4RectES6_h+0x620>
 8015c6c:	6830      	ldr	r0, [r6, #0]
 8015c6e:	6871      	ldr	r1, [r6, #4]
 8015c70:	ac0e      	add	r4, sp, #56	@ 0x38
 8015c72:	c403      	stmia	r4!, {r0, r1}
 8015c74:	6818      	ldr	r0, [r3, #0]
 8015c76:	6859      	ldr	r1, [r3, #4]
 8015c78:	ac10      	add	r4, sp, #64	@ 0x40
 8015c7a:	c403      	stmia	r4!, {r0, r1}
 8015c7c:	a80e      	add	r0, sp, #56	@ 0x38
 8015c7e:	f7f9 f8b9 	bl	800edf4 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectE>
 8015c82:	4631      	mov	r1, r6
 8015c84:	a810      	add	r0, sp, #64	@ 0x40
 8015c86:	f7f9 f8dd 	bl	800ee44 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectERKS1_>
 8015c8a:	f9bd 203c 	ldrsh.w	r2, [sp, #60]	@ 0x3c
 8015c8e:	f5b2 6f80 	cmp.w	r2, #1024	@ 0x400
 8015c92:	bfd7      	itett	le
 8015c94:	b293      	uxthle	r3, r2
 8015c96:	2301      	movgt	r3, #1
 8015c98:	f44f 6180 	movle.w	r1, #1024	@ 0x400
 8015c9c:	fb91 f3f3 	sdivle	r3, r1, r3
 8015ca0:	9304      	str	r3, [sp, #16]
 8015ca2:	f105 0308 	add.w	r3, r5, #8
 8015ca6:	9904      	ldr	r1, [sp, #16]
 8015ca8:	9308      	str	r3, [sp, #32]
 8015caa:	f9bd 303e 	ldrsh.w	r3, [sp, #62]	@ 0x3e
 8015cae:	440b      	add	r3, r1
 8015cb0:	3b01      	subs	r3, #1
 8015cb2:	fb93 f3f1 	sdiv	r3, r3, r1
 8015cb6:	9908      	ldr	r1, [sp, #32]
 8015cb8:	3b01      	subs	r3, #1
 8015cba:	b29b      	uxth	r3, r3
 8015cbc:	eb01 0383 	add.w	r3, r1, r3, lsl #2
 8015cc0:	9309      	str	r3, [sp, #36]	@ 0x24
 8015cc2:	9904      	ldr	r1, [sp, #16]
 8015cc4:	f9bd 3042 	ldrsh.w	r3, [sp, #66]	@ 0x42
 8015cc8:	fb93 f0f1 	sdiv	r0, r3, r1
 8015ccc:	b284      	uxth	r4, r0
 8015cce:	9405      	str	r4, [sp, #20]
 8015cd0:	e9dd 4504 	ldrd	r4, r5, [sp, #16]
 8015cd4:	f8bd 1040 	ldrh.w	r1, [sp, #64]	@ 0x40
 8015cd8:	fb05 3914 	mls	r9, r5, r4, r3
 8015cdc:	fb19 f902 	smulbb	r9, r9, r2
 8015ce0:	4489      	add	r9, r1
 8015ce2:	fa1f f989 	uxth.w	r9, r9
 8015ce6:	2d00      	cmp	r5, #0
 8015ce8:	d05d      	beq.n	8015da6 <_ZN8touchgfx8LCD16bpp19DecompressorRGB_QOI14blitCopyRGB565EPKhRKNS_4RectES6_h+0x152>
 8015cea:	1e6a      	subs	r2, r5, #1
 8015cec:	9808      	ldr	r0, [sp, #32]
 8015cee:	f850 a022 	ldr.w	sl, [r0, r2, lsl #2]
 8015cf2:	9a09      	ldr	r2, [sp, #36]	@ 0x24
 8015cf4:	fa9a fa8a 	rev.w	sl, sl
 8015cf8:	4492      	add	sl, r2
 8015cfa:	f8bd 2038 	ldrh.w	r2, [sp, #56]	@ 0x38
 8015cfe:	f9bd 5046 	ldrsh.w	r5, [sp, #70]	@ 0x46
 8015d02:	4411      	add	r1, r2
 8015d04:	f8bd 203a 	ldrh.w	r2, [sp, #58]	@ 0x3a
 8015d08:	f8ad 1040 	strh.w	r1, [sp, #64]	@ 0x40
 8015d0c:	4413      	add	r3, r2
 8015d0e:	f8ad 3042 	strh.w	r3, [sp, #66]	@ 0x42
 8015d12:	f9bd 3044 	ldrsh.w	r3, [sp, #68]	@ 0x44
 8015d16:	9302      	str	r3, [sp, #8]
 8015d18:	4bcb      	ldr	r3, [pc, #812]	@ (8016048 <_ZN8touchgfx8LCD16bpp19DecompressorRGB_QOI14blitCopyRGB565EPKhRKNS_4RectES6_h+0x3f4>)
 8015d1a:	6818      	ldr	r0, [r3, #0]
 8015d1c:	6803      	ldr	r3, [r0, #0]
 8015d1e:	6a9b      	ldr	r3, [r3, #40]	@ 0x28
 8015d20:	4798      	blx	r3
 8015d22:	4bca      	ldr	r3, [pc, #808]	@ (801604c <_ZN8touchgfx8LCD16bpp19DecompressorRGB_QOI14blitCopyRGB565EPKhRKNS_4RectES6_h+0x3f8>)
 8015d24:	f9bd 2040 	ldrsh.w	r2, [sp, #64]	@ 0x40
 8015d28:	881b      	ldrh	r3, [r3, #0]
 8015d2a:	f9bd 4042 	ldrsh.w	r4, [sp, #66]	@ 0x42
 8015d2e:	fb03 2404 	mla	r4, r3, r4, r2
 8015d32:	eb00 0444 	add.w	r4, r0, r4, lsl #1
 8015d36:	436b      	muls	r3, r5
 8015d38:	eb04 0343 	add.w	r3, r4, r3, lsl #1
 8015d3c:	930d      	str	r3, [sp, #52]	@ 0x34
 8015d3e:	f9bd 303c 	ldrsh.w	r3, [sp, #60]	@ 0x3c
 8015d42:	fb99 f3f3 	sdiv	r3, r9, r3
 8015d46:	9306      	str	r3, [sp, #24]
 8015d48:	9b01      	ldr	r3, [sp, #4]
 8015d4a:	43db      	mvns	r3, r3
 8015d4c:	b2db      	uxtb	r3, r3
 8015d4e:	930a      	str	r3, [sp, #40]	@ 0x28
 8015d50:	9b03      	ldr	r3, [sp, #12]
 8015d52:	3304      	adds	r3, #4
 8015d54:	4618      	mov	r0, r3
 8015d56:	2280      	movs	r2, #128	@ 0x80
 8015d58:	2100      	movs	r1, #0
 8015d5a:	930b      	str	r3, [sp, #44]	@ 0x2c
 8015d5c:	f00a ff5f 	bl	8020c1e <memset>
 8015d60:	4bbb      	ldr	r3, [pc, #748]	@ (8016050 <_ZN8touchgfx8LCD16bpp19DecompressorRGB_QOI14blitCopyRGB565EPKhRKNS_4RectES6_h+0x3fc>)
 8015d62:	9300      	str	r3, [sp, #0]
 8015d64:	2300      	movs	r3, #0
 8015d66:	f04f 0600 	mov.w	r6, #0
 8015d6a:	9307      	str	r3, [sp, #28]
 8015d6c:	9b0d      	ldr	r3, [sp, #52]	@ 0x34
 8015d6e:	42a3      	cmp	r3, r4
 8015d70:	f240 827b 	bls.w	801626a <_ZN8touchgfx8LCD16bpp19DecompressorRGB_QOI14blitCopyRGB565EPKhRKNS_4RectES6_h+0x616>
 8015d74:	f04f 0e07 	mov.w	lr, #7
 8015d78:	f1b9 0f00 	cmp.w	r9, #0
 8015d7c:	f000 8159 	beq.w	8016032 <_ZN8touchgfx8LCD16bpp19DecompressorRGB_QOI14blitCopyRGB565EPKhRKNS_4RectES6_h+0x3de>
 8015d80:	f89a 5000 	ldrb.w	r5, [sl]
 8015d84:	b2ed      	uxtb	r5, r5
 8015d86:	11aa      	asrs	r2, r5, #6
 8015d88:	f10a 0701 	add.w	r7, sl, #1
 8015d8c:	d10e      	bne.n	8015dac <_ZN8touchgfx8LCD16bpp19DecompressorRGB_QOI14blitCopyRGB565EPKhRKNS_4RectES6_h+0x158>
 8015d8e:	9b03      	ldr	r3, [sp, #12]
 8015d90:	f005 053f 	and.w	r5, r5, #63	@ 0x3f
 8015d94:	eb03 0545 	add.w	r5, r3, r5, lsl #1
 8015d98:	88ae      	ldrh	r6, [r5, #4]
 8015d9a:	f109 39ff 	add.w	r9, r9, #4294967295
 8015d9e:	fa1f f989 	uxth.w	r9, r9
 8015da2:	46ba      	mov	sl, r7
 8015da4:	e7e8      	b.n	8015d78 <_ZN8touchgfx8LCD16bpp19DecompressorRGB_QOI14blitCopyRGB565EPKhRKNS_4RectES6_h+0x124>
 8015da6:	f8dd a024 	ldr.w	sl, [sp, #36]	@ 0x24
 8015daa:	e7a6      	b.n	8015cfa <_ZN8touchgfx8LCD16bpp19DecompressorRGB_QOI14blitCopyRGB565EPKhRKNS_4RectES6_h+0xa6>
 8015dac:	2a01      	cmp	r2, #1
 8015dae:	d129      	bne.n	8015e04 <_ZN8touchgfx8LCD16bpp19DecompressorRGB_QOI14blitCopyRGB565EPKhRKNS_4RectES6_h+0x1b0>
 8015db0:	f3c6 0304 	ubfx	r3, r6, #0, #5
 8015db4:	f005 0203 	and.w	r2, r5, #3
 8015db8:	3b02      	subs	r3, #2
 8015dba:	4413      	add	r3, r2
 8015dbc:	f003 031f 	and.w	r3, r3, #31
 8015dc0:	f3c5 0281 	ubfx	r2, r5, #2, #2
 8015dc4:	f363 0604 	bfi	r6, r3, #0, #5
 8015dc8:	3a02      	subs	r2, #2
 8015dca:	eb02 1256 	add.w	r2, r2, r6, lsr #5
 8015dce:	f002 023f 	and.w	r2, r2, #63	@ 0x3f
 8015dd2:	f3c5 1501 	ubfx	r5, r5, #4, #2
 8015dd6:	f362 164a 	bfi	r6, r2, #5, #6
 8015dda:	3d02      	subs	r5, #2
 8015ddc:	eb05 25d6 	add.w	r5, r5, r6, lsr #11
 8015de0:	f005 051f 	and.w	r5, r5, #31
 8015de4:	eb02 0282 	add.w	r2, r2, r2, lsl #2
 8015de8:	2103      	movs	r1, #3
 8015dea:	fb11 2205 	smlabb	r2, r1, r5, r2
 8015dee:	fb1e 2303 	smlabb	r3, lr, r3, r2
 8015df2:	9a03      	ldr	r2, [sp, #12]
 8015df4:	f003 033f 	and.w	r3, r3, #63	@ 0x3f
 8015df8:	eb02 0343 	add.w	r3, r2, r3, lsl #1
 8015dfc:	f365 26cf 	bfi	r6, r5, #11, #5
 8015e00:	809e      	strh	r6, [r3, #4]
 8015e02:	e7ca      	b.n	8015d9a <_ZN8touchgfx8LCD16bpp19DecompressorRGB_QOI14blitCopyRGB565EPKhRKNS_4RectES6_h+0x146>
 8015e04:	f005 053f 	and.w	r5, r5, #63	@ 0x3f
 8015e08:	2a02      	cmp	r2, #2
 8015e0a:	b2ab      	uxth	r3, r5
 8015e0c:	d136      	bne.n	8015e7c <_ZN8touchgfx8LCD16bpp19DecompressorRGB_QOI14blitCopyRGB565EPKhRKNS_4RectES6_h+0x228>
 8015e0e:	2101      	movs	r1, #1
 8015e10:	fb12 1205 	smlabb	r2, r2, r5, r1
 8015e14:	4492      	add	sl, r2
 8015e16:	463a      	mov	r2, r7
 8015e18:	4552      	cmp	r2, sl
 8015e1a:	d01c      	beq.n	8015e56 <_ZN8touchgfx8LCD16bpp19DecompressorRGB_QOI14blitCopyRGB565EPKhRKNS_4RectES6_h+0x202>
 8015e1c:	4694      	mov	ip, r2
 8015e1e:	f04f 0b03 	mov.w	fp, #3
 8015e22:	f81c 1b02 	ldrb.w	r1, [ip], #2
 8015e26:	7852      	ldrb	r2, [r2, #1]
 8015e28:	ea41 2102 	orr.w	r1, r1, r2, lsl #8
 8015e2c:	f3c1 1045 	ubfx	r0, r1, #5, #6
 8015e30:	ea4f 28d1 	mov.w	r8, r1, lsr #11
 8015e34:	eb00 0080 	add.w	r0, r0, r0, lsl #2
 8015e38:	f001 021f 	and.w	r2, r1, #31
 8015e3c:	fb1b 0008 	smlabb	r0, fp, r8, r0
 8015e40:	fb1e 0002 	smlabb	r0, lr, r2, r0
 8015e44:	9a03      	ldr	r2, [sp, #12]
 8015e46:	f000 003f 	and.w	r0, r0, #63	@ 0x3f
 8015e4a:	eb02 0040 	add.w	r0, r2, r0, lsl #1
 8015e4e:	460e      	mov	r6, r1
 8015e50:	8081      	strh	r1, [r0, #4]
 8015e52:	4662      	mov	r2, ip
 8015e54:	e7e0      	b.n	8015e18 <_ZN8touchgfx8LCD16bpp19DecompressorRGB_QOI14blitCopyRGB565EPKhRKNS_4RectES6_h+0x1c4>
 8015e56:	4599      	cmp	r9, r3
 8015e58:	d20b      	bcs.n	8015e72 <_ZN8touchgfx8LCD16bpp19DecompressorRGB_QOI14blitCopyRGB565EPKhRKNS_4RectES6_h+0x21e>
 8015e5a:	eba5 0509 	sub.w	r5, r5, r9
 8015e5e:	2d00      	cmp	r5, #0
 8015e60:	eb07 0749 	add.w	r7, r7, r9, lsl #1
 8015e64:	f300 8209 	bgt.w	801627a <_ZN8touchgfx8LCD16bpp19DecompressorRGB_QOI14blitCopyRGB565EPKhRKNS_4RectES6_h+0x626>
 8015e68:	f8dd 8008 	ldr.w	r8, [sp, #8]
 8015e6c:	2301      	movs	r3, #1
 8015e6e:	9307      	str	r3, [sp, #28]
 8015e70:	e00c      	b.n	8015e8c <_ZN8touchgfx8LCD16bpp19DecompressorRGB_QOI14blitCopyRGB565EPKhRKNS_4RectES6_h+0x238>
 8015e72:	eb07 0745 	add.w	r7, r7, r5, lsl #1
 8015e76:	eba9 0903 	sub.w	r9, r9, r3
 8015e7a:	e790      	b.n	8015d9e <_ZN8touchgfx8LCD16bpp19DecompressorRGB_QOI14blitCopyRGB565EPKhRKNS_4RectES6_h+0x14a>
 8015e7c:	4599      	cmp	r9, r3
 8015e7e:	d2fa      	bcs.n	8015e76 <_ZN8touchgfx8LCD16bpp19DecompressorRGB_QOI14blitCopyRGB565EPKhRKNS_4RectES6_h+0x222>
 8015e80:	eba5 0509 	sub.w	r5, r5, r9
 8015e84:	2d00      	cmp	r5, #0
 8015e86:	dc1d      	bgt.n	8015ec4 <_ZN8touchgfx8LCD16bpp19DecompressorRGB_QOI14blitCopyRGB565EPKhRKNS_4RectES6_h+0x270>
 8015e88:	f8dd 8008 	ldr.w	r8, [sp, #8]
 8015e8c:	f04f 0b00 	mov.w	fp, #0
 8015e90:	f1b8 0f00 	cmp.w	r8, #0
 8015e94:	f340 81a1 	ble.w	80161da <_ZN8touchgfx8LCD16bpp19DecompressorRGB_QOI14blitCopyRGB565EPKhRKNS_4RectES6_h+0x586>
 8015e98:	783b      	ldrb	r3, [r7, #0]
 8015e9a:	b2db      	uxtb	r3, r3
 8015e9c:	119a      	asrs	r2, r3, #6
 8015e9e:	f107 0a01 	add.w	sl, r7, #1
 8015ea2:	f040 80d7 	bne.w	8016054 <_ZN8touchgfx8LCD16bpp19DecompressorRGB_QOI14blitCopyRGB565EPKhRKNS_4RectES6_h+0x400>
 8015ea6:	9a03      	ldr	r2, [sp, #12]
 8015ea8:	f003 033f 	and.w	r3, r3, #63	@ 0x3f
 8015eac:	eb02 0343 	add.w	r3, r2, r3, lsl #1
 8015eb0:	889e      	ldrh	r6, [r3, #4]
 8015eb2:	9b01      	ldr	r3, [sp, #4]
 8015eb4:	2bff      	cmp	r3, #255	@ 0xff
 8015eb6:	f040 81e9 	bne.w	801628c <_ZN8touchgfx8LCD16bpp19DecompressorRGB_QOI14blitCopyRGB565EPKhRKNS_4RectES6_h+0x638>
 8015eba:	8026      	strh	r6, [r4, #0]
 8015ebc:	f108 38ff 	add.w	r8, r8, #4294967295
 8015ec0:	3402      	adds	r4, #2
 8015ec2:	e0be      	b.n	8016042 <_ZN8touchgfx8LCD16bpp19DecompressorRGB_QOI14blitCopyRGB565EPKhRKNS_4RectES6_h+0x3ee>
 8015ec4:	9b02      	ldr	r3, [sp, #8]
 8015ec6:	9a02      	ldr	r2, [sp, #8]
 8015ec8:	42ab      	cmp	r3, r5
 8015eca:	bfa8      	it	ge
 8015ecc:	462b      	movge	r3, r5
 8015ece:	eba2 0803 	sub.w	r8, r2, r3
 8015ed2:	9a07      	ldr	r2, [sp, #28]
 8015ed4:	1aed      	subs	r5, r5, r3
 8015ed6:	2a00      	cmp	r2, #0
 8015ed8:	d05a      	beq.n	8015f90 <_ZN8touchgfx8LCD16bpp19DecompressorRGB_QOI14blitCopyRGB565EPKhRKNS_4RectES6_h+0x33c>
 8015eda:	9a01      	ldr	r2, [sp, #4]
 8015edc:	2aff      	cmp	r2, #255	@ 0xff
 8015ede:	eb04 0343 	add.w	r3, r4, r3, lsl #1
 8015ee2:	d049      	beq.n	8015f78 <_ZN8touchgfx8LCD16bpp19DecompressorRGB_QOI14blitCopyRGB565EPKhRKNS_4RectES6_h+0x324>
 8015ee4:	f8bd e004 	ldrh.w	lr, [sp, #4]
 8015ee8:	f8bd 9028 	ldrh.w	r9, [sp, #40]	@ 0x28
 8015eec:	42a3      	cmp	r3, r4
 8015eee:	f240 80a5 	bls.w	801603c <_ZN8touchgfx8LCD16bpp19DecompressorRGB_QOI14blitCopyRGB565EPKhRKNS_4RectES6_h+0x3e8>
 8015ef2:	46bc      	mov	ip, r7
 8015ef4:	8820      	ldrh	r0, [r4, #0]
 8015ef6:	f81c 2b02 	ldrb.w	r2, [ip], #2
 8015efa:	7879      	ldrb	r1, [r7, #1]
 8015efc:	ea42 2201 	orr.w	r2, r2, r1, lsl #8
 8015f00:	b212      	sxth	r2, r2
 8015f02:	b291      	uxth	r1, r2
 8015f04:	ea4f 2a20 	mov.w	sl, r0, asr #8
 8015f08:	120f      	asrs	r7, r1, #8
 8015f0a:	f00a 0af8 	and.w	sl, sl, #248	@ 0xf8
 8015f0e:	fb1a fa09 	smulbb	sl, sl, r9
 8015f12:	f007 07f8 	and.w	r7, r7, #248	@ 0xf8
 8015f16:	fb07 a70e 	mla	r7, r7, lr, sl
 8015f1a:	ea4f 0ae0 	mov.w	sl, r0, asr #3
 8015f1e:	00c0      	lsls	r0, r0, #3
 8015f20:	10c9      	asrs	r1, r1, #3
 8015f22:	f00a 0afc 	and.w	sl, sl, #252	@ 0xfc
 8015f26:	00d2      	lsls	r2, r2, #3
 8015f28:	b2c0      	uxtb	r0, r0
 8015f2a:	fb1a fa09 	smulbb	sl, sl, r9
 8015f2e:	fb10 f009 	smulbb	r0, r0, r9
 8015f32:	f001 01fc 	and.w	r1, r1, #252	@ 0xfc
 8015f36:	b2d2      	uxtb	r2, r2
 8015f38:	b2bf      	uxth	r7, r7
 8015f3a:	fb01 a10e 	mla	r1, r1, lr, sl
 8015f3e:	fb02 020e 	mla	r2, r2, lr, r0
 8015f42:	b289      	uxth	r1, r1
 8015f44:	b292      	uxth	r2, r2
 8015f46:	1c78      	adds	r0, r7, #1
 8015f48:	eb00 2717 	add.w	r7, r0, r7, lsr #8
 8015f4c:	f101 0a01 	add.w	sl, r1, #1
 8015f50:	1c50      	adds	r0, r2, #1
 8015f52:	eb00 2012 	add.w	r0, r0, r2, lsr #8
 8015f56:	eb0a 2a11 	add.w	sl, sl, r1, lsr #8
 8015f5a:	f407 4778 	and.w	r7, r7, #63488	@ 0xf800
 8015f5e:	f3c0 20c4 	ubfx	r0, r0, #11, #5
 8015f62:	ea4f 1a5a 	mov.w	sl, sl, lsr #5
 8015f66:	4307      	orrs	r7, r0
 8015f68:	f40a 6afc 	and.w	sl, sl, #2016	@ 0x7e0
 8015f6c:	ea47 070a 	orr.w	r7, r7, sl
 8015f70:	f824 7b02 	strh.w	r7, [r4], #2
 8015f74:	4667      	mov	r7, ip
 8015f76:	e7b9      	b.n	8015eec <_ZN8touchgfx8LCD16bpp19DecompressorRGB_QOI14blitCopyRGB565EPKhRKNS_4RectES6_h+0x298>
 8015f78:	42a3      	cmp	r3, r4
 8015f7a:	d95f      	bls.n	801603c <_ZN8touchgfx8LCD16bpp19DecompressorRGB_QOI14blitCopyRGB565EPKhRKNS_4RectES6_h+0x3e8>
 8015f7c:	463a      	mov	r2, r7
 8015f7e:	f812 1b02 	ldrb.w	r1, [r2], #2
 8015f82:	7878      	ldrb	r0, [r7, #1]
 8015f84:	ea41 2100 	orr.w	r1, r1, r0, lsl #8
 8015f88:	f824 1b02 	strh.w	r1, [r4], #2
 8015f8c:	4617      	mov	r7, r2
 8015f8e:	e7f3      	b.n	8015f78 <_ZN8touchgfx8LCD16bpp19DecompressorRGB_QOI14blitCopyRGB565EPKhRKNS_4RectES6_h+0x324>
 8015f90:	9901      	ldr	r1, [sp, #4]
 8015f92:	29ff      	cmp	r1, #255	@ 0xff
 8015f94:	eb04 0343 	add.w	r3, r4, r3, lsl #1
 8015f98:	b2b2      	uxth	r2, r6
 8015f9a:	d044      	beq.n	8016026 <_ZN8touchgfx8LCD16bpp19DecompressorRGB_QOI14blitCopyRGB565EPKhRKNS_4RectES6_h+0x3d2>
 8015f9c:	f8bd 1004 	ldrh.w	r1, [sp, #4]
 8015fa0:	f8bd a028 	ldrh.w	sl, [sp, #40]	@ 0x28
 8015fa4:	ea4f 2922 	mov.w	r9, r2, asr #8
 8015fa8:	ea4f 0ee2 	mov.w	lr, r2, asr #3
 8015fac:	f009 09f8 	and.w	r9, r9, #248	@ 0xf8
 8015fb0:	f00e 0efc 	and.w	lr, lr, #252	@ 0xfc
 8015fb4:	4608      	mov	r0, r1
 8015fb6:	fb09 f901 	mul.w	r9, r9, r1
 8015fba:	fb0e fe01 	mul.w	lr, lr, r1
 8015fbe:	00d1      	lsls	r1, r2, #3
 8015fc0:	b2c9      	uxtb	r1, r1
 8015fc2:	4341      	muls	r1, r0
 8015fc4:	429c      	cmp	r4, r3
 8015fc6:	f4bf af61 	bcs.w	8015e8c <_ZN8touchgfx8LCD16bpp19DecompressorRGB_QOI14blitCopyRGB565EPKhRKNS_4RectES6_h+0x238>
 8015fca:	8822      	ldrh	r2, [r4, #0]
 8015fcc:	1210      	asrs	r0, r2, #8
 8015fce:	ea4f 0ce2 	mov.w	ip, r2, asr #3
 8015fd2:	f000 00f8 	and.w	r0, r0, #248	@ 0xf8
 8015fd6:	00d2      	lsls	r2, r2, #3
 8015fd8:	fb00 900a 	mla	r0, r0, sl, r9
 8015fdc:	b2d2      	uxtb	r2, r2
 8015fde:	b280      	uxth	r0, r0
 8015fe0:	f00c 0cfc 	and.w	ip, ip, #252	@ 0xfc
 8015fe4:	fb02 120a 	mla	r2, r2, sl, r1
 8015fe8:	b292      	uxth	r2, r2
 8015fea:	f100 0b01 	add.w	fp, r0, #1
 8015fee:	fb0c ec0a 	mla	ip, ip, sl, lr
 8015ff2:	fa1f fc8c 	uxth.w	ip, ip
 8015ff6:	eb0b 2b10 	add.w	fp, fp, r0, lsr #8
 8015ffa:	1c50      	adds	r0, r2, #1
 8015ffc:	eb00 2012 	add.w	r0, r0, r2, lsr #8
 8016000:	f10c 0201 	add.w	r2, ip, #1
 8016004:	eb02 2c1c 	add.w	ip, r2, ip, lsr #8
 8016008:	f40b 4b78 	and.w	fp, fp, #63488	@ 0xf800
 801600c:	f3c0 20c4 	ubfx	r0, r0, #11, #5
 8016010:	ea4f 1c5c 	mov.w	ip, ip, lsr #5
 8016014:	ea40 0b0b 	orr.w	fp, r0, fp
 8016018:	f40c 6cfc 	and.w	ip, ip, #2016	@ 0x7e0
 801601c:	ea4b 0b0c 	orr.w	fp, fp, ip
 8016020:	f824 bb02 	strh.w	fp, [r4], #2
 8016024:	e7ce      	b.n	8015fc4 <_ZN8touchgfx8LCD16bpp19DecompressorRGB_QOI14blitCopyRGB565EPKhRKNS_4RectES6_h+0x370>
 8016026:	429c      	cmp	r4, r3
 8016028:	f4bf af30 	bcs.w	8015e8c <_ZN8touchgfx8LCD16bpp19DecompressorRGB_QOI14blitCopyRGB565EPKhRKNS_4RectES6_h+0x238>
 801602c:	f824 2b02 	strh.w	r2, [r4], #2
 8016030:	e7f9      	b.n	8016026 <_ZN8touchgfx8LCD16bpp19DecompressorRGB_QOI14blitCopyRGB565EPKhRKNS_4RectES6_h+0x3d2>
 8016032:	f8dd 8008 	ldr.w	r8, [sp, #8]
 8016036:	4657      	mov	r7, sl
 8016038:	464d      	mov	r5, r9
 801603a:	e727      	b.n	8015e8c <_ZN8touchgfx8LCD16bpp19DecompressorRGB_QOI14blitCopyRGB565EPKhRKNS_4RectES6_h+0x238>
 801603c:	2300      	movs	r3, #0
 801603e:	e716      	b.n	8015e6e <_ZN8touchgfx8LCD16bpp19DecompressorRGB_QOI14blitCopyRGB565EPKhRKNS_4RectES6_h+0x21a>
 8016040:	44bb      	add	fp, r7
 8016042:	4657      	mov	r7, sl
 8016044:	e724      	b.n	8015e90 <_ZN8touchgfx8LCD16bpp19DecompressorRGB_QOI14blitCopyRGB565EPKhRKNS_4RectES6_h+0x23c>
 8016046:	bf00      	nop
 8016048:	20002c5c 	.word	0x20002c5c
 801604c:	20002c56 	.word	0x20002c56
 8016050:	20000120 	.word	0x20000120
 8016054:	2a01      	cmp	r2, #1
 8016056:	d12a      	bne.n	80160ae <_ZN8touchgfx8LCD16bpp19DecompressorRGB_QOI14blitCopyRGB565EPKhRKNS_4RectES6_h+0x45a>
 8016058:	f3c6 0104 	ubfx	r1, r6, #0, #5
 801605c:	f003 0203 	and.w	r2, r3, #3
 8016060:	3902      	subs	r1, #2
 8016062:	4411      	add	r1, r2
 8016064:	f001 011f 	and.w	r1, r1, #31
 8016068:	f3c3 0081 	ubfx	r0, r3, #2, #2
 801606c:	f361 0604 	bfi	r6, r1, #0, #5
 8016070:	3802      	subs	r0, #2
 8016072:	eb00 1056 	add.w	r0, r0, r6, lsr #5
 8016076:	f000 003f 	and.w	r0, r0, #63	@ 0x3f
 801607a:	f3c3 1301 	ubfx	r3, r3, #4, #2
 801607e:	f360 164a 	bfi	r6, r0, #5, #6
 8016082:	3b02      	subs	r3, #2
 8016084:	eb03 22d6 	add.w	r2, r3, r6, lsr #11
 8016088:	f002 031f 	and.w	r3, r2, #31
 801608c:	eb00 0080 	add.w	r0, r0, r0, lsl #2
 8016090:	2203      	movs	r2, #3
 8016092:	f363 26cf 	bfi	r6, r3, #11, #5
 8016096:	fb12 0303 	smlabb	r3, r2, r3, r0
 801609a:	2207      	movs	r2, #7
 801609c:	fb12 3301 	smlabb	r3, r2, r1, r3
 80160a0:	9a03      	ldr	r2, [sp, #12]
 80160a2:	f003 033f 	and.w	r3, r3, #63	@ 0x3f
 80160a6:	eb02 0343 	add.w	r3, r2, r3, lsl #1
 80160aa:	809e      	strh	r6, [r3, #4]
 80160ac:	e701      	b.n	8015eb2 <_ZN8touchgfx8LCD16bpp19DecompressorRGB_QOI14blitCopyRGB565EPKhRKNS_4RectES6_h+0x25e>
 80160ae:	f003 053f 	and.w	r5, r3, #63	@ 0x3f
 80160b2:	45a8      	cmp	r8, r5
 80160b4:	4647      	mov	r7, r8
 80160b6:	bfa8      	it	ge
 80160b8:	462f      	movge	r7, r5
 80160ba:	2a02      	cmp	r2, #2
 80160bc:	d154      	bne.n	8016168 <_ZN8touchgfx8LCD16bpp19DecompressorRGB_QOI14blitCopyRGB565EPKhRKNS_4RectES6_h+0x514>
 80160be:	9b01      	ldr	r3, [sp, #4]
 80160c0:	2bff      	cmp	r3, #255	@ 0xff
 80160c2:	d01a      	beq.n	80160fa <_ZN8touchgfx8LCD16bpp19DecompressorRGB_QOI14blitCopyRGB565EPKhRKNS_4RectES6_h+0x4a6>
 80160c4:	eb0b 0307 	add.w	r3, fp, r7
 80160c8:	2b40      	cmp	r3, #64	@ 0x40
 80160ca:	dd16      	ble.n	80160fa <_ZN8touchgfx8LCD16bpp19DecompressorRGB_QOI14blitCopyRGB565EPKhRKNS_4RectES6_h+0x4a6>
 80160cc:	ea4f 094b 	mov.w	r9, fp, lsl #1
 80160d0:	4649      	mov	r1, r9
 80160d2:	9800      	ldr	r0, [sp, #0]
 80160d4:	f7f4 fec1 	bl	800ae5a <_ZN8touchgfx5paint9flushLineEPmi>
 80160d8:	465a      	mov	r2, fp
 80160da:	9b01      	ldr	r3, [sp, #4]
 80160dc:	9900      	ldr	r1, [sp, #0]
 80160de:	4620      	mov	r0, r4
 80160e0:	f7f4 fec6 	bl	800ae70 <_ZN8touchgfx5paint6rgb56514lineFromRGB565EPtPKtjh>
 80160e4:	9b00      	ldr	r3, [sp, #0]
 80160e6:	461a      	mov	r2, r3
 80160e8:	4b6c      	ldr	r3, [pc, #432]	@ (801629c <_ZN8touchgfx8LCD16bpp19DecompressorRGB_QOI14blitCopyRGB565EPKhRKNS_4RectES6_h+0x648>)
 80160ea:	429a      	cmp	r2, r3
 80160ec:	bf0c      	ite	eq
 80160ee:	4b6c      	ldreq	r3, [pc, #432]	@ (80162a0 <_ZN8touchgfx8LCD16bpp19DecompressorRGB_QOI14blitCopyRGB565EPKhRKNS_4RectES6_h+0x64c>)
 80160f0:	4b6a      	ldrne	r3, [pc, #424]	@ (801629c <_ZN8touchgfx8LCD16bpp19DecompressorRGB_QOI14blitCopyRGB565EPKhRKNS_4RectES6_h+0x648>)
 80160f2:	9300      	str	r3, [sp, #0]
 80160f4:	444c      	add	r4, r9
 80160f6:	f04f 0b00 	mov.w	fp, #0
 80160fa:	4652      	mov	r2, sl
 80160fc:	2100      	movs	r1, #0
 80160fe:	42a9      	cmp	r1, r5
 8016100:	da2c      	bge.n	801615c <_ZN8touchgfx8LCD16bpp19DecompressorRGB_QOI14blitCopyRGB565EPKhRKNS_4RectES6_h+0x508>
 8016102:	4694      	mov	ip, r2
 8016104:	f04f 0903 	mov.w	r9, #3
 8016108:	f81c 3b02 	ldrb.w	r3, [ip], #2
 801610c:	7852      	ldrb	r2, [r2, #1]
 801610e:	ea43 2302 	orr.w	r3, r3, r2, lsl #8
 8016112:	f3c3 1045 	ubfx	r0, r3, #5, #6
 8016116:	ea4f 2ed3 	mov.w	lr, r3, lsr #11
 801611a:	eb00 0080 	add.w	r0, r0, r0, lsl #2
 801611e:	f003 021f 	and.w	r2, r3, #31
 8016122:	fb19 000e 	smlabb	r0, r9, lr, r0
 8016126:	f04f 0e07 	mov.w	lr, #7
 801612a:	fb1e 0002 	smlabb	r0, lr, r2, r0
 801612e:	9a03      	ldr	r2, [sp, #12]
 8016130:	f000 003f 	and.w	r0, r0, #63	@ 0x3f
 8016134:	eb02 0040 	add.w	r0, r2, r0, lsl #1
 8016138:	42b9      	cmp	r1, r7
 801613a:	461e      	mov	r6, r3
 801613c:	8083      	strh	r3, [r0, #4]
 801613e:	da0a      	bge.n	8016156 <_ZN8touchgfx8LCD16bpp19DecompressorRGB_QOI14blitCopyRGB565EPKhRKNS_4RectES6_h+0x502>
 8016140:	9a01      	ldr	r2, [sp, #4]
 8016142:	2aff      	cmp	r2, #255	@ 0xff
 8016144:	bf15      	itete	ne
 8016146:	9a00      	ldrne	r2, [sp, #0]
 8016148:	8023      	strheq	r3, [r4, #0]
 801614a:	f822 301b 	strhne.w	r3, [r2, fp, lsl #1]
 801614e:	3402      	addeq	r4, #2
 8016150:	bf18      	it	ne
 8016152:	f10b 0b01 	addne.w	fp, fp, #1
 8016156:	3101      	adds	r1, #1
 8016158:	4662      	mov	r2, ip
 801615a:	e7d0      	b.n	80160fe <_ZN8touchgfx8LCD16bpp19DecompressorRGB_QOI14blitCopyRGB565EPKhRKNS_4RectES6_h+0x4aa>
 801615c:	eb0a 0a45 	add.w	sl, sl, r5, lsl #1
 8016160:	eba8 0807 	sub.w	r8, r8, r7
 8016164:	1bed      	subs	r5, r5, r7
 8016166:	e76c      	b.n	8016042 <_ZN8touchgfx8LCD16bpp19DecompressorRGB_QOI14blitCopyRGB565EPKhRKNS_4RectES6_h+0x3ee>
 8016168:	9b01      	ldr	r3, [sp, #4]
 801616a:	2bff      	cmp	r3, #255	@ 0xff
 801616c:	eba8 0807 	sub.w	r8, r8, r7
 8016170:	eba5 0507 	sub.w	r5, r5, r7
 8016174:	fa1f f986 	uxth.w	r9, r6
 8016178:	d027      	beq.n	80161ca <_ZN8touchgfx8LCD16bpp19DecompressorRGB_QOI14blitCopyRGB565EPKhRKNS_4RectES6_h+0x576>
 801617a:	eb0b 0307 	add.w	r3, fp, r7
 801617e:	2b40      	cmp	r3, #64	@ 0x40
 8016180:	dd18      	ble.n	80161b4 <_ZN8touchgfx8LCD16bpp19DecompressorRGB_QOI14blitCopyRGB565EPKhRKNS_4RectES6_h+0x560>
 8016182:	ea4f 034b 	mov.w	r3, fp, lsl #1
 8016186:	4619      	mov	r1, r3
 8016188:	9800      	ldr	r0, [sp, #0]
 801618a:	930c      	str	r3, [sp, #48]	@ 0x30
 801618c:	f7f4 fe65 	bl	800ae5a <_ZN8touchgfx5paint9flushLineEPmi>
 8016190:	465a      	mov	r2, fp
 8016192:	9b01      	ldr	r3, [sp, #4]
 8016194:	9900      	ldr	r1, [sp, #0]
 8016196:	4620      	mov	r0, r4
 8016198:	f7f4 fe6a 	bl	800ae70 <_ZN8touchgfx5paint6rgb56514lineFromRGB565EPtPKtjh>
 801619c:	9b0c      	ldr	r3, [sp, #48]	@ 0x30
 801619e:	441c      	add	r4, r3
 80161a0:	9b00      	ldr	r3, [sp, #0]
 80161a2:	461a      	mov	r2, r3
 80161a4:	4b3d      	ldr	r3, [pc, #244]	@ (801629c <_ZN8touchgfx8LCD16bpp19DecompressorRGB_QOI14blitCopyRGB565EPKhRKNS_4RectES6_h+0x648>)
 80161a6:	429a      	cmp	r2, r3
 80161a8:	bf0c      	ite	eq
 80161aa:	4b3d      	ldreq	r3, [pc, #244]	@ (80162a0 <_ZN8touchgfx8LCD16bpp19DecompressorRGB_QOI14blitCopyRGB565EPKhRKNS_4RectES6_h+0x64c>)
 80161ac:	4b3b      	ldrne	r3, [pc, #236]	@ (801629c <_ZN8touchgfx8LCD16bpp19DecompressorRGB_QOI14blitCopyRGB565EPKhRKNS_4RectES6_h+0x648>)
 80161ae:	9300      	str	r3, [sp, #0]
 80161b0:	f04f 0b00 	mov.w	fp, #0
 80161b4:	9b00      	ldr	r3, [sp, #0]
 80161b6:	eb03 024b 	add.w	r2, r3, fp, lsl #1
 80161ba:	463b      	mov	r3, r7
 80161bc:	2b00      	cmp	r3, #0
 80161be:	f43f af3f 	beq.w	8016040 <_ZN8touchgfx8LCD16bpp19DecompressorRGB_QOI14blitCopyRGB565EPKhRKNS_4RectES6_h+0x3ec>
 80161c2:	f822 9b02 	strh.w	r9, [r2], #2
 80161c6:	3b01      	subs	r3, #1
 80161c8:	e7f8      	b.n	80161bc <_ZN8touchgfx8LCD16bpp19DecompressorRGB_QOI14blitCopyRGB565EPKhRKNS_4RectES6_h+0x568>
 80161ca:	eb04 0747 	add.w	r7, r4, r7, lsl #1
 80161ce:	42a7      	cmp	r7, r4
 80161d0:	f67f af37 	bls.w	8016042 <_ZN8touchgfx8LCD16bpp19DecompressorRGB_QOI14blitCopyRGB565EPKhRKNS_4RectES6_h+0x3ee>
 80161d4:	f824 9b02 	strh.w	r9, [r4], #2
 80161d8:	e7f9      	b.n	80161ce <_ZN8touchgfx8LCD16bpp19DecompressorRGB_QOI14blitCopyRGB565EPKhRKNS_4RectES6_h+0x57a>
 80161da:	f1bb 0f00 	cmp.w	fp, #0
 80161de:	d00c      	beq.n	80161fa <_ZN8touchgfx8LCD16bpp19DecompressorRGB_QOI14blitCopyRGB565EPKhRKNS_4RectES6_h+0x5a6>
 80161e0:	ea4f 084b 	mov.w	r8, fp, lsl #1
 80161e4:	4641      	mov	r1, r8
 80161e6:	9800      	ldr	r0, [sp, #0]
 80161e8:	f7f4 fe37 	bl	800ae5a <_ZN8touchgfx5paint9flushLineEPmi>
 80161ec:	4620      	mov	r0, r4
 80161ee:	9b01      	ldr	r3, [sp, #4]
 80161f0:	9900      	ldr	r1, [sp, #0]
 80161f2:	465a      	mov	r2, fp
 80161f4:	f7f4 fe3c 	bl	800ae70 <_ZN8touchgfx5paint6rgb56514lineFromRGB565EPtPKtjh>
 80161f8:	4444      	add	r4, r8
 80161fa:	4b2a      	ldr	r3, [pc, #168]	@ (80162a4 <_ZN8touchgfx8LCD16bpp19DecompressorRGB_QOI14blitCopyRGB565EPKhRKNS_4RectES6_h+0x650>)
 80161fc:	9a02      	ldr	r2, [sp, #8]
 80161fe:	881b      	ldrh	r3, [r3, #0]
 8016200:	1a9b      	subs	r3, r3, r2
 8016202:	eb04 0443 	add.w	r4, r4, r3, lsl #1
 8016206:	9b06      	ldr	r3, [sp, #24]
 8016208:	3301      	adds	r3, #1
 801620a:	9306      	str	r3, [sp, #24]
 801620c:	9a06      	ldr	r2, [sp, #24]
 801620e:	9b04      	ldr	r3, [sp, #16]
 8016210:	4293      	cmp	r3, r2
 8016212:	d120      	bne.n	8016256 <_ZN8touchgfx8LCD16bpp19DecompressorRGB_QOI14blitCopyRGB565EPKhRKNS_4RectES6_h+0x602>
 8016214:	9b05      	ldr	r3, [sp, #20]
 8016216:	9a05      	ldr	r2, [sp, #20]
 8016218:	f8bd 9040 	ldrh.w	r9, [sp, #64]	@ 0x40
 801621c:	f8bd 5038 	ldrh.w	r5, [sp, #56]	@ 0x38
 8016220:	980b      	ldr	r0, [sp, #44]	@ 0x2c
 8016222:	f103 0801 	add.w	r8, r3, #1
 8016226:	9b08      	ldr	r3, [sp, #32]
 8016228:	f853 7022 	ldr.w	r7, [r3, r2, lsl #2]
 801622c:	9b09      	ldr	r3, [sp, #36]	@ 0x24
 801622e:	ba3f      	rev	r7, r7
 8016230:	2280      	movs	r2, #128	@ 0x80
 8016232:	2100      	movs	r1, #0
 8016234:	441f      	add	r7, r3
 8016236:	eba9 0905 	sub.w	r9, r9, r5
 801623a:	f00a fcf0 	bl	8020c1e <memset>
 801623e:	2300      	movs	r3, #0
 8016240:	fa1f f989 	uxth.w	r9, r9
 8016244:	f04f 0600 	mov.w	r6, #0
 8016248:	f8cd 8014 	str.w	r8, [sp, #20]
 801624c:	9306      	str	r3, [sp, #24]
 801624e:	f7f4 fdfd 	bl	800ae4c <_ZN8touchgfx5paint8tearDownEv>
 8016252:	46ba      	mov	sl, r7
 8016254:	e58a      	b.n	8015d6c <_ZN8touchgfx8LCD16bpp19DecompressorRGB_QOI14blitCopyRGB565EPKhRKNS_4RectES6_h+0x118>
 8016256:	f8bd 903c 	ldrh.w	r9, [sp, #60]	@ 0x3c
 801625a:	9b02      	ldr	r3, [sp, #8]
 801625c:	eba9 0903 	sub.w	r9, r9, r3
 8016260:	eba9 0505 	sub.w	r5, r9, r5
 8016264:	fa1f f985 	uxth.w	r9, r5
 8016268:	e7f1      	b.n	801624e <_ZN8touchgfx8LCD16bpp19DecompressorRGB_QOI14blitCopyRGB565EPKhRKNS_4RectES6_h+0x5fa>
 801626a:	4b0f      	ldr	r3, [pc, #60]	@ (80162a8 <_ZN8touchgfx8LCD16bpp19DecompressorRGB_QOI14blitCopyRGB565EPKhRKNS_4RectES6_h+0x654>)
 801626c:	6818      	ldr	r0, [r3, #0]
 801626e:	6803      	ldr	r3, [r0, #0]
 8016270:	6adb      	ldr	r3, [r3, #44]	@ 0x2c
 8016272:	4798      	blx	r3
 8016274:	b013      	add	sp, #76	@ 0x4c
 8016276:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 801627a:	9b02      	ldr	r3, [sp, #8]
 801627c:	9a02      	ldr	r2, [sp, #8]
 801627e:	42ab      	cmp	r3, r5
 8016280:	bfa8      	it	ge
 8016282:	462b      	movge	r3, r5
 8016284:	eba2 0803 	sub.w	r8, r2, r3
 8016288:	1aed      	subs	r5, r5, r3
 801628a:	e626      	b.n	8015eda <_ZN8touchgfx8LCD16bpp19DecompressorRGB_QOI14blitCopyRGB565EPKhRKNS_4RectES6_h+0x286>
 801628c:	f108 38ff 	add.w	r8, r8, #4294967295
 8016290:	fa1f f986 	uxth.w	r9, r6
 8016294:	2500      	movs	r5, #0
 8016296:	2701      	movs	r7, #1
 8016298:	e76f      	b.n	801617a <_ZN8touchgfx8LCD16bpp19DecompressorRGB_QOI14blitCopyRGB565EPKhRKNS_4RectES6_h+0x526>
 801629a:	bf00      	nop
 801629c:	20000120 	.word	0x20000120
 80162a0:	20000220 	.word	0x20000220
 80162a4:	20002c56 	.word	0x20002c56
 80162a8:	20002c5c 	.word	0x20002c5c

080162ac <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE16blitCopyARGB8888EPKhS3_RKNS_4RectES6_h>:
 80162ac:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 80162b0:	b08f      	sub	sp, #60	@ 0x3c
 80162b2:	461c      	mov	r4, r3
 80162b4:	9203      	str	r2, [sp, #12]
 80162b6:	f89d 2064 	ldrb.w	r2, [sp, #100]	@ 0x64
 80162ba:	9b18      	ldr	r3, [sp, #96]	@ 0x60
 80162bc:	9202      	str	r2, [sp, #8]
 80162be:	460f      	mov	r7, r1
 80162c0:	2a00      	cmp	r2, #0
 80162c2:	f000 8128 	beq.w	8016516 <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE16blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x26a>
 80162c6:	6820      	ldr	r0, [r4, #0]
 80162c8:	6861      	ldr	r1, [r4, #4]
 80162ca:	aa0a      	add	r2, sp, #40	@ 0x28
 80162cc:	c203      	stmia	r2!, {r0, r1}
 80162ce:	6818      	ldr	r0, [r3, #0]
 80162d0:	6859      	ldr	r1, [r3, #4]
 80162d2:	aa0c      	add	r2, sp, #48	@ 0x30
 80162d4:	c203      	stmia	r2!, {r0, r1}
 80162d6:	a80a      	add	r0, sp, #40	@ 0x28
 80162d8:	f7f8 fd8c 	bl	800edf4 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectE>
 80162dc:	4621      	mov	r1, r4
 80162de:	a80c      	add	r0, sp, #48	@ 0x30
 80162e0:	f7f8 fdb0 	bl	800ee44 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectERKS1_>
 80162e4:	f9bd 602c 	ldrsh.w	r6, [sp, #44]	@ 0x2c
 80162e8:	f9bd 502e 	ldrsh.w	r5, [sp, #46]	@ 0x2e
 80162ec:	f8bd 0030 	ldrh.w	r0, [sp, #48]	@ 0x30
 80162f0:	f5b6 6f80 	cmp.w	r6, #1024	@ 0x400
 80162f4:	bfde      	ittt	le
 80162f6:	b2b3      	uxthle	r3, r6
 80162f8:	f44f 6280 	movle.w	r2, #1024	@ 0x400
 80162fc:	fb92 f3f3 	sdivle	r3, r2, r3
 8016300:	f9bd 2032 	ldrsh.w	r2, [sp, #50]	@ 0x32
 8016304:	bfc8      	it	gt
 8016306:	2301      	movgt	r3, #1
 8016308:	fb92 f1f3 	sdiv	r1, r2, r3
 801630c:	fa1f fc81 	uxth.w	ip, r1
 8016310:	fb0c 2413 	mls	r4, ip, r3, r2
 8016314:	fb14 f406 	smulbb	r4, r4, r6
 8016318:	441d      	add	r5, r3
 801631a:	4404      	add	r4, r0
 801631c:	4661      	mov	r1, ip
 801631e:	3d01      	subs	r5, #1
 8016320:	b2a4      	uxth	r4, r4
 8016322:	fb95 f5f3 	sdiv	r5, r5, r3
 8016326:	b121      	cbz	r1, 8016332 <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE16blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x86>
 8016328:	9b03      	ldr	r3, [sp, #12]
 801632a:	f853 302c 	ldr.w	r3, [r3, ip, lsl #2]
 801632e:	ba1b      	rev	r3, r3
 8016330:	441f      	add	r7, r3
 8016332:	f8bd 3028 	ldrh.w	r3, [sp, #40]	@ 0x28
 8016336:	f9bd 9034 	ldrsh.w	r9, [sp, #52]	@ 0x34
 801633a:	f9bd 6036 	ldrsh.w	r6, [sp, #54]	@ 0x36
 801633e:	4418      	add	r0, r3
 8016340:	f8bd 302a 	ldrh.w	r3, [sp, #42]	@ 0x2a
 8016344:	f8ad 0030 	strh.w	r0, [sp, #48]	@ 0x30
 8016348:	441a      	add	r2, r3
 801634a:	4b74      	ldr	r3, [pc, #464]	@ (801651c <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE16blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x270>)
 801634c:	f8ad 2032 	strh.w	r2, [sp, #50]	@ 0x32
 8016350:	6818      	ldr	r0, [r3, #0]
 8016352:	6803      	ldr	r3, [r0, #0]
 8016354:	6a9b      	ldr	r3, [r3, #40]	@ 0x28
 8016356:	4798      	blx	r3
 8016358:	4a71      	ldr	r2, [pc, #452]	@ (8016520 <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE16blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x274>)
 801635a:	f9bd 1032 	ldrsh.w	r1, [sp, #50]	@ 0x32
 801635e:	8813      	ldrh	r3, [r2, #0]
 8016360:	f9bd c030 	ldrsh.w	ip, [sp, #48]	@ 0x30
 8016364:	9209      	str	r2, [sp, #36]	@ 0x24
 8016366:	fb03 c101 	mla	r1, r3, r1, ip
 801636a:	eb00 0041 	add.w	r0, r0, r1, lsl #1
 801636e:	4373      	muls	r3, r6
 8016370:	b2ad      	uxth	r5, r5
 8016372:	eb00 0343 	add.w	r3, r0, r3, lsl #1
 8016376:	00ad      	lsls	r5, r5, #2
 8016378:	2c00      	cmp	r4, #0
 801637a:	9304      	str	r3, [sp, #16]
 801637c:	f105 0304 	add.w	r3, r5, #4
 8016380:	9305      	str	r3, [sp, #20]
 8016382:	bf0c      	ite	eq
 8016384:	46c8      	moveq	r8, r9
 8016386:	f04f 0800 	movne.w	r8, #0
 801638a:	2300      	movs	r3, #0
 801638c:	fa1f f888 	uxth.w	r8, r8
 8016390:	9301      	str	r3, [sp, #4]
 8016392:	9a04      	ldr	r2, [sp, #16]
 8016394:	4282      	cmp	r2, r0
 8016396:	f240 80b9 	bls.w	801650c <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE16blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x260>
 801639a:	b95b      	cbnz	r3, 80163b4 <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE16blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x108>
 801639c:	783a      	ldrb	r2, [r7, #0]
 801639e:	0993      	lsrs	r3, r2, #6
 80163a0:	f002 023f 	and.w	r2, r2, #63	@ 0x3f
 80163a4:	9201      	str	r2, [sp, #4]
 80163a6:	1e5a      	subs	r2, r3, #1
 80163a8:	2a02      	cmp	r2, #2
 80163aa:	bf8d      	iteet	hi
 80163ac:	787b      	ldrbhi	r3, [r7, #1]
 80163ae:	3701      	addls	r7, #1
 80163b0:	b29b      	uxthls	r3, r3
 80163b2:	3702      	addhi	r7, #2
 80163b4:	b184      	cbz	r4, 80163d8 <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE16blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x12c>
 80163b6:	429c      	cmp	r4, r3
 80163b8:	bf95      	itete	ls
 80163ba:	1b1c      	subls	r4, r3, r4
 80163bc:	1ae4      	subhi	r4, r4, r3
 80163be:	fa1f fa84 	uxthls.w	sl, r4
 80163c2:	b2a4      	uxthhi	r4, r4
 80163c4:	bf87      	ittee	hi
 80163c6:	46c4      	movhi	ip, r8
 80163c8:	f04f 0a00 	movhi.w	sl, #0
 80163cc:	fa1f fc89 	uxthls.w	ip, r9
 80163d0:	2400      	movls	r4, #0
 80163d2:	4653      	mov	r3, sl
 80163d4:	46e0      	mov	r8, ip
 80163d6:	e7dc      	b.n	8016392 <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE16blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0xe6>
 80163d8:	2204      	movs	r2, #4
 80163da:	4615      	mov	r5, r2
 80163dc:	9905      	ldr	r1, [sp, #20]
 80163de:	9a01      	ldr	r2, [sp, #4]
 80163e0:	fb15 1202 	smlabb	r2, r5, r2, r1
 80163e4:	9903      	ldr	r1, [sp, #12]
 80163e6:	588a      	ldr	r2, [r1, r2]
 80163e8:	4543      	cmp	r3, r8
 80163ea:	bf27      	ittee	cs
 80163ec:	eba3 0a08 	subcs.w	sl, r3, r8
 80163f0:	46c6      	movcs	lr, r8
 80163f2:	eba8 0c03 	subcc.w	ip, r8, r3
 80163f6:	469e      	movcc	lr, r3
 80163f8:	ea4f 6112 	mov.w	r1, r2, lsr #24
 80163fc:	bf27      	ittee	cs
 80163fe:	fa1f fa8a 	uxthcs.w	sl, sl
 8016402:	46a4      	movcs	ip, r4
 8016404:	fa1f fc8c 	uxthcc.w	ip, ip
 8016408:	46a2      	movcc	sl, r4
 801640a:	ea4f 0e4e 	mov.w	lr, lr, lsl #1
 801640e:	2900      	cmp	r1, #0
 8016410:	d066      	beq.n	80164e0 <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE16blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x234>
 8016412:	29ff      	cmp	r1, #255	@ 0xff
 8016414:	ea4f 2612 	mov.w	r6, r2, lsr #8
 8016418:	d114      	bne.n	8016444 <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE16blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x198>
 801641a:	9d02      	ldr	r5, [sp, #8]
 801641c:	2dff      	cmp	r5, #255	@ 0xff
 801641e:	d111      	bne.n	8016444 <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE16blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x198>
 8016420:	0951      	lsrs	r1, r2, #5
 8016422:	f426 66ff 	bic.w	r6, r6, #2040	@ 0x7f8
 8016426:	f401 61fc 	and.w	r1, r1, #2016	@ 0x7e0
 801642a:	f026 0607 	bic.w	r6, r6, #7
 801642e:	430e      	orrs	r6, r1
 8016430:	f3c2 02c4 	ubfx	r2, r2, #3, #5
 8016434:	4316      	orrs	r6, r2
 8016436:	b2b6      	uxth	r6, r6
 8016438:	4486      	add	lr, r0
 801643a:	4586      	cmp	lr, r0
 801643c:	d051      	beq.n	80164e2 <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE16blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x236>
 801643e:	f820 6b02 	strh.w	r6, [r0], #2
 8016442:	e7fa      	b.n	801643a <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE16blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x18e>
 8016444:	9d02      	ldr	r5, [sp, #8]
 8016446:	4369      	muls	r1, r5
 8016448:	1c4d      	adds	r5, r1, #1
 801644a:	eb05 2521 	add.w	r5, r5, r1, asr #8
 801644e:	122d      	asrs	r5, r5, #8
 8016450:	ea6f 0b05 	mvn.w	fp, r5
 8016454:	f3c2 4107 	ubfx	r1, r2, #16, #8
 8016458:	b2ad      	uxth	r5, r5
 801645a:	b2f6      	uxtb	r6, r6
 801645c:	b2d2      	uxtb	r2, r2
 801645e:	fb11 f105 	smulbb	r1, r1, r5
 8016462:	fb16 f605 	smulbb	r6, r6, r5
 8016466:	fb12 f205 	smulbb	r2, r2, r5
 801646a:	b289      	uxth	r1, r1
 801646c:	b2b6      	uxth	r6, r6
 801646e:	b292      	uxth	r2, r2
 8016470:	9106      	str	r1, [sp, #24]
 8016472:	9607      	str	r6, [sp, #28]
 8016474:	9208      	str	r2, [sp, #32]
 8016476:	4486      	add	lr, r0
 8016478:	fa5f fb8b 	uxtb.w	fp, fp
 801647c:	4586      	cmp	lr, r0
 801647e:	d030      	beq.n	80164e2 <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE16blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x236>
 8016480:	8802      	ldrh	r2, [r0, #0]
 8016482:	9906      	ldr	r1, [sp, #24]
 8016484:	1216      	asrs	r6, r2, #8
 8016486:	f006 06f8 	and.w	r6, r6, #248	@ 0xf8
 801648a:	10d5      	asrs	r5, r2, #3
 801648c:	ea46 1656 	orr.w	r6, r6, r6, lsr #5
 8016490:	fb06 160b 	mla	r6, r6, fp, r1
 8016494:	f005 05fc 	and.w	r5, r5, #252	@ 0xfc
 8016498:	9907      	ldr	r1, [sp, #28]
 801649a:	00d2      	lsls	r2, r2, #3
 801649c:	ea45 1595 	orr.w	r5, r5, r5, lsr #6
 80164a0:	fb05 150b 	mla	r5, r5, fp, r1
 80164a4:	b2d2      	uxtb	r2, r2
 80164a6:	9908      	ldr	r1, [sp, #32]
 80164a8:	ea42 1252 	orr.w	r2, r2, r2, lsr #5
 80164ac:	b2b6      	uxth	r6, r6
 80164ae:	fb02 120b 	mla	r2, r2, fp, r1
 80164b2:	b292      	uxth	r2, r2
 80164b4:	1c71      	adds	r1, r6, #1
 80164b6:	eb01 2616 	add.w	r6, r1, r6, lsr #8
 80164ba:	1c51      	adds	r1, r2, #1
 80164bc:	eb01 2212 	add.w	r2, r1, r2, lsr #8
 80164c0:	b2ad      	uxth	r5, r5
 80164c2:	f3c2 22c4 	ubfx	r2, r2, #11, #5
 80164c6:	f406 4678 	and.w	r6, r6, #63488	@ 0xf800
 80164ca:	4316      	orrs	r6, r2
 80164cc:	1c6a      	adds	r2, r5, #1
 80164ce:	eb02 2515 	add.w	r5, r2, r5, lsr #8
 80164d2:	096d      	lsrs	r5, r5, #5
 80164d4:	f405 65fc 	and.w	r5, r5, #2016	@ 0x7e0
 80164d8:	432e      	orrs	r6, r5
 80164da:	f820 6b02 	strh.w	r6, [r0], #2
 80164de:	e7cd      	b.n	801647c <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE16blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x1d0>
 80164e0:	4470      	add	r0, lr
 80164e2:	4543      	cmp	r3, r8
 80164e4:	f4ff af75 	bcc.w	80163d2 <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE16blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x126>
 80164e8:	f8bd 402c 	ldrh.w	r4, [sp, #44]	@ 0x2c
 80164ec:	9b09      	ldr	r3, [sp, #36]	@ 0x24
 80164ee:	fa1f fc89 	uxth.w	ip, r9
 80164f2:	eba4 040c 	sub.w	r4, r4, ip
 80164f6:	881b      	ldrh	r3, [r3, #0]
 80164f8:	b2a4      	uxth	r4, r4
 80164fa:	2c00      	cmp	r4, #0
 80164fc:	eba3 0309 	sub.w	r3, r3, r9
 8016500:	bf18      	it	ne
 8016502:	f04f 0c00 	movne.w	ip, #0
 8016506:	eb00 0043 	add.w	r0, r0, r3, lsl #1
 801650a:	e762      	b.n	80163d2 <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE16blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x126>
 801650c:	4b03      	ldr	r3, [pc, #12]	@ (801651c <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE16blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x270>)
 801650e:	6818      	ldr	r0, [r3, #0]
 8016510:	6803      	ldr	r3, [r0, #0]
 8016512:	6adb      	ldr	r3, [r3, #44]	@ 0x2c
 8016514:	4798      	blx	r3
 8016516:	b00f      	add	sp, #60	@ 0x3c
 8016518:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 801651c:	20002c5c 	.word	0x20002c5c
 8016520:	20002c56 	.word	0x20002c56

08016524 <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE14blitCopyRGB888EPKhS3_RKNS_4RectES6_h>:
 8016524:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8016528:	b093      	sub	sp, #76	@ 0x4c
 801652a:	461c      	mov	r4, r3
 801652c:	9205      	str	r2, [sp, #20]
 801652e:	f89d 2074 	ldrb.w	r2, [sp, #116]	@ 0x74
 8016532:	9101      	str	r1, [sp, #4]
 8016534:	9b1c      	ldr	r3, [sp, #112]	@ 0x70
 8016536:	9202      	str	r2, [sp, #8]
 8016538:	2a00      	cmp	r2, #0
 801653a:	f000 812c 	beq.w	8016796 <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE14blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x272>
 801653e:	6820      	ldr	r0, [r4, #0]
 8016540:	6861      	ldr	r1, [r4, #4]
 8016542:	aa0e      	add	r2, sp, #56	@ 0x38
 8016544:	c203      	stmia	r2!, {r0, r1}
 8016546:	6818      	ldr	r0, [r3, #0]
 8016548:	6859      	ldr	r1, [r3, #4]
 801654a:	aa10      	add	r2, sp, #64	@ 0x40
 801654c:	c203      	stmia	r2!, {r0, r1}
 801654e:	a80e      	add	r0, sp, #56	@ 0x38
 8016550:	f7f8 fc50 	bl	800edf4 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectE>
 8016554:	4621      	mov	r1, r4
 8016556:	a810      	add	r0, sp, #64	@ 0x40
 8016558:	f7f8 fc74 	bl	800ee44 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectERKS1_>
 801655c:	f9bd 603c 	ldrsh.w	r6, [sp, #60]	@ 0x3c
 8016560:	f9bd 503e 	ldrsh.w	r5, [sp, #62]	@ 0x3e
 8016564:	f8bd 0040 	ldrh.w	r0, [sp, #64]	@ 0x40
 8016568:	f5b6 6f80 	cmp.w	r6, #1024	@ 0x400
 801656c:	bfde      	ittt	le
 801656e:	b2b3      	uxthle	r3, r6
 8016570:	f44f 6280 	movle.w	r2, #1024	@ 0x400
 8016574:	fb92 f3f3 	sdivle	r3, r2, r3
 8016578:	f9bd 2042 	ldrsh.w	r2, [sp, #66]	@ 0x42
 801657c:	bfc8      	it	gt
 801657e:	2301      	movgt	r3, #1
 8016580:	fb92 f1f3 	sdiv	r1, r2, r3
 8016584:	fa1f fc81 	uxth.w	ip, r1
 8016588:	fb0c 2413 	mls	r4, ip, r3, r2
 801658c:	fb14 f406 	smulbb	r4, r4, r6
 8016590:	441d      	add	r5, r3
 8016592:	4404      	add	r4, r0
 8016594:	4661      	mov	r1, ip
 8016596:	3d01      	subs	r5, #1
 8016598:	b2a4      	uxth	r4, r4
 801659a:	fb95 f5f3 	sdiv	r5, r5, r3
 801659e:	b131      	cbz	r1, 80165ae <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE14blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x8a>
 80165a0:	9b05      	ldr	r3, [sp, #20]
 80165a2:	9901      	ldr	r1, [sp, #4]
 80165a4:	f853 302c 	ldr.w	r3, [r3, ip, lsl #2]
 80165a8:	ba1b      	rev	r3, r3
 80165aa:	4419      	add	r1, r3
 80165ac:	9101      	str	r1, [sp, #4]
 80165ae:	f8bd 3038 	ldrh.w	r3, [sp, #56]	@ 0x38
 80165b2:	f9bd b044 	ldrsh.w	fp, [sp, #68]	@ 0x44
 80165b6:	f9bd 6046 	ldrsh.w	r6, [sp, #70]	@ 0x46
 80165ba:	4418      	add	r0, r3
 80165bc:	f8bd 303a 	ldrh.w	r3, [sp, #58]	@ 0x3a
 80165c0:	f8ad 0040 	strh.w	r0, [sp, #64]	@ 0x40
 80165c4:	441a      	add	r2, r3
 80165c6:	4b75      	ldr	r3, [pc, #468]	@ (801679c <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE14blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x278>)
 80165c8:	f8ad 2042 	strh.w	r2, [sp, #66]	@ 0x42
 80165cc:	6818      	ldr	r0, [r3, #0]
 80165ce:	6803      	ldr	r3, [r0, #0]
 80165d0:	6a9b      	ldr	r3, [r3, #40]	@ 0x28
 80165d2:	4798      	blx	r3
 80165d4:	4972      	ldr	r1, [pc, #456]	@ (80167a0 <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE14blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x27c>)
 80165d6:	f9bd c040 	ldrsh.w	ip, [sp, #64]	@ 0x40
 80165da:	880b      	ldrh	r3, [r1, #0]
 80165dc:	f9bd 2042 	ldrsh.w	r2, [sp, #66]	@ 0x42
 80165e0:	910d      	str	r1, [sp, #52]	@ 0x34
 80165e2:	fb03 c202 	mla	r2, r3, r2, ip
 80165e6:	eb00 0042 	add.w	r0, r0, r2, lsl #1
 80165ea:	4373      	muls	r3, r6
 80165ec:	b2ad      	uxth	r5, r5
 80165ee:	eb00 0343 	add.w	r3, r0, r3, lsl #1
 80165f2:	00ad      	lsls	r5, r5, #2
 80165f4:	9308      	str	r3, [sp, #32]
 80165f6:	1d2b      	adds	r3, r5, #4
 80165f8:	9309      	str	r3, [sp, #36]	@ 0x24
 80165fa:	9b02      	ldr	r3, [sp, #8]
 80165fc:	f8bd 1008 	ldrh.w	r1, [sp, #8]
 8016600:	9106      	str	r1, [sp, #24]
 8016602:	43da      	mvns	r2, r3
 8016604:	2c00      	cmp	r4, #0
 8016606:	bf0c      	ite	eq
 8016608:	46dc      	moveq	ip, fp
 801660a:	f04f 0c00 	movne.w	ip, #0
 801660e:	2300      	movs	r3, #0
 8016610:	b2d2      	uxtb	r2, r2
 8016612:	fa1f fc8c 	uxth.w	ip, ip
 8016616:	9303      	str	r3, [sp, #12]
 8016618:	9207      	str	r2, [sp, #28]
 801661a:	9a08      	ldr	r2, [sp, #32]
 801661c:	4282      	cmp	r2, r0
 801661e:	f240 80b5 	bls.w	801678c <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE14blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x268>
 8016622:	b963      	cbnz	r3, 801663e <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE14blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x11a>
 8016624:	9b01      	ldr	r3, [sp, #4]
 8016626:	781a      	ldrb	r2, [r3, #0]
 8016628:	0993      	lsrs	r3, r2, #6
 801662a:	f002 023f 	and.w	r2, r2, #63	@ 0x3f
 801662e:	9203      	str	r2, [sp, #12]
 8016630:	1e5a      	subs	r2, r3, #1
 8016632:	2a02      	cmp	r2, #2
 8016634:	d815      	bhi.n	8016662 <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE14blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x13e>
 8016636:	9a01      	ldr	r2, [sp, #4]
 8016638:	3201      	adds	r2, #1
 801663a:	9201      	str	r2, [sp, #4]
 801663c:	b29b      	uxth	r3, r3
 801663e:	b1b4      	cbz	r4, 801666e <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE14blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x14a>
 8016640:	429c      	cmp	r4, r3
 8016642:	bf95      	itete	ls
 8016644:	1b1c      	subls	r4, r3, r4
 8016646:	1ae4      	subhi	r4, r4, r3
 8016648:	fa1f f884 	uxthls.w	r8, r4
 801664c:	b2a4      	uxthhi	r4, r4
 801664e:	bf87      	ittee	hi
 8016650:	4666      	movhi	r6, ip
 8016652:	f04f 0800 	movhi.w	r8, #0
 8016656:	fa1f f68b 	uxthls.w	r6, fp
 801665a:	2400      	movls	r4, #0
 801665c:	4643      	mov	r3, r8
 801665e:	46b4      	mov	ip, r6
 8016660:	e7db      	b.n	801661a <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE14blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0xf6>
 8016662:	9a01      	ldr	r2, [sp, #4]
 8016664:	9b01      	ldr	r3, [sp, #4]
 8016666:	3202      	adds	r2, #2
 8016668:	785b      	ldrb	r3, [r3, #1]
 801666a:	9201      	str	r2, [sp, #4]
 801666c:	e7e7      	b.n	801663e <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE14blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x11a>
 801666e:	2203      	movs	r2, #3
 8016670:	4615      	mov	r5, r2
 8016672:	9909      	ldr	r1, [sp, #36]	@ 0x24
 8016674:	9a03      	ldr	r2, [sp, #12]
 8016676:	fb15 1202 	smlabb	r2, r5, r2, r1
 801667a:	9905      	ldr	r1, [sp, #20]
 801667c:	4563      	cmp	r3, ip
 801667e:	eb01 0502 	add.w	r5, r1, r2
 8016682:	9902      	ldr	r1, [sp, #8]
 8016684:	bf29      	itett	cs
 8016686:	eba3 080c 	subcs.w	r8, r3, ip
 801668a:	ebac 0603 	subcc.w	r6, ip, r3
 801668e:	fa1f f888 	uxthcs.w	r8, r8
 8016692:	46e1      	movcs	r9, ip
 8016694:	bf2f      	iteee	cs
 8016696:	4626      	movcs	r6, r4
 8016698:	b2b6      	uxthcc	r6, r6
 801669a:	4699      	movcc	r9, r3
 801669c:	46a0      	movcc	r8, r4
 801669e:	29ff      	cmp	r1, #255	@ 0xff
 80166a0:	d04a      	beq.n	8016738 <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE14blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x214>
 80166a2:	9f06      	ldr	r7, [sp, #24]
 80166a4:	78a9      	ldrb	r1, [r5, #2]
 80166a6:	9004      	str	r0, [sp, #16]
 80166a8:	4379      	muls	r1, r7
 80166aa:	910a      	str	r1, [sp, #40]	@ 0x28
 80166ac:	7869      	ldrb	r1, [r5, #1]
 80166ae:	4379      	muls	r1, r7
 80166b0:	910b      	str	r1, [sp, #44]	@ 0x2c
 80166b2:	9905      	ldr	r1, [sp, #20]
 80166b4:	5c8a      	ldrb	r2, [r1, r2]
 80166b6:	437a      	muls	r2, r7
 80166b8:	920c      	str	r2, [sp, #48]	@ 0x30
 80166ba:	46ca      	mov	sl, r9
 80166bc:	f1ba 0f00 	cmp.w	sl, #0
 80166c0:	d03d      	beq.n	801673e <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE14blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x21a>
 80166c2:	9a04      	ldr	r2, [sp, #16]
 80166c4:	9f07      	ldr	r7, [sp, #28]
 80166c6:	8812      	ldrh	r2, [r2, #0]
 80166c8:	1215      	asrs	r5, r2, #8
 80166ca:	46be      	mov	lr, r7
 80166cc:	f005 05f8 	and.w	r5, r5, #248	@ 0xf8
 80166d0:	9f0a      	ldr	r7, [sp, #40]	@ 0x28
 80166d2:	10d1      	asrs	r1, r2, #3
 80166d4:	ea45 1555 	orr.w	r5, r5, r5, lsr #5
 80166d8:	fb05 750e 	mla	r5, r5, lr, r7
 80166dc:	f001 01fc 	and.w	r1, r1, #252	@ 0xfc
 80166e0:	9f0b      	ldr	r7, [sp, #44]	@ 0x2c
 80166e2:	00d2      	lsls	r2, r2, #3
 80166e4:	ea41 1191 	orr.w	r1, r1, r1, lsr #6
 80166e8:	fb01 710e 	mla	r1, r1, lr, r7
 80166ec:	b2d2      	uxtb	r2, r2
 80166ee:	9f0c      	ldr	r7, [sp, #48]	@ 0x30
 80166f0:	ea42 1252 	orr.w	r2, r2, r2, lsr #5
 80166f4:	b2ad      	uxth	r5, r5
 80166f6:	fb02 720e 	mla	r2, r2, lr, r7
 80166fa:	b292      	uxth	r2, r2
 80166fc:	f105 0e01 	add.w	lr, r5, #1
 8016700:	eb0e 2515 	add.w	r5, lr, r5, lsr #8
 8016704:	f102 0e01 	add.w	lr, r2, #1
 8016708:	eb0e 2212 	add.w	r2, lr, r2, lsr #8
 801670c:	b289      	uxth	r1, r1
 801670e:	f3c2 22c4 	ubfx	r2, r2, #11, #5
 8016712:	f405 4578 	and.w	r5, r5, #63488	@ 0xf800
 8016716:	4315      	orrs	r5, r2
 8016718:	1c4a      	adds	r2, r1, #1
 801671a:	eb02 2111 	add.w	r1, r2, r1, lsr #8
 801671e:	0949      	lsrs	r1, r1, #5
 8016720:	9a04      	ldr	r2, [sp, #16]
 8016722:	f401 61fc 	and.w	r1, r1, #2016	@ 0x7e0
 8016726:	430d      	orrs	r5, r1
 8016728:	f822 5b02 	strh.w	r5, [r2], #2
 801672c:	f10a 3aff 	add.w	sl, sl, #4294967295
 8016730:	9204      	str	r2, [sp, #16]
 8016732:	fa1f fa8a 	uxth.w	sl, sl
 8016736:	e7c1      	b.n	80166bc <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE14blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x198>
 8016738:	4649      	mov	r1, r9
 801673a:	4686      	mov	lr, r0
 801673c:	b999      	cbnz	r1, 8016766 <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE14blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x242>
 801673e:	4563      	cmp	r3, ip
 8016740:	eb00 0049 	add.w	r0, r0, r9, lsl #1
 8016744:	d38a      	bcc.n	801665c <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE14blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x138>
 8016746:	f8bd 403c 	ldrh.w	r4, [sp, #60]	@ 0x3c
 801674a:	9b0d      	ldr	r3, [sp, #52]	@ 0x34
 801674c:	fa1f f68b 	uxth.w	r6, fp
 8016750:	1ba4      	subs	r4, r4, r6
 8016752:	881b      	ldrh	r3, [r3, #0]
 8016754:	b2a4      	uxth	r4, r4
 8016756:	2c00      	cmp	r4, #0
 8016758:	eba3 030b 	sub.w	r3, r3, fp
 801675c:	bf18      	it	ne
 801675e:	2600      	movne	r6, #0
 8016760:	eb00 0043 	add.w	r0, r0, r3, lsl #1
 8016764:	e77a      	b.n	801665c <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE14blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x138>
 8016766:	78aa      	ldrb	r2, [r5, #2]
 8016768:	4f0e      	ldr	r7, [pc, #56]	@ (80167a4 <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE14blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x280>)
 801676a:	ea07 2a02 	and.w	sl, r7, r2, lsl #8
 801676e:	786a      	ldrb	r2, [r5, #1]
 8016770:	00d2      	lsls	r2, r2, #3
 8016772:	f402 62fc 	and.w	r2, r2, #2016	@ 0x7e0
 8016776:	ea4a 0202 	orr.w	r2, sl, r2
 801677a:	f895 a000 	ldrb.w	sl, [r5]
 801677e:	3901      	subs	r1, #1
 8016780:	ea42 02da 	orr.w	r2, r2, sl, lsr #3
 8016784:	f82e 2b02 	strh.w	r2, [lr], #2
 8016788:	b289      	uxth	r1, r1
 801678a:	e7d7      	b.n	801673c <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE14blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x218>
 801678c:	4b03      	ldr	r3, [pc, #12]	@ (801679c <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE14blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x278>)
 801678e:	6818      	ldr	r0, [r3, #0]
 8016790:	6803      	ldr	r3, [r0, #0]
 8016792:	6adb      	ldr	r3, [r3, #44]	@ 0x2c
 8016794:	4798      	blx	r3
 8016796:	b013      	add	sp, #76	@ 0x4c
 8016798:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 801679c:	20002c5c 	.word	0x20002c5c
 80167a0:	20002c56 	.word	0x20002c56
 80167a4:	fffff800 	.word	0xfffff800

080167a8 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW916blitCopyARGB8888EPKhS3_RKNS_4RectES6_h>:
 80167a8:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 80167ac:	b09d      	sub	sp, #116	@ 0x74
 80167ae:	e9cd 1211 	strd	r1, r2, [sp, #68]	@ 0x44
 80167b2:	f89d 209c 	ldrb.w	r2, [sp, #156]	@ 0x9c
 80167b6:	920e      	str	r2, [sp, #56]	@ 0x38
 80167b8:	461c      	mov	r4, r3
 80167ba:	4683      	mov	fp, r0
 80167bc:	9b26      	ldr	r3, [sp, #152]	@ 0x98
 80167be:	2a00      	cmp	r2, #0
 80167c0:	f000 81e0 	beq.w	8016b84 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW916blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x3dc>
 80167c4:	6820      	ldr	r0, [r4, #0]
 80167c6:	6861      	ldr	r1, [r4, #4]
 80167c8:	aa18      	add	r2, sp, #96	@ 0x60
 80167ca:	c203      	stmia	r2!, {r0, r1}
 80167cc:	6818      	ldr	r0, [r3, #0]
 80167ce:	6859      	ldr	r1, [r3, #4]
 80167d0:	aa1a      	add	r2, sp, #104	@ 0x68
 80167d2:	c203      	stmia	r2!, {r0, r1}
 80167d4:	a818      	add	r0, sp, #96	@ 0x60
 80167d6:	f7f8 fb0d 	bl	800edf4 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectE>
 80167da:	4621      	mov	r1, r4
 80167dc:	a81a      	add	r0, sp, #104	@ 0x68
 80167de:	f7f8 fb31 	bl	800ee44 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectERKS1_>
 80167e2:	f9bd 3064 	ldrsh.w	r3, [sp, #100]	@ 0x64
 80167e6:	f9bd 4066 	ldrsh.w	r4, [sp, #102]	@ 0x66
 80167ea:	f9bd 606e 	ldrsh.w	r6, [sp, #110]	@ 0x6e
 80167ee:	f5b3 6f80 	cmp.w	r3, #1024	@ 0x400
 80167f2:	bfd7      	itett	le
 80167f4:	b29a      	uxthle	r2, r3
 80167f6:	2201      	movgt	r2, #1
 80167f8:	f44f 6180 	movle.w	r1, #1024	@ 0x400
 80167fc:	fb91 f2f2 	sdivle	r2, r1, r2
 8016800:	9202      	str	r2, [sp, #8]
 8016802:	9802      	ldr	r0, [sp, #8]
 8016804:	f9bd 206a 	ldrsh.w	r2, [sp, #106]	@ 0x6a
 8016808:	fb92 f0f0 	sdiv	r0, r2, r0
 801680c:	b280      	uxth	r0, r0
 801680e:	900f      	str	r0, [sp, #60]	@ 0x3c
 8016810:	9902      	ldr	r1, [sp, #8]
 8016812:	9802      	ldr	r0, [sp, #8]
 8016814:	9d0f      	ldr	r5, [sp, #60]	@ 0x3c
 8016816:	440c      	add	r4, r1
 8016818:	fb05 2510 	mls	r5, r5, r0, r2
 801681c:	fb15 f503 	smulbb	r5, r5, r3
 8016820:	3c01      	subs	r4, #1
 8016822:	f8bd 3060 	ldrh.w	r3, [sp, #96]	@ 0x60
 8016826:	fb94 f4f1 	sdiv	r4, r4, r1
 801682a:	f8bd 1068 	ldrh.w	r1, [sp, #104]	@ 0x68
 801682e:	440d      	add	r5, r1
 8016830:	4419      	add	r1, r3
 8016832:	f8bd 3062 	ldrh.w	r3, [sp, #98]	@ 0x62
 8016836:	f8ad 1068 	strh.w	r1, [sp, #104]	@ 0x68
 801683a:	441a      	add	r2, r3
 801683c:	f9bd 306c 	ldrsh.w	r3, [sp, #108]	@ 0x6c
 8016840:	9306      	str	r3, [sp, #24]
 8016842:	4bb3      	ldr	r3, [pc, #716]	@ (8016b10 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW916blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x368>)
 8016844:	f8ad 206a 	strh.w	r2, [sp, #106]	@ 0x6a
 8016848:	6818      	ldr	r0, [r3, #0]
 801684a:	6803      	ldr	r3, [r0, #0]
 801684c:	6a9b      	ldr	r3, [r3, #40]	@ 0x28
 801684e:	4798      	blx	r3
 8016850:	4bb0      	ldr	r3, [pc, #704]	@ (8016b14 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW916blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x36c>)
 8016852:	f9bd 106a 	ldrsh.w	r1, [sp, #106]	@ 0x6a
 8016856:	881a      	ldrh	r2, [r3, #0]
 8016858:	f9bd 7068 	ldrsh.w	r7, [sp, #104]	@ 0x68
 801685c:	9316      	str	r3, [sp, #88]	@ 0x58
 801685e:	fb02 7101 	mla	r1, r2, r1, r7
 8016862:	3401      	adds	r4, #1
 8016864:	eb00 0841 	add.w	r8, r0, r1, lsl #1
 8016868:	b2a4      	uxth	r4, r4
 801686a:	4356      	muls	r6, r2
 801686c:	eb08 0246 	add.w	r2, r8, r6, lsl #1
 8016870:	00a4      	lsls	r4, r4, #2
 8016872:	920a      	str	r2, [sp, #40]	@ 0x28
 8016874:	1d22      	adds	r2, r4, #4
 8016876:	b2ad      	uxth	r5, r5
 8016878:	9213      	str	r2, [sp, #76]	@ 0x4c
 801687a:	4ba7      	ldr	r3, [pc, #668]	@ (8016b18 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW916blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x370>)
 801687c:	9a06      	ldr	r2, [sp, #24]
 801687e:	2d00      	cmp	r5, #0
 8016880:	bf0c      	ite	eq
 8016882:	4611      	moveq	r1, r2
 8016884:	2100      	movne	r1, #0
 8016886:	2200      	movs	r2, #0
 8016888:	eba3 030b 	sub.w	r3, r3, fp
 801688c:	b289      	uxth	r1, r1
 801688e:	920d      	str	r2, [sp, #52]	@ 0x34
 8016890:	9317      	str	r3, [sp, #92]	@ 0x5c
 8016892:	9a0f      	ldr	r2, [sp, #60]	@ 0x3c
 8016894:	9b0d      	ldr	r3, [sp, #52]	@ 0x34
 8016896:	fa12 f383 	uxtah	r3, r2, r3
 801689a:	9a12      	ldr	r2, [sp, #72]	@ 0x48
 801689c:	eb02 0383 	add.w	r3, r2, r3, lsl #2
 80168a0:	3304      	adds	r3, #4
 80168a2:	9308      	str	r3, [sp, #32]
 80168a4:	9b0a      	ldr	r3, [sp, #40]	@ 0x28
 80168a6:	4543      	cmp	r3, r8
 80168a8:	f240 8167 	bls.w	8016b7a <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW916blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x3d2>
 80168ac:	9a02      	ldr	r2, [sp, #8]
 80168ae:	f8bd 3064 	ldrh.w	r3, [sp, #100]	@ 0x64
 80168b2:	fbb5 f3f3 	udiv	r3, r5, r3
 80168b6:	1ad3      	subs	r3, r2, r3
 80168b8:	b29b      	uxth	r3, r3
 80168ba:	9314      	str	r3, [sp, #80]	@ 0x50
 80168bc:	9b08      	ldr	r3, [sp, #32]
 80168be:	9808      	ldr	r0, [sp, #32]
 80168c0:	785a      	ldrb	r2, [r3, #1]
 80168c2:	789b      	ldrb	r3, [r3, #2]
 80168c4:	7800      	ldrb	r0, [r0, #0]
 80168c6:	9010      	str	r0, [sp, #64]	@ 0x40
 80168c8:	021b      	lsls	r3, r3, #8
 80168ca:	ea43 4302 	orr.w	r3, r3, r2, lsl #16
 80168ce:	9a08      	ldr	r2, [sp, #32]
 80168d0:	78d2      	ldrb	r2, [r2, #3]
 80168d2:	4313      	orrs	r3, r2
 80168d4:	9a11      	ldr	r2, [sp, #68]	@ 0x44
 80168d6:	3001      	adds	r0, #1
 80168d8:	441a      	add	r2, r3
 80168da:	9007      	str	r0, [sp, #28]
 80168dc:	1c50      	adds	r0, r2, #1
 80168de:	9005      	str	r0, [sp, #20]
 80168e0:	7852      	ldrb	r2, [r2, #1]
 80168e2:	9811      	ldr	r0, [sp, #68]	@ 0x44
 80168e4:	0212      	lsls	r2, r2, #8
 80168e6:	5cc3      	ldrb	r3, [r0, r3]
 80168e8:	f402 72ff 	and.w	r2, r2, #510	@ 0x1fe
 80168ec:	431a      	orrs	r2, r3
 80168ee:	b293      	uxth	r3, r2
 80168f0:	930b      	str	r3, [sp, #44]	@ 0x2c
 80168f2:	2300      	movs	r3, #0
 80168f4:	9309      	str	r3, [sp, #36]	@ 0x24
 80168f6:	2301      	movs	r3, #1
 80168f8:	9301      	str	r3, [sp, #4]
 80168fa:	9304      	str	r3, [sp, #16]
 80168fc:	2300      	movs	r3, #0
 80168fe:	f88b 2804 	strb.w	r2, [fp, #2052]	@ 0x804
 8016902:	9303      	str	r3, [sp, #12]
 8016904:	f04f 0e01 	mov.w	lr, #1
 8016908:	2d00      	cmp	r5, #0
 801690a:	d07c      	beq.n	8016a06 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW916blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x25e>
 801690c:	45ae      	cmp	lr, r5
 801690e:	d26b      	bcs.n	80169e8 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW916blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x240>
 8016910:	9b0a      	ldr	r3, [sp, #40]	@ 0x28
 8016912:	eba5 050e 	sub.w	r5, r5, lr
 8016916:	4543      	cmp	r3, r8
 8016918:	b2ad      	uxth	r5, r5
 801691a:	460c      	mov	r4, r1
 801691c:	d802      	bhi.n	8016924 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW916blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x17c>
 801691e:	e070      	b.n	8016a02 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW916blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x25a>
 8016920:	2b00      	cmp	r3, #0
 8016922:	d15c      	bne.n	80169de <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW916blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x236>
 8016924:	9b05      	ldr	r3, [sp, #20]
 8016926:	9a04      	ldr	r2, [sp, #16]
 8016928:	785b      	ldrb	r3, [r3, #1]
 801692a:	9904      	ldr	r1, [sp, #16]
 801692c:	f1c2 0207 	rsb	r2, r2, #7
 8016930:	4093      	lsls	r3, r2
 8016932:	005b      	lsls	r3, r3, #1
 8016934:	f403 72ff 	and.w	r2, r3, #510	@ 0x1fe
 8016938:	9b05      	ldr	r3, [sp, #20]
 801693a:	781b      	ldrb	r3, [r3, #0]
 801693c:	410b      	asrs	r3, r1
 801693e:	3101      	adds	r1, #1
 8016940:	b2c9      	uxtb	r1, r1
 8016942:	2908      	cmp	r1, #8
 8016944:	9104      	str	r1, [sp, #16]
 8016946:	9905      	ldr	r1, [sp, #20]
 8016948:	bf0a      	itet	eq
 801694a:	3102      	addeq	r1, #2
 801694c:	3101      	addne	r1, #1
 801694e:	9105      	streq	r1, [sp, #20]
 8016950:	b2db      	uxtb	r3, r3
 8016952:	bf0a      	itet	eq
 8016954:	2100      	moveq	r1, #0
 8016956:	9105      	strne	r1, [sp, #20]
 8016958:	9104      	streq	r1, [sp, #16]
 801695a:	4313      	orrs	r3, r2
 801695c:	9910      	ldr	r1, [sp, #64]	@ 0x40
 801695e:	b29a      	uxth	r2, r3
 8016960:	4291      	cmp	r1, r2
 8016962:	d30a      	bcc.n	801697a <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW916blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x1d2>
 8016964:	f88b 3804 	strb.w	r3, [fp, #2052]	@ 0x804
 8016968:	2301      	movs	r3, #1
 801696a:	9907      	ldr	r1, [sp, #28]
 801696c:	f5b1 7f00 	cmp.w	r1, #512	@ 0x200
 8016970:	d30f      	bcc.n	8016992 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW916blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x1ea>
 8016972:	2100      	movs	r1, #0
 8016974:	9301      	str	r3, [sp, #4]
 8016976:	9103      	str	r1, [sp, #12]
 8016978:	e032      	b.n	80169e0 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW916blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x238>
 801697a:	9b07      	ldr	r3, [sp, #28]
 801697c:	429a      	cmp	r2, r3
 801697e:	d318      	bcc.n	80169b2 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW916blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x20a>
 8016980:	9b01      	ldr	r3, [sp, #4]
 8016982:	f89b 1804 	ldrb.w	r1, [fp, #2052]	@ 0x804
 8016986:	445b      	add	r3, fp
 8016988:	f883 1804 	strb.w	r1, [r3, #2052]	@ 0x804
 801698c:	9b01      	ldr	r3, [sp, #4]
 801698e:	3301      	adds	r3, #1
 8016990:	b29b      	uxth	r3, r3
 8016992:	9907      	ldr	r1, [sp, #28]
 8016994:	f89b 0804 	ldrb.w	r0, [fp, #2052]	@ 0x804
 8016998:	eb0b 0181 	add.w	r1, fp, r1, lsl #2
 801699c:	7108      	strb	r0, [r1, #4]
 801699e:	980b      	ldr	r0, [sp, #44]	@ 0x2c
 80169a0:	80c8      	strh	r0, [r1, #6]
 80169a2:	9801      	ldr	r0, [sp, #4]
 80169a4:	3001      	adds	r0, #1
 80169a6:	7148      	strb	r0, [r1, #5]
 80169a8:	9907      	ldr	r1, [sp, #28]
 80169aa:	3101      	adds	r1, #1
 80169ac:	b289      	uxth	r1, r1
 80169ae:	9107      	str	r1, [sp, #28]
 80169b0:	e7df      	b.n	8016972 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW916blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x1ca>
 80169b2:	eb0b 0382 	add.w	r3, fp, r2, lsl #2
 80169b6:	4611      	mov	r1, r2
 80169b8:	795b      	ldrb	r3, [r3, #5]
 80169ba:	f603 0004 	addw	r0, r3, #2052	@ 0x804
 80169be:	4458      	add	r0, fp
 80169c0:	9e17      	ldr	r6, [sp, #92]	@ 0x5c
 80169c2:	4406      	add	r6, r0
 80169c4:	2e00      	cmp	r6, #0
 80169c6:	dd06      	ble.n	80169d6 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW916blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x22e>
 80169c8:	eb0b 0181 	add.w	r1, fp, r1, lsl #2
 80169cc:	790e      	ldrb	r6, [r1, #4]
 80169ce:	f800 6d01 	strb.w	r6, [r0, #-1]!
 80169d2:	88c9      	ldrh	r1, [r1, #6]
 80169d4:	e7f4      	b.n	80169c0 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW916blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x218>
 80169d6:	f88b 1804 	strb.w	r1, [fp, #2052]	@ 0x804
 80169da:	b29b      	uxth	r3, r3
 80169dc:	e7c5      	b.n	801696a <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW916blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x1c2>
 80169de:	9a0b      	ldr	r2, [sp, #44]	@ 0x2c
 80169e0:	920b      	str	r2, [sp, #44]	@ 0x2c
 80169e2:	4621      	mov	r1, r4
 80169e4:	469e      	mov	lr, r3
 80169e6:	e78f      	b.n	8016908 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW916blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x160>
 80169e8:	9a03      	ldr	r2, [sp, #12]
 80169ea:	f8bd 4018 	ldrh.w	r4, [sp, #24]
 80169ee:	442a      	add	r2, r5
 80169f0:	ebae 0305 	sub.w	r3, lr, r5
 80169f4:	b292      	uxth	r2, r2
 80169f6:	b29b      	uxth	r3, r3
 80169f8:	9203      	str	r2, [sp, #12]
 80169fa:	2500      	movs	r5, #0
 80169fc:	9a0a      	ldr	r2, [sp, #40]	@ 0x28
 80169fe:	4542      	cmp	r2, r8
 8016a00:	d88e      	bhi.n	8016920 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW916blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x178>
 8016a02:	4621      	mov	r1, r4
 8016a04:	e74e      	b.n	80168a4 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW916blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0xfc>
 8016a06:	458e      	cmp	lr, r1
 8016a08:	bf29      	itett	cs
 8016a0a:	ebae 0301 	subcs.w	r3, lr, r1
 8016a0e:	eba1 040e 	subcc.w	r4, r1, lr
 8016a12:	b29b      	uxthcs	r3, r3
 8016a14:	910c      	strcs	r1, [sp, #48]	@ 0x30
 8016a16:	bf2f      	iteee	cs
 8016a18:	462c      	movcs	r4, r5
 8016a1a:	b2a4      	uxthcc	r4, r4
 8016a1c:	f8cd e030 	strcc.w	lr, [sp, #48]	@ 0x30
 8016a20:	462b      	movcc	r3, r5
 8016a22:	f04f 0900 	mov.w	r9, #0
 8016a26:	9a03      	ldr	r2, [sp, #12]
 8016a28:	980c      	ldr	r0, [sp, #48]	@ 0x30
 8016a2a:	444a      	add	r2, r9
 8016a2c:	4548      	cmp	r0, r9
 8016a2e:	b292      	uxth	r2, r2
 8016a30:	d074      	beq.n	8016b1c <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW916blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x374>
 8016a32:	445a      	add	r2, fp
 8016a34:	2004      	movs	r0, #4
 8016a36:	4605      	mov	r5, r0
 8016a38:	f892 2804 	ldrb.w	r2, [r2, #2052]	@ 0x804
 8016a3c:	9813      	ldr	r0, [sp, #76]	@ 0x4c
 8016a3e:	fb15 0202 	smlabb	r2, r5, r2, r0
 8016a42:	9812      	ldr	r0, [sp, #72]	@ 0x48
 8016a44:	5880      	ldr	r0, [r0, r2]
 8016a46:	ea5f 6a10 	movs.w	sl, r0, lsr #24
 8016a4a:	d014      	beq.n	8016a76 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW916blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x2ce>
 8016a4c:	f1ba 0fff 	cmp.w	sl, #255	@ 0xff
 8016a50:	ea4f 2510 	mov.w	r5, r0, lsr #8
 8016a54:	d112      	bne.n	8016a7c <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW916blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x2d4>
 8016a56:	9a0e      	ldr	r2, [sp, #56]	@ 0x38
 8016a58:	2aff      	cmp	r2, #255	@ 0xff
 8016a5a:	d10f      	bne.n	8016a7c <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW916blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x2d4>
 8016a5c:	0942      	lsrs	r2, r0, #5
 8016a5e:	f425 65ff 	bic.w	r5, r5, #2040	@ 0x7f8
 8016a62:	f402 62fc 	and.w	r2, r2, #2016	@ 0x7e0
 8016a66:	f025 0507 	bic.w	r5, r5, #7
 8016a6a:	4315      	orrs	r5, r2
 8016a6c:	f3c0 00c4 	ubfx	r0, r0, #3, #5
 8016a70:	4305      	orrs	r5, r0
 8016a72:	f828 5019 	strh.w	r5, [r8, r9, lsl #1]
 8016a76:	f109 0901 	add.w	r9, r9, #1
 8016a7a:	e7d4      	b.n	8016a26 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW916blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x27e>
 8016a7c:	f838 c019 	ldrh.w	ip, [r8, r9, lsl #1]
 8016a80:	ea4f 06ec 	mov.w	r6, ip, asr #3
 8016a84:	f006 02fc 	and.w	r2, r6, #252	@ 0xfc
 8016a88:	9215      	str	r2, [sp, #84]	@ 0x54
 8016a8a:	9a0e      	ldr	r2, [sp, #56]	@ 0x38
 8016a8c:	fb02 fa0a 	mul.w	sl, r2, sl
 8016a90:	f10a 0201 	add.w	r2, sl, #1
 8016a94:	eb02 222a 	add.w	r2, r2, sl, asr #8
 8016a98:	ea4f 272c 	mov.w	r7, ip, asr #8
 8016a9c:	1212      	asrs	r2, r2, #8
 8016a9e:	fa1f fa82 	uxth.w	sl, r2
 8016aa2:	f3c0 4607 	ubfx	r6, r0, #16, #8
 8016aa6:	f007 07f8 	and.w	r7, r7, #248	@ 0xf8
 8016aaa:	ea4f 0ccc 	mov.w	ip, ip, lsl #3
 8016aae:	43d2      	mvns	r2, r2
 8016ab0:	b2d2      	uxtb	r2, r2
 8016ab2:	fb16 f60a 	smulbb	r6, r6, sl
 8016ab6:	fa5f fc8c 	uxtb.w	ip, ip
 8016aba:	ea47 1757 	orr.w	r7, r7, r7, lsr #5
 8016abe:	b2c0      	uxtb	r0, r0
 8016ac0:	fb07 6702 	mla	r7, r7, r2, r6
 8016ac4:	ea4c 1c5c 	orr.w	ip, ip, ip, lsr #5
 8016ac8:	9e15      	ldr	r6, [sp, #84]	@ 0x54
 8016aca:	fb10 f00a 	smulbb	r0, r0, sl
 8016ace:	fb0c 0002 	mla	r0, ip, r2, r0
 8016ad2:	b2ed      	uxtb	r5, r5
 8016ad4:	b2bf      	uxth	r7, r7
 8016ad6:	fb15 f50a 	smulbb	r5, r5, sl
 8016ada:	b280      	uxth	r0, r0
 8016adc:	ea46 1696 	orr.w	r6, r6, r6, lsr #6
 8016ae0:	fb06 5602 	mla	r6, r6, r2, r5
 8016ae4:	1c7a      	adds	r2, r7, #1
 8016ae6:	1c45      	adds	r5, r0, #1
 8016ae8:	eb02 2717 	add.w	r7, r2, r7, lsr #8
 8016aec:	eb05 2510 	add.w	r5, r5, r0, lsr #8
 8016af0:	b2b6      	uxth	r6, r6
 8016af2:	f3c5 25c4 	ubfx	r5, r5, #11, #5
 8016af6:	f407 4778 	and.w	r7, r7, #63488	@ 0xf800
 8016afa:	432f      	orrs	r7, r5
 8016afc:	1c75      	adds	r5, r6, #1
 8016afe:	eb05 2516 	add.w	r5, r5, r6, lsr #8
 8016b02:	096d      	lsrs	r5, r5, #5
 8016b04:	f405 65fc 	and.w	r5, r5, #2016	@ 0x7e0
 8016b08:	432f      	orrs	r7, r5
 8016b0a:	f828 7019 	strh.w	r7, [r8, r9, lsl #1]
 8016b0e:	e7b2      	b.n	8016a76 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW916blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x2ce>
 8016b10:	20002c5c 	.word	0x20002c5c
 8016b14:	20002c56 	.word	0x20002c56
 8016b18:	fffff7fb 	.word	0xfffff7fb
 8016b1c:	9203      	str	r2, [sp, #12]
 8016b1e:	9a0c      	ldr	r2, [sp, #48]	@ 0x30
 8016b20:	458e      	cmp	lr, r1
 8016b22:	eb08 0842 	add.w	r8, r8, r2, lsl #1
 8016b26:	f4ff af68 	bcc.w	80169fa <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW916blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x252>
 8016b2a:	9a16      	ldr	r2, [sp, #88]	@ 0x58
 8016b2c:	9906      	ldr	r1, [sp, #24]
 8016b2e:	8812      	ldrh	r2, [r2, #0]
 8016b30:	1a52      	subs	r2, r2, r1
 8016b32:	eb08 0842 	add.w	r8, r8, r2, lsl #1
 8016b36:	9a09      	ldr	r2, [sp, #36]	@ 0x24
 8016b38:	9914      	ldr	r1, [sp, #80]	@ 0x50
 8016b3a:	3201      	adds	r2, #1
 8016b3c:	428a      	cmp	r2, r1
 8016b3e:	9209      	str	r2, [sp, #36]	@ 0x24
 8016b40:	d111      	bne.n	8016b66 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW916blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x3be>
 8016b42:	f8bd 5068 	ldrh.w	r5, [sp, #104]	@ 0x68
 8016b46:	f8bd 9060 	ldrh.w	r9, [sp, #96]	@ 0x60
 8016b4a:	9b06      	ldr	r3, [sp, #24]
 8016b4c:	eba5 0509 	sub.w	r5, r5, r9
 8016b50:	b2ad      	uxth	r5, r5
 8016b52:	2d00      	cmp	r5, #0
 8016b54:	bf08      	it	eq
 8016b56:	4619      	moveq	r1, r3
 8016b58:	9b0d      	ldr	r3, [sp, #52]	@ 0x34
 8016b5a:	bf18      	it	ne
 8016b5c:	2100      	movne	r1, #0
 8016b5e:	3301      	adds	r3, #1
 8016b60:	930d      	str	r3, [sp, #52]	@ 0x34
 8016b62:	b289      	uxth	r1, r1
 8016b64:	e695      	b.n	8016892 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW916blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0xea>
 8016b66:	f8bd 4018 	ldrh.w	r4, [sp, #24]
 8016b6a:	f8bd 5064 	ldrh.w	r5, [sp, #100]	@ 0x64
 8016b6e:	1b2d      	subs	r5, r5, r4
 8016b70:	b2ad      	uxth	r5, r5
 8016b72:	2d00      	cmp	r5, #0
 8016b74:	bf18      	it	ne
 8016b76:	2400      	movne	r4, #0
 8016b78:	e740      	b.n	80169fc <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW916blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x254>
 8016b7a:	4b04      	ldr	r3, [pc, #16]	@ (8016b8c <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW916blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x3e4>)
 8016b7c:	6818      	ldr	r0, [r3, #0]
 8016b7e:	6803      	ldr	r3, [r0, #0]
 8016b80:	6adb      	ldr	r3, [r3, #44]	@ 0x2c
 8016b82:	4798      	blx	r3
 8016b84:	b01d      	add	sp, #116	@ 0x74
 8016b86:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 8016b8a:	bf00      	nop
 8016b8c:	20002c5c 	.word	0x20002c5c

08016b90 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB888EPKhS3_RKNS_4RectES6_h>:
 8016b90:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8016b94:	b09f      	sub	sp, #124	@ 0x7c
 8016b96:	e9cd 1213 	strd	r1, r2, [sp, #76]	@ 0x4c
 8016b9a:	f89d 20a4 	ldrb.w	r2, [sp, #164]	@ 0xa4
 8016b9e:	920a      	str	r2, [sp, #40]	@ 0x28
 8016ba0:	461d      	mov	r5, r3
 8016ba2:	4604      	mov	r4, r0
 8016ba4:	9b28      	ldr	r3, [sp, #160]	@ 0xa0
 8016ba6:	2a00      	cmp	r2, #0
 8016ba8:	f000 81fa 	beq.w	8016fa0 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x410>
 8016bac:	6828      	ldr	r0, [r5, #0]
 8016bae:	6869      	ldr	r1, [r5, #4]
 8016bb0:	aa1a      	add	r2, sp, #104	@ 0x68
 8016bb2:	c203      	stmia	r2!, {r0, r1}
 8016bb4:	6818      	ldr	r0, [r3, #0]
 8016bb6:	6859      	ldr	r1, [r3, #4]
 8016bb8:	aa1c      	add	r2, sp, #112	@ 0x70
 8016bba:	c203      	stmia	r2!, {r0, r1}
 8016bbc:	a81a      	add	r0, sp, #104	@ 0x68
 8016bbe:	f7f8 f919 	bl	800edf4 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectE>
 8016bc2:	4629      	mov	r1, r5
 8016bc4:	a81c      	add	r0, sp, #112	@ 0x70
 8016bc6:	f7f8 f93d 	bl	800ee44 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectERKS1_>
 8016bca:	f9bd 306c 	ldrsh.w	r3, [sp, #108]	@ 0x6c
 8016bce:	f9bd 606e 	ldrsh.w	r6, [sp, #110]	@ 0x6e
 8016bd2:	f9bd 7076 	ldrsh.w	r7, [sp, #118]	@ 0x76
 8016bd6:	f5b3 6f80 	cmp.w	r3, #1024	@ 0x400
 8016bda:	bfd7      	itett	le
 8016bdc:	b29a      	uxthle	r2, r3
 8016bde:	2201      	movgt	r2, #1
 8016be0:	f44f 6180 	movle.w	r1, #1024	@ 0x400
 8016be4:	fb91 f2f2 	sdivle	r2, r1, r2
 8016be8:	9201      	str	r2, [sp, #4]
 8016bea:	9801      	ldr	r0, [sp, #4]
 8016bec:	f9bd 2072 	ldrsh.w	r2, [sp, #114]	@ 0x72
 8016bf0:	fb92 f0f0 	sdiv	r0, r2, r0
 8016bf4:	b280      	uxth	r0, r0
 8016bf6:	9010      	str	r0, [sp, #64]	@ 0x40
 8016bf8:	9901      	ldr	r1, [sp, #4]
 8016bfa:	9801      	ldr	r0, [sp, #4]
 8016bfc:	9d10      	ldr	r5, [sp, #64]	@ 0x40
 8016bfe:	440e      	add	r6, r1
 8016c00:	fb05 2510 	mls	r5, r5, r0, r2
 8016c04:	fb15 f503 	smulbb	r5, r5, r3
 8016c08:	3e01      	subs	r6, #1
 8016c0a:	f8bd 3068 	ldrh.w	r3, [sp, #104]	@ 0x68
 8016c0e:	fb96 f6f1 	sdiv	r6, r6, r1
 8016c12:	f8bd 1070 	ldrh.w	r1, [sp, #112]	@ 0x70
 8016c16:	440d      	add	r5, r1
 8016c18:	4419      	add	r1, r3
 8016c1a:	f8bd 306a 	ldrh.w	r3, [sp, #106]	@ 0x6a
 8016c1e:	f8ad 1070 	strh.w	r1, [sp, #112]	@ 0x70
 8016c22:	441a      	add	r2, r3
 8016c24:	f9bd 3074 	ldrsh.w	r3, [sp, #116]	@ 0x74
 8016c28:	9304      	str	r3, [sp, #16]
 8016c2a:	4b96      	ldr	r3, [pc, #600]	@ (8016e84 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x2f4>)
 8016c2c:	f8ad 2072 	strh.w	r2, [sp, #114]	@ 0x72
 8016c30:	6818      	ldr	r0, [r3, #0]
 8016c32:	6803      	ldr	r3, [r0, #0]
 8016c34:	6a9b      	ldr	r3, [r3, #40]	@ 0x28
 8016c36:	4798      	blx	r3
 8016c38:	4b93      	ldr	r3, [pc, #588]	@ (8016e88 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x2f8>)
 8016c3a:	f9bd 1072 	ldrsh.w	r1, [sp, #114]	@ 0x72
 8016c3e:	881a      	ldrh	r2, [r3, #0]
 8016c40:	f9bd c070 	ldrsh.w	ip, [sp, #112]	@ 0x70
 8016c44:	9318      	str	r3, [sp, #96]	@ 0x60
 8016c46:	fb02 c101 	mla	r1, r2, r1, ip
 8016c4a:	eb00 0b41 	add.w	fp, r0, r1, lsl #1
 8016c4e:	4357      	muls	r7, r2
 8016c50:	eb0b 0247 	add.w	r2, fp, r7, lsl #1
 8016c54:	3601      	adds	r6, #1
 8016c56:	920b      	str	r2, [sp, #44]	@ 0x2c
 8016c58:	9a14      	ldr	r2, [sp, #80]	@ 0x50
 8016c5a:	4b8c      	ldr	r3, [pc, #560]	@ (8016e8c <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x2fc>)
 8016c5c:	b2b6      	uxth	r6, r6
 8016c5e:	eb02 0686 	add.w	r6, r2, r6, lsl #2
 8016c62:	1d32      	adds	r2, r6, #4
 8016c64:	9206      	str	r2, [sp, #24]
 8016c66:	9a0a      	ldr	r2, [sp, #40]	@ 0x28
 8016c68:	43d2      	mvns	r2, r2
 8016c6a:	b2d2      	uxtb	r2, r2
 8016c6c:	b2ad      	uxth	r5, r5
 8016c6e:	9215      	str	r2, [sp, #84]	@ 0x54
 8016c70:	9a04      	ldr	r2, [sp, #16]
 8016c72:	2d00      	cmp	r5, #0
 8016c74:	bf0c      	ite	eq
 8016c76:	4611      	moveq	r1, r2
 8016c78:	2100      	movne	r1, #0
 8016c7a:	2200      	movs	r2, #0
 8016c7c:	1b1b      	subs	r3, r3, r4
 8016c7e:	b289      	uxth	r1, r1
 8016c80:	920d      	str	r2, [sp, #52]	@ 0x34
 8016c82:	9319      	str	r3, [sp, #100]	@ 0x64
 8016c84:	9a10      	ldr	r2, [sp, #64]	@ 0x40
 8016c86:	9b0d      	ldr	r3, [sp, #52]	@ 0x34
 8016c88:	fa12 f383 	uxtah	r3, r2, r3
 8016c8c:	9a14      	ldr	r2, [sp, #80]	@ 0x50
 8016c8e:	eb02 0383 	add.w	r3, r2, r3, lsl #2
 8016c92:	3304      	adds	r3, #4
 8016c94:	9307      	str	r3, [sp, #28]
 8016c96:	9b0b      	ldr	r3, [sp, #44]	@ 0x2c
 8016c98:	455b      	cmp	r3, fp
 8016c9a:	f240 817c 	bls.w	8016f96 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x406>
 8016c9e:	9a01      	ldr	r2, [sp, #4]
 8016ca0:	f8bd 306c 	ldrh.w	r3, [sp, #108]	@ 0x6c
 8016ca4:	fbb5 f3f3 	udiv	r3, r5, r3
 8016ca8:	1ad3      	subs	r3, r2, r3
 8016caa:	b29b      	uxth	r3, r3
 8016cac:	9316      	str	r3, [sp, #88]	@ 0x58
 8016cae:	9b07      	ldr	r3, [sp, #28]
 8016cb0:	9807      	ldr	r0, [sp, #28]
 8016cb2:	785a      	ldrb	r2, [r3, #1]
 8016cb4:	789b      	ldrb	r3, [r3, #2]
 8016cb6:	7800      	ldrb	r0, [r0, #0]
 8016cb8:	9011      	str	r0, [sp, #68]	@ 0x44
 8016cba:	021b      	lsls	r3, r3, #8
 8016cbc:	ea43 4302 	orr.w	r3, r3, r2, lsl #16
 8016cc0:	9a07      	ldr	r2, [sp, #28]
 8016cc2:	78d2      	ldrb	r2, [r2, #3]
 8016cc4:	4313      	orrs	r3, r2
 8016cc6:	9a13      	ldr	r2, [sp, #76]	@ 0x4c
 8016cc8:	3001      	adds	r0, #1
 8016cca:	441a      	add	r2, r3
 8016ccc:	9005      	str	r0, [sp, #20]
 8016cce:	1c50      	adds	r0, r2, #1
 8016cd0:	9003      	str	r0, [sp, #12]
 8016cd2:	7852      	ldrb	r2, [r2, #1]
 8016cd4:	9813      	ldr	r0, [sp, #76]	@ 0x4c
 8016cd6:	0212      	lsls	r2, r2, #8
 8016cd8:	5cc3      	ldrb	r3, [r0, r3]
 8016cda:	f402 72ff 	and.w	r2, r2, #510	@ 0x1fe
 8016cde:	431a      	orrs	r2, r3
 8016ce0:	b293      	uxth	r3, r2
 8016ce2:	930c      	str	r3, [sp, #48]	@ 0x30
 8016ce4:	2300      	movs	r3, #0
 8016ce6:	f884 2804 	strb.w	r2, [r4, #2052]	@ 0x804
 8016cea:	9308      	str	r3, [sp, #32]
 8016cec:	461a      	mov	r2, r3
 8016cee:	f8bd 3028 	ldrh.w	r3, [sp, #40]	@ 0x28
 8016cf2:	930e      	str	r3, [sp, #56]	@ 0x38
 8016cf4:	f04f 0801 	mov.w	r8, #1
 8016cf8:	f8bd 3054 	ldrh.w	r3, [sp, #84]	@ 0x54
 8016cfc:	f8cd 8008 	str.w	r8, [sp, #8]
 8016d00:	46c4      	mov	ip, r8
 8016d02:	930f      	str	r3, [sp, #60]	@ 0x3c
 8016d04:	2d00      	cmp	r5, #0
 8016d06:	d07c      	beq.n	8016e02 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x272>
 8016d08:	45ac      	cmp	ip, r5
 8016d0a:	d26c      	bcs.n	8016de6 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x256>
 8016d0c:	9b0b      	ldr	r3, [sp, #44]	@ 0x2c
 8016d0e:	eba5 050c 	sub.w	r5, r5, ip
 8016d12:	455b      	cmp	r3, fp
 8016d14:	b2ad      	uxth	r5, r5
 8016d16:	4608      	mov	r0, r1
 8016d18:	d802      	bhi.n	8016d20 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x190>
 8016d1a:	e070      	b.n	8016dfe <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x26e>
 8016d1c:	2b00      	cmp	r3, #0
 8016d1e:	d15c      	bne.n	8016dda <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x24a>
 8016d20:	9b03      	ldr	r3, [sp, #12]
 8016d22:	9a02      	ldr	r2, [sp, #8]
 8016d24:	785b      	ldrb	r3, [r3, #1]
 8016d26:	9902      	ldr	r1, [sp, #8]
 8016d28:	f1c2 0207 	rsb	r2, r2, #7
 8016d2c:	4093      	lsls	r3, r2
 8016d2e:	005b      	lsls	r3, r3, #1
 8016d30:	f403 72ff 	and.w	r2, r3, #510	@ 0x1fe
 8016d34:	9b03      	ldr	r3, [sp, #12]
 8016d36:	781b      	ldrb	r3, [r3, #0]
 8016d38:	410b      	asrs	r3, r1
 8016d3a:	3101      	adds	r1, #1
 8016d3c:	b2c9      	uxtb	r1, r1
 8016d3e:	2908      	cmp	r1, #8
 8016d40:	9102      	str	r1, [sp, #8]
 8016d42:	9903      	ldr	r1, [sp, #12]
 8016d44:	bf0a      	itet	eq
 8016d46:	3102      	addeq	r1, #2
 8016d48:	3101      	addne	r1, #1
 8016d4a:	9103      	streq	r1, [sp, #12]
 8016d4c:	b2db      	uxtb	r3, r3
 8016d4e:	bf0a      	itet	eq
 8016d50:	2100      	moveq	r1, #0
 8016d52:	9103      	strne	r1, [sp, #12]
 8016d54:	9102      	streq	r1, [sp, #8]
 8016d56:	4313      	orrs	r3, r2
 8016d58:	9911      	ldr	r1, [sp, #68]	@ 0x44
 8016d5a:	b29a      	uxth	r2, r3
 8016d5c:	4291      	cmp	r1, r2
 8016d5e:	d30a      	bcc.n	8016d76 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x1e6>
 8016d60:	f884 3804 	strb.w	r3, [r4, #2052]	@ 0x804
 8016d64:	2301      	movs	r3, #1
 8016d66:	9905      	ldr	r1, [sp, #20]
 8016d68:	f5b1 7f00 	cmp.w	r1, #512	@ 0x200
 8016d6c:	d30f      	bcc.n	8016d8e <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x1fe>
 8016d6e:	2100      	movs	r1, #0
 8016d70:	4698      	mov	r8, r3
 8016d72:	9100      	str	r1, [sp, #0]
 8016d74:	e032      	b.n	8016ddc <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x24c>
 8016d76:	9b05      	ldr	r3, [sp, #20]
 8016d78:	429a      	cmp	r2, r3
 8016d7a:	d318      	bcc.n	8016dae <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x21e>
 8016d7c:	eb04 0308 	add.w	r3, r4, r8
 8016d80:	f894 1804 	ldrb.w	r1, [r4, #2052]	@ 0x804
 8016d84:	f883 1804 	strb.w	r1, [r3, #2052]	@ 0x804
 8016d88:	f108 0301 	add.w	r3, r8, #1
 8016d8c:	b29b      	uxth	r3, r3
 8016d8e:	9905      	ldr	r1, [sp, #20]
 8016d90:	f894 6804 	ldrb.w	r6, [r4, #2052]	@ 0x804
 8016d94:	eb04 0181 	add.w	r1, r4, r1, lsl #2
 8016d98:	710e      	strb	r6, [r1, #4]
 8016d9a:	9e0c      	ldr	r6, [sp, #48]	@ 0x30
 8016d9c:	80ce      	strh	r6, [r1, #6]
 8016d9e:	f108 0601 	add.w	r6, r8, #1
 8016da2:	714e      	strb	r6, [r1, #5]
 8016da4:	9905      	ldr	r1, [sp, #20]
 8016da6:	3101      	adds	r1, #1
 8016da8:	b289      	uxth	r1, r1
 8016daa:	9105      	str	r1, [sp, #20]
 8016dac:	e7df      	b.n	8016d6e <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x1de>
 8016dae:	eb04 0382 	add.w	r3, r4, r2, lsl #2
 8016db2:	4611      	mov	r1, r2
 8016db4:	795b      	ldrb	r3, [r3, #5]
 8016db6:	f603 0604 	addw	r6, r3, #2052	@ 0x804
 8016dba:	4426      	add	r6, r4
 8016dbc:	9f19      	ldr	r7, [sp, #100]	@ 0x64
 8016dbe:	4437      	add	r7, r6
 8016dc0:	2f00      	cmp	r7, #0
 8016dc2:	dd06      	ble.n	8016dd2 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x242>
 8016dc4:	eb04 0181 	add.w	r1, r4, r1, lsl #2
 8016dc8:	790f      	ldrb	r7, [r1, #4]
 8016dca:	f806 7d01 	strb.w	r7, [r6, #-1]!
 8016dce:	88c9      	ldrh	r1, [r1, #6]
 8016dd0:	e7f4      	b.n	8016dbc <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x22c>
 8016dd2:	f884 1804 	strb.w	r1, [r4, #2052]	@ 0x804
 8016dd6:	b29b      	uxth	r3, r3
 8016dd8:	e7c5      	b.n	8016d66 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x1d6>
 8016dda:	9a0c      	ldr	r2, [sp, #48]	@ 0x30
 8016ddc:	920c      	str	r2, [sp, #48]	@ 0x30
 8016dde:	4601      	mov	r1, r0
 8016de0:	9a00      	ldr	r2, [sp, #0]
 8016de2:	469c      	mov	ip, r3
 8016de4:	e78e      	b.n	8016d04 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x174>
 8016de6:	1957      	adds	r7, r2, r5
 8016de8:	ebac 0305 	sub.w	r3, ip, r5
 8016dec:	b2ba      	uxth	r2, r7
 8016dee:	f8bd 0010 	ldrh.w	r0, [sp, #16]
 8016df2:	9200      	str	r2, [sp, #0]
 8016df4:	b29b      	uxth	r3, r3
 8016df6:	2500      	movs	r5, #0
 8016df8:	9a0b      	ldr	r2, [sp, #44]	@ 0x2c
 8016dfa:	455a      	cmp	r2, fp
 8016dfc:	d88e      	bhi.n	8016d1c <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x18c>
 8016dfe:	4601      	mov	r1, r0
 8016e00:	e749      	b.n	8016c96 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x106>
 8016e02:	458c      	cmp	ip, r1
 8016e04:	bf2c      	ite	cs
 8016e06:	4628      	movcs	r0, r5
 8016e08:	462b      	movcc	r3, r5
 8016e0a:	9d0a      	ldr	r5, [sp, #40]	@ 0x28
 8016e0c:	bf27      	ittee	cs
 8016e0e:	9109      	strcs	r1, [sp, #36]	@ 0x24
 8016e10:	ebac 0301 	subcs.w	r3, ip, r1
 8016e14:	eba1 000c 	subcc.w	r0, r1, ip
 8016e18:	f8cd c024 	strcc.w	ip, [sp, #36]	@ 0x24
 8016e1c:	bf2c      	ite	cs
 8016e1e:	b29b      	uxthcs	r3, r3
 8016e20:	b280      	uxthcc	r0, r0
 8016e22:	2dff      	cmp	r5, #255	@ 0xff
 8016e24:	9d09      	ldr	r5, [sp, #36]	@ 0x24
 8016e26:	eb02 0705 	add.w	r7, r2, r5
 8016e2a:	b2bd      	uxth	r5, r7
 8016e2c:	9500      	str	r5, [sp, #0]
 8016e2e:	d12f      	bne.n	8016e90 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x300>
 8016e30:	465e      	mov	r6, fp
 8016e32:	9d00      	ldr	r5, [sp, #0]
 8016e34:	42aa      	cmp	r2, r5
 8016e36:	f040 8084 	bne.w	8016f42 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x3b2>
 8016e3a:	9a09      	ldr	r2, [sp, #36]	@ 0x24
 8016e3c:	458c      	cmp	ip, r1
 8016e3e:	eb0b 0b42 	add.w	fp, fp, r2, lsl #1
 8016e42:	d3d8      	bcc.n	8016df6 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x266>
 8016e44:	9a18      	ldr	r2, [sp, #96]	@ 0x60
 8016e46:	9904      	ldr	r1, [sp, #16]
 8016e48:	8812      	ldrh	r2, [r2, #0]
 8016e4a:	1a52      	subs	r2, r2, r1
 8016e4c:	eb0b 0b42 	add.w	fp, fp, r2, lsl #1
 8016e50:	9a08      	ldr	r2, [sp, #32]
 8016e52:	9916      	ldr	r1, [sp, #88]	@ 0x58
 8016e54:	3201      	adds	r2, #1
 8016e56:	428a      	cmp	r2, r1
 8016e58:	9208      	str	r2, [sp, #32]
 8016e5a:	f040 8092 	bne.w	8016f82 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x3f2>
 8016e5e:	f8bd 5070 	ldrh.w	r5, [sp, #112]	@ 0x70
 8016e62:	f8bd c068 	ldrh.w	ip, [sp, #104]	@ 0x68
 8016e66:	9b04      	ldr	r3, [sp, #16]
 8016e68:	eba5 050c 	sub.w	r5, r5, ip
 8016e6c:	b2ad      	uxth	r5, r5
 8016e6e:	2d00      	cmp	r5, #0
 8016e70:	bf08      	it	eq
 8016e72:	4619      	moveq	r1, r3
 8016e74:	9b0d      	ldr	r3, [sp, #52]	@ 0x34
 8016e76:	bf18      	it	ne
 8016e78:	2100      	movne	r1, #0
 8016e7a:	3301      	adds	r3, #1
 8016e7c:	930d      	str	r3, [sp, #52]	@ 0x34
 8016e7e:	b289      	uxth	r1, r1
 8016e80:	e700      	b.n	8016c84 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0xf4>
 8016e82:	bf00      	nop
 8016e84:	20002c5c 	.word	0x20002c5c
 8016e88:	20002c56 	.word	0x20002c56
 8016e8c:	fffff7fb 	.word	0xfffff7fb
 8016e90:	46d9      	mov	r9, fp
 8016e92:	9d00      	ldr	r5, [sp, #0]
 8016e94:	42aa      	cmp	r2, r5
 8016e96:	d0d0      	beq.n	8016e3a <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x2aa>
 8016e98:	1c55      	adds	r5, r2, #1
 8016e9a:	4422      	add	r2, r4
 8016e9c:	9517      	str	r5, [sp, #92]	@ 0x5c
 8016e9e:	f892 e804 	ldrb.w	lr, [r2, #2052]	@ 0x804
 8016ea2:	9a06      	ldr	r2, [sp, #24]
 8016ea4:	eb0e 0e4e 	add.w	lr, lr, lr, lsl #1
 8016ea8:	4472      	add	r2, lr
 8016eaa:	9212      	str	r2, [sp, #72]	@ 0x48
 8016eac:	9f12      	ldr	r7, [sp, #72]	@ 0x48
 8016eae:	f8b9 2000 	ldrh.w	r2, [r9]
 8016eb2:	f897 a002 	ldrb.w	sl, [r7, #2]
 8016eb6:	9f0e      	ldr	r7, [sp, #56]	@ 0x38
 8016eb8:	1216      	asrs	r6, r2, #8
 8016eba:	fb1a fa07 	smulbb	sl, sl, r7
 8016ebe:	f006 06f8 	and.w	r6, r6, #248	@ 0xf8
 8016ec2:	9f0f      	ldr	r7, [sp, #60]	@ 0x3c
 8016ec4:	ea46 1656 	orr.w	r6, r6, r6, lsr #5
 8016ec8:	fb06 a607 	mla	r6, r6, r7, sl
 8016ecc:	9f12      	ldr	r7, [sp, #72]	@ 0x48
 8016ece:	f897 a001 	ldrb.w	sl, [r7, #1]
 8016ed2:	9f0e      	ldr	r7, [sp, #56]	@ 0x38
 8016ed4:	10d5      	asrs	r5, r2, #3
 8016ed6:	fb1a fa07 	smulbb	sl, sl, r7
 8016eda:	f005 05fc 	and.w	r5, r5, #252	@ 0xfc
 8016ede:	9f0f      	ldr	r7, [sp, #60]	@ 0x3c
 8016ee0:	ea45 1595 	orr.w	r5, r5, r5, lsr #6
 8016ee4:	fb05 a507 	mla	r5, r5, r7, sl
 8016ee8:	9f06      	ldr	r7, [sp, #24]
 8016eea:	f817 e00e 	ldrb.w	lr, [r7, lr]
 8016eee:	9f0e      	ldr	r7, [sp, #56]	@ 0x38
 8016ef0:	00d2      	lsls	r2, r2, #3
 8016ef2:	fb1e fe07 	smulbb	lr, lr, r7
 8016ef6:	b2d2      	uxtb	r2, r2
 8016ef8:	9f0f      	ldr	r7, [sp, #60]	@ 0x3c
 8016efa:	ea42 1252 	orr.w	r2, r2, r2, lsr #5
 8016efe:	b2b6      	uxth	r6, r6
 8016f00:	fb02 e207 	mla	r2, r2, r7, lr
 8016f04:	b292      	uxth	r2, r2
 8016f06:	b2ad      	uxth	r5, r5
 8016f08:	f106 0a01 	add.w	sl, r6, #1
 8016f0c:	eb0a 2616 	add.w	r6, sl, r6, lsr #8
 8016f10:	f102 0e01 	add.w	lr, r2, #1
 8016f14:	f105 0a01 	add.w	sl, r5, #1
 8016f18:	eb0e 2e12 	add.w	lr, lr, r2, lsr #8
 8016f1c:	eb0a 2a15 	add.w	sl, sl, r5, lsr #8
 8016f20:	f406 4678 	and.w	r6, r6, #63488	@ 0xf800
 8016f24:	f3ce 2ec4 	ubfx	lr, lr, #11, #5
 8016f28:	ea4f 1a5a 	mov.w	sl, sl, lsr #5
 8016f2c:	ea4e 0606 	orr.w	r6, lr, r6
 8016f30:	f40a 6afc 	and.w	sl, sl, #2016	@ 0x7e0
 8016f34:	ea46 060a 	orr.w	r6, r6, sl
 8016f38:	f829 6b02 	strh.w	r6, [r9], #2
 8016f3c:	f8bd 205c 	ldrh.w	r2, [sp, #92]	@ 0x5c
 8016f40:	e7a7      	b.n	8016e92 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x302>
 8016f42:	f102 0e01 	add.w	lr, r2, #1
 8016f46:	4422      	add	r2, r4
 8016f48:	9f06      	ldr	r7, [sp, #24]
 8016f4a:	f892 5804 	ldrb.w	r5, [r2, #2052]	@ 0x804
 8016f4e:	9a06      	ldr	r2, [sp, #24]
 8016f50:	eb05 0545 	add.w	r5, r5, r5, lsl #1
 8016f54:	eb02 0a05 	add.w	sl, r2, r5
 8016f58:	4a13      	ldr	r2, [pc, #76]	@ (8016fa8 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x418>)
 8016f5a:	f89a 9002 	ldrb.w	r9, [sl, #2]
 8016f5e:	ea02 2909 	and.w	r9, r2, r9, lsl #8
 8016f62:	f89a 2001 	ldrb.w	r2, [sl, #1]
 8016f66:	00d2      	lsls	r2, r2, #3
 8016f68:	f402 62fc 	and.w	r2, r2, #2016	@ 0x7e0
 8016f6c:	ea49 0202 	orr.w	r2, r9, r2
 8016f70:	f817 9005 	ldrb.w	r9, [r7, r5]
 8016f74:	ea42 02d9 	orr.w	r2, r2, r9, lsr #3
 8016f78:	f826 2b02 	strh.w	r2, [r6], #2
 8016f7c:	fa1f f28e 	uxth.w	r2, lr
 8016f80:	e757      	b.n	8016e32 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x2a2>
 8016f82:	f8bd 0010 	ldrh.w	r0, [sp, #16]
 8016f86:	f8bd 506c 	ldrh.w	r5, [sp, #108]	@ 0x6c
 8016f8a:	1a2d      	subs	r5, r5, r0
 8016f8c:	b2ad      	uxth	r5, r5
 8016f8e:	2d00      	cmp	r5, #0
 8016f90:	bf18      	it	ne
 8016f92:	2000      	movne	r0, #0
 8016f94:	e730      	b.n	8016df8 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x268>
 8016f96:	4b05      	ldr	r3, [pc, #20]	@ (8016fac <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x41c>)
 8016f98:	6818      	ldr	r0, [r3, #0]
 8016f9a:	6803      	ldr	r3, [r0, #0]
 8016f9c:	6adb      	ldr	r3, [r3, #44]	@ 0x2c
 8016f9e:	4798      	blx	r3
 8016fa0:	b01f      	add	sp, #124	@ 0x7c
 8016fa2:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 8016fa6:	bf00      	nop
 8016fa8:	fffff800 	.word	0xfffff800
 8016fac:	20002c5c 	.word	0x20002c5c

08016fb0 <_ZN8touchgfx8LCD16bpp29copyFrameBufferRegionToMemoryERKNS_4RectES3_Phss>:
 8016fb0:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8016fb4:	b091      	sub	sp, #68	@ 0x44
 8016fb6:	469b      	mov	fp, r3
 8016fb8:	f10d 0828 	add.w	r8, sp, #40	@ 0x28
 8016fbc:	4616      	mov	r6, r2
 8016fbe:	f9bd 906c 	ldrsh.w	r9, [sp, #108]	@ 0x6c
 8016fc2:	f9b3 2000 	ldrsh.w	r2, [r3]
 8016fc6:	f9bd 7070 	ldrsh.w	r7, [sp, #112]	@ 0x70
 8016fca:	f9b3 3002 	ldrsh.w	r3, [r3, #2]
 8016fce:	f8ad 2028 	strh.w	r2, [sp, #40]	@ 0x28
 8016fd2:	4604      	mov	r4, r0
 8016fd4:	460d      	mov	r5, r1
 8016fd6:	4640      	mov	r0, r8
 8016fd8:	4659      	mov	r1, fp
 8016fda:	f8ad 302a 	strh.w	r3, [sp, #42]	@ 0x2a
 8016fde:	f8ad 902c 	strh.w	r9, [sp, #44]	@ 0x2c
 8016fe2:	f8ad 702e 	strh.w	r7, [sp, #46]	@ 0x2e
 8016fe6:	f7f4 fe8b 	bl	800bd00 <_ZN8touchgfx4RectaNERKS0_>
 8016fea:	4631      	mov	r1, r6
 8016fec:	4640      	mov	r0, r8
 8016fee:	f7f4 fe87 	bl	800bd00 <_ZN8touchgfx4RectaNERKS0_>
 8016ff2:	4b74      	ldr	r3, [pc, #464]	@ (80171c4 <_ZN8touchgfx8LCD16bpp29copyFrameBufferRegionToMemoryERKNS_4RectES3_Phss+0x214>)
 8016ff4:	8818      	ldrh	r0, [r3, #0]
 8016ff6:	4b74      	ldr	r3, [pc, #464]	@ (80171c8 <_ZN8touchgfx8LCD16bpp29copyFrameBufferRegionToMemoryERKNS_4RectES3_Phss+0x218>)
 8016ff8:	8819      	ldrh	r1, [r3, #0]
 8016ffa:	f9bd 3028 	ldrsh.w	r3, [sp, #40]	@ 0x28
 8016ffe:	2b00      	cmp	r3, #0
 8017000:	b202      	sxth	r2, r0
 8017002:	b20e      	sxth	r6, r1
 8017004:	da07      	bge.n	8017016 <_ZN8touchgfx8LCD16bpp29copyFrameBufferRegionToMemoryERKNS_4RectES3_Phss+0x66>
 8017006:	f8bd c02c 	ldrh.w	ip, [sp, #44]	@ 0x2c
 801700a:	4463      	add	r3, ip
 801700c:	f8ad 302c 	strh.w	r3, [sp, #44]	@ 0x2c
 8017010:	2300      	movs	r3, #0
 8017012:	f8ad 3028 	strh.w	r3, [sp, #40]	@ 0x28
 8017016:	f9bd 3028 	ldrsh.w	r3, [sp, #40]	@ 0x28
 801701a:	f9bd c02c 	ldrsh.w	ip, [sp, #44]	@ 0x2c
 801701e:	1ad2      	subs	r2, r2, r3
 8017020:	4594      	cmp	ip, r2
 8017022:	bfc4      	itt	gt
 8017024:	1ac2      	subgt	r2, r0, r3
 8017026:	f8ad 202c 	strhgt.w	r2, [sp, #44]	@ 0x2c
 801702a:	f9bd 202a 	ldrsh.w	r2, [sp, #42]	@ 0x2a
 801702e:	2a00      	cmp	r2, #0
 8017030:	da07      	bge.n	8017042 <_ZN8touchgfx8LCD16bpp29copyFrameBufferRegionToMemoryERKNS_4RectES3_Phss+0x92>
 8017032:	f8bd c02e 	ldrh.w	ip, [sp, #46]	@ 0x2e
 8017036:	4462      	add	r2, ip
 8017038:	f8ad 202e 	strh.w	r2, [sp, #46]	@ 0x2e
 801703c:	2200      	movs	r2, #0
 801703e:	f8ad 202a 	strh.w	r2, [sp, #42]	@ 0x2a
 8017042:	f9bd a02a 	ldrsh.w	sl, [sp, #42]	@ 0x2a
 8017046:	f9bd 202e 	ldrsh.w	r2, [sp, #46]	@ 0x2e
 801704a:	eba6 060a 	sub.w	r6, r6, sl
 801704e:	42b2      	cmp	r2, r6
 8017050:	bfc4      	itt	gt
 8017052:	eba1 020a 	subgt.w	r2, r1, sl
 8017056:	f8ad 202e 	strhgt.w	r2, [sp, #46]	@ 0x2e
 801705a:	4a5c      	ldr	r2, [pc, #368]	@ (80171cc <_ZN8touchgfx8LCD16bpp29copyFrameBufferRegionToMemoryERKNS_4RectES3_Phss+0x21c>)
 801705c:	7812      	ldrb	r2, [r2, #0]
 801705e:	b9a2      	cbnz	r2, 801708a <_ZN8touchgfx8LCD16bpp29copyFrameBufferRegionToMemoryERKNS_4RectES3_Phss+0xda>
 8017060:	f9bd 602c 	ldrsh.w	r6, [sp, #44]	@ 0x2c
 8017064:	4286      	cmp	r6, r0
 8017066:	4640      	mov	r0, r8
 8017068:	9303      	str	r3, [sp, #12]
 801706a:	bf14      	ite	ne
 801706c:	2600      	movne	r6, #0
 801706e:	2601      	moveq	r6, #1
 8017070:	f7f4 fe89 	bl	800bd86 <_ZNK8touchgfx4Rect7isEmptyEv>
 8017074:	9b03      	ldr	r3, [sp, #12]
 8017076:	b160      	cbz	r0, 8017092 <_ZN8touchgfx8LCD16bpp29copyFrameBufferRegionToMemoryERKNS_4RectES3_Phss+0xe2>
 8017078:	2300      	movs	r3, #0
 801707a:	8023      	strh	r3, [r4, #0]
 801707c:	8063      	strh	r3, [r4, #2]
 801707e:	80a3      	strh	r3, [r4, #4]
 8017080:	4620      	mov	r0, r4
 8017082:	80e3      	strh	r3, [r4, #6]
 8017084:	b011      	add	sp, #68	@ 0x44
 8017086:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 801708a:	f9bd 602e 	ldrsh.w	r6, [sp, #46]	@ 0x2e
 801708e:	428e      	cmp	r6, r1
 8017090:	e7e9      	b.n	8017066 <_ZN8touchgfx8LCD16bpp29copyFrameBufferRegionToMemoryERKNS_4RectES3_Phss+0xb6>
 8017092:	f9bd 202c 	ldrsh.w	r2, [sp, #44]	@ 0x2c
 8017096:	9205      	str	r2, [sp, #20]
 8017098:	f9bd 202e 	ldrsh.w	r2, [sp, #46]	@ 0x2e
 801709c:	9206      	str	r2, [sp, #24]
 801709e:	f8bb 2000 	ldrh.w	r2, [fp]
 80170a2:	900e      	str	r0, [sp, #56]	@ 0x38
 80170a4:	1a9b      	subs	r3, r3, r2
 80170a6:	b21b      	sxth	r3, r3
 80170a8:	9303      	str	r3, [sp, #12]
 80170aa:	f8bb 3002 	ldrh.w	r3, [fp, #2]
 80170ae:	f8ad 903c 	strh.w	r9, [sp, #60]	@ 0x3c
 80170b2:	ebaa 0a03 	sub.w	sl, sl, r3
 80170b6:	fa0f f38a 	sxth.w	r3, sl
 80170ba:	9304      	str	r3, [sp, #16]
 80170bc:	9b03      	ldr	r3, [sp, #12]
 80170be:	f8ad 3030 	strh.w	r3, [sp, #48]	@ 0x30
 80170c2:	9b04      	ldr	r3, [sp, #16]
 80170c4:	f8ad 3032 	strh.w	r3, [sp, #50]	@ 0x32
 80170c8:	9b05      	ldr	r3, [sp, #20]
 80170ca:	f8ad 3034 	strh.w	r3, [sp, #52]	@ 0x34
 80170ce:	a90e      	add	r1, sp, #56	@ 0x38
 80170d0:	9b06      	ldr	r3, [sp, #24]
 80170d2:	f8ad 3036 	strh.w	r3, [sp, #54]	@ 0x36
 80170d6:	a80c      	add	r0, sp, #48	@ 0x30
 80170d8:	f8ad 703e 	strh.w	r7, [sp, #62]	@ 0x3e
 80170dc:	f7f7 feb2 	bl	800ee44 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectERKS1_>
 80170e0:	4640      	mov	r0, r8
 80170e2:	f7f7 fe87 	bl	800edf4 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectE>
 80170e6:	a80e      	add	r0, sp, #56	@ 0x38
 80170e8:	f7f7 fe84 	bl	800edf4 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectE>
 80170ec:	4b38      	ldr	r3, [pc, #224]	@ (80171d0 <_ZN8touchgfx8LCD16bpp29copyFrameBufferRegionToMemoryERKNS_4RectES3_Phss+0x220>)
 80170ee:	f9bd a03c 	ldrsh.w	sl, [sp, #60]	@ 0x3c
 80170f2:	881b      	ldrh	r3, [r3, #0]
 80170f4:	9307      	str	r3, [sp, #28]
 80170f6:	682b      	ldr	r3, [r5, #0]
 80170f8:	f8df b0d8 	ldr.w	fp, [pc, #216]	@ 80171d4 <_ZN8touchgfx8LCD16bpp29copyFrameBufferRegionToMemoryERKNS_4RectES3_Phss+0x224>
 80170fc:	6b1b      	ldr	r3, [r3, #48]	@ 0x30
 80170fe:	4628      	mov	r0, r5
 8017100:	4798      	blx	r3
 8017102:	f8bd 5032 	ldrh.w	r5, [sp, #50]	@ 0x32
 8017106:	f9bd 3030 	ldrsh.w	r3, [sp, #48]	@ 0x30
 801710a:	4681      	mov	r9, r0
 801710c:	fb1a 3305 	smlabb	r3, sl, r5, r3
 8017110:	f8db 0000 	ldr.w	r0, [fp]
 8017114:	9d1a      	ldr	r5, [sp, #104]	@ 0x68
 8017116:	eb05 0543 	add.w	r5, r5, r3, lsl #1
 801711a:	6803      	ldr	r3, [r0, #0]
 801711c:	6b1b      	ldr	r3, [r3, #48]	@ 0x30
 801711e:	4798      	blx	r3
 8017120:	4607      	mov	r7, r0
 8017122:	f8db 0000 	ldr.w	r0, [fp]
 8017126:	f9bd 1028 	ldrsh.w	r1, [sp, #40]	@ 0x28
 801712a:	6803      	ldr	r3, [r0, #0]
 801712c:	f9bd 202a 	ldrsh.w	r2, [sp, #42]	@ 0x2a
 8017130:	9109      	str	r1, [sp, #36]	@ 0x24
 8017132:	9208      	str	r2, [sp, #32]
 8017134:	6b9b      	ldr	r3, [r3, #56]	@ 0x38
 8017136:	4798      	blx	r3
 8017138:	f010 0f01 	tst.w	r0, #1
 801713c:	e9dd 2108 	ldrd	r2, r1, [sp, #32]
 8017140:	d012      	beq.n	8017168 <_ZN8touchgfx8LCD16bpp29copyFrameBufferRegionToMemoryERKNS_4RectES3_Phss+0x1b8>
 8017142:	f8db 0000 	ldr.w	r0, [fp]
 8017146:	f9bd 2034 	ldrsh.w	r2, [sp, #52]	@ 0x34
 801714a:	6803      	ldr	r3, [r0, #0]
 801714c:	9200      	str	r2, [sp, #0]
 801714e:	6ede      	ldr	r6, [r3, #108]	@ 0x6c
 8017150:	e898 0006 	ldmia.w	r8, {r1, r2}
 8017154:	462b      	mov	r3, r5
 8017156:	47b0      	blx	r6
 8017158:	9b03      	ldr	r3, [sp, #12]
 801715a:	8023      	strh	r3, [r4, #0]
 801715c:	9b04      	ldr	r3, [sp, #16]
 801715e:	8063      	strh	r3, [r4, #2]
 8017160:	9b05      	ldr	r3, [sp, #20]
 8017162:	80a3      	strh	r3, [r4, #4]
 8017164:	9b06      	ldr	r3, [sp, #24]
 8017166:	e78b      	b.n	8017080 <_ZN8touchgfx8LCD16bpp29copyFrameBufferRegionToMemoryERKNS_4RectES3_Phss+0xd0>
 8017168:	fb09 f202 	mul.w	r2, r9, r2
 801716c:	eb02 0141 	add.w	r1, r2, r1, lsl #1
 8017170:	440f      	add	r7, r1
 8017172:	f9bd 3036 	ldrsh.w	r3, [sp, #54]	@ 0x36
 8017176:	b166      	cbz	r6, 8017192 <_ZN8touchgfx8LCD16bpp29copyFrameBufferRegionToMemoryERKNS_4RectES3_Phss+0x1e2>
 8017178:	9a07      	ldr	r2, [sp, #28]
 801717a:	4592      	cmp	sl, r2
 801717c:	d109      	bne.n	8017192 <_ZN8touchgfx8LCD16bpp29copyFrameBufferRegionToMemoryERKNS_4RectES3_Phss+0x1e2>
 801717e:	f8db 0000 	ldr.w	r0, [fp]
 8017182:	6802      	ldr	r2, [r0, #0]
 8017184:	fb09 f303 	mul.w	r3, r9, r3
 8017188:	6b56      	ldr	r6, [r2, #52]	@ 0x34
 801718a:	4629      	mov	r1, r5
 801718c:	463a      	mov	r2, r7
 801718e:	47b0      	blx	r6
 8017190:	e7e2      	b.n	8017158 <_ZN8touchgfx8LCD16bpp29copyFrameBufferRegionToMemoryERKNS_4RectES3_Phss+0x1a8>
 8017192:	fb0a f303 	mul.w	r3, sl, r3
 8017196:	f8df b03c 	ldr.w	fp, [pc, #60]	@ 80171d4 <_ZN8touchgfx8LCD16bpp29copyFrameBufferRegionToMemoryERKNS_4RectES3_Phss+0x224>
 801719a:	eb05 0843 	add.w	r8, r5, r3, lsl #1
 801719e:	ea4f 064a 	mov.w	r6, sl, lsl #1
 80171a2:	4545      	cmp	r5, r8
 80171a4:	d2d8      	bcs.n	8017158 <_ZN8touchgfx8LCD16bpp29copyFrameBufferRegionToMemoryERKNS_4RectES3_Phss+0x1a8>
 80171a6:	f8db 0000 	ldr.w	r0, [fp]
 80171aa:	f9bd 3034 	ldrsh.w	r3, [sp, #52]	@ 0x34
 80171ae:	6802      	ldr	r2, [r0, #0]
 80171b0:	4629      	mov	r1, r5
 80171b2:	f8d2 a034 	ldr.w	sl, [r2, #52]	@ 0x34
 80171b6:	005b      	lsls	r3, r3, #1
 80171b8:	463a      	mov	r2, r7
 80171ba:	47d0      	blx	sl
 80171bc:	444f      	add	r7, r9
 80171be:	4435      	add	r5, r6
 80171c0:	e7ef      	b.n	80171a2 <_ZN8touchgfx8LCD16bpp29copyFrameBufferRegionToMemoryERKNS_4RectES3_Phss+0x1f2>
 80171c2:	bf00      	nop
 80171c4:	20002c50 	.word	0x20002c50
 80171c8:	20002c52 	.word	0x20002c52
 80171cc:	20002c54 	.word	0x20002c54
 80171d0:	20002c56 	.word	0x20002c56
 80171d4:	20002c5c 	.word	0x20002c5c

080171d8 <_ZN8touchgfx8LCD16bpp8fillRectERKNS_4RectENS_9colortypeEh>:
 80171d8:	b5f0      	push	{r4, r5, r6, r7, lr}
 80171da:	4606      	mov	r6, r0
 80171dc:	b087      	sub	sp, #28
 80171de:	460c      	mov	r4, r1
 80171e0:	4617      	mov	r7, r2
 80171e2:	461d      	mov	r5, r3
 80171e4:	b333      	cbz	r3, 8017234 <_ZN8touchgfx8LCD16bpp8fillRectERKNS_4RectENS_9colortypeEh+0x5c>
 80171e6:	4608      	mov	r0, r1
 80171e8:	f7f4 fdcd 	bl	800bd86 <_ZNK8touchgfx4Rect7isEmptyEv>
 80171ec:	bb10      	cbnz	r0, 8017234 <_ZN8touchgfx8LCD16bpp8fillRectERKNS_4RectENS_9colortypeEh+0x5c>
 80171ee:	6820      	ldr	r0, [r4, #0]
 80171f0:	6861      	ldr	r1, [r4, #4]
 80171f2:	4c1c      	ldr	r4, [pc, #112]	@ (8017264 <_ZN8touchgfx8LCD16bpp8fillRectERKNS_4RectENS_9colortypeEh+0x8c>)
 80171f4:	ab04      	add	r3, sp, #16
 80171f6:	c303      	stmia	r3!, {r0, r1}
 80171f8:	a804      	add	r0, sp, #16
 80171fa:	f7f7 fdfb 	bl	800edf4 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectE>
 80171fe:	6820      	ldr	r0, [r4, #0]
 8017200:	6803      	ldr	r3, [r0, #0]
 8017202:	6b9b      	ldr	r3, [r3, #56]	@ 0x38
 8017204:	4798      	blx	r3
 8017206:	2dff      	cmp	r5, #255	@ 0xff
 8017208:	d016      	beq.n	8017238 <_ZN8touchgfx8LCD16bpp8fillRectERKNS_4RectENS_9colortypeEh+0x60>
 801720a:	f010 0f08 	tst.w	r0, #8
 801720e:	6820      	ldr	r0, [r4, #0]
 8017210:	d015      	beq.n	801723e <_ZN8touchgfx8LCD16bpp8fillRectERKNS_4RectENS_9colortypeEh+0x66>
 8017212:	2400      	movs	r4, #0
 8017214:	6801      	ldr	r1, [r0, #0]
 8017216:	f8bd 3012 	ldrh.w	r3, [sp, #18]
 801721a:	f8bd 2010 	ldrh.w	r2, [sp, #16]
 801721e:	e9cd 5402 	strd	r5, r4, [sp, #8]
 8017222:	f8bd 4016 	ldrh.w	r4, [sp, #22]
 8017226:	9401      	str	r4, [sp, #4]
 8017228:	f8bd 4014 	ldrh.w	r4, [sp, #20]
 801722c:	9400      	str	r4, [sp, #0]
 801722e:	6e0c      	ldr	r4, [r1, #96]	@ 0x60
 8017230:	4639      	mov	r1, r7
 8017232:	47a0      	blx	r4
 8017234:	b007      	add	sp, #28
 8017236:	bdf0      	pop	{r4, r5, r6, r7, pc}
 8017238:	f010 0f02 	tst.w	r0, #2
 801723c:	e7e7      	b.n	801720e <_ZN8touchgfx8LCD16bpp8fillRectERKNS_4RectENS_9colortypeEh+0x36>
 801723e:	6803      	ldr	r3, [r0, #0]
 8017240:	6a9b      	ldr	r3, [r3, #40]	@ 0x28
 8017242:	4798      	blx	r3
 8017244:	4b08      	ldr	r3, [pc, #32]	@ (8017268 <_ZN8touchgfx8LCD16bpp8fillRectERKNS_4RectENS_9colortypeEh+0x90>)
 8017246:	881a      	ldrh	r2, [r3, #0]
 8017248:	6833      	ldr	r3, [r6, #0]
 801724a:	e9cd 7500 	strd	r7, r5, [sp]
 801724e:	4601      	mov	r1, r0
 8017250:	6a5d      	ldr	r5, [r3, #36]	@ 0x24
 8017252:	4630      	mov	r0, r6
 8017254:	ab04      	add	r3, sp, #16
 8017256:	47a8      	blx	r5
 8017258:	6820      	ldr	r0, [r4, #0]
 801725a:	6803      	ldr	r3, [r0, #0]
 801725c:	6adb      	ldr	r3, [r3, #44]	@ 0x2c
 801725e:	4798      	blx	r3
 8017260:	e7e8      	b.n	8017234 <_ZN8touchgfx8LCD16bpp8fillRectERKNS_4RectENS_9colortypeEh+0x5c>
 8017262:	bf00      	nop
 8017264:	20002c5c 	.word	0x20002c5c
 8017268:	20002c56 	.word	0x20002c56

0801726c <_ZN8touchgfx8LCD16bpp10fillBufferEPhtRKNS_4RectENS_9colortypeEh>:
 801726c:	e92d 47f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
 8017270:	f89d 7024 	ldrb.w	r7, [sp, #36]	@ 0x24
 8017274:	9e08      	ldr	r6, [sp, #32]
 8017276:	4688      	mov	r8, r1
 8017278:	4614      	mov	r4, r2
 801727a:	461d      	mov	r5, r3
 801727c:	2f00      	cmp	r7, #0
 801727e:	f000 80a9 	beq.w	80173d4 <_ZN8touchgfx8LCD16bpp10fillBufferEPhtRKNS_4RectENS_9colortypeEh+0x168>
 8017282:	4618      	mov	r0, r3
 8017284:	f7f4 fd7f 	bl	800bd86 <_ZNK8touchgfx4Rect7isEmptyEv>
 8017288:	2800      	cmp	r0, #0
 801728a:	f040 80a3 	bne.w	80173d4 <_ZN8touchgfx8LCD16bpp10fillBufferEPhtRKNS_4RectENS_9colortypeEh+0x168>
 801728e:	f9b5 1000 	ldrsh.w	r1, [r5]
 8017292:	f9b5 3002 	ldrsh.w	r3, [r5, #2]
 8017296:	f9b5 0004 	ldrsh.w	r0, [r5, #4]
 801729a:	f9b5 5006 	ldrsh.w	r5, [r5, #6]
 801729e:	fb04 1303 	mla	r3, r4, r3, r1
 80172a2:	eb08 0143 	add.w	r1, r8, r3, lsl #1
 80172a6:	4365      	muls	r5, r4
 80172a8:	2fff      	cmp	r7, #255	@ 0xff
 80172aa:	eba4 0200 	sub.w	r2, r4, r0
 80172ae:	eb01 0545 	add.w	r5, r1, r5, lsl #1
 80172b2:	ea4f 2816 	mov.w	r8, r6, lsr #8
 80172b6:	d04a      	beq.n	801734e <_ZN8touchgfx8LCD16bpp10fillBufferEPhtRKNS_4RectENS_9colortypeEh+0xe2>
 80172b8:	b2bc      	uxth	r4, r7
 80172ba:	f1c7 0cff 	rsb	ip, r7, #255	@ 0xff
 80172be:	f3c6 4e07 	ubfx	lr, r6, #16, #8
 80172c2:	fa5f f788 	uxtb.w	r7, r8
 80172c6:	b2f3      	uxtb	r3, r6
 80172c8:	0040      	lsls	r0, r0, #1
 80172ca:	fb0e fe04 	mul.w	lr, lr, r4
 80172ce:	4367      	muls	r7, r4
 80172d0:	4363      	muls	r3, r4
 80172d2:	ea4f 0842 	mov.w	r8, r2, lsl #1
 80172d6:	fa1f fc8c 	uxth.w	ip, ip
 80172da:	42a9      	cmp	r1, r5
 80172dc:	d27a      	bcs.n	80173d4 <_ZN8touchgfx8LCD16bpp10fillBufferEPhtRKNS_4RectENS_9colortypeEh+0x168>
 80172de:	eb01 0900 	add.w	r9, r1, r0
 80172e2:	4549      	cmp	r1, r9
 80172e4:	d231      	bcs.n	801734a <_ZN8touchgfx8LCD16bpp10fillBufferEPhtRKNS_4RectENS_9colortypeEh+0xde>
 80172e6:	880a      	ldrh	r2, [r1, #0]
 80172e8:	1214      	asrs	r4, r2, #8
 80172ea:	10d6      	asrs	r6, r2, #3
 80172ec:	f004 04f8 	and.w	r4, r4, #248	@ 0xf8
 80172f0:	00d2      	lsls	r2, r2, #3
 80172f2:	b2d2      	uxtb	r2, r2
 80172f4:	ea44 1454 	orr.w	r4, r4, r4, lsr #5
 80172f8:	fb14 f40c 	smulbb	r4, r4, ip
 80172fc:	ea42 1252 	orr.w	r2, r2, r2, lsr #5
 8017300:	4474      	add	r4, lr
 8017302:	fb12 f20c 	smulbb	r2, r2, ip
 8017306:	b2a4      	uxth	r4, r4
 8017308:	f006 06fc 	and.w	r6, r6, #252	@ 0xfc
 801730c:	441a      	add	r2, r3
 801730e:	b292      	uxth	r2, r2
 8017310:	f104 0a01 	add.w	sl, r4, #1
 8017314:	ea46 1696 	orr.w	r6, r6, r6, lsr #6
 8017318:	eb0a 2414 	add.w	r4, sl, r4, lsr #8
 801731c:	fb16 f60c 	smulbb	r6, r6, ip
 8017320:	f102 0a01 	add.w	sl, r2, #1
 8017324:	443e      	add	r6, r7
 8017326:	eb0a 2212 	add.w	r2, sl, r2, lsr #8
 801732a:	b2b6      	uxth	r6, r6
 801732c:	f404 4478 	and.w	r4, r4, #63488	@ 0xf800
 8017330:	f3c2 22c4 	ubfx	r2, r2, #11, #5
 8017334:	4322      	orrs	r2, r4
 8017336:	1c74      	adds	r4, r6, #1
 8017338:	eb04 2616 	add.w	r6, r4, r6, lsr #8
 801733c:	0976      	lsrs	r6, r6, #5
 801733e:	f406 66fc 	and.w	r6, r6, #2016	@ 0x7e0
 8017342:	4332      	orrs	r2, r6
 8017344:	f821 2b02 	strh.w	r2, [r1], #2
 8017348:	e7cb      	b.n	80172e2 <_ZN8touchgfx8LCD16bpp10fillBufferEPhtRKNS_4RectENS_9colortypeEh+0x76>
 801734a:	4441      	add	r1, r8
 801734c:	e7c5      	b.n	80172da <_ZN8touchgfx8LCD16bpp10fillBufferEPhtRKNS_4RectENS_9colortypeEh+0x6e>
 801734e:	4f22      	ldr	r7, [pc, #136]	@ (80173d8 <_ZN8touchgfx8LCD16bpp10fillBufferEPhtRKNS_4RectENS_9colortypeEh+0x16c>)
 8017350:	0973      	lsrs	r3, r6, #5
 8017352:	ea08 0707 	and.w	r7, r8, r7
 8017356:	f403 63fc 	and.w	r3, r3, #2016	@ 0x7e0
 801735a:	433b      	orrs	r3, r7
 801735c:	f3c6 06c4 	ubfx	r6, r6, #3, #5
 8017360:	4333      	orrs	r3, r6
 8017362:	07e7      	lsls	r7, r4, #31
 8017364:	b29b      	uxth	r3, r3
 8017366:	d50b      	bpl.n	8017380 <_ZN8touchgfx8LCD16bpp10fillBufferEPhtRKNS_4RectENS_9colortypeEh+0x114>
 8017368:	0040      	lsls	r0, r0, #1
 801736a:	0052      	lsls	r2, r2, #1
 801736c:	42a9      	cmp	r1, r5
 801736e:	d231      	bcs.n	80173d4 <_ZN8touchgfx8LCD16bpp10fillBufferEPhtRKNS_4RectENS_9colortypeEh+0x168>
 8017370:	180c      	adds	r4, r1, r0
 8017372:	42a1      	cmp	r1, r4
 8017374:	d202      	bcs.n	801737c <_ZN8touchgfx8LCD16bpp10fillBufferEPhtRKNS_4RectENS_9colortypeEh+0x110>
 8017376:	f821 3b02 	strh.w	r3, [r1], #2
 801737a:	e7fa      	b.n	8017372 <_ZN8touchgfx8LCD16bpp10fillBufferEPhtRKNS_4RectENS_9colortypeEh+0x106>
 801737c:	4411      	add	r1, r2
 801737e:	e7f5      	b.n	801736c <_ZN8touchgfx8LCD16bpp10fillBufferEPhtRKNS_4RectENS_9colortypeEh+0x100>
 8017380:	078e      	lsls	r6, r1, #30
 8017382:	d008      	beq.n	8017396 <_ZN8touchgfx8LCD16bpp10fillBufferEPhtRKNS_4RectENS_9colortypeEh+0x12a>
 8017384:	0066      	lsls	r6, r4, #1
 8017386:	460a      	mov	r2, r1
 8017388:	42aa      	cmp	r2, r5
 801738a:	d202      	bcs.n	8017392 <_ZN8touchgfx8LCD16bpp10fillBufferEPhtRKNS_4RectENS_9colortypeEh+0x126>
 801738c:	8013      	strh	r3, [r2, #0]
 801738e:	4432      	add	r2, r6
 8017390:	e7fa      	b.n	8017388 <_ZN8touchgfx8LCD16bpp10fillBufferEPhtRKNS_4RectENS_9colortypeEh+0x11c>
 8017392:	3102      	adds	r1, #2
 8017394:	3801      	subs	r0, #1
 8017396:	07c2      	lsls	r2, r0, #31
 8017398:	d50b      	bpl.n	80173b2 <_ZN8touchgfx8LCD16bpp10fillBufferEPhtRKNS_4RectENS_9colortypeEh+0x146>
 801739a:	f100 4200 	add.w	r2, r0, #2147483648	@ 0x80000000
 801739e:	3a01      	subs	r2, #1
 80173a0:	eb01 0242 	add.w	r2, r1, r2, lsl #1
 80173a4:	0066      	lsls	r6, r4, #1
 80173a6:	42aa      	cmp	r2, r5
 80173a8:	d202      	bcs.n	80173b0 <_ZN8touchgfx8LCD16bpp10fillBufferEPhtRKNS_4RectENS_9colortypeEh+0x144>
 80173aa:	8013      	strh	r3, [r2, #0]
 80173ac:	4432      	add	r2, r6
 80173ae:	e7fa      	b.n	80173a6 <_ZN8touchgfx8LCD16bpp10fillBufferEPhtRKNS_4RectENS_9colortypeEh+0x13a>
 80173b0:	3801      	subs	r0, #1
 80173b2:	b178      	cbz	r0, 80173d4 <_ZN8touchgfx8LCD16bpp10fillBufferEPhtRKNS_4RectENS_9colortypeEh+0x168>
 80173b4:	1040      	asrs	r0, r0, #1
 80173b6:	ea43 4303 	orr.w	r3, r3, r3, lsl #16
 80173ba:	0080      	lsls	r0, r0, #2
 80173bc:	0064      	lsls	r4, r4, #1
 80173be:	42a9      	cmp	r1, r5
 80173c0:	d208      	bcs.n	80173d4 <_ZN8touchgfx8LCD16bpp10fillBufferEPhtRKNS_4RectENS_9colortypeEh+0x168>
 80173c2:	180e      	adds	r6, r1, r0
 80173c4:	460a      	mov	r2, r1
 80173c6:	42b2      	cmp	r2, r6
 80173c8:	d202      	bcs.n	80173d0 <_ZN8touchgfx8LCD16bpp10fillBufferEPhtRKNS_4RectENS_9colortypeEh+0x164>
 80173ca:	f842 3b04 	str.w	r3, [r2], #4
 80173ce:	e7fa      	b.n	80173c6 <_ZN8touchgfx8LCD16bpp10fillBufferEPhtRKNS_4RectENS_9colortypeEh+0x15a>
 80173d0:	4421      	add	r1, r4
 80173d2:	e7f4      	b.n	80173be <_ZN8touchgfx8LCD16bpp10fillBufferEPhtRKNS_4RectENS_9colortypeEh+0x152>
 80173d4:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
 80173d8:	00fff800 	.word	0x00fff800

080173dc <_ZN8touchgfx8LCD16bppC1Ev>:
 80173dc:	2200      	movs	r2, #0
 80173de:	4912      	ldr	r1, [pc, #72]	@ (8017428 <_ZN8touchgfx8LCD16bppC1Ev+0x4c>)
 80173e0:	6001      	str	r1, [r0, #0]
 80173e2:	e9c0 2201 	strd	r2, r2, [r0, #4]
 80173e6:	e9c0 2203 	strd	r2, r2, [r0, #12]
 80173ea:	e9c0 2205 	strd	r2, r2, [r0, #20]
 80173ee:	e9c0 2207 	strd	r2, r2, [r0, #28]
 80173f2:	e9c0 2209 	strd	r2, r2, [r0, #36]	@ 0x24
 80173f6:	e9c0 220b 	strd	r2, r2, [r0, #44]	@ 0x2c
 80173fa:	e9c0 220d 	strd	r2, r2, [r0, #52]	@ 0x34
 80173fe:	e9c0 220f 	strd	r2, r2, [r0, #60]	@ 0x3c
 8017402:	e9c0 2211 	strd	r2, r2, [r0, #68]	@ 0x44
 8017406:	e9c0 2213 	strd	r2, r2, [r0, #76]	@ 0x4c
 801740a:	e9c0 2215 	strd	r2, r2, [r0, #84]	@ 0x54
 801740e:	e9c0 2217 	strd	r2, r2, [r0, #92]	@ 0x5c
 8017412:	e9c0 2219 	strd	r2, r2, [r0, #100]	@ 0x64
 8017416:	e9c0 221b 	strd	r2, r2, [r0, #108]	@ 0x6c
 801741a:	e9c0 221d 	strd	r2, r2, [r0, #116]	@ 0x74
 801741e:	e9c0 221f 	strd	r2, r2, [r0, #124]	@ 0x7c
 8017422:	e9c0 2221 	strd	r2, r2, [r0, #132]	@ 0x84
 8017426:	4770      	bx	lr
 8017428:	08023b50 	.word	0x08023b50

0801742c <_ZN8touchgfx8LCD16bpp16blitCopyARGB8888EPKmRKNS_4RectES5_h>:
 801742c:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8017430:	460d      	mov	r5, r1
 8017432:	b08d      	sub	sp, #52	@ 0x34
 8017434:	4604      	mov	r4, r0
 8017436:	6808      	ldr	r0, [r1, #0]
 8017438:	6849      	ldr	r1, [r1, #4]
 801743a:	4699      	mov	r9, r3
 801743c:	ab08      	add	r3, sp, #32
 801743e:	c303      	stmia	r3!, {r0, r1}
 8017440:	6810      	ldr	r0, [r2, #0]
 8017442:	6851      	ldr	r1, [r2, #4]
 8017444:	ab0a      	add	r3, sp, #40	@ 0x28
 8017446:	c303      	stmia	r3!, {r0, r1}
 8017448:	a808      	add	r0, sp, #32
 801744a:	f7f7 fcd3 	bl	800edf4 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectE>
 801744e:	4629      	mov	r1, r5
 8017450:	a80a      	add	r0, sp, #40	@ 0x28
 8017452:	f7f7 fcf7 	bl	800ee44 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectERKS1_>
 8017456:	f9bd 2028 	ldrsh.w	r2, [sp, #40]	@ 0x28
 801745a:	f9bd 302a 	ldrsh.w	r3, [sp, #42]	@ 0x2a
 801745e:	f8bd 1024 	ldrh.w	r1, [sp, #36]	@ 0x24
 8017462:	4d63      	ldr	r5, [pc, #396]	@ (80175f0 <_ZN8touchgfx8LCD16bpp16blitCopyARGB8888EPKmRKNS_4RectES5_h+0x1c4>)
 8017464:	f9bd 802c 	ldrsh.w	r8, [sp, #44]	@ 0x2c
 8017468:	6828      	ldr	r0, [r5, #0]
 801746a:	f9bd 602e 	ldrsh.w	r6, [sp, #46]	@ 0x2e
 801746e:	fb11 2103 	smlabb	r1, r1, r3, r2
 8017472:	eb04 0481 	add.w	r4, r4, r1, lsl #2
 8017476:	f8bd 1020 	ldrh.w	r1, [sp, #32]
 801747a:	440a      	add	r2, r1
 801747c:	f8ad 2028 	strh.w	r2, [sp, #40]	@ 0x28
 8017480:	f8bd 2022 	ldrh.w	r2, [sp, #34]	@ 0x22
 8017484:	4413      	add	r3, r2
 8017486:	f8ad 302a 	strh.w	r3, [sp, #42]	@ 0x2a
 801748a:	6803      	ldr	r3, [r0, #0]
 801748c:	6b9b      	ldr	r3, [r3, #56]	@ 0x38
 801748e:	4798      	blx	r3
 8017490:	f1b9 0fff 	cmp.w	r9, #255	@ 0xff
 8017494:	d119      	bne.n	80174ca <_ZN8touchgfx8LCD16bpp16blitCopyARGB8888EPKmRKNS_4RectES5_h+0x9e>
 8017496:	f010 0f20 	tst.w	r0, #32
 801749a:	6828      	ldr	r0, [r5, #0]
 801749c:	d018      	beq.n	80174d0 <_ZN8touchgfx8LCD16bpp16blitCopyARGB8888EPKmRKNS_4RectES5_h+0xa4>
 801749e:	2500      	movs	r5, #0
 80174a0:	6801      	ldr	r1, [r0, #0]
 80174a2:	f8bd 302a 	ldrh.w	r3, [sp, #42]	@ 0x2a
 80174a6:	f8bd 2028 	ldrh.w	r2, [sp, #40]	@ 0x28
 80174aa:	e9cd 9503 	strd	r9, r5, [sp, #12]
 80174ae:	f8bd 5024 	ldrh.w	r5, [sp, #36]	@ 0x24
 80174b2:	9502      	str	r5, [sp, #8]
 80174b4:	b2b6      	uxth	r6, r6
 80174b6:	fa1f f588 	uxth.w	r5, r8
 80174ba:	9601      	str	r6, [sp, #4]
 80174bc:	9500      	str	r5, [sp, #0]
 80174be:	6d0d      	ldr	r5, [r1, #80]	@ 0x50
 80174c0:	4621      	mov	r1, r4
 80174c2:	47a8      	blx	r5
 80174c4:	b00d      	add	sp, #52	@ 0x34
 80174c6:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 80174ca:	f010 0f40 	tst.w	r0, #64	@ 0x40
 80174ce:	e7e4      	b.n	801749a <_ZN8touchgfx8LCD16bpp16blitCopyARGB8888EPKmRKNS_4RectES5_h+0x6e>
 80174d0:	6803      	ldr	r3, [r0, #0]
 80174d2:	6a9b      	ldr	r3, [r3, #40]	@ 0x28
 80174d4:	4798      	blx	r3
 80174d6:	4947      	ldr	r1, [pc, #284]	@ (80175f4 <_ZN8touchgfx8LCD16bpp16blitCopyARGB8888EPKmRKNS_4RectES5_h+0x1c8>)
 80174d8:	f9bd 202a 	ldrsh.w	r2, [sp, #42]	@ 0x2a
 80174dc:	880b      	ldrh	r3, [r1, #0]
 80174de:	f9bd 5028 	ldrsh.w	r5, [sp, #40]	@ 0x28
 80174e2:	fb03 5202 	mla	r2, r3, r2, r5
 80174e6:	eb00 0042 	add.w	r0, r0, r2, lsl #1
 80174ea:	4373      	muls	r3, r6
 80174ec:	eb00 0343 	add.w	r3, r0, r3, lsl #1
 80174f0:	9307      	str	r3, [sp, #28]
 80174f2:	ea4f 0348 	mov.w	r3, r8, lsl #1
 80174f6:	9306      	str	r3, [sp, #24]
 80174f8:	468a      	mov	sl, r1
 80174fa:	9b07      	ldr	r3, [sp, #28]
 80174fc:	4298      	cmp	r0, r3
 80174fe:	d270      	bcs.n	80175e2 <_ZN8touchgfx8LCD16bpp16blitCopyARGB8888EPKmRKNS_4RectES5_h+0x1b6>
 8017500:	9b06      	ldr	r3, [sp, #24]
 8017502:	4621      	mov	r1, r4
 8017504:	eb00 0b03 	add.w	fp, r0, r3
 8017508:	4558      	cmp	r0, fp
 801750a:	d25d      	bcs.n	80175c8 <_ZN8touchgfx8LCD16bpp16blitCopyARGB8888EPKmRKNS_4RectES5_h+0x19c>
 801750c:	f851 4b04 	ldr.w	r4, [r1], #4
 8017510:	0e23      	lsrs	r3, r4, #24
 8017512:	d014      	beq.n	801753e <_ZN8touchgfx8LCD16bpp16blitCopyARGB8888EPKmRKNS_4RectES5_h+0x112>
 8017514:	2bff      	cmp	r3, #255	@ 0xff
 8017516:	ea4f 2c14 	mov.w	ip, r4, lsr #8
 801751a:	d112      	bne.n	8017542 <_ZN8touchgfx8LCD16bpp16blitCopyARGB8888EPKmRKNS_4RectES5_h+0x116>
 801751c:	f1b9 0fff 	cmp.w	r9, #255	@ 0xff
 8017520:	d10f      	bne.n	8017542 <_ZN8touchgfx8LCD16bpp16blitCopyARGB8888EPKmRKNS_4RectES5_h+0x116>
 8017522:	0963      	lsrs	r3, r4, #5
 8017524:	f42c 6cff 	bic.w	ip, ip, #2040	@ 0x7f8
 8017528:	f403 63fc 	and.w	r3, r3, #2016	@ 0x7e0
 801752c:	f02c 0c07 	bic.w	ip, ip, #7
 8017530:	ea43 0c0c 	orr.w	ip, r3, ip
 8017534:	f3c4 04c4 	ubfx	r4, r4, #3, #5
 8017538:	ea4c 0404 	orr.w	r4, ip, r4
 801753c:	8004      	strh	r4, [r0, #0]
 801753e:	3002      	adds	r0, #2
 8017540:	e7e2      	b.n	8017508 <_ZN8touchgfx8LCD16bpp16blitCopyARGB8888EPKmRKNS_4RectES5_h+0xdc>
 8017542:	fb09 f303 	mul.w	r3, r9, r3
 8017546:	8807      	ldrh	r7, [r0, #0]
 8017548:	1c5a      	adds	r2, r3, #1
 801754a:	eb02 2223 	add.w	r2, r2, r3, asr #8
 801754e:	1212      	asrs	r2, r2, #8
 8017550:	123e      	asrs	r6, r7, #8
 8017552:	b293      	uxth	r3, r2
 8017554:	f3c4 4e07 	ubfx	lr, r4, #16, #8
 8017558:	f006 06f8 	and.w	r6, r6, #248	@ 0xf8
 801755c:	43d2      	mvns	r2, r2
 801755e:	b2d2      	uxtb	r2, r2
 8017560:	10fd      	asrs	r5, r7, #3
 8017562:	fb1e fe03 	smulbb	lr, lr, r3
 8017566:	00ff      	lsls	r7, r7, #3
 8017568:	ea46 1656 	orr.w	r6, r6, r6, lsr #5
 801756c:	fb06 e602 	mla	r6, r6, r2, lr
 8017570:	f005 05fc 	and.w	r5, r5, #252	@ 0xfc
 8017574:	b2ff      	uxtb	r7, r7
 8017576:	fa5f fc8c 	uxtb.w	ip, ip
 801757a:	b2e4      	uxtb	r4, r4
 801757c:	b2b6      	uxth	r6, r6
 801757e:	fb1c fc03 	smulbb	ip, ip, r3
 8017582:	ea45 1595 	orr.w	r5, r5, r5, lsr #6
 8017586:	ea47 1757 	orr.w	r7, r7, r7, lsr #5
 801758a:	fb14 f403 	smulbb	r4, r4, r3
 801758e:	fb05 c502 	mla	r5, r5, r2, ip
 8017592:	f106 0e01 	add.w	lr, r6, #1
 8017596:	fb07 4702 	mla	r7, r7, r2, r4
 801759a:	b2ad      	uxth	r5, r5
 801759c:	b2bf      	uxth	r7, r7
 801759e:	eb0e 2616 	add.w	r6, lr, r6, lsr #8
 80175a2:	f406 4e78 	and.w	lr, r6, #63488	@ 0xf800
 80175a6:	f105 0c01 	add.w	ip, r5, #1
 80175aa:	1c7e      	adds	r6, r7, #1
 80175ac:	eb06 2617 	add.w	r6, r6, r7, lsr #8
 80175b0:	eb0c 2515 	add.w	r5, ip, r5, lsr #8
 80175b4:	f3c6 26c4 	ubfx	r6, r6, #11, #5
 80175b8:	096d      	lsrs	r5, r5, #5
 80175ba:	ea46 060e 	orr.w	r6, r6, lr
 80175be:	f405 65fc 	and.w	r5, r5, #2016	@ 0x7e0
 80175c2:	432e      	orrs	r6, r5
 80175c4:	8006      	strh	r6, [r0, #0]
 80175c6:	e7ba      	b.n	801753e <_ZN8touchgfx8LCD16bpp16blitCopyARGB8888EPKmRKNS_4RectES5_h+0x112>
 80175c8:	f8ba 3000 	ldrh.w	r3, [sl]
 80175cc:	f9bd 4024 	ldrsh.w	r4, [sp, #36]	@ 0x24
 80175d0:	eba3 0308 	sub.w	r3, r3, r8
 80175d4:	eba4 0408 	sub.w	r4, r4, r8
 80175d8:	eb00 0043 	add.w	r0, r0, r3, lsl #1
 80175dc:	eb01 0484 	add.w	r4, r1, r4, lsl #2
 80175e0:	e78b      	b.n	80174fa <_ZN8touchgfx8LCD16bpp16blitCopyARGB8888EPKmRKNS_4RectES5_h+0xce>
 80175e2:	4b03      	ldr	r3, [pc, #12]	@ (80175f0 <_ZN8touchgfx8LCD16bpp16blitCopyARGB8888EPKmRKNS_4RectES5_h+0x1c4>)
 80175e4:	6818      	ldr	r0, [r3, #0]
 80175e6:	6803      	ldr	r3, [r0, #0]
 80175e8:	6adb      	ldr	r3, [r3, #44]	@ 0x2c
 80175ea:	4798      	blx	r3
 80175ec:	e76a      	b.n	80174c4 <_ZN8touchgfx8LCD16bpp16blitCopyARGB8888EPKmRKNS_4RectES5_h+0x98>
 80175ee:	bf00      	nop
 80175f0:	20002c5c 	.word	0x20002c5c
 80175f4:	20002c56 	.word	0x20002c56

080175f8 <_ZNK8touchgfx8LCD16bpp21blitCopyARGB8888SolidEPKmRKNS_4RectES5_>:
 80175f8:	e92d 43f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, lr}
 80175fc:	460c      	mov	r4, r1
 80175fe:	b085      	sub	sp, #20
 8017600:	6810      	ldr	r0, [r2, #0]
 8017602:	6851      	ldr	r1, [r2, #4]
 8017604:	466d      	mov	r5, sp
 8017606:	c503      	stmia	r5!, {r0, r1}
 8017608:	6818      	ldr	r0, [r3, #0]
 801760a:	6859      	ldr	r1, [r3, #4]
 801760c:	4616      	mov	r6, r2
 801760e:	c503      	stmia	r5!, {r0, r1}
 8017610:	4668      	mov	r0, sp
 8017612:	f7f7 fbef 	bl	800edf4 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectE>
 8017616:	4631      	mov	r1, r6
 8017618:	a802      	add	r0, sp, #8
 801761a:	f7f7 fc13 	bl	800ee44 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectERKS1_>
 801761e:	f9bd 2008 	ldrsh.w	r2, [sp, #8]
 8017622:	f9bd 300a 	ldrsh.w	r3, [sp, #10]
 8017626:	f8bd 1004 	ldrh.w	r1, [sp, #4]
 801762a:	4d28      	ldr	r5, [pc, #160]	@ (80176cc <_ZNK8touchgfx8LCD16bpp21blitCopyARGB8888SolidEPKmRKNS_4RectES5_+0xd4>)
 801762c:	4e28      	ldr	r6, [pc, #160]	@ (80176d0 <_ZNK8touchgfx8LCD16bpp21blitCopyARGB8888SolidEPKmRKNS_4RectES5_+0xd8>)
 801762e:	6828      	ldr	r0, [r5, #0]
 8017630:	f9bd 700c 	ldrsh.w	r7, [sp, #12]
 8017634:	f9bd 800e 	ldrsh.w	r8, [sp, #14]
 8017638:	fb11 2103 	smlabb	r1, r1, r3, r2
 801763c:	eb04 0481 	add.w	r4, r4, r1, lsl #2
 8017640:	f8bd 1000 	ldrh.w	r1, [sp]
 8017644:	440a      	add	r2, r1
 8017646:	f8ad 2008 	strh.w	r2, [sp, #8]
 801764a:	f8bd 2002 	ldrh.w	r2, [sp, #2]
 801764e:	4413      	add	r3, r2
 8017650:	f8ad 300a 	strh.w	r3, [sp, #10]
 8017654:	6803      	ldr	r3, [r0, #0]
 8017656:	6a9b      	ldr	r3, [r3, #40]	@ 0x28
 8017658:	4798      	blx	r3
 801765a:	8833      	ldrh	r3, [r6, #0]
 801765c:	f9bd 200a 	ldrsh.w	r2, [sp, #10]
 8017660:	f9bd 1008 	ldrsh.w	r1, [sp, #8]
 8017664:	f8df e06c 	ldr.w	lr, [pc, #108]	@ 80176d4 <_ZNK8touchgfx8LCD16bpp21blitCopyARGB8888SolidEPKmRKNS_4RectES5_+0xdc>
 8017668:	fb03 1202 	mla	r2, r3, r2, r1
 801766c:	eb00 0042 	add.w	r0, r0, r2, lsl #1
 8017670:	fb08 f303 	mul.w	r3, r8, r3
 8017674:	eb00 0343 	add.w	r3, r0, r3, lsl #1
 8017678:	ea4f 0c47 	mov.w	ip, r7, lsl #1
 801767c:	4298      	cmp	r0, r3
 801767e:	d21d      	bcs.n	80176bc <_ZNK8touchgfx8LCD16bpp21blitCopyARGB8888SolidEPKmRKNS_4RectES5_+0xc4>
 8017680:	eb00 080c 	add.w	r8, r0, ip
 8017684:	4540      	cmp	r0, r8
 8017686:	d20f      	bcs.n	80176a8 <_ZNK8touchgfx8LCD16bpp21blitCopyARGB8888SolidEPKmRKNS_4RectES5_+0xb0>
 8017688:	f854 1b04 	ldr.w	r1, [r4], #4
 801768c:	ea4f 1951 	mov.w	r9, r1, lsr #5
 8017690:	ea0e 2211 	and.w	r2, lr, r1, lsr #8
 8017694:	f409 69fc 	and.w	r9, r9, #2016	@ 0x7e0
 8017698:	ea42 0209 	orr.w	r2, r2, r9
 801769c:	f3c1 01c4 	ubfx	r1, r1, #3, #5
 80176a0:	430a      	orrs	r2, r1
 80176a2:	f820 2b02 	strh.w	r2, [r0], #2
 80176a6:	e7ed      	b.n	8017684 <_ZNK8touchgfx8LCD16bpp21blitCopyARGB8888SolidEPKmRKNS_4RectES5_+0x8c>
 80176a8:	8832      	ldrh	r2, [r6, #0]
 80176aa:	1bd2      	subs	r2, r2, r7
 80176ac:	eb00 0042 	add.w	r0, r0, r2, lsl #1
 80176b0:	f9bd 2004 	ldrsh.w	r2, [sp, #4]
 80176b4:	1bd2      	subs	r2, r2, r7
 80176b6:	eb04 0482 	add.w	r4, r4, r2, lsl #2
 80176ba:	e7df      	b.n	801767c <_ZNK8touchgfx8LCD16bpp21blitCopyARGB8888SolidEPKmRKNS_4RectES5_+0x84>
 80176bc:	6828      	ldr	r0, [r5, #0]
 80176be:	6803      	ldr	r3, [r0, #0]
 80176c0:	6adb      	ldr	r3, [r3, #44]	@ 0x2c
 80176c2:	4798      	blx	r3
 80176c4:	b005      	add	sp, #20
 80176c6:	e8bd 83f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, pc}
 80176ca:	bf00      	nop
 80176cc:	20002c5c 	.word	0x20002c5c
 80176d0:	20002c56 	.word	0x20002c56
 80176d4:	fffff800 	.word	0xfffff800

080176d8 <_ZN8touchgfx8LCD16bpp14blitCopyRGB888EPKhRKNS_4RectES5_h>:
 80176d8:	e92d 47f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
 80176dc:	460e      	mov	r6, r1
 80176de:	b08e      	sub	sp, #56	@ 0x38
 80176e0:	4604      	mov	r4, r0
 80176e2:	6808      	ldr	r0, [r1, #0]
 80176e4:	6849      	ldr	r1, [r1, #4]
 80176e6:	f8df 81d8 	ldr.w	r8, [pc, #472]	@ 80178c0 <_ZN8touchgfx8LCD16bpp14blitCopyRGB888EPKhRKNS_4RectES5_h+0x1e8>
 80176ea:	f8df 91d8 	ldr.w	r9, [pc, #472]	@ 80178c4 <_ZN8touchgfx8LCD16bpp14blitCopyRGB888EPKhRKNS_4RectES5_h+0x1ec>
 80176ee:	461d      	mov	r5, r3
 80176f0:	ab0a      	add	r3, sp, #40	@ 0x28
 80176f2:	c303      	stmia	r3!, {r0, r1}
 80176f4:	6810      	ldr	r0, [r2, #0]
 80176f6:	6851      	ldr	r1, [r2, #4]
 80176f8:	ab0c      	add	r3, sp, #48	@ 0x30
 80176fa:	c303      	stmia	r3!, {r0, r1}
 80176fc:	a80a      	add	r0, sp, #40	@ 0x28
 80176fe:	f7f7 fb79 	bl	800edf4 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectE>
 8017702:	4631      	mov	r1, r6
 8017704:	a80c      	add	r0, sp, #48	@ 0x30
 8017706:	f7f7 fb9d 	bl	800ee44 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectERKS1_>
 801770a:	f9bd 2030 	ldrsh.w	r2, [sp, #48]	@ 0x30
 801770e:	f9bd 3032 	ldrsh.w	r3, [sp, #50]	@ 0x32
 8017712:	f8bd 102c 	ldrh.w	r1, [sp, #44]	@ 0x2c
 8017716:	f8d8 0000 	ldr.w	r0, [r8]
 801771a:	f9bd 7034 	ldrsh.w	r7, [sp, #52]	@ 0x34
 801771e:	f9bd 6036 	ldrsh.w	r6, [sp, #54]	@ 0x36
 8017722:	fb11 2103 	smlabb	r1, r1, r3, r2
 8017726:	eb01 0141 	add.w	r1, r1, r1, lsl #1
 801772a:	440c      	add	r4, r1
 801772c:	f8bd 1028 	ldrh.w	r1, [sp, #40]	@ 0x28
 8017730:	440a      	add	r2, r1
 8017732:	f8ad 2030 	strh.w	r2, [sp, #48]	@ 0x30
 8017736:	f8bd 202a 	ldrh.w	r2, [sp, #42]	@ 0x2a
 801773a:	4413      	add	r3, r2
 801773c:	f8ad 3032 	strh.w	r3, [sp, #50]	@ 0x32
 8017740:	6803      	ldr	r3, [r0, #0]
 8017742:	6b9b      	ldr	r3, [r3, #56]	@ 0x38
 8017744:	4798      	blx	r3
 8017746:	2dff      	cmp	r5, #255	@ 0xff
 8017748:	d124      	bne.n	8017794 <_ZN8touchgfx8LCD16bpp14blitCopyRGB888EPKhRKNS_4RectES5_h+0xbc>
 801774a:	f010 0f01 	tst.w	r0, #1
 801774e:	f8d8 0000 	ldr.w	r0, [r8]
 8017752:	d022      	beq.n	801779a <_ZN8touchgfx8LCD16bpp14blitCopyRGB888EPKhRKNS_4RectES5_h+0xc2>
 8017754:	2100      	movs	r1, #0
 8017756:	f8d0 c000 	ldr.w	ip, [r0]
 801775a:	f8bd 3032 	ldrh.w	r3, [sp, #50]	@ 0x32
 801775e:	f8bd 2030 	ldrh.w	r2, [sp, #48]	@ 0x30
 8017762:	e9cd 1107 	strd	r1, r1, [sp, #28]
 8017766:	f04f 0e01 	mov.w	lr, #1
 801776a:	f8cd e018 	str.w	lr, [sp, #24]
 801776e:	f8b9 e000 	ldrh.w	lr, [r9]
 8017772:	9503      	str	r5, [sp, #12]
 8017774:	e9cd 1e04 	strd	r1, lr, [sp, #16]
 8017778:	b2b6      	uxth	r6, r6
 801777a:	f8bd 102c 	ldrh.w	r1, [sp, #44]	@ 0x2c
 801777e:	9102      	str	r1, [sp, #8]
 8017780:	b2bf      	uxth	r7, r7
 8017782:	9601      	str	r6, [sp, #4]
 8017784:	9700      	str	r7, [sp, #0]
 8017786:	f8dc 5040 	ldr.w	r5, [ip, #64]	@ 0x40
 801778a:	4621      	mov	r1, r4
 801778c:	47a8      	blx	r5
 801778e:	b00e      	add	sp, #56	@ 0x38
 8017790:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
 8017794:	f010 0f04 	tst.w	r0, #4
 8017798:	e7d9      	b.n	801774e <_ZN8touchgfx8LCD16bpp14blitCopyRGB888EPKhRKNS_4RectES5_h+0x76>
 801779a:	6803      	ldr	r3, [r0, #0]
 801779c:	6a9b      	ldr	r3, [r3, #40]	@ 0x28
 801779e:	4798      	blx	r3
 80177a0:	f8b9 3000 	ldrh.w	r3, [r9]
 80177a4:	f9bd 2032 	ldrsh.w	r2, [sp, #50]	@ 0x32
 80177a8:	f9bd 1030 	ldrsh.w	r1, [sp, #48]	@ 0x30
 80177ac:	f9bd c02c 	ldrsh.w	ip, [sp, #44]	@ 0x2c
 80177b0:	fb03 1202 	mla	r2, r3, r2, r1
 80177b4:	ebac 0c07 	sub.w	ip, ip, r7
 80177b8:	eb00 0042 	add.w	r0, r0, r2, lsl #1
 80177bc:	435e      	muls	r6, r3
 80177be:	ea4f 0e47 	mov.w	lr, r7, lsl #1
 80177c2:	2dff      	cmp	r5, #255	@ 0xff
 80177c4:	eba3 0707 	sub.w	r7, r3, r7
 80177c8:	eb00 0646 	add.w	r6, r0, r6, lsl #1
 80177cc:	eb0c 0c4c 	add.w	ip, ip, ip, lsl #1
 80177d0:	ea4f 0747 	mov.w	r7, r7, lsl #1
 80177d4:	d049      	beq.n	801786a <_ZN8touchgfx8LCD16bpp14blitCopyRGB888EPKhRKNS_4RectES5_h+0x192>
 80177d6:	43eb      	mvns	r3, r5
 80177d8:	fa1f f985 	uxth.w	r9, r5
 80177dc:	b2db      	uxtb	r3, r3
 80177de:	42b0      	cmp	r0, r6
 80177e0:	d266      	bcs.n	80178b0 <_ZN8touchgfx8LCD16bpp14blitCopyRGB888EPKhRKNS_4RectES5_h+0x1d8>
 80177e2:	eb00 0a0e 	add.w	sl, r0, lr
 80177e6:	4550      	cmp	r0, sl
 80177e8:	4621      	mov	r1, r4
 80177ea:	f104 0403 	add.w	r4, r4, #3
 80177ee:	d25b      	bcs.n	80178a8 <_ZN8touchgfx8LCD16bpp14blitCopyRGB888EPKhRKNS_4RectES5_h+0x1d0>
 80177f0:	8802      	ldrh	r2, [r0, #0]
 80177f2:	f814 1c01 	ldrb.w	r1, [r4, #-1]
 80177f6:	ea4f 2822 	mov.w	r8, r2, asr #8
 80177fa:	f008 08f8 	and.w	r8, r8, #248	@ 0xf8
 80177fe:	fb11 f109 	smulbb	r1, r1, r9
 8017802:	ea48 1858 	orr.w	r8, r8, r8, lsr #5
 8017806:	10d5      	asrs	r5, r2, #3
 8017808:	fb08 1803 	mla	r8, r8, r3, r1
 801780c:	f814 1c02 	ldrb.w	r1, [r4, #-2]
 8017810:	f005 05fc 	and.w	r5, r5, #252	@ 0xfc
 8017814:	fb11 f109 	smulbb	r1, r1, r9
 8017818:	ea45 1595 	orr.w	r5, r5, r5, lsr #6
 801781c:	fb05 1503 	mla	r5, r5, r3, r1
 8017820:	00d2      	lsls	r2, r2, #3
 8017822:	f814 1c03 	ldrb.w	r1, [r4, #-3]
 8017826:	b2d2      	uxtb	r2, r2
 8017828:	fb11 f109 	smulbb	r1, r1, r9
 801782c:	ea42 1252 	orr.w	r2, r2, r2, lsr #5
 8017830:	fa1f f888 	uxth.w	r8, r8
 8017834:	fb02 1203 	mla	r2, r2, r3, r1
 8017838:	b292      	uxth	r2, r2
 801783a:	f108 0101 	add.w	r1, r8, #1
 801783e:	b2ad      	uxth	r5, r5
 8017840:	eb01 2818 	add.w	r8, r1, r8, lsr #8
 8017844:	1c51      	adds	r1, r2, #1
 8017846:	eb01 2212 	add.w	r2, r1, r2, lsr #8
 801784a:	1c69      	adds	r1, r5, #1
 801784c:	eb01 2515 	add.w	r5, r1, r5, lsr #8
 8017850:	f408 4878 	and.w	r8, r8, #63488	@ 0xf800
 8017854:	f3c2 22c4 	ubfx	r2, r2, #11, #5
 8017858:	096d      	lsrs	r5, r5, #5
 801785a:	ea42 0208 	orr.w	r2, r2, r8
 801785e:	f405 65fc 	and.w	r5, r5, #2016	@ 0x7e0
 8017862:	432a      	orrs	r2, r5
 8017864:	f820 2b02 	strh.w	r2, [r0], #2
 8017868:	e7bd      	b.n	80177e6 <_ZN8touchgfx8LCD16bpp14blitCopyRGB888EPKhRKNS_4RectES5_h+0x10e>
 801786a:	4a14      	ldr	r2, [pc, #80]	@ (80178bc <_ZN8touchgfx8LCD16bpp14blitCopyRGB888EPKhRKNS_4RectES5_h+0x1e4>)
 801786c:	42b0      	cmp	r0, r6
 801786e:	d21f      	bcs.n	80178b0 <_ZN8touchgfx8LCD16bpp14blitCopyRGB888EPKhRKNS_4RectES5_h+0x1d8>
 8017870:	eb00 050e 	add.w	r5, r0, lr
 8017874:	42a8      	cmp	r0, r5
 8017876:	4621      	mov	r1, r4
 8017878:	f104 0403 	add.w	r4, r4, #3
 801787c:	d210      	bcs.n	80178a0 <_ZN8touchgfx8LCD16bpp14blitCopyRGB888EPKhRKNS_4RectES5_h+0x1c8>
 801787e:	f814 3c02 	ldrb.w	r3, [r4, #-2]
 8017882:	f814 1c01 	ldrb.w	r1, [r4, #-1]
 8017886:	00db      	lsls	r3, r3, #3
 8017888:	ea02 2101 	and.w	r1, r2, r1, lsl #8
 801788c:	f403 63fc 	and.w	r3, r3, #2016	@ 0x7e0
 8017890:	430b      	orrs	r3, r1
 8017892:	f814 1c03 	ldrb.w	r1, [r4, #-3]
 8017896:	ea43 03d1 	orr.w	r3, r3, r1, lsr #3
 801789a:	f820 3b02 	strh.w	r3, [r0], #2
 801789e:	e7e9      	b.n	8017874 <_ZN8touchgfx8LCD16bpp14blitCopyRGB888EPKhRKNS_4RectES5_h+0x19c>
 80178a0:	4438      	add	r0, r7
 80178a2:	eb01 040c 	add.w	r4, r1, ip
 80178a6:	e7e1      	b.n	801786c <_ZN8touchgfx8LCD16bpp14blitCopyRGB888EPKhRKNS_4RectES5_h+0x194>
 80178a8:	4438      	add	r0, r7
 80178aa:	eb01 040c 	add.w	r4, r1, ip
 80178ae:	e796      	b.n	80177de <_ZN8touchgfx8LCD16bpp14blitCopyRGB888EPKhRKNS_4RectES5_h+0x106>
 80178b0:	4b03      	ldr	r3, [pc, #12]	@ (80178c0 <_ZN8touchgfx8LCD16bpp14blitCopyRGB888EPKhRKNS_4RectES5_h+0x1e8>)
 80178b2:	6818      	ldr	r0, [r3, #0]
 80178b4:	6803      	ldr	r3, [r0, #0]
 80178b6:	6adb      	ldr	r3, [r3, #44]	@ 0x2c
 80178b8:	4798      	blx	r3
 80178ba:	e768      	b.n	801778e <_ZN8touchgfx8LCD16bpp14blitCopyRGB888EPKhRKNS_4RectES5_h+0xb6>
 80178bc:	fffff800 	.word	0xfffff800
 80178c0:	20002c5c 	.word	0x20002c5c
 80178c4:	20002c56 	.word	0x20002c56

080178c8 <_ZN8touchgfx8LCD16bpp8blitCopyEPKhNS_6Bitmap12BitmapFormatERKNS_4RectES7_hb>:
 80178c8:	b4f0      	push	{r4, r5, r6, r7}
 80178ca:	4616      	mov	r6, r2
 80178cc:	2e01      	cmp	r6, #1
 80178ce:	461c      	mov	r4, r3
 80178d0:	460d      	mov	r5, r1
 80178d2:	9a04      	ldr	r2, [sp, #16]
 80178d4:	f89d 3014 	ldrb.w	r3, [sp, #20]
 80178d8:	f89d 7018 	ldrb.w	r7, [sp, #24]
 80178dc:	d012      	beq.n	8017904 <_ZN8touchgfx8LCD16bpp8blitCopyEPKhNS_6Bitmap12BitmapFormatERKNS_4RectES7_hb+0x3c>
 80178de:	d303      	bcc.n	80178e8 <_ZN8touchgfx8LCD16bpp8blitCopyEPKhNS_6Bitmap12BitmapFormatERKNS_4RectES7_hb+0x20>
 80178e0:	2e02      	cmp	r6, #2
 80178e2:	d00a      	beq.n	80178fa <_ZN8touchgfx8LCD16bpp8blitCopyEPKhNS_6Bitmap12BitmapFormatERKNS_4RectES7_hb+0x32>
 80178e4:	bcf0      	pop	{r4, r5, r6, r7}
 80178e6:	4770      	bx	lr
 80178e8:	6805      	ldr	r5, [r0, #0]
 80178ea:	e9cd 3704 	strd	r3, r7, [sp, #16]
 80178ee:	68ed      	ldr	r5, [r5, #12]
 80178f0:	4613      	mov	r3, r2
 80178f2:	46ac      	mov	ip, r5
 80178f4:	4622      	mov	r2, r4
 80178f6:	bcf0      	pop	{r4, r5, r6, r7}
 80178f8:	4760      	bx	ip
 80178fa:	4621      	mov	r1, r4
 80178fc:	4628      	mov	r0, r5
 80178fe:	bcf0      	pop	{r4, r5, r6, r7}
 8017900:	f7ff bd94 	b.w	801742c <_ZN8touchgfx8LCD16bpp16blitCopyARGB8888EPKmRKNS_4RectES5_h>
 8017904:	4621      	mov	r1, r4
 8017906:	4628      	mov	r0, r5
 8017908:	bcf0      	pop	{r4, r5, r6, r7}
 801790a:	f7ff bee5 	b.w	80176d8 <_ZN8touchgfx8LCD16bpp14blitCopyRGB888EPKhRKNS_4RectES5_h>
	...

08017910 <_ZN8touchgfx8LCD16bpp19blitCopyL8_ARGB8888EPKhS2_RKNS_4RectES5_h>:
 8017910:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8017914:	4681      	mov	r9, r0
 8017916:	b093      	sub	sp, #76	@ 0x4c
 8017918:	6810      	ldr	r0, [r2, #0]
 801791a:	f89d a070 	ldrb.w	sl, [sp, #112]	@ 0x70
 801791e:	4f6d      	ldr	r7, [pc, #436]	@ (8017ad4 <_ZN8touchgfx8LCD16bpp19blitCopyL8_ARGB8888EPKhS2_RKNS_4RectES5_h+0x1c4>)
 8017920:	4688      	mov	r8, r1
 8017922:	6851      	ldr	r1, [r2, #4]
 8017924:	ac0e      	add	r4, sp, #56	@ 0x38
 8017926:	c403      	stmia	r4!, {r0, r1}
 8017928:	6818      	ldr	r0, [r3, #0]
 801792a:	6859      	ldr	r1, [r3, #4]
 801792c:	ac10      	add	r4, sp, #64	@ 0x40
 801792e:	4616      	mov	r6, r2
 8017930:	c403      	stmia	r4!, {r0, r1}
 8017932:	a80e      	add	r0, sp, #56	@ 0x38
 8017934:	f7f7 fa5e 	bl	800edf4 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectE>
 8017938:	4631      	mov	r1, r6
 801793a:	a810      	add	r0, sp, #64	@ 0x40
 801793c:	f7f7 fa82 	bl	800ee44 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectERKS1_>
 8017940:	f9bd 2040 	ldrsh.w	r2, [sp, #64]	@ 0x40
 8017944:	f9bd 3042 	ldrsh.w	r3, [sp, #66]	@ 0x42
 8017948:	f8bd 103c 	ldrh.w	r1, [sp, #60]	@ 0x3c
 801794c:	4e62      	ldr	r6, [pc, #392]	@ (8017ad8 <_ZN8touchgfx8LCD16bpp19blitCopyL8_ARGB8888EPKhS2_RKNS_4RectES5_h+0x1c8>)
 801794e:	f9bd 4044 	ldrsh.w	r4, [sp, #68]	@ 0x44
 8017952:	6830      	ldr	r0, [r6, #0]
 8017954:	f9bd 5046 	ldrsh.w	r5, [sp, #70]	@ 0x46
 8017958:	fb11 2103 	smlabb	r1, r1, r3, r2
 801795c:	4489      	add	r9, r1
 801795e:	f8bd 1038 	ldrh.w	r1, [sp, #56]	@ 0x38
 8017962:	440a      	add	r2, r1
 8017964:	f8ad 2040 	strh.w	r2, [sp, #64]	@ 0x40
 8017968:	f8bd 203a 	ldrh.w	r2, [sp, #58]	@ 0x3a
 801796c:	4413      	add	r3, r2
 801796e:	f8ad 3042 	strh.w	r3, [sp, #66]	@ 0x42
 8017972:	6803      	ldr	r3, [r0, #0]
 8017974:	6b9b      	ldr	r3, [r3, #56]	@ 0x38
 8017976:	4798      	blx	r3
 8017978:	f010 0f80 	tst.w	r0, #128	@ 0x80
 801797c:	6830      	ldr	r0, [r6, #0]
 801797e:	d01d      	beq.n	80179bc <_ZN8touchgfx8LCD16bpp19blitCopyL8_ARGB8888EPKhS2_RKNS_4RectES5_h+0xac>
 8017980:	2200      	movs	r2, #0
 8017982:	6801      	ldr	r1, [r0, #0]
 8017984:	f8bd 3040 	ldrh.w	r3, [sp, #64]	@ 0x40
 8017988:	e9cd 2208 	strd	r2, r2, [sp, #32]
 801798c:	220b      	movs	r2, #11
 801798e:	9207      	str	r2, [sp, #28]
 8017990:	883a      	ldrh	r2, [r7, #0]
 8017992:	9206      	str	r2, [sp, #24]
 8017994:	2201      	movs	r2, #1
 8017996:	e9cd a204 	strd	sl, r2, [sp, #16]
 801799a:	f8bd 203c 	ldrh.w	r2, [sp, #60]	@ 0x3c
 801799e:	9203      	str	r2, [sp, #12]
 80179a0:	b2a4      	uxth	r4, r4
 80179a2:	f8bd 2042 	ldrh.w	r2, [sp, #66]	@ 0x42
 80179a6:	9200      	str	r2, [sp, #0]
 80179a8:	b2ad      	uxth	r5, r5
 80179aa:	9502      	str	r5, [sp, #8]
 80179ac:	9401      	str	r4, [sp, #4]
 80179ae:	6bcc      	ldr	r4, [r1, #60]	@ 0x3c
 80179b0:	4642      	mov	r2, r8
 80179b2:	4649      	mov	r1, r9
 80179b4:	47a0      	blx	r4
 80179b6:	b013      	add	sp, #76	@ 0x4c
 80179b8:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 80179bc:	6803      	ldr	r3, [r0, #0]
 80179be:	6a9b      	ldr	r3, [r3, #40]	@ 0x28
 80179c0:	4798      	blx	r3
 80179c2:	883b      	ldrh	r3, [r7, #0]
 80179c4:	f9bd 2042 	ldrsh.w	r2, [sp, #66]	@ 0x42
 80179c8:	f9bd 1040 	ldrsh.w	r1, [sp, #64]	@ 0x40
 80179cc:	fb03 1202 	mla	r2, r3, r2, r1
 80179d0:	435d      	muls	r5, r3
 80179d2:	eb00 0042 	add.w	r0, r0, r2, lsl #1
 80179d6:	eb00 0245 	add.w	r2, r0, r5, lsl #1
 80179da:	920c      	str	r2, [sp, #48]	@ 0x30
 80179dc:	f9bd 203c 	ldrsh.w	r2, [sp, #60]	@ 0x3c
 80179e0:	1b12      	subs	r2, r2, r4
 80179e2:	920d      	str	r2, [sp, #52]	@ 0x34
 80179e4:	0062      	lsls	r2, r4, #1
 80179e6:	1b1c      	subs	r4, r3, r4
 80179e8:	0063      	lsls	r3, r4, #1
 80179ea:	920a      	str	r2, [sp, #40]	@ 0x28
 80179ec:	930b      	str	r3, [sp, #44]	@ 0x2c
 80179ee:	f04f 0e04 	mov.w	lr, #4
 80179f2:	9b0c      	ldr	r3, [sp, #48]	@ 0x30
 80179f4:	4298      	cmp	r0, r3
 80179f6:	d266      	bcs.n	8017ac6 <_ZN8touchgfx8LCD16bpp19blitCopyL8_ARGB8888EPKhS2_RKNS_4RectES5_h+0x1b6>
 80179f8:	9b0a      	ldr	r3, [sp, #40]	@ 0x28
 80179fa:	eb00 0b03 	add.w	fp, r0, r3
 80179fe:	4558      	cmp	r0, fp
 8017a00:	d25c      	bcs.n	8017abc <_ZN8touchgfx8LCD16bpp19blitCopyL8_ARGB8888EPKhS2_RKNS_4RectES5_h+0x1ac>
 8017a02:	f819 3b01 	ldrb.w	r3, [r9], #1
 8017a06:	fb1e e303 	smlabb	r3, lr, r3, lr
 8017a0a:	f858 2003 	ldr.w	r2, [r8, r3]
 8017a0e:	0e11      	lsrs	r1, r2, #24
 8017a10:	d012      	beq.n	8017a38 <_ZN8touchgfx8LCD16bpp19blitCopyL8_ARGB8888EPKhS2_RKNS_4RectES5_h+0x128>
 8017a12:	29ff      	cmp	r1, #255	@ 0xff
 8017a14:	ea4f 2712 	mov.w	r7, r2, lsr #8
 8017a18:	d110      	bne.n	8017a3c <_ZN8touchgfx8LCD16bpp19blitCopyL8_ARGB8888EPKhS2_RKNS_4RectES5_h+0x12c>
 8017a1a:	f1ba 0fff 	cmp.w	sl, #255	@ 0xff
 8017a1e:	d10d      	bne.n	8017a3c <_ZN8touchgfx8LCD16bpp19blitCopyL8_ARGB8888EPKhS2_RKNS_4RectES5_h+0x12c>
 8017a20:	0953      	lsrs	r3, r2, #5
 8017a22:	f427 67ff 	bic.w	r7, r7, #2040	@ 0x7f8
 8017a26:	f403 63fc 	and.w	r3, r3, #2016	@ 0x7e0
 8017a2a:	f027 0707 	bic.w	r7, r7, #7
 8017a2e:	431f      	orrs	r7, r3
 8017a30:	f3c2 02c4 	ubfx	r2, r2, #3, #5
 8017a34:	433a      	orrs	r2, r7
 8017a36:	8002      	strh	r2, [r0, #0]
 8017a38:	3002      	adds	r0, #2
 8017a3a:	e7e0      	b.n	80179fe <_ZN8touchgfx8LCD16bpp19blitCopyL8_ARGB8888EPKhS2_RKNS_4RectES5_h+0xee>
 8017a3c:	fb0a f101 	mul.w	r1, sl, r1
 8017a40:	8806      	ldrh	r6, [r0, #0]
 8017a42:	1c4b      	adds	r3, r1, #1
 8017a44:	eb03 2321 	add.w	r3, r3, r1, asr #8
 8017a48:	1235      	asrs	r5, r6, #8
 8017a4a:	10f4      	asrs	r4, r6, #3
 8017a4c:	121b      	asrs	r3, r3, #8
 8017a4e:	00f6      	lsls	r6, r6, #3
 8017a50:	b299      	uxth	r1, r3
 8017a52:	f3c2 4c07 	ubfx	ip, r2, #16, #8
 8017a56:	f005 05f8 	and.w	r5, r5, #248	@ 0xf8
 8017a5a:	b2f6      	uxtb	r6, r6
 8017a5c:	43db      	mvns	r3, r3
 8017a5e:	b2d2      	uxtb	r2, r2
 8017a60:	b2db      	uxtb	r3, r3
 8017a62:	fb1c fc01 	smulbb	ip, ip, r1
 8017a66:	ea45 1555 	orr.w	r5, r5, r5, lsr #5
 8017a6a:	ea46 1656 	orr.w	r6, r6, r6, lsr #5
 8017a6e:	fb12 f201 	smulbb	r2, r2, r1
 8017a72:	fb05 c503 	mla	r5, r5, r3, ip
 8017a76:	f004 04fc 	and.w	r4, r4, #252	@ 0xfc
 8017a7a:	b2ff      	uxtb	r7, r7
 8017a7c:	fb06 2203 	mla	r2, r6, r3, r2
 8017a80:	b2ad      	uxth	r5, r5
 8017a82:	fb17 f701 	smulbb	r7, r7, r1
 8017a86:	b292      	uxth	r2, r2
 8017a88:	ea44 1494 	orr.w	r4, r4, r4, lsr #6
 8017a8c:	fb04 7403 	mla	r4, r4, r3, r7
 8017a90:	f105 0c01 	add.w	ip, r5, #1
 8017a94:	1c57      	adds	r7, r2, #1
 8017a96:	eb0c 2515 	add.w	r5, ip, r5, lsr #8
 8017a9a:	eb07 2712 	add.w	r7, r7, r2, lsr #8
 8017a9e:	b2a4      	uxth	r4, r4
 8017aa0:	f3c7 27c4 	ubfx	r7, r7, #11, #5
 8017aa4:	f405 4578 	and.w	r5, r5, #63488	@ 0xf800
 8017aa8:	433d      	orrs	r5, r7
 8017aaa:	1c67      	adds	r7, r4, #1
 8017aac:	eb07 2414 	add.w	r4, r7, r4, lsr #8
 8017ab0:	0964      	lsrs	r4, r4, #5
 8017ab2:	f404 64fc 	and.w	r4, r4, #2016	@ 0x7e0
 8017ab6:	4325      	orrs	r5, r4
 8017ab8:	8005      	strh	r5, [r0, #0]
 8017aba:	e7bd      	b.n	8017a38 <_ZN8touchgfx8LCD16bpp19blitCopyL8_ARGB8888EPKhS2_RKNS_4RectES5_h+0x128>
 8017abc:	9b0b      	ldr	r3, [sp, #44]	@ 0x2c
 8017abe:	4418      	add	r0, r3
 8017ac0:	9b0d      	ldr	r3, [sp, #52]	@ 0x34
 8017ac2:	4499      	add	r9, r3
 8017ac4:	e795      	b.n	80179f2 <_ZN8touchgfx8LCD16bpp19blitCopyL8_ARGB8888EPKhS2_RKNS_4RectES5_h+0xe2>
 8017ac6:	4b04      	ldr	r3, [pc, #16]	@ (8017ad8 <_ZN8touchgfx8LCD16bpp19blitCopyL8_ARGB8888EPKhS2_RKNS_4RectES5_h+0x1c8>)
 8017ac8:	6818      	ldr	r0, [r3, #0]
 8017aca:	6803      	ldr	r3, [r0, #0]
 8017acc:	6adb      	ldr	r3, [r3, #44]	@ 0x2c
 8017ace:	4798      	blx	r3
 8017ad0:	e771      	b.n	80179b6 <_ZN8touchgfx8LCD16bpp19blitCopyL8_ARGB8888EPKhS2_RKNS_4RectES5_h+0xa6>
 8017ad2:	bf00      	nop
 8017ad4:	20002c56 	.word	0x20002c56
 8017ad8:	20002c5c 	.word	0x20002c5c

08017adc <_ZN8touchgfx8LCD16bpp17blitCopyL8_RGB565EPKhS2_RKNS_4RectES5_h>:
 8017adc:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8017ae0:	b087      	sub	sp, #28
 8017ae2:	4680      	mov	r8, r0
 8017ae4:	f89d 6040 	ldrb.w	r6, [sp, #64]	@ 0x40
 8017ae8:	460d      	mov	r5, r1
 8017aea:	4614      	mov	r4, r2
 8017aec:	2e00      	cmp	r6, #0
 8017aee:	f000 80b9 	beq.w	8017c64 <_ZN8touchgfx8LCD16bpp17blitCopyL8_RGB565EPKhS2_RKNS_4RectES5_h+0x188>
 8017af2:	6810      	ldr	r0, [r2, #0]
 8017af4:	6851      	ldr	r1, [r2, #4]
 8017af6:	af02      	add	r7, sp, #8
 8017af8:	c703      	stmia	r7!, {r0, r1}
 8017afa:	6818      	ldr	r0, [r3, #0]
 8017afc:	6859      	ldr	r1, [r3, #4]
 8017afe:	af04      	add	r7, sp, #16
 8017b00:	c703      	stmia	r7!, {r0, r1}
 8017b02:	a802      	add	r0, sp, #8
 8017b04:	f7f7 f976 	bl	800edf4 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectE>
 8017b08:	4621      	mov	r1, r4
 8017b0a:	a804      	add	r0, sp, #16
 8017b0c:	f7f7 f99a 	bl	800ee44 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectERKS1_>
 8017b10:	f9bd 2010 	ldrsh.w	r2, [sp, #16]
 8017b14:	f9bd 3012 	ldrsh.w	r3, [sp, #18]
 8017b18:	f8bd 400c 	ldrh.w	r4, [sp, #12]
 8017b1c:	f9bd 7016 	ldrsh.w	r7, [sp, #22]
 8017b20:	fb14 2103 	smlabb	r1, r4, r3, r2
 8017b24:	eb08 0401 	add.w	r4, r8, r1
 8017b28:	f8bd 1008 	ldrh.w	r1, [sp, #8]
 8017b2c:	f9bd 8014 	ldrsh.w	r8, [sp, #20]
 8017b30:	440a      	add	r2, r1
 8017b32:	f8ad 2010 	strh.w	r2, [sp, #16]
 8017b36:	f8bd 200a 	ldrh.w	r2, [sp, #10]
 8017b3a:	4413      	add	r3, r2
 8017b3c:	f8ad 3012 	strh.w	r3, [sp, #18]
 8017b40:	4b4a      	ldr	r3, [pc, #296]	@ (8017c6c <_ZN8touchgfx8LCD16bpp17blitCopyL8_RGB565EPKhS2_RKNS_4RectES5_h+0x190>)
 8017b42:	6818      	ldr	r0, [r3, #0]
 8017b44:	6803      	ldr	r3, [r0, #0]
 8017b46:	6a9b      	ldr	r3, [r3, #40]	@ 0x28
 8017b48:	4798      	blx	r3
 8017b4a:	4b49      	ldr	r3, [pc, #292]	@ (8017c70 <_ZN8touchgfx8LCD16bpp17blitCopyL8_RGB565EPKhS2_RKNS_4RectES5_h+0x194>)
 8017b4c:	f9bd 1012 	ldrsh.w	r1, [sp, #18]
 8017b50:	881a      	ldrh	r2, [r3, #0]
 8017b52:	f9bd c010 	ldrsh.w	ip, [sp, #16]
 8017b56:	2eff      	cmp	r6, #255	@ 0xff
 8017b58:	fb02 c101 	mla	r1, r2, r1, ip
 8017b5c:	eb00 0041 	add.w	r0, r0, r1, lsl #1
 8017b60:	fb02 f207 	mul.w	r2, r2, r7
 8017b64:	f105 0104 	add.w	r1, r5, #4
 8017b68:	ea4f 0a48 	mov.w	sl, r8, lsl #1
 8017b6c:	461d      	mov	r5, r3
 8017b6e:	d05a      	beq.n	8017c26 <_ZN8touchgfx8LCD16bpp17blitCopyL8_RGB565EPKhS2_RKNS_4RectES5_h+0x14a>
 8017b70:	f1c6 0eff 	rsb	lr, r6, #255	@ 0xff
 8017b74:	eb00 0242 	add.w	r2, r0, r2, lsl #1
 8017b78:	b2b6      	uxth	r6, r6
 8017b7a:	fa1f fe8e 	uxth.w	lr, lr
 8017b7e:	9301      	str	r3, [sp, #4]
 8017b80:	4282      	cmp	r2, r0
 8017b82:	d96a      	bls.n	8017c5a <_ZN8touchgfx8LCD16bpp17blitCopyL8_RGB565EPKhS2_RKNS_4RectES5_h+0x17e>
 8017b84:	eb00 0b0a 	add.w	fp, r0, sl
 8017b88:	4583      	cmp	fp, r0
 8017b8a:	d940      	bls.n	8017c0e <_ZN8touchgfx8LCD16bpp17blitCopyL8_RGB565EPKhS2_RKNS_4RectES5_h+0x132>
 8017b8c:	f814 3b01 	ldrb.w	r3, [r4], #1
 8017b90:	8805      	ldrh	r5, [r0, #0]
 8017b92:	f831 3013 	ldrh.w	r3, [r1, r3, lsl #1]
 8017b96:	122f      	asrs	r7, r5, #8
 8017b98:	ea4f 2c23 	mov.w	ip, r3, asr #8
 8017b9c:	f007 07f8 	and.w	r7, r7, #248	@ 0xf8
 8017ba0:	fb17 f70e 	smulbb	r7, r7, lr
 8017ba4:	ea4f 09e5 	mov.w	r9, r5, asr #3
 8017ba8:	f00c 0cf8 	and.w	ip, ip, #248	@ 0xf8
 8017bac:	00ed      	lsls	r5, r5, #3
 8017bae:	fb0c 7c06 	mla	ip, ip, r6, r7
 8017bb2:	f009 09fc 	and.w	r9, r9, #252	@ 0xfc
 8017bb6:	10df      	asrs	r7, r3, #3
 8017bb8:	b2ed      	uxtb	r5, r5
 8017bba:	00db      	lsls	r3, r3, #3
 8017bbc:	fa1f fc8c 	uxth.w	ip, ip
 8017bc0:	fb19 f90e 	smulbb	r9, r9, lr
 8017bc4:	f007 07fc 	and.w	r7, r7, #252	@ 0xfc
 8017bc8:	b2db      	uxtb	r3, r3
 8017bca:	fb15 f50e 	smulbb	r5, r5, lr
 8017bce:	fb07 9706 	mla	r7, r7, r6, r9
 8017bd2:	fb03 5306 	mla	r3, r3, r6, r5
 8017bd6:	f10c 0901 	add.w	r9, ip, #1
 8017bda:	b29b      	uxth	r3, r3
 8017bdc:	eb09 2c1c 	add.w	ip, r9, ip, lsr #8
 8017be0:	f40c 4978 	and.w	r9, ip, #63488	@ 0xf800
 8017be4:	f103 0c01 	add.w	ip, r3, #1
 8017be8:	eb0c 2c13 	add.w	ip, ip, r3, lsr #8
 8017bec:	b2bf      	uxth	r7, r7
 8017bee:	f3cc 2cc4 	ubfx	ip, ip, #11, #5
 8017bf2:	ea4c 0c09 	orr.w	ip, ip, r9
 8017bf6:	f107 0901 	add.w	r9, r7, #1
 8017bfa:	eb09 2717 	add.w	r7, r9, r7, lsr #8
 8017bfe:	097f      	lsrs	r7, r7, #5
 8017c00:	f407 67fc 	and.w	r7, r7, #2016	@ 0x7e0
 8017c04:	ea4c 0c07 	orr.w	ip, ip, r7
 8017c08:	f820 cb02 	strh.w	ip, [r0], #2
 8017c0c:	e7bc      	b.n	8017b88 <_ZN8touchgfx8LCD16bpp17blitCopyL8_RGB565EPKhS2_RKNS_4RectES5_h+0xac>
 8017c0e:	9b01      	ldr	r3, [sp, #4]
 8017c10:	881b      	ldrh	r3, [r3, #0]
 8017c12:	eba3 0308 	sub.w	r3, r3, r8
 8017c16:	eb00 0043 	add.w	r0, r0, r3, lsl #1
 8017c1a:	f9bd 300c 	ldrsh.w	r3, [sp, #12]
 8017c1e:	eba3 0308 	sub.w	r3, r3, r8
 8017c22:	441c      	add	r4, r3
 8017c24:	e7ac      	b.n	8017b80 <_ZN8touchgfx8LCD16bpp17blitCopyL8_RGB565EPKhS2_RKNS_4RectES5_h+0xa4>
 8017c26:	eb00 0242 	add.w	r2, r0, r2, lsl #1
 8017c2a:	4282      	cmp	r2, r0
 8017c2c:	d915      	bls.n	8017c5a <_ZN8touchgfx8LCD16bpp17blitCopyL8_RGB565EPKhS2_RKNS_4RectES5_h+0x17e>
 8017c2e:	eb00 060a 	add.w	r6, r0, sl
 8017c32:	4286      	cmp	r6, r0
 8017c34:	d906      	bls.n	8017c44 <_ZN8touchgfx8LCD16bpp17blitCopyL8_RGB565EPKhS2_RKNS_4RectES5_h+0x168>
 8017c36:	f814 3b01 	ldrb.w	r3, [r4], #1
 8017c3a:	f831 3013 	ldrh.w	r3, [r1, r3, lsl #1]
 8017c3e:	f820 3b02 	strh.w	r3, [r0], #2
 8017c42:	e7f6      	b.n	8017c32 <_ZN8touchgfx8LCD16bpp17blitCopyL8_RGB565EPKhS2_RKNS_4RectES5_h+0x156>
 8017c44:	882b      	ldrh	r3, [r5, #0]
 8017c46:	eba3 0308 	sub.w	r3, r3, r8
 8017c4a:	eb00 0043 	add.w	r0, r0, r3, lsl #1
 8017c4e:	f9bd 300c 	ldrsh.w	r3, [sp, #12]
 8017c52:	eba3 0308 	sub.w	r3, r3, r8
 8017c56:	441c      	add	r4, r3
 8017c58:	e7e7      	b.n	8017c2a <_ZN8touchgfx8LCD16bpp17blitCopyL8_RGB565EPKhS2_RKNS_4RectES5_h+0x14e>
 8017c5a:	4b04      	ldr	r3, [pc, #16]	@ (8017c6c <_ZN8touchgfx8LCD16bpp17blitCopyL8_RGB565EPKhS2_RKNS_4RectES5_h+0x190>)
 8017c5c:	6818      	ldr	r0, [r3, #0]
 8017c5e:	6803      	ldr	r3, [r0, #0]
 8017c60:	6adb      	ldr	r3, [r3, #44]	@ 0x2c
 8017c62:	4798      	blx	r3
 8017c64:	b007      	add	sp, #28
 8017c66:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 8017c6a:	bf00      	nop
 8017c6c:	20002c5c 	.word	0x20002c5c
 8017c70:	20002c56 	.word	0x20002c56

08017c74 <_ZN8touchgfx8LCD16bpp17blitCopyL8_RGB888EPKhS2_RKNS_4RectES5_h>:
 8017c74:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8017c78:	b091      	sub	sp, #68	@ 0x44
 8017c7a:	4680      	mov	r8, r0
 8017c7c:	f89d 5068 	ldrb.w	r5, [sp, #104]	@ 0x68
 8017c80:	460f      	mov	r7, r1
 8017c82:	4614      	mov	r4, r2
 8017c84:	2d00      	cmp	r5, #0
 8017c86:	d051      	beq.n	8017d2c <_ZN8touchgfx8LCD16bpp17blitCopyL8_RGB888EPKhS2_RKNS_4RectES5_h+0xb8>
 8017c88:	6810      	ldr	r0, [r2, #0]
 8017c8a:	6851      	ldr	r1, [r2, #4]
 8017c8c:	f8df 9200 	ldr.w	r9, [pc, #512]	@ 8017e90 <_ZN8touchgfx8LCD16bpp17blitCopyL8_RGB888EPKhS2_RKNS_4RectES5_h+0x21c>
 8017c90:	ae0c      	add	r6, sp, #48	@ 0x30
 8017c92:	c603      	stmia	r6!, {r0, r1}
 8017c94:	6818      	ldr	r0, [r3, #0]
 8017c96:	6859      	ldr	r1, [r3, #4]
 8017c98:	ae0e      	add	r6, sp, #56	@ 0x38
 8017c9a:	c603      	stmia	r6!, {r0, r1}
 8017c9c:	a80c      	add	r0, sp, #48	@ 0x30
 8017c9e:	f7f7 f8a9 	bl	800edf4 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectE>
 8017ca2:	4621      	mov	r1, r4
 8017ca4:	a80e      	add	r0, sp, #56	@ 0x38
 8017ca6:	f7f7 f8cd 	bl	800ee44 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectERKS1_>
 8017caa:	f9bd 2038 	ldrsh.w	r2, [sp, #56]	@ 0x38
 8017cae:	f9bd 303a 	ldrsh.w	r3, [sp, #58]	@ 0x3a
 8017cb2:	f8bd 1034 	ldrh.w	r1, [sp, #52]	@ 0x34
 8017cb6:	f8d9 0000 	ldr.w	r0, [r9]
 8017cba:	f9bd 603c 	ldrsh.w	r6, [sp, #60]	@ 0x3c
 8017cbe:	f9bd a03e 	ldrsh.w	sl, [sp, #62]	@ 0x3e
 8017cc2:	fb11 2103 	smlabb	r1, r1, r3, r2
 8017cc6:	eb08 0401 	add.w	r4, r8, r1
 8017cca:	f8bd 1030 	ldrh.w	r1, [sp, #48]	@ 0x30
 8017cce:	f8df 81c4 	ldr.w	r8, [pc, #452]	@ 8017e94 <_ZN8touchgfx8LCD16bpp17blitCopyL8_RGB888EPKhS2_RKNS_4RectES5_h+0x220>
 8017cd2:	440a      	add	r2, r1
 8017cd4:	f8ad 2038 	strh.w	r2, [sp, #56]	@ 0x38
 8017cd8:	f8bd 2032 	ldrh.w	r2, [sp, #50]	@ 0x32
 8017cdc:	4413      	add	r3, r2
 8017cde:	f8ad 303a 	strh.w	r3, [sp, #58]	@ 0x3a
 8017ce2:	6803      	ldr	r3, [r0, #0]
 8017ce4:	6b9b      	ldr	r3, [r3, #56]	@ 0x38
 8017ce6:	4798      	blx	r3
 8017ce8:	f010 0f80 	tst.w	r0, #128	@ 0x80
 8017cec:	f8d9 0000 	ldr.w	r0, [r9]
 8017cf0:	d01f      	beq.n	8017d32 <_ZN8touchgfx8LCD16bpp17blitCopyL8_RGB888EPKhS2_RKNS_4RectES5_h+0xbe>
 8017cf2:	2200      	movs	r2, #0
 8017cf4:	6801      	ldr	r1, [r0, #0]
 8017cf6:	f8bd 3038 	ldrh.w	r3, [sp, #56]	@ 0x38
 8017cfa:	e9cd 2208 	strd	r2, r2, [sp, #32]
 8017cfe:	220b      	movs	r2, #11
 8017d00:	9207      	str	r2, [sp, #28]
 8017d02:	f8b8 2000 	ldrh.w	r2, [r8]
 8017d06:	9206      	str	r2, [sp, #24]
 8017d08:	2201      	movs	r2, #1
 8017d0a:	e9cd 5204 	strd	r5, r2, [sp, #16]
 8017d0e:	f8bd 2034 	ldrh.w	r2, [sp, #52]	@ 0x34
 8017d12:	9203      	str	r2, [sp, #12]
 8017d14:	fa1f f28a 	uxth.w	r2, sl
 8017d18:	9202      	str	r2, [sp, #8]
 8017d1a:	b2b6      	uxth	r6, r6
 8017d1c:	f8bd 203a 	ldrh.w	r2, [sp, #58]	@ 0x3a
 8017d20:	9200      	str	r2, [sp, #0]
 8017d22:	9601      	str	r6, [sp, #4]
 8017d24:	6bcd      	ldr	r5, [r1, #60]	@ 0x3c
 8017d26:	463a      	mov	r2, r7
 8017d28:	4621      	mov	r1, r4
 8017d2a:	47a8      	blx	r5
 8017d2c:	b011      	add	sp, #68	@ 0x44
 8017d2e:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 8017d32:	6803      	ldr	r3, [r0, #0]
 8017d34:	6a9b      	ldr	r3, [r3, #40]	@ 0x28
 8017d36:	4798      	blx	r3
 8017d38:	f8b8 2000 	ldrh.w	r2, [r8]
 8017d3c:	f9bd 303a 	ldrsh.w	r3, [sp, #58]	@ 0x3a
 8017d40:	f9bd 1038 	ldrsh.w	r1, [sp, #56]	@ 0x38
 8017d44:	2dff      	cmp	r5, #255	@ 0xff
 8017d46:	fb02 1303 	mla	r3, r2, r3, r1
 8017d4a:	eb00 0043 	add.w	r0, r0, r3, lsl #1
 8017d4e:	ea4f 0946 	mov.w	r9, r6, lsl #1
 8017d52:	fb0a fa02 	mul.w	sl, sl, r2
 8017d56:	d062      	beq.n	8017e1e <_ZN8touchgfx8LCD16bpp17blitCopyL8_RGB888EPKhS2_RKNS_4RectES5_h+0x1aa>
 8017d58:	ea6f 0c05 	mvn.w	ip, r5
 8017d5c:	eb00 034a 	add.w	r3, r0, sl, lsl #1
 8017d60:	930a      	str	r3, [sp, #40]	@ 0x28
 8017d62:	b2ad      	uxth	r5, r5
 8017d64:	fa5f fc8c 	uxtb.w	ip, ip
 8017d68:	f8cd 802c 	str.w	r8, [sp, #44]	@ 0x2c
 8017d6c:	9b0a      	ldr	r3, [sp, #40]	@ 0x28
 8017d6e:	4298      	cmp	r0, r3
 8017d70:	f080 8085 	bcs.w	8017e7e <_ZN8touchgfx8LCD16bpp17blitCopyL8_RGB888EPKhS2_RKNS_4RectES5_h+0x20a>
 8017d74:	eb00 0b09 	add.w	fp, r0, r9
 8017d78:	4558      	cmp	r0, fp
 8017d7a:	d246      	bcs.n	8017e0a <_ZN8touchgfx8LCD16bpp17blitCopyL8_RGB888EPKhS2_RKNS_4RectES5_h+0x196>
 8017d7c:	f814 eb01 	ldrb.w	lr, [r4], #1
 8017d80:	2303      	movs	r3, #3
 8017d82:	2204      	movs	r2, #4
 8017d84:	fb13 2e0e 	smlabb	lr, r3, lr, r2
 8017d88:	eb07 0a0e 	add.w	sl, r7, lr
 8017d8c:	8803      	ldrh	r3, [r0, #0]
 8017d8e:	f89a 8002 	ldrb.w	r8, [sl, #2]
 8017d92:	f817 e00e 	ldrb.w	lr, [r7, lr]
 8017d96:	1219      	asrs	r1, r3, #8
 8017d98:	f001 01f8 	and.w	r1, r1, #248	@ 0xf8
 8017d9c:	fb18 f805 	smulbb	r8, r8, r5
 8017da0:	ea41 1151 	orr.w	r1, r1, r1, lsr #5
 8017da4:	10da      	asrs	r2, r3, #3
 8017da6:	fb01 810c 	mla	r1, r1, ip, r8
 8017daa:	00db      	lsls	r3, r3, #3
 8017dac:	f89a 8001 	ldrb.w	r8, [sl, #1]
 8017db0:	f002 02fc 	and.w	r2, r2, #252	@ 0xfc
 8017db4:	b2db      	uxtb	r3, r3
 8017db6:	fb18 f805 	smulbb	r8, r8, r5
 8017dba:	fb1e fe05 	smulbb	lr, lr, r5
 8017dbe:	ea42 1292 	orr.w	r2, r2, r2, lsr #6
 8017dc2:	ea43 1353 	orr.w	r3, r3, r3, lsr #5
 8017dc6:	b289      	uxth	r1, r1
 8017dc8:	fb02 820c 	mla	r2, r2, ip, r8
 8017dcc:	fb03 e30c 	mla	r3, r3, ip, lr
 8017dd0:	b292      	uxth	r2, r2
 8017dd2:	b29b      	uxth	r3, r3
 8017dd4:	f101 0801 	add.w	r8, r1, #1
 8017dd8:	eb08 2111 	add.w	r1, r8, r1, lsr #8
 8017ddc:	f103 0e01 	add.w	lr, r3, #1
 8017de0:	f102 0801 	add.w	r8, r2, #1
 8017de4:	eb0e 2e13 	add.w	lr, lr, r3, lsr #8
 8017de8:	eb08 2812 	add.w	r8, r8, r2, lsr #8
 8017dec:	f401 4178 	and.w	r1, r1, #63488	@ 0xf800
 8017df0:	f3ce 2ec4 	ubfx	lr, lr, #11, #5
 8017df4:	ea4f 1858 	mov.w	r8, r8, lsr #5
 8017df8:	ea4e 0101 	orr.w	r1, lr, r1
 8017dfc:	f408 68fc 	and.w	r8, r8, #2016	@ 0x7e0
 8017e00:	ea41 0108 	orr.w	r1, r1, r8
 8017e04:	f820 1b02 	strh.w	r1, [r0], #2
 8017e08:	e7b6      	b.n	8017d78 <_ZN8touchgfx8LCD16bpp17blitCopyL8_RGB888EPKhS2_RKNS_4RectES5_h+0x104>
 8017e0a:	9b0b      	ldr	r3, [sp, #44]	@ 0x2c
 8017e0c:	881b      	ldrh	r3, [r3, #0]
 8017e0e:	1b9b      	subs	r3, r3, r6
 8017e10:	eb00 0043 	add.w	r0, r0, r3, lsl #1
 8017e14:	f9bd 3034 	ldrsh.w	r3, [sp, #52]	@ 0x34
 8017e18:	1b9b      	subs	r3, r3, r6
 8017e1a:	441c      	add	r4, r3
 8017e1c:	e7a6      	b.n	8017d6c <_ZN8touchgfx8LCD16bpp17blitCopyL8_RGB888EPKhS2_RKNS_4RectES5_h+0xf8>
 8017e1e:	491b      	ldr	r1, [pc, #108]	@ (8017e8c <_ZN8touchgfx8LCD16bpp17blitCopyL8_RGB888EPKhS2_RKNS_4RectES5_h+0x218>)
 8017e20:	eb00 0a4a 	add.w	sl, r0, sl, lsl #1
 8017e24:	2203      	movs	r2, #3
 8017e26:	2504      	movs	r5, #4
 8017e28:	4550      	cmp	r0, sl
 8017e2a:	d228      	bcs.n	8017e7e <_ZN8touchgfx8LCD16bpp17blitCopyL8_RGB888EPKhS2_RKNS_4RectES5_h+0x20a>
 8017e2c:	eb00 0c09 	add.w	ip, r0, r9
 8017e30:	4560      	cmp	r0, ip
 8017e32:	4623      	mov	r3, r4
 8017e34:	d219      	bcs.n	8017e6a <_ZN8touchgfx8LCD16bpp17blitCopyL8_RGB888EPKhS2_RKNS_4RectES5_h+0x1f6>
 8017e36:	f893 e000 	ldrb.w	lr, [r3]
 8017e3a:	fb12 5e0e 	smlabb	lr, r2, lr, r5
 8017e3e:	eb07 0b0e 	add.w	fp, r7, lr
 8017e42:	f817 e00e 	ldrb.w	lr, [r7, lr]
 8017e46:	f89b 3002 	ldrb.w	r3, [fp, #2]
 8017e4a:	f89b b001 	ldrb.w	fp, [fp, #1]
 8017e4e:	ea4f 0bcb 	mov.w	fp, fp, lsl #3
 8017e52:	ea01 2303 	and.w	r3, r1, r3, lsl #8
 8017e56:	f40b 6bfc 	and.w	fp, fp, #2016	@ 0x7e0
 8017e5a:	ea43 030b 	orr.w	r3, r3, fp
 8017e5e:	ea43 03de 	orr.w	r3, r3, lr, lsr #3
 8017e62:	3401      	adds	r4, #1
 8017e64:	f820 3b02 	strh.w	r3, [r0], #2
 8017e68:	e7e2      	b.n	8017e30 <_ZN8touchgfx8LCD16bpp17blitCopyL8_RGB888EPKhS2_RKNS_4RectES5_h+0x1bc>
 8017e6a:	f8b8 3000 	ldrh.w	r3, [r8]
 8017e6e:	1b9b      	subs	r3, r3, r6
 8017e70:	eb00 0043 	add.w	r0, r0, r3, lsl #1
 8017e74:	f9bd 3034 	ldrsh.w	r3, [sp, #52]	@ 0x34
 8017e78:	1b9b      	subs	r3, r3, r6
 8017e7a:	441c      	add	r4, r3
 8017e7c:	e7d4      	b.n	8017e28 <_ZN8touchgfx8LCD16bpp17blitCopyL8_RGB888EPKhS2_RKNS_4RectES5_h+0x1b4>
 8017e7e:	4b04      	ldr	r3, [pc, #16]	@ (8017e90 <_ZN8touchgfx8LCD16bpp17blitCopyL8_RGB888EPKhS2_RKNS_4RectES5_h+0x21c>)
 8017e80:	6818      	ldr	r0, [r3, #0]
 8017e82:	6803      	ldr	r3, [r0, #0]
 8017e84:	6adb      	ldr	r3, [r3, #44]	@ 0x2c
 8017e86:	4798      	blx	r3
 8017e88:	e750      	b.n	8017d2c <_ZN8touchgfx8LCD16bpp17blitCopyL8_RGB888EPKhS2_RKNS_4RectES5_h+0xb8>
 8017e8a:	bf00      	nop
 8017e8c:	fffff800 	.word	0xfffff800
 8017e90:	20002c5c 	.word	0x20002c5c
 8017e94:	20002c56 	.word	0x20002c56

08017e98 <_ZN8touchgfx8LCD16bpp10blitCopyL8EPKhS2_RKNS_4RectES5_h>:
 8017e98:	b4f0      	push	{r4, r5, r6, r7}
 8017e9a:	460c      	mov	r4, r1
 8017e9c:	4611      	mov	r1, r2
 8017e9e:	f89d 5014 	ldrb.w	r5, [sp, #20]
 8017ea2:	780f      	ldrb	r7, [r1, #0]
 8017ea4:	784e      	ldrb	r6, [r1, #1]
 8017ea6:	2f01      	cmp	r7, #1
 8017ea8:	461a      	mov	r2, r3
 8017eaa:	9b04      	ldr	r3, [sp, #16]
 8017eac:	d038      	beq.n	8017f20 <_ZN8touchgfx8LCD16bpp10blitCopyL8EPKhS2_RKNS_4RectES5_h+0x88>
 8017eae:	d31f      	bcc.n	8017ef0 <_ZN8touchgfx8LCD16bpp10blitCopyL8EPKhS2_RKNS_4RectES5_h+0x58>
 8017eb0:	2f02      	cmp	r7, #2
 8017eb2:	d14d      	bne.n	8017f50 <_ZN8touchgfx8LCD16bpp10blitCopyL8EPKhS2_RKNS_4RectES5_h+0xb8>
 8017eb4:	2e03      	cmp	r6, #3
 8017eb6:	d84b      	bhi.n	8017f50 <_ZN8touchgfx8LCD16bpp10blitCopyL8EPKhS2_RKNS_4RectES5_h+0xb8>
 8017eb8:	e8df f006 	tbb	[pc, r6]
 8017ebc:	17140702 	.word	0x17140702
 8017ec0:	9504      	str	r5, [sp, #16]
 8017ec2:	4620      	mov	r0, r4
 8017ec4:	bcf0      	pop	{r4, r5, r6, r7}
 8017ec6:	f7ff be09 	b.w	8017adc <_ZN8touchgfx8LCD16bpp17blitCopyL8_RGB565EPKhS2_RKNS_4RectES5_h>
 8017eca:	6fc0      	ldr	r0, [r0, #124]	@ 0x7c
 8017ecc:	2800      	cmp	r0, #0
 8017ece:	d03f      	beq.n	8017f50 <_ZN8touchgfx8LCD16bpp10blitCopyL8EPKhS2_RKNS_4RectES5_h+0xb8>
 8017ed0:	6806      	ldr	r6, [r0, #0]
 8017ed2:	e9cd 3504 	strd	r3, r5, [sp, #16]
 8017ed6:	68b5      	ldr	r5, [r6, #8]
 8017ed8:	4613      	mov	r3, r2
 8017eda:	46ac      	mov	ip, r5
 8017edc:	460a      	mov	r2, r1
 8017ede:	4621      	mov	r1, r4
 8017ee0:	bcf0      	pop	{r4, r5, r6, r7}
 8017ee2:	4760      	bx	ip
 8017ee4:	f8d0 0080 	ldr.w	r0, [r0, #128]	@ 0x80
 8017ee8:	e7f0      	b.n	8017ecc <_ZN8touchgfx8LCD16bpp10blitCopyL8EPKhS2_RKNS_4RectES5_h+0x34>
 8017eea:	f8d0 0084 	ldr.w	r0, [r0, #132]	@ 0x84
 8017eee:	e7ed      	b.n	8017ecc <_ZN8touchgfx8LCD16bpp10blitCopyL8EPKhS2_RKNS_4RectES5_h+0x34>
 8017ef0:	2e03      	cmp	r6, #3
 8017ef2:	d82d      	bhi.n	8017f50 <_ZN8touchgfx8LCD16bpp10blitCopyL8EPKhS2_RKNS_4RectES5_h+0xb8>
 8017ef4:	e8df f006 	tbb	[pc, r6]
 8017ef8:	110e0702 	.word	0x110e0702
 8017efc:	9504      	str	r5, [sp, #16]
 8017efe:	4620      	mov	r0, r4
 8017f00:	bcf0      	pop	{r4, r5, r6, r7}
 8017f02:	f7ff bd05 	b.w	8017910 <_ZN8touchgfx8LCD16bpp19blitCopyL8_ARGB8888EPKhS2_RKNS_4RectES5_h>
 8017f06:	6fc0      	ldr	r0, [r0, #124]	@ 0x7c
 8017f08:	b310      	cbz	r0, 8017f50 <_ZN8touchgfx8LCD16bpp10blitCopyL8EPKhS2_RKNS_4RectES5_h+0xb8>
 8017f0a:	6806      	ldr	r6, [r0, #0]
 8017f0c:	e9cd 3504 	strd	r3, r5, [sp, #16]
 8017f10:	68f5      	ldr	r5, [r6, #12]
 8017f12:	e7e1      	b.n	8017ed8 <_ZN8touchgfx8LCD16bpp10blitCopyL8EPKhS2_RKNS_4RectES5_h+0x40>
 8017f14:	f8d0 0080 	ldr.w	r0, [r0, #128]	@ 0x80
 8017f18:	e7f6      	b.n	8017f08 <_ZN8touchgfx8LCD16bpp10blitCopyL8EPKhS2_RKNS_4RectES5_h+0x70>
 8017f1a:	f8d0 0084 	ldr.w	r0, [r0, #132]	@ 0x84
 8017f1e:	e7f3      	b.n	8017f08 <_ZN8touchgfx8LCD16bpp10blitCopyL8EPKhS2_RKNS_4RectES5_h+0x70>
 8017f20:	2e03      	cmp	r6, #3
 8017f22:	d815      	bhi.n	8017f50 <_ZN8touchgfx8LCD16bpp10blitCopyL8EPKhS2_RKNS_4RectES5_h+0xb8>
 8017f24:	e8df f006 	tbb	[pc, r6]
 8017f28:	110e0702 	.word	0x110e0702
 8017f2c:	9504      	str	r5, [sp, #16]
 8017f2e:	4620      	mov	r0, r4
 8017f30:	bcf0      	pop	{r4, r5, r6, r7}
 8017f32:	f7ff be9f 	b.w	8017c74 <_ZN8touchgfx8LCD16bpp17blitCopyL8_RGB888EPKhS2_RKNS_4RectES5_h>
 8017f36:	6fc0      	ldr	r0, [r0, #124]	@ 0x7c
 8017f38:	b150      	cbz	r0, 8017f50 <_ZN8touchgfx8LCD16bpp10blitCopyL8EPKhS2_RKNS_4RectES5_h+0xb8>
 8017f3a:	6806      	ldr	r6, [r0, #0]
 8017f3c:	e9cd 3504 	strd	r3, r5, [sp, #16]
 8017f40:	6935      	ldr	r5, [r6, #16]
 8017f42:	e7c9      	b.n	8017ed8 <_ZN8touchgfx8LCD16bpp10blitCopyL8EPKhS2_RKNS_4RectES5_h+0x40>
 8017f44:	f8d0 0080 	ldr.w	r0, [r0, #128]	@ 0x80
 8017f48:	e7f6      	b.n	8017f38 <_ZN8touchgfx8LCD16bpp10blitCopyL8EPKhS2_RKNS_4RectES5_h+0xa0>
 8017f4a:	f8d0 0084 	ldr.w	r0, [r0, #132]	@ 0x84
 8017f4e:	e7f3      	b.n	8017f38 <_ZN8touchgfx8LCD16bpp10blitCopyL8EPKhS2_RKNS_4RectES5_h+0xa0>
 8017f50:	bcf0      	pop	{r4, r5, r6, r7}
 8017f52:	4770      	bx	lr

08017f54 <_ZN8touchgfx8LCD16bpp21blitCopyAlphaPerPixelEPKtPKhRKNS_4RectES7_h>:
 8017f54:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8017f58:	4604      	mov	r4, r0
 8017f5a:	b087      	sub	sp, #28
 8017f5c:	6810      	ldr	r0, [r2, #0]
 8017f5e:	f89d a040 	ldrb.w	sl, [sp, #64]	@ 0x40
 8017f62:	f8df 9238 	ldr.w	r9, [pc, #568]	@ 801819c <_ZN8touchgfx8LCD16bpp21blitCopyAlphaPerPixelEPKtPKhRKNS_4RectES7_h+0x248>
 8017f66:	460e      	mov	r6, r1
 8017f68:	6851      	ldr	r1, [r2, #4]
 8017f6a:	ad02      	add	r5, sp, #8
 8017f6c:	c503      	stmia	r5!, {r0, r1}
 8017f6e:	6818      	ldr	r0, [r3, #0]
 8017f70:	6859      	ldr	r1, [r3, #4]
 8017f72:	ad04      	add	r5, sp, #16
 8017f74:	4617      	mov	r7, r2
 8017f76:	c503      	stmia	r5!, {r0, r1}
 8017f78:	a802      	add	r0, sp, #8
 8017f7a:	f7f6 ff3b 	bl	800edf4 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectE>
 8017f7e:	4639      	mov	r1, r7
 8017f80:	a804      	add	r0, sp, #16
 8017f82:	f7f6 ff5f 	bl	800ee44 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectERKS1_>
 8017f86:	f9bd 2010 	ldrsh.w	r2, [sp, #16]
 8017f8a:	f9bd 3012 	ldrsh.w	r3, [sp, #18]
 8017f8e:	f8bd 100c 	ldrh.w	r1, [sp, #12]
 8017f92:	f9bd 8014 	ldrsh.w	r8, [sp, #20]
 8017f96:	f9bd 5016 	ldrsh.w	r5, [sp, #22]
 8017f9a:	fb11 2103 	smlabb	r1, r1, r3, r2
 8017f9e:	eb04 0441 	add.w	r4, r4, r1, lsl #1
 8017fa2:	440e      	add	r6, r1
 8017fa4:	f8bd 1008 	ldrh.w	r1, [sp, #8]
 8017fa8:	440a      	add	r2, r1
 8017faa:	f8ad 2010 	strh.w	r2, [sp, #16]
 8017fae:	f8bd 200a 	ldrh.w	r2, [sp, #10]
 8017fb2:	4413      	add	r3, r2
 8017fb4:	f8ad 3012 	strh.w	r3, [sp, #18]
 8017fb8:	4b77      	ldr	r3, [pc, #476]	@ (8018198 <_ZN8touchgfx8LCD16bpp21blitCopyAlphaPerPixelEPKtPKhRKNS_4RectES7_h+0x244>)
 8017fba:	6818      	ldr	r0, [r3, #0]
 8017fbc:	6803      	ldr	r3, [r0, #0]
 8017fbe:	6a9b      	ldr	r3, [r3, #40]	@ 0x28
 8017fc0:	4798      	blx	r3
 8017fc2:	f8b9 b000 	ldrh.w	fp, [r9]
 8017fc6:	f9bd 3012 	ldrsh.w	r3, [sp, #18]
 8017fca:	f9bd 2010 	ldrsh.w	r2, [sp, #16]
 8017fce:	fb0b 2303 	mla	r3, fp, r3, r2
 8017fd2:	eb00 0043 	add.w	r0, r0, r3, lsl #1
 8017fd6:	f1ba 0fff 	cmp.w	sl, #255	@ 0xff
 8017fda:	ea4f 0348 	mov.w	r3, r8, lsl #1
 8017fde:	fb05 f50b 	mul.w	r5, r5, fp
 8017fe2:	9300      	str	r3, [sp, #0]
 8017fe4:	d069      	beq.n	80180ba <_ZN8touchgfx8LCD16bpp21blitCopyAlphaPerPixelEPKtPKhRKNS_4RectES7_h+0x166>
 8017fe6:	eb00 0b45 	add.w	fp, r0, r5, lsl #1
 8017fea:	4558      	cmp	r0, fp
 8017fec:	f080 80cc 	bcs.w	8018188 <_ZN8touchgfx8LCD16bpp21blitCopyAlphaPerPixelEPKtPKhRKNS_4RectES7_h+0x234>
 8017ff0:	9b00      	ldr	r3, [sp, #0]
 8017ff2:	18c3      	adds	r3, r0, r3
 8017ff4:	9301      	str	r3, [sp, #4]
 8017ff6:	4631      	mov	r1, r6
 8017ff8:	9b01      	ldr	r3, [sp, #4]
 8017ffa:	4298      	cmp	r0, r3
 8017ffc:	d24f      	bcs.n	801809e <_ZN8touchgfx8LCD16bpp21blitCopyAlphaPerPixelEPKtPKhRKNS_4RectES7_h+0x14a>
 8017ffe:	f811 2b01 	ldrb.w	r2, [r1], #1
 8018002:	2a00      	cmp	r2, #0
 8018004:	d048      	beq.n	8018098 <_ZN8touchgfx8LCD16bpp21blitCopyAlphaPerPixelEPKtPKhRKNS_4RectES7_h+0x144>
 8018006:	fb0a f202 	mul.w	r2, sl, r2
 801800a:	1c53      	adds	r3, r2, #1
 801800c:	eb03 2312 	add.w	r3, r3, r2, lsr #8
 8018010:	121b      	asrs	r3, r3, #8
 8018012:	d041      	beq.n	8018098 <_ZN8touchgfx8LCD16bpp21blitCopyAlphaPerPixelEPKtPKhRKNS_4RectES7_h+0x144>
 8018014:	8802      	ldrh	r2, [r0, #0]
 8018016:	f8b4 c000 	ldrh.w	ip, [r4]
 801801a:	b29e      	uxth	r6, r3
 801801c:	1215      	asrs	r5, r2, #8
 801801e:	43db      	mvns	r3, r3
 8018020:	b2db      	uxtb	r3, r3
 8018022:	ea4f 272c 	mov.w	r7, ip, asr #8
 8018026:	f005 05f8 	and.w	r5, r5, #248	@ 0xf8
 801802a:	fb15 f503 	smulbb	r5, r5, r3
 801802e:	ea4f 0ee2 	mov.w	lr, r2, asr #3
 8018032:	f007 07f8 	and.w	r7, r7, #248	@ 0xf8
 8018036:	00d2      	lsls	r2, r2, #3
 8018038:	fb07 5706 	mla	r7, r7, r6, r5
 801803c:	f00e 0efc 	and.w	lr, lr, #252	@ 0xfc
 8018040:	ea4f 05ec 	mov.w	r5, ip, asr #3
 8018044:	b2d2      	uxtb	r2, r2
 8018046:	ea4f 0ccc 	mov.w	ip, ip, lsl #3
 801804a:	b2bf      	uxth	r7, r7
 801804c:	fb1e fe03 	smulbb	lr, lr, r3
 8018050:	f005 05fc 	and.w	r5, r5, #252	@ 0xfc
 8018054:	fa5f fc8c 	uxtb.w	ip, ip
 8018058:	fb12 f203 	smulbb	r2, r2, r3
 801805c:	fb05 e506 	mla	r5, r5, r6, lr
 8018060:	fb0c 2c06 	mla	ip, ip, r6, r2
 8018064:	f107 0e01 	add.w	lr, r7, #1
 8018068:	fa1f fc8c 	uxth.w	ip, ip
 801806c:	eb0e 2717 	add.w	r7, lr, r7, lsr #8
 8018070:	f407 4e78 	and.w	lr, r7, #63488	@ 0xf800
 8018074:	f10c 0701 	add.w	r7, ip, #1
 8018078:	eb07 271c 	add.w	r7, r7, ip, lsr #8
 801807c:	b2ad      	uxth	r5, r5
 801807e:	f3c7 27c4 	ubfx	r7, r7, #11, #5
 8018082:	ea47 070e 	orr.w	r7, r7, lr
 8018086:	f105 0e01 	add.w	lr, r5, #1
 801808a:	eb0e 2515 	add.w	r5, lr, r5, lsr #8
 801808e:	096d      	lsrs	r5, r5, #5
 8018090:	f405 65fc 	and.w	r5, r5, #2016	@ 0x7e0
 8018094:	432f      	orrs	r7, r5
 8018096:	8007      	strh	r7, [r0, #0]
 8018098:	3002      	adds	r0, #2
 801809a:	3402      	adds	r4, #2
 801809c:	e7ac      	b.n	8017ff8 <_ZN8touchgfx8LCD16bpp21blitCopyAlphaPerPixelEPKtPKhRKNS_4RectES7_h+0xa4>
 801809e:	f8b9 3000 	ldrh.w	r3, [r9]
 80180a2:	f9bd 600c 	ldrsh.w	r6, [sp, #12]
 80180a6:	eba3 0308 	sub.w	r3, r3, r8
 80180aa:	eba6 0608 	sub.w	r6, r6, r8
 80180ae:	eb04 0446 	add.w	r4, r4, r6, lsl #1
 80180b2:	eb00 0043 	add.w	r0, r0, r3, lsl #1
 80180b6:	440e      	add	r6, r1
 80180b8:	e797      	b.n	8017fea <_ZN8touchgfx8LCD16bpp21blitCopyAlphaPerPixelEPKtPKhRKNS_4RectES7_h+0x96>
 80180ba:	eb00 0545 	add.w	r5, r0, r5, lsl #1
 80180be:	42a8      	cmp	r0, r5
 80180c0:	d262      	bcs.n	8018188 <_ZN8touchgfx8LCD16bpp21blitCopyAlphaPerPixelEPKtPKhRKNS_4RectES7_h+0x234>
 80180c2:	9b00      	ldr	r3, [sp, #0]
 80180c4:	4631      	mov	r1, r6
 80180c6:	eb00 0b03 	add.w	fp, r0, r3
 80180ca:	4558      	cmp	r0, fp
 80180cc:	d24e      	bcs.n	801816c <_ZN8touchgfx8LCD16bpp21blitCopyAlphaPerPixelEPKtPKhRKNS_4RectES7_h+0x218>
 80180ce:	f811 3b01 	ldrb.w	r3, [r1], #1
 80180d2:	b12b      	cbz	r3, 80180e0 <_ZN8touchgfx8LCD16bpp21blitCopyAlphaPerPixelEPKtPKhRKNS_4RectES7_h+0x18c>
 80180d4:	2bff      	cmp	r3, #255	@ 0xff
 80180d6:	f8b4 e000 	ldrh.w	lr, [r4]
 80180da:	d104      	bne.n	80180e6 <_ZN8touchgfx8LCD16bpp21blitCopyAlphaPerPixelEPKtPKhRKNS_4RectES7_h+0x192>
 80180dc:	f8a0 e000 	strh.w	lr, [r0]
 80180e0:	3002      	adds	r0, #2
 80180e2:	3402      	adds	r4, #2
 80180e4:	e7f1      	b.n	80180ca <_ZN8touchgfx8LCD16bpp21blitCopyAlphaPerPixelEPKtPKhRKNS_4RectES7_h+0x176>
 80180e6:	8802      	ldrh	r2, [r0, #0]
 80180e8:	b29f      	uxth	r7, r3
 80180ea:	1216      	asrs	r6, r2, #8
 80180ec:	43db      	mvns	r3, r3
 80180ee:	b2db      	uxtb	r3, r3
 80180f0:	ea4f 2c2e 	mov.w	ip, lr, asr #8
 80180f4:	f006 06f8 	and.w	r6, r6, #248	@ 0xf8
 80180f8:	fb16 f603 	smulbb	r6, r6, r3
 80180fc:	ea4f 0ae2 	mov.w	sl, r2, asr #3
 8018100:	f00c 0cf8 	and.w	ip, ip, #248	@ 0xf8
 8018104:	00d2      	lsls	r2, r2, #3
 8018106:	fb0c 6c07 	mla	ip, ip, r7, r6
 801810a:	b2d2      	uxtb	r2, r2
 801810c:	ea4f 06ee 	mov.w	r6, lr, asr #3
 8018110:	f00a 0afc 	and.w	sl, sl, #252	@ 0xfc
 8018114:	ea4f 0ece 	mov.w	lr, lr, lsl #3
 8018118:	fb1a fa03 	smulbb	sl, sl, r3
 801811c:	fa1f fc8c 	uxth.w	ip, ip
 8018120:	fb12 f303 	smulbb	r3, r2, r3
 8018124:	f006 06fc 	and.w	r6, r6, #252	@ 0xfc
 8018128:	fa5f fe8e 	uxtb.w	lr, lr
 801812c:	fb06 a607 	mla	r6, r6, r7, sl
 8018130:	f10c 0201 	add.w	r2, ip, #1
 8018134:	fb0e 3307 	mla	r3, lr, r7, r3
 8018138:	b2b6      	uxth	r6, r6
 801813a:	b29b      	uxth	r3, r3
 801813c:	eb02 2c1c 	add.w	ip, r2, ip, lsr #8
 8018140:	f40c 4278 	and.w	r2, ip, #63488	@ 0xf800
 8018144:	f106 0a01 	add.w	sl, r6, #1
 8018148:	f103 0c01 	add.w	ip, r3, #1
 801814c:	eb0c 2c13 	add.w	ip, ip, r3, lsr #8
 8018150:	eb0a 2616 	add.w	r6, sl, r6, lsr #8
 8018154:	f3cc 2cc4 	ubfx	ip, ip, #11, #5
 8018158:	0976      	lsrs	r6, r6, #5
 801815a:	ea4c 0c02 	orr.w	ip, ip, r2
 801815e:	f406 66fc 	and.w	r6, r6, #2016	@ 0x7e0
 8018162:	ea4c 0c06 	orr.w	ip, ip, r6
 8018166:	f8a0 c000 	strh.w	ip, [r0]
 801816a:	e7b9      	b.n	80180e0 <_ZN8touchgfx8LCD16bpp21blitCopyAlphaPerPixelEPKtPKhRKNS_4RectES7_h+0x18c>
 801816c:	f8b9 3000 	ldrh.w	r3, [r9]
 8018170:	f9bd 600c 	ldrsh.w	r6, [sp, #12]
 8018174:	eba3 0308 	sub.w	r3, r3, r8
 8018178:	eba6 0608 	sub.w	r6, r6, r8
 801817c:	eb04 0446 	add.w	r4, r4, r6, lsl #1
 8018180:	eb00 0043 	add.w	r0, r0, r3, lsl #1
 8018184:	440e      	add	r6, r1
 8018186:	e79a      	b.n	80180be <_ZN8touchgfx8LCD16bpp21blitCopyAlphaPerPixelEPKtPKhRKNS_4RectES7_h+0x16a>
 8018188:	4b03      	ldr	r3, [pc, #12]	@ (8018198 <_ZN8touchgfx8LCD16bpp21blitCopyAlphaPerPixelEPKtPKhRKNS_4RectES7_h+0x244>)
 801818a:	6818      	ldr	r0, [r3, #0]
 801818c:	6803      	ldr	r3, [r0, #0]
 801818e:	6adb      	ldr	r3, [r3, #44]	@ 0x2c
 8018190:	4798      	blx	r3
 8018192:	b007      	add	sp, #28
 8018194:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 8018198:	20002c5c 	.word	0x20002c5c
 801819c:	20002c56 	.word	0x20002c56

080181a0 <_ZN8touchgfx8LCD16bpp17drawPartialBitmapERKNS_6BitmapEssRKNS_4RectEhb>:
 80181a0:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 80181a4:	b089      	sub	sp, #36	@ 0x24
 80181a6:	4607      	mov	r7, r0
 80181a8:	f89d 604c 	ldrb.w	r6, [sp, #76]	@ 0x4c
 80181ac:	9c12      	ldr	r4, [sp, #72]	@ 0x48
 80181ae:	4688      	mov	r8, r1
 80181b0:	4692      	mov	sl, r2
 80181b2:	4699      	mov	r9, r3
 80181b4:	2e00      	cmp	r6, #0
 80181b6:	d048      	beq.n	801824a <_ZN8touchgfx8LCD16bpp17drawPartialBitmapERKNS_6BitmapEssRKNS_4RectEhb+0xaa>
 80181b8:	4608      	mov	r0, r1
 80181ba:	f7fa f827 	bl	801220c <_ZNK8touchgfx6Bitmap8getWidthEv>
 80181be:	4605      	mov	r5, r0
 80181c0:	4640      	mov	r0, r8
 80181c2:	f7fa f857 	bl	8012274 <_ZNK8touchgfx6Bitmap9getHeightEv>
 80181c6:	f8ad 000e 	strh.w	r0, [sp, #14]
 80181ca:	4640      	mov	r0, r8
 80181cc:	f8ad a008 	strh.w	sl, [sp, #8]
 80181d0:	f8ad 500c 	strh.w	r5, [sp, #12]
 80181d4:	f8ad 900a 	strh.w	r9, [sp, #10]
 80181d8:	f7fa f90a 	bl	80123f0 <_ZNK8touchgfx6Bitmap7getDataEv>
 80181dc:	4605      	mov	r5, r0
 80181de:	4640      	mov	r0, r8
 80181e0:	f7fa f936 	bl	8012450 <_ZNK8touchgfx6Bitmap12getExtraDataEv>
 80181e4:	4682      	mov	sl, r0
 80181e6:	4640      	mov	r0, r8
 80181e8:	f7fa f986 	bl	80124f8 <_ZNK8touchgfx6Bitmap9getFormatEv>
 80181ec:	2810      	cmp	r0, #16
 80181ee:	d82c      	bhi.n	801824a <_ZN8touchgfx8LCD16bpp17drawPartialBitmapERKNS_6BitmapEssRKNS_4RectEhb+0xaa>
 80181f0:	e8df f010 	tbh	[pc, r0, lsl #1]
 80181f4:	00ba00ca 	.word	0x00ba00ca
 80181f8:	002b0011 	.word	0x002b0011
 80181fc:	002b002b 	.word	0x002b002b
 8018200:	002b002b 	.word	0x002b002b
 8018204:	002b002b 	.word	0x002b002b
 8018208:	00c1002b 	.word	0x00c1002b
 801820c:	002b002b 	.word	0x002b002b
 8018210:	002b0180 	.word	0x002b0180
 8018214:	0173      	.short	0x0173
 8018216:	4bbc      	ldr	r3, [pc, #752]	@ (8018508 <_ZN8touchgfx8LCD16bpp17drawPartialBitmapERKNS_6BitmapEssRKNS_4RectEhb+0x368>)
 8018218:	6818      	ldr	r0, [r3, #0]
 801821a:	6803      	ldr	r3, [r0, #0]
 801821c:	6b9b      	ldr	r3, [r3, #56]	@ 0x38
 801821e:	4798      	blx	r3
 8018220:	2eff      	cmp	r6, #255	@ 0xff
 8018222:	d101      	bne.n	8018228 <_ZN8touchgfx8LCD16bpp17drawPartialBitmapERKNS_6BitmapEssRKNS_4RectEhb+0x88>
 8018224:	0683      	lsls	r3, r0, #26
 8018226:	d506      	bpl.n	8018236 <_ZN8touchgfx8LCD16bpp17drawPartialBitmapERKNS_6BitmapEssRKNS_4RectEhb+0x96>
 8018228:	4633      	mov	r3, r6
 801822a:	4622      	mov	r2, r4
 801822c:	a902      	add	r1, sp, #8
 801822e:	4628      	mov	r0, r5
 8018230:	f7ff f8fc 	bl	801742c <_ZN8touchgfx8LCD16bpp16blitCopyARGB8888EPKmRKNS_4RectES5_h>
 8018234:	e009      	b.n	801824a <_ZN8touchgfx8LCD16bpp17drawPartialBitmapERKNS_6BitmapEssRKNS_4RectEhb+0xaa>
 8018236:	4640      	mov	r0, r8
 8018238:	f7fa f8a2 	bl	8012380 <_ZNK8touchgfx6Bitmap20hasTransparentPixelsEv>
 801823c:	b940      	cbnz	r0, 8018250 <_ZN8touchgfx8LCD16bpp17drawPartialBitmapERKNS_6BitmapEssRKNS_4RectEhb+0xb0>
 801823e:	4623      	mov	r3, r4
 8018240:	aa02      	add	r2, sp, #8
 8018242:	4629      	mov	r1, r5
 8018244:	4638      	mov	r0, r7
 8018246:	f7ff f9d7 	bl	80175f8 <_ZNK8touchgfx8LCD16bpp21blitCopyARGB8888SolidEPKmRKNS_4RectES5_>
 801824a:	b009      	add	sp, #36	@ 0x24
 801824c:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 8018250:	f10d 0918 	add.w	r9, sp, #24
 8018254:	4641      	mov	r1, r8
 8018256:	4648      	mov	r0, r9
 8018258:	f7fa f840 	bl	80122dc <_ZNK8touchgfx6Bitmap12getSolidRectEv>
 801825c:	e899 0003 	ldmia.w	r9, {r0, r1}
 8018260:	f10d 0810 	add.w	r8, sp, #16
 8018264:	e888 0003 	stmia.w	r8, {r0, r1}
 8018268:	4640      	mov	r0, r8
 801826a:	4621      	mov	r1, r4
 801826c:	f7f3 fd48 	bl	800bd00 <_ZN8touchgfx4RectaNERKS0_>
 8018270:	4640      	mov	r0, r8
 8018272:	f7f3 fd88 	bl	800bd86 <_ZNK8touchgfx4Rect7isEmptyEv>
 8018276:	2800      	cmp	r0, #0
 8018278:	d1d6      	bne.n	8018228 <_ZN8touchgfx8LCD16bpp17drawPartialBitmapERKNS_6BitmapEssRKNS_4RectEhb+0x88>
 801827a:	f9bd 3012 	ldrsh.w	r3, [sp, #18]
 801827e:	f9b4 2002 	ldrsh.w	r2, [r4, #2]
 8018282:	4293      	cmp	r3, r2
 8018284:	dd12      	ble.n	80182ac <_ZN8touchgfx8LCD16bpp17drawPartialBitmapERKNS_6BitmapEssRKNS_4RectEhb+0x10c>
 8018286:	1a9b      	subs	r3, r3, r2
 8018288:	f9b4 0000 	ldrsh.w	r0, [r4]
 801828c:	f9b4 1004 	ldrsh.w	r1, [r4, #4]
 8018290:	f8ad 0018 	strh.w	r0, [sp, #24]
 8018294:	f8ad 201a 	strh.w	r2, [sp, #26]
 8018298:	f8ad 101c 	strh.w	r1, [sp, #28]
 801829c:	f8ad 301e 	strh.w	r3, [sp, #30]
 80182a0:	464a      	mov	r2, r9
 80182a2:	4633      	mov	r3, r6
 80182a4:	a902      	add	r1, sp, #8
 80182a6:	4628      	mov	r0, r5
 80182a8:	f7ff f8c0 	bl	801742c <_ZN8touchgfx8LCD16bpp16blitCopyARGB8888EPKmRKNS_4RectES5_h>
 80182ac:	f9bd 3010 	ldrsh.w	r3, [sp, #16]
 80182b0:	f9b4 2000 	ldrsh.w	r2, [r4]
 80182b4:	4293      	cmp	r3, r2
 80182b6:	dd12      	ble.n	80182de <_ZN8touchgfx8LCD16bpp17drawPartialBitmapERKNS_6BitmapEssRKNS_4RectEhb+0x13e>
 80182b8:	1a9b      	subs	r3, r3, r2
 80182ba:	f9bd 0012 	ldrsh.w	r0, [sp, #18]
 80182be:	f9bd 1016 	ldrsh.w	r1, [sp, #22]
 80182c2:	f8ad 2018 	strh.w	r2, [sp, #24]
 80182c6:	f8ad 001a 	strh.w	r0, [sp, #26]
 80182ca:	f8ad 301c 	strh.w	r3, [sp, #28]
 80182ce:	f8ad 101e 	strh.w	r1, [sp, #30]
 80182d2:	23ff      	movs	r3, #255	@ 0xff
 80182d4:	464a      	mov	r2, r9
 80182d6:	a902      	add	r1, sp, #8
 80182d8:	4628      	mov	r0, r5
 80182da:	f7ff f8a7 	bl	801742c <_ZN8touchgfx8LCD16bpp16blitCopyARGB8888EPKmRKNS_4RectES5_h>
 80182de:	4643      	mov	r3, r8
 80182e0:	aa02      	add	r2, sp, #8
 80182e2:	4629      	mov	r1, r5
 80182e4:	4638      	mov	r0, r7
 80182e6:	f7ff f987 	bl	80175f8 <_ZNK8touchgfx8LCD16bpp21blitCopyARGB8888SolidEPKmRKNS_4RectES5_>
 80182ea:	88a2      	ldrh	r2, [r4, #4]
 80182ec:	8823      	ldrh	r3, [r4, #0]
 80182ee:	f8bd 1014 	ldrh.w	r1, [sp, #20]
 80182f2:	4413      	add	r3, r2
 80182f4:	f8bd 2010 	ldrh.w	r2, [sp, #16]
 80182f8:	440a      	add	r2, r1
 80182fa:	b29b      	uxth	r3, r3
 80182fc:	b292      	uxth	r2, r2
 80182fe:	b211      	sxth	r1, r2
 8018300:	b218      	sxth	r0, r3
 8018302:	4288      	cmp	r0, r1
 8018304:	dd12      	ble.n	801832c <_ZN8touchgfx8LCD16bpp17drawPartialBitmapERKNS_6BitmapEssRKNS_4RectEhb+0x18c>
 8018306:	1a9b      	subs	r3, r3, r2
 8018308:	f9bd 0016 	ldrsh.w	r0, [sp, #22]
 801830c:	f9bd 6012 	ldrsh.w	r6, [sp, #18]
 8018310:	f8ad 1018 	strh.w	r1, [sp, #24]
 8018314:	f8ad 301c 	strh.w	r3, [sp, #28]
 8018318:	f8ad 001e 	strh.w	r0, [sp, #30]
 801831c:	23ff      	movs	r3, #255	@ 0xff
 801831e:	464a      	mov	r2, r9
 8018320:	a902      	add	r1, sp, #8
 8018322:	4628      	mov	r0, r5
 8018324:	f8ad 601a 	strh.w	r6, [sp, #26]
 8018328:	f7ff f880 	bl	801742c <_ZN8touchgfx8LCD16bpp16blitCopyARGB8888EPKmRKNS_4RectES5_h>
 801832c:	88e2      	ldrh	r2, [r4, #6]
 801832e:	8863      	ldrh	r3, [r4, #2]
 8018330:	f8bd 1016 	ldrh.w	r1, [sp, #22]
 8018334:	4413      	add	r3, r2
 8018336:	f8bd 2012 	ldrh.w	r2, [sp, #18]
 801833a:	440a      	add	r2, r1
 801833c:	b29b      	uxth	r3, r3
 801833e:	b292      	uxth	r2, r2
 8018340:	b211      	sxth	r1, r2
 8018342:	b218      	sxth	r0, r3
 8018344:	4288      	cmp	r0, r1
 8018346:	dd80      	ble.n	801824a <_ZN8touchgfx8LCD16bpp17drawPartialBitmapERKNS_6BitmapEssRKNS_4RectEhb+0xaa>
 8018348:	1a9b      	subs	r3, r3, r2
 801834a:	f9b4 6000 	ldrsh.w	r6, [r4]
 801834e:	f9b4 0004 	ldrsh.w	r0, [r4, #4]
 8018352:	f8ad 301e 	strh.w	r3, [sp, #30]
 8018356:	f8ad 6018 	strh.w	r6, [sp, #24]
 801835a:	f8ad 101a 	strh.w	r1, [sp, #26]
 801835e:	f8ad 001c 	strh.w	r0, [sp, #28]
 8018362:	23ff      	movs	r3, #255	@ 0xff
 8018364:	464a      	mov	r2, r9
 8018366:	e761      	b.n	801822c <_ZN8touchgfx8LCD16bpp17drawPartialBitmapERKNS_6BitmapEssRKNS_4RectEhb+0x8c>
 8018368:	4633      	mov	r3, r6
 801836a:	4622      	mov	r2, r4
 801836c:	a902      	add	r1, sp, #8
 801836e:	4628      	mov	r0, r5
 8018370:	f7ff f9b2 	bl	80176d8 <_ZN8touchgfx8LCD16bpp14blitCopyRGB888EPKhRKNS_4RectES5_h>
 8018374:	e769      	b.n	801824a <_ZN8touchgfx8LCD16bpp17drawPartialBitmapERKNS_6BitmapEssRKNS_4RectEhb+0xaa>
 8018376:	e9cd 4600 	strd	r4, r6, [sp]
 801837a:	ab02      	add	r3, sp, #8
 801837c:	4652      	mov	r2, sl
 801837e:	4629      	mov	r1, r5
 8018380:	4638      	mov	r0, r7
 8018382:	f7ff fd89 	bl	8017e98 <_ZN8touchgfx8LCD16bpp10blitCopyL8EPKhS2_RKNS_4RectES5_h>
 8018386:	e760      	b.n	801824a <_ZN8touchgfx8LCD16bpp17drawPartialBitmapERKNS_6BitmapEssRKNS_4RectEhb+0xaa>
 8018388:	4640      	mov	r0, r8
 801838a:	f7f9 fff9 	bl	8012380 <_ZNK8touchgfx6Bitmap20hasTransparentPixelsEv>
 801838e:	b948      	cbnz	r0, 80183a4 <_ZN8touchgfx8LCD16bpp17drawPartialBitmapERKNS_6BitmapEssRKNS_4RectEhb+0x204>
 8018390:	683b      	ldr	r3, [r7, #0]
 8018392:	e9cd 6000 	strd	r6, r0, [sp]
 8018396:	aa02      	add	r2, sp, #8
 8018398:	68de      	ldr	r6, [r3, #12]
 801839a:	4629      	mov	r1, r5
 801839c:	4623      	mov	r3, r4
 801839e:	4638      	mov	r0, r7
 80183a0:	47b0      	blx	r6
 80183a2:	e752      	b.n	801824a <_ZN8touchgfx8LCD16bpp17drawPartialBitmapERKNS_6BitmapEssRKNS_4RectEhb+0xaa>
 80183a4:	f10d 0918 	add.w	r9, sp, #24
 80183a8:	4641      	mov	r1, r8
 80183aa:	4648      	mov	r0, r9
 80183ac:	f7f9 ff96 	bl	80122dc <_ZNK8touchgfx6Bitmap12getSolidRectEv>
 80183b0:	e899 0003 	ldmia.w	r9, {r0, r1}
 80183b4:	f10d 0810 	add.w	r8, sp, #16
 80183b8:	e888 0003 	stmia.w	r8, {r0, r1}
 80183bc:	4640      	mov	r0, r8
 80183be:	4621      	mov	r1, r4
 80183c0:	f7f3 fc9e 	bl	800bd00 <_ZN8touchgfx4RectaNERKS0_>
 80183c4:	4640      	mov	r0, r8
 80183c6:	f7f3 fcde 	bl	800bd86 <_ZNK8touchgfx4Rect7isEmptyEv>
 80183ca:	b138      	cbz	r0, 80183dc <_ZN8touchgfx8LCD16bpp17drawPartialBitmapERKNS_6BitmapEssRKNS_4RectEhb+0x23c>
 80183cc:	9600      	str	r6, [sp, #0]
 80183ce:	4623      	mov	r3, r4
 80183d0:	aa02      	add	r2, sp, #8
 80183d2:	4651      	mov	r1, sl
 80183d4:	4628      	mov	r0, r5
 80183d6:	f7ff fdbd 	bl	8017f54 <_ZN8touchgfx8LCD16bpp21blitCopyAlphaPerPixelEPKtPKhRKNS_4RectES7_h>
 80183da:	e736      	b.n	801824a <_ZN8touchgfx8LCD16bpp17drawPartialBitmapERKNS_6BitmapEssRKNS_4RectEhb+0xaa>
 80183dc:	683b      	ldr	r3, [r7, #0]
 80183de:	e9cd 6000 	strd	r6, r0, [sp]
 80183e2:	aa02      	add	r2, sp, #8
 80183e4:	f8d3 b00c 	ldr.w	fp, [r3, #12]
 80183e8:	4629      	mov	r1, r5
 80183ea:	4643      	mov	r3, r8
 80183ec:	4638      	mov	r0, r7
 80183ee:	47d8      	blx	fp
 80183f0:	f9bd 3012 	ldrsh.w	r3, [sp, #18]
 80183f4:	f9b4 2002 	ldrsh.w	r2, [r4, #2]
 80183f8:	4293      	cmp	r3, r2
 80183fa:	dd13      	ble.n	8018424 <_ZN8touchgfx8LCD16bpp17drawPartialBitmapERKNS_6BitmapEssRKNS_4RectEhb+0x284>
 80183fc:	f9b4 0000 	ldrsh.w	r0, [r4]
 8018400:	f9b4 1004 	ldrsh.w	r1, [r4, #4]
 8018404:	f8ad 0018 	strh.w	r0, [sp, #24]
 8018408:	1a9b      	subs	r3, r3, r2
 801840a:	f8ad 201a 	strh.w	r2, [sp, #26]
 801840e:	f8ad 101c 	strh.w	r1, [sp, #28]
 8018412:	f8ad 301e 	strh.w	r3, [sp, #30]
 8018416:	9600      	str	r6, [sp, #0]
 8018418:	464b      	mov	r3, r9
 801841a:	aa02      	add	r2, sp, #8
 801841c:	4651      	mov	r1, sl
 801841e:	4628      	mov	r0, r5
 8018420:	f7ff fd98 	bl	8017f54 <_ZN8touchgfx8LCD16bpp21blitCopyAlphaPerPixelEPKtPKhRKNS_4RectES7_h>
 8018424:	f9bd 3010 	ldrsh.w	r3, [sp, #16]
 8018428:	f9b4 2000 	ldrsh.w	r2, [r4]
 801842c:	4293      	cmp	r3, r2
 801842e:	dd13      	ble.n	8018458 <_ZN8touchgfx8LCD16bpp17drawPartialBitmapERKNS_6BitmapEssRKNS_4RectEhb+0x2b8>
 8018430:	1a9b      	subs	r3, r3, r2
 8018432:	f9bd 0012 	ldrsh.w	r0, [sp, #18]
 8018436:	f9bd 1016 	ldrsh.w	r1, [sp, #22]
 801843a:	f8ad 2018 	strh.w	r2, [sp, #24]
 801843e:	f8ad 001a 	strh.w	r0, [sp, #26]
 8018442:	f8ad 301c 	strh.w	r3, [sp, #28]
 8018446:	f8ad 101e 	strh.w	r1, [sp, #30]
 801844a:	9600      	str	r6, [sp, #0]
 801844c:	464b      	mov	r3, r9
 801844e:	aa02      	add	r2, sp, #8
 8018450:	4651      	mov	r1, sl
 8018452:	4628      	mov	r0, r5
 8018454:	f7ff fd7e 	bl	8017f54 <_ZN8touchgfx8LCD16bpp21blitCopyAlphaPerPixelEPKtPKhRKNS_4RectES7_h>
 8018458:	88a2      	ldrh	r2, [r4, #4]
 801845a:	8823      	ldrh	r3, [r4, #0]
 801845c:	f8bd 1014 	ldrh.w	r1, [sp, #20]
 8018460:	4413      	add	r3, r2
 8018462:	f8bd 2010 	ldrh.w	r2, [sp, #16]
 8018466:	440a      	add	r2, r1
 8018468:	b29b      	uxth	r3, r3
 801846a:	b292      	uxth	r2, r2
 801846c:	b211      	sxth	r1, r2
 801846e:	b218      	sxth	r0, r3
 8018470:	4288      	cmp	r0, r1
 8018472:	dd13      	ble.n	801849c <_ZN8touchgfx8LCD16bpp17drawPartialBitmapERKNS_6BitmapEssRKNS_4RectEhb+0x2fc>
 8018474:	1a9b      	subs	r3, r3, r2
 8018476:	f9bd 0016 	ldrsh.w	r0, [sp, #22]
 801847a:	f9bd 7012 	ldrsh.w	r7, [sp, #18]
 801847e:	f8ad 1018 	strh.w	r1, [sp, #24]
 8018482:	f8ad 301c 	strh.w	r3, [sp, #28]
 8018486:	f8ad 001e 	strh.w	r0, [sp, #30]
 801848a:	9600      	str	r6, [sp, #0]
 801848c:	464b      	mov	r3, r9
 801848e:	aa02      	add	r2, sp, #8
 8018490:	4651      	mov	r1, sl
 8018492:	4628      	mov	r0, r5
 8018494:	f8ad 701a 	strh.w	r7, [sp, #26]
 8018498:	f7ff fd5c 	bl	8017f54 <_ZN8touchgfx8LCD16bpp21blitCopyAlphaPerPixelEPKtPKhRKNS_4RectES7_h>
 801849c:	88e2      	ldrh	r2, [r4, #6]
 801849e:	8863      	ldrh	r3, [r4, #2]
 80184a0:	f8bd 1016 	ldrh.w	r1, [sp, #22]
 80184a4:	4413      	add	r3, r2
 80184a6:	f8bd 2012 	ldrh.w	r2, [sp, #18]
 80184aa:	440a      	add	r2, r1
 80184ac:	b29b      	uxth	r3, r3
 80184ae:	b292      	uxth	r2, r2
 80184b0:	b211      	sxth	r1, r2
 80184b2:	b218      	sxth	r0, r3
 80184b4:	4288      	cmp	r0, r1
 80184b6:	f77f aec8 	ble.w	801824a <_ZN8touchgfx8LCD16bpp17drawPartialBitmapERKNS_6BitmapEssRKNS_4RectEhb+0xaa>
 80184ba:	f9b4 7000 	ldrsh.w	r7, [r4]
 80184be:	f9b4 0004 	ldrsh.w	r0, [r4, #4]
 80184c2:	f8ad 7018 	strh.w	r7, [sp, #24]
 80184c6:	1a9b      	subs	r3, r3, r2
 80184c8:	f8ad 301e 	strh.w	r3, [sp, #30]
 80184cc:	f8ad 101a 	strh.w	r1, [sp, #26]
 80184d0:	f8ad 001c 	strh.w	r0, [sp, #28]
 80184d4:	9600      	str	r6, [sp, #0]
 80184d6:	464b      	mov	r3, r9
 80184d8:	e77a      	b.n	80183d0 <_ZN8touchgfx8LCD16bpp17drawPartialBitmapERKNS_6BitmapEssRKNS_4RectEhb+0x230>
 80184da:	f8d7 0088 	ldr.w	r0, [r7, #136]	@ 0x88
 80184de:	2800      	cmp	r0, #0
 80184e0:	f43f aeb3 	beq.w	801824a <_ZN8touchgfx8LCD16bpp17drawPartialBitmapERKNS_6BitmapEssRKNS_4RectEhb+0xaa>
 80184e4:	6803      	ldr	r3, [r0, #0]
 80184e6:	9600      	str	r6, [sp, #0]
 80184e8:	68de      	ldr	r6, [r3, #12]
 80184ea:	4623      	mov	r3, r4
 80184ec:	aa02      	add	r2, sp, #8
 80184ee:	4629      	mov	r1, r5
 80184f0:	47b0      	blx	r6
 80184f2:	e6aa      	b.n	801824a <_ZN8touchgfx8LCD16bpp17drawPartialBitmapERKNS_6BitmapEssRKNS_4RectEhb+0xaa>
 80184f4:	f8d7 0088 	ldr.w	r0, [r7, #136]	@ 0x88
 80184f8:	2800      	cmp	r0, #0
 80184fa:	f43f aea6 	beq.w	801824a <_ZN8touchgfx8LCD16bpp17drawPartialBitmapERKNS_6BitmapEssRKNS_4RectEhb+0xaa>
 80184fe:	6803      	ldr	r3, [r0, #0]
 8018500:	9600      	str	r6, [sp, #0]
 8018502:	689e      	ldr	r6, [r3, #8]
 8018504:	e7f1      	b.n	80184ea <_ZN8touchgfx8LCD16bpp17drawPartialBitmapERKNS_6BitmapEssRKNS_4RectEhb+0x34a>
 8018506:	bf00      	nop
 8018508:	20002c5c 	.word	0x20002c5c

0801850c <_ZN8touchgfx8LCD16bpp9nextPixelEbNS_12TextRotationE>:
 801850c:	b180      	cbz	r0, 8018530 <_ZN8touchgfx8LCD16bpp9nextPixelEbNS_12TextRotationE+0x24>
 801850e:	2903      	cmp	r1, #3
 8018510:	d81c      	bhi.n	801854c <_ZN8touchgfx8LCD16bpp9nextPixelEbNS_12TextRotationE+0x40>
 8018512:	e8df f001 	tbb	[pc, r1]
 8018516:	1d02      	.short	0x1d02
 8018518:	1f08      	.short	0x1f08
 801851a:	4b10      	ldr	r3, [pc, #64]	@ (801855c <_ZN8touchgfx8LCD16bpp9nextPixelEbNS_12TextRotationE+0x50>)
 801851c:	8818      	ldrh	r0, [r3, #0]
 801851e:	f3c0 000e 	ubfx	r0, r0, #0, #15
 8018522:	4240      	negs	r0, r0
 8018524:	4770      	bx	lr
 8018526:	4b0d      	ldr	r3, [pc, #52]	@ (801855c <_ZN8touchgfx8LCD16bpp9nextPixelEbNS_12TextRotationE+0x50>)
 8018528:	8818      	ldrh	r0, [r3, #0]
 801852a:	f3c0 000e 	ubfx	r0, r0, #0, #15
 801852e:	4770      	bx	lr
 8018530:	2903      	cmp	r1, #3
 8018532:	d80b      	bhi.n	801854c <_ZN8touchgfx8LCD16bpp9nextPixelEbNS_12TextRotationE+0x40>
 8018534:	a301      	add	r3, pc, #4	@ (adr r3, 801853c <_ZN8touchgfx8LCD16bpp9nextPixelEbNS_12TextRotationE+0x30>)
 8018536:	f853 f021 	ldr.w	pc, [r3, r1, lsl #2]
 801853a:	bf00      	nop
 801853c:	08018551 	.word	0x08018551
 8018540:	08018527 	.word	0x08018527
 8018544:	08018555 	.word	0x08018555
 8018548:	0801851b 	.word	0x0801851b
 801854c:	2000      	movs	r0, #0
 801854e:	4770      	bx	lr
 8018550:	2001      	movs	r0, #1
 8018552:	4770      	bx	lr
 8018554:	f04f 30ff 	mov.w	r0, #4294967295
 8018558:	4770      	bx	lr
 801855a:	bf00      	nop
 801855c:	20002c56 	.word	0x20002c56

08018560 <_ZN8touchgfx8LCD16bpp8nextLineEbNS_12TextRotationE>:
 8018560:	b180      	cbz	r0, 8018584 <_ZN8touchgfx8LCD16bpp8nextLineEbNS_12TextRotationE+0x24>
 8018562:	2903      	cmp	r1, #3
 8018564:	d81c      	bhi.n	80185a0 <_ZN8touchgfx8LCD16bpp8nextLineEbNS_12TextRotationE+0x40>
 8018566:	e8df f001 	tbb	[pc, r1]
 801856a:	021d      	.short	0x021d
 801856c:	071f      	.short	0x071f
 801856e:	4b10      	ldr	r3, [pc, #64]	@ (80185b0 <_ZN8touchgfx8LCD16bpp8nextLineEbNS_12TextRotationE+0x50>)
 8018570:	8818      	ldrh	r0, [r3, #0]
 8018572:	f3c0 000e 	ubfx	r0, r0, #0, #15
 8018576:	4770      	bx	lr
 8018578:	4b0d      	ldr	r3, [pc, #52]	@ (80185b0 <_ZN8touchgfx8LCD16bpp8nextLineEbNS_12TextRotationE+0x50>)
 801857a:	8818      	ldrh	r0, [r3, #0]
 801857c:	f3c0 000e 	ubfx	r0, r0, #0, #15
 8018580:	4240      	negs	r0, r0
 8018582:	4770      	bx	lr
 8018584:	2903      	cmp	r1, #3
 8018586:	d80b      	bhi.n	80185a0 <_ZN8touchgfx8LCD16bpp8nextLineEbNS_12TextRotationE+0x40>
 8018588:	a301      	add	r3, pc, #4	@ (adr r3, 8018590 <_ZN8touchgfx8LCD16bpp8nextLineEbNS_12TextRotationE+0x30>)
 801858a:	f853 f021 	ldr.w	pc, [r3, r1, lsl #2]
 801858e:	bf00      	nop
 8018590:	0801856f 	.word	0x0801856f
 8018594:	080185a9 	.word	0x080185a9
 8018598:	08018579 	.word	0x08018579
 801859c:	080185a5 	.word	0x080185a5
 80185a0:	2000      	movs	r0, #0
 80185a2:	4770      	bx	lr
 80185a4:	2001      	movs	r0, #1
 80185a6:	4770      	bx	lr
 80185a8:	f04f 30ff 	mov.w	r0, #4294967295
 80185ac:	4770      	bx	lr
 80185ae:	bf00      	nop
 80185b0:	20002c56 	.word	0x20002c56

080185b4 <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE>:
 80185b4:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 80185b8:	b099      	sub	sp, #100	@ 0x64
 80185ba:	910b      	str	r1, [sp, #44]	@ 0x2c
 80185bc:	a914      	add	r1, sp, #80	@ 0x50
 80185be:	e881 000c 	stmia.w	r1, {r2, r3}
 80185c2:	e9dd 2126 	ldrd	r2, r1, [sp, #152]	@ 0x98
 80185c6:	f9bd 308c 	ldrsh.w	r3, [sp, #140]	@ 0x8c
 80185ca:	f891 900d 	ldrb.w	r9, [r1, #13]
 80185ce:	9309      	str	r3, [sp, #36]	@ 0x24
 80185d0:	f89d 30a4 	ldrb.w	r3, [sp, #164]	@ 0xa4
 80185d4:	9310      	str	r3, [sp, #64]	@ 0x40
 80185d6:	ea4f 1749 	mov.w	r7, r9, lsl #5
 80185da:	f89d 30b0 	ldrb.w	r3, [sp, #176]	@ 0xb0
 80185de:	930c      	str	r3, [sp, #48]	@ 0x30
 80185e0:	f407 7380 	and.w	r3, r7, #256	@ 0x100
 80185e4:	798f      	ldrb	r7, [r1, #6]
 80185e6:	f9bd 4088 	ldrsh.w	r4, [sp, #136]	@ 0x88
 80185ea:	f8bd 5090 	ldrh.w	r5, [sp, #144]	@ 0x90
 80185ee:	f8bd 6094 	ldrh.w	r6, [sp, #148]	@ 0x94
 80185f2:	f89d 80ac 	ldrb.w	r8, [sp, #172]	@ 0xac
 80185f6:	f89d a0b4 	ldrb.w	sl, [sp, #180]	@ 0xb4
 80185fa:	431f      	orrs	r7, r3
 80185fc:	f000 8195 	beq.w	801892a <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x376>
 8018600:	ea4f 1909 	mov.w	r9, r9, lsl #4
 8018604:	f409 7380 	and.w	r3, r9, #256	@ 0x100
 8018608:	f891 9007 	ldrb.w	r9, [r1, #7]
 801860c:	ea59 0903 	orrs.w	r9, r9, r3
 8018610:	f000 818b 	beq.w	801892a <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x376>
 8018614:	f991 3009 	ldrsb.w	r3, [r1, #9]
 8018618:	b29b      	uxth	r3, r3
 801861a:	2d00      	cmp	r5, #0
 801861c:	f000 812e 	beq.w	801887c <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x2c8>
 8018620:	1aed      	subs	r5, r5, r3
 8018622:	b2ad      	uxth	r5, r5
 8018624:	042b      	lsls	r3, r5, #16
 8018626:	d502      	bpl.n	801862e <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x7a>
 8018628:	1b64      	subs	r4, r4, r5
 801862a:	b224      	sxth	r4, r4
 801862c:	2500      	movs	r5, #0
 801862e:	f9b2 1000 	ldrsh.w	r1, [r2]
 8018632:	f8cd 9028 	str.w	r9, [sp, #40]	@ 0x28
 8018636:	428c      	cmp	r4, r1
 8018638:	b28b      	uxth	r3, r1
 801863a:	bfbf      	itttt	lt
 801863c:	18ed      	addlt	r5, r5, r3
 801863e:	1b2c      	sublt	r4, r5, r4
 8018640:	b2a5      	uxthlt	r5, r4
 8018642:	460c      	movlt	r4, r1
 8018644:	8891      	ldrh	r1, [r2, #4]
 8018646:	440b      	add	r3, r1
 8018648:	b21b      	sxth	r3, r3
 801864a:	930f      	str	r3, [sp, #60]	@ 0x3c
 801864c:	88d3      	ldrh	r3, [r2, #6]
 801864e:	8852      	ldrh	r2, [r2, #2]
 8018650:	4413      	add	r3, r2
 8018652:	b21b      	sxth	r3, r3
 8018654:	930d      	str	r3, [sp, #52]	@ 0x34
 8018656:	4bbe      	ldr	r3, [pc, #760]	@ (8018950 <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x39c>)
 8018658:	9a09      	ldr	r2, [sp, #36]	@ 0x24
 801865a:	f893 b000 	ldrb.w	fp, [r3]
 801865e:	f10b 3cff 	add.w	ip, fp, #4294967295
 8018662:	f1dc 0300 	rsbs	r3, ip, #0
 8018666:	eb43 030c 	adc.w	r3, r3, ip
 801866a:	930e      	str	r3, [sp, #56]	@ 0x38
 801866c:	4621      	mov	r1, r4
 801866e:	4653      	mov	r3, sl
 8018670:	a814      	add	r0, sp, #80	@ 0x50
 8018672:	f7f6 fa34 	bl	800eade <_ZN8touchgfx3LCD5realXERKNS_4RectEssNS_12TextRotationE>
 8018676:	4621      	mov	r1, r4
 8018678:	f8ad 005c 	strh.w	r0, [sp, #92]	@ 0x5c
 801867c:	4653      	mov	r3, sl
 801867e:	9a09      	ldr	r2, [sp, #36]	@ 0x24
 8018680:	a814      	add	r0, sp, #80	@ 0x50
 8018682:	f7f6 fa49 	bl	800eb18 <_ZN8touchgfx3LCD5realYERKNS_4RectEssNS_12TextRotationE>
 8018686:	a918      	add	r1, sp, #96	@ 0x60
 8018688:	f821 0d02 	strh.w	r0, [r1, #-2]!
 801868c:	a817      	add	r0, sp, #92	@ 0x5c
 801868e:	f7f6 fb6f 	bl	800ed70 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERsS1_>
 8018692:	f1ba 0f00 	cmp.w	sl, #0
 8018696:	f040 80f4 	bne.w	8018882 <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x2ce>
 801869a:	f1bb 0f01 	cmp.w	fp, #1
 801869e:	f040 80f8 	bne.w	8018892 <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x2de>
 80186a2:	9b10      	ldr	r3, [sp, #64]	@ 0x40
 80186a4:	2b00      	cmp	r3, #0
 80186a6:	f040 8145 	bne.w	8018934 <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x380>
 80186aa:	b2ba      	uxth	r2, r7
 80186ac:	b905      	cbnz	r5, 80186b0 <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0xfc>
 80186ae:	b16e      	cbz	r6, 80186cc <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x118>
 80186b0:	fb06 5302 	mla	r3, r6, r2, r5
 80186b4:	9828      	ldr	r0, [sp, #160]	@ 0xa0
 80186b6:	fb08 f303 	mul.w	r3, r8, r3
 80186ba:	4631      	mov	r1, r6
 80186bc:	f003 0607 	and.w	r6, r3, #7
 80186c0:	eb00 03d3 	add.w	r3, r0, r3, lsr #3
 80186c4:	9328      	str	r3, [sp, #160]	@ 0xa0
 80186c6:	eba9 0301 	sub.w	r3, r9, r1
 80186ca:	930a      	str	r3, [sp, #40]	@ 0x28
 80186cc:	4651      	mov	r1, sl
 80186ce:	980e      	ldr	r0, [sp, #56]	@ 0x38
 80186d0:	f7ff ff1c 	bl	801850c <_ZN8touchgfx8LCD16bpp9nextPixelEbNS_12TextRotationE>
 80186d4:	4681      	mov	r9, r0
 80186d6:	980e      	ldr	r0, [sp, #56]	@ 0x38
 80186d8:	f7ff ff42 	bl	8018560 <_ZN8touchgfx8LCD16bpp8nextLineEbNS_12TextRotationE>
 80186dc:	9b0d      	ldr	r3, [sp, #52]	@ 0x34
 80186de:	9909      	ldr	r1, [sp, #36]	@ 0x24
 80186e0:	eba3 0a01 	sub.w	sl, r3, r1
 80186e4:	9b0a      	ldr	r3, [sp, #40]	@ 0x28
 80186e6:	459a      	cmp	sl, r3
 80186e8:	bfa8      	it	ge
 80186ea:	469a      	movge	sl, r3
 80186ec:	f1ba 0f00 	cmp.w	sl, #0
 80186f0:	4683      	mov	fp, r0
 80186f2:	f340 811a 	ble.w	801892a <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x376>
 80186f6:	9b0f      	ldr	r3, [sp, #60]	@ 0x3c
 80186f8:	1b64      	subs	r4, r4, r5
 80186fa:	1b1c      	subs	r4, r3, r4
 80186fc:	42bc      	cmp	r4, r7
 80186fe:	bfd4      	ite	le
 8018700:	ebc5 0504 	rsble	r5, r5, r4
 8018704:	ebc5 0507 	rsbgt	r5, r5, r7
 8018708:	2d00      	cmp	r5, #0
 801870a:	f340 810e 	ble.w	801892a <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x376>
 801870e:	1b52      	subs	r2, r2, r5
 8018710:	fb08 f302 	mul.w	r3, r8, r2
 8018714:	930f      	str	r3, [sp, #60]	@ 0x3c
 8018716:	9b0b      	ldr	r3, [sp, #44]	@ 0x2c
 8018718:	2b00      	cmp	r3, #0
 801871a:	f040 8116 	bne.w	801894a <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x396>
 801871e:	4b8d      	ldr	r3, [pc, #564]	@ (8018954 <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x3a0>)
 8018720:	6818      	ldr	r0, [r3, #0]
 8018722:	6803      	ldr	r3, [r0, #0]
 8018724:	6a9b      	ldr	r3, [r3, #40]	@ 0x28
 8018726:	4798      	blx	r3
 8018728:	2301      	movs	r3, #1
 801872a:	fa03 f308 	lsl.w	r3, r3, r8
 801872e:	4a8a      	ldr	r2, [pc, #552]	@ (8018958 <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x3a4>)
 8018730:	3b01      	subs	r3, #1
 8018732:	b2db      	uxtb	r3, r3
 8018734:	8811      	ldrh	r1, [r2, #0]
 8018736:	930e      	str	r3, [sp, #56]	@ 0x38
 8018738:	f9bd 205c 	ldrsh.w	r2, [sp, #92]	@ 0x5c
 801873c:	f9bd 305e 	ldrsh.w	r3, [sp, #94]	@ 0x5e
 8018740:	fb01 2303 	mla	r3, r1, r3, r2
 8018744:	eb00 0343 	add.w	r3, r0, r3, lsl #1
 8018748:	930a      	str	r3, [sp, #40]	@ 0x28
 801874a:	9b2a      	ldr	r3, [sp, #168]	@ 0xa8
 801874c:	f3c3 4307 	ubfx	r3, r3, #16, #8
 8018750:	9313      	str	r3, [sp, #76]	@ 0x4c
 8018752:	9b2a      	ldr	r3, [sp, #168]	@ 0xa8
 8018754:	0a19      	lsrs	r1, r3, #8
 8018756:	b2cb      	uxtb	r3, r1
 8018758:	9312      	str	r3, [sp, #72]	@ 0x48
 801875a:	9b2a      	ldr	r3, [sp, #168]	@ 0xa8
 801875c:	b2db      	uxtb	r3, r3
 801875e:	9311      	str	r3, [sp, #68]	@ 0x44
 8018760:	9b2a      	ldr	r3, [sp, #168]	@ 0xa8
 8018762:	095a      	lsrs	r2, r3, #5
 8018764:	4b7d      	ldr	r3, [pc, #500]	@ (801895c <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x3a8>)
 8018766:	f402 62fc 	and.w	r2, r2, #2016	@ 0x7e0
 801876a:	400b      	ands	r3, r1
 801876c:	4313      	orrs	r3, r2
 801876e:	9a2a      	ldr	r2, [sp, #168]	@ 0xa8
 8018770:	f3c2 02c4 	ubfx	r2, r2, #3, #5
 8018774:	4313      	orrs	r3, r2
 8018776:	b29b      	uxth	r3, r3
 8018778:	9310      	str	r3, [sp, #64]	@ 0x40
 801877a:	9b28      	ldr	r3, [sp, #160]	@ 0xa0
 801877c:	781a      	ldrb	r2, [r3, #0]
 801877e:	ea4f 0349 	mov.w	r3, r9, lsl #1
 8018782:	4132      	asrs	r2, r6
 8018784:	fb05 b919 	mls	r9, r5, r9, fp
 8018788:	fb03 fb05 	mul.w	fp, r3, r5
 801878c:	b2d2      	uxtb	r2, r2
 801878e:	930d      	str	r3, [sp, #52]	@ 0x34
 8018790:	eb0b 0b49 	add.w	fp, fp, r9, lsl #1
 8018794:	f11a 3aff 	adds.w	sl, sl, #4294967295
 8018798:	f0c0 80f5 	bcc.w	8018986 <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x3d2>
 801879c:	f8dd c028 	ldr.w	ip, [sp, #40]	@ 0x28
 80187a0:	46ae      	mov	lr, r5
 80187a2:	f11e 3eff 	adds.w	lr, lr, #4294967295
 80187a6:	f0c0 80dd 	bcc.w	8018964 <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x3b0>
 80187aa:	9b0e      	ldr	r3, [sp, #56]	@ 0x38
 80187ac:	4013      	ands	r3, r2
 80187ae:	d055      	beq.n	801885c <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x2a8>
 80187b0:	20ff      	movs	r0, #255	@ 0xff
 80187b2:	990e      	ldr	r1, [sp, #56]	@ 0x38
 80187b4:	fb90 f1f1 	sdiv	r1, r0, r1
 80187b8:	434b      	muls	r3, r1
 80187ba:	2bfe      	cmp	r3, #254	@ 0xfe
 80187bc:	dd03      	ble.n	80187c6 <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x212>
 80187be:	990c      	ldr	r1, [sp, #48]	@ 0x30
 80187c0:	4281      	cmp	r1, r0
 80187c2:	f000 80cd 	beq.w	8018960 <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x3ac>
 80187c6:	990c      	ldr	r1, [sp, #48]	@ 0x30
 80187c8:	f8bc 4000 	ldrh.w	r4, [ip]
 80187cc:	fb11 f303 	smulbb	r3, r1, r3
 80187d0:	b29b      	uxth	r3, r3
 80187d2:	1c59      	adds	r1, r3, #1
 80187d4:	eb01 2313 	add.w	r3, r1, r3, lsr #8
 80187d8:	f3c3 2307 	ubfx	r3, r3, #8, #8
 80187dc:	b29f      	uxth	r7, r3
 80187de:	43db      	mvns	r3, r3
 80187e0:	b2db      	uxtb	r3, r3
 80187e2:	9309      	str	r3, [sp, #36]	@ 0x24
 80187e4:	9b13      	ldr	r3, [sp, #76]	@ 0x4c
 80187e6:	1220      	asrs	r0, r4, #8
 80187e8:	fb13 f907 	smulbb	r9, r3, r7
 80187ec:	f000 00f8 	and.w	r0, r0, #248	@ 0xf8
 80187f0:	9b09      	ldr	r3, [sp, #36]	@ 0x24
 80187f2:	ea40 1050 	orr.w	r0, r0, r0, lsr #5
 80187f6:	fb00 9003 	mla	r0, r0, r3, r9
 80187fa:	9b12      	ldr	r3, [sp, #72]	@ 0x48
 80187fc:	10e1      	asrs	r1, r4, #3
 80187fe:	fb13 f907 	smulbb	r9, r3, r7
 8018802:	f001 01fc 	and.w	r1, r1, #252	@ 0xfc
 8018806:	9b09      	ldr	r3, [sp, #36]	@ 0x24
 8018808:	ea41 1191 	orr.w	r1, r1, r1, lsr #6
 801880c:	fb01 9103 	mla	r1, r1, r3, r9
 8018810:	9b11      	ldr	r3, [sp, #68]	@ 0x44
 8018812:	00e4      	lsls	r4, r4, #3
 8018814:	fb13 f707 	smulbb	r7, r3, r7
 8018818:	b2e4      	uxtb	r4, r4
 801881a:	9b09      	ldr	r3, [sp, #36]	@ 0x24
 801881c:	ea44 1454 	orr.w	r4, r4, r4, lsr #5
 8018820:	fb04 7403 	mla	r4, r4, r3, r7
 8018824:	b280      	uxth	r0, r0
 8018826:	b2a4      	uxth	r4, r4
 8018828:	1c43      	adds	r3, r0, #1
 801882a:	f104 0901 	add.w	r9, r4, #1
 801882e:	eb03 2010 	add.w	r0, r3, r0, lsr #8
 8018832:	eb09 2914 	add.w	r9, r9, r4, lsr #8
 8018836:	b289      	uxth	r1, r1
 8018838:	f3c9 29c4 	ubfx	r9, r9, #11, #5
 801883c:	f400 4078 	and.w	r0, r0, #63488	@ 0xf800
 8018840:	ea49 0000 	orr.w	r0, r9, r0
 8018844:	f101 0901 	add.w	r9, r1, #1
 8018848:	eb09 2911 	add.w	r9, r9, r1, lsr #8
 801884c:	ea4f 1959 	mov.w	r9, r9, lsr #5
 8018850:	f409 69fc 	and.w	r9, r9, #2016	@ 0x7e0
 8018854:	ea40 0009 	orr.w	r0, r0, r9
 8018858:	f8ac 0000 	strh.w	r0, [ip]
 801885c:	4446      	add	r6, r8
 801885e:	b2b6      	uxth	r6, r6
 8018860:	2e07      	cmp	r6, #7
 8018862:	bf81      	itttt	hi
 8018864:	9b28      	ldrhi	r3, [sp, #160]	@ 0xa0
 8018866:	785a      	ldrbhi	r2, [r3, #1]
 8018868:	3301      	addhi	r3, #1
 801886a:	9328      	strhi	r3, [sp, #160]	@ 0xa0
 801886c:	9b0d      	ldr	r3, [sp, #52]	@ 0x34
 801886e:	bf9a      	itte	ls
 8018870:	fa42 f208 	asrls.w	r2, r2, r8
 8018874:	b2d2      	uxtbls	r2, r2
 8018876:	2600      	movhi	r6, #0
 8018878:	449c      	add	ip, r3
 801887a:	e792      	b.n	80187a2 <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x1ee>
 801887c:	441c      	add	r4, r3
 801887e:	b224      	sxth	r4, r4
 8018880:	e6d5      	b.n	801862e <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x7a>
 8018882:	f1ba 0f01 	cmp.w	sl, #1
 8018886:	f47f af0c 	bne.w	80186a2 <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0xee>
 801888a:	f1bb 0f01 	cmp.w	fp, #1
 801888e:	f47f af08 	bne.w	80186a2 <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0xee>
 8018892:	f8df b0c0 	ldr.w	fp, [pc, #192]	@ 8018954 <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x3a0>
 8018896:	f8db 0000 	ldr.w	r0, [fp]
 801889a:	6803      	ldr	r3, [r0, #0]
 801889c:	6b9b      	ldr	r3, [r3, #56]	@ 0x38
 801889e:	4798      	blx	r3
 80188a0:	f410 7380 	ands.w	r3, r0, #256	@ 0x100
 80188a4:	465a      	mov	r2, fp
 80188a6:	d006      	beq.n	80188b6 <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x302>
 80188a8:	f1b8 0f04 	cmp.w	r8, #4
 80188ac:	d140      	bne.n	8018930 <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x37c>
 80188ae:	9b10      	ldr	r3, [sp, #64]	@ 0x40
 80188b0:	3300      	adds	r3, #0
 80188b2:	bf18      	it	ne
 80188b4:	2301      	movne	r3, #1
 80188b6:	0580      	lsls	r0, r0, #22
 80188b8:	d56e      	bpl.n	8018998 <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x3e4>
 80188ba:	f1b8 0f08 	cmp.w	r8, #8
 80188be:	d16b      	bne.n	8018998 <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x3e4>
 80188c0:	2b00      	cmp	r3, #0
 80188c2:	bf0c      	ite	eq
 80188c4:	f44f 7100 	moveq.w	r1, #512	@ 0x200
 80188c8:	f44f 7180 	movne.w	r1, #256	@ 0x100
 80188cc:	2d00      	cmp	r5, #0
 80188ce:	f47f aee8 	bne.w	80186a2 <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0xee>
 80188d2:	2e00      	cmp	r6, #0
 80188d4:	f47f aee5 	bne.w	80186a2 <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0xee>
 80188d8:	980f      	ldr	r0, [sp, #60]	@ 0x3c
 80188da:	19e3      	adds	r3, r4, r7
 80188dc:	4283      	cmp	r3, r0
 80188de:	f73f aee0 	bgt.w	80186a2 <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0xee>
 80188e2:	9b09      	ldr	r3, [sp, #36]	@ 0x24
 80188e4:	980d      	ldr	r0, [sp, #52]	@ 0x34
 80188e6:	444b      	add	r3, r9
 80188e8:	4283      	cmp	r3, r0
 80188ea:	f73f aeda 	bgt.w	80186a2 <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0xee>
 80188ee:	6810      	ldr	r0, [r2, #0]
 80188f0:	f8bd 305e 	ldrh.w	r3, [sp, #94]	@ 0x5e
 80188f4:	6804      	ldr	r4, [r0, #0]
 80188f6:	f8bd 205c 	ldrh.w	r2, [sp, #92]	@ 0x5c
 80188fa:	b2bf      	uxth	r7, r7
 80188fc:	f1b8 0f08 	cmp.w	r8, #8
 8018900:	f04f 0500 	mov.w	r5, #0
 8018904:	bf18      	it	ne
 8018906:	3701      	addne	r7, #1
 8018908:	e9cd 1505 	strd	r1, r5, [sp, #20]
 801890c:	990c      	ldr	r1, [sp, #48]	@ 0x30
 801890e:	9104      	str	r1, [sp, #16]
 8018910:	bf18      	it	ne
 8018912:	f027 0701 	bicne.w	r7, r7, #1
 8018916:	992a      	ldr	r1, [sp, #168]	@ 0xa8
 8018918:	bf18      	it	ne
 801891a:	b2bf      	uxthne	r7, r7
 801891c:	e9cd 7102 	strd	r7, r1, [sp, #8]
 8018920:	e9cd 7900 	strd	r7, r9, [sp]
 8018924:	9928      	ldr	r1, [sp, #160]	@ 0xa0
 8018926:	6d64      	ldr	r4, [r4, #84]	@ 0x54
 8018928:	47a0      	blx	r4
 801892a:	b019      	add	sp, #100	@ 0x64
 801892c:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 8018930:	2300      	movs	r3, #0
 8018932:	e7c0      	b.n	80188b6 <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x302>
 8018934:	2208      	movs	r2, #8
 8018936:	fb92 f3f8 	sdiv	r3, r2, r8
 801893a:	1e5a      	subs	r2, r3, #1
 801893c:	443a      	add	r2, r7
 801893e:	fb92 f2f3 	sdiv	r2, r2, r3
 8018942:	fb12 f203 	smulbb	r2, r2, r3
 8018946:	b292      	uxth	r2, r2
 8018948:	e6b0      	b.n	80186ac <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0xf8>
 801894a:	980b      	ldr	r0, [sp, #44]	@ 0x2c
 801894c:	e6ec      	b.n	8018728 <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x174>
 801894e:	bf00      	nop
 8018950:	20002c54 	.word	0x20002c54
 8018954:	20002c5c 	.word	0x20002c5c
 8018958:	20002c56 	.word	0x20002c56
 801895c:	00fff800 	.word	0x00fff800
 8018960:	9810      	ldr	r0, [sp, #64]	@ 0x40
 8018962:	e779      	b.n	8018858 <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x2a4>
 8018964:	9b0f      	ldr	r3, [sp, #60]	@ 0x3c
 8018966:	b153      	cbz	r3, 801897e <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x3ca>
 8018968:	441e      	add	r6, r3
 801896a:	9b28      	ldr	r3, [sp, #160]	@ 0xa0
 801896c:	b2b6      	uxth	r6, r6
 801896e:	eb03 03d6 	add.w	r3, r3, r6, lsr #3
 8018972:	f006 0607 	and.w	r6, r6, #7
 8018976:	781a      	ldrb	r2, [r3, #0]
 8018978:	9328      	str	r3, [sp, #160]	@ 0xa0
 801897a:	4132      	asrs	r2, r6
 801897c:	b2d2      	uxtb	r2, r2
 801897e:	9b0a      	ldr	r3, [sp, #40]	@ 0x28
 8018980:	445b      	add	r3, fp
 8018982:	930a      	str	r3, [sp, #40]	@ 0x28
 8018984:	e706      	b.n	8018794 <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x1e0>
 8018986:	9b0b      	ldr	r3, [sp, #44]	@ 0x2c
 8018988:	2b00      	cmp	r3, #0
 801898a:	d1ce      	bne.n	801892a <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x376>
 801898c:	4b05      	ldr	r3, [pc, #20]	@ (80189a4 <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x3f0>)
 801898e:	6818      	ldr	r0, [r3, #0]
 8018990:	6803      	ldr	r3, [r0, #0]
 8018992:	6adb      	ldr	r3, [r3, #44]	@ 0x2c
 8018994:	4798      	blx	r3
 8018996:	e7c8      	b.n	801892a <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x376>
 8018998:	2b00      	cmp	r3, #0
 801899a:	f43f ae82 	beq.w	80186a2 <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0xee>
 801899e:	f44f 7180 	mov.w	r1, #256	@ 0x100
 80189a2:	e793      	b.n	80188cc <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x318>
 80189a4:	20002c5c 	.word	0x20002c5c

080189a8 <_ZN8touchgfx8LCD16bpp50enableTextureMapperL8_RGB565_BilinearInterpolationEv>:
 80189a8:	b538      	push	{r3, r4, r5, lr}
 80189aa:	4c15      	ldr	r4, [pc, #84]	@ (8018a00 <_ZN8touchgfx8LCD16bpp50enableTextureMapperL8_RGB565_BilinearInterpolationEv+0x58>)
 80189ac:	7823      	ldrb	r3, [r4, #0]
 80189ae:	f3bf 8f5b 	dmb	ish
 80189b2:	07da      	lsls	r2, r3, #31
 80189b4:	4605      	mov	r5, r0
 80189b6:	d40b      	bmi.n	80189d0 <_ZN8touchgfx8LCD16bpp50enableTextureMapperL8_RGB565_BilinearInterpolationEv+0x28>
 80189b8:	4620      	mov	r0, r4
 80189ba:	f007 fefc 	bl	80207b6 <__cxa_guard_acquire>
 80189be:	b138      	cbz	r0, 80189d0 <_ZN8touchgfx8LCD16bpp50enableTextureMapperL8_RGB565_BilinearInterpolationEv+0x28>
 80189c0:	4620      	mov	r0, r4
 80189c2:	f007 ff04 	bl	80207ce <__cxa_guard_release>
 80189c6:	4a0f      	ldr	r2, [pc, #60]	@ (8018a04 <_ZN8touchgfx8LCD16bpp50enableTextureMapperL8_RGB565_BilinearInterpolationEv+0x5c>)
 80189c8:	490f      	ldr	r1, [pc, #60]	@ (8018a08 <_ZN8touchgfx8LCD16bpp50enableTextureMapperL8_RGB565_BilinearInterpolationEv+0x60>)
 80189ca:	4810      	ldr	r0, [pc, #64]	@ (8018a0c <_ZN8touchgfx8LCD16bpp50enableTextureMapperL8_RGB565_BilinearInterpolationEv+0x64>)
 80189cc:	f007 feec 	bl	80207a8 <__aeabi_atexit>
 80189d0:	4c0f      	ldr	r4, [pc, #60]	@ (8018a10 <_ZN8touchgfx8LCD16bpp50enableTextureMapperL8_RGB565_BilinearInterpolationEv+0x68>)
 80189d2:	7823      	ldrb	r3, [r4, #0]
 80189d4:	f3bf 8f5b 	dmb	ish
 80189d8:	07db      	lsls	r3, r3, #31
 80189da:	d40b      	bmi.n	80189f4 <_ZN8touchgfx8LCD16bpp50enableTextureMapperL8_RGB565_BilinearInterpolationEv+0x4c>
 80189dc:	4620      	mov	r0, r4
 80189de:	f007 feea 	bl	80207b6 <__cxa_guard_acquire>
 80189e2:	b138      	cbz	r0, 80189f4 <_ZN8touchgfx8LCD16bpp50enableTextureMapperL8_RGB565_BilinearInterpolationEv+0x4c>
 80189e4:	4620      	mov	r0, r4
 80189e6:	f007 fef2 	bl	80207ce <__cxa_guard_release>
 80189ea:	4a06      	ldr	r2, [pc, #24]	@ (8018a04 <_ZN8touchgfx8LCD16bpp50enableTextureMapperL8_RGB565_BilinearInterpolationEv+0x5c>)
 80189ec:	4909      	ldr	r1, [pc, #36]	@ (8018a14 <_ZN8touchgfx8LCD16bpp50enableTextureMapperL8_RGB565_BilinearInterpolationEv+0x6c>)
 80189ee:	480a      	ldr	r0, [pc, #40]	@ (8018a18 <_ZN8touchgfx8LCD16bpp50enableTextureMapperL8_RGB565_BilinearInterpolationEv+0x70>)
 80189f0:	f007 feda 	bl	80207a8 <__aeabi_atexit>
 80189f4:	4b05      	ldr	r3, [pc, #20]	@ (8018a0c <_ZN8touchgfx8LCD16bpp50enableTextureMapperL8_RGB565_BilinearInterpolationEv+0x64>)
 80189f6:	616b      	str	r3, [r5, #20]
 80189f8:	4b07      	ldr	r3, [pc, #28]	@ (8018a18 <_ZN8touchgfx8LCD16bpp50enableTextureMapperL8_RGB565_BilinearInterpolationEv+0x70>)
 80189fa:	61ab      	str	r3, [r5, #24]
 80189fc:	bd38      	pop	{r3, r4, r5, pc}
 80189fe:	bf00      	nop
 8018a00:	20002d38 	.word	0x20002d38
 8018a04:	20000000 	.word	0x20000000
 8018a08:	08014b6f 	.word	0x08014b6f
 8018a0c:	20000070 	.word	0x20000070
 8018a10:	20002d3c 	.word	0x20002d3c
 8018a14:	08014b6d 	.word	0x08014b6d
 8018a18:	20000074 	.word	0x20000074

08018a1c <_ZN8touchgfx8LCD16bpp44enableTextureMapperL8_RGB565_NearestNeighborEv>:
 8018a1c:	b538      	push	{r3, r4, r5, lr}
 8018a1e:	4c15      	ldr	r4, [pc, #84]	@ (8018a74 <_ZN8touchgfx8LCD16bpp44enableTextureMapperL8_RGB565_NearestNeighborEv+0x58>)
 8018a20:	7823      	ldrb	r3, [r4, #0]
 8018a22:	f3bf 8f5b 	dmb	ish
 8018a26:	07da      	lsls	r2, r3, #31
 8018a28:	4605      	mov	r5, r0
 8018a2a:	d40b      	bmi.n	8018a44 <_ZN8touchgfx8LCD16bpp44enableTextureMapperL8_RGB565_NearestNeighborEv+0x28>
 8018a2c:	4620      	mov	r0, r4
 8018a2e:	f007 fec2 	bl	80207b6 <__cxa_guard_acquire>
 8018a32:	b138      	cbz	r0, 8018a44 <_ZN8touchgfx8LCD16bpp44enableTextureMapperL8_RGB565_NearestNeighborEv+0x28>
 8018a34:	4620      	mov	r0, r4
 8018a36:	f007 feca 	bl	80207ce <__cxa_guard_release>
 8018a3a:	4a0f      	ldr	r2, [pc, #60]	@ (8018a78 <_ZN8touchgfx8LCD16bpp44enableTextureMapperL8_RGB565_NearestNeighborEv+0x5c>)
 8018a3c:	490f      	ldr	r1, [pc, #60]	@ (8018a7c <_ZN8touchgfx8LCD16bpp44enableTextureMapperL8_RGB565_NearestNeighborEv+0x60>)
 8018a3e:	4810      	ldr	r0, [pc, #64]	@ (8018a80 <_ZN8touchgfx8LCD16bpp44enableTextureMapperL8_RGB565_NearestNeighborEv+0x64>)
 8018a40:	f007 feb2 	bl	80207a8 <__aeabi_atexit>
 8018a44:	4c0f      	ldr	r4, [pc, #60]	@ (8018a84 <_ZN8touchgfx8LCD16bpp44enableTextureMapperL8_RGB565_NearestNeighborEv+0x68>)
 8018a46:	7823      	ldrb	r3, [r4, #0]
 8018a48:	f3bf 8f5b 	dmb	ish
 8018a4c:	07db      	lsls	r3, r3, #31
 8018a4e:	d40b      	bmi.n	8018a68 <_ZN8touchgfx8LCD16bpp44enableTextureMapperL8_RGB565_NearestNeighborEv+0x4c>
 8018a50:	4620      	mov	r0, r4
 8018a52:	f007 feb0 	bl	80207b6 <__cxa_guard_acquire>
 8018a56:	b138      	cbz	r0, 8018a68 <_ZN8touchgfx8LCD16bpp44enableTextureMapperL8_RGB565_NearestNeighborEv+0x4c>
 8018a58:	4620      	mov	r0, r4
 8018a5a:	f007 feb8 	bl	80207ce <__cxa_guard_release>
 8018a5e:	4a06      	ldr	r2, [pc, #24]	@ (8018a78 <_ZN8touchgfx8LCD16bpp44enableTextureMapperL8_RGB565_NearestNeighborEv+0x5c>)
 8018a60:	4909      	ldr	r1, [pc, #36]	@ (8018a88 <_ZN8touchgfx8LCD16bpp44enableTextureMapperL8_RGB565_NearestNeighborEv+0x6c>)
 8018a62:	480a      	ldr	r0, [pc, #40]	@ (8018a8c <_ZN8touchgfx8LCD16bpp44enableTextureMapperL8_RGB565_NearestNeighborEv+0x70>)
 8018a64:	f007 fea0 	bl	80207a8 <__aeabi_atexit>
 8018a68:	4b05      	ldr	r3, [pc, #20]	@ (8018a80 <_ZN8touchgfx8LCD16bpp44enableTextureMapperL8_RGB565_NearestNeighborEv+0x64>)
 8018a6a:	60eb      	str	r3, [r5, #12]
 8018a6c:	4b07      	ldr	r3, [pc, #28]	@ (8018a8c <_ZN8touchgfx8LCD16bpp44enableTextureMapperL8_RGB565_NearestNeighborEv+0x70>)
 8018a6e:	612b      	str	r3, [r5, #16]
 8018a70:	bd38      	pop	{r3, r4, r5, pc}
 8018a72:	bf00      	nop
 8018a74:	20002d10 	.word	0x20002d10
 8018a78:	20000000 	.word	0x20000000
 8018a7c:	08014b73 	.word	0x08014b73
 8018a80:	20000048 	.word	0x20000048
 8018a84:	20002d14 	.word	0x20002d14
 8018a88:	08014b71 	.word	0x08014b71
 8018a8c:	2000004c 	.word	0x2000004c

08018a90 <_ZN8touchgfx8LCD16bpp28enableTextureMapperL8_RGB565Ev>:
 8018a90:	b510      	push	{r4, lr}
 8018a92:	4604      	mov	r4, r0
 8018a94:	f7ff ff88 	bl	80189a8 <_ZN8touchgfx8LCD16bpp50enableTextureMapperL8_RGB565_BilinearInterpolationEv>
 8018a98:	4620      	mov	r0, r4
 8018a9a:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
 8018a9e:	f7ff bfbd 	b.w	8018a1c <_ZN8touchgfx8LCD16bpp44enableTextureMapperL8_RGB565_NearestNeighborEv>
	...

08018aa4 <_ZN8touchgfx8LCD16bpp50enableTextureMapperL8_RGB888_BilinearInterpolationEv>:
 8018aa4:	b538      	push	{r3, r4, r5, lr}
 8018aa6:	4c15      	ldr	r4, [pc, #84]	@ (8018afc <_ZN8touchgfx8LCD16bpp50enableTextureMapperL8_RGB888_BilinearInterpolationEv+0x58>)
 8018aa8:	7823      	ldrb	r3, [r4, #0]
 8018aaa:	f3bf 8f5b 	dmb	ish
 8018aae:	07da      	lsls	r2, r3, #31
 8018ab0:	4605      	mov	r5, r0
 8018ab2:	d40b      	bmi.n	8018acc <_ZN8touchgfx8LCD16bpp50enableTextureMapperL8_RGB888_BilinearInterpolationEv+0x28>
 8018ab4:	4620      	mov	r0, r4
 8018ab6:	f007 fe7e 	bl	80207b6 <__cxa_guard_acquire>
 8018aba:	b138      	cbz	r0, 8018acc <_ZN8touchgfx8LCD16bpp50enableTextureMapperL8_RGB888_BilinearInterpolationEv+0x28>
 8018abc:	4620      	mov	r0, r4
 8018abe:	f007 fe86 	bl	80207ce <__cxa_guard_release>
 8018ac2:	4a0f      	ldr	r2, [pc, #60]	@ (8018b00 <_ZN8touchgfx8LCD16bpp50enableTextureMapperL8_RGB888_BilinearInterpolationEv+0x5c>)
 8018ac4:	490f      	ldr	r1, [pc, #60]	@ (8018b04 <_ZN8touchgfx8LCD16bpp50enableTextureMapperL8_RGB888_BilinearInterpolationEv+0x60>)
 8018ac6:	4810      	ldr	r0, [pc, #64]	@ (8018b08 <_ZN8touchgfx8LCD16bpp50enableTextureMapperL8_RGB888_BilinearInterpolationEv+0x64>)
 8018ac8:	f007 fe6e 	bl	80207a8 <__aeabi_atexit>
 8018acc:	4c0f      	ldr	r4, [pc, #60]	@ (8018b0c <_ZN8touchgfx8LCD16bpp50enableTextureMapperL8_RGB888_BilinearInterpolationEv+0x68>)
 8018ace:	7823      	ldrb	r3, [r4, #0]
 8018ad0:	f3bf 8f5b 	dmb	ish
 8018ad4:	07db      	lsls	r3, r3, #31
 8018ad6:	d40b      	bmi.n	8018af0 <_ZN8touchgfx8LCD16bpp50enableTextureMapperL8_RGB888_BilinearInterpolationEv+0x4c>
 8018ad8:	4620      	mov	r0, r4
 8018ada:	f007 fe6c 	bl	80207b6 <__cxa_guard_acquire>
 8018ade:	b138      	cbz	r0, 8018af0 <_ZN8touchgfx8LCD16bpp50enableTextureMapperL8_RGB888_BilinearInterpolationEv+0x4c>
 8018ae0:	4620      	mov	r0, r4
 8018ae2:	f007 fe74 	bl	80207ce <__cxa_guard_release>
 8018ae6:	4a06      	ldr	r2, [pc, #24]	@ (8018b00 <_ZN8touchgfx8LCD16bpp50enableTextureMapperL8_RGB888_BilinearInterpolationEv+0x5c>)
 8018ae8:	4909      	ldr	r1, [pc, #36]	@ (8018b10 <_ZN8touchgfx8LCD16bpp50enableTextureMapperL8_RGB888_BilinearInterpolationEv+0x6c>)
 8018aea:	480a      	ldr	r0, [pc, #40]	@ (8018b14 <_ZN8touchgfx8LCD16bpp50enableTextureMapperL8_RGB888_BilinearInterpolationEv+0x70>)
 8018aec:	f007 fe5c 	bl	80207a8 <__aeabi_atexit>
 8018af0:	4b05      	ldr	r3, [pc, #20]	@ (8018b08 <_ZN8touchgfx8LCD16bpp50enableTextureMapperL8_RGB888_BilinearInterpolationEv+0x64>)
 8018af2:	626b      	str	r3, [r5, #36]	@ 0x24
 8018af4:	4b07      	ldr	r3, [pc, #28]	@ (8018b14 <_ZN8touchgfx8LCD16bpp50enableTextureMapperL8_RGB888_BilinearInterpolationEv+0x70>)
 8018af6:	62ab      	str	r3, [r5, #40]	@ 0x28
 8018af8:	bd38      	pop	{r3, r4, r5, pc}
 8018afa:	bf00      	nop
 8018afc:	20002d40 	.word	0x20002d40
 8018b00:	20000000 	.word	0x20000000
 8018b04:	08014b67 	.word	0x08014b67
 8018b08:	20000078 	.word	0x20000078
 8018b0c:	20002d44 	.word	0x20002d44
 8018b10:	08014b65 	.word	0x08014b65
 8018b14:	2000007c 	.word	0x2000007c

08018b18 <_ZN8touchgfx8LCD16bpp44enableTextureMapperL8_RGB888_NearestNeighborEv>:
 8018b18:	b538      	push	{r3, r4, r5, lr}
 8018b1a:	4c15      	ldr	r4, [pc, #84]	@ (8018b70 <_ZN8touchgfx8LCD16bpp44enableTextureMapperL8_RGB888_NearestNeighborEv+0x58>)
 8018b1c:	7823      	ldrb	r3, [r4, #0]
 8018b1e:	f3bf 8f5b 	dmb	ish
 8018b22:	07da      	lsls	r2, r3, #31
 8018b24:	4605      	mov	r5, r0
 8018b26:	d40b      	bmi.n	8018b40 <_ZN8touchgfx8LCD16bpp44enableTextureMapperL8_RGB888_NearestNeighborEv+0x28>
 8018b28:	4620      	mov	r0, r4
 8018b2a:	f007 fe44 	bl	80207b6 <__cxa_guard_acquire>
 8018b2e:	b138      	cbz	r0, 8018b40 <_ZN8touchgfx8LCD16bpp44enableTextureMapperL8_RGB888_NearestNeighborEv+0x28>
 8018b30:	4620      	mov	r0, r4
 8018b32:	f007 fe4c 	bl	80207ce <__cxa_guard_release>
 8018b36:	4a0f      	ldr	r2, [pc, #60]	@ (8018b74 <_ZN8touchgfx8LCD16bpp44enableTextureMapperL8_RGB888_NearestNeighborEv+0x5c>)
 8018b38:	490f      	ldr	r1, [pc, #60]	@ (8018b78 <_ZN8touchgfx8LCD16bpp44enableTextureMapperL8_RGB888_NearestNeighborEv+0x60>)
 8018b3a:	4810      	ldr	r0, [pc, #64]	@ (8018b7c <_ZN8touchgfx8LCD16bpp44enableTextureMapperL8_RGB888_NearestNeighborEv+0x64>)
 8018b3c:	f007 fe34 	bl	80207a8 <__aeabi_atexit>
 8018b40:	4c0f      	ldr	r4, [pc, #60]	@ (8018b80 <_ZN8touchgfx8LCD16bpp44enableTextureMapperL8_RGB888_NearestNeighborEv+0x68>)
 8018b42:	7823      	ldrb	r3, [r4, #0]
 8018b44:	f3bf 8f5b 	dmb	ish
 8018b48:	07db      	lsls	r3, r3, #31
 8018b4a:	d40b      	bmi.n	8018b64 <_ZN8touchgfx8LCD16bpp44enableTextureMapperL8_RGB888_NearestNeighborEv+0x4c>
 8018b4c:	4620      	mov	r0, r4
 8018b4e:	f007 fe32 	bl	80207b6 <__cxa_guard_acquire>
 8018b52:	b138      	cbz	r0, 8018b64 <_ZN8touchgfx8LCD16bpp44enableTextureMapperL8_RGB888_NearestNeighborEv+0x4c>
 8018b54:	4620      	mov	r0, r4
 8018b56:	f007 fe3a 	bl	80207ce <__cxa_guard_release>
 8018b5a:	4a06      	ldr	r2, [pc, #24]	@ (8018b74 <_ZN8touchgfx8LCD16bpp44enableTextureMapperL8_RGB888_NearestNeighborEv+0x5c>)
 8018b5c:	4909      	ldr	r1, [pc, #36]	@ (8018b84 <_ZN8touchgfx8LCD16bpp44enableTextureMapperL8_RGB888_NearestNeighborEv+0x6c>)
 8018b5e:	480a      	ldr	r0, [pc, #40]	@ (8018b88 <_ZN8touchgfx8LCD16bpp44enableTextureMapperL8_RGB888_NearestNeighborEv+0x70>)
 8018b60:	f007 fe22 	bl	80207a8 <__aeabi_atexit>
 8018b64:	4b05      	ldr	r3, [pc, #20]	@ (8018b7c <_ZN8touchgfx8LCD16bpp44enableTextureMapperL8_RGB888_NearestNeighborEv+0x64>)
 8018b66:	61eb      	str	r3, [r5, #28]
 8018b68:	4b07      	ldr	r3, [pc, #28]	@ (8018b88 <_ZN8touchgfx8LCD16bpp44enableTextureMapperL8_RGB888_NearestNeighborEv+0x70>)
 8018b6a:	622b      	str	r3, [r5, #32]
 8018b6c:	bd38      	pop	{r3, r4, r5, pc}
 8018b6e:	bf00      	nop
 8018b70:	20002d18 	.word	0x20002d18
 8018b74:	20000000 	.word	0x20000000
 8018b78:	08014b6b 	.word	0x08014b6b
 8018b7c:	20000050 	.word	0x20000050
 8018b80:	20002d1c 	.word	0x20002d1c
 8018b84:	08014b69 	.word	0x08014b69
 8018b88:	20000054 	.word	0x20000054

08018b8c <_ZN8touchgfx8LCD16bpp28enableTextureMapperL8_RGB888Ev>:
 8018b8c:	b510      	push	{r4, lr}
 8018b8e:	4604      	mov	r4, r0
 8018b90:	f7ff ff88 	bl	8018aa4 <_ZN8touchgfx8LCD16bpp50enableTextureMapperL8_RGB888_BilinearInterpolationEv>
 8018b94:	4620      	mov	r0, r4
 8018b96:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
 8018b9a:	f7ff bfbd 	b.w	8018b18 <_ZN8touchgfx8LCD16bpp44enableTextureMapperL8_RGB888_NearestNeighborEv>
	...

08018ba0 <_ZN8touchgfx8LCD16bpp52enableTextureMapperL8_ARGB8888_BilinearInterpolationEv>:
 8018ba0:	b538      	push	{r3, r4, r5, lr}
 8018ba2:	4c15      	ldr	r4, [pc, #84]	@ (8018bf8 <_ZN8touchgfx8LCD16bpp52enableTextureMapperL8_ARGB8888_BilinearInterpolationEv+0x58>)
 8018ba4:	7823      	ldrb	r3, [r4, #0]
 8018ba6:	f3bf 8f5b 	dmb	ish
 8018baa:	07da      	lsls	r2, r3, #31
 8018bac:	4605      	mov	r5, r0
 8018bae:	d40b      	bmi.n	8018bc8 <_ZN8touchgfx8LCD16bpp52enableTextureMapperL8_ARGB8888_BilinearInterpolationEv+0x28>
 8018bb0:	4620      	mov	r0, r4
 8018bb2:	f007 fe00 	bl	80207b6 <__cxa_guard_acquire>
 8018bb6:	b138      	cbz	r0, 8018bc8 <_ZN8touchgfx8LCD16bpp52enableTextureMapperL8_ARGB8888_BilinearInterpolationEv+0x28>
 8018bb8:	4620      	mov	r0, r4
 8018bba:	f007 fe08 	bl	80207ce <__cxa_guard_release>
 8018bbe:	4a0f      	ldr	r2, [pc, #60]	@ (8018bfc <_ZN8touchgfx8LCD16bpp52enableTextureMapperL8_ARGB8888_BilinearInterpolationEv+0x5c>)
 8018bc0:	490f      	ldr	r1, [pc, #60]	@ (8018c00 <_ZN8touchgfx8LCD16bpp52enableTextureMapperL8_ARGB8888_BilinearInterpolationEv+0x60>)
 8018bc2:	4810      	ldr	r0, [pc, #64]	@ (8018c04 <_ZN8touchgfx8LCD16bpp52enableTextureMapperL8_ARGB8888_BilinearInterpolationEv+0x64>)
 8018bc4:	f007 fdf0 	bl	80207a8 <__aeabi_atexit>
 8018bc8:	4c0f      	ldr	r4, [pc, #60]	@ (8018c08 <_ZN8touchgfx8LCD16bpp52enableTextureMapperL8_ARGB8888_BilinearInterpolationEv+0x68>)
 8018bca:	7823      	ldrb	r3, [r4, #0]
 8018bcc:	f3bf 8f5b 	dmb	ish
 8018bd0:	07db      	lsls	r3, r3, #31
 8018bd2:	d40b      	bmi.n	8018bec <_ZN8touchgfx8LCD16bpp52enableTextureMapperL8_ARGB8888_BilinearInterpolationEv+0x4c>
 8018bd4:	4620      	mov	r0, r4
 8018bd6:	f007 fdee 	bl	80207b6 <__cxa_guard_acquire>
 8018bda:	b138      	cbz	r0, 8018bec <_ZN8touchgfx8LCD16bpp52enableTextureMapperL8_ARGB8888_BilinearInterpolationEv+0x4c>
 8018bdc:	4620      	mov	r0, r4
 8018bde:	f007 fdf6 	bl	80207ce <__cxa_guard_release>
 8018be2:	4a06      	ldr	r2, [pc, #24]	@ (8018bfc <_ZN8touchgfx8LCD16bpp52enableTextureMapperL8_ARGB8888_BilinearInterpolationEv+0x5c>)
 8018be4:	4909      	ldr	r1, [pc, #36]	@ (8018c0c <_ZN8touchgfx8LCD16bpp52enableTextureMapperL8_ARGB8888_BilinearInterpolationEv+0x6c>)
 8018be6:	480a      	ldr	r0, [pc, #40]	@ (8018c10 <_ZN8touchgfx8LCD16bpp52enableTextureMapperL8_ARGB8888_BilinearInterpolationEv+0x70>)
 8018be8:	f007 fdde 	bl	80207a8 <__aeabi_atexit>
 8018bec:	4b05      	ldr	r3, [pc, #20]	@ (8018c04 <_ZN8touchgfx8LCD16bpp52enableTextureMapperL8_ARGB8888_BilinearInterpolationEv+0x64>)
 8018bee:	636b      	str	r3, [r5, #52]	@ 0x34
 8018bf0:	4b07      	ldr	r3, [pc, #28]	@ (8018c10 <_ZN8touchgfx8LCD16bpp52enableTextureMapperL8_ARGB8888_BilinearInterpolationEv+0x70>)
 8018bf2:	63ab      	str	r3, [r5, #56]	@ 0x38
 8018bf4:	bd38      	pop	{r3, r4, r5, pc}
 8018bf6:	bf00      	nop
 8018bf8:	20002d50 	.word	0x20002d50
 8018bfc:	20000000 	.word	0x20000000
 8018c00:	08014b5f 	.word	0x08014b5f
 8018c04:	20000088 	.word	0x20000088
 8018c08:	20002d54 	.word	0x20002d54
 8018c0c:	08014b5d 	.word	0x08014b5d
 8018c10:	2000008c 	.word	0x2000008c

08018c14 <_ZN8touchgfx8LCD16bpp46enableTextureMapperL8_ARGB8888_NearestNeighborEv>:
 8018c14:	b538      	push	{r3, r4, r5, lr}
 8018c16:	4c15      	ldr	r4, [pc, #84]	@ (8018c6c <_ZN8touchgfx8LCD16bpp46enableTextureMapperL8_ARGB8888_NearestNeighborEv+0x58>)
 8018c18:	7823      	ldrb	r3, [r4, #0]
 8018c1a:	f3bf 8f5b 	dmb	ish
 8018c1e:	07da      	lsls	r2, r3, #31
 8018c20:	4605      	mov	r5, r0
 8018c22:	d40b      	bmi.n	8018c3c <_ZN8touchgfx8LCD16bpp46enableTextureMapperL8_ARGB8888_NearestNeighborEv+0x28>
 8018c24:	4620      	mov	r0, r4
 8018c26:	f007 fdc6 	bl	80207b6 <__cxa_guard_acquire>
 8018c2a:	b138      	cbz	r0, 8018c3c <_ZN8touchgfx8LCD16bpp46enableTextureMapperL8_ARGB8888_NearestNeighborEv+0x28>
 8018c2c:	4620      	mov	r0, r4
 8018c2e:	f007 fdce 	bl	80207ce <__cxa_guard_release>
 8018c32:	4a0f      	ldr	r2, [pc, #60]	@ (8018c70 <_ZN8touchgfx8LCD16bpp46enableTextureMapperL8_ARGB8888_NearestNeighborEv+0x5c>)
 8018c34:	490f      	ldr	r1, [pc, #60]	@ (8018c74 <_ZN8touchgfx8LCD16bpp46enableTextureMapperL8_ARGB8888_NearestNeighborEv+0x60>)
 8018c36:	4810      	ldr	r0, [pc, #64]	@ (8018c78 <_ZN8touchgfx8LCD16bpp46enableTextureMapperL8_ARGB8888_NearestNeighborEv+0x64>)
 8018c38:	f007 fdb6 	bl	80207a8 <__aeabi_atexit>
 8018c3c:	4c0f      	ldr	r4, [pc, #60]	@ (8018c7c <_ZN8touchgfx8LCD16bpp46enableTextureMapperL8_ARGB8888_NearestNeighborEv+0x68>)
 8018c3e:	7823      	ldrb	r3, [r4, #0]
 8018c40:	f3bf 8f5b 	dmb	ish
 8018c44:	07db      	lsls	r3, r3, #31
 8018c46:	d40b      	bmi.n	8018c60 <_ZN8touchgfx8LCD16bpp46enableTextureMapperL8_ARGB8888_NearestNeighborEv+0x4c>
 8018c48:	4620      	mov	r0, r4
 8018c4a:	f007 fdb4 	bl	80207b6 <__cxa_guard_acquire>
 8018c4e:	b138      	cbz	r0, 8018c60 <_ZN8touchgfx8LCD16bpp46enableTextureMapperL8_ARGB8888_NearestNeighborEv+0x4c>
 8018c50:	4620      	mov	r0, r4
 8018c52:	f007 fdbc 	bl	80207ce <__cxa_guard_release>
 8018c56:	4a06      	ldr	r2, [pc, #24]	@ (8018c70 <_ZN8touchgfx8LCD16bpp46enableTextureMapperL8_ARGB8888_NearestNeighborEv+0x5c>)
 8018c58:	4909      	ldr	r1, [pc, #36]	@ (8018c80 <_ZN8touchgfx8LCD16bpp46enableTextureMapperL8_ARGB8888_NearestNeighborEv+0x6c>)
 8018c5a:	480a      	ldr	r0, [pc, #40]	@ (8018c84 <_ZN8touchgfx8LCD16bpp46enableTextureMapperL8_ARGB8888_NearestNeighborEv+0x70>)
 8018c5c:	f007 fda4 	bl	80207a8 <__aeabi_atexit>
 8018c60:	4b05      	ldr	r3, [pc, #20]	@ (8018c78 <_ZN8touchgfx8LCD16bpp46enableTextureMapperL8_ARGB8888_NearestNeighborEv+0x64>)
 8018c62:	62eb      	str	r3, [r5, #44]	@ 0x2c
 8018c64:	4b07      	ldr	r3, [pc, #28]	@ (8018c84 <_ZN8touchgfx8LCD16bpp46enableTextureMapperL8_ARGB8888_NearestNeighborEv+0x70>)
 8018c66:	632b      	str	r3, [r5, #48]	@ 0x30
 8018c68:	bd38      	pop	{r3, r4, r5, pc}
 8018c6a:	bf00      	nop
 8018c6c:	20002d20 	.word	0x20002d20
 8018c70:	20000000 	.word	0x20000000
 8018c74:	08014b63 	.word	0x08014b63
 8018c78:	20000058 	.word	0x20000058
 8018c7c:	20002d24 	.word	0x20002d24
 8018c80:	08014b61 	.word	0x08014b61
 8018c84:	2000005c 	.word	0x2000005c

08018c88 <_ZN8touchgfx8LCD16bpp30enableTextureMapperL8_ARGB8888Ev>:
 8018c88:	b510      	push	{r4, lr}
 8018c8a:	4604      	mov	r4, r0
 8018c8c:	f7ff ff88 	bl	8018ba0 <_ZN8touchgfx8LCD16bpp52enableTextureMapperL8_ARGB8888_BilinearInterpolationEv>
 8018c90:	4620      	mov	r0, r4
 8018c92:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
 8018c96:	f7ff bfbd 	b.w	8018c14 <_ZN8touchgfx8LCD16bpp46enableTextureMapperL8_ARGB8888_NearestNeighborEv>
	...

08018c9c <_ZN8touchgfx8LCD16bpp54enableTextureMapperRGB565_Opaque_BilinearInterpolationEv>:
 8018c9c:	b538      	push	{r3, r4, r5, lr}
 8018c9e:	4c15      	ldr	r4, [pc, #84]	@ (8018cf4 <_ZN8touchgfx8LCD16bpp54enableTextureMapperRGB565_Opaque_BilinearInterpolationEv+0x58>)
 8018ca0:	7823      	ldrb	r3, [r4, #0]
 8018ca2:	f3bf 8f5b 	dmb	ish
 8018ca6:	07da      	lsls	r2, r3, #31
 8018ca8:	4605      	mov	r5, r0
 8018caa:	d40b      	bmi.n	8018cc4 <_ZN8touchgfx8LCD16bpp54enableTextureMapperRGB565_Opaque_BilinearInterpolationEv+0x28>
 8018cac:	4620      	mov	r0, r4
 8018cae:	f007 fd82 	bl	80207b6 <__cxa_guard_acquire>
 8018cb2:	b138      	cbz	r0, 8018cc4 <_ZN8touchgfx8LCD16bpp54enableTextureMapperRGB565_Opaque_BilinearInterpolationEv+0x28>
 8018cb4:	4620      	mov	r0, r4
 8018cb6:	f007 fd8a 	bl	80207ce <__cxa_guard_release>
 8018cba:	4a0f      	ldr	r2, [pc, #60]	@ (8018cf8 <_ZN8touchgfx8LCD16bpp54enableTextureMapperRGB565_Opaque_BilinearInterpolationEv+0x5c>)
 8018cbc:	490f      	ldr	r1, [pc, #60]	@ (8018cfc <_ZN8touchgfx8LCD16bpp54enableTextureMapperRGB565_Opaque_BilinearInterpolationEv+0x60>)
 8018cbe:	4810      	ldr	r0, [pc, #64]	@ (8018d00 <_ZN8touchgfx8LCD16bpp54enableTextureMapperRGB565_Opaque_BilinearInterpolationEv+0x64>)
 8018cc0:	f007 fd72 	bl	80207a8 <__aeabi_atexit>
 8018cc4:	4c0f      	ldr	r4, [pc, #60]	@ (8018d04 <_ZN8touchgfx8LCD16bpp54enableTextureMapperRGB565_Opaque_BilinearInterpolationEv+0x68>)
 8018cc6:	7823      	ldrb	r3, [r4, #0]
 8018cc8:	f3bf 8f5b 	dmb	ish
 8018ccc:	07db      	lsls	r3, r3, #31
 8018cce:	d40b      	bmi.n	8018ce8 <_ZN8touchgfx8LCD16bpp54enableTextureMapperRGB565_Opaque_BilinearInterpolationEv+0x4c>
 8018cd0:	4620      	mov	r0, r4
 8018cd2:	f007 fd70 	bl	80207b6 <__cxa_guard_acquire>
 8018cd6:	b138      	cbz	r0, 8018ce8 <_ZN8touchgfx8LCD16bpp54enableTextureMapperRGB565_Opaque_BilinearInterpolationEv+0x4c>
 8018cd8:	4620      	mov	r0, r4
 8018cda:	f007 fd78 	bl	80207ce <__cxa_guard_release>
 8018cde:	4a06      	ldr	r2, [pc, #24]	@ (8018cf8 <_ZN8touchgfx8LCD16bpp54enableTextureMapperRGB565_Opaque_BilinearInterpolationEv+0x5c>)
 8018ce0:	4909      	ldr	r1, [pc, #36]	@ (8018d08 <_ZN8touchgfx8LCD16bpp54enableTextureMapperRGB565_Opaque_BilinearInterpolationEv+0x6c>)
 8018ce2:	480a      	ldr	r0, [pc, #40]	@ (8018d0c <_ZN8touchgfx8LCD16bpp54enableTextureMapperRGB565_Opaque_BilinearInterpolationEv+0x70>)
 8018ce4:	f007 fd60 	bl	80207a8 <__aeabi_atexit>
 8018ce8:	4b05      	ldr	r3, [pc, #20]	@ (8018d00 <_ZN8touchgfx8LCD16bpp54enableTextureMapperRGB565_Opaque_BilinearInterpolationEv+0x64>)
 8018cea:	656b      	str	r3, [r5, #84]	@ 0x54
 8018cec:	4b07      	ldr	r3, [pc, #28]	@ (8018d0c <_ZN8touchgfx8LCD16bpp54enableTextureMapperRGB565_Opaque_BilinearInterpolationEv+0x70>)
 8018cee:	65ab      	str	r3, [r5, #88]	@ 0x58
 8018cf0:	bd38      	pop	{r3, r4, r5, pc}
 8018cf2:	bf00      	nop
 8018cf4:	20002d58 	.word	0x20002d58
 8018cf8:	20000000 	.word	0x20000000
 8018cfc:	08014b4f 	.word	0x08014b4f
 8018d00:	20000090 	.word	0x20000090
 8018d04:	20002d5c 	.word	0x20002d5c
 8018d08:	08014b4d 	.word	0x08014b4d
 8018d0c:	20000094 	.word	0x20000094

08018d10 <_ZN8touchgfx8LCD16bpp57enableTextureMapperRGB565_NonOpaque_BilinearInterpolationEv>:
 8018d10:	b538      	push	{r3, r4, r5, lr}
 8018d12:	4c15      	ldr	r4, [pc, #84]	@ (8018d68 <_ZN8touchgfx8LCD16bpp57enableTextureMapperRGB565_NonOpaque_BilinearInterpolationEv+0x58>)
 8018d14:	7823      	ldrb	r3, [r4, #0]
 8018d16:	f3bf 8f5b 	dmb	ish
 8018d1a:	07da      	lsls	r2, r3, #31
 8018d1c:	4605      	mov	r5, r0
 8018d1e:	d40b      	bmi.n	8018d38 <_ZN8touchgfx8LCD16bpp57enableTextureMapperRGB565_NonOpaque_BilinearInterpolationEv+0x28>
 8018d20:	4620      	mov	r0, r4
 8018d22:	f007 fd48 	bl	80207b6 <__cxa_guard_acquire>
 8018d26:	b138      	cbz	r0, 8018d38 <_ZN8touchgfx8LCD16bpp57enableTextureMapperRGB565_NonOpaque_BilinearInterpolationEv+0x28>
 8018d28:	4620      	mov	r0, r4
 8018d2a:	f007 fd50 	bl	80207ce <__cxa_guard_release>
 8018d2e:	4a0f      	ldr	r2, [pc, #60]	@ (8018d6c <_ZN8touchgfx8LCD16bpp57enableTextureMapperRGB565_NonOpaque_BilinearInterpolationEv+0x5c>)
 8018d30:	490f      	ldr	r1, [pc, #60]	@ (8018d70 <_ZN8touchgfx8LCD16bpp57enableTextureMapperRGB565_NonOpaque_BilinearInterpolationEv+0x60>)
 8018d32:	4810      	ldr	r0, [pc, #64]	@ (8018d74 <_ZN8touchgfx8LCD16bpp57enableTextureMapperRGB565_NonOpaque_BilinearInterpolationEv+0x64>)
 8018d34:	f007 fd38 	bl	80207a8 <__aeabi_atexit>
 8018d38:	4c0f      	ldr	r4, [pc, #60]	@ (8018d78 <_ZN8touchgfx8LCD16bpp57enableTextureMapperRGB565_NonOpaque_BilinearInterpolationEv+0x68>)
 8018d3a:	7823      	ldrb	r3, [r4, #0]
 8018d3c:	f3bf 8f5b 	dmb	ish
 8018d40:	07db      	lsls	r3, r3, #31
 8018d42:	d40b      	bmi.n	8018d5c <_ZN8touchgfx8LCD16bpp57enableTextureMapperRGB565_NonOpaque_BilinearInterpolationEv+0x4c>
 8018d44:	4620      	mov	r0, r4
 8018d46:	f007 fd36 	bl	80207b6 <__cxa_guard_acquire>
 8018d4a:	b138      	cbz	r0, 8018d5c <_ZN8touchgfx8LCD16bpp57enableTextureMapperRGB565_NonOpaque_BilinearInterpolationEv+0x4c>
 8018d4c:	4620      	mov	r0, r4
 8018d4e:	f007 fd3e 	bl	80207ce <__cxa_guard_release>
 8018d52:	4a06      	ldr	r2, [pc, #24]	@ (8018d6c <_ZN8touchgfx8LCD16bpp57enableTextureMapperRGB565_NonOpaque_BilinearInterpolationEv+0x5c>)
 8018d54:	4909      	ldr	r1, [pc, #36]	@ (8018d7c <_ZN8touchgfx8LCD16bpp57enableTextureMapperRGB565_NonOpaque_BilinearInterpolationEv+0x6c>)
 8018d56:	480a      	ldr	r0, [pc, #40]	@ (8018d80 <_ZN8touchgfx8LCD16bpp57enableTextureMapperRGB565_NonOpaque_BilinearInterpolationEv+0x70>)
 8018d58:	f007 fd26 	bl	80207a8 <__aeabi_atexit>
 8018d5c:	4b05      	ldr	r3, [pc, #20]	@ (8018d74 <_ZN8touchgfx8LCD16bpp57enableTextureMapperRGB565_NonOpaque_BilinearInterpolationEv+0x64>)
 8018d5e:	64eb      	str	r3, [r5, #76]	@ 0x4c
 8018d60:	4b07      	ldr	r3, [pc, #28]	@ (8018d80 <_ZN8touchgfx8LCD16bpp57enableTextureMapperRGB565_NonOpaque_BilinearInterpolationEv+0x70>)
 8018d62:	652b      	str	r3, [r5, #80]	@ 0x50
 8018d64:	bd38      	pop	{r3, r4, r5, pc}
 8018d66:	bf00      	nop
 8018d68:	20002d60 	.word	0x20002d60
 8018d6c:	20000000 	.word	0x20000000
 8018d70:	08014b53 	.word	0x08014b53
 8018d74:	20000098 	.word	0x20000098
 8018d78:	20002d64 	.word	0x20002d64
 8018d7c:	08014b51 	.word	0x08014b51
 8018d80:	2000009c 	.word	0x2000009c

08018d84 <_ZN8touchgfx8LCD16bpp48enableTextureMapperRGB565_Opaque_NearestNeighborEv>:
 8018d84:	b538      	push	{r3, r4, r5, lr}
 8018d86:	4c15      	ldr	r4, [pc, #84]	@ (8018ddc <_ZN8touchgfx8LCD16bpp48enableTextureMapperRGB565_Opaque_NearestNeighborEv+0x58>)
 8018d88:	7823      	ldrb	r3, [r4, #0]
 8018d8a:	f3bf 8f5b 	dmb	ish
 8018d8e:	07da      	lsls	r2, r3, #31
 8018d90:	4605      	mov	r5, r0
 8018d92:	d40b      	bmi.n	8018dac <_ZN8touchgfx8LCD16bpp48enableTextureMapperRGB565_Opaque_NearestNeighborEv+0x28>
 8018d94:	4620      	mov	r0, r4
 8018d96:	f007 fd0e 	bl	80207b6 <__cxa_guard_acquire>
 8018d9a:	b138      	cbz	r0, 8018dac <_ZN8touchgfx8LCD16bpp48enableTextureMapperRGB565_Opaque_NearestNeighborEv+0x28>
 8018d9c:	4620      	mov	r0, r4
 8018d9e:	f007 fd16 	bl	80207ce <__cxa_guard_release>
 8018da2:	4a0f      	ldr	r2, [pc, #60]	@ (8018de0 <_ZN8touchgfx8LCD16bpp48enableTextureMapperRGB565_Opaque_NearestNeighborEv+0x5c>)
 8018da4:	490f      	ldr	r1, [pc, #60]	@ (8018de4 <_ZN8touchgfx8LCD16bpp48enableTextureMapperRGB565_Opaque_NearestNeighborEv+0x60>)
 8018da6:	4810      	ldr	r0, [pc, #64]	@ (8018de8 <_ZN8touchgfx8LCD16bpp48enableTextureMapperRGB565_Opaque_NearestNeighborEv+0x64>)
 8018da8:	f007 fcfe 	bl	80207a8 <__aeabi_atexit>
 8018dac:	4c0f      	ldr	r4, [pc, #60]	@ (8018dec <_ZN8touchgfx8LCD16bpp48enableTextureMapperRGB565_Opaque_NearestNeighborEv+0x68>)
 8018dae:	7823      	ldrb	r3, [r4, #0]
 8018db0:	f3bf 8f5b 	dmb	ish
 8018db4:	07db      	lsls	r3, r3, #31
 8018db6:	d40b      	bmi.n	8018dd0 <_ZN8touchgfx8LCD16bpp48enableTextureMapperRGB565_Opaque_NearestNeighborEv+0x4c>
 8018db8:	4620      	mov	r0, r4
 8018dba:	f007 fcfc 	bl	80207b6 <__cxa_guard_acquire>
 8018dbe:	b138      	cbz	r0, 8018dd0 <_ZN8touchgfx8LCD16bpp48enableTextureMapperRGB565_Opaque_NearestNeighborEv+0x4c>
 8018dc0:	4620      	mov	r0, r4
 8018dc2:	f007 fd04 	bl	80207ce <__cxa_guard_release>
 8018dc6:	4a06      	ldr	r2, [pc, #24]	@ (8018de0 <_ZN8touchgfx8LCD16bpp48enableTextureMapperRGB565_Opaque_NearestNeighborEv+0x5c>)
 8018dc8:	4909      	ldr	r1, [pc, #36]	@ (8018df0 <_ZN8touchgfx8LCD16bpp48enableTextureMapperRGB565_Opaque_NearestNeighborEv+0x6c>)
 8018dca:	480a      	ldr	r0, [pc, #40]	@ (8018df4 <_ZN8touchgfx8LCD16bpp48enableTextureMapperRGB565_Opaque_NearestNeighborEv+0x70>)
 8018dcc:	f007 fcec 	bl	80207a8 <__aeabi_atexit>
 8018dd0:	4b05      	ldr	r3, [pc, #20]	@ (8018de8 <_ZN8touchgfx8LCD16bpp48enableTextureMapperRGB565_Opaque_NearestNeighborEv+0x64>)
 8018dd2:	646b      	str	r3, [r5, #68]	@ 0x44
 8018dd4:	4b07      	ldr	r3, [pc, #28]	@ (8018df4 <_ZN8touchgfx8LCD16bpp48enableTextureMapperRGB565_Opaque_NearestNeighborEv+0x70>)
 8018dd6:	64ab      	str	r3, [r5, #72]	@ 0x48
 8018dd8:	bd38      	pop	{r3, r4, r5, pc}
 8018dda:	bf00      	nop
 8018ddc:	20002d28 	.word	0x20002d28
 8018de0:	20000000 	.word	0x20000000
 8018de4:	08014b57 	.word	0x08014b57
 8018de8:	20000060 	.word	0x20000060
 8018dec:	20002d2c 	.word	0x20002d2c
 8018df0:	08014b55 	.word	0x08014b55
 8018df4:	20000064 	.word	0x20000064

08018df8 <_ZN8touchgfx8LCD16bpp51enableTextureMapperRGB565_NonOpaque_NearestNeighborEv>:
 8018df8:	b538      	push	{r3, r4, r5, lr}
 8018dfa:	4c15      	ldr	r4, [pc, #84]	@ (8018e50 <_ZN8touchgfx8LCD16bpp51enableTextureMapperRGB565_NonOpaque_NearestNeighborEv+0x58>)
 8018dfc:	7823      	ldrb	r3, [r4, #0]
 8018dfe:	f3bf 8f5b 	dmb	ish
 8018e02:	07da      	lsls	r2, r3, #31
 8018e04:	4605      	mov	r5, r0
 8018e06:	d40b      	bmi.n	8018e20 <_ZN8touchgfx8LCD16bpp51enableTextureMapperRGB565_NonOpaque_NearestNeighborEv+0x28>
 8018e08:	4620      	mov	r0, r4
 8018e0a:	f007 fcd4 	bl	80207b6 <__cxa_guard_acquire>
 8018e0e:	b138      	cbz	r0, 8018e20 <_ZN8touchgfx8LCD16bpp51enableTextureMapperRGB565_NonOpaque_NearestNeighborEv+0x28>
 8018e10:	4620      	mov	r0, r4
 8018e12:	f007 fcdc 	bl	80207ce <__cxa_guard_release>
 8018e16:	4a0f      	ldr	r2, [pc, #60]	@ (8018e54 <_ZN8touchgfx8LCD16bpp51enableTextureMapperRGB565_NonOpaque_NearestNeighborEv+0x5c>)
 8018e18:	490f      	ldr	r1, [pc, #60]	@ (8018e58 <_ZN8touchgfx8LCD16bpp51enableTextureMapperRGB565_NonOpaque_NearestNeighborEv+0x60>)
 8018e1a:	4810      	ldr	r0, [pc, #64]	@ (8018e5c <_ZN8touchgfx8LCD16bpp51enableTextureMapperRGB565_NonOpaque_NearestNeighborEv+0x64>)
 8018e1c:	f007 fcc4 	bl	80207a8 <__aeabi_atexit>
 8018e20:	4c0f      	ldr	r4, [pc, #60]	@ (8018e60 <_ZN8touchgfx8LCD16bpp51enableTextureMapperRGB565_NonOpaque_NearestNeighborEv+0x68>)
 8018e22:	7823      	ldrb	r3, [r4, #0]
 8018e24:	f3bf 8f5b 	dmb	ish
 8018e28:	07db      	lsls	r3, r3, #31
 8018e2a:	d40b      	bmi.n	8018e44 <_ZN8touchgfx8LCD16bpp51enableTextureMapperRGB565_NonOpaque_NearestNeighborEv+0x4c>
 8018e2c:	4620      	mov	r0, r4
 8018e2e:	f007 fcc2 	bl	80207b6 <__cxa_guard_acquire>
 8018e32:	b138      	cbz	r0, 8018e44 <_ZN8touchgfx8LCD16bpp51enableTextureMapperRGB565_NonOpaque_NearestNeighborEv+0x4c>
 8018e34:	4620      	mov	r0, r4
 8018e36:	f007 fcca 	bl	80207ce <__cxa_guard_release>
 8018e3a:	4a06      	ldr	r2, [pc, #24]	@ (8018e54 <_ZN8touchgfx8LCD16bpp51enableTextureMapperRGB565_NonOpaque_NearestNeighborEv+0x5c>)
 8018e3c:	4909      	ldr	r1, [pc, #36]	@ (8018e64 <_ZN8touchgfx8LCD16bpp51enableTextureMapperRGB565_NonOpaque_NearestNeighborEv+0x6c>)
 8018e3e:	480a      	ldr	r0, [pc, #40]	@ (8018e68 <_ZN8touchgfx8LCD16bpp51enableTextureMapperRGB565_NonOpaque_NearestNeighborEv+0x70>)
 8018e40:	f007 fcb2 	bl	80207a8 <__aeabi_atexit>
 8018e44:	4b05      	ldr	r3, [pc, #20]	@ (8018e5c <_ZN8touchgfx8LCD16bpp51enableTextureMapperRGB565_NonOpaque_NearestNeighborEv+0x64>)
 8018e46:	63eb      	str	r3, [r5, #60]	@ 0x3c
 8018e48:	4b07      	ldr	r3, [pc, #28]	@ (8018e68 <_ZN8touchgfx8LCD16bpp51enableTextureMapperRGB565_NonOpaque_NearestNeighborEv+0x70>)
 8018e4a:	642b      	str	r3, [r5, #64]	@ 0x40
 8018e4c:	bd38      	pop	{r3, r4, r5, pc}
 8018e4e:	bf00      	nop
 8018e50:	20002d48 	.word	0x20002d48
 8018e54:	20000000 	.word	0x20000000
 8018e58:	08014b5b 	.word	0x08014b5b
 8018e5c:	20000080 	.word	0x20000080
 8018e60:	20002d4c 	.word	0x20002d4c
 8018e64:	08014b59 	.word	0x08014b59
 8018e68:	20000084 	.word	0x20000084

08018e6c <_ZN8touchgfx8LCD16bpp25enableTextureMapperRGB565Ev>:
 8018e6c:	b510      	push	{r4, lr}
 8018e6e:	4604      	mov	r4, r0
 8018e70:	f7ff ff14 	bl	8018c9c <_ZN8touchgfx8LCD16bpp54enableTextureMapperRGB565_Opaque_BilinearInterpolationEv>
 8018e74:	4620      	mov	r0, r4
 8018e76:	f7ff ff85 	bl	8018d84 <_ZN8touchgfx8LCD16bpp48enableTextureMapperRGB565_Opaque_NearestNeighborEv>
 8018e7a:	4620      	mov	r0, r4
 8018e7c:	f7ff ff48 	bl	8018d10 <_ZN8touchgfx8LCD16bpp57enableTextureMapperRGB565_NonOpaque_BilinearInterpolationEv>
 8018e80:	4620      	mov	r0, r4
 8018e82:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
 8018e86:	f7ff bfb7 	b.w	8018df8 <_ZN8touchgfx8LCD16bpp51enableTextureMapperRGB565_NonOpaque_NearestNeighborEv>
	...

08018e8c <_ZN8touchgfx8LCD16bpp49enableTextureMapperARGB8888_BilinearInterpolationEv>:
 8018e8c:	b538      	push	{r3, r4, r5, lr}
 8018e8e:	4c15      	ldr	r4, [pc, #84]	@ (8018ee4 <_ZN8touchgfx8LCD16bpp49enableTextureMapperARGB8888_BilinearInterpolationEv+0x58>)
 8018e90:	7823      	ldrb	r3, [r4, #0]
 8018e92:	f3bf 8f5b 	dmb	ish
 8018e96:	07da      	lsls	r2, r3, #31
 8018e98:	4605      	mov	r5, r0
 8018e9a:	d40b      	bmi.n	8018eb4 <_ZN8touchgfx8LCD16bpp49enableTextureMapperARGB8888_BilinearInterpolationEv+0x28>
 8018e9c:	4620      	mov	r0, r4
 8018e9e:	f007 fc8a 	bl	80207b6 <__cxa_guard_acquire>
 8018ea2:	b138      	cbz	r0, 8018eb4 <_ZN8touchgfx8LCD16bpp49enableTextureMapperARGB8888_BilinearInterpolationEv+0x28>
 8018ea4:	4620      	mov	r0, r4
 8018ea6:	f007 fc92 	bl	80207ce <__cxa_guard_release>
 8018eaa:	4a0f      	ldr	r2, [pc, #60]	@ (8018ee8 <_ZN8touchgfx8LCD16bpp49enableTextureMapperARGB8888_BilinearInterpolationEv+0x5c>)
 8018eac:	490f      	ldr	r1, [pc, #60]	@ (8018eec <_ZN8touchgfx8LCD16bpp49enableTextureMapperARGB8888_BilinearInterpolationEv+0x60>)
 8018eae:	4810      	ldr	r0, [pc, #64]	@ (8018ef0 <_ZN8touchgfx8LCD16bpp49enableTextureMapperARGB8888_BilinearInterpolationEv+0x64>)
 8018eb0:	f007 fc7a 	bl	80207a8 <__aeabi_atexit>
 8018eb4:	4c0f      	ldr	r4, [pc, #60]	@ (8018ef4 <_ZN8touchgfx8LCD16bpp49enableTextureMapperARGB8888_BilinearInterpolationEv+0x68>)
 8018eb6:	7823      	ldrb	r3, [r4, #0]
 8018eb8:	f3bf 8f5b 	dmb	ish
 8018ebc:	07db      	lsls	r3, r3, #31
 8018ebe:	d40b      	bmi.n	8018ed8 <_ZN8touchgfx8LCD16bpp49enableTextureMapperARGB8888_BilinearInterpolationEv+0x4c>
 8018ec0:	4620      	mov	r0, r4
 8018ec2:	f007 fc78 	bl	80207b6 <__cxa_guard_acquire>
 8018ec6:	b138      	cbz	r0, 8018ed8 <_ZN8touchgfx8LCD16bpp49enableTextureMapperARGB8888_BilinearInterpolationEv+0x4c>
 8018ec8:	4620      	mov	r0, r4
 8018eca:	f007 fc80 	bl	80207ce <__cxa_guard_release>
 8018ece:	4a06      	ldr	r2, [pc, #24]	@ (8018ee8 <_ZN8touchgfx8LCD16bpp49enableTextureMapperARGB8888_BilinearInterpolationEv+0x5c>)
 8018ed0:	4909      	ldr	r1, [pc, #36]	@ (8018ef8 <_ZN8touchgfx8LCD16bpp49enableTextureMapperARGB8888_BilinearInterpolationEv+0x6c>)
 8018ed2:	480a      	ldr	r0, [pc, #40]	@ (8018efc <_ZN8touchgfx8LCD16bpp49enableTextureMapperARGB8888_BilinearInterpolationEv+0x70>)
 8018ed4:	f007 fc68 	bl	80207a8 <__aeabi_atexit>
 8018ed8:	4b05      	ldr	r3, [pc, #20]	@ (8018ef0 <_ZN8touchgfx8LCD16bpp49enableTextureMapperARGB8888_BilinearInterpolationEv+0x64>)
 8018eda:	666b      	str	r3, [r5, #100]	@ 0x64
 8018edc:	4b07      	ldr	r3, [pc, #28]	@ (8018efc <_ZN8touchgfx8LCD16bpp49enableTextureMapperARGB8888_BilinearInterpolationEv+0x70>)
 8018ede:	66ab      	str	r3, [r5, #104]	@ 0x68
 8018ee0:	bd38      	pop	{r3, r4, r5, pc}
 8018ee2:	bf00      	nop
 8018ee4:	20002d30 	.word	0x20002d30
 8018ee8:	20000000 	.word	0x20000000
 8018eec:	08014b47 	.word	0x08014b47
 8018ef0:	20000068 	.word	0x20000068
 8018ef4:	20002d34 	.word	0x20002d34
 8018ef8:	08014b45 	.word	0x08014b45
 8018efc:	2000006c 	.word	0x2000006c

08018f00 <_ZN8touchgfx8LCD16bpp43enableTextureMapperARGB8888_NearestNeighborEv>:
 8018f00:	b538      	push	{r3, r4, r5, lr}
 8018f02:	4c15      	ldr	r4, [pc, #84]	@ (8018f58 <_ZN8touchgfx8LCD16bpp43enableTextureMapperARGB8888_NearestNeighborEv+0x58>)
 8018f04:	7823      	ldrb	r3, [r4, #0]
 8018f06:	f3bf 8f5b 	dmb	ish
 8018f0a:	07da      	lsls	r2, r3, #31
 8018f0c:	4605      	mov	r5, r0
 8018f0e:	d40b      	bmi.n	8018f28 <_ZN8touchgfx8LCD16bpp43enableTextureMapperARGB8888_NearestNeighborEv+0x28>
 8018f10:	4620      	mov	r0, r4
 8018f12:	f007 fc50 	bl	80207b6 <__cxa_guard_acquire>
 8018f16:	b138      	cbz	r0, 8018f28 <_ZN8touchgfx8LCD16bpp43enableTextureMapperARGB8888_NearestNeighborEv+0x28>
 8018f18:	4620      	mov	r0, r4
 8018f1a:	f007 fc58 	bl	80207ce <__cxa_guard_release>
 8018f1e:	4a0f      	ldr	r2, [pc, #60]	@ (8018f5c <_ZN8touchgfx8LCD16bpp43enableTextureMapperARGB8888_NearestNeighborEv+0x5c>)
 8018f20:	490f      	ldr	r1, [pc, #60]	@ (8018f60 <_ZN8touchgfx8LCD16bpp43enableTextureMapperARGB8888_NearestNeighborEv+0x60>)
 8018f22:	4810      	ldr	r0, [pc, #64]	@ (8018f64 <_ZN8touchgfx8LCD16bpp43enableTextureMapperARGB8888_NearestNeighborEv+0x64>)
 8018f24:	f007 fc40 	bl	80207a8 <__aeabi_atexit>
 8018f28:	4c0f      	ldr	r4, [pc, #60]	@ (8018f68 <_ZN8touchgfx8LCD16bpp43enableTextureMapperARGB8888_NearestNeighborEv+0x68>)
 8018f2a:	7823      	ldrb	r3, [r4, #0]
 8018f2c:	f3bf 8f5b 	dmb	ish
 8018f30:	07db      	lsls	r3, r3, #31
 8018f32:	d40b      	bmi.n	8018f4c <_ZN8touchgfx8LCD16bpp43enableTextureMapperARGB8888_NearestNeighborEv+0x4c>
 8018f34:	4620      	mov	r0, r4
 8018f36:	f007 fc3e 	bl	80207b6 <__cxa_guard_acquire>
 8018f3a:	b138      	cbz	r0, 8018f4c <_ZN8touchgfx8LCD16bpp43enableTextureMapperARGB8888_NearestNeighborEv+0x4c>
 8018f3c:	4620      	mov	r0, r4
 8018f3e:	f007 fc46 	bl	80207ce <__cxa_guard_release>
 8018f42:	4a06      	ldr	r2, [pc, #24]	@ (8018f5c <_ZN8touchgfx8LCD16bpp43enableTextureMapperARGB8888_NearestNeighborEv+0x5c>)
 8018f44:	4909      	ldr	r1, [pc, #36]	@ (8018f6c <_ZN8touchgfx8LCD16bpp43enableTextureMapperARGB8888_NearestNeighborEv+0x6c>)
 8018f46:	480a      	ldr	r0, [pc, #40]	@ (8018f70 <_ZN8touchgfx8LCD16bpp43enableTextureMapperARGB8888_NearestNeighborEv+0x70>)
 8018f48:	f007 fc2e 	bl	80207a8 <__aeabi_atexit>
 8018f4c:	4b05      	ldr	r3, [pc, #20]	@ (8018f64 <_ZN8touchgfx8LCD16bpp43enableTextureMapperARGB8888_NearestNeighborEv+0x64>)
 8018f4e:	65eb      	str	r3, [r5, #92]	@ 0x5c
 8018f50:	4b07      	ldr	r3, [pc, #28]	@ (8018f70 <_ZN8touchgfx8LCD16bpp43enableTextureMapperARGB8888_NearestNeighborEv+0x70>)
 8018f52:	662b      	str	r3, [r5, #96]	@ 0x60
 8018f54:	bd38      	pop	{r3, r4, r5, pc}
 8018f56:	bf00      	nop
 8018f58:	20002d08 	.word	0x20002d08
 8018f5c:	20000000 	.word	0x20000000
 8018f60:	08014b4b 	.word	0x08014b4b
 8018f64:	20000040 	.word	0x20000040
 8018f68:	20002d0c 	.word	0x20002d0c
 8018f6c:	08014b49 	.word	0x08014b49
 8018f70:	20000044 	.word	0x20000044

08018f74 <_ZN8touchgfx8LCD16bpp27enableTextureMapperARGB8888Ev>:
 8018f74:	b510      	push	{r4, lr}
 8018f76:	4604      	mov	r4, r0
 8018f78:	f7ff ff88 	bl	8018e8c <_ZN8touchgfx8LCD16bpp49enableTextureMapperARGB8888_BilinearInterpolationEv>
 8018f7c:	4620      	mov	r0, r4
 8018f7e:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
 8018f82:	f7ff bfbd 	b.w	8018f00 <_ZN8touchgfx8LCD16bpp43enableTextureMapperARGB8888_NearestNeighborEv>
	...

08018f88 <_ZN8touchgfx8LCD16bpp43enableTextureMapperA4_BilinearInterpolationEv>:
 8018f88:	b538      	push	{r3, r4, r5, lr}
 8018f8a:	4c15      	ldr	r4, [pc, #84]	@ (8018fe0 <_ZN8touchgfx8LCD16bpp43enableTextureMapperA4_BilinearInterpolationEv+0x58>)
 8018f8c:	7823      	ldrb	r3, [r4, #0]
 8018f8e:	f3bf 8f5b 	dmb	ish
 8018f92:	07da      	lsls	r2, r3, #31
 8018f94:	4605      	mov	r5, r0
 8018f96:	d40b      	bmi.n	8018fb0 <_ZN8touchgfx8LCD16bpp43enableTextureMapperA4_BilinearInterpolationEv+0x28>
 8018f98:	4620      	mov	r0, r4
 8018f9a:	f007 fc0c 	bl	80207b6 <__cxa_guard_acquire>
 8018f9e:	b138      	cbz	r0, 8018fb0 <_ZN8touchgfx8LCD16bpp43enableTextureMapperA4_BilinearInterpolationEv+0x28>
 8018fa0:	4620      	mov	r0, r4
 8018fa2:	f007 fc14 	bl	80207ce <__cxa_guard_release>
 8018fa6:	4a0f      	ldr	r2, [pc, #60]	@ (8018fe4 <_ZN8touchgfx8LCD16bpp43enableTextureMapperA4_BilinearInterpolationEv+0x5c>)
 8018fa8:	490f      	ldr	r1, [pc, #60]	@ (8018fe8 <_ZN8touchgfx8LCD16bpp43enableTextureMapperA4_BilinearInterpolationEv+0x60>)
 8018faa:	4810      	ldr	r0, [pc, #64]	@ (8018fec <_ZN8touchgfx8LCD16bpp43enableTextureMapperA4_BilinearInterpolationEv+0x64>)
 8018fac:	f007 fbfc 	bl	80207a8 <__aeabi_atexit>
 8018fb0:	4c0f      	ldr	r4, [pc, #60]	@ (8018ff0 <_ZN8touchgfx8LCD16bpp43enableTextureMapperA4_BilinearInterpolationEv+0x68>)
 8018fb2:	7823      	ldrb	r3, [r4, #0]
 8018fb4:	f3bf 8f5b 	dmb	ish
 8018fb8:	07db      	lsls	r3, r3, #31
 8018fba:	d40b      	bmi.n	8018fd4 <_ZN8touchgfx8LCD16bpp43enableTextureMapperA4_BilinearInterpolationEv+0x4c>
 8018fbc:	4620      	mov	r0, r4
 8018fbe:	f007 fbfa 	bl	80207b6 <__cxa_guard_acquire>
 8018fc2:	b138      	cbz	r0, 8018fd4 <_ZN8touchgfx8LCD16bpp43enableTextureMapperA4_BilinearInterpolationEv+0x4c>
 8018fc4:	4620      	mov	r0, r4
 8018fc6:	f007 fc02 	bl	80207ce <__cxa_guard_release>
 8018fca:	4a06      	ldr	r2, [pc, #24]	@ (8018fe4 <_ZN8touchgfx8LCD16bpp43enableTextureMapperA4_BilinearInterpolationEv+0x5c>)
 8018fcc:	4909      	ldr	r1, [pc, #36]	@ (8018ff4 <_ZN8touchgfx8LCD16bpp43enableTextureMapperA4_BilinearInterpolationEv+0x6c>)
 8018fce:	480a      	ldr	r0, [pc, #40]	@ (8018ff8 <_ZN8touchgfx8LCD16bpp43enableTextureMapperA4_BilinearInterpolationEv+0x70>)
 8018fd0:	f007 fbea 	bl	80207a8 <__aeabi_atexit>
 8018fd4:	4b05      	ldr	r3, [pc, #20]	@ (8018fec <_ZN8touchgfx8LCD16bpp43enableTextureMapperA4_BilinearInterpolationEv+0x64>)
 8018fd6:	676b      	str	r3, [r5, #116]	@ 0x74
 8018fd8:	4b07      	ldr	r3, [pc, #28]	@ (8018ff8 <_ZN8touchgfx8LCD16bpp43enableTextureMapperA4_BilinearInterpolationEv+0x70>)
 8018fda:	67ab      	str	r3, [r5, #120]	@ 0x78
 8018fdc:	bd38      	pop	{r3, r4, r5, pc}
 8018fde:	bf00      	nop
 8018fe0:	20002d00 	.word	0x20002d00
 8018fe4:	20000000 	.word	0x20000000
 8018fe8:	08014b3f 	.word	0x08014b3f
 8018fec:	20000038 	.word	0x20000038
 8018ff0:	20002d04 	.word	0x20002d04
 8018ff4:	08014b3d 	.word	0x08014b3d
 8018ff8:	2000003c 	.word	0x2000003c

08018ffc <_ZN8touchgfx8LCD16bpp37enableTextureMapperA4_NearestNeighborEv>:
 8018ffc:	b538      	push	{r3, r4, r5, lr}
 8018ffe:	4c15      	ldr	r4, [pc, #84]	@ (8019054 <_ZN8touchgfx8LCD16bpp37enableTextureMapperA4_NearestNeighborEv+0x58>)
 8019000:	7823      	ldrb	r3, [r4, #0]
 8019002:	f3bf 8f5b 	dmb	ish
 8019006:	07da      	lsls	r2, r3, #31
 8019008:	4605      	mov	r5, r0
 801900a:	d40b      	bmi.n	8019024 <_ZN8touchgfx8LCD16bpp37enableTextureMapperA4_NearestNeighborEv+0x28>
 801900c:	4620      	mov	r0, r4
 801900e:	f007 fbd2 	bl	80207b6 <__cxa_guard_acquire>
 8019012:	b138      	cbz	r0, 8019024 <_ZN8touchgfx8LCD16bpp37enableTextureMapperA4_NearestNeighborEv+0x28>
 8019014:	4620      	mov	r0, r4
 8019016:	f007 fbda 	bl	80207ce <__cxa_guard_release>
 801901a:	4a0f      	ldr	r2, [pc, #60]	@ (8019058 <_ZN8touchgfx8LCD16bpp37enableTextureMapperA4_NearestNeighborEv+0x5c>)
 801901c:	490f      	ldr	r1, [pc, #60]	@ (801905c <_ZN8touchgfx8LCD16bpp37enableTextureMapperA4_NearestNeighborEv+0x60>)
 801901e:	4810      	ldr	r0, [pc, #64]	@ (8019060 <_ZN8touchgfx8LCD16bpp37enableTextureMapperA4_NearestNeighborEv+0x64>)
 8019020:	f007 fbc2 	bl	80207a8 <__aeabi_atexit>
 8019024:	4c0f      	ldr	r4, [pc, #60]	@ (8019064 <_ZN8touchgfx8LCD16bpp37enableTextureMapperA4_NearestNeighborEv+0x68>)
 8019026:	7823      	ldrb	r3, [r4, #0]
 8019028:	f3bf 8f5b 	dmb	ish
 801902c:	07db      	lsls	r3, r3, #31
 801902e:	d40b      	bmi.n	8019048 <_ZN8touchgfx8LCD16bpp37enableTextureMapperA4_NearestNeighborEv+0x4c>
 8019030:	4620      	mov	r0, r4
 8019032:	f007 fbc0 	bl	80207b6 <__cxa_guard_acquire>
 8019036:	b138      	cbz	r0, 8019048 <_ZN8touchgfx8LCD16bpp37enableTextureMapperA4_NearestNeighborEv+0x4c>
 8019038:	4620      	mov	r0, r4
 801903a:	f007 fbc8 	bl	80207ce <__cxa_guard_release>
 801903e:	4a06      	ldr	r2, [pc, #24]	@ (8019058 <_ZN8touchgfx8LCD16bpp37enableTextureMapperA4_NearestNeighborEv+0x5c>)
 8019040:	4909      	ldr	r1, [pc, #36]	@ (8019068 <_ZN8touchgfx8LCD16bpp37enableTextureMapperA4_NearestNeighborEv+0x6c>)
 8019042:	480a      	ldr	r0, [pc, #40]	@ (801906c <_ZN8touchgfx8LCD16bpp37enableTextureMapperA4_NearestNeighborEv+0x70>)
 8019044:	f007 fbb0 	bl	80207a8 <__aeabi_atexit>
 8019048:	4b05      	ldr	r3, [pc, #20]	@ (8019060 <_ZN8touchgfx8LCD16bpp37enableTextureMapperA4_NearestNeighborEv+0x64>)
 801904a:	66eb      	str	r3, [r5, #108]	@ 0x6c
 801904c:	4b07      	ldr	r3, [pc, #28]	@ (801906c <_ZN8touchgfx8LCD16bpp37enableTextureMapperA4_NearestNeighborEv+0x70>)
 801904e:	672b      	str	r3, [r5, #112]	@ 0x70
 8019050:	bd38      	pop	{r3, r4, r5, pc}
 8019052:	bf00      	nop
 8019054:	20002cf8 	.word	0x20002cf8
 8019058:	20000000 	.word	0x20000000
 801905c:	08014b43 	.word	0x08014b43
 8019060:	20000030 	.word	0x20000030
 8019064:	20002cfc 	.word	0x20002cfc
 8019068:	08014b41 	.word	0x08014b41
 801906c:	20000034 	.word	0x20000034

08019070 <_ZN8touchgfx8LCD16bpp21enableTextureMapperA4Ev>:
 8019070:	b510      	push	{r4, lr}
 8019072:	4604      	mov	r4, r0
 8019074:	f7ff ff88 	bl	8018f88 <_ZN8touchgfx8LCD16bpp43enableTextureMapperA4_BilinearInterpolationEv>
 8019078:	4620      	mov	r0, r4
 801907a:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
 801907e:	f7ff bfbd 	b.w	8018ffc <_ZN8touchgfx8LCD16bpp37enableTextureMapperA4_NearestNeighborEv>

08019082 <_ZN8touchgfx8LCD16bpp22enableTextureMapperAllEv>:
 8019082:	b510      	push	{r4, lr}
 8019084:	4604      	mov	r4, r0
 8019086:	f7ff fff3 	bl	8019070 <_ZN8touchgfx8LCD16bpp21enableTextureMapperA4Ev>
 801908a:	4620      	mov	r0, r4
 801908c:	f7ff ff72 	bl	8018f74 <_ZN8touchgfx8LCD16bpp27enableTextureMapperARGB8888Ev>
 8019090:	4620      	mov	r0, r4
 8019092:	f7ff fdf9 	bl	8018c88 <_ZN8touchgfx8LCD16bpp30enableTextureMapperL8_ARGB8888Ev>
 8019096:	4620      	mov	r0, r4
 8019098:	f7ff fcfa 	bl	8018a90 <_ZN8touchgfx8LCD16bpp28enableTextureMapperL8_RGB565Ev>
 801909c:	4620      	mov	r0, r4
 801909e:	f7ff fd75 	bl	8018b8c <_ZN8touchgfx8LCD16bpp28enableTextureMapperL8_RGB888Ev>
 80190a2:	4620      	mov	r0, r4
 80190a4:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
 80190a8:	f7ff bee0 	b.w	8018e6c <_ZN8touchgfx8LCD16bpp25enableTextureMapperRGB565Ev>

080190ac <_ZN8touchgfx8LCD16bpp23enableDecompressorL8_L4Ev>:
 80190ac:	b538      	push	{r3, r4, r5, lr}
 80190ae:	4c0b      	ldr	r4, [pc, #44]	@ (80190dc <_ZN8touchgfx8LCD16bpp23enableDecompressorL8_L4Ev+0x30>)
 80190b0:	7823      	ldrb	r3, [r4, #0]
 80190b2:	f3bf 8f5b 	dmb	ish
 80190b6:	07db      	lsls	r3, r3, #31
 80190b8:	4605      	mov	r5, r0
 80190ba:	d40b      	bmi.n	80190d4 <_ZN8touchgfx8LCD16bpp23enableDecompressorL8_L4Ev+0x28>
 80190bc:	4620      	mov	r0, r4
 80190be:	f007 fb7a 	bl	80207b6 <__cxa_guard_acquire>
 80190c2:	b138      	cbz	r0, 80190d4 <_ZN8touchgfx8LCD16bpp23enableDecompressorL8_L4Ev+0x28>
 80190c4:	4620      	mov	r0, r4
 80190c6:	f007 fb82 	bl	80207ce <__cxa_guard_release>
 80190ca:	4a05      	ldr	r2, [pc, #20]	@ (80190e0 <_ZN8touchgfx8LCD16bpp23enableDecompressorL8_L4Ev+0x34>)
 80190cc:	4905      	ldr	r1, [pc, #20]	@ (80190e4 <_ZN8touchgfx8LCD16bpp23enableDecompressorL8_L4Ev+0x38>)
 80190ce:	4806      	ldr	r0, [pc, #24]	@ (80190e8 <_ZN8touchgfx8LCD16bpp23enableDecompressorL8_L4Ev+0x3c>)
 80190d0:	f007 fb6a 	bl	80207a8 <__aeabi_atexit>
 80190d4:	4b04      	ldr	r3, [pc, #16]	@ (80190e8 <_ZN8touchgfx8LCD16bpp23enableDecompressorL8_L4Ev+0x3c>)
 80190d6:	67eb      	str	r3, [r5, #124]	@ 0x7c
 80190d8:	bd38      	pop	{r3, r4, r5, pc}
 80190da:	bf00      	nop
 80190dc:	20002cec 	.word	0x20002cec
 80190e0:	20000000 	.word	0x20000000
 80190e4:	08014b3b 	.word	0x08014b3b
 80190e8:	20000028 	.word	0x20000028

080190ec <_ZN8touchgfx8LCD16bpp24enableDecompressorL8_RLEEv>:
 80190ec:	b538      	push	{r3, r4, r5, lr}
 80190ee:	4c0b      	ldr	r4, [pc, #44]	@ (801911c <_ZN8touchgfx8LCD16bpp24enableDecompressorL8_RLEEv+0x30>)
 80190f0:	7823      	ldrb	r3, [r4, #0]
 80190f2:	f3bf 8f5b 	dmb	ish
 80190f6:	07db      	lsls	r3, r3, #31
 80190f8:	4605      	mov	r5, r0
 80190fa:	d40b      	bmi.n	8019114 <_ZN8touchgfx8LCD16bpp24enableDecompressorL8_RLEEv+0x28>
 80190fc:	4620      	mov	r0, r4
 80190fe:	f007 fb5a 	bl	80207b6 <__cxa_guard_acquire>
 8019102:	b138      	cbz	r0, 8019114 <_ZN8touchgfx8LCD16bpp24enableDecompressorL8_RLEEv+0x28>
 8019104:	4620      	mov	r0, r4
 8019106:	f007 fb62 	bl	80207ce <__cxa_guard_release>
 801910a:	4a05      	ldr	r2, [pc, #20]	@ (8019120 <_ZN8touchgfx8LCD16bpp24enableDecompressorL8_RLEEv+0x34>)
 801910c:	4905      	ldr	r1, [pc, #20]	@ (8019124 <_ZN8touchgfx8LCD16bpp24enableDecompressorL8_RLEEv+0x38>)
 801910e:	4806      	ldr	r0, [pc, #24]	@ (8019128 <_ZN8touchgfx8LCD16bpp24enableDecompressorL8_RLEEv+0x3c>)
 8019110:	f007 fb4a 	bl	80207a8 <__aeabi_atexit>
 8019114:	4b04      	ldr	r3, [pc, #16]	@ (8019128 <_ZN8touchgfx8LCD16bpp24enableDecompressorL8_RLEEv+0x3c>)
 8019116:	f8c5 3080 	str.w	r3, [r5, #128]	@ 0x80
 801911a:	bd38      	pop	{r3, r4, r5, pc}
 801911c:	20002cf0 	.word	0x20002cf0
 8019120:	20000000 	.word	0x20000000
 8019124:	08014b39 	.word	0x08014b39
 8019128:	2000002c 	.word	0x2000002c

0801912c <_ZN8touchgfx8LCD16bpp25enableDecompressorL8_LZW9Ev>:
 801912c:	b570      	push	{r4, r5, r6, lr}
 801912e:	4d0d      	ldr	r5, [pc, #52]	@ (8019164 <_ZN8touchgfx8LCD16bpp25enableDecompressorL8_LZW9Ev+0x38>)
 8019130:	4c0d      	ldr	r4, [pc, #52]	@ (8019168 <_ZN8touchgfx8LCD16bpp25enableDecompressorL8_LZW9Ev+0x3c>)
 8019132:	782b      	ldrb	r3, [r5, #0]
 8019134:	f3bf 8f5b 	dmb	ish
 8019138:	f013 0f01 	tst.w	r3, #1
 801913c:	4606      	mov	r6, r0
 801913e:	d10d      	bne.n	801915c <_ZN8touchgfx8LCD16bpp25enableDecompressorL8_LZW9Ev+0x30>
 8019140:	4628      	mov	r0, r5
 8019142:	f007 fb38 	bl	80207b6 <__cxa_guard_acquire>
 8019146:	b148      	cbz	r0, 801915c <_ZN8touchgfx8LCD16bpp25enableDecompressorL8_LZW9Ev+0x30>
 8019148:	4b08      	ldr	r3, [pc, #32]	@ (801916c <_ZN8touchgfx8LCD16bpp25enableDecompressorL8_LZW9Ev+0x40>)
 801914a:	6023      	str	r3, [r4, #0]
 801914c:	4628      	mov	r0, r5
 801914e:	f007 fb3e 	bl	80207ce <__cxa_guard_release>
 8019152:	4a07      	ldr	r2, [pc, #28]	@ (8019170 <_ZN8touchgfx8LCD16bpp25enableDecompressorL8_LZW9Ev+0x44>)
 8019154:	4907      	ldr	r1, [pc, #28]	@ (8019174 <_ZN8touchgfx8LCD16bpp25enableDecompressorL8_LZW9Ev+0x48>)
 8019156:	4620      	mov	r0, r4
 8019158:	f007 fb26 	bl	80207a8 <__aeabi_atexit>
 801915c:	f8c6 4084 	str.w	r4, [r6, #132]	@ 0x84
 8019160:	bd70      	pop	{r4, r5, r6, pc}
 8019162:	bf00      	nop
 8019164:	20002cf4 	.word	0x20002cf4
 8019168:	20002e6c 	.word	0x20002e6c
 801916c:	080238ec 	.word	0x080238ec
 8019170:	20000000 	.word	0x20000000
 8019174:	08014b37 	.word	0x08014b37

08019178 <_ZN8touchgfx8LCD16bpp24enableDecompressorL8_AllEv>:
 8019178:	b510      	push	{r4, lr}
 801917a:	4604      	mov	r4, r0
 801917c:	f7ff ff96 	bl	80190ac <_ZN8touchgfx8LCD16bpp23enableDecompressorL8_L4Ev>
 8019180:	4620      	mov	r0, r4
 8019182:	f7ff ffb3 	bl	80190ec <_ZN8touchgfx8LCD16bpp24enableDecompressorL8_RLEEv>
 8019186:	4620      	mov	r0, r4
 8019188:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
 801918c:	f7ff bfce 	b.w	801912c <_ZN8touchgfx8LCD16bpp25enableDecompressorL8_LZW9Ev>

08019190 <_ZN8touchgfx8LCD16bpp21enableDecompressorRGBEv>:
 8019190:	b570      	push	{r4, r5, r6, lr}
 8019192:	4d0d      	ldr	r5, [pc, #52]	@ (80191c8 <_ZN8touchgfx8LCD16bpp21enableDecompressorRGBEv+0x38>)
 8019194:	4c0d      	ldr	r4, [pc, #52]	@ (80191cc <_ZN8touchgfx8LCD16bpp21enableDecompressorRGBEv+0x3c>)
 8019196:	782b      	ldrb	r3, [r5, #0]
 8019198:	f3bf 8f5b 	dmb	ish
 801919c:	f013 0f01 	tst.w	r3, #1
 80191a0:	4606      	mov	r6, r0
 80191a2:	d10d      	bne.n	80191c0 <_ZN8touchgfx8LCD16bpp21enableDecompressorRGBEv+0x30>
 80191a4:	4628      	mov	r0, r5
 80191a6:	f007 fb06 	bl	80207b6 <__cxa_guard_acquire>
 80191aa:	b148      	cbz	r0, 80191c0 <_ZN8touchgfx8LCD16bpp21enableDecompressorRGBEv+0x30>
 80191ac:	4b08      	ldr	r3, [pc, #32]	@ (80191d0 <_ZN8touchgfx8LCD16bpp21enableDecompressorRGBEv+0x40>)
 80191ae:	6023      	str	r3, [r4, #0]
 80191b0:	4628      	mov	r0, r5
 80191b2:	f007 fb0c 	bl	80207ce <__cxa_guard_release>
 80191b6:	4a07      	ldr	r2, [pc, #28]	@ (80191d4 <_ZN8touchgfx8LCD16bpp21enableDecompressorRGBEv+0x44>)
 80191b8:	4907      	ldr	r1, [pc, #28]	@ (80191d8 <_ZN8touchgfx8LCD16bpp21enableDecompressorRGBEv+0x48>)
 80191ba:	4620      	mov	r0, r4
 80191bc:	f007 faf4 	bl	80207a8 <__aeabi_atexit>
 80191c0:	f8c6 4088 	str.w	r4, [r6, #136]	@ 0x88
 80191c4:	bd70      	pop	{r4, r5, r6, pc}
 80191c6:	bf00      	nop
 80191c8:	20002ce8 	.word	0x20002ce8
 80191cc:	20002d68 	.word	0x20002d68
 80191d0:	08023908 	.word	0x08023908
 80191d4:	20000000 	.word	0x20000000
 80191d8:	08014b35 	.word	0x08014b35

080191dc <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKtssiihhh>:
 80191dc:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 80191e0:	e9dd 450b 	ldrd	r4, r5, [sp, #44]	@ 0x2c
 80191e4:	f9bd e024 	ldrsh.w	lr, [sp, #36]	@ 0x24
 80191e8:	f9bd b028 	ldrsh.w	fp, [sp, #40]	@ 0x28
 80191ec:	f89d 9034 	ldrb.w	r9, [sp, #52]	@ 0x34
 80191f0:	f89d 7038 	ldrb.w	r7, [sp, #56]	@ 0x38
 80191f4:	f89d 603c 	ldrb.w	r6, [sp, #60]	@ 0x3c
 80191f8:	8808      	ldrh	r0, [r1, #0]
 80191fa:	fb05 4c0e 	mla	ip, r5, lr, r4
 80191fe:	2d00      	cmp	r5, #0
 8019200:	eb02 0a0c 	add.w	sl, r2, ip
 8019204:	f2c0 80b0 	blt.w	8019368 <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKtssiihhh+0x18c>
 8019208:	45ab      	cmp	fp, r5
 801920a:	f340 80ad 	ble.w	8019368 <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKtssiihhh+0x18c>
 801920e:	2c00      	cmp	r4, #0
 8019210:	f2c0 80a8 	blt.w	8019364 <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKtssiihhh+0x188>
 8019214:	45a6      	cmp	lr, r4
 8019216:	f340 80a5 	ble.w	8019364 <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKtssiihhh+0x188>
 801921a:	f812 200c 	ldrb.w	r2, [r2, ip]
 801921e:	f833 8012 	ldrh.w	r8, [r3, r2, lsl #1]
 8019222:	1c62      	adds	r2, r4, #1
 8019224:	f100 80a3 	bmi.w	801936e <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKtssiihhh+0x192>
 8019228:	4596      	cmp	lr, r2
 801922a:	f340 80a0 	ble.w	801936e <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKtssiihhh+0x192>
 801922e:	f1b9 0f00 	cmp.w	r9, #0
 8019232:	f000 809c 	beq.w	801936e <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKtssiihhh+0x192>
 8019236:	f89a 2001 	ldrb.w	r2, [sl, #1]
 801923a:	f833 c012 	ldrh.w	ip, [r3, r2, lsl #1]
 801923e:	3501      	adds	r5, #1
 8019240:	f100 8099 	bmi.w	8019376 <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKtssiihhh+0x19a>
 8019244:	45ab      	cmp	fp, r5
 8019246:	f340 8096 	ble.w	8019376 <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKtssiihhh+0x19a>
 801924a:	2f00      	cmp	r7, #0
 801924c:	f000 8093 	beq.w	8019376 <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKtssiihhh+0x19a>
 8019250:	2c00      	cmp	r4, #0
 8019252:	f2c0 808e 	blt.w	8019372 <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKtssiihhh+0x196>
 8019256:	45a6      	cmp	lr, r4
 8019258:	f340 808b 	ble.w	8019372 <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKtssiihhh+0x196>
 801925c:	f81a 200e 	ldrb.w	r2, [sl, lr]
 8019260:	f833 5012 	ldrh.w	r5, [r3, r2, lsl #1]
 8019264:	3401      	adds	r4, #1
 8019266:	f100 8089 	bmi.w	801937c <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKtssiihhh+0x1a0>
 801926a:	45a6      	cmp	lr, r4
 801926c:	f340 8086 	ble.w	801937c <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKtssiihhh+0x1a0>
 8019270:	f1b9 0f00 	cmp.w	r9, #0
 8019274:	f000 8082 	beq.w	801937c <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKtssiihhh+0x1a0>
 8019278:	44d6      	add	lr, sl
 801927a:	f89e 2001 	ldrb.w	r2, [lr, #1]
 801927e:	f833 3012 	ldrh.w	r3, [r3, r2, lsl #1]
 8019282:	ea4f 4408 	mov.w	r4, r8, lsl #16
 8019286:	f004 64fc 	and.w	r4, r4, #132120576	@ 0x7e00000
 801928a:	f428 68fc 	bic.w	r8, r8, #2016	@ 0x7e0
 801928e:	fb19 fe07 	smulbb	lr, r9, r7
 8019292:	ea44 0808 	orr.w	r8, r4, r8
 8019296:	ea4f 440c 	mov.w	r4, ip, lsl #16
 801929a:	f3ce 0ec7 	ubfx	lr, lr, #3, #8
 801929e:	f1c7 0210 	rsb	r2, r7, #16
 80192a2:	f004 64fc 	and.w	r4, r4, #132120576	@ 0x7e00000
 80192a6:	f42c 6cfc 	bic.w	ip, ip, #2016	@ 0x7e0
 80192aa:	ea44 0c0c 	orr.w	ip, r4, ip
 80192ae:	eba2 0209 	sub.w	r2, r2, r9
 80192b2:	ebce 0449 	rsb	r4, lr, r9, lsl #1
 80192b6:	eb0e 0242 	add.w	r2, lr, r2, lsl #1
 80192ba:	fb04 f40c 	mul.w	r4, r4, ip
 80192be:	fb02 4808 	mla	r8, r2, r8, r4
 80192c2:	041a      	lsls	r2, r3, #16
 80192c4:	f002 62fc 	and.w	r2, r2, #132120576	@ 0x7e00000
 80192c8:	f423 63fc 	bic.w	r3, r3, #2016	@ 0x7e0
 80192cc:	4313      	orrs	r3, r2
 80192ce:	042a      	lsls	r2, r5, #16
 80192d0:	f002 62fc 	and.w	r2, r2, #132120576	@ 0x7e00000
 80192d4:	f425 65fc 	bic.w	r5, r5, #2016	@ 0x7e0
 80192d8:	fb0e 8303 	mla	r3, lr, r3, r8
 80192dc:	432a      	orrs	r2, r5
 80192de:	ebce 0747 	rsb	r7, lr, r7, lsl #1
 80192e2:	fb07 3202 	mla	r2, r7, r2, r3
 80192e6:	0d53      	lsrs	r3, r2, #21
 80192e8:	0952      	lsrs	r2, r2, #5
 80192ea:	f403 63fc 	and.w	r3, r3, #2016	@ 0x7e0
 80192ee:	f422 62fc 	bic.w	r2, r2, #2016	@ 0x7e0
 80192f2:	431a      	orrs	r2, r3
 80192f4:	b293      	uxth	r3, r2
 80192f6:	b2b4      	uxth	r4, r6
 80192f8:	1202      	asrs	r2, r0, #8
 80192fa:	43f6      	mvns	r6, r6
 80192fc:	b2f6      	uxtb	r6, r6
 80192fe:	121d      	asrs	r5, r3, #8
 8019300:	f002 02f8 	and.w	r2, r2, #248	@ 0xf8
 8019304:	fb12 f206 	smulbb	r2, r2, r6
 8019308:	10c7      	asrs	r7, r0, #3
 801930a:	f005 05f8 	and.w	r5, r5, #248	@ 0xf8
 801930e:	00c0      	lsls	r0, r0, #3
 8019310:	fb05 2504 	mla	r5, r5, r4, r2
 8019314:	b2c0      	uxtb	r0, r0
 8019316:	10da      	asrs	r2, r3, #3
 8019318:	00db      	lsls	r3, r3, #3
 801931a:	b2db      	uxtb	r3, r3
 801931c:	f007 07fc 	and.w	r7, r7, #252	@ 0xfc
 8019320:	fb10 f006 	smulbb	r0, r0, r6
 8019324:	b2ad      	uxth	r5, r5
 8019326:	fb03 0004 	mla	r0, r3, r4, r0
 801932a:	f002 02fc 	and.w	r2, r2, #252	@ 0xfc
 801932e:	fb17 f706 	smulbb	r7, r7, r6
 8019332:	b280      	uxth	r0, r0
 8019334:	1c6b      	adds	r3, r5, #1
 8019336:	fb02 7204 	mla	r2, r2, r4, r7
 801933a:	b292      	uxth	r2, r2
 801933c:	eb03 2515 	add.w	r5, r3, r5, lsr #8
 8019340:	1c43      	adds	r3, r0, #1
 8019342:	eb03 2310 	add.w	r3, r3, r0, lsr #8
 8019346:	1c50      	adds	r0, r2, #1
 8019348:	eb00 2212 	add.w	r2, r0, r2, lsr #8
 801934c:	f405 4578 	and.w	r5, r5, #63488	@ 0xf800
 8019350:	f3c3 23c4 	ubfx	r3, r3, #11, #5
 8019354:	0952      	lsrs	r2, r2, #5
 8019356:	432b      	orrs	r3, r5
 8019358:	f402 62fc 	and.w	r2, r2, #2016	@ 0x7e0
 801935c:	4313      	orrs	r3, r2
 801935e:	800b      	strh	r3, [r1, #0]
 8019360:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 8019364:	4680      	mov	r8, r0
 8019366:	e75c      	b.n	8019222 <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKtssiihhh+0x46>
 8019368:	4684      	mov	ip, r0
 801936a:	4680      	mov	r8, r0
 801936c:	e767      	b.n	801923e <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKtssiihhh+0x62>
 801936e:	4684      	mov	ip, r0
 8019370:	e765      	b.n	801923e <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKtssiihhh+0x62>
 8019372:	4605      	mov	r5, r0
 8019374:	e776      	b.n	8019264 <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKtssiihhh+0x88>
 8019376:	4603      	mov	r3, r0
 8019378:	4605      	mov	r5, r0
 801937a:	e782      	b.n	8019282 <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKtssiihhh+0xa6>
 801937c:	4603      	mov	r3, r0
 801937e:	e780      	b.n	8019282 <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKtssiihhh+0xa6>

08019380 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff>:
 8019380:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8019384:	b099      	sub	sp, #100	@ 0x64
 8019386:	e9dd a523 	ldrd	sl, r5, [sp, #140]	@ 0x8c
 801938a:	9215      	str	r2, [sp, #84]	@ 0x54
 801938c:	9309      	str	r3, [sp, #36]	@ 0x24
 801938e:	9a27      	ldr	r2, [sp, #156]	@ 0x9c
 8019390:	f89d 30ac 	ldrb.w	r3, [sp, #172]	@ 0xac
 8019394:	930d      	str	r3, [sp, #52]	@ 0x34
 8019396:	910c      	str	r1, [sp, #48]	@ 0x30
 8019398:	e9dd 1328 	ldrd	r1, r3, [sp, #160]	@ 0xa0
 801939c:	9016      	str	r0, [sp, #88]	@ 0x58
 801939e:	6850      	ldr	r0, [r2, #4]
 80193a0:	6812      	ldr	r2, [r2, #0]
 80193a2:	fb00 1303 	mla	r3, r0, r3, r1
 80193a6:	eb02 0843 	add.w	r8, r2, r3, lsl #1
 80193aa:	9b2a      	ldr	r3, [sp, #168]	@ 0xa8
 80193ac:	681b      	ldr	r3, [r3, #0]
 80193ae:	930b      	str	r3, [sp, #44]	@ 0x2c
 80193b0:	9b2a      	ldr	r3, [sp, #168]	@ 0xa8
 80193b2:	685e      	ldr	r6, [r3, #4]
 80193b4:	9b0d      	ldr	r3, [sp, #52]	@ 0x34
 80193b6:	43db      	mvns	r3, r3
 80193b8:	b2db      	uxtb	r3, r3
 80193ba:	3604      	adds	r6, #4
 80193bc:	930a      	str	r3, [sp, #40]	@ 0x28
 80193be:	9b0c      	ldr	r3, [sp, #48]	@ 0x30
 80193c0:	2b00      	cmp	r3, #0
 80193c2:	dc03      	bgt.n	80193cc <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x4c>
 80193c4:	9b15      	ldr	r3, [sp, #84]	@ 0x54
 80193c6:	2b00      	cmp	r3, #0
 80193c8:	f340 8225 	ble.w	8019816 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x496>
 80193cc:	9b2a      	ldr	r3, [sp, #168]	@ 0xa8
 80193ce:	f9b3 1008 	ldrsh.w	r1, [r3, #8]
 80193d2:	f9b3 200c 	ldrsh.w	r2, [r3, #12]
 80193d6:	1e48      	subs	r0, r1, #1
 80193d8:	1e57      	subs	r7, r2, #1
 80193da:	9b09      	ldr	r3, [sp, #36]	@ 0x24
 80193dc:	2b00      	cmp	r3, #0
 80193de:	f340 80e3 	ble.w	80195a8 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x228>
 80193e2:	ea5f 4c2a 	movs.w	ip, sl, asr #16
 80193e6:	ea4f 4325 	mov.w	r3, r5, asr #16
 80193ea:	d406      	bmi.n	80193fa <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x7a>
 80193ec:	4584      	cmp	ip, r0
 80193ee:	da04      	bge.n	80193fa <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x7a>
 80193f0:	2b00      	cmp	r3, #0
 80193f2:	db02      	blt.n	80193fa <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x7a>
 80193f4:	42bb      	cmp	r3, r7
 80193f6:	f2c0 80d8 	blt.w	80195aa <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x22a>
 80193fa:	f11c 0c01 	adds.w	ip, ip, #1
 80193fe:	f100 80c9 	bmi.w	8019594 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x214>
 8019402:	4561      	cmp	r1, ip
 8019404:	f2c0 80c6 	blt.w	8019594 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x214>
 8019408:	3301      	adds	r3, #1
 801940a:	f100 80c3 	bmi.w	8019594 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x214>
 801940e:	429a      	cmp	r2, r3
 8019410:	f2c0 80c0 	blt.w	8019594 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x214>
 8019414:	f8dd b024 	ldr.w	fp, [sp, #36]	@ 0x24
 8019418:	4647      	mov	r7, r8
 801941a:	f1bb 0f00 	cmp.w	fp, #0
 801941e:	f340 80e3 	ble.w	80195e8 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x268>
 8019422:	9a2a      	ldr	r2, [sp, #168]	@ 0xa8
 8019424:	9b2a      	ldr	r3, [sp, #168]	@ 0xa8
 8019426:	f8d2 e00c 	ldr.w	lr, [r2, #12]
 801942a:	689b      	ldr	r3, [r3, #8]
 801942c:	ea5f 422a 	movs.w	r2, sl, asr #16
 8019430:	ea4f 4c25 	mov.w	ip, r5, asr #16
 8019434:	f3ca 3003 	ubfx	r0, sl, #12, #4
 8019438:	f3c5 3103 	ubfx	r1, r5, #12, #4
 801943c:	f100 8121 	bmi.w	8019682 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x302>
 8019440:	f103 39ff 	add.w	r9, r3, #4294967295
 8019444:	454a      	cmp	r2, r9
 8019446:	f280 811c 	bge.w	8019682 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x302>
 801944a:	f1bc 0f00 	cmp.w	ip, #0
 801944e:	f2c0 8118 	blt.w	8019682 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x302>
 8019452:	f10e 39ff 	add.w	r9, lr, #4294967295
 8019456:	45cc      	cmp	ip, r9
 8019458:	f280 8113 	bge.w	8019682 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x302>
 801945c:	b21b      	sxth	r3, r3
 801945e:	fb0c 2203 	mla	r2, ip, r3, r2
 8019462:	9c0b      	ldr	r4, [sp, #44]	@ 0x2c
 8019464:	eb04 0902 	add.w	r9, r4, r2
 8019468:	5ca2      	ldrb	r2, [r4, r2]
 801946a:	f836 e012 	ldrh.w	lr, [r6, r2, lsl #1]
 801946e:	2800      	cmp	r0, #0
 8019470:	f000 80fe 	beq.w	8019670 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2f0>
 8019474:	f899 2001 	ldrb.w	r2, [r9, #1]
 8019478:	f836 2012 	ldrh.w	r2, [r6, r2, lsl #1]
 801947c:	9211      	str	r2, [sp, #68]	@ 0x44
 801947e:	b151      	cbz	r1, 8019496 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x116>
 8019480:	eb09 0203 	add.w	r2, r9, r3
 8019484:	f819 3003 	ldrb.w	r3, [r9, r3]
 8019488:	f836 3013 	ldrh.w	r3, [r6, r3, lsl #1]
 801948c:	930f      	str	r3, [sp, #60]	@ 0x3c
 801948e:	7853      	ldrb	r3, [r2, #1]
 8019490:	f836 3013 	ldrh.w	r3, [r6, r3, lsl #1]
 8019494:	9312      	str	r3, [sp, #72]	@ 0x48
 8019496:	9b11      	ldr	r3, [sp, #68]	@ 0x44
 8019498:	9c12      	ldr	r4, [sp, #72]	@ 0x48
 801949a:	ea4f 4c03 	mov.w	ip, r3, lsl #16
 801949e:	f00c 6cfc 	and.w	ip, ip, #132120576	@ 0x7e00000
 80194a2:	f423 63fc 	bic.w	r3, r3, #2016	@ 0x7e0
 80194a6:	ea4c 0c03 	orr.w	ip, ip, r3
 80194aa:	9b12      	ldr	r3, [sp, #72]	@ 0x48
 80194ac:	041b      	lsls	r3, r3, #16
 80194ae:	fb10 f201 	smulbb	r2, r0, r1
 80194b2:	f424 64fc 	bic.w	r4, r4, #2016	@ 0x7e0
 80194b6:	f003 63fc 	and.w	r3, r3, #132120576	@ 0x7e00000
 80194ba:	10d2      	asrs	r2, r2, #3
 80194bc:	4323      	orrs	r3, r4
 80194be:	ebc2 0940 	rsb	r9, r2, r0, lsl #1
 80194c2:	4353      	muls	r3, r2
 80194c4:	fb09 330c 	mla	r3, r9, ip, r3
 80194c8:	ea4f 4c0e 	mov.w	ip, lr, lsl #16
 80194cc:	f00c 6cfc 	and.w	ip, ip, #132120576	@ 0x7e00000
 80194d0:	f42e 6efc 	bic.w	lr, lr, #2016	@ 0x7e0
 80194d4:	ea4c 0e0e 	orr.w	lr, ip, lr
 80194d8:	f1c1 0c10 	rsb	ip, r1, #16
 80194dc:	ebac 0c00 	sub.w	ip, ip, r0
 80194e0:	eb02 0c4c 	add.w	ip, r2, ip, lsl #1
 80194e4:	fb0c 3c0e 	mla	ip, ip, lr, r3
 80194e8:	9b0f      	ldr	r3, [sp, #60]	@ 0x3c
 80194ea:	9c0a      	ldr	r4, [sp, #40]	@ 0x28
 80194ec:	0418      	lsls	r0, r3, #16
 80194ee:	f000 60fc 	and.w	r0, r0, #132120576	@ 0x7e00000
 80194f2:	f423 63fc 	bic.w	r3, r3, #2016	@ 0x7e0
 80194f6:	4318      	orrs	r0, r3
 80194f8:	ebc2 0241 	rsb	r2, r2, r1, lsl #1
 80194fc:	fb02 c200 	mla	r2, r2, r0, ip
 8019500:	0d53      	lsrs	r3, r2, #21
 8019502:	0952      	lsrs	r2, r2, #5
 8019504:	8838      	ldrh	r0, [r7, #0]
 8019506:	f403 63fc 	and.w	r3, r3, #2016	@ 0x7e0
 801950a:	f422 62fc 	bic.w	r2, r2, #2016	@ 0x7e0
 801950e:	431a      	orrs	r2, r3
 8019510:	b292      	uxth	r2, r2
 8019512:	1201      	asrs	r1, r0, #8
 8019514:	f8bd 3034 	ldrh.w	r3, [sp, #52]	@ 0x34
 8019518:	ea4f 2c22 	mov.w	ip, r2, asr #8
 801951c:	f001 01f8 	and.w	r1, r1, #248	@ 0xf8
 8019520:	fb11 f104 	smulbb	r1, r1, r4
 8019524:	ea4f 0ee0 	mov.w	lr, r0, asr #3
 8019528:	f00c 0cf8 	and.w	ip, ip, #248	@ 0xf8
 801952c:	00c0      	lsls	r0, r0, #3
 801952e:	fb0c 1c03 	mla	ip, ip, r3, r1
 8019532:	f00e 0efc 	and.w	lr, lr, #252	@ 0xfc
 8019536:	10d1      	asrs	r1, r2, #3
 8019538:	b2c0      	uxtb	r0, r0
 801953a:	00d2      	lsls	r2, r2, #3
 801953c:	b2d2      	uxtb	r2, r2
 801953e:	f001 01fc 	and.w	r1, r1, #252	@ 0xfc
 8019542:	fb1e fe04 	smulbb	lr, lr, r4
 8019546:	fb10 f004 	smulbb	r0, r0, r4
 801954a:	fa1f fc8c 	uxth.w	ip, ip
 801954e:	fb01 e103 	mla	r1, r1, r3, lr
 8019552:	fb02 0303 	mla	r3, r2, r3, r0
 8019556:	b29a      	uxth	r2, r3
 8019558:	f10c 0301 	add.w	r3, ip, #1
 801955c:	b289      	uxth	r1, r1
 801955e:	eb03 2c1c 	add.w	ip, r3, ip, lsr #8
 8019562:	1c53      	adds	r3, r2, #1
 8019564:	eb03 2312 	add.w	r3, r3, r2, lsr #8
 8019568:	1c4a      	adds	r2, r1, #1
 801956a:	eb02 2111 	add.w	r1, r2, r1, lsr #8
 801956e:	f40c 4c78 	and.w	ip, ip, #63488	@ 0xf800
 8019572:	f3c3 23c4 	ubfx	r3, r3, #11, #5
 8019576:	0949      	lsrs	r1, r1, #5
 8019578:	ea43 030c 	orr.w	r3, r3, ip
 801957c:	f401 61fc 	and.w	r1, r1, #2016	@ 0x7e0
 8019580:	430b      	orrs	r3, r1
 8019582:	803b      	strh	r3, [r7, #0]
 8019584:	9b25      	ldr	r3, [sp, #148]	@ 0x94
 8019586:	449a      	add	sl, r3
 8019588:	9b26      	ldr	r3, [sp, #152]	@ 0x98
 801958a:	3702      	adds	r7, #2
 801958c:	441d      	add	r5, r3
 801958e:	f10b 3bff 	add.w	fp, fp, #4294967295
 8019592:	e742      	b.n	801941a <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x9a>
 8019594:	9b25      	ldr	r3, [sp, #148]	@ 0x94
 8019596:	449a      	add	sl, r3
 8019598:	9b26      	ldr	r3, [sp, #152]	@ 0x98
 801959a:	441d      	add	r5, r3
 801959c:	9b09      	ldr	r3, [sp, #36]	@ 0x24
 801959e:	3b01      	subs	r3, #1
 80195a0:	9309      	str	r3, [sp, #36]	@ 0x24
 80195a2:	f108 0802 	add.w	r8, r8, #2
 80195a6:	e718      	b.n	80193da <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x5a>
 80195a8:	d023      	beq.n	80195f2 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x272>
 80195aa:	9b09      	ldr	r3, [sp, #36]	@ 0x24
 80195ac:	9825      	ldr	r0, [sp, #148]	@ 0x94
 80195ae:	3b01      	subs	r3, #1
 80195b0:	fb00 a003 	mla	r0, r0, r3, sl
 80195b4:	1400      	asrs	r0, r0, #16
 80195b6:	f53f af2d 	bmi.w	8019414 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x94>
 80195ba:	3901      	subs	r1, #1
 80195bc:	4288      	cmp	r0, r1
 80195be:	f6bf af29 	bge.w	8019414 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x94>
 80195c2:	9926      	ldr	r1, [sp, #152]	@ 0x98
 80195c4:	fb01 5303 	mla	r3, r1, r3, r5
 80195c8:	141b      	asrs	r3, r3, #16
 80195ca:	f53f af23 	bmi.w	8019414 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x94>
 80195ce:	3a01      	subs	r2, #1
 80195d0:	4293      	cmp	r3, r2
 80195d2:	f6bf af1f 	bge.w	8019414 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x94>
 80195d6:	f8dd e024 	ldr.w	lr, [sp, #36]	@ 0x24
 80195da:	f8bd 9034 	ldrh.w	r9, [sp, #52]	@ 0x34
 80195de:	f8cd 8038 	str.w	r8, [sp, #56]	@ 0x38
 80195e2:	f1be 0f00 	cmp.w	lr, #0
 80195e6:	dc6c      	bgt.n	80196c2 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x342>
 80195e8:	9b09      	ldr	r3, [sp, #36]	@ 0x24
 80195ea:	ea23 74e3 	bic.w	r4, r3, r3, asr #31
 80195ee:	eb08 0844 	add.w	r8, r8, r4, lsl #1
 80195f2:	9b0c      	ldr	r3, [sp, #48]	@ 0x30
 80195f4:	2b00      	cmp	r3, #0
 80195f6:	f340 810e 	ble.w	8019816 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x496>
 80195fa:	ee30 0a04 	vadd.f32	s0, s0, s8
 80195fe:	eeb7 7a00 	vmov.f32	s14, #112	@ 0x3f800000  1.0
 8019602:	eec7 7a00 	vdiv.f32	s15, s14, s0
 8019606:	9b22      	ldr	r3, [sp, #136]	@ 0x88
 8019608:	ee70 0aa4 	vadd.f32	s1, s1, s9
 801960c:	ee31 1a05 	vadd.f32	s2, s2, s10
 8019610:	ee20 7aa7 	vmul.f32	s14, s1, s15
 8019614:	eef0 6a62 	vmov.f32	s13, s5
 8019618:	ee61 7a27 	vmul.f32	s15, s2, s15
 801961c:	eefe 6ac8 	vcvt.s32.f32	s13, s13, #16
 8019620:	ee77 2a62 	vsub.f32	s5, s14, s5
 8019624:	ee16 aa90 	vmov	sl, s13
 8019628:	eefe 2ac8 	vcvt.s32.f32	s5, s5, #16
 801962c:	eef0 6a43 	vmov.f32	s13, s6
 8019630:	ee37 3ac3 	vsub.f32	s6, s15, s6
 8019634:	ee12 2a90 	vmov	r2, s5
 8019638:	eebe 3ac8 	vcvt.s32.f32	s6, s6, #16
 801963c:	fb92 f3f3 	sdiv	r3, r2, r3
 8019640:	ee13 2a10 	vmov	r2, s6
 8019644:	9325      	str	r3, [sp, #148]	@ 0x94
 8019646:	9b22      	ldr	r3, [sp, #136]	@ 0x88
 8019648:	fb92 f3f3 	sdiv	r3, r2, r3
 801964c:	9326      	str	r3, [sp, #152]	@ 0x98
 801964e:	9b0c      	ldr	r3, [sp, #48]	@ 0x30
 8019650:	9a15      	ldr	r2, [sp, #84]	@ 0x54
 8019652:	3b01      	subs	r3, #1
 8019654:	eefe 6ac8 	vcvt.s32.f32	s13, s13, #16
 8019658:	930c      	str	r3, [sp, #48]	@ 0x30
 801965a:	9b22      	ldr	r3, [sp, #136]	@ 0x88
 801965c:	bf08      	it	eq
 801965e:	4613      	moveq	r3, r2
 8019660:	ee16 5a90 	vmov	r5, s13
 8019664:	9309      	str	r3, [sp, #36]	@ 0x24
 8019666:	eeb0 3a67 	vmov.f32	s6, s15
 801966a:	eef0 2a47 	vmov.f32	s5, s14
 801966e:	e6a6      	b.n	80193be <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3e>
 8019670:	2900      	cmp	r1, #0
 8019672:	f43f af10 	beq.w	8019496 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x116>
 8019676:	f819 3003 	ldrb.w	r3, [r9, r3]
 801967a:	f836 3013 	ldrh.w	r3, [r6, r3, lsl #1]
 801967e:	930f      	str	r3, [sp, #60]	@ 0x3c
 8019680:	e709      	b.n	8019496 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x116>
 8019682:	f112 0901 	adds.w	r9, r2, #1
 8019686:	f53f af7d 	bmi.w	8019584 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x204>
 801968a:	454b      	cmp	r3, r9
 801968c:	f6ff af7a 	blt.w	8019584 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x204>
 8019690:	f11c 0901 	adds.w	r9, ip, #1
 8019694:	f53f af76 	bmi.w	8019584 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x204>
 8019698:	45ce      	cmp	lr, r9
 801969a:	f6ff af73 	blt.w	8019584 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x204>
 801969e:	9c0d      	ldr	r4, [sp, #52]	@ 0x34
 80196a0:	9202      	str	r2, [sp, #8]
 80196a2:	b21b      	sxth	r3, r3
 80196a4:	fa0f f28e 	sxth.w	r2, lr
 80196a8:	e9cd 1405 	strd	r1, r4, [sp, #20]
 80196ac:	e9cd c003 	strd	ip, r0, [sp, #12]
 80196b0:	9201      	str	r2, [sp, #4]
 80196b2:	9300      	str	r3, [sp, #0]
 80196b4:	9a0b      	ldr	r2, [sp, #44]	@ 0x2c
 80196b6:	9816      	ldr	r0, [sp, #88]	@ 0x58
 80196b8:	4633      	mov	r3, r6
 80196ba:	4639      	mov	r1, r7
 80196bc:	f7ff fd8e 	bl	80191dc <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKtssiihhh>
 80196c0:	e760      	b.n	8019584 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x204>
 80196c2:	9b2a      	ldr	r3, [sp, #168]	@ 0xa8
 80196c4:	9c0b      	ldr	r4, [sp, #44]	@ 0x2c
 80196c6:	f9b3 3008 	ldrsh.w	r3, [r3, #8]
 80196ca:	ea4f 422a 	mov.w	r2, sl, asr #16
 80196ce:	1429      	asrs	r1, r5, #16
 80196d0:	fb03 2101 	mla	r1, r3, r1, r2
 80196d4:	9a0b      	ldr	r2, [sp, #44]	@ 0x2c
 80196d6:	440a      	add	r2, r1
 80196d8:	5c61      	ldrb	r1, [r4, r1]
 80196da:	f3ca 3c03 	ubfx	ip, sl, #12, #4
 80196de:	f3c5 3003 	ubfx	r0, r5, #12, #4
 80196e2:	f836 1011 	ldrh.w	r1, [r6, r1, lsl #1]
 80196e6:	f1bc 0f00 	cmp.w	ip, #0
 80196ea:	f000 808c 	beq.w	8019806 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x486>
 80196ee:	7857      	ldrb	r7, [r2, #1]
 80196f0:	f836 4017 	ldrh.w	r4, [r6, r7, lsl #1]
 80196f4:	9413      	str	r4, [sp, #76]	@ 0x4c
 80196f6:	b140      	cbz	r0, 801970a <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x38a>
 80196f8:	18d7      	adds	r7, r2, r3
 80196fa:	5cd3      	ldrb	r3, [r2, r3]
 80196fc:	f836 3013 	ldrh.w	r3, [r6, r3, lsl #1]
 8019700:	9310      	str	r3, [sp, #64]	@ 0x40
 8019702:	787b      	ldrb	r3, [r7, #1]
 8019704:	f836 3013 	ldrh.w	r3, [r6, r3, lsl #1]
 8019708:	9314      	str	r3, [sp, #80]	@ 0x50
 801970a:	9b13      	ldr	r3, [sp, #76]	@ 0x4c
 801970c:	9c14      	ldr	r4, [sp, #80]	@ 0x50
 801970e:	fb1c f200 	smulbb	r2, ip, r0
 8019712:	041f      	lsls	r7, r3, #16
 8019714:	10d2      	asrs	r2, r2, #3
 8019716:	f423 63fc 	bic.w	r3, r3, #2016	@ 0x7e0
 801971a:	f007 67fc 	and.w	r7, r7, #132120576	@ 0x7e00000
 801971e:	431f      	orrs	r7, r3
 8019720:	ebc2 034c 	rsb	r3, r2, ip, lsl #1
 8019724:	9317      	str	r3, [sp, #92]	@ 0x5c
 8019726:	9b14      	ldr	r3, [sp, #80]	@ 0x50
 8019728:	041b      	lsls	r3, r3, #16
 801972a:	f424 6bfc 	bic.w	fp, r4, #2016	@ 0x7e0
 801972e:	f003 63fc 	and.w	r3, r3, #132120576	@ 0x7e00000
 8019732:	ea43 030b 	orr.w	r3, r3, fp
 8019736:	9c17      	ldr	r4, [sp, #92]	@ 0x5c
 8019738:	4353      	muls	r3, r2
 801973a:	ea4f 4b01 	mov.w	fp, r1, lsl #16
 801973e:	fb04 3707 	mla	r7, r4, r7, r3
 8019742:	f421 61fc 	bic.w	r1, r1, #2016	@ 0x7e0
 8019746:	f00b 63fc 	and.w	r3, fp, #132120576	@ 0x7e00000
 801974a:	ea43 0b01 	orr.w	fp, r3, r1
 801974e:	f1c0 0110 	rsb	r1, r0, #16
 8019752:	9b10      	ldr	r3, [sp, #64]	@ 0x40
 8019754:	9c0a      	ldr	r4, [sp, #40]	@ 0x28
 8019756:	eba1 0c0c 	sub.w	ip, r1, ip
 801975a:	eb02 0c4c 	add.w	ip, r2, ip, lsl #1
 801975e:	fb0c 770b 	mla	r7, ip, fp, r7
 8019762:	ea4f 4c03 	mov.w	ip, r3, lsl #16
 8019766:	f423 6bfc 	bic.w	fp, r3, #2016	@ 0x7e0
 801976a:	f00c 6cfc 	and.w	ip, ip, #132120576	@ 0x7e00000
 801976e:	ebc2 0240 	rsb	r2, r2, r0, lsl #1
 8019772:	ea4c 0c0b 	orr.w	ip, ip, fp
 8019776:	fb02 770c 	mla	r7, r2, ip, r7
 801977a:	9a0e      	ldr	r2, [sp, #56]	@ 0x38
 801977c:	0d79      	lsrs	r1, r7, #21
 801977e:	097f      	lsrs	r7, r7, #5
 8019780:	8812      	ldrh	r2, [r2, #0]
 8019782:	f401 61fc 	and.w	r1, r1, #2016	@ 0x7e0
 8019786:	f427 67fc 	bic.w	r7, r7, #2016	@ 0x7e0
 801978a:	430f      	orrs	r7, r1
 801978c:	b2bb      	uxth	r3, r7
 801978e:	1211      	asrs	r1, r2, #8
 8019790:	1218      	asrs	r0, r3, #8
 8019792:	f001 01f8 	and.w	r1, r1, #248	@ 0xf8
 8019796:	fb11 f104 	smulbb	r1, r1, r4
 801979a:	10d7      	asrs	r7, r2, #3
 801979c:	f000 00f8 	and.w	r0, r0, #248	@ 0xf8
 80197a0:	00d2      	lsls	r2, r2, #3
 80197a2:	fb00 1009 	mla	r0, r0, r9, r1
 80197a6:	f007 07fc 	and.w	r7, r7, #252	@ 0xfc
 80197aa:	10d9      	asrs	r1, r3, #3
 80197ac:	b2d2      	uxtb	r2, r2
 80197ae:	00db      	lsls	r3, r3, #3
 80197b0:	fb17 f704 	smulbb	r7, r7, r4
 80197b4:	fb12 f204 	smulbb	r2, r2, r4
 80197b8:	f001 01fc 	and.w	r1, r1, #252	@ 0xfc
 80197bc:	b2db      	uxtb	r3, r3
 80197be:	b280      	uxth	r0, r0
 80197c0:	fb01 7109 	mla	r1, r1, r9, r7
 80197c4:	fb03 2309 	mla	r3, r3, r9, r2
 80197c8:	b29b      	uxth	r3, r3
 80197ca:	b289      	uxth	r1, r1
 80197cc:	1c42      	adds	r2, r0, #1
 80197ce:	eb02 2010 	add.w	r0, r2, r0, lsr #8
 80197d2:	1c4f      	adds	r7, r1, #1
 80197d4:	1c5a      	adds	r2, r3, #1
 80197d6:	eb02 2213 	add.w	r2, r2, r3, lsr #8
 80197da:	eb07 2111 	add.w	r1, r7, r1, lsr #8
 80197de:	f400 4078 	and.w	r0, r0, #63488	@ 0xf800
 80197e2:	f3c2 22c4 	ubfx	r2, r2, #11, #5
 80197e6:	0949      	lsrs	r1, r1, #5
 80197e8:	9b0e      	ldr	r3, [sp, #56]	@ 0x38
 80197ea:	4310      	orrs	r0, r2
 80197ec:	f401 61fc 	and.w	r1, r1, #2016	@ 0x7e0
 80197f0:	4308      	orrs	r0, r1
 80197f2:	f823 0b02 	strh.w	r0, [r3], #2
 80197f6:	930e      	str	r3, [sp, #56]	@ 0x38
 80197f8:	9b25      	ldr	r3, [sp, #148]	@ 0x94
 80197fa:	449a      	add	sl, r3
 80197fc:	9b26      	ldr	r3, [sp, #152]	@ 0x98
 80197fe:	f10e 3eff 	add.w	lr, lr, #4294967295
 8019802:	441d      	add	r5, r3
 8019804:	e6ed      	b.n	80195e2 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x262>
 8019806:	2800      	cmp	r0, #0
 8019808:	f43f af7f 	beq.w	801970a <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x38a>
 801980c:	5cd3      	ldrb	r3, [r2, r3]
 801980e:	f836 3013 	ldrh.w	r3, [r6, r3, lsl #1]
 8019812:	9310      	str	r3, [sp, #64]	@ 0x40
 8019814:	e779      	b.n	801970a <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x38a>
 8019816:	b019      	add	sp, #100	@ 0x64
 8019818:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}

0801981c <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh>:
 801981c:	e92d 47f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
 8019820:	e9dd 480a 	ldrd	r4, r8, [sp, #40]	@ 0x28
 8019824:	f9bd e020 	ldrsh.w	lr, [sp, #32]
 8019828:	f9bd a024 	ldrsh.w	sl, [sp, #36]	@ 0x24
 801982c:	f89d 5030 	ldrb.w	r5, [sp, #48]	@ 0x30
 8019830:	f89d 6034 	ldrb.w	r6, [sp, #52]	@ 0x34
 8019834:	8808      	ldrh	r0, [r1, #0]
 8019836:	fb08 470e 	mla	r7, r8, lr, r4
 801983a:	f1b8 0f00 	cmp.w	r8, #0
 801983e:	eb02 0907 	add.w	r9, r2, r7
 8019842:	db67      	blt.n	8019914 <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0xf8>
 8019844:	45c2      	cmp	sl, r8
 8019846:	dd65      	ble.n	8019914 <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0xf8>
 8019848:	2c00      	cmp	r4, #0
 801984a:	db61      	blt.n	8019910 <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0xf4>
 801984c:	45a6      	cmp	lr, r4
 801984e:	dd5f      	ble.n	8019910 <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0xf4>
 8019850:	5dd2      	ldrb	r2, [r2, r7]
 8019852:	f833 c012 	ldrh.w	ip, [r3, r2, lsl #1]
 8019856:	1c62      	adds	r2, r4, #1
 8019858:	d45f      	bmi.n	801991a <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0xfe>
 801985a:	4596      	cmp	lr, r2
 801985c:	dd5d      	ble.n	801991a <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0xfe>
 801985e:	2d00      	cmp	r5, #0
 8019860:	d05b      	beq.n	801991a <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0xfe>
 8019862:	f899 2001 	ldrb.w	r2, [r9, #1]
 8019866:	f833 7012 	ldrh.w	r7, [r3, r2, lsl #1]
 801986a:	f118 0801 	adds.w	r8, r8, #1
 801986e:	d458      	bmi.n	8019922 <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x106>
 8019870:	45c2      	cmp	sl, r8
 8019872:	dd56      	ble.n	8019922 <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x106>
 8019874:	2e00      	cmp	r6, #0
 8019876:	d054      	beq.n	8019922 <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x106>
 8019878:	2c00      	cmp	r4, #0
 801987a:	db50      	blt.n	801991e <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x102>
 801987c:	45a6      	cmp	lr, r4
 801987e:	dd4e      	ble.n	801991e <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x102>
 8019880:	f819 200e 	ldrb.w	r2, [r9, lr]
 8019884:	f833 2012 	ldrh.w	r2, [r3, r2, lsl #1]
 8019888:	3401      	adds	r4, #1
 801988a:	d407      	bmi.n	801989c <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x80>
 801988c:	45a6      	cmp	lr, r4
 801988e:	dd05      	ble.n	801989c <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x80>
 8019890:	b125      	cbz	r5, 801989c <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x80>
 8019892:	44ce      	add	lr, r9
 8019894:	f89e 0001 	ldrb.w	r0, [lr, #1]
 8019898:	f833 0010 	ldrh.w	r0, [r3, r0, lsl #1]
 801989c:	ea4f 430c 	mov.w	r3, ip, lsl #16
 80198a0:	fb15 f406 	smulbb	r4, r5, r6
 80198a4:	f003 63fc 	and.w	r3, r3, #132120576	@ 0x7e00000
 80198a8:	ea4f 4e07 	mov.w	lr, r7, lsl #16
 80198ac:	f42c 6cfc 	bic.w	ip, ip, #2016	@ 0x7e0
 80198b0:	f3c4 04c7 	ubfx	r4, r4, #3, #8
 80198b4:	ea43 0c0c 	orr.w	ip, r3, ip
 80198b8:	f00e 6efc 	and.w	lr, lr, #132120576	@ 0x7e00000
 80198bc:	f1c6 0310 	rsb	r3, r6, #16
 80198c0:	f427 67fc 	bic.w	r7, r7, #2016	@ 0x7e0
 80198c4:	1b5b      	subs	r3, r3, r5
 80198c6:	ea4e 0707 	orr.w	r7, lr, r7
 80198ca:	ebc4 0545 	rsb	r5, r4, r5, lsl #1
 80198ce:	eb04 0343 	add.w	r3, r4, r3, lsl #1
 80198d2:	437d      	muls	r5, r7
 80198d4:	fb03 5c0c 	mla	ip, r3, ip, r5
 80198d8:	0403      	lsls	r3, r0, #16
 80198da:	f003 63fc 	and.w	r3, r3, #132120576	@ 0x7e00000
 80198de:	f420 60fc 	bic.w	r0, r0, #2016	@ 0x7e0
 80198e2:	4318      	orrs	r0, r3
 80198e4:	0413      	lsls	r3, r2, #16
 80198e6:	f003 63fc 	and.w	r3, r3, #132120576	@ 0x7e00000
 80198ea:	f422 62fc 	bic.w	r2, r2, #2016	@ 0x7e0
 80198ee:	4313      	orrs	r3, r2
 80198f0:	fb04 c000 	mla	r0, r4, r0, ip
 80198f4:	ebc4 0646 	rsb	r6, r4, r6, lsl #1
 80198f8:	fb06 0003 	mla	r0, r6, r3, r0
 80198fc:	0d43      	lsrs	r3, r0, #21
 80198fe:	0940      	lsrs	r0, r0, #5
 8019900:	f403 63fc 	and.w	r3, r3, #2016	@ 0x7e0
 8019904:	f420 60fc 	bic.w	r0, r0, #2016	@ 0x7e0
 8019908:	4318      	orrs	r0, r3
 801990a:	8008      	strh	r0, [r1, #0]
 801990c:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
 8019910:	4684      	mov	ip, r0
 8019912:	e7a0      	b.n	8019856 <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x3a>
 8019914:	4607      	mov	r7, r0
 8019916:	4684      	mov	ip, r0
 8019918:	e7a7      	b.n	801986a <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x4e>
 801991a:	4607      	mov	r7, r0
 801991c:	e7a5      	b.n	801986a <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x4e>
 801991e:	4602      	mov	r2, r0
 8019920:	e7b2      	b.n	8019888 <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x6c>
 8019922:	4602      	mov	r2, r0
 8019924:	e7ba      	b.n	801989c <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x80>

08019926 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff>:
 8019926:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 801992a:	b093      	sub	sp, #76	@ 0x4c
 801992c:	e9dd 461d 	ldrd	r4, r6, [sp, #116]	@ 0x74
 8019930:	920f      	str	r2, [sp, #60]	@ 0x3c
 8019932:	9a21      	ldr	r2, [sp, #132]	@ 0x84
 8019934:	9108      	str	r1, [sp, #32]
 8019936:	9306      	str	r3, [sp, #24]
 8019938:	e9dd 1322 	ldrd	r1, r3, [sp, #136]	@ 0x88
 801993c:	9010      	str	r0, [sp, #64]	@ 0x40
 801993e:	6850      	ldr	r0, [r2, #4]
 8019940:	6812      	ldr	r2, [r2, #0]
 8019942:	fb00 1303 	mla	r3, r0, r3, r1
 8019946:	eb02 0943 	add.w	r9, r2, r3, lsl #1
 801994a:	9b24      	ldr	r3, [sp, #144]	@ 0x90
 801994c:	681b      	ldr	r3, [r3, #0]
 801994e:	9307      	str	r3, [sp, #28]
 8019950:	9b24      	ldr	r3, [sp, #144]	@ 0x90
 8019952:	685f      	ldr	r7, [r3, #4]
 8019954:	eef7 6a00 	vmov.f32	s13, #112	@ 0x3f800000  1.0
 8019958:	3704      	adds	r7, #4
 801995a:	9b08      	ldr	r3, [sp, #32]
 801995c:	2b00      	cmp	r3, #0
 801995e:	dc03      	bgt.n	8019968 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x42>
 8019960:	9b0f      	ldr	r3, [sp, #60]	@ 0x3c
 8019962:	2b00      	cmp	r3, #0
 8019964:	f340 81b2 	ble.w	8019ccc <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3a6>
 8019968:	9b24      	ldr	r3, [sp, #144]	@ 0x90
 801996a:	f9b3 1008 	ldrsh.w	r1, [r3, #8]
 801996e:	f9b3 200c 	ldrsh.w	r2, [r3, #12]
 8019972:	1e48      	subs	r0, r1, #1
 8019974:	f102 3cff 	add.w	ip, r2, #4294967295
 8019978:	9b06      	ldr	r3, [sp, #24]
 801997a:	2b00      	cmp	r3, #0
 801997c:	f340 80a9 	ble.w	8019ad2 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1ac>
 8019980:	ea5f 4e24 	movs.w	lr, r4, asr #16
 8019984:	ea4f 4326 	mov.w	r3, r6, asr #16
 8019988:	d406      	bmi.n	8019998 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x72>
 801998a:	4586      	cmp	lr, r0
 801998c:	da04      	bge.n	8019998 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x72>
 801998e:	2b00      	cmp	r3, #0
 8019990:	db02      	blt.n	8019998 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x72>
 8019992:	4563      	cmp	r3, ip
 8019994:	f2c0 809e 	blt.w	8019ad4 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1ae>
 8019998:	f11e 0e01 	adds.w	lr, lr, #1
 801999c:	f100 808f 	bmi.w	8019abe <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x198>
 80199a0:	4571      	cmp	r1, lr
 80199a2:	f2c0 808c 	blt.w	8019abe <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x198>
 80199a6:	3301      	adds	r3, #1
 80199a8:	f100 8089 	bmi.w	8019abe <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x198>
 80199ac:	429a      	cmp	r2, r3
 80199ae:	f2c0 8086 	blt.w	8019abe <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x198>
 80199b2:	f8dd b018 	ldr.w	fp, [sp, #24]
 80199b6:	46c8      	mov	r8, r9
 80199b8:	f1bb 0f00 	cmp.w	fp, #0
 80199bc:	f340 80a6 	ble.w	8019b0c <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1e6>
 80199c0:	9a24      	ldr	r2, [sp, #144]	@ 0x90
 80199c2:	9b24      	ldr	r3, [sp, #144]	@ 0x90
 80199c4:	f8d2 e00c 	ldr.w	lr, [r2, #12]
 80199c8:	689b      	ldr	r3, [r3, #8]
 80199ca:	1422      	asrs	r2, r4, #16
 80199cc:	ea4f 4c26 	mov.w	ip, r6, asr #16
 80199d0:	f3c4 3003 	ubfx	r0, r4, #12, #4
 80199d4:	f3c6 3103 	ubfx	r1, r6, #12, #4
 80199d8:	f100 80e3 	bmi.w	8019ba2 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x27c>
 80199dc:	f103 3aff 	add.w	sl, r3, #4294967295
 80199e0:	4552      	cmp	r2, sl
 80199e2:	f280 80de 	bge.w	8019ba2 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x27c>
 80199e6:	f1bc 0f00 	cmp.w	ip, #0
 80199ea:	f2c0 80da 	blt.w	8019ba2 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x27c>
 80199ee:	f10e 3aff 	add.w	sl, lr, #4294967295
 80199f2:	45d4      	cmp	ip, sl
 80199f4:	f280 80d5 	bge.w	8019ba2 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x27c>
 80199f8:	b21b      	sxth	r3, r3
 80199fa:	fb0c 2203 	mla	r2, ip, r3, r2
 80199fe:	9d07      	ldr	r5, [sp, #28]
 8019a00:	eb05 0a02 	add.w	sl, r5, r2
 8019a04:	5caa      	ldrb	r2, [r5, r2]
 8019a06:	f837 e012 	ldrh.w	lr, [r7, r2, lsl #1]
 8019a0a:	2800      	cmp	r0, #0
 8019a0c:	f000 80c0 	beq.w	8019b90 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x26a>
 8019a10:	f89a 2001 	ldrb.w	r2, [sl, #1]
 8019a14:	f837 2012 	ldrh.w	r2, [r7, r2, lsl #1]
 8019a18:	920b      	str	r2, [sp, #44]	@ 0x2c
 8019a1a:	b151      	cbz	r1, 8019a32 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x10c>
 8019a1c:	eb0a 0203 	add.w	r2, sl, r3
 8019a20:	f81a 3003 	ldrb.w	r3, [sl, r3]
 8019a24:	f837 3013 	ldrh.w	r3, [r7, r3, lsl #1]
 8019a28:	9309      	str	r3, [sp, #36]	@ 0x24
 8019a2a:	7853      	ldrb	r3, [r2, #1]
 8019a2c:	f837 3013 	ldrh.w	r3, [r7, r3, lsl #1]
 8019a30:	930c      	str	r3, [sp, #48]	@ 0x30
 8019a32:	9b0b      	ldr	r3, [sp, #44]	@ 0x2c
 8019a34:	9d0c      	ldr	r5, [sp, #48]	@ 0x30
 8019a36:	ea4f 4c03 	mov.w	ip, r3, lsl #16
 8019a3a:	f00c 6cfc 	and.w	ip, ip, #132120576	@ 0x7e00000
 8019a3e:	f423 63fc 	bic.w	r3, r3, #2016	@ 0x7e0
 8019a42:	ea4c 0c03 	orr.w	ip, ip, r3
 8019a46:	9b0c      	ldr	r3, [sp, #48]	@ 0x30
 8019a48:	041b      	lsls	r3, r3, #16
 8019a4a:	fb10 f201 	smulbb	r2, r0, r1
 8019a4e:	f003 63fc 	and.w	r3, r3, #132120576	@ 0x7e00000
 8019a52:	f425 65fc 	bic.w	r5, r5, #2016	@ 0x7e0
 8019a56:	10d2      	asrs	r2, r2, #3
 8019a58:	432b      	orrs	r3, r5
 8019a5a:	ebc2 0a40 	rsb	sl, r2, r0, lsl #1
 8019a5e:	4353      	muls	r3, r2
 8019a60:	fb0a 330c 	mla	r3, sl, ip, r3
 8019a64:	ea4f 4c0e 	mov.w	ip, lr, lsl #16
 8019a68:	f00c 6cfc 	and.w	ip, ip, #132120576	@ 0x7e00000
 8019a6c:	f42e 6efc 	bic.w	lr, lr, #2016	@ 0x7e0
 8019a70:	ea4c 0e0e 	orr.w	lr, ip, lr
 8019a74:	f1c1 0c10 	rsb	ip, r1, #16
 8019a78:	ebac 0c00 	sub.w	ip, ip, r0
 8019a7c:	eb02 0c4c 	add.w	ip, r2, ip, lsl #1
 8019a80:	fb0c 3c0e 	mla	ip, ip, lr, r3
 8019a84:	9b09      	ldr	r3, [sp, #36]	@ 0x24
 8019a86:	0418      	lsls	r0, r3, #16
 8019a88:	f000 60fc 	and.w	r0, r0, #132120576	@ 0x7e00000
 8019a8c:	f423 63fc 	bic.w	r3, r3, #2016	@ 0x7e0
 8019a90:	4318      	orrs	r0, r3
 8019a92:	ebc2 0241 	rsb	r2, r2, r1, lsl #1
 8019a96:	fb02 c200 	mla	r2, r2, r0, ip
 8019a9a:	0d53      	lsrs	r3, r2, #21
 8019a9c:	0952      	lsrs	r2, r2, #5
 8019a9e:	f403 63fc 	and.w	r3, r3, #2016	@ 0x7e0
 8019aa2:	f422 62fc 	bic.w	r2, r2, #2016	@ 0x7e0
 8019aa6:	431a      	orrs	r2, r3
 8019aa8:	f8a8 2000 	strh.w	r2, [r8]
 8019aac:	9b1f      	ldr	r3, [sp, #124]	@ 0x7c
 8019aae:	441c      	add	r4, r3
 8019ab0:	9b20      	ldr	r3, [sp, #128]	@ 0x80
 8019ab2:	f108 0802 	add.w	r8, r8, #2
 8019ab6:	441e      	add	r6, r3
 8019ab8:	f10b 3bff 	add.w	fp, fp, #4294967295
 8019abc:	e77c      	b.n	80199b8 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x92>
 8019abe:	9b1f      	ldr	r3, [sp, #124]	@ 0x7c
 8019ac0:	441c      	add	r4, r3
 8019ac2:	9b20      	ldr	r3, [sp, #128]	@ 0x80
 8019ac4:	441e      	add	r6, r3
 8019ac6:	9b06      	ldr	r3, [sp, #24]
 8019ac8:	3b01      	subs	r3, #1
 8019aca:	9306      	str	r3, [sp, #24]
 8019acc:	f109 0902 	add.w	r9, r9, #2
 8019ad0:	e752      	b.n	8019978 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x52>
 8019ad2:	d020      	beq.n	8019b16 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1f0>
 8019ad4:	9b06      	ldr	r3, [sp, #24]
 8019ad6:	981f      	ldr	r0, [sp, #124]	@ 0x7c
 8019ad8:	3b01      	subs	r3, #1
 8019ada:	fb00 4003 	mla	r0, r0, r3, r4
 8019ade:	1400      	asrs	r0, r0, #16
 8019ae0:	f53f af67 	bmi.w	80199b2 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x8c>
 8019ae4:	3901      	subs	r1, #1
 8019ae6:	4288      	cmp	r0, r1
 8019ae8:	f6bf af63 	bge.w	80199b2 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x8c>
 8019aec:	9920      	ldr	r1, [sp, #128]	@ 0x80
 8019aee:	fb01 6303 	mla	r3, r1, r3, r6
 8019af2:	141b      	asrs	r3, r3, #16
 8019af4:	f53f af5d 	bmi.w	80199b2 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x8c>
 8019af8:	3a01      	subs	r2, #1
 8019afa:	4293      	cmp	r3, r2
 8019afc:	f6bf af59 	bge.w	80199b2 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x8c>
 8019b00:	f8dd 8018 	ldr.w	r8, [sp, #24]
 8019b04:	46ca      	mov	sl, r9
 8019b06:	f1b8 0f00 	cmp.w	r8, #0
 8019b0a:	dc67      	bgt.n	8019bdc <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2b6>
 8019b0c:	9b06      	ldr	r3, [sp, #24]
 8019b0e:	ea23 75e3 	bic.w	r5, r3, r3, asr #31
 8019b12:	eb09 0945 	add.w	r9, r9, r5, lsl #1
 8019b16:	9b08      	ldr	r3, [sp, #32]
 8019b18:	2b00      	cmp	r3, #0
 8019b1a:	f340 80d7 	ble.w	8019ccc <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3a6>
 8019b1e:	ee30 0a04 	vadd.f32	s0, s0, s8
 8019b22:	ee70 0aa4 	vadd.f32	s1, s1, s9
 8019b26:	eec6 7a80 	vdiv.f32	s15, s13, s0
 8019b2a:	9b1c      	ldr	r3, [sp, #112]	@ 0x70
 8019b2c:	ee31 1a05 	vadd.f32	s2, s2, s10
 8019b30:	ee20 7aa7 	vmul.f32	s14, s1, s15
 8019b34:	eeb0 6a62 	vmov.f32	s12, s5
 8019b38:	ee61 7a27 	vmul.f32	s15, s2, s15
 8019b3c:	eebe 6ac8 	vcvt.s32.f32	s12, s12, #16
 8019b40:	ee77 2a62 	vsub.f32	s5, s14, s5
 8019b44:	ee16 4a10 	vmov	r4, s12
 8019b48:	eefe 2ac8 	vcvt.s32.f32	s5, s5, #16
 8019b4c:	eeb0 6a43 	vmov.f32	s12, s6
 8019b50:	ee37 3ac3 	vsub.f32	s6, s15, s6
 8019b54:	ee12 2a90 	vmov	r2, s5
 8019b58:	eebe 3ac8 	vcvt.s32.f32	s6, s6, #16
 8019b5c:	fb92 f3f3 	sdiv	r3, r2, r3
 8019b60:	ee13 2a10 	vmov	r2, s6
 8019b64:	931f      	str	r3, [sp, #124]	@ 0x7c
 8019b66:	9b1c      	ldr	r3, [sp, #112]	@ 0x70
 8019b68:	fb92 f3f3 	sdiv	r3, r2, r3
 8019b6c:	9320      	str	r3, [sp, #128]	@ 0x80
 8019b6e:	9b08      	ldr	r3, [sp, #32]
 8019b70:	9a0f      	ldr	r2, [sp, #60]	@ 0x3c
 8019b72:	3b01      	subs	r3, #1
 8019b74:	eebe 6ac8 	vcvt.s32.f32	s12, s12, #16
 8019b78:	9308      	str	r3, [sp, #32]
 8019b7a:	9b1c      	ldr	r3, [sp, #112]	@ 0x70
 8019b7c:	bf08      	it	eq
 8019b7e:	4613      	moveq	r3, r2
 8019b80:	ee16 6a10 	vmov	r6, s12
 8019b84:	9306      	str	r3, [sp, #24]
 8019b86:	eeb0 3a67 	vmov.f32	s6, s15
 8019b8a:	eef0 2a47 	vmov.f32	s5, s14
 8019b8e:	e6e4      	b.n	801995a <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x34>
 8019b90:	2900      	cmp	r1, #0
 8019b92:	f43f af4e 	beq.w	8019a32 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x10c>
 8019b96:	f81a 3003 	ldrb.w	r3, [sl, r3]
 8019b9a:	f837 3013 	ldrh.w	r3, [r7, r3, lsl #1]
 8019b9e:	9309      	str	r3, [sp, #36]	@ 0x24
 8019ba0:	e747      	b.n	8019a32 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x10c>
 8019ba2:	f112 0a01 	adds.w	sl, r2, #1
 8019ba6:	d481      	bmi.n	8019aac <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x186>
 8019ba8:	4553      	cmp	r3, sl
 8019baa:	f6ff af7f 	blt.w	8019aac <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x186>
 8019bae:	f11c 0a01 	adds.w	sl, ip, #1
 8019bb2:	f53f af7b 	bmi.w	8019aac <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x186>
 8019bb6:	45d6      	cmp	lr, sl
 8019bb8:	f6ff af78 	blt.w	8019aac <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x186>
 8019bbc:	e9cd 2c02 	strd	r2, ip, [sp, #8]
 8019bc0:	b21b      	sxth	r3, r3
 8019bc2:	fa0f f28e 	sxth.w	r2, lr
 8019bc6:	e9cd 0104 	strd	r0, r1, [sp, #16]
 8019bca:	9201      	str	r2, [sp, #4]
 8019bcc:	9300      	str	r3, [sp, #0]
 8019bce:	9a07      	ldr	r2, [sp, #28]
 8019bd0:	9810      	ldr	r0, [sp, #64]	@ 0x40
 8019bd2:	463b      	mov	r3, r7
 8019bd4:	4641      	mov	r1, r8
 8019bd6:	f7ff fe21 	bl	801981c <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh>
 8019bda:	e767      	b.n	8019aac <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x186>
 8019bdc:	9b24      	ldr	r3, [sp, #144]	@ 0x90
 8019bde:	9d07      	ldr	r5, [sp, #28]
 8019be0:	f9b3 3008 	ldrsh.w	r3, [r3, #8]
 8019be4:	1422      	asrs	r2, r4, #16
 8019be6:	1431      	asrs	r1, r6, #16
 8019be8:	fb03 2101 	mla	r1, r3, r1, r2
 8019bec:	9a07      	ldr	r2, [sp, #28]
 8019bee:	440a      	add	r2, r1
 8019bf0:	5c69      	ldrb	r1, [r5, r1]
 8019bf2:	f3c4 3e03 	ubfx	lr, r4, #12, #4
 8019bf6:	f3c6 3003 	ubfx	r0, r6, #12, #4
 8019bfa:	f837 1011 	ldrh.w	r1, [r7, r1, lsl #1]
 8019bfe:	f1be 0f00 	cmp.w	lr, #0
 8019c02:	d05c      	beq.n	8019cbe <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x398>
 8019c04:	f892 c001 	ldrb.w	ip, [r2, #1]
 8019c08:	f837 501c 	ldrh.w	r5, [r7, ip, lsl #1]
 8019c0c:	950d      	str	r5, [sp, #52]	@ 0x34
 8019c0e:	b150      	cbz	r0, 8019c26 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x300>
 8019c10:	eb02 0c03 	add.w	ip, r2, r3
 8019c14:	5cd3      	ldrb	r3, [r2, r3]
 8019c16:	f837 3013 	ldrh.w	r3, [r7, r3, lsl #1]
 8019c1a:	930a      	str	r3, [sp, #40]	@ 0x28
 8019c1c:	f89c 3001 	ldrb.w	r3, [ip, #1]
 8019c20:	f837 3013 	ldrh.w	r3, [r7, r3, lsl #1]
 8019c24:	930e      	str	r3, [sp, #56]	@ 0x38
 8019c26:	9b0d      	ldr	r3, [sp, #52]	@ 0x34
 8019c28:	9d0e      	ldr	r5, [sp, #56]	@ 0x38
 8019c2a:	fb1e f200 	smulbb	r2, lr, r0
 8019c2e:	ea4f 4c03 	mov.w	ip, r3, lsl #16
 8019c32:	10d2      	asrs	r2, r2, #3
 8019c34:	f423 63fc 	bic.w	r3, r3, #2016	@ 0x7e0
 8019c38:	f00c 6cfc 	and.w	ip, ip, #132120576	@ 0x7e00000
 8019c3c:	ea4c 0c03 	orr.w	ip, ip, r3
 8019c40:	ebc2 034e 	rsb	r3, r2, lr, lsl #1
 8019c44:	9311      	str	r3, [sp, #68]	@ 0x44
 8019c46:	9b0e      	ldr	r3, [sp, #56]	@ 0x38
 8019c48:	041b      	lsls	r3, r3, #16
 8019c4a:	f425 6bfc 	bic.w	fp, r5, #2016	@ 0x7e0
 8019c4e:	f003 63fc 	and.w	r3, r3, #132120576	@ 0x7e00000
 8019c52:	ea43 030b 	orr.w	r3, r3, fp
 8019c56:	9d11      	ldr	r5, [sp, #68]	@ 0x44
 8019c58:	4353      	muls	r3, r2
 8019c5a:	ea4f 4b01 	mov.w	fp, r1, lsl #16
 8019c5e:	fb05 3c0c 	mla	ip, r5, ip, r3
 8019c62:	f421 61fc 	bic.w	r1, r1, #2016	@ 0x7e0
 8019c66:	f00b 63fc 	and.w	r3, fp, #132120576	@ 0x7e00000
 8019c6a:	ea43 0b01 	orr.w	fp, r3, r1
 8019c6e:	f1c0 0110 	rsb	r1, r0, #16
 8019c72:	9b0a      	ldr	r3, [sp, #40]	@ 0x28
 8019c74:	eba1 0e0e 	sub.w	lr, r1, lr
 8019c78:	eb02 0e4e 	add.w	lr, r2, lr, lsl #1
 8019c7c:	fb0e cc0b 	mla	ip, lr, fp, ip
 8019c80:	ea4f 4b03 	mov.w	fp, r3, lsl #16
 8019c84:	f423 6efc 	bic.w	lr, r3, #2016	@ 0x7e0
 8019c88:	f00b 6bfc 	and.w	fp, fp, #132120576	@ 0x7e00000
 8019c8c:	ea4b 0e0e 	orr.w	lr, fp, lr
 8019c90:	ebc2 0240 	rsb	r2, r2, r0, lsl #1
 8019c94:	fb02 cc0e 	mla	ip, r2, lr, ip
 8019c98:	ea4f 535c 	mov.w	r3, ip, lsr #21
 8019c9c:	ea4f 1c5c 	mov.w	ip, ip, lsr #5
 8019ca0:	f403 63fc 	and.w	r3, r3, #2016	@ 0x7e0
 8019ca4:	f42c 6cfc 	bic.w	ip, ip, #2016	@ 0x7e0
 8019ca8:	ea43 0c0c 	orr.w	ip, r3, ip
 8019cac:	9b1f      	ldr	r3, [sp, #124]	@ 0x7c
 8019cae:	f82a cb02 	strh.w	ip, [sl], #2
 8019cb2:	441c      	add	r4, r3
 8019cb4:	9b20      	ldr	r3, [sp, #128]	@ 0x80
 8019cb6:	f108 38ff 	add.w	r8, r8, #4294967295
 8019cba:	441e      	add	r6, r3
 8019cbc:	e723      	b.n	8019b06 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1e0>
 8019cbe:	2800      	cmp	r0, #0
 8019cc0:	d0b1      	beq.n	8019c26 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x300>
 8019cc2:	5cd3      	ldrb	r3, [r2, r3]
 8019cc4:	f837 3013 	ldrh.w	r3, [r7, r3, lsl #1]
 8019cc8:	930a      	str	r3, [sp, #40]	@ 0x28
 8019cca:	e7ac      	b.n	8019c26 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x300>
 8019ccc:	b013      	add	sp, #76	@ 0x4c
 8019cce:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}

08019cd2 <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhS4_ssiihhh>:
 8019cd2:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8019cd6:	880d      	ldrh	r5, [r1, #0]
 8019cd8:	b087      	sub	sp, #28
 8019cda:	10ef      	asrs	r7, r5, #3
 8019cdc:	ea4f 2a25 	mov.w	sl, r5, asr #8
 8019ce0:	f007 07fc 	and.w	r7, r7, #252	@ 0xfc
 8019ce4:	00ed      	lsls	r5, r5, #3
 8019ce6:	9701      	str	r7, [sp, #4]
 8019ce8:	b2ed      	uxtb	r5, r5
 8019cea:	9502      	str	r5, [sp, #8]
 8019cec:	9d01      	ldr	r5, [sp, #4]
 8019cee:	9103      	str	r1, [sp, #12]
 8019cf0:	e9dd 0612 	ldrd	r0, r6, [sp, #72]	@ 0x48
 8019cf4:	f9bd 9040 	ldrsh.w	r9, [sp, #64]	@ 0x40
 8019cf8:	9902      	ldr	r1, [sp, #8]
 8019cfa:	f9bd b044 	ldrsh.w	fp, [sp, #68]	@ 0x44
 8019cfe:	f89d 4050 	ldrb.w	r4, [sp, #80]	@ 0x50
 8019d02:	f89d e054 	ldrb.w	lr, [sp, #84]	@ 0x54
 8019d06:	f89d 8058 	ldrb.w	r8, [sp, #88]	@ 0x58
 8019d0a:	f00a 0af8 	and.w	sl, sl, #248	@ 0xf8
 8019d0e:	022d      	lsls	r5, r5, #8
 8019d10:	ea45 450a 	orr.w	r5, r5, sl, lsl #16
 8019d14:	fb06 0709 	mla	r7, r6, r9, r0
 8019d18:	430d      	orrs	r5, r1
 8019d1a:	2e00      	cmp	r6, #0
 8019d1c:	eb02 0c07 	add.w	ip, r2, r7
 8019d20:	9505      	str	r5, [sp, #20]
 8019d22:	f2c0 80b6 	blt.w	8019e92 <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhS4_ssiihhh+0x1c0>
 8019d26:	45b3      	cmp	fp, r6
 8019d28:	f340 80b3 	ble.w	8019e92 <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhS4_ssiihhh+0x1c0>
 8019d2c:	2800      	cmp	r0, #0
 8019d2e:	f2c0 80ae 	blt.w	8019e8e <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhS4_ssiihhh+0x1bc>
 8019d32:	4581      	cmp	r9, r0
 8019d34:	f340 80ab 	ble.w	8019e8e <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhS4_ssiihhh+0x1bc>
 8019d38:	5dd7      	ldrb	r7, [r2, r7]
 8019d3a:	eb07 0747 	add.w	r7, r7, r7, lsl #1
 8019d3e:	441f      	add	r7, r3
 8019d40:	1c42      	adds	r2, r0, #1
 8019d42:	f100 80a9 	bmi.w	8019e98 <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhS4_ssiihhh+0x1c6>
 8019d46:	4591      	cmp	r9, r2
 8019d48:	f340 80a6 	ble.w	8019e98 <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhS4_ssiihhh+0x1c6>
 8019d4c:	2c00      	cmp	r4, #0
 8019d4e:	f000 80a3 	beq.w	8019e98 <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhS4_ssiihhh+0x1c6>
 8019d52:	f89c 5001 	ldrb.w	r5, [ip, #1]
 8019d56:	eb05 0545 	add.w	r5, r5, r5, lsl #1
 8019d5a:	441d      	add	r5, r3
 8019d5c:	3601      	adds	r6, #1
 8019d5e:	f100 809f 	bmi.w	8019ea0 <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhS4_ssiihhh+0x1ce>
 8019d62:	45b3      	cmp	fp, r6
 8019d64:	f340 809c 	ble.w	8019ea0 <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhS4_ssiihhh+0x1ce>
 8019d68:	f1be 0f00 	cmp.w	lr, #0
 8019d6c:	f000 8098 	beq.w	8019ea0 <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhS4_ssiihhh+0x1ce>
 8019d70:	2800      	cmp	r0, #0
 8019d72:	f2c0 8093 	blt.w	8019e9c <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhS4_ssiihhh+0x1ca>
 8019d76:	4581      	cmp	r9, r0
 8019d78:	f340 8090 	ble.w	8019e9c <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhS4_ssiihhh+0x1ca>
 8019d7c:	f81c 6009 	ldrb.w	r6, [ip, r9]
 8019d80:	eb06 0646 	add.w	r6, r6, r6, lsl #1
 8019d84:	441e      	add	r6, r3
 8019d86:	3001      	adds	r0, #1
 8019d88:	f100 808d 	bmi.w	8019ea6 <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhS4_ssiihhh+0x1d4>
 8019d8c:	4581      	cmp	r9, r0
 8019d8e:	f340 808a 	ble.w	8019ea6 <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhS4_ssiihhh+0x1d4>
 8019d92:	2c00      	cmp	r4, #0
 8019d94:	f000 8087 	beq.w	8019ea6 <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhS4_ssiihhh+0x1d4>
 8019d98:	44e1      	add	r9, ip
 8019d9a:	f899 2001 	ldrb.w	r2, [r9, #1]
 8019d9e:	eb02 0242 	add.w	r2, r2, r2, lsl #1
 8019da2:	4413      	add	r3, r2
 8019da4:	b2a4      	uxth	r4, r4
 8019da6:	fa1f fe8e 	uxth.w	lr, lr
 8019daa:	fb04 fb0e 	mul.w	fp, r4, lr
 8019dae:	0124      	lsls	r4, r4, #4
 8019db0:	ebcb 1e0e 	rsb	lr, fp, lr, lsl #4
 8019db4:	f5c4 7980 	rsb	r9, r4, #256	@ 0x100
 8019db8:	eba4 040b 	sub.w	r4, r4, fp
 8019dbc:	fa1f f08e 	uxth.w	r0, lr
 8019dc0:	b2a2      	uxth	r2, r4
 8019dc2:	78ac      	ldrb	r4, [r5, #2]
 8019dc4:	f897 c002 	ldrb.w	ip, [r7, #2]
 8019dc8:	9901      	ldr	r1, [sp, #4]
 8019dca:	eba9 0900 	sub.w	r9, r9, r0
 8019dce:	fa1f f989 	uxth.w	r9, r9
 8019dd2:	4354      	muls	r4, r2
 8019dd4:	fb09 440c 	mla	r4, r9, ip, r4
 8019dd8:	f896 c002 	ldrb.w	ip, [r6, #2]
 8019ddc:	fb00 440c 	mla	r4, r0, ip, r4
 8019de0:	f893 c002 	ldrb.w	ip, [r3, #2]
 8019de4:	fa1f fe88 	uxth.w	lr, r8
 8019de8:	ea6f 0808 	mvn.w	r8, r8
 8019dec:	fa5f f888 	uxtb.w	r8, r8
 8019df0:	fb0b 4c0c 	mla	ip, fp, ip, r4
 8019df4:	fb1a fa08 	smulbb	sl, sl, r8
 8019df8:	f3cc 2c07 	ubfx	ip, ip, #8, #8
 8019dfc:	fb0c ac0e 	mla	ip, ip, lr, sl
 8019e00:	f895 a001 	ldrb.w	sl, [r5, #1]
 8019e04:	787c      	ldrb	r4, [r7, #1]
 8019e06:	782d      	ldrb	r5, [r5, #0]
 8019e08:	783f      	ldrb	r7, [r7, #0]
 8019e0a:	fb02 fa0a 	mul.w	sl, r2, sl
 8019e0e:	fb09 aa04 	mla	sl, r9, r4, sl
 8019e12:	7874      	ldrb	r4, [r6, #1]
 8019e14:	436a      	muls	r2, r5
 8019e16:	7835      	ldrb	r5, [r6, #0]
 8019e18:	fb00 aa04 	mla	sl, r0, r4, sl
 8019e1c:	fb09 2207 	mla	r2, r9, r7, r2
 8019e20:	785c      	ldrb	r4, [r3, #1]
 8019e22:	781b      	ldrb	r3, [r3, #0]
 8019e24:	fb00 2005 	mla	r0, r0, r5, r2
 8019e28:	fb0b a404 	mla	r4, fp, r4, sl
 8019e2c:	fb0b 0b03 	mla	fp, fp, r3, r0
 8019e30:	9b02      	ldr	r3, [sp, #8]
 8019e32:	fb11 fa08 	smulbb	sl, r1, r8
 8019e36:	fa1f fc8c 	uxth.w	ip, ip
 8019e3a:	fb13 f808 	smulbb	r8, r3, r8
 8019e3e:	f3cb 2b07 	ubfx	fp, fp, #8, #8
 8019e42:	f3c4 2407 	ubfx	r4, r4, #8, #8
 8019e46:	fb04 a40e 	mla	r4, r4, lr, sl
 8019e4a:	f10c 0301 	add.w	r3, ip, #1
 8019e4e:	fb0b 8e0e 	mla	lr, fp, lr, r8
 8019e52:	fa1f fe8e 	uxth.w	lr, lr
 8019e56:	b2a4      	uxth	r4, r4
 8019e58:	eb03 2c1c 	add.w	ip, r3, ip, lsr #8
 8019e5c:	f40c 4378 	and.w	r3, ip, #63488	@ 0xf800
 8019e60:	f104 0a01 	add.w	sl, r4, #1
 8019e64:	f10e 0c01 	add.w	ip, lr, #1
 8019e68:	eb0c 2c1e 	add.w	ip, ip, lr, lsr #8
 8019e6c:	eb0a 2414 	add.w	r4, sl, r4, lsr #8
 8019e70:	f3cc 2cc4 	ubfx	ip, ip, #11, #5
 8019e74:	0964      	lsrs	r4, r4, #5
 8019e76:	ea4c 0c03 	orr.w	ip, ip, r3
 8019e7a:	f404 64fc 	and.w	r4, r4, #2016	@ 0x7e0
 8019e7e:	9b03      	ldr	r3, [sp, #12]
 8019e80:	ea4c 0c04 	orr.w	ip, ip, r4
 8019e84:	f8a3 c000 	strh.w	ip, [r3]
 8019e88:	b007      	add	sp, #28
 8019e8a:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 8019e8e:	af05      	add	r7, sp, #20
 8019e90:	e756      	b.n	8019d40 <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhS4_ssiihhh+0x6e>
 8019e92:	ad05      	add	r5, sp, #20
 8019e94:	462f      	mov	r7, r5
 8019e96:	e761      	b.n	8019d5c <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhS4_ssiihhh+0x8a>
 8019e98:	ad05      	add	r5, sp, #20
 8019e9a:	e75f      	b.n	8019d5c <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhS4_ssiihhh+0x8a>
 8019e9c:	ae05      	add	r6, sp, #20
 8019e9e:	e772      	b.n	8019d86 <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhS4_ssiihhh+0xb4>
 8019ea0:	ab05      	add	r3, sp, #20
 8019ea2:	461e      	mov	r6, r3
 8019ea4:	e77e      	b.n	8019da4 <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhS4_ssiihhh+0xd2>
 8019ea6:	ab05      	add	r3, sp, #20
 8019ea8:	e77c      	b.n	8019da4 <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhS4_ssiihhh+0xd2>

08019eaa <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff>:
 8019eaa:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8019eae:	b095      	sub	sp, #84	@ 0x54
 8019eb0:	9212      	str	r2, [sp, #72]	@ 0x48
 8019eb2:	9309      	str	r3, [sp, #36]	@ 0x24
 8019eb4:	9a23      	ldr	r2, [sp, #140]	@ 0x8c
 8019eb6:	f89d 309c 	ldrb.w	r3, [sp, #156]	@ 0x9c
 8019eba:	930f      	str	r3, [sp, #60]	@ 0x3c
 8019ebc:	910e      	str	r1, [sp, #56]	@ 0x38
 8019ebe:	e9dd 1324 	ldrd	r1, r3, [sp, #144]	@ 0x90
 8019ec2:	9013      	str	r0, [sp, #76]	@ 0x4c
 8019ec4:	6850      	ldr	r0, [r2, #4]
 8019ec6:	6812      	ldr	r2, [r2, #0]
 8019ec8:	fb00 1303 	mla	r3, r0, r3, r1
 8019ecc:	eb02 0343 	add.w	r3, r2, r3, lsl #1
 8019ed0:	930a      	str	r3, [sp, #40]	@ 0x28
 8019ed2:	9b26      	ldr	r3, [sp, #152]	@ 0x98
 8019ed4:	681b      	ldr	r3, [r3, #0]
 8019ed6:	930d      	str	r3, [sp, #52]	@ 0x34
 8019ed8:	9b26      	ldr	r3, [sp, #152]	@ 0x98
 8019eda:	685c      	ldr	r4, [r3, #4]
 8019edc:	9b0f      	ldr	r3, [sp, #60]	@ 0x3c
 8019ede:	43db      	mvns	r3, r3
 8019ee0:	b2db      	uxtb	r3, r3
 8019ee2:	3404      	adds	r4, #4
 8019ee4:	930b      	str	r3, [sp, #44]	@ 0x2c
 8019ee6:	9b0e      	ldr	r3, [sp, #56]	@ 0x38
 8019ee8:	2b00      	cmp	r3, #0
 8019eea:	dc03      	bgt.n	8019ef4 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x4a>
 8019eec:	9b12      	ldr	r3, [sp, #72]	@ 0x48
 8019eee:	2b00      	cmp	r3, #0
 8019ef0:	f340 8255 	ble.w	801a39e <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x4f4>
 8019ef4:	9b26      	ldr	r3, [sp, #152]	@ 0x98
 8019ef6:	f9b3 1008 	ldrsh.w	r1, [r3, #8]
 8019efa:	f9b3 200c 	ldrsh.w	r2, [r3, #12]
 8019efe:	1e48      	subs	r0, r1, #1
 8019f00:	1e55      	subs	r5, r2, #1
 8019f02:	9b09      	ldr	r3, [sp, #36]	@ 0x24
 8019f04:	2b00      	cmp	r3, #0
 8019f06:	f340 80f9 	ble.w	801a0fc <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x252>
 8019f0a:	9e1f      	ldr	r6, [sp, #124]	@ 0x7c
 8019f0c:	9b20      	ldr	r3, [sp, #128]	@ 0x80
 8019f0e:	1436      	asrs	r6, r6, #16
 8019f10:	ea4f 4323 	mov.w	r3, r3, asr #16
 8019f14:	d406      	bmi.n	8019f24 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x7a>
 8019f16:	4286      	cmp	r6, r0
 8019f18:	da04      	bge.n	8019f24 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x7a>
 8019f1a:	2b00      	cmp	r3, #0
 8019f1c:	db02      	blt.n	8019f24 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x7a>
 8019f1e:	42ab      	cmp	r3, r5
 8019f20:	f2c0 80ed 	blt.w	801a0fe <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x254>
 8019f24:	3601      	adds	r6, #1
 8019f26:	f100 80da 	bmi.w	801a0de <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x234>
 8019f2a:	42b1      	cmp	r1, r6
 8019f2c:	f2c0 80d7 	blt.w	801a0de <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x234>
 8019f30:	3301      	adds	r3, #1
 8019f32:	f100 80d4 	bmi.w	801a0de <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x234>
 8019f36:	429a      	cmp	r2, r3
 8019f38:	f2c0 80d1 	blt.w	801a0de <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x234>
 8019f3c:	9b09      	ldr	r3, [sp, #36]	@ 0x24
 8019f3e:	9311      	str	r3, [sp, #68]	@ 0x44
 8019f40:	9b0a      	ldr	r3, [sp, #40]	@ 0x28
 8019f42:	930c      	str	r3, [sp, #48]	@ 0x30
 8019f44:	9b11      	ldr	r3, [sp, #68]	@ 0x44
 8019f46:	2b00      	cmp	r3, #0
 8019f48:	f340 80fa 	ble.w	801a140 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x296>
 8019f4c:	9826      	ldr	r0, [sp, #152]	@ 0x98
 8019f4e:	9b20      	ldr	r3, [sp, #128]	@ 0x80
 8019f50:	9a20      	ldr	r2, [sp, #128]	@ 0x80
 8019f52:	68c6      	ldr	r6, [r0, #12]
 8019f54:	981f      	ldr	r0, [sp, #124]	@ 0x7c
 8019f56:	141d      	asrs	r5, r3, #16
 8019f58:	f3c2 3103 	ubfx	r1, r2, #12, #4
 8019f5c:	9b1f      	ldr	r3, [sp, #124]	@ 0x7c
 8019f5e:	9a26      	ldr	r2, [sp, #152]	@ 0x98
 8019f60:	1400      	asrs	r0, r0, #16
 8019f62:	f3c3 3303 	ubfx	r3, r3, #12, #4
 8019f66:	6892      	ldr	r2, [r2, #8]
 8019f68:	f100 813e 	bmi.w	801a1e8 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x33e>
 8019f6c:	1e57      	subs	r7, r2, #1
 8019f6e:	42b8      	cmp	r0, r7
 8019f70:	f280 813a 	bge.w	801a1e8 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x33e>
 8019f74:	2d00      	cmp	r5, #0
 8019f76:	f2c0 8137 	blt.w	801a1e8 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x33e>
 8019f7a:	1e77      	subs	r7, r6, #1
 8019f7c:	42bd      	cmp	r5, r7
 8019f7e:	f280 8133 	bge.w	801a1e8 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x33e>
 8019f82:	b212      	sxth	r2, r2
 8019f84:	fb05 0002 	mla	r0, r5, r2, r0
 8019f88:	9d0d      	ldr	r5, [sp, #52]	@ 0x34
 8019f8a:	f815 a000 	ldrb.w	sl, [r5, r0]
 8019f8e:	eb0a 0a4a 	add.w	sl, sl, sl, lsl #1
 8019f92:	182e      	adds	r6, r5, r0
 8019f94:	eb04 050a 	add.w	r5, r4, sl
 8019f98:	2b00      	cmp	r3, #0
 8019f9a:	f000 8117 	beq.w	801a1cc <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x322>
 8019f9e:	f896 c001 	ldrb.w	ip, [r6, #1]
 8019fa2:	eb0c 0c4c 	add.w	ip, ip, ip, lsl #1
 8019fa6:	44a4      	add	ip, r4
 8019fa8:	2900      	cmp	r1, #0
 8019faa:	f000 8117 	beq.w	801a1dc <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x332>
 8019fae:	18b0      	adds	r0, r6, r2
 8019fb0:	5cb2      	ldrb	r2, [r6, r2]
 8019fb2:	7840      	ldrb	r0, [r0, #1]
 8019fb4:	eb02 0242 	add.w	r2, r2, r2, lsl #1
 8019fb8:	eb00 0040 	add.w	r0, r0, r0, lsl #1
 8019fbc:	4422      	add	r2, r4
 8019fbe:	4420      	add	r0, r4
 8019fc0:	b29b      	uxth	r3, r3
 8019fc2:	b289      	uxth	r1, r1
 8019fc4:	fb03 f901 	mul.w	r9, r3, r1
 8019fc8:	ebc9 1101 	rsb	r1, r9, r1, lsl #4
 8019fcc:	011b      	lsls	r3, r3, #4
 8019fce:	b289      	uxth	r1, r1
 8019fd0:	f89c 7002 	ldrb.w	r7, [ip, #2]
 8019fd4:	f895 b002 	ldrb.w	fp, [r5, #2]
 8019fd8:	9e0c      	ldr	r6, [sp, #48]	@ 0x30
 8019fda:	f814 a00a 	ldrb.w	sl, [r4, sl]
 8019fde:	f8b6 e000 	ldrh.w	lr, [r6]
 8019fe2:	f8bd 603c 	ldrh.w	r6, [sp, #60]	@ 0x3c
 8019fe6:	f5c3 7880 	rsb	r8, r3, #256	@ 0x100
 8019fea:	eba3 0309 	sub.w	r3, r3, r9
 8019fee:	b29b      	uxth	r3, r3
 8019ff0:	eba8 0801 	sub.w	r8, r8, r1
 8019ff4:	fa1f f888 	uxth.w	r8, r8
 8019ff8:	435f      	muls	r7, r3
 8019ffa:	fb08 770b 	mla	r7, r8, fp, r7
 8019ffe:	f892 b002 	ldrb.w	fp, [r2, #2]
 801a002:	9310      	str	r3, [sp, #64]	@ 0x40
 801a004:	fb01 770b 	mla	r7, r1, fp, r7
 801a008:	f890 b002 	ldrb.w	fp, [r0, #2]
 801a00c:	9b0b      	ldr	r3, [sp, #44]	@ 0x2c
 801a00e:	fb09 770b 	mla	r7, r9, fp, r7
 801a012:	ea4f 2b2e 	mov.w	fp, lr, asr #8
 801a016:	f00b 0bf8 	and.w	fp, fp, #248	@ 0xf8
 801a01a:	fb1b fb03 	smulbb	fp, fp, r3
 801a01e:	f3c7 2707 	ubfx	r7, r7, #8, #8
 801a022:	fb07 b706 	mla	r7, r7, r6, fp
 801a026:	9b10      	ldr	r3, [sp, #64]	@ 0x40
 801a028:	f895 b001 	ldrb.w	fp, [r5, #1]
 801a02c:	f89c 5001 	ldrb.w	r5, [ip, #1]
 801a030:	f89c c000 	ldrb.w	ip, [ip]
 801a034:	435d      	muls	r5, r3
 801a036:	fb08 550b 	mla	r5, r8, fp, r5
 801a03a:	f892 b001 	ldrb.w	fp, [r2, #1]
 801a03e:	9b0b      	ldr	r3, [sp, #44]	@ 0x2c
 801a040:	fb01 550b 	mla	r5, r1, fp, r5
 801a044:	f890 b001 	ldrb.w	fp, [r0, #1]
 801a048:	fb09 550b 	mla	r5, r9, fp, r5
 801a04c:	ea4f 0bee 	mov.w	fp, lr, asr #3
 801a050:	f00b 0bfc 	and.w	fp, fp, #252	@ 0xfc
 801a054:	fb1b fb03 	smulbb	fp, fp, r3
 801a058:	9b10      	ldr	r3, [sp, #64]	@ 0x40
 801a05a:	fb03 f30c 	mul.w	r3, r3, ip
 801a05e:	f892 c000 	ldrb.w	ip, [r2]
 801a062:	fb08 330a 	mla	r3, r8, sl, r3
 801a066:	fb01 330c 	mla	r3, r1, ip, r3
 801a06a:	f890 c000 	ldrb.w	ip, [r0]
 801a06e:	ea4f 0ece 	mov.w	lr, lr, lsl #3
 801a072:	fb09 3c0c 	mla	ip, r9, ip, r3
 801a076:	9b0b      	ldr	r3, [sp, #44]	@ 0x2c
 801a078:	fa5f fe8e 	uxtb.w	lr, lr
 801a07c:	b2bf      	uxth	r7, r7
 801a07e:	fb1e fe03 	smulbb	lr, lr, r3
 801a082:	f3c5 2507 	ubfx	r5, r5, #8, #8
 801a086:	f3cc 2c07 	ubfx	ip, ip, #8, #8
 801a08a:	fb05 b506 	mla	r5, r5, r6, fp
 801a08e:	1c7b      	adds	r3, r7, #1
 801a090:	fb0c e606 	mla	r6, ip, r6, lr
 801a094:	b2ad      	uxth	r5, r5
 801a096:	b2b6      	uxth	r6, r6
 801a098:	eb03 2717 	add.w	r7, r3, r7, lsr #8
 801a09c:	f407 4378 	and.w	r3, r7, #63488	@ 0xf800
 801a0a0:	f105 0b01 	add.w	fp, r5, #1
 801a0a4:	1c77      	adds	r7, r6, #1
 801a0a6:	eb07 2716 	add.w	r7, r7, r6, lsr #8
 801a0aa:	eb0b 2515 	add.w	r5, fp, r5, lsr #8
 801a0ae:	f3c7 27c4 	ubfx	r7, r7, #11, #5
 801a0b2:	096d      	lsrs	r5, r5, #5
 801a0b4:	431f      	orrs	r7, r3
 801a0b6:	f405 65fc 	and.w	r5, r5, #2016	@ 0x7e0
 801a0ba:	9b0c      	ldr	r3, [sp, #48]	@ 0x30
 801a0bc:	433d      	orrs	r5, r7
 801a0be:	801d      	strh	r5, [r3, #0]
 801a0c0:	9b0c      	ldr	r3, [sp, #48]	@ 0x30
 801a0c2:	9a21      	ldr	r2, [sp, #132]	@ 0x84
 801a0c4:	3302      	adds	r3, #2
 801a0c6:	930c      	str	r3, [sp, #48]	@ 0x30
 801a0c8:	9b1f      	ldr	r3, [sp, #124]	@ 0x7c
 801a0ca:	4413      	add	r3, r2
 801a0cc:	931f      	str	r3, [sp, #124]	@ 0x7c
 801a0ce:	9a22      	ldr	r2, [sp, #136]	@ 0x88
 801a0d0:	9b20      	ldr	r3, [sp, #128]	@ 0x80
 801a0d2:	4413      	add	r3, r2
 801a0d4:	9320      	str	r3, [sp, #128]	@ 0x80
 801a0d6:	9b11      	ldr	r3, [sp, #68]	@ 0x44
 801a0d8:	3b01      	subs	r3, #1
 801a0da:	9311      	str	r3, [sp, #68]	@ 0x44
 801a0dc:	e732      	b.n	8019f44 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x9a>
 801a0de:	9b1f      	ldr	r3, [sp, #124]	@ 0x7c
 801a0e0:	9e21      	ldr	r6, [sp, #132]	@ 0x84
 801a0e2:	4433      	add	r3, r6
 801a0e4:	931f      	str	r3, [sp, #124]	@ 0x7c
 801a0e6:	9e22      	ldr	r6, [sp, #136]	@ 0x88
 801a0e8:	9b20      	ldr	r3, [sp, #128]	@ 0x80
 801a0ea:	4433      	add	r3, r6
 801a0ec:	9320      	str	r3, [sp, #128]	@ 0x80
 801a0ee:	9b09      	ldr	r3, [sp, #36]	@ 0x24
 801a0f0:	3b01      	subs	r3, #1
 801a0f2:	9309      	str	r3, [sp, #36]	@ 0x24
 801a0f4:	9b0a      	ldr	r3, [sp, #40]	@ 0x28
 801a0f6:	3302      	adds	r3, #2
 801a0f8:	930a      	str	r3, [sp, #40]	@ 0x28
 801a0fa:	e702      	b.n	8019f02 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x58>
 801a0fc:	d027      	beq.n	801a14e <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2a4>
 801a0fe:	9b09      	ldr	r3, [sp, #36]	@ 0x24
 801a100:	9821      	ldr	r0, [sp, #132]	@ 0x84
 801a102:	9d1f      	ldr	r5, [sp, #124]	@ 0x7c
 801a104:	3b01      	subs	r3, #1
 801a106:	fb00 5003 	mla	r0, r0, r3, r5
 801a10a:	1400      	asrs	r0, r0, #16
 801a10c:	f53f af16 	bmi.w	8019f3c <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x92>
 801a110:	3901      	subs	r1, #1
 801a112:	4288      	cmp	r0, r1
 801a114:	f6bf af12 	bge.w	8019f3c <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x92>
 801a118:	9922      	ldr	r1, [sp, #136]	@ 0x88
 801a11a:	9820      	ldr	r0, [sp, #128]	@ 0x80
 801a11c:	fb01 0303 	mla	r3, r1, r3, r0
 801a120:	141b      	asrs	r3, r3, #16
 801a122:	f53f af0b 	bmi.w	8019f3c <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x92>
 801a126:	3a01      	subs	r2, #1
 801a128:	4293      	cmp	r3, r2
 801a12a:	f6bf af07 	bge.w	8019f3c <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x92>
 801a12e:	9b09      	ldr	r3, [sp, #36]	@ 0x24
 801a130:	9311      	str	r3, [sp, #68]	@ 0x44
 801a132:	f8bd a03c 	ldrh.w	sl, [sp, #60]	@ 0x3c
 801a136:	9b0a      	ldr	r3, [sp, #40]	@ 0x28
 801a138:	930c      	str	r3, [sp, #48]	@ 0x30
 801a13a:	9b11      	ldr	r3, [sp, #68]	@ 0x44
 801a13c:	2b00      	cmp	r3, #0
 801a13e:	dc70      	bgt.n	801a222 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x378>
 801a140:	9b09      	ldr	r3, [sp, #36]	@ 0x24
 801a142:	9a0a      	ldr	r2, [sp, #40]	@ 0x28
 801a144:	ea23 73e3 	bic.w	r3, r3, r3, asr #31
 801a148:	eb02 0343 	add.w	r3, r2, r3, lsl #1
 801a14c:	930a      	str	r3, [sp, #40]	@ 0x28
 801a14e:	9b0e      	ldr	r3, [sp, #56]	@ 0x38
 801a150:	2b00      	cmp	r3, #0
 801a152:	f340 8124 	ble.w	801a39e <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x4f4>
 801a156:	ee30 0a04 	vadd.f32	s0, s0, s8
 801a15a:	eeb7 7a00 	vmov.f32	s14, #112	@ 0x3f800000  1.0
 801a15e:	eec7 7a00 	vdiv.f32	s15, s14, s0
 801a162:	9b1e      	ldr	r3, [sp, #120]	@ 0x78
 801a164:	ee70 0aa4 	vadd.f32	s1, s1, s9
 801a168:	ee31 1a05 	vadd.f32	s2, s2, s10
 801a16c:	ee20 7aa7 	vmul.f32	s14, s1, s15
 801a170:	eef0 6a62 	vmov.f32	s13, s5
 801a174:	ee61 7a27 	vmul.f32	s15, s2, s15
 801a178:	eefe 6ac8 	vcvt.s32.f32	s13, s13, #16
 801a17c:	ee77 2a62 	vsub.f32	s5, s14, s5
 801a180:	edcd 6a1f 	vstr	s13, [sp, #124]	@ 0x7c
 801a184:	eefe 2ac8 	vcvt.s32.f32	s5, s5, #16
 801a188:	eef0 6a43 	vmov.f32	s13, s6
 801a18c:	ee37 3ac3 	vsub.f32	s6, s15, s6
 801a190:	ee12 2a90 	vmov	r2, s5
 801a194:	eebe 3ac8 	vcvt.s32.f32	s6, s6, #16
 801a198:	fb92 f3f3 	sdiv	r3, r2, r3
 801a19c:	ee13 2a10 	vmov	r2, s6
 801a1a0:	9321      	str	r3, [sp, #132]	@ 0x84
 801a1a2:	9b1e      	ldr	r3, [sp, #120]	@ 0x78
 801a1a4:	fb92 f3f3 	sdiv	r3, r2, r3
 801a1a8:	9322      	str	r3, [sp, #136]	@ 0x88
 801a1aa:	9b0e      	ldr	r3, [sp, #56]	@ 0x38
 801a1ac:	9a12      	ldr	r2, [sp, #72]	@ 0x48
 801a1ae:	3b01      	subs	r3, #1
 801a1b0:	eefe 6ac8 	vcvt.s32.f32	s13, s13, #16
 801a1b4:	930e      	str	r3, [sp, #56]	@ 0x38
 801a1b6:	9b1e      	ldr	r3, [sp, #120]	@ 0x78
 801a1b8:	edcd 6a20 	vstr	s13, [sp, #128]	@ 0x80
 801a1bc:	bf08      	it	eq
 801a1be:	4613      	moveq	r3, r2
 801a1c0:	9309      	str	r3, [sp, #36]	@ 0x24
 801a1c2:	eeb0 3a67 	vmov.f32	s6, s15
 801a1c6:	eef0 2a47 	vmov.f32	s5, s14
 801a1ca:	e68c      	b.n	8019ee6 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3c>
 801a1cc:	b149      	cbz	r1, 801a1e2 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x338>
 801a1ce:	5cb2      	ldrb	r2, [r6, r2]
 801a1d0:	eb02 0242 	add.w	r2, r2, r2, lsl #1
 801a1d4:	4422      	add	r2, r4
 801a1d6:	4628      	mov	r0, r5
 801a1d8:	46ac      	mov	ip, r5
 801a1da:	e6f1      	b.n	8019fc0 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x116>
 801a1dc:	4628      	mov	r0, r5
 801a1de:	462a      	mov	r2, r5
 801a1e0:	e6ee      	b.n	8019fc0 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x116>
 801a1e2:	4628      	mov	r0, r5
 801a1e4:	462a      	mov	r2, r5
 801a1e6:	e7f7      	b.n	801a1d8 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x32e>
 801a1e8:	1c47      	adds	r7, r0, #1
 801a1ea:	f53f af69 	bmi.w	801a0c0 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x216>
 801a1ee:	42ba      	cmp	r2, r7
 801a1f0:	f6ff af66 	blt.w	801a0c0 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x216>
 801a1f4:	1c6f      	adds	r7, r5, #1
 801a1f6:	f53f af63 	bmi.w	801a0c0 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x216>
 801a1fa:	42be      	cmp	r6, r7
 801a1fc:	f6ff af60 	blt.w	801a0c0 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x216>
 801a200:	9f0f      	ldr	r7, [sp, #60]	@ 0x3c
 801a202:	9002      	str	r0, [sp, #8]
 801a204:	b236      	sxth	r6, r6
 801a206:	b212      	sxth	r2, r2
 801a208:	e9cd 1705 	strd	r1, r7, [sp, #20]
 801a20c:	e9cd 5303 	strd	r5, r3, [sp, #12]
 801a210:	9200      	str	r2, [sp, #0]
 801a212:	9601      	str	r6, [sp, #4]
 801a214:	4623      	mov	r3, r4
 801a216:	e9dd 120c 	ldrd	r1, r2, [sp, #48]	@ 0x30
 801a21a:	9813      	ldr	r0, [sp, #76]	@ 0x4c
 801a21c:	f7ff fd59 	bl	8019cd2 <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhS4_ssiihhh>
 801a220:	e74e      	b.n	801a0c0 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x216>
 801a222:	9a20      	ldr	r2, [sp, #128]	@ 0x80
 801a224:	9820      	ldr	r0, [sp, #128]	@ 0x80
 801a226:	9d1f      	ldr	r5, [sp, #124]	@ 0x7c
 801a228:	9b1f      	ldr	r3, [sp, #124]	@ 0x7c
 801a22a:	f3c2 3103 	ubfx	r1, r2, #12, #4
 801a22e:	9a26      	ldr	r2, [sp, #152]	@ 0x98
 801a230:	f9b2 2008 	ldrsh.w	r2, [r2, #8]
 801a234:	142d      	asrs	r5, r5, #16
 801a236:	1400      	asrs	r0, r0, #16
 801a238:	fb02 5000 	mla	r0, r2, r0, r5
 801a23c:	9d0d      	ldr	r5, [sp, #52]	@ 0x34
 801a23e:	f815 9000 	ldrb.w	r9, [r5, r0]
 801a242:	f3c3 3303 	ubfx	r3, r3, #12, #4
 801a246:	eb09 0949 	add.w	r9, r9, r9, lsl #1
 801a24a:	182e      	adds	r6, r5, r0
 801a24c:	eb04 0509 	add.w	r5, r4, r9
 801a250:	2b00      	cmp	r3, #0
 801a252:	f000 8096 	beq.w	801a382 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x4d8>
 801a256:	7877      	ldrb	r7, [r6, #1]
 801a258:	eb07 0747 	add.w	r7, r7, r7, lsl #1
 801a25c:	4427      	add	r7, r4
 801a25e:	2900      	cmp	r1, #0
 801a260:	f000 8097 	beq.w	801a392 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x4e8>
 801a264:	18b0      	adds	r0, r6, r2
 801a266:	5cb2      	ldrb	r2, [r6, r2]
 801a268:	7840      	ldrb	r0, [r0, #1]
 801a26a:	eb02 0242 	add.w	r2, r2, r2, lsl #1
 801a26e:	eb00 0040 	add.w	r0, r0, r0, lsl #1
 801a272:	4422      	add	r2, r4
 801a274:	4420      	add	r0, r4
 801a276:	b29b      	uxth	r3, r3
 801a278:	b289      	uxth	r1, r1
 801a27a:	fb03 f801 	mul.w	r8, r3, r1
 801a27e:	9e0c      	ldr	r6, [sp, #48]	@ 0x30
 801a280:	f895 b002 	ldrb.w	fp, [r5, #2]
 801a284:	f8b6 c000 	ldrh.w	ip, [r6]
 801a288:	78be      	ldrb	r6, [r7, #2]
 801a28a:	f814 9009 	ldrb.w	r9, [r4, r9]
 801a28e:	011b      	lsls	r3, r3, #4
 801a290:	ebc8 1101 	rsb	r1, r8, r1, lsl #4
 801a294:	b289      	uxth	r1, r1
 801a296:	f5c3 7e80 	rsb	lr, r3, #256	@ 0x100
 801a29a:	eba3 0308 	sub.w	r3, r3, r8
 801a29e:	b29b      	uxth	r3, r3
 801a2a0:	ebae 0e01 	sub.w	lr, lr, r1
 801a2a4:	fa1f fe8e 	uxth.w	lr, lr
 801a2a8:	435e      	muls	r6, r3
 801a2aa:	fb0e 660b 	mla	r6, lr, fp, r6
 801a2ae:	f892 b002 	ldrb.w	fp, [r2, #2]
 801a2b2:	9310      	str	r3, [sp, #64]	@ 0x40
 801a2b4:	fb01 660b 	mla	r6, r1, fp, r6
 801a2b8:	f890 b002 	ldrb.w	fp, [r0, #2]
 801a2bc:	9b0b      	ldr	r3, [sp, #44]	@ 0x2c
 801a2be:	fb08 660b 	mla	r6, r8, fp, r6
 801a2c2:	ea4f 2b2c 	mov.w	fp, ip, asr #8
 801a2c6:	f00b 0bf8 	and.w	fp, fp, #248	@ 0xf8
 801a2ca:	fb1b fb03 	smulbb	fp, fp, r3
 801a2ce:	f3c6 2607 	ubfx	r6, r6, #8, #8
 801a2d2:	fb06 b60a 	mla	r6, r6, sl, fp
 801a2d6:	9b10      	ldr	r3, [sp, #64]	@ 0x40
 801a2d8:	f895 b001 	ldrb.w	fp, [r5, #1]
 801a2dc:	787d      	ldrb	r5, [r7, #1]
 801a2de:	783f      	ldrb	r7, [r7, #0]
 801a2e0:	435d      	muls	r5, r3
 801a2e2:	fb0e 550b 	mla	r5, lr, fp, r5
 801a2e6:	f892 b001 	ldrb.w	fp, [r2, #1]
 801a2ea:	9b0b      	ldr	r3, [sp, #44]	@ 0x2c
 801a2ec:	fb01 550b 	mla	r5, r1, fp, r5
 801a2f0:	f890 b001 	ldrb.w	fp, [r0, #1]
 801a2f4:	fb08 550b 	mla	r5, r8, fp, r5
 801a2f8:	ea4f 0bec 	mov.w	fp, ip, asr #3
 801a2fc:	f00b 0bfc 	and.w	fp, fp, #252	@ 0xfc
 801a300:	fb1b fb03 	smulbb	fp, fp, r3
 801a304:	9b10      	ldr	r3, [sp, #64]	@ 0x40
 801a306:	437b      	muls	r3, r7
 801a308:	7817      	ldrb	r7, [r2, #0]
 801a30a:	fb0e 3309 	mla	r3, lr, r9, r3
 801a30e:	fb01 3307 	mla	r3, r1, r7, r3
 801a312:	7807      	ldrb	r7, [r0, #0]
 801a314:	ea4f 0ccc 	mov.w	ip, ip, lsl #3
 801a318:	fb08 3707 	mla	r7, r8, r7, r3
 801a31c:	9b0b      	ldr	r3, [sp, #44]	@ 0x2c
 801a31e:	fa5f fc8c 	uxtb.w	ip, ip
 801a322:	fb1c fc03 	smulbb	ip, ip, r3
 801a326:	f3c5 2507 	ubfx	r5, r5, #8, #8
 801a32a:	f3c7 2707 	ubfx	r7, r7, #8, #8
 801a32e:	fb05 b50a 	mla	r5, r5, sl, fp
 801a332:	fb07 c70a 	mla	r7, r7, sl, ip
 801a336:	b2b6      	uxth	r6, r6
 801a338:	b2ad      	uxth	r5, r5
 801a33a:	b2bf      	uxth	r7, r7
 801a33c:	1c73      	adds	r3, r6, #1
 801a33e:	1c7a      	adds	r2, r7, #1
 801a340:	f105 0b01 	add.w	fp, r5, #1
 801a344:	eb03 2616 	add.w	r6, r3, r6, lsr #8
 801a348:	eb02 2217 	add.w	r2, r2, r7, lsr #8
 801a34c:	eb0b 2515 	add.w	r5, fp, r5, lsr #8
 801a350:	f3c2 22c4 	ubfx	r2, r2, #11, #5
 801a354:	f406 4678 	and.w	r6, r6, #63488	@ 0xf800
 801a358:	096d      	lsrs	r5, r5, #5
 801a35a:	9b0c      	ldr	r3, [sp, #48]	@ 0x30
 801a35c:	4316      	orrs	r6, r2
 801a35e:	f405 65fc 	and.w	r5, r5, #2016	@ 0x7e0
 801a362:	432e      	orrs	r6, r5
 801a364:	f823 6b02 	strh.w	r6, [r3], #2
 801a368:	9a21      	ldr	r2, [sp, #132]	@ 0x84
 801a36a:	930c      	str	r3, [sp, #48]	@ 0x30
 801a36c:	9b1f      	ldr	r3, [sp, #124]	@ 0x7c
 801a36e:	4413      	add	r3, r2
 801a370:	931f      	str	r3, [sp, #124]	@ 0x7c
 801a372:	9a22      	ldr	r2, [sp, #136]	@ 0x88
 801a374:	9b20      	ldr	r3, [sp, #128]	@ 0x80
 801a376:	4413      	add	r3, r2
 801a378:	9320      	str	r3, [sp, #128]	@ 0x80
 801a37a:	9b11      	ldr	r3, [sp, #68]	@ 0x44
 801a37c:	3b01      	subs	r3, #1
 801a37e:	9311      	str	r3, [sp, #68]	@ 0x44
 801a380:	e6db      	b.n	801a13a <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x290>
 801a382:	b149      	cbz	r1, 801a398 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x4ee>
 801a384:	5cb2      	ldrb	r2, [r6, r2]
 801a386:	eb02 0242 	add.w	r2, r2, r2, lsl #1
 801a38a:	4422      	add	r2, r4
 801a38c:	4628      	mov	r0, r5
 801a38e:	462f      	mov	r7, r5
 801a390:	e771      	b.n	801a276 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3cc>
 801a392:	4628      	mov	r0, r5
 801a394:	462a      	mov	r2, r5
 801a396:	e76e      	b.n	801a276 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3cc>
 801a398:	4628      	mov	r0, r5
 801a39a:	462a      	mov	r2, r5
 801a39c:	e7f7      	b.n	801a38e <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x4e4>
 801a39e:	b015      	add	sp, #84	@ 0x54
 801a3a0:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}

0801a3a4 <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhS4_ssiihh>:
 801a3a4:	e92d 4ff7 	stmdb	sp!, {r0, r1, r2, r4, r5, r6, r7, r8, r9, sl, fp, lr}
 801a3a8:	880f      	ldrh	r7, [r1, #0]
 801a3aa:	f9bd e030 	ldrsh.w	lr, [sp, #48]	@ 0x30
 801a3ae:	f9bd 9034 	ldrsh.w	r9, [sp, #52]	@ 0x34
 801a3b2:	f89d 0040 	ldrb.w	r0, [sp, #64]	@ 0x40
 801a3b6:	f89d 6044 	ldrb.w	r6, [sp, #68]	@ 0x44
 801a3ba:	023c      	lsls	r4, r7, #8
 801a3bc:	e9dd c50e 	ldrd	ip, r5, [sp, #56]	@ 0x38
 801a3c0:	f404 0b78 	and.w	fp, r4, #16252928	@ 0xf80000
 801a3c4:	017c      	lsls	r4, r7, #5
 801a3c6:	f404 447c 	and.w	r4, r4, #64512	@ 0xfc00
 801a3ca:	00ff      	lsls	r7, r7, #3
 801a3cc:	ea4b 0404 	orr.w	r4, fp, r4
 801a3d0:	b2ff      	uxtb	r7, r7
 801a3d2:	fb05 ca0e 	mla	sl, r5, lr, ip
 801a3d6:	4327      	orrs	r7, r4
 801a3d8:	2d00      	cmp	r5, #0
 801a3da:	eb02 080a 	add.w	r8, r2, sl
 801a3de:	9701      	str	r7, [sp, #4]
 801a3e0:	db7e      	blt.n	801a4e0 <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhS4_ssiihh+0x13c>
 801a3e2:	45a9      	cmp	r9, r5
 801a3e4:	dd7c      	ble.n	801a4e0 <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhS4_ssiihh+0x13c>
 801a3e6:	f1bc 0f00 	cmp.w	ip, #0
 801a3ea:	db77      	blt.n	801a4dc <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhS4_ssiihh+0x138>
 801a3ec:	45e6      	cmp	lr, ip
 801a3ee:	dd75      	ble.n	801a4dc <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhS4_ssiihh+0x138>
 801a3f0:	f812 700a 	ldrb.w	r7, [r2, sl]
 801a3f4:	eb07 0747 	add.w	r7, r7, r7, lsl #1
 801a3f8:	441f      	add	r7, r3
 801a3fa:	f11c 0201 	adds.w	r2, ip, #1
 801a3fe:	d472      	bmi.n	801a4e6 <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhS4_ssiihh+0x142>
 801a400:	4596      	cmp	lr, r2
 801a402:	dd70      	ble.n	801a4e6 <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhS4_ssiihh+0x142>
 801a404:	2800      	cmp	r0, #0
 801a406:	d06e      	beq.n	801a4e6 <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhS4_ssiihh+0x142>
 801a408:	f898 4001 	ldrb.w	r4, [r8, #1]
 801a40c:	eb04 0444 	add.w	r4, r4, r4, lsl #1
 801a410:	441c      	add	r4, r3
 801a412:	3501      	adds	r5, #1
 801a414:	d46b      	bmi.n	801a4ee <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhS4_ssiihh+0x14a>
 801a416:	45a9      	cmp	r9, r5
 801a418:	dd69      	ble.n	801a4ee <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhS4_ssiihh+0x14a>
 801a41a:	2e00      	cmp	r6, #0
 801a41c:	d067      	beq.n	801a4ee <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhS4_ssiihh+0x14a>
 801a41e:	f1bc 0f00 	cmp.w	ip, #0
 801a422:	db62      	blt.n	801a4ea <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhS4_ssiihh+0x146>
 801a424:	45e6      	cmp	lr, ip
 801a426:	dd60      	ble.n	801a4ea <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhS4_ssiihh+0x146>
 801a428:	f818 500e 	ldrb.w	r5, [r8, lr]
 801a42c:	eb05 0545 	add.w	r5, r5, r5, lsl #1
 801a430:	441d      	add	r5, r3
 801a432:	f11c 0201 	adds.w	r2, ip, #1
 801a436:	d45d      	bmi.n	801a4f4 <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhS4_ssiihh+0x150>
 801a438:	4596      	cmp	lr, r2
 801a43a:	dd5b      	ble.n	801a4f4 <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhS4_ssiihh+0x150>
 801a43c:	2800      	cmp	r0, #0
 801a43e:	d059      	beq.n	801a4f4 <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhS4_ssiihh+0x150>
 801a440:	44c6      	add	lr, r8
 801a442:	f89e 2001 	ldrb.w	r2, [lr, #1]
 801a446:	eb02 0242 	add.w	r2, r2, r2, lsl #1
 801a44a:	4413      	add	r3, r2
 801a44c:	b280      	uxth	r0, r0
 801a44e:	b2b2      	uxth	r2, r6
 801a450:	fb00 f602 	mul.w	r6, r0, r2
 801a454:	0100      	lsls	r0, r0, #4
 801a456:	ebc6 1202 	rsb	r2, r6, r2, lsl #4
 801a45a:	f5c0 7880 	rsb	r8, r0, #256	@ 0x100
 801a45e:	1b80      	subs	r0, r0, r6
 801a460:	fa1f fc82 	uxth.w	ip, r2
 801a464:	b282      	uxth	r2, r0
 801a466:	78a0      	ldrb	r0, [r4, #2]
 801a468:	f897 e002 	ldrb.w	lr, [r7, #2]
 801a46c:	f897 9000 	ldrb.w	r9, [r7]
 801a470:	787f      	ldrb	r7, [r7, #1]
 801a472:	eba8 080c 	sub.w	r8, r8, ip
 801a476:	fa1f f888 	uxth.w	r8, r8
 801a47a:	4350      	muls	r0, r2
 801a47c:	fb08 0e0e 	mla	lr, r8, lr, r0
 801a480:	78a8      	ldrb	r0, [r5, #2]
 801a482:	fb0c e000 	mla	r0, ip, r0, lr
 801a486:	f893 e002 	ldrb.w	lr, [r3, #2]
 801a48a:	fb06 0e0e 	mla	lr, r6, lr, r0
 801a48e:	f40e 4078 	and.w	r0, lr, #63488	@ 0xf800
 801a492:	f894 e000 	ldrb.w	lr, [r4]
 801a496:	fb02 fe0e 	mul.w	lr, r2, lr
 801a49a:	fb08 e909 	mla	r9, r8, r9, lr
 801a49e:	f895 e000 	ldrb.w	lr, [r5]
 801a4a2:	fb0c 990e 	mla	r9, ip, lr, r9
 801a4a6:	f893 e000 	ldrb.w	lr, [r3]
 801a4aa:	785b      	ldrb	r3, [r3, #1]
 801a4ac:	fb06 9e0e 	mla	lr, r6, lr, r9
 801a4b0:	f3ce 2ec4 	ubfx	lr, lr, #11, #5
 801a4b4:	ea4e 0e00 	orr.w	lr, lr, r0
 801a4b8:	7860      	ldrb	r0, [r4, #1]
 801a4ba:	4350      	muls	r0, r2
 801a4bc:	786a      	ldrb	r2, [r5, #1]
 801a4be:	fb08 0007 	mla	r0, r8, r7, r0
 801a4c2:	fb0c 0202 	mla	r2, ip, r2, r0
 801a4c6:	fb06 2303 	mla	r3, r6, r3, r2
 801a4ca:	095b      	lsrs	r3, r3, #5
 801a4cc:	f403 63fc 	and.w	r3, r3, #2016	@ 0x7e0
 801a4d0:	ea4e 0303 	orr.w	r3, lr, r3
 801a4d4:	800b      	strh	r3, [r1, #0]
 801a4d6:	b003      	add	sp, #12
 801a4d8:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 801a4dc:	af01      	add	r7, sp, #4
 801a4de:	e78c      	b.n	801a3fa <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhS4_ssiihh+0x56>
 801a4e0:	ac01      	add	r4, sp, #4
 801a4e2:	4627      	mov	r7, r4
 801a4e4:	e795      	b.n	801a412 <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhS4_ssiihh+0x6e>
 801a4e6:	ac01      	add	r4, sp, #4
 801a4e8:	e793      	b.n	801a412 <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhS4_ssiihh+0x6e>
 801a4ea:	ad01      	add	r5, sp, #4
 801a4ec:	e7a1      	b.n	801a432 <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhS4_ssiihh+0x8e>
 801a4ee:	ab01      	add	r3, sp, #4
 801a4f0:	461d      	mov	r5, r3
 801a4f2:	e7ab      	b.n	801a44c <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhS4_ssiihh+0xa8>
 801a4f4:	ab01      	add	r3, sp, #4
 801a4f6:	e7a9      	b.n	801a44c <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhS4_ssiihh+0xa8>

0801a4f8 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff>:
 801a4f8:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 801a4fc:	b08f      	sub	sp, #60	@ 0x3c
 801a4fe:	e9dd b519 	ldrd	fp, r5, [sp, #100]	@ 0x64
 801a502:	920c      	str	r2, [sp, #48]	@ 0x30
 801a504:	9a1d      	ldr	r2, [sp, #116]	@ 0x74
 801a506:	910a      	str	r1, [sp, #40]	@ 0x28
 801a508:	9306      	str	r3, [sp, #24]
 801a50a:	e9dd 131e 	ldrd	r1, r3, [sp, #120]	@ 0x78
 801a50e:	900d      	str	r0, [sp, #52]	@ 0x34
 801a510:	6850      	ldr	r0, [r2, #4]
 801a512:	6812      	ldr	r2, [r2, #0]
 801a514:	fb00 1303 	mla	r3, r0, r3, r1
 801a518:	eb02 0343 	add.w	r3, r2, r3, lsl #1
 801a51c:	9307      	str	r3, [sp, #28]
 801a51e:	9b20      	ldr	r3, [sp, #128]	@ 0x80
 801a520:	681b      	ldr	r3, [r3, #0]
 801a522:	9308      	str	r3, [sp, #32]
 801a524:	9b20      	ldr	r3, [sp, #128]	@ 0x80
 801a526:	685c      	ldr	r4, [r3, #4]
 801a528:	3404      	adds	r4, #4
 801a52a:	9b0a      	ldr	r3, [sp, #40]	@ 0x28
 801a52c:	2b00      	cmp	r3, #0
 801a52e:	dc03      	bgt.n	801a538 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x40>
 801a530:	9b0c      	ldr	r3, [sp, #48]	@ 0x30
 801a532:	2b00      	cmp	r3, #0
 801a534:	f340 81d6 	ble.w	801a8e4 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3ec>
 801a538:	9b20      	ldr	r3, [sp, #128]	@ 0x80
 801a53a:	f9b3 1008 	ldrsh.w	r1, [r3, #8]
 801a53e:	f9b3 200c 	ldrsh.w	r2, [r3, #12]
 801a542:	1e48      	subs	r0, r1, #1
 801a544:	1e56      	subs	r6, r2, #1
 801a546:	9b06      	ldr	r3, [sp, #24]
 801a548:	2b00      	cmp	r3, #0
 801a54a:	f340 80b7 	ble.w	801a6bc <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1c4>
 801a54e:	ea5f 472b 	movs.w	r7, fp, asr #16
 801a552:	ea4f 4325 	mov.w	r3, r5, asr #16
 801a556:	d406      	bmi.n	801a566 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x6e>
 801a558:	4287      	cmp	r7, r0
 801a55a:	da04      	bge.n	801a566 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x6e>
 801a55c:	2b00      	cmp	r3, #0
 801a55e:	db02      	blt.n	801a566 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x6e>
 801a560:	42b3      	cmp	r3, r6
 801a562:	f2c0 80ac 	blt.w	801a6be <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1c6>
 801a566:	3701      	adds	r7, #1
 801a568:	f100 809d 	bmi.w	801a6a6 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1ae>
 801a56c:	42b9      	cmp	r1, r7
 801a56e:	f2c0 809a 	blt.w	801a6a6 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1ae>
 801a572:	3301      	adds	r3, #1
 801a574:	f100 8097 	bmi.w	801a6a6 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1ae>
 801a578:	429a      	cmp	r2, r3
 801a57a:	f2c0 8094 	blt.w	801a6a6 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1ae>
 801a57e:	9b06      	ldr	r3, [sp, #24]
 801a580:	930b      	str	r3, [sp, #44]	@ 0x2c
 801a582:	9b07      	ldr	r3, [sp, #28]
 801a584:	9309      	str	r3, [sp, #36]	@ 0x24
 801a586:	9b0b      	ldr	r3, [sp, #44]	@ 0x2c
 801a588:	2b00      	cmp	r3, #0
 801a58a:	f340 80b5 	ble.w	801a6f8 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x200>
 801a58e:	9820      	ldr	r0, [sp, #128]	@ 0x80
 801a590:	9a20      	ldr	r2, [sp, #128]	@ 0x80
 801a592:	68c7      	ldr	r7, [r0, #12]
 801a594:	6892      	ldr	r2, [r2, #8]
 801a596:	ea5f 402b 	movs.w	r0, fp, asr #16
 801a59a:	ea4f 4625 	mov.w	r6, r5, asr #16
 801a59e:	f3cb 3303 	ubfx	r3, fp, #12, #4
 801a5a2:	f3c5 3103 	ubfx	r1, r5, #12, #4
 801a5a6:	f100 80fb 	bmi.w	801a7a0 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2a8>
 801a5aa:	f102 3cff 	add.w	ip, r2, #4294967295
 801a5ae:	4560      	cmp	r0, ip
 801a5b0:	f280 80f6 	bge.w	801a7a0 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2a8>
 801a5b4:	2e00      	cmp	r6, #0
 801a5b6:	f2c0 80f3 	blt.w	801a7a0 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2a8>
 801a5ba:	f107 3cff 	add.w	ip, r7, #4294967295
 801a5be:	4566      	cmp	r6, ip
 801a5c0:	f280 80ee 	bge.w	801a7a0 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2a8>
 801a5c4:	b212      	sxth	r2, r2
 801a5c6:	fb06 0002 	mla	r0, r6, r2, r0
 801a5ca:	9e08      	ldr	r6, [sp, #32]
 801a5cc:	1837      	adds	r7, r6, r0
 801a5ce:	5c30      	ldrb	r0, [r6, r0]
 801a5d0:	eb00 0840 	add.w	r8, r0, r0, lsl #1
 801a5d4:	eb04 0c08 	add.w	ip, r4, r8
 801a5d8:	2b00      	cmp	r3, #0
 801a5da:	f000 80d3 	beq.w	801a784 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x28c>
 801a5de:	787e      	ldrb	r6, [r7, #1]
 801a5e0:	eb06 0646 	add.w	r6, r6, r6, lsl #1
 801a5e4:	4426      	add	r6, r4
 801a5e6:	2900      	cmp	r1, #0
 801a5e8:	f000 80d4 	beq.w	801a794 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x29c>
 801a5ec:	18b8      	adds	r0, r7, r2
 801a5ee:	5cba      	ldrb	r2, [r7, r2]
 801a5f0:	7840      	ldrb	r0, [r0, #1]
 801a5f2:	eb02 0242 	add.w	r2, r2, r2, lsl #1
 801a5f6:	eb00 0040 	add.w	r0, r0, r0, lsl #1
 801a5fa:	4422      	add	r2, r4
 801a5fc:	4420      	add	r0, r4
 801a5fe:	b29b      	uxth	r3, r3
 801a600:	b289      	uxth	r1, r1
 801a602:	fb03 f901 	mul.w	r9, r3, r1
 801a606:	ebc9 1101 	rsb	r1, r9, r1, lsl #4
 801a60a:	011b      	lsls	r3, r3, #4
 801a60c:	b289      	uxth	r1, r1
 801a60e:	78b7      	ldrb	r7, [r6, #2]
 801a610:	f89c a002 	ldrb.w	sl, [ip, #2]
 801a614:	f89c c001 	ldrb.w	ip, [ip, #1]
 801a618:	f5c3 7e80 	rsb	lr, r3, #256	@ 0x100
 801a61c:	eba3 0309 	sub.w	r3, r3, r9
 801a620:	b29b      	uxth	r3, r3
 801a622:	ebae 0e01 	sub.w	lr, lr, r1
 801a626:	fa1f fe8e 	uxth.w	lr, lr
 801a62a:	435f      	muls	r7, r3
 801a62c:	fb0e 770a 	mla	r7, lr, sl, r7
 801a630:	f892 a002 	ldrb.w	sl, [r2, #2]
 801a634:	fb01 770a 	mla	r7, r1, sl, r7
 801a638:	f890 a002 	ldrb.w	sl, [r0, #2]
 801a63c:	fb09 7a0a 	mla	sl, r9, sl, r7
 801a640:	f814 7008 	ldrb.w	r7, [r4, r8]
 801a644:	f896 8000 	ldrb.w	r8, [r6]
 801a648:	7876      	ldrb	r6, [r6, #1]
 801a64a:	fb03 f808 	mul.w	r8, r3, r8
 801a64e:	fb0e 8807 	mla	r8, lr, r7, r8
 801a652:	7817      	ldrb	r7, [r2, #0]
 801a654:	fb01 8807 	mla	r8, r1, r7, r8
 801a658:	7807      	ldrb	r7, [r0, #0]
 801a65a:	fb09 8707 	mla	r7, r9, r7, r8
 801a65e:	f40a 4a78 	and.w	sl, sl, #63488	@ 0xf800
 801a662:	f3c7 27c4 	ubfx	r7, r7, #11, #5
 801a666:	ea47 070a 	orr.w	r7, r7, sl
 801a66a:	4373      	muls	r3, r6
 801a66c:	f892 a001 	ldrb.w	sl, [r2, #1]
 801a670:	fb0e 330c 	mla	r3, lr, ip, r3
 801a674:	fb01 310a 	mla	r1, r1, sl, r3
 801a678:	f890 a001 	ldrb.w	sl, [r0, #1]
 801a67c:	9b09      	ldr	r3, [sp, #36]	@ 0x24
 801a67e:	fb09 1a0a 	mla	sl, r9, sl, r1
 801a682:	ea4f 1a5a 	mov.w	sl, sl, lsr #5
 801a686:	f40a 6afc 	and.w	sl, sl, #2016	@ 0x7e0
 801a68a:	ea47 070a 	orr.w	r7, r7, sl
 801a68e:	801f      	strh	r7, [r3, #0]
 801a690:	9b09      	ldr	r3, [sp, #36]	@ 0x24
 801a692:	3302      	adds	r3, #2
 801a694:	9309      	str	r3, [sp, #36]	@ 0x24
 801a696:	9b1b      	ldr	r3, [sp, #108]	@ 0x6c
 801a698:	449b      	add	fp, r3
 801a69a:	9b1c      	ldr	r3, [sp, #112]	@ 0x70
 801a69c:	441d      	add	r5, r3
 801a69e:	9b0b      	ldr	r3, [sp, #44]	@ 0x2c
 801a6a0:	3b01      	subs	r3, #1
 801a6a2:	930b      	str	r3, [sp, #44]	@ 0x2c
 801a6a4:	e76f      	b.n	801a586 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x8e>
 801a6a6:	9b1b      	ldr	r3, [sp, #108]	@ 0x6c
 801a6a8:	449b      	add	fp, r3
 801a6aa:	9b1c      	ldr	r3, [sp, #112]	@ 0x70
 801a6ac:	441d      	add	r5, r3
 801a6ae:	9b06      	ldr	r3, [sp, #24]
 801a6b0:	3b01      	subs	r3, #1
 801a6b2:	9306      	str	r3, [sp, #24]
 801a6b4:	9b07      	ldr	r3, [sp, #28]
 801a6b6:	3302      	adds	r3, #2
 801a6b8:	9307      	str	r3, [sp, #28]
 801a6ba:	e744      	b.n	801a546 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x4e>
 801a6bc:	d023      	beq.n	801a706 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x20e>
 801a6be:	9b06      	ldr	r3, [sp, #24]
 801a6c0:	981b      	ldr	r0, [sp, #108]	@ 0x6c
 801a6c2:	3b01      	subs	r3, #1
 801a6c4:	fb00 b003 	mla	r0, r0, r3, fp
 801a6c8:	1400      	asrs	r0, r0, #16
 801a6ca:	f53f af58 	bmi.w	801a57e <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x86>
 801a6ce:	3901      	subs	r1, #1
 801a6d0:	4288      	cmp	r0, r1
 801a6d2:	f6bf af54 	bge.w	801a57e <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x86>
 801a6d6:	991c      	ldr	r1, [sp, #112]	@ 0x70
 801a6d8:	fb01 5303 	mla	r3, r1, r3, r5
 801a6dc:	141b      	asrs	r3, r3, #16
 801a6de:	f53f af4e 	bmi.w	801a57e <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x86>
 801a6e2:	3a01      	subs	r2, #1
 801a6e4:	4293      	cmp	r3, r2
 801a6e6:	f6bf af4a 	bge.w	801a57e <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x86>
 801a6ea:	9b06      	ldr	r3, [sp, #24]
 801a6ec:	9309      	str	r3, [sp, #36]	@ 0x24
 801a6ee:	9b07      	ldr	r3, [sp, #28]
 801a6f0:	930b      	str	r3, [sp, #44]	@ 0x2c
 801a6f2:	9b09      	ldr	r3, [sp, #36]	@ 0x24
 801a6f4:	2b00      	cmp	r3, #0
 801a6f6:	dc70      	bgt.n	801a7da <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2e2>
 801a6f8:	9b06      	ldr	r3, [sp, #24]
 801a6fa:	9a07      	ldr	r2, [sp, #28]
 801a6fc:	ea23 73e3 	bic.w	r3, r3, r3, asr #31
 801a700:	eb02 0343 	add.w	r3, r2, r3, lsl #1
 801a704:	9307      	str	r3, [sp, #28]
 801a706:	9b0a      	ldr	r3, [sp, #40]	@ 0x28
 801a708:	2b00      	cmp	r3, #0
 801a70a:	f340 80eb 	ble.w	801a8e4 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3ec>
 801a70e:	ee30 0a04 	vadd.f32	s0, s0, s8
 801a712:	eeb7 7a00 	vmov.f32	s14, #112	@ 0x3f800000  1.0
 801a716:	eec7 7a00 	vdiv.f32	s15, s14, s0
 801a71a:	9b18      	ldr	r3, [sp, #96]	@ 0x60
 801a71c:	ee70 0aa4 	vadd.f32	s1, s1, s9
 801a720:	ee31 1a05 	vadd.f32	s2, s2, s10
 801a724:	ee20 7aa7 	vmul.f32	s14, s1, s15
 801a728:	eef0 6a62 	vmov.f32	s13, s5
 801a72c:	ee61 7a27 	vmul.f32	s15, s2, s15
 801a730:	eefe 6ac8 	vcvt.s32.f32	s13, s13, #16
 801a734:	ee77 2a62 	vsub.f32	s5, s14, s5
 801a738:	ee16 ba90 	vmov	fp, s13
 801a73c:	eefe 2ac8 	vcvt.s32.f32	s5, s5, #16
 801a740:	eef0 6a43 	vmov.f32	s13, s6
 801a744:	ee37 3ac3 	vsub.f32	s6, s15, s6
 801a748:	ee12 2a90 	vmov	r2, s5
 801a74c:	eebe 3ac8 	vcvt.s32.f32	s6, s6, #16
 801a750:	fb92 f3f3 	sdiv	r3, r2, r3
 801a754:	ee13 2a10 	vmov	r2, s6
 801a758:	931b      	str	r3, [sp, #108]	@ 0x6c
 801a75a:	9b18      	ldr	r3, [sp, #96]	@ 0x60
 801a75c:	fb92 f3f3 	sdiv	r3, r2, r3
 801a760:	931c      	str	r3, [sp, #112]	@ 0x70
 801a762:	9b0a      	ldr	r3, [sp, #40]	@ 0x28
 801a764:	9a0c      	ldr	r2, [sp, #48]	@ 0x30
 801a766:	3b01      	subs	r3, #1
 801a768:	eefe 6ac8 	vcvt.s32.f32	s13, s13, #16
 801a76c:	930a      	str	r3, [sp, #40]	@ 0x28
 801a76e:	9b18      	ldr	r3, [sp, #96]	@ 0x60
 801a770:	bf08      	it	eq
 801a772:	4613      	moveq	r3, r2
 801a774:	ee16 5a90 	vmov	r5, s13
 801a778:	9306      	str	r3, [sp, #24]
 801a77a:	eeb0 3a67 	vmov.f32	s6, s15
 801a77e:	eef0 2a47 	vmov.f32	s5, s14
 801a782:	e6d2      	b.n	801a52a <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x32>
 801a784:	b149      	cbz	r1, 801a79a <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2a2>
 801a786:	5cba      	ldrb	r2, [r7, r2]
 801a788:	eb02 0242 	add.w	r2, r2, r2, lsl #1
 801a78c:	4422      	add	r2, r4
 801a78e:	4660      	mov	r0, ip
 801a790:	4666      	mov	r6, ip
 801a792:	e734      	b.n	801a5fe <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x106>
 801a794:	4660      	mov	r0, ip
 801a796:	4662      	mov	r2, ip
 801a798:	e731      	b.n	801a5fe <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x106>
 801a79a:	4660      	mov	r0, ip
 801a79c:	4662      	mov	r2, ip
 801a79e:	e7f7      	b.n	801a790 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x298>
 801a7a0:	f110 0c01 	adds.w	ip, r0, #1
 801a7a4:	f53f af74 	bmi.w	801a690 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x198>
 801a7a8:	4562      	cmp	r2, ip
 801a7aa:	f6ff af71 	blt.w	801a690 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x198>
 801a7ae:	f116 0c01 	adds.w	ip, r6, #1
 801a7b2:	f53f af6d 	bmi.w	801a690 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x198>
 801a7b6:	4567      	cmp	r7, ip
 801a7b8:	f6ff af6a 	blt.w	801a690 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x198>
 801a7bc:	b23f      	sxth	r7, r7
 801a7be:	b212      	sxth	r2, r2
 801a7c0:	e9cd 3104 	strd	r3, r1, [sp, #16]
 801a7c4:	e9cd 0602 	strd	r0, r6, [sp, #8]
 801a7c8:	9200      	str	r2, [sp, #0]
 801a7ca:	9701      	str	r7, [sp, #4]
 801a7cc:	4623      	mov	r3, r4
 801a7ce:	e9dd 2108 	ldrd	r2, r1, [sp, #32]
 801a7d2:	980d      	ldr	r0, [sp, #52]	@ 0x34
 801a7d4:	f7ff fde6 	bl	801a3a4 <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhS4_ssiihh>
 801a7d8:	e75a      	b.n	801a690 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x198>
 801a7da:	9a20      	ldr	r2, [sp, #128]	@ 0x80
 801a7dc:	f9b2 2008 	ldrsh.w	r2, [r2, #8]
 801a7e0:	ea4f 462b 	mov.w	r6, fp, asr #16
 801a7e4:	1428      	asrs	r0, r5, #16
 801a7e6:	fb02 6000 	mla	r0, r2, r0, r6
 801a7ea:	9e08      	ldr	r6, [sp, #32]
 801a7ec:	f816 8000 	ldrb.w	r8, [r6, r0]
 801a7f0:	f3cb 3303 	ubfx	r3, fp, #12, #4
 801a7f4:	eb08 0848 	add.w	r8, r8, r8, lsl #1
 801a7f8:	f3c5 3103 	ubfx	r1, r5, #12, #4
 801a7fc:	1837      	adds	r7, r6, r0
 801a7fe:	eb04 0c08 	add.w	ip, r4, r8
 801a802:	2b00      	cmp	r3, #0
 801a804:	d060      	beq.n	801a8c8 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3d0>
 801a806:	787e      	ldrb	r6, [r7, #1]
 801a808:	eb06 0646 	add.w	r6, r6, r6, lsl #1
 801a80c:	4426      	add	r6, r4
 801a80e:	2900      	cmp	r1, #0
 801a810:	d062      	beq.n	801a8d8 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3e0>
 801a812:	18b8      	adds	r0, r7, r2
 801a814:	5cba      	ldrb	r2, [r7, r2]
 801a816:	7840      	ldrb	r0, [r0, #1]
 801a818:	eb02 0242 	add.w	r2, r2, r2, lsl #1
 801a81c:	eb00 0040 	add.w	r0, r0, r0, lsl #1
 801a820:	4422      	add	r2, r4
 801a822:	4420      	add	r0, r4
 801a824:	b29b      	uxth	r3, r3
 801a826:	b289      	uxth	r1, r1
 801a828:	fb03 f901 	mul.w	r9, r3, r1
 801a82c:	ebc9 1101 	rsb	r1, r9, r1, lsl #4
 801a830:	011b      	lsls	r3, r3, #4
 801a832:	b289      	uxth	r1, r1
 801a834:	78b7      	ldrb	r7, [r6, #2]
 801a836:	f89c a002 	ldrb.w	sl, [ip, #2]
 801a83a:	f89c c001 	ldrb.w	ip, [ip, #1]
 801a83e:	f5c3 7e80 	rsb	lr, r3, #256	@ 0x100
 801a842:	eba3 0309 	sub.w	r3, r3, r9
 801a846:	b29b      	uxth	r3, r3
 801a848:	ebae 0e01 	sub.w	lr, lr, r1
 801a84c:	fa1f fe8e 	uxth.w	lr, lr
 801a850:	435f      	muls	r7, r3
 801a852:	fb0e 770a 	mla	r7, lr, sl, r7
 801a856:	f892 a002 	ldrb.w	sl, [r2, #2]
 801a85a:	fb01 770a 	mla	r7, r1, sl, r7
 801a85e:	f890 a002 	ldrb.w	sl, [r0, #2]
 801a862:	fb09 7a0a 	mla	sl, r9, sl, r7
 801a866:	f814 7008 	ldrb.w	r7, [r4, r8]
 801a86a:	f896 8000 	ldrb.w	r8, [r6]
 801a86e:	7876      	ldrb	r6, [r6, #1]
 801a870:	fb03 f808 	mul.w	r8, r3, r8
 801a874:	fb0e 8807 	mla	r8, lr, r7, r8
 801a878:	7817      	ldrb	r7, [r2, #0]
 801a87a:	fb01 8807 	mla	r8, r1, r7, r8
 801a87e:	7807      	ldrb	r7, [r0, #0]
 801a880:	fb09 8707 	mla	r7, r9, r7, r8
 801a884:	f40a 4a78 	and.w	sl, sl, #63488	@ 0xf800
 801a888:	4373      	muls	r3, r6
 801a88a:	f3c7 27c4 	ubfx	r7, r7, #11, #5
 801a88e:	7856      	ldrb	r6, [r2, #1]
 801a890:	ea47 070a 	orr.w	r7, r7, sl
 801a894:	fb0e 330c 	mla	r3, lr, ip, r3
 801a898:	f890 a001 	ldrb.w	sl, [r0, #1]
 801a89c:	fb01 3306 	mla	r3, r1, r6, r3
 801a8a0:	fb09 3a0a 	mla	sl, r9, sl, r3
 801a8a4:	ea4f 1a5a 	mov.w	sl, sl, lsr #5
 801a8a8:	9b0b      	ldr	r3, [sp, #44]	@ 0x2c
 801a8aa:	f40a 6afc 	and.w	sl, sl, #2016	@ 0x7e0
 801a8ae:	ea47 070a 	orr.w	r7, r7, sl
 801a8b2:	f823 7b02 	strh.w	r7, [r3], #2
 801a8b6:	930b      	str	r3, [sp, #44]	@ 0x2c
 801a8b8:	9b1b      	ldr	r3, [sp, #108]	@ 0x6c
 801a8ba:	449b      	add	fp, r3
 801a8bc:	9b1c      	ldr	r3, [sp, #112]	@ 0x70
 801a8be:	441d      	add	r5, r3
 801a8c0:	9b09      	ldr	r3, [sp, #36]	@ 0x24
 801a8c2:	3b01      	subs	r3, #1
 801a8c4:	9309      	str	r3, [sp, #36]	@ 0x24
 801a8c6:	e714      	b.n	801a6f2 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1fa>
 801a8c8:	b149      	cbz	r1, 801a8de <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3e6>
 801a8ca:	5cba      	ldrb	r2, [r7, r2]
 801a8cc:	eb02 0242 	add.w	r2, r2, r2, lsl #1
 801a8d0:	4422      	add	r2, r4
 801a8d2:	4660      	mov	r0, ip
 801a8d4:	4666      	mov	r6, ip
 801a8d6:	e7a5      	b.n	801a824 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x32c>
 801a8d8:	4660      	mov	r0, ip
 801a8da:	4662      	mov	r2, ip
 801a8dc:	e7a2      	b.n	801a824 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x32c>
 801a8de:	4660      	mov	r0, ip
 801a8e0:	4662      	mov	r2, ip
 801a8e2:	e7f7      	b.n	801a8d4 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3dc>
 801a8e4:	b00f      	add	sp, #60	@ 0x3c
 801a8e6:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}

0801a8ea <_ZNK8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKmssiihhh>:
 801a8ea:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 801a8ee:	b085      	sub	sp, #20
 801a8f0:	e9dd 7410 	ldrd	r7, r4, [sp, #64]	@ 0x40
 801a8f4:	f9bd c038 	ldrsh.w	ip, [sp, #56]	@ 0x38
 801a8f8:	9102      	str	r1, [sp, #8]
 801a8fa:	2c00      	cmp	r4, #0
 801a8fc:	fb04 710c 	mla	r1, r4, ip, r7
 801a900:	f9bd 803c 	ldrsh.w	r8, [sp, #60]	@ 0x3c
 801a904:	f89d 6048 	ldrb.w	r6, [sp, #72]	@ 0x48
 801a908:	f89d 004c 	ldrb.w	r0, [sp, #76]	@ 0x4c
 801a90c:	eb02 0e01 	add.w	lr, r2, r1
 801a910:	f2c0 8122 	blt.w	801ab58 <_ZNK8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKmssiihhh+0x26e>
 801a914:	45a0      	cmp	r8, r4
 801a916:	f340 811f 	ble.w	801ab58 <_ZNK8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKmssiihhh+0x26e>
 801a91a:	2f00      	cmp	r7, #0
 801a91c:	f2c0 811a 	blt.w	801ab54 <_ZNK8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKmssiihhh+0x26a>
 801a920:	45bc      	cmp	ip, r7
 801a922:	f340 8117 	ble.w	801ab54 <_ZNK8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKmssiihhh+0x26a>
 801a926:	5c52      	ldrb	r2, [r2, r1]
 801a928:	f853 5022 	ldr.w	r5, [r3, r2, lsl #2]
 801a92c:	1c7a      	adds	r2, r7, #1
 801a92e:	f100 8116 	bmi.w	801ab5e <_ZNK8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKmssiihhh+0x274>
 801a932:	4594      	cmp	ip, r2
 801a934:	f340 8113 	ble.w	801ab5e <_ZNK8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKmssiihhh+0x274>
 801a938:	2e00      	cmp	r6, #0
 801a93a:	f000 8112 	beq.w	801ab62 <_ZNK8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKmssiihhh+0x278>
 801a93e:	f89e 2001 	ldrb.w	r2, [lr, #1]
 801a942:	f853 1022 	ldr.w	r1, [r3, r2, lsl #2]
 801a946:	3401      	adds	r4, #1
 801a948:	f100 810f 	bmi.w	801ab6a <_ZNK8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKmssiihhh+0x280>
 801a94c:	45a0      	cmp	r8, r4
 801a94e:	f340 810c 	ble.w	801ab6a <_ZNK8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKmssiihhh+0x280>
 801a952:	2800      	cmp	r0, #0
 801a954:	f000 810c 	beq.w	801ab70 <_ZNK8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKmssiihhh+0x286>
 801a958:	2f00      	cmp	r7, #0
 801a95a:	f2c0 8104 	blt.w	801ab66 <_ZNK8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKmssiihhh+0x27c>
 801a95e:	45bc      	cmp	ip, r7
 801a960:	f340 8101 	ble.w	801ab66 <_ZNK8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKmssiihhh+0x27c>
 801a964:	f81e 200c 	ldrb.w	r2, [lr, ip]
 801a968:	f853 4022 	ldr.w	r4, [r3, r2, lsl #2]
 801a96c:	3701      	adds	r7, #1
 801a96e:	f100 8102 	bmi.w	801ab76 <_ZNK8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKmssiihhh+0x28c>
 801a972:	45bc      	cmp	ip, r7
 801a974:	f340 80ff 	ble.w	801ab76 <_ZNK8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKmssiihhh+0x28c>
 801a978:	2e00      	cmp	r6, #0
 801a97a:	f000 80fe 	beq.w	801ab7a <_ZNK8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKmssiihhh+0x290>
 801a97e:	44f4      	add	ip, lr
 801a980:	f89c 2001 	ldrb.w	r2, [ip, #1]
 801a984:	f853 2022 	ldr.w	r2, [r3, r2, lsl #2]
 801a988:	b2b6      	uxth	r6, r6
 801a98a:	b280      	uxth	r0, r0
 801a98c:	fb00 fe06 	mul.w	lr, r0, r6
 801a990:	ebce 1000 	rsb	r0, lr, r0, lsl #4
 801a994:	0136      	lsls	r6, r6, #4
 801a996:	eba6 070e 	sub.w	r7, r6, lr
 801a99a:	b280      	uxth	r0, r0
 801a99c:	f5c6 7380 	rsb	r3, r6, #256	@ 0x100
 801a9a0:	ea4f 6a11 	mov.w	sl, r1, lsr #24
 801a9a4:	b2bf      	uxth	r7, r7
 801a9a6:	1a1b      	subs	r3, r3, r0
 801a9a8:	ea4f 6b15 	mov.w	fp, r5, lsr #24
 801a9ac:	b29b      	uxth	r3, r3
 801a9ae:	fb0a f607 	mul.w	r6, sl, r7
 801a9b2:	ea4f 6914 	mov.w	r9, r4, lsr #24
 801a9b6:	fb0b 6603 	mla	r6, fp, r3, r6
 801a9ba:	ea4f 6812 	mov.w	r8, r2, lsr #24
 801a9be:	fb00 6609 	mla	r6, r0, r9, r6
 801a9c2:	fb0e 6608 	mla	r6, lr, r8, r6
 801a9c6:	f3c6 2607 	ubfx	r6, r6, #8, #8
 801a9ca:	9600      	str	r6, [sp, #0]
 801a9cc:	2e00      	cmp	r6, #0
 801a9ce:	f000 80be 	beq.w	801ab4e <_ZNK8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKmssiihhh+0x264>
 801a9d2:	f005 1cff 	and.w	ip, r5, #16711935	@ 0xff00ff
 801a9d6:	fb0b fc0c 	mul.w	ip, fp, ip
 801a9da:	f405 457f 	and.w	r5, r5, #65280	@ 0xff00
 801a9de:	fb0b f505 	mul.w	r5, fp, r5
 801a9e2:	ea4f 2b1c 	mov.w	fp, ip, lsr #8
 801a9e6:	f00b 1bff 	and.w	fp, fp, #16711935	@ 0xff00ff
 801a9ea:	f10c 1c01 	add.w	ip, ip, #65537	@ 0x10001
 801a9ee:	44dc      	add	ip, fp
 801a9f0:	ea4f 2c1c 	mov.w	ip, ip, lsr #8
 801a9f4:	9501      	str	r5, [sp, #4]
 801a9f6:	f00c 15ff 	and.w	r5, ip, #16711935	@ 0xff00ff
 801a9fa:	9503      	str	r5, [sp, #12]
 801a9fc:	9d01      	ldr	r5, [sp, #4]
 801a9fe:	9e02      	ldr	r6, [sp, #8]
 801aa00:	f505 7c80 	add.w	ip, r5, #256	@ 0x100
 801aa04:	eb0c 2515 	add.w	r5, ip, r5, lsr #8
 801aa08:	f001 1cff 	and.w	ip, r1, #16711935	@ 0xff00ff
 801aa0c:	fb0a fc0c 	mul.w	ip, sl, ip
 801aa10:	ea4f 2b15 	mov.w	fp, r5, lsr #8
 801aa14:	ea4f 251c 	mov.w	r5, ip, lsr #8
 801aa18:	f005 15ff 	and.w	r5, r5, #16711935	@ 0xff00ff
 801aa1c:	f10c 1c01 	add.w	ip, ip, #65537	@ 0x10001
 801aa20:	4465      	add	r5, ip
 801aa22:	f004 1cff 	and.w	ip, r4, #16711935	@ 0xff00ff
 801aa26:	f404 447f 	and.w	r4, r4, #65280	@ 0xff00
 801aa2a:	fb09 fc0c 	mul.w	ip, r9, ip
 801aa2e:	fb09 f904 	mul.w	r9, r9, r4
 801aa32:	f509 7480 	add.w	r4, r9, #256	@ 0x100
 801aa36:	eb04 2919 	add.w	r9, r4, r9, lsr #8
 801aa3a:	f002 14ff 	and.w	r4, r2, #16711935	@ 0xff00ff
 801aa3e:	fb08 f404 	mul.w	r4, r8, r4
 801aa42:	f401 417f 	and.w	r1, r1, #65280	@ 0xff00
 801aa46:	f402 427f 	and.w	r2, r2, #65280	@ 0xff00
 801aa4a:	fb08 f802 	mul.w	r8, r8, r2
 801aa4e:	fb0a fa01 	mul.w	sl, sl, r1
 801aa52:	0a22      	lsrs	r2, r4, #8
 801aa54:	f50a 7180 	add.w	r1, sl, #256	@ 0x100
 801aa58:	f002 12ff 	and.w	r2, r2, #16711935	@ 0xff00ff
 801aa5c:	f104 1401 	add.w	r4, r4, #65537	@ 0x10001
 801aa60:	eb01 2a1a 	add.w	sl, r1, sl, lsr #8
 801aa64:	4414      	add	r4, r2
 801aa66:	ea4f 211c 	mov.w	r1, ip, lsr #8
 801aa6a:	f508 7280 	add.w	r2, r8, #256	@ 0x100
 801aa6e:	0a2d      	lsrs	r5, r5, #8
 801aa70:	eb02 2818 	add.w	r8, r2, r8, lsr #8
 801aa74:	f005 15ff 	and.w	r5, r5, #16711935	@ 0xff00ff
 801aa78:	9a03      	ldr	r2, [sp, #12]
 801aa7a:	8836      	ldrh	r6, [r6, #0]
 801aa7c:	f001 11ff 	and.w	r1, r1, #16711935	@ 0xff00ff
 801aa80:	f10c 1c01 	add.w	ip, ip, #65537	@ 0x10001
 801aa84:	437d      	muls	r5, r7
 801aa86:	4461      	add	r1, ip
 801aa88:	0a24      	lsrs	r4, r4, #8
 801aa8a:	fb02 5503 	mla	r5, r2, r3, r5
 801aa8e:	0a09      	lsrs	r1, r1, #8
 801aa90:	f004 14ff 	and.w	r4, r4, #16711935	@ 0xff00ff
 801aa94:	fb04 540e 	mla	r4, r4, lr, r5
 801aa98:	f001 11ff 	and.w	r1, r1, #16711935	@ 0xff00ff
 801aa9c:	fb01 4100 	mla	r1, r1, r0, r4
 801aaa0:	ea4f 2a1a 	mov.w	sl, sl, lsr #8
 801aaa4:	0a09      	lsrs	r1, r1, #8
 801aaa6:	f40a 4a7f 	and.w	sl, sl, #65280	@ 0xff00
 801aaaa:	f001 14ff 	and.w	r4, r1, #16711935	@ 0xff00ff
 801aaae:	fb07 f70a 	mul.w	r7, r7, sl
 801aab2:	ea4f 2818 	mov.w	r8, r8, lsr #8
 801aab6:	f40b 417f 	and.w	r1, fp, #65280	@ 0xff00
 801aaba:	fb03 7101 	mla	r1, r3, r1, r7
 801aabe:	ea4f 2919 	mov.w	r9, r9, lsr #8
 801aac2:	f408 487f 	and.w	r8, r8, #65280	@ 0xff00
 801aac6:	fb0e 1e08 	mla	lr, lr, r8, r1
 801aaca:	f409 417f 	and.w	r1, r9, #65280	@ 0xff00
 801aace:	fb00 e101 	mla	r1, r0, r1, lr
 801aad2:	f89d 0050 	ldrb.w	r0, [sp, #80]	@ 0x50
 801aad6:	9a00      	ldr	r2, [sp, #0]
 801aad8:	b287      	uxth	r7, r0
 801aada:	437a      	muls	r2, r7
 801aadc:	0a09      	lsrs	r1, r1, #8
 801aade:	1c53      	adds	r3, r2, #1
 801aae0:	f401 417f 	and.w	r1, r1, #65280	@ 0xff00
 801aae4:	4321      	orrs	r1, r4
 801aae6:	eb03 2312 	add.w	r3, r3, r2, lsr #8
 801aaea:	1235      	asrs	r5, r6, #8
 801aaec:	0c0a      	lsrs	r2, r1, #16
 801aaee:	ea6f 2313 	mvn.w	r3, r3, lsr #8
 801aaf2:	b2db      	uxtb	r3, r3
 801aaf4:	fb12 f207 	smulbb	r2, r2, r7
 801aaf8:	f005 05f8 	and.w	r5, r5, #248	@ 0xf8
 801aafc:	fb05 2503 	mla	r5, r5, r3, r2
 801ab00:	f3c1 2407 	ubfx	r4, r1, #8, #8
 801ab04:	10f2      	asrs	r2, r6, #3
 801ab06:	b2c8      	uxtb	r0, r1
 801ab08:	00f6      	lsls	r6, r6, #3
 801ab0a:	fb14 f407 	smulbb	r4, r4, r7
 801ab0e:	f002 02fc 	and.w	r2, r2, #252	@ 0xfc
 801ab12:	b2f6      	uxtb	r6, r6
 801ab14:	fb10 f007 	smulbb	r0, r0, r7
 801ab18:	fb02 4203 	mla	r2, r2, r3, r4
 801ab1c:	b2ad      	uxth	r5, r5
 801ab1e:	fb06 0303 	mla	r3, r6, r3, r0
 801ab22:	b299      	uxth	r1, r3
 801ab24:	b294      	uxth	r4, r2
 801ab26:	1c6b      	adds	r3, r5, #1
 801ab28:	eb03 2515 	add.w	r5, r3, r5, lsr #8
 801ab2c:	1c62      	adds	r2, r4, #1
 801ab2e:	1c4b      	adds	r3, r1, #1
 801ab30:	eb03 2311 	add.w	r3, r3, r1, lsr #8
 801ab34:	eb02 2214 	add.w	r2, r2, r4, lsr #8
 801ab38:	f405 4578 	and.w	r5, r5, #63488	@ 0xf800
 801ab3c:	f3c3 23c4 	ubfx	r3, r3, #11, #5
 801ab40:	0952      	lsrs	r2, r2, #5
 801ab42:	f402 62fc 	and.w	r2, r2, #2016	@ 0x7e0
 801ab46:	432b      	orrs	r3, r5
 801ab48:	4313      	orrs	r3, r2
 801ab4a:	9a02      	ldr	r2, [sp, #8]
 801ab4c:	8013      	strh	r3, [r2, #0]
 801ab4e:	b005      	add	sp, #20
 801ab50:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 801ab54:	2500      	movs	r5, #0
 801ab56:	e6e9      	b.n	801a92c <_ZNK8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKmssiihhh+0x42>
 801ab58:	2100      	movs	r1, #0
 801ab5a:	460d      	mov	r5, r1
 801ab5c:	e6f3      	b.n	801a946 <_ZNK8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKmssiihhh+0x5c>
 801ab5e:	2100      	movs	r1, #0
 801ab60:	e6f1      	b.n	801a946 <_ZNK8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKmssiihhh+0x5c>
 801ab62:	4631      	mov	r1, r6
 801ab64:	e6ef      	b.n	801a946 <_ZNK8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKmssiihhh+0x5c>
 801ab66:	2400      	movs	r4, #0
 801ab68:	e700      	b.n	801a96c <_ZNK8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKmssiihhh+0x82>
 801ab6a:	2200      	movs	r2, #0
 801ab6c:	4614      	mov	r4, r2
 801ab6e:	e70b      	b.n	801a988 <_ZNK8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKmssiihhh+0x9e>
 801ab70:	4602      	mov	r2, r0
 801ab72:	4604      	mov	r4, r0
 801ab74:	e708      	b.n	801a988 <_ZNK8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKmssiihhh+0x9e>
 801ab76:	2200      	movs	r2, #0
 801ab78:	e706      	b.n	801a988 <_ZNK8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKmssiihhh+0x9e>
 801ab7a:	4632      	mov	r2, r6
 801ab7c:	e704      	b.n	801a988 <_ZNK8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKmssiihhh+0x9e>

0801ab7e <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff>:
 801ab7e:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 801ab82:	b09f      	sub	sp, #124	@ 0x7c
 801ab84:	921b      	str	r2, [sp, #108]	@ 0x6c
 801ab86:	9309      	str	r3, [sp, #36]	@ 0x24
 801ab88:	9a2d      	ldr	r2, [sp, #180]	@ 0xb4
 801ab8a:	f89d 30c4 	ldrb.w	r3, [sp, #196]	@ 0xc4
 801ab8e:	931c      	str	r3, [sp, #112]	@ 0x70
 801ab90:	9119      	str	r1, [sp, #100]	@ 0x64
 801ab92:	e9dd 132e 	ldrd	r1, r3, [sp, #184]	@ 0xb8
 801ab96:	901d      	str	r0, [sp, #116]	@ 0x74
 801ab98:	6850      	ldr	r0, [r2, #4]
 801ab9a:	6812      	ldr	r2, [r2, #0]
 801ab9c:	9d2a      	ldr	r5, [sp, #168]	@ 0xa8
 801ab9e:	fb00 1303 	mla	r3, r0, r3, r1
 801aba2:	eb02 0343 	add.w	r3, r2, r3, lsl #1
 801aba6:	930c      	str	r3, [sp, #48]	@ 0x30
 801aba8:	9b30      	ldr	r3, [sp, #192]	@ 0xc0
 801abaa:	681b      	ldr	r3, [r3, #0]
 801abac:	9312      	str	r3, [sp, #72]	@ 0x48
 801abae:	9b30      	ldr	r3, [sp, #192]	@ 0xc0
 801abb0:	685e      	ldr	r6, [r3, #4]
 801abb2:	f8bd 3070 	ldrh.w	r3, [sp, #112]	@ 0x70
 801abb6:	930d      	str	r3, [sp, #52]	@ 0x34
 801abb8:	3604      	adds	r6, #4
 801abba:	9b19      	ldr	r3, [sp, #100]	@ 0x64
 801abbc:	2b00      	cmp	r3, #0
 801abbe:	dc03      	bgt.n	801abc8 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x4a>
 801abc0:	9b1b      	ldr	r3, [sp, #108]	@ 0x6c
 801abc2:	2b00      	cmp	r3, #0
 801abc4:	f340 8388 	ble.w	801b2d8 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x75a>
 801abc8:	9b30      	ldr	r3, [sp, #192]	@ 0xc0
 801abca:	f9b3 1008 	ldrsh.w	r1, [r3, #8]
 801abce:	f9b3 200c 	ldrsh.w	r2, [r3, #12]
 801abd2:	1e48      	subs	r0, r1, #1
 801abd4:	1e57      	subs	r7, r2, #1
 801abd6:	9b09      	ldr	r3, [sp, #36]	@ 0x24
 801abd8:	2b00      	cmp	r3, #0
 801abda:	f340 8195 	ble.w	801af08 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x38a>
 801abde:	9c29      	ldr	r4, [sp, #164]	@ 0xa4
 801abe0:	ea5f 4c24 	movs.w	ip, r4, asr #16
 801abe4:	ea4f 4325 	mov.w	r3, r5, asr #16
 801abe8:	d406      	bmi.n	801abf8 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x7a>
 801abea:	4584      	cmp	ip, r0
 801abec:	da04      	bge.n	801abf8 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x7a>
 801abee:	2b00      	cmp	r3, #0
 801abf0:	db02      	blt.n	801abf8 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x7a>
 801abf2:	42bb      	cmp	r3, r7
 801abf4:	f2c0 8189 	blt.w	801af0a <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x38c>
 801abf8:	f11c 0c01 	adds.w	ip, ip, #1
 801abfc:	f100 8177 	bmi.w	801aeee <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x370>
 801ac00:	4561      	cmp	r1, ip
 801ac02:	f2c0 8174 	blt.w	801aeee <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x370>
 801ac06:	3301      	adds	r3, #1
 801ac08:	f100 8171 	bmi.w	801aeee <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x370>
 801ac0c:	429a      	cmp	r2, r3
 801ac0e:	f2c0 816e 	blt.w	801aeee <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x370>
 801ac12:	9b09      	ldr	r3, [sp, #36]	@ 0x24
 801ac14:	9f0c      	ldr	r7, [sp, #48]	@ 0x30
 801ac16:	931a      	str	r3, [sp, #104]	@ 0x68
 801ac18:	9b1a      	ldr	r3, [sp, #104]	@ 0x68
 801ac1a:	2b00      	cmp	r3, #0
 801ac1c:	f340 8193 	ble.w	801af46 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3c8>
 801ac20:	9b29      	ldr	r3, [sp, #164]	@ 0xa4
 801ac22:	f3c3 3203 	ubfx	r2, r3, #12, #4
 801ac26:	9b30      	ldr	r3, [sp, #192]	@ 0xc0
 801ac28:	e9d3 0e02 	ldrd	r0, lr, [r3, #8]
 801ac2c:	9b29      	ldr	r3, [sp, #164]	@ 0xa4
 801ac2e:	141b      	asrs	r3, r3, #16
 801ac30:	ea4f 4c25 	mov.w	ip, r5, asr #16
 801ac34:	f3c5 3103 	ubfx	r1, r5, #12, #4
 801ac38:	f100 81d6 	bmi.w	801afe8 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x46a>
 801ac3c:	f100 38ff 	add.w	r8, r0, #4294967295
 801ac40:	4543      	cmp	r3, r8
 801ac42:	f280 81d1 	bge.w	801afe8 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x46a>
 801ac46:	f1bc 0f00 	cmp.w	ip, #0
 801ac4a:	f2c0 81cd 	blt.w	801afe8 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x46a>
 801ac4e:	f10e 38ff 	add.w	r8, lr, #4294967295
 801ac52:	45c4      	cmp	ip, r8
 801ac54:	f280 81c8 	bge.w	801afe8 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x46a>
 801ac58:	b200      	sxth	r0, r0
 801ac5a:	fb0c 3300 	mla	r3, ip, r0, r3
 801ac5e:	9c12      	ldr	r4, [sp, #72]	@ 0x48
 801ac60:	eb04 0803 	add.w	r8, r4, r3
 801ac64:	5ce3      	ldrb	r3, [r4, r3]
 801ac66:	f856 3023 	ldr.w	r3, [r6, r3, lsl #2]
 801ac6a:	ea4f 6e13 	mov.w	lr, r3, lsr #24
 801ac6e:	2a00      	cmp	r2, #0
 801ac70:	f000 81af 	beq.w	801afd2 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x454>
 801ac74:	f898 c001 	ldrb.w	ip, [r8, #1]
 801ac78:	f856 402c 	ldr.w	r4, [r6, ip, lsl #2]
 801ac7c:	940e      	str	r4, [sp, #56]	@ 0x38
 801ac7e:	0e24      	lsrs	r4, r4, #24
 801ac80:	9415      	str	r4, [sp, #84]	@ 0x54
 801ac82:	b179      	cbz	r1, 801aca4 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x126>
 801ac84:	eb08 0c00 	add.w	ip, r8, r0
 801ac88:	f818 0000 	ldrb.w	r0, [r8, r0]
 801ac8c:	f856 0020 	ldr.w	r0, [r6, r0, lsl #2]
 801ac90:	900a      	str	r0, [sp, #40]	@ 0x28
 801ac92:	0e00      	lsrs	r0, r0, #24
 801ac94:	9013      	str	r0, [sp, #76]	@ 0x4c
 801ac96:	f89c 0001 	ldrb.w	r0, [ip, #1]
 801ac9a:	f856 0020 	ldr.w	r0, [r6, r0, lsl #2]
 801ac9e:	900f      	str	r0, [sp, #60]	@ 0x3c
 801aca0:	0e00      	lsrs	r0, r0, #24
 801aca2:	9016      	str	r0, [sp, #88]	@ 0x58
 801aca4:	b292      	uxth	r2, r2
 801aca6:	b289      	uxth	r1, r1
 801aca8:	fb02 f901 	mul.w	r9, r2, r1
 801acac:	ebc9 1101 	rsb	r1, r9, r1, lsl #4
 801acb0:	0112      	lsls	r2, r2, #4
 801acb2:	eba2 0809 	sub.w	r8, r2, r9
 801acb6:	b289      	uxth	r1, r1
 801acb8:	f5c2 7280 	rsb	r2, r2, #256	@ 0x100
 801acbc:	9815      	ldr	r0, [sp, #84]	@ 0x54
 801acbe:	9c13      	ldr	r4, [sp, #76]	@ 0x4c
 801acc0:	fa1f f888 	uxth.w	r8, r8
 801acc4:	1a52      	subs	r2, r2, r1
 801acc6:	b292      	uxth	r2, r2
 801acc8:	fb08 f000 	mul.w	r0, r8, r0
 801accc:	fb02 000e 	mla	r0, r2, lr, r0
 801acd0:	fb01 0004 	mla	r0, r1, r4, r0
 801acd4:	9c16      	ldr	r4, [sp, #88]	@ 0x58
 801acd6:	fb09 0004 	mla	r0, r9, r4, r0
 801acda:	f3c0 2007 	ubfx	r0, r0, #8, #8
 801acde:	2800      	cmp	r0, #0
 801ace0:	f000 80fa 	beq.w	801aed8 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x35a>
 801ace4:	f1be 0fff 	cmp.w	lr, #255	@ 0xff
 801ace8:	d01b      	beq.n	801ad22 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1a4>
 801acea:	f003 1aff 	and.w	sl, r3, #16711935	@ 0xff00ff
 801acee:	fb0e fa0a 	mul.w	sl, lr, sl
 801acf2:	f403 437f 	and.w	r3, r3, #65280	@ 0xff00
 801acf6:	fb0e fe03 	mul.w	lr, lr, r3
 801acfa:	ea4f 231a 	mov.w	r3, sl, lsr #8
 801acfe:	f003 13ff 	and.w	r3, r3, #16711935	@ 0xff00ff
 801ad02:	f10a 1a01 	add.w	sl, sl, #65537	@ 0x10001
 801ad06:	f50e 7c80 	add.w	ip, lr, #256	@ 0x100
 801ad0a:	4453      	add	r3, sl
 801ad0c:	eb0c 2c1e 	add.w	ip, ip, lr, lsr #8
 801ad10:	0a1b      	lsrs	r3, r3, #8
 801ad12:	ea4f 2c1c 	mov.w	ip, ip, lsr #8
 801ad16:	f003 13ff 	and.w	r3, r3, #16711935	@ 0xff00ff
 801ad1a:	f40c 4c7f 	and.w	ip, ip, #65280	@ 0xff00
 801ad1e:	ea43 030c 	orr.w	r3, r3, ip
 801ad22:	9c15      	ldr	r4, [sp, #84]	@ 0x54
 801ad24:	2cff      	cmp	r4, #255	@ 0xff
 801ad26:	d021      	beq.n	801ad6c <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1ee>
 801ad28:	9c0e      	ldr	r4, [sp, #56]	@ 0x38
 801ad2a:	f004 1bff 	and.w	fp, r4, #16711935	@ 0xff00ff
 801ad2e:	9c15      	ldr	r4, [sp, #84]	@ 0x54
 801ad30:	fb04 fb0b 	mul.w	fp, r4, fp
 801ad34:	9c0e      	ldr	r4, [sp, #56]	@ 0x38
 801ad36:	f404 4a7f 	and.w	sl, r4, #65280	@ 0xff00
 801ad3a:	9c15      	ldr	r4, [sp, #84]	@ 0x54
 801ad3c:	ea4f 2e1b 	mov.w	lr, fp, lsr #8
 801ad40:	fb04 fa0a 	mul.w	sl, r4, sl
 801ad44:	f00e 1eff 	and.w	lr, lr, #16711935	@ 0xff00ff
 801ad48:	f10b 1b01 	add.w	fp, fp, #65537	@ 0x10001
 801ad4c:	f50a 7c80 	add.w	ip, sl, #256	@ 0x100
 801ad50:	44de      	add	lr, fp
 801ad52:	eb0c 2a1a 	add.w	sl, ip, sl, lsr #8
 801ad56:	ea4f 2e1e 	mov.w	lr, lr, lsr #8
 801ad5a:	ea4f 2a1a 	mov.w	sl, sl, lsr #8
 801ad5e:	f00e 1eff 	and.w	lr, lr, #16711935	@ 0xff00ff
 801ad62:	f40a 4a7f 	and.w	sl, sl, #65280	@ 0xff00
 801ad66:	ea4e 040a 	orr.w	r4, lr, sl
 801ad6a:	940e      	str	r4, [sp, #56]	@ 0x38
 801ad6c:	9c13      	ldr	r4, [sp, #76]	@ 0x4c
 801ad6e:	2cff      	cmp	r4, #255	@ 0xff
 801ad70:	d021      	beq.n	801adb6 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x238>
 801ad72:	9c0a      	ldr	r4, [sp, #40]	@ 0x28
 801ad74:	f004 1bff 	and.w	fp, r4, #16711935	@ 0xff00ff
 801ad78:	9c13      	ldr	r4, [sp, #76]	@ 0x4c
 801ad7a:	fb04 fb0b 	mul.w	fp, r4, fp
 801ad7e:	9c0a      	ldr	r4, [sp, #40]	@ 0x28
 801ad80:	f404 4a7f 	and.w	sl, r4, #65280	@ 0xff00
 801ad84:	9c13      	ldr	r4, [sp, #76]	@ 0x4c
 801ad86:	ea4f 2e1b 	mov.w	lr, fp, lsr #8
 801ad8a:	fb04 fa0a 	mul.w	sl, r4, sl
 801ad8e:	f00e 1eff 	and.w	lr, lr, #16711935	@ 0xff00ff
 801ad92:	f10b 1b01 	add.w	fp, fp, #65537	@ 0x10001
 801ad96:	f50a 7c80 	add.w	ip, sl, #256	@ 0x100
 801ad9a:	44de      	add	lr, fp
 801ad9c:	eb0c 2a1a 	add.w	sl, ip, sl, lsr #8
 801ada0:	ea4f 2e1e 	mov.w	lr, lr, lsr #8
 801ada4:	ea4f 2a1a 	mov.w	sl, sl, lsr #8
 801ada8:	f00e 1eff 	and.w	lr, lr, #16711935	@ 0xff00ff
 801adac:	f40a 4a7f 	and.w	sl, sl, #65280	@ 0xff00
 801adb0:	ea4e 040a 	orr.w	r4, lr, sl
 801adb4:	940a      	str	r4, [sp, #40]	@ 0x28
 801adb6:	9c16      	ldr	r4, [sp, #88]	@ 0x58
 801adb8:	2cff      	cmp	r4, #255	@ 0xff
 801adba:	d021      	beq.n	801ae00 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x282>
 801adbc:	9c0f      	ldr	r4, [sp, #60]	@ 0x3c
 801adbe:	f004 1bff 	and.w	fp, r4, #16711935	@ 0xff00ff
 801adc2:	9c16      	ldr	r4, [sp, #88]	@ 0x58
 801adc4:	fb04 fb0b 	mul.w	fp, r4, fp
 801adc8:	9c0f      	ldr	r4, [sp, #60]	@ 0x3c
 801adca:	f404 4a7f 	and.w	sl, r4, #65280	@ 0xff00
 801adce:	9c16      	ldr	r4, [sp, #88]	@ 0x58
 801add0:	ea4f 2e1b 	mov.w	lr, fp, lsr #8
 801add4:	fb04 fa0a 	mul.w	sl, r4, sl
 801add8:	f00e 1eff 	and.w	lr, lr, #16711935	@ 0xff00ff
 801addc:	f10b 1b01 	add.w	fp, fp, #65537	@ 0x10001
 801ade0:	f50a 7c80 	add.w	ip, sl, #256	@ 0x100
 801ade4:	44de      	add	lr, fp
 801ade6:	eb0c 2a1a 	add.w	sl, ip, sl, lsr #8
 801adea:	ea4f 2e1e 	mov.w	lr, lr, lsr #8
 801adee:	ea4f 2a1a 	mov.w	sl, sl, lsr #8
 801adf2:	f00e 1eff 	and.w	lr, lr, #16711935	@ 0xff00ff
 801adf6:	f40a 4a7f 	and.w	sl, sl, #65280	@ 0xff00
 801adfa:	ea4e 040a 	orr.w	r4, lr, sl
 801adfe:	940f      	str	r4, [sp, #60]	@ 0x3c
 801ae00:	9c0e      	ldr	r4, [sp, #56]	@ 0x38
 801ae02:	f004 1cff 	and.w	ip, r4, #16711935	@ 0xff00ff
 801ae06:	9c0a      	ldr	r4, [sp, #40]	@ 0x28
 801ae08:	f003 1eff 	and.w	lr, r3, #16711935	@ 0xff00ff
 801ae0c:	fb08 fc0c 	mul.w	ip, r8, ip
 801ae10:	fb02 cc0e 	mla	ip, r2, lr, ip
 801ae14:	f004 1eff 	and.w	lr, r4, #16711935	@ 0xff00ff
 801ae18:	9c0f      	ldr	r4, [sp, #60]	@ 0x3c
 801ae1a:	fb01 cc0e 	mla	ip, r1, lr, ip
 801ae1e:	f004 1eff 	and.w	lr, r4, #16711935	@ 0xff00ff
 801ae22:	9c0e      	ldr	r4, [sp, #56]	@ 0x38
 801ae24:	fb09 cc0e 	mla	ip, r9, lr, ip
 801ae28:	f404 4e7f 	and.w	lr, r4, #65280	@ 0xff00
 801ae2c:	fb08 f80e 	mul.w	r8, r8, lr
 801ae30:	f403 437f 	and.w	r3, r3, #65280	@ 0xff00
 801ae34:	fb02 8303 	mla	r3, r2, r3, r8
 801ae38:	9a0a      	ldr	r2, [sp, #40]	@ 0x28
 801ae3a:	9c0d      	ldr	r4, [sp, #52]	@ 0x34
 801ae3c:	f402 4a7f 	and.w	sl, r2, #65280	@ 0xff00
 801ae40:	9a0f      	ldr	r2, [sp, #60]	@ 0x3c
 801ae42:	fb01 330a 	mla	r3, r1, sl, r3
 801ae46:	f402 417f 	and.w	r1, r2, #65280	@ 0xff00
 801ae4a:	9a0d      	ldr	r2, [sp, #52]	@ 0x34
 801ae4c:	fb09 3901 	mla	r9, r9, r1, r3
 801ae50:	4342      	muls	r2, r0
 801ae52:	ea4f 2c1c 	mov.w	ip, ip, lsr #8
 801ae56:	ea4f 2919 	mov.w	r9, r9, lsr #8
 801ae5a:	883b      	ldrh	r3, [r7, #0]
 801ae5c:	1c50      	adds	r0, r2, #1
 801ae5e:	f00c 1cff 	and.w	ip, ip, #16711935	@ 0xff00ff
 801ae62:	f409 497f 	and.w	r9, r9, #65280	@ 0xff00
 801ae66:	ea4c 0c09 	orr.w	ip, ip, r9
 801ae6a:	eb00 2012 	add.w	r0, r0, r2, lsr #8
 801ae6e:	1219      	asrs	r1, r3, #8
 801ae70:	ea4f 421c 	mov.w	r2, ip, lsr #16
 801ae74:	ea6f 2010 	mvn.w	r0, r0, lsr #8
 801ae78:	b2c0      	uxtb	r0, r0
 801ae7a:	fb12 f204 	smulbb	r2, r2, r4
 801ae7e:	f001 01f8 	and.w	r1, r1, #248	@ 0xf8
 801ae82:	fb01 2100 	mla	r1, r1, r0, r2
 801ae86:	f3cc 2e07 	ubfx	lr, ip, #8, #8
 801ae8a:	10da      	asrs	r2, r3, #3
 801ae8c:	fa5f fc8c 	uxtb.w	ip, ip
 801ae90:	00db      	lsls	r3, r3, #3
 801ae92:	fb1c fc04 	smulbb	ip, ip, r4
 801ae96:	b2db      	uxtb	r3, r3
 801ae98:	b289      	uxth	r1, r1
 801ae9a:	fb03 c300 	mla	r3, r3, r0, ip
 801ae9e:	fa1f fc83 	uxth.w	ip, r3
 801aea2:	1c4b      	adds	r3, r1, #1
 801aea4:	eb03 2111 	add.w	r1, r3, r1, lsr #8
 801aea8:	f002 02fc 	and.w	r2, r2, #252	@ 0xfc
 801aeac:	fb1e fe04 	smulbb	lr, lr, r4
 801aeb0:	f10c 0301 	add.w	r3, ip, #1
 801aeb4:	fb02 e200 	mla	r2, r2, r0, lr
 801aeb8:	eb03 231c 	add.w	r3, r3, ip, lsr #8
 801aebc:	b292      	uxth	r2, r2
 801aebe:	f401 4178 	and.w	r1, r1, #63488	@ 0xf800
 801aec2:	f3c3 23c4 	ubfx	r3, r3, #11, #5
 801aec6:	430b      	orrs	r3, r1
 801aec8:	1c51      	adds	r1, r2, #1
 801aeca:	eb01 2212 	add.w	r2, r1, r2, lsr #8
 801aece:	0952      	lsrs	r2, r2, #5
 801aed0:	f402 62fc 	and.w	r2, r2, #2016	@ 0x7e0
 801aed4:	4313      	orrs	r3, r2
 801aed6:	803b      	strh	r3, [r7, #0]
 801aed8:	9b2b      	ldr	r3, [sp, #172]	@ 0xac
 801aeda:	9a29      	ldr	r2, [sp, #164]	@ 0xa4
 801aedc:	441a      	add	r2, r3
 801aede:	9b2c      	ldr	r3, [sp, #176]	@ 0xb0
 801aee0:	9229      	str	r2, [sp, #164]	@ 0xa4
 801aee2:	441d      	add	r5, r3
 801aee4:	9b1a      	ldr	r3, [sp, #104]	@ 0x68
 801aee6:	3b01      	subs	r3, #1
 801aee8:	3702      	adds	r7, #2
 801aeea:	931a      	str	r3, [sp, #104]	@ 0x68
 801aeec:	e694      	b.n	801ac18 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x9a>
 801aeee:	9b2b      	ldr	r3, [sp, #172]	@ 0xac
 801aef0:	9c29      	ldr	r4, [sp, #164]	@ 0xa4
 801aef2:	441c      	add	r4, r3
 801aef4:	9b2c      	ldr	r3, [sp, #176]	@ 0xb0
 801aef6:	9429      	str	r4, [sp, #164]	@ 0xa4
 801aef8:	441d      	add	r5, r3
 801aefa:	9b09      	ldr	r3, [sp, #36]	@ 0x24
 801aefc:	3b01      	subs	r3, #1
 801aefe:	9309      	str	r3, [sp, #36]	@ 0x24
 801af00:	9b0c      	ldr	r3, [sp, #48]	@ 0x30
 801af02:	3302      	adds	r3, #2
 801af04:	930c      	str	r3, [sp, #48]	@ 0x30
 801af06:	e666      	b.n	801abd6 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x58>
 801af08:	d024      	beq.n	801af54 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3d6>
 801af0a:	9b09      	ldr	r3, [sp, #36]	@ 0x24
 801af0c:	982b      	ldr	r0, [sp, #172]	@ 0xac
 801af0e:	9c29      	ldr	r4, [sp, #164]	@ 0xa4
 801af10:	3b01      	subs	r3, #1
 801af12:	fb00 4003 	mla	r0, r0, r3, r4
 801af16:	1400      	asrs	r0, r0, #16
 801af18:	f53f ae7b 	bmi.w	801ac12 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x94>
 801af1c:	3901      	subs	r1, #1
 801af1e:	4288      	cmp	r0, r1
 801af20:	f6bf ae77 	bge.w	801ac12 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x94>
 801af24:	992c      	ldr	r1, [sp, #176]	@ 0xb0
 801af26:	fb01 5303 	mla	r3, r1, r3, r5
 801af2a:	141b      	asrs	r3, r3, #16
 801af2c:	f53f ae71 	bmi.w	801ac12 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x94>
 801af30:	3a01      	subs	r2, #1
 801af32:	4293      	cmp	r3, r2
 801af34:	f6bf ae6d 	bge.w	801ac12 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x94>
 801af38:	f8dd b024 	ldr.w	fp, [sp, #36]	@ 0x24
 801af3c:	f8dd 9030 	ldr.w	r9, [sp, #48]	@ 0x30
 801af40:	f1bb 0f00 	cmp.w	fp, #0
 801af44:	dc70      	bgt.n	801b028 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x4aa>
 801af46:	9b09      	ldr	r3, [sp, #36]	@ 0x24
 801af48:	ea23 74e3 	bic.w	r4, r3, r3, asr #31
 801af4c:	9b0c      	ldr	r3, [sp, #48]	@ 0x30
 801af4e:	eb03 0344 	add.w	r3, r3, r4, lsl #1
 801af52:	930c      	str	r3, [sp, #48]	@ 0x30
 801af54:	9b19      	ldr	r3, [sp, #100]	@ 0x64
 801af56:	2b00      	cmp	r3, #0
 801af58:	f340 81be 	ble.w	801b2d8 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x75a>
 801af5c:	ee30 0a04 	vadd.f32	s0, s0, s8
 801af60:	eeb7 7a00 	vmov.f32	s14, #112	@ 0x3f800000  1.0
 801af64:	eec7 7a00 	vdiv.f32	s15, s14, s0
 801af68:	9b28      	ldr	r3, [sp, #160]	@ 0xa0
 801af6a:	ee70 0aa4 	vadd.f32	s1, s1, s9
 801af6e:	ee31 1a05 	vadd.f32	s2, s2, s10
 801af72:	ee20 7aa7 	vmul.f32	s14, s1, s15
 801af76:	eef0 6a62 	vmov.f32	s13, s5
 801af7a:	ee61 7a27 	vmul.f32	s15, s2, s15
 801af7e:	eefe 6ac8 	vcvt.s32.f32	s13, s13, #16
 801af82:	ee77 2a62 	vsub.f32	s5, s14, s5
 801af86:	edcd 6a29 	vstr	s13, [sp, #164]	@ 0xa4
 801af8a:	eefe 2ac8 	vcvt.s32.f32	s5, s5, #16
 801af8e:	eef0 6a43 	vmov.f32	s13, s6
 801af92:	ee37 3ac3 	vsub.f32	s6, s15, s6
 801af96:	ee12 2a90 	vmov	r2, s5
 801af9a:	eebe 3ac8 	vcvt.s32.f32	s6, s6, #16
 801af9e:	fb92 f3f3 	sdiv	r3, r2, r3
 801afa2:	ee13 2a10 	vmov	r2, s6
 801afa6:	932b      	str	r3, [sp, #172]	@ 0xac
 801afa8:	9b28      	ldr	r3, [sp, #160]	@ 0xa0
 801afaa:	fb92 f3f3 	sdiv	r3, r2, r3
 801afae:	932c      	str	r3, [sp, #176]	@ 0xb0
 801afb0:	9b19      	ldr	r3, [sp, #100]	@ 0x64
 801afb2:	9a1b      	ldr	r2, [sp, #108]	@ 0x6c
 801afb4:	3b01      	subs	r3, #1
 801afb6:	eefe 6ac8 	vcvt.s32.f32	s13, s13, #16
 801afba:	9319      	str	r3, [sp, #100]	@ 0x64
 801afbc:	9b28      	ldr	r3, [sp, #160]	@ 0xa0
 801afbe:	bf08      	it	eq
 801afc0:	4613      	moveq	r3, r2
 801afc2:	ee16 5a90 	vmov	r5, s13
 801afc6:	9309      	str	r3, [sp, #36]	@ 0x24
 801afc8:	eeb0 3a67 	vmov.f32	s6, s15
 801afcc:	eef0 2a47 	vmov.f32	s5, s14
 801afd0:	e5f3      	b.n	801abba <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3c>
 801afd2:	2900      	cmp	r1, #0
 801afd4:	f43f ae66 	beq.w	801aca4 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x126>
 801afd8:	f818 0000 	ldrb.w	r0, [r8, r0]
 801afdc:	f856 0020 	ldr.w	r0, [r6, r0, lsl #2]
 801afe0:	900a      	str	r0, [sp, #40]	@ 0x28
 801afe2:	0e00      	lsrs	r0, r0, #24
 801afe4:	9013      	str	r0, [sp, #76]	@ 0x4c
 801afe6:	e65d      	b.n	801aca4 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x126>
 801afe8:	f113 0801 	adds.w	r8, r3, #1
 801afec:	f53f af74 	bmi.w	801aed8 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x35a>
 801aff0:	4540      	cmp	r0, r8
 801aff2:	f6ff af71 	blt.w	801aed8 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x35a>
 801aff6:	f11c 0801 	adds.w	r8, ip, #1
 801affa:	f53f af6d 	bmi.w	801aed8 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x35a>
 801affe:	45c6      	cmp	lr, r8
 801b000:	f6ff af6a 	blt.w	801aed8 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x35a>
 801b004:	9c1c      	ldr	r4, [sp, #112]	@ 0x70
 801b006:	9302      	str	r3, [sp, #8]
 801b008:	b200      	sxth	r0, r0
 801b00a:	fa0f f38e 	sxth.w	r3, lr
 801b00e:	e9cd 1405 	strd	r1, r4, [sp, #20]
 801b012:	e9cd c203 	strd	ip, r2, [sp, #12]
 801b016:	9301      	str	r3, [sp, #4]
 801b018:	9000      	str	r0, [sp, #0]
 801b01a:	4633      	mov	r3, r6
 801b01c:	9a12      	ldr	r2, [sp, #72]	@ 0x48
 801b01e:	981d      	ldr	r0, [sp, #116]	@ 0x74
 801b020:	4639      	mov	r1, r7
 801b022:	f7ff fc62 	bl	801a8ea <_ZNK8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKmssiihhh>
 801b026:	e757      	b.n	801aed8 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x35a>
 801b028:	9b29      	ldr	r3, [sp, #164]	@ 0xa4
 801b02a:	9c29      	ldr	r4, [sp, #164]	@ 0xa4
 801b02c:	f3c3 3203 	ubfx	r2, r3, #12, #4
 801b030:	9b30      	ldr	r3, [sp, #192]	@ 0xc0
 801b032:	f9b3 1008 	ldrsh.w	r1, [r3, #8]
 801b036:	1427      	asrs	r7, r4, #16
 801b038:	142b      	asrs	r3, r5, #16
 801b03a:	fb01 7303 	mla	r3, r1, r3, r7
 801b03e:	9c12      	ldr	r4, [sp, #72]	@ 0x48
 801b040:	18e7      	adds	r7, r4, r3
 801b042:	5ce3      	ldrb	r3, [r4, r3]
 801b044:	f856 3023 	ldr.w	r3, [r6, r3, lsl #2]
 801b048:	f3c5 3003 	ubfx	r0, r5, #12, #4
 801b04c:	ea4f 6c13 	mov.w	ip, r3, lsr #24
 801b050:	2a00      	cmp	r2, #0
 801b052:	f000 8137 	beq.w	801b2c4 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x746>
 801b056:	f897 e001 	ldrb.w	lr, [r7, #1]
 801b05a:	f856 402e 	ldr.w	r4, [r6, lr, lsl #2]
 801b05e:	9410      	str	r4, [sp, #64]	@ 0x40
 801b060:	0e24      	lsrs	r4, r4, #24
 801b062:	9417      	str	r4, [sp, #92]	@ 0x5c
 801b064:	b170      	cbz	r0, 801b084 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x506>
 801b066:	eb07 0e01 	add.w	lr, r7, r1
 801b06a:	5c79      	ldrb	r1, [r7, r1]
 801b06c:	f856 1021 	ldr.w	r1, [r6, r1, lsl #2]
 801b070:	910b      	str	r1, [sp, #44]	@ 0x2c
 801b072:	0e09      	lsrs	r1, r1, #24
 801b074:	9114      	str	r1, [sp, #80]	@ 0x50
 801b076:	f89e 1001 	ldrb.w	r1, [lr, #1]
 801b07a:	f856 1021 	ldr.w	r1, [r6, r1, lsl #2]
 801b07e:	9111      	str	r1, [sp, #68]	@ 0x44
 801b080:	0e09      	lsrs	r1, r1, #24
 801b082:	9118      	str	r1, [sp, #96]	@ 0x60
 801b084:	b292      	uxth	r2, r2
 801b086:	b280      	uxth	r0, r0
 801b088:	fb02 f800 	mul.w	r8, r2, r0
 801b08c:	ebc8 1000 	rsb	r0, r8, r0, lsl #4
 801b090:	0112      	lsls	r2, r2, #4
 801b092:	eba2 0e08 	sub.w	lr, r2, r8
 801b096:	b280      	uxth	r0, r0
 801b098:	f5c2 7280 	rsb	r2, r2, #256	@ 0x100
 801b09c:	9917      	ldr	r1, [sp, #92]	@ 0x5c
 801b09e:	9c14      	ldr	r4, [sp, #80]	@ 0x50
 801b0a0:	fa1f fe8e 	uxth.w	lr, lr
 801b0a4:	1a12      	subs	r2, r2, r0
 801b0a6:	b292      	uxth	r2, r2
 801b0a8:	fb0e f101 	mul.w	r1, lr, r1
 801b0ac:	fb02 110c 	mla	r1, r2, ip, r1
 801b0b0:	fb00 1104 	mla	r1, r0, r4, r1
 801b0b4:	9c18      	ldr	r4, [sp, #96]	@ 0x60
 801b0b6:	fb08 1104 	mla	r1, r8, r4, r1
 801b0ba:	f3c1 2107 	ubfx	r1, r1, #8, #8
 801b0be:	2900      	cmp	r1, #0
 801b0c0:	f000 80f5 	beq.w	801b2ae <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x730>
 801b0c4:	f1bc 0fff 	cmp.w	ip, #255	@ 0xff
 801b0c8:	d019      	beq.n	801b0fe <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x580>
 801b0ca:	f003 1aff 	and.w	sl, r3, #16711935	@ 0xff00ff
 801b0ce:	fb0c fa0a 	mul.w	sl, ip, sl
 801b0d2:	f403 437f 	and.w	r3, r3, #65280	@ 0xff00
 801b0d6:	fb0c fc03 	mul.w	ip, ip, r3
 801b0da:	ea4f 231a 	mov.w	r3, sl, lsr #8
 801b0de:	f003 13ff 	and.w	r3, r3, #16711935	@ 0xff00ff
 801b0e2:	f10a 1a01 	add.w	sl, sl, #65537	@ 0x10001
 801b0e6:	f50c 7780 	add.w	r7, ip, #256	@ 0x100
 801b0ea:	4453      	add	r3, sl
 801b0ec:	eb07 271c 	add.w	r7, r7, ip, lsr #8
 801b0f0:	0a1b      	lsrs	r3, r3, #8
 801b0f2:	0a3f      	lsrs	r7, r7, #8
 801b0f4:	f003 13ff 	and.w	r3, r3, #16711935	@ 0xff00ff
 801b0f8:	f407 477f 	and.w	r7, r7, #65280	@ 0xff00
 801b0fc:	433b      	orrs	r3, r7
 801b0fe:	9c17      	ldr	r4, [sp, #92]	@ 0x5c
 801b100:	2cff      	cmp	r4, #255	@ 0xff
 801b102:	d020      	beq.n	801b146 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x5c8>
 801b104:	9c10      	ldr	r4, [sp, #64]	@ 0x40
 801b106:	f004 17ff 	and.w	r7, r4, #16711935	@ 0xff00ff
 801b10a:	9c17      	ldr	r4, [sp, #92]	@ 0x5c
 801b10c:	4367      	muls	r7, r4
 801b10e:	9c10      	ldr	r4, [sp, #64]	@ 0x40
 801b110:	f404 4a7f 	and.w	sl, r4, #65280	@ 0xff00
 801b114:	9c17      	ldr	r4, [sp, #92]	@ 0x5c
 801b116:	ea4f 2c17 	mov.w	ip, r7, lsr #8
 801b11a:	fb04 fa0a 	mul.w	sl, r4, sl
 801b11e:	f107 1701 	add.w	r7, r7, #65537	@ 0x10001
 801b122:	f00c 1cff 	and.w	ip, ip, #16711935	@ 0xff00ff
 801b126:	44bc      	add	ip, r7
 801b128:	f50a 7780 	add.w	r7, sl, #256	@ 0x100
 801b12c:	eb07 2a1a 	add.w	sl, r7, sl, lsr #8
 801b130:	ea4f 2c1c 	mov.w	ip, ip, lsr #8
 801b134:	ea4f 2a1a 	mov.w	sl, sl, lsr #8
 801b138:	f00c 1cff 	and.w	ip, ip, #16711935	@ 0xff00ff
 801b13c:	f40a 4a7f 	and.w	sl, sl, #65280	@ 0xff00
 801b140:	ea4c 040a 	orr.w	r4, ip, sl
 801b144:	9410      	str	r4, [sp, #64]	@ 0x40
 801b146:	9c14      	ldr	r4, [sp, #80]	@ 0x50
 801b148:	2cff      	cmp	r4, #255	@ 0xff
 801b14a:	d020      	beq.n	801b18e <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x610>
 801b14c:	9c0b      	ldr	r4, [sp, #44]	@ 0x2c
 801b14e:	f004 17ff 	and.w	r7, r4, #16711935	@ 0xff00ff
 801b152:	9c14      	ldr	r4, [sp, #80]	@ 0x50
 801b154:	4367      	muls	r7, r4
 801b156:	9c0b      	ldr	r4, [sp, #44]	@ 0x2c
 801b158:	f404 4a7f 	and.w	sl, r4, #65280	@ 0xff00
 801b15c:	9c14      	ldr	r4, [sp, #80]	@ 0x50
 801b15e:	ea4f 2c17 	mov.w	ip, r7, lsr #8
 801b162:	fb04 fa0a 	mul.w	sl, r4, sl
 801b166:	f107 1701 	add.w	r7, r7, #65537	@ 0x10001
 801b16a:	f00c 1cff 	and.w	ip, ip, #16711935	@ 0xff00ff
 801b16e:	44bc      	add	ip, r7
 801b170:	f50a 7780 	add.w	r7, sl, #256	@ 0x100
 801b174:	eb07 2a1a 	add.w	sl, r7, sl, lsr #8
 801b178:	ea4f 2c1c 	mov.w	ip, ip, lsr #8
 801b17c:	ea4f 2a1a 	mov.w	sl, sl, lsr #8
 801b180:	f00c 1cff 	and.w	ip, ip, #16711935	@ 0xff00ff
 801b184:	f40a 4a7f 	and.w	sl, sl, #65280	@ 0xff00
 801b188:	ea4c 040a 	orr.w	r4, ip, sl
 801b18c:	940b      	str	r4, [sp, #44]	@ 0x2c
 801b18e:	9c18      	ldr	r4, [sp, #96]	@ 0x60
 801b190:	2cff      	cmp	r4, #255	@ 0xff
 801b192:	d020      	beq.n	801b1d6 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x658>
 801b194:	9c11      	ldr	r4, [sp, #68]	@ 0x44
 801b196:	f004 17ff 	and.w	r7, r4, #16711935	@ 0xff00ff
 801b19a:	9c18      	ldr	r4, [sp, #96]	@ 0x60
 801b19c:	4367      	muls	r7, r4
 801b19e:	9c11      	ldr	r4, [sp, #68]	@ 0x44
 801b1a0:	f404 4a7f 	and.w	sl, r4, #65280	@ 0xff00
 801b1a4:	9c18      	ldr	r4, [sp, #96]	@ 0x60
 801b1a6:	ea4f 2c17 	mov.w	ip, r7, lsr #8
 801b1aa:	fb04 fa0a 	mul.w	sl, r4, sl
 801b1ae:	f107 1701 	add.w	r7, r7, #65537	@ 0x10001
 801b1b2:	f00c 1cff 	and.w	ip, ip, #16711935	@ 0xff00ff
 801b1b6:	44bc      	add	ip, r7
 801b1b8:	f50a 7780 	add.w	r7, sl, #256	@ 0x100
 801b1bc:	eb07 2a1a 	add.w	sl, r7, sl, lsr #8
 801b1c0:	ea4f 2c1c 	mov.w	ip, ip, lsr #8
 801b1c4:	ea4f 2a1a 	mov.w	sl, sl, lsr #8
 801b1c8:	f00c 1cff 	and.w	ip, ip, #16711935	@ 0xff00ff
 801b1cc:	f40a 4a7f 	and.w	sl, sl, #65280	@ 0xff00
 801b1d0:	ea4c 040a 	orr.w	r4, ip, sl
 801b1d4:	9411      	str	r4, [sp, #68]	@ 0x44
 801b1d6:	9c10      	ldr	r4, [sp, #64]	@ 0x40
 801b1d8:	f004 17ff 	and.w	r7, r4, #16711935	@ 0xff00ff
 801b1dc:	9c0b      	ldr	r4, [sp, #44]	@ 0x2c
 801b1de:	f003 1cff 	and.w	ip, r3, #16711935	@ 0xff00ff
 801b1e2:	fb0e f707 	mul.w	r7, lr, r7
 801b1e6:	fb02 770c 	mla	r7, r2, ip, r7
 801b1ea:	f004 1cff 	and.w	ip, r4, #16711935	@ 0xff00ff
 801b1ee:	9c11      	ldr	r4, [sp, #68]	@ 0x44
 801b1f0:	fb00 770c 	mla	r7, r0, ip, r7
 801b1f4:	f004 1cff 	and.w	ip, r4, #16711935	@ 0xff00ff
 801b1f8:	9c10      	ldr	r4, [sp, #64]	@ 0x40
 801b1fa:	fb08 770c 	mla	r7, r8, ip, r7
 801b1fe:	f404 4c7f 	and.w	ip, r4, #65280	@ 0xff00
 801b202:	fb0e fe0c 	mul.w	lr, lr, ip
 801b206:	f403 437f 	and.w	r3, r3, #65280	@ 0xff00
 801b20a:	fb02 e303 	mla	r3, r2, r3, lr
 801b20e:	9a0b      	ldr	r2, [sp, #44]	@ 0x2c
 801b210:	9c0d      	ldr	r4, [sp, #52]	@ 0x34
 801b212:	f402 4a7f 	and.w	sl, r2, #65280	@ 0xff00
 801b216:	9a11      	ldr	r2, [sp, #68]	@ 0x44
 801b218:	fb00 330a 	mla	r3, r0, sl, r3
 801b21c:	f402 4c7f 	and.w	ip, r2, #65280	@ 0xff00
 801b220:	fb08 3c0c 	mla	ip, r8, ip, r3
 801b224:	9b0d      	ldr	r3, [sp, #52]	@ 0x34
 801b226:	f8b9 0000 	ldrh.w	r0, [r9]
 801b22a:	434b      	muls	r3, r1
 801b22c:	0a3f      	lsrs	r7, r7, #8
 801b22e:	ea4f 2c1c 	mov.w	ip, ip, lsr #8
 801b232:	f40c 4c7f 	and.w	ip, ip, #65280	@ 0xff00
 801b236:	1c59      	adds	r1, r3, #1
 801b238:	f007 17ff 	and.w	r7, r7, #16711935	@ 0xff00ff
 801b23c:	ea47 070c 	orr.w	r7, r7, ip
 801b240:	eb01 2113 	add.w	r1, r1, r3, lsr #8
 801b244:	1202      	asrs	r2, r0, #8
 801b246:	0c3b      	lsrs	r3, r7, #16
 801b248:	ea6f 2111 	mvn.w	r1, r1, lsr #8
 801b24c:	b2c9      	uxtb	r1, r1
 801b24e:	fb13 f304 	smulbb	r3, r3, r4
 801b252:	f002 02f8 	and.w	r2, r2, #248	@ 0xf8
 801b256:	fb02 3201 	mla	r2, r2, r1, r3
 801b25a:	f3c7 2c07 	ubfx	ip, r7, #8, #8
 801b25e:	10c3      	asrs	r3, r0, #3
 801b260:	b2ff      	uxtb	r7, r7
 801b262:	00c0      	lsls	r0, r0, #3
 801b264:	b292      	uxth	r2, r2
 801b266:	fb1c fc04 	smulbb	ip, ip, r4
 801b26a:	f003 03fc 	and.w	r3, r3, #252	@ 0xfc
 801b26e:	b2c0      	uxtb	r0, r0
 801b270:	fb17 f704 	smulbb	r7, r7, r4
 801b274:	fb03 c301 	mla	r3, r3, r1, ip
 801b278:	fb00 7001 	mla	r0, r0, r1, r7
 801b27c:	f102 0c01 	add.w	ip, r2, #1
 801b280:	b280      	uxth	r0, r0
 801b282:	eb0c 2212 	add.w	r2, ip, r2, lsr #8
 801b286:	f402 4c78 	and.w	ip, r2, #63488	@ 0xf800
 801b28a:	1c42      	adds	r2, r0, #1
 801b28c:	eb02 2210 	add.w	r2, r2, r0, lsr #8
 801b290:	b29b      	uxth	r3, r3
 801b292:	f3c2 22c4 	ubfx	r2, r2, #11, #5
 801b296:	ea42 020c 	orr.w	r2, r2, ip
 801b29a:	f103 0c01 	add.w	ip, r3, #1
 801b29e:	eb0c 2313 	add.w	r3, ip, r3, lsr #8
 801b2a2:	095b      	lsrs	r3, r3, #5
 801b2a4:	f403 63fc 	and.w	r3, r3, #2016	@ 0x7e0
 801b2a8:	431a      	orrs	r2, r3
 801b2aa:	f8a9 2000 	strh.w	r2, [r9]
 801b2ae:	9b2b      	ldr	r3, [sp, #172]	@ 0xac
 801b2b0:	9a29      	ldr	r2, [sp, #164]	@ 0xa4
 801b2b2:	441a      	add	r2, r3
 801b2b4:	9b2c      	ldr	r3, [sp, #176]	@ 0xb0
 801b2b6:	9229      	str	r2, [sp, #164]	@ 0xa4
 801b2b8:	f109 0902 	add.w	r9, r9, #2
 801b2bc:	441d      	add	r5, r3
 801b2be:	f10b 3bff 	add.w	fp, fp, #4294967295
 801b2c2:	e63d      	b.n	801af40 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3c2>
 801b2c4:	2800      	cmp	r0, #0
 801b2c6:	f43f aedd 	beq.w	801b084 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x506>
 801b2ca:	5c79      	ldrb	r1, [r7, r1]
 801b2cc:	f856 1021 	ldr.w	r1, [r6, r1, lsl #2]
 801b2d0:	910b      	str	r1, [sp, #44]	@ 0x2c
 801b2d2:	0e09      	lsrs	r1, r1, #24
 801b2d4:	9114      	str	r1, [sp, #80]	@ 0x50
 801b2d6:	e6d5      	b.n	801b084 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x506>
 801b2d8:	b01f      	add	sp, #124	@ 0x7c
 801b2da:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}

0801b2de <_ZNK8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKmssiihh>:
 801b2de:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 801b2e2:	b089      	sub	sp, #36	@ 0x24
 801b2e4:	9101      	str	r1, [sp, #4]
 801b2e6:	9801      	ldr	r0, [sp, #4]
 801b2e8:	f9bd c048 	ldrsh.w	ip, [sp, #72]	@ 0x48
 801b2ec:	8800      	ldrh	r0, [r0, #0]
 801b2ee:	f9bd 804c 	ldrsh.w	r8, [sp, #76]	@ 0x4c
 801b2f2:	f89d 5058 	ldrb.w	r5, [sp, #88]	@ 0x58
 801b2f6:	f89d 405c 	ldrb.w	r4, [sp, #92]	@ 0x5c
 801b2fa:	1206      	asrs	r6, r0, #8
 801b2fc:	e9dd 1714 	ldrd	r1, r7, [sp, #80]	@ 0x50
 801b300:	f006 06f8 	and.w	r6, r6, #248	@ 0xf8
 801b304:	9602      	str	r6, [sp, #8]
 801b306:	10c6      	asrs	r6, r0, #3
 801b308:	00c0      	lsls	r0, r0, #3
 801b30a:	b2c0      	uxtb	r0, r0
 801b30c:	f006 06fc 	and.w	r6, r6, #252	@ 0xfc
 801b310:	9004      	str	r0, [sp, #16]
 801b312:	2f00      	cmp	r7, #0
 801b314:	fb07 100c 	mla	r0, r7, ip, r1
 801b318:	9603      	str	r6, [sp, #12]
 801b31a:	eb02 0e00 	add.w	lr, r2, r0
 801b31e:	f2c0 810a 	blt.w	801b536 <_ZNK8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKmssiihh+0x258>
 801b322:	45b8      	cmp	r8, r7
 801b324:	f340 8107 	ble.w	801b536 <_ZNK8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKmssiihh+0x258>
 801b328:	2900      	cmp	r1, #0
 801b32a:	f2c0 8102 	blt.w	801b532 <_ZNK8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKmssiihh+0x254>
 801b32e:	458c      	cmp	ip, r1
 801b330:	f340 80ff 	ble.w	801b532 <_ZNK8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKmssiihh+0x254>
 801b334:	5c12      	ldrb	r2, [r2, r0]
 801b336:	f853 0022 	ldr.w	r0, [r3, r2, lsl #2]
 801b33a:	1c4a      	adds	r2, r1, #1
 801b33c:	f100 80fe 	bmi.w	801b53c <_ZNK8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKmssiihh+0x25e>
 801b340:	4594      	cmp	ip, r2
 801b342:	f340 80fb 	ble.w	801b53c <_ZNK8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKmssiihh+0x25e>
 801b346:	2d00      	cmp	r5, #0
 801b348:	f000 80fa 	beq.w	801b540 <_ZNK8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKmssiihh+0x262>
 801b34c:	f89e 2001 	ldrb.w	r2, [lr, #1]
 801b350:	f853 6022 	ldr.w	r6, [r3, r2, lsl #2]
 801b354:	3701      	adds	r7, #1
 801b356:	f100 80f7 	bmi.w	801b548 <_ZNK8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKmssiihh+0x26a>
 801b35a:	45b8      	cmp	r8, r7
 801b35c:	f340 80f4 	ble.w	801b548 <_ZNK8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKmssiihh+0x26a>
 801b360:	2c00      	cmp	r4, #0
 801b362:	f000 80f4 	beq.w	801b54e <_ZNK8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKmssiihh+0x270>
 801b366:	2900      	cmp	r1, #0
 801b368:	eb0e 020c 	add.w	r2, lr, ip
 801b36c:	f2c0 80ea 	blt.w	801b544 <_ZNK8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKmssiihh+0x266>
 801b370:	458c      	cmp	ip, r1
 801b372:	f340 80e7 	ble.w	801b544 <_ZNK8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKmssiihh+0x266>
 801b376:	f81e 700c 	ldrb.w	r7, [lr, ip]
 801b37a:	f853 7027 	ldr.w	r7, [r3, r7, lsl #2]
 801b37e:	3101      	adds	r1, #1
 801b380:	f100 80e8 	bmi.w	801b554 <_ZNK8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKmssiihh+0x276>
 801b384:	458c      	cmp	ip, r1
 801b386:	f340 80e5 	ble.w	801b554 <_ZNK8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKmssiihh+0x276>
 801b38a:	2d00      	cmp	r5, #0
 801b38c:	f000 80e4 	beq.w	801b558 <_ZNK8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKmssiihh+0x27a>
 801b390:	7852      	ldrb	r2, [r2, #1]
 801b392:	f853 1022 	ldr.w	r1, [r3, r2, lsl #2]
 801b396:	0e0b      	lsrs	r3, r1, #24
 801b398:	ea4f 6a10 	mov.w	sl, r0, lsr #24
 801b39c:	9300      	str	r3, [sp, #0]
 801b39e:	b2a4      	uxth	r4, r4
 801b3a0:	b2ab      	uxth	r3, r5
 801b3a2:	f000 15ff 	and.w	r5, r0, #16711935	@ 0xff00ff
 801b3a6:	fb03 f904 	mul.w	r9, r3, r4
 801b3aa:	fb0a f505 	mul.w	r5, sl, r5
 801b3ae:	011b      	lsls	r3, r3, #4
 801b3b0:	eba3 0e09 	sub.w	lr, r3, r9
 801b3b4:	f5c3 7280 	rsb	r2, r3, #256	@ 0x100
 801b3b8:	f400 437f 	and.w	r3, r0, #65280	@ 0xff00
 801b3bc:	0a28      	lsrs	r0, r5, #8
 801b3be:	f000 10ff 	and.w	r0, r0, #16711935	@ 0xff00ff
 801b3c2:	f105 1501 	add.w	r5, r5, #65537	@ 0x10001
 801b3c6:	4405      	add	r5, r0
 801b3c8:	0a2d      	lsrs	r5, r5, #8
 801b3ca:	fb0a f303 	mul.w	r3, sl, r3
 801b3ce:	f005 10ff 	and.w	r0, r5, #16711935	@ 0xff00ff
 801b3d2:	9005      	str	r0, [sp, #20]
 801b3d4:	f503 7080 	add.w	r0, r3, #256	@ 0x100
 801b3d8:	eb00 2313 	add.w	r3, r0, r3, lsr #8
 801b3dc:	0a1b      	lsrs	r3, r3, #8
 801b3de:	ea4f 6b16 	mov.w	fp, r6, lsr #24
 801b3e2:	9306      	str	r3, [sp, #24]
 801b3e4:	f006 13ff 	and.w	r3, r6, #16711935	@ 0xff00ff
 801b3e8:	fb0b f303 	mul.w	r3, fp, r3
 801b3ec:	0a1d      	lsrs	r5, r3, #8
 801b3ee:	f406 467f 	and.w	r6, r6, #65280	@ 0xff00
 801b3f2:	ea4f 6817 	mov.w	r8, r7, lsr #24
 801b3f6:	fb0b f606 	mul.w	r6, fp, r6
 801b3fa:	f103 1301 	add.w	r3, r3, #65537	@ 0x10001
 801b3fe:	f007 1cff 	and.w	ip, r7, #16711935	@ 0xff00ff
 801b402:	f005 15ff 	and.w	r5, r5, #16711935	@ 0xff00ff
 801b406:	f407 477f 	and.w	r7, r7, #65280	@ 0xff00
 801b40a:	fb08 f707 	mul.w	r7, r8, r7
 801b40e:	441d      	add	r5, r3
 801b410:	f506 7380 	add.w	r3, r6, #256	@ 0x100
 801b414:	eb03 2616 	add.w	r6, r3, r6, lsr #8
 801b418:	f507 7380 	add.w	r3, r7, #256	@ 0x100
 801b41c:	eb03 2317 	add.w	r3, r3, r7, lsr #8
 801b420:	fb08 fc0c 	mul.w	ip, r8, ip
 801b424:	0a1b      	lsrs	r3, r3, #8
 801b426:	9307      	str	r3, [sp, #28]
 801b428:	ea4f 201c 	mov.w	r0, ip, lsr #8
 801b42c:	0e0b      	lsrs	r3, r1, #24
 801b42e:	f001 17ff 	and.w	r7, r1, #16711935	@ 0xff00ff
 801b432:	435f      	muls	r7, r3
 801b434:	f10c 1c01 	add.w	ip, ip, #65537	@ 0x10001
 801b438:	f000 10ff 	and.w	r0, r0, #16711935	@ 0xff00ff
 801b43c:	ebc9 1404 	rsb	r4, r9, r4, lsl #4
 801b440:	4460      	add	r0, ip
 801b442:	ea4f 2c17 	mov.w	ip, r7, lsr #8
 801b446:	b2a4      	uxth	r4, r4
 801b448:	f107 1701 	add.w	r7, r7, #65537	@ 0x10001
 801b44c:	0a2d      	lsrs	r5, r5, #8
 801b44e:	f401 417f 	and.w	r1, r1, #65280	@ 0xff00
 801b452:	f00c 1cff 	and.w	ip, ip, #16711935	@ 0xff00ff
 801b456:	fa1f fe8e 	uxth.w	lr, lr
 801b45a:	4359      	muls	r1, r3
 801b45c:	1b12      	subs	r2, r2, r4
 801b45e:	9b05      	ldr	r3, [sp, #20]
 801b460:	44bc      	add	ip, r7
 801b462:	f005 15ff 	and.w	r5, r5, #16711935	@ 0xff00ff
 801b466:	b292      	uxth	r2, r2
 801b468:	fb05 f50e 	mul.w	r5, r5, lr
 801b46c:	ea4f 2c1c 	mov.w	ip, ip, lsr #8
 801b470:	fb03 5502 	mla	r5, r3, r2, r5
 801b474:	f00c 1cff 	and.w	ip, ip, #16711935	@ 0xff00ff
 801b478:	9b06      	ldr	r3, [sp, #24]
 801b47a:	f501 7780 	add.w	r7, r1, #256	@ 0x100
 801b47e:	0a36      	lsrs	r6, r6, #8
 801b480:	0a00      	lsrs	r0, r0, #8
 801b482:	fb0c 5509 	mla	r5, ip, r9, r5
 801b486:	f000 10ff 	and.w	r0, r0, #16711935	@ 0xff00ff
 801b48a:	eb07 2111 	add.w	r1, r7, r1, lsr #8
 801b48e:	f406 467f 	and.w	r6, r6, #65280	@ 0xff00
 801b492:	fb00 5504 	mla	r5, r0, r4, r5
 801b496:	fb0e f606 	mul.w	r6, lr, r6
 801b49a:	f403 407f 	and.w	r0, r3, #65280	@ 0xff00
 801b49e:	0a09      	lsrs	r1, r1, #8
 801b4a0:	9b07      	ldr	r3, [sp, #28]
 801b4a2:	fb02 6000 	mla	r0, r2, r0, r6
 801b4a6:	f401 417f 	and.w	r1, r1, #65280	@ 0xff00
 801b4aa:	fb09 0001 	mla	r0, r9, r1, r0
 801b4ae:	f403 437f 	and.w	r3, r3, #65280	@ 0xff00
 801b4b2:	fb0e fe0b 	mul.w	lr, lr, fp
 801b4b6:	fb04 0003 	mla	r0, r4, r3, r0
 801b4ba:	fb02 e20a 	mla	r2, r2, sl, lr
 801b4be:	9b00      	ldr	r3, [sp, #0]
 801b4c0:	fb04 2408 	mla	r4, r4, r8, r2
 801b4c4:	fb09 4903 	mla	r9, r9, r3, r4
 801b4c8:	ea6f 2929 	mvn.w	r9, r9, asr #8
 801b4cc:	9b02      	ldr	r3, [sp, #8]
 801b4ce:	9a04      	ldr	r2, [sp, #16]
 801b4d0:	fa5f f989 	uxtb.w	r9, r9
 801b4d4:	fb03 f109 	mul.w	r1, r3, r9
 801b4d8:	9b03      	ldr	r3, [sp, #12]
 801b4da:	0a2d      	lsrs	r5, r5, #8
 801b4dc:	0a00      	lsrs	r0, r0, #8
 801b4de:	fb03 f309 	mul.w	r3, r3, r9
 801b4e2:	f400 407f 	and.w	r0, r0, #65280	@ 0xff00
 801b4e6:	f005 15ff 	and.w	r5, r5, #16711935	@ 0xff00ff
 801b4ea:	4305      	orrs	r5, r0
 801b4ec:	fb02 f909 	mul.w	r9, r2, r9
 801b4f0:	1c58      	adds	r0, r3, #1
 801b4f2:	1c4a      	adds	r2, r1, #1
 801b4f4:	eb00 2013 	add.w	r0, r0, r3, lsr #8
 801b4f8:	eb02 2111 	add.w	r1, r2, r1, lsr #8
 801b4fc:	0a2b      	lsrs	r3, r5, #8
 801b4fe:	0c2a      	lsrs	r2, r5, #16
 801b500:	eb03 2310 	add.w	r3, r3, r0, lsr #8
 801b504:	eb02 2211 	add.w	r2, r2, r1, lsr #8
 801b508:	00db      	lsls	r3, r3, #3
 801b50a:	0212      	lsls	r2, r2, #8
 801b50c:	f402 4278 	and.w	r2, r2, #63488	@ 0xf800
 801b510:	f403 63fc 	and.w	r3, r3, #2016	@ 0x7e0
 801b514:	4313      	orrs	r3, r2
 801b516:	f109 0201 	add.w	r2, r9, #1
 801b51a:	eb02 2919 	add.w	r9, r2, r9, lsr #8
 801b51e:	eb05 2519 	add.w	r5, r5, r9, lsr #8
 801b522:	f3c5 05c4 	ubfx	r5, r5, #3, #5
 801b526:	431d      	orrs	r5, r3
 801b528:	9b01      	ldr	r3, [sp, #4]
 801b52a:	801d      	strh	r5, [r3, #0]
 801b52c:	b009      	add	sp, #36	@ 0x24
 801b52e:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 801b532:	2000      	movs	r0, #0
 801b534:	e701      	b.n	801b33a <_ZNK8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKmssiihh+0x5c>
 801b536:	2600      	movs	r6, #0
 801b538:	4630      	mov	r0, r6
 801b53a:	e70b      	b.n	801b354 <_ZNK8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKmssiihh+0x76>
 801b53c:	2600      	movs	r6, #0
 801b53e:	e709      	b.n	801b354 <_ZNK8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKmssiihh+0x76>
 801b540:	462e      	mov	r6, r5
 801b542:	e707      	b.n	801b354 <_ZNK8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKmssiihh+0x76>
 801b544:	2700      	movs	r7, #0
 801b546:	e71a      	b.n	801b37e <_ZNK8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKmssiihh+0xa0>
 801b548:	2100      	movs	r1, #0
 801b54a:	460f      	mov	r7, r1
 801b54c:	e723      	b.n	801b396 <_ZNK8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKmssiihh+0xb8>
 801b54e:	4621      	mov	r1, r4
 801b550:	4627      	mov	r7, r4
 801b552:	e720      	b.n	801b396 <_ZNK8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKmssiihh+0xb8>
 801b554:	2100      	movs	r1, #0
 801b556:	e71e      	b.n	801b396 <_ZNK8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKmssiihh+0xb8>
 801b558:	4629      	mov	r1, r5
 801b55a:	e71c      	b.n	801b396 <_ZNK8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKmssiihh+0xb8>

0801b55c <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff>:
 801b55c:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 801b560:	b09b      	sub	sp, #108	@ 0x6c
 801b562:	9218      	str	r2, [sp, #96]	@ 0x60
 801b564:	9a29      	ldr	r2, [sp, #164]	@ 0xa4
 801b566:	9116      	str	r1, [sp, #88]	@ 0x58
 801b568:	9307      	str	r3, [sp, #28]
 801b56a:	e9dd 132a 	ldrd	r1, r3, [sp, #168]	@ 0xa8
 801b56e:	9019      	str	r0, [sp, #100]	@ 0x64
 801b570:	6850      	ldr	r0, [r2, #4]
 801b572:	6812      	ldr	r2, [r2, #0]
 801b574:	9d26      	ldr	r5, [sp, #152]	@ 0x98
 801b576:	fb00 1303 	mla	r3, r0, r3, r1
 801b57a:	eb02 0343 	add.w	r3, r2, r3, lsl #1
 801b57e:	930a      	str	r3, [sp, #40]	@ 0x28
 801b580:	9b2c      	ldr	r3, [sp, #176]	@ 0xb0
 801b582:	681b      	ldr	r3, [r3, #0]
 801b584:	930f      	str	r3, [sp, #60]	@ 0x3c
 801b586:	9b2c      	ldr	r3, [sp, #176]	@ 0xb0
 801b588:	685e      	ldr	r6, [r3, #4]
 801b58a:	3604      	adds	r6, #4
 801b58c:	9b16      	ldr	r3, [sp, #88]	@ 0x58
 801b58e:	2b00      	cmp	r3, #0
 801b590:	dc03      	bgt.n	801b59a <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3e>
 801b592:	9b18      	ldr	r3, [sp, #96]	@ 0x60
 801b594:	2b00      	cmp	r3, #0
 801b596:	f340 8373 	ble.w	801bc80 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x724>
 801b59a:	9b2c      	ldr	r3, [sp, #176]	@ 0xb0
 801b59c:	f9b3 1008 	ldrsh.w	r1, [r3, #8]
 801b5a0:	f9b3 200c 	ldrsh.w	r2, [r3, #12]
 801b5a4:	1e48      	subs	r0, r1, #1
 801b5a6:	1e57      	subs	r7, r2, #1
 801b5a8:	9b07      	ldr	r3, [sp, #28]
 801b5aa:	2b00      	cmp	r3, #0
 801b5ac:	f340 8190 	ble.w	801b8d0 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x374>
 801b5b0:	9c25      	ldr	r4, [sp, #148]	@ 0x94
 801b5b2:	ea5f 4c24 	movs.w	ip, r4, asr #16
 801b5b6:	ea4f 4325 	mov.w	r3, r5, asr #16
 801b5ba:	d406      	bmi.n	801b5ca <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x6e>
 801b5bc:	4584      	cmp	ip, r0
 801b5be:	da04      	bge.n	801b5ca <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x6e>
 801b5c0:	2b00      	cmp	r3, #0
 801b5c2:	db02      	blt.n	801b5ca <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x6e>
 801b5c4:	42bb      	cmp	r3, r7
 801b5c6:	f2c0 8184 	blt.w	801b8d2 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x376>
 801b5ca:	f11c 0c01 	adds.w	ip, ip, #1
 801b5ce:	f100 8172 	bmi.w	801b8b6 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x35a>
 801b5d2:	4561      	cmp	r1, ip
 801b5d4:	f2c0 816f 	blt.w	801b8b6 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x35a>
 801b5d8:	3301      	adds	r3, #1
 801b5da:	f100 816c 	bmi.w	801b8b6 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x35a>
 801b5de:	429a      	cmp	r2, r3
 801b5e0:	f2c0 8169 	blt.w	801b8b6 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x35a>
 801b5e4:	9b07      	ldr	r3, [sp, #28]
 801b5e6:	9f0a      	ldr	r7, [sp, #40]	@ 0x28
 801b5e8:	9317      	str	r3, [sp, #92]	@ 0x5c
 801b5ea:	9b17      	ldr	r3, [sp, #92]	@ 0x5c
 801b5ec:	2b00      	cmp	r3, #0
 801b5ee:	f340 818e 	ble.w	801b90e <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3b2>
 801b5f2:	9b25      	ldr	r3, [sp, #148]	@ 0x94
 801b5f4:	f3c3 3203 	ubfx	r2, r3, #12, #4
 801b5f8:	9b2c      	ldr	r3, [sp, #176]	@ 0xb0
 801b5fa:	e9d3 1e02 	ldrd	r1, lr, [r3, #8]
 801b5fe:	9b25      	ldr	r3, [sp, #148]	@ 0x94
 801b600:	141b      	asrs	r3, r3, #16
 801b602:	ea4f 4c25 	mov.w	ip, r5, asr #16
 801b606:	f3c5 3003 	ubfx	r0, r5, #12, #4
 801b60a:	f100 81d1 	bmi.w	801b9b0 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x454>
 801b60e:	f101 38ff 	add.w	r8, r1, #4294967295
 801b612:	4543      	cmp	r3, r8
 801b614:	f280 81cc 	bge.w	801b9b0 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x454>
 801b618:	f1bc 0f00 	cmp.w	ip, #0
 801b61c:	f2c0 81c8 	blt.w	801b9b0 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x454>
 801b620:	f10e 38ff 	add.w	r8, lr, #4294967295
 801b624:	45c4      	cmp	ip, r8
 801b626:	f280 81c3 	bge.w	801b9b0 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x454>
 801b62a:	b209      	sxth	r1, r1
 801b62c:	fb0c 3301 	mla	r3, ip, r1, r3
 801b630:	9c0f      	ldr	r4, [sp, #60]	@ 0x3c
 801b632:	eb04 0803 	add.w	r8, r4, r3
 801b636:	5ce3      	ldrb	r3, [r4, r3]
 801b638:	f856 3023 	ldr.w	r3, [r6, r3, lsl #2]
 801b63c:	ea4f 6e13 	mov.w	lr, r3, lsr #24
 801b640:	2a00      	cmp	r2, #0
 801b642:	f000 81aa 	beq.w	801b99a <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x43e>
 801b646:	f898 c001 	ldrb.w	ip, [r8, #1]
 801b64a:	f856 402c 	ldr.w	r4, [r6, ip, lsl #2]
 801b64e:	940b      	str	r4, [sp, #44]	@ 0x2c
 801b650:	0e24      	lsrs	r4, r4, #24
 801b652:	9412      	str	r4, [sp, #72]	@ 0x48
 801b654:	b178      	cbz	r0, 801b676 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x11a>
 801b656:	eb08 0c01 	add.w	ip, r8, r1
 801b65a:	f818 1001 	ldrb.w	r1, [r8, r1]
 801b65e:	f856 1021 	ldr.w	r1, [r6, r1, lsl #2]
 801b662:	9108      	str	r1, [sp, #32]
 801b664:	0e09      	lsrs	r1, r1, #24
 801b666:	9110      	str	r1, [sp, #64]	@ 0x40
 801b668:	f89c 1001 	ldrb.w	r1, [ip, #1]
 801b66c:	f856 1021 	ldr.w	r1, [r6, r1, lsl #2]
 801b670:	910c      	str	r1, [sp, #48]	@ 0x30
 801b672:	0e09      	lsrs	r1, r1, #24
 801b674:	9113      	str	r1, [sp, #76]	@ 0x4c
 801b676:	b292      	uxth	r2, r2
 801b678:	b280      	uxth	r0, r0
 801b67a:	fb02 f900 	mul.w	r9, r2, r0
 801b67e:	ebc9 1000 	rsb	r0, r9, r0, lsl #4
 801b682:	0112      	lsls	r2, r2, #4
 801b684:	eba2 0809 	sub.w	r8, r2, r9
 801b688:	b280      	uxth	r0, r0
 801b68a:	f5c2 7280 	rsb	r2, r2, #256	@ 0x100
 801b68e:	9912      	ldr	r1, [sp, #72]	@ 0x48
 801b690:	9c10      	ldr	r4, [sp, #64]	@ 0x40
 801b692:	fa1f f888 	uxth.w	r8, r8
 801b696:	1a12      	subs	r2, r2, r0
 801b698:	b292      	uxth	r2, r2
 801b69a:	fb08 f101 	mul.w	r1, r8, r1
 801b69e:	fb02 110e 	mla	r1, r2, lr, r1
 801b6a2:	fb00 1104 	mla	r1, r0, r4, r1
 801b6a6:	9c13      	ldr	r4, [sp, #76]	@ 0x4c
 801b6a8:	fb09 1104 	mla	r1, r9, r4, r1
 801b6ac:	f3c1 2107 	ubfx	r1, r1, #8, #8
 801b6b0:	2900      	cmp	r1, #0
 801b6b2:	f000 80f5 	beq.w	801b8a0 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x344>
 801b6b6:	f1be 0fff 	cmp.w	lr, #255	@ 0xff
 801b6ba:	d01b      	beq.n	801b6f4 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x198>
 801b6bc:	f003 1aff 	and.w	sl, r3, #16711935	@ 0xff00ff
 801b6c0:	fb0e fa0a 	mul.w	sl, lr, sl
 801b6c4:	f403 437f 	and.w	r3, r3, #65280	@ 0xff00
 801b6c8:	fb0e fe03 	mul.w	lr, lr, r3
 801b6cc:	ea4f 231a 	mov.w	r3, sl, lsr #8
 801b6d0:	f003 13ff 	and.w	r3, r3, #16711935	@ 0xff00ff
 801b6d4:	f10a 1a01 	add.w	sl, sl, #65537	@ 0x10001
 801b6d8:	f50e 7c80 	add.w	ip, lr, #256	@ 0x100
 801b6dc:	4453      	add	r3, sl
 801b6de:	eb0c 2c1e 	add.w	ip, ip, lr, lsr #8
 801b6e2:	0a1b      	lsrs	r3, r3, #8
 801b6e4:	ea4f 2c1c 	mov.w	ip, ip, lsr #8
 801b6e8:	f003 13ff 	and.w	r3, r3, #16711935	@ 0xff00ff
 801b6ec:	f40c 4c7f 	and.w	ip, ip, #65280	@ 0xff00
 801b6f0:	ea43 030c 	orr.w	r3, r3, ip
 801b6f4:	9c12      	ldr	r4, [sp, #72]	@ 0x48
 801b6f6:	2cff      	cmp	r4, #255	@ 0xff
 801b6f8:	d021      	beq.n	801b73e <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1e2>
 801b6fa:	9c0b      	ldr	r4, [sp, #44]	@ 0x2c
 801b6fc:	f004 1bff 	and.w	fp, r4, #16711935	@ 0xff00ff
 801b700:	9c12      	ldr	r4, [sp, #72]	@ 0x48
 801b702:	fb04 fb0b 	mul.w	fp, r4, fp
 801b706:	9c0b      	ldr	r4, [sp, #44]	@ 0x2c
 801b708:	f404 4a7f 	and.w	sl, r4, #65280	@ 0xff00
 801b70c:	9c12      	ldr	r4, [sp, #72]	@ 0x48
 801b70e:	ea4f 2e1b 	mov.w	lr, fp, lsr #8
 801b712:	fb04 fa0a 	mul.w	sl, r4, sl
 801b716:	f00e 1eff 	and.w	lr, lr, #16711935	@ 0xff00ff
 801b71a:	f10b 1b01 	add.w	fp, fp, #65537	@ 0x10001
 801b71e:	f50a 7c80 	add.w	ip, sl, #256	@ 0x100
 801b722:	44de      	add	lr, fp
 801b724:	eb0c 2a1a 	add.w	sl, ip, sl, lsr #8
 801b728:	ea4f 2e1e 	mov.w	lr, lr, lsr #8
 801b72c:	ea4f 2a1a 	mov.w	sl, sl, lsr #8
 801b730:	f00e 1eff 	and.w	lr, lr, #16711935	@ 0xff00ff
 801b734:	f40a 4a7f 	and.w	sl, sl, #65280	@ 0xff00
 801b738:	ea4e 040a 	orr.w	r4, lr, sl
 801b73c:	940b      	str	r4, [sp, #44]	@ 0x2c
 801b73e:	9c10      	ldr	r4, [sp, #64]	@ 0x40
 801b740:	2cff      	cmp	r4, #255	@ 0xff
 801b742:	d021      	beq.n	801b788 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x22c>
 801b744:	9c08      	ldr	r4, [sp, #32]
 801b746:	f004 1bff 	and.w	fp, r4, #16711935	@ 0xff00ff
 801b74a:	9c10      	ldr	r4, [sp, #64]	@ 0x40
 801b74c:	fb04 fb0b 	mul.w	fp, r4, fp
 801b750:	9c08      	ldr	r4, [sp, #32]
 801b752:	f404 4a7f 	and.w	sl, r4, #65280	@ 0xff00
 801b756:	9c10      	ldr	r4, [sp, #64]	@ 0x40
 801b758:	ea4f 2e1b 	mov.w	lr, fp, lsr #8
 801b75c:	fb04 fa0a 	mul.w	sl, r4, sl
 801b760:	f00e 1eff 	and.w	lr, lr, #16711935	@ 0xff00ff
 801b764:	f10b 1b01 	add.w	fp, fp, #65537	@ 0x10001
 801b768:	f50a 7c80 	add.w	ip, sl, #256	@ 0x100
 801b76c:	44de      	add	lr, fp
 801b76e:	eb0c 2a1a 	add.w	sl, ip, sl, lsr #8
 801b772:	ea4f 2e1e 	mov.w	lr, lr, lsr #8
 801b776:	ea4f 2a1a 	mov.w	sl, sl, lsr #8
 801b77a:	f00e 1eff 	and.w	lr, lr, #16711935	@ 0xff00ff
 801b77e:	f40a 4a7f 	and.w	sl, sl, #65280	@ 0xff00
 801b782:	ea4e 040a 	orr.w	r4, lr, sl
 801b786:	9408      	str	r4, [sp, #32]
 801b788:	9c13      	ldr	r4, [sp, #76]	@ 0x4c
 801b78a:	2cff      	cmp	r4, #255	@ 0xff
 801b78c:	d021      	beq.n	801b7d2 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x276>
 801b78e:	9c0c      	ldr	r4, [sp, #48]	@ 0x30
 801b790:	f004 1bff 	and.w	fp, r4, #16711935	@ 0xff00ff
 801b794:	9c13      	ldr	r4, [sp, #76]	@ 0x4c
 801b796:	fb04 fb0b 	mul.w	fp, r4, fp
 801b79a:	9c0c      	ldr	r4, [sp, #48]	@ 0x30
 801b79c:	f404 4a7f 	and.w	sl, r4, #65280	@ 0xff00
 801b7a0:	9c13      	ldr	r4, [sp, #76]	@ 0x4c
 801b7a2:	ea4f 2e1b 	mov.w	lr, fp, lsr #8
 801b7a6:	fb04 fa0a 	mul.w	sl, r4, sl
 801b7aa:	f00e 1eff 	and.w	lr, lr, #16711935	@ 0xff00ff
 801b7ae:	f10b 1b01 	add.w	fp, fp, #65537	@ 0x10001
 801b7b2:	f50a 7c80 	add.w	ip, sl, #256	@ 0x100
 801b7b6:	44de      	add	lr, fp
 801b7b8:	eb0c 2a1a 	add.w	sl, ip, sl, lsr #8
 801b7bc:	ea4f 2e1e 	mov.w	lr, lr, lsr #8
 801b7c0:	ea4f 2a1a 	mov.w	sl, sl, lsr #8
 801b7c4:	f00e 1eff 	and.w	lr, lr, #16711935	@ 0xff00ff
 801b7c8:	f40a 4a7f 	and.w	sl, sl, #65280	@ 0xff00
 801b7cc:	ea4e 040a 	orr.w	r4, lr, sl
 801b7d0:	940c      	str	r4, [sp, #48]	@ 0x30
 801b7d2:	9c0b      	ldr	r4, [sp, #44]	@ 0x2c
 801b7d4:	f004 1cff 	and.w	ip, r4, #16711935	@ 0xff00ff
 801b7d8:	9c08      	ldr	r4, [sp, #32]
 801b7da:	f003 1eff 	and.w	lr, r3, #16711935	@ 0xff00ff
 801b7de:	fb08 fc0c 	mul.w	ip, r8, ip
 801b7e2:	fb02 cc0e 	mla	ip, r2, lr, ip
 801b7e6:	f004 1eff 	and.w	lr, r4, #16711935	@ 0xff00ff
 801b7ea:	9c0c      	ldr	r4, [sp, #48]	@ 0x30
 801b7ec:	fb00 cc0e 	mla	ip, r0, lr, ip
 801b7f0:	f004 1eff 	and.w	lr, r4, #16711935	@ 0xff00ff
 801b7f4:	9c0b      	ldr	r4, [sp, #44]	@ 0x2c
 801b7f6:	fb09 cc0e 	mla	ip, r9, lr, ip
 801b7fa:	f404 4e7f 	and.w	lr, r4, #65280	@ 0xff00
 801b7fe:	fb08 f80e 	mul.w	r8, r8, lr
 801b802:	f403 437f 	and.w	r3, r3, #65280	@ 0xff00
 801b806:	fb02 8303 	mla	r3, r2, r3, r8
 801b80a:	9a08      	ldr	r2, [sp, #32]
 801b80c:	f8b7 8000 	ldrh.w	r8, [r7]
 801b810:	f402 4a7f 	and.w	sl, r2, #65280	@ 0xff00
 801b814:	9a0c      	ldr	r2, [sp, #48]	@ 0x30
 801b816:	fb00 330a 	mla	r3, r0, sl, r3
 801b81a:	f402 407f 	and.w	r0, r2, #65280	@ 0xff00
 801b81e:	fb09 3900 	mla	r9, r9, r0, r3
 801b822:	43c9      	mvns	r1, r1
 801b824:	ea4f 2228 	mov.w	r2, r8, asr #8
 801b828:	fa5f fe81 	uxtb.w	lr, r1
 801b82c:	ea4f 2c1c 	mov.w	ip, ip, lsr #8
 801b830:	ea4f 2919 	mov.w	r9, r9, lsr #8
 801b834:	f002 02f8 	and.w	r2, r2, #248	@ 0xf8
 801b838:	fb02 f20e 	mul.w	r2, r2, lr
 801b83c:	f00c 1cff 	and.w	ip, ip, #16711935	@ 0xff00ff
 801b840:	f409 497f 	and.w	r9, r9, #65280	@ 0xff00
 801b844:	ea4c 0c09 	orr.w	ip, ip, r9
 801b848:	1c53      	adds	r3, r2, #1
 801b84a:	eb03 2212 	add.w	r2, r3, r2, lsr #8
 801b84e:	ea4f 00e8 	mov.w	r0, r8, asr #3
 801b852:	ea4f 431c 	mov.w	r3, ip, lsr #16
 801b856:	eb03 2312 	add.w	r3, r3, r2, lsr #8
 801b85a:	f000 00fc 	and.w	r0, r0, #252	@ 0xfc
 801b85e:	4a63      	ldr	r2, [pc, #396]	@ (801b9ec <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x490>)
 801b860:	fb00 f00e 	mul.w	r0, r0, lr
 801b864:	b2db      	uxtb	r3, r3
 801b866:	ea02 2203 	and.w	r2, r2, r3, lsl #8
 801b86a:	1c43      	adds	r3, r0, #1
 801b86c:	eb03 2010 	add.w	r0, r3, r0, lsr #8
 801b870:	ea4f 231c 	mov.w	r3, ip, lsr #8
 801b874:	ea4f 01c8 	mov.w	r1, r8, lsl #3
 801b878:	eb03 2310 	add.w	r3, r3, r0, lsr #8
 801b87c:	b2c9      	uxtb	r1, r1
 801b87e:	00db      	lsls	r3, r3, #3
 801b880:	fb01 f10e 	mul.w	r1, r1, lr
 801b884:	f403 63fc 	and.w	r3, r3, #2016	@ 0x7e0
 801b888:	4313      	orrs	r3, r2
 801b88a:	1c4a      	adds	r2, r1, #1
 801b88c:	eb02 2111 	add.w	r1, r2, r1, lsr #8
 801b890:	eb0c 2c11 	add.w	ip, ip, r1, lsr #8
 801b894:	f3cc 0cc4 	ubfx	ip, ip, #3, #5
 801b898:	ea4c 0c03 	orr.w	ip, ip, r3
 801b89c:	f8a7 c000 	strh.w	ip, [r7]
 801b8a0:	9b27      	ldr	r3, [sp, #156]	@ 0x9c
 801b8a2:	9a25      	ldr	r2, [sp, #148]	@ 0x94
 801b8a4:	441a      	add	r2, r3
 801b8a6:	9b28      	ldr	r3, [sp, #160]	@ 0xa0
 801b8a8:	9225      	str	r2, [sp, #148]	@ 0x94
 801b8aa:	441d      	add	r5, r3
 801b8ac:	9b17      	ldr	r3, [sp, #92]	@ 0x5c
 801b8ae:	3b01      	subs	r3, #1
 801b8b0:	3702      	adds	r7, #2
 801b8b2:	9317      	str	r3, [sp, #92]	@ 0x5c
 801b8b4:	e699      	b.n	801b5ea <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x8e>
 801b8b6:	9b27      	ldr	r3, [sp, #156]	@ 0x9c
 801b8b8:	9c25      	ldr	r4, [sp, #148]	@ 0x94
 801b8ba:	441c      	add	r4, r3
 801b8bc:	9b28      	ldr	r3, [sp, #160]	@ 0xa0
 801b8be:	9425      	str	r4, [sp, #148]	@ 0x94
 801b8c0:	441d      	add	r5, r3
 801b8c2:	9b07      	ldr	r3, [sp, #28]
 801b8c4:	3b01      	subs	r3, #1
 801b8c6:	9307      	str	r3, [sp, #28]
 801b8c8:	9b0a      	ldr	r3, [sp, #40]	@ 0x28
 801b8ca:	3302      	adds	r3, #2
 801b8cc:	930a      	str	r3, [sp, #40]	@ 0x28
 801b8ce:	e66b      	b.n	801b5a8 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x4c>
 801b8d0:	d024      	beq.n	801b91c <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3c0>
 801b8d2:	9b07      	ldr	r3, [sp, #28]
 801b8d4:	9827      	ldr	r0, [sp, #156]	@ 0x9c
 801b8d6:	9c25      	ldr	r4, [sp, #148]	@ 0x94
 801b8d8:	3b01      	subs	r3, #1
 801b8da:	fb00 4003 	mla	r0, r0, r3, r4
 801b8de:	1400      	asrs	r0, r0, #16
 801b8e0:	f53f ae80 	bmi.w	801b5e4 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x88>
 801b8e4:	3901      	subs	r1, #1
 801b8e6:	4288      	cmp	r0, r1
 801b8e8:	f6bf ae7c 	bge.w	801b5e4 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x88>
 801b8ec:	9928      	ldr	r1, [sp, #160]	@ 0xa0
 801b8ee:	fb01 5303 	mla	r3, r1, r3, r5
 801b8f2:	141b      	asrs	r3, r3, #16
 801b8f4:	f53f ae76 	bmi.w	801b5e4 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x88>
 801b8f8:	3a01      	subs	r2, #1
 801b8fa:	4293      	cmp	r3, r2
 801b8fc:	f6bf ae72 	bge.w	801b5e4 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x88>
 801b900:	f8dd b01c 	ldr.w	fp, [sp, #28]
 801b904:	f8dd 9028 	ldr.w	r9, [sp, #40]	@ 0x28
 801b908:	f1bb 0f00 	cmp.w	fp, #0
 801b90c:	dc70      	bgt.n	801b9f0 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x494>
 801b90e:	9b07      	ldr	r3, [sp, #28]
 801b910:	ea23 74e3 	bic.w	r4, r3, r3, asr #31
 801b914:	9b0a      	ldr	r3, [sp, #40]	@ 0x28
 801b916:	eb03 0344 	add.w	r3, r3, r4, lsl #1
 801b91a:	930a      	str	r3, [sp, #40]	@ 0x28
 801b91c:	9b16      	ldr	r3, [sp, #88]	@ 0x58
 801b91e:	2b00      	cmp	r3, #0
 801b920:	f340 81ae 	ble.w	801bc80 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x724>
 801b924:	ee30 0a04 	vadd.f32	s0, s0, s8
 801b928:	eeb7 7a00 	vmov.f32	s14, #112	@ 0x3f800000  1.0
 801b92c:	eec7 7a00 	vdiv.f32	s15, s14, s0
 801b930:	9b24      	ldr	r3, [sp, #144]	@ 0x90
 801b932:	ee70 0aa4 	vadd.f32	s1, s1, s9
 801b936:	ee31 1a05 	vadd.f32	s2, s2, s10
 801b93a:	ee20 7aa7 	vmul.f32	s14, s1, s15
 801b93e:	eef0 6a62 	vmov.f32	s13, s5
 801b942:	ee61 7a27 	vmul.f32	s15, s2, s15
 801b946:	eefe 6ac8 	vcvt.s32.f32	s13, s13, #16
 801b94a:	ee77 2a62 	vsub.f32	s5, s14, s5
 801b94e:	edcd 6a25 	vstr	s13, [sp, #148]	@ 0x94
 801b952:	eefe 2ac8 	vcvt.s32.f32	s5, s5, #16
 801b956:	eef0 6a43 	vmov.f32	s13, s6
 801b95a:	ee37 3ac3 	vsub.f32	s6, s15, s6
 801b95e:	ee12 2a90 	vmov	r2, s5
 801b962:	eebe 3ac8 	vcvt.s32.f32	s6, s6, #16
 801b966:	fb92 f3f3 	sdiv	r3, r2, r3
 801b96a:	ee13 2a10 	vmov	r2, s6
 801b96e:	9327      	str	r3, [sp, #156]	@ 0x9c
 801b970:	9b24      	ldr	r3, [sp, #144]	@ 0x90
 801b972:	fb92 f3f3 	sdiv	r3, r2, r3
 801b976:	9328      	str	r3, [sp, #160]	@ 0xa0
 801b978:	9b16      	ldr	r3, [sp, #88]	@ 0x58
 801b97a:	9a18      	ldr	r2, [sp, #96]	@ 0x60
 801b97c:	3b01      	subs	r3, #1
 801b97e:	eefe 6ac8 	vcvt.s32.f32	s13, s13, #16
 801b982:	9316      	str	r3, [sp, #88]	@ 0x58
 801b984:	9b24      	ldr	r3, [sp, #144]	@ 0x90
 801b986:	bf08      	it	eq
 801b988:	4613      	moveq	r3, r2
 801b98a:	ee16 5a90 	vmov	r5, s13
 801b98e:	9307      	str	r3, [sp, #28]
 801b990:	eeb0 3a67 	vmov.f32	s6, s15
 801b994:	eef0 2a47 	vmov.f32	s5, s14
 801b998:	e5f8      	b.n	801b58c <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x30>
 801b99a:	2800      	cmp	r0, #0
 801b99c:	f43f ae6b 	beq.w	801b676 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x11a>
 801b9a0:	f818 1001 	ldrb.w	r1, [r8, r1]
 801b9a4:	f856 1021 	ldr.w	r1, [r6, r1, lsl #2]
 801b9a8:	9108      	str	r1, [sp, #32]
 801b9aa:	0e09      	lsrs	r1, r1, #24
 801b9ac:	9110      	str	r1, [sp, #64]	@ 0x40
 801b9ae:	e662      	b.n	801b676 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x11a>
 801b9b0:	f113 0801 	adds.w	r8, r3, #1
 801b9b4:	f53f af74 	bmi.w	801b8a0 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x344>
 801b9b8:	4541      	cmp	r1, r8
 801b9ba:	f6ff af71 	blt.w	801b8a0 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x344>
 801b9be:	f11c 0801 	adds.w	r8, ip, #1
 801b9c2:	f53f af6d 	bmi.w	801b8a0 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x344>
 801b9c6:	45c6      	cmp	lr, r8
 801b9c8:	f6ff af6a 	blt.w	801b8a0 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x344>
 801b9cc:	e9cd 3c02 	strd	r3, ip, [sp, #8]
 801b9d0:	b209      	sxth	r1, r1
 801b9d2:	fa0f f38e 	sxth.w	r3, lr
 801b9d6:	e9cd 2004 	strd	r2, r0, [sp, #16]
 801b9da:	9301      	str	r3, [sp, #4]
 801b9dc:	9100      	str	r1, [sp, #0]
 801b9de:	4633      	mov	r3, r6
 801b9e0:	9a0f      	ldr	r2, [sp, #60]	@ 0x3c
 801b9e2:	9819      	ldr	r0, [sp, #100]	@ 0x64
 801b9e4:	4639      	mov	r1, r7
 801b9e6:	f7ff fc7a 	bl	801b2de <_ZNK8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKmssiihh>
 801b9ea:	e759      	b.n	801b8a0 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x344>
 801b9ec:	fffff800 	.word	0xfffff800
 801b9f0:	9b25      	ldr	r3, [sp, #148]	@ 0x94
 801b9f2:	9c25      	ldr	r4, [sp, #148]	@ 0x94
 801b9f4:	f3c3 3203 	ubfx	r2, r3, #12, #4
 801b9f8:	9b2c      	ldr	r3, [sp, #176]	@ 0xb0
 801b9fa:	f9b3 1008 	ldrsh.w	r1, [r3, #8]
 801b9fe:	1427      	asrs	r7, r4, #16
 801ba00:	142b      	asrs	r3, r5, #16
 801ba02:	fb01 7303 	mla	r3, r1, r3, r7
 801ba06:	9c0f      	ldr	r4, [sp, #60]	@ 0x3c
 801ba08:	18e7      	adds	r7, r4, r3
 801ba0a:	5ce3      	ldrb	r3, [r4, r3]
 801ba0c:	f856 3023 	ldr.w	r3, [r6, r3, lsl #2]
 801ba10:	f3c5 3003 	ubfx	r0, r5, #12, #4
 801ba14:	ea4f 6c13 	mov.w	ip, r3, lsr #24
 801ba18:	2a00      	cmp	r2, #0
 801ba1a:	f000 8127 	beq.w	801bc6c <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x710>
 801ba1e:	f897 e001 	ldrb.w	lr, [r7, #1]
 801ba22:	f856 402e 	ldr.w	r4, [r6, lr, lsl #2]
 801ba26:	940d      	str	r4, [sp, #52]	@ 0x34
 801ba28:	0e24      	lsrs	r4, r4, #24
 801ba2a:	9414      	str	r4, [sp, #80]	@ 0x50
 801ba2c:	b170      	cbz	r0, 801ba4c <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x4f0>
 801ba2e:	eb07 0e01 	add.w	lr, r7, r1
 801ba32:	5c79      	ldrb	r1, [r7, r1]
 801ba34:	f856 1021 	ldr.w	r1, [r6, r1, lsl #2]
 801ba38:	9109      	str	r1, [sp, #36]	@ 0x24
 801ba3a:	0e09      	lsrs	r1, r1, #24
 801ba3c:	9111      	str	r1, [sp, #68]	@ 0x44
 801ba3e:	f89e 1001 	ldrb.w	r1, [lr, #1]
 801ba42:	f856 1021 	ldr.w	r1, [r6, r1, lsl #2]
 801ba46:	910e      	str	r1, [sp, #56]	@ 0x38
 801ba48:	0e09      	lsrs	r1, r1, #24
 801ba4a:	9115      	str	r1, [sp, #84]	@ 0x54
 801ba4c:	b292      	uxth	r2, r2
 801ba4e:	b280      	uxth	r0, r0
 801ba50:	fb02 f800 	mul.w	r8, r2, r0
 801ba54:	ebc8 1000 	rsb	r0, r8, r0, lsl #4
 801ba58:	0112      	lsls	r2, r2, #4
 801ba5a:	eba2 0e08 	sub.w	lr, r2, r8
 801ba5e:	b280      	uxth	r0, r0
 801ba60:	f5c2 7180 	rsb	r1, r2, #256	@ 0x100
 801ba64:	9a14      	ldr	r2, [sp, #80]	@ 0x50
 801ba66:	9c11      	ldr	r4, [sp, #68]	@ 0x44
 801ba68:	fa1f fe8e 	uxth.w	lr, lr
 801ba6c:	1a09      	subs	r1, r1, r0
 801ba6e:	b289      	uxth	r1, r1
 801ba70:	fb0e f202 	mul.w	r2, lr, r2
 801ba74:	fb01 220c 	mla	r2, r1, ip, r2
 801ba78:	fb00 2204 	mla	r2, r0, r4, r2
 801ba7c:	9c15      	ldr	r4, [sp, #84]	@ 0x54
 801ba7e:	fb08 2204 	mla	r2, r8, r4, r2
 801ba82:	f3c2 2207 	ubfx	r2, r2, #8, #8
 801ba86:	2a00      	cmp	r2, #0
 801ba88:	f000 80e5 	beq.w	801bc56 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x6fa>
 801ba8c:	f1bc 0fff 	cmp.w	ip, #255	@ 0xff
 801ba90:	d019      	beq.n	801bac6 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x56a>
 801ba92:	f003 1aff 	and.w	sl, r3, #16711935	@ 0xff00ff
 801ba96:	fb0c fa0a 	mul.w	sl, ip, sl
 801ba9a:	f403 437f 	and.w	r3, r3, #65280	@ 0xff00
 801ba9e:	fb0c fc03 	mul.w	ip, ip, r3
 801baa2:	ea4f 231a 	mov.w	r3, sl, lsr #8
 801baa6:	f003 13ff 	and.w	r3, r3, #16711935	@ 0xff00ff
 801baaa:	f10a 1a01 	add.w	sl, sl, #65537	@ 0x10001
 801baae:	f50c 7780 	add.w	r7, ip, #256	@ 0x100
 801bab2:	4453      	add	r3, sl
 801bab4:	eb07 271c 	add.w	r7, r7, ip, lsr #8
 801bab8:	0a1b      	lsrs	r3, r3, #8
 801baba:	0a3f      	lsrs	r7, r7, #8
 801babc:	f003 13ff 	and.w	r3, r3, #16711935	@ 0xff00ff
 801bac0:	f407 477f 	and.w	r7, r7, #65280	@ 0xff00
 801bac4:	433b      	orrs	r3, r7
 801bac6:	9c14      	ldr	r4, [sp, #80]	@ 0x50
 801bac8:	2cff      	cmp	r4, #255	@ 0xff
 801baca:	d020      	beq.n	801bb0e <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x5b2>
 801bacc:	9c0d      	ldr	r4, [sp, #52]	@ 0x34
 801bace:	f004 17ff 	and.w	r7, r4, #16711935	@ 0xff00ff
 801bad2:	9c14      	ldr	r4, [sp, #80]	@ 0x50
 801bad4:	4367      	muls	r7, r4
 801bad6:	9c0d      	ldr	r4, [sp, #52]	@ 0x34
 801bad8:	f404 4a7f 	and.w	sl, r4, #65280	@ 0xff00
 801badc:	9c14      	ldr	r4, [sp, #80]	@ 0x50
 801bade:	ea4f 2c17 	mov.w	ip, r7, lsr #8
 801bae2:	fb04 fa0a 	mul.w	sl, r4, sl
 801bae6:	f107 1701 	add.w	r7, r7, #65537	@ 0x10001
 801baea:	f00c 1cff 	and.w	ip, ip, #16711935	@ 0xff00ff
 801baee:	44bc      	add	ip, r7
 801baf0:	f50a 7780 	add.w	r7, sl, #256	@ 0x100
 801baf4:	eb07 2a1a 	add.w	sl, r7, sl, lsr #8
 801baf8:	ea4f 2c1c 	mov.w	ip, ip, lsr #8
 801bafc:	ea4f 2a1a 	mov.w	sl, sl, lsr #8
 801bb00:	f00c 1cff 	and.w	ip, ip, #16711935	@ 0xff00ff
 801bb04:	f40a 4a7f 	and.w	sl, sl, #65280	@ 0xff00
 801bb08:	ea4c 040a 	orr.w	r4, ip, sl
 801bb0c:	940d      	str	r4, [sp, #52]	@ 0x34
 801bb0e:	9c11      	ldr	r4, [sp, #68]	@ 0x44
 801bb10:	2cff      	cmp	r4, #255	@ 0xff
 801bb12:	d020      	beq.n	801bb56 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x5fa>
 801bb14:	9c09      	ldr	r4, [sp, #36]	@ 0x24
 801bb16:	f004 17ff 	and.w	r7, r4, #16711935	@ 0xff00ff
 801bb1a:	9c11      	ldr	r4, [sp, #68]	@ 0x44
 801bb1c:	4367      	muls	r7, r4
 801bb1e:	9c09      	ldr	r4, [sp, #36]	@ 0x24
 801bb20:	f404 4a7f 	and.w	sl, r4, #65280	@ 0xff00
 801bb24:	9c11      	ldr	r4, [sp, #68]	@ 0x44
 801bb26:	ea4f 2c17 	mov.w	ip, r7, lsr #8
 801bb2a:	fb04 fa0a 	mul.w	sl, r4, sl
 801bb2e:	f107 1701 	add.w	r7, r7, #65537	@ 0x10001
 801bb32:	f00c 1cff 	and.w	ip, ip, #16711935	@ 0xff00ff
 801bb36:	44bc      	add	ip, r7
 801bb38:	f50a 7780 	add.w	r7, sl, #256	@ 0x100
 801bb3c:	eb07 2a1a 	add.w	sl, r7, sl, lsr #8
 801bb40:	ea4f 2c1c 	mov.w	ip, ip, lsr #8
 801bb44:	ea4f 2a1a 	mov.w	sl, sl, lsr #8
 801bb48:	f00c 1cff 	and.w	ip, ip, #16711935	@ 0xff00ff
 801bb4c:	f40a 4a7f 	and.w	sl, sl, #65280	@ 0xff00
 801bb50:	ea4c 040a 	orr.w	r4, ip, sl
 801bb54:	9409      	str	r4, [sp, #36]	@ 0x24
 801bb56:	9c15      	ldr	r4, [sp, #84]	@ 0x54
 801bb58:	2cff      	cmp	r4, #255	@ 0xff
 801bb5a:	d020      	beq.n	801bb9e <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x642>
 801bb5c:	9c0e      	ldr	r4, [sp, #56]	@ 0x38
 801bb5e:	f004 17ff 	and.w	r7, r4, #16711935	@ 0xff00ff
 801bb62:	9c15      	ldr	r4, [sp, #84]	@ 0x54
 801bb64:	4367      	muls	r7, r4
 801bb66:	9c0e      	ldr	r4, [sp, #56]	@ 0x38
 801bb68:	f404 4a7f 	and.w	sl, r4, #65280	@ 0xff00
 801bb6c:	9c15      	ldr	r4, [sp, #84]	@ 0x54
 801bb6e:	ea4f 2c17 	mov.w	ip, r7, lsr #8
 801bb72:	fb04 fa0a 	mul.w	sl, r4, sl
 801bb76:	f107 1701 	add.w	r7, r7, #65537	@ 0x10001
 801bb7a:	f00c 1cff 	and.w	ip, ip, #16711935	@ 0xff00ff
 801bb7e:	44bc      	add	ip, r7
 801bb80:	f50a 7780 	add.w	r7, sl, #256	@ 0x100
 801bb84:	eb07 2a1a 	add.w	sl, r7, sl, lsr #8
 801bb88:	ea4f 2c1c 	mov.w	ip, ip, lsr #8
 801bb8c:	ea4f 2a1a 	mov.w	sl, sl, lsr #8
 801bb90:	f00c 1cff 	and.w	ip, ip, #16711935	@ 0xff00ff
 801bb94:	f40a 4a7f 	and.w	sl, sl, #65280	@ 0xff00
 801bb98:	ea4c 040a 	orr.w	r4, ip, sl
 801bb9c:	940e      	str	r4, [sp, #56]	@ 0x38
 801bb9e:	9c0d      	ldr	r4, [sp, #52]	@ 0x34
 801bba0:	f004 17ff 	and.w	r7, r4, #16711935	@ 0xff00ff
 801bba4:	9c09      	ldr	r4, [sp, #36]	@ 0x24
 801bba6:	f003 1cff 	and.w	ip, r3, #16711935	@ 0xff00ff
 801bbaa:	fb0e f707 	mul.w	r7, lr, r7
 801bbae:	fb01 770c 	mla	r7, r1, ip, r7
 801bbb2:	f004 1cff 	and.w	ip, r4, #16711935	@ 0xff00ff
 801bbb6:	9c0e      	ldr	r4, [sp, #56]	@ 0x38
 801bbb8:	fb00 770c 	mla	r7, r0, ip, r7
 801bbbc:	f004 1cff 	and.w	ip, r4, #16711935	@ 0xff00ff
 801bbc0:	9c0d      	ldr	r4, [sp, #52]	@ 0x34
 801bbc2:	fb08 770c 	mla	r7, r8, ip, r7
 801bbc6:	f404 4c7f 	and.w	ip, r4, #65280	@ 0xff00
 801bbca:	fb0e fe0c 	mul.w	lr, lr, ip
 801bbce:	f403 437f 	and.w	r3, r3, #65280	@ 0xff00
 801bbd2:	fb01 e303 	mla	r3, r1, r3, lr
 801bbd6:	9909      	ldr	r1, [sp, #36]	@ 0x24
 801bbd8:	f401 4a7f 	and.w	sl, r1, #65280	@ 0xff00
 801bbdc:	990e      	ldr	r1, [sp, #56]	@ 0x38
 801bbde:	fb00 330a 	mla	r3, r0, sl, r3
 801bbe2:	f401 4c7f 	and.w	ip, r1, #65280	@ 0xff00
 801bbe6:	fb08 3c0c 	mla	ip, r8, ip, r3
 801bbea:	f8b9 3000 	ldrh.w	r3, [r9]
 801bbee:	43d2      	mvns	r2, r2
 801bbf0:	1218      	asrs	r0, r3, #8
 801bbf2:	b2d2      	uxtb	r2, r2
 801bbf4:	10d9      	asrs	r1, r3, #3
 801bbf6:	0a3f      	lsrs	r7, r7, #8
 801bbf8:	ea4f 2c1c 	mov.w	ip, ip, lsr #8
 801bbfc:	f000 00f8 	and.w	r0, r0, #248	@ 0xf8
 801bc00:	00db      	lsls	r3, r3, #3
 801bc02:	4350      	muls	r0, r2
 801bc04:	f007 17ff 	and.w	r7, r7, #16711935	@ 0xff00ff
 801bc08:	f40c 4c7f 	and.w	ip, ip, #65280	@ 0xff00
 801bc0c:	f001 01fc 	and.w	r1, r1, #252	@ 0xfc
 801bc10:	b2db      	uxtb	r3, r3
 801bc12:	ea47 070c 	orr.w	r7, r7, ip
 801bc16:	4351      	muls	r1, r2
 801bc18:	4353      	muls	r3, r2
 801bc1a:	1c42      	adds	r2, r0, #1
 801bc1c:	eb02 2010 	add.w	r0, r2, r0, lsr #8
 801bc20:	0c3a      	lsrs	r2, r7, #16
 801bc22:	eb02 2010 	add.w	r0, r2, r0, lsr #8
 801bc26:	4a18      	ldr	r2, [pc, #96]	@ (801bc88 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x72c>)
 801bc28:	b2c0      	uxtb	r0, r0
 801bc2a:	ea02 2000 	and.w	r0, r2, r0, lsl #8
 801bc2e:	1c4a      	adds	r2, r1, #1
 801bc30:	eb02 2111 	add.w	r1, r2, r1, lsr #8
 801bc34:	0a3a      	lsrs	r2, r7, #8
 801bc36:	eb02 2111 	add.w	r1, r2, r1, lsr #8
 801bc3a:	00c9      	lsls	r1, r1, #3
 801bc3c:	f401 61fc 	and.w	r1, r1, #2016	@ 0x7e0
 801bc40:	4301      	orrs	r1, r0
 801bc42:	1c58      	adds	r0, r3, #1
 801bc44:	eb00 2013 	add.w	r0, r0, r3, lsr #8
 801bc48:	eb07 2710 	add.w	r7, r7, r0, lsr #8
 801bc4c:	f3c7 00c4 	ubfx	r0, r7, #3, #5
 801bc50:	4308      	orrs	r0, r1
 801bc52:	f8a9 0000 	strh.w	r0, [r9]
 801bc56:	9b27      	ldr	r3, [sp, #156]	@ 0x9c
 801bc58:	9a25      	ldr	r2, [sp, #148]	@ 0x94
 801bc5a:	441a      	add	r2, r3
 801bc5c:	9b28      	ldr	r3, [sp, #160]	@ 0xa0
 801bc5e:	9225      	str	r2, [sp, #148]	@ 0x94
 801bc60:	f109 0902 	add.w	r9, r9, #2
 801bc64:	441d      	add	r5, r3
 801bc66:	f10b 3bff 	add.w	fp, fp, #4294967295
 801bc6a:	e64d      	b.n	801b908 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3ac>
 801bc6c:	2800      	cmp	r0, #0
 801bc6e:	f43f aeed 	beq.w	801ba4c <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x4f0>
 801bc72:	5c79      	ldrb	r1, [r7, r1]
 801bc74:	f856 1021 	ldr.w	r1, [r6, r1, lsl #2]
 801bc78:	9109      	str	r1, [sp, #36]	@ 0x24
 801bc7a:	0e09      	lsrs	r1, r1, #24
 801bc7c:	9111      	str	r1, [sp, #68]	@ 0x44
 801bc7e:	e6e5      	b.n	801ba4c <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x4f0>
 801bc80:	b01b      	add	sp, #108	@ 0x6c
 801bc82:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 801bc86:	bf00      	nop
 801bc88:	fffff800 	.word	0xfffff800

0801bc8c <_ZNK8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtPKhssiihhh>:
 801bc8c:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 801bc90:	b085      	sub	sp, #20
 801bc92:	e9dd 7010 	ldrd	r7, r0, [sp, #64]	@ 0x40
 801bc96:	f9bd 6038 	ldrsh.w	r6, [sp, #56]	@ 0x38
 801bc9a:	9103      	str	r1, [sp, #12]
 801bc9c:	fb00 7406 	mla	r4, r0, r6, r7
 801bca0:	eb02 0544 	add.w	r5, r2, r4, lsl #1
 801bca4:	2800      	cmp	r0, #0
 801bca6:	f9bd b03c 	ldrsh.w	fp, [sp, #60]	@ 0x3c
 801bcaa:	f89d 1048 	ldrb.w	r1, [sp, #72]	@ 0x48
 801bcae:	f89d e04c 	ldrb.w	lr, [sp, #76]	@ 0x4c
 801bcb2:	9501      	str	r5, [sp, #4]
 801bcb4:	eb03 0904 	add.w	r9, r3, r4
 801bcb8:	f2c0 8150 	blt.w	801bf5c <_ZNK8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtPKhssiihhh+0x2d0>
 801bcbc:	4583      	cmp	fp, r0
 801bcbe:	f340 814d 	ble.w	801bf5c <_ZNK8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtPKhssiihhh+0x2d0>
 801bcc2:	2f00      	cmp	r7, #0
 801bcc4:	f2c0 8146 	blt.w	801bf54 <_ZNK8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtPKhssiihhh+0x2c8>
 801bcc8:	42be      	cmp	r6, r7
 801bcca:	f340 8143 	ble.w	801bf54 <_ZNK8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtPKhssiihhh+0x2c8>
 801bcce:	f813 c004 	ldrb.w	ip, [r3, r4]
 801bcd2:	f832 3014 	ldrh.w	r3, [r2, r4, lsl #1]
 801bcd6:	ea4f 02ec 	mov.w	r2, ip, asr #3
 801bcda:	f423 65fc 	bic.w	r5, r3, #2016	@ 0x7e0
 801bcde:	4355      	muls	r5, r2
 801bce0:	f403 63fc 	and.w	r3, r3, #2016	@ 0x7e0
 801bce4:	f64f 041f 	movw	r4, #63519	@ 0xf81f
 801bce8:	fb0c f203 	mul.w	r2, ip, r3
 801bcec:	ea04 1355 	and.w	r3, r4, r5, lsr #5
 801bcf0:	f605 0501 	addw	r5, r5, #2049	@ 0x801
 801bcf4:	441d      	add	r5, r3
 801bcf6:	f102 0320 	add.w	r3, r2, #32
 801bcfa:	eb03 2312 	add.w	r3, r3, r2, lsr #8
 801bcfe:	0a1b      	lsrs	r3, r3, #8
 801bd00:	ea04 1455 	and.w	r4, r4, r5, lsr #5
 801bd04:	f403 63fc 	and.w	r3, r3, #2016	@ 0x7e0
 801bd08:	431c      	orrs	r4, r3
 801bd0a:	1c7b      	adds	r3, r7, #1
 801bd0c:	f100 812b 	bmi.w	801bf66 <_ZNK8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtPKhssiihhh+0x2da>
 801bd10:	429e      	cmp	r6, r3
 801bd12:	f340 8128 	ble.w	801bf66 <_ZNK8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtPKhssiihhh+0x2da>
 801bd16:	2900      	cmp	r1, #0
 801bd18:	f000 8128 	beq.w	801bf6c <_ZNK8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtPKhssiihhh+0x2e0>
 801bd1c:	9a01      	ldr	r2, [sp, #4]
 801bd1e:	f899 3001 	ldrb.w	r3, [r9, #1]
 801bd22:	8855      	ldrh	r5, [r2, #2]
 801bd24:	ea4f 08e3 	mov.w	r8, r3, asr #3
 801bd28:	f425 62fc 	bic.w	r2, r5, #2016	@ 0x7e0
 801bd2c:	fb08 f802 	mul.w	r8, r8, r2
 801bd30:	f405 65fc 	and.w	r5, r5, #2016	@ 0x7e0
 801bd34:	f64f 021f 	movw	r2, #63519	@ 0xf81f
 801bd38:	ea02 1a58 	and.w	sl, r2, r8, lsr #5
 801bd3c:	435d      	muls	r5, r3
 801bd3e:	f608 0801 	addw	r8, r8, #2049	@ 0x801
 801bd42:	44d0      	add	r8, sl
 801bd44:	f105 0a20 	add.w	sl, r5, #32
 801bd48:	eb0a 2515 	add.w	r5, sl, r5, lsr #8
 801bd4c:	0a2d      	lsrs	r5, r5, #8
 801bd4e:	ea02 1258 	and.w	r2, r2, r8, lsr #5
 801bd52:	f405 65fc 	and.w	r5, r5, #2016	@ 0x7e0
 801bd56:	432a      	orrs	r2, r5
 801bd58:	3001      	adds	r0, #1
 801bd5a:	f100 810d 	bmi.w	801bf78 <_ZNK8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtPKhssiihhh+0x2ec>
 801bd5e:	4583      	cmp	fp, r0
 801bd60:	f340 810a 	ble.w	801bf78 <_ZNK8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtPKhssiihhh+0x2ec>
 801bd64:	f1be 0f00 	cmp.w	lr, #0
 801bd68:	f000 810b 	beq.w	801bf82 <_ZNK8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtPKhssiihhh+0x2f6>
 801bd6c:	2f00      	cmp	r7, #0
 801bd6e:	f2c0 8100 	blt.w	801bf72 <_ZNK8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtPKhssiihhh+0x2e6>
 801bd72:	42be      	cmp	r6, r7
 801bd74:	f340 80fd 	ble.w	801bf72 <_ZNK8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtPKhssiihhh+0x2e6>
 801bd78:	9801      	ldr	r0, [sp, #4]
 801bd7a:	f819 5006 	ldrb.w	r5, [r9, r6]
 801bd7e:	f830 8016 	ldrh.w	r8, [r0, r6, lsl #1]
 801bd82:	ea4f 0ae5 	mov.w	sl, r5, asr #3
 801bd86:	f428 60fc 	bic.w	r0, r8, #2016	@ 0x7e0
 801bd8a:	fb0a fa00 	mul.w	sl, sl, r0
 801bd8e:	f64f 0b1f 	movw	fp, #63519	@ 0xf81f
 801bd92:	f408 68fc 	and.w	r8, r8, #2016	@ 0x7e0
 801bd96:	ea0b 105a 	and.w	r0, fp, sl, lsr #5
 801bd9a:	fb05 f808 	mul.w	r8, r5, r8
 801bd9e:	f60a 0a01 	addw	sl, sl, #2049	@ 0x801
 801bda2:	4482      	add	sl, r0
 801bda4:	f108 0020 	add.w	r0, r8, #32
 801bda8:	eb00 2018 	add.w	r0, r0, r8, lsr #8
 801bdac:	0a00      	lsrs	r0, r0, #8
 801bdae:	ea0b 1b5a 	and.w	fp, fp, sl, lsr #5
 801bdb2:	f400 60fc 	and.w	r0, r0, #2016	@ 0x7e0
 801bdb6:	ea4b 0b00 	orr.w	fp, fp, r0
 801bdba:	3701      	adds	r7, #1
 801bdbc:	f100 80e6 	bmi.w	801bf8c <_ZNK8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtPKhssiihhh+0x300>
 801bdc0:	42be      	cmp	r6, r7
 801bdc2:	f340 80e3 	ble.w	801bf8c <_ZNK8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtPKhssiihhh+0x300>
 801bdc6:	2900      	cmp	r1, #0
 801bdc8:	f000 80e3 	beq.w	801bf92 <_ZNK8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtPKhssiihhh+0x306>
 801bdcc:	3601      	adds	r6, #1
 801bdce:	9801      	ldr	r0, [sp, #4]
 801bdd0:	f819 7006 	ldrb.w	r7, [r9, r6]
 801bdd4:	f830 0016 	ldrh.w	r0, [r0, r6, lsl #1]
 801bdd8:	ea4f 09e7 	mov.w	r9, r7, asr #3
 801bddc:	f420 66fc 	bic.w	r6, r0, #2016	@ 0x7e0
 801bde0:	f400 60fc 	and.w	r0, r0, #2016	@ 0x7e0
 801bde4:	fb09 f906 	mul.w	r9, r9, r6
 801bde8:	fb07 f800 	mul.w	r8, r7, r0
 801bdec:	f64f 001f 	movw	r0, #63519	@ 0xf81f
 801bdf0:	ea00 1a59 	and.w	sl, r0, r9, lsr #5
 801bdf4:	f609 0901 	addw	r9, r9, #2049	@ 0x801
 801bdf8:	44d1      	add	r9, sl
 801bdfa:	ea00 1659 	and.w	r6, r0, r9, lsr #5
 801bdfe:	f108 0020 	add.w	r0, r8, #32
 801be02:	eb00 2018 	add.w	r0, r0, r8, lsr #8
 801be06:	0a00      	lsrs	r0, r0, #8
 801be08:	f400 60fc 	and.w	r0, r0, #2016	@ 0x7e0
 801be0c:	4330      	orrs	r0, r6
 801be0e:	b28e      	uxth	r6, r1
 801be10:	fa1f f98e 	uxth.w	r9, lr
 801be14:	fb06 f809 	mul.w	r8, r6, r9
 801be18:	ea4f 4a04 	mov.w	sl, r4, lsl #16
 801be1c:	ebc8 1909 	rsb	r9, r8, r9, lsl #4
 801be20:	0136      	lsls	r6, r6, #4
 801be22:	f00a 6afc 	and.w	sl, sl, #132120576	@ 0x7e00000
 801be26:	f424 64fc 	bic.w	r4, r4, #2016	@ 0x7e0
 801be2a:	9601      	str	r6, [sp, #4]
 801be2c:	ea4a 0404 	orr.w	r4, sl, r4
 801be30:	fa1f f689 	uxth.w	r6, r9
 801be34:	ea4f 4a02 	mov.w	sl, r2, lsl #16
 801be38:	fb11 f90e 	smulbb	r9, r1, lr
 801be3c:	f3c9 09c7 	ubfx	r9, r9, #3, #8
 801be40:	9602      	str	r6, [sp, #8]
 801be42:	f00a 6afc 	and.w	sl, sl, #132120576	@ 0x7e00000
 801be46:	4626      	mov	r6, r4
 801be48:	f422 62fc 	bic.w	r2, r2, #2016	@ 0x7e0
 801be4c:	f1ce 0410 	rsb	r4, lr, #16
 801be50:	1a64      	subs	r4, r4, r1
 801be52:	ea4a 0202 	orr.w	r2, sl, r2
 801be56:	ebc9 0141 	rsb	r1, r9, r1, lsl #1
 801be5a:	ea4f 4a00 	mov.w	sl, r0, lsl #16
 801be5e:	434a      	muls	r2, r1
 801be60:	eb09 0444 	add.w	r4, r9, r4, lsl #1
 801be64:	f00a 6afc 	and.w	sl, sl, #132120576	@ 0x7e00000
 801be68:	f420 60fc 	bic.w	r0, r0, #2016	@ 0x7e0
 801be6c:	fb04 2406 	mla	r4, r4, r6, r2
 801be70:	ea4a 0000 	orr.w	r0, sl, r0
 801be74:	fb09 4200 	mla	r2, r9, r0, r4
 801be78:	ea4f 440b 	mov.w	r4, fp, lsl #16
 801be7c:	f004 64fc 	and.w	r4, r4, #132120576	@ 0x7e00000
 801be80:	f42b 6bfc 	bic.w	fp, fp, #2016	@ 0x7e0
 801be84:	ea44 0b0b 	orr.w	fp, r4, fp
 801be88:	9c01      	ldr	r4, [sp, #4]
 801be8a:	9e02      	ldr	r6, [sp, #8]
 801be8c:	9903      	ldr	r1, [sp, #12]
 801be8e:	f5c4 7480 	rsb	r4, r4, #256	@ 0x100
 801be92:	1ba4      	subs	r4, r4, r6
 801be94:	9e01      	ldr	r6, [sp, #4]
 801be96:	8808      	ldrh	r0, [r1, #0]
 801be98:	f89d 1050 	ldrb.w	r1, [sp, #80]	@ 0x50
 801be9c:	eba6 0608 	sub.w	r6, r6, r8
 801bea0:	b2b6      	uxth	r6, r6
 801bea2:	b2a4      	uxth	r4, r4
 801bea4:	4373      	muls	r3, r6
 801bea6:	fb0c 3304 	mla	r3, ip, r4, r3
 801beaa:	9c02      	ldr	r4, [sp, #8]
 801beac:	fb04 3505 	mla	r5, r4, r5, r3
 801beb0:	fb08 5707 	mla	r7, r8, r7, r5
 801beb4:	ebc9 0e4e 	rsb	lr, r9, lr, lsl #1
 801beb8:	b289      	uxth	r1, r1
 801beba:	fb0e 2e0b 	mla	lr, lr, fp, r2
 801bebe:	f3c7 2707 	ubfx	r7, r7, #8, #8
 801bec2:	434f      	muls	r7, r1
 801bec4:	ea4f 525e 	mov.w	r2, lr, lsr #21
 801bec8:	ea4f 1e5e 	mov.w	lr, lr, lsr #5
 801becc:	f402 62fc 	and.w	r2, r2, #2016	@ 0x7e0
 801bed0:	1c7b      	adds	r3, r7, #1
 801bed2:	f42e 6efc 	bic.w	lr, lr, #2016	@ 0x7e0
 801bed6:	ea42 0e0e 	orr.w	lr, r2, lr
 801beda:	eb03 2717 	add.w	r7, r3, r7, lsr #8
 801bede:	fa1f f28e 	uxth.w	r2, lr
 801bee2:	1203      	asrs	r3, r0, #8
 801bee4:	ea6f 2717 	mvn.w	r7, r7, lsr #8
 801bee8:	b2ff      	uxtb	r7, r7
 801beea:	1215      	asrs	r5, r2, #8
 801beec:	f003 03f8 	and.w	r3, r3, #248	@ 0xf8
 801bef0:	fb13 f307 	smulbb	r3, r3, r7
 801bef4:	f005 05f8 	and.w	r5, r5, #248	@ 0xf8
 801bef8:	fb05 3501 	mla	r5, r5, r1, r3
 801befc:	10c3      	asrs	r3, r0, #3
 801befe:	10d4      	asrs	r4, r2, #3
 801bf00:	f003 03fc 	and.w	r3, r3, #252	@ 0xfc
 801bf04:	fb13 f307 	smulbb	r3, r3, r7
 801bf08:	f004 04fc 	and.w	r4, r4, #252	@ 0xfc
 801bf0c:	fb04 3401 	mla	r4, r4, r1, r3
 801bf10:	00c3      	lsls	r3, r0, #3
 801bf12:	00d2      	lsls	r2, r2, #3
 801bf14:	b2db      	uxtb	r3, r3
 801bf16:	fb13 f307 	smulbb	r3, r3, r7
 801bf1a:	b2d2      	uxtb	r2, r2
 801bf1c:	fb02 3101 	mla	r1, r2, r1, r3
 801bf20:	b2ad      	uxth	r5, r5
 801bf22:	b289      	uxth	r1, r1
 801bf24:	b2a4      	uxth	r4, r4
 801bf26:	1c6b      	adds	r3, r5, #1
 801bf28:	eb03 2515 	add.w	r5, r3, r5, lsr #8
 801bf2c:	1c62      	adds	r2, r4, #1
 801bf2e:	1c4b      	adds	r3, r1, #1
 801bf30:	eb03 2311 	add.w	r3, r3, r1, lsr #8
 801bf34:	eb02 2414 	add.w	r4, r2, r4, lsr #8
 801bf38:	f405 4578 	and.w	r5, r5, #63488	@ 0xf800
 801bf3c:	f3c3 23c4 	ubfx	r3, r3, #11, #5
 801bf40:	0964      	lsrs	r4, r4, #5
 801bf42:	432b      	orrs	r3, r5
 801bf44:	f404 64fc 	and.w	r4, r4, #2016	@ 0x7e0
 801bf48:	9a03      	ldr	r2, [sp, #12]
 801bf4a:	4323      	orrs	r3, r4
 801bf4c:	8013      	strh	r3, [r2, #0]
 801bf4e:	b005      	add	sp, #20
 801bf50:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 801bf54:	f04f 0c00 	mov.w	ip, #0
 801bf58:	4664      	mov	r4, ip
 801bf5a:	e6d6      	b.n	801bd0a <_ZNK8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtPKhssiihhh+0x7e>
 801bf5c:	2300      	movs	r3, #0
 801bf5e:	469c      	mov	ip, r3
 801bf60:	461a      	mov	r2, r3
 801bf62:	461c      	mov	r4, r3
 801bf64:	e6f8      	b.n	801bd58 <_ZNK8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtPKhssiihhh+0xcc>
 801bf66:	2300      	movs	r3, #0
 801bf68:	461a      	mov	r2, r3
 801bf6a:	e6f5      	b.n	801bd58 <_ZNK8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtPKhssiihhh+0xcc>
 801bf6c:	460b      	mov	r3, r1
 801bf6e:	460a      	mov	r2, r1
 801bf70:	e6f2      	b.n	801bd58 <_ZNK8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtPKhssiihhh+0xcc>
 801bf72:	2500      	movs	r5, #0
 801bf74:	46ab      	mov	fp, r5
 801bf76:	e720      	b.n	801bdba <_ZNK8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtPKhssiihhh+0x12e>
 801bf78:	2700      	movs	r7, #0
 801bf7a:	463d      	mov	r5, r7
 801bf7c:	4638      	mov	r0, r7
 801bf7e:	46bb      	mov	fp, r7
 801bf80:	e745      	b.n	801be0e <_ZNK8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtPKhssiihhh+0x182>
 801bf82:	4677      	mov	r7, lr
 801bf84:	4675      	mov	r5, lr
 801bf86:	4670      	mov	r0, lr
 801bf88:	46f3      	mov	fp, lr
 801bf8a:	e740      	b.n	801be0e <_ZNK8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtPKhssiihhh+0x182>
 801bf8c:	2700      	movs	r7, #0
 801bf8e:	4638      	mov	r0, r7
 801bf90:	e73d      	b.n	801be0e <_ZNK8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtPKhssiihhh+0x182>
 801bf92:	460f      	mov	r7, r1
 801bf94:	4608      	mov	r0, r1
 801bf96:	e73a      	b.n	801be0e <_ZNK8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtPKhssiihhh+0x182>

0801bf98 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff>:
 801bf98:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 801bf9c:	b097      	sub	sp, #92	@ 0x5c
 801bf9e:	9214      	str	r2, [sp, #80]	@ 0x50
 801bfa0:	9308      	str	r3, [sp, #32]
 801bfa2:	9a25      	ldr	r2, [sp, #148]	@ 0x94
 801bfa4:	f89d 30a4 	ldrb.w	r3, [sp, #164]	@ 0xa4
 801bfa8:	9312      	str	r3, [sp, #72]	@ 0x48
 801bfaa:	9111      	str	r1, [sp, #68]	@ 0x44
 801bfac:	e9dd 1326 	ldrd	r1, r3, [sp, #152]	@ 0x98
 801bfb0:	9015      	str	r0, [sp, #84]	@ 0x54
 801bfb2:	6850      	ldr	r0, [r2, #4]
 801bfb4:	6812      	ldr	r2, [r2, #0]
 801bfb6:	fb00 1303 	mla	r3, r0, r3, r1
 801bfba:	eb02 0343 	add.w	r3, r2, r3, lsl #1
 801bfbe:	9309      	str	r3, [sp, #36]	@ 0x24
 801bfc0:	9b28      	ldr	r3, [sp, #160]	@ 0xa0
 801bfc2:	681b      	ldr	r3, [r3, #0]
 801bfc4:	930b      	str	r3, [sp, #44]	@ 0x2c
 801bfc6:	9b28      	ldr	r3, [sp, #160]	@ 0xa0
 801bfc8:	685b      	ldr	r3, [r3, #4]
 801bfca:	930c      	str	r3, [sp, #48]	@ 0x30
 801bfcc:	f8bd 3048 	ldrh.w	r3, [sp, #72]	@ 0x48
 801bfd0:	930a      	str	r3, [sp, #40]	@ 0x28
 801bfd2:	9b11      	ldr	r3, [sp, #68]	@ 0x44
 801bfd4:	2b00      	cmp	r3, #0
 801bfd6:	dc03      	bgt.n	801bfe0 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x48>
 801bfd8:	9b14      	ldr	r3, [sp, #80]	@ 0x50
 801bfda:	2b00      	cmp	r3, #0
 801bfdc:	f340 83cb 	ble.w	801c776 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x7de>
 801bfe0:	9b28      	ldr	r3, [sp, #160]	@ 0xa0
 801bfe2:	f9b3 1008 	ldrsh.w	r1, [r3, #8]
 801bfe6:	f9b3 200c 	ldrsh.w	r2, [r3, #12]
 801bfea:	1e48      	subs	r0, r1, #1
 801bfec:	1e55      	subs	r5, r2, #1
 801bfee:	9b08      	ldr	r3, [sp, #32]
 801bff0:	2b00      	cmp	r3, #0
 801bff2:	f340 81a3 	ble.w	801c33c <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3a4>
 801bff6:	9e21      	ldr	r6, [sp, #132]	@ 0x84
 801bff8:	9b22      	ldr	r3, [sp, #136]	@ 0x88
 801bffa:	1436      	asrs	r6, r6, #16
 801bffc:	ea4f 4323 	mov.w	r3, r3, asr #16
 801c000:	d406      	bmi.n	801c010 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x78>
 801c002:	4286      	cmp	r6, r0
 801c004:	da04      	bge.n	801c010 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x78>
 801c006:	2b00      	cmp	r3, #0
 801c008:	db02      	blt.n	801c010 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x78>
 801c00a:	42ab      	cmp	r3, r5
 801c00c:	f2c0 8197 	blt.w	801c33e <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3a6>
 801c010:	3601      	adds	r6, #1
 801c012:	f100 8184 	bmi.w	801c31e <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x386>
 801c016:	42b1      	cmp	r1, r6
 801c018:	f2c0 8181 	blt.w	801c31e <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x386>
 801c01c:	3301      	adds	r3, #1
 801c01e:	f100 817e 	bmi.w	801c31e <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x386>
 801c022:	429a      	cmp	r2, r3
 801c024:	f2c0 817b 	blt.w	801c31e <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x386>
 801c028:	9b08      	ldr	r3, [sp, #32]
 801c02a:	9f09      	ldr	r7, [sp, #36]	@ 0x24
 801c02c:	9313      	str	r3, [sp, #76]	@ 0x4c
 801c02e:	f64f 061f 	movw	r6, #63519	@ 0xf81f
 801c032:	9b13      	ldr	r3, [sp, #76]	@ 0x4c
 801c034:	2b00      	cmp	r3, #0
 801c036:	f340 81a4 	ble.w	801c382 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3ea>
 801c03a:	9b22      	ldr	r3, [sp, #136]	@ 0x88
 801c03c:	9d21      	ldr	r5, [sp, #132]	@ 0x84
 801c03e:	1418      	asrs	r0, r3, #16
 801c040:	9b21      	ldr	r3, [sp, #132]	@ 0x84
 801c042:	f3c3 3103 	ubfx	r1, r3, #12, #4
 801c046:	9b22      	ldr	r3, [sp, #136]	@ 0x88
 801c048:	f3c3 3c03 	ubfx	ip, r3, #12, #4
 801c04c:	9b28      	ldr	r3, [sp, #160]	@ 0xa0
 801c04e:	142d      	asrs	r5, r5, #16
 801c050:	e9d3 2302 	ldrd	r2, r3, [r3, #8]
 801c054:	f100 81f8 	bmi.w	801c448 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x4b0>
 801c058:	f102 3eff 	add.w	lr, r2, #4294967295
 801c05c:	4575      	cmp	r5, lr
 801c05e:	f280 81f3 	bge.w	801c448 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x4b0>
 801c062:	2800      	cmp	r0, #0
 801c064:	f2c0 81f0 	blt.w	801c448 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x4b0>
 801c068:	f103 3eff 	add.w	lr, r3, #4294967295
 801c06c:	4570      	cmp	r0, lr
 801c06e:	f280 81eb 	bge.w	801c448 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x4b0>
 801c072:	9b0c      	ldr	r3, [sp, #48]	@ 0x30
 801c074:	b212      	sxth	r2, r2
 801c076:	fb00 5002 	mla	r0, r0, r2, r5
 801c07a:	fa1f fe81 	uxth.w	lr, r1
 801c07e:	eb03 0a00 	add.w	sl, r3, r0
 801c082:	ea4f 150e 	mov.w	r5, lr, lsl #4
 801c086:	f813 9000 	ldrb.w	r9, [r3, r0]
 801c08a:	f89a 8001 	ldrb.w	r8, [sl, #1]
 801c08e:	f5c5 7380 	rsb	r3, r5, #256	@ 0x100
 801c092:	b29b      	uxth	r3, r3
 801c094:	f1bc 0f00 	cmp.w	ip, #0
 801c098:	f000 81b9 	beq.w	801c40e <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x476>
 801c09c:	f81a 4002 	ldrb.w	r4, [sl, r2]
 801c0a0:	940d      	str	r4, [sp, #52]	@ 0x34
 801c0a2:	eb0a 0b02 	add.w	fp, sl, r2
 801c0a6:	fa1f fa8c 	uxth.w	sl, ip
 801c0aa:	fb0a fe0e 	mul.w	lr, sl, lr
 801c0ae:	ebce 1a0a 	rsb	sl, lr, sl, lsl #4
 801c0b2:	fa1f fa8a 	uxth.w	sl, sl
 801c0b6:	eba5 050e 	sub.w	r5, r5, lr
 801c0ba:	f89b 4001 	ldrb.w	r4, [fp, #1]
 801c0be:	940e      	str	r4, [sp, #56]	@ 0x38
 801c0c0:	eba3 030a 	sub.w	r3, r3, sl
 801c0c4:	b2ad      	uxth	r5, r5
 801c0c6:	9c0d      	ldr	r4, [sp, #52]	@ 0x34
 801c0c8:	b29b      	uxth	r3, r3
 801c0ca:	fb08 f505 	mul.w	r5, r8, r5
 801c0ce:	fb09 5303 	mla	r3, r9, r3, r5
 801c0d2:	fb0a 3304 	mla	r3, sl, r4, r3
 801c0d6:	9c0e      	ldr	r4, [sp, #56]	@ 0x38
 801c0d8:	fb0e 3304 	mla	r3, lr, r4, r3
 801c0dc:	f3c3 2307 	ubfx	r3, r3, #8, #8
 801c0e0:	2b00      	cmp	r3, #0
 801c0e2:	f000 810f 	beq.w	801c304 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x36c>
 801c0e6:	9c0b      	ldr	r4, [sp, #44]	@ 0x2c
 801c0e8:	f1b9 0fff 	cmp.w	r9, #255	@ 0xff
 801c0ec:	eb04 0540 	add.w	r5, r4, r0, lsl #1
 801c0f0:	f834 0010 	ldrh.w	r0, [r4, r0, lsl #1]
 801c0f4:	f000 8190 	beq.w	801c418 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x480>
 801c0f8:	f420 6efc 	bic.w	lr, r0, #2016	@ 0x7e0
 801c0fc:	ea4f 0ae9 	mov.w	sl, r9, asr #3
 801c100:	f400 60fc 	and.w	r0, r0, #2016	@ 0x7e0
 801c104:	fb09 f000 	mul.w	r0, r9, r0
 801c108:	fb0a fe0e 	mul.w	lr, sl, lr
 801c10c:	ea06 195e 	and.w	r9, r6, lr, lsr #5
 801c110:	f100 0b20 	add.w	fp, r0, #32
 801c114:	f60e 0e01 	addw	lr, lr, #2049	@ 0x801
 801c118:	44ce      	add	lr, r9
 801c11a:	eb0b 2910 	add.w	r9, fp, r0, lsr #8
 801c11e:	ea4f 2919 	mov.w	r9, r9, lsr #8
 801c122:	ea06 1e5e 	and.w	lr, r6, lr, lsr #5
 801c126:	f409 69fc 	and.w	r9, r9, #2016	@ 0x7e0
 801c12a:	ea4e 0909 	orr.w	r9, lr, r9
 801c12e:	f1b8 0fff 	cmp.w	r8, #255	@ 0xff
 801c132:	8868      	ldrh	r0, [r5, #2]
 801c134:	d019      	beq.n	801c16a <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1d2>
 801c136:	f420 6efc 	bic.w	lr, r0, #2016	@ 0x7e0
 801c13a:	ea4f 0ae8 	mov.w	sl, r8, asr #3
 801c13e:	f400 60fc 	and.w	r0, r0, #2016	@ 0x7e0
 801c142:	fb08 f800 	mul.w	r8, r8, r0
 801c146:	fb0a fe0e 	mul.w	lr, sl, lr
 801c14a:	ea06 105e 	and.w	r0, r6, lr, lsr #5
 801c14e:	f108 0b20 	add.w	fp, r8, #32
 801c152:	f60e 0e01 	addw	lr, lr, #2049	@ 0x801
 801c156:	4486      	add	lr, r0
 801c158:	eb0b 2018 	add.w	r0, fp, r8, lsr #8
 801c15c:	0a00      	lsrs	r0, r0, #8
 801c15e:	ea06 1e5e 	and.w	lr, r6, lr, lsr #5
 801c162:	f400 60fc 	and.w	r0, r0, #2016	@ 0x7e0
 801c166:	ea4e 0000 	orr.w	r0, lr, r0
 801c16a:	ea4f 4e09 	mov.w	lr, r9, lsl #16
 801c16e:	ea4f 4a00 	mov.w	sl, r0, lsl #16
 801c172:	f00e 6efc 	and.w	lr, lr, #132120576	@ 0x7e00000
 801c176:	f429 69fc 	bic.w	r9, r9, #2016	@ 0x7e0
 801c17a:	f00a 6afc 	and.w	sl, sl, #132120576	@ 0x7e00000
 801c17e:	f420 60fc 	bic.w	r0, r0, #2016	@ 0x7e0
 801c182:	ea4e 0909 	orr.w	r9, lr, r9
 801c186:	ea4a 0000 	orr.w	r0, sl, r0
 801c18a:	f1bc 0f00 	cmp.w	ip, #0
 801c18e:	f000 8145 	beq.w	801c41c <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x484>
 801c192:	f102 4200 	add.w	r2, r2, #2147483648	@ 0x80000000
 801c196:	3a01      	subs	r2, #1
 801c198:	0052      	lsls	r2, r2, #1
 801c19a:	9c0d      	ldr	r4, [sp, #52]	@ 0x34
 801c19c:	3202      	adds	r2, #2
 801c19e:	2cff      	cmp	r4, #255	@ 0xff
 801c1a0:	eb05 0e02 	add.w	lr, r5, r2
 801c1a4:	5aaa      	ldrh	r2, [r5, r2]
 801c1a6:	d018      	beq.n	801c1da <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x242>
 801c1a8:	f422 65fc 	bic.w	r5, r2, #2016	@ 0x7e0
 801c1ac:	f402 62fc 	and.w	r2, r2, #2016	@ 0x7e0
 801c1b0:	fb04 fa02 	mul.w	sl, r4, r2
 801c1b4:	ea4f 08e4 	mov.w	r8, r4, asr #3
 801c1b8:	fb08 f805 	mul.w	r8, r8, r5
 801c1bc:	f10a 0520 	add.w	r5, sl, #32
 801c1c0:	ea06 1258 	and.w	r2, r6, r8, lsr #5
 801c1c4:	eb05 251a 	add.w	r5, r5, sl, lsr #8
 801c1c8:	f608 0801 	addw	r8, r8, #2049	@ 0x801
 801c1cc:	4442      	add	r2, r8
 801c1ce:	0a2d      	lsrs	r5, r5, #8
 801c1d0:	ea06 1252 	and.w	r2, r6, r2, lsr #5
 801c1d4:	f405 65fc 	and.w	r5, r5, #2016	@ 0x7e0
 801c1d8:	432a      	orrs	r2, r5
 801c1da:	9c0e      	ldr	r4, [sp, #56]	@ 0x38
 801c1dc:	f8be 5002 	ldrh.w	r5, [lr, #2]
 801c1e0:	2cff      	cmp	r4, #255	@ 0xff
 801c1e2:	d01a      	beq.n	801c21a <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x282>
 801c1e4:	f425 6efc 	bic.w	lr, r5, #2016	@ 0x7e0
 801c1e8:	f405 65fc 	and.w	r5, r5, #2016	@ 0x7e0
 801c1ec:	fb04 fa05 	mul.w	sl, r4, r5
 801c1f0:	ea4f 08e4 	mov.w	r8, r4, asr #3
 801c1f4:	fb08 f80e 	mul.w	r8, r8, lr
 801c1f8:	f10a 0e20 	add.w	lr, sl, #32
 801c1fc:	ea06 1558 	and.w	r5, r6, r8, lsr #5
 801c200:	eb0e 2e1a 	add.w	lr, lr, sl, lsr #8
 801c204:	f608 0801 	addw	r8, r8, #2049	@ 0x801
 801c208:	4445      	add	r5, r8
 801c20a:	ea4f 2e1e 	mov.w	lr, lr, lsr #8
 801c20e:	ea06 1555 	and.w	r5, r6, r5, lsr #5
 801c212:	f40e 6efc 	and.w	lr, lr, #2016	@ 0x7e0
 801c216:	ea45 050e 	orr.w	r5, r5, lr
 801c21a:	fb1c fe01 	smulbb	lr, ip, r1
 801c21e:	ea4f 0eee 	mov.w	lr, lr, asr #3
 801c222:	f1cc 0810 	rsb	r8, ip, #16
 801c226:	eba8 0801 	sub.w	r8, r8, r1
 801c22a:	ea4f 4a02 	mov.w	sl, r2, lsl #16
 801c22e:	ebce 0141 	rsb	r1, lr, r1, lsl #1
 801c232:	eb0e 0848 	add.w	r8, lr, r8, lsl #1
 801c236:	ea4f 4b05 	mov.w	fp, r5, lsl #16
 801c23a:	4341      	muls	r1, r0
 801c23c:	f00a 6afc 	and.w	sl, sl, #132120576	@ 0x7e00000
 801c240:	f422 62fc 	bic.w	r2, r2, #2016	@ 0x7e0
 801c244:	ea4a 0202 	orr.w	r2, sl, r2
 801c248:	ebce 0c4c 	rsb	ip, lr, ip, lsl #1
 801c24c:	fb09 1108 	mla	r1, r9, r8, r1
 801c250:	f00b 6bfc 	and.w	fp, fp, #132120576	@ 0x7e00000
 801c254:	f425 65fc 	bic.w	r5, r5, #2016	@ 0x7e0
 801c258:	fb0c 1102 	mla	r1, ip, r2, r1
 801c25c:	ea4b 0505 	orr.w	r5, fp, r5
 801c260:	fb0e 1e05 	mla	lr, lr, r5, r1
 801c264:	ea4f 525e 	mov.w	r2, lr, lsr #21
 801c268:	ea4f 1e5e 	mov.w	lr, lr, lsr #5
 801c26c:	f402 62fc 	and.w	r2, r2, #2016	@ 0x7e0
 801c270:	f42e 6efc 	bic.w	lr, lr, #2016	@ 0x7e0
 801c274:	ea42 0e0e 	orr.w	lr, r2, lr
 801c278:	fa1f f28e 	uxth.w	r2, lr
 801c27c:	2bff      	cmp	r3, #255	@ 0xff
 801c27e:	d103      	bne.n	801c288 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2f0>
 801c280:	9912      	ldr	r1, [sp, #72]	@ 0x48
 801c282:	29ff      	cmp	r1, #255	@ 0xff
 801c284:	f000 80de 	beq.w	801c444 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x4ac>
 801c288:	990a      	ldr	r1, [sp, #40]	@ 0x28
 801c28a:	8838      	ldrh	r0, [r7, #0]
 801c28c:	9c0a      	ldr	r4, [sp, #40]	@ 0x28
 801c28e:	434b      	muls	r3, r1
 801c290:	f103 0c01 	add.w	ip, r3, #1
 801c294:	eb0c 2323 	add.w	r3, ip, r3, asr #8
 801c298:	ea6f 2323 	mvn.w	r3, r3, asr #8
 801c29c:	fa5f fc83 	uxtb.w	ip, r3
 801c2a0:	1203      	asrs	r3, r0, #8
 801c2a2:	1215      	asrs	r5, r2, #8
 801c2a4:	f003 03f8 	and.w	r3, r3, #248	@ 0xf8
 801c2a8:	fb13 f30c 	smulbb	r3, r3, ip
 801c2ac:	f005 05f8 	and.w	r5, r5, #248	@ 0xf8
 801c2b0:	fb05 3501 	mla	r5, r5, r1, r3
 801c2b4:	10c3      	asrs	r3, r0, #3
 801c2b6:	10d1      	asrs	r1, r2, #3
 801c2b8:	f003 03fc 	and.w	r3, r3, #252	@ 0xfc
 801c2bc:	fb13 f30c 	smulbb	r3, r3, ip
 801c2c0:	f001 01fc 	and.w	r1, r1, #252	@ 0xfc
 801c2c4:	fb01 3104 	mla	r1, r1, r4, r3
 801c2c8:	00c3      	lsls	r3, r0, #3
 801c2ca:	00d2      	lsls	r2, r2, #3
 801c2cc:	b2db      	uxtb	r3, r3
 801c2ce:	b2d2      	uxtb	r2, r2
 801c2d0:	fb13 f30c 	smulbb	r3, r3, ip
 801c2d4:	b2ad      	uxth	r5, r5
 801c2d6:	fb02 3304 	mla	r3, r2, r4, r3
 801c2da:	b29a      	uxth	r2, r3
 801c2dc:	1c6b      	adds	r3, r5, #1
 801c2de:	b289      	uxth	r1, r1
 801c2e0:	eb03 2515 	add.w	r5, r3, r5, lsr #8
 801c2e4:	1c53      	adds	r3, r2, #1
 801c2e6:	eb03 2312 	add.w	r3, r3, r2, lsr #8
 801c2ea:	1c4a      	adds	r2, r1, #1
 801c2ec:	eb02 2111 	add.w	r1, r2, r1, lsr #8
 801c2f0:	f405 4578 	and.w	r5, r5, #63488	@ 0xf800
 801c2f4:	f3c3 23c4 	ubfx	r3, r3, #11, #5
 801c2f8:	0949      	lsrs	r1, r1, #5
 801c2fa:	432b      	orrs	r3, r5
 801c2fc:	f401 61fc 	and.w	r1, r1, #2016	@ 0x7e0
 801c300:	430b      	orrs	r3, r1
 801c302:	803b      	strh	r3, [r7, #0]
 801c304:	9b21      	ldr	r3, [sp, #132]	@ 0x84
 801c306:	9a23      	ldr	r2, [sp, #140]	@ 0x8c
 801c308:	4413      	add	r3, r2
 801c30a:	9321      	str	r3, [sp, #132]	@ 0x84
 801c30c:	9a22      	ldr	r2, [sp, #136]	@ 0x88
 801c30e:	9b24      	ldr	r3, [sp, #144]	@ 0x90
 801c310:	441a      	add	r2, r3
 801c312:	9b13      	ldr	r3, [sp, #76]	@ 0x4c
 801c314:	9222      	str	r2, [sp, #136]	@ 0x88
 801c316:	3b01      	subs	r3, #1
 801c318:	3702      	adds	r7, #2
 801c31a:	9313      	str	r3, [sp, #76]	@ 0x4c
 801c31c:	e689      	b.n	801c032 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x9a>
 801c31e:	9b21      	ldr	r3, [sp, #132]	@ 0x84
 801c320:	9e23      	ldr	r6, [sp, #140]	@ 0x8c
 801c322:	9c22      	ldr	r4, [sp, #136]	@ 0x88
 801c324:	4433      	add	r3, r6
 801c326:	9321      	str	r3, [sp, #132]	@ 0x84
 801c328:	9b24      	ldr	r3, [sp, #144]	@ 0x90
 801c32a:	441c      	add	r4, r3
 801c32c:	9b08      	ldr	r3, [sp, #32]
 801c32e:	9422      	str	r4, [sp, #136]	@ 0x88
 801c330:	3b01      	subs	r3, #1
 801c332:	9308      	str	r3, [sp, #32]
 801c334:	9b09      	ldr	r3, [sp, #36]	@ 0x24
 801c336:	3302      	adds	r3, #2
 801c338:	9309      	str	r3, [sp, #36]	@ 0x24
 801c33a:	e658      	b.n	801bfee <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x56>
 801c33c:	d028      	beq.n	801c390 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3f8>
 801c33e:	9b08      	ldr	r3, [sp, #32]
 801c340:	9823      	ldr	r0, [sp, #140]	@ 0x8c
 801c342:	9d21      	ldr	r5, [sp, #132]	@ 0x84
 801c344:	3b01      	subs	r3, #1
 801c346:	fb00 5003 	mla	r0, r0, r3, r5
 801c34a:	1400      	asrs	r0, r0, #16
 801c34c:	f53f ae6c 	bmi.w	801c028 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x90>
 801c350:	3901      	subs	r1, #1
 801c352:	4288      	cmp	r0, r1
 801c354:	f6bf ae68 	bge.w	801c028 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x90>
 801c358:	9924      	ldr	r1, [sp, #144]	@ 0x90
 801c35a:	9822      	ldr	r0, [sp, #136]	@ 0x88
 801c35c:	fb01 0303 	mla	r3, r1, r3, r0
 801c360:	141b      	asrs	r3, r3, #16
 801c362:	f53f ae61 	bmi.w	801c028 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x90>
 801c366:	3a01      	subs	r2, #1
 801c368:	4293      	cmp	r3, r2
 801c36a:	f6bf ae5d 	bge.w	801c028 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x90>
 801c36e:	9b08      	ldr	r3, [sp, #32]
 801c370:	f8dd e024 	ldr.w	lr, [sp, #36]	@ 0x24
 801c374:	9313      	str	r3, [sp, #76]	@ 0x4c
 801c376:	f64f 061f 	movw	r6, #63519	@ 0xf81f
 801c37a:	9b13      	ldr	r3, [sp, #76]	@ 0x4c
 801c37c:	2b00      	cmp	r3, #0
 801c37e:	f300 8082 	bgt.w	801c486 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x4ee>
 801c382:	9b08      	ldr	r3, [sp, #32]
 801c384:	ea23 74e3 	bic.w	r4, r3, r3, asr #31
 801c388:	9b09      	ldr	r3, [sp, #36]	@ 0x24
 801c38a:	eb03 0344 	add.w	r3, r3, r4, lsl #1
 801c38e:	9309      	str	r3, [sp, #36]	@ 0x24
 801c390:	9b11      	ldr	r3, [sp, #68]	@ 0x44
 801c392:	2b00      	cmp	r3, #0
 801c394:	f340 81ef 	ble.w	801c776 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x7de>
 801c398:	ee30 0a04 	vadd.f32	s0, s0, s8
 801c39c:	eeb7 7a00 	vmov.f32	s14, #112	@ 0x3f800000  1.0
 801c3a0:	eec7 7a00 	vdiv.f32	s15, s14, s0
 801c3a4:	9b20      	ldr	r3, [sp, #128]	@ 0x80
 801c3a6:	ee70 0aa4 	vadd.f32	s1, s1, s9
 801c3aa:	ee31 1a05 	vadd.f32	s2, s2, s10
 801c3ae:	ee20 7aa7 	vmul.f32	s14, s1, s15
 801c3b2:	eef0 6a62 	vmov.f32	s13, s5
 801c3b6:	ee61 7a27 	vmul.f32	s15, s2, s15
 801c3ba:	eefe 6ac8 	vcvt.s32.f32	s13, s13, #16
 801c3be:	ee77 2a62 	vsub.f32	s5, s14, s5
 801c3c2:	edcd 6a21 	vstr	s13, [sp, #132]	@ 0x84
 801c3c6:	eefe 2ac8 	vcvt.s32.f32	s5, s5, #16
 801c3ca:	eef0 6a43 	vmov.f32	s13, s6
 801c3ce:	ee37 3ac3 	vsub.f32	s6, s15, s6
 801c3d2:	ee12 2a90 	vmov	r2, s5
 801c3d6:	eebe 3ac8 	vcvt.s32.f32	s6, s6, #16
 801c3da:	fb92 f3f3 	sdiv	r3, r2, r3
 801c3de:	ee13 2a10 	vmov	r2, s6
 801c3e2:	9323      	str	r3, [sp, #140]	@ 0x8c
 801c3e4:	9b20      	ldr	r3, [sp, #128]	@ 0x80
 801c3e6:	fb92 f3f3 	sdiv	r3, r2, r3
 801c3ea:	9324      	str	r3, [sp, #144]	@ 0x90
 801c3ec:	9b11      	ldr	r3, [sp, #68]	@ 0x44
 801c3ee:	9a14      	ldr	r2, [sp, #80]	@ 0x50
 801c3f0:	3b01      	subs	r3, #1
 801c3f2:	eefe 6ac8 	vcvt.s32.f32	s13, s13, #16
 801c3f6:	9311      	str	r3, [sp, #68]	@ 0x44
 801c3f8:	9b20      	ldr	r3, [sp, #128]	@ 0x80
 801c3fa:	edcd 6a22 	vstr	s13, [sp, #136]	@ 0x88
 801c3fe:	bf08      	it	eq
 801c400:	4613      	moveq	r3, r2
 801c402:	9308      	str	r3, [sp, #32]
 801c404:	eeb0 3a67 	vmov.f32	s6, s15
 801c408:	eef0 2a47 	vmov.f32	s5, s14
 801c40c:	e5e1      	b.n	801bfd2 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3a>
 801c40e:	fb08 f505 	mul.w	r5, r8, r5
 801c412:	fb09 5303 	mla	r3, r9, r3, r5
 801c416:	e661      	b.n	801c0dc <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x144>
 801c418:	4681      	mov	r9, r0
 801c41a:	e688      	b.n	801c12e <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x196>
 801c41c:	f1c1 0210 	rsb	r2, r1, #16
 801c420:	4341      	muls	r1, r0
 801c422:	fb09 1902 	mla	r9, r9, r2, r1
 801c426:	ea4f 0949 	mov.w	r9, r9, lsl #1
 801c42a:	ea4f 5259 	mov.w	r2, r9, lsr #21
 801c42e:	ea4f 1959 	mov.w	r9, r9, lsr #5
 801c432:	f402 62fc 	and.w	r2, r2, #2016	@ 0x7e0
 801c436:	f429 69fc 	bic.w	r9, r9, #2016	@ 0x7e0
 801c43a:	ea42 0909 	orr.w	r9, r2, r9
 801c43e:	fa1f f289 	uxth.w	r2, r9
 801c442:	e71b      	b.n	801c27c <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2e4>
 801c444:	803a      	strh	r2, [r7, #0]
 801c446:	e75d      	b.n	801c304 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x36c>
 801c448:	f115 0e01 	adds.w	lr, r5, #1
 801c44c:	f53f af5a 	bmi.w	801c304 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x36c>
 801c450:	4572      	cmp	r2, lr
 801c452:	f6ff af57 	blt.w	801c304 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x36c>
 801c456:	f110 0e01 	adds.w	lr, r0, #1
 801c45a:	f53f af53 	bmi.w	801c304 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x36c>
 801c45e:	4573      	cmp	r3, lr
 801c460:	f6ff af50 	blt.w	801c304 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x36c>
 801c464:	9c12      	ldr	r4, [sp, #72]	@ 0x48
 801c466:	9502      	str	r5, [sp, #8]
 801c468:	b21b      	sxth	r3, r3
 801c46a:	b212      	sxth	r2, r2
 801c46c:	e9cd 0103 	strd	r0, r1, [sp, #12]
 801c470:	9301      	str	r3, [sp, #4]
 801c472:	9200      	str	r2, [sp, #0]
 801c474:	e9cd c405 	strd	ip, r4, [sp, #20]
 801c478:	e9dd 230b 	ldrd	r2, r3, [sp, #44]	@ 0x2c
 801c47c:	4639      	mov	r1, r7
 801c47e:	9815      	ldr	r0, [sp, #84]	@ 0x54
 801c480:	f7ff fc04 	bl	801bc8c <_ZNK8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtPKhssiihhh>
 801c484:	e73e      	b.n	801c304 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x36c>
 801c486:	9b21      	ldr	r3, [sp, #132]	@ 0x84
 801c488:	f3c3 3203 	ubfx	r2, r3, #12, #4
 801c48c:	9b22      	ldr	r3, [sp, #136]	@ 0x88
 801c48e:	f3c3 3503 	ubfx	r5, r3, #12, #4
 801c492:	9b28      	ldr	r3, [sp, #160]	@ 0xa0
 801c494:	f9b3 1008 	ldrsh.w	r1, [r3, #8]
 801c498:	9b22      	ldr	r3, [sp, #136]	@ 0x88
 801c49a:	141f      	asrs	r7, r3, #16
 801c49c:	9b21      	ldr	r3, [sp, #132]	@ 0x84
 801c49e:	141b      	asrs	r3, r3, #16
 801c4a0:	fb01 3707 	mla	r7, r1, r7, r3
 801c4a4:	9b0c      	ldr	r3, [sp, #48]	@ 0x30
 801c4a6:	fa1f fc82 	uxth.w	ip, r2
 801c4aa:	eb03 0a07 	add.w	sl, r3, r7
 801c4ae:	ea4f 100c 	mov.w	r0, ip, lsl #4
 801c4b2:	f813 9007 	ldrb.w	r9, [r3, r7]
 801c4b6:	f89a 8001 	ldrb.w	r8, [sl, #1]
 801c4ba:	f5c0 7380 	rsb	r3, r0, #256	@ 0x100
 801c4be:	b29b      	uxth	r3, r3
 801c4c0:	2d00      	cmp	r5, #0
 801c4c2:	f000 813d 	beq.w	801c740 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x7a8>
 801c4c6:	f81a 4001 	ldrb.w	r4, [sl, r1]
 801c4ca:	940f      	str	r4, [sp, #60]	@ 0x3c
 801c4cc:	eb0a 0b01 	add.w	fp, sl, r1
 801c4d0:	fa1f fa85 	uxth.w	sl, r5
 801c4d4:	fb0a fc0c 	mul.w	ip, sl, ip
 801c4d8:	ebcc 1a0a 	rsb	sl, ip, sl, lsl #4
 801c4dc:	fa1f fa8a 	uxth.w	sl, sl
 801c4e0:	eba0 000c 	sub.w	r0, r0, ip
 801c4e4:	eba3 030a 	sub.w	r3, r3, sl
 801c4e8:	b280      	uxth	r0, r0
 801c4ea:	fb08 f000 	mul.w	r0, r8, r0
 801c4ee:	b29b      	uxth	r3, r3
 801c4f0:	fb09 0303 	mla	r3, r9, r3, r0
 801c4f4:	980f      	ldr	r0, [sp, #60]	@ 0x3c
 801c4f6:	f89b 4001 	ldrb.w	r4, [fp, #1]
 801c4fa:	9410      	str	r4, [sp, #64]	@ 0x40
 801c4fc:	fb0a 3300 	mla	r3, sl, r0, r3
 801c500:	fb0c 3304 	mla	r3, ip, r4, r3
 801c504:	f3c3 2307 	ubfx	r3, r3, #8, #8
 801c508:	2b00      	cmp	r3, #0
 801c50a:	f000 810b 	beq.w	801c724 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x78c>
 801c50e:	980b      	ldr	r0, [sp, #44]	@ 0x2c
 801c510:	9c0b      	ldr	r4, [sp, #44]	@ 0x2c
 801c512:	f1b9 0fff 	cmp.w	r9, #255	@ 0xff
 801c516:	eb00 0047 	add.w	r0, r0, r7, lsl #1
 801c51a:	f834 7017 	ldrh.w	r7, [r4, r7, lsl #1]
 801c51e:	f000 8114 	beq.w	801c74a <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x7b2>
 801c522:	f427 6cfc 	bic.w	ip, r7, #2016	@ 0x7e0
 801c526:	ea4f 0ae9 	mov.w	sl, r9, asr #3
 801c52a:	f407 67fc 	and.w	r7, r7, #2016	@ 0x7e0
 801c52e:	fb09 f707 	mul.w	r7, r9, r7
 801c532:	fb0a fc0c 	mul.w	ip, sl, ip
 801c536:	ea06 195c 	and.w	r9, r6, ip, lsr #5
 801c53a:	f107 0b20 	add.w	fp, r7, #32
 801c53e:	f60c 0c01 	addw	ip, ip, #2049	@ 0x801
 801c542:	44cc      	add	ip, r9
 801c544:	eb0b 2917 	add.w	r9, fp, r7, lsr #8
 801c548:	ea4f 2919 	mov.w	r9, r9, lsr #8
 801c54c:	ea06 1c5c 	and.w	ip, r6, ip, lsr #5
 801c550:	f409 69fc 	and.w	r9, r9, #2016	@ 0x7e0
 801c554:	ea4c 0909 	orr.w	r9, ip, r9
 801c558:	f1b8 0fff 	cmp.w	r8, #255	@ 0xff
 801c55c:	8847      	ldrh	r7, [r0, #2]
 801c55e:	d019      	beq.n	801c594 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x5fc>
 801c560:	f427 6cfc 	bic.w	ip, r7, #2016	@ 0x7e0
 801c564:	ea4f 0ae8 	mov.w	sl, r8, asr #3
 801c568:	f407 67fc 	and.w	r7, r7, #2016	@ 0x7e0
 801c56c:	fb08 f807 	mul.w	r8, r8, r7
 801c570:	fb0a fc0c 	mul.w	ip, sl, ip
 801c574:	ea06 175c 	and.w	r7, r6, ip, lsr #5
 801c578:	f108 0b20 	add.w	fp, r8, #32
 801c57c:	f60c 0c01 	addw	ip, ip, #2049	@ 0x801
 801c580:	44bc      	add	ip, r7
 801c582:	eb0b 2718 	add.w	r7, fp, r8, lsr #8
 801c586:	0a3f      	lsrs	r7, r7, #8
 801c588:	ea06 1c5c 	and.w	ip, r6, ip, lsr #5
 801c58c:	f407 67fc 	and.w	r7, r7, #2016	@ 0x7e0
 801c590:	ea4c 0707 	orr.w	r7, ip, r7
 801c594:	ea4f 4c09 	mov.w	ip, r9, lsl #16
 801c598:	ea4f 4a07 	mov.w	sl, r7, lsl #16
 801c59c:	f00c 6cfc 	and.w	ip, ip, #132120576	@ 0x7e00000
 801c5a0:	f429 69fc 	bic.w	r9, r9, #2016	@ 0x7e0
 801c5a4:	f00a 6afc 	and.w	sl, sl, #132120576	@ 0x7e00000
 801c5a8:	f427 67fc 	bic.w	r7, r7, #2016	@ 0x7e0
 801c5ac:	ea4c 0909 	orr.w	r9, ip, r9
 801c5b0:	ea4a 0707 	orr.w	r7, sl, r7
 801c5b4:	2d00      	cmp	r5, #0
 801c5b6:	f000 80ca 	beq.w	801c74e <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x7b6>
 801c5ba:	f101 4100 	add.w	r1, r1, #2147483648	@ 0x80000000
 801c5be:	3901      	subs	r1, #1
 801c5c0:	0049      	lsls	r1, r1, #1
 801c5c2:	3102      	adds	r1, #2
 801c5c4:	eb00 0c01 	add.w	ip, r0, r1
 801c5c8:	5a41      	ldrh	r1, [r0, r1]
 801c5ca:	980f      	ldr	r0, [sp, #60]	@ 0x3c
 801c5cc:	28ff      	cmp	r0, #255	@ 0xff
 801c5ce:	d019      	beq.n	801c604 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x66c>
 801c5d0:	9c0f      	ldr	r4, [sp, #60]	@ 0x3c
 801c5d2:	f421 60fc 	bic.w	r0, r1, #2016	@ 0x7e0
 801c5d6:	f401 61fc 	and.w	r1, r1, #2016	@ 0x7e0
 801c5da:	fb04 fa01 	mul.w	sl, r4, r1
 801c5de:	ea4f 08e4 	mov.w	r8, r4, asr #3
 801c5e2:	fb08 f800 	mul.w	r8, r8, r0
 801c5e6:	f10a 0020 	add.w	r0, sl, #32
 801c5ea:	ea06 1158 	and.w	r1, r6, r8, lsr #5
 801c5ee:	eb00 201a 	add.w	r0, r0, sl, lsr #8
 801c5f2:	f608 0801 	addw	r8, r8, #2049	@ 0x801
 801c5f6:	4441      	add	r1, r8
 801c5f8:	0a00      	lsrs	r0, r0, #8
 801c5fa:	ea06 1151 	and.w	r1, r6, r1, lsr #5
 801c5fe:	f400 60fc 	and.w	r0, r0, #2016	@ 0x7e0
 801c602:	4301      	orrs	r1, r0
 801c604:	9c10      	ldr	r4, [sp, #64]	@ 0x40
 801c606:	f8bc 0002 	ldrh.w	r0, [ip, #2]
 801c60a:	2cff      	cmp	r4, #255	@ 0xff
 801c60c:	d01a      	beq.n	801c644 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x6ac>
 801c60e:	f420 6cfc 	bic.w	ip, r0, #2016	@ 0x7e0
 801c612:	f400 60fc 	and.w	r0, r0, #2016	@ 0x7e0
 801c616:	fb04 fa00 	mul.w	sl, r4, r0
 801c61a:	ea4f 08e4 	mov.w	r8, r4, asr #3
 801c61e:	fb08 f80c 	mul.w	r8, r8, ip
 801c622:	f10a 0c20 	add.w	ip, sl, #32
 801c626:	ea06 1058 	and.w	r0, r6, r8, lsr #5
 801c62a:	eb0c 2c1a 	add.w	ip, ip, sl, lsr #8
 801c62e:	f608 0801 	addw	r8, r8, #2049	@ 0x801
 801c632:	4440      	add	r0, r8
 801c634:	ea4f 2c1c 	mov.w	ip, ip, lsr #8
 801c638:	ea06 1050 	and.w	r0, r6, r0, lsr #5
 801c63c:	f40c 6cfc 	and.w	ip, ip, #2016	@ 0x7e0
 801c640:	ea40 000c 	orr.w	r0, r0, ip
 801c644:	fb15 fc02 	smulbb	ip, r5, r2
 801c648:	ea4f 0cec 	mov.w	ip, ip, asr #3
 801c64c:	f1c5 0810 	rsb	r8, r5, #16
 801c650:	eba8 0802 	sub.w	r8, r8, r2
 801c654:	ea4f 4a01 	mov.w	sl, r1, lsl #16
 801c658:	ebcc 0242 	rsb	r2, ip, r2, lsl #1
 801c65c:	437a      	muls	r2, r7
 801c65e:	ea4f 4b00 	mov.w	fp, r0, lsl #16
 801c662:	eb0c 0848 	add.w	r8, ip, r8, lsl #1
 801c666:	f00a 6afc 	and.w	sl, sl, #132120576	@ 0x7e00000
 801c66a:	f421 61fc 	bic.w	r1, r1, #2016	@ 0x7e0
 801c66e:	fb09 2208 	mla	r2, r9, r8, r2
 801c672:	ea4a 0101 	orr.w	r1, sl, r1
 801c676:	ebcc 0545 	rsb	r5, ip, r5, lsl #1
 801c67a:	f00b 6bfc 	and.w	fp, fp, #132120576	@ 0x7e00000
 801c67e:	f420 60fc 	bic.w	r0, r0, #2016	@ 0x7e0
 801c682:	fb05 2201 	mla	r2, r5, r1, r2
 801c686:	ea4b 0000 	orr.w	r0, fp, r0
 801c68a:	fb0c 2200 	mla	r2, ip, r0, r2
 801c68e:	0d57      	lsrs	r7, r2, #21
 801c690:	0952      	lsrs	r2, r2, #5
 801c692:	f407 67fc 	and.w	r7, r7, #2016	@ 0x7e0
 801c696:	f422 62fc 	bic.w	r2, r2, #2016	@ 0x7e0
 801c69a:	433a      	orrs	r2, r7
 801c69c:	2bff      	cmp	r3, #255	@ 0xff
 801c69e:	b292      	uxth	r2, r2
 801c6a0:	d102      	bne.n	801c6a8 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x710>
 801c6a2:	9912      	ldr	r1, [sp, #72]	@ 0x48
 801c6a4:	29ff      	cmp	r1, #255	@ 0xff
 801c6a6:	d063      	beq.n	801c770 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x7d8>
 801c6a8:	980a      	ldr	r0, [sp, #40]	@ 0x28
 801c6aa:	f8be 1000 	ldrh.w	r1, [lr]
 801c6ae:	9c0a      	ldr	r4, [sp, #40]	@ 0x28
 801c6b0:	4343      	muls	r3, r0
 801c6b2:	1c58      	adds	r0, r3, #1
 801c6b4:	eb00 2323 	add.w	r3, r0, r3, asr #8
 801c6b8:	ea6f 2323 	mvn.w	r3, r3, asr #8
 801c6bc:	1208      	asrs	r0, r1, #8
 801c6be:	b2db      	uxtb	r3, r3
 801c6c0:	1215      	asrs	r5, r2, #8
 801c6c2:	f000 00f8 	and.w	r0, r0, #248	@ 0xf8
 801c6c6:	fb10 f003 	smulbb	r0, r0, r3
 801c6ca:	10cf      	asrs	r7, r1, #3
 801c6cc:	f005 05f8 	and.w	r5, r5, #248	@ 0xf8
 801c6d0:	00c9      	lsls	r1, r1, #3
 801c6d2:	fb05 0504 	mla	r5, r5, r4, r0
 801c6d6:	b2c9      	uxtb	r1, r1
 801c6d8:	10d0      	asrs	r0, r2, #3
 801c6da:	00d2      	lsls	r2, r2, #3
 801c6dc:	fb11 f103 	smulbb	r1, r1, r3
 801c6e0:	b2d2      	uxtb	r2, r2
 801c6e2:	f007 07fc 	and.w	r7, r7, #252	@ 0xfc
 801c6e6:	fb02 1204 	mla	r2, r2, r4, r1
 801c6ea:	fb17 f703 	smulbb	r7, r7, r3
 801c6ee:	b2ad      	uxth	r5, r5
 801c6f0:	b292      	uxth	r2, r2
 801c6f2:	f000 00fc 	and.w	r0, r0, #252	@ 0xfc
 801c6f6:	fb00 7004 	mla	r0, r0, r4, r7
 801c6fa:	1c6b      	adds	r3, r5, #1
 801c6fc:	1c57      	adds	r7, r2, #1
 801c6fe:	eb03 2515 	add.w	r5, r3, r5, lsr #8
 801c702:	eb07 2712 	add.w	r7, r7, r2, lsr #8
 801c706:	b280      	uxth	r0, r0
 801c708:	f3c7 27c4 	ubfx	r7, r7, #11, #5
 801c70c:	f405 4578 	and.w	r5, r5, #63488	@ 0xf800
 801c710:	433d      	orrs	r5, r7
 801c712:	1c47      	adds	r7, r0, #1
 801c714:	eb07 2710 	add.w	r7, r7, r0, lsr #8
 801c718:	097f      	lsrs	r7, r7, #5
 801c71a:	f407 67fc 	and.w	r7, r7, #2016	@ 0x7e0
 801c71e:	433d      	orrs	r5, r7
 801c720:	f8ae 5000 	strh.w	r5, [lr]
 801c724:	9b21      	ldr	r3, [sp, #132]	@ 0x84
 801c726:	9a23      	ldr	r2, [sp, #140]	@ 0x8c
 801c728:	4413      	add	r3, r2
 801c72a:	9321      	str	r3, [sp, #132]	@ 0x84
 801c72c:	9a22      	ldr	r2, [sp, #136]	@ 0x88
 801c72e:	9b24      	ldr	r3, [sp, #144]	@ 0x90
 801c730:	441a      	add	r2, r3
 801c732:	9b13      	ldr	r3, [sp, #76]	@ 0x4c
 801c734:	9222      	str	r2, [sp, #136]	@ 0x88
 801c736:	3b01      	subs	r3, #1
 801c738:	f10e 0e02 	add.w	lr, lr, #2
 801c73c:	9313      	str	r3, [sp, #76]	@ 0x4c
 801c73e:	e61c      	b.n	801c37a <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3e2>
 801c740:	fb08 f000 	mul.w	r0, r8, r0
 801c744:	fb09 0303 	mla	r3, r9, r3, r0
 801c748:	e6dc      	b.n	801c504 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x56c>
 801c74a:	46b9      	mov	r9, r7
 801c74c:	e704      	b.n	801c558 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x5c0>
 801c74e:	f1c2 0110 	rsb	r1, r2, #16
 801c752:	437a      	muls	r2, r7
 801c754:	fb09 2901 	mla	r9, r9, r1, r2
 801c758:	ea4f 0949 	mov.w	r9, r9, lsl #1
 801c75c:	ea4f 5059 	mov.w	r0, r9, lsr #21
 801c760:	ea4f 1259 	mov.w	r2, r9, lsr #5
 801c764:	f400 60fc 	and.w	r0, r0, #2016	@ 0x7e0
 801c768:	f422 62fc 	bic.w	r2, r2, #2016	@ 0x7e0
 801c76c:	4302      	orrs	r2, r0
 801c76e:	e795      	b.n	801c69c <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x704>
 801c770:	f8ae 2000 	strh.w	r2, [lr]
 801c774:	e7d6      	b.n	801c724 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x78c>
 801c776:	b017      	add	sp, #92	@ 0x5c
 801c778:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}

0801c77c <_ZNK8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh>:
 801c77c:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 801c780:	b085      	sub	sp, #20
 801c782:	e9dd 7010 	ldrd	r7, r0, [sp, #64]	@ 0x40
 801c786:	f9bd 6038 	ldrsh.w	r6, [sp, #56]	@ 0x38
 801c78a:	9103      	str	r1, [sp, #12]
 801c78c:	fb00 7406 	mla	r4, r0, r6, r7
 801c790:	eb03 0544 	add.w	r5, r3, r4, lsl #1
 801c794:	2800      	cmp	r0, #0
 801c796:	f9bd b03c 	ldrsh.w	fp, [sp, #60]	@ 0x3c
 801c79a:	f89d 1048 	ldrb.w	r1, [sp, #72]	@ 0x48
 801c79e:	f89d e04c 	ldrb.w	lr, [sp, #76]	@ 0x4c
 801c7a2:	9501      	str	r5, [sp, #4]
 801c7a4:	eb02 0904 	add.w	r9, r2, r4
 801c7a8:	f2c0 8141 	blt.w	801ca2e <_ZNK8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x2b2>
 801c7ac:	4583      	cmp	fp, r0
 801c7ae:	f340 813e 	ble.w	801ca2e <_ZNK8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x2b2>
 801c7b2:	2f00      	cmp	r7, #0
 801c7b4:	f2c0 8137 	blt.w	801ca26 <_ZNK8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x2aa>
 801c7b8:	42be      	cmp	r6, r7
 801c7ba:	f340 8134 	ble.w	801ca26 <_ZNK8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x2aa>
 801c7be:	f812 c004 	ldrb.w	ip, [r2, r4]
 801c7c2:	f833 3014 	ldrh.w	r3, [r3, r4, lsl #1]
 801c7c6:	ea4f 02ec 	mov.w	r2, ip, asr #3
 801c7ca:	f423 65fc 	bic.w	r5, r3, #2016	@ 0x7e0
 801c7ce:	4355      	muls	r5, r2
 801c7d0:	f403 63fc 	and.w	r3, r3, #2016	@ 0x7e0
 801c7d4:	f64f 041f 	movw	r4, #63519	@ 0xf81f
 801c7d8:	fb0c f203 	mul.w	r2, ip, r3
 801c7dc:	ea04 1355 	and.w	r3, r4, r5, lsr #5
 801c7e0:	f605 0501 	addw	r5, r5, #2049	@ 0x801
 801c7e4:	441d      	add	r5, r3
 801c7e6:	f102 0320 	add.w	r3, r2, #32
 801c7ea:	eb03 2312 	add.w	r3, r3, r2, lsr #8
 801c7ee:	0a1b      	lsrs	r3, r3, #8
 801c7f0:	ea04 1455 	and.w	r4, r4, r5, lsr #5
 801c7f4:	f403 63fc 	and.w	r3, r3, #2016	@ 0x7e0
 801c7f8:	431c      	orrs	r4, r3
 801c7fa:	1c7b      	adds	r3, r7, #1
 801c7fc:	f100 811c 	bmi.w	801ca38 <_ZNK8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x2bc>
 801c800:	429e      	cmp	r6, r3
 801c802:	f340 8119 	ble.w	801ca38 <_ZNK8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x2bc>
 801c806:	2900      	cmp	r1, #0
 801c808:	f000 8119 	beq.w	801ca3e <_ZNK8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x2c2>
 801c80c:	9a01      	ldr	r2, [sp, #4]
 801c80e:	f899 3001 	ldrb.w	r3, [r9, #1]
 801c812:	8855      	ldrh	r5, [r2, #2]
 801c814:	ea4f 08e3 	mov.w	r8, r3, asr #3
 801c818:	f425 62fc 	bic.w	r2, r5, #2016	@ 0x7e0
 801c81c:	fb08 f802 	mul.w	r8, r8, r2
 801c820:	f405 65fc 	and.w	r5, r5, #2016	@ 0x7e0
 801c824:	f64f 021f 	movw	r2, #63519	@ 0xf81f
 801c828:	ea02 1a58 	and.w	sl, r2, r8, lsr #5
 801c82c:	435d      	muls	r5, r3
 801c82e:	f608 0801 	addw	r8, r8, #2049	@ 0x801
 801c832:	44d0      	add	r8, sl
 801c834:	f105 0a20 	add.w	sl, r5, #32
 801c838:	eb0a 2515 	add.w	r5, sl, r5, lsr #8
 801c83c:	0a2d      	lsrs	r5, r5, #8
 801c83e:	ea02 1258 	and.w	r2, r2, r8, lsr #5
 801c842:	f405 65fc 	and.w	r5, r5, #2016	@ 0x7e0
 801c846:	432a      	orrs	r2, r5
 801c848:	3001      	adds	r0, #1
 801c84a:	f100 80fe 	bmi.w	801ca4a <_ZNK8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x2ce>
 801c84e:	4583      	cmp	fp, r0
 801c850:	f340 80fb 	ble.w	801ca4a <_ZNK8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x2ce>
 801c854:	f1be 0f00 	cmp.w	lr, #0
 801c858:	f000 80fc 	beq.w	801ca54 <_ZNK8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x2d8>
 801c85c:	2f00      	cmp	r7, #0
 801c85e:	f2c0 80f1 	blt.w	801ca44 <_ZNK8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x2c8>
 801c862:	42be      	cmp	r6, r7
 801c864:	f340 80ee 	ble.w	801ca44 <_ZNK8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x2c8>
 801c868:	9801      	ldr	r0, [sp, #4]
 801c86a:	f819 5006 	ldrb.w	r5, [r9, r6]
 801c86e:	f830 8016 	ldrh.w	r8, [r0, r6, lsl #1]
 801c872:	ea4f 0ae5 	mov.w	sl, r5, asr #3
 801c876:	f428 60fc 	bic.w	r0, r8, #2016	@ 0x7e0
 801c87a:	fb0a fa00 	mul.w	sl, sl, r0
 801c87e:	f64f 0b1f 	movw	fp, #63519	@ 0xf81f
 801c882:	f408 68fc 	and.w	r8, r8, #2016	@ 0x7e0
 801c886:	ea0b 105a 	and.w	r0, fp, sl, lsr #5
 801c88a:	fb05 f808 	mul.w	r8, r5, r8
 801c88e:	f60a 0a01 	addw	sl, sl, #2049	@ 0x801
 801c892:	4482      	add	sl, r0
 801c894:	f108 0020 	add.w	r0, r8, #32
 801c898:	eb00 2018 	add.w	r0, r0, r8, lsr #8
 801c89c:	0a00      	lsrs	r0, r0, #8
 801c89e:	ea0b 1b5a 	and.w	fp, fp, sl, lsr #5
 801c8a2:	f400 60fc 	and.w	r0, r0, #2016	@ 0x7e0
 801c8a6:	ea4b 0b00 	orr.w	fp, fp, r0
 801c8aa:	3701      	adds	r7, #1
 801c8ac:	f100 80d7 	bmi.w	801ca5e <_ZNK8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x2e2>
 801c8b0:	42be      	cmp	r6, r7
 801c8b2:	f340 80d4 	ble.w	801ca5e <_ZNK8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x2e2>
 801c8b6:	2900      	cmp	r1, #0
 801c8b8:	f000 80d4 	beq.w	801ca64 <_ZNK8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x2e8>
 801c8bc:	3601      	adds	r6, #1
 801c8be:	9801      	ldr	r0, [sp, #4]
 801c8c0:	f819 7006 	ldrb.w	r7, [r9, r6]
 801c8c4:	f830 0016 	ldrh.w	r0, [r0, r6, lsl #1]
 801c8c8:	ea4f 09e7 	mov.w	r9, r7, asr #3
 801c8cc:	f420 66fc 	bic.w	r6, r0, #2016	@ 0x7e0
 801c8d0:	f400 60fc 	and.w	r0, r0, #2016	@ 0x7e0
 801c8d4:	fb09 f906 	mul.w	r9, r9, r6
 801c8d8:	fb07 f800 	mul.w	r8, r7, r0
 801c8dc:	f64f 001f 	movw	r0, #63519	@ 0xf81f
 801c8e0:	ea00 1a59 	and.w	sl, r0, r9, lsr #5
 801c8e4:	f609 0901 	addw	r9, r9, #2049	@ 0x801
 801c8e8:	44d1      	add	r9, sl
 801c8ea:	ea00 1659 	and.w	r6, r0, r9, lsr #5
 801c8ee:	f108 0020 	add.w	r0, r8, #32
 801c8f2:	eb00 2018 	add.w	r0, r0, r8, lsr #8
 801c8f6:	0a00      	lsrs	r0, r0, #8
 801c8f8:	f400 60fc 	and.w	r0, r0, #2016	@ 0x7e0
 801c8fc:	4330      	orrs	r0, r6
 801c8fe:	b28e      	uxth	r6, r1
 801c900:	fa1f f98e 	uxth.w	r9, lr
 801c904:	fb06 f809 	mul.w	r8, r6, r9
 801c908:	ea4f 4a04 	mov.w	sl, r4, lsl #16
 801c90c:	ebc8 1909 	rsb	r9, r8, r9, lsl #4
 801c910:	0136      	lsls	r6, r6, #4
 801c912:	f00a 6afc 	and.w	sl, sl, #132120576	@ 0x7e00000
 801c916:	f424 64fc 	bic.w	r4, r4, #2016	@ 0x7e0
 801c91a:	9601      	str	r6, [sp, #4]
 801c91c:	ea4a 0404 	orr.w	r4, sl, r4
 801c920:	fa1f f689 	uxth.w	r6, r9
 801c924:	ea4f 4a02 	mov.w	sl, r2, lsl #16
 801c928:	fb11 f90e 	smulbb	r9, r1, lr
 801c92c:	f3c9 09c7 	ubfx	r9, r9, #3, #8
 801c930:	9602      	str	r6, [sp, #8]
 801c932:	f00a 6afc 	and.w	sl, sl, #132120576	@ 0x7e00000
 801c936:	4626      	mov	r6, r4
 801c938:	f422 62fc 	bic.w	r2, r2, #2016	@ 0x7e0
 801c93c:	f1ce 0410 	rsb	r4, lr, #16
 801c940:	1a64      	subs	r4, r4, r1
 801c942:	ea4a 0202 	orr.w	r2, sl, r2
 801c946:	ebc9 0141 	rsb	r1, r9, r1, lsl #1
 801c94a:	ea4f 4a00 	mov.w	sl, r0, lsl #16
 801c94e:	434a      	muls	r2, r1
 801c950:	eb09 0444 	add.w	r4, r9, r4, lsl #1
 801c954:	f00a 6afc 	and.w	sl, sl, #132120576	@ 0x7e00000
 801c958:	f420 60fc 	bic.w	r0, r0, #2016	@ 0x7e0
 801c95c:	fb04 2406 	mla	r4, r4, r6, r2
 801c960:	ea4a 0000 	orr.w	r0, sl, r0
 801c964:	fb09 4200 	mla	r2, r9, r0, r4
 801c968:	ea4f 440b 	mov.w	r4, fp, lsl #16
 801c96c:	f004 64fc 	and.w	r4, r4, #132120576	@ 0x7e00000
 801c970:	9801      	ldr	r0, [sp, #4]
 801c972:	9903      	ldr	r1, [sp, #12]
 801c974:	f42b 6bfc 	bic.w	fp, fp, #2016	@ 0x7e0
 801c978:	ea44 0b0b 	orr.w	fp, r4, fp
 801c97c:	9c02      	ldr	r4, [sp, #8]
 801c97e:	8809      	ldrh	r1, [r1, #0]
 801c980:	f5c0 7080 	rsb	r0, r0, #256	@ 0x100
 801c984:	1b00      	subs	r0, r0, r4
 801c986:	9c01      	ldr	r4, [sp, #4]
 801c988:	eba4 0608 	sub.w	r6, r4, r8
 801c98c:	b2b6      	uxth	r6, r6
 801c98e:	b280      	uxth	r0, r0
 801c990:	4373      	muls	r3, r6
 801c992:	fb0c 3300 	mla	r3, ip, r0, r3
 801c996:	9802      	ldr	r0, [sp, #8]
 801c998:	ebc9 0e4e 	rsb	lr, r9, lr, lsl #1
 801c99c:	fb00 3505 	mla	r5, r0, r5, r3
 801c9a0:	fb0e 2e0b 	mla	lr, lr, fp, r2
 801c9a4:	fb08 5707 	mla	r7, r8, r7, r5
 801c9a8:	ea4f 525e 	mov.w	r2, lr, lsr #21
 801c9ac:	120b      	asrs	r3, r1, #8
 801c9ae:	ea4f 1e5e 	mov.w	lr, lr, lsr #5
 801c9b2:	ea6f 2727 	mvn.w	r7, r7, asr #8
 801c9b6:	b2ff      	uxtb	r7, r7
 801c9b8:	f402 62fc 	and.w	r2, r2, #2016	@ 0x7e0
 801c9bc:	10c8      	asrs	r0, r1, #3
 801c9be:	f42e 6efc 	bic.w	lr, lr, #2016	@ 0x7e0
 801c9c2:	f003 03f8 	and.w	r3, r3, #248	@ 0xf8
 801c9c6:	00c9      	lsls	r1, r1, #3
 801c9c8:	437b      	muls	r3, r7
 801c9ca:	ea42 0e0e 	orr.w	lr, r2, lr
 801c9ce:	b2c9      	uxtb	r1, r1
 801c9d0:	f000 00fc 	and.w	r0, r0, #252	@ 0xfc
 801c9d4:	fa1f f28e 	uxth.w	r2, lr
 801c9d8:	4378      	muls	r0, r7
 801c9da:	434f      	muls	r7, r1
 801c9dc:	1c59      	adds	r1, r3, #1
 801c9de:	eb01 2113 	add.w	r1, r1, r3, lsr #8
 801c9e2:	1213      	asrs	r3, r2, #8
 801c9e4:	f023 0307 	bic.w	r3, r3, #7
 801c9e8:	eb03 2311 	add.w	r3, r3, r1, lsr #8
 801c9ec:	1c41      	adds	r1, r0, #1
 801c9ee:	eb01 2010 	add.w	r0, r1, r0, lsr #8
 801c9f2:	10d1      	asrs	r1, r2, #3
 801c9f4:	f021 0103 	bic.w	r1, r1, #3
 801c9f8:	eb01 2110 	add.w	r1, r1, r0, lsr #8
 801c9fc:	021b      	lsls	r3, r3, #8
 801c9fe:	00c9      	lsls	r1, r1, #3
 801ca00:	f401 61fc 	and.w	r1, r1, #2016	@ 0x7e0
 801ca04:	f403 4378 	and.w	r3, r3, #63488	@ 0xf800
 801ca08:	430b      	orrs	r3, r1
 801ca0a:	1c79      	adds	r1, r7, #1
 801ca0c:	eb01 2717 	add.w	r7, r1, r7, lsr #8
 801ca10:	00d2      	lsls	r2, r2, #3
 801ca12:	eb02 2217 	add.w	r2, r2, r7, lsr #8
 801ca16:	f3c2 02c4 	ubfx	r2, r2, #3, #5
 801ca1a:	431a      	orrs	r2, r3
 801ca1c:	9b03      	ldr	r3, [sp, #12]
 801ca1e:	801a      	strh	r2, [r3, #0]
 801ca20:	b005      	add	sp, #20
 801ca22:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 801ca26:	f04f 0c00 	mov.w	ip, #0
 801ca2a:	4664      	mov	r4, ip
 801ca2c:	e6e5      	b.n	801c7fa <_ZNK8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x7e>
 801ca2e:	2300      	movs	r3, #0
 801ca30:	469c      	mov	ip, r3
 801ca32:	461a      	mov	r2, r3
 801ca34:	461c      	mov	r4, r3
 801ca36:	e707      	b.n	801c848 <_ZNK8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0xcc>
 801ca38:	2300      	movs	r3, #0
 801ca3a:	461a      	mov	r2, r3
 801ca3c:	e704      	b.n	801c848 <_ZNK8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0xcc>
 801ca3e:	460b      	mov	r3, r1
 801ca40:	460a      	mov	r2, r1
 801ca42:	e701      	b.n	801c848 <_ZNK8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0xcc>
 801ca44:	2500      	movs	r5, #0
 801ca46:	46ab      	mov	fp, r5
 801ca48:	e72f      	b.n	801c8aa <_ZNK8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x12e>
 801ca4a:	2700      	movs	r7, #0
 801ca4c:	463d      	mov	r5, r7
 801ca4e:	4638      	mov	r0, r7
 801ca50:	46bb      	mov	fp, r7
 801ca52:	e754      	b.n	801c8fe <_ZNK8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x182>
 801ca54:	4677      	mov	r7, lr
 801ca56:	4675      	mov	r5, lr
 801ca58:	4670      	mov	r0, lr
 801ca5a:	46f3      	mov	fp, lr
 801ca5c:	e74f      	b.n	801c8fe <_ZNK8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x182>
 801ca5e:	2700      	movs	r7, #0
 801ca60:	4638      	mov	r0, r7
 801ca62:	e74c      	b.n	801c8fe <_ZNK8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x182>
 801ca64:	460f      	mov	r7, r1
 801ca66:	4608      	mov	r0, r1
 801ca68:	e749      	b.n	801c8fe <_ZNK8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x182>
	...

0801ca6c <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff>:
 801ca6c:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 801ca70:	b093      	sub	sp, #76	@ 0x4c
 801ca72:	9210      	str	r2, [sp, #64]	@ 0x40
 801ca74:	9a21      	ldr	r2, [sp, #132]	@ 0x84
 801ca76:	910e      	str	r1, [sp, #56]	@ 0x38
 801ca78:	9306      	str	r3, [sp, #24]
 801ca7a:	e9dd 1322 	ldrd	r1, r3, [sp, #136]	@ 0x88
 801ca7e:	9011      	str	r0, [sp, #68]	@ 0x44
 801ca80:	6850      	ldr	r0, [r2, #4]
 801ca82:	6812      	ldr	r2, [r2, #0]
 801ca84:	fb00 1303 	mla	r3, r0, r3, r1
 801ca88:	eb02 0343 	add.w	r3, r2, r3, lsl #1
 801ca8c:	9307      	str	r3, [sp, #28]
 801ca8e:	9b24      	ldr	r3, [sp, #144]	@ 0x90
 801ca90:	681b      	ldr	r3, [r3, #0]
 801ca92:	9308      	str	r3, [sp, #32]
 801ca94:	9b24      	ldr	r3, [sp, #144]	@ 0x90
 801ca96:	685b      	ldr	r3, [r3, #4]
 801ca98:	9309      	str	r3, [sp, #36]	@ 0x24
 801ca9a:	9b0e      	ldr	r3, [sp, #56]	@ 0x38
 801ca9c:	2b00      	cmp	r3, #0
 801ca9e:	dc03      	bgt.n	801caa8 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3c>
 801caa0:	9b10      	ldr	r3, [sp, #64]	@ 0x40
 801caa2:	2b00      	cmp	r3, #0
 801caa4:	f340 83b4 	ble.w	801d210 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x7a4>
 801caa8:	9b24      	ldr	r3, [sp, #144]	@ 0x90
 801caaa:	f9b3 1008 	ldrsh.w	r1, [r3, #8]
 801caae:	f9b3 200c 	ldrsh.w	r2, [r3, #12]
 801cab2:	1e48      	subs	r0, r1, #1
 801cab4:	1e55      	subs	r5, r2, #1
 801cab6:	9b06      	ldr	r3, [sp, #24]
 801cab8:	2b00      	cmp	r3, #0
 801caba:	f340 8163 	ble.w	801cd84 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x318>
 801cabe:	9e1d      	ldr	r6, [sp, #116]	@ 0x74
 801cac0:	9b1e      	ldr	r3, [sp, #120]	@ 0x78
 801cac2:	1436      	asrs	r6, r6, #16
 801cac4:	ea4f 4323 	mov.w	r3, r3, asr #16
 801cac8:	d406      	bmi.n	801cad8 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x6c>
 801caca:	4286      	cmp	r6, r0
 801cacc:	da04      	bge.n	801cad8 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x6c>
 801cace:	2b00      	cmp	r3, #0
 801cad0:	db02      	blt.n	801cad8 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x6c>
 801cad2:	42ab      	cmp	r3, r5
 801cad4:	f2c0 8157 	blt.w	801cd86 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x31a>
 801cad8:	3601      	adds	r6, #1
 801cada:	f100 8144 	bmi.w	801cd66 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2fa>
 801cade:	42b1      	cmp	r1, r6
 801cae0:	f2c0 8141 	blt.w	801cd66 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2fa>
 801cae4:	3301      	adds	r3, #1
 801cae6:	f100 813e 	bmi.w	801cd66 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2fa>
 801caea:	429a      	cmp	r2, r3
 801caec:	f2c0 813b 	blt.w	801cd66 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2fa>
 801caf0:	9b06      	ldr	r3, [sp, #24]
 801caf2:	9f07      	ldr	r7, [sp, #28]
 801caf4:	930f      	str	r3, [sp, #60]	@ 0x3c
 801caf6:	f64f 061f 	movw	r6, #63519	@ 0xf81f
 801cafa:	9b0f      	ldr	r3, [sp, #60]	@ 0x3c
 801cafc:	2b00      	cmp	r3, #0
 801cafe:	f340 8164 	ble.w	801cdca <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x35e>
 801cb02:	9b1e      	ldr	r3, [sp, #120]	@ 0x78
 801cb04:	9d1d      	ldr	r5, [sp, #116]	@ 0x74
 801cb06:	1418      	asrs	r0, r3, #16
 801cb08:	9b1d      	ldr	r3, [sp, #116]	@ 0x74
 801cb0a:	f3c3 3103 	ubfx	r1, r3, #12, #4
 801cb0e:	9b1e      	ldr	r3, [sp, #120]	@ 0x78
 801cb10:	f3c3 3c03 	ubfx	ip, r3, #12, #4
 801cb14:	9b24      	ldr	r3, [sp, #144]	@ 0x90
 801cb16:	142d      	asrs	r5, r5, #16
 801cb18:	e9d3 2302 	ldrd	r2, r3, [r3, #8]
 801cb1c:	f100 81ee 	bmi.w	801cefc <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x490>
 801cb20:	f102 3eff 	add.w	lr, r2, #4294967295
 801cb24:	4575      	cmp	r5, lr
 801cb26:	f280 81e9 	bge.w	801cefc <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x490>
 801cb2a:	2800      	cmp	r0, #0
 801cb2c:	f2c0 81e6 	blt.w	801cefc <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x490>
 801cb30:	f103 3eff 	add.w	lr, r3, #4294967295
 801cb34:	4570      	cmp	r0, lr
 801cb36:	f280 81e1 	bge.w	801cefc <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x490>
 801cb3a:	9b09      	ldr	r3, [sp, #36]	@ 0x24
 801cb3c:	b212      	sxth	r2, r2
 801cb3e:	fb00 5002 	mla	r0, r0, r2, r5
 801cb42:	fa1f fe81 	uxth.w	lr, r1
 801cb46:	eb03 0a00 	add.w	sl, r3, r0
 801cb4a:	ea4f 150e 	mov.w	r5, lr, lsl #4
 801cb4e:	f813 9000 	ldrb.w	r9, [r3, r0]
 801cb52:	f89a 8001 	ldrb.w	r8, [sl, #1]
 801cb56:	f5c5 7380 	rsb	r3, r5, #256	@ 0x100
 801cb5a:	b29b      	uxth	r3, r3
 801cb5c:	f1bc 0f00 	cmp.w	ip, #0
 801cb60:	f000 8179 	beq.w	801ce56 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3ea>
 801cb64:	f81a 4002 	ldrb.w	r4, [sl, r2]
 801cb68:	940a      	str	r4, [sp, #40]	@ 0x28
 801cb6a:	eb0a 0b02 	add.w	fp, sl, r2
 801cb6e:	fa1f fa8c 	uxth.w	sl, ip
 801cb72:	fb0a fe0e 	mul.w	lr, sl, lr
 801cb76:	ebce 1a0a 	rsb	sl, lr, sl, lsl #4
 801cb7a:	fa1f fa8a 	uxth.w	sl, sl
 801cb7e:	eba5 050e 	sub.w	r5, r5, lr
 801cb82:	f89b 4001 	ldrb.w	r4, [fp, #1]
 801cb86:	940b      	str	r4, [sp, #44]	@ 0x2c
 801cb88:	eba3 030a 	sub.w	r3, r3, sl
 801cb8c:	b2ad      	uxth	r5, r5
 801cb8e:	9c0a      	ldr	r4, [sp, #40]	@ 0x28
 801cb90:	b29b      	uxth	r3, r3
 801cb92:	fb08 f505 	mul.w	r5, r8, r5
 801cb96:	fb09 5303 	mla	r3, r9, r3, r5
 801cb9a:	fb0a 3304 	mla	r3, sl, r4, r3
 801cb9e:	9c0b      	ldr	r4, [sp, #44]	@ 0x2c
 801cba0:	fb0e 3304 	mla	r3, lr, r4, r3
 801cba4:	f3c3 2307 	ubfx	r3, r3, #8, #8
 801cba8:	2b00      	cmp	r3, #0
 801cbaa:	f000 80cf 	beq.w	801cd4c <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2e0>
 801cbae:	9c08      	ldr	r4, [sp, #32]
 801cbb0:	f1b9 0fff 	cmp.w	r9, #255	@ 0xff
 801cbb4:	eb04 0540 	add.w	r5, r4, r0, lsl #1
 801cbb8:	f834 0010 	ldrh.w	r0, [r4, r0, lsl #1]
 801cbbc:	f000 8150 	beq.w	801ce60 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3f4>
 801cbc0:	f420 6efc 	bic.w	lr, r0, #2016	@ 0x7e0
 801cbc4:	ea4f 0ae9 	mov.w	sl, r9, asr #3
 801cbc8:	f400 60fc 	and.w	r0, r0, #2016	@ 0x7e0
 801cbcc:	fb09 f000 	mul.w	r0, r9, r0
 801cbd0:	fb0a fe0e 	mul.w	lr, sl, lr
 801cbd4:	ea06 195e 	and.w	r9, r6, lr, lsr #5
 801cbd8:	f100 0b20 	add.w	fp, r0, #32
 801cbdc:	f60e 0e01 	addw	lr, lr, #2049	@ 0x801
 801cbe0:	44ce      	add	lr, r9
 801cbe2:	eb0b 2910 	add.w	r9, fp, r0, lsr #8
 801cbe6:	ea4f 2919 	mov.w	r9, r9, lsr #8
 801cbea:	ea06 1e5e 	and.w	lr, r6, lr, lsr #5
 801cbee:	f409 69fc 	and.w	r9, r9, #2016	@ 0x7e0
 801cbf2:	ea4e 0909 	orr.w	r9, lr, r9
 801cbf6:	f1b8 0fff 	cmp.w	r8, #255	@ 0xff
 801cbfa:	8868      	ldrh	r0, [r5, #2]
 801cbfc:	d019      	beq.n	801cc32 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1c6>
 801cbfe:	f420 6efc 	bic.w	lr, r0, #2016	@ 0x7e0
 801cc02:	ea4f 0ae8 	mov.w	sl, r8, asr #3
 801cc06:	f400 60fc 	and.w	r0, r0, #2016	@ 0x7e0
 801cc0a:	fb08 f800 	mul.w	r8, r8, r0
 801cc0e:	fb0a fe0e 	mul.w	lr, sl, lr
 801cc12:	ea06 105e 	and.w	r0, r6, lr, lsr #5
 801cc16:	f108 0b20 	add.w	fp, r8, #32
 801cc1a:	f60e 0e01 	addw	lr, lr, #2049	@ 0x801
 801cc1e:	4486      	add	lr, r0
 801cc20:	eb0b 2018 	add.w	r0, fp, r8, lsr #8
 801cc24:	0a00      	lsrs	r0, r0, #8
 801cc26:	ea06 1e5e 	and.w	lr, r6, lr, lsr #5
 801cc2a:	f400 60fc 	and.w	r0, r0, #2016	@ 0x7e0
 801cc2e:	ea4e 0000 	orr.w	r0, lr, r0
 801cc32:	ea4f 4e09 	mov.w	lr, r9, lsl #16
 801cc36:	ea4f 4a00 	mov.w	sl, r0, lsl #16
 801cc3a:	f00e 6efc 	and.w	lr, lr, #132120576	@ 0x7e00000
 801cc3e:	f429 69fc 	bic.w	r9, r9, #2016	@ 0x7e0
 801cc42:	f00a 6afc 	and.w	sl, sl, #132120576	@ 0x7e00000
 801cc46:	f420 60fc 	bic.w	r0, r0, #2016	@ 0x7e0
 801cc4a:	ea4e 0909 	orr.w	r9, lr, r9
 801cc4e:	ea4a 0000 	orr.w	r0, sl, r0
 801cc52:	f1bc 0f00 	cmp.w	ip, #0
 801cc56:	f000 8105 	beq.w	801ce64 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3f8>
 801cc5a:	f102 4200 	add.w	r2, r2, #2147483648	@ 0x80000000
 801cc5e:	3a01      	subs	r2, #1
 801cc60:	0052      	lsls	r2, r2, #1
 801cc62:	9c0a      	ldr	r4, [sp, #40]	@ 0x28
 801cc64:	3202      	adds	r2, #2
 801cc66:	2cff      	cmp	r4, #255	@ 0xff
 801cc68:	eb05 0e02 	add.w	lr, r5, r2
 801cc6c:	5aaa      	ldrh	r2, [r5, r2]
 801cc6e:	d018      	beq.n	801cca2 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x236>
 801cc70:	f422 65fc 	bic.w	r5, r2, #2016	@ 0x7e0
 801cc74:	f402 62fc 	and.w	r2, r2, #2016	@ 0x7e0
 801cc78:	fb04 fa02 	mul.w	sl, r4, r2
 801cc7c:	ea4f 08e4 	mov.w	r8, r4, asr #3
 801cc80:	fb08 f805 	mul.w	r8, r8, r5
 801cc84:	f10a 0520 	add.w	r5, sl, #32
 801cc88:	ea06 1258 	and.w	r2, r6, r8, lsr #5
 801cc8c:	eb05 251a 	add.w	r5, r5, sl, lsr #8
 801cc90:	f608 0801 	addw	r8, r8, #2049	@ 0x801
 801cc94:	4442      	add	r2, r8
 801cc96:	0a2d      	lsrs	r5, r5, #8
 801cc98:	ea06 1252 	and.w	r2, r6, r2, lsr #5
 801cc9c:	f405 65fc 	and.w	r5, r5, #2016	@ 0x7e0
 801cca0:	432a      	orrs	r2, r5
 801cca2:	9c0b      	ldr	r4, [sp, #44]	@ 0x2c
 801cca4:	f8be 5002 	ldrh.w	r5, [lr, #2]
 801cca8:	2cff      	cmp	r4, #255	@ 0xff
 801ccaa:	d01a      	beq.n	801cce2 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x276>
 801ccac:	f425 6efc 	bic.w	lr, r5, #2016	@ 0x7e0
 801ccb0:	f405 65fc 	and.w	r5, r5, #2016	@ 0x7e0
 801ccb4:	fb04 fa05 	mul.w	sl, r4, r5
 801ccb8:	ea4f 08e4 	mov.w	r8, r4, asr #3
 801ccbc:	fb08 f80e 	mul.w	r8, r8, lr
 801ccc0:	f10a 0e20 	add.w	lr, sl, #32
 801ccc4:	ea06 1558 	and.w	r5, r6, r8, lsr #5
 801ccc8:	eb0e 2e1a 	add.w	lr, lr, sl, lsr #8
 801cccc:	f608 0801 	addw	r8, r8, #2049	@ 0x801
 801ccd0:	4445      	add	r5, r8
 801ccd2:	ea4f 2e1e 	mov.w	lr, lr, lsr #8
 801ccd6:	ea06 1555 	and.w	r5, r6, r5, lsr #5
 801ccda:	f40e 6efc 	and.w	lr, lr, #2016	@ 0x7e0
 801ccde:	ea45 050e 	orr.w	r5, r5, lr
 801cce2:	fb1c fe01 	smulbb	lr, ip, r1
 801cce6:	ea4f 0eee 	mov.w	lr, lr, asr #3
 801ccea:	f1cc 0810 	rsb	r8, ip, #16
 801ccee:	eba8 0801 	sub.w	r8, r8, r1
 801ccf2:	ea4f 4a02 	mov.w	sl, r2, lsl #16
 801ccf6:	ebce 0141 	rsb	r1, lr, r1, lsl #1
 801ccfa:	eb0e 0848 	add.w	r8, lr, r8, lsl #1
 801ccfe:	ea4f 4b05 	mov.w	fp, r5, lsl #16
 801cd02:	4341      	muls	r1, r0
 801cd04:	f00a 6afc 	and.w	sl, sl, #132120576	@ 0x7e00000
 801cd08:	f422 62fc 	bic.w	r2, r2, #2016	@ 0x7e0
 801cd0c:	ea4a 0202 	orr.w	r2, sl, r2
 801cd10:	ebce 0c4c 	rsb	ip, lr, ip, lsl #1
 801cd14:	fb09 1108 	mla	r1, r9, r8, r1
 801cd18:	f00b 6bfc 	and.w	fp, fp, #132120576	@ 0x7e00000
 801cd1c:	f425 65fc 	bic.w	r5, r5, #2016	@ 0x7e0
 801cd20:	fb0c 1102 	mla	r1, ip, r2, r1
 801cd24:	ea4b 0505 	orr.w	r5, fp, r5
 801cd28:	fb0e 1e05 	mla	lr, lr, r5, r1
 801cd2c:	ea4f 525e 	mov.w	r2, lr, lsr #21
 801cd30:	ea4f 1e5e 	mov.w	lr, lr, lsr #5
 801cd34:	f402 62fc 	and.w	r2, r2, #2016	@ 0x7e0
 801cd38:	f42e 6efc 	bic.w	lr, lr, #2016	@ 0x7e0
 801cd3c:	ea42 0e0e 	orr.w	lr, r2, lr
 801cd40:	fa1f f28e 	uxth.w	r2, lr
 801cd44:	2bff      	cmp	r3, #255	@ 0xff
 801cd46:	f040 80a1 	bne.w	801ce8c <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x420>
 801cd4a:	803a      	strh	r2, [r7, #0]
 801cd4c:	9b1d      	ldr	r3, [sp, #116]	@ 0x74
 801cd4e:	9a1f      	ldr	r2, [sp, #124]	@ 0x7c
 801cd50:	4413      	add	r3, r2
 801cd52:	931d      	str	r3, [sp, #116]	@ 0x74
 801cd54:	9a1e      	ldr	r2, [sp, #120]	@ 0x78
 801cd56:	9b20      	ldr	r3, [sp, #128]	@ 0x80
 801cd58:	441a      	add	r2, r3
 801cd5a:	9b0f      	ldr	r3, [sp, #60]	@ 0x3c
 801cd5c:	921e      	str	r2, [sp, #120]	@ 0x78
 801cd5e:	3b01      	subs	r3, #1
 801cd60:	3702      	adds	r7, #2
 801cd62:	930f      	str	r3, [sp, #60]	@ 0x3c
 801cd64:	e6c9      	b.n	801cafa <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x8e>
 801cd66:	9b1d      	ldr	r3, [sp, #116]	@ 0x74
 801cd68:	9e1f      	ldr	r6, [sp, #124]	@ 0x7c
 801cd6a:	9c1e      	ldr	r4, [sp, #120]	@ 0x78
 801cd6c:	4433      	add	r3, r6
 801cd6e:	931d      	str	r3, [sp, #116]	@ 0x74
 801cd70:	9b20      	ldr	r3, [sp, #128]	@ 0x80
 801cd72:	441c      	add	r4, r3
 801cd74:	9b06      	ldr	r3, [sp, #24]
 801cd76:	941e      	str	r4, [sp, #120]	@ 0x78
 801cd78:	3b01      	subs	r3, #1
 801cd7a:	9306      	str	r3, [sp, #24]
 801cd7c:	9b07      	ldr	r3, [sp, #28]
 801cd7e:	3302      	adds	r3, #2
 801cd80:	9307      	str	r3, [sp, #28]
 801cd82:	e698      	b.n	801cab6 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x4a>
 801cd84:	d028      	beq.n	801cdd8 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x36c>
 801cd86:	9b06      	ldr	r3, [sp, #24]
 801cd88:	981f      	ldr	r0, [sp, #124]	@ 0x7c
 801cd8a:	9d1d      	ldr	r5, [sp, #116]	@ 0x74
 801cd8c:	3b01      	subs	r3, #1
 801cd8e:	fb00 5003 	mla	r0, r0, r3, r5
 801cd92:	1400      	asrs	r0, r0, #16
 801cd94:	f53f aeac 	bmi.w	801caf0 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x84>
 801cd98:	3901      	subs	r1, #1
 801cd9a:	4288      	cmp	r0, r1
 801cd9c:	f6bf aea8 	bge.w	801caf0 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x84>
 801cda0:	9920      	ldr	r1, [sp, #128]	@ 0x80
 801cda2:	981e      	ldr	r0, [sp, #120]	@ 0x78
 801cda4:	fb01 0303 	mla	r3, r1, r3, r0
 801cda8:	141b      	asrs	r3, r3, #16
 801cdaa:	f53f aea1 	bmi.w	801caf0 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x84>
 801cdae:	3a01      	subs	r2, #1
 801cdb0:	4293      	cmp	r3, r2
 801cdb2:	f6bf ae9d 	bge.w	801caf0 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x84>
 801cdb6:	9b06      	ldr	r3, [sp, #24]
 801cdb8:	f8dd e01c 	ldr.w	lr, [sp, #28]
 801cdbc:	930f      	str	r3, [sp, #60]	@ 0x3c
 801cdbe:	f64f 061f 	movw	r6, #63519	@ 0xf81f
 801cdc2:	9b0f      	ldr	r3, [sp, #60]	@ 0x3c
 801cdc4:	2b00      	cmp	r3, #0
 801cdc6:	f300 80b6 	bgt.w	801cf36 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x4ca>
 801cdca:	9b06      	ldr	r3, [sp, #24]
 801cdcc:	ea23 74e3 	bic.w	r4, r3, r3, asr #31
 801cdd0:	9b07      	ldr	r3, [sp, #28]
 801cdd2:	eb03 0344 	add.w	r3, r3, r4, lsl #1
 801cdd6:	9307      	str	r3, [sp, #28]
 801cdd8:	9b0e      	ldr	r3, [sp, #56]	@ 0x38
 801cdda:	2b00      	cmp	r3, #0
 801cddc:	f340 8218 	ble.w	801d210 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x7a4>
 801cde0:	ee30 0a04 	vadd.f32	s0, s0, s8
 801cde4:	eeb7 7a00 	vmov.f32	s14, #112	@ 0x3f800000  1.0
 801cde8:	eec7 7a00 	vdiv.f32	s15, s14, s0
 801cdec:	9b1c      	ldr	r3, [sp, #112]	@ 0x70
 801cdee:	ee70 0aa4 	vadd.f32	s1, s1, s9
 801cdf2:	ee31 1a05 	vadd.f32	s2, s2, s10
 801cdf6:	ee20 7aa7 	vmul.f32	s14, s1, s15
 801cdfa:	eef0 6a62 	vmov.f32	s13, s5
 801cdfe:	ee61 7a27 	vmul.f32	s15, s2, s15
 801ce02:	eefe 6ac8 	vcvt.s32.f32	s13, s13, #16
 801ce06:	ee77 2a62 	vsub.f32	s5, s14, s5
 801ce0a:	edcd 6a1d 	vstr	s13, [sp, #116]	@ 0x74
 801ce0e:	eefe 2ac8 	vcvt.s32.f32	s5, s5, #16
 801ce12:	eef0 6a43 	vmov.f32	s13, s6
 801ce16:	ee37 3ac3 	vsub.f32	s6, s15, s6
 801ce1a:	ee12 2a90 	vmov	r2, s5
 801ce1e:	eebe 3ac8 	vcvt.s32.f32	s6, s6, #16
 801ce22:	fb92 f3f3 	sdiv	r3, r2, r3
 801ce26:	ee13 2a10 	vmov	r2, s6
 801ce2a:	931f      	str	r3, [sp, #124]	@ 0x7c
 801ce2c:	9b1c      	ldr	r3, [sp, #112]	@ 0x70
 801ce2e:	fb92 f3f3 	sdiv	r3, r2, r3
 801ce32:	9320      	str	r3, [sp, #128]	@ 0x80
 801ce34:	9b0e      	ldr	r3, [sp, #56]	@ 0x38
 801ce36:	9a10      	ldr	r2, [sp, #64]	@ 0x40
 801ce38:	3b01      	subs	r3, #1
 801ce3a:	eefe 6ac8 	vcvt.s32.f32	s13, s13, #16
 801ce3e:	930e      	str	r3, [sp, #56]	@ 0x38
 801ce40:	9b1c      	ldr	r3, [sp, #112]	@ 0x70
 801ce42:	edcd 6a1e 	vstr	s13, [sp, #120]	@ 0x78
 801ce46:	bf08      	it	eq
 801ce48:	4613      	moveq	r3, r2
 801ce4a:	9306      	str	r3, [sp, #24]
 801ce4c:	eeb0 3a67 	vmov.f32	s6, s15
 801ce50:	eef0 2a47 	vmov.f32	s5, s14
 801ce54:	e621      	b.n	801ca9a <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2e>
 801ce56:	fb08 f505 	mul.w	r5, r8, r5
 801ce5a:	fb09 5303 	mla	r3, r9, r3, r5
 801ce5e:	e6a1      	b.n	801cba4 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x138>
 801ce60:	4681      	mov	r9, r0
 801ce62:	e6c8      	b.n	801cbf6 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x18a>
 801ce64:	f1c1 0210 	rsb	r2, r1, #16
 801ce68:	4341      	muls	r1, r0
 801ce6a:	fb09 1902 	mla	r9, r9, r2, r1
 801ce6e:	ea4f 0949 	mov.w	r9, r9, lsl #1
 801ce72:	ea4f 5259 	mov.w	r2, r9, lsr #21
 801ce76:	ea4f 1959 	mov.w	r9, r9, lsr #5
 801ce7a:	f402 62fc 	and.w	r2, r2, #2016	@ 0x7e0
 801ce7e:	f429 69fc 	bic.w	r9, r9, #2016	@ 0x7e0
 801ce82:	ea42 0909 	orr.w	r9, r2, r9
 801ce86:	fa1f f289 	uxth.w	r2, r9
 801ce8a:	e75b      	b.n	801cd44 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2d8>
 801ce8c:	f8b7 c000 	ldrh.w	ip, [r7]
 801ce90:	43db      	mvns	r3, r3
 801ce92:	ea4f 202c 	mov.w	r0, ip, asr #8
 801ce96:	fa5f fe83 	uxtb.w	lr, r3
 801ce9a:	f000 00f8 	and.w	r0, r0, #248	@ 0xf8
 801ce9e:	fb00 f00e 	mul.w	r0, r0, lr
 801cea2:	1c41      	adds	r1, r0, #1
 801cea4:	eb01 2010 	add.w	r0, r1, r0, lsr #8
 801cea8:	1211      	asrs	r1, r2, #8
 801ceaa:	ea4f 05ec 	mov.w	r5, ip, asr #3
 801ceae:	f021 0107 	bic.w	r1, r1, #7
 801ceb2:	eb01 2110 	add.w	r1, r1, r0, lsr #8
 801ceb6:	f005 05fc 	and.w	r5, r5, #252	@ 0xfc
 801ceba:	48d7      	ldr	r0, [pc, #860]	@ (801d218 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x7ac>)
 801cebc:	fb05 f50e 	mul.w	r5, r5, lr
 801cec0:	b2c9      	uxtb	r1, r1
 801cec2:	ea00 2001 	and.w	r0, r0, r1, lsl #8
 801cec6:	1c69      	adds	r1, r5, #1
 801cec8:	eb01 2515 	add.w	r5, r1, r5, lsr #8
 801cecc:	10d1      	asrs	r1, r2, #3
 801cece:	f021 0103 	bic.w	r1, r1, #3
 801ced2:	ea4f 03cc 	mov.w	r3, ip, lsl #3
 801ced6:	eb01 2115 	add.w	r1, r1, r5, lsr #8
 801ceda:	b2db      	uxtb	r3, r3
 801cedc:	00c9      	lsls	r1, r1, #3
 801cede:	fb03 f30e 	mul.w	r3, r3, lr
 801cee2:	f401 61fc 	and.w	r1, r1, #2016	@ 0x7e0
 801cee6:	4301      	orrs	r1, r0
 801cee8:	1c58      	adds	r0, r3, #1
 801ceea:	eb00 2313 	add.w	r3, r0, r3, lsr #8
 801ceee:	00d2      	lsls	r2, r2, #3
 801cef0:	eb02 2213 	add.w	r2, r2, r3, lsr #8
 801cef4:	f3c2 02c4 	ubfx	r2, r2, #3, #5
 801cef8:	430a      	orrs	r2, r1
 801cefa:	e726      	b.n	801cd4a <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2de>
 801cefc:	f115 0e01 	adds.w	lr, r5, #1
 801cf00:	f53f af24 	bmi.w	801cd4c <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2e0>
 801cf04:	4572      	cmp	r2, lr
 801cf06:	f6ff af21 	blt.w	801cd4c <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2e0>
 801cf0a:	f110 0e01 	adds.w	lr, r0, #1
 801cf0e:	f53f af1d 	bmi.w	801cd4c <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2e0>
 801cf12:	4573      	cmp	r3, lr
 801cf14:	f6ff af1a 	blt.w	801cd4c <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2e0>
 801cf18:	b21b      	sxth	r3, r3
 801cf1a:	b212      	sxth	r2, r2
 801cf1c:	e9cd 1c04 	strd	r1, ip, [sp, #16]
 801cf20:	e9cd 5002 	strd	r5, r0, [sp, #8]
 801cf24:	9301      	str	r3, [sp, #4]
 801cf26:	9200      	str	r2, [sp, #0]
 801cf28:	4639      	mov	r1, r7
 801cf2a:	e9dd 3208 	ldrd	r3, r2, [sp, #32]
 801cf2e:	9811      	ldr	r0, [sp, #68]	@ 0x44
 801cf30:	f7ff fc24 	bl	801c77c <_ZNK8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh>
 801cf34:	e70a      	b.n	801cd4c <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2e0>
 801cf36:	9b1d      	ldr	r3, [sp, #116]	@ 0x74
 801cf38:	f3c3 3203 	ubfx	r2, r3, #12, #4
 801cf3c:	9b1e      	ldr	r3, [sp, #120]	@ 0x78
 801cf3e:	f3c3 3503 	ubfx	r5, r3, #12, #4
 801cf42:	9b24      	ldr	r3, [sp, #144]	@ 0x90
 801cf44:	f9b3 1008 	ldrsh.w	r1, [r3, #8]
 801cf48:	9b1e      	ldr	r3, [sp, #120]	@ 0x78
 801cf4a:	141f      	asrs	r7, r3, #16
 801cf4c:	9b1d      	ldr	r3, [sp, #116]	@ 0x74
 801cf4e:	141b      	asrs	r3, r3, #16
 801cf50:	fb01 3707 	mla	r7, r1, r7, r3
 801cf54:	9b09      	ldr	r3, [sp, #36]	@ 0x24
 801cf56:	fa1f fc82 	uxth.w	ip, r2
 801cf5a:	eb03 0a07 	add.w	sl, r3, r7
 801cf5e:	ea4f 100c 	mov.w	r0, ip, lsl #4
 801cf62:	f813 9007 	ldrb.w	r9, [r3, r7]
 801cf66:	f89a 8001 	ldrb.w	r8, [sl, #1]
 801cf6a:	f5c0 7380 	rsb	r3, r0, #256	@ 0x100
 801cf6e:	b29b      	uxth	r3, r3
 801cf70:	2d00      	cmp	r5, #0
 801cf72:	f000 80fe 	beq.w	801d172 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x706>
 801cf76:	f81a 4001 	ldrb.w	r4, [sl, r1]
 801cf7a:	940c      	str	r4, [sp, #48]	@ 0x30
 801cf7c:	eb0a 0b01 	add.w	fp, sl, r1
 801cf80:	fa1f fa85 	uxth.w	sl, r5
 801cf84:	fb0a fc0c 	mul.w	ip, sl, ip
 801cf88:	ebcc 1a0a 	rsb	sl, ip, sl, lsl #4
 801cf8c:	fa1f fa8a 	uxth.w	sl, sl
 801cf90:	eba0 000c 	sub.w	r0, r0, ip
 801cf94:	eba3 030a 	sub.w	r3, r3, sl
 801cf98:	b280      	uxth	r0, r0
 801cf9a:	fb08 f000 	mul.w	r0, r8, r0
 801cf9e:	b29b      	uxth	r3, r3
 801cfa0:	fb09 0303 	mla	r3, r9, r3, r0
 801cfa4:	980c      	ldr	r0, [sp, #48]	@ 0x30
 801cfa6:	f89b 4001 	ldrb.w	r4, [fp, #1]
 801cfaa:	940d      	str	r4, [sp, #52]	@ 0x34
 801cfac:	fb0a 3300 	mla	r3, sl, r0, r3
 801cfb0:	fb0c 3304 	mla	r3, ip, r4, r3
 801cfb4:	f3c3 2307 	ubfx	r3, r3, #8, #8
 801cfb8:	2b00      	cmp	r3, #0
 801cfba:	f000 80cc 	beq.w	801d156 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x6ea>
 801cfbe:	9808      	ldr	r0, [sp, #32]
 801cfc0:	9c08      	ldr	r4, [sp, #32]
 801cfc2:	f1b9 0fff 	cmp.w	r9, #255	@ 0xff
 801cfc6:	eb00 0047 	add.w	r0, r0, r7, lsl #1
 801cfca:	f834 7017 	ldrh.w	r7, [r4, r7, lsl #1]
 801cfce:	f000 80d5 	beq.w	801d17c <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x710>
 801cfd2:	f427 6cfc 	bic.w	ip, r7, #2016	@ 0x7e0
 801cfd6:	ea4f 0ae9 	mov.w	sl, r9, asr #3
 801cfda:	f407 67fc 	and.w	r7, r7, #2016	@ 0x7e0
 801cfde:	fb09 f707 	mul.w	r7, r9, r7
 801cfe2:	fb0a fc0c 	mul.w	ip, sl, ip
 801cfe6:	ea06 195c 	and.w	r9, r6, ip, lsr #5
 801cfea:	f107 0b20 	add.w	fp, r7, #32
 801cfee:	f60c 0c01 	addw	ip, ip, #2049	@ 0x801
 801cff2:	44cc      	add	ip, r9
 801cff4:	eb0b 2917 	add.w	r9, fp, r7, lsr #8
 801cff8:	ea4f 2919 	mov.w	r9, r9, lsr #8
 801cffc:	ea06 1c5c 	and.w	ip, r6, ip, lsr #5
 801d000:	f409 69fc 	and.w	r9, r9, #2016	@ 0x7e0
 801d004:	ea4c 0909 	orr.w	r9, ip, r9
 801d008:	f1b8 0fff 	cmp.w	r8, #255	@ 0xff
 801d00c:	8847      	ldrh	r7, [r0, #2]
 801d00e:	d019      	beq.n	801d044 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x5d8>
 801d010:	f427 6cfc 	bic.w	ip, r7, #2016	@ 0x7e0
 801d014:	ea4f 0ae8 	mov.w	sl, r8, asr #3
 801d018:	f407 67fc 	and.w	r7, r7, #2016	@ 0x7e0
 801d01c:	fb08 f807 	mul.w	r8, r8, r7
 801d020:	fb0a fc0c 	mul.w	ip, sl, ip
 801d024:	ea06 175c 	and.w	r7, r6, ip, lsr #5
 801d028:	f108 0b20 	add.w	fp, r8, #32
 801d02c:	f60c 0c01 	addw	ip, ip, #2049	@ 0x801
 801d030:	44bc      	add	ip, r7
 801d032:	eb0b 2718 	add.w	r7, fp, r8, lsr #8
 801d036:	0a3f      	lsrs	r7, r7, #8
 801d038:	ea06 1c5c 	and.w	ip, r6, ip, lsr #5
 801d03c:	f407 67fc 	and.w	r7, r7, #2016	@ 0x7e0
 801d040:	ea4c 0707 	orr.w	r7, ip, r7
 801d044:	ea4f 4c09 	mov.w	ip, r9, lsl #16
 801d048:	ea4f 4a07 	mov.w	sl, r7, lsl #16
 801d04c:	f00c 6cfc 	and.w	ip, ip, #132120576	@ 0x7e00000
 801d050:	f429 69fc 	bic.w	r9, r9, #2016	@ 0x7e0
 801d054:	f00a 6afc 	and.w	sl, sl, #132120576	@ 0x7e00000
 801d058:	f427 67fc 	bic.w	r7, r7, #2016	@ 0x7e0
 801d05c:	ea4c 0909 	orr.w	r9, ip, r9
 801d060:	ea4a 0707 	orr.w	r7, sl, r7
 801d064:	2d00      	cmp	r5, #0
 801d066:	f000 808b 	beq.w	801d180 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x714>
 801d06a:	f101 4100 	add.w	r1, r1, #2147483648	@ 0x80000000
 801d06e:	3901      	subs	r1, #1
 801d070:	0049      	lsls	r1, r1, #1
 801d072:	3102      	adds	r1, #2
 801d074:	eb00 0c01 	add.w	ip, r0, r1
 801d078:	5a41      	ldrh	r1, [r0, r1]
 801d07a:	980c      	ldr	r0, [sp, #48]	@ 0x30
 801d07c:	28ff      	cmp	r0, #255	@ 0xff
 801d07e:	d019      	beq.n	801d0b4 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x648>
 801d080:	9c0c      	ldr	r4, [sp, #48]	@ 0x30
 801d082:	f421 60fc 	bic.w	r0, r1, #2016	@ 0x7e0
 801d086:	f401 61fc 	and.w	r1, r1, #2016	@ 0x7e0
 801d08a:	fb04 fa01 	mul.w	sl, r4, r1
 801d08e:	ea4f 08e4 	mov.w	r8, r4, asr #3
 801d092:	fb08 f800 	mul.w	r8, r8, r0
 801d096:	f10a 0020 	add.w	r0, sl, #32
 801d09a:	ea06 1158 	and.w	r1, r6, r8, lsr #5
 801d09e:	eb00 201a 	add.w	r0, r0, sl, lsr #8
 801d0a2:	f608 0801 	addw	r8, r8, #2049	@ 0x801
 801d0a6:	4441      	add	r1, r8
 801d0a8:	0a00      	lsrs	r0, r0, #8
 801d0aa:	ea06 1151 	and.w	r1, r6, r1, lsr #5
 801d0ae:	f400 60fc 	and.w	r0, r0, #2016	@ 0x7e0
 801d0b2:	4301      	orrs	r1, r0
 801d0b4:	9c0d      	ldr	r4, [sp, #52]	@ 0x34
 801d0b6:	f8bc 0002 	ldrh.w	r0, [ip, #2]
 801d0ba:	2cff      	cmp	r4, #255	@ 0xff
 801d0bc:	d01a      	beq.n	801d0f4 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x688>
 801d0be:	f420 6cfc 	bic.w	ip, r0, #2016	@ 0x7e0
 801d0c2:	f400 60fc 	and.w	r0, r0, #2016	@ 0x7e0
 801d0c6:	fb04 fa00 	mul.w	sl, r4, r0
 801d0ca:	ea4f 08e4 	mov.w	r8, r4, asr #3
 801d0ce:	fb08 f80c 	mul.w	r8, r8, ip
 801d0d2:	f10a 0c20 	add.w	ip, sl, #32
 801d0d6:	ea06 1058 	and.w	r0, r6, r8, lsr #5
 801d0da:	eb0c 2c1a 	add.w	ip, ip, sl, lsr #8
 801d0de:	f608 0801 	addw	r8, r8, #2049	@ 0x801
 801d0e2:	4440      	add	r0, r8
 801d0e4:	ea4f 2c1c 	mov.w	ip, ip, lsr #8
 801d0e8:	ea06 1050 	and.w	r0, r6, r0, lsr #5
 801d0ec:	f40c 6cfc 	and.w	ip, ip, #2016	@ 0x7e0
 801d0f0:	ea40 000c 	orr.w	r0, r0, ip
 801d0f4:	fb15 fc02 	smulbb	ip, r5, r2
 801d0f8:	ea4f 0cec 	mov.w	ip, ip, asr #3
 801d0fc:	f1c5 0810 	rsb	r8, r5, #16
 801d100:	eba8 0802 	sub.w	r8, r8, r2
 801d104:	ea4f 4a01 	mov.w	sl, r1, lsl #16
 801d108:	ebcc 0242 	rsb	r2, ip, r2, lsl #1
 801d10c:	437a      	muls	r2, r7
 801d10e:	ea4f 4b00 	mov.w	fp, r0, lsl #16
 801d112:	eb0c 0848 	add.w	r8, ip, r8, lsl #1
 801d116:	f00a 6afc 	and.w	sl, sl, #132120576	@ 0x7e00000
 801d11a:	f421 61fc 	bic.w	r1, r1, #2016	@ 0x7e0
 801d11e:	fb09 2208 	mla	r2, r9, r8, r2
 801d122:	ea4a 0101 	orr.w	r1, sl, r1
 801d126:	ebcc 0545 	rsb	r5, ip, r5, lsl #1
 801d12a:	f00b 6bfc 	and.w	fp, fp, #132120576	@ 0x7e00000
 801d12e:	f420 60fc 	bic.w	r0, r0, #2016	@ 0x7e0
 801d132:	fb05 2201 	mla	r2, r5, r1, r2
 801d136:	ea4b 0000 	orr.w	r0, fp, r0
 801d13a:	fb0c 2200 	mla	r2, ip, r0, r2
 801d13e:	0d57      	lsrs	r7, r2, #21
 801d140:	0952      	lsrs	r2, r2, #5
 801d142:	f407 67fc 	and.w	r7, r7, #2016	@ 0x7e0
 801d146:	f422 62fc 	bic.w	r2, r2, #2016	@ 0x7e0
 801d14a:	433a      	orrs	r2, r7
 801d14c:	2bff      	cmp	r3, #255	@ 0xff
 801d14e:	b292      	uxth	r2, r2
 801d150:	d127      	bne.n	801d1a2 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x736>
 801d152:	f8ae 2000 	strh.w	r2, [lr]
 801d156:	9b1d      	ldr	r3, [sp, #116]	@ 0x74
 801d158:	9a1f      	ldr	r2, [sp, #124]	@ 0x7c
 801d15a:	4413      	add	r3, r2
 801d15c:	931d      	str	r3, [sp, #116]	@ 0x74
 801d15e:	9a1e      	ldr	r2, [sp, #120]	@ 0x78
 801d160:	9b20      	ldr	r3, [sp, #128]	@ 0x80
 801d162:	441a      	add	r2, r3
 801d164:	9b0f      	ldr	r3, [sp, #60]	@ 0x3c
 801d166:	921e      	str	r2, [sp, #120]	@ 0x78
 801d168:	3b01      	subs	r3, #1
 801d16a:	f10e 0e02 	add.w	lr, lr, #2
 801d16e:	930f      	str	r3, [sp, #60]	@ 0x3c
 801d170:	e627      	b.n	801cdc2 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x356>
 801d172:	fb08 f000 	mul.w	r0, r8, r0
 801d176:	fb09 0303 	mla	r3, r9, r3, r0
 801d17a:	e71b      	b.n	801cfb4 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x548>
 801d17c:	46b9      	mov	r9, r7
 801d17e:	e743      	b.n	801d008 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x59c>
 801d180:	f1c2 0110 	rsb	r1, r2, #16
 801d184:	437a      	muls	r2, r7
 801d186:	fb09 2901 	mla	r9, r9, r1, r2
 801d18a:	ea4f 0949 	mov.w	r9, r9, lsl #1
 801d18e:	ea4f 5059 	mov.w	r0, r9, lsr #21
 801d192:	ea4f 1259 	mov.w	r2, r9, lsr #5
 801d196:	f400 60fc 	and.w	r0, r0, #2016	@ 0x7e0
 801d19a:	f422 62fc 	bic.w	r2, r2, #2016	@ 0x7e0
 801d19e:	4302      	orrs	r2, r0
 801d1a0:	e7d4      	b.n	801d14c <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x6e0>
 801d1a2:	f8be 7000 	ldrh.w	r7, [lr]
 801d1a6:	4c1c      	ldr	r4, [pc, #112]	@ (801d218 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x7ac>)
 801d1a8:	43db      	mvns	r3, r3
 801d1aa:	1238      	asrs	r0, r7, #8
 801d1ac:	fa5f fc83 	uxtb.w	ip, r3
 801d1b0:	f000 00f8 	and.w	r0, r0, #248	@ 0xf8
 801d1b4:	10fd      	asrs	r5, r7, #3
 801d1b6:	fb00 f00c 	mul.w	r0, r0, ip
 801d1ba:	f005 05fc 	and.w	r5, r5, #252	@ 0xfc
 801d1be:	fb05 f10c 	mul.w	r1, r5, ip
 801d1c2:	1c45      	adds	r5, r0, #1
 801d1c4:	eb05 2010 	add.w	r0, r5, r0, lsr #8
 801d1c8:	1215      	asrs	r5, r2, #8
 801d1ca:	f025 0507 	bic.w	r5, r5, #7
 801d1ce:	eb05 2010 	add.w	r0, r5, r0, lsr #8
 801d1d2:	1c4d      	adds	r5, r1, #1
 801d1d4:	eb05 2511 	add.w	r5, r5, r1, lsr #8
 801d1d8:	10d1      	asrs	r1, r2, #3
 801d1da:	f021 0103 	bic.w	r1, r1, #3
 801d1de:	00fb      	lsls	r3, r7, #3
 801d1e0:	eb01 2115 	add.w	r1, r1, r5, lsr #8
 801d1e4:	b2db      	uxtb	r3, r3
 801d1e6:	b2c0      	uxtb	r0, r0
 801d1e8:	00c9      	lsls	r1, r1, #3
 801d1ea:	fb03 f30c 	mul.w	r3, r3, ip
 801d1ee:	f401 61fc 	and.w	r1, r1, #2016	@ 0x7e0
 801d1f2:	ea04 2000 	and.w	r0, r4, r0, lsl #8
 801d1f6:	4308      	orrs	r0, r1
 801d1f8:	1c59      	adds	r1, r3, #1
 801d1fa:	eb01 2313 	add.w	r3, r1, r3, lsr #8
 801d1fe:	00d2      	lsls	r2, r2, #3
 801d200:	eb02 2313 	add.w	r3, r2, r3, lsr #8
 801d204:	f3c3 03c4 	ubfx	r3, r3, #3, #5
 801d208:	4318      	orrs	r0, r3
 801d20a:	f8ae 0000 	strh.w	r0, [lr]
 801d20e:	e7a2      	b.n	801d156 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x6ea>
 801d210:	b013      	add	sp, #76	@ 0x4c
 801d212:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 801d216:	bf00      	nop
 801d218:	fffff800 	.word	0xfffff800

0801d21c <_ZNK8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtssiihhh>:
 801d21c:	e92d 47f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
 801d220:	e9dd 4509 	ldrd	r4, r5, [sp, #36]	@ 0x24
 801d224:	fb05 4c03 	mla	ip, r5, r3, r4
 801d228:	2d00      	cmp	r5, #0
 801d22a:	f9bd a020 	ldrsh.w	sl, [sp, #32]
 801d22e:	f89d 902c 	ldrb.w	r9, [sp, #44]	@ 0x2c
 801d232:	f89d 7030 	ldrb.w	r7, [sp, #48]	@ 0x30
 801d236:	f89d 6034 	ldrb.w	r6, [sp, #52]	@ 0x34
 801d23a:	8808      	ldrh	r0, [r1, #0]
 801d23c:	eb02 0e4c 	add.w	lr, r2, ip, lsl #1
 801d240:	f2c0 80a7 	blt.w	801d392 <_ZNK8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtssiihhh+0x176>
 801d244:	45aa      	cmp	sl, r5
 801d246:	f340 80a4 	ble.w	801d392 <_ZNK8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtssiihhh+0x176>
 801d24a:	2c00      	cmp	r4, #0
 801d24c:	f2c0 809f 	blt.w	801d38e <_ZNK8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtssiihhh+0x172>
 801d250:	42a3      	cmp	r3, r4
 801d252:	f340 809c 	ble.w	801d38e <_ZNK8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtssiihhh+0x172>
 801d256:	f832 801c 	ldrh.w	r8, [r2, ip, lsl #1]
 801d25a:	1c62      	adds	r2, r4, #1
 801d25c:	f100 809c 	bmi.w	801d398 <_ZNK8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtssiihhh+0x17c>
 801d260:	4293      	cmp	r3, r2
 801d262:	f340 8099 	ble.w	801d398 <_ZNK8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtssiihhh+0x17c>
 801d266:	f1b9 0f00 	cmp.w	r9, #0
 801d26a:	f000 8095 	beq.w	801d398 <_ZNK8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtssiihhh+0x17c>
 801d26e:	f8be c002 	ldrh.w	ip, [lr, #2]
 801d272:	3501      	adds	r5, #1
 801d274:	f100 8094 	bmi.w	801d3a0 <_ZNK8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtssiihhh+0x184>
 801d278:	45aa      	cmp	sl, r5
 801d27a:	f340 8091 	ble.w	801d3a0 <_ZNK8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtssiihhh+0x184>
 801d27e:	2f00      	cmp	r7, #0
 801d280:	f000 808e 	beq.w	801d3a0 <_ZNK8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtssiihhh+0x184>
 801d284:	2c00      	cmp	r4, #0
 801d286:	f2c0 8089 	blt.w	801d39c <_ZNK8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtssiihhh+0x180>
 801d28a:	42a3      	cmp	r3, r4
 801d28c:	f340 8086 	ble.w	801d39c <_ZNK8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtssiihhh+0x180>
 801d290:	f83e 5013 	ldrh.w	r5, [lr, r3, lsl #1]
 801d294:	3401      	adds	r4, #1
 801d296:	f100 8086 	bmi.w	801d3a6 <_ZNK8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtssiihhh+0x18a>
 801d29a:	42a3      	cmp	r3, r4
 801d29c:	f340 8083 	ble.w	801d3a6 <_ZNK8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtssiihhh+0x18a>
 801d2a0:	f1b9 0f00 	cmp.w	r9, #0
 801d2a4:	d07f      	beq.n	801d3a6 <_ZNK8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtssiihhh+0x18a>
 801d2a6:	3301      	adds	r3, #1
 801d2a8:	f83e 3013 	ldrh.w	r3, [lr, r3, lsl #1]
 801d2ac:	ea4f 4408 	mov.w	r4, r8, lsl #16
 801d2b0:	f004 64fc 	and.w	r4, r4, #132120576	@ 0x7e00000
 801d2b4:	f428 68fc 	bic.w	r8, r8, #2016	@ 0x7e0
 801d2b8:	fb19 fe07 	smulbb	lr, r9, r7
 801d2bc:	ea44 0808 	orr.w	r8, r4, r8
 801d2c0:	ea4f 440c 	mov.w	r4, ip, lsl #16
 801d2c4:	f3ce 0ec7 	ubfx	lr, lr, #3, #8
 801d2c8:	f1c7 0210 	rsb	r2, r7, #16
 801d2cc:	f004 64fc 	and.w	r4, r4, #132120576	@ 0x7e00000
 801d2d0:	f42c 6cfc 	bic.w	ip, ip, #2016	@ 0x7e0
 801d2d4:	ea44 0c0c 	orr.w	ip, r4, ip
 801d2d8:	eba2 0209 	sub.w	r2, r2, r9
 801d2dc:	ebce 0449 	rsb	r4, lr, r9, lsl #1
 801d2e0:	eb0e 0242 	add.w	r2, lr, r2, lsl #1
 801d2e4:	fb04 f40c 	mul.w	r4, r4, ip
 801d2e8:	fb02 4808 	mla	r8, r2, r8, r4
 801d2ec:	041a      	lsls	r2, r3, #16
 801d2ee:	f002 62fc 	and.w	r2, r2, #132120576	@ 0x7e00000
 801d2f2:	f423 63fc 	bic.w	r3, r3, #2016	@ 0x7e0
 801d2f6:	4313      	orrs	r3, r2
 801d2f8:	042a      	lsls	r2, r5, #16
 801d2fa:	f002 62fc 	and.w	r2, r2, #132120576	@ 0x7e00000
 801d2fe:	f425 65fc 	bic.w	r5, r5, #2016	@ 0x7e0
 801d302:	fb0e 8303 	mla	r3, lr, r3, r8
 801d306:	432a      	orrs	r2, r5
 801d308:	ebce 0747 	rsb	r7, lr, r7, lsl #1
 801d30c:	fb07 3202 	mla	r2, r7, r2, r3
 801d310:	0d53      	lsrs	r3, r2, #21
 801d312:	0952      	lsrs	r2, r2, #5
 801d314:	f403 63fc 	and.w	r3, r3, #2016	@ 0x7e0
 801d318:	f422 62fc 	bic.w	r2, r2, #2016	@ 0x7e0
 801d31c:	431a      	orrs	r2, r3
 801d31e:	b293      	uxth	r3, r2
 801d320:	b2b4      	uxth	r4, r6
 801d322:	1202      	asrs	r2, r0, #8
 801d324:	43f6      	mvns	r6, r6
 801d326:	b2f6      	uxtb	r6, r6
 801d328:	121d      	asrs	r5, r3, #8
 801d32a:	f002 02f8 	and.w	r2, r2, #248	@ 0xf8
 801d32e:	fb12 f206 	smulbb	r2, r2, r6
 801d332:	10c7      	asrs	r7, r0, #3
 801d334:	f005 05f8 	and.w	r5, r5, #248	@ 0xf8
 801d338:	00c0      	lsls	r0, r0, #3
 801d33a:	fb05 2504 	mla	r5, r5, r4, r2
 801d33e:	b2c0      	uxtb	r0, r0
 801d340:	10da      	asrs	r2, r3, #3
 801d342:	00db      	lsls	r3, r3, #3
 801d344:	b2db      	uxtb	r3, r3
 801d346:	f007 07fc 	and.w	r7, r7, #252	@ 0xfc
 801d34a:	fb10 f006 	smulbb	r0, r0, r6
 801d34e:	b2ad      	uxth	r5, r5
 801d350:	fb03 0004 	mla	r0, r3, r4, r0
 801d354:	f002 02fc 	and.w	r2, r2, #252	@ 0xfc
 801d358:	fb17 f706 	smulbb	r7, r7, r6
 801d35c:	b280      	uxth	r0, r0
 801d35e:	1c6b      	adds	r3, r5, #1
 801d360:	fb02 7204 	mla	r2, r2, r4, r7
 801d364:	b292      	uxth	r2, r2
 801d366:	eb03 2515 	add.w	r5, r3, r5, lsr #8
 801d36a:	1c43      	adds	r3, r0, #1
 801d36c:	eb03 2310 	add.w	r3, r3, r0, lsr #8
 801d370:	1c50      	adds	r0, r2, #1
 801d372:	eb00 2212 	add.w	r2, r0, r2, lsr #8
 801d376:	f405 4578 	and.w	r5, r5, #63488	@ 0xf800
 801d37a:	f3c3 23c4 	ubfx	r3, r3, #11, #5
 801d37e:	0952      	lsrs	r2, r2, #5
 801d380:	432b      	orrs	r3, r5
 801d382:	f402 62fc 	and.w	r2, r2, #2016	@ 0x7e0
 801d386:	4313      	orrs	r3, r2
 801d388:	800b      	strh	r3, [r1, #0]
 801d38a:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
 801d38e:	4680      	mov	r8, r0
 801d390:	e763      	b.n	801d25a <_ZNK8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtssiihhh+0x3e>
 801d392:	4684      	mov	ip, r0
 801d394:	4680      	mov	r8, r0
 801d396:	e76c      	b.n	801d272 <_ZNK8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtssiihhh+0x56>
 801d398:	4684      	mov	ip, r0
 801d39a:	e76a      	b.n	801d272 <_ZNK8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtssiihhh+0x56>
 801d39c:	4605      	mov	r5, r0
 801d39e:	e779      	b.n	801d294 <_ZNK8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtssiihhh+0x78>
 801d3a0:	4603      	mov	r3, r0
 801d3a2:	4605      	mov	r5, r0
 801d3a4:	e782      	b.n	801d2ac <_ZNK8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtssiihhh+0x90>
 801d3a6:	4603      	mov	r3, r0
 801d3a8:	e780      	b.n	801d2ac <_ZNK8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtssiihhh+0x90>

0801d3aa <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff>:
 801d3aa:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 801d3ae:	b093      	sub	sp, #76	@ 0x4c
 801d3b0:	461d      	mov	r5, r3
 801d3b2:	9210      	str	r2, [sp, #64]	@ 0x40
 801d3b4:	9b21      	ldr	r3, [sp, #132]	@ 0x84
 801d3b6:	f89d 2094 	ldrb.w	r2, [sp, #148]	@ 0x94
 801d3ba:	920b      	str	r2, [sp, #44]	@ 0x2c
 801d3bc:	e9dd 2722 	ldrd	r2, r7, [sp, #136]	@ 0x88
 801d3c0:	910a      	str	r1, [sp, #40]	@ 0x28
 801d3c2:	6859      	ldr	r1, [r3, #4]
 801d3c4:	681b      	ldr	r3, [r3, #0]
 801d3c6:	9011      	str	r0, [sp, #68]	@ 0x44
 801d3c8:	fb01 2707 	mla	r7, r1, r7, r2
 801d3cc:	eb03 0347 	add.w	r3, r3, r7, lsl #1
 801d3d0:	9307      	str	r3, [sp, #28]
 801d3d2:	9b24      	ldr	r3, [sp, #144]	@ 0x90
 801d3d4:	681b      	ldr	r3, [r3, #0]
 801d3d6:	9309      	str	r3, [sp, #36]	@ 0x24
 801d3d8:	9b0b      	ldr	r3, [sp, #44]	@ 0x2c
 801d3da:	e9dd 461d 	ldrd	r4, r6, [sp, #116]	@ 0x74
 801d3de:	43db      	mvns	r3, r3
 801d3e0:	b2db      	uxtb	r3, r3
 801d3e2:	9308      	str	r3, [sp, #32]
 801d3e4:	9b0a      	ldr	r3, [sp, #40]	@ 0x28
 801d3e6:	2b00      	cmp	r3, #0
 801d3e8:	dc03      	bgt.n	801d3f2 <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x48>
 801d3ea:	9b10      	ldr	r3, [sp, #64]	@ 0x40
 801d3ec:	2b00      	cmp	r3, #0
 801d3ee:	f340 8203 	ble.w	801d7f8 <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x44e>
 801d3f2:	9b24      	ldr	r3, [sp, #144]	@ 0x90
 801d3f4:	f9b3 1008 	ldrsh.w	r1, [r3, #8]
 801d3f8:	f9b3 200c 	ldrsh.w	r2, [r3, #12]
 801d3fc:	1e48      	subs	r0, r1, #1
 801d3fe:	f102 3cff 	add.w	ip, r2, #4294967295
 801d402:	2d00      	cmp	r5, #0
 801d404:	f340 80da 	ble.w	801d5bc <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x212>
 801d408:	ea5f 4e24 	movs.w	lr, r4, asr #16
 801d40c:	ea4f 4326 	mov.w	r3, r6, asr #16
 801d410:	d406      	bmi.n	801d420 <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x76>
 801d412:	4586      	cmp	lr, r0
 801d414:	da04      	bge.n	801d420 <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x76>
 801d416:	2b00      	cmp	r3, #0
 801d418:	db02      	blt.n	801d420 <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x76>
 801d41a:	4563      	cmp	r3, ip
 801d41c:	f2c0 80cf 	blt.w	801d5be <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x214>
 801d420:	f11e 0e01 	adds.w	lr, lr, #1
 801d424:	f100 80c1 	bmi.w	801d5aa <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x200>
 801d428:	4571      	cmp	r1, lr
 801d42a:	f2c0 80be 	blt.w	801d5aa <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x200>
 801d42e:	3301      	adds	r3, #1
 801d430:	f100 80bb 	bmi.w	801d5aa <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x200>
 801d434:	429a      	cmp	r2, r3
 801d436:	f2c0 80b8 	blt.w	801d5aa <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x200>
 801d43a:	f8dd 801c 	ldr.w	r8, [sp, #28]
 801d43e:	46a9      	mov	r9, r5
 801d440:	f1b9 0f00 	cmp.w	r9, #0
 801d444:	f340 80d8 	ble.w	801d5f8 <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x24e>
 801d448:	9b24      	ldr	r3, [sp, #144]	@ 0x90
 801d44a:	1421      	asrs	r1, r4, #16
 801d44c:	ea4f 4026 	mov.w	r0, r6, asr #16
 801d450:	f3c4 3203 	ubfx	r2, r4, #12, #4
 801d454:	f3c6 3c03 	ubfx	ip, r6, #12, #4
 801d458:	e9d3 e302 	ldrd	lr, r3, [r3, #8]
 801d45c:	f100 8111 	bmi.w	801d682 <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2d8>
 801d460:	f10e 3aff 	add.w	sl, lr, #4294967295
 801d464:	4551      	cmp	r1, sl
 801d466:	f280 810c 	bge.w	801d682 <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2d8>
 801d46a:	2800      	cmp	r0, #0
 801d46c:	f2c0 8109 	blt.w	801d682 <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2d8>
 801d470:	f103 3aff 	add.w	sl, r3, #4294967295
 801d474:	4550      	cmp	r0, sl
 801d476:	f280 8104 	bge.w	801d682 <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2d8>
 801d47a:	fa0f f38e 	sxth.w	r3, lr
 801d47e:	fb00 1103 	mla	r1, r0, r3, r1
 801d482:	9809      	ldr	r0, [sp, #36]	@ 0x24
 801d484:	eb00 0a41 	add.w	sl, r0, r1, lsl #1
 801d488:	f830 e011 	ldrh.w	lr, [r0, r1, lsl #1]
 801d48c:	f8ba 1002 	ldrh.w	r1, [sl, #2]
 801d490:	f1bc 0f00 	cmp.w	ip, #0
 801d494:	d007      	beq.n	801d4a6 <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xfc>
 801d496:	005b      	lsls	r3, r3, #1
 801d498:	eb0a 0003 	add.w	r0, sl, r3
 801d49c:	f83a 3003 	ldrh.w	r3, [sl, r3]
 801d4a0:	930c      	str	r3, [sp, #48]	@ 0x30
 801d4a2:	8843      	ldrh	r3, [r0, #2]
 801d4a4:	930d      	str	r3, [sp, #52]	@ 0x34
 801d4a6:	ea4f 400e 	mov.w	r0, lr, lsl #16
 801d4aa:	fb12 f30c 	smulbb	r3, r2, ip
 801d4ae:	f42e 6efc 	bic.w	lr, lr, #2016	@ 0x7e0
 801d4b2:	ea4f 4a01 	mov.w	sl, r1, lsl #16
 801d4b6:	f000 60fc 	and.w	r0, r0, #132120576	@ 0x7e00000
 801d4ba:	10db      	asrs	r3, r3, #3
 801d4bc:	ea40 000e 	orr.w	r0, r0, lr
 801d4c0:	f00a 6afc 	and.w	sl, sl, #132120576	@ 0x7e00000
 801d4c4:	f1cc 0e10 	rsb	lr, ip, #16
 801d4c8:	f421 61fc 	bic.w	r1, r1, #2016	@ 0x7e0
 801d4cc:	ebae 0e02 	sub.w	lr, lr, r2
 801d4d0:	ea4a 0101 	orr.w	r1, sl, r1
 801d4d4:	ebc3 0242 	rsb	r2, r3, r2, lsl #1
 801d4d8:	4351      	muls	r1, r2
 801d4da:	9a0d      	ldr	r2, [sp, #52]	@ 0x34
 801d4dc:	9f08      	ldr	r7, [sp, #32]
 801d4de:	eb03 0e4e 	add.w	lr, r3, lr, lsl #1
 801d4e2:	fb0e 1e00 	mla	lr, lr, r0, r1
 801d4e6:	0410      	lsls	r0, r2, #16
 801d4e8:	f000 60fc 	and.w	r0, r0, #132120576	@ 0x7e00000
 801d4ec:	f422 62fc 	bic.w	r2, r2, #2016	@ 0x7e0
 801d4f0:	4310      	orrs	r0, r2
 801d4f2:	9a0c      	ldr	r2, [sp, #48]	@ 0x30
 801d4f4:	990c      	ldr	r1, [sp, #48]	@ 0x30
 801d4f6:	0412      	lsls	r2, r2, #16
 801d4f8:	fb03 e000 	mla	r0, r3, r0, lr
 801d4fc:	f002 62fc 	and.w	r2, r2, #132120576	@ 0x7e00000
 801d500:	f421 6efc 	bic.w	lr, r1, #2016	@ 0x7e0
 801d504:	ea42 020e 	orr.w	r2, r2, lr
 801d508:	ebc3 034c 	rsb	r3, r3, ip, lsl #1
 801d50c:	fb03 0302 	mla	r3, r3, r2, r0
 801d510:	0d5a      	lsrs	r2, r3, #21
 801d512:	095b      	lsrs	r3, r3, #5
 801d514:	f8b8 0000 	ldrh.w	r0, [r8]
 801d518:	f402 62fc 	and.w	r2, r2, #2016	@ 0x7e0
 801d51c:	f423 63fc 	bic.w	r3, r3, #2016	@ 0x7e0
 801d520:	4313      	orrs	r3, r2
 801d522:	b29b      	uxth	r3, r3
 801d524:	1201      	asrs	r1, r0, #8
 801d526:	f8bd 202c 	ldrh.w	r2, [sp, #44]	@ 0x2c
 801d52a:	ea4f 2c23 	mov.w	ip, r3, asr #8
 801d52e:	f001 01f8 	and.w	r1, r1, #248	@ 0xf8
 801d532:	fb11 f107 	smulbb	r1, r1, r7
 801d536:	ea4f 0ee0 	mov.w	lr, r0, asr #3
 801d53a:	f00c 0cf8 	and.w	ip, ip, #248	@ 0xf8
 801d53e:	00c0      	lsls	r0, r0, #3
 801d540:	fb0c 1c02 	mla	ip, ip, r2, r1
 801d544:	b2c0      	uxtb	r0, r0
 801d546:	10d9      	asrs	r1, r3, #3
 801d548:	00db      	lsls	r3, r3, #3
 801d54a:	f00e 0efc 	and.w	lr, lr, #252	@ 0xfc
 801d54e:	b2db      	uxtb	r3, r3
 801d550:	fb10 f007 	smulbb	r0, r0, r7
 801d554:	fa1f fc8c 	uxth.w	ip, ip
 801d558:	fb03 0302 	mla	r3, r3, r2, r0
 801d55c:	f001 01fc 	and.w	r1, r1, #252	@ 0xfc
 801d560:	fb1e fe07 	smulbb	lr, lr, r7
 801d564:	fb01 e102 	mla	r1, r1, r2, lr
 801d568:	b29a      	uxth	r2, r3
 801d56a:	f10c 0301 	add.w	r3, ip, #1
 801d56e:	b289      	uxth	r1, r1
 801d570:	eb03 2c1c 	add.w	ip, r3, ip, lsr #8
 801d574:	1c53      	adds	r3, r2, #1
 801d576:	eb03 2312 	add.w	r3, r3, r2, lsr #8
 801d57a:	1c4a      	adds	r2, r1, #1
 801d57c:	eb02 2111 	add.w	r1, r2, r1, lsr #8
 801d580:	f40c 4c78 	and.w	ip, ip, #63488	@ 0xf800
 801d584:	f3c3 23c4 	ubfx	r3, r3, #11, #5
 801d588:	0949      	lsrs	r1, r1, #5
 801d58a:	ea43 030c 	orr.w	r3, r3, ip
 801d58e:	f401 61fc 	and.w	r1, r1, #2016	@ 0x7e0
 801d592:	430b      	orrs	r3, r1
 801d594:	f8a8 3000 	strh.w	r3, [r8]
 801d598:	9b1f      	ldr	r3, [sp, #124]	@ 0x7c
 801d59a:	441c      	add	r4, r3
 801d59c:	9b20      	ldr	r3, [sp, #128]	@ 0x80
 801d59e:	f108 0802 	add.w	r8, r8, #2
 801d5a2:	441e      	add	r6, r3
 801d5a4:	f109 39ff 	add.w	r9, r9, #4294967295
 801d5a8:	e74a      	b.n	801d440 <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x96>
 801d5aa:	9b1f      	ldr	r3, [sp, #124]	@ 0x7c
 801d5ac:	441c      	add	r4, r3
 801d5ae:	9b20      	ldr	r3, [sp, #128]	@ 0x80
 801d5b0:	441e      	add	r6, r3
 801d5b2:	9b07      	ldr	r3, [sp, #28]
 801d5b4:	3302      	adds	r3, #2
 801d5b6:	3d01      	subs	r5, #1
 801d5b8:	9307      	str	r3, [sp, #28]
 801d5ba:	e722      	b.n	801d402 <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x58>
 801d5bc:	d022      	beq.n	801d604 <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x25a>
 801d5be:	981f      	ldr	r0, [sp, #124]	@ 0x7c
 801d5c0:	1e6b      	subs	r3, r5, #1
 801d5c2:	fb00 4003 	mla	r0, r0, r3, r4
 801d5c6:	1400      	asrs	r0, r0, #16
 801d5c8:	f53f af37 	bmi.w	801d43a <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x90>
 801d5cc:	3901      	subs	r1, #1
 801d5ce:	4288      	cmp	r0, r1
 801d5d0:	f6bf af33 	bge.w	801d43a <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x90>
 801d5d4:	9920      	ldr	r1, [sp, #128]	@ 0x80
 801d5d6:	fb01 6303 	mla	r3, r1, r3, r6
 801d5da:	141b      	asrs	r3, r3, #16
 801d5dc:	f53f af2d 	bmi.w	801d43a <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x90>
 801d5e0:	3a01      	subs	r2, #1
 801d5e2:	4293      	cmp	r3, r2
 801d5e4:	f6bf af29 	bge.w	801d43a <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x90>
 801d5e8:	f8dd 901c 	ldr.w	r9, [sp, #28]
 801d5ec:	f8bd a02c 	ldrh.w	sl, [sp, #44]	@ 0x2c
 801d5f0:	46a8      	mov	r8, r5
 801d5f2:	f1b8 0f00 	cmp.w	r8, #0
 801d5f6:	dc5e      	bgt.n	801d6b6 <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x30c>
 801d5f8:	9b07      	ldr	r3, [sp, #28]
 801d5fa:	ea25 75e5 	bic.w	r5, r5, r5, asr #31
 801d5fe:	eb03 0345 	add.w	r3, r3, r5, lsl #1
 801d602:	9307      	str	r3, [sp, #28]
 801d604:	9b0a      	ldr	r3, [sp, #40]	@ 0x28
 801d606:	2b00      	cmp	r3, #0
 801d608:	f340 80f6 	ble.w	801d7f8 <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x44e>
 801d60c:	ee30 0a04 	vadd.f32	s0, s0, s8
 801d610:	eeb7 7a00 	vmov.f32	s14, #112	@ 0x3f800000  1.0
 801d614:	eec7 7a00 	vdiv.f32	s15, s14, s0
 801d618:	9b1c      	ldr	r3, [sp, #112]	@ 0x70
 801d61a:	ee70 0aa4 	vadd.f32	s1, s1, s9
 801d61e:	ee31 1a05 	vadd.f32	s2, s2, s10
 801d622:	ee20 7aa7 	vmul.f32	s14, s1, s15
 801d626:	eef0 6a62 	vmov.f32	s13, s5
 801d62a:	ee61 7a27 	vmul.f32	s15, s2, s15
 801d62e:	eefe 6ac8 	vcvt.s32.f32	s13, s13, #16
 801d632:	ee77 2a62 	vsub.f32	s5, s14, s5
 801d636:	ee16 4a90 	vmov	r4, s13
 801d63a:	eefe 2ac8 	vcvt.s32.f32	s5, s5, #16
 801d63e:	eef0 6a43 	vmov.f32	s13, s6
 801d642:	ee37 3ac3 	vsub.f32	s6, s15, s6
 801d646:	ee12 2a90 	vmov	r2, s5
 801d64a:	eebe 3ac8 	vcvt.s32.f32	s6, s6, #16
 801d64e:	fb92 f3f3 	sdiv	r3, r2, r3
 801d652:	ee13 2a10 	vmov	r2, s6
 801d656:	931f      	str	r3, [sp, #124]	@ 0x7c
 801d658:	9b1c      	ldr	r3, [sp, #112]	@ 0x70
 801d65a:	fb92 f3f3 	sdiv	r3, r2, r3
 801d65e:	9320      	str	r3, [sp, #128]	@ 0x80
 801d660:	9b0a      	ldr	r3, [sp, #40]	@ 0x28
 801d662:	9a10      	ldr	r2, [sp, #64]	@ 0x40
 801d664:	3b01      	subs	r3, #1
 801d666:	eefe 6ac8 	vcvt.s32.f32	s13, s13, #16
 801d66a:	930a      	str	r3, [sp, #40]	@ 0x28
 801d66c:	9b1c      	ldr	r3, [sp, #112]	@ 0x70
 801d66e:	ee16 6a90 	vmov	r6, s13
 801d672:	bf14      	ite	ne
 801d674:	461d      	movne	r5, r3
 801d676:	4615      	moveq	r5, r2
 801d678:	eeb0 3a67 	vmov.f32	s6, s15
 801d67c:	eef0 2a47 	vmov.f32	s5, s14
 801d680:	e6b0      	b.n	801d3e4 <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3a>
 801d682:	f111 0a01 	adds.w	sl, r1, #1
 801d686:	d487      	bmi.n	801d598 <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1ee>
 801d688:	45d6      	cmp	lr, sl
 801d68a:	db85      	blt.n	801d598 <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1ee>
 801d68c:	f110 0a01 	adds.w	sl, r0, #1
 801d690:	d482      	bmi.n	801d598 <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1ee>
 801d692:	4553      	cmp	r3, sl
 801d694:	db80      	blt.n	801d598 <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1ee>
 801d696:	9f0b      	ldr	r7, [sp, #44]	@ 0x2c
 801d698:	9101      	str	r1, [sp, #4]
 801d69a:	b21b      	sxth	r3, r3
 801d69c:	e9cd 0202 	strd	r0, r2, [sp, #8]
 801d6a0:	9300      	str	r3, [sp, #0]
 801d6a2:	e9cd c704 	strd	ip, r7, [sp, #16]
 801d6a6:	fa0f f38e 	sxth.w	r3, lr
 801d6aa:	9a09      	ldr	r2, [sp, #36]	@ 0x24
 801d6ac:	9811      	ldr	r0, [sp, #68]	@ 0x44
 801d6ae:	4641      	mov	r1, r8
 801d6b0:	f7ff fdb4 	bl	801d21c <_ZNK8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtssiihhh>
 801d6b4:	e770      	b.n	801d598 <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1ee>
 801d6b6:	9b24      	ldr	r3, [sp, #144]	@ 0x90
 801d6b8:	9f09      	ldr	r7, [sp, #36]	@ 0x24
 801d6ba:	f9b3 1008 	ldrsh.w	r1, [r3, #8]
 801d6be:	1430      	asrs	r0, r6, #16
 801d6c0:	1423      	asrs	r3, r4, #16
 801d6c2:	fb01 3000 	mla	r0, r1, r0, r3
 801d6c6:	9b09      	ldr	r3, [sp, #36]	@ 0x24
 801d6c8:	f837 c010 	ldrh.w	ip, [r7, r0, lsl #1]
 801d6cc:	eb03 0340 	add.w	r3, r3, r0, lsl #1
 801d6d0:	f3c6 3e03 	ubfx	lr, r6, #12, #4
 801d6d4:	f3c4 3203 	ubfx	r2, r4, #12, #4
 801d6d8:	8858      	ldrh	r0, [r3, #2]
 801d6da:	f1be 0f00 	cmp.w	lr, #0
 801d6de:	d00b      	beq.n	801d6f8 <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x34e>
 801d6e0:	f101 4100 	add.w	r1, r1, #2147483648	@ 0x80000000
 801d6e4:	3901      	subs	r1, #1
 801d6e6:	0049      	lsls	r1, r1, #1
 801d6e8:	3102      	adds	r1, #2
 801d6ea:	eb03 0b01 	add.w	fp, r3, r1
 801d6ee:	5a5b      	ldrh	r3, [r3, r1]
 801d6f0:	930e      	str	r3, [sp, #56]	@ 0x38
 801d6f2:	f8bb 3002 	ldrh.w	r3, [fp, #2]
 801d6f6:	930f      	str	r3, [sp, #60]	@ 0x3c
 801d6f8:	ea4f 410c 	mov.w	r1, ip, lsl #16
 801d6fc:	fb12 f30e 	smulbb	r3, r2, lr
 801d700:	f42c 6cfc 	bic.w	ip, ip, #2016	@ 0x7e0
 801d704:	ea4f 4b00 	mov.w	fp, r0, lsl #16
 801d708:	f001 61fc 	and.w	r1, r1, #132120576	@ 0x7e00000
 801d70c:	10db      	asrs	r3, r3, #3
 801d70e:	ea41 010c 	orr.w	r1, r1, ip
 801d712:	f00b 6bfc 	and.w	fp, fp, #132120576	@ 0x7e00000
 801d716:	f1ce 0c10 	rsb	ip, lr, #16
 801d71a:	f420 60fc 	bic.w	r0, r0, #2016	@ 0x7e0
 801d71e:	ebac 0c02 	sub.w	ip, ip, r2
 801d722:	ea4b 0000 	orr.w	r0, fp, r0
 801d726:	ebc3 0242 	rsb	r2, r3, r2, lsl #1
 801d72a:	4350      	muls	r0, r2
 801d72c:	9a0f      	ldr	r2, [sp, #60]	@ 0x3c
 801d72e:	9f08      	ldr	r7, [sp, #32]
 801d730:	eb03 0c4c 	add.w	ip, r3, ip, lsl #1
 801d734:	fb0c 0c01 	mla	ip, ip, r1, r0
 801d738:	ea4f 4b02 	mov.w	fp, r2, lsl #16
 801d73c:	f422 61fc 	bic.w	r1, r2, #2016	@ 0x7e0
 801d740:	9a0e      	ldr	r2, [sp, #56]	@ 0x38
 801d742:	980e      	ldr	r0, [sp, #56]	@ 0x38
 801d744:	f00b 6bfc 	and.w	fp, fp, #132120576	@ 0x7e00000
 801d748:	0412      	lsls	r2, r2, #16
 801d74a:	ea4b 0101 	orr.w	r1, fp, r1
 801d74e:	f420 60fc 	bic.w	r0, r0, #2016	@ 0x7e0
 801d752:	f002 62fc 	and.w	r2, r2, #132120576	@ 0x7e00000
 801d756:	fb03 c101 	mla	r1, r3, r1, ip
 801d75a:	4302      	orrs	r2, r0
 801d75c:	ebc3 034e 	rsb	r3, r3, lr, lsl #1
 801d760:	fb03 1202 	mla	r2, r3, r2, r1
 801d764:	ea4f 5b52 	mov.w	fp, r2, lsr #21
 801d768:	0952      	lsrs	r2, r2, #5
 801d76a:	f422 63fc 	bic.w	r3, r2, #2016	@ 0x7e0
 801d76e:	f40b 6bfc 	and.w	fp, fp, #2016	@ 0x7e0
 801d772:	f8b9 2000 	ldrh.w	r2, [r9]
 801d776:	ea4b 0303 	orr.w	r3, fp, r3
 801d77a:	b29b      	uxth	r3, r3
 801d77c:	1211      	asrs	r1, r2, #8
 801d77e:	1218      	asrs	r0, r3, #8
 801d780:	f001 01f8 	and.w	r1, r1, #248	@ 0xf8
 801d784:	fb11 f107 	smulbb	r1, r1, r7
 801d788:	ea4f 0ce2 	mov.w	ip, r2, asr #3
 801d78c:	f000 00f8 	and.w	r0, r0, #248	@ 0xf8
 801d790:	00d2      	lsls	r2, r2, #3
 801d792:	fb00 100a 	mla	r0, r0, sl, r1
 801d796:	f00c 0cfc 	and.w	ip, ip, #252	@ 0xfc
 801d79a:	10d9      	asrs	r1, r3, #3
 801d79c:	b2d2      	uxtb	r2, r2
 801d79e:	00db      	lsls	r3, r3, #3
 801d7a0:	fb1c fc07 	smulbb	ip, ip, r7
 801d7a4:	fb12 f207 	smulbb	r2, r2, r7
 801d7a8:	f001 01fc 	and.w	r1, r1, #252	@ 0xfc
 801d7ac:	b2db      	uxtb	r3, r3
 801d7ae:	b280      	uxth	r0, r0
 801d7b0:	fb01 c10a 	mla	r1, r1, sl, ip
 801d7b4:	fb03 230a 	mla	r3, r3, sl, r2
 801d7b8:	b29b      	uxth	r3, r3
 801d7ba:	b289      	uxth	r1, r1
 801d7bc:	1c42      	adds	r2, r0, #1
 801d7be:	eb02 2010 	add.w	r0, r2, r0, lsr #8
 801d7c2:	f101 0c01 	add.w	ip, r1, #1
 801d7c6:	1c5a      	adds	r2, r3, #1
 801d7c8:	eb02 2213 	add.w	r2, r2, r3, lsr #8
 801d7cc:	eb0c 2c11 	add.w	ip, ip, r1, lsr #8
 801d7d0:	9b1f      	ldr	r3, [sp, #124]	@ 0x7c
 801d7d2:	f400 4078 	and.w	r0, r0, #63488	@ 0xf800
 801d7d6:	f3c2 22c4 	ubfx	r2, r2, #11, #5
 801d7da:	ea4f 1c5c 	mov.w	ip, ip, lsr #5
 801d7de:	4310      	orrs	r0, r2
 801d7e0:	f40c 6cfc 	and.w	ip, ip, #2016	@ 0x7e0
 801d7e4:	441c      	add	r4, r3
 801d7e6:	9b20      	ldr	r3, [sp, #128]	@ 0x80
 801d7e8:	ea40 000c 	orr.w	r0, r0, ip
 801d7ec:	f829 0b02 	strh.w	r0, [r9], #2
 801d7f0:	441e      	add	r6, r3
 801d7f2:	f108 38ff 	add.w	r8, r8, #4294967295
 801d7f6:	e6fc      	b.n	801d5f2 <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x248>
 801d7f8:	b013      	add	sp, #76	@ 0x4c
 801d7fa:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}

0801d7fe <_ZNK8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtssiihh>:
 801d7fe:	e92d 43f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, lr}
 801d802:	e9dd 4e08 	ldrd	r4, lr, [sp, #32]
 801d806:	fb0e 4703 	mla	r7, lr, r3, r4
 801d80a:	f1be 0f00 	cmp.w	lr, #0
 801d80e:	f9bd 901c 	ldrsh.w	r9, [sp, #28]
 801d812:	f89d 5028 	ldrb.w	r5, [sp, #40]	@ 0x28
 801d816:	f89d 602c 	ldrb.w	r6, [sp, #44]	@ 0x2c
 801d81a:	8808      	ldrh	r0, [r1, #0]
 801d81c:	eb02 0847 	add.w	r8, r2, r7, lsl #1
 801d820:	db60      	blt.n	801d8e4 <_ZNK8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtssiihh+0xe6>
 801d822:	45f1      	cmp	r9, lr
 801d824:	dd5e      	ble.n	801d8e4 <_ZNK8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtssiihh+0xe6>
 801d826:	2c00      	cmp	r4, #0
 801d828:	db5a      	blt.n	801d8e0 <_ZNK8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtssiihh+0xe2>
 801d82a:	42a3      	cmp	r3, r4
 801d82c:	dd58      	ble.n	801d8e0 <_ZNK8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtssiihh+0xe2>
 801d82e:	f832 c017 	ldrh.w	ip, [r2, r7, lsl #1]
 801d832:	1c62      	adds	r2, r4, #1
 801d834:	d459      	bmi.n	801d8ea <_ZNK8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtssiihh+0xec>
 801d836:	4293      	cmp	r3, r2
 801d838:	dd57      	ble.n	801d8ea <_ZNK8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtssiihh+0xec>
 801d83a:	2d00      	cmp	r5, #0
 801d83c:	d055      	beq.n	801d8ea <_ZNK8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtssiihh+0xec>
 801d83e:	f8b8 7002 	ldrh.w	r7, [r8, #2]
 801d842:	f11e 0e01 	adds.w	lr, lr, #1
 801d846:	d454      	bmi.n	801d8f2 <_ZNK8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtssiihh+0xf4>
 801d848:	45f1      	cmp	r9, lr
 801d84a:	dd52      	ble.n	801d8f2 <_ZNK8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtssiihh+0xf4>
 801d84c:	2e00      	cmp	r6, #0
 801d84e:	d050      	beq.n	801d8f2 <_ZNK8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtssiihh+0xf4>
 801d850:	2c00      	cmp	r4, #0
 801d852:	db4c      	blt.n	801d8ee <_ZNK8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtssiihh+0xf0>
 801d854:	42a3      	cmp	r3, r4
 801d856:	dd4a      	ble.n	801d8ee <_ZNK8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtssiihh+0xf0>
 801d858:	f838 2013 	ldrh.w	r2, [r8, r3, lsl #1]
 801d85c:	3401      	adds	r4, #1
 801d85e:	d405      	bmi.n	801d86c <_ZNK8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtssiihh+0x6e>
 801d860:	42a3      	cmp	r3, r4
 801d862:	dd03      	ble.n	801d86c <_ZNK8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtssiihh+0x6e>
 801d864:	b115      	cbz	r5, 801d86c <_ZNK8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtssiihh+0x6e>
 801d866:	3301      	adds	r3, #1
 801d868:	f838 0013 	ldrh.w	r0, [r8, r3, lsl #1]
 801d86c:	ea4f 430c 	mov.w	r3, ip, lsl #16
 801d870:	fb15 f406 	smulbb	r4, r5, r6
 801d874:	f003 63fc 	and.w	r3, r3, #132120576	@ 0x7e00000
 801d878:	ea4f 4e07 	mov.w	lr, r7, lsl #16
 801d87c:	f42c 6cfc 	bic.w	ip, ip, #2016	@ 0x7e0
 801d880:	f3c4 04c7 	ubfx	r4, r4, #3, #8
 801d884:	ea43 0c0c 	orr.w	ip, r3, ip
 801d888:	f00e 6efc 	and.w	lr, lr, #132120576	@ 0x7e00000
 801d88c:	f1c6 0310 	rsb	r3, r6, #16
 801d890:	f427 67fc 	bic.w	r7, r7, #2016	@ 0x7e0
 801d894:	1b5b      	subs	r3, r3, r5
 801d896:	ea4e 0707 	orr.w	r7, lr, r7
 801d89a:	ebc4 0545 	rsb	r5, r4, r5, lsl #1
 801d89e:	eb04 0343 	add.w	r3, r4, r3, lsl #1
 801d8a2:	437d      	muls	r5, r7
 801d8a4:	fb03 5c0c 	mla	ip, r3, ip, r5
 801d8a8:	0403      	lsls	r3, r0, #16
 801d8aa:	f003 63fc 	and.w	r3, r3, #132120576	@ 0x7e00000
 801d8ae:	f420 60fc 	bic.w	r0, r0, #2016	@ 0x7e0
 801d8b2:	4318      	orrs	r0, r3
 801d8b4:	0413      	lsls	r3, r2, #16
 801d8b6:	f003 63fc 	and.w	r3, r3, #132120576	@ 0x7e00000
 801d8ba:	f422 62fc 	bic.w	r2, r2, #2016	@ 0x7e0
 801d8be:	4313      	orrs	r3, r2
 801d8c0:	fb04 c000 	mla	r0, r4, r0, ip
 801d8c4:	ebc4 0646 	rsb	r6, r4, r6, lsl #1
 801d8c8:	fb06 0003 	mla	r0, r6, r3, r0
 801d8cc:	0d43      	lsrs	r3, r0, #21
 801d8ce:	0940      	lsrs	r0, r0, #5
 801d8d0:	f403 63fc 	and.w	r3, r3, #2016	@ 0x7e0
 801d8d4:	f420 60fc 	bic.w	r0, r0, #2016	@ 0x7e0
 801d8d8:	4318      	orrs	r0, r3
 801d8da:	8008      	strh	r0, [r1, #0]
 801d8dc:	e8bd 83f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, pc}
 801d8e0:	4684      	mov	ip, r0
 801d8e2:	e7a6      	b.n	801d832 <_ZNK8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtssiihh+0x34>
 801d8e4:	4607      	mov	r7, r0
 801d8e6:	4684      	mov	ip, r0
 801d8e8:	e7ab      	b.n	801d842 <_ZNK8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtssiihh+0x44>
 801d8ea:	4607      	mov	r7, r0
 801d8ec:	e7a9      	b.n	801d842 <_ZNK8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtssiihh+0x44>
 801d8ee:	4602      	mov	r2, r0
 801d8f0:	e7b4      	b.n	801d85c <_ZNK8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtssiihh+0x5e>
 801d8f2:	4602      	mov	r2, r0
 801d8f4:	e7ba      	b.n	801d86c <_ZNK8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtssiihh+0x6e>

0801d8f6 <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff>:
 801d8f6:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 801d8fa:	b08f      	sub	sp, #60	@ 0x3c
 801d8fc:	461d      	mov	r5, r3
 801d8fe:	9b1d      	ldr	r3, [sp, #116]	@ 0x74
 801d900:	920c      	str	r2, [sp, #48]	@ 0x30
 801d902:	e9dd 271e 	ldrd	r2, r7, [sp, #120]	@ 0x78
 801d906:	9107      	str	r1, [sp, #28]
 801d908:	6859      	ldr	r1, [r3, #4]
 801d90a:	681b      	ldr	r3, [r3, #0]
 801d90c:	900d      	str	r0, [sp, #52]	@ 0x34
 801d90e:	fb01 2707 	mla	r7, r1, r7, r2
 801d912:	eb03 0747 	add.w	r7, r3, r7, lsl #1
 801d916:	9b20      	ldr	r3, [sp, #128]	@ 0x80
 801d918:	e9dd 4619 	ldrd	r4, r6, [sp, #100]	@ 0x64
 801d91c:	f8d3 8000 	ldr.w	r8, [r3]
 801d920:	9b07      	ldr	r3, [sp, #28]
 801d922:	2b00      	cmp	r3, #0
 801d924:	dc03      	bgt.n	801d92e <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x38>
 801d926:	9b0c      	ldr	r3, [sp, #48]	@ 0x30
 801d928:	2b00      	cmp	r3, #0
 801d92a:	f340 8181 	ble.w	801dc30 <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x33a>
 801d92e:	9b20      	ldr	r3, [sp, #128]	@ 0x80
 801d930:	f9b3 1008 	ldrsh.w	r1, [r3, #8]
 801d934:	f9b3 200c 	ldrsh.w	r2, [r3, #12]
 801d938:	1e48      	subs	r0, r1, #1
 801d93a:	f102 3cff 	add.w	ip, r2, #4294967295
 801d93e:	2d00      	cmp	r5, #0
 801d940:	f340 809b 	ble.w	801da7a <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x184>
 801d944:	ea5f 4e24 	movs.w	lr, r4, asr #16
 801d948:	ea4f 4326 	mov.w	r3, r6, asr #16
 801d94c:	d406      	bmi.n	801d95c <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x66>
 801d94e:	4586      	cmp	lr, r0
 801d950:	da04      	bge.n	801d95c <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x66>
 801d952:	2b00      	cmp	r3, #0
 801d954:	db02      	blt.n	801d95c <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x66>
 801d956:	4563      	cmp	r3, ip
 801d958:	f2c0 8090 	blt.w	801da7c <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x186>
 801d95c:	f11e 0e01 	adds.w	lr, lr, #1
 801d960:	f100 8084 	bmi.w	801da6c <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x176>
 801d964:	4571      	cmp	r1, lr
 801d966:	f2c0 8081 	blt.w	801da6c <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x176>
 801d96a:	3301      	adds	r3, #1
 801d96c:	d47e      	bmi.n	801da6c <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x176>
 801d96e:	429a      	cmp	r2, r3
 801d970:	db7c      	blt.n	801da6c <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x176>
 801d972:	46aa      	mov	sl, r5
 801d974:	46b9      	mov	r9, r7
 801d976:	f1ba 0f00 	cmp.w	sl, #0
 801d97a:	f340 8099 	ble.w	801dab0 <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1ba>
 801d97e:	9b20      	ldr	r3, [sp, #128]	@ 0x80
 801d980:	1421      	asrs	r1, r4, #16
 801d982:	ea4f 4026 	mov.w	r0, r6, asr #16
 801d986:	f3c4 3203 	ubfx	r2, r4, #12, #4
 801d98a:	f3c6 3c03 	ubfx	ip, r6, #12, #4
 801d98e:	e9d3 e302 	ldrd	lr, r3, [r3, #8]
 801d992:	f100 80d0 	bmi.w	801db36 <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x240>
 801d996:	f10e 3bff 	add.w	fp, lr, #4294967295
 801d99a:	4559      	cmp	r1, fp
 801d99c:	f280 80cb 	bge.w	801db36 <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x240>
 801d9a0:	2800      	cmp	r0, #0
 801d9a2:	f2c0 80c8 	blt.w	801db36 <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x240>
 801d9a6:	f103 3bff 	add.w	fp, r3, #4294967295
 801d9aa:	4558      	cmp	r0, fp
 801d9ac:	f280 80c3 	bge.w	801db36 <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x240>
 801d9b0:	fa0f fe8e 	sxth.w	lr, lr
 801d9b4:	fb00 110e 	mla	r1, r0, lr, r1
 801d9b8:	eb08 0041 	add.w	r0, r8, r1, lsl #1
 801d9bc:	f838 b011 	ldrh.w	fp, [r8, r1, lsl #1]
 801d9c0:	8841      	ldrh	r1, [r0, #2]
 801d9c2:	f1bc 0f00 	cmp.w	ip, #0
 801d9c6:	d00b      	beq.n	801d9e0 <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xea>
 801d9c8:	f10e 4300 	add.w	r3, lr, #2147483648	@ 0x80000000
 801d9cc:	3b01      	subs	r3, #1
 801d9ce:	005b      	lsls	r3, r3, #1
 801d9d0:	3302      	adds	r3, #2
 801d9d2:	eb00 0e03 	add.w	lr, r0, r3
 801d9d6:	5ac3      	ldrh	r3, [r0, r3]
 801d9d8:	9308      	str	r3, [sp, #32]
 801d9da:	f8be 3002 	ldrh.w	r3, [lr, #2]
 801d9de:	9309      	str	r3, [sp, #36]	@ 0x24
 801d9e0:	ea4f 400b 	mov.w	r0, fp, lsl #16
 801d9e4:	f000 60fc 	and.w	r0, r0, #132120576	@ 0x7e00000
 801d9e8:	f42b 6bfc 	bic.w	fp, fp, #2016	@ 0x7e0
 801d9ec:	ea40 000b 	orr.w	r0, r0, fp
 801d9f0:	fb12 f30c 	smulbb	r3, r2, ip
 801d9f4:	ea4f 4b01 	mov.w	fp, r1, lsl #16
 801d9f8:	10db      	asrs	r3, r3, #3
 801d9fa:	f1cc 0e10 	rsb	lr, ip, #16
 801d9fe:	f00b 6bfc 	and.w	fp, fp, #132120576	@ 0x7e00000
 801da02:	f421 61fc 	bic.w	r1, r1, #2016	@ 0x7e0
 801da06:	ebae 0e02 	sub.w	lr, lr, r2
 801da0a:	ea4b 0101 	orr.w	r1, fp, r1
 801da0e:	ebc3 0242 	rsb	r2, r3, r2, lsl #1
 801da12:	4351      	muls	r1, r2
 801da14:	9a09      	ldr	r2, [sp, #36]	@ 0x24
 801da16:	eb03 0e4e 	add.w	lr, r3, lr, lsl #1
 801da1a:	fb0e 1e00 	mla	lr, lr, r0, r1
 801da1e:	0410      	lsls	r0, r2, #16
 801da20:	f000 60fc 	and.w	r0, r0, #132120576	@ 0x7e00000
 801da24:	f422 62fc 	bic.w	r2, r2, #2016	@ 0x7e0
 801da28:	4310      	orrs	r0, r2
 801da2a:	9a08      	ldr	r2, [sp, #32]
 801da2c:	9908      	ldr	r1, [sp, #32]
 801da2e:	0412      	lsls	r2, r2, #16
 801da30:	fb03 e000 	mla	r0, r3, r0, lr
 801da34:	f002 62fc 	and.w	r2, r2, #132120576	@ 0x7e00000
 801da38:	f421 6efc 	bic.w	lr, r1, #2016	@ 0x7e0
 801da3c:	ea42 020e 	orr.w	r2, r2, lr
 801da40:	ebc3 034c 	rsb	r3, r3, ip, lsl #1
 801da44:	fb03 0302 	mla	r3, r3, r2, r0
 801da48:	0d5a      	lsrs	r2, r3, #21
 801da4a:	095b      	lsrs	r3, r3, #5
 801da4c:	f402 62fc 	and.w	r2, r2, #2016	@ 0x7e0
 801da50:	f423 63fc 	bic.w	r3, r3, #2016	@ 0x7e0
 801da54:	4313      	orrs	r3, r2
 801da56:	f8a9 3000 	strh.w	r3, [r9]
 801da5a:	9b1b      	ldr	r3, [sp, #108]	@ 0x6c
 801da5c:	441c      	add	r4, r3
 801da5e:	9b1c      	ldr	r3, [sp, #112]	@ 0x70
 801da60:	f109 0902 	add.w	r9, r9, #2
 801da64:	441e      	add	r6, r3
 801da66:	f10a 3aff 	add.w	sl, sl, #4294967295
 801da6a:	e784      	b.n	801d976 <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x80>
 801da6c:	9b1b      	ldr	r3, [sp, #108]	@ 0x6c
 801da6e:	441c      	add	r4, r3
 801da70:	9b1c      	ldr	r3, [sp, #112]	@ 0x70
 801da72:	3d01      	subs	r5, #1
 801da74:	441e      	add	r6, r3
 801da76:	3702      	adds	r7, #2
 801da78:	e761      	b.n	801d93e <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x48>
 801da7a:	d01d      	beq.n	801dab8 <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1c2>
 801da7c:	981b      	ldr	r0, [sp, #108]	@ 0x6c
 801da7e:	1e6b      	subs	r3, r5, #1
 801da80:	fb00 4003 	mla	r0, r0, r3, r4
 801da84:	1400      	asrs	r0, r0, #16
 801da86:	f53f af74 	bmi.w	801d972 <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x7c>
 801da8a:	3901      	subs	r1, #1
 801da8c:	4288      	cmp	r0, r1
 801da8e:	f6bf af70 	bge.w	801d972 <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x7c>
 801da92:	991c      	ldr	r1, [sp, #112]	@ 0x70
 801da94:	fb01 6303 	mla	r3, r1, r3, r6
 801da98:	141b      	asrs	r3, r3, #16
 801da9a:	f53f af6a 	bmi.w	801d972 <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x7c>
 801da9e:	3a01      	subs	r2, #1
 801daa0:	4293      	cmp	r3, r2
 801daa2:	f6bf af66 	bge.w	801d972 <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x7c>
 801daa6:	46a9      	mov	r9, r5
 801daa8:	46ba      	mov	sl, r7
 801daaa:	f1b9 0f00 	cmp.w	r9, #0
 801daae:	dc5a      	bgt.n	801db66 <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x270>
 801dab0:	ea25 75e5 	bic.w	r5, r5, r5, asr #31
 801dab4:	eb07 0745 	add.w	r7, r7, r5, lsl #1
 801dab8:	9b07      	ldr	r3, [sp, #28]
 801daba:	2b00      	cmp	r3, #0
 801dabc:	f340 80b8 	ble.w	801dc30 <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x33a>
 801dac0:	ee30 0a04 	vadd.f32	s0, s0, s8
 801dac4:	eeb7 7a00 	vmov.f32	s14, #112	@ 0x3f800000  1.0
 801dac8:	eec7 7a00 	vdiv.f32	s15, s14, s0
 801dacc:	9b18      	ldr	r3, [sp, #96]	@ 0x60
 801dace:	ee70 0aa4 	vadd.f32	s1, s1, s9
 801dad2:	ee31 1a05 	vadd.f32	s2, s2, s10
 801dad6:	ee20 7aa7 	vmul.f32	s14, s1, s15
 801dada:	eef0 6a62 	vmov.f32	s13, s5
 801dade:	ee61 7a27 	vmul.f32	s15, s2, s15
 801dae2:	eefe 6ac8 	vcvt.s32.f32	s13, s13, #16
 801dae6:	ee77 2a62 	vsub.f32	s5, s14, s5
 801daea:	ee16 4a90 	vmov	r4, s13
 801daee:	eefe 2ac8 	vcvt.s32.f32	s5, s5, #16
 801daf2:	eef0 6a43 	vmov.f32	s13, s6
 801daf6:	ee37 3ac3 	vsub.f32	s6, s15, s6
 801dafa:	ee12 2a90 	vmov	r2, s5
 801dafe:	eebe 3ac8 	vcvt.s32.f32	s6, s6, #16
 801db02:	fb92 f3f3 	sdiv	r3, r2, r3
 801db06:	ee13 2a10 	vmov	r2, s6
 801db0a:	931b      	str	r3, [sp, #108]	@ 0x6c
 801db0c:	9b18      	ldr	r3, [sp, #96]	@ 0x60
 801db0e:	fb92 f3f3 	sdiv	r3, r2, r3
 801db12:	931c      	str	r3, [sp, #112]	@ 0x70
 801db14:	9b07      	ldr	r3, [sp, #28]
 801db16:	9a0c      	ldr	r2, [sp, #48]	@ 0x30
 801db18:	3b01      	subs	r3, #1
 801db1a:	eefe 6ac8 	vcvt.s32.f32	s13, s13, #16
 801db1e:	9307      	str	r3, [sp, #28]
 801db20:	9b18      	ldr	r3, [sp, #96]	@ 0x60
 801db22:	ee16 6a90 	vmov	r6, s13
 801db26:	bf14      	ite	ne
 801db28:	461d      	movne	r5, r3
 801db2a:	4615      	moveq	r5, r2
 801db2c:	eeb0 3a67 	vmov.f32	s6, s15
 801db30:	eef0 2a47 	vmov.f32	s5, s14
 801db34:	e6f4      	b.n	801d920 <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2a>
 801db36:	f111 0b01 	adds.w	fp, r1, #1
 801db3a:	d48e      	bmi.n	801da5a <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x164>
 801db3c:	45de      	cmp	lr, fp
 801db3e:	db8c      	blt.n	801da5a <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x164>
 801db40:	f110 0b01 	adds.w	fp, r0, #1
 801db44:	d489      	bmi.n	801da5a <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x164>
 801db46:	455b      	cmp	r3, fp
 801db48:	db87      	blt.n	801da5a <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x164>
 801db4a:	b21b      	sxth	r3, r3
 801db4c:	e9cd 1001 	strd	r1, r0, [sp, #4]
 801db50:	e9cd 2c03 	strd	r2, ip, [sp, #12]
 801db54:	9300      	str	r3, [sp, #0]
 801db56:	4642      	mov	r2, r8
 801db58:	fa0f f38e 	sxth.w	r3, lr
 801db5c:	4649      	mov	r1, r9
 801db5e:	980d      	ldr	r0, [sp, #52]	@ 0x34
 801db60:	f7ff fe4d 	bl	801d7fe <_ZNK8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtssiihh>
 801db64:	e779      	b.n	801da5a <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x164>
 801db66:	9b20      	ldr	r3, [sp, #128]	@ 0x80
 801db68:	f9b3 3008 	ldrsh.w	r3, [r3, #8]
 801db6c:	1420      	asrs	r0, r4, #16
 801db6e:	1431      	asrs	r1, r6, #16
 801db70:	fb03 0101 	mla	r1, r3, r1, r0
 801db74:	eb08 0041 	add.w	r0, r8, r1, lsl #1
 801db78:	f3c6 3e03 	ubfx	lr, r6, #12, #4
 801db7c:	f838 c011 	ldrh.w	ip, [r8, r1, lsl #1]
 801db80:	8841      	ldrh	r1, [r0, #2]
 801db82:	f3c4 3203 	ubfx	r2, r4, #12, #4
 801db86:	f1be 0f00 	cmp.w	lr, #0
 801db8a:	d00b      	beq.n	801dba4 <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2ae>
 801db8c:	f103 4300 	add.w	r3, r3, #2147483648	@ 0x80000000
 801db90:	3b01      	subs	r3, #1
 801db92:	005b      	lsls	r3, r3, #1
 801db94:	3302      	adds	r3, #2
 801db96:	eb00 0b03 	add.w	fp, r0, r3
 801db9a:	5ac3      	ldrh	r3, [r0, r3]
 801db9c:	930a      	str	r3, [sp, #40]	@ 0x28
 801db9e:	f8bb 3002 	ldrh.w	r3, [fp, #2]
 801dba2:	930b      	str	r3, [sp, #44]	@ 0x2c
 801dba4:	ea4f 400c 	mov.w	r0, ip, lsl #16
 801dba8:	fb12 f30e 	smulbb	r3, r2, lr
 801dbac:	f42c 6cfc 	bic.w	ip, ip, #2016	@ 0x7e0
 801dbb0:	ea4f 4b01 	mov.w	fp, r1, lsl #16
 801dbb4:	f000 60fc 	and.w	r0, r0, #132120576	@ 0x7e00000
 801dbb8:	10db      	asrs	r3, r3, #3
 801dbba:	ea40 000c 	orr.w	r0, r0, ip
 801dbbe:	f00b 6bfc 	and.w	fp, fp, #132120576	@ 0x7e00000
 801dbc2:	f1ce 0c10 	rsb	ip, lr, #16
 801dbc6:	f421 61fc 	bic.w	r1, r1, #2016	@ 0x7e0
 801dbca:	ebac 0c02 	sub.w	ip, ip, r2
 801dbce:	ea4b 0101 	orr.w	r1, fp, r1
 801dbd2:	ebc3 0242 	rsb	r2, r3, r2, lsl #1
 801dbd6:	4351      	muls	r1, r2
 801dbd8:	9a0b      	ldr	r2, [sp, #44]	@ 0x2c
 801dbda:	eb03 0c4c 	add.w	ip, r3, ip, lsl #1
 801dbde:	fb0c 1c00 	mla	ip, ip, r0, r1
 801dbe2:	ea4f 4b02 	mov.w	fp, r2, lsl #16
 801dbe6:	f422 60fc 	bic.w	r0, r2, #2016	@ 0x7e0
 801dbea:	9a0a      	ldr	r2, [sp, #40]	@ 0x28
 801dbec:	990a      	ldr	r1, [sp, #40]	@ 0x28
 801dbee:	f00b 6bfc 	and.w	fp, fp, #132120576	@ 0x7e00000
 801dbf2:	0412      	lsls	r2, r2, #16
 801dbf4:	ea4b 0000 	orr.w	r0, fp, r0
 801dbf8:	f002 62fc 	and.w	r2, r2, #132120576	@ 0x7e00000
 801dbfc:	f421 6bfc 	bic.w	fp, r1, #2016	@ 0x7e0
 801dc00:	fb03 c000 	mla	r0, r3, r0, ip
 801dc04:	ea42 0b0b 	orr.w	fp, r2, fp
 801dc08:	ebc3 034e 	rsb	r3, r3, lr, lsl #1
 801dc0c:	fb03 000b 	mla	r0, r3, fp, r0
 801dc10:	0d43      	lsrs	r3, r0, #21
 801dc12:	0940      	lsrs	r0, r0, #5
 801dc14:	f403 63fc 	and.w	r3, r3, #2016	@ 0x7e0
 801dc18:	f420 60fc 	bic.w	r0, r0, #2016	@ 0x7e0
 801dc1c:	4318      	orrs	r0, r3
 801dc1e:	9b1b      	ldr	r3, [sp, #108]	@ 0x6c
 801dc20:	f82a 0b02 	strh.w	r0, [sl], #2
 801dc24:	441c      	add	r4, r3
 801dc26:	9b1c      	ldr	r3, [sp, #112]	@ 0x70
 801dc28:	f109 39ff 	add.w	r9, r9, #4294967295
 801dc2c:	441e      	add	r6, r3
 801dc2e:	e73c      	b.n	801daaa <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1b4>
 801dc30:	b00f      	add	sp, #60	@ 0x3c
 801dc32:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}

0801dc36 <_ZNK8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKmssiihhh>:
 801dc36:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 801dc3a:	b085      	sub	sp, #20
 801dc3c:	e9dd 740f 	ldrd	r7, r4, [sp, #60]	@ 0x3c
 801dc40:	9102      	str	r1, [sp, #8]
 801dc42:	2c00      	cmp	r4, #0
 801dc44:	fb04 7103 	mla	r1, r4, r3, r7
 801dc48:	f9bd e038 	ldrsh.w	lr, [sp, #56]	@ 0x38
 801dc4c:	f89d 6044 	ldrb.w	r6, [sp, #68]	@ 0x44
 801dc50:	f89d 0048 	ldrb.w	r0, [sp, #72]	@ 0x48
 801dc54:	eb02 0c81 	add.w	ip, r2, r1, lsl #2
 801dc58:	f2c0 811b 	blt.w	801de92 <_ZNK8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKmssiihhh+0x25c>
 801dc5c:	45a6      	cmp	lr, r4
 801dc5e:	f340 8118 	ble.w	801de92 <_ZNK8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKmssiihhh+0x25c>
 801dc62:	2f00      	cmp	r7, #0
 801dc64:	f2c0 8113 	blt.w	801de8e <_ZNK8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKmssiihhh+0x258>
 801dc68:	42bb      	cmp	r3, r7
 801dc6a:	f340 8110 	ble.w	801de8e <_ZNK8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKmssiihhh+0x258>
 801dc6e:	f852 5021 	ldr.w	r5, [r2, r1, lsl #2]
 801dc72:	1c7a      	adds	r2, r7, #1
 801dc74:	f100 8110 	bmi.w	801de98 <_ZNK8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKmssiihhh+0x262>
 801dc78:	4293      	cmp	r3, r2
 801dc7a:	f340 810d 	ble.w	801de98 <_ZNK8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKmssiihhh+0x262>
 801dc7e:	2e00      	cmp	r6, #0
 801dc80:	f000 810c 	beq.w	801de9c <_ZNK8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKmssiihhh+0x266>
 801dc84:	f8dc 1004 	ldr.w	r1, [ip, #4]
 801dc88:	3401      	adds	r4, #1
 801dc8a:	f100 810b 	bmi.w	801dea4 <_ZNK8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKmssiihhh+0x26e>
 801dc8e:	45a6      	cmp	lr, r4
 801dc90:	f340 8108 	ble.w	801dea4 <_ZNK8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKmssiihhh+0x26e>
 801dc94:	2800      	cmp	r0, #0
 801dc96:	f000 8108 	beq.w	801deaa <_ZNK8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKmssiihhh+0x274>
 801dc9a:	2f00      	cmp	r7, #0
 801dc9c:	f2c0 8100 	blt.w	801dea0 <_ZNK8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKmssiihhh+0x26a>
 801dca0:	42bb      	cmp	r3, r7
 801dca2:	f340 80fd 	ble.w	801dea0 <_ZNK8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKmssiihhh+0x26a>
 801dca6:	f85c 4023 	ldr.w	r4, [ip, r3, lsl #2]
 801dcaa:	3701      	adds	r7, #1
 801dcac:	f100 8100 	bmi.w	801deb0 <_ZNK8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKmssiihhh+0x27a>
 801dcb0:	42bb      	cmp	r3, r7
 801dcb2:	f340 80fd 	ble.w	801deb0 <_ZNK8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKmssiihhh+0x27a>
 801dcb6:	2e00      	cmp	r6, #0
 801dcb8:	f000 80fc 	beq.w	801deb4 <_ZNK8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKmssiihhh+0x27e>
 801dcbc:	3301      	adds	r3, #1
 801dcbe:	f85c 2023 	ldr.w	r2, [ip, r3, lsl #2]
 801dcc2:	b2b6      	uxth	r6, r6
 801dcc4:	b280      	uxth	r0, r0
 801dcc6:	fb00 fe06 	mul.w	lr, r0, r6
 801dcca:	ebce 1000 	rsb	r0, lr, r0, lsl #4
 801dcce:	0136      	lsls	r6, r6, #4
 801dcd0:	eba6 070e 	sub.w	r7, r6, lr
 801dcd4:	b280      	uxth	r0, r0
 801dcd6:	f5c6 7380 	rsb	r3, r6, #256	@ 0x100
 801dcda:	ea4f 6a11 	mov.w	sl, r1, lsr #24
 801dcde:	b2bf      	uxth	r7, r7
 801dce0:	1a1b      	subs	r3, r3, r0
 801dce2:	ea4f 6b15 	mov.w	fp, r5, lsr #24
 801dce6:	b29b      	uxth	r3, r3
 801dce8:	fb0a f607 	mul.w	r6, sl, r7
 801dcec:	ea4f 6914 	mov.w	r9, r4, lsr #24
 801dcf0:	fb0b 6603 	mla	r6, fp, r3, r6
 801dcf4:	ea4f 6812 	mov.w	r8, r2, lsr #24
 801dcf8:	fb00 6609 	mla	r6, r0, r9, r6
 801dcfc:	fb0e 6608 	mla	r6, lr, r8, r6
 801dd00:	f3c6 2607 	ubfx	r6, r6, #8, #8
 801dd04:	9600      	str	r6, [sp, #0]
 801dd06:	2e00      	cmp	r6, #0
 801dd08:	f000 80be 	beq.w	801de88 <_ZNK8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKmssiihhh+0x252>
 801dd0c:	f005 1cff 	and.w	ip, r5, #16711935	@ 0xff00ff
 801dd10:	fb0b fc0c 	mul.w	ip, fp, ip
 801dd14:	f405 457f 	and.w	r5, r5, #65280	@ 0xff00
 801dd18:	fb0b f505 	mul.w	r5, fp, r5
 801dd1c:	ea4f 2b1c 	mov.w	fp, ip, lsr #8
 801dd20:	f00b 1bff 	and.w	fp, fp, #16711935	@ 0xff00ff
 801dd24:	f10c 1c01 	add.w	ip, ip, #65537	@ 0x10001
 801dd28:	44dc      	add	ip, fp
 801dd2a:	ea4f 2c1c 	mov.w	ip, ip, lsr #8
 801dd2e:	9501      	str	r5, [sp, #4]
 801dd30:	f00c 15ff 	and.w	r5, ip, #16711935	@ 0xff00ff
 801dd34:	9503      	str	r5, [sp, #12]
 801dd36:	9d01      	ldr	r5, [sp, #4]
 801dd38:	9e02      	ldr	r6, [sp, #8]
 801dd3a:	f505 7c80 	add.w	ip, r5, #256	@ 0x100
 801dd3e:	eb0c 2515 	add.w	r5, ip, r5, lsr #8
 801dd42:	f001 1cff 	and.w	ip, r1, #16711935	@ 0xff00ff
 801dd46:	fb0a fc0c 	mul.w	ip, sl, ip
 801dd4a:	ea4f 2b15 	mov.w	fp, r5, lsr #8
 801dd4e:	ea4f 251c 	mov.w	r5, ip, lsr #8
 801dd52:	f005 15ff 	and.w	r5, r5, #16711935	@ 0xff00ff
 801dd56:	f10c 1c01 	add.w	ip, ip, #65537	@ 0x10001
 801dd5a:	4465      	add	r5, ip
 801dd5c:	f004 1cff 	and.w	ip, r4, #16711935	@ 0xff00ff
 801dd60:	f404 447f 	and.w	r4, r4, #65280	@ 0xff00
 801dd64:	fb09 fc0c 	mul.w	ip, r9, ip
 801dd68:	fb09 f904 	mul.w	r9, r9, r4
 801dd6c:	f509 7480 	add.w	r4, r9, #256	@ 0x100
 801dd70:	eb04 2919 	add.w	r9, r4, r9, lsr #8
 801dd74:	f002 14ff 	and.w	r4, r2, #16711935	@ 0xff00ff
 801dd78:	fb08 f404 	mul.w	r4, r8, r4
 801dd7c:	f401 417f 	and.w	r1, r1, #65280	@ 0xff00
 801dd80:	f402 427f 	and.w	r2, r2, #65280	@ 0xff00
 801dd84:	fb08 f802 	mul.w	r8, r8, r2
 801dd88:	fb0a fa01 	mul.w	sl, sl, r1
 801dd8c:	0a22      	lsrs	r2, r4, #8
 801dd8e:	f50a 7180 	add.w	r1, sl, #256	@ 0x100
 801dd92:	f002 12ff 	and.w	r2, r2, #16711935	@ 0xff00ff
 801dd96:	f104 1401 	add.w	r4, r4, #65537	@ 0x10001
 801dd9a:	eb01 2a1a 	add.w	sl, r1, sl, lsr #8
 801dd9e:	4414      	add	r4, r2
 801dda0:	ea4f 211c 	mov.w	r1, ip, lsr #8
 801dda4:	f508 7280 	add.w	r2, r8, #256	@ 0x100
 801dda8:	0a2d      	lsrs	r5, r5, #8
 801ddaa:	eb02 2818 	add.w	r8, r2, r8, lsr #8
 801ddae:	f005 15ff 	and.w	r5, r5, #16711935	@ 0xff00ff
 801ddb2:	9a03      	ldr	r2, [sp, #12]
 801ddb4:	8836      	ldrh	r6, [r6, #0]
 801ddb6:	f001 11ff 	and.w	r1, r1, #16711935	@ 0xff00ff
 801ddba:	f10c 1c01 	add.w	ip, ip, #65537	@ 0x10001
 801ddbe:	437d      	muls	r5, r7
 801ddc0:	4461      	add	r1, ip
 801ddc2:	0a24      	lsrs	r4, r4, #8
 801ddc4:	fb02 5503 	mla	r5, r2, r3, r5
 801ddc8:	0a09      	lsrs	r1, r1, #8
 801ddca:	f004 14ff 	and.w	r4, r4, #16711935	@ 0xff00ff
 801ddce:	fb04 540e 	mla	r4, r4, lr, r5
 801ddd2:	f001 11ff 	and.w	r1, r1, #16711935	@ 0xff00ff
 801ddd6:	fb01 4100 	mla	r1, r1, r0, r4
 801ddda:	ea4f 2a1a 	mov.w	sl, sl, lsr #8
 801ddde:	0a09      	lsrs	r1, r1, #8
 801dde0:	f40a 4a7f 	and.w	sl, sl, #65280	@ 0xff00
 801dde4:	f001 14ff 	and.w	r4, r1, #16711935	@ 0xff00ff
 801dde8:	fb07 f70a 	mul.w	r7, r7, sl
 801ddec:	ea4f 2818 	mov.w	r8, r8, lsr #8
 801ddf0:	f40b 417f 	and.w	r1, fp, #65280	@ 0xff00
 801ddf4:	fb03 7101 	mla	r1, r3, r1, r7
 801ddf8:	ea4f 2919 	mov.w	r9, r9, lsr #8
 801ddfc:	f408 487f 	and.w	r8, r8, #65280	@ 0xff00
 801de00:	fb0e 1e08 	mla	lr, lr, r8, r1
 801de04:	f409 417f 	and.w	r1, r9, #65280	@ 0xff00
 801de08:	fb00 e101 	mla	r1, r0, r1, lr
 801de0c:	f89d 004c 	ldrb.w	r0, [sp, #76]	@ 0x4c
 801de10:	9a00      	ldr	r2, [sp, #0]
 801de12:	b287      	uxth	r7, r0
 801de14:	437a      	muls	r2, r7
 801de16:	0a09      	lsrs	r1, r1, #8
 801de18:	1c53      	adds	r3, r2, #1
 801de1a:	f401 417f 	and.w	r1, r1, #65280	@ 0xff00
 801de1e:	4321      	orrs	r1, r4
 801de20:	eb03 2312 	add.w	r3, r3, r2, lsr #8
 801de24:	1235      	asrs	r5, r6, #8
 801de26:	0c0a      	lsrs	r2, r1, #16
 801de28:	ea6f 2313 	mvn.w	r3, r3, lsr #8
 801de2c:	b2db      	uxtb	r3, r3
 801de2e:	fb12 f207 	smulbb	r2, r2, r7
 801de32:	f005 05f8 	and.w	r5, r5, #248	@ 0xf8
 801de36:	fb05 2503 	mla	r5, r5, r3, r2
 801de3a:	f3c1 2407 	ubfx	r4, r1, #8, #8
 801de3e:	10f2      	asrs	r2, r6, #3
 801de40:	b2c8      	uxtb	r0, r1
 801de42:	00f6      	lsls	r6, r6, #3
 801de44:	fb14 f407 	smulbb	r4, r4, r7
 801de48:	f002 02fc 	and.w	r2, r2, #252	@ 0xfc
 801de4c:	b2f6      	uxtb	r6, r6
 801de4e:	fb10 f007 	smulbb	r0, r0, r7
 801de52:	fb02 4203 	mla	r2, r2, r3, r4
 801de56:	b2ad      	uxth	r5, r5
 801de58:	fb06 0303 	mla	r3, r6, r3, r0
 801de5c:	b299      	uxth	r1, r3
 801de5e:	b294      	uxth	r4, r2
 801de60:	1c6b      	adds	r3, r5, #1
 801de62:	eb03 2515 	add.w	r5, r3, r5, lsr #8
 801de66:	1c62      	adds	r2, r4, #1
 801de68:	1c4b      	adds	r3, r1, #1
 801de6a:	eb03 2311 	add.w	r3, r3, r1, lsr #8
 801de6e:	eb02 2214 	add.w	r2, r2, r4, lsr #8
 801de72:	f405 4578 	and.w	r5, r5, #63488	@ 0xf800
 801de76:	f3c3 23c4 	ubfx	r3, r3, #11, #5
 801de7a:	0952      	lsrs	r2, r2, #5
 801de7c:	f402 62fc 	and.w	r2, r2, #2016	@ 0x7e0
 801de80:	432b      	orrs	r3, r5
 801de82:	4313      	orrs	r3, r2
 801de84:	9a02      	ldr	r2, [sp, #8]
 801de86:	8013      	strh	r3, [r2, #0]
 801de88:	b005      	add	sp, #20
 801de8a:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 801de8e:	2500      	movs	r5, #0
 801de90:	e6ef      	b.n	801dc72 <_ZNK8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKmssiihhh+0x3c>
 801de92:	2100      	movs	r1, #0
 801de94:	460d      	mov	r5, r1
 801de96:	e6f7      	b.n	801dc88 <_ZNK8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKmssiihhh+0x52>
 801de98:	2100      	movs	r1, #0
 801de9a:	e6f5      	b.n	801dc88 <_ZNK8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKmssiihhh+0x52>
 801de9c:	4631      	mov	r1, r6
 801de9e:	e6f3      	b.n	801dc88 <_ZNK8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKmssiihhh+0x52>
 801dea0:	2400      	movs	r4, #0
 801dea2:	e702      	b.n	801dcaa <_ZNK8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKmssiihhh+0x74>
 801dea4:	2200      	movs	r2, #0
 801dea6:	4614      	mov	r4, r2
 801dea8:	e70b      	b.n	801dcc2 <_ZNK8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKmssiihhh+0x8c>
 801deaa:	4602      	mov	r2, r0
 801deac:	4604      	mov	r4, r0
 801deae:	e708      	b.n	801dcc2 <_ZNK8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKmssiihhh+0x8c>
 801deb0:	2200      	movs	r2, #0
 801deb2:	e706      	b.n	801dcc2 <_ZNK8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKmssiihhh+0x8c>
 801deb4:	4632      	mov	r2, r6
 801deb6:	e704      	b.n	801dcc2 <_ZNK8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKmssiihhh+0x8c>

0801deb8 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff>:
 801deb8:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 801debc:	b09d      	sub	sp, #116	@ 0x74
 801debe:	e9dd 4627 	ldrd	r4, r6, [sp, #156]	@ 0x9c
 801dec2:	9219      	str	r2, [sp, #100]	@ 0x64
 801dec4:	9307      	str	r3, [sp, #28]
 801dec6:	9a2b      	ldr	r2, [sp, #172]	@ 0xac
 801dec8:	f89d 30bc 	ldrb.w	r3, [sp, #188]	@ 0xbc
 801decc:	931a      	str	r3, [sp, #104]	@ 0x68
 801dece:	9117      	str	r1, [sp, #92]	@ 0x5c
 801ded0:	e9dd 132c 	ldrd	r1, r3, [sp, #176]	@ 0xb0
 801ded4:	901b      	str	r0, [sp, #108]	@ 0x6c
 801ded6:	6850      	ldr	r0, [r2, #4]
 801ded8:	6812      	ldr	r2, [r2, #0]
 801deda:	fb00 1303 	mla	r3, r0, r3, r1
 801dede:	eb02 0343 	add.w	r3, r2, r3, lsl #1
 801dee2:	930a      	str	r3, [sp, #40]	@ 0x28
 801dee4:	9b2e      	ldr	r3, [sp, #184]	@ 0xb8
 801dee6:	681b      	ldr	r3, [r3, #0]
 801dee8:	9310      	str	r3, [sp, #64]	@ 0x40
 801deea:	f8bd 3068 	ldrh.w	r3, [sp, #104]	@ 0x68
 801deee:	930b      	str	r3, [sp, #44]	@ 0x2c
 801def0:	9b17      	ldr	r3, [sp, #92]	@ 0x5c
 801def2:	2b00      	cmp	r3, #0
 801def4:	dc03      	bgt.n	801defe <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x46>
 801def6:	9b19      	ldr	r3, [sp, #100]	@ 0x64
 801def8:	2b00      	cmp	r3, #0
 801defa:	f340 8375 	ble.w	801e5e8 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x730>
 801defe:	9b2e      	ldr	r3, [sp, #184]	@ 0xb8
 801df00:	f9b3 1008 	ldrsh.w	r1, [r3, #8]
 801df04:	f9b3 200c 	ldrsh.w	r2, [r3, #12]
 801df08:	1e48      	subs	r0, r1, #1
 801df0a:	1e57      	subs	r7, r2, #1
 801df0c:	9b07      	ldr	r3, [sp, #28]
 801df0e:	2b00      	cmp	r3, #0
 801df10:	f340 818e 	ble.w	801e230 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x378>
 801df14:	ea5f 4c24 	movs.w	ip, r4, asr #16
 801df18:	ea4f 4326 	mov.w	r3, r6, asr #16
 801df1c:	d406      	bmi.n	801df2c <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x74>
 801df1e:	4584      	cmp	ip, r0
 801df20:	da04      	bge.n	801df2c <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x74>
 801df22:	2b00      	cmp	r3, #0
 801df24:	db02      	blt.n	801df2c <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x74>
 801df26:	42bb      	cmp	r3, r7
 801df28:	f2c0 8183 	blt.w	801e232 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x37a>
 801df2c:	f11c 0c01 	adds.w	ip, ip, #1
 801df30:	f100 8173 	bmi.w	801e21a <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x362>
 801df34:	4561      	cmp	r1, ip
 801df36:	f2c0 8170 	blt.w	801e21a <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x362>
 801df3a:	3301      	adds	r3, #1
 801df3c:	f100 816d 	bmi.w	801e21a <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x362>
 801df40:	429a      	cmp	r2, r3
 801df42:	f2c0 816a 	blt.w	801e21a <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x362>
 801df46:	9b07      	ldr	r3, [sp, #28]
 801df48:	9f0a      	ldr	r7, [sp, #40]	@ 0x28
 801df4a:	9318      	str	r3, [sp, #96]	@ 0x60
 801df4c:	9b18      	ldr	r3, [sp, #96]	@ 0x60
 801df4e:	2b00      	cmp	r3, #0
 801df50:	f340 818c 	ble.w	801e26c <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3b4>
 801df54:	9a2e      	ldr	r2, [sp, #184]	@ 0xb8
 801df56:	9b2e      	ldr	r3, [sp, #184]	@ 0xb8
 801df58:	f8d2 e00c 	ldr.w	lr, [r2, #12]
 801df5c:	689b      	ldr	r3, [r3, #8]
 801df5e:	1422      	asrs	r2, r4, #16
 801df60:	ea4f 4c26 	mov.w	ip, r6, asr #16
 801df64:	f3c4 3003 	ubfx	r0, r4, #12, #4
 801df68:	f3c6 3103 	ubfx	r1, r6, #12, #4
 801df6c:	f100 81cd 	bmi.w	801e30a <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x452>
 801df70:	f103 38ff 	add.w	r8, r3, #4294967295
 801df74:	4542      	cmp	r2, r8
 801df76:	f280 81c8 	bge.w	801e30a <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x452>
 801df7a:	f1bc 0f00 	cmp.w	ip, #0
 801df7e:	f2c0 81c4 	blt.w	801e30a <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x452>
 801df82:	f10e 38ff 	add.w	r8, lr, #4294967295
 801df86:	45c4      	cmp	ip, r8
 801df88:	f280 81bf 	bge.w	801e30a <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x452>
 801df8c:	b21b      	sxth	r3, r3
 801df8e:	fb0c 2203 	mla	r2, ip, r3, r2
 801df92:	9d10      	ldr	r5, [sp, #64]	@ 0x40
 801df94:	eb05 0882 	add.w	r8, r5, r2, lsl #2
 801df98:	f855 2022 	ldr.w	r2, [r5, r2, lsl #2]
 801df9c:	ea4f 6e12 	mov.w	lr, r2, lsr #24
 801dfa0:	2800      	cmp	r0, #0
 801dfa2:	f000 81a9 	beq.w	801e2f8 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x440>
 801dfa6:	f8d8 5004 	ldr.w	r5, [r8, #4]
 801dfaa:	950c      	str	r5, [sp, #48]	@ 0x30
 801dfac:	0e2d      	lsrs	r5, r5, #24
 801dfae:	9513      	str	r5, [sp, #76]	@ 0x4c
 801dfb0:	b181      	cbz	r1, 801dfd4 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x11c>
 801dfb2:	f103 4380 	add.w	r3, r3, #1073741824	@ 0x40000000
 801dfb6:	3b01      	subs	r3, #1
 801dfb8:	009b      	lsls	r3, r3, #2
 801dfba:	3304      	adds	r3, #4
 801dfbc:	eb08 0c03 	add.w	ip, r8, r3
 801dfc0:	f858 3003 	ldr.w	r3, [r8, r3]
 801dfc4:	9308      	str	r3, [sp, #32]
 801dfc6:	0e1b      	lsrs	r3, r3, #24
 801dfc8:	9311      	str	r3, [sp, #68]	@ 0x44
 801dfca:	f8dc 3004 	ldr.w	r3, [ip, #4]
 801dfce:	930d      	str	r3, [sp, #52]	@ 0x34
 801dfd0:	0e1b      	lsrs	r3, r3, #24
 801dfd2:	9314      	str	r3, [sp, #80]	@ 0x50
 801dfd4:	b280      	uxth	r0, r0
 801dfd6:	b289      	uxth	r1, r1
 801dfd8:	fb00 f901 	mul.w	r9, r0, r1
 801dfdc:	ebc9 1101 	rsb	r1, r9, r1, lsl #4
 801dfe0:	0100      	lsls	r0, r0, #4
 801dfe2:	eba0 0809 	sub.w	r8, r0, r9
 801dfe6:	b289      	uxth	r1, r1
 801dfe8:	f5c0 7380 	rsb	r3, r0, #256	@ 0x100
 801dfec:	9813      	ldr	r0, [sp, #76]	@ 0x4c
 801dfee:	9d11      	ldr	r5, [sp, #68]	@ 0x44
 801dff0:	fa1f f888 	uxth.w	r8, r8
 801dff4:	1a5b      	subs	r3, r3, r1
 801dff6:	b29b      	uxth	r3, r3
 801dff8:	fb08 f000 	mul.w	r0, r8, r0
 801dffc:	fb03 000e 	mla	r0, r3, lr, r0
 801e000:	fb01 0005 	mla	r0, r1, r5, r0
 801e004:	9d14      	ldr	r5, [sp, #80]	@ 0x50
 801e006:	fb09 0005 	mla	r0, r9, r5, r0
 801e00a:	f3c0 2007 	ubfx	r0, r0, #8, #8
 801e00e:	2800      	cmp	r0, #0
 801e010:	f000 80fa 	beq.w	801e208 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x350>
 801e014:	f1be 0fff 	cmp.w	lr, #255	@ 0xff
 801e018:	d01b      	beq.n	801e052 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x19a>
 801e01a:	f002 1aff 	and.w	sl, r2, #16711935	@ 0xff00ff
 801e01e:	fb0e fa0a 	mul.w	sl, lr, sl
 801e022:	f402 427f 	and.w	r2, r2, #65280	@ 0xff00
 801e026:	fb0e fe02 	mul.w	lr, lr, r2
 801e02a:	ea4f 221a 	mov.w	r2, sl, lsr #8
 801e02e:	f002 12ff 	and.w	r2, r2, #16711935	@ 0xff00ff
 801e032:	f10a 1a01 	add.w	sl, sl, #65537	@ 0x10001
 801e036:	f50e 7c80 	add.w	ip, lr, #256	@ 0x100
 801e03a:	4452      	add	r2, sl
 801e03c:	eb0c 2c1e 	add.w	ip, ip, lr, lsr #8
 801e040:	0a12      	lsrs	r2, r2, #8
 801e042:	ea4f 2c1c 	mov.w	ip, ip, lsr #8
 801e046:	f002 12ff 	and.w	r2, r2, #16711935	@ 0xff00ff
 801e04a:	f40c 4c7f 	and.w	ip, ip, #65280	@ 0xff00
 801e04e:	ea42 020c 	orr.w	r2, r2, ip
 801e052:	9d13      	ldr	r5, [sp, #76]	@ 0x4c
 801e054:	2dff      	cmp	r5, #255	@ 0xff
 801e056:	d021      	beq.n	801e09c <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1e4>
 801e058:	9d0c      	ldr	r5, [sp, #48]	@ 0x30
 801e05a:	f005 1bff 	and.w	fp, r5, #16711935	@ 0xff00ff
 801e05e:	9d13      	ldr	r5, [sp, #76]	@ 0x4c
 801e060:	fb05 fb0b 	mul.w	fp, r5, fp
 801e064:	9d0c      	ldr	r5, [sp, #48]	@ 0x30
 801e066:	f405 4a7f 	and.w	sl, r5, #65280	@ 0xff00
 801e06a:	9d13      	ldr	r5, [sp, #76]	@ 0x4c
 801e06c:	ea4f 2e1b 	mov.w	lr, fp, lsr #8
 801e070:	fb05 fa0a 	mul.w	sl, r5, sl
 801e074:	f00e 1eff 	and.w	lr, lr, #16711935	@ 0xff00ff
 801e078:	f10b 1b01 	add.w	fp, fp, #65537	@ 0x10001
 801e07c:	f50a 7c80 	add.w	ip, sl, #256	@ 0x100
 801e080:	44de      	add	lr, fp
 801e082:	eb0c 2a1a 	add.w	sl, ip, sl, lsr #8
 801e086:	ea4f 2e1e 	mov.w	lr, lr, lsr #8
 801e08a:	ea4f 2a1a 	mov.w	sl, sl, lsr #8
 801e08e:	f00e 1eff 	and.w	lr, lr, #16711935	@ 0xff00ff
 801e092:	f40a 4a7f 	and.w	sl, sl, #65280	@ 0xff00
 801e096:	ea4e 050a 	orr.w	r5, lr, sl
 801e09a:	950c      	str	r5, [sp, #48]	@ 0x30
 801e09c:	9d11      	ldr	r5, [sp, #68]	@ 0x44
 801e09e:	2dff      	cmp	r5, #255	@ 0xff
 801e0a0:	d021      	beq.n	801e0e6 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x22e>
 801e0a2:	9d08      	ldr	r5, [sp, #32]
 801e0a4:	f005 1bff 	and.w	fp, r5, #16711935	@ 0xff00ff
 801e0a8:	9d11      	ldr	r5, [sp, #68]	@ 0x44
 801e0aa:	fb05 fb0b 	mul.w	fp, r5, fp
 801e0ae:	9d08      	ldr	r5, [sp, #32]
 801e0b0:	f405 4a7f 	and.w	sl, r5, #65280	@ 0xff00
 801e0b4:	9d11      	ldr	r5, [sp, #68]	@ 0x44
 801e0b6:	ea4f 2e1b 	mov.w	lr, fp, lsr #8
 801e0ba:	fb05 fa0a 	mul.w	sl, r5, sl
 801e0be:	f00e 1eff 	and.w	lr, lr, #16711935	@ 0xff00ff
 801e0c2:	f10b 1b01 	add.w	fp, fp, #65537	@ 0x10001
 801e0c6:	f50a 7c80 	add.w	ip, sl, #256	@ 0x100
 801e0ca:	44de      	add	lr, fp
 801e0cc:	eb0c 2a1a 	add.w	sl, ip, sl, lsr #8
 801e0d0:	ea4f 2e1e 	mov.w	lr, lr, lsr #8
 801e0d4:	ea4f 2a1a 	mov.w	sl, sl, lsr #8
 801e0d8:	f00e 1eff 	and.w	lr, lr, #16711935	@ 0xff00ff
 801e0dc:	f40a 4a7f 	and.w	sl, sl, #65280	@ 0xff00
 801e0e0:	ea4e 050a 	orr.w	r5, lr, sl
 801e0e4:	9508      	str	r5, [sp, #32]
 801e0e6:	9d14      	ldr	r5, [sp, #80]	@ 0x50
 801e0e8:	2dff      	cmp	r5, #255	@ 0xff
 801e0ea:	d021      	beq.n	801e130 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x278>
 801e0ec:	9d0d      	ldr	r5, [sp, #52]	@ 0x34
 801e0ee:	f005 1bff 	and.w	fp, r5, #16711935	@ 0xff00ff
 801e0f2:	9d14      	ldr	r5, [sp, #80]	@ 0x50
 801e0f4:	fb05 fb0b 	mul.w	fp, r5, fp
 801e0f8:	9d0d      	ldr	r5, [sp, #52]	@ 0x34
 801e0fa:	f405 4a7f 	and.w	sl, r5, #65280	@ 0xff00
 801e0fe:	9d14      	ldr	r5, [sp, #80]	@ 0x50
 801e100:	ea4f 2e1b 	mov.w	lr, fp, lsr #8
 801e104:	fb05 fa0a 	mul.w	sl, r5, sl
 801e108:	f00e 1eff 	and.w	lr, lr, #16711935	@ 0xff00ff
 801e10c:	f10b 1b01 	add.w	fp, fp, #65537	@ 0x10001
 801e110:	f50a 7c80 	add.w	ip, sl, #256	@ 0x100
 801e114:	44de      	add	lr, fp
 801e116:	eb0c 2a1a 	add.w	sl, ip, sl, lsr #8
 801e11a:	ea4f 2e1e 	mov.w	lr, lr, lsr #8
 801e11e:	ea4f 2a1a 	mov.w	sl, sl, lsr #8
 801e122:	f00e 1eff 	and.w	lr, lr, #16711935	@ 0xff00ff
 801e126:	f40a 4a7f 	and.w	sl, sl, #65280	@ 0xff00
 801e12a:	ea4e 050a 	orr.w	r5, lr, sl
 801e12e:	950d      	str	r5, [sp, #52]	@ 0x34
 801e130:	9d0c      	ldr	r5, [sp, #48]	@ 0x30
 801e132:	f005 1cff 	and.w	ip, r5, #16711935	@ 0xff00ff
 801e136:	9d08      	ldr	r5, [sp, #32]
 801e138:	f002 1eff 	and.w	lr, r2, #16711935	@ 0xff00ff
 801e13c:	fb08 fc0c 	mul.w	ip, r8, ip
 801e140:	fb03 cc0e 	mla	ip, r3, lr, ip
 801e144:	f005 1eff 	and.w	lr, r5, #16711935	@ 0xff00ff
 801e148:	9d0d      	ldr	r5, [sp, #52]	@ 0x34
 801e14a:	fb01 cc0e 	mla	ip, r1, lr, ip
 801e14e:	f005 1eff 	and.w	lr, r5, #16711935	@ 0xff00ff
 801e152:	9d0c      	ldr	r5, [sp, #48]	@ 0x30
 801e154:	fb09 cc0e 	mla	ip, r9, lr, ip
 801e158:	f405 4e7f 	and.w	lr, r5, #65280	@ 0xff00
 801e15c:	fb08 f80e 	mul.w	r8, r8, lr
 801e160:	f402 427f 	and.w	r2, r2, #65280	@ 0xff00
 801e164:	fb03 8202 	mla	r2, r3, r2, r8
 801e168:	9b08      	ldr	r3, [sp, #32]
 801e16a:	9d0b      	ldr	r5, [sp, #44]	@ 0x2c
 801e16c:	f403 4a7f 	and.w	sl, r3, #65280	@ 0xff00
 801e170:	9b0d      	ldr	r3, [sp, #52]	@ 0x34
 801e172:	fb01 220a 	mla	r2, r1, sl, r2
 801e176:	f403 417f 	and.w	r1, r3, #65280	@ 0xff00
 801e17a:	fb09 2901 	mla	r9, r9, r1, r2
 801e17e:	9a0b      	ldr	r2, [sp, #44]	@ 0x2c
 801e180:	883b      	ldrh	r3, [r7, #0]
 801e182:	4342      	muls	r2, r0
 801e184:	ea4f 2c1c 	mov.w	ip, ip, lsr #8
 801e188:	ea4f 2919 	mov.w	r9, r9, lsr #8
 801e18c:	1c50      	adds	r0, r2, #1
 801e18e:	f00c 1cff 	and.w	ip, ip, #16711935	@ 0xff00ff
 801e192:	f409 497f 	and.w	r9, r9, #65280	@ 0xff00
 801e196:	ea4c 0c09 	orr.w	ip, ip, r9
 801e19a:	eb00 2012 	add.w	r0, r0, r2, lsr #8
 801e19e:	1219      	asrs	r1, r3, #8
 801e1a0:	ea4f 421c 	mov.w	r2, ip, lsr #16
 801e1a4:	ea6f 2010 	mvn.w	r0, r0, lsr #8
 801e1a8:	b2c0      	uxtb	r0, r0
 801e1aa:	fb12 f205 	smulbb	r2, r2, r5
 801e1ae:	f001 01f8 	and.w	r1, r1, #248	@ 0xf8
 801e1b2:	fb01 2100 	mla	r1, r1, r0, r2
 801e1b6:	f3cc 2e07 	ubfx	lr, ip, #8, #8
 801e1ba:	10da      	asrs	r2, r3, #3
 801e1bc:	fa5f fc8c 	uxtb.w	ip, ip
 801e1c0:	00db      	lsls	r3, r3, #3
 801e1c2:	fb1c fc05 	smulbb	ip, ip, r5
 801e1c6:	b2db      	uxtb	r3, r3
 801e1c8:	b289      	uxth	r1, r1
 801e1ca:	fb03 c300 	mla	r3, r3, r0, ip
 801e1ce:	fa1f fc83 	uxth.w	ip, r3
 801e1d2:	1c4b      	adds	r3, r1, #1
 801e1d4:	eb03 2111 	add.w	r1, r3, r1, lsr #8
 801e1d8:	f002 02fc 	and.w	r2, r2, #252	@ 0xfc
 801e1dc:	fb1e fe05 	smulbb	lr, lr, r5
 801e1e0:	f10c 0301 	add.w	r3, ip, #1
 801e1e4:	fb02 e200 	mla	r2, r2, r0, lr
 801e1e8:	eb03 231c 	add.w	r3, r3, ip, lsr #8
 801e1ec:	b292      	uxth	r2, r2
 801e1ee:	f401 4178 	and.w	r1, r1, #63488	@ 0xf800
 801e1f2:	f3c3 23c4 	ubfx	r3, r3, #11, #5
 801e1f6:	430b      	orrs	r3, r1
 801e1f8:	1c51      	adds	r1, r2, #1
 801e1fa:	eb01 2212 	add.w	r2, r1, r2, lsr #8
 801e1fe:	0952      	lsrs	r2, r2, #5
 801e200:	f402 62fc 	and.w	r2, r2, #2016	@ 0x7e0
 801e204:	4313      	orrs	r3, r2
 801e206:	803b      	strh	r3, [r7, #0]
 801e208:	9b29      	ldr	r3, [sp, #164]	@ 0xa4
 801e20a:	441c      	add	r4, r3
 801e20c:	9b2a      	ldr	r3, [sp, #168]	@ 0xa8
 801e20e:	441e      	add	r6, r3
 801e210:	9b18      	ldr	r3, [sp, #96]	@ 0x60
 801e212:	3b01      	subs	r3, #1
 801e214:	3702      	adds	r7, #2
 801e216:	9318      	str	r3, [sp, #96]	@ 0x60
 801e218:	e698      	b.n	801df4c <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x94>
 801e21a:	9b29      	ldr	r3, [sp, #164]	@ 0xa4
 801e21c:	441c      	add	r4, r3
 801e21e:	9b2a      	ldr	r3, [sp, #168]	@ 0xa8
 801e220:	441e      	add	r6, r3
 801e222:	9b07      	ldr	r3, [sp, #28]
 801e224:	3b01      	subs	r3, #1
 801e226:	9307      	str	r3, [sp, #28]
 801e228:	9b0a      	ldr	r3, [sp, #40]	@ 0x28
 801e22a:	3302      	adds	r3, #2
 801e22c:	930a      	str	r3, [sp, #40]	@ 0x28
 801e22e:	e66d      	b.n	801df0c <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x54>
 801e230:	d023      	beq.n	801e27a <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3c2>
 801e232:	9b07      	ldr	r3, [sp, #28]
 801e234:	9829      	ldr	r0, [sp, #164]	@ 0xa4
 801e236:	3b01      	subs	r3, #1
 801e238:	fb00 4003 	mla	r0, r0, r3, r4
 801e23c:	1400      	asrs	r0, r0, #16
 801e23e:	f53f ae82 	bmi.w	801df46 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x8e>
 801e242:	3901      	subs	r1, #1
 801e244:	4288      	cmp	r0, r1
 801e246:	f6bf ae7e 	bge.w	801df46 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x8e>
 801e24a:	992a      	ldr	r1, [sp, #168]	@ 0xa8
 801e24c:	fb01 6303 	mla	r3, r1, r3, r6
 801e250:	141b      	asrs	r3, r3, #16
 801e252:	f53f ae78 	bmi.w	801df46 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x8e>
 801e256:	3a01      	subs	r2, #1
 801e258:	4293      	cmp	r3, r2
 801e25a:	f6bf ae74 	bge.w	801df46 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x8e>
 801e25e:	f8dd b01c 	ldr.w	fp, [sp, #28]
 801e262:	f8dd 9028 	ldr.w	r9, [sp, #40]	@ 0x28
 801e266:	f1bb 0f00 	cmp.w	fp, #0
 801e26a:	dc6c      	bgt.n	801e346 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x48e>
 801e26c:	9b07      	ldr	r3, [sp, #28]
 801e26e:	ea23 75e3 	bic.w	r5, r3, r3, asr #31
 801e272:	9b0a      	ldr	r3, [sp, #40]	@ 0x28
 801e274:	eb03 0345 	add.w	r3, r3, r5, lsl #1
 801e278:	930a      	str	r3, [sp, #40]	@ 0x28
 801e27a:	9b17      	ldr	r3, [sp, #92]	@ 0x5c
 801e27c:	2b00      	cmp	r3, #0
 801e27e:	f340 81b3 	ble.w	801e5e8 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x730>
 801e282:	ee30 0a04 	vadd.f32	s0, s0, s8
 801e286:	eeb7 7a00 	vmov.f32	s14, #112	@ 0x3f800000  1.0
 801e28a:	eec7 7a00 	vdiv.f32	s15, s14, s0
 801e28e:	9b26      	ldr	r3, [sp, #152]	@ 0x98
 801e290:	ee70 0aa4 	vadd.f32	s1, s1, s9
 801e294:	ee31 1a05 	vadd.f32	s2, s2, s10
 801e298:	ee20 7aa7 	vmul.f32	s14, s1, s15
 801e29c:	eef0 6a62 	vmov.f32	s13, s5
 801e2a0:	ee61 7a27 	vmul.f32	s15, s2, s15
 801e2a4:	eefe 6ac8 	vcvt.s32.f32	s13, s13, #16
 801e2a8:	ee77 2a62 	vsub.f32	s5, s14, s5
 801e2ac:	ee16 4a90 	vmov	r4, s13
 801e2b0:	eefe 2ac8 	vcvt.s32.f32	s5, s5, #16
 801e2b4:	eef0 6a43 	vmov.f32	s13, s6
 801e2b8:	ee37 3ac3 	vsub.f32	s6, s15, s6
 801e2bc:	ee12 2a90 	vmov	r2, s5
 801e2c0:	eebe 3ac8 	vcvt.s32.f32	s6, s6, #16
 801e2c4:	fb92 f3f3 	sdiv	r3, r2, r3
 801e2c8:	ee13 2a10 	vmov	r2, s6
 801e2cc:	9329      	str	r3, [sp, #164]	@ 0xa4
 801e2ce:	9b26      	ldr	r3, [sp, #152]	@ 0x98
 801e2d0:	fb92 f3f3 	sdiv	r3, r2, r3
 801e2d4:	932a      	str	r3, [sp, #168]	@ 0xa8
 801e2d6:	9b17      	ldr	r3, [sp, #92]	@ 0x5c
 801e2d8:	9a19      	ldr	r2, [sp, #100]	@ 0x64
 801e2da:	3b01      	subs	r3, #1
 801e2dc:	eefe 6ac8 	vcvt.s32.f32	s13, s13, #16
 801e2e0:	9317      	str	r3, [sp, #92]	@ 0x5c
 801e2e2:	9b26      	ldr	r3, [sp, #152]	@ 0x98
 801e2e4:	bf08      	it	eq
 801e2e6:	4613      	moveq	r3, r2
 801e2e8:	ee16 6a90 	vmov	r6, s13
 801e2ec:	9307      	str	r3, [sp, #28]
 801e2ee:	eeb0 3a67 	vmov.f32	s6, s15
 801e2f2:	eef0 2a47 	vmov.f32	s5, s14
 801e2f6:	e5fb      	b.n	801def0 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x38>
 801e2f8:	2900      	cmp	r1, #0
 801e2fa:	f43f ae6b 	beq.w	801dfd4 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x11c>
 801e2fe:	f858 3023 	ldr.w	r3, [r8, r3, lsl #2]
 801e302:	9308      	str	r3, [sp, #32]
 801e304:	0e1b      	lsrs	r3, r3, #24
 801e306:	9311      	str	r3, [sp, #68]	@ 0x44
 801e308:	e664      	b.n	801dfd4 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x11c>
 801e30a:	f112 0801 	adds.w	r8, r2, #1
 801e30e:	f53f af7b 	bmi.w	801e208 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x350>
 801e312:	4543      	cmp	r3, r8
 801e314:	f6ff af78 	blt.w	801e208 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x350>
 801e318:	f11c 0801 	adds.w	r8, ip, #1
 801e31c:	f53f af74 	bmi.w	801e208 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x350>
 801e320:	45c6      	cmp	lr, r8
 801e322:	f6ff af71 	blt.w	801e208 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x350>
 801e326:	9d1a      	ldr	r5, [sp, #104]	@ 0x68
 801e328:	9201      	str	r2, [sp, #4]
 801e32a:	fa0f f28e 	sxth.w	r2, lr
 801e32e:	e9cd 1504 	strd	r1, r5, [sp, #16]
 801e332:	e9cd c002 	strd	ip, r0, [sp, #8]
 801e336:	9200      	str	r2, [sp, #0]
 801e338:	b21b      	sxth	r3, r3
 801e33a:	9a10      	ldr	r2, [sp, #64]	@ 0x40
 801e33c:	981b      	ldr	r0, [sp, #108]	@ 0x6c
 801e33e:	4639      	mov	r1, r7
 801e340:	f7ff fc79 	bl	801dc36 <_ZNK8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKmssiihhh>
 801e344:	e760      	b.n	801e208 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x350>
 801e346:	9b2e      	ldr	r3, [sp, #184]	@ 0xb8
 801e348:	9d10      	ldr	r5, [sp, #64]	@ 0x40
 801e34a:	f9b3 1008 	ldrsh.w	r1, [r3, #8]
 801e34e:	1427      	asrs	r7, r4, #16
 801e350:	1433      	asrs	r3, r6, #16
 801e352:	fb01 7303 	mla	r3, r1, r3, r7
 801e356:	eb05 0783 	add.w	r7, r5, r3, lsl #2
 801e35a:	f855 3023 	ldr.w	r3, [r5, r3, lsl #2]
 801e35e:	f3c4 3203 	ubfx	r2, r4, #12, #4
 801e362:	f3c6 3003 	ubfx	r0, r6, #12, #4
 801e366:	ea4f 6c13 	mov.w	ip, r3, lsr #24
 801e36a:	2a00      	cmp	r2, #0
 801e36c:	f000 8133 	beq.w	801e5d6 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x71e>
 801e370:	687d      	ldr	r5, [r7, #4]
 801e372:	950e      	str	r5, [sp, #56]	@ 0x38
 801e374:	0e2d      	lsrs	r5, r5, #24
 801e376:	9515      	str	r5, [sp, #84]	@ 0x54
 801e378:	b178      	cbz	r0, 801e39a <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x4e2>
 801e37a:	f101 4180 	add.w	r1, r1, #1073741824	@ 0x40000000
 801e37e:	3901      	subs	r1, #1
 801e380:	0089      	lsls	r1, r1, #2
 801e382:	3104      	adds	r1, #4
 801e384:	eb07 0e01 	add.w	lr, r7, r1
 801e388:	5879      	ldr	r1, [r7, r1]
 801e38a:	9109      	str	r1, [sp, #36]	@ 0x24
 801e38c:	0e09      	lsrs	r1, r1, #24
 801e38e:	9112      	str	r1, [sp, #72]	@ 0x48
 801e390:	f8de 1004 	ldr.w	r1, [lr, #4]
 801e394:	910f      	str	r1, [sp, #60]	@ 0x3c
 801e396:	0e09      	lsrs	r1, r1, #24
 801e398:	9116      	str	r1, [sp, #88]	@ 0x58
 801e39a:	b292      	uxth	r2, r2
 801e39c:	b280      	uxth	r0, r0
 801e39e:	fb02 f800 	mul.w	r8, r2, r0
 801e3a2:	ebc8 1000 	rsb	r0, r8, r0, lsl #4
 801e3a6:	0112      	lsls	r2, r2, #4
 801e3a8:	eba2 0e08 	sub.w	lr, r2, r8
 801e3ac:	b280      	uxth	r0, r0
 801e3ae:	f5c2 7280 	rsb	r2, r2, #256	@ 0x100
 801e3b2:	9915      	ldr	r1, [sp, #84]	@ 0x54
 801e3b4:	9d12      	ldr	r5, [sp, #72]	@ 0x48
 801e3b6:	fa1f fe8e 	uxth.w	lr, lr
 801e3ba:	1a12      	subs	r2, r2, r0
 801e3bc:	b292      	uxth	r2, r2
 801e3be:	fb0e f101 	mul.w	r1, lr, r1
 801e3c2:	fb02 110c 	mla	r1, r2, ip, r1
 801e3c6:	fb00 1105 	mla	r1, r0, r5, r1
 801e3ca:	9d16      	ldr	r5, [sp, #88]	@ 0x58
 801e3cc:	fb08 1105 	mla	r1, r8, r5, r1
 801e3d0:	f3c1 2107 	ubfx	r1, r1, #8, #8
 801e3d4:	2900      	cmp	r1, #0
 801e3d6:	f000 80f5 	beq.w	801e5c4 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x70c>
 801e3da:	f1bc 0fff 	cmp.w	ip, #255	@ 0xff
 801e3de:	d019      	beq.n	801e414 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x55c>
 801e3e0:	f003 1aff 	and.w	sl, r3, #16711935	@ 0xff00ff
 801e3e4:	fb0c fa0a 	mul.w	sl, ip, sl
 801e3e8:	f403 437f 	and.w	r3, r3, #65280	@ 0xff00
 801e3ec:	fb0c fc03 	mul.w	ip, ip, r3
 801e3f0:	ea4f 231a 	mov.w	r3, sl, lsr #8
 801e3f4:	f003 13ff 	and.w	r3, r3, #16711935	@ 0xff00ff
 801e3f8:	f10a 1a01 	add.w	sl, sl, #65537	@ 0x10001
 801e3fc:	f50c 7780 	add.w	r7, ip, #256	@ 0x100
 801e400:	4453      	add	r3, sl
 801e402:	eb07 271c 	add.w	r7, r7, ip, lsr #8
 801e406:	0a1b      	lsrs	r3, r3, #8
 801e408:	0a3f      	lsrs	r7, r7, #8
 801e40a:	f003 13ff 	and.w	r3, r3, #16711935	@ 0xff00ff
 801e40e:	f407 477f 	and.w	r7, r7, #65280	@ 0xff00
 801e412:	433b      	orrs	r3, r7
 801e414:	9d15      	ldr	r5, [sp, #84]	@ 0x54
 801e416:	2dff      	cmp	r5, #255	@ 0xff
 801e418:	d020      	beq.n	801e45c <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x5a4>
 801e41a:	9d0e      	ldr	r5, [sp, #56]	@ 0x38
 801e41c:	f005 17ff 	and.w	r7, r5, #16711935	@ 0xff00ff
 801e420:	9d15      	ldr	r5, [sp, #84]	@ 0x54
 801e422:	436f      	muls	r7, r5
 801e424:	9d0e      	ldr	r5, [sp, #56]	@ 0x38
 801e426:	f405 4a7f 	and.w	sl, r5, #65280	@ 0xff00
 801e42a:	9d15      	ldr	r5, [sp, #84]	@ 0x54
 801e42c:	ea4f 2c17 	mov.w	ip, r7, lsr #8
 801e430:	fb05 fa0a 	mul.w	sl, r5, sl
 801e434:	f107 1701 	add.w	r7, r7, #65537	@ 0x10001
 801e438:	f00c 1cff 	and.w	ip, ip, #16711935	@ 0xff00ff
 801e43c:	44bc      	add	ip, r7
 801e43e:	f50a 7780 	add.w	r7, sl, #256	@ 0x100
 801e442:	eb07 2a1a 	add.w	sl, r7, sl, lsr #8
 801e446:	ea4f 2c1c 	mov.w	ip, ip, lsr #8
 801e44a:	ea4f 2a1a 	mov.w	sl, sl, lsr #8
 801e44e:	f00c 1cff 	and.w	ip, ip, #16711935	@ 0xff00ff
 801e452:	f40a 4a7f 	and.w	sl, sl, #65280	@ 0xff00
 801e456:	ea4c 050a 	orr.w	r5, ip, sl
 801e45a:	950e      	str	r5, [sp, #56]	@ 0x38
 801e45c:	9d12      	ldr	r5, [sp, #72]	@ 0x48
 801e45e:	2dff      	cmp	r5, #255	@ 0xff
 801e460:	d020      	beq.n	801e4a4 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x5ec>
 801e462:	9d09      	ldr	r5, [sp, #36]	@ 0x24
 801e464:	f005 17ff 	and.w	r7, r5, #16711935	@ 0xff00ff
 801e468:	9d12      	ldr	r5, [sp, #72]	@ 0x48
 801e46a:	436f      	muls	r7, r5
 801e46c:	9d09      	ldr	r5, [sp, #36]	@ 0x24
 801e46e:	f405 4a7f 	and.w	sl, r5, #65280	@ 0xff00
 801e472:	9d12      	ldr	r5, [sp, #72]	@ 0x48
 801e474:	ea4f 2c17 	mov.w	ip, r7, lsr #8
 801e478:	fb05 fa0a 	mul.w	sl, r5, sl
 801e47c:	f107 1701 	add.w	r7, r7, #65537	@ 0x10001
 801e480:	f00c 1cff 	and.w	ip, ip, #16711935	@ 0xff00ff
 801e484:	44bc      	add	ip, r7
 801e486:	f50a 7780 	add.w	r7, sl, #256	@ 0x100
 801e48a:	eb07 2a1a 	add.w	sl, r7, sl, lsr #8
 801e48e:	ea4f 2c1c 	mov.w	ip, ip, lsr #8
 801e492:	ea4f 2a1a 	mov.w	sl, sl, lsr #8
 801e496:	f00c 1cff 	and.w	ip, ip, #16711935	@ 0xff00ff
 801e49a:	f40a 4a7f 	and.w	sl, sl, #65280	@ 0xff00
 801e49e:	ea4c 050a 	orr.w	r5, ip, sl
 801e4a2:	9509      	str	r5, [sp, #36]	@ 0x24
 801e4a4:	9d16      	ldr	r5, [sp, #88]	@ 0x58
 801e4a6:	2dff      	cmp	r5, #255	@ 0xff
 801e4a8:	d020      	beq.n	801e4ec <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x634>
 801e4aa:	9d0f      	ldr	r5, [sp, #60]	@ 0x3c
 801e4ac:	f005 17ff 	and.w	r7, r5, #16711935	@ 0xff00ff
 801e4b0:	9d16      	ldr	r5, [sp, #88]	@ 0x58
 801e4b2:	436f      	muls	r7, r5
 801e4b4:	9d0f      	ldr	r5, [sp, #60]	@ 0x3c
 801e4b6:	f405 4a7f 	and.w	sl, r5, #65280	@ 0xff00
 801e4ba:	9d16      	ldr	r5, [sp, #88]	@ 0x58
 801e4bc:	ea4f 2c17 	mov.w	ip, r7, lsr #8
 801e4c0:	fb05 fa0a 	mul.w	sl, r5, sl
 801e4c4:	f107 1701 	add.w	r7, r7, #65537	@ 0x10001
 801e4c8:	f00c 1cff 	and.w	ip, ip, #16711935	@ 0xff00ff
 801e4cc:	44bc      	add	ip, r7
 801e4ce:	f50a 7780 	add.w	r7, sl, #256	@ 0x100
 801e4d2:	eb07 2a1a 	add.w	sl, r7, sl, lsr #8
 801e4d6:	ea4f 2c1c 	mov.w	ip, ip, lsr #8
 801e4da:	ea4f 2a1a 	mov.w	sl, sl, lsr #8
 801e4de:	f00c 1cff 	and.w	ip, ip, #16711935	@ 0xff00ff
 801e4e2:	f40a 4a7f 	and.w	sl, sl, #65280	@ 0xff00
 801e4e6:	ea4c 050a 	orr.w	r5, ip, sl
 801e4ea:	950f      	str	r5, [sp, #60]	@ 0x3c
 801e4ec:	9d0e      	ldr	r5, [sp, #56]	@ 0x38
 801e4ee:	f005 17ff 	and.w	r7, r5, #16711935	@ 0xff00ff
 801e4f2:	9d09      	ldr	r5, [sp, #36]	@ 0x24
 801e4f4:	f003 1cff 	and.w	ip, r3, #16711935	@ 0xff00ff
 801e4f8:	fb0e f707 	mul.w	r7, lr, r7
 801e4fc:	fb02 770c 	mla	r7, r2, ip, r7
 801e500:	f005 1cff 	and.w	ip, r5, #16711935	@ 0xff00ff
 801e504:	9d0f      	ldr	r5, [sp, #60]	@ 0x3c
 801e506:	fb00 770c 	mla	r7, r0, ip, r7
 801e50a:	f005 1cff 	and.w	ip, r5, #16711935	@ 0xff00ff
 801e50e:	9d0e      	ldr	r5, [sp, #56]	@ 0x38
 801e510:	fb08 770c 	mla	r7, r8, ip, r7
 801e514:	f405 4c7f 	and.w	ip, r5, #65280	@ 0xff00
 801e518:	fb0e fe0c 	mul.w	lr, lr, ip
 801e51c:	f403 437f 	and.w	r3, r3, #65280	@ 0xff00
 801e520:	fb02 e303 	mla	r3, r2, r3, lr
 801e524:	9a09      	ldr	r2, [sp, #36]	@ 0x24
 801e526:	9d0b      	ldr	r5, [sp, #44]	@ 0x2c
 801e528:	f402 4a7f 	and.w	sl, r2, #65280	@ 0xff00
 801e52c:	9a0f      	ldr	r2, [sp, #60]	@ 0x3c
 801e52e:	fb00 330a 	mla	r3, r0, sl, r3
 801e532:	f402 4c7f 	and.w	ip, r2, #65280	@ 0xff00
 801e536:	fb08 3c0c 	mla	ip, r8, ip, r3
 801e53a:	9b0b      	ldr	r3, [sp, #44]	@ 0x2c
 801e53c:	f8b9 0000 	ldrh.w	r0, [r9]
 801e540:	4359      	muls	r1, r3
 801e542:	0a3f      	lsrs	r7, r7, #8
 801e544:	ea4f 2c1c 	mov.w	ip, ip, lsr #8
 801e548:	f40c 4c7f 	and.w	ip, ip, #65280	@ 0xff00
 801e54c:	1c4b      	adds	r3, r1, #1
 801e54e:	f007 17ff 	and.w	r7, r7, #16711935	@ 0xff00ff
 801e552:	ea47 070c 	orr.w	r7, r7, ip
 801e556:	eb03 2111 	add.w	r1, r3, r1, lsr #8
 801e55a:	1202      	asrs	r2, r0, #8
 801e55c:	0c3b      	lsrs	r3, r7, #16
 801e55e:	ea6f 2111 	mvn.w	r1, r1, lsr #8
 801e562:	b2c9      	uxtb	r1, r1
 801e564:	fb13 f305 	smulbb	r3, r3, r5
 801e568:	f002 02f8 	and.w	r2, r2, #248	@ 0xf8
 801e56c:	fb02 3201 	mla	r2, r2, r1, r3
 801e570:	f3c7 2c07 	ubfx	ip, r7, #8, #8
 801e574:	10c3      	asrs	r3, r0, #3
 801e576:	b2ff      	uxtb	r7, r7
 801e578:	00c0      	lsls	r0, r0, #3
 801e57a:	b2c0      	uxtb	r0, r0
 801e57c:	fb17 f705 	smulbb	r7, r7, r5
 801e580:	fb00 7001 	mla	r0, r0, r1, r7
 801e584:	b292      	uxth	r2, r2
 801e586:	fb1c fc05 	smulbb	ip, ip, r5
 801e58a:	b280      	uxth	r0, r0
 801e58c:	f003 03fc 	and.w	r3, r3, #252	@ 0xfc
 801e590:	fb03 c301 	mla	r3, r3, r1, ip
 801e594:	1c51      	adds	r1, r2, #1
 801e596:	f100 0c01 	add.w	ip, r0, #1
 801e59a:	eb01 2212 	add.w	r2, r1, r2, lsr #8
 801e59e:	eb0c 2c10 	add.w	ip, ip, r0, lsr #8
 801e5a2:	b29b      	uxth	r3, r3
 801e5a4:	f3cc 2cc4 	ubfx	ip, ip, #11, #5
 801e5a8:	f402 4278 	and.w	r2, r2, #63488	@ 0xf800
 801e5ac:	ea4c 0202 	orr.w	r2, ip, r2
 801e5b0:	f103 0c01 	add.w	ip, r3, #1
 801e5b4:	eb0c 2313 	add.w	r3, ip, r3, lsr #8
 801e5b8:	095b      	lsrs	r3, r3, #5
 801e5ba:	f403 63fc 	and.w	r3, r3, #2016	@ 0x7e0
 801e5be:	431a      	orrs	r2, r3
 801e5c0:	f8a9 2000 	strh.w	r2, [r9]
 801e5c4:	9b29      	ldr	r3, [sp, #164]	@ 0xa4
 801e5c6:	441c      	add	r4, r3
 801e5c8:	9b2a      	ldr	r3, [sp, #168]	@ 0xa8
 801e5ca:	f109 0902 	add.w	r9, r9, #2
 801e5ce:	441e      	add	r6, r3
 801e5d0:	f10b 3bff 	add.w	fp, fp, #4294967295
 801e5d4:	e647      	b.n	801e266 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3ae>
 801e5d6:	2800      	cmp	r0, #0
 801e5d8:	f43f aedf 	beq.w	801e39a <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x4e2>
 801e5dc:	f857 1021 	ldr.w	r1, [r7, r1, lsl #2]
 801e5e0:	9109      	str	r1, [sp, #36]	@ 0x24
 801e5e2:	0e09      	lsrs	r1, r1, #24
 801e5e4:	9112      	str	r1, [sp, #72]	@ 0x48
 801e5e6:	e6d8      	b.n	801e39a <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x4e2>
 801e5e8:	b01d      	add	sp, #116	@ 0x74
 801e5ea:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}

0801e5ee <_ZNK8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKmssiihh>:
 801e5ee:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 801e5f2:	b085      	sub	sp, #20
 801e5f4:	e9dd 740f 	ldrd	r7, r4, [sp, #60]	@ 0x3c
 801e5f8:	9102      	str	r1, [sp, #8]
 801e5fa:	2c00      	cmp	r4, #0
 801e5fc:	fb04 7103 	mla	r1, r4, r3, r7
 801e600:	f9bd e038 	ldrsh.w	lr, [sp, #56]	@ 0x38
 801e604:	f89d 6044 	ldrb.w	r6, [sp, #68]	@ 0x44
 801e608:	f89d 0048 	ldrb.w	r0, [sp, #72]	@ 0x48
 801e60c:	eb02 0c81 	add.w	ip, r2, r1, lsl #2
 801e610:	f2c0 810c 	blt.w	801e82c <_ZNK8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKmssiihh+0x23e>
 801e614:	45a6      	cmp	lr, r4
 801e616:	f340 8109 	ble.w	801e82c <_ZNK8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKmssiihh+0x23e>
 801e61a:	2f00      	cmp	r7, #0
 801e61c:	f2c0 8104 	blt.w	801e828 <_ZNK8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKmssiihh+0x23a>
 801e620:	42bb      	cmp	r3, r7
 801e622:	f340 8101 	ble.w	801e828 <_ZNK8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKmssiihh+0x23a>
 801e626:	f852 5021 	ldr.w	r5, [r2, r1, lsl #2]
 801e62a:	1c7a      	adds	r2, r7, #1
 801e62c:	f100 8101 	bmi.w	801e832 <_ZNK8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKmssiihh+0x244>
 801e630:	4293      	cmp	r3, r2
 801e632:	f340 80fe 	ble.w	801e832 <_ZNK8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKmssiihh+0x244>
 801e636:	2e00      	cmp	r6, #0
 801e638:	f000 80fd 	beq.w	801e836 <_ZNK8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKmssiihh+0x248>
 801e63c:	f8dc 1004 	ldr.w	r1, [ip, #4]
 801e640:	3401      	adds	r4, #1
 801e642:	f100 80fc 	bmi.w	801e83e <_ZNK8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKmssiihh+0x250>
 801e646:	45a6      	cmp	lr, r4
 801e648:	f340 80f9 	ble.w	801e83e <_ZNK8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKmssiihh+0x250>
 801e64c:	2800      	cmp	r0, #0
 801e64e:	f000 80f9 	beq.w	801e844 <_ZNK8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKmssiihh+0x256>
 801e652:	2f00      	cmp	r7, #0
 801e654:	eb0c 0283 	add.w	r2, ip, r3, lsl #2
 801e658:	f2c0 80ef 	blt.w	801e83a <_ZNK8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKmssiihh+0x24c>
 801e65c:	42bb      	cmp	r3, r7
 801e65e:	f340 80ec 	ble.w	801e83a <_ZNK8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKmssiihh+0x24c>
 801e662:	f85c 4023 	ldr.w	r4, [ip, r3, lsl #2]
 801e666:	3701      	adds	r7, #1
 801e668:	f100 80ef 	bmi.w	801e84a <_ZNK8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKmssiihh+0x25c>
 801e66c:	42bb      	cmp	r3, r7
 801e66e:	f340 80ec 	ble.w	801e84a <_ZNK8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKmssiihh+0x25c>
 801e672:	2e00      	cmp	r6, #0
 801e674:	f000 80eb 	beq.w	801e84e <_ZNK8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKmssiihh+0x260>
 801e678:	6852      	ldr	r2, [r2, #4]
 801e67a:	b2b6      	uxth	r6, r6
 801e67c:	b280      	uxth	r0, r0
 801e67e:	fb00 fe06 	mul.w	lr, r0, r6
 801e682:	ebce 1000 	rsb	r0, lr, r0, lsl #4
 801e686:	0136      	lsls	r6, r6, #4
 801e688:	eba6 070e 	sub.w	r7, r6, lr
 801e68c:	b280      	uxth	r0, r0
 801e68e:	f5c6 7380 	rsb	r3, r6, #256	@ 0x100
 801e692:	ea4f 6a11 	mov.w	sl, r1, lsr #24
 801e696:	b2bf      	uxth	r7, r7
 801e698:	1a1b      	subs	r3, r3, r0
 801e69a:	ea4f 6b15 	mov.w	fp, r5, lsr #24
 801e69e:	b29b      	uxth	r3, r3
 801e6a0:	fb07 f60a 	mul.w	r6, r7, sl
 801e6a4:	ea4f 6914 	mov.w	r9, r4, lsr #24
 801e6a8:	fb0b 6603 	mla	r6, fp, r3, r6
 801e6ac:	ea4f 6812 	mov.w	r8, r2, lsr #24
 801e6b0:	fb00 6609 	mla	r6, r0, r9, r6
 801e6b4:	fb0e 6608 	mla	r6, lr, r8, r6
 801e6b8:	f3c6 2607 	ubfx	r6, r6, #8, #8
 801e6bc:	9600      	str	r6, [sp, #0]
 801e6be:	2e00      	cmp	r6, #0
 801e6c0:	f000 80af 	beq.w	801e822 <_ZNK8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKmssiihh+0x234>
 801e6c4:	f005 1cff 	and.w	ip, r5, #16711935	@ 0xff00ff
 801e6c8:	fb0b fc0c 	mul.w	ip, fp, ip
 801e6cc:	f405 457f 	and.w	r5, r5, #65280	@ 0xff00
 801e6d0:	fb0b f505 	mul.w	r5, fp, r5
 801e6d4:	ea4f 2b1c 	mov.w	fp, ip, lsr #8
 801e6d8:	f00b 1bff 	and.w	fp, fp, #16711935	@ 0xff00ff
 801e6dc:	f10c 1c01 	add.w	ip, ip, #65537	@ 0x10001
 801e6e0:	44dc      	add	ip, fp
 801e6e2:	ea4f 2c1c 	mov.w	ip, ip, lsr #8
 801e6e6:	9501      	str	r5, [sp, #4]
 801e6e8:	f00c 15ff 	and.w	r5, ip, #16711935	@ 0xff00ff
 801e6ec:	9503      	str	r5, [sp, #12]
 801e6ee:	9d01      	ldr	r5, [sp, #4]
 801e6f0:	9e02      	ldr	r6, [sp, #8]
 801e6f2:	f505 7c80 	add.w	ip, r5, #256	@ 0x100
 801e6f6:	eb0c 2515 	add.w	r5, ip, r5, lsr #8
 801e6fa:	f001 1cff 	and.w	ip, r1, #16711935	@ 0xff00ff
 801e6fe:	fb0a fc0c 	mul.w	ip, sl, ip
 801e702:	ea4f 2b15 	mov.w	fp, r5, lsr #8
 801e706:	ea4f 251c 	mov.w	r5, ip, lsr #8
 801e70a:	f005 15ff 	and.w	r5, r5, #16711935	@ 0xff00ff
 801e70e:	f10c 1c01 	add.w	ip, ip, #65537	@ 0x10001
 801e712:	4465      	add	r5, ip
 801e714:	f004 1cff 	and.w	ip, r4, #16711935	@ 0xff00ff
 801e718:	f404 447f 	and.w	r4, r4, #65280	@ 0xff00
 801e71c:	fb09 fc0c 	mul.w	ip, r9, ip
 801e720:	fb09 f904 	mul.w	r9, r9, r4
 801e724:	f509 7480 	add.w	r4, r9, #256	@ 0x100
 801e728:	eb04 2919 	add.w	r9, r4, r9, lsr #8
 801e72c:	f002 14ff 	and.w	r4, r2, #16711935	@ 0xff00ff
 801e730:	fb08 f404 	mul.w	r4, r8, r4
 801e734:	f401 417f 	and.w	r1, r1, #65280	@ 0xff00
 801e738:	f402 427f 	and.w	r2, r2, #65280	@ 0xff00
 801e73c:	fb08 f802 	mul.w	r8, r8, r2
 801e740:	fb0a fa01 	mul.w	sl, sl, r1
 801e744:	0a22      	lsrs	r2, r4, #8
 801e746:	f50a 7180 	add.w	r1, sl, #256	@ 0x100
 801e74a:	f002 12ff 	and.w	r2, r2, #16711935	@ 0xff00ff
 801e74e:	f104 1401 	add.w	r4, r4, #65537	@ 0x10001
 801e752:	eb01 2a1a 	add.w	sl, r1, sl, lsr #8
 801e756:	4414      	add	r4, r2
 801e758:	ea4f 211c 	mov.w	r1, ip, lsr #8
 801e75c:	f508 7280 	add.w	r2, r8, #256	@ 0x100
 801e760:	0a2d      	lsrs	r5, r5, #8
 801e762:	eb02 2818 	add.w	r8, r2, r8, lsr #8
 801e766:	f005 15ff 	and.w	r5, r5, #16711935	@ 0xff00ff
 801e76a:	9a03      	ldr	r2, [sp, #12]
 801e76c:	8836      	ldrh	r6, [r6, #0]
 801e76e:	f001 11ff 	and.w	r1, r1, #16711935	@ 0xff00ff
 801e772:	f10c 1c01 	add.w	ip, ip, #65537	@ 0x10001
 801e776:	437d      	muls	r5, r7
 801e778:	4461      	add	r1, ip
 801e77a:	0a24      	lsrs	r4, r4, #8
 801e77c:	fb02 5503 	mla	r5, r2, r3, r5
 801e780:	0a09      	lsrs	r1, r1, #8
 801e782:	f004 14ff 	and.w	r4, r4, #16711935	@ 0xff00ff
 801e786:	fb04 540e 	mla	r4, r4, lr, r5
 801e78a:	f001 11ff 	and.w	r1, r1, #16711935	@ 0xff00ff
 801e78e:	fb01 4100 	mla	r1, r1, r0, r4
 801e792:	ea4f 2a1a 	mov.w	sl, sl, lsr #8
 801e796:	0a09      	lsrs	r1, r1, #8
 801e798:	f40a 4a7f 	and.w	sl, sl, #65280	@ 0xff00
 801e79c:	f001 14ff 	and.w	r4, r1, #16711935	@ 0xff00ff
 801e7a0:	ea4f 2818 	mov.w	r8, r8, lsr #8
 801e7a4:	f40b 417f 	and.w	r1, fp, #65280	@ 0xff00
 801e7a8:	fb07 f70a 	mul.w	r7, r7, sl
 801e7ac:	fb03 7101 	mla	r1, r3, r1, r7
 801e7b0:	ea4f 2919 	mov.w	r9, r9, lsr #8
 801e7b4:	9b00      	ldr	r3, [sp, #0]
 801e7b6:	f408 487f 	and.w	r8, r8, #65280	@ 0xff00
 801e7ba:	fb0e 1e08 	mla	lr, lr, r8, r1
 801e7be:	f409 417f 	and.w	r1, r9, #65280	@ 0xff00
 801e7c2:	fb00 e101 	mla	r1, r0, r1, lr
 801e7c6:	43da      	mvns	r2, r3
 801e7c8:	1233      	asrs	r3, r6, #8
 801e7ca:	b2d2      	uxtb	r2, r2
 801e7cc:	10f0      	asrs	r0, r6, #3
 801e7ce:	0a09      	lsrs	r1, r1, #8
 801e7d0:	f003 03f8 	and.w	r3, r3, #248	@ 0xf8
 801e7d4:	00f6      	lsls	r6, r6, #3
 801e7d6:	4353      	muls	r3, r2
 801e7d8:	f401 417f 	and.w	r1, r1, #65280	@ 0xff00
 801e7dc:	f000 00fc 	and.w	r0, r0, #252	@ 0xfc
 801e7e0:	b2f6      	uxtb	r6, r6
 801e7e2:	4321      	orrs	r1, r4
 801e7e4:	4350      	muls	r0, r2
 801e7e6:	4356      	muls	r6, r2
 801e7e8:	1c5a      	adds	r2, r3, #1
 801e7ea:	eb02 2213 	add.w	r2, r2, r3, lsr #8
 801e7ee:	0c0b      	lsrs	r3, r1, #16
 801e7f0:	eb03 2312 	add.w	r3, r3, r2, lsr #8
 801e7f4:	1c42      	adds	r2, r0, #1
 801e7f6:	eb02 2010 	add.w	r0, r2, r0, lsr #8
 801e7fa:	0a0a      	lsrs	r2, r1, #8
 801e7fc:	eb02 2210 	add.w	r2, r2, r0, lsr #8
 801e800:	021b      	lsls	r3, r3, #8
 801e802:	00d2      	lsls	r2, r2, #3
 801e804:	f402 62fc 	and.w	r2, r2, #2016	@ 0x7e0
 801e808:	f403 4378 	and.w	r3, r3, #63488	@ 0xf800
 801e80c:	4313      	orrs	r3, r2
 801e80e:	1c72      	adds	r2, r6, #1
 801e810:	eb02 2616 	add.w	r6, r2, r6, lsr #8
 801e814:	eb01 2116 	add.w	r1, r1, r6, lsr #8
 801e818:	f3c1 01c4 	ubfx	r1, r1, #3, #5
 801e81c:	4319      	orrs	r1, r3
 801e81e:	9b02      	ldr	r3, [sp, #8]
 801e820:	8019      	strh	r1, [r3, #0]
 801e822:	b005      	add	sp, #20
 801e824:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 801e828:	2500      	movs	r5, #0
 801e82a:	e6fe      	b.n	801e62a <_ZNK8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKmssiihh+0x3c>
 801e82c:	2100      	movs	r1, #0
 801e82e:	460d      	mov	r5, r1
 801e830:	e706      	b.n	801e640 <_ZNK8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKmssiihh+0x52>
 801e832:	2100      	movs	r1, #0
 801e834:	e704      	b.n	801e640 <_ZNK8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKmssiihh+0x52>
 801e836:	4631      	mov	r1, r6
 801e838:	e702      	b.n	801e640 <_ZNK8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKmssiihh+0x52>
 801e83a:	2400      	movs	r4, #0
 801e83c:	e713      	b.n	801e666 <_ZNK8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKmssiihh+0x78>
 801e83e:	2200      	movs	r2, #0
 801e840:	4614      	mov	r4, r2
 801e842:	e71a      	b.n	801e67a <_ZNK8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKmssiihh+0x8c>
 801e844:	4602      	mov	r2, r0
 801e846:	4604      	mov	r4, r0
 801e848:	e717      	b.n	801e67a <_ZNK8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKmssiihh+0x8c>
 801e84a:	2200      	movs	r2, #0
 801e84c:	e715      	b.n	801e67a <_ZNK8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKmssiihh+0x8c>
 801e84e:	4632      	mov	r2, r6
 801e850:	e713      	b.n	801e67a <_ZNK8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKmssiihh+0x8c>
	...

0801e854 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff>:
 801e854:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 801e858:	b09b      	sub	sp, #108	@ 0x6c
 801e85a:	e9dd 4625 	ldrd	r4, r6, [sp, #148]	@ 0x94
 801e85e:	9218      	str	r2, [sp, #96]	@ 0x60
 801e860:	9a29      	ldr	r2, [sp, #164]	@ 0xa4
 801e862:	9116      	str	r1, [sp, #88]	@ 0x58
 801e864:	9307      	str	r3, [sp, #28]
 801e866:	e9dd 132a 	ldrd	r1, r3, [sp, #168]	@ 0xa8
 801e86a:	9019      	str	r0, [sp, #100]	@ 0x64
 801e86c:	6850      	ldr	r0, [r2, #4]
 801e86e:	6812      	ldr	r2, [r2, #0]
 801e870:	fb00 1303 	mla	r3, r0, r3, r1
 801e874:	eb02 0343 	add.w	r3, r2, r3, lsl #1
 801e878:	930a      	str	r3, [sp, #40]	@ 0x28
 801e87a:	9b2c      	ldr	r3, [sp, #176]	@ 0xb0
 801e87c:	681b      	ldr	r3, [r3, #0]
 801e87e:	930f      	str	r3, [sp, #60]	@ 0x3c
 801e880:	9b16      	ldr	r3, [sp, #88]	@ 0x58
 801e882:	2b00      	cmp	r3, #0
 801e884:	dc03      	bgt.n	801e88e <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3a>
 801e886:	9b18      	ldr	r3, [sp, #96]	@ 0x60
 801e888:	2b00      	cmp	r3, #0
 801e88a:	f340 8386 	ble.w	801ef9a <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x746>
 801e88e:	9b2c      	ldr	r3, [sp, #176]	@ 0xb0
 801e890:	f9b3 1008 	ldrsh.w	r1, [r3, #8]
 801e894:	f9b3 200c 	ldrsh.w	r2, [r3, #12]
 801e898:	1e48      	subs	r0, r1, #1
 801e89a:	1e57      	subs	r7, r2, #1
 801e89c:	9b07      	ldr	r3, [sp, #28]
 801e89e:	2b00      	cmp	r3, #0
 801e8a0:	f340 8166 	ble.w	801eb70 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x31c>
 801e8a4:	ea5f 4c24 	movs.w	ip, r4, asr #16
 801e8a8:	ea4f 4326 	mov.w	r3, r6, asr #16
 801e8ac:	d406      	bmi.n	801e8bc <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x68>
 801e8ae:	4584      	cmp	ip, r0
 801e8b0:	da04      	bge.n	801e8bc <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x68>
 801e8b2:	2b00      	cmp	r3, #0
 801e8b4:	db02      	blt.n	801e8bc <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x68>
 801e8b6:	42bb      	cmp	r3, r7
 801e8b8:	f2c0 815b 	blt.w	801eb72 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x31e>
 801e8bc:	f11c 0c01 	adds.w	ip, ip, #1
 801e8c0:	f100 814b 	bmi.w	801eb5a <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x306>
 801e8c4:	4561      	cmp	r1, ip
 801e8c6:	f2c0 8148 	blt.w	801eb5a <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x306>
 801e8ca:	3301      	adds	r3, #1
 801e8cc:	f100 8145 	bmi.w	801eb5a <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x306>
 801e8d0:	429a      	cmp	r2, r3
 801e8d2:	f2c0 8142 	blt.w	801eb5a <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x306>
 801e8d6:	9b07      	ldr	r3, [sp, #28]
 801e8d8:	9f0a      	ldr	r7, [sp, #40]	@ 0x28
 801e8da:	9317      	str	r3, [sp, #92]	@ 0x5c
 801e8dc:	9b17      	ldr	r3, [sp, #92]	@ 0x5c
 801e8de:	2b00      	cmp	r3, #0
 801e8e0:	f340 8165 	ble.w	801ebae <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x35a>
 801e8e4:	9a2c      	ldr	r2, [sp, #176]	@ 0xb0
 801e8e6:	9b2c      	ldr	r3, [sp, #176]	@ 0xb0
 801e8e8:	f8d2 e00c 	ldr.w	lr, [r2, #12]
 801e8ec:	689b      	ldr	r3, [r3, #8]
 801e8ee:	1422      	asrs	r2, r4, #16
 801e8f0:	ea4f 4c26 	mov.w	ip, r6, asr #16
 801e8f4:	f3c4 3103 	ubfx	r1, r4, #12, #4
 801e8f8:	f3c6 3003 	ubfx	r0, r6, #12, #4
 801e8fc:	f100 81d5 	bmi.w	801ecaa <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x456>
 801e900:	f103 38ff 	add.w	r8, r3, #4294967295
 801e904:	4542      	cmp	r2, r8
 801e906:	f280 81d0 	bge.w	801ecaa <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x456>
 801e90a:	f1bc 0f00 	cmp.w	ip, #0
 801e90e:	f2c0 81cc 	blt.w	801ecaa <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x456>
 801e912:	f10e 38ff 	add.w	r8, lr, #4294967295
 801e916:	45c4      	cmp	ip, r8
 801e918:	f280 81c7 	bge.w	801ecaa <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x456>
 801e91c:	b21b      	sxth	r3, r3
 801e91e:	fb0c 2203 	mla	r2, ip, r3, r2
 801e922:	9d0f      	ldr	r5, [sp, #60]	@ 0x3c
 801e924:	eb05 0882 	add.w	r8, r5, r2, lsl #2
 801e928:	f855 2022 	ldr.w	r2, [r5, r2, lsl #2]
 801e92c:	ea4f 6e12 	mov.w	lr, r2, lsr #24
 801e930:	2900      	cmp	r1, #0
 801e932:	f000 8182 	beq.w	801ec3a <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3e6>
 801e936:	f8d8 5004 	ldr.w	r5, [r8, #4]
 801e93a:	950b      	str	r5, [sp, #44]	@ 0x2c
 801e93c:	0e2d      	lsrs	r5, r5, #24
 801e93e:	9512      	str	r5, [sp, #72]	@ 0x48
 801e940:	b180      	cbz	r0, 801e964 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x110>
 801e942:	f103 4380 	add.w	r3, r3, #1073741824	@ 0x40000000
 801e946:	3b01      	subs	r3, #1
 801e948:	009b      	lsls	r3, r3, #2
 801e94a:	3304      	adds	r3, #4
 801e94c:	eb08 0c03 	add.w	ip, r8, r3
 801e950:	f858 3003 	ldr.w	r3, [r8, r3]
 801e954:	9308      	str	r3, [sp, #32]
 801e956:	0e1b      	lsrs	r3, r3, #24
 801e958:	9310      	str	r3, [sp, #64]	@ 0x40
 801e95a:	f8dc 3004 	ldr.w	r3, [ip, #4]
 801e95e:	930c      	str	r3, [sp, #48]	@ 0x30
 801e960:	0e1b      	lsrs	r3, r3, #24
 801e962:	9313      	str	r3, [sp, #76]	@ 0x4c
 801e964:	b289      	uxth	r1, r1
 801e966:	b280      	uxth	r0, r0
 801e968:	fb01 f900 	mul.w	r9, r1, r0
 801e96c:	ebc9 1000 	rsb	r0, r9, r0, lsl #4
 801e970:	0109      	lsls	r1, r1, #4
 801e972:	eba1 0809 	sub.w	r8, r1, r9
 801e976:	b280      	uxth	r0, r0
 801e978:	f5c1 7180 	rsb	r1, r1, #256	@ 0x100
 801e97c:	9b12      	ldr	r3, [sp, #72]	@ 0x48
 801e97e:	9d10      	ldr	r5, [sp, #64]	@ 0x40
 801e980:	fa1f f888 	uxth.w	r8, r8
 801e984:	1a09      	subs	r1, r1, r0
 801e986:	b289      	uxth	r1, r1
 801e988:	fb08 f303 	mul.w	r3, r8, r3
 801e98c:	fb01 330e 	mla	r3, r1, lr, r3
 801e990:	fb00 3305 	mla	r3, r0, r5, r3
 801e994:	9d13      	ldr	r5, [sp, #76]	@ 0x4c
 801e996:	fb09 3305 	mla	r3, r9, r5, r3
 801e99a:	f3c3 2307 	ubfx	r3, r3, #8, #8
 801e99e:	2b00      	cmp	r3, #0
 801e9a0:	f000 80d2 	beq.w	801eb48 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2f4>
 801e9a4:	f1be 0fff 	cmp.w	lr, #255	@ 0xff
 801e9a8:	d01b      	beq.n	801e9e2 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x18e>
 801e9aa:	f002 1aff 	and.w	sl, r2, #16711935	@ 0xff00ff
 801e9ae:	fb0e fa0a 	mul.w	sl, lr, sl
 801e9b2:	f402 427f 	and.w	r2, r2, #65280	@ 0xff00
 801e9b6:	fb0e fe02 	mul.w	lr, lr, r2
 801e9ba:	ea4f 221a 	mov.w	r2, sl, lsr #8
 801e9be:	f002 12ff 	and.w	r2, r2, #16711935	@ 0xff00ff
 801e9c2:	f10a 1a01 	add.w	sl, sl, #65537	@ 0x10001
 801e9c6:	f50e 7c80 	add.w	ip, lr, #256	@ 0x100
 801e9ca:	4452      	add	r2, sl
 801e9cc:	eb0c 2c1e 	add.w	ip, ip, lr, lsr #8
 801e9d0:	0a12      	lsrs	r2, r2, #8
 801e9d2:	ea4f 2c1c 	mov.w	ip, ip, lsr #8
 801e9d6:	f002 12ff 	and.w	r2, r2, #16711935	@ 0xff00ff
 801e9da:	f40c 4c7f 	and.w	ip, ip, #65280	@ 0xff00
 801e9de:	ea42 020c 	orr.w	r2, r2, ip
 801e9e2:	9d12      	ldr	r5, [sp, #72]	@ 0x48
 801e9e4:	2dff      	cmp	r5, #255	@ 0xff
 801e9e6:	d021      	beq.n	801ea2c <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1d8>
 801e9e8:	9d0b      	ldr	r5, [sp, #44]	@ 0x2c
 801e9ea:	f005 1bff 	and.w	fp, r5, #16711935	@ 0xff00ff
 801e9ee:	9d12      	ldr	r5, [sp, #72]	@ 0x48
 801e9f0:	fb05 fb0b 	mul.w	fp, r5, fp
 801e9f4:	9d0b      	ldr	r5, [sp, #44]	@ 0x2c
 801e9f6:	f405 4a7f 	and.w	sl, r5, #65280	@ 0xff00
 801e9fa:	9d12      	ldr	r5, [sp, #72]	@ 0x48
 801e9fc:	ea4f 2e1b 	mov.w	lr, fp, lsr #8
 801ea00:	fb05 fa0a 	mul.w	sl, r5, sl
 801ea04:	f00e 1eff 	and.w	lr, lr, #16711935	@ 0xff00ff
 801ea08:	f10b 1b01 	add.w	fp, fp, #65537	@ 0x10001
 801ea0c:	f50a 7c80 	add.w	ip, sl, #256	@ 0x100
 801ea10:	44de      	add	lr, fp
 801ea12:	eb0c 2a1a 	add.w	sl, ip, sl, lsr #8
 801ea16:	ea4f 2e1e 	mov.w	lr, lr, lsr #8
 801ea1a:	ea4f 2a1a 	mov.w	sl, sl, lsr #8
 801ea1e:	f00e 1eff 	and.w	lr, lr, #16711935	@ 0xff00ff
 801ea22:	f40a 4a7f 	and.w	sl, sl, #65280	@ 0xff00
 801ea26:	ea4e 050a 	orr.w	r5, lr, sl
 801ea2a:	950b      	str	r5, [sp, #44]	@ 0x2c
 801ea2c:	9d10      	ldr	r5, [sp, #64]	@ 0x40
 801ea2e:	2dff      	cmp	r5, #255	@ 0xff
 801ea30:	d021      	beq.n	801ea76 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x222>
 801ea32:	9d08      	ldr	r5, [sp, #32]
 801ea34:	f005 1bff 	and.w	fp, r5, #16711935	@ 0xff00ff
 801ea38:	9d10      	ldr	r5, [sp, #64]	@ 0x40
 801ea3a:	fb05 fb0b 	mul.w	fp, r5, fp
 801ea3e:	9d08      	ldr	r5, [sp, #32]
 801ea40:	f405 4e7f 	and.w	lr, r5, #65280	@ 0xff00
 801ea44:	9d10      	ldr	r5, [sp, #64]	@ 0x40
 801ea46:	fb05 fa0e 	mul.w	sl, r5, lr
 801ea4a:	ea4f 2e1b 	mov.w	lr, fp, lsr #8
 801ea4e:	f00e 1eff 	and.w	lr, lr, #16711935	@ 0xff00ff
 801ea52:	f10b 1b01 	add.w	fp, fp, #65537	@ 0x10001
 801ea56:	f50a 7c80 	add.w	ip, sl, #256	@ 0x100
 801ea5a:	44de      	add	lr, fp
 801ea5c:	eb0c 2a1a 	add.w	sl, ip, sl, lsr #8
 801ea60:	ea4f 2e1e 	mov.w	lr, lr, lsr #8
 801ea64:	ea4f 2a1a 	mov.w	sl, sl, lsr #8
 801ea68:	f00e 1eff 	and.w	lr, lr, #16711935	@ 0xff00ff
 801ea6c:	f40a 4a7f 	and.w	sl, sl, #65280	@ 0xff00
 801ea70:	ea4e 050a 	orr.w	r5, lr, sl
 801ea74:	9508      	str	r5, [sp, #32]
 801ea76:	9d13      	ldr	r5, [sp, #76]	@ 0x4c
 801ea78:	2dff      	cmp	r5, #255	@ 0xff
 801ea7a:	d021      	beq.n	801eac0 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x26c>
 801ea7c:	9d0c      	ldr	r5, [sp, #48]	@ 0x30
 801ea7e:	f005 1bff 	and.w	fp, r5, #16711935	@ 0xff00ff
 801ea82:	9d13      	ldr	r5, [sp, #76]	@ 0x4c
 801ea84:	fb05 fb0b 	mul.w	fp, r5, fp
 801ea88:	9d0c      	ldr	r5, [sp, #48]	@ 0x30
 801ea8a:	f405 4a7f 	and.w	sl, r5, #65280	@ 0xff00
 801ea8e:	9d13      	ldr	r5, [sp, #76]	@ 0x4c
 801ea90:	ea4f 2e1b 	mov.w	lr, fp, lsr #8
 801ea94:	fb05 fa0a 	mul.w	sl, r5, sl
 801ea98:	f00e 1eff 	and.w	lr, lr, #16711935	@ 0xff00ff
 801ea9c:	f10b 1b01 	add.w	fp, fp, #65537	@ 0x10001
 801eaa0:	f50a 7c80 	add.w	ip, sl, #256	@ 0x100
 801eaa4:	44de      	add	lr, fp
 801eaa6:	eb0c 2a1a 	add.w	sl, ip, sl, lsr #8
 801eaaa:	ea4f 2e1e 	mov.w	lr, lr, lsr #8
 801eaae:	ea4f 2a1a 	mov.w	sl, sl, lsr #8
 801eab2:	f00e 1eff 	and.w	lr, lr, #16711935	@ 0xff00ff
 801eab6:	f40a 4a7f 	and.w	sl, sl, #65280	@ 0xff00
 801eaba:	ea4e 050a 	orr.w	r5, lr, sl
 801eabe:	950c      	str	r5, [sp, #48]	@ 0x30
 801eac0:	9d0b      	ldr	r5, [sp, #44]	@ 0x2c
 801eac2:	f005 1cff 	and.w	ip, r5, #16711935	@ 0xff00ff
 801eac6:	9d08      	ldr	r5, [sp, #32]
 801eac8:	f002 1eff 	and.w	lr, r2, #16711935	@ 0xff00ff
 801eacc:	fb08 fc0c 	mul.w	ip, r8, ip
 801ead0:	fb01 cc0e 	mla	ip, r1, lr, ip
 801ead4:	f005 1eff 	and.w	lr, r5, #16711935	@ 0xff00ff
 801ead8:	9d0c      	ldr	r5, [sp, #48]	@ 0x30
 801eada:	fb00 cc0e 	mla	ip, r0, lr, ip
 801eade:	f005 1eff 	and.w	lr, r5, #16711935	@ 0xff00ff
 801eae2:	9d0b      	ldr	r5, [sp, #44]	@ 0x2c
 801eae4:	fb09 cc0e 	mla	ip, r9, lr, ip
 801eae8:	f405 4e7f 	and.w	lr, r5, #65280	@ 0xff00
 801eaec:	f402 427f 	and.w	r2, r2, #65280	@ 0xff00
 801eaf0:	fb08 f80e 	mul.w	r8, r8, lr
 801eaf4:	fb01 8202 	mla	r2, r1, r2, r8
 801eaf8:	9908      	ldr	r1, [sp, #32]
 801eafa:	f401 4a7f 	and.w	sl, r1, #65280	@ 0xff00
 801eafe:	990c      	ldr	r1, [sp, #48]	@ 0x30
 801eb00:	fb00 220a 	mla	r2, r0, sl, r2
 801eb04:	f401 407f 	and.w	r0, r1, #65280	@ 0xff00
 801eb08:	fb09 2900 	mla	r9, r9, r0, r2
 801eb0c:	ea4f 2c1c 	mov.w	ip, ip, lsr #8
 801eb10:	ea4f 2919 	mov.w	r9, r9, lsr #8
 801eb14:	f00c 1cff 	and.w	ip, ip, #16711935	@ 0xff00ff
 801eb18:	f409 497f 	and.w	r9, r9, #65280	@ 0xff00
 801eb1c:	ea4c 0c09 	orr.w	ip, ip, r9
 801eb20:	2bff      	cmp	r3, #255	@ 0xff
 801eb22:	ea4f 221c 	mov.w	r2, ip, lsr #8
 801eb26:	f040 8091 	bne.w	801ec4c <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3f8>
 801eb2a:	ea4f 135c 	mov.w	r3, ip, lsr #5
 801eb2e:	f422 62ff 	bic.w	r2, r2, #2040	@ 0x7f8
 801eb32:	f403 63fc 	and.w	r3, r3, #2016	@ 0x7e0
 801eb36:	f022 0207 	bic.w	r2, r2, #7
 801eb3a:	431a      	orrs	r2, r3
 801eb3c:	f3cc 0cc4 	ubfx	ip, ip, #3, #5
 801eb40:	ea4c 0c02 	orr.w	ip, ip, r2
 801eb44:	f8a7 c000 	strh.w	ip, [r7]
 801eb48:	9b27      	ldr	r3, [sp, #156]	@ 0x9c
 801eb4a:	441c      	add	r4, r3
 801eb4c:	9b28      	ldr	r3, [sp, #160]	@ 0xa0
 801eb4e:	441e      	add	r6, r3
 801eb50:	9b17      	ldr	r3, [sp, #92]	@ 0x5c
 801eb52:	3b01      	subs	r3, #1
 801eb54:	3702      	adds	r7, #2
 801eb56:	9317      	str	r3, [sp, #92]	@ 0x5c
 801eb58:	e6c0      	b.n	801e8dc <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x88>
 801eb5a:	9b27      	ldr	r3, [sp, #156]	@ 0x9c
 801eb5c:	441c      	add	r4, r3
 801eb5e:	9b28      	ldr	r3, [sp, #160]	@ 0xa0
 801eb60:	441e      	add	r6, r3
 801eb62:	9b07      	ldr	r3, [sp, #28]
 801eb64:	3b01      	subs	r3, #1
 801eb66:	9307      	str	r3, [sp, #28]
 801eb68:	9b0a      	ldr	r3, [sp, #40]	@ 0x28
 801eb6a:	3302      	adds	r3, #2
 801eb6c:	930a      	str	r3, [sp, #40]	@ 0x28
 801eb6e:	e695      	b.n	801e89c <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x48>
 801eb70:	d024      	beq.n	801ebbc <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x368>
 801eb72:	9b07      	ldr	r3, [sp, #28]
 801eb74:	9827      	ldr	r0, [sp, #156]	@ 0x9c
 801eb76:	3b01      	subs	r3, #1
 801eb78:	fb00 4003 	mla	r0, r0, r3, r4
 801eb7c:	1400      	asrs	r0, r0, #16
 801eb7e:	f53f aeaa 	bmi.w	801e8d6 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x82>
 801eb82:	3901      	subs	r1, #1
 801eb84:	4288      	cmp	r0, r1
 801eb86:	f6bf aea6 	bge.w	801e8d6 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x82>
 801eb8a:	9928      	ldr	r1, [sp, #160]	@ 0xa0
 801eb8c:	fb01 6303 	mla	r3, r1, r3, r6
 801eb90:	141b      	asrs	r3, r3, #16
 801eb92:	f53f aea0 	bmi.w	801e8d6 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x82>
 801eb96:	3a01      	subs	r2, #1
 801eb98:	4293      	cmp	r3, r2
 801eb9a:	f6bf ae9c 	bge.w	801e8d6 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x82>
 801eb9e:	f8dd b01c 	ldr.w	fp, [sp, #28]
 801eba2:	f8dd 8028 	ldr.w	r8, [sp, #40]	@ 0x28
 801eba6:	f1bb 0f00 	cmp.w	fp, #0
 801ebaa:	f300 809a 	bgt.w	801ece2 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x48e>
 801ebae:	9b07      	ldr	r3, [sp, #28]
 801ebb0:	ea23 75e3 	bic.w	r5, r3, r3, asr #31
 801ebb4:	9b0a      	ldr	r3, [sp, #40]	@ 0x28
 801ebb6:	eb03 0345 	add.w	r3, r3, r5, lsl #1
 801ebba:	930a      	str	r3, [sp, #40]	@ 0x28
 801ebbc:	9b16      	ldr	r3, [sp, #88]	@ 0x58
 801ebbe:	2b00      	cmp	r3, #0
 801ebc0:	f340 81eb 	ble.w	801ef9a <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x746>
 801ebc4:	ee30 0a04 	vadd.f32	s0, s0, s8
 801ebc8:	eeb7 7a00 	vmov.f32	s14, #112	@ 0x3f800000  1.0
 801ebcc:	eec7 7a00 	vdiv.f32	s15, s14, s0
 801ebd0:	9b24      	ldr	r3, [sp, #144]	@ 0x90
 801ebd2:	ee70 0aa4 	vadd.f32	s1, s1, s9
 801ebd6:	ee31 1a05 	vadd.f32	s2, s2, s10
 801ebda:	ee20 7aa7 	vmul.f32	s14, s1, s15
 801ebde:	eef0 6a62 	vmov.f32	s13, s5
 801ebe2:	ee61 7a27 	vmul.f32	s15, s2, s15
 801ebe6:	eefe 6ac8 	vcvt.s32.f32	s13, s13, #16
 801ebea:	ee77 2a62 	vsub.f32	s5, s14, s5
 801ebee:	ee16 4a90 	vmov	r4, s13
 801ebf2:	eefe 2ac8 	vcvt.s32.f32	s5, s5, #16
 801ebf6:	eef0 6a43 	vmov.f32	s13, s6
 801ebfa:	ee37 3ac3 	vsub.f32	s6, s15, s6
 801ebfe:	ee12 2a90 	vmov	r2, s5
 801ec02:	eebe 3ac8 	vcvt.s32.f32	s6, s6, #16
 801ec06:	fb92 f3f3 	sdiv	r3, r2, r3
 801ec0a:	ee13 2a10 	vmov	r2, s6
 801ec0e:	9327      	str	r3, [sp, #156]	@ 0x9c
 801ec10:	9b24      	ldr	r3, [sp, #144]	@ 0x90
 801ec12:	fb92 f3f3 	sdiv	r3, r2, r3
 801ec16:	9328      	str	r3, [sp, #160]	@ 0xa0
 801ec18:	9b16      	ldr	r3, [sp, #88]	@ 0x58
 801ec1a:	9a18      	ldr	r2, [sp, #96]	@ 0x60
 801ec1c:	3b01      	subs	r3, #1
 801ec1e:	eefe 6ac8 	vcvt.s32.f32	s13, s13, #16
 801ec22:	9316      	str	r3, [sp, #88]	@ 0x58
 801ec24:	9b24      	ldr	r3, [sp, #144]	@ 0x90
 801ec26:	bf08      	it	eq
 801ec28:	4613      	moveq	r3, r2
 801ec2a:	ee16 6a90 	vmov	r6, s13
 801ec2e:	9307      	str	r3, [sp, #28]
 801ec30:	eeb0 3a67 	vmov.f32	s6, s15
 801ec34:	eef0 2a47 	vmov.f32	s5, s14
 801ec38:	e622      	b.n	801e880 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2c>
 801ec3a:	2800      	cmp	r0, #0
 801ec3c:	f43f ae92 	beq.w	801e964 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x110>
 801ec40:	f858 3023 	ldr.w	r3, [r8, r3, lsl #2]
 801ec44:	9308      	str	r3, [sp, #32]
 801ec46:	0e1b      	lsrs	r3, r3, #24
 801ec48:	9310      	str	r3, [sp, #64]	@ 0x40
 801ec4a:	e68b      	b.n	801e964 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x110>
 801ec4c:	8839      	ldrh	r1, [r7, #0]
 801ec4e:	4dd4      	ldr	r5, [pc, #848]	@ (801efa0 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x74c>)
 801ec50:	43db      	mvns	r3, r3
 801ec52:	ea4f 2e21 	mov.w	lr, r1, asr #8
 801ec56:	fa5f f883 	uxtb.w	r8, r3
 801ec5a:	f00e 0ef8 	and.w	lr, lr, #248	@ 0xf8
 801ec5e:	fb0e fe08 	mul.w	lr, lr, r8
 801ec62:	10c8      	asrs	r0, r1, #3
 801ec64:	00cb      	lsls	r3, r1, #3
 801ec66:	f000 00fc 	and.w	r0, r0, #252	@ 0xfc
 801ec6a:	f10e 0101 	add.w	r1, lr, #1
 801ec6e:	eb01 2e1e 	add.w	lr, r1, lr, lsr #8
 801ec72:	fb00 f008 	mul.w	r0, r0, r8
 801ec76:	ea4f 411c 	mov.w	r1, ip, lsr #16
 801ec7a:	eb01 211e 	add.w	r1, r1, lr, lsr #8
 801ec7e:	f100 0e01 	add.w	lr, r0, #1
 801ec82:	eb0e 2010 	add.w	r0, lr, r0, lsr #8
 801ec86:	eb02 2210 	add.w	r2, r2, r0, lsr #8
 801ec8a:	b2db      	uxtb	r3, r3
 801ec8c:	b2c9      	uxtb	r1, r1
 801ec8e:	00d2      	lsls	r2, r2, #3
 801ec90:	fb03 f308 	mul.w	r3, r3, r8
 801ec94:	ea05 2101 	and.w	r1, r5, r1, lsl #8
 801ec98:	f402 62fc 	and.w	r2, r2, #2016	@ 0x7e0
 801ec9c:	430a      	orrs	r2, r1
 801ec9e:	1c59      	adds	r1, r3, #1
 801eca0:	eb01 2313 	add.w	r3, r1, r3, lsr #8
 801eca4:	eb0c 2c13 	add.w	ip, ip, r3, lsr #8
 801eca8:	e748      	b.n	801eb3c <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2e8>
 801ecaa:	f112 0801 	adds.w	r8, r2, #1
 801ecae:	f53f af4b 	bmi.w	801eb48 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2f4>
 801ecb2:	4543      	cmp	r3, r8
 801ecb4:	f6ff af48 	blt.w	801eb48 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2f4>
 801ecb8:	f11c 0801 	adds.w	r8, ip, #1
 801ecbc:	f53f af44 	bmi.w	801eb48 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2f4>
 801ecc0:	45c6      	cmp	lr, r8
 801ecc2:	f6ff af41 	blt.w	801eb48 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2f4>
 801ecc6:	e9cd 2c01 	strd	r2, ip, [sp, #4]
 801ecca:	fa0f f28e 	sxth.w	r2, lr
 801ecce:	e9cd 1003 	strd	r1, r0, [sp, #12]
 801ecd2:	9200      	str	r2, [sp, #0]
 801ecd4:	b21b      	sxth	r3, r3
 801ecd6:	9a0f      	ldr	r2, [sp, #60]	@ 0x3c
 801ecd8:	9819      	ldr	r0, [sp, #100]	@ 0x64
 801ecda:	4639      	mov	r1, r7
 801ecdc:	f7ff fc87 	bl	801e5ee <_ZNK8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKmssiihh>
 801ece0:	e732      	b.n	801eb48 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2f4>
 801ece2:	9b2c      	ldr	r3, [sp, #176]	@ 0xb0
 801ece4:	9d0f      	ldr	r5, [sp, #60]	@ 0x3c
 801ece6:	f9b3 7008 	ldrsh.w	r7, [r3, #8]
 801ecea:	1421      	asrs	r1, r4, #16
 801ecec:	1433      	asrs	r3, r6, #16
 801ecee:	fb07 1303 	mla	r3, r7, r3, r1
 801ecf2:	990f      	ldr	r1, [sp, #60]	@ 0x3c
 801ecf4:	eb01 0183 	add.w	r1, r1, r3, lsl #2
 801ecf8:	f855 3023 	ldr.w	r3, [r5, r3, lsl #2]
 801ecfc:	f3c4 3203 	ubfx	r2, r4, #12, #4
 801ed00:	f3c6 3003 	ubfx	r0, r6, #12, #4
 801ed04:	ea4f 6c13 	mov.w	ip, r3, lsr #24
 801ed08:	2a00      	cmp	r2, #0
 801ed0a:	f000 8107 	beq.w	801ef1c <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x6c8>
 801ed0e:	684d      	ldr	r5, [r1, #4]
 801ed10:	950d      	str	r5, [sp, #52]	@ 0x34
 801ed12:	0e2d      	lsrs	r5, r5, #24
 801ed14:	9514      	str	r5, [sp, #80]	@ 0x50
 801ed16:	b178      	cbz	r0, 801ed38 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x4e4>
 801ed18:	f107 4780 	add.w	r7, r7, #1073741824	@ 0x40000000
 801ed1c:	3f01      	subs	r7, #1
 801ed1e:	00bf      	lsls	r7, r7, #2
 801ed20:	3704      	adds	r7, #4
 801ed22:	eb01 0e07 	add.w	lr, r1, r7
 801ed26:	59c9      	ldr	r1, [r1, r7]
 801ed28:	9109      	str	r1, [sp, #36]	@ 0x24
 801ed2a:	0e09      	lsrs	r1, r1, #24
 801ed2c:	9111      	str	r1, [sp, #68]	@ 0x44
 801ed2e:	f8de 1004 	ldr.w	r1, [lr, #4]
 801ed32:	910e      	str	r1, [sp, #56]	@ 0x38
 801ed34:	0e09      	lsrs	r1, r1, #24
 801ed36:	9115      	str	r1, [sp, #84]	@ 0x54
 801ed38:	b292      	uxth	r2, r2
 801ed3a:	b280      	uxth	r0, r0
 801ed3c:	fb02 f900 	mul.w	r9, r2, r0
 801ed40:	ebc9 1000 	rsb	r0, r9, r0, lsl #4
 801ed44:	0112      	lsls	r2, r2, #4
 801ed46:	eba2 0e09 	sub.w	lr, r2, r9
 801ed4a:	b280      	uxth	r0, r0
 801ed4c:	f5c2 7180 	rsb	r1, r2, #256	@ 0x100
 801ed50:	9a14      	ldr	r2, [sp, #80]	@ 0x50
 801ed52:	9d11      	ldr	r5, [sp, #68]	@ 0x44
 801ed54:	fa1f fe8e 	uxth.w	lr, lr
 801ed58:	1a09      	subs	r1, r1, r0
 801ed5a:	b289      	uxth	r1, r1
 801ed5c:	fb0e f202 	mul.w	r2, lr, r2
 801ed60:	fb01 220c 	mla	r2, r1, ip, r2
 801ed64:	fb00 2205 	mla	r2, r0, r5, r2
 801ed68:	9d15      	ldr	r5, [sp, #84]	@ 0x54
 801ed6a:	fb09 2205 	mla	r2, r9, r5, r2
 801ed6e:	f3c2 2207 	ubfx	r2, r2, #8, #8
 801ed72:	2a00      	cmp	r2, #0
 801ed74:	f000 80c9 	beq.w	801ef0a <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x6b6>
 801ed78:	f1bc 0fff 	cmp.w	ip, #255	@ 0xff
 801ed7c:	d019      	beq.n	801edb2 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x55e>
 801ed7e:	f003 1aff 	and.w	sl, r3, #16711935	@ 0xff00ff
 801ed82:	fb0c fa0a 	mul.w	sl, ip, sl
 801ed86:	f403 437f 	and.w	r3, r3, #65280	@ 0xff00
 801ed8a:	fb0c fc03 	mul.w	ip, ip, r3
 801ed8e:	ea4f 231a 	mov.w	r3, sl, lsr #8
 801ed92:	f003 13ff 	and.w	r3, r3, #16711935	@ 0xff00ff
 801ed96:	f10a 1a01 	add.w	sl, sl, #65537	@ 0x10001
 801ed9a:	f50c 7780 	add.w	r7, ip, #256	@ 0x100
 801ed9e:	4453      	add	r3, sl
 801eda0:	eb07 271c 	add.w	r7, r7, ip, lsr #8
 801eda4:	0a1b      	lsrs	r3, r3, #8
 801eda6:	0a3f      	lsrs	r7, r7, #8
 801eda8:	f003 13ff 	and.w	r3, r3, #16711935	@ 0xff00ff
 801edac:	f407 477f 	and.w	r7, r7, #65280	@ 0xff00
 801edb0:	433b      	orrs	r3, r7
 801edb2:	9d14      	ldr	r5, [sp, #80]	@ 0x50
 801edb4:	2dff      	cmp	r5, #255	@ 0xff
 801edb6:	d020      	beq.n	801edfa <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x5a6>
 801edb8:	9d0d      	ldr	r5, [sp, #52]	@ 0x34
 801edba:	f005 17ff 	and.w	r7, r5, #16711935	@ 0xff00ff
 801edbe:	9d14      	ldr	r5, [sp, #80]	@ 0x50
 801edc0:	436f      	muls	r7, r5
 801edc2:	9d0d      	ldr	r5, [sp, #52]	@ 0x34
 801edc4:	f405 4a7f 	and.w	sl, r5, #65280	@ 0xff00
 801edc8:	9d14      	ldr	r5, [sp, #80]	@ 0x50
 801edca:	ea4f 2c17 	mov.w	ip, r7, lsr #8
 801edce:	fb05 fa0a 	mul.w	sl, r5, sl
 801edd2:	f107 1701 	add.w	r7, r7, #65537	@ 0x10001
 801edd6:	f00c 1cff 	and.w	ip, ip, #16711935	@ 0xff00ff
 801edda:	44bc      	add	ip, r7
 801eddc:	f50a 7780 	add.w	r7, sl, #256	@ 0x100
 801ede0:	eb07 2a1a 	add.w	sl, r7, sl, lsr #8
 801ede4:	ea4f 2c1c 	mov.w	ip, ip, lsr #8
 801ede8:	ea4f 2a1a 	mov.w	sl, sl, lsr #8
 801edec:	f00c 1cff 	and.w	ip, ip, #16711935	@ 0xff00ff
 801edf0:	f40a 4a7f 	and.w	sl, sl, #65280	@ 0xff00
 801edf4:	ea4c 050a 	orr.w	r5, ip, sl
 801edf8:	950d      	str	r5, [sp, #52]	@ 0x34
 801edfa:	9d11      	ldr	r5, [sp, #68]	@ 0x44
 801edfc:	2dff      	cmp	r5, #255	@ 0xff
 801edfe:	d020      	beq.n	801ee42 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x5ee>
 801ee00:	9d09      	ldr	r5, [sp, #36]	@ 0x24
 801ee02:	f005 17ff 	and.w	r7, r5, #16711935	@ 0xff00ff
 801ee06:	9d11      	ldr	r5, [sp, #68]	@ 0x44
 801ee08:	436f      	muls	r7, r5
 801ee0a:	9d09      	ldr	r5, [sp, #36]	@ 0x24
 801ee0c:	f405 4c7f 	and.w	ip, r5, #65280	@ 0xff00
 801ee10:	9d11      	ldr	r5, [sp, #68]	@ 0x44
 801ee12:	fb05 fa0c 	mul.w	sl, r5, ip
 801ee16:	ea4f 2c17 	mov.w	ip, r7, lsr #8
 801ee1a:	f00c 1cff 	and.w	ip, ip, #16711935	@ 0xff00ff
 801ee1e:	f107 1701 	add.w	r7, r7, #65537	@ 0x10001
 801ee22:	44bc      	add	ip, r7
 801ee24:	f50a 7780 	add.w	r7, sl, #256	@ 0x100
 801ee28:	eb07 2a1a 	add.w	sl, r7, sl, lsr #8
 801ee2c:	ea4f 2c1c 	mov.w	ip, ip, lsr #8
 801ee30:	ea4f 2a1a 	mov.w	sl, sl, lsr #8
 801ee34:	f00c 1cff 	and.w	ip, ip, #16711935	@ 0xff00ff
 801ee38:	f40a 4a7f 	and.w	sl, sl, #65280	@ 0xff00
 801ee3c:	ea4c 050a 	orr.w	r5, ip, sl
 801ee40:	9509      	str	r5, [sp, #36]	@ 0x24
 801ee42:	9d15      	ldr	r5, [sp, #84]	@ 0x54
 801ee44:	2dff      	cmp	r5, #255	@ 0xff
 801ee46:	d020      	beq.n	801ee8a <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x636>
 801ee48:	9d0e      	ldr	r5, [sp, #56]	@ 0x38
 801ee4a:	f005 17ff 	and.w	r7, r5, #16711935	@ 0xff00ff
 801ee4e:	9d15      	ldr	r5, [sp, #84]	@ 0x54
 801ee50:	436f      	muls	r7, r5
 801ee52:	9d0e      	ldr	r5, [sp, #56]	@ 0x38
 801ee54:	f405 4a7f 	and.w	sl, r5, #65280	@ 0xff00
 801ee58:	9d15      	ldr	r5, [sp, #84]	@ 0x54
 801ee5a:	ea4f 2c17 	mov.w	ip, r7, lsr #8
 801ee5e:	fb05 fa0a 	mul.w	sl, r5, sl
 801ee62:	f107 1701 	add.w	r7, r7, #65537	@ 0x10001
 801ee66:	f00c 1cff 	and.w	ip, ip, #16711935	@ 0xff00ff
 801ee6a:	44bc      	add	ip, r7
 801ee6c:	f50a 7780 	add.w	r7, sl, #256	@ 0x100
 801ee70:	eb07 2a1a 	add.w	sl, r7, sl, lsr #8
 801ee74:	ea4f 2c1c 	mov.w	ip, ip, lsr #8
 801ee78:	ea4f 2a1a 	mov.w	sl, sl, lsr #8
 801ee7c:	f00c 1cff 	and.w	ip, ip, #16711935	@ 0xff00ff
 801ee80:	f40a 4a7f 	and.w	sl, sl, #65280	@ 0xff00
 801ee84:	ea4c 050a 	orr.w	r5, ip, sl
 801ee88:	950e      	str	r5, [sp, #56]	@ 0x38
 801ee8a:	9d0d      	ldr	r5, [sp, #52]	@ 0x34
 801ee8c:	f005 17ff 	and.w	r7, r5, #16711935	@ 0xff00ff
 801ee90:	9d09      	ldr	r5, [sp, #36]	@ 0x24
 801ee92:	f003 1cff 	and.w	ip, r3, #16711935	@ 0xff00ff
 801ee96:	fb0e f707 	mul.w	r7, lr, r7
 801ee9a:	fb01 770c 	mla	r7, r1, ip, r7
 801ee9e:	f005 1cff 	and.w	ip, r5, #16711935	@ 0xff00ff
 801eea2:	9d0e      	ldr	r5, [sp, #56]	@ 0x38
 801eea4:	fb00 770c 	mla	r7, r0, ip, r7
 801eea8:	f005 1cff 	and.w	ip, r5, #16711935	@ 0xff00ff
 801eeac:	9d0d      	ldr	r5, [sp, #52]	@ 0x34
 801eeae:	fb09 770c 	mla	r7, r9, ip, r7
 801eeb2:	f405 4c7f 	and.w	ip, r5, #65280	@ 0xff00
 801eeb6:	fb0e fe0c 	mul.w	lr, lr, ip
 801eeba:	f403 437f 	and.w	r3, r3, #65280	@ 0xff00
 801eebe:	fb01 e303 	mla	r3, r1, r3, lr
 801eec2:	9909      	ldr	r1, [sp, #36]	@ 0x24
 801eec4:	f401 4a7f 	and.w	sl, r1, #65280	@ 0xff00
 801eec8:	990e      	ldr	r1, [sp, #56]	@ 0x38
 801eeca:	fb00 330a 	mla	r3, r0, sl, r3
 801eece:	f401 4c7f 	and.w	ip, r1, #65280	@ 0xff00
 801eed2:	fb09 3c0c 	mla	ip, r9, ip, r3
 801eed6:	0a3f      	lsrs	r7, r7, #8
 801eed8:	ea4f 2c1c 	mov.w	ip, ip, lsr #8
 801eedc:	f007 17ff 	and.w	r7, r7, #16711935	@ 0xff00ff
 801eee0:	f40c 4c7f 	and.w	ip, ip, #65280	@ 0xff00
 801eee4:	ea47 070c 	orr.w	r7, r7, ip
 801eee8:	2aff      	cmp	r2, #255	@ 0xff
 801eeea:	ea4f 2317 	mov.w	r3, r7, lsr #8
 801eeee:	d11e      	bne.n	801ef2e <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x6da>
 801eef0:	097a      	lsrs	r2, r7, #5
 801eef2:	f423 63ff 	bic.w	r3, r3, #2040	@ 0x7f8
 801eef6:	f402 62fc 	and.w	r2, r2, #2016	@ 0x7e0
 801eefa:	f023 0307 	bic.w	r3, r3, #7
 801eefe:	4313      	orrs	r3, r2
 801ef00:	f3c7 07c4 	ubfx	r7, r7, #3, #5
 801ef04:	431f      	orrs	r7, r3
 801ef06:	f8a8 7000 	strh.w	r7, [r8]
 801ef0a:	9b27      	ldr	r3, [sp, #156]	@ 0x9c
 801ef0c:	441c      	add	r4, r3
 801ef0e:	9b28      	ldr	r3, [sp, #160]	@ 0xa0
 801ef10:	f108 0802 	add.w	r8, r8, #2
 801ef14:	441e      	add	r6, r3
 801ef16:	f10b 3bff 	add.w	fp, fp, #4294967295
 801ef1a:	e644      	b.n	801eba6 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x352>
 801ef1c:	2800      	cmp	r0, #0
 801ef1e:	f43f af0b 	beq.w	801ed38 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x4e4>
 801ef22:	f851 1027 	ldr.w	r1, [r1, r7, lsl #2]
 801ef26:	9109      	str	r1, [sp, #36]	@ 0x24
 801ef28:	0e09      	lsrs	r1, r1, #24
 801ef2a:	9111      	str	r1, [sp, #68]	@ 0x44
 801ef2c:	e704      	b.n	801ed38 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x4e4>
 801ef2e:	f8b8 1000 	ldrh.w	r1, [r8]
 801ef32:	43d2      	mvns	r2, r2
 801ef34:	ea4f 2c21 	mov.w	ip, r1, asr #8
 801ef38:	fa5f fe82 	uxtb.w	lr, r2
 801ef3c:	f00c 0cf8 	and.w	ip, ip, #248	@ 0xf8
 801ef40:	fb0c fc0e 	mul.w	ip, ip, lr
 801ef44:	10c8      	asrs	r0, r1, #3
 801ef46:	00ca      	lsls	r2, r1, #3
 801ef48:	f10c 0101 	add.w	r1, ip, #1
 801ef4c:	eb01 2c1c 	add.w	ip, r1, ip, lsr #8
 801ef50:	0c39      	lsrs	r1, r7, #16
 801ef52:	eb01 2c1c 	add.w	ip, r1, ip, lsr #8
 801ef56:	f000 00fc 	and.w	r0, r0, #252	@ 0xfc
 801ef5a:	4911      	ldr	r1, [pc, #68]	@ (801efa0 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x74c>)
 801ef5c:	fb00 f00e 	mul.w	r0, r0, lr
 801ef60:	fa5f fc8c 	uxtb.w	ip, ip
 801ef64:	ea01 2c0c 	and.w	ip, r1, ip, lsl #8
 801ef68:	b2d2      	uxtb	r2, r2
 801ef6a:	1c41      	adds	r1, r0, #1
 801ef6c:	fb02 f20e 	mul.w	r2, r2, lr
 801ef70:	eb01 2010 	add.w	r0, r1, r0, lsr #8
 801ef74:	eb03 2010 	add.w	r0, r3, r0, lsr #8
 801ef78:	1c51      	adds	r1, r2, #1
 801ef7a:	00c0      	lsls	r0, r0, #3
 801ef7c:	eb01 2212 	add.w	r2, r1, r2, lsr #8
 801ef80:	f400 60fc 	and.w	r0, r0, #2016	@ 0x7e0
 801ef84:	eb07 2712 	add.w	r7, r7, r2, lsr #8
 801ef88:	ea4c 0c00 	orr.w	ip, ip, r0
 801ef8c:	f3c7 07c4 	ubfx	r7, r7, #3, #5
 801ef90:	ea47 0c0c 	orr.w	ip, r7, ip
 801ef94:	f8a8 c000 	strh.w	ip, [r8]
 801ef98:	e7b7      	b.n	801ef0a <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x6b6>
 801ef9a:	b01b      	add	sp, #108	@ 0x6c
 801ef9c:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 801efa0:	fffff800 	.word	0xfffff800

0801efa4 <_ZNK8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtsssiihhh>:
 801efa4:	e92d 47f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
 801efa8:	e9dd 050a 	ldrd	r0, r5, [sp, #40]	@ 0x28
 801efac:	2d00      	cmp	r5, #0
 801efae:	f9bd 8020 	ldrsh.w	r8, [sp, #32]
 801efb2:	f9bd 9024 	ldrsh.w	r9, [sp, #36]	@ 0x24
 801efb6:	f89d 7030 	ldrb.w	r7, [sp, #48]	@ 0x30
 801efba:	f89d c034 	ldrb.w	ip, [sp, #52]	@ 0x34
 801efbe:	fb05 0e03 	mla	lr, r5, r3, r0
 801efc2:	f2c0 808c 	blt.w	801f0de <_ZNK8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtsssiihhh+0x13a>
 801efc6:	45a9      	cmp	r9, r5
 801efc8:	f340 8089 	ble.w	801f0de <_ZNK8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtsssiihhh+0x13a>
 801efcc:	2800      	cmp	r0, #0
 801efce:	f2c0 8084 	blt.w	801f0da <_ZNK8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtsssiihhh+0x136>
 801efd2:	4580      	cmp	r8, r0
 801efd4:	f340 8081 	ble.w	801f0da <_ZNK8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtsssiihhh+0x136>
 801efd8:	ea4f 045e 	mov.w	r4, lr, lsr #1
 801efdc:	f01e 0f01 	tst.w	lr, #1
 801efe0:	5d16      	ldrb	r6, [r2, r4]
 801efe2:	bf0c      	ite	eq
 801efe4:	f006 060f 	andeq.w	r6, r6, #15
 801efe8:	1136      	asrne	r6, r6, #4
 801efea:	eb06 1606 	add.w	r6, r6, r6, lsl #4
 801efee:	b2f6      	uxtb	r6, r6
 801eff0:	1c44      	adds	r4, r0, #1
 801eff2:	d477      	bmi.n	801f0e4 <_ZNK8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtsssiihhh+0x140>
 801eff4:	45a0      	cmp	r8, r4
 801eff6:	dd75      	ble.n	801f0e4 <_ZNK8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtsssiihhh+0x140>
 801eff8:	2f00      	cmp	r7, #0
 801effa:	d075      	beq.n	801f0e8 <_ZNK8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtsssiihhh+0x144>
 801effc:	f10e 0a01 	add.w	sl, lr, #1
 801f000:	ea4f 045a 	mov.w	r4, sl, lsr #1
 801f004:	f01a 0f01 	tst.w	sl, #1
 801f008:	5d14      	ldrb	r4, [r2, r4]
 801f00a:	bf0c      	ite	eq
 801f00c:	f004 040f 	andeq.w	r4, r4, #15
 801f010:	1124      	asrne	r4, r4, #4
 801f012:	eb04 1404 	add.w	r4, r4, r4, lsl #4
 801f016:	b2e4      	uxtb	r4, r4
 801f018:	3501      	adds	r5, #1
 801f01a:	d469      	bmi.n	801f0f0 <_ZNK8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtsssiihhh+0x14c>
 801f01c:	45a9      	cmp	r9, r5
 801f01e:	dd67      	ble.n	801f0f0 <_ZNK8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtsssiihhh+0x14c>
 801f020:	f1bc 0f00 	cmp.w	ip, #0
 801f024:	d067      	beq.n	801f0f6 <_ZNK8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtsssiihhh+0x152>
 801f026:	2800      	cmp	r0, #0
 801f028:	db60      	blt.n	801f0ec <_ZNK8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtsssiihhh+0x148>
 801f02a:	4580      	cmp	r8, r0
 801f02c:	dd5e      	ble.n	801f0ec <_ZNK8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtsssiihhh+0x148>
 801f02e:	eb03 090e 	add.w	r9, r3, lr
 801f032:	ea4f 0559 	mov.w	r5, r9, lsr #1
 801f036:	f019 0f01 	tst.w	r9, #1
 801f03a:	5d55      	ldrb	r5, [r2, r5]
 801f03c:	bf0c      	ite	eq
 801f03e:	f005 050f 	andeq.w	r5, r5, #15
 801f042:	112d      	asrne	r5, r5, #4
 801f044:	eb05 1505 	add.w	r5, r5, r5, lsl #4
 801f048:	b2ed      	uxtb	r5, r5
 801f04a:	3001      	adds	r0, #1
 801f04c:	d456      	bmi.n	801f0fc <_ZNK8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtsssiihhh+0x158>
 801f04e:	4580      	cmp	r8, r0
 801f050:	dd54      	ble.n	801f0fc <_ZNK8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtsssiihhh+0x158>
 801f052:	2f00      	cmp	r7, #0
 801f054:	d054      	beq.n	801f100 <_ZNK8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtsssiihhh+0x15c>
 801f056:	3301      	adds	r3, #1
 801f058:	449e      	add	lr, r3
 801f05a:	ea4f 035e 	mov.w	r3, lr, lsr #1
 801f05e:	f01e 0f01 	tst.w	lr, #1
 801f062:	5cd0      	ldrb	r0, [r2, r3]
 801f064:	bf0c      	ite	eq
 801f066:	f000 000f 	andeq.w	r0, r0, #15
 801f06a:	1100      	asrne	r0, r0, #4
 801f06c:	eb00 1000 	add.w	r0, r0, r0, lsl #4
 801f070:	b2c3      	uxtb	r3, r0
 801f072:	b2ba      	uxth	r2, r7
 801f074:	fa1f fc8c 	uxth.w	ip, ip
 801f078:	fb02 f00c 	mul.w	r0, r2, ip
 801f07c:	ebc0 1c0c 	rsb	ip, r0, ip, lsl #4
 801f080:	0112      	lsls	r2, r2, #4
 801f082:	fa1f fc8c 	uxth.w	ip, ip
 801f086:	f5c2 7780 	rsb	r7, r2, #256	@ 0x100
 801f08a:	1a12      	subs	r2, r2, r0
 801f08c:	eba7 070c 	sub.w	r7, r7, ip
 801f090:	b292      	uxth	r2, r2
 801f092:	b2bf      	uxth	r7, r7
 801f094:	4362      	muls	r2, r4
 801f096:	fb06 2207 	mla	r2, r6, r7, r2
 801f09a:	fb0c 2505 	mla	r5, ip, r5, r2
 801f09e:	fb00 5303 	mla	r3, r0, r3, r5
 801f0a2:	f3c3 2307 	ubfx	r3, r3, #8, #8
 801f0a6:	b1b3      	cbz	r3, 801f0d6 <_ZNK8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtsssiihhh+0x132>
 801f0a8:	f89d 2038 	ldrb.w	r2, [sp, #56]	@ 0x38
 801f0ac:	435a      	muls	r2, r3
 801f0ae:	1c53      	adds	r3, r2, #1
 801f0b0:	eb03 2312 	add.w	r3, r3, r2, lsr #8
 801f0b4:	4a2d      	ldr	r2, [pc, #180]	@ (801f16c <_ZNK8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtsssiihhh+0x1c8>)
 801f0b6:	121b      	asrs	r3, r3, #8
 801f0b8:	6812      	ldr	r2, [r2, #0]
 801f0ba:	2bff      	cmp	r3, #255	@ 0xff
 801f0bc:	ea4f 2612 	mov.w	r6, r2, lsr #8
 801f0c0:	d120      	bne.n	801f104 <_ZNK8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtsssiihhh+0x160>
 801f0c2:	4b2b      	ldr	r3, [pc, #172]	@ (801f170 <_ZNK8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtsssiihhh+0x1cc>)
 801f0c4:	0950      	lsrs	r0, r2, #5
 801f0c6:	f400 60fc 	and.w	r0, r0, #2016	@ 0x7e0
 801f0ca:	4033      	ands	r3, r6
 801f0cc:	4318      	orrs	r0, r3
 801f0ce:	f3c2 02c4 	ubfx	r2, r2, #3, #5
 801f0d2:	4302      	orrs	r2, r0
 801f0d4:	800a      	strh	r2, [r1, #0]
 801f0d6:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
 801f0da:	2600      	movs	r6, #0
 801f0dc:	e788      	b.n	801eff0 <_ZNK8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtsssiihhh+0x4c>
 801f0de:	2400      	movs	r4, #0
 801f0e0:	4626      	mov	r6, r4
 801f0e2:	e799      	b.n	801f018 <_ZNK8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtsssiihhh+0x74>
 801f0e4:	2400      	movs	r4, #0
 801f0e6:	e797      	b.n	801f018 <_ZNK8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtsssiihhh+0x74>
 801f0e8:	463c      	mov	r4, r7
 801f0ea:	e795      	b.n	801f018 <_ZNK8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtsssiihhh+0x74>
 801f0ec:	2500      	movs	r5, #0
 801f0ee:	e7ac      	b.n	801f04a <_ZNK8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtsssiihhh+0xa6>
 801f0f0:	2300      	movs	r3, #0
 801f0f2:	461d      	mov	r5, r3
 801f0f4:	e7bd      	b.n	801f072 <_ZNK8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtsssiihhh+0xce>
 801f0f6:	4663      	mov	r3, ip
 801f0f8:	4665      	mov	r5, ip
 801f0fa:	e7ba      	b.n	801f072 <_ZNK8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtsssiihhh+0xce>
 801f0fc:	2300      	movs	r3, #0
 801f0fe:	e7b8      	b.n	801f072 <_ZNK8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtsssiihhh+0xce>
 801f100:	463b      	mov	r3, r7
 801f102:	e7b6      	b.n	801f072 <_ZNK8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtsssiihhh+0xce>
 801f104:	880d      	ldrh	r5, [r1, #0]
 801f106:	b29f      	uxth	r7, r3
 801f108:	122c      	asrs	r4, r5, #8
 801f10a:	f3c2 4007 	ubfx	r0, r2, #16, #8
 801f10e:	43db      	mvns	r3, r3
 801f110:	b2db      	uxtb	r3, r3
 801f112:	fb10 f007 	smulbb	r0, r0, r7
 801f116:	f004 04f8 	and.w	r4, r4, #248	@ 0xf8
 801f11a:	fb04 0403 	mla	r4, r4, r3, r0
 801f11e:	b2f6      	uxtb	r6, r6
 801f120:	10e8      	asrs	r0, r5, #3
 801f122:	b2d2      	uxtb	r2, r2
 801f124:	00ed      	lsls	r5, r5, #3
 801f126:	f000 00fc 	and.w	r0, r0, #252	@ 0xfc
 801f12a:	fb12 f207 	smulbb	r2, r2, r7
 801f12e:	fb16 f607 	smulbb	r6, r6, r7
 801f132:	b2ed      	uxtb	r5, r5
 801f134:	b2a4      	uxth	r4, r4
 801f136:	fb00 6603 	mla	r6, r0, r3, r6
 801f13a:	fb05 2303 	mla	r3, r5, r3, r2
 801f13e:	b29a      	uxth	r2, r3
 801f140:	1c63      	adds	r3, r4, #1
 801f142:	b2b0      	uxth	r0, r6
 801f144:	eb03 2414 	add.w	r4, r3, r4, lsr #8
 801f148:	1c53      	adds	r3, r2, #1
 801f14a:	eb03 2312 	add.w	r3, r3, r2, lsr #8
 801f14e:	1c42      	adds	r2, r0, #1
 801f150:	eb02 2010 	add.w	r0, r2, r0, lsr #8
 801f154:	f404 4478 	and.w	r4, r4, #63488	@ 0xf800
 801f158:	f3c3 23c4 	ubfx	r3, r3, #11, #5
 801f15c:	0940      	lsrs	r0, r0, #5
 801f15e:	4323      	orrs	r3, r4
 801f160:	f400 60fc 	and.w	r0, r0, #2016	@ 0x7e0
 801f164:	4303      	orrs	r3, r0
 801f166:	800b      	strh	r3, [r1, #0]
 801f168:	e7b5      	b.n	801f0d6 <_ZNK8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtsssiihhh+0x132>
 801f16a:	bf00      	nop
 801f16c:	20002c64 	.word	0x20002c64
 801f170:	00fff800 	.word	0x00fff800

0801f174 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff>:
 801f174:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 801f178:	b097      	sub	sp, #92	@ 0x5c
 801f17a:	e9dd 4621 	ldrd	r4, r6, [sp, #132]	@ 0x84
 801f17e:	9214      	str	r2, [sp, #80]	@ 0x50
 801f180:	9309      	str	r3, [sp, #36]	@ 0x24
 801f182:	9a25      	ldr	r2, [sp, #148]	@ 0x94
 801f184:	f89d 30a4 	ldrb.w	r3, [sp, #164]	@ 0xa4
 801f188:	910d      	str	r1, [sp, #52]	@ 0x34
 801f18a:	930f      	str	r3, [sp, #60]	@ 0x3c
 801f18c:	e9dd 1326 	ldrd	r1, r3, [sp, #152]	@ 0x98
 801f190:	9015      	str	r0, [sp, #84]	@ 0x54
 801f192:	6850      	ldr	r0, [r2, #4]
 801f194:	6812      	ldr	r2, [r2, #0]
 801f196:	fb00 1303 	mla	r3, r0, r3, r1
 801f19a:	eb02 0943 	add.w	r9, r2, r3, lsl #1
 801f19e:	9b28      	ldr	r3, [sp, #160]	@ 0xa0
 801f1a0:	689b      	ldr	r3, [r3, #8]
 801f1a2:	3301      	adds	r3, #1
 801f1a4:	f023 0301 	bic.w	r3, r3, #1
 801f1a8:	930a      	str	r3, [sp, #40]	@ 0x28
 801f1aa:	9b28      	ldr	r3, [sp, #160]	@ 0xa0
 801f1ac:	681f      	ldr	r7, [r3, #0]
 801f1ae:	9b0d      	ldr	r3, [sp, #52]	@ 0x34
 801f1b0:	2b00      	cmp	r3, #0
 801f1b2:	dc03      	bgt.n	801f1bc <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x48>
 801f1b4:	9b14      	ldr	r3, [sp, #80]	@ 0x50
 801f1b6:	2b00      	cmp	r3, #0
 801f1b8:	f340 8287 	ble.w	801f6ca <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x556>
 801f1bc:	9b28      	ldr	r3, [sp, #160]	@ 0xa0
 801f1be:	f9b3 1008 	ldrsh.w	r1, [r3, #8]
 801f1c2:	f9b3 200c 	ldrsh.w	r2, [r3, #12]
 801f1c6:	1e48      	subs	r0, r1, #1
 801f1c8:	f102 3cff 	add.w	ip, r2, #4294967295
 801f1cc:	9b09      	ldr	r3, [sp, #36]	@ 0x24
 801f1ce:	2b00      	cmp	r3, #0
 801f1d0:	f340 80c4 	ble.w	801f35c <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1e8>
 801f1d4:	ea5f 4e24 	movs.w	lr, r4, asr #16
 801f1d8:	ea4f 4326 	mov.w	r3, r6, asr #16
 801f1dc:	d406      	bmi.n	801f1ec <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x78>
 801f1de:	4586      	cmp	lr, r0
 801f1e0:	da04      	bge.n	801f1ec <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x78>
 801f1e2:	2b00      	cmp	r3, #0
 801f1e4:	db02      	blt.n	801f1ec <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x78>
 801f1e6:	4563      	cmp	r3, ip
 801f1e8:	f2c0 80b9 	blt.w	801f35e <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1ea>
 801f1ec:	f11e 0e01 	adds.w	lr, lr, #1
 801f1f0:	f100 80aa 	bmi.w	801f348 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1d4>
 801f1f4:	4571      	cmp	r1, lr
 801f1f6:	f2c0 80a7 	blt.w	801f348 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1d4>
 801f1fa:	3301      	adds	r3, #1
 801f1fc:	f100 80a4 	bmi.w	801f348 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1d4>
 801f200:	429a      	cmp	r2, r3
 801f202:	f2c0 80a1 	blt.w	801f348 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1d4>
 801f206:	9b09      	ldr	r3, [sp, #36]	@ 0x24
 801f208:	f9bd a028 	ldrsh.w	sl, [sp, #40]	@ 0x28
 801f20c:	930e      	str	r3, [sp, #56]	@ 0x38
 801f20e:	46c8      	mov	r8, r9
 801f210:	9b0e      	ldr	r3, [sp, #56]	@ 0x38
 801f212:	2b00      	cmp	r3, #0
 801f214:	f340 80c3 	ble.w	801f39e <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x22a>
 801f218:	9b28      	ldr	r3, [sp, #160]	@ 0xa0
 801f21a:	e9d3 ce02 	ldrd	ip, lr, [r3, #8]
 801f21e:	1423      	asrs	r3, r4, #16
 801f220:	ea4f 4026 	mov.w	r0, r6, asr #16
 801f224:	f3c4 3203 	ubfx	r2, r4, #12, #4
 801f228:	f3c6 3103 	ubfx	r1, r6, #12, #4
 801f22c:	f100 814d 	bmi.w	801f4ca <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x356>
 801f230:	f10c 3bff 	add.w	fp, ip, #4294967295
 801f234:	455b      	cmp	r3, fp
 801f236:	f280 8148 	bge.w	801f4ca <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x356>
 801f23a:	2800      	cmp	r0, #0
 801f23c:	f2c0 8145 	blt.w	801f4ca <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x356>
 801f240:	f10e 3bff 	add.w	fp, lr, #4294967295
 801f244:	4558      	cmp	r0, fp
 801f246:	f280 8140 	bge.w	801f4ca <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x356>
 801f24a:	9d0a      	ldr	r5, [sp, #40]	@ 0x28
 801f24c:	fb00 3305 	mla	r3, r0, r5, r3
 801f250:	0858      	lsrs	r0, r3, #1
 801f252:	07dd      	lsls	r5, r3, #31
 801f254:	f817 c000 	ldrb.w	ip, [r7, r0]
 801f258:	bf54      	ite	pl
 801f25a:	f00c 0c0f 	andpl.w	ip, ip, #15
 801f25e:	ea4f 1c2c 	movmi.w	ip, ip, asr #4
 801f262:	eb0c 1c0c 	add.w	ip, ip, ip, lsl #4
 801f266:	fa5f fc8c 	uxtb.w	ip, ip
 801f26a:	2a00      	cmp	r2, #0
 801f26c:	f000 80db 	beq.w	801f426 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2b2>
 801f270:	1c58      	adds	r0, r3, #1
 801f272:	ea4f 0e50 	mov.w	lr, r0, lsr #1
 801f276:	07c0      	lsls	r0, r0, #31
 801f278:	f817 e00e 	ldrb.w	lr, [r7, lr]
 801f27c:	bf54      	ite	pl
 801f27e:	f00e 0e0f 	andpl.w	lr, lr, #15
 801f282:	ea4f 1e2e 	movmi.w	lr, lr, asr #4
 801f286:	eb0e 1e0e 	add.w	lr, lr, lr, lsl #4
 801f28a:	fa5f f08e 	uxtb.w	r0, lr
 801f28e:	9010      	str	r0, [sp, #64]	@ 0x40
 801f290:	b1c9      	cbz	r1, 801f2c6 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x152>
 801f292:	4453      	add	r3, sl
 801f294:	0858      	lsrs	r0, r3, #1
 801f296:	07dd      	lsls	r5, r3, #31
 801f298:	5c38      	ldrb	r0, [r7, r0]
 801f29a:	bf54      	ite	pl
 801f29c:	f000 000f 	andpl.w	r0, r0, #15
 801f2a0:	1100      	asrmi	r0, r0, #4
 801f2a2:	eb00 1000 	add.w	r0, r0, r0, lsl #4
 801f2a6:	3301      	adds	r3, #1
 801f2a8:	b2c0      	uxtb	r0, r0
 801f2aa:	900b      	str	r0, [sp, #44]	@ 0x2c
 801f2ac:	0858      	lsrs	r0, r3, #1
 801f2ae:	07dd      	lsls	r5, r3, #31
 801f2b0:	f817 e000 	ldrb.w	lr, [r7, r0]
 801f2b4:	bf54      	ite	pl
 801f2b6:	f00e 030f 	andpl.w	r3, lr, #15
 801f2ba:	ea4f 132e 	movmi.w	r3, lr, asr #4
 801f2be:	eb03 1303 	add.w	r3, r3, r3, lsl #4
 801f2c2:	b2db      	uxtb	r3, r3
 801f2c4:	9311      	str	r3, [sp, #68]	@ 0x44
 801f2c6:	b292      	uxth	r2, r2
 801f2c8:	b289      	uxth	r1, r1
 801f2ca:	fb02 f301 	mul.w	r3, r2, r1
 801f2ce:	ebc3 1101 	rsb	r1, r3, r1, lsl #4
 801f2d2:	0112      	lsls	r2, r2, #4
 801f2d4:	b289      	uxth	r1, r1
 801f2d6:	f5c2 7080 	rsb	r0, r2, #256	@ 0x100
 801f2da:	9d10      	ldr	r5, [sp, #64]	@ 0x40
 801f2dc:	1ad2      	subs	r2, r2, r3
 801f2de:	1a40      	subs	r0, r0, r1
 801f2e0:	b292      	uxth	r2, r2
 801f2e2:	436a      	muls	r2, r5
 801f2e4:	b280      	uxth	r0, r0
 801f2e6:	fb0c 2c00 	mla	ip, ip, r0, r2
 801f2ea:	9a0b      	ldr	r2, [sp, #44]	@ 0x2c
 801f2ec:	fb01 c102 	mla	r1, r1, r2, ip
 801f2f0:	9a11      	ldr	r2, [sp, #68]	@ 0x44
 801f2f2:	fb03 1302 	mla	r3, r3, r2, r1
 801f2f6:	f3c3 2307 	ubfx	r3, r3, #8, #8
 801f2fa:	b1db      	cbz	r3, 801f334 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1c0>
 801f2fc:	9a0f      	ldr	r2, [sp, #60]	@ 0x3c
 801f2fe:	4353      	muls	r3, r2
 801f300:	1c5a      	adds	r2, r3, #1
 801f302:	eb02 2313 	add.w	r3, r2, r3, lsr #8
 801f306:	4ac6      	ldr	r2, [pc, #792]	@ (801f620 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x4ac>)
 801f308:	121b      	asrs	r3, r3, #8
 801f30a:	6812      	ldr	r2, [r2, #0]
 801f30c:	2bff      	cmp	r3, #255	@ 0xff
 801f30e:	ea4f 2c12 	mov.w	ip, r2, lsr #8
 801f312:	f040 8099 	bne.w	801f448 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2d4>
 801f316:	0953      	lsrs	r3, r2, #5
 801f318:	f42c 6cff 	bic.w	ip, ip, #2040	@ 0x7f8
 801f31c:	f403 63fc 	and.w	r3, r3, #2016	@ 0x7e0
 801f320:	f02c 0c07 	bic.w	ip, ip, #7
 801f324:	ea43 0c0c 	orr.w	ip, r3, ip
 801f328:	f3c2 02c4 	ubfx	r2, r2, #3, #5
 801f32c:	ea4c 0202 	orr.w	r2, ip, r2
 801f330:	f8a8 2000 	strh.w	r2, [r8]
 801f334:	9b23      	ldr	r3, [sp, #140]	@ 0x8c
 801f336:	441c      	add	r4, r3
 801f338:	9b24      	ldr	r3, [sp, #144]	@ 0x90
 801f33a:	441e      	add	r6, r3
 801f33c:	9b0e      	ldr	r3, [sp, #56]	@ 0x38
 801f33e:	3b01      	subs	r3, #1
 801f340:	f108 0802 	add.w	r8, r8, #2
 801f344:	930e      	str	r3, [sp, #56]	@ 0x38
 801f346:	e763      	b.n	801f210 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x9c>
 801f348:	9b23      	ldr	r3, [sp, #140]	@ 0x8c
 801f34a:	441c      	add	r4, r3
 801f34c:	9b24      	ldr	r3, [sp, #144]	@ 0x90
 801f34e:	441e      	add	r6, r3
 801f350:	9b09      	ldr	r3, [sp, #36]	@ 0x24
 801f352:	3b01      	subs	r3, #1
 801f354:	9309      	str	r3, [sp, #36]	@ 0x24
 801f356:	f109 0902 	add.w	r9, r9, #2
 801f35a:	e737      	b.n	801f1cc <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x58>
 801f35c:	d024      	beq.n	801f3a8 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x234>
 801f35e:	9b09      	ldr	r3, [sp, #36]	@ 0x24
 801f360:	9823      	ldr	r0, [sp, #140]	@ 0x8c
 801f362:	3b01      	subs	r3, #1
 801f364:	fb00 4003 	mla	r0, r0, r3, r4
 801f368:	1400      	asrs	r0, r0, #16
 801f36a:	f53f af4c 	bmi.w	801f206 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x92>
 801f36e:	3901      	subs	r1, #1
 801f370:	4288      	cmp	r0, r1
 801f372:	f6bf af48 	bge.w	801f206 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x92>
 801f376:	9924      	ldr	r1, [sp, #144]	@ 0x90
 801f378:	fb01 6303 	mla	r3, r1, r3, r6
 801f37c:	141b      	asrs	r3, r3, #16
 801f37e:	f53f af42 	bmi.w	801f206 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x92>
 801f382:	3a01      	subs	r2, #1
 801f384:	4293      	cmp	r3, r2
 801f386:	f6bf af3e 	bge.w	801f206 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x92>
 801f38a:	f9bd 3028 	ldrsh.w	r3, [sp, #40]	@ 0x28
 801f38e:	f8dd b024 	ldr.w	fp, [sp, #36]	@ 0x24
 801f392:	930e      	str	r3, [sp, #56]	@ 0x38
 801f394:	46c8      	mov	r8, r9
 801f396:	f1bb 0f00 	cmp.w	fp, #0
 801f39a:	f300 80b7 	bgt.w	801f50c <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x398>
 801f39e:	9b09      	ldr	r3, [sp, #36]	@ 0x24
 801f3a0:	ea23 75e3 	bic.w	r5, r3, r3, asr #31
 801f3a4:	eb09 0945 	add.w	r9, r9, r5, lsl #1
 801f3a8:	9b0d      	ldr	r3, [sp, #52]	@ 0x34
 801f3aa:	2b00      	cmp	r3, #0
 801f3ac:	f340 818d 	ble.w	801f6ca <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x556>
 801f3b0:	ee30 0a04 	vadd.f32	s0, s0, s8
 801f3b4:	eeb7 7a00 	vmov.f32	s14, #112	@ 0x3f800000  1.0
 801f3b8:	eec7 7a00 	vdiv.f32	s15, s14, s0
 801f3bc:	9b20      	ldr	r3, [sp, #128]	@ 0x80
 801f3be:	ee70 0aa4 	vadd.f32	s1, s1, s9
 801f3c2:	ee31 1a05 	vadd.f32	s2, s2, s10
 801f3c6:	ee20 7aa7 	vmul.f32	s14, s1, s15
 801f3ca:	eef0 6a62 	vmov.f32	s13, s5
 801f3ce:	ee61 7a27 	vmul.f32	s15, s2, s15
 801f3d2:	eefe 6ac8 	vcvt.s32.f32	s13, s13, #16
 801f3d6:	ee77 2a62 	vsub.f32	s5, s14, s5
 801f3da:	ee16 4a90 	vmov	r4, s13
 801f3de:	eefe 2ac8 	vcvt.s32.f32	s5, s5, #16
 801f3e2:	eef0 6a43 	vmov.f32	s13, s6
 801f3e6:	ee37 3ac3 	vsub.f32	s6, s15, s6
 801f3ea:	ee12 2a90 	vmov	r2, s5
 801f3ee:	eebe 3ac8 	vcvt.s32.f32	s6, s6, #16
 801f3f2:	fb92 f3f3 	sdiv	r3, r2, r3
 801f3f6:	ee13 2a10 	vmov	r2, s6
 801f3fa:	9323      	str	r3, [sp, #140]	@ 0x8c
 801f3fc:	9b20      	ldr	r3, [sp, #128]	@ 0x80
 801f3fe:	fb92 f3f3 	sdiv	r3, r2, r3
 801f402:	9324      	str	r3, [sp, #144]	@ 0x90
 801f404:	9b0d      	ldr	r3, [sp, #52]	@ 0x34
 801f406:	9a14      	ldr	r2, [sp, #80]	@ 0x50
 801f408:	3b01      	subs	r3, #1
 801f40a:	eefe 6ac8 	vcvt.s32.f32	s13, s13, #16
 801f40e:	930d      	str	r3, [sp, #52]	@ 0x34
 801f410:	9b20      	ldr	r3, [sp, #128]	@ 0x80
 801f412:	bf08      	it	eq
 801f414:	4613      	moveq	r3, r2
 801f416:	ee16 6a90 	vmov	r6, s13
 801f41a:	9309      	str	r3, [sp, #36]	@ 0x24
 801f41c:	eeb0 3a67 	vmov.f32	s6, s15
 801f420:	eef0 2a47 	vmov.f32	s5, s14
 801f424:	e6c3      	b.n	801f1ae <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3a>
 801f426:	2900      	cmp	r1, #0
 801f428:	f43f af4d 	beq.w	801f2c6 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x152>
 801f42c:	eb0a 0003 	add.w	r0, sl, r3
 801f430:	0843      	lsrs	r3, r0, #1
 801f432:	07c0      	lsls	r0, r0, #31
 801f434:	5cfb      	ldrb	r3, [r7, r3]
 801f436:	bf54      	ite	pl
 801f438:	f003 030f 	andpl.w	r3, r3, #15
 801f43c:	111b      	asrmi	r3, r3, #4
 801f43e:	eb03 1303 	add.w	r3, r3, r3, lsl #4
 801f442:	b2db      	uxtb	r3, r3
 801f444:	930b      	str	r3, [sp, #44]	@ 0x2c
 801f446:	e73e      	b.n	801f2c6 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x152>
 801f448:	f8b8 e000 	ldrh.w	lr, [r8]
 801f44c:	fa1f fb83 	uxth.w	fp, r3
 801f450:	ea4f 202e 	mov.w	r0, lr, asr #8
 801f454:	f3c2 4107 	ubfx	r1, r2, #16, #8
 801f458:	43db      	mvns	r3, r3
 801f45a:	b2db      	uxtb	r3, r3
 801f45c:	fb11 f10b 	smulbb	r1, r1, fp
 801f460:	f000 00f8 	and.w	r0, r0, #248	@ 0xf8
 801f464:	fb00 1003 	mla	r0, r0, r3, r1
 801f468:	fa5f fc8c 	uxtb.w	ip, ip
 801f46c:	ea4f 01ee 	mov.w	r1, lr, asr #3
 801f470:	b2d2      	uxtb	r2, r2
 801f472:	ea4f 0ece 	mov.w	lr, lr, lsl #3
 801f476:	b280      	uxth	r0, r0
 801f478:	f001 01fc 	and.w	r1, r1, #252	@ 0xfc
 801f47c:	fb1c fc0b 	smulbb	ip, ip, fp
 801f480:	fa5f fe8e 	uxtb.w	lr, lr
 801f484:	fb12 fb0b 	smulbb	fp, r2, fp
 801f488:	fb01 cc03 	mla	ip, r1, r3, ip
 801f48c:	fb0e bb03 	mla	fp, lr, r3, fp
 801f490:	1c43      	adds	r3, r0, #1
 801f492:	fa1f fc8c 	uxth.w	ip, ip
 801f496:	fa1f fb8b 	uxth.w	fp, fp
 801f49a:	eb03 2010 	add.w	r0, r3, r0, lsr #8
 801f49e:	f400 4378 	and.w	r3, r0, #63488	@ 0xf800
 801f4a2:	f10c 0101 	add.w	r1, ip, #1
 801f4a6:	f10b 0001 	add.w	r0, fp, #1
 801f4aa:	eb00 201b 	add.w	r0, r0, fp, lsr #8
 801f4ae:	eb01 2c1c 	add.w	ip, r1, ip, lsr #8
 801f4b2:	f3c0 20c4 	ubfx	r0, r0, #11, #5
 801f4b6:	ea4f 1c5c 	mov.w	ip, ip, lsr #5
 801f4ba:	4318      	orrs	r0, r3
 801f4bc:	f40c 6cfc 	and.w	ip, ip, #2016	@ 0x7e0
 801f4c0:	ea40 000c 	orr.w	r0, r0, ip
 801f4c4:	f8a8 0000 	strh.w	r0, [r8]
 801f4c8:	e734      	b.n	801f334 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1c0>
 801f4ca:	f113 0b01 	adds.w	fp, r3, #1
 801f4ce:	f53f af31 	bmi.w	801f334 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1c0>
 801f4d2:	45dc      	cmp	ip, fp
 801f4d4:	f6ff af2e 	blt.w	801f334 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1c0>
 801f4d8:	f110 0b01 	adds.w	fp, r0, #1
 801f4dc:	f53f af2a 	bmi.w	801f334 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1c0>
 801f4e0:	45de      	cmp	lr, fp
 801f4e2:	f6ff af27 	blt.w	801f334 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1c0>
 801f4e6:	9d0f      	ldr	r5, [sp, #60]	@ 0x3c
 801f4e8:	9302      	str	r3, [sp, #8]
 801f4ea:	fa0f f38e 	sxth.w	r3, lr
 801f4ee:	9301      	str	r3, [sp, #4]
 801f4f0:	fa0f f38c 	sxth.w	r3, ip
 801f4f4:	e9cd 0203 	strd	r0, r2, [sp, #12]
 801f4f8:	e9cd 1505 	strd	r1, r5, [sp, #20]
 801f4fc:	9300      	str	r3, [sp, #0]
 801f4fe:	463a      	mov	r2, r7
 801f500:	4653      	mov	r3, sl
 801f502:	4641      	mov	r1, r8
 801f504:	9815      	ldr	r0, [sp, #84]	@ 0x54
 801f506:	f7ff fd4d 	bl	801efa4 <_ZNK8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtsssiihhh>
 801f50a:	e713      	b.n	801f334 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1c0>
 801f50c:	9d0a      	ldr	r5, [sp, #40]	@ 0x28
 801f50e:	1422      	asrs	r2, r4, #16
 801f510:	1433      	asrs	r3, r6, #16
 801f512:	fb05 2303 	mla	r3, r5, r3, r2
 801f516:	085a      	lsrs	r2, r3, #1
 801f518:	07dd      	lsls	r5, r3, #31
 801f51a:	5cba      	ldrb	r2, [r7, r2]
 801f51c:	bf54      	ite	pl
 801f51e:	f002 020f 	andpl.w	r2, r2, #15
 801f522:	1112      	asrmi	r2, r2, #4
 801f524:	eb02 1202 	add.w	r2, r2, r2, lsl #4
 801f528:	f3c4 3103 	ubfx	r1, r4, #12, #4
 801f52c:	f3c6 3003 	ubfx	r0, r6, #12, #4
 801f530:	b2d2      	uxtb	r2, r2
 801f532:	2900      	cmp	r1, #0
 801f534:	d076      	beq.n	801f624 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x4b0>
 801f536:	f103 0e01 	add.w	lr, r3, #1
 801f53a:	ea4f 0c5e 	mov.w	ip, lr, lsr #1
 801f53e:	f01e 0f01 	tst.w	lr, #1
 801f542:	f817 c00c 	ldrb.w	ip, [r7, ip]
 801f546:	bf0c      	ite	eq
 801f548:	f00c 0c0f 	andeq.w	ip, ip, #15
 801f54c:	ea4f 1c2c 	movne.w	ip, ip, asr #4
 801f550:	eb0c 1c0c 	add.w	ip, ip, ip, lsl #4
 801f554:	fa5f f58c 	uxtb.w	r5, ip
 801f558:	9512      	str	r5, [sp, #72]	@ 0x48
 801f55a:	b300      	cbz	r0, 801f59e <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x42a>
 801f55c:	9d0e      	ldr	r5, [sp, #56]	@ 0x38
 801f55e:	442b      	add	r3, r5
 801f560:	ea4f 0c53 	mov.w	ip, r3, lsr #1
 801f564:	07dd      	lsls	r5, r3, #31
 801f566:	f817 c00c 	ldrb.w	ip, [r7, ip]
 801f56a:	bf54      	ite	pl
 801f56c:	f00c 0c0f 	andpl.w	ip, ip, #15
 801f570:	ea4f 1c2c 	movmi.w	ip, ip, asr #4
 801f574:	3301      	adds	r3, #1
 801f576:	eb0c 1c0c 	add.w	ip, ip, ip, lsl #4
 801f57a:	fa5f f58c 	uxtb.w	r5, ip
 801f57e:	ea4f 0c53 	mov.w	ip, r3, lsr #1
 801f582:	950c      	str	r5, [sp, #48]	@ 0x30
 801f584:	f817 c00c 	ldrb.w	ip, [r7, ip]
 801f588:	07dd      	lsls	r5, r3, #31
 801f58a:	bf54      	ite	pl
 801f58c:	f00c 0c0f 	andpl.w	ip, ip, #15
 801f590:	ea4f 1c2c 	movmi.w	ip, ip, asr #4
 801f594:	eb0c 1c0c 	add.w	ip, ip, ip, lsl #4
 801f598:	fa5f f38c 	uxtb.w	r3, ip
 801f59c:	9313      	str	r3, [sp, #76]	@ 0x4c
 801f59e:	b289      	uxth	r1, r1
 801f5a0:	b280      	uxth	r0, r0
 801f5a2:	fb01 f300 	mul.w	r3, r1, r0
 801f5a6:	ebc3 1000 	rsb	r0, r3, r0, lsl #4
 801f5aa:	0109      	lsls	r1, r1, #4
 801f5ac:	b280      	uxth	r0, r0
 801f5ae:	f5c1 7c80 	rsb	ip, r1, #256	@ 0x100
 801f5b2:	9d12      	ldr	r5, [sp, #72]	@ 0x48
 801f5b4:	1ac9      	subs	r1, r1, r3
 801f5b6:	ebac 0c00 	sub.w	ip, ip, r0
 801f5ba:	b289      	uxth	r1, r1
 801f5bc:	4369      	muls	r1, r5
 801f5be:	fa1f fc8c 	uxth.w	ip, ip
 801f5c2:	fb02 120c 	mla	r2, r2, ip, r1
 801f5c6:	990c      	ldr	r1, [sp, #48]	@ 0x30
 801f5c8:	fb00 2001 	mla	r0, r0, r1, r2
 801f5cc:	9a13      	ldr	r2, [sp, #76]	@ 0x4c
 801f5ce:	fb03 0302 	mla	r3, r3, r2, r0
 801f5d2:	f3c3 2307 	ubfx	r3, r3, #8, #8
 801f5d6:	b1d3      	cbz	r3, 801f60e <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x49a>
 801f5d8:	9a0f      	ldr	r2, [sp, #60]	@ 0x3c
 801f5da:	4353      	muls	r3, r2
 801f5dc:	1c5a      	adds	r2, r3, #1
 801f5de:	eb02 2313 	add.w	r3, r2, r3, lsr #8
 801f5e2:	4a0f      	ldr	r2, [pc, #60]	@ (801f620 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x4ac>)
 801f5e4:	121b      	asrs	r3, r3, #8
 801f5e6:	6812      	ldr	r2, [r2, #0]
 801f5e8:	2bff      	cmp	r3, #255	@ 0xff
 801f5ea:	ea4f 2c12 	mov.w	ip, r2, lsr #8
 801f5ee:	d12d      	bne.n	801f64c <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x4d8>
 801f5f0:	0953      	lsrs	r3, r2, #5
 801f5f2:	f42c 6cff 	bic.w	ip, ip, #2040	@ 0x7f8
 801f5f6:	f403 63fc 	and.w	r3, r3, #2016	@ 0x7e0
 801f5fa:	f02c 0c07 	bic.w	ip, ip, #7
 801f5fe:	ea43 0c0c 	orr.w	ip, r3, ip
 801f602:	f3c2 02c4 	ubfx	r2, r2, #3, #5
 801f606:	ea4c 0202 	orr.w	r2, ip, r2
 801f60a:	f8a8 2000 	strh.w	r2, [r8]
 801f60e:	9b23      	ldr	r3, [sp, #140]	@ 0x8c
 801f610:	441c      	add	r4, r3
 801f612:	9b24      	ldr	r3, [sp, #144]	@ 0x90
 801f614:	f108 0802 	add.w	r8, r8, #2
 801f618:	441e      	add	r6, r3
 801f61a:	f10b 3bff 	add.w	fp, fp, #4294967295
 801f61e:	e6ba      	b.n	801f396 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x222>
 801f620:	20002c64 	.word	0x20002c64
 801f624:	2800      	cmp	r0, #0
 801f626:	d0ba      	beq.n	801f59e <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x42a>
 801f628:	9d0e      	ldr	r5, [sp, #56]	@ 0x38
 801f62a:	442b      	add	r3, r5
 801f62c:	ea4f 0c53 	mov.w	ip, r3, lsr #1
 801f630:	07db      	lsls	r3, r3, #31
 801f632:	f817 c00c 	ldrb.w	ip, [r7, ip]
 801f636:	bf54      	ite	pl
 801f638:	f00c 0c0f 	andpl.w	ip, ip, #15
 801f63c:	ea4f 1c2c 	movmi.w	ip, ip, asr #4
 801f640:	eb0c 1c0c 	add.w	ip, ip, ip, lsl #4
 801f644:	fa5f f38c 	uxtb.w	r3, ip
 801f648:	930c      	str	r3, [sp, #48]	@ 0x30
 801f64a:	e7a8      	b.n	801f59e <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x42a>
 801f64c:	f8b8 e000 	ldrh.w	lr, [r8]
 801f650:	fa1f fa83 	uxth.w	sl, r3
 801f654:	ea4f 202e 	mov.w	r0, lr, asr #8
 801f658:	f3c2 4107 	ubfx	r1, r2, #16, #8
 801f65c:	43db      	mvns	r3, r3
 801f65e:	b2db      	uxtb	r3, r3
 801f660:	fb11 f10a 	smulbb	r1, r1, sl
 801f664:	f000 00f8 	and.w	r0, r0, #248	@ 0xf8
 801f668:	fb00 1003 	mla	r0, r0, r3, r1
 801f66c:	b2d2      	uxtb	r2, r2
 801f66e:	ea4f 01ee 	mov.w	r1, lr, asr #3
 801f672:	ea4f 0ece 	mov.w	lr, lr, lsl #3
 801f676:	fa5f fe8e 	uxtb.w	lr, lr
 801f67a:	fb12 f20a 	smulbb	r2, r2, sl
 801f67e:	fb0e 2203 	mla	r2, lr, r3, r2
 801f682:	fa5f fc8c 	uxtb.w	ip, ip
 801f686:	b280      	uxth	r0, r0
 801f688:	f001 01fc 	and.w	r1, r1, #252	@ 0xfc
 801f68c:	b292      	uxth	r2, r2
 801f68e:	fb1c fc0a 	smulbb	ip, ip, sl
 801f692:	fb01 cc03 	mla	ip, r1, r3, ip
 801f696:	1c43      	adds	r3, r0, #1
 801f698:	1c51      	adds	r1, r2, #1
 801f69a:	eb03 2010 	add.w	r0, r3, r0, lsr #8
 801f69e:	eb01 2112 	add.w	r1, r1, r2, lsr #8
 801f6a2:	fa1f fc8c 	uxth.w	ip, ip
 801f6a6:	f3c1 21c4 	ubfx	r1, r1, #11, #5
 801f6aa:	f400 4078 	and.w	r0, r0, #63488	@ 0xf800
 801f6ae:	4308      	orrs	r0, r1
 801f6b0:	f10c 0101 	add.w	r1, ip, #1
 801f6b4:	eb01 2c1c 	add.w	ip, r1, ip, lsr #8
 801f6b8:	ea4f 1c5c 	mov.w	ip, ip, lsr #5
 801f6bc:	f40c 6cfc 	and.w	ip, ip, #2016	@ 0x7e0
 801f6c0:	ea40 000c 	orr.w	r0, r0, ip
 801f6c4:	f8a8 0000 	strh.w	r0, [r8]
 801f6c8:	e7a1      	b.n	801f60e <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x49a>
 801f6ca:	b017      	add	sp, #92	@ 0x5c
 801f6cc:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}

0801f6d0 <_ZNK8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtsssiihh>:
 801f6d0:	e92d 47f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
 801f6d4:	e9dd 050a 	ldrd	r0, r5, [sp, #40]	@ 0x28
 801f6d8:	2d00      	cmp	r5, #0
 801f6da:	f9bd 8020 	ldrsh.w	r8, [sp, #32]
 801f6de:	f9bd 9024 	ldrsh.w	r9, [sp, #36]	@ 0x24
 801f6e2:	f89d 7030 	ldrb.w	r7, [sp, #48]	@ 0x30
 801f6e6:	f89d c034 	ldrb.w	ip, [sp, #52]	@ 0x34
 801f6ea:	fb05 0e03 	mla	lr, r5, r3, r0
 801f6ee:	f2c0 80b0 	blt.w	801f852 <_ZNK8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtsssiihh+0x182>
 801f6f2:	45a9      	cmp	r9, r5
 801f6f4:	f340 80ad 	ble.w	801f852 <_ZNK8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtsssiihh+0x182>
 801f6f8:	2800      	cmp	r0, #0
 801f6fa:	f2c0 80a8 	blt.w	801f84e <_ZNK8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtsssiihh+0x17e>
 801f6fe:	4580      	cmp	r8, r0
 801f700:	f340 80a5 	ble.w	801f84e <_ZNK8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtsssiihh+0x17e>
 801f704:	ea4f 045e 	mov.w	r4, lr, lsr #1
 801f708:	f01e 0f01 	tst.w	lr, #1
 801f70c:	5d16      	ldrb	r6, [r2, r4]
 801f70e:	bf0c      	ite	eq
 801f710:	f006 060f 	andeq.w	r6, r6, #15
 801f714:	1136      	asrne	r6, r6, #4
 801f716:	eb06 1606 	add.w	r6, r6, r6, lsl #4
 801f71a:	b2f6      	uxtb	r6, r6
 801f71c:	1c44      	adds	r4, r0, #1
 801f71e:	f100 809b 	bmi.w	801f858 <_ZNK8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtsssiihh+0x188>
 801f722:	45a0      	cmp	r8, r4
 801f724:	f340 8098 	ble.w	801f858 <_ZNK8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtsssiihh+0x188>
 801f728:	2f00      	cmp	r7, #0
 801f72a:	f000 8097 	beq.w	801f85c <_ZNK8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtsssiihh+0x18c>
 801f72e:	f10e 0a01 	add.w	sl, lr, #1
 801f732:	ea4f 045a 	mov.w	r4, sl, lsr #1
 801f736:	f01a 0f01 	tst.w	sl, #1
 801f73a:	5d14      	ldrb	r4, [r2, r4]
 801f73c:	bf0c      	ite	eq
 801f73e:	f004 040f 	andeq.w	r4, r4, #15
 801f742:	1124      	asrne	r4, r4, #4
 801f744:	eb04 1404 	add.w	r4, r4, r4, lsl #4
 801f748:	b2e4      	uxtb	r4, r4
 801f74a:	3501      	adds	r5, #1
 801f74c:	f100 808a 	bmi.w	801f864 <_ZNK8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtsssiihh+0x194>
 801f750:	45a9      	cmp	r9, r5
 801f752:	f340 8087 	ble.w	801f864 <_ZNK8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtsssiihh+0x194>
 801f756:	f1bc 0f00 	cmp.w	ip, #0
 801f75a:	f000 8086 	beq.w	801f86a <_ZNK8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtsssiihh+0x19a>
 801f75e:	2800      	cmp	r0, #0
 801f760:	db7e      	blt.n	801f860 <_ZNK8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtsssiihh+0x190>
 801f762:	4580      	cmp	r8, r0
 801f764:	dd7c      	ble.n	801f860 <_ZNK8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtsssiihh+0x190>
 801f766:	eb03 090e 	add.w	r9, r3, lr
 801f76a:	ea4f 0559 	mov.w	r5, r9, lsr #1
 801f76e:	f019 0f01 	tst.w	r9, #1
 801f772:	5d55      	ldrb	r5, [r2, r5]
 801f774:	bf0c      	ite	eq
 801f776:	f005 050f 	andeq.w	r5, r5, #15
 801f77a:	112d      	asrne	r5, r5, #4
 801f77c:	eb05 1505 	add.w	r5, r5, r5, lsl #4
 801f780:	b2ed      	uxtb	r5, r5
 801f782:	3001      	adds	r0, #1
 801f784:	d474      	bmi.n	801f870 <_ZNK8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtsssiihh+0x1a0>
 801f786:	4580      	cmp	r8, r0
 801f788:	dd72      	ble.n	801f870 <_ZNK8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtsssiihh+0x1a0>
 801f78a:	2f00      	cmp	r7, #0
 801f78c:	d072      	beq.n	801f874 <_ZNK8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtsssiihh+0x1a4>
 801f78e:	3301      	adds	r3, #1
 801f790:	449e      	add	lr, r3
 801f792:	ea4f 035e 	mov.w	r3, lr, lsr #1
 801f796:	f01e 0f01 	tst.w	lr, #1
 801f79a:	5cd0      	ldrb	r0, [r2, r3]
 801f79c:	bf0c      	ite	eq
 801f79e:	f000 000f 	andeq.w	r0, r0, #15
 801f7a2:	1100      	asrne	r0, r0, #4
 801f7a4:	eb00 1000 	add.w	r0, r0, r0, lsl #4
 801f7a8:	b2c3      	uxtb	r3, r0
 801f7aa:	b2ba      	uxth	r2, r7
 801f7ac:	fa1f fc8c 	uxth.w	ip, ip
 801f7b0:	fb02 f00c 	mul.w	r0, r2, ip
 801f7b4:	ebc0 1c0c 	rsb	ip, r0, ip, lsl #4
 801f7b8:	0112      	lsls	r2, r2, #4
 801f7ba:	fa1f fc8c 	uxth.w	ip, ip
 801f7be:	f5c2 7780 	rsb	r7, r2, #256	@ 0x100
 801f7c2:	1a12      	subs	r2, r2, r0
 801f7c4:	eba7 070c 	sub.w	r7, r7, ip
 801f7c8:	b292      	uxth	r2, r2
 801f7ca:	b2bf      	uxth	r7, r7
 801f7cc:	4362      	muls	r2, r4
 801f7ce:	fb06 2207 	mla	r2, r6, r7, r2
 801f7d2:	fb0c 2505 	mla	r5, ip, r5, r2
 801f7d6:	fb00 5303 	mla	r3, r0, r3, r5
 801f7da:	f3c3 2307 	ubfx	r3, r3, #8, #8
 801f7de:	b3a3      	cbz	r3, 801f84a <_ZNK8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtsssiihh+0x17a>
 801f7e0:	4a25      	ldr	r2, [pc, #148]	@ (801f878 <_ZNK8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtsssiihh+0x1a8>)
 801f7e2:	880e      	ldrh	r6, [r1, #0]
 801f7e4:	6815      	ldr	r5, [r2, #0]
 801f7e6:	1234      	asrs	r4, r6, #8
 801f7e8:	b29a      	uxth	r2, r3
 801f7ea:	f3c5 4007 	ubfx	r0, r5, #16, #8
 801f7ee:	43db      	mvns	r3, r3
 801f7f0:	b2db      	uxtb	r3, r3
 801f7f2:	fb10 f002 	smulbb	r0, r0, r2
 801f7f6:	f004 04f8 	and.w	r4, r4, #248	@ 0xf8
 801f7fa:	fb04 0403 	mla	r4, r4, r3, r0
 801f7fe:	f3c5 2707 	ubfx	r7, r5, #8, #8
 801f802:	10f0      	asrs	r0, r6, #3
 801f804:	b2ed      	uxtb	r5, r5
 801f806:	00f6      	lsls	r6, r6, #3
 801f808:	fb17 f702 	smulbb	r7, r7, r2
 801f80c:	f000 00fc 	and.w	r0, r0, #252	@ 0xfc
 801f810:	fb15 f202 	smulbb	r2, r5, r2
 801f814:	b2f6      	uxtb	r6, r6
 801f816:	b2a4      	uxth	r4, r4
 801f818:	fb00 7003 	mla	r0, r0, r3, r7
 801f81c:	fb06 2303 	mla	r3, r6, r3, r2
 801f820:	b29a      	uxth	r2, r3
 801f822:	1c63      	adds	r3, r4, #1
 801f824:	b280      	uxth	r0, r0
 801f826:	eb03 2414 	add.w	r4, r3, r4, lsr #8
 801f82a:	1c53      	adds	r3, r2, #1
 801f82c:	eb03 2312 	add.w	r3, r3, r2, lsr #8
 801f830:	1c42      	adds	r2, r0, #1
 801f832:	eb02 2010 	add.w	r0, r2, r0, lsr #8
 801f836:	f404 4478 	and.w	r4, r4, #63488	@ 0xf800
 801f83a:	f3c3 23c4 	ubfx	r3, r3, #11, #5
 801f83e:	0940      	lsrs	r0, r0, #5
 801f840:	4323      	orrs	r3, r4
 801f842:	f400 60fc 	and.w	r0, r0, #2016	@ 0x7e0
 801f846:	4303      	orrs	r3, r0
 801f848:	800b      	strh	r3, [r1, #0]
 801f84a:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
 801f84e:	2600      	movs	r6, #0
 801f850:	e764      	b.n	801f71c <_ZNK8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtsssiihh+0x4c>
 801f852:	2400      	movs	r4, #0
 801f854:	4626      	mov	r6, r4
 801f856:	e778      	b.n	801f74a <_ZNK8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtsssiihh+0x7a>
 801f858:	2400      	movs	r4, #0
 801f85a:	e776      	b.n	801f74a <_ZNK8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtsssiihh+0x7a>
 801f85c:	463c      	mov	r4, r7
 801f85e:	e774      	b.n	801f74a <_ZNK8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtsssiihh+0x7a>
 801f860:	2500      	movs	r5, #0
 801f862:	e78e      	b.n	801f782 <_ZNK8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtsssiihh+0xb2>
 801f864:	2300      	movs	r3, #0
 801f866:	461d      	mov	r5, r3
 801f868:	e79f      	b.n	801f7aa <_ZNK8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtsssiihh+0xda>
 801f86a:	4663      	mov	r3, ip
 801f86c:	4665      	mov	r5, ip
 801f86e:	e79c      	b.n	801f7aa <_ZNK8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtsssiihh+0xda>
 801f870:	2300      	movs	r3, #0
 801f872:	e79a      	b.n	801f7aa <_ZNK8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtsssiihh+0xda>
 801f874:	463b      	mov	r3, r7
 801f876:	e798      	b.n	801f7aa <_ZNK8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtsssiihh+0xda>
 801f878:	20002c64 	.word	0x20002c64

0801f87c <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff>:
 801f87c:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 801f880:	b093      	sub	sp, #76	@ 0x4c
 801f882:	461d      	mov	r5, r3
 801f884:	920c      	str	r2, [sp, #48]	@ 0x30
 801f886:	9a21      	ldr	r2, [sp, #132]	@ 0x84
 801f888:	9107      	str	r1, [sp, #28]
 801f88a:	e9dd 1322 	ldrd	r1, r3, [sp, #136]	@ 0x88
 801f88e:	9011      	str	r0, [sp, #68]	@ 0x44
 801f890:	6850      	ldr	r0, [r2, #4]
 801f892:	6812      	ldr	r2, [r2, #0]
 801f894:	fb00 1303 	mla	r3, r0, r3, r1
 801f898:	eb02 0943 	add.w	r9, r2, r3, lsl #1
 801f89c:	9b24      	ldr	r3, [sp, #144]	@ 0x90
 801f89e:	689b      	ldr	r3, [r3, #8]
 801f8a0:	3301      	adds	r3, #1
 801f8a2:	f023 0301 	bic.w	r3, r3, #1
 801f8a6:	9306      	str	r3, [sp, #24]
 801f8a8:	9b24      	ldr	r3, [sp, #144]	@ 0x90
 801f8aa:	e9dd 461d 	ldrd	r4, r6, [sp, #116]	@ 0x74
 801f8ae:	681f      	ldr	r7, [r3, #0]
 801f8b0:	9b07      	ldr	r3, [sp, #28]
 801f8b2:	2b00      	cmp	r3, #0
 801f8b4:	dc03      	bgt.n	801f8be <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x42>
 801f8b6:	9b0c      	ldr	r3, [sp, #48]	@ 0x30
 801f8b8:	2b00      	cmp	r3, #0
 801f8ba:	f340 8267 	ble.w	801fd8c <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x510>
 801f8be:	9b24      	ldr	r3, [sp, #144]	@ 0x90
 801f8c0:	f9b3 1008 	ldrsh.w	r1, [r3, #8]
 801f8c4:	f9b3 200c 	ldrsh.w	r2, [r3, #12]
 801f8c8:	1e48      	subs	r0, r1, #1
 801f8ca:	f102 3cff 	add.w	ip, r2, #4294967295
 801f8ce:	2d00      	cmp	r5, #0
 801f8d0:	f340 80b8 	ble.w	801fa44 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1c8>
 801f8d4:	ea5f 4e24 	movs.w	lr, r4, asr #16
 801f8d8:	ea4f 4326 	mov.w	r3, r6, asr #16
 801f8dc:	d406      	bmi.n	801f8ec <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x70>
 801f8de:	4586      	cmp	lr, r0
 801f8e0:	da04      	bge.n	801f8ec <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x70>
 801f8e2:	2b00      	cmp	r3, #0
 801f8e4:	db02      	blt.n	801f8ec <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x70>
 801f8e6:	4563      	cmp	r3, ip
 801f8e8:	f2c0 80ad 	blt.w	801fa46 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1ca>
 801f8ec:	f11e 0e01 	adds.w	lr, lr, #1
 801f8f0:	f100 80a0 	bmi.w	801fa34 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1b8>
 801f8f4:	4571      	cmp	r1, lr
 801f8f6:	f2c0 809d 	blt.w	801fa34 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1b8>
 801f8fa:	3301      	adds	r3, #1
 801f8fc:	f100 809a 	bmi.w	801fa34 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1b8>
 801f900:	429a      	cmp	r2, r3
 801f902:	f2c0 8097 	blt.w	801fa34 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1b8>
 801f906:	f9bd a018 	ldrsh.w	sl, [sp, #24]
 801f90a:	9509      	str	r5, [sp, #36]	@ 0x24
 801f90c:	46c8      	mov	r8, r9
 801f90e:	9b09      	ldr	r3, [sp, #36]	@ 0x24
 801f910:	2b00      	cmp	r3, #0
 801f912:	f340 80b6 	ble.w	801fa82 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x206>
 801f916:	f3c4 3303 	ubfx	r3, r4, #12, #4
 801f91a:	9308      	str	r3, [sp, #32]
 801f91c:	9b24      	ldr	r3, [sp, #144]	@ 0x90
 801f91e:	e9d3 ce02 	ldrd	ip, lr, [r3, #8]
 801f922:	1423      	asrs	r3, r4, #16
 801f924:	ea4f 4026 	mov.w	r0, r6, asr #16
 801f928:	f3c6 3103 	ubfx	r1, r6, #12, #4
 801f92c:	f100 813e 	bmi.w	801fbac <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x330>
 801f930:	f10c 3bff 	add.w	fp, ip, #4294967295
 801f934:	455b      	cmp	r3, fp
 801f936:	f280 8139 	bge.w	801fbac <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x330>
 801f93a:	2800      	cmp	r0, #0
 801f93c:	f2c0 8136 	blt.w	801fbac <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x330>
 801f940:	f10e 3bff 	add.w	fp, lr, #4294967295
 801f944:	4558      	cmp	r0, fp
 801f946:	f280 8131 	bge.w	801fbac <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x330>
 801f94a:	9a06      	ldr	r2, [sp, #24]
 801f94c:	fb00 3302 	mla	r3, r0, r2, r3
 801f950:	0858      	lsrs	r0, r3, #1
 801f952:	07da      	lsls	r2, r3, #31
 801f954:	f817 c000 	ldrb.w	ip, [r7, r0]
 801f958:	9a08      	ldr	r2, [sp, #32]
 801f95a:	bf54      	ite	pl
 801f95c:	f00c 0c0f 	andpl.w	ip, ip, #15
 801f960:	ea4f 1c2c 	movmi.w	ip, ip, asr #4
 801f964:	eb0c 1c0c 	add.w	ip, ip, ip, lsl #4
 801f968:	fa5f fc8c 	uxtb.w	ip, ip
 801f96c:	2a00      	cmp	r2, #0
 801f96e:	f000 80cb 	beq.w	801fb08 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x28c>
 801f972:	1c58      	adds	r0, r3, #1
 801f974:	ea4f 0e50 	mov.w	lr, r0, lsr #1
 801f978:	07c0      	lsls	r0, r0, #31
 801f97a:	f817 e00e 	ldrb.w	lr, [r7, lr]
 801f97e:	bf54      	ite	pl
 801f980:	f00e 0e0f 	andpl.w	lr, lr, #15
 801f984:	ea4f 1e2e 	movmi.w	lr, lr, asr #4
 801f988:	eb0e 1e0e 	add.w	lr, lr, lr, lsl #4
 801f98c:	fa5f fe8e 	uxtb.w	lr, lr
 801f990:	f8cd e034 	str.w	lr, [sp, #52]	@ 0x34
 801f994:	b1b9      	cbz	r1, 801f9c6 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x14a>
 801f996:	4453      	add	r3, sl
 801f998:	0858      	lsrs	r0, r3, #1
 801f99a:	07da      	lsls	r2, r3, #31
 801f99c:	5c38      	ldrb	r0, [r7, r0]
 801f99e:	bf54      	ite	pl
 801f9a0:	f000 000f 	andpl.w	r0, r0, #15
 801f9a4:	1100      	asrmi	r0, r0, #4
 801f9a6:	eb00 1000 	add.w	r0, r0, r0, lsl #4
 801f9aa:	b2c0      	uxtb	r0, r0
 801f9ac:	900a      	str	r0, [sp, #40]	@ 0x28
 801f9ae:	1c58      	adds	r0, r3, #1
 801f9b0:	0843      	lsrs	r3, r0, #1
 801f9b2:	07c2      	lsls	r2, r0, #31
 801f9b4:	5cfb      	ldrb	r3, [r7, r3]
 801f9b6:	bf54      	ite	pl
 801f9b8:	f003 030f 	andpl.w	r3, r3, #15
 801f9bc:	111b      	asrmi	r3, r3, #4
 801f9be:	eb03 1303 	add.w	r3, r3, r3, lsl #4
 801f9c2:	b2db      	uxtb	r3, r3
 801f9c4:	930e      	str	r3, [sp, #56]	@ 0x38
 801f9c6:	f8bd 2020 	ldrh.w	r2, [sp, #32]
 801f9ca:	b289      	uxth	r1, r1
 801f9cc:	fb02 f301 	mul.w	r3, r2, r1
 801f9d0:	ebc3 1101 	rsb	r1, r3, r1, lsl #4
 801f9d4:	0112      	lsls	r2, r2, #4
 801f9d6:	b289      	uxth	r1, r1
 801f9d8:	f5c2 7080 	rsb	r0, r2, #256	@ 0x100
 801f9dc:	1a40      	subs	r0, r0, r1
 801f9de:	fa1f fe80 	uxth.w	lr, r0
 801f9e2:	1ad2      	subs	r2, r2, r3
 801f9e4:	980d      	ldr	r0, [sp, #52]	@ 0x34
 801f9e6:	b292      	uxth	r2, r2
 801f9e8:	4342      	muls	r2, r0
 801f9ea:	fb0c 2c0e 	mla	ip, ip, lr, r2
 801f9ee:	9a0a      	ldr	r2, [sp, #40]	@ 0x28
 801f9f0:	fb01 c102 	mla	r1, r1, r2, ip
 801f9f4:	9a0e      	ldr	r2, [sp, #56]	@ 0x38
 801f9f6:	fb03 1302 	mla	r3, r3, r2, r1
 801f9fa:	f3c3 2307 	ubfx	r3, r3, #8, #8
 801f9fe:	2bff      	cmp	r3, #255	@ 0xff
 801fa00:	f040 8093 	bne.w	801fb2a <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2ae>
 801fa04:	4bbe      	ldr	r3, [pc, #760]	@ (801fd00 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x484>)
 801fa06:	681a      	ldr	r2, [r3, #0]
 801fa08:	4bbe      	ldr	r3, [pc, #760]	@ (801fd04 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x488>)
 801fa0a:	0951      	lsrs	r1, r2, #5
 801fa0c:	ea03 2312 	and.w	r3, r3, r2, lsr #8
 801fa10:	f401 61fc 	and.w	r1, r1, #2016	@ 0x7e0
 801fa14:	430b      	orrs	r3, r1
 801fa16:	f3c2 02c4 	ubfx	r2, r2, #3, #5
 801fa1a:	4313      	orrs	r3, r2
 801fa1c:	f8a8 3000 	strh.w	r3, [r8]
 801fa20:	9b1f      	ldr	r3, [sp, #124]	@ 0x7c
 801fa22:	441c      	add	r4, r3
 801fa24:	9b20      	ldr	r3, [sp, #128]	@ 0x80
 801fa26:	441e      	add	r6, r3
 801fa28:	9b09      	ldr	r3, [sp, #36]	@ 0x24
 801fa2a:	3b01      	subs	r3, #1
 801fa2c:	f108 0802 	add.w	r8, r8, #2
 801fa30:	9309      	str	r3, [sp, #36]	@ 0x24
 801fa32:	e76c      	b.n	801f90e <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x92>
 801fa34:	9b1f      	ldr	r3, [sp, #124]	@ 0x7c
 801fa36:	441c      	add	r4, r3
 801fa38:	9b20      	ldr	r3, [sp, #128]	@ 0x80
 801fa3a:	3d01      	subs	r5, #1
 801fa3c:	441e      	add	r6, r3
 801fa3e:	f109 0902 	add.w	r9, r9, #2
 801fa42:	e744      	b.n	801f8ce <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x52>
 801fa44:	d021      	beq.n	801fa8a <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x20e>
 801fa46:	981f      	ldr	r0, [sp, #124]	@ 0x7c
 801fa48:	1e6b      	subs	r3, r5, #1
 801fa4a:	fb00 4003 	mla	r0, r0, r3, r4
 801fa4e:	1400      	asrs	r0, r0, #16
 801fa50:	f53f af59 	bmi.w	801f906 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x8a>
 801fa54:	3901      	subs	r1, #1
 801fa56:	4288      	cmp	r0, r1
 801fa58:	f6bf af55 	bge.w	801f906 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x8a>
 801fa5c:	9920      	ldr	r1, [sp, #128]	@ 0x80
 801fa5e:	fb01 6303 	mla	r3, r1, r3, r6
 801fa62:	141b      	asrs	r3, r3, #16
 801fa64:	f53f af4f 	bmi.w	801f906 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x8a>
 801fa68:	3a01      	subs	r2, #1
 801fa6a:	4293      	cmp	r3, r2
 801fa6c:	f6bf af4b 	bge.w	801f906 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x8a>
 801fa70:	f9bd 3018 	ldrsh.w	r3, [sp, #24]
 801fa74:	9308      	str	r3, [sp, #32]
 801fa76:	46a8      	mov	r8, r5
 801fa78:	46ce      	mov	lr, r9
 801fa7a:	f1b8 0f00 	cmp.w	r8, #0
 801fa7e:	f300 80b5 	bgt.w	801fbec <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x370>
 801fa82:	ea25 75e5 	bic.w	r5, r5, r5, asr #31
 801fa86:	eb09 0945 	add.w	r9, r9, r5, lsl #1
 801fa8a:	9b07      	ldr	r3, [sp, #28]
 801fa8c:	2b00      	cmp	r3, #0
 801fa8e:	f340 817d 	ble.w	801fd8c <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x510>
 801fa92:	ee30 0a04 	vadd.f32	s0, s0, s8
 801fa96:	eeb7 7a00 	vmov.f32	s14, #112	@ 0x3f800000  1.0
 801fa9a:	eec7 7a00 	vdiv.f32	s15, s14, s0
 801fa9e:	9b1c      	ldr	r3, [sp, #112]	@ 0x70
 801faa0:	ee70 0aa4 	vadd.f32	s1, s1, s9
 801faa4:	ee31 1a05 	vadd.f32	s2, s2, s10
 801faa8:	ee20 7aa7 	vmul.f32	s14, s1, s15
 801faac:	eef0 6a62 	vmov.f32	s13, s5
 801fab0:	ee61 7a27 	vmul.f32	s15, s2, s15
 801fab4:	eefe 6ac8 	vcvt.s32.f32	s13, s13, #16
 801fab8:	ee77 2a62 	vsub.f32	s5, s14, s5
 801fabc:	ee16 4a90 	vmov	r4, s13
 801fac0:	eefe 2ac8 	vcvt.s32.f32	s5, s5, #16
 801fac4:	eef0 6a43 	vmov.f32	s13, s6
 801fac8:	ee37 3ac3 	vsub.f32	s6, s15, s6
 801facc:	ee12 2a90 	vmov	r2, s5
 801fad0:	eebe 3ac8 	vcvt.s32.f32	s6, s6, #16
 801fad4:	fb92 f3f3 	sdiv	r3, r2, r3
 801fad8:	ee13 2a10 	vmov	r2, s6
 801fadc:	931f      	str	r3, [sp, #124]	@ 0x7c
 801fade:	9b1c      	ldr	r3, [sp, #112]	@ 0x70
 801fae0:	fb92 f3f3 	sdiv	r3, r2, r3
 801fae4:	9320      	str	r3, [sp, #128]	@ 0x80
 801fae6:	9b07      	ldr	r3, [sp, #28]
 801fae8:	9a0c      	ldr	r2, [sp, #48]	@ 0x30
 801faea:	3b01      	subs	r3, #1
 801faec:	eefe 6ac8 	vcvt.s32.f32	s13, s13, #16
 801faf0:	9307      	str	r3, [sp, #28]
 801faf2:	9b1c      	ldr	r3, [sp, #112]	@ 0x70
 801faf4:	ee16 6a90 	vmov	r6, s13
 801faf8:	bf14      	ite	ne
 801fafa:	461d      	movne	r5, r3
 801fafc:	4615      	moveq	r5, r2
 801fafe:	eeb0 3a67 	vmov.f32	s6, s15
 801fb02:	eef0 2a47 	vmov.f32	s5, s14
 801fb06:	e6d3      	b.n	801f8b0 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x34>
 801fb08:	2900      	cmp	r1, #0
 801fb0a:	f43f af5c 	beq.w	801f9c6 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x14a>
 801fb0e:	eb0a 0003 	add.w	r0, sl, r3
 801fb12:	0843      	lsrs	r3, r0, #1
 801fb14:	07c0      	lsls	r0, r0, #31
 801fb16:	5cfb      	ldrb	r3, [r7, r3]
 801fb18:	bf54      	ite	pl
 801fb1a:	f003 030f 	andpl.w	r3, r3, #15
 801fb1e:	111b      	asrmi	r3, r3, #4
 801fb20:	eb03 1303 	add.w	r3, r3, r3, lsl #4
 801fb24:	b2db      	uxtb	r3, r3
 801fb26:	930a      	str	r3, [sp, #40]	@ 0x28
 801fb28:	e74d      	b.n	801f9c6 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x14a>
 801fb2a:	2b00      	cmp	r3, #0
 801fb2c:	f43f af78 	beq.w	801fa20 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1a4>
 801fb30:	4a73      	ldr	r2, [pc, #460]	@ (801fd00 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x484>)
 801fb32:	f8b8 c000 	ldrh.w	ip, [r8]
 801fb36:	6810      	ldr	r0, [r2, #0]
 801fb38:	fa1f fe83 	uxth.w	lr, r3
 801fb3c:	ea4f 212c 	mov.w	r1, ip, asr #8
 801fb40:	f3c0 4207 	ubfx	r2, r0, #16, #8
 801fb44:	43db      	mvns	r3, r3
 801fb46:	b2db      	uxtb	r3, r3
 801fb48:	fb12 f20e 	smulbb	r2, r2, lr
 801fb4c:	f001 01f8 	and.w	r1, r1, #248	@ 0xf8
 801fb50:	fb01 2103 	mla	r1, r1, r3, r2
 801fb54:	f3c0 2b07 	ubfx	fp, r0, #8, #8
 801fb58:	ea4f 02ec 	mov.w	r2, ip, asr #3
 801fb5c:	b2c0      	uxtb	r0, r0
 801fb5e:	ea4f 0ccc 	mov.w	ip, ip, lsl #3
 801fb62:	fb1b fb0e 	smulbb	fp, fp, lr
 801fb66:	b289      	uxth	r1, r1
 801fb68:	fb10 fe0e 	smulbb	lr, r0, lr
 801fb6c:	f002 02fc 	and.w	r2, r2, #252	@ 0xfc
 801fb70:	fa5f fc8c 	uxtb.w	ip, ip
 801fb74:	fb02 b203 	mla	r2, r2, r3, fp
 801fb78:	1c48      	adds	r0, r1, #1
 801fb7a:	fb0c e303 	mla	r3, ip, r3, lr
 801fb7e:	b292      	uxth	r2, r2
 801fb80:	b29b      	uxth	r3, r3
 801fb82:	eb00 2111 	add.w	r1, r0, r1, lsr #8
 801fb86:	f401 4078 	and.w	r0, r1, #63488	@ 0xf800
 801fb8a:	f102 0b01 	add.w	fp, r2, #1
 801fb8e:	1c59      	adds	r1, r3, #1
 801fb90:	eb01 2113 	add.w	r1, r1, r3, lsr #8
 801fb94:	eb0b 2212 	add.w	r2, fp, r2, lsr #8
 801fb98:	f3c1 21c4 	ubfx	r1, r1, #11, #5
 801fb9c:	0952      	lsrs	r2, r2, #5
 801fb9e:	4301      	orrs	r1, r0
 801fba0:	f402 62fc 	and.w	r2, r2, #2016	@ 0x7e0
 801fba4:	4311      	orrs	r1, r2
 801fba6:	f8a8 1000 	strh.w	r1, [r8]
 801fbaa:	e739      	b.n	801fa20 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1a4>
 801fbac:	f113 0b01 	adds.w	fp, r3, #1
 801fbb0:	f53f af36 	bmi.w	801fa20 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1a4>
 801fbb4:	45dc      	cmp	ip, fp
 801fbb6:	f6ff af33 	blt.w	801fa20 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1a4>
 801fbba:	f110 0b01 	adds.w	fp, r0, #1
 801fbbe:	f53f af2f 	bmi.w	801fa20 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1a4>
 801fbc2:	45de      	cmp	lr, fp
 801fbc4:	f6ff af2c 	blt.w	801fa20 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1a4>
 801fbc8:	9a08      	ldr	r2, [sp, #32]
 801fbca:	9302      	str	r3, [sp, #8]
 801fbcc:	fa0f f38e 	sxth.w	r3, lr
 801fbd0:	9301      	str	r3, [sp, #4]
 801fbd2:	fa0f f38c 	sxth.w	r3, ip
 801fbd6:	e9cd 0203 	strd	r0, r2, [sp, #12]
 801fbda:	9105      	str	r1, [sp, #20]
 801fbdc:	9300      	str	r3, [sp, #0]
 801fbde:	463a      	mov	r2, r7
 801fbe0:	4653      	mov	r3, sl
 801fbe2:	4641      	mov	r1, r8
 801fbe4:	9811      	ldr	r0, [sp, #68]	@ 0x44
 801fbe6:	f7ff fd73 	bl	801f6d0 <_ZNK8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtsssiihh>
 801fbea:	e719      	b.n	801fa20 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1a4>
 801fbec:	9906      	ldr	r1, [sp, #24]
 801fbee:	1422      	asrs	r2, r4, #16
 801fbf0:	1433      	asrs	r3, r6, #16
 801fbf2:	fb01 2303 	mla	r3, r1, r3, r2
 801fbf6:	085a      	lsrs	r2, r3, #1
 801fbf8:	07d9      	lsls	r1, r3, #31
 801fbfa:	5cba      	ldrb	r2, [r7, r2]
 801fbfc:	bf54      	ite	pl
 801fbfe:	f002 020f 	andpl.w	r2, r2, #15
 801fc02:	1112      	asrmi	r2, r2, #4
 801fc04:	eb02 1202 	add.w	r2, r2, r2, lsl #4
 801fc08:	f3c4 3003 	ubfx	r0, r4, #12, #4
 801fc0c:	f3c6 3c03 	ubfx	ip, r6, #12, #4
 801fc10:	b2d2      	uxtb	r2, r2
 801fc12:	2800      	cmp	r0, #0
 801fc14:	d062      	beq.n	801fcdc <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x460>
 801fc16:	f103 0a01 	add.w	sl, r3, #1
 801fc1a:	ea4f 015a 	mov.w	r1, sl, lsr #1
 801fc1e:	f01a 0f01 	tst.w	sl, #1
 801fc22:	5c79      	ldrb	r1, [r7, r1]
 801fc24:	bf0c      	ite	eq
 801fc26:	f001 010f 	andeq.w	r1, r1, #15
 801fc2a:	1109      	asrne	r1, r1, #4
 801fc2c:	eb01 1101 	add.w	r1, r1, r1, lsl #4
 801fc30:	b2c9      	uxtb	r1, r1
 801fc32:	910f      	str	r1, [sp, #60]	@ 0x3c
 801fc34:	f1bc 0f00 	cmp.w	ip, #0
 801fc38:	d019      	beq.n	801fc6e <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3f2>
 801fc3a:	9908      	ldr	r1, [sp, #32]
 801fc3c:	440b      	add	r3, r1
 801fc3e:	0859      	lsrs	r1, r3, #1
 801fc40:	f013 0f01 	tst.w	r3, #1
 801fc44:	5c79      	ldrb	r1, [r7, r1]
 801fc46:	bf0c      	ite	eq
 801fc48:	f001 010f 	andeq.w	r1, r1, #15
 801fc4c:	1109      	asrne	r1, r1, #4
 801fc4e:	eb01 1101 	add.w	r1, r1, r1, lsl #4
 801fc52:	b2c9      	uxtb	r1, r1
 801fc54:	3301      	adds	r3, #1
 801fc56:	910b      	str	r1, [sp, #44]	@ 0x2c
 801fc58:	0859      	lsrs	r1, r3, #1
 801fc5a:	07db      	lsls	r3, r3, #31
 801fc5c:	5c79      	ldrb	r1, [r7, r1]
 801fc5e:	bf54      	ite	pl
 801fc60:	f001 010f 	andpl.w	r1, r1, #15
 801fc64:	1109      	asrmi	r1, r1, #4
 801fc66:	eb01 1101 	add.w	r1, r1, r1, lsl #4
 801fc6a:	b2c9      	uxtb	r1, r1
 801fc6c:	9110      	str	r1, [sp, #64]	@ 0x40
 801fc6e:	b280      	uxth	r0, r0
 801fc70:	fa1f fc8c 	uxth.w	ip, ip
 801fc74:	fb00 f30c 	mul.w	r3, r0, ip
 801fc78:	ebc3 1c0c 	rsb	ip, r3, ip, lsl #4
 801fc7c:	0100      	lsls	r0, r0, #4
 801fc7e:	fa1f fc8c 	uxth.w	ip, ip
 801fc82:	f5c0 7180 	rsb	r1, r0, #256	@ 0x100
 801fc86:	eba1 010c 	sub.w	r1, r1, ip
 801fc8a:	fa1f fa81 	uxth.w	sl, r1
 801fc8e:	1ac0      	subs	r0, r0, r3
 801fc90:	990f      	ldr	r1, [sp, #60]	@ 0x3c
 801fc92:	b280      	uxth	r0, r0
 801fc94:	4348      	muls	r0, r1
 801fc96:	990b      	ldr	r1, [sp, #44]	@ 0x2c
 801fc98:	fb02 020a 	mla	r2, r2, sl, r0
 801fc9c:	fb0c 2c01 	mla	ip, ip, r1, r2
 801fca0:	9a10      	ldr	r2, [sp, #64]	@ 0x40
 801fca2:	fb03 c302 	mla	r3, r3, r2, ip
 801fca6:	f3c3 2307 	ubfx	r3, r3, #8, #8
 801fcaa:	2bff      	cmp	r3, #255	@ 0xff
 801fcac:	d12c      	bne.n	801fd08 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x48c>
 801fcae:	4b14      	ldr	r3, [pc, #80]	@ (801fd00 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x484>)
 801fcb0:	681a      	ldr	r2, [r3, #0]
 801fcb2:	4b14      	ldr	r3, [pc, #80]	@ (801fd04 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x488>)
 801fcb4:	0951      	lsrs	r1, r2, #5
 801fcb6:	ea03 2312 	and.w	r3, r3, r2, lsr #8
 801fcba:	f401 61fc 	and.w	r1, r1, #2016	@ 0x7e0
 801fcbe:	430b      	orrs	r3, r1
 801fcc0:	f3c2 02c4 	ubfx	r2, r2, #3, #5
 801fcc4:	4313      	orrs	r3, r2
 801fcc6:	f8ae 3000 	strh.w	r3, [lr]
 801fcca:	9b1f      	ldr	r3, [sp, #124]	@ 0x7c
 801fccc:	441c      	add	r4, r3
 801fcce:	9b20      	ldr	r3, [sp, #128]	@ 0x80
 801fcd0:	f10e 0e02 	add.w	lr, lr, #2
 801fcd4:	441e      	add	r6, r3
 801fcd6:	f108 38ff 	add.w	r8, r8, #4294967295
 801fcda:	e6ce      	b.n	801fa7a <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1fe>
 801fcdc:	f1bc 0f00 	cmp.w	ip, #0
 801fce0:	d0c5      	beq.n	801fc6e <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3f2>
 801fce2:	9908      	ldr	r1, [sp, #32]
 801fce4:	440b      	add	r3, r1
 801fce6:	0859      	lsrs	r1, r3, #1
 801fce8:	07db      	lsls	r3, r3, #31
 801fcea:	5c79      	ldrb	r1, [r7, r1]
 801fcec:	bf54      	ite	pl
 801fcee:	f001 010f 	andpl.w	r1, r1, #15
 801fcf2:	1109      	asrmi	r1, r1, #4
 801fcf4:	eb01 1101 	add.w	r1, r1, r1, lsl #4
 801fcf8:	b2c9      	uxtb	r1, r1
 801fcfa:	910b      	str	r1, [sp, #44]	@ 0x2c
 801fcfc:	e7b7      	b.n	801fc6e <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3f2>
 801fcfe:	bf00      	nop
 801fd00:	20002c64 	.word	0x20002c64
 801fd04:	fffff800 	.word	0xfffff800
 801fd08:	2b00      	cmp	r3, #0
 801fd0a:	d0de      	beq.n	801fcca <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x44e>
 801fd0c:	4a21      	ldr	r2, [pc, #132]	@ (801fd94 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x518>)
 801fd0e:	f8be c000 	ldrh.w	ip, [lr]
 801fd12:	6810      	ldr	r0, [r2, #0]
 801fd14:	fa1f fa83 	uxth.w	sl, r3
 801fd18:	ea4f 212c 	mov.w	r1, ip, asr #8
 801fd1c:	f3c0 4207 	ubfx	r2, r0, #16, #8
 801fd20:	43db      	mvns	r3, r3
 801fd22:	b2db      	uxtb	r3, r3
 801fd24:	fb12 f20a 	smulbb	r2, r2, sl
 801fd28:	f001 01f8 	and.w	r1, r1, #248	@ 0xf8
 801fd2c:	fb01 2103 	mla	r1, r1, r3, r2
 801fd30:	f3c0 2b07 	ubfx	fp, r0, #8, #8
 801fd34:	ea4f 02ec 	mov.w	r2, ip, asr #3
 801fd38:	b2c0      	uxtb	r0, r0
 801fd3a:	ea4f 0ccc 	mov.w	ip, ip, lsl #3
 801fd3e:	fa5f fc8c 	uxtb.w	ip, ip
 801fd42:	fb10 f00a 	smulbb	r0, r0, sl
 801fd46:	fb0c 0003 	mla	r0, ip, r3, r0
 801fd4a:	b289      	uxth	r1, r1
 801fd4c:	fb1b fb0a 	smulbb	fp, fp, sl
 801fd50:	b280      	uxth	r0, r0
 801fd52:	f002 02fc 	and.w	r2, r2, #252	@ 0xfc
 801fd56:	fb02 b203 	mla	r2, r2, r3, fp
 801fd5a:	1c4b      	adds	r3, r1, #1
 801fd5c:	f100 0b01 	add.w	fp, r0, #1
 801fd60:	eb03 2111 	add.w	r1, r3, r1, lsr #8
 801fd64:	eb0b 2b10 	add.w	fp, fp, r0, lsr #8
 801fd68:	b292      	uxth	r2, r2
 801fd6a:	f3cb 2bc4 	ubfx	fp, fp, #11, #5
 801fd6e:	f401 4178 	and.w	r1, r1, #63488	@ 0xf800
 801fd72:	ea4b 0101 	orr.w	r1, fp, r1
 801fd76:	f102 0b01 	add.w	fp, r2, #1
 801fd7a:	eb0b 2212 	add.w	r2, fp, r2, lsr #8
 801fd7e:	0952      	lsrs	r2, r2, #5
 801fd80:	f402 62fc 	and.w	r2, r2, #2016	@ 0x7e0
 801fd84:	4311      	orrs	r1, r2
 801fd86:	f8ae 1000 	strh.w	r1, [lr]
 801fd8a:	e79e      	b.n	801fcca <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x44e>
 801fd8c:	b013      	add	sp, #76	@ 0x4c
 801fd8e:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 801fd92:	bf00      	nop
 801fd94:	20002c64 	.word	0x20002c64

0801fd98 <_ZNK8touchgfx8LCD16bpp17DecompressorL8_L416blendPixelRGB565Ettii>:
 801fd98:	b570      	push	{r4, r5, r6, lr}
 801fd9a:	1208      	asrs	r0, r1, #8
 801fd9c:	b29e      	uxth	r6, r3
 801fd9e:	f8bd 5010 	ldrh.w	r5, [sp, #16]
 801fda2:	1213      	asrs	r3, r2, #8
 801fda4:	f000 00f8 	and.w	r0, r0, #248	@ 0xf8
 801fda8:	f003 03f8 	and.w	r3, r3, #248	@ 0xf8
 801fdac:	fb13 f305 	smulbb	r3, r3, r5
 801fdb0:	fb10 f006 	smulbb	r0, r0, r6
 801fdb4:	4418      	add	r0, r3
 801fdb6:	10cc      	asrs	r4, r1, #3
 801fdb8:	10d3      	asrs	r3, r2, #3
 801fdba:	f004 04fc 	and.w	r4, r4, #252	@ 0xfc
 801fdbe:	f003 03fc 	and.w	r3, r3, #252	@ 0xfc
 801fdc2:	fb13 f305 	smulbb	r3, r3, r5
 801fdc6:	fb14 f406 	smulbb	r4, r4, r6
 801fdca:	00c9      	lsls	r1, r1, #3
 801fdcc:	00d2      	lsls	r2, r2, #3
 801fdce:	441c      	add	r4, r3
 801fdd0:	b2d2      	uxtb	r2, r2
 801fdd2:	b2cb      	uxtb	r3, r1
 801fdd4:	fb12 f205 	smulbb	r2, r2, r5
 801fdd8:	b280      	uxth	r0, r0
 801fdda:	fb13 f306 	smulbb	r3, r3, r6
 801fdde:	4413      	add	r3, r2
 801fde0:	1c42      	adds	r2, r0, #1
 801fde2:	b29b      	uxth	r3, r3
 801fde4:	eb02 2010 	add.w	r0, r2, r0, lsr #8
 801fde8:	f400 4278 	and.w	r2, r0, #63488	@ 0xf800
 801fdec:	1c58      	adds	r0, r3, #1
 801fdee:	eb00 2013 	add.w	r0, r0, r3, lsr #8
 801fdf2:	b2a4      	uxth	r4, r4
 801fdf4:	f3c0 20c4 	ubfx	r0, r0, #11, #5
 801fdf8:	4310      	orrs	r0, r2
 801fdfa:	1c62      	adds	r2, r4, #1
 801fdfc:	eb02 2414 	add.w	r4, r2, r4, lsr #8
 801fe00:	0964      	lsrs	r4, r4, #5
 801fe02:	f404 64fc 	and.w	r4, r4, #2016	@ 0x7e0
 801fe06:	4320      	orrs	r0, r4
 801fe08:	bd70      	pop	{r4, r5, r6, pc}
	...

0801fe0c <_ZN8touchgfx8LCD16bpp17DecompressorL8_L414blitCopyRGB565EPKhS3_RKNS_4RectES6_h>:
 801fe0c:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 801fe10:	b08f      	sub	sp, #60	@ 0x3c
 801fe12:	461c      	mov	r4, r3
 801fe14:	f89d 7064 	ldrb.w	r7, [sp, #100]	@ 0x64
 801fe18:	9004      	str	r0, [sp, #16]
 801fe1a:	460d      	mov	r5, r1
 801fe1c:	4616      	mov	r6, r2
 801fe1e:	9b18      	ldr	r3, [sp, #96]	@ 0x60
 801fe20:	2f00      	cmp	r7, #0
 801fe22:	f000 80f6 	beq.w	8020012 <_ZN8touchgfx8LCD16bpp17DecompressorL8_L414blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x206>
 801fe26:	6820      	ldr	r0, [r4, #0]
 801fe28:	6861      	ldr	r1, [r4, #4]
 801fe2a:	aa0a      	add	r2, sp, #40	@ 0x28
 801fe2c:	c203      	stmia	r2!, {r0, r1}
 801fe2e:	6818      	ldr	r0, [r3, #0]
 801fe30:	6859      	ldr	r1, [r3, #4]
 801fe32:	aa0c      	add	r2, sp, #48	@ 0x30
 801fe34:	c203      	stmia	r2!, {r0, r1}
 801fe36:	a80a      	add	r0, sp, #40	@ 0x28
 801fe38:	f7ee ffdc 	bl	800edf4 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectE>
 801fe3c:	4621      	mov	r1, r4
 801fe3e:	a80c      	add	r0, sp, #48	@ 0x30
 801fe40:	f7ef f800 	bl	800ee44 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectERKS1_>
 801fe44:	f9bd 2030 	ldrsh.w	r2, [sp, #48]	@ 0x30
 801fe48:	f9bd b036 	ldrsh.w	fp, [sp, #54]	@ 0x36
 801fe4c:	f9bd 9034 	ldrsh.w	r9, [sp, #52]	@ 0x34
 801fe50:	f002 0301 	and.w	r3, r2, #1
 801fe54:	9306      	str	r3, [sp, #24]
 801fe56:	f9bd 302c 	ldrsh.w	r3, [sp, #44]	@ 0x2c
 801fe5a:	f003 0101 	and.w	r1, r3, #1
 801fe5e:	9105      	str	r1, [sp, #20]
 801fe60:	9805      	ldr	r0, [sp, #20]
 801fe62:	f9bd 1032 	ldrsh.w	r1, [sp, #50]	@ 0x32
 801fe66:	4403      	add	r3, r0
 801fe68:	fb01 2303 	mla	r3, r1, r3, r2
 801fe6c:	f04f 0802 	mov.w	r8, #2
 801fe70:	fb93 f3f8 	sdiv	r3, r3, r8
 801fe74:	441d      	add	r5, r3
 801fe76:	f8bd 3028 	ldrh.w	r3, [sp, #40]	@ 0x28
 801fe7a:	441a      	add	r2, r3
 801fe7c:	f8bd 302a 	ldrh.w	r3, [sp, #42]	@ 0x2a
 801fe80:	f8ad 2030 	strh.w	r2, [sp, #48]	@ 0x30
 801fe84:	4419      	add	r1, r3
 801fe86:	4b64      	ldr	r3, [pc, #400]	@ (8020018 <_ZN8touchgfx8LCD16bpp17DecompressorL8_L414blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x20c>)
 801fe88:	f8ad 1032 	strh.w	r1, [sp, #50]	@ 0x32
 801fe8c:	6818      	ldr	r0, [r3, #0]
 801fe8e:	6803      	ldr	r3, [r0, #0]
 801fe90:	6a9b      	ldr	r3, [r3, #40]	@ 0x28
 801fe92:	4798      	blx	r3
 801fe94:	4a61      	ldr	r2, [pc, #388]	@ (802001c <_ZN8touchgfx8LCD16bpp17DecompressorL8_L414blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x210>)
 801fe96:	f9bd 4032 	ldrsh.w	r4, [sp, #50]	@ 0x32
 801fe9a:	8813      	ldrh	r3, [r2, #0]
 801fe9c:	f9bd a030 	ldrsh.w	sl, [sp, #48]	@ 0x30
 801fea0:	2fff      	cmp	r7, #255	@ 0xff
 801fea2:	fb03 a404 	mla	r4, r3, r4, sl
 801fea6:	eb00 0444 	add.w	r4, r0, r4, lsl #1
 801feaa:	f106 0604 	add.w	r6, r6, #4
 801feae:	4611      	mov	r1, r2
 801feb0:	fb03 fb0b 	mul.w	fp, r3, fp
 801feb4:	d06b      	beq.n	801ff8e <_ZN8touchgfx8LCD16bpp17DecompressorL8_L414blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x182>
 801feb6:	f1c7 03ff 	rsb	r3, r7, #255	@ 0xff
 801feba:	9303      	str	r3, [sp, #12]
 801febc:	eb04 034b 	add.w	r3, r4, fp, lsl #1
 801fec0:	e9cd 3207 	strd	r3, r2, [sp, #28]
 801fec4:	f8cd 8024 	str.w	r8, [sp, #36]	@ 0x24
 801fec8:	9b07      	ldr	r3, [sp, #28]
 801feca:	42a3      	cmp	r3, r4
 801fecc:	f240 809c 	bls.w	8020008 <_ZN8touchgfx8LCD16bpp17DecompressorL8_L414blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x1fc>
 801fed0:	9b06      	ldr	r3, [sp, #24]
 801fed2:	2b00      	cmp	r3, #0
 801fed4:	d039      	beq.n	801ff4a <_ZN8touchgfx8LCD16bpp17DecompressorL8_L414blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x13e>
 801fed6:	782b      	ldrb	r3, [r5, #0]
 801fed8:	8822      	ldrh	r2, [r4, #0]
 801feda:	9804      	ldr	r0, [sp, #16]
 801fedc:	f003 030f 	and.w	r3, r3, #15
 801fee0:	f105 0801 	add.w	r8, r5, #1
 801fee4:	f836 1013 	ldrh.w	r1, [r6, r3, lsl #1]
 801fee8:	9b03      	ldr	r3, [sp, #12]
 801feea:	9300      	str	r3, [sp, #0]
 801feec:	463b      	mov	r3, r7
 801feee:	f7ff ff53 	bl	801fd98 <_ZNK8touchgfx8LCD16bpp17DecompressorL8_L416blendPixelRGB565Ettii>
 801fef2:	f824 0b02 	strh.w	r0, [r4], #2
 801fef6:	f109 3bff 	add.w	fp, r9, #4294967295
 801fefa:	f1bb 0f01 	cmp.w	fp, #1
 801fefe:	46a2      	mov	sl, r4
 801ff00:	f104 0404 	add.w	r4, r4, #4
 801ff04:	dd24      	ble.n	801ff50 <_ZN8touchgfx8LCD16bpp17DecompressorL8_L414blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x144>
 801ff06:	f898 3000 	ldrb.w	r3, [r8]
 801ff0a:	f834 2c04 	ldrh.w	r2, [r4, #-4]
 801ff0e:	9804      	ldr	r0, [sp, #16]
 801ff10:	091b      	lsrs	r3, r3, #4
 801ff12:	f1ab 0b02 	sub.w	fp, fp, #2
 801ff16:	f836 1013 	ldrh.w	r1, [r6, r3, lsl #1]
 801ff1a:	9b03      	ldr	r3, [sp, #12]
 801ff1c:	9300      	str	r3, [sp, #0]
 801ff1e:	463b      	mov	r3, r7
 801ff20:	f7ff ff3a 	bl	801fd98 <_ZNK8touchgfx8LCD16bpp17DecompressorL8_L416blendPixelRGB565Ettii>
 801ff24:	f824 0c04 	strh.w	r0, [r4, #-4]
 801ff28:	f818 3b01 	ldrb.w	r3, [r8], #1
 801ff2c:	f834 2c02 	ldrh.w	r2, [r4, #-2]
 801ff30:	9804      	ldr	r0, [sp, #16]
 801ff32:	f003 030f 	and.w	r3, r3, #15
 801ff36:	f836 1013 	ldrh.w	r1, [r6, r3, lsl #1]
 801ff3a:	9b03      	ldr	r3, [sp, #12]
 801ff3c:	9300      	str	r3, [sp, #0]
 801ff3e:	463b      	mov	r3, r7
 801ff40:	f7ff ff2a 	bl	801fd98 <_ZNK8touchgfx8LCD16bpp17DecompressorL8_L416blendPixelRGB565Ettii>
 801ff44:	f824 0c02 	strh.w	r0, [r4, #-2]
 801ff48:	e7d7      	b.n	801fefa <_ZN8touchgfx8LCD16bpp17DecompressorL8_L414blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0xee>
 801ff4a:	46a8      	mov	r8, r5
 801ff4c:	46cb      	mov	fp, r9
 801ff4e:	e7d4      	b.n	801fefa <_ZN8touchgfx8LCD16bpp17DecompressorL8_L414blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0xee>
 801ff50:	d10e      	bne.n	801ff70 <_ZN8touchgfx8LCD16bpp17DecompressorL8_L414blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x164>
 801ff52:	f898 3000 	ldrb.w	r3, [r8]
 801ff56:	f8ba 2000 	ldrh.w	r2, [sl]
 801ff5a:	9804      	ldr	r0, [sp, #16]
 801ff5c:	091b      	lsrs	r3, r3, #4
 801ff5e:	f836 1013 	ldrh.w	r1, [r6, r3, lsl #1]
 801ff62:	9b03      	ldr	r3, [sp, #12]
 801ff64:	9300      	str	r3, [sp, #0]
 801ff66:	463b      	mov	r3, r7
 801ff68:	f7ff ff16 	bl	801fd98 <_ZNK8touchgfx8LCD16bpp17DecompressorL8_L416blendPixelRGB565Ettii>
 801ff6c:	f82a 0b02 	strh.w	r0, [sl], #2
 801ff70:	9b08      	ldr	r3, [sp, #32]
 801ff72:	9a05      	ldr	r2, [sp, #20]
 801ff74:	881c      	ldrh	r4, [r3, #0]
 801ff76:	f9bd 302c 	ldrsh.w	r3, [sp, #44]	@ 0x2c
 801ff7a:	eba4 0409 	sub.w	r4, r4, r9
 801ff7e:	4413      	add	r3, r2
 801ff80:	eb0a 0444 	add.w	r4, sl, r4, lsl #1
 801ff84:	9a09      	ldr	r2, [sp, #36]	@ 0x24
 801ff86:	fb93 f3f2 	sdiv	r3, r3, r2
 801ff8a:	441d      	add	r5, r3
 801ff8c:	e79c      	b.n	801fec8 <_ZN8touchgfx8LCD16bpp17DecompressorL8_L414blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0xbc>
 801ff8e:	eb04 0b4b 	add.w	fp, r4, fp, lsl #1
 801ff92:	45a3      	cmp	fp, r4
 801ff94:	d938      	bls.n	8020008 <_ZN8touchgfx8LCD16bpp17DecompressorL8_L414blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x1fc>
 801ff96:	9b06      	ldr	r3, [sp, #24]
 801ff98:	b1f3      	cbz	r3, 801ffd8 <_ZN8touchgfx8LCD16bpp17DecompressorL8_L414blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x1cc>
 801ff9a:	782b      	ldrb	r3, [r5, #0]
 801ff9c:	f003 030f 	and.w	r3, r3, #15
 801ffa0:	1c6a      	adds	r2, r5, #1
 801ffa2:	f836 3013 	ldrh.w	r3, [r6, r3, lsl #1]
 801ffa6:	8023      	strh	r3, [r4, #0]
 801ffa8:	f109 30ff 	add.w	r0, r9, #4294967295
 801ffac:	3402      	adds	r4, #2
 801ffae:	2801      	cmp	r0, #1
 801ffb0:	4623      	mov	r3, r4
 801ffb2:	f104 0404 	add.w	r4, r4, #4
 801ffb6:	dd12      	ble.n	801ffde <_ZN8touchgfx8LCD16bpp17DecompressorL8_L414blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x1d2>
 801ffb8:	7813      	ldrb	r3, [r2, #0]
 801ffba:	091b      	lsrs	r3, r3, #4
 801ffbc:	3802      	subs	r0, #2
 801ffbe:	f836 3013 	ldrh.w	r3, [r6, r3, lsl #1]
 801ffc2:	f824 3c04 	strh.w	r3, [r4, #-4]
 801ffc6:	f812 3b01 	ldrb.w	r3, [r2], #1
 801ffca:	f003 030f 	and.w	r3, r3, #15
 801ffce:	f836 3013 	ldrh.w	r3, [r6, r3, lsl #1]
 801ffd2:	f824 3c02 	strh.w	r3, [r4, #-2]
 801ffd6:	e7ea      	b.n	801ffae <_ZN8touchgfx8LCD16bpp17DecompressorL8_L414blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x1a2>
 801ffd8:	462a      	mov	r2, r5
 801ffda:	4648      	mov	r0, r9
 801ffdc:	e7e7      	b.n	801ffae <_ZN8touchgfx8LCD16bpp17DecompressorL8_L414blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x1a2>
 801ffde:	d106      	bne.n	801ffee <_ZN8touchgfx8LCD16bpp17DecompressorL8_L414blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x1e2>
 801ffe0:	7812      	ldrb	r2, [r2, #0]
 801ffe2:	0912      	lsrs	r2, r2, #4
 801ffe4:	3302      	adds	r3, #2
 801ffe6:	f836 2012 	ldrh.w	r2, [r6, r2, lsl #1]
 801ffea:	f823 2c02 	strh.w	r2, [r3, #-2]
 801ffee:	880c      	ldrh	r4, [r1, #0]
 801fff0:	9a05      	ldr	r2, [sp, #20]
 801fff2:	eba4 0409 	sub.w	r4, r4, r9
 801fff6:	eb03 0444 	add.w	r4, r3, r4, lsl #1
 801fffa:	f9bd 302c 	ldrsh.w	r3, [sp, #44]	@ 0x2c
 801fffe:	4413      	add	r3, r2
 8020000:	fb93 f3f8 	sdiv	r3, r3, r8
 8020004:	441d      	add	r5, r3
 8020006:	e7c4      	b.n	801ff92 <_ZN8touchgfx8LCD16bpp17DecompressorL8_L414blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x186>
 8020008:	4b03      	ldr	r3, [pc, #12]	@ (8020018 <_ZN8touchgfx8LCD16bpp17DecompressorL8_L414blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x20c>)
 802000a:	6818      	ldr	r0, [r3, #0]
 802000c:	6803      	ldr	r3, [r0, #0]
 802000e:	6adb      	ldr	r3, [r3, #44]	@ 0x2c
 8020010:	4798      	blx	r3
 8020012:	b00f      	add	sp, #60	@ 0x3c
 8020014:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 8020018:	20002c5c 	.word	0x20002c5c
 802001c:	20002c56 	.word	0x20002c56

08020020 <_ZNK8touchgfx8LCD16bpp17DecompressorL8_L418blendPixelARGB8888Emtih>:
 8020020:	b5f0      	push	{r4, r5, r6, r7, lr}
 8020022:	f89d 5014 	ldrb.w	r5, [sp, #20]
 8020026:	2dff      	cmp	r5, #255	@ 0xff
 8020028:	ea4f 2711 	mov.w	r7, r1, lsr #8
 802002c:	d10c      	bne.n	8020048 <_ZNK8touchgfx8LCD16bpp17DecompressorL8_L418blendPixelARGB8888Emtih+0x28>
 802002e:	2bff      	cmp	r3, #255	@ 0xff
 8020030:	d10a      	bne.n	8020048 <_ZNK8touchgfx8LCD16bpp17DecompressorL8_L418blendPixelARGB8888Emtih+0x28>
 8020032:	4b25      	ldr	r3, [pc, #148]	@ (80200c8 <_ZNK8touchgfx8LCD16bpp17DecompressorL8_L418blendPixelARGB8888Emtih+0xa8>)
 8020034:	0948      	lsrs	r0, r1, #5
 8020036:	f400 60fc 	and.w	r0, r0, #2016	@ 0x7e0
 802003a:	403b      	ands	r3, r7
 802003c:	4318      	orrs	r0, r3
 802003e:	f3c1 01c4 	ubfx	r1, r1, #3, #5
 8020042:	4308      	orrs	r0, r1
 8020044:	b280      	uxth	r0, r0
 8020046:	bdf0      	pop	{r4, r5, r6, r7, pc}
 8020048:	fb15 f503 	smulbb	r5, r5, r3
 802004c:	b2ab      	uxth	r3, r5
 802004e:	1c5d      	adds	r5, r3, #1
 8020050:	eb05 2513 	add.w	r5, r5, r3, lsr #8
 8020054:	1214      	asrs	r4, r2, #8
 8020056:	f3c5 2507 	ubfx	r5, r5, #8, #8
 802005a:	fa1f fc85 	uxth.w	ip, r5
 802005e:	10d6      	asrs	r6, r2, #3
 8020060:	00d0      	lsls	r0, r2, #3
 8020062:	43ed      	mvns	r5, r5
 8020064:	f004 04f8 	and.w	r4, r4, #248	@ 0xf8
 8020068:	f3c1 4207 	ubfx	r2, r1, #16, #8
 802006c:	b2eb      	uxtb	r3, r5
 802006e:	b2c0      	uxtb	r0, r0
 8020070:	fb12 f20c 	smulbb	r2, r2, ip
 8020074:	ea44 1454 	orr.w	r4, r4, r4, lsr #5
 8020078:	fb04 2403 	mla	r4, r4, r3, r2
 802007c:	ea40 1250 	orr.w	r2, r0, r0, lsr #5
 8020080:	b2c8      	uxtb	r0, r1
 8020082:	f006 06fc 	and.w	r6, r6, #252	@ 0xfc
 8020086:	b2fd      	uxtb	r5, r7
 8020088:	fb10 f00c 	smulbb	r0, r0, ip
 802008c:	b2a4      	uxth	r4, r4
 802008e:	fb02 0003 	mla	r0, r2, r3, r0
 8020092:	ea46 1696 	orr.w	r6, r6, r6, lsr #6
 8020096:	fb15 f50c 	smulbb	r5, r5, ip
 802009a:	fb06 5503 	mla	r5, r6, r3, r5
 802009e:	b283      	uxth	r3, r0
 80200a0:	1c60      	adds	r0, r4, #1
 80200a2:	b2ad      	uxth	r5, r5
 80200a4:	eb00 2414 	add.w	r4, r0, r4, lsr #8
 80200a8:	1c58      	adds	r0, r3, #1
 80200aa:	eb00 2013 	add.w	r0, r0, r3, lsr #8
 80200ae:	1c6b      	adds	r3, r5, #1
 80200b0:	eb03 2515 	add.w	r5, r3, r5, lsr #8
 80200b4:	f404 4478 	and.w	r4, r4, #63488	@ 0xf800
 80200b8:	f3c0 20c4 	ubfx	r0, r0, #11, #5
 80200bc:	096d      	lsrs	r5, r5, #5
 80200be:	4320      	orrs	r0, r4
 80200c0:	f405 65fc 	and.w	r5, r5, #2016	@ 0x7e0
 80200c4:	4328      	orrs	r0, r5
 80200c6:	e7be      	b.n	8020046 <_ZNK8touchgfx8LCD16bpp17DecompressorL8_L418blendPixelARGB8888Emtih+0x26>
 80200c8:	00fff800 	.word	0x00fff800

080200cc <_ZN8touchgfx8LCD16bpp17DecompressorL8_L416blitCopyARGB8888EPKhS3_RKNS_4RectES6_h>:
 80200cc:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 80200d0:	461c      	mov	r4, r3
 80200d2:	b08d      	sub	sp, #52	@ 0x34
 80200d4:	460d      	mov	r5, r1
 80200d6:	9b16      	ldr	r3, [sp, #88]	@ 0x58
 80200d8:	6861      	ldr	r1, [r4, #4]
 80200da:	f89d 905c 	ldrb.w	r9, [sp, #92]	@ 0x5c
 80200de:	4680      	mov	r8, r0
 80200e0:	6820      	ldr	r0, [r4, #0]
 80200e2:	4616      	mov	r6, r2
 80200e4:	aa08      	add	r2, sp, #32
 80200e6:	c203      	stmia	r2!, {r0, r1}
 80200e8:	6818      	ldr	r0, [r3, #0]
 80200ea:	6859      	ldr	r1, [r3, #4]
 80200ec:	aa0a      	add	r2, sp, #40	@ 0x28
 80200ee:	c203      	stmia	r2!, {r0, r1}
 80200f0:	a808      	add	r0, sp, #32
 80200f2:	f7ee fe7f 	bl	800edf4 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectE>
 80200f6:	4621      	mov	r1, r4
 80200f8:	a80a      	add	r0, sp, #40	@ 0x28
 80200fa:	f7ee fea3 	bl	800ee44 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectERKS1_>
 80200fe:	f9bd 2028 	ldrsh.w	r2, [sp, #40]	@ 0x28
 8020102:	f9bd 702e 	ldrsh.w	r7, [sp, #46]	@ 0x2e
 8020106:	f9bd b02c 	ldrsh.w	fp, [sp, #44]	@ 0x2c
 802010a:	f002 0301 	and.w	r3, r2, #1
 802010e:	9303      	str	r3, [sp, #12]
 8020110:	f9bd 3024 	ldrsh.w	r3, [sp, #36]	@ 0x24
 8020114:	f003 0101 	and.w	r1, r3, #1
 8020118:	9102      	str	r1, [sp, #8]
 802011a:	9802      	ldr	r0, [sp, #8]
 802011c:	f9bd 102a 	ldrsh.w	r1, [sp, #42]	@ 0x2a
 8020120:	4403      	add	r3, r0
 8020122:	fb01 2303 	mla	r3, r1, r3, r2
 8020126:	f04f 0a02 	mov.w	sl, #2
 802012a:	fb93 f3fa 	sdiv	r3, r3, sl
 802012e:	441d      	add	r5, r3
 8020130:	f8bd 3020 	ldrh.w	r3, [sp, #32]
 8020134:	441a      	add	r2, r3
 8020136:	f8ad 2028 	strh.w	r2, [sp, #40]	@ 0x28
 802013a:	f8bd 3022 	ldrh.w	r3, [sp, #34]	@ 0x22
 802013e:	4a3f      	ldr	r2, [pc, #252]	@ (802023c <_ZN8touchgfx8LCD16bpp17DecompressorL8_L416blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x170>)
 8020140:	9205      	str	r2, [sp, #20]
 8020142:	4419      	add	r1, r3
 8020144:	6810      	ldr	r0, [r2, #0]
 8020146:	f8ad 102a 	strh.w	r1, [sp, #42]	@ 0x2a
 802014a:	6803      	ldr	r3, [r0, #0]
 802014c:	6a9b      	ldr	r3, [r3, #40]	@ 0x28
 802014e:	4798      	blx	r3
 8020150:	4b3b      	ldr	r3, [pc, #236]	@ (8020240 <_ZN8touchgfx8LCD16bpp17DecompressorL8_L416blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x174>)
 8020152:	f9bd 402a 	ldrsh.w	r4, [sp, #42]	@ 0x2a
 8020156:	8819      	ldrh	r1, [r3, #0]
 8020158:	f9bd c028 	ldrsh.w	ip, [sp, #40]	@ 0x28
 802015c:	fb01 c404 	mla	r4, r1, r4, ip
 8020160:	eb00 0444 	add.w	r4, r0, r4, lsl #1
 8020164:	434f      	muls	r7, r1
 8020166:	e9cd 3a06 	strd	r3, sl, [sp, #24]
 802016a:	eb04 0247 	add.w	r2, r4, r7, lsl #1
 802016e:	3604      	adds	r6, #4
 8020170:	9204      	str	r2, [sp, #16]
 8020172:	9b04      	ldr	r3, [sp, #16]
 8020174:	429c      	cmp	r4, r3
 8020176:	d258      	bcs.n	802022a <_ZN8touchgfx8LCD16bpp17DecompressorL8_L416blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x15e>
 8020178:	9b03      	ldr	r3, [sp, #12]
 802017a:	2b00      	cmp	r3, #0
 802017c:	d034      	beq.n	80201e8 <_ZN8touchgfx8LCD16bpp17DecompressorL8_L416blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x11c>
 802017e:	782b      	ldrb	r3, [r5, #0]
 8020180:	f003 030f 	and.w	r3, r3, #15
 8020184:	1c6f      	adds	r7, r5, #1
 8020186:	f856 1023 	ldr.w	r1, [r6, r3, lsl #2]
 802018a:	0e0b      	lsrs	r3, r1, #24
 802018c:	d006      	beq.n	802019c <_ZN8touchgfx8LCD16bpp17DecompressorL8_L416blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0xd0>
 802018e:	8822      	ldrh	r2, [r4, #0]
 8020190:	9300      	str	r3, [sp, #0]
 8020192:	4640      	mov	r0, r8
 8020194:	464b      	mov	r3, r9
 8020196:	f7ff ff43 	bl	8020020 <_ZNK8touchgfx8LCD16bpp17DecompressorL8_L418blendPixelARGB8888Emtih>
 802019a:	8020      	strh	r0, [r4, #0]
 802019c:	3402      	adds	r4, #2
 802019e:	f10b 3aff 	add.w	sl, fp, #4294967295
 80201a2:	f1ba 0f01 	cmp.w	sl, #1
 80201a6:	dd22      	ble.n	80201ee <_ZN8touchgfx8LCD16bpp17DecompressorL8_L416blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x122>
 80201a8:	783b      	ldrb	r3, [r7, #0]
 80201aa:	091b      	lsrs	r3, r3, #4
 80201ac:	f856 1023 	ldr.w	r1, [r6, r3, lsl #2]
 80201b0:	0e0b      	lsrs	r3, r1, #24
 80201b2:	d006      	beq.n	80201c2 <_ZN8touchgfx8LCD16bpp17DecompressorL8_L416blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0xf6>
 80201b4:	8822      	ldrh	r2, [r4, #0]
 80201b6:	9300      	str	r3, [sp, #0]
 80201b8:	4640      	mov	r0, r8
 80201ba:	464b      	mov	r3, r9
 80201bc:	f7ff ff30 	bl	8020020 <_ZNK8touchgfx8LCD16bpp17DecompressorL8_L418blendPixelARGB8888Emtih>
 80201c0:	8020      	strh	r0, [r4, #0]
 80201c2:	f817 3b01 	ldrb.w	r3, [r7], #1
 80201c6:	f003 030f 	and.w	r3, r3, #15
 80201ca:	f856 1023 	ldr.w	r1, [r6, r3, lsl #2]
 80201ce:	0e0b      	lsrs	r3, r1, #24
 80201d0:	d006      	beq.n	80201e0 <_ZN8touchgfx8LCD16bpp17DecompressorL8_L416blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x114>
 80201d2:	8862      	ldrh	r2, [r4, #2]
 80201d4:	9300      	str	r3, [sp, #0]
 80201d6:	4640      	mov	r0, r8
 80201d8:	464b      	mov	r3, r9
 80201da:	f7ff ff21 	bl	8020020 <_ZNK8touchgfx8LCD16bpp17DecompressorL8_L418blendPixelARGB8888Emtih>
 80201de:	8060      	strh	r0, [r4, #2]
 80201e0:	3404      	adds	r4, #4
 80201e2:	f1aa 0a02 	sub.w	sl, sl, #2
 80201e6:	e7dc      	b.n	80201a2 <_ZN8touchgfx8LCD16bpp17DecompressorL8_L416blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0xd6>
 80201e8:	462f      	mov	r7, r5
 80201ea:	46da      	mov	sl, fp
 80201ec:	e7d9      	b.n	80201a2 <_ZN8touchgfx8LCD16bpp17DecompressorL8_L416blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0xd6>
 80201ee:	d10d      	bne.n	802020c <_ZN8touchgfx8LCD16bpp17DecompressorL8_L416blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x140>
 80201f0:	783b      	ldrb	r3, [r7, #0]
 80201f2:	091b      	lsrs	r3, r3, #4
 80201f4:	f856 1023 	ldr.w	r1, [r6, r3, lsl #2]
 80201f8:	0e0b      	lsrs	r3, r1, #24
 80201fa:	d006      	beq.n	802020a <_ZN8touchgfx8LCD16bpp17DecompressorL8_L416blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x13e>
 80201fc:	8822      	ldrh	r2, [r4, #0]
 80201fe:	9300      	str	r3, [sp, #0]
 8020200:	4640      	mov	r0, r8
 8020202:	464b      	mov	r3, r9
 8020204:	f7ff ff0c 	bl	8020020 <_ZNK8touchgfx8LCD16bpp17DecompressorL8_L418blendPixelARGB8888Emtih>
 8020208:	8020      	strh	r0, [r4, #0]
 802020a:	3402      	adds	r4, #2
 802020c:	9b06      	ldr	r3, [sp, #24]
 802020e:	9a02      	ldr	r2, [sp, #8]
 8020210:	881b      	ldrh	r3, [r3, #0]
 8020212:	eba3 030b 	sub.w	r3, r3, fp
 8020216:	eb04 0443 	add.w	r4, r4, r3, lsl #1
 802021a:	f9bd 3024 	ldrsh.w	r3, [sp, #36]	@ 0x24
 802021e:	4413      	add	r3, r2
 8020220:	9a07      	ldr	r2, [sp, #28]
 8020222:	fb93 f3f2 	sdiv	r3, r3, r2
 8020226:	441d      	add	r5, r3
 8020228:	e7a3      	b.n	8020172 <_ZN8touchgfx8LCD16bpp17DecompressorL8_L416blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0xa6>
 802022a:	9b05      	ldr	r3, [sp, #20]
 802022c:	6818      	ldr	r0, [r3, #0]
 802022e:	6803      	ldr	r3, [r0, #0]
 8020230:	6adb      	ldr	r3, [r3, #44]	@ 0x2c
 8020232:	4798      	blx	r3
 8020234:	b00d      	add	sp, #52	@ 0x34
 8020236:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 802023a:	bf00      	nop
 802023c:	20002c5c 	.word	0x20002c5c
 8020240:	20002c56 	.word	0x20002c56

08020244 <_ZNK8touchgfx8LCD16bpp17DecompressorL8_L416blendPixelRGB888EPKhthh>:
 8020244:	b570      	push	{r4, r5, r6, lr}
 8020246:	1214      	asrs	r4, r2, #8
 8020248:	788d      	ldrb	r5, [r1, #2]
 802024a:	f89d 6010 	ldrb.w	r6, [sp, #16]
 802024e:	f004 04f8 	and.w	r4, r4, #248	@ 0xf8
 8020252:	ea44 1454 	orr.w	r4, r4, r4, lsr #5
 8020256:	fb15 f503 	smulbb	r5, r5, r3
 802025a:	fb04 5506 	mla	r5, r4, r6, r5
 802025e:	10d0      	asrs	r0, r2, #3
 8020260:	784c      	ldrb	r4, [r1, #1]
 8020262:	7809      	ldrb	r1, [r1, #0]
 8020264:	00d2      	lsls	r2, r2, #3
 8020266:	f000 00fc 	and.w	r0, r0, #252	@ 0xfc
 802026a:	b2d2      	uxtb	r2, r2
 802026c:	ea40 1090 	orr.w	r0, r0, r0, lsr #6
 8020270:	fb14 f403 	smulbb	r4, r4, r3
 8020274:	ea42 1252 	orr.w	r2, r2, r2, lsr #5
 8020278:	fb11 f303 	smulbb	r3, r1, r3
 802027c:	fb00 4406 	mla	r4, r0, r6, r4
 8020280:	fb02 3306 	mla	r3, r2, r6, r3
 8020284:	b2ad      	uxth	r5, r5
 8020286:	b29b      	uxth	r3, r3
 8020288:	b2a4      	uxth	r4, r4
 802028a:	1c68      	adds	r0, r5, #1
 802028c:	eb00 2515 	add.w	r5, r0, r5, lsr #8
 8020290:	1c62      	adds	r2, r4, #1
 8020292:	1c58      	adds	r0, r3, #1
 8020294:	eb00 2013 	add.w	r0, r0, r3, lsr #8
 8020298:	eb02 2414 	add.w	r4, r2, r4, lsr #8
 802029c:	f405 4578 	and.w	r5, r5, #63488	@ 0xf800
 80202a0:	f3c0 20c4 	ubfx	r0, r0, #11, #5
 80202a4:	0964      	lsrs	r4, r4, #5
 80202a6:	4328      	orrs	r0, r5
 80202a8:	f404 64fc 	and.w	r4, r4, #2016	@ 0x7e0
 80202ac:	4320      	orrs	r0, r4
 80202ae:	bd70      	pop	{r4, r5, r6, pc}

080202b0 <_ZN8touchgfx8LCD16bpp17DecompressorL8_L414blitCopyRGB888EPKhS3_RKNS_4RectES6_h>:
 80202b0:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 80202b4:	b08f      	sub	sp, #60	@ 0x3c
 80202b6:	461c      	mov	r4, r3
 80202b8:	f89d 7064 	ldrb.w	r7, [sp, #100]	@ 0x64
 80202bc:	9b18      	ldr	r3, [sp, #96]	@ 0x60
 80202be:	4682      	mov	sl, r0
 80202c0:	460e      	mov	r6, r1
 80202c2:	4615      	mov	r5, r2
 80202c4:	2f00      	cmp	r7, #0
 80202c6:	f000 8142 	beq.w	802054e <_ZN8touchgfx8LCD16bpp17DecompressorL8_L414blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x29e>
 80202ca:	6820      	ldr	r0, [r4, #0]
 80202cc:	6861      	ldr	r1, [r4, #4]
 80202ce:	aa0a      	add	r2, sp, #40	@ 0x28
 80202d0:	c203      	stmia	r2!, {r0, r1}
 80202d2:	6818      	ldr	r0, [r3, #0]
 80202d4:	6859      	ldr	r1, [r3, #4]
 80202d6:	aa0c      	add	r2, sp, #48	@ 0x30
 80202d8:	c203      	stmia	r2!, {r0, r1}
 80202da:	a80a      	add	r0, sp, #40	@ 0x28
 80202dc:	f7ee fd8a 	bl	800edf4 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectE>
 80202e0:	4621      	mov	r1, r4
 80202e2:	a80c      	add	r0, sp, #48	@ 0x30
 80202e4:	f7ee fdae 	bl	800ee44 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectERKS1_>
 80202e8:	f9bd 2030 	ldrsh.w	r2, [sp, #48]	@ 0x30
 80202ec:	f9bd b036 	ldrsh.w	fp, [sp, #54]	@ 0x36
 80202f0:	f002 0301 	and.w	r3, r2, #1
 80202f4:	9306      	str	r3, [sp, #24]
 80202f6:	f9bd 302c 	ldrsh.w	r3, [sp, #44]	@ 0x2c
 80202fa:	f003 0101 	and.w	r1, r3, #1
 80202fe:	9105      	str	r1, [sp, #20]
 8020300:	9805      	ldr	r0, [sp, #20]
 8020302:	f9bd 1032 	ldrsh.w	r1, [sp, #50]	@ 0x32
 8020306:	4403      	add	r3, r0
 8020308:	fb01 2303 	mla	r3, r1, r3, r2
 802030c:	f04f 0802 	mov.w	r8, #2
 8020310:	fb93 f3f8 	sdiv	r3, r3, r8
 8020314:	441e      	add	r6, r3
 8020316:	f8bd 3028 	ldrh.w	r3, [sp, #40]	@ 0x28
 802031a:	441a      	add	r2, r3
 802031c:	f8bd 302a 	ldrh.w	r3, [sp, #42]	@ 0x2a
 8020320:	f8ad 2030 	strh.w	r2, [sp, #48]	@ 0x30
 8020324:	4419      	add	r1, r3
 8020326:	f9bd 3034 	ldrsh.w	r3, [sp, #52]	@ 0x34
 802032a:	9303      	str	r3, [sp, #12]
 802032c:	4b89      	ldr	r3, [pc, #548]	@ (8020554 <_ZN8touchgfx8LCD16bpp17DecompressorL8_L414blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x2a4>)
 802032e:	f8ad 1032 	strh.w	r1, [sp, #50]	@ 0x32
 8020332:	6818      	ldr	r0, [r3, #0]
 8020334:	6803      	ldr	r3, [r0, #0]
 8020336:	6a9b      	ldr	r3, [r3, #40]	@ 0x28
 8020338:	4798      	blx	r3
 802033a:	4a87      	ldr	r2, [pc, #540]	@ (8020558 <_ZN8touchgfx8LCD16bpp17DecompressorL8_L414blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x2a8>)
 802033c:	f9bd 4032 	ldrsh.w	r4, [sp, #50]	@ 0x32
 8020340:	8813      	ldrh	r3, [r2, #0]
 8020342:	f9bd 9030 	ldrsh.w	r9, [sp, #48]	@ 0x30
 8020346:	2fff      	cmp	r7, #255	@ 0xff
 8020348:	fb03 9404 	mla	r4, r3, r4, r9
 802034c:	eb00 0444 	add.w	r4, r0, r4, lsl #1
 8020350:	f105 0504 	add.w	r5, r5, #4
 8020354:	4694      	mov	ip, r2
 8020356:	fb03 f30b 	mul.w	r3, r3, fp
 802035a:	d071      	beq.n	8020440 <_ZN8touchgfx8LCD16bpp17DecompressorL8_L414blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x190>
 802035c:	eb04 0343 	add.w	r3, r4, r3, lsl #1
 8020360:	43f9      	mvns	r1, r7
 8020362:	e9cd 3207 	strd	r3, r2, [sp, #28]
 8020366:	b2c9      	uxtb	r1, r1
 8020368:	9104      	str	r1, [sp, #16]
 802036a:	f8cd 8024 	str.w	r8, [sp, #36]	@ 0x24
 802036e:	9b07      	ldr	r3, [sp, #28]
 8020370:	42a3      	cmp	r3, r4
 8020372:	f240 80e7 	bls.w	8020544 <_ZN8touchgfx8LCD16bpp17DecompressorL8_L414blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x294>
 8020376:	9b06      	ldr	r3, [sp, #24]
 8020378:	2b00      	cmp	r3, #0
 802037a:	d03d      	beq.n	80203f8 <_ZN8touchgfx8LCD16bpp17DecompressorL8_L414blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x148>
 802037c:	7831      	ldrb	r1, [r6, #0]
 802037e:	9b04      	ldr	r3, [sp, #16]
 8020380:	8822      	ldrh	r2, [r4, #0]
 8020382:	9300      	str	r3, [sp, #0]
 8020384:	f001 010f 	and.w	r1, r1, #15
 8020388:	eb01 0141 	add.w	r1, r1, r1, lsl #1
 802038c:	463b      	mov	r3, r7
 802038e:	4429      	add	r1, r5
 8020390:	4650      	mov	r0, sl
 8020392:	f7ff ff57 	bl	8020244 <_ZNK8touchgfx8LCD16bpp17DecompressorL8_L416blendPixelRGB888EPKhthh>
 8020396:	9b03      	ldr	r3, [sp, #12]
 8020398:	f824 0b02 	strh.w	r0, [r4], #2
 802039c:	f106 0801 	add.w	r8, r6, #1
 80203a0:	f103 3bff 	add.w	fp, r3, #4294967295
 80203a4:	f1bb 0f01 	cmp.w	fp, #1
 80203a8:	46a1      	mov	r9, r4
 80203aa:	f104 0404 	add.w	r4, r4, #4
 80203ae:	dd27      	ble.n	8020400 <_ZN8touchgfx8LCD16bpp17DecompressorL8_L414blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x150>
 80203b0:	f898 1000 	ldrb.w	r1, [r8]
 80203b4:	9b04      	ldr	r3, [sp, #16]
 80203b6:	f834 2c04 	ldrh.w	r2, [r4, #-4]
 80203ba:	9300      	str	r3, [sp, #0]
 80203bc:	0909      	lsrs	r1, r1, #4
 80203be:	eb01 0141 	add.w	r1, r1, r1, lsl #1
 80203c2:	463b      	mov	r3, r7
 80203c4:	4429      	add	r1, r5
 80203c6:	4650      	mov	r0, sl
 80203c8:	f7ff ff3c 	bl	8020244 <_ZNK8touchgfx8LCD16bpp17DecompressorL8_L416blendPixelRGB888EPKhthh>
 80203cc:	f824 0c04 	strh.w	r0, [r4, #-4]
 80203d0:	f818 1b01 	ldrb.w	r1, [r8], #1
 80203d4:	9b04      	ldr	r3, [sp, #16]
 80203d6:	f834 2c02 	ldrh.w	r2, [r4, #-2]
 80203da:	9300      	str	r3, [sp, #0]
 80203dc:	f001 010f 	and.w	r1, r1, #15
 80203e0:	eb01 0141 	add.w	r1, r1, r1, lsl #1
 80203e4:	463b      	mov	r3, r7
 80203e6:	4429      	add	r1, r5
 80203e8:	4650      	mov	r0, sl
 80203ea:	f7ff ff2b 	bl	8020244 <_ZNK8touchgfx8LCD16bpp17DecompressorL8_L416blendPixelRGB888EPKhthh>
 80203ee:	f1ab 0b02 	sub.w	fp, fp, #2
 80203f2:	f824 0c02 	strh.w	r0, [r4, #-2]
 80203f6:	e7d5      	b.n	80203a4 <_ZN8touchgfx8LCD16bpp17DecompressorL8_L414blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0xf4>
 80203f8:	46b0      	mov	r8, r6
 80203fa:	f8dd b00c 	ldr.w	fp, [sp, #12]
 80203fe:	e7d1      	b.n	80203a4 <_ZN8touchgfx8LCD16bpp17DecompressorL8_L414blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0xf4>
 8020400:	d10f      	bne.n	8020422 <_ZN8touchgfx8LCD16bpp17DecompressorL8_L414blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x172>
 8020402:	f898 1000 	ldrb.w	r1, [r8]
 8020406:	9b04      	ldr	r3, [sp, #16]
 8020408:	f8b9 2000 	ldrh.w	r2, [r9]
 802040c:	9300      	str	r3, [sp, #0]
 802040e:	0909      	lsrs	r1, r1, #4
 8020410:	eb01 0141 	add.w	r1, r1, r1, lsl #1
 8020414:	463b      	mov	r3, r7
 8020416:	4429      	add	r1, r5
 8020418:	4650      	mov	r0, sl
 802041a:	f7ff ff13 	bl	8020244 <_ZNK8touchgfx8LCD16bpp17DecompressorL8_L416blendPixelRGB888EPKhthh>
 802041e:	f829 0b02 	strh.w	r0, [r9], #2
 8020422:	9b08      	ldr	r3, [sp, #32]
 8020424:	9a05      	ldr	r2, [sp, #20]
 8020426:	881c      	ldrh	r4, [r3, #0]
 8020428:	9b03      	ldr	r3, [sp, #12]
 802042a:	1ae4      	subs	r4, r4, r3
 802042c:	f9bd 302c 	ldrsh.w	r3, [sp, #44]	@ 0x2c
 8020430:	eb09 0444 	add.w	r4, r9, r4, lsl #1
 8020434:	4413      	add	r3, r2
 8020436:	9a09      	ldr	r2, [sp, #36]	@ 0x24
 8020438:	fb93 f3f2 	sdiv	r3, r3, r2
 802043c:	441e      	add	r6, r3
 802043e:	e796      	b.n	802036e <_ZN8touchgfx8LCD16bpp17DecompressorL8_L414blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0xbe>
 8020440:	4f46      	ldr	r7, [pc, #280]	@ (802055c <_ZN8touchgfx8LCD16bpp17DecompressorL8_L414blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x2ac>)
 8020442:	eb04 0343 	add.w	r3, r4, r3, lsl #1
 8020446:	42a3      	cmp	r3, r4
 8020448:	d97c      	bls.n	8020544 <_ZN8touchgfx8LCD16bpp17DecompressorL8_L414blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x294>
 802044a:	9a06      	ldr	r2, [sp, #24]
 802044c:	2a00      	cmp	r2, #0
 802044e:	d054      	beq.n	80204fa <_ZN8touchgfx8LCD16bpp17DecompressorL8_L414blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x24a>
 8020450:	7830      	ldrb	r0, [r6, #0]
 8020452:	f000 000f 	and.w	r0, r0, #15
 8020456:	eb00 0040 	add.w	r0, r0, r0, lsl #1
 802045a:	eb05 0e00 	add.w	lr, r5, r0
 802045e:	5c28      	ldrb	r0, [r5, r0]
 8020460:	f89e 2002 	ldrb.w	r2, [lr, #2]
 8020464:	f89e e001 	ldrb.w	lr, [lr, #1]
 8020468:	ea4f 0ece 	mov.w	lr, lr, lsl #3
 802046c:	f40e 6efc 	and.w	lr, lr, #2016	@ 0x7e0
 8020470:	ea07 2202 	and.w	r2, r7, r2, lsl #8
 8020474:	ea42 020e 	orr.w	r2, r2, lr
 8020478:	ea42 02d0 	orr.w	r2, r2, r0, lsr #3
 802047c:	f824 2b02 	strh.w	r2, [r4], #2
 8020480:	9a03      	ldr	r2, [sp, #12]
 8020482:	1c71      	adds	r1, r6, #1
 8020484:	f102 3eff 	add.w	lr, r2, #4294967295
 8020488:	f1be 0f01 	cmp.w	lr, #1
 802048c:	4620      	mov	r0, r4
 802048e:	f104 0404 	add.w	r4, r4, #4
 8020492:	dd36      	ble.n	8020502 <_ZN8touchgfx8LCD16bpp17DecompressorL8_L414blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x252>
 8020494:	7808      	ldrb	r0, [r1, #0]
 8020496:	0900      	lsrs	r0, r0, #4
 8020498:	eb00 0040 	add.w	r0, r0, r0, lsl #1
 802049c:	eb05 0a00 	add.w	sl, r5, r0
 80204a0:	f1ae 0e02 	sub.w	lr, lr, #2
 80204a4:	f89a 2001 	ldrb.w	r2, [sl, #1]
 80204a8:	f89a 9002 	ldrb.w	r9, [sl, #2]
 80204ac:	00d2      	lsls	r2, r2, #3
 80204ae:	ea07 2909 	and.w	r9, r7, r9, lsl #8
 80204b2:	f402 62fc 	and.w	r2, r2, #2016	@ 0x7e0
 80204b6:	ea49 0202 	orr.w	r2, r9, r2
 80204ba:	f815 9000 	ldrb.w	r9, [r5, r0]
 80204be:	ea42 02d9 	orr.w	r2, r2, r9, lsr #3
 80204c2:	f824 2c04 	strh.w	r2, [r4, #-4]
 80204c6:	f811 0b01 	ldrb.w	r0, [r1], #1
 80204ca:	f000 000f 	and.w	r0, r0, #15
 80204ce:	eb00 0040 	add.w	r0, r0, r0, lsl #1
 80204d2:	eb05 0a00 	add.w	sl, r5, r0
 80204d6:	f89a 2001 	ldrb.w	r2, [sl, #1]
 80204da:	f89a 9002 	ldrb.w	r9, [sl, #2]
 80204de:	00d2      	lsls	r2, r2, #3
 80204e0:	ea07 2909 	and.w	r9, r7, r9, lsl #8
 80204e4:	f402 62fc 	and.w	r2, r2, #2016	@ 0x7e0
 80204e8:	ea49 0202 	orr.w	r2, r9, r2
 80204ec:	f815 9000 	ldrb.w	r9, [r5, r0]
 80204f0:	ea42 02d9 	orr.w	r2, r2, r9, lsr #3
 80204f4:	f824 2c02 	strh.w	r2, [r4, #-2]
 80204f8:	e7c6      	b.n	8020488 <_ZN8touchgfx8LCD16bpp17DecompressorL8_L414blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x1d8>
 80204fa:	4631      	mov	r1, r6
 80204fc:	f8dd e00c 	ldr.w	lr, [sp, #12]
 8020500:	e7c2      	b.n	8020488 <_ZN8touchgfx8LCD16bpp17DecompressorL8_L414blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x1d8>
 8020502:	d111      	bne.n	8020528 <_ZN8touchgfx8LCD16bpp17DecompressorL8_L414blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x278>
 8020504:	7809      	ldrb	r1, [r1, #0]
 8020506:	0909      	lsrs	r1, r1, #4
 8020508:	eb01 0141 	add.w	r1, r1, r1, lsl #1
 802050c:	186c      	adds	r4, r5, r1
 802050e:	5c69      	ldrb	r1, [r5, r1]
 8020510:	78a2      	ldrb	r2, [r4, #2]
 8020512:	7864      	ldrb	r4, [r4, #1]
 8020514:	00e4      	lsls	r4, r4, #3
 8020516:	ea07 2202 	and.w	r2, r7, r2, lsl #8
 802051a:	f404 64fc 	and.w	r4, r4, #2016	@ 0x7e0
 802051e:	4322      	orrs	r2, r4
 8020520:	ea42 02d1 	orr.w	r2, r2, r1, lsr #3
 8020524:	f820 2b02 	strh.w	r2, [r0], #2
 8020528:	9a03      	ldr	r2, [sp, #12]
 802052a:	f8bc 4000 	ldrh.w	r4, [ip]
 802052e:	9905      	ldr	r1, [sp, #20]
 8020530:	1aa4      	subs	r4, r4, r2
 8020532:	f9bd 202c 	ldrsh.w	r2, [sp, #44]	@ 0x2c
 8020536:	eb00 0444 	add.w	r4, r0, r4, lsl #1
 802053a:	440a      	add	r2, r1
 802053c:	fb92 f2f8 	sdiv	r2, r2, r8
 8020540:	4416      	add	r6, r2
 8020542:	e780      	b.n	8020446 <_ZN8touchgfx8LCD16bpp17DecompressorL8_L414blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x196>
 8020544:	4b03      	ldr	r3, [pc, #12]	@ (8020554 <_ZN8touchgfx8LCD16bpp17DecompressorL8_L414blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x2a4>)
 8020546:	6818      	ldr	r0, [r3, #0]
 8020548:	6803      	ldr	r3, [r0, #0]
 802054a:	6adb      	ldr	r3, [r3, #44]	@ 0x2c
 802054c:	4798      	blx	r3
 802054e:	b00f      	add	sp, #60	@ 0x3c
 8020550:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 8020554:	20002c5c 	.word	0x20002c5c
 8020558:	20002c56 	.word	0x20002c56
 802055c:	fffff800 	.word	0xfffff800

08020560 <CRC_Lock>:
 8020560:	b530      	push	{r4, r5, lr}
 8020562:	4a2d      	ldr	r2, [pc, #180]	@ (8020618 <CRC_Lock+0xb8>)
 8020564:	6813      	ldr	r3, [r2, #0]
 8020566:	f023 0301 	bic.w	r3, r3, #1
 802056a:	6013      	str	r3, [r2, #0]
 802056c:	4b2b      	ldr	r3, [pc, #172]	@ (802061c <CRC_Lock+0xbc>)
 802056e:	681c      	ldr	r4, [r3, #0]
 8020570:	f64f 72f0 	movw	r2, #65520	@ 0xfff0
 8020574:	4014      	ands	r4, r2
 8020576:	f24c 2540 	movw	r5, #49728	@ 0xc240
 802057a:	42ac      	cmp	r4, r5
 802057c:	d005      	beq.n	802058a <CRC_Lock+0x2a>
 802057e:	681c      	ldr	r4, [r3, #0]
 8020580:	f24c 2570 	movw	r5, #49776	@ 0xc270
 8020584:	4014      	ands	r4, r2
 8020586:	42ac      	cmp	r4, r5
 8020588:	d125      	bne.n	80205d6 <CRC_Lock+0x76>
 802058a:	4b25      	ldr	r3, [pc, #148]	@ (8020620 <CRC_Lock+0xc0>)
 802058c:	681b      	ldr	r3, [r3, #0]
 802058e:	2b00      	cmp	r3, #0
 8020590:	d139      	bne.n	8020606 <CRC_Lock+0xa6>
 8020592:	4b24      	ldr	r3, [pc, #144]	@ (8020624 <CRC_Lock+0xc4>)
 8020594:	681a      	ldr	r2, [r3, #0]
 8020596:	f3c2 020b 	ubfx	r2, r2, #0, #12
 802059a:	f5b2 6f8a 	cmp.w	r2, #1104	@ 0x450
 802059e:	d00d      	beq.n	80205bc <CRC_Lock+0x5c>
 80205a0:	681a      	ldr	r2, [r3, #0]
 80205a2:	f240 4483 	movw	r4, #1155	@ 0x483
 80205a6:	f3c2 020b 	ubfx	r2, r2, #0, #12
 80205aa:	42a2      	cmp	r2, r4
 80205ac:	d006      	beq.n	80205bc <CRC_Lock+0x5c>
 80205ae:	681b      	ldr	r3, [r3, #0]
 80205b0:	f240 4285 	movw	r2, #1157	@ 0x485
 80205b4:	f3c3 030b 	ubfx	r3, r3, #0, #12
 80205b8:	4293      	cmp	r3, r2
 80205ba:	d124      	bne.n	8020606 <CRC_Lock+0xa6>
 80205bc:	4b1a      	ldr	r3, [pc, #104]	@ (8020628 <CRC_Lock+0xc8>)
 80205be:	2201      	movs	r2, #1
 80205c0:	601a      	str	r2, [r3, #0]
 80205c2:	681a      	ldr	r2, [r3, #0]
 80205c4:	2a00      	cmp	r2, #0
 80205c6:	d1fc      	bne.n	80205c2 <CRC_Lock+0x62>
 80205c8:	4b18      	ldr	r3, [pc, #96]	@ (802062c <CRC_Lock+0xcc>)
 80205ca:	6018      	str	r0, [r3, #0]
 80205cc:	6818      	ldr	r0, [r3, #0]
 80205ce:	1a43      	subs	r3, r0, r1
 80205d0:	4258      	negs	r0, r3
 80205d2:	4158      	adcs	r0, r3
 80205d4:	e00e      	b.n	80205f4 <CRC_Lock+0x94>
 80205d6:	681b      	ldr	r3, [r3, #0]
 80205d8:	4013      	ands	r3, r2
 80205da:	f24d 2220 	movw	r2, #53792	@ 0xd220
 80205de:	4293      	cmp	r3, r2
 80205e0:	d111      	bne.n	8020606 <CRC_Lock+0xa6>
 80205e2:	4b13      	ldr	r3, [pc, #76]	@ (8020630 <CRC_Lock+0xd0>)
 80205e4:	681b      	ldr	r3, [r3, #0]
 80205e6:	f240 4286 	movw	r2, #1158	@ 0x486
 80205ea:	f3c3 030b 	ubfx	r3, r3, #0, #12
 80205ee:	4293      	cmp	r3, r2
 80205f0:	d001      	beq.n	80205f6 <CRC_Lock+0x96>
 80205f2:	2000      	movs	r0, #0
 80205f4:	bd30      	pop	{r4, r5, pc}
 80205f6:	4b0f      	ldr	r3, [pc, #60]	@ (8020634 <CRC_Lock+0xd4>)
 80205f8:	2201      	movs	r2, #1
 80205fa:	601a      	str	r2, [r3, #0]
 80205fc:	681a      	ldr	r2, [r3, #0]
 80205fe:	2a00      	cmp	r2, #0
 8020600:	d1fc      	bne.n	80205fc <CRC_Lock+0x9c>
 8020602:	4b0d      	ldr	r3, [pc, #52]	@ (8020638 <CRC_Lock+0xd8>)
 8020604:	e7e1      	b.n	80205ca <CRC_Lock+0x6a>
 8020606:	4b0d      	ldr	r3, [pc, #52]	@ (802063c <CRC_Lock+0xdc>)
 8020608:	2201      	movs	r2, #1
 802060a:	601a      	str	r2, [r3, #0]
 802060c:	681a      	ldr	r2, [r3, #0]
 802060e:	2a00      	cmp	r2, #0
 8020610:	d1fc      	bne.n	802060c <CRC_Lock+0xac>
 8020612:	4b0b      	ldr	r3, [pc, #44]	@ (8020640 <CRC_Lock+0xe0>)
 8020614:	e7d9      	b.n	80205ca <CRC_Lock+0x6a>
 8020616:	bf00      	nop
 8020618:	e0002000 	.word	0xe0002000
 802061c:	e000ed00 	.word	0xe000ed00
 8020620:	e0042000 	.word	0xe0042000
 8020624:	5c001000 	.word	0x5c001000
 8020628:	58024c08 	.word	0x58024c08
 802062c:	58024c00 	.word	0x58024c00
 8020630:	46008ff0 	.word	0x46008ff0
 8020634:	46024c08 	.word	0x46024c08
 8020638:	46024c00 	.word	0x46024c00
 802063c:	40023008 	.word	0x40023008
 8020640:	40023000 	.word	0x40023000

08020644 <_ZN8touchgfx8Gestures21registerEventListenerERNS_15UIEventListenerE>:
 8020644:	6101      	str	r1, [r0, #16]
 8020646:	4770      	bx	lr

08020648 <_ZN8touchgfx8Gestures4tickEv>:
 8020648:	7b83      	ldrb	r3, [r0, #14]
 802064a:	b14b      	cbz	r3, 8020660 <_ZN8touchgfx8Gestures4tickEv+0x18>
 802064c:	8903      	ldrh	r3, [r0, #8]
 802064e:	3301      	adds	r3, #1
 8020650:	b29b      	uxth	r3, r3
 8020652:	2b07      	cmp	r3, #7
 8020654:	8103      	strh	r3, [r0, #8]
 8020656:	bf81      	itttt	hi
 8020658:	2300      	movhi	r3, #0
 802065a:	8143      	strhhi	r3, [r0, #10]
 802065c:	8183      	strhhi	r3, [r0, #12]
 802065e:	7383      	strbhi	r3, [r0, #14]
 8020660:	4770      	bx	lr
	...

08020664 <_ZN8touchgfx8Gestures17registerDragEventEtttt>:
 8020664:	e92d 41ff 	stmdb	sp!, {r0, r1, r2, r3, r4, r5, r6, r7, r8, lr}
 8020668:	4698      	mov	r8, r3
 802066a:	8883      	ldrh	r3, [r0, #4]
 802066c:	f8ad 3006 	strh.w	r3, [sp, #6]
 8020670:	eba8 0303 	sub.w	r3, r8, r3
 8020674:	b21b      	sxth	r3, r3
 8020676:	4604      	mov	r4, r0
 8020678:	2b00      	cmp	r3, #0
 802067a:	4617      	mov	r7, r2
 802067c:	4a18      	ldr	r2, [pc, #96]	@ (80206e0 <_ZN8touchgfx8Gestures17registerDragEventEtttt+0x7c>)
 802067e:	9200      	str	r2, [sp, #0]
 8020680:	bfb8      	it	lt
 8020682:	425b      	neglt	r3, r3
 8020684:	8aa2      	ldrh	r2, [r4, #20]
 8020686:	f8bd 5028 	ldrh.w	r5, [sp, #40]	@ 0x28
 802068a:	f8ad 800a 	strh.w	r8, [sp, #10]
 802068e:	b21b      	sxth	r3, r3
 8020690:	460e      	mov	r6, r1
 8020692:	4293      	cmp	r3, r2
 8020694:	88c1      	ldrh	r1, [r0, #6]
 8020696:	f8ad 1008 	strh.w	r1, [sp, #8]
 802069a:	f04f 0000 	mov.w	r0, #0
 802069e:	f88d 0004 	strb.w	r0, [sp, #4]
 80206a2:	f8ad 500c 	strh.w	r5, [sp, #12]
 80206a6:	dc07      	bgt.n	80206b8 <_ZN8touchgfx8Gestures17registerDragEventEtttt+0x54>
 80206a8:	1a69      	subs	r1, r5, r1
 80206aa:	b209      	sxth	r1, r1
 80206ac:	2900      	cmp	r1, #0
 80206ae:	bfb8      	it	lt
 80206b0:	4249      	neglt	r1, r1
 80206b2:	b209      	sxth	r1, r1
 80206b4:	428a      	cmp	r2, r1
 80206b6:	da10      	bge.n	80206da <_ZN8touchgfx8Gestures17registerDragEventEtttt+0x76>
 80206b8:	6920      	ldr	r0, [r4, #16]
 80206ba:	6803      	ldr	r3, [r0, #0]
 80206bc:	4669      	mov	r1, sp
 80206be:	685b      	ldr	r3, [r3, #4]
 80206c0:	4798      	blx	r3
 80206c2:	eba8 0606 	sub.w	r6, r8, r6
 80206c6:	2300      	movs	r3, #0
 80206c8:	1bef      	subs	r7, r5, r7
 80206ca:	2001      	movs	r0, #1
 80206cc:	8123      	strh	r3, [r4, #8]
 80206ce:	8166      	strh	r6, [r4, #10]
 80206d0:	81a7      	strh	r7, [r4, #12]
 80206d2:	f8a4 8004 	strh.w	r8, [r4, #4]
 80206d6:	80e5      	strh	r5, [r4, #6]
 80206d8:	73a0      	strb	r0, [r4, #14]
 80206da:	b004      	add	sp, #16
 80206dc:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
 80206e0:	08023858 	.word	0x08023858

080206e4 <_ZN8touchgfx8Gestures18registerClickEventENS_10ClickEvent14ClickEventTypeEtt>:
 80206e4:	b5f0      	push	{r4, r5, r6, r7, lr}
 80206e6:	461e      	mov	r6, r3
 80206e8:	1e4b      	subs	r3, r1, #1
 80206ea:	2b01      	cmp	r3, #1
 80206ec:	b085      	sub	sp, #20
 80206ee:	4604      	mov	r4, r0
 80206f0:	460d      	mov	r5, r1
 80206f2:	4617      	mov	r7, r2
 80206f4:	d84b      	bhi.n	802078e <_ZN8touchgfx8Gestures18registerClickEventENS_10ClickEvent14ClickEventTypeEtt+0xaa>
 80206f6:	f9b0 200a 	ldrsh.w	r2, [r0, #10]
 80206fa:	1cd3      	adds	r3, r2, #3
 80206fc:	b29b      	uxth	r3, r3
 80206fe:	2b06      	cmp	r3, #6
 8020700:	d916      	bls.n	8020730 <_ZN8touchgfx8Gestures18registerClickEventENS_10ClickEvent14ClickEventTypeEtt+0x4c>
 8020702:	f8df c0a0 	ldr.w	ip, [pc, #160]	@ 80207a4 <_ZN8touchgfx8Gestures18registerClickEventENS_10ClickEvent14ClickEventTypeEtt+0xc0>
 8020706:	f8cd c004 	str.w	ip, [sp, #4]
 802070a:	f9b4 1004 	ldrsh.w	r1, [r4, #4]
 802070e:	f9b4 3006 	ldrsh.w	r3, [r4, #6]
 8020712:	6900      	ldr	r0, [r0, #16]
 8020714:	f8ad 100c 	strh.w	r1, [sp, #12]
 8020718:	f04f 0c00 	mov.w	ip, #0
 802071c:	f88d c008 	strb.w	ip, [sp, #8]
 8020720:	f8ad 200a 	strh.w	r2, [sp, #10]
 8020724:	f8ad 300e 	strh.w	r3, [sp, #14]
 8020728:	6803      	ldr	r3, [r0, #0]
 802072a:	a901      	add	r1, sp, #4
 802072c:	689b      	ldr	r3, [r3, #8]
 802072e:	4798      	blx	r3
 8020730:	f9b4 200c 	ldrsh.w	r2, [r4, #12]
 8020734:	1cd3      	adds	r3, r2, #3
 8020736:	b29b      	uxth	r3, r3
 8020738:	2b06      	cmp	r3, #6
 802073a:	d916      	bls.n	802076a <_ZN8touchgfx8Gestures18registerClickEventENS_10ClickEvent14ClickEventTypeEtt+0x86>
 802073c:	f8df c064 	ldr.w	ip, [pc, #100]	@ 80207a4 <_ZN8touchgfx8Gestures18registerClickEventENS_10ClickEvent14ClickEventTypeEtt+0xc0>
 8020740:	f8cd c004 	str.w	ip, [sp, #4]
 8020744:	f9b4 1004 	ldrsh.w	r1, [r4, #4]
 8020748:	f9b4 3006 	ldrsh.w	r3, [r4, #6]
 802074c:	6920      	ldr	r0, [r4, #16]
 802074e:	f8ad 100c 	strh.w	r1, [sp, #12]
 8020752:	f04f 0c01 	mov.w	ip, #1
 8020756:	f88d c008 	strb.w	ip, [sp, #8]
 802075a:	f8ad 200a 	strh.w	r2, [sp, #10]
 802075e:	f8ad 300e 	strh.w	r3, [sp, #14]
 8020762:	6803      	ldr	r3, [r0, #0]
 8020764:	a901      	add	r1, sp, #4
 8020766:	689b      	ldr	r3, [r3, #8]
 8020768:	4798      	blx	r3
 802076a:	4b0d      	ldr	r3, [pc, #52]	@ (80207a0 <_ZN8touchgfx8Gestures18registerClickEventENS_10ClickEvent14ClickEventTypeEtt+0xbc>)
 802076c:	9301      	str	r3, [sp, #4]
 802076e:	6920      	ldr	r0, [r4, #16]
 8020770:	f88d 5008 	strb.w	r5, [sp, #8]
 8020774:	2300      	movs	r3, #0
 8020776:	f8ad 700a 	strh.w	r7, [sp, #10]
 802077a:	f8ad 600c 	strh.w	r6, [sp, #12]
 802077e:	f8ad 300e 	strh.w	r3, [sp, #14]
 8020782:	6803      	ldr	r3, [r0, #0]
 8020784:	a901      	add	r1, sp, #4
 8020786:	681b      	ldr	r3, [r3, #0]
 8020788:	4798      	blx	r3
 802078a:	b005      	add	sp, #20
 802078c:	bdf0      	pop	{r4, r5, r6, r7, pc}
 802078e:	2900      	cmp	r1, #0
 8020790:	d1eb      	bne.n	802076a <_ZN8touchgfx8Gestures18registerClickEventENS_10ClickEvent14ClickEventTypeEtt+0x86>
 8020792:	80a2      	strh	r2, [r4, #4]
 8020794:	80c6      	strh	r6, [r0, #6]
 8020796:	60a1      	str	r1, [r4, #8]
 8020798:	81a1      	strh	r1, [r4, #12]
 802079a:	73a1      	strb	r1, [r4, #14]
 802079c:	e7e5      	b.n	802076a <_ZN8touchgfx8Gestures18registerClickEventENS_10ClickEvent14ClickEventTypeEtt+0x86>
 802079e:	bf00      	nop
 80207a0:	08023844 	.word	0x08023844
 80207a4:	0802386c 	.word	0x0802386c

080207a8 <__aeabi_atexit>:
 80207a8:	460b      	mov	r3, r1
 80207aa:	4601      	mov	r1, r0
 80207ac:	4618      	mov	r0, r3
 80207ae:	f000 b911 	b.w	80209d4 <__cxa_atexit>

080207b2 <_ZdlPvj>:
 80207b2:	f000 b812 	b.w	80207da <_ZdlPv>

080207b6 <__cxa_guard_acquire>:
 80207b6:	6802      	ldr	r2, [r0, #0]
 80207b8:	07d2      	lsls	r2, r2, #31
 80207ba:	4603      	mov	r3, r0
 80207bc:	d405      	bmi.n	80207ca <__cxa_guard_acquire+0x14>
 80207be:	7842      	ldrb	r2, [r0, #1]
 80207c0:	b102      	cbz	r2, 80207c4 <__cxa_guard_acquire+0xe>
 80207c2:	deff      	udf	#255	@ 0xff
 80207c4:	2001      	movs	r0, #1
 80207c6:	7058      	strb	r0, [r3, #1]
 80207c8:	4770      	bx	lr
 80207ca:	2000      	movs	r0, #0
 80207cc:	4770      	bx	lr

080207ce <__cxa_guard_release>:
 80207ce:	2301      	movs	r3, #1
 80207d0:	6003      	str	r3, [r0, #0]
 80207d2:	4770      	bx	lr

080207d4 <__cxa_pure_virtual>:
 80207d4:	b508      	push	{r3, lr}
 80207d6:	f000 f80f 	bl	80207f8 <_ZSt9terminatev>

080207da <_ZdlPv>:
 80207da:	f000 b845 	b.w	8020868 <free>

080207de <_ZN10__cxxabiv111__terminateEPFvvE>:
 80207de:	b508      	push	{r3, lr}
 80207e0:	4780      	blx	r0
 80207e2:	f000 f80e 	bl	8020802 <abort>
	...

080207e8 <_ZSt13get_terminatev>:
 80207e8:	4b02      	ldr	r3, [pc, #8]	@ (80207f4 <_ZSt13get_terminatev+0xc>)
 80207ea:	6818      	ldr	r0, [r3, #0]
 80207ec:	f3bf 8f5b 	dmb	ish
 80207f0:	4770      	bx	lr
 80207f2:	bf00      	nop
 80207f4:	200000a0 	.word	0x200000a0

080207f8 <_ZSt9terminatev>:
 80207f8:	b508      	push	{r3, lr}
 80207fa:	f7ff fff5 	bl	80207e8 <_ZSt13get_terminatev>
 80207fe:	f7ff ffee 	bl	80207de <_ZN10__cxxabiv111__terminateEPFvvE>

08020802 <abort>:
 8020802:	b508      	push	{r3, lr}
 8020804:	2006      	movs	r0, #6
 8020806:	f000 fa3b 	bl	8020c80 <raise>
 802080a:	2001      	movs	r0, #1
 802080c:	f7e0 fcf6 	bl	80011fc <_exit>

08020810 <__assert_func>:
 8020810:	b51f      	push	{r0, r1, r2, r3, r4, lr}
 8020812:	4614      	mov	r4, r2
 8020814:	461a      	mov	r2, r3
 8020816:	4b09      	ldr	r3, [pc, #36]	@ (802083c <__assert_func+0x2c>)
 8020818:	681b      	ldr	r3, [r3, #0]
 802081a:	4605      	mov	r5, r0
 802081c:	68d8      	ldr	r0, [r3, #12]
 802081e:	b954      	cbnz	r4, 8020836 <__assert_func+0x26>
 8020820:	4b07      	ldr	r3, [pc, #28]	@ (8020840 <__assert_func+0x30>)
 8020822:	461c      	mov	r4, r3
 8020824:	e9cd 3401 	strd	r3, r4, [sp, #4]
 8020828:	9100      	str	r1, [sp, #0]
 802082a:	462b      	mov	r3, r5
 802082c:	4905      	ldr	r1, [pc, #20]	@ (8020844 <__assert_func+0x34>)
 802082e:	f000 f983 	bl	8020b38 <fiprintf>
 8020832:	f7ff ffe6 	bl	8020802 <abort>
 8020836:	4b04      	ldr	r3, [pc, #16]	@ (8020848 <__assert_func+0x38>)
 8020838:	e7f4      	b.n	8020824 <__assert_func+0x14>
 802083a:	bf00      	nop
 802083c:	200000b0 	.word	0x200000b0
 8020840:	08023bdb 	.word	0x08023bdb
 8020844:	08023bad 	.word	0x08023bad
 8020848:	08023ba0 	.word	0x08023ba0

0802084c <atexit>:
 802084c:	2300      	movs	r3, #0
 802084e:	4601      	mov	r1, r0
 8020850:	461a      	mov	r2, r3
 8020852:	4618      	mov	r0, r3
 8020854:	f000 bac2 	b.w	8020ddc <__register_exitproc>

08020858 <malloc>:
 8020858:	4b02      	ldr	r3, [pc, #8]	@ (8020864 <malloc+0xc>)
 802085a:	4601      	mov	r1, r0
 802085c:	6818      	ldr	r0, [r3, #0]
 802085e:	f000 b82d 	b.w	80208bc <_malloc_r>
 8020862:	bf00      	nop
 8020864:	200000b0 	.word	0x200000b0

08020868 <free>:
 8020868:	4b02      	ldr	r3, [pc, #8]	@ (8020874 <free+0xc>)
 802086a:	4601      	mov	r1, r0
 802086c:	6818      	ldr	r0, [r3, #0]
 802086e:	f000 bb11 	b.w	8020e94 <_free_r>
 8020872:	bf00      	nop
 8020874:	200000b0 	.word	0x200000b0

08020878 <sbrk_aligned>:
 8020878:	b570      	push	{r4, r5, r6, lr}
 802087a:	4e0f      	ldr	r6, [pc, #60]	@ (80208b8 <sbrk_aligned+0x40>)
 802087c:	460c      	mov	r4, r1
 802087e:	6831      	ldr	r1, [r6, #0]
 8020880:	4605      	mov	r5, r0
 8020882:	b911      	cbnz	r1, 802088a <sbrk_aligned+0x12>
 8020884:	f000 fa4c 	bl	8020d20 <_sbrk_r>
 8020888:	6030      	str	r0, [r6, #0]
 802088a:	4621      	mov	r1, r4
 802088c:	4628      	mov	r0, r5
 802088e:	f000 fa47 	bl	8020d20 <_sbrk_r>
 8020892:	1c43      	adds	r3, r0, #1
 8020894:	d103      	bne.n	802089e <sbrk_aligned+0x26>
 8020896:	f04f 34ff 	mov.w	r4, #4294967295
 802089a:	4620      	mov	r0, r4
 802089c:	bd70      	pop	{r4, r5, r6, pc}
 802089e:	1cc4      	adds	r4, r0, #3
 80208a0:	f024 0403 	bic.w	r4, r4, #3
 80208a4:	42a0      	cmp	r0, r4
 80208a6:	d0f8      	beq.n	802089a <sbrk_aligned+0x22>
 80208a8:	1a21      	subs	r1, r4, r0
 80208aa:	4628      	mov	r0, r5
 80208ac:	f000 fa38 	bl	8020d20 <_sbrk_r>
 80208b0:	3001      	adds	r0, #1
 80208b2:	d1f2      	bne.n	802089a <sbrk_aligned+0x22>
 80208b4:	e7ef      	b.n	8020896 <sbrk_aligned+0x1e>
 80208b6:	bf00      	nop
 80208b8:	200036b0 	.word	0x200036b0

080208bc <_malloc_r>:
 80208bc:	e92d 43f8 	stmdb	sp!, {r3, r4, r5, r6, r7, r8, r9, lr}
 80208c0:	1ccd      	adds	r5, r1, #3
 80208c2:	f025 0503 	bic.w	r5, r5, #3
 80208c6:	3508      	adds	r5, #8
 80208c8:	2d0c      	cmp	r5, #12
 80208ca:	bf38      	it	cc
 80208cc:	250c      	movcc	r5, #12
 80208ce:	2d00      	cmp	r5, #0
 80208d0:	4606      	mov	r6, r0
 80208d2:	db01      	blt.n	80208d8 <_malloc_r+0x1c>
 80208d4:	42a9      	cmp	r1, r5
 80208d6:	d904      	bls.n	80208e2 <_malloc_r+0x26>
 80208d8:	230c      	movs	r3, #12
 80208da:	6033      	str	r3, [r6, #0]
 80208dc:	2000      	movs	r0, #0
 80208de:	e8bd 83f8 	ldmia.w	sp!, {r3, r4, r5, r6, r7, r8, r9, pc}
 80208e2:	f8df 80d4 	ldr.w	r8, [pc, #212]	@ 80209b8 <_malloc_r+0xfc>
 80208e6:	f000 f869 	bl	80209bc <__malloc_lock>
 80208ea:	f8d8 3000 	ldr.w	r3, [r8]
 80208ee:	461c      	mov	r4, r3
 80208f0:	bb44      	cbnz	r4, 8020944 <_malloc_r+0x88>
 80208f2:	4629      	mov	r1, r5
 80208f4:	4630      	mov	r0, r6
 80208f6:	f7ff ffbf 	bl	8020878 <sbrk_aligned>
 80208fa:	1c43      	adds	r3, r0, #1
 80208fc:	4604      	mov	r4, r0
 80208fe:	d158      	bne.n	80209b2 <_malloc_r+0xf6>
 8020900:	f8d8 4000 	ldr.w	r4, [r8]
 8020904:	4627      	mov	r7, r4
 8020906:	2f00      	cmp	r7, #0
 8020908:	d143      	bne.n	8020992 <_malloc_r+0xd6>
 802090a:	2c00      	cmp	r4, #0
 802090c:	d04b      	beq.n	80209a6 <_malloc_r+0xea>
 802090e:	6823      	ldr	r3, [r4, #0]
 8020910:	4639      	mov	r1, r7
 8020912:	4630      	mov	r0, r6
 8020914:	eb04 0903 	add.w	r9, r4, r3
 8020918:	f000 fa02 	bl	8020d20 <_sbrk_r>
 802091c:	4581      	cmp	r9, r0
 802091e:	d142      	bne.n	80209a6 <_malloc_r+0xea>
 8020920:	6821      	ldr	r1, [r4, #0]
 8020922:	1a6d      	subs	r5, r5, r1
 8020924:	4629      	mov	r1, r5
 8020926:	4630      	mov	r0, r6
 8020928:	f7ff ffa6 	bl	8020878 <sbrk_aligned>
 802092c:	3001      	adds	r0, #1
 802092e:	d03a      	beq.n	80209a6 <_malloc_r+0xea>
 8020930:	6823      	ldr	r3, [r4, #0]
 8020932:	442b      	add	r3, r5
 8020934:	6023      	str	r3, [r4, #0]
 8020936:	f8d8 3000 	ldr.w	r3, [r8]
 802093a:	685a      	ldr	r2, [r3, #4]
 802093c:	bb62      	cbnz	r2, 8020998 <_malloc_r+0xdc>
 802093e:	f8c8 7000 	str.w	r7, [r8]
 8020942:	e00f      	b.n	8020964 <_malloc_r+0xa8>
 8020944:	6822      	ldr	r2, [r4, #0]
 8020946:	1b52      	subs	r2, r2, r5
 8020948:	d420      	bmi.n	802098c <_malloc_r+0xd0>
 802094a:	2a0b      	cmp	r2, #11
 802094c:	d917      	bls.n	802097e <_malloc_r+0xc2>
 802094e:	1961      	adds	r1, r4, r5
 8020950:	42a3      	cmp	r3, r4
 8020952:	6025      	str	r5, [r4, #0]
 8020954:	bf18      	it	ne
 8020956:	6059      	strne	r1, [r3, #4]
 8020958:	6863      	ldr	r3, [r4, #4]
 802095a:	bf08      	it	eq
 802095c:	f8c8 1000 	streq.w	r1, [r8]
 8020960:	5162      	str	r2, [r4, r5]
 8020962:	604b      	str	r3, [r1, #4]
 8020964:	4630      	mov	r0, r6
 8020966:	f000 f82f 	bl	80209c8 <__malloc_unlock>
 802096a:	f104 000b 	add.w	r0, r4, #11
 802096e:	1d23      	adds	r3, r4, #4
 8020970:	f020 0007 	bic.w	r0, r0, #7
 8020974:	1ac2      	subs	r2, r0, r3
 8020976:	bf1c      	itt	ne
 8020978:	1a1b      	subne	r3, r3, r0
 802097a:	50a3      	strne	r3, [r4, r2]
 802097c:	e7af      	b.n	80208de <_malloc_r+0x22>
 802097e:	6862      	ldr	r2, [r4, #4]
 8020980:	42a3      	cmp	r3, r4
 8020982:	bf0c      	ite	eq
 8020984:	f8c8 2000 	streq.w	r2, [r8]
 8020988:	605a      	strne	r2, [r3, #4]
 802098a:	e7eb      	b.n	8020964 <_malloc_r+0xa8>
 802098c:	4623      	mov	r3, r4
 802098e:	6864      	ldr	r4, [r4, #4]
 8020990:	e7ae      	b.n	80208f0 <_malloc_r+0x34>
 8020992:	463c      	mov	r4, r7
 8020994:	687f      	ldr	r7, [r7, #4]
 8020996:	e7b6      	b.n	8020906 <_malloc_r+0x4a>
 8020998:	461a      	mov	r2, r3
 802099a:	685b      	ldr	r3, [r3, #4]
 802099c:	42a3      	cmp	r3, r4
 802099e:	d1fb      	bne.n	8020998 <_malloc_r+0xdc>
 80209a0:	2300      	movs	r3, #0
 80209a2:	6053      	str	r3, [r2, #4]
 80209a4:	e7de      	b.n	8020964 <_malloc_r+0xa8>
 80209a6:	230c      	movs	r3, #12
 80209a8:	6033      	str	r3, [r6, #0]
 80209aa:	4630      	mov	r0, r6
 80209ac:	f000 f80c 	bl	80209c8 <__malloc_unlock>
 80209b0:	e794      	b.n	80208dc <_malloc_r+0x20>
 80209b2:	6005      	str	r5, [r0, #0]
 80209b4:	e7d6      	b.n	8020964 <_malloc_r+0xa8>
 80209b6:	bf00      	nop
 80209b8:	200036b4 	.word	0x200036b4

080209bc <__malloc_lock>:
 80209bc:	4801      	ldr	r0, [pc, #4]	@ (80209c4 <__malloc_lock+0x8>)
 80209be:	f000 b9fc 	b.w	8020dba <__retarget_lock_acquire_recursive>
 80209c2:	bf00      	nop
 80209c4:	200037f8 	.word	0x200037f8

080209c8 <__malloc_unlock>:
 80209c8:	4801      	ldr	r0, [pc, #4]	@ (80209d0 <__malloc_unlock+0x8>)
 80209ca:	f000 b9f7 	b.w	8020dbc <__retarget_lock_release_recursive>
 80209ce:	bf00      	nop
 80209d0:	200037f8 	.word	0x200037f8

080209d4 <__cxa_atexit>:
 80209d4:	b510      	push	{r4, lr}
 80209d6:	4604      	mov	r4, r0
 80209d8:	4804      	ldr	r0, [pc, #16]	@ (80209ec <__cxa_atexit+0x18>)
 80209da:	4613      	mov	r3, r2
 80209dc:	b120      	cbz	r0, 80209e8 <__cxa_atexit+0x14>
 80209de:	460a      	mov	r2, r1
 80209e0:	2002      	movs	r0, #2
 80209e2:	4621      	mov	r1, r4
 80209e4:	f000 f9fa 	bl	8020ddc <__register_exitproc>
 80209e8:	bd10      	pop	{r4, pc}
 80209ea:	bf00      	nop
 80209ec:	08020ddd 	.word	0x08020ddd

080209f0 <std>:
 80209f0:	2300      	movs	r3, #0
 80209f2:	b510      	push	{r4, lr}
 80209f4:	4604      	mov	r4, r0
 80209f6:	e9c0 3300 	strd	r3, r3, [r0]
 80209fa:	e9c0 3304 	strd	r3, r3, [r0, #16]
 80209fe:	6083      	str	r3, [r0, #8]
 8020a00:	8181      	strh	r1, [r0, #12]
 8020a02:	6643      	str	r3, [r0, #100]	@ 0x64
 8020a04:	81c2      	strh	r2, [r0, #14]
 8020a06:	6183      	str	r3, [r0, #24]
 8020a08:	4619      	mov	r1, r3
 8020a0a:	2208      	movs	r2, #8
 8020a0c:	305c      	adds	r0, #92	@ 0x5c
 8020a0e:	f000 f906 	bl	8020c1e <memset>
 8020a12:	4b0d      	ldr	r3, [pc, #52]	@ (8020a48 <std+0x58>)
 8020a14:	6263      	str	r3, [r4, #36]	@ 0x24
 8020a16:	4b0d      	ldr	r3, [pc, #52]	@ (8020a4c <std+0x5c>)
 8020a18:	62a3      	str	r3, [r4, #40]	@ 0x28
 8020a1a:	4b0d      	ldr	r3, [pc, #52]	@ (8020a50 <std+0x60>)
 8020a1c:	62e3      	str	r3, [r4, #44]	@ 0x2c
 8020a1e:	4b0d      	ldr	r3, [pc, #52]	@ (8020a54 <std+0x64>)
 8020a20:	6323      	str	r3, [r4, #48]	@ 0x30
 8020a22:	4b0d      	ldr	r3, [pc, #52]	@ (8020a58 <std+0x68>)
 8020a24:	6224      	str	r4, [r4, #32]
 8020a26:	429c      	cmp	r4, r3
 8020a28:	d006      	beq.n	8020a38 <std+0x48>
 8020a2a:	f103 0268 	add.w	r2, r3, #104	@ 0x68
 8020a2e:	4294      	cmp	r4, r2
 8020a30:	d002      	beq.n	8020a38 <std+0x48>
 8020a32:	33d0      	adds	r3, #208	@ 0xd0
 8020a34:	429c      	cmp	r4, r3
 8020a36:	d105      	bne.n	8020a44 <std+0x54>
 8020a38:	f104 0058 	add.w	r0, r4, #88	@ 0x58
 8020a3c:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
 8020a40:	f000 b9ba 	b.w	8020db8 <__retarget_lock_init_recursive>
 8020a44:	bd10      	pop	{r4, pc}
 8020a46:	bf00      	nop
 8020a48:	08020b99 	.word	0x08020b99
 8020a4c:	08020bbb 	.word	0x08020bbb
 8020a50:	08020bf3 	.word	0x08020bf3
 8020a54:	08020c17 	.word	0x08020c17
 8020a58:	200036b8 	.word	0x200036b8

08020a5c <stdio_exit_handler>:
 8020a5c:	4a02      	ldr	r2, [pc, #8]	@ (8020a68 <stdio_exit_handler+0xc>)
 8020a5e:	4903      	ldr	r1, [pc, #12]	@ (8020a6c <stdio_exit_handler+0x10>)
 8020a60:	4803      	ldr	r0, [pc, #12]	@ (8020a70 <stdio_exit_handler+0x14>)
 8020a62:	f000 b87b 	b.w	8020b5c <_fwalk_sglue>
 8020a66:	bf00      	nop
 8020a68:	200000a4 	.word	0x200000a4
 8020a6c:	080215d1 	.word	0x080215d1
 8020a70:	200000b4 	.word	0x200000b4

08020a74 <cleanup_stdio>:
 8020a74:	6841      	ldr	r1, [r0, #4]
 8020a76:	4b0c      	ldr	r3, [pc, #48]	@ (8020aa8 <cleanup_stdio+0x34>)
 8020a78:	4299      	cmp	r1, r3
 8020a7a:	b510      	push	{r4, lr}
 8020a7c:	4604      	mov	r4, r0
 8020a7e:	d001      	beq.n	8020a84 <cleanup_stdio+0x10>
 8020a80:	f000 fda6 	bl	80215d0 <_fflush_r>
 8020a84:	68a1      	ldr	r1, [r4, #8]
 8020a86:	4b09      	ldr	r3, [pc, #36]	@ (8020aac <cleanup_stdio+0x38>)
 8020a88:	4299      	cmp	r1, r3
 8020a8a:	d002      	beq.n	8020a92 <cleanup_stdio+0x1e>
 8020a8c:	4620      	mov	r0, r4
 8020a8e:	f000 fd9f 	bl	80215d0 <_fflush_r>
 8020a92:	68e1      	ldr	r1, [r4, #12]
 8020a94:	4b06      	ldr	r3, [pc, #24]	@ (8020ab0 <cleanup_stdio+0x3c>)
 8020a96:	4299      	cmp	r1, r3
 8020a98:	d004      	beq.n	8020aa4 <cleanup_stdio+0x30>
 8020a9a:	4620      	mov	r0, r4
 8020a9c:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
 8020aa0:	f000 bd96 	b.w	80215d0 <_fflush_r>
 8020aa4:	bd10      	pop	{r4, pc}
 8020aa6:	bf00      	nop
 8020aa8:	200036b8 	.word	0x200036b8
 8020aac:	20003720 	.word	0x20003720
 8020ab0:	20003788 	.word	0x20003788

08020ab4 <global_stdio_init.part.0>:
 8020ab4:	b510      	push	{r4, lr}
 8020ab6:	4b0b      	ldr	r3, [pc, #44]	@ (8020ae4 <global_stdio_init.part.0+0x30>)
 8020ab8:	4c0b      	ldr	r4, [pc, #44]	@ (8020ae8 <global_stdio_init.part.0+0x34>)
 8020aba:	4a0c      	ldr	r2, [pc, #48]	@ (8020aec <global_stdio_init.part.0+0x38>)
 8020abc:	601a      	str	r2, [r3, #0]
 8020abe:	4620      	mov	r0, r4
 8020ac0:	2200      	movs	r2, #0
 8020ac2:	2104      	movs	r1, #4
 8020ac4:	f7ff ff94 	bl	80209f0 <std>
 8020ac8:	f104 0068 	add.w	r0, r4, #104	@ 0x68
 8020acc:	2201      	movs	r2, #1
 8020ace:	2109      	movs	r1, #9
 8020ad0:	f7ff ff8e 	bl	80209f0 <std>
 8020ad4:	f104 00d0 	add.w	r0, r4, #208	@ 0xd0
 8020ad8:	2202      	movs	r2, #2
 8020ada:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
 8020ade:	2112      	movs	r1, #18
 8020ae0:	f7ff bf86 	b.w	80209f0 <std>
 8020ae4:	200037f0 	.word	0x200037f0
 8020ae8:	200036b8 	.word	0x200036b8
 8020aec:	08020a5d 	.word	0x08020a5d

08020af0 <__sfp_lock_acquire>:
 8020af0:	4801      	ldr	r0, [pc, #4]	@ (8020af8 <__sfp_lock_acquire+0x8>)
 8020af2:	f000 b962 	b.w	8020dba <__retarget_lock_acquire_recursive>
 8020af6:	bf00      	nop
 8020af8:	200037fa 	.word	0x200037fa

08020afc <__sfp_lock_release>:
 8020afc:	4801      	ldr	r0, [pc, #4]	@ (8020b04 <__sfp_lock_release+0x8>)
 8020afe:	f000 b95d 	b.w	8020dbc <__retarget_lock_release_recursive>
 8020b02:	bf00      	nop
 8020b04:	200037fa 	.word	0x200037fa

08020b08 <__sinit>:
 8020b08:	b510      	push	{r4, lr}
 8020b0a:	4604      	mov	r4, r0
 8020b0c:	f7ff fff0 	bl	8020af0 <__sfp_lock_acquire>
 8020b10:	6a23      	ldr	r3, [r4, #32]
 8020b12:	b11b      	cbz	r3, 8020b1c <__sinit+0x14>
 8020b14:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
 8020b18:	f7ff bff0 	b.w	8020afc <__sfp_lock_release>
 8020b1c:	4b04      	ldr	r3, [pc, #16]	@ (8020b30 <__sinit+0x28>)
 8020b1e:	6223      	str	r3, [r4, #32]
 8020b20:	4b04      	ldr	r3, [pc, #16]	@ (8020b34 <__sinit+0x2c>)
 8020b22:	681b      	ldr	r3, [r3, #0]
 8020b24:	2b00      	cmp	r3, #0
 8020b26:	d1f5      	bne.n	8020b14 <__sinit+0xc>
 8020b28:	f7ff ffc4 	bl	8020ab4 <global_stdio_init.part.0>
 8020b2c:	e7f2      	b.n	8020b14 <__sinit+0xc>
 8020b2e:	bf00      	nop
 8020b30:	08020a75 	.word	0x08020a75
 8020b34:	200037f0 	.word	0x200037f0

08020b38 <fiprintf>:
 8020b38:	b40e      	push	{r1, r2, r3}
 8020b3a:	b503      	push	{r0, r1, lr}
 8020b3c:	4601      	mov	r1, r0
 8020b3e:	ab03      	add	r3, sp, #12
 8020b40:	4805      	ldr	r0, [pc, #20]	@ (8020b58 <fiprintf+0x20>)
 8020b42:	f853 2b04 	ldr.w	r2, [r3], #4
 8020b46:	6800      	ldr	r0, [r0, #0]
 8020b48:	9301      	str	r3, [sp, #4]
 8020b4a:	f000 fa17 	bl	8020f7c <_vfiprintf_r>
 8020b4e:	b002      	add	sp, #8
 8020b50:	f85d eb04 	ldr.w	lr, [sp], #4
 8020b54:	b003      	add	sp, #12
 8020b56:	4770      	bx	lr
 8020b58:	200000b0 	.word	0x200000b0

08020b5c <_fwalk_sglue>:
 8020b5c:	e92d 43f8 	stmdb	sp!, {r3, r4, r5, r6, r7, r8, r9, lr}
 8020b60:	4607      	mov	r7, r0
 8020b62:	4688      	mov	r8, r1
 8020b64:	4614      	mov	r4, r2
 8020b66:	2600      	movs	r6, #0
 8020b68:	e9d4 9501 	ldrd	r9, r5, [r4, #4]
 8020b6c:	f1b9 0901 	subs.w	r9, r9, #1
 8020b70:	d505      	bpl.n	8020b7e <_fwalk_sglue+0x22>
 8020b72:	6824      	ldr	r4, [r4, #0]
 8020b74:	2c00      	cmp	r4, #0
 8020b76:	d1f7      	bne.n	8020b68 <_fwalk_sglue+0xc>
 8020b78:	4630      	mov	r0, r6
 8020b7a:	e8bd 83f8 	ldmia.w	sp!, {r3, r4, r5, r6, r7, r8, r9, pc}
 8020b7e:	89ab      	ldrh	r3, [r5, #12]
 8020b80:	2b01      	cmp	r3, #1
 8020b82:	d907      	bls.n	8020b94 <_fwalk_sglue+0x38>
 8020b84:	f9b5 300e 	ldrsh.w	r3, [r5, #14]
 8020b88:	3301      	adds	r3, #1
 8020b8a:	d003      	beq.n	8020b94 <_fwalk_sglue+0x38>
 8020b8c:	4629      	mov	r1, r5
 8020b8e:	4638      	mov	r0, r7
 8020b90:	47c0      	blx	r8
 8020b92:	4306      	orrs	r6, r0
 8020b94:	3568      	adds	r5, #104	@ 0x68
 8020b96:	e7e9      	b.n	8020b6c <_fwalk_sglue+0x10>

08020b98 <__sread>:
 8020b98:	b510      	push	{r4, lr}
 8020b9a:	460c      	mov	r4, r1
 8020b9c:	f9b1 100e 	ldrsh.w	r1, [r1, #14]
 8020ba0:	f000 f898 	bl	8020cd4 <_read_r>
 8020ba4:	2800      	cmp	r0, #0
 8020ba6:	bfab      	itete	ge
 8020ba8:	6d63      	ldrge	r3, [r4, #84]	@ 0x54
 8020baa:	89a3      	ldrhlt	r3, [r4, #12]
 8020bac:	181b      	addge	r3, r3, r0
 8020bae:	f423 5380 	biclt.w	r3, r3, #4096	@ 0x1000
 8020bb2:	bfac      	ite	ge
 8020bb4:	6563      	strge	r3, [r4, #84]	@ 0x54
 8020bb6:	81a3      	strhlt	r3, [r4, #12]
 8020bb8:	bd10      	pop	{r4, pc}

08020bba <__swrite>:
 8020bba:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 8020bbe:	461f      	mov	r7, r3
 8020bc0:	898b      	ldrh	r3, [r1, #12]
 8020bc2:	05db      	lsls	r3, r3, #23
 8020bc4:	4605      	mov	r5, r0
 8020bc6:	460c      	mov	r4, r1
 8020bc8:	4616      	mov	r6, r2
 8020bca:	d505      	bpl.n	8020bd8 <__swrite+0x1e>
 8020bcc:	f9b1 100e 	ldrsh.w	r1, [r1, #14]
 8020bd0:	2302      	movs	r3, #2
 8020bd2:	2200      	movs	r2, #0
 8020bd4:	f000 f86c 	bl	8020cb0 <_lseek_r>
 8020bd8:	89a3      	ldrh	r3, [r4, #12]
 8020bda:	f9b4 100e 	ldrsh.w	r1, [r4, #14]
 8020bde:	f423 5380 	bic.w	r3, r3, #4096	@ 0x1000
 8020be2:	81a3      	strh	r3, [r4, #12]
 8020be4:	4632      	mov	r2, r6
 8020be6:	463b      	mov	r3, r7
 8020be8:	4628      	mov	r0, r5
 8020bea:	e8bd 41f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, lr}
 8020bee:	f000 b8a7 	b.w	8020d40 <_write_r>

08020bf2 <__sseek>:
 8020bf2:	b510      	push	{r4, lr}
 8020bf4:	460c      	mov	r4, r1
 8020bf6:	f9b1 100e 	ldrsh.w	r1, [r1, #14]
 8020bfa:	f000 f859 	bl	8020cb0 <_lseek_r>
 8020bfe:	1c43      	adds	r3, r0, #1
 8020c00:	89a3      	ldrh	r3, [r4, #12]
 8020c02:	bf15      	itete	ne
 8020c04:	6560      	strne	r0, [r4, #84]	@ 0x54
 8020c06:	f423 5380 	biceq.w	r3, r3, #4096	@ 0x1000
 8020c0a:	f443 5380 	orrne.w	r3, r3, #4096	@ 0x1000
 8020c0e:	81a3      	strheq	r3, [r4, #12]
 8020c10:	bf18      	it	ne
 8020c12:	81a3      	strhne	r3, [r4, #12]
 8020c14:	bd10      	pop	{r4, pc}

08020c16 <__sclose>:
 8020c16:	f9b1 100e 	ldrsh.w	r1, [r1, #14]
 8020c1a:	f000 b839 	b.w	8020c90 <_close_r>

08020c1e <memset>:
 8020c1e:	4402      	add	r2, r0
 8020c20:	4603      	mov	r3, r0
 8020c22:	4293      	cmp	r3, r2
 8020c24:	d100      	bne.n	8020c28 <memset+0xa>
 8020c26:	4770      	bx	lr
 8020c28:	f803 1b01 	strb.w	r1, [r3], #1
 8020c2c:	e7f9      	b.n	8020c22 <memset+0x4>

08020c2e <_raise_r>:
 8020c2e:	291f      	cmp	r1, #31
 8020c30:	b538      	push	{r3, r4, r5, lr}
 8020c32:	4605      	mov	r5, r0
 8020c34:	460c      	mov	r4, r1
 8020c36:	d904      	bls.n	8020c42 <_raise_r+0x14>
 8020c38:	2316      	movs	r3, #22
 8020c3a:	6003      	str	r3, [r0, #0]
 8020c3c:	f04f 30ff 	mov.w	r0, #4294967295
 8020c40:	bd38      	pop	{r3, r4, r5, pc}
 8020c42:	6bc2      	ldr	r2, [r0, #60]	@ 0x3c
 8020c44:	b112      	cbz	r2, 8020c4c <_raise_r+0x1e>
 8020c46:	f852 3021 	ldr.w	r3, [r2, r1, lsl #2]
 8020c4a:	b94b      	cbnz	r3, 8020c60 <_raise_r+0x32>
 8020c4c:	4628      	mov	r0, r5
 8020c4e:	f000 f865 	bl	8020d1c <_getpid_r>
 8020c52:	4622      	mov	r2, r4
 8020c54:	4601      	mov	r1, r0
 8020c56:	4628      	mov	r0, r5
 8020c58:	e8bd 4038 	ldmia.w	sp!, {r3, r4, r5, lr}
 8020c5c:	f000 b84c 	b.w	8020cf8 <_kill_r>
 8020c60:	2b01      	cmp	r3, #1
 8020c62:	d00a      	beq.n	8020c7a <_raise_r+0x4c>
 8020c64:	1c59      	adds	r1, r3, #1
 8020c66:	d103      	bne.n	8020c70 <_raise_r+0x42>
 8020c68:	2316      	movs	r3, #22
 8020c6a:	6003      	str	r3, [r0, #0]
 8020c6c:	2001      	movs	r0, #1
 8020c6e:	e7e7      	b.n	8020c40 <_raise_r+0x12>
 8020c70:	2100      	movs	r1, #0
 8020c72:	f842 1024 	str.w	r1, [r2, r4, lsl #2]
 8020c76:	4620      	mov	r0, r4
 8020c78:	4798      	blx	r3
 8020c7a:	2000      	movs	r0, #0
 8020c7c:	e7e0      	b.n	8020c40 <_raise_r+0x12>
	...

08020c80 <raise>:
 8020c80:	4b02      	ldr	r3, [pc, #8]	@ (8020c8c <raise+0xc>)
 8020c82:	4601      	mov	r1, r0
 8020c84:	6818      	ldr	r0, [r3, #0]
 8020c86:	f7ff bfd2 	b.w	8020c2e <_raise_r>
 8020c8a:	bf00      	nop
 8020c8c:	200000b0 	.word	0x200000b0

08020c90 <_close_r>:
 8020c90:	b538      	push	{r3, r4, r5, lr}
 8020c92:	4d06      	ldr	r5, [pc, #24]	@ (8020cac <_close_r+0x1c>)
 8020c94:	2300      	movs	r3, #0
 8020c96:	4604      	mov	r4, r0
 8020c98:	4608      	mov	r0, r1
 8020c9a:	602b      	str	r3, [r5, #0]
 8020c9c:	f7e0 faf2 	bl	8001284 <_close>
 8020ca0:	1c43      	adds	r3, r0, #1
 8020ca2:	d102      	bne.n	8020caa <_close_r+0x1a>
 8020ca4:	682b      	ldr	r3, [r5, #0]
 8020ca6:	b103      	cbz	r3, 8020caa <_close_r+0x1a>
 8020ca8:	6023      	str	r3, [r4, #0]
 8020caa:	bd38      	pop	{r3, r4, r5, pc}
 8020cac:	200037f4 	.word	0x200037f4

08020cb0 <_lseek_r>:
 8020cb0:	b538      	push	{r3, r4, r5, lr}
 8020cb2:	4d07      	ldr	r5, [pc, #28]	@ (8020cd0 <_lseek_r+0x20>)
 8020cb4:	4604      	mov	r4, r0
 8020cb6:	4608      	mov	r0, r1
 8020cb8:	4611      	mov	r1, r2
 8020cba:	2200      	movs	r2, #0
 8020cbc:	602a      	str	r2, [r5, #0]
 8020cbe:	461a      	mov	r2, r3
 8020cc0:	f7e0 fb07 	bl	80012d2 <_lseek>
 8020cc4:	1c43      	adds	r3, r0, #1
 8020cc6:	d102      	bne.n	8020cce <_lseek_r+0x1e>
 8020cc8:	682b      	ldr	r3, [r5, #0]
 8020cca:	b103      	cbz	r3, 8020cce <_lseek_r+0x1e>
 8020ccc:	6023      	str	r3, [r4, #0]
 8020cce:	bd38      	pop	{r3, r4, r5, pc}
 8020cd0:	200037f4 	.word	0x200037f4

08020cd4 <_read_r>:
 8020cd4:	b538      	push	{r3, r4, r5, lr}
 8020cd6:	4d07      	ldr	r5, [pc, #28]	@ (8020cf4 <_read_r+0x20>)
 8020cd8:	4604      	mov	r4, r0
 8020cda:	4608      	mov	r0, r1
 8020cdc:	4611      	mov	r1, r2
 8020cde:	2200      	movs	r2, #0
 8020ce0:	602a      	str	r2, [r5, #0]
 8020ce2:	461a      	mov	r2, r3
 8020ce4:	f7e0 fa95 	bl	8001212 <_read>
 8020ce8:	1c43      	adds	r3, r0, #1
 8020cea:	d102      	bne.n	8020cf2 <_read_r+0x1e>
 8020cec:	682b      	ldr	r3, [r5, #0]
 8020cee:	b103      	cbz	r3, 8020cf2 <_read_r+0x1e>
 8020cf0:	6023      	str	r3, [r4, #0]
 8020cf2:	bd38      	pop	{r3, r4, r5, pc}
 8020cf4:	200037f4 	.word	0x200037f4

08020cf8 <_kill_r>:
 8020cf8:	b538      	push	{r3, r4, r5, lr}
 8020cfa:	4d07      	ldr	r5, [pc, #28]	@ (8020d18 <_kill_r+0x20>)
 8020cfc:	2300      	movs	r3, #0
 8020cfe:	4604      	mov	r4, r0
 8020d00:	4608      	mov	r0, r1
 8020d02:	4611      	mov	r1, r2
 8020d04:	602b      	str	r3, [r5, #0]
 8020d06:	f7e0 fa69 	bl	80011dc <_kill>
 8020d0a:	1c43      	adds	r3, r0, #1
 8020d0c:	d102      	bne.n	8020d14 <_kill_r+0x1c>
 8020d0e:	682b      	ldr	r3, [r5, #0]
 8020d10:	b103      	cbz	r3, 8020d14 <_kill_r+0x1c>
 8020d12:	6023      	str	r3, [r4, #0]
 8020d14:	bd38      	pop	{r3, r4, r5, pc}
 8020d16:	bf00      	nop
 8020d18:	200037f4 	.word	0x200037f4

08020d1c <_getpid_r>:
 8020d1c:	f7e0 ba56 	b.w	80011cc <_getpid>

08020d20 <_sbrk_r>:
 8020d20:	b538      	push	{r3, r4, r5, lr}
 8020d22:	4d06      	ldr	r5, [pc, #24]	@ (8020d3c <_sbrk_r+0x1c>)
 8020d24:	2300      	movs	r3, #0
 8020d26:	4604      	mov	r4, r0
 8020d28:	4608      	mov	r0, r1
 8020d2a:	602b      	str	r3, [r5, #0]
 8020d2c:	f7e0 fade 	bl	80012ec <_sbrk>
 8020d30:	1c43      	adds	r3, r0, #1
 8020d32:	d102      	bne.n	8020d3a <_sbrk_r+0x1a>
 8020d34:	682b      	ldr	r3, [r5, #0]
 8020d36:	b103      	cbz	r3, 8020d3a <_sbrk_r+0x1a>
 8020d38:	6023      	str	r3, [r4, #0]
 8020d3a:	bd38      	pop	{r3, r4, r5, pc}
 8020d3c:	200037f4 	.word	0x200037f4

08020d40 <_write_r>:
 8020d40:	b538      	push	{r3, r4, r5, lr}
 8020d42:	4d07      	ldr	r5, [pc, #28]	@ (8020d60 <_write_r+0x20>)
 8020d44:	4604      	mov	r4, r0
 8020d46:	4608      	mov	r0, r1
 8020d48:	4611      	mov	r1, r2
 8020d4a:	2200      	movs	r2, #0
 8020d4c:	602a      	str	r2, [r5, #0]
 8020d4e:	461a      	mov	r2, r3
 8020d50:	f7e0 fa7c 	bl	800124c <_write>
 8020d54:	1c43      	adds	r3, r0, #1
 8020d56:	d102      	bne.n	8020d5e <_write_r+0x1e>
 8020d58:	682b      	ldr	r3, [r5, #0]
 8020d5a:	b103      	cbz	r3, 8020d5e <_write_r+0x1e>
 8020d5c:	6023      	str	r3, [r4, #0]
 8020d5e:	bd38      	pop	{r3, r4, r5, pc}
 8020d60:	200037f4 	.word	0x200037f4

08020d64 <__errno>:
 8020d64:	4b01      	ldr	r3, [pc, #4]	@ (8020d6c <__errno+0x8>)
 8020d66:	6818      	ldr	r0, [r3, #0]
 8020d68:	4770      	bx	lr
 8020d6a:	bf00      	nop
 8020d6c:	200000b0 	.word	0x200000b0

08020d70 <__libc_init_array>:
 8020d70:	b570      	push	{r4, r5, r6, lr}
 8020d72:	4d0d      	ldr	r5, [pc, #52]	@ (8020da8 <__libc_init_array+0x38>)
 8020d74:	4c0d      	ldr	r4, [pc, #52]	@ (8020dac <__libc_init_array+0x3c>)
 8020d76:	1b64      	subs	r4, r4, r5
 8020d78:	10a4      	asrs	r4, r4, #2
 8020d7a:	2600      	movs	r6, #0
 8020d7c:	42a6      	cmp	r6, r4
 8020d7e:	d109      	bne.n	8020d94 <__libc_init_array+0x24>
 8020d80:	4d0b      	ldr	r5, [pc, #44]	@ (8020db0 <__libc_init_array+0x40>)
 8020d82:	4c0c      	ldr	r4, [pc, #48]	@ (8020db4 <__libc_init_array+0x44>)
 8020d84:	f000 fd64 	bl	8021850 <_init>
 8020d88:	1b64      	subs	r4, r4, r5
 8020d8a:	10a4      	asrs	r4, r4, #2
 8020d8c:	2600      	movs	r6, #0
 8020d8e:	42a6      	cmp	r6, r4
 8020d90:	d105      	bne.n	8020d9e <__libc_init_array+0x2e>
 8020d92:	bd70      	pop	{r4, r5, r6, pc}
 8020d94:	f855 3b04 	ldr.w	r3, [r5], #4
 8020d98:	4798      	blx	r3
 8020d9a:	3601      	adds	r6, #1
 8020d9c:	e7ee      	b.n	8020d7c <__libc_init_array+0xc>
 8020d9e:	f855 3b04 	ldr.w	r3, [r5], #4
 8020da2:	4798      	blx	r3
 8020da4:	3601      	adds	r6, #1
 8020da6:	e7f2      	b.n	8020d8e <__libc_init_array+0x1e>
 8020da8:	08062c0c 	.word	0x08062c0c
 8020dac:	08062c0c 	.word	0x08062c0c
 8020db0:	08062c0c 	.word	0x08062c0c
 8020db4:	08062c24 	.word	0x08062c24

08020db8 <__retarget_lock_init_recursive>:
 8020db8:	4770      	bx	lr

08020dba <__retarget_lock_acquire_recursive>:
 8020dba:	4770      	bx	lr

08020dbc <__retarget_lock_release_recursive>:
 8020dbc:	4770      	bx	lr

08020dbe <memcpy>:
 8020dbe:	440a      	add	r2, r1
 8020dc0:	4291      	cmp	r1, r2
 8020dc2:	f100 33ff 	add.w	r3, r0, #4294967295
 8020dc6:	d100      	bne.n	8020dca <memcpy+0xc>
 8020dc8:	4770      	bx	lr
 8020dca:	b510      	push	{r4, lr}
 8020dcc:	f811 4b01 	ldrb.w	r4, [r1], #1
 8020dd0:	f803 4f01 	strb.w	r4, [r3, #1]!
 8020dd4:	4291      	cmp	r1, r2
 8020dd6:	d1f9      	bne.n	8020dcc <memcpy+0xe>
 8020dd8:	bd10      	pop	{r4, pc}
	...

08020ddc <__register_exitproc>:
 8020ddc:	e92d 43f8 	stmdb	sp!, {r3, r4, r5, r6, r7, r8, r9, lr}
 8020de0:	4d27      	ldr	r5, [pc, #156]	@ (8020e80 <__register_exitproc+0xa4>)
 8020de2:	4607      	mov	r7, r0
 8020de4:	6828      	ldr	r0, [r5, #0]
 8020de6:	4691      	mov	r9, r2
 8020de8:	460e      	mov	r6, r1
 8020dea:	4698      	mov	r8, r3
 8020dec:	f7ff ffe5 	bl	8020dba <__retarget_lock_acquire_recursive>
 8020df0:	4a24      	ldr	r2, [pc, #144]	@ (8020e84 <__register_exitproc+0xa8>)
 8020df2:	6814      	ldr	r4, [r2, #0]
 8020df4:	b93c      	cbnz	r4, 8020e06 <__register_exitproc+0x2a>
 8020df6:	4b24      	ldr	r3, [pc, #144]	@ (8020e88 <__register_exitproc+0xac>)
 8020df8:	6013      	str	r3, [r2, #0]
 8020dfa:	4a24      	ldr	r2, [pc, #144]	@ (8020e8c <__register_exitproc+0xb0>)
 8020dfc:	b112      	cbz	r2, 8020e04 <__register_exitproc+0x28>
 8020dfe:	6812      	ldr	r2, [r2, #0]
 8020e00:	f8c3 2088 	str.w	r2, [r3, #136]	@ 0x88
 8020e04:	4c20      	ldr	r4, [pc, #128]	@ (8020e88 <__register_exitproc+0xac>)
 8020e06:	6863      	ldr	r3, [r4, #4]
 8020e08:	2b1f      	cmp	r3, #31
 8020e0a:	dd06      	ble.n	8020e1a <__register_exitproc+0x3e>
 8020e0c:	6828      	ldr	r0, [r5, #0]
 8020e0e:	f7ff ffd5 	bl	8020dbc <__retarget_lock_release_recursive>
 8020e12:	f04f 30ff 	mov.w	r0, #4294967295
 8020e16:	e8bd 83f8 	ldmia.w	sp!, {r3, r4, r5, r6, r7, r8, r9, pc}
 8020e1a:	b32f      	cbz	r7, 8020e68 <__register_exitproc+0x8c>
 8020e1c:	f8d4 0088 	ldr.w	r0, [r4, #136]	@ 0x88
 8020e20:	b968      	cbnz	r0, 8020e3e <__register_exitproc+0x62>
 8020e22:	4b1b      	ldr	r3, [pc, #108]	@ (8020e90 <__register_exitproc+0xb4>)
 8020e24:	2b00      	cmp	r3, #0
 8020e26:	d0f1      	beq.n	8020e0c <__register_exitproc+0x30>
 8020e28:	f44f 7084 	mov.w	r0, #264	@ 0x108
 8020e2c:	f7ff fd14 	bl	8020858 <malloc>
 8020e30:	2800      	cmp	r0, #0
 8020e32:	d0eb      	beq.n	8020e0c <__register_exitproc+0x30>
 8020e34:	2300      	movs	r3, #0
 8020e36:	e9c0 3340 	strd	r3, r3, [r0, #256]	@ 0x100
 8020e3a:	f8c4 0088 	str.w	r0, [r4, #136]	@ 0x88
 8020e3e:	6863      	ldr	r3, [r4, #4]
 8020e40:	f840 9023 	str.w	r9, [r0, r3, lsl #2]
 8020e44:	2201      	movs	r2, #1
 8020e46:	409a      	lsls	r2, r3
 8020e48:	eb00 0183 	add.w	r1, r0, r3, lsl #2
 8020e4c:	f8d0 3100 	ldr.w	r3, [r0, #256]	@ 0x100
 8020e50:	4313      	orrs	r3, r2
 8020e52:	f8c0 3100 	str.w	r3, [r0, #256]	@ 0x100
 8020e56:	2f02      	cmp	r7, #2
 8020e58:	f8c1 8080 	str.w	r8, [r1, #128]	@ 0x80
 8020e5c:	bf02      	ittt	eq
 8020e5e:	f8d0 3104 	ldreq.w	r3, [r0, #260]	@ 0x104
 8020e62:	4313      	orreq	r3, r2
 8020e64:	f8c0 3104 	streq.w	r3, [r0, #260]	@ 0x104
 8020e68:	6863      	ldr	r3, [r4, #4]
 8020e6a:	6828      	ldr	r0, [r5, #0]
 8020e6c:	1c5a      	adds	r2, r3, #1
 8020e6e:	3302      	adds	r3, #2
 8020e70:	6062      	str	r2, [r4, #4]
 8020e72:	f844 6023 	str.w	r6, [r4, r3, lsl #2]
 8020e76:	f7ff ffa1 	bl	8020dbc <__retarget_lock_release_recursive>
 8020e7a:	2000      	movs	r0, #0
 8020e7c:	e7cb      	b.n	8020e16 <__register_exitproc+0x3a>
 8020e7e:	bf00      	nop
 8020e80:	20000100 	.word	0x20000100
 8020e84:	20003888 	.word	0x20003888
 8020e88:	200037fc 	.word	0x200037fc
 8020e8c:	08023bdc 	.word	0x08023bdc
 8020e90:	08020859 	.word	0x08020859

08020e94 <_free_r>:
 8020e94:	b538      	push	{r3, r4, r5, lr}
 8020e96:	4605      	mov	r5, r0
 8020e98:	2900      	cmp	r1, #0
 8020e9a:	d041      	beq.n	8020f20 <_free_r+0x8c>
 8020e9c:	f851 3c04 	ldr.w	r3, [r1, #-4]
 8020ea0:	1f0c      	subs	r4, r1, #4
 8020ea2:	2b00      	cmp	r3, #0
 8020ea4:	bfb8      	it	lt
 8020ea6:	18e4      	addlt	r4, r4, r3
 8020ea8:	f7ff fd88 	bl	80209bc <__malloc_lock>
 8020eac:	4a1d      	ldr	r2, [pc, #116]	@ (8020f24 <_free_r+0x90>)
 8020eae:	6813      	ldr	r3, [r2, #0]
 8020eb0:	b933      	cbnz	r3, 8020ec0 <_free_r+0x2c>
 8020eb2:	6063      	str	r3, [r4, #4]
 8020eb4:	6014      	str	r4, [r2, #0]
 8020eb6:	4628      	mov	r0, r5
 8020eb8:	e8bd 4038 	ldmia.w	sp!, {r3, r4, r5, lr}
 8020ebc:	f7ff bd84 	b.w	80209c8 <__malloc_unlock>
 8020ec0:	42a3      	cmp	r3, r4
 8020ec2:	d908      	bls.n	8020ed6 <_free_r+0x42>
 8020ec4:	6820      	ldr	r0, [r4, #0]
 8020ec6:	1821      	adds	r1, r4, r0
 8020ec8:	428b      	cmp	r3, r1
 8020eca:	bf01      	itttt	eq
 8020ecc:	6819      	ldreq	r1, [r3, #0]
 8020ece:	685b      	ldreq	r3, [r3, #4]
 8020ed0:	1809      	addeq	r1, r1, r0
 8020ed2:	6021      	streq	r1, [r4, #0]
 8020ed4:	e7ed      	b.n	8020eb2 <_free_r+0x1e>
 8020ed6:	461a      	mov	r2, r3
 8020ed8:	685b      	ldr	r3, [r3, #4]
 8020eda:	b10b      	cbz	r3, 8020ee0 <_free_r+0x4c>
 8020edc:	42a3      	cmp	r3, r4
 8020ede:	d9fa      	bls.n	8020ed6 <_free_r+0x42>
 8020ee0:	6811      	ldr	r1, [r2, #0]
 8020ee2:	1850      	adds	r0, r2, r1
 8020ee4:	42a0      	cmp	r0, r4
 8020ee6:	d10b      	bne.n	8020f00 <_free_r+0x6c>
 8020ee8:	6820      	ldr	r0, [r4, #0]
 8020eea:	4401      	add	r1, r0
 8020eec:	1850      	adds	r0, r2, r1
 8020eee:	4283      	cmp	r3, r0
 8020ef0:	6011      	str	r1, [r2, #0]
 8020ef2:	d1e0      	bne.n	8020eb6 <_free_r+0x22>
 8020ef4:	6818      	ldr	r0, [r3, #0]
 8020ef6:	685b      	ldr	r3, [r3, #4]
 8020ef8:	6053      	str	r3, [r2, #4]
 8020efa:	4408      	add	r0, r1
 8020efc:	6010      	str	r0, [r2, #0]
 8020efe:	e7da      	b.n	8020eb6 <_free_r+0x22>
 8020f00:	d902      	bls.n	8020f08 <_free_r+0x74>
 8020f02:	230c      	movs	r3, #12
 8020f04:	602b      	str	r3, [r5, #0]
 8020f06:	e7d6      	b.n	8020eb6 <_free_r+0x22>
 8020f08:	6820      	ldr	r0, [r4, #0]
 8020f0a:	1821      	adds	r1, r4, r0
 8020f0c:	428b      	cmp	r3, r1
 8020f0e:	bf04      	itt	eq
 8020f10:	6819      	ldreq	r1, [r3, #0]
 8020f12:	685b      	ldreq	r3, [r3, #4]
 8020f14:	6063      	str	r3, [r4, #4]
 8020f16:	bf04      	itt	eq
 8020f18:	1809      	addeq	r1, r1, r0
 8020f1a:	6021      	streq	r1, [r4, #0]
 8020f1c:	6054      	str	r4, [r2, #4]
 8020f1e:	e7ca      	b.n	8020eb6 <_free_r+0x22>
 8020f20:	bd38      	pop	{r3, r4, r5, pc}
 8020f22:	bf00      	nop
 8020f24:	200036b4 	.word	0x200036b4

08020f28 <__sfputc_r>:
 8020f28:	6893      	ldr	r3, [r2, #8]
 8020f2a:	3b01      	subs	r3, #1
 8020f2c:	2b00      	cmp	r3, #0
 8020f2e:	b410      	push	{r4}
 8020f30:	6093      	str	r3, [r2, #8]
 8020f32:	da08      	bge.n	8020f46 <__sfputc_r+0x1e>
 8020f34:	6994      	ldr	r4, [r2, #24]
 8020f36:	42a3      	cmp	r3, r4
 8020f38:	db01      	blt.n	8020f3e <__sfputc_r+0x16>
 8020f3a:	290a      	cmp	r1, #10
 8020f3c:	d103      	bne.n	8020f46 <__sfputc_r+0x1e>
 8020f3e:	f85d 4b04 	ldr.w	r4, [sp], #4
 8020f42:	f000 bb6d 	b.w	8021620 <__swbuf_r>
 8020f46:	6813      	ldr	r3, [r2, #0]
 8020f48:	1c58      	adds	r0, r3, #1
 8020f4a:	6010      	str	r0, [r2, #0]
 8020f4c:	7019      	strb	r1, [r3, #0]
 8020f4e:	4608      	mov	r0, r1
 8020f50:	f85d 4b04 	ldr.w	r4, [sp], #4
 8020f54:	4770      	bx	lr

08020f56 <__sfputs_r>:
 8020f56:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 8020f58:	4606      	mov	r6, r0
 8020f5a:	460f      	mov	r7, r1
 8020f5c:	4614      	mov	r4, r2
 8020f5e:	18d5      	adds	r5, r2, r3
 8020f60:	42ac      	cmp	r4, r5
 8020f62:	d101      	bne.n	8020f68 <__sfputs_r+0x12>
 8020f64:	2000      	movs	r0, #0
 8020f66:	e007      	b.n	8020f78 <__sfputs_r+0x22>
 8020f68:	f814 1b01 	ldrb.w	r1, [r4], #1
 8020f6c:	463a      	mov	r2, r7
 8020f6e:	4630      	mov	r0, r6
 8020f70:	f7ff ffda 	bl	8020f28 <__sfputc_r>
 8020f74:	1c43      	adds	r3, r0, #1
 8020f76:	d1f3      	bne.n	8020f60 <__sfputs_r+0xa>
 8020f78:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
	...

08020f7c <_vfiprintf_r>:
 8020f7c:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8020f80:	460d      	mov	r5, r1
 8020f82:	b09d      	sub	sp, #116	@ 0x74
 8020f84:	4614      	mov	r4, r2
 8020f86:	4698      	mov	r8, r3
 8020f88:	4606      	mov	r6, r0
 8020f8a:	b118      	cbz	r0, 8020f94 <_vfiprintf_r+0x18>
 8020f8c:	6a03      	ldr	r3, [r0, #32]
 8020f8e:	b90b      	cbnz	r3, 8020f94 <_vfiprintf_r+0x18>
 8020f90:	f7ff fdba 	bl	8020b08 <__sinit>
 8020f94:	6e6b      	ldr	r3, [r5, #100]	@ 0x64
 8020f96:	07d9      	lsls	r1, r3, #31
 8020f98:	d405      	bmi.n	8020fa6 <_vfiprintf_r+0x2a>
 8020f9a:	89ab      	ldrh	r3, [r5, #12]
 8020f9c:	059a      	lsls	r2, r3, #22
 8020f9e:	d402      	bmi.n	8020fa6 <_vfiprintf_r+0x2a>
 8020fa0:	6da8      	ldr	r0, [r5, #88]	@ 0x58
 8020fa2:	f7ff ff0a 	bl	8020dba <__retarget_lock_acquire_recursive>
 8020fa6:	89ab      	ldrh	r3, [r5, #12]
 8020fa8:	071b      	lsls	r3, r3, #28
 8020faa:	d501      	bpl.n	8020fb0 <_vfiprintf_r+0x34>
 8020fac:	692b      	ldr	r3, [r5, #16]
 8020fae:	b99b      	cbnz	r3, 8020fd8 <_vfiprintf_r+0x5c>
 8020fb0:	4629      	mov	r1, r5
 8020fb2:	4630      	mov	r0, r6
 8020fb4:	f000 fb72 	bl	802169c <__swsetup_r>
 8020fb8:	b170      	cbz	r0, 8020fd8 <_vfiprintf_r+0x5c>
 8020fba:	6e6b      	ldr	r3, [r5, #100]	@ 0x64
 8020fbc:	07dc      	lsls	r4, r3, #31
 8020fbe:	d504      	bpl.n	8020fca <_vfiprintf_r+0x4e>
 8020fc0:	f04f 30ff 	mov.w	r0, #4294967295
 8020fc4:	b01d      	add	sp, #116	@ 0x74
 8020fc6:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 8020fca:	89ab      	ldrh	r3, [r5, #12]
 8020fcc:	0598      	lsls	r0, r3, #22
 8020fce:	d4f7      	bmi.n	8020fc0 <_vfiprintf_r+0x44>
 8020fd0:	6da8      	ldr	r0, [r5, #88]	@ 0x58
 8020fd2:	f7ff fef3 	bl	8020dbc <__retarget_lock_release_recursive>
 8020fd6:	e7f3      	b.n	8020fc0 <_vfiprintf_r+0x44>
 8020fd8:	2300      	movs	r3, #0
 8020fda:	9309      	str	r3, [sp, #36]	@ 0x24
 8020fdc:	2320      	movs	r3, #32
 8020fde:	f88d 3029 	strb.w	r3, [sp, #41]	@ 0x29
 8020fe2:	f8cd 800c 	str.w	r8, [sp, #12]
 8020fe6:	2330      	movs	r3, #48	@ 0x30
 8020fe8:	f8df 81ac 	ldr.w	r8, [pc, #428]	@ 8021198 <_vfiprintf_r+0x21c>
 8020fec:	f88d 302a 	strb.w	r3, [sp, #42]	@ 0x2a
 8020ff0:	f04f 0901 	mov.w	r9, #1
 8020ff4:	4623      	mov	r3, r4
 8020ff6:	469a      	mov	sl, r3
 8020ff8:	f813 2b01 	ldrb.w	r2, [r3], #1
 8020ffc:	b10a      	cbz	r2, 8021002 <_vfiprintf_r+0x86>
 8020ffe:	2a25      	cmp	r2, #37	@ 0x25
 8021000:	d1f9      	bne.n	8020ff6 <_vfiprintf_r+0x7a>
 8021002:	ebba 0b04 	subs.w	fp, sl, r4
 8021006:	d00b      	beq.n	8021020 <_vfiprintf_r+0xa4>
 8021008:	465b      	mov	r3, fp
 802100a:	4622      	mov	r2, r4
 802100c:	4629      	mov	r1, r5
 802100e:	4630      	mov	r0, r6
 8021010:	f7ff ffa1 	bl	8020f56 <__sfputs_r>
 8021014:	3001      	adds	r0, #1
 8021016:	f000 80a7 	beq.w	8021168 <_vfiprintf_r+0x1ec>
 802101a:	9a09      	ldr	r2, [sp, #36]	@ 0x24
 802101c:	445a      	add	r2, fp
 802101e:	9209      	str	r2, [sp, #36]	@ 0x24
 8021020:	f89a 3000 	ldrb.w	r3, [sl]
 8021024:	2b00      	cmp	r3, #0
 8021026:	f000 809f 	beq.w	8021168 <_vfiprintf_r+0x1ec>
 802102a:	2300      	movs	r3, #0
 802102c:	f04f 32ff 	mov.w	r2, #4294967295
 8021030:	e9cd 2305 	strd	r2, r3, [sp, #20]
 8021034:	f10a 0a01 	add.w	sl, sl, #1
 8021038:	9304      	str	r3, [sp, #16]
 802103a:	9307      	str	r3, [sp, #28]
 802103c:	f88d 3053 	strb.w	r3, [sp, #83]	@ 0x53
 8021040:	931a      	str	r3, [sp, #104]	@ 0x68
 8021042:	4654      	mov	r4, sl
 8021044:	2205      	movs	r2, #5
 8021046:	f814 1b01 	ldrb.w	r1, [r4], #1
 802104a:	4853      	ldr	r0, [pc, #332]	@ (8021198 <_vfiprintf_r+0x21c>)
 802104c:	f7df f8e0 	bl	8000210 <memchr>
 8021050:	9a04      	ldr	r2, [sp, #16]
 8021052:	b9d8      	cbnz	r0, 802108c <_vfiprintf_r+0x110>
 8021054:	06d1      	lsls	r1, r2, #27
 8021056:	bf44      	itt	mi
 8021058:	2320      	movmi	r3, #32
 802105a:	f88d 3053 	strbmi.w	r3, [sp, #83]	@ 0x53
 802105e:	0713      	lsls	r3, r2, #28
 8021060:	bf44      	itt	mi
 8021062:	232b      	movmi	r3, #43	@ 0x2b
 8021064:	f88d 3053 	strbmi.w	r3, [sp, #83]	@ 0x53
 8021068:	f89a 3000 	ldrb.w	r3, [sl]
 802106c:	2b2a      	cmp	r3, #42	@ 0x2a
 802106e:	d015      	beq.n	802109c <_vfiprintf_r+0x120>
 8021070:	9a07      	ldr	r2, [sp, #28]
 8021072:	4654      	mov	r4, sl
 8021074:	2000      	movs	r0, #0
 8021076:	f04f 0c0a 	mov.w	ip, #10
 802107a:	4621      	mov	r1, r4
 802107c:	f811 3b01 	ldrb.w	r3, [r1], #1
 8021080:	3b30      	subs	r3, #48	@ 0x30
 8021082:	2b09      	cmp	r3, #9
 8021084:	d94b      	bls.n	802111e <_vfiprintf_r+0x1a2>
 8021086:	b1b0      	cbz	r0, 80210b6 <_vfiprintf_r+0x13a>
 8021088:	9207      	str	r2, [sp, #28]
 802108a:	e014      	b.n	80210b6 <_vfiprintf_r+0x13a>
 802108c:	eba0 0308 	sub.w	r3, r0, r8
 8021090:	fa09 f303 	lsl.w	r3, r9, r3
 8021094:	4313      	orrs	r3, r2
 8021096:	9304      	str	r3, [sp, #16]
 8021098:	46a2      	mov	sl, r4
 802109a:	e7d2      	b.n	8021042 <_vfiprintf_r+0xc6>
 802109c:	9b03      	ldr	r3, [sp, #12]
 802109e:	1d19      	adds	r1, r3, #4
 80210a0:	681b      	ldr	r3, [r3, #0]
 80210a2:	9103      	str	r1, [sp, #12]
 80210a4:	2b00      	cmp	r3, #0
 80210a6:	bfbb      	ittet	lt
 80210a8:	425b      	neglt	r3, r3
 80210aa:	f042 0202 	orrlt.w	r2, r2, #2
 80210ae:	9307      	strge	r3, [sp, #28]
 80210b0:	9307      	strlt	r3, [sp, #28]
 80210b2:	bfb8      	it	lt
 80210b4:	9204      	strlt	r2, [sp, #16]
 80210b6:	7823      	ldrb	r3, [r4, #0]
 80210b8:	2b2e      	cmp	r3, #46	@ 0x2e
 80210ba:	d10a      	bne.n	80210d2 <_vfiprintf_r+0x156>
 80210bc:	7863      	ldrb	r3, [r4, #1]
 80210be:	2b2a      	cmp	r3, #42	@ 0x2a
 80210c0:	d132      	bne.n	8021128 <_vfiprintf_r+0x1ac>
 80210c2:	9b03      	ldr	r3, [sp, #12]
 80210c4:	1d1a      	adds	r2, r3, #4
 80210c6:	681b      	ldr	r3, [r3, #0]
 80210c8:	9203      	str	r2, [sp, #12]
 80210ca:	ea43 73e3 	orr.w	r3, r3, r3, asr #31
 80210ce:	3402      	adds	r4, #2
 80210d0:	9305      	str	r3, [sp, #20]
 80210d2:	f8df a0d4 	ldr.w	sl, [pc, #212]	@ 80211a8 <_vfiprintf_r+0x22c>
 80210d6:	7821      	ldrb	r1, [r4, #0]
 80210d8:	2203      	movs	r2, #3
 80210da:	4650      	mov	r0, sl
 80210dc:	f7df f898 	bl	8000210 <memchr>
 80210e0:	b138      	cbz	r0, 80210f2 <_vfiprintf_r+0x176>
 80210e2:	9b04      	ldr	r3, [sp, #16]
 80210e4:	eba0 000a 	sub.w	r0, r0, sl
 80210e8:	2240      	movs	r2, #64	@ 0x40
 80210ea:	4082      	lsls	r2, r0
 80210ec:	4313      	orrs	r3, r2
 80210ee:	3401      	adds	r4, #1
 80210f0:	9304      	str	r3, [sp, #16]
 80210f2:	f814 1b01 	ldrb.w	r1, [r4], #1
 80210f6:	4829      	ldr	r0, [pc, #164]	@ (802119c <_vfiprintf_r+0x220>)
 80210f8:	f88d 1028 	strb.w	r1, [sp, #40]	@ 0x28
 80210fc:	2206      	movs	r2, #6
 80210fe:	f7df f887 	bl	8000210 <memchr>
 8021102:	2800      	cmp	r0, #0
 8021104:	d03f      	beq.n	8021186 <_vfiprintf_r+0x20a>
 8021106:	4b26      	ldr	r3, [pc, #152]	@ (80211a0 <_vfiprintf_r+0x224>)
 8021108:	bb1b      	cbnz	r3, 8021152 <_vfiprintf_r+0x1d6>
 802110a:	9b03      	ldr	r3, [sp, #12]
 802110c:	3307      	adds	r3, #7
 802110e:	f023 0307 	bic.w	r3, r3, #7
 8021112:	3308      	adds	r3, #8
 8021114:	9303      	str	r3, [sp, #12]
 8021116:	9b09      	ldr	r3, [sp, #36]	@ 0x24
 8021118:	443b      	add	r3, r7
 802111a:	9309      	str	r3, [sp, #36]	@ 0x24
 802111c:	e76a      	b.n	8020ff4 <_vfiprintf_r+0x78>
 802111e:	fb0c 3202 	mla	r2, ip, r2, r3
 8021122:	460c      	mov	r4, r1
 8021124:	2001      	movs	r0, #1
 8021126:	e7a8      	b.n	802107a <_vfiprintf_r+0xfe>
 8021128:	2300      	movs	r3, #0
 802112a:	3401      	adds	r4, #1
 802112c:	9305      	str	r3, [sp, #20]
 802112e:	4619      	mov	r1, r3
 8021130:	f04f 0c0a 	mov.w	ip, #10
 8021134:	4620      	mov	r0, r4
 8021136:	f810 2b01 	ldrb.w	r2, [r0], #1
 802113a:	3a30      	subs	r2, #48	@ 0x30
 802113c:	2a09      	cmp	r2, #9
 802113e:	d903      	bls.n	8021148 <_vfiprintf_r+0x1cc>
 8021140:	2b00      	cmp	r3, #0
 8021142:	d0c6      	beq.n	80210d2 <_vfiprintf_r+0x156>
 8021144:	9105      	str	r1, [sp, #20]
 8021146:	e7c4      	b.n	80210d2 <_vfiprintf_r+0x156>
 8021148:	fb0c 2101 	mla	r1, ip, r1, r2
 802114c:	4604      	mov	r4, r0
 802114e:	2301      	movs	r3, #1
 8021150:	e7f0      	b.n	8021134 <_vfiprintf_r+0x1b8>
 8021152:	ab03      	add	r3, sp, #12
 8021154:	9300      	str	r3, [sp, #0]
 8021156:	462a      	mov	r2, r5
 8021158:	4b12      	ldr	r3, [pc, #72]	@ (80211a4 <_vfiprintf_r+0x228>)
 802115a:	a904      	add	r1, sp, #16
 802115c:	4630      	mov	r0, r6
 802115e:	f3af 8000 	nop.w
 8021162:	4607      	mov	r7, r0
 8021164:	1c78      	adds	r0, r7, #1
 8021166:	d1d6      	bne.n	8021116 <_vfiprintf_r+0x19a>
 8021168:	6e6b      	ldr	r3, [r5, #100]	@ 0x64
 802116a:	07d9      	lsls	r1, r3, #31
 802116c:	d405      	bmi.n	802117a <_vfiprintf_r+0x1fe>
 802116e:	89ab      	ldrh	r3, [r5, #12]
 8021170:	059a      	lsls	r2, r3, #22
 8021172:	d402      	bmi.n	802117a <_vfiprintf_r+0x1fe>
 8021174:	6da8      	ldr	r0, [r5, #88]	@ 0x58
 8021176:	f7ff fe21 	bl	8020dbc <__retarget_lock_release_recursive>
 802117a:	89ab      	ldrh	r3, [r5, #12]
 802117c:	065b      	lsls	r3, r3, #25
 802117e:	f53f af1f 	bmi.w	8020fc0 <_vfiprintf_r+0x44>
 8021182:	9809      	ldr	r0, [sp, #36]	@ 0x24
 8021184:	e71e      	b.n	8020fc4 <_vfiprintf_r+0x48>
 8021186:	ab03      	add	r3, sp, #12
 8021188:	9300      	str	r3, [sp, #0]
 802118a:	462a      	mov	r2, r5
 802118c:	4b05      	ldr	r3, [pc, #20]	@ (80211a4 <_vfiprintf_r+0x228>)
 802118e:	a904      	add	r1, sp, #16
 8021190:	4630      	mov	r0, r6
 8021192:	f000 f879 	bl	8021288 <_printf_i>
 8021196:	e7e4      	b.n	8021162 <_vfiprintf_r+0x1e6>
 8021198:	08023be0 	.word	0x08023be0
 802119c:	08023bea 	.word	0x08023bea
 80211a0:	00000000 	.word	0x00000000
 80211a4:	08020f57 	.word	0x08020f57
 80211a8:	08023be6 	.word	0x08023be6

080211ac <_printf_common>:
 80211ac:	e92d 47f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
 80211b0:	4616      	mov	r6, r2
 80211b2:	4698      	mov	r8, r3
 80211b4:	688a      	ldr	r2, [r1, #8]
 80211b6:	690b      	ldr	r3, [r1, #16]
 80211b8:	f8dd 9020 	ldr.w	r9, [sp, #32]
 80211bc:	4293      	cmp	r3, r2
 80211be:	bfb8      	it	lt
 80211c0:	4613      	movlt	r3, r2
 80211c2:	6033      	str	r3, [r6, #0]
 80211c4:	f891 2043 	ldrb.w	r2, [r1, #67]	@ 0x43
 80211c8:	4607      	mov	r7, r0
 80211ca:	460c      	mov	r4, r1
 80211cc:	b10a      	cbz	r2, 80211d2 <_printf_common+0x26>
 80211ce:	3301      	adds	r3, #1
 80211d0:	6033      	str	r3, [r6, #0]
 80211d2:	6823      	ldr	r3, [r4, #0]
 80211d4:	0699      	lsls	r1, r3, #26
 80211d6:	bf42      	ittt	mi
 80211d8:	6833      	ldrmi	r3, [r6, #0]
 80211da:	3302      	addmi	r3, #2
 80211dc:	6033      	strmi	r3, [r6, #0]
 80211de:	6825      	ldr	r5, [r4, #0]
 80211e0:	f015 0506 	ands.w	r5, r5, #6
 80211e4:	d106      	bne.n	80211f4 <_printf_common+0x48>
 80211e6:	f104 0a19 	add.w	sl, r4, #25
 80211ea:	68e3      	ldr	r3, [r4, #12]
 80211ec:	6832      	ldr	r2, [r6, #0]
 80211ee:	1a9b      	subs	r3, r3, r2
 80211f0:	42ab      	cmp	r3, r5
 80211f2:	dc26      	bgt.n	8021242 <_printf_common+0x96>
 80211f4:	f894 3043 	ldrb.w	r3, [r4, #67]	@ 0x43
 80211f8:	6822      	ldr	r2, [r4, #0]
 80211fa:	3b00      	subs	r3, #0
 80211fc:	bf18      	it	ne
 80211fe:	2301      	movne	r3, #1
 8021200:	0692      	lsls	r2, r2, #26
 8021202:	d42b      	bmi.n	802125c <_printf_common+0xb0>
 8021204:	f104 0243 	add.w	r2, r4, #67	@ 0x43
 8021208:	4641      	mov	r1, r8
 802120a:	4638      	mov	r0, r7
 802120c:	47c8      	blx	r9
 802120e:	3001      	adds	r0, #1
 8021210:	d01e      	beq.n	8021250 <_printf_common+0xa4>
 8021212:	6823      	ldr	r3, [r4, #0]
 8021214:	6922      	ldr	r2, [r4, #16]
 8021216:	f003 0306 	and.w	r3, r3, #6
 802121a:	2b04      	cmp	r3, #4
 802121c:	bf02      	ittt	eq
 802121e:	68e5      	ldreq	r5, [r4, #12]
 8021220:	6833      	ldreq	r3, [r6, #0]
 8021222:	1aed      	subeq	r5, r5, r3
 8021224:	68a3      	ldr	r3, [r4, #8]
 8021226:	bf0c      	ite	eq
 8021228:	ea25 75e5 	biceq.w	r5, r5, r5, asr #31
 802122c:	2500      	movne	r5, #0
 802122e:	4293      	cmp	r3, r2
 8021230:	bfc4      	itt	gt
 8021232:	1a9b      	subgt	r3, r3, r2
 8021234:	18ed      	addgt	r5, r5, r3
 8021236:	2600      	movs	r6, #0
 8021238:	341a      	adds	r4, #26
 802123a:	42b5      	cmp	r5, r6
 802123c:	d11a      	bne.n	8021274 <_printf_common+0xc8>
 802123e:	2000      	movs	r0, #0
 8021240:	e008      	b.n	8021254 <_printf_common+0xa8>
 8021242:	2301      	movs	r3, #1
 8021244:	4652      	mov	r2, sl
 8021246:	4641      	mov	r1, r8
 8021248:	4638      	mov	r0, r7
 802124a:	47c8      	blx	r9
 802124c:	3001      	adds	r0, #1
 802124e:	d103      	bne.n	8021258 <_printf_common+0xac>
 8021250:	f04f 30ff 	mov.w	r0, #4294967295
 8021254:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
 8021258:	3501      	adds	r5, #1
 802125a:	e7c6      	b.n	80211ea <_printf_common+0x3e>
 802125c:	18e1      	adds	r1, r4, r3
 802125e:	1c5a      	adds	r2, r3, #1
 8021260:	2030      	movs	r0, #48	@ 0x30
 8021262:	f881 0043 	strb.w	r0, [r1, #67]	@ 0x43
 8021266:	4422      	add	r2, r4
 8021268:	f894 1045 	ldrb.w	r1, [r4, #69]	@ 0x45
 802126c:	f882 1043 	strb.w	r1, [r2, #67]	@ 0x43
 8021270:	3302      	adds	r3, #2
 8021272:	e7c7      	b.n	8021204 <_printf_common+0x58>
 8021274:	2301      	movs	r3, #1
 8021276:	4622      	mov	r2, r4
 8021278:	4641      	mov	r1, r8
 802127a:	4638      	mov	r0, r7
 802127c:	47c8      	blx	r9
 802127e:	3001      	adds	r0, #1
 8021280:	d0e6      	beq.n	8021250 <_printf_common+0xa4>
 8021282:	3601      	adds	r6, #1
 8021284:	e7d9      	b.n	802123a <_printf_common+0x8e>
	...

08021288 <_printf_i>:
 8021288:	e92d 47ff 	stmdb	sp!, {r0, r1, r2, r3, r4, r5, r6, r7, r8, r9, sl, lr}
 802128c:	7e0f      	ldrb	r7, [r1, #24]
 802128e:	9e0c      	ldr	r6, [sp, #48]	@ 0x30
 8021290:	2f78      	cmp	r7, #120	@ 0x78
 8021292:	4691      	mov	r9, r2
 8021294:	4680      	mov	r8, r0
 8021296:	460c      	mov	r4, r1
 8021298:	469a      	mov	sl, r3
 802129a:	f101 0243 	add.w	r2, r1, #67	@ 0x43
 802129e:	d807      	bhi.n	80212b0 <_printf_i+0x28>
 80212a0:	2f62      	cmp	r7, #98	@ 0x62
 80212a2:	d80a      	bhi.n	80212ba <_printf_i+0x32>
 80212a4:	2f00      	cmp	r7, #0
 80212a6:	f000 80d2 	beq.w	802144e <_printf_i+0x1c6>
 80212aa:	2f58      	cmp	r7, #88	@ 0x58
 80212ac:	f000 80b9 	beq.w	8021422 <_printf_i+0x19a>
 80212b0:	f104 0642 	add.w	r6, r4, #66	@ 0x42
 80212b4:	f884 7042 	strb.w	r7, [r4, #66]	@ 0x42
 80212b8:	e03a      	b.n	8021330 <_printf_i+0xa8>
 80212ba:	f1a7 0363 	sub.w	r3, r7, #99	@ 0x63
 80212be:	2b15      	cmp	r3, #21
 80212c0:	d8f6      	bhi.n	80212b0 <_printf_i+0x28>
 80212c2:	a101      	add	r1, pc, #4	@ (adr r1, 80212c8 <_printf_i+0x40>)
 80212c4:	f851 f023 	ldr.w	pc, [r1, r3, lsl #2]
 80212c8:	08021321 	.word	0x08021321
 80212cc:	08021335 	.word	0x08021335
 80212d0:	080212b1 	.word	0x080212b1
 80212d4:	080212b1 	.word	0x080212b1
 80212d8:	080212b1 	.word	0x080212b1
 80212dc:	080212b1 	.word	0x080212b1
 80212e0:	08021335 	.word	0x08021335
 80212e4:	080212b1 	.word	0x080212b1
 80212e8:	080212b1 	.word	0x080212b1
 80212ec:	080212b1 	.word	0x080212b1
 80212f0:	080212b1 	.word	0x080212b1
 80212f4:	08021435 	.word	0x08021435
 80212f8:	0802135f 	.word	0x0802135f
 80212fc:	080213ef 	.word	0x080213ef
 8021300:	080212b1 	.word	0x080212b1
 8021304:	080212b1 	.word	0x080212b1
 8021308:	08021457 	.word	0x08021457
 802130c:	080212b1 	.word	0x080212b1
 8021310:	0802135f 	.word	0x0802135f
 8021314:	080212b1 	.word	0x080212b1
 8021318:	080212b1 	.word	0x080212b1
 802131c:	080213f7 	.word	0x080213f7
 8021320:	6833      	ldr	r3, [r6, #0]
 8021322:	1d1a      	adds	r2, r3, #4
 8021324:	681b      	ldr	r3, [r3, #0]
 8021326:	6032      	str	r2, [r6, #0]
 8021328:	f104 0642 	add.w	r6, r4, #66	@ 0x42
 802132c:	f884 3042 	strb.w	r3, [r4, #66]	@ 0x42
 8021330:	2301      	movs	r3, #1
 8021332:	e09d      	b.n	8021470 <_printf_i+0x1e8>
 8021334:	6833      	ldr	r3, [r6, #0]
 8021336:	6820      	ldr	r0, [r4, #0]
 8021338:	1d19      	adds	r1, r3, #4
 802133a:	6031      	str	r1, [r6, #0]
 802133c:	0606      	lsls	r6, r0, #24
 802133e:	d501      	bpl.n	8021344 <_printf_i+0xbc>
 8021340:	681d      	ldr	r5, [r3, #0]
 8021342:	e003      	b.n	802134c <_printf_i+0xc4>
 8021344:	0645      	lsls	r5, r0, #25
 8021346:	d5fb      	bpl.n	8021340 <_printf_i+0xb8>
 8021348:	f9b3 5000 	ldrsh.w	r5, [r3]
 802134c:	2d00      	cmp	r5, #0
 802134e:	da03      	bge.n	8021358 <_printf_i+0xd0>
 8021350:	232d      	movs	r3, #45	@ 0x2d
 8021352:	426d      	negs	r5, r5
 8021354:	f884 3043 	strb.w	r3, [r4, #67]	@ 0x43
 8021358:	4859      	ldr	r0, [pc, #356]	@ (80214c0 <_printf_i+0x238>)
 802135a:	230a      	movs	r3, #10
 802135c:	e011      	b.n	8021382 <_printf_i+0xfa>
 802135e:	6821      	ldr	r1, [r4, #0]
 8021360:	6833      	ldr	r3, [r6, #0]
 8021362:	0608      	lsls	r0, r1, #24
 8021364:	f853 5b04 	ldr.w	r5, [r3], #4
 8021368:	d402      	bmi.n	8021370 <_printf_i+0xe8>
 802136a:	0649      	lsls	r1, r1, #25
 802136c:	bf48      	it	mi
 802136e:	b2ad      	uxthmi	r5, r5
 8021370:	2f6f      	cmp	r7, #111	@ 0x6f
 8021372:	4853      	ldr	r0, [pc, #332]	@ (80214c0 <_printf_i+0x238>)
 8021374:	6033      	str	r3, [r6, #0]
 8021376:	bf14      	ite	ne
 8021378:	230a      	movne	r3, #10
 802137a:	2308      	moveq	r3, #8
 802137c:	2100      	movs	r1, #0
 802137e:	f884 1043 	strb.w	r1, [r4, #67]	@ 0x43
 8021382:	6866      	ldr	r6, [r4, #4]
 8021384:	60a6      	str	r6, [r4, #8]
 8021386:	2e00      	cmp	r6, #0
 8021388:	bfa2      	ittt	ge
 802138a:	6821      	ldrge	r1, [r4, #0]
 802138c:	f021 0104 	bicge.w	r1, r1, #4
 8021390:	6021      	strge	r1, [r4, #0]
 8021392:	b90d      	cbnz	r5, 8021398 <_printf_i+0x110>
 8021394:	2e00      	cmp	r6, #0
 8021396:	d04b      	beq.n	8021430 <_printf_i+0x1a8>
 8021398:	4616      	mov	r6, r2
 802139a:	fbb5 f1f3 	udiv	r1, r5, r3
 802139e:	fb03 5711 	mls	r7, r3, r1, r5
 80213a2:	5dc7      	ldrb	r7, [r0, r7]
 80213a4:	f806 7d01 	strb.w	r7, [r6, #-1]!
 80213a8:	462f      	mov	r7, r5
 80213aa:	42bb      	cmp	r3, r7
 80213ac:	460d      	mov	r5, r1
 80213ae:	d9f4      	bls.n	802139a <_printf_i+0x112>
 80213b0:	2b08      	cmp	r3, #8
 80213b2:	d10b      	bne.n	80213cc <_printf_i+0x144>
 80213b4:	6823      	ldr	r3, [r4, #0]
 80213b6:	07df      	lsls	r7, r3, #31
 80213b8:	d508      	bpl.n	80213cc <_printf_i+0x144>
 80213ba:	6923      	ldr	r3, [r4, #16]
 80213bc:	6861      	ldr	r1, [r4, #4]
 80213be:	4299      	cmp	r1, r3
 80213c0:	bfde      	ittt	le
 80213c2:	2330      	movle	r3, #48	@ 0x30
 80213c4:	f806 3c01 	strble.w	r3, [r6, #-1]
 80213c8:	f106 36ff 	addle.w	r6, r6, #4294967295
 80213cc:	1b92      	subs	r2, r2, r6
 80213ce:	6122      	str	r2, [r4, #16]
 80213d0:	f8cd a000 	str.w	sl, [sp]
 80213d4:	464b      	mov	r3, r9
 80213d6:	aa03      	add	r2, sp, #12
 80213d8:	4621      	mov	r1, r4
 80213da:	4640      	mov	r0, r8
 80213dc:	f7ff fee6 	bl	80211ac <_printf_common>
 80213e0:	3001      	adds	r0, #1
 80213e2:	d14a      	bne.n	802147a <_printf_i+0x1f2>
 80213e4:	f04f 30ff 	mov.w	r0, #4294967295
 80213e8:	b004      	add	sp, #16
 80213ea:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
 80213ee:	6823      	ldr	r3, [r4, #0]
 80213f0:	f043 0320 	orr.w	r3, r3, #32
 80213f4:	6023      	str	r3, [r4, #0]
 80213f6:	4833      	ldr	r0, [pc, #204]	@ (80214c4 <_printf_i+0x23c>)
 80213f8:	2778      	movs	r7, #120	@ 0x78
 80213fa:	f884 7045 	strb.w	r7, [r4, #69]	@ 0x45
 80213fe:	6823      	ldr	r3, [r4, #0]
 8021400:	6831      	ldr	r1, [r6, #0]
 8021402:	061f      	lsls	r7, r3, #24
 8021404:	f851 5b04 	ldr.w	r5, [r1], #4
 8021408:	d402      	bmi.n	8021410 <_printf_i+0x188>
 802140a:	065f      	lsls	r7, r3, #25
 802140c:	bf48      	it	mi
 802140e:	b2ad      	uxthmi	r5, r5
 8021410:	6031      	str	r1, [r6, #0]
 8021412:	07d9      	lsls	r1, r3, #31
 8021414:	bf44      	itt	mi
 8021416:	f043 0320 	orrmi.w	r3, r3, #32
 802141a:	6023      	strmi	r3, [r4, #0]
 802141c:	b11d      	cbz	r5, 8021426 <_printf_i+0x19e>
 802141e:	2310      	movs	r3, #16
 8021420:	e7ac      	b.n	802137c <_printf_i+0xf4>
 8021422:	4827      	ldr	r0, [pc, #156]	@ (80214c0 <_printf_i+0x238>)
 8021424:	e7e9      	b.n	80213fa <_printf_i+0x172>
 8021426:	6823      	ldr	r3, [r4, #0]
 8021428:	f023 0320 	bic.w	r3, r3, #32
 802142c:	6023      	str	r3, [r4, #0]
 802142e:	e7f6      	b.n	802141e <_printf_i+0x196>
 8021430:	4616      	mov	r6, r2
 8021432:	e7bd      	b.n	80213b0 <_printf_i+0x128>
 8021434:	6833      	ldr	r3, [r6, #0]
 8021436:	6825      	ldr	r5, [r4, #0]
 8021438:	6961      	ldr	r1, [r4, #20]
 802143a:	1d18      	adds	r0, r3, #4
 802143c:	6030      	str	r0, [r6, #0]
 802143e:	062e      	lsls	r6, r5, #24
 8021440:	681b      	ldr	r3, [r3, #0]
 8021442:	d501      	bpl.n	8021448 <_printf_i+0x1c0>
 8021444:	6019      	str	r1, [r3, #0]
 8021446:	e002      	b.n	802144e <_printf_i+0x1c6>
 8021448:	0668      	lsls	r0, r5, #25
 802144a:	d5fb      	bpl.n	8021444 <_printf_i+0x1bc>
 802144c:	8019      	strh	r1, [r3, #0]
 802144e:	2300      	movs	r3, #0
 8021450:	6123      	str	r3, [r4, #16]
 8021452:	4616      	mov	r6, r2
 8021454:	e7bc      	b.n	80213d0 <_printf_i+0x148>
 8021456:	6833      	ldr	r3, [r6, #0]
 8021458:	1d1a      	adds	r2, r3, #4
 802145a:	6032      	str	r2, [r6, #0]
 802145c:	681e      	ldr	r6, [r3, #0]
 802145e:	6862      	ldr	r2, [r4, #4]
 8021460:	2100      	movs	r1, #0
 8021462:	4630      	mov	r0, r6
 8021464:	f7de fed4 	bl	8000210 <memchr>
 8021468:	b108      	cbz	r0, 802146e <_printf_i+0x1e6>
 802146a:	1b80      	subs	r0, r0, r6
 802146c:	6060      	str	r0, [r4, #4]
 802146e:	6863      	ldr	r3, [r4, #4]
 8021470:	6123      	str	r3, [r4, #16]
 8021472:	2300      	movs	r3, #0
 8021474:	f884 3043 	strb.w	r3, [r4, #67]	@ 0x43
 8021478:	e7aa      	b.n	80213d0 <_printf_i+0x148>
 802147a:	6923      	ldr	r3, [r4, #16]
 802147c:	4632      	mov	r2, r6
 802147e:	4649      	mov	r1, r9
 8021480:	4640      	mov	r0, r8
 8021482:	47d0      	blx	sl
 8021484:	3001      	adds	r0, #1
 8021486:	d0ad      	beq.n	80213e4 <_printf_i+0x15c>
 8021488:	6823      	ldr	r3, [r4, #0]
 802148a:	079b      	lsls	r3, r3, #30
 802148c:	d413      	bmi.n	80214b6 <_printf_i+0x22e>
 802148e:	68e0      	ldr	r0, [r4, #12]
 8021490:	9b03      	ldr	r3, [sp, #12]
 8021492:	4298      	cmp	r0, r3
 8021494:	bfb8      	it	lt
 8021496:	4618      	movlt	r0, r3
 8021498:	e7a6      	b.n	80213e8 <_printf_i+0x160>
 802149a:	2301      	movs	r3, #1
 802149c:	4632      	mov	r2, r6
 802149e:	4649      	mov	r1, r9
 80214a0:	4640      	mov	r0, r8
 80214a2:	47d0      	blx	sl
 80214a4:	3001      	adds	r0, #1
 80214a6:	d09d      	beq.n	80213e4 <_printf_i+0x15c>
 80214a8:	3501      	adds	r5, #1
 80214aa:	68e3      	ldr	r3, [r4, #12]
 80214ac:	9903      	ldr	r1, [sp, #12]
 80214ae:	1a5b      	subs	r3, r3, r1
 80214b0:	42ab      	cmp	r3, r5
 80214b2:	dcf2      	bgt.n	802149a <_printf_i+0x212>
 80214b4:	e7eb      	b.n	802148e <_printf_i+0x206>
 80214b6:	2500      	movs	r5, #0
 80214b8:	f104 0619 	add.w	r6, r4, #25
 80214bc:	e7f5      	b.n	80214aa <_printf_i+0x222>
 80214be:	bf00      	nop
 80214c0:	08023bf1 	.word	0x08023bf1
 80214c4:	08023c02 	.word	0x08023c02

080214c8 <__sflush_r>:
 80214c8:	f9b1 200c 	ldrsh.w	r2, [r1, #12]
 80214cc:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 80214d0:	0716      	lsls	r6, r2, #28
 80214d2:	4605      	mov	r5, r0
 80214d4:	460c      	mov	r4, r1
 80214d6:	d454      	bmi.n	8021582 <__sflush_r+0xba>
 80214d8:	684b      	ldr	r3, [r1, #4]
 80214da:	2b00      	cmp	r3, #0
 80214dc:	dc02      	bgt.n	80214e4 <__sflush_r+0x1c>
 80214de:	6c0b      	ldr	r3, [r1, #64]	@ 0x40
 80214e0:	2b00      	cmp	r3, #0
 80214e2:	dd48      	ble.n	8021576 <__sflush_r+0xae>
 80214e4:	6ae6      	ldr	r6, [r4, #44]	@ 0x2c
 80214e6:	2e00      	cmp	r6, #0
 80214e8:	d045      	beq.n	8021576 <__sflush_r+0xae>
 80214ea:	2300      	movs	r3, #0
 80214ec:	f412 5280 	ands.w	r2, r2, #4096	@ 0x1000
 80214f0:	682f      	ldr	r7, [r5, #0]
 80214f2:	6a21      	ldr	r1, [r4, #32]
 80214f4:	602b      	str	r3, [r5, #0]
 80214f6:	d030      	beq.n	802155a <__sflush_r+0x92>
 80214f8:	6d62      	ldr	r2, [r4, #84]	@ 0x54
 80214fa:	89a3      	ldrh	r3, [r4, #12]
 80214fc:	0759      	lsls	r1, r3, #29
 80214fe:	d505      	bpl.n	802150c <__sflush_r+0x44>
 8021500:	6863      	ldr	r3, [r4, #4]
 8021502:	1ad2      	subs	r2, r2, r3
 8021504:	6b63      	ldr	r3, [r4, #52]	@ 0x34
 8021506:	b10b      	cbz	r3, 802150c <__sflush_r+0x44>
 8021508:	6c23      	ldr	r3, [r4, #64]	@ 0x40
 802150a:	1ad2      	subs	r2, r2, r3
 802150c:	2300      	movs	r3, #0
 802150e:	6ae6      	ldr	r6, [r4, #44]	@ 0x2c
 8021510:	6a21      	ldr	r1, [r4, #32]
 8021512:	4628      	mov	r0, r5
 8021514:	47b0      	blx	r6
 8021516:	1c43      	adds	r3, r0, #1
 8021518:	89a3      	ldrh	r3, [r4, #12]
 802151a:	d106      	bne.n	802152a <__sflush_r+0x62>
 802151c:	6829      	ldr	r1, [r5, #0]
 802151e:	291d      	cmp	r1, #29
 8021520:	d82b      	bhi.n	802157a <__sflush_r+0xb2>
 8021522:	4a2a      	ldr	r2, [pc, #168]	@ (80215cc <__sflush_r+0x104>)
 8021524:	410a      	asrs	r2, r1
 8021526:	07d6      	lsls	r6, r2, #31
 8021528:	d427      	bmi.n	802157a <__sflush_r+0xb2>
 802152a:	2200      	movs	r2, #0
 802152c:	6062      	str	r2, [r4, #4]
 802152e:	04d9      	lsls	r1, r3, #19
 8021530:	6922      	ldr	r2, [r4, #16]
 8021532:	6022      	str	r2, [r4, #0]
 8021534:	d504      	bpl.n	8021540 <__sflush_r+0x78>
 8021536:	1c42      	adds	r2, r0, #1
 8021538:	d101      	bne.n	802153e <__sflush_r+0x76>
 802153a:	682b      	ldr	r3, [r5, #0]
 802153c:	b903      	cbnz	r3, 8021540 <__sflush_r+0x78>
 802153e:	6560      	str	r0, [r4, #84]	@ 0x54
 8021540:	6b61      	ldr	r1, [r4, #52]	@ 0x34
 8021542:	602f      	str	r7, [r5, #0]
 8021544:	b1b9      	cbz	r1, 8021576 <__sflush_r+0xae>
 8021546:	f104 0344 	add.w	r3, r4, #68	@ 0x44
 802154a:	4299      	cmp	r1, r3
 802154c:	d002      	beq.n	8021554 <__sflush_r+0x8c>
 802154e:	4628      	mov	r0, r5
 8021550:	f7ff fca0 	bl	8020e94 <_free_r>
 8021554:	2300      	movs	r3, #0
 8021556:	6363      	str	r3, [r4, #52]	@ 0x34
 8021558:	e00d      	b.n	8021576 <__sflush_r+0xae>
 802155a:	2301      	movs	r3, #1
 802155c:	4628      	mov	r0, r5
 802155e:	47b0      	blx	r6
 8021560:	4602      	mov	r2, r0
 8021562:	1c50      	adds	r0, r2, #1
 8021564:	d1c9      	bne.n	80214fa <__sflush_r+0x32>
 8021566:	682b      	ldr	r3, [r5, #0]
 8021568:	2b00      	cmp	r3, #0
 802156a:	d0c6      	beq.n	80214fa <__sflush_r+0x32>
 802156c:	2b1d      	cmp	r3, #29
 802156e:	d001      	beq.n	8021574 <__sflush_r+0xac>
 8021570:	2b16      	cmp	r3, #22
 8021572:	d11e      	bne.n	80215b2 <__sflush_r+0xea>
 8021574:	602f      	str	r7, [r5, #0]
 8021576:	2000      	movs	r0, #0
 8021578:	e022      	b.n	80215c0 <__sflush_r+0xf8>
 802157a:	f043 0340 	orr.w	r3, r3, #64	@ 0x40
 802157e:	b21b      	sxth	r3, r3
 8021580:	e01b      	b.n	80215ba <__sflush_r+0xf2>
 8021582:	690f      	ldr	r7, [r1, #16]
 8021584:	2f00      	cmp	r7, #0
 8021586:	d0f6      	beq.n	8021576 <__sflush_r+0xae>
 8021588:	0793      	lsls	r3, r2, #30
 802158a:	680e      	ldr	r6, [r1, #0]
 802158c:	bf08      	it	eq
 802158e:	694b      	ldreq	r3, [r1, #20]
 8021590:	600f      	str	r7, [r1, #0]
 8021592:	bf18      	it	ne
 8021594:	2300      	movne	r3, #0
 8021596:	eba6 0807 	sub.w	r8, r6, r7
 802159a:	608b      	str	r3, [r1, #8]
 802159c:	f1b8 0f00 	cmp.w	r8, #0
 80215a0:	dde9      	ble.n	8021576 <__sflush_r+0xae>
 80215a2:	6a21      	ldr	r1, [r4, #32]
 80215a4:	6aa6      	ldr	r6, [r4, #40]	@ 0x28
 80215a6:	4643      	mov	r3, r8
 80215a8:	463a      	mov	r2, r7
 80215aa:	4628      	mov	r0, r5
 80215ac:	47b0      	blx	r6
 80215ae:	2800      	cmp	r0, #0
 80215b0:	dc08      	bgt.n	80215c4 <__sflush_r+0xfc>
 80215b2:	f9b4 300c 	ldrsh.w	r3, [r4, #12]
 80215b6:	f043 0340 	orr.w	r3, r3, #64	@ 0x40
 80215ba:	81a3      	strh	r3, [r4, #12]
 80215bc:	f04f 30ff 	mov.w	r0, #4294967295
 80215c0:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
 80215c4:	4407      	add	r7, r0
 80215c6:	eba8 0800 	sub.w	r8, r8, r0
 80215ca:	e7e7      	b.n	802159c <__sflush_r+0xd4>
 80215cc:	dfbffffe 	.word	0xdfbffffe

080215d0 <_fflush_r>:
 80215d0:	b538      	push	{r3, r4, r5, lr}
 80215d2:	690b      	ldr	r3, [r1, #16]
 80215d4:	4605      	mov	r5, r0
 80215d6:	460c      	mov	r4, r1
 80215d8:	b913      	cbnz	r3, 80215e0 <_fflush_r+0x10>
 80215da:	2500      	movs	r5, #0
 80215dc:	4628      	mov	r0, r5
 80215de:	bd38      	pop	{r3, r4, r5, pc}
 80215e0:	b118      	cbz	r0, 80215ea <_fflush_r+0x1a>
 80215e2:	6a03      	ldr	r3, [r0, #32]
 80215e4:	b90b      	cbnz	r3, 80215ea <_fflush_r+0x1a>
 80215e6:	f7ff fa8f 	bl	8020b08 <__sinit>
 80215ea:	f9b4 300c 	ldrsh.w	r3, [r4, #12]
 80215ee:	2b00      	cmp	r3, #0
 80215f0:	d0f3      	beq.n	80215da <_fflush_r+0xa>
 80215f2:	6e62      	ldr	r2, [r4, #100]	@ 0x64
 80215f4:	07d0      	lsls	r0, r2, #31
 80215f6:	d404      	bmi.n	8021602 <_fflush_r+0x32>
 80215f8:	0599      	lsls	r1, r3, #22
 80215fa:	d402      	bmi.n	8021602 <_fflush_r+0x32>
 80215fc:	6da0      	ldr	r0, [r4, #88]	@ 0x58
 80215fe:	f7ff fbdc 	bl	8020dba <__retarget_lock_acquire_recursive>
 8021602:	4628      	mov	r0, r5
 8021604:	4621      	mov	r1, r4
 8021606:	f7ff ff5f 	bl	80214c8 <__sflush_r>
 802160a:	6e63      	ldr	r3, [r4, #100]	@ 0x64
 802160c:	07da      	lsls	r2, r3, #31
 802160e:	4605      	mov	r5, r0
 8021610:	d4e4      	bmi.n	80215dc <_fflush_r+0xc>
 8021612:	89a3      	ldrh	r3, [r4, #12]
 8021614:	059b      	lsls	r3, r3, #22
 8021616:	d4e1      	bmi.n	80215dc <_fflush_r+0xc>
 8021618:	6da0      	ldr	r0, [r4, #88]	@ 0x58
 802161a:	f7ff fbcf 	bl	8020dbc <__retarget_lock_release_recursive>
 802161e:	e7dd      	b.n	80215dc <_fflush_r+0xc>

08021620 <__swbuf_r>:
 8021620:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 8021622:	460e      	mov	r6, r1
 8021624:	4614      	mov	r4, r2
 8021626:	4605      	mov	r5, r0
 8021628:	b118      	cbz	r0, 8021632 <__swbuf_r+0x12>
 802162a:	6a03      	ldr	r3, [r0, #32]
 802162c:	b90b      	cbnz	r3, 8021632 <__swbuf_r+0x12>
 802162e:	f7ff fa6b 	bl	8020b08 <__sinit>
 8021632:	69a3      	ldr	r3, [r4, #24]
 8021634:	60a3      	str	r3, [r4, #8]
 8021636:	89a3      	ldrh	r3, [r4, #12]
 8021638:	071a      	lsls	r2, r3, #28
 802163a:	d501      	bpl.n	8021640 <__swbuf_r+0x20>
 802163c:	6923      	ldr	r3, [r4, #16]
 802163e:	b943      	cbnz	r3, 8021652 <__swbuf_r+0x32>
 8021640:	4621      	mov	r1, r4
 8021642:	4628      	mov	r0, r5
 8021644:	f000 f82a 	bl	802169c <__swsetup_r>
 8021648:	b118      	cbz	r0, 8021652 <__swbuf_r+0x32>
 802164a:	f04f 37ff 	mov.w	r7, #4294967295
 802164e:	4638      	mov	r0, r7
 8021650:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
 8021652:	6823      	ldr	r3, [r4, #0]
 8021654:	6922      	ldr	r2, [r4, #16]
 8021656:	1a98      	subs	r0, r3, r2
 8021658:	6963      	ldr	r3, [r4, #20]
 802165a:	b2f6      	uxtb	r6, r6
 802165c:	4283      	cmp	r3, r0
 802165e:	4637      	mov	r7, r6
 8021660:	dc05      	bgt.n	802166e <__swbuf_r+0x4e>
 8021662:	4621      	mov	r1, r4
 8021664:	4628      	mov	r0, r5
 8021666:	f7ff ffb3 	bl	80215d0 <_fflush_r>
 802166a:	2800      	cmp	r0, #0
 802166c:	d1ed      	bne.n	802164a <__swbuf_r+0x2a>
 802166e:	68a3      	ldr	r3, [r4, #8]
 8021670:	3b01      	subs	r3, #1
 8021672:	60a3      	str	r3, [r4, #8]
 8021674:	6823      	ldr	r3, [r4, #0]
 8021676:	1c5a      	adds	r2, r3, #1
 8021678:	6022      	str	r2, [r4, #0]
 802167a:	701e      	strb	r6, [r3, #0]
 802167c:	6962      	ldr	r2, [r4, #20]
 802167e:	1c43      	adds	r3, r0, #1
 8021680:	429a      	cmp	r2, r3
 8021682:	d004      	beq.n	802168e <__swbuf_r+0x6e>
 8021684:	89a3      	ldrh	r3, [r4, #12]
 8021686:	07db      	lsls	r3, r3, #31
 8021688:	d5e1      	bpl.n	802164e <__swbuf_r+0x2e>
 802168a:	2e0a      	cmp	r6, #10
 802168c:	d1df      	bne.n	802164e <__swbuf_r+0x2e>
 802168e:	4621      	mov	r1, r4
 8021690:	4628      	mov	r0, r5
 8021692:	f7ff ff9d 	bl	80215d0 <_fflush_r>
 8021696:	2800      	cmp	r0, #0
 8021698:	d0d9      	beq.n	802164e <__swbuf_r+0x2e>
 802169a:	e7d6      	b.n	802164a <__swbuf_r+0x2a>

0802169c <__swsetup_r>:
 802169c:	b538      	push	{r3, r4, r5, lr}
 802169e:	4b29      	ldr	r3, [pc, #164]	@ (8021744 <__swsetup_r+0xa8>)
 80216a0:	4605      	mov	r5, r0
 80216a2:	6818      	ldr	r0, [r3, #0]
 80216a4:	460c      	mov	r4, r1
 80216a6:	b118      	cbz	r0, 80216b0 <__swsetup_r+0x14>
 80216a8:	6a03      	ldr	r3, [r0, #32]
 80216aa:	b90b      	cbnz	r3, 80216b0 <__swsetup_r+0x14>
 80216ac:	f7ff fa2c 	bl	8020b08 <__sinit>
 80216b0:	f9b4 300c 	ldrsh.w	r3, [r4, #12]
 80216b4:	0719      	lsls	r1, r3, #28
 80216b6:	d422      	bmi.n	80216fe <__swsetup_r+0x62>
 80216b8:	06da      	lsls	r2, r3, #27
 80216ba:	d407      	bmi.n	80216cc <__swsetup_r+0x30>
 80216bc:	2209      	movs	r2, #9
 80216be:	602a      	str	r2, [r5, #0]
 80216c0:	f043 0340 	orr.w	r3, r3, #64	@ 0x40
 80216c4:	81a3      	strh	r3, [r4, #12]
 80216c6:	f04f 30ff 	mov.w	r0, #4294967295
 80216ca:	e033      	b.n	8021734 <__swsetup_r+0x98>
 80216cc:	0758      	lsls	r0, r3, #29
 80216ce:	d512      	bpl.n	80216f6 <__swsetup_r+0x5a>
 80216d0:	6b61      	ldr	r1, [r4, #52]	@ 0x34
 80216d2:	b141      	cbz	r1, 80216e6 <__swsetup_r+0x4a>
 80216d4:	f104 0344 	add.w	r3, r4, #68	@ 0x44
 80216d8:	4299      	cmp	r1, r3
 80216da:	d002      	beq.n	80216e2 <__swsetup_r+0x46>
 80216dc:	4628      	mov	r0, r5
 80216de:	f7ff fbd9 	bl	8020e94 <_free_r>
 80216e2:	2300      	movs	r3, #0
 80216e4:	6363      	str	r3, [r4, #52]	@ 0x34
 80216e6:	89a3      	ldrh	r3, [r4, #12]
 80216e8:	f023 0324 	bic.w	r3, r3, #36	@ 0x24
 80216ec:	81a3      	strh	r3, [r4, #12]
 80216ee:	2300      	movs	r3, #0
 80216f0:	6063      	str	r3, [r4, #4]
 80216f2:	6923      	ldr	r3, [r4, #16]
 80216f4:	6023      	str	r3, [r4, #0]
 80216f6:	89a3      	ldrh	r3, [r4, #12]
 80216f8:	f043 0308 	orr.w	r3, r3, #8
 80216fc:	81a3      	strh	r3, [r4, #12]
 80216fe:	6923      	ldr	r3, [r4, #16]
 8021700:	b94b      	cbnz	r3, 8021716 <__swsetup_r+0x7a>
 8021702:	89a3      	ldrh	r3, [r4, #12]
 8021704:	f403 7320 	and.w	r3, r3, #640	@ 0x280
 8021708:	f5b3 7f00 	cmp.w	r3, #512	@ 0x200
 802170c:	d003      	beq.n	8021716 <__swsetup_r+0x7a>
 802170e:	4621      	mov	r1, r4
 8021710:	4628      	mov	r0, r5
 8021712:	f000 f83f 	bl	8021794 <__smakebuf_r>
 8021716:	f9b4 300c 	ldrsh.w	r3, [r4, #12]
 802171a:	f013 0201 	ands.w	r2, r3, #1
 802171e:	d00a      	beq.n	8021736 <__swsetup_r+0x9a>
 8021720:	2200      	movs	r2, #0
 8021722:	60a2      	str	r2, [r4, #8]
 8021724:	6962      	ldr	r2, [r4, #20]
 8021726:	4252      	negs	r2, r2
 8021728:	61a2      	str	r2, [r4, #24]
 802172a:	6922      	ldr	r2, [r4, #16]
 802172c:	b942      	cbnz	r2, 8021740 <__swsetup_r+0xa4>
 802172e:	f013 0080 	ands.w	r0, r3, #128	@ 0x80
 8021732:	d1c5      	bne.n	80216c0 <__swsetup_r+0x24>
 8021734:	bd38      	pop	{r3, r4, r5, pc}
 8021736:	0799      	lsls	r1, r3, #30
 8021738:	bf58      	it	pl
 802173a:	6962      	ldrpl	r2, [r4, #20]
 802173c:	60a2      	str	r2, [r4, #8]
 802173e:	e7f4      	b.n	802172a <__swsetup_r+0x8e>
 8021740:	2000      	movs	r0, #0
 8021742:	e7f7      	b.n	8021734 <__swsetup_r+0x98>
 8021744:	200000b0 	.word	0x200000b0

08021748 <__swhatbuf_r>:
 8021748:	b570      	push	{r4, r5, r6, lr}
 802174a:	460c      	mov	r4, r1
 802174c:	f9b1 100e 	ldrsh.w	r1, [r1, #14]
 8021750:	2900      	cmp	r1, #0
 8021752:	b096      	sub	sp, #88	@ 0x58
 8021754:	4615      	mov	r5, r2
 8021756:	461e      	mov	r6, r3
 8021758:	da0d      	bge.n	8021776 <__swhatbuf_r+0x2e>
 802175a:	89a3      	ldrh	r3, [r4, #12]
 802175c:	f013 0f80 	tst.w	r3, #128	@ 0x80
 8021760:	f04f 0100 	mov.w	r1, #0
 8021764:	bf14      	ite	ne
 8021766:	2340      	movne	r3, #64	@ 0x40
 8021768:	f44f 6380 	moveq.w	r3, #1024	@ 0x400
 802176c:	2000      	movs	r0, #0
 802176e:	6031      	str	r1, [r6, #0]
 8021770:	602b      	str	r3, [r5, #0]
 8021772:	b016      	add	sp, #88	@ 0x58
 8021774:	bd70      	pop	{r4, r5, r6, pc}
 8021776:	466a      	mov	r2, sp
 8021778:	f000 f848 	bl	802180c <_fstat_r>
 802177c:	2800      	cmp	r0, #0
 802177e:	dbec      	blt.n	802175a <__swhatbuf_r+0x12>
 8021780:	9901      	ldr	r1, [sp, #4]
 8021782:	f401 4170 	and.w	r1, r1, #61440	@ 0xf000
 8021786:	f5a1 5300 	sub.w	r3, r1, #8192	@ 0x2000
 802178a:	4259      	negs	r1, r3
 802178c:	4159      	adcs	r1, r3
 802178e:	f44f 6380 	mov.w	r3, #1024	@ 0x400
 8021792:	e7eb      	b.n	802176c <__swhatbuf_r+0x24>

08021794 <__smakebuf_r>:
 8021794:	898b      	ldrh	r3, [r1, #12]
 8021796:	b5f7      	push	{r0, r1, r2, r4, r5, r6, r7, lr}
 8021798:	079d      	lsls	r5, r3, #30
 802179a:	4606      	mov	r6, r0
 802179c:	460c      	mov	r4, r1
 802179e:	d507      	bpl.n	80217b0 <__smakebuf_r+0x1c>
 80217a0:	f104 0347 	add.w	r3, r4, #71	@ 0x47
 80217a4:	6023      	str	r3, [r4, #0]
 80217a6:	6123      	str	r3, [r4, #16]
 80217a8:	2301      	movs	r3, #1
 80217aa:	6163      	str	r3, [r4, #20]
 80217ac:	b003      	add	sp, #12
 80217ae:	bdf0      	pop	{r4, r5, r6, r7, pc}
 80217b0:	ab01      	add	r3, sp, #4
 80217b2:	466a      	mov	r2, sp
 80217b4:	f7ff ffc8 	bl	8021748 <__swhatbuf_r>
 80217b8:	9f00      	ldr	r7, [sp, #0]
 80217ba:	4605      	mov	r5, r0
 80217bc:	4639      	mov	r1, r7
 80217be:	4630      	mov	r0, r6
 80217c0:	f7ff f87c 	bl	80208bc <_malloc_r>
 80217c4:	b948      	cbnz	r0, 80217da <__smakebuf_r+0x46>
 80217c6:	f9b4 300c 	ldrsh.w	r3, [r4, #12]
 80217ca:	059a      	lsls	r2, r3, #22
 80217cc:	d4ee      	bmi.n	80217ac <__smakebuf_r+0x18>
 80217ce:	f023 0303 	bic.w	r3, r3, #3
 80217d2:	f043 0302 	orr.w	r3, r3, #2
 80217d6:	81a3      	strh	r3, [r4, #12]
 80217d8:	e7e2      	b.n	80217a0 <__smakebuf_r+0xc>
 80217da:	89a3      	ldrh	r3, [r4, #12]
 80217dc:	6020      	str	r0, [r4, #0]
 80217de:	f043 0380 	orr.w	r3, r3, #128	@ 0x80
 80217e2:	81a3      	strh	r3, [r4, #12]
 80217e4:	9b01      	ldr	r3, [sp, #4]
 80217e6:	e9c4 0704 	strd	r0, r7, [r4, #16]
 80217ea:	b15b      	cbz	r3, 8021804 <__smakebuf_r+0x70>
 80217ec:	f9b4 100e 	ldrsh.w	r1, [r4, #14]
 80217f0:	4630      	mov	r0, r6
 80217f2:	f000 f81d 	bl	8021830 <_isatty_r>
 80217f6:	b128      	cbz	r0, 8021804 <__smakebuf_r+0x70>
 80217f8:	89a3      	ldrh	r3, [r4, #12]
 80217fa:	f023 0303 	bic.w	r3, r3, #3
 80217fe:	f043 0301 	orr.w	r3, r3, #1
 8021802:	81a3      	strh	r3, [r4, #12]
 8021804:	89a3      	ldrh	r3, [r4, #12]
 8021806:	431d      	orrs	r5, r3
 8021808:	81a5      	strh	r5, [r4, #12]
 802180a:	e7cf      	b.n	80217ac <__smakebuf_r+0x18>

0802180c <_fstat_r>:
 802180c:	b538      	push	{r3, r4, r5, lr}
 802180e:	4d07      	ldr	r5, [pc, #28]	@ (802182c <_fstat_r+0x20>)
 8021810:	2300      	movs	r3, #0
 8021812:	4604      	mov	r4, r0
 8021814:	4608      	mov	r0, r1
 8021816:	4611      	mov	r1, r2
 8021818:	602b      	str	r3, [r5, #0]
 802181a:	f7df fd3f 	bl	800129c <_fstat>
 802181e:	1c43      	adds	r3, r0, #1
 8021820:	d102      	bne.n	8021828 <_fstat_r+0x1c>
 8021822:	682b      	ldr	r3, [r5, #0]
 8021824:	b103      	cbz	r3, 8021828 <_fstat_r+0x1c>
 8021826:	6023      	str	r3, [r4, #0]
 8021828:	bd38      	pop	{r3, r4, r5, pc}
 802182a:	bf00      	nop
 802182c:	200037f4 	.word	0x200037f4

08021830 <_isatty_r>:
 8021830:	b538      	push	{r3, r4, r5, lr}
 8021832:	4d06      	ldr	r5, [pc, #24]	@ (802184c <_isatty_r+0x1c>)
 8021834:	2300      	movs	r3, #0
 8021836:	4604      	mov	r4, r0
 8021838:	4608      	mov	r0, r1
 802183a:	602b      	str	r3, [r5, #0]
 802183c:	f7df fd3e 	bl	80012bc <_isatty>
 8021840:	1c43      	adds	r3, r0, #1
 8021842:	d102      	bne.n	802184a <_isatty_r+0x1a>
 8021844:	682b      	ldr	r3, [r5, #0]
 8021846:	b103      	cbz	r3, 802184a <_isatty_r+0x1a>
 8021848:	6023      	str	r3, [r4, #0]
 802184a:	bd38      	pop	{r3, r4, r5, pc}
 802184c:	200037f4 	.word	0x200037f4

08021850 <_init>:
 8021850:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 8021852:	bf00      	nop
 8021854:	bcf8      	pop	{r3, r4, r5, r6, r7}
 8021856:	bc08      	pop	{r3}
 8021858:	469e      	mov	lr, r3
 802185a:	4770      	bx	lr

0802185c <_fini>:
 802185c:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 802185e:	bf00      	nop
 8021860:	bcf8      	pop	{r3, r4, r5, r6, r7}
 8021862:	bc08      	pop	{r3}
 8021864:	469e      	mov	lr, r3
 8021866:	4770      	bx	lr
