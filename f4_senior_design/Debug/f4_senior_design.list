
f4_senior_design.elf:     file format elf32-littlearm

Sections:
Idx Name          Size      VMA       LMA       File off  Algn
  0 .isr_vector   000001c4  08000000  08000000  00001000  2**0
                  CONTENTS, ALLOC, LOAD, READONLY, DATA
  1 .text         00023318  080001d0  080001d0  000011d0  2**4
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  2 .rodata       000023dc  080234e8  080234e8  000244e8  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, DATA
  3 FontFlashSection 00006996  080258c4  080258c4  000268c4  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, DATA
  4 FontSearchFlashSection 000002b4  0802c25c  0802c25c  0002d25c  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, DATA
  5 ExtFlashSection 00042904  0802c510  0802c510  0002d510  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, DATA
  6 TextFlashSection 00000060  0806ee14  0806ee14  0006fe14  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, DATA
  7 .ARM.extab    00000000  0806ee74  0806ee74  00070320  2**0
                  CONTENTS
  8 .ARM          00000008  0806ee74  0806ee74  0006fe74  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, DATA
  9 .preinit_array 00000000  0806ee7c  0806ee7c  00070320  2**0
                  CONTENTS, ALLOC, LOAD, DATA
 10 .init_array   00000018  0806ee7c  0806ee7c  0006fe7c  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, DATA
 11 .fini_array   0000000c  0806ee94  0806ee94  0006fe94  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, DATA
 12 .data         00000104  20000000  0806eea0  00070000  2**2
                  CONTENTS, ALLOC, LOAD, DATA
 13 TouchGFX_ScratchbufferA 00000100  20000120  0806efa4  00070120  2**5
                  CONTENTS, ALLOC, LOAD, DATA
 14 TouchGFX_ScratchbufferB 00000100  20000220  0806f0a4  00070220  2**5
                  CONTENTS, ALLOC, LOAD, DATA
 15 .bss          000037d4  20000320  0806f1a4  00070320  2**2
                  ALLOC
 16 ._user_heap_stack 00000604  20003af4  0806f1a4  00070af4  2**0
                  ALLOC
 17 .ARM.attributes 00000030  00000000  00000000  00070320  2**0
                  CONTENTS, READONLY
 18 .debug_info   0007c898  00000000  00000000  00070350  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 19 .debug_abbrev 0000de99  00000000  00000000  000ecbe8  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 20 .debug_aranges 00002a30  00000000  00000000  000faa88  2**3
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 21 .debug_rnglists 00001f7f  00000000  00000000  000fd4b8  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 22 .debug_macro  0002d2f0  00000000  00000000  000ff437  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 23 .debug_line   000340f8  00000000  00000000  0012c727  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 24 .debug_str    000fbf60  00000000  00000000  0016081f  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 25 .comment      000000c2  00000000  00000000  0025c77f  2**0
                  CONTENTS, READONLY
 26 .debug_frame  0000bd78  00000000  00000000  0025c844  2**2
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 27 .debug_line_str 0000006c  00000000  00000000  002685bc  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS

Disassembly of section .text:

080001d0 <__do_global_dtors_aux>:
 80001d0:	b510      	push	{r4, lr}
 80001d2:	4c05      	ldr	r4, [pc, #20]	@ (80001e8 <__do_global_dtors_aux+0x18>)
 80001d4:	7823      	ldrb	r3, [r4, #0]
 80001d6:	b933      	cbnz	r3, 80001e6 <__do_global_dtors_aux+0x16>
 80001d8:	4b04      	ldr	r3, [pc, #16]	@ (80001ec <__do_global_dtors_aux+0x1c>)
 80001da:	b113      	cbz	r3, 80001e2 <__do_global_dtors_aux+0x12>
 80001dc:	4804      	ldr	r0, [pc, #16]	@ (80001f0 <__do_global_dtors_aux+0x20>)
 80001de:	f3af 8000 	nop.w
 80001e2:	2301      	movs	r3, #1
 80001e4:	7023      	strb	r3, [r4, #0]
 80001e6:	bd10      	pop	{r4, pc}
 80001e8:	20000320 	.word	0x20000320
 80001ec:	00000000 	.word	0x00000000
 80001f0:	080234d0 	.word	0x080234d0

080001f4 <frame_dummy>:
 80001f4:	b508      	push	{r3, lr}
 80001f6:	4b03      	ldr	r3, [pc, #12]	@ (8000204 <frame_dummy+0x10>)
 80001f8:	b11b      	cbz	r3, 8000202 <frame_dummy+0xe>
 80001fa:	4903      	ldr	r1, [pc, #12]	@ (8000208 <frame_dummy+0x14>)
 80001fc:	4803      	ldr	r0, [pc, #12]	@ (800020c <frame_dummy+0x18>)
 80001fe:	f3af 8000 	nop.w
 8000202:	bd08      	pop	{r3, pc}
 8000204:	00000000 	.word	0x00000000
 8000208:	20000324 	.word	0x20000324
 800020c:	080234d0 	.word	0x080234d0

08000210 <memchr>:
 8000210:	f001 01ff 	and.w	r1, r1, #255	@ 0xff
 8000214:	2a10      	cmp	r2, #16
 8000216:	db2b      	blt.n	8000270 <memchr+0x60>
 8000218:	f010 0f07 	tst.w	r0, #7
 800021c:	d008      	beq.n	8000230 <memchr+0x20>
 800021e:	f810 3b01 	ldrb.w	r3, [r0], #1
 8000222:	3a01      	subs	r2, #1
 8000224:	428b      	cmp	r3, r1
 8000226:	d02d      	beq.n	8000284 <memchr+0x74>
 8000228:	f010 0f07 	tst.w	r0, #7
 800022c:	b342      	cbz	r2, 8000280 <memchr+0x70>
 800022e:	d1f6      	bne.n	800021e <memchr+0xe>
 8000230:	b4f0      	push	{r4, r5, r6, r7}
 8000232:	ea41 2101 	orr.w	r1, r1, r1, lsl #8
 8000236:	ea41 4101 	orr.w	r1, r1, r1, lsl #16
 800023a:	f022 0407 	bic.w	r4, r2, #7
 800023e:	f07f 0700 	mvns.w	r7, #0
 8000242:	2300      	movs	r3, #0
 8000244:	e8f0 5602 	ldrd	r5, r6, [r0], #8
 8000248:	3c08      	subs	r4, #8
 800024a:	ea85 0501 	eor.w	r5, r5, r1
 800024e:	ea86 0601 	eor.w	r6, r6, r1
 8000252:	fa85 f547 	uadd8	r5, r5, r7
 8000256:	faa3 f587 	sel	r5, r3, r7
 800025a:	fa86 f647 	uadd8	r6, r6, r7
 800025e:	faa5 f687 	sel	r6, r5, r7
 8000262:	b98e      	cbnz	r6, 8000288 <memchr+0x78>
 8000264:	d1ee      	bne.n	8000244 <memchr+0x34>
 8000266:	bcf0      	pop	{r4, r5, r6, r7}
 8000268:	f001 01ff 	and.w	r1, r1, #255	@ 0xff
 800026c:	f002 0207 	and.w	r2, r2, #7
 8000270:	b132      	cbz	r2, 8000280 <memchr+0x70>
 8000272:	f810 3b01 	ldrb.w	r3, [r0], #1
 8000276:	3a01      	subs	r2, #1
 8000278:	ea83 0301 	eor.w	r3, r3, r1
 800027c:	b113      	cbz	r3, 8000284 <memchr+0x74>
 800027e:	d1f8      	bne.n	8000272 <memchr+0x62>
 8000280:	2000      	movs	r0, #0
 8000282:	4770      	bx	lr
 8000284:	3801      	subs	r0, #1
 8000286:	4770      	bx	lr
 8000288:	2d00      	cmp	r5, #0
 800028a:	bf06      	itte	eq
 800028c:	4635      	moveq	r5, r6
 800028e:	3803      	subeq	r0, #3
 8000290:	3807      	subne	r0, #7
 8000292:	f015 0f01 	tst.w	r5, #1
 8000296:	d107      	bne.n	80002a8 <memchr+0x98>
 8000298:	3001      	adds	r0, #1
 800029a:	f415 7f80 	tst.w	r5, #256	@ 0x100
 800029e:	bf02      	ittt	eq
 80002a0:	3001      	addeq	r0, #1
 80002a2:	f415 3fc0 	tsteq.w	r5, #98304	@ 0x18000
 80002a6:	3001      	addeq	r0, #1
 80002a8:	bcf0      	pop	{r4, r5, r6, r7}
 80002aa:	3801      	subs	r0, #1
 80002ac:	4770      	bx	lr
 80002ae:	bf00      	nop

080002b0 <__aeabi_drsub>:
 80002b0:	f081 4100 	eor.w	r1, r1, #2147483648	@ 0x80000000
 80002b4:	e002      	b.n	80002bc <__adddf3>
 80002b6:	bf00      	nop

080002b8 <__aeabi_dsub>:
 80002b8:	f083 4300 	eor.w	r3, r3, #2147483648	@ 0x80000000

080002bc <__adddf3>:
 80002bc:	b530      	push	{r4, r5, lr}
 80002be:	ea4f 0441 	mov.w	r4, r1, lsl #1
 80002c2:	ea4f 0543 	mov.w	r5, r3, lsl #1
 80002c6:	ea94 0f05 	teq	r4, r5
 80002ca:	bf08      	it	eq
 80002cc:	ea90 0f02 	teqeq	r0, r2
 80002d0:	bf1f      	itttt	ne
 80002d2:	ea54 0c00 	orrsne.w	ip, r4, r0
 80002d6:	ea55 0c02 	orrsne.w	ip, r5, r2
 80002da:	ea7f 5c64 	mvnsne.w	ip, r4, asr #21
 80002de:	ea7f 5c65 	mvnsne.w	ip, r5, asr #21
 80002e2:	f000 80e2 	beq.w	80004aa <__adddf3+0x1ee>
 80002e6:	ea4f 5454 	mov.w	r4, r4, lsr #21
 80002ea:	ebd4 5555 	rsbs	r5, r4, r5, lsr #21
 80002ee:	bfb8      	it	lt
 80002f0:	426d      	neglt	r5, r5
 80002f2:	dd0c      	ble.n	800030e <__adddf3+0x52>
 80002f4:	442c      	add	r4, r5
 80002f6:	ea80 0202 	eor.w	r2, r0, r2
 80002fa:	ea81 0303 	eor.w	r3, r1, r3
 80002fe:	ea82 0000 	eor.w	r0, r2, r0
 8000302:	ea83 0101 	eor.w	r1, r3, r1
 8000306:	ea80 0202 	eor.w	r2, r0, r2
 800030a:	ea81 0303 	eor.w	r3, r1, r3
 800030e:	2d36      	cmp	r5, #54	@ 0x36
 8000310:	bf88      	it	hi
 8000312:	bd30      	pophi	{r4, r5, pc}
 8000314:	f011 4f00 	tst.w	r1, #2147483648	@ 0x80000000
 8000318:	ea4f 3101 	mov.w	r1, r1, lsl #12
 800031c:	f44f 1c80 	mov.w	ip, #1048576	@ 0x100000
 8000320:	ea4c 3111 	orr.w	r1, ip, r1, lsr #12
 8000324:	d002      	beq.n	800032c <__adddf3+0x70>
 8000326:	4240      	negs	r0, r0
 8000328:	eb61 0141 	sbc.w	r1, r1, r1, lsl #1
 800032c:	f013 4f00 	tst.w	r3, #2147483648	@ 0x80000000
 8000330:	ea4f 3303 	mov.w	r3, r3, lsl #12
 8000334:	ea4c 3313 	orr.w	r3, ip, r3, lsr #12
 8000338:	d002      	beq.n	8000340 <__adddf3+0x84>
 800033a:	4252      	negs	r2, r2
 800033c:	eb63 0343 	sbc.w	r3, r3, r3, lsl #1
 8000340:	ea94 0f05 	teq	r4, r5
 8000344:	f000 80a7 	beq.w	8000496 <__adddf3+0x1da>
 8000348:	f1a4 0401 	sub.w	r4, r4, #1
 800034c:	f1d5 0e20 	rsbs	lr, r5, #32
 8000350:	db0d      	blt.n	800036e <__adddf3+0xb2>
 8000352:	fa02 fc0e 	lsl.w	ip, r2, lr
 8000356:	fa22 f205 	lsr.w	r2, r2, r5
 800035a:	1880      	adds	r0, r0, r2
 800035c:	f141 0100 	adc.w	r1, r1, #0
 8000360:	fa03 f20e 	lsl.w	r2, r3, lr
 8000364:	1880      	adds	r0, r0, r2
 8000366:	fa43 f305 	asr.w	r3, r3, r5
 800036a:	4159      	adcs	r1, r3
 800036c:	e00e      	b.n	800038c <__adddf3+0xd0>
 800036e:	f1a5 0520 	sub.w	r5, r5, #32
 8000372:	f10e 0e20 	add.w	lr, lr, #32
 8000376:	2a01      	cmp	r2, #1
 8000378:	fa03 fc0e 	lsl.w	ip, r3, lr
 800037c:	bf28      	it	cs
 800037e:	f04c 0c02 	orrcs.w	ip, ip, #2
 8000382:	fa43 f305 	asr.w	r3, r3, r5
 8000386:	18c0      	adds	r0, r0, r3
 8000388:	eb51 71e3 	adcs.w	r1, r1, r3, asr #31
 800038c:	f001 4500 	and.w	r5, r1, #2147483648	@ 0x80000000
 8000390:	d507      	bpl.n	80003a2 <__adddf3+0xe6>
 8000392:	f04f 0e00 	mov.w	lr, #0
 8000396:	f1dc 0c00 	rsbs	ip, ip, #0
 800039a:	eb7e 0000 	sbcs.w	r0, lr, r0
 800039e:	eb6e 0101 	sbc.w	r1, lr, r1
 80003a2:	f5b1 1f80 	cmp.w	r1, #1048576	@ 0x100000
 80003a6:	d31b      	bcc.n	80003e0 <__adddf3+0x124>
 80003a8:	f5b1 1f00 	cmp.w	r1, #2097152	@ 0x200000
 80003ac:	d30c      	bcc.n	80003c8 <__adddf3+0x10c>
 80003ae:	0849      	lsrs	r1, r1, #1
 80003b0:	ea5f 0030 	movs.w	r0, r0, rrx
 80003b4:	ea4f 0c3c 	mov.w	ip, ip, rrx
 80003b8:	f104 0401 	add.w	r4, r4, #1
 80003bc:	ea4f 5244 	mov.w	r2, r4, lsl #21
 80003c0:	f512 0f80 	cmn.w	r2, #4194304	@ 0x400000
 80003c4:	f080 809a 	bcs.w	80004fc <__adddf3+0x240>
 80003c8:	f1bc 4f00 	cmp.w	ip, #2147483648	@ 0x80000000
 80003cc:	bf08      	it	eq
 80003ce:	ea5f 0c50 	movseq.w	ip, r0, lsr #1
 80003d2:	f150 0000 	adcs.w	r0, r0, #0
 80003d6:	eb41 5104 	adc.w	r1, r1, r4, lsl #20
 80003da:	ea41 0105 	orr.w	r1, r1, r5
 80003de:	bd30      	pop	{r4, r5, pc}
 80003e0:	ea5f 0c4c 	movs.w	ip, ip, lsl #1
 80003e4:	4140      	adcs	r0, r0
 80003e6:	eb41 0101 	adc.w	r1, r1, r1
 80003ea:	3c01      	subs	r4, #1
 80003ec:	bf28      	it	cs
 80003ee:	f5b1 1f80 	cmpcs.w	r1, #1048576	@ 0x100000
 80003f2:	d2e9      	bcs.n	80003c8 <__adddf3+0x10c>
 80003f4:	f091 0f00 	teq	r1, #0
 80003f8:	bf04      	itt	eq
 80003fa:	4601      	moveq	r1, r0
 80003fc:	2000      	moveq	r0, #0
 80003fe:	fab1 f381 	clz	r3, r1
 8000402:	bf08      	it	eq
 8000404:	3320      	addeq	r3, #32
 8000406:	f1a3 030b 	sub.w	r3, r3, #11
 800040a:	f1b3 0220 	subs.w	r2, r3, #32
 800040e:	da0c      	bge.n	800042a <__adddf3+0x16e>
 8000410:	320c      	adds	r2, #12
 8000412:	dd08      	ble.n	8000426 <__adddf3+0x16a>
 8000414:	f102 0c14 	add.w	ip, r2, #20
 8000418:	f1c2 020c 	rsb	r2, r2, #12
 800041c:	fa01 f00c 	lsl.w	r0, r1, ip
 8000420:	fa21 f102 	lsr.w	r1, r1, r2
 8000424:	e00c      	b.n	8000440 <__adddf3+0x184>
 8000426:	f102 0214 	add.w	r2, r2, #20
 800042a:	bfd8      	it	le
 800042c:	f1c2 0c20 	rsble	ip, r2, #32
 8000430:	fa01 f102 	lsl.w	r1, r1, r2
 8000434:	fa20 fc0c 	lsr.w	ip, r0, ip
 8000438:	bfdc      	itt	le
 800043a:	ea41 010c 	orrle.w	r1, r1, ip
 800043e:	4090      	lslle	r0, r2
 8000440:	1ae4      	subs	r4, r4, r3
 8000442:	bfa2      	ittt	ge
 8000444:	eb01 5104 	addge.w	r1, r1, r4, lsl #20
 8000448:	4329      	orrge	r1, r5
 800044a:	bd30      	popge	{r4, r5, pc}
 800044c:	ea6f 0404 	mvn.w	r4, r4
 8000450:	3c1f      	subs	r4, #31
 8000452:	da1c      	bge.n	800048e <__adddf3+0x1d2>
 8000454:	340c      	adds	r4, #12
 8000456:	dc0e      	bgt.n	8000476 <__adddf3+0x1ba>
 8000458:	f104 0414 	add.w	r4, r4, #20
 800045c:	f1c4 0220 	rsb	r2, r4, #32
 8000460:	fa20 f004 	lsr.w	r0, r0, r4
 8000464:	fa01 f302 	lsl.w	r3, r1, r2
 8000468:	ea40 0003 	orr.w	r0, r0, r3
 800046c:	fa21 f304 	lsr.w	r3, r1, r4
 8000470:	ea45 0103 	orr.w	r1, r5, r3
 8000474:	bd30      	pop	{r4, r5, pc}
 8000476:	f1c4 040c 	rsb	r4, r4, #12
 800047a:	f1c4 0220 	rsb	r2, r4, #32
 800047e:	fa20 f002 	lsr.w	r0, r0, r2
 8000482:	fa01 f304 	lsl.w	r3, r1, r4
 8000486:	ea40 0003 	orr.w	r0, r0, r3
 800048a:	4629      	mov	r1, r5
 800048c:	bd30      	pop	{r4, r5, pc}
 800048e:	fa21 f004 	lsr.w	r0, r1, r4
 8000492:	4629      	mov	r1, r5
 8000494:	bd30      	pop	{r4, r5, pc}
 8000496:	f094 0f00 	teq	r4, #0
 800049a:	f483 1380 	eor.w	r3, r3, #1048576	@ 0x100000
 800049e:	bf06      	itte	eq
 80004a0:	f481 1180 	eoreq.w	r1, r1, #1048576	@ 0x100000
 80004a4:	3401      	addeq	r4, #1
 80004a6:	3d01      	subne	r5, #1
 80004a8:	e74e      	b.n	8000348 <__adddf3+0x8c>
 80004aa:	ea7f 5c64 	mvns.w	ip, r4, asr #21
 80004ae:	bf18      	it	ne
 80004b0:	ea7f 5c65 	mvnsne.w	ip, r5, asr #21
 80004b4:	d029      	beq.n	800050a <__adddf3+0x24e>
 80004b6:	ea94 0f05 	teq	r4, r5
 80004ba:	bf08      	it	eq
 80004bc:	ea90 0f02 	teqeq	r0, r2
 80004c0:	d005      	beq.n	80004ce <__adddf3+0x212>
 80004c2:	ea54 0c00 	orrs.w	ip, r4, r0
 80004c6:	bf04      	itt	eq
 80004c8:	4619      	moveq	r1, r3
 80004ca:	4610      	moveq	r0, r2
 80004cc:	bd30      	pop	{r4, r5, pc}
 80004ce:	ea91 0f03 	teq	r1, r3
 80004d2:	bf1e      	ittt	ne
 80004d4:	2100      	movne	r1, #0
 80004d6:	2000      	movne	r0, #0
 80004d8:	bd30      	popne	{r4, r5, pc}
 80004da:	ea5f 5c54 	movs.w	ip, r4, lsr #21
 80004de:	d105      	bne.n	80004ec <__adddf3+0x230>
 80004e0:	0040      	lsls	r0, r0, #1
 80004e2:	4149      	adcs	r1, r1
 80004e4:	bf28      	it	cs
 80004e6:	f041 4100 	orrcs.w	r1, r1, #2147483648	@ 0x80000000
 80004ea:	bd30      	pop	{r4, r5, pc}
 80004ec:	f514 0480 	adds.w	r4, r4, #4194304	@ 0x400000
 80004f0:	bf3c      	itt	cc
 80004f2:	f501 1180 	addcc.w	r1, r1, #1048576	@ 0x100000
 80004f6:	bd30      	popcc	{r4, r5, pc}
 80004f8:	f001 4500 	and.w	r5, r1, #2147483648	@ 0x80000000
 80004fc:	f045 41fe 	orr.w	r1, r5, #2130706432	@ 0x7f000000
 8000500:	f441 0170 	orr.w	r1, r1, #15728640	@ 0xf00000
 8000504:	f04f 0000 	mov.w	r0, #0
 8000508:	bd30      	pop	{r4, r5, pc}
 800050a:	ea7f 5c64 	mvns.w	ip, r4, asr #21
 800050e:	bf1a      	itte	ne
 8000510:	4619      	movne	r1, r3
 8000512:	4610      	movne	r0, r2
 8000514:	ea7f 5c65 	mvnseq.w	ip, r5, asr #21
 8000518:	bf1c      	itt	ne
 800051a:	460b      	movne	r3, r1
 800051c:	4602      	movne	r2, r0
 800051e:	ea50 3401 	orrs.w	r4, r0, r1, lsl #12
 8000522:	bf06      	itte	eq
 8000524:	ea52 3503 	orrseq.w	r5, r2, r3, lsl #12
 8000528:	ea91 0f03 	teqeq	r1, r3
 800052c:	f441 2100 	orrne.w	r1, r1, #524288	@ 0x80000
 8000530:	bd30      	pop	{r4, r5, pc}
 8000532:	bf00      	nop

08000534 <__aeabi_ui2d>:
 8000534:	f090 0f00 	teq	r0, #0
 8000538:	bf04      	itt	eq
 800053a:	2100      	moveq	r1, #0
 800053c:	4770      	bxeq	lr
 800053e:	b530      	push	{r4, r5, lr}
 8000540:	f44f 6480 	mov.w	r4, #1024	@ 0x400
 8000544:	f104 0432 	add.w	r4, r4, #50	@ 0x32
 8000548:	f04f 0500 	mov.w	r5, #0
 800054c:	f04f 0100 	mov.w	r1, #0
 8000550:	e750      	b.n	80003f4 <__adddf3+0x138>
 8000552:	bf00      	nop

08000554 <__aeabi_i2d>:
 8000554:	f090 0f00 	teq	r0, #0
 8000558:	bf04      	itt	eq
 800055a:	2100      	moveq	r1, #0
 800055c:	4770      	bxeq	lr
 800055e:	b530      	push	{r4, r5, lr}
 8000560:	f44f 6480 	mov.w	r4, #1024	@ 0x400
 8000564:	f104 0432 	add.w	r4, r4, #50	@ 0x32
 8000568:	f010 4500 	ands.w	r5, r0, #2147483648	@ 0x80000000
 800056c:	bf48      	it	mi
 800056e:	4240      	negmi	r0, r0
 8000570:	f04f 0100 	mov.w	r1, #0
 8000574:	e73e      	b.n	80003f4 <__adddf3+0x138>
 8000576:	bf00      	nop

08000578 <__aeabi_f2d>:
 8000578:	0042      	lsls	r2, r0, #1
 800057a:	ea4f 01e2 	mov.w	r1, r2, asr #3
 800057e:	ea4f 0131 	mov.w	r1, r1, rrx
 8000582:	ea4f 7002 	mov.w	r0, r2, lsl #28
 8000586:	bf1f      	itttt	ne
 8000588:	f012 437f 	andsne.w	r3, r2, #4278190080	@ 0xff000000
 800058c:	f093 4f7f 	teqne	r3, #4278190080	@ 0xff000000
 8000590:	f081 5160 	eorne.w	r1, r1, #939524096	@ 0x38000000
 8000594:	4770      	bxne	lr
 8000596:	f032 427f 	bics.w	r2, r2, #4278190080	@ 0xff000000
 800059a:	bf08      	it	eq
 800059c:	4770      	bxeq	lr
 800059e:	f093 4f7f 	teq	r3, #4278190080	@ 0xff000000
 80005a2:	bf04      	itt	eq
 80005a4:	f441 2100 	orreq.w	r1, r1, #524288	@ 0x80000
 80005a8:	4770      	bxeq	lr
 80005aa:	b530      	push	{r4, r5, lr}
 80005ac:	f44f 7460 	mov.w	r4, #896	@ 0x380
 80005b0:	f001 4500 	and.w	r5, r1, #2147483648	@ 0x80000000
 80005b4:	f021 4100 	bic.w	r1, r1, #2147483648	@ 0x80000000
 80005b8:	e71c      	b.n	80003f4 <__adddf3+0x138>
 80005ba:	bf00      	nop

080005bc <__aeabi_ul2d>:
 80005bc:	ea50 0201 	orrs.w	r2, r0, r1
 80005c0:	bf08      	it	eq
 80005c2:	4770      	bxeq	lr
 80005c4:	b530      	push	{r4, r5, lr}
 80005c6:	f04f 0500 	mov.w	r5, #0
 80005ca:	e00a      	b.n	80005e2 <__aeabi_l2d+0x16>

080005cc <__aeabi_l2d>:
 80005cc:	ea50 0201 	orrs.w	r2, r0, r1
 80005d0:	bf08      	it	eq
 80005d2:	4770      	bxeq	lr
 80005d4:	b530      	push	{r4, r5, lr}
 80005d6:	f011 4500 	ands.w	r5, r1, #2147483648	@ 0x80000000
 80005da:	d502      	bpl.n	80005e2 <__aeabi_l2d+0x16>
 80005dc:	4240      	negs	r0, r0
 80005de:	eb61 0141 	sbc.w	r1, r1, r1, lsl #1
 80005e2:	f44f 6480 	mov.w	r4, #1024	@ 0x400
 80005e6:	f104 0432 	add.w	r4, r4, #50	@ 0x32
 80005ea:	ea5f 5c91 	movs.w	ip, r1, lsr #22
 80005ee:	f43f aed8 	beq.w	80003a2 <__adddf3+0xe6>
 80005f2:	f04f 0203 	mov.w	r2, #3
 80005f6:	ea5f 0cdc 	movs.w	ip, ip, lsr #3
 80005fa:	bf18      	it	ne
 80005fc:	3203      	addne	r2, #3
 80005fe:	ea5f 0cdc 	movs.w	ip, ip, lsr #3
 8000602:	bf18      	it	ne
 8000604:	3203      	addne	r2, #3
 8000606:	eb02 02dc 	add.w	r2, r2, ip, lsr #3
 800060a:	f1c2 0320 	rsb	r3, r2, #32
 800060e:	fa00 fc03 	lsl.w	ip, r0, r3
 8000612:	fa20 f002 	lsr.w	r0, r0, r2
 8000616:	fa01 fe03 	lsl.w	lr, r1, r3
 800061a:	ea40 000e 	orr.w	r0, r0, lr
 800061e:	fa21 f102 	lsr.w	r1, r1, r2
 8000622:	4414      	add	r4, r2
 8000624:	e6bd      	b.n	80003a2 <__adddf3+0xe6>
 8000626:	bf00      	nop

08000628 <__aeabi_dmul>:
 8000628:	b570      	push	{r4, r5, r6, lr}
 800062a:	f04f 0cff 	mov.w	ip, #255	@ 0xff
 800062e:	f44c 6ce0 	orr.w	ip, ip, #1792	@ 0x700
 8000632:	ea1c 5411 	ands.w	r4, ip, r1, lsr #20
 8000636:	bf1d      	ittte	ne
 8000638:	ea1c 5513 	andsne.w	r5, ip, r3, lsr #20
 800063c:	ea94 0f0c 	teqne	r4, ip
 8000640:	ea95 0f0c 	teqne	r5, ip
 8000644:	f000 f8de 	bleq	8000804 <__aeabi_dmul+0x1dc>
 8000648:	442c      	add	r4, r5
 800064a:	ea81 0603 	eor.w	r6, r1, r3
 800064e:	ea21 514c 	bic.w	r1, r1, ip, lsl #21
 8000652:	ea23 534c 	bic.w	r3, r3, ip, lsl #21
 8000656:	ea50 3501 	orrs.w	r5, r0, r1, lsl #12
 800065a:	bf18      	it	ne
 800065c:	ea52 3503 	orrsne.w	r5, r2, r3, lsl #12
 8000660:	f441 1180 	orr.w	r1, r1, #1048576	@ 0x100000
 8000664:	f443 1380 	orr.w	r3, r3, #1048576	@ 0x100000
 8000668:	d038      	beq.n	80006dc <__aeabi_dmul+0xb4>
 800066a:	fba0 ce02 	umull	ip, lr, r0, r2
 800066e:	f04f 0500 	mov.w	r5, #0
 8000672:	fbe1 e502 	umlal	lr, r5, r1, r2
 8000676:	f006 4200 	and.w	r2, r6, #2147483648	@ 0x80000000
 800067a:	fbe0 e503 	umlal	lr, r5, r0, r3
 800067e:	f04f 0600 	mov.w	r6, #0
 8000682:	fbe1 5603 	umlal	r5, r6, r1, r3
 8000686:	f09c 0f00 	teq	ip, #0
 800068a:	bf18      	it	ne
 800068c:	f04e 0e01 	orrne.w	lr, lr, #1
 8000690:	f1a4 04ff 	sub.w	r4, r4, #255	@ 0xff
 8000694:	f5b6 7f00 	cmp.w	r6, #512	@ 0x200
 8000698:	f564 7440 	sbc.w	r4, r4, #768	@ 0x300
 800069c:	d204      	bcs.n	80006a8 <__aeabi_dmul+0x80>
 800069e:	ea5f 0e4e 	movs.w	lr, lr, lsl #1
 80006a2:	416d      	adcs	r5, r5
 80006a4:	eb46 0606 	adc.w	r6, r6, r6
 80006a8:	ea42 21c6 	orr.w	r1, r2, r6, lsl #11
 80006ac:	ea41 5155 	orr.w	r1, r1, r5, lsr #21
 80006b0:	ea4f 20c5 	mov.w	r0, r5, lsl #11
 80006b4:	ea40 505e 	orr.w	r0, r0, lr, lsr #21
 80006b8:	ea4f 2ece 	mov.w	lr, lr, lsl #11
 80006bc:	f1b4 0cfd 	subs.w	ip, r4, #253	@ 0xfd
 80006c0:	bf88      	it	hi
 80006c2:	f5bc 6fe0 	cmphi.w	ip, #1792	@ 0x700
 80006c6:	d81e      	bhi.n	8000706 <__aeabi_dmul+0xde>
 80006c8:	f1be 4f00 	cmp.w	lr, #2147483648	@ 0x80000000
 80006cc:	bf08      	it	eq
 80006ce:	ea5f 0e50 	movseq.w	lr, r0, lsr #1
 80006d2:	f150 0000 	adcs.w	r0, r0, #0
 80006d6:	eb41 5104 	adc.w	r1, r1, r4, lsl #20
 80006da:	bd70      	pop	{r4, r5, r6, pc}
 80006dc:	f006 4600 	and.w	r6, r6, #2147483648	@ 0x80000000
 80006e0:	ea46 0101 	orr.w	r1, r6, r1
 80006e4:	ea40 0002 	orr.w	r0, r0, r2
 80006e8:	ea81 0103 	eor.w	r1, r1, r3
 80006ec:	ebb4 045c 	subs.w	r4, r4, ip, lsr #1
 80006f0:	bfc2      	ittt	gt
 80006f2:	ebd4 050c 	rsbsgt	r5, r4, ip
 80006f6:	ea41 5104 	orrgt.w	r1, r1, r4, lsl #20
 80006fa:	bd70      	popgt	{r4, r5, r6, pc}
 80006fc:	f441 1180 	orr.w	r1, r1, #1048576	@ 0x100000
 8000700:	f04f 0e00 	mov.w	lr, #0
 8000704:	3c01      	subs	r4, #1
 8000706:	f300 80ab 	bgt.w	8000860 <__aeabi_dmul+0x238>
 800070a:	f114 0f36 	cmn.w	r4, #54	@ 0x36
 800070e:	bfde      	ittt	le
 8000710:	2000      	movle	r0, #0
 8000712:	f001 4100 	andle.w	r1, r1, #2147483648	@ 0x80000000
 8000716:	bd70      	pople	{r4, r5, r6, pc}
 8000718:	f1c4 0400 	rsb	r4, r4, #0
 800071c:	3c20      	subs	r4, #32
 800071e:	da35      	bge.n	800078c <__aeabi_dmul+0x164>
 8000720:	340c      	adds	r4, #12
 8000722:	dc1b      	bgt.n	800075c <__aeabi_dmul+0x134>
 8000724:	f104 0414 	add.w	r4, r4, #20
 8000728:	f1c4 0520 	rsb	r5, r4, #32
 800072c:	fa00 f305 	lsl.w	r3, r0, r5
 8000730:	fa20 f004 	lsr.w	r0, r0, r4
 8000734:	fa01 f205 	lsl.w	r2, r1, r5
 8000738:	ea40 0002 	orr.w	r0, r0, r2
 800073c:	f001 4200 	and.w	r2, r1, #2147483648	@ 0x80000000
 8000740:	f021 4100 	bic.w	r1, r1, #2147483648	@ 0x80000000
 8000744:	eb10 70d3 	adds.w	r0, r0, r3, lsr #31
 8000748:	fa21 f604 	lsr.w	r6, r1, r4
 800074c:	eb42 0106 	adc.w	r1, r2, r6
 8000750:	ea5e 0e43 	orrs.w	lr, lr, r3, lsl #1
 8000754:	bf08      	it	eq
 8000756:	ea20 70d3 	biceq.w	r0, r0, r3, lsr #31
 800075a:	bd70      	pop	{r4, r5, r6, pc}
 800075c:	f1c4 040c 	rsb	r4, r4, #12
 8000760:	f1c4 0520 	rsb	r5, r4, #32
 8000764:	fa00 f304 	lsl.w	r3, r0, r4
 8000768:	fa20 f005 	lsr.w	r0, r0, r5
 800076c:	fa01 f204 	lsl.w	r2, r1, r4
 8000770:	ea40 0002 	orr.w	r0, r0, r2
 8000774:	f001 4100 	and.w	r1, r1, #2147483648	@ 0x80000000
 8000778:	eb10 70d3 	adds.w	r0, r0, r3, lsr #31
 800077c:	f141 0100 	adc.w	r1, r1, #0
 8000780:	ea5e 0e43 	orrs.w	lr, lr, r3, lsl #1
 8000784:	bf08      	it	eq
 8000786:	ea20 70d3 	biceq.w	r0, r0, r3, lsr #31
 800078a:	bd70      	pop	{r4, r5, r6, pc}
 800078c:	f1c4 0520 	rsb	r5, r4, #32
 8000790:	fa00 f205 	lsl.w	r2, r0, r5
 8000794:	ea4e 0e02 	orr.w	lr, lr, r2
 8000798:	fa20 f304 	lsr.w	r3, r0, r4
 800079c:	fa01 f205 	lsl.w	r2, r1, r5
 80007a0:	ea43 0302 	orr.w	r3, r3, r2
 80007a4:	fa21 f004 	lsr.w	r0, r1, r4
 80007a8:	f001 4100 	and.w	r1, r1, #2147483648	@ 0x80000000
 80007ac:	fa21 f204 	lsr.w	r2, r1, r4
 80007b0:	ea20 0002 	bic.w	r0, r0, r2
 80007b4:	eb00 70d3 	add.w	r0, r0, r3, lsr #31
 80007b8:	ea5e 0e43 	orrs.w	lr, lr, r3, lsl #1
 80007bc:	bf08      	it	eq
 80007be:	ea20 70d3 	biceq.w	r0, r0, r3, lsr #31
 80007c2:	bd70      	pop	{r4, r5, r6, pc}
 80007c4:	f094 0f00 	teq	r4, #0
 80007c8:	d10f      	bne.n	80007ea <__aeabi_dmul+0x1c2>
 80007ca:	f001 4600 	and.w	r6, r1, #2147483648	@ 0x80000000
 80007ce:	0040      	lsls	r0, r0, #1
 80007d0:	eb41 0101 	adc.w	r1, r1, r1
 80007d4:	f411 1f80 	tst.w	r1, #1048576	@ 0x100000
 80007d8:	bf08      	it	eq
 80007da:	3c01      	subeq	r4, #1
 80007dc:	d0f7      	beq.n	80007ce <__aeabi_dmul+0x1a6>
 80007de:	ea41 0106 	orr.w	r1, r1, r6
 80007e2:	f095 0f00 	teq	r5, #0
 80007e6:	bf18      	it	ne
 80007e8:	4770      	bxne	lr
 80007ea:	f003 4600 	and.w	r6, r3, #2147483648	@ 0x80000000
 80007ee:	0052      	lsls	r2, r2, #1
 80007f0:	eb43 0303 	adc.w	r3, r3, r3
 80007f4:	f413 1f80 	tst.w	r3, #1048576	@ 0x100000
 80007f8:	bf08      	it	eq
 80007fa:	3d01      	subeq	r5, #1
 80007fc:	d0f7      	beq.n	80007ee <__aeabi_dmul+0x1c6>
 80007fe:	ea43 0306 	orr.w	r3, r3, r6
 8000802:	4770      	bx	lr
 8000804:	ea94 0f0c 	teq	r4, ip
 8000808:	ea0c 5513 	and.w	r5, ip, r3, lsr #20
 800080c:	bf18      	it	ne
 800080e:	ea95 0f0c 	teqne	r5, ip
 8000812:	d00c      	beq.n	800082e <__aeabi_dmul+0x206>
 8000814:	ea50 0641 	orrs.w	r6, r0, r1, lsl #1
 8000818:	bf18      	it	ne
 800081a:	ea52 0643 	orrsne.w	r6, r2, r3, lsl #1
 800081e:	d1d1      	bne.n	80007c4 <__aeabi_dmul+0x19c>
 8000820:	ea81 0103 	eor.w	r1, r1, r3
 8000824:	f001 4100 	and.w	r1, r1, #2147483648	@ 0x80000000
 8000828:	f04f 0000 	mov.w	r0, #0
 800082c:	bd70      	pop	{r4, r5, r6, pc}
 800082e:	ea50 0641 	orrs.w	r6, r0, r1, lsl #1
 8000832:	bf06      	itte	eq
 8000834:	4610      	moveq	r0, r2
 8000836:	4619      	moveq	r1, r3
 8000838:	ea52 0643 	orrsne.w	r6, r2, r3, lsl #1
 800083c:	d019      	beq.n	8000872 <__aeabi_dmul+0x24a>
 800083e:	ea94 0f0c 	teq	r4, ip
 8000842:	d102      	bne.n	800084a <__aeabi_dmul+0x222>
 8000844:	ea50 3601 	orrs.w	r6, r0, r1, lsl #12
 8000848:	d113      	bne.n	8000872 <__aeabi_dmul+0x24a>
 800084a:	ea95 0f0c 	teq	r5, ip
 800084e:	d105      	bne.n	800085c <__aeabi_dmul+0x234>
 8000850:	ea52 3603 	orrs.w	r6, r2, r3, lsl #12
 8000854:	bf1c      	itt	ne
 8000856:	4610      	movne	r0, r2
 8000858:	4619      	movne	r1, r3
 800085a:	d10a      	bne.n	8000872 <__aeabi_dmul+0x24a>
 800085c:	ea81 0103 	eor.w	r1, r1, r3
 8000860:	f001 4100 	and.w	r1, r1, #2147483648	@ 0x80000000
 8000864:	f041 41fe 	orr.w	r1, r1, #2130706432	@ 0x7f000000
 8000868:	f441 0170 	orr.w	r1, r1, #15728640	@ 0xf00000
 800086c:	f04f 0000 	mov.w	r0, #0
 8000870:	bd70      	pop	{r4, r5, r6, pc}
 8000872:	f041 41fe 	orr.w	r1, r1, #2130706432	@ 0x7f000000
 8000876:	f441 0178 	orr.w	r1, r1, #16252928	@ 0xf80000
 800087a:	bd70      	pop	{r4, r5, r6, pc}

0800087c <__aeabi_ddiv>:
 800087c:	b570      	push	{r4, r5, r6, lr}
 800087e:	f04f 0cff 	mov.w	ip, #255	@ 0xff
 8000882:	f44c 6ce0 	orr.w	ip, ip, #1792	@ 0x700
 8000886:	ea1c 5411 	ands.w	r4, ip, r1, lsr #20
 800088a:	bf1d      	ittte	ne
 800088c:	ea1c 5513 	andsne.w	r5, ip, r3, lsr #20
 8000890:	ea94 0f0c 	teqne	r4, ip
 8000894:	ea95 0f0c 	teqne	r5, ip
 8000898:	f000 f8a7 	bleq	80009ea <__aeabi_ddiv+0x16e>
 800089c:	eba4 0405 	sub.w	r4, r4, r5
 80008a0:	ea81 0e03 	eor.w	lr, r1, r3
 80008a4:	ea52 3503 	orrs.w	r5, r2, r3, lsl #12
 80008a8:	ea4f 3101 	mov.w	r1, r1, lsl #12
 80008ac:	f000 8088 	beq.w	80009c0 <__aeabi_ddiv+0x144>
 80008b0:	ea4f 3303 	mov.w	r3, r3, lsl #12
 80008b4:	f04f 5580 	mov.w	r5, #268435456	@ 0x10000000
 80008b8:	ea45 1313 	orr.w	r3, r5, r3, lsr #4
 80008bc:	ea43 6312 	orr.w	r3, r3, r2, lsr #24
 80008c0:	ea4f 2202 	mov.w	r2, r2, lsl #8
 80008c4:	ea45 1511 	orr.w	r5, r5, r1, lsr #4
 80008c8:	ea45 6510 	orr.w	r5, r5, r0, lsr #24
 80008cc:	ea4f 2600 	mov.w	r6, r0, lsl #8
 80008d0:	f00e 4100 	and.w	r1, lr, #2147483648	@ 0x80000000
 80008d4:	429d      	cmp	r5, r3
 80008d6:	bf08      	it	eq
 80008d8:	4296      	cmpeq	r6, r2
 80008da:	f144 04fd 	adc.w	r4, r4, #253	@ 0xfd
 80008de:	f504 7440 	add.w	r4, r4, #768	@ 0x300
 80008e2:	d202      	bcs.n	80008ea <__aeabi_ddiv+0x6e>
 80008e4:	085b      	lsrs	r3, r3, #1
 80008e6:	ea4f 0232 	mov.w	r2, r2, rrx
 80008ea:	1ab6      	subs	r6, r6, r2
 80008ec:	eb65 0503 	sbc.w	r5, r5, r3
 80008f0:	085b      	lsrs	r3, r3, #1
 80008f2:	ea4f 0232 	mov.w	r2, r2, rrx
 80008f6:	f44f 1080 	mov.w	r0, #1048576	@ 0x100000
 80008fa:	f44f 2c00 	mov.w	ip, #524288	@ 0x80000
 80008fe:	ebb6 0e02 	subs.w	lr, r6, r2
 8000902:	eb75 0e03 	sbcs.w	lr, r5, r3
 8000906:	bf22      	ittt	cs
 8000908:	1ab6      	subcs	r6, r6, r2
 800090a:	4675      	movcs	r5, lr
 800090c:	ea40 000c 	orrcs.w	r0, r0, ip
 8000910:	085b      	lsrs	r3, r3, #1
 8000912:	ea4f 0232 	mov.w	r2, r2, rrx
 8000916:	ebb6 0e02 	subs.w	lr, r6, r2
 800091a:	eb75 0e03 	sbcs.w	lr, r5, r3
 800091e:	bf22      	ittt	cs
 8000920:	1ab6      	subcs	r6, r6, r2
 8000922:	4675      	movcs	r5, lr
 8000924:	ea40 005c 	orrcs.w	r0, r0, ip, lsr #1
 8000928:	085b      	lsrs	r3, r3, #1
 800092a:	ea4f 0232 	mov.w	r2, r2, rrx
 800092e:	ebb6 0e02 	subs.w	lr, r6, r2
 8000932:	eb75 0e03 	sbcs.w	lr, r5, r3
 8000936:	bf22      	ittt	cs
 8000938:	1ab6      	subcs	r6, r6, r2
 800093a:	4675      	movcs	r5, lr
 800093c:	ea40 009c 	orrcs.w	r0, r0, ip, lsr #2
 8000940:	085b      	lsrs	r3, r3, #1
 8000942:	ea4f 0232 	mov.w	r2, r2, rrx
 8000946:	ebb6 0e02 	subs.w	lr, r6, r2
 800094a:	eb75 0e03 	sbcs.w	lr, r5, r3
 800094e:	bf22      	ittt	cs
 8000950:	1ab6      	subcs	r6, r6, r2
 8000952:	4675      	movcs	r5, lr
 8000954:	ea40 00dc 	orrcs.w	r0, r0, ip, lsr #3
 8000958:	ea55 0e06 	orrs.w	lr, r5, r6
 800095c:	d018      	beq.n	8000990 <__aeabi_ddiv+0x114>
 800095e:	ea4f 1505 	mov.w	r5, r5, lsl #4
 8000962:	ea45 7516 	orr.w	r5, r5, r6, lsr #28
 8000966:	ea4f 1606 	mov.w	r6, r6, lsl #4
 800096a:	ea4f 03c3 	mov.w	r3, r3, lsl #3
 800096e:	ea43 7352 	orr.w	r3, r3, r2, lsr #29
 8000972:	ea4f 02c2 	mov.w	r2, r2, lsl #3
 8000976:	ea5f 1c1c 	movs.w	ip, ip, lsr #4
 800097a:	d1c0      	bne.n	80008fe <__aeabi_ddiv+0x82>
 800097c:	f411 1f80 	tst.w	r1, #1048576	@ 0x100000
 8000980:	d10b      	bne.n	800099a <__aeabi_ddiv+0x11e>
 8000982:	ea41 0100 	orr.w	r1, r1, r0
 8000986:	f04f 0000 	mov.w	r0, #0
 800098a:	f04f 4c00 	mov.w	ip, #2147483648	@ 0x80000000
 800098e:	e7b6      	b.n	80008fe <__aeabi_ddiv+0x82>
 8000990:	f411 1f80 	tst.w	r1, #1048576	@ 0x100000
 8000994:	bf04      	itt	eq
 8000996:	4301      	orreq	r1, r0
 8000998:	2000      	moveq	r0, #0
 800099a:	f1b4 0cfd 	subs.w	ip, r4, #253	@ 0xfd
 800099e:	bf88      	it	hi
 80009a0:	f5bc 6fe0 	cmphi.w	ip, #1792	@ 0x700
 80009a4:	f63f aeaf 	bhi.w	8000706 <__aeabi_dmul+0xde>
 80009a8:	ebb5 0c03 	subs.w	ip, r5, r3
 80009ac:	bf04      	itt	eq
 80009ae:	ebb6 0c02 	subseq.w	ip, r6, r2
 80009b2:	ea5f 0c50 	movseq.w	ip, r0, lsr #1
 80009b6:	f150 0000 	adcs.w	r0, r0, #0
 80009ba:	eb41 5104 	adc.w	r1, r1, r4, lsl #20
 80009be:	bd70      	pop	{r4, r5, r6, pc}
 80009c0:	f00e 4e00 	and.w	lr, lr, #2147483648	@ 0x80000000
 80009c4:	ea4e 3111 	orr.w	r1, lr, r1, lsr #12
 80009c8:	eb14 045c 	adds.w	r4, r4, ip, lsr #1
 80009cc:	bfc2      	ittt	gt
 80009ce:	ebd4 050c 	rsbsgt	r5, r4, ip
 80009d2:	ea41 5104 	orrgt.w	r1, r1, r4, lsl #20
 80009d6:	bd70      	popgt	{r4, r5, r6, pc}
 80009d8:	f441 1180 	orr.w	r1, r1, #1048576	@ 0x100000
 80009dc:	f04f 0e00 	mov.w	lr, #0
 80009e0:	3c01      	subs	r4, #1
 80009e2:	e690      	b.n	8000706 <__aeabi_dmul+0xde>
 80009e4:	ea45 0e06 	orr.w	lr, r5, r6
 80009e8:	e68d      	b.n	8000706 <__aeabi_dmul+0xde>
 80009ea:	ea0c 5513 	and.w	r5, ip, r3, lsr #20
 80009ee:	ea94 0f0c 	teq	r4, ip
 80009f2:	bf08      	it	eq
 80009f4:	ea95 0f0c 	teqeq	r5, ip
 80009f8:	f43f af3b 	beq.w	8000872 <__aeabi_dmul+0x24a>
 80009fc:	ea94 0f0c 	teq	r4, ip
 8000a00:	d10a      	bne.n	8000a18 <__aeabi_ddiv+0x19c>
 8000a02:	ea50 3401 	orrs.w	r4, r0, r1, lsl #12
 8000a06:	f47f af34 	bne.w	8000872 <__aeabi_dmul+0x24a>
 8000a0a:	ea95 0f0c 	teq	r5, ip
 8000a0e:	f47f af25 	bne.w	800085c <__aeabi_dmul+0x234>
 8000a12:	4610      	mov	r0, r2
 8000a14:	4619      	mov	r1, r3
 8000a16:	e72c      	b.n	8000872 <__aeabi_dmul+0x24a>
 8000a18:	ea95 0f0c 	teq	r5, ip
 8000a1c:	d106      	bne.n	8000a2c <__aeabi_ddiv+0x1b0>
 8000a1e:	ea52 3503 	orrs.w	r5, r2, r3, lsl #12
 8000a22:	f43f aefd 	beq.w	8000820 <__aeabi_dmul+0x1f8>
 8000a26:	4610      	mov	r0, r2
 8000a28:	4619      	mov	r1, r3
 8000a2a:	e722      	b.n	8000872 <__aeabi_dmul+0x24a>
 8000a2c:	ea50 0641 	orrs.w	r6, r0, r1, lsl #1
 8000a30:	bf18      	it	ne
 8000a32:	ea52 0643 	orrsne.w	r6, r2, r3, lsl #1
 8000a36:	f47f aec5 	bne.w	80007c4 <__aeabi_dmul+0x19c>
 8000a3a:	ea50 0441 	orrs.w	r4, r0, r1, lsl #1
 8000a3e:	f47f af0d 	bne.w	800085c <__aeabi_dmul+0x234>
 8000a42:	ea52 0543 	orrs.w	r5, r2, r3, lsl #1
 8000a46:	f47f aeeb 	bne.w	8000820 <__aeabi_dmul+0x1f8>
 8000a4a:	e712      	b.n	8000872 <__aeabi_dmul+0x24a>

08000a4c <__gedf2>:
 8000a4c:	f04f 3cff 	mov.w	ip, #4294967295
 8000a50:	e006      	b.n	8000a60 <__cmpdf2+0x4>
 8000a52:	bf00      	nop

08000a54 <__ledf2>:
 8000a54:	f04f 0c01 	mov.w	ip, #1
 8000a58:	e002      	b.n	8000a60 <__cmpdf2+0x4>
 8000a5a:	bf00      	nop

08000a5c <__cmpdf2>:
 8000a5c:	f04f 0c01 	mov.w	ip, #1
 8000a60:	f84d cd04 	str.w	ip, [sp, #-4]!
 8000a64:	ea4f 0c41 	mov.w	ip, r1, lsl #1
 8000a68:	ea7f 5c6c 	mvns.w	ip, ip, asr #21
 8000a6c:	ea4f 0c43 	mov.w	ip, r3, lsl #1
 8000a70:	bf18      	it	ne
 8000a72:	ea7f 5c6c 	mvnsne.w	ip, ip, asr #21
 8000a76:	d01b      	beq.n	8000ab0 <__cmpdf2+0x54>
 8000a78:	b001      	add	sp, #4
 8000a7a:	ea50 0c41 	orrs.w	ip, r0, r1, lsl #1
 8000a7e:	bf0c      	ite	eq
 8000a80:	ea52 0c43 	orrseq.w	ip, r2, r3, lsl #1
 8000a84:	ea91 0f03 	teqne	r1, r3
 8000a88:	bf02      	ittt	eq
 8000a8a:	ea90 0f02 	teqeq	r0, r2
 8000a8e:	2000      	moveq	r0, #0
 8000a90:	4770      	bxeq	lr
 8000a92:	f110 0f00 	cmn.w	r0, #0
 8000a96:	ea91 0f03 	teq	r1, r3
 8000a9a:	bf58      	it	pl
 8000a9c:	4299      	cmppl	r1, r3
 8000a9e:	bf08      	it	eq
 8000aa0:	4290      	cmpeq	r0, r2
 8000aa2:	bf2c      	ite	cs
 8000aa4:	17d8      	asrcs	r0, r3, #31
 8000aa6:	ea6f 70e3 	mvncc.w	r0, r3, asr #31
 8000aaa:	f040 0001 	orr.w	r0, r0, #1
 8000aae:	4770      	bx	lr
 8000ab0:	ea4f 0c41 	mov.w	ip, r1, lsl #1
 8000ab4:	ea7f 5c6c 	mvns.w	ip, ip, asr #21
 8000ab8:	d102      	bne.n	8000ac0 <__cmpdf2+0x64>
 8000aba:	ea50 3c01 	orrs.w	ip, r0, r1, lsl #12
 8000abe:	d107      	bne.n	8000ad0 <__cmpdf2+0x74>
 8000ac0:	ea4f 0c43 	mov.w	ip, r3, lsl #1
 8000ac4:	ea7f 5c6c 	mvns.w	ip, ip, asr #21
 8000ac8:	d1d6      	bne.n	8000a78 <__cmpdf2+0x1c>
 8000aca:	ea52 3c03 	orrs.w	ip, r2, r3, lsl #12
 8000ace:	d0d3      	beq.n	8000a78 <__cmpdf2+0x1c>
 8000ad0:	f85d 0b04 	ldr.w	r0, [sp], #4
 8000ad4:	4770      	bx	lr
 8000ad6:	bf00      	nop

08000ad8 <__aeabi_cdrcmple>:
 8000ad8:	4684      	mov	ip, r0
 8000ada:	4610      	mov	r0, r2
 8000adc:	4662      	mov	r2, ip
 8000ade:	468c      	mov	ip, r1
 8000ae0:	4619      	mov	r1, r3
 8000ae2:	4663      	mov	r3, ip
 8000ae4:	e000      	b.n	8000ae8 <__aeabi_cdcmpeq>
 8000ae6:	bf00      	nop

08000ae8 <__aeabi_cdcmpeq>:
 8000ae8:	b501      	push	{r0, lr}
 8000aea:	f7ff ffb7 	bl	8000a5c <__cmpdf2>
 8000aee:	2800      	cmp	r0, #0
 8000af0:	bf48      	it	mi
 8000af2:	f110 0f00 	cmnmi.w	r0, #0
 8000af6:	bd01      	pop	{r0, pc}

08000af8 <__aeabi_dcmpeq>:
 8000af8:	f84d ed08 	str.w	lr, [sp, #-8]!
 8000afc:	f7ff fff4 	bl	8000ae8 <__aeabi_cdcmpeq>
 8000b00:	bf0c      	ite	eq
 8000b02:	2001      	moveq	r0, #1
 8000b04:	2000      	movne	r0, #0
 8000b06:	f85d fb08 	ldr.w	pc, [sp], #8
 8000b0a:	bf00      	nop

08000b0c <__aeabi_dcmplt>:
 8000b0c:	f84d ed08 	str.w	lr, [sp, #-8]!
 8000b10:	f7ff ffea 	bl	8000ae8 <__aeabi_cdcmpeq>
 8000b14:	bf34      	ite	cc
 8000b16:	2001      	movcc	r0, #1
 8000b18:	2000      	movcs	r0, #0
 8000b1a:	f85d fb08 	ldr.w	pc, [sp], #8
 8000b1e:	bf00      	nop

08000b20 <__aeabi_dcmple>:
 8000b20:	f84d ed08 	str.w	lr, [sp, #-8]!
 8000b24:	f7ff ffe0 	bl	8000ae8 <__aeabi_cdcmpeq>
 8000b28:	bf94      	ite	ls
 8000b2a:	2001      	movls	r0, #1
 8000b2c:	2000      	movhi	r0, #0
 8000b2e:	f85d fb08 	ldr.w	pc, [sp], #8
 8000b32:	bf00      	nop

08000b34 <__aeabi_dcmpge>:
 8000b34:	f84d ed08 	str.w	lr, [sp, #-8]!
 8000b38:	f7ff ffce 	bl	8000ad8 <__aeabi_cdrcmple>
 8000b3c:	bf94      	ite	ls
 8000b3e:	2001      	movls	r0, #1
 8000b40:	2000      	movhi	r0, #0
 8000b42:	f85d fb08 	ldr.w	pc, [sp], #8
 8000b46:	bf00      	nop

08000b48 <__aeabi_dcmpgt>:
 8000b48:	f84d ed08 	str.w	lr, [sp, #-8]!
 8000b4c:	f7ff ffc4 	bl	8000ad8 <__aeabi_cdrcmple>
 8000b50:	bf34      	ite	cc
 8000b52:	2001      	movcc	r0, #1
 8000b54:	2000      	movcs	r0, #0
 8000b56:	f85d fb08 	ldr.w	pc, [sp], #8
 8000b5a:	bf00      	nop

08000b5c <__aeabi_d2f>:
 8000b5c:	ea4f 0241 	mov.w	r2, r1, lsl #1
 8000b60:	f1b2 43e0 	subs.w	r3, r2, #1879048192	@ 0x70000000
 8000b64:	bf24      	itt	cs
 8000b66:	f5b3 1c00 	subscs.w	ip, r3, #2097152	@ 0x200000
 8000b6a:	f1dc 5cfe 	rsbscs	ip, ip, #532676608	@ 0x1fc00000
 8000b6e:	d90d      	bls.n	8000b8c <__aeabi_d2f+0x30>
 8000b70:	f001 4c00 	and.w	ip, r1, #2147483648	@ 0x80000000
 8000b74:	ea4f 02c0 	mov.w	r2, r0, lsl #3
 8000b78:	ea4c 7050 	orr.w	r0, ip, r0, lsr #29
 8000b7c:	f1b2 4f00 	cmp.w	r2, #2147483648	@ 0x80000000
 8000b80:	eb40 0083 	adc.w	r0, r0, r3, lsl #2
 8000b84:	bf08      	it	eq
 8000b86:	f020 0001 	biceq.w	r0, r0, #1
 8000b8a:	4770      	bx	lr
 8000b8c:	f011 4f80 	tst.w	r1, #1073741824	@ 0x40000000
 8000b90:	d121      	bne.n	8000bd6 <__aeabi_d2f+0x7a>
 8000b92:	f113 7238 	adds.w	r2, r3, #48234496	@ 0x2e00000
 8000b96:	bfbc      	itt	lt
 8000b98:	f001 4000 	andlt.w	r0, r1, #2147483648	@ 0x80000000
 8000b9c:	4770      	bxlt	lr
 8000b9e:	f441 1180 	orr.w	r1, r1, #1048576	@ 0x100000
 8000ba2:	ea4f 5252 	mov.w	r2, r2, lsr #21
 8000ba6:	f1c2 0218 	rsb	r2, r2, #24
 8000baa:	f1c2 0c20 	rsb	ip, r2, #32
 8000bae:	fa10 f30c 	lsls.w	r3, r0, ip
 8000bb2:	fa20 f002 	lsr.w	r0, r0, r2
 8000bb6:	bf18      	it	ne
 8000bb8:	f040 0001 	orrne.w	r0, r0, #1
 8000bbc:	ea4f 23c1 	mov.w	r3, r1, lsl #11
 8000bc0:	ea4f 23d3 	mov.w	r3, r3, lsr #11
 8000bc4:	fa03 fc0c 	lsl.w	ip, r3, ip
 8000bc8:	ea40 000c 	orr.w	r0, r0, ip
 8000bcc:	fa23 f302 	lsr.w	r3, r3, r2
 8000bd0:	ea4f 0343 	mov.w	r3, r3, lsl #1
 8000bd4:	e7cc      	b.n	8000b70 <__aeabi_d2f+0x14>
 8000bd6:	ea7f 5362 	mvns.w	r3, r2, asr #21
 8000bda:	d107      	bne.n	8000bec <__aeabi_d2f+0x90>
 8000bdc:	ea50 3301 	orrs.w	r3, r0, r1, lsl #12
 8000be0:	bf1e      	ittt	ne
 8000be2:	f04f 40fe 	movne.w	r0, #2130706432	@ 0x7f000000
 8000be6:	f440 0040 	orrne.w	r0, r0, #12582912	@ 0xc00000
 8000bea:	4770      	bxne	lr
 8000bec:	f001 4000 	and.w	r0, r1, #2147483648	@ 0x80000000
 8000bf0:	f040 40fe 	orr.w	r0, r0, #2130706432	@ 0x7f000000
 8000bf4:	f440 0000 	orr.w	r0, r0, #8388608	@ 0x800000
 8000bf8:	4770      	bx	lr
 8000bfa:	bf00      	nop

08000bfc <__aeabi_uldivmod>:
 8000bfc:	b953      	cbnz	r3, 8000c14 <__aeabi_uldivmod+0x18>
 8000bfe:	b94a      	cbnz	r2, 8000c14 <__aeabi_uldivmod+0x18>
 8000c00:	2900      	cmp	r1, #0
 8000c02:	bf08      	it	eq
 8000c04:	2800      	cmpeq	r0, #0
 8000c06:	bf1c      	itt	ne
 8000c08:	f04f 31ff 	movne.w	r1, #4294967295
 8000c0c:	f04f 30ff 	movne.w	r0, #4294967295
 8000c10:	f000 b96a 	b.w	8000ee8 <__aeabi_idiv0>
 8000c14:	f1ad 0c08 	sub.w	ip, sp, #8
 8000c18:	e96d ce04 	strd	ip, lr, [sp, #-16]!
 8000c1c:	f000 f806 	bl	8000c2c <__udivmoddi4>
 8000c20:	f8dd e004 	ldr.w	lr, [sp, #4]
 8000c24:	e9dd 2302 	ldrd	r2, r3, [sp, #8]
 8000c28:	b004      	add	sp, #16
 8000c2a:	4770      	bx	lr

08000c2c <__udivmoddi4>:
 8000c2c:	e92d 47f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
 8000c30:	9d08      	ldr	r5, [sp, #32]
 8000c32:	460c      	mov	r4, r1
 8000c34:	2b00      	cmp	r3, #0
 8000c36:	d14e      	bne.n	8000cd6 <__udivmoddi4+0xaa>
 8000c38:	4694      	mov	ip, r2
 8000c3a:	458c      	cmp	ip, r1
 8000c3c:	4686      	mov	lr, r0
 8000c3e:	fab2 f282 	clz	r2, r2
 8000c42:	d962      	bls.n	8000d0a <__udivmoddi4+0xde>
 8000c44:	b14a      	cbz	r2, 8000c5a <__udivmoddi4+0x2e>
 8000c46:	f1c2 0320 	rsb	r3, r2, #32
 8000c4a:	4091      	lsls	r1, r2
 8000c4c:	fa20 f303 	lsr.w	r3, r0, r3
 8000c50:	fa0c fc02 	lsl.w	ip, ip, r2
 8000c54:	4319      	orrs	r1, r3
 8000c56:	fa00 fe02 	lsl.w	lr, r0, r2
 8000c5a:	ea4f 471c 	mov.w	r7, ip, lsr #16
 8000c5e:	fa1f f68c 	uxth.w	r6, ip
 8000c62:	fbb1 f4f7 	udiv	r4, r1, r7
 8000c66:	ea4f 431e 	mov.w	r3, lr, lsr #16
 8000c6a:	fb07 1114 	mls	r1, r7, r4, r1
 8000c6e:	ea43 4301 	orr.w	r3, r3, r1, lsl #16
 8000c72:	fb04 f106 	mul.w	r1, r4, r6
 8000c76:	4299      	cmp	r1, r3
 8000c78:	d90a      	bls.n	8000c90 <__udivmoddi4+0x64>
 8000c7a:	eb1c 0303 	adds.w	r3, ip, r3
 8000c7e:	f104 30ff 	add.w	r0, r4, #4294967295
 8000c82:	f080 8112 	bcs.w	8000eaa <__udivmoddi4+0x27e>
 8000c86:	4299      	cmp	r1, r3
 8000c88:	f240 810f 	bls.w	8000eaa <__udivmoddi4+0x27e>
 8000c8c:	3c02      	subs	r4, #2
 8000c8e:	4463      	add	r3, ip
 8000c90:	1a59      	subs	r1, r3, r1
 8000c92:	fa1f f38e 	uxth.w	r3, lr
 8000c96:	fbb1 f0f7 	udiv	r0, r1, r7
 8000c9a:	fb07 1110 	mls	r1, r7, r0, r1
 8000c9e:	ea43 4301 	orr.w	r3, r3, r1, lsl #16
 8000ca2:	fb00 f606 	mul.w	r6, r0, r6
 8000ca6:	429e      	cmp	r6, r3
 8000ca8:	d90a      	bls.n	8000cc0 <__udivmoddi4+0x94>
 8000caa:	eb1c 0303 	adds.w	r3, ip, r3
 8000cae:	f100 31ff 	add.w	r1, r0, #4294967295
 8000cb2:	f080 80fc 	bcs.w	8000eae <__udivmoddi4+0x282>
 8000cb6:	429e      	cmp	r6, r3
 8000cb8:	f240 80f9 	bls.w	8000eae <__udivmoddi4+0x282>
 8000cbc:	4463      	add	r3, ip
 8000cbe:	3802      	subs	r0, #2
 8000cc0:	1b9b      	subs	r3, r3, r6
 8000cc2:	ea40 4004 	orr.w	r0, r0, r4, lsl #16
 8000cc6:	2100      	movs	r1, #0
 8000cc8:	b11d      	cbz	r5, 8000cd2 <__udivmoddi4+0xa6>
 8000cca:	40d3      	lsrs	r3, r2
 8000ccc:	2200      	movs	r2, #0
 8000cce:	e9c5 3200 	strd	r3, r2, [r5]
 8000cd2:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
 8000cd6:	428b      	cmp	r3, r1
 8000cd8:	d905      	bls.n	8000ce6 <__udivmoddi4+0xba>
 8000cda:	b10d      	cbz	r5, 8000ce0 <__udivmoddi4+0xb4>
 8000cdc:	e9c5 0100 	strd	r0, r1, [r5]
 8000ce0:	2100      	movs	r1, #0
 8000ce2:	4608      	mov	r0, r1
 8000ce4:	e7f5      	b.n	8000cd2 <__udivmoddi4+0xa6>
 8000ce6:	fab3 f183 	clz	r1, r3
 8000cea:	2900      	cmp	r1, #0
 8000cec:	d146      	bne.n	8000d7c <__udivmoddi4+0x150>
 8000cee:	42a3      	cmp	r3, r4
 8000cf0:	d302      	bcc.n	8000cf8 <__udivmoddi4+0xcc>
 8000cf2:	4290      	cmp	r0, r2
 8000cf4:	f0c0 80f0 	bcc.w	8000ed8 <__udivmoddi4+0x2ac>
 8000cf8:	1a86      	subs	r6, r0, r2
 8000cfa:	eb64 0303 	sbc.w	r3, r4, r3
 8000cfe:	2001      	movs	r0, #1
 8000d00:	2d00      	cmp	r5, #0
 8000d02:	d0e6      	beq.n	8000cd2 <__udivmoddi4+0xa6>
 8000d04:	e9c5 6300 	strd	r6, r3, [r5]
 8000d08:	e7e3      	b.n	8000cd2 <__udivmoddi4+0xa6>
 8000d0a:	2a00      	cmp	r2, #0
 8000d0c:	f040 8090 	bne.w	8000e30 <__udivmoddi4+0x204>
 8000d10:	eba1 040c 	sub.w	r4, r1, ip
 8000d14:	ea4f 481c 	mov.w	r8, ip, lsr #16
 8000d18:	fa1f f78c 	uxth.w	r7, ip
 8000d1c:	2101      	movs	r1, #1
 8000d1e:	fbb4 f6f8 	udiv	r6, r4, r8
 8000d22:	ea4f 431e 	mov.w	r3, lr, lsr #16
 8000d26:	fb08 4416 	mls	r4, r8, r6, r4
 8000d2a:	ea43 4304 	orr.w	r3, r3, r4, lsl #16
 8000d2e:	fb07 f006 	mul.w	r0, r7, r6
 8000d32:	4298      	cmp	r0, r3
 8000d34:	d908      	bls.n	8000d48 <__udivmoddi4+0x11c>
 8000d36:	eb1c 0303 	adds.w	r3, ip, r3
 8000d3a:	f106 34ff 	add.w	r4, r6, #4294967295
 8000d3e:	d202      	bcs.n	8000d46 <__udivmoddi4+0x11a>
 8000d40:	4298      	cmp	r0, r3
 8000d42:	f200 80cd 	bhi.w	8000ee0 <__udivmoddi4+0x2b4>
 8000d46:	4626      	mov	r6, r4
 8000d48:	1a1c      	subs	r4, r3, r0
 8000d4a:	fa1f f38e 	uxth.w	r3, lr
 8000d4e:	fbb4 f0f8 	udiv	r0, r4, r8
 8000d52:	fb08 4410 	mls	r4, r8, r0, r4
 8000d56:	ea43 4304 	orr.w	r3, r3, r4, lsl #16
 8000d5a:	fb00 f707 	mul.w	r7, r0, r7
 8000d5e:	429f      	cmp	r7, r3
 8000d60:	d908      	bls.n	8000d74 <__udivmoddi4+0x148>
 8000d62:	eb1c 0303 	adds.w	r3, ip, r3
 8000d66:	f100 34ff 	add.w	r4, r0, #4294967295
 8000d6a:	d202      	bcs.n	8000d72 <__udivmoddi4+0x146>
 8000d6c:	429f      	cmp	r7, r3
 8000d6e:	f200 80b0 	bhi.w	8000ed2 <__udivmoddi4+0x2a6>
 8000d72:	4620      	mov	r0, r4
 8000d74:	1bdb      	subs	r3, r3, r7
 8000d76:	ea40 4006 	orr.w	r0, r0, r6, lsl #16
 8000d7a:	e7a5      	b.n	8000cc8 <__udivmoddi4+0x9c>
 8000d7c:	f1c1 0620 	rsb	r6, r1, #32
 8000d80:	408b      	lsls	r3, r1
 8000d82:	fa22 f706 	lsr.w	r7, r2, r6
 8000d86:	431f      	orrs	r7, r3
 8000d88:	fa20 fc06 	lsr.w	ip, r0, r6
 8000d8c:	fa04 f301 	lsl.w	r3, r4, r1
 8000d90:	ea43 030c 	orr.w	r3, r3, ip
 8000d94:	40f4      	lsrs	r4, r6
 8000d96:	fa00 f801 	lsl.w	r8, r0, r1
 8000d9a:	0c38      	lsrs	r0, r7, #16
 8000d9c:	ea4f 4913 	mov.w	r9, r3, lsr #16
 8000da0:	fbb4 fef0 	udiv	lr, r4, r0
 8000da4:	fa1f fc87 	uxth.w	ip, r7
 8000da8:	fb00 441e 	mls	r4, r0, lr, r4
 8000dac:	ea49 4404 	orr.w	r4, r9, r4, lsl #16
 8000db0:	fb0e f90c 	mul.w	r9, lr, ip
 8000db4:	45a1      	cmp	r9, r4
 8000db6:	fa02 f201 	lsl.w	r2, r2, r1
 8000dba:	d90a      	bls.n	8000dd2 <__udivmoddi4+0x1a6>
 8000dbc:	193c      	adds	r4, r7, r4
 8000dbe:	f10e 3aff 	add.w	sl, lr, #4294967295
 8000dc2:	f080 8084 	bcs.w	8000ece <__udivmoddi4+0x2a2>
 8000dc6:	45a1      	cmp	r9, r4
 8000dc8:	f240 8081 	bls.w	8000ece <__udivmoddi4+0x2a2>
 8000dcc:	f1ae 0e02 	sub.w	lr, lr, #2
 8000dd0:	443c      	add	r4, r7
 8000dd2:	eba4 0409 	sub.w	r4, r4, r9
 8000dd6:	fa1f f983 	uxth.w	r9, r3
 8000dda:	fbb4 f3f0 	udiv	r3, r4, r0
 8000dde:	fb00 4413 	mls	r4, r0, r3, r4
 8000de2:	ea49 4404 	orr.w	r4, r9, r4, lsl #16
 8000de6:	fb03 fc0c 	mul.w	ip, r3, ip
 8000dea:	45a4      	cmp	ip, r4
 8000dec:	d907      	bls.n	8000dfe <__udivmoddi4+0x1d2>
 8000dee:	193c      	adds	r4, r7, r4
 8000df0:	f103 30ff 	add.w	r0, r3, #4294967295
 8000df4:	d267      	bcs.n	8000ec6 <__udivmoddi4+0x29a>
 8000df6:	45a4      	cmp	ip, r4
 8000df8:	d965      	bls.n	8000ec6 <__udivmoddi4+0x29a>
 8000dfa:	3b02      	subs	r3, #2
 8000dfc:	443c      	add	r4, r7
 8000dfe:	ea43 400e 	orr.w	r0, r3, lr, lsl #16
 8000e02:	fba0 9302 	umull	r9, r3, r0, r2
 8000e06:	eba4 040c 	sub.w	r4, r4, ip
 8000e0a:	429c      	cmp	r4, r3
 8000e0c:	46ce      	mov	lr, r9
 8000e0e:	469c      	mov	ip, r3
 8000e10:	d351      	bcc.n	8000eb6 <__udivmoddi4+0x28a>
 8000e12:	d04e      	beq.n	8000eb2 <__udivmoddi4+0x286>
 8000e14:	b155      	cbz	r5, 8000e2c <__udivmoddi4+0x200>
 8000e16:	ebb8 030e 	subs.w	r3, r8, lr
 8000e1a:	eb64 040c 	sbc.w	r4, r4, ip
 8000e1e:	fa04 f606 	lsl.w	r6, r4, r6
 8000e22:	40cb      	lsrs	r3, r1
 8000e24:	431e      	orrs	r6, r3
 8000e26:	40cc      	lsrs	r4, r1
 8000e28:	e9c5 6400 	strd	r6, r4, [r5]
 8000e2c:	2100      	movs	r1, #0
 8000e2e:	e750      	b.n	8000cd2 <__udivmoddi4+0xa6>
 8000e30:	f1c2 0320 	rsb	r3, r2, #32
 8000e34:	fa20 f103 	lsr.w	r1, r0, r3
 8000e38:	fa0c fc02 	lsl.w	ip, ip, r2
 8000e3c:	fa24 f303 	lsr.w	r3, r4, r3
 8000e40:	4094      	lsls	r4, r2
 8000e42:	430c      	orrs	r4, r1
 8000e44:	ea4f 481c 	mov.w	r8, ip, lsr #16
 8000e48:	fa00 fe02 	lsl.w	lr, r0, r2
 8000e4c:	fa1f f78c 	uxth.w	r7, ip
 8000e50:	fbb3 f0f8 	udiv	r0, r3, r8
 8000e54:	fb08 3110 	mls	r1, r8, r0, r3
 8000e58:	0c23      	lsrs	r3, r4, #16
 8000e5a:	ea43 4301 	orr.w	r3, r3, r1, lsl #16
 8000e5e:	fb00 f107 	mul.w	r1, r0, r7
 8000e62:	4299      	cmp	r1, r3
 8000e64:	d908      	bls.n	8000e78 <__udivmoddi4+0x24c>
 8000e66:	eb1c 0303 	adds.w	r3, ip, r3
 8000e6a:	f100 36ff 	add.w	r6, r0, #4294967295
 8000e6e:	d22c      	bcs.n	8000eca <__udivmoddi4+0x29e>
 8000e70:	4299      	cmp	r1, r3
 8000e72:	d92a      	bls.n	8000eca <__udivmoddi4+0x29e>
 8000e74:	3802      	subs	r0, #2
 8000e76:	4463      	add	r3, ip
 8000e78:	1a5b      	subs	r3, r3, r1
 8000e7a:	b2a4      	uxth	r4, r4
 8000e7c:	fbb3 f1f8 	udiv	r1, r3, r8
 8000e80:	fb08 3311 	mls	r3, r8, r1, r3
 8000e84:	ea44 4403 	orr.w	r4, r4, r3, lsl #16
 8000e88:	fb01 f307 	mul.w	r3, r1, r7
 8000e8c:	42a3      	cmp	r3, r4
 8000e8e:	d908      	bls.n	8000ea2 <__udivmoddi4+0x276>
 8000e90:	eb1c 0404 	adds.w	r4, ip, r4
 8000e94:	f101 36ff 	add.w	r6, r1, #4294967295
 8000e98:	d213      	bcs.n	8000ec2 <__udivmoddi4+0x296>
 8000e9a:	42a3      	cmp	r3, r4
 8000e9c:	d911      	bls.n	8000ec2 <__udivmoddi4+0x296>
 8000e9e:	3902      	subs	r1, #2
 8000ea0:	4464      	add	r4, ip
 8000ea2:	1ae4      	subs	r4, r4, r3
 8000ea4:	ea41 4100 	orr.w	r1, r1, r0, lsl #16
 8000ea8:	e739      	b.n	8000d1e <__udivmoddi4+0xf2>
 8000eaa:	4604      	mov	r4, r0
 8000eac:	e6f0      	b.n	8000c90 <__udivmoddi4+0x64>
 8000eae:	4608      	mov	r0, r1
 8000eb0:	e706      	b.n	8000cc0 <__udivmoddi4+0x94>
 8000eb2:	45c8      	cmp	r8, r9
 8000eb4:	d2ae      	bcs.n	8000e14 <__udivmoddi4+0x1e8>
 8000eb6:	ebb9 0e02 	subs.w	lr, r9, r2
 8000eba:	eb63 0c07 	sbc.w	ip, r3, r7
 8000ebe:	3801      	subs	r0, #1
 8000ec0:	e7a8      	b.n	8000e14 <__udivmoddi4+0x1e8>
 8000ec2:	4631      	mov	r1, r6
 8000ec4:	e7ed      	b.n	8000ea2 <__udivmoddi4+0x276>
 8000ec6:	4603      	mov	r3, r0
 8000ec8:	e799      	b.n	8000dfe <__udivmoddi4+0x1d2>
 8000eca:	4630      	mov	r0, r6
 8000ecc:	e7d4      	b.n	8000e78 <__udivmoddi4+0x24c>
 8000ece:	46d6      	mov	lr, sl
 8000ed0:	e77f      	b.n	8000dd2 <__udivmoddi4+0x1a6>
 8000ed2:	4463      	add	r3, ip
 8000ed4:	3802      	subs	r0, #2
 8000ed6:	e74d      	b.n	8000d74 <__udivmoddi4+0x148>
 8000ed8:	4606      	mov	r6, r0
 8000eda:	4623      	mov	r3, r4
 8000edc:	4608      	mov	r0, r1
 8000ede:	e70f      	b.n	8000d00 <__udivmoddi4+0xd4>
 8000ee0:	3e02      	subs	r6, #2
 8000ee2:	4463      	add	r3, ip
 8000ee4:	e730      	b.n	8000d48 <__udivmoddi4+0x11c>
 8000ee6:	bf00      	nop

08000ee8 <__aeabi_idiv0>:
 8000ee8:	4770      	bx	lr
 8000eea:	bf00      	nop

08000eec <main>:
/**
  * @brief  The application entry point.
  * @retval int
  */
int main(void)
{
 8000eec:	b580      	push	{r7, lr}
 8000eee:	b082      	sub	sp, #8
 8000ef0:	af02      	add	r7, sp, #8
  /* USER CODE END 1 */

  /* MCU Configuration--------------------------------------------------------*/

  /* Reset of all peripherals, Initializes the Flash interface and the Systick. */
  HAL_Init();
 8000ef2:	f001 fcc9 	bl	8002888 <HAL_Init>
  /* USER CODE BEGIN Init */

  /* USER CODE END Init */

  /* Configure the system clock */
  SystemClock_Config();
 8000ef6:	f000 f8d3 	bl	80010a0 <SystemClock_Config>
  /* USER CODE BEGIN SysInit */

  /* USER CODE END SysInit */

  /* Initialize all configured peripherals */
  MX_GPIO_Init();
 8000efa:	f000 fb55 	bl	80015a8 <MX_GPIO_Init>
  MX_DMA_Init();
 8000efe:	f000 fb1d 	bl	800153c <MX_DMA_Init>
  MX_SPI2_Init();
 8000f02:	f000 f9d3 	bl	80012ac <MX_SPI2_Init>
  MX_CRC_Init();
 8000f06:	f000 f98f 	bl	8001228 <MX_CRC_Init>
  MX_TIM3_Init();
 8000f0a:	f000 fa7b 	bl	8001404 <MX_TIM3_Init>
  MX_ADC1_Init();
 8000f0e:	f000 f939 	bl	8001184 <MX_ADC1_Init>
  MX_TIM2_Init();
 8000f12:	f000 fa01 	bl	8001318 <MX_TIM2_Init>
  MX_I2C2_Init();
 8000f16:	f000 f99b 	bl	8001250 <MX_I2C2_Init>
  MX_TIM4_Init();
 8000f1a:	f000 fac1 	bl	80014a0 <MX_TIM4_Init>
  MX_TouchGFX_Init();
 8000f1e:	f007 f939 	bl	8008194 <MX_TouchGFX_Init>

  //HAL_TIM_PWM_Init(&htim2);



  Displ_Init(Displ_Orientat_0);			// initialize display controller - set orientation parameter as per TouchGFX setup
 8000f22:	2000      	movs	r0, #0
 8000f24:	f001 f934 	bl	8002190 <Displ_Init>
  touchgfxSignalVSync();
 8000f28:	f00b fde8 	bl	800cafc <touchgfxSignalVSync>
  Displ_Init(Displ_Orientat_0);			// initialize display controller - set orientation parameter as per TouchGFX setup
 8000f2c:	2000      	movs	r0, #0
 8000f2e:	f001 f92f 	bl	8002190 <Displ_Init>
  touchgfxSignalVSync();
 8000f32:	f00b fde3 	bl	800cafc <touchgfxSignalVSync>


  Displ_BackLight('I');  					// initialize backlight
 8000f36:	2049      	movs	r0, #73	@ 0x49
 8000f38:	f001 f9d0 	bl	80022dc <Displ_BackLight>
  HAL_TIM_Base_Start_IT(&TGFX_T);			// start TouchGFX tick timer
 8000f3c:	484d      	ldr	r0, [pc, #308]	@ (8001074 <main+0x188>)
 8000f3e:	f006 f949 	bl	80071d4 <HAL_TIM_Base_Start_IT>
  HAL_ADC_Start_DMA(&hadc1,(uint32_t*)&value_adc,1);
 8000f42:	2201      	movs	r2, #1
 8000f44:	494c      	ldr	r1, [pc, #304]	@ (8001078 <main+0x18c>)
 8000f46:	484d      	ldr	r0, [pc, #308]	@ (800107c <main+0x190>)
 8000f48:	f001 fe88 	bl	8002c5c <HAL_ADC_Start_DMA>
  HAL_TIM_PWM_Start(&htim2,TIM_CHANNEL_1);
 8000f4c:	2100      	movs	r1, #0
 8000f4e:	484c      	ldr	r0, [pc, #304]	@ (8001080 <main+0x194>)
 8000f50:	f006 fa0a 	bl	8007368 <HAL_TIM_PWM_Start>
  htim2.Instance->CCR1 = 2048;
 8000f54:	4b4a      	ldr	r3, [pc, #296]	@ (8001080 <main+0x194>)
 8000f56:	681b      	ldr	r3, [r3, #0]
 8000f58:	f44f 6200 	mov.w	r2, #2048	@ 0x800
 8000f5c:	635a      	str	r2, [r3, #52]	@ 0x34
  HAL_TIM_Base_Start_IT(&htim4);
 8000f5e:	4849      	ldr	r0, [pc, #292]	@ (8001084 <main+0x198>)
 8000f60:	f006 f938 	bl	80071d4 <HAL_TIM_Base_Start_IT>
  /* USER CODE END 2 */

  /* Infinite loop */
  /* USER CODE BEGIN WHILE */
  while(HAL_I2C_IsDeviceReady(&hi2c2, 0xB8,1, HAL_MAX_DELAY) != HAL_OK){
 8000f64:	bf00      	nop
 8000f66:	f04f 33ff 	mov.w	r3, #4294967295
 8000f6a:	2201      	movs	r2, #1
 8000f6c:	21b8      	movs	r1, #184	@ 0xb8
 8000f6e:	4846      	ldr	r0, [pc, #280]	@ (8001088 <main+0x19c>)
 8000f70:	f003 fdf0 	bl	8004b54 <HAL_I2C_IsDeviceReady>
 8000f74:	4603      	mov	r3, r0
 8000f76:	2b00      	cmp	r3, #0
 8000f78:	d1f5      	bne.n	8000f66 <main+0x7a>
  }

  while (1)
  {

	  HAL_ADC_Start_DMA(&hadc1,(uint32_t*)&value_adc,1);
 8000f7a:	2201      	movs	r2, #1
 8000f7c:	493e      	ldr	r1, [pc, #248]	@ (8001078 <main+0x18c>)
 8000f7e:	483f      	ldr	r0, [pc, #252]	@ (800107c <main+0x190>)
 8000f80:	f001 fe6c 	bl	8002c5c <HAL_ADC_Start_DMA>
//htim2.Instance->CCR1 = value_adc;
	  HAL_I2C_Master_Transmit (&hi2c2, 0xB8, i2c_buffer, 3, 100);
 8000f84:	2364      	movs	r3, #100	@ 0x64
 8000f86:	9300      	str	r3, [sp, #0]
 8000f88:	2303      	movs	r3, #3
 8000f8a:	4a40      	ldr	r2, [pc, #256]	@ (800108c <main+0x1a0>)
 8000f8c:	21b8      	movs	r1, #184	@ 0xb8
 8000f8e:	483e      	ldr	r0, [pc, #248]	@ (8001088 <main+0x19c>)
 8000f90:	f003 fab0 	bl	80044f4 <HAL_I2C_Master_Transmit>
	  HAL_I2C_Master_Receive (&hi2c2, 0xB9, i2c_return, 8, 100);
 8000f94:	2364      	movs	r3, #100	@ 0x64
 8000f96:	9300      	str	r3, [sp, #0]
 8000f98:	2308      	movs	r3, #8
 8000f9a:	4a3d      	ldr	r2, [pc, #244]	@ (8001090 <main+0x1a4>)
 8000f9c:	21b9      	movs	r1, #185	@ 0xb9
 8000f9e:	483a      	ldr	r0, [pc, #232]	@ (8001088 <main+0x19c>)
 8000fa0:	f003 fba6 	bl	80046f0 <HAL_I2C_Master_Receive>
	  temp = ((i2c_return[4] << 8) + i2c_return[5]);
 8000fa4:	4b3a      	ldr	r3, [pc, #232]	@ (8001090 <main+0x1a4>)
 8000fa6:	791b      	ldrb	r3, [r3, #4]
 8000fa8:	021b      	lsls	r3, r3, #8
 8000faa:	4a39      	ldr	r2, [pc, #228]	@ (8001090 <main+0x1a4>)
 8000fac:	7952      	ldrb	r2, [r2, #5]
 8000fae:	4413      	add	r3, r2
 8000fb0:	ee07 3a90 	vmov	s15, r3
 8000fb4:	eef8 7ae7 	vcvt.f32.s32	s15, s15
 8000fb8:	4b36      	ldr	r3, [pc, #216]	@ (8001094 <main+0x1a8>)
 8000fba:	edc3 7a00 	vstr	s15, [r3]
	  hum = ((i2c_return[2] << 8) + i2c_return[3]);
 8000fbe:	4b34      	ldr	r3, [pc, #208]	@ (8001090 <main+0x1a4>)
 8000fc0:	789b      	ldrb	r3, [r3, #2]
 8000fc2:	021b      	lsls	r3, r3, #8
 8000fc4:	4a32      	ldr	r2, [pc, #200]	@ (8001090 <main+0x1a4>)
 8000fc6:	78d2      	ldrb	r2, [r2, #3]
 8000fc8:	4413      	add	r3, r2
 8000fca:	ee07 3a90 	vmov	s15, r3
 8000fce:	eef8 7ae7 	vcvt.f32.s32	s15, s15
 8000fd2:	4b31      	ldr	r3, [pc, #196]	@ (8001098 <main+0x1ac>)
 8000fd4:	edc3 7a00 	vstr	s15, [r3]
	  temp = floor(temp)/10.0;
 8000fd8:	4b2e      	ldr	r3, [pc, #184]	@ (8001094 <main+0x1a8>)
 8000fda:	681b      	ldr	r3, [r3, #0]
 8000fdc:	4618      	mov	r0, r3
 8000fde:	f7ff facb 	bl	8000578 <__aeabi_f2d>
 8000fe2:	4602      	mov	r2, r0
 8000fe4:	460b      	mov	r3, r1
 8000fe6:	ec43 2b10 	vmov	d0, r2, r3
 8000fea:	f021 f9cd 	bl	8022388 <floor>
 8000fee:	ec51 0b10 	vmov	r0, r1, d0
 8000ff2:	f04f 0200 	mov.w	r2, #0
 8000ff6:	4b29      	ldr	r3, [pc, #164]	@ (800109c <main+0x1b0>)
 8000ff8:	f7ff fc40 	bl	800087c <__aeabi_ddiv>
 8000ffc:	4602      	mov	r2, r0
 8000ffe:	460b      	mov	r3, r1
 8001000:	4610      	mov	r0, r2
 8001002:	4619      	mov	r1, r3
 8001004:	f7ff fdaa 	bl	8000b5c <__aeabi_d2f>
 8001008:	4603      	mov	r3, r0
 800100a:	4a22      	ldr	r2, [pc, #136]	@ (8001094 <main+0x1a8>)
 800100c:	6013      	str	r3, [r2, #0]
	  hum = floor(hum)/10.0;
 800100e:	4b22      	ldr	r3, [pc, #136]	@ (8001098 <main+0x1ac>)
 8001010:	681b      	ldr	r3, [r3, #0]
 8001012:	4618      	mov	r0, r3
 8001014:	f7ff fab0 	bl	8000578 <__aeabi_f2d>
 8001018:	4602      	mov	r2, r0
 800101a:	460b      	mov	r3, r1
 800101c:	ec43 2b10 	vmov	d0, r2, r3
 8001020:	f021 f9b2 	bl	8022388 <floor>
 8001024:	ec51 0b10 	vmov	r0, r1, d0
 8001028:	f04f 0200 	mov.w	r2, #0
 800102c:	4b1b      	ldr	r3, [pc, #108]	@ (800109c <main+0x1b0>)
 800102e:	f7ff fc25 	bl	800087c <__aeabi_ddiv>
 8001032:	4602      	mov	r2, r0
 8001034:	460b      	mov	r3, r1
 8001036:	4610      	mov	r0, r2
 8001038:	4619      	mov	r1, r3
 800103a:	f7ff fd8f 	bl	8000b5c <__aeabi_d2f>
 800103e:	4603      	mov	r3, r0
 8001040:	4a15      	ldr	r2, [pc, #84]	@ (8001098 <main+0x1ac>)
 8001042:	6013      	str	r3, [r2, #0]
//	  htim2.Instance->CCR1 = fmax(0.0f, fmin(4095.0f, 4095.0f * (1.0f - pow(fabs(temp - 25.0f) / 5.0f, 0.5f))));
	  if (temp < 25){
 8001044:	4b13      	ldr	r3, [pc, #76]	@ (8001094 <main+0x1a8>)
 8001046:	edd3 7a00 	vldr	s15, [r3]
 800104a:	eeb3 7a09 	vmov.f32	s14, #57	@ 0x41c80000  25.0
 800104e:	eef4 7ac7 	vcmpe.f32	s15, s14
 8001052:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 8001056:	d505      	bpl.n	8001064 <main+0x178>
		  htim2.Instance->CCR1 = 4095;
 8001058:	4b09      	ldr	r3, [pc, #36]	@ (8001080 <main+0x194>)
 800105a:	681b      	ldr	r3, [r3, #0]
 800105c:	f640 72ff 	movw	r2, #4095	@ 0xfff
 8001060:	635a      	str	r2, [r3, #52]	@ 0x34
 8001062:	e003      	b.n	800106c <main+0x180>
	  } else{
		  htim2.Instance->CCR1 = 0;
 8001064:	4b06      	ldr	r3, [pc, #24]	@ (8001080 <main+0x194>)
 8001066:	681b      	ldr	r3, [r3, #0]
 8001068:	2200      	movs	r2, #0
 800106a:	635a      	str	r2, [r3, #52]	@ 0x34



    /* USER CODE END WHILE */

  MX_TouchGFX_Process();
 800106c:	f007 f89a 	bl	80081a4 <MX_TouchGFX_Process>
	  HAL_ADC_Start_DMA(&hadc1,(uint32_t*)&value_adc,1);
 8001070:	e783      	b.n	8000f7a <main+0x8e>
 8001072:	bf00      	nop
 8001074:	20000540 	.word	0x20000540
 8001078:	200005d0 	.word	0x200005d0
 800107c:	2000033c 	.word	0x2000033c
 8001080:	200004f8 	.word	0x200004f8
 8001084:	20000588 	.word	0x20000588
 8001088:	200003ec 	.word	0x200003ec
 800108c:	20000004 	.word	0x20000004
 8001090:	200005dc 	.word	0x200005dc
 8001094:	200005d4 	.word	0x200005d4
 8001098:	200005d8 	.word	0x200005d8
 800109c:	40240000 	.word	0x40240000

080010a0 <SystemClock_Config>:
/**
  * @brief System Clock Configuration
  * @retval None
  */
void SystemClock_Config(void)
{
 80010a0:	b580      	push	{r7, lr}
 80010a2:	b094      	sub	sp, #80	@ 0x50
 80010a4:	af00      	add	r7, sp, #0
  RCC_OscInitTypeDef RCC_OscInitStruct = {0};
 80010a6:	f107 031c 	add.w	r3, r7, #28
 80010aa:	2234      	movs	r2, #52	@ 0x34
 80010ac:	2100      	movs	r1, #0
 80010ae:	4618      	mov	r0, r3
 80010b0:	f021 fbf5 	bl	802289e <memset>
  RCC_ClkInitTypeDef RCC_ClkInitStruct = {0};
 80010b4:	f107 0308 	add.w	r3, r7, #8
 80010b8:	2200      	movs	r2, #0
 80010ba:	601a      	str	r2, [r3, #0]
 80010bc:	605a      	str	r2, [r3, #4]
 80010be:	609a      	str	r2, [r3, #8]
 80010c0:	60da      	str	r2, [r3, #12]
 80010c2:	611a      	str	r2, [r3, #16]

  /** Configure the main internal regulator output voltage
  */
  __HAL_RCC_PWR_CLK_ENABLE();
 80010c4:	2300      	movs	r3, #0
 80010c6:	607b      	str	r3, [r7, #4]
 80010c8:	4b2c      	ldr	r3, [pc, #176]	@ (800117c <SystemClock_Config+0xdc>)
 80010ca:	6c1b      	ldr	r3, [r3, #64]	@ 0x40
 80010cc:	4a2b      	ldr	r2, [pc, #172]	@ (800117c <SystemClock_Config+0xdc>)
 80010ce:	f043 5380 	orr.w	r3, r3, #268435456	@ 0x10000000
 80010d2:	6413      	str	r3, [r2, #64]	@ 0x40
 80010d4:	4b29      	ldr	r3, [pc, #164]	@ (800117c <SystemClock_Config+0xdc>)
 80010d6:	6c1b      	ldr	r3, [r3, #64]	@ 0x40
 80010d8:	f003 5380 	and.w	r3, r3, #268435456	@ 0x10000000
 80010dc:	607b      	str	r3, [r7, #4]
 80010de:	687b      	ldr	r3, [r7, #4]
  __HAL_PWR_VOLTAGESCALING_CONFIG(PWR_REGULATOR_VOLTAGE_SCALE1);
 80010e0:	2300      	movs	r3, #0
 80010e2:	603b      	str	r3, [r7, #0]
 80010e4:	4b26      	ldr	r3, [pc, #152]	@ (8001180 <SystemClock_Config+0xe0>)
 80010e6:	681b      	ldr	r3, [r3, #0]
 80010e8:	4a25      	ldr	r2, [pc, #148]	@ (8001180 <SystemClock_Config+0xe0>)
 80010ea:	f443 4340 	orr.w	r3, r3, #49152	@ 0xc000
 80010ee:	6013      	str	r3, [r2, #0]
 80010f0:	4b23      	ldr	r3, [pc, #140]	@ (8001180 <SystemClock_Config+0xe0>)
 80010f2:	681b      	ldr	r3, [r3, #0]
 80010f4:	f403 4340 	and.w	r3, r3, #49152	@ 0xc000
 80010f8:	603b      	str	r3, [r7, #0]
 80010fa:	683b      	ldr	r3, [r7, #0]

  /** Initializes the RCC Oscillators according to the specified parameters
  * in the RCC_OscInitTypeDef structure.
  */
  RCC_OscInitStruct.OscillatorType = RCC_OSCILLATORTYPE_HSI;
 80010fc:	2302      	movs	r3, #2
 80010fe:	61fb      	str	r3, [r7, #28]
  RCC_OscInitStruct.HSIState = RCC_HSI_ON;
 8001100:	2301      	movs	r3, #1
 8001102:	62bb      	str	r3, [r7, #40]	@ 0x28
  RCC_OscInitStruct.HSICalibrationValue = RCC_HSICALIBRATION_DEFAULT;
 8001104:	2310      	movs	r3, #16
 8001106:	62fb      	str	r3, [r7, #44]	@ 0x2c
  RCC_OscInitStruct.PLL.PLLState = RCC_PLL_ON;
 8001108:	2302      	movs	r3, #2
 800110a:	637b      	str	r3, [r7, #52]	@ 0x34
  RCC_OscInitStruct.PLL.PLLSource = RCC_PLLSOURCE_HSI;
 800110c:	2300      	movs	r3, #0
 800110e:	63bb      	str	r3, [r7, #56]	@ 0x38
  RCC_OscInitStruct.PLL.PLLM = 8;
 8001110:	2308      	movs	r3, #8
 8001112:	63fb      	str	r3, [r7, #60]	@ 0x3c
  RCC_OscInitStruct.PLL.PLLN = 180;
 8001114:	23b4      	movs	r3, #180	@ 0xb4
 8001116:	643b      	str	r3, [r7, #64]	@ 0x40
  RCC_OscInitStruct.PLL.PLLP = RCC_PLLP_DIV2;
 8001118:	2302      	movs	r3, #2
 800111a:	647b      	str	r3, [r7, #68]	@ 0x44
  RCC_OscInitStruct.PLL.PLLQ = 2;
 800111c:	2302      	movs	r3, #2
 800111e:	64bb      	str	r3, [r7, #72]	@ 0x48
  RCC_OscInitStruct.PLL.PLLR = 2;
 8001120:	2302      	movs	r3, #2
 8001122:	64fb      	str	r3, [r7, #76]	@ 0x4c
  if (HAL_RCC_OscConfig(&RCC_OscInitStruct) != HAL_OK)
 8001124:	f107 031c 	add.w	r3, r7, #28
 8001128:	4618      	mov	r0, r3
 800112a:	f004 fd4d 	bl	8005bc8 <HAL_RCC_OscConfig>
 800112e:	4603      	mov	r3, r0
 8001130:	2b00      	cmp	r3, #0
 8001132:	d001      	beq.n	8001138 <SystemClock_Config+0x98>
  {
    Error_Handler();
 8001134:	f000 fb2a 	bl	800178c <Error_Handler>
  }

  /** Activate the Over-Drive mode
  */
  if (HAL_PWREx_EnableOverDrive() != HAL_OK)
 8001138:	f004 f9c0 	bl	80054bc <HAL_PWREx_EnableOverDrive>
 800113c:	4603      	mov	r3, r0
 800113e:	2b00      	cmp	r3, #0
 8001140:	d001      	beq.n	8001146 <SystemClock_Config+0xa6>
  {
    Error_Handler();
 8001142:	f000 fb23 	bl	800178c <Error_Handler>
  }

  /** Initializes the CPU, AHB and APB buses clocks
  */
  RCC_ClkInitStruct.ClockType = RCC_CLOCKTYPE_HCLK|RCC_CLOCKTYPE_SYSCLK
 8001146:	230f      	movs	r3, #15
 8001148:	60bb      	str	r3, [r7, #8]
                              |RCC_CLOCKTYPE_PCLK1|RCC_CLOCKTYPE_PCLK2;
  RCC_ClkInitStruct.SYSCLKSource = RCC_SYSCLKSOURCE_PLLCLK;
 800114a:	2302      	movs	r3, #2
 800114c:	60fb      	str	r3, [r7, #12]
  RCC_ClkInitStruct.AHBCLKDivider = RCC_SYSCLK_DIV1;
 800114e:	2300      	movs	r3, #0
 8001150:	613b      	str	r3, [r7, #16]
  RCC_ClkInitStruct.APB1CLKDivider = RCC_HCLK_DIV4;
 8001152:	f44f 53a0 	mov.w	r3, #5120	@ 0x1400
 8001156:	617b      	str	r3, [r7, #20]
  RCC_ClkInitStruct.APB2CLKDivider = RCC_HCLK_DIV2;
 8001158:	f44f 5380 	mov.w	r3, #4096	@ 0x1000
 800115c:	61bb      	str	r3, [r7, #24]

  if (HAL_RCC_ClockConfig(&RCC_ClkInitStruct, FLASH_LATENCY_5) != HAL_OK)
 800115e:	f107 0308 	add.w	r3, r7, #8
 8001162:	2105      	movs	r1, #5
 8001164:	4618      	mov	r0, r3
 8001166:	f004 f9f9 	bl	800555c <HAL_RCC_ClockConfig>
 800116a:	4603      	mov	r3, r0
 800116c:	2b00      	cmp	r3, #0
 800116e:	d001      	beq.n	8001174 <SystemClock_Config+0xd4>
  {
    Error_Handler();
 8001170:	f000 fb0c 	bl	800178c <Error_Handler>
  }
}
 8001174:	bf00      	nop
 8001176:	3750      	adds	r7, #80	@ 0x50
 8001178:	46bd      	mov	sp, r7
 800117a:	bd80      	pop	{r7, pc}
 800117c:	40023800 	.word	0x40023800
 8001180:	40007000 	.word	0x40007000

08001184 <MX_ADC1_Init>:
  * @brief ADC1 Initialization Function
  * @param None
  * @retval None
  */
static void MX_ADC1_Init(void)
{
 8001184:	b580      	push	{r7, lr}
 8001186:	b084      	sub	sp, #16
 8001188:	af00      	add	r7, sp, #0

  /* USER CODE BEGIN ADC1_Init 0 */

  /* USER CODE END ADC1_Init 0 */

  ADC_ChannelConfTypeDef sConfig = {0};
 800118a:	463b      	mov	r3, r7
 800118c:	2200      	movs	r2, #0
 800118e:	601a      	str	r2, [r3, #0]
 8001190:	605a      	str	r2, [r3, #4]
 8001192:	609a      	str	r2, [r3, #8]
 8001194:	60da      	str	r2, [r3, #12]

  /* USER CODE END ADC1_Init 1 */

  /** Configure the global features of the ADC (Clock, Resolution, Data Alignment and number of conversion)
  */
  hadc1.Instance = ADC1;
 8001196:	4b21      	ldr	r3, [pc, #132]	@ (800121c <MX_ADC1_Init+0x98>)
 8001198:	4a21      	ldr	r2, [pc, #132]	@ (8001220 <MX_ADC1_Init+0x9c>)
 800119a:	601a      	str	r2, [r3, #0]
  hadc1.Init.ClockPrescaler = ADC_CLOCK_SYNC_PCLK_DIV4;
 800119c:	4b1f      	ldr	r3, [pc, #124]	@ (800121c <MX_ADC1_Init+0x98>)
 800119e:	f44f 3280 	mov.w	r2, #65536	@ 0x10000
 80011a2:	605a      	str	r2, [r3, #4]
  hadc1.Init.Resolution = ADC_RESOLUTION_12B;
 80011a4:	4b1d      	ldr	r3, [pc, #116]	@ (800121c <MX_ADC1_Init+0x98>)
 80011a6:	2200      	movs	r2, #0
 80011a8:	609a      	str	r2, [r3, #8]
  hadc1.Init.ScanConvMode = DISABLE;
 80011aa:	4b1c      	ldr	r3, [pc, #112]	@ (800121c <MX_ADC1_Init+0x98>)
 80011ac:	2200      	movs	r2, #0
 80011ae:	611a      	str	r2, [r3, #16]
  hadc1.Init.ContinuousConvMode = ENABLE;
 80011b0:	4b1a      	ldr	r3, [pc, #104]	@ (800121c <MX_ADC1_Init+0x98>)
 80011b2:	2201      	movs	r2, #1
 80011b4:	761a      	strb	r2, [r3, #24]
  hadc1.Init.DiscontinuousConvMode = DISABLE;
 80011b6:	4b19      	ldr	r3, [pc, #100]	@ (800121c <MX_ADC1_Init+0x98>)
 80011b8:	2200      	movs	r2, #0
 80011ba:	f883 2020 	strb.w	r2, [r3, #32]
  hadc1.Init.ExternalTrigConvEdge = ADC_EXTERNALTRIGCONVEDGE_NONE;
 80011be:	4b17      	ldr	r3, [pc, #92]	@ (800121c <MX_ADC1_Init+0x98>)
 80011c0:	2200      	movs	r2, #0
 80011c2:	62da      	str	r2, [r3, #44]	@ 0x2c
  hadc1.Init.ExternalTrigConv = ADC_SOFTWARE_START;
 80011c4:	4b15      	ldr	r3, [pc, #84]	@ (800121c <MX_ADC1_Init+0x98>)
 80011c6:	4a17      	ldr	r2, [pc, #92]	@ (8001224 <MX_ADC1_Init+0xa0>)
 80011c8:	629a      	str	r2, [r3, #40]	@ 0x28
  hadc1.Init.DataAlign = ADC_DATAALIGN_RIGHT;
 80011ca:	4b14      	ldr	r3, [pc, #80]	@ (800121c <MX_ADC1_Init+0x98>)
 80011cc:	2200      	movs	r2, #0
 80011ce:	60da      	str	r2, [r3, #12]
  hadc1.Init.NbrOfConversion = 1;
 80011d0:	4b12      	ldr	r3, [pc, #72]	@ (800121c <MX_ADC1_Init+0x98>)
 80011d2:	2201      	movs	r2, #1
 80011d4:	61da      	str	r2, [r3, #28]
  hadc1.Init.DMAContinuousRequests = DISABLE;
 80011d6:	4b11      	ldr	r3, [pc, #68]	@ (800121c <MX_ADC1_Init+0x98>)
 80011d8:	2200      	movs	r2, #0
 80011da:	f883 2030 	strb.w	r2, [r3, #48]	@ 0x30
  hadc1.Init.EOCSelection = ADC_EOC_SINGLE_CONV;
 80011de:	4b0f      	ldr	r3, [pc, #60]	@ (800121c <MX_ADC1_Init+0x98>)
 80011e0:	2201      	movs	r2, #1
 80011e2:	615a      	str	r2, [r3, #20]
  if (HAL_ADC_Init(&hadc1) != HAL_OK)
 80011e4:	480d      	ldr	r0, [pc, #52]	@ (800121c <MX_ADC1_Init+0x98>)
 80011e6:	f001 fbe5 	bl	80029b4 <HAL_ADC_Init>
 80011ea:	4603      	mov	r3, r0
 80011ec:	2b00      	cmp	r3, #0
 80011ee:	d001      	beq.n	80011f4 <MX_ADC1_Init+0x70>
  {
    Error_Handler();
 80011f0:	f000 facc 	bl	800178c <Error_Handler>
  }

  /** Configure for the selected ADC regular channel its corresponding rank in the sequencer and its sample time.
  */
  sConfig.Channel = ADC_CHANNEL_10;
 80011f4:	230a      	movs	r3, #10
 80011f6:	603b      	str	r3, [r7, #0]
  sConfig.Rank = 1;
 80011f8:	2301      	movs	r3, #1
 80011fa:	607b      	str	r3, [r7, #4]
  sConfig.SamplingTime = ADC_SAMPLETIME_3CYCLES;
 80011fc:	2300      	movs	r3, #0
 80011fe:	60bb      	str	r3, [r7, #8]
  if (HAL_ADC_ConfigChannel(&hadc1, &sConfig) != HAL_OK)
 8001200:	463b      	mov	r3, r7
 8001202:	4619      	mov	r1, r3
 8001204:	4805      	ldr	r0, [pc, #20]	@ (800121c <MX_ADC1_Init+0x98>)
 8001206:	f001 fe61 	bl	8002ecc <HAL_ADC_ConfigChannel>
 800120a:	4603      	mov	r3, r0
 800120c:	2b00      	cmp	r3, #0
 800120e:	d001      	beq.n	8001214 <MX_ADC1_Init+0x90>
  {
    Error_Handler();
 8001210:	f000 fabc 	bl	800178c <Error_Handler>
  }
  /* USER CODE BEGIN ADC1_Init 2 */

  /* USER CODE END ADC1_Init 2 */

}
 8001214:	bf00      	nop
 8001216:	3710      	adds	r7, #16
 8001218:	46bd      	mov	sp, r7
 800121a:	bd80      	pop	{r7, pc}
 800121c:	2000033c 	.word	0x2000033c
 8001220:	40012000 	.word	0x40012000
 8001224:	0f000001 	.word	0x0f000001

08001228 <MX_CRC_Init>:
  * @brief CRC Initialization Function
  * @param None
  * @retval None
  */
static void MX_CRC_Init(void)
{
 8001228:	b580      	push	{r7, lr}
 800122a:	af00      	add	r7, sp, #0
  /* USER CODE END CRC_Init 0 */

  /* USER CODE BEGIN CRC_Init 1 */

  /* USER CODE END CRC_Init 1 */
  hcrc.Instance = CRC;
 800122c:	4b06      	ldr	r3, [pc, #24]	@ (8001248 <MX_CRC_Init+0x20>)
 800122e:	4a07      	ldr	r2, [pc, #28]	@ (800124c <MX_CRC_Init+0x24>)
 8001230:	601a      	str	r2, [r3, #0]
  if (HAL_CRC_Init(&hcrc) != HAL_OK)
 8001232:	4805      	ldr	r0, [pc, #20]	@ (8001248 <MX_CRC_Init+0x20>)
 8001234:	f002 fa73 	bl	800371e <HAL_CRC_Init>
 8001238:	4603      	mov	r3, r0
 800123a:	2b00      	cmp	r3, #0
 800123c:	d001      	beq.n	8001242 <MX_CRC_Init+0x1a>
  {
    Error_Handler();
 800123e:	f000 faa5 	bl	800178c <Error_Handler>
  }
  /* USER CODE BEGIN CRC_Init 2 */

  /* USER CODE END CRC_Init 2 */

}
 8001242:	bf00      	nop
 8001244:	bd80      	pop	{r7, pc}
 8001246:	bf00      	nop
 8001248:	200003e4 	.word	0x200003e4
 800124c:	40023000 	.word	0x40023000

08001250 <MX_I2C2_Init>:
  * @brief I2C2 Initialization Function
  * @param None
  * @retval None
  */
static void MX_I2C2_Init(void)
{
 8001250:	b580      	push	{r7, lr}
 8001252:	af00      	add	r7, sp, #0
  /* USER CODE END I2C2_Init 0 */

  /* USER CODE BEGIN I2C2_Init 1 */

  /* USER CODE END I2C2_Init 1 */
  hi2c2.Instance = I2C2;
 8001254:	4b12      	ldr	r3, [pc, #72]	@ (80012a0 <MX_I2C2_Init+0x50>)
 8001256:	4a13      	ldr	r2, [pc, #76]	@ (80012a4 <MX_I2C2_Init+0x54>)
 8001258:	601a      	str	r2, [r3, #0]
  hi2c2.Init.ClockSpeed = 100000;
 800125a:	4b11      	ldr	r3, [pc, #68]	@ (80012a0 <MX_I2C2_Init+0x50>)
 800125c:	4a12      	ldr	r2, [pc, #72]	@ (80012a8 <MX_I2C2_Init+0x58>)
 800125e:	605a      	str	r2, [r3, #4]
  hi2c2.Init.DutyCycle = I2C_DUTYCYCLE_2;
 8001260:	4b0f      	ldr	r3, [pc, #60]	@ (80012a0 <MX_I2C2_Init+0x50>)
 8001262:	2200      	movs	r2, #0
 8001264:	609a      	str	r2, [r3, #8]
  hi2c2.Init.OwnAddress1 = 0;
 8001266:	4b0e      	ldr	r3, [pc, #56]	@ (80012a0 <MX_I2C2_Init+0x50>)
 8001268:	2200      	movs	r2, #0
 800126a:	60da      	str	r2, [r3, #12]
  hi2c2.Init.AddressingMode = I2C_ADDRESSINGMODE_7BIT;
 800126c:	4b0c      	ldr	r3, [pc, #48]	@ (80012a0 <MX_I2C2_Init+0x50>)
 800126e:	f44f 4280 	mov.w	r2, #16384	@ 0x4000
 8001272:	611a      	str	r2, [r3, #16]
  hi2c2.Init.DualAddressMode = I2C_DUALADDRESS_DISABLE;
 8001274:	4b0a      	ldr	r3, [pc, #40]	@ (80012a0 <MX_I2C2_Init+0x50>)
 8001276:	2200      	movs	r2, #0
 8001278:	615a      	str	r2, [r3, #20]
  hi2c2.Init.OwnAddress2 = 0;
 800127a:	4b09      	ldr	r3, [pc, #36]	@ (80012a0 <MX_I2C2_Init+0x50>)
 800127c:	2200      	movs	r2, #0
 800127e:	619a      	str	r2, [r3, #24]
  hi2c2.Init.GeneralCallMode = I2C_GENERALCALL_DISABLE;
 8001280:	4b07      	ldr	r3, [pc, #28]	@ (80012a0 <MX_I2C2_Init+0x50>)
 8001282:	2200      	movs	r2, #0
 8001284:	61da      	str	r2, [r3, #28]
  hi2c2.Init.NoStretchMode = I2C_NOSTRETCH_DISABLE;
 8001286:	4b06      	ldr	r3, [pc, #24]	@ (80012a0 <MX_I2C2_Init+0x50>)
 8001288:	2200      	movs	r2, #0
 800128a:	621a      	str	r2, [r3, #32]
  if (HAL_I2C_Init(&hi2c2) != HAL_OK)
 800128c:	4804      	ldr	r0, [pc, #16]	@ (80012a0 <MX_I2C2_Init+0x50>)
 800128e:	f002 ffed 	bl	800426c <HAL_I2C_Init>
 8001292:	4603      	mov	r3, r0
 8001294:	2b00      	cmp	r3, #0
 8001296:	d001      	beq.n	800129c <MX_I2C2_Init+0x4c>
  {
    Error_Handler();
 8001298:	f000 fa78 	bl	800178c <Error_Handler>
  }
  /* USER CODE BEGIN I2C2_Init 2 */

  /* USER CODE END I2C2_Init 2 */

}
 800129c:	bf00      	nop
 800129e:	bd80      	pop	{r7, pc}
 80012a0:	200003ec 	.word	0x200003ec
 80012a4:	40005800 	.word	0x40005800
 80012a8:	000186a0 	.word	0x000186a0

080012ac <MX_SPI2_Init>:
  * @brief SPI2 Initialization Function
  * @param None
  * @retval None
  */
static void MX_SPI2_Init(void)
{
 80012ac:	b580      	push	{r7, lr}
 80012ae:	af00      	add	r7, sp, #0

  /* USER CODE BEGIN SPI2_Init 1 */

  /* USER CODE END SPI2_Init 1 */
  /* SPI2 parameter configuration*/
  hspi2.Instance = SPI2;
 80012b0:	4b17      	ldr	r3, [pc, #92]	@ (8001310 <MX_SPI2_Init+0x64>)
 80012b2:	4a18      	ldr	r2, [pc, #96]	@ (8001314 <MX_SPI2_Init+0x68>)
 80012b4:	601a      	str	r2, [r3, #0]
  hspi2.Init.Mode = SPI_MODE_MASTER;
 80012b6:	4b16      	ldr	r3, [pc, #88]	@ (8001310 <MX_SPI2_Init+0x64>)
 80012b8:	f44f 7282 	mov.w	r2, #260	@ 0x104
 80012bc:	605a      	str	r2, [r3, #4]
  hspi2.Init.Direction = SPI_DIRECTION_2LINES;
 80012be:	4b14      	ldr	r3, [pc, #80]	@ (8001310 <MX_SPI2_Init+0x64>)
 80012c0:	2200      	movs	r2, #0
 80012c2:	609a      	str	r2, [r3, #8]
  hspi2.Init.DataSize = SPI_DATASIZE_8BIT;
 80012c4:	4b12      	ldr	r3, [pc, #72]	@ (8001310 <MX_SPI2_Init+0x64>)
 80012c6:	2200      	movs	r2, #0
 80012c8:	60da      	str	r2, [r3, #12]
  hspi2.Init.CLKPolarity = SPI_POLARITY_LOW;
 80012ca:	4b11      	ldr	r3, [pc, #68]	@ (8001310 <MX_SPI2_Init+0x64>)
 80012cc:	2200      	movs	r2, #0
 80012ce:	611a      	str	r2, [r3, #16]
  hspi2.Init.CLKPhase = SPI_PHASE_1EDGE;
 80012d0:	4b0f      	ldr	r3, [pc, #60]	@ (8001310 <MX_SPI2_Init+0x64>)
 80012d2:	2200      	movs	r2, #0
 80012d4:	615a      	str	r2, [r3, #20]
  hspi2.Init.NSS = SPI_NSS_SOFT;
 80012d6:	4b0e      	ldr	r3, [pc, #56]	@ (8001310 <MX_SPI2_Init+0x64>)
 80012d8:	f44f 7200 	mov.w	r2, #512	@ 0x200
 80012dc:	619a      	str	r2, [r3, #24]
  hspi2.Init.BaudRatePrescaler = SPI_BAUDRATEPRESCALER_2;
 80012de:	4b0c      	ldr	r3, [pc, #48]	@ (8001310 <MX_SPI2_Init+0x64>)
 80012e0:	2200      	movs	r2, #0
 80012e2:	61da      	str	r2, [r3, #28]
  hspi2.Init.FirstBit = SPI_FIRSTBIT_MSB;
 80012e4:	4b0a      	ldr	r3, [pc, #40]	@ (8001310 <MX_SPI2_Init+0x64>)
 80012e6:	2200      	movs	r2, #0
 80012e8:	621a      	str	r2, [r3, #32]
  hspi2.Init.TIMode = SPI_TIMODE_DISABLE;
 80012ea:	4b09      	ldr	r3, [pc, #36]	@ (8001310 <MX_SPI2_Init+0x64>)
 80012ec:	2200      	movs	r2, #0
 80012ee:	625a      	str	r2, [r3, #36]	@ 0x24
  hspi2.Init.CRCCalculation = SPI_CRCCALCULATION_DISABLE;
 80012f0:	4b07      	ldr	r3, [pc, #28]	@ (8001310 <MX_SPI2_Init+0x64>)
 80012f2:	2200      	movs	r2, #0
 80012f4:	629a      	str	r2, [r3, #40]	@ 0x28
  hspi2.Init.CRCPolynomial = 10;
 80012f6:	4b06      	ldr	r3, [pc, #24]	@ (8001310 <MX_SPI2_Init+0x64>)
 80012f8:	220a      	movs	r2, #10
 80012fa:	62da      	str	r2, [r3, #44]	@ 0x2c
  if (HAL_SPI_Init(&hspi2) != HAL_OK)
 80012fc:	4804      	ldr	r0, [pc, #16]	@ (8001310 <MX_SPI2_Init+0x64>)
 80012fe:	f004 ff01 	bl	8006104 <HAL_SPI_Init>
 8001302:	4603      	mov	r3, r0
 8001304:	2b00      	cmp	r3, #0
 8001306:	d001      	beq.n	800130c <MX_SPI2_Init+0x60>
  {
    Error_Handler();
 8001308:	f000 fa40 	bl	800178c <Error_Handler>
  }
  /* USER CODE BEGIN SPI2_Init 2 */

  /* USER CODE END SPI2_Init 2 */

}
 800130c:	bf00      	nop
 800130e:	bd80      	pop	{r7, pc}
 8001310:	20000440 	.word	0x20000440
 8001314:	40003800 	.word	0x40003800

08001318 <MX_TIM2_Init>:
  * @brief TIM2 Initialization Function
  * @param None
  * @retval None
  */
static void MX_TIM2_Init(void)
{
 8001318:	b580      	push	{r7, lr}
 800131a:	b08e      	sub	sp, #56	@ 0x38
 800131c:	af00      	add	r7, sp, #0

  /* USER CODE BEGIN TIM2_Init 0 */

  /* USER CODE END TIM2_Init 0 */

  TIM_ClockConfigTypeDef sClockSourceConfig = {0};
 800131e:	f107 0328 	add.w	r3, r7, #40	@ 0x28
 8001322:	2200      	movs	r2, #0
 8001324:	601a      	str	r2, [r3, #0]
 8001326:	605a      	str	r2, [r3, #4]
 8001328:	609a      	str	r2, [r3, #8]
 800132a:	60da      	str	r2, [r3, #12]
  TIM_MasterConfigTypeDef sMasterConfig = {0};
 800132c:	f107 0320 	add.w	r3, r7, #32
 8001330:	2200      	movs	r2, #0
 8001332:	601a      	str	r2, [r3, #0]
 8001334:	605a      	str	r2, [r3, #4]
  TIM_OC_InitTypeDef sConfigOC = {0};
 8001336:	1d3b      	adds	r3, r7, #4
 8001338:	2200      	movs	r2, #0
 800133a:	601a      	str	r2, [r3, #0]
 800133c:	605a      	str	r2, [r3, #4]
 800133e:	609a      	str	r2, [r3, #8]
 8001340:	60da      	str	r2, [r3, #12]
 8001342:	611a      	str	r2, [r3, #16]
 8001344:	615a      	str	r2, [r3, #20]
 8001346:	619a      	str	r2, [r3, #24]

  /* USER CODE BEGIN TIM2_Init 1 */

  /* USER CODE END TIM2_Init 1 */
  htim2.Instance = TIM2;
 8001348:	4b2d      	ldr	r3, [pc, #180]	@ (8001400 <MX_TIM2_Init+0xe8>)
 800134a:	f04f 4280 	mov.w	r2, #1073741824	@ 0x40000000
 800134e:	601a      	str	r2, [r3, #0]
  htim2.Init.Prescaler = 100;
 8001350:	4b2b      	ldr	r3, [pc, #172]	@ (8001400 <MX_TIM2_Init+0xe8>)
 8001352:	2264      	movs	r2, #100	@ 0x64
 8001354:	605a      	str	r2, [r3, #4]
  htim2.Init.CounterMode = TIM_COUNTERMODE_UP;
 8001356:	4b2a      	ldr	r3, [pc, #168]	@ (8001400 <MX_TIM2_Init+0xe8>)
 8001358:	2200      	movs	r2, #0
 800135a:	609a      	str	r2, [r3, #8]
  htim2.Init.Period = 4096;
 800135c:	4b28      	ldr	r3, [pc, #160]	@ (8001400 <MX_TIM2_Init+0xe8>)
 800135e:	f44f 5280 	mov.w	r2, #4096	@ 0x1000
 8001362:	60da      	str	r2, [r3, #12]
  htim2.Init.ClockDivision = TIM_CLOCKDIVISION_DIV1;
 8001364:	4b26      	ldr	r3, [pc, #152]	@ (8001400 <MX_TIM2_Init+0xe8>)
 8001366:	2200      	movs	r2, #0
 8001368:	611a      	str	r2, [r3, #16]
  htim2.Init.AutoReloadPreload = TIM_AUTORELOAD_PRELOAD_DISABLE;
 800136a:	4b25      	ldr	r3, [pc, #148]	@ (8001400 <MX_TIM2_Init+0xe8>)
 800136c:	2200      	movs	r2, #0
 800136e:	619a      	str	r2, [r3, #24]
  if (HAL_TIM_Base_Init(&htim2) != HAL_OK)
 8001370:	4823      	ldr	r0, [pc, #140]	@ (8001400 <MX_TIM2_Init+0xe8>)
 8001372:	f005 fedf 	bl	8007134 <HAL_TIM_Base_Init>
 8001376:	4603      	mov	r3, r0
 8001378:	2b00      	cmp	r3, #0
 800137a:	d001      	beq.n	8001380 <MX_TIM2_Init+0x68>
  {
    Error_Handler();
 800137c:	f000 fa06 	bl	800178c <Error_Handler>
  }
  sClockSourceConfig.ClockSource = TIM_CLOCKSOURCE_INTERNAL;
 8001380:	f44f 5380 	mov.w	r3, #4096	@ 0x1000
 8001384:	62bb      	str	r3, [r7, #40]	@ 0x28
  if (HAL_TIM_ConfigClockSource(&htim2, &sClockSourceConfig) != HAL_OK)
 8001386:	f107 0328 	add.w	r3, r7, #40	@ 0x28
 800138a:	4619      	mov	r1, r3
 800138c:	481c      	ldr	r0, [pc, #112]	@ (8001400 <MX_TIM2_Init+0xe8>)
 800138e:	f006 fa65 	bl	800785c <HAL_TIM_ConfigClockSource>
 8001392:	4603      	mov	r3, r0
 8001394:	2b00      	cmp	r3, #0
 8001396:	d001      	beq.n	800139c <MX_TIM2_Init+0x84>
  {
    Error_Handler();
 8001398:	f000 f9f8 	bl	800178c <Error_Handler>
  }
  if (HAL_TIM_PWM_Init(&htim2) != HAL_OK)
 800139c:	4818      	ldr	r0, [pc, #96]	@ (8001400 <MX_TIM2_Init+0xe8>)
 800139e:	f005 ff89 	bl	80072b4 <HAL_TIM_PWM_Init>
 80013a2:	4603      	mov	r3, r0
 80013a4:	2b00      	cmp	r3, #0
 80013a6:	d001      	beq.n	80013ac <MX_TIM2_Init+0x94>
  {
    Error_Handler();
 80013a8:	f000 f9f0 	bl	800178c <Error_Handler>
  }
  sMasterConfig.MasterOutputTrigger = TIM_TRGO_RESET;
 80013ac:	2300      	movs	r3, #0
 80013ae:	623b      	str	r3, [r7, #32]
  sMasterConfig.MasterSlaveMode = TIM_MASTERSLAVEMODE_DISABLE;
 80013b0:	2300      	movs	r3, #0
 80013b2:	627b      	str	r3, [r7, #36]	@ 0x24
  if (HAL_TIMEx_MasterConfigSynchronization(&htim2, &sMasterConfig) != HAL_OK)
 80013b4:	f107 0320 	add.w	r3, r7, #32
 80013b8:	4619      	mov	r1, r3
 80013ba:	4811      	ldr	r0, [pc, #68]	@ (8001400 <MX_TIM2_Init+0xe8>)
 80013bc:	f006 fe5a 	bl	8008074 <HAL_TIMEx_MasterConfigSynchronization>
 80013c0:	4603      	mov	r3, r0
 80013c2:	2b00      	cmp	r3, #0
 80013c4:	d001      	beq.n	80013ca <MX_TIM2_Init+0xb2>
  {
    Error_Handler();
 80013c6:	f000 f9e1 	bl	800178c <Error_Handler>
  }
  sConfigOC.OCMode = TIM_OCMODE_PWM1;
 80013ca:	2360      	movs	r3, #96	@ 0x60
 80013cc:	607b      	str	r3, [r7, #4]
  sConfigOC.Pulse = 0;
 80013ce:	2300      	movs	r3, #0
 80013d0:	60bb      	str	r3, [r7, #8]
  sConfigOC.OCPolarity = TIM_OCPOLARITY_HIGH;
 80013d2:	2300      	movs	r3, #0
 80013d4:	60fb      	str	r3, [r7, #12]
  sConfigOC.OCFastMode = TIM_OCFAST_DISABLE;
 80013d6:	2300      	movs	r3, #0
 80013d8:	617b      	str	r3, [r7, #20]
  if (HAL_TIM_PWM_ConfigChannel(&htim2, &sConfigOC, TIM_CHANNEL_1) != HAL_OK)
 80013da:	1d3b      	adds	r3, r7, #4
 80013dc:	2200      	movs	r2, #0
 80013de:	4619      	mov	r1, r3
 80013e0:	4807      	ldr	r0, [pc, #28]	@ (8001400 <MX_TIM2_Init+0xe8>)
 80013e2:	f006 f979 	bl	80076d8 <HAL_TIM_PWM_ConfigChannel>
 80013e6:	4603      	mov	r3, r0
 80013e8:	2b00      	cmp	r3, #0
 80013ea:	d001      	beq.n	80013f0 <MX_TIM2_Init+0xd8>
  {
    Error_Handler();
 80013ec:	f000 f9ce 	bl	800178c <Error_Handler>
  }
  /* USER CODE BEGIN TIM2_Init 2 */

  /* USER CODE END TIM2_Init 2 */
  HAL_TIM_MspPostInit(&htim2);
 80013f0:	4803      	ldr	r0, [pc, #12]	@ (8001400 <MX_TIM2_Init+0xe8>)
 80013f2:	f000 fc11 	bl	8001c18 <HAL_TIM_MspPostInit>

}
 80013f6:	bf00      	nop
 80013f8:	3738      	adds	r7, #56	@ 0x38
 80013fa:	46bd      	mov	sp, r7
 80013fc:	bd80      	pop	{r7, pc}
 80013fe:	bf00      	nop
 8001400:	200004f8 	.word	0x200004f8

08001404 <MX_TIM3_Init>:
  * @brief TIM3 Initialization Function
  * @param None
  * @retval None
  */
static void MX_TIM3_Init(void)
{
 8001404:	b580      	push	{r7, lr}
 8001406:	b086      	sub	sp, #24
 8001408:	af00      	add	r7, sp, #0

  /* USER CODE BEGIN TIM3_Init 0 */

  /* USER CODE END TIM3_Init 0 */

  TIM_ClockConfigTypeDef sClockSourceConfig = {0};
 800140a:	f107 0308 	add.w	r3, r7, #8
 800140e:	2200      	movs	r2, #0
 8001410:	601a      	str	r2, [r3, #0]
 8001412:	605a      	str	r2, [r3, #4]
 8001414:	609a      	str	r2, [r3, #8]
 8001416:	60da      	str	r2, [r3, #12]
  TIM_MasterConfigTypeDef sMasterConfig = {0};
 8001418:	463b      	mov	r3, r7
 800141a:	2200      	movs	r2, #0
 800141c:	601a      	str	r2, [r3, #0]
 800141e:	605a      	str	r2, [r3, #4]

  /* USER CODE BEGIN TIM3_Init 1 */

  /* USER CODE END TIM3_Init 1 */
  htim3.Instance = TIM3;
 8001420:	4b1d      	ldr	r3, [pc, #116]	@ (8001498 <MX_TIM3_Init+0x94>)
 8001422:	4a1e      	ldr	r2, [pc, #120]	@ (800149c <MX_TIM3_Init+0x98>)
 8001424:	601a      	str	r2, [r3, #0]
  htim3.Init.Prescaler = 9999;
 8001426:	4b1c      	ldr	r3, [pc, #112]	@ (8001498 <MX_TIM3_Init+0x94>)
 8001428:	f242 720f 	movw	r2, #9999	@ 0x270f
 800142c:	605a      	str	r2, [r3, #4]
  htim3.Init.CounterMode = TIM_COUNTERMODE_UP;
 800142e:	4b1a      	ldr	r3, [pc, #104]	@ (8001498 <MX_TIM3_Init+0x94>)
 8001430:	2200      	movs	r2, #0
 8001432:	609a      	str	r2, [r3, #8]
  htim3.Init.Period = 149;
 8001434:	4b18      	ldr	r3, [pc, #96]	@ (8001498 <MX_TIM3_Init+0x94>)
 8001436:	2295      	movs	r2, #149	@ 0x95
 8001438:	60da      	str	r2, [r3, #12]
  htim3.Init.ClockDivision = TIM_CLOCKDIVISION_DIV1;
 800143a:	4b17      	ldr	r3, [pc, #92]	@ (8001498 <MX_TIM3_Init+0x94>)
 800143c:	2200      	movs	r2, #0
 800143e:	611a      	str	r2, [r3, #16]
  htim3.Init.AutoReloadPreload = TIM_AUTORELOAD_PRELOAD_DISABLE;
 8001440:	4b15      	ldr	r3, [pc, #84]	@ (8001498 <MX_TIM3_Init+0x94>)
 8001442:	2200      	movs	r2, #0
 8001444:	619a      	str	r2, [r3, #24]
  if (HAL_TIM_Base_Init(&htim3) != HAL_OK)
 8001446:	4814      	ldr	r0, [pc, #80]	@ (8001498 <MX_TIM3_Init+0x94>)
 8001448:	f005 fe74 	bl	8007134 <HAL_TIM_Base_Init>
 800144c:	4603      	mov	r3, r0
 800144e:	2b00      	cmp	r3, #0
 8001450:	d001      	beq.n	8001456 <MX_TIM3_Init+0x52>
  {
    Error_Handler();
 8001452:	f000 f99b 	bl	800178c <Error_Handler>
  }
  sClockSourceConfig.ClockSource = TIM_CLOCKSOURCE_INTERNAL;
 8001456:	f44f 5380 	mov.w	r3, #4096	@ 0x1000
 800145a:	60bb      	str	r3, [r7, #8]
  if (HAL_TIM_ConfigClockSource(&htim3, &sClockSourceConfig) != HAL_OK)
 800145c:	f107 0308 	add.w	r3, r7, #8
 8001460:	4619      	mov	r1, r3
 8001462:	480d      	ldr	r0, [pc, #52]	@ (8001498 <MX_TIM3_Init+0x94>)
 8001464:	f006 f9fa 	bl	800785c <HAL_TIM_ConfigClockSource>
 8001468:	4603      	mov	r3, r0
 800146a:	2b00      	cmp	r3, #0
 800146c:	d001      	beq.n	8001472 <MX_TIM3_Init+0x6e>
  {
    Error_Handler();
 800146e:	f000 f98d 	bl	800178c <Error_Handler>
  }
  sMasterConfig.MasterOutputTrigger = TIM_TRGO_RESET;
 8001472:	2300      	movs	r3, #0
 8001474:	603b      	str	r3, [r7, #0]
  sMasterConfig.MasterSlaveMode = TIM_MASTERSLAVEMODE_DISABLE;
 8001476:	2300      	movs	r3, #0
 8001478:	607b      	str	r3, [r7, #4]
  if (HAL_TIMEx_MasterConfigSynchronization(&htim3, &sMasterConfig) != HAL_OK)
 800147a:	463b      	mov	r3, r7
 800147c:	4619      	mov	r1, r3
 800147e:	4806      	ldr	r0, [pc, #24]	@ (8001498 <MX_TIM3_Init+0x94>)
 8001480:	f006 fdf8 	bl	8008074 <HAL_TIMEx_MasterConfigSynchronization>
 8001484:	4603      	mov	r3, r0
 8001486:	2b00      	cmp	r3, #0
 8001488:	d001      	beq.n	800148e <MX_TIM3_Init+0x8a>
  {
    Error_Handler();
 800148a:	f000 f97f 	bl	800178c <Error_Handler>
  }
  /* USER CODE BEGIN TIM3_Init 2 */

  /* USER CODE END TIM3_Init 2 */

}
 800148e:	bf00      	nop
 8001490:	3718      	adds	r7, #24
 8001492:	46bd      	mov	sp, r7
 8001494:	bd80      	pop	{r7, pc}
 8001496:	bf00      	nop
 8001498:	20000540 	.word	0x20000540
 800149c:	40000400 	.word	0x40000400

080014a0 <MX_TIM4_Init>:
  * @brief TIM4 Initialization Function
  * @param None
  * @retval None
  */
static void MX_TIM4_Init(void)
{
 80014a0:	b580      	push	{r7, lr}
 80014a2:	b086      	sub	sp, #24
 80014a4:	af00      	add	r7, sp, #0

  /* USER CODE BEGIN TIM4_Init 0 */

  /* USER CODE END TIM4_Init 0 */

  TIM_ClockConfigTypeDef sClockSourceConfig = {0};
 80014a6:	f107 0308 	add.w	r3, r7, #8
 80014aa:	2200      	movs	r2, #0
 80014ac:	601a      	str	r2, [r3, #0]
 80014ae:	605a      	str	r2, [r3, #4]
 80014b0:	609a      	str	r2, [r3, #8]
 80014b2:	60da      	str	r2, [r3, #12]
  TIM_MasterConfigTypeDef sMasterConfig = {0};
 80014b4:	463b      	mov	r3, r7
 80014b6:	2200      	movs	r2, #0
 80014b8:	601a      	str	r2, [r3, #0]
 80014ba:	605a      	str	r2, [r3, #4]

  /* USER CODE BEGIN TIM4_Init 1 */

  /* USER CODE END TIM4_Init 1 */
  htim4.Instance = TIM4;
 80014bc:	4b1d      	ldr	r3, [pc, #116]	@ (8001534 <MX_TIM4_Init+0x94>)
 80014be:	4a1e      	ldr	r2, [pc, #120]	@ (8001538 <MX_TIM4_Init+0x98>)
 80014c0:	601a      	str	r2, [r3, #0]
  htim4.Init.Prescaler = 59999;
 80014c2:	4b1c      	ldr	r3, [pc, #112]	@ (8001534 <MX_TIM4_Init+0x94>)
 80014c4:	f64e 225f 	movw	r2, #59999	@ 0xea5f
 80014c8:	605a      	str	r2, [r3, #4]
  htim4.Init.CounterMode = TIM_COUNTERMODE_UP;
 80014ca:	4b1a      	ldr	r3, [pc, #104]	@ (8001534 <MX_TIM4_Init+0x94>)
 80014cc:	2200      	movs	r2, #0
 80014ce:	609a      	str	r2, [r3, #8]
  htim4.Init.Period = 1499;
 80014d0:	4b18      	ldr	r3, [pc, #96]	@ (8001534 <MX_TIM4_Init+0x94>)
 80014d2:	f240 52db 	movw	r2, #1499	@ 0x5db
 80014d6:	60da      	str	r2, [r3, #12]
  htim4.Init.ClockDivision = TIM_CLOCKDIVISION_DIV1;
 80014d8:	4b16      	ldr	r3, [pc, #88]	@ (8001534 <MX_TIM4_Init+0x94>)
 80014da:	2200      	movs	r2, #0
 80014dc:	611a      	str	r2, [r3, #16]
  htim4.Init.AutoReloadPreload = TIM_AUTORELOAD_PRELOAD_DISABLE;
 80014de:	4b15      	ldr	r3, [pc, #84]	@ (8001534 <MX_TIM4_Init+0x94>)
 80014e0:	2200      	movs	r2, #0
 80014e2:	619a      	str	r2, [r3, #24]
  if (HAL_TIM_Base_Init(&htim4) != HAL_OK)
 80014e4:	4813      	ldr	r0, [pc, #76]	@ (8001534 <MX_TIM4_Init+0x94>)
 80014e6:	f005 fe25 	bl	8007134 <HAL_TIM_Base_Init>
 80014ea:	4603      	mov	r3, r0
 80014ec:	2b00      	cmp	r3, #0
 80014ee:	d001      	beq.n	80014f4 <MX_TIM4_Init+0x54>
  {
    Error_Handler();
 80014f0:	f000 f94c 	bl	800178c <Error_Handler>
  }
  sClockSourceConfig.ClockSource = TIM_CLOCKSOURCE_INTERNAL;
 80014f4:	f44f 5380 	mov.w	r3, #4096	@ 0x1000
 80014f8:	60bb      	str	r3, [r7, #8]
  if (HAL_TIM_ConfigClockSource(&htim4, &sClockSourceConfig) != HAL_OK)
 80014fa:	f107 0308 	add.w	r3, r7, #8
 80014fe:	4619      	mov	r1, r3
 8001500:	480c      	ldr	r0, [pc, #48]	@ (8001534 <MX_TIM4_Init+0x94>)
 8001502:	f006 f9ab 	bl	800785c <HAL_TIM_ConfigClockSource>
 8001506:	4603      	mov	r3, r0
 8001508:	2b00      	cmp	r3, #0
 800150a:	d001      	beq.n	8001510 <MX_TIM4_Init+0x70>
  {
    Error_Handler();
 800150c:	f000 f93e 	bl	800178c <Error_Handler>
  }
  sMasterConfig.MasterOutputTrigger = TIM_TRGO_RESET;
 8001510:	2300      	movs	r3, #0
 8001512:	603b      	str	r3, [r7, #0]
  sMasterConfig.MasterSlaveMode = TIM_MASTERSLAVEMODE_DISABLE;
 8001514:	2300      	movs	r3, #0
 8001516:	607b      	str	r3, [r7, #4]
  if (HAL_TIMEx_MasterConfigSynchronization(&htim4, &sMasterConfig) != HAL_OK)
 8001518:	463b      	mov	r3, r7
 800151a:	4619      	mov	r1, r3
 800151c:	4805      	ldr	r0, [pc, #20]	@ (8001534 <MX_TIM4_Init+0x94>)
 800151e:	f006 fda9 	bl	8008074 <HAL_TIMEx_MasterConfigSynchronization>
 8001522:	4603      	mov	r3, r0
 8001524:	2b00      	cmp	r3, #0
 8001526:	d001      	beq.n	800152c <MX_TIM4_Init+0x8c>
  {
    Error_Handler();
 8001528:	f000 f930 	bl	800178c <Error_Handler>
  }
  /* USER CODE BEGIN TIM4_Init 2 */

  /* USER CODE END TIM4_Init 2 */

}
 800152c:	bf00      	nop
 800152e:	3718      	adds	r7, #24
 8001530:	46bd      	mov	sp, r7
 8001532:	bd80      	pop	{r7, pc}
 8001534:	20000588 	.word	0x20000588
 8001538:	40000800 	.word	0x40000800

0800153c <MX_DMA_Init>:

/**
  * Enable DMA controller clock
  */
static void MX_DMA_Init(void)
{
 800153c:	b580      	push	{r7, lr}
 800153e:	b082      	sub	sp, #8
 8001540:	af00      	add	r7, sp, #0

  /* DMA controller clock enable */
  __HAL_RCC_DMA1_CLK_ENABLE();
 8001542:	2300      	movs	r3, #0
 8001544:	607b      	str	r3, [r7, #4]
 8001546:	4b17      	ldr	r3, [pc, #92]	@ (80015a4 <MX_DMA_Init+0x68>)
 8001548:	6b1b      	ldr	r3, [r3, #48]	@ 0x30
 800154a:	4a16      	ldr	r2, [pc, #88]	@ (80015a4 <MX_DMA_Init+0x68>)
 800154c:	f443 1300 	orr.w	r3, r3, #2097152	@ 0x200000
 8001550:	6313      	str	r3, [r2, #48]	@ 0x30
 8001552:	4b14      	ldr	r3, [pc, #80]	@ (80015a4 <MX_DMA_Init+0x68>)
 8001554:	6b1b      	ldr	r3, [r3, #48]	@ 0x30
 8001556:	f403 1300 	and.w	r3, r3, #2097152	@ 0x200000
 800155a:	607b      	str	r3, [r7, #4]
 800155c:	687b      	ldr	r3, [r7, #4]
  __HAL_RCC_DMA2_CLK_ENABLE();
 800155e:	2300      	movs	r3, #0
 8001560:	603b      	str	r3, [r7, #0]
 8001562:	4b10      	ldr	r3, [pc, #64]	@ (80015a4 <MX_DMA_Init+0x68>)
 8001564:	6b1b      	ldr	r3, [r3, #48]	@ 0x30
 8001566:	4a0f      	ldr	r2, [pc, #60]	@ (80015a4 <MX_DMA_Init+0x68>)
 8001568:	f443 0380 	orr.w	r3, r3, #4194304	@ 0x400000
 800156c:	6313      	str	r3, [r2, #48]	@ 0x30
 800156e:	4b0d      	ldr	r3, [pc, #52]	@ (80015a4 <MX_DMA_Init+0x68>)
 8001570:	6b1b      	ldr	r3, [r3, #48]	@ 0x30
 8001572:	f403 0380 	and.w	r3, r3, #4194304	@ 0x400000
 8001576:	603b      	str	r3, [r7, #0]
 8001578:	683b      	ldr	r3, [r7, #0]

  /* DMA interrupt init */
  /* DMA1_Stream4_IRQn interrupt configuration */
  HAL_NVIC_SetPriority(DMA1_Stream4_IRQn, 0, 0);
 800157a:	2200      	movs	r2, #0
 800157c:	2100      	movs	r1, #0
 800157e:	200f      	movs	r0, #15
 8001580:	f002 f87b 	bl	800367a <HAL_NVIC_SetPriority>
  HAL_NVIC_EnableIRQ(DMA1_Stream4_IRQn);
 8001584:	200f      	movs	r0, #15
 8001586:	f002 f894 	bl	80036b2 <HAL_NVIC_EnableIRQ>
  /* DMA2_Stream0_IRQn interrupt configuration */
  HAL_NVIC_SetPriority(DMA2_Stream0_IRQn, 0, 0);
 800158a:	2200      	movs	r2, #0
 800158c:	2100      	movs	r1, #0
 800158e:	2038      	movs	r0, #56	@ 0x38
 8001590:	f002 f873 	bl	800367a <HAL_NVIC_SetPriority>
  HAL_NVIC_EnableIRQ(DMA2_Stream0_IRQn);
 8001594:	2038      	movs	r0, #56	@ 0x38
 8001596:	f002 f88c 	bl	80036b2 <HAL_NVIC_EnableIRQ>

}
 800159a:	bf00      	nop
 800159c:	3708      	adds	r7, #8
 800159e:	46bd      	mov	sp, r7
 80015a0:	bd80      	pop	{r7, pc}
 80015a2:	bf00      	nop
 80015a4:	40023800 	.word	0x40023800

080015a8 <MX_GPIO_Init>:
  * @brief GPIO Initialization Function
  * @param None
  * @retval None
  */
static void MX_GPIO_Init(void)
{
 80015a8:	b580      	push	{r7, lr}
 80015aa:	b08a      	sub	sp, #40	@ 0x28
 80015ac:	af00      	add	r7, sp, #0
  GPIO_InitTypeDef GPIO_InitStruct = {0};
 80015ae:	f107 0314 	add.w	r3, r7, #20
 80015b2:	2200      	movs	r2, #0
 80015b4:	601a      	str	r2, [r3, #0]
 80015b6:	605a      	str	r2, [r3, #4]
 80015b8:	609a      	str	r2, [r3, #8]
 80015ba:	60da      	str	r2, [r3, #12]
 80015bc:	611a      	str	r2, [r3, #16]
/* USER CODE BEGIN MX_GPIO_Init_1 */
/* USER CODE END MX_GPIO_Init_1 */

  /* GPIO Ports Clock Enable */
  __HAL_RCC_GPIOC_CLK_ENABLE();
 80015be:	2300      	movs	r3, #0
 80015c0:	613b      	str	r3, [r7, #16]
 80015c2:	4b5f      	ldr	r3, [pc, #380]	@ (8001740 <MX_GPIO_Init+0x198>)
 80015c4:	6b1b      	ldr	r3, [r3, #48]	@ 0x30
 80015c6:	4a5e      	ldr	r2, [pc, #376]	@ (8001740 <MX_GPIO_Init+0x198>)
 80015c8:	f043 0304 	orr.w	r3, r3, #4
 80015cc:	6313      	str	r3, [r2, #48]	@ 0x30
 80015ce:	4b5c      	ldr	r3, [pc, #368]	@ (8001740 <MX_GPIO_Init+0x198>)
 80015d0:	6b1b      	ldr	r3, [r3, #48]	@ 0x30
 80015d2:	f003 0304 	and.w	r3, r3, #4
 80015d6:	613b      	str	r3, [r7, #16]
 80015d8:	693b      	ldr	r3, [r7, #16]
  __HAL_RCC_GPIOH_CLK_ENABLE();
 80015da:	2300      	movs	r3, #0
 80015dc:	60fb      	str	r3, [r7, #12]
 80015de:	4b58      	ldr	r3, [pc, #352]	@ (8001740 <MX_GPIO_Init+0x198>)
 80015e0:	6b1b      	ldr	r3, [r3, #48]	@ 0x30
 80015e2:	4a57      	ldr	r2, [pc, #348]	@ (8001740 <MX_GPIO_Init+0x198>)
 80015e4:	f043 0380 	orr.w	r3, r3, #128	@ 0x80
 80015e8:	6313      	str	r3, [r2, #48]	@ 0x30
 80015ea:	4b55      	ldr	r3, [pc, #340]	@ (8001740 <MX_GPIO_Init+0x198>)
 80015ec:	6b1b      	ldr	r3, [r3, #48]	@ 0x30
 80015ee:	f003 0380 	and.w	r3, r3, #128	@ 0x80
 80015f2:	60fb      	str	r3, [r7, #12]
 80015f4:	68fb      	ldr	r3, [r7, #12]
  __HAL_RCC_GPIOA_CLK_ENABLE();
 80015f6:	2300      	movs	r3, #0
 80015f8:	60bb      	str	r3, [r7, #8]
 80015fa:	4b51      	ldr	r3, [pc, #324]	@ (8001740 <MX_GPIO_Init+0x198>)
 80015fc:	6b1b      	ldr	r3, [r3, #48]	@ 0x30
 80015fe:	4a50      	ldr	r2, [pc, #320]	@ (8001740 <MX_GPIO_Init+0x198>)
 8001600:	f043 0301 	orr.w	r3, r3, #1
 8001604:	6313      	str	r3, [r2, #48]	@ 0x30
 8001606:	4b4e      	ldr	r3, [pc, #312]	@ (8001740 <MX_GPIO_Init+0x198>)
 8001608:	6b1b      	ldr	r3, [r3, #48]	@ 0x30
 800160a:	f003 0301 	and.w	r3, r3, #1
 800160e:	60bb      	str	r3, [r7, #8]
 8001610:	68bb      	ldr	r3, [r7, #8]
  __HAL_RCC_GPIOB_CLK_ENABLE();
 8001612:	2300      	movs	r3, #0
 8001614:	607b      	str	r3, [r7, #4]
 8001616:	4b4a      	ldr	r3, [pc, #296]	@ (8001740 <MX_GPIO_Init+0x198>)
 8001618:	6b1b      	ldr	r3, [r3, #48]	@ 0x30
 800161a:	4a49      	ldr	r2, [pc, #292]	@ (8001740 <MX_GPIO_Init+0x198>)
 800161c:	f043 0302 	orr.w	r3, r3, #2
 8001620:	6313      	str	r3, [r2, #48]	@ 0x30
 8001622:	4b47      	ldr	r3, [pc, #284]	@ (8001740 <MX_GPIO_Init+0x198>)
 8001624:	6b1b      	ldr	r3, [r3, #48]	@ 0x30
 8001626:	f003 0302 	and.w	r3, r3, #2
 800162a:	607b      	str	r3, [r7, #4]
 800162c:	687b      	ldr	r3, [r7, #4]

  /*Configure GPIO pin Output Level */
  HAL_GPIO_WritePin(GPIOA, LD2_Pin|DISPL_LED_Pin|DISPL_DC_Pin, GPIO_PIN_RESET);
 800162e:	2200      	movs	r2, #0
 8001630:	21e0      	movs	r1, #224	@ 0xe0
 8001632:	4844      	ldr	r0, [pc, #272]	@ (8001744 <MX_GPIO_Init+0x19c>)
 8001634:	f002 fdce 	bl	80041d4 <HAL_GPIO_WritePin>

  /*Configure GPIO pin Output Level */
  HAL_GPIO_WritePin(DISPL_CS_GPIO_Port, DISPL_CS_Pin, GPIO_PIN_SET);
 8001638:	2201      	movs	r2, #1
 800163a:	2180      	movs	r1, #128	@ 0x80
 800163c:	4842      	ldr	r0, [pc, #264]	@ (8001748 <MX_GPIO_Init+0x1a0>)
 800163e:	f002 fdc9 	bl	80041d4 <HAL_GPIO_WritePin>

  /*Configure GPIO pin Output Level */
  HAL_GPIO_WritePin(TOUCH_CS_GPIO_Port, TOUCH_CS_Pin, GPIO_PIN_SET);
 8001642:	2201      	movs	r2, #1
 8001644:	f44f 7100 	mov.w	r1, #512	@ 0x200
 8001648:	483e      	ldr	r0, [pc, #248]	@ (8001744 <MX_GPIO_Init+0x19c>)
 800164a:	f002 fdc3 	bl	80041d4 <HAL_GPIO_WritePin>

  /*Configure GPIO pin Output Level */
  HAL_GPIO_WritePin(GPIOB, DISPL_RST_Pin|GPIO_PIN_8|GPIO_PIN_9, GPIO_PIN_RESET);
 800164e:	2200      	movs	r2, #0
 8001650:	f44f 7150 	mov.w	r1, #832	@ 0x340
 8001654:	483d      	ldr	r0, [pc, #244]	@ (800174c <MX_GPIO_Init+0x1a4>)
 8001656:	f002 fdbd 	bl	80041d4 <HAL_GPIO_WritePin>

  /*Configure GPIO pin : B1_Pin */
  GPIO_InitStruct.Pin = B1_Pin;
 800165a:	f44f 5300 	mov.w	r3, #8192	@ 0x2000
 800165e:	617b      	str	r3, [r7, #20]
  GPIO_InitStruct.Mode = GPIO_MODE_IT_FALLING;
 8001660:	f44f 1304 	mov.w	r3, #2162688	@ 0x210000
 8001664:	61bb      	str	r3, [r7, #24]
  GPIO_InitStruct.Pull = GPIO_NOPULL;
 8001666:	2300      	movs	r3, #0
 8001668:	61fb      	str	r3, [r7, #28]
  HAL_GPIO_Init(B1_GPIO_Port, &GPIO_InitStruct);
 800166a:	f107 0314 	add.w	r3, r7, #20
 800166e:	4619      	mov	r1, r3
 8001670:	4835      	ldr	r0, [pc, #212]	@ (8001748 <MX_GPIO_Init+0x1a0>)
 8001672:	f002 fc03 	bl	8003e7c <HAL_GPIO_Init>

  /*Configure GPIO pins : USART_TX_Pin USART_RX_Pin */
  GPIO_InitStruct.Pin = USART_TX_Pin|USART_RX_Pin;
 8001676:	230c      	movs	r3, #12
 8001678:	617b      	str	r3, [r7, #20]
  GPIO_InitStruct.Mode = GPIO_MODE_AF_PP;
 800167a:	2302      	movs	r3, #2
 800167c:	61bb      	str	r3, [r7, #24]
  GPIO_InitStruct.Pull = GPIO_NOPULL;
 800167e:	2300      	movs	r3, #0
 8001680:	61fb      	str	r3, [r7, #28]
  GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_VERY_HIGH;
 8001682:	2303      	movs	r3, #3
 8001684:	623b      	str	r3, [r7, #32]
  GPIO_InitStruct.Alternate = GPIO_AF7_USART2;
 8001686:	2307      	movs	r3, #7
 8001688:	627b      	str	r3, [r7, #36]	@ 0x24
  HAL_GPIO_Init(GPIOA, &GPIO_InitStruct);
 800168a:	f107 0314 	add.w	r3, r7, #20
 800168e:	4619      	mov	r1, r3
 8001690:	482c      	ldr	r0, [pc, #176]	@ (8001744 <MX_GPIO_Init+0x19c>)
 8001692:	f002 fbf3 	bl	8003e7c <HAL_GPIO_Init>

  /*Configure GPIO pins : LD2_Pin DISPL_LED_Pin DISPL_DC_Pin TOUCH_CS_Pin */
  GPIO_InitStruct.Pin = LD2_Pin|DISPL_LED_Pin|DISPL_DC_Pin|TOUCH_CS_Pin;
 8001696:	f44f 7338 	mov.w	r3, #736	@ 0x2e0
 800169a:	617b      	str	r3, [r7, #20]
  GPIO_InitStruct.Mode = GPIO_MODE_OUTPUT_PP;
 800169c:	2301      	movs	r3, #1
 800169e:	61bb      	str	r3, [r7, #24]
  GPIO_InitStruct.Pull = GPIO_NOPULL;
 80016a0:	2300      	movs	r3, #0
 80016a2:	61fb      	str	r3, [r7, #28]
  GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_LOW;
 80016a4:	2300      	movs	r3, #0
 80016a6:	623b      	str	r3, [r7, #32]
  HAL_GPIO_Init(GPIOA, &GPIO_InitStruct);
 80016a8:	f107 0314 	add.w	r3, r7, #20
 80016ac:	4619      	mov	r1, r3
 80016ae:	4825      	ldr	r0, [pc, #148]	@ (8001744 <MX_GPIO_Init+0x19c>)
 80016b0:	f002 fbe4 	bl	8003e7c <HAL_GPIO_Init>

  /*Configure GPIO pin : DISPL_CS_Pin */
  GPIO_InitStruct.Pin = DISPL_CS_Pin;
 80016b4:	2380      	movs	r3, #128	@ 0x80
 80016b6:	617b      	str	r3, [r7, #20]
  GPIO_InitStruct.Mode = GPIO_MODE_OUTPUT_PP;
 80016b8:	2301      	movs	r3, #1
 80016ba:	61bb      	str	r3, [r7, #24]
  GPIO_InitStruct.Pull = GPIO_NOPULL;
 80016bc:	2300      	movs	r3, #0
 80016be:	61fb      	str	r3, [r7, #28]
  GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_LOW;
 80016c0:	2300      	movs	r3, #0
 80016c2:	623b      	str	r3, [r7, #32]
  HAL_GPIO_Init(DISPL_CS_GPIO_Port, &GPIO_InitStruct);
 80016c4:	f107 0314 	add.w	r3, r7, #20
 80016c8:	4619      	mov	r1, r3
 80016ca:	481f      	ldr	r0, [pc, #124]	@ (8001748 <MX_GPIO_Init+0x1a0>)
 80016cc:	f002 fbd6 	bl	8003e7c <HAL_GPIO_Init>

  /*Configure GPIO pin : TOUCH_INT_Pin */
  GPIO_InitStruct.Pin = TOUCH_INT_Pin;
 80016d0:	f44f 7380 	mov.w	r3, #256	@ 0x100
 80016d4:	617b      	str	r3, [r7, #20]
  GPIO_InitStruct.Mode = GPIO_MODE_IT_FALLING;
 80016d6:	f44f 1304 	mov.w	r3, #2162688	@ 0x210000
 80016da:	61bb      	str	r3, [r7, #24]
  GPIO_InitStruct.Pull = GPIO_PULLUP;
 80016dc:	2301      	movs	r3, #1
 80016de:	61fb      	str	r3, [r7, #28]
  HAL_GPIO_Init(TOUCH_INT_GPIO_Port, &GPIO_InitStruct);
 80016e0:	f107 0314 	add.w	r3, r7, #20
 80016e4:	4619      	mov	r1, r3
 80016e6:	4817      	ldr	r0, [pc, #92]	@ (8001744 <MX_GPIO_Init+0x19c>)
 80016e8:	f002 fbc8 	bl	8003e7c <HAL_GPIO_Init>

  /*Configure GPIO pin : DISPL_RST_Pin */
  GPIO_InitStruct.Pin = DISPL_RST_Pin;
 80016ec:	2340      	movs	r3, #64	@ 0x40
 80016ee:	617b      	str	r3, [r7, #20]
  GPIO_InitStruct.Mode = GPIO_MODE_OUTPUT_PP;
 80016f0:	2301      	movs	r3, #1
 80016f2:	61bb      	str	r3, [r7, #24]
  GPIO_InitStruct.Pull = GPIO_NOPULL;
 80016f4:	2300      	movs	r3, #0
 80016f6:	61fb      	str	r3, [r7, #28]
  GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_LOW;
 80016f8:	2300      	movs	r3, #0
 80016fa:	623b      	str	r3, [r7, #32]
  HAL_GPIO_Init(DISPL_RST_GPIO_Port, &GPIO_InitStruct);
 80016fc:	f107 0314 	add.w	r3, r7, #20
 8001700:	4619      	mov	r1, r3
 8001702:	4812      	ldr	r0, [pc, #72]	@ (800174c <MX_GPIO_Init+0x1a4>)
 8001704:	f002 fbba 	bl	8003e7c <HAL_GPIO_Init>

  /*Configure GPIO pins : PB8 PB9 */
  GPIO_InitStruct.Pin = GPIO_PIN_8|GPIO_PIN_9;
 8001708:	f44f 7340 	mov.w	r3, #768	@ 0x300
 800170c:	617b      	str	r3, [r7, #20]
  GPIO_InitStruct.Mode = GPIO_MODE_OUTPUT_PP;
 800170e:	2301      	movs	r3, #1
 8001710:	61bb      	str	r3, [r7, #24]
  GPIO_InitStruct.Pull = GPIO_NOPULL;
 8001712:	2300      	movs	r3, #0
 8001714:	61fb      	str	r3, [r7, #28]
  GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_VERY_HIGH;
 8001716:	2303      	movs	r3, #3
 8001718:	623b      	str	r3, [r7, #32]
  HAL_GPIO_Init(GPIOB, &GPIO_InitStruct);
 800171a:	f107 0314 	add.w	r3, r7, #20
 800171e:	4619      	mov	r1, r3
 8001720:	480a      	ldr	r0, [pc, #40]	@ (800174c <MX_GPIO_Init+0x1a4>)
 8001722:	f002 fbab 	bl	8003e7c <HAL_GPIO_Init>

  /* EXTI interrupt init*/
  HAL_NVIC_SetPriority(EXTI9_5_IRQn, 0, 0);
 8001726:	2200      	movs	r2, #0
 8001728:	2100      	movs	r1, #0
 800172a:	2017      	movs	r0, #23
 800172c:	f001 ffa5 	bl	800367a <HAL_NVIC_SetPriority>
  HAL_NVIC_EnableIRQ(EXTI9_5_IRQn);
 8001730:	2017      	movs	r0, #23
 8001732:	f001 ffbe 	bl	80036b2 <HAL_NVIC_EnableIRQ>

/* USER CODE BEGIN MX_GPIO_Init_2 */
/* USER CODE END MX_GPIO_Init_2 */
}
 8001736:	bf00      	nop
 8001738:	3728      	adds	r7, #40	@ 0x28
 800173a:	46bd      	mov	sp, r7
 800173c:	bd80      	pop	{r7, pc}
 800173e:	bf00      	nop
 8001740:	40023800 	.word	0x40023800
 8001744:	40020000 	.word	0x40020000
 8001748:	40020800 	.word	0x40020800
 800174c:	40020400 	.word	0x40020400

08001750 <HAL_TIM_PeriodElapsedCallback>:

/* USER CODE BEGIN 4 */
void HAL_TIM_PeriodElapsedCallback(TIM_HandleTypeDef *htim)
{
 8001750:	b580      	push	{r7, lr}
 8001752:	b082      	sub	sp, #8
 8001754:	af00      	add	r7, sp, #0
 8001756:	6078      	str	r0, [r7, #4]
  // Check which version of the timer triggered this callback and toggle LED
  if (htim == &htim4)
 8001758:	687b      	ldr	r3, [r7, #4]
 800175a:	4a09      	ldr	r2, [pc, #36]	@ (8001780 <HAL_TIM_PeriodElapsedCallback+0x30>)
 800175c:	4293      	cmp	r3, r2
 800175e:	d104      	bne.n	800176a <HAL_TIM_PeriodElapsedCallback+0x1a>
  {
    HAL_GPIO_TogglePin(GPIOB, GPIO_PIN_9);
 8001760:	f44f 7100 	mov.w	r1, #512	@ 0x200
 8001764:	4807      	ldr	r0, [pc, #28]	@ (8001784 <HAL_TIM_PeriodElapsedCallback+0x34>)
 8001766:	f002 fd4e 	bl	8004206 <HAL_GPIO_TogglePin>
  }
	if (htim==&TGFX_T){
 800176a:	687b      	ldr	r3, [r7, #4]
 800176c:	4a06      	ldr	r2, [pc, #24]	@ (8001788 <HAL_TIM_PeriodElapsedCallback+0x38>)
 800176e:	4293      	cmp	r3, r2
 8001770:	d101      	bne.n	8001776 <HAL_TIM_PeriodElapsedCallback+0x26>
		  touchgfxSignalVSync();
 8001772:	f00b f9c3 	bl	800cafc <touchgfxSignalVSync>
	}
}
 8001776:	bf00      	nop
 8001778:	3708      	adds	r7, #8
 800177a:	46bd      	mov	sp, r7
 800177c:	bd80      	pop	{r7, pc}
 800177e:	bf00      	nop
 8001780:	20000588 	.word	0x20000588
 8001784:	40020400 	.word	0x40020400
 8001788:	20000540 	.word	0x20000540

0800178c <Error_Handler>:
/**
  * @brief  This function is executed in case of error occurrence.
  * @retval None
  */
void Error_Handler(void)
{
 800178c:	b480      	push	{r7}
 800178e:	af00      	add	r7, sp, #0
  \details Disables IRQ interrupts by setting special-purpose register PRIMASK.
           Can only be executed in Privileged modes.
 */
__STATIC_FORCEINLINE void __disable_irq(void)
{
  __ASM volatile ("cpsid i" : : : "memory");
 8001790:	b672      	cpsid	i
}
 8001792:	bf00      	nop
  /* USER CODE BEGIN Error_Handler_Debug */
  /* User can add his own implementation to report the HAL error return state */
  __disable_irq();
  while (1)
 8001794:	bf00      	nop
 8001796:	e7fd      	b.n	8001794 <Error_Handler+0x8>

08001798 <HAL_MspInit>:
void HAL_TIM_MspPostInit(TIM_HandleTypeDef *htim);
                    /**
  * Initializes the Global MSP.
  */
void HAL_MspInit(void)
{
 8001798:	b480      	push	{r7}
 800179a:	b083      	sub	sp, #12
 800179c:	af00      	add	r7, sp, #0

  /* USER CODE BEGIN MspInit 0 */

  /* USER CODE END MspInit 0 */

  __HAL_RCC_SYSCFG_CLK_ENABLE();
 800179e:	2300      	movs	r3, #0
 80017a0:	607b      	str	r3, [r7, #4]
 80017a2:	4b10      	ldr	r3, [pc, #64]	@ (80017e4 <HAL_MspInit+0x4c>)
 80017a4:	6c5b      	ldr	r3, [r3, #68]	@ 0x44
 80017a6:	4a0f      	ldr	r2, [pc, #60]	@ (80017e4 <HAL_MspInit+0x4c>)
 80017a8:	f443 4380 	orr.w	r3, r3, #16384	@ 0x4000
 80017ac:	6453      	str	r3, [r2, #68]	@ 0x44
 80017ae:	4b0d      	ldr	r3, [pc, #52]	@ (80017e4 <HAL_MspInit+0x4c>)
 80017b0:	6c5b      	ldr	r3, [r3, #68]	@ 0x44
 80017b2:	f403 4380 	and.w	r3, r3, #16384	@ 0x4000
 80017b6:	607b      	str	r3, [r7, #4]
 80017b8:	687b      	ldr	r3, [r7, #4]
  __HAL_RCC_PWR_CLK_ENABLE();
 80017ba:	2300      	movs	r3, #0
 80017bc:	603b      	str	r3, [r7, #0]
 80017be:	4b09      	ldr	r3, [pc, #36]	@ (80017e4 <HAL_MspInit+0x4c>)
 80017c0:	6c1b      	ldr	r3, [r3, #64]	@ 0x40
 80017c2:	4a08      	ldr	r2, [pc, #32]	@ (80017e4 <HAL_MspInit+0x4c>)
 80017c4:	f043 5380 	orr.w	r3, r3, #268435456	@ 0x10000000
 80017c8:	6413      	str	r3, [r2, #64]	@ 0x40
 80017ca:	4b06      	ldr	r3, [pc, #24]	@ (80017e4 <HAL_MspInit+0x4c>)
 80017cc:	6c1b      	ldr	r3, [r3, #64]	@ 0x40
 80017ce:	f003 5380 	and.w	r3, r3, #268435456	@ 0x10000000
 80017d2:	603b      	str	r3, [r7, #0]
 80017d4:	683b      	ldr	r3, [r7, #0]
  /* System interrupt init*/

  /* USER CODE BEGIN MspInit 1 */

  /* USER CODE END MspInit 1 */
}
 80017d6:	bf00      	nop
 80017d8:	370c      	adds	r7, #12
 80017da:	46bd      	mov	sp, r7
 80017dc:	f85d 7b04 	ldr.w	r7, [sp], #4
 80017e0:	4770      	bx	lr
 80017e2:	bf00      	nop
 80017e4:	40023800 	.word	0x40023800

080017e8 <HAL_ADC_MspInit>:
* This function configures the hardware resources used in this example
* @param hadc: ADC handle pointer
* @retval None
*/
void HAL_ADC_MspInit(ADC_HandleTypeDef* hadc)
{
 80017e8:	b580      	push	{r7, lr}
 80017ea:	b08a      	sub	sp, #40	@ 0x28
 80017ec:	af00      	add	r7, sp, #0
 80017ee:	6078      	str	r0, [r7, #4]
  GPIO_InitTypeDef GPIO_InitStruct = {0};
 80017f0:	f107 0314 	add.w	r3, r7, #20
 80017f4:	2200      	movs	r2, #0
 80017f6:	601a      	str	r2, [r3, #0]
 80017f8:	605a      	str	r2, [r3, #4]
 80017fa:	609a      	str	r2, [r3, #8]
 80017fc:	60da      	str	r2, [r3, #12]
 80017fe:	611a      	str	r2, [r3, #16]
  if(hadc->Instance==ADC1)
 8001800:	687b      	ldr	r3, [r7, #4]
 8001802:	681b      	ldr	r3, [r3, #0]
 8001804:	4a33      	ldr	r2, [pc, #204]	@ (80018d4 <HAL_ADC_MspInit+0xec>)
 8001806:	4293      	cmp	r3, r2
 8001808:	d15f      	bne.n	80018ca <HAL_ADC_MspInit+0xe2>
  {
  /* USER CODE BEGIN ADC1_MspInit 0 */

  /* USER CODE END ADC1_MspInit 0 */
    /* Peripheral clock enable */
    __HAL_RCC_ADC1_CLK_ENABLE();
 800180a:	2300      	movs	r3, #0
 800180c:	613b      	str	r3, [r7, #16]
 800180e:	4b32      	ldr	r3, [pc, #200]	@ (80018d8 <HAL_ADC_MspInit+0xf0>)
 8001810:	6c5b      	ldr	r3, [r3, #68]	@ 0x44
 8001812:	4a31      	ldr	r2, [pc, #196]	@ (80018d8 <HAL_ADC_MspInit+0xf0>)
 8001814:	f443 7380 	orr.w	r3, r3, #256	@ 0x100
 8001818:	6453      	str	r3, [r2, #68]	@ 0x44
 800181a:	4b2f      	ldr	r3, [pc, #188]	@ (80018d8 <HAL_ADC_MspInit+0xf0>)
 800181c:	6c5b      	ldr	r3, [r3, #68]	@ 0x44
 800181e:	f403 7380 	and.w	r3, r3, #256	@ 0x100
 8001822:	613b      	str	r3, [r7, #16]
 8001824:	693b      	ldr	r3, [r7, #16]

    __HAL_RCC_GPIOC_CLK_ENABLE();
 8001826:	2300      	movs	r3, #0
 8001828:	60fb      	str	r3, [r7, #12]
 800182a:	4b2b      	ldr	r3, [pc, #172]	@ (80018d8 <HAL_ADC_MspInit+0xf0>)
 800182c:	6b1b      	ldr	r3, [r3, #48]	@ 0x30
 800182e:	4a2a      	ldr	r2, [pc, #168]	@ (80018d8 <HAL_ADC_MspInit+0xf0>)
 8001830:	f043 0304 	orr.w	r3, r3, #4
 8001834:	6313      	str	r3, [r2, #48]	@ 0x30
 8001836:	4b28      	ldr	r3, [pc, #160]	@ (80018d8 <HAL_ADC_MspInit+0xf0>)
 8001838:	6b1b      	ldr	r3, [r3, #48]	@ 0x30
 800183a:	f003 0304 	and.w	r3, r3, #4
 800183e:	60fb      	str	r3, [r7, #12]
 8001840:	68fb      	ldr	r3, [r7, #12]
    /**ADC1 GPIO Configuration
    PC0     ------> ADC1_IN10
    */
    GPIO_InitStruct.Pin = GPIO_PIN_0;
 8001842:	2301      	movs	r3, #1
 8001844:	617b      	str	r3, [r7, #20]
    GPIO_InitStruct.Mode = GPIO_MODE_ANALOG;
 8001846:	2303      	movs	r3, #3
 8001848:	61bb      	str	r3, [r7, #24]
    GPIO_InitStruct.Pull = GPIO_NOPULL;
 800184a:	2300      	movs	r3, #0
 800184c:	61fb      	str	r3, [r7, #28]
    HAL_GPIO_Init(GPIOC, &GPIO_InitStruct);
 800184e:	f107 0314 	add.w	r3, r7, #20
 8001852:	4619      	mov	r1, r3
 8001854:	4821      	ldr	r0, [pc, #132]	@ (80018dc <HAL_ADC_MspInit+0xf4>)
 8001856:	f002 fb11 	bl	8003e7c <HAL_GPIO_Init>

    /* ADC1 DMA Init */
    /* ADC1 Init */
    hdma_adc1.Instance = DMA2_Stream0;
 800185a:	4b21      	ldr	r3, [pc, #132]	@ (80018e0 <HAL_ADC_MspInit+0xf8>)
 800185c:	4a21      	ldr	r2, [pc, #132]	@ (80018e4 <HAL_ADC_MspInit+0xfc>)
 800185e:	601a      	str	r2, [r3, #0]
    hdma_adc1.Init.Channel = DMA_CHANNEL_0;
 8001860:	4b1f      	ldr	r3, [pc, #124]	@ (80018e0 <HAL_ADC_MspInit+0xf8>)
 8001862:	2200      	movs	r2, #0
 8001864:	605a      	str	r2, [r3, #4]
    hdma_adc1.Init.Direction = DMA_PERIPH_TO_MEMORY;
 8001866:	4b1e      	ldr	r3, [pc, #120]	@ (80018e0 <HAL_ADC_MspInit+0xf8>)
 8001868:	2200      	movs	r2, #0
 800186a:	609a      	str	r2, [r3, #8]
    hdma_adc1.Init.PeriphInc = DMA_PINC_DISABLE;
 800186c:	4b1c      	ldr	r3, [pc, #112]	@ (80018e0 <HAL_ADC_MspInit+0xf8>)
 800186e:	2200      	movs	r2, #0
 8001870:	60da      	str	r2, [r3, #12]
    hdma_adc1.Init.MemInc = DMA_MINC_ENABLE;
 8001872:	4b1b      	ldr	r3, [pc, #108]	@ (80018e0 <HAL_ADC_MspInit+0xf8>)
 8001874:	f44f 6280 	mov.w	r2, #1024	@ 0x400
 8001878:	611a      	str	r2, [r3, #16]
    hdma_adc1.Init.PeriphDataAlignment = DMA_PDATAALIGN_HALFWORD;
 800187a:	4b19      	ldr	r3, [pc, #100]	@ (80018e0 <HAL_ADC_MspInit+0xf8>)
 800187c:	f44f 6200 	mov.w	r2, #2048	@ 0x800
 8001880:	615a      	str	r2, [r3, #20]
    hdma_adc1.Init.MemDataAlignment = DMA_MDATAALIGN_HALFWORD;
 8001882:	4b17      	ldr	r3, [pc, #92]	@ (80018e0 <HAL_ADC_MspInit+0xf8>)
 8001884:	f44f 5200 	mov.w	r2, #8192	@ 0x2000
 8001888:	619a      	str	r2, [r3, #24]
    hdma_adc1.Init.Mode = DMA_CIRCULAR;
 800188a:	4b15      	ldr	r3, [pc, #84]	@ (80018e0 <HAL_ADC_MspInit+0xf8>)
 800188c:	f44f 7280 	mov.w	r2, #256	@ 0x100
 8001890:	61da      	str	r2, [r3, #28]
    hdma_adc1.Init.Priority = DMA_PRIORITY_LOW;
 8001892:	4b13      	ldr	r3, [pc, #76]	@ (80018e0 <HAL_ADC_MspInit+0xf8>)
 8001894:	2200      	movs	r2, #0
 8001896:	621a      	str	r2, [r3, #32]
    hdma_adc1.Init.FIFOMode = DMA_FIFOMODE_DISABLE;
 8001898:	4b11      	ldr	r3, [pc, #68]	@ (80018e0 <HAL_ADC_MspInit+0xf8>)
 800189a:	2200      	movs	r2, #0
 800189c:	625a      	str	r2, [r3, #36]	@ 0x24
    if (HAL_DMA_Init(&hdma_adc1) != HAL_OK)
 800189e:	4810      	ldr	r0, [pc, #64]	@ (80018e0 <HAL_ADC_MspInit+0xf8>)
 80018a0:	f001 ff5a 	bl	8003758 <HAL_DMA_Init>
 80018a4:	4603      	mov	r3, r0
 80018a6:	2b00      	cmp	r3, #0
 80018a8:	d001      	beq.n	80018ae <HAL_ADC_MspInit+0xc6>
    {
      Error_Handler();
 80018aa:	f7ff ff6f 	bl	800178c <Error_Handler>
    }

    __HAL_LINKDMA(hadc,DMA_Handle,hdma_adc1);
 80018ae:	687b      	ldr	r3, [r7, #4]
 80018b0:	4a0b      	ldr	r2, [pc, #44]	@ (80018e0 <HAL_ADC_MspInit+0xf8>)
 80018b2:	639a      	str	r2, [r3, #56]	@ 0x38
 80018b4:	4a0a      	ldr	r2, [pc, #40]	@ (80018e0 <HAL_ADC_MspInit+0xf8>)
 80018b6:	687b      	ldr	r3, [r7, #4]
 80018b8:	6393      	str	r3, [r2, #56]	@ 0x38

    /* ADC1 interrupt Init */
    HAL_NVIC_SetPriority(ADC_IRQn, 0, 0);
 80018ba:	2200      	movs	r2, #0
 80018bc:	2100      	movs	r1, #0
 80018be:	2012      	movs	r0, #18
 80018c0:	f001 fedb 	bl	800367a <HAL_NVIC_SetPriority>
    HAL_NVIC_EnableIRQ(ADC_IRQn);
 80018c4:	2012      	movs	r0, #18
 80018c6:	f001 fef4 	bl	80036b2 <HAL_NVIC_EnableIRQ>

  /* USER CODE END ADC1_MspInit 1 */

  }

}
 80018ca:	bf00      	nop
 80018cc:	3728      	adds	r7, #40	@ 0x28
 80018ce:	46bd      	mov	sp, r7
 80018d0:	bd80      	pop	{r7, pc}
 80018d2:	bf00      	nop
 80018d4:	40012000 	.word	0x40012000
 80018d8:	40023800 	.word	0x40023800
 80018dc:	40020800 	.word	0x40020800
 80018e0:	20000384 	.word	0x20000384
 80018e4:	40026410 	.word	0x40026410

080018e8 <HAL_CRC_MspInit>:
* This function configures the hardware resources used in this example
* @param hcrc: CRC handle pointer
* @retval None
*/
void HAL_CRC_MspInit(CRC_HandleTypeDef* hcrc)
{
 80018e8:	b480      	push	{r7}
 80018ea:	b085      	sub	sp, #20
 80018ec:	af00      	add	r7, sp, #0
 80018ee:	6078      	str	r0, [r7, #4]
  if(hcrc->Instance==CRC)
 80018f0:	687b      	ldr	r3, [r7, #4]
 80018f2:	681b      	ldr	r3, [r3, #0]
 80018f4:	4a0b      	ldr	r2, [pc, #44]	@ (8001924 <HAL_CRC_MspInit+0x3c>)
 80018f6:	4293      	cmp	r3, r2
 80018f8:	d10d      	bne.n	8001916 <HAL_CRC_MspInit+0x2e>
  {
  /* USER CODE BEGIN CRC_MspInit 0 */

  /* USER CODE END CRC_MspInit 0 */
    /* Peripheral clock enable */
    __HAL_RCC_CRC_CLK_ENABLE();
 80018fa:	2300      	movs	r3, #0
 80018fc:	60fb      	str	r3, [r7, #12]
 80018fe:	4b0a      	ldr	r3, [pc, #40]	@ (8001928 <HAL_CRC_MspInit+0x40>)
 8001900:	6b1b      	ldr	r3, [r3, #48]	@ 0x30
 8001902:	4a09      	ldr	r2, [pc, #36]	@ (8001928 <HAL_CRC_MspInit+0x40>)
 8001904:	f443 5380 	orr.w	r3, r3, #4096	@ 0x1000
 8001908:	6313      	str	r3, [r2, #48]	@ 0x30
 800190a:	4b07      	ldr	r3, [pc, #28]	@ (8001928 <HAL_CRC_MspInit+0x40>)
 800190c:	6b1b      	ldr	r3, [r3, #48]	@ 0x30
 800190e:	f403 5380 	and.w	r3, r3, #4096	@ 0x1000
 8001912:	60fb      	str	r3, [r7, #12]
 8001914:	68fb      	ldr	r3, [r7, #12]

  /* USER CODE END CRC_MspInit 1 */

  }

}
 8001916:	bf00      	nop
 8001918:	3714      	adds	r7, #20
 800191a:	46bd      	mov	sp, r7
 800191c:	f85d 7b04 	ldr.w	r7, [sp], #4
 8001920:	4770      	bx	lr
 8001922:	bf00      	nop
 8001924:	40023000 	.word	0x40023000
 8001928:	40023800 	.word	0x40023800

0800192c <HAL_I2C_MspInit>:
* This function configures the hardware resources used in this example
* @param hi2c: I2C handle pointer
* @retval None
*/
void HAL_I2C_MspInit(I2C_HandleTypeDef* hi2c)
{
 800192c:	b580      	push	{r7, lr}
 800192e:	b08a      	sub	sp, #40	@ 0x28
 8001930:	af00      	add	r7, sp, #0
 8001932:	6078      	str	r0, [r7, #4]
  GPIO_InitTypeDef GPIO_InitStruct = {0};
 8001934:	f107 0314 	add.w	r3, r7, #20
 8001938:	2200      	movs	r2, #0
 800193a:	601a      	str	r2, [r3, #0]
 800193c:	605a      	str	r2, [r3, #4]
 800193e:	609a      	str	r2, [r3, #8]
 8001940:	60da      	str	r2, [r3, #12]
 8001942:	611a      	str	r2, [r3, #16]
  if(hi2c->Instance==I2C2)
 8001944:	687b      	ldr	r3, [r7, #4]
 8001946:	681b      	ldr	r3, [r3, #0]
 8001948:	4a29      	ldr	r2, [pc, #164]	@ (80019f0 <HAL_I2C_MspInit+0xc4>)
 800194a:	4293      	cmp	r3, r2
 800194c:	d14b      	bne.n	80019e6 <HAL_I2C_MspInit+0xba>
  {
  /* USER CODE BEGIN I2C2_MspInit 0 */

  /* USER CODE END I2C2_MspInit 0 */

    __HAL_RCC_GPIOB_CLK_ENABLE();
 800194e:	2300      	movs	r3, #0
 8001950:	613b      	str	r3, [r7, #16]
 8001952:	4b28      	ldr	r3, [pc, #160]	@ (80019f4 <HAL_I2C_MspInit+0xc8>)
 8001954:	6b1b      	ldr	r3, [r3, #48]	@ 0x30
 8001956:	4a27      	ldr	r2, [pc, #156]	@ (80019f4 <HAL_I2C_MspInit+0xc8>)
 8001958:	f043 0302 	orr.w	r3, r3, #2
 800195c:	6313      	str	r3, [r2, #48]	@ 0x30
 800195e:	4b25      	ldr	r3, [pc, #148]	@ (80019f4 <HAL_I2C_MspInit+0xc8>)
 8001960:	6b1b      	ldr	r3, [r3, #48]	@ 0x30
 8001962:	f003 0302 	and.w	r3, r3, #2
 8001966:	613b      	str	r3, [r7, #16]
 8001968:	693b      	ldr	r3, [r7, #16]
    __HAL_RCC_GPIOC_CLK_ENABLE();
 800196a:	2300      	movs	r3, #0
 800196c:	60fb      	str	r3, [r7, #12]
 800196e:	4b21      	ldr	r3, [pc, #132]	@ (80019f4 <HAL_I2C_MspInit+0xc8>)
 8001970:	6b1b      	ldr	r3, [r3, #48]	@ 0x30
 8001972:	4a20      	ldr	r2, [pc, #128]	@ (80019f4 <HAL_I2C_MspInit+0xc8>)
 8001974:	f043 0304 	orr.w	r3, r3, #4
 8001978:	6313      	str	r3, [r2, #48]	@ 0x30
 800197a:	4b1e      	ldr	r3, [pc, #120]	@ (80019f4 <HAL_I2C_MspInit+0xc8>)
 800197c:	6b1b      	ldr	r3, [r3, #48]	@ 0x30
 800197e:	f003 0304 	and.w	r3, r3, #4
 8001982:	60fb      	str	r3, [r7, #12]
 8001984:	68fb      	ldr	r3, [r7, #12]
    /**I2C2 GPIO Configuration
    PB10     ------> I2C2_SCL
    PC12     ------> I2C2_SDA
    */
    GPIO_InitStruct.Pin = GPIO_PIN_10;
 8001986:	f44f 6380 	mov.w	r3, #1024	@ 0x400
 800198a:	617b      	str	r3, [r7, #20]
    GPIO_InitStruct.Mode = GPIO_MODE_AF_OD;
 800198c:	2312      	movs	r3, #18
 800198e:	61bb      	str	r3, [r7, #24]
    GPIO_InitStruct.Pull = GPIO_PULLUP;
 8001990:	2301      	movs	r3, #1
 8001992:	61fb      	str	r3, [r7, #28]
    GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_VERY_HIGH;
 8001994:	2303      	movs	r3, #3
 8001996:	623b      	str	r3, [r7, #32]
    GPIO_InitStruct.Alternate = GPIO_AF4_I2C2;
 8001998:	2304      	movs	r3, #4
 800199a:	627b      	str	r3, [r7, #36]	@ 0x24
    HAL_GPIO_Init(GPIOB, &GPIO_InitStruct);
 800199c:	f107 0314 	add.w	r3, r7, #20
 80019a0:	4619      	mov	r1, r3
 80019a2:	4815      	ldr	r0, [pc, #84]	@ (80019f8 <HAL_I2C_MspInit+0xcc>)
 80019a4:	f002 fa6a 	bl	8003e7c <HAL_GPIO_Init>

    GPIO_InitStruct.Pin = GPIO_PIN_12;
 80019a8:	f44f 5380 	mov.w	r3, #4096	@ 0x1000
 80019ac:	617b      	str	r3, [r7, #20]
    GPIO_InitStruct.Mode = GPIO_MODE_AF_OD;
 80019ae:	2312      	movs	r3, #18
 80019b0:	61bb      	str	r3, [r7, #24]
    GPIO_InitStruct.Pull = GPIO_PULLUP;
 80019b2:	2301      	movs	r3, #1
 80019b4:	61fb      	str	r3, [r7, #28]
    GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_VERY_HIGH;
 80019b6:	2303      	movs	r3, #3
 80019b8:	623b      	str	r3, [r7, #32]
    GPIO_InitStruct.Alternate = GPIO_AF4_I2C2;
 80019ba:	2304      	movs	r3, #4
 80019bc:	627b      	str	r3, [r7, #36]	@ 0x24
    HAL_GPIO_Init(GPIOC, &GPIO_InitStruct);
 80019be:	f107 0314 	add.w	r3, r7, #20
 80019c2:	4619      	mov	r1, r3
 80019c4:	480d      	ldr	r0, [pc, #52]	@ (80019fc <HAL_I2C_MspInit+0xd0>)
 80019c6:	f002 fa59 	bl	8003e7c <HAL_GPIO_Init>

    /* Peripheral clock enable */
    __HAL_RCC_I2C2_CLK_ENABLE();
 80019ca:	2300      	movs	r3, #0
 80019cc:	60bb      	str	r3, [r7, #8]
 80019ce:	4b09      	ldr	r3, [pc, #36]	@ (80019f4 <HAL_I2C_MspInit+0xc8>)
 80019d0:	6c1b      	ldr	r3, [r3, #64]	@ 0x40
 80019d2:	4a08      	ldr	r2, [pc, #32]	@ (80019f4 <HAL_I2C_MspInit+0xc8>)
 80019d4:	f443 0380 	orr.w	r3, r3, #4194304	@ 0x400000
 80019d8:	6413      	str	r3, [r2, #64]	@ 0x40
 80019da:	4b06      	ldr	r3, [pc, #24]	@ (80019f4 <HAL_I2C_MspInit+0xc8>)
 80019dc:	6c1b      	ldr	r3, [r3, #64]	@ 0x40
 80019de:	f403 0380 	and.w	r3, r3, #4194304	@ 0x400000
 80019e2:	60bb      	str	r3, [r7, #8]
 80019e4:	68bb      	ldr	r3, [r7, #8]

  /* USER CODE END I2C2_MspInit 1 */

  }

}
 80019e6:	bf00      	nop
 80019e8:	3728      	adds	r7, #40	@ 0x28
 80019ea:	46bd      	mov	sp, r7
 80019ec:	bd80      	pop	{r7, pc}
 80019ee:	bf00      	nop
 80019f0:	40005800 	.word	0x40005800
 80019f4:	40023800 	.word	0x40023800
 80019f8:	40020400 	.word	0x40020400
 80019fc:	40020800 	.word	0x40020800

08001a00 <HAL_SPI_MspInit>:
* This function configures the hardware resources used in this example
* @param hspi: SPI handle pointer
* @retval None
*/
void HAL_SPI_MspInit(SPI_HandleTypeDef* hspi)
{
 8001a00:	b580      	push	{r7, lr}
 8001a02:	b08a      	sub	sp, #40	@ 0x28
 8001a04:	af00      	add	r7, sp, #0
 8001a06:	6078      	str	r0, [r7, #4]
  GPIO_InitTypeDef GPIO_InitStruct = {0};
 8001a08:	f107 0314 	add.w	r3, r7, #20
 8001a0c:	2200      	movs	r2, #0
 8001a0e:	601a      	str	r2, [r3, #0]
 8001a10:	605a      	str	r2, [r3, #4]
 8001a12:	609a      	str	r2, [r3, #8]
 8001a14:	60da      	str	r2, [r3, #12]
 8001a16:	611a      	str	r2, [r3, #16]
  if(hspi->Instance==SPI2)
 8001a18:	687b      	ldr	r3, [r7, #4]
 8001a1a:	681b      	ldr	r3, [r3, #0]
 8001a1c:	4a4b      	ldr	r2, [pc, #300]	@ (8001b4c <HAL_SPI_MspInit+0x14c>)
 8001a1e:	4293      	cmp	r3, r2
 8001a20:	f040 8090 	bne.w	8001b44 <HAL_SPI_MspInit+0x144>
  {
  /* USER CODE BEGIN SPI2_MspInit 0 */

  /* USER CODE END SPI2_MspInit 0 */
    /* Peripheral clock enable */
    __HAL_RCC_SPI2_CLK_ENABLE();
 8001a24:	2300      	movs	r3, #0
 8001a26:	613b      	str	r3, [r7, #16]
 8001a28:	4b49      	ldr	r3, [pc, #292]	@ (8001b50 <HAL_SPI_MspInit+0x150>)
 8001a2a:	6c1b      	ldr	r3, [r3, #64]	@ 0x40
 8001a2c:	4a48      	ldr	r2, [pc, #288]	@ (8001b50 <HAL_SPI_MspInit+0x150>)
 8001a2e:	f443 4380 	orr.w	r3, r3, #16384	@ 0x4000
 8001a32:	6413      	str	r3, [r2, #64]	@ 0x40
 8001a34:	4b46      	ldr	r3, [pc, #280]	@ (8001b50 <HAL_SPI_MspInit+0x150>)
 8001a36:	6c1b      	ldr	r3, [r3, #64]	@ 0x40
 8001a38:	f403 4380 	and.w	r3, r3, #16384	@ 0x4000
 8001a3c:	613b      	str	r3, [r7, #16]
 8001a3e:	693b      	ldr	r3, [r7, #16]

    __HAL_RCC_GPIOC_CLK_ENABLE();
 8001a40:	2300      	movs	r3, #0
 8001a42:	60fb      	str	r3, [r7, #12]
 8001a44:	4b42      	ldr	r3, [pc, #264]	@ (8001b50 <HAL_SPI_MspInit+0x150>)
 8001a46:	6b1b      	ldr	r3, [r3, #48]	@ 0x30
 8001a48:	4a41      	ldr	r2, [pc, #260]	@ (8001b50 <HAL_SPI_MspInit+0x150>)
 8001a4a:	f043 0304 	orr.w	r3, r3, #4
 8001a4e:	6313      	str	r3, [r2, #48]	@ 0x30
 8001a50:	4b3f      	ldr	r3, [pc, #252]	@ (8001b50 <HAL_SPI_MspInit+0x150>)
 8001a52:	6b1b      	ldr	r3, [r3, #48]	@ 0x30
 8001a54:	f003 0304 	and.w	r3, r3, #4
 8001a58:	60fb      	str	r3, [r7, #12]
 8001a5a:	68fb      	ldr	r3, [r7, #12]
    __HAL_RCC_GPIOB_CLK_ENABLE();
 8001a5c:	2300      	movs	r3, #0
 8001a5e:	60bb      	str	r3, [r7, #8]
 8001a60:	4b3b      	ldr	r3, [pc, #236]	@ (8001b50 <HAL_SPI_MspInit+0x150>)
 8001a62:	6b1b      	ldr	r3, [r3, #48]	@ 0x30
 8001a64:	4a3a      	ldr	r2, [pc, #232]	@ (8001b50 <HAL_SPI_MspInit+0x150>)
 8001a66:	f043 0302 	orr.w	r3, r3, #2
 8001a6a:	6313      	str	r3, [r2, #48]	@ 0x30
 8001a6c:	4b38      	ldr	r3, [pc, #224]	@ (8001b50 <HAL_SPI_MspInit+0x150>)
 8001a6e:	6b1b      	ldr	r3, [r3, #48]	@ 0x30
 8001a70:	f003 0302 	and.w	r3, r3, #2
 8001a74:	60bb      	str	r3, [r7, #8]
 8001a76:	68bb      	ldr	r3, [r7, #8]
    /**SPI2 GPIO Configuration
    PC1     ------> SPI2_MOSI
    PC2     ------> SPI2_MISO
    PB13     ------> SPI2_SCK
    */
    GPIO_InitStruct.Pin = DISPL_MOSI_Pin;
 8001a78:	2302      	movs	r3, #2
 8001a7a:	617b      	str	r3, [r7, #20]
    GPIO_InitStruct.Mode = GPIO_MODE_AF_PP;
 8001a7c:	2302      	movs	r3, #2
 8001a7e:	61bb      	str	r3, [r7, #24]
    GPIO_InitStruct.Pull = GPIO_NOPULL;
 8001a80:	2300      	movs	r3, #0
 8001a82:	61fb      	str	r3, [r7, #28]
    GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_VERY_HIGH;
 8001a84:	2303      	movs	r3, #3
 8001a86:	623b      	str	r3, [r7, #32]
    GPIO_InitStruct.Alternate = GPIO_AF7_SPI2;
 8001a88:	2307      	movs	r3, #7
 8001a8a:	627b      	str	r3, [r7, #36]	@ 0x24
    HAL_GPIO_Init(DISPL_MOSI_GPIO_Port, &GPIO_InitStruct);
 8001a8c:	f107 0314 	add.w	r3, r7, #20
 8001a90:	4619      	mov	r1, r3
 8001a92:	4830      	ldr	r0, [pc, #192]	@ (8001b54 <HAL_SPI_MspInit+0x154>)
 8001a94:	f002 f9f2 	bl	8003e7c <HAL_GPIO_Init>

    GPIO_InitStruct.Pin = TOUCH_MISO_Pin;
 8001a98:	2304      	movs	r3, #4
 8001a9a:	617b      	str	r3, [r7, #20]
    GPIO_InitStruct.Mode = GPIO_MODE_AF_PP;
 8001a9c:	2302      	movs	r3, #2
 8001a9e:	61bb      	str	r3, [r7, #24]
    GPIO_InitStruct.Pull = GPIO_NOPULL;
 8001aa0:	2300      	movs	r3, #0
 8001aa2:	61fb      	str	r3, [r7, #28]
    GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_VERY_HIGH;
 8001aa4:	2303      	movs	r3, #3
 8001aa6:	623b      	str	r3, [r7, #32]
    GPIO_InitStruct.Alternate = GPIO_AF5_SPI2;
 8001aa8:	2305      	movs	r3, #5
 8001aaa:	627b      	str	r3, [r7, #36]	@ 0x24
    HAL_GPIO_Init(TOUCH_MISO_GPIO_Port, &GPIO_InitStruct);
 8001aac:	f107 0314 	add.w	r3, r7, #20
 8001ab0:	4619      	mov	r1, r3
 8001ab2:	4828      	ldr	r0, [pc, #160]	@ (8001b54 <HAL_SPI_MspInit+0x154>)
 8001ab4:	f002 f9e2 	bl	8003e7c <HAL_GPIO_Init>

    GPIO_InitStruct.Pin = DISPL_SCK_Pin;
 8001ab8:	f44f 5300 	mov.w	r3, #8192	@ 0x2000
 8001abc:	617b      	str	r3, [r7, #20]
    GPIO_InitStruct.Mode = GPIO_MODE_AF_PP;
 8001abe:	2302      	movs	r3, #2
 8001ac0:	61bb      	str	r3, [r7, #24]
    GPIO_InitStruct.Pull = GPIO_NOPULL;
 8001ac2:	2300      	movs	r3, #0
 8001ac4:	61fb      	str	r3, [r7, #28]
    GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_VERY_HIGH;
 8001ac6:	2303      	movs	r3, #3
 8001ac8:	623b      	str	r3, [r7, #32]
    GPIO_InitStruct.Alternate = GPIO_AF5_SPI2;
 8001aca:	2305      	movs	r3, #5
 8001acc:	627b      	str	r3, [r7, #36]	@ 0x24
    HAL_GPIO_Init(DISPL_SCK_GPIO_Port, &GPIO_InitStruct);
 8001ace:	f107 0314 	add.w	r3, r7, #20
 8001ad2:	4619      	mov	r1, r3
 8001ad4:	4820      	ldr	r0, [pc, #128]	@ (8001b58 <HAL_SPI_MspInit+0x158>)
 8001ad6:	f002 f9d1 	bl	8003e7c <HAL_GPIO_Init>

    /* SPI2 DMA Init */
    /* SPI2_TX Init */
    hdma_spi2_tx.Instance = DMA1_Stream4;
 8001ada:	4b20      	ldr	r3, [pc, #128]	@ (8001b5c <HAL_SPI_MspInit+0x15c>)
 8001adc:	4a20      	ldr	r2, [pc, #128]	@ (8001b60 <HAL_SPI_MspInit+0x160>)
 8001ade:	601a      	str	r2, [r3, #0]
    hdma_spi2_tx.Init.Channel = DMA_CHANNEL_0;
 8001ae0:	4b1e      	ldr	r3, [pc, #120]	@ (8001b5c <HAL_SPI_MspInit+0x15c>)
 8001ae2:	2200      	movs	r2, #0
 8001ae4:	605a      	str	r2, [r3, #4]
    hdma_spi2_tx.Init.Direction = DMA_MEMORY_TO_PERIPH;
 8001ae6:	4b1d      	ldr	r3, [pc, #116]	@ (8001b5c <HAL_SPI_MspInit+0x15c>)
 8001ae8:	2240      	movs	r2, #64	@ 0x40
 8001aea:	609a      	str	r2, [r3, #8]
    hdma_spi2_tx.Init.PeriphInc = DMA_PINC_DISABLE;
 8001aec:	4b1b      	ldr	r3, [pc, #108]	@ (8001b5c <HAL_SPI_MspInit+0x15c>)
 8001aee:	2200      	movs	r2, #0
 8001af0:	60da      	str	r2, [r3, #12]
    hdma_spi2_tx.Init.MemInc = DMA_MINC_ENABLE;
 8001af2:	4b1a      	ldr	r3, [pc, #104]	@ (8001b5c <HAL_SPI_MspInit+0x15c>)
 8001af4:	f44f 6280 	mov.w	r2, #1024	@ 0x400
 8001af8:	611a      	str	r2, [r3, #16]
    hdma_spi2_tx.Init.PeriphDataAlignment = DMA_PDATAALIGN_BYTE;
 8001afa:	4b18      	ldr	r3, [pc, #96]	@ (8001b5c <HAL_SPI_MspInit+0x15c>)
 8001afc:	2200      	movs	r2, #0
 8001afe:	615a      	str	r2, [r3, #20]
    hdma_spi2_tx.Init.MemDataAlignment = DMA_MDATAALIGN_BYTE;
 8001b00:	4b16      	ldr	r3, [pc, #88]	@ (8001b5c <HAL_SPI_MspInit+0x15c>)
 8001b02:	2200      	movs	r2, #0
 8001b04:	619a      	str	r2, [r3, #24]
    hdma_spi2_tx.Init.Mode = DMA_NORMAL;
 8001b06:	4b15      	ldr	r3, [pc, #84]	@ (8001b5c <HAL_SPI_MspInit+0x15c>)
 8001b08:	2200      	movs	r2, #0
 8001b0a:	61da      	str	r2, [r3, #28]
    hdma_spi2_tx.Init.Priority = DMA_PRIORITY_LOW;
 8001b0c:	4b13      	ldr	r3, [pc, #76]	@ (8001b5c <HAL_SPI_MspInit+0x15c>)
 8001b0e:	2200      	movs	r2, #0
 8001b10:	621a      	str	r2, [r3, #32]
    hdma_spi2_tx.Init.FIFOMode = DMA_FIFOMODE_DISABLE;
 8001b12:	4b12      	ldr	r3, [pc, #72]	@ (8001b5c <HAL_SPI_MspInit+0x15c>)
 8001b14:	2200      	movs	r2, #0
 8001b16:	625a      	str	r2, [r3, #36]	@ 0x24
    if (HAL_DMA_Init(&hdma_spi2_tx) != HAL_OK)
 8001b18:	4810      	ldr	r0, [pc, #64]	@ (8001b5c <HAL_SPI_MspInit+0x15c>)
 8001b1a:	f001 fe1d 	bl	8003758 <HAL_DMA_Init>
 8001b1e:	4603      	mov	r3, r0
 8001b20:	2b00      	cmp	r3, #0
 8001b22:	d001      	beq.n	8001b28 <HAL_SPI_MspInit+0x128>
    {
      Error_Handler();
 8001b24:	f7ff fe32 	bl	800178c <Error_Handler>
    }

    __HAL_LINKDMA(hspi,hdmatx,hdma_spi2_tx);
 8001b28:	687b      	ldr	r3, [r7, #4]
 8001b2a:	4a0c      	ldr	r2, [pc, #48]	@ (8001b5c <HAL_SPI_MspInit+0x15c>)
 8001b2c:	649a      	str	r2, [r3, #72]	@ 0x48
 8001b2e:	4a0b      	ldr	r2, [pc, #44]	@ (8001b5c <HAL_SPI_MspInit+0x15c>)
 8001b30:	687b      	ldr	r3, [r7, #4]
 8001b32:	6393      	str	r3, [r2, #56]	@ 0x38

    /* SPI2 interrupt Init */
    HAL_NVIC_SetPriority(SPI2_IRQn, 0, 0);
 8001b34:	2200      	movs	r2, #0
 8001b36:	2100      	movs	r1, #0
 8001b38:	2024      	movs	r0, #36	@ 0x24
 8001b3a:	f001 fd9e 	bl	800367a <HAL_NVIC_SetPriority>
    HAL_NVIC_EnableIRQ(SPI2_IRQn);
 8001b3e:	2024      	movs	r0, #36	@ 0x24
 8001b40:	f001 fdb7 	bl	80036b2 <HAL_NVIC_EnableIRQ>

  /* USER CODE END SPI2_MspInit 1 */

  }

}
 8001b44:	bf00      	nop
 8001b46:	3728      	adds	r7, #40	@ 0x28
 8001b48:	46bd      	mov	sp, r7
 8001b4a:	bd80      	pop	{r7, pc}
 8001b4c:	40003800 	.word	0x40003800
 8001b50:	40023800 	.word	0x40023800
 8001b54:	40020800 	.word	0x40020800
 8001b58:	40020400 	.word	0x40020400
 8001b5c:	20000498 	.word	0x20000498
 8001b60:	40026070 	.word	0x40026070

08001b64 <HAL_TIM_Base_MspInit>:
* This function configures the hardware resources used in this example
* @param htim_base: TIM_Base handle pointer
* @retval None
*/
void HAL_TIM_Base_MspInit(TIM_HandleTypeDef* htim_base)
{
 8001b64:	b580      	push	{r7, lr}
 8001b66:	b086      	sub	sp, #24
 8001b68:	af00      	add	r7, sp, #0
 8001b6a:	6078      	str	r0, [r7, #4]
  if(htim_base->Instance==TIM2)
 8001b6c:	687b      	ldr	r3, [r7, #4]
 8001b6e:	681b      	ldr	r3, [r3, #0]
 8001b70:	f1b3 4f80 	cmp.w	r3, #1073741824	@ 0x40000000
 8001b74:	d10e      	bne.n	8001b94 <HAL_TIM_Base_MspInit+0x30>
  {
  /* USER CODE BEGIN TIM2_MspInit 0 */

  /* USER CODE END TIM2_MspInit 0 */
    /* Peripheral clock enable */
    __HAL_RCC_TIM2_CLK_ENABLE();
 8001b76:	2300      	movs	r3, #0
 8001b78:	617b      	str	r3, [r7, #20]
 8001b7a:	4b24      	ldr	r3, [pc, #144]	@ (8001c0c <HAL_TIM_Base_MspInit+0xa8>)
 8001b7c:	6c1b      	ldr	r3, [r3, #64]	@ 0x40
 8001b7e:	4a23      	ldr	r2, [pc, #140]	@ (8001c0c <HAL_TIM_Base_MspInit+0xa8>)
 8001b80:	f043 0301 	orr.w	r3, r3, #1
 8001b84:	6413      	str	r3, [r2, #64]	@ 0x40
 8001b86:	4b21      	ldr	r3, [pc, #132]	@ (8001c0c <HAL_TIM_Base_MspInit+0xa8>)
 8001b88:	6c1b      	ldr	r3, [r3, #64]	@ 0x40
 8001b8a:	f003 0301 	and.w	r3, r3, #1
 8001b8e:	617b      	str	r3, [r7, #20]
 8001b90:	697b      	ldr	r3, [r7, #20]
  /* USER CODE BEGIN TIM4_MspInit 1 */

  /* USER CODE END TIM4_MspInit 1 */
  }

}
 8001b92:	e036      	b.n	8001c02 <HAL_TIM_Base_MspInit+0x9e>
  else if(htim_base->Instance==TIM3)
 8001b94:	687b      	ldr	r3, [r7, #4]
 8001b96:	681b      	ldr	r3, [r3, #0]
 8001b98:	4a1d      	ldr	r2, [pc, #116]	@ (8001c10 <HAL_TIM_Base_MspInit+0xac>)
 8001b9a:	4293      	cmp	r3, r2
 8001b9c:	d116      	bne.n	8001bcc <HAL_TIM_Base_MspInit+0x68>
    __HAL_RCC_TIM3_CLK_ENABLE();
 8001b9e:	2300      	movs	r3, #0
 8001ba0:	613b      	str	r3, [r7, #16]
 8001ba2:	4b1a      	ldr	r3, [pc, #104]	@ (8001c0c <HAL_TIM_Base_MspInit+0xa8>)
 8001ba4:	6c1b      	ldr	r3, [r3, #64]	@ 0x40
 8001ba6:	4a19      	ldr	r2, [pc, #100]	@ (8001c0c <HAL_TIM_Base_MspInit+0xa8>)
 8001ba8:	f043 0302 	orr.w	r3, r3, #2
 8001bac:	6413      	str	r3, [r2, #64]	@ 0x40
 8001bae:	4b17      	ldr	r3, [pc, #92]	@ (8001c0c <HAL_TIM_Base_MspInit+0xa8>)
 8001bb0:	6c1b      	ldr	r3, [r3, #64]	@ 0x40
 8001bb2:	f003 0302 	and.w	r3, r3, #2
 8001bb6:	613b      	str	r3, [r7, #16]
 8001bb8:	693b      	ldr	r3, [r7, #16]
    HAL_NVIC_SetPriority(TIM3_IRQn, 0, 0);
 8001bba:	2200      	movs	r2, #0
 8001bbc:	2100      	movs	r1, #0
 8001bbe:	201d      	movs	r0, #29
 8001bc0:	f001 fd5b 	bl	800367a <HAL_NVIC_SetPriority>
    HAL_NVIC_EnableIRQ(TIM3_IRQn);
 8001bc4:	201d      	movs	r0, #29
 8001bc6:	f001 fd74 	bl	80036b2 <HAL_NVIC_EnableIRQ>
}
 8001bca:	e01a      	b.n	8001c02 <HAL_TIM_Base_MspInit+0x9e>
  else if(htim_base->Instance==TIM4)
 8001bcc:	687b      	ldr	r3, [r7, #4]
 8001bce:	681b      	ldr	r3, [r3, #0]
 8001bd0:	4a10      	ldr	r2, [pc, #64]	@ (8001c14 <HAL_TIM_Base_MspInit+0xb0>)
 8001bd2:	4293      	cmp	r3, r2
 8001bd4:	d115      	bne.n	8001c02 <HAL_TIM_Base_MspInit+0x9e>
    __HAL_RCC_TIM4_CLK_ENABLE();
 8001bd6:	2300      	movs	r3, #0
 8001bd8:	60fb      	str	r3, [r7, #12]
 8001bda:	4b0c      	ldr	r3, [pc, #48]	@ (8001c0c <HAL_TIM_Base_MspInit+0xa8>)
 8001bdc:	6c1b      	ldr	r3, [r3, #64]	@ 0x40
 8001bde:	4a0b      	ldr	r2, [pc, #44]	@ (8001c0c <HAL_TIM_Base_MspInit+0xa8>)
 8001be0:	f043 0304 	orr.w	r3, r3, #4
 8001be4:	6413      	str	r3, [r2, #64]	@ 0x40
 8001be6:	4b09      	ldr	r3, [pc, #36]	@ (8001c0c <HAL_TIM_Base_MspInit+0xa8>)
 8001be8:	6c1b      	ldr	r3, [r3, #64]	@ 0x40
 8001bea:	f003 0304 	and.w	r3, r3, #4
 8001bee:	60fb      	str	r3, [r7, #12]
 8001bf0:	68fb      	ldr	r3, [r7, #12]
    HAL_NVIC_SetPriority(TIM4_IRQn, 0, 0);
 8001bf2:	2200      	movs	r2, #0
 8001bf4:	2100      	movs	r1, #0
 8001bf6:	201e      	movs	r0, #30
 8001bf8:	f001 fd3f 	bl	800367a <HAL_NVIC_SetPriority>
    HAL_NVIC_EnableIRQ(TIM4_IRQn);
 8001bfc:	201e      	movs	r0, #30
 8001bfe:	f001 fd58 	bl	80036b2 <HAL_NVIC_EnableIRQ>
}
 8001c02:	bf00      	nop
 8001c04:	3718      	adds	r7, #24
 8001c06:	46bd      	mov	sp, r7
 8001c08:	bd80      	pop	{r7, pc}
 8001c0a:	bf00      	nop
 8001c0c:	40023800 	.word	0x40023800
 8001c10:	40000400 	.word	0x40000400
 8001c14:	40000800 	.word	0x40000800

08001c18 <HAL_TIM_MspPostInit>:

void HAL_TIM_MspPostInit(TIM_HandleTypeDef* htim)
{
 8001c18:	b580      	push	{r7, lr}
 8001c1a:	b088      	sub	sp, #32
 8001c1c:	af00      	add	r7, sp, #0
 8001c1e:	6078      	str	r0, [r7, #4]
  GPIO_InitTypeDef GPIO_InitStruct = {0};
 8001c20:	f107 030c 	add.w	r3, r7, #12
 8001c24:	2200      	movs	r2, #0
 8001c26:	601a      	str	r2, [r3, #0]
 8001c28:	605a      	str	r2, [r3, #4]
 8001c2a:	609a      	str	r2, [r3, #8]
 8001c2c:	60da      	str	r2, [r3, #12]
 8001c2e:	611a      	str	r2, [r3, #16]
  if(htim->Instance==TIM2)
 8001c30:	687b      	ldr	r3, [r7, #4]
 8001c32:	681b      	ldr	r3, [r3, #0]
 8001c34:	f1b3 4f80 	cmp.w	r3, #1073741824	@ 0x40000000
 8001c38:	d11d      	bne.n	8001c76 <HAL_TIM_MspPostInit+0x5e>
  {
  /* USER CODE BEGIN TIM2_MspPostInit 0 */

  /* USER CODE END TIM2_MspPostInit 0 */

    __HAL_RCC_GPIOA_CLK_ENABLE();
 8001c3a:	2300      	movs	r3, #0
 8001c3c:	60bb      	str	r3, [r7, #8]
 8001c3e:	4b10      	ldr	r3, [pc, #64]	@ (8001c80 <HAL_TIM_MspPostInit+0x68>)
 8001c40:	6b1b      	ldr	r3, [r3, #48]	@ 0x30
 8001c42:	4a0f      	ldr	r2, [pc, #60]	@ (8001c80 <HAL_TIM_MspPostInit+0x68>)
 8001c44:	f043 0301 	orr.w	r3, r3, #1
 8001c48:	6313      	str	r3, [r2, #48]	@ 0x30
 8001c4a:	4b0d      	ldr	r3, [pc, #52]	@ (8001c80 <HAL_TIM_MspPostInit+0x68>)
 8001c4c:	6b1b      	ldr	r3, [r3, #48]	@ 0x30
 8001c4e:	f003 0301 	and.w	r3, r3, #1
 8001c52:	60bb      	str	r3, [r7, #8]
 8001c54:	68bb      	ldr	r3, [r7, #8]
    /**TIM2 GPIO Configuration
    PA0-WKUP     ------> TIM2_CH1
    */
    GPIO_InitStruct.Pin = GPIO_PIN_0;
 8001c56:	2301      	movs	r3, #1
 8001c58:	60fb      	str	r3, [r7, #12]
    GPIO_InitStruct.Mode = GPIO_MODE_AF_PP;
 8001c5a:	2302      	movs	r3, #2
 8001c5c:	613b      	str	r3, [r7, #16]
    GPIO_InitStruct.Pull = GPIO_NOPULL;
 8001c5e:	2300      	movs	r3, #0
 8001c60:	617b      	str	r3, [r7, #20]
    GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_LOW;
 8001c62:	2300      	movs	r3, #0
 8001c64:	61bb      	str	r3, [r7, #24]
    GPIO_InitStruct.Alternate = GPIO_AF1_TIM2;
 8001c66:	2301      	movs	r3, #1
 8001c68:	61fb      	str	r3, [r7, #28]
    HAL_GPIO_Init(GPIOA, &GPIO_InitStruct);
 8001c6a:	f107 030c 	add.w	r3, r7, #12
 8001c6e:	4619      	mov	r1, r3
 8001c70:	4804      	ldr	r0, [pc, #16]	@ (8001c84 <HAL_TIM_MspPostInit+0x6c>)
 8001c72:	f002 f903 	bl	8003e7c <HAL_GPIO_Init>
  /* USER CODE BEGIN TIM2_MspPostInit 1 */

  /* USER CODE END TIM2_MspPostInit 1 */
  }

}
 8001c76:	bf00      	nop
 8001c78:	3720      	adds	r7, #32
 8001c7a:	46bd      	mov	sp, r7
 8001c7c:	bd80      	pop	{r7, pc}
 8001c7e:	bf00      	nop
 8001c80:	40023800 	.word	0x40023800
 8001c84:	40020000 	.word	0x40020000

08001c88 <NMI_Handler>:
/******************************************************************************/
/**
  * @brief This function handles Non maskable interrupt.
  */
void NMI_Handler(void)
{
 8001c88:	b480      	push	{r7}
 8001c8a:	af00      	add	r7, sp, #0
  /* USER CODE BEGIN NonMaskableInt_IRQn 0 */

  /* USER CODE END NonMaskableInt_IRQn 0 */
  /* USER CODE BEGIN NonMaskableInt_IRQn 1 */
   while (1)
 8001c8c:	bf00      	nop
 8001c8e:	e7fd      	b.n	8001c8c <NMI_Handler+0x4>

08001c90 <HardFault_Handler>:

/**
  * @brief This function handles Hard fault interrupt.
  */
void HardFault_Handler(void)
{
 8001c90:	b480      	push	{r7}
 8001c92:	af00      	add	r7, sp, #0
  /* USER CODE BEGIN HardFault_IRQn 0 */

  /* USER CODE END HardFault_IRQn 0 */
  while (1)
 8001c94:	bf00      	nop
 8001c96:	e7fd      	b.n	8001c94 <HardFault_Handler+0x4>

08001c98 <MemManage_Handler>:

/**
  * @brief This function handles Memory management fault.
  */
void MemManage_Handler(void)
{
 8001c98:	b480      	push	{r7}
 8001c9a:	af00      	add	r7, sp, #0
  /* USER CODE BEGIN MemoryManagement_IRQn 0 */

  /* USER CODE END MemoryManagement_IRQn 0 */
  while (1)
 8001c9c:	bf00      	nop
 8001c9e:	e7fd      	b.n	8001c9c <MemManage_Handler+0x4>

08001ca0 <BusFault_Handler>:

/**
  * @brief This function handles Pre-fetch fault, memory access fault.
  */
void BusFault_Handler(void)
{
 8001ca0:	b480      	push	{r7}
 8001ca2:	af00      	add	r7, sp, #0
  /* USER CODE BEGIN BusFault_IRQn 0 */

  /* USER CODE END BusFault_IRQn 0 */
  while (1)
 8001ca4:	bf00      	nop
 8001ca6:	e7fd      	b.n	8001ca4 <BusFault_Handler+0x4>

08001ca8 <UsageFault_Handler>:

/**
  * @brief This function handles Undefined instruction or illegal state.
  */
void UsageFault_Handler(void)
{
 8001ca8:	b480      	push	{r7}
 8001caa:	af00      	add	r7, sp, #0
  /* USER CODE BEGIN UsageFault_IRQn 0 */

  /* USER CODE END UsageFault_IRQn 0 */
  while (1)
 8001cac:	bf00      	nop
 8001cae:	e7fd      	b.n	8001cac <UsageFault_Handler+0x4>

08001cb0 <SVC_Handler>:

/**
  * @brief This function handles System service call via SWI instruction.
  */
void SVC_Handler(void)
{
 8001cb0:	b480      	push	{r7}
 8001cb2:	af00      	add	r7, sp, #0

  /* USER CODE END SVCall_IRQn 0 */
  /* USER CODE BEGIN SVCall_IRQn 1 */

  /* USER CODE END SVCall_IRQn 1 */
}
 8001cb4:	bf00      	nop
 8001cb6:	46bd      	mov	sp, r7
 8001cb8:	f85d 7b04 	ldr.w	r7, [sp], #4
 8001cbc:	4770      	bx	lr

08001cbe <DebugMon_Handler>:

/**
  * @brief This function handles Debug monitor.
  */
void DebugMon_Handler(void)
{
 8001cbe:	b480      	push	{r7}
 8001cc0:	af00      	add	r7, sp, #0

  /* USER CODE END DebugMonitor_IRQn 0 */
  /* USER CODE BEGIN DebugMonitor_IRQn 1 */

  /* USER CODE END DebugMonitor_IRQn 1 */
}
 8001cc2:	bf00      	nop
 8001cc4:	46bd      	mov	sp, r7
 8001cc6:	f85d 7b04 	ldr.w	r7, [sp], #4
 8001cca:	4770      	bx	lr

08001ccc <PendSV_Handler>:

/**
  * @brief This function handles Pendable request for system service.
  */
void PendSV_Handler(void)
{
 8001ccc:	b480      	push	{r7}
 8001cce:	af00      	add	r7, sp, #0

  /* USER CODE END PendSV_IRQn 0 */
  /* USER CODE BEGIN PendSV_IRQn 1 */

  /* USER CODE END PendSV_IRQn 1 */
}
 8001cd0:	bf00      	nop
 8001cd2:	46bd      	mov	sp, r7
 8001cd4:	f85d 7b04 	ldr.w	r7, [sp], #4
 8001cd8:	4770      	bx	lr

08001cda <SysTick_Handler>:

/**
  * @brief This function handles System tick timer.
  */
void SysTick_Handler(void)
{
 8001cda:	b580      	push	{r7, lr}
 8001cdc:	af00      	add	r7, sp, #0
  /* USER CODE BEGIN SysTick_IRQn 0 */

  /* USER CODE END SysTick_IRQn 0 */
  HAL_IncTick();
 8001cde:	f000 fe25 	bl	800292c <HAL_IncTick>
  /* USER CODE BEGIN SysTick_IRQn 1 */

  /* USER CODE END SysTick_IRQn 1 */
}
 8001ce2:	bf00      	nop
 8001ce4:	bd80      	pop	{r7, pc}
	...

08001ce8 <DMA1_Stream4_IRQHandler>:

/**
  * @brief This function handles DMA1 stream4 global interrupt.
  */
void DMA1_Stream4_IRQHandler(void)
{
 8001ce8:	b580      	push	{r7, lr}
 8001cea:	af00      	add	r7, sp, #0
  /* USER CODE BEGIN DMA1_Stream4_IRQn 0 */

  /* USER CODE END DMA1_Stream4_IRQn 0 */
  HAL_DMA_IRQHandler(&hdma_spi2_tx);
 8001cec:	4802      	ldr	r0, [pc, #8]	@ (8001cf8 <DMA1_Stream4_IRQHandler+0x10>)
 8001cee:	f001 fe5b 	bl	80039a8 <HAL_DMA_IRQHandler>
  /* USER CODE BEGIN DMA1_Stream4_IRQn 1 */

  /* USER CODE END DMA1_Stream4_IRQn 1 */
}
 8001cf2:	bf00      	nop
 8001cf4:	bd80      	pop	{r7, pc}
 8001cf6:	bf00      	nop
 8001cf8:	20000498 	.word	0x20000498

08001cfc <ADC_IRQHandler>:

/**
  * @brief This function handles ADC1, ADC2 and ADC3 interrupts.
  */
void ADC_IRQHandler(void)
{
 8001cfc:	b580      	push	{r7, lr}
 8001cfe:	af00      	add	r7, sp, #0
  /* USER CODE BEGIN ADC_IRQn 0 */

  /* USER CODE END ADC_IRQn 0 */
  HAL_ADC_IRQHandler(&hadc1);
 8001d00:	4802      	ldr	r0, [pc, #8]	@ (8001d0c <ADC_IRQHandler+0x10>)
 8001d02:	f000 fe9a 	bl	8002a3a <HAL_ADC_IRQHandler>
  /* USER CODE BEGIN ADC_IRQn 1 */

  /* USER CODE END ADC_IRQn 1 */
}
 8001d06:	bf00      	nop
 8001d08:	bd80      	pop	{r7, pc}
 8001d0a:	bf00      	nop
 8001d0c:	2000033c 	.word	0x2000033c

08001d10 <EXTI9_5_IRQHandler>:

/**
  * @brief This function handles EXTI line[9:5] interrupts.
  */
void EXTI9_5_IRQHandler(void)
{
 8001d10:	b580      	push	{r7, lr}
 8001d12:	af00      	add	r7, sp, #0
  /* USER CODE BEGIN EXTI9_5_IRQn 0 */

  /* USER CODE END EXTI9_5_IRQn 0 */
  HAL_GPIO_EXTI_IRQHandler(TOUCH_INT_Pin);
 8001d14:	f44f 7080 	mov.w	r0, #256	@ 0x100
 8001d18:	f002 fa90 	bl	800423c <HAL_GPIO_EXTI_IRQHandler>
  /* USER CODE BEGIN EXTI9_5_IRQn 1 */

  /* USER CODE END EXTI9_5_IRQn 1 */
}
 8001d1c:	bf00      	nop
 8001d1e:	bd80      	pop	{r7, pc}

08001d20 <TIM3_IRQHandler>:

/**
  * @brief This function handles TIM3 global interrupt.
  */
void TIM3_IRQHandler(void)
{
 8001d20:	b580      	push	{r7, lr}
 8001d22:	af00      	add	r7, sp, #0
  /* USER CODE BEGIN TIM3_IRQn 0 */

  /* USER CODE END TIM3_IRQn 0 */
  HAL_TIM_IRQHandler(&htim3);
 8001d24:	4802      	ldr	r0, [pc, #8]	@ (8001d30 <TIM3_IRQHandler+0x10>)
 8001d26:	f005 fbe7 	bl	80074f8 <HAL_TIM_IRQHandler>
  /* USER CODE BEGIN TIM3_IRQn 1 */

  /* USER CODE END TIM3_IRQn 1 */
}
 8001d2a:	bf00      	nop
 8001d2c:	bd80      	pop	{r7, pc}
 8001d2e:	bf00      	nop
 8001d30:	20000540 	.word	0x20000540

08001d34 <TIM4_IRQHandler>:

/**
  * @brief This function handles TIM4 global interrupt.
  */
void TIM4_IRQHandler(void)
{
 8001d34:	b580      	push	{r7, lr}
 8001d36:	af00      	add	r7, sp, #0
  /* USER CODE BEGIN TIM4_IRQn 0 */

  /* USER CODE END TIM4_IRQn 0 */
  HAL_TIM_IRQHandler(&htim4);
 8001d38:	4802      	ldr	r0, [pc, #8]	@ (8001d44 <TIM4_IRQHandler+0x10>)
 8001d3a:	f005 fbdd 	bl	80074f8 <HAL_TIM_IRQHandler>
  /* USER CODE BEGIN TIM4_IRQn 1 */

  /* USER CODE END TIM4_IRQn 1 */
}
 8001d3e:	bf00      	nop
 8001d40:	bd80      	pop	{r7, pc}
 8001d42:	bf00      	nop
 8001d44:	20000588 	.word	0x20000588

08001d48 <SPI2_IRQHandler>:

/**
  * @brief This function handles SPI2 global interrupt.
  */
void SPI2_IRQHandler(void)
{
 8001d48:	b580      	push	{r7, lr}
 8001d4a:	af00      	add	r7, sp, #0
  /* USER CODE BEGIN SPI2_IRQn 0 */

  /* USER CODE END SPI2_IRQn 0 */
  HAL_SPI_IRQHandler(&hspi2);
 8001d4c:	4802      	ldr	r0, [pc, #8]	@ (8001d58 <SPI2_IRQHandler+0x10>)
 8001d4e:	f004 ff1b 	bl	8006b88 <HAL_SPI_IRQHandler>
  /* USER CODE BEGIN SPI2_IRQn 1 */

  /* USER CODE END SPI2_IRQn 1 */
}
 8001d52:	bf00      	nop
 8001d54:	bd80      	pop	{r7, pc}
 8001d56:	bf00      	nop
 8001d58:	20000440 	.word	0x20000440

08001d5c <DMA2_Stream0_IRQHandler>:

/**
  * @brief This function handles DMA2 stream0 global interrupt.
  */
void DMA2_Stream0_IRQHandler(void)
{
 8001d5c:	b580      	push	{r7, lr}
 8001d5e:	af00      	add	r7, sp, #0
  /* USER CODE BEGIN DMA2_Stream0_IRQn 0 */

  /* USER CODE END DMA2_Stream0_IRQn 0 */
  HAL_DMA_IRQHandler(&hdma_adc1);
 8001d60:	4802      	ldr	r0, [pc, #8]	@ (8001d6c <DMA2_Stream0_IRQHandler+0x10>)
 8001d62:	f001 fe21 	bl	80039a8 <HAL_DMA_IRQHandler>
  /* USER CODE BEGIN DMA2_Stream0_IRQn 1 */

  /* USER CODE END DMA2_Stream0_IRQn 1 */
}
 8001d66:	bf00      	nop
 8001d68:	bd80      	pop	{r7, pc}
 8001d6a:	bf00      	nop
 8001d6c:	20000384 	.word	0x20000384

08001d70 <_getpid>:
 8001d70:	b480      	push	{r7}
 8001d72:	af00      	add	r7, sp, #0
 8001d74:	2301      	movs	r3, #1
 8001d76:	4618      	mov	r0, r3
 8001d78:	46bd      	mov	sp, r7
 8001d7a:	f85d 7b04 	ldr.w	r7, [sp], #4
 8001d7e:	4770      	bx	lr

08001d80 <_kill>:
 8001d80:	b580      	push	{r7, lr}
 8001d82:	b082      	sub	sp, #8
 8001d84:	af00      	add	r7, sp, #0
 8001d86:	6078      	str	r0, [r7, #4]
 8001d88:	6039      	str	r1, [r7, #0]
 8001d8a:	f020 fe2b 	bl	80229e4 <__errno>
 8001d8e:	4603      	mov	r3, r0
 8001d90:	2216      	movs	r2, #22
 8001d92:	601a      	str	r2, [r3, #0]
 8001d94:	f04f 33ff 	mov.w	r3, #4294967295
 8001d98:	4618      	mov	r0, r3
 8001d9a:	3708      	adds	r7, #8
 8001d9c:	46bd      	mov	sp, r7
 8001d9e:	bd80      	pop	{r7, pc}

08001da0 <_exit>:
 8001da0:	b580      	push	{r7, lr}
 8001da2:	b082      	sub	sp, #8
 8001da4:	af00      	add	r7, sp, #0
 8001da6:	6078      	str	r0, [r7, #4]
 8001da8:	f04f 31ff 	mov.w	r1, #4294967295
 8001dac:	6878      	ldr	r0, [r7, #4]
 8001dae:	f7ff ffe7 	bl	8001d80 <_kill>
 8001db2:	bf00      	nop
 8001db4:	e7fd      	b.n	8001db2 <_exit+0x12>

08001db6 <_read>:
 8001db6:	b580      	push	{r7, lr}
 8001db8:	b086      	sub	sp, #24
 8001dba:	af00      	add	r7, sp, #0
 8001dbc:	60f8      	str	r0, [r7, #12]
 8001dbe:	60b9      	str	r1, [r7, #8]
 8001dc0:	607a      	str	r2, [r7, #4]
 8001dc2:	2300      	movs	r3, #0
 8001dc4:	617b      	str	r3, [r7, #20]
 8001dc6:	e00a      	b.n	8001dde <_read+0x28>
 8001dc8:	f3af 8000 	nop.w
 8001dcc:	4601      	mov	r1, r0
 8001dce:	68bb      	ldr	r3, [r7, #8]
 8001dd0:	1c5a      	adds	r2, r3, #1
 8001dd2:	60ba      	str	r2, [r7, #8]
 8001dd4:	b2ca      	uxtb	r2, r1
 8001dd6:	701a      	strb	r2, [r3, #0]
 8001dd8:	697b      	ldr	r3, [r7, #20]
 8001dda:	3301      	adds	r3, #1
 8001ddc:	617b      	str	r3, [r7, #20]
 8001dde:	697a      	ldr	r2, [r7, #20]
 8001de0:	687b      	ldr	r3, [r7, #4]
 8001de2:	429a      	cmp	r2, r3
 8001de4:	dbf0      	blt.n	8001dc8 <_read+0x12>
 8001de6:	687b      	ldr	r3, [r7, #4]
 8001de8:	4618      	mov	r0, r3
 8001dea:	3718      	adds	r7, #24
 8001dec:	46bd      	mov	sp, r7
 8001dee:	bd80      	pop	{r7, pc}

08001df0 <_write>:
 8001df0:	b580      	push	{r7, lr}
 8001df2:	b086      	sub	sp, #24
 8001df4:	af00      	add	r7, sp, #0
 8001df6:	60f8      	str	r0, [r7, #12]
 8001df8:	60b9      	str	r1, [r7, #8]
 8001dfa:	607a      	str	r2, [r7, #4]
 8001dfc:	2300      	movs	r3, #0
 8001dfe:	617b      	str	r3, [r7, #20]
 8001e00:	e009      	b.n	8001e16 <_write+0x26>
 8001e02:	68bb      	ldr	r3, [r7, #8]
 8001e04:	1c5a      	adds	r2, r3, #1
 8001e06:	60ba      	str	r2, [r7, #8]
 8001e08:	781b      	ldrb	r3, [r3, #0]
 8001e0a:	4618      	mov	r0, r3
 8001e0c:	f3af 8000 	nop.w
 8001e10:	697b      	ldr	r3, [r7, #20]
 8001e12:	3301      	adds	r3, #1
 8001e14:	617b      	str	r3, [r7, #20]
 8001e16:	697a      	ldr	r2, [r7, #20]
 8001e18:	687b      	ldr	r3, [r7, #4]
 8001e1a:	429a      	cmp	r2, r3
 8001e1c:	dbf1      	blt.n	8001e02 <_write+0x12>
 8001e1e:	687b      	ldr	r3, [r7, #4]
 8001e20:	4618      	mov	r0, r3
 8001e22:	3718      	adds	r7, #24
 8001e24:	46bd      	mov	sp, r7
 8001e26:	bd80      	pop	{r7, pc}

08001e28 <_close>:
 8001e28:	b480      	push	{r7}
 8001e2a:	b083      	sub	sp, #12
 8001e2c:	af00      	add	r7, sp, #0
 8001e2e:	6078      	str	r0, [r7, #4]
 8001e30:	f04f 33ff 	mov.w	r3, #4294967295
 8001e34:	4618      	mov	r0, r3
 8001e36:	370c      	adds	r7, #12
 8001e38:	46bd      	mov	sp, r7
 8001e3a:	f85d 7b04 	ldr.w	r7, [sp], #4
 8001e3e:	4770      	bx	lr

08001e40 <_fstat>:
 8001e40:	b480      	push	{r7}
 8001e42:	b083      	sub	sp, #12
 8001e44:	af00      	add	r7, sp, #0
 8001e46:	6078      	str	r0, [r7, #4]
 8001e48:	6039      	str	r1, [r7, #0]
 8001e4a:	683b      	ldr	r3, [r7, #0]
 8001e4c:	f44f 5200 	mov.w	r2, #8192	@ 0x2000
 8001e50:	605a      	str	r2, [r3, #4]
 8001e52:	2300      	movs	r3, #0
 8001e54:	4618      	mov	r0, r3
 8001e56:	370c      	adds	r7, #12
 8001e58:	46bd      	mov	sp, r7
 8001e5a:	f85d 7b04 	ldr.w	r7, [sp], #4
 8001e5e:	4770      	bx	lr

08001e60 <_isatty>:
 8001e60:	b480      	push	{r7}
 8001e62:	b083      	sub	sp, #12
 8001e64:	af00      	add	r7, sp, #0
 8001e66:	6078      	str	r0, [r7, #4]
 8001e68:	2301      	movs	r3, #1
 8001e6a:	4618      	mov	r0, r3
 8001e6c:	370c      	adds	r7, #12
 8001e6e:	46bd      	mov	sp, r7
 8001e70:	f85d 7b04 	ldr.w	r7, [sp], #4
 8001e74:	4770      	bx	lr

08001e76 <_lseek>:
 8001e76:	b480      	push	{r7}
 8001e78:	b085      	sub	sp, #20
 8001e7a:	af00      	add	r7, sp, #0
 8001e7c:	60f8      	str	r0, [r7, #12]
 8001e7e:	60b9      	str	r1, [r7, #8]
 8001e80:	607a      	str	r2, [r7, #4]
 8001e82:	2300      	movs	r3, #0
 8001e84:	4618      	mov	r0, r3
 8001e86:	3714      	adds	r7, #20
 8001e88:	46bd      	mov	sp, r7
 8001e8a:	f85d 7b04 	ldr.w	r7, [sp], #4
 8001e8e:	4770      	bx	lr

08001e90 <_sbrk>:
 8001e90:	b580      	push	{r7, lr}
 8001e92:	b086      	sub	sp, #24
 8001e94:	af00      	add	r7, sp, #0
 8001e96:	6078      	str	r0, [r7, #4]
 8001e98:	4a14      	ldr	r2, [pc, #80]	@ (8001eec <_sbrk+0x5c>)
 8001e9a:	4b15      	ldr	r3, [pc, #84]	@ (8001ef0 <_sbrk+0x60>)
 8001e9c:	1ad3      	subs	r3, r2, r3
 8001e9e:	617b      	str	r3, [r7, #20]
 8001ea0:	697b      	ldr	r3, [r7, #20]
 8001ea2:	613b      	str	r3, [r7, #16]
 8001ea4:	4b13      	ldr	r3, [pc, #76]	@ (8001ef4 <_sbrk+0x64>)
 8001ea6:	681b      	ldr	r3, [r3, #0]
 8001ea8:	2b00      	cmp	r3, #0
 8001eaa:	d102      	bne.n	8001eb2 <_sbrk+0x22>
 8001eac:	4b11      	ldr	r3, [pc, #68]	@ (8001ef4 <_sbrk+0x64>)
 8001eae:	4a12      	ldr	r2, [pc, #72]	@ (8001ef8 <_sbrk+0x68>)
 8001eb0:	601a      	str	r2, [r3, #0]
 8001eb2:	4b10      	ldr	r3, [pc, #64]	@ (8001ef4 <_sbrk+0x64>)
 8001eb4:	681a      	ldr	r2, [r3, #0]
 8001eb6:	687b      	ldr	r3, [r7, #4]
 8001eb8:	4413      	add	r3, r2
 8001eba:	693a      	ldr	r2, [r7, #16]
 8001ebc:	429a      	cmp	r2, r3
 8001ebe:	d207      	bcs.n	8001ed0 <_sbrk+0x40>
 8001ec0:	f020 fd90 	bl	80229e4 <__errno>
 8001ec4:	4603      	mov	r3, r0
 8001ec6:	220c      	movs	r2, #12
 8001ec8:	601a      	str	r2, [r3, #0]
 8001eca:	f04f 33ff 	mov.w	r3, #4294967295
 8001ece:	e009      	b.n	8001ee4 <_sbrk+0x54>
 8001ed0:	4b08      	ldr	r3, [pc, #32]	@ (8001ef4 <_sbrk+0x64>)
 8001ed2:	681b      	ldr	r3, [r3, #0]
 8001ed4:	60fb      	str	r3, [r7, #12]
 8001ed6:	4b07      	ldr	r3, [pc, #28]	@ (8001ef4 <_sbrk+0x64>)
 8001ed8:	681a      	ldr	r2, [r3, #0]
 8001eda:	687b      	ldr	r3, [r7, #4]
 8001edc:	4413      	add	r3, r2
 8001ede:	4a05      	ldr	r2, [pc, #20]	@ (8001ef4 <_sbrk+0x64>)
 8001ee0:	6013      	str	r3, [r2, #0]
 8001ee2:	68fb      	ldr	r3, [r7, #12]
 8001ee4:	4618      	mov	r0, r3
 8001ee6:	3718      	adds	r7, #24
 8001ee8:	46bd      	mov	sp, r7
 8001eea:	bd80      	pop	{r7, pc}
 8001eec:	20020000 	.word	0x20020000
 8001ef0:	00000400 	.word	0x00000400
 8001ef4:	200005e4 	.word	0x200005e4
 8001ef8:	20003af8 	.word	0x20003af8

08001efc <SystemInit>:
  *         configuration.
  * @param  None
  * @retval None
  */
void SystemInit(void)
{
 8001efc:	b480      	push	{r7}
 8001efe:	af00      	add	r7, sp, #0
  /* FPU settings ------------------------------------------------------------*/
  #if (__FPU_PRESENT == 1) && (__FPU_USED == 1)
    SCB->CPACR |= ((3UL << 10*2)|(3UL << 11*2));  /* set CP10 and CP11 Full Access */
 8001f00:	4b06      	ldr	r3, [pc, #24]	@ (8001f1c <SystemInit+0x20>)
 8001f02:	f8d3 3088 	ldr.w	r3, [r3, #136]	@ 0x88
 8001f06:	4a05      	ldr	r2, [pc, #20]	@ (8001f1c <SystemInit+0x20>)
 8001f08:	f443 0370 	orr.w	r3, r3, #15728640	@ 0xf00000
 8001f0c:	f8c2 3088 	str.w	r3, [r2, #136]	@ 0x88

  /* Configure the Vector Table location -------------------------------------*/
#if defined(USER_VECT_TAB_ADDRESS)
  SCB->VTOR = VECT_TAB_BASE_ADDRESS | VECT_TAB_OFFSET; /* Vector Table Relocation in Internal SRAM */
#endif /* USER_VECT_TAB_ADDRESS */
}
 8001f10:	bf00      	nop
 8001f12:	46bd      	mov	sp, r7
 8001f14:	f85d 7b04 	ldr.w	r7, [sp], #4
 8001f18:	4770      	bx	lr
 8001f1a:	bf00      	nop
 8001f1c:	e000ed00 	.word	0xe000ed00

08001f20 <Displ_Select>:

/******************************************
 * @brief	enable display, disabling touch
 * 			device selected if CS low
 ******************************************/
void Displ_Select(void) {
 8001f20:	b580      	push	{r7, lr}
 8001f22:	af00      	add	r7, sp, #0
	if (TOUCH_SPI==DISPL_SPI){														// if SPI port shared (display <-> touch)
		if (HAL_GPIO_ReadPin(DISPL_CS_GPIO_Port, DISPL_CS_Pin)) {					// if display not yet selected
 8001f24:	2180      	movs	r1, #128	@ 0x80
 8001f26:	4810      	ldr	r0, [pc, #64]	@ (8001f68 <Displ_Select+0x48>)
 8001f28:	f002 f93c 	bl	80041a4 <HAL_GPIO_ReadPin>
 8001f2c:	4603      	mov	r3, r0
 8001f2e:	2b00      	cmp	r3, #0
 8001f30:	d017      	beq.n	8001f62 <Displ_Select+0x42>
			HAL_GPIO_WritePin(TOUCH_CS_GPIO_Port, TOUCH_CS_Pin, GPIO_PIN_SET); 		// unselect touch
 8001f32:	2201      	movs	r2, #1
 8001f34:	f44f 7100 	mov.w	r1, #512	@ 0x200
 8001f38:	480c      	ldr	r0, [pc, #48]	@ (8001f6c <Displ_Select+0x4c>)
 8001f3a:	f002 f94b 	bl	80041d4 <HAL_GPIO_WritePin>
			SET_DISPL_SPI_BAUDRATE;				   									//change SPI port speed as per display needs
 8001f3e:	4b0c      	ldr	r3, [pc, #48]	@ (8001f70 <Displ_Select+0x50>)
 8001f40:	681a      	ldr	r2, [r3, #0]
 8001f42:	490b      	ldr	r1, [pc, #44]	@ (8001f70 <Displ_Select+0x50>)
 8001f44:	f64f 73c7 	movw	r3, #65479	@ 0xffc7
 8001f48:	4013      	ands	r3, r2
 8001f4a:	600b      	str	r3, [r1, #0]
 8001f4c:	4b08      	ldr	r3, [pc, #32]	@ (8001f70 <Displ_Select+0x50>)
 8001f4e:	681b      	ldr	r3, [r3, #0]
 8001f50:	4a07      	ldr	r2, [pc, #28]	@ (8001f70 <Displ_Select+0x50>)
 8001f52:	f043 0308 	orr.w	r3, r3, #8
 8001f56:	6013      	str	r3, [r2, #0]
			HAL_GPIO_WritePin(DISPL_CS_GPIO_Port, DISPL_CS_Pin, GPIO_PIN_RESET);	// select display
 8001f58:	2200      	movs	r2, #0
 8001f5a:	2180      	movs	r1, #128	@ 0x80
 8001f5c:	4802      	ldr	r0, [pc, #8]	@ (8001f68 <Displ_Select+0x48>)
 8001f5e:	f002 f939 	bl	80041d4 <HAL_GPIO_WritePin>
		}
	}
}
 8001f62:	bf00      	nop
 8001f64:	bd80      	pop	{r7, pc}
 8001f66:	bf00      	nop
 8001f68:	40020800 	.word	0x40020800
 8001f6c:	40020000 	.word	0x40020000
 8001f70:	40003800 	.word	0x40003800

08001f74 <Displ_Transmit>:
 * @PARAM	DC_Status 	indicates if sending command or data
 * 			data		buffer data to send
 * 			dataSize	number of bytes in "data" to be sent
 * 			isTouchGFXBuffer 1 only when called by touchgfxDisplayDriverTransmitBlock (for byte endian conversion). All other cases 0
 **************************/
void Displ_Transmit(GPIO_PinState DC_Status, uint8_t* data, uint16_t dataSize, uint8_t isTouchGFXBuffer ){
 8001f74:	b580      	push	{r7, lr}
 8001f76:	b086      	sub	sp, #24
 8001f78:	af00      	add	r7, sp, #0
 8001f7a:	6039      	str	r1, [r7, #0]
 8001f7c:	4611      	mov	r1, r2
 8001f7e:	461a      	mov	r2, r3
 8001f80:	4603      	mov	r3, r0
 8001f82:	71fb      	strb	r3, [r7, #7]
 8001f84:	460b      	mov	r3, r1
 8001f86:	80bb      	strh	r3, [r7, #4]
 8001f88:	4613      	mov	r3, r2
 8001f8a:	71bb      	strb	r3, [r7, #6]

	while (!Displ_SpiAvailable) {};  // waiting for a free SPI port. Flag is set to 1 by transmission-complete interrupt callback
 8001f8c:	bf00      	nop
 8001f8e:	4b25      	ldr	r3, [pc, #148]	@ (8002024 <Displ_Transmit+0xb0>)
 8001f90:	781b      	ldrb	r3, [r3, #0]
 8001f92:	b2db      	uxtb	r3, r3
 8001f94:	2b00      	cmp	r3, #0
 8001f96:	d0fa      	beq.n	8001f8e <Displ_Transmit+0x1a>

	Displ_Select();
 8001f98:	f7ff ffc2 	bl	8001f20 <Displ_Select>
	HAL_GPIO_WritePin(DISPL_DC_GPIO_Port, DISPL_DC_Pin, DC_Status);
 8001f9c:	79fb      	ldrb	r3, [r7, #7]
 8001f9e:	461a      	mov	r2, r3
 8001fa0:	2180      	movs	r1, #128	@ 0x80
 8001fa2:	4821      	ldr	r0, [pc, #132]	@ (8002028 <Displ_Transmit+0xb4>)
 8001fa4:	f002 f916 	bl	80041d4 <HAL_GPIO_WritePin>

	if (isTouchGFXBuffer){
 8001fa8:	79bb      	ldrb	r3, [r7, #6]
 8001faa:	2b00      	cmp	r3, #0
 8001fac:	d016      	beq.n	8001fdc <Displ_Transmit+0x68>
#ifdef Z_RGB565
//if color format is RGB565 just swap even and odd bytes correcting endianess for ILI driver
		uint32_t *limit=(uint32_t*)(data+dataSize);
 8001fae:	88bb      	ldrh	r3, [r7, #4]
 8001fb0:	683a      	ldr	r2, [r7, #0]
 8001fb2:	4413      	add	r3, r2
 8001fb4:	613b      	str	r3, [r7, #16]
		for (uint32_t *data32=(uint32_t*)data; data32<limit; data32++) {
 8001fb6:	683b      	ldr	r3, [r7, #0]
 8001fb8:	617b      	str	r3, [r7, #20]
 8001fba:	e00b      	b.n	8001fd4 <Displ_Transmit+0x60>
			*data32=__REV16(*data32);
 8001fbc:	697b      	ldr	r3, [r7, #20]
 8001fbe:	681b      	ldr	r3, [r3, #0]
 8001fc0:	60fb      	str	r3, [r7, #12]
  __ASM ("rev16 %0, %1" : __CMSIS_GCC_OUT_REG (result) : __CMSIS_GCC_USE_REG (value) );
 8001fc2:	68fb      	ldr	r3, [r7, #12]
 8001fc4:	ba5b      	rev16	r3, r3
 8001fc6:	60bb      	str	r3, [r7, #8]
  return result;
 8001fc8:	68ba      	ldr	r2, [r7, #8]
 8001fca:	697b      	ldr	r3, [r7, #20]
 8001fcc:	601a      	str	r2, [r3, #0]
		for (uint32_t *data32=(uint32_t*)data; data32<limit; data32++) {
 8001fce:	697b      	ldr	r3, [r7, #20]
 8001fd0:	3304      	adds	r3, #4
 8001fd2:	617b      	str	r3, [r7, #20]
 8001fd4:	697a      	ldr	r2, [r7, #20]
 8001fd6:	693b      	ldr	r3, [r7, #16]
 8001fd8:	429a      	cmp	r2, r3
 8001fda:	d3ef      	bcc.n	8001fbc <Displ_Transmit+0x48>
#ifdef DISPLAY_SPI_INTERRUPT_MODE
		Displ_SpiAvailable=0;
		HAL_SPI_Transmit_IT(&DISPL_SPI_PORT , data, dataSize);
#else
#ifdef DISPLAY_SPI_DMA_MODE
		if (dataSize<DISPL_DMA_CUTOFF) {
 8001fdc:	88bb      	ldrh	r3, [r7, #4]
 8001fde:	2b13      	cmp	r3, #19
 8001fe0:	d812      	bhi.n	8002008 <Displ_Transmit+0x94>
#endif //DISPLAY_SPI_DMA_MODE
			Displ_SpiAvailable=0;
 8001fe2:	4b10      	ldr	r3, [pc, #64]	@ (8002024 <Displ_Transmit+0xb0>)
 8001fe4:	2200      	movs	r2, #0
 8001fe6:	701a      	strb	r2, [r3, #0]
			HAL_SPI_Transmit(&DISPL_SPI_PORT , data, dataSize, HAL_MAX_DELAY);
 8001fe8:	88ba      	ldrh	r2, [r7, #4]
 8001fea:	f04f 33ff 	mov.w	r3, #4294967295
 8001fee:	6839      	ldr	r1, [r7, #0]
 8001ff0:	480e      	ldr	r0, [pc, #56]	@ (800202c <Displ_Transmit+0xb8>)
 8001ff2:	f004 f910 	bl	8006216 <HAL_SPI_Transmit>
			Displ_SpiAvailable=1;
 8001ff6:	4b0b      	ldr	r3, [pc, #44]	@ (8002024 <Displ_Transmit+0xb0>)
 8001ff8:	2201      	movs	r2, #1
 8001ffa:	701a      	strb	r2, [r3, #0]
#ifdef DISPLAY_USING_TOUCHGFX
			if (isTouchGFXBuffer){
 8001ffc:	79bb      	ldrb	r3, [r7, #6]
 8001ffe:	2b00      	cmp	r3, #0
 8002000:	d00b      	beq.n	800201a <Displ_Transmit+0xa6>
				DisplayDriver_TransferCompleteCallback();
 8002002:	f00a fd75 	bl	800caf0 <DisplayDriver_TransferCompleteCallback>
			Displ_SpiAvailable=0;
			HAL_SPI_Transmit_DMA(&DISPL_SPI_PORT , data, dataSize);
		}
#endif //DISPLAY_SPI_DMA_MODE
#endif //DISPLAY_SPI_INTERRUPT_MODE
	}
 8002006:	e008      	b.n	800201a <Displ_Transmit+0xa6>
			Displ_SpiAvailable=0;
 8002008:	4b06      	ldr	r3, [pc, #24]	@ (8002024 <Displ_Transmit+0xb0>)
 800200a:	2200      	movs	r2, #0
 800200c:	701a      	strb	r2, [r3, #0]
			HAL_SPI_Transmit_DMA(&DISPL_SPI_PORT , data, dataSize);
 800200e:	88bb      	ldrh	r3, [r7, #4]
 8002010:	461a      	mov	r2, r3
 8002012:	6839      	ldr	r1, [r7, #0]
 8002014:	4805      	ldr	r0, [pc, #20]	@ (800202c <Displ_Transmit+0xb8>)
 8002016:	f004 fd05 	bl	8006a24 <HAL_SPI_Transmit_DMA>
	}
 800201a:	bf00      	nop
 800201c:	3718      	adds	r7, #24
 800201e:	46bd      	mov	sp, r7
 8002020:	bd80      	pop	{r7, pc}
 8002022:	bf00      	nop
 8002024:	2000000c 	.word	0x2000000c
 8002028:	40020000 	.word	0x40020000
 800202c:	20000440 	.word	0x20000440

08002030 <Displ_WriteCommand>:


/**********************************
 * @BRIEF	transmit a byte in a SPI_COMMAND format
 **********************************/
void Displ_WriteCommand(uint8_t cmd){
 8002030:	b580      	push	{r7, lr}
 8002032:	b082      	sub	sp, #8
 8002034:	af00      	add	r7, sp, #0
 8002036:	4603      	mov	r3, r0
 8002038:	71fb      	strb	r3, [r7, #7]
	Displ_Transmit(SPI_COMMAND, &cmd, sizeof(cmd),0);
 800203a:	1df9      	adds	r1, r7, #7
 800203c:	2300      	movs	r3, #0
 800203e:	2201      	movs	r2, #1
 8002040:	2000      	movs	r0, #0
 8002042:	f7ff ff97 	bl	8001f74 <Displ_Transmit>
}
 8002046:	bf00      	nop
 8002048:	3708      	adds	r7, #8
 800204a:	46bd      	mov	sp, r7
 800204c:	bd80      	pop	{r7, pc}

0800204e <Displ_WriteData>:
 * @BRIEF	transmit a set of data in a SPI_DATA format
 * @PARAM 	data		buffer data to send
 * 			dataSize	number of bytes in "data" to be sent
 * 			isTouchGFXBuffer 1 only when called by touchgfxDisplayDriverTransmitBlock (for byte endian conversion). All other cases 0
 **********************************/
void Displ_WriteData(uint8_t* buff, size_t buff_size, uint8_t isTouchGFXBuffer){
 800204e:	b580      	push	{r7, lr}
 8002050:	b084      	sub	sp, #16
 8002052:	af00      	add	r7, sp, #0
 8002054:	60f8      	str	r0, [r7, #12]
 8002056:	60b9      	str	r1, [r7, #8]
 8002058:	4613      	mov	r3, r2
 800205a:	71fb      	strb	r3, [r7, #7]
	if (buff_size==0) return;
 800205c:	68bb      	ldr	r3, [r7, #8]
 800205e:	2b00      	cmp	r3, #0
 8002060:	d007      	beq.n	8002072 <Displ_WriteData+0x24>
	Displ_Transmit(SPI_DATA, buff, buff_size, isTouchGFXBuffer);
 8002062:	68bb      	ldr	r3, [r7, #8]
 8002064:	b29a      	uxth	r2, r3
 8002066:	79fb      	ldrb	r3, [r7, #7]
 8002068:	68f9      	ldr	r1, [r7, #12]
 800206a:	2001      	movs	r0, #1
 800206c:	f7ff ff82 	bl	8001f74 <Displ_Transmit>
 8002070:	e000      	b.n	8002074 <Displ_WriteData+0x26>
	if (buff_size==0) return;
 8002072:	bf00      	nop
}
 8002074:	3710      	adds	r7, #16
 8002076:	46bd      	mov	sp, r7
 8002078:	bd80      	pop	{r7, pc}
	...

0800207c <ILI9XXX_Init>:


/**********************************
 * @brief	ILIXXX initialization sequence
 **********************************/
void ILI9XXX_Init(){
 800207c:	b580      	push	{r7, lr}
 800207e:	af00      	add	r7, sp, #0
	Displ_Select();
 8002080:	f7ff ff4e 	bl	8001f20 <Displ_Select>

	HAL_GPIO_WritePin(DISPL_RST_GPIO_Port, DISPL_RST_Pin, GPIO_PIN_RESET);
 8002084:	2200      	movs	r2, #0
 8002086:	2140      	movs	r1, #64	@ 0x40
 8002088:	4819      	ldr	r0, [pc, #100]	@ (80020f0 <ILI9XXX_Init+0x74>)
 800208a:	f002 f8a3 	bl	80041d4 <HAL_GPIO_WritePin>
	HAL_Delay(1);
 800208e:	2001      	movs	r0, #1
 8002090:	f000 fc6c 	bl	800296c <HAL_Delay>
	HAL_GPIO_WritePin(DISPL_RST_GPIO_Port, DISPL_RST_Pin, GPIO_PIN_SET);
 8002094:	2201      	movs	r2, #1
 8002096:	2140      	movs	r1, #64	@ 0x40
 8002098:	4815      	ldr	r0, [pc, #84]	@ (80020f0 <ILI9XXX_Init+0x74>)
 800209a:	f002 f89b 	bl	80041d4 <HAL_GPIO_WritePin>
	HAL_Delay(150);
 800209e:	2096      	movs	r0, #150	@ 0x96
 80020a0:	f000 fc64 	bl	800296c <HAL_Delay>
		Displ_WriteData(data,3);
	#endif
*/


	Displ_WriteCommand(ILI9XXX_PIXEL_FORMAT);
 80020a4:	203a      	movs	r0, #58	@ 0x3a
 80020a6:	f7ff ffc3 	bl	8002030 <Displ_WriteCommand>
#ifdef Z_RGB666
	Displ_WriteData((uint8_t *)"\x66",1,0);		// RGB666
#endif
#ifdef Z_RGB565
	Displ_WriteData((uint8_t *)"\x55",1,0);		// RGB565
 80020aa:	2200      	movs	r2, #0
 80020ac:	2101      	movs	r1, #1
 80020ae:	4811      	ldr	r0, [pc, #68]	@ (80020f4 <ILI9XXX_Init+0x78>)
 80020b0:	f7ff ffcd 	bl	800204e <Displ_WriteData>
#endif
	Displ_WriteCommand(ILI9XXX_RGB_INTERFACE);
 80020b4:	20b0      	movs	r0, #176	@ 0xb0
 80020b6:	f7ff ffbb 	bl	8002030 <Displ_WriteCommand>
	Displ_WriteData((uint8_t *)"\x80",1,0);        // disable MISO pin
 80020ba:	2200      	movs	r2, #0
 80020bc:	2101      	movs	r1, #1
 80020be:	480e      	ldr	r0, [pc, #56]	@ (80020f8 <ILI9XXX_Init+0x7c>)
 80020c0:	f7ff ffc5 	bl	800204e <Displ_WriteData>

	Displ_WriteCommand(ILI9XXX_RGB_INTERFACE);
 80020c4:	20b0      	movs	r0, #176	@ 0xb0
 80020c6:	f7ff ffb3 	bl	8002030 <Displ_WriteCommand>
	Displ_WriteData((uint8_t *)"\x80",1,0);        // disable MISO pin
 80020ca:	2200      	movs	r2, #0
 80020cc:	2101      	movs	r1, #1
 80020ce:	480a      	ldr	r0, [pc, #40]	@ (80020f8 <ILI9XXX_Init+0x7c>)
 80020d0:	f7ff ffbd 	bl	800204e <Displ_WriteData>

	Displ_WriteCommand(ILI9XXX_SLEEP_OUT);
 80020d4:	2011      	movs	r0, #17
 80020d6:	f7ff ffab 	bl	8002030 <Displ_WriteCommand>
	HAL_Delay(120);
 80020da:	2078      	movs	r0, #120	@ 0x78
 80020dc:	f000 fc46 	bl	800296c <HAL_Delay>

	Displ_WriteCommand(ILI9XXX_DISPLAY_ON);
 80020e0:	2029      	movs	r0, #41	@ 0x29
 80020e2:	f7ff ffa5 	bl	8002030 <Displ_WriteCommand>
	HAL_Delay(5);
 80020e6:	2005      	movs	r0, #5
 80020e8:	f000 fc40 	bl	800296c <HAL_Delay>

}
 80020ec:	bf00      	nop
 80020ee:	bd80      	pop	{r7, pc}
 80020f0:	40020400 	.word	0x40020400
 80020f4:	080234e8 	.word	0x080234e8
 80020f8:	080234ec 	.word	0x080234ec

080020fc <Displ_SetAddressWindow>:
 * 			information
 * @param  x1,y1,x2,y2 top left and bottom
 * 					   right corner of the area
 * 					   to write
 **********************************************/
void Displ_SetAddressWindow(uint16_t x1, uint16_t y1, uint16_t x2, uint16_t y2) {
 80020fc:	b590      	push	{r4, r7, lr}
 80020fe:	b083      	sub	sp, #12
 8002100:	af00      	add	r7, sp, #0
 8002102:	4604      	mov	r4, r0
 8002104:	4608      	mov	r0, r1
 8002106:	4611      	mov	r1, r2
 8002108:	461a      	mov	r2, r3
 800210a:	4623      	mov	r3, r4
 800210c:	80fb      	strh	r3, [r7, #6]
 800210e:	4603      	mov	r3, r0
 8002110:	80bb      	strh	r3, [r7, #4]
 8002112:	460b      	mov	r3, r1
 8002114:	807b      	strh	r3, [r7, #2]
 8002116:	4613      	mov	r3, r2
 8002118:	803b      	strh	r3, [r7, #0]
	static uint8_t data[4];

	((uint32_t *)data)[0]=(((x2 & 0xFF)<<24) | ((x2 & 0xFF00)<<8) | ((x1 & 0xFF)<<8) | ((x1 & 0xFF00)>>8) );
 800211a:	887b      	ldrh	r3, [r7, #2]
 800211c:	061a      	lsls	r2, r3, #24
 800211e:	887b      	ldrh	r3, [r7, #2]
 8002120:	021b      	lsls	r3, r3, #8
 8002122:	f403 037f 	and.w	r3, r3, #16711680	@ 0xff0000
 8002126:	431a      	orrs	r2, r3
 8002128:	88fb      	ldrh	r3, [r7, #6]
 800212a:	021b      	lsls	r3, r3, #8
 800212c:	b29b      	uxth	r3, r3
 800212e:	4313      	orrs	r3, r2
 8002130:	88fa      	ldrh	r2, [r7, #6]
 8002132:	0a12      	lsrs	r2, r2, #8
 8002134:	b292      	uxth	r2, r2
 8002136:	431a      	orrs	r2, r3
 8002138:	4b14      	ldr	r3, [pc, #80]	@ (800218c <Displ_SetAddressWindow+0x90>)
 800213a:	601a      	str	r2, [r3, #0]
	Displ_WriteCommand(ILI9XXX_COLUMN_ADDR);
 800213c:	202a      	movs	r0, #42	@ 0x2a
 800213e:	f7ff ff77 	bl	8002030 <Displ_WriteCommand>
	Displ_WriteData(data, 4,0);
 8002142:	2200      	movs	r2, #0
 8002144:	2104      	movs	r1, #4
 8002146:	4811      	ldr	r0, [pc, #68]	@ (800218c <Displ_SetAddressWindow+0x90>)
 8002148:	f7ff ff81 	bl	800204e <Displ_WriteData>

	((uint32_t *)data)[0]=(((y2 & 0xFF)<<24) | ((y2 & 0xFF00)<<8) | ((y1 & 0xFF)<<8) | ((y1 & 0xFF00)>>8) );
 800214c:	883b      	ldrh	r3, [r7, #0]
 800214e:	061a      	lsls	r2, r3, #24
 8002150:	883b      	ldrh	r3, [r7, #0]
 8002152:	021b      	lsls	r3, r3, #8
 8002154:	f403 037f 	and.w	r3, r3, #16711680	@ 0xff0000
 8002158:	431a      	orrs	r2, r3
 800215a:	88bb      	ldrh	r3, [r7, #4]
 800215c:	021b      	lsls	r3, r3, #8
 800215e:	b29b      	uxth	r3, r3
 8002160:	4313      	orrs	r3, r2
 8002162:	88ba      	ldrh	r2, [r7, #4]
 8002164:	0a12      	lsrs	r2, r2, #8
 8002166:	b292      	uxth	r2, r2
 8002168:	431a      	orrs	r2, r3
 800216a:	4b08      	ldr	r3, [pc, #32]	@ (800218c <Displ_SetAddressWindow+0x90>)
 800216c:	601a      	str	r2, [r3, #0]
	Displ_WriteCommand(ILI9XXX_PAGE_ADDR);
 800216e:	202b      	movs	r0, #43	@ 0x2b
 8002170:	f7ff ff5e 	bl	8002030 <Displ_WriteCommand>
	Displ_WriteData(data, 4,0);
 8002174:	2200      	movs	r2, #0
 8002176:	2104      	movs	r1, #4
 8002178:	4804      	ldr	r0, [pc, #16]	@ (800218c <Displ_SetAddressWindow+0x90>)
 800217a:	f7ff ff68 	bl	800204e <Displ_WriteData>
	Displ_WriteCommand(ILI9XXX_MEMWR);
 800217e:	202c      	movs	r0, #44	@ 0x2c
 8002180:	f7ff ff56 	bl	8002030 <Displ_WriteCommand>
}
 8002184:	bf00      	nop
 8002186:	370c      	adds	r7, #12
 8002188:	46bd      	mov	sp, r7
 800218a:	bd90      	pop	{r4, r7, pc}
 800218c:	200005f0 	.word	0x200005f0

08002190 <Displ_Init>:

/*****************************************************
 * @brief				first display initialization.
 * @param	orientation	display orientation
 *****************************************************/
void Displ_Init(Displ_Orientat_e orientation){
 8002190:	b580      	push	{r7, lr}
 8002192:	b082      	sub	sp, #8
 8002194:	af00      	add	r7, sp, #0
 8002196:	4603      	mov	r3, r0
 8002198:	71fb      	strb	r3, [r7, #7]
	if (TOUCH_SPI==DISPL_SPI){													// if touch and display share the same SPI port
		HAL_GPIO_WritePin(DISPL_CS_GPIO_Port, DISPL_CS_Pin, GPIO_PIN_SET); 		// unselect display (will be selected at writing time)
 800219a:	2201      	movs	r2, #1
 800219c:	2180      	movs	r1, #128	@ 0x80
 800219e:	4809      	ldr	r0, [pc, #36]	@ (80021c4 <Displ_Init+0x34>)
 80021a0:	f002 f818 	bl	80041d4 <HAL_GPIO_WritePin>
		HAL_GPIO_WritePin(TOUCH_CS_GPIO_Port, TOUCH_CS_Pin, GPIO_PIN_SET);		// unselect touch (will be selected at writing time)
 80021a4:	2201      	movs	r2, #1
 80021a6:	f44f 7100 	mov.w	r1, #512	@ 0x200
 80021aa:	4807      	ldr	r0, [pc, #28]	@ (80021c8 <Displ_Init+0x38>)
 80021ac:	f002 f812 	bl	80041d4 <HAL_GPIO_WritePin>
		HAL_GPIO_WritePin(DISPL_CS_GPIO_Port, DISPL_CS_Pin, GPIO_PIN_RESET); 	// select display
		SET_DISPL_SPI_BAUDRATE;
		HAL_GPIO_WritePin(TOUCH_CS_GPIO_Port, TOUCH_CS_Pin, GPIO_PIN_RESET);	// select touch
		SET_TOUCH_SPI_BAUDRATE;
	}
	ILI9XXX_Init();
 80021b0:	f7ff ff64 	bl	800207c <ILI9XXX_Init>
	Displ_Orientation(orientation);
 80021b4:	79fb      	ldrb	r3, [r7, #7]
 80021b6:	4618      	mov	r0, r3
 80021b8:	f000 f808 	bl	80021cc <Displ_Orientation>
}
 80021bc:	bf00      	nop
 80021be:	3708      	adds	r7, #8
 80021c0:	46bd      	mov	sp, r7
 80021c2:	bd80      	pop	{r7, pc}
 80021c4:	40020800 	.word	0x40020800
 80021c8:	40020000 	.word	0x40020000

080021cc <Displ_Orientation>:

/**********************************************
 * @brief		set orientation of the display
 * @param  	m	orientation
 **********************************************/
void Displ_Orientation(Displ_Orientat_e orientation){
 80021cc:	b580      	push	{r7, lr}
 80021ce:	b082      	sub	sp, #8
 80021d0:	af00      	add	r7, sp, #0
 80021d2:	4603      	mov	r3, r0
 80021d4:	71fb      	strb	r3, [r7, #7]
	static uint8_t data[1];
	switch(orientation) {
 80021d6:	79fb      	ldrb	r3, [r7, #7]
 80021d8:	2b03      	cmp	r3, #3
 80021da:	d83b      	bhi.n	8002254 <Displ_Orientation+0x88>
 80021dc:	a201      	add	r2, pc, #4	@ (adr r2, 80021e4 <Displ_Orientation+0x18>)
 80021de:	f852 f023 	ldr.w	pc, [r2, r3, lsl #2]
 80021e2:	bf00      	nop
 80021e4:	080021f5 	.word	0x080021f5
 80021e8:	0800220d 	.word	0x0800220d
 80021ec:	08002225 	.word	0x08002225
 80021f0:	0800223d 	.word	0x0800223d
		case Displ_Orientat_0:
			data[0]=ILI9XXX_MADCTL_0DEG;
 80021f4:	4b1f      	ldr	r3, [pc, #124]	@ (8002274 <Displ_Orientation+0xa8>)
 80021f6:	2288      	movs	r2, #136	@ 0x88
 80021f8:	701a      	strb	r2, [r3, #0]
			_height = DISPL_HEIGHT;
 80021fa:	4b1f      	ldr	r3, [pc, #124]	@ (8002278 <Displ_Orientation+0xac>)
 80021fc:	f44f 72f0 	mov.w	r2, #480	@ 0x1e0
 8002200:	801a      	strh	r2, [r3, #0]
			_width = DISPL_WIDTH;
 8002202:	4b1e      	ldr	r3, [pc, #120]	@ (800227c <Displ_Orientation+0xb0>)
 8002204:	f44f 72a0 	mov.w	r2, #320	@ 0x140
 8002208:	801a      	strh	r2, [r3, #0]
			break;
 800220a:	e023      	b.n	8002254 <Displ_Orientation+0x88>
		case Displ_Orientat_90:
			data[0]=ILI9XXX_MADCTL_90DEG;
 800220c:	4b19      	ldr	r3, [pc, #100]	@ (8002274 <Displ_Orientation+0xa8>)
 800220e:	22e8      	movs	r2, #232	@ 0xe8
 8002210:	701a      	strb	r2, [r3, #0]
			_height = DISPL_WIDTH;
 8002212:	4b19      	ldr	r3, [pc, #100]	@ (8002278 <Displ_Orientation+0xac>)
 8002214:	f44f 72a0 	mov.w	r2, #320	@ 0x140
 8002218:	801a      	strh	r2, [r3, #0]
			_width = DISPL_HEIGHT;
 800221a:	4b18      	ldr	r3, [pc, #96]	@ (800227c <Displ_Orientation+0xb0>)
 800221c:	f44f 72f0 	mov.w	r2, #480	@ 0x1e0
 8002220:	801a      	strh	r2, [r3, #0]
			break;
 8002222:	e017      	b.n	8002254 <Displ_Orientation+0x88>
		case Displ_Orientat_180:
			data[0]=ILI9XXX_MADCTL_180DEG;
 8002224:	4b13      	ldr	r3, [pc, #76]	@ (8002274 <Displ_Orientation+0xa8>)
 8002226:	2248      	movs	r2, #72	@ 0x48
 8002228:	701a      	strb	r2, [r3, #0]
			_height = DISPL_HEIGHT;
 800222a:	4b13      	ldr	r3, [pc, #76]	@ (8002278 <Displ_Orientation+0xac>)
 800222c:	f44f 72f0 	mov.w	r2, #480	@ 0x1e0
 8002230:	801a      	strh	r2, [r3, #0]
			_width = DISPL_WIDTH;
 8002232:	4b12      	ldr	r3, [pc, #72]	@ (800227c <Displ_Orientation+0xb0>)
 8002234:	f44f 72a0 	mov.w	r2, #320	@ 0x140
 8002238:	801a      	strh	r2, [r3, #0]
			break;
 800223a:	e00b      	b.n	8002254 <Displ_Orientation+0x88>
		case Displ_Orientat_270:
			data[0]=ILI9XXX_MADCTL_270DEG;
 800223c:	4b0d      	ldr	r3, [pc, #52]	@ (8002274 <Displ_Orientation+0xa8>)
 800223e:	2228      	movs	r2, #40	@ 0x28
 8002240:	701a      	strb	r2, [r3, #0]
			_height = DISPL_WIDTH;
 8002242:	4b0d      	ldr	r3, [pc, #52]	@ (8002278 <Displ_Orientation+0xac>)
 8002244:	f44f 72a0 	mov.w	r2, #320	@ 0x140
 8002248:	801a      	strh	r2, [r3, #0]
			_width = DISPL_HEIGHT;
 800224a:	4b0c      	ldr	r3, [pc, #48]	@ (800227c <Displ_Orientation+0xb0>)
 800224c:	f44f 72f0 	mov.w	r2, #480	@ 0x1e0
 8002250:	801a      	strh	r2, [r3, #0]
			break;
 8002252:	bf00      	nop
	}
	Displ_WriteCommand(ILI9XXX_MADCTL);
 8002254:	2036      	movs	r0, #54	@ 0x36
 8002256:	f7ff feeb 	bl	8002030 <Displ_WriteCommand>
	Displ_WriteData(data,1,0);
 800225a:	2200      	movs	r2, #0
 800225c:	2101      	movs	r1, #1
 800225e:	4805      	ldr	r0, [pc, #20]	@ (8002274 <Displ_Orientation+0xa8>)
 8002260:	f7ff fef5 	bl	800204e <Displ_WriteData>
	current_orientation = orientation;  //stores active orientation into a global variable for touch routines
 8002264:	4a06      	ldr	r2, [pc, #24]	@ (8002280 <Displ_Orientation+0xb4>)
 8002266:	79fb      	ldrb	r3, [r7, #7]
 8002268:	7013      	strb	r3, [r2, #0]
}
 800226a:	bf00      	nop
 800226c:	3708      	adds	r7, #8
 800226e:	46bd      	mov	sp, r7
 8002270:	bd80      	pop	{r7, pc}
 8002272:	bf00      	nop
 8002274:	200005f4 	.word	0x200005f4
 8002278:	200005ec 	.word	0x200005ec
 800227c:	200005ea 	.word	0x200005ea
 8002280:	200005e8 	.word	0x200005e8

08002284 <HAL_SPI_ErrorCallback>:




void HAL_SPI_ErrorCallback(SPI_HandleTypeDef *hspi){
 8002284:	b480      	push	{r7}
 8002286:	b083      	sub	sp, #12
 8002288:	af00      	add	r7, sp, #0
 800228a:	6078      	str	r0, [r7, #4]
	if (hspi->Instance==DISPL_SPI) {
 800228c:	687b      	ldr	r3, [r7, #4]
 800228e:	681b      	ldr	r3, [r3, #0]
 8002290:	4a05      	ldr	r2, [pc, #20]	@ (80022a8 <HAL_SPI_ErrorCallback+0x24>)
 8002292:	4293      	cmp	r3, r2
 8002294:	d102      	bne.n	800229c <HAL_SPI_ErrorCallback+0x18>
		Displ_SpiAvailable=1;
 8002296:	4b05      	ldr	r3, [pc, #20]	@ (80022ac <HAL_SPI_ErrorCallback+0x28>)
 8002298:	2201      	movs	r2, #1
 800229a:	701a      	strb	r2, [r3, #0]
	}
}
 800229c:	bf00      	nop
 800229e:	370c      	adds	r7, #12
 80022a0:	46bd      	mov	sp, r7
 80022a2:	f85d 7b04 	ldr.w	r7, [sp], #4
 80022a6:	4770      	bx	lr
 80022a8:	40003800 	.word	0x40003800
 80022ac:	2000000c 	.word	0x2000000c

080022b0 <HAL_SPI_TxCpltCallback>:





void HAL_SPI_TxCpltCallback(SPI_HandleTypeDef *hspi) {
 80022b0:	b580      	push	{r7, lr}
 80022b2:	b082      	sub	sp, #8
 80022b4:	af00      	add	r7, sp, #0
 80022b6:	6078      	str	r0, [r7, #4]
	if (hspi->Instance==DISPL_SPI) {
 80022b8:	687b      	ldr	r3, [r7, #4]
 80022ba:	681b      	ldr	r3, [r3, #0]
 80022bc:	4a05      	ldr	r2, [pc, #20]	@ (80022d4 <HAL_SPI_TxCpltCallback+0x24>)
 80022be:	4293      	cmp	r3, r2
 80022c0:	d104      	bne.n	80022cc <HAL_SPI_TxCpltCallback+0x1c>
		Displ_SpiAvailable=1;
 80022c2:	4b05      	ldr	r3, [pc, #20]	@ (80022d8 <HAL_SPI_TxCpltCallback+0x28>)
 80022c4:	2201      	movs	r2, #1
 80022c6:	701a      	strb	r2, [r3, #0]

	#ifdef DISPLAY_USING_TOUCHGFX
		DisplayDriver_TransferCompleteCallback();
 80022c8:	f00a fc12 	bl	800caf0 <DisplayDriver_TransferCompleteCallback>
	#endif

	}
}
 80022cc:	bf00      	nop
 80022ce:	3708      	adds	r7, #8
 80022d0:	46bd      	mov	sp, r7
 80022d2:	bd80      	pop	{r7, pc}
 80022d4:	40003800 	.word	0x40003800
 80022d8:	2000000c 	.word	0x2000000c

080022dc <Displ_BackLight>:
 *				'0'		set the display level to 0 (off)
 *				'I'		'Initialize'  IT MUST BE in dimming mode
 *              'Q'		do nothing, just return current level
 * @return		current backlight level
 **************************************/
uint32_t  Displ_BackLight(uint8_t cmd) {
 80022dc:	b580      	push	{r7, lr}
 80022de:	b082      	sub	sp, #8
 80022e0:	af00      	add	r7, sp, #0
 80022e2:	4603      	mov	r3, r0
 80022e4:	71fb      	strb	r3, [r7, #7]

#ifdef DISPLAY_DIMMING_MODE
	static uint16_t memCCR1=0;  			//it stores CCR1 value while in stand-by
#endif

	switch (cmd) {
 80022e6:	79fb      	ldrb	r3, [r7, #7]
 80022e8:	2b51      	cmp	r3, #81	@ 0x51
 80022ea:	d00a      	beq.n	8002302 <Displ_BackLight+0x26>
 80022ec:	2b51      	cmp	r3, #81	@ 0x51
 80022ee:	dc16      	bgt.n	800231e <Displ_BackLight+0x42>
 80022f0:	2b46      	cmp	r3, #70	@ 0x46
 80022f2:	d008      	beq.n	8002306 <Displ_BackLight+0x2a>
 80022f4:	2b46      	cmp	r3, #70	@ 0x46
 80022f6:	dc12      	bgt.n	800231e <Displ_BackLight+0x42>
 80022f8:	2b30      	cmp	r3, #48	@ 0x30
 80022fa:	d00a      	beq.n	8002312 <Displ_BackLight+0x36>
 80022fc:	2b31      	cmp	r3, #49	@ 0x31
 80022fe:	d002      	beq.n	8002306 <Displ_BackLight+0x2a>
	  	HAL_TIM_PWM_Start(&BKLIT_T, BKLIT_CHANNEL);
		BKLIT_TIMER->BKLIT_CCR=BKLIT_INIT_LEVEL;
		break;
#endif
	default:
		break;
 8002300:	e00d      	b.n	800231e <Displ_BackLight+0x42>
		__NOP();
 8002302:	bf00      	nop
		break;
 8002304:	e00c      	b.n	8002320 <Displ_BackLight+0x44>
		HAL_GPIO_WritePin(DISPL_LED_GPIO_Port, DISPL_LED_Pin, GPIO_PIN_SET);
 8002306:	2201      	movs	r2, #1
 8002308:	2140      	movs	r1, #64	@ 0x40
 800230a:	480a      	ldr	r0, [pc, #40]	@ (8002334 <Displ_BackLight+0x58>)
 800230c:	f001 ff62 	bl	80041d4 <HAL_GPIO_WritePin>
		break;
 8002310:	e006      	b.n	8002320 <Displ_BackLight+0x44>
		HAL_GPIO_WritePin(DISPL_LED_GPIO_Port, DISPL_LED_Pin, GPIO_PIN_RESET);
 8002312:	2200      	movs	r2, #0
 8002314:	2140      	movs	r1, #64	@ 0x40
 8002316:	4807      	ldr	r0, [pc, #28]	@ (8002334 <Displ_BackLight+0x58>)
 8002318:	f001 ff5c 	bl	80041d4 <HAL_GPIO_WritePin>
		break;
 800231c:	e000      	b.n	8002320 <Displ_BackLight+0x44>
		break;
 800231e:	bf00      	nop
	}
#ifndef DISPLAY_DIMMING_MODE
	return HAL_GPIO_ReadPin(DISPL_LED_GPIO_Port, DISPL_LED_Pin);
 8002320:	2140      	movs	r1, #64	@ 0x40
 8002322:	4804      	ldr	r0, [pc, #16]	@ (8002334 <Displ_BackLight+0x58>)
 8002324:	f001 ff3e 	bl	80041a4 <HAL_GPIO_ReadPin>
 8002328:	4603      	mov	r3, r0
#else
	return (BKLIT_TIMER->BKLIT_CCR);
#endif
}
 800232a:	4618      	mov	r0, r3
 800232c:	3708      	adds	r7, #8
 800232e:	46bd      	mov	sp, r7
 8002330:	bd80      	pop	{r7, pc}
 8002332:	bf00      	nop
 8002334:	40020000 	.word	0x40020000

08002338 <touchgfxDisplayDriverTransmitActive>:
 * @brief	TouchGFX integration: returns status of
 * 			communication to the display
 * @return	1 = there is a transmission running
 * 			0 = no transmission
 *********************************************************/
int touchgfxDisplayDriverTransmitActive(){
 8002338:	b480      	push	{r7}
 800233a:	af00      	add	r7, sp, #0
	// using the flag indicating SPI port availability
	// already used to drive communication via DMA
	return (!Displ_SpiAvailable);
 800233c:	4b06      	ldr	r3, [pc, #24]	@ (8002358 <touchgfxDisplayDriverTransmitActive+0x20>)
 800233e:	781b      	ldrb	r3, [r3, #0]
 8002340:	b2db      	uxtb	r3, r3
 8002342:	2b00      	cmp	r3, #0
 8002344:	bf0c      	ite	eq
 8002346:	2301      	moveq	r3, #1
 8002348:	2300      	movne	r3, #0
 800234a:	b2db      	uxtb	r3, r3
}
 800234c:	4618      	mov	r0, r3
 800234e:	46bd      	mov	sp, r7
 8002350:	f85d 7b04 	ldr.w	r7, [sp], #4
 8002354:	4770      	bx	lr
 8002356:	bf00      	nop
 8002358:	2000000c 	.word	0x2000000c

0800235c <touchgfxDisplayDriverTransmitBlock>:

/*********************************************************
 * @brief	TouchGFX integration: write to display the
 * 			block indicated by parameters
 *********************************************************/
void touchgfxDisplayDriverTransmitBlock(const uint8_t* pixels, uint16_t x, uint16_t y, uint16_t w, uint16_t h){
 800235c:	b590      	push	{r4, r7, lr}
 800235e:	b085      	sub	sp, #20
 8002360:	af00      	add	r7, sp, #0
 8002362:	60f8      	str	r0, [r7, #12]
 8002364:	4608      	mov	r0, r1
 8002366:	4611      	mov	r1, r2
 8002368:	461a      	mov	r2, r3
 800236a:	4603      	mov	r3, r0
 800236c:	817b      	strh	r3, [r7, #10]
 800236e:	460b      	mov	r3, r1
 8002370:	813b      	strh	r3, [r7, #8]
 8002372:	4613      	mov	r3, r2
 8002374:	80fb      	strh	r3, [r7, #6]
	//START WRITING TO DISPLAY
		Displ_SetAddressWindow(x, y, x+w-1, y+h-1);
 8002376:	897a      	ldrh	r2, [r7, #10]
 8002378:	88fb      	ldrh	r3, [r7, #6]
 800237a:	4413      	add	r3, r2
 800237c:	b29b      	uxth	r3, r3
 800237e:	3b01      	subs	r3, #1
 8002380:	b29c      	uxth	r4, r3
 8002382:	893a      	ldrh	r2, [r7, #8]
 8002384:	8c3b      	ldrh	r3, [r7, #32]
 8002386:	4413      	add	r3, r2
 8002388:	b29b      	uxth	r3, r3
 800238a:	3b01      	subs	r3, #1
 800238c:	b29b      	uxth	r3, r3
 800238e:	8939      	ldrh	r1, [r7, #8]
 8002390:	8978      	ldrh	r0, [r7, #10]
 8002392:	4622      	mov	r2, r4
 8002394:	f7ff feb2 	bl	80020fc <Displ_SetAddressWindow>
		Displ_WriteData((uint8_t* )pixels,((w*h)<<1),1);
 8002398:	88fb      	ldrh	r3, [r7, #6]
 800239a:	8c3a      	ldrh	r2, [r7, #32]
 800239c:	fb02 f303 	mul.w	r3, r2, r3
 80023a0:	005b      	lsls	r3, r3, #1
 80023a2:	2201      	movs	r2, #1
 80023a4:	4619      	mov	r1, r3
 80023a6:	68f8      	ldr	r0, [r7, #12]
 80023a8:	f7ff fe51 	bl	800204e <Displ_WriteData>
}
 80023ac:	bf00      	nop
 80023ae:	3714      	adds	r7, #20
 80023b0:	46bd      	mov	sp, r7
 80023b2:	bd90      	pop	{r4, r7, pc}

080023b4 <Touch_HandlePenDownInterrupt>:
volatile uint8_t Touch_PenDown=0;						// set to 1 by pendown interrupt callback, reset to 0 by sw
volatile uint8_t Touch_Int_Enabled=1;					// while reading touch sensor touch interrupt handling is disabled through this flag



void Touch_HandlePenDownInterrupt (){
 80023b4:	b480      	push	{r7}
 80023b6:	af00      	add	r7, sp, #0
	if (Touch_Int_Enabled) {
 80023b8:	4b06      	ldr	r3, [pc, #24]	@ (80023d4 <Touch_HandlePenDownInterrupt+0x20>)
 80023ba:	781b      	ldrb	r3, [r3, #0]
 80023bc:	b2db      	uxtb	r3, r3
 80023be:	2b00      	cmp	r3, #0
 80023c0:	d002      	beq.n	80023c8 <Touch_HandlePenDownInterrupt+0x14>
		Touch_PenDown=1;
 80023c2:	4b05      	ldr	r3, [pc, #20]	@ (80023d8 <Touch_HandlePenDownInterrupt+0x24>)
 80023c4:	2201      	movs	r2, #1
 80023c6:	701a      	strb	r2, [r3, #0]
	}
}
 80023c8:	bf00      	nop
 80023ca:	46bd      	mov	sp, r7
 80023cc:	f85d 7b04 	ldr.w	r7, [sp], #4
 80023d0:	4770      	bx	lr
 80023d2:	bf00      	nop
 80023d4:	2000000d 	.word	0x2000000d
 80023d8:	200005f5 	.word	0x200005f5

080023dc <HAL_GPIO_EXTI_Callback>:



void HAL_GPIO_EXTI_Callback(uint16_t GPIO_Pin){
 80023dc:	b580      	push	{r7, lr}
 80023de:	b082      	sub	sp, #8
 80023e0:	af00      	add	r7, sp, #0
 80023e2:	4603      	mov	r3, r0
 80023e4:	80fb      	strh	r3, [r7, #6]
	if (GPIO_Pin==TOUCH_INT_Pin){
 80023e6:	88fb      	ldrh	r3, [r7, #6]
 80023e8:	f5b3 7f80 	cmp.w	r3, #256	@ 0x100
 80023ec:	d101      	bne.n	80023f2 <HAL_GPIO_EXTI_Callback+0x16>
		Touch_HandlePenDownInterrupt();
 80023ee:	f7ff ffe1 	bl	80023b4 <Touch_HandlePenDownInterrupt>
	}
}
 80023f2:	bf00      	nop
 80023f4:	3708      	adds	r7, #8
 80023f6:	46bd      	mov	sp, r7
 80023f8:	bd80      	pop	{r7, pc}
	...

080023fc <Touch_Select>:

/******************************************
 * @brief	enable touch, disabling display
 * 			set SPI baudrate as needed
 ******************************************/
void Touch_Select(void) {
 80023fc:	b580      	push	{r7, lr}
 80023fe:	af00      	add	r7, sp, #0
	if (TOUCH_SPI==DISPL_SPI){														// if touch and display share the same SPI port
		if (!HAL_GPIO_ReadPin(DISPL_CS_GPIO_Port, DISPL_CS_Pin)) {					// if display selected
 8002400:	2180      	movs	r1, #128	@ 0x80
 8002402:	4813      	ldr	r0, [pc, #76]	@ (8002450 <Touch_Select+0x54>)
 8002404:	f001 fece 	bl	80041a4 <HAL_GPIO_ReadPin>
 8002408:	4603      	mov	r3, r0
 800240a:	2b00      	cmp	r3, #0
 800240c:	d10a      	bne.n	8002424 <Touch_Select+0x28>
			while (!Displ_SpiAvailable) {};  										// waiting for completing display communication. Flag is set to 1 by transmission-complete interrupt callback
 800240e:	bf00      	nop
 8002410:	4b10      	ldr	r3, [pc, #64]	@ (8002454 <Touch_Select+0x58>)
 8002412:	781b      	ldrb	r3, [r3, #0]
 8002414:	b2db      	uxtb	r3, r3
 8002416:	2b00      	cmp	r3, #0
 8002418:	d0fa      	beq.n	8002410 <Touch_Select+0x14>
			HAL_GPIO_WritePin(DISPL_CS_GPIO_Port, DISPL_CS_Pin, GPIO_PIN_SET); 		// unselect display
 800241a:	2201      	movs	r2, #1
 800241c:	2180      	movs	r1, #128	@ 0x80
 800241e:	480c      	ldr	r0, [pc, #48]	@ (8002450 <Touch_Select+0x54>)
 8002420:	f001 fed8 	bl	80041d4 <HAL_GPIO_WritePin>
		}
		SET_TOUCH_SPI_BAUDRATE;				   										//change SPI port speed as per display needs
 8002424:	4b0c      	ldr	r3, [pc, #48]	@ (8002458 <Touch_Select+0x5c>)
 8002426:	681a      	ldr	r2, [r3, #0]
 8002428:	490b      	ldr	r1, [pc, #44]	@ (8002458 <Touch_Select+0x5c>)
 800242a:	f64f 73c7 	movw	r3, #65479	@ 0xffc7
 800242e:	4013      	ands	r3, r2
 8002430:	600b      	str	r3, [r1, #0]
 8002432:	4b09      	ldr	r3, [pc, #36]	@ (8002458 <Touch_Select+0x5c>)
 8002434:	681b      	ldr	r3, [r3, #0]
 8002436:	4a08      	ldr	r2, [pc, #32]	@ (8002458 <Touch_Select+0x5c>)
 8002438:	f043 0338 	orr.w	r3, r3, #56	@ 0x38
 800243c:	6013      	str	r3, [r2, #0]
		HAL_GPIO_WritePin(TOUCH_CS_GPIO_Port, TOUCH_CS_Pin, GPIO_PIN_RESET);
 800243e:	2200      	movs	r2, #0
 8002440:	f44f 7100 	mov.w	r1, #512	@ 0x200
 8002444:	4805      	ldr	r0, [pc, #20]	@ (800245c <Touch_Select+0x60>)
 8002446:	f001 fec5 	bl	80041d4 <HAL_GPIO_WritePin>
	}
}
 800244a:	bf00      	nop
 800244c:	bd80      	pop	{r7, pc}
 800244e:	bf00      	nop
 8002450:	40020800 	.word	0x40020800
 8002454:	2000000c 	.word	0x2000000c
 8002458:	40003800 	.word	0x40003800
 800245c:	40020000 	.word	0x40020000

08002460 <Touch_UnSelect>:


/******************************************
 * @brief	disable touch
 ******************************************/
void Touch_UnSelect(void) {
 8002460:	b580      	push	{r7, lr}
 8002462:	af00      	add	r7, sp, #0
	if (TOUCH_SPI==DISPL_SPI){														// if touch and display share the same SPI port
		HAL_GPIO_WritePin(TOUCH_CS_GPIO_Port, TOUCH_CS_Pin, GPIO_PIN_SET);			// unselect touch
 8002464:	2201      	movs	r2, #1
 8002466:	f44f 7100 	mov.w	r1, #512	@ 0x200
 800246a:	4802      	ldr	r0, [pc, #8]	@ (8002474 <Touch_UnSelect+0x14>)
 800246c:	f001 feb2 	bl	80041d4 <HAL_GPIO_WritePin>
	}
}
 8002470:	bf00      	nop
 8002472:	bd80      	pop	{r7, pc}
 8002474:	40020000 	.word	0x40020000

08002478 <Touch_PollAxis>:
 * @params	axis	use only one of the three options X_AXIS, Y_AXIS or Z_AXIS
 * @return			the level measured on the "axis" axis
 * 					PLEASE NOTE this function should be only for internal usage
 * 								Use Touch_GetXYTouch() instead
 *******************************************************************************/
uint16_t Touch_PollAxis(uint8_t axis) {
 8002478:	b580      	push	{r7, lr}
 800247a:	b084      	sub	sp, #16
 800247c:	af00      	add	r7, sp, #0
 800247e:	4603      	mov	r3, r0
 8002480:	71fb      	strb	r3, [r7, #7]
	uint8_t poll[2] = {0,0};
 8002482:	2300      	movs	r3, #0
 8002484:	813b      	strh	r3, [r7, #8]
	uint32_t poll16;
	
	if (TOUCH_SPI==DISPL_SPI){				// if touch and display share the same SPI port
		Touch_Select();						// enable CS on touch device
 8002486:	f7ff ffb9 	bl	80023fc <Touch_Select>
	}

	Touch_Int_Enabled=0;	//disable interrupt handling: sensor reading triggers interrupt
 800248a:	4b17      	ldr	r3, [pc, #92]	@ (80024e8 <Touch_PollAxis+0x70>)
 800248c:	2200      	movs	r2, #0
 800248e:	701a      	strb	r2, [r3, #0]
	// disable interrupt while enquiring the touch sensor because it triggers the interrupt pin
	HAL_NVIC_DisableIRQ(TOUCH_INT_EXTI_IRQn);
 8002490:	2017      	movs	r0, #23
 8002492:	f001 f91c 	bl	80036ce <HAL_NVIC_DisableIRQ>

	HAL_SPI_Transmit(&TOUCH_SPI_PORT, &axis, 1, 10);
 8002496:	1df9      	adds	r1, r7, #7
 8002498:	230a      	movs	r3, #10
 800249a:	2201      	movs	r2, #1
 800249c:	4813      	ldr	r0, [pc, #76]	@ (80024ec <Touch_PollAxis+0x74>)
 800249e:	f003 feba 	bl	8006216 <HAL_SPI_Transmit>
	if (HAL_SPI_Receive(&TOUCH_SPI_PORT, poll, 2, 10) == HAL_OK) {
 80024a2:	f107 0108 	add.w	r1, r7, #8
 80024a6:	230a      	movs	r3, #10
 80024a8:	2202      	movs	r2, #2
 80024aa:	4810      	ldr	r0, [pc, #64]	@ (80024ec <Touch_PollAxis+0x74>)
 80024ac:	f003 fff7 	bl	800649e <HAL_SPI_Receive>
 80024b0:	4603      	mov	r3, r0
 80024b2:	2b00      	cmp	r3, #0
 80024b4:	d105      	bne.n	80024c2 <Touch_PollAxis+0x4a>
		poll16 = (poll[0]<<8) + poll[1];
 80024b6:	7a3b      	ldrb	r3, [r7, #8]
 80024b8:	021b      	lsls	r3, r3, #8
 80024ba:	7a7a      	ldrb	r2, [r7, #9]
 80024bc:	4413      	add	r3, r2
 80024be:	60fb      	str	r3, [r7, #12]
 80024c0:	e001      	b.n	80024c6 <Touch_PollAxis+0x4e>
	}
	else {
		poll16 = 0;
 80024c2:	2300      	movs	r3, #0
 80024c4:	60fb      	str	r3, [r7, #12]
	}

//enable back interrupt after reading the sensor
	HAL_NVIC_ClearPendingIRQ(TOUCH_INT_EXTI_IRQn);
 80024c6:	2017      	movs	r0, #23
 80024c8:	f001 f91b 	bl	8003702 <HAL_NVIC_ClearPendingIRQ>
	HAL_NVIC_EnableIRQ(TOUCH_INT_EXTI_IRQn);
 80024cc:	2017      	movs	r0, #23
 80024ce:	f001 f8f0 	bl	80036b2 <HAL_NVIC_EnableIRQ>

	Touch_Int_Enabled=1;
 80024d2:	4b05      	ldr	r3, [pc, #20]	@ (80024e8 <Touch_PollAxis+0x70>)
 80024d4:	2201      	movs	r2, #1
 80024d6:	701a      	strb	r2, [r3, #0]

	if (TOUCH_SPI==DISPL_SPI){	// if touch and display share the same SPI port
		Touch_UnSelect();
 80024d8:	f7ff ffc2 	bl	8002460 <Touch_UnSelect>
	}

	return poll16;
 80024dc:	68fb      	ldr	r3, [r7, #12]
 80024de:	b29b      	uxth	r3, r3
}
 80024e0:	4618      	mov	r0, r3
 80024e2:	3710      	adds	r7, #16
 80024e4:	46bd      	mov	sp, r7
 80024e6:	bd80      	pop	{r7, pc}
 80024e8:	2000000d 	.word	0x2000000d
 80024ec:	20000440 	.word	0x20000440

080024f0 <Touch_GetXYtouch>:
 * @brief			polls touch screen and returning its XY screen position
 * 					that's regardless touch recording flag (interrupt received)
 * @return	x,y		in case isTouch=1 contain touch coordinates
 * 			isTouch is 1 if detected a touch, otherwise 0;
 *********************************************************************************/
void Touch_GetXYtouch(uint16_t *x, uint16_t *y, uint8_t *isTouch){
 80024f0:	b580      	push	{r7, lr}
 80024f2:	b08a      	sub	sp, #40	@ 0x28
 80024f4:	af00      	add	r7, sp, #0
 80024f6:	60f8      	str	r0, [r7, #12]
 80024f8:	60b9      	str	r1, [r7, #8]
 80024fa:	607a      	str	r2, [r7, #4]

const uint8_t pollingLevel=4;
 80024fc:	2304      	movs	r3, #4
 80024fe:	77fb      	strb	r3, [r7, #31]


// get the average value (over "1<<pollingLevel" attempts of X, Y and Z axes readings)

	// reading Z
	touch=0;
 8002500:	2300      	movs	r3, #0
 8002502:	623b      	str	r3, [r7, #32]
	for (k=0;k<(1<<pollingLevel);k++)
 8002504:	2300      	movs	r3, #0
 8002506:	f887 3027 	strb.w	r3, [r7, #39]	@ 0x27
 800250a:	e00c      	b.n	8002526 <Touch_GetXYtouch+0x36>
		touch += Touch_PollAxis(Z_AXIS);
 800250c:	20b0      	movs	r0, #176	@ 0xb0
 800250e:	f7ff ffb3 	bl	8002478 <Touch_PollAxis>
 8002512:	4603      	mov	r3, r0
 8002514:	461a      	mov	r2, r3
 8002516:	6a3b      	ldr	r3, [r7, #32]
 8002518:	4413      	add	r3, r2
 800251a:	623b      	str	r3, [r7, #32]
	for (k=0;k<(1<<pollingLevel);k++)
 800251c:	f897 3027 	ldrb.w	r3, [r7, #39]	@ 0x27
 8002520:	3301      	adds	r3, #1
 8002522:	f887 3027 	strb.w	r3, [r7, #39]	@ 0x27
 8002526:	f897 2027 	ldrb.w	r2, [r7, #39]	@ 0x27
 800252a:	7ffb      	ldrb	r3, [r7, #31]
 800252c:	2101      	movs	r1, #1
 800252e:	fa01 f303 	lsl.w	r3, r1, r3
 8002532:	429a      	cmp	r2, r3
 8002534:	dbea      	blt.n	800250c <Touch_GetXYtouch+0x1c>
	touch >>= pollingLevel;  //get the average value
 8002536:	7ffb      	ldrb	r3, [r7, #31]
 8002538:	6a3a      	ldr	r2, [r7, #32]
 800253a:	fa22 f303 	lsr.w	r3, r2, r3
 800253e:	623b      	str	r3, [r7, #32]
	if (touch<=Z_THRESHOLD) {
 8002540:	6a3b      	ldr	r3, [r7, #32]
 8002542:	f5b3 6fa0 	cmp.w	r3, #1280	@ 0x500
 8002546:	d806      	bhi.n	8002556 <Touch_GetXYtouch+0x66>
		*isTouch=0;
 8002548:	687b      	ldr	r3, [r7, #4]
 800254a:	2200      	movs	r2, #0
 800254c:	701a      	strb	r2, [r3, #0]
		HAL_NVIC_ClearPendingIRQ(TOUCH_INT_EXTI_IRQn);
 800254e:	2017      	movs	r0, #23
 8002550:	f001 f8d7 	bl	8003702 <HAL_NVIC_ClearPendingIRQ>
		return;	// no touch: return 0
 8002554:	e0b2      	b.n	80026bc <Touch_GetXYtouch+0x1cc>
	}

	// reading X
	touch=0;
 8002556:	2300      	movs	r3, #0
 8002558:	623b      	str	r3, [r7, #32]
	for (k=0;k<(1<<pollingLevel);k++)
 800255a:	2300      	movs	r3, #0
 800255c:	f887 3027 	strb.w	r3, [r7, #39]	@ 0x27
 8002560:	e00c      	b.n	800257c <Touch_GetXYtouch+0x8c>
		touch += Touch_PollAxis(X_AXIS);
 8002562:	20d0      	movs	r0, #208	@ 0xd0
 8002564:	f7ff ff88 	bl	8002478 <Touch_PollAxis>
 8002568:	4603      	mov	r3, r0
 800256a:	461a      	mov	r2, r3
 800256c:	6a3b      	ldr	r3, [r7, #32]
 800256e:	4413      	add	r3, r2
 8002570:	623b      	str	r3, [r7, #32]
	for (k=0;k<(1<<pollingLevel);k++)
 8002572:	f897 3027 	ldrb.w	r3, [r7, #39]	@ 0x27
 8002576:	3301      	adds	r3, #1
 8002578:	f887 3027 	strb.w	r3, [r7, #39]	@ 0x27
 800257c:	f897 2027 	ldrb.w	r2, [r7, #39]	@ 0x27
 8002580:	7ffb      	ldrb	r3, [r7, #31]
 8002582:	2101      	movs	r1, #1
 8002584:	fa01 f303 	lsl.w	r3, r1, r3
 8002588:	429a      	cmp	r2, r3
 800258a:	dbea      	blt.n	8002562 <Touch_GetXYtouch+0x72>
	touch >>= pollingLevel;  //get the average value
 800258c:	7ffb      	ldrb	r3, [r7, #31]
 800258e:	6a3a      	ldr	r2, [r7, #32]
 8002590:	fa22 f303 	lsr.w	r3, r2, r3
 8002594:	623b      	str	r3, [r7, #32]
	if (touch<=X_THRESHOLD) {
 8002596:	6a3b      	ldr	r3, [r7, #32]
 8002598:	f5b3 6fa0 	cmp.w	r3, #1280	@ 0x500
 800259c:	d806      	bhi.n	80025ac <Touch_GetXYtouch+0xbc>
		*isTouch=0;
 800259e:	687b      	ldr	r3, [r7, #4]
 80025a0:	2200      	movs	r2, #0
 80025a2:	701a      	strb	r2, [r3, #0]
		HAL_NVIC_ClearPendingIRQ(TOUCH_INT_EXTI_IRQn);
 80025a4:	2017      	movs	r0, #23
 80025a6:	f001 f8ac 	bl	8003702 <HAL_NVIC_ClearPendingIRQ>
		return;	// no touch: return 0
 80025aa:	e087      	b.n	80026bc <Touch_GetXYtouch+0x1cc>
	}
	touchx=(AX*touch+BX);
 80025ac:	6a3b      	ldr	r3, [r7, #32]
 80025ae:	ee07 3a90 	vmov	s15, r3
 80025b2:	eef8 7a67 	vcvt.f32.u32	s15, s15
 80025b6:	ed9f 7a43 	vldr	s14, [pc, #268]	@ 80026c4 <Touch_GetXYtouch+0x1d4>
 80025ba:	ee67 7a87 	vmul.f32	s15, s15, s14
 80025be:	ed9f 7a42 	vldr	s14, [pc, #264]	@ 80026c8 <Touch_GetXYtouch+0x1d8>
 80025c2:	ee77 7a87 	vadd.f32	s15, s15, s14
 80025c6:	eefc 7ae7 	vcvt.u32.f32	s15, s15
 80025ca:	ee17 3a90 	vmov	r3, s15
 80025ce:	61bb      	str	r3, [r7, #24]

	// reading Y - there is no a threshold for Y
	touch=0;
 80025d0:	2300      	movs	r3, #0
 80025d2:	623b      	str	r3, [r7, #32]
	for (k=0;k<(1<<pollingLevel);k++)
 80025d4:	2300      	movs	r3, #0
 80025d6:	f887 3027 	strb.w	r3, [r7, #39]	@ 0x27
 80025da:	e00c      	b.n	80025f6 <Touch_GetXYtouch+0x106>
		touch += Touch_PollAxis(Y_AXIS);
 80025dc:	2090      	movs	r0, #144	@ 0x90
 80025de:	f7ff ff4b 	bl	8002478 <Touch_PollAxis>
 80025e2:	4603      	mov	r3, r0
 80025e4:	461a      	mov	r2, r3
 80025e6:	6a3b      	ldr	r3, [r7, #32]
 80025e8:	4413      	add	r3, r2
 80025ea:	623b      	str	r3, [r7, #32]
	for (k=0;k<(1<<pollingLevel);k++)
 80025ec:	f897 3027 	ldrb.w	r3, [r7, #39]	@ 0x27
 80025f0:	3301      	adds	r3, #1
 80025f2:	f887 3027 	strb.w	r3, [r7, #39]	@ 0x27
 80025f6:	f897 2027 	ldrb.w	r2, [r7, #39]	@ 0x27
 80025fa:	7ffb      	ldrb	r3, [r7, #31]
 80025fc:	2101      	movs	r1, #1
 80025fe:	fa01 f303 	lsl.w	r3, r1, r3
 8002602:	429a      	cmp	r2, r3
 8002604:	dbea      	blt.n	80025dc <Touch_GetXYtouch+0xec>
	touch >>= pollingLevel; //get the average value
 8002606:	7ffb      	ldrb	r3, [r7, #31]
 8002608:	6a3a      	ldr	r2, [r7, #32]
 800260a:	fa22 f303 	lsr.w	r3, r2, r3
 800260e:	623b      	str	r3, [r7, #32]

	touchy=(AY*touch+BY);
 8002610:	6a3b      	ldr	r3, [r7, #32]
 8002612:	ee07 3a90 	vmov	s15, r3
 8002616:	eef8 7a67 	vcvt.f32.u32	s15, s15
 800261a:	ed9f 7a2c 	vldr	s14, [pc, #176]	@ 80026cc <Touch_GetXYtouch+0x1dc>
 800261e:	ee67 7a87 	vmul.f32	s15, s15, s14
 8002622:	ed9f 7a2b 	vldr	s14, [pc, #172]	@ 80026d0 <Touch_GetXYtouch+0x1e0>
 8002626:	ee77 7ac7 	vsub.f32	s15, s15, s14
 800262a:	eefc 7ae7 	vcvt.u32.f32	s15, s15
 800262e:	ee17 3a90 	vmov	r3, s15
 8002632:	617b      	str	r3, [r7, #20]


//having X and Y axis average values
// calculating coordinates as per screen orientation
	switch (current_orientation)
 8002634:	4b27      	ldr	r3, [pc, #156]	@ (80026d4 <Touch_GetXYtouch+0x1e4>)
 8002636:	781b      	ldrb	r3, [r3, #0]
 8002638:	2b03      	cmp	r3, #3
 800263a:	d83b      	bhi.n	80026b4 <Touch_GetXYtouch+0x1c4>
 800263c:	a201      	add	r2, pc, #4	@ (adr r2, 8002644 <Touch_GetXYtouch+0x154>)
 800263e:	f852 f023 	ldr.w	pc, [r2, r3, lsl #2]
 8002642:	bf00      	nop
 8002644:	08002655 	.word	0x08002655
 8002648:	08002667 	.word	0x08002667
 800264c:	0800267f 	.word	0x0800267f
 8002650:	0800269d 	.word	0x0800269d
	{
	case TOUCH0:
		*x=touchx;
 8002654:	69bb      	ldr	r3, [r7, #24]
 8002656:	b29a      	uxth	r2, r3
 8002658:	68fb      	ldr	r3, [r7, #12]
 800265a:	801a      	strh	r2, [r3, #0]
		*y=touchy;
 800265c:	697b      	ldr	r3, [r7, #20]
 800265e:	b29a      	uxth	r2, r3
 8002660:	68bb      	ldr	r3, [r7, #8]
 8002662:	801a      	strh	r2, [r3, #0]
		break;
 8002664:	e026      	b.n	80026b4 <Touch_GetXYtouch+0x1c4>
	case TOUCH90:
		*x=touchy;
 8002666:	697b      	ldr	r3, [r7, #20]
 8002668:	b29a      	uxth	r2, r3
 800266a:	68fb      	ldr	r3, [r7, #12]
 800266c:	801a      	strh	r2, [r3, #0]
		*y=(TOUCH_0_WIDTH-touchx);
 800266e:	69bb      	ldr	r3, [r7, #24]
 8002670:	b29b      	uxth	r3, r3
 8002672:	f5c3 73a0 	rsb	r3, r3, #320	@ 0x140
 8002676:	b29a      	uxth	r2, r3
 8002678:	68bb      	ldr	r3, [r7, #8]
 800267a:	801a      	strh	r2, [r3, #0]
		break;
 800267c:	e01a      	b.n	80026b4 <Touch_GetXYtouch+0x1c4>
	case TOUCH180:
		*x=(TOUCH_0_WIDTH-touchx);
 800267e:	69bb      	ldr	r3, [r7, #24]
 8002680:	b29b      	uxth	r3, r3
 8002682:	f5c3 73a0 	rsb	r3, r3, #320	@ 0x140
 8002686:	b29a      	uxth	r2, r3
 8002688:	68fb      	ldr	r3, [r7, #12]
 800268a:	801a      	strh	r2, [r3, #0]
		*y=(TOUCH_0_HEIGHT - touchy);
 800268c:	697b      	ldr	r3, [r7, #20]
 800268e:	b29b      	uxth	r3, r3
 8002690:	f5c3 73f0 	rsb	r3, r3, #480	@ 0x1e0
 8002694:	b29a      	uxth	r2, r3
 8002696:	68bb      	ldr	r3, [r7, #8]
 8002698:	801a      	strh	r2, [r3, #0]
		break;
 800269a:	e00b      	b.n	80026b4 <Touch_GetXYtouch+0x1c4>
	case TOUCH270:
		*x=(TOUCH_0_HEIGHT- touchy);
 800269c:	697b      	ldr	r3, [r7, #20]
 800269e:	b29b      	uxth	r3, r3
 80026a0:	f5c3 73f0 	rsb	r3, r3, #480	@ 0x1e0
 80026a4:	b29a      	uxth	r2, r3
 80026a6:	68fb      	ldr	r3, [r7, #12]
 80026a8:	801a      	strh	r2, [r3, #0]
		*y=touchx;
 80026aa:	69bb      	ldr	r3, [r7, #24]
 80026ac:	b29a      	uxth	r2, r3
 80026ae:	68bb      	ldr	r3, [r7, #8]
 80026b0:	801a      	strh	r2, [r3, #0]
		break;
 80026b2:	bf00      	nop
	}

// set flag indicating there was a touch
	*isTouch=1;
 80026b4:	687b      	ldr	r3, [r7, #4]
 80026b6:	2201      	movs	r2, #1
 80026b8:	701a      	strb	r2, [r3, #0]
	return;
 80026ba:	bf00      	nop
}
 80026bc:	3728      	adds	r7, #40	@ 0x28
 80026be:	46bd      	mov	sp, r7
 80026c0:	bd80      	pop	{r7, pc}
 80026c2:	bf00      	nop
 80026c4:	bc378034 	.word	0xbc378034
 80026c8:	43a80000 	.word	0x43a80000
 80026cc:	3c87fcb9 	.word	0x3c87fcb9
 80026d0:	4225851f 	.word	0x4225851f
 80026d4:	200005e8 	.word	0x200005e8

080026d8 <Touch_GotATouch>:
 * 						(use "2" in main loop activating touchgfxSignalVSync()
 * @returns		1	if recorded a touch
 * 				0	if no touch recorded
 ***********************************************************/

uint8_t Touch_GotATouch(uint8_t reset) {
 80026d8:	b580      	push	{r7, lr}
 80026da:	b084      	sub	sp, #16
 80026dc:	af00      	add	r7, sp, #0
 80026de:	4603      	mov	r3, r0
 80026e0:	71fb      	strb	r3, [r7, #7]
static uint32_t touchTime=0;
uint8_t result = Touch_PenDown;
 80026e2:	4b10      	ldr	r3, [pc, #64]	@ (8002724 <Touch_GotATouch+0x4c>)
 80026e4:	781b      	ldrb	r3, [r3, #0]
 80026e6:	73fb      	strb	r3, [r7, #15]

//	if (result)
//		result=Touch_PollTouch();

	if (reset==2){
 80026e8:	79fb      	ldrb	r3, [r7, #7]
 80026ea:	2b02      	cmp	r3, #2
 80026ec:	d10f      	bne.n	800270e <Touch_GotATouch+0x36>
		if ((HAL_GetTick()-touchTime) >= TOUCHGFX_TIMING)
 80026ee:	f000 f931 	bl	8002954 <HAL_GetTick>
 80026f2:	4602      	mov	r2, r0
 80026f4:	4b0c      	ldr	r3, [pc, #48]	@ (8002728 <Touch_GotATouch+0x50>)
 80026f6:	681b      	ldr	r3, [r3, #0]
 80026f8:	1ad3      	subs	r3, r2, r3
 80026fa:	2b3b      	cmp	r3, #59	@ 0x3b
 80026fc:	d905      	bls.n	800270a <Touch_GotATouch+0x32>
			touchTime=HAL_GetTick();
 80026fe:	f000 f929 	bl	8002954 <HAL_GetTick>
 8002702:	4603      	mov	r3, r0
 8002704:	4a08      	ldr	r2, [pc, #32]	@ (8002728 <Touch_GotATouch+0x50>)
 8002706:	6013      	str	r3, [r2, #0]
 8002708:	e001      	b.n	800270e <Touch_GotATouch+0x36>
		else
			result=0;
 800270a:	2300      	movs	r3, #0
 800270c:	73fb      	strb	r3, [r7, #15]
	}
	if (reset==1)
 800270e:	79fb      	ldrb	r3, [r7, #7]
 8002710:	2b01      	cmp	r3, #1
 8002712:	d102      	bne.n	800271a <Touch_GotATouch+0x42>
		Touch_PenDown=0;
 8002714:	4b03      	ldr	r3, [pc, #12]	@ (8002724 <Touch_GotATouch+0x4c>)
 8002716:	2200      	movs	r2, #0
 8002718:	701a      	strb	r2, [r3, #0]
	return result;
 800271a:	7bfb      	ldrb	r3, [r7, #15]
}
 800271c:	4618      	mov	r0, r3
 800271e:	3710      	adds	r7, #16
 8002720:	46bd      	mov	sp, r7
 8002722:	bd80      	pop	{r7, pc}
 8002724:	200005f5 	.word	0x200005f5
 8002728:	200005f8 	.word	0x200005f8

0800272c <Touch_TouchGFXSampleTouch>:
 *			then, into STM32TouchController::sampleTouch(int32_t& x, int32_t& y)
 *			change "return false;"
 *			into:  "return ((bool) Touch_TouchGFXSampleTouch(&x, &y));"
 * 			that's enough for touch integration in TouchGFX
***********************************************************/
uint8_t Touch_TouchGFXSampleTouch(int32_t *x, int32_t *y){
 800272c:	b580      	push	{r7, lr}
 800272e:	b084      	sub	sp, #16
 8002730:	af00      	add	r7, sp, #0
 8002732:	6078      	str	r0, [r7, #4]
 8002734:	6039      	str	r1, [r7, #0]
	//	sTouchData result;
	uint8_t isTouch=0;				// preset to no touch
 8002736:	2300      	movs	r3, #0
 8002738:	73fb      	strb	r3, [r7, #15]
	uint16_t xx=0,yy=0;  			// need to convert library coordinates type (uint16_t) to TouchGFX ones (int32_t)
 800273a:	2300      	movs	r3, #0
 800273c:	81bb      	strh	r3, [r7, #12]
 800273e:	2300      	movs	r3, #0
 8002740:	817b      	strh	r3, [r7, #10]
	static uint8_t flipTouch=0;		// switches 0/1, on every function call, until sensor is touched allowing to return key repeat
	static uint32_t touchTime=1; 	// tick value get on the first touch. 0 means display untouched.
	static uint16_t avgXX=0, avgYY=0;  			// need to convert library coordinates type (uint16_t) to TouchGFX one (int32_t)
	static uint8_t repetition=TOUCHGFX_REPEAT_IT+TOUCHGFX_REPEAT_NO;

	if (Touch_GotATouch(0)){				// polls interrupt flag not resetting it
 8002742:	2000      	movs	r0, #0
 8002744:	f7ff ffc8 	bl	80026d8 <Touch_GotATouch>
 8002748:	4603      	mov	r3, r0
 800274a:	2b00      	cmp	r3, #0
 800274c:	d063      	beq.n	8002816 <Touch_TouchGFXSampleTouch+0xea>
		Touch_GetXYtouch(&xx,&yy,&isTouch);	// get touch sensor position
 800274e:	f107 020f 	add.w	r2, r7, #15
 8002752:	f107 010a 	add.w	r1, r7, #10
 8002756:	f107 030c 	add.w	r3, r7, #12
 800275a:	4618      	mov	r0, r3
 800275c:	f7ff fec8 	bl	80024f0 <Touch_GetXYtouch>
		if (!isTouch){						// received a "no touch"
 8002760:	7bfb      	ldrb	r3, [r7, #15]
 8002762:	2b00      	cmp	r3, #0
 8002764:	d126      	bne.n	80027b4 <Touch_TouchGFXSampleTouch+0x88>
			if (touchTime != 0){			// if previously touched
 8002766:	4b2e      	ldr	r3, [pc, #184]	@ (8002820 <Touch_TouchGFXSampleTouch+0xf4>)
 8002768:	681b      	ldr	r3, [r3, #0]
 800276a:	2b00      	cmp	r3, #0
 800276c:	d053      	beq.n	8002816 <Touch_TouchGFXSampleTouch+0xea>
				if ((repetition--)>TOUCHGFX_REPEAT_NO+1){		// n-repetition of last touch sending
 800276e:	4b2d      	ldr	r3, [pc, #180]	@ (8002824 <Touch_TouchGFXSampleTouch+0xf8>)
 8002770:	781b      	ldrb	r3, [r3, #0]
 8002772:	1e5a      	subs	r2, r3, #1
 8002774:	b2d1      	uxtb	r1, r2
 8002776:	4a2b      	ldr	r2, [pc, #172]	@ (8002824 <Touch_TouchGFXSampleTouch+0xf8>)
 8002778:	7011      	strb	r1, [r2, #0]
 800277a:	2b06      	cmp	r3, #6
 800277c:	d90c      	bls.n	8002798 <Touch_TouchGFXSampleTouch+0x6c>
					*x = avgXX;
 800277e:	4b2a      	ldr	r3, [pc, #168]	@ (8002828 <Touch_TouchGFXSampleTouch+0xfc>)
 8002780:	881b      	ldrh	r3, [r3, #0]
 8002782:	461a      	mov	r2, r3
 8002784:	687b      	ldr	r3, [r7, #4]
 8002786:	601a      	str	r2, [r3, #0]
					*y = avgYY;
 8002788:	4b28      	ldr	r3, [pc, #160]	@ (800282c <Touch_TouchGFXSampleTouch+0x100>)
 800278a:	881b      	ldrh	r3, [r3, #0]
 800278c:	461a      	mov	r2, r3
 800278e:	683b      	ldr	r3, [r7, #0]
 8002790:	601a      	str	r2, [r3, #0]
					isTouch=1;
 8002792:	2301      	movs	r3, #1
 8002794:	73fb      	strb	r3, [r7, #15]
 8002796:	e03e      	b.n	8002816 <Touch_TouchGFXSampleTouch+0xea>
				} else if ((repetition==255)) {  // that's -1
 8002798:	4b22      	ldr	r3, [pc, #136]	@ (8002824 <Touch_TouchGFXSampleTouch+0xf8>)
 800279a:	781b      	ldrb	r3, [r3, #0]
 800279c:	2bff      	cmp	r3, #255	@ 0xff
 800279e:	d13a      	bne.n	8002816 <Touch_TouchGFXSampleTouch+0xea>
					touchTime=0;					// set display as untouched
 80027a0:	4b1f      	ldr	r3, [pc, #124]	@ (8002820 <Touch_TouchGFXSampleTouch+0xf4>)
 80027a2:	2200      	movs	r2, #0
 80027a4:	601a      	str	r2, [r3, #0]
					Touch_GotATouch(1);				// reset interrupt touch flag
 80027a6:	2001      	movs	r0, #1
 80027a8:	f7ff ff96 	bl	80026d8 <Touch_GotATouch>
					repetition=TOUCHGFX_REPEAT_IT+TOUCHGFX_REPEAT_NO;  //reset repetition counter
 80027ac:	4b1d      	ldr	r3, [pc, #116]	@ (8002824 <Touch_TouchGFXSampleTouch+0xf8>)
 80027ae:	2205      	movs	r2, #5
 80027b0:	701a      	strb	r2, [r3, #0]
 80027b2:	e030      	b.n	8002816 <Touch_TouchGFXSampleTouch+0xea>
				}
			}
		} else {					// display touched

			if (touchTime==0) {				// if previously untouched
 80027b4:	4b1a      	ldr	r3, [pc, #104]	@ (8002820 <Touch_TouchGFXSampleTouch+0xf4>)
 80027b6:	681b      	ldr	r3, [r3, #0]
 80027b8:	2b00      	cmp	r3, #0
 80027ba:	d10e      	bne.n	80027da <Touch_TouchGFXSampleTouch+0xae>
				avgXX =(xx/TOUCHGFX_SENSITIVITY)*TOUCHGFX_SENSITIVITY;
 80027bc:	89ba      	ldrh	r2, [r7, #12]
 80027be:	4b1a      	ldr	r3, [pc, #104]	@ (8002828 <Touch_TouchGFXSampleTouch+0xfc>)
 80027c0:	801a      	strh	r2, [r3, #0]
				avgYY =(yy/TOUCHGFX_SENSITIVITY)*TOUCHGFX_SENSITIVITY;
 80027c2:	897a      	ldrh	r2, [r7, #10]
 80027c4:	4b19      	ldr	r3, [pc, #100]	@ (800282c <Touch_TouchGFXSampleTouch+0x100>)
 80027c6:	801a      	strh	r2, [r3, #0]
				touchTime=HAL_GetTick();	// store tick value at touch time
 80027c8:	f000 f8c4 	bl	8002954 <HAL_GetTick>
 80027cc:	4603      	mov	r3, r0
 80027ce:	4a14      	ldr	r2, [pc, #80]	@ (8002820 <Touch_TouchGFXSampleTouch+0xf4>)
 80027d0:	6013      	str	r3, [r2, #0]
				flipTouch=1;				// set switch to send touch now
 80027d2:	4b17      	ldr	r3, [pc, #92]	@ (8002830 <Touch_TouchGFXSampleTouch+0x104>)
 80027d4:	2201      	movs	r2, #1
 80027d6:	701a      	strb	r2, [r3, #0]
 80027d8:	e004      	b.n	80027e4 <Touch_TouchGFXSampleTouch+0xb8>
			} else {						// not a new touch
				if (((HAL_GetTick()-touchTime)>DELAY_TO_KEY_REPEAT) && (DELAY_TO_KEY_REPEAT > 0)){	// if timeout to key repeat is over (0 means no key repeat)
 80027da:	f000 f8bb 	bl	8002954 <HAL_GetTick>
					flipTouch=!flipTouch;	// alternate every time function is called
				} else
					if (DELAY_TO_KEY_REPEAT == 0)
						flipTouch=0;		// (DELAY_TO_KEY_REPEAT == 0) means a single pulse, "-1" keep pulse as long as touch
 80027de:	4b14      	ldr	r3, [pc, #80]	@ (8002830 <Touch_TouchGFXSampleTouch+0x104>)
 80027e0:	2200      	movs	r2, #0
 80027e2:	701a      	strb	r2, [r3, #0]
			}
			if (flipTouch) { 	// return position only if the switching flag is on
 80027e4:	4b12      	ldr	r3, [pc, #72]	@ (8002830 <Touch_TouchGFXSampleTouch+0x104>)
 80027e6:	781b      	ldrb	r3, [r3, #0]
 80027e8:	2b00      	cmp	r3, #0
 80027ea:	d012      	beq.n	8002812 <Touch_TouchGFXSampleTouch+0xe6>
				*x=(((avgXX*(TOUCHGFX_MOVAVG-1)+((xx/TOUCHGFX_SENSITIVITY)*TOUCHGFX_SENSITIVITY)))/TOUCHGFX_MOVAVG);
 80027ec:	89bb      	ldrh	r3, [r7, #12]
 80027ee:	461a      	mov	r2, r3
 80027f0:	687b      	ldr	r3, [r7, #4]
 80027f2:	601a      	str	r2, [r3, #0]
				*y=(((avgYY*(TOUCHGFX_MOVAVG-1)+((yy/TOUCHGFX_SENSITIVITY)*TOUCHGFX_SENSITIVITY)))/TOUCHGFX_MOVAVG);
 80027f4:	897b      	ldrh	r3, [r7, #10]
 80027f6:	461a      	mov	r2, r3
 80027f8:	683b      	ldr	r3, [r7, #0]
 80027fa:	601a      	str	r2, [r3, #0]
				avgXX = *x;
 80027fc:	687b      	ldr	r3, [r7, #4]
 80027fe:	681b      	ldr	r3, [r3, #0]
 8002800:	b29a      	uxth	r2, r3
 8002802:	4b09      	ldr	r3, [pc, #36]	@ (8002828 <Touch_TouchGFXSampleTouch+0xfc>)
 8002804:	801a      	strh	r2, [r3, #0]
				avgYY = *y;
 8002806:	683b      	ldr	r3, [r7, #0]
 8002808:	681b      	ldr	r3, [r3, #0]
 800280a:	b29a      	uxth	r2, r3
 800280c:	4b07      	ldr	r3, [pc, #28]	@ (800282c <Touch_TouchGFXSampleTouch+0x100>)
 800280e:	801a      	strh	r2, [r3, #0]
 8002810:	e001      	b.n	8002816 <Touch_TouchGFXSampleTouch+0xea>
			} else {			// otherwise return "no touch" from display
				isTouch = 0;
 8002812:	2300      	movs	r3, #0
 8002814:	73fb      	strb	r3, [r7, #15]
			}
		}
	}
	return isTouch;
 8002816:	7bfb      	ldrb	r3, [r7, #15]
}
 8002818:	4618      	mov	r0, r3
 800281a:	3710      	adds	r7, #16
 800281c:	46bd      	mov	sp, r7
 800281e:	bd80      	pop	{r7, pc}
 8002820:	20000010 	.word	0x20000010
 8002824:	20000014 	.word	0x20000014
 8002828:	200005fc 	.word	0x200005fc
 800282c:	200005fe 	.word	0x200005fe
 8002830:	20000600 	.word	0x20000600

08002834 <Reset_Handler>:
 8002834:	f8df d034 	ldr.w	sp, [pc, #52]	@ 800286c <LoopFillZerobss+0xe>
 8002838:	f7ff fb60 	bl	8001efc <SystemInit>
 800283c:	480c      	ldr	r0, [pc, #48]	@ (8002870 <LoopFillZerobss+0x12>)
 800283e:	490d      	ldr	r1, [pc, #52]	@ (8002874 <LoopFillZerobss+0x16>)
 8002840:	4a0d      	ldr	r2, [pc, #52]	@ (8002878 <LoopFillZerobss+0x1a>)
 8002842:	2300      	movs	r3, #0
 8002844:	e002      	b.n	800284c <LoopCopyDataInit>

08002846 <CopyDataInit>:
 8002846:	58d4      	ldr	r4, [r2, r3]
 8002848:	50c4      	str	r4, [r0, r3]
 800284a:	3304      	adds	r3, #4

0800284c <LoopCopyDataInit>:
 800284c:	18c4      	adds	r4, r0, r3
 800284e:	428c      	cmp	r4, r1
 8002850:	d3f9      	bcc.n	8002846 <CopyDataInit>
 8002852:	4a0a      	ldr	r2, [pc, #40]	@ (800287c <LoopFillZerobss+0x1e>)
 8002854:	4c0a      	ldr	r4, [pc, #40]	@ (8002880 <LoopFillZerobss+0x22>)
 8002856:	2300      	movs	r3, #0
 8002858:	e001      	b.n	800285e <LoopFillZerobss>

0800285a <FillZerobss>:
 800285a:	6013      	str	r3, [r2, #0]
 800285c:	3204      	adds	r2, #4

0800285e <LoopFillZerobss>:
 800285e:	42a2      	cmp	r2, r4
 8002860:	d3fb      	bcc.n	800285a <FillZerobss>
 8002862:	f020 f8c5 	bl	80229f0 <__libc_init_array>
 8002866:	f7fe fb41 	bl	8000eec <main>
 800286a:	4770      	bx	lr
 800286c:	20020000 	.word	0x20020000
 8002870:	20000000 	.word	0x20000000
 8002874:	20000104 	.word	0x20000104
 8002878:	0806eea0 	.word	0x0806eea0
 800287c:	20000320 	.word	0x20000320
 8002880:	20003af4 	.word	0x20003af4

08002884 <CAN1_RX0_IRQHandler>:
 8002884:	e7fe      	b.n	8002884 <CAN1_RX0_IRQHandler>
	...

08002888 <HAL_Init>:
  *         need to ensure that the SysTick time base is always set to 1 millisecond
  *         to have correct HAL operation.
  * @retval HAL status
  */
HAL_StatusTypeDef HAL_Init(void)
{
 8002888:	b580      	push	{r7, lr}
 800288a:	af00      	add	r7, sp, #0
  /* Configure Flash prefetch, Instruction cache, Data cache */ 
#if (INSTRUCTION_CACHE_ENABLE != 0U)
  __HAL_FLASH_INSTRUCTION_CACHE_ENABLE();
 800288c:	4b0e      	ldr	r3, [pc, #56]	@ (80028c8 <HAL_Init+0x40>)
 800288e:	681b      	ldr	r3, [r3, #0]
 8002890:	4a0d      	ldr	r2, [pc, #52]	@ (80028c8 <HAL_Init+0x40>)
 8002892:	f443 7300 	orr.w	r3, r3, #512	@ 0x200
 8002896:	6013      	str	r3, [r2, #0]
#endif /* INSTRUCTION_CACHE_ENABLE */

#if (DATA_CACHE_ENABLE != 0U)
  __HAL_FLASH_DATA_CACHE_ENABLE();
 8002898:	4b0b      	ldr	r3, [pc, #44]	@ (80028c8 <HAL_Init+0x40>)
 800289a:	681b      	ldr	r3, [r3, #0]
 800289c:	4a0a      	ldr	r2, [pc, #40]	@ (80028c8 <HAL_Init+0x40>)
 800289e:	f443 6380 	orr.w	r3, r3, #1024	@ 0x400
 80028a2:	6013      	str	r3, [r2, #0]
#endif /* DATA_CACHE_ENABLE */

#if (PREFETCH_ENABLE != 0U)
  __HAL_FLASH_PREFETCH_BUFFER_ENABLE();
 80028a4:	4b08      	ldr	r3, [pc, #32]	@ (80028c8 <HAL_Init+0x40>)
 80028a6:	681b      	ldr	r3, [r3, #0]
 80028a8:	4a07      	ldr	r2, [pc, #28]	@ (80028c8 <HAL_Init+0x40>)
 80028aa:	f443 7380 	orr.w	r3, r3, #256	@ 0x100
 80028ae:	6013      	str	r3, [r2, #0]
#endif /* PREFETCH_ENABLE */

  /* Set Interrupt Group Priority */
  HAL_NVIC_SetPriorityGrouping(NVIC_PRIORITYGROUP_4);
 80028b0:	2003      	movs	r0, #3
 80028b2:	f000 fed7 	bl	8003664 <HAL_NVIC_SetPriorityGrouping>

  /* Use systick as time base source and configure 1ms tick (default clock after Reset is HSI) */
  HAL_InitTick(TICK_INT_PRIORITY);
 80028b6:	2000      	movs	r0, #0
 80028b8:	f000 f808 	bl	80028cc <HAL_InitTick>

  /* Init the low level hardware */
  HAL_MspInit();
 80028bc:	f7fe ff6c 	bl	8001798 <HAL_MspInit>

  /* Return function status */
  return HAL_OK;
 80028c0:	2300      	movs	r3, #0
}
 80028c2:	4618      	mov	r0, r3
 80028c4:	bd80      	pop	{r7, pc}
 80028c6:	bf00      	nop
 80028c8:	40023c00 	.word	0x40023c00

080028cc <HAL_InitTick>:
  *       implementation  in user file.
  * @param TickPriority Tick interrupt priority.
  * @retval HAL status
  */
__weak HAL_StatusTypeDef HAL_InitTick(uint32_t TickPriority)
{
 80028cc:	b580      	push	{r7, lr}
 80028ce:	b082      	sub	sp, #8
 80028d0:	af00      	add	r7, sp, #0
 80028d2:	6078      	str	r0, [r7, #4]
  /* Configure the SysTick to have interrupt in 1ms time basis*/
  if (HAL_SYSTICK_Config(SystemCoreClock / (1000U / uwTickFreq)) > 0U)
 80028d4:	4b12      	ldr	r3, [pc, #72]	@ (8002920 <HAL_InitTick+0x54>)
 80028d6:	681a      	ldr	r2, [r3, #0]
 80028d8:	4b12      	ldr	r3, [pc, #72]	@ (8002924 <HAL_InitTick+0x58>)
 80028da:	781b      	ldrb	r3, [r3, #0]
 80028dc:	4619      	mov	r1, r3
 80028de:	f44f 737a 	mov.w	r3, #1000	@ 0x3e8
 80028e2:	fbb3 f3f1 	udiv	r3, r3, r1
 80028e6:	fbb2 f3f3 	udiv	r3, r2, r3
 80028ea:	4618      	mov	r0, r3
 80028ec:	f000 fefd 	bl	80036ea <HAL_SYSTICK_Config>
 80028f0:	4603      	mov	r3, r0
 80028f2:	2b00      	cmp	r3, #0
 80028f4:	d001      	beq.n	80028fa <HAL_InitTick+0x2e>
  {
    return HAL_ERROR;
 80028f6:	2301      	movs	r3, #1
 80028f8:	e00e      	b.n	8002918 <HAL_InitTick+0x4c>
  }

  /* Configure the SysTick IRQ priority */
  if (TickPriority < (1UL << __NVIC_PRIO_BITS))
 80028fa:	687b      	ldr	r3, [r7, #4]
 80028fc:	2b0f      	cmp	r3, #15
 80028fe:	d80a      	bhi.n	8002916 <HAL_InitTick+0x4a>
  {
    HAL_NVIC_SetPriority(SysTick_IRQn, TickPriority, 0U);
 8002900:	2200      	movs	r2, #0
 8002902:	6879      	ldr	r1, [r7, #4]
 8002904:	f04f 30ff 	mov.w	r0, #4294967295
 8002908:	f000 feb7 	bl	800367a <HAL_NVIC_SetPriority>
    uwTickPrio = TickPriority;
 800290c:	4a06      	ldr	r2, [pc, #24]	@ (8002928 <HAL_InitTick+0x5c>)
 800290e:	687b      	ldr	r3, [r7, #4]
 8002910:	6013      	str	r3, [r2, #0]
  {
    return HAL_ERROR;
  }

  /* Return function status */
  return HAL_OK;
 8002912:	2300      	movs	r3, #0
 8002914:	e000      	b.n	8002918 <HAL_InitTick+0x4c>
    return HAL_ERROR;
 8002916:	2301      	movs	r3, #1
}
 8002918:	4618      	mov	r0, r3
 800291a:	3708      	adds	r7, #8
 800291c:	46bd      	mov	sp, r7
 800291e:	bd80      	pop	{r7, pc}
 8002920:	20000008 	.word	0x20000008
 8002924:	2000001c 	.word	0x2000001c
 8002928:	20000018 	.word	0x20000018

0800292c <HAL_IncTick>:
 * @note This function is declared as __weak to be overwritten in case of other 
  *      implementations in user file.
  * @retval None
  */
__weak void HAL_IncTick(void)
{
 800292c:	b480      	push	{r7}
 800292e:	af00      	add	r7, sp, #0
  uwTick += uwTickFreq;
 8002930:	4b06      	ldr	r3, [pc, #24]	@ (800294c <HAL_IncTick+0x20>)
 8002932:	781b      	ldrb	r3, [r3, #0]
 8002934:	461a      	mov	r2, r3
 8002936:	4b06      	ldr	r3, [pc, #24]	@ (8002950 <HAL_IncTick+0x24>)
 8002938:	681b      	ldr	r3, [r3, #0]
 800293a:	4413      	add	r3, r2
 800293c:	4a04      	ldr	r2, [pc, #16]	@ (8002950 <HAL_IncTick+0x24>)
 800293e:	6013      	str	r3, [r2, #0]
}
 8002940:	bf00      	nop
 8002942:	46bd      	mov	sp, r7
 8002944:	f85d 7b04 	ldr.w	r7, [sp], #4
 8002948:	4770      	bx	lr
 800294a:	bf00      	nop
 800294c:	2000001c 	.word	0x2000001c
 8002950:	20000604 	.word	0x20000604

08002954 <HAL_GetTick>:
  * @note This function is declared as __weak to be overwritten in case of other 
  *       implementations in user file.
  * @retval tick value
  */
__weak uint32_t HAL_GetTick(void)
{
 8002954:	b480      	push	{r7}
 8002956:	af00      	add	r7, sp, #0
  return uwTick;
 8002958:	4b03      	ldr	r3, [pc, #12]	@ (8002968 <HAL_GetTick+0x14>)
 800295a:	681b      	ldr	r3, [r3, #0]
}
 800295c:	4618      	mov	r0, r3
 800295e:	46bd      	mov	sp, r7
 8002960:	f85d 7b04 	ldr.w	r7, [sp], #4
 8002964:	4770      	bx	lr
 8002966:	bf00      	nop
 8002968:	20000604 	.word	0x20000604

0800296c <HAL_Delay>:
  *       implementations in user file.
  * @param Delay specifies the delay time length, in milliseconds.
  * @retval None
  */
__weak void HAL_Delay(uint32_t Delay)
{
 800296c:	b580      	push	{r7, lr}
 800296e:	b084      	sub	sp, #16
 8002970:	af00      	add	r7, sp, #0
 8002972:	6078      	str	r0, [r7, #4]
  uint32_t tickstart = HAL_GetTick();
 8002974:	f7ff ffee 	bl	8002954 <HAL_GetTick>
 8002978:	60b8      	str	r0, [r7, #8]
  uint32_t wait = Delay;
 800297a:	687b      	ldr	r3, [r7, #4]
 800297c:	60fb      	str	r3, [r7, #12]

  /* Add a freq to guarantee minimum wait */
  if (wait < HAL_MAX_DELAY)
 800297e:	68fb      	ldr	r3, [r7, #12]
 8002980:	f1b3 3fff 	cmp.w	r3, #4294967295
 8002984:	d005      	beq.n	8002992 <HAL_Delay+0x26>
  {
    wait += (uint32_t)(uwTickFreq);
 8002986:	4b0a      	ldr	r3, [pc, #40]	@ (80029b0 <HAL_Delay+0x44>)
 8002988:	781b      	ldrb	r3, [r3, #0]
 800298a:	461a      	mov	r2, r3
 800298c:	68fb      	ldr	r3, [r7, #12]
 800298e:	4413      	add	r3, r2
 8002990:	60fb      	str	r3, [r7, #12]
  }

  while((HAL_GetTick() - tickstart) < wait)
 8002992:	bf00      	nop
 8002994:	f7ff ffde 	bl	8002954 <HAL_GetTick>
 8002998:	4602      	mov	r2, r0
 800299a:	68bb      	ldr	r3, [r7, #8]
 800299c:	1ad3      	subs	r3, r2, r3
 800299e:	68fa      	ldr	r2, [r7, #12]
 80029a0:	429a      	cmp	r2, r3
 80029a2:	d8f7      	bhi.n	8002994 <HAL_Delay+0x28>
  {
  }
}
 80029a4:	bf00      	nop
 80029a6:	bf00      	nop
 80029a8:	3710      	adds	r7, #16
 80029aa:	46bd      	mov	sp, r7
 80029ac:	bd80      	pop	{r7, pc}
 80029ae:	bf00      	nop
 80029b0:	2000001c 	.word	0x2000001c

080029b4 <HAL_ADC_Init>:
  * @param  hadc pointer to a ADC_HandleTypeDef structure that contains
  *         the configuration information for the specified ADC.
  * @retval HAL status
  */
HAL_StatusTypeDef HAL_ADC_Init(ADC_HandleTypeDef *hadc)
{
 80029b4:	b580      	push	{r7, lr}
 80029b6:	b084      	sub	sp, #16
 80029b8:	af00      	add	r7, sp, #0
 80029ba:	6078      	str	r0, [r7, #4]
  HAL_StatusTypeDef tmp_hal_status = HAL_OK;
 80029bc:	2300      	movs	r3, #0
 80029be:	73fb      	strb	r3, [r7, #15]

  /* Check ADC handle */
  if (hadc == NULL)
 80029c0:	687b      	ldr	r3, [r7, #4]
 80029c2:	2b00      	cmp	r3, #0
 80029c4:	d101      	bne.n	80029ca <HAL_ADC_Init+0x16>
  {
    return HAL_ERROR;
 80029c6:	2301      	movs	r3, #1
 80029c8:	e033      	b.n	8002a32 <HAL_ADC_Init+0x7e>
  if (hadc->Init.ExternalTrigConv != ADC_SOFTWARE_START)
  {
    assert_param(IS_ADC_EXT_TRIG_EDGE(hadc->Init.ExternalTrigConvEdge));
  }

  if (hadc->State == HAL_ADC_STATE_RESET)
 80029ca:	687b      	ldr	r3, [r7, #4]
 80029cc:	6c1b      	ldr	r3, [r3, #64]	@ 0x40
 80029ce:	2b00      	cmp	r3, #0
 80029d0:	d109      	bne.n	80029e6 <HAL_ADC_Init+0x32>

    /* Init the low level hardware */
    hadc->MspInitCallback(hadc);
#else
    /* Init the low level hardware */
    HAL_ADC_MspInit(hadc);
 80029d2:	6878      	ldr	r0, [r7, #4]
 80029d4:	f7fe ff08 	bl	80017e8 <HAL_ADC_MspInit>
#endif /* USE_HAL_ADC_REGISTER_CALLBACKS */

    /* Initialize ADC error code */
    ADC_CLEAR_ERRORCODE(hadc);
 80029d8:	687b      	ldr	r3, [r7, #4]
 80029da:	2200      	movs	r2, #0
 80029dc:	645a      	str	r2, [r3, #68]	@ 0x44

    /* Allocate lock resource and initialize it */
    hadc->Lock = HAL_UNLOCKED;
 80029de:	687b      	ldr	r3, [r7, #4]
 80029e0:	2200      	movs	r2, #0
 80029e2:	f883 203c 	strb.w	r2, [r3, #60]	@ 0x3c
  }

  /* Configuration of ADC parameters if previous preliminary actions are      */
  /* correctly completed.                                                     */
  if (HAL_IS_BIT_CLR(hadc->State, HAL_ADC_STATE_ERROR_INTERNAL))
 80029e6:	687b      	ldr	r3, [r7, #4]
 80029e8:	6c1b      	ldr	r3, [r3, #64]	@ 0x40
 80029ea:	f003 0310 	and.w	r3, r3, #16
 80029ee:	2b00      	cmp	r3, #0
 80029f0:	d118      	bne.n	8002a24 <HAL_ADC_Init+0x70>
  {
    /* Set ADC state */
    ADC_STATE_CLR_SET(hadc->State,
 80029f2:	687b      	ldr	r3, [r7, #4]
 80029f4:	6c1b      	ldr	r3, [r3, #64]	@ 0x40
 80029f6:	f423 5388 	bic.w	r3, r3, #4352	@ 0x1100
 80029fa:	f023 0302 	bic.w	r3, r3, #2
 80029fe:	f043 0202 	orr.w	r2, r3, #2
 8002a02:	687b      	ldr	r3, [r7, #4]
 8002a04:	641a      	str	r2, [r3, #64]	@ 0x40
                      HAL_ADC_STATE_REG_BUSY | HAL_ADC_STATE_INJ_BUSY,
                      HAL_ADC_STATE_BUSY_INTERNAL);

    /* Set ADC parameters */
    ADC_Init(hadc);
 8002a06:	6878      	ldr	r0, [r7, #4]
 8002a08:	f000 fb92 	bl	8003130 <ADC_Init>

    /* Set ADC error code to none */
    ADC_CLEAR_ERRORCODE(hadc);
 8002a0c:	687b      	ldr	r3, [r7, #4]
 8002a0e:	2200      	movs	r2, #0
 8002a10:	645a      	str	r2, [r3, #68]	@ 0x44

    /* Set the ADC state */
    ADC_STATE_CLR_SET(hadc->State,
 8002a12:	687b      	ldr	r3, [r7, #4]
 8002a14:	6c1b      	ldr	r3, [r3, #64]	@ 0x40
 8002a16:	f023 0303 	bic.w	r3, r3, #3
 8002a1a:	f043 0201 	orr.w	r2, r3, #1
 8002a1e:	687b      	ldr	r3, [r7, #4]
 8002a20:	641a      	str	r2, [r3, #64]	@ 0x40
 8002a22:	e001      	b.n	8002a28 <HAL_ADC_Init+0x74>
                      HAL_ADC_STATE_BUSY_INTERNAL,
                      HAL_ADC_STATE_READY);
  }
  else
  {
    tmp_hal_status = HAL_ERROR;
 8002a24:	2301      	movs	r3, #1
 8002a26:	73fb      	strb	r3, [r7, #15]
  }

  /* Release Lock */
  __HAL_UNLOCK(hadc);
 8002a28:	687b      	ldr	r3, [r7, #4]
 8002a2a:	2200      	movs	r2, #0
 8002a2c:	f883 203c 	strb.w	r2, [r3, #60]	@ 0x3c

  /* Return function status */
  return tmp_hal_status;
 8002a30:	7bfb      	ldrb	r3, [r7, #15]
}
 8002a32:	4618      	mov	r0, r3
 8002a34:	3710      	adds	r7, #16
 8002a36:	46bd      	mov	sp, r7
 8002a38:	bd80      	pop	{r7, pc}

08002a3a <HAL_ADC_IRQHandler>:
  * @param  hadc pointer to a ADC_HandleTypeDef structure that contains
  *         the configuration information for the specified ADC.
  * @retval None
  */
void HAL_ADC_IRQHandler(ADC_HandleTypeDef *hadc)
{
 8002a3a:	b580      	push	{r7, lr}
 8002a3c:	b086      	sub	sp, #24
 8002a3e:	af00      	add	r7, sp, #0
 8002a40:	6078      	str	r0, [r7, #4]
  uint32_t tmp1 = 0U, tmp2 = 0U;
 8002a42:	2300      	movs	r3, #0
 8002a44:	617b      	str	r3, [r7, #20]
 8002a46:	2300      	movs	r3, #0
 8002a48:	613b      	str	r3, [r7, #16]

  uint32_t tmp_sr = hadc->Instance->SR;
 8002a4a:	687b      	ldr	r3, [r7, #4]
 8002a4c:	681b      	ldr	r3, [r3, #0]
 8002a4e:	681b      	ldr	r3, [r3, #0]
 8002a50:	60fb      	str	r3, [r7, #12]
  uint32_t tmp_cr1 = hadc->Instance->CR1;
 8002a52:	687b      	ldr	r3, [r7, #4]
 8002a54:	681b      	ldr	r3, [r3, #0]
 8002a56:	685b      	ldr	r3, [r3, #4]
 8002a58:	60bb      	str	r3, [r7, #8]
  /* Check the parameters */
  assert_param(IS_FUNCTIONAL_STATE(hadc->Init.ContinuousConvMode));
  assert_param(IS_ADC_REGULAR_LENGTH(hadc->Init.NbrOfConversion));
  assert_param(IS_ADC_EOCSelection(hadc->Init.EOCSelection));

  tmp1 = tmp_sr & ADC_FLAG_EOC;
 8002a5a:	68fb      	ldr	r3, [r7, #12]
 8002a5c:	f003 0302 	and.w	r3, r3, #2
 8002a60:	617b      	str	r3, [r7, #20]
  tmp2 = tmp_cr1 & ADC_IT_EOC;
 8002a62:	68bb      	ldr	r3, [r7, #8]
 8002a64:	f003 0320 	and.w	r3, r3, #32
 8002a68:	613b      	str	r3, [r7, #16]
  /* Check End of conversion flag for regular channels */
  if (tmp1 && tmp2)
 8002a6a:	697b      	ldr	r3, [r7, #20]
 8002a6c:	2b00      	cmp	r3, #0
 8002a6e:	d049      	beq.n	8002b04 <HAL_ADC_IRQHandler+0xca>
 8002a70:	693b      	ldr	r3, [r7, #16]
 8002a72:	2b00      	cmp	r3, #0
 8002a74:	d046      	beq.n	8002b04 <HAL_ADC_IRQHandler+0xca>
  {
    /* Update state machine on conversion status if not in error state */
    if (HAL_IS_BIT_CLR(hadc->State, HAL_ADC_STATE_ERROR_INTERNAL))
 8002a76:	687b      	ldr	r3, [r7, #4]
 8002a78:	6c1b      	ldr	r3, [r3, #64]	@ 0x40
 8002a7a:	f003 0310 	and.w	r3, r3, #16
 8002a7e:	2b00      	cmp	r3, #0
 8002a80:	d105      	bne.n	8002a8e <HAL_ADC_IRQHandler+0x54>
    {
      /* Set ADC state */
      SET_BIT(hadc->State, HAL_ADC_STATE_REG_EOC);
 8002a82:	687b      	ldr	r3, [r7, #4]
 8002a84:	6c1b      	ldr	r3, [r3, #64]	@ 0x40
 8002a86:	f443 7200 	orr.w	r2, r3, #512	@ 0x200
 8002a8a:	687b      	ldr	r3, [r7, #4]
 8002a8c:	641a      	str	r2, [r3, #64]	@ 0x40
    /* by external trigger, continuous mode or scan sequence on going.      */
    /* Note: On STM32F4, there is no independent flag of end of sequence.   */
    /*       The test of scan sequence on going is done either with scan    */
    /*       sequence disabled or with end of conversion flag set to        */
    /*       of end of sequence.                                            */
    if (ADC_IS_SOFTWARE_START_REGULAR(hadc)                   &&
 8002a8e:	687b      	ldr	r3, [r7, #4]
 8002a90:	681b      	ldr	r3, [r3, #0]
 8002a92:	689b      	ldr	r3, [r3, #8]
 8002a94:	f003 5340 	and.w	r3, r3, #805306368	@ 0x30000000
 8002a98:	2b00      	cmp	r3, #0
 8002a9a:	d12b      	bne.n	8002af4 <HAL_ADC_IRQHandler+0xba>
        (hadc->Init.ContinuousConvMode == DISABLE)            &&
 8002a9c:	687b      	ldr	r3, [r7, #4]
 8002a9e:	7e1b      	ldrb	r3, [r3, #24]
    if (ADC_IS_SOFTWARE_START_REGULAR(hadc)                   &&
 8002aa0:	2b00      	cmp	r3, #0
 8002aa2:	d127      	bne.n	8002af4 <HAL_ADC_IRQHandler+0xba>
        (HAL_IS_BIT_CLR(hadc->Instance->SQR1, ADC_SQR1_L) ||
 8002aa4:	687b      	ldr	r3, [r7, #4]
 8002aa6:	681b      	ldr	r3, [r3, #0]
 8002aa8:	6adb      	ldr	r3, [r3, #44]	@ 0x2c
 8002aaa:	f403 0370 	and.w	r3, r3, #15728640	@ 0xf00000
        (hadc->Init.ContinuousConvMode == DISABLE)            &&
 8002aae:	2b00      	cmp	r3, #0
 8002ab0:	d006      	beq.n	8002ac0 <HAL_ADC_IRQHandler+0x86>
         HAL_IS_BIT_CLR(hadc->Instance->CR2, ADC_CR2_EOCS)))
 8002ab2:	687b      	ldr	r3, [r7, #4]
 8002ab4:	681b      	ldr	r3, [r3, #0]
 8002ab6:	689b      	ldr	r3, [r3, #8]
 8002ab8:	f403 6380 	and.w	r3, r3, #1024	@ 0x400
        (HAL_IS_BIT_CLR(hadc->Instance->SQR1, ADC_SQR1_L) ||
 8002abc:	2b00      	cmp	r3, #0
 8002abe:	d119      	bne.n	8002af4 <HAL_ADC_IRQHandler+0xba>
    {
      /* Disable ADC end of single conversion interrupt on group regular */
      /* Note: Overrun interrupt was enabled with EOC interrupt in          */
      /* HAL_ADC_Start_IT(), but is not disabled here because can be used   */
      /* by overrun IRQ process below.                                      */
      __HAL_ADC_DISABLE_IT(hadc, ADC_IT_EOC);
 8002ac0:	687b      	ldr	r3, [r7, #4]
 8002ac2:	681b      	ldr	r3, [r3, #0]
 8002ac4:	685a      	ldr	r2, [r3, #4]
 8002ac6:	687b      	ldr	r3, [r7, #4]
 8002ac8:	681b      	ldr	r3, [r3, #0]
 8002aca:	f022 0220 	bic.w	r2, r2, #32
 8002ace:	605a      	str	r2, [r3, #4]

      /* Set ADC state */
      CLEAR_BIT(hadc->State, HAL_ADC_STATE_REG_BUSY);
 8002ad0:	687b      	ldr	r3, [r7, #4]
 8002ad2:	6c1b      	ldr	r3, [r3, #64]	@ 0x40
 8002ad4:	f423 7280 	bic.w	r2, r3, #256	@ 0x100
 8002ad8:	687b      	ldr	r3, [r7, #4]
 8002ada:	641a      	str	r2, [r3, #64]	@ 0x40

      if (HAL_IS_BIT_CLR(hadc->State, HAL_ADC_STATE_INJ_BUSY))
 8002adc:	687b      	ldr	r3, [r7, #4]
 8002ade:	6c1b      	ldr	r3, [r3, #64]	@ 0x40
 8002ae0:	f403 5380 	and.w	r3, r3, #4096	@ 0x1000
 8002ae4:	2b00      	cmp	r3, #0
 8002ae6:	d105      	bne.n	8002af4 <HAL_ADC_IRQHandler+0xba>
      {
        SET_BIT(hadc->State, HAL_ADC_STATE_READY);
 8002ae8:	687b      	ldr	r3, [r7, #4]
 8002aea:	6c1b      	ldr	r3, [r3, #64]	@ 0x40
 8002aec:	f043 0201 	orr.w	r2, r3, #1
 8002af0:	687b      	ldr	r3, [r7, #4]
 8002af2:	641a      	str	r2, [r3, #64]	@ 0x40

    /* Conversion complete callback */
#if (USE_HAL_ADC_REGISTER_CALLBACKS == 1)
    hadc->ConvCpltCallback(hadc);
#else
    HAL_ADC_ConvCpltCallback(hadc);
 8002af4:	6878      	ldr	r0, [r7, #4]
 8002af6:	f000 f9c1 	bl	8002e7c <HAL_ADC_ConvCpltCallback>
#endif /* USE_HAL_ADC_REGISTER_CALLBACKS */

    /* Clear regular group conversion flag */
    __HAL_ADC_CLEAR_FLAG(hadc, ADC_FLAG_STRT | ADC_FLAG_EOC);
 8002afa:	687b      	ldr	r3, [r7, #4]
 8002afc:	681b      	ldr	r3, [r3, #0]
 8002afe:	f06f 0212 	mvn.w	r2, #18
 8002b02:	601a      	str	r2, [r3, #0]
  }

  tmp1 = tmp_sr & ADC_FLAG_JEOC;
 8002b04:	68fb      	ldr	r3, [r7, #12]
 8002b06:	f003 0304 	and.w	r3, r3, #4
 8002b0a:	617b      	str	r3, [r7, #20]
  tmp2 = tmp_cr1 & ADC_IT_JEOC;
 8002b0c:	68bb      	ldr	r3, [r7, #8]
 8002b0e:	f003 0380 	and.w	r3, r3, #128	@ 0x80
 8002b12:	613b      	str	r3, [r7, #16]
  /* Check End of conversion flag for injected channels */
  if (tmp1 && tmp2)
 8002b14:	697b      	ldr	r3, [r7, #20]
 8002b16:	2b00      	cmp	r3, #0
 8002b18:	d057      	beq.n	8002bca <HAL_ADC_IRQHandler+0x190>
 8002b1a:	693b      	ldr	r3, [r7, #16]
 8002b1c:	2b00      	cmp	r3, #0
 8002b1e:	d054      	beq.n	8002bca <HAL_ADC_IRQHandler+0x190>
  {
    /* Update state machine on conversion status if not in error state */
    if (HAL_IS_BIT_CLR(hadc->State, HAL_ADC_STATE_ERROR_INTERNAL))
 8002b20:	687b      	ldr	r3, [r7, #4]
 8002b22:	6c1b      	ldr	r3, [r3, #64]	@ 0x40
 8002b24:	f003 0310 	and.w	r3, r3, #16
 8002b28:	2b00      	cmp	r3, #0
 8002b2a:	d105      	bne.n	8002b38 <HAL_ADC_IRQHandler+0xfe>
    {
      /* Set ADC state */
      SET_BIT(hadc->State, HAL_ADC_STATE_INJ_EOC);
 8002b2c:	687b      	ldr	r3, [r7, #4]
 8002b2e:	6c1b      	ldr	r3, [r3, #64]	@ 0x40
 8002b30:	f443 5200 	orr.w	r2, r3, #8192	@ 0x2000
 8002b34:	687b      	ldr	r3, [r7, #4]
 8002b36:	641a      	str	r2, [r3, #64]	@ 0x40

    /* Determine whether any further conversion upcoming on group injected  */
    /* by external trigger, scan sequence on going or by automatic injected */
    /* conversion from group regular (same conditions as group regular      */
    /* interruption disabling above).                                       */
    if (ADC_IS_SOFTWARE_START_INJECTED(hadc)                    &&
 8002b38:	687b      	ldr	r3, [r7, #4]
 8002b3a:	681b      	ldr	r3, [r3, #0]
 8002b3c:	689b      	ldr	r3, [r3, #8]
 8002b3e:	f403 1340 	and.w	r3, r3, #3145728	@ 0x300000
 8002b42:	2b00      	cmp	r3, #0
 8002b44:	d139      	bne.n	8002bba <HAL_ADC_IRQHandler+0x180>
        (HAL_IS_BIT_CLR(hadc->Instance->JSQR, ADC_JSQR_JL)  ||
 8002b46:	687b      	ldr	r3, [r7, #4]
 8002b48:	681b      	ldr	r3, [r3, #0]
 8002b4a:	6b9b      	ldr	r3, [r3, #56]	@ 0x38
 8002b4c:	f403 1340 	and.w	r3, r3, #3145728	@ 0x300000
    if (ADC_IS_SOFTWARE_START_INJECTED(hadc)                    &&
 8002b50:	2b00      	cmp	r3, #0
 8002b52:	d006      	beq.n	8002b62 <HAL_ADC_IRQHandler+0x128>
         HAL_IS_BIT_CLR(hadc->Instance->CR2, ADC_CR2_EOCS)) &&
 8002b54:	687b      	ldr	r3, [r7, #4]
 8002b56:	681b      	ldr	r3, [r3, #0]
 8002b58:	689b      	ldr	r3, [r3, #8]
 8002b5a:	f403 6380 	and.w	r3, r3, #1024	@ 0x400
        (HAL_IS_BIT_CLR(hadc->Instance->JSQR, ADC_JSQR_JL)  ||
 8002b5e:	2b00      	cmp	r3, #0
 8002b60:	d12b      	bne.n	8002bba <HAL_ADC_IRQHandler+0x180>
        (HAL_IS_BIT_CLR(hadc->Instance->CR1, ADC_CR1_JAUTO) &&
 8002b62:	687b      	ldr	r3, [r7, #4]
 8002b64:	681b      	ldr	r3, [r3, #0]
 8002b66:	685b      	ldr	r3, [r3, #4]
 8002b68:	f403 6380 	and.w	r3, r3, #1024	@ 0x400
         HAL_IS_BIT_CLR(hadc->Instance->CR2, ADC_CR2_EOCS)) &&
 8002b6c:	2b00      	cmp	r3, #0
 8002b6e:	d124      	bne.n	8002bba <HAL_ADC_IRQHandler+0x180>
         (ADC_IS_SOFTWARE_START_REGULAR(hadc)       &&
 8002b70:	687b      	ldr	r3, [r7, #4]
 8002b72:	681b      	ldr	r3, [r3, #0]
 8002b74:	689b      	ldr	r3, [r3, #8]
 8002b76:	f003 5340 	and.w	r3, r3, #805306368	@ 0x30000000
        (HAL_IS_BIT_CLR(hadc->Instance->CR1, ADC_CR1_JAUTO) &&
 8002b7a:	2b00      	cmp	r3, #0
 8002b7c:	d11d      	bne.n	8002bba <HAL_ADC_IRQHandler+0x180>
          (hadc->Init.ContinuousConvMode == DISABLE))))
 8002b7e:	687b      	ldr	r3, [r7, #4]
 8002b80:	7e1b      	ldrb	r3, [r3, #24]
         (ADC_IS_SOFTWARE_START_REGULAR(hadc)       &&
 8002b82:	2b00      	cmp	r3, #0
 8002b84:	d119      	bne.n	8002bba <HAL_ADC_IRQHandler+0x180>
    {
      /* Disable ADC end of single conversion interrupt on group injected */
      __HAL_ADC_DISABLE_IT(hadc, ADC_IT_JEOC);
 8002b86:	687b      	ldr	r3, [r7, #4]
 8002b88:	681b      	ldr	r3, [r3, #0]
 8002b8a:	685a      	ldr	r2, [r3, #4]
 8002b8c:	687b      	ldr	r3, [r7, #4]
 8002b8e:	681b      	ldr	r3, [r3, #0]
 8002b90:	f022 0280 	bic.w	r2, r2, #128	@ 0x80
 8002b94:	605a      	str	r2, [r3, #4]

      /* Set ADC state */
      CLEAR_BIT(hadc->State, HAL_ADC_STATE_INJ_BUSY);
 8002b96:	687b      	ldr	r3, [r7, #4]
 8002b98:	6c1b      	ldr	r3, [r3, #64]	@ 0x40
 8002b9a:	f423 5280 	bic.w	r2, r3, #4096	@ 0x1000
 8002b9e:	687b      	ldr	r3, [r7, #4]
 8002ba0:	641a      	str	r2, [r3, #64]	@ 0x40

      if (HAL_IS_BIT_CLR(hadc->State, HAL_ADC_STATE_REG_BUSY))
 8002ba2:	687b      	ldr	r3, [r7, #4]
 8002ba4:	6c1b      	ldr	r3, [r3, #64]	@ 0x40
 8002ba6:	f403 7380 	and.w	r3, r3, #256	@ 0x100
 8002baa:	2b00      	cmp	r3, #0
 8002bac:	d105      	bne.n	8002bba <HAL_ADC_IRQHandler+0x180>
      {
        SET_BIT(hadc->State, HAL_ADC_STATE_READY);
 8002bae:	687b      	ldr	r3, [r7, #4]
 8002bb0:	6c1b      	ldr	r3, [r3, #64]	@ 0x40
 8002bb2:	f043 0201 	orr.w	r2, r3, #1
 8002bb6:	687b      	ldr	r3, [r7, #4]
 8002bb8:	641a      	str	r2, [r3, #64]	@ 0x40
    /* Conversion complete callback */
    /* Conversion complete callback */
#if (USE_HAL_ADC_REGISTER_CALLBACKS == 1)
    hadc->InjectedConvCpltCallback(hadc);
#else
    HAL_ADCEx_InjectedConvCpltCallback(hadc);
 8002bba:	6878      	ldr	r0, [r7, #4]
 8002bbc:	f000 fc36 	bl	800342c <HAL_ADCEx_InjectedConvCpltCallback>
#endif /* USE_HAL_ADC_REGISTER_CALLBACKS */

    /* Clear injected group conversion flag */
    __HAL_ADC_CLEAR_FLAG(hadc, (ADC_FLAG_JSTRT | ADC_FLAG_JEOC));
 8002bc0:	687b      	ldr	r3, [r7, #4]
 8002bc2:	681b      	ldr	r3, [r3, #0]
 8002bc4:	f06f 020c 	mvn.w	r2, #12
 8002bc8:	601a      	str	r2, [r3, #0]
  }

  tmp1 = tmp_sr & ADC_FLAG_AWD;
 8002bca:	68fb      	ldr	r3, [r7, #12]
 8002bcc:	f003 0301 	and.w	r3, r3, #1
 8002bd0:	617b      	str	r3, [r7, #20]
  tmp2 = tmp_cr1 & ADC_IT_AWD;
 8002bd2:	68bb      	ldr	r3, [r7, #8]
 8002bd4:	f003 0340 	and.w	r3, r3, #64	@ 0x40
 8002bd8:	613b      	str	r3, [r7, #16]
  /* Check Analog watchdog flag */
  if (tmp1 && tmp2)
 8002bda:	697b      	ldr	r3, [r7, #20]
 8002bdc:	2b00      	cmp	r3, #0
 8002bde:	d017      	beq.n	8002c10 <HAL_ADC_IRQHandler+0x1d6>
 8002be0:	693b      	ldr	r3, [r7, #16]
 8002be2:	2b00      	cmp	r3, #0
 8002be4:	d014      	beq.n	8002c10 <HAL_ADC_IRQHandler+0x1d6>
  {
    if (__HAL_ADC_GET_FLAG(hadc, ADC_FLAG_AWD))
 8002be6:	687b      	ldr	r3, [r7, #4]
 8002be8:	681b      	ldr	r3, [r3, #0]
 8002bea:	681b      	ldr	r3, [r3, #0]
 8002bec:	f003 0301 	and.w	r3, r3, #1
 8002bf0:	2b01      	cmp	r3, #1
 8002bf2:	d10d      	bne.n	8002c10 <HAL_ADC_IRQHandler+0x1d6>
    {
      /* Set ADC state */
      SET_BIT(hadc->State, HAL_ADC_STATE_AWD1);
 8002bf4:	687b      	ldr	r3, [r7, #4]
 8002bf6:	6c1b      	ldr	r3, [r3, #64]	@ 0x40
 8002bf8:	f443 3280 	orr.w	r2, r3, #65536	@ 0x10000
 8002bfc:	687b      	ldr	r3, [r7, #4]
 8002bfe:	641a      	str	r2, [r3, #64]	@ 0x40

      /* Level out of window callback */
#if (USE_HAL_ADC_REGISTER_CALLBACKS == 1)
      hadc->LevelOutOfWindowCallback(hadc);
#else
      HAL_ADC_LevelOutOfWindowCallback(hadc);
 8002c00:	6878      	ldr	r0, [r7, #4]
 8002c02:	f000 f94f 	bl	8002ea4 <HAL_ADC_LevelOutOfWindowCallback>
#endif /* USE_HAL_ADC_REGISTER_CALLBACKS */

      /* Clear the ADC analog watchdog flag */
      __HAL_ADC_CLEAR_FLAG(hadc, ADC_FLAG_AWD);
 8002c06:	687b      	ldr	r3, [r7, #4]
 8002c08:	681b      	ldr	r3, [r3, #0]
 8002c0a:	f06f 0201 	mvn.w	r2, #1
 8002c0e:	601a      	str	r2, [r3, #0]
    }
  }

  tmp1 = tmp_sr & ADC_FLAG_OVR;
 8002c10:	68fb      	ldr	r3, [r7, #12]
 8002c12:	f003 0320 	and.w	r3, r3, #32
 8002c16:	617b      	str	r3, [r7, #20]
  tmp2 = tmp_cr1 & ADC_IT_OVR;
 8002c18:	68bb      	ldr	r3, [r7, #8]
 8002c1a:	f003 6380 	and.w	r3, r3, #67108864	@ 0x4000000
 8002c1e:	613b      	str	r3, [r7, #16]
  /* Check Overrun flag */
  if (tmp1 && tmp2)
 8002c20:	697b      	ldr	r3, [r7, #20]
 8002c22:	2b00      	cmp	r3, #0
 8002c24:	d015      	beq.n	8002c52 <HAL_ADC_IRQHandler+0x218>
 8002c26:	693b      	ldr	r3, [r7, #16]
 8002c28:	2b00      	cmp	r3, #0
 8002c2a:	d012      	beq.n	8002c52 <HAL_ADC_IRQHandler+0x218>
    /* Note: On STM32F4, ADC overrun can be set through other parameters    */
    /*       refer to description of parameter "EOCSelection" for more      */
    /*       details.                                                       */

    /* Set ADC error code to overrun */
    SET_BIT(hadc->ErrorCode, HAL_ADC_ERROR_OVR);
 8002c2c:	687b      	ldr	r3, [r7, #4]
 8002c2e:	6c5b      	ldr	r3, [r3, #68]	@ 0x44
 8002c30:	f043 0202 	orr.w	r2, r3, #2
 8002c34:	687b      	ldr	r3, [r7, #4]
 8002c36:	645a      	str	r2, [r3, #68]	@ 0x44

    /* Clear ADC overrun flag */
    __HAL_ADC_CLEAR_FLAG(hadc, ADC_FLAG_OVR);
 8002c38:	687b      	ldr	r3, [r7, #4]
 8002c3a:	681b      	ldr	r3, [r3, #0]
 8002c3c:	f06f 0220 	mvn.w	r2, #32
 8002c40:	601a      	str	r2, [r3, #0]

    /* Error callback */
#if (USE_HAL_ADC_REGISTER_CALLBACKS == 1)
    hadc->ErrorCallback(hadc);
#else
    HAL_ADC_ErrorCallback(hadc);
 8002c42:	6878      	ldr	r0, [r7, #4]
 8002c44:	f000 f938 	bl	8002eb8 <HAL_ADC_ErrorCallback>
#endif /* USE_HAL_ADC_REGISTER_CALLBACKS */

    /* Clear the Overrun flag */
    __HAL_ADC_CLEAR_FLAG(hadc, ADC_FLAG_OVR);
 8002c48:	687b      	ldr	r3, [r7, #4]
 8002c4a:	681b      	ldr	r3, [r3, #0]
 8002c4c:	f06f 0220 	mvn.w	r2, #32
 8002c50:	601a      	str	r2, [r3, #0]
  }
}
 8002c52:	bf00      	nop
 8002c54:	3718      	adds	r7, #24
 8002c56:	46bd      	mov	sp, r7
 8002c58:	bd80      	pop	{r7, pc}
	...

08002c5c <HAL_ADC_Start_DMA>:
  * @param  pData The destination Buffer address.
  * @param  Length The length of data to be transferred from ADC peripheral to memory.
  * @retval HAL status
  */
HAL_StatusTypeDef HAL_ADC_Start_DMA(ADC_HandleTypeDef *hadc, uint32_t *pData, uint32_t Length)
{
 8002c5c:	b580      	push	{r7, lr}
 8002c5e:	b086      	sub	sp, #24
 8002c60:	af00      	add	r7, sp, #0
 8002c62:	60f8      	str	r0, [r7, #12]
 8002c64:	60b9      	str	r1, [r7, #8]
 8002c66:	607a      	str	r2, [r7, #4]
  __IO uint32_t counter = 0U;
 8002c68:	2300      	movs	r3, #0
 8002c6a:	613b      	str	r3, [r7, #16]
  /* Check the parameters */
  assert_param(IS_FUNCTIONAL_STATE(hadc->Init.ContinuousConvMode));
  assert_param(IS_ADC_EXT_TRIG_EDGE(hadc->Init.ExternalTrigConvEdge));

  /* Process locked */
  __HAL_LOCK(hadc);
 8002c6c:	68fb      	ldr	r3, [r7, #12]
 8002c6e:	f893 303c 	ldrb.w	r3, [r3, #60]	@ 0x3c
 8002c72:	2b01      	cmp	r3, #1
 8002c74:	d101      	bne.n	8002c7a <HAL_ADC_Start_DMA+0x1e>
 8002c76:	2302      	movs	r3, #2
 8002c78:	e0e9      	b.n	8002e4e <HAL_ADC_Start_DMA+0x1f2>
 8002c7a:	68fb      	ldr	r3, [r7, #12]
 8002c7c:	2201      	movs	r2, #1
 8002c7e:	f883 203c 	strb.w	r2, [r3, #60]	@ 0x3c

  /* Enable the ADC peripheral */
  /* Check if ADC peripheral is disabled in order to enable it and wait during
  Tstab time the ADC's stabilization */
  if ((hadc->Instance->CR2 & ADC_CR2_ADON) != ADC_CR2_ADON)
 8002c82:	68fb      	ldr	r3, [r7, #12]
 8002c84:	681b      	ldr	r3, [r3, #0]
 8002c86:	689b      	ldr	r3, [r3, #8]
 8002c88:	f003 0301 	and.w	r3, r3, #1
 8002c8c:	2b01      	cmp	r3, #1
 8002c8e:	d018      	beq.n	8002cc2 <HAL_ADC_Start_DMA+0x66>
  {
    /* Enable the Peripheral */
    __HAL_ADC_ENABLE(hadc);
 8002c90:	68fb      	ldr	r3, [r7, #12]
 8002c92:	681b      	ldr	r3, [r3, #0]
 8002c94:	689a      	ldr	r2, [r3, #8]
 8002c96:	68fb      	ldr	r3, [r7, #12]
 8002c98:	681b      	ldr	r3, [r3, #0]
 8002c9a:	f042 0201 	orr.w	r2, r2, #1
 8002c9e:	609a      	str	r2, [r3, #8]

    /* Delay for ADC stabilization time */
    /* Compute number of CPU cycles to wait for */
    counter = (ADC_STAB_DELAY_US * (SystemCoreClock / 1000000U));
 8002ca0:	4b6d      	ldr	r3, [pc, #436]	@ (8002e58 <HAL_ADC_Start_DMA+0x1fc>)
 8002ca2:	681b      	ldr	r3, [r3, #0]
 8002ca4:	4a6d      	ldr	r2, [pc, #436]	@ (8002e5c <HAL_ADC_Start_DMA+0x200>)
 8002ca6:	fba2 2303 	umull	r2, r3, r2, r3
 8002caa:	0c9a      	lsrs	r2, r3, #18
 8002cac:	4613      	mov	r3, r2
 8002cae:	005b      	lsls	r3, r3, #1
 8002cb0:	4413      	add	r3, r2
 8002cb2:	613b      	str	r3, [r7, #16]
    while (counter != 0U)
 8002cb4:	e002      	b.n	8002cbc <HAL_ADC_Start_DMA+0x60>
    {
      counter--;
 8002cb6:	693b      	ldr	r3, [r7, #16]
 8002cb8:	3b01      	subs	r3, #1
 8002cba:	613b      	str	r3, [r7, #16]
    while (counter != 0U)
 8002cbc:	693b      	ldr	r3, [r7, #16]
 8002cbe:	2b00      	cmp	r3, #0
 8002cc0:	d1f9      	bne.n	8002cb6 <HAL_ADC_Start_DMA+0x5a>
    }
  }

  /* Check ADC DMA Mode                                                     */
  /* - disable the DMA Mode if it is already enabled                        */
  if ((hadc->Instance->CR2 & ADC_CR2_DMA) == ADC_CR2_DMA)
 8002cc2:	68fb      	ldr	r3, [r7, #12]
 8002cc4:	681b      	ldr	r3, [r3, #0]
 8002cc6:	689b      	ldr	r3, [r3, #8]
 8002cc8:	f403 7380 	and.w	r3, r3, #256	@ 0x100
 8002ccc:	f5b3 7f80 	cmp.w	r3, #256	@ 0x100
 8002cd0:	d107      	bne.n	8002ce2 <HAL_ADC_Start_DMA+0x86>
  {
    CLEAR_BIT(hadc->Instance->CR2, ADC_CR2_DMA);
 8002cd2:	68fb      	ldr	r3, [r7, #12]
 8002cd4:	681b      	ldr	r3, [r3, #0]
 8002cd6:	689a      	ldr	r2, [r3, #8]
 8002cd8:	68fb      	ldr	r3, [r7, #12]
 8002cda:	681b      	ldr	r3, [r3, #0]
 8002cdc:	f422 7280 	bic.w	r2, r2, #256	@ 0x100
 8002ce0:	609a      	str	r2, [r3, #8]
  }

  /* Start conversion if ADC is effectively enabled */
  if (HAL_IS_BIT_SET(hadc->Instance->CR2, ADC_CR2_ADON))
 8002ce2:	68fb      	ldr	r3, [r7, #12]
 8002ce4:	681b      	ldr	r3, [r3, #0]
 8002ce6:	689b      	ldr	r3, [r3, #8]
 8002ce8:	f003 0301 	and.w	r3, r3, #1
 8002cec:	2b01      	cmp	r3, #1
 8002cee:	f040 80a1 	bne.w	8002e34 <HAL_ADC_Start_DMA+0x1d8>
  {
    /* Set ADC state                                                          */
    /* - Clear state bitfield related to regular group conversion results     */
    /* - Set state bitfield related to regular group operation                */
    ADC_STATE_CLR_SET(hadc->State,
 8002cf2:	68fb      	ldr	r3, [r7, #12]
 8002cf4:	6c1b      	ldr	r3, [r3, #64]	@ 0x40
 8002cf6:	f423 63e0 	bic.w	r3, r3, #1792	@ 0x700
 8002cfa:	f023 0301 	bic.w	r3, r3, #1
 8002cfe:	f443 7280 	orr.w	r2, r3, #256	@ 0x100
 8002d02:	68fb      	ldr	r3, [r7, #12]
 8002d04:	641a      	str	r2, [r3, #64]	@ 0x40
                      HAL_ADC_STATE_READY | HAL_ADC_STATE_REG_EOC | HAL_ADC_STATE_REG_OVR,
                      HAL_ADC_STATE_REG_BUSY);

    /* If conversions on group regular are also triggering group injected,    */
    /* update ADC state.                                                      */
    if (READ_BIT(hadc->Instance->CR1, ADC_CR1_JAUTO) != RESET)
 8002d06:	68fb      	ldr	r3, [r7, #12]
 8002d08:	681b      	ldr	r3, [r3, #0]
 8002d0a:	685b      	ldr	r3, [r3, #4]
 8002d0c:	f403 6380 	and.w	r3, r3, #1024	@ 0x400
 8002d10:	2b00      	cmp	r3, #0
 8002d12:	d007      	beq.n	8002d24 <HAL_ADC_Start_DMA+0xc8>
    {
      ADC_STATE_CLR_SET(hadc->State, HAL_ADC_STATE_INJ_EOC, HAL_ADC_STATE_INJ_BUSY);
 8002d14:	68fb      	ldr	r3, [r7, #12]
 8002d16:	6c1b      	ldr	r3, [r3, #64]	@ 0x40
 8002d18:	f423 5340 	bic.w	r3, r3, #12288	@ 0x3000
 8002d1c:	f443 5280 	orr.w	r2, r3, #4096	@ 0x1000
 8002d20:	68fb      	ldr	r3, [r7, #12]
 8002d22:	641a      	str	r2, [r3, #64]	@ 0x40
    }

    /* State machine update: Check if an injected conversion is ongoing */
    if (HAL_IS_BIT_SET(hadc->State, HAL_ADC_STATE_INJ_BUSY))
 8002d24:	68fb      	ldr	r3, [r7, #12]
 8002d26:	6c1b      	ldr	r3, [r3, #64]	@ 0x40
 8002d28:	f403 5380 	and.w	r3, r3, #4096	@ 0x1000
 8002d2c:	f5b3 5f80 	cmp.w	r3, #4096	@ 0x1000
 8002d30:	d106      	bne.n	8002d40 <HAL_ADC_Start_DMA+0xe4>
    {
      /* Reset ADC error code fields related to conversions on group regular */
      CLEAR_BIT(hadc->ErrorCode, (HAL_ADC_ERROR_OVR | HAL_ADC_ERROR_DMA));
 8002d32:	68fb      	ldr	r3, [r7, #12]
 8002d34:	6c5b      	ldr	r3, [r3, #68]	@ 0x44
 8002d36:	f023 0206 	bic.w	r2, r3, #6
 8002d3a:	68fb      	ldr	r3, [r7, #12]
 8002d3c:	645a      	str	r2, [r3, #68]	@ 0x44
 8002d3e:	e002      	b.n	8002d46 <HAL_ADC_Start_DMA+0xea>
    }
    else
    {
      /* Reset ADC all error code fields */
      ADC_CLEAR_ERRORCODE(hadc);
 8002d40:	68fb      	ldr	r3, [r7, #12]
 8002d42:	2200      	movs	r2, #0
 8002d44:	645a      	str	r2, [r3, #68]	@ 0x44
    }

    /* Process unlocked */
    /* Unlock before starting ADC conversions: in case of potential           */
    /* interruption, to let the process to ADC IRQ Handler.                   */
    __HAL_UNLOCK(hadc);
 8002d46:	68fb      	ldr	r3, [r7, #12]
 8002d48:	2200      	movs	r2, #0
 8002d4a:	f883 203c 	strb.w	r2, [r3, #60]	@ 0x3c

    /* Pointer to the common control register to which is belonging hadc    */
    /* (Depending on STM32F4 product, there may be up to 3 ADCs and 1 common */
    /* control register)                                                    */
    tmpADC_Common = ADC_COMMON_REGISTER(hadc);
 8002d4e:	4b44      	ldr	r3, [pc, #272]	@ (8002e60 <HAL_ADC_Start_DMA+0x204>)
 8002d50:	617b      	str	r3, [r7, #20]

    /* Set the DMA transfer complete callback */
    hadc->DMA_Handle->XferCpltCallback = ADC_DMAConvCplt;
 8002d52:	68fb      	ldr	r3, [r7, #12]
 8002d54:	6b9b      	ldr	r3, [r3, #56]	@ 0x38
 8002d56:	4a43      	ldr	r2, [pc, #268]	@ (8002e64 <HAL_ADC_Start_DMA+0x208>)
 8002d58:	63da      	str	r2, [r3, #60]	@ 0x3c

    /* Set the DMA half transfer complete callback */
    hadc->DMA_Handle->XferHalfCpltCallback = ADC_DMAHalfConvCplt;
 8002d5a:	68fb      	ldr	r3, [r7, #12]
 8002d5c:	6b9b      	ldr	r3, [r3, #56]	@ 0x38
 8002d5e:	4a42      	ldr	r2, [pc, #264]	@ (8002e68 <HAL_ADC_Start_DMA+0x20c>)
 8002d60:	641a      	str	r2, [r3, #64]	@ 0x40

    /* Set the DMA error callback */
    hadc->DMA_Handle->XferErrorCallback = ADC_DMAError;
 8002d62:	68fb      	ldr	r3, [r7, #12]
 8002d64:	6b9b      	ldr	r3, [r3, #56]	@ 0x38
 8002d66:	4a41      	ldr	r2, [pc, #260]	@ (8002e6c <HAL_ADC_Start_DMA+0x210>)
 8002d68:	64da      	str	r2, [r3, #76]	@ 0x4c
    /* Manage ADC and DMA start: ADC overrun interruption, DMA start, ADC     */
    /* start (in case of SW start):                                           */

    /* Clear regular group conversion flag and overrun flag */
    /* (To ensure of no unknown state from potential previous ADC operations) */
    __HAL_ADC_CLEAR_FLAG(hadc, ADC_FLAG_EOC | ADC_FLAG_OVR);
 8002d6a:	68fb      	ldr	r3, [r7, #12]
 8002d6c:	681b      	ldr	r3, [r3, #0]
 8002d6e:	f06f 0222 	mvn.w	r2, #34	@ 0x22
 8002d72:	601a      	str	r2, [r3, #0]

    /* Enable ADC overrun interrupt */
    __HAL_ADC_ENABLE_IT(hadc, ADC_IT_OVR);
 8002d74:	68fb      	ldr	r3, [r7, #12]
 8002d76:	681b      	ldr	r3, [r3, #0]
 8002d78:	685a      	ldr	r2, [r3, #4]
 8002d7a:	68fb      	ldr	r3, [r7, #12]
 8002d7c:	681b      	ldr	r3, [r3, #0]
 8002d7e:	f042 6280 	orr.w	r2, r2, #67108864	@ 0x4000000
 8002d82:	605a      	str	r2, [r3, #4]

    /* Enable ADC DMA mode */
    hadc->Instance->CR2 |= ADC_CR2_DMA;
 8002d84:	68fb      	ldr	r3, [r7, #12]
 8002d86:	681b      	ldr	r3, [r3, #0]
 8002d88:	689a      	ldr	r2, [r3, #8]
 8002d8a:	68fb      	ldr	r3, [r7, #12]
 8002d8c:	681b      	ldr	r3, [r3, #0]
 8002d8e:	f442 7280 	orr.w	r2, r2, #256	@ 0x100
 8002d92:	609a      	str	r2, [r3, #8]

    /* Start the DMA channel */
    HAL_DMA_Start_IT(hadc->DMA_Handle, (uint32_t)&hadc->Instance->DR, (uint32_t)pData, Length);
 8002d94:	68fb      	ldr	r3, [r7, #12]
 8002d96:	6b98      	ldr	r0, [r3, #56]	@ 0x38
 8002d98:	68fb      	ldr	r3, [r7, #12]
 8002d9a:	681b      	ldr	r3, [r3, #0]
 8002d9c:	334c      	adds	r3, #76	@ 0x4c
 8002d9e:	4619      	mov	r1, r3
 8002da0:	68ba      	ldr	r2, [r7, #8]
 8002da2:	687b      	ldr	r3, [r7, #4]
 8002da4:	f000 fd86 	bl	80038b4 <HAL_DMA_Start_IT>

    /* Check if Multimode enabled */
    if (HAL_IS_BIT_CLR(tmpADC_Common->CCR, ADC_CCR_MULTI))
 8002da8:	697b      	ldr	r3, [r7, #20]
 8002daa:	685b      	ldr	r3, [r3, #4]
 8002dac:	f003 031f 	and.w	r3, r3, #31
 8002db0:	2b00      	cmp	r3, #0
 8002db2:	d12a      	bne.n	8002e0a <HAL_ADC_Start_DMA+0x1ae>
    {
#if defined(ADC2) && defined(ADC3)
      if ((hadc->Instance == ADC1) || ((hadc->Instance == ADC2) && ((ADC->CCR & ADC_CCR_MULTI_Msk) < ADC_CCR_MULTI_0)) \
 8002db4:	68fb      	ldr	r3, [r7, #12]
 8002db6:	681b      	ldr	r3, [r3, #0]
 8002db8:	4a2d      	ldr	r2, [pc, #180]	@ (8002e70 <HAL_ADC_Start_DMA+0x214>)
 8002dba:	4293      	cmp	r3, r2
 8002dbc:	d015      	beq.n	8002dea <HAL_ADC_Start_DMA+0x18e>
 8002dbe:	68fb      	ldr	r3, [r7, #12]
 8002dc0:	681b      	ldr	r3, [r3, #0]
 8002dc2:	4a2c      	ldr	r2, [pc, #176]	@ (8002e74 <HAL_ADC_Start_DMA+0x218>)
 8002dc4:	4293      	cmp	r3, r2
 8002dc6:	d105      	bne.n	8002dd4 <HAL_ADC_Start_DMA+0x178>
 8002dc8:	4b25      	ldr	r3, [pc, #148]	@ (8002e60 <HAL_ADC_Start_DMA+0x204>)
 8002dca:	685b      	ldr	r3, [r3, #4]
 8002dcc:	f003 031f 	and.w	r3, r3, #31
 8002dd0:	2b00      	cmp	r3, #0
 8002dd2:	d00a      	beq.n	8002dea <HAL_ADC_Start_DMA+0x18e>
          || ((hadc->Instance == ADC3) && ((ADC->CCR & ADC_CCR_MULTI_Msk) < ADC_CCR_MULTI_4)))
 8002dd4:	68fb      	ldr	r3, [r7, #12]
 8002dd6:	681b      	ldr	r3, [r3, #0]
 8002dd8:	4a27      	ldr	r2, [pc, #156]	@ (8002e78 <HAL_ADC_Start_DMA+0x21c>)
 8002dda:	4293      	cmp	r3, r2
 8002ddc:	d136      	bne.n	8002e4c <HAL_ADC_Start_DMA+0x1f0>
 8002dde:	4b20      	ldr	r3, [pc, #128]	@ (8002e60 <HAL_ADC_Start_DMA+0x204>)
 8002de0:	685b      	ldr	r3, [r3, #4]
 8002de2:	f003 0310 	and.w	r3, r3, #16
 8002de6:	2b00      	cmp	r3, #0
 8002de8:	d130      	bne.n	8002e4c <HAL_ADC_Start_DMA+0x1f0>
      {
#endif /* ADC2 || ADC3 */
        /* if no external trigger present enable software conversion of regular channels */
        if ((hadc->Instance->CR2 & ADC_CR2_EXTEN) == RESET)
 8002dea:	68fb      	ldr	r3, [r7, #12]
 8002dec:	681b      	ldr	r3, [r3, #0]
 8002dee:	689b      	ldr	r3, [r3, #8]
 8002df0:	f003 5340 	and.w	r3, r3, #805306368	@ 0x30000000
 8002df4:	2b00      	cmp	r3, #0
 8002df6:	d129      	bne.n	8002e4c <HAL_ADC_Start_DMA+0x1f0>
        {
          /* Enable the selected ADC software conversion for regular group */
          hadc->Instance->CR2 |= (uint32_t)ADC_CR2_SWSTART;
 8002df8:	68fb      	ldr	r3, [r7, #12]
 8002dfa:	681b      	ldr	r3, [r3, #0]
 8002dfc:	689a      	ldr	r2, [r3, #8]
 8002dfe:	68fb      	ldr	r3, [r7, #12]
 8002e00:	681b      	ldr	r3, [r3, #0]
 8002e02:	f042 4280 	orr.w	r2, r2, #1073741824	@ 0x40000000
 8002e06:	609a      	str	r2, [r3, #8]
 8002e08:	e020      	b.n	8002e4c <HAL_ADC_Start_DMA+0x1f0>
#endif /* ADC2 || ADC3 */
    }
    else
    {
      /* if instance of handle correspond to ADC1 and  no external trigger present enable software conversion of regular channels */
      if ((hadc->Instance == ADC1) && ((hadc->Instance->CR2 & ADC_CR2_EXTEN) == RESET))
 8002e0a:	68fb      	ldr	r3, [r7, #12]
 8002e0c:	681b      	ldr	r3, [r3, #0]
 8002e0e:	4a18      	ldr	r2, [pc, #96]	@ (8002e70 <HAL_ADC_Start_DMA+0x214>)
 8002e10:	4293      	cmp	r3, r2
 8002e12:	d11b      	bne.n	8002e4c <HAL_ADC_Start_DMA+0x1f0>
 8002e14:	68fb      	ldr	r3, [r7, #12]
 8002e16:	681b      	ldr	r3, [r3, #0]
 8002e18:	689b      	ldr	r3, [r3, #8]
 8002e1a:	f003 5340 	and.w	r3, r3, #805306368	@ 0x30000000
 8002e1e:	2b00      	cmp	r3, #0
 8002e20:	d114      	bne.n	8002e4c <HAL_ADC_Start_DMA+0x1f0>
      {
        /* Enable the selected ADC software conversion for regular group */
        hadc->Instance->CR2 |= (uint32_t)ADC_CR2_SWSTART;
 8002e22:	68fb      	ldr	r3, [r7, #12]
 8002e24:	681b      	ldr	r3, [r3, #0]
 8002e26:	689a      	ldr	r2, [r3, #8]
 8002e28:	68fb      	ldr	r3, [r7, #12]
 8002e2a:	681b      	ldr	r3, [r3, #0]
 8002e2c:	f042 4280 	orr.w	r2, r2, #1073741824	@ 0x40000000
 8002e30:	609a      	str	r2, [r3, #8]
 8002e32:	e00b      	b.n	8002e4c <HAL_ADC_Start_DMA+0x1f0>
    }
  }
  else
  {
    /* Update ADC state machine to error */
    SET_BIT(hadc->State, HAL_ADC_STATE_ERROR_INTERNAL);
 8002e34:	68fb      	ldr	r3, [r7, #12]
 8002e36:	6c1b      	ldr	r3, [r3, #64]	@ 0x40
 8002e38:	f043 0210 	orr.w	r2, r3, #16
 8002e3c:	68fb      	ldr	r3, [r7, #12]
 8002e3e:	641a      	str	r2, [r3, #64]	@ 0x40

    /* Set ADC error code to ADC IP internal error */
    SET_BIT(hadc->ErrorCode, HAL_ADC_ERROR_INTERNAL);
 8002e40:	68fb      	ldr	r3, [r7, #12]
 8002e42:	6c5b      	ldr	r3, [r3, #68]	@ 0x44
 8002e44:	f043 0201 	orr.w	r2, r3, #1
 8002e48:	68fb      	ldr	r3, [r7, #12]
 8002e4a:	645a      	str	r2, [r3, #68]	@ 0x44
  }

  /* Return function status */
  return HAL_OK;
 8002e4c:	2300      	movs	r3, #0
}
 8002e4e:	4618      	mov	r0, r3
 8002e50:	3718      	adds	r7, #24
 8002e52:	46bd      	mov	sp, r7
 8002e54:	bd80      	pop	{r7, pc}
 8002e56:	bf00      	nop
 8002e58:	20000008 	.word	0x20000008
 8002e5c:	431bde83 	.word	0x431bde83
 8002e60:	40012300 	.word	0x40012300
 8002e64:	08003329 	.word	0x08003329
 8002e68:	080033e3 	.word	0x080033e3
 8002e6c:	080033ff 	.word	0x080033ff
 8002e70:	40012000 	.word	0x40012000
 8002e74:	40012100 	.word	0x40012100
 8002e78:	40012200 	.word	0x40012200

08002e7c <HAL_ADC_ConvCpltCallback>:
  * @param  hadc pointer to a ADC_HandleTypeDef structure that contains
  *         the configuration information for the specified ADC.
  * @retval None
  */
__weak void HAL_ADC_ConvCpltCallback(ADC_HandleTypeDef *hadc)
{
 8002e7c:	b480      	push	{r7}
 8002e7e:	b083      	sub	sp, #12
 8002e80:	af00      	add	r7, sp, #0
 8002e82:	6078      	str	r0, [r7, #4]
  /* Prevent unused argument(s) compilation warning */
  UNUSED(hadc);
  /* NOTE : This function Should not be modified, when the callback is needed,
            the HAL_ADC_ConvCpltCallback could be implemented in the user file
   */
}
 8002e84:	bf00      	nop
 8002e86:	370c      	adds	r7, #12
 8002e88:	46bd      	mov	sp, r7
 8002e8a:	f85d 7b04 	ldr.w	r7, [sp], #4
 8002e8e:	4770      	bx	lr

08002e90 <HAL_ADC_ConvHalfCpltCallback>:
  * @param  hadc pointer to a ADC_HandleTypeDef structure that contains
  *         the configuration information for the specified ADC.
  * @retval None
  */
__weak void HAL_ADC_ConvHalfCpltCallback(ADC_HandleTypeDef *hadc)
{
 8002e90:	b480      	push	{r7}
 8002e92:	b083      	sub	sp, #12
 8002e94:	af00      	add	r7, sp, #0
 8002e96:	6078      	str	r0, [r7, #4]
  /* Prevent unused argument(s) compilation warning */
  UNUSED(hadc);
  /* NOTE : This function Should not be modified, when the callback is needed,
            the HAL_ADC_ConvHalfCpltCallback could be implemented in the user file
   */
}
 8002e98:	bf00      	nop
 8002e9a:	370c      	adds	r7, #12
 8002e9c:	46bd      	mov	sp, r7
 8002e9e:	f85d 7b04 	ldr.w	r7, [sp], #4
 8002ea2:	4770      	bx	lr

08002ea4 <HAL_ADC_LevelOutOfWindowCallback>:
  * @param  hadc pointer to a ADC_HandleTypeDef structure that contains
  *         the configuration information for the specified ADC.
  * @retval None
  */
__weak void HAL_ADC_LevelOutOfWindowCallback(ADC_HandleTypeDef *hadc)
{
 8002ea4:	b480      	push	{r7}
 8002ea6:	b083      	sub	sp, #12
 8002ea8:	af00      	add	r7, sp, #0
 8002eaa:	6078      	str	r0, [r7, #4]
  /* Prevent unused argument(s) compilation warning */
  UNUSED(hadc);
  /* NOTE : This function Should not be modified, when the callback is needed,
            the HAL_ADC_LevelOoutOfWindowCallback could be implemented in the user file
   */
}
 8002eac:	bf00      	nop
 8002eae:	370c      	adds	r7, #12
 8002eb0:	46bd      	mov	sp, r7
 8002eb2:	f85d 7b04 	ldr.w	r7, [sp], #4
 8002eb6:	4770      	bx	lr

08002eb8 <HAL_ADC_ErrorCallback>:
  * @param  hadc pointer to a ADC_HandleTypeDef structure that contains
  *         the configuration information for the specified ADC.
  * @retval None
  */
__weak void HAL_ADC_ErrorCallback(ADC_HandleTypeDef *hadc)
{
 8002eb8:	b480      	push	{r7}
 8002eba:	b083      	sub	sp, #12
 8002ebc:	af00      	add	r7, sp, #0
 8002ebe:	6078      	str	r0, [r7, #4]
  /* Prevent unused argument(s) compilation warning */
  UNUSED(hadc);
  /* NOTE : This function Should not be modified, when the callback is needed,
            the HAL_ADC_ErrorCallback could be implemented in the user file
   */
}
 8002ec0:	bf00      	nop
 8002ec2:	370c      	adds	r7, #12
 8002ec4:	46bd      	mov	sp, r7
 8002ec6:	f85d 7b04 	ldr.w	r7, [sp], #4
 8002eca:	4770      	bx	lr

08002ecc <HAL_ADC_ConfigChannel>:
*         the configuration information for the specified ADC.
* @param  sConfig ADC configuration structure.
* @retval HAL status
*/
HAL_StatusTypeDef HAL_ADC_ConfigChannel(ADC_HandleTypeDef *hadc, ADC_ChannelConfTypeDef *sConfig)
{
 8002ecc:	b480      	push	{r7}
 8002ece:	b085      	sub	sp, #20
 8002ed0:	af00      	add	r7, sp, #0
 8002ed2:	6078      	str	r0, [r7, #4]
 8002ed4:	6039      	str	r1, [r7, #0]
  __IO uint32_t counter = 0U;
 8002ed6:	2300      	movs	r3, #0
 8002ed8:	60bb      	str	r3, [r7, #8]
  assert_param(IS_ADC_CHANNEL(sConfig->Channel));
  assert_param(IS_ADC_REGULAR_RANK(sConfig->Rank));
  assert_param(IS_ADC_SAMPLE_TIME(sConfig->SamplingTime));

  /* Process locked */
  __HAL_LOCK(hadc);
 8002eda:	687b      	ldr	r3, [r7, #4]
 8002edc:	f893 303c 	ldrb.w	r3, [r3, #60]	@ 0x3c
 8002ee0:	2b01      	cmp	r3, #1
 8002ee2:	d101      	bne.n	8002ee8 <HAL_ADC_ConfigChannel+0x1c>
 8002ee4:	2302      	movs	r3, #2
 8002ee6:	e113      	b.n	8003110 <HAL_ADC_ConfigChannel+0x244>
 8002ee8:	687b      	ldr	r3, [r7, #4]
 8002eea:	2201      	movs	r2, #1
 8002eec:	f883 203c 	strb.w	r2, [r3, #60]	@ 0x3c

  /* if ADC_Channel_10 ... ADC_Channel_18 is selected */
  if (sConfig->Channel > ADC_CHANNEL_9)
 8002ef0:	683b      	ldr	r3, [r7, #0]
 8002ef2:	681b      	ldr	r3, [r3, #0]
 8002ef4:	2b09      	cmp	r3, #9
 8002ef6:	d925      	bls.n	8002f44 <HAL_ADC_ConfigChannel+0x78>
  {
    /* Clear the old sample time */
    hadc->Instance->SMPR1 &= ~ADC_SMPR1(ADC_SMPR1_SMP10, sConfig->Channel);
 8002ef8:	687b      	ldr	r3, [r7, #4]
 8002efa:	681b      	ldr	r3, [r3, #0]
 8002efc:	68d9      	ldr	r1, [r3, #12]
 8002efe:	683b      	ldr	r3, [r7, #0]
 8002f00:	681b      	ldr	r3, [r3, #0]
 8002f02:	b29b      	uxth	r3, r3
 8002f04:	461a      	mov	r2, r3
 8002f06:	4613      	mov	r3, r2
 8002f08:	005b      	lsls	r3, r3, #1
 8002f0a:	4413      	add	r3, r2
 8002f0c:	3b1e      	subs	r3, #30
 8002f0e:	2207      	movs	r2, #7
 8002f10:	fa02 f303 	lsl.w	r3, r2, r3
 8002f14:	43da      	mvns	r2, r3
 8002f16:	687b      	ldr	r3, [r7, #4]
 8002f18:	681b      	ldr	r3, [r3, #0]
 8002f1a:	400a      	ands	r2, r1
 8002f1c:	60da      	str	r2, [r3, #12]

    /* Set the new sample time */
    hadc->Instance->SMPR1 |= ADC_SMPR1(sConfig->SamplingTime, sConfig->Channel);
 8002f1e:	687b      	ldr	r3, [r7, #4]
 8002f20:	681b      	ldr	r3, [r3, #0]
 8002f22:	68d9      	ldr	r1, [r3, #12]
 8002f24:	683b      	ldr	r3, [r7, #0]
 8002f26:	689a      	ldr	r2, [r3, #8]
 8002f28:	683b      	ldr	r3, [r7, #0]
 8002f2a:	681b      	ldr	r3, [r3, #0]
 8002f2c:	b29b      	uxth	r3, r3
 8002f2e:	4618      	mov	r0, r3
 8002f30:	4603      	mov	r3, r0
 8002f32:	005b      	lsls	r3, r3, #1
 8002f34:	4403      	add	r3, r0
 8002f36:	3b1e      	subs	r3, #30
 8002f38:	409a      	lsls	r2, r3
 8002f3a:	687b      	ldr	r3, [r7, #4]
 8002f3c:	681b      	ldr	r3, [r3, #0]
 8002f3e:	430a      	orrs	r2, r1
 8002f40:	60da      	str	r2, [r3, #12]
 8002f42:	e022      	b.n	8002f8a <HAL_ADC_ConfigChannel+0xbe>
  }
  else /* ADC_Channel include in ADC_Channel_[0..9] */
  {
    /* Clear the old sample time */
    hadc->Instance->SMPR2 &= ~ADC_SMPR2(ADC_SMPR2_SMP0, sConfig->Channel);
 8002f44:	687b      	ldr	r3, [r7, #4]
 8002f46:	681b      	ldr	r3, [r3, #0]
 8002f48:	6919      	ldr	r1, [r3, #16]
 8002f4a:	683b      	ldr	r3, [r7, #0]
 8002f4c:	681b      	ldr	r3, [r3, #0]
 8002f4e:	b29b      	uxth	r3, r3
 8002f50:	461a      	mov	r2, r3
 8002f52:	4613      	mov	r3, r2
 8002f54:	005b      	lsls	r3, r3, #1
 8002f56:	4413      	add	r3, r2
 8002f58:	2207      	movs	r2, #7
 8002f5a:	fa02 f303 	lsl.w	r3, r2, r3
 8002f5e:	43da      	mvns	r2, r3
 8002f60:	687b      	ldr	r3, [r7, #4]
 8002f62:	681b      	ldr	r3, [r3, #0]
 8002f64:	400a      	ands	r2, r1
 8002f66:	611a      	str	r2, [r3, #16]

    /* Set the new sample time */
    hadc->Instance->SMPR2 |= ADC_SMPR2(sConfig->SamplingTime, sConfig->Channel);
 8002f68:	687b      	ldr	r3, [r7, #4]
 8002f6a:	681b      	ldr	r3, [r3, #0]
 8002f6c:	6919      	ldr	r1, [r3, #16]
 8002f6e:	683b      	ldr	r3, [r7, #0]
 8002f70:	689a      	ldr	r2, [r3, #8]
 8002f72:	683b      	ldr	r3, [r7, #0]
 8002f74:	681b      	ldr	r3, [r3, #0]
 8002f76:	b29b      	uxth	r3, r3
 8002f78:	4618      	mov	r0, r3
 8002f7a:	4603      	mov	r3, r0
 8002f7c:	005b      	lsls	r3, r3, #1
 8002f7e:	4403      	add	r3, r0
 8002f80:	409a      	lsls	r2, r3
 8002f82:	687b      	ldr	r3, [r7, #4]
 8002f84:	681b      	ldr	r3, [r3, #0]
 8002f86:	430a      	orrs	r2, r1
 8002f88:	611a      	str	r2, [r3, #16]
  }

  /* For Rank 1 to 6 */
  if (sConfig->Rank < 7U)
 8002f8a:	683b      	ldr	r3, [r7, #0]
 8002f8c:	685b      	ldr	r3, [r3, #4]
 8002f8e:	2b06      	cmp	r3, #6
 8002f90:	d824      	bhi.n	8002fdc <HAL_ADC_ConfigChannel+0x110>
  {
    /* Clear the old SQx bits for the selected rank */
    hadc->Instance->SQR3 &= ~ADC_SQR3_RK(ADC_SQR3_SQ1, sConfig->Rank);
 8002f92:	687b      	ldr	r3, [r7, #4]
 8002f94:	681b      	ldr	r3, [r3, #0]
 8002f96:	6b59      	ldr	r1, [r3, #52]	@ 0x34
 8002f98:	683b      	ldr	r3, [r7, #0]
 8002f9a:	685a      	ldr	r2, [r3, #4]
 8002f9c:	4613      	mov	r3, r2
 8002f9e:	009b      	lsls	r3, r3, #2
 8002fa0:	4413      	add	r3, r2
 8002fa2:	3b05      	subs	r3, #5
 8002fa4:	221f      	movs	r2, #31
 8002fa6:	fa02 f303 	lsl.w	r3, r2, r3
 8002faa:	43da      	mvns	r2, r3
 8002fac:	687b      	ldr	r3, [r7, #4]
 8002fae:	681b      	ldr	r3, [r3, #0]
 8002fb0:	400a      	ands	r2, r1
 8002fb2:	635a      	str	r2, [r3, #52]	@ 0x34

    /* Set the SQx bits for the selected rank */
    hadc->Instance->SQR3 |= ADC_SQR3_RK(sConfig->Channel, sConfig->Rank);
 8002fb4:	687b      	ldr	r3, [r7, #4]
 8002fb6:	681b      	ldr	r3, [r3, #0]
 8002fb8:	6b59      	ldr	r1, [r3, #52]	@ 0x34
 8002fba:	683b      	ldr	r3, [r7, #0]
 8002fbc:	681b      	ldr	r3, [r3, #0]
 8002fbe:	b29b      	uxth	r3, r3
 8002fc0:	4618      	mov	r0, r3
 8002fc2:	683b      	ldr	r3, [r7, #0]
 8002fc4:	685a      	ldr	r2, [r3, #4]
 8002fc6:	4613      	mov	r3, r2
 8002fc8:	009b      	lsls	r3, r3, #2
 8002fca:	4413      	add	r3, r2
 8002fcc:	3b05      	subs	r3, #5
 8002fce:	fa00 f203 	lsl.w	r2, r0, r3
 8002fd2:	687b      	ldr	r3, [r7, #4]
 8002fd4:	681b      	ldr	r3, [r3, #0]
 8002fd6:	430a      	orrs	r2, r1
 8002fd8:	635a      	str	r2, [r3, #52]	@ 0x34
 8002fda:	e04c      	b.n	8003076 <HAL_ADC_ConfigChannel+0x1aa>
  }
  /* For Rank 7 to 12 */
  else if (sConfig->Rank < 13U)
 8002fdc:	683b      	ldr	r3, [r7, #0]
 8002fde:	685b      	ldr	r3, [r3, #4]
 8002fe0:	2b0c      	cmp	r3, #12
 8002fe2:	d824      	bhi.n	800302e <HAL_ADC_ConfigChannel+0x162>
  {
    /* Clear the old SQx bits for the selected rank */
    hadc->Instance->SQR2 &= ~ADC_SQR2_RK(ADC_SQR2_SQ7, sConfig->Rank);
 8002fe4:	687b      	ldr	r3, [r7, #4]
 8002fe6:	681b      	ldr	r3, [r3, #0]
 8002fe8:	6b19      	ldr	r1, [r3, #48]	@ 0x30
 8002fea:	683b      	ldr	r3, [r7, #0]
 8002fec:	685a      	ldr	r2, [r3, #4]
 8002fee:	4613      	mov	r3, r2
 8002ff0:	009b      	lsls	r3, r3, #2
 8002ff2:	4413      	add	r3, r2
 8002ff4:	3b23      	subs	r3, #35	@ 0x23
 8002ff6:	221f      	movs	r2, #31
 8002ff8:	fa02 f303 	lsl.w	r3, r2, r3
 8002ffc:	43da      	mvns	r2, r3
 8002ffe:	687b      	ldr	r3, [r7, #4]
 8003000:	681b      	ldr	r3, [r3, #0]
 8003002:	400a      	ands	r2, r1
 8003004:	631a      	str	r2, [r3, #48]	@ 0x30

    /* Set the SQx bits for the selected rank */
    hadc->Instance->SQR2 |= ADC_SQR2_RK(sConfig->Channel, sConfig->Rank);
 8003006:	687b      	ldr	r3, [r7, #4]
 8003008:	681b      	ldr	r3, [r3, #0]
 800300a:	6b19      	ldr	r1, [r3, #48]	@ 0x30
 800300c:	683b      	ldr	r3, [r7, #0]
 800300e:	681b      	ldr	r3, [r3, #0]
 8003010:	b29b      	uxth	r3, r3
 8003012:	4618      	mov	r0, r3
 8003014:	683b      	ldr	r3, [r7, #0]
 8003016:	685a      	ldr	r2, [r3, #4]
 8003018:	4613      	mov	r3, r2
 800301a:	009b      	lsls	r3, r3, #2
 800301c:	4413      	add	r3, r2
 800301e:	3b23      	subs	r3, #35	@ 0x23
 8003020:	fa00 f203 	lsl.w	r2, r0, r3
 8003024:	687b      	ldr	r3, [r7, #4]
 8003026:	681b      	ldr	r3, [r3, #0]
 8003028:	430a      	orrs	r2, r1
 800302a:	631a      	str	r2, [r3, #48]	@ 0x30
 800302c:	e023      	b.n	8003076 <HAL_ADC_ConfigChannel+0x1aa>
  }
  /* For Rank 13 to 16 */
  else
  {
    /* Clear the old SQx bits for the selected rank */
    hadc->Instance->SQR1 &= ~ADC_SQR1_RK(ADC_SQR1_SQ13, sConfig->Rank);
 800302e:	687b      	ldr	r3, [r7, #4]
 8003030:	681b      	ldr	r3, [r3, #0]
 8003032:	6ad9      	ldr	r1, [r3, #44]	@ 0x2c
 8003034:	683b      	ldr	r3, [r7, #0]
 8003036:	685a      	ldr	r2, [r3, #4]
 8003038:	4613      	mov	r3, r2
 800303a:	009b      	lsls	r3, r3, #2
 800303c:	4413      	add	r3, r2
 800303e:	3b41      	subs	r3, #65	@ 0x41
 8003040:	221f      	movs	r2, #31
 8003042:	fa02 f303 	lsl.w	r3, r2, r3
 8003046:	43da      	mvns	r2, r3
 8003048:	687b      	ldr	r3, [r7, #4]
 800304a:	681b      	ldr	r3, [r3, #0]
 800304c:	400a      	ands	r2, r1
 800304e:	62da      	str	r2, [r3, #44]	@ 0x2c

    /* Set the SQx bits for the selected rank */
    hadc->Instance->SQR1 |= ADC_SQR1_RK(sConfig->Channel, sConfig->Rank);
 8003050:	687b      	ldr	r3, [r7, #4]
 8003052:	681b      	ldr	r3, [r3, #0]
 8003054:	6ad9      	ldr	r1, [r3, #44]	@ 0x2c
 8003056:	683b      	ldr	r3, [r7, #0]
 8003058:	681b      	ldr	r3, [r3, #0]
 800305a:	b29b      	uxth	r3, r3
 800305c:	4618      	mov	r0, r3
 800305e:	683b      	ldr	r3, [r7, #0]
 8003060:	685a      	ldr	r2, [r3, #4]
 8003062:	4613      	mov	r3, r2
 8003064:	009b      	lsls	r3, r3, #2
 8003066:	4413      	add	r3, r2
 8003068:	3b41      	subs	r3, #65	@ 0x41
 800306a:	fa00 f203 	lsl.w	r2, r0, r3
 800306e:	687b      	ldr	r3, [r7, #4]
 8003070:	681b      	ldr	r3, [r3, #0]
 8003072:	430a      	orrs	r2, r1
 8003074:	62da      	str	r2, [r3, #44]	@ 0x2c
  }

  /* Pointer to the common control register to which is belonging hadc    */
  /* (Depending on STM32F4 product, there may be up to 3 ADCs and 1 common */
  /* control register)                                                    */
  tmpADC_Common = ADC_COMMON_REGISTER(hadc);
 8003076:	4b29      	ldr	r3, [pc, #164]	@ (800311c <HAL_ADC_ConfigChannel+0x250>)
 8003078:	60fb      	str	r3, [r7, #12]

  /* if ADC1 Channel_18 is selected for VBAT Channel ennable VBATE */
  if ((hadc->Instance == ADC1) && (sConfig->Channel == ADC_CHANNEL_VBAT))
 800307a:	687b      	ldr	r3, [r7, #4]
 800307c:	681b      	ldr	r3, [r3, #0]
 800307e:	4a28      	ldr	r2, [pc, #160]	@ (8003120 <HAL_ADC_ConfigChannel+0x254>)
 8003080:	4293      	cmp	r3, r2
 8003082:	d10f      	bne.n	80030a4 <HAL_ADC_ConfigChannel+0x1d8>
 8003084:	683b      	ldr	r3, [r7, #0]
 8003086:	681b      	ldr	r3, [r3, #0]
 8003088:	2b12      	cmp	r3, #18
 800308a:	d10b      	bne.n	80030a4 <HAL_ADC_ConfigChannel+0x1d8>
  {
    /* Disable the TEMPSENSOR channel in case of using board with multiplixed ADC_CHANNEL_VBAT & ADC_CHANNEL_TEMPSENSOR*/
    if ((uint16_t)ADC_CHANNEL_TEMPSENSOR == (uint16_t)ADC_CHANNEL_VBAT)
    {
      tmpADC_Common->CCR &= ~ADC_CCR_TSVREFE;
 800308c:	68fb      	ldr	r3, [r7, #12]
 800308e:	685b      	ldr	r3, [r3, #4]
 8003090:	f423 0200 	bic.w	r2, r3, #8388608	@ 0x800000
 8003094:	68fb      	ldr	r3, [r7, #12]
 8003096:	605a      	str	r2, [r3, #4]
    }
    /* Enable the VBAT channel*/
    tmpADC_Common->CCR |= ADC_CCR_VBATE;
 8003098:	68fb      	ldr	r3, [r7, #12]
 800309a:	685b      	ldr	r3, [r3, #4]
 800309c:	f443 0280 	orr.w	r2, r3, #4194304	@ 0x400000
 80030a0:	68fb      	ldr	r3, [r7, #12]
 80030a2:	605a      	str	r2, [r3, #4]
  }

  /* if ADC1 Channel_16 or Channel_18 is selected for Temperature sensor or
     Channel_17 is selected for VREFINT enable TSVREFE */
  if ((hadc->Instance == ADC1) && ((sConfig->Channel == ADC_CHANNEL_TEMPSENSOR) || (sConfig->Channel == ADC_CHANNEL_VREFINT)))
 80030a4:	687b      	ldr	r3, [r7, #4]
 80030a6:	681b      	ldr	r3, [r3, #0]
 80030a8:	4a1d      	ldr	r2, [pc, #116]	@ (8003120 <HAL_ADC_ConfigChannel+0x254>)
 80030aa:	4293      	cmp	r3, r2
 80030ac:	d12b      	bne.n	8003106 <HAL_ADC_ConfigChannel+0x23a>
 80030ae:	683b      	ldr	r3, [r7, #0]
 80030b0:	681b      	ldr	r3, [r3, #0]
 80030b2:	4a1c      	ldr	r2, [pc, #112]	@ (8003124 <HAL_ADC_ConfigChannel+0x258>)
 80030b4:	4293      	cmp	r3, r2
 80030b6:	d003      	beq.n	80030c0 <HAL_ADC_ConfigChannel+0x1f4>
 80030b8:	683b      	ldr	r3, [r7, #0]
 80030ba:	681b      	ldr	r3, [r3, #0]
 80030bc:	2b11      	cmp	r3, #17
 80030be:	d122      	bne.n	8003106 <HAL_ADC_ConfigChannel+0x23a>
  {
    /* Disable the VBAT channel in case of using board with multiplixed ADC_CHANNEL_VBAT & ADC_CHANNEL_TEMPSENSOR*/
    if ((uint16_t)ADC_CHANNEL_TEMPSENSOR == (uint16_t)ADC_CHANNEL_VBAT)
    {
      tmpADC_Common->CCR &= ~ADC_CCR_VBATE;
 80030c0:	68fb      	ldr	r3, [r7, #12]
 80030c2:	685b      	ldr	r3, [r3, #4]
 80030c4:	f423 0280 	bic.w	r2, r3, #4194304	@ 0x400000
 80030c8:	68fb      	ldr	r3, [r7, #12]
 80030ca:	605a      	str	r2, [r3, #4]
    }
    /* Enable the Temperature sensor and VREFINT channel*/
    tmpADC_Common->CCR |= ADC_CCR_TSVREFE;
 80030cc:	68fb      	ldr	r3, [r7, #12]
 80030ce:	685b      	ldr	r3, [r3, #4]
 80030d0:	f443 0200 	orr.w	r2, r3, #8388608	@ 0x800000
 80030d4:	68fb      	ldr	r3, [r7, #12]
 80030d6:	605a      	str	r2, [r3, #4]

    if (sConfig->Channel == ADC_CHANNEL_TEMPSENSOR)
 80030d8:	683b      	ldr	r3, [r7, #0]
 80030da:	681b      	ldr	r3, [r3, #0]
 80030dc:	4a11      	ldr	r2, [pc, #68]	@ (8003124 <HAL_ADC_ConfigChannel+0x258>)
 80030de:	4293      	cmp	r3, r2
 80030e0:	d111      	bne.n	8003106 <HAL_ADC_ConfigChannel+0x23a>
    {
      /* Delay for temperature sensor stabilization time */
      /* Compute number of CPU cycles to wait for */
      counter = (ADC_TEMPSENSOR_DELAY_US * (SystemCoreClock / 1000000U));
 80030e2:	4b11      	ldr	r3, [pc, #68]	@ (8003128 <HAL_ADC_ConfigChannel+0x25c>)
 80030e4:	681b      	ldr	r3, [r3, #0]
 80030e6:	4a11      	ldr	r2, [pc, #68]	@ (800312c <HAL_ADC_ConfigChannel+0x260>)
 80030e8:	fba2 2303 	umull	r2, r3, r2, r3
 80030ec:	0c9a      	lsrs	r2, r3, #18
 80030ee:	4613      	mov	r3, r2
 80030f0:	009b      	lsls	r3, r3, #2
 80030f2:	4413      	add	r3, r2
 80030f4:	005b      	lsls	r3, r3, #1
 80030f6:	60bb      	str	r3, [r7, #8]
      while (counter != 0U)
 80030f8:	e002      	b.n	8003100 <HAL_ADC_ConfigChannel+0x234>
      {
        counter--;
 80030fa:	68bb      	ldr	r3, [r7, #8]
 80030fc:	3b01      	subs	r3, #1
 80030fe:	60bb      	str	r3, [r7, #8]
      while (counter != 0U)
 8003100:	68bb      	ldr	r3, [r7, #8]
 8003102:	2b00      	cmp	r3, #0
 8003104:	d1f9      	bne.n	80030fa <HAL_ADC_ConfigChannel+0x22e>
      }
    }
  }

  /* Process unlocked */
  __HAL_UNLOCK(hadc);
 8003106:	687b      	ldr	r3, [r7, #4]
 8003108:	2200      	movs	r2, #0
 800310a:	f883 203c 	strb.w	r2, [r3, #60]	@ 0x3c

  /* Return function status */
  return HAL_OK;
 800310e:	2300      	movs	r3, #0
}
 8003110:	4618      	mov	r0, r3
 8003112:	3714      	adds	r7, #20
 8003114:	46bd      	mov	sp, r7
 8003116:	f85d 7b04 	ldr.w	r7, [sp], #4
 800311a:	4770      	bx	lr
 800311c:	40012300 	.word	0x40012300
 8003120:	40012000 	.word	0x40012000
 8003124:	10000012 	.word	0x10000012
 8003128:	20000008 	.word	0x20000008
 800312c:	431bde83 	.word	0x431bde83

08003130 <ADC_Init>:
  * @param  hadc pointer to a ADC_HandleTypeDef structure that contains
  *         the configuration information for the specified ADC.
  * @retval None
  */
static void ADC_Init(ADC_HandleTypeDef *hadc)
{
 8003130:	b480      	push	{r7}
 8003132:	b085      	sub	sp, #20
 8003134:	af00      	add	r7, sp, #0
 8003136:	6078      	str	r0, [r7, #4]

  /* Set ADC parameters */
  /* Pointer to the common control register to which is belonging hadc    */
  /* (Depending on STM32F4 product, there may be up to 3 ADCs and 1 common */
  /* control register)                                                    */
  tmpADC_Common = ADC_COMMON_REGISTER(hadc);
 8003138:	4b79      	ldr	r3, [pc, #484]	@ (8003320 <ADC_Init+0x1f0>)
 800313a:	60fb      	str	r3, [r7, #12]

  /* Set the ADC clock prescaler */
  tmpADC_Common->CCR &= ~(ADC_CCR_ADCPRE);
 800313c:	68fb      	ldr	r3, [r7, #12]
 800313e:	685b      	ldr	r3, [r3, #4]
 8003140:	f423 3240 	bic.w	r2, r3, #196608	@ 0x30000
 8003144:	68fb      	ldr	r3, [r7, #12]
 8003146:	605a      	str	r2, [r3, #4]
  tmpADC_Common->CCR |=  hadc->Init.ClockPrescaler;
 8003148:	68fb      	ldr	r3, [r7, #12]
 800314a:	685a      	ldr	r2, [r3, #4]
 800314c:	687b      	ldr	r3, [r7, #4]
 800314e:	685b      	ldr	r3, [r3, #4]
 8003150:	431a      	orrs	r2, r3
 8003152:	68fb      	ldr	r3, [r7, #12]
 8003154:	605a      	str	r2, [r3, #4]

  /* Set ADC scan mode */
  hadc->Instance->CR1 &= ~(ADC_CR1_SCAN);
 8003156:	687b      	ldr	r3, [r7, #4]
 8003158:	681b      	ldr	r3, [r3, #0]
 800315a:	685a      	ldr	r2, [r3, #4]
 800315c:	687b      	ldr	r3, [r7, #4]
 800315e:	681b      	ldr	r3, [r3, #0]
 8003160:	f422 7280 	bic.w	r2, r2, #256	@ 0x100
 8003164:	605a      	str	r2, [r3, #4]
  hadc->Instance->CR1 |=  ADC_CR1_SCANCONV(hadc->Init.ScanConvMode);
 8003166:	687b      	ldr	r3, [r7, #4]
 8003168:	681b      	ldr	r3, [r3, #0]
 800316a:	6859      	ldr	r1, [r3, #4]
 800316c:	687b      	ldr	r3, [r7, #4]
 800316e:	691b      	ldr	r3, [r3, #16]
 8003170:	021a      	lsls	r2, r3, #8
 8003172:	687b      	ldr	r3, [r7, #4]
 8003174:	681b      	ldr	r3, [r3, #0]
 8003176:	430a      	orrs	r2, r1
 8003178:	605a      	str	r2, [r3, #4]

  /* Set ADC resolution */
  hadc->Instance->CR1 &= ~(ADC_CR1_RES);
 800317a:	687b      	ldr	r3, [r7, #4]
 800317c:	681b      	ldr	r3, [r3, #0]
 800317e:	685a      	ldr	r2, [r3, #4]
 8003180:	687b      	ldr	r3, [r7, #4]
 8003182:	681b      	ldr	r3, [r3, #0]
 8003184:	f022 7240 	bic.w	r2, r2, #50331648	@ 0x3000000
 8003188:	605a      	str	r2, [r3, #4]
  hadc->Instance->CR1 |=  hadc->Init.Resolution;
 800318a:	687b      	ldr	r3, [r7, #4]
 800318c:	681b      	ldr	r3, [r3, #0]
 800318e:	6859      	ldr	r1, [r3, #4]
 8003190:	687b      	ldr	r3, [r7, #4]
 8003192:	689a      	ldr	r2, [r3, #8]
 8003194:	687b      	ldr	r3, [r7, #4]
 8003196:	681b      	ldr	r3, [r3, #0]
 8003198:	430a      	orrs	r2, r1
 800319a:	605a      	str	r2, [r3, #4]

  /* Set ADC data alignment */
  hadc->Instance->CR2 &= ~(ADC_CR2_ALIGN);
 800319c:	687b      	ldr	r3, [r7, #4]
 800319e:	681b      	ldr	r3, [r3, #0]
 80031a0:	689a      	ldr	r2, [r3, #8]
 80031a2:	687b      	ldr	r3, [r7, #4]
 80031a4:	681b      	ldr	r3, [r3, #0]
 80031a6:	f422 6200 	bic.w	r2, r2, #2048	@ 0x800
 80031aa:	609a      	str	r2, [r3, #8]
  hadc->Instance->CR2 |= hadc->Init.DataAlign;
 80031ac:	687b      	ldr	r3, [r7, #4]
 80031ae:	681b      	ldr	r3, [r3, #0]
 80031b0:	6899      	ldr	r1, [r3, #8]
 80031b2:	687b      	ldr	r3, [r7, #4]
 80031b4:	68da      	ldr	r2, [r3, #12]
 80031b6:	687b      	ldr	r3, [r7, #4]
 80031b8:	681b      	ldr	r3, [r3, #0]
 80031ba:	430a      	orrs	r2, r1
 80031bc:	609a      	str	r2, [r3, #8]
  /* Enable external trigger if trigger selection is different of software  */
  /* start.                                                                 */
  /* Note: This configuration keeps the hardware feature of parameter       */
  /*       ExternalTrigConvEdge "trigger edge none" equivalent to           */
  /*       software start.                                                  */
  if (hadc->Init.ExternalTrigConv != ADC_SOFTWARE_START)
 80031be:	687b      	ldr	r3, [r7, #4]
 80031c0:	6a9b      	ldr	r3, [r3, #40]	@ 0x28
 80031c2:	4a58      	ldr	r2, [pc, #352]	@ (8003324 <ADC_Init+0x1f4>)
 80031c4:	4293      	cmp	r3, r2
 80031c6:	d022      	beq.n	800320e <ADC_Init+0xde>
  {
    /* Select external trigger to start conversion */
    hadc->Instance->CR2 &= ~(ADC_CR2_EXTSEL);
 80031c8:	687b      	ldr	r3, [r7, #4]
 80031ca:	681b      	ldr	r3, [r3, #0]
 80031cc:	689a      	ldr	r2, [r3, #8]
 80031ce:	687b      	ldr	r3, [r7, #4]
 80031d0:	681b      	ldr	r3, [r3, #0]
 80031d2:	f022 6270 	bic.w	r2, r2, #251658240	@ 0xf000000
 80031d6:	609a      	str	r2, [r3, #8]
    hadc->Instance->CR2 |= hadc->Init.ExternalTrigConv;
 80031d8:	687b      	ldr	r3, [r7, #4]
 80031da:	681b      	ldr	r3, [r3, #0]
 80031dc:	6899      	ldr	r1, [r3, #8]
 80031de:	687b      	ldr	r3, [r7, #4]
 80031e0:	6a9a      	ldr	r2, [r3, #40]	@ 0x28
 80031e2:	687b      	ldr	r3, [r7, #4]
 80031e4:	681b      	ldr	r3, [r3, #0]
 80031e6:	430a      	orrs	r2, r1
 80031e8:	609a      	str	r2, [r3, #8]

    /* Select external trigger polarity */
    hadc->Instance->CR2 &= ~(ADC_CR2_EXTEN);
 80031ea:	687b      	ldr	r3, [r7, #4]
 80031ec:	681b      	ldr	r3, [r3, #0]
 80031ee:	689a      	ldr	r2, [r3, #8]
 80031f0:	687b      	ldr	r3, [r7, #4]
 80031f2:	681b      	ldr	r3, [r3, #0]
 80031f4:	f022 5240 	bic.w	r2, r2, #805306368	@ 0x30000000
 80031f8:	609a      	str	r2, [r3, #8]
    hadc->Instance->CR2 |= hadc->Init.ExternalTrigConvEdge;
 80031fa:	687b      	ldr	r3, [r7, #4]
 80031fc:	681b      	ldr	r3, [r3, #0]
 80031fe:	6899      	ldr	r1, [r3, #8]
 8003200:	687b      	ldr	r3, [r7, #4]
 8003202:	6ada      	ldr	r2, [r3, #44]	@ 0x2c
 8003204:	687b      	ldr	r3, [r7, #4]
 8003206:	681b      	ldr	r3, [r3, #0]
 8003208:	430a      	orrs	r2, r1
 800320a:	609a      	str	r2, [r3, #8]
 800320c:	e00f      	b.n	800322e <ADC_Init+0xfe>
  }
  else
  {
    /* Reset the external trigger */
    hadc->Instance->CR2 &= ~(ADC_CR2_EXTSEL);
 800320e:	687b      	ldr	r3, [r7, #4]
 8003210:	681b      	ldr	r3, [r3, #0]
 8003212:	689a      	ldr	r2, [r3, #8]
 8003214:	687b      	ldr	r3, [r7, #4]
 8003216:	681b      	ldr	r3, [r3, #0]
 8003218:	f022 6270 	bic.w	r2, r2, #251658240	@ 0xf000000
 800321c:	609a      	str	r2, [r3, #8]
    hadc->Instance->CR2 &= ~(ADC_CR2_EXTEN);
 800321e:	687b      	ldr	r3, [r7, #4]
 8003220:	681b      	ldr	r3, [r3, #0]
 8003222:	689a      	ldr	r2, [r3, #8]
 8003224:	687b      	ldr	r3, [r7, #4]
 8003226:	681b      	ldr	r3, [r3, #0]
 8003228:	f022 5240 	bic.w	r2, r2, #805306368	@ 0x30000000
 800322c:	609a      	str	r2, [r3, #8]
  }

  /* Enable or disable ADC continuous conversion mode */
  hadc->Instance->CR2 &= ~(ADC_CR2_CONT);
 800322e:	687b      	ldr	r3, [r7, #4]
 8003230:	681b      	ldr	r3, [r3, #0]
 8003232:	689a      	ldr	r2, [r3, #8]
 8003234:	687b      	ldr	r3, [r7, #4]
 8003236:	681b      	ldr	r3, [r3, #0]
 8003238:	f022 0202 	bic.w	r2, r2, #2
 800323c:	609a      	str	r2, [r3, #8]
  hadc->Instance->CR2 |= ADC_CR2_CONTINUOUS((uint32_t)hadc->Init.ContinuousConvMode);
 800323e:	687b      	ldr	r3, [r7, #4]
 8003240:	681b      	ldr	r3, [r3, #0]
 8003242:	6899      	ldr	r1, [r3, #8]
 8003244:	687b      	ldr	r3, [r7, #4]
 8003246:	7e1b      	ldrb	r3, [r3, #24]
 8003248:	005a      	lsls	r2, r3, #1
 800324a:	687b      	ldr	r3, [r7, #4]
 800324c:	681b      	ldr	r3, [r3, #0]
 800324e:	430a      	orrs	r2, r1
 8003250:	609a      	str	r2, [r3, #8]

  if (hadc->Init.DiscontinuousConvMode != DISABLE)
 8003252:	687b      	ldr	r3, [r7, #4]
 8003254:	f893 3020 	ldrb.w	r3, [r3, #32]
 8003258:	2b00      	cmp	r3, #0
 800325a:	d01b      	beq.n	8003294 <ADC_Init+0x164>
  {
    assert_param(IS_ADC_REGULAR_DISC_NUMBER(hadc->Init.NbrOfDiscConversion));

    /* Enable the selected ADC regular discontinuous mode */
    hadc->Instance->CR1 |= (uint32_t)ADC_CR1_DISCEN;
 800325c:	687b      	ldr	r3, [r7, #4]
 800325e:	681b      	ldr	r3, [r3, #0]
 8003260:	685a      	ldr	r2, [r3, #4]
 8003262:	687b      	ldr	r3, [r7, #4]
 8003264:	681b      	ldr	r3, [r3, #0]
 8003266:	f442 6200 	orr.w	r2, r2, #2048	@ 0x800
 800326a:	605a      	str	r2, [r3, #4]

    /* Set the number of channels to be converted in discontinuous mode */
    hadc->Instance->CR1 &= ~(ADC_CR1_DISCNUM);
 800326c:	687b      	ldr	r3, [r7, #4]
 800326e:	681b      	ldr	r3, [r3, #0]
 8003270:	685a      	ldr	r2, [r3, #4]
 8003272:	687b      	ldr	r3, [r7, #4]
 8003274:	681b      	ldr	r3, [r3, #0]
 8003276:	f422 4260 	bic.w	r2, r2, #57344	@ 0xe000
 800327a:	605a      	str	r2, [r3, #4]
    hadc->Instance->CR1 |=  ADC_CR1_DISCONTINUOUS(hadc->Init.NbrOfDiscConversion);
 800327c:	687b      	ldr	r3, [r7, #4]
 800327e:	681b      	ldr	r3, [r3, #0]
 8003280:	6859      	ldr	r1, [r3, #4]
 8003282:	687b      	ldr	r3, [r7, #4]
 8003284:	6a5b      	ldr	r3, [r3, #36]	@ 0x24
 8003286:	3b01      	subs	r3, #1
 8003288:	035a      	lsls	r2, r3, #13
 800328a:	687b      	ldr	r3, [r7, #4]
 800328c:	681b      	ldr	r3, [r3, #0]
 800328e:	430a      	orrs	r2, r1
 8003290:	605a      	str	r2, [r3, #4]
 8003292:	e007      	b.n	80032a4 <ADC_Init+0x174>
  }
  else
  {
    /* Disable the selected ADC regular discontinuous mode */
    hadc->Instance->CR1 &= ~(ADC_CR1_DISCEN);
 8003294:	687b      	ldr	r3, [r7, #4]
 8003296:	681b      	ldr	r3, [r3, #0]
 8003298:	685a      	ldr	r2, [r3, #4]
 800329a:	687b      	ldr	r3, [r7, #4]
 800329c:	681b      	ldr	r3, [r3, #0]
 800329e:	f422 6200 	bic.w	r2, r2, #2048	@ 0x800
 80032a2:	605a      	str	r2, [r3, #4]
  }

  /* Set ADC number of conversion */
  hadc->Instance->SQR1 &= ~(ADC_SQR1_L);
 80032a4:	687b      	ldr	r3, [r7, #4]
 80032a6:	681b      	ldr	r3, [r3, #0]
 80032a8:	6ada      	ldr	r2, [r3, #44]	@ 0x2c
 80032aa:	687b      	ldr	r3, [r7, #4]
 80032ac:	681b      	ldr	r3, [r3, #0]
 80032ae:	f422 0270 	bic.w	r2, r2, #15728640	@ 0xf00000
 80032b2:	62da      	str	r2, [r3, #44]	@ 0x2c
  hadc->Instance->SQR1 |=  ADC_SQR1(hadc->Init.NbrOfConversion);
 80032b4:	687b      	ldr	r3, [r7, #4]
 80032b6:	681b      	ldr	r3, [r3, #0]
 80032b8:	6ad9      	ldr	r1, [r3, #44]	@ 0x2c
 80032ba:	687b      	ldr	r3, [r7, #4]
 80032bc:	69db      	ldr	r3, [r3, #28]
 80032be:	3b01      	subs	r3, #1
 80032c0:	051a      	lsls	r2, r3, #20
 80032c2:	687b      	ldr	r3, [r7, #4]
 80032c4:	681b      	ldr	r3, [r3, #0]
 80032c6:	430a      	orrs	r2, r1
 80032c8:	62da      	str	r2, [r3, #44]	@ 0x2c

  /* Enable or disable ADC DMA continuous request */
  hadc->Instance->CR2 &= ~(ADC_CR2_DDS);
 80032ca:	687b      	ldr	r3, [r7, #4]
 80032cc:	681b      	ldr	r3, [r3, #0]
 80032ce:	689a      	ldr	r2, [r3, #8]
 80032d0:	687b      	ldr	r3, [r7, #4]
 80032d2:	681b      	ldr	r3, [r3, #0]
 80032d4:	f422 7200 	bic.w	r2, r2, #512	@ 0x200
 80032d8:	609a      	str	r2, [r3, #8]
  hadc->Instance->CR2 |= ADC_CR2_DMAContReq((uint32_t)hadc->Init.DMAContinuousRequests);
 80032da:	687b      	ldr	r3, [r7, #4]
 80032dc:	681b      	ldr	r3, [r3, #0]
 80032de:	6899      	ldr	r1, [r3, #8]
 80032e0:	687b      	ldr	r3, [r7, #4]
 80032e2:	f893 3030 	ldrb.w	r3, [r3, #48]	@ 0x30
 80032e6:	025a      	lsls	r2, r3, #9
 80032e8:	687b      	ldr	r3, [r7, #4]
 80032ea:	681b      	ldr	r3, [r3, #0]
 80032ec:	430a      	orrs	r2, r1
 80032ee:	609a      	str	r2, [r3, #8]

  /* Enable or disable ADC end of conversion selection */
  hadc->Instance->CR2 &= ~(ADC_CR2_EOCS);
 80032f0:	687b      	ldr	r3, [r7, #4]
 80032f2:	681b      	ldr	r3, [r3, #0]
 80032f4:	689a      	ldr	r2, [r3, #8]
 80032f6:	687b      	ldr	r3, [r7, #4]
 80032f8:	681b      	ldr	r3, [r3, #0]
 80032fa:	f422 6280 	bic.w	r2, r2, #1024	@ 0x400
 80032fe:	609a      	str	r2, [r3, #8]
  hadc->Instance->CR2 |= ADC_CR2_EOCSelection(hadc->Init.EOCSelection);
 8003300:	687b      	ldr	r3, [r7, #4]
 8003302:	681b      	ldr	r3, [r3, #0]
 8003304:	6899      	ldr	r1, [r3, #8]
 8003306:	687b      	ldr	r3, [r7, #4]
 8003308:	695b      	ldr	r3, [r3, #20]
 800330a:	029a      	lsls	r2, r3, #10
 800330c:	687b      	ldr	r3, [r7, #4]
 800330e:	681b      	ldr	r3, [r3, #0]
 8003310:	430a      	orrs	r2, r1
 8003312:	609a      	str	r2, [r3, #8]
}
 8003314:	bf00      	nop
 8003316:	3714      	adds	r7, #20
 8003318:	46bd      	mov	sp, r7
 800331a:	f85d 7b04 	ldr.w	r7, [sp], #4
 800331e:	4770      	bx	lr
 8003320:	40012300 	.word	0x40012300
 8003324:	0f000001 	.word	0x0f000001

08003328 <ADC_DMAConvCplt>:
  * @param  hdma pointer to a DMA_HandleTypeDef structure that contains
  *                the configuration information for the specified DMA module.
  * @retval None
  */
static void ADC_DMAConvCplt(DMA_HandleTypeDef *hdma)
{
 8003328:	b580      	push	{r7, lr}
 800332a:	b084      	sub	sp, #16
 800332c:	af00      	add	r7, sp, #0
 800332e:	6078      	str	r0, [r7, #4]
  /* Retrieve ADC handle corresponding to current DMA handle */
  ADC_HandleTypeDef *hadc = (ADC_HandleTypeDef *)((DMA_HandleTypeDef *)hdma)->Parent;
 8003330:	687b      	ldr	r3, [r7, #4]
 8003332:	6b9b      	ldr	r3, [r3, #56]	@ 0x38
 8003334:	60fb      	str	r3, [r7, #12]

  /* Update state machine on conversion status if not in error state */
  if (HAL_IS_BIT_CLR(hadc->State, HAL_ADC_STATE_ERROR_INTERNAL | HAL_ADC_STATE_ERROR_DMA))
 8003336:	68fb      	ldr	r3, [r7, #12]
 8003338:	6c1b      	ldr	r3, [r3, #64]	@ 0x40
 800333a:	f003 0350 	and.w	r3, r3, #80	@ 0x50
 800333e:	2b00      	cmp	r3, #0
 8003340:	d13c      	bne.n	80033bc <ADC_DMAConvCplt+0x94>
  {
    /* Update ADC state machine */
    SET_BIT(hadc->State, HAL_ADC_STATE_REG_EOC);
 8003342:	68fb      	ldr	r3, [r7, #12]
 8003344:	6c1b      	ldr	r3, [r3, #64]	@ 0x40
 8003346:	f443 7200 	orr.w	r2, r3, #512	@ 0x200
 800334a:	68fb      	ldr	r3, [r7, #12]
 800334c:	641a      	str	r2, [r3, #64]	@ 0x40
    /* by external trigger, continuous mode or scan sequence on going.      */
    /* Note: On STM32F4, there is no independent flag of end of sequence.   */
    /*       The test of scan sequence on going is done either with scan    */
    /*       sequence disabled or with end of conversion flag set to        */
    /*       of end of sequence.                                            */
    if (ADC_IS_SOFTWARE_START_REGULAR(hadc)                   &&
 800334e:	68fb      	ldr	r3, [r7, #12]
 8003350:	681b      	ldr	r3, [r3, #0]
 8003352:	689b      	ldr	r3, [r3, #8]
 8003354:	f003 5340 	and.w	r3, r3, #805306368	@ 0x30000000
 8003358:	2b00      	cmp	r3, #0
 800335a:	d12b      	bne.n	80033b4 <ADC_DMAConvCplt+0x8c>
        (hadc->Init.ContinuousConvMode == DISABLE)            &&
 800335c:	68fb      	ldr	r3, [r7, #12]
 800335e:	7e1b      	ldrb	r3, [r3, #24]
    if (ADC_IS_SOFTWARE_START_REGULAR(hadc)                   &&
 8003360:	2b00      	cmp	r3, #0
 8003362:	d127      	bne.n	80033b4 <ADC_DMAConvCplt+0x8c>
        (HAL_IS_BIT_CLR(hadc->Instance->SQR1, ADC_SQR1_L) ||
 8003364:	68fb      	ldr	r3, [r7, #12]
 8003366:	681b      	ldr	r3, [r3, #0]
 8003368:	6adb      	ldr	r3, [r3, #44]	@ 0x2c
 800336a:	f403 0370 	and.w	r3, r3, #15728640	@ 0xf00000
        (hadc->Init.ContinuousConvMode == DISABLE)            &&
 800336e:	2b00      	cmp	r3, #0
 8003370:	d006      	beq.n	8003380 <ADC_DMAConvCplt+0x58>
         HAL_IS_BIT_CLR(hadc->Instance->CR2, ADC_CR2_EOCS)))
 8003372:	68fb      	ldr	r3, [r7, #12]
 8003374:	681b      	ldr	r3, [r3, #0]
 8003376:	689b      	ldr	r3, [r3, #8]
 8003378:	f403 6380 	and.w	r3, r3, #1024	@ 0x400
        (HAL_IS_BIT_CLR(hadc->Instance->SQR1, ADC_SQR1_L) ||
 800337c:	2b00      	cmp	r3, #0
 800337e:	d119      	bne.n	80033b4 <ADC_DMAConvCplt+0x8c>
    {
      /* Disable ADC end of single conversion interrupt on group regular */
      /* Note: Overrun interrupt was enabled with EOC interrupt in          */
      /* HAL_ADC_Start_IT(), but is not disabled here because can be used   */
      /* by overrun IRQ process below.                                      */
      __HAL_ADC_DISABLE_IT(hadc, ADC_IT_EOC);
 8003380:	68fb      	ldr	r3, [r7, #12]
 8003382:	681b      	ldr	r3, [r3, #0]
 8003384:	685a      	ldr	r2, [r3, #4]
 8003386:	68fb      	ldr	r3, [r7, #12]
 8003388:	681b      	ldr	r3, [r3, #0]
 800338a:	f022 0220 	bic.w	r2, r2, #32
 800338e:	605a      	str	r2, [r3, #4]

      /* Set ADC state */
      CLEAR_BIT(hadc->State, HAL_ADC_STATE_REG_BUSY);
 8003390:	68fb      	ldr	r3, [r7, #12]
 8003392:	6c1b      	ldr	r3, [r3, #64]	@ 0x40
 8003394:	f423 7280 	bic.w	r2, r3, #256	@ 0x100
 8003398:	68fb      	ldr	r3, [r7, #12]
 800339a:	641a      	str	r2, [r3, #64]	@ 0x40

      if (HAL_IS_BIT_CLR(hadc->State, HAL_ADC_STATE_INJ_BUSY))
 800339c:	68fb      	ldr	r3, [r7, #12]
 800339e:	6c1b      	ldr	r3, [r3, #64]	@ 0x40
 80033a0:	f403 5380 	and.w	r3, r3, #4096	@ 0x1000
 80033a4:	2b00      	cmp	r3, #0
 80033a6:	d105      	bne.n	80033b4 <ADC_DMAConvCplt+0x8c>
      {
        SET_BIT(hadc->State, HAL_ADC_STATE_READY);
 80033a8:	68fb      	ldr	r3, [r7, #12]
 80033aa:	6c1b      	ldr	r3, [r3, #64]	@ 0x40
 80033ac:	f043 0201 	orr.w	r2, r3, #1
 80033b0:	68fb      	ldr	r3, [r7, #12]
 80033b2:	641a      	str	r2, [r3, #64]	@ 0x40

    /* Conversion complete callback */
#if (USE_HAL_ADC_REGISTER_CALLBACKS == 1)
    hadc->ConvCpltCallback(hadc);
#else
    HAL_ADC_ConvCpltCallback(hadc);
 80033b4:	68f8      	ldr	r0, [r7, #12]
 80033b6:	f7ff fd61 	bl	8002e7c <HAL_ADC_ConvCpltCallback>
    {
      /* Call DMA error callback */
      hadc->DMA_Handle->XferErrorCallback(hdma);
    }
  }
}
 80033ba:	e00e      	b.n	80033da <ADC_DMAConvCplt+0xb2>
    if ((hadc->State & HAL_ADC_STATE_ERROR_INTERNAL) != 0UL)
 80033bc:	68fb      	ldr	r3, [r7, #12]
 80033be:	6c1b      	ldr	r3, [r3, #64]	@ 0x40
 80033c0:	f003 0310 	and.w	r3, r3, #16
 80033c4:	2b00      	cmp	r3, #0
 80033c6:	d003      	beq.n	80033d0 <ADC_DMAConvCplt+0xa8>
      HAL_ADC_ErrorCallback(hadc);
 80033c8:	68f8      	ldr	r0, [r7, #12]
 80033ca:	f7ff fd75 	bl	8002eb8 <HAL_ADC_ErrorCallback>
}
 80033ce:	e004      	b.n	80033da <ADC_DMAConvCplt+0xb2>
      hadc->DMA_Handle->XferErrorCallback(hdma);
 80033d0:	68fb      	ldr	r3, [r7, #12]
 80033d2:	6b9b      	ldr	r3, [r3, #56]	@ 0x38
 80033d4:	6cdb      	ldr	r3, [r3, #76]	@ 0x4c
 80033d6:	6878      	ldr	r0, [r7, #4]
 80033d8:	4798      	blx	r3
}
 80033da:	bf00      	nop
 80033dc:	3710      	adds	r7, #16
 80033de:	46bd      	mov	sp, r7
 80033e0:	bd80      	pop	{r7, pc}

080033e2 <ADC_DMAHalfConvCplt>:
  * @param  hdma pointer to a DMA_HandleTypeDef structure that contains
  *                the configuration information for the specified DMA module.
  * @retval None
  */
static void ADC_DMAHalfConvCplt(DMA_HandleTypeDef *hdma)
{
 80033e2:	b580      	push	{r7, lr}
 80033e4:	b084      	sub	sp, #16
 80033e6:	af00      	add	r7, sp, #0
 80033e8:	6078      	str	r0, [r7, #4]
  ADC_HandleTypeDef *hadc = (ADC_HandleTypeDef *)((DMA_HandleTypeDef *)hdma)->Parent;
 80033ea:	687b      	ldr	r3, [r7, #4]
 80033ec:	6b9b      	ldr	r3, [r3, #56]	@ 0x38
 80033ee:	60fb      	str	r3, [r7, #12]
  /* Half conversion callback */
#if (USE_HAL_ADC_REGISTER_CALLBACKS == 1)
  hadc->ConvHalfCpltCallback(hadc);
#else
  HAL_ADC_ConvHalfCpltCallback(hadc);
 80033f0:	68f8      	ldr	r0, [r7, #12]
 80033f2:	f7ff fd4d 	bl	8002e90 <HAL_ADC_ConvHalfCpltCallback>
#endif /* USE_HAL_ADC_REGISTER_CALLBACKS */
}
 80033f6:	bf00      	nop
 80033f8:	3710      	adds	r7, #16
 80033fa:	46bd      	mov	sp, r7
 80033fc:	bd80      	pop	{r7, pc}

080033fe <ADC_DMAError>:
  * @param  hdma pointer to a DMA_HandleTypeDef structure that contains
  *                the configuration information for the specified DMA module.
  * @retval None
  */
static void ADC_DMAError(DMA_HandleTypeDef *hdma)
{
 80033fe:	b580      	push	{r7, lr}
 8003400:	b084      	sub	sp, #16
 8003402:	af00      	add	r7, sp, #0
 8003404:	6078      	str	r0, [r7, #4]
  ADC_HandleTypeDef *hadc = (ADC_HandleTypeDef *)((DMA_HandleTypeDef *)hdma)->Parent;
 8003406:	687b      	ldr	r3, [r7, #4]
 8003408:	6b9b      	ldr	r3, [r3, #56]	@ 0x38
 800340a:	60fb      	str	r3, [r7, #12]
  hadc->State = HAL_ADC_STATE_ERROR_DMA;
 800340c:	68fb      	ldr	r3, [r7, #12]
 800340e:	2240      	movs	r2, #64	@ 0x40
 8003410:	641a      	str	r2, [r3, #64]	@ 0x40
  /* Set ADC error code to DMA error */
  hadc->ErrorCode |= HAL_ADC_ERROR_DMA;
 8003412:	68fb      	ldr	r3, [r7, #12]
 8003414:	6c5b      	ldr	r3, [r3, #68]	@ 0x44
 8003416:	f043 0204 	orr.w	r2, r3, #4
 800341a:	68fb      	ldr	r3, [r7, #12]
 800341c:	645a      	str	r2, [r3, #68]	@ 0x44
  /* Error callback */
#if (USE_HAL_ADC_REGISTER_CALLBACKS == 1)
  hadc->ErrorCallback(hadc);
#else
  HAL_ADC_ErrorCallback(hadc);
 800341e:	68f8      	ldr	r0, [r7, #12]
 8003420:	f7ff fd4a 	bl	8002eb8 <HAL_ADC_ErrorCallback>
#endif /* USE_HAL_ADC_REGISTER_CALLBACKS */
}
 8003424:	bf00      	nop
 8003426:	3710      	adds	r7, #16
 8003428:	46bd      	mov	sp, r7
 800342a:	bd80      	pop	{r7, pc}

0800342c <HAL_ADCEx_InjectedConvCpltCallback>:
  * @param  hadc pointer to a ADC_HandleTypeDef structure that contains
  *         the configuration information for the specified ADC.
  * @retval None
  */
__weak void HAL_ADCEx_InjectedConvCpltCallback(ADC_HandleTypeDef *hadc)
{
 800342c:	b480      	push	{r7}
 800342e:	b083      	sub	sp, #12
 8003430:	af00      	add	r7, sp, #0
 8003432:	6078      	str	r0, [r7, #4]
  /* Prevent unused argument(s) compilation warning */
  UNUSED(hadc);
  /* NOTE : This function Should not be modified, when the callback is needed,
            the HAL_ADC_InjectedConvCpltCallback could be implemented in the user file
   */
}
 8003434:	bf00      	nop
 8003436:	370c      	adds	r7, #12
 8003438:	46bd      	mov	sp, r7
 800343a:	f85d 7b04 	ldr.w	r7, [sp], #4
 800343e:	4770      	bx	lr

08003440 <__NVIC_SetPriorityGrouping>:
           In case of a conflict between priority grouping and available
           priority bits (__NVIC_PRIO_BITS), the smallest possible priority group is set.
  \param [in]      PriorityGroup  Priority grouping field.
 */
__STATIC_INLINE void __NVIC_SetPriorityGrouping(uint32_t PriorityGroup)
{
 8003440:	b480      	push	{r7}
 8003442:	b085      	sub	sp, #20
 8003444:	af00      	add	r7, sp, #0
 8003446:	6078      	str	r0, [r7, #4]
  uint32_t reg_value;
  uint32_t PriorityGroupTmp = (PriorityGroup & (uint32_t)0x07UL);             /* only values 0..7 are used          */
 8003448:	687b      	ldr	r3, [r7, #4]
 800344a:	f003 0307 	and.w	r3, r3, #7
 800344e:	60fb      	str	r3, [r7, #12]

  reg_value  =  SCB->AIRCR;                                                   /* read old register configuration    */
 8003450:	4b0c      	ldr	r3, [pc, #48]	@ (8003484 <__NVIC_SetPriorityGrouping+0x44>)
 8003452:	68db      	ldr	r3, [r3, #12]
 8003454:	60bb      	str	r3, [r7, #8]
  reg_value &= ~((uint32_t)(SCB_AIRCR_VECTKEY_Msk | SCB_AIRCR_PRIGROUP_Msk)); /* clear bits to change               */
 8003456:	68ba      	ldr	r2, [r7, #8]
 8003458:	f64f 03ff 	movw	r3, #63743	@ 0xf8ff
 800345c:	4013      	ands	r3, r2
 800345e:	60bb      	str	r3, [r7, #8]
  reg_value  =  (reg_value                                   |
                ((uint32_t)0x5FAUL << SCB_AIRCR_VECTKEY_Pos) |
                (PriorityGroupTmp << SCB_AIRCR_PRIGROUP_Pos)  );              /* Insert write key and priority group */
 8003460:	68fb      	ldr	r3, [r7, #12]
 8003462:	021a      	lsls	r2, r3, #8
                ((uint32_t)0x5FAUL << SCB_AIRCR_VECTKEY_Pos) |
 8003464:	68bb      	ldr	r3, [r7, #8]
 8003466:	4313      	orrs	r3, r2
  reg_value  =  (reg_value                                   |
 8003468:	f043 63bf 	orr.w	r3, r3, #100139008	@ 0x5f80000
 800346c:	f443 3300 	orr.w	r3, r3, #131072	@ 0x20000
 8003470:	60bb      	str	r3, [r7, #8]
  SCB->AIRCR =  reg_value;
 8003472:	4a04      	ldr	r2, [pc, #16]	@ (8003484 <__NVIC_SetPriorityGrouping+0x44>)
 8003474:	68bb      	ldr	r3, [r7, #8]
 8003476:	60d3      	str	r3, [r2, #12]
}
 8003478:	bf00      	nop
 800347a:	3714      	adds	r7, #20
 800347c:	46bd      	mov	sp, r7
 800347e:	f85d 7b04 	ldr.w	r7, [sp], #4
 8003482:	4770      	bx	lr
 8003484:	e000ed00 	.word	0xe000ed00

08003488 <__NVIC_GetPriorityGrouping>:
  \brief   Get Priority Grouping
  \details Reads the priority grouping field from the NVIC Interrupt Controller.
  \return                Priority grouping field (SCB->AIRCR [10:8] PRIGROUP field).
 */
__STATIC_INLINE uint32_t __NVIC_GetPriorityGrouping(void)
{
 8003488:	b480      	push	{r7}
 800348a:	af00      	add	r7, sp, #0
  return ((uint32_t)((SCB->AIRCR & SCB_AIRCR_PRIGROUP_Msk) >> SCB_AIRCR_PRIGROUP_Pos));
 800348c:	4b04      	ldr	r3, [pc, #16]	@ (80034a0 <__NVIC_GetPriorityGrouping+0x18>)
 800348e:	68db      	ldr	r3, [r3, #12]
 8003490:	0a1b      	lsrs	r3, r3, #8
 8003492:	f003 0307 	and.w	r3, r3, #7
}
 8003496:	4618      	mov	r0, r3
 8003498:	46bd      	mov	sp, r7
 800349a:	f85d 7b04 	ldr.w	r7, [sp], #4
 800349e:	4770      	bx	lr
 80034a0:	e000ed00 	.word	0xe000ed00

080034a4 <__NVIC_EnableIRQ>:
  \details Enables a device specific interrupt in the NVIC interrupt controller.
  \param [in]      IRQn  Device specific interrupt number.
  \note    IRQn must not be negative.
 */
__STATIC_INLINE void __NVIC_EnableIRQ(IRQn_Type IRQn)
{
 80034a4:	b480      	push	{r7}
 80034a6:	b083      	sub	sp, #12
 80034a8:	af00      	add	r7, sp, #0
 80034aa:	4603      	mov	r3, r0
 80034ac:	71fb      	strb	r3, [r7, #7]
  if ((int32_t)(IRQn) >= 0)
 80034ae:	f997 3007 	ldrsb.w	r3, [r7, #7]
 80034b2:	2b00      	cmp	r3, #0
 80034b4:	db0b      	blt.n	80034ce <__NVIC_EnableIRQ+0x2a>
  {
    __COMPILER_BARRIER();
    NVIC->ISER[(((uint32_t)IRQn) >> 5UL)] = (uint32_t)(1UL << (((uint32_t)IRQn) & 0x1FUL));
 80034b6:	79fb      	ldrb	r3, [r7, #7]
 80034b8:	f003 021f 	and.w	r2, r3, #31
 80034bc:	4907      	ldr	r1, [pc, #28]	@ (80034dc <__NVIC_EnableIRQ+0x38>)
 80034be:	f997 3007 	ldrsb.w	r3, [r7, #7]
 80034c2:	095b      	lsrs	r3, r3, #5
 80034c4:	2001      	movs	r0, #1
 80034c6:	fa00 f202 	lsl.w	r2, r0, r2
 80034ca:	f841 2023 	str.w	r2, [r1, r3, lsl #2]
    __COMPILER_BARRIER();
  }
}
 80034ce:	bf00      	nop
 80034d0:	370c      	adds	r7, #12
 80034d2:	46bd      	mov	sp, r7
 80034d4:	f85d 7b04 	ldr.w	r7, [sp], #4
 80034d8:	4770      	bx	lr
 80034da:	bf00      	nop
 80034dc:	e000e100 	.word	0xe000e100

080034e0 <__NVIC_DisableIRQ>:
  \details Disables a device specific interrupt in the NVIC interrupt controller.
  \param [in]      IRQn  Device specific interrupt number.
  \note    IRQn must not be negative.
 */
__STATIC_INLINE void __NVIC_DisableIRQ(IRQn_Type IRQn)
{
 80034e0:	b480      	push	{r7}
 80034e2:	b083      	sub	sp, #12
 80034e4:	af00      	add	r7, sp, #0
 80034e6:	4603      	mov	r3, r0
 80034e8:	71fb      	strb	r3, [r7, #7]
  if ((int32_t)(IRQn) >= 0)
 80034ea:	f997 3007 	ldrsb.w	r3, [r7, #7]
 80034ee:	2b00      	cmp	r3, #0
 80034f0:	db12      	blt.n	8003518 <__NVIC_DisableIRQ+0x38>
  {
    NVIC->ICER[(((uint32_t)IRQn) >> 5UL)] = (uint32_t)(1UL << (((uint32_t)IRQn) & 0x1FUL));
 80034f2:	79fb      	ldrb	r3, [r7, #7]
 80034f4:	f003 021f 	and.w	r2, r3, #31
 80034f8:	490a      	ldr	r1, [pc, #40]	@ (8003524 <__NVIC_DisableIRQ+0x44>)
 80034fa:	f997 3007 	ldrsb.w	r3, [r7, #7]
 80034fe:	095b      	lsrs	r3, r3, #5
 8003500:	2001      	movs	r0, #1
 8003502:	fa00 f202 	lsl.w	r2, r0, r2
 8003506:	3320      	adds	r3, #32
 8003508:	f841 2023 	str.w	r2, [r1, r3, lsl #2]
  __ASM volatile ("dsb 0xF":::"memory");
 800350c:	f3bf 8f4f 	dsb	sy
}
 8003510:	bf00      	nop
  __ASM volatile ("isb 0xF":::"memory");
 8003512:	f3bf 8f6f 	isb	sy
}
 8003516:	bf00      	nop
    __DSB();
    __ISB();
  }
}
 8003518:	bf00      	nop
 800351a:	370c      	adds	r7, #12
 800351c:	46bd      	mov	sp, r7
 800351e:	f85d 7b04 	ldr.w	r7, [sp], #4
 8003522:	4770      	bx	lr
 8003524:	e000e100 	.word	0xe000e100

08003528 <__NVIC_ClearPendingIRQ>:
  \details Clears the pending bit of a device specific interrupt in the NVIC pending register.
  \param [in]      IRQn  Device specific interrupt number.
  \note    IRQn must not be negative.
 */
__STATIC_INLINE void __NVIC_ClearPendingIRQ(IRQn_Type IRQn)
{
 8003528:	b480      	push	{r7}
 800352a:	b083      	sub	sp, #12
 800352c:	af00      	add	r7, sp, #0
 800352e:	4603      	mov	r3, r0
 8003530:	71fb      	strb	r3, [r7, #7]
  if ((int32_t)(IRQn) >= 0)
 8003532:	f997 3007 	ldrsb.w	r3, [r7, #7]
 8003536:	2b00      	cmp	r3, #0
 8003538:	db0c      	blt.n	8003554 <__NVIC_ClearPendingIRQ+0x2c>
  {
    NVIC->ICPR[(((uint32_t)IRQn) >> 5UL)] = (uint32_t)(1UL << (((uint32_t)IRQn) & 0x1FUL));
 800353a:	79fb      	ldrb	r3, [r7, #7]
 800353c:	f003 021f 	and.w	r2, r3, #31
 8003540:	4907      	ldr	r1, [pc, #28]	@ (8003560 <__NVIC_ClearPendingIRQ+0x38>)
 8003542:	f997 3007 	ldrsb.w	r3, [r7, #7]
 8003546:	095b      	lsrs	r3, r3, #5
 8003548:	2001      	movs	r0, #1
 800354a:	fa00 f202 	lsl.w	r2, r0, r2
 800354e:	3360      	adds	r3, #96	@ 0x60
 8003550:	f841 2023 	str.w	r2, [r1, r3, lsl #2]
  }
}
 8003554:	bf00      	nop
 8003556:	370c      	adds	r7, #12
 8003558:	46bd      	mov	sp, r7
 800355a:	f85d 7b04 	ldr.w	r7, [sp], #4
 800355e:	4770      	bx	lr
 8003560:	e000e100 	.word	0xe000e100

08003564 <__NVIC_SetPriority>:
  \param [in]      IRQn  Interrupt number.
  \param [in]  priority  Priority to set.
  \note    The priority cannot be set for every processor exception.
 */
__STATIC_INLINE void __NVIC_SetPriority(IRQn_Type IRQn, uint32_t priority)
{
 8003564:	b480      	push	{r7}
 8003566:	b083      	sub	sp, #12
 8003568:	af00      	add	r7, sp, #0
 800356a:	4603      	mov	r3, r0
 800356c:	6039      	str	r1, [r7, #0]
 800356e:	71fb      	strb	r3, [r7, #7]
  if ((int32_t)(IRQn) >= 0)
 8003570:	f997 3007 	ldrsb.w	r3, [r7, #7]
 8003574:	2b00      	cmp	r3, #0
 8003576:	db0a      	blt.n	800358e <__NVIC_SetPriority+0x2a>
  {
    NVIC->IP[((uint32_t)IRQn)]               = (uint8_t)((priority << (8U - __NVIC_PRIO_BITS)) & (uint32_t)0xFFUL);
 8003578:	683b      	ldr	r3, [r7, #0]
 800357a:	b2da      	uxtb	r2, r3
 800357c:	490c      	ldr	r1, [pc, #48]	@ (80035b0 <__NVIC_SetPriority+0x4c>)
 800357e:	f997 3007 	ldrsb.w	r3, [r7, #7]
 8003582:	0112      	lsls	r2, r2, #4
 8003584:	b2d2      	uxtb	r2, r2
 8003586:	440b      	add	r3, r1
 8003588:	f883 2300 	strb.w	r2, [r3, #768]	@ 0x300
  }
  else
  {
    SCB->SHP[(((uint32_t)IRQn) & 0xFUL)-4UL] = (uint8_t)((priority << (8U - __NVIC_PRIO_BITS)) & (uint32_t)0xFFUL);
  }
}
 800358c:	e00a      	b.n	80035a4 <__NVIC_SetPriority+0x40>
    SCB->SHP[(((uint32_t)IRQn) & 0xFUL)-4UL] = (uint8_t)((priority << (8U - __NVIC_PRIO_BITS)) & (uint32_t)0xFFUL);
 800358e:	683b      	ldr	r3, [r7, #0]
 8003590:	b2da      	uxtb	r2, r3
 8003592:	4908      	ldr	r1, [pc, #32]	@ (80035b4 <__NVIC_SetPriority+0x50>)
 8003594:	79fb      	ldrb	r3, [r7, #7]
 8003596:	f003 030f 	and.w	r3, r3, #15
 800359a:	3b04      	subs	r3, #4
 800359c:	0112      	lsls	r2, r2, #4
 800359e:	b2d2      	uxtb	r2, r2
 80035a0:	440b      	add	r3, r1
 80035a2:	761a      	strb	r2, [r3, #24]
}
 80035a4:	bf00      	nop
 80035a6:	370c      	adds	r7, #12
 80035a8:	46bd      	mov	sp, r7
 80035aa:	f85d 7b04 	ldr.w	r7, [sp], #4
 80035ae:	4770      	bx	lr
 80035b0:	e000e100 	.word	0xe000e100
 80035b4:	e000ed00 	.word	0xe000ed00

080035b8 <NVIC_EncodePriority>:
  \param [in]   PreemptPriority  Preemptive priority value (starting from 0).
  \param [in]       SubPriority  Subpriority value (starting from 0).
  \return                        Encoded priority. Value can be used in the function \ref NVIC_SetPriority().
 */
__STATIC_INLINE uint32_t NVIC_EncodePriority (uint32_t PriorityGroup, uint32_t PreemptPriority, uint32_t SubPriority)
{
 80035b8:	b480      	push	{r7}
 80035ba:	b089      	sub	sp, #36	@ 0x24
 80035bc:	af00      	add	r7, sp, #0
 80035be:	60f8      	str	r0, [r7, #12]
 80035c0:	60b9      	str	r1, [r7, #8]
 80035c2:	607a      	str	r2, [r7, #4]
  uint32_t PriorityGroupTmp = (PriorityGroup & (uint32_t)0x07UL);   /* only values 0..7 are used          */
 80035c4:	68fb      	ldr	r3, [r7, #12]
 80035c6:	f003 0307 	and.w	r3, r3, #7
 80035ca:	61fb      	str	r3, [r7, #28]
  uint32_t PreemptPriorityBits;
  uint32_t SubPriorityBits;

  PreemptPriorityBits = ((7UL - PriorityGroupTmp) > (uint32_t)(__NVIC_PRIO_BITS)) ? (uint32_t)(__NVIC_PRIO_BITS) : (uint32_t)(7UL - PriorityGroupTmp);
 80035cc:	69fb      	ldr	r3, [r7, #28]
 80035ce:	f1c3 0307 	rsb	r3, r3, #7
 80035d2:	2b04      	cmp	r3, #4
 80035d4:	bf28      	it	cs
 80035d6:	2304      	movcs	r3, #4
 80035d8:	61bb      	str	r3, [r7, #24]
  SubPriorityBits     = ((PriorityGroupTmp + (uint32_t)(__NVIC_PRIO_BITS)) < (uint32_t)7UL) ? (uint32_t)0UL : (uint32_t)((PriorityGroupTmp - 7UL) + (uint32_t)(__NVIC_PRIO_BITS));
 80035da:	69fb      	ldr	r3, [r7, #28]
 80035dc:	3304      	adds	r3, #4
 80035de:	2b06      	cmp	r3, #6
 80035e0:	d902      	bls.n	80035e8 <NVIC_EncodePriority+0x30>
 80035e2:	69fb      	ldr	r3, [r7, #28]
 80035e4:	3b03      	subs	r3, #3
 80035e6:	e000      	b.n	80035ea <NVIC_EncodePriority+0x32>
 80035e8:	2300      	movs	r3, #0
 80035ea:	617b      	str	r3, [r7, #20]

  return (
           ((PreemptPriority & (uint32_t)((1UL << (PreemptPriorityBits)) - 1UL)) << SubPriorityBits) |
 80035ec:	f04f 32ff 	mov.w	r2, #4294967295
 80035f0:	69bb      	ldr	r3, [r7, #24]
 80035f2:	fa02 f303 	lsl.w	r3, r2, r3
 80035f6:	43da      	mvns	r2, r3
 80035f8:	68bb      	ldr	r3, [r7, #8]
 80035fa:	401a      	ands	r2, r3
 80035fc:	697b      	ldr	r3, [r7, #20]
 80035fe:	409a      	lsls	r2, r3
           ((SubPriority     & (uint32_t)((1UL << (SubPriorityBits    )) - 1UL)))
 8003600:	f04f 31ff 	mov.w	r1, #4294967295
 8003604:	697b      	ldr	r3, [r7, #20]
 8003606:	fa01 f303 	lsl.w	r3, r1, r3
 800360a:	43d9      	mvns	r1, r3
 800360c:	687b      	ldr	r3, [r7, #4]
 800360e:	400b      	ands	r3, r1
           ((PreemptPriority & (uint32_t)((1UL << (PreemptPriorityBits)) - 1UL)) << SubPriorityBits) |
 8003610:	4313      	orrs	r3, r2
         );
}
 8003612:	4618      	mov	r0, r3
 8003614:	3724      	adds	r7, #36	@ 0x24
 8003616:	46bd      	mov	sp, r7
 8003618:	f85d 7b04 	ldr.w	r7, [sp], #4
 800361c:	4770      	bx	lr
	...

08003620 <SysTick_Config>:
  \note    When the variable <b>__Vendor_SysTickConfig</b> is set to 1, then the
           function <b>SysTick_Config</b> is not included. In this case, the file <b><i>device</i>.h</b>
           must contain a vendor-specific implementation of this function.
 */
__STATIC_INLINE uint32_t SysTick_Config(uint32_t ticks)
{
 8003620:	b580      	push	{r7, lr}
 8003622:	b082      	sub	sp, #8
 8003624:	af00      	add	r7, sp, #0
 8003626:	6078      	str	r0, [r7, #4]
  if ((ticks - 1UL) > SysTick_LOAD_RELOAD_Msk)
 8003628:	687b      	ldr	r3, [r7, #4]
 800362a:	3b01      	subs	r3, #1
 800362c:	f1b3 7f80 	cmp.w	r3, #16777216	@ 0x1000000
 8003630:	d301      	bcc.n	8003636 <SysTick_Config+0x16>
  {
    return (1UL);                                                   /* Reload value impossible */
 8003632:	2301      	movs	r3, #1
 8003634:	e00f      	b.n	8003656 <SysTick_Config+0x36>
  }

  SysTick->LOAD  = (uint32_t)(ticks - 1UL);                         /* set reload register */
 8003636:	4a0a      	ldr	r2, [pc, #40]	@ (8003660 <SysTick_Config+0x40>)
 8003638:	687b      	ldr	r3, [r7, #4]
 800363a:	3b01      	subs	r3, #1
 800363c:	6053      	str	r3, [r2, #4]
  NVIC_SetPriority (SysTick_IRQn, (1UL << __NVIC_PRIO_BITS) - 1UL); /* set Priority for Systick Interrupt */
 800363e:	210f      	movs	r1, #15
 8003640:	f04f 30ff 	mov.w	r0, #4294967295
 8003644:	f7ff ff8e 	bl	8003564 <__NVIC_SetPriority>
  SysTick->VAL   = 0UL;                                             /* Load the SysTick Counter Value */
 8003648:	4b05      	ldr	r3, [pc, #20]	@ (8003660 <SysTick_Config+0x40>)
 800364a:	2200      	movs	r2, #0
 800364c:	609a      	str	r2, [r3, #8]
  SysTick->CTRL  = SysTick_CTRL_CLKSOURCE_Msk |
 800364e:	4b04      	ldr	r3, [pc, #16]	@ (8003660 <SysTick_Config+0x40>)
 8003650:	2207      	movs	r2, #7
 8003652:	601a      	str	r2, [r3, #0]
                   SysTick_CTRL_TICKINT_Msk   |
                   SysTick_CTRL_ENABLE_Msk;                         /* Enable SysTick IRQ and SysTick Timer */
  return (0UL);                                                     /* Function successful */
 8003654:	2300      	movs	r3, #0
}
 8003656:	4618      	mov	r0, r3
 8003658:	3708      	adds	r7, #8
 800365a:	46bd      	mov	sp, r7
 800365c:	bd80      	pop	{r7, pc}
 800365e:	bf00      	nop
 8003660:	e000e010 	.word	0xe000e010

08003664 <HAL_NVIC_SetPriorityGrouping>:
  * @note   When the NVIC_PriorityGroup_0 is selected, IRQ preemption is no more possible. 
  *         The pending IRQ priority will be managed only by the subpriority. 
  * @retval None
  */
void HAL_NVIC_SetPriorityGrouping(uint32_t PriorityGroup)
{
 8003664:	b580      	push	{r7, lr}
 8003666:	b082      	sub	sp, #8
 8003668:	af00      	add	r7, sp, #0
 800366a:	6078      	str	r0, [r7, #4]
  /* Check the parameters */
  assert_param(IS_NVIC_PRIORITY_GROUP(PriorityGroup));
  
  /* Set the PRIGROUP[10:8] bits according to the PriorityGroup parameter value */
  NVIC_SetPriorityGrouping(PriorityGroup);
 800366c:	6878      	ldr	r0, [r7, #4]
 800366e:	f7ff fee7 	bl	8003440 <__NVIC_SetPriorityGrouping>
}
 8003672:	bf00      	nop
 8003674:	3708      	adds	r7, #8
 8003676:	46bd      	mov	sp, r7
 8003678:	bd80      	pop	{r7, pc}

0800367a <HAL_NVIC_SetPriority>:
  *         This parameter can be a value between 0 and 15
  *         A lower priority value indicates a higher priority.          
  * @retval None
  */
void HAL_NVIC_SetPriority(IRQn_Type IRQn, uint32_t PreemptPriority, uint32_t SubPriority)
{ 
 800367a:	b580      	push	{r7, lr}
 800367c:	b086      	sub	sp, #24
 800367e:	af00      	add	r7, sp, #0
 8003680:	4603      	mov	r3, r0
 8003682:	60b9      	str	r1, [r7, #8]
 8003684:	607a      	str	r2, [r7, #4]
 8003686:	73fb      	strb	r3, [r7, #15]
  uint32_t prioritygroup = 0x00U;
 8003688:	2300      	movs	r3, #0
 800368a:	617b      	str	r3, [r7, #20]
  
  /* Check the parameters */
  assert_param(IS_NVIC_SUB_PRIORITY(SubPriority));
  assert_param(IS_NVIC_PREEMPTION_PRIORITY(PreemptPriority));
  
  prioritygroup = NVIC_GetPriorityGrouping();
 800368c:	f7ff fefc 	bl	8003488 <__NVIC_GetPriorityGrouping>
 8003690:	6178      	str	r0, [r7, #20]
  
  NVIC_SetPriority(IRQn, NVIC_EncodePriority(prioritygroup, PreemptPriority, SubPriority));
 8003692:	687a      	ldr	r2, [r7, #4]
 8003694:	68b9      	ldr	r1, [r7, #8]
 8003696:	6978      	ldr	r0, [r7, #20]
 8003698:	f7ff ff8e 	bl	80035b8 <NVIC_EncodePriority>
 800369c:	4602      	mov	r2, r0
 800369e:	f997 300f 	ldrsb.w	r3, [r7, #15]
 80036a2:	4611      	mov	r1, r2
 80036a4:	4618      	mov	r0, r3
 80036a6:	f7ff ff5d 	bl	8003564 <__NVIC_SetPriority>
}
 80036aa:	bf00      	nop
 80036ac:	3718      	adds	r7, #24
 80036ae:	46bd      	mov	sp, r7
 80036b0:	bd80      	pop	{r7, pc}

080036b2 <HAL_NVIC_EnableIRQ>:
  *         This parameter can be an enumerator of IRQn_Type enumeration
  *         (For the complete STM32 Devices IRQ Channels list, please refer to the appropriate CMSIS device file (stm32f4xxxx.h))
  * @retval None
  */
void HAL_NVIC_EnableIRQ(IRQn_Type IRQn)
{
 80036b2:	b580      	push	{r7, lr}
 80036b4:	b082      	sub	sp, #8
 80036b6:	af00      	add	r7, sp, #0
 80036b8:	4603      	mov	r3, r0
 80036ba:	71fb      	strb	r3, [r7, #7]
  /* Check the parameters */
  assert_param(IS_NVIC_DEVICE_IRQ(IRQn));
  
  /* Enable interrupt */
  NVIC_EnableIRQ(IRQn);
 80036bc:	f997 3007 	ldrsb.w	r3, [r7, #7]
 80036c0:	4618      	mov	r0, r3
 80036c2:	f7ff feef 	bl	80034a4 <__NVIC_EnableIRQ>
}
 80036c6:	bf00      	nop
 80036c8:	3708      	adds	r7, #8
 80036ca:	46bd      	mov	sp, r7
 80036cc:	bd80      	pop	{r7, pc}

080036ce <HAL_NVIC_DisableIRQ>:
  *         This parameter can be an enumerator of IRQn_Type enumeration
  *         (For the complete STM32 Devices IRQ Channels list, please refer to the appropriate CMSIS device file (stm32f4xxxx.h))
  * @retval None
  */
void HAL_NVIC_DisableIRQ(IRQn_Type IRQn)
{
 80036ce:	b580      	push	{r7, lr}
 80036d0:	b082      	sub	sp, #8
 80036d2:	af00      	add	r7, sp, #0
 80036d4:	4603      	mov	r3, r0
 80036d6:	71fb      	strb	r3, [r7, #7]
  /* Check the parameters */
  assert_param(IS_NVIC_DEVICE_IRQ(IRQn));
  
  /* Disable interrupt */
  NVIC_DisableIRQ(IRQn);
 80036d8:	f997 3007 	ldrsb.w	r3, [r7, #7]
 80036dc:	4618      	mov	r0, r3
 80036de:	f7ff feff 	bl	80034e0 <__NVIC_DisableIRQ>
}
 80036e2:	bf00      	nop
 80036e4:	3708      	adds	r7, #8
 80036e6:	46bd      	mov	sp, r7
 80036e8:	bd80      	pop	{r7, pc}

080036ea <HAL_SYSTICK_Config>:
  * @param  TicksNumb Specifies the ticks Number of ticks between two interrupts.
  * @retval status:  - 0  Function succeeded.
  *                  - 1  Function failed.
  */
uint32_t HAL_SYSTICK_Config(uint32_t TicksNumb)
{
 80036ea:	b580      	push	{r7, lr}
 80036ec:	b082      	sub	sp, #8
 80036ee:	af00      	add	r7, sp, #0
 80036f0:	6078      	str	r0, [r7, #4]
   return SysTick_Config(TicksNumb);
 80036f2:	6878      	ldr	r0, [r7, #4]
 80036f4:	f7ff ff94 	bl	8003620 <SysTick_Config>
 80036f8:	4603      	mov	r3, r0
}
 80036fa:	4618      	mov	r0, r3
 80036fc:	3708      	adds	r7, #8
 80036fe:	46bd      	mov	sp, r7
 8003700:	bd80      	pop	{r7, pc}

08003702 <HAL_NVIC_ClearPendingIRQ>:
  *         This parameter can be an enumerator of IRQn_Type enumeration
  *         (For the complete STM32 Devices IRQ Channels list, please refer to the appropriate CMSIS device file (stm32f4xxxx.h))
  * @retval None
  */
void HAL_NVIC_ClearPendingIRQ(IRQn_Type IRQn)
{
 8003702:	b580      	push	{r7, lr}
 8003704:	b082      	sub	sp, #8
 8003706:	af00      	add	r7, sp, #0
 8003708:	4603      	mov	r3, r0
 800370a:	71fb      	strb	r3, [r7, #7]
  /* Check the parameters */
  assert_param(IS_NVIC_DEVICE_IRQ(IRQn));
  
  /* Clear pending interrupt */
  NVIC_ClearPendingIRQ(IRQn);
 800370c:	f997 3007 	ldrsb.w	r3, [r7, #7]
 8003710:	4618      	mov	r0, r3
 8003712:	f7ff ff09 	bl	8003528 <__NVIC_ClearPendingIRQ>
}
 8003716:	bf00      	nop
 8003718:	3708      	adds	r7, #8
 800371a:	46bd      	mov	sp, r7
 800371c:	bd80      	pop	{r7, pc}

0800371e <HAL_CRC_Init>:
  *         parameters in the CRC_InitTypeDef and create the associated handle.
  * @param  hcrc CRC handle
  * @retval HAL status
  */
HAL_StatusTypeDef HAL_CRC_Init(CRC_HandleTypeDef *hcrc)
{
 800371e:	b580      	push	{r7, lr}
 8003720:	b082      	sub	sp, #8
 8003722:	af00      	add	r7, sp, #0
 8003724:	6078      	str	r0, [r7, #4]
  /* Check the CRC handle allocation */
  if (hcrc == NULL)
 8003726:	687b      	ldr	r3, [r7, #4]
 8003728:	2b00      	cmp	r3, #0
 800372a:	d101      	bne.n	8003730 <HAL_CRC_Init+0x12>
  {
    return HAL_ERROR;
 800372c:	2301      	movs	r3, #1
 800372e:	e00e      	b.n	800374e <HAL_CRC_Init+0x30>
  }

  /* Check the parameters */
  assert_param(IS_CRC_ALL_INSTANCE(hcrc->Instance));

  if (hcrc->State == HAL_CRC_STATE_RESET)
 8003730:	687b      	ldr	r3, [r7, #4]
 8003732:	795b      	ldrb	r3, [r3, #5]
 8003734:	b2db      	uxtb	r3, r3
 8003736:	2b00      	cmp	r3, #0
 8003738:	d105      	bne.n	8003746 <HAL_CRC_Init+0x28>
  {
    /* Allocate lock resource and initialize it */
    hcrc->Lock = HAL_UNLOCKED;
 800373a:	687b      	ldr	r3, [r7, #4]
 800373c:	2200      	movs	r2, #0
 800373e:	711a      	strb	r2, [r3, #4]
    /* Init the low level hardware */
    HAL_CRC_MspInit(hcrc);
 8003740:	6878      	ldr	r0, [r7, #4]
 8003742:	f7fe f8d1 	bl	80018e8 <HAL_CRC_MspInit>
  }

  /* Change CRC peripheral state */
  hcrc->State = HAL_CRC_STATE_READY;
 8003746:	687b      	ldr	r3, [r7, #4]
 8003748:	2201      	movs	r2, #1
 800374a:	715a      	strb	r2, [r3, #5]

  /* Return function status */
  return HAL_OK;
 800374c:	2300      	movs	r3, #0
}
 800374e:	4618      	mov	r0, r3
 8003750:	3708      	adds	r7, #8
 8003752:	46bd      	mov	sp, r7
 8003754:	bd80      	pop	{r7, pc}
	...

08003758 <HAL_DMA_Init>:
  * @param  hdma Pointer to a DMA_HandleTypeDef structure that contains
  *               the configuration information for the specified DMA Stream.  
  * @retval HAL status
  */
HAL_StatusTypeDef HAL_DMA_Init(DMA_HandleTypeDef *hdma)
{
 8003758:	b580      	push	{r7, lr}
 800375a:	b086      	sub	sp, #24
 800375c:	af00      	add	r7, sp, #0
 800375e:	6078      	str	r0, [r7, #4]
  uint32_t tmp = 0U;
 8003760:	2300      	movs	r3, #0
 8003762:	617b      	str	r3, [r7, #20]
  uint32_t tickstart = HAL_GetTick();
 8003764:	f7ff f8f6 	bl	8002954 <HAL_GetTick>
 8003768:	6138      	str	r0, [r7, #16]
  DMA_Base_Registers *regs;

  /* Check the DMA peripheral state */
  if(hdma == NULL)
 800376a:	687b      	ldr	r3, [r7, #4]
 800376c:	2b00      	cmp	r3, #0
 800376e:	d101      	bne.n	8003774 <HAL_DMA_Init+0x1c>
  {
    return HAL_ERROR;
 8003770:	2301      	movs	r3, #1
 8003772:	e099      	b.n	80038a8 <HAL_DMA_Init+0x150>
    assert_param(IS_DMA_MEMORY_BURST(hdma->Init.MemBurst));
    assert_param(IS_DMA_PERIPHERAL_BURST(hdma->Init.PeriphBurst));
  }

  /* Change DMA peripheral state */
  hdma->State = HAL_DMA_STATE_BUSY;
 8003774:	687b      	ldr	r3, [r7, #4]
 8003776:	2202      	movs	r2, #2
 8003778:	f883 2035 	strb.w	r2, [r3, #53]	@ 0x35

  /* Allocate lock resource */
  __HAL_UNLOCK(hdma);
 800377c:	687b      	ldr	r3, [r7, #4]
 800377e:	2200      	movs	r2, #0
 8003780:	f883 2034 	strb.w	r2, [r3, #52]	@ 0x34
  
  /* Disable the peripheral */
  __HAL_DMA_DISABLE(hdma);
 8003784:	687b      	ldr	r3, [r7, #4]
 8003786:	681b      	ldr	r3, [r3, #0]
 8003788:	681a      	ldr	r2, [r3, #0]
 800378a:	687b      	ldr	r3, [r7, #4]
 800378c:	681b      	ldr	r3, [r3, #0]
 800378e:	f022 0201 	bic.w	r2, r2, #1
 8003792:	601a      	str	r2, [r3, #0]
  
  /* Check if the DMA Stream is effectively disabled */
  while((hdma->Instance->CR & DMA_SxCR_EN) != RESET)
 8003794:	e00f      	b.n	80037b6 <HAL_DMA_Init+0x5e>
  {
    /* Check for the Timeout */
    if((HAL_GetTick() - tickstart ) > HAL_TIMEOUT_DMA_ABORT)
 8003796:	f7ff f8dd 	bl	8002954 <HAL_GetTick>
 800379a:	4602      	mov	r2, r0
 800379c:	693b      	ldr	r3, [r7, #16]
 800379e:	1ad3      	subs	r3, r2, r3
 80037a0:	2b05      	cmp	r3, #5
 80037a2:	d908      	bls.n	80037b6 <HAL_DMA_Init+0x5e>
    {
      /* Update error code */
      hdma->ErrorCode = HAL_DMA_ERROR_TIMEOUT;
 80037a4:	687b      	ldr	r3, [r7, #4]
 80037a6:	2220      	movs	r2, #32
 80037a8:	655a      	str	r2, [r3, #84]	@ 0x54
      
      /* Change the DMA state */
      hdma->State = HAL_DMA_STATE_TIMEOUT;
 80037aa:	687b      	ldr	r3, [r7, #4]
 80037ac:	2203      	movs	r2, #3
 80037ae:	f883 2035 	strb.w	r2, [r3, #53]	@ 0x35
      
      return HAL_TIMEOUT;
 80037b2:	2303      	movs	r3, #3
 80037b4:	e078      	b.n	80038a8 <HAL_DMA_Init+0x150>
  while((hdma->Instance->CR & DMA_SxCR_EN) != RESET)
 80037b6:	687b      	ldr	r3, [r7, #4]
 80037b8:	681b      	ldr	r3, [r3, #0]
 80037ba:	681b      	ldr	r3, [r3, #0]
 80037bc:	f003 0301 	and.w	r3, r3, #1
 80037c0:	2b00      	cmp	r3, #0
 80037c2:	d1e8      	bne.n	8003796 <HAL_DMA_Init+0x3e>
    }
  }
  
  /* Get the CR register value */
  tmp = hdma->Instance->CR;
 80037c4:	687b      	ldr	r3, [r7, #4]
 80037c6:	681b      	ldr	r3, [r3, #0]
 80037c8:	681b      	ldr	r3, [r3, #0]
 80037ca:	617b      	str	r3, [r7, #20]

  /* Clear CHSEL, MBURST, PBURST, PL, MSIZE, PSIZE, MINC, PINC, CIRC, DIR, CT and DBM bits */
  tmp &= ((uint32_t)~(DMA_SxCR_CHSEL | DMA_SxCR_MBURST | DMA_SxCR_PBURST | \
 80037cc:	697a      	ldr	r2, [r7, #20]
 80037ce:	4b38      	ldr	r3, [pc, #224]	@ (80038b0 <HAL_DMA_Init+0x158>)
 80037d0:	4013      	ands	r3, r2
 80037d2:	617b      	str	r3, [r7, #20]
                      DMA_SxCR_PL    | DMA_SxCR_MSIZE  | DMA_SxCR_PSIZE  | \
                      DMA_SxCR_MINC  | DMA_SxCR_PINC   | DMA_SxCR_CIRC   | \
                      DMA_SxCR_DIR   | DMA_SxCR_CT     | DMA_SxCR_DBM));

  /* Prepare the DMA Stream configuration */
  tmp |=  hdma->Init.Channel             | hdma->Init.Direction        |
 80037d4:	687b      	ldr	r3, [r7, #4]
 80037d6:	685a      	ldr	r2, [r3, #4]
 80037d8:	687b      	ldr	r3, [r7, #4]
 80037da:	689b      	ldr	r3, [r3, #8]
 80037dc:	431a      	orrs	r2, r3
          hdma->Init.PeriphInc           | hdma->Init.MemInc           |
 80037de:	687b      	ldr	r3, [r7, #4]
 80037e0:	68db      	ldr	r3, [r3, #12]
  tmp |=  hdma->Init.Channel             | hdma->Init.Direction        |
 80037e2:	431a      	orrs	r2, r3
          hdma->Init.PeriphInc           | hdma->Init.MemInc           |
 80037e4:	687b      	ldr	r3, [r7, #4]
 80037e6:	691b      	ldr	r3, [r3, #16]
 80037e8:	431a      	orrs	r2, r3
          hdma->Init.PeriphDataAlignment | hdma->Init.MemDataAlignment |
 80037ea:	687b      	ldr	r3, [r7, #4]
 80037ec:	695b      	ldr	r3, [r3, #20]
          hdma->Init.PeriphInc           | hdma->Init.MemInc           |
 80037ee:	431a      	orrs	r2, r3
          hdma->Init.PeriphDataAlignment | hdma->Init.MemDataAlignment |
 80037f0:	687b      	ldr	r3, [r7, #4]
 80037f2:	699b      	ldr	r3, [r3, #24]
 80037f4:	431a      	orrs	r2, r3
          hdma->Init.Mode                | hdma->Init.Priority;
 80037f6:	687b      	ldr	r3, [r7, #4]
 80037f8:	69db      	ldr	r3, [r3, #28]
          hdma->Init.PeriphDataAlignment | hdma->Init.MemDataAlignment |
 80037fa:	431a      	orrs	r2, r3
          hdma->Init.Mode                | hdma->Init.Priority;
 80037fc:	687b      	ldr	r3, [r7, #4]
 80037fe:	6a1b      	ldr	r3, [r3, #32]
 8003800:	4313      	orrs	r3, r2
  tmp |=  hdma->Init.Channel             | hdma->Init.Direction        |
 8003802:	697a      	ldr	r2, [r7, #20]
 8003804:	4313      	orrs	r3, r2
 8003806:	617b      	str	r3, [r7, #20]

  /* the Memory burst and peripheral burst are not used when the FIFO is disabled */
  if(hdma->Init.FIFOMode == DMA_FIFOMODE_ENABLE)
 8003808:	687b      	ldr	r3, [r7, #4]
 800380a:	6a5b      	ldr	r3, [r3, #36]	@ 0x24
 800380c:	2b04      	cmp	r3, #4
 800380e:	d107      	bne.n	8003820 <HAL_DMA_Init+0xc8>
  {
    /* Get memory burst and peripheral burst */
    tmp |=  hdma->Init.MemBurst | hdma->Init.PeriphBurst;
 8003810:	687b      	ldr	r3, [r7, #4]
 8003812:	6ada      	ldr	r2, [r3, #44]	@ 0x2c
 8003814:	687b      	ldr	r3, [r7, #4]
 8003816:	6b1b      	ldr	r3, [r3, #48]	@ 0x30
 8003818:	4313      	orrs	r3, r2
 800381a:	697a      	ldr	r2, [r7, #20]
 800381c:	4313      	orrs	r3, r2
 800381e:	617b      	str	r3, [r7, #20]
  }
  
  /* Write to DMA Stream CR register */
  hdma->Instance->CR = tmp;  
 8003820:	687b      	ldr	r3, [r7, #4]
 8003822:	681b      	ldr	r3, [r3, #0]
 8003824:	697a      	ldr	r2, [r7, #20]
 8003826:	601a      	str	r2, [r3, #0]

  /* Get the FCR register value */
  tmp = hdma->Instance->FCR;
 8003828:	687b      	ldr	r3, [r7, #4]
 800382a:	681b      	ldr	r3, [r3, #0]
 800382c:	695b      	ldr	r3, [r3, #20]
 800382e:	617b      	str	r3, [r7, #20]

  /* Clear Direct mode and FIFO threshold bits */
  tmp &= (uint32_t)~(DMA_SxFCR_DMDIS | DMA_SxFCR_FTH);
 8003830:	697b      	ldr	r3, [r7, #20]
 8003832:	f023 0307 	bic.w	r3, r3, #7
 8003836:	617b      	str	r3, [r7, #20]

  /* Prepare the DMA Stream FIFO configuration */
  tmp |= hdma->Init.FIFOMode;
 8003838:	687b      	ldr	r3, [r7, #4]
 800383a:	6a5b      	ldr	r3, [r3, #36]	@ 0x24
 800383c:	697a      	ldr	r2, [r7, #20]
 800383e:	4313      	orrs	r3, r2
 8003840:	617b      	str	r3, [r7, #20]

  /* The FIFO threshold is not used when the FIFO mode is disabled */
  if(hdma->Init.FIFOMode == DMA_FIFOMODE_ENABLE)
 8003842:	687b      	ldr	r3, [r7, #4]
 8003844:	6a5b      	ldr	r3, [r3, #36]	@ 0x24
 8003846:	2b04      	cmp	r3, #4
 8003848:	d117      	bne.n	800387a <HAL_DMA_Init+0x122>
  {
    /* Get the FIFO threshold */
    tmp |= hdma->Init.FIFOThreshold;
 800384a:	687b      	ldr	r3, [r7, #4]
 800384c:	6a9b      	ldr	r3, [r3, #40]	@ 0x28
 800384e:	697a      	ldr	r2, [r7, #20]
 8003850:	4313      	orrs	r3, r2
 8003852:	617b      	str	r3, [r7, #20]
    
    /* Check compatibility between FIFO threshold level and size of the memory burst */
    /* for INCR4, INCR8, INCR16 bursts */
    if (hdma->Init.MemBurst != DMA_MBURST_SINGLE)
 8003854:	687b      	ldr	r3, [r7, #4]
 8003856:	6adb      	ldr	r3, [r3, #44]	@ 0x2c
 8003858:	2b00      	cmp	r3, #0
 800385a:	d00e      	beq.n	800387a <HAL_DMA_Init+0x122>
    {
      if (DMA_CheckFifoParam(hdma) != HAL_OK)
 800385c:	6878      	ldr	r0, [r7, #4]
 800385e:	f000 fa91 	bl	8003d84 <DMA_CheckFifoParam>
 8003862:	4603      	mov	r3, r0
 8003864:	2b00      	cmp	r3, #0
 8003866:	d008      	beq.n	800387a <HAL_DMA_Init+0x122>
      {
        /* Update error code */
        hdma->ErrorCode = HAL_DMA_ERROR_PARAM;
 8003868:	687b      	ldr	r3, [r7, #4]
 800386a:	2240      	movs	r2, #64	@ 0x40
 800386c:	655a      	str	r2, [r3, #84]	@ 0x54
        
        /* Change the DMA state */
        hdma->State = HAL_DMA_STATE_READY;
 800386e:	687b      	ldr	r3, [r7, #4]
 8003870:	2201      	movs	r2, #1
 8003872:	f883 2035 	strb.w	r2, [r3, #53]	@ 0x35
        
        return HAL_ERROR; 
 8003876:	2301      	movs	r3, #1
 8003878:	e016      	b.n	80038a8 <HAL_DMA_Init+0x150>
      }
    }
  }
  
  /* Write to DMA Stream FCR */
  hdma->Instance->FCR = tmp;
 800387a:	687b      	ldr	r3, [r7, #4]
 800387c:	681b      	ldr	r3, [r3, #0]
 800387e:	697a      	ldr	r2, [r7, #20]
 8003880:	615a      	str	r2, [r3, #20]

  /* Initialize StreamBaseAddress and StreamIndex parameters to be used to calculate
     DMA steam Base Address needed by HAL_DMA_IRQHandler() and HAL_DMA_PollForTransfer() */
  regs = (DMA_Base_Registers *)DMA_CalcBaseAndBitshift(hdma);
 8003882:	6878      	ldr	r0, [r7, #4]
 8003884:	f000 fa48 	bl	8003d18 <DMA_CalcBaseAndBitshift>
 8003888:	4603      	mov	r3, r0
 800388a:	60fb      	str	r3, [r7, #12]
  
  /* Clear all interrupt flags */
  regs->IFCR = 0x3FU << hdma->StreamIndex;
 800388c:	687b      	ldr	r3, [r7, #4]
 800388e:	6ddb      	ldr	r3, [r3, #92]	@ 0x5c
 8003890:	223f      	movs	r2, #63	@ 0x3f
 8003892:	409a      	lsls	r2, r3
 8003894:	68fb      	ldr	r3, [r7, #12]
 8003896:	609a      	str	r2, [r3, #8]

  /* Initialize the error code */
  hdma->ErrorCode = HAL_DMA_ERROR_NONE;
 8003898:	687b      	ldr	r3, [r7, #4]
 800389a:	2200      	movs	r2, #0
 800389c:	655a      	str	r2, [r3, #84]	@ 0x54
                                                                                     
  /* Initialize the DMA state */
  hdma->State = HAL_DMA_STATE_READY;
 800389e:	687b      	ldr	r3, [r7, #4]
 80038a0:	2201      	movs	r2, #1
 80038a2:	f883 2035 	strb.w	r2, [r3, #53]	@ 0x35

  return HAL_OK;
 80038a6:	2300      	movs	r3, #0
}
 80038a8:	4618      	mov	r0, r3
 80038aa:	3718      	adds	r7, #24
 80038ac:	46bd      	mov	sp, r7
 80038ae:	bd80      	pop	{r7, pc}
 80038b0:	f010803f 	.word	0xf010803f

080038b4 <HAL_DMA_Start_IT>:
  * @param  DstAddress The destination memory Buffer address
  * @param  DataLength The length of data to be transferred from source to destination
  * @retval HAL status
  */
HAL_StatusTypeDef HAL_DMA_Start_IT(DMA_HandleTypeDef *hdma, uint32_t SrcAddress, uint32_t DstAddress, uint32_t DataLength)
{
 80038b4:	b580      	push	{r7, lr}
 80038b6:	b086      	sub	sp, #24
 80038b8:	af00      	add	r7, sp, #0
 80038ba:	60f8      	str	r0, [r7, #12]
 80038bc:	60b9      	str	r1, [r7, #8]
 80038be:	607a      	str	r2, [r7, #4]
 80038c0:	603b      	str	r3, [r7, #0]
  HAL_StatusTypeDef status = HAL_OK;
 80038c2:	2300      	movs	r3, #0
 80038c4:	75fb      	strb	r3, [r7, #23]

  /* calculate DMA base and stream number */
  DMA_Base_Registers *regs = (DMA_Base_Registers *)hdma->StreamBaseAddress;
 80038c6:	68fb      	ldr	r3, [r7, #12]
 80038c8:	6d9b      	ldr	r3, [r3, #88]	@ 0x58
 80038ca:	613b      	str	r3, [r7, #16]
  
  /* Check the parameters */
  assert_param(IS_DMA_BUFFER_SIZE(DataLength));
 
  /* Process locked */
  __HAL_LOCK(hdma);
 80038cc:	68fb      	ldr	r3, [r7, #12]
 80038ce:	f893 3034 	ldrb.w	r3, [r3, #52]	@ 0x34
 80038d2:	2b01      	cmp	r3, #1
 80038d4:	d101      	bne.n	80038da <HAL_DMA_Start_IT+0x26>
 80038d6:	2302      	movs	r3, #2
 80038d8:	e040      	b.n	800395c <HAL_DMA_Start_IT+0xa8>
 80038da:	68fb      	ldr	r3, [r7, #12]
 80038dc:	2201      	movs	r2, #1
 80038de:	f883 2034 	strb.w	r2, [r3, #52]	@ 0x34
  
  if(HAL_DMA_STATE_READY == hdma->State)
 80038e2:	68fb      	ldr	r3, [r7, #12]
 80038e4:	f893 3035 	ldrb.w	r3, [r3, #53]	@ 0x35
 80038e8:	b2db      	uxtb	r3, r3
 80038ea:	2b01      	cmp	r3, #1
 80038ec:	d12f      	bne.n	800394e <HAL_DMA_Start_IT+0x9a>
  {
    /* Change DMA peripheral state */
    hdma->State = HAL_DMA_STATE_BUSY;
 80038ee:	68fb      	ldr	r3, [r7, #12]
 80038f0:	2202      	movs	r2, #2
 80038f2:	f883 2035 	strb.w	r2, [r3, #53]	@ 0x35
    
    /* Initialize the error code */
    hdma->ErrorCode = HAL_DMA_ERROR_NONE;
 80038f6:	68fb      	ldr	r3, [r7, #12]
 80038f8:	2200      	movs	r2, #0
 80038fa:	655a      	str	r2, [r3, #84]	@ 0x54
    
    /* Configure the source, destination address and the data length */
    DMA_SetConfig(hdma, SrcAddress, DstAddress, DataLength);
 80038fc:	683b      	ldr	r3, [r7, #0]
 80038fe:	687a      	ldr	r2, [r7, #4]
 8003900:	68b9      	ldr	r1, [r7, #8]
 8003902:	68f8      	ldr	r0, [r7, #12]
 8003904:	f000 f9da 	bl	8003cbc <DMA_SetConfig>
    
    /* Clear all interrupt flags at correct offset within the register */
    regs->IFCR = 0x3FU << hdma->StreamIndex;
 8003908:	68fb      	ldr	r3, [r7, #12]
 800390a:	6ddb      	ldr	r3, [r3, #92]	@ 0x5c
 800390c:	223f      	movs	r2, #63	@ 0x3f
 800390e:	409a      	lsls	r2, r3
 8003910:	693b      	ldr	r3, [r7, #16]
 8003912:	609a      	str	r2, [r3, #8]
    
    /* Enable Common interrupts*/
    hdma->Instance->CR  |= DMA_IT_TC | DMA_IT_TE | DMA_IT_DME;
 8003914:	68fb      	ldr	r3, [r7, #12]
 8003916:	681b      	ldr	r3, [r3, #0]
 8003918:	681a      	ldr	r2, [r3, #0]
 800391a:	68fb      	ldr	r3, [r7, #12]
 800391c:	681b      	ldr	r3, [r3, #0]
 800391e:	f042 0216 	orr.w	r2, r2, #22
 8003922:	601a      	str	r2, [r3, #0]
    
    if(hdma->XferHalfCpltCallback != NULL)
 8003924:	68fb      	ldr	r3, [r7, #12]
 8003926:	6c1b      	ldr	r3, [r3, #64]	@ 0x40
 8003928:	2b00      	cmp	r3, #0
 800392a:	d007      	beq.n	800393c <HAL_DMA_Start_IT+0x88>
    {
      hdma->Instance->CR  |= DMA_IT_HT;
 800392c:	68fb      	ldr	r3, [r7, #12]
 800392e:	681b      	ldr	r3, [r3, #0]
 8003930:	681a      	ldr	r2, [r3, #0]
 8003932:	68fb      	ldr	r3, [r7, #12]
 8003934:	681b      	ldr	r3, [r3, #0]
 8003936:	f042 0208 	orr.w	r2, r2, #8
 800393a:	601a      	str	r2, [r3, #0]
    }
    
    /* Enable the Peripheral */
    __HAL_DMA_ENABLE(hdma);
 800393c:	68fb      	ldr	r3, [r7, #12]
 800393e:	681b      	ldr	r3, [r3, #0]
 8003940:	681a      	ldr	r2, [r3, #0]
 8003942:	68fb      	ldr	r3, [r7, #12]
 8003944:	681b      	ldr	r3, [r3, #0]
 8003946:	f042 0201 	orr.w	r2, r2, #1
 800394a:	601a      	str	r2, [r3, #0]
 800394c:	e005      	b.n	800395a <HAL_DMA_Start_IT+0xa6>
  }
  else
  {
    /* Process unlocked */
    __HAL_UNLOCK(hdma);	  
 800394e:	68fb      	ldr	r3, [r7, #12]
 8003950:	2200      	movs	r2, #0
 8003952:	f883 2034 	strb.w	r2, [r3, #52]	@ 0x34
    
    /* Return error status */
    status = HAL_BUSY;
 8003956:	2302      	movs	r3, #2
 8003958:	75fb      	strb	r3, [r7, #23]
  }
  
  return status;
 800395a:	7dfb      	ldrb	r3, [r7, #23]
}
 800395c:	4618      	mov	r0, r3
 800395e:	3718      	adds	r7, #24
 8003960:	46bd      	mov	sp, r7
 8003962:	bd80      	pop	{r7, pc}

08003964 <HAL_DMA_Abort_IT>:
  * @param  hdma   pointer to a DMA_HandleTypeDef structure that contains
  *                 the configuration information for the specified DMA Stream.
  * @retval HAL status
  */
HAL_StatusTypeDef HAL_DMA_Abort_IT(DMA_HandleTypeDef *hdma)
{
 8003964:	b480      	push	{r7}
 8003966:	b083      	sub	sp, #12
 8003968:	af00      	add	r7, sp, #0
 800396a:	6078      	str	r0, [r7, #4]
  if(hdma->State != HAL_DMA_STATE_BUSY)
 800396c:	687b      	ldr	r3, [r7, #4]
 800396e:	f893 3035 	ldrb.w	r3, [r3, #53]	@ 0x35
 8003972:	b2db      	uxtb	r3, r3
 8003974:	2b02      	cmp	r3, #2
 8003976:	d004      	beq.n	8003982 <HAL_DMA_Abort_IT+0x1e>
  {
    hdma->ErrorCode = HAL_DMA_ERROR_NO_XFER;
 8003978:	687b      	ldr	r3, [r7, #4]
 800397a:	2280      	movs	r2, #128	@ 0x80
 800397c:	655a      	str	r2, [r3, #84]	@ 0x54
    return HAL_ERROR;
 800397e:	2301      	movs	r3, #1
 8003980:	e00c      	b.n	800399c <HAL_DMA_Abort_IT+0x38>
  }
  else
  {
    /* Set Abort State  */
    hdma->State = HAL_DMA_STATE_ABORT;
 8003982:	687b      	ldr	r3, [r7, #4]
 8003984:	2205      	movs	r2, #5
 8003986:	f883 2035 	strb.w	r2, [r3, #53]	@ 0x35
    
    /* Disable the stream */
    __HAL_DMA_DISABLE(hdma);
 800398a:	687b      	ldr	r3, [r7, #4]
 800398c:	681b      	ldr	r3, [r3, #0]
 800398e:	681a      	ldr	r2, [r3, #0]
 8003990:	687b      	ldr	r3, [r7, #4]
 8003992:	681b      	ldr	r3, [r3, #0]
 8003994:	f022 0201 	bic.w	r2, r2, #1
 8003998:	601a      	str	r2, [r3, #0]
  }

  return HAL_OK;
 800399a:	2300      	movs	r3, #0
}
 800399c:	4618      	mov	r0, r3
 800399e:	370c      	adds	r7, #12
 80039a0:	46bd      	mov	sp, r7
 80039a2:	f85d 7b04 	ldr.w	r7, [sp], #4
 80039a6:	4770      	bx	lr

080039a8 <HAL_DMA_IRQHandler>:
  * @param  hdma pointer to a DMA_HandleTypeDef structure that contains
  *               the configuration information for the specified DMA Stream.  
  * @retval None
  */
void HAL_DMA_IRQHandler(DMA_HandleTypeDef *hdma)
{
 80039a8:	b580      	push	{r7, lr}
 80039aa:	b086      	sub	sp, #24
 80039ac:	af00      	add	r7, sp, #0
 80039ae:	6078      	str	r0, [r7, #4]
  uint32_t tmpisr;
  __IO uint32_t count = 0U;
 80039b0:	2300      	movs	r3, #0
 80039b2:	60bb      	str	r3, [r7, #8]
  uint32_t timeout = SystemCoreClock / 9600U;
 80039b4:	4b8e      	ldr	r3, [pc, #568]	@ (8003bf0 <HAL_DMA_IRQHandler+0x248>)
 80039b6:	681b      	ldr	r3, [r3, #0]
 80039b8:	4a8e      	ldr	r2, [pc, #568]	@ (8003bf4 <HAL_DMA_IRQHandler+0x24c>)
 80039ba:	fba2 2303 	umull	r2, r3, r2, r3
 80039be:	0a9b      	lsrs	r3, r3, #10
 80039c0:	617b      	str	r3, [r7, #20]

  /* calculate DMA base and stream number */
  DMA_Base_Registers *regs = (DMA_Base_Registers *)hdma->StreamBaseAddress;
 80039c2:	687b      	ldr	r3, [r7, #4]
 80039c4:	6d9b      	ldr	r3, [r3, #88]	@ 0x58
 80039c6:	613b      	str	r3, [r7, #16]

  tmpisr = regs->ISR;
 80039c8:	693b      	ldr	r3, [r7, #16]
 80039ca:	681b      	ldr	r3, [r3, #0]
 80039cc:	60fb      	str	r3, [r7, #12]

  /* Transfer Error Interrupt management ***************************************/
  if ((tmpisr & (DMA_FLAG_TEIF0_4 << hdma->StreamIndex)) != RESET)
 80039ce:	687b      	ldr	r3, [r7, #4]
 80039d0:	6ddb      	ldr	r3, [r3, #92]	@ 0x5c
 80039d2:	2208      	movs	r2, #8
 80039d4:	409a      	lsls	r2, r3
 80039d6:	68fb      	ldr	r3, [r7, #12]
 80039d8:	4013      	ands	r3, r2
 80039da:	2b00      	cmp	r3, #0
 80039dc:	d01a      	beq.n	8003a14 <HAL_DMA_IRQHandler+0x6c>
  {
    if(__HAL_DMA_GET_IT_SOURCE(hdma, DMA_IT_TE) != RESET)
 80039de:	687b      	ldr	r3, [r7, #4]
 80039e0:	681b      	ldr	r3, [r3, #0]
 80039e2:	681b      	ldr	r3, [r3, #0]
 80039e4:	f003 0304 	and.w	r3, r3, #4
 80039e8:	2b00      	cmp	r3, #0
 80039ea:	d013      	beq.n	8003a14 <HAL_DMA_IRQHandler+0x6c>
    {
      /* Disable the transfer error interrupt */
      hdma->Instance->CR  &= ~(DMA_IT_TE);
 80039ec:	687b      	ldr	r3, [r7, #4]
 80039ee:	681b      	ldr	r3, [r3, #0]
 80039f0:	681a      	ldr	r2, [r3, #0]
 80039f2:	687b      	ldr	r3, [r7, #4]
 80039f4:	681b      	ldr	r3, [r3, #0]
 80039f6:	f022 0204 	bic.w	r2, r2, #4
 80039fa:	601a      	str	r2, [r3, #0]
      
      /* Clear the transfer error flag */
      regs->IFCR = DMA_FLAG_TEIF0_4 << hdma->StreamIndex;
 80039fc:	687b      	ldr	r3, [r7, #4]
 80039fe:	6ddb      	ldr	r3, [r3, #92]	@ 0x5c
 8003a00:	2208      	movs	r2, #8
 8003a02:	409a      	lsls	r2, r3
 8003a04:	693b      	ldr	r3, [r7, #16]
 8003a06:	609a      	str	r2, [r3, #8]
      
      /* Update error code */
      hdma->ErrorCode |= HAL_DMA_ERROR_TE;
 8003a08:	687b      	ldr	r3, [r7, #4]
 8003a0a:	6d5b      	ldr	r3, [r3, #84]	@ 0x54
 8003a0c:	f043 0201 	orr.w	r2, r3, #1
 8003a10:	687b      	ldr	r3, [r7, #4]
 8003a12:	655a      	str	r2, [r3, #84]	@ 0x54
    }
  }
  /* FIFO Error Interrupt management ******************************************/
  if ((tmpisr & (DMA_FLAG_FEIF0_4 << hdma->StreamIndex)) != RESET)
 8003a14:	687b      	ldr	r3, [r7, #4]
 8003a16:	6ddb      	ldr	r3, [r3, #92]	@ 0x5c
 8003a18:	2201      	movs	r2, #1
 8003a1a:	409a      	lsls	r2, r3
 8003a1c:	68fb      	ldr	r3, [r7, #12]
 8003a1e:	4013      	ands	r3, r2
 8003a20:	2b00      	cmp	r3, #0
 8003a22:	d012      	beq.n	8003a4a <HAL_DMA_IRQHandler+0xa2>
  {
    if(__HAL_DMA_GET_IT_SOURCE(hdma, DMA_IT_FE) != RESET)
 8003a24:	687b      	ldr	r3, [r7, #4]
 8003a26:	681b      	ldr	r3, [r3, #0]
 8003a28:	695b      	ldr	r3, [r3, #20]
 8003a2a:	f003 0380 	and.w	r3, r3, #128	@ 0x80
 8003a2e:	2b00      	cmp	r3, #0
 8003a30:	d00b      	beq.n	8003a4a <HAL_DMA_IRQHandler+0xa2>
    {
      /* Clear the FIFO error flag */
      regs->IFCR = DMA_FLAG_FEIF0_4 << hdma->StreamIndex;
 8003a32:	687b      	ldr	r3, [r7, #4]
 8003a34:	6ddb      	ldr	r3, [r3, #92]	@ 0x5c
 8003a36:	2201      	movs	r2, #1
 8003a38:	409a      	lsls	r2, r3
 8003a3a:	693b      	ldr	r3, [r7, #16]
 8003a3c:	609a      	str	r2, [r3, #8]

      /* Update error code */
      hdma->ErrorCode |= HAL_DMA_ERROR_FE;
 8003a3e:	687b      	ldr	r3, [r7, #4]
 8003a40:	6d5b      	ldr	r3, [r3, #84]	@ 0x54
 8003a42:	f043 0202 	orr.w	r2, r3, #2
 8003a46:	687b      	ldr	r3, [r7, #4]
 8003a48:	655a      	str	r2, [r3, #84]	@ 0x54
    }
  }
  /* Direct Mode Error Interrupt management ***********************************/
  if ((tmpisr & (DMA_FLAG_DMEIF0_4 << hdma->StreamIndex)) != RESET)
 8003a4a:	687b      	ldr	r3, [r7, #4]
 8003a4c:	6ddb      	ldr	r3, [r3, #92]	@ 0x5c
 8003a4e:	2204      	movs	r2, #4
 8003a50:	409a      	lsls	r2, r3
 8003a52:	68fb      	ldr	r3, [r7, #12]
 8003a54:	4013      	ands	r3, r2
 8003a56:	2b00      	cmp	r3, #0
 8003a58:	d012      	beq.n	8003a80 <HAL_DMA_IRQHandler+0xd8>
  {
    if(__HAL_DMA_GET_IT_SOURCE(hdma, DMA_IT_DME) != RESET)
 8003a5a:	687b      	ldr	r3, [r7, #4]
 8003a5c:	681b      	ldr	r3, [r3, #0]
 8003a5e:	681b      	ldr	r3, [r3, #0]
 8003a60:	f003 0302 	and.w	r3, r3, #2
 8003a64:	2b00      	cmp	r3, #0
 8003a66:	d00b      	beq.n	8003a80 <HAL_DMA_IRQHandler+0xd8>
    {
      /* Clear the direct mode error flag */
      regs->IFCR = DMA_FLAG_DMEIF0_4 << hdma->StreamIndex;
 8003a68:	687b      	ldr	r3, [r7, #4]
 8003a6a:	6ddb      	ldr	r3, [r3, #92]	@ 0x5c
 8003a6c:	2204      	movs	r2, #4
 8003a6e:	409a      	lsls	r2, r3
 8003a70:	693b      	ldr	r3, [r7, #16]
 8003a72:	609a      	str	r2, [r3, #8]

      /* Update error code */
      hdma->ErrorCode |= HAL_DMA_ERROR_DME;
 8003a74:	687b      	ldr	r3, [r7, #4]
 8003a76:	6d5b      	ldr	r3, [r3, #84]	@ 0x54
 8003a78:	f043 0204 	orr.w	r2, r3, #4
 8003a7c:	687b      	ldr	r3, [r7, #4]
 8003a7e:	655a      	str	r2, [r3, #84]	@ 0x54
    }
  }
  /* Half Transfer Complete Interrupt management ******************************/
  if ((tmpisr & (DMA_FLAG_HTIF0_4 << hdma->StreamIndex)) != RESET)
 8003a80:	687b      	ldr	r3, [r7, #4]
 8003a82:	6ddb      	ldr	r3, [r3, #92]	@ 0x5c
 8003a84:	2210      	movs	r2, #16
 8003a86:	409a      	lsls	r2, r3
 8003a88:	68fb      	ldr	r3, [r7, #12]
 8003a8a:	4013      	ands	r3, r2
 8003a8c:	2b00      	cmp	r3, #0
 8003a8e:	d043      	beq.n	8003b18 <HAL_DMA_IRQHandler+0x170>
  {
    if(__HAL_DMA_GET_IT_SOURCE(hdma, DMA_IT_HT) != RESET)
 8003a90:	687b      	ldr	r3, [r7, #4]
 8003a92:	681b      	ldr	r3, [r3, #0]
 8003a94:	681b      	ldr	r3, [r3, #0]
 8003a96:	f003 0308 	and.w	r3, r3, #8
 8003a9a:	2b00      	cmp	r3, #0
 8003a9c:	d03c      	beq.n	8003b18 <HAL_DMA_IRQHandler+0x170>
    {
      /* Clear the half transfer complete flag */
      regs->IFCR = DMA_FLAG_HTIF0_4 << hdma->StreamIndex;
 8003a9e:	687b      	ldr	r3, [r7, #4]
 8003aa0:	6ddb      	ldr	r3, [r3, #92]	@ 0x5c
 8003aa2:	2210      	movs	r2, #16
 8003aa4:	409a      	lsls	r2, r3
 8003aa6:	693b      	ldr	r3, [r7, #16]
 8003aa8:	609a      	str	r2, [r3, #8]
      
      /* Multi_Buffering mode enabled */
      if(((hdma->Instance->CR) & (uint32_t)(DMA_SxCR_DBM)) != RESET)
 8003aaa:	687b      	ldr	r3, [r7, #4]
 8003aac:	681b      	ldr	r3, [r3, #0]
 8003aae:	681b      	ldr	r3, [r3, #0]
 8003ab0:	f403 2380 	and.w	r3, r3, #262144	@ 0x40000
 8003ab4:	2b00      	cmp	r3, #0
 8003ab6:	d018      	beq.n	8003aea <HAL_DMA_IRQHandler+0x142>
      {
        /* Current memory buffer used is Memory 0 */
        if((hdma->Instance->CR & DMA_SxCR_CT) == RESET)
 8003ab8:	687b      	ldr	r3, [r7, #4]
 8003aba:	681b      	ldr	r3, [r3, #0]
 8003abc:	681b      	ldr	r3, [r3, #0]
 8003abe:	f403 2300 	and.w	r3, r3, #524288	@ 0x80000
 8003ac2:	2b00      	cmp	r3, #0
 8003ac4:	d108      	bne.n	8003ad8 <HAL_DMA_IRQHandler+0x130>
        {
          if(hdma->XferHalfCpltCallback != NULL)
 8003ac6:	687b      	ldr	r3, [r7, #4]
 8003ac8:	6c1b      	ldr	r3, [r3, #64]	@ 0x40
 8003aca:	2b00      	cmp	r3, #0
 8003acc:	d024      	beq.n	8003b18 <HAL_DMA_IRQHandler+0x170>
          {
            /* Half transfer callback */
            hdma->XferHalfCpltCallback(hdma);
 8003ace:	687b      	ldr	r3, [r7, #4]
 8003ad0:	6c1b      	ldr	r3, [r3, #64]	@ 0x40
 8003ad2:	6878      	ldr	r0, [r7, #4]
 8003ad4:	4798      	blx	r3
 8003ad6:	e01f      	b.n	8003b18 <HAL_DMA_IRQHandler+0x170>
          }
        }
        /* Current memory buffer used is Memory 1 */
        else
        {
          if(hdma->XferM1HalfCpltCallback != NULL)
 8003ad8:	687b      	ldr	r3, [r7, #4]
 8003ada:	6c9b      	ldr	r3, [r3, #72]	@ 0x48
 8003adc:	2b00      	cmp	r3, #0
 8003ade:	d01b      	beq.n	8003b18 <HAL_DMA_IRQHandler+0x170>
          {
            /* Half transfer callback */
            hdma->XferM1HalfCpltCallback(hdma);
 8003ae0:	687b      	ldr	r3, [r7, #4]
 8003ae2:	6c9b      	ldr	r3, [r3, #72]	@ 0x48
 8003ae4:	6878      	ldr	r0, [r7, #4]
 8003ae6:	4798      	blx	r3
 8003ae8:	e016      	b.n	8003b18 <HAL_DMA_IRQHandler+0x170>
        }
      }
      else
      {
        /* Disable the half transfer interrupt if the DMA mode is not CIRCULAR */
        if((hdma->Instance->CR & DMA_SxCR_CIRC) == RESET)
 8003aea:	687b      	ldr	r3, [r7, #4]
 8003aec:	681b      	ldr	r3, [r3, #0]
 8003aee:	681b      	ldr	r3, [r3, #0]
 8003af0:	f403 7380 	and.w	r3, r3, #256	@ 0x100
 8003af4:	2b00      	cmp	r3, #0
 8003af6:	d107      	bne.n	8003b08 <HAL_DMA_IRQHandler+0x160>
        {
          /* Disable the half transfer interrupt */
          hdma->Instance->CR  &= ~(DMA_IT_HT);
 8003af8:	687b      	ldr	r3, [r7, #4]
 8003afa:	681b      	ldr	r3, [r3, #0]
 8003afc:	681a      	ldr	r2, [r3, #0]
 8003afe:	687b      	ldr	r3, [r7, #4]
 8003b00:	681b      	ldr	r3, [r3, #0]
 8003b02:	f022 0208 	bic.w	r2, r2, #8
 8003b06:	601a      	str	r2, [r3, #0]
        }
        
        if(hdma->XferHalfCpltCallback != NULL)
 8003b08:	687b      	ldr	r3, [r7, #4]
 8003b0a:	6c1b      	ldr	r3, [r3, #64]	@ 0x40
 8003b0c:	2b00      	cmp	r3, #0
 8003b0e:	d003      	beq.n	8003b18 <HAL_DMA_IRQHandler+0x170>
        {
          /* Half transfer callback */
          hdma->XferHalfCpltCallback(hdma);
 8003b10:	687b      	ldr	r3, [r7, #4]
 8003b12:	6c1b      	ldr	r3, [r3, #64]	@ 0x40
 8003b14:	6878      	ldr	r0, [r7, #4]
 8003b16:	4798      	blx	r3
        }
      }
    }
  }
  /* Transfer Complete Interrupt management ***********************************/
  if ((tmpisr & (DMA_FLAG_TCIF0_4 << hdma->StreamIndex)) != RESET)
 8003b18:	687b      	ldr	r3, [r7, #4]
 8003b1a:	6ddb      	ldr	r3, [r3, #92]	@ 0x5c
 8003b1c:	2220      	movs	r2, #32
 8003b1e:	409a      	lsls	r2, r3
 8003b20:	68fb      	ldr	r3, [r7, #12]
 8003b22:	4013      	ands	r3, r2
 8003b24:	2b00      	cmp	r3, #0
 8003b26:	f000 808f 	beq.w	8003c48 <HAL_DMA_IRQHandler+0x2a0>
  {
    if(__HAL_DMA_GET_IT_SOURCE(hdma, DMA_IT_TC) != RESET)
 8003b2a:	687b      	ldr	r3, [r7, #4]
 8003b2c:	681b      	ldr	r3, [r3, #0]
 8003b2e:	681b      	ldr	r3, [r3, #0]
 8003b30:	f003 0310 	and.w	r3, r3, #16
 8003b34:	2b00      	cmp	r3, #0
 8003b36:	f000 8087 	beq.w	8003c48 <HAL_DMA_IRQHandler+0x2a0>
    {
      /* Clear the transfer complete flag */
      regs->IFCR = DMA_FLAG_TCIF0_4 << hdma->StreamIndex;
 8003b3a:	687b      	ldr	r3, [r7, #4]
 8003b3c:	6ddb      	ldr	r3, [r3, #92]	@ 0x5c
 8003b3e:	2220      	movs	r2, #32
 8003b40:	409a      	lsls	r2, r3
 8003b42:	693b      	ldr	r3, [r7, #16]
 8003b44:	609a      	str	r2, [r3, #8]
      
      if(HAL_DMA_STATE_ABORT == hdma->State)
 8003b46:	687b      	ldr	r3, [r7, #4]
 8003b48:	f893 3035 	ldrb.w	r3, [r3, #53]	@ 0x35
 8003b4c:	b2db      	uxtb	r3, r3
 8003b4e:	2b05      	cmp	r3, #5
 8003b50:	d136      	bne.n	8003bc0 <HAL_DMA_IRQHandler+0x218>
      {
        /* Disable all the transfer interrupts */
        hdma->Instance->CR  &= ~(DMA_IT_TC | DMA_IT_TE | DMA_IT_DME);
 8003b52:	687b      	ldr	r3, [r7, #4]
 8003b54:	681b      	ldr	r3, [r3, #0]
 8003b56:	681a      	ldr	r2, [r3, #0]
 8003b58:	687b      	ldr	r3, [r7, #4]
 8003b5a:	681b      	ldr	r3, [r3, #0]
 8003b5c:	f022 0216 	bic.w	r2, r2, #22
 8003b60:	601a      	str	r2, [r3, #0]
        hdma->Instance->FCR &= ~(DMA_IT_FE);
 8003b62:	687b      	ldr	r3, [r7, #4]
 8003b64:	681b      	ldr	r3, [r3, #0]
 8003b66:	695a      	ldr	r2, [r3, #20]
 8003b68:	687b      	ldr	r3, [r7, #4]
 8003b6a:	681b      	ldr	r3, [r3, #0]
 8003b6c:	f022 0280 	bic.w	r2, r2, #128	@ 0x80
 8003b70:	615a      	str	r2, [r3, #20]
        
        if((hdma->XferHalfCpltCallback != NULL) || (hdma->XferM1HalfCpltCallback != NULL))
 8003b72:	687b      	ldr	r3, [r7, #4]
 8003b74:	6c1b      	ldr	r3, [r3, #64]	@ 0x40
 8003b76:	2b00      	cmp	r3, #0
 8003b78:	d103      	bne.n	8003b82 <HAL_DMA_IRQHandler+0x1da>
 8003b7a:	687b      	ldr	r3, [r7, #4]
 8003b7c:	6c9b      	ldr	r3, [r3, #72]	@ 0x48
 8003b7e:	2b00      	cmp	r3, #0
 8003b80:	d007      	beq.n	8003b92 <HAL_DMA_IRQHandler+0x1ea>
        {
          hdma->Instance->CR  &= ~(DMA_IT_HT);
 8003b82:	687b      	ldr	r3, [r7, #4]
 8003b84:	681b      	ldr	r3, [r3, #0]
 8003b86:	681a      	ldr	r2, [r3, #0]
 8003b88:	687b      	ldr	r3, [r7, #4]
 8003b8a:	681b      	ldr	r3, [r3, #0]
 8003b8c:	f022 0208 	bic.w	r2, r2, #8
 8003b90:	601a      	str	r2, [r3, #0]
        }

        /* Clear all interrupt flags at correct offset within the register */
        regs->IFCR = 0x3FU << hdma->StreamIndex;
 8003b92:	687b      	ldr	r3, [r7, #4]
 8003b94:	6ddb      	ldr	r3, [r3, #92]	@ 0x5c
 8003b96:	223f      	movs	r2, #63	@ 0x3f
 8003b98:	409a      	lsls	r2, r3
 8003b9a:	693b      	ldr	r3, [r7, #16]
 8003b9c:	609a      	str	r2, [r3, #8]

        /* Change the DMA state */
        hdma->State = HAL_DMA_STATE_READY;
 8003b9e:	687b      	ldr	r3, [r7, #4]
 8003ba0:	2201      	movs	r2, #1
 8003ba2:	f883 2035 	strb.w	r2, [r3, #53]	@ 0x35

        /* Process Unlocked */
        __HAL_UNLOCK(hdma);
 8003ba6:	687b      	ldr	r3, [r7, #4]
 8003ba8:	2200      	movs	r2, #0
 8003baa:	f883 2034 	strb.w	r2, [r3, #52]	@ 0x34

        if(hdma->XferAbortCallback != NULL)
 8003bae:	687b      	ldr	r3, [r7, #4]
 8003bb0:	6d1b      	ldr	r3, [r3, #80]	@ 0x50
 8003bb2:	2b00      	cmp	r3, #0
 8003bb4:	d07e      	beq.n	8003cb4 <HAL_DMA_IRQHandler+0x30c>
        {
          hdma->XferAbortCallback(hdma);
 8003bb6:	687b      	ldr	r3, [r7, #4]
 8003bb8:	6d1b      	ldr	r3, [r3, #80]	@ 0x50
 8003bba:	6878      	ldr	r0, [r7, #4]
 8003bbc:	4798      	blx	r3
        }
        return;
 8003bbe:	e079      	b.n	8003cb4 <HAL_DMA_IRQHandler+0x30c>
      }

      if(((hdma->Instance->CR) & (uint32_t)(DMA_SxCR_DBM)) != RESET)
 8003bc0:	687b      	ldr	r3, [r7, #4]
 8003bc2:	681b      	ldr	r3, [r3, #0]
 8003bc4:	681b      	ldr	r3, [r3, #0]
 8003bc6:	f403 2380 	and.w	r3, r3, #262144	@ 0x40000
 8003bca:	2b00      	cmp	r3, #0
 8003bcc:	d01d      	beq.n	8003c0a <HAL_DMA_IRQHandler+0x262>
      {
        /* Current memory buffer used is Memory 0 */
        if((hdma->Instance->CR & DMA_SxCR_CT) == RESET)
 8003bce:	687b      	ldr	r3, [r7, #4]
 8003bd0:	681b      	ldr	r3, [r3, #0]
 8003bd2:	681b      	ldr	r3, [r3, #0]
 8003bd4:	f403 2300 	and.w	r3, r3, #524288	@ 0x80000
 8003bd8:	2b00      	cmp	r3, #0
 8003bda:	d10d      	bne.n	8003bf8 <HAL_DMA_IRQHandler+0x250>
        {
          if(hdma->XferM1CpltCallback != NULL)
 8003bdc:	687b      	ldr	r3, [r7, #4]
 8003bde:	6c5b      	ldr	r3, [r3, #68]	@ 0x44
 8003be0:	2b00      	cmp	r3, #0
 8003be2:	d031      	beq.n	8003c48 <HAL_DMA_IRQHandler+0x2a0>
          {
            /* Transfer complete Callback for memory1 */
            hdma->XferM1CpltCallback(hdma);
 8003be4:	687b      	ldr	r3, [r7, #4]
 8003be6:	6c5b      	ldr	r3, [r3, #68]	@ 0x44
 8003be8:	6878      	ldr	r0, [r7, #4]
 8003bea:	4798      	blx	r3
 8003bec:	e02c      	b.n	8003c48 <HAL_DMA_IRQHandler+0x2a0>
 8003bee:	bf00      	nop
 8003bf0:	20000008 	.word	0x20000008
 8003bf4:	1b4e81b5 	.word	0x1b4e81b5
          }
        }
        /* Current memory buffer used is Memory 1 */
        else
        {
          if(hdma->XferCpltCallback != NULL)
 8003bf8:	687b      	ldr	r3, [r7, #4]
 8003bfa:	6bdb      	ldr	r3, [r3, #60]	@ 0x3c
 8003bfc:	2b00      	cmp	r3, #0
 8003bfe:	d023      	beq.n	8003c48 <HAL_DMA_IRQHandler+0x2a0>
          {
            /* Transfer complete Callback for memory0 */
            hdma->XferCpltCallback(hdma);
 8003c00:	687b      	ldr	r3, [r7, #4]
 8003c02:	6bdb      	ldr	r3, [r3, #60]	@ 0x3c
 8003c04:	6878      	ldr	r0, [r7, #4]
 8003c06:	4798      	blx	r3
 8003c08:	e01e      	b.n	8003c48 <HAL_DMA_IRQHandler+0x2a0>
        }
      }
      /* Disable the transfer complete interrupt if the DMA mode is not CIRCULAR */
      else
      {
        if((hdma->Instance->CR & DMA_SxCR_CIRC) == RESET)
 8003c0a:	687b      	ldr	r3, [r7, #4]
 8003c0c:	681b      	ldr	r3, [r3, #0]
 8003c0e:	681b      	ldr	r3, [r3, #0]
 8003c10:	f403 7380 	and.w	r3, r3, #256	@ 0x100
 8003c14:	2b00      	cmp	r3, #0
 8003c16:	d10f      	bne.n	8003c38 <HAL_DMA_IRQHandler+0x290>
        {
          /* Disable the transfer complete interrupt */
          hdma->Instance->CR  &= ~(DMA_IT_TC);
 8003c18:	687b      	ldr	r3, [r7, #4]
 8003c1a:	681b      	ldr	r3, [r3, #0]
 8003c1c:	681a      	ldr	r2, [r3, #0]
 8003c1e:	687b      	ldr	r3, [r7, #4]
 8003c20:	681b      	ldr	r3, [r3, #0]
 8003c22:	f022 0210 	bic.w	r2, r2, #16
 8003c26:	601a      	str	r2, [r3, #0]

          /* Change the DMA state */
          hdma->State = HAL_DMA_STATE_READY;
 8003c28:	687b      	ldr	r3, [r7, #4]
 8003c2a:	2201      	movs	r2, #1
 8003c2c:	f883 2035 	strb.w	r2, [r3, #53]	@ 0x35

          /* Process Unlocked */
          __HAL_UNLOCK(hdma);
 8003c30:	687b      	ldr	r3, [r7, #4]
 8003c32:	2200      	movs	r2, #0
 8003c34:	f883 2034 	strb.w	r2, [r3, #52]	@ 0x34
        }

        if(hdma->XferCpltCallback != NULL)
 8003c38:	687b      	ldr	r3, [r7, #4]
 8003c3a:	6bdb      	ldr	r3, [r3, #60]	@ 0x3c
 8003c3c:	2b00      	cmp	r3, #0
 8003c3e:	d003      	beq.n	8003c48 <HAL_DMA_IRQHandler+0x2a0>
        {
          /* Transfer complete callback */
          hdma->XferCpltCallback(hdma);
 8003c40:	687b      	ldr	r3, [r7, #4]
 8003c42:	6bdb      	ldr	r3, [r3, #60]	@ 0x3c
 8003c44:	6878      	ldr	r0, [r7, #4]
 8003c46:	4798      	blx	r3
      }
    }
  }
  
  /* manage error case */
  if(hdma->ErrorCode != HAL_DMA_ERROR_NONE)
 8003c48:	687b      	ldr	r3, [r7, #4]
 8003c4a:	6d5b      	ldr	r3, [r3, #84]	@ 0x54
 8003c4c:	2b00      	cmp	r3, #0
 8003c4e:	d032      	beq.n	8003cb6 <HAL_DMA_IRQHandler+0x30e>
  {
    if((hdma->ErrorCode & HAL_DMA_ERROR_TE) != RESET)
 8003c50:	687b      	ldr	r3, [r7, #4]
 8003c52:	6d5b      	ldr	r3, [r3, #84]	@ 0x54
 8003c54:	f003 0301 	and.w	r3, r3, #1
 8003c58:	2b00      	cmp	r3, #0
 8003c5a:	d022      	beq.n	8003ca2 <HAL_DMA_IRQHandler+0x2fa>
    {
      hdma->State = HAL_DMA_STATE_ABORT;
 8003c5c:	687b      	ldr	r3, [r7, #4]
 8003c5e:	2205      	movs	r2, #5
 8003c60:	f883 2035 	strb.w	r2, [r3, #53]	@ 0x35

      /* Disable the stream */
      __HAL_DMA_DISABLE(hdma);
 8003c64:	687b      	ldr	r3, [r7, #4]
 8003c66:	681b      	ldr	r3, [r3, #0]
 8003c68:	681a      	ldr	r2, [r3, #0]
 8003c6a:	687b      	ldr	r3, [r7, #4]
 8003c6c:	681b      	ldr	r3, [r3, #0]
 8003c6e:	f022 0201 	bic.w	r2, r2, #1
 8003c72:	601a      	str	r2, [r3, #0]

      do
      {
        if (++count > timeout)
 8003c74:	68bb      	ldr	r3, [r7, #8]
 8003c76:	3301      	adds	r3, #1
 8003c78:	60bb      	str	r3, [r7, #8]
 8003c7a:	697a      	ldr	r2, [r7, #20]
 8003c7c:	429a      	cmp	r2, r3
 8003c7e:	d307      	bcc.n	8003c90 <HAL_DMA_IRQHandler+0x2e8>
        {
          break;
        }
      }
      while((hdma->Instance->CR & DMA_SxCR_EN) != RESET);
 8003c80:	687b      	ldr	r3, [r7, #4]
 8003c82:	681b      	ldr	r3, [r3, #0]
 8003c84:	681b      	ldr	r3, [r3, #0]
 8003c86:	f003 0301 	and.w	r3, r3, #1
 8003c8a:	2b00      	cmp	r3, #0
 8003c8c:	d1f2      	bne.n	8003c74 <HAL_DMA_IRQHandler+0x2cc>
 8003c8e:	e000      	b.n	8003c92 <HAL_DMA_IRQHandler+0x2ea>
          break;
 8003c90:	bf00      	nop

      /* Change the DMA state */
      hdma->State = HAL_DMA_STATE_READY;
 8003c92:	687b      	ldr	r3, [r7, #4]
 8003c94:	2201      	movs	r2, #1
 8003c96:	f883 2035 	strb.w	r2, [r3, #53]	@ 0x35

      /* Process Unlocked */
      __HAL_UNLOCK(hdma);
 8003c9a:	687b      	ldr	r3, [r7, #4]
 8003c9c:	2200      	movs	r2, #0
 8003c9e:	f883 2034 	strb.w	r2, [r3, #52]	@ 0x34
    }

    if(hdma->XferErrorCallback != NULL)
 8003ca2:	687b      	ldr	r3, [r7, #4]
 8003ca4:	6cdb      	ldr	r3, [r3, #76]	@ 0x4c
 8003ca6:	2b00      	cmp	r3, #0
 8003ca8:	d005      	beq.n	8003cb6 <HAL_DMA_IRQHandler+0x30e>
    {
      /* Transfer error callback */
      hdma->XferErrorCallback(hdma);
 8003caa:	687b      	ldr	r3, [r7, #4]
 8003cac:	6cdb      	ldr	r3, [r3, #76]	@ 0x4c
 8003cae:	6878      	ldr	r0, [r7, #4]
 8003cb0:	4798      	blx	r3
 8003cb2:	e000      	b.n	8003cb6 <HAL_DMA_IRQHandler+0x30e>
        return;
 8003cb4:	bf00      	nop
    }
  }
}
 8003cb6:	3718      	adds	r7, #24
 8003cb8:	46bd      	mov	sp, r7
 8003cba:	bd80      	pop	{r7, pc}

08003cbc <DMA_SetConfig>:
  * @param  DstAddress The destination memory Buffer address
  * @param  DataLength The length of data to be transferred from source to destination
  * @retval HAL status
  */
static void DMA_SetConfig(DMA_HandleTypeDef *hdma, uint32_t SrcAddress, uint32_t DstAddress, uint32_t DataLength)
{
 8003cbc:	b480      	push	{r7}
 8003cbe:	b085      	sub	sp, #20
 8003cc0:	af00      	add	r7, sp, #0
 8003cc2:	60f8      	str	r0, [r7, #12]
 8003cc4:	60b9      	str	r1, [r7, #8]
 8003cc6:	607a      	str	r2, [r7, #4]
 8003cc8:	603b      	str	r3, [r7, #0]
  /* Clear DBM bit */
  hdma->Instance->CR &= (uint32_t)(~DMA_SxCR_DBM);
 8003cca:	68fb      	ldr	r3, [r7, #12]
 8003ccc:	681b      	ldr	r3, [r3, #0]
 8003cce:	681a      	ldr	r2, [r3, #0]
 8003cd0:	68fb      	ldr	r3, [r7, #12]
 8003cd2:	681b      	ldr	r3, [r3, #0]
 8003cd4:	f422 2280 	bic.w	r2, r2, #262144	@ 0x40000
 8003cd8:	601a      	str	r2, [r3, #0]

  /* Configure DMA Stream data length */
  hdma->Instance->NDTR = DataLength;
 8003cda:	68fb      	ldr	r3, [r7, #12]
 8003cdc:	681b      	ldr	r3, [r3, #0]
 8003cde:	683a      	ldr	r2, [r7, #0]
 8003ce0:	605a      	str	r2, [r3, #4]

  /* Memory to Peripheral */
  if((hdma->Init.Direction) == DMA_MEMORY_TO_PERIPH)
 8003ce2:	68fb      	ldr	r3, [r7, #12]
 8003ce4:	689b      	ldr	r3, [r3, #8]
 8003ce6:	2b40      	cmp	r3, #64	@ 0x40
 8003ce8:	d108      	bne.n	8003cfc <DMA_SetConfig+0x40>
  {
    /* Configure DMA Stream destination address */
    hdma->Instance->PAR = DstAddress;
 8003cea:	68fb      	ldr	r3, [r7, #12]
 8003cec:	681b      	ldr	r3, [r3, #0]
 8003cee:	687a      	ldr	r2, [r7, #4]
 8003cf0:	609a      	str	r2, [r3, #8]

    /* Configure DMA Stream source address */
    hdma->Instance->M0AR = SrcAddress;
 8003cf2:	68fb      	ldr	r3, [r7, #12]
 8003cf4:	681b      	ldr	r3, [r3, #0]
 8003cf6:	68ba      	ldr	r2, [r7, #8]
 8003cf8:	60da      	str	r2, [r3, #12]
    hdma->Instance->PAR = SrcAddress;

    /* Configure DMA Stream destination address */
    hdma->Instance->M0AR = DstAddress;
  }
}
 8003cfa:	e007      	b.n	8003d0c <DMA_SetConfig+0x50>
    hdma->Instance->PAR = SrcAddress;
 8003cfc:	68fb      	ldr	r3, [r7, #12]
 8003cfe:	681b      	ldr	r3, [r3, #0]
 8003d00:	68ba      	ldr	r2, [r7, #8]
 8003d02:	609a      	str	r2, [r3, #8]
    hdma->Instance->M0AR = DstAddress;
 8003d04:	68fb      	ldr	r3, [r7, #12]
 8003d06:	681b      	ldr	r3, [r3, #0]
 8003d08:	687a      	ldr	r2, [r7, #4]
 8003d0a:	60da      	str	r2, [r3, #12]
}
 8003d0c:	bf00      	nop
 8003d0e:	3714      	adds	r7, #20
 8003d10:	46bd      	mov	sp, r7
 8003d12:	f85d 7b04 	ldr.w	r7, [sp], #4
 8003d16:	4770      	bx	lr

08003d18 <DMA_CalcBaseAndBitshift>:
  * @param  hdma       pointer to a DMA_HandleTypeDef structure that contains
  *                     the configuration information for the specified DMA Stream. 
  * @retval Stream base address
  */
static uint32_t DMA_CalcBaseAndBitshift(DMA_HandleTypeDef *hdma)
{
 8003d18:	b480      	push	{r7}
 8003d1a:	b085      	sub	sp, #20
 8003d1c:	af00      	add	r7, sp, #0
 8003d1e:	6078      	str	r0, [r7, #4]
  uint32_t stream_number = (((uint32_t)hdma->Instance & 0xFFU) - 16U) / 24U;
 8003d20:	687b      	ldr	r3, [r7, #4]
 8003d22:	681b      	ldr	r3, [r3, #0]
 8003d24:	b2db      	uxtb	r3, r3
 8003d26:	3b10      	subs	r3, #16
 8003d28:	4a14      	ldr	r2, [pc, #80]	@ (8003d7c <DMA_CalcBaseAndBitshift+0x64>)
 8003d2a:	fba2 2303 	umull	r2, r3, r2, r3
 8003d2e:	091b      	lsrs	r3, r3, #4
 8003d30:	60fb      	str	r3, [r7, #12]
  
  /* lookup table for necessary bitshift of flags within status registers */
  static const uint8_t flagBitshiftOffset[8U] = {0U, 6U, 16U, 22U, 0U, 6U, 16U, 22U};
  hdma->StreamIndex = flagBitshiftOffset[stream_number];
 8003d32:	4a13      	ldr	r2, [pc, #76]	@ (8003d80 <DMA_CalcBaseAndBitshift+0x68>)
 8003d34:	68fb      	ldr	r3, [r7, #12]
 8003d36:	4413      	add	r3, r2
 8003d38:	781b      	ldrb	r3, [r3, #0]
 8003d3a:	461a      	mov	r2, r3
 8003d3c:	687b      	ldr	r3, [r7, #4]
 8003d3e:	65da      	str	r2, [r3, #92]	@ 0x5c
  
  if (stream_number > 3U)
 8003d40:	68fb      	ldr	r3, [r7, #12]
 8003d42:	2b03      	cmp	r3, #3
 8003d44:	d909      	bls.n	8003d5a <DMA_CalcBaseAndBitshift+0x42>
  {
    /* return pointer to HISR and HIFCR */
    hdma->StreamBaseAddress = (((uint32_t)hdma->Instance & (uint32_t)(~0x3FFU)) + 4U);
 8003d46:	687b      	ldr	r3, [r7, #4]
 8003d48:	681b      	ldr	r3, [r3, #0]
 8003d4a:	f423 737f 	bic.w	r3, r3, #1020	@ 0x3fc
 8003d4e:	f023 0303 	bic.w	r3, r3, #3
 8003d52:	1d1a      	adds	r2, r3, #4
 8003d54:	687b      	ldr	r3, [r7, #4]
 8003d56:	659a      	str	r2, [r3, #88]	@ 0x58
 8003d58:	e007      	b.n	8003d6a <DMA_CalcBaseAndBitshift+0x52>
  }
  else
  {
    /* return pointer to LISR and LIFCR */
    hdma->StreamBaseAddress = ((uint32_t)hdma->Instance & (uint32_t)(~0x3FFU));
 8003d5a:	687b      	ldr	r3, [r7, #4]
 8003d5c:	681b      	ldr	r3, [r3, #0]
 8003d5e:	f423 737f 	bic.w	r3, r3, #1020	@ 0x3fc
 8003d62:	f023 0303 	bic.w	r3, r3, #3
 8003d66:	687a      	ldr	r2, [r7, #4]
 8003d68:	6593      	str	r3, [r2, #88]	@ 0x58
  }
  
  return hdma->StreamBaseAddress;
 8003d6a:	687b      	ldr	r3, [r7, #4]
 8003d6c:	6d9b      	ldr	r3, [r3, #88]	@ 0x58
}
 8003d6e:	4618      	mov	r0, r3
 8003d70:	3714      	adds	r7, #20
 8003d72:	46bd      	mov	sp, r7
 8003d74:	f85d 7b04 	ldr.w	r7, [sp], #4
 8003d78:	4770      	bx	lr
 8003d7a:	bf00      	nop
 8003d7c:	aaaaaaab 	.word	0xaaaaaaab
 8003d80:	08024550 	.word	0x08024550

08003d84 <DMA_CheckFifoParam>:
  * @param  hdma       pointer to a DMA_HandleTypeDef structure that contains
  *                     the configuration information for the specified DMA Stream. 
  * @retval HAL status
  */
static HAL_StatusTypeDef DMA_CheckFifoParam(DMA_HandleTypeDef *hdma)
{
 8003d84:	b480      	push	{r7}
 8003d86:	b085      	sub	sp, #20
 8003d88:	af00      	add	r7, sp, #0
 8003d8a:	6078      	str	r0, [r7, #4]
  HAL_StatusTypeDef status = HAL_OK;
 8003d8c:	2300      	movs	r3, #0
 8003d8e:	73fb      	strb	r3, [r7, #15]
  uint32_t tmp = hdma->Init.FIFOThreshold;
 8003d90:	687b      	ldr	r3, [r7, #4]
 8003d92:	6a9b      	ldr	r3, [r3, #40]	@ 0x28
 8003d94:	60bb      	str	r3, [r7, #8]
  
  /* Memory Data size equal to Byte */
  if(hdma->Init.MemDataAlignment == DMA_MDATAALIGN_BYTE)
 8003d96:	687b      	ldr	r3, [r7, #4]
 8003d98:	699b      	ldr	r3, [r3, #24]
 8003d9a:	2b00      	cmp	r3, #0
 8003d9c:	d11f      	bne.n	8003dde <DMA_CheckFifoParam+0x5a>
  {
    switch (tmp)
 8003d9e:	68bb      	ldr	r3, [r7, #8]
 8003da0:	2b03      	cmp	r3, #3
 8003da2:	d856      	bhi.n	8003e52 <DMA_CheckFifoParam+0xce>
 8003da4:	a201      	add	r2, pc, #4	@ (adr r2, 8003dac <DMA_CheckFifoParam+0x28>)
 8003da6:	f852 f023 	ldr.w	pc, [r2, r3, lsl #2]
 8003daa:	bf00      	nop
 8003dac:	08003dbd 	.word	0x08003dbd
 8003db0:	08003dcf 	.word	0x08003dcf
 8003db4:	08003dbd 	.word	0x08003dbd
 8003db8:	08003e53 	.word	0x08003e53
    {
    case DMA_FIFO_THRESHOLD_1QUARTERFULL:
    case DMA_FIFO_THRESHOLD_3QUARTERSFULL:
      if ((hdma->Init.MemBurst & DMA_SxCR_MBURST_1) == DMA_SxCR_MBURST_1)
 8003dbc:	687b      	ldr	r3, [r7, #4]
 8003dbe:	6adb      	ldr	r3, [r3, #44]	@ 0x2c
 8003dc0:	f003 7380 	and.w	r3, r3, #16777216	@ 0x1000000
 8003dc4:	2b00      	cmp	r3, #0
 8003dc6:	d046      	beq.n	8003e56 <DMA_CheckFifoParam+0xd2>
      {
        status = HAL_ERROR;
 8003dc8:	2301      	movs	r3, #1
 8003dca:	73fb      	strb	r3, [r7, #15]
      }
      break;
 8003dcc:	e043      	b.n	8003e56 <DMA_CheckFifoParam+0xd2>
    case DMA_FIFO_THRESHOLD_HALFFULL:
      if (hdma->Init.MemBurst == DMA_MBURST_INC16)
 8003dce:	687b      	ldr	r3, [r7, #4]
 8003dd0:	6adb      	ldr	r3, [r3, #44]	@ 0x2c
 8003dd2:	f1b3 7fc0 	cmp.w	r3, #25165824	@ 0x1800000
 8003dd6:	d140      	bne.n	8003e5a <DMA_CheckFifoParam+0xd6>
      {
        status = HAL_ERROR;
 8003dd8:	2301      	movs	r3, #1
 8003dda:	73fb      	strb	r3, [r7, #15]
      }
      break;
 8003ddc:	e03d      	b.n	8003e5a <DMA_CheckFifoParam+0xd6>
      break;
    }
  }
  
  /* Memory Data size equal to Half-Word */
  else if (hdma->Init.MemDataAlignment == DMA_MDATAALIGN_HALFWORD)
 8003dde:	687b      	ldr	r3, [r7, #4]
 8003de0:	699b      	ldr	r3, [r3, #24]
 8003de2:	f5b3 5f00 	cmp.w	r3, #8192	@ 0x2000
 8003de6:	d121      	bne.n	8003e2c <DMA_CheckFifoParam+0xa8>
  {
    switch (tmp)
 8003de8:	68bb      	ldr	r3, [r7, #8]
 8003dea:	2b03      	cmp	r3, #3
 8003dec:	d837      	bhi.n	8003e5e <DMA_CheckFifoParam+0xda>
 8003dee:	a201      	add	r2, pc, #4	@ (adr r2, 8003df4 <DMA_CheckFifoParam+0x70>)
 8003df0:	f852 f023 	ldr.w	pc, [r2, r3, lsl #2]
 8003df4:	08003e05 	.word	0x08003e05
 8003df8:	08003e0b 	.word	0x08003e0b
 8003dfc:	08003e05 	.word	0x08003e05
 8003e00:	08003e1d 	.word	0x08003e1d
    {
    case DMA_FIFO_THRESHOLD_1QUARTERFULL:
    case DMA_FIFO_THRESHOLD_3QUARTERSFULL:
      status = HAL_ERROR;
 8003e04:	2301      	movs	r3, #1
 8003e06:	73fb      	strb	r3, [r7, #15]
      break;
 8003e08:	e030      	b.n	8003e6c <DMA_CheckFifoParam+0xe8>
    case DMA_FIFO_THRESHOLD_HALFFULL:
      if ((hdma->Init.MemBurst & DMA_SxCR_MBURST_1) == DMA_SxCR_MBURST_1)
 8003e0a:	687b      	ldr	r3, [r7, #4]
 8003e0c:	6adb      	ldr	r3, [r3, #44]	@ 0x2c
 8003e0e:	f003 7380 	and.w	r3, r3, #16777216	@ 0x1000000
 8003e12:	2b00      	cmp	r3, #0
 8003e14:	d025      	beq.n	8003e62 <DMA_CheckFifoParam+0xde>
      {
        status = HAL_ERROR;
 8003e16:	2301      	movs	r3, #1
 8003e18:	73fb      	strb	r3, [r7, #15]
      }
      break;
 8003e1a:	e022      	b.n	8003e62 <DMA_CheckFifoParam+0xde>
    case DMA_FIFO_THRESHOLD_FULL:
      if (hdma->Init.MemBurst == DMA_MBURST_INC16)
 8003e1c:	687b      	ldr	r3, [r7, #4]
 8003e1e:	6adb      	ldr	r3, [r3, #44]	@ 0x2c
 8003e20:	f1b3 7fc0 	cmp.w	r3, #25165824	@ 0x1800000
 8003e24:	d11f      	bne.n	8003e66 <DMA_CheckFifoParam+0xe2>
      {
        status = HAL_ERROR;
 8003e26:	2301      	movs	r3, #1
 8003e28:	73fb      	strb	r3, [r7, #15]
      }
      break;   
 8003e2a:	e01c      	b.n	8003e66 <DMA_CheckFifoParam+0xe2>
  }
  
  /* Memory Data size equal to Word */
  else
  {
    switch (tmp)
 8003e2c:	68bb      	ldr	r3, [r7, #8]
 8003e2e:	2b02      	cmp	r3, #2
 8003e30:	d903      	bls.n	8003e3a <DMA_CheckFifoParam+0xb6>
 8003e32:	68bb      	ldr	r3, [r7, #8]
 8003e34:	2b03      	cmp	r3, #3
 8003e36:	d003      	beq.n	8003e40 <DMA_CheckFifoParam+0xbc>
      {
        status = HAL_ERROR;
      }
      break;
    default:
      break;
 8003e38:	e018      	b.n	8003e6c <DMA_CheckFifoParam+0xe8>
      status = HAL_ERROR;
 8003e3a:	2301      	movs	r3, #1
 8003e3c:	73fb      	strb	r3, [r7, #15]
      break;
 8003e3e:	e015      	b.n	8003e6c <DMA_CheckFifoParam+0xe8>
      if ((hdma->Init.MemBurst & DMA_SxCR_MBURST_1) == DMA_SxCR_MBURST_1)
 8003e40:	687b      	ldr	r3, [r7, #4]
 8003e42:	6adb      	ldr	r3, [r3, #44]	@ 0x2c
 8003e44:	f003 7380 	and.w	r3, r3, #16777216	@ 0x1000000
 8003e48:	2b00      	cmp	r3, #0
 8003e4a:	d00e      	beq.n	8003e6a <DMA_CheckFifoParam+0xe6>
        status = HAL_ERROR;
 8003e4c:	2301      	movs	r3, #1
 8003e4e:	73fb      	strb	r3, [r7, #15]
      break;
 8003e50:	e00b      	b.n	8003e6a <DMA_CheckFifoParam+0xe6>
      break;
 8003e52:	bf00      	nop
 8003e54:	e00a      	b.n	8003e6c <DMA_CheckFifoParam+0xe8>
      break;
 8003e56:	bf00      	nop
 8003e58:	e008      	b.n	8003e6c <DMA_CheckFifoParam+0xe8>
      break;
 8003e5a:	bf00      	nop
 8003e5c:	e006      	b.n	8003e6c <DMA_CheckFifoParam+0xe8>
      break;
 8003e5e:	bf00      	nop
 8003e60:	e004      	b.n	8003e6c <DMA_CheckFifoParam+0xe8>
      break;
 8003e62:	bf00      	nop
 8003e64:	e002      	b.n	8003e6c <DMA_CheckFifoParam+0xe8>
      break;   
 8003e66:	bf00      	nop
 8003e68:	e000      	b.n	8003e6c <DMA_CheckFifoParam+0xe8>
      break;
 8003e6a:	bf00      	nop
    }
  } 
  
  return status; 
 8003e6c:	7bfb      	ldrb	r3, [r7, #15]
}
 8003e6e:	4618      	mov	r0, r3
 8003e70:	3714      	adds	r7, #20
 8003e72:	46bd      	mov	sp, r7
 8003e74:	f85d 7b04 	ldr.w	r7, [sp], #4
 8003e78:	4770      	bx	lr
 8003e7a:	bf00      	nop

08003e7c <HAL_GPIO_Init>:
  * @param  GPIO_Init pointer to a GPIO_InitTypeDef structure that contains
  *         the configuration information for the specified GPIO peripheral.
  * @retval None
  */
void HAL_GPIO_Init(GPIO_TypeDef  *GPIOx, GPIO_InitTypeDef *GPIO_Init)
{
 8003e7c:	b480      	push	{r7}
 8003e7e:	b089      	sub	sp, #36	@ 0x24
 8003e80:	af00      	add	r7, sp, #0
 8003e82:	6078      	str	r0, [r7, #4]
 8003e84:	6039      	str	r1, [r7, #0]
  uint32_t position;
  uint32_t ioposition = 0x00U;
 8003e86:	2300      	movs	r3, #0
 8003e88:	617b      	str	r3, [r7, #20]
  uint32_t iocurrent = 0x00U;
 8003e8a:	2300      	movs	r3, #0
 8003e8c:	613b      	str	r3, [r7, #16]
  uint32_t temp = 0x00U;
 8003e8e:	2300      	movs	r3, #0
 8003e90:	61bb      	str	r3, [r7, #24]
  assert_param(IS_GPIO_ALL_INSTANCE(GPIOx));
  assert_param(IS_GPIO_PIN(GPIO_Init->Pin));
  assert_param(IS_GPIO_MODE(GPIO_Init->Mode));

  /* Configure the port pins */
  for(position = 0U; position < GPIO_NUMBER; position++)
 8003e92:	2300      	movs	r3, #0
 8003e94:	61fb      	str	r3, [r7, #28]
 8003e96:	e165      	b.n	8004164 <HAL_GPIO_Init+0x2e8>
  {
    /* Get the IO position */
    ioposition = 0x01U << position;
 8003e98:	2201      	movs	r2, #1
 8003e9a:	69fb      	ldr	r3, [r7, #28]
 8003e9c:	fa02 f303 	lsl.w	r3, r2, r3
 8003ea0:	617b      	str	r3, [r7, #20]
    /* Get the current IO position */
    iocurrent = (uint32_t)(GPIO_Init->Pin) & ioposition;
 8003ea2:	683b      	ldr	r3, [r7, #0]
 8003ea4:	681b      	ldr	r3, [r3, #0]
 8003ea6:	697a      	ldr	r2, [r7, #20]
 8003ea8:	4013      	ands	r3, r2
 8003eaa:	613b      	str	r3, [r7, #16]

    if(iocurrent == ioposition)
 8003eac:	693a      	ldr	r2, [r7, #16]
 8003eae:	697b      	ldr	r3, [r7, #20]
 8003eb0:	429a      	cmp	r2, r3
 8003eb2:	f040 8154 	bne.w	800415e <HAL_GPIO_Init+0x2e2>
    {
      /*--------------------- GPIO Mode Configuration ------------------------*/
      /* In case of Output or Alternate function mode selection */
      if(((GPIO_Init->Mode & GPIO_MODE) == MODE_OUTPUT) || \
 8003eb6:	683b      	ldr	r3, [r7, #0]
 8003eb8:	685b      	ldr	r3, [r3, #4]
 8003eba:	f003 0303 	and.w	r3, r3, #3
 8003ebe:	2b01      	cmp	r3, #1
 8003ec0:	d005      	beq.n	8003ece <HAL_GPIO_Init+0x52>
          (GPIO_Init->Mode & GPIO_MODE) == MODE_AF)
 8003ec2:	683b      	ldr	r3, [r7, #0]
 8003ec4:	685b      	ldr	r3, [r3, #4]
 8003ec6:	f003 0303 	and.w	r3, r3, #3
      if(((GPIO_Init->Mode & GPIO_MODE) == MODE_OUTPUT) || \
 8003eca:	2b02      	cmp	r3, #2
 8003ecc:	d130      	bne.n	8003f30 <HAL_GPIO_Init+0xb4>
      {
        /* Check the Speed parameter */
        assert_param(IS_GPIO_SPEED(GPIO_Init->Speed));
        /* Configure the IO Speed */
        temp = GPIOx->OSPEEDR; 
 8003ece:	687b      	ldr	r3, [r7, #4]
 8003ed0:	689b      	ldr	r3, [r3, #8]
 8003ed2:	61bb      	str	r3, [r7, #24]
        temp &= ~(GPIO_OSPEEDER_OSPEEDR0 << (position * 2U));
 8003ed4:	69fb      	ldr	r3, [r7, #28]
 8003ed6:	005b      	lsls	r3, r3, #1
 8003ed8:	2203      	movs	r2, #3
 8003eda:	fa02 f303 	lsl.w	r3, r2, r3
 8003ede:	43db      	mvns	r3, r3
 8003ee0:	69ba      	ldr	r2, [r7, #24]
 8003ee2:	4013      	ands	r3, r2
 8003ee4:	61bb      	str	r3, [r7, #24]
        temp |= (GPIO_Init->Speed << (position * 2U));
 8003ee6:	683b      	ldr	r3, [r7, #0]
 8003ee8:	68da      	ldr	r2, [r3, #12]
 8003eea:	69fb      	ldr	r3, [r7, #28]
 8003eec:	005b      	lsls	r3, r3, #1
 8003eee:	fa02 f303 	lsl.w	r3, r2, r3
 8003ef2:	69ba      	ldr	r2, [r7, #24]
 8003ef4:	4313      	orrs	r3, r2
 8003ef6:	61bb      	str	r3, [r7, #24]
        GPIOx->OSPEEDR = temp;
 8003ef8:	687b      	ldr	r3, [r7, #4]
 8003efa:	69ba      	ldr	r2, [r7, #24]
 8003efc:	609a      	str	r2, [r3, #8]

        /* Configure the IO Output Type */
        temp = GPIOx->OTYPER;
 8003efe:	687b      	ldr	r3, [r7, #4]
 8003f00:	685b      	ldr	r3, [r3, #4]
 8003f02:	61bb      	str	r3, [r7, #24]
        temp &= ~(GPIO_OTYPER_OT_0 << position) ;
 8003f04:	2201      	movs	r2, #1
 8003f06:	69fb      	ldr	r3, [r7, #28]
 8003f08:	fa02 f303 	lsl.w	r3, r2, r3
 8003f0c:	43db      	mvns	r3, r3
 8003f0e:	69ba      	ldr	r2, [r7, #24]
 8003f10:	4013      	ands	r3, r2
 8003f12:	61bb      	str	r3, [r7, #24]
        temp |= (((GPIO_Init->Mode & OUTPUT_TYPE) >> OUTPUT_TYPE_Pos) << position);
 8003f14:	683b      	ldr	r3, [r7, #0]
 8003f16:	685b      	ldr	r3, [r3, #4]
 8003f18:	091b      	lsrs	r3, r3, #4
 8003f1a:	f003 0201 	and.w	r2, r3, #1
 8003f1e:	69fb      	ldr	r3, [r7, #28]
 8003f20:	fa02 f303 	lsl.w	r3, r2, r3
 8003f24:	69ba      	ldr	r2, [r7, #24]
 8003f26:	4313      	orrs	r3, r2
 8003f28:	61bb      	str	r3, [r7, #24]
        GPIOx->OTYPER = temp;
 8003f2a:	687b      	ldr	r3, [r7, #4]
 8003f2c:	69ba      	ldr	r2, [r7, #24]
 8003f2e:	605a      	str	r2, [r3, #4]
       }

      if((GPIO_Init->Mode & GPIO_MODE) != MODE_ANALOG)
 8003f30:	683b      	ldr	r3, [r7, #0]
 8003f32:	685b      	ldr	r3, [r3, #4]
 8003f34:	f003 0303 	and.w	r3, r3, #3
 8003f38:	2b03      	cmp	r3, #3
 8003f3a:	d017      	beq.n	8003f6c <HAL_GPIO_Init+0xf0>
      {
        /* Check the parameters */
        assert_param(IS_GPIO_PULL(GPIO_Init->Pull));
        
        /* Activate the Pull-up or Pull down resistor for the current IO */
        temp = GPIOx->PUPDR;
 8003f3c:	687b      	ldr	r3, [r7, #4]
 8003f3e:	68db      	ldr	r3, [r3, #12]
 8003f40:	61bb      	str	r3, [r7, #24]
        temp &= ~(GPIO_PUPDR_PUPDR0 << (position * 2U));
 8003f42:	69fb      	ldr	r3, [r7, #28]
 8003f44:	005b      	lsls	r3, r3, #1
 8003f46:	2203      	movs	r2, #3
 8003f48:	fa02 f303 	lsl.w	r3, r2, r3
 8003f4c:	43db      	mvns	r3, r3
 8003f4e:	69ba      	ldr	r2, [r7, #24]
 8003f50:	4013      	ands	r3, r2
 8003f52:	61bb      	str	r3, [r7, #24]
        temp |= ((GPIO_Init->Pull) << (position * 2U));
 8003f54:	683b      	ldr	r3, [r7, #0]
 8003f56:	689a      	ldr	r2, [r3, #8]
 8003f58:	69fb      	ldr	r3, [r7, #28]
 8003f5a:	005b      	lsls	r3, r3, #1
 8003f5c:	fa02 f303 	lsl.w	r3, r2, r3
 8003f60:	69ba      	ldr	r2, [r7, #24]
 8003f62:	4313      	orrs	r3, r2
 8003f64:	61bb      	str	r3, [r7, #24]
        GPIOx->PUPDR = temp;
 8003f66:	687b      	ldr	r3, [r7, #4]
 8003f68:	69ba      	ldr	r2, [r7, #24]
 8003f6a:	60da      	str	r2, [r3, #12]
      }

      /* In case of Alternate function mode selection */
      if((GPIO_Init->Mode & GPIO_MODE) == MODE_AF)
 8003f6c:	683b      	ldr	r3, [r7, #0]
 8003f6e:	685b      	ldr	r3, [r3, #4]
 8003f70:	f003 0303 	and.w	r3, r3, #3
 8003f74:	2b02      	cmp	r3, #2
 8003f76:	d123      	bne.n	8003fc0 <HAL_GPIO_Init+0x144>
      {
        /* Check the Alternate function parameter */
        assert_param(IS_GPIO_AF(GPIO_Init->Alternate));
        /* Configure Alternate function mapped with the current IO */
        temp = GPIOx->AFR[position >> 3U];
 8003f78:	69fb      	ldr	r3, [r7, #28]
 8003f7a:	08da      	lsrs	r2, r3, #3
 8003f7c:	687b      	ldr	r3, [r7, #4]
 8003f7e:	3208      	adds	r2, #8
 8003f80:	f853 3022 	ldr.w	r3, [r3, r2, lsl #2]
 8003f84:	61bb      	str	r3, [r7, #24]
        temp &= ~(0xFU << ((uint32_t)(position & 0x07U) * 4U)) ;
 8003f86:	69fb      	ldr	r3, [r7, #28]
 8003f88:	f003 0307 	and.w	r3, r3, #7
 8003f8c:	009b      	lsls	r3, r3, #2
 8003f8e:	220f      	movs	r2, #15
 8003f90:	fa02 f303 	lsl.w	r3, r2, r3
 8003f94:	43db      	mvns	r3, r3
 8003f96:	69ba      	ldr	r2, [r7, #24]
 8003f98:	4013      	ands	r3, r2
 8003f9a:	61bb      	str	r3, [r7, #24]
        temp |= ((uint32_t)(GPIO_Init->Alternate) << (((uint32_t)position & 0x07U) * 4U));
 8003f9c:	683b      	ldr	r3, [r7, #0]
 8003f9e:	691a      	ldr	r2, [r3, #16]
 8003fa0:	69fb      	ldr	r3, [r7, #28]
 8003fa2:	f003 0307 	and.w	r3, r3, #7
 8003fa6:	009b      	lsls	r3, r3, #2
 8003fa8:	fa02 f303 	lsl.w	r3, r2, r3
 8003fac:	69ba      	ldr	r2, [r7, #24]
 8003fae:	4313      	orrs	r3, r2
 8003fb0:	61bb      	str	r3, [r7, #24]
        GPIOx->AFR[position >> 3U] = temp;
 8003fb2:	69fb      	ldr	r3, [r7, #28]
 8003fb4:	08da      	lsrs	r2, r3, #3
 8003fb6:	687b      	ldr	r3, [r7, #4]
 8003fb8:	3208      	adds	r2, #8
 8003fba:	69b9      	ldr	r1, [r7, #24]
 8003fbc:	f843 1022 	str.w	r1, [r3, r2, lsl #2]
      }

      /* Configure IO Direction mode (Input, Output, Alternate or Analog) */
      temp = GPIOx->MODER;
 8003fc0:	687b      	ldr	r3, [r7, #4]
 8003fc2:	681b      	ldr	r3, [r3, #0]
 8003fc4:	61bb      	str	r3, [r7, #24]
      temp &= ~(GPIO_MODER_MODER0 << (position * 2U));
 8003fc6:	69fb      	ldr	r3, [r7, #28]
 8003fc8:	005b      	lsls	r3, r3, #1
 8003fca:	2203      	movs	r2, #3
 8003fcc:	fa02 f303 	lsl.w	r3, r2, r3
 8003fd0:	43db      	mvns	r3, r3
 8003fd2:	69ba      	ldr	r2, [r7, #24]
 8003fd4:	4013      	ands	r3, r2
 8003fd6:	61bb      	str	r3, [r7, #24]
      temp |= ((GPIO_Init->Mode & GPIO_MODE) << (position * 2U));
 8003fd8:	683b      	ldr	r3, [r7, #0]
 8003fda:	685b      	ldr	r3, [r3, #4]
 8003fdc:	f003 0203 	and.w	r2, r3, #3
 8003fe0:	69fb      	ldr	r3, [r7, #28]
 8003fe2:	005b      	lsls	r3, r3, #1
 8003fe4:	fa02 f303 	lsl.w	r3, r2, r3
 8003fe8:	69ba      	ldr	r2, [r7, #24]
 8003fea:	4313      	orrs	r3, r2
 8003fec:	61bb      	str	r3, [r7, #24]
      GPIOx->MODER = temp;
 8003fee:	687b      	ldr	r3, [r7, #4]
 8003ff0:	69ba      	ldr	r2, [r7, #24]
 8003ff2:	601a      	str	r2, [r3, #0]

      /*--------------------- EXTI Mode Configuration ------------------------*/
      /* Configure the External Interrupt or event for the current IO */
      if((GPIO_Init->Mode & EXTI_MODE) != 0x00U)
 8003ff4:	683b      	ldr	r3, [r7, #0]
 8003ff6:	685b      	ldr	r3, [r3, #4]
 8003ff8:	f403 3340 	and.w	r3, r3, #196608	@ 0x30000
 8003ffc:	2b00      	cmp	r3, #0
 8003ffe:	f000 80ae 	beq.w	800415e <HAL_GPIO_Init+0x2e2>
      {
        /* Enable SYSCFG Clock */
        __HAL_RCC_SYSCFG_CLK_ENABLE();
 8004002:	2300      	movs	r3, #0
 8004004:	60fb      	str	r3, [r7, #12]
 8004006:	4b5d      	ldr	r3, [pc, #372]	@ (800417c <HAL_GPIO_Init+0x300>)
 8004008:	6c5b      	ldr	r3, [r3, #68]	@ 0x44
 800400a:	4a5c      	ldr	r2, [pc, #368]	@ (800417c <HAL_GPIO_Init+0x300>)
 800400c:	f443 4380 	orr.w	r3, r3, #16384	@ 0x4000
 8004010:	6453      	str	r3, [r2, #68]	@ 0x44
 8004012:	4b5a      	ldr	r3, [pc, #360]	@ (800417c <HAL_GPIO_Init+0x300>)
 8004014:	6c5b      	ldr	r3, [r3, #68]	@ 0x44
 8004016:	f403 4380 	and.w	r3, r3, #16384	@ 0x4000
 800401a:	60fb      	str	r3, [r7, #12]
 800401c:	68fb      	ldr	r3, [r7, #12]

        temp = SYSCFG->EXTICR[position >> 2U];
 800401e:	4a58      	ldr	r2, [pc, #352]	@ (8004180 <HAL_GPIO_Init+0x304>)
 8004020:	69fb      	ldr	r3, [r7, #28]
 8004022:	089b      	lsrs	r3, r3, #2
 8004024:	3302      	adds	r3, #2
 8004026:	f852 3023 	ldr.w	r3, [r2, r3, lsl #2]
 800402a:	61bb      	str	r3, [r7, #24]
        temp &= ~(0x0FU << (4U * (position & 0x03U)));
 800402c:	69fb      	ldr	r3, [r7, #28]
 800402e:	f003 0303 	and.w	r3, r3, #3
 8004032:	009b      	lsls	r3, r3, #2
 8004034:	220f      	movs	r2, #15
 8004036:	fa02 f303 	lsl.w	r3, r2, r3
 800403a:	43db      	mvns	r3, r3
 800403c:	69ba      	ldr	r2, [r7, #24]
 800403e:	4013      	ands	r3, r2
 8004040:	61bb      	str	r3, [r7, #24]
        temp |= ((uint32_t)(GPIO_GET_INDEX(GPIOx)) << (4U * (position & 0x03U)));
 8004042:	687b      	ldr	r3, [r7, #4]
 8004044:	4a4f      	ldr	r2, [pc, #316]	@ (8004184 <HAL_GPIO_Init+0x308>)
 8004046:	4293      	cmp	r3, r2
 8004048:	d025      	beq.n	8004096 <HAL_GPIO_Init+0x21a>
 800404a:	687b      	ldr	r3, [r7, #4]
 800404c:	4a4e      	ldr	r2, [pc, #312]	@ (8004188 <HAL_GPIO_Init+0x30c>)
 800404e:	4293      	cmp	r3, r2
 8004050:	d01f      	beq.n	8004092 <HAL_GPIO_Init+0x216>
 8004052:	687b      	ldr	r3, [r7, #4]
 8004054:	4a4d      	ldr	r2, [pc, #308]	@ (800418c <HAL_GPIO_Init+0x310>)
 8004056:	4293      	cmp	r3, r2
 8004058:	d019      	beq.n	800408e <HAL_GPIO_Init+0x212>
 800405a:	687b      	ldr	r3, [r7, #4]
 800405c:	4a4c      	ldr	r2, [pc, #304]	@ (8004190 <HAL_GPIO_Init+0x314>)
 800405e:	4293      	cmp	r3, r2
 8004060:	d013      	beq.n	800408a <HAL_GPIO_Init+0x20e>
 8004062:	687b      	ldr	r3, [r7, #4]
 8004064:	4a4b      	ldr	r2, [pc, #300]	@ (8004194 <HAL_GPIO_Init+0x318>)
 8004066:	4293      	cmp	r3, r2
 8004068:	d00d      	beq.n	8004086 <HAL_GPIO_Init+0x20a>
 800406a:	687b      	ldr	r3, [r7, #4]
 800406c:	4a4a      	ldr	r2, [pc, #296]	@ (8004198 <HAL_GPIO_Init+0x31c>)
 800406e:	4293      	cmp	r3, r2
 8004070:	d007      	beq.n	8004082 <HAL_GPIO_Init+0x206>
 8004072:	687b      	ldr	r3, [r7, #4]
 8004074:	4a49      	ldr	r2, [pc, #292]	@ (800419c <HAL_GPIO_Init+0x320>)
 8004076:	4293      	cmp	r3, r2
 8004078:	d101      	bne.n	800407e <HAL_GPIO_Init+0x202>
 800407a:	2306      	movs	r3, #6
 800407c:	e00c      	b.n	8004098 <HAL_GPIO_Init+0x21c>
 800407e:	2307      	movs	r3, #7
 8004080:	e00a      	b.n	8004098 <HAL_GPIO_Init+0x21c>
 8004082:	2305      	movs	r3, #5
 8004084:	e008      	b.n	8004098 <HAL_GPIO_Init+0x21c>
 8004086:	2304      	movs	r3, #4
 8004088:	e006      	b.n	8004098 <HAL_GPIO_Init+0x21c>
 800408a:	2303      	movs	r3, #3
 800408c:	e004      	b.n	8004098 <HAL_GPIO_Init+0x21c>
 800408e:	2302      	movs	r3, #2
 8004090:	e002      	b.n	8004098 <HAL_GPIO_Init+0x21c>
 8004092:	2301      	movs	r3, #1
 8004094:	e000      	b.n	8004098 <HAL_GPIO_Init+0x21c>
 8004096:	2300      	movs	r3, #0
 8004098:	69fa      	ldr	r2, [r7, #28]
 800409a:	f002 0203 	and.w	r2, r2, #3
 800409e:	0092      	lsls	r2, r2, #2
 80040a0:	4093      	lsls	r3, r2
 80040a2:	69ba      	ldr	r2, [r7, #24]
 80040a4:	4313      	orrs	r3, r2
 80040a6:	61bb      	str	r3, [r7, #24]
        SYSCFG->EXTICR[position >> 2U] = temp;
 80040a8:	4935      	ldr	r1, [pc, #212]	@ (8004180 <HAL_GPIO_Init+0x304>)
 80040aa:	69fb      	ldr	r3, [r7, #28]
 80040ac:	089b      	lsrs	r3, r3, #2
 80040ae:	3302      	adds	r3, #2
 80040b0:	69ba      	ldr	r2, [r7, #24]
 80040b2:	f841 2023 	str.w	r2, [r1, r3, lsl #2]

        /* Clear Rising Falling edge configuration */
        temp = EXTI->RTSR;
 80040b6:	4b3a      	ldr	r3, [pc, #232]	@ (80041a0 <HAL_GPIO_Init+0x324>)
 80040b8:	689b      	ldr	r3, [r3, #8]
 80040ba:	61bb      	str	r3, [r7, #24]
        temp &= ~((uint32_t)iocurrent);
 80040bc:	693b      	ldr	r3, [r7, #16]
 80040be:	43db      	mvns	r3, r3
 80040c0:	69ba      	ldr	r2, [r7, #24]
 80040c2:	4013      	ands	r3, r2
 80040c4:	61bb      	str	r3, [r7, #24]
        if((GPIO_Init->Mode & TRIGGER_RISING) != 0x00U)
 80040c6:	683b      	ldr	r3, [r7, #0]
 80040c8:	685b      	ldr	r3, [r3, #4]
 80040ca:	f403 1380 	and.w	r3, r3, #1048576	@ 0x100000
 80040ce:	2b00      	cmp	r3, #0
 80040d0:	d003      	beq.n	80040da <HAL_GPIO_Init+0x25e>
        {
          temp |= iocurrent;
 80040d2:	69ba      	ldr	r2, [r7, #24]
 80040d4:	693b      	ldr	r3, [r7, #16]
 80040d6:	4313      	orrs	r3, r2
 80040d8:	61bb      	str	r3, [r7, #24]
        }
        EXTI->RTSR = temp;
 80040da:	4a31      	ldr	r2, [pc, #196]	@ (80041a0 <HAL_GPIO_Init+0x324>)
 80040dc:	69bb      	ldr	r3, [r7, #24]
 80040de:	6093      	str	r3, [r2, #8]

        temp = EXTI->FTSR;
 80040e0:	4b2f      	ldr	r3, [pc, #188]	@ (80041a0 <HAL_GPIO_Init+0x324>)
 80040e2:	68db      	ldr	r3, [r3, #12]
 80040e4:	61bb      	str	r3, [r7, #24]
        temp &= ~((uint32_t)iocurrent);
 80040e6:	693b      	ldr	r3, [r7, #16]
 80040e8:	43db      	mvns	r3, r3
 80040ea:	69ba      	ldr	r2, [r7, #24]
 80040ec:	4013      	ands	r3, r2
 80040ee:	61bb      	str	r3, [r7, #24]
        if((GPIO_Init->Mode & TRIGGER_FALLING) != 0x00U)
 80040f0:	683b      	ldr	r3, [r7, #0]
 80040f2:	685b      	ldr	r3, [r3, #4]
 80040f4:	f403 1300 	and.w	r3, r3, #2097152	@ 0x200000
 80040f8:	2b00      	cmp	r3, #0
 80040fa:	d003      	beq.n	8004104 <HAL_GPIO_Init+0x288>
        {
          temp |= iocurrent;
 80040fc:	69ba      	ldr	r2, [r7, #24]
 80040fe:	693b      	ldr	r3, [r7, #16]
 8004100:	4313      	orrs	r3, r2
 8004102:	61bb      	str	r3, [r7, #24]
        }
        EXTI->FTSR = temp;
 8004104:	4a26      	ldr	r2, [pc, #152]	@ (80041a0 <HAL_GPIO_Init+0x324>)
 8004106:	69bb      	ldr	r3, [r7, #24]
 8004108:	60d3      	str	r3, [r2, #12]

        temp = EXTI->EMR;
 800410a:	4b25      	ldr	r3, [pc, #148]	@ (80041a0 <HAL_GPIO_Init+0x324>)
 800410c:	685b      	ldr	r3, [r3, #4]
 800410e:	61bb      	str	r3, [r7, #24]
        temp &= ~((uint32_t)iocurrent);
 8004110:	693b      	ldr	r3, [r7, #16]
 8004112:	43db      	mvns	r3, r3
 8004114:	69ba      	ldr	r2, [r7, #24]
 8004116:	4013      	ands	r3, r2
 8004118:	61bb      	str	r3, [r7, #24]
        if((GPIO_Init->Mode & EXTI_EVT) != 0x00U)
 800411a:	683b      	ldr	r3, [r7, #0]
 800411c:	685b      	ldr	r3, [r3, #4]
 800411e:	f403 3300 	and.w	r3, r3, #131072	@ 0x20000
 8004122:	2b00      	cmp	r3, #0
 8004124:	d003      	beq.n	800412e <HAL_GPIO_Init+0x2b2>
        {
          temp |= iocurrent;
 8004126:	69ba      	ldr	r2, [r7, #24]
 8004128:	693b      	ldr	r3, [r7, #16]
 800412a:	4313      	orrs	r3, r2
 800412c:	61bb      	str	r3, [r7, #24]
        }
        EXTI->EMR = temp;
 800412e:	4a1c      	ldr	r2, [pc, #112]	@ (80041a0 <HAL_GPIO_Init+0x324>)
 8004130:	69bb      	ldr	r3, [r7, #24]
 8004132:	6053      	str	r3, [r2, #4]

        /* Clear EXTI line configuration */
        temp = EXTI->IMR;
 8004134:	4b1a      	ldr	r3, [pc, #104]	@ (80041a0 <HAL_GPIO_Init+0x324>)
 8004136:	681b      	ldr	r3, [r3, #0]
 8004138:	61bb      	str	r3, [r7, #24]
        temp &= ~((uint32_t)iocurrent);
 800413a:	693b      	ldr	r3, [r7, #16]
 800413c:	43db      	mvns	r3, r3
 800413e:	69ba      	ldr	r2, [r7, #24]
 8004140:	4013      	ands	r3, r2
 8004142:	61bb      	str	r3, [r7, #24]
        if((GPIO_Init->Mode & EXTI_IT) != 0x00U)
 8004144:	683b      	ldr	r3, [r7, #0]
 8004146:	685b      	ldr	r3, [r3, #4]
 8004148:	f403 3380 	and.w	r3, r3, #65536	@ 0x10000
 800414c:	2b00      	cmp	r3, #0
 800414e:	d003      	beq.n	8004158 <HAL_GPIO_Init+0x2dc>
        {
          temp |= iocurrent;
 8004150:	69ba      	ldr	r2, [r7, #24]
 8004152:	693b      	ldr	r3, [r7, #16]
 8004154:	4313      	orrs	r3, r2
 8004156:	61bb      	str	r3, [r7, #24]
        }
        EXTI->IMR = temp;
 8004158:	4a11      	ldr	r2, [pc, #68]	@ (80041a0 <HAL_GPIO_Init+0x324>)
 800415a:	69bb      	ldr	r3, [r7, #24]
 800415c:	6013      	str	r3, [r2, #0]
  for(position = 0U; position < GPIO_NUMBER; position++)
 800415e:	69fb      	ldr	r3, [r7, #28]
 8004160:	3301      	adds	r3, #1
 8004162:	61fb      	str	r3, [r7, #28]
 8004164:	69fb      	ldr	r3, [r7, #28]
 8004166:	2b0f      	cmp	r3, #15
 8004168:	f67f ae96 	bls.w	8003e98 <HAL_GPIO_Init+0x1c>
      }
    }
  }
}
 800416c:	bf00      	nop
 800416e:	bf00      	nop
 8004170:	3724      	adds	r7, #36	@ 0x24
 8004172:	46bd      	mov	sp, r7
 8004174:	f85d 7b04 	ldr.w	r7, [sp], #4
 8004178:	4770      	bx	lr
 800417a:	bf00      	nop
 800417c:	40023800 	.word	0x40023800
 8004180:	40013800 	.word	0x40013800
 8004184:	40020000 	.word	0x40020000
 8004188:	40020400 	.word	0x40020400
 800418c:	40020800 	.word	0x40020800
 8004190:	40020c00 	.word	0x40020c00
 8004194:	40021000 	.word	0x40021000
 8004198:	40021400 	.word	0x40021400
 800419c:	40021800 	.word	0x40021800
 80041a0:	40013c00 	.word	0x40013c00

080041a4 <HAL_GPIO_ReadPin>:
  * @param  GPIO_Pin specifies the port bit to read.
  *         This parameter can be GPIO_PIN_x where x can be (0..15).
  * @retval The input port pin value.
  */
GPIO_PinState HAL_GPIO_ReadPin(GPIO_TypeDef* GPIOx, uint16_t GPIO_Pin)
{
 80041a4:	b480      	push	{r7}
 80041a6:	b085      	sub	sp, #20
 80041a8:	af00      	add	r7, sp, #0
 80041aa:	6078      	str	r0, [r7, #4]
 80041ac:	460b      	mov	r3, r1
 80041ae:	807b      	strh	r3, [r7, #2]
  GPIO_PinState bitstatus;

  /* Check the parameters */
  assert_param(IS_GPIO_PIN(GPIO_Pin));

  if((GPIOx->IDR & GPIO_Pin) != (uint32_t)GPIO_PIN_RESET)
 80041b0:	687b      	ldr	r3, [r7, #4]
 80041b2:	691a      	ldr	r2, [r3, #16]
 80041b4:	887b      	ldrh	r3, [r7, #2]
 80041b6:	4013      	ands	r3, r2
 80041b8:	2b00      	cmp	r3, #0
 80041ba:	d002      	beq.n	80041c2 <HAL_GPIO_ReadPin+0x1e>
  {
    bitstatus = GPIO_PIN_SET;
 80041bc:	2301      	movs	r3, #1
 80041be:	73fb      	strb	r3, [r7, #15]
 80041c0:	e001      	b.n	80041c6 <HAL_GPIO_ReadPin+0x22>
  }
  else
  {
    bitstatus = GPIO_PIN_RESET;
 80041c2:	2300      	movs	r3, #0
 80041c4:	73fb      	strb	r3, [r7, #15]
  }
  return bitstatus;
 80041c6:	7bfb      	ldrb	r3, [r7, #15]
}
 80041c8:	4618      	mov	r0, r3
 80041ca:	3714      	adds	r7, #20
 80041cc:	46bd      	mov	sp, r7
 80041ce:	f85d 7b04 	ldr.w	r7, [sp], #4
 80041d2:	4770      	bx	lr

080041d4 <HAL_GPIO_WritePin>:
  *            @arg GPIO_PIN_RESET: to clear the port pin
  *            @arg GPIO_PIN_SET: to set the port pin
  * @retval None
  */
void HAL_GPIO_WritePin(GPIO_TypeDef* GPIOx, uint16_t GPIO_Pin, GPIO_PinState PinState)
{
 80041d4:	b480      	push	{r7}
 80041d6:	b083      	sub	sp, #12
 80041d8:	af00      	add	r7, sp, #0
 80041da:	6078      	str	r0, [r7, #4]
 80041dc:	460b      	mov	r3, r1
 80041de:	807b      	strh	r3, [r7, #2]
 80041e0:	4613      	mov	r3, r2
 80041e2:	707b      	strb	r3, [r7, #1]
  /* Check the parameters */
  assert_param(IS_GPIO_PIN(GPIO_Pin));
  assert_param(IS_GPIO_PIN_ACTION(PinState));

  if(PinState != GPIO_PIN_RESET)
 80041e4:	787b      	ldrb	r3, [r7, #1]
 80041e6:	2b00      	cmp	r3, #0
 80041e8:	d003      	beq.n	80041f2 <HAL_GPIO_WritePin+0x1e>
  {
    GPIOx->BSRR = GPIO_Pin;
 80041ea:	887a      	ldrh	r2, [r7, #2]
 80041ec:	687b      	ldr	r3, [r7, #4]
 80041ee:	619a      	str	r2, [r3, #24]
  }
  else
  {
    GPIOx->BSRR = (uint32_t)GPIO_Pin << 16U;
  }
}
 80041f0:	e003      	b.n	80041fa <HAL_GPIO_WritePin+0x26>
    GPIOx->BSRR = (uint32_t)GPIO_Pin << 16U;
 80041f2:	887b      	ldrh	r3, [r7, #2]
 80041f4:	041a      	lsls	r2, r3, #16
 80041f6:	687b      	ldr	r3, [r7, #4]
 80041f8:	619a      	str	r2, [r3, #24]
}
 80041fa:	bf00      	nop
 80041fc:	370c      	adds	r7, #12
 80041fe:	46bd      	mov	sp, r7
 8004200:	f85d 7b04 	ldr.w	r7, [sp], #4
 8004204:	4770      	bx	lr

08004206 <HAL_GPIO_TogglePin>:
  *                      x can be (A..I) to select the GPIO peripheral for STM32F40XX and STM32F427X devices.
  * @param  GPIO_Pin Specifies the pins to be toggled.
  * @retval None
  */
void HAL_GPIO_TogglePin(GPIO_TypeDef* GPIOx, uint16_t GPIO_Pin)
{
 8004206:	b480      	push	{r7}
 8004208:	b085      	sub	sp, #20
 800420a:	af00      	add	r7, sp, #0
 800420c:	6078      	str	r0, [r7, #4]
 800420e:	460b      	mov	r3, r1
 8004210:	807b      	strh	r3, [r7, #2]

  /* Check the parameters */
  assert_param(IS_GPIO_PIN(GPIO_Pin));

  /* get current Output Data Register value */
  odr = GPIOx->ODR;
 8004212:	687b      	ldr	r3, [r7, #4]
 8004214:	695b      	ldr	r3, [r3, #20]
 8004216:	60fb      	str	r3, [r7, #12]

  /* Set selected pins that were at low level, and reset ones that were high */
  GPIOx->BSRR = ((odr & GPIO_Pin) << GPIO_NUMBER) | (~odr & GPIO_Pin);
 8004218:	887a      	ldrh	r2, [r7, #2]
 800421a:	68fb      	ldr	r3, [r7, #12]
 800421c:	4013      	ands	r3, r2
 800421e:	041a      	lsls	r2, r3, #16
 8004220:	68fb      	ldr	r3, [r7, #12]
 8004222:	43d9      	mvns	r1, r3
 8004224:	887b      	ldrh	r3, [r7, #2]
 8004226:	400b      	ands	r3, r1
 8004228:	431a      	orrs	r2, r3
 800422a:	687b      	ldr	r3, [r7, #4]
 800422c:	619a      	str	r2, [r3, #24]
}
 800422e:	bf00      	nop
 8004230:	3714      	adds	r7, #20
 8004232:	46bd      	mov	sp, r7
 8004234:	f85d 7b04 	ldr.w	r7, [sp], #4
 8004238:	4770      	bx	lr
	...

0800423c <HAL_GPIO_EXTI_IRQHandler>:
  * @brief  This function handles EXTI interrupt request.
  * @param  GPIO_Pin Specifies the pins connected EXTI line
  * @retval None
  */
void HAL_GPIO_EXTI_IRQHandler(uint16_t GPIO_Pin)
{
 800423c:	b580      	push	{r7, lr}
 800423e:	b082      	sub	sp, #8
 8004240:	af00      	add	r7, sp, #0
 8004242:	4603      	mov	r3, r0
 8004244:	80fb      	strh	r3, [r7, #6]
  /* EXTI line interrupt detected */
  if(__HAL_GPIO_EXTI_GET_IT(GPIO_Pin) != RESET)
 8004246:	4b08      	ldr	r3, [pc, #32]	@ (8004268 <HAL_GPIO_EXTI_IRQHandler+0x2c>)
 8004248:	695a      	ldr	r2, [r3, #20]
 800424a:	88fb      	ldrh	r3, [r7, #6]
 800424c:	4013      	ands	r3, r2
 800424e:	2b00      	cmp	r3, #0
 8004250:	d006      	beq.n	8004260 <HAL_GPIO_EXTI_IRQHandler+0x24>
  {
    __HAL_GPIO_EXTI_CLEAR_IT(GPIO_Pin);
 8004252:	4a05      	ldr	r2, [pc, #20]	@ (8004268 <HAL_GPIO_EXTI_IRQHandler+0x2c>)
 8004254:	88fb      	ldrh	r3, [r7, #6]
 8004256:	6153      	str	r3, [r2, #20]
    HAL_GPIO_EXTI_Callback(GPIO_Pin);
 8004258:	88fb      	ldrh	r3, [r7, #6]
 800425a:	4618      	mov	r0, r3
 800425c:	f7fe f8be 	bl	80023dc <HAL_GPIO_EXTI_Callback>
  }
}
 8004260:	bf00      	nop
 8004262:	3708      	adds	r7, #8
 8004264:	46bd      	mov	sp, r7
 8004266:	bd80      	pop	{r7, pc}
 8004268:	40013c00 	.word	0x40013c00

0800426c <HAL_I2C_Init>:
  * @param  hi2c Pointer to a I2C_HandleTypeDef structure that contains
  *                the configuration information for the specified I2C.
  * @retval HAL status
  */
HAL_StatusTypeDef HAL_I2C_Init(I2C_HandleTypeDef *hi2c)
{
 800426c:	b580      	push	{r7, lr}
 800426e:	b084      	sub	sp, #16
 8004270:	af00      	add	r7, sp, #0
 8004272:	6078      	str	r0, [r7, #4]
  uint32_t freqrange;
  uint32_t pclk1;

  /* Check the I2C handle allocation */
  if (hi2c == NULL)
 8004274:	687b      	ldr	r3, [r7, #4]
 8004276:	2b00      	cmp	r3, #0
 8004278:	d101      	bne.n	800427e <HAL_I2C_Init+0x12>
  {
    return HAL_ERROR;
 800427a:	2301      	movs	r3, #1
 800427c:	e12b      	b.n	80044d6 <HAL_I2C_Init+0x26a>
  assert_param(IS_I2C_DUAL_ADDRESS(hi2c->Init.DualAddressMode));
  assert_param(IS_I2C_OWN_ADDRESS2(hi2c->Init.OwnAddress2));
  assert_param(IS_I2C_GENERAL_CALL(hi2c->Init.GeneralCallMode));
  assert_param(IS_I2C_NO_STRETCH(hi2c->Init.NoStretchMode));

  if (hi2c->State == HAL_I2C_STATE_RESET)
 800427e:	687b      	ldr	r3, [r7, #4]
 8004280:	f893 303d 	ldrb.w	r3, [r3, #61]	@ 0x3d
 8004284:	b2db      	uxtb	r3, r3
 8004286:	2b00      	cmp	r3, #0
 8004288:	d106      	bne.n	8004298 <HAL_I2C_Init+0x2c>
  {
    /* Allocate lock resource and initialize it */
    hi2c->Lock = HAL_UNLOCKED;
 800428a:	687b      	ldr	r3, [r7, #4]
 800428c:	2200      	movs	r2, #0
 800428e:	f883 203c 	strb.w	r2, [r3, #60]	@ 0x3c

    /* Init the low level hardware : GPIO, CLOCK, NVIC */
    hi2c->MspInitCallback(hi2c);
#else
    /* Init the low level hardware : GPIO, CLOCK, NVIC */
    HAL_I2C_MspInit(hi2c);
 8004292:	6878      	ldr	r0, [r7, #4]
 8004294:	f7fd fb4a 	bl	800192c <HAL_I2C_MspInit>
#endif /* USE_HAL_I2C_REGISTER_CALLBACKS */
  }

  hi2c->State = HAL_I2C_STATE_BUSY;
 8004298:	687b      	ldr	r3, [r7, #4]
 800429a:	2224      	movs	r2, #36	@ 0x24
 800429c:	f883 203d 	strb.w	r2, [r3, #61]	@ 0x3d

  /* Disable the selected I2C peripheral */
  __HAL_I2C_DISABLE(hi2c);
 80042a0:	687b      	ldr	r3, [r7, #4]
 80042a2:	681b      	ldr	r3, [r3, #0]
 80042a4:	681a      	ldr	r2, [r3, #0]
 80042a6:	687b      	ldr	r3, [r7, #4]
 80042a8:	681b      	ldr	r3, [r3, #0]
 80042aa:	f022 0201 	bic.w	r2, r2, #1
 80042ae:	601a      	str	r2, [r3, #0]

  /*Reset I2C*/
  hi2c->Instance->CR1 |= I2C_CR1_SWRST;
 80042b0:	687b      	ldr	r3, [r7, #4]
 80042b2:	681b      	ldr	r3, [r3, #0]
 80042b4:	681a      	ldr	r2, [r3, #0]
 80042b6:	687b      	ldr	r3, [r7, #4]
 80042b8:	681b      	ldr	r3, [r3, #0]
 80042ba:	f442 4200 	orr.w	r2, r2, #32768	@ 0x8000
 80042be:	601a      	str	r2, [r3, #0]
  hi2c->Instance->CR1 &= ~I2C_CR1_SWRST;
 80042c0:	687b      	ldr	r3, [r7, #4]
 80042c2:	681b      	ldr	r3, [r3, #0]
 80042c4:	681a      	ldr	r2, [r3, #0]
 80042c6:	687b      	ldr	r3, [r7, #4]
 80042c8:	681b      	ldr	r3, [r3, #0]
 80042ca:	f422 4200 	bic.w	r2, r2, #32768	@ 0x8000
 80042ce:	601a      	str	r2, [r3, #0]

  /* Get PCLK1 frequency */
  pclk1 = HAL_RCC_GetPCLK1Freq();
 80042d0:	f001 fa36 	bl	8005740 <HAL_RCC_GetPCLK1Freq>
 80042d4:	60f8      	str	r0, [r7, #12]

  /* Check the minimum allowed PCLK1 frequency */
  if (I2C_MIN_PCLK_FREQ(pclk1, hi2c->Init.ClockSpeed) == 1U)
 80042d6:	687b      	ldr	r3, [r7, #4]
 80042d8:	685b      	ldr	r3, [r3, #4]
 80042da:	4a81      	ldr	r2, [pc, #516]	@ (80044e0 <HAL_I2C_Init+0x274>)
 80042dc:	4293      	cmp	r3, r2
 80042de:	d807      	bhi.n	80042f0 <HAL_I2C_Init+0x84>
 80042e0:	68fb      	ldr	r3, [r7, #12]
 80042e2:	4a80      	ldr	r2, [pc, #512]	@ (80044e4 <HAL_I2C_Init+0x278>)
 80042e4:	4293      	cmp	r3, r2
 80042e6:	bf94      	ite	ls
 80042e8:	2301      	movls	r3, #1
 80042ea:	2300      	movhi	r3, #0
 80042ec:	b2db      	uxtb	r3, r3
 80042ee:	e006      	b.n	80042fe <HAL_I2C_Init+0x92>
 80042f0:	68fb      	ldr	r3, [r7, #12]
 80042f2:	4a7d      	ldr	r2, [pc, #500]	@ (80044e8 <HAL_I2C_Init+0x27c>)
 80042f4:	4293      	cmp	r3, r2
 80042f6:	bf94      	ite	ls
 80042f8:	2301      	movls	r3, #1
 80042fa:	2300      	movhi	r3, #0
 80042fc:	b2db      	uxtb	r3, r3
 80042fe:	2b00      	cmp	r3, #0
 8004300:	d001      	beq.n	8004306 <HAL_I2C_Init+0x9a>
  {
    return HAL_ERROR;
 8004302:	2301      	movs	r3, #1
 8004304:	e0e7      	b.n	80044d6 <HAL_I2C_Init+0x26a>
  }

  /* Calculate frequency range */
  freqrange = I2C_FREQRANGE(pclk1);
 8004306:	68fb      	ldr	r3, [r7, #12]
 8004308:	4a78      	ldr	r2, [pc, #480]	@ (80044ec <HAL_I2C_Init+0x280>)
 800430a:	fba2 2303 	umull	r2, r3, r2, r3
 800430e:	0c9b      	lsrs	r3, r3, #18
 8004310:	60bb      	str	r3, [r7, #8]

  /*---------------------------- I2Cx CR2 Configuration ----------------------*/
  /* Configure I2Cx: Frequency range */
  MODIFY_REG(hi2c->Instance->CR2, I2C_CR2_FREQ, freqrange);
 8004312:	687b      	ldr	r3, [r7, #4]
 8004314:	681b      	ldr	r3, [r3, #0]
 8004316:	685b      	ldr	r3, [r3, #4]
 8004318:	f023 013f 	bic.w	r1, r3, #63	@ 0x3f
 800431c:	687b      	ldr	r3, [r7, #4]
 800431e:	681b      	ldr	r3, [r3, #0]
 8004320:	68ba      	ldr	r2, [r7, #8]
 8004322:	430a      	orrs	r2, r1
 8004324:	605a      	str	r2, [r3, #4]

  /*---------------------------- I2Cx TRISE Configuration --------------------*/
  /* Configure I2Cx: Rise Time */
  MODIFY_REG(hi2c->Instance->TRISE, I2C_TRISE_TRISE, I2C_RISE_TIME(freqrange, hi2c->Init.ClockSpeed));
 8004326:	687b      	ldr	r3, [r7, #4]
 8004328:	681b      	ldr	r3, [r3, #0]
 800432a:	6a1b      	ldr	r3, [r3, #32]
 800432c:	f023 013f 	bic.w	r1, r3, #63	@ 0x3f
 8004330:	687b      	ldr	r3, [r7, #4]
 8004332:	685b      	ldr	r3, [r3, #4]
 8004334:	4a6a      	ldr	r2, [pc, #424]	@ (80044e0 <HAL_I2C_Init+0x274>)
 8004336:	4293      	cmp	r3, r2
 8004338:	d802      	bhi.n	8004340 <HAL_I2C_Init+0xd4>
 800433a:	68bb      	ldr	r3, [r7, #8]
 800433c:	3301      	adds	r3, #1
 800433e:	e009      	b.n	8004354 <HAL_I2C_Init+0xe8>
 8004340:	68bb      	ldr	r3, [r7, #8]
 8004342:	f44f 7296 	mov.w	r2, #300	@ 0x12c
 8004346:	fb02 f303 	mul.w	r3, r2, r3
 800434a:	4a69      	ldr	r2, [pc, #420]	@ (80044f0 <HAL_I2C_Init+0x284>)
 800434c:	fba2 2303 	umull	r2, r3, r2, r3
 8004350:	099b      	lsrs	r3, r3, #6
 8004352:	3301      	adds	r3, #1
 8004354:	687a      	ldr	r2, [r7, #4]
 8004356:	6812      	ldr	r2, [r2, #0]
 8004358:	430b      	orrs	r3, r1
 800435a:	6213      	str	r3, [r2, #32]

  /*---------------------------- I2Cx CCR Configuration ----------------------*/
  /* Configure I2Cx: Speed */
  MODIFY_REG(hi2c->Instance->CCR, (I2C_CCR_FS | I2C_CCR_DUTY | I2C_CCR_CCR), I2C_SPEED(pclk1, hi2c->Init.ClockSpeed, hi2c->Init.DutyCycle));
 800435c:	687b      	ldr	r3, [r7, #4]
 800435e:	681b      	ldr	r3, [r3, #0]
 8004360:	69db      	ldr	r3, [r3, #28]
 8004362:	f423 424f 	bic.w	r2, r3, #52992	@ 0xcf00
 8004366:	f022 02ff 	bic.w	r2, r2, #255	@ 0xff
 800436a:	687b      	ldr	r3, [r7, #4]
 800436c:	685b      	ldr	r3, [r3, #4]
 800436e:	495c      	ldr	r1, [pc, #368]	@ (80044e0 <HAL_I2C_Init+0x274>)
 8004370:	428b      	cmp	r3, r1
 8004372:	d819      	bhi.n	80043a8 <HAL_I2C_Init+0x13c>
 8004374:	68fb      	ldr	r3, [r7, #12]
 8004376:	1e59      	subs	r1, r3, #1
 8004378:	687b      	ldr	r3, [r7, #4]
 800437a:	685b      	ldr	r3, [r3, #4]
 800437c:	005b      	lsls	r3, r3, #1
 800437e:	fbb1 f3f3 	udiv	r3, r1, r3
 8004382:	1c59      	adds	r1, r3, #1
 8004384:	f640 73fc 	movw	r3, #4092	@ 0xffc
 8004388:	400b      	ands	r3, r1
 800438a:	2b00      	cmp	r3, #0
 800438c:	d00a      	beq.n	80043a4 <HAL_I2C_Init+0x138>
 800438e:	68fb      	ldr	r3, [r7, #12]
 8004390:	1e59      	subs	r1, r3, #1
 8004392:	687b      	ldr	r3, [r7, #4]
 8004394:	685b      	ldr	r3, [r3, #4]
 8004396:	005b      	lsls	r3, r3, #1
 8004398:	fbb1 f3f3 	udiv	r3, r1, r3
 800439c:	3301      	adds	r3, #1
 800439e:	f3c3 030b 	ubfx	r3, r3, #0, #12
 80043a2:	e051      	b.n	8004448 <HAL_I2C_Init+0x1dc>
 80043a4:	2304      	movs	r3, #4
 80043a6:	e04f      	b.n	8004448 <HAL_I2C_Init+0x1dc>
 80043a8:	687b      	ldr	r3, [r7, #4]
 80043aa:	689b      	ldr	r3, [r3, #8]
 80043ac:	2b00      	cmp	r3, #0
 80043ae:	d111      	bne.n	80043d4 <HAL_I2C_Init+0x168>
 80043b0:	68fb      	ldr	r3, [r7, #12]
 80043b2:	1e58      	subs	r0, r3, #1
 80043b4:	687b      	ldr	r3, [r7, #4]
 80043b6:	6859      	ldr	r1, [r3, #4]
 80043b8:	460b      	mov	r3, r1
 80043ba:	005b      	lsls	r3, r3, #1
 80043bc:	440b      	add	r3, r1
 80043be:	fbb0 f3f3 	udiv	r3, r0, r3
 80043c2:	3301      	adds	r3, #1
 80043c4:	f3c3 030b 	ubfx	r3, r3, #0, #12
 80043c8:	2b00      	cmp	r3, #0
 80043ca:	bf0c      	ite	eq
 80043cc:	2301      	moveq	r3, #1
 80043ce:	2300      	movne	r3, #0
 80043d0:	b2db      	uxtb	r3, r3
 80043d2:	e012      	b.n	80043fa <HAL_I2C_Init+0x18e>
 80043d4:	68fb      	ldr	r3, [r7, #12]
 80043d6:	1e58      	subs	r0, r3, #1
 80043d8:	687b      	ldr	r3, [r7, #4]
 80043da:	6859      	ldr	r1, [r3, #4]
 80043dc:	460b      	mov	r3, r1
 80043de:	009b      	lsls	r3, r3, #2
 80043e0:	440b      	add	r3, r1
 80043e2:	0099      	lsls	r1, r3, #2
 80043e4:	440b      	add	r3, r1
 80043e6:	fbb0 f3f3 	udiv	r3, r0, r3
 80043ea:	3301      	adds	r3, #1
 80043ec:	f3c3 030b 	ubfx	r3, r3, #0, #12
 80043f0:	2b00      	cmp	r3, #0
 80043f2:	bf0c      	ite	eq
 80043f4:	2301      	moveq	r3, #1
 80043f6:	2300      	movne	r3, #0
 80043f8:	b2db      	uxtb	r3, r3
 80043fa:	2b00      	cmp	r3, #0
 80043fc:	d001      	beq.n	8004402 <HAL_I2C_Init+0x196>
 80043fe:	2301      	movs	r3, #1
 8004400:	e022      	b.n	8004448 <HAL_I2C_Init+0x1dc>
 8004402:	687b      	ldr	r3, [r7, #4]
 8004404:	689b      	ldr	r3, [r3, #8]
 8004406:	2b00      	cmp	r3, #0
 8004408:	d10e      	bne.n	8004428 <HAL_I2C_Init+0x1bc>
 800440a:	68fb      	ldr	r3, [r7, #12]
 800440c:	1e58      	subs	r0, r3, #1
 800440e:	687b      	ldr	r3, [r7, #4]
 8004410:	6859      	ldr	r1, [r3, #4]
 8004412:	460b      	mov	r3, r1
 8004414:	005b      	lsls	r3, r3, #1
 8004416:	440b      	add	r3, r1
 8004418:	fbb0 f3f3 	udiv	r3, r0, r3
 800441c:	3301      	adds	r3, #1
 800441e:	f3c3 030b 	ubfx	r3, r3, #0, #12
 8004422:	f443 4300 	orr.w	r3, r3, #32768	@ 0x8000
 8004426:	e00f      	b.n	8004448 <HAL_I2C_Init+0x1dc>
 8004428:	68fb      	ldr	r3, [r7, #12]
 800442a:	1e58      	subs	r0, r3, #1
 800442c:	687b      	ldr	r3, [r7, #4]
 800442e:	6859      	ldr	r1, [r3, #4]
 8004430:	460b      	mov	r3, r1
 8004432:	009b      	lsls	r3, r3, #2
 8004434:	440b      	add	r3, r1
 8004436:	0099      	lsls	r1, r3, #2
 8004438:	440b      	add	r3, r1
 800443a:	fbb0 f3f3 	udiv	r3, r0, r3
 800443e:	3301      	adds	r3, #1
 8004440:	f3c3 030b 	ubfx	r3, r3, #0, #12
 8004444:	f443 4340 	orr.w	r3, r3, #49152	@ 0xc000
 8004448:	6879      	ldr	r1, [r7, #4]
 800444a:	6809      	ldr	r1, [r1, #0]
 800444c:	4313      	orrs	r3, r2
 800444e:	61cb      	str	r3, [r1, #28]

  /*---------------------------- I2Cx CR1 Configuration ----------------------*/
  /* Configure I2Cx: Generalcall and NoStretch mode */
  MODIFY_REG(hi2c->Instance->CR1, (I2C_CR1_ENGC | I2C_CR1_NOSTRETCH), (hi2c->Init.GeneralCallMode | hi2c->Init.NoStretchMode));
 8004450:	687b      	ldr	r3, [r7, #4]
 8004452:	681b      	ldr	r3, [r3, #0]
 8004454:	681b      	ldr	r3, [r3, #0]
 8004456:	f023 01c0 	bic.w	r1, r3, #192	@ 0xc0
 800445a:	687b      	ldr	r3, [r7, #4]
 800445c:	69da      	ldr	r2, [r3, #28]
 800445e:	687b      	ldr	r3, [r7, #4]
 8004460:	6a1b      	ldr	r3, [r3, #32]
 8004462:	431a      	orrs	r2, r3
 8004464:	687b      	ldr	r3, [r7, #4]
 8004466:	681b      	ldr	r3, [r3, #0]
 8004468:	430a      	orrs	r2, r1
 800446a:	601a      	str	r2, [r3, #0]

  /*---------------------------- I2Cx OAR1 Configuration ---------------------*/
  /* Configure I2Cx: Own Address1 and addressing mode */
  MODIFY_REG(hi2c->Instance->OAR1, (I2C_OAR1_ADDMODE | I2C_OAR1_ADD8_9 | I2C_OAR1_ADD1_7 | I2C_OAR1_ADD0), (hi2c->Init.AddressingMode | hi2c->Init.OwnAddress1));
 800446c:	687b      	ldr	r3, [r7, #4]
 800446e:	681b      	ldr	r3, [r3, #0]
 8004470:	689b      	ldr	r3, [r3, #8]
 8004472:	f423 4303 	bic.w	r3, r3, #33536	@ 0x8300
 8004476:	f023 03ff 	bic.w	r3, r3, #255	@ 0xff
 800447a:	687a      	ldr	r2, [r7, #4]
 800447c:	6911      	ldr	r1, [r2, #16]
 800447e:	687a      	ldr	r2, [r7, #4]
 8004480:	68d2      	ldr	r2, [r2, #12]
 8004482:	4311      	orrs	r1, r2
 8004484:	687a      	ldr	r2, [r7, #4]
 8004486:	6812      	ldr	r2, [r2, #0]
 8004488:	430b      	orrs	r3, r1
 800448a:	6093      	str	r3, [r2, #8]

  /*---------------------------- I2Cx OAR2 Configuration ---------------------*/
  /* Configure I2Cx: Dual mode and Own Address2 */
  MODIFY_REG(hi2c->Instance->OAR2, (I2C_OAR2_ENDUAL | I2C_OAR2_ADD2), (hi2c->Init.DualAddressMode | hi2c->Init.OwnAddress2));
 800448c:	687b      	ldr	r3, [r7, #4]
 800448e:	681b      	ldr	r3, [r3, #0]
 8004490:	68db      	ldr	r3, [r3, #12]
 8004492:	f023 01ff 	bic.w	r1, r3, #255	@ 0xff
 8004496:	687b      	ldr	r3, [r7, #4]
 8004498:	695a      	ldr	r2, [r3, #20]
 800449a:	687b      	ldr	r3, [r7, #4]
 800449c:	699b      	ldr	r3, [r3, #24]
 800449e:	431a      	orrs	r2, r3
 80044a0:	687b      	ldr	r3, [r7, #4]
 80044a2:	681b      	ldr	r3, [r3, #0]
 80044a4:	430a      	orrs	r2, r1
 80044a6:	60da      	str	r2, [r3, #12]

  /* Enable the selected I2C peripheral */
  __HAL_I2C_ENABLE(hi2c);
 80044a8:	687b      	ldr	r3, [r7, #4]
 80044aa:	681b      	ldr	r3, [r3, #0]
 80044ac:	681a      	ldr	r2, [r3, #0]
 80044ae:	687b      	ldr	r3, [r7, #4]
 80044b0:	681b      	ldr	r3, [r3, #0]
 80044b2:	f042 0201 	orr.w	r2, r2, #1
 80044b6:	601a      	str	r2, [r3, #0]

  hi2c->ErrorCode = HAL_I2C_ERROR_NONE;
 80044b8:	687b      	ldr	r3, [r7, #4]
 80044ba:	2200      	movs	r2, #0
 80044bc:	641a      	str	r2, [r3, #64]	@ 0x40
  hi2c->State = HAL_I2C_STATE_READY;
 80044be:	687b      	ldr	r3, [r7, #4]
 80044c0:	2220      	movs	r2, #32
 80044c2:	f883 203d 	strb.w	r2, [r3, #61]	@ 0x3d
  hi2c->PreviousState = I2C_STATE_NONE;
 80044c6:	687b      	ldr	r3, [r7, #4]
 80044c8:	2200      	movs	r2, #0
 80044ca:	631a      	str	r2, [r3, #48]	@ 0x30
  hi2c->Mode = HAL_I2C_MODE_NONE;
 80044cc:	687b      	ldr	r3, [r7, #4]
 80044ce:	2200      	movs	r2, #0
 80044d0:	f883 203e 	strb.w	r2, [r3, #62]	@ 0x3e

  return HAL_OK;
 80044d4:	2300      	movs	r3, #0
}
 80044d6:	4618      	mov	r0, r3
 80044d8:	3710      	adds	r7, #16
 80044da:	46bd      	mov	sp, r7
 80044dc:	bd80      	pop	{r7, pc}
 80044de:	bf00      	nop
 80044e0:	000186a0 	.word	0x000186a0
 80044e4:	001e847f 	.word	0x001e847f
 80044e8:	003d08ff 	.word	0x003d08ff
 80044ec:	431bde83 	.word	0x431bde83
 80044f0:	10624dd3 	.word	0x10624dd3

080044f4 <HAL_I2C_Master_Transmit>:
  * @param  Size Amount of data to be sent
  * @param  Timeout Timeout duration
  * @retval HAL status
  */
HAL_StatusTypeDef HAL_I2C_Master_Transmit(I2C_HandleTypeDef *hi2c, uint16_t DevAddress, uint8_t *pData, uint16_t Size, uint32_t Timeout)
{
 80044f4:	b580      	push	{r7, lr}
 80044f6:	b088      	sub	sp, #32
 80044f8:	af02      	add	r7, sp, #8
 80044fa:	60f8      	str	r0, [r7, #12]
 80044fc:	607a      	str	r2, [r7, #4]
 80044fe:	461a      	mov	r2, r3
 8004500:	460b      	mov	r3, r1
 8004502:	817b      	strh	r3, [r7, #10]
 8004504:	4613      	mov	r3, r2
 8004506:	813b      	strh	r3, [r7, #8]
  /* Init tickstart for timeout management*/
  uint32_t tickstart = HAL_GetTick();
 8004508:	f7fe fa24 	bl	8002954 <HAL_GetTick>
 800450c:	6178      	str	r0, [r7, #20]

  if (hi2c->State == HAL_I2C_STATE_READY)
 800450e:	68fb      	ldr	r3, [r7, #12]
 8004510:	f893 303d 	ldrb.w	r3, [r3, #61]	@ 0x3d
 8004514:	b2db      	uxtb	r3, r3
 8004516:	2b20      	cmp	r3, #32
 8004518:	f040 80e0 	bne.w	80046dc <HAL_I2C_Master_Transmit+0x1e8>
  {
    /* Wait until BUSY flag is reset */
    if (I2C_WaitOnFlagUntilTimeout(hi2c, I2C_FLAG_BUSY, SET, I2C_TIMEOUT_BUSY_FLAG, tickstart) != HAL_OK)
 800451c:	697b      	ldr	r3, [r7, #20]
 800451e:	9300      	str	r3, [sp, #0]
 8004520:	2319      	movs	r3, #25
 8004522:	2201      	movs	r2, #1
 8004524:	4970      	ldr	r1, [pc, #448]	@ (80046e8 <HAL_I2C_Master_Transmit+0x1f4>)
 8004526:	68f8      	ldr	r0, [r7, #12]
 8004528:	f000 fd92 	bl	8005050 <I2C_WaitOnFlagUntilTimeout>
 800452c:	4603      	mov	r3, r0
 800452e:	2b00      	cmp	r3, #0
 8004530:	d001      	beq.n	8004536 <HAL_I2C_Master_Transmit+0x42>
    {
      return HAL_BUSY;
 8004532:	2302      	movs	r3, #2
 8004534:	e0d3      	b.n	80046de <HAL_I2C_Master_Transmit+0x1ea>
    }

    /* Process Locked */
    __HAL_LOCK(hi2c);
 8004536:	68fb      	ldr	r3, [r7, #12]
 8004538:	f893 303c 	ldrb.w	r3, [r3, #60]	@ 0x3c
 800453c:	2b01      	cmp	r3, #1
 800453e:	d101      	bne.n	8004544 <HAL_I2C_Master_Transmit+0x50>
 8004540:	2302      	movs	r3, #2
 8004542:	e0cc      	b.n	80046de <HAL_I2C_Master_Transmit+0x1ea>
 8004544:	68fb      	ldr	r3, [r7, #12]
 8004546:	2201      	movs	r2, #1
 8004548:	f883 203c 	strb.w	r2, [r3, #60]	@ 0x3c

    /* Check if the I2C is already enabled */
    if ((hi2c->Instance->CR1 & I2C_CR1_PE) != I2C_CR1_PE)
 800454c:	68fb      	ldr	r3, [r7, #12]
 800454e:	681b      	ldr	r3, [r3, #0]
 8004550:	681b      	ldr	r3, [r3, #0]
 8004552:	f003 0301 	and.w	r3, r3, #1
 8004556:	2b01      	cmp	r3, #1
 8004558:	d007      	beq.n	800456a <HAL_I2C_Master_Transmit+0x76>
    {
      /* Enable I2C peripheral */
      __HAL_I2C_ENABLE(hi2c);
 800455a:	68fb      	ldr	r3, [r7, #12]
 800455c:	681b      	ldr	r3, [r3, #0]
 800455e:	681a      	ldr	r2, [r3, #0]
 8004560:	68fb      	ldr	r3, [r7, #12]
 8004562:	681b      	ldr	r3, [r3, #0]
 8004564:	f042 0201 	orr.w	r2, r2, #1
 8004568:	601a      	str	r2, [r3, #0]
    }

    /* Disable Pos */
    CLEAR_BIT(hi2c->Instance->CR1, I2C_CR1_POS);
 800456a:	68fb      	ldr	r3, [r7, #12]
 800456c:	681b      	ldr	r3, [r3, #0]
 800456e:	681a      	ldr	r2, [r3, #0]
 8004570:	68fb      	ldr	r3, [r7, #12]
 8004572:	681b      	ldr	r3, [r3, #0]
 8004574:	f422 6200 	bic.w	r2, r2, #2048	@ 0x800
 8004578:	601a      	str	r2, [r3, #0]

    hi2c->State       = HAL_I2C_STATE_BUSY_TX;
 800457a:	68fb      	ldr	r3, [r7, #12]
 800457c:	2221      	movs	r2, #33	@ 0x21
 800457e:	f883 203d 	strb.w	r2, [r3, #61]	@ 0x3d
    hi2c->Mode        = HAL_I2C_MODE_MASTER;
 8004582:	68fb      	ldr	r3, [r7, #12]
 8004584:	2210      	movs	r2, #16
 8004586:	f883 203e 	strb.w	r2, [r3, #62]	@ 0x3e
    hi2c->ErrorCode   = HAL_I2C_ERROR_NONE;
 800458a:	68fb      	ldr	r3, [r7, #12]
 800458c:	2200      	movs	r2, #0
 800458e:	641a      	str	r2, [r3, #64]	@ 0x40

    /* Prepare transfer parameters */
    hi2c->pBuffPtr    = pData;
 8004590:	68fb      	ldr	r3, [r7, #12]
 8004592:	687a      	ldr	r2, [r7, #4]
 8004594:	625a      	str	r2, [r3, #36]	@ 0x24
    hi2c->XferCount   = Size;
 8004596:	68fb      	ldr	r3, [r7, #12]
 8004598:	893a      	ldrh	r2, [r7, #8]
 800459a:	855a      	strh	r2, [r3, #42]	@ 0x2a
    hi2c->XferSize    = hi2c->XferCount;
 800459c:	68fb      	ldr	r3, [r7, #12]
 800459e:	8d5b      	ldrh	r3, [r3, #42]	@ 0x2a
 80045a0:	b29a      	uxth	r2, r3
 80045a2:	68fb      	ldr	r3, [r7, #12]
 80045a4:	851a      	strh	r2, [r3, #40]	@ 0x28
    hi2c->XferOptions = I2C_NO_OPTION_FRAME;
 80045a6:	68fb      	ldr	r3, [r7, #12]
 80045a8:	4a50      	ldr	r2, [pc, #320]	@ (80046ec <HAL_I2C_Master_Transmit+0x1f8>)
 80045aa:	62da      	str	r2, [r3, #44]	@ 0x2c

    /* Send Slave Address */
    if (I2C_MasterRequestWrite(hi2c, DevAddress, Timeout, tickstart) != HAL_OK)
 80045ac:	8979      	ldrh	r1, [r7, #10]
 80045ae:	697b      	ldr	r3, [r7, #20]
 80045b0:	6a3a      	ldr	r2, [r7, #32]
 80045b2:	68f8      	ldr	r0, [r7, #12]
 80045b4:	f000 fbfc 	bl	8004db0 <I2C_MasterRequestWrite>
 80045b8:	4603      	mov	r3, r0
 80045ba:	2b00      	cmp	r3, #0
 80045bc:	d001      	beq.n	80045c2 <HAL_I2C_Master_Transmit+0xce>
    {
      return HAL_ERROR;
 80045be:	2301      	movs	r3, #1
 80045c0:	e08d      	b.n	80046de <HAL_I2C_Master_Transmit+0x1ea>
    }

    /* Clear ADDR flag */
    __HAL_I2C_CLEAR_ADDRFLAG(hi2c);
 80045c2:	2300      	movs	r3, #0
 80045c4:	613b      	str	r3, [r7, #16]
 80045c6:	68fb      	ldr	r3, [r7, #12]
 80045c8:	681b      	ldr	r3, [r3, #0]
 80045ca:	695b      	ldr	r3, [r3, #20]
 80045cc:	613b      	str	r3, [r7, #16]
 80045ce:	68fb      	ldr	r3, [r7, #12]
 80045d0:	681b      	ldr	r3, [r3, #0]
 80045d2:	699b      	ldr	r3, [r3, #24]
 80045d4:	613b      	str	r3, [r7, #16]
 80045d6:	693b      	ldr	r3, [r7, #16]

    while (hi2c->XferSize > 0U)
 80045d8:	e066      	b.n	80046a8 <HAL_I2C_Master_Transmit+0x1b4>
    {
      /* Wait until TXE flag is set */
      if (I2C_WaitOnTXEFlagUntilTimeout(hi2c, Timeout, tickstart) != HAL_OK)
 80045da:	697a      	ldr	r2, [r7, #20]
 80045dc:	6a39      	ldr	r1, [r7, #32]
 80045de:	68f8      	ldr	r0, [r7, #12]
 80045e0:	f000 fe50 	bl	8005284 <I2C_WaitOnTXEFlagUntilTimeout>
 80045e4:	4603      	mov	r3, r0
 80045e6:	2b00      	cmp	r3, #0
 80045e8:	d00d      	beq.n	8004606 <HAL_I2C_Master_Transmit+0x112>
      {
        if (hi2c->ErrorCode == HAL_I2C_ERROR_AF)
 80045ea:	68fb      	ldr	r3, [r7, #12]
 80045ec:	6c1b      	ldr	r3, [r3, #64]	@ 0x40
 80045ee:	2b04      	cmp	r3, #4
 80045f0:	d107      	bne.n	8004602 <HAL_I2C_Master_Transmit+0x10e>
        {
          /* Generate Stop */
          SET_BIT(hi2c->Instance->CR1, I2C_CR1_STOP);
 80045f2:	68fb      	ldr	r3, [r7, #12]
 80045f4:	681b      	ldr	r3, [r3, #0]
 80045f6:	681a      	ldr	r2, [r3, #0]
 80045f8:	68fb      	ldr	r3, [r7, #12]
 80045fa:	681b      	ldr	r3, [r3, #0]
 80045fc:	f442 7200 	orr.w	r2, r2, #512	@ 0x200
 8004600:	601a      	str	r2, [r3, #0]
        }
        return HAL_ERROR;
 8004602:	2301      	movs	r3, #1
 8004604:	e06b      	b.n	80046de <HAL_I2C_Master_Transmit+0x1ea>
      }

      /* Write data to DR */
      hi2c->Instance->DR = *hi2c->pBuffPtr;
 8004606:	68fb      	ldr	r3, [r7, #12]
 8004608:	6a5b      	ldr	r3, [r3, #36]	@ 0x24
 800460a:	781a      	ldrb	r2, [r3, #0]
 800460c:	68fb      	ldr	r3, [r7, #12]
 800460e:	681b      	ldr	r3, [r3, #0]
 8004610:	611a      	str	r2, [r3, #16]

      /* Increment Buffer pointer */
      hi2c->pBuffPtr++;
 8004612:	68fb      	ldr	r3, [r7, #12]
 8004614:	6a5b      	ldr	r3, [r3, #36]	@ 0x24
 8004616:	1c5a      	adds	r2, r3, #1
 8004618:	68fb      	ldr	r3, [r7, #12]
 800461a:	625a      	str	r2, [r3, #36]	@ 0x24

      /* Update counter */
      hi2c->XferCount--;
 800461c:	68fb      	ldr	r3, [r7, #12]
 800461e:	8d5b      	ldrh	r3, [r3, #42]	@ 0x2a
 8004620:	b29b      	uxth	r3, r3
 8004622:	3b01      	subs	r3, #1
 8004624:	b29a      	uxth	r2, r3
 8004626:	68fb      	ldr	r3, [r7, #12]
 8004628:	855a      	strh	r2, [r3, #42]	@ 0x2a
      hi2c->XferSize--;
 800462a:	68fb      	ldr	r3, [r7, #12]
 800462c:	8d1b      	ldrh	r3, [r3, #40]	@ 0x28
 800462e:	3b01      	subs	r3, #1
 8004630:	b29a      	uxth	r2, r3
 8004632:	68fb      	ldr	r3, [r7, #12]
 8004634:	851a      	strh	r2, [r3, #40]	@ 0x28

      if ((__HAL_I2C_GET_FLAG(hi2c, I2C_FLAG_BTF) == SET) && (hi2c->XferSize != 0U))
 8004636:	68fb      	ldr	r3, [r7, #12]
 8004638:	681b      	ldr	r3, [r3, #0]
 800463a:	695b      	ldr	r3, [r3, #20]
 800463c:	f003 0304 	and.w	r3, r3, #4
 8004640:	2b04      	cmp	r3, #4
 8004642:	d11b      	bne.n	800467c <HAL_I2C_Master_Transmit+0x188>
 8004644:	68fb      	ldr	r3, [r7, #12]
 8004646:	8d1b      	ldrh	r3, [r3, #40]	@ 0x28
 8004648:	2b00      	cmp	r3, #0
 800464a:	d017      	beq.n	800467c <HAL_I2C_Master_Transmit+0x188>
      {
        /* Write data to DR */
        hi2c->Instance->DR = *hi2c->pBuffPtr;
 800464c:	68fb      	ldr	r3, [r7, #12]
 800464e:	6a5b      	ldr	r3, [r3, #36]	@ 0x24
 8004650:	781a      	ldrb	r2, [r3, #0]
 8004652:	68fb      	ldr	r3, [r7, #12]
 8004654:	681b      	ldr	r3, [r3, #0]
 8004656:	611a      	str	r2, [r3, #16]

        /* Increment Buffer pointer */
        hi2c->pBuffPtr++;
 8004658:	68fb      	ldr	r3, [r7, #12]
 800465a:	6a5b      	ldr	r3, [r3, #36]	@ 0x24
 800465c:	1c5a      	adds	r2, r3, #1
 800465e:	68fb      	ldr	r3, [r7, #12]
 8004660:	625a      	str	r2, [r3, #36]	@ 0x24

        /* Update counter */
        hi2c->XferCount--;
 8004662:	68fb      	ldr	r3, [r7, #12]
 8004664:	8d5b      	ldrh	r3, [r3, #42]	@ 0x2a
 8004666:	b29b      	uxth	r3, r3
 8004668:	3b01      	subs	r3, #1
 800466a:	b29a      	uxth	r2, r3
 800466c:	68fb      	ldr	r3, [r7, #12]
 800466e:	855a      	strh	r2, [r3, #42]	@ 0x2a
        hi2c->XferSize--;
 8004670:	68fb      	ldr	r3, [r7, #12]
 8004672:	8d1b      	ldrh	r3, [r3, #40]	@ 0x28
 8004674:	3b01      	subs	r3, #1
 8004676:	b29a      	uxth	r2, r3
 8004678:	68fb      	ldr	r3, [r7, #12]
 800467a:	851a      	strh	r2, [r3, #40]	@ 0x28
      }

      /* Wait until BTF flag is set */
      if (I2C_WaitOnBTFFlagUntilTimeout(hi2c, Timeout, tickstart) != HAL_OK)
 800467c:	697a      	ldr	r2, [r7, #20]
 800467e:	6a39      	ldr	r1, [r7, #32]
 8004680:	68f8      	ldr	r0, [r7, #12]
 8004682:	f000 fe47 	bl	8005314 <I2C_WaitOnBTFFlagUntilTimeout>
 8004686:	4603      	mov	r3, r0
 8004688:	2b00      	cmp	r3, #0
 800468a:	d00d      	beq.n	80046a8 <HAL_I2C_Master_Transmit+0x1b4>
      {
        if (hi2c->ErrorCode == HAL_I2C_ERROR_AF)
 800468c:	68fb      	ldr	r3, [r7, #12]
 800468e:	6c1b      	ldr	r3, [r3, #64]	@ 0x40
 8004690:	2b04      	cmp	r3, #4
 8004692:	d107      	bne.n	80046a4 <HAL_I2C_Master_Transmit+0x1b0>
        {
          /* Generate Stop */
          SET_BIT(hi2c->Instance->CR1, I2C_CR1_STOP);
 8004694:	68fb      	ldr	r3, [r7, #12]
 8004696:	681b      	ldr	r3, [r3, #0]
 8004698:	681a      	ldr	r2, [r3, #0]
 800469a:	68fb      	ldr	r3, [r7, #12]
 800469c:	681b      	ldr	r3, [r3, #0]
 800469e:	f442 7200 	orr.w	r2, r2, #512	@ 0x200
 80046a2:	601a      	str	r2, [r3, #0]
        }
        return HAL_ERROR;
 80046a4:	2301      	movs	r3, #1
 80046a6:	e01a      	b.n	80046de <HAL_I2C_Master_Transmit+0x1ea>
    while (hi2c->XferSize > 0U)
 80046a8:	68fb      	ldr	r3, [r7, #12]
 80046aa:	8d1b      	ldrh	r3, [r3, #40]	@ 0x28
 80046ac:	2b00      	cmp	r3, #0
 80046ae:	d194      	bne.n	80045da <HAL_I2C_Master_Transmit+0xe6>
      }
    }

    /* Generate Stop */
    SET_BIT(hi2c->Instance->CR1, I2C_CR1_STOP);
 80046b0:	68fb      	ldr	r3, [r7, #12]
 80046b2:	681b      	ldr	r3, [r3, #0]
 80046b4:	681a      	ldr	r2, [r3, #0]
 80046b6:	68fb      	ldr	r3, [r7, #12]
 80046b8:	681b      	ldr	r3, [r3, #0]
 80046ba:	f442 7200 	orr.w	r2, r2, #512	@ 0x200
 80046be:	601a      	str	r2, [r3, #0]

    hi2c->State = HAL_I2C_STATE_READY;
 80046c0:	68fb      	ldr	r3, [r7, #12]
 80046c2:	2220      	movs	r2, #32
 80046c4:	f883 203d 	strb.w	r2, [r3, #61]	@ 0x3d
    hi2c->Mode = HAL_I2C_MODE_NONE;
 80046c8:	68fb      	ldr	r3, [r7, #12]
 80046ca:	2200      	movs	r2, #0
 80046cc:	f883 203e 	strb.w	r2, [r3, #62]	@ 0x3e

    /* Process Unlocked */
    __HAL_UNLOCK(hi2c);
 80046d0:	68fb      	ldr	r3, [r7, #12]
 80046d2:	2200      	movs	r2, #0
 80046d4:	f883 203c 	strb.w	r2, [r3, #60]	@ 0x3c

    return HAL_OK;
 80046d8:	2300      	movs	r3, #0
 80046da:	e000      	b.n	80046de <HAL_I2C_Master_Transmit+0x1ea>
  }
  else
  {
    return HAL_BUSY;
 80046dc:	2302      	movs	r3, #2
  }
}
 80046de:	4618      	mov	r0, r3
 80046e0:	3718      	adds	r7, #24
 80046e2:	46bd      	mov	sp, r7
 80046e4:	bd80      	pop	{r7, pc}
 80046e6:	bf00      	nop
 80046e8:	00100002 	.word	0x00100002
 80046ec:	ffff0000 	.word	0xffff0000

080046f0 <HAL_I2C_Master_Receive>:
  * @param  Size Amount of data to be sent
  * @param  Timeout Timeout duration
  * @retval HAL status
  */
HAL_StatusTypeDef HAL_I2C_Master_Receive(I2C_HandleTypeDef *hi2c, uint16_t DevAddress, uint8_t *pData, uint16_t Size, uint32_t Timeout)
{
 80046f0:	b580      	push	{r7, lr}
 80046f2:	b08c      	sub	sp, #48	@ 0x30
 80046f4:	af02      	add	r7, sp, #8
 80046f6:	60f8      	str	r0, [r7, #12]
 80046f8:	607a      	str	r2, [r7, #4]
 80046fa:	461a      	mov	r2, r3
 80046fc:	460b      	mov	r3, r1
 80046fe:	817b      	strh	r3, [r7, #10]
 8004700:	4613      	mov	r3, r2
 8004702:	813b      	strh	r3, [r7, #8]
  /* Init tickstart for timeout management*/
  uint32_t tickstart = HAL_GetTick();
 8004704:	f7fe f926 	bl	8002954 <HAL_GetTick>
 8004708:	6278      	str	r0, [r7, #36]	@ 0x24

  if (hi2c->State == HAL_I2C_STATE_READY)
 800470a:	68fb      	ldr	r3, [r7, #12]
 800470c:	f893 303d 	ldrb.w	r3, [r3, #61]	@ 0x3d
 8004710:	b2db      	uxtb	r3, r3
 8004712:	2b20      	cmp	r3, #32
 8004714:	f040 8217 	bne.w	8004b46 <HAL_I2C_Master_Receive+0x456>
  {
    /* Wait until BUSY flag is reset */
    if (I2C_WaitOnFlagUntilTimeout(hi2c, I2C_FLAG_BUSY, SET, I2C_TIMEOUT_BUSY_FLAG, tickstart) != HAL_OK)
 8004718:	6a7b      	ldr	r3, [r7, #36]	@ 0x24
 800471a:	9300      	str	r3, [sp, #0]
 800471c:	2319      	movs	r3, #25
 800471e:	2201      	movs	r2, #1
 8004720:	497c      	ldr	r1, [pc, #496]	@ (8004914 <HAL_I2C_Master_Receive+0x224>)
 8004722:	68f8      	ldr	r0, [r7, #12]
 8004724:	f000 fc94 	bl	8005050 <I2C_WaitOnFlagUntilTimeout>
 8004728:	4603      	mov	r3, r0
 800472a:	2b00      	cmp	r3, #0
 800472c:	d001      	beq.n	8004732 <HAL_I2C_Master_Receive+0x42>
    {
      return HAL_BUSY;
 800472e:	2302      	movs	r3, #2
 8004730:	e20a      	b.n	8004b48 <HAL_I2C_Master_Receive+0x458>
    }

    /* Process Locked */
    __HAL_LOCK(hi2c);
 8004732:	68fb      	ldr	r3, [r7, #12]
 8004734:	f893 303c 	ldrb.w	r3, [r3, #60]	@ 0x3c
 8004738:	2b01      	cmp	r3, #1
 800473a:	d101      	bne.n	8004740 <HAL_I2C_Master_Receive+0x50>
 800473c:	2302      	movs	r3, #2
 800473e:	e203      	b.n	8004b48 <HAL_I2C_Master_Receive+0x458>
 8004740:	68fb      	ldr	r3, [r7, #12]
 8004742:	2201      	movs	r2, #1
 8004744:	f883 203c 	strb.w	r2, [r3, #60]	@ 0x3c

    /* Check if the I2C is already enabled */
    if ((hi2c->Instance->CR1 & I2C_CR1_PE) != I2C_CR1_PE)
 8004748:	68fb      	ldr	r3, [r7, #12]
 800474a:	681b      	ldr	r3, [r3, #0]
 800474c:	681b      	ldr	r3, [r3, #0]
 800474e:	f003 0301 	and.w	r3, r3, #1
 8004752:	2b01      	cmp	r3, #1
 8004754:	d007      	beq.n	8004766 <HAL_I2C_Master_Receive+0x76>
    {
      /* Enable I2C peripheral */
      __HAL_I2C_ENABLE(hi2c);
 8004756:	68fb      	ldr	r3, [r7, #12]
 8004758:	681b      	ldr	r3, [r3, #0]
 800475a:	681a      	ldr	r2, [r3, #0]
 800475c:	68fb      	ldr	r3, [r7, #12]
 800475e:	681b      	ldr	r3, [r3, #0]
 8004760:	f042 0201 	orr.w	r2, r2, #1
 8004764:	601a      	str	r2, [r3, #0]
    }

    /* Disable Pos */
    CLEAR_BIT(hi2c->Instance->CR1, I2C_CR1_POS);
 8004766:	68fb      	ldr	r3, [r7, #12]
 8004768:	681b      	ldr	r3, [r3, #0]
 800476a:	681a      	ldr	r2, [r3, #0]
 800476c:	68fb      	ldr	r3, [r7, #12]
 800476e:	681b      	ldr	r3, [r3, #0]
 8004770:	f422 6200 	bic.w	r2, r2, #2048	@ 0x800
 8004774:	601a      	str	r2, [r3, #0]

    hi2c->State       = HAL_I2C_STATE_BUSY_RX;
 8004776:	68fb      	ldr	r3, [r7, #12]
 8004778:	2222      	movs	r2, #34	@ 0x22
 800477a:	f883 203d 	strb.w	r2, [r3, #61]	@ 0x3d
    hi2c->Mode        = HAL_I2C_MODE_MASTER;
 800477e:	68fb      	ldr	r3, [r7, #12]
 8004780:	2210      	movs	r2, #16
 8004782:	f883 203e 	strb.w	r2, [r3, #62]	@ 0x3e
    hi2c->ErrorCode   = HAL_I2C_ERROR_NONE;
 8004786:	68fb      	ldr	r3, [r7, #12]
 8004788:	2200      	movs	r2, #0
 800478a:	641a      	str	r2, [r3, #64]	@ 0x40

    /* Prepare transfer parameters */
    hi2c->pBuffPtr    = pData;
 800478c:	68fb      	ldr	r3, [r7, #12]
 800478e:	687a      	ldr	r2, [r7, #4]
 8004790:	625a      	str	r2, [r3, #36]	@ 0x24
    hi2c->XferCount   = Size;
 8004792:	68fb      	ldr	r3, [r7, #12]
 8004794:	893a      	ldrh	r2, [r7, #8]
 8004796:	855a      	strh	r2, [r3, #42]	@ 0x2a
    hi2c->XferSize    = hi2c->XferCount;
 8004798:	68fb      	ldr	r3, [r7, #12]
 800479a:	8d5b      	ldrh	r3, [r3, #42]	@ 0x2a
 800479c:	b29a      	uxth	r2, r3
 800479e:	68fb      	ldr	r3, [r7, #12]
 80047a0:	851a      	strh	r2, [r3, #40]	@ 0x28
    hi2c->XferOptions = I2C_NO_OPTION_FRAME;
 80047a2:	68fb      	ldr	r3, [r7, #12]
 80047a4:	4a5c      	ldr	r2, [pc, #368]	@ (8004918 <HAL_I2C_Master_Receive+0x228>)
 80047a6:	62da      	str	r2, [r3, #44]	@ 0x2c

    /* Send Slave Address */
    if (I2C_MasterRequestRead(hi2c, DevAddress, Timeout, tickstart) != HAL_OK)
 80047a8:	8979      	ldrh	r1, [r7, #10]
 80047aa:	6a7b      	ldr	r3, [r7, #36]	@ 0x24
 80047ac:	6b3a      	ldr	r2, [r7, #48]	@ 0x30
 80047ae:	68f8      	ldr	r0, [r7, #12]
 80047b0:	f000 fb80 	bl	8004eb4 <I2C_MasterRequestRead>
 80047b4:	4603      	mov	r3, r0
 80047b6:	2b00      	cmp	r3, #0
 80047b8:	d001      	beq.n	80047be <HAL_I2C_Master_Receive+0xce>
    {
      return HAL_ERROR;
 80047ba:	2301      	movs	r3, #1
 80047bc:	e1c4      	b.n	8004b48 <HAL_I2C_Master_Receive+0x458>
    }

    if (hi2c->XferSize == 0U)
 80047be:	68fb      	ldr	r3, [r7, #12]
 80047c0:	8d1b      	ldrh	r3, [r3, #40]	@ 0x28
 80047c2:	2b00      	cmp	r3, #0
 80047c4:	d113      	bne.n	80047ee <HAL_I2C_Master_Receive+0xfe>
    {
      /* Clear ADDR flag */
      __HAL_I2C_CLEAR_ADDRFLAG(hi2c);
 80047c6:	2300      	movs	r3, #0
 80047c8:	623b      	str	r3, [r7, #32]
 80047ca:	68fb      	ldr	r3, [r7, #12]
 80047cc:	681b      	ldr	r3, [r3, #0]
 80047ce:	695b      	ldr	r3, [r3, #20]
 80047d0:	623b      	str	r3, [r7, #32]
 80047d2:	68fb      	ldr	r3, [r7, #12]
 80047d4:	681b      	ldr	r3, [r3, #0]
 80047d6:	699b      	ldr	r3, [r3, #24]
 80047d8:	623b      	str	r3, [r7, #32]
 80047da:	6a3b      	ldr	r3, [r7, #32]

      /* Generate Stop */
      SET_BIT(hi2c->Instance->CR1, I2C_CR1_STOP);
 80047dc:	68fb      	ldr	r3, [r7, #12]
 80047de:	681b      	ldr	r3, [r3, #0]
 80047e0:	681a      	ldr	r2, [r3, #0]
 80047e2:	68fb      	ldr	r3, [r7, #12]
 80047e4:	681b      	ldr	r3, [r3, #0]
 80047e6:	f442 7200 	orr.w	r2, r2, #512	@ 0x200
 80047ea:	601a      	str	r2, [r3, #0]
 80047ec:	e198      	b.n	8004b20 <HAL_I2C_Master_Receive+0x430>
    }
    else if (hi2c->XferSize == 1U)
 80047ee:	68fb      	ldr	r3, [r7, #12]
 80047f0:	8d1b      	ldrh	r3, [r3, #40]	@ 0x28
 80047f2:	2b01      	cmp	r3, #1
 80047f4:	d11b      	bne.n	800482e <HAL_I2C_Master_Receive+0x13e>
    {
      /* Disable Acknowledge */
      CLEAR_BIT(hi2c->Instance->CR1, I2C_CR1_ACK);
 80047f6:	68fb      	ldr	r3, [r7, #12]
 80047f8:	681b      	ldr	r3, [r3, #0]
 80047fa:	681a      	ldr	r2, [r3, #0]
 80047fc:	68fb      	ldr	r3, [r7, #12]
 80047fe:	681b      	ldr	r3, [r3, #0]
 8004800:	f422 6280 	bic.w	r2, r2, #1024	@ 0x400
 8004804:	601a      	str	r2, [r3, #0]

      /* Clear ADDR flag */
      __HAL_I2C_CLEAR_ADDRFLAG(hi2c);
 8004806:	2300      	movs	r3, #0
 8004808:	61fb      	str	r3, [r7, #28]
 800480a:	68fb      	ldr	r3, [r7, #12]
 800480c:	681b      	ldr	r3, [r3, #0]
 800480e:	695b      	ldr	r3, [r3, #20]
 8004810:	61fb      	str	r3, [r7, #28]
 8004812:	68fb      	ldr	r3, [r7, #12]
 8004814:	681b      	ldr	r3, [r3, #0]
 8004816:	699b      	ldr	r3, [r3, #24]
 8004818:	61fb      	str	r3, [r7, #28]
 800481a:	69fb      	ldr	r3, [r7, #28]

      /* Generate Stop */
      SET_BIT(hi2c->Instance->CR1, I2C_CR1_STOP);
 800481c:	68fb      	ldr	r3, [r7, #12]
 800481e:	681b      	ldr	r3, [r3, #0]
 8004820:	681a      	ldr	r2, [r3, #0]
 8004822:	68fb      	ldr	r3, [r7, #12]
 8004824:	681b      	ldr	r3, [r3, #0]
 8004826:	f442 7200 	orr.w	r2, r2, #512	@ 0x200
 800482a:	601a      	str	r2, [r3, #0]
 800482c:	e178      	b.n	8004b20 <HAL_I2C_Master_Receive+0x430>
    }
    else if (hi2c->XferSize == 2U)
 800482e:	68fb      	ldr	r3, [r7, #12]
 8004830:	8d1b      	ldrh	r3, [r3, #40]	@ 0x28
 8004832:	2b02      	cmp	r3, #2
 8004834:	d11b      	bne.n	800486e <HAL_I2C_Master_Receive+0x17e>
    {
      /* Disable Acknowledge */
      CLEAR_BIT(hi2c->Instance->CR1, I2C_CR1_ACK);
 8004836:	68fb      	ldr	r3, [r7, #12]
 8004838:	681b      	ldr	r3, [r3, #0]
 800483a:	681a      	ldr	r2, [r3, #0]
 800483c:	68fb      	ldr	r3, [r7, #12]
 800483e:	681b      	ldr	r3, [r3, #0]
 8004840:	f422 6280 	bic.w	r2, r2, #1024	@ 0x400
 8004844:	601a      	str	r2, [r3, #0]

      /* Enable Pos */
      SET_BIT(hi2c->Instance->CR1, I2C_CR1_POS);
 8004846:	68fb      	ldr	r3, [r7, #12]
 8004848:	681b      	ldr	r3, [r3, #0]
 800484a:	681a      	ldr	r2, [r3, #0]
 800484c:	68fb      	ldr	r3, [r7, #12]
 800484e:	681b      	ldr	r3, [r3, #0]
 8004850:	f442 6200 	orr.w	r2, r2, #2048	@ 0x800
 8004854:	601a      	str	r2, [r3, #0]

      /* Clear ADDR flag */
      __HAL_I2C_CLEAR_ADDRFLAG(hi2c);
 8004856:	2300      	movs	r3, #0
 8004858:	61bb      	str	r3, [r7, #24]
 800485a:	68fb      	ldr	r3, [r7, #12]
 800485c:	681b      	ldr	r3, [r3, #0]
 800485e:	695b      	ldr	r3, [r3, #20]
 8004860:	61bb      	str	r3, [r7, #24]
 8004862:	68fb      	ldr	r3, [r7, #12]
 8004864:	681b      	ldr	r3, [r3, #0]
 8004866:	699b      	ldr	r3, [r3, #24]
 8004868:	61bb      	str	r3, [r7, #24]
 800486a:	69bb      	ldr	r3, [r7, #24]
 800486c:	e158      	b.n	8004b20 <HAL_I2C_Master_Receive+0x430>
    }
    else
    {
      /* Enable Acknowledge */
      SET_BIT(hi2c->Instance->CR1, I2C_CR1_ACK);
 800486e:	68fb      	ldr	r3, [r7, #12]
 8004870:	681b      	ldr	r3, [r3, #0]
 8004872:	681a      	ldr	r2, [r3, #0]
 8004874:	68fb      	ldr	r3, [r7, #12]
 8004876:	681b      	ldr	r3, [r3, #0]
 8004878:	f442 6280 	orr.w	r2, r2, #1024	@ 0x400
 800487c:	601a      	str	r2, [r3, #0]

      /* Clear ADDR flag */
      __HAL_I2C_CLEAR_ADDRFLAG(hi2c);
 800487e:	2300      	movs	r3, #0
 8004880:	617b      	str	r3, [r7, #20]
 8004882:	68fb      	ldr	r3, [r7, #12]
 8004884:	681b      	ldr	r3, [r3, #0]
 8004886:	695b      	ldr	r3, [r3, #20]
 8004888:	617b      	str	r3, [r7, #20]
 800488a:	68fb      	ldr	r3, [r7, #12]
 800488c:	681b      	ldr	r3, [r3, #0]
 800488e:	699b      	ldr	r3, [r3, #24]
 8004890:	617b      	str	r3, [r7, #20]
 8004892:	697b      	ldr	r3, [r7, #20]
    }

    while (hi2c->XferSize > 0U)
 8004894:	e144      	b.n	8004b20 <HAL_I2C_Master_Receive+0x430>
    {
      if (hi2c->XferSize <= 3U)
 8004896:	68fb      	ldr	r3, [r7, #12]
 8004898:	8d1b      	ldrh	r3, [r3, #40]	@ 0x28
 800489a:	2b03      	cmp	r3, #3
 800489c:	f200 80f1 	bhi.w	8004a82 <HAL_I2C_Master_Receive+0x392>
      {
        /* One byte */
        if (hi2c->XferSize == 1U)
 80048a0:	68fb      	ldr	r3, [r7, #12]
 80048a2:	8d1b      	ldrh	r3, [r3, #40]	@ 0x28
 80048a4:	2b01      	cmp	r3, #1
 80048a6:	d123      	bne.n	80048f0 <HAL_I2C_Master_Receive+0x200>
        {
          /* Wait until RXNE flag is set */
          if (I2C_WaitOnRXNEFlagUntilTimeout(hi2c, Timeout, tickstart) != HAL_OK)
 80048a8:	6a7a      	ldr	r2, [r7, #36]	@ 0x24
 80048aa:	6b39      	ldr	r1, [r7, #48]	@ 0x30
 80048ac:	68f8      	ldr	r0, [r7, #12]
 80048ae:	f000 fd79 	bl	80053a4 <I2C_WaitOnRXNEFlagUntilTimeout>
 80048b2:	4603      	mov	r3, r0
 80048b4:	2b00      	cmp	r3, #0
 80048b6:	d001      	beq.n	80048bc <HAL_I2C_Master_Receive+0x1cc>
          {
            return HAL_ERROR;
 80048b8:	2301      	movs	r3, #1
 80048ba:	e145      	b.n	8004b48 <HAL_I2C_Master_Receive+0x458>
          }

          /* Read data from DR */
          *hi2c->pBuffPtr = (uint8_t)hi2c->Instance->DR;
 80048bc:	68fb      	ldr	r3, [r7, #12]
 80048be:	681b      	ldr	r3, [r3, #0]
 80048c0:	691a      	ldr	r2, [r3, #16]
 80048c2:	68fb      	ldr	r3, [r7, #12]
 80048c4:	6a5b      	ldr	r3, [r3, #36]	@ 0x24
 80048c6:	b2d2      	uxtb	r2, r2
 80048c8:	701a      	strb	r2, [r3, #0]

          /* Increment Buffer pointer */
          hi2c->pBuffPtr++;
 80048ca:	68fb      	ldr	r3, [r7, #12]
 80048cc:	6a5b      	ldr	r3, [r3, #36]	@ 0x24
 80048ce:	1c5a      	adds	r2, r3, #1
 80048d0:	68fb      	ldr	r3, [r7, #12]
 80048d2:	625a      	str	r2, [r3, #36]	@ 0x24

          /* Update counter */
          hi2c->XferSize--;
 80048d4:	68fb      	ldr	r3, [r7, #12]
 80048d6:	8d1b      	ldrh	r3, [r3, #40]	@ 0x28
 80048d8:	3b01      	subs	r3, #1
 80048da:	b29a      	uxth	r2, r3
 80048dc:	68fb      	ldr	r3, [r7, #12]
 80048de:	851a      	strh	r2, [r3, #40]	@ 0x28
          hi2c->XferCount--;
 80048e0:	68fb      	ldr	r3, [r7, #12]
 80048e2:	8d5b      	ldrh	r3, [r3, #42]	@ 0x2a
 80048e4:	b29b      	uxth	r3, r3
 80048e6:	3b01      	subs	r3, #1
 80048e8:	b29a      	uxth	r2, r3
 80048ea:	68fb      	ldr	r3, [r7, #12]
 80048ec:	855a      	strh	r2, [r3, #42]	@ 0x2a
 80048ee:	e117      	b.n	8004b20 <HAL_I2C_Master_Receive+0x430>
        }
        /* Two bytes */
        else if (hi2c->XferSize == 2U)
 80048f0:	68fb      	ldr	r3, [r7, #12]
 80048f2:	8d1b      	ldrh	r3, [r3, #40]	@ 0x28
 80048f4:	2b02      	cmp	r3, #2
 80048f6:	d14e      	bne.n	8004996 <HAL_I2C_Master_Receive+0x2a6>
        {
          /* Wait until BTF flag is set */
          if (I2C_WaitOnFlagUntilTimeout(hi2c, I2C_FLAG_BTF, RESET, Timeout, tickstart) != HAL_OK)
 80048f8:	6a7b      	ldr	r3, [r7, #36]	@ 0x24
 80048fa:	9300      	str	r3, [sp, #0]
 80048fc:	6b3b      	ldr	r3, [r7, #48]	@ 0x30
 80048fe:	2200      	movs	r2, #0
 8004900:	4906      	ldr	r1, [pc, #24]	@ (800491c <HAL_I2C_Master_Receive+0x22c>)
 8004902:	68f8      	ldr	r0, [r7, #12]
 8004904:	f000 fba4 	bl	8005050 <I2C_WaitOnFlagUntilTimeout>
 8004908:	4603      	mov	r3, r0
 800490a:	2b00      	cmp	r3, #0
 800490c:	d008      	beq.n	8004920 <HAL_I2C_Master_Receive+0x230>
          {
            return HAL_ERROR;
 800490e:	2301      	movs	r3, #1
 8004910:	e11a      	b.n	8004b48 <HAL_I2C_Master_Receive+0x458>
 8004912:	bf00      	nop
 8004914:	00100002 	.word	0x00100002
 8004918:	ffff0000 	.word	0xffff0000
 800491c:	00010004 	.word	0x00010004
          }

          /* Generate Stop */
          SET_BIT(hi2c->Instance->CR1, I2C_CR1_STOP);
 8004920:	68fb      	ldr	r3, [r7, #12]
 8004922:	681b      	ldr	r3, [r3, #0]
 8004924:	681a      	ldr	r2, [r3, #0]
 8004926:	68fb      	ldr	r3, [r7, #12]
 8004928:	681b      	ldr	r3, [r3, #0]
 800492a:	f442 7200 	orr.w	r2, r2, #512	@ 0x200
 800492e:	601a      	str	r2, [r3, #0]

          /* Read data from DR */
          *hi2c->pBuffPtr = (uint8_t)hi2c->Instance->DR;
 8004930:	68fb      	ldr	r3, [r7, #12]
 8004932:	681b      	ldr	r3, [r3, #0]
 8004934:	691a      	ldr	r2, [r3, #16]
 8004936:	68fb      	ldr	r3, [r7, #12]
 8004938:	6a5b      	ldr	r3, [r3, #36]	@ 0x24
 800493a:	b2d2      	uxtb	r2, r2
 800493c:	701a      	strb	r2, [r3, #0]

          /* Increment Buffer pointer */
          hi2c->pBuffPtr++;
 800493e:	68fb      	ldr	r3, [r7, #12]
 8004940:	6a5b      	ldr	r3, [r3, #36]	@ 0x24
 8004942:	1c5a      	adds	r2, r3, #1
 8004944:	68fb      	ldr	r3, [r7, #12]
 8004946:	625a      	str	r2, [r3, #36]	@ 0x24

          /* Update counter */
          hi2c->XferSize--;
 8004948:	68fb      	ldr	r3, [r7, #12]
 800494a:	8d1b      	ldrh	r3, [r3, #40]	@ 0x28
 800494c:	3b01      	subs	r3, #1
 800494e:	b29a      	uxth	r2, r3
 8004950:	68fb      	ldr	r3, [r7, #12]
 8004952:	851a      	strh	r2, [r3, #40]	@ 0x28
          hi2c->XferCount--;
 8004954:	68fb      	ldr	r3, [r7, #12]
 8004956:	8d5b      	ldrh	r3, [r3, #42]	@ 0x2a
 8004958:	b29b      	uxth	r3, r3
 800495a:	3b01      	subs	r3, #1
 800495c:	b29a      	uxth	r2, r3
 800495e:	68fb      	ldr	r3, [r7, #12]
 8004960:	855a      	strh	r2, [r3, #42]	@ 0x2a

          /* Read data from DR */
          *hi2c->pBuffPtr = (uint8_t)hi2c->Instance->DR;
 8004962:	68fb      	ldr	r3, [r7, #12]
 8004964:	681b      	ldr	r3, [r3, #0]
 8004966:	691a      	ldr	r2, [r3, #16]
 8004968:	68fb      	ldr	r3, [r7, #12]
 800496a:	6a5b      	ldr	r3, [r3, #36]	@ 0x24
 800496c:	b2d2      	uxtb	r2, r2
 800496e:	701a      	strb	r2, [r3, #0]

          /* Increment Buffer pointer */
          hi2c->pBuffPtr++;
 8004970:	68fb      	ldr	r3, [r7, #12]
 8004972:	6a5b      	ldr	r3, [r3, #36]	@ 0x24
 8004974:	1c5a      	adds	r2, r3, #1
 8004976:	68fb      	ldr	r3, [r7, #12]
 8004978:	625a      	str	r2, [r3, #36]	@ 0x24

          /* Update counter */
          hi2c->XferSize--;
 800497a:	68fb      	ldr	r3, [r7, #12]
 800497c:	8d1b      	ldrh	r3, [r3, #40]	@ 0x28
 800497e:	3b01      	subs	r3, #1
 8004980:	b29a      	uxth	r2, r3
 8004982:	68fb      	ldr	r3, [r7, #12]
 8004984:	851a      	strh	r2, [r3, #40]	@ 0x28
          hi2c->XferCount--;
 8004986:	68fb      	ldr	r3, [r7, #12]
 8004988:	8d5b      	ldrh	r3, [r3, #42]	@ 0x2a
 800498a:	b29b      	uxth	r3, r3
 800498c:	3b01      	subs	r3, #1
 800498e:	b29a      	uxth	r2, r3
 8004990:	68fb      	ldr	r3, [r7, #12]
 8004992:	855a      	strh	r2, [r3, #42]	@ 0x2a
 8004994:	e0c4      	b.n	8004b20 <HAL_I2C_Master_Receive+0x430>
        }
        /* 3 Last bytes */
        else
        {
          /* Wait until BTF flag is set */
          if (I2C_WaitOnFlagUntilTimeout(hi2c, I2C_FLAG_BTF, RESET, Timeout, tickstart) != HAL_OK)
 8004996:	6a7b      	ldr	r3, [r7, #36]	@ 0x24
 8004998:	9300      	str	r3, [sp, #0]
 800499a:	6b3b      	ldr	r3, [r7, #48]	@ 0x30
 800499c:	2200      	movs	r2, #0
 800499e:	496c      	ldr	r1, [pc, #432]	@ (8004b50 <HAL_I2C_Master_Receive+0x460>)
 80049a0:	68f8      	ldr	r0, [r7, #12]
 80049a2:	f000 fb55 	bl	8005050 <I2C_WaitOnFlagUntilTimeout>
 80049a6:	4603      	mov	r3, r0
 80049a8:	2b00      	cmp	r3, #0
 80049aa:	d001      	beq.n	80049b0 <HAL_I2C_Master_Receive+0x2c0>
          {
            return HAL_ERROR;
 80049ac:	2301      	movs	r3, #1
 80049ae:	e0cb      	b.n	8004b48 <HAL_I2C_Master_Receive+0x458>
          }

          /* Disable Acknowledge */
          CLEAR_BIT(hi2c->Instance->CR1, I2C_CR1_ACK);
 80049b0:	68fb      	ldr	r3, [r7, #12]
 80049b2:	681b      	ldr	r3, [r3, #0]
 80049b4:	681a      	ldr	r2, [r3, #0]
 80049b6:	68fb      	ldr	r3, [r7, #12]
 80049b8:	681b      	ldr	r3, [r3, #0]
 80049ba:	f422 6280 	bic.w	r2, r2, #1024	@ 0x400
 80049be:	601a      	str	r2, [r3, #0]

          /* Read data from DR */
          *hi2c->pBuffPtr = (uint8_t)hi2c->Instance->DR;
 80049c0:	68fb      	ldr	r3, [r7, #12]
 80049c2:	681b      	ldr	r3, [r3, #0]
 80049c4:	691a      	ldr	r2, [r3, #16]
 80049c6:	68fb      	ldr	r3, [r7, #12]
 80049c8:	6a5b      	ldr	r3, [r3, #36]	@ 0x24
 80049ca:	b2d2      	uxtb	r2, r2
 80049cc:	701a      	strb	r2, [r3, #0]

          /* Increment Buffer pointer */
          hi2c->pBuffPtr++;
 80049ce:	68fb      	ldr	r3, [r7, #12]
 80049d0:	6a5b      	ldr	r3, [r3, #36]	@ 0x24
 80049d2:	1c5a      	adds	r2, r3, #1
 80049d4:	68fb      	ldr	r3, [r7, #12]
 80049d6:	625a      	str	r2, [r3, #36]	@ 0x24

          /* Update counter */
          hi2c->XferSize--;
 80049d8:	68fb      	ldr	r3, [r7, #12]
 80049da:	8d1b      	ldrh	r3, [r3, #40]	@ 0x28
 80049dc:	3b01      	subs	r3, #1
 80049de:	b29a      	uxth	r2, r3
 80049e0:	68fb      	ldr	r3, [r7, #12]
 80049e2:	851a      	strh	r2, [r3, #40]	@ 0x28
          hi2c->XferCount--;
 80049e4:	68fb      	ldr	r3, [r7, #12]
 80049e6:	8d5b      	ldrh	r3, [r3, #42]	@ 0x2a
 80049e8:	b29b      	uxth	r3, r3
 80049ea:	3b01      	subs	r3, #1
 80049ec:	b29a      	uxth	r2, r3
 80049ee:	68fb      	ldr	r3, [r7, #12]
 80049f0:	855a      	strh	r2, [r3, #42]	@ 0x2a

          /* Wait until BTF flag is set */
          if (I2C_WaitOnFlagUntilTimeout(hi2c, I2C_FLAG_BTF, RESET, Timeout, tickstart) != HAL_OK)
 80049f2:	6a7b      	ldr	r3, [r7, #36]	@ 0x24
 80049f4:	9300      	str	r3, [sp, #0]
 80049f6:	6b3b      	ldr	r3, [r7, #48]	@ 0x30
 80049f8:	2200      	movs	r2, #0
 80049fa:	4955      	ldr	r1, [pc, #340]	@ (8004b50 <HAL_I2C_Master_Receive+0x460>)
 80049fc:	68f8      	ldr	r0, [r7, #12]
 80049fe:	f000 fb27 	bl	8005050 <I2C_WaitOnFlagUntilTimeout>
 8004a02:	4603      	mov	r3, r0
 8004a04:	2b00      	cmp	r3, #0
 8004a06:	d001      	beq.n	8004a0c <HAL_I2C_Master_Receive+0x31c>
          {
            return HAL_ERROR;
 8004a08:	2301      	movs	r3, #1
 8004a0a:	e09d      	b.n	8004b48 <HAL_I2C_Master_Receive+0x458>
          }

          /* Generate Stop */
          SET_BIT(hi2c->Instance->CR1, I2C_CR1_STOP);
 8004a0c:	68fb      	ldr	r3, [r7, #12]
 8004a0e:	681b      	ldr	r3, [r3, #0]
 8004a10:	681a      	ldr	r2, [r3, #0]
 8004a12:	68fb      	ldr	r3, [r7, #12]
 8004a14:	681b      	ldr	r3, [r3, #0]
 8004a16:	f442 7200 	orr.w	r2, r2, #512	@ 0x200
 8004a1a:	601a      	str	r2, [r3, #0]

          /* Read data from DR */
          *hi2c->pBuffPtr = (uint8_t)hi2c->Instance->DR;
 8004a1c:	68fb      	ldr	r3, [r7, #12]
 8004a1e:	681b      	ldr	r3, [r3, #0]
 8004a20:	691a      	ldr	r2, [r3, #16]
 8004a22:	68fb      	ldr	r3, [r7, #12]
 8004a24:	6a5b      	ldr	r3, [r3, #36]	@ 0x24
 8004a26:	b2d2      	uxtb	r2, r2
 8004a28:	701a      	strb	r2, [r3, #0]

          /* Increment Buffer pointer */
          hi2c->pBuffPtr++;
 8004a2a:	68fb      	ldr	r3, [r7, #12]
 8004a2c:	6a5b      	ldr	r3, [r3, #36]	@ 0x24
 8004a2e:	1c5a      	adds	r2, r3, #1
 8004a30:	68fb      	ldr	r3, [r7, #12]
 8004a32:	625a      	str	r2, [r3, #36]	@ 0x24

          /* Update counter */
          hi2c->XferSize--;
 8004a34:	68fb      	ldr	r3, [r7, #12]
 8004a36:	8d1b      	ldrh	r3, [r3, #40]	@ 0x28
 8004a38:	3b01      	subs	r3, #1
 8004a3a:	b29a      	uxth	r2, r3
 8004a3c:	68fb      	ldr	r3, [r7, #12]
 8004a3e:	851a      	strh	r2, [r3, #40]	@ 0x28
          hi2c->XferCount--;
 8004a40:	68fb      	ldr	r3, [r7, #12]
 8004a42:	8d5b      	ldrh	r3, [r3, #42]	@ 0x2a
 8004a44:	b29b      	uxth	r3, r3
 8004a46:	3b01      	subs	r3, #1
 8004a48:	b29a      	uxth	r2, r3
 8004a4a:	68fb      	ldr	r3, [r7, #12]
 8004a4c:	855a      	strh	r2, [r3, #42]	@ 0x2a

          /* Read data from DR */
          *hi2c->pBuffPtr = (uint8_t)hi2c->Instance->DR;
 8004a4e:	68fb      	ldr	r3, [r7, #12]
 8004a50:	681b      	ldr	r3, [r3, #0]
 8004a52:	691a      	ldr	r2, [r3, #16]
 8004a54:	68fb      	ldr	r3, [r7, #12]
 8004a56:	6a5b      	ldr	r3, [r3, #36]	@ 0x24
 8004a58:	b2d2      	uxtb	r2, r2
 8004a5a:	701a      	strb	r2, [r3, #0]

          /* Increment Buffer pointer */
          hi2c->pBuffPtr++;
 8004a5c:	68fb      	ldr	r3, [r7, #12]
 8004a5e:	6a5b      	ldr	r3, [r3, #36]	@ 0x24
 8004a60:	1c5a      	adds	r2, r3, #1
 8004a62:	68fb      	ldr	r3, [r7, #12]
 8004a64:	625a      	str	r2, [r3, #36]	@ 0x24

          /* Update counter */
          hi2c->XferSize--;
 8004a66:	68fb      	ldr	r3, [r7, #12]
 8004a68:	8d1b      	ldrh	r3, [r3, #40]	@ 0x28
 8004a6a:	3b01      	subs	r3, #1
 8004a6c:	b29a      	uxth	r2, r3
 8004a6e:	68fb      	ldr	r3, [r7, #12]
 8004a70:	851a      	strh	r2, [r3, #40]	@ 0x28
          hi2c->XferCount--;
 8004a72:	68fb      	ldr	r3, [r7, #12]
 8004a74:	8d5b      	ldrh	r3, [r3, #42]	@ 0x2a
 8004a76:	b29b      	uxth	r3, r3
 8004a78:	3b01      	subs	r3, #1
 8004a7a:	b29a      	uxth	r2, r3
 8004a7c:	68fb      	ldr	r3, [r7, #12]
 8004a7e:	855a      	strh	r2, [r3, #42]	@ 0x2a
 8004a80:	e04e      	b.n	8004b20 <HAL_I2C_Master_Receive+0x430>
        }
      }
      else
      {
        /* Wait until RXNE flag is set */
        if (I2C_WaitOnRXNEFlagUntilTimeout(hi2c, Timeout, tickstart) != HAL_OK)
 8004a82:	6a7a      	ldr	r2, [r7, #36]	@ 0x24
 8004a84:	6b39      	ldr	r1, [r7, #48]	@ 0x30
 8004a86:	68f8      	ldr	r0, [r7, #12]
 8004a88:	f000 fc8c 	bl	80053a4 <I2C_WaitOnRXNEFlagUntilTimeout>
 8004a8c:	4603      	mov	r3, r0
 8004a8e:	2b00      	cmp	r3, #0
 8004a90:	d001      	beq.n	8004a96 <HAL_I2C_Master_Receive+0x3a6>
        {
          return HAL_ERROR;
 8004a92:	2301      	movs	r3, #1
 8004a94:	e058      	b.n	8004b48 <HAL_I2C_Master_Receive+0x458>
        }

        /* Read data from DR */
        *hi2c->pBuffPtr = (uint8_t)hi2c->Instance->DR;
 8004a96:	68fb      	ldr	r3, [r7, #12]
 8004a98:	681b      	ldr	r3, [r3, #0]
 8004a9a:	691a      	ldr	r2, [r3, #16]
 8004a9c:	68fb      	ldr	r3, [r7, #12]
 8004a9e:	6a5b      	ldr	r3, [r3, #36]	@ 0x24
 8004aa0:	b2d2      	uxtb	r2, r2
 8004aa2:	701a      	strb	r2, [r3, #0]

        /* Increment Buffer pointer */
        hi2c->pBuffPtr++;
 8004aa4:	68fb      	ldr	r3, [r7, #12]
 8004aa6:	6a5b      	ldr	r3, [r3, #36]	@ 0x24
 8004aa8:	1c5a      	adds	r2, r3, #1
 8004aaa:	68fb      	ldr	r3, [r7, #12]
 8004aac:	625a      	str	r2, [r3, #36]	@ 0x24

        /* Update counter */
        hi2c->XferSize--;
 8004aae:	68fb      	ldr	r3, [r7, #12]
 8004ab0:	8d1b      	ldrh	r3, [r3, #40]	@ 0x28
 8004ab2:	3b01      	subs	r3, #1
 8004ab4:	b29a      	uxth	r2, r3
 8004ab6:	68fb      	ldr	r3, [r7, #12]
 8004ab8:	851a      	strh	r2, [r3, #40]	@ 0x28
        hi2c->XferCount--;
 8004aba:	68fb      	ldr	r3, [r7, #12]
 8004abc:	8d5b      	ldrh	r3, [r3, #42]	@ 0x2a
 8004abe:	b29b      	uxth	r3, r3
 8004ac0:	3b01      	subs	r3, #1
 8004ac2:	b29a      	uxth	r2, r3
 8004ac4:	68fb      	ldr	r3, [r7, #12]
 8004ac6:	855a      	strh	r2, [r3, #42]	@ 0x2a

        if (__HAL_I2C_GET_FLAG(hi2c, I2C_FLAG_BTF) == SET)
 8004ac8:	68fb      	ldr	r3, [r7, #12]
 8004aca:	681b      	ldr	r3, [r3, #0]
 8004acc:	695b      	ldr	r3, [r3, #20]
 8004ace:	f003 0304 	and.w	r3, r3, #4
 8004ad2:	2b04      	cmp	r3, #4
 8004ad4:	d124      	bne.n	8004b20 <HAL_I2C_Master_Receive+0x430>
        {

          if (hi2c->XferSize == 3U)
 8004ad6:	68fb      	ldr	r3, [r7, #12]
 8004ad8:	8d1b      	ldrh	r3, [r3, #40]	@ 0x28
 8004ada:	2b03      	cmp	r3, #3
 8004adc:	d107      	bne.n	8004aee <HAL_I2C_Master_Receive+0x3fe>
          {
            /* Disable Acknowledge */
            CLEAR_BIT(hi2c->Instance->CR1, I2C_CR1_ACK);
 8004ade:	68fb      	ldr	r3, [r7, #12]
 8004ae0:	681b      	ldr	r3, [r3, #0]
 8004ae2:	681a      	ldr	r2, [r3, #0]
 8004ae4:	68fb      	ldr	r3, [r7, #12]
 8004ae6:	681b      	ldr	r3, [r3, #0]
 8004ae8:	f422 6280 	bic.w	r2, r2, #1024	@ 0x400
 8004aec:	601a      	str	r2, [r3, #0]
          }

          /* Read data from DR */
          *hi2c->pBuffPtr = (uint8_t)hi2c->Instance->DR;
 8004aee:	68fb      	ldr	r3, [r7, #12]
 8004af0:	681b      	ldr	r3, [r3, #0]
 8004af2:	691a      	ldr	r2, [r3, #16]
 8004af4:	68fb      	ldr	r3, [r7, #12]
 8004af6:	6a5b      	ldr	r3, [r3, #36]	@ 0x24
 8004af8:	b2d2      	uxtb	r2, r2
 8004afa:	701a      	strb	r2, [r3, #0]

          /* Increment Buffer pointer */
          hi2c->pBuffPtr++;
 8004afc:	68fb      	ldr	r3, [r7, #12]
 8004afe:	6a5b      	ldr	r3, [r3, #36]	@ 0x24
 8004b00:	1c5a      	adds	r2, r3, #1
 8004b02:	68fb      	ldr	r3, [r7, #12]
 8004b04:	625a      	str	r2, [r3, #36]	@ 0x24

          /* Update counter */
          hi2c->XferSize--;
 8004b06:	68fb      	ldr	r3, [r7, #12]
 8004b08:	8d1b      	ldrh	r3, [r3, #40]	@ 0x28
 8004b0a:	3b01      	subs	r3, #1
 8004b0c:	b29a      	uxth	r2, r3
 8004b0e:	68fb      	ldr	r3, [r7, #12]
 8004b10:	851a      	strh	r2, [r3, #40]	@ 0x28
          hi2c->XferCount--;
 8004b12:	68fb      	ldr	r3, [r7, #12]
 8004b14:	8d5b      	ldrh	r3, [r3, #42]	@ 0x2a
 8004b16:	b29b      	uxth	r3, r3
 8004b18:	3b01      	subs	r3, #1
 8004b1a:	b29a      	uxth	r2, r3
 8004b1c:	68fb      	ldr	r3, [r7, #12]
 8004b1e:	855a      	strh	r2, [r3, #42]	@ 0x2a
    while (hi2c->XferSize > 0U)
 8004b20:	68fb      	ldr	r3, [r7, #12]
 8004b22:	8d1b      	ldrh	r3, [r3, #40]	@ 0x28
 8004b24:	2b00      	cmp	r3, #0
 8004b26:	f47f aeb6 	bne.w	8004896 <HAL_I2C_Master_Receive+0x1a6>
        }
      }
    }

    hi2c->State = HAL_I2C_STATE_READY;
 8004b2a:	68fb      	ldr	r3, [r7, #12]
 8004b2c:	2220      	movs	r2, #32
 8004b2e:	f883 203d 	strb.w	r2, [r3, #61]	@ 0x3d
    hi2c->Mode = HAL_I2C_MODE_NONE;
 8004b32:	68fb      	ldr	r3, [r7, #12]
 8004b34:	2200      	movs	r2, #0
 8004b36:	f883 203e 	strb.w	r2, [r3, #62]	@ 0x3e

    /* Process Unlocked */
    __HAL_UNLOCK(hi2c);
 8004b3a:	68fb      	ldr	r3, [r7, #12]
 8004b3c:	2200      	movs	r2, #0
 8004b3e:	f883 203c 	strb.w	r2, [r3, #60]	@ 0x3c

    return HAL_OK;
 8004b42:	2300      	movs	r3, #0
 8004b44:	e000      	b.n	8004b48 <HAL_I2C_Master_Receive+0x458>
  }
  else
  {
    return HAL_BUSY;
 8004b46:	2302      	movs	r3, #2
  }
}
 8004b48:	4618      	mov	r0, r3
 8004b4a:	3728      	adds	r7, #40	@ 0x28
 8004b4c:	46bd      	mov	sp, r7
 8004b4e:	bd80      	pop	{r7, pc}
 8004b50:	00010004 	.word	0x00010004

08004b54 <HAL_I2C_IsDeviceReady>:
  * @param  Trials Number of trials
  * @param  Timeout Timeout duration
  * @retval HAL status
  */
HAL_StatusTypeDef HAL_I2C_IsDeviceReady(I2C_HandleTypeDef *hi2c, uint16_t DevAddress, uint32_t Trials, uint32_t Timeout)
{
 8004b54:	b580      	push	{r7, lr}
 8004b56:	b08a      	sub	sp, #40	@ 0x28
 8004b58:	af02      	add	r7, sp, #8
 8004b5a:	60f8      	str	r0, [r7, #12]
 8004b5c:	607a      	str	r2, [r7, #4]
 8004b5e:	603b      	str	r3, [r7, #0]
 8004b60:	460b      	mov	r3, r1
 8004b62:	817b      	strh	r3, [r7, #10]
  /* Get tick */
  uint32_t tickstart = HAL_GetTick();
 8004b64:	f7fd fef6 	bl	8002954 <HAL_GetTick>
 8004b68:	61f8      	str	r0, [r7, #28]
  uint32_t I2C_Trials = 0U;
 8004b6a:	2300      	movs	r3, #0
 8004b6c:	61bb      	str	r3, [r7, #24]
  FlagStatus tmp1;
  FlagStatus tmp2;

  if (hi2c->State == HAL_I2C_STATE_READY)
 8004b6e:	68fb      	ldr	r3, [r7, #12]
 8004b70:	f893 303d 	ldrb.w	r3, [r3, #61]	@ 0x3d
 8004b74:	b2db      	uxtb	r3, r3
 8004b76:	2b20      	cmp	r3, #32
 8004b78:	f040 8111 	bne.w	8004d9e <HAL_I2C_IsDeviceReady+0x24a>
  {
    /* Wait until BUSY flag is reset */
    if (I2C_WaitOnFlagUntilTimeout(hi2c, I2C_FLAG_BUSY, SET, I2C_TIMEOUT_BUSY_FLAG, tickstart) != HAL_OK)
 8004b7c:	69fb      	ldr	r3, [r7, #28]
 8004b7e:	9300      	str	r3, [sp, #0]
 8004b80:	2319      	movs	r3, #25
 8004b82:	2201      	movs	r2, #1
 8004b84:	4988      	ldr	r1, [pc, #544]	@ (8004da8 <HAL_I2C_IsDeviceReady+0x254>)
 8004b86:	68f8      	ldr	r0, [r7, #12]
 8004b88:	f000 fa62 	bl	8005050 <I2C_WaitOnFlagUntilTimeout>
 8004b8c:	4603      	mov	r3, r0
 8004b8e:	2b00      	cmp	r3, #0
 8004b90:	d001      	beq.n	8004b96 <HAL_I2C_IsDeviceReady+0x42>
    {
      return HAL_BUSY;
 8004b92:	2302      	movs	r3, #2
 8004b94:	e104      	b.n	8004da0 <HAL_I2C_IsDeviceReady+0x24c>
    }

    /* Process Locked */
    __HAL_LOCK(hi2c);
 8004b96:	68fb      	ldr	r3, [r7, #12]
 8004b98:	f893 303c 	ldrb.w	r3, [r3, #60]	@ 0x3c
 8004b9c:	2b01      	cmp	r3, #1
 8004b9e:	d101      	bne.n	8004ba4 <HAL_I2C_IsDeviceReady+0x50>
 8004ba0:	2302      	movs	r3, #2
 8004ba2:	e0fd      	b.n	8004da0 <HAL_I2C_IsDeviceReady+0x24c>
 8004ba4:	68fb      	ldr	r3, [r7, #12]
 8004ba6:	2201      	movs	r2, #1
 8004ba8:	f883 203c 	strb.w	r2, [r3, #60]	@ 0x3c

    /* Check if the I2C is already enabled */
    if ((hi2c->Instance->CR1 & I2C_CR1_PE) != I2C_CR1_PE)
 8004bac:	68fb      	ldr	r3, [r7, #12]
 8004bae:	681b      	ldr	r3, [r3, #0]
 8004bb0:	681b      	ldr	r3, [r3, #0]
 8004bb2:	f003 0301 	and.w	r3, r3, #1
 8004bb6:	2b01      	cmp	r3, #1
 8004bb8:	d007      	beq.n	8004bca <HAL_I2C_IsDeviceReady+0x76>
    {
      /* Enable I2C peripheral */
      __HAL_I2C_ENABLE(hi2c);
 8004bba:	68fb      	ldr	r3, [r7, #12]
 8004bbc:	681b      	ldr	r3, [r3, #0]
 8004bbe:	681a      	ldr	r2, [r3, #0]
 8004bc0:	68fb      	ldr	r3, [r7, #12]
 8004bc2:	681b      	ldr	r3, [r3, #0]
 8004bc4:	f042 0201 	orr.w	r2, r2, #1
 8004bc8:	601a      	str	r2, [r3, #0]
    }

    /* Disable Pos */
    CLEAR_BIT(hi2c->Instance->CR1, I2C_CR1_POS);
 8004bca:	68fb      	ldr	r3, [r7, #12]
 8004bcc:	681b      	ldr	r3, [r3, #0]
 8004bce:	681a      	ldr	r2, [r3, #0]
 8004bd0:	68fb      	ldr	r3, [r7, #12]
 8004bd2:	681b      	ldr	r3, [r3, #0]
 8004bd4:	f422 6200 	bic.w	r2, r2, #2048	@ 0x800
 8004bd8:	601a      	str	r2, [r3, #0]

    hi2c->State = HAL_I2C_STATE_BUSY;
 8004bda:	68fb      	ldr	r3, [r7, #12]
 8004bdc:	2224      	movs	r2, #36	@ 0x24
 8004bde:	f883 203d 	strb.w	r2, [r3, #61]	@ 0x3d
    hi2c->ErrorCode = HAL_I2C_ERROR_NONE;
 8004be2:	68fb      	ldr	r3, [r7, #12]
 8004be4:	2200      	movs	r2, #0
 8004be6:	641a      	str	r2, [r3, #64]	@ 0x40
    hi2c->XferOptions = I2C_NO_OPTION_FRAME;
 8004be8:	68fb      	ldr	r3, [r7, #12]
 8004bea:	4a70      	ldr	r2, [pc, #448]	@ (8004dac <HAL_I2C_IsDeviceReady+0x258>)
 8004bec:	62da      	str	r2, [r3, #44]	@ 0x2c

    do
    {
      /* Generate Start */
      SET_BIT(hi2c->Instance->CR1, I2C_CR1_START);
 8004bee:	68fb      	ldr	r3, [r7, #12]
 8004bf0:	681b      	ldr	r3, [r3, #0]
 8004bf2:	681a      	ldr	r2, [r3, #0]
 8004bf4:	68fb      	ldr	r3, [r7, #12]
 8004bf6:	681b      	ldr	r3, [r3, #0]
 8004bf8:	f442 7280 	orr.w	r2, r2, #256	@ 0x100
 8004bfc:	601a      	str	r2, [r3, #0]

      /* Wait until SB flag is set */
      if (I2C_WaitOnFlagUntilTimeout(hi2c, I2C_FLAG_SB, RESET, Timeout, tickstart) != HAL_OK)
 8004bfe:	69fb      	ldr	r3, [r7, #28]
 8004c00:	9300      	str	r3, [sp, #0]
 8004c02:	683b      	ldr	r3, [r7, #0]
 8004c04:	2200      	movs	r2, #0
 8004c06:	f04f 1101 	mov.w	r1, #65537	@ 0x10001
 8004c0a:	68f8      	ldr	r0, [r7, #12]
 8004c0c:	f000 fa20 	bl	8005050 <I2C_WaitOnFlagUntilTimeout>
 8004c10:	4603      	mov	r3, r0
 8004c12:	2b00      	cmp	r3, #0
 8004c14:	d00d      	beq.n	8004c32 <HAL_I2C_IsDeviceReady+0xde>
      {
        if (READ_BIT(hi2c->Instance->CR1, I2C_CR1_START) == I2C_CR1_START)
 8004c16:	68fb      	ldr	r3, [r7, #12]
 8004c18:	681b      	ldr	r3, [r3, #0]
 8004c1a:	681b      	ldr	r3, [r3, #0]
 8004c1c:	f403 7380 	and.w	r3, r3, #256	@ 0x100
 8004c20:	f5b3 7f80 	cmp.w	r3, #256	@ 0x100
 8004c24:	d103      	bne.n	8004c2e <HAL_I2C_IsDeviceReady+0xda>
        {
          hi2c->ErrorCode = HAL_I2C_WRONG_START;
 8004c26:	68fb      	ldr	r3, [r7, #12]
 8004c28:	f44f 7200 	mov.w	r2, #512	@ 0x200
 8004c2c:	641a      	str	r2, [r3, #64]	@ 0x40
        }
        return HAL_TIMEOUT;
 8004c2e:	2303      	movs	r3, #3
 8004c30:	e0b6      	b.n	8004da0 <HAL_I2C_IsDeviceReady+0x24c>
      }

      /* Send slave address */
      hi2c->Instance->DR = I2C_7BIT_ADD_WRITE(DevAddress);
 8004c32:	897b      	ldrh	r3, [r7, #10]
 8004c34:	b2db      	uxtb	r3, r3
 8004c36:	461a      	mov	r2, r3
 8004c38:	68fb      	ldr	r3, [r7, #12]
 8004c3a:	681b      	ldr	r3, [r3, #0]
 8004c3c:	f002 02fe 	and.w	r2, r2, #254	@ 0xfe
 8004c40:	611a      	str	r2, [r3, #16]

      /* Wait until ADDR or AF flag are set */
      /* Get tick */
      tickstart = HAL_GetTick();
 8004c42:	f7fd fe87 	bl	8002954 <HAL_GetTick>
 8004c46:	61f8      	str	r0, [r7, #28]

      tmp1 = __HAL_I2C_GET_FLAG(hi2c, I2C_FLAG_ADDR);
 8004c48:	68fb      	ldr	r3, [r7, #12]
 8004c4a:	681b      	ldr	r3, [r3, #0]
 8004c4c:	695b      	ldr	r3, [r3, #20]
 8004c4e:	f003 0302 	and.w	r3, r3, #2
 8004c52:	2b02      	cmp	r3, #2
 8004c54:	bf0c      	ite	eq
 8004c56:	2301      	moveq	r3, #1
 8004c58:	2300      	movne	r3, #0
 8004c5a:	b2db      	uxtb	r3, r3
 8004c5c:	75fb      	strb	r3, [r7, #23]
      tmp2 = __HAL_I2C_GET_FLAG(hi2c, I2C_FLAG_AF);
 8004c5e:	68fb      	ldr	r3, [r7, #12]
 8004c60:	681b      	ldr	r3, [r3, #0]
 8004c62:	695b      	ldr	r3, [r3, #20]
 8004c64:	f403 6380 	and.w	r3, r3, #1024	@ 0x400
 8004c68:	f5b3 6f80 	cmp.w	r3, #1024	@ 0x400
 8004c6c:	bf0c      	ite	eq
 8004c6e:	2301      	moveq	r3, #1
 8004c70:	2300      	movne	r3, #0
 8004c72:	b2db      	uxtb	r3, r3
 8004c74:	75bb      	strb	r3, [r7, #22]
      while ((hi2c->State != HAL_I2C_STATE_TIMEOUT) && (tmp1 == RESET) && (tmp2 == RESET))
 8004c76:	e025      	b.n	8004cc4 <HAL_I2C_IsDeviceReady+0x170>
      {
        if (((HAL_GetTick() - tickstart) > Timeout) || (Timeout == 0U))
 8004c78:	f7fd fe6c 	bl	8002954 <HAL_GetTick>
 8004c7c:	4602      	mov	r2, r0
 8004c7e:	69fb      	ldr	r3, [r7, #28]
 8004c80:	1ad3      	subs	r3, r2, r3
 8004c82:	683a      	ldr	r2, [r7, #0]
 8004c84:	429a      	cmp	r2, r3
 8004c86:	d302      	bcc.n	8004c8e <HAL_I2C_IsDeviceReady+0x13a>
 8004c88:	683b      	ldr	r3, [r7, #0]
 8004c8a:	2b00      	cmp	r3, #0
 8004c8c:	d103      	bne.n	8004c96 <HAL_I2C_IsDeviceReady+0x142>
        {
          hi2c->State = HAL_I2C_STATE_TIMEOUT;
 8004c8e:	68fb      	ldr	r3, [r7, #12]
 8004c90:	22a0      	movs	r2, #160	@ 0xa0
 8004c92:	f883 203d 	strb.w	r2, [r3, #61]	@ 0x3d
        }
        tmp1 = __HAL_I2C_GET_FLAG(hi2c, I2C_FLAG_ADDR);
 8004c96:	68fb      	ldr	r3, [r7, #12]
 8004c98:	681b      	ldr	r3, [r3, #0]
 8004c9a:	695b      	ldr	r3, [r3, #20]
 8004c9c:	f003 0302 	and.w	r3, r3, #2
 8004ca0:	2b02      	cmp	r3, #2
 8004ca2:	bf0c      	ite	eq
 8004ca4:	2301      	moveq	r3, #1
 8004ca6:	2300      	movne	r3, #0
 8004ca8:	b2db      	uxtb	r3, r3
 8004caa:	75fb      	strb	r3, [r7, #23]
        tmp2 = __HAL_I2C_GET_FLAG(hi2c, I2C_FLAG_AF);
 8004cac:	68fb      	ldr	r3, [r7, #12]
 8004cae:	681b      	ldr	r3, [r3, #0]
 8004cb0:	695b      	ldr	r3, [r3, #20]
 8004cb2:	f403 6380 	and.w	r3, r3, #1024	@ 0x400
 8004cb6:	f5b3 6f80 	cmp.w	r3, #1024	@ 0x400
 8004cba:	bf0c      	ite	eq
 8004cbc:	2301      	moveq	r3, #1
 8004cbe:	2300      	movne	r3, #0
 8004cc0:	b2db      	uxtb	r3, r3
 8004cc2:	75bb      	strb	r3, [r7, #22]
      while ((hi2c->State != HAL_I2C_STATE_TIMEOUT) && (tmp1 == RESET) && (tmp2 == RESET))
 8004cc4:	68fb      	ldr	r3, [r7, #12]
 8004cc6:	f893 303d 	ldrb.w	r3, [r3, #61]	@ 0x3d
 8004cca:	b2db      	uxtb	r3, r3
 8004ccc:	2ba0      	cmp	r3, #160	@ 0xa0
 8004cce:	d005      	beq.n	8004cdc <HAL_I2C_IsDeviceReady+0x188>
 8004cd0:	7dfb      	ldrb	r3, [r7, #23]
 8004cd2:	2b00      	cmp	r3, #0
 8004cd4:	d102      	bne.n	8004cdc <HAL_I2C_IsDeviceReady+0x188>
 8004cd6:	7dbb      	ldrb	r3, [r7, #22]
 8004cd8:	2b00      	cmp	r3, #0
 8004cda:	d0cd      	beq.n	8004c78 <HAL_I2C_IsDeviceReady+0x124>
      }

      hi2c->State = HAL_I2C_STATE_READY;
 8004cdc:	68fb      	ldr	r3, [r7, #12]
 8004cde:	2220      	movs	r2, #32
 8004ce0:	f883 203d 	strb.w	r2, [r3, #61]	@ 0x3d

      /* Check if the ADDR flag has been set */
      if (__HAL_I2C_GET_FLAG(hi2c, I2C_FLAG_ADDR) == SET)
 8004ce4:	68fb      	ldr	r3, [r7, #12]
 8004ce6:	681b      	ldr	r3, [r3, #0]
 8004ce8:	695b      	ldr	r3, [r3, #20]
 8004cea:	f003 0302 	and.w	r3, r3, #2
 8004cee:	2b02      	cmp	r3, #2
 8004cf0:	d129      	bne.n	8004d46 <HAL_I2C_IsDeviceReady+0x1f2>
      {
        /* Generate Stop */
        SET_BIT(hi2c->Instance->CR1, I2C_CR1_STOP);
 8004cf2:	68fb      	ldr	r3, [r7, #12]
 8004cf4:	681b      	ldr	r3, [r3, #0]
 8004cf6:	681a      	ldr	r2, [r3, #0]
 8004cf8:	68fb      	ldr	r3, [r7, #12]
 8004cfa:	681b      	ldr	r3, [r3, #0]
 8004cfc:	f442 7200 	orr.w	r2, r2, #512	@ 0x200
 8004d00:	601a      	str	r2, [r3, #0]

        /* Clear ADDR Flag */
        __HAL_I2C_CLEAR_ADDRFLAG(hi2c);
 8004d02:	2300      	movs	r3, #0
 8004d04:	613b      	str	r3, [r7, #16]
 8004d06:	68fb      	ldr	r3, [r7, #12]
 8004d08:	681b      	ldr	r3, [r3, #0]
 8004d0a:	695b      	ldr	r3, [r3, #20]
 8004d0c:	613b      	str	r3, [r7, #16]
 8004d0e:	68fb      	ldr	r3, [r7, #12]
 8004d10:	681b      	ldr	r3, [r3, #0]
 8004d12:	699b      	ldr	r3, [r3, #24]
 8004d14:	613b      	str	r3, [r7, #16]
 8004d16:	693b      	ldr	r3, [r7, #16]

        /* Wait until BUSY flag is reset */
        if (I2C_WaitOnFlagUntilTimeout(hi2c, I2C_FLAG_BUSY, SET, I2C_TIMEOUT_BUSY_FLAG, tickstart) != HAL_OK)
 8004d18:	69fb      	ldr	r3, [r7, #28]
 8004d1a:	9300      	str	r3, [sp, #0]
 8004d1c:	2319      	movs	r3, #25
 8004d1e:	2201      	movs	r2, #1
 8004d20:	4921      	ldr	r1, [pc, #132]	@ (8004da8 <HAL_I2C_IsDeviceReady+0x254>)
 8004d22:	68f8      	ldr	r0, [r7, #12]
 8004d24:	f000 f994 	bl	8005050 <I2C_WaitOnFlagUntilTimeout>
 8004d28:	4603      	mov	r3, r0
 8004d2a:	2b00      	cmp	r3, #0
 8004d2c:	d001      	beq.n	8004d32 <HAL_I2C_IsDeviceReady+0x1de>
        {
          return HAL_ERROR;
 8004d2e:	2301      	movs	r3, #1
 8004d30:	e036      	b.n	8004da0 <HAL_I2C_IsDeviceReady+0x24c>
        }

        hi2c->State = HAL_I2C_STATE_READY;
 8004d32:	68fb      	ldr	r3, [r7, #12]
 8004d34:	2220      	movs	r2, #32
 8004d36:	f883 203d 	strb.w	r2, [r3, #61]	@ 0x3d

        /* Process Unlocked */
        __HAL_UNLOCK(hi2c);
 8004d3a:	68fb      	ldr	r3, [r7, #12]
 8004d3c:	2200      	movs	r2, #0
 8004d3e:	f883 203c 	strb.w	r2, [r3, #60]	@ 0x3c

        return HAL_OK;
 8004d42:	2300      	movs	r3, #0
 8004d44:	e02c      	b.n	8004da0 <HAL_I2C_IsDeviceReady+0x24c>
      }
      else
      {
        /* Generate Stop */
        SET_BIT(hi2c->Instance->CR1, I2C_CR1_STOP);
 8004d46:	68fb      	ldr	r3, [r7, #12]
 8004d48:	681b      	ldr	r3, [r3, #0]
 8004d4a:	681a      	ldr	r2, [r3, #0]
 8004d4c:	68fb      	ldr	r3, [r7, #12]
 8004d4e:	681b      	ldr	r3, [r3, #0]
 8004d50:	f442 7200 	orr.w	r2, r2, #512	@ 0x200
 8004d54:	601a      	str	r2, [r3, #0]

        /* Clear AF Flag */
        __HAL_I2C_CLEAR_FLAG(hi2c, I2C_FLAG_AF);
 8004d56:	68fb      	ldr	r3, [r7, #12]
 8004d58:	681b      	ldr	r3, [r3, #0]
 8004d5a:	f46f 6280 	mvn.w	r2, #1024	@ 0x400
 8004d5e:	615a      	str	r2, [r3, #20]

        /* Wait until BUSY flag is reset */
        if (I2C_WaitOnFlagUntilTimeout(hi2c, I2C_FLAG_BUSY, SET, I2C_TIMEOUT_BUSY_FLAG, tickstart) != HAL_OK)
 8004d60:	69fb      	ldr	r3, [r7, #28]
 8004d62:	9300      	str	r3, [sp, #0]
 8004d64:	2319      	movs	r3, #25
 8004d66:	2201      	movs	r2, #1
 8004d68:	490f      	ldr	r1, [pc, #60]	@ (8004da8 <HAL_I2C_IsDeviceReady+0x254>)
 8004d6a:	68f8      	ldr	r0, [r7, #12]
 8004d6c:	f000 f970 	bl	8005050 <I2C_WaitOnFlagUntilTimeout>
 8004d70:	4603      	mov	r3, r0
 8004d72:	2b00      	cmp	r3, #0
 8004d74:	d001      	beq.n	8004d7a <HAL_I2C_IsDeviceReady+0x226>
        {
          return HAL_ERROR;
 8004d76:	2301      	movs	r3, #1
 8004d78:	e012      	b.n	8004da0 <HAL_I2C_IsDeviceReady+0x24c>
        }
      }

      /* Increment Trials */
      I2C_Trials++;
 8004d7a:	69bb      	ldr	r3, [r7, #24]
 8004d7c:	3301      	adds	r3, #1
 8004d7e:	61bb      	str	r3, [r7, #24]
    }
    while (I2C_Trials < Trials);
 8004d80:	69ba      	ldr	r2, [r7, #24]
 8004d82:	687b      	ldr	r3, [r7, #4]
 8004d84:	429a      	cmp	r2, r3
 8004d86:	f4ff af32 	bcc.w	8004bee <HAL_I2C_IsDeviceReady+0x9a>

    hi2c->State = HAL_I2C_STATE_READY;
 8004d8a:	68fb      	ldr	r3, [r7, #12]
 8004d8c:	2220      	movs	r2, #32
 8004d8e:	f883 203d 	strb.w	r2, [r3, #61]	@ 0x3d

    /* Process Unlocked */
    __HAL_UNLOCK(hi2c);
 8004d92:	68fb      	ldr	r3, [r7, #12]
 8004d94:	2200      	movs	r2, #0
 8004d96:	f883 203c 	strb.w	r2, [r3, #60]	@ 0x3c

    return HAL_ERROR;
 8004d9a:	2301      	movs	r3, #1
 8004d9c:	e000      	b.n	8004da0 <HAL_I2C_IsDeviceReady+0x24c>
  }
  else
  {
    return HAL_BUSY;
 8004d9e:	2302      	movs	r3, #2
  }
}
 8004da0:	4618      	mov	r0, r3
 8004da2:	3720      	adds	r7, #32
 8004da4:	46bd      	mov	sp, r7
 8004da6:	bd80      	pop	{r7, pc}
 8004da8:	00100002 	.word	0x00100002
 8004dac:	ffff0000 	.word	0xffff0000

08004db0 <I2C_MasterRequestWrite>:
  * @param  Timeout Timeout duration
  * @param  Tickstart Tick start value
  * @retval HAL status
  */
static HAL_StatusTypeDef I2C_MasterRequestWrite(I2C_HandleTypeDef *hi2c, uint16_t DevAddress, uint32_t Timeout, uint32_t Tickstart)
{
 8004db0:	b580      	push	{r7, lr}
 8004db2:	b088      	sub	sp, #32
 8004db4:	af02      	add	r7, sp, #8
 8004db6:	60f8      	str	r0, [r7, #12]
 8004db8:	607a      	str	r2, [r7, #4]
 8004dba:	603b      	str	r3, [r7, #0]
 8004dbc:	460b      	mov	r3, r1
 8004dbe:	817b      	strh	r3, [r7, #10]
  /* Declaration of temporary variable to prevent undefined behavior of volatile usage */
  uint32_t CurrentXferOptions = hi2c->XferOptions;
 8004dc0:	68fb      	ldr	r3, [r7, #12]
 8004dc2:	6adb      	ldr	r3, [r3, #44]	@ 0x2c
 8004dc4:	617b      	str	r3, [r7, #20]

  /* Generate Start condition if first transfer */
  if ((CurrentXferOptions == I2C_FIRST_AND_LAST_FRAME) || (CurrentXferOptions == I2C_FIRST_FRAME) || (CurrentXferOptions == I2C_NO_OPTION_FRAME))
 8004dc6:	697b      	ldr	r3, [r7, #20]
 8004dc8:	2b08      	cmp	r3, #8
 8004dca:	d006      	beq.n	8004dda <I2C_MasterRequestWrite+0x2a>
 8004dcc:	697b      	ldr	r3, [r7, #20]
 8004dce:	2b01      	cmp	r3, #1
 8004dd0:	d003      	beq.n	8004dda <I2C_MasterRequestWrite+0x2a>
 8004dd2:	697b      	ldr	r3, [r7, #20]
 8004dd4:	f513 3f80 	cmn.w	r3, #65536	@ 0x10000
 8004dd8:	d108      	bne.n	8004dec <I2C_MasterRequestWrite+0x3c>
  {
    /* Generate Start */
    SET_BIT(hi2c->Instance->CR1, I2C_CR1_START);
 8004dda:	68fb      	ldr	r3, [r7, #12]
 8004ddc:	681b      	ldr	r3, [r3, #0]
 8004dde:	681a      	ldr	r2, [r3, #0]
 8004de0:	68fb      	ldr	r3, [r7, #12]
 8004de2:	681b      	ldr	r3, [r3, #0]
 8004de4:	f442 7280 	orr.w	r2, r2, #256	@ 0x100
 8004de8:	601a      	str	r2, [r3, #0]
 8004dea:	e00b      	b.n	8004e04 <I2C_MasterRequestWrite+0x54>
  }
  else if (hi2c->PreviousState == I2C_STATE_MASTER_BUSY_RX)
 8004dec:	68fb      	ldr	r3, [r7, #12]
 8004dee:	6b1b      	ldr	r3, [r3, #48]	@ 0x30
 8004df0:	2b12      	cmp	r3, #18
 8004df2:	d107      	bne.n	8004e04 <I2C_MasterRequestWrite+0x54>
  {
    /* Generate ReStart */
    SET_BIT(hi2c->Instance->CR1, I2C_CR1_START);
 8004df4:	68fb      	ldr	r3, [r7, #12]
 8004df6:	681b      	ldr	r3, [r3, #0]
 8004df8:	681a      	ldr	r2, [r3, #0]
 8004dfa:	68fb      	ldr	r3, [r7, #12]
 8004dfc:	681b      	ldr	r3, [r3, #0]
 8004dfe:	f442 7280 	orr.w	r2, r2, #256	@ 0x100
 8004e02:	601a      	str	r2, [r3, #0]
  {
    /* Do nothing */
  }

  /* Wait until SB flag is set */
  if (I2C_WaitOnFlagUntilTimeout(hi2c, I2C_FLAG_SB, RESET, Timeout, Tickstart) != HAL_OK)
 8004e04:	683b      	ldr	r3, [r7, #0]
 8004e06:	9300      	str	r3, [sp, #0]
 8004e08:	687b      	ldr	r3, [r7, #4]
 8004e0a:	2200      	movs	r2, #0
 8004e0c:	f04f 1101 	mov.w	r1, #65537	@ 0x10001
 8004e10:	68f8      	ldr	r0, [r7, #12]
 8004e12:	f000 f91d 	bl	8005050 <I2C_WaitOnFlagUntilTimeout>
 8004e16:	4603      	mov	r3, r0
 8004e18:	2b00      	cmp	r3, #0
 8004e1a:	d00d      	beq.n	8004e38 <I2C_MasterRequestWrite+0x88>
  {
    if (READ_BIT(hi2c->Instance->CR1, I2C_CR1_START) == I2C_CR1_START)
 8004e1c:	68fb      	ldr	r3, [r7, #12]
 8004e1e:	681b      	ldr	r3, [r3, #0]
 8004e20:	681b      	ldr	r3, [r3, #0]
 8004e22:	f403 7380 	and.w	r3, r3, #256	@ 0x100
 8004e26:	f5b3 7f80 	cmp.w	r3, #256	@ 0x100
 8004e2a:	d103      	bne.n	8004e34 <I2C_MasterRequestWrite+0x84>
    {
      hi2c->ErrorCode = HAL_I2C_WRONG_START;
 8004e2c:	68fb      	ldr	r3, [r7, #12]
 8004e2e:	f44f 7200 	mov.w	r2, #512	@ 0x200
 8004e32:	641a      	str	r2, [r3, #64]	@ 0x40
    }
    return HAL_TIMEOUT;
 8004e34:	2303      	movs	r3, #3
 8004e36:	e035      	b.n	8004ea4 <I2C_MasterRequestWrite+0xf4>
  }

  if (hi2c->Init.AddressingMode == I2C_ADDRESSINGMODE_7BIT)
 8004e38:	68fb      	ldr	r3, [r7, #12]
 8004e3a:	691b      	ldr	r3, [r3, #16]
 8004e3c:	f5b3 4f80 	cmp.w	r3, #16384	@ 0x4000
 8004e40:	d108      	bne.n	8004e54 <I2C_MasterRequestWrite+0xa4>
  {
    /* Send slave address */
    hi2c->Instance->DR = I2C_7BIT_ADD_WRITE(DevAddress);
 8004e42:	897b      	ldrh	r3, [r7, #10]
 8004e44:	b2db      	uxtb	r3, r3
 8004e46:	461a      	mov	r2, r3
 8004e48:	68fb      	ldr	r3, [r7, #12]
 8004e4a:	681b      	ldr	r3, [r3, #0]
 8004e4c:	f002 02fe 	and.w	r2, r2, #254	@ 0xfe
 8004e50:	611a      	str	r2, [r3, #16]
 8004e52:	e01b      	b.n	8004e8c <I2C_MasterRequestWrite+0xdc>
  }
  else
  {
    /* Send header of slave address */
    hi2c->Instance->DR = I2C_10BIT_HEADER_WRITE(DevAddress);
 8004e54:	897b      	ldrh	r3, [r7, #10]
 8004e56:	11db      	asrs	r3, r3, #7
 8004e58:	b2db      	uxtb	r3, r3
 8004e5a:	f003 0306 	and.w	r3, r3, #6
 8004e5e:	b2db      	uxtb	r3, r3
 8004e60:	f063 030f 	orn	r3, r3, #15
 8004e64:	b2da      	uxtb	r2, r3
 8004e66:	68fb      	ldr	r3, [r7, #12]
 8004e68:	681b      	ldr	r3, [r3, #0]
 8004e6a:	611a      	str	r2, [r3, #16]

    /* Wait until ADD10 flag is set */
    if (I2C_WaitOnMasterAddressFlagUntilTimeout(hi2c, I2C_FLAG_ADD10, Timeout, Tickstart) != HAL_OK)
 8004e6c:	683b      	ldr	r3, [r7, #0]
 8004e6e:	687a      	ldr	r2, [r7, #4]
 8004e70:	490e      	ldr	r1, [pc, #56]	@ (8004eac <I2C_MasterRequestWrite+0xfc>)
 8004e72:	68f8      	ldr	r0, [r7, #12]
 8004e74:	f000 f966 	bl	8005144 <I2C_WaitOnMasterAddressFlagUntilTimeout>
 8004e78:	4603      	mov	r3, r0
 8004e7a:	2b00      	cmp	r3, #0
 8004e7c:	d001      	beq.n	8004e82 <I2C_MasterRequestWrite+0xd2>
    {
      return HAL_ERROR;
 8004e7e:	2301      	movs	r3, #1
 8004e80:	e010      	b.n	8004ea4 <I2C_MasterRequestWrite+0xf4>
    }

    /* Send slave address */
    hi2c->Instance->DR = I2C_10BIT_ADDRESS(DevAddress);
 8004e82:	897b      	ldrh	r3, [r7, #10]
 8004e84:	b2da      	uxtb	r2, r3
 8004e86:	68fb      	ldr	r3, [r7, #12]
 8004e88:	681b      	ldr	r3, [r3, #0]
 8004e8a:	611a      	str	r2, [r3, #16]
  }

  /* Wait until ADDR flag is set */
  if (I2C_WaitOnMasterAddressFlagUntilTimeout(hi2c, I2C_FLAG_ADDR, Timeout, Tickstart) != HAL_OK)
 8004e8c:	683b      	ldr	r3, [r7, #0]
 8004e8e:	687a      	ldr	r2, [r7, #4]
 8004e90:	4907      	ldr	r1, [pc, #28]	@ (8004eb0 <I2C_MasterRequestWrite+0x100>)
 8004e92:	68f8      	ldr	r0, [r7, #12]
 8004e94:	f000 f956 	bl	8005144 <I2C_WaitOnMasterAddressFlagUntilTimeout>
 8004e98:	4603      	mov	r3, r0
 8004e9a:	2b00      	cmp	r3, #0
 8004e9c:	d001      	beq.n	8004ea2 <I2C_MasterRequestWrite+0xf2>
  {
    return HAL_ERROR;
 8004e9e:	2301      	movs	r3, #1
 8004ea0:	e000      	b.n	8004ea4 <I2C_MasterRequestWrite+0xf4>
  }

  return HAL_OK;
 8004ea2:	2300      	movs	r3, #0
}
 8004ea4:	4618      	mov	r0, r3
 8004ea6:	3718      	adds	r7, #24
 8004ea8:	46bd      	mov	sp, r7
 8004eaa:	bd80      	pop	{r7, pc}
 8004eac:	00010008 	.word	0x00010008
 8004eb0:	00010002 	.word	0x00010002

08004eb4 <I2C_MasterRequestRead>:
  * @param  Timeout Timeout duration
  * @param  Tickstart Tick start value
  * @retval HAL status
  */
static HAL_StatusTypeDef I2C_MasterRequestRead(I2C_HandleTypeDef *hi2c, uint16_t DevAddress, uint32_t Timeout, uint32_t Tickstart)
{
 8004eb4:	b580      	push	{r7, lr}
 8004eb6:	b088      	sub	sp, #32
 8004eb8:	af02      	add	r7, sp, #8
 8004eba:	60f8      	str	r0, [r7, #12]
 8004ebc:	607a      	str	r2, [r7, #4]
 8004ebe:	603b      	str	r3, [r7, #0]
 8004ec0:	460b      	mov	r3, r1
 8004ec2:	817b      	strh	r3, [r7, #10]
  /* Declaration of temporary variable to prevent undefined behavior of volatile usage */
  uint32_t CurrentXferOptions = hi2c->XferOptions;
 8004ec4:	68fb      	ldr	r3, [r7, #12]
 8004ec6:	6adb      	ldr	r3, [r3, #44]	@ 0x2c
 8004ec8:	617b      	str	r3, [r7, #20]

  /* Enable Acknowledge */
  SET_BIT(hi2c->Instance->CR1, I2C_CR1_ACK);
 8004eca:	68fb      	ldr	r3, [r7, #12]
 8004ecc:	681b      	ldr	r3, [r3, #0]
 8004ece:	681a      	ldr	r2, [r3, #0]
 8004ed0:	68fb      	ldr	r3, [r7, #12]
 8004ed2:	681b      	ldr	r3, [r3, #0]
 8004ed4:	f442 6280 	orr.w	r2, r2, #1024	@ 0x400
 8004ed8:	601a      	str	r2, [r3, #0]

  /* Generate Start condition if first transfer */
  if ((CurrentXferOptions == I2C_FIRST_AND_LAST_FRAME) || (CurrentXferOptions == I2C_FIRST_FRAME)  || (CurrentXferOptions == I2C_NO_OPTION_FRAME))
 8004eda:	697b      	ldr	r3, [r7, #20]
 8004edc:	2b08      	cmp	r3, #8
 8004ede:	d006      	beq.n	8004eee <I2C_MasterRequestRead+0x3a>
 8004ee0:	697b      	ldr	r3, [r7, #20]
 8004ee2:	2b01      	cmp	r3, #1
 8004ee4:	d003      	beq.n	8004eee <I2C_MasterRequestRead+0x3a>
 8004ee6:	697b      	ldr	r3, [r7, #20]
 8004ee8:	f513 3f80 	cmn.w	r3, #65536	@ 0x10000
 8004eec:	d108      	bne.n	8004f00 <I2C_MasterRequestRead+0x4c>
  {
    /* Generate Start */
    SET_BIT(hi2c->Instance->CR1, I2C_CR1_START);
 8004eee:	68fb      	ldr	r3, [r7, #12]
 8004ef0:	681b      	ldr	r3, [r3, #0]
 8004ef2:	681a      	ldr	r2, [r3, #0]
 8004ef4:	68fb      	ldr	r3, [r7, #12]
 8004ef6:	681b      	ldr	r3, [r3, #0]
 8004ef8:	f442 7280 	orr.w	r2, r2, #256	@ 0x100
 8004efc:	601a      	str	r2, [r3, #0]
 8004efe:	e00b      	b.n	8004f18 <I2C_MasterRequestRead+0x64>
  }
  else if (hi2c->PreviousState == I2C_STATE_MASTER_BUSY_TX)
 8004f00:	68fb      	ldr	r3, [r7, #12]
 8004f02:	6b1b      	ldr	r3, [r3, #48]	@ 0x30
 8004f04:	2b11      	cmp	r3, #17
 8004f06:	d107      	bne.n	8004f18 <I2C_MasterRequestRead+0x64>
  {
    /* Generate ReStart */
    SET_BIT(hi2c->Instance->CR1, I2C_CR1_START);
 8004f08:	68fb      	ldr	r3, [r7, #12]
 8004f0a:	681b      	ldr	r3, [r3, #0]
 8004f0c:	681a      	ldr	r2, [r3, #0]
 8004f0e:	68fb      	ldr	r3, [r7, #12]
 8004f10:	681b      	ldr	r3, [r3, #0]
 8004f12:	f442 7280 	orr.w	r2, r2, #256	@ 0x100
 8004f16:	601a      	str	r2, [r3, #0]
  {
    /* Do nothing */
  }

  /* Wait until SB flag is set */
  if (I2C_WaitOnFlagUntilTimeout(hi2c, I2C_FLAG_SB, RESET, Timeout, Tickstart) != HAL_OK)
 8004f18:	683b      	ldr	r3, [r7, #0]
 8004f1a:	9300      	str	r3, [sp, #0]
 8004f1c:	687b      	ldr	r3, [r7, #4]
 8004f1e:	2200      	movs	r2, #0
 8004f20:	f04f 1101 	mov.w	r1, #65537	@ 0x10001
 8004f24:	68f8      	ldr	r0, [r7, #12]
 8004f26:	f000 f893 	bl	8005050 <I2C_WaitOnFlagUntilTimeout>
 8004f2a:	4603      	mov	r3, r0
 8004f2c:	2b00      	cmp	r3, #0
 8004f2e:	d00d      	beq.n	8004f4c <I2C_MasterRequestRead+0x98>
  {
    if (READ_BIT(hi2c->Instance->CR1, I2C_CR1_START) == I2C_CR1_START)
 8004f30:	68fb      	ldr	r3, [r7, #12]
 8004f32:	681b      	ldr	r3, [r3, #0]
 8004f34:	681b      	ldr	r3, [r3, #0]
 8004f36:	f403 7380 	and.w	r3, r3, #256	@ 0x100
 8004f3a:	f5b3 7f80 	cmp.w	r3, #256	@ 0x100
 8004f3e:	d103      	bne.n	8004f48 <I2C_MasterRequestRead+0x94>
    {
      hi2c->ErrorCode = HAL_I2C_WRONG_START;
 8004f40:	68fb      	ldr	r3, [r7, #12]
 8004f42:	f44f 7200 	mov.w	r2, #512	@ 0x200
 8004f46:	641a      	str	r2, [r3, #64]	@ 0x40
    }
    return HAL_TIMEOUT;
 8004f48:	2303      	movs	r3, #3
 8004f4a:	e079      	b.n	8005040 <I2C_MasterRequestRead+0x18c>
  }

  if (hi2c->Init.AddressingMode == I2C_ADDRESSINGMODE_7BIT)
 8004f4c:	68fb      	ldr	r3, [r7, #12]
 8004f4e:	691b      	ldr	r3, [r3, #16]
 8004f50:	f5b3 4f80 	cmp.w	r3, #16384	@ 0x4000
 8004f54:	d108      	bne.n	8004f68 <I2C_MasterRequestRead+0xb4>
  {
    /* Send slave address */
    hi2c->Instance->DR = I2C_7BIT_ADD_READ(DevAddress);
 8004f56:	897b      	ldrh	r3, [r7, #10]
 8004f58:	b2db      	uxtb	r3, r3
 8004f5a:	f043 0301 	orr.w	r3, r3, #1
 8004f5e:	b2da      	uxtb	r2, r3
 8004f60:	68fb      	ldr	r3, [r7, #12]
 8004f62:	681b      	ldr	r3, [r3, #0]
 8004f64:	611a      	str	r2, [r3, #16]
 8004f66:	e05f      	b.n	8005028 <I2C_MasterRequestRead+0x174>
  }
  else
  {
    /* Send header of slave address */
    hi2c->Instance->DR = I2C_10BIT_HEADER_WRITE(DevAddress);
 8004f68:	897b      	ldrh	r3, [r7, #10]
 8004f6a:	11db      	asrs	r3, r3, #7
 8004f6c:	b2db      	uxtb	r3, r3
 8004f6e:	f003 0306 	and.w	r3, r3, #6
 8004f72:	b2db      	uxtb	r3, r3
 8004f74:	f063 030f 	orn	r3, r3, #15
 8004f78:	b2da      	uxtb	r2, r3
 8004f7a:	68fb      	ldr	r3, [r7, #12]
 8004f7c:	681b      	ldr	r3, [r3, #0]
 8004f7e:	611a      	str	r2, [r3, #16]

    /* Wait until ADD10 flag is set */
    if (I2C_WaitOnMasterAddressFlagUntilTimeout(hi2c, I2C_FLAG_ADD10, Timeout, Tickstart) != HAL_OK)
 8004f80:	683b      	ldr	r3, [r7, #0]
 8004f82:	687a      	ldr	r2, [r7, #4]
 8004f84:	4930      	ldr	r1, [pc, #192]	@ (8005048 <I2C_MasterRequestRead+0x194>)
 8004f86:	68f8      	ldr	r0, [r7, #12]
 8004f88:	f000 f8dc 	bl	8005144 <I2C_WaitOnMasterAddressFlagUntilTimeout>
 8004f8c:	4603      	mov	r3, r0
 8004f8e:	2b00      	cmp	r3, #0
 8004f90:	d001      	beq.n	8004f96 <I2C_MasterRequestRead+0xe2>
    {
      return HAL_ERROR;
 8004f92:	2301      	movs	r3, #1
 8004f94:	e054      	b.n	8005040 <I2C_MasterRequestRead+0x18c>
    }

    /* Send slave address */
    hi2c->Instance->DR = I2C_10BIT_ADDRESS(DevAddress);
 8004f96:	897b      	ldrh	r3, [r7, #10]
 8004f98:	b2da      	uxtb	r2, r3
 8004f9a:	68fb      	ldr	r3, [r7, #12]
 8004f9c:	681b      	ldr	r3, [r3, #0]
 8004f9e:	611a      	str	r2, [r3, #16]

    /* Wait until ADDR flag is set */
    if (I2C_WaitOnMasterAddressFlagUntilTimeout(hi2c, I2C_FLAG_ADDR, Timeout, Tickstart) != HAL_OK)
 8004fa0:	683b      	ldr	r3, [r7, #0]
 8004fa2:	687a      	ldr	r2, [r7, #4]
 8004fa4:	4929      	ldr	r1, [pc, #164]	@ (800504c <I2C_MasterRequestRead+0x198>)
 8004fa6:	68f8      	ldr	r0, [r7, #12]
 8004fa8:	f000 f8cc 	bl	8005144 <I2C_WaitOnMasterAddressFlagUntilTimeout>
 8004fac:	4603      	mov	r3, r0
 8004fae:	2b00      	cmp	r3, #0
 8004fb0:	d001      	beq.n	8004fb6 <I2C_MasterRequestRead+0x102>
    {
      return HAL_ERROR;
 8004fb2:	2301      	movs	r3, #1
 8004fb4:	e044      	b.n	8005040 <I2C_MasterRequestRead+0x18c>
    }

    /* Clear ADDR flag */
    __HAL_I2C_CLEAR_ADDRFLAG(hi2c);
 8004fb6:	2300      	movs	r3, #0
 8004fb8:	613b      	str	r3, [r7, #16]
 8004fba:	68fb      	ldr	r3, [r7, #12]
 8004fbc:	681b      	ldr	r3, [r3, #0]
 8004fbe:	695b      	ldr	r3, [r3, #20]
 8004fc0:	613b      	str	r3, [r7, #16]
 8004fc2:	68fb      	ldr	r3, [r7, #12]
 8004fc4:	681b      	ldr	r3, [r3, #0]
 8004fc6:	699b      	ldr	r3, [r3, #24]
 8004fc8:	613b      	str	r3, [r7, #16]
 8004fca:	693b      	ldr	r3, [r7, #16]

    /* Generate Restart */
    SET_BIT(hi2c->Instance->CR1, I2C_CR1_START);
 8004fcc:	68fb      	ldr	r3, [r7, #12]
 8004fce:	681b      	ldr	r3, [r3, #0]
 8004fd0:	681a      	ldr	r2, [r3, #0]
 8004fd2:	68fb      	ldr	r3, [r7, #12]
 8004fd4:	681b      	ldr	r3, [r3, #0]
 8004fd6:	f442 7280 	orr.w	r2, r2, #256	@ 0x100
 8004fda:	601a      	str	r2, [r3, #0]

    /* Wait until SB flag is set */
    if (I2C_WaitOnFlagUntilTimeout(hi2c, I2C_FLAG_SB, RESET, Timeout, Tickstart) != HAL_OK)
 8004fdc:	683b      	ldr	r3, [r7, #0]
 8004fde:	9300      	str	r3, [sp, #0]
 8004fe0:	687b      	ldr	r3, [r7, #4]
 8004fe2:	2200      	movs	r2, #0
 8004fe4:	f04f 1101 	mov.w	r1, #65537	@ 0x10001
 8004fe8:	68f8      	ldr	r0, [r7, #12]
 8004fea:	f000 f831 	bl	8005050 <I2C_WaitOnFlagUntilTimeout>
 8004fee:	4603      	mov	r3, r0
 8004ff0:	2b00      	cmp	r3, #0
 8004ff2:	d00d      	beq.n	8005010 <I2C_MasterRequestRead+0x15c>
    {
      if (READ_BIT(hi2c->Instance->CR1, I2C_CR1_START) == I2C_CR1_START)
 8004ff4:	68fb      	ldr	r3, [r7, #12]
 8004ff6:	681b      	ldr	r3, [r3, #0]
 8004ff8:	681b      	ldr	r3, [r3, #0]
 8004ffa:	f403 7380 	and.w	r3, r3, #256	@ 0x100
 8004ffe:	f5b3 7f80 	cmp.w	r3, #256	@ 0x100
 8005002:	d103      	bne.n	800500c <I2C_MasterRequestRead+0x158>
      {
        hi2c->ErrorCode = HAL_I2C_WRONG_START;
 8005004:	68fb      	ldr	r3, [r7, #12]
 8005006:	f44f 7200 	mov.w	r2, #512	@ 0x200
 800500a:	641a      	str	r2, [r3, #64]	@ 0x40
      }
      return HAL_TIMEOUT;
 800500c:	2303      	movs	r3, #3
 800500e:	e017      	b.n	8005040 <I2C_MasterRequestRead+0x18c>
    }

    /* Send header of slave address */
    hi2c->Instance->DR = I2C_10BIT_HEADER_READ(DevAddress);
 8005010:	897b      	ldrh	r3, [r7, #10]
 8005012:	11db      	asrs	r3, r3, #7
 8005014:	b2db      	uxtb	r3, r3
 8005016:	f003 0306 	and.w	r3, r3, #6
 800501a:	b2db      	uxtb	r3, r3
 800501c:	f063 030e 	orn	r3, r3, #14
 8005020:	b2da      	uxtb	r2, r3
 8005022:	68fb      	ldr	r3, [r7, #12]
 8005024:	681b      	ldr	r3, [r3, #0]
 8005026:	611a      	str	r2, [r3, #16]
  }

  /* Wait until ADDR flag is set */
  if (I2C_WaitOnMasterAddressFlagUntilTimeout(hi2c, I2C_FLAG_ADDR, Timeout, Tickstart) != HAL_OK)
 8005028:	683b      	ldr	r3, [r7, #0]
 800502a:	687a      	ldr	r2, [r7, #4]
 800502c:	4907      	ldr	r1, [pc, #28]	@ (800504c <I2C_MasterRequestRead+0x198>)
 800502e:	68f8      	ldr	r0, [r7, #12]
 8005030:	f000 f888 	bl	8005144 <I2C_WaitOnMasterAddressFlagUntilTimeout>
 8005034:	4603      	mov	r3, r0
 8005036:	2b00      	cmp	r3, #0
 8005038:	d001      	beq.n	800503e <I2C_MasterRequestRead+0x18a>
  {
    return HAL_ERROR;
 800503a:	2301      	movs	r3, #1
 800503c:	e000      	b.n	8005040 <I2C_MasterRequestRead+0x18c>
  }

  return HAL_OK;
 800503e:	2300      	movs	r3, #0
}
 8005040:	4618      	mov	r0, r3
 8005042:	3718      	adds	r7, #24
 8005044:	46bd      	mov	sp, r7
 8005046:	bd80      	pop	{r7, pc}
 8005048:	00010008 	.word	0x00010008
 800504c:	00010002 	.word	0x00010002

08005050 <I2C_WaitOnFlagUntilTimeout>:
  * @param  Timeout Timeout duration
  * @param  Tickstart Tick start value
  * @retval HAL status
  */
static HAL_StatusTypeDef I2C_WaitOnFlagUntilTimeout(I2C_HandleTypeDef *hi2c, uint32_t Flag, FlagStatus Status, uint32_t Timeout, uint32_t Tickstart)
{
 8005050:	b580      	push	{r7, lr}
 8005052:	b084      	sub	sp, #16
 8005054:	af00      	add	r7, sp, #0
 8005056:	60f8      	str	r0, [r7, #12]
 8005058:	60b9      	str	r1, [r7, #8]
 800505a:	603b      	str	r3, [r7, #0]
 800505c:	4613      	mov	r3, r2
 800505e:	71fb      	strb	r3, [r7, #7]
  /* Wait until flag is set */
  while (__HAL_I2C_GET_FLAG(hi2c, Flag) == Status)
 8005060:	e048      	b.n	80050f4 <I2C_WaitOnFlagUntilTimeout+0xa4>
  {
    /* Check for the Timeout */
    if (Timeout != HAL_MAX_DELAY)
 8005062:	683b      	ldr	r3, [r7, #0]
 8005064:	f1b3 3fff 	cmp.w	r3, #4294967295
 8005068:	d044      	beq.n	80050f4 <I2C_WaitOnFlagUntilTimeout+0xa4>
    {
      if (((HAL_GetTick() - Tickstart) > Timeout) || (Timeout == 0U))
 800506a:	f7fd fc73 	bl	8002954 <HAL_GetTick>
 800506e:	4602      	mov	r2, r0
 8005070:	69bb      	ldr	r3, [r7, #24]
 8005072:	1ad3      	subs	r3, r2, r3
 8005074:	683a      	ldr	r2, [r7, #0]
 8005076:	429a      	cmp	r2, r3
 8005078:	d302      	bcc.n	8005080 <I2C_WaitOnFlagUntilTimeout+0x30>
 800507a:	683b      	ldr	r3, [r7, #0]
 800507c:	2b00      	cmp	r3, #0
 800507e:	d139      	bne.n	80050f4 <I2C_WaitOnFlagUntilTimeout+0xa4>
      {
        if ((__HAL_I2C_GET_FLAG(hi2c, Flag) == Status))
 8005080:	68bb      	ldr	r3, [r7, #8]
 8005082:	0c1b      	lsrs	r3, r3, #16
 8005084:	b2db      	uxtb	r3, r3
 8005086:	2b01      	cmp	r3, #1
 8005088:	d10d      	bne.n	80050a6 <I2C_WaitOnFlagUntilTimeout+0x56>
 800508a:	68fb      	ldr	r3, [r7, #12]
 800508c:	681b      	ldr	r3, [r3, #0]
 800508e:	695b      	ldr	r3, [r3, #20]
 8005090:	43da      	mvns	r2, r3
 8005092:	68bb      	ldr	r3, [r7, #8]
 8005094:	4013      	ands	r3, r2
 8005096:	b29b      	uxth	r3, r3
 8005098:	2b00      	cmp	r3, #0
 800509a:	bf0c      	ite	eq
 800509c:	2301      	moveq	r3, #1
 800509e:	2300      	movne	r3, #0
 80050a0:	b2db      	uxtb	r3, r3
 80050a2:	461a      	mov	r2, r3
 80050a4:	e00c      	b.n	80050c0 <I2C_WaitOnFlagUntilTimeout+0x70>
 80050a6:	68fb      	ldr	r3, [r7, #12]
 80050a8:	681b      	ldr	r3, [r3, #0]
 80050aa:	699b      	ldr	r3, [r3, #24]
 80050ac:	43da      	mvns	r2, r3
 80050ae:	68bb      	ldr	r3, [r7, #8]
 80050b0:	4013      	ands	r3, r2
 80050b2:	b29b      	uxth	r3, r3
 80050b4:	2b00      	cmp	r3, #0
 80050b6:	bf0c      	ite	eq
 80050b8:	2301      	moveq	r3, #1
 80050ba:	2300      	movne	r3, #0
 80050bc:	b2db      	uxtb	r3, r3
 80050be:	461a      	mov	r2, r3
 80050c0:	79fb      	ldrb	r3, [r7, #7]
 80050c2:	429a      	cmp	r2, r3
 80050c4:	d116      	bne.n	80050f4 <I2C_WaitOnFlagUntilTimeout+0xa4>
        {
          hi2c->PreviousState     = I2C_STATE_NONE;
 80050c6:	68fb      	ldr	r3, [r7, #12]
 80050c8:	2200      	movs	r2, #0
 80050ca:	631a      	str	r2, [r3, #48]	@ 0x30
          hi2c->State             = HAL_I2C_STATE_READY;
 80050cc:	68fb      	ldr	r3, [r7, #12]
 80050ce:	2220      	movs	r2, #32
 80050d0:	f883 203d 	strb.w	r2, [r3, #61]	@ 0x3d
          hi2c->Mode              = HAL_I2C_MODE_NONE;
 80050d4:	68fb      	ldr	r3, [r7, #12]
 80050d6:	2200      	movs	r2, #0
 80050d8:	f883 203e 	strb.w	r2, [r3, #62]	@ 0x3e
          hi2c->ErrorCode         |= HAL_I2C_ERROR_TIMEOUT;
 80050dc:	68fb      	ldr	r3, [r7, #12]
 80050de:	6c1b      	ldr	r3, [r3, #64]	@ 0x40
 80050e0:	f043 0220 	orr.w	r2, r3, #32
 80050e4:	68fb      	ldr	r3, [r7, #12]
 80050e6:	641a      	str	r2, [r3, #64]	@ 0x40

          /* Process Unlocked */
          __HAL_UNLOCK(hi2c);
 80050e8:	68fb      	ldr	r3, [r7, #12]
 80050ea:	2200      	movs	r2, #0
 80050ec:	f883 203c 	strb.w	r2, [r3, #60]	@ 0x3c

          return HAL_ERROR;
 80050f0:	2301      	movs	r3, #1
 80050f2:	e023      	b.n	800513c <I2C_WaitOnFlagUntilTimeout+0xec>
  while (__HAL_I2C_GET_FLAG(hi2c, Flag) == Status)
 80050f4:	68bb      	ldr	r3, [r7, #8]
 80050f6:	0c1b      	lsrs	r3, r3, #16
 80050f8:	b2db      	uxtb	r3, r3
 80050fa:	2b01      	cmp	r3, #1
 80050fc:	d10d      	bne.n	800511a <I2C_WaitOnFlagUntilTimeout+0xca>
 80050fe:	68fb      	ldr	r3, [r7, #12]
 8005100:	681b      	ldr	r3, [r3, #0]
 8005102:	695b      	ldr	r3, [r3, #20]
 8005104:	43da      	mvns	r2, r3
 8005106:	68bb      	ldr	r3, [r7, #8]
 8005108:	4013      	ands	r3, r2
 800510a:	b29b      	uxth	r3, r3
 800510c:	2b00      	cmp	r3, #0
 800510e:	bf0c      	ite	eq
 8005110:	2301      	moveq	r3, #1
 8005112:	2300      	movne	r3, #0
 8005114:	b2db      	uxtb	r3, r3
 8005116:	461a      	mov	r2, r3
 8005118:	e00c      	b.n	8005134 <I2C_WaitOnFlagUntilTimeout+0xe4>
 800511a:	68fb      	ldr	r3, [r7, #12]
 800511c:	681b      	ldr	r3, [r3, #0]
 800511e:	699b      	ldr	r3, [r3, #24]
 8005120:	43da      	mvns	r2, r3
 8005122:	68bb      	ldr	r3, [r7, #8]
 8005124:	4013      	ands	r3, r2
 8005126:	b29b      	uxth	r3, r3
 8005128:	2b00      	cmp	r3, #0
 800512a:	bf0c      	ite	eq
 800512c:	2301      	moveq	r3, #1
 800512e:	2300      	movne	r3, #0
 8005130:	b2db      	uxtb	r3, r3
 8005132:	461a      	mov	r2, r3
 8005134:	79fb      	ldrb	r3, [r7, #7]
 8005136:	429a      	cmp	r2, r3
 8005138:	d093      	beq.n	8005062 <I2C_WaitOnFlagUntilTimeout+0x12>
        }
      }
    }
  }
  return HAL_OK;
 800513a:	2300      	movs	r3, #0
}
 800513c:	4618      	mov	r0, r3
 800513e:	3710      	adds	r7, #16
 8005140:	46bd      	mov	sp, r7
 8005142:	bd80      	pop	{r7, pc}

08005144 <I2C_WaitOnMasterAddressFlagUntilTimeout>:
  * @param  Timeout Timeout duration
  * @param  Tickstart Tick start value
  * @retval HAL status
  */
static HAL_StatusTypeDef I2C_WaitOnMasterAddressFlagUntilTimeout(I2C_HandleTypeDef *hi2c, uint32_t Flag, uint32_t Timeout, uint32_t Tickstart)
{
 8005144:	b580      	push	{r7, lr}
 8005146:	b084      	sub	sp, #16
 8005148:	af00      	add	r7, sp, #0
 800514a:	60f8      	str	r0, [r7, #12]
 800514c:	60b9      	str	r1, [r7, #8]
 800514e:	607a      	str	r2, [r7, #4]
 8005150:	603b      	str	r3, [r7, #0]
  while (__HAL_I2C_GET_FLAG(hi2c, Flag) == RESET)
 8005152:	e071      	b.n	8005238 <I2C_WaitOnMasterAddressFlagUntilTimeout+0xf4>
  {
    if (__HAL_I2C_GET_FLAG(hi2c, I2C_FLAG_AF) == SET)
 8005154:	68fb      	ldr	r3, [r7, #12]
 8005156:	681b      	ldr	r3, [r3, #0]
 8005158:	695b      	ldr	r3, [r3, #20]
 800515a:	f403 6380 	and.w	r3, r3, #1024	@ 0x400
 800515e:	f5b3 6f80 	cmp.w	r3, #1024	@ 0x400
 8005162:	d123      	bne.n	80051ac <I2C_WaitOnMasterAddressFlagUntilTimeout+0x68>
    {
      /* Generate Stop */
      SET_BIT(hi2c->Instance->CR1, I2C_CR1_STOP);
 8005164:	68fb      	ldr	r3, [r7, #12]
 8005166:	681b      	ldr	r3, [r3, #0]
 8005168:	681a      	ldr	r2, [r3, #0]
 800516a:	68fb      	ldr	r3, [r7, #12]
 800516c:	681b      	ldr	r3, [r3, #0]
 800516e:	f442 7200 	orr.w	r2, r2, #512	@ 0x200
 8005172:	601a      	str	r2, [r3, #0]

      /* Clear AF Flag */
      __HAL_I2C_CLEAR_FLAG(hi2c, I2C_FLAG_AF);
 8005174:	68fb      	ldr	r3, [r7, #12]
 8005176:	681b      	ldr	r3, [r3, #0]
 8005178:	f46f 6280 	mvn.w	r2, #1024	@ 0x400
 800517c:	615a      	str	r2, [r3, #20]

      hi2c->PreviousState       = I2C_STATE_NONE;
 800517e:	68fb      	ldr	r3, [r7, #12]
 8005180:	2200      	movs	r2, #0
 8005182:	631a      	str	r2, [r3, #48]	@ 0x30
      hi2c->State               = HAL_I2C_STATE_READY;
 8005184:	68fb      	ldr	r3, [r7, #12]
 8005186:	2220      	movs	r2, #32
 8005188:	f883 203d 	strb.w	r2, [r3, #61]	@ 0x3d
      hi2c->Mode                = HAL_I2C_MODE_NONE;
 800518c:	68fb      	ldr	r3, [r7, #12]
 800518e:	2200      	movs	r2, #0
 8005190:	f883 203e 	strb.w	r2, [r3, #62]	@ 0x3e
      hi2c->ErrorCode           |= HAL_I2C_ERROR_AF;
 8005194:	68fb      	ldr	r3, [r7, #12]
 8005196:	6c1b      	ldr	r3, [r3, #64]	@ 0x40
 8005198:	f043 0204 	orr.w	r2, r3, #4
 800519c:	68fb      	ldr	r3, [r7, #12]
 800519e:	641a      	str	r2, [r3, #64]	@ 0x40

      /* Process Unlocked */
      __HAL_UNLOCK(hi2c);
 80051a0:	68fb      	ldr	r3, [r7, #12]
 80051a2:	2200      	movs	r2, #0
 80051a4:	f883 203c 	strb.w	r2, [r3, #60]	@ 0x3c

      return HAL_ERROR;
 80051a8:	2301      	movs	r3, #1
 80051aa:	e067      	b.n	800527c <I2C_WaitOnMasterAddressFlagUntilTimeout+0x138>
    }

    /* Check for the Timeout */
    if (Timeout != HAL_MAX_DELAY)
 80051ac:	687b      	ldr	r3, [r7, #4]
 80051ae:	f1b3 3fff 	cmp.w	r3, #4294967295
 80051b2:	d041      	beq.n	8005238 <I2C_WaitOnMasterAddressFlagUntilTimeout+0xf4>
    {
      if (((HAL_GetTick() - Tickstart) > Timeout) || (Timeout == 0U))
 80051b4:	f7fd fbce 	bl	8002954 <HAL_GetTick>
 80051b8:	4602      	mov	r2, r0
 80051ba:	683b      	ldr	r3, [r7, #0]
 80051bc:	1ad3      	subs	r3, r2, r3
 80051be:	687a      	ldr	r2, [r7, #4]
 80051c0:	429a      	cmp	r2, r3
 80051c2:	d302      	bcc.n	80051ca <I2C_WaitOnMasterAddressFlagUntilTimeout+0x86>
 80051c4:	687b      	ldr	r3, [r7, #4]
 80051c6:	2b00      	cmp	r3, #0
 80051c8:	d136      	bne.n	8005238 <I2C_WaitOnMasterAddressFlagUntilTimeout+0xf4>
      {
        if ((__HAL_I2C_GET_FLAG(hi2c, Flag) == RESET))
 80051ca:	68bb      	ldr	r3, [r7, #8]
 80051cc:	0c1b      	lsrs	r3, r3, #16
 80051ce:	b2db      	uxtb	r3, r3
 80051d0:	2b01      	cmp	r3, #1
 80051d2:	d10c      	bne.n	80051ee <I2C_WaitOnMasterAddressFlagUntilTimeout+0xaa>
 80051d4:	68fb      	ldr	r3, [r7, #12]
 80051d6:	681b      	ldr	r3, [r3, #0]
 80051d8:	695b      	ldr	r3, [r3, #20]
 80051da:	43da      	mvns	r2, r3
 80051dc:	68bb      	ldr	r3, [r7, #8]
 80051de:	4013      	ands	r3, r2
 80051e0:	b29b      	uxth	r3, r3
 80051e2:	2b00      	cmp	r3, #0
 80051e4:	bf14      	ite	ne
 80051e6:	2301      	movne	r3, #1
 80051e8:	2300      	moveq	r3, #0
 80051ea:	b2db      	uxtb	r3, r3
 80051ec:	e00b      	b.n	8005206 <I2C_WaitOnMasterAddressFlagUntilTimeout+0xc2>
 80051ee:	68fb      	ldr	r3, [r7, #12]
 80051f0:	681b      	ldr	r3, [r3, #0]
 80051f2:	699b      	ldr	r3, [r3, #24]
 80051f4:	43da      	mvns	r2, r3
 80051f6:	68bb      	ldr	r3, [r7, #8]
 80051f8:	4013      	ands	r3, r2
 80051fa:	b29b      	uxth	r3, r3
 80051fc:	2b00      	cmp	r3, #0
 80051fe:	bf14      	ite	ne
 8005200:	2301      	movne	r3, #1
 8005202:	2300      	moveq	r3, #0
 8005204:	b2db      	uxtb	r3, r3
 8005206:	2b00      	cmp	r3, #0
 8005208:	d016      	beq.n	8005238 <I2C_WaitOnMasterAddressFlagUntilTimeout+0xf4>
        {
          hi2c->PreviousState       = I2C_STATE_NONE;
 800520a:	68fb      	ldr	r3, [r7, #12]
 800520c:	2200      	movs	r2, #0
 800520e:	631a      	str	r2, [r3, #48]	@ 0x30
          hi2c->State               = HAL_I2C_STATE_READY;
 8005210:	68fb      	ldr	r3, [r7, #12]
 8005212:	2220      	movs	r2, #32
 8005214:	f883 203d 	strb.w	r2, [r3, #61]	@ 0x3d
          hi2c->Mode                = HAL_I2C_MODE_NONE;
 8005218:	68fb      	ldr	r3, [r7, #12]
 800521a:	2200      	movs	r2, #0
 800521c:	f883 203e 	strb.w	r2, [r3, #62]	@ 0x3e
          hi2c->ErrorCode           |= HAL_I2C_ERROR_TIMEOUT;
 8005220:	68fb      	ldr	r3, [r7, #12]
 8005222:	6c1b      	ldr	r3, [r3, #64]	@ 0x40
 8005224:	f043 0220 	orr.w	r2, r3, #32
 8005228:	68fb      	ldr	r3, [r7, #12]
 800522a:	641a      	str	r2, [r3, #64]	@ 0x40

          /* Process Unlocked */
          __HAL_UNLOCK(hi2c);
 800522c:	68fb      	ldr	r3, [r7, #12]
 800522e:	2200      	movs	r2, #0
 8005230:	f883 203c 	strb.w	r2, [r3, #60]	@ 0x3c

          return HAL_ERROR;
 8005234:	2301      	movs	r3, #1
 8005236:	e021      	b.n	800527c <I2C_WaitOnMasterAddressFlagUntilTimeout+0x138>
  while (__HAL_I2C_GET_FLAG(hi2c, Flag) == RESET)
 8005238:	68bb      	ldr	r3, [r7, #8]
 800523a:	0c1b      	lsrs	r3, r3, #16
 800523c:	b2db      	uxtb	r3, r3
 800523e:	2b01      	cmp	r3, #1
 8005240:	d10c      	bne.n	800525c <I2C_WaitOnMasterAddressFlagUntilTimeout+0x118>
 8005242:	68fb      	ldr	r3, [r7, #12]
 8005244:	681b      	ldr	r3, [r3, #0]
 8005246:	695b      	ldr	r3, [r3, #20]
 8005248:	43da      	mvns	r2, r3
 800524a:	68bb      	ldr	r3, [r7, #8]
 800524c:	4013      	ands	r3, r2
 800524e:	b29b      	uxth	r3, r3
 8005250:	2b00      	cmp	r3, #0
 8005252:	bf14      	ite	ne
 8005254:	2301      	movne	r3, #1
 8005256:	2300      	moveq	r3, #0
 8005258:	b2db      	uxtb	r3, r3
 800525a:	e00b      	b.n	8005274 <I2C_WaitOnMasterAddressFlagUntilTimeout+0x130>
 800525c:	68fb      	ldr	r3, [r7, #12]
 800525e:	681b      	ldr	r3, [r3, #0]
 8005260:	699b      	ldr	r3, [r3, #24]
 8005262:	43da      	mvns	r2, r3
 8005264:	68bb      	ldr	r3, [r7, #8]
 8005266:	4013      	ands	r3, r2
 8005268:	b29b      	uxth	r3, r3
 800526a:	2b00      	cmp	r3, #0
 800526c:	bf14      	ite	ne
 800526e:	2301      	movne	r3, #1
 8005270:	2300      	moveq	r3, #0
 8005272:	b2db      	uxtb	r3, r3
 8005274:	2b00      	cmp	r3, #0
 8005276:	f47f af6d 	bne.w	8005154 <I2C_WaitOnMasterAddressFlagUntilTimeout+0x10>
        }
      }
    }
  }
  return HAL_OK;
 800527a:	2300      	movs	r3, #0
}
 800527c:	4618      	mov	r0, r3
 800527e:	3710      	adds	r7, #16
 8005280:	46bd      	mov	sp, r7
 8005282:	bd80      	pop	{r7, pc}

08005284 <I2C_WaitOnTXEFlagUntilTimeout>:
  * @param  Timeout Timeout duration
  * @param  Tickstart Tick start value
  * @retval HAL status
  */
static HAL_StatusTypeDef I2C_WaitOnTXEFlagUntilTimeout(I2C_HandleTypeDef *hi2c, uint32_t Timeout, uint32_t Tickstart)
{
 8005284:	b580      	push	{r7, lr}
 8005286:	b084      	sub	sp, #16
 8005288:	af00      	add	r7, sp, #0
 800528a:	60f8      	str	r0, [r7, #12]
 800528c:	60b9      	str	r1, [r7, #8]
 800528e:	607a      	str	r2, [r7, #4]
  while (__HAL_I2C_GET_FLAG(hi2c, I2C_FLAG_TXE) == RESET)
 8005290:	e034      	b.n	80052fc <I2C_WaitOnTXEFlagUntilTimeout+0x78>
  {
    /* Check if a NACK is detected */
    if (I2C_IsAcknowledgeFailed(hi2c) != HAL_OK)
 8005292:	68f8      	ldr	r0, [r7, #12]
 8005294:	f000 f8e3 	bl	800545e <I2C_IsAcknowledgeFailed>
 8005298:	4603      	mov	r3, r0
 800529a:	2b00      	cmp	r3, #0
 800529c:	d001      	beq.n	80052a2 <I2C_WaitOnTXEFlagUntilTimeout+0x1e>
    {
      return HAL_ERROR;
 800529e:	2301      	movs	r3, #1
 80052a0:	e034      	b.n	800530c <I2C_WaitOnTXEFlagUntilTimeout+0x88>
    }

    /* Check for the Timeout */
    if (Timeout != HAL_MAX_DELAY)
 80052a2:	68bb      	ldr	r3, [r7, #8]
 80052a4:	f1b3 3fff 	cmp.w	r3, #4294967295
 80052a8:	d028      	beq.n	80052fc <I2C_WaitOnTXEFlagUntilTimeout+0x78>
    {
      if (((HAL_GetTick() - Tickstart) > Timeout) || (Timeout == 0U))
 80052aa:	f7fd fb53 	bl	8002954 <HAL_GetTick>
 80052ae:	4602      	mov	r2, r0
 80052b0:	687b      	ldr	r3, [r7, #4]
 80052b2:	1ad3      	subs	r3, r2, r3
 80052b4:	68ba      	ldr	r2, [r7, #8]
 80052b6:	429a      	cmp	r2, r3
 80052b8:	d302      	bcc.n	80052c0 <I2C_WaitOnTXEFlagUntilTimeout+0x3c>
 80052ba:	68bb      	ldr	r3, [r7, #8]
 80052bc:	2b00      	cmp	r3, #0
 80052be:	d11d      	bne.n	80052fc <I2C_WaitOnTXEFlagUntilTimeout+0x78>
      {
        if ((__HAL_I2C_GET_FLAG(hi2c, I2C_FLAG_TXE) == RESET))
 80052c0:	68fb      	ldr	r3, [r7, #12]
 80052c2:	681b      	ldr	r3, [r3, #0]
 80052c4:	695b      	ldr	r3, [r3, #20]
 80052c6:	f003 0380 	and.w	r3, r3, #128	@ 0x80
 80052ca:	2b80      	cmp	r3, #128	@ 0x80
 80052cc:	d016      	beq.n	80052fc <I2C_WaitOnTXEFlagUntilTimeout+0x78>
        {
          hi2c->PreviousState       = I2C_STATE_NONE;
 80052ce:	68fb      	ldr	r3, [r7, #12]
 80052d0:	2200      	movs	r2, #0
 80052d2:	631a      	str	r2, [r3, #48]	@ 0x30
          hi2c->State               = HAL_I2C_STATE_READY;
 80052d4:	68fb      	ldr	r3, [r7, #12]
 80052d6:	2220      	movs	r2, #32
 80052d8:	f883 203d 	strb.w	r2, [r3, #61]	@ 0x3d
          hi2c->Mode                = HAL_I2C_MODE_NONE;
 80052dc:	68fb      	ldr	r3, [r7, #12]
 80052de:	2200      	movs	r2, #0
 80052e0:	f883 203e 	strb.w	r2, [r3, #62]	@ 0x3e
          hi2c->ErrorCode           |= HAL_I2C_ERROR_TIMEOUT;
 80052e4:	68fb      	ldr	r3, [r7, #12]
 80052e6:	6c1b      	ldr	r3, [r3, #64]	@ 0x40
 80052e8:	f043 0220 	orr.w	r2, r3, #32
 80052ec:	68fb      	ldr	r3, [r7, #12]
 80052ee:	641a      	str	r2, [r3, #64]	@ 0x40

          /* Process Unlocked */
          __HAL_UNLOCK(hi2c);
 80052f0:	68fb      	ldr	r3, [r7, #12]
 80052f2:	2200      	movs	r2, #0
 80052f4:	f883 203c 	strb.w	r2, [r3, #60]	@ 0x3c

          return HAL_ERROR;
 80052f8:	2301      	movs	r3, #1
 80052fa:	e007      	b.n	800530c <I2C_WaitOnTXEFlagUntilTimeout+0x88>
  while (__HAL_I2C_GET_FLAG(hi2c, I2C_FLAG_TXE) == RESET)
 80052fc:	68fb      	ldr	r3, [r7, #12]
 80052fe:	681b      	ldr	r3, [r3, #0]
 8005300:	695b      	ldr	r3, [r3, #20]
 8005302:	f003 0380 	and.w	r3, r3, #128	@ 0x80
 8005306:	2b80      	cmp	r3, #128	@ 0x80
 8005308:	d1c3      	bne.n	8005292 <I2C_WaitOnTXEFlagUntilTimeout+0xe>
        }
      }
    }
  }
  return HAL_OK;
 800530a:	2300      	movs	r3, #0
}
 800530c:	4618      	mov	r0, r3
 800530e:	3710      	adds	r7, #16
 8005310:	46bd      	mov	sp, r7
 8005312:	bd80      	pop	{r7, pc}

08005314 <I2C_WaitOnBTFFlagUntilTimeout>:
  * @param  Timeout Timeout duration
  * @param  Tickstart Tick start value
  * @retval HAL status
  */
static HAL_StatusTypeDef I2C_WaitOnBTFFlagUntilTimeout(I2C_HandleTypeDef *hi2c, uint32_t Timeout, uint32_t Tickstart)
{
 8005314:	b580      	push	{r7, lr}
 8005316:	b084      	sub	sp, #16
 8005318:	af00      	add	r7, sp, #0
 800531a:	60f8      	str	r0, [r7, #12]
 800531c:	60b9      	str	r1, [r7, #8]
 800531e:	607a      	str	r2, [r7, #4]
  while (__HAL_I2C_GET_FLAG(hi2c, I2C_FLAG_BTF) == RESET)
 8005320:	e034      	b.n	800538c <I2C_WaitOnBTFFlagUntilTimeout+0x78>
  {
    /* Check if a NACK is detected */
    if (I2C_IsAcknowledgeFailed(hi2c) != HAL_OK)
 8005322:	68f8      	ldr	r0, [r7, #12]
 8005324:	f000 f89b 	bl	800545e <I2C_IsAcknowledgeFailed>
 8005328:	4603      	mov	r3, r0
 800532a:	2b00      	cmp	r3, #0
 800532c:	d001      	beq.n	8005332 <I2C_WaitOnBTFFlagUntilTimeout+0x1e>
    {
      return HAL_ERROR;
 800532e:	2301      	movs	r3, #1
 8005330:	e034      	b.n	800539c <I2C_WaitOnBTFFlagUntilTimeout+0x88>
    }

    /* Check for the Timeout */
    if (Timeout != HAL_MAX_DELAY)
 8005332:	68bb      	ldr	r3, [r7, #8]
 8005334:	f1b3 3fff 	cmp.w	r3, #4294967295
 8005338:	d028      	beq.n	800538c <I2C_WaitOnBTFFlagUntilTimeout+0x78>
    {
      if (((HAL_GetTick() - Tickstart) > Timeout) || (Timeout == 0U))
 800533a:	f7fd fb0b 	bl	8002954 <HAL_GetTick>
 800533e:	4602      	mov	r2, r0
 8005340:	687b      	ldr	r3, [r7, #4]
 8005342:	1ad3      	subs	r3, r2, r3
 8005344:	68ba      	ldr	r2, [r7, #8]
 8005346:	429a      	cmp	r2, r3
 8005348:	d302      	bcc.n	8005350 <I2C_WaitOnBTFFlagUntilTimeout+0x3c>
 800534a:	68bb      	ldr	r3, [r7, #8]
 800534c:	2b00      	cmp	r3, #0
 800534e:	d11d      	bne.n	800538c <I2C_WaitOnBTFFlagUntilTimeout+0x78>
      {
        if ((__HAL_I2C_GET_FLAG(hi2c, I2C_FLAG_BTF) == RESET))
 8005350:	68fb      	ldr	r3, [r7, #12]
 8005352:	681b      	ldr	r3, [r3, #0]
 8005354:	695b      	ldr	r3, [r3, #20]
 8005356:	f003 0304 	and.w	r3, r3, #4
 800535a:	2b04      	cmp	r3, #4
 800535c:	d016      	beq.n	800538c <I2C_WaitOnBTFFlagUntilTimeout+0x78>
        {
          hi2c->PreviousState       = I2C_STATE_NONE;
 800535e:	68fb      	ldr	r3, [r7, #12]
 8005360:	2200      	movs	r2, #0
 8005362:	631a      	str	r2, [r3, #48]	@ 0x30
          hi2c->State               = HAL_I2C_STATE_READY;
 8005364:	68fb      	ldr	r3, [r7, #12]
 8005366:	2220      	movs	r2, #32
 8005368:	f883 203d 	strb.w	r2, [r3, #61]	@ 0x3d
          hi2c->Mode                = HAL_I2C_MODE_NONE;
 800536c:	68fb      	ldr	r3, [r7, #12]
 800536e:	2200      	movs	r2, #0
 8005370:	f883 203e 	strb.w	r2, [r3, #62]	@ 0x3e
          hi2c->ErrorCode           |= HAL_I2C_ERROR_TIMEOUT;
 8005374:	68fb      	ldr	r3, [r7, #12]
 8005376:	6c1b      	ldr	r3, [r3, #64]	@ 0x40
 8005378:	f043 0220 	orr.w	r2, r3, #32
 800537c:	68fb      	ldr	r3, [r7, #12]
 800537e:	641a      	str	r2, [r3, #64]	@ 0x40

          /* Process Unlocked */
          __HAL_UNLOCK(hi2c);
 8005380:	68fb      	ldr	r3, [r7, #12]
 8005382:	2200      	movs	r2, #0
 8005384:	f883 203c 	strb.w	r2, [r3, #60]	@ 0x3c

          return HAL_ERROR;
 8005388:	2301      	movs	r3, #1
 800538a:	e007      	b.n	800539c <I2C_WaitOnBTFFlagUntilTimeout+0x88>
  while (__HAL_I2C_GET_FLAG(hi2c, I2C_FLAG_BTF) == RESET)
 800538c:	68fb      	ldr	r3, [r7, #12]
 800538e:	681b      	ldr	r3, [r3, #0]
 8005390:	695b      	ldr	r3, [r3, #20]
 8005392:	f003 0304 	and.w	r3, r3, #4
 8005396:	2b04      	cmp	r3, #4
 8005398:	d1c3      	bne.n	8005322 <I2C_WaitOnBTFFlagUntilTimeout+0xe>
        }
      }
    }
  }
  return HAL_OK;
 800539a:	2300      	movs	r3, #0
}
 800539c:	4618      	mov	r0, r3
 800539e:	3710      	adds	r7, #16
 80053a0:	46bd      	mov	sp, r7
 80053a2:	bd80      	pop	{r7, pc}

080053a4 <I2C_WaitOnRXNEFlagUntilTimeout>:
  * @param  Timeout Timeout duration
  * @param  Tickstart Tick start value
  * @retval HAL status
  */
static HAL_StatusTypeDef I2C_WaitOnRXNEFlagUntilTimeout(I2C_HandleTypeDef *hi2c, uint32_t Timeout, uint32_t Tickstart)
{
 80053a4:	b580      	push	{r7, lr}
 80053a6:	b084      	sub	sp, #16
 80053a8:	af00      	add	r7, sp, #0
 80053aa:	60f8      	str	r0, [r7, #12]
 80053ac:	60b9      	str	r1, [r7, #8]
 80053ae:	607a      	str	r2, [r7, #4]

  while (__HAL_I2C_GET_FLAG(hi2c, I2C_FLAG_RXNE) == RESET)
 80053b0:	e049      	b.n	8005446 <I2C_WaitOnRXNEFlagUntilTimeout+0xa2>
  {
    /* Check if a STOPF is detected */
    if (__HAL_I2C_GET_FLAG(hi2c, I2C_FLAG_STOPF) == SET)
 80053b2:	68fb      	ldr	r3, [r7, #12]
 80053b4:	681b      	ldr	r3, [r3, #0]
 80053b6:	695b      	ldr	r3, [r3, #20]
 80053b8:	f003 0310 	and.w	r3, r3, #16
 80053bc:	2b10      	cmp	r3, #16
 80053be:	d119      	bne.n	80053f4 <I2C_WaitOnRXNEFlagUntilTimeout+0x50>
    {
      /* Clear STOP Flag */
      __HAL_I2C_CLEAR_FLAG(hi2c, I2C_FLAG_STOPF);
 80053c0:	68fb      	ldr	r3, [r7, #12]
 80053c2:	681b      	ldr	r3, [r3, #0]
 80053c4:	f06f 0210 	mvn.w	r2, #16
 80053c8:	615a      	str	r2, [r3, #20]

      hi2c->PreviousState       = I2C_STATE_NONE;
 80053ca:	68fb      	ldr	r3, [r7, #12]
 80053cc:	2200      	movs	r2, #0
 80053ce:	631a      	str	r2, [r3, #48]	@ 0x30
      hi2c->State               = HAL_I2C_STATE_READY;
 80053d0:	68fb      	ldr	r3, [r7, #12]
 80053d2:	2220      	movs	r2, #32
 80053d4:	f883 203d 	strb.w	r2, [r3, #61]	@ 0x3d
      hi2c->Mode                = HAL_I2C_MODE_NONE;
 80053d8:	68fb      	ldr	r3, [r7, #12]
 80053da:	2200      	movs	r2, #0
 80053dc:	f883 203e 	strb.w	r2, [r3, #62]	@ 0x3e
      hi2c->ErrorCode           |= HAL_I2C_ERROR_NONE;
 80053e0:	68fb      	ldr	r3, [r7, #12]
 80053e2:	6c1a      	ldr	r2, [r3, #64]	@ 0x40
 80053e4:	68fb      	ldr	r3, [r7, #12]
 80053e6:	641a      	str	r2, [r3, #64]	@ 0x40

      /* Process Unlocked */
      __HAL_UNLOCK(hi2c);
 80053e8:	68fb      	ldr	r3, [r7, #12]
 80053ea:	2200      	movs	r2, #0
 80053ec:	f883 203c 	strb.w	r2, [r3, #60]	@ 0x3c

      return HAL_ERROR;
 80053f0:	2301      	movs	r3, #1
 80053f2:	e030      	b.n	8005456 <I2C_WaitOnRXNEFlagUntilTimeout+0xb2>
    }

    /* Check for the Timeout */
    if (((HAL_GetTick() - Tickstart) > Timeout) || (Timeout == 0U))
 80053f4:	f7fd faae 	bl	8002954 <HAL_GetTick>
 80053f8:	4602      	mov	r2, r0
 80053fa:	687b      	ldr	r3, [r7, #4]
 80053fc:	1ad3      	subs	r3, r2, r3
 80053fe:	68ba      	ldr	r2, [r7, #8]
 8005400:	429a      	cmp	r2, r3
 8005402:	d302      	bcc.n	800540a <I2C_WaitOnRXNEFlagUntilTimeout+0x66>
 8005404:	68bb      	ldr	r3, [r7, #8]
 8005406:	2b00      	cmp	r3, #0
 8005408:	d11d      	bne.n	8005446 <I2C_WaitOnRXNEFlagUntilTimeout+0xa2>
    {
      if ((__HAL_I2C_GET_FLAG(hi2c, I2C_FLAG_RXNE) == RESET))
 800540a:	68fb      	ldr	r3, [r7, #12]
 800540c:	681b      	ldr	r3, [r3, #0]
 800540e:	695b      	ldr	r3, [r3, #20]
 8005410:	f003 0340 	and.w	r3, r3, #64	@ 0x40
 8005414:	2b40      	cmp	r3, #64	@ 0x40
 8005416:	d016      	beq.n	8005446 <I2C_WaitOnRXNEFlagUntilTimeout+0xa2>
      {
        hi2c->PreviousState       = I2C_STATE_NONE;
 8005418:	68fb      	ldr	r3, [r7, #12]
 800541a:	2200      	movs	r2, #0
 800541c:	631a      	str	r2, [r3, #48]	@ 0x30
        hi2c->State               = HAL_I2C_STATE_READY;
 800541e:	68fb      	ldr	r3, [r7, #12]
 8005420:	2220      	movs	r2, #32
 8005422:	f883 203d 	strb.w	r2, [r3, #61]	@ 0x3d
        hi2c->Mode                = HAL_I2C_MODE_NONE;
 8005426:	68fb      	ldr	r3, [r7, #12]
 8005428:	2200      	movs	r2, #0
 800542a:	f883 203e 	strb.w	r2, [r3, #62]	@ 0x3e
        hi2c->ErrorCode           |= HAL_I2C_ERROR_TIMEOUT;
 800542e:	68fb      	ldr	r3, [r7, #12]
 8005430:	6c1b      	ldr	r3, [r3, #64]	@ 0x40
 8005432:	f043 0220 	orr.w	r2, r3, #32
 8005436:	68fb      	ldr	r3, [r7, #12]
 8005438:	641a      	str	r2, [r3, #64]	@ 0x40

        /* Process Unlocked */
        __HAL_UNLOCK(hi2c);
 800543a:	68fb      	ldr	r3, [r7, #12]
 800543c:	2200      	movs	r2, #0
 800543e:	f883 203c 	strb.w	r2, [r3, #60]	@ 0x3c

        return HAL_ERROR;
 8005442:	2301      	movs	r3, #1
 8005444:	e007      	b.n	8005456 <I2C_WaitOnRXNEFlagUntilTimeout+0xb2>
  while (__HAL_I2C_GET_FLAG(hi2c, I2C_FLAG_RXNE) == RESET)
 8005446:	68fb      	ldr	r3, [r7, #12]
 8005448:	681b      	ldr	r3, [r3, #0]
 800544a:	695b      	ldr	r3, [r3, #20]
 800544c:	f003 0340 	and.w	r3, r3, #64	@ 0x40
 8005450:	2b40      	cmp	r3, #64	@ 0x40
 8005452:	d1ae      	bne.n	80053b2 <I2C_WaitOnRXNEFlagUntilTimeout+0xe>
      }
    }
  }
  return HAL_OK;
 8005454:	2300      	movs	r3, #0
}
 8005456:	4618      	mov	r0, r3
 8005458:	3710      	adds	r7, #16
 800545a:	46bd      	mov	sp, r7
 800545c:	bd80      	pop	{r7, pc}

0800545e <I2C_IsAcknowledgeFailed>:
  * @param  hi2c Pointer to a I2C_HandleTypeDef structure that contains
  *                the configuration information for the specified I2C.
  * @retval HAL status
  */
static HAL_StatusTypeDef I2C_IsAcknowledgeFailed(I2C_HandleTypeDef *hi2c)
{
 800545e:	b480      	push	{r7}
 8005460:	b083      	sub	sp, #12
 8005462:	af00      	add	r7, sp, #0
 8005464:	6078      	str	r0, [r7, #4]
  if (__HAL_I2C_GET_FLAG(hi2c, I2C_FLAG_AF) == SET)
 8005466:	687b      	ldr	r3, [r7, #4]
 8005468:	681b      	ldr	r3, [r3, #0]
 800546a:	695b      	ldr	r3, [r3, #20]
 800546c:	f403 6380 	and.w	r3, r3, #1024	@ 0x400
 8005470:	f5b3 6f80 	cmp.w	r3, #1024	@ 0x400
 8005474:	d11b      	bne.n	80054ae <I2C_IsAcknowledgeFailed+0x50>
  {
    /* Clear NACKF Flag */
    __HAL_I2C_CLEAR_FLAG(hi2c, I2C_FLAG_AF);
 8005476:	687b      	ldr	r3, [r7, #4]
 8005478:	681b      	ldr	r3, [r3, #0]
 800547a:	f46f 6280 	mvn.w	r2, #1024	@ 0x400
 800547e:	615a      	str	r2, [r3, #20]

    hi2c->PreviousState       = I2C_STATE_NONE;
 8005480:	687b      	ldr	r3, [r7, #4]
 8005482:	2200      	movs	r2, #0
 8005484:	631a      	str	r2, [r3, #48]	@ 0x30
    hi2c->State               = HAL_I2C_STATE_READY;
 8005486:	687b      	ldr	r3, [r7, #4]
 8005488:	2220      	movs	r2, #32
 800548a:	f883 203d 	strb.w	r2, [r3, #61]	@ 0x3d
    hi2c->Mode                = HAL_I2C_MODE_NONE;
 800548e:	687b      	ldr	r3, [r7, #4]
 8005490:	2200      	movs	r2, #0
 8005492:	f883 203e 	strb.w	r2, [r3, #62]	@ 0x3e
    hi2c->ErrorCode           |= HAL_I2C_ERROR_AF;
 8005496:	687b      	ldr	r3, [r7, #4]
 8005498:	6c1b      	ldr	r3, [r3, #64]	@ 0x40
 800549a:	f043 0204 	orr.w	r2, r3, #4
 800549e:	687b      	ldr	r3, [r7, #4]
 80054a0:	641a      	str	r2, [r3, #64]	@ 0x40

    /* Process Unlocked */
    __HAL_UNLOCK(hi2c);
 80054a2:	687b      	ldr	r3, [r7, #4]
 80054a4:	2200      	movs	r2, #0
 80054a6:	f883 203c 	strb.w	r2, [r3, #60]	@ 0x3c

    return HAL_ERROR;
 80054aa:	2301      	movs	r3, #1
 80054ac:	e000      	b.n	80054b0 <I2C_IsAcknowledgeFailed+0x52>
  }
  return HAL_OK;
 80054ae:	2300      	movs	r3, #0
}
 80054b0:	4618      	mov	r0, r3
 80054b2:	370c      	adds	r7, #12
 80054b4:	46bd      	mov	sp, r7
 80054b6:	f85d 7b04 	ldr.w	r7, [sp], #4
 80054ba:	4770      	bx	lr

080054bc <HAL_PWREx_EnableOverDrive>:
  *         During the Over-drive switch activation, no peripheral clocks should be enabled.   
  *         The peripheral clocks must be enabled once the Over-drive mode is activated.   
  * @retval HAL status
  */
HAL_StatusTypeDef HAL_PWREx_EnableOverDrive(void)
{
 80054bc:	b580      	push	{r7, lr}
 80054be:	b082      	sub	sp, #8
 80054c0:	af00      	add	r7, sp, #0
  uint32_t tickstart = 0U;
 80054c2:	2300      	movs	r3, #0
 80054c4:	607b      	str	r3, [r7, #4]

  __HAL_RCC_PWR_CLK_ENABLE();
 80054c6:	2300      	movs	r3, #0
 80054c8:	603b      	str	r3, [r7, #0]
 80054ca:	4b20      	ldr	r3, [pc, #128]	@ (800554c <HAL_PWREx_EnableOverDrive+0x90>)
 80054cc:	6c1b      	ldr	r3, [r3, #64]	@ 0x40
 80054ce:	4a1f      	ldr	r2, [pc, #124]	@ (800554c <HAL_PWREx_EnableOverDrive+0x90>)
 80054d0:	f043 5380 	orr.w	r3, r3, #268435456	@ 0x10000000
 80054d4:	6413      	str	r3, [r2, #64]	@ 0x40
 80054d6:	4b1d      	ldr	r3, [pc, #116]	@ (800554c <HAL_PWREx_EnableOverDrive+0x90>)
 80054d8:	6c1b      	ldr	r3, [r3, #64]	@ 0x40
 80054da:	f003 5380 	and.w	r3, r3, #268435456	@ 0x10000000
 80054de:	603b      	str	r3, [r7, #0]
 80054e0:	683b      	ldr	r3, [r7, #0]
  
  /* Enable the Over-drive to extend the clock frequency to 180 Mhz */
  __HAL_PWR_OVERDRIVE_ENABLE();
 80054e2:	4b1b      	ldr	r3, [pc, #108]	@ (8005550 <HAL_PWREx_EnableOverDrive+0x94>)
 80054e4:	2201      	movs	r2, #1
 80054e6:	601a      	str	r2, [r3, #0]

  /* Get tick */
  tickstart = HAL_GetTick();
 80054e8:	f7fd fa34 	bl	8002954 <HAL_GetTick>
 80054ec:	6078      	str	r0, [r7, #4]

  while(!__HAL_PWR_GET_FLAG(PWR_FLAG_ODRDY))
 80054ee:	e009      	b.n	8005504 <HAL_PWREx_EnableOverDrive+0x48>
  {
    if((HAL_GetTick() - tickstart) > PWR_OVERDRIVE_TIMEOUT_VALUE)
 80054f0:	f7fd fa30 	bl	8002954 <HAL_GetTick>
 80054f4:	4602      	mov	r2, r0
 80054f6:	687b      	ldr	r3, [r7, #4]
 80054f8:	1ad3      	subs	r3, r2, r3
 80054fa:	f5b3 7f7a 	cmp.w	r3, #1000	@ 0x3e8
 80054fe:	d901      	bls.n	8005504 <HAL_PWREx_EnableOverDrive+0x48>
    {
      return HAL_TIMEOUT;
 8005500:	2303      	movs	r3, #3
 8005502:	e01f      	b.n	8005544 <HAL_PWREx_EnableOverDrive+0x88>
  while(!__HAL_PWR_GET_FLAG(PWR_FLAG_ODRDY))
 8005504:	4b13      	ldr	r3, [pc, #76]	@ (8005554 <HAL_PWREx_EnableOverDrive+0x98>)
 8005506:	685b      	ldr	r3, [r3, #4]
 8005508:	f403 3380 	and.w	r3, r3, #65536	@ 0x10000
 800550c:	f5b3 3f80 	cmp.w	r3, #65536	@ 0x10000
 8005510:	d1ee      	bne.n	80054f0 <HAL_PWREx_EnableOverDrive+0x34>
    }
  }
  
  /* Enable the Over-drive switch */
  __HAL_PWR_OVERDRIVESWITCHING_ENABLE();
 8005512:	4b11      	ldr	r3, [pc, #68]	@ (8005558 <HAL_PWREx_EnableOverDrive+0x9c>)
 8005514:	2201      	movs	r2, #1
 8005516:	601a      	str	r2, [r3, #0]

  /* Get tick */
  tickstart = HAL_GetTick();
 8005518:	f7fd fa1c 	bl	8002954 <HAL_GetTick>
 800551c:	6078      	str	r0, [r7, #4]

  while(!__HAL_PWR_GET_FLAG(PWR_FLAG_ODSWRDY))
 800551e:	e009      	b.n	8005534 <HAL_PWREx_EnableOverDrive+0x78>
  {
    if((HAL_GetTick() - tickstart ) > PWR_OVERDRIVE_TIMEOUT_VALUE)
 8005520:	f7fd fa18 	bl	8002954 <HAL_GetTick>
 8005524:	4602      	mov	r2, r0
 8005526:	687b      	ldr	r3, [r7, #4]
 8005528:	1ad3      	subs	r3, r2, r3
 800552a:	f5b3 7f7a 	cmp.w	r3, #1000	@ 0x3e8
 800552e:	d901      	bls.n	8005534 <HAL_PWREx_EnableOverDrive+0x78>
    {
      return HAL_TIMEOUT;
 8005530:	2303      	movs	r3, #3
 8005532:	e007      	b.n	8005544 <HAL_PWREx_EnableOverDrive+0x88>
  while(!__HAL_PWR_GET_FLAG(PWR_FLAG_ODSWRDY))
 8005534:	4b07      	ldr	r3, [pc, #28]	@ (8005554 <HAL_PWREx_EnableOverDrive+0x98>)
 8005536:	685b      	ldr	r3, [r3, #4]
 8005538:	f403 3300 	and.w	r3, r3, #131072	@ 0x20000
 800553c:	f5b3 3f00 	cmp.w	r3, #131072	@ 0x20000
 8005540:	d1ee      	bne.n	8005520 <HAL_PWREx_EnableOverDrive+0x64>
    }
  } 
  return HAL_OK;
 8005542:	2300      	movs	r3, #0
}
 8005544:	4618      	mov	r0, r3
 8005546:	3708      	adds	r7, #8
 8005548:	46bd      	mov	sp, r7
 800554a:	bd80      	pop	{r7, pc}
 800554c:	40023800 	.word	0x40023800
 8005550:	420e0040 	.word	0x420e0040
 8005554:	40007000 	.word	0x40007000
 8005558:	420e0044 	.word	0x420e0044

0800555c <HAL_RCC_ClockConfig>:
  *         HPRE[3:0] bits to ensure that HCLK not exceed the maximum allowed frequency
  *         (for more details refer to section above "Initialization/de-initialization functions")
  * @retval None
  */
HAL_StatusTypeDef HAL_RCC_ClockConfig(RCC_ClkInitTypeDef  *RCC_ClkInitStruct, uint32_t FLatency)
{
 800555c:	b580      	push	{r7, lr}
 800555e:	b084      	sub	sp, #16
 8005560:	af00      	add	r7, sp, #0
 8005562:	6078      	str	r0, [r7, #4]
 8005564:	6039      	str	r1, [r7, #0]
  uint32_t tickstart;

  /* Check Null pointer */
  if (RCC_ClkInitStruct == NULL)
 8005566:	687b      	ldr	r3, [r7, #4]
 8005568:	2b00      	cmp	r3, #0
 800556a:	d101      	bne.n	8005570 <HAL_RCC_ClockConfig+0x14>
  {
    return HAL_ERROR;
 800556c:	2301      	movs	r3, #1
 800556e:	e0cc      	b.n	800570a <HAL_RCC_ClockConfig+0x1ae>
  /* To correctly read data from FLASH memory, the number of wait states (LATENCY)
    must be correctly programmed according to the frequency of the CPU clock
    (HCLK) and the supply voltage of the device. */

  /* Increasing the number of wait states because of higher CPU frequency */
  if (FLatency > __HAL_FLASH_GET_LATENCY())
 8005570:	4b68      	ldr	r3, [pc, #416]	@ (8005714 <HAL_RCC_ClockConfig+0x1b8>)
 8005572:	681b      	ldr	r3, [r3, #0]
 8005574:	f003 030f 	and.w	r3, r3, #15
 8005578:	683a      	ldr	r2, [r7, #0]
 800557a:	429a      	cmp	r2, r3
 800557c:	d90c      	bls.n	8005598 <HAL_RCC_ClockConfig+0x3c>
  {
    /* Program the new number of wait states to the LATENCY bits in the FLASH_ACR register */
    __HAL_FLASH_SET_LATENCY(FLatency);
 800557e:	4b65      	ldr	r3, [pc, #404]	@ (8005714 <HAL_RCC_ClockConfig+0x1b8>)
 8005580:	683a      	ldr	r2, [r7, #0]
 8005582:	b2d2      	uxtb	r2, r2
 8005584:	701a      	strb	r2, [r3, #0]

    /* Check that the new number of wait states is taken into account to access the Flash
    memory by reading the FLASH_ACR register */
    if (__HAL_FLASH_GET_LATENCY() != FLatency)
 8005586:	4b63      	ldr	r3, [pc, #396]	@ (8005714 <HAL_RCC_ClockConfig+0x1b8>)
 8005588:	681b      	ldr	r3, [r3, #0]
 800558a:	f003 030f 	and.w	r3, r3, #15
 800558e:	683a      	ldr	r2, [r7, #0]
 8005590:	429a      	cmp	r2, r3
 8005592:	d001      	beq.n	8005598 <HAL_RCC_ClockConfig+0x3c>
    {
      return HAL_ERROR;
 8005594:	2301      	movs	r3, #1
 8005596:	e0b8      	b.n	800570a <HAL_RCC_ClockConfig+0x1ae>
    }
  }

  /*-------------------------- HCLK Configuration --------------------------*/
  if (((RCC_ClkInitStruct->ClockType) & RCC_CLOCKTYPE_HCLK) == RCC_CLOCKTYPE_HCLK)
 8005598:	687b      	ldr	r3, [r7, #4]
 800559a:	681b      	ldr	r3, [r3, #0]
 800559c:	f003 0302 	and.w	r3, r3, #2
 80055a0:	2b00      	cmp	r3, #0
 80055a2:	d020      	beq.n	80055e6 <HAL_RCC_ClockConfig+0x8a>
  {
    /* Set the highest APBx dividers in order to ensure that we do not go through
       a non-spec phase whatever we decrease or increase HCLK. */
    if (((RCC_ClkInitStruct->ClockType) & RCC_CLOCKTYPE_PCLK1) == RCC_CLOCKTYPE_PCLK1)
 80055a4:	687b      	ldr	r3, [r7, #4]
 80055a6:	681b      	ldr	r3, [r3, #0]
 80055a8:	f003 0304 	and.w	r3, r3, #4
 80055ac:	2b00      	cmp	r3, #0
 80055ae:	d005      	beq.n	80055bc <HAL_RCC_ClockConfig+0x60>
    {
      MODIFY_REG(RCC->CFGR, RCC_CFGR_PPRE1, RCC_HCLK_DIV16);
 80055b0:	4b59      	ldr	r3, [pc, #356]	@ (8005718 <HAL_RCC_ClockConfig+0x1bc>)
 80055b2:	689b      	ldr	r3, [r3, #8]
 80055b4:	4a58      	ldr	r2, [pc, #352]	@ (8005718 <HAL_RCC_ClockConfig+0x1bc>)
 80055b6:	f443 53e0 	orr.w	r3, r3, #7168	@ 0x1c00
 80055ba:	6093      	str	r3, [r2, #8]
    }

    if (((RCC_ClkInitStruct->ClockType) & RCC_CLOCKTYPE_PCLK2) == RCC_CLOCKTYPE_PCLK2)
 80055bc:	687b      	ldr	r3, [r7, #4]
 80055be:	681b      	ldr	r3, [r3, #0]
 80055c0:	f003 0308 	and.w	r3, r3, #8
 80055c4:	2b00      	cmp	r3, #0
 80055c6:	d005      	beq.n	80055d4 <HAL_RCC_ClockConfig+0x78>
    {
      MODIFY_REG(RCC->CFGR, RCC_CFGR_PPRE2, (RCC_HCLK_DIV16 << 3));
 80055c8:	4b53      	ldr	r3, [pc, #332]	@ (8005718 <HAL_RCC_ClockConfig+0x1bc>)
 80055ca:	689b      	ldr	r3, [r3, #8]
 80055cc:	4a52      	ldr	r2, [pc, #328]	@ (8005718 <HAL_RCC_ClockConfig+0x1bc>)
 80055ce:	f443 4360 	orr.w	r3, r3, #57344	@ 0xe000
 80055d2:	6093      	str	r3, [r2, #8]
    }

    assert_param(IS_RCC_HCLK(RCC_ClkInitStruct->AHBCLKDivider));
    MODIFY_REG(RCC->CFGR, RCC_CFGR_HPRE, RCC_ClkInitStruct->AHBCLKDivider);
 80055d4:	4b50      	ldr	r3, [pc, #320]	@ (8005718 <HAL_RCC_ClockConfig+0x1bc>)
 80055d6:	689b      	ldr	r3, [r3, #8]
 80055d8:	f023 02f0 	bic.w	r2, r3, #240	@ 0xf0
 80055dc:	687b      	ldr	r3, [r7, #4]
 80055de:	689b      	ldr	r3, [r3, #8]
 80055e0:	494d      	ldr	r1, [pc, #308]	@ (8005718 <HAL_RCC_ClockConfig+0x1bc>)
 80055e2:	4313      	orrs	r3, r2
 80055e4:	608b      	str	r3, [r1, #8]
  }

  /*------------------------- SYSCLK Configuration ---------------------------*/
  if (((RCC_ClkInitStruct->ClockType) & RCC_CLOCKTYPE_SYSCLK) == RCC_CLOCKTYPE_SYSCLK)
 80055e6:	687b      	ldr	r3, [r7, #4]
 80055e8:	681b      	ldr	r3, [r3, #0]
 80055ea:	f003 0301 	and.w	r3, r3, #1
 80055ee:	2b00      	cmp	r3, #0
 80055f0:	d044      	beq.n	800567c <HAL_RCC_ClockConfig+0x120>
  {
    assert_param(IS_RCC_SYSCLKSOURCE(RCC_ClkInitStruct->SYSCLKSource));

    /* HSE is selected as System Clock Source */
    if (RCC_ClkInitStruct->SYSCLKSource == RCC_SYSCLKSOURCE_HSE)
 80055f2:	687b      	ldr	r3, [r7, #4]
 80055f4:	685b      	ldr	r3, [r3, #4]
 80055f6:	2b01      	cmp	r3, #1
 80055f8:	d107      	bne.n	800560a <HAL_RCC_ClockConfig+0xae>
    {
      /* Check the HSE ready flag */
      if (__HAL_RCC_GET_FLAG(RCC_FLAG_HSERDY) == RESET)
 80055fa:	4b47      	ldr	r3, [pc, #284]	@ (8005718 <HAL_RCC_ClockConfig+0x1bc>)
 80055fc:	681b      	ldr	r3, [r3, #0]
 80055fe:	f403 3300 	and.w	r3, r3, #131072	@ 0x20000
 8005602:	2b00      	cmp	r3, #0
 8005604:	d119      	bne.n	800563a <HAL_RCC_ClockConfig+0xde>
      {
        return HAL_ERROR;
 8005606:	2301      	movs	r3, #1
 8005608:	e07f      	b.n	800570a <HAL_RCC_ClockConfig+0x1ae>
      }
    }
    /* PLL is selected as System Clock Source */
    else if ((RCC_ClkInitStruct->SYSCLKSource == RCC_SYSCLKSOURCE_PLLCLK)   ||
 800560a:	687b      	ldr	r3, [r7, #4]
 800560c:	685b      	ldr	r3, [r3, #4]
 800560e:	2b02      	cmp	r3, #2
 8005610:	d003      	beq.n	800561a <HAL_RCC_ClockConfig+0xbe>
             (RCC_ClkInitStruct->SYSCLKSource == RCC_SYSCLKSOURCE_PLLRCLK))
 8005612:	687b      	ldr	r3, [r7, #4]
 8005614:	685b      	ldr	r3, [r3, #4]
    else if ((RCC_ClkInitStruct->SYSCLKSource == RCC_SYSCLKSOURCE_PLLCLK)   ||
 8005616:	2b03      	cmp	r3, #3
 8005618:	d107      	bne.n	800562a <HAL_RCC_ClockConfig+0xce>
    {
      /* Check the PLL ready flag */
      if (__HAL_RCC_GET_FLAG(RCC_FLAG_PLLRDY) == RESET)
 800561a:	4b3f      	ldr	r3, [pc, #252]	@ (8005718 <HAL_RCC_ClockConfig+0x1bc>)
 800561c:	681b      	ldr	r3, [r3, #0]
 800561e:	f003 7300 	and.w	r3, r3, #33554432	@ 0x2000000
 8005622:	2b00      	cmp	r3, #0
 8005624:	d109      	bne.n	800563a <HAL_RCC_ClockConfig+0xde>
      {
        return HAL_ERROR;
 8005626:	2301      	movs	r3, #1
 8005628:	e06f      	b.n	800570a <HAL_RCC_ClockConfig+0x1ae>
    }
    /* HSI is selected as System Clock Source */
    else
    {
      /* Check the HSI ready flag */
      if (__HAL_RCC_GET_FLAG(RCC_FLAG_HSIRDY) == RESET)
 800562a:	4b3b      	ldr	r3, [pc, #236]	@ (8005718 <HAL_RCC_ClockConfig+0x1bc>)
 800562c:	681b      	ldr	r3, [r3, #0]
 800562e:	f003 0302 	and.w	r3, r3, #2
 8005632:	2b00      	cmp	r3, #0
 8005634:	d101      	bne.n	800563a <HAL_RCC_ClockConfig+0xde>
      {
        return HAL_ERROR;
 8005636:	2301      	movs	r3, #1
 8005638:	e067      	b.n	800570a <HAL_RCC_ClockConfig+0x1ae>
      }
    }

    __HAL_RCC_SYSCLK_CONFIG(RCC_ClkInitStruct->SYSCLKSource);
 800563a:	4b37      	ldr	r3, [pc, #220]	@ (8005718 <HAL_RCC_ClockConfig+0x1bc>)
 800563c:	689b      	ldr	r3, [r3, #8]
 800563e:	f023 0203 	bic.w	r2, r3, #3
 8005642:	687b      	ldr	r3, [r7, #4]
 8005644:	685b      	ldr	r3, [r3, #4]
 8005646:	4934      	ldr	r1, [pc, #208]	@ (8005718 <HAL_RCC_ClockConfig+0x1bc>)
 8005648:	4313      	orrs	r3, r2
 800564a:	608b      	str	r3, [r1, #8]

    /* Get Start Tick */
    tickstart = HAL_GetTick();
 800564c:	f7fd f982 	bl	8002954 <HAL_GetTick>
 8005650:	60f8      	str	r0, [r7, #12]

    while (__HAL_RCC_GET_SYSCLK_SOURCE() != (RCC_ClkInitStruct->SYSCLKSource << RCC_CFGR_SWS_Pos))
 8005652:	e00a      	b.n	800566a <HAL_RCC_ClockConfig+0x10e>
    {
      if ((HAL_GetTick() - tickstart) > CLOCKSWITCH_TIMEOUT_VALUE)
 8005654:	f7fd f97e 	bl	8002954 <HAL_GetTick>
 8005658:	4602      	mov	r2, r0
 800565a:	68fb      	ldr	r3, [r7, #12]
 800565c:	1ad3      	subs	r3, r2, r3
 800565e:	f241 3288 	movw	r2, #5000	@ 0x1388
 8005662:	4293      	cmp	r3, r2
 8005664:	d901      	bls.n	800566a <HAL_RCC_ClockConfig+0x10e>
      {
        return HAL_TIMEOUT;
 8005666:	2303      	movs	r3, #3
 8005668:	e04f      	b.n	800570a <HAL_RCC_ClockConfig+0x1ae>
    while (__HAL_RCC_GET_SYSCLK_SOURCE() != (RCC_ClkInitStruct->SYSCLKSource << RCC_CFGR_SWS_Pos))
 800566a:	4b2b      	ldr	r3, [pc, #172]	@ (8005718 <HAL_RCC_ClockConfig+0x1bc>)
 800566c:	689b      	ldr	r3, [r3, #8]
 800566e:	f003 020c 	and.w	r2, r3, #12
 8005672:	687b      	ldr	r3, [r7, #4]
 8005674:	685b      	ldr	r3, [r3, #4]
 8005676:	009b      	lsls	r3, r3, #2
 8005678:	429a      	cmp	r2, r3
 800567a:	d1eb      	bne.n	8005654 <HAL_RCC_ClockConfig+0xf8>
      }
    }
  }

  /* Decreasing the number of wait states because of lower CPU frequency */
  if (FLatency < __HAL_FLASH_GET_LATENCY())
 800567c:	4b25      	ldr	r3, [pc, #148]	@ (8005714 <HAL_RCC_ClockConfig+0x1b8>)
 800567e:	681b      	ldr	r3, [r3, #0]
 8005680:	f003 030f 	and.w	r3, r3, #15
 8005684:	683a      	ldr	r2, [r7, #0]
 8005686:	429a      	cmp	r2, r3
 8005688:	d20c      	bcs.n	80056a4 <HAL_RCC_ClockConfig+0x148>
  {
    /* Program the new number of wait states to the LATENCY bits in the FLASH_ACR register */
    __HAL_FLASH_SET_LATENCY(FLatency);
 800568a:	4b22      	ldr	r3, [pc, #136]	@ (8005714 <HAL_RCC_ClockConfig+0x1b8>)
 800568c:	683a      	ldr	r2, [r7, #0]
 800568e:	b2d2      	uxtb	r2, r2
 8005690:	701a      	strb	r2, [r3, #0]

    /* Check that the new number of wait states is taken into account to access the Flash
    memory by reading the FLASH_ACR register */
    if (__HAL_FLASH_GET_LATENCY() != FLatency)
 8005692:	4b20      	ldr	r3, [pc, #128]	@ (8005714 <HAL_RCC_ClockConfig+0x1b8>)
 8005694:	681b      	ldr	r3, [r3, #0]
 8005696:	f003 030f 	and.w	r3, r3, #15
 800569a:	683a      	ldr	r2, [r7, #0]
 800569c:	429a      	cmp	r2, r3
 800569e:	d001      	beq.n	80056a4 <HAL_RCC_ClockConfig+0x148>
    {
      return HAL_ERROR;
 80056a0:	2301      	movs	r3, #1
 80056a2:	e032      	b.n	800570a <HAL_RCC_ClockConfig+0x1ae>
    }
  }

  /*-------------------------- PCLK1 Configuration ---------------------------*/
  if (((RCC_ClkInitStruct->ClockType) & RCC_CLOCKTYPE_PCLK1) == RCC_CLOCKTYPE_PCLK1)
 80056a4:	687b      	ldr	r3, [r7, #4]
 80056a6:	681b      	ldr	r3, [r3, #0]
 80056a8:	f003 0304 	and.w	r3, r3, #4
 80056ac:	2b00      	cmp	r3, #0
 80056ae:	d008      	beq.n	80056c2 <HAL_RCC_ClockConfig+0x166>
  {
    assert_param(IS_RCC_PCLK(RCC_ClkInitStruct->APB1CLKDivider));
    MODIFY_REG(RCC->CFGR, RCC_CFGR_PPRE1, RCC_ClkInitStruct->APB1CLKDivider);
 80056b0:	4b19      	ldr	r3, [pc, #100]	@ (8005718 <HAL_RCC_ClockConfig+0x1bc>)
 80056b2:	689b      	ldr	r3, [r3, #8]
 80056b4:	f423 52e0 	bic.w	r2, r3, #7168	@ 0x1c00
 80056b8:	687b      	ldr	r3, [r7, #4]
 80056ba:	68db      	ldr	r3, [r3, #12]
 80056bc:	4916      	ldr	r1, [pc, #88]	@ (8005718 <HAL_RCC_ClockConfig+0x1bc>)
 80056be:	4313      	orrs	r3, r2
 80056c0:	608b      	str	r3, [r1, #8]
  }

  /*-------------------------- PCLK2 Configuration ---------------------------*/
  if (((RCC_ClkInitStruct->ClockType) & RCC_CLOCKTYPE_PCLK2) == RCC_CLOCKTYPE_PCLK2)
 80056c2:	687b      	ldr	r3, [r7, #4]
 80056c4:	681b      	ldr	r3, [r3, #0]
 80056c6:	f003 0308 	and.w	r3, r3, #8
 80056ca:	2b00      	cmp	r3, #0
 80056cc:	d009      	beq.n	80056e2 <HAL_RCC_ClockConfig+0x186>
  {
    assert_param(IS_RCC_PCLK(RCC_ClkInitStruct->APB2CLKDivider));
    MODIFY_REG(RCC->CFGR, RCC_CFGR_PPRE2, ((RCC_ClkInitStruct->APB2CLKDivider) << 3U));
 80056ce:	4b12      	ldr	r3, [pc, #72]	@ (8005718 <HAL_RCC_ClockConfig+0x1bc>)
 80056d0:	689b      	ldr	r3, [r3, #8]
 80056d2:	f423 4260 	bic.w	r2, r3, #57344	@ 0xe000
 80056d6:	687b      	ldr	r3, [r7, #4]
 80056d8:	691b      	ldr	r3, [r3, #16]
 80056da:	00db      	lsls	r3, r3, #3
 80056dc:	490e      	ldr	r1, [pc, #56]	@ (8005718 <HAL_RCC_ClockConfig+0x1bc>)
 80056de:	4313      	orrs	r3, r2
 80056e0:	608b      	str	r3, [r1, #8]
  }

  /* Update the SystemCoreClock global variable */
  SystemCoreClock = HAL_RCC_GetSysClockFreq() >> AHBPrescTable[(RCC->CFGR & RCC_CFGR_HPRE) >> RCC_CFGR_HPRE_Pos];
 80056e2:	f000 f841 	bl	8005768 <HAL_RCC_GetSysClockFreq>
 80056e6:	4602      	mov	r2, r0
 80056e8:	4b0b      	ldr	r3, [pc, #44]	@ (8005718 <HAL_RCC_ClockConfig+0x1bc>)
 80056ea:	689b      	ldr	r3, [r3, #8]
 80056ec:	091b      	lsrs	r3, r3, #4
 80056ee:	f003 030f 	and.w	r3, r3, #15
 80056f2:	490a      	ldr	r1, [pc, #40]	@ (800571c <HAL_RCC_ClockConfig+0x1c0>)
 80056f4:	5ccb      	ldrb	r3, [r1, r3]
 80056f6:	fa22 f303 	lsr.w	r3, r2, r3
 80056fa:	4a09      	ldr	r2, [pc, #36]	@ (8005720 <HAL_RCC_ClockConfig+0x1c4>)
 80056fc:	6013      	str	r3, [r2, #0]

  /* Configure the source of time base considering new system clocks settings */
  HAL_InitTick(uwTickPrio);
 80056fe:	4b09      	ldr	r3, [pc, #36]	@ (8005724 <HAL_RCC_ClockConfig+0x1c8>)
 8005700:	681b      	ldr	r3, [r3, #0]
 8005702:	4618      	mov	r0, r3
 8005704:	f7fd f8e2 	bl	80028cc <HAL_InitTick>

  return HAL_OK;
 8005708:	2300      	movs	r3, #0
}
 800570a:	4618      	mov	r0, r3
 800570c:	3710      	adds	r7, #16
 800570e:	46bd      	mov	sp, r7
 8005710:	bd80      	pop	{r7, pc}
 8005712:	bf00      	nop
 8005714:	40023c00 	.word	0x40023c00
 8005718:	40023800 	.word	0x40023800
 800571c:	08024538 	.word	0x08024538
 8005720:	20000008 	.word	0x20000008
 8005724:	20000018 	.word	0x20000018

08005728 <HAL_RCC_GetHCLKFreq>:
  * @note   The SystemCoreClock CMSIS variable is used to store System Clock Frequency
  *         and updated within this function
  * @retval HCLK frequency
  */
uint32_t HAL_RCC_GetHCLKFreq(void)
{
 8005728:	b480      	push	{r7}
 800572a:	af00      	add	r7, sp, #0
  return SystemCoreClock;
 800572c:	4b03      	ldr	r3, [pc, #12]	@ (800573c <HAL_RCC_GetHCLKFreq+0x14>)
 800572e:	681b      	ldr	r3, [r3, #0]
}
 8005730:	4618      	mov	r0, r3
 8005732:	46bd      	mov	sp, r7
 8005734:	f85d 7b04 	ldr.w	r7, [sp], #4
 8005738:	4770      	bx	lr
 800573a:	bf00      	nop
 800573c:	20000008 	.word	0x20000008

08005740 <HAL_RCC_GetPCLK1Freq>:
  * @note   Each time PCLK1 changes, this function must be called to update the
  *         right PCLK1 value. Otherwise, any configuration based on this function will be incorrect.
  * @retval PCLK1 frequency
  */
uint32_t HAL_RCC_GetPCLK1Freq(void)
{
 8005740:	b580      	push	{r7, lr}
 8005742:	af00      	add	r7, sp, #0
  /* Get HCLK source and Compute PCLK1 frequency ---------------------------*/
  return (HAL_RCC_GetHCLKFreq() >> APBPrescTable[(RCC->CFGR & RCC_CFGR_PPRE1) >> RCC_CFGR_PPRE1_Pos]);
 8005744:	f7ff fff0 	bl	8005728 <HAL_RCC_GetHCLKFreq>
 8005748:	4602      	mov	r2, r0
 800574a:	4b05      	ldr	r3, [pc, #20]	@ (8005760 <HAL_RCC_GetPCLK1Freq+0x20>)
 800574c:	689b      	ldr	r3, [r3, #8]
 800574e:	0a9b      	lsrs	r3, r3, #10
 8005750:	f003 0307 	and.w	r3, r3, #7
 8005754:	4903      	ldr	r1, [pc, #12]	@ (8005764 <HAL_RCC_GetPCLK1Freq+0x24>)
 8005756:	5ccb      	ldrb	r3, [r1, r3]
 8005758:	fa22 f303 	lsr.w	r3, r2, r3
}
 800575c:	4618      	mov	r0, r3
 800575e:	bd80      	pop	{r7, pc}
 8005760:	40023800 	.word	0x40023800
 8005764:	08024548 	.word	0x08024548

08005768 <HAL_RCC_GetSysClockFreq>:
  *
  *
  * @retval SYSCLK frequency
  */
uint32_t HAL_RCC_GetSysClockFreq(void)
{
 8005768:	e92d 4fb0 	stmdb	sp!, {r4, r5, r7, r8, r9, sl, fp, lr}
 800576c:	b0ae      	sub	sp, #184	@ 0xb8
 800576e:	af00      	add	r7, sp, #0
  uint32_t pllm = 0U;
 8005770:	2300      	movs	r3, #0
 8005772:	f8c7 30ac 	str.w	r3, [r7, #172]	@ 0xac
  uint32_t pllvco = 0U;
 8005776:	2300      	movs	r3, #0
 8005778:	f8c7 30b4 	str.w	r3, [r7, #180]	@ 0xb4
  uint32_t pllp = 0U;
 800577c:	2300      	movs	r3, #0
 800577e:	f8c7 30a8 	str.w	r3, [r7, #168]	@ 0xa8
  uint32_t pllr = 0U;
 8005782:	2300      	movs	r3, #0
 8005784:	f8c7 30a4 	str.w	r3, [r7, #164]	@ 0xa4
  uint32_t sysclockfreq = 0U;
 8005788:	2300      	movs	r3, #0
 800578a:	f8c7 30b0 	str.w	r3, [r7, #176]	@ 0xb0

  /* Get SYSCLK source -------------------------------------------------------*/
  switch (RCC->CFGR & RCC_CFGR_SWS)
 800578e:	4bcb      	ldr	r3, [pc, #812]	@ (8005abc <HAL_RCC_GetSysClockFreq+0x354>)
 8005790:	689b      	ldr	r3, [r3, #8]
 8005792:	f003 030c 	and.w	r3, r3, #12
 8005796:	2b0c      	cmp	r3, #12
 8005798:	f200 8206 	bhi.w	8005ba8 <HAL_RCC_GetSysClockFreq+0x440>
 800579c:	a201      	add	r2, pc, #4	@ (adr r2, 80057a4 <HAL_RCC_GetSysClockFreq+0x3c>)
 800579e:	f852 f023 	ldr.w	pc, [r2, r3, lsl #2]
 80057a2:	bf00      	nop
 80057a4:	080057d9 	.word	0x080057d9
 80057a8:	08005ba9 	.word	0x08005ba9
 80057ac:	08005ba9 	.word	0x08005ba9
 80057b0:	08005ba9 	.word	0x08005ba9
 80057b4:	080057e1 	.word	0x080057e1
 80057b8:	08005ba9 	.word	0x08005ba9
 80057bc:	08005ba9 	.word	0x08005ba9
 80057c0:	08005ba9 	.word	0x08005ba9
 80057c4:	080057e9 	.word	0x080057e9
 80057c8:	08005ba9 	.word	0x08005ba9
 80057cc:	08005ba9 	.word	0x08005ba9
 80057d0:	08005ba9 	.word	0x08005ba9
 80057d4:	080059d9 	.word	0x080059d9
  {
    case RCC_CFGR_SWS_HSI:  /* HSI used as system clock source */
    {
      sysclockfreq = HSI_VALUE;
 80057d8:	4bb9      	ldr	r3, [pc, #740]	@ (8005ac0 <HAL_RCC_GetSysClockFreq+0x358>)
 80057da:	f8c7 30b0 	str.w	r3, [r7, #176]	@ 0xb0
      break;
 80057de:	e1e7      	b.n	8005bb0 <HAL_RCC_GetSysClockFreq+0x448>
    }
    case RCC_CFGR_SWS_HSE:  /* HSE used as system clock  source */
    {
      sysclockfreq = HSE_VALUE;
 80057e0:	4bb8      	ldr	r3, [pc, #736]	@ (8005ac4 <HAL_RCC_GetSysClockFreq+0x35c>)
 80057e2:	f8c7 30b0 	str.w	r3, [r7, #176]	@ 0xb0
      break;
 80057e6:	e1e3      	b.n	8005bb0 <HAL_RCC_GetSysClockFreq+0x448>
    }
    case RCC_CFGR_SWS_PLL:  /* PLL/PLLP used as system clock  source */
    {
      /* PLL_VCO = (HSE_VALUE or HSI_VALUE / PLLM) * PLLN
      SYSCLK = PLL_VCO / PLLP */
      pllm = RCC->PLLCFGR & RCC_PLLCFGR_PLLM;
 80057e8:	4bb4      	ldr	r3, [pc, #720]	@ (8005abc <HAL_RCC_GetSysClockFreq+0x354>)
 80057ea:	685b      	ldr	r3, [r3, #4]
 80057ec:	f003 033f 	and.w	r3, r3, #63	@ 0x3f
 80057f0:	f8c7 30ac 	str.w	r3, [r7, #172]	@ 0xac
      if (__HAL_RCC_GET_PLL_OSCSOURCE() != RCC_PLLSOURCE_HSI)
 80057f4:	4bb1      	ldr	r3, [pc, #708]	@ (8005abc <HAL_RCC_GetSysClockFreq+0x354>)
 80057f6:	685b      	ldr	r3, [r3, #4]
 80057f8:	f403 0380 	and.w	r3, r3, #4194304	@ 0x400000
 80057fc:	2b00      	cmp	r3, #0
 80057fe:	d071      	beq.n	80058e4 <HAL_RCC_GetSysClockFreq+0x17c>
      {
        /* HSE used as PLL clock source */
        pllvco = (uint32_t)((((uint64_t) HSE_VALUE * ((uint64_t)((RCC->PLLCFGR & RCC_PLLCFGR_PLLN) >> RCC_PLLCFGR_PLLN_Pos)))) / (uint64_t)pllm);
 8005800:	4bae      	ldr	r3, [pc, #696]	@ (8005abc <HAL_RCC_GetSysClockFreq+0x354>)
 8005802:	685b      	ldr	r3, [r3, #4]
 8005804:	099b      	lsrs	r3, r3, #6
 8005806:	2200      	movs	r2, #0
 8005808:	f8c7 3098 	str.w	r3, [r7, #152]	@ 0x98
 800580c:	f8c7 209c 	str.w	r2, [r7, #156]	@ 0x9c
 8005810:	f8d7 3098 	ldr.w	r3, [r7, #152]	@ 0x98
 8005814:	f3c3 0308 	ubfx	r3, r3, #0, #9
 8005818:	f8c7 3090 	str.w	r3, [r7, #144]	@ 0x90
 800581c:	2300      	movs	r3, #0
 800581e:	f8c7 3094 	str.w	r3, [r7, #148]	@ 0x94
 8005822:	e9d7 4524 	ldrd	r4, r5, [r7, #144]	@ 0x90
 8005826:	4622      	mov	r2, r4
 8005828:	462b      	mov	r3, r5
 800582a:	f04f 0000 	mov.w	r0, #0
 800582e:	f04f 0100 	mov.w	r1, #0
 8005832:	0159      	lsls	r1, r3, #5
 8005834:	ea41 61d2 	orr.w	r1, r1, r2, lsr #27
 8005838:	0150      	lsls	r0, r2, #5
 800583a:	4602      	mov	r2, r0
 800583c:	460b      	mov	r3, r1
 800583e:	4621      	mov	r1, r4
 8005840:	1a51      	subs	r1, r2, r1
 8005842:	6439      	str	r1, [r7, #64]	@ 0x40
 8005844:	4629      	mov	r1, r5
 8005846:	eb63 0301 	sbc.w	r3, r3, r1
 800584a:	647b      	str	r3, [r7, #68]	@ 0x44
 800584c:	f04f 0200 	mov.w	r2, #0
 8005850:	f04f 0300 	mov.w	r3, #0
 8005854:	e9d7 8910 	ldrd	r8, r9, [r7, #64]	@ 0x40
 8005858:	4649      	mov	r1, r9
 800585a:	018b      	lsls	r3, r1, #6
 800585c:	4641      	mov	r1, r8
 800585e:	ea43 6391 	orr.w	r3, r3, r1, lsr #26
 8005862:	4641      	mov	r1, r8
 8005864:	018a      	lsls	r2, r1, #6
 8005866:	4641      	mov	r1, r8
 8005868:	1a51      	subs	r1, r2, r1
 800586a:	63b9      	str	r1, [r7, #56]	@ 0x38
 800586c:	4649      	mov	r1, r9
 800586e:	eb63 0301 	sbc.w	r3, r3, r1
 8005872:	63fb      	str	r3, [r7, #60]	@ 0x3c
 8005874:	f04f 0200 	mov.w	r2, #0
 8005878:	f04f 0300 	mov.w	r3, #0
 800587c:	e9d7 890e 	ldrd	r8, r9, [r7, #56]	@ 0x38
 8005880:	4649      	mov	r1, r9
 8005882:	00cb      	lsls	r3, r1, #3
 8005884:	4641      	mov	r1, r8
 8005886:	ea43 7351 	orr.w	r3, r3, r1, lsr #29
 800588a:	4641      	mov	r1, r8
 800588c:	00ca      	lsls	r2, r1, #3
 800588e:	4610      	mov	r0, r2
 8005890:	4619      	mov	r1, r3
 8005892:	4603      	mov	r3, r0
 8005894:	4622      	mov	r2, r4
 8005896:	189b      	adds	r3, r3, r2
 8005898:	633b      	str	r3, [r7, #48]	@ 0x30
 800589a:	462b      	mov	r3, r5
 800589c:	460a      	mov	r2, r1
 800589e:	eb42 0303 	adc.w	r3, r2, r3
 80058a2:	637b      	str	r3, [r7, #52]	@ 0x34
 80058a4:	f04f 0200 	mov.w	r2, #0
 80058a8:	f04f 0300 	mov.w	r3, #0
 80058ac:	e9d7 450c 	ldrd	r4, r5, [r7, #48]	@ 0x30
 80058b0:	4629      	mov	r1, r5
 80058b2:	024b      	lsls	r3, r1, #9
 80058b4:	4621      	mov	r1, r4
 80058b6:	ea43 53d1 	orr.w	r3, r3, r1, lsr #23
 80058ba:	4621      	mov	r1, r4
 80058bc:	024a      	lsls	r2, r1, #9
 80058be:	4610      	mov	r0, r2
 80058c0:	4619      	mov	r1, r3
 80058c2:	f8d7 30ac 	ldr.w	r3, [r7, #172]	@ 0xac
 80058c6:	2200      	movs	r2, #0
 80058c8:	f8c7 3088 	str.w	r3, [r7, #136]	@ 0x88
 80058cc:	f8c7 208c 	str.w	r2, [r7, #140]	@ 0x8c
 80058d0:	e9d7 2322 	ldrd	r2, r3, [r7, #136]	@ 0x88
 80058d4:	f7fb f992 	bl	8000bfc <__aeabi_uldivmod>
 80058d8:	4602      	mov	r2, r0
 80058da:	460b      	mov	r3, r1
 80058dc:	4613      	mov	r3, r2
 80058de:	f8c7 30b4 	str.w	r3, [r7, #180]	@ 0xb4
 80058e2:	e067      	b.n	80059b4 <HAL_RCC_GetSysClockFreq+0x24c>
      }
      else
      {
        /* HSI used as PLL clock source */
        pllvco = (uint32_t)((((uint64_t) HSI_VALUE * ((uint64_t)((RCC->PLLCFGR & RCC_PLLCFGR_PLLN) >> RCC_PLLCFGR_PLLN_Pos)))) / (uint64_t)pllm);
 80058e4:	4b75      	ldr	r3, [pc, #468]	@ (8005abc <HAL_RCC_GetSysClockFreq+0x354>)
 80058e6:	685b      	ldr	r3, [r3, #4]
 80058e8:	099b      	lsrs	r3, r3, #6
 80058ea:	2200      	movs	r2, #0
 80058ec:	f8c7 3080 	str.w	r3, [r7, #128]	@ 0x80
 80058f0:	f8c7 2084 	str.w	r2, [r7, #132]	@ 0x84
 80058f4:	f8d7 3080 	ldr.w	r3, [r7, #128]	@ 0x80
 80058f8:	f3c3 0308 	ubfx	r3, r3, #0, #9
 80058fc:	67bb      	str	r3, [r7, #120]	@ 0x78
 80058fe:	2300      	movs	r3, #0
 8005900:	67fb      	str	r3, [r7, #124]	@ 0x7c
 8005902:	e9d7 451e 	ldrd	r4, r5, [r7, #120]	@ 0x78
 8005906:	4622      	mov	r2, r4
 8005908:	462b      	mov	r3, r5
 800590a:	f04f 0000 	mov.w	r0, #0
 800590e:	f04f 0100 	mov.w	r1, #0
 8005912:	0159      	lsls	r1, r3, #5
 8005914:	ea41 61d2 	orr.w	r1, r1, r2, lsr #27
 8005918:	0150      	lsls	r0, r2, #5
 800591a:	4602      	mov	r2, r0
 800591c:	460b      	mov	r3, r1
 800591e:	4621      	mov	r1, r4
 8005920:	1a51      	subs	r1, r2, r1
 8005922:	62b9      	str	r1, [r7, #40]	@ 0x28
 8005924:	4629      	mov	r1, r5
 8005926:	eb63 0301 	sbc.w	r3, r3, r1
 800592a:	62fb      	str	r3, [r7, #44]	@ 0x2c
 800592c:	f04f 0200 	mov.w	r2, #0
 8005930:	f04f 0300 	mov.w	r3, #0
 8005934:	e9d7 890a 	ldrd	r8, r9, [r7, #40]	@ 0x28
 8005938:	4649      	mov	r1, r9
 800593a:	018b      	lsls	r3, r1, #6
 800593c:	4641      	mov	r1, r8
 800593e:	ea43 6391 	orr.w	r3, r3, r1, lsr #26
 8005942:	4641      	mov	r1, r8
 8005944:	018a      	lsls	r2, r1, #6
 8005946:	4641      	mov	r1, r8
 8005948:	ebb2 0a01 	subs.w	sl, r2, r1
 800594c:	4649      	mov	r1, r9
 800594e:	eb63 0b01 	sbc.w	fp, r3, r1
 8005952:	f04f 0200 	mov.w	r2, #0
 8005956:	f04f 0300 	mov.w	r3, #0
 800595a:	ea4f 03cb 	mov.w	r3, fp, lsl #3
 800595e:	ea43 735a 	orr.w	r3, r3, sl, lsr #29
 8005962:	ea4f 02ca 	mov.w	r2, sl, lsl #3
 8005966:	4692      	mov	sl, r2
 8005968:	469b      	mov	fp, r3
 800596a:	4623      	mov	r3, r4
 800596c:	eb1a 0303 	adds.w	r3, sl, r3
 8005970:	623b      	str	r3, [r7, #32]
 8005972:	462b      	mov	r3, r5
 8005974:	eb4b 0303 	adc.w	r3, fp, r3
 8005978:	627b      	str	r3, [r7, #36]	@ 0x24
 800597a:	f04f 0200 	mov.w	r2, #0
 800597e:	f04f 0300 	mov.w	r3, #0
 8005982:	e9d7 4508 	ldrd	r4, r5, [r7, #32]
 8005986:	4629      	mov	r1, r5
 8005988:	028b      	lsls	r3, r1, #10
 800598a:	4621      	mov	r1, r4
 800598c:	ea43 5391 	orr.w	r3, r3, r1, lsr #22
 8005990:	4621      	mov	r1, r4
 8005992:	028a      	lsls	r2, r1, #10
 8005994:	4610      	mov	r0, r2
 8005996:	4619      	mov	r1, r3
 8005998:	f8d7 30ac 	ldr.w	r3, [r7, #172]	@ 0xac
 800599c:	2200      	movs	r2, #0
 800599e:	673b      	str	r3, [r7, #112]	@ 0x70
 80059a0:	677a      	str	r2, [r7, #116]	@ 0x74
 80059a2:	e9d7 231c 	ldrd	r2, r3, [r7, #112]	@ 0x70
 80059a6:	f7fb f929 	bl	8000bfc <__aeabi_uldivmod>
 80059aa:	4602      	mov	r2, r0
 80059ac:	460b      	mov	r3, r1
 80059ae:	4613      	mov	r3, r2
 80059b0:	f8c7 30b4 	str.w	r3, [r7, #180]	@ 0xb4
      }
      pllp = ((((RCC->PLLCFGR & RCC_PLLCFGR_PLLP) >> RCC_PLLCFGR_PLLP_Pos) + 1U) * 2U);
 80059b4:	4b41      	ldr	r3, [pc, #260]	@ (8005abc <HAL_RCC_GetSysClockFreq+0x354>)
 80059b6:	685b      	ldr	r3, [r3, #4]
 80059b8:	0c1b      	lsrs	r3, r3, #16
 80059ba:	f003 0303 	and.w	r3, r3, #3
 80059be:	3301      	adds	r3, #1
 80059c0:	005b      	lsls	r3, r3, #1
 80059c2:	f8c7 30a8 	str.w	r3, [r7, #168]	@ 0xa8

      sysclockfreq = pllvco / pllp;
 80059c6:	f8d7 20b4 	ldr.w	r2, [r7, #180]	@ 0xb4
 80059ca:	f8d7 30a8 	ldr.w	r3, [r7, #168]	@ 0xa8
 80059ce:	fbb2 f3f3 	udiv	r3, r2, r3
 80059d2:	f8c7 30b0 	str.w	r3, [r7, #176]	@ 0xb0
      break;
 80059d6:	e0eb      	b.n	8005bb0 <HAL_RCC_GetSysClockFreq+0x448>
    }
    case RCC_CFGR_SWS_PLLR:  /* PLL/PLLR used as system clock  source */
    {
      /* PLL_VCO = (HSE_VALUE or HSI_VALUE / PLLM) * PLLN
      SYSCLK = PLL_VCO / PLLR */
      pllm = RCC->PLLCFGR & RCC_PLLCFGR_PLLM;
 80059d8:	4b38      	ldr	r3, [pc, #224]	@ (8005abc <HAL_RCC_GetSysClockFreq+0x354>)
 80059da:	685b      	ldr	r3, [r3, #4]
 80059dc:	f003 033f 	and.w	r3, r3, #63	@ 0x3f
 80059e0:	f8c7 30ac 	str.w	r3, [r7, #172]	@ 0xac
      if (__HAL_RCC_GET_PLL_OSCSOURCE() != RCC_PLLSOURCE_HSI)
 80059e4:	4b35      	ldr	r3, [pc, #212]	@ (8005abc <HAL_RCC_GetSysClockFreq+0x354>)
 80059e6:	685b      	ldr	r3, [r3, #4]
 80059e8:	f403 0380 	and.w	r3, r3, #4194304	@ 0x400000
 80059ec:	2b00      	cmp	r3, #0
 80059ee:	d06b      	beq.n	8005ac8 <HAL_RCC_GetSysClockFreq+0x360>
      {
        /* HSE used as PLL clock source */
        pllvco = (uint32_t)((((uint64_t) HSE_VALUE * ((uint64_t)((RCC->PLLCFGR & RCC_PLLCFGR_PLLN) >> RCC_PLLCFGR_PLLN_Pos)))) / (uint64_t)pllm);
 80059f0:	4b32      	ldr	r3, [pc, #200]	@ (8005abc <HAL_RCC_GetSysClockFreq+0x354>)
 80059f2:	685b      	ldr	r3, [r3, #4]
 80059f4:	099b      	lsrs	r3, r3, #6
 80059f6:	2200      	movs	r2, #0
 80059f8:	66bb      	str	r3, [r7, #104]	@ 0x68
 80059fa:	66fa      	str	r2, [r7, #108]	@ 0x6c
 80059fc:	6ebb      	ldr	r3, [r7, #104]	@ 0x68
 80059fe:	f3c3 0308 	ubfx	r3, r3, #0, #9
 8005a02:	663b      	str	r3, [r7, #96]	@ 0x60
 8005a04:	2300      	movs	r3, #0
 8005a06:	667b      	str	r3, [r7, #100]	@ 0x64
 8005a08:	e9d7 4518 	ldrd	r4, r5, [r7, #96]	@ 0x60
 8005a0c:	4622      	mov	r2, r4
 8005a0e:	462b      	mov	r3, r5
 8005a10:	f04f 0000 	mov.w	r0, #0
 8005a14:	f04f 0100 	mov.w	r1, #0
 8005a18:	0159      	lsls	r1, r3, #5
 8005a1a:	ea41 61d2 	orr.w	r1, r1, r2, lsr #27
 8005a1e:	0150      	lsls	r0, r2, #5
 8005a20:	4602      	mov	r2, r0
 8005a22:	460b      	mov	r3, r1
 8005a24:	4621      	mov	r1, r4
 8005a26:	1a51      	subs	r1, r2, r1
 8005a28:	61b9      	str	r1, [r7, #24]
 8005a2a:	4629      	mov	r1, r5
 8005a2c:	eb63 0301 	sbc.w	r3, r3, r1
 8005a30:	61fb      	str	r3, [r7, #28]
 8005a32:	f04f 0200 	mov.w	r2, #0
 8005a36:	f04f 0300 	mov.w	r3, #0
 8005a3a:	e9d7 ab06 	ldrd	sl, fp, [r7, #24]
 8005a3e:	4659      	mov	r1, fp
 8005a40:	018b      	lsls	r3, r1, #6
 8005a42:	4651      	mov	r1, sl
 8005a44:	ea43 6391 	orr.w	r3, r3, r1, lsr #26
 8005a48:	4651      	mov	r1, sl
 8005a4a:	018a      	lsls	r2, r1, #6
 8005a4c:	4651      	mov	r1, sl
 8005a4e:	ebb2 0801 	subs.w	r8, r2, r1
 8005a52:	4659      	mov	r1, fp
 8005a54:	eb63 0901 	sbc.w	r9, r3, r1
 8005a58:	f04f 0200 	mov.w	r2, #0
 8005a5c:	f04f 0300 	mov.w	r3, #0
 8005a60:	ea4f 03c9 	mov.w	r3, r9, lsl #3
 8005a64:	ea43 7358 	orr.w	r3, r3, r8, lsr #29
 8005a68:	ea4f 02c8 	mov.w	r2, r8, lsl #3
 8005a6c:	4690      	mov	r8, r2
 8005a6e:	4699      	mov	r9, r3
 8005a70:	4623      	mov	r3, r4
 8005a72:	eb18 0303 	adds.w	r3, r8, r3
 8005a76:	613b      	str	r3, [r7, #16]
 8005a78:	462b      	mov	r3, r5
 8005a7a:	eb49 0303 	adc.w	r3, r9, r3
 8005a7e:	617b      	str	r3, [r7, #20]
 8005a80:	f04f 0200 	mov.w	r2, #0
 8005a84:	f04f 0300 	mov.w	r3, #0
 8005a88:	e9d7 4504 	ldrd	r4, r5, [r7, #16]
 8005a8c:	4629      	mov	r1, r5
 8005a8e:	024b      	lsls	r3, r1, #9
 8005a90:	4621      	mov	r1, r4
 8005a92:	ea43 53d1 	orr.w	r3, r3, r1, lsr #23
 8005a96:	4621      	mov	r1, r4
 8005a98:	024a      	lsls	r2, r1, #9
 8005a9a:	4610      	mov	r0, r2
 8005a9c:	4619      	mov	r1, r3
 8005a9e:	f8d7 30ac 	ldr.w	r3, [r7, #172]	@ 0xac
 8005aa2:	2200      	movs	r2, #0
 8005aa4:	65bb      	str	r3, [r7, #88]	@ 0x58
 8005aa6:	65fa      	str	r2, [r7, #92]	@ 0x5c
 8005aa8:	e9d7 2316 	ldrd	r2, r3, [r7, #88]	@ 0x58
 8005aac:	f7fb f8a6 	bl	8000bfc <__aeabi_uldivmod>
 8005ab0:	4602      	mov	r2, r0
 8005ab2:	460b      	mov	r3, r1
 8005ab4:	4613      	mov	r3, r2
 8005ab6:	f8c7 30b4 	str.w	r3, [r7, #180]	@ 0xb4
 8005aba:	e065      	b.n	8005b88 <HAL_RCC_GetSysClockFreq+0x420>
 8005abc:	40023800 	.word	0x40023800
 8005ac0:	00f42400 	.word	0x00f42400
 8005ac4:	007a1200 	.word	0x007a1200
      }
      else
      {
        /* HSI used as PLL clock source */
        pllvco = (uint32_t)((((uint64_t) HSI_VALUE * ((uint64_t)((RCC->PLLCFGR & RCC_PLLCFGR_PLLN) >> RCC_PLLCFGR_PLLN_Pos)))) / (uint64_t)pllm);
 8005ac8:	4b3d      	ldr	r3, [pc, #244]	@ (8005bc0 <HAL_RCC_GetSysClockFreq+0x458>)
 8005aca:	685b      	ldr	r3, [r3, #4]
 8005acc:	099b      	lsrs	r3, r3, #6
 8005ace:	2200      	movs	r2, #0
 8005ad0:	4618      	mov	r0, r3
 8005ad2:	4611      	mov	r1, r2
 8005ad4:	f3c0 0308 	ubfx	r3, r0, #0, #9
 8005ad8:	653b      	str	r3, [r7, #80]	@ 0x50
 8005ada:	2300      	movs	r3, #0
 8005adc:	657b      	str	r3, [r7, #84]	@ 0x54
 8005ade:	e9d7 8914 	ldrd	r8, r9, [r7, #80]	@ 0x50
 8005ae2:	4642      	mov	r2, r8
 8005ae4:	464b      	mov	r3, r9
 8005ae6:	f04f 0000 	mov.w	r0, #0
 8005aea:	f04f 0100 	mov.w	r1, #0
 8005aee:	0159      	lsls	r1, r3, #5
 8005af0:	ea41 61d2 	orr.w	r1, r1, r2, lsr #27
 8005af4:	0150      	lsls	r0, r2, #5
 8005af6:	4602      	mov	r2, r0
 8005af8:	460b      	mov	r3, r1
 8005afa:	4641      	mov	r1, r8
 8005afc:	1a51      	subs	r1, r2, r1
 8005afe:	60b9      	str	r1, [r7, #8]
 8005b00:	4649      	mov	r1, r9
 8005b02:	eb63 0301 	sbc.w	r3, r3, r1
 8005b06:	60fb      	str	r3, [r7, #12]
 8005b08:	f04f 0200 	mov.w	r2, #0
 8005b0c:	f04f 0300 	mov.w	r3, #0
 8005b10:	e9d7 ab02 	ldrd	sl, fp, [r7, #8]
 8005b14:	4659      	mov	r1, fp
 8005b16:	018b      	lsls	r3, r1, #6
 8005b18:	4651      	mov	r1, sl
 8005b1a:	ea43 6391 	orr.w	r3, r3, r1, lsr #26
 8005b1e:	4651      	mov	r1, sl
 8005b20:	018a      	lsls	r2, r1, #6
 8005b22:	4651      	mov	r1, sl
 8005b24:	1a54      	subs	r4, r2, r1
 8005b26:	4659      	mov	r1, fp
 8005b28:	eb63 0501 	sbc.w	r5, r3, r1
 8005b2c:	f04f 0200 	mov.w	r2, #0
 8005b30:	f04f 0300 	mov.w	r3, #0
 8005b34:	00eb      	lsls	r3, r5, #3
 8005b36:	ea43 7354 	orr.w	r3, r3, r4, lsr #29
 8005b3a:	00e2      	lsls	r2, r4, #3
 8005b3c:	4614      	mov	r4, r2
 8005b3e:	461d      	mov	r5, r3
 8005b40:	4643      	mov	r3, r8
 8005b42:	18e3      	adds	r3, r4, r3
 8005b44:	603b      	str	r3, [r7, #0]
 8005b46:	464b      	mov	r3, r9
 8005b48:	eb45 0303 	adc.w	r3, r5, r3
 8005b4c:	607b      	str	r3, [r7, #4]
 8005b4e:	f04f 0200 	mov.w	r2, #0
 8005b52:	f04f 0300 	mov.w	r3, #0
 8005b56:	e9d7 4500 	ldrd	r4, r5, [r7]
 8005b5a:	4629      	mov	r1, r5
 8005b5c:	028b      	lsls	r3, r1, #10
 8005b5e:	4621      	mov	r1, r4
 8005b60:	ea43 5391 	orr.w	r3, r3, r1, lsr #22
 8005b64:	4621      	mov	r1, r4
 8005b66:	028a      	lsls	r2, r1, #10
 8005b68:	4610      	mov	r0, r2
 8005b6a:	4619      	mov	r1, r3
 8005b6c:	f8d7 30ac 	ldr.w	r3, [r7, #172]	@ 0xac
 8005b70:	2200      	movs	r2, #0
 8005b72:	64bb      	str	r3, [r7, #72]	@ 0x48
 8005b74:	64fa      	str	r2, [r7, #76]	@ 0x4c
 8005b76:	e9d7 2312 	ldrd	r2, r3, [r7, #72]	@ 0x48
 8005b7a:	f7fb f83f 	bl	8000bfc <__aeabi_uldivmod>
 8005b7e:	4602      	mov	r2, r0
 8005b80:	460b      	mov	r3, r1
 8005b82:	4613      	mov	r3, r2
 8005b84:	f8c7 30b4 	str.w	r3, [r7, #180]	@ 0xb4
      }
      pllr = ((RCC->PLLCFGR & RCC_PLLCFGR_PLLR) >> RCC_PLLCFGR_PLLR_Pos);
 8005b88:	4b0d      	ldr	r3, [pc, #52]	@ (8005bc0 <HAL_RCC_GetSysClockFreq+0x458>)
 8005b8a:	685b      	ldr	r3, [r3, #4]
 8005b8c:	0f1b      	lsrs	r3, r3, #28
 8005b8e:	f003 0307 	and.w	r3, r3, #7
 8005b92:	f8c7 30a4 	str.w	r3, [r7, #164]	@ 0xa4

      sysclockfreq = pllvco / pllr;
 8005b96:	f8d7 20b4 	ldr.w	r2, [r7, #180]	@ 0xb4
 8005b9a:	f8d7 30a4 	ldr.w	r3, [r7, #164]	@ 0xa4
 8005b9e:	fbb2 f3f3 	udiv	r3, r2, r3
 8005ba2:	f8c7 30b0 	str.w	r3, [r7, #176]	@ 0xb0
      break;
 8005ba6:	e003      	b.n	8005bb0 <HAL_RCC_GetSysClockFreq+0x448>
    }
    default:
    {
      sysclockfreq = HSI_VALUE;
 8005ba8:	4b06      	ldr	r3, [pc, #24]	@ (8005bc4 <HAL_RCC_GetSysClockFreq+0x45c>)
 8005baa:	f8c7 30b0 	str.w	r3, [r7, #176]	@ 0xb0
      break;
 8005bae:	bf00      	nop
    }
  }
  return sysclockfreq;
 8005bb0:	f8d7 30b0 	ldr.w	r3, [r7, #176]	@ 0xb0
}
 8005bb4:	4618      	mov	r0, r3
 8005bb6:	37b8      	adds	r7, #184	@ 0xb8
 8005bb8:	46bd      	mov	sp, r7
 8005bba:	e8bd 8fb0 	ldmia.w	sp!, {r4, r5, r7, r8, r9, sl, fp, pc}
 8005bbe:	bf00      	nop
 8005bc0:	40023800 	.word	0x40023800
 8005bc4:	00f42400 	.word	0x00f42400

08005bc8 <HAL_RCC_OscConfig>:
  * @note   This function add the PLL/PLLR factor management during PLL configuration this feature
  *         is only available in STM32F410xx/STM32F446xx/STM32F469xx/STM32F479xx/STM32F412Zx/STM32F412Vx/STM32F412Rx/STM32F412Cx devices
  * @retval HAL status
  */
HAL_StatusTypeDef HAL_RCC_OscConfig(RCC_OscInitTypeDef  *RCC_OscInitStruct)
{
 8005bc8:	b580      	push	{r7, lr}
 8005bca:	b086      	sub	sp, #24
 8005bcc:	af00      	add	r7, sp, #0
 8005bce:	6078      	str	r0, [r7, #4]
  uint32_t tickstart;
  uint32_t pll_config;

  /* Check Null pointer */
  if (RCC_OscInitStruct == NULL)
 8005bd0:	687b      	ldr	r3, [r7, #4]
 8005bd2:	2b00      	cmp	r3, #0
 8005bd4:	d101      	bne.n	8005bda <HAL_RCC_OscConfig+0x12>
  {
    return HAL_ERROR;
 8005bd6:	2301      	movs	r3, #1
 8005bd8:	e28d      	b.n	80060f6 <HAL_RCC_OscConfig+0x52e>
  }

  /* Check the parameters */
  assert_param(IS_RCC_OSCILLATORTYPE(RCC_OscInitStruct->OscillatorType));
  /*------------------------------- HSE Configuration ------------------------*/
  if (((RCC_OscInitStruct->OscillatorType) & RCC_OSCILLATORTYPE_HSE) == RCC_OSCILLATORTYPE_HSE)
 8005bda:	687b      	ldr	r3, [r7, #4]
 8005bdc:	681b      	ldr	r3, [r3, #0]
 8005bde:	f003 0301 	and.w	r3, r3, #1
 8005be2:	2b00      	cmp	r3, #0
 8005be4:	f000 8083 	beq.w	8005cee <HAL_RCC_OscConfig+0x126>
  {
    /* Check the parameters */
    assert_param(IS_RCC_HSE(RCC_OscInitStruct->HSEState));
    /* When the HSE is used as system clock or clock source for PLL in these cases HSE will not disabled */
#if defined(STM32F446xx)
    if ((__HAL_RCC_GET_SYSCLK_SOURCE() == RCC_CFGR_SWS_HSE)
 8005be8:	4b94      	ldr	r3, [pc, #592]	@ (8005e3c <HAL_RCC_OscConfig+0x274>)
 8005bea:	689b      	ldr	r3, [r3, #8]
 8005bec:	f003 030c 	and.w	r3, r3, #12
 8005bf0:	2b04      	cmp	r3, #4
 8005bf2:	d019      	beq.n	8005c28 <HAL_RCC_OscConfig+0x60>
        || \
        ((__HAL_RCC_GET_SYSCLK_SOURCE() == RCC_CFGR_SWS_PLL) && ((RCC->PLLCFGR & RCC_PLLCFGR_PLLSRC) == RCC_PLLCFGR_PLLSRC_HSE)) || \
 8005bf4:	4b91      	ldr	r3, [pc, #580]	@ (8005e3c <HAL_RCC_OscConfig+0x274>)
 8005bf6:	689b      	ldr	r3, [r3, #8]
 8005bf8:	f003 030c 	and.w	r3, r3, #12
        || \
 8005bfc:	2b08      	cmp	r3, #8
 8005bfe:	d106      	bne.n	8005c0e <HAL_RCC_OscConfig+0x46>
        ((__HAL_RCC_GET_SYSCLK_SOURCE() == RCC_CFGR_SWS_PLL) && ((RCC->PLLCFGR & RCC_PLLCFGR_PLLSRC) == RCC_PLLCFGR_PLLSRC_HSE)) || \
 8005c00:	4b8e      	ldr	r3, [pc, #568]	@ (8005e3c <HAL_RCC_OscConfig+0x274>)
 8005c02:	685b      	ldr	r3, [r3, #4]
 8005c04:	f403 0380 	and.w	r3, r3, #4194304	@ 0x400000
 8005c08:	f5b3 0f80 	cmp.w	r3, #4194304	@ 0x400000
 8005c0c:	d00c      	beq.n	8005c28 <HAL_RCC_OscConfig+0x60>
        ((__HAL_RCC_GET_SYSCLK_SOURCE() == RCC_CFGR_SWS_PLLR) && ((RCC->PLLCFGR & RCC_PLLCFGR_PLLSRC) == RCC_PLLCFGR_PLLSRC_HSE)))
 8005c0e:	4b8b      	ldr	r3, [pc, #556]	@ (8005e3c <HAL_RCC_OscConfig+0x274>)
 8005c10:	689b      	ldr	r3, [r3, #8]
 8005c12:	f003 030c 	and.w	r3, r3, #12
        ((__HAL_RCC_GET_SYSCLK_SOURCE() == RCC_CFGR_SWS_PLL) && ((RCC->PLLCFGR & RCC_PLLCFGR_PLLSRC) == RCC_PLLCFGR_PLLSRC_HSE)) || \
 8005c16:	2b0c      	cmp	r3, #12
 8005c18:	d112      	bne.n	8005c40 <HAL_RCC_OscConfig+0x78>
        ((__HAL_RCC_GET_SYSCLK_SOURCE() == RCC_CFGR_SWS_PLLR) && ((RCC->PLLCFGR & RCC_PLLCFGR_PLLSRC) == RCC_PLLCFGR_PLLSRC_HSE)))
 8005c1a:	4b88      	ldr	r3, [pc, #544]	@ (8005e3c <HAL_RCC_OscConfig+0x274>)
 8005c1c:	685b      	ldr	r3, [r3, #4]
 8005c1e:	f403 0380 	and.w	r3, r3, #4194304	@ 0x400000
 8005c22:	f5b3 0f80 	cmp.w	r3, #4194304	@ 0x400000
 8005c26:	d10b      	bne.n	8005c40 <HAL_RCC_OscConfig+0x78>
    if ((__HAL_RCC_GET_SYSCLK_SOURCE() == RCC_CFGR_SWS_HSE)
        || \
        ((__HAL_RCC_GET_SYSCLK_SOURCE() == RCC_CFGR_SWS_PLL) && ((RCC->PLLCFGR & RCC_PLLCFGR_PLLSRC) == RCC_PLLCFGR_PLLSRC_HSE)))
#endif /* STM32F446xx */
    {
      if ((__HAL_RCC_GET_FLAG(RCC_FLAG_HSERDY) != RESET) && (RCC_OscInitStruct->HSEState == RCC_HSE_OFF))
 8005c28:	4b84      	ldr	r3, [pc, #528]	@ (8005e3c <HAL_RCC_OscConfig+0x274>)
 8005c2a:	681b      	ldr	r3, [r3, #0]
 8005c2c:	f403 3300 	and.w	r3, r3, #131072	@ 0x20000
 8005c30:	2b00      	cmp	r3, #0
 8005c32:	d05b      	beq.n	8005cec <HAL_RCC_OscConfig+0x124>
 8005c34:	687b      	ldr	r3, [r7, #4]
 8005c36:	685b      	ldr	r3, [r3, #4]
 8005c38:	2b00      	cmp	r3, #0
 8005c3a:	d157      	bne.n	8005cec <HAL_RCC_OscConfig+0x124>
      {
        return HAL_ERROR;
 8005c3c:	2301      	movs	r3, #1
 8005c3e:	e25a      	b.n	80060f6 <HAL_RCC_OscConfig+0x52e>
      }
    }
    else
    {
      /* Set the new HSE configuration ---------------------------------------*/
      __HAL_RCC_HSE_CONFIG(RCC_OscInitStruct->HSEState);
 8005c40:	687b      	ldr	r3, [r7, #4]
 8005c42:	685b      	ldr	r3, [r3, #4]
 8005c44:	f5b3 3f80 	cmp.w	r3, #65536	@ 0x10000
 8005c48:	d106      	bne.n	8005c58 <HAL_RCC_OscConfig+0x90>
 8005c4a:	4b7c      	ldr	r3, [pc, #496]	@ (8005e3c <HAL_RCC_OscConfig+0x274>)
 8005c4c:	681b      	ldr	r3, [r3, #0]
 8005c4e:	4a7b      	ldr	r2, [pc, #492]	@ (8005e3c <HAL_RCC_OscConfig+0x274>)
 8005c50:	f443 3380 	orr.w	r3, r3, #65536	@ 0x10000
 8005c54:	6013      	str	r3, [r2, #0]
 8005c56:	e01d      	b.n	8005c94 <HAL_RCC_OscConfig+0xcc>
 8005c58:	687b      	ldr	r3, [r7, #4]
 8005c5a:	685b      	ldr	r3, [r3, #4]
 8005c5c:	f5b3 2fa0 	cmp.w	r3, #327680	@ 0x50000
 8005c60:	d10c      	bne.n	8005c7c <HAL_RCC_OscConfig+0xb4>
 8005c62:	4b76      	ldr	r3, [pc, #472]	@ (8005e3c <HAL_RCC_OscConfig+0x274>)
 8005c64:	681b      	ldr	r3, [r3, #0]
 8005c66:	4a75      	ldr	r2, [pc, #468]	@ (8005e3c <HAL_RCC_OscConfig+0x274>)
 8005c68:	f443 2380 	orr.w	r3, r3, #262144	@ 0x40000
 8005c6c:	6013      	str	r3, [r2, #0]
 8005c6e:	4b73      	ldr	r3, [pc, #460]	@ (8005e3c <HAL_RCC_OscConfig+0x274>)
 8005c70:	681b      	ldr	r3, [r3, #0]
 8005c72:	4a72      	ldr	r2, [pc, #456]	@ (8005e3c <HAL_RCC_OscConfig+0x274>)
 8005c74:	f443 3380 	orr.w	r3, r3, #65536	@ 0x10000
 8005c78:	6013      	str	r3, [r2, #0]
 8005c7a:	e00b      	b.n	8005c94 <HAL_RCC_OscConfig+0xcc>
 8005c7c:	4b6f      	ldr	r3, [pc, #444]	@ (8005e3c <HAL_RCC_OscConfig+0x274>)
 8005c7e:	681b      	ldr	r3, [r3, #0]
 8005c80:	4a6e      	ldr	r2, [pc, #440]	@ (8005e3c <HAL_RCC_OscConfig+0x274>)
 8005c82:	f423 3380 	bic.w	r3, r3, #65536	@ 0x10000
 8005c86:	6013      	str	r3, [r2, #0]
 8005c88:	4b6c      	ldr	r3, [pc, #432]	@ (8005e3c <HAL_RCC_OscConfig+0x274>)
 8005c8a:	681b      	ldr	r3, [r3, #0]
 8005c8c:	4a6b      	ldr	r2, [pc, #428]	@ (8005e3c <HAL_RCC_OscConfig+0x274>)
 8005c8e:	f423 2380 	bic.w	r3, r3, #262144	@ 0x40000
 8005c92:	6013      	str	r3, [r2, #0]

      /* Check the HSE State */
      if ((RCC_OscInitStruct->HSEState) != RCC_HSE_OFF)
 8005c94:	687b      	ldr	r3, [r7, #4]
 8005c96:	685b      	ldr	r3, [r3, #4]
 8005c98:	2b00      	cmp	r3, #0
 8005c9a:	d013      	beq.n	8005cc4 <HAL_RCC_OscConfig+0xfc>
      {
        /* Get Start Tick*/
        tickstart = HAL_GetTick();
 8005c9c:	f7fc fe5a 	bl	8002954 <HAL_GetTick>
 8005ca0:	6138      	str	r0, [r7, #16]

        /* Wait till HSE is ready */
        while (__HAL_RCC_GET_FLAG(RCC_FLAG_HSERDY) == RESET)
 8005ca2:	e008      	b.n	8005cb6 <HAL_RCC_OscConfig+0xee>
        {
          if ((HAL_GetTick() - tickstart) > HSE_TIMEOUT_VALUE)
 8005ca4:	f7fc fe56 	bl	8002954 <HAL_GetTick>
 8005ca8:	4602      	mov	r2, r0
 8005caa:	693b      	ldr	r3, [r7, #16]
 8005cac:	1ad3      	subs	r3, r2, r3
 8005cae:	2b64      	cmp	r3, #100	@ 0x64
 8005cb0:	d901      	bls.n	8005cb6 <HAL_RCC_OscConfig+0xee>
          {
            return HAL_TIMEOUT;
 8005cb2:	2303      	movs	r3, #3
 8005cb4:	e21f      	b.n	80060f6 <HAL_RCC_OscConfig+0x52e>
        while (__HAL_RCC_GET_FLAG(RCC_FLAG_HSERDY) == RESET)
 8005cb6:	4b61      	ldr	r3, [pc, #388]	@ (8005e3c <HAL_RCC_OscConfig+0x274>)
 8005cb8:	681b      	ldr	r3, [r3, #0]
 8005cba:	f403 3300 	and.w	r3, r3, #131072	@ 0x20000
 8005cbe:	2b00      	cmp	r3, #0
 8005cc0:	d0f0      	beq.n	8005ca4 <HAL_RCC_OscConfig+0xdc>
 8005cc2:	e014      	b.n	8005cee <HAL_RCC_OscConfig+0x126>
        }
      }
      else
      {
        /* Get Start Tick*/
        tickstart = HAL_GetTick();
 8005cc4:	f7fc fe46 	bl	8002954 <HAL_GetTick>
 8005cc8:	6138      	str	r0, [r7, #16]

        /* Wait till HSE is bypassed or disabled */
        while (__HAL_RCC_GET_FLAG(RCC_FLAG_HSERDY) != RESET)
 8005cca:	e008      	b.n	8005cde <HAL_RCC_OscConfig+0x116>
        {
          if ((HAL_GetTick() - tickstart) > HSE_TIMEOUT_VALUE)
 8005ccc:	f7fc fe42 	bl	8002954 <HAL_GetTick>
 8005cd0:	4602      	mov	r2, r0
 8005cd2:	693b      	ldr	r3, [r7, #16]
 8005cd4:	1ad3      	subs	r3, r2, r3
 8005cd6:	2b64      	cmp	r3, #100	@ 0x64
 8005cd8:	d901      	bls.n	8005cde <HAL_RCC_OscConfig+0x116>
          {
            return HAL_TIMEOUT;
 8005cda:	2303      	movs	r3, #3
 8005cdc:	e20b      	b.n	80060f6 <HAL_RCC_OscConfig+0x52e>
        while (__HAL_RCC_GET_FLAG(RCC_FLAG_HSERDY) != RESET)
 8005cde:	4b57      	ldr	r3, [pc, #348]	@ (8005e3c <HAL_RCC_OscConfig+0x274>)
 8005ce0:	681b      	ldr	r3, [r3, #0]
 8005ce2:	f403 3300 	and.w	r3, r3, #131072	@ 0x20000
 8005ce6:	2b00      	cmp	r3, #0
 8005ce8:	d1f0      	bne.n	8005ccc <HAL_RCC_OscConfig+0x104>
 8005cea:	e000      	b.n	8005cee <HAL_RCC_OscConfig+0x126>
      if ((__HAL_RCC_GET_FLAG(RCC_FLAG_HSERDY) != RESET) && (RCC_OscInitStruct->HSEState == RCC_HSE_OFF))
 8005cec:	bf00      	nop
        }
      }
    }
  }
  /*----------------------------- HSI Configuration --------------------------*/
  if (((RCC_OscInitStruct->OscillatorType) & RCC_OSCILLATORTYPE_HSI) == RCC_OSCILLATORTYPE_HSI)
 8005cee:	687b      	ldr	r3, [r7, #4]
 8005cf0:	681b      	ldr	r3, [r3, #0]
 8005cf2:	f003 0302 	and.w	r3, r3, #2
 8005cf6:	2b00      	cmp	r3, #0
 8005cf8:	d06f      	beq.n	8005dda <HAL_RCC_OscConfig+0x212>
    assert_param(IS_RCC_HSI(RCC_OscInitStruct->HSIState));
    assert_param(IS_RCC_CALIBRATION_VALUE(RCC_OscInitStruct->HSICalibrationValue));

    /* Check if HSI is used as system clock or as PLL source when PLL is selected as system clock */
#if defined(STM32F446xx)
    if ((__HAL_RCC_GET_SYSCLK_SOURCE() == RCC_CFGR_SWS_HSI)
 8005cfa:	4b50      	ldr	r3, [pc, #320]	@ (8005e3c <HAL_RCC_OscConfig+0x274>)
 8005cfc:	689b      	ldr	r3, [r3, #8]
 8005cfe:	f003 030c 	and.w	r3, r3, #12
 8005d02:	2b00      	cmp	r3, #0
 8005d04:	d017      	beq.n	8005d36 <HAL_RCC_OscConfig+0x16e>
        || \
        ((__HAL_RCC_GET_SYSCLK_SOURCE() == RCC_CFGR_SWS_PLL) && ((RCC->PLLCFGR & RCC_PLLCFGR_PLLSRC) == RCC_PLLCFGR_PLLSRC_HSI)) || \
 8005d06:	4b4d      	ldr	r3, [pc, #308]	@ (8005e3c <HAL_RCC_OscConfig+0x274>)
 8005d08:	689b      	ldr	r3, [r3, #8]
 8005d0a:	f003 030c 	and.w	r3, r3, #12
        || \
 8005d0e:	2b08      	cmp	r3, #8
 8005d10:	d105      	bne.n	8005d1e <HAL_RCC_OscConfig+0x156>
        ((__HAL_RCC_GET_SYSCLK_SOURCE() == RCC_CFGR_SWS_PLL) && ((RCC->PLLCFGR & RCC_PLLCFGR_PLLSRC) == RCC_PLLCFGR_PLLSRC_HSI)) || \
 8005d12:	4b4a      	ldr	r3, [pc, #296]	@ (8005e3c <HAL_RCC_OscConfig+0x274>)
 8005d14:	685b      	ldr	r3, [r3, #4]
 8005d16:	f403 0380 	and.w	r3, r3, #4194304	@ 0x400000
 8005d1a:	2b00      	cmp	r3, #0
 8005d1c:	d00b      	beq.n	8005d36 <HAL_RCC_OscConfig+0x16e>
        ((__HAL_RCC_GET_SYSCLK_SOURCE() == RCC_CFGR_SWS_PLLR) && ((RCC->PLLCFGR & RCC_PLLCFGR_PLLSRC) == RCC_PLLCFGR_PLLSRC_HSI)))
 8005d1e:	4b47      	ldr	r3, [pc, #284]	@ (8005e3c <HAL_RCC_OscConfig+0x274>)
 8005d20:	689b      	ldr	r3, [r3, #8]
 8005d22:	f003 030c 	and.w	r3, r3, #12
        ((__HAL_RCC_GET_SYSCLK_SOURCE() == RCC_CFGR_SWS_PLL) && ((RCC->PLLCFGR & RCC_PLLCFGR_PLLSRC) == RCC_PLLCFGR_PLLSRC_HSI)) || \
 8005d26:	2b0c      	cmp	r3, #12
 8005d28:	d11c      	bne.n	8005d64 <HAL_RCC_OscConfig+0x19c>
        ((__HAL_RCC_GET_SYSCLK_SOURCE() == RCC_CFGR_SWS_PLLR) && ((RCC->PLLCFGR & RCC_PLLCFGR_PLLSRC) == RCC_PLLCFGR_PLLSRC_HSI)))
 8005d2a:	4b44      	ldr	r3, [pc, #272]	@ (8005e3c <HAL_RCC_OscConfig+0x274>)
 8005d2c:	685b      	ldr	r3, [r3, #4]
 8005d2e:	f403 0380 	and.w	r3, r3, #4194304	@ 0x400000
 8005d32:	2b00      	cmp	r3, #0
 8005d34:	d116      	bne.n	8005d64 <HAL_RCC_OscConfig+0x19c>
        || \
        ((__HAL_RCC_GET_SYSCLK_SOURCE() == RCC_CFGR_SWS_PLL) && ((RCC->PLLCFGR & RCC_PLLCFGR_PLLSRC) == RCC_PLLCFGR_PLLSRC_HSI)))
#endif /* STM32F446xx */
    {
      /* When HSI is used as system clock it will not disabled */
      if ((__HAL_RCC_GET_FLAG(RCC_FLAG_HSIRDY) != RESET) && (RCC_OscInitStruct->HSIState != RCC_HSI_ON))
 8005d36:	4b41      	ldr	r3, [pc, #260]	@ (8005e3c <HAL_RCC_OscConfig+0x274>)
 8005d38:	681b      	ldr	r3, [r3, #0]
 8005d3a:	f003 0302 	and.w	r3, r3, #2
 8005d3e:	2b00      	cmp	r3, #0
 8005d40:	d005      	beq.n	8005d4e <HAL_RCC_OscConfig+0x186>
 8005d42:	687b      	ldr	r3, [r7, #4]
 8005d44:	68db      	ldr	r3, [r3, #12]
 8005d46:	2b01      	cmp	r3, #1
 8005d48:	d001      	beq.n	8005d4e <HAL_RCC_OscConfig+0x186>
      {
        return HAL_ERROR;
 8005d4a:	2301      	movs	r3, #1
 8005d4c:	e1d3      	b.n	80060f6 <HAL_RCC_OscConfig+0x52e>
      }
      /* Otherwise, just the calibration is allowed */
      else
      {
        /* Adjusts the Internal High Speed oscillator (HSI) calibration value.*/
        __HAL_RCC_HSI_CALIBRATIONVALUE_ADJUST(RCC_OscInitStruct->HSICalibrationValue);
 8005d4e:	4b3b      	ldr	r3, [pc, #236]	@ (8005e3c <HAL_RCC_OscConfig+0x274>)
 8005d50:	681b      	ldr	r3, [r3, #0]
 8005d52:	f023 02f8 	bic.w	r2, r3, #248	@ 0xf8
 8005d56:	687b      	ldr	r3, [r7, #4]
 8005d58:	691b      	ldr	r3, [r3, #16]
 8005d5a:	00db      	lsls	r3, r3, #3
 8005d5c:	4937      	ldr	r1, [pc, #220]	@ (8005e3c <HAL_RCC_OscConfig+0x274>)
 8005d5e:	4313      	orrs	r3, r2
 8005d60:	600b      	str	r3, [r1, #0]
      if ((__HAL_RCC_GET_FLAG(RCC_FLAG_HSIRDY) != RESET) && (RCC_OscInitStruct->HSIState != RCC_HSI_ON))
 8005d62:	e03a      	b.n	8005dda <HAL_RCC_OscConfig+0x212>
      }
    }
    else
    {
      /* Check the HSI State */
      if ((RCC_OscInitStruct->HSIState) != RCC_HSI_OFF)
 8005d64:	687b      	ldr	r3, [r7, #4]
 8005d66:	68db      	ldr	r3, [r3, #12]
 8005d68:	2b00      	cmp	r3, #0
 8005d6a:	d020      	beq.n	8005dae <HAL_RCC_OscConfig+0x1e6>
      {
        /* Enable the Internal High Speed oscillator (HSI). */
        __HAL_RCC_HSI_ENABLE();
 8005d6c:	4b34      	ldr	r3, [pc, #208]	@ (8005e40 <HAL_RCC_OscConfig+0x278>)
 8005d6e:	2201      	movs	r2, #1
 8005d70:	601a      	str	r2, [r3, #0]

        /* Get Start Tick*/
        tickstart = HAL_GetTick();
 8005d72:	f7fc fdef 	bl	8002954 <HAL_GetTick>
 8005d76:	6138      	str	r0, [r7, #16]

        /* Wait till HSI is ready */
        while (__HAL_RCC_GET_FLAG(RCC_FLAG_HSIRDY) == RESET)
 8005d78:	e008      	b.n	8005d8c <HAL_RCC_OscConfig+0x1c4>
        {
          if ((HAL_GetTick() - tickstart) > HSI_TIMEOUT_VALUE)
 8005d7a:	f7fc fdeb 	bl	8002954 <HAL_GetTick>
 8005d7e:	4602      	mov	r2, r0
 8005d80:	693b      	ldr	r3, [r7, #16]
 8005d82:	1ad3      	subs	r3, r2, r3
 8005d84:	2b02      	cmp	r3, #2
 8005d86:	d901      	bls.n	8005d8c <HAL_RCC_OscConfig+0x1c4>
          {
            return HAL_TIMEOUT;
 8005d88:	2303      	movs	r3, #3
 8005d8a:	e1b4      	b.n	80060f6 <HAL_RCC_OscConfig+0x52e>
        while (__HAL_RCC_GET_FLAG(RCC_FLAG_HSIRDY) == RESET)
 8005d8c:	4b2b      	ldr	r3, [pc, #172]	@ (8005e3c <HAL_RCC_OscConfig+0x274>)
 8005d8e:	681b      	ldr	r3, [r3, #0]
 8005d90:	f003 0302 	and.w	r3, r3, #2
 8005d94:	2b00      	cmp	r3, #0
 8005d96:	d0f0      	beq.n	8005d7a <HAL_RCC_OscConfig+0x1b2>
          }
        }

        /* Adjusts the Internal High Speed oscillator (HSI) calibration value.*/
        __HAL_RCC_HSI_CALIBRATIONVALUE_ADJUST(RCC_OscInitStruct->HSICalibrationValue);
 8005d98:	4b28      	ldr	r3, [pc, #160]	@ (8005e3c <HAL_RCC_OscConfig+0x274>)
 8005d9a:	681b      	ldr	r3, [r3, #0]
 8005d9c:	f023 02f8 	bic.w	r2, r3, #248	@ 0xf8
 8005da0:	687b      	ldr	r3, [r7, #4]
 8005da2:	691b      	ldr	r3, [r3, #16]
 8005da4:	00db      	lsls	r3, r3, #3
 8005da6:	4925      	ldr	r1, [pc, #148]	@ (8005e3c <HAL_RCC_OscConfig+0x274>)
 8005da8:	4313      	orrs	r3, r2
 8005daa:	600b      	str	r3, [r1, #0]
 8005dac:	e015      	b.n	8005dda <HAL_RCC_OscConfig+0x212>
      }
      else
      {
        /* Disable the Internal High Speed oscillator (HSI). */
        __HAL_RCC_HSI_DISABLE();
 8005dae:	4b24      	ldr	r3, [pc, #144]	@ (8005e40 <HAL_RCC_OscConfig+0x278>)
 8005db0:	2200      	movs	r2, #0
 8005db2:	601a      	str	r2, [r3, #0]

        /* Get Start Tick*/
        tickstart = HAL_GetTick();
 8005db4:	f7fc fdce 	bl	8002954 <HAL_GetTick>
 8005db8:	6138      	str	r0, [r7, #16]

        /* Wait till HSI is ready */
        while (__HAL_RCC_GET_FLAG(RCC_FLAG_HSIRDY) != RESET)
 8005dba:	e008      	b.n	8005dce <HAL_RCC_OscConfig+0x206>
        {
          if ((HAL_GetTick() - tickstart) > HSI_TIMEOUT_VALUE)
 8005dbc:	f7fc fdca 	bl	8002954 <HAL_GetTick>
 8005dc0:	4602      	mov	r2, r0
 8005dc2:	693b      	ldr	r3, [r7, #16]
 8005dc4:	1ad3      	subs	r3, r2, r3
 8005dc6:	2b02      	cmp	r3, #2
 8005dc8:	d901      	bls.n	8005dce <HAL_RCC_OscConfig+0x206>
          {
            return HAL_TIMEOUT;
 8005dca:	2303      	movs	r3, #3
 8005dcc:	e193      	b.n	80060f6 <HAL_RCC_OscConfig+0x52e>
        while (__HAL_RCC_GET_FLAG(RCC_FLAG_HSIRDY) != RESET)
 8005dce:	4b1b      	ldr	r3, [pc, #108]	@ (8005e3c <HAL_RCC_OscConfig+0x274>)
 8005dd0:	681b      	ldr	r3, [r3, #0]
 8005dd2:	f003 0302 	and.w	r3, r3, #2
 8005dd6:	2b00      	cmp	r3, #0
 8005dd8:	d1f0      	bne.n	8005dbc <HAL_RCC_OscConfig+0x1f4>
        }
      }
    }
  }
  /*------------------------------ LSI Configuration -------------------------*/
  if (((RCC_OscInitStruct->OscillatorType) & RCC_OSCILLATORTYPE_LSI) == RCC_OSCILLATORTYPE_LSI)
 8005dda:	687b      	ldr	r3, [r7, #4]
 8005ddc:	681b      	ldr	r3, [r3, #0]
 8005dde:	f003 0308 	and.w	r3, r3, #8
 8005de2:	2b00      	cmp	r3, #0
 8005de4:	d036      	beq.n	8005e54 <HAL_RCC_OscConfig+0x28c>
  {
    /* Check the parameters */
    assert_param(IS_RCC_LSI(RCC_OscInitStruct->LSIState));

    /* Check the LSI State */
    if ((RCC_OscInitStruct->LSIState) != RCC_LSI_OFF)
 8005de6:	687b      	ldr	r3, [r7, #4]
 8005de8:	695b      	ldr	r3, [r3, #20]
 8005dea:	2b00      	cmp	r3, #0
 8005dec:	d016      	beq.n	8005e1c <HAL_RCC_OscConfig+0x254>
    {
      /* Enable the Internal Low Speed oscillator (LSI). */
      __HAL_RCC_LSI_ENABLE();
 8005dee:	4b15      	ldr	r3, [pc, #84]	@ (8005e44 <HAL_RCC_OscConfig+0x27c>)
 8005df0:	2201      	movs	r2, #1
 8005df2:	601a      	str	r2, [r3, #0]

      /* Get Start Tick*/
      tickstart = HAL_GetTick();
 8005df4:	f7fc fdae 	bl	8002954 <HAL_GetTick>
 8005df8:	6138      	str	r0, [r7, #16]

      /* Wait till LSI is ready */
      while (__HAL_RCC_GET_FLAG(RCC_FLAG_LSIRDY) == RESET)
 8005dfa:	e008      	b.n	8005e0e <HAL_RCC_OscConfig+0x246>
      {
        if ((HAL_GetTick() - tickstart) > LSI_TIMEOUT_VALUE)
 8005dfc:	f7fc fdaa 	bl	8002954 <HAL_GetTick>
 8005e00:	4602      	mov	r2, r0
 8005e02:	693b      	ldr	r3, [r7, #16]
 8005e04:	1ad3      	subs	r3, r2, r3
 8005e06:	2b02      	cmp	r3, #2
 8005e08:	d901      	bls.n	8005e0e <HAL_RCC_OscConfig+0x246>
        {
          return HAL_TIMEOUT;
 8005e0a:	2303      	movs	r3, #3
 8005e0c:	e173      	b.n	80060f6 <HAL_RCC_OscConfig+0x52e>
      while (__HAL_RCC_GET_FLAG(RCC_FLAG_LSIRDY) == RESET)
 8005e0e:	4b0b      	ldr	r3, [pc, #44]	@ (8005e3c <HAL_RCC_OscConfig+0x274>)
 8005e10:	6f5b      	ldr	r3, [r3, #116]	@ 0x74
 8005e12:	f003 0302 	and.w	r3, r3, #2
 8005e16:	2b00      	cmp	r3, #0
 8005e18:	d0f0      	beq.n	8005dfc <HAL_RCC_OscConfig+0x234>
 8005e1a:	e01b      	b.n	8005e54 <HAL_RCC_OscConfig+0x28c>
      }
    }
    else
    {
      /* Disable the Internal Low Speed oscillator (LSI). */
      __HAL_RCC_LSI_DISABLE();
 8005e1c:	4b09      	ldr	r3, [pc, #36]	@ (8005e44 <HAL_RCC_OscConfig+0x27c>)
 8005e1e:	2200      	movs	r2, #0
 8005e20:	601a      	str	r2, [r3, #0]

      /* Get Start Tick*/
      tickstart = HAL_GetTick();
 8005e22:	f7fc fd97 	bl	8002954 <HAL_GetTick>
 8005e26:	6138      	str	r0, [r7, #16]

      /* Wait till LSI is ready */
      while (__HAL_RCC_GET_FLAG(RCC_FLAG_LSIRDY) != RESET)
 8005e28:	e00e      	b.n	8005e48 <HAL_RCC_OscConfig+0x280>
      {
        if ((HAL_GetTick() - tickstart) > LSI_TIMEOUT_VALUE)
 8005e2a:	f7fc fd93 	bl	8002954 <HAL_GetTick>
 8005e2e:	4602      	mov	r2, r0
 8005e30:	693b      	ldr	r3, [r7, #16]
 8005e32:	1ad3      	subs	r3, r2, r3
 8005e34:	2b02      	cmp	r3, #2
 8005e36:	d907      	bls.n	8005e48 <HAL_RCC_OscConfig+0x280>
        {
          return HAL_TIMEOUT;
 8005e38:	2303      	movs	r3, #3
 8005e3a:	e15c      	b.n	80060f6 <HAL_RCC_OscConfig+0x52e>
 8005e3c:	40023800 	.word	0x40023800
 8005e40:	42470000 	.word	0x42470000
 8005e44:	42470e80 	.word	0x42470e80
      while (__HAL_RCC_GET_FLAG(RCC_FLAG_LSIRDY) != RESET)
 8005e48:	4b8a      	ldr	r3, [pc, #552]	@ (8006074 <HAL_RCC_OscConfig+0x4ac>)
 8005e4a:	6f5b      	ldr	r3, [r3, #116]	@ 0x74
 8005e4c:	f003 0302 	and.w	r3, r3, #2
 8005e50:	2b00      	cmp	r3, #0
 8005e52:	d1ea      	bne.n	8005e2a <HAL_RCC_OscConfig+0x262>
        }
      }
    }
  }
  /*------------------------------ LSE Configuration -------------------------*/
  if (((RCC_OscInitStruct->OscillatorType) & RCC_OSCILLATORTYPE_LSE) == RCC_OSCILLATORTYPE_LSE)
 8005e54:	687b      	ldr	r3, [r7, #4]
 8005e56:	681b      	ldr	r3, [r3, #0]
 8005e58:	f003 0304 	and.w	r3, r3, #4
 8005e5c:	2b00      	cmp	r3, #0
 8005e5e:	f000 8097 	beq.w	8005f90 <HAL_RCC_OscConfig+0x3c8>
  {
    FlagStatus       pwrclkchanged = RESET;
 8005e62:	2300      	movs	r3, #0
 8005e64:	75fb      	strb	r3, [r7, #23]
    /* Check the parameters */
    assert_param(IS_RCC_LSE(RCC_OscInitStruct->LSEState));

    /* Update LSE configuration in Backup Domain control register    */
    /* Requires to enable write access to Backup Domain of necessary */
    if (__HAL_RCC_PWR_IS_CLK_DISABLED())
 8005e66:	4b83      	ldr	r3, [pc, #524]	@ (8006074 <HAL_RCC_OscConfig+0x4ac>)
 8005e68:	6c1b      	ldr	r3, [r3, #64]	@ 0x40
 8005e6a:	f003 5380 	and.w	r3, r3, #268435456	@ 0x10000000
 8005e6e:	2b00      	cmp	r3, #0
 8005e70:	d10f      	bne.n	8005e92 <HAL_RCC_OscConfig+0x2ca>
    {
      __HAL_RCC_PWR_CLK_ENABLE();
 8005e72:	2300      	movs	r3, #0
 8005e74:	60bb      	str	r3, [r7, #8]
 8005e76:	4b7f      	ldr	r3, [pc, #508]	@ (8006074 <HAL_RCC_OscConfig+0x4ac>)
 8005e78:	6c1b      	ldr	r3, [r3, #64]	@ 0x40
 8005e7a:	4a7e      	ldr	r2, [pc, #504]	@ (8006074 <HAL_RCC_OscConfig+0x4ac>)
 8005e7c:	f043 5380 	orr.w	r3, r3, #268435456	@ 0x10000000
 8005e80:	6413      	str	r3, [r2, #64]	@ 0x40
 8005e82:	4b7c      	ldr	r3, [pc, #496]	@ (8006074 <HAL_RCC_OscConfig+0x4ac>)
 8005e84:	6c1b      	ldr	r3, [r3, #64]	@ 0x40
 8005e86:	f003 5380 	and.w	r3, r3, #268435456	@ 0x10000000
 8005e8a:	60bb      	str	r3, [r7, #8]
 8005e8c:	68bb      	ldr	r3, [r7, #8]
      pwrclkchanged = SET;
 8005e8e:	2301      	movs	r3, #1
 8005e90:	75fb      	strb	r3, [r7, #23]
    }

    if (HAL_IS_BIT_CLR(PWR->CR, PWR_CR_DBP))
 8005e92:	4b79      	ldr	r3, [pc, #484]	@ (8006078 <HAL_RCC_OscConfig+0x4b0>)
 8005e94:	681b      	ldr	r3, [r3, #0]
 8005e96:	f403 7380 	and.w	r3, r3, #256	@ 0x100
 8005e9a:	2b00      	cmp	r3, #0
 8005e9c:	d118      	bne.n	8005ed0 <HAL_RCC_OscConfig+0x308>
    {
      /* Enable write access to Backup domain */
      SET_BIT(PWR->CR, PWR_CR_DBP);
 8005e9e:	4b76      	ldr	r3, [pc, #472]	@ (8006078 <HAL_RCC_OscConfig+0x4b0>)
 8005ea0:	681b      	ldr	r3, [r3, #0]
 8005ea2:	4a75      	ldr	r2, [pc, #468]	@ (8006078 <HAL_RCC_OscConfig+0x4b0>)
 8005ea4:	f443 7380 	orr.w	r3, r3, #256	@ 0x100
 8005ea8:	6013      	str	r3, [r2, #0]

      /* Wait for Backup domain Write protection disable */
      tickstart = HAL_GetTick();
 8005eaa:	f7fc fd53 	bl	8002954 <HAL_GetTick>
 8005eae:	6138      	str	r0, [r7, #16]

      while (HAL_IS_BIT_CLR(PWR->CR, PWR_CR_DBP))
 8005eb0:	e008      	b.n	8005ec4 <HAL_RCC_OscConfig+0x2fc>
      {
        if ((HAL_GetTick() - tickstart) > RCC_DBP_TIMEOUT_VALUE)
 8005eb2:	f7fc fd4f 	bl	8002954 <HAL_GetTick>
 8005eb6:	4602      	mov	r2, r0
 8005eb8:	693b      	ldr	r3, [r7, #16]
 8005eba:	1ad3      	subs	r3, r2, r3
 8005ebc:	2b02      	cmp	r3, #2
 8005ebe:	d901      	bls.n	8005ec4 <HAL_RCC_OscConfig+0x2fc>
        {
          return HAL_TIMEOUT;
 8005ec0:	2303      	movs	r3, #3
 8005ec2:	e118      	b.n	80060f6 <HAL_RCC_OscConfig+0x52e>
      while (HAL_IS_BIT_CLR(PWR->CR, PWR_CR_DBP))
 8005ec4:	4b6c      	ldr	r3, [pc, #432]	@ (8006078 <HAL_RCC_OscConfig+0x4b0>)
 8005ec6:	681b      	ldr	r3, [r3, #0]
 8005ec8:	f403 7380 	and.w	r3, r3, #256	@ 0x100
 8005ecc:	2b00      	cmp	r3, #0
 8005ece:	d0f0      	beq.n	8005eb2 <HAL_RCC_OscConfig+0x2ea>
        }
      }
    }

    /* Set the new LSE configuration -----------------------------------------*/
    __HAL_RCC_LSE_CONFIG(RCC_OscInitStruct->LSEState);
 8005ed0:	687b      	ldr	r3, [r7, #4]
 8005ed2:	689b      	ldr	r3, [r3, #8]
 8005ed4:	2b01      	cmp	r3, #1
 8005ed6:	d106      	bne.n	8005ee6 <HAL_RCC_OscConfig+0x31e>
 8005ed8:	4b66      	ldr	r3, [pc, #408]	@ (8006074 <HAL_RCC_OscConfig+0x4ac>)
 8005eda:	6f1b      	ldr	r3, [r3, #112]	@ 0x70
 8005edc:	4a65      	ldr	r2, [pc, #404]	@ (8006074 <HAL_RCC_OscConfig+0x4ac>)
 8005ede:	f043 0301 	orr.w	r3, r3, #1
 8005ee2:	6713      	str	r3, [r2, #112]	@ 0x70
 8005ee4:	e01c      	b.n	8005f20 <HAL_RCC_OscConfig+0x358>
 8005ee6:	687b      	ldr	r3, [r7, #4]
 8005ee8:	689b      	ldr	r3, [r3, #8]
 8005eea:	2b05      	cmp	r3, #5
 8005eec:	d10c      	bne.n	8005f08 <HAL_RCC_OscConfig+0x340>
 8005eee:	4b61      	ldr	r3, [pc, #388]	@ (8006074 <HAL_RCC_OscConfig+0x4ac>)
 8005ef0:	6f1b      	ldr	r3, [r3, #112]	@ 0x70
 8005ef2:	4a60      	ldr	r2, [pc, #384]	@ (8006074 <HAL_RCC_OscConfig+0x4ac>)
 8005ef4:	f043 0304 	orr.w	r3, r3, #4
 8005ef8:	6713      	str	r3, [r2, #112]	@ 0x70
 8005efa:	4b5e      	ldr	r3, [pc, #376]	@ (8006074 <HAL_RCC_OscConfig+0x4ac>)
 8005efc:	6f1b      	ldr	r3, [r3, #112]	@ 0x70
 8005efe:	4a5d      	ldr	r2, [pc, #372]	@ (8006074 <HAL_RCC_OscConfig+0x4ac>)
 8005f00:	f043 0301 	orr.w	r3, r3, #1
 8005f04:	6713      	str	r3, [r2, #112]	@ 0x70
 8005f06:	e00b      	b.n	8005f20 <HAL_RCC_OscConfig+0x358>
 8005f08:	4b5a      	ldr	r3, [pc, #360]	@ (8006074 <HAL_RCC_OscConfig+0x4ac>)
 8005f0a:	6f1b      	ldr	r3, [r3, #112]	@ 0x70
 8005f0c:	4a59      	ldr	r2, [pc, #356]	@ (8006074 <HAL_RCC_OscConfig+0x4ac>)
 8005f0e:	f023 0301 	bic.w	r3, r3, #1
 8005f12:	6713      	str	r3, [r2, #112]	@ 0x70
 8005f14:	4b57      	ldr	r3, [pc, #348]	@ (8006074 <HAL_RCC_OscConfig+0x4ac>)
 8005f16:	6f1b      	ldr	r3, [r3, #112]	@ 0x70
 8005f18:	4a56      	ldr	r2, [pc, #344]	@ (8006074 <HAL_RCC_OscConfig+0x4ac>)
 8005f1a:	f023 0304 	bic.w	r3, r3, #4
 8005f1e:	6713      	str	r3, [r2, #112]	@ 0x70
    /* Check the LSE State */
    if ((RCC_OscInitStruct->LSEState) != RCC_LSE_OFF)
 8005f20:	687b      	ldr	r3, [r7, #4]
 8005f22:	689b      	ldr	r3, [r3, #8]
 8005f24:	2b00      	cmp	r3, #0
 8005f26:	d015      	beq.n	8005f54 <HAL_RCC_OscConfig+0x38c>
    {
      /* Get Start Tick*/
      tickstart = HAL_GetTick();
 8005f28:	f7fc fd14 	bl	8002954 <HAL_GetTick>
 8005f2c:	6138      	str	r0, [r7, #16]

      /* Wait till LSE is ready */
      while (__HAL_RCC_GET_FLAG(RCC_FLAG_LSERDY) == RESET)
 8005f2e:	e00a      	b.n	8005f46 <HAL_RCC_OscConfig+0x37e>
      {
        if ((HAL_GetTick() - tickstart) > RCC_LSE_TIMEOUT_VALUE)
 8005f30:	f7fc fd10 	bl	8002954 <HAL_GetTick>
 8005f34:	4602      	mov	r2, r0
 8005f36:	693b      	ldr	r3, [r7, #16]
 8005f38:	1ad3      	subs	r3, r2, r3
 8005f3a:	f241 3288 	movw	r2, #5000	@ 0x1388
 8005f3e:	4293      	cmp	r3, r2
 8005f40:	d901      	bls.n	8005f46 <HAL_RCC_OscConfig+0x37e>
        {
          return HAL_TIMEOUT;
 8005f42:	2303      	movs	r3, #3
 8005f44:	e0d7      	b.n	80060f6 <HAL_RCC_OscConfig+0x52e>
      while (__HAL_RCC_GET_FLAG(RCC_FLAG_LSERDY) == RESET)
 8005f46:	4b4b      	ldr	r3, [pc, #300]	@ (8006074 <HAL_RCC_OscConfig+0x4ac>)
 8005f48:	6f1b      	ldr	r3, [r3, #112]	@ 0x70
 8005f4a:	f003 0302 	and.w	r3, r3, #2
 8005f4e:	2b00      	cmp	r3, #0
 8005f50:	d0ee      	beq.n	8005f30 <HAL_RCC_OscConfig+0x368>
 8005f52:	e014      	b.n	8005f7e <HAL_RCC_OscConfig+0x3b6>
      }
    }
    else
    {
      /* Get Start Tick*/
      tickstart = HAL_GetTick();
 8005f54:	f7fc fcfe 	bl	8002954 <HAL_GetTick>
 8005f58:	6138      	str	r0, [r7, #16]

      /* Wait till LSE is ready */
      while (__HAL_RCC_GET_FLAG(RCC_FLAG_LSERDY) != RESET)
 8005f5a:	e00a      	b.n	8005f72 <HAL_RCC_OscConfig+0x3aa>
      {
        if ((HAL_GetTick() - tickstart) > RCC_LSE_TIMEOUT_VALUE)
 8005f5c:	f7fc fcfa 	bl	8002954 <HAL_GetTick>
 8005f60:	4602      	mov	r2, r0
 8005f62:	693b      	ldr	r3, [r7, #16]
 8005f64:	1ad3      	subs	r3, r2, r3
 8005f66:	f241 3288 	movw	r2, #5000	@ 0x1388
 8005f6a:	4293      	cmp	r3, r2
 8005f6c:	d901      	bls.n	8005f72 <HAL_RCC_OscConfig+0x3aa>
        {
          return HAL_TIMEOUT;
 8005f6e:	2303      	movs	r3, #3
 8005f70:	e0c1      	b.n	80060f6 <HAL_RCC_OscConfig+0x52e>
      while (__HAL_RCC_GET_FLAG(RCC_FLAG_LSERDY) != RESET)
 8005f72:	4b40      	ldr	r3, [pc, #256]	@ (8006074 <HAL_RCC_OscConfig+0x4ac>)
 8005f74:	6f1b      	ldr	r3, [r3, #112]	@ 0x70
 8005f76:	f003 0302 	and.w	r3, r3, #2
 8005f7a:	2b00      	cmp	r3, #0
 8005f7c:	d1ee      	bne.n	8005f5c <HAL_RCC_OscConfig+0x394>
        }
      }
    }

    /* Restore clock configuration if changed */
    if (pwrclkchanged == SET)
 8005f7e:	7dfb      	ldrb	r3, [r7, #23]
 8005f80:	2b01      	cmp	r3, #1
 8005f82:	d105      	bne.n	8005f90 <HAL_RCC_OscConfig+0x3c8>
    {
      __HAL_RCC_PWR_CLK_DISABLE();
 8005f84:	4b3b      	ldr	r3, [pc, #236]	@ (8006074 <HAL_RCC_OscConfig+0x4ac>)
 8005f86:	6c1b      	ldr	r3, [r3, #64]	@ 0x40
 8005f88:	4a3a      	ldr	r2, [pc, #232]	@ (8006074 <HAL_RCC_OscConfig+0x4ac>)
 8005f8a:	f023 5380 	bic.w	r3, r3, #268435456	@ 0x10000000
 8005f8e:	6413      	str	r3, [r2, #64]	@ 0x40
    }
  }
  /*-------------------------------- PLL Configuration -----------------------*/
  /* Check the parameters */
  assert_param(IS_RCC_PLL(RCC_OscInitStruct->PLL.PLLState));
  if ((RCC_OscInitStruct->PLL.PLLState) != RCC_PLL_NONE)
 8005f90:	687b      	ldr	r3, [r7, #4]
 8005f92:	699b      	ldr	r3, [r3, #24]
 8005f94:	2b00      	cmp	r3, #0
 8005f96:	f000 80ad 	beq.w	80060f4 <HAL_RCC_OscConfig+0x52c>
  {
    /* Check if the PLL is used as system clock or not */
    if (__HAL_RCC_GET_SYSCLK_SOURCE() != RCC_CFGR_SWS_PLL)
 8005f9a:	4b36      	ldr	r3, [pc, #216]	@ (8006074 <HAL_RCC_OscConfig+0x4ac>)
 8005f9c:	689b      	ldr	r3, [r3, #8]
 8005f9e:	f003 030c 	and.w	r3, r3, #12
 8005fa2:	2b08      	cmp	r3, #8
 8005fa4:	d060      	beq.n	8006068 <HAL_RCC_OscConfig+0x4a0>
    {
      if ((RCC_OscInitStruct->PLL.PLLState) == RCC_PLL_ON)
 8005fa6:	687b      	ldr	r3, [r7, #4]
 8005fa8:	699b      	ldr	r3, [r3, #24]
 8005faa:	2b02      	cmp	r3, #2
 8005fac:	d145      	bne.n	800603a <HAL_RCC_OscConfig+0x472>
        assert_param(IS_RCC_PLLP_VALUE(RCC_OscInitStruct->PLL.PLLP));
        assert_param(IS_RCC_PLLQ_VALUE(RCC_OscInitStruct->PLL.PLLQ));
        assert_param(IS_RCC_PLLR_VALUE(RCC_OscInitStruct->PLL.PLLR));

        /* Disable the main PLL. */
        __HAL_RCC_PLL_DISABLE();
 8005fae:	4b33      	ldr	r3, [pc, #204]	@ (800607c <HAL_RCC_OscConfig+0x4b4>)
 8005fb0:	2200      	movs	r2, #0
 8005fb2:	601a      	str	r2, [r3, #0]

        /* Get Start Tick*/
        tickstart = HAL_GetTick();
 8005fb4:	f7fc fcce 	bl	8002954 <HAL_GetTick>
 8005fb8:	6138      	str	r0, [r7, #16]

        /* Wait till PLL is ready */
        while (__HAL_RCC_GET_FLAG(RCC_FLAG_PLLRDY) != RESET)
 8005fba:	e008      	b.n	8005fce <HAL_RCC_OscConfig+0x406>
        {
          if ((HAL_GetTick() - tickstart) > PLL_TIMEOUT_VALUE)
 8005fbc:	f7fc fcca 	bl	8002954 <HAL_GetTick>
 8005fc0:	4602      	mov	r2, r0
 8005fc2:	693b      	ldr	r3, [r7, #16]
 8005fc4:	1ad3      	subs	r3, r2, r3
 8005fc6:	2b02      	cmp	r3, #2
 8005fc8:	d901      	bls.n	8005fce <HAL_RCC_OscConfig+0x406>
          {
            return HAL_TIMEOUT;
 8005fca:	2303      	movs	r3, #3
 8005fcc:	e093      	b.n	80060f6 <HAL_RCC_OscConfig+0x52e>
        while (__HAL_RCC_GET_FLAG(RCC_FLAG_PLLRDY) != RESET)
 8005fce:	4b29      	ldr	r3, [pc, #164]	@ (8006074 <HAL_RCC_OscConfig+0x4ac>)
 8005fd0:	681b      	ldr	r3, [r3, #0]
 8005fd2:	f003 7300 	and.w	r3, r3, #33554432	@ 0x2000000
 8005fd6:	2b00      	cmp	r3, #0
 8005fd8:	d1f0      	bne.n	8005fbc <HAL_RCC_OscConfig+0x3f4>
          }
        }

        /* Configure the main PLL clock source, multiplication and division factors. */
        WRITE_REG(RCC->PLLCFGR, (RCC_OscInitStruct->PLL.PLLSource                                            | \
 8005fda:	687b      	ldr	r3, [r7, #4]
 8005fdc:	69da      	ldr	r2, [r3, #28]
 8005fde:	687b      	ldr	r3, [r7, #4]
 8005fe0:	6a1b      	ldr	r3, [r3, #32]
 8005fe2:	431a      	orrs	r2, r3
 8005fe4:	687b      	ldr	r3, [r7, #4]
 8005fe6:	6a5b      	ldr	r3, [r3, #36]	@ 0x24
 8005fe8:	019b      	lsls	r3, r3, #6
 8005fea:	431a      	orrs	r2, r3
 8005fec:	687b      	ldr	r3, [r7, #4]
 8005fee:	6a9b      	ldr	r3, [r3, #40]	@ 0x28
 8005ff0:	085b      	lsrs	r3, r3, #1
 8005ff2:	3b01      	subs	r3, #1
 8005ff4:	041b      	lsls	r3, r3, #16
 8005ff6:	431a      	orrs	r2, r3
 8005ff8:	687b      	ldr	r3, [r7, #4]
 8005ffa:	6adb      	ldr	r3, [r3, #44]	@ 0x2c
 8005ffc:	061b      	lsls	r3, r3, #24
 8005ffe:	431a      	orrs	r2, r3
 8006000:	687b      	ldr	r3, [r7, #4]
 8006002:	6b1b      	ldr	r3, [r3, #48]	@ 0x30
 8006004:	071b      	lsls	r3, r3, #28
 8006006:	491b      	ldr	r1, [pc, #108]	@ (8006074 <HAL_RCC_OscConfig+0x4ac>)
 8006008:	4313      	orrs	r3, r2
 800600a:	604b      	str	r3, [r1, #4]
                                 (RCC_OscInitStruct->PLL.PLLN << RCC_PLLCFGR_PLLN_Pos)                       | \
                                 (((RCC_OscInitStruct->PLL.PLLP >> 1U) - 1U) << RCC_PLLCFGR_PLLP_Pos)        | \
                                 (RCC_OscInitStruct->PLL.PLLQ << RCC_PLLCFGR_PLLQ_Pos)                       | \
                                 (RCC_OscInitStruct->PLL.PLLR << RCC_PLLCFGR_PLLR_Pos)));
        /* Enable the main PLL. */
        __HAL_RCC_PLL_ENABLE();
 800600c:	4b1b      	ldr	r3, [pc, #108]	@ (800607c <HAL_RCC_OscConfig+0x4b4>)
 800600e:	2201      	movs	r2, #1
 8006010:	601a      	str	r2, [r3, #0]

        /* Get Start Tick*/
        tickstart = HAL_GetTick();
 8006012:	f7fc fc9f 	bl	8002954 <HAL_GetTick>
 8006016:	6138      	str	r0, [r7, #16]

        /* Wait till PLL is ready */
        while (__HAL_RCC_GET_FLAG(RCC_FLAG_PLLRDY) == RESET)
 8006018:	e008      	b.n	800602c <HAL_RCC_OscConfig+0x464>
        {
          if ((HAL_GetTick() - tickstart) > PLL_TIMEOUT_VALUE)
 800601a:	f7fc fc9b 	bl	8002954 <HAL_GetTick>
 800601e:	4602      	mov	r2, r0
 8006020:	693b      	ldr	r3, [r7, #16]
 8006022:	1ad3      	subs	r3, r2, r3
 8006024:	2b02      	cmp	r3, #2
 8006026:	d901      	bls.n	800602c <HAL_RCC_OscConfig+0x464>
          {
            return HAL_TIMEOUT;
 8006028:	2303      	movs	r3, #3
 800602a:	e064      	b.n	80060f6 <HAL_RCC_OscConfig+0x52e>
        while (__HAL_RCC_GET_FLAG(RCC_FLAG_PLLRDY) == RESET)
 800602c:	4b11      	ldr	r3, [pc, #68]	@ (8006074 <HAL_RCC_OscConfig+0x4ac>)
 800602e:	681b      	ldr	r3, [r3, #0]
 8006030:	f003 7300 	and.w	r3, r3, #33554432	@ 0x2000000
 8006034:	2b00      	cmp	r3, #0
 8006036:	d0f0      	beq.n	800601a <HAL_RCC_OscConfig+0x452>
 8006038:	e05c      	b.n	80060f4 <HAL_RCC_OscConfig+0x52c>
        }
      }
      else
      {
        /* Disable the main PLL. */
        __HAL_RCC_PLL_DISABLE();
 800603a:	4b10      	ldr	r3, [pc, #64]	@ (800607c <HAL_RCC_OscConfig+0x4b4>)
 800603c:	2200      	movs	r2, #0
 800603e:	601a      	str	r2, [r3, #0]

        /* Get Start Tick*/
        tickstart = HAL_GetTick();
 8006040:	f7fc fc88 	bl	8002954 <HAL_GetTick>
 8006044:	6138      	str	r0, [r7, #16]

        /* Wait till PLL is ready */
        while (__HAL_RCC_GET_FLAG(RCC_FLAG_PLLRDY) != RESET)
 8006046:	e008      	b.n	800605a <HAL_RCC_OscConfig+0x492>
        {
          if ((HAL_GetTick() - tickstart) > PLL_TIMEOUT_VALUE)
 8006048:	f7fc fc84 	bl	8002954 <HAL_GetTick>
 800604c:	4602      	mov	r2, r0
 800604e:	693b      	ldr	r3, [r7, #16]
 8006050:	1ad3      	subs	r3, r2, r3
 8006052:	2b02      	cmp	r3, #2
 8006054:	d901      	bls.n	800605a <HAL_RCC_OscConfig+0x492>
          {
            return HAL_TIMEOUT;
 8006056:	2303      	movs	r3, #3
 8006058:	e04d      	b.n	80060f6 <HAL_RCC_OscConfig+0x52e>
        while (__HAL_RCC_GET_FLAG(RCC_FLAG_PLLRDY) != RESET)
 800605a:	4b06      	ldr	r3, [pc, #24]	@ (8006074 <HAL_RCC_OscConfig+0x4ac>)
 800605c:	681b      	ldr	r3, [r3, #0]
 800605e:	f003 7300 	and.w	r3, r3, #33554432	@ 0x2000000
 8006062:	2b00      	cmp	r3, #0
 8006064:	d1f0      	bne.n	8006048 <HAL_RCC_OscConfig+0x480>
 8006066:	e045      	b.n	80060f4 <HAL_RCC_OscConfig+0x52c>
      }
    }
    else
    {
      /* Check if there is a request to disable the PLL used as System clock source */
      if ((RCC_OscInitStruct->PLL.PLLState) == RCC_PLL_OFF)
 8006068:	687b      	ldr	r3, [r7, #4]
 800606a:	699b      	ldr	r3, [r3, #24]
 800606c:	2b01      	cmp	r3, #1
 800606e:	d107      	bne.n	8006080 <HAL_RCC_OscConfig+0x4b8>
      {
        return HAL_ERROR;
 8006070:	2301      	movs	r3, #1
 8006072:	e040      	b.n	80060f6 <HAL_RCC_OscConfig+0x52e>
 8006074:	40023800 	.word	0x40023800
 8006078:	40007000 	.word	0x40007000
 800607c:	42470060 	.word	0x42470060
      }
      else
      {
        /* Do not return HAL_ERROR if request repeats the current configuration */
        pll_config = RCC->PLLCFGR;
 8006080:	4b1f      	ldr	r3, [pc, #124]	@ (8006100 <HAL_RCC_OscConfig+0x538>)
 8006082:	685b      	ldr	r3, [r3, #4]
 8006084:	60fb      	str	r3, [r7, #12]
#if defined (RCC_PLLCFGR_PLLR)
        if (((RCC_OscInitStruct->PLL.PLLState) == RCC_PLL_OFF) ||
 8006086:	687b      	ldr	r3, [r7, #4]
 8006088:	699b      	ldr	r3, [r3, #24]
 800608a:	2b01      	cmp	r3, #1
 800608c:	d030      	beq.n	80060f0 <HAL_RCC_OscConfig+0x528>
            (READ_BIT(pll_config, RCC_PLLCFGR_PLLSRC) != RCC_OscInitStruct->PLL.PLLSource) ||
 800608e:	68fb      	ldr	r3, [r7, #12]
 8006090:	f403 0280 	and.w	r2, r3, #4194304	@ 0x400000
 8006094:	687b      	ldr	r3, [r7, #4]
 8006096:	69db      	ldr	r3, [r3, #28]
        if (((RCC_OscInitStruct->PLL.PLLState) == RCC_PLL_OFF) ||
 8006098:	429a      	cmp	r2, r3
 800609a:	d129      	bne.n	80060f0 <HAL_RCC_OscConfig+0x528>
            (READ_BIT(pll_config, RCC_PLLCFGR_PLLM) != (RCC_OscInitStruct->PLL.PLLM) << RCC_PLLCFGR_PLLM_Pos) ||
 800609c:	68fb      	ldr	r3, [r7, #12]
 800609e:	f003 023f 	and.w	r2, r3, #63	@ 0x3f
 80060a2:	687b      	ldr	r3, [r7, #4]
 80060a4:	6a1b      	ldr	r3, [r3, #32]
            (READ_BIT(pll_config, RCC_PLLCFGR_PLLSRC) != RCC_OscInitStruct->PLL.PLLSource) ||
 80060a6:	429a      	cmp	r2, r3
 80060a8:	d122      	bne.n	80060f0 <HAL_RCC_OscConfig+0x528>
            (READ_BIT(pll_config, RCC_PLLCFGR_PLLN) != (RCC_OscInitStruct->PLL.PLLN) << RCC_PLLCFGR_PLLN_Pos) ||
 80060aa:	68fa      	ldr	r2, [r7, #12]
 80060ac:	f647 73c0 	movw	r3, #32704	@ 0x7fc0
 80060b0:	4013      	ands	r3, r2
 80060b2:	687a      	ldr	r2, [r7, #4]
 80060b4:	6a52      	ldr	r2, [r2, #36]	@ 0x24
 80060b6:	0192      	lsls	r2, r2, #6
            (READ_BIT(pll_config, RCC_PLLCFGR_PLLM) != (RCC_OscInitStruct->PLL.PLLM) << RCC_PLLCFGR_PLLM_Pos) ||
 80060b8:	4293      	cmp	r3, r2
 80060ba:	d119      	bne.n	80060f0 <HAL_RCC_OscConfig+0x528>
            (READ_BIT(pll_config, RCC_PLLCFGR_PLLP) != (((RCC_OscInitStruct->PLL.PLLP >> 1U) - 1U)) << RCC_PLLCFGR_PLLP_Pos) ||
 80060bc:	68fb      	ldr	r3, [r7, #12]
 80060be:	f403 3240 	and.w	r2, r3, #196608	@ 0x30000
 80060c2:	687b      	ldr	r3, [r7, #4]
 80060c4:	6a9b      	ldr	r3, [r3, #40]	@ 0x28
 80060c6:	085b      	lsrs	r3, r3, #1
 80060c8:	3b01      	subs	r3, #1
 80060ca:	041b      	lsls	r3, r3, #16
            (READ_BIT(pll_config, RCC_PLLCFGR_PLLN) != (RCC_OscInitStruct->PLL.PLLN) << RCC_PLLCFGR_PLLN_Pos) ||
 80060cc:	429a      	cmp	r2, r3
 80060ce:	d10f      	bne.n	80060f0 <HAL_RCC_OscConfig+0x528>
            (READ_BIT(pll_config, RCC_PLLCFGR_PLLQ) != (RCC_OscInitStruct->PLL.PLLQ << RCC_PLLCFGR_PLLQ_Pos)) ||
 80060d0:	68fb      	ldr	r3, [r7, #12]
 80060d2:	f003 6270 	and.w	r2, r3, #251658240	@ 0xf000000
 80060d6:	687b      	ldr	r3, [r7, #4]
 80060d8:	6adb      	ldr	r3, [r3, #44]	@ 0x2c
 80060da:	061b      	lsls	r3, r3, #24
            (READ_BIT(pll_config, RCC_PLLCFGR_PLLP) != (((RCC_OscInitStruct->PLL.PLLP >> 1U) - 1U)) << RCC_PLLCFGR_PLLP_Pos) ||
 80060dc:	429a      	cmp	r2, r3
 80060de:	d107      	bne.n	80060f0 <HAL_RCC_OscConfig+0x528>
            (READ_BIT(pll_config, RCC_PLLCFGR_PLLR) != (RCC_OscInitStruct->PLL.PLLR << RCC_PLLCFGR_PLLR_Pos)))
 80060e0:	68fb      	ldr	r3, [r7, #12]
 80060e2:	f003 42e0 	and.w	r2, r3, #1879048192	@ 0x70000000
 80060e6:	687b      	ldr	r3, [r7, #4]
 80060e8:	6b1b      	ldr	r3, [r3, #48]	@ 0x30
 80060ea:	071b      	lsls	r3, r3, #28
            (READ_BIT(pll_config, RCC_PLLCFGR_PLLQ) != (RCC_OscInitStruct->PLL.PLLQ << RCC_PLLCFGR_PLLQ_Pos)) ||
 80060ec:	429a      	cmp	r2, r3
 80060ee:	d001      	beq.n	80060f4 <HAL_RCC_OscConfig+0x52c>
            (READ_BIT(pll_config, RCC_PLLCFGR_PLLN) != (RCC_OscInitStruct->PLL.PLLN) << RCC_PLLCFGR_PLLN_Pos) ||
            (READ_BIT(pll_config, RCC_PLLCFGR_PLLP) != (((RCC_OscInitStruct->PLL.PLLP >> 1U) - 1U)) << RCC_PLLCFGR_PLLP_Pos) ||
            (READ_BIT(pll_config, RCC_PLLCFGR_PLLQ) != (RCC_OscInitStruct->PLL.PLLQ << RCC_PLLCFGR_PLLQ_Pos)))
#endif /* RCC_PLLCFGR_PLLR */
        {
          return HAL_ERROR;
 80060f0:	2301      	movs	r3, #1
 80060f2:	e000      	b.n	80060f6 <HAL_RCC_OscConfig+0x52e>
        }
      }
    }
  }
  return HAL_OK;
 80060f4:	2300      	movs	r3, #0
}
 80060f6:	4618      	mov	r0, r3
 80060f8:	3718      	adds	r7, #24
 80060fa:	46bd      	mov	sp, r7
 80060fc:	bd80      	pop	{r7, pc}
 80060fe:	bf00      	nop
 8006100:	40023800 	.word	0x40023800

08006104 <HAL_SPI_Init>:
  * @param  hspi pointer to a SPI_HandleTypeDef structure that contains
  *               the configuration information for SPI module.
  * @retval HAL status
  */
HAL_StatusTypeDef HAL_SPI_Init(SPI_HandleTypeDef *hspi)
{
 8006104:	b580      	push	{r7, lr}
 8006106:	b082      	sub	sp, #8
 8006108:	af00      	add	r7, sp, #0
 800610a:	6078      	str	r0, [r7, #4]
  /* Check the SPI handle allocation */
  if (hspi == NULL)
 800610c:	687b      	ldr	r3, [r7, #4]
 800610e:	2b00      	cmp	r3, #0
 8006110:	d101      	bne.n	8006116 <HAL_SPI_Init+0x12>
  {
    return HAL_ERROR;
 8006112:	2301      	movs	r3, #1
 8006114:	e07b      	b.n	800620e <HAL_SPI_Init+0x10a>
  assert_param(IS_SPI_DATASIZE(hspi->Init.DataSize));
  assert_param(IS_SPI_NSS(hspi->Init.NSS));
  assert_param(IS_SPI_BAUDRATE_PRESCALER(hspi->Init.BaudRatePrescaler));
  assert_param(IS_SPI_FIRST_BIT(hspi->Init.FirstBit));
  assert_param(IS_SPI_TIMODE(hspi->Init.TIMode));
  if (hspi->Init.TIMode == SPI_TIMODE_DISABLE)
 8006116:	687b      	ldr	r3, [r7, #4]
 8006118:	6a5b      	ldr	r3, [r3, #36]	@ 0x24
 800611a:	2b00      	cmp	r3, #0
 800611c:	d108      	bne.n	8006130 <HAL_SPI_Init+0x2c>
  {
    assert_param(IS_SPI_CPOL(hspi->Init.CLKPolarity));
    assert_param(IS_SPI_CPHA(hspi->Init.CLKPhase));

    if (hspi->Init.Mode == SPI_MODE_MASTER)
 800611e:	687b      	ldr	r3, [r7, #4]
 8006120:	685b      	ldr	r3, [r3, #4]
 8006122:	f5b3 7f82 	cmp.w	r3, #260	@ 0x104
 8006126:	d009      	beq.n	800613c <HAL_SPI_Init+0x38>
      assert_param(IS_SPI_BAUDRATE_PRESCALER(hspi->Init.BaudRatePrescaler));
    }
    else
    {
      /* Baudrate prescaler not use in Motoraola Slave mode. force to default value */
      hspi->Init.BaudRatePrescaler = SPI_BAUDRATEPRESCALER_2;
 8006128:	687b      	ldr	r3, [r7, #4]
 800612a:	2200      	movs	r2, #0
 800612c:	61da      	str	r2, [r3, #28]
 800612e:	e005      	b.n	800613c <HAL_SPI_Init+0x38>
  else
  {
    assert_param(IS_SPI_BAUDRATE_PRESCALER(hspi->Init.BaudRatePrescaler));

    /* Force polarity and phase to TI protocaol requirements */
    hspi->Init.CLKPolarity = SPI_POLARITY_LOW;
 8006130:	687b      	ldr	r3, [r7, #4]
 8006132:	2200      	movs	r2, #0
 8006134:	611a      	str	r2, [r3, #16]
    hspi->Init.CLKPhase    = SPI_PHASE_1EDGE;
 8006136:	687b      	ldr	r3, [r7, #4]
 8006138:	2200      	movs	r2, #0
 800613a:	615a      	str	r2, [r3, #20]
  if (hspi->Init.CRCCalculation == SPI_CRCCALCULATION_ENABLE)
  {
    assert_param(IS_SPI_CRC_POLYNOMIAL(hspi->Init.CRCPolynomial));
  }
#else
  hspi->Init.CRCCalculation = SPI_CRCCALCULATION_DISABLE;
 800613c:	687b      	ldr	r3, [r7, #4]
 800613e:	2200      	movs	r2, #0
 8006140:	629a      	str	r2, [r3, #40]	@ 0x28
#endif /* USE_SPI_CRC */

  if (hspi->State == HAL_SPI_STATE_RESET)
 8006142:	687b      	ldr	r3, [r7, #4]
 8006144:	f893 3051 	ldrb.w	r3, [r3, #81]	@ 0x51
 8006148:	b2db      	uxtb	r3, r3
 800614a:	2b00      	cmp	r3, #0
 800614c:	d106      	bne.n	800615c <HAL_SPI_Init+0x58>
  {
    /* Allocate lock resource and initialize it */
    hspi->Lock = HAL_UNLOCKED;
 800614e:	687b      	ldr	r3, [r7, #4]
 8006150:	2200      	movs	r2, #0
 8006152:	f883 2050 	strb.w	r2, [r3, #80]	@ 0x50

    /* Init the low level hardware : GPIO, CLOCK, NVIC... */
    hspi->MspInitCallback(hspi);
#else
    /* Init the low level hardware : GPIO, CLOCK, NVIC... */
    HAL_SPI_MspInit(hspi);
 8006156:	6878      	ldr	r0, [r7, #4]
 8006158:	f7fb fc52 	bl	8001a00 <HAL_SPI_MspInit>
#endif /* USE_HAL_SPI_REGISTER_CALLBACKS */
  }

  hspi->State = HAL_SPI_STATE_BUSY;
 800615c:	687b      	ldr	r3, [r7, #4]
 800615e:	2202      	movs	r2, #2
 8006160:	f883 2051 	strb.w	r2, [r3, #81]	@ 0x51

  /* Disable the selected SPI peripheral */
  __HAL_SPI_DISABLE(hspi);
 8006164:	687b      	ldr	r3, [r7, #4]
 8006166:	681b      	ldr	r3, [r3, #0]
 8006168:	681a      	ldr	r2, [r3, #0]
 800616a:	687b      	ldr	r3, [r7, #4]
 800616c:	681b      	ldr	r3, [r3, #0]
 800616e:	f022 0240 	bic.w	r2, r2, #64	@ 0x40
 8006172:	601a      	str	r2, [r3, #0]

  /*----------------------- SPIx CR1 & CR2 Configuration ---------------------*/
  /* Configure : SPI Mode, Communication Mode, Data size, Clock polarity and phase, NSS management,
  Communication speed, First bit and CRC calculation state */
  WRITE_REG(hspi->Instance->CR1, ((hspi->Init.Mode & (SPI_CR1_MSTR | SPI_CR1_SSI)) |
 8006174:	687b      	ldr	r3, [r7, #4]
 8006176:	685b      	ldr	r3, [r3, #4]
 8006178:	f403 7282 	and.w	r2, r3, #260	@ 0x104
 800617c:	687b      	ldr	r3, [r7, #4]
 800617e:	689b      	ldr	r3, [r3, #8]
 8006180:	f403 4304 	and.w	r3, r3, #33792	@ 0x8400
 8006184:	431a      	orrs	r2, r3
 8006186:	687b      	ldr	r3, [r7, #4]
 8006188:	68db      	ldr	r3, [r3, #12]
 800618a:	f403 6300 	and.w	r3, r3, #2048	@ 0x800
 800618e:	431a      	orrs	r2, r3
 8006190:	687b      	ldr	r3, [r7, #4]
 8006192:	691b      	ldr	r3, [r3, #16]
 8006194:	f003 0302 	and.w	r3, r3, #2
 8006198:	431a      	orrs	r2, r3
 800619a:	687b      	ldr	r3, [r7, #4]
 800619c:	695b      	ldr	r3, [r3, #20]
 800619e:	f003 0301 	and.w	r3, r3, #1
 80061a2:	431a      	orrs	r2, r3
 80061a4:	687b      	ldr	r3, [r7, #4]
 80061a6:	699b      	ldr	r3, [r3, #24]
 80061a8:	f403 7300 	and.w	r3, r3, #512	@ 0x200
 80061ac:	431a      	orrs	r2, r3
 80061ae:	687b      	ldr	r3, [r7, #4]
 80061b0:	69db      	ldr	r3, [r3, #28]
 80061b2:	f003 0338 	and.w	r3, r3, #56	@ 0x38
 80061b6:	431a      	orrs	r2, r3
 80061b8:	687b      	ldr	r3, [r7, #4]
 80061ba:	6a1b      	ldr	r3, [r3, #32]
 80061bc:	f003 0380 	and.w	r3, r3, #128	@ 0x80
 80061c0:	ea42 0103 	orr.w	r1, r2, r3
 80061c4:	687b      	ldr	r3, [r7, #4]
 80061c6:	6a9b      	ldr	r3, [r3, #40]	@ 0x28
 80061c8:	f403 5200 	and.w	r2, r3, #8192	@ 0x2000
 80061cc:	687b      	ldr	r3, [r7, #4]
 80061ce:	681b      	ldr	r3, [r3, #0]
 80061d0:	430a      	orrs	r2, r1
 80061d2:	601a      	str	r2, [r3, #0]
                                  (hspi->Init.BaudRatePrescaler & SPI_CR1_BR_Msk) |
                                  (hspi->Init.FirstBit  & SPI_CR1_LSBFIRST) |
                                  (hspi->Init.CRCCalculation & SPI_CR1_CRCEN)));

  /* Configure : NSS management, TI Mode */
  WRITE_REG(hspi->Instance->CR2, (((hspi->Init.NSS >> 16U) & SPI_CR2_SSOE) | (hspi->Init.TIMode & SPI_CR2_FRF)));
 80061d4:	687b      	ldr	r3, [r7, #4]
 80061d6:	699b      	ldr	r3, [r3, #24]
 80061d8:	0c1b      	lsrs	r3, r3, #16
 80061da:	f003 0104 	and.w	r1, r3, #4
 80061de:	687b      	ldr	r3, [r7, #4]
 80061e0:	6a5b      	ldr	r3, [r3, #36]	@ 0x24
 80061e2:	f003 0210 	and.w	r2, r3, #16
 80061e6:	687b      	ldr	r3, [r7, #4]
 80061e8:	681b      	ldr	r3, [r3, #0]
 80061ea:	430a      	orrs	r2, r1
 80061ec:	605a      	str	r2, [r3, #4]
  }
#endif /* USE_SPI_CRC */

#if defined(SPI_I2SCFGR_I2SMOD)
  /* Activate the SPI mode (Make sure that I2SMOD bit in I2SCFGR register is reset) */
  CLEAR_BIT(hspi->Instance->I2SCFGR, SPI_I2SCFGR_I2SMOD);
 80061ee:	687b      	ldr	r3, [r7, #4]
 80061f0:	681b      	ldr	r3, [r3, #0]
 80061f2:	69da      	ldr	r2, [r3, #28]
 80061f4:	687b      	ldr	r3, [r7, #4]
 80061f6:	681b      	ldr	r3, [r3, #0]
 80061f8:	f422 6200 	bic.w	r2, r2, #2048	@ 0x800
 80061fc:	61da      	str	r2, [r3, #28]
#endif /* SPI_I2SCFGR_I2SMOD */

  hspi->ErrorCode = HAL_SPI_ERROR_NONE;
 80061fe:	687b      	ldr	r3, [r7, #4]
 8006200:	2200      	movs	r2, #0
 8006202:	655a      	str	r2, [r3, #84]	@ 0x54
  hspi->State     = HAL_SPI_STATE_READY;
 8006204:	687b      	ldr	r3, [r7, #4]
 8006206:	2201      	movs	r2, #1
 8006208:	f883 2051 	strb.w	r2, [r3, #81]	@ 0x51

  return HAL_OK;
 800620c:	2300      	movs	r3, #0
}
 800620e:	4618      	mov	r0, r3
 8006210:	3708      	adds	r7, #8
 8006212:	46bd      	mov	sp, r7
 8006214:	bd80      	pop	{r7, pc}

08006216 <HAL_SPI_Transmit>:
  * @param  Size amount of data to be sent
  * @param  Timeout Timeout duration
  * @retval HAL status
  */
HAL_StatusTypeDef HAL_SPI_Transmit(SPI_HandleTypeDef *hspi, const uint8_t *pData, uint16_t Size, uint32_t Timeout)
{
 8006216:	b580      	push	{r7, lr}
 8006218:	b088      	sub	sp, #32
 800621a:	af00      	add	r7, sp, #0
 800621c:	60f8      	str	r0, [r7, #12]
 800621e:	60b9      	str	r1, [r7, #8]
 8006220:	603b      	str	r3, [r7, #0]
 8006222:	4613      	mov	r3, r2
 8006224:	80fb      	strh	r3, [r7, #6]

  /* Check Direction parameter */
  assert_param(IS_SPI_DIRECTION_2LINES_OR_1LINE(hspi->Init.Direction));

  /* Init tickstart for timeout management*/
  tickstart = HAL_GetTick();
 8006226:	f7fc fb95 	bl	8002954 <HAL_GetTick>
 800622a:	61f8      	str	r0, [r7, #28]
  initial_TxXferCount = Size;
 800622c:	88fb      	ldrh	r3, [r7, #6]
 800622e:	837b      	strh	r3, [r7, #26]

  if (hspi->State != HAL_SPI_STATE_READY)
 8006230:	68fb      	ldr	r3, [r7, #12]
 8006232:	f893 3051 	ldrb.w	r3, [r3, #81]	@ 0x51
 8006236:	b2db      	uxtb	r3, r3
 8006238:	2b01      	cmp	r3, #1
 800623a:	d001      	beq.n	8006240 <HAL_SPI_Transmit+0x2a>
  {
    return HAL_BUSY;
 800623c:	2302      	movs	r3, #2
 800623e:	e12a      	b.n	8006496 <HAL_SPI_Transmit+0x280>
  }

  if ((pData == NULL) || (Size == 0U))
 8006240:	68bb      	ldr	r3, [r7, #8]
 8006242:	2b00      	cmp	r3, #0
 8006244:	d002      	beq.n	800624c <HAL_SPI_Transmit+0x36>
 8006246:	88fb      	ldrh	r3, [r7, #6]
 8006248:	2b00      	cmp	r3, #0
 800624a:	d101      	bne.n	8006250 <HAL_SPI_Transmit+0x3a>
  {
    return HAL_ERROR;
 800624c:	2301      	movs	r3, #1
 800624e:	e122      	b.n	8006496 <HAL_SPI_Transmit+0x280>
  }

  /* Process Locked */
  __HAL_LOCK(hspi);
 8006250:	68fb      	ldr	r3, [r7, #12]
 8006252:	f893 3050 	ldrb.w	r3, [r3, #80]	@ 0x50
 8006256:	2b01      	cmp	r3, #1
 8006258:	d101      	bne.n	800625e <HAL_SPI_Transmit+0x48>
 800625a:	2302      	movs	r3, #2
 800625c:	e11b      	b.n	8006496 <HAL_SPI_Transmit+0x280>
 800625e:	68fb      	ldr	r3, [r7, #12]
 8006260:	2201      	movs	r2, #1
 8006262:	f883 2050 	strb.w	r2, [r3, #80]	@ 0x50

  /* Set the transaction information */
  hspi->State       = HAL_SPI_STATE_BUSY_TX;
 8006266:	68fb      	ldr	r3, [r7, #12]
 8006268:	2203      	movs	r2, #3
 800626a:	f883 2051 	strb.w	r2, [r3, #81]	@ 0x51
  hspi->ErrorCode   = HAL_SPI_ERROR_NONE;
 800626e:	68fb      	ldr	r3, [r7, #12]
 8006270:	2200      	movs	r2, #0
 8006272:	655a      	str	r2, [r3, #84]	@ 0x54
  hspi->pTxBuffPtr  = (const uint8_t *)pData;
 8006274:	68fb      	ldr	r3, [r7, #12]
 8006276:	68ba      	ldr	r2, [r7, #8]
 8006278:	631a      	str	r2, [r3, #48]	@ 0x30
  hspi->TxXferSize  = Size;
 800627a:	68fb      	ldr	r3, [r7, #12]
 800627c:	88fa      	ldrh	r2, [r7, #6]
 800627e:	869a      	strh	r2, [r3, #52]	@ 0x34
  hspi->TxXferCount = Size;
 8006280:	68fb      	ldr	r3, [r7, #12]
 8006282:	88fa      	ldrh	r2, [r7, #6]
 8006284:	86da      	strh	r2, [r3, #54]	@ 0x36

  /*Init field not used in handle to zero */
  hspi->pRxBuffPtr  = (uint8_t *)NULL;
 8006286:	68fb      	ldr	r3, [r7, #12]
 8006288:	2200      	movs	r2, #0
 800628a:	639a      	str	r2, [r3, #56]	@ 0x38
  hspi->RxXferSize  = 0U;
 800628c:	68fb      	ldr	r3, [r7, #12]
 800628e:	2200      	movs	r2, #0
 8006290:	879a      	strh	r2, [r3, #60]	@ 0x3c
  hspi->RxXferCount = 0U;
 8006292:	68fb      	ldr	r3, [r7, #12]
 8006294:	2200      	movs	r2, #0
 8006296:	87da      	strh	r2, [r3, #62]	@ 0x3e
  hspi->TxISR       = NULL;
 8006298:	68fb      	ldr	r3, [r7, #12]
 800629a:	2200      	movs	r2, #0
 800629c:	645a      	str	r2, [r3, #68]	@ 0x44
  hspi->RxISR       = NULL;
 800629e:	68fb      	ldr	r3, [r7, #12]
 80062a0:	2200      	movs	r2, #0
 80062a2:	641a      	str	r2, [r3, #64]	@ 0x40

  /* Configure communication direction : 1Line */
  if (hspi->Init.Direction == SPI_DIRECTION_1LINE)
 80062a4:	68fb      	ldr	r3, [r7, #12]
 80062a6:	689b      	ldr	r3, [r3, #8]
 80062a8:	f5b3 4f00 	cmp.w	r3, #32768	@ 0x8000
 80062ac:	d10f      	bne.n	80062ce <HAL_SPI_Transmit+0xb8>
  {
    /* Disable SPI Peripheral before set 1Line direction (BIDIOE bit) */
    __HAL_SPI_DISABLE(hspi);
 80062ae:	68fb      	ldr	r3, [r7, #12]
 80062b0:	681b      	ldr	r3, [r3, #0]
 80062b2:	681a      	ldr	r2, [r3, #0]
 80062b4:	68fb      	ldr	r3, [r7, #12]
 80062b6:	681b      	ldr	r3, [r3, #0]
 80062b8:	f022 0240 	bic.w	r2, r2, #64	@ 0x40
 80062bc:	601a      	str	r2, [r3, #0]
    SPI_1LINE_TX(hspi);
 80062be:	68fb      	ldr	r3, [r7, #12]
 80062c0:	681b      	ldr	r3, [r3, #0]
 80062c2:	681a      	ldr	r2, [r3, #0]
 80062c4:	68fb      	ldr	r3, [r7, #12]
 80062c6:	681b      	ldr	r3, [r3, #0]
 80062c8:	f442 4280 	orr.w	r2, r2, #16384	@ 0x4000
 80062cc:	601a      	str	r2, [r3, #0]
    SPI_RESET_CRC(hspi);
  }
#endif /* USE_SPI_CRC */

  /* Check if the SPI is already enabled */
  if ((hspi->Instance->CR1 & SPI_CR1_SPE) != SPI_CR1_SPE)
 80062ce:	68fb      	ldr	r3, [r7, #12]
 80062d0:	681b      	ldr	r3, [r3, #0]
 80062d2:	681b      	ldr	r3, [r3, #0]
 80062d4:	f003 0340 	and.w	r3, r3, #64	@ 0x40
 80062d8:	2b40      	cmp	r3, #64	@ 0x40
 80062da:	d007      	beq.n	80062ec <HAL_SPI_Transmit+0xd6>
  {
    /* Enable SPI peripheral */
    __HAL_SPI_ENABLE(hspi);
 80062dc:	68fb      	ldr	r3, [r7, #12]
 80062de:	681b      	ldr	r3, [r3, #0]
 80062e0:	681a      	ldr	r2, [r3, #0]
 80062e2:	68fb      	ldr	r3, [r7, #12]
 80062e4:	681b      	ldr	r3, [r3, #0]
 80062e6:	f042 0240 	orr.w	r2, r2, #64	@ 0x40
 80062ea:	601a      	str	r2, [r3, #0]
  }

  /* Transmit data in 16 Bit mode */
  if (hspi->Init.DataSize == SPI_DATASIZE_16BIT)
 80062ec:	68fb      	ldr	r3, [r7, #12]
 80062ee:	68db      	ldr	r3, [r3, #12]
 80062f0:	f5b3 6f00 	cmp.w	r3, #2048	@ 0x800
 80062f4:	d152      	bne.n	800639c <HAL_SPI_Transmit+0x186>
  {
    if ((hspi->Init.Mode == SPI_MODE_SLAVE) || (initial_TxXferCount == 0x01U))
 80062f6:	68fb      	ldr	r3, [r7, #12]
 80062f8:	685b      	ldr	r3, [r3, #4]
 80062fa:	2b00      	cmp	r3, #0
 80062fc:	d002      	beq.n	8006304 <HAL_SPI_Transmit+0xee>
 80062fe:	8b7b      	ldrh	r3, [r7, #26]
 8006300:	2b01      	cmp	r3, #1
 8006302:	d145      	bne.n	8006390 <HAL_SPI_Transmit+0x17a>
    {
      hspi->Instance->DR = *((const uint16_t *)hspi->pTxBuffPtr);
 8006304:	68fb      	ldr	r3, [r7, #12]
 8006306:	6b1b      	ldr	r3, [r3, #48]	@ 0x30
 8006308:	881a      	ldrh	r2, [r3, #0]
 800630a:	68fb      	ldr	r3, [r7, #12]
 800630c:	681b      	ldr	r3, [r3, #0]
 800630e:	60da      	str	r2, [r3, #12]
      hspi->pTxBuffPtr += sizeof(uint16_t);
 8006310:	68fb      	ldr	r3, [r7, #12]
 8006312:	6b1b      	ldr	r3, [r3, #48]	@ 0x30
 8006314:	1c9a      	adds	r2, r3, #2
 8006316:	68fb      	ldr	r3, [r7, #12]
 8006318:	631a      	str	r2, [r3, #48]	@ 0x30
      hspi->TxXferCount--;
 800631a:	68fb      	ldr	r3, [r7, #12]
 800631c:	8edb      	ldrh	r3, [r3, #54]	@ 0x36
 800631e:	b29b      	uxth	r3, r3
 8006320:	3b01      	subs	r3, #1
 8006322:	b29a      	uxth	r2, r3
 8006324:	68fb      	ldr	r3, [r7, #12]
 8006326:	86da      	strh	r2, [r3, #54]	@ 0x36
    }
    /* Transmit data in 16 Bit mode */
    while (hspi->TxXferCount > 0U)
 8006328:	e032      	b.n	8006390 <HAL_SPI_Transmit+0x17a>
    {
      /* Wait until TXE flag is set to send data */
      if (__HAL_SPI_GET_FLAG(hspi, SPI_FLAG_TXE))
 800632a:	68fb      	ldr	r3, [r7, #12]
 800632c:	681b      	ldr	r3, [r3, #0]
 800632e:	689b      	ldr	r3, [r3, #8]
 8006330:	f003 0302 	and.w	r3, r3, #2
 8006334:	2b02      	cmp	r3, #2
 8006336:	d112      	bne.n	800635e <HAL_SPI_Transmit+0x148>
      {
        hspi->Instance->DR = *((const uint16_t *)hspi->pTxBuffPtr);
 8006338:	68fb      	ldr	r3, [r7, #12]
 800633a:	6b1b      	ldr	r3, [r3, #48]	@ 0x30
 800633c:	881a      	ldrh	r2, [r3, #0]
 800633e:	68fb      	ldr	r3, [r7, #12]
 8006340:	681b      	ldr	r3, [r3, #0]
 8006342:	60da      	str	r2, [r3, #12]
        hspi->pTxBuffPtr += sizeof(uint16_t);
 8006344:	68fb      	ldr	r3, [r7, #12]
 8006346:	6b1b      	ldr	r3, [r3, #48]	@ 0x30
 8006348:	1c9a      	adds	r2, r3, #2
 800634a:	68fb      	ldr	r3, [r7, #12]
 800634c:	631a      	str	r2, [r3, #48]	@ 0x30
        hspi->TxXferCount--;
 800634e:	68fb      	ldr	r3, [r7, #12]
 8006350:	8edb      	ldrh	r3, [r3, #54]	@ 0x36
 8006352:	b29b      	uxth	r3, r3
 8006354:	3b01      	subs	r3, #1
 8006356:	b29a      	uxth	r2, r3
 8006358:	68fb      	ldr	r3, [r7, #12]
 800635a:	86da      	strh	r2, [r3, #54]	@ 0x36
 800635c:	e018      	b.n	8006390 <HAL_SPI_Transmit+0x17a>
      }
      else
      {
        /* Timeout management */
        if ((((HAL_GetTick() - tickstart) >=  Timeout) && (Timeout != HAL_MAX_DELAY)) || (Timeout == 0U))
 800635e:	f7fc faf9 	bl	8002954 <HAL_GetTick>
 8006362:	4602      	mov	r2, r0
 8006364:	69fb      	ldr	r3, [r7, #28]
 8006366:	1ad3      	subs	r3, r2, r3
 8006368:	683a      	ldr	r2, [r7, #0]
 800636a:	429a      	cmp	r2, r3
 800636c:	d803      	bhi.n	8006376 <HAL_SPI_Transmit+0x160>
 800636e:	683b      	ldr	r3, [r7, #0]
 8006370:	f1b3 3fff 	cmp.w	r3, #4294967295
 8006374:	d102      	bne.n	800637c <HAL_SPI_Transmit+0x166>
 8006376:	683b      	ldr	r3, [r7, #0]
 8006378:	2b00      	cmp	r3, #0
 800637a:	d109      	bne.n	8006390 <HAL_SPI_Transmit+0x17a>
        {
          hspi->State = HAL_SPI_STATE_READY;
 800637c:	68fb      	ldr	r3, [r7, #12]
 800637e:	2201      	movs	r2, #1
 8006380:	f883 2051 	strb.w	r2, [r3, #81]	@ 0x51
          __HAL_UNLOCK(hspi);
 8006384:	68fb      	ldr	r3, [r7, #12]
 8006386:	2200      	movs	r2, #0
 8006388:	f883 2050 	strb.w	r2, [r3, #80]	@ 0x50
          return HAL_TIMEOUT;
 800638c:	2303      	movs	r3, #3
 800638e:	e082      	b.n	8006496 <HAL_SPI_Transmit+0x280>
    while (hspi->TxXferCount > 0U)
 8006390:	68fb      	ldr	r3, [r7, #12]
 8006392:	8edb      	ldrh	r3, [r3, #54]	@ 0x36
 8006394:	b29b      	uxth	r3, r3
 8006396:	2b00      	cmp	r3, #0
 8006398:	d1c7      	bne.n	800632a <HAL_SPI_Transmit+0x114>
 800639a:	e053      	b.n	8006444 <HAL_SPI_Transmit+0x22e>
    }
  }
  /* Transmit data in 8 Bit mode */
  else
  {
    if ((hspi->Init.Mode == SPI_MODE_SLAVE) || (initial_TxXferCount == 0x01U))
 800639c:	68fb      	ldr	r3, [r7, #12]
 800639e:	685b      	ldr	r3, [r3, #4]
 80063a0:	2b00      	cmp	r3, #0
 80063a2:	d002      	beq.n	80063aa <HAL_SPI_Transmit+0x194>
 80063a4:	8b7b      	ldrh	r3, [r7, #26]
 80063a6:	2b01      	cmp	r3, #1
 80063a8:	d147      	bne.n	800643a <HAL_SPI_Transmit+0x224>
    {
      *((__IO uint8_t *)&hspi->Instance->DR) = *((const uint8_t *)hspi->pTxBuffPtr);
 80063aa:	68fb      	ldr	r3, [r7, #12]
 80063ac:	6b1a      	ldr	r2, [r3, #48]	@ 0x30
 80063ae:	68fb      	ldr	r3, [r7, #12]
 80063b0:	681b      	ldr	r3, [r3, #0]
 80063b2:	330c      	adds	r3, #12
 80063b4:	7812      	ldrb	r2, [r2, #0]
 80063b6:	701a      	strb	r2, [r3, #0]
      hspi->pTxBuffPtr += sizeof(uint8_t);
 80063b8:	68fb      	ldr	r3, [r7, #12]
 80063ba:	6b1b      	ldr	r3, [r3, #48]	@ 0x30
 80063bc:	1c5a      	adds	r2, r3, #1
 80063be:	68fb      	ldr	r3, [r7, #12]
 80063c0:	631a      	str	r2, [r3, #48]	@ 0x30
      hspi->TxXferCount--;
 80063c2:	68fb      	ldr	r3, [r7, #12]
 80063c4:	8edb      	ldrh	r3, [r3, #54]	@ 0x36
 80063c6:	b29b      	uxth	r3, r3
 80063c8:	3b01      	subs	r3, #1
 80063ca:	b29a      	uxth	r2, r3
 80063cc:	68fb      	ldr	r3, [r7, #12]
 80063ce:	86da      	strh	r2, [r3, #54]	@ 0x36
    }
    while (hspi->TxXferCount > 0U)
 80063d0:	e033      	b.n	800643a <HAL_SPI_Transmit+0x224>
    {
      /* Wait until TXE flag is set to send data */
      if (__HAL_SPI_GET_FLAG(hspi, SPI_FLAG_TXE))
 80063d2:	68fb      	ldr	r3, [r7, #12]
 80063d4:	681b      	ldr	r3, [r3, #0]
 80063d6:	689b      	ldr	r3, [r3, #8]
 80063d8:	f003 0302 	and.w	r3, r3, #2
 80063dc:	2b02      	cmp	r3, #2
 80063de:	d113      	bne.n	8006408 <HAL_SPI_Transmit+0x1f2>
      {
        *((__IO uint8_t *)&hspi->Instance->DR) = *((const uint8_t *)hspi->pTxBuffPtr);
 80063e0:	68fb      	ldr	r3, [r7, #12]
 80063e2:	6b1a      	ldr	r2, [r3, #48]	@ 0x30
 80063e4:	68fb      	ldr	r3, [r7, #12]
 80063e6:	681b      	ldr	r3, [r3, #0]
 80063e8:	330c      	adds	r3, #12
 80063ea:	7812      	ldrb	r2, [r2, #0]
 80063ec:	701a      	strb	r2, [r3, #0]
        hspi->pTxBuffPtr += sizeof(uint8_t);
 80063ee:	68fb      	ldr	r3, [r7, #12]
 80063f0:	6b1b      	ldr	r3, [r3, #48]	@ 0x30
 80063f2:	1c5a      	adds	r2, r3, #1
 80063f4:	68fb      	ldr	r3, [r7, #12]
 80063f6:	631a      	str	r2, [r3, #48]	@ 0x30
        hspi->TxXferCount--;
 80063f8:	68fb      	ldr	r3, [r7, #12]
 80063fa:	8edb      	ldrh	r3, [r3, #54]	@ 0x36
 80063fc:	b29b      	uxth	r3, r3
 80063fe:	3b01      	subs	r3, #1
 8006400:	b29a      	uxth	r2, r3
 8006402:	68fb      	ldr	r3, [r7, #12]
 8006404:	86da      	strh	r2, [r3, #54]	@ 0x36
 8006406:	e018      	b.n	800643a <HAL_SPI_Transmit+0x224>
      }
      else
      {
        /* Timeout management */
        if ((((HAL_GetTick() - tickstart) >=  Timeout) && (Timeout != HAL_MAX_DELAY)) || (Timeout == 0U))
 8006408:	f7fc faa4 	bl	8002954 <HAL_GetTick>
 800640c:	4602      	mov	r2, r0
 800640e:	69fb      	ldr	r3, [r7, #28]
 8006410:	1ad3      	subs	r3, r2, r3
 8006412:	683a      	ldr	r2, [r7, #0]
 8006414:	429a      	cmp	r2, r3
 8006416:	d803      	bhi.n	8006420 <HAL_SPI_Transmit+0x20a>
 8006418:	683b      	ldr	r3, [r7, #0]
 800641a:	f1b3 3fff 	cmp.w	r3, #4294967295
 800641e:	d102      	bne.n	8006426 <HAL_SPI_Transmit+0x210>
 8006420:	683b      	ldr	r3, [r7, #0]
 8006422:	2b00      	cmp	r3, #0
 8006424:	d109      	bne.n	800643a <HAL_SPI_Transmit+0x224>
        {
          hspi->State = HAL_SPI_STATE_READY;
 8006426:	68fb      	ldr	r3, [r7, #12]
 8006428:	2201      	movs	r2, #1
 800642a:	f883 2051 	strb.w	r2, [r3, #81]	@ 0x51
          __HAL_UNLOCK(hspi);
 800642e:	68fb      	ldr	r3, [r7, #12]
 8006430:	2200      	movs	r2, #0
 8006432:	f883 2050 	strb.w	r2, [r3, #80]	@ 0x50
          return HAL_TIMEOUT;
 8006436:	2303      	movs	r3, #3
 8006438:	e02d      	b.n	8006496 <HAL_SPI_Transmit+0x280>
    while (hspi->TxXferCount > 0U)
 800643a:	68fb      	ldr	r3, [r7, #12]
 800643c:	8edb      	ldrh	r3, [r3, #54]	@ 0x36
 800643e:	b29b      	uxth	r3, r3
 8006440:	2b00      	cmp	r3, #0
 8006442:	d1c6      	bne.n	80063d2 <HAL_SPI_Transmit+0x1bc>
    SET_BIT(hspi->Instance->CR1, SPI_CR1_CRCNEXT);
  }
#endif /* USE_SPI_CRC */

  /* Check the end of the transaction */
  if (SPI_EndRxTxTransaction(hspi, Timeout, tickstart) != HAL_OK)
 8006444:	69fa      	ldr	r2, [r7, #28]
 8006446:	6839      	ldr	r1, [r7, #0]
 8006448:	68f8      	ldr	r0, [r7, #12]
 800644a:	f000 fe1f 	bl	800708c <SPI_EndRxTxTransaction>
 800644e:	4603      	mov	r3, r0
 8006450:	2b00      	cmp	r3, #0
 8006452:	d002      	beq.n	800645a <HAL_SPI_Transmit+0x244>
  {
    hspi->ErrorCode = HAL_SPI_ERROR_FLAG;
 8006454:	68fb      	ldr	r3, [r7, #12]
 8006456:	2220      	movs	r2, #32
 8006458:	655a      	str	r2, [r3, #84]	@ 0x54
  }

  /* Clear overrun flag in 2 Lines communication mode because received is not read */
  if (hspi->Init.Direction == SPI_DIRECTION_2LINES)
 800645a:	68fb      	ldr	r3, [r7, #12]
 800645c:	689b      	ldr	r3, [r3, #8]
 800645e:	2b00      	cmp	r3, #0
 8006460:	d10a      	bne.n	8006478 <HAL_SPI_Transmit+0x262>
  {
    __HAL_SPI_CLEAR_OVRFLAG(hspi);
 8006462:	2300      	movs	r3, #0
 8006464:	617b      	str	r3, [r7, #20]
 8006466:	68fb      	ldr	r3, [r7, #12]
 8006468:	681b      	ldr	r3, [r3, #0]
 800646a:	68db      	ldr	r3, [r3, #12]
 800646c:	617b      	str	r3, [r7, #20]
 800646e:	68fb      	ldr	r3, [r7, #12]
 8006470:	681b      	ldr	r3, [r3, #0]
 8006472:	689b      	ldr	r3, [r3, #8]
 8006474:	617b      	str	r3, [r7, #20]
 8006476:	697b      	ldr	r3, [r7, #20]
  }

  hspi->State = HAL_SPI_STATE_READY;
 8006478:	68fb      	ldr	r3, [r7, #12]
 800647a:	2201      	movs	r2, #1
 800647c:	f883 2051 	strb.w	r2, [r3, #81]	@ 0x51
  /* Process Unlocked */
  __HAL_UNLOCK(hspi);
 8006480:	68fb      	ldr	r3, [r7, #12]
 8006482:	2200      	movs	r2, #0
 8006484:	f883 2050 	strb.w	r2, [r3, #80]	@ 0x50

  if (hspi->ErrorCode != HAL_SPI_ERROR_NONE)
 8006488:	68fb      	ldr	r3, [r7, #12]
 800648a:	6d5b      	ldr	r3, [r3, #84]	@ 0x54
 800648c:	2b00      	cmp	r3, #0
 800648e:	d001      	beq.n	8006494 <HAL_SPI_Transmit+0x27e>
  {
    return HAL_ERROR;
 8006490:	2301      	movs	r3, #1
 8006492:	e000      	b.n	8006496 <HAL_SPI_Transmit+0x280>
  }
  else
  {
    return HAL_OK;
 8006494:	2300      	movs	r3, #0
  }
}
 8006496:	4618      	mov	r0, r3
 8006498:	3720      	adds	r7, #32
 800649a:	46bd      	mov	sp, r7
 800649c:	bd80      	pop	{r7, pc}

0800649e <HAL_SPI_Receive>:
  * @param  Size amount of data to be received
  * @param  Timeout Timeout duration
  * @retval HAL status
  */
HAL_StatusTypeDef HAL_SPI_Receive(SPI_HandleTypeDef *hspi, uint8_t *pData, uint16_t Size, uint32_t Timeout)
{
 800649e:	b580      	push	{r7, lr}
 80064a0:	b088      	sub	sp, #32
 80064a2:	af02      	add	r7, sp, #8
 80064a4:	60f8      	str	r0, [r7, #12]
 80064a6:	60b9      	str	r1, [r7, #8]
 80064a8:	603b      	str	r3, [r7, #0]
 80064aa:	4613      	mov	r3, r2
 80064ac:	80fb      	strh	r3, [r7, #6]
#if (USE_SPI_CRC != 0U)
  __IO uint32_t tmpreg = 0U;
#endif /* USE_SPI_CRC */
  uint32_t tickstart;

  if (hspi->State != HAL_SPI_STATE_READY)
 80064ae:	68fb      	ldr	r3, [r7, #12]
 80064b0:	f893 3051 	ldrb.w	r3, [r3, #81]	@ 0x51
 80064b4:	b2db      	uxtb	r3, r3
 80064b6:	2b01      	cmp	r3, #1
 80064b8:	d001      	beq.n	80064be <HAL_SPI_Receive+0x20>
  {
    return HAL_BUSY;
 80064ba:	2302      	movs	r3, #2
 80064bc:	e104      	b.n	80066c8 <HAL_SPI_Receive+0x22a>
  }

  if ((hspi->Init.Mode == SPI_MODE_MASTER) && (hspi->Init.Direction == SPI_DIRECTION_2LINES))
 80064be:	68fb      	ldr	r3, [r7, #12]
 80064c0:	685b      	ldr	r3, [r3, #4]
 80064c2:	f5b3 7f82 	cmp.w	r3, #260	@ 0x104
 80064c6:	d112      	bne.n	80064ee <HAL_SPI_Receive+0x50>
 80064c8:	68fb      	ldr	r3, [r7, #12]
 80064ca:	689b      	ldr	r3, [r3, #8]
 80064cc:	2b00      	cmp	r3, #0
 80064ce:	d10e      	bne.n	80064ee <HAL_SPI_Receive+0x50>
  {
    hspi->State = HAL_SPI_STATE_BUSY_RX;
 80064d0:	68fb      	ldr	r3, [r7, #12]
 80064d2:	2204      	movs	r2, #4
 80064d4:	f883 2051 	strb.w	r2, [r3, #81]	@ 0x51
    /* Call transmit-receive function to send Dummy data on Tx line and generate clock on CLK line */
    return HAL_SPI_TransmitReceive(hspi, pData, pData, Size, Timeout);
 80064d8:	88fa      	ldrh	r2, [r7, #6]
 80064da:	683b      	ldr	r3, [r7, #0]
 80064dc:	9300      	str	r3, [sp, #0]
 80064de:	4613      	mov	r3, r2
 80064e0:	68ba      	ldr	r2, [r7, #8]
 80064e2:	68b9      	ldr	r1, [r7, #8]
 80064e4:	68f8      	ldr	r0, [r7, #12]
 80064e6:	f000 f8f3 	bl	80066d0 <HAL_SPI_TransmitReceive>
 80064ea:	4603      	mov	r3, r0
 80064ec:	e0ec      	b.n	80066c8 <HAL_SPI_Receive+0x22a>
  }

  /* Init tickstart for timeout management*/
  tickstart = HAL_GetTick();
 80064ee:	f7fc fa31 	bl	8002954 <HAL_GetTick>
 80064f2:	6178      	str	r0, [r7, #20]

  if ((pData == NULL) || (Size == 0U))
 80064f4:	68bb      	ldr	r3, [r7, #8]
 80064f6:	2b00      	cmp	r3, #0
 80064f8:	d002      	beq.n	8006500 <HAL_SPI_Receive+0x62>
 80064fa:	88fb      	ldrh	r3, [r7, #6]
 80064fc:	2b00      	cmp	r3, #0
 80064fe:	d101      	bne.n	8006504 <HAL_SPI_Receive+0x66>
  {
    return HAL_ERROR;
 8006500:	2301      	movs	r3, #1
 8006502:	e0e1      	b.n	80066c8 <HAL_SPI_Receive+0x22a>
  }

  /* Process Locked */
  __HAL_LOCK(hspi);
 8006504:	68fb      	ldr	r3, [r7, #12]
 8006506:	f893 3050 	ldrb.w	r3, [r3, #80]	@ 0x50
 800650a:	2b01      	cmp	r3, #1
 800650c:	d101      	bne.n	8006512 <HAL_SPI_Receive+0x74>
 800650e:	2302      	movs	r3, #2
 8006510:	e0da      	b.n	80066c8 <HAL_SPI_Receive+0x22a>
 8006512:	68fb      	ldr	r3, [r7, #12]
 8006514:	2201      	movs	r2, #1
 8006516:	f883 2050 	strb.w	r2, [r3, #80]	@ 0x50

  /* Set the transaction information */
  hspi->State       = HAL_SPI_STATE_BUSY_RX;
 800651a:	68fb      	ldr	r3, [r7, #12]
 800651c:	2204      	movs	r2, #4
 800651e:	f883 2051 	strb.w	r2, [r3, #81]	@ 0x51
  hspi->ErrorCode   = HAL_SPI_ERROR_NONE;
 8006522:	68fb      	ldr	r3, [r7, #12]
 8006524:	2200      	movs	r2, #0
 8006526:	655a      	str	r2, [r3, #84]	@ 0x54
  hspi->pRxBuffPtr  = (uint8_t *)pData;
 8006528:	68fb      	ldr	r3, [r7, #12]
 800652a:	68ba      	ldr	r2, [r7, #8]
 800652c:	639a      	str	r2, [r3, #56]	@ 0x38
  hspi->RxXferSize  = Size;
 800652e:	68fb      	ldr	r3, [r7, #12]
 8006530:	88fa      	ldrh	r2, [r7, #6]
 8006532:	879a      	strh	r2, [r3, #60]	@ 0x3c
  hspi->RxXferCount = Size;
 8006534:	68fb      	ldr	r3, [r7, #12]
 8006536:	88fa      	ldrh	r2, [r7, #6]
 8006538:	87da      	strh	r2, [r3, #62]	@ 0x3e

  /*Init field not used in handle to zero */
  hspi->pTxBuffPtr  = (uint8_t *)NULL;
 800653a:	68fb      	ldr	r3, [r7, #12]
 800653c:	2200      	movs	r2, #0
 800653e:	631a      	str	r2, [r3, #48]	@ 0x30
  hspi->TxXferSize  = 0U;
 8006540:	68fb      	ldr	r3, [r7, #12]
 8006542:	2200      	movs	r2, #0
 8006544:	869a      	strh	r2, [r3, #52]	@ 0x34
  hspi->TxXferCount = 0U;
 8006546:	68fb      	ldr	r3, [r7, #12]
 8006548:	2200      	movs	r2, #0
 800654a:	86da      	strh	r2, [r3, #54]	@ 0x36
  hspi->RxISR       = NULL;
 800654c:	68fb      	ldr	r3, [r7, #12]
 800654e:	2200      	movs	r2, #0
 8006550:	641a      	str	r2, [r3, #64]	@ 0x40
  hspi->TxISR       = NULL;
 8006552:	68fb      	ldr	r3, [r7, #12]
 8006554:	2200      	movs	r2, #0
 8006556:	645a      	str	r2, [r3, #68]	@ 0x44
    hspi->RxXferCount--;
  }
#endif /* USE_SPI_CRC */

  /* Configure communication direction: 1Line */
  if (hspi->Init.Direction == SPI_DIRECTION_1LINE)
 8006558:	68fb      	ldr	r3, [r7, #12]
 800655a:	689b      	ldr	r3, [r3, #8]
 800655c:	f5b3 4f00 	cmp.w	r3, #32768	@ 0x8000
 8006560:	d10f      	bne.n	8006582 <HAL_SPI_Receive+0xe4>
  {
    /* Disable SPI Peripheral before set 1Line direction (BIDIOE bit) */
    __HAL_SPI_DISABLE(hspi);
 8006562:	68fb      	ldr	r3, [r7, #12]
 8006564:	681b      	ldr	r3, [r3, #0]
 8006566:	681a      	ldr	r2, [r3, #0]
 8006568:	68fb      	ldr	r3, [r7, #12]
 800656a:	681b      	ldr	r3, [r3, #0]
 800656c:	f022 0240 	bic.w	r2, r2, #64	@ 0x40
 8006570:	601a      	str	r2, [r3, #0]
    SPI_1LINE_RX(hspi);
 8006572:	68fb      	ldr	r3, [r7, #12]
 8006574:	681b      	ldr	r3, [r3, #0]
 8006576:	681a      	ldr	r2, [r3, #0]
 8006578:	68fb      	ldr	r3, [r7, #12]
 800657a:	681b      	ldr	r3, [r3, #0]
 800657c:	f422 4280 	bic.w	r2, r2, #16384	@ 0x4000
 8006580:	601a      	str	r2, [r3, #0]
  }

  /* Check if the SPI is already enabled */
  if ((hspi->Instance->CR1 & SPI_CR1_SPE) != SPI_CR1_SPE)
 8006582:	68fb      	ldr	r3, [r7, #12]
 8006584:	681b      	ldr	r3, [r3, #0]
 8006586:	681b      	ldr	r3, [r3, #0]
 8006588:	f003 0340 	and.w	r3, r3, #64	@ 0x40
 800658c:	2b40      	cmp	r3, #64	@ 0x40
 800658e:	d007      	beq.n	80065a0 <HAL_SPI_Receive+0x102>
  {
    /* Enable SPI peripheral */
    __HAL_SPI_ENABLE(hspi);
 8006590:	68fb      	ldr	r3, [r7, #12]
 8006592:	681b      	ldr	r3, [r3, #0]
 8006594:	681a      	ldr	r2, [r3, #0]
 8006596:	68fb      	ldr	r3, [r7, #12]
 8006598:	681b      	ldr	r3, [r3, #0]
 800659a:	f042 0240 	orr.w	r2, r2, #64	@ 0x40
 800659e:	601a      	str	r2, [r3, #0]
  }

  /* Receive data in 8 Bit mode */
  if (hspi->Init.DataSize == SPI_DATASIZE_8BIT)
 80065a0:	68fb      	ldr	r3, [r7, #12]
 80065a2:	68db      	ldr	r3, [r3, #12]
 80065a4:	2b00      	cmp	r3, #0
 80065a6:	d170      	bne.n	800668a <HAL_SPI_Receive+0x1ec>
  {
    /* Transfer loop */
    while (hspi->RxXferCount > 0U)
 80065a8:	e035      	b.n	8006616 <HAL_SPI_Receive+0x178>
    {
      /* Check the RXNE flag */
      if (__HAL_SPI_GET_FLAG(hspi, SPI_FLAG_RXNE))
 80065aa:	68fb      	ldr	r3, [r7, #12]
 80065ac:	681b      	ldr	r3, [r3, #0]
 80065ae:	689b      	ldr	r3, [r3, #8]
 80065b0:	f003 0301 	and.w	r3, r3, #1
 80065b4:	2b01      	cmp	r3, #1
 80065b6:	d115      	bne.n	80065e4 <HAL_SPI_Receive+0x146>
      {
        /* read the received data */
        (* (uint8_t *)hspi->pRxBuffPtr) = *(__IO uint8_t *)&hspi->Instance->DR;
 80065b8:	68fb      	ldr	r3, [r7, #12]
 80065ba:	681b      	ldr	r3, [r3, #0]
 80065bc:	f103 020c 	add.w	r2, r3, #12
 80065c0:	68fb      	ldr	r3, [r7, #12]
 80065c2:	6b9b      	ldr	r3, [r3, #56]	@ 0x38
 80065c4:	7812      	ldrb	r2, [r2, #0]
 80065c6:	b2d2      	uxtb	r2, r2
 80065c8:	701a      	strb	r2, [r3, #0]
        hspi->pRxBuffPtr += sizeof(uint8_t);
 80065ca:	68fb      	ldr	r3, [r7, #12]
 80065cc:	6b9b      	ldr	r3, [r3, #56]	@ 0x38
 80065ce:	1c5a      	adds	r2, r3, #1
 80065d0:	68fb      	ldr	r3, [r7, #12]
 80065d2:	639a      	str	r2, [r3, #56]	@ 0x38
        hspi->RxXferCount--;
 80065d4:	68fb      	ldr	r3, [r7, #12]
 80065d6:	8fdb      	ldrh	r3, [r3, #62]	@ 0x3e
 80065d8:	b29b      	uxth	r3, r3
 80065da:	3b01      	subs	r3, #1
 80065dc:	b29a      	uxth	r2, r3
 80065de:	68fb      	ldr	r3, [r7, #12]
 80065e0:	87da      	strh	r2, [r3, #62]	@ 0x3e
 80065e2:	e018      	b.n	8006616 <HAL_SPI_Receive+0x178>
      }
      else
      {
        /* Timeout management */
        if ((((HAL_GetTick() - tickstart) >=  Timeout) && (Timeout != HAL_MAX_DELAY)) || (Timeout == 0U))
 80065e4:	f7fc f9b6 	bl	8002954 <HAL_GetTick>
 80065e8:	4602      	mov	r2, r0
 80065ea:	697b      	ldr	r3, [r7, #20]
 80065ec:	1ad3      	subs	r3, r2, r3
 80065ee:	683a      	ldr	r2, [r7, #0]
 80065f0:	429a      	cmp	r2, r3
 80065f2:	d803      	bhi.n	80065fc <HAL_SPI_Receive+0x15e>
 80065f4:	683b      	ldr	r3, [r7, #0]
 80065f6:	f1b3 3fff 	cmp.w	r3, #4294967295
 80065fa:	d102      	bne.n	8006602 <HAL_SPI_Receive+0x164>
 80065fc:	683b      	ldr	r3, [r7, #0]
 80065fe:	2b00      	cmp	r3, #0
 8006600:	d109      	bne.n	8006616 <HAL_SPI_Receive+0x178>
        {
          hspi->State = HAL_SPI_STATE_READY;
 8006602:	68fb      	ldr	r3, [r7, #12]
 8006604:	2201      	movs	r2, #1
 8006606:	f883 2051 	strb.w	r2, [r3, #81]	@ 0x51
          __HAL_UNLOCK(hspi);
 800660a:	68fb      	ldr	r3, [r7, #12]
 800660c:	2200      	movs	r2, #0
 800660e:	f883 2050 	strb.w	r2, [r3, #80]	@ 0x50
          return HAL_TIMEOUT;
 8006612:	2303      	movs	r3, #3
 8006614:	e058      	b.n	80066c8 <HAL_SPI_Receive+0x22a>
    while (hspi->RxXferCount > 0U)
 8006616:	68fb      	ldr	r3, [r7, #12]
 8006618:	8fdb      	ldrh	r3, [r3, #62]	@ 0x3e
 800661a:	b29b      	uxth	r3, r3
 800661c:	2b00      	cmp	r3, #0
 800661e:	d1c4      	bne.n	80065aa <HAL_SPI_Receive+0x10c>
 8006620:	e038      	b.n	8006694 <HAL_SPI_Receive+0x1f6>
  {
    /* Transfer loop */
    while (hspi->RxXferCount > 0U)
    {
      /* Check the RXNE flag */
      if (__HAL_SPI_GET_FLAG(hspi, SPI_FLAG_RXNE))
 8006622:	68fb      	ldr	r3, [r7, #12]
 8006624:	681b      	ldr	r3, [r3, #0]
 8006626:	689b      	ldr	r3, [r3, #8]
 8006628:	f003 0301 	and.w	r3, r3, #1
 800662c:	2b01      	cmp	r3, #1
 800662e:	d113      	bne.n	8006658 <HAL_SPI_Receive+0x1ba>
      {
        *((uint16_t *)hspi->pRxBuffPtr) = (uint16_t)hspi->Instance->DR;
 8006630:	68fb      	ldr	r3, [r7, #12]
 8006632:	681b      	ldr	r3, [r3, #0]
 8006634:	68da      	ldr	r2, [r3, #12]
 8006636:	68fb      	ldr	r3, [r7, #12]
 8006638:	6b9b      	ldr	r3, [r3, #56]	@ 0x38
 800663a:	b292      	uxth	r2, r2
 800663c:	801a      	strh	r2, [r3, #0]
        hspi->pRxBuffPtr += sizeof(uint16_t);
 800663e:	68fb      	ldr	r3, [r7, #12]
 8006640:	6b9b      	ldr	r3, [r3, #56]	@ 0x38
 8006642:	1c9a      	adds	r2, r3, #2
 8006644:	68fb      	ldr	r3, [r7, #12]
 8006646:	639a      	str	r2, [r3, #56]	@ 0x38
        hspi->RxXferCount--;
 8006648:	68fb      	ldr	r3, [r7, #12]
 800664a:	8fdb      	ldrh	r3, [r3, #62]	@ 0x3e
 800664c:	b29b      	uxth	r3, r3
 800664e:	3b01      	subs	r3, #1
 8006650:	b29a      	uxth	r2, r3
 8006652:	68fb      	ldr	r3, [r7, #12]
 8006654:	87da      	strh	r2, [r3, #62]	@ 0x3e
 8006656:	e018      	b.n	800668a <HAL_SPI_Receive+0x1ec>
      }
      else
      {
        /* Timeout management */
        if ((((HAL_GetTick() - tickstart) >=  Timeout) && (Timeout != HAL_MAX_DELAY)) || (Timeout == 0U))
 8006658:	f7fc f97c 	bl	8002954 <HAL_GetTick>
 800665c:	4602      	mov	r2, r0
 800665e:	697b      	ldr	r3, [r7, #20]
 8006660:	1ad3      	subs	r3, r2, r3
 8006662:	683a      	ldr	r2, [r7, #0]
 8006664:	429a      	cmp	r2, r3
 8006666:	d803      	bhi.n	8006670 <HAL_SPI_Receive+0x1d2>
 8006668:	683b      	ldr	r3, [r7, #0]
 800666a:	f1b3 3fff 	cmp.w	r3, #4294967295
 800666e:	d102      	bne.n	8006676 <HAL_SPI_Receive+0x1d8>
 8006670:	683b      	ldr	r3, [r7, #0]
 8006672:	2b00      	cmp	r3, #0
 8006674:	d109      	bne.n	800668a <HAL_SPI_Receive+0x1ec>
        {
          hspi->State = HAL_SPI_STATE_READY;
 8006676:	68fb      	ldr	r3, [r7, #12]
 8006678:	2201      	movs	r2, #1
 800667a:	f883 2051 	strb.w	r2, [r3, #81]	@ 0x51
          __HAL_UNLOCK(hspi);
 800667e:	68fb      	ldr	r3, [r7, #12]
 8006680:	2200      	movs	r2, #0
 8006682:	f883 2050 	strb.w	r2, [r3, #80]	@ 0x50
          return HAL_TIMEOUT;
 8006686:	2303      	movs	r3, #3
 8006688:	e01e      	b.n	80066c8 <HAL_SPI_Receive+0x22a>
    while (hspi->RxXferCount > 0U)
 800668a:	68fb      	ldr	r3, [r7, #12]
 800668c:	8fdb      	ldrh	r3, [r3, #62]	@ 0x3e
 800668e:	b29b      	uxth	r3, r3
 8006690:	2b00      	cmp	r3, #0
 8006692:	d1c6      	bne.n	8006622 <HAL_SPI_Receive+0x184>
    UNUSED(tmpreg);
  }
#endif /* USE_SPI_CRC */

  /* Check the end of the transaction */
  if (SPI_EndRxTransaction(hspi, Timeout, tickstart) != HAL_OK)
 8006694:	697a      	ldr	r2, [r7, #20]
 8006696:	6839      	ldr	r1, [r7, #0]
 8006698:	68f8      	ldr	r0, [r7, #12]
 800669a:	f000 fc91 	bl	8006fc0 <SPI_EndRxTransaction>
 800669e:	4603      	mov	r3, r0
 80066a0:	2b00      	cmp	r3, #0
 80066a2:	d002      	beq.n	80066aa <HAL_SPI_Receive+0x20c>
  {
    hspi->ErrorCode = HAL_SPI_ERROR_FLAG;
 80066a4:	68fb      	ldr	r3, [r7, #12]
 80066a6:	2220      	movs	r2, #32
 80066a8:	655a      	str	r2, [r3, #84]	@ 0x54
    SET_BIT(hspi->ErrorCode, HAL_SPI_ERROR_CRC);
    __HAL_SPI_CLEAR_CRCERRFLAG(hspi);
  }
#endif /* USE_SPI_CRC */

  hspi->State = HAL_SPI_STATE_READY;
 80066aa:	68fb      	ldr	r3, [r7, #12]
 80066ac:	2201      	movs	r2, #1
 80066ae:	f883 2051 	strb.w	r2, [r3, #81]	@ 0x51
  /* Unlock the process */
  __HAL_UNLOCK(hspi);
 80066b2:	68fb      	ldr	r3, [r7, #12]
 80066b4:	2200      	movs	r2, #0
 80066b6:	f883 2050 	strb.w	r2, [r3, #80]	@ 0x50
  if (hspi->ErrorCode != HAL_SPI_ERROR_NONE)
 80066ba:	68fb      	ldr	r3, [r7, #12]
 80066bc:	6d5b      	ldr	r3, [r3, #84]	@ 0x54
 80066be:	2b00      	cmp	r3, #0
 80066c0:	d001      	beq.n	80066c6 <HAL_SPI_Receive+0x228>
  {
    return HAL_ERROR;
 80066c2:	2301      	movs	r3, #1
 80066c4:	e000      	b.n	80066c8 <HAL_SPI_Receive+0x22a>
  }
  else
  {
    return HAL_OK;
 80066c6:	2300      	movs	r3, #0
  }
}
 80066c8:	4618      	mov	r0, r3
 80066ca:	3718      	adds	r7, #24
 80066cc:	46bd      	mov	sp, r7
 80066ce:	bd80      	pop	{r7, pc}

080066d0 <HAL_SPI_TransmitReceive>:
  * @param  Timeout Timeout duration
  * @retval HAL status
  */
HAL_StatusTypeDef HAL_SPI_TransmitReceive(SPI_HandleTypeDef *hspi, const uint8_t *pTxData, uint8_t *pRxData,
                                          uint16_t Size, uint32_t Timeout)
{
 80066d0:	b580      	push	{r7, lr}
 80066d2:	b08a      	sub	sp, #40	@ 0x28
 80066d4:	af00      	add	r7, sp, #0
 80066d6:	60f8      	str	r0, [r7, #12]
 80066d8:	60b9      	str	r1, [r7, #8]
 80066da:	607a      	str	r2, [r7, #4]
 80066dc:	807b      	strh	r3, [r7, #2]
#if (USE_SPI_CRC != 0U)
  __IO uint32_t tmpreg = 0U;
#endif /* USE_SPI_CRC */

  /* Variable used to alternate Rx and Tx during transfer */
  uint32_t             txallowed = 1U;
 80066de:	2301      	movs	r3, #1
 80066e0:	627b      	str	r3, [r7, #36]	@ 0x24

  /* Check Direction parameter */
  assert_param(IS_SPI_DIRECTION_2LINES(hspi->Init.Direction));

  /* Init tickstart for timeout management*/
  tickstart = HAL_GetTick();
 80066e2:	f7fc f937 	bl	8002954 <HAL_GetTick>
 80066e6:	6238      	str	r0, [r7, #32]

  /* Init temporary variables */
  tmp_state           = hspi->State;
 80066e8:	68fb      	ldr	r3, [r7, #12]
 80066ea:	f893 3051 	ldrb.w	r3, [r3, #81]	@ 0x51
 80066ee:	77fb      	strb	r3, [r7, #31]
  tmp_mode            = hspi->Init.Mode;
 80066f0:	68fb      	ldr	r3, [r7, #12]
 80066f2:	685b      	ldr	r3, [r3, #4]
 80066f4:	61bb      	str	r3, [r7, #24]
  initial_TxXferCount = Size;
 80066f6:	887b      	ldrh	r3, [r7, #2]
 80066f8:	82fb      	strh	r3, [r7, #22]

  if (!((tmp_state == HAL_SPI_STATE_READY) || \
 80066fa:	7ffb      	ldrb	r3, [r7, #31]
 80066fc:	2b01      	cmp	r3, #1
 80066fe:	d00c      	beq.n	800671a <HAL_SPI_TransmitReceive+0x4a>
 8006700:	69bb      	ldr	r3, [r7, #24]
 8006702:	f5b3 7f82 	cmp.w	r3, #260	@ 0x104
 8006706:	d106      	bne.n	8006716 <HAL_SPI_TransmitReceive+0x46>
        ((tmp_mode == SPI_MODE_MASTER) && (hspi->Init.Direction == SPI_DIRECTION_2LINES) && (tmp_state == HAL_SPI_STATE_BUSY_RX))))
 8006708:	68fb      	ldr	r3, [r7, #12]
 800670a:	689b      	ldr	r3, [r3, #8]
 800670c:	2b00      	cmp	r3, #0
 800670e:	d102      	bne.n	8006716 <HAL_SPI_TransmitReceive+0x46>
 8006710:	7ffb      	ldrb	r3, [r7, #31]
 8006712:	2b04      	cmp	r3, #4
 8006714:	d001      	beq.n	800671a <HAL_SPI_TransmitReceive+0x4a>
  {
    return HAL_BUSY;
 8006716:	2302      	movs	r3, #2
 8006718:	e17f      	b.n	8006a1a <HAL_SPI_TransmitReceive+0x34a>
  }

  if ((pTxData == NULL) || (pRxData == NULL) || (Size == 0U))
 800671a:	68bb      	ldr	r3, [r7, #8]
 800671c:	2b00      	cmp	r3, #0
 800671e:	d005      	beq.n	800672c <HAL_SPI_TransmitReceive+0x5c>
 8006720:	687b      	ldr	r3, [r7, #4]
 8006722:	2b00      	cmp	r3, #0
 8006724:	d002      	beq.n	800672c <HAL_SPI_TransmitReceive+0x5c>
 8006726:	887b      	ldrh	r3, [r7, #2]
 8006728:	2b00      	cmp	r3, #0
 800672a:	d101      	bne.n	8006730 <HAL_SPI_TransmitReceive+0x60>
  {
    return HAL_ERROR;
 800672c:	2301      	movs	r3, #1
 800672e:	e174      	b.n	8006a1a <HAL_SPI_TransmitReceive+0x34a>
  }

  /* Process Locked */
  __HAL_LOCK(hspi);
 8006730:	68fb      	ldr	r3, [r7, #12]
 8006732:	f893 3050 	ldrb.w	r3, [r3, #80]	@ 0x50
 8006736:	2b01      	cmp	r3, #1
 8006738:	d101      	bne.n	800673e <HAL_SPI_TransmitReceive+0x6e>
 800673a:	2302      	movs	r3, #2
 800673c:	e16d      	b.n	8006a1a <HAL_SPI_TransmitReceive+0x34a>
 800673e:	68fb      	ldr	r3, [r7, #12]
 8006740:	2201      	movs	r2, #1
 8006742:	f883 2050 	strb.w	r2, [r3, #80]	@ 0x50

  /* Don't overwrite in case of HAL_SPI_STATE_BUSY_RX */
  if (hspi->State != HAL_SPI_STATE_BUSY_RX)
 8006746:	68fb      	ldr	r3, [r7, #12]
 8006748:	f893 3051 	ldrb.w	r3, [r3, #81]	@ 0x51
 800674c:	b2db      	uxtb	r3, r3
 800674e:	2b04      	cmp	r3, #4
 8006750:	d003      	beq.n	800675a <HAL_SPI_TransmitReceive+0x8a>
  {
    hspi->State = HAL_SPI_STATE_BUSY_TX_RX;
 8006752:	68fb      	ldr	r3, [r7, #12]
 8006754:	2205      	movs	r2, #5
 8006756:	f883 2051 	strb.w	r2, [r3, #81]	@ 0x51
  }

  /* Set the transaction information */
  hspi->ErrorCode   = HAL_SPI_ERROR_NONE;
 800675a:	68fb      	ldr	r3, [r7, #12]
 800675c:	2200      	movs	r2, #0
 800675e:	655a      	str	r2, [r3, #84]	@ 0x54
  hspi->pRxBuffPtr  = (uint8_t *)pRxData;
 8006760:	68fb      	ldr	r3, [r7, #12]
 8006762:	687a      	ldr	r2, [r7, #4]
 8006764:	639a      	str	r2, [r3, #56]	@ 0x38
  hspi->RxXferCount = Size;
 8006766:	68fb      	ldr	r3, [r7, #12]
 8006768:	887a      	ldrh	r2, [r7, #2]
 800676a:	87da      	strh	r2, [r3, #62]	@ 0x3e
  hspi->RxXferSize  = Size;
 800676c:	68fb      	ldr	r3, [r7, #12]
 800676e:	887a      	ldrh	r2, [r7, #2]
 8006770:	879a      	strh	r2, [r3, #60]	@ 0x3c
  hspi->pTxBuffPtr  = (const uint8_t *)pTxData;
 8006772:	68fb      	ldr	r3, [r7, #12]
 8006774:	68ba      	ldr	r2, [r7, #8]
 8006776:	631a      	str	r2, [r3, #48]	@ 0x30
  hspi->TxXferCount = Size;
 8006778:	68fb      	ldr	r3, [r7, #12]
 800677a:	887a      	ldrh	r2, [r7, #2]
 800677c:	86da      	strh	r2, [r3, #54]	@ 0x36
  hspi->TxXferSize  = Size;
 800677e:	68fb      	ldr	r3, [r7, #12]
 8006780:	887a      	ldrh	r2, [r7, #2]
 8006782:	869a      	strh	r2, [r3, #52]	@ 0x34

  /*Init field not used in handle to zero */
  hspi->RxISR       = NULL;
 8006784:	68fb      	ldr	r3, [r7, #12]
 8006786:	2200      	movs	r2, #0
 8006788:	641a      	str	r2, [r3, #64]	@ 0x40
  hspi->TxISR       = NULL;
 800678a:	68fb      	ldr	r3, [r7, #12]
 800678c:	2200      	movs	r2, #0
 800678e:	645a      	str	r2, [r3, #68]	@ 0x44
    SPI_RESET_CRC(hspi);
  }
#endif /* USE_SPI_CRC */

  /* Check if the SPI is already enabled */
  if ((hspi->Instance->CR1 & SPI_CR1_SPE) != SPI_CR1_SPE)
 8006790:	68fb      	ldr	r3, [r7, #12]
 8006792:	681b      	ldr	r3, [r3, #0]
 8006794:	681b      	ldr	r3, [r3, #0]
 8006796:	f003 0340 	and.w	r3, r3, #64	@ 0x40
 800679a:	2b40      	cmp	r3, #64	@ 0x40
 800679c:	d007      	beq.n	80067ae <HAL_SPI_TransmitReceive+0xde>
  {
    /* Enable SPI peripheral */
    __HAL_SPI_ENABLE(hspi);
 800679e:	68fb      	ldr	r3, [r7, #12]
 80067a0:	681b      	ldr	r3, [r3, #0]
 80067a2:	681a      	ldr	r2, [r3, #0]
 80067a4:	68fb      	ldr	r3, [r7, #12]
 80067a6:	681b      	ldr	r3, [r3, #0]
 80067a8:	f042 0240 	orr.w	r2, r2, #64	@ 0x40
 80067ac:	601a      	str	r2, [r3, #0]
  }

  /* Transmit and Receive data in 16 Bit mode */
  if (hspi->Init.DataSize == SPI_DATASIZE_16BIT)
 80067ae:	68fb      	ldr	r3, [r7, #12]
 80067b0:	68db      	ldr	r3, [r3, #12]
 80067b2:	f5b3 6f00 	cmp.w	r3, #2048	@ 0x800
 80067b6:	d17e      	bne.n	80068b6 <HAL_SPI_TransmitReceive+0x1e6>
  {
    if ((hspi->Init.Mode == SPI_MODE_SLAVE) || (initial_TxXferCount == 0x01U))
 80067b8:	68fb      	ldr	r3, [r7, #12]
 80067ba:	685b      	ldr	r3, [r3, #4]
 80067bc:	2b00      	cmp	r3, #0
 80067be:	d002      	beq.n	80067c6 <HAL_SPI_TransmitReceive+0xf6>
 80067c0:	8afb      	ldrh	r3, [r7, #22]
 80067c2:	2b01      	cmp	r3, #1
 80067c4:	d16c      	bne.n	80068a0 <HAL_SPI_TransmitReceive+0x1d0>
    {
      hspi->Instance->DR = *((const uint16_t *)hspi->pTxBuffPtr);
 80067c6:	68fb      	ldr	r3, [r7, #12]
 80067c8:	6b1b      	ldr	r3, [r3, #48]	@ 0x30
 80067ca:	881a      	ldrh	r2, [r3, #0]
 80067cc:	68fb      	ldr	r3, [r7, #12]
 80067ce:	681b      	ldr	r3, [r3, #0]
 80067d0:	60da      	str	r2, [r3, #12]
      hspi->pTxBuffPtr += sizeof(uint16_t);
 80067d2:	68fb      	ldr	r3, [r7, #12]
 80067d4:	6b1b      	ldr	r3, [r3, #48]	@ 0x30
 80067d6:	1c9a      	adds	r2, r3, #2
 80067d8:	68fb      	ldr	r3, [r7, #12]
 80067da:	631a      	str	r2, [r3, #48]	@ 0x30
      hspi->TxXferCount--;
 80067dc:	68fb      	ldr	r3, [r7, #12]
 80067de:	8edb      	ldrh	r3, [r3, #54]	@ 0x36
 80067e0:	b29b      	uxth	r3, r3
 80067e2:	3b01      	subs	r3, #1
 80067e4:	b29a      	uxth	r2, r3
 80067e6:	68fb      	ldr	r3, [r7, #12]
 80067e8:	86da      	strh	r2, [r3, #54]	@ 0x36
        SET_BIT(hspi->Instance->CR1, SPI_CR1_CRCNEXT);
      }
#endif /* USE_SPI_CRC */

    }
    while ((hspi->TxXferCount > 0U) || (hspi->RxXferCount > 0U))
 80067ea:	e059      	b.n	80068a0 <HAL_SPI_TransmitReceive+0x1d0>
    {
      /* Check TXE flag */
      if ((__HAL_SPI_GET_FLAG(hspi, SPI_FLAG_TXE)) && (hspi->TxXferCount > 0U) && (txallowed == 1U))
 80067ec:	68fb      	ldr	r3, [r7, #12]
 80067ee:	681b      	ldr	r3, [r3, #0]
 80067f0:	689b      	ldr	r3, [r3, #8]
 80067f2:	f003 0302 	and.w	r3, r3, #2
 80067f6:	2b02      	cmp	r3, #2
 80067f8:	d11b      	bne.n	8006832 <HAL_SPI_TransmitReceive+0x162>
 80067fa:	68fb      	ldr	r3, [r7, #12]
 80067fc:	8edb      	ldrh	r3, [r3, #54]	@ 0x36
 80067fe:	b29b      	uxth	r3, r3
 8006800:	2b00      	cmp	r3, #0
 8006802:	d016      	beq.n	8006832 <HAL_SPI_TransmitReceive+0x162>
 8006804:	6a7b      	ldr	r3, [r7, #36]	@ 0x24
 8006806:	2b01      	cmp	r3, #1
 8006808:	d113      	bne.n	8006832 <HAL_SPI_TransmitReceive+0x162>
      {
        hspi->Instance->DR = *((const uint16_t *)hspi->pTxBuffPtr);
 800680a:	68fb      	ldr	r3, [r7, #12]
 800680c:	6b1b      	ldr	r3, [r3, #48]	@ 0x30
 800680e:	881a      	ldrh	r2, [r3, #0]
 8006810:	68fb      	ldr	r3, [r7, #12]
 8006812:	681b      	ldr	r3, [r3, #0]
 8006814:	60da      	str	r2, [r3, #12]
        hspi->pTxBuffPtr += sizeof(uint16_t);
 8006816:	68fb      	ldr	r3, [r7, #12]
 8006818:	6b1b      	ldr	r3, [r3, #48]	@ 0x30
 800681a:	1c9a      	adds	r2, r3, #2
 800681c:	68fb      	ldr	r3, [r7, #12]
 800681e:	631a      	str	r2, [r3, #48]	@ 0x30
        hspi->TxXferCount--;
 8006820:	68fb      	ldr	r3, [r7, #12]
 8006822:	8edb      	ldrh	r3, [r3, #54]	@ 0x36
 8006824:	b29b      	uxth	r3, r3
 8006826:	3b01      	subs	r3, #1
 8006828:	b29a      	uxth	r2, r3
 800682a:	68fb      	ldr	r3, [r7, #12]
 800682c:	86da      	strh	r2, [r3, #54]	@ 0x36
        /* Next Data is a reception (Rx). Tx not allowed */
        txallowed = 0U;
 800682e:	2300      	movs	r3, #0
 8006830:	627b      	str	r3, [r7, #36]	@ 0x24
        }
#endif /* USE_SPI_CRC */
      }

      /* Check RXNE flag */
      if ((__HAL_SPI_GET_FLAG(hspi, SPI_FLAG_RXNE)) && (hspi->RxXferCount > 0U))
 8006832:	68fb      	ldr	r3, [r7, #12]
 8006834:	681b      	ldr	r3, [r3, #0]
 8006836:	689b      	ldr	r3, [r3, #8]
 8006838:	f003 0301 	and.w	r3, r3, #1
 800683c:	2b01      	cmp	r3, #1
 800683e:	d119      	bne.n	8006874 <HAL_SPI_TransmitReceive+0x1a4>
 8006840:	68fb      	ldr	r3, [r7, #12]
 8006842:	8fdb      	ldrh	r3, [r3, #62]	@ 0x3e
 8006844:	b29b      	uxth	r3, r3
 8006846:	2b00      	cmp	r3, #0
 8006848:	d014      	beq.n	8006874 <HAL_SPI_TransmitReceive+0x1a4>
      {
        *((uint16_t *)hspi->pRxBuffPtr) = (uint16_t)hspi->Instance->DR;
 800684a:	68fb      	ldr	r3, [r7, #12]
 800684c:	681b      	ldr	r3, [r3, #0]
 800684e:	68da      	ldr	r2, [r3, #12]
 8006850:	68fb      	ldr	r3, [r7, #12]
 8006852:	6b9b      	ldr	r3, [r3, #56]	@ 0x38
 8006854:	b292      	uxth	r2, r2
 8006856:	801a      	strh	r2, [r3, #0]
        hspi->pRxBuffPtr += sizeof(uint16_t);
 8006858:	68fb      	ldr	r3, [r7, #12]
 800685a:	6b9b      	ldr	r3, [r3, #56]	@ 0x38
 800685c:	1c9a      	adds	r2, r3, #2
 800685e:	68fb      	ldr	r3, [r7, #12]
 8006860:	639a      	str	r2, [r3, #56]	@ 0x38
        hspi->RxXferCount--;
 8006862:	68fb      	ldr	r3, [r7, #12]
 8006864:	8fdb      	ldrh	r3, [r3, #62]	@ 0x3e
 8006866:	b29b      	uxth	r3, r3
 8006868:	3b01      	subs	r3, #1
 800686a:	b29a      	uxth	r2, r3
 800686c:	68fb      	ldr	r3, [r7, #12]
 800686e:	87da      	strh	r2, [r3, #62]	@ 0x3e
        /* Next Data is a Transmission (Tx). Tx is allowed */
        txallowed = 1U;
 8006870:	2301      	movs	r3, #1
 8006872:	627b      	str	r3, [r7, #36]	@ 0x24
      }
      if (((HAL_GetTick() - tickstart) >=  Timeout) && (Timeout != HAL_MAX_DELAY))
 8006874:	f7fc f86e 	bl	8002954 <HAL_GetTick>
 8006878:	4602      	mov	r2, r0
 800687a:	6a3b      	ldr	r3, [r7, #32]
 800687c:	1ad3      	subs	r3, r2, r3
 800687e:	6b3a      	ldr	r2, [r7, #48]	@ 0x30
 8006880:	429a      	cmp	r2, r3
 8006882:	d80d      	bhi.n	80068a0 <HAL_SPI_TransmitReceive+0x1d0>
 8006884:	6b3b      	ldr	r3, [r7, #48]	@ 0x30
 8006886:	f1b3 3fff 	cmp.w	r3, #4294967295
 800688a:	d009      	beq.n	80068a0 <HAL_SPI_TransmitReceive+0x1d0>
      {
        hspi->State = HAL_SPI_STATE_READY;
 800688c:	68fb      	ldr	r3, [r7, #12]
 800688e:	2201      	movs	r2, #1
 8006890:	f883 2051 	strb.w	r2, [r3, #81]	@ 0x51
        __HAL_UNLOCK(hspi);
 8006894:	68fb      	ldr	r3, [r7, #12]
 8006896:	2200      	movs	r2, #0
 8006898:	f883 2050 	strb.w	r2, [r3, #80]	@ 0x50
        return HAL_TIMEOUT;
 800689c:	2303      	movs	r3, #3
 800689e:	e0bc      	b.n	8006a1a <HAL_SPI_TransmitReceive+0x34a>
    while ((hspi->TxXferCount > 0U) || (hspi->RxXferCount > 0U))
 80068a0:	68fb      	ldr	r3, [r7, #12]
 80068a2:	8edb      	ldrh	r3, [r3, #54]	@ 0x36
 80068a4:	b29b      	uxth	r3, r3
 80068a6:	2b00      	cmp	r3, #0
 80068a8:	d1a0      	bne.n	80067ec <HAL_SPI_TransmitReceive+0x11c>
 80068aa:	68fb      	ldr	r3, [r7, #12]
 80068ac:	8fdb      	ldrh	r3, [r3, #62]	@ 0x3e
 80068ae:	b29b      	uxth	r3, r3
 80068b0:	2b00      	cmp	r3, #0
 80068b2:	d19b      	bne.n	80067ec <HAL_SPI_TransmitReceive+0x11c>
 80068b4:	e082      	b.n	80069bc <HAL_SPI_TransmitReceive+0x2ec>
    }
  }
  /* Transmit and Receive data in 8 Bit mode */
  else
  {
    if ((hspi->Init.Mode == SPI_MODE_SLAVE) || (initial_TxXferCount == 0x01U))
 80068b6:	68fb      	ldr	r3, [r7, #12]
 80068b8:	685b      	ldr	r3, [r3, #4]
 80068ba:	2b00      	cmp	r3, #0
 80068bc:	d002      	beq.n	80068c4 <HAL_SPI_TransmitReceive+0x1f4>
 80068be:	8afb      	ldrh	r3, [r7, #22]
 80068c0:	2b01      	cmp	r3, #1
 80068c2:	d171      	bne.n	80069a8 <HAL_SPI_TransmitReceive+0x2d8>
    {
      *((__IO uint8_t *)&hspi->Instance->DR) = *((const uint8_t *)hspi->pTxBuffPtr);
 80068c4:	68fb      	ldr	r3, [r7, #12]
 80068c6:	6b1a      	ldr	r2, [r3, #48]	@ 0x30
 80068c8:	68fb      	ldr	r3, [r7, #12]
 80068ca:	681b      	ldr	r3, [r3, #0]
 80068cc:	330c      	adds	r3, #12
 80068ce:	7812      	ldrb	r2, [r2, #0]
 80068d0:	701a      	strb	r2, [r3, #0]
      hspi->pTxBuffPtr += sizeof(uint8_t);
 80068d2:	68fb      	ldr	r3, [r7, #12]
 80068d4:	6b1b      	ldr	r3, [r3, #48]	@ 0x30
 80068d6:	1c5a      	adds	r2, r3, #1
 80068d8:	68fb      	ldr	r3, [r7, #12]
 80068da:	631a      	str	r2, [r3, #48]	@ 0x30
      hspi->TxXferCount--;
 80068dc:	68fb      	ldr	r3, [r7, #12]
 80068de:	8edb      	ldrh	r3, [r3, #54]	@ 0x36
 80068e0:	b29b      	uxth	r3, r3
 80068e2:	3b01      	subs	r3, #1
 80068e4:	b29a      	uxth	r2, r3
 80068e6:	68fb      	ldr	r3, [r7, #12]
 80068e8:	86da      	strh	r2, [r3, #54]	@ 0x36
      {
        SET_BIT(hspi->Instance->CR1, SPI_CR1_CRCNEXT);
      }
#endif /* USE_SPI_CRC */
    }
    while ((hspi->TxXferCount > 0U) || (hspi->RxXferCount > 0U))
 80068ea:	e05d      	b.n	80069a8 <HAL_SPI_TransmitReceive+0x2d8>
    {
      /* Check TXE flag */
      if ((__HAL_SPI_GET_FLAG(hspi, SPI_FLAG_TXE)) && (hspi->TxXferCount > 0U) && (txallowed == 1U))
 80068ec:	68fb      	ldr	r3, [r7, #12]
 80068ee:	681b      	ldr	r3, [r3, #0]
 80068f0:	689b      	ldr	r3, [r3, #8]
 80068f2:	f003 0302 	and.w	r3, r3, #2
 80068f6:	2b02      	cmp	r3, #2
 80068f8:	d11c      	bne.n	8006934 <HAL_SPI_TransmitReceive+0x264>
 80068fa:	68fb      	ldr	r3, [r7, #12]
 80068fc:	8edb      	ldrh	r3, [r3, #54]	@ 0x36
 80068fe:	b29b      	uxth	r3, r3
 8006900:	2b00      	cmp	r3, #0
 8006902:	d017      	beq.n	8006934 <HAL_SPI_TransmitReceive+0x264>
 8006904:	6a7b      	ldr	r3, [r7, #36]	@ 0x24
 8006906:	2b01      	cmp	r3, #1
 8006908:	d114      	bne.n	8006934 <HAL_SPI_TransmitReceive+0x264>
      {
        *(__IO uint8_t *)&hspi->Instance->DR = *((const uint8_t *)hspi->pTxBuffPtr);
 800690a:	68fb      	ldr	r3, [r7, #12]
 800690c:	6b1a      	ldr	r2, [r3, #48]	@ 0x30
 800690e:	68fb      	ldr	r3, [r7, #12]
 8006910:	681b      	ldr	r3, [r3, #0]
 8006912:	330c      	adds	r3, #12
 8006914:	7812      	ldrb	r2, [r2, #0]
 8006916:	701a      	strb	r2, [r3, #0]
        hspi->pTxBuffPtr++;
 8006918:	68fb      	ldr	r3, [r7, #12]
 800691a:	6b1b      	ldr	r3, [r3, #48]	@ 0x30
 800691c:	1c5a      	adds	r2, r3, #1
 800691e:	68fb      	ldr	r3, [r7, #12]
 8006920:	631a      	str	r2, [r3, #48]	@ 0x30
        hspi->TxXferCount--;
 8006922:	68fb      	ldr	r3, [r7, #12]
 8006924:	8edb      	ldrh	r3, [r3, #54]	@ 0x36
 8006926:	b29b      	uxth	r3, r3
 8006928:	3b01      	subs	r3, #1
 800692a:	b29a      	uxth	r2, r3
 800692c:	68fb      	ldr	r3, [r7, #12]
 800692e:	86da      	strh	r2, [r3, #54]	@ 0x36
        /* Next Data is a reception (Rx). Tx not allowed */
        txallowed = 0U;
 8006930:	2300      	movs	r3, #0
 8006932:	627b      	str	r3, [r7, #36]	@ 0x24
        }
#endif /* USE_SPI_CRC */
      }

      /* Wait until RXNE flag is reset */
      if ((__HAL_SPI_GET_FLAG(hspi, SPI_FLAG_RXNE)) && (hspi->RxXferCount > 0U))
 8006934:	68fb      	ldr	r3, [r7, #12]
 8006936:	681b      	ldr	r3, [r3, #0]
 8006938:	689b      	ldr	r3, [r3, #8]
 800693a:	f003 0301 	and.w	r3, r3, #1
 800693e:	2b01      	cmp	r3, #1
 8006940:	d119      	bne.n	8006976 <HAL_SPI_TransmitReceive+0x2a6>
 8006942:	68fb      	ldr	r3, [r7, #12]
 8006944:	8fdb      	ldrh	r3, [r3, #62]	@ 0x3e
 8006946:	b29b      	uxth	r3, r3
 8006948:	2b00      	cmp	r3, #0
 800694a:	d014      	beq.n	8006976 <HAL_SPI_TransmitReceive+0x2a6>
      {
        (*(uint8_t *)hspi->pRxBuffPtr) = hspi->Instance->DR;
 800694c:	68fb      	ldr	r3, [r7, #12]
 800694e:	681b      	ldr	r3, [r3, #0]
 8006950:	68da      	ldr	r2, [r3, #12]
 8006952:	68fb      	ldr	r3, [r7, #12]
 8006954:	6b9b      	ldr	r3, [r3, #56]	@ 0x38
 8006956:	b2d2      	uxtb	r2, r2
 8006958:	701a      	strb	r2, [r3, #0]
        hspi->pRxBuffPtr++;
 800695a:	68fb      	ldr	r3, [r7, #12]
 800695c:	6b9b      	ldr	r3, [r3, #56]	@ 0x38
 800695e:	1c5a      	adds	r2, r3, #1
 8006960:	68fb      	ldr	r3, [r7, #12]
 8006962:	639a      	str	r2, [r3, #56]	@ 0x38
        hspi->RxXferCount--;
 8006964:	68fb      	ldr	r3, [r7, #12]
 8006966:	8fdb      	ldrh	r3, [r3, #62]	@ 0x3e
 8006968:	b29b      	uxth	r3, r3
 800696a:	3b01      	subs	r3, #1
 800696c:	b29a      	uxth	r2, r3
 800696e:	68fb      	ldr	r3, [r7, #12]
 8006970:	87da      	strh	r2, [r3, #62]	@ 0x3e
        /* Next Data is a Transmission (Tx). Tx is allowed */
        txallowed = 1U;
 8006972:	2301      	movs	r3, #1
 8006974:	627b      	str	r3, [r7, #36]	@ 0x24
      }
      if ((((HAL_GetTick() - tickstart) >=  Timeout) && ((Timeout != HAL_MAX_DELAY))) || (Timeout == 0U))
 8006976:	f7fb ffed 	bl	8002954 <HAL_GetTick>
 800697a:	4602      	mov	r2, r0
 800697c:	6a3b      	ldr	r3, [r7, #32]
 800697e:	1ad3      	subs	r3, r2, r3
 8006980:	6b3a      	ldr	r2, [r7, #48]	@ 0x30
 8006982:	429a      	cmp	r2, r3
 8006984:	d803      	bhi.n	800698e <HAL_SPI_TransmitReceive+0x2be>
 8006986:	6b3b      	ldr	r3, [r7, #48]	@ 0x30
 8006988:	f1b3 3fff 	cmp.w	r3, #4294967295
 800698c:	d102      	bne.n	8006994 <HAL_SPI_TransmitReceive+0x2c4>
 800698e:	6b3b      	ldr	r3, [r7, #48]	@ 0x30
 8006990:	2b00      	cmp	r3, #0
 8006992:	d109      	bne.n	80069a8 <HAL_SPI_TransmitReceive+0x2d8>
      {
        hspi->State = HAL_SPI_STATE_READY;
 8006994:	68fb      	ldr	r3, [r7, #12]
 8006996:	2201      	movs	r2, #1
 8006998:	f883 2051 	strb.w	r2, [r3, #81]	@ 0x51
        __HAL_UNLOCK(hspi);
 800699c:	68fb      	ldr	r3, [r7, #12]
 800699e:	2200      	movs	r2, #0
 80069a0:	f883 2050 	strb.w	r2, [r3, #80]	@ 0x50
        return HAL_TIMEOUT;
 80069a4:	2303      	movs	r3, #3
 80069a6:	e038      	b.n	8006a1a <HAL_SPI_TransmitReceive+0x34a>
    while ((hspi->TxXferCount > 0U) || (hspi->RxXferCount > 0U))
 80069a8:	68fb      	ldr	r3, [r7, #12]
 80069aa:	8edb      	ldrh	r3, [r3, #54]	@ 0x36
 80069ac:	b29b      	uxth	r3, r3
 80069ae:	2b00      	cmp	r3, #0
 80069b0:	d19c      	bne.n	80068ec <HAL_SPI_TransmitReceive+0x21c>
 80069b2:	68fb      	ldr	r3, [r7, #12]
 80069b4:	8fdb      	ldrh	r3, [r3, #62]	@ 0x3e
 80069b6:	b29b      	uxth	r3, r3
 80069b8:	2b00      	cmp	r3, #0
 80069ba:	d197      	bne.n	80068ec <HAL_SPI_TransmitReceive+0x21c>
    return HAL_ERROR;
  }
#endif /* USE_SPI_CRC */

  /* Check the end of the transaction */
  if (SPI_EndRxTxTransaction(hspi, Timeout, tickstart) != HAL_OK)
 80069bc:	6a3a      	ldr	r2, [r7, #32]
 80069be:	6b39      	ldr	r1, [r7, #48]	@ 0x30
 80069c0:	68f8      	ldr	r0, [r7, #12]
 80069c2:	f000 fb63 	bl	800708c <SPI_EndRxTxTransaction>
 80069c6:	4603      	mov	r3, r0
 80069c8:	2b00      	cmp	r3, #0
 80069ca:	d008      	beq.n	80069de <HAL_SPI_TransmitReceive+0x30e>
  {
    hspi->ErrorCode = HAL_SPI_ERROR_FLAG;
 80069cc:	68fb      	ldr	r3, [r7, #12]
 80069ce:	2220      	movs	r2, #32
 80069d0:	655a      	str	r2, [r3, #84]	@ 0x54
    __HAL_UNLOCK(hspi);
 80069d2:	68fb      	ldr	r3, [r7, #12]
 80069d4:	2200      	movs	r2, #0
 80069d6:	f883 2050 	strb.w	r2, [r3, #80]	@ 0x50
    return HAL_ERROR;
 80069da:	2301      	movs	r3, #1
 80069dc:	e01d      	b.n	8006a1a <HAL_SPI_TransmitReceive+0x34a>
  }

  /* Clear overrun flag in 2 Lines communication mode because received is not read */
  if (hspi->Init.Direction == SPI_DIRECTION_2LINES)
 80069de:	68fb      	ldr	r3, [r7, #12]
 80069e0:	689b      	ldr	r3, [r3, #8]
 80069e2:	2b00      	cmp	r3, #0
 80069e4:	d10a      	bne.n	80069fc <HAL_SPI_TransmitReceive+0x32c>
  {
    __HAL_SPI_CLEAR_OVRFLAG(hspi);
 80069e6:	2300      	movs	r3, #0
 80069e8:	613b      	str	r3, [r7, #16]
 80069ea:	68fb      	ldr	r3, [r7, #12]
 80069ec:	681b      	ldr	r3, [r3, #0]
 80069ee:	68db      	ldr	r3, [r3, #12]
 80069f0:	613b      	str	r3, [r7, #16]
 80069f2:	68fb      	ldr	r3, [r7, #12]
 80069f4:	681b      	ldr	r3, [r3, #0]
 80069f6:	689b      	ldr	r3, [r3, #8]
 80069f8:	613b      	str	r3, [r7, #16]
 80069fa:	693b      	ldr	r3, [r7, #16]
  }


  hspi->State = HAL_SPI_STATE_READY;
 80069fc:	68fb      	ldr	r3, [r7, #12]
 80069fe:	2201      	movs	r2, #1
 8006a00:	f883 2051 	strb.w	r2, [r3, #81]	@ 0x51
  /* Unlock the process */
  __HAL_UNLOCK(hspi);
 8006a04:	68fb      	ldr	r3, [r7, #12]
 8006a06:	2200      	movs	r2, #0
 8006a08:	f883 2050 	strb.w	r2, [r3, #80]	@ 0x50

  if (hspi->ErrorCode != HAL_SPI_ERROR_NONE)
 8006a0c:	68fb      	ldr	r3, [r7, #12]
 8006a0e:	6d5b      	ldr	r3, [r3, #84]	@ 0x54
 8006a10:	2b00      	cmp	r3, #0
 8006a12:	d001      	beq.n	8006a18 <HAL_SPI_TransmitReceive+0x348>
  {
    return HAL_ERROR;
 8006a14:	2301      	movs	r3, #1
 8006a16:	e000      	b.n	8006a1a <HAL_SPI_TransmitReceive+0x34a>
  }
  else
  {
    return HAL_OK;
 8006a18:	2300      	movs	r3, #0
  }
}
 8006a1a:	4618      	mov	r0, r3
 8006a1c:	3728      	adds	r7, #40	@ 0x28
 8006a1e:	46bd      	mov	sp, r7
 8006a20:	bd80      	pop	{r7, pc}
	...

08006a24 <HAL_SPI_Transmit_DMA>:
  * @param  pData pointer to data buffer
  * @param  Size amount of data to be sent
  * @retval HAL status
  */
HAL_StatusTypeDef HAL_SPI_Transmit_DMA(SPI_HandleTypeDef *hspi, const uint8_t *pData, uint16_t Size)
{
 8006a24:	b580      	push	{r7, lr}
 8006a26:	b084      	sub	sp, #16
 8006a28:	af00      	add	r7, sp, #0
 8006a2a:	60f8      	str	r0, [r7, #12]
 8006a2c:	60b9      	str	r1, [r7, #8]
 8006a2e:	4613      	mov	r3, r2
 8006a30:	80fb      	strh	r3, [r7, #6]
  assert_param(IS_SPI_DMA_HANDLE(hspi->hdmatx));

  /* Check Direction parameter */
  assert_param(IS_SPI_DIRECTION_2LINES_OR_1LINE(hspi->Init.Direction));

  if (hspi->State != HAL_SPI_STATE_READY)
 8006a32:	68fb      	ldr	r3, [r7, #12]
 8006a34:	f893 3051 	ldrb.w	r3, [r3, #81]	@ 0x51
 8006a38:	b2db      	uxtb	r3, r3
 8006a3a:	2b01      	cmp	r3, #1
 8006a3c:	d001      	beq.n	8006a42 <HAL_SPI_Transmit_DMA+0x1e>
  {
    return HAL_BUSY;
 8006a3e:	2302      	movs	r3, #2
 8006a40:	e097      	b.n	8006b72 <HAL_SPI_Transmit_DMA+0x14e>
  }

  if ((pData == NULL) || (Size == 0U))
 8006a42:	68bb      	ldr	r3, [r7, #8]
 8006a44:	2b00      	cmp	r3, #0
 8006a46:	d002      	beq.n	8006a4e <HAL_SPI_Transmit_DMA+0x2a>
 8006a48:	88fb      	ldrh	r3, [r7, #6]
 8006a4a:	2b00      	cmp	r3, #0
 8006a4c:	d101      	bne.n	8006a52 <HAL_SPI_Transmit_DMA+0x2e>
  {
    return HAL_ERROR;
 8006a4e:	2301      	movs	r3, #1
 8006a50:	e08f      	b.n	8006b72 <HAL_SPI_Transmit_DMA+0x14e>
  }

  /* Process Locked */
  __HAL_LOCK(hspi);
 8006a52:	68fb      	ldr	r3, [r7, #12]
 8006a54:	f893 3050 	ldrb.w	r3, [r3, #80]	@ 0x50
 8006a58:	2b01      	cmp	r3, #1
 8006a5a:	d101      	bne.n	8006a60 <HAL_SPI_Transmit_DMA+0x3c>
 8006a5c:	2302      	movs	r3, #2
 8006a5e:	e088      	b.n	8006b72 <HAL_SPI_Transmit_DMA+0x14e>
 8006a60:	68fb      	ldr	r3, [r7, #12]
 8006a62:	2201      	movs	r2, #1
 8006a64:	f883 2050 	strb.w	r2, [r3, #80]	@ 0x50

  /* Set the transaction information */
  hspi->State       = HAL_SPI_STATE_BUSY_TX;
 8006a68:	68fb      	ldr	r3, [r7, #12]
 8006a6a:	2203      	movs	r2, #3
 8006a6c:	f883 2051 	strb.w	r2, [r3, #81]	@ 0x51
  hspi->ErrorCode   = HAL_SPI_ERROR_NONE;
 8006a70:	68fb      	ldr	r3, [r7, #12]
 8006a72:	2200      	movs	r2, #0
 8006a74:	655a      	str	r2, [r3, #84]	@ 0x54
  hspi->pTxBuffPtr  = (const uint8_t *)pData;
 8006a76:	68fb      	ldr	r3, [r7, #12]
 8006a78:	68ba      	ldr	r2, [r7, #8]
 8006a7a:	631a      	str	r2, [r3, #48]	@ 0x30
  hspi->TxXferSize  = Size;
 8006a7c:	68fb      	ldr	r3, [r7, #12]
 8006a7e:	88fa      	ldrh	r2, [r7, #6]
 8006a80:	869a      	strh	r2, [r3, #52]	@ 0x34
  hspi->TxXferCount = Size;
 8006a82:	68fb      	ldr	r3, [r7, #12]
 8006a84:	88fa      	ldrh	r2, [r7, #6]
 8006a86:	86da      	strh	r2, [r3, #54]	@ 0x36

  /* Init field not used in handle to zero */
  hspi->pRxBuffPtr  = (uint8_t *)NULL;
 8006a88:	68fb      	ldr	r3, [r7, #12]
 8006a8a:	2200      	movs	r2, #0
 8006a8c:	639a      	str	r2, [r3, #56]	@ 0x38
  hspi->TxISR       = NULL;
 8006a8e:	68fb      	ldr	r3, [r7, #12]
 8006a90:	2200      	movs	r2, #0
 8006a92:	645a      	str	r2, [r3, #68]	@ 0x44
  hspi->RxISR       = NULL;
 8006a94:	68fb      	ldr	r3, [r7, #12]
 8006a96:	2200      	movs	r2, #0
 8006a98:	641a      	str	r2, [r3, #64]	@ 0x40
  hspi->RxXferSize  = 0U;
 8006a9a:	68fb      	ldr	r3, [r7, #12]
 8006a9c:	2200      	movs	r2, #0
 8006a9e:	879a      	strh	r2, [r3, #60]	@ 0x3c
  hspi->RxXferCount = 0U;
 8006aa0:	68fb      	ldr	r3, [r7, #12]
 8006aa2:	2200      	movs	r2, #0
 8006aa4:	87da      	strh	r2, [r3, #62]	@ 0x3e

  /* Configure communication direction : 1Line */
  if (hspi->Init.Direction == SPI_DIRECTION_1LINE)
 8006aa6:	68fb      	ldr	r3, [r7, #12]
 8006aa8:	689b      	ldr	r3, [r3, #8]
 8006aaa:	f5b3 4f00 	cmp.w	r3, #32768	@ 0x8000
 8006aae:	d10f      	bne.n	8006ad0 <HAL_SPI_Transmit_DMA+0xac>
  {
    /* Disable SPI Peripheral before set 1Line direction (BIDIOE bit) */
    __HAL_SPI_DISABLE(hspi);
 8006ab0:	68fb      	ldr	r3, [r7, #12]
 8006ab2:	681b      	ldr	r3, [r3, #0]
 8006ab4:	681a      	ldr	r2, [r3, #0]
 8006ab6:	68fb      	ldr	r3, [r7, #12]
 8006ab8:	681b      	ldr	r3, [r3, #0]
 8006aba:	f022 0240 	bic.w	r2, r2, #64	@ 0x40
 8006abe:	601a      	str	r2, [r3, #0]
    SPI_1LINE_TX(hspi);
 8006ac0:	68fb      	ldr	r3, [r7, #12]
 8006ac2:	681b      	ldr	r3, [r3, #0]
 8006ac4:	681a      	ldr	r2, [r3, #0]
 8006ac6:	68fb      	ldr	r3, [r7, #12]
 8006ac8:	681b      	ldr	r3, [r3, #0]
 8006aca:	f442 4280 	orr.w	r2, r2, #16384	@ 0x4000
 8006ace:	601a      	str	r2, [r3, #0]
    SPI_RESET_CRC(hspi);
  }
#endif /* USE_SPI_CRC */

  /* Set the SPI TxDMA Half transfer complete callback */
  hspi->hdmatx->XferHalfCpltCallback = SPI_DMAHalfTransmitCplt;
 8006ad0:	68fb      	ldr	r3, [r7, #12]
 8006ad2:	6c9b      	ldr	r3, [r3, #72]	@ 0x48
 8006ad4:	4a29      	ldr	r2, [pc, #164]	@ (8006b7c <HAL_SPI_Transmit_DMA+0x158>)
 8006ad6:	641a      	str	r2, [r3, #64]	@ 0x40

  /* Set the SPI TxDMA transfer complete callback */
  hspi->hdmatx->XferCpltCallback = SPI_DMATransmitCplt;
 8006ad8:	68fb      	ldr	r3, [r7, #12]
 8006ada:	6c9b      	ldr	r3, [r3, #72]	@ 0x48
 8006adc:	4a28      	ldr	r2, [pc, #160]	@ (8006b80 <HAL_SPI_Transmit_DMA+0x15c>)
 8006ade:	63da      	str	r2, [r3, #60]	@ 0x3c

  /* Set the DMA error callback */
  hspi->hdmatx->XferErrorCallback = SPI_DMAError;
 8006ae0:	68fb      	ldr	r3, [r7, #12]
 8006ae2:	6c9b      	ldr	r3, [r3, #72]	@ 0x48
 8006ae4:	4a27      	ldr	r2, [pc, #156]	@ (8006b84 <HAL_SPI_Transmit_DMA+0x160>)
 8006ae6:	64da      	str	r2, [r3, #76]	@ 0x4c

  /* Set the DMA AbortCpltCallback */
  hspi->hdmatx->XferAbortCallback = NULL;
 8006ae8:	68fb      	ldr	r3, [r7, #12]
 8006aea:	6c9b      	ldr	r3, [r3, #72]	@ 0x48
 8006aec:	2200      	movs	r2, #0
 8006aee:	651a      	str	r2, [r3, #80]	@ 0x50

  /* Enable the Tx DMA Stream/Channel */
  if (HAL_OK != HAL_DMA_Start_IT(hspi->hdmatx, (uint32_t)hspi->pTxBuffPtr, (uint32_t)&hspi->Instance->DR,
 8006af0:	68fb      	ldr	r3, [r7, #12]
 8006af2:	6c98      	ldr	r0, [r3, #72]	@ 0x48
 8006af4:	68fb      	ldr	r3, [r7, #12]
 8006af6:	6b1b      	ldr	r3, [r3, #48]	@ 0x30
 8006af8:	4619      	mov	r1, r3
 8006afa:	68fb      	ldr	r3, [r7, #12]
 8006afc:	681b      	ldr	r3, [r3, #0]
 8006afe:	330c      	adds	r3, #12
 8006b00:	461a      	mov	r2, r3
                                 hspi->TxXferCount))
 8006b02:	68fb      	ldr	r3, [r7, #12]
 8006b04:	8edb      	ldrh	r3, [r3, #54]	@ 0x36
 8006b06:	b29b      	uxth	r3, r3
  if (HAL_OK != HAL_DMA_Start_IT(hspi->hdmatx, (uint32_t)hspi->pTxBuffPtr, (uint32_t)&hspi->Instance->DR,
 8006b08:	f7fc fed4 	bl	80038b4 <HAL_DMA_Start_IT>
 8006b0c:	4603      	mov	r3, r0
 8006b0e:	2b00      	cmp	r3, #0
 8006b10:	d00b      	beq.n	8006b2a <HAL_SPI_Transmit_DMA+0x106>
  {
    /* Update SPI error code */
    SET_BIT(hspi->ErrorCode, HAL_SPI_ERROR_DMA);
 8006b12:	68fb      	ldr	r3, [r7, #12]
 8006b14:	6d5b      	ldr	r3, [r3, #84]	@ 0x54
 8006b16:	f043 0210 	orr.w	r2, r3, #16
 8006b1a:	68fb      	ldr	r3, [r7, #12]
 8006b1c:	655a      	str	r2, [r3, #84]	@ 0x54
    /* Process Unlocked */
    __HAL_UNLOCK(hspi);
 8006b1e:	68fb      	ldr	r3, [r7, #12]
 8006b20:	2200      	movs	r2, #0
 8006b22:	f883 2050 	strb.w	r2, [r3, #80]	@ 0x50
    return HAL_ERROR;
 8006b26:	2301      	movs	r3, #1
 8006b28:	e023      	b.n	8006b72 <HAL_SPI_Transmit_DMA+0x14e>
  }

  /* Check if the SPI is already enabled */
  if ((hspi->Instance->CR1 & SPI_CR1_SPE) != SPI_CR1_SPE)
 8006b2a:	68fb      	ldr	r3, [r7, #12]
 8006b2c:	681b      	ldr	r3, [r3, #0]
 8006b2e:	681b      	ldr	r3, [r3, #0]
 8006b30:	f003 0340 	and.w	r3, r3, #64	@ 0x40
 8006b34:	2b40      	cmp	r3, #64	@ 0x40
 8006b36:	d007      	beq.n	8006b48 <HAL_SPI_Transmit_DMA+0x124>
  {
    /* Enable SPI peripheral */
    __HAL_SPI_ENABLE(hspi);
 8006b38:	68fb      	ldr	r3, [r7, #12]
 8006b3a:	681b      	ldr	r3, [r3, #0]
 8006b3c:	681a      	ldr	r2, [r3, #0]
 8006b3e:	68fb      	ldr	r3, [r7, #12]
 8006b40:	681b      	ldr	r3, [r3, #0]
 8006b42:	f042 0240 	orr.w	r2, r2, #64	@ 0x40
 8006b46:	601a      	str	r2, [r3, #0]
  }

  /* Process Unlocked */
  __HAL_UNLOCK(hspi);
 8006b48:	68fb      	ldr	r3, [r7, #12]
 8006b4a:	2200      	movs	r2, #0
 8006b4c:	f883 2050 	strb.w	r2, [r3, #80]	@ 0x50

  /* Enable the SPI Error Interrupt Bit */
  __HAL_SPI_ENABLE_IT(hspi, (SPI_IT_ERR));
 8006b50:	68fb      	ldr	r3, [r7, #12]
 8006b52:	681b      	ldr	r3, [r3, #0]
 8006b54:	685a      	ldr	r2, [r3, #4]
 8006b56:	68fb      	ldr	r3, [r7, #12]
 8006b58:	681b      	ldr	r3, [r3, #0]
 8006b5a:	f042 0220 	orr.w	r2, r2, #32
 8006b5e:	605a      	str	r2, [r3, #4]

  /* Enable Tx DMA Request */
  SET_BIT(hspi->Instance->CR2, SPI_CR2_TXDMAEN);
 8006b60:	68fb      	ldr	r3, [r7, #12]
 8006b62:	681b      	ldr	r3, [r3, #0]
 8006b64:	685a      	ldr	r2, [r3, #4]
 8006b66:	68fb      	ldr	r3, [r7, #12]
 8006b68:	681b      	ldr	r3, [r3, #0]
 8006b6a:	f042 0202 	orr.w	r2, r2, #2
 8006b6e:	605a      	str	r2, [r3, #4]

  return HAL_OK;
 8006b70:	2300      	movs	r3, #0
}
 8006b72:	4618      	mov	r0, r3
 8006b74:	3710      	adds	r7, #16
 8006b76:	46bd      	mov	sp, r7
 8006b78:	bd80      	pop	{r7, pc}
 8006b7a:	bf00      	nop
 8006b7c:	08006e2d 	.word	0x08006e2d
 8006b80:	08006d85 	.word	0x08006d85
 8006b84:	08006e49 	.word	0x08006e49

08006b88 <HAL_SPI_IRQHandler>:
  * @param  hspi pointer to a SPI_HandleTypeDef structure that contains
  *               the configuration information for the specified SPI module.
  * @retval None
  */
void HAL_SPI_IRQHandler(SPI_HandleTypeDef *hspi)
{
 8006b88:	b580      	push	{r7, lr}
 8006b8a:	b088      	sub	sp, #32
 8006b8c:	af00      	add	r7, sp, #0
 8006b8e:	6078      	str	r0, [r7, #4]
  uint32_t itsource = hspi->Instance->CR2;
 8006b90:	687b      	ldr	r3, [r7, #4]
 8006b92:	681b      	ldr	r3, [r3, #0]
 8006b94:	685b      	ldr	r3, [r3, #4]
 8006b96:	61fb      	str	r3, [r7, #28]
  uint32_t itflag   = hspi->Instance->SR;
 8006b98:	687b      	ldr	r3, [r7, #4]
 8006b9a:	681b      	ldr	r3, [r3, #0]
 8006b9c:	689b      	ldr	r3, [r3, #8]
 8006b9e:	61bb      	str	r3, [r7, #24]

  /* SPI in mode Receiver ----------------------------------------------------*/
  if ((SPI_CHECK_FLAG(itflag, SPI_FLAG_OVR) == RESET) &&
 8006ba0:	69bb      	ldr	r3, [r7, #24]
 8006ba2:	f003 0340 	and.w	r3, r3, #64	@ 0x40
 8006ba6:	2b00      	cmp	r3, #0
 8006ba8:	d10e      	bne.n	8006bc8 <HAL_SPI_IRQHandler+0x40>
      (SPI_CHECK_FLAG(itflag, SPI_FLAG_RXNE) != RESET) && (SPI_CHECK_IT_SOURCE(itsource, SPI_IT_RXNE) != RESET))
 8006baa:	69bb      	ldr	r3, [r7, #24]
 8006bac:	f003 0301 	and.w	r3, r3, #1
  if ((SPI_CHECK_FLAG(itflag, SPI_FLAG_OVR) == RESET) &&
 8006bb0:	2b00      	cmp	r3, #0
 8006bb2:	d009      	beq.n	8006bc8 <HAL_SPI_IRQHandler+0x40>
      (SPI_CHECK_FLAG(itflag, SPI_FLAG_RXNE) != RESET) && (SPI_CHECK_IT_SOURCE(itsource, SPI_IT_RXNE) != RESET))
 8006bb4:	69fb      	ldr	r3, [r7, #28]
 8006bb6:	f003 0340 	and.w	r3, r3, #64	@ 0x40
 8006bba:	2b00      	cmp	r3, #0
 8006bbc:	d004      	beq.n	8006bc8 <HAL_SPI_IRQHandler+0x40>
  {
    hspi->RxISR(hspi);
 8006bbe:	687b      	ldr	r3, [r7, #4]
 8006bc0:	6c1b      	ldr	r3, [r3, #64]	@ 0x40
 8006bc2:	6878      	ldr	r0, [r7, #4]
 8006bc4:	4798      	blx	r3
    return;
 8006bc6:	e0ce      	b.n	8006d66 <HAL_SPI_IRQHandler+0x1de>
  }

  /* SPI in mode Transmitter -------------------------------------------------*/
  if ((SPI_CHECK_FLAG(itflag, SPI_FLAG_TXE) != RESET) && (SPI_CHECK_IT_SOURCE(itsource, SPI_IT_TXE) != RESET))
 8006bc8:	69bb      	ldr	r3, [r7, #24]
 8006bca:	f003 0302 	and.w	r3, r3, #2
 8006bce:	2b00      	cmp	r3, #0
 8006bd0:	d009      	beq.n	8006be6 <HAL_SPI_IRQHandler+0x5e>
 8006bd2:	69fb      	ldr	r3, [r7, #28]
 8006bd4:	f003 0380 	and.w	r3, r3, #128	@ 0x80
 8006bd8:	2b00      	cmp	r3, #0
 8006bda:	d004      	beq.n	8006be6 <HAL_SPI_IRQHandler+0x5e>
  {
    hspi->TxISR(hspi);
 8006bdc:	687b      	ldr	r3, [r7, #4]
 8006bde:	6c5b      	ldr	r3, [r3, #68]	@ 0x44
 8006be0:	6878      	ldr	r0, [r7, #4]
 8006be2:	4798      	blx	r3
    return;
 8006be4:	e0bf      	b.n	8006d66 <HAL_SPI_IRQHandler+0x1de>
  }

  /* SPI in Error Treatment --------------------------------------------------*/
  if (((SPI_CHECK_FLAG(itflag, SPI_FLAG_MODF) != RESET) || (SPI_CHECK_FLAG(itflag, SPI_FLAG_OVR) != RESET)
 8006be6:	69bb      	ldr	r3, [r7, #24]
 8006be8:	f003 0320 	and.w	r3, r3, #32
 8006bec:	2b00      	cmp	r3, #0
 8006bee:	d10a      	bne.n	8006c06 <HAL_SPI_IRQHandler+0x7e>
 8006bf0:	69bb      	ldr	r3, [r7, #24]
 8006bf2:	f003 0340 	and.w	r3, r3, #64	@ 0x40
 8006bf6:	2b00      	cmp	r3, #0
 8006bf8:	d105      	bne.n	8006c06 <HAL_SPI_IRQHandler+0x7e>
       || (SPI_CHECK_FLAG(itflag, SPI_FLAG_FRE) != RESET)) && (SPI_CHECK_IT_SOURCE(itsource, SPI_IT_ERR) != RESET))
 8006bfa:	69bb      	ldr	r3, [r7, #24]
 8006bfc:	f403 7380 	and.w	r3, r3, #256	@ 0x100
 8006c00:	2b00      	cmp	r3, #0
 8006c02:	f000 80b0 	beq.w	8006d66 <HAL_SPI_IRQHandler+0x1de>
 8006c06:	69fb      	ldr	r3, [r7, #28]
 8006c08:	f003 0320 	and.w	r3, r3, #32
 8006c0c:	2b00      	cmp	r3, #0
 8006c0e:	f000 80aa 	beq.w	8006d66 <HAL_SPI_IRQHandler+0x1de>
  {
    /* SPI Overrun error interrupt occurred ----------------------------------*/
    if (SPI_CHECK_FLAG(itflag, SPI_FLAG_OVR) != RESET)
 8006c12:	69bb      	ldr	r3, [r7, #24]
 8006c14:	f003 0340 	and.w	r3, r3, #64	@ 0x40
 8006c18:	2b00      	cmp	r3, #0
 8006c1a:	d023      	beq.n	8006c64 <HAL_SPI_IRQHandler+0xdc>
    {
      if (hspi->State != HAL_SPI_STATE_BUSY_TX)
 8006c1c:	687b      	ldr	r3, [r7, #4]
 8006c1e:	f893 3051 	ldrb.w	r3, [r3, #81]	@ 0x51
 8006c22:	b2db      	uxtb	r3, r3
 8006c24:	2b03      	cmp	r3, #3
 8006c26:	d011      	beq.n	8006c4c <HAL_SPI_IRQHandler+0xc4>
      {
        SET_BIT(hspi->ErrorCode, HAL_SPI_ERROR_OVR);
 8006c28:	687b      	ldr	r3, [r7, #4]
 8006c2a:	6d5b      	ldr	r3, [r3, #84]	@ 0x54
 8006c2c:	f043 0204 	orr.w	r2, r3, #4
 8006c30:	687b      	ldr	r3, [r7, #4]
 8006c32:	655a      	str	r2, [r3, #84]	@ 0x54
        __HAL_SPI_CLEAR_OVRFLAG(hspi);
 8006c34:	2300      	movs	r3, #0
 8006c36:	617b      	str	r3, [r7, #20]
 8006c38:	687b      	ldr	r3, [r7, #4]
 8006c3a:	681b      	ldr	r3, [r3, #0]
 8006c3c:	68db      	ldr	r3, [r3, #12]
 8006c3e:	617b      	str	r3, [r7, #20]
 8006c40:	687b      	ldr	r3, [r7, #4]
 8006c42:	681b      	ldr	r3, [r3, #0]
 8006c44:	689b      	ldr	r3, [r3, #8]
 8006c46:	617b      	str	r3, [r7, #20]
 8006c48:	697b      	ldr	r3, [r7, #20]
 8006c4a:	e00b      	b.n	8006c64 <HAL_SPI_IRQHandler+0xdc>
      }
      else
      {
        __HAL_SPI_CLEAR_OVRFLAG(hspi);
 8006c4c:	2300      	movs	r3, #0
 8006c4e:	613b      	str	r3, [r7, #16]
 8006c50:	687b      	ldr	r3, [r7, #4]
 8006c52:	681b      	ldr	r3, [r3, #0]
 8006c54:	68db      	ldr	r3, [r3, #12]
 8006c56:	613b      	str	r3, [r7, #16]
 8006c58:	687b      	ldr	r3, [r7, #4]
 8006c5a:	681b      	ldr	r3, [r3, #0]
 8006c5c:	689b      	ldr	r3, [r3, #8]
 8006c5e:	613b      	str	r3, [r7, #16]
 8006c60:	693b      	ldr	r3, [r7, #16]
        return;
 8006c62:	e080      	b.n	8006d66 <HAL_SPI_IRQHandler+0x1de>
      }
    }

    /* SPI Mode Fault error interrupt occurred -------------------------------*/
    if (SPI_CHECK_FLAG(itflag, SPI_FLAG_MODF) != RESET)
 8006c64:	69bb      	ldr	r3, [r7, #24]
 8006c66:	f003 0320 	and.w	r3, r3, #32
 8006c6a:	2b00      	cmp	r3, #0
 8006c6c:	d014      	beq.n	8006c98 <HAL_SPI_IRQHandler+0x110>
    {
      SET_BIT(hspi->ErrorCode, HAL_SPI_ERROR_MODF);
 8006c6e:	687b      	ldr	r3, [r7, #4]
 8006c70:	6d5b      	ldr	r3, [r3, #84]	@ 0x54
 8006c72:	f043 0201 	orr.w	r2, r3, #1
 8006c76:	687b      	ldr	r3, [r7, #4]
 8006c78:	655a      	str	r2, [r3, #84]	@ 0x54
      __HAL_SPI_CLEAR_MODFFLAG(hspi);
 8006c7a:	2300      	movs	r3, #0
 8006c7c:	60fb      	str	r3, [r7, #12]
 8006c7e:	687b      	ldr	r3, [r7, #4]
 8006c80:	681b      	ldr	r3, [r3, #0]
 8006c82:	689b      	ldr	r3, [r3, #8]
 8006c84:	60fb      	str	r3, [r7, #12]
 8006c86:	687b      	ldr	r3, [r7, #4]
 8006c88:	681b      	ldr	r3, [r3, #0]
 8006c8a:	681a      	ldr	r2, [r3, #0]
 8006c8c:	687b      	ldr	r3, [r7, #4]
 8006c8e:	681b      	ldr	r3, [r3, #0]
 8006c90:	f022 0240 	bic.w	r2, r2, #64	@ 0x40
 8006c94:	601a      	str	r2, [r3, #0]
 8006c96:	68fb      	ldr	r3, [r7, #12]
    }

    /* SPI Frame error interrupt occurred ------------------------------------*/
    if (SPI_CHECK_FLAG(itflag, SPI_FLAG_FRE) != RESET)
 8006c98:	69bb      	ldr	r3, [r7, #24]
 8006c9a:	f403 7380 	and.w	r3, r3, #256	@ 0x100
 8006c9e:	2b00      	cmp	r3, #0
 8006ca0:	d00c      	beq.n	8006cbc <HAL_SPI_IRQHandler+0x134>
    {
      SET_BIT(hspi->ErrorCode, HAL_SPI_ERROR_FRE);
 8006ca2:	687b      	ldr	r3, [r7, #4]
 8006ca4:	6d5b      	ldr	r3, [r3, #84]	@ 0x54
 8006ca6:	f043 0208 	orr.w	r2, r3, #8
 8006caa:	687b      	ldr	r3, [r7, #4]
 8006cac:	655a      	str	r2, [r3, #84]	@ 0x54
      __HAL_SPI_CLEAR_FREFLAG(hspi);
 8006cae:	2300      	movs	r3, #0
 8006cb0:	60bb      	str	r3, [r7, #8]
 8006cb2:	687b      	ldr	r3, [r7, #4]
 8006cb4:	681b      	ldr	r3, [r3, #0]
 8006cb6:	689b      	ldr	r3, [r3, #8]
 8006cb8:	60bb      	str	r3, [r7, #8]
 8006cba:	68bb      	ldr	r3, [r7, #8]
    }

    if (hspi->ErrorCode != HAL_SPI_ERROR_NONE)
 8006cbc:	687b      	ldr	r3, [r7, #4]
 8006cbe:	6d5b      	ldr	r3, [r3, #84]	@ 0x54
 8006cc0:	2b00      	cmp	r3, #0
 8006cc2:	d04f      	beq.n	8006d64 <HAL_SPI_IRQHandler+0x1dc>
    {
      /* Disable all interrupts */
      __HAL_SPI_DISABLE_IT(hspi, SPI_IT_RXNE | SPI_IT_TXE | SPI_IT_ERR);
 8006cc4:	687b      	ldr	r3, [r7, #4]
 8006cc6:	681b      	ldr	r3, [r3, #0]
 8006cc8:	685a      	ldr	r2, [r3, #4]
 8006cca:	687b      	ldr	r3, [r7, #4]
 8006ccc:	681b      	ldr	r3, [r3, #0]
 8006cce:	f022 02e0 	bic.w	r2, r2, #224	@ 0xe0
 8006cd2:	605a      	str	r2, [r3, #4]

      hspi->State = HAL_SPI_STATE_READY;
 8006cd4:	687b      	ldr	r3, [r7, #4]
 8006cd6:	2201      	movs	r2, #1
 8006cd8:	f883 2051 	strb.w	r2, [r3, #81]	@ 0x51
      /* Disable the SPI DMA requests if enabled */
      if ((HAL_IS_BIT_SET(itsource, SPI_CR2_TXDMAEN)) || (HAL_IS_BIT_SET(itsource, SPI_CR2_RXDMAEN)))
 8006cdc:	69fb      	ldr	r3, [r7, #28]
 8006cde:	f003 0302 	and.w	r3, r3, #2
 8006ce2:	2b00      	cmp	r3, #0
 8006ce4:	d104      	bne.n	8006cf0 <HAL_SPI_IRQHandler+0x168>
 8006ce6:	69fb      	ldr	r3, [r7, #28]
 8006ce8:	f003 0301 	and.w	r3, r3, #1
 8006cec:	2b00      	cmp	r3, #0
 8006cee:	d034      	beq.n	8006d5a <HAL_SPI_IRQHandler+0x1d2>
      {
        CLEAR_BIT(hspi->Instance->CR2, (SPI_CR2_TXDMAEN | SPI_CR2_RXDMAEN));
 8006cf0:	687b      	ldr	r3, [r7, #4]
 8006cf2:	681b      	ldr	r3, [r3, #0]
 8006cf4:	685a      	ldr	r2, [r3, #4]
 8006cf6:	687b      	ldr	r3, [r7, #4]
 8006cf8:	681b      	ldr	r3, [r3, #0]
 8006cfa:	f022 0203 	bic.w	r2, r2, #3
 8006cfe:	605a      	str	r2, [r3, #4]

        /* Abort the SPI DMA Rx channel */
        if (hspi->hdmarx != NULL)
 8006d00:	687b      	ldr	r3, [r7, #4]
 8006d02:	6cdb      	ldr	r3, [r3, #76]	@ 0x4c
 8006d04:	2b00      	cmp	r3, #0
 8006d06:	d011      	beq.n	8006d2c <HAL_SPI_IRQHandler+0x1a4>
        {
          /* Set the SPI DMA Abort callback :
          will lead to call HAL_SPI_ErrorCallback() at end of DMA abort procedure */
          hspi->hdmarx->XferAbortCallback = SPI_DMAAbortOnError;
 8006d08:	687b      	ldr	r3, [r7, #4]
 8006d0a:	6cdb      	ldr	r3, [r3, #76]	@ 0x4c
 8006d0c:	4a17      	ldr	r2, [pc, #92]	@ (8006d6c <HAL_SPI_IRQHandler+0x1e4>)
 8006d0e:	651a      	str	r2, [r3, #80]	@ 0x50
          if (HAL_OK != HAL_DMA_Abort_IT(hspi->hdmarx))
 8006d10:	687b      	ldr	r3, [r7, #4]
 8006d12:	6cdb      	ldr	r3, [r3, #76]	@ 0x4c
 8006d14:	4618      	mov	r0, r3
 8006d16:	f7fc fe25 	bl	8003964 <HAL_DMA_Abort_IT>
 8006d1a:	4603      	mov	r3, r0
 8006d1c:	2b00      	cmp	r3, #0
 8006d1e:	d005      	beq.n	8006d2c <HAL_SPI_IRQHandler+0x1a4>
          {
            SET_BIT(hspi->ErrorCode, HAL_SPI_ERROR_ABORT);
 8006d20:	687b      	ldr	r3, [r7, #4]
 8006d22:	6d5b      	ldr	r3, [r3, #84]	@ 0x54
 8006d24:	f043 0240 	orr.w	r2, r3, #64	@ 0x40
 8006d28:	687b      	ldr	r3, [r7, #4]
 8006d2a:	655a      	str	r2, [r3, #84]	@ 0x54
          }
        }
        /* Abort the SPI DMA Tx channel */
        if (hspi->hdmatx != NULL)
 8006d2c:	687b      	ldr	r3, [r7, #4]
 8006d2e:	6c9b      	ldr	r3, [r3, #72]	@ 0x48
 8006d30:	2b00      	cmp	r3, #0
 8006d32:	d016      	beq.n	8006d62 <HAL_SPI_IRQHandler+0x1da>
        {
          /* Set the SPI DMA Abort callback :
          will lead to call HAL_SPI_ErrorCallback() at end of DMA abort procedure */
          hspi->hdmatx->XferAbortCallback = SPI_DMAAbortOnError;
 8006d34:	687b      	ldr	r3, [r7, #4]
 8006d36:	6c9b      	ldr	r3, [r3, #72]	@ 0x48
 8006d38:	4a0c      	ldr	r2, [pc, #48]	@ (8006d6c <HAL_SPI_IRQHandler+0x1e4>)
 8006d3a:	651a      	str	r2, [r3, #80]	@ 0x50
          if (HAL_OK != HAL_DMA_Abort_IT(hspi->hdmatx))
 8006d3c:	687b      	ldr	r3, [r7, #4]
 8006d3e:	6c9b      	ldr	r3, [r3, #72]	@ 0x48
 8006d40:	4618      	mov	r0, r3
 8006d42:	f7fc fe0f 	bl	8003964 <HAL_DMA_Abort_IT>
 8006d46:	4603      	mov	r3, r0
 8006d48:	2b00      	cmp	r3, #0
 8006d4a:	d00a      	beq.n	8006d62 <HAL_SPI_IRQHandler+0x1da>
          {
            SET_BIT(hspi->ErrorCode, HAL_SPI_ERROR_ABORT);
 8006d4c:	687b      	ldr	r3, [r7, #4]
 8006d4e:	6d5b      	ldr	r3, [r3, #84]	@ 0x54
 8006d50:	f043 0240 	orr.w	r2, r3, #64	@ 0x40
 8006d54:	687b      	ldr	r3, [r7, #4]
 8006d56:	655a      	str	r2, [r3, #84]	@ 0x54
        if (hspi->hdmatx != NULL)
 8006d58:	e003      	b.n	8006d62 <HAL_SPI_IRQHandler+0x1da>
      {
        /* Call user error callback */
#if (USE_HAL_SPI_REGISTER_CALLBACKS == 1U)
        hspi->ErrorCallback(hspi);
#else
        HAL_SPI_ErrorCallback(hspi);
 8006d5a:	6878      	ldr	r0, [r7, #4]
 8006d5c:	f7fb fa92 	bl	8002284 <HAL_SPI_ErrorCallback>
#endif /* USE_HAL_SPI_REGISTER_CALLBACKS */
      }
    }
    return;
 8006d60:	e000      	b.n	8006d64 <HAL_SPI_IRQHandler+0x1dc>
        if (hspi->hdmatx != NULL)
 8006d62:	bf00      	nop
    return;
 8006d64:	bf00      	nop
  }
}
 8006d66:	3720      	adds	r7, #32
 8006d68:	46bd      	mov	sp, r7
 8006d6a:	bd80      	pop	{r7, pc}
 8006d6c:	08006e89 	.word	0x08006e89

08006d70 <HAL_SPI_TxHalfCpltCallback>:
  * @param  hspi pointer to a SPI_HandleTypeDef structure that contains
  *               the configuration information for SPI module.
  * @retval None
  */
__weak void HAL_SPI_TxHalfCpltCallback(SPI_HandleTypeDef *hspi)
{
 8006d70:	b480      	push	{r7}
 8006d72:	b083      	sub	sp, #12
 8006d74:	af00      	add	r7, sp, #0
 8006d76:	6078      	str	r0, [r7, #4]
  UNUSED(hspi);

  /* NOTE : This function should not be modified, when the callback is needed,
            the HAL_SPI_TxHalfCpltCallback should be implemented in the user file
   */
}
 8006d78:	bf00      	nop
 8006d7a:	370c      	adds	r7, #12
 8006d7c:	46bd      	mov	sp, r7
 8006d7e:	f85d 7b04 	ldr.w	r7, [sp], #4
 8006d82:	4770      	bx	lr

08006d84 <SPI_DMATransmitCplt>:
  * @param  hdma pointer to a DMA_HandleTypeDef structure that contains
  *               the configuration information for the specified DMA module.
  * @retval None
  */
static void SPI_DMATransmitCplt(DMA_HandleTypeDef *hdma)
{
 8006d84:	b580      	push	{r7, lr}
 8006d86:	b086      	sub	sp, #24
 8006d88:	af00      	add	r7, sp, #0
 8006d8a:	6078      	str	r0, [r7, #4]
  SPI_HandleTypeDef *hspi = (SPI_HandleTypeDef *)(((DMA_HandleTypeDef *)hdma)->Parent); /* Derogation MISRAC2012-Rule-11.5 */
 8006d8c:	687b      	ldr	r3, [r7, #4]
 8006d8e:	6b9b      	ldr	r3, [r3, #56]	@ 0x38
 8006d90:	617b      	str	r3, [r7, #20]
  uint32_t tickstart;

  /* Init tickstart for timeout management*/
  tickstart = HAL_GetTick();
 8006d92:	f7fb fddf 	bl	8002954 <HAL_GetTick>
 8006d96:	6138      	str	r0, [r7, #16]

  /* DMA Normal Mode */
  if ((hdma->Instance->CR & DMA_SxCR_CIRC) != DMA_SxCR_CIRC)
 8006d98:	687b      	ldr	r3, [r7, #4]
 8006d9a:	681b      	ldr	r3, [r3, #0]
 8006d9c:	681b      	ldr	r3, [r3, #0]
 8006d9e:	f403 7380 	and.w	r3, r3, #256	@ 0x100
 8006da2:	f5b3 7f80 	cmp.w	r3, #256	@ 0x100
 8006da6:	d03b      	beq.n	8006e20 <SPI_DMATransmitCplt+0x9c>
  {
    /* Disable ERR interrupt */
    __HAL_SPI_DISABLE_IT(hspi, SPI_IT_ERR);
 8006da8:	697b      	ldr	r3, [r7, #20]
 8006daa:	681b      	ldr	r3, [r3, #0]
 8006dac:	685a      	ldr	r2, [r3, #4]
 8006dae:	697b      	ldr	r3, [r7, #20]
 8006db0:	681b      	ldr	r3, [r3, #0]
 8006db2:	f022 0220 	bic.w	r2, r2, #32
 8006db6:	605a      	str	r2, [r3, #4]

    /* Disable Tx DMA Request */
    CLEAR_BIT(hspi->Instance->CR2, SPI_CR2_TXDMAEN);
 8006db8:	697b      	ldr	r3, [r7, #20]
 8006dba:	681b      	ldr	r3, [r3, #0]
 8006dbc:	685a      	ldr	r2, [r3, #4]
 8006dbe:	697b      	ldr	r3, [r7, #20]
 8006dc0:	681b      	ldr	r3, [r3, #0]
 8006dc2:	f022 0202 	bic.w	r2, r2, #2
 8006dc6:	605a      	str	r2, [r3, #4]

    /* Check the end of the transaction */
    if (SPI_EndRxTxTransaction(hspi, SPI_DEFAULT_TIMEOUT, tickstart) != HAL_OK)
 8006dc8:	693a      	ldr	r2, [r7, #16]
 8006dca:	2164      	movs	r1, #100	@ 0x64
 8006dcc:	6978      	ldr	r0, [r7, #20]
 8006dce:	f000 f95d 	bl	800708c <SPI_EndRxTxTransaction>
 8006dd2:	4603      	mov	r3, r0
 8006dd4:	2b00      	cmp	r3, #0
 8006dd6:	d005      	beq.n	8006de4 <SPI_DMATransmitCplt+0x60>
    {
      SET_BIT(hspi->ErrorCode, HAL_SPI_ERROR_FLAG);
 8006dd8:	697b      	ldr	r3, [r7, #20]
 8006dda:	6d5b      	ldr	r3, [r3, #84]	@ 0x54
 8006ddc:	f043 0220 	orr.w	r2, r3, #32
 8006de0:	697b      	ldr	r3, [r7, #20]
 8006de2:	655a      	str	r2, [r3, #84]	@ 0x54
    }

    /* Clear overrun flag in 2 Lines communication mode because received data is not read */
    if (hspi->Init.Direction == SPI_DIRECTION_2LINES)
 8006de4:	697b      	ldr	r3, [r7, #20]
 8006de6:	689b      	ldr	r3, [r3, #8]
 8006de8:	2b00      	cmp	r3, #0
 8006dea:	d10a      	bne.n	8006e02 <SPI_DMATransmitCplt+0x7e>
    {
      __HAL_SPI_CLEAR_OVRFLAG(hspi);
 8006dec:	2300      	movs	r3, #0
 8006dee:	60fb      	str	r3, [r7, #12]
 8006df0:	697b      	ldr	r3, [r7, #20]
 8006df2:	681b      	ldr	r3, [r3, #0]
 8006df4:	68db      	ldr	r3, [r3, #12]
 8006df6:	60fb      	str	r3, [r7, #12]
 8006df8:	697b      	ldr	r3, [r7, #20]
 8006dfa:	681b      	ldr	r3, [r3, #0]
 8006dfc:	689b      	ldr	r3, [r3, #8]
 8006dfe:	60fb      	str	r3, [r7, #12]
 8006e00:	68fb      	ldr	r3, [r7, #12]
    }

    hspi->TxXferCount = 0U;
 8006e02:	697b      	ldr	r3, [r7, #20]
 8006e04:	2200      	movs	r2, #0
 8006e06:	86da      	strh	r2, [r3, #54]	@ 0x36
    hspi->State = HAL_SPI_STATE_READY;
 8006e08:	697b      	ldr	r3, [r7, #20]
 8006e0a:	2201      	movs	r2, #1
 8006e0c:	f883 2051 	strb.w	r2, [r3, #81]	@ 0x51

    if (hspi->ErrorCode != HAL_SPI_ERROR_NONE)
 8006e10:	697b      	ldr	r3, [r7, #20]
 8006e12:	6d5b      	ldr	r3, [r3, #84]	@ 0x54
 8006e14:	2b00      	cmp	r3, #0
 8006e16:	d003      	beq.n	8006e20 <SPI_DMATransmitCplt+0x9c>
    {
      /* Call user error callback */
#if (USE_HAL_SPI_REGISTER_CALLBACKS == 1U)
      hspi->ErrorCallback(hspi);
#else
      HAL_SPI_ErrorCallback(hspi);
 8006e18:	6978      	ldr	r0, [r7, #20]
 8006e1a:	f7fb fa33 	bl	8002284 <HAL_SPI_ErrorCallback>
#endif /* USE_HAL_SPI_REGISTER_CALLBACKS */
      return;
 8006e1e:	e002      	b.n	8006e26 <SPI_DMATransmitCplt+0xa2>
  }
  /* Call user Tx complete callback */
#if (USE_HAL_SPI_REGISTER_CALLBACKS == 1U)
  hspi->TxCpltCallback(hspi);
#else
  HAL_SPI_TxCpltCallback(hspi);
 8006e20:	6978      	ldr	r0, [r7, #20]
 8006e22:	f7fb fa45 	bl	80022b0 <HAL_SPI_TxCpltCallback>
#endif /* USE_HAL_SPI_REGISTER_CALLBACKS */
}
 8006e26:	3718      	adds	r7, #24
 8006e28:	46bd      	mov	sp, r7
 8006e2a:	bd80      	pop	{r7, pc}

08006e2c <SPI_DMAHalfTransmitCplt>:
  * @param  hdma pointer to a DMA_HandleTypeDef structure that contains
  *               the configuration information for the specified DMA module.
  * @retval None
  */
static void SPI_DMAHalfTransmitCplt(DMA_HandleTypeDef *hdma)
{
 8006e2c:	b580      	push	{r7, lr}
 8006e2e:	b084      	sub	sp, #16
 8006e30:	af00      	add	r7, sp, #0
 8006e32:	6078      	str	r0, [r7, #4]
  SPI_HandleTypeDef *hspi = (SPI_HandleTypeDef *)(((DMA_HandleTypeDef *)hdma)->Parent); /* Derogation MISRAC2012-Rule-11.5 */
 8006e34:	687b      	ldr	r3, [r7, #4]
 8006e36:	6b9b      	ldr	r3, [r3, #56]	@ 0x38
 8006e38:	60fb      	str	r3, [r7, #12]

  /* Call user Tx half complete callback */
#if (USE_HAL_SPI_REGISTER_CALLBACKS == 1U)
  hspi->TxHalfCpltCallback(hspi);
#else
  HAL_SPI_TxHalfCpltCallback(hspi);
 8006e3a:	68f8      	ldr	r0, [r7, #12]
 8006e3c:	f7ff ff98 	bl	8006d70 <HAL_SPI_TxHalfCpltCallback>
#endif /* USE_HAL_SPI_REGISTER_CALLBACKS */
}
 8006e40:	bf00      	nop
 8006e42:	3710      	adds	r7, #16
 8006e44:	46bd      	mov	sp, r7
 8006e46:	bd80      	pop	{r7, pc}

08006e48 <SPI_DMAError>:
  * @param  hdma pointer to a DMA_HandleTypeDef structure that contains
  *               the configuration information for the specified DMA module.
  * @retval None
  */
static void SPI_DMAError(DMA_HandleTypeDef *hdma)
{
 8006e48:	b580      	push	{r7, lr}
 8006e4a:	b084      	sub	sp, #16
 8006e4c:	af00      	add	r7, sp, #0
 8006e4e:	6078      	str	r0, [r7, #4]
  SPI_HandleTypeDef *hspi = (SPI_HandleTypeDef *)(((DMA_HandleTypeDef *)hdma)->Parent); /* Derogation MISRAC2012-Rule-11.5 */
 8006e50:	687b      	ldr	r3, [r7, #4]
 8006e52:	6b9b      	ldr	r3, [r3, #56]	@ 0x38
 8006e54:	60fb      	str	r3, [r7, #12]

  /* Stop the disable DMA transfer on SPI side */
  CLEAR_BIT(hspi->Instance->CR2, SPI_CR2_TXDMAEN | SPI_CR2_RXDMAEN);
 8006e56:	68fb      	ldr	r3, [r7, #12]
 8006e58:	681b      	ldr	r3, [r3, #0]
 8006e5a:	685a      	ldr	r2, [r3, #4]
 8006e5c:	68fb      	ldr	r3, [r7, #12]
 8006e5e:	681b      	ldr	r3, [r3, #0]
 8006e60:	f022 0203 	bic.w	r2, r2, #3
 8006e64:	605a      	str	r2, [r3, #4]

  SET_BIT(hspi->ErrorCode, HAL_SPI_ERROR_DMA);
 8006e66:	68fb      	ldr	r3, [r7, #12]
 8006e68:	6d5b      	ldr	r3, [r3, #84]	@ 0x54
 8006e6a:	f043 0210 	orr.w	r2, r3, #16
 8006e6e:	68fb      	ldr	r3, [r7, #12]
 8006e70:	655a      	str	r2, [r3, #84]	@ 0x54
  hspi->State = HAL_SPI_STATE_READY;
 8006e72:	68fb      	ldr	r3, [r7, #12]
 8006e74:	2201      	movs	r2, #1
 8006e76:	f883 2051 	strb.w	r2, [r3, #81]	@ 0x51
  /* Call user error callback */
#if (USE_HAL_SPI_REGISTER_CALLBACKS == 1U)
  hspi->ErrorCallback(hspi);
#else
  HAL_SPI_ErrorCallback(hspi);
 8006e7a:	68f8      	ldr	r0, [r7, #12]
 8006e7c:	f7fb fa02 	bl	8002284 <HAL_SPI_ErrorCallback>
#endif /* USE_HAL_SPI_REGISTER_CALLBACKS */
}
 8006e80:	bf00      	nop
 8006e82:	3710      	adds	r7, #16
 8006e84:	46bd      	mov	sp, r7
 8006e86:	bd80      	pop	{r7, pc}

08006e88 <SPI_DMAAbortOnError>:
  *         (To be called at end of DMA Abort procedure following error occurrence).
  * @param  hdma DMA handle.
  * @retval None
  */
static void SPI_DMAAbortOnError(DMA_HandleTypeDef *hdma)
{
 8006e88:	b580      	push	{r7, lr}
 8006e8a:	b084      	sub	sp, #16
 8006e8c:	af00      	add	r7, sp, #0
 8006e8e:	6078      	str	r0, [r7, #4]
  SPI_HandleTypeDef *hspi = (SPI_HandleTypeDef *)(((DMA_HandleTypeDef *)hdma)->Parent); /* Derogation MISRAC2012-Rule-11.5 */
 8006e90:	687b      	ldr	r3, [r7, #4]
 8006e92:	6b9b      	ldr	r3, [r3, #56]	@ 0x38
 8006e94:	60fb      	str	r3, [r7, #12]
  hspi->RxXferCount = 0U;
 8006e96:	68fb      	ldr	r3, [r7, #12]
 8006e98:	2200      	movs	r2, #0
 8006e9a:	87da      	strh	r2, [r3, #62]	@ 0x3e
  hspi->TxXferCount = 0U;
 8006e9c:	68fb      	ldr	r3, [r7, #12]
 8006e9e:	2200      	movs	r2, #0
 8006ea0:	86da      	strh	r2, [r3, #54]	@ 0x36

  /* Call user error callback */
#if (USE_HAL_SPI_REGISTER_CALLBACKS == 1U)
  hspi->ErrorCallback(hspi);
#else
  HAL_SPI_ErrorCallback(hspi);
 8006ea2:	68f8      	ldr	r0, [r7, #12]
 8006ea4:	f7fb f9ee 	bl	8002284 <HAL_SPI_ErrorCallback>
#endif /* USE_HAL_SPI_REGISTER_CALLBACKS */
}
 8006ea8:	bf00      	nop
 8006eaa:	3710      	adds	r7, #16
 8006eac:	46bd      	mov	sp, r7
 8006eae:	bd80      	pop	{r7, pc}

08006eb0 <SPI_WaitFlagStateUntilTimeout>:
  * @param  Tickstart tick start value
  * @retval HAL status
  */
static HAL_StatusTypeDef SPI_WaitFlagStateUntilTimeout(SPI_HandleTypeDef *hspi, uint32_t Flag, FlagStatus State,
                                                       uint32_t Timeout, uint32_t Tickstart)
{
 8006eb0:	b580      	push	{r7, lr}
 8006eb2:	b088      	sub	sp, #32
 8006eb4:	af00      	add	r7, sp, #0
 8006eb6:	60f8      	str	r0, [r7, #12]
 8006eb8:	60b9      	str	r1, [r7, #8]
 8006eba:	603b      	str	r3, [r7, #0]
 8006ebc:	4613      	mov	r3, r2
 8006ebe:	71fb      	strb	r3, [r7, #7]
  __IO uint32_t count;
  uint32_t tmp_timeout;
  uint32_t tmp_tickstart;

  /* Adjust Timeout value  in case of end of transfer */
  tmp_timeout   = Timeout - (HAL_GetTick() - Tickstart);
 8006ec0:	f7fb fd48 	bl	8002954 <HAL_GetTick>
 8006ec4:	4602      	mov	r2, r0
 8006ec6:	6abb      	ldr	r3, [r7, #40]	@ 0x28
 8006ec8:	1a9b      	subs	r3, r3, r2
 8006eca:	683a      	ldr	r2, [r7, #0]
 8006ecc:	4413      	add	r3, r2
 8006ece:	61fb      	str	r3, [r7, #28]
  tmp_tickstart = HAL_GetTick();
 8006ed0:	f7fb fd40 	bl	8002954 <HAL_GetTick>
 8006ed4:	61b8      	str	r0, [r7, #24]

  /* Calculate Timeout based on a software loop to avoid blocking issue if Systick is disabled */
  count = tmp_timeout * ((SystemCoreClock * 32U) >> 20U);
 8006ed6:	4b39      	ldr	r3, [pc, #228]	@ (8006fbc <SPI_WaitFlagStateUntilTimeout+0x10c>)
 8006ed8:	681b      	ldr	r3, [r3, #0]
 8006eda:	015b      	lsls	r3, r3, #5
 8006edc:	0d1b      	lsrs	r3, r3, #20
 8006ede:	69fa      	ldr	r2, [r7, #28]
 8006ee0:	fb02 f303 	mul.w	r3, r2, r3
 8006ee4:	617b      	str	r3, [r7, #20]

  while ((__HAL_SPI_GET_FLAG(hspi, Flag) ? SET : RESET) != State)
 8006ee6:	e054      	b.n	8006f92 <SPI_WaitFlagStateUntilTimeout+0xe2>
  {
    if (Timeout != HAL_MAX_DELAY)
 8006ee8:	683b      	ldr	r3, [r7, #0]
 8006eea:	f1b3 3fff 	cmp.w	r3, #4294967295
 8006eee:	d050      	beq.n	8006f92 <SPI_WaitFlagStateUntilTimeout+0xe2>
    {
      if (((HAL_GetTick() - tmp_tickstart) >= tmp_timeout) || (tmp_timeout == 0U))
 8006ef0:	f7fb fd30 	bl	8002954 <HAL_GetTick>
 8006ef4:	4602      	mov	r2, r0
 8006ef6:	69bb      	ldr	r3, [r7, #24]
 8006ef8:	1ad3      	subs	r3, r2, r3
 8006efa:	69fa      	ldr	r2, [r7, #28]
 8006efc:	429a      	cmp	r2, r3
 8006efe:	d902      	bls.n	8006f06 <SPI_WaitFlagStateUntilTimeout+0x56>
 8006f00:	69fb      	ldr	r3, [r7, #28]
 8006f02:	2b00      	cmp	r3, #0
 8006f04:	d13d      	bne.n	8006f82 <SPI_WaitFlagStateUntilTimeout+0xd2>
        /* Disable the SPI and reset the CRC: the CRC value should be cleared
           on both master and slave sides in order to resynchronize the master
           and slave for their respective CRC calculation */

        /* Disable TXE, RXNE and ERR interrupts for the interrupt process */
        __HAL_SPI_DISABLE_IT(hspi, (SPI_IT_TXE | SPI_IT_RXNE | SPI_IT_ERR));
 8006f06:	68fb      	ldr	r3, [r7, #12]
 8006f08:	681b      	ldr	r3, [r3, #0]
 8006f0a:	685a      	ldr	r2, [r3, #4]
 8006f0c:	68fb      	ldr	r3, [r7, #12]
 8006f0e:	681b      	ldr	r3, [r3, #0]
 8006f10:	f022 02e0 	bic.w	r2, r2, #224	@ 0xe0
 8006f14:	605a      	str	r2, [r3, #4]

        if ((hspi->Init.Mode == SPI_MODE_MASTER) && ((hspi->Init.Direction == SPI_DIRECTION_1LINE)
 8006f16:	68fb      	ldr	r3, [r7, #12]
 8006f18:	685b      	ldr	r3, [r3, #4]
 8006f1a:	f5b3 7f82 	cmp.w	r3, #260	@ 0x104
 8006f1e:	d111      	bne.n	8006f44 <SPI_WaitFlagStateUntilTimeout+0x94>
 8006f20:	68fb      	ldr	r3, [r7, #12]
 8006f22:	689b      	ldr	r3, [r3, #8]
 8006f24:	f5b3 4f00 	cmp.w	r3, #32768	@ 0x8000
 8006f28:	d004      	beq.n	8006f34 <SPI_WaitFlagStateUntilTimeout+0x84>
                                                     || (hspi->Init.Direction == SPI_DIRECTION_2LINES_RXONLY)))
 8006f2a:	68fb      	ldr	r3, [r7, #12]
 8006f2c:	689b      	ldr	r3, [r3, #8]
 8006f2e:	f5b3 6f80 	cmp.w	r3, #1024	@ 0x400
 8006f32:	d107      	bne.n	8006f44 <SPI_WaitFlagStateUntilTimeout+0x94>
        {
          /* Disable SPI peripheral */
          __HAL_SPI_DISABLE(hspi);
 8006f34:	68fb      	ldr	r3, [r7, #12]
 8006f36:	681b      	ldr	r3, [r3, #0]
 8006f38:	681a      	ldr	r2, [r3, #0]
 8006f3a:	68fb      	ldr	r3, [r7, #12]
 8006f3c:	681b      	ldr	r3, [r3, #0]
 8006f3e:	f022 0240 	bic.w	r2, r2, #64	@ 0x40
 8006f42:	601a      	str	r2, [r3, #0]
        }

        /* Reset CRC Calculation */
        if (hspi->Init.CRCCalculation == SPI_CRCCALCULATION_ENABLE)
 8006f44:	68fb      	ldr	r3, [r7, #12]
 8006f46:	6a9b      	ldr	r3, [r3, #40]	@ 0x28
 8006f48:	f5b3 5f00 	cmp.w	r3, #8192	@ 0x2000
 8006f4c:	d10f      	bne.n	8006f6e <SPI_WaitFlagStateUntilTimeout+0xbe>
        {
          SPI_RESET_CRC(hspi);
 8006f4e:	68fb      	ldr	r3, [r7, #12]
 8006f50:	681b      	ldr	r3, [r3, #0]
 8006f52:	681a      	ldr	r2, [r3, #0]
 8006f54:	68fb      	ldr	r3, [r7, #12]
 8006f56:	681b      	ldr	r3, [r3, #0]
 8006f58:	f422 5200 	bic.w	r2, r2, #8192	@ 0x2000
 8006f5c:	601a      	str	r2, [r3, #0]
 8006f5e:	68fb      	ldr	r3, [r7, #12]
 8006f60:	681b      	ldr	r3, [r3, #0]
 8006f62:	681a      	ldr	r2, [r3, #0]
 8006f64:	68fb      	ldr	r3, [r7, #12]
 8006f66:	681b      	ldr	r3, [r3, #0]
 8006f68:	f442 5200 	orr.w	r2, r2, #8192	@ 0x2000
 8006f6c:	601a      	str	r2, [r3, #0]
        }

        hspi->State = HAL_SPI_STATE_READY;
 8006f6e:	68fb      	ldr	r3, [r7, #12]
 8006f70:	2201      	movs	r2, #1
 8006f72:	f883 2051 	strb.w	r2, [r3, #81]	@ 0x51

        /* Process Unlocked */
        __HAL_UNLOCK(hspi);
 8006f76:	68fb      	ldr	r3, [r7, #12]
 8006f78:	2200      	movs	r2, #0
 8006f7a:	f883 2050 	strb.w	r2, [r3, #80]	@ 0x50

        return HAL_TIMEOUT;
 8006f7e:	2303      	movs	r3, #3
 8006f80:	e017      	b.n	8006fb2 <SPI_WaitFlagStateUntilTimeout+0x102>
      }
      /* If Systick is disabled or not incremented, deactivate timeout to go in disable loop procedure */
      if (count == 0U)
 8006f82:	697b      	ldr	r3, [r7, #20]
 8006f84:	2b00      	cmp	r3, #0
 8006f86:	d101      	bne.n	8006f8c <SPI_WaitFlagStateUntilTimeout+0xdc>
      {
        tmp_timeout = 0U;
 8006f88:	2300      	movs	r3, #0
 8006f8a:	61fb      	str	r3, [r7, #28]
      }
      count--;
 8006f8c:	697b      	ldr	r3, [r7, #20]
 8006f8e:	3b01      	subs	r3, #1
 8006f90:	617b      	str	r3, [r7, #20]
  while ((__HAL_SPI_GET_FLAG(hspi, Flag) ? SET : RESET) != State)
 8006f92:	68fb      	ldr	r3, [r7, #12]
 8006f94:	681b      	ldr	r3, [r3, #0]
 8006f96:	689a      	ldr	r2, [r3, #8]
 8006f98:	68bb      	ldr	r3, [r7, #8]
 8006f9a:	4013      	ands	r3, r2
 8006f9c:	68ba      	ldr	r2, [r7, #8]
 8006f9e:	429a      	cmp	r2, r3
 8006fa0:	bf0c      	ite	eq
 8006fa2:	2301      	moveq	r3, #1
 8006fa4:	2300      	movne	r3, #0
 8006fa6:	b2db      	uxtb	r3, r3
 8006fa8:	461a      	mov	r2, r3
 8006faa:	79fb      	ldrb	r3, [r7, #7]
 8006fac:	429a      	cmp	r2, r3
 8006fae:	d19b      	bne.n	8006ee8 <SPI_WaitFlagStateUntilTimeout+0x38>
    }
  }

  return HAL_OK;
 8006fb0:	2300      	movs	r3, #0
}
 8006fb2:	4618      	mov	r0, r3
 8006fb4:	3720      	adds	r7, #32
 8006fb6:	46bd      	mov	sp, r7
 8006fb8:	bd80      	pop	{r7, pc}
 8006fba:	bf00      	nop
 8006fbc:	20000008 	.word	0x20000008

08006fc0 <SPI_EndRxTransaction>:
  * @param  Timeout Timeout duration
  * @param  Tickstart tick start value
  * @retval HAL status
  */
static HAL_StatusTypeDef SPI_EndRxTransaction(SPI_HandleTypeDef *hspi,  uint32_t Timeout, uint32_t Tickstart)
{
 8006fc0:	b580      	push	{r7, lr}
 8006fc2:	b086      	sub	sp, #24
 8006fc4:	af02      	add	r7, sp, #8
 8006fc6:	60f8      	str	r0, [r7, #12]
 8006fc8:	60b9      	str	r1, [r7, #8]
 8006fca:	607a      	str	r2, [r7, #4]
  if ((hspi->Init.Mode == SPI_MODE_MASTER) && ((hspi->Init.Direction == SPI_DIRECTION_1LINE)
 8006fcc:	68fb      	ldr	r3, [r7, #12]
 8006fce:	685b      	ldr	r3, [r3, #4]
 8006fd0:	f5b3 7f82 	cmp.w	r3, #260	@ 0x104
 8006fd4:	d111      	bne.n	8006ffa <SPI_EndRxTransaction+0x3a>
 8006fd6:	68fb      	ldr	r3, [r7, #12]
 8006fd8:	689b      	ldr	r3, [r3, #8]
 8006fda:	f5b3 4f00 	cmp.w	r3, #32768	@ 0x8000
 8006fde:	d004      	beq.n	8006fea <SPI_EndRxTransaction+0x2a>
                                               || (hspi->Init.Direction == SPI_DIRECTION_2LINES_RXONLY)))
 8006fe0:	68fb      	ldr	r3, [r7, #12]
 8006fe2:	689b      	ldr	r3, [r3, #8]
 8006fe4:	f5b3 6f80 	cmp.w	r3, #1024	@ 0x400
 8006fe8:	d107      	bne.n	8006ffa <SPI_EndRxTransaction+0x3a>
  {
    /* Disable SPI peripheral */
    __HAL_SPI_DISABLE(hspi);
 8006fea:	68fb      	ldr	r3, [r7, #12]
 8006fec:	681b      	ldr	r3, [r3, #0]
 8006fee:	681a      	ldr	r2, [r3, #0]
 8006ff0:	68fb      	ldr	r3, [r7, #12]
 8006ff2:	681b      	ldr	r3, [r3, #0]
 8006ff4:	f022 0240 	bic.w	r2, r2, #64	@ 0x40
 8006ff8:	601a      	str	r2, [r3, #0]
  }

  /* Erratasheet: BSY bit may stay high at the end of a data transfer in Slave mode */
  if (hspi->Init.Mode == SPI_MODE_MASTER)
 8006ffa:	68fb      	ldr	r3, [r7, #12]
 8006ffc:	685b      	ldr	r3, [r3, #4]
 8006ffe:	f5b3 7f82 	cmp.w	r3, #260	@ 0x104
 8007002:	d12a      	bne.n	800705a <SPI_EndRxTransaction+0x9a>
  {
    if (hspi->Init.Direction != SPI_DIRECTION_2LINES_RXONLY)
 8007004:	68fb      	ldr	r3, [r7, #12]
 8007006:	689b      	ldr	r3, [r3, #8]
 8007008:	f5b3 6f80 	cmp.w	r3, #1024	@ 0x400
 800700c:	d012      	beq.n	8007034 <SPI_EndRxTransaction+0x74>
    {
      /* Control the BSY flag */
      if (SPI_WaitFlagStateUntilTimeout(hspi, SPI_FLAG_BSY, RESET, Timeout, Tickstart) != HAL_OK)
 800700e:	687b      	ldr	r3, [r7, #4]
 8007010:	9300      	str	r3, [sp, #0]
 8007012:	68bb      	ldr	r3, [r7, #8]
 8007014:	2200      	movs	r2, #0
 8007016:	2180      	movs	r1, #128	@ 0x80
 8007018:	68f8      	ldr	r0, [r7, #12]
 800701a:	f7ff ff49 	bl	8006eb0 <SPI_WaitFlagStateUntilTimeout>
 800701e:	4603      	mov	r3, r0
 8007020:	2b00      	cmp	r3, #0
 8007022:	d02d      	beq.n	8007080 <SPI_EndRxTransaction+0xc0>
      {
        SET_BIT(hspi->ErrorCode, HAL_SPI_ERROR_FLAG);
 8007024:	68fb      	ldr	r3, [r7, #12]
 8007026:	6d5b      	ldr	r3, [r3, #84]	@ 0x54
 8007028:	f043 0220 	orr.w	r2, r3, #32
 800702c:	68fb      	ldr	r3, [r7, #12]
 800702e:	655a      	str	r2, [r3, #84]	@ 0x54
        return HAL_TIMEOUT;
 8007030:	2303      	movs	r3, #3
 8007032:	e026      	b.n	8007082 <SPI_EndRxTransaction+0xc2>
      }
    }
    else
    {
      /* Wait the RXNE reset */
      if (SPI_WaitFlagStateUntilTimeout(hspi, SPI_FLAG_RXNE, RESET, Timeout, Tickstart) != HAL_OK)
 8007034:	687b      	ldr	r3, [r7, #4]
 8007036:	9300      	str	r3, [sp, #0]
 8007038:	68bb      	ldr	r3, [r7, #8]
 800703a:	2200      	movs	r2, #0
 800703c:	2101      	movs	r1, #1
 800703e:	68f8      	ldr	r0, [r7, #12]
 8007040:	f7ff ff36 	bl	8006eb0 <SPI_WaitFlagStateUntilTimeout>
 8007044:	4603      	mov	r3, r0
 8007046:	2b00      	cmp	r3, #0
 8007048:	d01a      	beq.n	8007080 <SPI_EndRxTransaction+0xc0>
      {
        SET_BIT(hspi->ErrorCode, HAL_SPI_ERROR_FLAG);
 800704a:	68fb      	ldr	r3, [r7, #12]
 800704c:	6d5b      	ldr	r3, [r3, #84]	@ 0x54
 800704e:	f043 0220 	orr.w	r2, r3, #32
 8007052:	68fb      	ldr	r3, [r7, #12]
 8007054:	655a      	str	r2, [r3, #84]	@ 0x54
        return HAL_TIMEOUT;
 8007056:	2303      	movs	r3, #3
 8007058:	e013      	b.n	8007082 <SPI_EndRxTransaction+0xc2>
    }
  }
  else
  {
    /* Wait the RXNE reset */
    if (SPI_WaitFlagStateUntilTimeout(hspi, SPI_FLAG_RXNE, RESET, Timeout, Tickstart) != HAL_OK)
 800705a:	687b      	ldr	r3, [r7, #4]
 800705c:	9300      	str	r3, [sp, #0]
 800705e:	68bb      	ldr	r3, [r7, #8]
 8007060:	2200      	movs	r2, #0
 8007062:	2101      	movs	r1, #1
 8007064:	68f8      	ldr	r0, [r7, #12]
 8007066:	f7ff ff23 	bl	8006eb0 <SPI_WaitFlagStateUntilTimeout>
 800706a:	4603      	mov	r3, r0
 800706c:	2b00      	cmp	r3, #0
 800706e:	d007      	beq.n	8007080 <SPI_EndRxTransaction+0xc0>
    {
      SET_BIT(hspi->ErrorCode, HAL_SPI_ERROR_FLAG);
 8007070:	68fb      	ldr	r3, [r7, #12]
 8007072:	6d5b      	ldr	r3, [r3, #84]	@ 0x54
 8007074:	f043 0220 	orr.w	r2, r3, #32
 8007078:	68fb      	ldr	r3, [r7, #12]
 800707a:	655a      	str	r2, [r3, #84]	@ 0x54
      return HAL_TIMEOUT;
 800707c:	2303      	movs	r3, #3
 800707e:	e000      	b.n	8007082 <SPI_EndRxTransaction+0xc2>
    }
  }
  return HAL_OK;
 8007080:	2300      	movs	r3, #0
}
 8007082:	4618      	mov	r0, r3
 8007084:	3710      	adds	r7, #16
 8007086:	46bd      	mov	sp, r7
 8007088:	bd80      	pop	{r7, pc}
	...

0800708c <SPI_EndRxTxTransaction>:
  * @param  Timeout Timeout duration
  * @param  Tickstart tick start value
  * @retval HAL status
  */
static HAL_StatusTypeDef SPI_EndRxTxTransaction(SPI_HandleTypeDef *hspi, uint32_t Timeout, uint32_t Tickstart)
{
 800708c:	b580      	push	{r7, lr}
 800708e:	b088      	sub	sp, #32
 8007090:	af02      	add	r7, sp, #8
 8007092:	60f8      	str	r0, [r7, #12]
 8007094:	60b9      	str	r1, [r7, #8]
 8007096:	607a      	str	r2, [r7, #4]
  /* Wait until TXE flag */
  if(SPI_WaitFlagStateUntilTimeout(hspi, SPI_FLAG_TXE, SET, Timeout, Tickstart) != HAL_OK)
 8007098:	687b      	ldr	r3, [r7, #4]
 800709a:	9300      	str	r3, [sp, #0]
 800709c:	68bb      	ldr	r3, [r7, #8]
 800709e:	2201      	movs	r2, #1
 80070a0:	2102      	movs	r1, #2
 80070a2:	68f8      	ldr	r0, [r7, #12]
 80070a4:	f7ff ff04 	bl	8006eb0 <SPI_WaitFlagStateUntilTimeout>
 80070a8:	4603      	mov	r3, r0
 80070aa:	2b00      	cmp	r3, #0
 80070ac:	d007      	beq.n	80070be <SPI_EndRxTxTransaction+0x32>
  {
    SET_BIT(hspi->ErrorCode, HAL_SPI_ERROR_FLAG);
 80070ae:	68fb      	ldr	r3, [r7, #12]
 80070b0:	6d5b      	ldr	r3, [r3, #84]	@ 0x54
 80070b2:	f043 0220 	orr.w	r2, r3, #32
 80070b6:	68fb      	ldr	r3, [r7, #12]
 80070b8:	655a      	str	r2, [r3, #84]	@ 0x54
    return HAL_TIMEOUT;
 80070ba:	2303      	movs	r3, #3
 80070bc:	e032      	b.n	8007124 <SPI_EndRxTxTransaction+0x98>
  }

  /* Timeout in µs */
  __IO uint32_t count = SPI_BSY_FLAG_WORKAROUND_TIMEOUT * (SystemCoreClock / 24U / 1000000U);
 80070be:	4b1b      	ldr	r3, [pc, #108]	@ (800712c <SPI_EndRxTxTransaction+0xa0>)
 80070c0:	681b      	ldr	r3, [r3, #0]
 80070c2:	4a1b      	ldr	r2, [pc, #108]	@ (8007130 <SPI_EndRxTxTransaction+0xa4>)
 80070c4:	fba2 2303 	umull	r2, r3, r2, r3
 80070c8:	0d5b      	lsrs	r3, r3, #21
 80070ca:	f44f 727a 	mov.w	r2, #1000	@ 0x3e8
 80070ce:	fb02 f303 	mul.w	r3, r2, r3
 80070d2:	617b      	str	r3, [r7, #20]
  /* Erratasheet: BSY bit may stay high at the end of a data transfer in Slave mode */
  if (hspi->Init.Mode == SPI_MODE_MASTER)
 80070d4:	68fb      	ldr	r3, [r7, #12]
 80070d6:	685b      	ldr	r3, [r3, #4]
 80070d8:	f5b3 7f82 	cmp.w	r3, #260	@ 0x104
 80070dc:	d112      	bne.n	8007104 <SPI_EndRxTxTransaction+0x78>
  {
    /* Control the BSY flag */
    if (SPI_WaitFlagStateUntilTimeout(hspi, SPI_FLAG_BSY, RESET, Timeout, Tickstart) != HAL_OK)
 80070de:	687b      	ldr	r3, [r7, #4]
 80070e0:	9300      	str	r3, [sp, #0]
 80070e2:	68bb      	ldr	r3, [r7, #8]
 80070e4:	2200      	movs	r2, #0
 80070e6:	2180      	movs	r1, #128	@ 0x80
 80070e8:	68f8      	ldr	r0, [r7, #12]
 80070ea:	f7ff fee1 	bl	8006eb0 <SPI_WaitFlagStateUntilTimeout>
 80070ee:	4603      	mov	r3, r0
 80070f0:	2b00      	cmp	r3, #0
 80070f2:	d016      	beq.n	8007122 <SPI_EndRxTxTransaction+0x96>
    {
      SET_BIT(hspi->ErrorCode, HAL_SPI_ERROR_FLAG);
 80070f4:	68fb      	ldr	r3, [r7, #12]
 80070f6:	6d5b      	ldr	r3, [r3, #84]	@ 0x54
 80070f8:	f043 0220 	orr.w	r2, r3, #32
 80070fc:	68fb      	ldr	r3, [r7, #12]
 80070fe:	655a      	str	r2, [r3, #84]	@ 0x54
      return HAL_TIMEOUT;
 8007100:	2303      	movs	r3, #3
 8007102:	e00f      	b.n	8007124 <SPI_EndRxTxTransaction+0x98>
    * User have to calculate the timeout value to fit with the time of 1 byte transfer.
    * This time is directly link with the SPI clock from Master device.
    */
    do
    {
      if (count == 0U)
 8007104:	697b      	ldr	r3, [r7, #20]
 8007106:	2b00      	cmp	r3, #0
 8007108:	d00a      	beq.n	8007120 <SPI_EndRxTxTransaction+0x94>
      {
        break;
      }
      count--;
 800710a:	697b      	ldr	r3, [r7, #20]
 800710c:	3b01      	subs	r3, #1
 800710e:	617b      	str	r3, [r7, #20]
    } while (__HAL_SPI_GET_FLAG(hspi, SPI_FLAG_BSY) != RESET);
 8007110:	68fb      	ldr	r3, [r7, #12]
 8007112:	681b      	ldr	r3, [r3, #0]
 8007114:	689b      	ldr	r3, [r3, #8]
 8007116:	f003 0380 	and.w	r3, r3, #128	@ 0x80
 800711a:	2b80      	cmp	r3, #128	@ 0x80
 800711c:	d0f2      	beq.n	8007104 <SPI_EndRxTxTransaction+0x78>
 800711e:	e000      	b.n	8007122 <SPI_EndRxTxTransaction+0x96>
        break;
 8007120:	bf00      	nop
  }

  return HAL_OK;
 8007122:	2300      	movs	r3, #0
}
 8007124:	4618      	mov	r0, r3
 8007126:	3718      	adds	r7, #24
 8007128:	46bd      	mov	sp, r7
 800712a:	bd80      	pop	{r7, pc}
 800712c:	20000008 	.word	0x20000008
 8007130:	165e9f81 	.word	0x165e9f81

08007134 <HAL_TIM_Base_Init>:
  *         Ex: call @ref HAL_TIM_Base_DeInit() before HAL_TIM_Base_Init()
  * @param  htim TIM Base handle
  * @retval HAL status
  */
HAL_StatusTypeDef HAL_TIM_Base_Init(TIM_HandleTypeDef *htim)
{
 8007134:	b580      	push	{r7, lr}
 8007136:	b082      	sub	sp, #8
 8007138:	af00      	add	r7, sp, #0
 800713a:	6078      	str	r0, [r7, #4]
  /* Check the TIM handle allocation */
  if (htim == NULL)
 800713c:	687b      	ldr	r3, [r7, #4]
 800713e:	2b00      	cmp	r3, #0
 8007140:	d101      	bne.n	8007146 <HAL_TIM_Base_Init+0x12>
  {
    return HAL_ERROR;
 8007142:	2301      	movs	r3, #1
 8007144:	e041      	b.n	80071ca <HAL_TIM_Base_Init+0x96>
  assert_param(IS_TIM_COUNTER_MODE(htim->Init.CounterMode));
  assert_param(IS_TIM_CLOCKDIVISION_DIV(htim->Init.ClockDivision));
  assert_param(IS_TIM_PERIOD(htim, htim->Init.Period));
  assert_param(IS_TIM_AUTORELOAD_PRELOAD(htim->Init.AutoReloadPreload));

  if (htim->State == HAL_TIM_STATE_RESET)
 8007146:	687b      	ldr	r3, [r7, #4]
 8007148:	f893 303d 	ldrb.w	r3, [r3, #61]	@ 0x3d
 800714c:	b2db      	uxtb	r3, r3
 800714e:	2b00      	cmp	r3, #0
 8007150:	d106      	bne.n	8007160 <HAL_TIM_Base_Init+0x2c>
  {
    /* Allocate lock resource and initialize it */
    htim->Lock = HAL_UNLOCKED;
 8007152:	687b      	ldr	r3, [r7, #4]
 8007154:	2200      	movs	r2, #0
 8007156:	f883 203c 	strb.w	r2, [r3, #60]	@ 0x3c
    }
    /* Init the low level hardware : GPIO, CLOCK, NVIC */
    htim->Base_MspInitCallback(htim);
#else
    /* Init the low level hardware : GPIO, CLOCK, NVIC */
    HAL_TIM_Base_MspInit(htim);
 800715a:	6878      	ldr	r0, [r7, #4]
 800715c:	f7fa fd02 	bl	8001b64 <HAL_TIM_Base_MspInit>
#endif /* USE_HAL_TIM_REGISTER_CALLBACKS */
  }

  /* Set the TIM state */
  htim->State = HAL_TIM_STATE_BUSY;
 8007160:	687b      	ldr	r3, [r7, #4]
 8007162:	2202      	movs	r2, #2
 8007164:	f883 203d 	strb.w	r2, [r3, #61]	@ 0x3d

  /* Set the Time Base configuration */
  TIM_Base_SetConfig(htim->Instance, &htim->Init);
 8007168:	687b      	ldr	r3, [r7, #4]
 800716a:	681a      	ldr	r2, [r3, #0]
 800716c:	687b      	ldr	r3, [r7, #4]
 800716e:	3304      	adds	r3, #4
 8007170:	4619      	mov	r1, r3
 8007172:	4610      	mov	r0, r2
 8007174:	f000 fc62 	bl	8007a3c <TIM_Base_SetConfig>

  /* Initialize the DMA burst operation state */
  htim->DMABurstState = HAL_DMA_BURST_STATE_READY;
 8007178:	687b      	ldr	r3, [r7, #4]
 800717a:	2201      	movs	r2, #1
 800717c:	f883 2046 	strb.w	r2, [r3, #70]	@ 0x46

  /* Initialize the TIM channels state */
  TIM_CHANNEL_STATE_SET_ALL(htim, HAL_TIM_CHANNEL_STATE_READY);
 8007180:	687b      	ldr	r3, [r7, #4]
 8007182:	2201      	movs	r2, #1
 8007184:	f883 203e 	strb.w	r2, [r3, #62]	@ 0x3e
 8007188:	687b      	ldr	r3, [r7, #4]
 800718a:	2201      	movs	r2, #1
 800718c:	f883 203f 	strb.w	r2, [r3, #63]	@ 0x3f
 8007190:	687b      	ldr	r3, [r7, #4]
 8007192:	2201      	movs	r2, #1
 8007194:	f883 2040 	strb.w	r2, [r3, #64]	@ 0x40
 8007198:	687b      	ldr	r3, [r7, #4]
 800719a:	2201      	movs	r2, #1
 800719c:	f883 2041 	strb.w	r2, [r3, #65]	@ 0x41
  TIM_CHANNEL_N_STATE_SET_ALL(htim, HAL_TIM_CHANNEL_STATE_READY);
 80071a0:	687b      	ldr	r3, [r7, #4]
 80071a2:	2201      	movs	r2, #1
 80071a4:	f883 2042 	strb.w	r2, [r3, #66]	@ 0x42
 80071a8:	687b      	ldr	r3, [r7, #4]
 80071aa:	2201      	movs	r2, #1
 80071ac:	f883 2043 	strb.w	r2, [r3, #67]	@ 0x43
 80071b0:	687b      	ldr	r3, [r7, #4]
 80071b2:	2201      	movs	r2, #1
 80071b4:	f883 2044 	strb.w	r2, [r3, #68]	@ 0x44
 80071b8:	687b      	ldr	r3, [r7, #4]
 80071ba:	2201      	movs	r2, #1
 80071bc:	f883 2045 	strb.w	r2, [r3, #69]	@ 0x45

  /* Initialize the TIM state*/
  htim->State = HAL_TIM_STATE_READY;
 80071c0:	687b      	ldr	r3, [r7, #4]
 80071c2:	2201      	movs	r2, #1
 80071c4:	f883 203d 	strb.w	r2, [r3, #61]	@ 0x3d

  return HAL_OK;
 80071c8:	2300      	movs	r3, #0
}
 80071ca:	4618      	mov	r0, r3
 80071cc:	3708      	adds	r7, #8
 80071ce:	46bd      	mov	sp, r7
 80071d0:	bd80      	pop	{r7, pc}
	...

080071d4 <HAL_TIM_Base_Start_IT>:
  * @brief  Starts the TIM Base generation in interrupt mode.
  * @param  htim TIM Base handle
  * @retval HAL status
  */
HAL_StatusTypeDef HAL_TIM_Base_Start_IT(TIM_HandleTypeDef *htim)
{
 80071d4:	b480      	push	{r7}
 80071d6:	b085      	sub	sp, #20
 80071d8:	af00      	add	r7, sp, #0
 80071da:	6078      	str	r0, [r7, #4]

  /* Check the parameters */
  assert_param(IS_TIM_INSTANCE(htim->Instance));

  /* Check the TIM state */
  if (htim->State != HAL_TIM_STATE_READY)
 80071dc:	687b      	ldr	r3, [r7, #4]
 80071de:	f893 303d 	ldrb.w	r3, [r3, #61]	@ 0x3d
 80071e2:	b2db      	uxtb	r3, r3
 80071e4:	2b01      	cmp	r3, #1
 80071e6:	d001      	beq.n	80071ec <HAL_TIM_Base_Start_IT+0x18>
  {
    return HAL_ERROR;
 80071e8:	2301      	movs	r3, #1
 80071ea:	e04e      	b.n	800728a <HAL_TIM_Base_Start_IT+0xb6>
  }

  /* Set the TIM state */
  htim->State = HAL_TIM_STATE_BUSY;
 80071ec:	687b      	ldr	r3, [r7, #4]
 80071ee:	2202      	movs	r2, #2
 80071f0:	f883 203d 	strb.w	r2, [r3, #61]	@ 0x3d

  /* Enable the TIM Update interrupt */
  __HAL_TIM_ENABLE_IT(htim, TIM_IT_UPDATE);
 80071f4:	687b      	ldr	r3, [r7, #4]
 80071f6:	681b      	ldr	r3, [r3, #0]
 80071f8:	68da      	ldr	r2, [r3, #12]
 80071fa:	687b      	ldr	r3, [r7, #4]
 80071fc:	681b      	ldr	r3, [r3, #0]
 80071fe:	f042 0201 	orr.w	r2, r2, #1
 8007202:	60da      	str	r2, [r3, #12]

  /* Enable the Peripheral, except in trigger mode where enable is automatically done with trigger */
  if (IS_TIM_SLAVE_INSTANCE(htim->Instance))
 8007204:	687b      	ldr	r3, [r7, #4]
 8007206:	681b      	ldr	r3, [r3, #0]
 8007208:	4a23      	ldr	r2, [pc, #140]	@ (8007298 <HAL_TIM_Base_Start_IT+0xc4>)
 800720a:	4293      	cmp	r3, r2
 800720c:	d022      	beq.n	8007254 <HAL_TIM_Base_Start_IT+0x80>
 800720e:	687b      	ldr	r3, [r7, #4]
 8007210:	681b      	ldr	r3, [r3, #0]
 8007212:	f1b3 4f80 	cmp.w	r3, #1073741824	@ 0x40000000
 8007216:	d01d      	beq.n	8007254 <HAL_TIM_Base_Start_IT+0x80>
 8007218:	687b      	ldr	r3, [r7, #4]
 800721a:	681b      	ldr	r3, [r3, #0]
 800721c:	4a1f      	ldr	r2, [pc, #124]	@ (800729c <HAL_TIM_Base_Start_IT+0xc8>)
 800721e:	4293      	cmp	r3, r2
 8007220:	d018      	beq.n	8007254 <HAL_TIM_Base_Start_IT+0x80>
 8007222:	687b      	ldr	r3, [r7, #4]
 8007224:	681b      	ldr	r3, [r3, #0]
 8007226:	4a1e      	ldr	r2, [pc, #120]	@ (80072a0 <HAL_TIM_Base_Start_IT+0xcc>)
 8007228:	4293      	cmp	r3, r2
 800722a:	d013      	beq.n	8007254 <HAL_TIM_Base_Start_IT+0x80>
 800722c:	687b      	ldr	r3, [r7, #4]
 800722e:	681b      	ldr	r3, [r3, #0]
 8007230:	4a1c      	ldr	r2, [pc, #112]	@ (80072a4 <HAL_TIM_Base_Start_IT+0xd0>)
 8007232:	4293      	cmp	r3, r2
 8007234:	d00e      	beq.n	8007254 <HAL_TIM_Base_Start_IT+0x80>
 8007236:	687b      	ldr	r3, [r7, #4]
 8007238:	681b      	ldr	r3, [r3, #0]
 800723a:	4a1b      	ldr	r2, [pc, #108]	@ (80072a8 <HAL_TIM_Base_Start_IT+0xd4>)
 800723c:	4293      	cmp	r3, r2
 800723e:	d009      	beq.n	8007254 <HAL_TIM_Base_Start_IT+0x80>
 8007240:	687b      	ldr	r3, [r7, #4]
 8007242:	681b      	ldr	r3, [r3, #0]
 8007244:	4a19      	ldr	r2, [pc, #100]	@ (80072ac <HAL_TIM_Base_Start_IT+0xd8>)
 8007246:	4293      	cmp	r3, r2
 8007248:	d004      	beq.n	8007254 <HAL_TIM_Base_Start_IT+0x80>
 800724a:	687b      	ldr	r3, [r7, #4]
 800724c:	681b      	ldr	r3, [r3, #0]
 800724e:	4a18      	ldr	r2, [pc, #96]	@ (80072b0 <HAL_TIM_Base_Start_IT+0xdc>)
 8007250:	4293      	cmp	r3, r2
 8007252:	d111      	bne.n	8007278 <HAL_TIM_Base_Start_IT+0xa4>
  {
    tmpsmcr = htim->Instance->SMCR & TIM_SMCR_SMS;
 8007254:	687b      	ldr	r3, [r7, #4]
 8007256:	681b      	ldr	r3, [r3, #0]
 8007258:	689b      	ldr	r3, [r3, #8]
 800725a:	f003 0307 	and.w	r3, r3, #7
 800725e:	60fb      	str	r3, [r7, #12]
    if (!IS_TIM_SLAVEMODE_TRIGGER_ENABLED(tmpsmcr))
 8007260:	68fb      	ldr	r3, [r7, #12]
 8007262:	2b06      	cmp	r3, #6
 8007264:	d010      	beq.n	8007288 <HAL_TIM_Base_Start_IT+0xb4>
    {
      __HAL_TIM_ENABLE(htim);
 8007266:	687b      	ldr	r3, [r7, #4]
 8007268:	681b      	ldr	r3, [r3, #0]
 800726a:	681a      	ldr	r2, [r3, #0]
 800726c:	687b      	ldr	r3, [r7, #4]
 800726e:	681b      	ldr	r3, [r3, #0]
 8007270:	f042 0201 	orr.w	r2, r2, #1
 8007274:	601a      	str	r2, [r3, #0]
    if (!IS_TIM_SLAVEMODE_TRIGGER_ENABLED(tmpsmcr))
 8007276:	e007      	b.n	8007288 <HAL_TIM_Base_Start_IT+0xb4>
    }
  }
  else
  {
    __HAL_TIM_ENABLE(htim);
 8007278:	687b      	ldr	r3, [r7, #4]
 800727a:	681b      	ldr	r3, [r3, #0]
 800727c:	681a      	ldr	r2, [r3, #0]
 800727e:	687b      	ldr	r3, [r7, #4]
 8007280:	681b      	ldr	r3, [r3, #0]
 8007282:	f042 0201 	orr.w	r2, r2, #1
 8007286:	601a      	str	r2, [r3, #0]
  }

  /* Return function status */
  return HAL_OK;
 8007288:	2300      	movs	r3, #0
}
 800728a:	4618      	mov	r0, r3
 800728c:	3714      	adds	r7, #20
 800728e:	46bd      	mov	sp, r7
 8007290:	f85d 7b04 	ldr.w	r7, [sp], #4
 8007294:	4770      	bx	lr
 8007296:	bf00      	nop
 8007298:	40010000 	.word	0x40010000
 800729c:	40000400 	.word	0x40000400
 80072a0:	40000800 	.word	0x40000800
 80072a4:	40000c00 	.word	0x40000c00
 80072a8:	40010400 	.word	0x40010400
 80072ac:	40014000 	.word	0x40014000
 80072b0:	40001800 	.word	0x40001800

080072b4 <HAL_TIM_PWM_Init>:
  *         Ex: call @ref HAL_TIM_PWM_DeInit() before HAL_TIM_PWM_Init()
  * @param  htim TIM PWM handle
  * @retval HAL status
  */
HAL_StatusTypeDef HAL_TIM_PWM_Init(TIM_HandleTypeDef *htim)
{
 80072b4:	b580      	push	{r7, lr}
 80072b6:	b082      	sub	sp, #8
 80072b8:	af00      	add	r7, sp, #0
 80072ba:	6078      	str	r0, [r7, #4]
  /* Check the TIM handle allocation */
  if (htim == NULL)
 80072bc:	687b      	ldr	r3, [r7, #4]
 80072be:	2b00      	cmp	r3, #0
 80072c0:	d101      	bne.n	80072c6 <HAL_TIM_PWM_Init+0x12>
  {
    return HAL_ERROR;
 80072c2:	2301      	movs	r3, #1
 80072c4:	e041      	b.n	800734a <HAL_TIM_PWM_Init+0x96>
  assert_param(IS_TIM_COUNTER_MODE(htim->Init.CounterMode));
  assert_param(IS_TIM_CLOCKDIVISION_DIV(htim->Init.ClockDivision));
  assert_param(IS_TIM_PERIOD(htim, htim->Init.Period));
  assert_param(IS_TIM_AUTORELOAD_PRELOAD(htim->Init.AutoReloadPreload));

  if (htim->State == HAL_TIM_STATE_RESET)
 80072c6:	687b      	ldr	r3, [r7, #4]
 80072c8:	f893 303d 	ldrb.w	r3, [r3, #61]	@ 0x3d
 80072cc:	b2db      	uxtb	r3, r3
 80072ce:	2b00      	cmp	r3, #0
 80072d0:	d106      	bne.n	80072e0 <HAL_TIM_PWM_Init+0x2c>
  {
    /* Allocate lock resource and initialize it */
    htim->Lock = HAL_UNLOCKED;
 80072d2:	687b      	ldr	r3, [r7, #4]
 80072d4:	2200      	movs	r2, #0
 80072d6:	f883 203c 	strb.w	r2, [r3, #60]	@ 0x3c
    }
    /* Init the low level hardware : GPIO, CLOCK, NVIC */
    htim->PWM_MspInitCallback(htim);
#else
    /* Init the low level hardware : GPIO, CLOCK, NVIC and DMA */
    HAL_TIM_PWM_MspInit(htim);
 80072da:	6878      	ldr	r0, [r7, #4]
 80072dc:	f000 f839 	bl	8007352 <HAL_TIM_PWM_MspInit>
#endif /* USE_HAL_TIM_REGISTER_CALLBACKS */
  }

  /* Set the TIM state */
  htim->State = HAL_TIM_STATE_BUSY;
 80072e0:	687b      	ldr	r3, [r7, #4]
 80072e2:	2202      	movs	r2, #2
 80072e4:	f883 203d 	strb.w	r2, [r3, #61]	@ 0x3d

  /* Init the base time for the PWM */
  TIM_Base_SetConfig(htim->Instance, &htim->Init);
 80072e8:	687b      	ldr	r3, [r7, #4]
 80072ea:	681a      	ldr	r2, [r3, #0]
 80072ec:	687b      	ldr	r3, [r7, #4]
 80072ee:	3304      	adds	r3, #4
 80072f0:	4619      	mov	r1, r3
 80072f2:	4610      	mov	r0, r2
 80072f4:	f000 fba2 	bl	8007a3c <TIM_Base_SetConfig>

  /* Initialize the DMA burst operation state */
  htim->DMABurstState = HAL_DMA_BURST_STATE_READY;
 80072f8:	687b      	ldr	r3, [r7, #4]
 80072fa:	2201      	movs	r2, #1
 80072fc:	f883 2046 	strb.w	r2, [r3, #70]	@ 0x46

  /* Initialize the TIM channels state */
  TIM_CHANNEL_STATE_SET_ALL(htim, HAL_TIM_CHANNEL_STATE_READY);
 8007300:	687b      	ldr	r3, [r7, #4]
 8007302:	2201      	movs	r2, #1
 8007304:	f883 203e 	strb.w	r2, [r3, #62]	@ 0x3e
 8007308:	687b      	ldr	r3, [r7, #4]
 800730a:	2201      	movs	r2, #1
 800730c:	f883 203f 	strb.w	r2, [r3, #63]	@ 0x3f
 8007310:	687b      	ldr	r3, [r7, #4]
 8007312:	2201      	movs	r2, #1
 8007314:	f883 2040 	strb.w	r2, [r3, #64]	@ 0x40
 8007318:	687b      	ldr	r3, [r7, #4]
 800731a:	2201      	movs	r2, #1
 800731c:	f883 2041 	strb.w	r2, [r3, #65]	@ 0x41
  TIM_CHANNEL_N_STATE_SET_ALL(htim, HAL_TIM_CHANNEL_STATE_READY);
 8007320:	687b      	ldr	r3, [r7, #4]
 8007322:	2201      	movs	r2, #1
 8007324:	f883 2042 	strb.w	r2, [r3, #66]	@ 0x42
 8007328:	687b      	ldr	r3, [r7, #4]
 800732a:	2201      	movs	r2, #1
 800732c:	f883 2043 	strb.w	r2, [r3, #67]	@ 0x43
 8007330:	687b      	ldr	r3, [r7, #4]
 8007332:	2201      	movs	r2, #1
 8007334:	f883 2044 	strb.w	r2, [r3, #68]	@ 0x44
 8007338:	687b      	ldr	r3, [r7, #4]
 800733a:	2201      	movs	r2, #1
 800733c:	f883 2045 	strb.w	r2, [r3, #69]	@ 0x45

  /* Initialize the TIM state*/
  htim->State = HAL_TIM_STATE_READY;
 8007340:	687b      	ldr	r3, [r7, #4]
 8007342:	2201      	movs	r2, #1
 8007344:	f883 203d 	strb.w	r2, [r3, #61]	@ 0x3d

  return HAL_OK;
 8007348:	2300      	movs	r3, #0
}
 800734a:	4618      	mov	r0, r3
 800734c:	3708      	adds	r7, #8
 800734e:	46bd      	mov	sp, r7
 8007350:	bd80      	pop	{r7, pc}

08007352 <HAL_TIM_PWM_MspInit>:
  * @brief  Initializes the TIM PWM MSP.
  * @param  htim TIM PWM handle
  * @retval None
  */
__weak void HAL_TIM_PWM_MspInit(TIM_HandleTypeDef *htim)
{
 8007352:	b480      	push	{r7}
 8007354:	b083      	sub	sp, #12
 8007356:	af00      	add	r7, sp, #0
 8007358:	6078      	str	r0, [r7, #4]
  UNUSED(htim);

  /* NOTE : This function should not be modified, when the callback is needed,
            the HAL_TIM_PWM_MspInit could be implemented in the user file
   */
}
 800735a:	bf00      	nop
 800735c:	370c      	adds	r7, #12
 800735e:	46bd      	mov	sp, r7
 8007360:	f85d 7b04 	ldr.w	r7, [sp], #4
 8007364:	4770      	bx	lr
	...

08007368 <HAL_TIM_PWM_Start>:
  *            @arg TIM_CHANNEL_3: TIM Channel 3 selected
  *            @arg TIM_CHANNEL_4: TIM Channel 4 selected
  * @retval HAL status
  */
HAL_StatusTypeDef HAL_TIM_PWM_Start(TIM_HandleTypeDef *htim, uint32_t Channel)
{
 8007368:	b580      	push	{r7, lr}
 800736a:	b084      	sub	sp, #16
 800736c:	af00      	add	r7, sp, #0
 800736e:	6078      	str	r0, [r7, #4]
 8007370:	6039      	str	r1, [r7, #0]

  /* Check the parameters */
  assert_param(IS_TIM_CCX_INSTANCE(htim->Instance, Channel));

  /* Check the TIM channel state */
  if (TIM_CHANNEL_STATE_GET(htim, Channel) != HAL_TIM_CHANNEL_STATE_READY)
 8007372:	683b      	ldr	r3, [r7, #0]
 8007374:	2b00      	cmp	r3, #0
 8007376:	d109      	bne.n	800738c <HAL_TIM_PWM_Start+0x24>
 8007378:	687b      	ldr	r3, [r7, #4]
 800737a:	f893 303e 	ldrb.w	r3, [r3, #62]	@ 0x3e
 800737e:	b2db      	uxtb	r3, r3
 8007380:	2b01      	cmp	r3, #1
 8007382:	bf14      	ite	ne
 8007384:	2301      	movne	r3, #1
 8007386:	2300      	moveq	r3, #0
 8007388:	b2db      	uxtb	r3, r3
 800738a:	e022      	b.n	80073d2 <HAL_TIM_PWM_Start+0x6a>
 800738c:	683b      	ldr	r3, [r7, #0]
 800738e:	2b04      	cmp	r3, #4
 8007390:	d109      	bne.n	80073a6 <HAL_TIM_PWM_Start+0x3e>
 8007392:	687b      	ldr	r3, [r7, #4]
 8007394:	f893 303f 	ldrb.w	r3, [r3, #63]	@ 0x3f
 8007398:	b2db      	uxtb	r3, r3
 800739a:	2b01      	cmp	r3, #1
 800739c:	bf14      	ite	ne
 800739e:	2301      	movne	r3, #1
 80073a0:	2300      	moveq	r3, #0
 80073a2:	b2db      	uxtb	r3, r3
 80073a4:	e015      	b.n	80073d2 <HAL_TIM_PWM_Start+0x6a>
 80073a6:	683b      	ldr	r3, [r7, #0]
 80073a8:	2b08      	cmp	r3, #8
 80073aa:	d109      	bne.n	80073c0 <HAL_TIM_PWM_Start+0x58>
 80073ac:	687b      	ldr	r3, [r7, #4]
 80073ae:	f893 3040 	ldrb.w	r3, [r3, #64]	@ 0x40
 80073b2:	b2db      	uxtb	r3, r3
 80073b4:	2b01      	cmp	r3, #1
 80073b6:	bf14      	ite	ne
 80073b8:	2301      	movne	r3, #1
 80073ba:	2300      	moveq	r3, #0
 80073bc:	b2db      	uxtb	r3, r3
 80073be:	e008      	b.n	80073d2 <HAL_TIM_PWM_Start+0x6a>
 80073c0:	687b      	ldr	r3, [r7, #4]
 80073c2:	f893 3041 	ldrb.w	r3, [r3, #65]	@ 0x41
 80073c6:	b2db      	uxtb	r3, r3
 80073c8:	2b01      	cmp	r3, #1
 80073ca:	bf14      	ite	ne
 80073cc:	2301      	movne	r3, #1
 80073ce:	2300      	moveq	r3, #0
 80073d0:	b2db      	uxtb	r3, r3
 80073d2:	2b00      	cmp	r3, #0
 80073d4:	d001      	beq.n	80073da <HAL_TIM_PWM_Start+0x72>
  {
    return HAL_ERROR;
 80073d6:	2301      	movs	r3, #1
 80073d8:	e07c      	b.n	80074d4 <HAL_TIM_PWM_Start+0x16c>
  }

  /* Set the TIM channel state */
  TIM_CHANNEL_STATE_SET(htim, Channel, HAL_TIM_CHANNEL_STATE_BUSY);
 80073da:	683b      	ldr	r3, [r7, #0]
 80073dc:	2b00      	cmp	r3, #0
 80073de:	d104      	bne.n	80073ea <HAL_TIM_PWM_Start+0x82>
 80073e0:	687b      	ldr	r3, [r7, #4]
 80073e2:	2202      	movs	r2, #2
 80073e4:	f883 203e 	strb.w	r2, [r3, #62]	@ 0x3e
 80073e8:	e013      	b.n	8007412 <HAL_TIM_PWM_Start+0xaa>
 80073ea:	683b      	ldr	r3, [r7, #0]
 80073ec:	2b04      	cmp	r3, #4
 80073ee:	d104      	bne.n	80073fa <HAL_TIM_PWM_Start+0x92>
 80073f0:	687b      	ldr	r3, [r7, #4]
 80073f2:	2202      	movs	r2, #2
 80073f4:	f883 203f 	strb.w	r2, [r3, #63]	@ 0x3f
 80073f8:	e00b      	b.n	8007412 <HAL_TIM_PWM_Start+0xaa>
 80073fa:	683b      	ldr	r3, [r7, #0]
 80073fc:	2b08      	cmp	r3, #8
 80073fe:	d104      	bne.n	800740a <HAL_TIM_PWM_Start+0xa2>
 8007400:	687b      	ldr	r3, [r7, #4]
 8007402:	2202      	movs	r2, #2
 8007404:	f883 2040 	strb.w	r2, [r3, #64]	@ 0x40
 8007408:	e003      	b.n	8007412 <HAL_TIM_PWM_Start+0xaa>
 800740a:	687b      	ldr	r3, [r7, #4]
 800740c:	2202      	movs	r2, #2
 800740e:	f883 2041 	strb.w	r2, [r3, #65]	@ 0x41

  /* Enable the Capture compare channel */
  TIM_CCxChannelCmd(htim->Instance, Channel, TIM_CCx_ENABLE);
 8007412:	687b      	ldr	r3, [r7, #4]
 8007414:	681b      	ldr	r3, [r3, #0]
 8007416:	2201      	movs	r2, #1
 8007418:	6839      	ldr	r1, [r7, #0]
 800741a:	4618      	mov	r0, r3
 800741c:	f000 fe04 	bl	8008028 <TIM_CCxChannelCmd>

  if (IS_TIM_BREAK_INSTANCE(htim->Instance) != RESET)
 8007420:	687b      	ldr	r3, [r7, #4]
 8007422:	681b      	ldr	r3, [r3, #0]
 8007424:	4a2d      	ldr	r2, [pc, #180]	@ (80074dc <HAL_TIM_PWM_Start+0x174>)
 8007426:	4293      	cmp	r3, r2
 8007428:	d004      	beq.n	8007434 <HAL_TIM_PWM_Start+0xcc>
 800742a:	687b      	ldr	r3, [r7, #4]
 800742c:	681b      	ldr	r3, [r3, #0]
 800742e:	4a2c      	ldr	r2, [pc, #176]	@ (80074e0 <HAL_TIM_PWM_Start+0x178>)
 8007430:	4293      	cmp	r3, r2
 8007432:	d101      	bne.n	8007438 <HAL_TIM_PWM_Start+0xd0>
 8007434:	2301      	movs	r3, #1
 8007436:	e000      	b.n	800743a <HAL_TIM_PWM_Start+0xd2>
 8007438:	2300      	movs	r3, #0
 800743a:	2b00      	cmp	r3, #0
 800743c:	d007      	beq.n	800744e <HAL_TIM_PWM_Start+0xe6>
  {
    /* Enable the main output */
    __HAL_TIM_MOE_ENABLE(htim);
 800743e:	687b      	ldr	r3, [r7, #4]
 8007440:	681b      	ldr	r3, [r3, #0]
 8007442:	6c5a      	ldr	r2, [r3, #68]	@ 0x44
 8007444:	687b      	ldr	r3, [r7, #4]
 8007446:	681b      	ldr	r3, [r3, #0]
 8007448:	f442 4200 	orr.w	r2, r2, #32768	@ 0x8000
 800744c:	645a      	str	r2, [r3, #68]	@ 0x44
  }

  /* Enable the Peripheral, except in trigger mode where enable is automatically done with trigger */
  if (IS_TIM_SLAVE_INSTANCE(htim->Instance))
 800744e:	687b      	ldr	r3, [r7, #4]
 8007450:	681b      	ldr	r3, [r3, #0]
 8007452:	4a22      	ldr	r2, [pc, #136]	@ (80074dc <HAL_TIM_PWM_Start+0x174>)
 8007454:	4293      	cmp	r3, r2
 8007456:	d022      	beq.n	800749e <HAL_TIM_PWM_Start+0x136>
 8007458:	687b      	ldr	r3, [r7, #4]
 800745a:	681b      	ldr	r3, [r3, #0]
 800745c:	f1b3 4f80 	cmp.w	r3, #1073741824	@ 0x40000000
 8007460:	d01d      	beq.n	800749e <HAL_TIM_PWM_Start+0x136>
 8007462:	687b      	ldr	r3, [r7, #4]
 8007464:	681b      	ldr	r3, [r3, #0]
 8007466:	4a1f      	ldr	r2, [pc, #124]	@ (80074e4 <HAL_TIM_PWM_Start+0x17c>)
 8007468:	4293      	cmp	r3, r2
 800746a:	d018      	beq.n	800749e <HAL_TIM_PWM_Start+0x136>
 800746c:	687b      	ldr	r3, [r7, #4]
 800746e:	681b      	ldr	r3, [r3, #0]
 8007470:	4a1d      	ldr	r2, [pc, #116]	@ (80074e8 <HAL_TIM_PWM_Start+0x180>)
 8007472:	4293      	cmp	r3, r2
 8007474:	d013      	beq.n	800749e <HAL_TIM_PWM_Start+0x136>
 8007476:	687b      	ldr	r3, [r7, #4]
 8007478:	681b      	ldr	r3, [r3, #0]
 800747a:	4a1c      	ldr	r2, [pc, #112]	@ (80074ec <HAL_TIM_PWM_Start+0x184>)
 800747c:	4293      	cmp	r3, r2
 800747e:	d00e      	beq.n	800749e <HAL_TIM_PWM_Start+0x136>
 8007480:	687b      	ldr	r3, [r7, #4]
 8007482:	681b      	ldr	r3, [r3, #0]
 8007484:	4a16      	ldr	r2, [pc, #88]	@ (80074e0 <HAL_TIM_PWM_Start+0x178>)
 8007486:	4293      	cmp	r3, r2
 8007488:	d009      	beq.n	800749e <HAL_TIM_PWM_Start+0x136>
 800748a:	687b      	ldr	r3, [r7, #4]
 800748c:	681b      	ldr	r3, [r3, #0]
 800748e:	4a18      	ldr	r2, [pc, #96]	@ (80074f0 <HAL_TIM_PWM_Start+0x188>)
 8007490:	4293      	cmp	r3, r2
 8007492:	d004      	beq.n	800749e <HAL_TIM_PWM_Start+0x136>
 8007494:	687b      	ldr	r3, [r7, #4]
 8007496:	681b      	ldr	r3, [r3, #0]
 8007498:	4a16      	ldr	r2, [pc, #88]	@ (80074f4 <HAL_TIM_PWM_Start+0x18c>)
 800749a:	4293      	cmp	r3, r2
 800749c:	d111      	bne.n	80074c2 <HAL_TIM_PWM_Start+0x15a>
  {
    tmpsmcr = htim->Instance->SMCR & TIM_SMCR_SMS;
 800749e:	687b      	ldr	r3, [r7, #4]
 80074a0:	681b      	ldr	r3, [r3, #0]
 80074a2:	689b      	ldr	r3, [r3, #8]
 80074a4:	f003 0307 	and.w	r3, r3, #7
 80074a8:	60fb      	str	r3, [r7, #12]
    if (!IS_TIM_SLAVEMODE_TRIGGER_ENABLED(tmpsmcr))
 80074aa:	68fb      	ldr	r3, [r7, #12]
 80074ac:	2b06      	cmp	r3, #6
 80074ae:	d010      	beq.n	80074d2 <HAL_TIM_PWM_Start+0x16a>
    {
      __HAL_TIM_ENABLE(htim);
 80074b0:	687b      	ldr	r3, [r7, #4]
 80074b2:	681b      	ldr	r3, [r3, #0]
 80074b4:	681a      	ldr	r2, [r3, #0]
 80074b6:	687b      	ldr	r3, [r7, #4]
 80074b8:	681b      	ldr	r3, [r3, #0]
 80074ba:	f042 0201 	orr.w	r2, r2, #1
 80074be:	601a      	str	r2, [r3, #0]
    if (!IS_TIM_SLAVEMODE_TRIGGER_ENABLED(tmpsmcr))
 80074c0:	e007      	b.n	80074d2 <HAL_TIM_PWM_Start+0x16a>
    }
  }
  else
  {
    __HAL_TIM_ENABLE(htim);
 80074c2:	687b      	ldr	r3, [r7, #4]
 80074c4:	681b      	ldr	r3, [r3, #0]
 80074c6:	681a      	ldr	r2, [r3, #0]
 80074c8:	687b      	ldr	r3, [r7, #4]
 80074ca:	681b      	ldr	r3, [r3, #0]
 80074cc:	f042 0201 	orr.w	r2, r2, #1
 80074d0:	601a      	str	r2, [r3, #0]
  }

  /* Return function status */
  return HAL_OK;
 80074d2:	2300      	movs	r3, #0
}
 80074d4:	4618      	mov	r0, r3
 80074d6:	3710      	adds	r7, #16
 80074d8:	46bd      	mov	sp, r7
 80074da:	bd80      	pop	{r7, pc}
 80074dc:	40010000 	.word	0x40010000
 80074e0:	40010400 	.word	0x40010400
 80074e4:	40000400 	.word	0x40000400
 80074e8:	40000800 	.word	0x40000800
 80074ec:	40000c00 	.word	0x40000c00
 80074f0:	40014000 	.word	0x40014000
 80074f4:	40001800 	.word	0x40001800

080074f8 <HAL_TIM_IRQHandler>:
  * @brief  This function handles TIM interrupts requests.
  * @param  htim TIM  handle
  * @retval None
  */
void HAL_TIM_IRQHandler(TIM_HandleTypeDef *htim)
{
 80074f8:	b580      	push	{r7, lr}
 80074fa:	b084      	sub	sp, #16
 80074fc:	af00      	add	r7, sp, #0
 80074fe:	6078      	str	r0, [r7, #4]
  uint32_t itsource = htim->Instance->DIER;
 8007500:	687b      	ldr	r3, [r7, #4]
 8007502:	681b      	ldr	r3, [r3, #0]
 8007504:	68db      	ldr	r3, [r3, #12]
 8007506:	60fb      	str	r3, [r7, #12]
  uint32_t itflag   = htim->Instance->SR;
 8007508:	687b      	ldr	r3, [r7, #4]
 800750a:	681b      	ldr	r3, [r3, #0]
 800750c:	691b      	ldr	r3, [r3, #16]
 800750e:	60bb      	str	r3, [r7, #8]

  /* Capture compare 1 event */
  if ((itflag & (TIM_FLAG_CC1)) == (TIM_FLAG_CC1))
 8007510:	68bb      	ldr	r3, [r7, #8]
 8007512:	f003 0302 	and.w	r3, r3, #2
 8007516:	2b00      	cmp	r3, #0
 8007518:	d020      	beq.n	800755c <HAL_TIM_IRQHandler+0x64>
  {
    if ((itsource & (TIM_IT_CC1)) == (TIM_IT_CC1))
 800751a:	68fb      	ldr	r3, [r7, #12]
 800751c:	f003 0302 	and.w	r3, r3, #2
 8007520:	2b00      	cmp	r3, #0
 8007522:	d01b      	beq.n	800755c <HAL_TIM_IRQHandler+0x64>
    {
      {
        __HAL_TIM_CLEAR_FLAG(htim, TIM_FLAG_CC1);
 8007524:	687b      	ldr	r3, [r7, #4]
 8007526:	681b      	ldr	r3, [r3, #0]
 8007528:	f06f 0202 	mvn.w	r2, #2
 800752c:	611a      	str	r2, [r3, #16]
        htim->Channel = HAL_TIM_ACTIVE_CHANNEL_1;
 800752e:	687b      	ldr	r3, [r7, #4]
 8007530:	2201      	movs	r2, #1
 8007532:	771a      	strb	r2, [r3, #28]

        /* Input capture event */
        if ((htim->Instance->CCMR1 & TIM_CCMR1_CC1S) != 0x00U)
 8007534:	687b      	ldr	r3, [r7, #4]
 8007536:	681b      	ldr	r3, [r3, #0]
 8007538:	699b      	ldr	r3, [r3, #24]
 800753a:	f003 0303 	and.w	r3, r3, #3
 800753e:	2b00      	cmp	r3, #0
 8007540:	d003      	beq.n	800754a <HAL_TIM_IRQHandler+0x52>
        {
#if (USE_HAL_TIM_REGISTER_CALLBACKS == 1)
          htim->IC_CaptureCallback(htim);
#else
          HAL_TIM_IC_CaptureCallback(htim);
 8007542:	6878      	ldr	r0, [r7, #4]
 8007544:	f000 fa5b 	bl	80079fe <HAL_TIM_IC_CaptureCallback>
 8007548:	e005      	b.n	8007556 <HAL_TIM_IRQHandler+0x5e>
        {
#if (USE_HAL_TIM_REGISTER_CALLBACKS == 1)
          htim->OC_DelayElapsedCallback(htim);
          htim->PWM_PulseFinishedCallback(htim);
#else
          HAL_TIM_OC_DelayElapsedCallback(htim);
 800754a:	6878      	ldr	r0, [r7, #4]
 800754c:	f000 fa4d 	bl	80079ea <HAL_TIM_OC_DelayElapsedCallback>
          HAL_TIM_PWM_PulseFinishedCallback(htim);
 8007550:	6878      	ldr	r0, [r7, #4]
 8007552:	f000 fa5e 	bl	8007a12 <HAL_TIM_PWM_PulseFinishedCallback>
#endif /* USE_HAL_TIM_REGISTER_CALLBACKS */
        }
        htim->Channel = HAL_TIM_ACTIVE_CHANNEL_CLEARED;
 8007556:	687b      	ldr	r3, [r7, #4]
 8007558:	2200      	movs	r2, #0
 800755a:	771a      	strb	r2, [r3, #28]
      }
    }
  }
  /* Capture compare 2 event */
  if ((itflag & (TIM_FLAG_CC2)) == (TIM_FLAG_CC2))
 800755c:	68bb      	ldr	r3, [r7, #8]
 800755e:	f003 0304 	and.w	r3, r3, #4
 8007562:	2b00      	cmp	r3, #0
 8007564:	d020      	beq.n	80075a8 <HAL_TIM_IRQHandler+0xb0>
  {
    if ((itsource & (TIM_IT_CC2)) == (TIM_IT_CC2))
 8007566:	68fb      	ldr	r3, [r7, #12]
 8007568:	f003 0304 	and.w	r3, r3, #4
 800756c:	2b00      	cmp	r3, #0
 800756e:	d01b      	beq.n	80075a8 <HAL_TIM_IRQHandler+0xb0>
    {
      __HAL_TIM_CLEAR_FLAG(htim, TIM_FLAG_CC2);
 8007570:	687b      	ldr	r3, [r7, #4]
 8007572:	681b      	ldr	r3, [r3, #0]
 8007574:	f06f 0204 	mvn.w	r2, #4
 8007578:	611a      	str	r2, [r3, #16]
      htim->Channel = HAL_TIM_ACTIVE_CHANNEL_2;
 800757a:	687b      	ldr	r3, [r7, #4]
 800757c:	2202      	movs	r2, #2
 800757e:	771a      	strb	r2, [r3, #28]
      /* Input capture event */
      if ((htim->Instance->CCMR1 & TIM_CCMR1_CC2S) != 0x00U)
 8007580:	687b      	ldr	r3, [r7, #4]
 8007582:	681b      	ldr	r3, [r3, #0]
 8007584:	699b      	ldr	r3, [r3, #24]
 8007586:	f403 7340 	and.w	r3, r3, #768	@ 0x300
 800758a:	2b00      	cmp	r3, #0
 800758c:	d003      	beq.n	8007596 <HAL_TIM_IRQHandler+0x9e>
      {
#if (USE_HAL_TIM_REGISTER_CALLBACKS == 1)
        htim->IC_CaptureCallback(htim);
#else
        HAL_TIM_IC_CaptureCallback(htim);
 800758e:	6878      	ldr	r0, [r7, #4]
 8007590:	f000 fa35 	bl	80079fe <HAL_TIM_IC_CaptureCallback>
 8007594:	e005      	b.n	80075a2 <HAL_TIM_IRQHandler+0xaa>
      {
#if (USE_HAL_TIM_REGISTER_CALLBACKS == 1)
        htim->OC_DelayElapsedCallback(htim);
        htim->PWM_PulseFinishedCallback(htim);
#else
        HAL_TIM_OC_DelayElapsedCallback(htim);
 8007596:	6878      	ldr	r0, [r7, #4]
 8007598:	f000 fa27 	bl	80079ea <HAL_TIM_OC_DelayElapsedCallback>
        HAL_TIM_PWM_PulseFinishedCallback(htim);
 800759c:	6878      	ldr	r0, [r7, #4]
 800759e:	f000 fa38 	bl	8007a12 <HAL_TIM_PWM_PulseFinishedCallback>
#endif /* USE_HAL_TIM_REGISTER_CALLBACKS */
      }
      htim->Channel = HAL_TIM_ACTIVE_CHANNEL_CLEARED;
 80075a2:	687b      	ldr	r3, [r7, #4]
 80075a4:	2200      	movs	r2, #0
 80075a6:	771a      	strb	r2, [r3, #28]
    }
  }
  /* Capture compare 3 event */
  if ((itflag & (TIM_FLAG_CC3)) == (TIM_FLAG_CC3))
 80075a8:	68bb      	ldr	r3, [r7, #8]
 80075aa:	f003 0308 	and.w	r3, r3, #8
 80075ae:	2b00      	cmp	r3, #0
 80075b0:	d020      	beq.n	80075f4 <HAL_TIM_IRQHandler+0xfc>
  {
    if ((itsource & (TIM_IT_CC3)) == (TIM_IT_CC3))
 80075b2:	68fb      	ldr	r3, [r7, #12]
 80075b4:	f003 0308 	and.w	r3, r3, #8
 80075b8:	2b00      	cmp	r3, #0
 80075ba:	d01b      	beq.n	80075f4 <HAL_TIM_IRQHandler+0xfc>
    {
      __HAL_TIM_CLEAR_FLAG(htim, TIM_FLAG_CC3);
 80075bc:	687b      	ldr	r3, [r7, #4]
 80075be:	681b      	ldr	r3, [r3, #0]
 80075c0:	f06f 0208 	mvn.w	r2, #8
 80075c4:	611a      	str	r2, [r3, #16]
      htim->Channel = HAL_TIM_ACTIVE_CHANNEL_3;
 80075c6:	687b      	ldr	r3, [r7, #4]
 80075c8:	2204      	movs	r2, #4
 80075ca:	771a      	strb	r2, [r3, #28]
      /* Input capture event */
      if ((htim->Instance->CCMR2 & TIM_CCMR2_CC3S) != 0x00U)
 80075cc:	687b      	ldr	r3, [r7, #4]
 80075ce:	681b      	ldr	r3, [r3, #0]
 80075d0:	69db      	ldr	r3, [r3, #28]
 80075d2:	f003 0303 	and.w	r3, r3, #3
 80075d6:	2b00      	cmp	r3, #0
 80075d8:	d003      	beq.n	80075e2 <HAL_TIM_IRQHandler+0xea>
      {
#if (USE_HAL_TIM_REGISTER_CALLBACKS == 1)
        htim->IC_CaptureCallback(htim);
#else
        HAL_TIM_IC_CaptureCallback(htim);
 80075da:	6878      	ldr	r0, [r7, #4]
 80075dc:	f000 fa0f 	bl	80079fe <HAL_TIM_IC_CaptureCallback>
 80075e0:	e005      	b.n	80075ee <HAL_TIM_IRQHandler+0xf6>
      {
#if (USE_HAL_TIM_REGISTER_CALLBACKS == 1)
        htim->OC_DelayElapsedCallback(htim);
        htim->PWM_PulseFinishedCallback(htim);
#else
        HAL_TIM_OC_DelayElapsedCallback(htim);
 80075e2:	6878      	ldr	r0, [r7, #4]
 80075e4:	f000 fa01 	bl	80079ea <HAL_TIM_OC_DelayElapsedCallback>
        HAL_TIM_PWM_PulseFinishedCallback(htim);
 80075e8:	6878      	ldr	r0, [r7, #4]
 80075ea:	f000 fa12 	bl	8007a12 <HAL_TIM_PWM_PulseFinishedCallback>
#endif /* USE_HAL_TIM_REGISTER_CALLBACKS */
      }
      htim->Channel = HAL_TIM_ACTIVE_CHANNEL_CLEARED;
 80075ee:	687b      	ldr	r3, [r7, #4]
 80075f0:	2200      	movs	r2, #0
 80075f2:	771a      	strb	r2, [r3, #28]
    }
  }
  /* Capture compare 4 event */
  if ((itflag & (TIM_FLAG_CC4)) == (TIM_FLAG_CC4))
 80075f4:	68bb      	ldr	r3, [r7, #8]
 80075f6:	f003 0310 	and.w	r3, r3, #16
 80075fa:	2b00      	cmp	r3, #0
 80075fc:	d020      	beq.n	8007640 <HAL_TIM_IRQHandler+0x148>
  {
    if ((itsource & (TIM_IT_CC4)) == (TIM_IT_CC4))
 80075fe:	68fb      	ldr	r3, [r7, #12]
 8007600:	f003 0310 	and.w	r3, r3, #16
 8007604:	2b00      	cmp	r3, #0
 8007606:	d01b      	beq.n	8007640 <HAL_TIM_IRQHandler+0x148>
    {
      __HAL_TIM_CLEAR_FLAG(htim, TIM_FLAG_CC4);
 8007608:	687b      	ldr	r3, [r7, #4]
 800760a:	681b      	ldr	r3, [r3, #0]
 800760c:	f06f 0210 	mvn.w	r2, #16
 8007610:	611a      	str	r2, [r3, #16]
      htim->Channel = HAL_TIM_ACTIVE_CHANNEL_4;
 8007612:	687b      	ldr	r3, [r7, #4]
 8007614:	2208      	movs	r2, #8
 8007616:	771a      	strb	r2, [r3, #28]
      /* Input capture event */
      if ((htim->Instance->CCMR2 & TIM_CCMR2_CC4S) != 0x00U)
 8007618:	687b      	ldr	r3, [r7, #4]
 800761a:	681b      	ldr	r3, [r3, #0]
 800761c:	69db      	ldr	r3, [r3, #28]
 800761e:	f403 7340 	and.w	r3, r3, #768	@ 0x300
 8007622:	2b00      	cmp	r3, #0
 8007624:	d003      	beq.n	800762e <HAL_TIM_IRQHandler+0x136>
      {
#if (USE_HAL_TIM_REGISTER_CALLBACKS == 1)
        htim->IC_CaptureCallback(htim);
#else
        HAL_TIM_IC_CaptureCallback(htim);
 8007626:	6878      	ldr	r0, [r7, #4]
 8007628:	f000 f9e9 	bl	80079fe <HAL_TIM_IC_CaptureCallback>
 800762c:	e005      	b.n	800763a <HAL_TIM_IRQHandler+0x142>
      {
#if (USE_HAL_TIM_REGISTER_CALLBACKS == 1)
        htim->OC_DelayElapsedCallback(htim);
        htim->PWM_PulseFinishedCallback(htim);
#else
        HAL_TIM_OC_DelayElapsedCallback(htim);
 800762e:	6878      	ldr	r0, [r7, #4]
 8007630:	f000 f9db 	bl	80079ea <HAL_TIM_OC_DelayElapsedCallback>
        HAL_TIM_PWM_PulseFinishedCallback(htim);
 8007634:	6878      	ldr	r0, [r7, #4]
 8007636:	f000 f9ec 	bl	8007a12 <HAL_TIM_PWM_PulseFinishedCallback>
#endif /* USE_HAL_TIM_REGISTER_CALLBACKS */
      }
      htim->Channel = HAL_TIM_ACTIVE_CHANNEL_CLEARED;
 800763a:	687b      	ldr	r3, [r7, #4]
 800763c:	2200      	movs	r2, #0
 800763e:	771a      	strb	r2, [r3, #28]
    }
  }
  /* TIM Update event */
  if ((itflag & (TIM_FLAG_UPDATE)) == (TIM_FLAG_UPDATE))
 8007640:	68bb      	ldr	r3, [r7, #8]
 8007642:	f003 0301 	and.w	r3, r3, #1
 8007646:	2b00      	cmp	r3, #0
 8007648:	d00c      	beq.n	8007664 <HAL_TIM_IRQHandler+0x16c>
  {
    if ((itsource & (TIM_IT_UPDATE)) == (TIM_IT_UPDATE))
 800764a:	68fb      	ldr	r3, [r7, #12]
 800764c:	f003 0301 	and.w	r3, r3, #1
 8007650:	2b00      	cmp	r3, #0
 8007652:	d007      	beq.n	8007664 <HAL_TIM_IRQHandler+0x16c>
    {
      __HAL_TIM_CLEAR_FLAG(htim, TIM_FLAG_UPDATE);
 8007654:	687b      	ldr	r3, [r7, #4]
 8007656:	681b      	ldr	r3, [r3, #0]
 8007658:	f06f 0201 	mvn.w	r2, #1
 800765c:	611a      	str	r2, [r3, #16]
#if (USE_HAL_TIM_REGISTER_CALLBACKS == 1)
      htim->PeriodElapsedCallback(htim);
#else
      HAL_TIM_PeriodElapsedCallback(htim);
 800765e:	6878      	ldr	r0, [r7, #4]
 8007660:	f7fa f876 	bl	8001750 <HAL_TIM_PeriodElapsedCallback>
#endif /* USE_HAL_TIM_REGISTER_CALLBACKS */
    }
  }
  /* TIM Break input event */
  if ((itflag & (TIM_FLAG_BREAK)) == (TIM_FLAG_BREAK))
 8007664:	68bb      	ldr	r3, [r7, #8]
 8007666:	f003 0380 	and.w	r3, r3, #128	@ 0x80
 800766a:	2b00      	cmp	r3, #0
 800766c:	d00c      	beq.n	8007688 <HAL_TIM_IRQHandler+0x190>
  {
    if ((itsource & (TIM_IT_BREAK)) == (TIM_IT_BREAK))
 800766e:	68fb      	ldr	r3, [r7, #12]
 8007670:	f003 0380 	and.w	r3, r3, #128	@ 0x80
 8007674:	2b00      	cmp	r3, #0
 8007676:	d007      	beq.n	8007688 <HAL_TIM_IRQHandler+0x190>
    {
      __HAL_TIM_CLEAR_FLAG(htim, TIM_FLAG_BREAK);
 8007678:	687b      	ldr	r3, [r7, #4]
 800767a:	681b      	ldr	r3, [r3, #0]
 800767c:	f06f 0280 	mvn.w	r2, #128	@ 0x80
 8007680:	611a      	str	r2, [r3, #16]
#if (USE_HAL_TIM_REGISTER_CALLBACKS == 1)
      htim->BreakCallback(htim);
#else
      HAL_TIMEx_BreakCallback(htim);
 8007682:	6878      	ldr	r0, [r7, #4]
 8007684:	f000 fd7c 	bl	8008180 <HAL_TIMEx_BreakCallback>
#endif /* USE_HAL_TIM_REGISTER_CALLBACKS */
    }
  }
  /* TIM Trigger detection event */
  if ((itflag & (TIM_FLAG_TRIGGER)) == (TIM_FLAG_TRIGGER))
 8007688:	68bb      	ldr	r3, [r7, #8]
 800768a:	f003 0340 	and.w	r3, r3, #64	@ 0x40
 800768e:	2b00      	cmp	r3, #0
 8007690:	d00c      	beq.n	80076ac <HAL_TIM_IRQHandler+0x1b4>
  {
    if ((itsource & (TIM_IT_TRIGGER)) == (TIM_IT_TRIGGER))
 8007692:	68fb      	ldr	r3, [r7, #12]
 8007694:	f003 0340 	and.w	r3, r3, #64	@ 0x40
 8007698:	2b00      	cmp	r3, #0
 800769a:	d007      	beq.n	80076ac <HAL_TIM_IRQHandler+0x1b4>
    {
      __HAL_TIM_CLEAR_FLAG(htim, TIM_FLAG_TRIGGER);
 800769c:	687b      	ldr	r3, [r7, #4]
 800769e:	681b      	ldr	r3, [r3, #0]
 80076a0:	f06f 0240 	mvn.w	r2, #64	@ 0x40
 80076a4:	611a      	str	r2, [r3, #16]
#if (USE_HAL_TIM_REGISTER_CALLBACKS == 1)
      htim->TriggerCallback(htim);
#else
      HAL_TIM_TriggerCallback(htim);
 80076a6:	6878      	ldr	r0, [r7, #4]
 80076a8:	f000 f9bd 	bl	8007a26 <HAL_TIM_TriggerCallback>
#endif /* USE_HAL_TIM_REGISTER_CALLBACKS */
    }
  }
  /* TIM commutation event */
  if ((itflag & (TIM_FLAG_COM)) == (TIM_FLAG_COM))
 80076ac:	68bb      	ldr	r3, [r7, #8]
 80076ae:	f003 0320 	and.w	r3, r3, #32
 80076b2:	2b00      	cmp	r3, #0
 80076b4:	d00c      	beq.n	80076d0 <HAL_TIM_IRQHandler+0x1d8>
  {
    if ((itsource & (TIM_IT_COM)) == (TIM_IT_COM))
 80076b6:	68fb      	ldr	r3, [r7, #12]
 80076b8:	f003 0320 	and.w	r3, r3, #32
 80076bc:	2b00      	cmp	r3, #0
 80076be:	d007      	beq.n	80076d0 <HAL_TIM_IRQHandler+0x1d8>
    {
      __HAL_TIM_CLEAR_FLAG(htim, TIM_FLAG_COM);
 80076c0:	687b      	ldr	r3, [r7, #4]
 80076c2:	681b      	ldr	r3, [r3, #0]
 80076c4:	f06f 0220 	mvn.w	r2, #32
 80076c8:	611a      	str	r2, [r3, #16]
#if (USE_HAL_TIM_REGISTER_CALLBACKS == 1)
      htim->CommutationCallback(htim);
#else
      HAL_TIMEx_CommutCallback(htim);
 80076ca:	6878      	ldr	r0, [r7, #4]
 80076cc:	f000 fd4e 	bl	800816c <HAL_TIMEx_CommutCallback>
#endif /* USE_HAL_TIM_REGISTER_CALLBACKS */
    }
  }
}
 80076d0:	bf00      	nop
 80076d2:	3710      	adds	r7, #16
 80076d4:	46bd      	mov	sp, r7
 80076d6:	bd80      	pop	{r7, pc}

080076d8 <HAL_TIM_PWM_ConfigChannel>:
  * @retval HAL status
  */
HAL_StatusTypeDef HAL_TIM_PWM_ConfigChannel(TIM_HandleTypeDef *htim,
                                            const TIM_OC_InitTypeDef *sConfig,
                                            uint32_t Channel)
{
 80076d8:	b580      	push	{r7, lr}
 80076da:	b086      	sub	sp, #24
 80076dc:	af00      	add	r7, sp, #0
 80076de:	60f8      	str	r0, [r7, #12]
 80076e0:	60b9      	str	r1, [r7, #8]
 80076e2:	607a      	str	r2, [r7, #4]
  HAL_StatusTypeDef status = HAL_OK;
 80076e4:	2300      	movs	r3, #0
 80076e6:	75fb      	strb	r3, [r7, #23]
  assert_param(IS_TIM_PWM_MODE(sConfig->OCMode));
  assert_param(IS_TIM_OC_POLARITY(sConfig->OCPolarity));
  assert_param(IS_TIM_FAST_STATE(sConfig->OCFastMode));

  /* Process Locked */
  __HAL_LOCK(htim);
 80076e8:	68fb      	ldr	r3, [r7, #12]
 80076ea:	f893 303c 	ldrb.w	r3, [r3, #60]	@ 0x3c
 80076ee:	2b01      	cmp	r3, #1
 80076f0:	d101      	bne.n	80076f6 <HAL_TIM_PWM_ConfigChannel+0x1e>
 80076f2:	2302      	movs	r3, #2
 80076f4:	e0ae      	b.n	8007854 <HAL_TIM_PWM_ConfigChannel+0x17c>
 80076f6:	68fb      	ldr	r3, [r7, #12]
 80076f8:	2201      	movs	r2, #1
 80076fa:	f883 203c 	strb.w	r2, [r3, #60]	@ 0x3c

  switch (Channel)
 80076fe:	687b      	ldr	r3, [r7, #4]
 8007700:	2b0c      	cmp	r3, #12
 8007702:	f200 809f 	bhi.w	8007844 <HAL_TIM_PWM_ConfigChannel+0x16c>
 8007706:	a201      	add	r2, pc, #4	@ (adr r2, 800770c <HAL_TIM_PWM_ConfigChannel+0x34>)
 8007708:	f852 f023 	ldr.w	pc, [r2, r3, lsl #2]
 800770c:	08007741 	.word	0x08007741
 8007710:	08007845 	.word	0x08007845
 8007714:	08007845 	.word	0x08007845
 8007718:	08007845 	.word	0x08007845
 800771c:	08007781 	.word	0x08007781
 8007720:	08007845 	.word	0x08007845
 8007724:	08007845 	.word	0x08007845
 8007728:	08007845 	.word	0x08007845
 800772c:	080077c3 	.word	0x080077c3
 8007730:	08007845 	.word	0x08007845
 8007734:	08007845 	.word	0x08007845
 8007738:	08007845 	.word	0x08007845
 800773c:	08007803 	.word	0x08007803
    {
      /* Check the parameters */
      assert_param(IS_TIM_CC1_INSTANCE(htim->Instance));

      /* Configure the Channel 1 in PWM mode */
      TIM_OC1_SetConfig(htim->Instance, sConfig);
 8007740:	68fb      	ldr	r3, [r7, #12]
 8007742:	681b      	ldr	r3, [r3, #0]
 8007744:	68b9      	ldr	r1, [r7, #8]
 8007746:	4618      	mov	r0, r3
 8007748:	f000 fa24 	bl	8007b94 <TIM_OC1_SetConfig>

      /* Set the Preload enable bit for channel1 */
      htim->Instance->CCMR1 |= TIM_CCMR1_OC1PE;
 800774c:	68fb      	ldr	r3, [r7, #12]
 800774e:	681b      	ldr	r3, [r3, #0]
 8007750:	699a      	ldr	r2, [r3, #24]
 8007752:	68fb      	ldr	r3, [r7, #12]
 8007754:	681b      	ldr	r3, [r3, #0]
 8007756:	f042 0208 	orr.w	r2, r2, #8
 800775a:	619a      	str	r2, [r3, #24]

      /* Configure the Output Fast mode */
      htim->Instance->CCMR1 &= ~TIM_CCMR1_OC1FE;
 800775c:	68fb      	ldr	r3, [r7, #12]
 800775e:	681b      	ldr	r3, [r3, #0]
 8007760:	699a      	ldr	r2, [r3, #24]
 8007762:	68fb      	ldr	r3, [r7, #12]
 8007764:	681b      	ldr	r3, [r3, #0]
 8007766:	f022 0204 	bic.w	r2, r2, #4
 800776a:	619a      	str	r2, [r3, #24]
      htim->Instance->CCMR1 |= sConfig->OCFastMode;
 800776c:	68fb      	ldr	r3, [r7, #12]
 800776e:	681b      	ldr	r3, [r3, #0]
 8007770:	6999      	ldr	r1, [r3, #24]
 8007772:	68bb      	ldr	r3, [r7, #8]
 8007774:	691a      	ldr	r2, [r3, #16]
 8007776:	68fb      	ldr	r3, [r7, #12]
 8007778:	681b      	ldr	r3, [r3, #0]
 800777a:	430a      	orrs	r2, r1
 800777c:	619a      	str	r2, [r3, #24]
      break;
 800777e:	e064      	b.n	800784a <HAL_TIM_PWM_ConfigChannel+0x172>
    {
      /* Check the parameters */
      assert_param(IS_TIM_CC2_INSTANCE(htim->Instance));

      /* Configure the Channel 2 in PWM mode */
      TIM_OC2_SetConfig(htim->Instance, sConfig);
 8007780:	68fb      	ldr	r3, [r7, #12]
 8007782:	681b      	ldr	r3, [r3, #0]
 8007784:	68b9      	ldr	r1, [r7, #8]
 8007786:	4618      	mov	r0, r3
 8007788:	f000 fa74 	bl	8007c74 <TIM_OC2_SetConfig>

      /* Set the Preload enable bit for channel2 */
      htim->Instance->CCMR1 |= TIM_CCMR1_OC2PE;
 800778c:	68fb      	ldr	r3, [r7, #12]
 800778e:	681b      	ldr	r3, [r3, #0]
 8007790:	699a      	ldr	r2, [r3, #24]
 8007792:	68fb      	ldr	r3, [r7, #12]
 8007794:	681b      	ldr	r3, [r3, #0]
 8007796:	f442 6200 	orr.w	r2, r2, #2048	@ 0x800
 800779a:	619a      	str	r2, [r3, #24]

      /* Configure the Output Fast mode */
      htim->Instance->CCMR1 &= ~TIM_CCMR1_OC2FE;
 800779c:	68fb      	ldr	r3, [r7, #12]
 800779e:	681b      	ldr	r3, [r3, #0]
 80077a0:	699a      	ldr	r2, [r3, #24]
 80077a2:	68fb      	ldr	r3, [r7, #12]
 80077a4:	681b      	ldr	r3, [r3, #0]
 80077a6:	f422 6280 	bic.w	r2, r2, #1024	@ 0x400
 80077aa:	619a      	str	r2, [r3, #24]
      htim->Instance->CCMR1 |= sConfig->OCFastMode << 8U;
 80077ac:	68fb      	ldr	r3, [r7, #12]
 80077ae:	681b      	ldr	r3, [r3, #0]
 80077b0:	6999      	ldr	r1, [r3, #24]
 80077b2:	68bb      	ldr	r3, [r7, #8]
 80077b4:	691b      	ldr	r3, [r3, #16]
 80077b6:	021a      	lsls	r2, r3, #8
 80077b8:	68fb      	ldr	r3, [r7, #12]
 80077ba:	681b      	ldr	r3, [r3, #0]
 80077bc:	430a      	orrs	r2, r1
 80077be:	619a      	str	r2, [r3, #24]
      break;
 80077c0:	e043      	b.n	800784a <HAL_TIM_PWM_ConfigChannel+0x172>
    {
      /* Check the parameters */
      assert_param(IS_TIM_CC3_INSTANCE(htim->Instance));

      /* Configure the Channel 3 in PWM mode */
      TIM_OC3_SetConfig(htim->Instance, sConfig);
 80077c2:	68fb      	ldr	r3, [r7, #12]
 80077c4:	681b      	ldr	r3, [r3, #0]
 80077c6:	68b9      	ldr	r1, [r7, #8]
 80077c8:	4618      	mov	r0, r3
 80077ca:	f000 fac9 	bl	8007d60 <TIM_OC3_SetConfig>

      /* Set the Preload enable bit for channel3 */
      htim->Instance->CCMR2 |= TIM_CCMR2_OC3PE;
 80077ce:	68fb      	ldr	r3, [r7, #12]
 80077d0:	681b      	ldr	r3, [r3, #0]
 80077d2:	69da      	ldr	r2, [r3, #28]
 80077d4:	68fb      	ldr	r3, [r7, #12]
 80077d6:	681b      	ldr	r3, [r3, #0]
 80077d8:	f042 0208 	orr.w	r2, r2, #8
 80077dc:	61da      	str	r2, [r3, #28]

      /* Configure the Output Fast mode */
      htim->Instance->CCMR2 &= ~TIM_CCMR2_OC3FE;
 80077de:	68fb      	ldr	r3, [r7, #12]
 80077e0:	681b      	ldr	r3, [r3, #0]
 80077e2:	69da      	ldr	r2, [r3, #28]
 80077e4:	68fb      	ldr	r3, [r7, #12]
 80077e6:	681b      	ldr	r3, [r3, #0]
 80077e8:	f022 0204 	bic.w	r2, r2, #4
 80077ec:	61da      	str	r2, [r3, #28]
      htim->Instance->CCMR2 |= sConfig->OCFastMode;
 80077ee:	68fb      	ldr	r3, [r7, #12]
 80077f0:	681b      	ldr	r3, [r3, #0]
 80077f2:	69d9      	ldr	r1, [r3, #28]
 80077f4:	68bb      	ldr	r3, [r7, #8]
 80077f6:	691a      	ldr	r2, [r3, #16]
 80077f8:	68fb      	ldr	r3, [r7, #12]
 80077fa:	681b      	ldr	r3, [r3, #0]
 80077fc:	430a      	orrs	r2, r1
 80077fe:	61da      	str	r2, [r3, #28]
      break;
 8007800:	e023      	b.n	800784a <HAL_TIM_PWM_ConfigChannel+0x172>
    {
      /* Check the parameters */
      assert_param(IS_TIM_CC4_INSTANCE(htim->Instance));

      /* Configure the Channel 4 in PWM mode */
      TIM_OC4_SetConfig(htim->Instance, sConfig);
 8007802:	68fb      	ldr	r3, [r7, #12]
 8007804:	681b      	ldr	r3, [r3, #0]
 8007806:	68b9      	ldr	r1, [r7, #8]
 8007808:	4618      	mov	r0, r3
 800780a:	f000 fb1d 	bl	8007e48 <TIM_OC4_SetConfig>

      /* Set the Preload enable bit for channel4 */
      htim->Instance->CCMR2 |= TIM_CCMR2_OC4PE;
 800780e:	68fb      	ldr	r3, [r7, #12]
 8007810:	681b      	ldr	r3, [r3, #0]
 8007812:	69da      	ldr	r2, [r3, #28]
 8007814:	68fb      	ldr	r3, [r7, #12]
 8007816:	681b      	ldr	r3, [r3, #0]
 8007818:	f442 6200 	orr.w	r2, r2, #2048	@ 0x800
 800781c:	61da      	str	r2, [r3, #28]

      /* Configure the Output Fast mode */
      htim->Instance->CCMR2 &= ~TIM_CCMR2_OC4FE;
 800781e:	68fb      	ldr	r3, [r7, #12]
 8007820:	681b      	ldr	r3, [r3, #0]
 8007822:	69da      	ldr	r2, [r3, #28]
 8007824:	68fb      	ldr	r3, [r7, #12]
 8007826:	681b      	ldr	r3, [r3, #0]
 8007828:	f422 6280 	bic.w	r2, r2, #1024	@ 0x400
 800782c:	61da      	str	r2, [r3, #28]
      htim->Instance->CCMR2 |= sConfig->OCFastMode << 8U;
 800782e:	68fb      	ldr	r3, [r7, #12]
 8007830:	681b      	ldr	r3, [r3, #0]
 8007832:	69d9      	ldr	r1, [r3, #28]
 8007834:	68bb      	ldr	r3, [r7, #8]
 8007836:	691b      	ldr	r3, [r3, #16]
 8007838:	021a      	lsls	r2, r3, #8
 800783a:	68fb      	ldr	r3, [r7, #12]
 800783c:	681b      	ldr	r3, [r3, #0]
 800783e:	430a      	orrs	r2, r1
 8007840:	61da      	str	r2, [r3, #28]
      break;
 8007842:	e002      	b.n	800784a <HAL_TIM_PWM_ConfigChannel+0x172>
    }

    default:
      status = HAL_ERROR;
 8007844:	2301      	movs	r3, #1
 8007846:	75fb      	strb	r3, [r7, #23]
      break;
 8007848:	bf00      	nop
  }

  __HAL_UNLOCK(htim);
 800784a:	68fb      	ldr	r3, [r7, #12]
 800784c:	2200      	movs	r2, #0
 800784e:	f883 203c 	strb.w	r2, [r3, #60]	@ 0x3c

  return status;
 8007852:	7dfb      	ldrb	r3, [r7, #23]
}
 8007854:	4618      	mov	r0, r3
 8007856:	3718      	adds	r7, #24
 8007858:	46bd      	mov	sp, r7
 800785a:	bd80      	pop	{r7, pc}

0800785c <HAL_TIM_ConfigClockSource>:
  * @param  sClockSourceConfig pointer to a TIM_ClockConfigTypeDef structure that
  *         contains the clock source information for the TIM peripheral.
  * @retval HAL status
  */
HAL_StatusTypeDef HAL_TIM_ConfigClockSource(TIM_HandleTypeDef *htim, const TIM_ClockConfigTypeDef *sClockSourceConfig)
{
 800785c:	b580      	push	{r7, lr}
 800785e:	b084      	sub	sp, #16
 8007860:	af00      	add	r7, sp, #0
 8007862:	6078      	str	r0, [r7, #4]
 8007864:	6039      	str	r1, [r7, #0]
  HAL_StatusTypeDef status = HAL_OK;
 8007866:	2300      	movs	r3, #0
 8007868:	73fb      	strb	r3, [r7, #15]
  uint32_t tmpsmcr;

  /* Process Locked */
  __HAL_LOCK(htim);
 800786a:	687b      	ldr	r3, [r7, #4]
 800786c:	f893 303c 	ldrb.w	r3, [r3, #60]	@ 0x3c
 8007870:	2b01      	cmp	r3, #1
 8007872:	d101      	bne.n	8007878 <HAL_TIM_ConfigClockSource+0x1c>
 8007874:	2302      	movs	r3, #2
 8007876:	e0b4      	b.n	80079e2 <HAL_TIM_ConfigClockSource+0x186>
 8007878:	687b      	ldr	r3, [r7, #4]
 800787a:	2201      	movs	r2, #1
 800787c:	f883 203c 	strb.w	r2, [r3, #60]	@ 0x3c

  htim->State = HAL_TIM_STATE_BUSY;
 8007880:	687b      	ldr	r3, [r7, #4]
 8007882:	2202      	movs	r2, #2
 8007884:	f883 203d 	strb.w	r2, [r3, #61]	@ 0x3d

  /* Check the parameters */
  assert_param(IS_TIM_CLOCKSOURCE(sClockSourceConfig->ClockSource));

  /* Reset the SMS, TS, ECE, ETPS and ETRF bits */
  tmpsmcr = htim->Instance->SMCR;
 8007888:	687b      	ldr	r3, [r7, #4]
 800788a:	681b      	ldr	r3, [r3, #0]
 800788c:	689b      	ldr	r3, [r3, #8]
 800788e:	60bb      	str	r3, [r7, #8]
  tmpsmcr &= ~(TIM_SMCR_SMS | TIM_SMCR_TS);
 8007890:	68bb      	ldr	r3, [r7, #8]
 8007892:	f023 0377 	bic.w	r3, r3, #119	@ 0x77
 8007896:	60bb      	str	r3, [r7, #8]
  tmpsmcr &= ~(TIM_SMCR_ETF | TIM_SMCR_ETPS | TIM_SMCR_ECE | TIM_SMCR_ETP);
 8007898:	68bb      	ldr	r3, [r7, #8]
 800789a:	f423 437f 	bic.w	r3, r3, #65280	@ 0xff00
 800789e:	60bb      	str	r3, [r7, #8]
  htim->Instance->SMCR = tmpsmcr;
 80078a0:	687b      	ldr	r3, [r7, #4]
 80078a2:	681b      	ldr	r3, [r3, #0]
 80078a4:	68ba      	ldr	r2, [r7, #8]
 80078a6:	609a      	str	r2, [r3, #8]

  switch (sClockSourceConfig->ClockSource)
 80078a8:	683b      	ldr	r3, [r7, #0]
 80078aa:	681b      	ldr	r3, [r3, #0]
 80078ac:	f5b3 5f00 	cmp.w	r3, #8192	@ 0x2000
 80078b0:	d03e      	beq.n	8007930 <HAL_TIM_ConfigClockSource+0xd4>
 80078b2:	f5b3 5f00 	cmp.w	r3, #8192	@ 0x2000
 80078b6:	f200 8087 	bhi.w	80079c8 <HAL_TIM_ConfigClockSource+0x16c>
 80078ba:	f5b3 5f80 	cmp.w	r3, #4096	@ 0x1000
 80078be:	f000 8086 	beq.w	80079ce <HAL_TIM_ConfigClockSource+0x172>
 80078c2:	f5b3 5f80 	cmp.w	r3, #4096	@ 0x1000
 80078c6:	d87f      	bhi.n	80079c8 <HAL_TIM_ConfigClockSource+0x16c>
 80078c8:	2b70      	cmp	r3, #112	@ 0x70
 80078ca:	d01a      	beq.n	8007902 <HAL_TIM_ConfigClockSource+0xa6>
 80078cc:	2b70      	cmp	r3, #112	@ 0x70
 80078ce:	d87b      	bhi.n	80079c8 <HAL_TIM_ConfigClockSource+0x16c>
 80078d0:	2b60      	cmp	r3, #96	@ 0x60
 80078d2:	d050      	beq.n	8007976 <HAL_TIM_ConfigClockSource+0x11a>
 80078d4:	2b60      	cmp	r3, #96	@ 0x60
 80078d6:	d877      	bhi.n	80079c8 <HAL_TIM_ConfigClockSource+0x16c>
 80078d8:	2b50      	cmp	r3, #80	@ 0x50
 80078da:	d03c      	beq.n	8007956 <HAL_TIM_ConfigClockSource+0xfa>
 80078dc:	2b50      	cmp	r3, #80	@ 0x50
 80078de:	d873      	bhi.n	80079c8 <HAL_TIM_ConfigClockSource+0x16c>
 80078e0:	2b40      	cmp	r3, #64	@ 0x40
 80078e2:	d058      	beq.n	8007996 <HAL_TIM_ConfigClockSource+0x13a>
 80078e4:	2b40      	cmp	r3, #64	@ 0x40
 80078e6:	d86f      	bhi.n	80079c8 <HAL_TIM_ConfigClockSource+0x16c>
 80078e8:	2b30      	cmp	r3, #48	@ 0x30
 80078ea:	d064      	beq.n	80079b6 <HAL_TIM_ConfigClockSource+0x15a>
 80078ec:	2b30      	cmp	r3, #48	@ 0x30
 80078ee:	d86b      	bhi.n	80079c8 <HAL_TIM_ConfigClockSource+0x16c>
 80078f0:	2b20      	cmp	r3, #32
 80078f2:	d060      	beq.n	80079b6 <HAL_TIM_ConfigClockSource+0x15a>
 80078f4:	2b20      	cmp	r3, #32
 80078f6:	d867      	bhi.n	80079c8 <HAL_TIM_ConfigClockSource+0x16c>
 80078f8:	2b00      	cmp	r3, #0
 80078fa:	d05c      	beq.n	80079b6 <HAL_TIM_ConfigClockSource+0x15a>
 80078fc:	2b10      	cmp	r3, #16
 80078fe:	d05a      	beq.n	80079b6 <HAL_TIM_ConfigClockSource+0x15a>
 8007900:	e062      	b.n	80079c8 <HAL_TIM_ConfigClockSource+0x16c>
      assert_param(IS_TIM_CLOCKPRESCALER(sClockSourceConfig->ClockPrescaler));
      assert_param(IS_TIM_CLOCKPOLARITY(sClockSourceConfig->ClockPolarity));
      assert_param(IS_TIM_CLOCKFILTER(sClockSourceConfig->ClockFilter));

      /* Configure the ETR Clock source */
      TIM_ETR_SetConfig(htim->Instance,
 8007902:	687b      	ldr	r3, [r7, #4]
 8007904:	6818      	ldr	r0, [r3, #0]
                        sClockSourceConfig->ClockPrescaler,
 8007906:	683b      	ldr	r3, [r7, #0]
 8007908:	6899      	ldr	r1, [r3, #8]
                        sClockSourceConfig->ClockPolarity,
 800790a:	683b      	ldr	r3, [r7, #0]
 800790c:	685a      	ldr	r2, [r3, #4]
                        sClockSourceConfig->ClockFilter);
 800790e:	683b      	ldr	r3, [r7, #0]
 8007910:	68db      	ldr	r3, [r3, #12]
      TIM_ETR_SetConfig(htim->Instance,
 8007912:	f000 fb69 	bl	8007fe8 <TIM_ETR_SetConfig>

      /* Select the External clock mode1 and the ETRF trigger */
      tmpsmcr = htim->Instance->SMCR;
 8007916:	687b      	ldr	r3, [r7, #4]
 8007918:	681b      	ldr	r3, [r3, #0]
 800791a:	689b      	ldr	r3, [r3, #8]
 800791c:	60bb      	str	r3, [r7, #8]
      tmpsmcr |= (TIM_SLAVEMODE_EXTERNAL1 | TIM_CLOCKSOURCE_ETRMODE1);
 800791e:	68bb      	ldr	r3, [r7, #8]
 8007920:	f043 0377 	orr.w	r3, r3, #119	@ 0x77
 8007924:	60bb      	str	r3, [r7, #8]
      /* Write to TIMx SMCR */
      htim->Instance->SMCR = tmpsmcr;
 8007926:	687b      	ldr	r3, [r7, #4]
 8007928:	681b      	ldr	r3, [r3, #0]
 800792a:	68ba      	ldr	r2, [r7, #8]
 800792c:	609a      	str	r2, [r3, #8]
      break;
 800792e:	e04f      	b.n	80079d0 <HAL_TIM_ConfigClockSource+0x174>
      assert_param(IS_TIM_CLOCKPRESCALER(sClockSourceConfig->ClockPrescaler));
      assert_param(IS_TIM_CLOCKPOLARITY(sClockSourceConfig->ClockPolarity));
      assert_param(IS_TIM_CLOCKFILTER(sClockSourceConfig->ClockFilter));

      /* Configure the ETR Clock source */
      TIM_ETR_SetConfig(htim->Instance,
 8007930:	687b      	ldr	r3, [r7, #4]
 8007932:	6818      	ldr	r0, [r3, #0]
                        sClockSourceConfig->ClockPrescaler,
 8007934:	683b      	ldr	r3, [r7, #0]
 8007936:	6899      	ldr	r1, [r3, #8]
                        sClockSourceConfig->ClockPolarity,
 8007938:	683b      	ldr	r3, [r7, #0]
 800793a:	685a      	ldr	r2, [r3, #4]
                        sClockSourceConfig->ClockFilter);
 800793c:	683b      	ldr	r3, [r7, #0]
 800793e:	68db      	ldr	r3, [r3, #12]
      TIM_ETR_SetConfig(htim->Instance,
 8007940:	f000 fb52 	bl	8007fe8 <TIM_ETR_SetConfig>
      /* Enable the External clock mode2 */
      htim->Instance->SMCR |= TIM_SMCR_ECE;
 8007944:	687b      	ldr	r3, [r7, #4]
 8007946:	681b      	ldr	r3, [r3, #0]
 8007948:	689a      	ldr	r2, [r3, #8]
 800794a:	687b      	ldr	r3, [r7, #4]
 800794c:	681b      	ldr	r3, [r3, #0]
 800794e:	f442 4280 	orr.w	r2, r2, #16384	@ 0x4000
 8007952:	609a      	str	r2, [r3, #8]
      break;
 8007954:	e03c      	b.n	80079d0 <HAL_TIM_ConfigClockSource+0x174>

      /* Check TI1 input conditioning related parameters */
      assert_param(IS_TIM_CLOCKPOLARITY(sClockSourceConfig->ClockPolarity));
      assert_param(IS_TIM_CLOCKFILTER(sClockSourceConfig->ClockFilter));

      TIM_TI1_ConfigInputStage(htim->Instance,
 8007956:	687b      	ldr	r3, [r7, #4]
 8007958:	6818      	ldr	r0, [r3, #0]
                               sClockSourceConfig->ClockPolarity,
 800795a:	683b      	ldr	r3, [r7, #0]
 800795c:	6859      	ldr	r1, [r3, #4]
                               sClockSourceConfig->ClockFilter);
 800795e:	683b      	ldr	r3, [r7, #0]
 8007960:	68db      	ldr	r3, [r3, #12]
      TIM_TI1_ConfigInputStage(htim->Instance,
 8007962:	461a      	mov	r2, r3
 8007964:	f000 fac6 	bl	8007ef4 <TIM_TI1_ConfigInputStage>
      TIM_ITRx_SetConfig(htim->Instance, TIM_CLOCKSOURCE_TI1);
 8007968:	687b      	ldr	r3, [r7, #4]
 800796a:	681b      	ldr	r3, [r3, #0]
 800796c:	2150      	movs	r1, #80	@ 0x50
 800796e:	4618      	mov	r0, r3
 8007970:	f000 fb1f 	bl	8007fb2 <TIM_ITRx_SetConfig>
      break;
 8007974:	e02c      	b.n	80079d0 <HAL_TIM_ConfigClockSource+0x174>

      /* Check TI2 input conditioning related parameters */
      assert_param(IS_TIM_CLOCKPOLARITY(sClockSourceConfig->ClockPolarity));
      assert_param(IS_TIM_CLOCKFILTER(sClockSourceConfig->ClockFilter));

      TIM_TI2_ConfigInputStage(htim->Instance,
 8007976:	687b      	ldr	r3, [r7, #4]
 8007978:	6818      	ldr	r0, [r3, #0]
                               sClockSourceConfig->ClockPolarity,
 800797a:	683b      	ldr	r3, [r7, #0]
 800797c:	6859      	ldr	r1, [r3, #4]
                               sClockSourceConfig->ClockFilter);
 800797e:	683b      	ldr	r3, [r7, #0]
 8007980:	68db      	ldr	r3, [r3, #12]
      TIM_TI2_ConfigInputStage(htim->Instance,
 8007982:	461a      	mov	r2, r3
 8007984:	f000 fae5 	bl	8007f52 <TIM_TI2_ConfigInputStage>
      TIM_ITRx_SetConfig(htim->Instance, TIM_CLOCKSOURCE_TI2);
 8007988:	687b      	ldr	r3, [r7, #4]
 800798a:	681b      	ldr	r3, [r3, #0]
 800798c:	2160      	movs	r1, #96	@ 0x60
 800798e:	4618      	mov	r0, r3
 8007990:	f000 fb0f 	bl	8007fb2 <TIM_ITRx_SetConfig>
      break;
 8007994:	e01c      	b.n	80079d0 <HAL_TIM_ConfigClockSource+0x174>

      /* Check TI1 input conditioning related parameters */
      assert_param(IS_TIM_CLOCKPOLARITY(sClockSourceConfig->ClockPolarity));
      assert_param(IS_TIM_CLOCKFILTER(sClockSourceConfig->ClockFilter));

      TIM_TI1_ConfigInputStage(htim->Instance,
 8007996:	687b      	ldr	r3, [r7, #4]
 8007998:	6818      	ldr	r0, [r3, #0]
                               sClockSourceConfig->ClockPolarity,
 800799a:	683b      	ldr	r3, [r7, #0]
 800799c:	6859      	ldr	r1, [r3, #4]
                               sClockSourceConfig->ClockFilter);
 800799e:	683b      	ldr	r3, [r7, #0]
 80079a0:	68db      	ldr	r3, [r3, #12]
      TIM_TI1_ConfigInputStage(htim->Instance,
 80079a2:	461a      	mov	r2, r3
 80079a4:	f000 faa6 	bl	8007ef4 <TIM_TI1_ConfigInputStage>
      TIM_ITRx_SetConfig(htim->Instance, TIM_CLOCKSOURCE_TI1ED);
 80079a8:	687b      	ldr	r3, [r7, #4]
 80079aa:	681b      	ldr	r3, [r3, #0]
 80079ac:	2140      	movs	r1, #64	@ 0x40
 80079ae:	4618      	mov	r0, r3
 80079b0:	f000 faff 	bl	8007fb2 <TIM_ITRx_SetConfig>
      break;
 80079b4:	e00c      	b.n	80079d0 <HAL_TIM_ConfigClockSource+0x174>
    case TIM_CLOCKSOURCE_ITR3:
    {
      /* Check whether or not the timer instance supports internal trigger input */
      assert_param(IS_TIM_CLOCKSOURCE_ITRX_INSTANCE(htim->Instance));

      TIM_ITRx_SetConfig(htim->Instance, sClockSourceConfig->ClockSource);
 80079b6:	687b      	ldr	r3, [r7, #4]
 80079b8:	681a      	ldr	r2, [r3, #0]
 80079ba:	683b      	ldr	r3, [r7, #0]
 80079bc:	681b      	ldr	r3, [r3, #0]
 80079be:	4619      	mov	r1, r3
 80079c0:	4610      	mov	r0, r2
 80079c2:	f000 faf6 	bl	8007fb2 <TIM_ITRx_SetConfig>
      break;
 80079c6:	e003      	b.n	80079d0 <HAL_TIM_ConfigClockSource+0x174>
    }

    default:
      status = HAL_ERROR;
 80079c8:	2301      	movs	r3, #1
 80079ca:	73fb      	strb	r3, [r7, #15]
      break;
 80079cc:	e000      	b.n	80079d0 <HAL_TIM_ConfigClockSource+0x174>
      break;
 80079ce:	bf00      	nop
  }
  htim->State = HAL_TIM_STATE_READY;
 80079d0:	687b      	ldr	r3, [r7, #4]
 80079d2:	2201      	movs	r2, #1
 80079d4:	f883 203d 	strb.w	r2, [r3, #61]	@ 0x3d

  __HAL_UNLOCK(htim);
 80079d8:	687b      	ldr	r3, [r7, #4]
 80079da:	2200      	movs	r2, #0
 80079dc:	f883 203c 	strb.w	r2, [r3, #60]	@ 0x3c

  return status;
 80079e0:	7bfb      	ldrb	r3, [r7, #15]
}
 80079e2:	4618      	mov	r0, r3
 80079e4:	3710      	adds	r7, #16
 80079e6:	46bd      	mov	sp, r7
 80079e8:	bd80      	pop	{r7, pc}

080079ea <HAL_TIM_OC_DelayElapsedCallback>:
  * @brief  Output Compare callback in non-blocking mode
  * @param  htim TIM OC handle
  * @retval None
  */
__weak void HAL_TIM_OC_DelayElapsedCallback(TIM_HandleTypeDef *htim)
{
 80079ea:	b480      	push	{r7}
 80079ec:	b083      	sub	sp, #12
 80079ee:	af00      	add	r7, sp, #0
 80079f0:	6078      	str	r0, [r7, #4]
  UNUSED(htim);

  /* NOTE : This function should not be modified, when the callback is needed,
            the HAL_TIM_OC_DelayElapsedCallback could be implemented in the user file
   */
}
 80079f2:	bf00      	nop
 80079f4:	370c      	adds	r7, #12
 80079f6:	46bd      	mov	sp, r7
 80079f8:	f85d 7b04 	ldr.w	r7, [sp], #4
 80079fc:	4770      	bx	lr

080079fe <HAL_TIM_IC_CaptureCallback>:
  * @brief  Input Capture callback in non-blocking mode
  * @param  htim TIM IC handle
  * @retval None
  */
__weak void HAL_TIM_IC_CaptureCallback(TIM_HandleTypeDef *htim)
{
 80079fe:	b480      	push	{r7}
 8007a00:	b083      	sub	sp, #12
 8007a02:	af00      	add	r7, sp, #0
 8007a04:	6078      	str	r0, [r7, #4]
  UNUSED(htim);

  /* NOTE : This function should not be modified, when the callback is needed,
            the HAL_TIM_IC_CaptureCallback could be implemented in the user file
   */
}
 8007a06:	bf00      	nop
 8007a08:	370c      	adds	r7, #12
 8007a0a:	46bd      	mov	sp, r7
 8007a0c:	f85d 7b04 	ldr.w	r7, [sp], #4
 8007a10:	4770      	bx	lr

08007a12 <HAL_TIM_PWM_PulseFinishedCallback>:
  * @brief  PWM Pulse finished callback in non-blocking mode
  * @param  htim TIM handle
  * @retval None
  */
__weak void HAL_TIM_PWM_PulseFinishedCallback(TIM_HandleTypeDef *htim)
{
 8007a12:	b480      	push	{r7}
 8007a14:	b083      	sub	sp, #12
 8007a16:	af00      	add	r7, sp, #0
 8007a18:	6078      	str	r0, [r7, #4]
  UNUSED(htim);

  /* NOTE : This function should not be modified, when the callback is needed,
            the HAL_TIM_PWM_PulseFinishedCallback could be implemented in the user file
   */
}
 8007a1a:	bf00      	nop
 8007a1c:	370c      	adds	r7, #12
 8007a1e:	46bd      	mov	sp, r7
 8007a20:	f85d 7b04 	ldr.w	r7, [sp], #4
 8007a24:	4770      	bx	lr

08007a26 <HAL_TIM_TriggerCallback>:
  * @brief  Hall Trigger detection callback in non-blocking mode
  * @param  htim TIM handle
  * @retval None
  */
__weak void HAL_TIM_TriggerCallback(TIM_HandleTypeDef *htim)
{
 8007a26:	b480      	push	{r7}
 8007a28:	b083      	sub	sp, #12
 8007a2a:	af00      	add	r7, sp, #0
 8007a2c:	6078      	str	r0, [r7, #4]
  UNUSED(htim);

  /* NOTE : This function should not be modified, when the callback is needed,
            the HAL_TIM_TriggerCallback could be implemented in the user file
   */
}
 8007a2e:	bf00      	nop
 8007a30:	370c      	adds	r7, #12
 8007a32:	46bd      	mov	sp, r7
 8007a34:	f85d 7b04 	ldr.w	r7, [sp], #4
 8007a38:	4770      	bx	lr
	...

08007a3c <TIM_Base_SetConfig>:
  * @param  TIMx TIM peripheral
  * @param  Structure TIM Base configuration structure
  * @retval None
  */
void TIM_Base_SetConfig(TIM_TypeDef *TIMx, const TIM_Base_InitTypeDef *Structure)
{
 8007a3c:	b480      	push	{r7}
 8007a3e:	b085      	sub	sp, #20
 8007a40:	af00      	add	r7, sp, #0
 8007a42:	6078      	str	r0, [r7, #4]
 8007a44:	6039      	str	r1, [r7, #0]
  uint32_t tmpcr1;
  tmpcr1 = TIMx->CR1;
 8007a46:	687b      	ldr	r3, [r7, #4]
 8007a48:	681b      	ldr	r3, [r3, #0]
 8007a4a:	60fb      	str	r3, [r7, #12]

  /* Set TIM Time Base Unit parameters ---------------------------------------*/
  if (IS_TIM_COUNTER_MODE_SELECT_INSTANCE(TIMx))
 8007a4c:	687b      	ldr	r3, [r7, #4]
 8007a4e:	4a46      	ldr	r2, [pc, #280]	@ (8007b68 <TIM_Base_SetConfig+0x12c>)
 8007a50:	4293      	cmp	r3, r2
 8007a52:	d013      	beq.n	8007a7c <TIM_Base_SetConfig+0x40>
 8007a54:	687b      	ldr	r3, [r7, #4]
 8007a56:	f1b3 4f80 	cmp.w	r3, #1073741824	@ 0x40000000
 8007a5a:	d00f      	beq.n	8007a7c <TIM_Base_SetConfig+0x40>
 8007a5c:	687b      	ldr	r3, [r7, #4]
 8007a5e:	4a43      	ldr	r2, [pc, #268]	@ (8007b6c <TIM_Base_SetConfig+0x130>)
 8007a60:	4293      	cmp	r3, r2
 8007a62:	d00b      	beq.n	8007a7c <TIM_Base_SetConfig+0x40>
 8007a64:	687b      	ldr	r3, [r7, #4]
 8007a66:	4a42      	ldr	r2, [pc, #264]	@ (8007b70 <TIM_Base_SetConfig+0x134>)
 8007a68:	4293      	cmp	r3, r2
 8007a6a:	d007      	beq.n	8007a7c <TIM_Base_SetConfig+0x40>
 8007a6c:	687b      	ldr	r3, [r7, #4]
 8007a6e:	4a41      	ldr	r2, [pc, #260]	@ (8007b74 <TIM_Base_SetConfig+0x138>)
 8007a70:	4293      	cmp	r3, r2
 8007a72:	d003      	beq.n	8007a7c <TIM_Base_SetConfig+0x40>
 8007a74:	687b      	ldr	r3, [r7, #4]
 8007a76:	4a40      	ldr	r2, [pc, #256]	@ (8007b78 <TIM_Base_SetConfig+0x13c>)
 8007a78:	4293      	cmp	r3, r2
 8007a7a:	d108      	bne.n	8007a8e <TIM_Base_SetConfig+0x52>
  {
    /* Select the Counter Mode */
    tmpcr1 &= ~(TIM_CR1_DIR | TIM_CR1_CMS);
 8007a7c:	68fb      	ldr	r3, [r7, #12]
 8007a7e:	f023 0370 	bic.w	r3, r3, #112	@ 0x70
 8007a82:	60fb      	str	r3, [r7, #12]
    tmpcr1 |= Structure->CounterMode;
 8007a84:	683b      	ldr	r3, [r7, #0]
 8007a86:	685b      	ldr	r3, [r3, #4]
 8007a88:	68fa      	ldr	r2, [r7, #12]
 8007a8a:	4313      	orrs	r3, r2
 8007a8c:	60fb      	str	r3, [r7, #12]
  }

  if (IS_TIM_CLOCK_DIVISION_INSTANCE(TIMx))
 8007a8e:	687b      	ldr	r3, [r7, #4]
 8007a90:	4a35      	ldr	r2, [pc, #212]	@ (8007b68 <TIM_Base_SetConfig+0x12c>)
 8007a92:	4293      	cmp	r3, r2
 8007a94:	d02b      	beq.n	8007aee <TIM_Base_SetConfig+0xb2>
 8007a96:	687b      	ldr	r3, [r7, #4]
 8007a98:	f1b3 4f80 	cmp.w	r3, #1073741824	@ 0x40000000
 8007a9c:	d027      	beq.n	8007aee <TIM_Base_SetConfig+0xb2>
 8007a9e:	687b      	ldr	r3, [r7, #4]
 8007aa0:	4a32      	ldr	r2, [pc, #200]	@ (8007b6c <TIM_Base_SetConfig+0x130>)
 8007aa2:	4293      	cmp	r3, r2
 8007aa4:	d023      	beq.n	8007aee <TIM_Base_SetConfig+0xb2>
 8007aa6:	687b      	ldr	r3, [r7, #4]
 8007aa8:	4a31      	ldr	r2, [pc, #196]	@ (8007b70 <TIM_Base_SetConfig+0x134>)
 8007aaa:	4293      	cmp	r3, r2
 8007aac:	d01f      	beq.n	8007aee <TIM_Base_SetConfig+0xb2>
 8007aae:	687b      	ldr	r3, [r7, #4]
 8007ab0:	4a30      	ldr	r2, [pc, #192]	@ (8007b74 <TIM_Base_SetConfig+0x138>)
 8007ab2:	4293      	cmp	r3, r2
 8007ab4:	d01b      	beq.n	8007aee <TIM_Base_SetConfig+0xb2>
 8007ab6:	687b      	ldr	r3, [r7, #4]
 8007ab8:	4a2f      	ldr	r2, [pc, #188]	@ (8007b78 <TIM_Base_SetConfig+0x13c>)
 8007aba:	4293      	cmp	r3, r2
 8007abc:	d017      	beq.n	8007aee <TIM_Base_SetConfig+0xb2>
 8007abe:	687b      	ldr	r3, [r7, #4]
 8007ac0:	4a2e      	ldr	r2, [pc, #184]	@ (8007b7c <TIM_Base_SetConfig+0x140>)
 8007ac2:	4293      	cmp	r3, r2
 8007ac4:	d013      	beq.n	8007aee <TIM_Base_SetConfig+0xb2>
 8007ac6:	687b      	ldr	r3, [r7, #4]
 8007ac8:	4a2d      	ldr	r2, [pc, #180]	@ (8007b80 <TIM_Base_SetConfig+0x144>)
 8007aca:	4293      	cmp	r3, r2
 8007acc:	d00f      	beq.n	8007aee <TIM_Base_SetConfig+0xb2>
 8007ace:	687b      	ldr	r3, [r7, #4]
 8007ad0:	4a2c      	ldr	r2, [pc, #176]	@ (8007b84 <TIM_Base_SetConfig+0x148>)
 8007ad2:	4293      	cmp	r3, r2
 8007ad4:	d00b      	beq.n	8007aee <TIM_Base_SetConfig+0xb2>
 8007ad6:	687b      	ldr	r3, [r7, #4]
 8007ad8:	4a2b      	ldr	r2, [pc, #172]	@ (8007b88 <TIM_Base_SetConfig+0x14c>)
 8007ada:	4293      	cmp	r3, r2
 8007adc:	d007      	beq.n	8007aee <TIM_Base_SetConfig+0xb2>
 8007ade:	687b      	ldr	r3, [r7, #4]
 8007ae0:	4a2a      	ldr	r2, [pc, #168]	@ (8007b8c <TIM_Base_SetConfig+0x150>)
 8007ae2:	4293      	cmp	r3, r2
 8007ae4:	d003      	beq.n	8007aee <TIM_Base_SetConfig+0xb2>
 8007ae6:	687b      	ldr	r3, [r7, #4]
 8007ae8:	4a29      	ldr	r2, [pc, #164]	@ (8007b90 <TIM_Base_SetConfig+0x154>)
 8007aea:	4293      	cmp	r3, r2
 8007aec:	d108      	bne.n	8007b00 <TIM_Base_SetConfig+0xc4>
  {
    /* Set the clock division */
    tmpcr1 &= ~TIM_CR1_CKD;
 8007aee:	68fb      	ldr	r3, [r7, #12]
 8007af0:	f423 7340 	bic.w	r3, r3, #768	@ 0x300
 8007af4:	60fb      	str	r3, [r7, #12]
    tmpcr1 |= (uint32_t)Structure->ClockDivision;
 8007af6:	683b      	ldr	r3, [r7, #0]
 8007af8:	68db      	ldr	r3, [r3, #12]
 8007afa:	68fa      	ldr	r2, [r7, #12]
 8007afc:	4313      	orrs	r3, r2
 8007afe:	60fb      	str	r3, [r7, #12]
  }

  /* Set the auto-reload preload */
  MODIFY_REG(tmpcr1, TIM_CR1_ARPE, Structure->AutoReloadPreload);
 8007b00:	68fb      	ldr	r3, [r7, #12]
 8007b02:	f023 0280 	bic.w	r2, r3, #128	@ 0x80
 8007b06:	683b      	ldr	r3, [r7, #0]
 8007b08:	695b      	ldr	r3, [r3, #20]
 8007b0a:	4313      	orrs	r3, r2
 8007b0c:	60fb      	str	r3, [r7, #12]

  TIMx->CR1 = tmpcr1;
 8007b0e:	687b      	ldr	r3, [r7, #4]
 8007b10:	68fa      	ldr	r2, [r7, #12]
 8007b12:	601a      	str	r2, [r3, #0]

  /* Set the Autoreload value */
  TIMx->ARR = (uint32_t)Structure->Period ;
 8007b14:	683b      	ldr	r3, [r7, #0]
 8007b16:	689a      	ldr	r2, [r3, #8]
 8007b18:	687b      	ldr	r3, [r7, #4]
 8007b1a:	62da      	str	r2, [r3, #44]	@ 0x2c

  /* Set the Prescaler value */
  TIMx->PSC = Structure->Prescaler;
 8007b1c:	683b      	ldr	r3, [r7, #0]
 8007b1e:	681a      	ldr	r2, [r3, #0]
 8007b20:	687b      	ldr	r3, [r7, #4]
 8007b22:	629a      	str	r2, [r3, #40]	@ 0x28

  if (IS_TIM_REPETITION_COUNTER_INSTANCE(TIMx))
 8007b24:	687b      	ldr	r3, [r7, #4]
 8007b26:	4a10      	ldr	r2, [pc, #64]	@ (8007b68 <TIM_Base_SetConfig+0x12c>)
 8007b28:	4293      	cmp	r3, r2
 8007b2a:	d003      	beq.n	8007b34 <TIM_Base_SetConfig+0xf8>
 8007b2c:	687b      	ldr	r3, [r7, #4]
 8007b2e:	4a12      	ldr	r2, [pc, #72]	@ (8007b78 <TIM_Base_SetConfig+0x13c>)
 8007b30:	4293      	cmp	r3, r2
 8007b32:	d103      	bne.n	8007b3c <TIM_Base_SetConfig+0x100>
  {
    /* Set the Repetition Counter value */
    TIMx->RCR = Structure->RepetitionCounter;
 8007b34:	683b      	ldr	r3, [r7, #0]
 8007b36:	691a      	ldr	r2, [r3, #16]
 8007b38:	687b      	ldr	r3, [r7, #4]
 8007b3a:	631a      	str	r2, [r3, #48]	@ 0x30
  }

  /* Generate an update event to reload the Prescaler
     and the repetition counter (only for advanced timer) value immediately */
  TIMx->EGR = TIM_EGR_UG;
 8007b3c:	687b      	ldr	r3, [r7, #4]
 8007b3e:	2201      	movs	r2, #1
 8007b40:	615a      	str	r2, [r3, #20]

  /* Check if the update flag is set after the Update Generation, if so clear the UIF flag */
  if (HAL_IS_BIT_SET(TIMx->SR, TIM_FLAG_UPDATE))
 8007b42:	687b      	ldr	r3, [r7, #4]
 8007b44:	691b      	ldr	r3, [r3, #16]
 8007b46:	f003 0301 	and.w	r3, r3, #1
 8007b4a:	2b01      	cmp	r3, #1
 8007b4c:	d105      	bne.n	8007b5a <TIM_Base_SetConfig+0x11e>
  {
    /* Clear the update flag */
    CLEAR_BIT(TIMx->SR, TIM_FLAG_UPDATE);
 8007b4e:	687b      	ldr	r3, [r7, #4]
 8007b50:	691b      	ldr	r3, [r3, #16]
 8007b52:	f023 0201 	bic.w	r2, r3, #1
 8007b56:	687b      	ldr	r3, [r7, #4]
 8007b58:	611a      	str	r2, [r3, #16]
  }
}
 8007b5a:	bf00      	nop
 8007b5c:	3714      	adds	r7, #20
 8007b5e:	46bd      	mov	sp, r7
 8007b60:	f85d 7b04 	ldr.w	r7, [sp], #4
 8007b64:	4770      	bx	lr
 8007b66:	bf00      	nop
 8007b68:	40010000 	.word	0x40010000
 8007b6c:	40000400 	.word	0x40000400
 8007b70:	40000800 	.word	0x40000800
 8007b74:	40000c00 	.word	0x40000c00
 8007b78:	40010400 	.word	0x40010400
 8007b7c:	40014000 	.word	0x40014000
 8007b80:	40014400 	.word	0x40014400
 8007b84:	40014800 	.word	0x40014800
 8007b88:	40001800 	.word	0x40001800
 8007b8c:	40001c00 	.word	0x40001c00
 8007b90:	40002000 	.word	0x40002000

08007b94 <TIM_OC1_SetConfig>:
  * @param  TIMx to select the TIM peripheral
  * @param  OC_Config The output configuration structure
  * @retval None
  */
static void TIM_OC1_SetConfig(TIM_TypeDef *TIMx, const TIM_OC_InitTypeDef *OC_Config)
{
 8007b94:	b480      	push	{r7}
 8007b96:	b087      	sub	sp, #28
 8007b98:	af00      	add	r7, sp, #0
 8007b9a:	6078      	str	r0, [r7, #4]
 8007b9c:	6039      	str	r1, [r7, #0]
  uint32_t tmpccmrx;
  uint32_t tmpccer;
  uint32_t tmpcr2;

  /* Get the TIMx CCER register value */
  tmpccer = TIMx->CCER;
 8007b9e:	687b      	ldr	r3, [r7, #4]
 8007ba0:	6a1b      	ldr	r3, [r3, #32]
 8007ba2:	617b      	str	r3, [r7, #20]

  /* Disable the Channel 1: Reset the CC1E Bit */
  TIMx->CCER &= ~TIM_CCER_CC1E;
 8007ba4:	687b      	ldr	r3, [r7, #4]
 8007ba6:	6a1b      	ldr	r3, [r3, #32]
 8007ba8:	f023 0201 	bic.w	r2, r3, #1
 8007bac:	687b      	ldr	r3, [r7, #4]
 8007bae:	621a      	str	r2, [r3, #32]

  /* Get the TIMx CR2 register value */
  tmpcr2 =  TIMx->CR2;
 8007bb0:	687b      	ldr	r3, [r7, #4]
 8007bb2:	685b      	ldr	r3, [r3, #4]
 8007bb4:	613b      	str	r3, [r7, #16]

  /* Get the TIMx CCMR1 register value */
  tmpccmrx = TIMx->CCMR1;
 8007bb6:	687b      	ldr	r3, [r7, #4]
 8007bb8:	699b      	ldr	r3, [r3, #24]
 8007bba:	60fb      	str	r3, [r7, #12]

  /* Reset the Output Compare Mode Bits */
  tmpccmrx &= ~TIM_CCMR1_OC1M;
 8007bbc:	68fb      	ldr	r3, [r7, #12]
 8007bbe:	f023 0370 	bic.w	r3, r3, #112	@ 0x70
 8007bc2:	60fb      	str	r3, [r7, #12]
  tmpccmrx &= ~TIM_CCMR1_CC1S;
 8007bc4:	68fb      	ldr	r3, [r7, #12]
 8007bc6:	f023 0303 	bic.w	r3, r3, #3
 8007bca:	60fb      	str	r3, [r7, #12]
  /* Select the Output Compare Mode */
  tmpccmrx |= OC_Config->OCMode;
 8007bcc:	683b      	ldr	r3, [r7, #0]
 8007bce:	681b      	ldr	r3, [r3, #0]
 8007bd0:	68fa      	ldr	r2, [r7, #12]
 8007bd2:	4313      	orrs	r3, r2
 8007bd4:	60fb      	str	r3, [r7, #12]

  /* Reset the Output Polarity level */
  tmpccer &= ~TIM_CCER_CC1P;
 8007bd6:	697b      	ldr	r3, [r7, #20]
 8007bd8:	f023 0302 	bic.w	r3, r3, #2
 8007bdc:	617b      	str	r3, [r7, #20]
  /* Set the Output Compare Polarity */
  tmpccer |= OC_Config->OCPolarity;
 8007bde:	683b      	ldr	r3, [r7, #0]
 8007be0:	689b      	ldr	r3, [r3, #8]
 8007be2:	697a      	ldr	r2, [r7, #20]
 8007be4:	4313      	orrs	r3, r2
 8007be6:	617b      	str	r3, [r7, #20]

  if (IS_TIM_CCXN_INSTANCE(TIMx, TIM_CHANNEL_1))
 8007be8:	687b      	ldr	r3, [r7, #4]
 8007bea:	4a20      	ldr	r2, [pc, #128]	@ (8007c6c <TIM_OC1_SetConfig+0xd8>)
 8007bec:	4293      	cmp	r3, r2
 8007bee:	d003      	beq.n	8007bf8 <TIM_OC1_SetConfig+0x64>
 8007bf0:	687b      	ldr	r3, [r7, #4]
 8007bf2:	4a1f      	ldr	r2, [pc, #124]	@ (8007c70 <TIM_OC1_SetConfig+0xdc>)
 8007bf4:	4293      	cmp	r3, r2
 8007bf6:	d10c      	bne.n	8007c12 <TIM_OC1_SetConfig+0x7e>
  {
    /* Check parameters */
    assert_param(IS_TIM_OCN_POLARITY(OC_Config->OCNPolarity));

    /* Reset the Output N Polarity level */
    tmpccer &= ~TIM_CCER_CC1NP;
 8007bf8:	697b      	ldr	r3, [r7, #20]
 8007bfa:	f023 0308 	bic.w	r3, r3, #8
 8007bfe:	617b      	str	r3, [r7, #20]
    /* Set the Output N Polarity */
    tmpccer |= OC_Config->OCNPolarity;
 8007c00:	683b      	ldr	r3, [r7, #0]
 8007c02:	68db      	ldr	r3, [r3, #12]
 8007c04:	697a      	ldr	r2, [r7, #20]
 8007c06:	4313      	orrs	r3, r2
 8007c08:	617b      	str	r3, [r7, #20]
    /* Reset the Output N State */
    tmpccer &= ~TIM_CCER_CC1NE;
 8007c0a:	697b      	ldr	r3, [r7, #20]
 8007c0c:	f023 0304 	bic.w	r3, r3, #4
 8007c10:	617b      	str	r3, [r7, #20]
  }

  if (IS_TIM_BREAK_INSTANCE(TIMx))
 8007c12:	687b      	ldr	r3, [r7, #4]
 8007c14:	4a15      	ldr	r2, [pc, #84]	@ (8007c6c <TIM_OC1_SetConfig+0xd8>)
 8007c16:	4293      	cmp	r3, r2
 8007c18:	d003      	beq.n	8007c22 <TIM_OC1_SetConfig+0x8e>
 8007c1a:	687b      	ldr	r3, [r7, #4]
 8007c1c:	4a14      	ldr	r2, [pc, #80]	@ (8007c70 <TIM_OC1_SetConfig+0xdc>)
 8007c1e:	4293      	cmp	r3, r2
 8007c20:	d111      	bne.n	8007c46 <TIM_OC1_SetConfig+0xb2>
    /* Check parameters */
    assert_param(IS_TIM_OCNIDLE_STATE(OC_Config->OCNIdleState));
    assert_param(IS_TIM_OCIDLE_STATE(OC_Config->OCIdleState));

    /* Reset the Output Compare and Output Compare N IDLE State */
    tmpcr2 &= ~TIM_CR2_OIS1;
 8007c22:	693b      	ldr	r3, [r7, #16]
 8007c24:	f423 7380 	bic.w	r3, r3, #256	@ 0x100
 8007c28:	613b      	str	r3, [r7, #16]
    tmpcr2 &= ~TIM_CR2_OIS1N;
 8007c2a:	693b      	ldr	r3, [r7, #16]
 8007c2c:	f423 7300 	bic.w	r3, r3, #512	@ 0x200
 8007c30:	613b      	str	r3, [r7, #16]
    /* Set the Output Idle state */
    tmpcr2 |= OC_Config->OCIdleState;
 8007c32:	683b      	ldr	r3, [r7, #0]
 8007c34:	695b      	ldr	r3, [r3, #20]
 8007c36:	693a      	ldr	r2, [r7, #16]
 8007c38:	4313      	orrs	r3, r2
 8007c3a:	613b      	str	r3, [r7, #16]
    /* Set the Output N Idle state */
    tmpcr2 |= OC_Config->OCNIdleState;
 8007c3c:	683b      	ldr	r3, [r7, #0]
 8007c3e:	699b      	ldr	r3, [r3, #24]
 8007c40:	693a      	ldr	r2, [r7, #16]
 8007c42:	4313      	orrs	r3, r2
 8007c44:	613b      	str	r3, [r7, #16]
  }

  /* Write to TIMx CR2 */
  TIMx->CR2 = tmpcr2;
 8007c46:	687b      	ldr	r3, [r7, #4]
 8007c48:	693a      	ldr	r2, [r7, #16]
 8007c4a:	605a      	str	r2, [r3, #4]

  /* Write to TIMx CCMR1 */
  TIMx->CCMR1 = tmpccmrx;
 8007c4c:	687b      	ldr	r3, [r7, #4]
 8007c4e:	68fa      	ldr	r2, [r7, #12]
 8007c50:	619a      	str	r2, [r3, #24]

  /* Set the Capture Compare Register value */
  TIMx->CCR1 = OC_Config->Pulse;
 8007c52:	683b      	ldr	r3, [r7, #0]
 8007c54:	685a      	ldr	r2, [r3, #4]
 8007c56:	687b      	ldr	r3, [r7, #4]
 8007c58:	635a      	str	r2, [r3, #52]	@ 0x34

  /* Write to TIMx CCER */
  TIMx->CCER = tmpccer;
 8007c5a:	687b      	ldr	r3, [r7, #4]
 8007c5c:	697a      	ldr	r2, [r7, #20]
 8007c5e:	621a      	str	r2, [r3, #32]
}
 8007c60:	bf00      	nop
 8007c62:	371c      	adds	r7, #28
 8007c64:	46bd      	mov	sp, r7
 8007c66:	f85d 7b04 	ldr.w	r7, [sp], #4
 8007c6a:	4770      	bx	lr
 8007c6c:	40010000 	.word	0x40010000
 8007c70:	40010400 	.word	0x40010400

08007c74 <TIM_OC2_SetConfig>:
  * @param  TIMx to select the TIM peripheral
  * @param  OC_Config The output configuration structure
  * @retval None
  */
void TIM_OC2_SetConfig(TIM_TypeDef *TIMx, const TIM_OC_InitTypeDef *OC_Config)
{
 8007c74:	b480      	push	{r7}
 8007c76:	b087      	sub	sp, #28
 8007c78:	af00      	add	r7, sp, #0
 8007c7a:	6078      	str	r0, [r7, #4]
 8007c7c:	6039      	str	r1, [r7, #0]
  uint32_t tmpccmrx;
  uint32_t tmpccer;
  uint32_t tmpcr2;

  /* Get the TIMx CCER register value */
  tmpccer = TIMx->CCER;
 8007c7e:	687b      	ldr	r3, [r7, #4]
 8007c80:	6a1b      	ldr	r3, [r3, #32]
 8007c82:	617b      	str	r3, [r7, #20]

  /* Disable the Channel 2: Reset the CC2E Bit */
  TIMx->CCER &= ~TIM_CCER_CC2E;
 8007c84:	687b      	ldr	r3, [r7, #4]
 8007c86:	6a1b      	ldr	r3, [r3, #32]
 8007c88:	f023 0210 	bic.w	r2, r3, #16
 8007c8c:	687b      	ldr	r3, [r7, #4]
 8007c8e:	621a      	str	r2, [r3, #32]

  /* Get the TIMx CR2 register value */
  tmpcr2 =  TIMx->CR2;
 8007c90:	687b      	ldr	r3, [r7, #4]
 8007c92:	685b      	ldr	r3, [r3, #4]
 8007c94:	613b      	str	r3, [r7, #16]

  /* Get the TIMx CCMR1 register value */
  tmpccmrx = TIMx->CCMR1;
 8007c96:	687b      	ldr	r3, [r7, #4]
 8007c98:	699b      	ldr	r3, [r3, #24]
 8007c9a:	60fb      	str	r3, [r7, #12]

  /* Reset the Output Compare mode and Capture/Compare selection Bits */
  tmpccmrx &= ~TIM_CCMR1_OC2M;
 8007c9c:	68fb      	ldr	r3, [r7, #12]
 8007c9e:	f423 43e0 	bic.w	r3, r3, #28672	@ 0x7000
 8007ca2:	60fb      	str	r3, [r7, #12]
  tmpccmrx &= ~TIM_CCMR1_CC2S;
 8007ca4:	68fb      	ldr	r3, [r7, #12]
 8007ca6:	f423 7340 	bic.w	r3, r3, #768	@ 0x300
 8007caa:	60fb      	str	r3, [r7, #12]

  /* Select the Output Compare Mode */
  tmpccmrx |= (OC_Config->OCMode << 8U);
 8007cac:	683b      	ldr	r3, [r7, #0]
 8007cae:	681b      	ldr	r3, [r3, #0]
 8007cb0:	021b      	lsls	r3, r3, #8
 8007cb2:	68fa      	ldr	r2, [r7, #12]
 8007cb4:	4313      	orrs	r3, r2
 8007cb6:	60fb      	str	r3, [r7, #12]

  /* Reset the Output Polarity level */
  tmpccer &= ~TIM_CCER_CC2P;
 8007cb8:	697b      	ldr	r3, [r7, #20]
 8007cba:	f023 0320 	bic.w	r3, r3, #32
 8007cbe:	617b      	str	r3, [r7, #20]
  /* Set the Output Compare Polarity */
  tmpccer |= (OC_Config->OCPolarity << 4U);
 8007cc0:	683b      	ldr	r3, [r7, #0]
 8007cc2:	689b      	ldr	r3, [r3, #8]
 8007cc4:	011b      	lsls	r3, r3, #4
 8007cc6:	697a      	ldr	r2, [r7, #20]
 8007cc8:	4313      	orrs	r3, r2
 8007cca:	617b      	str	r3, [r7, #20]

  if (IS_TIM_CCXN_INSTANCE(TIMx, TIM_CHANNEL_2))
 8007ccc:	687b      	ldr	r3, [r7, #4]
 8007cce:	4a22      	ldr	r2, [pc, #136]	@ (8007d58 <TIM_OC2_SetConfig+0xe4>)
 8007cd0:	4293      	cmp	r3, r2
 8007cd2:	d003      	beq.n	8007cdc <TIM_OC2_SetConfig+0x68>
 8007cd4:	687b      	ldr	r3, [r7, #4]
 8007cd6:	4a21      	ldr	r2, [pc, #132]	@ (8007d5c <TIM_OC2_SetConfig+0xe8>)
 8007cd8:	4293      	cmp	r3, r2
 8007cda:	d10d      	bne.n	8007cf8 <TIM_OC2_SetConfig+0x84>
  {
    assert_param(IS_TIM_OCN_POLARITY(OC_Config->OCNPolarity));

    /* Reset the Output N Polarity level */
    tmpccer &= ~TIM_CCER_CC2NP;
 8007cdc:	697b      	ldr	r3, [r7, #20]
 8007cde:	f023 0380 	bic.w	r3, r3, #128	@ 0x80
 8007ce2:	617b      	str	r3, [r7, #20]
    /* Set the Output N Polarity */
    tmpccer |= (OC_Config->OCNPolarity << 4U);
 8007ce4:	683b      	ldr	r3, [r7, #0]
 8007ce6:	68db      	ldr	r3, [r3, #12]
 8007ce8:	011b      	lsls	r3, r3, #4
 8007cea:	697a      	ldr	r2, [r7, #20]
 8007cec:	4313      	orrs	r3, r2
 8007cee:	617b      	str	r3, [r7, #20]
    /* Reset the Output N State */
    tmpccer &= ~TIM_CCER_CC2NE;
 8007cf0:	697b      	ldr	r3, [r7, #20]
 8007cf2:	f023 0340 	bic.w	r3, r3, #64	@ 0x40
 8007cf6:	617b      	str	r3, [r7, #20]
  }

  if (IS_TIM_BREAK_INSTANCE(TIMx))
 8007cf8:	687b      	ldr	r3, [r7, #4]
 8007cfa:	4a17      	ldr	r2, [pc, #92]	@ (8007d58 <TIM_OC2_SetConfig+0xe4>)
 8007cfc:	4293      	cmp	r3, r2
 8007cfe:	d003      	beq.n	8007d08 <TIM_OC2_SetConfig+0x94>
 8007d00:	687b      	ldr	r3, [r7, #4]
 8007d02:	4a16      	ldr	r2, [pc, #88]	@ (8007d5c <TIM_OC2_SetConfig+0xe8>)
 8007d04:	4293      	cmp	r3, r2
 8007d06:	d113      	bne.n	8007d30 <TIM_OC2_SetConfig+0xbc>
    /* Check parameters */
    assert_param(IS_TIM_OCNIDLE_STATE(OC_Config->OCNIdleState));
    assert_param(IS_TIM_OCIDLE_STATE(OC_Config->OCIdleState));

    /* Reset the Output Compare and Output Compare N IDLE State */
    tmpcr2 &= ~TIM_CR2_OIS2;
 8007d08:	693b      	ldr	r3, [r7, #16]
 8007d0a:	f423 6380 	bic.w	r3, r3, #1024	@ 0x400
 8007d0e:	613b      	str	r3, [r7, #16]
    tmpcr2 &= ~TIM_CR2_OIS2N;
 8007d10:	693b      	ldr	r3, [r7, #16]
 8007d12:	f423 6300 	bic.w	r3, r3, #2048	@ 0x800
 8007d16:	613b      	str	r3, [r7, #16]
    /* Set the Output Idle state */
    tmpcr2 |= (OC_Config->OCIdleState << 2U);
 8007d18:	683b      	ldr	r3, [r7, #0]
 8007d1a:	695b      	ldr	r3, [r3, #20]
 8007d1c:	009b      	lsls	r3, r3, #2
 8007d1e:	693a      	ldr	r2, [r7, #16]
 8007d20:	4313      	orrs	r3, r2
 8007d22:	613b      	str	r3, [r7, #16]
    /* Set the Output N Idle state */
    tmpcr2 |= (OC_Config->OCNIdleState << 2U);
 8007d24:	683b      	ldr	r3, [r7, #0]
 8007d26:	699b      	ldr	r3, [r3, #24]
 8007d28:	009b      	lsls	r3, r3, #2
 8007d2a:	693a      	ldr	r2, [r7, #16]
 8007d2c:	4313      	orrs	r3, r2
 8007d2e:	613b      	str	r3, [r7, #16]
  }

  /* Write to TIMx CR2 */
  TIMx->CR2 = tmpcr2;
 8007d30:	687b      	ldr	r3, [r7, #4]
 8007d32:	693a      	ldr	r2, [r7, #16]
 8007d34:	605a      	str	r2, [r3, #4]

  /* Write to TIMx CCMR1 */
  TIMx->CCMR1 = tmpccmrx;
 8007d36:	687b      	ldr	r3, [r7, #4]
 8007d38:	68fa      	ldr	r2, [r7, #12]
 8007d3a:	619a      	str	r2, [r3, #24]

  /* Set the Capture Compare Register value */
  TIMx->CCR2 = OC_Config->Pulse;
 8007d3c:	683b      	ldr	r3, [r7, #0]
 8007d3e:	685a      	ldr	r2, [r3, #4]
 8007d40:	687b      	ldr	r3, [r7, #4]
 8007d42:	639a      	str	r2, [r3, #56]	@ 0x38

  /* Write to TIMx CCER */
  TIMx->CCER = tmpccer;
 8007d44:	687b      	ldr	r3, [r7, #4]
 8007d46:	697a      	ldr	r2, [r7, #20]
 8007d48:	621a      	str	r2, [r3, #32]
}
 8007d4a:	bf00      	nop
 8007d4c:	371c      	adds	r7, #28
 8007d4e:	46bd      	mov	sp, r7
 8007d50:	f85d 7b04 	ldr.w	r7, [sp], #4
 8007d54:	4770      	bx	lr
 8007d56:	bf00      	nop
 8007d58:	40010000 	.word	0x40010000
 8007d5c:	40010400 	.word	0x40010400

08007d60 <TIM_OC3_SetConfig>:
  * @param  TIMx to select the TIM peripheral
  * @param  OC_Config The output configuration structure
  * @retval None
  */
static void TIM_OC3_SetConfig(TIM_TypeDef *TIMx, const TIM_OC_InitTypeDef *OC_Config)
{
 8007d60:	b480      	push	{r7}
 8007d62:	b087      	sub	sp, #28
 8007d64:	af00      	add	r7, sp, #0
 8007d66:	6078      	str	r0, [r7, #4]
 8007d68:	6039      	str	r1, [r7, #0]
  uint32_t tmpccmrx;
  uint32_t tmpccer;
  uint32_t tmpcr2;

  /* Get the TIMx CCER register value */
  tmpccer = TIMx->CCER;
 8007d6a:	687b      	ldr	r3, [r7, #4]
 8007d6c:	6a1b      	ldr	r3, [r3, #32]
 8007d6e:	617b      	str	r3, [r7, #20]

  /* Disable the Channel 3: Reset the CC2E Bit */
  TIMx->CCER &= ~TIM_CCER_CC3E;
 8007d70:	687b      	ldr	r3, [r7, #4]
 8007d72:	6a1b      	ldr	r3, [r3, #32]
 8007d74:	f423 7280 	bic.w	r2, r3, #256	@ 0x100
 8007d78:	687b      	ldr	r3, [r7, #4]
 8007d7a:	621a      	str	r2, [r3, #32]

  /* Get the TIMx CR2 register value */
  tmpcr2 =  TIMx->CR2;
 8007d7c:	687b      	ldr	r3, [r7, #4]
 8007d7e:	685b      	ldr	r3, [r3, #4]
 8007d80:	613b      	str	r3, [r7, #16]

  /* Get the TIMx CCMR2 register value */
  tmpccmrx = TIMx->CCMR2;
 8007d82:	687b      	ldr	r3, [r7, #4]
 8007d84:	69db      	ldr	r3, [r3, #28]
 8007d86:	60fb      	str	r3, [r7, #12]

  /* Reset the Output Compare mode and Capture/Compare selection Bits */
  tmpccmrx &= ~TIM_CCMR2_OC3M;
 8007d88:	68fb      	ldr	r3, [r7, #12]
 8007d8a:	f023 0370 	bic.w	r3, r3, #112	@ 0x70
 8007d8e:	60fb      	str	r3, [r7, #12]
  tmpccmrx &= ~TIM_CCMR2_CC3S;
 8007d90:	68fb      	ldr	r3, [r7, #12]
 8007d92:	f023 0303 	bic.w	r3, r3, #3
 8007d96:	60fb      	str	r3, [r7, #12]
  /* Select the Output Compare Mode */
  tmpccmrx |= OC_Config->OCMode;
 8007d98:	683b      	ldr	r3, [r7, #0]
 8007d9a:	681b      	ldr	r3, [r3, #0]
 8007d9c:	68fa      	ldr	r2, [r7, #12]
 8007d9e:	4313      	orrs	r3, r2
 8007da0:	60fb      	str	r3, [r7, #12]

  /* Reset the Output Polarity level */
  tmpccer &= ~TIM_CCER_CC3P;
 8007da2:	697b      	ldr	r3, [r7, #20]
 8007da4:	f423 7300 	bic.w	r3, r3, #512	@ 0x200
 8007da8:	617b      	str	r3, [r7, #20]
  /* Set the Output Compare Polarity */
  tmpccer |= (OC_Config->OCPolarity << 8U);
 8007daa:	683b      	ldr	r3, [r7, #0]
 8007dac:	689b      	ldr	r3, [r3, #8]
 8007dae:	021b      	lsls	r3, r3, #8
 8007db0:	697a      	ldr	r2, [r7, #20]
 8007db2:	4313      	orrs	r3, r2
 8007db4:	617b      	str	r3, [r7, #20]

  if (IS_TIM_CCXN_INSTANCE(TIMx, TIM_CHANNEL_3))
 8007db6:	687b      	ldr	r3, [r7, #4]
 8007db8:	4a21      	ldr	r2, [pc, #132]	@ (8007e40 <TIM_OC3_SetConfig+0xe0>)
 8007dba:	4293      	cmp	r3, r2
 8007dbc:	d003      	beq.n	8007dc6 <TIM_OC3_SetConfig+0x66>
 8007dbe:	687b      	ldr	r3, [r7, #4]
 8007dc0:	4a20      	ldr	r2, [pc, #128]	@ (8007e44 <TIM_OC3_SetConfig+0xe4>)
 8007dc2:	4293      	cmp	r3, r2
 8007dc4:	d10d      	bne.n	8007de2 <TIM_OC3_SetConfig+0x82>
  {
    assert_param(IS_TIM_OCN_POLARITY(OC_Config->OCNPolarity));

    /* Reset the Output N Polarity level */
    tmpccer &= ~TIM_CCER_CC3NP;
 8007dc6:	697b      	ldr	r3, [r7, #20]
 8007dc8:	f423 6300 	bic.w	r3, r3, #2048	@ 0x800
 8007dcc:	617b      	str	r3, [r7, #20]
    /* Set the Output N Polarity */
    tmpccer |= (OC_Config->OCNPolarity << 8U);
 8007dce:	683b      	ldr	r3, [r7, #0]
 8007dd0:	68db      	ldr	r3, [r3, #12]
 8007dd2:	021b      	lsls	r3, r3, #8
 8007dd4:	697a      	ldr	r2, [r7, #20]
 8007dd6:	4313      	orrs	r3, r2
 8007dd8:	617b      	str	r3, [r7, #20]
    /* Reset the Output N State */
    tmpccer &= ~TIM_CCER_CC3NE;
 8007dda:	697b      	ldr	r3, [r7, #20]
 8007ddc:	f423 6380 	bic.w	r3, r3, #1024	@ 0x400
 8007de0:	617b      	str	r3, [r7, #20]
  }

  if (IS_TIM_BREAK_INSTANCE(TIMx))
 8007de2:	687b      	ldr	r3, [r7, #4]
 8007de4:	4a16      	ldr	r2, [pc, #88]	@ (8007e40 <TIM_OC3_SetConfig+0xe0>)
 8007de6:	4293      	cmp	r3, r2
 8007de8:	d003      	beq.n	8007df2 <TIM_OC3_SetConfig+0x92>
 8007dea:	687b      	ldr	r3, [r7, #4]
 8007dec:	4a15      	ldr	r2, [pc, #84]	@ (8007e44 <TIM_OC3_SetConfig+0xe4>)
 8007dee:	4293      	cmp	r3, r2
 8007df0:	d113      	bne.n	8007e1a <TIM_OC3_SetConfig+0xba>
    /* Check parameters */
    assert_param(IS_TIM_OCNIDLE_STATE(OC_Config->OCNIdleState));
    assert_param(IS_TIM_OCIDLE_STATE(OC_Config->OCIdleState));

    /* Reset the Output Compare and Output Compare N IDLE State */
    tmpcr2 &= ~TIM_CR2_OIS3;
 8007df2:	693b      	ldr	r3, [r7, #16]
 8007df4:	f423 5380 	bic.w	r3, r3, #4096	@ 0x1000
 8007df8:	613b      	str	r3, [r7, #16]
    tmpcr2 &= ~TIM_CR2_OIS3N;
 8007dfa:	693b      	ldr	r3, [r7, #16]
 8007dfc:	f423 5300 	bic.w	r3, r3, #8192	@ 0x2000
 8007e00:	613b      	str	r3, [r7, #16]
    /* Set the Output Idle state */
    tmpcr2 |= (OC_Config->OCIdleState << 4U);
 8007e02:	683b      	ldr	r3, [r7, #0]
 8007e04:	695b      	ldr	r3, [r3, #20]
 8007e06:	011b      	lsls	r3, r3, #4
 8007e08:	693a      	ldr	r2, [r7, #16]
 8007e0a:	4313      	orrs	r3, r2
 8007e0c:	613b      	str	r3, [r7, #16]
    /* Set the Output N Idle state */
    tmpcr2 |= (OC_Config->OCNIdleState << 4U);
 8007e0e:	683b      	ldr	r3, [r7, #0]
 8007e10:	699b      	ldr	r3, [r3, #24]
 8007e12:	011b      	lsls	r3, r3, #4
 8007e14:	693a      	ldr	r2, [r7, #16]
 8007e16:	4313      	orrs	r3, r2
 8007e18:	613b      	str	r3, [r7, #16]
  }

  /* Write to TIMx CR2 */
  TIMx->CR2 = tmpcr2;
 8007e1a:	687b      	ldr	r3, [r7, #4]
 8007e1c:	693a      	ldr	r2, [r7, #16]
 8007e1e:	605a      	str	r2, [r3, #4]

  /* Write to TIMx CCMR2 */
  TIMx->CCMR2 = tmpccmrx;
 8007e20:	687b      	ldr	r3, [r7, #4]
 8007e22:	68fa      	ldr	r2, [r7, #12]
 8007e24:	61da      	str	r2, [r3, #28]

  /* Set the Capture Compare Register value */
  TIMx->CCR3 = OC_Config->Pulse;
 8007e26:	683b      	ldr	r3, [r7, #0]
 8007e28:	685a      	ldr	r2, [r3, #4]
 8007e2a:	687b      	ldr	r3, [r7, #4]
 8007e2c:	63da      	str	r2, [r3, #60]	@ 0x3c

  /* Write to TIMx CCER */
  TIMx->CCER = tmpccer;
 8007e2e:	687b      	ldr	r3, [r7, #4]
 8007e30:	697a      	ldr	r2, [r7, #20]
 8007e32:	621a      	str	r2, [r3, #32]
}
 8007e34:	bf00      	nop
 8007e36:	371c      	adds	r7, #28
 8007e38:	46bd      	mov	sp, r7
 8007e3a:	f85d 7b04 	ldr.w	r7, [sp], #4
 8007e3e:	4770      	bx	lr
 8007e40:	40010000 	.word	0x40010000
 8007e44:	40010400 	.word	0x40010400

08007e48 <TIM_OC4_SetConfig>:
  * @param  TIMx to select the TIM peripheral
  * @param  OC_Config The output configuration structure
  * @retval None
  */
static void TIM_OC4_SetConfig(TIM_TypeDef *TIMx, const TIM_OC_InitTypeDef *OC_Config)
{
 8007e48:	b480      	push	{r7}
 8007e4a:	b087      	sub	sp, #28
 8007e4c:	af00      	add	r7, sp, #0
 8007e4e:	6078      	str	r0, [r7, #4]
 8007e50:	6039      	str	r1, [r7, #0]
  uint32_t tmpccmrx;
  uint32_t tmpccer;
  uint32_t tmpcr2;

  /* Get the TIMx CCER register value */
  tmpccer = TIMx->CCER;
 8007e52:	687b      	ldr	r3, [r7, #4]
 8007e54:	6a1b      	ldr	r3, [r3, #32]
 8007e56:	613b      	str	r3, [r7, #16]

  /* Disable the Channel 4: Reset the CC4E Bit */
  TIMx->CCER &= ~TIM_CCER_CC4E;
 8007e58:	687b      	ldr	r3, [r7, #4]
 8007e5a:	6a1b      	ldr	r3, [r3, #32]
 8007e5c:	f423 5280 	bic.w	r2, r3, #4096	@ 0x1000
 8007e60:	687b      	ldr	r3, [r7, #4]
 8007e62:	621a      	str	r2, [r3, #32]

  /* Get the TIMx CR2 register value */
  tmpcr2 =  TIMx->CR2;
 8007e64:	687b      	ldr	r3, [r7, #4]
 8007e66:	685b      	ldr	r3, [r3, #4]
 8007e68:	617b      	str	r3, [r7, #20]

  /* Get the TIMx CCMR2 register value */
  tmpccmrx = TIMx->CCMR2;
 8007e6a:	687b      	ldr	r3, [r7, #4]
 8007e6c:	69db      	ldr	r3, [r3, #28]
 8007e6e:	60fb      	str	r3, [r7, #12]

  /* Reset the Output Compare mode and Capture/Compare selection Bits */
  tmpccmrx &= ~TIM_CCMR2_OC4M;
 8007e70:	68fb      	ldr	r3, [r7, #12]
 8007e72:	f423 43e0 	bic.w	r3, r3, #28672	@ 0x7000
 8007e76:	60fb      	str	r3, [r7, #12]
  tmpccmrx &= ~TIM_CCMR2_CC4S;
 8007e78:	68fb      	ldr	r3, [r7, #12]
 8007e7a:	f423 7340 	bic.w	r3, r3, #768	@ 0x300
 8007e7e:	60fb      	str	r3, [r7, #12]

  /* Select the Output Compare Mode */
  tmpccmrx |= (OC_Config->OCMode << 8U);
 8007e80:	683b      	ldr	r3, [r7, #0]
 8007e82:	681b      	ldr	r3, [r3, #0]
 8007e84:	021b      	lsls	r3, r3, #8
 8007e86:	68fa      	ldr	r2, [r7, #12]
 8007e88:	4313      	orrs	r3, r2
 8007e8a:	60fb      	str	r3, [r7, #12]

  /* Reset the Output Polarity level */
  tmpccer &= ~TIM_CCER_CC4P;
 8007e8c:	693b      	ldr	r3, [r7, #16]
 8007e8e:	f423 5300 	bic.w	r3, r3, #8192	@ 0x2000
 8007e92:	613b      	str	r3, [r7, #16]
  /* Set the Output Compare Polarity */
  tmpccer |= (OC_Config->OCPolarity << 12U);
 8007e94:	683b      	ldr	r3, [r7, #0]
 8007e96:	689b      	ldr	r3, [r3, #8]
 8007e98:	031b      	lsls	r3, r3, #12
 8007e9a:	693a      	ldr	r2, [r7, #16]
 8007e9c:	4313      	orrs	r3, r2
 8007e9e:	613b      	str	r3, [r7, #16]

  if (IS_TIM_BREAK_INSTANCE(TIMx))
 8007ea0:	687b      	ldr	r3, [r7, #4]
 8007ea2:	4a12      	ldr	r2, [pc, #72]	@ (8007eec <TIM_OC4_SetConfig+0xa4>)
 8007ea4:	4293      	cmp	r3, r2
 8007ea6:	d003      	beq.n	8007eb0 <TIM_OC4_SetConfig+0x68>
 8007ea8:	687b      	ldr	r3, [r7, #4]
 8007eaa:	4a11      	ldr	r2, [pc, #68]	@ (8007ef0 <TIM_OC4_SetConfig+0xa8>)
 8007eac:	4293      	cmp	r3, r2
 8007eae:	d109      	bne.n	8007ec4 <TIM_OC4_SetConfig+0x7c>
  {
    /* Check parameters */
    assert_param(IS_TIM_OCIDLE_STATE(OC_Config->OCIdleState));

    /* Reset the Output Compare IDLE State */
    tmpcr2 &= ~TIM_CR2_OIS4;
 8007eb0:	697b      	ldr	r3, [r7, #20]
 8007eb2:	f423 4380 	bic.w	r3, r3, #16384	@ 0x4000
 8007eb6:	617b      	str	r3, [r7, #20]

    /* Set the Output Idle state */
    tmpcr2 |= (OC_Config->OCIdleState << 6U);
 8007eb8:	683b      	ldr	r3, [r7, #0]
 8007eba:	695b      	ldr	r3, [r3, #20]
 8007ebc:	019b      	lsls	r3, r3, #6
 8007ebe:	697a      	ldr	r2, [r7, #20]
 8007ec0:	4313      	orrs	r3, r2
 8007ec2:	617b      	str	r3, [r7, #20]
  }

  /* Write to TIMx CR2 */
  TIMx->CR2 = tmpcr2;
 8007ec4:	687b      	ldr	r3, [r7, #4]
 8007ec6:	697a      	ldr	r2, [r7, #20]
 8007ec8:	605a      	str	r2, [r3, #4]

  /* Write to TIMx CCMR2 */
  TIMx->CCMR2 = tmpccmrx;
 8007eca:	687b      	ldr	r3, [r7, #4]
 8007ecc:	68fa      	ldr	r2, [r7, #12]
 8007ece:	61da      	str	r2, [r3, #28]

  /* Set the Capture Compare Register value */
  TIMx->CCR4 = OC_Config->Pulse;
 8007ed0:	683b      	ldr	r3, [r7, #0]
 8007ed2:	685a      	ldr	r2, [r3, #4]
 8007ed4:	687b      	ldr	r3, [r7, #4]
 8007ed6:	641a      	str	r2, [r3, #64]	@ 0x40

  /* Write to TIMx CCER */
  TIMx->CCER = tmpccer;
 8007ed8:	687b      	ldr	r3, [r7, #4]
 8007eda:	693a      	ldr	r2, [r7, #16]
 8007edc:	621a      	str	r2, [r3, #32]
}
 8007ede:	bf00      	nop
 8007ee0:	371c      	adds	r7, #28
 8007ee2:	46bd      	mov	sp, r7
 8007ee4:	f85d 7b04 	ldr.w	r7, [sp], #4
 8007ee8:	4770      	bx	lr
 8007eea:	bf00      	nop
 8007eec:	40010000 	.word	0x40010000
 8007ef0:	40010400 	.word	0x40010400

08007ef4 <TIM_TI1_ConfigInputStage>:
  * @param  TIM_ICFilter Specifies the Input Capture Filter.
  *          This parameter must be a value between 0x00 and 0x0F.
  * @retval None
  */
static void TIM_TI1_ConfigInputStage(TIM_TypeDef *TIMx, uint32_t TIM_ICPolarity, uint32_t TIM_ICFilter)
{
 8007ef4:	b480      	push	{r7}
 8007ef6:	b087      	sub	sp, #28
 8007ef8:	af00      	add	r7, sp, #0
 8007efa:	60f8      	str	r0, [r7, #12]
 8007efc:	60b9      	str	r1, [r7, #8]
 8007efe:	607a      	str	r2, [r7, #4]
  uint32_t tmpccmr1;
  uint32_t tmpccer;

  /* Disable the Channel 1: Reset the CC1E Bit */
  tmpccer = TIMx->CCER;
 8007f00:	68fb      	ldr	r3, [r7, #12]
 8007f02:	6a1b      	ldr	r3, [r3, #32]
 8007f04:	617b      	str	r3, [r7, #20]
  TIMx->CCER &= ~TIM_CCER_CC1E;
 8007f06:	68fb      	ldr	r3, [r7, #12]
 8007f08:	6a1b      	ldr	r3, [r3, #32]
 8007f0a:	f023 0201 	bic.w	r2, r3, #1
 8007f0e:	68fb      	ldr	r3, [r7, #12]
 8007f10:	621a      	str	r2, [r3, #32]
  tmpccmr1 = TIMx->CCMR1;
 8007f12:	68fb      	ldr	r3, [r7, #12]
 8007f14:	699b      	ldr	r3, [r3, #24]
 8007f16:	613b      	str	r3, [r7, #16]

  /* Set the filter */
  tmpccmr1 &= ~TIM_CCMR1_IC1F;
 8007f18:	693b      	ldr	r3, [r7, #16]
 8007f1a:	f023 03f0 	bic.w	r3, r3, #240	@ 0xf0
 8007f1e:	613b      	str	r3, [r7, #16]
  tmpccmr1 |= (TIM_ICFilter << 4U);
 8007f20:	687b      	ldr	r3, [r7, #4]
 8007f22:	011b      	lsls	r3, r3, #4
 8007f24:	693a      	ldr	r2, [r7, #16]
 8007f26:	4313      	orrs	r3, r2
 8007f28:	613b      	str	r3, [r7, #16]

  /* Select the Polarity and set the CC1E Bit */
  tmpccer &= ~(TIM_CCER_CC1P | TIM_CCER_CC1NP);
 8007f2a:	697b      	ldr	r3, [r7, #20]
 8007f2c:	f023 030a 	bic.w	r3, r3, #10
 8007f30:	617b      	str	r3, [r7, #20]
  tmpccer |= TIM_ICPolarity;
 8007f32:	697a      	ldr	r2, [r7, #20]
 8007f34:	68bb      	ldr	r3, [r7, #8]
 8007f36:	4313      	orrs	r3, r2
 8007f38:	617b      	str	r3, [r7, #20]

  /* Write to TIMx CCMR1 and CCER registers */
  TIMx->CCMR1 = tmpccmr1;
 8007f3a:	68fb      	ldr	r3, [r7, #12]
 8007f3c:	693a      	ldr	r2, [r7, #16]
 8007f3e:	619a      	str	r2, [r3, #24]
  TIMx->CCER = tmpccer;
 8007f40:	68fb      	ldr	r3, [r7, #12]
 8007f42:	697a      	ldr	r2, [r7, #20]
 8007f44:	621a      	str	r2, [r3, #32]
}
 8007f46:	bf00      	nop
 8007f48:	371c      	adds	r7, #28
 8007f4a:	46bd      	mov	sp, r7
 8007f4c:	f85d 7b04 	ldr.w	r7, [sp], #4
 8007f50:	4770      	bx	lr

08007f52 <TIM_TI2_ConfigInputStage>:
  * @param  TIM_ICFilter Specifies the Input Capture Filter.
  *          This parameter must be a value between 0x00 and 0x0F.
  * @retval None
  */
static void TIM_TI2_ConfigInputStage(TIM_TypeDef *TIMx, uint32_t TIM_ICPolarity, uint32_t TIM_ICFilter)
{
 8007f52:	b480      	push	{r7}
 8007f54:	b087      	sub	sp, #28
 8007f56:	af00      	add	r7, sp, #0
 8007f58:	60f8      	str	r0, [r7, #12]
 8007f5a:	60b9      	str	r1, [r7, #8]
 8007f5c:	607a      	str	r2, [r7, #4]
  uint32_t tmpccmr1;
  uint32_t tmpccer;

  /* Disable the Channel 2: Reset the CC2E Bit */
  tmpccer = TIMx->CCER;
 8007f5e:	68fb      	ldr	r3, [r7, #12]
 8007f60:	6a1b      	ldr	r3, [r3, #32]
 8007f62:	617b      	str	r3, [r7, #20]
  TIMx->CCER &= ~TIM_CCER_CC2E;
 8007f64:	68fb      	ldr	r3, [r7, #12]
 8007f66:	6a1b      	ldr	r3, [r3, #32]
 8007f68:	f023 0210 	bic.w	r2, r3, #16
 8007f6c:	68fb      	ldr	r3, [r7, #12]
 8007f6e:	621a      	str	r2, [r3, #32]
  tmpccmr1 = TIMx->CCMR1;
 8007f70:	68fb      	ldr	r3, [r7, #12]
 8007f72:	699b      	ldr	r3, [r3, #24]
 8007f74:	613b      	str	r3, [r7, #16]

  /* Set the filter */
  tmpccmr1 &= ~TIM_CCMR1_IC2F;
 8007f76:	693b      	ldr	r3, [r7, #16]
 8007f78:	f423 4370 	bic.w	r3, r3, #61440	@ 0xf000
 8007f7c:	613b      	str	r3, [r7, #16]
  tmpccmr1 |= (TIM_ICFilter << 12U);
 8007f7e:	687b      	ldr	r3, [r7, #4]
 8007f80:	031b      	lsls	r3, r3, #12
 8007f82:	693a      	ldr	r2, [r7, #16]
 8007f84:	4313      	orrs	r3, r2
 8007f86:	613b      	str	r3, [r7, #16]

  /* Select the Polarity and set the CC2E Bit */
  tmpccer &= ~(TIM_CCER_CC2P | TIM_CCER_CC2NP);
 8007f88:	697b      	ldr	r3, [r7, #20]
 8007f8a:	f023 03a0 	bic.w	r3, r3, #160	@ 0xa0
 8007f8e:	617b      	str	r3, [r7, #20]
  tmpccer |= (TIM_ICPolarity << 4U);
 8007f90:	68bb      	ldr	r3, [r7, #8]
 8007f92:	011b      	lsls	r3, r3, #4
 8007f94:	697a      	ldr	r2, [r7, #20]
 8007f96:	4313      	orrs	r3, r2
 8007f98:	617b      	str	r3, [r7, #20]

  /* Write to TIMx CCMR1 and CCER registers */
  TIMx->CCMR1 = tmpccmr1 ;
 8007f9a:	68fb      	ldr	r3, [r7, #12]
 8007f9c:	693a      	ldr	r2, [r7, #16]
 8007f9e:	619a      	str	r2, [r3, #24]
  TIMx->CCER = tmpccer;
 8007fa0:	68fb      	ldr	r3, [r7, #12]
 8007fa2:	697a      	ldr	r2, [r7, #20]
 8007fa4:	621a      	str	r2, [r3, #32]
}
 8007fa6:	bf00      	nop
 8007fa8:	371c      	adds	r7, #28
 8007faa:	46bd      	mov	sp, r7
 8007fac:	f85d 7b04 	ldr.w	r7, [sp], #4
 8007fb0:	4770      	bx	lr

08007fb2 <TIM_ITRx_SetConfig>:
  *            @arg TIM_TS_TI2FP2: Filtered Timer Input 2
  *            @arg TIM_TS_ETRF: External Trigger input
  * @retval None
  */
static void TIM_ITRx_SetConfig(TIM_TypeDef *TIMx, uint32_t InputTriggerSource)
{
 8007fb2:	b480      	push	{r7}
 8007fb4:	b085      	sub	sp, #20
 8007fb6:	af00      	add	r7, sp, #0
 8007fb8:	6078      	str	r0, [r7, #4]
 8007fba:	6039      	str	r1, [r7, #0]
  uint32_t tmpsmcr;

  /* Get the TIMx SMCR register value */
  tmpsmcr = TIMx->SMCR;
 8007fbc:	687b      	ldr	r3, [r7, #4]
 8007fbe:	689b      	ldr	r3, [r3, #8]
 8007fc0:	60fb      	str	r3, [r7, #12]
  /* Reset the TS Bits */
  tmpsmcr &= ~TIM_SMCR_TS;
 8007fc2:	68fb      	ldr	r3, [r7, #12]
 8007fc4:	f023 0370 	bic.w	r3, r3, #112	@ 0x70
 8007fc8:	60fb      	str	r3, [r7, #12]
  /* Set the Input Trigger source and the slave mode*/
  tmpsmcr |= (InputTriggerSource | TIM_SLAVEMODE_EXTERNAL1);
 8007fca:	683a      	ldr	r2, [r7, #0]
 8007fcc:	68fb      	ldr	r3, [r7, #12]
 8007fce:	4313      	orrs	r3, r2
 8007fd0:	f043 0307 	orr.w	r3, r3, #7
 8007fd4:	60fb      	str	r3, [r7, #12]
  /* Write to TIMx SMCR */
  TIMx->SMCR = tmpsmcr;
 8007fd6:	687b      	ldr	r3, [r7, #4]
 8007fd8:	68fa      	ldr	r2, [r7, #12]
 8007fda:	609a      	str	r2, [r3, #8]
}
 8007fdc:	bf00      	nop
 8007fde:	3714      	adds	r7, #20
 8007fe0:	46bd      	mov	sp, r7
 8007fe2:	f85d 7b04 	ldr.w	r7, [sp], #4
 8007fe6:	4770      	bx	lr

08007fe8 <TIM_ETR_SetConfig>:
  *          This parameter must be a value between 0x00 and 0x0F
  * @retval None
  */
void TIM_ETR_SetConfig(TIM_TypeDef *TIMx, uint32_t TIM_ExtTRGPrescaler,
                       uint32_t TIM_ExtTRGPolarity, uint32_t ExtTRGFilter)
{
 8007fe8:	b480      	push	{r7}
 8007fea:	b087      	sub	sp, #28
 8007fec:	af00      	add	r7, sp, #0
 8007fee:	60f8      	str	r0, [r7, #12]
 8007ff0:	60b9      	str	r1, [r7, #8]
 8007ff2:	607a      	str	r2, [r7, #4]
 8007ff4:	603b      	str	r3, [r7, #0]
  uint32_t tmpsmcr;

  tmpsmcr = TIMx->SMCR;
 8007ff6:	68fb      	ldr	r3, [r7, #12]
 8007ff8:	689b      	ldr	r3, [r3, #8]
 8007ffa:	617b      	str	r3, [r7, #20]

  /* Reset the ETR Bits */
  tmpsmcr &= ~(TIM_SMCR_ETF | TIM_SMCR_ETPS | TIM_SMCR_ECE | TIM_SMCR_ETP);
 8007ffc:	697b      	ldr	r3, [r7, #20]
 8007ffe:	f423 437f 	bic.w	r3, r3, #65280	@ 0xff00
 8008002:	617b      	str	r3, [r7, #20]

  /* Set the Prescaler, the Filter value and the Polarity */
  tmpsmcr |= (uint32_t)(TIM_ExtTRGPrescaler | (TIM_ExtTRGPolarity | (ExtTRGFilter << 8U)));
 8008004:	683b      	ldr	r3, [r7, #0]
 8008006:	021a      	lsls	r2, r3, #8
 8008008:	687b      	ldr	r3, [r7, #4]
 800800a:	431a      	orrs	r2, r3
 800800c:	68bb      	ldr	r3, [r7, #8]
 800800e:	4313      	orrs	r3, r2
 8008010:	697a      	ldr	r2, [r7, #20]
 8008012:	4313      	orrs	r3, r2
 8008014:	617b      	str	r3, [r7, #20]

  /* Write to TIMx SMCR */
  TIMx->SMCR = tmpsmcr;
 8008016:	68fb      	ldr	r3, [r7, #12]
 8008018:	697a      	ldr	r2, [r7, #20]
 800801a:	609a      	str	r2, [r3, #8]
}
 800801c:	bf00      	nop
 800801e:	371c      	adds	r7, #28
 8008020:	46bd      	mov	sp, r7
 8008022:	f85d 7b04 	ldr.w	r7, [sp], #4
 8008026:	4770      	bx	lr

08008028 <TIM_CCxChannelCmd>:
  * @param  ChannelState specifies the TIM Channel CCxE bit new state.
  *          This parameter can be: TIM_CCx_ENABLE or TIM_CCx_DISABLE.
  * @retval None
  */
void TIM_CCxChannelCmd(TIM_TypeDef *TIMx, uint32_t Channel, uint32_t ChannelState)
{
 8008028:	b480      	push	{r7}
 800802a:	b087      	sub	sp, #28
 800802c:	af00      	add	r7, sp, #0
 800802e:	60f8      	str	r0, [r7, #12]
 8008030:	60b9      	str	r1, [r7, #8]
 8008032:	607a      	str	r2, [r7, #4]

  /* Check the parameters */
  assert_param(IS_TIM_CC1_INSTANCE(TIMx));
  assert_param(IS_TIM_CHANNELS(Channel));

  tmp = TIM_CCER_CC1E << (Channel & 0x1FU); /* 0x1FU = 31 bits max shift */
 8008034:	68bb      	ldr	r3, [r7, #8]
 8008036:	f003 031f 	and.w	r3, r3, #31
 800803a:	2201      	movs	r2, #1
 800803c:	fa02 f303 	lsl.w	r3, r2, r3
 8008040:	617b      	str	r3, [r7, #20]

  /* Reset the CCxE Bit */
  TIMx->CCER &= ~tmp;
 8008042:	68fb      	ldr	r3, [r7, #12]
 8008044:	6a1a      	ldr	r2, [r3, #32]
 8008046:	697b      	ldr	r3, [r7, #20]
 8008048:	43db      	mvns	r3, r3
 800804a:	401a      	ands	r2, r3
 800804c:	68fb      	ldr	r3, [r7, #12]
 800804e:	621a      	str	r2, [r3, #32]

  /* Set or reset the CCxE Bit */
  TIMx->CCER |= (uint32_t)(ChannelState << (Channel & 0x1FU)); /* 0x1FU = 31 bits max shift */
 8008050:	68fb      	ldr	r3, [r7, #12]
 8008052:	6a1a      	ldr	r2, [r3, #32]
 8008054:	68bb      	ldr	r3, [r7, #8]
 8008056:	f003 031f 	and.w	r3, r3, #31
 800805a:	6879      	ldr	r1, [r7, #4]
 800805c:	fa01 f303 	lsl.w	r3, r1, r3
 8008060:	431a      	orrs	r2, r3
 8008062:	68fb      	ldr	r3, [r7, #12]
 8008064:	621a      	str	r2, [r3, #32]
}
 8008066:	bf00      	nop
 8008068:	371c      	adds	r7, #28
 800806a:	46bd      	mov	sp, r7
 800806c:	f85d 7b04 	ldr.w	r7, [sp], #4
 8008070:	4770      	bx	lr
	...

08008074 <HAL_TIMEx_MasterConfigSynchronization>:
  *         mode.
  * @retval HAL status
  */
HAL_StatusTypeDef HAL_TIMEx_MasterConfigSynchronization(TIM_HandleTypeDef *htim,
                                                        const TIM_MasterConfigTypeDef *sMasterConfig)
{
 8008074:	b480      	push	{r7}
 8008076:	b085      	sub	sp, #20
 8008078:	af00      	add	r7, sp, #0
 800807a:	6078      	str	r0, [r7, #4]
 800807c:	6039      	str	r1, [r7, #0]
  assert_param(IS_TIM_MASTER_INSTANCE(htim->Instance));
  assert_param(IS_TIM_TRGO_SOURCE(sMasterConfig->MasterOutputTrigger));
  assert_param(IS_TIM_MSM_STATE(sMasterConfig->MasterSlaveMode));

  /* Check input state */
  __HAL_LOCK(htim);
 800807e:	687b      	ldr	r3, [r7, #4]
 8008080:	f893 303c 	ldrb.w	r3, [r3, #60]	@ 0x3c
 8008084:	2b01      	cmp	r3, #1
 8008086:	d101      	bne.n	800808c <HAL_TIMEx_MasterConfigSynchronization+0x18>
 8008088:	2302      	movs	r3, #2
 800808a:	e05a      	b.n	8008142 <HAL_TIMEx_MasterConfigSynchronization+0xce>
 800808c:	687b      	ldr	r3, [r7, #4]
 800808e:	2201      	movs	r2, #1
 8008090:	f883 203c 	strb.w	r2, [r3, #60]	@ 0x3c

  /* Change the handler state */
  htim->State = HAL_TIM_STATE_BUSY;
 8008094:	687b      	ldr	r3, [r7, #4]
 8008096:	2202      	movs	r2, #2
 8008098:	f883 203d 	strb.w	r2, [r3, #61]	@ 0x3d

  /* Get the TIMx CR2 register value */
  tmpcr2 = htim->Instance->CR2;
 800809c:	687b      	ldr	r3, [r7, #4]
 800809e:	681b      	ldr	r3, [r3, #0]
 80080a0:	685b      	ldr	r3, [r3, #4]
 80080a2:	60fb      	str	r3, [r7, #12]

  /* Get the TIMx SMCR register value */
  tmpsmcr = htim->Instance->SMCR;
 80080a4:	687b      	ldr	r3, [r7, #4]
 80080a6:	681b      	ldr	r3, [r3, #0]
 80080a8:	689b      	ldr	r3, [r3, #8]
 80080aa:	60bb      	str	r3, [r7, #8]

  /* Reset the MMS Bits */
  tmpcr2 &= ~TIM_CR2_MMS;
 80080ac:	68fb      	ldr	r3, [r7, #12]
 80080ae:	f023 0370 	bic.w	r3, r3, #112	@ 0x70
 80080b2:	60fb      	str	r3, [r7, #12]
  /* Select the TRGO source */
  tmpcr2 |=  sMasterConfig->MasterOutputTrigger;
 80080b4:	683b      	ldr	r3, [r7, #0]
 80080b6:	681b      	ldr	r3, [r3, #0]
 80080b8:	68fa      	ldr	r2, [r7, #12]
 80080ba:	4313      	orrs	r3, r2
 80080bc:	60fb      	str	r3, [r7, #12]

  /* Update TIMx CR2 */
  htim->Instance->CR2 = tmpcr2;
 80080be:	687b      	ldr	r3, [r7, #4]
 80080c0:	681b      	ldr	r3, [r3, #0]
 80080c2:	68fa      	ldr	r2, [r7, #12]
 80080c4:	605a      	str	r2, [r3, #4]

  if (IS_TIM_SLAVE_INSTANCE(htim->Instance))
 80080c6:	687b      	ldr	r3, [r7, #4]
 80080c8:	681b      	ldr	r3, [r3, #0]
 80080ca:	4a21      	ldr	r2, [pc, #132]	@ (8008150 <HAL_TIMEx_MasterConfigSynchronization+0xdc>)
 80080cc:	4293      	cmp	r3, r2
 80080ce:	d022      	beq.n	8008116 <HAL_TIMEx_MasterConfigSynchronization+0xa2>
 80080d0:	687b      	ldr	r3, [r7, #4]
 80080d2:	681b      	ldr	r3, [r3, #0]
 80080d4:	f1b3 4f80 	cmp.w	r3, #1073741824	@ 0x40000000
 80080d8:	d01d      	beq.n	8008116 <HAL_TIMEx_MasterConfigSynchronization+0xa2>
 80080da:	687b      	ldr	r3, [r7, #4]
 80080dc:	681b      	ldr	r3, [r3, #0]
 80080de:	4a1d      	ldr	r2, [pc, #116]	@ (8008154 <HAL_TIMEx_MasterConfigSynchronization+0xe0>)
 80080e0:	4293      	cmp	r3, r2
 80080e2:	d018      	beq.n	8008116 <HAL_TIMEx_MasterConfigSynchronization+0xa2>
 80080e4:	687b      	ldr	r3, [r7, #4]
 80080e6:	681b      	ldr	r3, [r3, #0]
 80080e8:	4a1b      	ldr	r2, [pc, #108]	@ (8008158 <HAL_TIMEx_MasterConfigSynchronization+0xe4>)
 80080ea:	4293      	cmp	r3, r2
 80080ec:	d013      	beq.n	8008116 <HAL_TIMEx_MasterConfigSynchronization+0xa2>
 80080ee:	687b      	ldr	r3, [r7, #4]
 80080f0:	681b      	ldr	r3, [r3, #0]
 80080f2:	4a1a      	ldr	r2, [pc, #104]	@ (800815c <HAL_TIMEx_MasterConfigSynchronization+0xe8>)
 80080f4:	4293      	cmp	r3, r2
 80080f6:	d00e      	beq.n	8008116 <HAL_TIMEx_MasterConfigSynchronization+0xa2>
 80080f8:	687b      	ldr	r3, [r7, #4]
 80080fa:	681b      	ldr	r3, [r3, #0]
 80080fc:	4a18      	ldr	r2, [pc, #96]	@ (8008160 <HAL_TIMEx_MasterConfigSynchronization+0xec>)
 80080fe:	4293      	cmp	r3, r2
 8008100:	d009      	beq.n	8008116 <HAL_TIMEx_MasterConfigSynchronization+0xa2>
 8008102:	687b      	ldr	r3, [r7, #4]
 8008104:	681b      	ldr	r3, [r3, #0]
 8008106:	4a17      	ldr	r2, [pc, #92]	@ (8008164 <HAL_TIMEx_MasterConfigSynchronization+0xf0>)
 8008108:	4293      	cmp	r3, r2
 800810a:	d004      	beq.n	8008116 <HAL_TIMEx_MasterConfigSynchronization+0xa2>
 800810c:	687b      	ldr	r3, [r7, #4]
 800810e:	681b      	ldr	r3, [r3, #0]
 8008110:	4a15      	ldr	r2, [pc, #84]	@ (8008168 <HAL_TIMEx_MasterConfigSynchronization+0xf4>)
 8008112:	4293      	cmp	r3, r2
 8008114:	d10c      	bne.n	8008130 <HAL_TIMEx_MasterConfigSynchronization+0xbc>
  {
    /* Reset the MSM Bit */
    tmpsmcr &= ~TIM_SMCR_MSM;
 8008116:	68bb      	ldr	r3, [r7, #8]
 8008118:	f023 0380 	bic.w	r3, r3, #128	@ 0x80
 800811c:	60bb      	str	r3, [r7, #8]
    /* Set master mode */
    tmpsmcr |= sMasterConfig->MasterSlaveMode;
 800811e:	683b      	ldr	r3, [r7, #0]
 8008120:	685b      	ldr	r3, [r3, #4]
 8008122:	68ba      	ldr	r2, [r7, #8]
 8008124:	4313      	orrs	r3, r2
 8008126:	60bb      	str	r3, [r7, #8]

    /* Update TIMx SMCR */
    htim->Instance->SMCR = tmpsmcr;
 8008128:	687b      	ldr	r3, [r7, #4]
 800812a:	681b      	ldr	r3, [r3, #0]
 800812c:	68ba      	ldr	r2, [r7, #8]
 800812e:	609a      	str	r2, [r3, #8]
  }

  /* Change the htim state */
  htim->State = HAL_TIM_STATE_READY;
 8008130:	687b      	ldr	r3, [r7, #4]
 8008132:	2201      	movs	r2, #1
 8008134:	f883 203d 	strb.w	r2, [r3, #61]	@ 0x3d

  __HAL_UNLOCK(htim);
 8008138:	687b      	ldr	r3, [r7, #4]
 800813a:	2200      	movs	r2, #0
 800813c:	f883 203c 	strb.w	r2, [r3, #60]	@ 0x3c

  return HAL_OK;
 8008140:	2300      	movs	r3, #0
}
 8008142:	4618      	mov	r0, r3
 8008144:	3714      	adds	r7, #20
 8008146:	46bd      	mov	sp, r7
 8008148:	f85d 7b04 	ldr.w	r7, [sp], #4
 800814c:	4770      	bx	lr
 800814e:	bf00      	nop
 8008150:	40010000 	.word	0x40010000
 8008154:	40000400 	.word	0x40000400
 8008158:	40000800 	.word	0x40000800
 800815c:	40000c00 	.word	0x40000c00
 8008160:	40010400 	.word	0x40010400
 8008164:	40014000 	.word	0x40014000
 8008168:	40001800 	.word	0x40001800

0800816c <HAL_TIMEx_CommutCallback>:
  * @brief  Commutation callback in non-blocking mode
  * @param  htim TIM handle
  * @retval None
  */
__weak void HAL_TIMEx_CommutCallback(TIM_HandleTypeDef *htim)
{
 800816c:	b480      	push	{r7}
 800816e:	b083      	sub	sp, #12
 8008170:	af00      	add	r7, sp, #0
 8008172:	6078      	str	r0, [r7, #4]
  UNUSED(htim);

  /* NOTE : This function should not be modified, when the callback is needed,
            the HAL_TIMEx_CommutCallback could be implemented in the user file
   */
}
 8008174:	bf00      	nop
 8008176:	370c      	adds	r7, #12
 8008178:	46bd      	mov	sp, r7
 800817a:	f85d 7b04 	ldr.w	r7, [sp], #4
 800817e:	4770      	bx	lr

08008180 <HAL_TIMEx_BreakCallback>:
  * @brief  Break detection callback in non-blocking mode
  * @param  htim TIM handle
  * @retval None
  */
__weak void HAL_TIMEx_BreakCallback(TIM_HandleTypeDef *htim)
{
 8008180:	b480      	push	{r7}
 8008182:	b083      	sub	sp, #12
 8008184:	af00      	add	r7, sp, #0
 8008186:	6078      	str	r0, [r7, #4]
  UNUSED(htim);

  /* NOTE : This function should not be modified, when the callback is needed,
            the HAL_TIMEx_BreakCallback could be implemented in the user file
   */
}
 8008188:	bf00      	nop
 800818a:	370c      	adds	r7, #12
 800818c:	46bd      	mov	sp, r7
 800818e:	f85d 7b04 	ldr.w	r7, [sp], #4
 8008192:	4770      	bx	lr

08008194 <MX_TouchGFX_Init>:
 8008194:	b580      	push	{r7, lr}
 8008196:	af00      	add	r7, sp, #0
 8008198:	f003 ff1c 	bl	800bfd4 <touchgfx_components_init>
 800819c:	f003 fef0 	bl	800bf80 <touchgfx_init>
 80081a0:	bf00      	nop
 80081a2:	bd80      	pop	{r7, pc}

080081a4 <MX_TouchGFX_Process>:
 80081a4:	b580      	push	{r7, lr}
 80081a6:	af00      	add	r7, sp, #0
 80081a8:	f003 ff1c 	bl	800bfe4 <touchgfx_taskEntry>
 80081ac:	bf00      	nop
 80081ae:	bd80      	pop	{r7, pc}

080081b0 <_ZN8touchgfx12FontProviderD1Ev>:
     * @return The font with a font id of fontId.
     */
    virtual Font* getFont(FontId fontId) = 0;

    /** Finalizes an instance of the FontProvider class. */
    virtual ~FontProvider()
 80081b0:	b480      	push	{r7}
 80081b2:	b083      	sub	sp, #12
 80081b4:	af00      	add	r7, sp, #0
 80081b6:	6078      	str	r0, [r7, #4]
    {
 80081b8:	4a04      	ldr	r2, [pc, #16]	@ (80081cc <_ZN8touchgfx12FontProviderD1Ev+0x1c>)
 80081ba:	687b      	ldr	r3, [r7, #4]
 80081bc:	601a      	str	r2, [r3, #0]
    }
 80081be:	687b      	ldr	r3, [r7, #4]
 80081c0:	4618      	mov	r0, r3
 80081c2:	370c      	adds	r7, #12
 80081c4:	46bd      	mov	sp, r7
 80081c6:	f85d 7b04 	ldr.w	r7, [sp], #4
 80081ca:	4770      	bx	lr
 80081cc:	08024574 	.word	0x08024574

080081d0 <_ZN8touchgfx12FontProviderD0Ev>:
    virtual ~FontProvider()
 80081d0:	b580      	push	{r7, lr}
 80081d2:	b082      	sub	sp, #8
 80081d4:	af00      	add	r7, sp, #0
 80081d6:	6078      	str	r0, [r7, #4]
    }
 80081d8:	6878      	ldr	r0, [r7, #4]
 80081da:	f7ff ffe9 	bl	80081b0 <_ZN8touchgfx12FontProviderD1Ev>
 80081de:	2104      	movs	r1, #4
 80081e0:	6878      	ldr	r0, [r7, #4]
 80081e2:	f01a f8a8 	bl	8022336 <_ZdlPvj>
 80081e6:	687b      	ldr	r3, [r7, #4]
 80081e8:	4618      	mov	r0, r3
 80081ea:	3708      	adds	r7, #8
 80081ec:	46bd      	mov	sp, r7
 80081ee:	bd80      	pop	{r7, pc}

080081f0 <_ZN23ApplicationFontProvider7getFontEt>:
#include <fonts/ApplicationFontProvider.hpp>
#include <fonts/GeneratedFont.hpp>
#include <texts/TypedTextDatabase.hpp>

touchgfx::Font* ApplicationFontProvider::getFont(touchgfx::FontId typography)
{
 80081f0:	b580      	push	{r7, lr}
 80081f2:	b082      	sub	sp, #8
 80081f4:	af00      	add	r7, sp, #0
 80081f6:	6078      	str	r0, [r7, #4]
 80081f8:	460b      	mov	r3, r1
 80081fa:	807b      	strh	r3, [r7, #2]
    switch (typography)
 80081fc:	887b      	ldrh	r3, [r7, #2]
 80081fe:	2b00      	cmp	r3, #0
 8008200:	d002      	beq.n	8008208 <_ZN23ApplicationFontProvider7getFontEt+0x18>
 8008202:	2b01      	cmp	r3, #1
 8008204:	d005      	beq.n	8008212 <_ZN23ApplicationFontProvider7getFontEt+0x22>
 8008206:	e009      	b.n	800821c <_ZN23ApplicationFontProvider7getFontEt+0x2c>
    {
    case Typography::DEFAULT:
        // Asap_Regular_80_4bpp
        return const_cast<touchgfx::Font*>(TypedTextDatabase::getFonts()[0]);
 8008208:	f002 fc00 	bl	800aa0c <_ZN17TypedTextDatabase8getFontsEv>
 800820c:	4603      	mov	r3, r0
 800820e:	681b      	ldr	r3, [r3, #0]
 8008210:	e005      	b.n	800821e <_ZN23ApplicationFontProvider7getFontEt+0x2e>
    case Typography::TYPOGRAPHY_00:
        // verdana_30_4bpp
        return const_cast<touchgfx::Font*>(TypedTextDatabase::getFonts()[1]);
 8008212:	f002 fbfb 	bl	800aa0c <_ZN17TypedTextDatabase8getFontsEv>
 8008216:	4603      	mov	r3, r0
 8008218:	685b      	ldr	r3, [r3, #4]
 800821a:	e000      	b.n	800821e <_ZN23ApplicationFontProvider7getFontEt+0x2e>
    default:
        return 0;
 800821c:	2300      	movs	r3, #0
    }
}
 800821e:	4618      	mov	r0, r3
 8008220:	3708      	adds	r7, #8
 8008222:	46bd      	mov	sp, r7
 8008224:	bd80      	pop	{r7, pc}
	...

08008228 <_ZN23ApplicationFontProviderD1Ev>:
    static const touchgfx::FontId DEFAULT = 0;       // Asap_Regular_80_4bpp
    static const touchgfx::FontId TYPOGRAPHY_00 = 1; // verdana_30_4bpp
    static const uint16_t NUMBER_OF_FONTS = 2;
};

class ApplicationFontProvider : public touchgfx::FontProvider
 8008228:	b580      	push	{r7, lr}
 800822a:	b082      	sub	sp, #8
 800822c:	af00      	add	r7, sp, #0
 800822e:	6078      	str	r0, [r7, #4]
 8008230:	4a05      	ldr	r2, [pc, #20]	@ (8008248 <_ZN23ApplicationFontProviderD1Ev+0x20>)
 8008232:	687b      	ldr	r3, [r7, #4]
 8008234:	601a      	str	r2, [r3, #0]
 8008236:	687b      	ldr	r3, [r7, #4]
 8008238:	4618      	mov	r0, r3
 800823a:	f7ff ffb9 	bl	80081b0 <_ZN8touchgfx12FontProviderD1Ev>
 800823e:	687b      	ldr	r3, [r7, #4]
 8008240:	4618      	mov	r0, r3
 8008242:	3708      	adds	r7, #8
 8008244:	46bd      	mov	sp, r7
 8008246:	bd80      	pop	{r7, pc}
 8008248:	08024560 	.word	0x08024560

0800824c <_ZN23ApplicationFontProviderD0Ev>:
 800824c:	b580      	push	{r7, lr}
 800824e:	b082      	sub	sp, #8
 8008250:	af00      	add	r7, sp, #0
 8008252:	6078      	str	r0, [r7, #4]
 8008254:	6878      	ldr	r0, [r7, #4]
 8008256:	f7ff ffe7 	bl	8008228 <_ZN23ApplicationFontProviderD1Ev>
 800825a:	2104      	movs	r1, #4
 800825c:	6878      	ldr	r0, [r7, #4]
 800825e:	f01a f86a 	bl	8022336 <_ZdlPvj>
 8008262:	687b      	ldr	r3, [r7, #4]
 8008264:	4618      	mov	r0, r3
 8008266:	3708      	adds	r7, #8
 8008268:	46bd      	mov	sp, r7
 800826a:	bd80      	pop	{r7, pc}

0800826c <_ZN8touchgfx4FontD1Ev>:
 */
class Font
{
public:
    /** Finalizes an instance of the Font class. */
    virtual ~Font()
 800826c:	b480      	push	{r7}
 800826e:	b083      	sub	sp, #12
 8008270:	af00      	add	r7, sp, #0
 8008272:	6078      	str	r0, [r7, #4]
    {
 8008274:	4a04      	ldr	r2, [pc, #16]	@ (8008288 <_ZN8touchgfx4FontD1Ev+0x1c>)
 8008276:	687b      	ldr	r3, [r7, #4]
 8008278:	601a      	str	r2, [r3, #0]
    }
 800827a:	687b      	ldr	r3, [r7, #4]
 800827c:	4618      	mov	r0, r3
 800827e:	370c      	adds	r7, #12
 8008280:	46bd      	mov	sp, r7
 8008282:	f85d 7b04 	ldr.w	r7, [sp], #4
 8008286:	4770      	bx	lr
 8008288:	08024918 	.word	0x08024918

0800828c <_ZN8touchgfx4FontD0Ev>:
    virtual ~Font()
 800828c:	b580      	push	{r7, lr}
 800828e:	b082      	sub	sp, #8
 8008290:	af00      	add	r7, sp, #0
 8008292:	6078      	str	r0, [r7, #4]
    }
 8008294:	6878      	ldr	r0, [r7, #4]
 8008296:	f7ff ffe9 	bl	800826c <_ZN8touchgfx4FontD1Ev>
 800829a:	2114      	movs	r1, #20
 800829c:	6878      	ldr	r0, [r7, #4]
 800829e:	f01a f84a 	bl	8022336 <_ZdlPvj>
 80082a2:	687b      	ldr	r3, [r7, #4]
 80082a4:	4618      	mov	r0, r3
 80082a6:	3708      	adds	r7, #8
 80082a8:	46bd      	mov	sp, r7
 80082aa:	bd80      	pop	{r7, pc}

080082ac <_ZNK8touchgfx4Font8getGlyphEt>:
     *
     * @return A pointer to the glyph node or null if the glyph was not found.
     *
     * @see TextProvider::getNextLigature
     */
    virtual const GlyphNode* getGlyph(Unicode::UnicodeChar unicode) const
 80082ac:	b590      	push	{r4, r7, lr}
 80082ae:	b087      	sub	sp, #28
 80082b0:	af00      	add	r7, sp, #0
 80082b2:	6078      	str	r0, [r7, #4]
 80082b4:	460b      	mov	r3, r1
 80082b6:	807b      	strh	r3, [r7, #2]
    {
        if (unicode == 0)
 80082b8:	887b      	ldrh	r3, [r7, #2]
 80082ba:	2b00      	cmp	r3, #0
 80082bc:	d101      	bne.n	80082c2 <_ZNK8touchgfx4Font8getGlyphEt+0x16>
        {
            return 0;
 80082be:	2300      	movs	r3, #0
 80082c0:	e010      	b.n	80082e4 <_ZNK8touchgfx4Font8getGlyphEt+0x38>
        }
        const uint8_t* dummyPixelDataPointer = 0;
 80082c2:	2300      	movs	r3, #0
 80082c4:	613b      	str	r3, [r7, #16]
        uint8_t bitsPerPixelDummy = 0;
 80082c6:	2300      	movs	r3, #0
 80082c8:	73fb      	strb	r3, [r7, #15]
        const GlyphNode* glyph = getGlyph(unicode, dummyPixelDataPointer, bitsPerPixelDummy);
 80082ca:	687b      	ldr	r3, [r7, #4]
 80082cc:	681b      	ldr	r3, [r3, #0]
 80082ce:	3308      	adds	r3, #8
 80082d0:	681c      	ldr	r4, [r3, #0]
 80082d2:	f107 030f 	add.w	r3, r7, #15
 80082d6:	f107 0210 	add.w	r2, r7, #16
 80082da:	8879      	ldrh	r1, [r7, #2]
 80082dc:	6878      	ldr	r0, [r7, #4]
 80082de:	47a0      	blx	r4
 80082e0:	6178      	str	r0, [r7, #20]
        return glyph;
 80082e2:	697b      	ldr	r3, [r7, #20]
    }
 80082e4:	4618      	mov	r0, r3
 80082e6:	371c      	adds	r7, #28
 80082e8:	46bd      	mov	sp, r7
 80082ea:	bd90      	pop	{r4, r7, pc}

080082ec <_ZNK8touchgfx4Font15getFallbackCharEv>:
     * used when no glyph is available for some character. If 0 (zero) is returned, there is
     * no default character.
     *
     * @return The default character for the typography in case no glyph is available.
     */
    virtual Unicode::UnicodeChar getFallbackChar() const
 80082ec:	b480      	push	{r7}
 80082ee:	b083      	sub	sp, #12
 80082f0:	af00      	add	r7, sp, #0
 80082f2:	6078      	str	r0, [r7, #4]
    {
        return fallbackCharacter;
 80082f4:	687b      	ldr	r3, [r7, #4]
 80082f6:	89db      	ldrh	r3, [r3, #14]
    }
 80082f8:	4618      	mov	r0, r3
 80082fa:	370c      	adds	r7, #12
 80082fc:	46bd      	mov	sp, r7
 80082fe:	f85d 7b04 	ldr.w	r7, [sp], #4
 8008302:	4770      	bx	lr

08008304 <_ZNK8touchgfx4Font15getEllipsisCharEv>:
     *
     * @return The ellipsis character for the typography.
     *
     * @see TextArea::setWideTextAction
     */
    virtual Unicode::UnicodeChar getEllipsisChar() const
 8008304:	b480      	push	{r7}
 8008306:	b083      	sub	sp, #12
 8008308:	af00      	add	r7, sp, #0
 800830a:	6078      	str	r0, [r7, #4]
    {
        return ellipsisCharacter;
 800830c:	687b      	ldr	r3, [r7, #4]
 800830e:	8a1b      	ldrh	r3, [r3, #16]
    }
 8008310:	4618      	mov	r0, r3
 8008312:	370c      	adds	r7, #12
 8008314:	46bd      	mov	sp, r7
 8008316:	f85d 7b04 	ldr.w	r7, [sp], #4
 800831a:	4770      	bx	lr

0800831c <_ZNK8touchgfx4Font11getBaselineEv>:
     * @return The baseline position.
     *
     * @note It is not sufficient to allocate text areas with this height. Use
     *       getHeight for this.
     */
    FORCE_INLINE_FUNCTION virtual uint16_t getBaseline() const
 800831c:	b480      	push	{r7}
 800831e:	b083      	sub	sp, #12
 8008320:	af00      	add	r7, sp, #0
 8008322:	6078      	str	r0, [r7, #4]
    {
        return baselineHeight;
 8008324:	687b      	ldr	r3, [r7, #4]
 8008326:	88db      	ldrh	r3, [r3, #6]
    }
 8008328:	4618      	mov	r0, r3
 800832a:	370c      	adds	r7, #12
 800832c:	46bd      	mov	sp, r7
 800832e:	f85d 7b04 	ldr.w	r7, [sp], #4
 8008332:	4770      	bx	lr

08008334 <_ZNK8touchgfx4Font9getHeightEv>:
     * Returns the height of a font. The font may exceed the top by getPixelsAboveTop() or the
     * bottom by getPixelsBelowBottom.
     *
     * @return The font height.
     */
    FORCE_INLINE_FUNCTION virtual uint16_t getHeight() const
 8008334:	b480      	push	{r7}
 8008336:	b083      	sub	sp, #12
 8008338:	af00      	add	r7, sp, #0
 800833a:	6078      	str	r0, [r7, #4]
    {
        return fontHeight;
 800833c:	687b      	ldr	r3, [r7, #4]
 800833e:	889b      	ldrh	r3, [r3, #4]
    }
 8008340:	4618      	mov	r0, r3
 8008342:	370c      	adds	r7, #12
 8008344:	46bd      	mov	sp, r7
 8008346:	f85d 7b04 	ldr.w	r7, [sp], #4
 800834a:	4770      	bx	lr

0800834c <_ZNK8touchgfx4Font15getBitsPerPixelEv>:
    /**
     * Gets bits per pixel for this font.
     *
     * @return The number of bits used per pixel in this font.
     */
    FORCE_INLINE_FUNCTION virtual uint8_t getBitsPerPixel() const
 800834c:	b480      	push	{r7}
 800834e:	b083      	sub	sp, #12
 8008350:	af00      	add	r7, sp, #0
 8008352:	6078      	str	r0, [r7, #4]
    {
        return bPerPixel;
 8008354:	687b      	ldr	r3, [r7, #4]
 8008356:	7a9b      	ldrb	r3, [r3, #10]
 8008358:	f3c3 0306 	ubfx	r3, r3, #0, #7
 800835c:	b2db      	uxtb	r3, r3
    }
 800835e:	4618      	mov	r0, r3
 8008360:	370c      	adds	r7, #12
 8008362:	46bd      	mov	sp, r7
 8008364:	f85d 7b04 	ldr.w	r7, [sp], #4
 8008368:	4770      	bx	lr

0800836a <_ZNK8touchgfx4Font15getByteAlignRowEv>:
    /**
     * Are the glyphs saved with each glyph row byte aligned?
     *
     * @return True if each glyph row is stored byte aligned, false otherwise.
     */
    FORCE_INLINE_FUNCTION virtual uint8_t getByteAlignRow() const
 800836a:	b480      	push	{r7}
 800836c:	b083      	sub	sp, #12
 800836e:	af00      	add	r7, sp, #0
 8008370:	6078      	str	r0, [r7, #4]
    {
        return bAlignRow;
 8008372:	687b      	ldr	r3, [r7, #4]
 8008374:	7a9b      	ldrb	r3, [r3, #10]
 8008376:	f3c3 13c0 	ubfx	r3, r3, #7, #1
 800837a:	b2db      	uxtb	r3, r3
    }
 800837c:	4618      	mov	r0, r3
 800837e:	370c      	adds	r7, #12
 8008380:	46bd      	mov	sp, r7
 8008382:	f85d 7b04 	ldr.w	r7, [sp], #4
 8008386:	4770      	bx	lr

08008388 <_ZNK8touchgfx4Font17isVectorBasedFontEv>:
    /**
     * Returns true if this Font is vector based. Default is false.
     *
     * @return True if this Font is vector based.
     */
    virtual bool isVectorBasedFont() const
 8008388:	b480      	push	{r7}
 800838a:	b083      	sub	sp, #12
 800838c:	af00      	add	r7, sp, #0
 800838e:	6078      	str	r0, [r7, #4]
    {
        return false;
 8008390:	2300      	movs	r3, #0
    }
 8008392:	4618      	mov	r0, r3
 8008394:	370c      	adds	r7, #12
 8008396:	46bd      	mov	sp, r7
 8008398:	f85d 7b04 	ldr.w	r7, [sp], #4
 800839c:	4770      	bx	lr

0800839e <_ZNK8touchgfx4Font14getScaleFactorEv>:
    /**
     * Returns the scale factor
     *
     * @return The scale factor
     */
    virtual float getScaleFactor() const
 800839e:	b480      	push	{r7}
 80083a0:	b083      	sub	sp, #12
 80083a2:	af00      	add	r7, sp, #0
 80083a4:	6078      	str	r0, [r7, #4]
    {
        return 0;
 80083a6:	f04f 0300 	mov.w	r3, #0
 80083aa:	ee07 3a90 	vmov	s15, r3
    }
 80083ae:	eeb0 0a67 	vmov.f32	s0, s15
 80083b2:	370c      	adds	r7, #12
 80083b4:	46bd      	mov	sp, r7
 80083b6:	f85d 7b04 	ldr.w	r7, [sp], #4
 80083ba:	4770      	bx	lr

080083bc <_ZN8touchgfx9ConstFontD1Ev>:
 *
 * @see Font
 *
 * @note Pure virtual class. Create an application-specific implementation of getPixelData().
 */
class ConstFont : public Font
 80083bc:	b580      	push	{r7, lr}
 80083be:	b082      	sub	sp, #8
 80083c0:	af00      	add	r7, sp, #0
 80083c2:	6078      	str	r0, [r7, #4]
 80083c4:	4a05      	ldr	r2, [pc, #20]	@ (80083dc <_ZN8touchgfx9ConstFontD1Ev+0x20>)
 80083c6:	687b      	ldr	r3, [r7, #4]
 80083c8:	601a      	str	r2, [r3, #0]
 80083ca:	687b      	ldr	r3, [r7, #4]
 80083cc:	4618      	mov	r0, r3
 80083ce:	f7ff ff4d 	bl	800826c <_ZN8touchgfx4FontD1Ev>
 80083d2:	687b      	ldr	r3, [r7, #4]
 80083d4:	4618      	mov	r0, r3
 80083d6:	3708      	adds	r7, #8
 80083d8:	46bd      	mov	sp, r7
 80083da:	bd80      	pop	{r7, pc}
 80083dc:	0802548c 	.word	0x0802548c

080083e0 <_ZN8touchgfx9ConstFontD0Ev>:
 80083e0:	b580      	push	{r7, lr}
 80083e2:	b082      	sub	sp, #8
 80083e4:	af00      	add	r7, sp, #0
 80083e6:	6078      	str	r0, [r7, #4]
 80083e8:	6878      	ldr	r0, [r7, #4]
 80083ea:	f7ff ffe7 	bl	80083bc <_ZN8touchgfx9ConstFontD1Ev>
 80083ee:	211c      	movs	r1, #28
 80083f0:	6878      	ldr	r0, [r7, #4]
 80083f2:	f019 ffa0 	bl	8022336 <_ZdlPvj>
 80083f6:	687b      	ldr	r3, [r7, #4]
 80083f8:	4618      	mov	r0, r3
 80083fa:	3708      	adds	r7, #8
 80083fc:	46bd      	mov	sp, r7
 80083fe:	bd80      	pop	{r7, pc}

08008400 <_ZN8touchgfx13GeneratedFontD1Ev>:

#include <touchgfx/ConstFont.hpp>

namespace touchgfx
{
class GeneratedFont : public ConstFont
 8008400:	b580      	push	{r7, lr}
 8008402:	b082      	sub	sp, #8
 8008404:	af00      	add	r7, sp, #0
 8008406:	6078      	str	r0, [r7, #4]
 8008408:	4a05      	ldr	r2, [pc, #20]	@ (8008420 <_ZN8touchgfx13GeneratedFontD1Ev+0x20>)
 800840a:	687b      	ldr	r3, [r7, #4]
 800840c:	601a      	str	r2, [r3, #0]
 800840e:	687b      	ldr	r3, [r7, #4]
 8008410:	4618      	mov	r0, r3
 8008412:	f7ff ffd3 	bl	80083bc <_ZN8touchgfx9ConstFontD1Ev>
 8008416:	687b      	ldr	r3, [r7, #4]
 8008418:	4618      	mov	r0, r3
 800841a:	3708      	adds	r7, #8
 800841c:	46bd      	mov	sp, r7
 800841e:	bd80      	pop	{r7, pc}
 8008420:	08024598 	.word	0x08024598

08008424 <_ZN8touchgfx13GeneratedFontD0Ev>:
 8008424:	b580      	push	{r7, lr}
 8008426:	b082      	sub	sp, #8
 8008428:	af00      	add	r7, sp, #0
 800842a:	6078      	str	r0, [r7, #4]
 800842c:	6878      	ldr	r0, [r7, #4]
 800842e:	f7ff ffe7 	bl	8008400 <_ZN8touchgfx13GeneratedFontD1Ev>
 8008432:	212c      	movs	r1, #44	@ 0x2c
 8008434:	6878      	ldr	r0, [r7, #4]
 8008436:	f019 ff7e 	bl	8022336 <_ZdlPvj>
 800843a:	687b      	ldr	r3, [r7, #4]
 800843c:	4618      	mov	r0, r3
 800843e:	3708      	adds	r7, #8
 8008440:	46bd      	mov	sp, r7
 8008442:	bd80      	pop	{r7, pc}

08008444 <_ZN8touchgfx9TypedTextD1Ev>:
        : typedTextId(id)
    {
    }

    /** Finalizes an instance of the TypedText class. */
    virtual ~TypedText()
 8008444:	b480      	push	{r7}
 8008446:	b083      	sub	sp, #12
 8008448:	af00      	add	r7, sp, #0
 800844a:	6078      	str	r0, [r7, #4]
    {
 800844c:	4a04      	ldr	r2, [pc, #16]	@ (8008460 <_ZN8touchgfx9TypedTextD1Ev+0x1c>)
 800844e:	687b      	ldr	r3, [r7, #4]
 8008450:	601a      	str	r2, [r3, #0]
    }
 8008452:	687b      	ldr	r3, [r7, #4]
 8008454:	4618      	mov	r0, r3
 8008456:	370c      	adds	r7, #12
 8008458:	46bd      	mov	sp, r7
 800845a:	f85d 7b04 	ldr.w	r7, [sp], #4
 800845e:	4770      	bx	lr
 8008460:	08024588 	.word	0x08024588

08008464 <_ZN8touchgfx9TypedTextD0Ev>:
    virtual ~TypedText()
 8008464:	b580      	push	{r7, lr}
 8008466:	b082      	sub	sp, #8
 8008468:	af00      	add	r7, sp, #0
 800846a:	6078      	str	r0, [r7, #4]
    }
 800846c:	6878      	ldr	r0, [r7, #4]
 800846e:	f7ff ffe9 	bl	8008444 <_ZN8touchgfx9TypedTextD1Ev>
 8008472:	2108      	movs	r1, #8
 8008474:	6878      	ldr	r0, [r7, #4]
 8008476:	f019 ff5e 	bl	8022336 <_ZdlPvj>
 800847a:	687b      	ldr	r3, [r7, #4]
 800847c:	4618      	mov	r0, r3
 800847e:	3708      	adds	r7, #8
 8008480:	46bd      	mov	sp, r7
 8008482:	bd80      	pop	{r7, pc}

08008484 <_ZNK8touchgfx13GeneratedFont12getGSUBTableEv>:

    virtual const uint8_t* getPixelData(const GlyphNode* glyph) const;

    virtual int8_t getKerning(Unicode::UnicodeChar prevChar, const GlyphNode* glyph) const;

    virtual const uint16_t* getGSUBTable() const
 8008484:	b480      	push	{r7}
 8008486:	b083      	sub	sp, #12
 8008488:	af00      	add	r7, sp, #0
 800848a:	6078      	str	r0, [r7, #4]
    {
        return gsubTable;
 800848c:	687b      	ldr	r3, [r7, #4]
 800848e:	6a5b      	ldr	r3, [r3, #36]	@ 0x24
    }
 8008490:	4618      	mov	r0, r3
 8008492:	370c      	adds	r7, #12
 8008494:	46bd      	mov	sp, r7
 8008496:	f85d 7b04 	ldr.w	r7, [sp], #4
 800849a:	4770      	bx	lr

0800849c <_ZNK8touchgfx13GeneratedFont23getContextualFormsTableEv>:

    virtual const FontContextualFormsTable* getContextualFormsTable() const
 800849c:	b480      	push	{r7}
 800849e:	b083      	sub	sp, #12
 80084a0:	af00      	add	r7, sp, #0
 80084a2:	6078      	str	r0, [r7, #4]
    {
        return arabicTable;
 80084a4:	687b      	ldr	r3, [r7, #4]
 80084a6:	6a9b      	ldr	r3, [r3, #40]	@ 0x28
    }
 80084a8:	4618      	mov	r0, r3
 80084aa:	370c      	adds	r7, #12
 80084ac:	46bd      	mov	sp, r7
 80084ae:	f85d 7b04 	ldr.w	r7, [sp], #4
 80084b2:	4770      	bx	lr

080084b4 <_ZN8touchgfx13GeneratedFontC1EPKNS_9GlyphNodeEttthhhhhhPKPKhPKNS_11KerningNodeEttPKtPKNS_24FontContextualFormsTableE>:
#include <fonts/GeneratedFont.hpp>
#include <math.h>

namespace touchgfx
{
GeneratedFont::GeneratedFont(const GlyphNode* glyphs, uint16_t numGlyphs, uint16_t height, uint16_t baseline, uint8_t pixAboveTop, uint8_t pixBelowBottom, uint8_t bitsPerPixel, uint8_t byteAlignRow, uint8_t maxLeft, uint8_t maxRight, const uint8_t* const* glyphDataInternalFlash, const KerningNode* kerningList, const Unicode::UnicodeChar fallbackChar, const Unicode::UnicodeChar ellipsisChar, const uint16_t* const gsubData, const FontContextualFormsTable* formsTable)
 80084b4:	b580      	push	{r7, lr}
 80084b6:	b08e      	sub	sp, #56	@ 0x38
 80084b8:	af0a      	add	r7, sp, #40	@ 0x28
 80084ba:	60f8      	str	r0, [r7, #12]
 80084bc:	60b9      	str	r1, [r7, #8]
 80084be:	4611      	mov	r1, r2
 80084c0:	461a      	mov	r2, r3
 80084c2:	460b      	mov	r3, r1
 80084c4:	80fb      	strh	r3, [r7, #6]
 80084c6:	4613      	mov	r3, r2
 80084c8:	80bb      	strh	r3, [r7, #4]
    : ConstFont(glyphs, numGlyphs, height, baseline, pixAboveTop, pixBelowBottom, bitsPerPixel, byteAlignRow, maxLeft, maxRight, fallbackChar, ellipsisChar),
      glyphData(glyphDataInternalFlash),
      kerningData(kerningList),
      gsubTable(gsubData),
      arabicTable(formsTable)
 80084ca:	68f8      	ldr	r0, [r7, #12]
 80084cc:	88b9      	ldrh	r1, [r7, #4]
 80084ce:	88fa      	ldrh	r2, [r7, #6]
 80084d0:	f8b7 3040 	ldrh.w	r3, [r7, #64]	@ 0x40
 80084d4:	9308      	str	r3, [sp, #32]
 80084d6:	8fbb      	ldrh	r3, [r7, #60]	@ 0x3c
 80084d8:	9307      	str	r3, [sp, #28]
 80084da:	f897 3030 	ldrb.w	r3, [r7, #48]	@ 0x30
 80084de:	9306      	str	r3, [sp, #24]
 80084e0:	f897 302c 	ldrb.w	r3, [r7, #44]	@ 0x2c
 80084e4:	9305      	str	r3, [sp, #20]
 80084e6:	f897 3028 	ldrb.w	r3, [r7, #40]	@ 0x28
 80084ea:	9304      	str	r3, [sp, #16]
 80084ec:	f897 3024 	ldrb.w	r3, [r7, #36]	@ 0x24
 80084f0:	9303      	str	r3, [sp, #12]
 80084f2:	f897 3020 	ldrb.w	r3, [r7, #32]
 80084f6:	9302      	str	r3, [sp, #8]
 80084f8:	7f3b      	ldrb	r3, [r7, #28]
 80084fa:	9301      	str	r3, [sp, #4]
 80084fc:	8b3b      	ldrh	r3, [r7, #24]
 80084fe:	9300      	str	r3, [sp, #0]
 8008500:	460b      	mov	r3, r1
 8008502:	68b9      	ldr	r1, [r7, #8]
 8008504:	f009 fae2 	bl	8011acc <_ZN8touchgfx9ConstFontC1EPKNS_9GlyphNodeEttthhhhhhtt>
 8008508:	4a09      	ldr	r2, [pc, #36]	@ (8008530 <_ZN8touchgfx13GeneratedFontC1EPKNS_9GlyphNodeEttthhhhhhPKPKhPKNS_11KerningNodeEttPKtPKNS_24FontContextualFormsTableE+0x7c>)
 800850a:	68fb      	ldr	r3, [r7, #12]
 800850c:	601a      	str	r2, [r3, #0]
      glyphData(glyphDataInternalFlash),
 800850e:	68fb      	ldr	r3, [r7, #12]
 8008510:	6b7a      	ldr	r2, [r7, #52]	@ 0x34
 8008512:	61da      	str	r2, [r3, #28]
      kerningData(kerningList),
 8008514:	68fb      	ldr	r3, [r7, #12]
 8008516:	6bba      	ldr	r2, [r7, #56]	@ 0x38
 8008518:	621a      	str	r2, [r3, #32]
      gsubTable(gsubData),
 800851a:	68fb      	ldr	r3, [r7, #12]
 800851c:	6c7a      	ldr	r2, [r7, #68]	@ 0x44
 800851e:	625a      	str	r2, [r3, #36]	@ 0x24
      arabicTable(formsTable)
 8008520:	68fb      	ldr	r3, [r7, #12]
 8008522:	6cba      	ldr	r2, [r7, #72]	@ 0x48
 8008524:	629a      	str	r2, [r3, #40]	@ 0x28
{
}
 8008526:	68fb      	ldr	r3, [r7, #12]
 8008528:	4618      	mov	r0, r3
 800852a:	3710      	adds	r7, #16
 800852c:	46bd      	mov	sp, r7
 800852e:	bd80      	pop	{r7, pc}
 8008530:	08024598 	.word	0x08024598

08008534 <_ZNK8touchgfx13GeneratedFont12getPixelDataEPKNS_9GlyphNodeE>:

const uint8_t* GeneratedFont::getPixelData(const GlyphNode* glyph) const
{
 8008534:	b480      	push	{r7}
 8008536:	b085      	sub	sp, #20
 8008538:	af00      	add	r7, sp, #0
 800853a:	6078      	str	r0, [r7, #4]
 800853c:	6039      	str	r1, [r7, #0]
    const uint8_t* const* table = (const uint8_t* const*)glyphData;
 800853e:	687b      	ldr	r3, [r7, #4]
 8008540:	69db      	ldr	r3, [r3, #28]
 8008542:	60fb      	str	r3, [r7, #12]
    return &(table[glyph->unicode / 2048][glyph->dataOffset]);
 8008544:	683b      	ldr	r3, [r7, #0]
 8008546:	889b      	ldrh	r3, [r3, #4]
 8008548:	0adb      	lsrs	r3, r3, #11
 800854a:	b29b      	uxth	r3, r3
 800854c:	009b      	lsls	r3, r3, #2
 800854e:	68fa      	ldr	r2, [r7, #12]
 8008550:	4413      	add	r3, r2
 8008552:	681a      	ldr	r2, [r3, #0]
 8008554:	683b      	ldr	r3, [r7, #0]
 8008556:	681b      	ldr	r3, [r3, #0]
 8008558:	4413      	add	r3, r2
}
 800855a:	4618      	mov	r0, r3
 800855c:	3714      	adds	r7, #20
 800855e:	46bd      	mov	sp, r7
 8008560:	f85d 7b04 	ldr.w	r7, [sp], #4
 8008564:	4770      	bx	lr

08008566 <_ZNK8touchgfx13GeneratedFont10getKerningEtPKNS_9GlyphNodeE>:

int8_t GeneratedFont::getKerning(Unicode::UnicodeChar prevChar, const GlyphNode* glyph) const
{
 8008566:	b480      	push	{r7}
 8008568:	b089      	sub	sp, #36	@ 0x24
 800856a:	af00      	add	r7, sp, #0
 800856c:	60f8      	str	r0, [r7, #12]
 800856e:	460b      	mov	r3, r1
 8008570:	607a      	str	r2, [r7, #4]
 8008572:	817b      	strh	r3, [r7, #10]
    if (!glyph || glyph->kerningTableSize == 0)
 8008574:	687b      	ldr	r3, [r7, #4]
 8008576:	2b00      	cmp	r3, #0
 8008578:	d003      	beq.n	8008582 <_ZNK8touchgfx13GeneratedFont10getKerningEtPKNS_9GlyphNodeE+0x1c>
 800857a:	687b      	ldr	r3, [r7, #4]
 800857c:	7b1b      	ldrb	r3, [r3, #12]
 800857e:	2b00      	cmp	r3, #0
 8008580:	d101      	bne.n	8008586 <_ZNK8touchgfx13GeneratedFont10getKerningEtPKNS_9GlyphNodeE+0x20>
    {
        return 0;
 8008582:	2300      	movs	r3, #0
 8008584:	e031      	b.n	80085ea <_ZNK8touchgfx13GeneratedFont10getKerningEtPKNS_9GlyphNodeE+0x84>
    }

    const KerningNode* kerndata = kerningData + glyph->kerningTablePos();
 8008586:	68fb      	ldr	r3, [r7, #12]
 8008588:	6a1a      	ldr	r2, [r3, #32]
 800858a:	687b      	ldr	r3, [r7, #4]
 800858c:	617b      	str	r3, [r7, #20]
        return ((flags & GLYPH_DATA_KERNINGTABLEPOS_BIT8_10) << 8) | _kerningTablePos;
 800858e:	697b      	ldr	r3, [r7, #20]
 8008590:	7b5b      	ldrb	r3, [r3, #13]
 8008592:	021b      	lsls	r3, r3, #8
 8008594:	b21b      	sxth	r3, r3
 8008596:	f403 63e0 	and.w	r3, r3, #1792	@ 0x700
 800859a:	b219      	sxth	r1, r3
 800859c:	697b      	ldr	r3, [r7, #20]
 800859e:	7adb      	ldrb	r3, [r3, #11]
 80085a0:	b21b      	sxth	r3, r3
 80085a2:	430b      	orrs	r3, r1
 80085a4:	b21b      	sxth	r3, r3
 80085a6:	b29b      	uxth	r3, r3
 80085a8:	009b      	lsls	r3, r3, #2
 80085aa:	4413      	add	r3, r2
 80085ac:	61fb      	str	r3, [r7, #28]
    for (uint16_t i = glyph->kerningTableSize; i > 0; i--, kerndata++)
 80085ae:	687b      	ldr	r3, [r7, #4]
 80085b0:	7b1b      	ldrb	r3, [r3, #12]
 80085b2:	837b      	strh	r3, [r7, #26]
 80085b4:	e013      	b.n	80085de <_ZNK8touchgfx13GeneratedFont10getKerningEtPKNS_9GlyphNodeE+0x78>
    {
        if (prevChar == kerndata->unicodePrevChar)
 80085b6:	69fb      	ldr	r3, [r7, #28]
 80085b8:	881b      	ldrh	r3, [r3, #0]
 80085ba:	897a      	ldrh	r2, [r7, #10]
 80085bc:	429a      	cmp	r2, r3
 80085be:	d103      	bne.n	80085c8 <_ZNK8touchgfx13GeneratedFont10getKerningEtPKNS_9GlyphNodeE+0x62>
        {
            return kerndata->distance;
 80085c0:	69fb      	ldr	r3, [r7, #28]
 80085c2:	f993 3002 	ldrsb.w	r3, [r3, #2]
 80085c6:	e010      	b.n	80085ea <_ZNK8touchgfx13GeneratedFont10getKerningEtPKNS_9GlyphNodeE+0x84>
        }
        if (prevChar < kerndata->unicodePrevChar)
 80085c8:	69fb      	ldr	r3, [r7, #28]
 80085ca:	881b      	ldrh	r3, [r3, #0]
 80085cc:	897a      	ldrh	r2, [r7, #10]
 80085ce:	429a      	cmp	r2, r3
 80085d0:	d309      	bcc.n	80085e6 <_ZNK8touchgfx13GeneratedFont10getKerningEtPKNS_9GlyphNodeE+0x80>
    for (uint16_t i = glyph->kerningTableSize; i > 0; i--, kerndata++)
 80085d2:	8b7b      	ldrh	r3, [r7, #26]
 80085d4:	3b01      	subs	r3, #1
 80085d6:	837b      	strh	r3, [r7, #26]
 80085d8:	69fb      	ldr	r3, [r7, #28]
 80085da:	3304      	adds	r3, #4
 80085dc:	61fb      	str	r3, [r7, #28]
 80085de:	8b7b      	ldrh	r3, [r7, #26]
 80085e0:	2b00      	cmp	r3, #0
 80085e2:	d1e8      	bne.n	80085b6 <_ZNK8touchgfx13GeneratedFont10getKerningEtPKNS_9GlyphNodeE+0x50>
 80085e4:	e000      	b.n	80085e8 <_ZNK8touchgfx13GeneratedFont10getKerningEtPKNS_9GlyphNodeE+0x82>
        {
            break;
 80085e6:	bf00      	nop
        }
    }
    return 0;
 80085e8:	2300      	movs	r3, #0
}
 80085ea:	4618      	mov	r0, r3
 80085ec:	3724      	adds	r7, #36	@ 0x24
 80085ee:	46bd      	mov	sp, r7
 80085f0:	f85d 7b04 	ldr.w	r7, [sp], #4
 80085f4:	4770      	bx	lr
	...

080085f8 <__tcf_0>:
KEEP extern const touchgfx::KerningNode kerning_Asap_Regular_80_4bpp[] FONT_KERNING_LOCATION_FLASH_ATTRIBUTE;
touchgfx::GeneratedFont& getFont_Asap_Regular_80_4bpp();

touchgfx::GeneratedFont& getFont_Asap_Regular_80_4bpp()
{
    static touchgfx::GeneratedFont Asap_Regular_80_4bpp(glyphs_Asap_Regular_80_4bpp, 10, 80, 80, 0, 0, 4, 1, 0, 0, unicodes_Asap_Regular_80_4bpp, kerning_Asap_Regular_80_4bpp, 0, 0, 0, 0);
 80085f8:	b580      	push	{r7, lr}
 80085fa:	af00      	add	r7, sp, #0
 80085fc:	4801      	ldr	r0, [pc, #4]	@ (8008604 <__tcf_0+0xc>)
 80085fe:	f7ff feff 	bl	8008400 <_ZN8touchgfx13GeneratedFontD1Ev>
 8008602:	bd80      	pop	{r7, pc}
 8008604:	20000608 	.word	0x20000608

08008608 <_Z28getFont_Asap_Regular_80_4bppv>:
{
 8008608:	b580      	push	{r7, lr}
 800860a:	b08e      	sub	sp, #56	@ 0x38
 800860c:	af0e      	add	r7, sp, #56	@ 0x38
    static touchgfx::GeneratedFont Asap_Regular_80_4bpp(glyphs_Asap_Regular_80_4bpp, 10, 80, 80, 0, 0, 4, 1, 0, 0, unicodes_Asap_Regular_80_4bpp, kerning_Asap_Regular_80_4bpp, 0, 0, 0, 0);
 800860e:	4b21      	ldr	r3, [pc, #132]	@ (8008694 <_Z28getFont_Asap_Regular_80_4bppv+0x8c>)
 8008610:	681b      	ldr	r3, [r3, #0]
 8008612:	f3bf 8f5b 	dmb	ish
 8008616:	f003 0301 	and.w	r3, r3, #1
 800861a:	2b00      	cmp	r3, #0
 800861c:	bf0c      	ite	eq
 800861e:	2301      	moveq	r3, #1
 8008620:	2300      	movne	r3, #0
 8008622:	b2db      	uxtb	r3, r3
 8008624:	2b00      	cmp	r3, #0
 8008626:	d030      	beq.n	800868a <_Z28getFont_Asap_Regular_80_4bppv+0x82>
 8008628:	481a      	ldr	r0, [pc, #104]	@ (8008694 <_Z28getFont_Asap_Regular_80_4bppv+0x8c>)
 800862a:	f019 fe86 	bl	802233a <__cxa_guard_acquire>
 800862e:	4603      	mov	r3, r0
 8008630:	2b00      	cmp	r3, #0
 8008632:	bf14      	ite	ne
 8008634:	2301      	movne	r3, #1
 8008636:	2300      	moveq	r3, #0
 8008638:	b2db      	uxtb	r3, r3
 800863a:	2b00      	cmp	r3, #0
 800863c:	d025      	beq.n	800868a <_Z28getFont_Asap_Regular_80_4bppv+0x82>
 800863e:	2300      	movs	r3, #0
 8008640:	930c      	str	r3, [sp, #48]	@ 0x30
 8008642:	2300      	movs	r3, #0
 8008644:	930b      	str	r3, [sp, #44]	@ 0x2c
 8008646:	2300      	movs	r3, #0
 8008648:	930a      	str	r3, [sp, #40]	@ 0x28
 800864a:	2300      	movs	r3, #0
 800864c:	9309      	str	r3, [sp, #36]	@ 0x24
 800864e:	4b12      	ldr	r3, [pc, #72]	@ (8008698 <_Z28getFont_Asap_Regular_80_4bppv+0x90>)
 8008650:	9308      	str	r3, [sp, #32]
 8008652:	4b12      	ldr	r3, [pc, #72]	@ (800869c <_Z28getFont_Asap_Regular_80_4bppv+0x94>)
 8008654:	9307      	str	r3, [sp, #28]
 8008656:	2300      	movs	r3, #0
 8008658:	9306      	str	r3, [sp, #24]
 800865a:	2300      	movs	r3, #0
 800865c:	9305      	str	r3, [sp, #20]
 800865e:	2301      	movs	r3, #1
 8008660:	9304      	str	r3, [sp, #16]
 8008662:	2304      	movs	r3, #4
 8008664:	9303      	str	r3, [sp, #12]
 8008666:	2300      	movs	r3, #0
 8008668:	9302      	str	r3, [sp, #8]
 800866a:	2300      	movs	r3, #0
 800866c:	9301      	str	r3, [sp, #4]
 800866e:	2350      	movs	r3, #80	@ 0x50
 8008670:	9300      	str	r3, [sp, #0]
 8008672:	2350      	movs	r3, #80	@ 0x50
 8008674:	220a      	movs	r2, #10
 8008676:	490a      	ldr	r1, [pc, #40]	@ (80086a0 <_Z28getFont_Asap_Regular_80_4bppv+0x98>)
 8008678:	480a      	ldr	r0, [pc, #40]	@ (80086a4 <_Z28getFont_Asap_Regular_80_4bppv+0x9c>)
 800867a:	f7ff ff1b 	bl	80084b4 <_ZN8touchgfx13GeneratedFontC1EPKNS_9GlyphNodeEttthhhhhhPKPKhPKNS_11KerningNodeEttPKtPKNS_24FontContextualFormsTableE>
 800867e:	480a      	ldr	r0, [pc, #40]	@ (80086a8 <_Z28getFont_Asap_Regular_80_4bppv+0xa0>)
 8008680:	f019 ff24 	bl	80224cc <atexit>
 8008684:	4803      	ldr	r0, [pc, #12]	@ (8008694 <_Z28getFont_Asap_Regular_80_4bppv+0x8c>)
 8008686:	f019 fe64 	bl	8022352 <__cxa_guard_release>
    return Asap_Regular_80_4bpp;
 800868a:	4b06      	ldr	r3, [pc, #24]	@ (80086a4 <_Z28getFont_Asap_Regular_80_4bppv+0x9c>)
}
 800868c:	4618      	mov	r0, r3
 800868e:	46bd      	mov	sp, r7
 8008690:	bd80      	pop	{r7, pc}
 8008692:	bf00      	nop
 8008694:	20000634 	.word	0x20000634
 8008698:	0802c25c 	.word	0x0802c25c
 800869c:	0802c508 	.word	0x0802c508
 80086a0:	0802bc9c 	.word	0x0802bc9c
 80086a4:	20000608 	.word	0x20000608
 80086a8:	080085f9 	.word	0x080085f9

080086ac <__tcf_0>:
KEEP extern const touchgfx::KerningNode kerning_verdana_30_4bpp[] FONT_KERNING_LOCATION_FLASH_ATTRIBUTE;
touchgfx::GeneratedFont& getFont_verdana_30_4bpp();

touchgfx::GeneratedFont& getFont_verdana_30_4bpp()
{
    static touchgfx::GeneratedFont verdana_30_4bpp(glyphs_verdana_30_4bpp, 95, 36, 30, 0, 0, 4, 1, 1, 1, unicodes_verdana_30_4bpp, kerning_verdana_30_4bpp, 63, 0, 0, 0);
 80086ac:	b580      	push	{r7, lr}
 80086ae:	af00      	add	r7, sp, #0
 80086b0:	4801      	ldr	r0, [pc, #4]	@ (80086b8 <__tcf_0+0xc>)
 80086b2:	f7ff fea5 	bl	8008400 <_ZN8touchgfx13GeneratedFontD1Ev>
 80086b6:	bd80      	pop	{r7, pc}
 80086b8:	20000638 	.word	0x20000638

080086bc <_Z23getFont_verdana_30_4bppv>:
{
 80086bc:	b580      	push	{r7, lr}
 80086be:	b08e      	sub	sp, #56	@ 0x38
 80086c0:	af0e      	add	r7, sp, #56	@ 0x38
    static touchgfx::GeneratedFont verdana_30_4bpp(glyphs_verdana_30_4bpp, 95, 36, 30, 0, 0, 4, 1, 1, 1, unicodes_verdana_30_4bpp, kerning_verdana_30_4bpp, 63, 0, 0, 0);
 80086c2:	4b21      	ldr	r3, [pc, #132]	@ (8008748 <_Z23getFont_verdana_30_4bppv+0x8c>)
 80086c4:	681b      	ldr	r3, [r3, #0]
 80086c6:	f3bf 8f5b 	dmb	ish
 80086ca:	f003 0301 	and.w	r3, r3, #1
 80086ce:	2b00      	cmp	r3, #0
 80086d0:	bf0c      	ite	eq
 80086d2:	2301      	moveq	r3, #1
 80086d4:	2300      	movne	r3, #0
 80086d6:	b2db      	uxtb	r3, r3
 80086d8:	2b00      	cmp	r3, #0
 80086da:	d030      	beq.n	800873e <_Z23getFont_verdana_30_4bppv+0x82>
 80086dc:	481a      	ldr	r0, [pc, #104]	@ (8008748 <_Z23getFont_verdana_30_4bppv+0x8c>)
 80086de:	f019 fe2c 	bl	802233a <__cxa_guard_acquire>
 80086e2:	4603      	mov	r3, r0
 80086e4:	2b00      	cmp	r3, #0
 80086e6:	bf14      	ite	ne
 80086e8:	2301      	movne	r3, #1
 80086ea:	2300      	moveq	r3, #0
 80086ec:	b2db      	uxtb	r3, r3
 80086ee:	2b00      	cmp	r3, #0
 80086f0:	d025      	beq.n	800873e <_Z23getFont_verdana_30_4bppv+0x82>
 80086f2:	2300      	movs	r3, #0
 80086f4:	930c      	str	r3, [sp, #48]	@ 0x30
 80086f6:	2300      	movs	r3, #0
 80086f8:	930b      	str	r3, [sp, #44]	@ 0x2c
 80086fa:	2300      	movs	r3, #0
 80086fc:	930a      	str	r3, [sp, #40]	@ 0x28
 80086fe:	233f      	movs	r3, #63	@ 0x3f
 8008700:	9309      	str	r3, [sp, #36]	@ 0x24
 8008702:	4b12      	ldr	r3, [pc, #72]	@ (800874c <_Z23getFont_verdana_30_4bppv+0x90>)
 8008704:	9308      	str	r3, [sp, #32]
 8008706:	4b12      	ldr	r3, [pc, #72]	@ (8008750 <_Z23getFont_verdana_30_4bppv+0x94>)
 8008708:	9307      	str	r3, [sp, #28]
 800870a:	2301      	movs	r3, #1
 800870c:	9306      	str	r3, [sp, #24]
 800870e:	2301      	movs	r3, #1
 8008710:	9305      	str	r3, [sp, #20]
 8008712:	2301      	movs	r3, #1
 8008714:	9304      	str	r3, [sp, #16]
 8008716:	2304      	movs	r3, #4
 8008718:	9303      	str	r3, [sp, #12]
 800871a:	2300      	movs	r3, #0
 800871c:	9302      	str	r3, [sp, #8]
 800871e:	2300      	movs	r3, #0
 8008720:	9301      	str	r3, [sp, #4]
 8008722:	231e      	movs	r3, #30
 8008724:	9300      	str	r3, [sp, #0]
 8008726:	2324      	movs	r3, #36	@ 0x24
 8008728:	225f      	movs	r2, #95	@ 0x5f
 800872a:	490a      	ldr	r1, [pc, #40]	@ (8008754 <_Z23getFont_verdana_30_4bppv+0x98>)
 800872c:	480a      	ldr	r0, [pc, #40]	@ (8008758 <_Z23getFont_verdana_30_4bppv+0x9c>)
 800872e:	f7ff fec1 	bl	80084b4 <_ZN8touchgfx13GeneratedFontC1EPKNS_9GlyphNodeEttthhhhhhPKPKhPKNS_11KerningNodeEttPKtPKNS_24FontContextualFormsTableE>
 8008732:	480a      	ldr	r0, [pc, #40]	@ (800875c <_Z23getFont_verdana_30_4bppv+0xa0>)
 8008734:	f019 feca 	bl	80224cc <atexit>
 8008738:	4803      	ldr	r0, [pc, #12]	@ (8008748 <_Z23getFont_verdana_30_4bppv+0x8c>)
 800873a:	f019 fe0a 	bl	8022352 <__cxa_guard_release>
    return verdana_30_4bpp;
 800873e:	4b06      	ldr	r3, [pc, #24]	@ (8008758 <_Z23getFont_verdana_30_4bppv+0x9c>)
}
 8008740:	4618      	mov	r0, r3
 8008742:	46bd      	mov	sp, r7
 8008744:	bd80      	pop	{r7, pc}
 8008746:	bf00      	nop
 8008748:	20000664 	.word	0x20000664
 800874c:	0802c260 	.word	0x0802c260
 8008750:	0802c50c 	.word	0x0802c50c
 8008754:	0802bd28 	.word	0x0802bd28
 8008758:	20000638 	.word	0x20000638
 800875c:	080086ad 	.word	0x080086ad

08008760 <_ZnwjPv>:
#endif // __cpp_sized_deallocation
#endif // __cpp_aligned_new

// Default placement versions of operator new.
_GLIBCXX_NODISCARD inline void* operator new(std::size_t, void* __p) _GLIBCXX_USE_NOEXCEPT
{ return __p; }
 8008760:	b480      	push	{r7}
 8008762:	b083      	sub	sp, #12
 8008764:	af00      	add	r7, sp, #0
 8008766:	6078      	str	r0, [r7, #4]
 8008768:	6039      	str	r1, [r7, #0]
 800876a:	683b      	ldr	r3, [r7, #0]
 800876c:	4618      	mov	r0, r3
 800876e:	370c      	adds	r7, #12
 8008770:	46bd      	mov	sp, r7
 8008772:	f85d 7b04 	ldr.w	r7, [sp], #4
 8008776:	4770      	bx	lr

08008778 <_ZN8touchgfx15UIEventListener16handleClickEventERKNS_10ClickEventE>:
     * This handler is invoked when a mouse click or display touch event has been detected
     * by the system.
     *
     * @param  event The event data.
     */
    virtual void handleClickEvent(const ClickEvent& event)
 8008778:	b480      	push	{r7}
 800877a:	b083      	sub	sp, #12
 800877c:	af00      	add	r7, sp, #0
 800877e:	6078      	str	r0, [r7, #4]
 8008780:	6039      	str	r1, [r7, #0]
    {
        (void)event; // Unused variable
    }
 8008782:	bf00      	nop
 8008784:	370c      	adds	r7, #12
 8008786:	46bd      	mov	sp, r7
 8008788:	f85d 7b04 	ldr.w	r7, [sp], #4
 800878c:	4770      	bx	lr

0800878e <_ZN8touchgfx15UIEventListener15handleDragEventERKNS_9DragEventE>:
    /**
     * This handler is invoked when a drag event has been detected by the system.
     *
     * @param  event The event data.
     */
    virtual void handleDragEvent(const DragEvent& event)
 800878e:	b480      	push	{r7}
 8008790:	b083      	sub	sp, #12
 8008792:	af00      	add	r7, sp, #0
 8008794:	6078      	str	r0, [r7, #4]
 8008796:	6039      	str	r1, [r7, #0]
    {
        (void)event; // Unused variable
    }
 8008798:	bf00      	nop
 800879a:	370c      	adds	r7, #12
 800879c:	46bd      	mov	sp, r7
 800879e:	f85d 7b04 	ldr.w	r7, [sp], #4
 80087a2:	4770      	bx	lr

080087a4 <_ZN8touchgfx15UIEventListener18handleGestureEventERKNS_12GestureEventE>:
    /**
     * This handler is invoked when a gesture event has been detected by the system.
     *
     * @param  event The event data.
     */
    virtual void handleGestureEvent(const GestureEvent& event)
 80087a4:	b480      	push	{r7}
 80087a6:	b083      	sub	sp, #12
 80087a8:	af00      	add	r7, sp, #0
 80087aa:	6078      	str	r0, [r7, #4]
 80087ac:	6039      	str	r1, [r7, #0]
    {
        (void)event; // Unused variable
    }
 80087ae:	bf00      	nop
 80087b0:	370c      	adds	r7, #12
 80087b2:	46bd      	mov	sp, r7
 80087b4:	f85d 7b04 	ldr.w	r7, [sp], #4
 80087b8:	4770      	bx	lr

080087ba <_ZN8touchgfx15UIEventListener14handleKeyEventEh>:
    /**
     * This handler is invoked when a key (or button) event has been detected by the system.
     *
     * @param  c The key or button pressed.
     */
    virtual void handleKeyEvent(uint8_t c)
 80087ba:	b480      	push	{r7}
 80087bc:	b083      	sub	sp, #12
 80087be:	af00      	add	r7, sp, #0
 80087c0:	6078      	str	r0, [r7, #4]
 80087c2:	460b      	mov	r3, r1
 80087c4:	70fb      	strb	r3, [r7, #3]
    {
        (void)c; // Unused variable
    }
 80087c6:	bf00      	nop
 80087c8:	370c      	adds	r7, #12
 80087ca:	46bd      	mov	sp, r7
 80087cc:	f85d 7b04 	ldr.w	r7, [sp], #4
 80087d0:	4770      	bx	lr

080087d2 <_ZN8touchgfx15UIEventListener15handleTickEventEv>:

    /**
     * This handler is invoked when a system tick event has been generated. The system tick
     * period is configured in the HAL.
     */
    virtual void handleTickEvent()
 80087d2:	b480      	push	{r7}
 80087d4:	b083      	sub	sp, #12
 80087d6:	af00      	add	r7, sp, #0
 80087d8:	6078      	str	r0, [r7, #4]
    {
    }
 80087da:	bf00      	nop
 80087dc:	370c      	adds	r7, #12
 80087de:	46bd      	mov	sp, r7
 80087e0:	f85d 7b04 	ldr.w	r7, [sp], #4
 80087e4:	4770      	bx	lr

080087e6 <_ZN8touchgfx15UIEventListener29handlePendingScreenTransitionEv>:

    /** This handler is invoked when a change screen event is pending. */
    virtual void handlePendingScreenTransition()
 80087e6:	b480      	push	{r7}
 80087e8:	b083      	sub	sp, #12
 80087ea:	af00      	add	r7, sp, #0
 80087ec:	6078      	str	r0, [r7, #4]
    {
    }
 80087ee:	bf00      	nop
 80087f0:	370c      	adds	r7, #12
 80087f2:	46bd      	mov	sp, r7
 80087f4:	f85d 7b04 	ldr.w	r7, [sp], #4
 80087f8:	4770      	bx	lr
	...

080087fc <_ZN8touchgfx15UIEventListenerD1Ev>:

    /** Finalizes an instance of the UIEventListener class. */
    virtual ~UIEventListener()
 80087fc:	b480      	push	{r7}
 80087fe:	b083      	sub	sp, #12
 8008800:	af00      	add	r7, sp, #0
 8008802:	6078      	str	r0, [r7, #4]
    {
 8008804:	4a04      	ldr	r2, [pc, #16]	@ (8008818 <_ZN8touchgfx15UIEventListenerD1Ev+0x1c>)
 8008806:	687b      	ldr	r3, [r7, #4]
 8008808:	601a      	str	r2, [r3, #0]
    }
 800880a:	687b      	ldr	r3, [r7, #4]
 800880c:	4618      	mov	r0, r3
 800880e:	370c      	adds	r7, #12
 8008810:	46bd      	mov	sp, r7
 8008812:	f85d 7b04 	ldr.w	r7, [sp], #4
 8008816:	4770      	bx	lr
 8008818:	08024720 	.word	0x08024720

0800881c <_ZN8touchgfx15UIEventListenerD0Ev>:
    virtual ~UIEventListener()
 800881c:	b580      	push	{r7, lr}
 800881e:	b082      	sub	sp, #8
 8008820:	af00      	add	r7, sp, #0
 8008822:	6078      	str	r0, [r7, #4]
    }
 8008824:	6878      	ldr	r0, [r7, #4]
 8008826:	f7ff ffe9 	bl	80087fc <_ZN8touchgfx15UIEventListenerD1Ev>
 800882a:	2104      	movs	r1, #4
 800882c:	6878      	ldr	r0, [r7, #4]
 800882e:	f019 fd82 	bl	8022336 <_ZdlPvj>
 8008832:	687b      	ldr	r3, [r7, #4]
 8008834:	4618      	mov	r0, r3
 8008836:	3708      	adds	r7, #8
 8008838:	46bd      	mov	sp, r7
 800883a:	bd80      	pop	{r7, pc}

0800883c <_ZN8touchgfx11Application19changeToStartScreenEv>:
     * @note The application will not make a complete restart - if
     *       your Model contains data, this will not be reset, unless
     *       this is explicitly done in your
     *       FrontendApplication::changeToStartScreen().
     */
    virtual void changeToStartScreen()
 800883c:	b480      	push	{r7}
 800883e:	b083      	sub	sp, #12
 8008840:	af00      	add	r7, sp, #0
 8008842:	6078      	str	r0, [r7, #4]
    {
    }
 8008844:	bf00      	nop
 8008846:	370c      	adds	r7, #12
 8008848:	46bd      	mov	sp, r7
 800884a:	f85d 7b04 	ldr.w	r7, [sp], #4
 800884e:	4770      	bx	lr

08008850 <_ZN8touchgfx11Application15appSwitchScreenEh>:
     * means to switch screen from places that does not have access to a pointer to the new
     * screen. Base implementation is empty.
     *
     * @param screenId An id that maps to the desired screen.
     */
    virtual void appSwitchScreen(uint8_t screenId)
 8008850:	b480      	push	{r7}
 8008852:	b083      	sub	sp, #12
 8008854:	af00      	add	r7, sp, #0
 8008856:	6078      	str	r0, [r7, #4]
 8008858:	460b      	mov	r3, r1
 800885a:	70fb      	strb	r3, [r7, #3]
    {
        (void)screenId; // Unused variable
    }
 800885c:	bf00      	nop
 800885e:	370c      	adds	r7, #12
 8008860:	46bd      	mov	sp, r7
 8008862:	f85d 7b04 	ldr.w	r7, [sp], #4
 8008866:	4770      	bx	lr

08008868 <_ZN8touchgfx11Application13requestRedrawERNS_4RectE>:
    /**
     * An application specific function for requesting redraw of given Rect.
     *
     * @param [in,out] rect The Rect that must be redrawn.
     */
    virtual void requestRedraw(Rect& rect)
 8008868:	b480      	push	{r7}
 800886a:	b083      	sub	sp, #12
 800886c:	af00      	add	r7, sp, #0
 800886e:	6078      	str	r0, [r7, #4]
 8008870:	6039      	str	r1, [r7, #0]
    {
        redraw = rect;
 8008872:	687b      	ldr	r3, [r7, #4]
 8008874:	683a      	ldr	r2, [r7, #0]
 8008876:	f503 7398 	add.w	r3, r3, #304	@ 0x130
 800887a:	6810      	ldr	r0, [r2, #0]
 800887c:	6851      	ldr	r1, [r2, #4]
 800887e:	c303      	stmia	r3!, {r0, r1}
    }
 8008880:	bf00      	nop
 8008882:	370c      	adds	r7, #12
 8008884:	46bd      	mov	sp, r7
 8008886:	f85d 7b04 	ldr.w	r7, [sp], #4
 800888a:	4770      	bx	lr

0800888c <_ZN8touchgfx11Application20clearAllTimerWidgetsEv>:
        timerWidgets.add(w);
    }

    /** Clears all currently registered timer widgets. */

    void clearAllTimerWidgets()
 800888c:	b580      	push	{r7, lr}
 800888e:	b082      	sub	sp, #8
 8008890:	af00      	add	r7, sp, #0
 8008892:	6078      	str	r0, [r7, #4]
    {
        timerWidgets.clear();
 8008894:	687b      	ldr	r3, [r7, #4]
 8008896:	3304      	adds	r3, #4
 8008898:	4618      	mov	r0, r3
 800889a:	f008 f818 	bl	80108ce <_ZN8touchgfx11Application12TimerWidgets5clearEv>
    }
 800889e:	bf00      	nop
 80088a0:	3708      	adds	r7, #8
 80088a2:	46bd      	mov	sp, r7
 80088a4:	bd80      	pop	{r7, pc}
	...

080088a8 <_ZN8touchgfx15GenericCallbackIvvvED1Ev>:
template <>
class GenericCallback<void>
{
public:
    /** Finalizes an instance of the GenericCallback<void> class. */
    virtual ~GenericCallback()
 80088a8:	b480      	push	{r7}
 80088aa:	b083      	sub	sp, #12
 80088ac:	af00      	add	r7, sp, #0
 80088ae:	6078      	str	r0, [r7, #4]
    {
 80088b0:	4a04      	ldr	r2, [pc, #16]	@ (80088c4 <_ZN8touchgfx15GenericCallbackIvvvED1Ev+0x1c>)
 80088b2:	687b      	ldr	r3, [r7, #4]
 80088b4:	601a      	str	r2, [r3, #0]
    }
 80088b6:	687b      	ldr	r3, [r7, #4]
 80088b8:	4618      	mov	r0, r3
 80088ba:	370c      	adds	r7, #12
 80088bc:	46bd      	mov	sp, r7
 80088be:	f85d 7b04 	ldr.w	r7, [sp], #4
 80088c2:	4770      	bx	lr
 80088c4:	08024708 	.word	0x08024708

080088c8 <_ZN8touchgfx15GenericCallbackIvvvED0Ev>:
    virtual ~GenericCallback()
 80088c8:	b580      	push	{r7, lr}
 80088ca:	b082      	sub	sp, #8
 80088cc:	af00      	add	r7, sp, #0
 80088ce:	6078      	str	r0, [r7, #4]
    }
 80088d0:	6878      	ldr	r0, [r7, #4]
 80088d2:	f7ff ffe9 	bl	80088a8 <_ZN8touchgfx15GenericCallbackIvvvED1Ev>
 80088d6:	2104      	movs	r1, #4
 80088d8:	6878      	ldr	r0, [r7, #4]
 80088da:	f019 fd2c 	bl	8022336 <_ZdlPvj>
 80088de:	687b      	ldr	r3, [r7, #4]
 80088e0:	4618      	mov	r0, r3
 80088e2:	3708      	adds	r7, #8
 80088e4:	46bd      	mov	sp, r7
 80088e6:	bd80      	pop	{r7, pc}

080088e8 <_ZN8touchgfx3HAL11getInstanceEv>:
    /**
     * Gets the HAL instance.
     *
     * @return The HAL instance.
     */
    static HAL* getInstance()
 80088e8:	b480      	push	{r7}
 80088ea:	af00      	add	r7, sp, #0
    {
        return instance;
 80088ec:	4b03      	ldr	r3, [pc, #12]	@ (80088fc <_ZN8touchgfx3HAL11getInstanceEv+0x14>)
 80088ee:	681b      	ldr	r3, [r3, #0]
    }
 80088f0:	4618      	mov	r0, r3
 80088f2:	46bd      	mov	sp, r7
 80088f4:	f85d 7b04 	ldr.w	r7, [sp], #4
 80088f8:	4770      	bx	lr
 80088fa:	bf00      	nop
 80088fc:	20002dbc 	.word	0x20002dbc

08008900 <_ZN8touchgfx3HAL3lcdEv>:
    /**
     * Gets a reference to the LCD.
     *
     * @return A reference to the LCD.
     */
    static LCD& lcd()
 8008900:	b480      	push	{r7}
 8008902:	af00      	add	r7, sp, #0
    {
        if (instance->useAuxiliaryLCD && instance->auxiliaryLCD)
 8008904:	4b0b      	ldr	r3, [pc, #44]	@ (8008934 <_ZN8touchgfx3HAL3lcdEv+0x34>)
 8008906:	681b      	ldr	r3, [r3, #0]
 8008908:	f893 3058 	ldrb.w	r3, [r3, #88]	@ 0x58
 800890c:	2b00      	cmp	r3, #0
 800890e:	d008      	beq.n	8008922 <_ZN8touchgfx3HAL3lcdEv+0x22>
 8008910:	4b08      	ldr	r3, [pc, #32]	@ (8008934 <_ZN8touchgfx3HAL3lcdEv+0x34>)
 8008912:	681b      	ldr	r3, [r3, #0]
 8008914:	6cdb      	ldr	r3, [r3, #76]	@ 0x4c
 8008916:	2b00      	cmp	r3, #0
 8008918:	d003      	beq.n	8008922 <_ZN8touchgfx3HAL3lcdEv+0x22>
        {
            return *instance->auxiliaryLCD;
 800891a:	4b06      	ldr	r3, [pc, #24]	@ (8008934 <_ZN8touchgfx3HAL3lcdEv+0x34>)
 800891c:	681b      	ldr	r3, [r3, #0]
 800891e:	6cdb      	ldr	r3, [r3, #76]	@ 0x4c
 8008920:	e002      	b.n	8008928 <_ZN8touchgfx3HAL3lcdEv+0x28>
        }
        return instance->lcdRef;
 8008922:	4b04      	ldr	r3, [pc, #16]	@ (8008934 <_ZN8touchgfx3HAL3lcdEv+0x34>)
 8008924:	681b      	ldr	r3, [r3, #0]
 8008926:	689b      	ldr	r3, [r3, #8]
    }
 8008928:	4618      	mov	r0, r3
 800892a:	46bd      	mov	sp, r7
 800892c:	f85d 7b04 	ldr.w	r7, [sp], #4
 8008930:	4770      	bx	lr
 8008932:	bf00      	nop
 8008934:	20002dbc 	.word	0x20002dbc

08008938 <_ZN8touchgfx10TransitionC1Ev>:
 */
class Transition
{
public:
    /** Initializes a new instance of the Transition class. */
    Transition()
 8008938:	b480      	push	{r7}
 800893a:	b083      	sub	sp, #12
 800893c:	af00      	add	r7, sp, #0
 800893e:	6078      	str	r0, [r7, #4]
        : screenContainer(0), done(false)
 8008940:	4a07      	ldr	r2, [pc, #28]	@ (8008960 <_ZN8touchgfx10TransitionC1Ev+0x28>)
 8008942:	687b      	ldr	r3, [r7, #4]
 8008944:	601a      	str	r2, [r3, #0]
 8008946:	687b      	ldr	r3, [r7, #4]
 8008948:	2200      	movs	r2, #0
 800894a:	605a      	str	r2, [r3, #4]
 800894c:	687b      	ldr	r3, [r7, #4]
 800894e:	2200      	movs	r2, #0
 8008950:	721a      	strb	r2, [r3, #8]
    {
    }
 8008952:	687b      	ldr	r3, [r7, #4]
 8008954:	4618      	mov	r0, r3
 8008956:	370c      	adds	r7, #12
 8008958:	46bd      	mov	sp, r7
 800895a:	f85d 7b04 	ldr.w	r7, [sp], #4
 800895e:	4770      	bx	lr
 8008960:	080246e4 	.word	0x080246e4

08008964 <_ZN8touchgfx10TransitionD1Ev>:

    /** Finalizes an instance of the Transition class. */
    virtual ~Transition()
 8008964:	b480      	push	{r7}
 8008966:	b083      	sub	sp, #12
 8008968:	af00      	add	r7, sp, #0
 800896a:	6078      	str	r0, [r7, #4]
    {
 800896c:	4a04      	ldr	r2, [pc, #16]	@ (8008980 <_ZN8touchgfx10TransitionD1Ev+0x1c>)
 800896e:	687b      	ldr	r3, [r7, #4]
 8008970:	601a      	str	r2, [r3, #0]
    }
 8008972:	687b      	ldr	r3, [r7, #4]
 8008974:	4618      	mov	r0, r3
 8008976:	370c      	adds	r7, #12
 8008978:	46bd      	mov	sp, r7
 800897a:	f85d 7b04 	ldr.w	r7, [sp], #4
 800897e:	4770      	bx	lr
 8008980:	080246e4 	.word	0x080246e4

08008984 <_ZN8touchgfx10TransitionD0Ev>:
    virtual ~Transition()
 8008984:	b580      	push	{r7, lr}
 8008986:	b082      	sub	sp, #8
 8008988:	af00      	add	r7, sp, #0
 800898a:	6078      	str	r0, [r7, #4]
    }
 800898c:	6878      	ldr	r0, [r7, #4]
 800898e:	f7ff ffe9 	bl	8008964 <_ZN8touchgfx10TransitionD1Ev>
 8008992:	210c      	movs	r1, #12
 8008994:	6878      	ldr	r0, [r7, #4]
 8008996:	f019 fcce 	bl	8022336 <_ZdlPvj>
 800899a:	687b      	ldr	r3, [r7, #4]
 800899c:	4618      	mov	r0, r3
 800899e:	3708      	adds	r7, #8
 80089a0:	46bd      	mov	sp, r7
 80089a2:	bd80      	pop	{r7, pc}

080089a4 <_ZN8touchgfx10Transition15handleTickEventEv>:

    /** Called for every tick when transitioning. */
    virtual void handleTickEvent()
 80089a4:	b480      	push	{r7}
 80089a6:	b083      	sub	sp, #12
 80089a8:	af00      	add	r7, sp, #0
 80089aa:	6078      	str	r0, [r7, #4]
    {
    }
 80089ac:	bf00      	nop
 80089ae:	370c      	adds	r7, #12
 80089b0:	46bd      	mov	sp, r7
 80089b2:	f85d 7b04 	ldr.w	r7, [sp], #4
 80089b6:	4770      	bx	lr

080089b8 <_ZN8touchgfx10Transition8tearDownEv>:

    /**
     * Tears down the Animation. Called before the destructor is called, when the
     * application changes the transition.
     */
    virtual void tearDown()
 80089b8:	b480      	push	{r7}
 80089ba:	b083      	sub	sp, #12
 80089bc:	af00      	add	r7, sp, #0
 80089be:	6078      	str	r0, [r7, #4]
    {
    }
 80089c0:	bf00      	nop
 80089c2:	370c      	adds	r7, #12
 80089c4:	46bd      	mov	sp, r7
 80089c6:	f85d 7b04 	ldr.w	r7, [sp], #4
 80089ca:	4770      	bx	lr

080089cc <_ZN8touchgfx10Transition4initEv>:

    /**
     * Initializes the transition. Called after the constructor is called, when the
     * application changes the transition.
     */
    virtual void init()
 80089cc:	b480      	push	{r7}
 80089ce:	b083      	sub	sp, #12
 80089d0:	af00      	add	r7, sp, #0
 80089d2:	6078      	str	r0, [r7, #4]
    {
    }
 80089d4:	bf00      	nop
 80089d6:	370c      	adds	r7, #12
 80089d8:	46bd      	mov	sp, r7
 80089da:	f85d 7b04 	ldr.w	r7, [sp], #4
 80089de:	4770      	bx	lr

080089e0 <_ZN8touchgfx10Transition10invalidateEv>:
    /**
     * Invalidates the screen when starting the Transition. Default is
     * to invalidate the whole screen. Subclasses can do partial
     * invalidation.
     */
    virtual void invalidate()
 80089e0:	b580      	push	{r7, lr}
 80089e2:	b082      	sub	sp, #8
 80089e4:	af00      	add	r7, sp, #0
 80089e6:	6078      	str	r0, [r7, #4]
    {
        Application::getInstance()->invalidate();
 80089e8:	f007 ff4c 	bl	8010884 <_ZN8touchgfx11Application11getInstanceEv>
 80089ec:	4603      	mov	r3, r0
 80089ee:	681a      	ldr	r2, [r3, #0]
 80089f0:	323c      	adds	r2, #60	@ 0x3c
 80089f2:	6812      	ldr	r2, [r2, #0]
 80089f4:	4618      	mov	r0, r3
 80089f6:	4790      	blx	r2
    }
 80089f8:	bf00      	nop
 80089fa:	3708      	adds	r7, #8
 80089fc:	46bd      	mov	sp, r7
 80089fe:	bd80      	pop	{r7, pc}

08008a00 <_ZN8touchgfx10Transition18setScreenContainerERNS_9ContainerE>:
     * Sets the Screen Container. Is used by Screen to enable the transition to access the
     * Container.
     *
     * @param [in] cont The Container the transition should have access to.
     */
    virtual void setScreenContainer(Container& cont)
 8008a00:	b480      	push	{r7}
 8008a02:	b083      	sub	sp, #12
 8008a04:	af00      	add	r7, sp, #0
 8008a06:	6078      	str	r0, [r7, #4]
 8008a08:	6039      	str	r1, [r7, #0]
    {
        screenContainer = &cont;
 8008a0a:	687b      	ldr	r3, [r7, #4]
 8008a0c:	683a      	ldr	r2, [r7, #0]
 8008a0e:	605a      	str	r2, [r3, #4]
    }
 8008a10:	bf00      	nop
 8008a12:	370c      	adds	r7, #12
 8008a14:	46bd      	mov	sp, r7
 8008a16:	f85d 7b04 	ldr.w	r7, [sp], #4
 8008a1a:	4770      	bx	lr

08008a1c <_ZN8touchgfx11ApplicationD1Ev>:
class Application : public UIEventListener
 8008a1c:	b580      	push	{r7, lr}
 8008a1e:	b082      	sub	sp, #8
 8008a20:	af00      	add	r7, sp, #0
 8008a22:	6078      	str	r0, [r7, #4]
 8008a24:	4a05      	ldr	r2, [pc, #20]	@ (8008a3c <_ZN8touchgfx11ApplicationD1Ev+0x20>)
 8008a26:	687b      	ldr	r3, [r7, #4]
 8008a28:	601a      	str	r2, [r3, #0]
 8008a2a:	687b      	ldr	r3, [r7, #4]
 8008a2c:	4618      	mov	r0, r3
 8008a2e:	f7ff fee5 	bl	80087fc <_ZN8touchgfx15UIEventListenerD1Ev>
 8008a32:	687b      	ldr	r3, [r7, #4]
 8008a34:	4618      	mov	r0, r3
 8008a36:	3708      	adds	r7, #8
 8008a38:	46bd      	mov	sp, r7
 8008a3a:	bd80      	pop	{r7, pc}
 8008a3c:	080253d0 	.word	0x080253d0

08008a40 <_ZN8touchgfx11ApplicationD0Ev>:
 8008a40:	b580      	push	{r7, lr}
 8008a42:	b082      	sub	sp, #8
 8008a44:	af00      	add	r7, sp, #0
 8008a46:	6078      	str	r0, [r7, #4]
 8008a48:	6878      	ldr	r0, [r7, #4]
 8008a4a:	f7ff ffe7 	bl	8008a1c <_ZN8touchgfx11ApplicationD1Ev>
 8008a4e:	f44f 719e 	mov.w	r1, #316	@ 0x13c
 8008a52:	6878      	ldr	r0, [r7, #4]
 8008a54:	f019 fc6f 	bl	8022336 <_ZdlPvj>
 8008a58:	687b      	ldr	r3, [r7, #4]
 8008a5a:	4618      	mov	r0, r3
 8008a5c:	3708      	adds	r7, #8
 8008a5e:	46bd      	mov	sp, r7
 8008a60:	bd80      	pop	{r7, pc}
	...

08008a64 <_ZN8touchgfx14MVPApplicationC1Ev>:
 */
class MVPApplication : public Application
{
public:
    /** Initializes a new instance of the MVPApplication class. */
    MVPApplication()
 8008a64:	b580      	push	{r7, lr}
 8008a66:	b082      	sub	sp, #8
 8008a68:	af00      	add	r7, sp, #0
 8008a6a:	6078      	str	r0, [r7, #4]
        : currentPresenter(0),
          pendingScreenTransitionCallback(0)
 8008a6c:	687b      	ldr	r3, [r7, #4]
 8008a6e:	4618      	mov	r0, r3
 8008a70:	f007 ffca 	bl	8010a08 <_ZN8touchgfx11ApplicationC1Ev>
 8008a74:	4a09      	ldr	r2, [pc, #36]	@ (8008a9c <_ZN8touchgfx14MVPApplicationC1Ev+0x38>)
 8008a76:	687b      	ldr	r3, [r7, #4]
 8008a78:	601a      	str	r2, [r3, #0]
        : currentPresenter(0),
 8008a7a:	687b      	ldr	r3, [r7, #4]
 8008a7c:	2200      	movs	r2, #0
 8008a7e:	f8c3 213c 	str.w	r2, [r3, #316]	@ 0x13c
          pendingScreenTransitionCallback(0)
 8008a82:	687b      	ldr	r3, [r7, #4]
 8008a84:	2200      	movs	r2, #0
 8008a86:	f8c3 2140 	str.w	r2, [r3, #320]	@ 0x140
    {
        instance = this;
 8008a8a:	687b      	ldr	r3, [r7, #4]
 8008a8c:	4a04      	ldr	r2, [pc, #16]	@ (8008aa0 <_ZN8touchgfx14MVPApplicationC1Ev+0x3c>)
 8008a8e:	6013      	str	r3, [r2, #0]
    }
 8008a90:	687b      	ldr	r3, [r7, #4]
 8008a92:	4618      	mov	r0, r3
 8008a94:	3708      	adds	r7, #8
 8008a96:	46bd      	mov	sp, r7
 8008a98:	bd80      	pop	{r7, pc}
 8008a9a:	bf00      	nop
 8008a9c:	08024690 	.word	0x08024690
 8008aa0:	20002e08 	.word	0x20002e08

08008aa4 <_ZN8touchgfx14MVPApplication29handlePendingScreenTransitionEv>:
    /**
     * Handles the pending screen transition.
     *
     * Delegates the work to evaluatePendingScreenTransition()
     */
    virtual void handlePendingScreenTransition()
 8008aa4:	b580      	push	{r7, lr}
 8008aa6:	b082      	sub	sp, #8
 8008aa8:	af00      	add	r7, sp, #0
 8008aaa:	6078      	str	r0, [r7, #4]
    {
        evaluatePendingScreenTransition();
 8008aac:	6878      	ldr	r0, [r7, #4]
 8008aae:	f000 f804 	bl	8008aba <_ZN8touchgfx14MVPApplication31evaluatePendingScreenTransitionEv>
    }
 8008ab2:	bf00      	nop
 8008ab4:	3708      	adds	r7, #8
 8008ab6:	46bd      	mov	sp, r7
 8008ab8:	bd80      	pop	{r7, pc}

08008aba <_ZN8touchgfx14MVPApplication31evaluatePendingScreenTransitionEv>:

    /**
     * Evaluates the pending Callback instances. If a callback is valid, it is executed and
     * a Screen transition is executed.
     */
    void evaluatePendingScreenTransition()
 8008aba:	b580      	push	{r7, lr}
 8008abc:	b082      	sub	sp, #8
 8008abe:	af00      	add	r7, sp, #0
 8008ac0:	6078      	str	r0, [r7, #4]
    {
        if (pendingScreenTransitionCallback && pendingScreenTransitionCallback->isValid())
 8008ac2:	687b      	ldr	r3, [r7, #4]
 8008ac4:	f8d3 3140 	ldr.w	r3, [r3, #320]	@ 0x140
 8008ac8:	2b00      	cmp	r3, #0
 8008aca:	d00f      	beq.n	8008aec <_ZN8touchgfx14MVPApplication31evaluatePendingScreenTransitionEv+0x32>
 8008acc:	687b      	ldr	r3, [r7, #4]
 8008ace:	f8d3 2140 	ldr.w	r2, [r3, #320]	@ 0x140
 8008ad2:	687b      	ldr	r3, [r7, #4]
 8008ad4:	f8d3 3140 	ldr.w	r3, [r3, #320]	@ 0x140
 8008ad8:	681b      	ldr	r3, [r3, #0]
 8008ada:	330c      	adds	r3, #12
 8008adc:	681b      	ldr	r3, [r3, #0]
 8008ade:	4610      	mov	r0, r2
 8008ae0:	4798      	blx	r3
 8008ae2:	4603      	mov	r3, r0
 8008ae4:	2b00      	cmp	r3, #0
 8008ae6:	d001      	beq.n	8008aec <_ZN8touchgfx14MVPApplication31evaluatePendingScreenTransitionEv+0x32>
 8008ae8:	2301      	movs	r3, #1
 8008aea:	e000      	b.n	8008aee <_ZN8touchgfx14MVPApplication31evaluatePendingScreenTransitionEv+0x34>
 8008aec:	2300      	movs	r3, #0
 8008aee:	2b00      	cmp	r3, #0
 8008af0:	d00e      	beq.n	8008b10 <_ZN8touchgfx14MVPApplication31evaluatePendingScreenTransitionEv+0x56>
        {
            pendingScreenTransitionCallback->execute();
 8008af2:	687b      	ldr	r3, [r7, #4]
 8008af4:	f8d3 2140 	ldr.w	r2, [r3, #320]	@ 0x140
 8008af8:	687b      	ldr	r3, [r7, #4]
 8008afa:	f8d3 3140 	ldr.w	r3, [r3, #320]	@ 0x140
 8008afe:	681b      	ldr	r3, [r3, #0]
 8008b00:	3308      	adds	r3, #8
 8008b02:	681b      	ldr	r3, [r3, #0]
 8008b04:	4610      	mov	r0, r2
 8008b06:	4798      	blx	r3
            pendingScreenTransitionCallback = 0;
 8008b08:	687b      	ldr	r3, [r7, #4]
 8008b0a:	2200      	movs	r2, #0
 8008b0c:	f8c3 2140 	str.w	r2, [r3, #320]	@ 0x140
        }
    }
 8008b10:	bf00      	nop
 8008b12:	3708      	adds	r7, #8
 8008b14:	46bd      	mov	sp, r7
 8008b16:	bd80      	pop	{r7, pc}

08008b18 <_ZN5Model4bindEP13ModelListener>:

    /**
     * Sets the modelListener to point to the currently active presenter. Called automatically
     * when switching screen.
     */
    void bind(ModelListener* listener)
 8008b18:	b480      	push	{r7}
 8008b1a:	b083      	sub	sp, #12
 8008b1c:	af00      	add	r7, sp, #0
 8008b1e:	6078      	str	r0, [r7, #4]
 8008b20:	6039      	str	r1, [r7, #0]
    {
        modelListener = listener;
 8008b22:	687b      	ldr	r3, [r7, #4]
 8008b24:	683a      	ldr	r2, [r7, #0]
 8008b26:	601a      	str	r2, [r3, #0]
    }
 8008b28:	bf00      	nop
 8008b2a:	370c      	adds	r7, #12
 8008b2c:	46bd      	mov	sp, r7
 8008b2e:	f85d 7b04 	ldr.w	r7, [sp], #4
 8008b32:	4770      	bx	lr

08008b34 <_ZN8touchgfx14MVPApplicationD1Ev>:
class MVPApplication : public Application
 8008b34:	b580      	push	{r7, lr}
 8008b36:	b082      	sub	sp, #8
 8008b38:	af00      	add	r7, sp, #0
 8008b3a:	6078      	str	r0, [r7, #4]
 8008b3c:	4a05      	ldr	r2, [pc, #20]	@ (8008b54 <_ZN8touchgfx14MVPApplicationD1Ev+0x20>)
 8008b3e:	687b      	ldr	r3, [r7, #4]
 8008b40:	601a      	str	r2, [r3, #0]
 8008b42:	687b      	ldr	r3, [r7, #4]
 8008b44:	4618      	mov	r0, r3
 8008b46:	f7ff ff69 	bl	8008a1c <_ZN8touchgfx11ApplicationD1Ev>
 8008b4a:	687b      	ldr	r3, [r7, #4]
 8008b4c:	4618      	mov	r0, r3
 8008b4e:	3708      	adds	r7, #8
 8008b50:	46bd      	mov	sp, r7
 8008b52:	bd80      	pop	{r7, pc}
 8008b54:	08024690 	.word	0x08024690

08008b58 <_ZN8touchgfx14MVPApplicationD0Ev>:
 8008b58:	b580      	push	{r7, lr}
 8008b5a:	b082      	sub	sp, #8
 8008b5c:	af00      	add	r7, sp, #0
 8008b5e:	6078      	str	r0, [r7, #4]
 8008b60:	6878      	ldr	r0, [r7, #4]
 8008b62:	f7ff ffe7 	bl	8008b34 <_ZN8touchgfx14MVPApplicationD1Ev>
 8008b66:	f44f 71a2 	mov.w	r1, #324	@ 0x144
 8008b6a:	6878      	ldr	r0, [r7, #4]
 8008b6c:	f019 fbe3 	bl	8022336 <_ZdlPvj>
 8008b70:	687b      	ldr	r3, [r7, #4]
 8008b72:	4618      	mov	r0, r3
 8008b74:	3708      	adds	r7, #8
 8008b76:	46bd      	mov	sp, r7
 8008b78:	bd80      	pop	{r7, pc}
	...

08008b7c <_ZN23FrontendApplicationBaseD1Ev>:

class FrontendApplicationBase : public touchgfx::MVPApplication
{
public:
    FrontendApplicationBase(Model& m, FrontendHeap& heap);
    virtual ~FrontendApplicationBase() { }
 8008b7c:	b580      	push	{r7, lr}
 8008b7e:	b082      	sub	sp, #8
 8008b80:	af00      	add	r7, sp, #0
 8008b82:	6078      	str	r0, [r7, #4]
 8008b84:	4a08      	ldr	r2, [pc, #32]	@ (8008ba8 <_ZN23FrontendApplicationBaseD1Ev+0x2c>)
 8008b86:	687b      	ldr	r3, [r7, #4]
 8008b88:	601a      	str	r2, [r3, #0]
 8008b8a:	687b      	ldr	r3, [r7, #4]
 8008b8c:	f503 73a2 	add.w	r3, r3, #324	@ 0x144
 8008b90:	4618      	mov	r0, r3
 8008b92:	f000 fad3 	bl	800913c <_ZN8touchgfx8CallbackI23FrontendApplicationBasevvvED1Ev>
 8008b96:	687b      	ldr	r3, [r7, #4]
 8008b98:	4618      	mov	r0, r3
 8008b9a:	f7ff ffcb 	bl	8008b34 <_ZN8touchgfx14MVPApplicationD1Ev>
 8008b9e:	687b      	ldr	r3, [r7, #4]
 8008ba0:	4618      	mov	r0, r3
 8008ba2:	3708      	adds	r7, #8
 8008ba4:	46bd      	mov	sp, r7
 8008ba6:	bd80      	pop	{r7, pc}
 8008ba8:	08024624 	.word	0x08024624

08008bac <_ZN23FrontendApplicationBaseD0Ev>:
 8008bac:	b580      	push	{r7, lr}
 8008bae:	b082      	sub	sp, #8
 8008bb0:	af00      	add	r7, sp, #0
 8008bb2:	6078      	str	r0, [r7, #4]
 8008bb4:	6878      	ldr	r0, [r7, #4]
 8008bb6:	f7ff ffe1 	bl	8008b7c <_ZN23FrontendApplicationBaseD1Ev>
 8008bba:	f44f 71ae 	mov.w	r1, #348	@ 0x15c
 8008bbe:	6878      	ldr	r0, [r7, #4]
 8008bc0:	f019 fbb9 	bl	8022336 <_ZdlPvj>
 8008bc4:	687b      	ldr	r3, [r7, #4]
 8008bc6:	4618      	mov	r0, r3
 8008bc8:	3708      	adds	r7, #8
 8008bca:	46bd      	mov	sp, r7
 8008bcc:	bd80      	pop	{r7, pc}

08008bce <_ZN23FrontendApplicationBase19changeToStartScreenEv>:

    virtual void changeToStartScreen()
 8008bce:	b580      	push	{r7, lr}
 8008bd0:	b082      	sub	sp, #8
 8008bd2:	af00      	add	r7, sp, #0
 8008bd4:	6078      	str	r0, [r7, #4]
    {
        gotoMainScreenNoTransition();
 8008bd6:	6878      	ldr	r0, [r7, #4]
 8008bd8:	f000 f888 	bl	8008cec <_ZN23FrontendApplicationBase26gotoMainScreenNoTransitionEv>
    }
 8008bdc:	bf00      	nop
 8008bde:	3708      	adds	r7, #8
 8008be0:	46bd      	mov	sp, r7
 8008be2:	bd80      	pop	{r7, pc}

08008be4 <_ZN8touchgfx12NoTransition15handleTickEventEv>:
 */
class NoTransition : public Transition
{
public:
    /** Indicates that the transition is done after the first tick. */
    virtual void handleTickEvent()
 8008be4:	b480      	push	{r7}
 8008be6:	b083      	sub	sp, #12
 8008be8:	af00      	add	r7, sp, #0
 8008bea:	6078      	str	r0, [r7, #4]
    {
        done = true;
 8008bec:	687b      	ldr	r3, [r7, #4]
 8008bee:	2201      	movs	r2, #1
 8008bf0:	721a      	strb	r2, [r3, #8]
    }
 8008bf2:	bf00      	nop
 8008bf4:	370c      	adds	r7, #12
 8008bf6:	46bd      	mov	sp, r7
 8008bf8:	f85d 7b04 	ldr.w	r7, [sp], #4
 8008bfc:	4770      	bx	lr

08008bfe <_ZN13ModelListener4bindEP5Model>:

    /**
     * Sets the model pointer to point to the Model object. Called automatically
     * when switching screen.
     */
    void bind(Model* m)
 8008bfe:	b480      	push	{r7}
 8008c00:	b083      	sub	sp, #12
 8008c02:	af00      	add	r7, sp, #0
 8008c04:	6078      	str	r0, [r7, #4]
 8008c06:	6039      	str	r1, [r7, #0]
    {
        model = m;
 8008c08:	687b      	ldr	r3, [r7, #4]
 8008c0a:	683a      	ldr	r2, [r7, #0]
 8008c0c:	605a      	str	r2, [r3, #4]
    }
 8008c0e:	bf00      	nop
 8008c10:	370c      	adds	r7, #12
 8008c12:	46bd      	mov	sp, r7
 8008c14:	f85d 7b04 	ldr.w	r7, [sp], #4
 8008c18:	4770      	bx	lr
	...

08008c1c <_ZN23FrontendApplicationBaseC1ER5ModelR12FrontendHeap>:
#include <gui/main_screen/MainView.hpp>
#include <gui/main_screen/MainPresenter.hpp>

using namespace touchgfx;

FrontendApplicationBase::FrontendApplicationBase(Model& m, FrontendHeap& heap)
 8008c1c:	b580      	push	{r7, lr}
 8008c1e:	b084      	sub	sp, #16
 8008c20:	af00      	add	r7, sp, #0
 8008c22:	60f8      	str	r0, [r7, #12]
 8008c24:	60b9      	str	r1, [r7, #8]
 8008c26:	607a      	str	r2, [r7, #4]
    : touchgfx::MVPApplication(),
      transitionCallback(),
      frontendHeap(heap),
      model(m)
 8008c28:	68fb      	ldr	r3, [r7, #12]
 8008c2a:	4618      	mov	r0, r3
 8008c2c:	f7ff ff1a 	bl	8008a64 <_ZN8touchgfx14MVPApplicationC1Ev>
 8008c30:	4a19      	ldr	r2, [pc, #100]	@ (8008c98 <_ZN23FrontendApplicationBaseC1ER5ModelR12FrontendHeap+0x7c>)
 8008c32:	68fb      	ldr	r3, [r7, #12]
 8008c34:	601a      	str	r2, [r3, #0]
      transitionCallback(),
 8008c36:	68fb      	ldr	r3, [r7, #12]
 8008c38:	f503 73a2 	add.w	r3, r3, #324	@ 0x144
 8008c3c:	4618      	mov	r0, r3
 8008c3e:	f000 f8ab 	bl	8008d98 <_ZN8touchgfx8CallbackI23FrontendApplicationBasevvvEC1Ev>
      frontendHeap(heap),
 8008c42:	68fb      	ldr	r3, [r7, #12]
 8008c44:	687a      	ldr	r2, [r7, #4]
 8008c46:	f8c3 2154 	str.w	r2, [r3, #340]	@ 0x154
      model(m)
 8008c4a:	68fb      	ldr	r3, [r7, #12]
 8008c4c:	68ba      	ldr	r2, [r7, #8]
 8008c4e:	f8c3 2158 	str.w	r2, [r3, #344]	@ 0x158
{
    touchgfx::HAL::getInstance()->setDisplayOrientation(touchgfx::ORIENTATION_PORTRAIT);
 8008c52:	f7ff fe49 	bl	80088e8 <_ZN8touchgfx3HAL11getInstanceEv>
 8008c56:	4603      	mov	r3, r0
 8008c58:	681a      	ldr	r2, [r3, #0]
 8008c5a:	3208      	adds	r2, #8
 8008c5c:	6812      	ldr	r2, [r2, #0]
 8008c5e:	2101      	movs	r1, #1
 8008c60:	4618      	mov	r0, r3
 8008c62:	4790      	blx	r2
    touchgfx::Texts::setLanguage(GB);
 8008c64:	2000      	movs	r0, #0
 8008c66:	f001 fe59 	bl	800a91c <_ZN8touchgfx5Texts11setLanguageEt>
    reinterpret_cast<touchgfx::LCD16bpp&>(touchgfx::HAL::lcd()).enableTextureMapperAll();
 8008c6a:	f7ff fe49 	bl	8008900 <_ZN8touchgfx3HAL3lcdEv>
 8008c6e:	4603      	mov	r3, r0
 8008c70:	4618      	mov	r0, r3
 8008c72:	f011 ffc8 	bl	801ac06 <_ZN8touchgfx8LCD16bpp22enableTextureMapperAllEv>
    reinterpret_cast<touchgfx::LCD16bpp&>(touchgfx::HAL::lcd()).enableDecompressorL8_All();
 8008c76:	f7ff fe43 	bl	8008900 <_ZN8touchgfx3HAL3lcdEv>
 8008c7a:	4603      	mov	r3, r0
 8008c7c:	4618      	mov	r0, r3
 8008c7e:	f012 f83d 	bl	801acfc <_ZN8touchgfx8LCD16bpp24enableDecompressorL8_AllEv>
    reinterpret_cast<touchgfx::LCD16bpp&>(touchgfx::HAL::lcd()).enableDecompressorRGB();
 8008c82:	f7ff fe3d 	bl	8008900 <_ZN8touchgfx3HAL3lcdEv>
 8008c86:	4603      	mov	r3, r0
 8008c88:	4618      	mov	r0, r3
 8008c8a:	f012 f843 	bl	801ad14 <_ZN8touchgfx8LCD16bpp21enableDecompressorRGBEv>
}
 8008c8e:	68fb      	ldr	r3, [r7, #12]
 8008c90:	4618      	mov	r0, r3
 8008c92:	3710      	adds	r7, #16
 8008c94:	46bd      	mov	sp, r7
 8008c96:	bd80      	pop	{r7, pc}
 8008c98:	08024624 	.word	0x08024624

08008c9c <_ZN8touchgfx15GenericCallbackIvvvEaSERKS1_>:
class GenericCallback<void>
 8008c9c:	b480      	push	{r7}
 8008c9e:	b083      	sub	sp, #12
 8008ca0:	af00      	add	r7, sp, #0
 8008ca2:	6078      	str	r0, [r7, #4]
 8008ca4:	6039      	str	r1, [r7, #0]
 8008ca6:	687b      	ldr	r3, [r7, #4]
 8008ca8:	4618      	mov	r0, r3
 8008caa:	370c      	adds	r7, #12
 8008cac:	46bd      	mov	sp, r7
 8008cae:	f85d 7b04 	ldr.w	r7, [sp], #4
 8008cb2:	4770      	bx	lr

08008cb4 <_ZN8touchgfx8CallbackI23FrontendApplicationBasevvvEaSEOS2_>:
 *
 * @note The member function to call must return void. The function can have zero, one, two or
 *       three arguments of any type.
 */
template <class dest_type>
struct Callback<dest_type, void, void, void> : public GenericCallback<>
 8008cb4:	b580      	push	{r7, lr}
 8008cb6:	b082      	sub	sp, #8
 8008cb8:	af00      	add	r7, sp, #0
 8008cba:	6078      	str	r0, [r7, #4]
 8008cbc:	6039      	str	r1, [r7, #0]
 8008cbe:	687b      	ldr	r3, [r7, #4]
 8008cc0:	683a      	ldr	r2, [r7, #0]
 8008cc2:	4611      	mov	r1, r2
 8008cc4:	4618      	mov	r0, r3
 8008cc6:	f7ff ffe9 	bl	8008c9c <_ZN8touchgfx15GenericCallbackIvvvEaSERKS1_>
 8008cca:	683b      	ldr	r3, [r7, #0]
 8008ccc:	685a      	ldr	r2, [r3, #4]
 8008cce:	687b      	ldr	r3, [r7, #4]
 8008cd0:	605a      	str	r2, [r3, #4]
 8008cd2:	687b      	ldr	r3, [r7, #4]
 8008cd4:	683a      	ldr	r2, [r7, #0]
 8008cd6:	3308      	adds	r3, #8
 8008cd8:	3208      	adds	r2, #8
 8008cda:	e892 0003 	ldmia.w	r2, {r0, r1}
 8008cde:	e883 0003 	stmia.w	r3, {r0, r1}
 8008ce2:	687b      	ldr	r3, [r7, #4]
 8008ce4:	4618      	mov	r0, r3
 8008ce6:	3708      	adds	r7, #8
 8008ce8:	46bd      	mov	sp, r7
 8008cea:	bd80      	pop	{r7, pc}

08008cec <_ZN23FrontendApplicationBase26gotoMainScreenNoTransitionEv>:
 */

// Main

void FrontendApplicationBase::gotoMainScreenNoTransition()
{
 8008cec:	b590      	push	{r4, r7, lr}
 8008cee:	b089      	sub	sp, #36	@ 0x24
 8008cf0:	af00      	add	r7, sp, #0
 8008cf2:	6078      	str	r0, [r7, #4]
    transitionCallback = touchgfx::Callback<FrontendApplicationBase>(this, &FrontendApplicationBase::gotoMainScreenNoTransitionImpl);
 8008cf4:	687b      	ldr	r3, [r7, #4]
 8008cf6:	f503 74a2 	add.w	r4, r3, #324	@ 0x144
 8008cfa:	4b10      	ldr	r3, [pc, #64]	@ (8008d3c <_ZN23FrontendApplicationBase26gotoMainScreenNoTransitionEv+0x50>)
 8008cfc:	61bb      	str	r3, [r7, #24]
 8008cfe:	2300      	movs	r3, #0
 8008d00:	61fb      	str	r3, [r7, #28]
 8008d02:	f107 0008 	add.w	r0, r7, #8
 8008d06:	f107 0318 	add.w	r3, r7, #24
 8008d0a:	cb0c      	ldmia	r3, {r2, r3}
 8008d0c:	6879      	ldr	r1, [r7, #4]
 8008d0e:	f000 f85f 	bl	8008dd0 <_ZN8touchgfx8CallbackI23FrontendApplicationBasevvvEC1EPS1_MS1_FvvE>
 8008d12:	f107 0308 	add.w	r3, r7, #8
 8008d16:	4619      	mov	r1, r3
 8008d18:	4620      	mov	r0, r4
 8008d1a:	f7ff ffcb 	bl	8008cb4 <_ZN8touchgfx8CallbackI23FrontendApplicationBasevvvEaSEOS2_>
 8008d1e:	f107 0308 	add.w	r3, r7, #8
 8008d22:	4618      	mov	r0, r3
 8008d24:	f000 fa0a 	bl	800913c <_ZN8touchgfx8CallbackI23FrontendApplicationBasevvvED1Ev>
    pendingScreenTransitionCallback = &transitionCallback;
 8008d28:	687b      	ldr	r3, [r7, #4]
 8008d2a:	f503 72a2 	add.w	r2, r3, #324	@ 0x144
 8008d2e:	687b      	ldr	r3, [r7, #4]
 8008d30:	f8c3 2140 	str.w	r2, [r3, #320]	@ 0x140
}
 8008d34:	bf00      	nop
 8008d36:	3724      	adds	r7, #36	@ 0x24
 8008d38:	46bd      	mov	sp, r7
 8008d3a:	bd90      	pop	{r4, r7, pc}
 8008d3c:	08008d41 	.word	0x08008d41

08008d40 <_ZN23FrontendApplicationBase30gotoMainScreenNoTransitionImplEv>:

void FrontendApplicationBase::gotoMainScreenNoTransitionImpl()
{
 8008d40:	b580      	push	{r7, lr}
 8008d42:	b084      	sub	sp, #16
 8008d44:	af02      	add	r7, sp, #8
 8008d46:	6078      	str	r0, [r7, #4]
    touchgfx::makeTransition<MainView, MainPresenter, touchgfx::NoTransition, Model >(&currentScreen, &currentPresenter, frontendHeap, &currentTransition, &model);
 8008d48:	687b      	ldr	r3, [r7, #4]
 8008d4a:	f503 719e 	add.w	r1, r3, #316	@ 0x13c
 8008d4e:	687b      	ldr	r3, [r7, #4]
 8008d50:	f8d3 3154 	ldr.w	r3, [r3, #340]	@ 0x154
 8008d54:	461a      	mov	r2, r3
 8008d56:	687b      	ldr	r3, [r7, #4]
 8008d58:	f8d3 3158 	ldr.w	r3, [r3, #344]	@ 0x158
 8008d5c:	9300      	str	r3, [sp, #0]
 8008d5e:	4b04      	ldr	r3, [pc, #16]	@ (8008d70 <_ZN23FrontendApplicationBase30gotoMainScreenNoTransitionImplEv+0x30>)
 8008d60:	4804      	ldr	r0, [pc, #16]	@ (8008d74 <_ZN23FrontendApplicationBase30gotoMainScreenNoTransitionImplEv+0x34>)
 8008d62:	f000 f867 	bl	8008e34 <_ZN8touchgfx14makeTransitionI8MainView13MainPresenterNS_12NoTransitionE5ModelEEPT0_PPNS_6ScreenEPPNS_9PresenterERNS_7MVPHeapEPPNS_10TransitionEPT2_>
}
 8008d66:	bf00      	nop
 8008d68:	3708      	adds	r7, #8
 8008d6a:	46bd      	mov	sp, r7
 8008d6c:	bd80      	pop	{r7, pc}
 8008d6e:	bf00      	nop
 8008d70:	20002dfc 	.word	0x20002dfc
 8008d74:	20002df8 	.word	0x20002df8

08008d78 <_ZN8touchgfx15GenericCallbackIvvvEC1Ev>:
class GenericCallback<void>
 8008d78:	b480      	push	{r7}
 8008d7a:	b083      	sub	sp, #12
 8008d7c:	af00      	add	r7, sp, #0
 8008d7e:	6078      	str	r0, [r7, #4]
 8008d80:	4a04      	ldr	r2, [pc, #16]	@ (8008d94 <_ZN8touchgfx15GenericCallbackIvvvEC1Ev+0x1c>)
 8008d82:	687b      	ldr	r3, [r7, #4]
 8008d84:	601a      	str	r2, [r3, #0]
 8008d86:	687b      	ldr	r3, [r7, #4]
 8008d88:	4618      	mov	r0, r3
 8008d8a:	370c      	adds	r7, #12
 8008d8c:	46bd      	mov	sp, r7
 8008d8e:	f85d 7b04 	ldr.w	r7, [sp], #4
 8008d92:	4770      	bx	lr
 8008d94:	08024708 	.word	0x08024708

08008d98 <_ZN8touchgfx8CallbackI23FrontendApplicationBasevvvEC1Ev>:
{
    /** Initializes a new instance of the Callback class. */
    Callback()
 8008d98:	b580      	push	{r7, lr}
 8008d9a:	b082      	sub	sp, #8
 8008d9c:	af00      	add	r7, sp, #0
 8008d9e:	6078      	str	r0, [r7, #4]
        : pobject(0), pmemfun(0)
 8008da0:	687b      	ldr	r3, [r7, #4]
 8008da2:	4618      	mov	r0, r3
 8008da4:	f7ff ffe8 	bl	8008d78 <_ZN8touchgfx15GenericCallbackIvvvEC1Ev>
 8008da8:	4a08      	ldr	r2, [pc, #32]	@ (8008dcc <_ZN8touchgfx8CallbackI23FrontendApplicationBasevvvEC1Ev+0x34>)
 8008daa:	687b      	ldr	r3, [r7, #4]
 8008dac:	601a      	str	r2, [r3, #0]
 8008dae:	687b      	ldr	r3, [r7, #4]
 8008db0:	2200      	movs	r2, #0
 8008db2:	605a      	str	r2, [r3, #4]
 8008db4:	687b      	ldr	r3, [r7, #4]
 8008db6:	2200      	movs	r2, #0
 8008db8:	609a      	str	r2, [r3, #8]
 8008dba:	687b      	ldr	r3, [r7, #4]
 8008dbc:	2200      	movs	r2, #0
 8008dbe:	60da      	str	r2, [r3, #12]
    {
    }
 8008dc0:	687b      	ldr	r3, [r7, #4]
 8008dc2:	4618      	mov	r0, r3
 8008dc4:	3708      	adds	r7, #8
 8008dc6:	46bd      	mov	sp, r7
 8008dc8:	bd80      	pop	{r7, pc}
 8008dca:	bf00      	nop
 8008dcc:	08024678 	.word	0x08024678

08008dd0 <_ZN8touchgfx8CallbackI23FrontendApplicationBasevvvEC1EPS1_MS1_FvvE>:
     *
     * @param [in] pObject   Pointer to the object on which the function should be called.
     * @param [in] pmemfun_0 Address of member function. This is the version where function takes zero
     *                       arguments.
     */
    Callback(dest_type* pObject, void (dest_type::*pmemfun_0)())
 8008dd0:	b580      	push	{r7, lr}
 8008dd2:	b084      	sub	sp, #16
 8008dd4:	af00      	add	r7, sp, #0
 8008dd6:	60f8      	str	r0, [r7, #12]
 8008dd8:	60b9      	str	r1, [r7, #8]
 8008dda:	4639      	mov	r1, r7
 8008ddc:	e881 000c 	stmia.w	r1, {r2, r3}
        : pobject(pObject), pmemfun(pmemfun_0)
 8008de0:	68fb      	ldr	r3, [r7, #12]
 8008de2:	4618      	mov	r0, r3
 8008de4:	f7ff ffc8 	bl	8008d78 <_ZN8touchgfx15GenericCallbackIvvvEC1Ev>
 8008de8:	4a08      	ldr	r2, [pc, #32]	@ (8008e0c <_ZN8touchgfx8CallbackI23FrontendApplicationBasevvvEC1EPS1_MS1_FvvE+0x3c>)
 8008dea:	68fb      	ldr	r3, [r7, #12]
 8008dec:	601a      	str	r2, [r3, #0]
 8008dee:	68fb      	ldr	r3, [r7, #12]
 8008df0:	68ba      	ldr	r2, [r7, #8]
 8008df2:	605a      	str	r2, [r3, #4]
 8008df4:	68fb      	ldr	r3, [r7, #12]
 8008df6:	3308      	adds	r3, #8
 8008df8:	463a      	mov	r2, r7
 8008dfa:	e892 0003 	ldmia.w	r2, {r0, r1}
 8008dfe:	e883 0003 	stmia.w	r3, {r0, r1}
    {
    }
 8008e02:	68fb      	ldr	r3, [r7, #12]
 8008e04:	4618      	mov	r0, r3
 8008e06:	3710      	adds	r7, #16
 8008e08:	46bd      	mov	sp, r7
 8008e0a:	bd80      	pop	{r7, pc}
 8008e0c:	08024678 	.word	0x08024678

08008e10 <_ZN8touchgfx12NoTransitionC1Ev>:
class NoTransition : public Transition
 8008e10:	b580      	push	{r7, lr}
 8008e12:	b082      	sub	sp, #8
 8008e14:	af00      	add	r7, sp, #0
 8008e16:	6078      	str	r0, [r7, #4]
 8008e18:	687b      	ldr	r3, [r7, #4]
 8008e1a:	4618      	mov	r0, r3
 8008e1c:	f7ff fd8c 	bl	8008938 <_ZN8touchgfx10TransitionC1Ev>
 8008e20:	4a03      	ldr	r2, [pc, #12]	@ (8008e30 <_ZN8touchgfx12NoTransitionC1Ev+0x20>)
 8008e22:	687b      	ldr	r3, [r7, #4]
 8008e24:	601a      	str	r2, [r3, #0]
 8008e26:	687b      	ldr	r3, [r7, #4]
 8008e28:	4618      	mov	r0, r3
 8008e2a:	3708      	adds	r7, #8
 8008e2c:	46bd      	mov	sp, r7
 8008e2e:	bd80      	pop	{r7, pc}
 8008e30:	08024600 	.word	0x08024600

08008e34 <_ZN8touchgfx14makeTransitionI8MainView13MainPresenterNS_12NoTransitionE5ModelEEPT0_PPNS_6ScreenEPPNS_9PresenterERNS_7MVPHeapEPPNS_10TransitionEPT2_>:
 *
 * @return Pointer to the new Presenter of the requested type. Incidentally it will be the same
 *         value as the old presenter due to memory reuse.
 */
template <class ScreenType, class PresenterType, class TransType, class ModelType>
PresenterType* makeTransition(Screen** currentScreen, Presenter** currentPresenter, MVPHeap& heap, Transition** currentTrans, ModelType* model)
 8008e34:	b590      	push	{r4, r7, lr}
 8008e36:	b08f      	sub	sp, #60	@ 0x3c
 8008e38:	af00      	add	r7, sp, #0
 8008e3a:	60f8      	str	r0, [r7, #12]
 8008e3c:	60b9      	str	r1, [r7, #8]
 8008e3e:	607a      	str	r2, [r7, #4]
 8008e40:	603b      	str	r3, [r7, #0]
{
    assert(sizeof(ScreenType) <= heap.screenStorage.element_size() && "View allocation error: Check that all views are added to FrontendHeap::ViewTypes");
 8008e42:	687b      	ldr	r3, [r7, #4]
 8008e44:	689a      	ldr	r2, [r3, #8]
 8008e46:	687b      	ldr	r3, [r7, #4]
 8008e48:	689b      	ldr	r3, [r3, #8]
 8008e4a:	681b      	ldr	r3, [r3, #0]
 8008e4c:	3320      	adds	r3, #32
 8008e4e:	681b      	ldr	r3, [r3, #0]
 8008e50:	4610      	mov	r0, r2
 8008e52:	4798      	blx	r3
 8008e54:	4603      	mov	r3, r0
 8008e56:	f5b3 7f10 	cmp.w	r3, #576	@ 0x240
 8008e5a:	d205      	bcs.n	8008e68 <_ZN8touchgfx14makeTransitionI8MainView13MainPresenterNS_12NoTransitionE5ModelEEPT0_PPNS_6ScreenEPPNS_9PresenterERNS_7MVPHeapEPPNS_10TransitionEPT2_+0x34>
 8008e5c:	4b7d      	ldr	r3, [pc, #500]	@ (8009054 <_ZN8touchgfx14makeTransitionI8MainView13MainPresenterNS_12NoTransitionE5ModelEEPT0_PPNS_6ScreenEPPNS_9PresenterERNS_7MVPHeapEPPNS_10TransitionEPT2_+0x220>)
 8008e5e:	4a7e      	ldr	r2, [pc, #504]	@ (8009058 <_ZN8touchgfx14makeTransitionI8MainView13MainPresenterNS_12NoTransitionE5ModelEEPT0_PPNS_6ScreenEPPNS_9PresenterERNS_7MVPHeapEPPNS_10TransitionEPT2_+0x224>)
 8008e60:	21a3      	movs	r1, #163	@ 0xa3
 8008e62:	487e      	ldr	r0, [pc, #504]	@ (800905c <_ZN8touchgfx14makeTransitionI8MainView13MainPresenterNS_12NoTransitionE5ModelEEPT0_PPNS_6ScreenEPPNS_9PresenterERNS_7MVPHeapEPPNS_10TransitionEPT2_+0x228>)
 8008e64:	f019 fb14 	bl	8022490 <__assert_func>
    assert(sizeof(PresenterType) <= heap.presenterStorage.element_size() && "Presenter allocation error: Check that all presenters are added to FrontendHeap::PresenterTypes");
 8008e68:	687b      	ldr	r3, [r7, #4]
 8008e6a:	685a      	ldr	r2, [r3, #4]
 8008e6c:	687b      	ldr	r3, [r7, #4]
 8008e6e:	685b      	ldr	r3, [r3, #4]
 8008e70:	681b      	ldr	r3, [r3, #0]
 8008e72:	3320      	adds	r3, #32
 8008e74:	681b      	ldr	r3, [r3, #0]
 8008e76:	4610      	mov	r0, r2
 8008e78:	4798      	blx	r3
 8008e7a:	4603      	mov	r3, r0
 8008e7c:	2b0f      	cmp	r3, #15
 8008e7e:	d805      	bhi.n	8008e8c <_ZN8touchgfx14makeTransitionI8MainView13MainPresenterNS_12NoTransitionE5ModelEEPT0_PPNS_6ScreenEPPNS_9PresenterERNS_7MVPHeapEPPNS_10TransitionEPT2_+0x58>
 8008e80:	4b77      	ldr	r3, [pc, #476]	@ (8009060 <_ZN8touchgfx14makeTransitionI8MainView13MainPresenterNS_12NoTransitionE5ModelEEPT0_PPNS_6ScreenEPPNS_9PresenterERNS_7MVPHeapEPPNS_10TransitionEPT2_+0x22c>)
 8008e82:	4a75      	ldr	r2, [pc, #468]	@ (8009058 <_ZN8touchgfx14makeTransitionI8MainView13MainPresenterNS_12NoTransitionE5ModelEEPT0_PPNS_6ScreenEPPNS_9PresenterERNS_7MVPHeapEPPNS_10TransitionEPT2_+0x224>)
 8008e84:	21a4      	movs	r1, #164	@ 0xa4
 8008e86:	4875      	ldr	r0, [pc, #468]	@ (800905c <_ZN8touchgfx14makeTransitionI8MainView13MainPresenterNS_12NoTransitionE5ModelEEPT0_PPNS_6ScreenEPPNS_9PresenterERNS_7MVPHeapEPPNS_10TransitionEPT2_+0x228>)
 8008e88:	f019 fb02 	bl	8022490 <__assert_func>
    assert(sizeof(TransType) <= heap.transitionStorage.element_size() && "Transition allocation error: Check that all transitions are added to FrontendHeap::TransitionTypes");
 8008e8c:	687b      	ldr	r3, [r7, #4]
 8008e8e:	68da      	ldr	r2, [r3, #12]
 8008e90:	687b      	ldr	r3, [r7, #4]
 8008e92:	68db      	ldr	r3, [r3, #12]
 8008e94:	681b      	ldr	r3, [r3, #0]
 8008e96:	3320      	adds	r3, #32
 8008e98:	681b      	ldr	r3, [r3, #0]
 8008e9a:	4610      	mov	r0, r2
 8008e9c:	4798      	blx	r3
 8008e9e:	4603      	mov	r3, r0
 8008ea0:	2b0b      	cmp	r3, #11
 8008ea2:	d805      	bhi.n	8008eb0 <_ZN8touchgfx14makeTransitionI8MainView13MainPresenterNS_12NoTransitionE5ModelEEPT0_PPNS_6ScreenEPPNS_9PresenterERNS_7MVPHeapEPPNS_10TransitionEPT2_+0x7c>
 8008ea4:	4b6f      	ldr	r3, [pc, #444]	@ (8009064 <_ZN8touchgfx14makeTransitionI8MainView13MainPresenterNS_12NoTransitionE5ModelEEPT0_PPNS_6ScreenEPPNS_9PresenterERNS_7MVPHeapEPPNS_10TransitionEPT2_+0x230>)
 8008ea6:	4a6c      	ldr	r2, [pc, #432]	@ (8009058 <_ZN8touchgfx14makeTransitionI8MainView13MainPresenterNS_12NoTransitionE5ModelEEPT0_PPNS_6ScreenEPPNS_9PresenterERNS_7MVPHeapEPPNS_10TransitionEPT2_+0x224>)
 8008ea8:	21a5      	movs	r1, #165	@ 0xa5
 8008eaa:	486c      	ldr	r0, [pc, #432]	@ (800905c <_ZN8touchgfx14makeTransitionI8MainView13MainPresenterNS_12NoTransitionE5ModelEEPT0_PPNS_6ScreenEPPNS_9PresenterERNS_7MVPHeapEPPNS_10TransitionEPT2_+0x228>)
 8008eac:	f019 faf0 	bl	8022490 <__assert_func>
 8008eb0:	68fb      	ldr	r3, [r7, #12]
 8008eb2:	62bb      	str	r3, [r7, #40]	@ 0x28
 8008eb4:	68bb      	ldr	r3, [r7, #8]
 8008eb6:	627b      	str	r3, [r7, #36]	@ 0x24
 8008eb8:	683b      	ldr	r3, [r7, #0]
 8008eba:	623b      	str	r3, [r7, #32]
    Application::getInstance()->clearAllTimerWidgets();
 8008ebc:	f007 fce2 	bl	8010884 <_ZN8touchgfx11Application11getInstanceEv>
 8008ec0:	4603      	mov	r3, r0
 8008ec2:	4618      	mov	r0, r3
 8008ec4:	f7ff fce2 	bl	800888c <_ZN8touchgfx11Application20clearAllTimerWidgetsEv>
    if (*currentTrans)
 8008ec8:	6a3b      	ldr	r3, [r7, #32]
 8008eca:	681b      	ldr	r3, [r3, #0]
 8008ecc:	2b00      	cmp	r3, #0
 8008ece:	d008      	beq.n	8008ee2 <_ZN8touchgfx14makeTransitionI8MainView13MainPresenterNS_12NoTransitionE5ModelEEPT0_PPNS_6ScreenEPPNS_9PresenterERNS_7MVPHeapEPPNS_10TransitionEPT2_+0xae>
        (*currentTrans)->tearDown();
 8008ed0:	6a3b      	ldr	r3, [r7, #32]
 8008ed2:	681a      	ldr	r2, [r3, #0]
 8008ed4:	6a3b      	ldr	r3, [r7, #32]
 8008ed6:	681b      	ldr	r3, [r3, #0]
 8008ed8:	681b      	ldr	r3, [r3, #0]
 8008eda:	330c      	adds	r3, #12
 8008edc:	681b      	ldr	r3, [r3, #0]
 8008ede:	4610      	mov	r0, r2
 8008ee0:	4798      	blx	r3
    if (*currentTrans)
 8008ee2:	6a3b      	ldr	r3, [r7, #32]
 8008ee4:	681b      	ldr	r3, [r3, #0]
 8008ee6:	2b00      	cmp	r3, #0
 8008ee8:	d007      	beq.n	8008efa <_ZN8touchgfx14makeTransitionI8MainView13MainPresenterNS_12NoTransitionE5ModelEEPT0_PPNS_6ScreenEPPNS_9PresenterERNS_7MVPHeapEPPNS_10TransitionEPT2_+0xc6>
        (*currentTrans)->~Transition();
 8008eea:	6a3b      	ldr	r3, [r7, #32]
 8008eec:	681a      	ldr	r2, [r3, #0]
 8008eee:	6a3b      	ldr	r3, [r7, #32]
 8008ef0:	681b      	ldr	r3, [r3, #0]
 8008ef2:	681b      	ldr	r3, [r3, #0]
 8008ef4:	681b      	ldr	r3, [r3, #0]
 8008ef6:	4610      	mov	r0, r2
 8008ef8:	4798      	blx	r3
    if (*currentScreen)
 8008efa:	6abb      	ldr	r3, [r7, #40]	@ 0x28
 8008efc:	681b      	ldr	r3, [r3, #0]
 8008efe:	2b00      	cmp	r3, #0
 8008f00:	d008      	beq.n	8008f14 <_ZN8touchgfx14makeTransitionI8MainView13MainPresenterNS_12NoTransitionE5ModelEEPT0_PPNS_6ScreenEPPNS_9PresenterERNS_7MVPHeapEPPNS_10TransitionEPT2_+0xe0>
        (*currentScreen)->tearDownScreen();
 8008f02:	6abb      	ldr	r3, [r7, #40]	@ 0x28
 8008f04:	681a      	ldr	r2, [r3, #0]
 8008f06:	6abb      	ldr	r3, [r7, #40]	@ 0x28
 8008f08:	681b      	ldr	r3, [r3, #0]
 8008f0a:	681b      	ldr	r3, [r3, #0]
 8008f0c:	3314      	adds	r3, #20
 8008f0e:	681b      	ldr	r3, [r3, #0]
 8008f10:	4610      	mov	r0, r2
 8008f12:	4798      	blx	r3
    if (*currentPresenter)
 8008f14:	6a7b      	ldr	r3, [r7, #36]	@ 0x24
 8008f16:	681b      	ldr	r3, [r3, #0]
 8008f18:	2b00      	cmp	r3, #0
 8008f1a:	d008      	beq.n	8008f2e <_ZN8touchgfx14makeTransitionI8MainView13MainPresenterNS_12NoTransitionE5ModelEEPT0_PPNS_6ScreenEPPNS_9PresenterERNS_7MVPHeapEPPNS_10TransitionEPT2_+0xfa>
        (*currentPresenter)->deactivate();
 8008f1c:	6a7b      	ldr	r3, [r7, #36]	@ 0x24
 8008f1e:	681a      	ldr	r2, [r3, #0]
 8008f20:	6a7b      	ldr	r3, [r7, #36]	@ 0x24
 8008f22:	681b      	ldr	r3, [r3, #0]
 8008f24:	681b      	ldr	r3, [r3, #0]
 8008f26:	3304      	adds	r3, #4
 8008f28:	681b      	ldr	r3, [r3, #0]
 8008f2a:	4610      	mov	r0, r2
 8008f2c:	4798      	blx	r3
    if (*currentScreen)
 8008f2e:	6abb      	ldr	r3, [r7, #40]	@ 0x28
 8008f30:	681b      	ldr	r3, [r3, #0]
 8008f32:	2b00      	cmp	r3, #0
 8008f34:	d007      	beq.n	8008f46 <_ZN8touchgfx14makeTransitionI8MainView13MainPresenterNS_12NoTransitionE5ModelEEPT0_PPNS_6ScreenEPPNS_9PresenterERNS_7MVPHeapEPPNS_10TransitionEPT2_+0x112>
        (*currentScreen)->~Screen();
 8008f36:	6abb      	ldr	r3, [r7, #40]	@ 0x28
 8008f38:	681a      	ldr	r2, [r3, #0]
 8008f3a:	6abb      	ldr	r3, [r7, #40]	@ 0x28
 8008f3c:	681b      	ldr	r3, [r3, #0]
 8008f3e:	681b      	ldr	r3, [r3, #0]
 8008f40:	681b      	ldr	r3, [r3, #0]
 8008f42:	4610      	mov	r0, r2
 8008f44:	4798      	blx	r3
    if (*currentPresenter)
 8008f46:	6a7b      	ldr	r3, [r7, #36]	@ 0x24
 8008f48:	681b      	ldr	r3, [r3, #0]
 8008f4a:	2b00      	cmp	r3, #0
 8008f4c:	d008      	beq.n	8008f60 <_ZN8touchgfx14makeTransitionI8MainView13MainPresenterNS_12NoTransitionE5ModelEEPT0_PPNS_6ScreenEPPNS_9PresenterERNS_7MVPHeapEPPNS_10TransitionEPT2_+0x12c>
        (*currentPresenter)->~Presenter();
 8008f4e:	6a7b      	ldr	r3, [r7, #36]	@ 0x24
 8008f50:	681a      	ldr	r2, [r3, #0]
 8008f52:	6a7b      	ldr	r3, [r7, #36]	@ 0x24
 8008f54:	681b      	ldr	r3, [r3, #0]
 8008f56:	681b      	ldr	r3, [r3, #0]
 8008f58:	3308      	adds	r3, #8
 8008f5a:	681b      	ldr	r3, [r3, #0]
 8008f5c:	4610      	mov	r0, r2
 8008f5e:	4798      	blx	r3
}
 8008f60:	bf00      	nop

    prepareTransition(currentScreen, currentPresenter, currentTrans);

    TransType* newTransition = new (&heap.transitionStorage.at<TransType>(0)) TransType;
 8008f62:	687b      	ldr	r3, [r7, #4]
 8008f64:	68db      	ldr	r3, [r3, #12]
 8008f66:	2100      	movs	r1, #0
 8008f68:	4618      	mov	r0, r3
 8008f6a:	f000 f87d 	bl	8009068 <_ZN8touchgfx17AbstractPartition2atINS_12NoTransitionEEERT_t>
 8008f6e:	4603      	mov	r3, r0
 8008f70:	4619      	mov	r1, r3
 8008f72:	200c      	movs	r0, #12
 8008f74:	f7ff fbf4 	bl	8008760 <_ZnwjPv>
 8008f78:	4604      	mov	r4, r0
 8008f7a:	4620      	mov	r0, r4
 8008f7c:	f7ff ff48 	bl	8008e10 <_ZN8touchgfx12NoTransitionC1Ev>
 8008f80:	637c      	str	r4, [r7, #52]	@ 0x34
    ScreenType* newScreen = new (&heap.screenStorage.at<ScreenType>(0)) ScreenType;
 8008f82:	687b      	ldr	r3, [r7, #4]
 8008f84:	689b      	ldr	r3, [r3, #8]
 8008f86:	2100      	movs	r1, #0
 8008f88:	4618      	mov	r0, r3
 8008f8a:	f000 f880 	bl	800908e <_ZN8touchgfx17AbstractPartition2atI8MainViewEERT_t>
 8008f8e:	4603      	mov	r3, r0
 8008f90:	4619      	mov	r1, r3
 8008f92:	f44f 7010 	mov.w	r0, #576	@ 0x240
 8008f96:	f7ff fbe3 	bl	8008760 <_ZnwjPv>
 8008f9a:	4604      	mov	r4, r0
 8008f9c:	4620      	mov	r0, r4
 8008f9e:	f001 ff37 	bl	800ae10 <_ZN8MainViewC1Ev>
 8008fa2:	633c      	str	r4, [r7, #48]	@ 0x30
    PresenterType* newPresenter = new (&heap.presenterStorage.at<PresenterType>(0)) PresenterType(*newScreen);
 8008fa4:	687b      	ldr	r3, [r7, #4]
 8008fa6:	685b      	ldr	r3, [r3, #4]
 8008fa8:	2100      	movs	r1, #0
 8008faa:	4618      	mov	r0, r3
 8008fac:	f000 f882 	bl	80090b4 <_ZN8touchgfx17AbstractPartition2atI13MainPresenterEERT_t>
 8008fb0:	4603      	mov	r3, r0
 8008fb2:	4619      	mov	r1, r3
 8008fb4:	2010      	movs	r0, #16
 8008fb6:	f7ff fbd3 	bl	8008760 <_ZnwjPv>
 8008fba:	4604      	mov	r4, r0
 8008fbc:	6b39      	ldr	r1, [r7, #48]	@ 0x30
 8008fbe:	4620      	mov	r0, r4
 8008fc0:	f001 fe70 	bl	800aca4 <_ZN13MainPresenterC1ER8MainView>
 8008fc4:	62fc      	str	r4, [r7, #44]	@ 0x2c
    *currentTrans = newTransition;
 8008fc6:	683b      	ldr	r3, [r7, #0]
 8008fc8:	6b7a      	ldr	r2, [r7, #52]	@ 0x34
 8008fca:	601a      	str	r2, [r3, #0]
    *currentPresenter = newPresenter;
 8008fcc:	68bb      	ldr	r3, [r7, #8]
 8008fce:	6afa      	ldr	r2, [r7, #44]	@ 0x2c
 8008fd0:	601a      	str	r2, [r3, #0]
    *currentScreen = newScreen;
 8008fd2:	68fb      	ldr	r3, [r7, #12]
 8008fd4:	6b3a      	ldr	r2, [r7, #48]	@ 0x30
 8008fd6:	601a      	str	r2, [r3, #0]
    model->bind(newPresenter);
 8008fd8:	6afb      	ldr	r3, [r7, #44]	@ 0x2c
 8008fda:	2b00      	cmp	r3, #0
 8008fdc:	d002      	beq.n	8008fe4 <_ZN8touchgfx14makeTransitionI8MainView13MainPresenterNS_12NoTransitionE5ModelEEPT0_PPNS_6ScreenEPPNS_9PresenterERNS_7MVPHeapEPPNS_10TransitionEPT2_+0x1b0>
 8008fde:	6afb      	ldr	r3, [r7, #44]	@ 0x2c
 8008fe0:	3304      	adds	r3, #4
 8008fe2:	e000      	b.n	8008fe6 <_ZN8touchgfx14makeTransitionI8MainView13MainPresenterNS_12NoTransitionE5ModelEEPT0_PPNS_6ScreenEPPNS_9PresenterERNS_7MVPHeapEPPNS_10TransitionEPT2_+0x1b2>
 8008fe4:	2300      	movs	r3, #0
 8008fe6:	4619      	mov	r1, r3
 8008fe8:	6cb8      	ldr	r0, [r7, #72]	@ 0x48
 8008fea:	f7ff fd95 	bl	8008b18 <_ZN5Model4bindEP13ModelListener>
    newPresenter->bind(model);
 8008fee:	6afb      	ldr	r3, [r7, #44]	@ 0x2c
 8008ff0:	3304      	adds	r3, #4
 8008ff2:	6cb9      	ldr	r1, [r7, #72]	@ 0x48
 8008ff4:	4618      	mov	r0, r3
 8008ff6:	f7ff fe02 	bl	8008bfe <_ZN13ModelListener4bindEP5Model>
    newScreen->bind(*newPresenter);
 8008ffa:	6b3b      	ldr	r3, [r7, #48]	@ 0x30
 8008ffc:	6af9      	ldr	r1, [r7, #44]	@ 0x2c
 8008ffe:	4618      	mov	r0, r3
 8009000:	f000 f86b 	bl	80090da <_ZN8touchgfx4ViewI13MainPresenterE4bindERS1_>
 8009004:	6b3b      	ldr	r3, [r7, #48]	@ 0x30
 8009006:	61fb      	str	r3, [r7, #28]
 8009008:	6afb      	ldr	r3, [r7, #44]	@ 0x2c
 800900a:	61bb      	str	r3, [r7, #24]
 800900c:	6b7b      	ldr	r3, [r7, #52]	@ 0x34
 800900e:	617b      	str	r3, [r7, #20]
    newScreen->setupScreen();
 8009010:	69fb      	ldr	r3, [r7, #28]
 8009012:	681b      	ldr	r3, [r3, #0]
 8009014:	330c      	adds	r3, #12
 8009016:	681b      	ldr	r3, [r3, #0]
 8009018:	69f8      	ldr	r0, [r7, #28]
 800901a:	4798      	blx	r3
    newPresenter->activate();
 800901c:	69bb      	ldr	r3, [r7, #24]
 800901e:	681b      	ldr	r3, [r3, #0]
 8009020:	681b      	ldr	r3, [r3, #0]
 8009022:	69b8      	ldr	r0, [r7, #24]
 8009024:	4798      	blx	r3
    newScreen->bindTransition(*newTransition);
 8009026:	6979      	ldr	r1, [r7, #20]
 8009028:	69f8      	ldr	r0, [r7, #28]
 800902a:	f009 f8ed 	bl	8012208 <_ZN8touchgfx6Screen14bindTransitionERNS_10TransitionE>
    newTransition->init();
 800902e:	697b      	ldr	r3, [r7, #20]
 8009030:	681b      	ldr	r3, [r3, #0]
 8009032:	3310      	adds	r3, #16
 8009034:	681b      	ldr	r3, [r3, #0]
 8009036:	6978      	ldr	r0, [r7, #20]
 8009038:	4798      	blx	r3
    newTransition->invalidate();
 800903a:	697b      	ldr	r3, [r7, #20]
 800903c:	681b      	ldr	r3, [r3, #0]
 800903e:	3314      	adds	r3, #20
 8009040:	681b      	ldr	r3, [r3, #0]
 8009042:	6978      	ldr	r0, [r7, #20]
 8009044:	4798      	blx	r3
}
 8009046:	bf00      	nop

    finalizeTransition((Screen*)newScreen, (Presenter*)newPresenter, (Transition*)newTransition);

    return newPresenter;
 8009048:	6afb      	ldr	r3, [r7, #44]	@ 0x2c
}
 800904a:	4618      	mov	r0, r3
 800904c:	373c      	adds	r7, #60	@ 0x3c
 800904e:	46bd      	mov	sp, r7
 8009050:	bd90      	pop	{r4, r7, pc}
 8009052:	bf00      	nop
 8009054:	080234f0 	.word	0x080234f0
 8009058:	08023580 	.word	0x08023580
 800905c:	0802364c 	.word	0x0802364c
 8009060:	08023690 	.word	0x08023690
 8009064:	08023734 	.word	0x08023734

08009068 <_ZN8touchgfx17AbstractPartition2atINS_12NoTransitionEEERT_t>:
     * @param  index The index into the Partition storage where the returned object is located.
     *
     * @return A typed reference to the object at the specified index.
     */
    template <typename T>
    T& at(const uint16_t index)
 8009068:	b580      	push	{r7, lr}
 800906a:	b082      	sub	sp, #8
 800906c:	af00      	add	r7, sp, #0
 800906e:	6078      	str	r0, [r7, #4]
 8009070:	460b      	mov	r3, r1
 8009072:	807b      	strh	r3, [r7, #2]
    {
        return *static_cast<T*>(element(index));
 8009074:	687b      	ldr	r3, [r7, #4]
 8009076:	681b      	ldr	r3, [r3, #0]
 8009078:	3324      	adds	r3, #36	@ 0x24
 800907a:	681b      	ldr	r3, [r3, #0]
 800907c:	887a      	ldrh	r2, [r7, #2]
 800907e:	4611      	mov	r1, r2
 8009080:	6878      	ldr	r0, [r7, #4]
 8009082:	4798      	blx	r3
 8009084:	4603      	mov	r3, r0
    }
 8009086:	4618      	mov	r0, r3
 8009088:	3708      	adds	r7, #8
 800908a:	46bd      	mov	sp, r7
 800908c:	bd80      	pop	{r7, pc}

0800908e <_ZN8touchgfx17AbstractPartition2atI8MainViewEERT_t>:
    T& at(const uint16_t index)
 800908e:	b580      	push	{r7, lr}
 8009090:	b082      	sub	sp, #8
 8009092:	af00      	add	r7, sp, #0
 8009094:	6078      	str	r0, [r7, #4]
 8009096:	460b      	mov	r3, r1
 8009098:	807b      	strh	r3, [r7, #2]
        return *static_cast<T*>(element(index));
 800909a:	687b      	ldr	r3, [r7, #4]
 800909c:	681b      	ldr	r3, [r3, #0]
 800909e:	3324      	adds	r3, #36	@ 0x24
 80090a0:	681b      	ldr	r3, [r3, #0]
 80090a2:	887a      	ldrh	r2, [r7, #2]
 80090a4:	4611      	mov	r1, r2
 80090a6:	6878      	ldr	r0, [r7, #4]
 80090a8:	4798      	blx	r3
 80090aa:	4603      	mov	r3, r0
    }
 80090ac:	4618      	mov	r0, r3
 80090ae:	3708      	adds	r7, #8
 80090b0:	46bd      	mov	sp, r7
 80090b2:	bd80      	pop	{r7, pc}

080090b4 <_ZN8touchgfx17AbstractPartition2atI13MainPresenterEERT_t>:
    T& at(const uint16_t index)
 80090b4:	b580      	push	{r7, lr}
 80090b6:	b082      	sub	sp, #8
 80090b8:	af00      	add	r7, sp, #0
 80090ba:	6078      	str	r0, [r7, #4]
 80090bc:	460b      	mov	r3, r1
 80090be:	807b      	strh	r3, [r7, #2]
        return *static_cast<T*>(element(index));
 80090c0:	687b      	ldr	r3, [r7, #4]
 80090c2:	681b      	ldr	r3, [r3, #0]
 80090c4:	3324      	adds	r3, #36	@ 0x24
 80090c6:	681b      	ldr	r3, [r3, #0]
 80090c8:	887a      	ldrh	r2, [r7, #2]
 80090ca:	4611      	mov	r1, r2
 80090cc:	6878      	ldr	r0, [r7, #4]
 80090ce:	4798      	blx	r3
 80090d0:	4603      	mov	r3, r0
    }
 80090d2:	4618      	mov	r0, r3
 80090d4:	3708      	adds	r7, #8
 80090d6:	46bd      	mov	sp, r7
 80090d8:	bd80      	pop	{r7, pc}

080090da <_ZN8touchgfx4ViewI13MainPresenterE4bindERS1_>:
     * Binds an instance of a specific Presenter type (subclass) to the View instance. This function
     * is called automatically when a new presenter/view pair is activated.
     *
     * @param [in] newPresenter The specific Presenter to be associated with the View.
     */
    void bind(T& newPresenter)
 80090da:	b480      	push	{r7}
 80090dc:	b083      	sub	sp, #12
 80090de:	af00      	add	r7, sp, #0
 80090e0:	6078      	str	r0, [r7, #4]
 80090e2:	6039      	str	r1, [r7, #0]
    {
        presenter = &newPresenter;
 80090e4:	687b      	ldr	r3, [r7, #4]
 80090e6:	683a      	ldr	r2, [r7, #0]
 80090e8:	63da      	str	r2, [r3, #60]	@ 0x3c
    }
 80090ea:	bf00      	nop
 80090ec:	370c      	adds	r7, #12
 80090ee:	46bd      	mov	sp, r7
 80090f0:	f85d 7b04 	ldr.w	r7, [sp], #4
 80090f4:	4770      	bx	lr
	...

080090f8 <_ZN8touchgfx12NoTransitionD1Ev>:
 80090f8:	b580      	push	{r7, lr}
 80090fa:	b082      	sub	sp, #8
 80090fc:	af00      	add	r7, sp, #0
 80090fe:	6078      	str	r0, [r7, #4]
 8009100:	4a05      	ldr	r2, [pc, #20]	@ (8009118 <_ZN8touchgfx12NoTransitionD1Ev+0x20>)
 8009102:	687b      	ldr	r3, [r7, #4]
 8009104:	601a      	str	r2, [r3, #0]
 8009106:	687b      	ldr	r3, [r7, #4]
 8009108:	4618      	mov	r0, r3
 800910a:	f7ff fc2b 	bl	8008964 <_ZN8touchgfx10TransitionD1Ev>
 800910e:	687b      	ldr	r3, [r7, #4]
 8009110:	4618      	mov	r0, r3
 8009112:	3708      	adds	r7, #8
 8009114:	46bd      	mov	sp, r7
 8009116:	bd80      	pop	{r7, pc}
 8009118:	08024600 	.word	0x08024600

0800911c <_ZN8touchgfx12NoTransitionD0Ev>:
 800911c:	b580      	push	{r7, lr}
 800911e:	b082      	sub	sp, #8
 8009120:	af00      	add	r7, sp, #0
 8009122:	6078      	str	r0, [r7, #4]
 8009124:	6878      	ldr	r0, [r7, #4]
 8009126:	f7ff ffe7 	bl	80090f8 <_ZN8touchgfx12NoTransitionD1Ev>
 800912a:	210c      	movs	r1, #12
 800912c:	6878      	ldr	r0, [r7, #4]
 800912e:	f019 f902 	bl	8022336 <_ZdlPvj>
 8009132:	687b      	ldr	r3, [r7, #4]
 8009134:	4618      	mov	r0, r3
 8009136:	3708      	adds	r7, #8
 8009138:	46bd      	mov	sp, r7
 800913a:	bd80      	pop	{r7, pc}

0800913c <_ZN8touchgfx8CallbackI23FrontendApplicationBasevvvED1Ev>:
struct Callback<dest_type, void, void, void> : public GenericCallback<>
 800913c:	b580      	push	{r7, lr}
 800913e:	b082      	sub	sp, #8
 8009140:	af00      	add	r7, sp, #0
 8009142:	6078      	str	r0, [r7, #4]
 8009144:	4a05      	ldr	r2, [pc, #20]	@ (800915c <_ZN8touchgfx8CallbackI23FrontendApplicationBasevvvED1Ev+0x20>)
 8009146:	687b      	ldr	r3, [r7, #4]
 8009148:	601a      	str	r2, [r3, #0]
 800914a:	687b      	ldr	r3, [r7, #4]
 800914c:	4618      	mov	r0, r3
 800914e:	f7ff fbab 	bl	80088a8 <_ZN8touchgfx15GenericCallbackIvvvED1Ev>
 8009152:	687b      	ldr	r3, [r7, #4]
 8009154:	4618      	mov	r0, r3
 8009156:	3708      	adds	r7, #8
 8009158:	46bd      	mov	sp, r7
 800915a:	bd80      	pop	{r7, pc}
 800915c:	08024678 	.word	0x08024678

08009160 <_ZN8touchgfx8CallbackI23FrontendApplicationBasevvvED0Ev>:
 8009160:	b580      	push	{r7, lr}
 8009162:	b082      	sub	sp, #8
 8009164:	af00      	add	r7, sp, #0
 8009166:	6078      	str	r0, [r7, #4]
 8009168:	6878      	ldr	r0, [r7, #4]
 800916a:	f7ff ffe7 	bl	800913c <_ZN8touchgfx8CallbackI23FrontendApplicationBasevvvED1Ev>
 800916e:	2110      	movs	r1, #16
 8009170:	6878      	ldr	r0, [r7, #4]
 8009172:	f019 f8e0 	bl	8022336 <_ZdlPvj>
 8009176:	687b      	ldr	r3, [r7, #4]
 8009178:	4618      	mov	r0, r3
 800917a:	3708      	adds	r7, #8
 800917c:	46bd      	mov	sp, r7
 800917e:	bd80      	pop	{r7, pc}

08009180 <_ZN8touchgfx8CallbackI23FrontendApplicationBasevvvE7executeEv>:

    /**
     * Calls the member function. Do not call execute unless isValid() returns true (ie. a
     * pointer to the object and the function has been set).
     */
    virtual void execute()
 8009180:	b580      	push	{r7, lr}
 8009182:	b082      	sub	sp, #8
 8009184:	af00      	add	r7, sp, #0
 8009186:	6078      	str	r0, [r7, #4]
    {
        (pobject->*pmemfun)();
 8009188:	687b      	ldr	r3, [r7, #4]
 800918a:	685b      	ldr	r3, [r3, #4]
 800918c:	687a      	ldr	r2, [r7, #4]
 800918e:	68d2      	ldr	r2, [r2, #12]
 8009190:	1052      	asrs	r2, r2, #1
 8009192:	1899      	adds	r1, r3, r2
 8009194:	687b      	ldr	r3, [r7, #4]
 8009196:	68db      	ldr	r3, [r3, #12]
 8009198:	f003 0301 	and.w	r3, r3, #1
 800919c:	2b00      	cmp	r3, #0
 800919e:	d102      	bne.n	80091a6 <_ZN8touchgfx8CallbackI23FrontendApplicationBasevvvE7executeEv+0x26>
 80091a0:	687b      	ldr	r3, [r7, #4]
 80091a2:	689b      	ldr	r3, [r3, #8]
 80091a4:	e00a      	b.n	80091bc <_ZN8touchgfx8CallbackI23FrontendApplicationBasevvvE7executeEv+0x3c>
 80091a6:	687b      	ldr	r3, [r7, #4]
 80091a8:	685b      	ldr	r3, [r3, #4]
 80091aa:	687a      	ldr	r2, [r7, #4]
 80091ac:	68d2      	ldr	r2, [r2, #12]
 80091ae:	1052      	asrs	r2, r2, #1
 80091b0:	4413      	add	r3, r2
 80091b2:	681b      	ldr	r3, [r3, #0]
 80091b4:	687a      	ldr	r2, [r7, #4]
 80091b6:	6892      	ldr	r2, [r2, #8]
 80091b8:	4413      	add	r3, r2
 80091ba:	681b      	ldr	r3, [r3, #0]
 80091bc:	4608      	mov	r0, r1
 80091be:	4798      	blx	r3
    }
 80091c0:	bf00      	nop
 80091c2:	3708      	adds	r7, #8
 80091c4:	46bd      	mov	sp, r7
 80091c6:	bd80      	pop	{r7, pc}

080091c8 <_ZNK8touchgfx8CallbackI23FrontendApplicationBasevvvE7isValidEv>:
    /**
     * Function to check whether the Callback has been initialized with values.
     *
     * @return true If the callback is valid (i.e. safe to call execute).
     */
    virtual bool isValid() const
 80091c8:	b480      	push	{r7}
 80091ca:	b083      	sub	sp, #12
 80091cc:	af00      	add	r7, sp, #0
 80091ce:	6078      	str	r0, [r7, #4]
    {
        return (pobject != 0) && (pmemfun != 0);
 80091d0:	687b      	ldr	r3, [r7, #4]
 80091d2:	685b      	ldr	r3, [r3, #4]
 80091d4:	2b00      	cmp	r3, #0
 80091d6:	d010      	beq.n	80091fa <_ZNK8touchgfx8CallbackI23FrontendApplicationBasevvvE7isValidEv+0x32>
 80091d8:	687b      	ldr	r3, [r7, #4]
 80091da:	689b      	ldr	r3, [r3, #8]
 80091dc:	2b00      	cmp	r3, #0
 80091de:	d107      	bne.n	80091f0 <_ZNK8touchgfx8CallbackI23FrontendApplicationBasevvvE7isValidEv+0x28>
 80091e0:	687b      	ldr	r3, [r7, #4]
 80091e2:	68db      	ldr	r3, [r3, #12]
 80091e4:	f003 0301 	and.w	r3, r3, #1
 80091e8:	2b00      	cmp	r3, #0
 80091ea:	d101      	bne.n	80091f0 <_ZNK8touchgfx8CallbackI23FrontendApplicationBasevvvE7isValidEv+0x28>
 80091ec:	2301      	movs	r3, #1
 80091ee:	e000      	b.n	80091f2 <_ZNK8touchgfx8CallbackI23FrontendApplicationBasevvvE7isValidEv+0x2a>
 80091f0:	2300      	movs	r3, #0
 80091f2:	2b01      	cmp	r3, #1
 80091f4:	d001      	beq.n	80091fa <_ZNK8touchgfx8CallbackI23FrontendApplicationBasevvvE7isValidEv+0x32>
 80091f6:	2301      	movs	r3, #1
 80091f8:	e000      	b.n	80091fc <_ZNK8touchgfx8CallbackI23FrontendApplicationBasevvvE7isValidEv+0x34>
 80091fa:	2300      	movs	r3, #0
    }
 80091fc:	4618      	mov	r0, r3
 80091fe:	370c      	adds	r7, #12
 8009200:	46bd      	mov	sp, r7
 8009202:	f85d 7b04 	ldr.w	r7, [sp], #4
 8009206:	4770      	bx	lr

08009208 <_ZN8touchgfx9colortypeC1Em>:
     *
     * @param  col The color.
     *
     * @see Color::getColorFromRGB
     */
    colortype(uint32_t col)
 8009208:	b480      	push	{r7}
 800920a:	b083      	sub	sp, #12
 800920c:	af00      	add	r7, sp, #0
 800920e:	6078      	str	r0, [r7, #4]
 8009210:	6039      	str	r1, [r7, #0]
        : color(col)
 8009212:	687b      	ldr	r3, [r7, #4]
 8009214:	683a      	ldr	r2, [r7, #0]
 8009216:	601a      	str	r2, [r3, #0]
    {
    }
 8009218:	687b      	ldr	r3, [r7, #4]
 800921a:	4618      	mov	r0, r3
 800921c:	370c      	adds	r7, #12
 800921e:	46bd      	mov	sp, r7
 8009220:	f85d 7b04 	ldr.w	r7, [sp], #4
 8009224:	4770      	bx	lr

08009226 <_ZN8touchgfx4RectC1Ev>:
/** Class representing a Rectangle with a few convenient methods. */
class Rect
{
public:
    /** Default constructor. Resulting in an empty Rect with coordinates 0,0. */
    Rect()
 8009226:	b480      	push	{r7}
 8009228:	b083      	sub	sp, #12
 800922a:	af00      	add	r7, sp, #0
 800922c:	6078      	str	r0, [r7, #4]
        : x(0), y(0), width(0), height(0)
 800922e:	687b      	ldr	r3, [r7, #4]
 8009230:	2200      	movs	r2, #0
 8009232:	801a      	strh	r2, [r3, #0]
 8009234:	687b      	ldr	r3, [r7, #4]
 8009236:	2200      	movs	r2, #0
 8009238:	805a      	strh	r2, [r3, #2]
 800923a:	687b      	ldr	r3, [r7, #4]
 800923c:	2200      	movs	r2, #0
 800923e:	809a      	strh	r2, [r3, #4]
 8009240:	687b      	ldr	r3, [r7, #4]
 8009242:	2200      	movs	r2, #0
 8009244:	80da      	strh	r2, [r3, #6]
    {
    }
 8009246:	687b      	ldr	r3, [r7, #4]
 8009248:	4618      	mov	r0, r3
 800924a:	370c      	adds	r7, #12
 800924c:	46bd      	mov	sp, r7
 800924e:	f85d 7b04 	ldr.w	r7, [sp], #4
 8009252:	4770      	bx	lr

08009254 <_ZN8touchgfx4RectC1Essss>:
     * @param  rectX      The x coordinate.
     * @param  rectY      The y coordinate.
     * @param  rectWidth  The width.
     * @param  rectHeight The height.
     */
    Rect(int16_t rectX, int16_t rectY, int16_t rectWidth, int16_t rectHeight)
 8009254:	b480      	push	{r7}
 8009256:	b085      	sub	sp, #20
 8009258:	af00      	add	r7, sp, #0
 800925a:	60f8      	str	r0, [r7, #12]
 800925c:	4608      	mov	r0, r1
 800925e:	4611      	mov	r1, r2
 8009260:	461a      	mov	r2, r3
 8009262:	4603      	mov	r3, r0
 8009264:	817b      	strh	r3, [r7, #10]
 8009266:	460b      	mov	r3, r1
 8009268:	813b      	strh	r3, [r7, #8]
 800926a:	4613      	mov	r3, r2
 800926c:	80fb      	strh	r3, [r7, #6]
        : x(rectX), y(rectY), width(rectWidth), height(rectHeight)
 800926e:	68fb      	ldr	r3, [r7, #12]
 8009270:	897a      	ldrh	r2, [r7, #10]
 8009272:	801a      	strh	r2, [r3, #0]
 8009274:	68fb      	ldr	r3, [r7, #12]
 8009276:	893a      	ldrh	r2, [r7, #8]
 8009278:	805a      	strh	r2, [r3, #2]
 800927a:	68fb      	ldr	r3, [r7, #12]
 800927c:	88fa      	ldrh	r2, [r7, #6]
 800927e:	809a      	strh	r2, [r3, #4]
 8009280:	68fb      	ldr	r3, [r7, #12]
 8009282:	8b3a      	ldrh	r2, [r7, #24]
 8009284:	80da      	strh	r2, [r3, #6]
    {
    }
 8009286:	68fb      	ldr	r3, [r7, #12]
 8009288:	4618      	mov	r0, r3
 800928a:	3714      	adds	r7, #20
 800928c:	46bd      	mov	sp, r7
 800928e:	f85d 7b04 	ldr.w	r7, [sp], #4
 8009292:	4770      	bx	lr

08009294 <_ZN8touchgfx6BitmapC1Et>:
     * Creates and binds a Bitmap instance to the corresponding entry in the BitmapData
     * array.
     *
     * @param  id (Optional) The unique bitmap identifier.
     */
    Bitmap(const BitmapId id = BITMAP_INVALID)
 8009294:	b480      	push	{r7}
 8009296:	b083      	sub	sp, #12
 8009298:	af00      	add	r7, sp, #0
 800929a:	6078      	str	r0, [r7, #4]
 800929c:	460b      	mov	r3, r1
 800929e:	807b      	strh	r3, [r7, #2]
        : bitmapId(id)
 80092a0:	687b      	ldr	r3, [r7, #4]
 80092a2:	887a      	ldrh	r2, [r7, #2]
 80092a4:	801a      	strh	r2, [r3, #0]
    {
    }
 80092a6:	687b      	ldr	r3, [r7, #4]
 80092a8:	4618      	mov	r0, r3
 80092aa:	370c      	adds	r7, #12
 80092ac:	46bd      	mov	sp, r7
 80092ae:	f85d 7b04 	ldr.w	r7, [sp], #4
 80092b2:	4770      	bx	lr

080092b4 <_ZN8touchgfx8DrawableC1Ev>:
 */
class Drawable
{
public:
    /** Initializes a new instance of the Drawable class. */
    Drawable()
 80092b4:	b580      	push	{r7, lr}
 80092b6:	b082      	sub	sp, #8
 80092b8:	af00      	add	r7, sp, #0
 80092ba:	6078      	str	r0, [r7, #4]
          nextSibling(0),
          nextDrawChainElement(0),
          cachedAbsX(0),
          cachedAbsY(0),
          touchable(false),
          visible(true)
 80092bc:	4a14      	ldr	r2, [pc, #80]	@ (8009310 <_ZN8touchgfx8DrawableC1Ev+0x5c>)
 80092be:	687b      	ldr	r3, [r7, #4]
 80092c0:	601a      	str	r2, [r3, #0]
        : rect(),
 80092c2:	687b      	ldr	r3, [r7, #4]
 80092c4:	3304      	adds	r3, #4
 80092c6:	4618      	mov	r0, r3
 80092c8:	f7ff ffad 	bl	8009226 <_ZN8touchgfx4RectC1Ev>
          cachedVisibleRect(),
 80092cc:	687b      	ldr	r3, [r7, #4]
 80092ce:	330c      	adds	r3, #12
 80092d0:	4618      	mov	r0, r3
 80092d2:	f7ff ffa8 	bl	8009226 <_ZN8touchgfx4RectC1Ev>
          parent(0),
 80092d6:	687b      	ldr	r3, [r7, #4]
 80092d8:	2200      	movs	r2, #0
 80092da:	615a      	str	r2, [r3, #20]
          nextSibling(0),
 80092dc:	687b      	ldr	r3, [r7, #4]
 80092de:	2200      	movs	r2, #0
 80092e0:	619a      	str	r2, [r3, #24]
          nextDrawChainElement(0),
 80092e2:	687b      	ldr	r3, [r7, #4]
 80092e4:	2200      	movs	r2, #0
 80092e6:	61da      	str	r2, [r3, #28]
          cachedAbsX(0),
 80092e8:	687b      	ldr	r3, [r7, #4]
 80092ea:	2200      	movs	r2, #0
 80092ec:	841a      	strh	r2, [r3, #32]
          cachedAbsY(0),
 80092ee:	687b      	ldr	r3, [r7, #4]
 80092f0:	2200      	movs	r2, #0
 80092f2:	845a      	strh	r2, [r3, #34]	@ 0x22
          touchable(false),
 80092f4:	687b      	ldr	r3, [r7, #4]
 80092f6:	2200      	movs	r2, #0
 80092f8:	f883 2024 	strb.w	r2, [r3, #36]	@ 0x24
          visible(true)
 80092fc:	687b      	ldr	r3, [r7, #4]
 80092fe:	2201      	movs	r2, #1
 8009300:	f883 2025 	strb.w	r2, [r3, #37]	@ 0x25
    {
    }
 8009304:	687b      	ldr	r3, [r7, #4]
 8009306:	4618      	mov	r0, r3
 8009308:	3708      	adds	r7, #8
 800930a:	46bd      	mov	sp, r7
 800930c:	bd80      	pop	{r7, pc}
 800930e:	bf00      	nop
 8009310:	08025424 	.word	0x08025424

08009314 <_ZN8touchgfx8DrawableD1Ev>:

    /** Finalizes an instance of the Drawable class. */
    virtual ~Drawable()
 8009314:	b480      	push	{r7}
 8009316:	b083      	sub	sp, #12
 8009318:	af00      	add	r7, sp, #0
 800931a:	6078      	str	r0, [r7, #4]
    {
 800931c:	4a04      	ldr	r2, [pc, #16]	@ (8009330 <_ZN8touchgfx8DrawableD1Ev+0x1c>)
 800931e:	687b      	ldr	r3, [r7, #4]
 8009320:	601a      	str	r2, [r3, #0]
    }
 8009322:	687b      	ldr	r3, [r7, #4]
 8009324:	4618      	mov	r0, r3
 8009326:	370c      	adds	r7, #12
 8009328:	46bd      	mov	sp, r7
 800932a:	f85d 7b04 	ldr.w	r7, [sp], #4
 800932e:	4770      	bx	lr
 8009330:	08025424 	.word	0x08025424

08009334 <_ZN8touchgfx8DrawableD0Ev>:
    virtual ~Drawable()
 8009334:	b580      	push	{r7, lr}
 8009336:	b082      	sub	sp, #8
 8009338:	af00      	add	r7, sp, #0
 800933a:	6078      	str	r0, [r7, #4]
    }
 800933c:	6878      	ldr	r0, [r7, #4]
 800933e:	f7ff ffe9 	bl	8009314 <_ZN8touchgfx8DrawableD1Ev>
 8009342:	2128      	movs	r1, #40	@ 0x28
 8009344:	6878      	ldr	r0, [r7, #4]
 8009346:	f018 fff6 	bl	8022336 <_ZdlPvj>
 800934a:	687b      	ldr	r3, [r7, #4]
 800934c:	4618      	mov	r0, r3
 800934e:	3708      	adds	r7, #8
 8009350:	46bd      	mov	sp, r7
 8009352:	bd80      	pop	{r7, pc}

08009354 <_ZNK8touchgfx8Drawable17invalidateContentEv>:
     * Tell the framework that the contents of the Drawable needs to be redrawn. If the Drawable is
     * invisible, nothing happens. Subclasses of Drawable are encouraged to implement this function
     * and invalidate as little as possible, i.e. the smallest rectangle covering the visual element(s)
     * drawn by the widget.
     */
    virtual void invalidateContent() const
 8009354:	b580      	push	{r7, lr}
 8009356:	b082      	sub	sp, #8
 8009358:	af00      	add	r7, sp, #0
 800935a:	6078      	str	r0, [r7, #4]
    {
        // Consider checking if *this is in the draw chain
        if (visible)
 800935c:	687b      	ldr	r3, [r7, #4]
 800935e:	f893 3025 	ldrb.w	r3, [r3, #37]	@ 0x25
 8009362:	2b00      	cmp	r3, #0
 8009364:	d005      	beq.n	8009372 <_ZNK8touchgfx8Drawable17invalidateContentEv+0x1e>
        {
            invalidate();
 8009366:	687b      	ldr	r3, [r7, #4]
 8009368:	681b      	ldr	r3, [r3, #0]
 800936a:	3314      	adds	r3, #20
 800936c:	681b      	ldr	r3, [r3, #0]
 800936e:	6878      	ldr	r0, [r7, #4]
 8009370:	4798      	blx	r3
        }
    }
 8009372:	bf00      	nop
 8009374:	3708      	adds	r7, #8
 8009376:	46bd      	mov	sp, r7
 8009378:	bd80      	pop	{r7, pc}

0800937a <_ZN8touchgfx8Drawable13getFirstChildEv>:
     * Function for obtaining the first child of this drawable if any.
     *
     * @return A pointer on the first child drawable if any.
     * @see Container::getFirstChild
     */
    virtual Drawable* getFirstChild()
 800937a:	b480      	push	{r7}
 800937c:	b083      	sub	sp, #12
 800937e:	af00      	add	r7, sp, #0
 8009380:	6078      	str	r0, [r7, #4]
    {
        return 0;
 8009382:	2300      	movs	r3, #0
    }
 8009384:	4618      	mov	r0, r3
 8009386:	370c      	adds	r7, #12
 8009388:	46bd      	mov	sp, r7
 800938a:	f85d 7b04 	ldr.w	r7, [sp], #4
 800938e:	4770      	bx	lr

08009390 <_ZN8touchgfx8Drawable11setPositionEssss>:
     *
     * @note For most Drawable widgets, changing this does normally not automatically yield a redraw.
     *
     * @see setXY,setWidthHeight,setPosition(const Drawable&)
     */
    void setPosition(int16_t x, int16_t y, int16_t width, int16_t height)
 8009390:	b580      	push	{r7, lr}
 8009392:	b084      	sub	sp, #16
 8009394:	af00      	add	r7, sp, #0
 8009396:	60f8      	str	r0, [r7, #12]
 8009398:	4608      	mov	r0, r1
 800939a:	4611      	mov	r1, r2
 800939c:	461a      	mov	r2, r3
 800939e:	4603      	mov	r3, r0
 80093a0:	817b      	strh	r3, [r7, #10]
 80093a2:	460b      	mov	r3, r1
 80093a4:	813b      	strh	r3, [r7, #8]
 80093a6:	4613      	mov	r3, r2
 80093a8:	80fb      	strh	r3, [r7, #6]
    {
        setXY(x, y);
 80093aa:	f9b7 2008 	ldrsh.w	r2, [r7, #8]
 80093ae:	f9b7 300a 	ldrsh.w	r3, [r7, #10]
 80093b2:	4619      	mov	r1, r3
 80093b4:	68f8      	ldr	r0, [r7, #12]
 80093b6:	f000 f82a 	bl	800940e <_ZN8touchgfx8Drawable5setXYEss>
        setWidthHeight(width, height);
 80093ba:	f9b7 2018 	ldrsh.w	r2, [r7, #24]
 80093be:	f9b7 3006 	ldrsh.w	r3, [r7, #6]
 80093c2:	4619      	mov	r1, r3
 80093c4:	68f8      	ldr	r0, [r7, #12]
 80093c6:	f000 f87e 	bl	80094c6 <_ZN8touchgfx8Drawable14setWidthHeightEss>
    }
 80093ca:	bf00      	nop
 80093cc:	3710      	adds	r7, #16
 80093ce:	46bd      	mov	sp, r7
 80093d0:	bd80      	pop	{r7, pc}

080093d2 <_ZN8touchgfx8Drawable4setXEs>:
     *
     * @param  x The new x value, relative to the parent. A negative value is allowed.
     *
     * @note For most Drawable widgets, changing this does normally not automatically yield a redraw.
     */
    virtual void setX(int16_t x)
 80093d2:	b480      	push	{r7}
 80093d4:	b083      	sub	sp, #12
 80093d6:	af00      	add	r7, sp, #0
 80093d8:	6078      	str	r0, [r7, #4]
 80093da:	460b      	mov	r3, r1
 80093dc:	807b      	strh	r3, [r7, #2]
    {
        rect.x = x;
 80093de:	687b      	ldr	r3, [r7, #4]
 80093e0:	887a      	ldrh	r2, [r7, #2]
 80093e2:	809a      	strh	r2, [r3, #4]
    }
 80093e4:	bf00      	nop
 80093e6:	370c      	adds	r7, #12
 80093e8:	46bd      	mov	sp, r7
 80093ea:	f85d 7b04 	ldr.w	r7, [sp], #4
 80093ee:	4770      	bx	lr

080093f0 <_ZN8touchgfx8Drawable4setYEs>:
     *
     * @param  y The new y value, relative to the parent. A negative value is allowed.
     *
     * @note For most Drawable widgets, changing this does normally not automatically yield a redraw.
     */
    virtual void setY(int16_t y)
 80093f0:	b480      	push	{r7}
 80093f2:	b083      	sub	sp, #12
 80093f4:	af00      	add	r7, sp, #0
 80093f6:	6078      	str	r0, [r7, #4]
 80093f8:	460b      	mov	r3, r1
 80093fa:	807b      	strh	r3, [r7, #2]
    {
        rect.y = y;
 80093fc:	687b      	ldr	r3, [r7, #4]
 80093fe:	887a      	ldrh	r2, [r7, #2]
 8009400:	80da      	strh	r2, [r3, #6]
    }
 8009402:	bf00      	nop
 8009404:	370c      	adds	r7, #12
 8009406:	46bd      	mov	sp, r7
 8009408:	f85d 7b04 	ldr.w	r7, [sp], #4
 800940c:	4770      	bx	lr

0800940e <_ZN8touchgfx8Drawable5setXYEss>:
     *
     * @see moveTo
     *
     * @note For most Drawable widgets, changing this does normally not automatically yield a redraw.
     */
    void setXY(int16_t x, int16_t y)
 800940e:	b580      	push	{r7, lr}
 8009410:	b082      	sub	sp, #8
 8009412:	af00      	add	r7, sp, #0
 8009414:	6078      	str	r0, [r7, #4]
 8009416:	460b      	mov	r3, r1
 8009418:	807b      	strh	r3, [r7, #2]
 800941a:	4613      	mov	r3, r2
 800941c:	803b      	strh	r3, [r7, #0]
    {
        setX(x);
 800941e:	687b      	ldr	r3, [r7, #4]
 8009420:	681b      	ldr	r3, [r3, #0]
 8009422:	3330      	adds	r3, #48	@ 0x30
 8009424:	681b      	ldr	r3, [r3, #0]
 8009426:	f9b7 2002 	ldrsh.w	r2, [r7, #2]
 800942a:	4611      	mov	r1, r2
 800942c:	6878      	ldr	r0, [r7, #4]
 800942e:	4798      	blx	r3
        setY(y);
 8009430:	687b      	ldr	r3, [r7, #4]
 8009432:	681b      	ldr	r3, [r3, #0]
 8009434:	3334      	adds	r3, #52	@ 0x34
 8009436:	681b      	ldr	r3, [r3, #0]
 8009438:	f9b7 2000 	ldrsh.w	r2, [r7]
 800943c:	4611      	mov	r1, r2
 800943e:	6878      	ldr	r0, [r7, #4]
 8009440:	4798      	blx	r3
    }
 8009442:	bf00      	nop
 8009444:	3708      	adds	r7, #8
 8009446:	46bd      	mov	sp, r7
 8009448:	bd80      	pop	{r7, pc}

0800944a <_ZN8touchgfx8Drawable8setWidthEs>:
     *
     * @param  width The new width.
     *
     * @note For most Drawable widgets, changing this does normally not automatically yield a redraw.
     */
    virtual void setWidth(int16_t width)
 800944a:	b480      	push	{r7}
 800944c:	b083      	sub	sp, #12
 800944e:	af00      	add	r7, sp, #0
 8009450:	6078      	str	r0, [r7, #4]
 8009452:	460b      	mov	r3, r1
 8009454:	807b      	strh	r3, [r7, #2]
    {
        rect.width = width;
 8009456:	687b      	ldr	r3, [r7, #4]
 8009458:	887a      	ldrh	r2, [r7, #2]
 800945a:	811a      	strh	r2, [r3, #8]
    }
 800945c:	bf00      	nop
 800945e:	370c      	adds	r7, #12
 8009460:	46bd      	mov	sp, r7
 8009462:	f85d 7b04 	ldr.w	r7, [sp], #4
 8009466:	4770      	bx	lr

08009468 <_ZN8touchgfx8Drawable9setHeightEs>:
     *
     * @param  height The new height.
     *
     * @note For most Drawable widgets, changing this does normally not automatically yield a redraw.
     */
    virtual void setHeight(int16_t height)
 8009468:	b480      	push	{r7}
 800946a:	b083      	sub	sp, #12
 800946c:	af00      	add	r7, sp, #0
 800946e:	6078      	str	r0, [r7, #4]
 8009470:	460b      	mov	r3, r1
 8009472:	807b      	strh	r3, [r7, #2]
    {
        rect.height = height;
 8009474:	687b      	ldr	r3, [r7, #4]
 8009476:	887a      	ldrh	r2, [r7, #2]
 8009478:	815a      	strh	r2, [r3, #10]
    }
 800947a:	bf00      	nop
 800947c:	370c      	adds	r7, #12
 800947e:	46bd      	mov	sp, r7
 8009480:	f85d 7b04 	ldr.w	r7, [sp], #4
 8009484:	4770      	bx	lr

08009486 <_ZN8touchgfx8Drawable20childGeometryChangedEv>:
    /**
     * This function can be called on parent nodes to signal that the size or position of
     * one or more of its children has changed. Currently only used in ScrollableContainer
     * to redraw scrollbars when the size of the scrolling contents changes.
     */
    virtual void childGeometryChanged()
 8009486:	b480      	push	{r7}
 8009488:	b083      	sub	sp, #12
 800948a:	af00      	add	r7, sp, #0
 800948c:	6078      	str	r0, [r7, #4]
    {
    }
 800948e:	bf00      	nop
 8009490:	370c      	adds	r7, #12
 8009492:	46bd      	mov	sp, r7
 8009494:	f85d 7b04 	ldr.w	r7, [sp], #4
 8009498:	4770      	bx	lr

0800949a <_ZN8touchgfx8Drawable16handleClickEventERKNS_10ClickEventE>:
     * ignores the event. The event is only received if the Drawable is touchable and
     * visible.
     *
     * @param  event The ClickEvent received from the HAL.
     */
    virtual void handleClickEvent(const ClickEvent& event)
 800949a:	b480      	push	{r7}
 800949c:	b083      	sub	sp, #12
 800949e:	af00      	add	r7, sp, #0
 80094a0:	6078      	str	r0, [r7, #4]
 80094a2:	6039      	str	r1, [r7, #0]
    {
        (void)event; // Unused variable
    }
 80094a4:	bf00      	nop
 80094a6:	370c      	adds	r7, #12
 80094a8:	46bd      	mov	sp, r7
 80094aa:	f85d 7b04 	ldr.w	r7, [sp], #4
 80094ae:	4770      	bx	lr

080094b0 <_ZN8touchgfx8Drawable18handleGestureEventERKNS_12GestureEventE>:
     * ignores the event. The event is only received if the Drawable is touchable and
     * visible.
     *
     * @param  event The GestureEvent received from the HAL.
     */
    virtual void handleGestureEvent(const GestureEvent& event)
 80094b0:	b480      	push	{r7}
 80094b2:	b083      	sub	sp, #12
 80094b4:	af00      	add	r7, sp, #0
 80094b6:	6078      	str	r0, [r7, #4]
 80094b8:	6039      	str	r1, [r7, #0]
    {
        (void)event; // Unused variable
    }
 80094ba:	bf00      	nop
 80094bc:	370c      	adds	r7, #12
 80094be:	46bd      	mov	sp, r7
 80094c0:	f85d 7b04 	ldr.w	r7, [sp], #4
 80094c4:	4770      	bx	lr

080094c6 <_ZN8touchgfx8Drawable14setWidthHeightEss>:
     * coordinates).
     *
     * @param  width  The width.
     * @param  height The height.
     */
    void setWidthHeight(int16_t width, int16_t height)
 80094c6:	b580      	push	{r7, lr}
 80094c8:	b082      	sub	sp, #8
 80094ca:	af00      	add	r7, sp, #0
 80094cc:	6078      	str	r0, [r7, #4]
 80094ce:	460b      	mov	r3, r1
 80094d0:	807b      	strh	r3, [r7, #2]
 80094d2:	4613      	mov	r3, r2
 80094d4:	803b      	strh	r3, [r7, #0]
    {
        setWidth(width);
 80094d6:	687b      	ldr	r3, [r7, #4]
 80094d8:	681b      	ldr	r3, [r3, #0]
 80094da:	3338      	adds	r3, #56	@ 0x38
 80094dc:	681b      	ldr	r3, [r3, #0]
 80094de:	f9b7 2002 	ldrsh.w	r2, [r7, #2]
 80094e2:	4611      	mov	r1, r2
 80094e4:	6878      	ldr	r0, [r7, #4]
 80094e6:	4798      	blx	r3
        setHeight(height);
 80094e8:	687b      	ldr	r3, [r7, #4]
 80094ea:	681b      	ldr	r3, [r3, #0]
 80094ec:	333c      	adds	r3, #60	@ 0x3c
 80094ee:	681b      	ldr	r3, [r3, #0]
 80094f0:	f9b7 2000 	ldrsh.w	r2, [r7]
 80094f4:	4611      	mov	r1, r2
 80094f6:	6878      	ldr	r0, [r7, #4]
 80094f8:	4798      	blx	r3
    }
 80094fa:	bf00      	nop
 80094fc:	3708      	adds	r7, #8
 80094fe:	46bd      	mov	sp, r7
 8009500:	bd80      	pop	{r7, pc}

08009502 <_ZN8touchgfx8Drawable15handleDragEventERKNS_9DragEventE>:
     * ignores the event. The event is only received if the drawable is touchable and
     * visible.
     *
     * @param  event The DragEvent received from the HAL.
     */
    virtual void handleDragEvent(const DragEvent& event)
 8009502:	b480      	push	{r7}
 8009504:	b083      	sub	sp, #12
 8009506:	af00      	add	r7, sp, #0
 8009508:	6078      	str	r0, [r7, #4]
 800950a:	6039      	str	r1, [r7, #0]
    {
        (void)event; // Unused variable
    }
 800950c:	bf00      	nop
 800950e:	370c      	adds	r7, #12
 8009510:	46bd      	mov	sp, r7
 8009512:	f85d 7b04 	ldr.w	r7, [sp], #4
 8009516:	4770      	bx	lr

08009518 <_ZN8touchgfx8Drawable15handleTickEventEv>:
     * Called periodically by the framework if the Drawable instance has subscribed to timer
     * ticks.
     *
     * @see Application::registerTimerWidget
     */
    virtual void handleTickEvent()
 8009518:	b480      	push	{r7}
 800951a:	b083      	sub	sp, #12
 800951c:	af00      	add	r7, sp, #0
 800951e:	6078      	str	r0, [r7, #4]
    {
    }
 8009520:	bf00      	nop
 8009522:	370c      	adds	r7, #12
 8009524:	46bd      	mov	sp, r7
 8009526:	f85d 7b04 	ldr.w	r7, [sp], #4
 800952a:	4770      	bx	lr

0800952c <_ZN8touchgfx8Drawable12setTouchableEb>:
    /**
     * Controls whether this Drawable receives touch events or not.
     *
     * @param  touch If true it will receive touch events, if false it will not.
     */
    void setTouchable(bool touch)
 800952c:	b480      	push	{r7}
 800952e:	b083      	sub	sp, #12
 8009530:	af00      	add	r7, sp, #0
 8009532:	6078      	str	r0, [r7, #4]
 8009534:	460b      	mov	r3, r1
 8009536:	70fb      	strb	r3, [r7, #3]
    {
        touchable = touch;
 8009538:	687b      	ldr	r3, [r7, #4]
 800953a:	78fa      	ldrb	r2, [r7, #3]
 800953c:	f883 2024 	strb.w	r2, [r3, #36]	@ 0x24
    }
 8009540:	bf00      	nop
 8009542:	370c      	adds	r7, #12
 8009544:	46bd      	mov	sp, r7
 8009546:	f85d 7b04 	ldr.w	r7, [sp], #4
 800954a:	4770      	bx	lr

0800954c <_ZNK8touchgfx8Drawable9isVisibleEv>:
     *
     * @return true if the Drawable is visible.
     *
     * @see setVisible
     */
    bool isVisible() const
 800954c:	b480      	push	{r7}
 800954e:	b083      	sub	sp, #12
 8009550:	af00      	add	r7, sp, #0
 8009552:	6078      	str	r0, [r7, #4]
    {
        return visible;
 8009554:	687b      	ldr	r3, [r7, #4]
 8009556:	f893 3025 	ldrb.w	r3, [r3, #37]	@ 0x25
    }
 800955a:	4618      	mov	r0, r3
 800955c:	370c      	adds	r7, #12
 800955e:	46bd      	mov	sp, r7
 8009560:	f85d 7b04 	ldr.w	r7, [sp], #4
 8009564:	4770      	bx	lr

08009566 <_ZNK8touchgfx8Drawable11isTouchableEv>:
     *
     * @return True if touch events are received.
     *
     * @see setTouchable
     */
    bool isTouchable() const
 8009566:	b480      	push	{r7}
 8009568:	b083      	sub	sp, #12
 800956a:	af00      	add	r7, sp, #0
 800956c:	6078      	str	r0, [r7, #4]
    {
        return touchable;
 800956e:	687b      	ldr	r3, [r7, #4]
 8009570:	f893 3024 	ldrb.w	r3, [r3, #36]	@ 0x24
    }
 8009574:	4618      	mov	r0, r3
 8009576:	370c      	adds	r7, #12
 8009578:	46bd      	mov	sp, r7
 800957a:	f85d 7b04 	ldr.w	r7, [sp], #4
 800957e:	4770      	bx	lr

08009580 <_ZN8touchgfx8Drawable6moveToEss>:
     *
     * @see moveRelative, setXY
     *
     * @note Will redraw the appropriate areas of the screen.
     */
    virtual void moveTo(int16_t x, int16_t y)
 8009580:	b580      	push	{r7, lr}
 8009582:	b082      	sub	sp, #8
 8009584:	af00      	add	r7, sp, #0
 8009586:	6078      	str	r0, [r7, #4]
 8009588:	460b      	mov	r3, r1
 800958a:	807b      	strh	r3, [r7, #2]
 800958c:	4613      	mov	r3, r2
 800958e:	803b      	strh	r3, [r7, #0]
    {
        moveRelative(x - rect.x, y - rect.y);
 8009590:	687b      	ldr	r3, [r7, #4]
 8009592:	681b      	ldr	r3, [r3, #0]
 8009594:	3354      	adds	r3, #84	@ 0x54
 8009596:	681b      	ldr	r3, [r3, #0]
 8009598:	8879      	ldrh	r1, [r7, #2]
 800959a:	687a      	ldr	r2, [r7, #4]
 800959c:	f9b2 2004 	ldrsh.w	r2, [r2, #4]
 80095a0:	b292      	uxth	r2, r2
 80095a2:	1a8a      	subs	r2, r1, r2
 80095a4:	b292      	uxth	r2, r2
 80095a6:	b210      	sxth	r0, r2
 80095a8:	8839      	ldrh	r1, [r7, #0]
 80095aa:	687a      	ldr	r2, [r7, #4]
 80095ac:	f9b2 2006 	ldrsh.w	r2, [r2, #6]
 80095b0:	b292      	uxth	r2, r2
 80095b2:	1a8a      	subs	r2, r1, r2
 80095b4:	b292      	uxth	r2, r2
 80095b6:	b212      	sxth	r2, r2
 80095b8:	4601      	mov	r1, r0
 80095ba:	6878      	ldr	r0, [r7, #4]
 80095bc:	4798      	blx	r3
    }
 80095be:	bf00      	nop
 80095c0:	3708      	adds	r7, #8
 80095c2:	46bd      	mov	sp, r7
 80095c4:	bd80      	pop	{r7, pc}

080095c6 <_ZN8touchgfx8Drawable19resetDrawChainCacheEv>:
     *
     * Reset cached coordinate data.
     *
     * @note For TouchGFX internal use only.
     */
    void resetDrawChainCache()
 80095c6:	b480      	push	{r7}
 80095c8:	b083      	sub	sp, #12
 80095ca:	af00      	add	r7, sp, #0
 80095cc:	6078      	str	r0, [r7, #4]
    {
        // Resetting the cached indicators
        cachedVisibleRect.x = UNCACHED_INDICATOR;
 80095ce:	687b      	ldr	r3, [r7, #4]
 80095d0:	f64f 72ff 	movw	r2, #65535	@ 0xffff
 80095d4:	819a      	strh	r2, [r3, #12]
        cachedAbsX = UNCACHED_INDICATOR;
 80095d6:	687b      	ldr	r3, [r7, #4]
 80095d8:	f64f 72ff 	movw	r2, #65535	@ 0xffff
 80095dc:	841a      	strh	r2, [r3, #32]
        cachedAbsY = UNCACHED_INDICATOR;
 80095de:	687b      	ldr	r3, [r7, #4]
 80095e0:	f64f 72ff 	movw	r2, #65535	@ 0xffff
 80095e4:	845a      	strh	r2, [r3, #34]	@ 0x22
    }
 80095e6:	bf00      	nop
 80095e8:	370c      	adds	r7, #12
 80095ea:	46bd      	mov	sp, r7
 80095ec:	f85d 7b04 	ldr.w	r7, [sp], #4
 80095f0:	4770      	bx	lr

080095f2 <_ZN8touchgfx8Drawable14setupDrawChainERKNS_4RectEPPS0_>:
     * @param          invalidatedArea     Include drawables that intersect with this area only.
     * @param [in,out] nextPreviousElement Modifiable element in linked list.
     *
     * @note For TouchGFX internal use only.
     */
    virtual void setupDrawChain(const Rect& invalidatedArea, Drawable** nextPreviousElement)
 80095f2:	b580      	push	{r7, lr}
 80095f4:	b084      	sub	sp, #16
 80095f6:	af00      	add	r7, sp, #0
 80095f8:	60f8      	str	r0, [r7, #12]
 80095fa:	60b9      	str	r1, [r7, #8]
 80095fc:	607a      	str	r2, [r7, #4]
    {
        (void)invalidatedArea; // Unused variable
        resetDrawChainCache();
 80095fe:	68f8      	ldr	r0, [r7, #12]
 8009600:	f7ff ffe1 	bl	80095c6 <_ZN8touchgfx8Drawable19resetDrawChainCacheEv>
        nextDrawChainElement = *nextPreviousElement;
 8009604:	687b      	ldr	r3, [r7, #4]
 8009606:	681a      	ldr	r2, [r3, #0]
 8009608:	68fb      	ldr	r3, [r7, #12]
 800960a:	61da      	str	r2, [r3, #28]
        *nextPreviousElement = this;
 800960c:	687b      	ldr	r3, [r7, #4]
 800960e:	68fa      	ldr	r2, [r7, #12]
 8009610:	601a      	str	r2, [r3, #0]
    }
 8009612:	bf00      	nop
 8009614:	3710      	adds	r7, #16
 8009616:	46bd      	mov	sp, r7
 8009618:	bd80      	pop	{r7, pc}

0800961a <_ZN8touchgfx6Widget12getLastChildEssPPNS_8DrawableE>:
     * Since a Widget is only one Drawable, Widget::getLastChild simply yields itself as
     * result, but only if the Widget isVisible and isTouchable.
     *
     * @param [out] last Result, the address of the actual instance of the Widget.
     */
    virtual void getLastChild(int16_t /*x*/, int16_t /*y*/, Drawable** last)
 800961a:	b580      	push	{r7, lr}
 800961c:	b084      	sub	sp, #16
 800961e:	af00      	add	r7, sp, #0
 8009620:	60f8      	str	r0, [r7, #12]
 8009622:	607b      	str	r3, [r7, #4]
 8009624:	460b      	mov	r3, r1
 8009626:	817b      	strh	r3, [r7, #10]
 8009628:	4613      	mov	r3, r2
 800962a:	813b      	strh	r3, [r7, #8]
    {
        if (isVisible() && isTouchable())
 800962c:	68fb      	ldr	r3, [r7, #12]
 800962e:	4618      	mov	r0, r3
 8009630:	f7ff ff8c 	bl	800954c <_ZNK8touchgfx8Drawable9isVisibleEv>
 8009634:	4603      	mov	r3, r0
 8009636:	2b00      	cmp	r3, #0
 8009638:	d008      	beq.n	800964c <_ZN8touchgfx6Widget12getLastChildEssPPNS_8DrawableE+0x32>
 800963a:	68fb      	ldr	r3, [r7, #12]
 800963c:	4618      	mov	r0, r3
 800963e:	f7ff ff92 	bl	8009566 <_ZNK8touchgfx8Drawable11isTouchableEv>
 8009642:	4603      	mov	r3, r0
 8009644:	2b00      	cmp	r3, #0
 8009646:	d001      	beq.n	800964c <_ZN8touchgfx6Widget12getLastChildEssPPNS_8DrawableE+0x32>
 8009648:	2301      	movs	r3, #1
 800964a:	e000      	b.n	800964e <_ZN8touchgfx6Widget12getLastChildEssPPNS_8DrawableE+0x34>
 800964c:	2300      	movs	r3, #0
 800964e:	2b00      	cmp	r3, #0
 8009650:	d002      	beq.n	8009658 <_ZN8touchgfx6Widget12getLastChildEssPPNS_8DrawableE+0x3e>
        {
            *last = this;
 8009652:	68fa      	ldr	r2, [r7, #12]
 8009654:	687b      	ldr	r3, [r7, #4]
 8009656:	601a      	str	r2, [r3, #0]
        }
    }
 8009658:	bf00      	nop
 800965a:	3710      	adds	r7, #16
 800965c:	46bd      	mov	sp, r7
 800965e:	bd80      	pop	{r7, pc}

08009660 <_ZN8touchgfx6ScreenD1Ev>:
public:
    /** Initializes a new instance of the Screen class. */
    Screen();

    /** Finalizes an instance of the Screen class. */
    virtual ~Screen()
 8009660:	b580      	push	{r7, lr}
 8009662:	b082      	sub	sp, #8
 8009664:	af00      	add	r7, sp, #0
 8009666:	6078      	str	r0, [r7, #4]
    {
 8009668:	4a06      	ldr	r2, [pc, #24]	@ (8009684 <_ZN8touchgfx6ScreenD1Ev+0x24>)
 800966a:	687b      	ldr	r3, [r7, #4]
 800966c:	601a      	str	r2, [r3, #0]
    }
 800966e:	687b      	ldr	r3, [r7, #4]
 8009670:	3304      	adds	r3, #4
 8009672:	4618      	mov	r0, r3
 8009674:	f000 ff36 	bl	800a4e4 <_ZN8touchgfx9ContainerD1Ev>
 8009678:	687b      	ldr	r3, [r7, #4]
 800967a:	4618      	mov	r0, r3
 800967c:	3708      	adds	r7, #8
 800967e:	46bd      	mov	sp, r7
 8009680:	bd80      	pop	{r7, pc}
 8009682:	bf00      	nop
 8009684:	08025530 	.word	0x08025530

08009688 <_ZN8touchgfx6ScreenD0Ev>:
    virtual ~Screen()
 8009688:	b580      	push	{r7, lr}
 800968a:	b082      	sub	sp, #8
 800968c:	af00      	add	r7, sp, #0
 800968e:	6078      	str	r0, [r7, #4]
    }
 8009690:	6878      	ldr	r0, [r7, #4]
 8009692:	f7ff ffe5 	bl	8009660 <_ZN8touchgfx6ScreenD1Ev>
 8009696:	213c      	movs	r1, #60	@ 0x3c
 8009698:	6878      	ldr	r0, [r7, #4]
 800969a:	f018 fe4c 	bl	8022336 <_ZdlPvj>
 800969e:	687b      	ldr	r3, [r7, #4]
 80096a0:	4618      	mov	r0, r3
 80096a2:	3708      	adds	r7, #8
 80096a4:	46bd      	mov	sp, r7
 80096a6:	bd80      	pop	{r7, pc}

080096a8 <_ZN8touchgfx6Screen11setupScreenEv>:
     * version does nothing, but place any screen specific initialization code in an
     * overridden version.
     *
     * @see Application::switchScreen
     */
    virtual void setupScreen()
 80096a8:	b480      	push	{r7}
 80096aa:	b083      	sub	sp, #12
 80096ac:	af00      	add	r7, sp, #0
 80096ae:	6078      	str	r0, [r7, #4]
    {
    }
 80096b0:	bf00      	nop
 80096b2:	370c      	adds	r7, #12
 80096b4:	46bd      	mov	sp, r7
 80096b6:	f85d 7b04 	ldr.w	r7, [sp], #4
 80096ba:	4770      	bx	lr

080096bc <_ZN8touchgfx6Screen15afterTransitionEv>:
     * version does nothing, but override to do screen specific initialization code that has
     * to be done after the transition to the screen.
     *
     * @see Application::handleTickEvent
     */
    virtual void afterTransition()
 80096bc:	b480      	push	{r7}
 80096be:	b083      	sub	sp, #12
 80096c0:	af00      	add	r7, sp, #0
 80096c2:	6078      	str	r0, [r7, #4]
    {
    }
 80096c4:	bf00      	nop
 80096c6:	370c      	adds	r7, #12
 80096c8:	46bd      	mov	sp, r7
 80096ca:	f85d 7b04 	ldr.w	r7, [sp], #4
 80096ce:	4770      	bx	lr

080096d0 <_ZN8touchgfx6Screen14tearDownScreenEv>:
     * Base version does nothing, but place any screen specific cleanup code in an
     * overridden version.
     *
     * @see Application::switchScreen
     */
    virtual void tearDownScreen()
 80096d0:	b480      	push	{r7}
 80096d2:	b083      	sub	sp, #12
 80096d4:	af00      	add	r7, sp, #0
 80096d6:	6078      	str	r0, [r7, #4]
    {
    }
 80096d8:	bf00      	nop
 80096da:	370c      	adds	r7, #12
 80096dc:	46bd      	mov	sp, r7
 80096de:	f85d 7b04 	ldr.w	r7, [sp], #4
 80096e2:	4770      	bx	lr

080096e4 <_ZN8touchgfx6Screen15handleTickEventEv>:

    /**
     * Called by the Application on the current screen with a frequency of
     * Application::TICK_INTERVAL_MS.
     */
    virtual void handleTickEvent()
 80096e4:	b480      	push	{r7}
 80096e6:	b083      	sub	sp, #12
 80096e8:	af00      	add	r7, sp, #0
 80096ea:	6078      	str	r0, [r7, #4]
    {
    }
 80096ec:	bf00      	nop
 80096ee:	370c      	adds	r7, #12
 80096f0:	46bd      	mov	sp, r7
 80096f2:	f85d 7b04 	ldr.w	r7, [sp], #4
 80096f6:	4770      	bx	lr

080096f8 <_ZN8touchgfx6Screen14handleKeyEventEh>:
     * Called by the Application on the reception of a "key", the meaning of which is
     * platform/application specific. Default implementation does nothing.
     *
     * @param  key The key to handle.
     */
    virtual void handleKeyEvent(uint8_t key)
 80096f8:	b480      	push	{r7}
 80096fa:	b083      	sub	sp, #12
 80096fc:	af00      	add	r7, sp, #0
 80096fe:	6078      	str	r0, [r7, #4]
 8009700:	460b      	mov	r3, r1
 8009702:	70fb      	strb	r3, [r7, #3]
    {
        (void)key; // Unused variable
    }
 8009704:	bf00      	nop
 8009706:	370c      	adds	r7, #12
 8009708:	46bd      	mov	sp, r7
 800970a:	f85d 7b04 	ldr.w	r7, [sp], #4
 800970e:	4770      	bx	lr

08009710 <_ZN8touchgfx6Screen3addERNS_8DrawableE>:
     * @param [in] d The Drawable to add.
     *
     * @note Must not be called with a Drawable that was already added to the screen. If in doubt,
     *       call remove() first.
     */
    void add(Drawable& d)
 8009710:	b580      	push	{r7, lr}
 8009712:	b082      	sub	sp, #8
 8009714:	af00      	add	r7, sp, #0
 8009716:	6078      	str	r0, [r7, #4]
 8009718:	6039      	str	r1, [r7, #0]
    {
        container.add(d);
 800971a:	687b      	ldr	r3, [r7, #4]
 800971c:	3304      	adds	r3, #4
 800971e:	6839      	ldr	r1, [r7, #0]
 8009720:	4618      	mov	r0, r3
 8009722:	f003 fcb3 	bl	800d08c <_ZN8touchgfx9Container3addERNS_8DrawableE>
    }
 8009726:	bf00      	nop
 8009728:	3708      	adds	r7, #8
 800972a:	46bd      	mov	sp, r7
 800972c:	bd80      	pop	{r7, pc}
	...

08009730 <_ZN8touchgfx6WidgetC1Ev>:
class Widget : public Drawable
 8009730:	b580      	push	{r7, lr}
 8009732:	b082      	sub	sp, #8
 8009734:	af00      	add	r7, sp, #0
 8009736:	6078      	str	r0, [r7, #4]
 8009738:	687b      	ldr	r3, [r7, #4]
 800973a:	4618      	mov	r0, r3
 800973c:	f7ff fdba 	bl	80092b4 <_ZN8touchgfx8DrawableC1Ev>
 8009740:	4a03      	ldr	r2, [pc, #12]	@ (8009750 <_ZN8touchgfx6WidgetC1Ev+0x20>)
 8009742:	687b      	ldr	r3, [r7, #4]
 8009744:	601a      	str	r2, [r3, #0]
 8009746:	687b      	ldr	r3, [r7, #4]
 8009748:	4618      	mov	r0, r3
 800974a:	3708      	adds	r7, #8
 800974c:	46bd      	mov	sp, r7
 800974e:	bd80      	pop	{r7, pc}
 8009750:	08024874 	.word	0x08024874

08009754 <_ZN8touchgfx6WidgetD1Ev>:
 8009754:	b580      	push	{r7, lr}
 8009756:	b082      	sub	sp, #8
 8009758:	af00      	add	r7, sp, #0
 800975a:	6078      	str	r0, [r7, #4]
 800975c:	4a05      	ldr	r2, [pc, #20]	@ (8009774 <_ZN8touchgfx6WidgetD1Ev+0x20>)
 800975e:	687b      	ldr	r3, [r7, #4]
 8009760:	601a      	str	r2, [r3, #0]
 8009762:	687b      	ldr	r3, [r7, #4]
 8009764:	4618      	mov	r0, r3
 8009766:	f7ff fdd5 	bl	8009314 <_ZN8touchgfx8DrawableD1Ev>
 800976a:	687b      	ldr	r3, [r7, #4]
 800976c:	4618      	mov	r0, r3
 800976e:	3708      	adds	r7, #8
 8009770:	46bd      	mov	sp, r7
 8009772:	bd80      	pop	{r7, pc}
 8009774:	08024874 	.word	0x08024874

08009778 <_ZN8touchgfx6WidgetD0Ev>:
 8009778:	b580      	push	{r7, lr}
 800977a:	b082      	sub	sp, #8
 800977c:	af00      	add	r7, sp, #0
 800977e:	6078      	str	r0, [r7, #4]
 8009780:	6878      	ldr	r0, [r7, #4]
 8009782:	f7ff ffe7 	bl	8009754 <_ZN8touchgfx6WidgetD1Ev>
 8009786:	2128      	movs	r1, #40	@ 0x28
 8009788:	6878      	ldr	r0, [r7, #4]
 800978a:	f018 fdd4 	bl	8022336 <_ZdlPvj>
 800978e:	687b      	ldr	r3, [r7, #4]
 8009790:	4618      	mov	r0, r3
 8009792:	3708      	adds	r7, #8
 8009794:	46bd      	mov	sp, r7
 8009796:	bd80      	pop	{r7, pc}

08009798 <_ZN8touchgfx3BoxC1Ev>:
 */
class Box : public Widget
{
public:
    /** Construct a new Box with a default alpha value of 255 (solid) */
    Box()
 8009798:	b580      	push	{r7, lr}
 800979a:	b082      	sub	sp, #8
 800979c:	af00      	add	r7, sp, #0
 800979e:	6078      	str	r0, [r7, #4]
        : Widget(), alpha(255), color(0)
 80097a0:	687b      	ldr	r3, [r7, #4]
 80097a2:	4618      	mov	r0, r3
 80097a4:	2326      	movs	r3, #38	@ 0x26
 80097a6:	461a      	mov	r2, r3
 80097a8:	2100      	movs	r1, #0
 80097aa:	f019 f878 	bl	802289e <memset>
 80097ae:	687b      	ldr	r3, [r7, #4]
 80097b0:	4618      	mov	r0, r3
 80097b2:	f7ff ffbd 	bl	8009730 <_ZN8touchgfx6WidgetC1Ev>
 80097b6:	4a09      	ldr	r2, [pc, #36]	@ (80097dc <_ZN8touchgfx3BoxC1Ev+0x44>)
 80097b8:	687b      	ldr	r3, [r7, #4]
 80097ba:	601a      	str	r2, [r3, #0]
 80097bc:	687b      	ldr	r3, [r7, #4]
 80097be:	22ff      	movs	r2, #255	@ 0xff
 80097c0:	f883 2026 	strb.w	r2, [r3, #38]	@ 0x26
 80097c4:	687b      	ldr	r3, [r7, #4]
 80097c6:	3328      	adds	r3, #40	@ 0x28
 80097c8:	2100      	movs	r1, #0
 80097ca:	4618      	mov	r0, r3
 80097cc:	f7ff fd1c 	bl	8009208 <_ZN8touchgfx9colortypeC1Em>
    {
    }
 80097d0:	687b      	ldr	r3, [r7, #4]
 80097d2:	4618      	mov	r0, r3
 80097d4:	3708      	adds	r7, #8
 80097d6:	46bd      	mov	sp, r7
 80097d8:	bd80      	pop	{r7, pc}
 80097da:	bf00      	nop
 80097dc:	080251a0 	.word	0x080251a0

080097e0 <_ZN8touchgfx3Box8setColorENS_9colortypeE>:
     *
     * @param  newColor The color of the box.
     *
     * @see getColor, Color::getColorFromRGB
     */
    void setColor(colortype newColor)
 80097e0:	b480      	push	{r7}
 80097e2:	b083      	sub	sp, #12
 80097e4:	af00      	add	r7, sp, #0
 80097e6:	6078      	str	r0, [r7, #4]
 80097e8:	6039      	str	r1, [r7, #0]
    {
        color = newColor;
 80097ea:	687b      	ldr	r3, [r7, #4]
 80097ec:	683a      	ldr	r2, [r7, #0]
 80097ee:	629a      	str	r2, [r3, #40]	@ 0x28
    }
 80097f0:	bf00      	nop
 80097f2:	370c      	adds	r7, #12
 80097f4:	46bd      	mov	sp, r7
 80097f6:	f85d 7b04 	ldr.w	r7, [sp], #4
 80097fa:	4770      	bx	lr

080097fc <_ZN8touchgfx5ImageC1ERKNS_6BitmapE>:
     *
     * @param   bmp (Optional) The bitmap to display.
     *
     * @see setBitmap
     */
    Image(const Bitmap& bmp = Bitmap())
 80097fc:	b580      	push	{r7, lr}
 80097fe:	b082      	sub	sp, #8
 8009800:	af00      	add	r7, sp, #0
 8009802:	6078      	str	r0, [r7, #4]
 8009804:	6039      	str	r1, [r7, #0]
        : Widget(), bitmap(bmp), alpha(255)
 8009806:	687b      	ldr	r3, [r7, #4]
 8009808:	4618      	mov	r0, r3
 800980a:	2326      	movs	r3, #38	@ 0x26
 800980c:	461a      	mov	r2, r3
 800980e:	2100      	movs	r1, #0
 8009810:	f019 f845 	bl	802289e <memset>
 8009814:	687b      	ldr	r3, [r7, #4]
 8009816:	4618      	mov	r0, r3
 8009818:	f7ff ff8a 	bl	8009730 <_ZN8touchgfx6WidgetC1Ev>
 800981c:	4a09      	ldr	r2, [pc, #36]	@ (8009844 <_ZN8touchgfx5ImageC1ERKNS_6BitmapE+0x48>)
 800981e:	687b      	ldr	r3, [r7, #4]
 8009820:	601a      	str	r2, [r3, #0]
 8009822:	687b      	ldr	r3, [r7, #4]
 8009824:	683a      	ldr	r2, [r7, #0]
 8009826:	8812      	ldrh	r2, [r2, #0]
 8009828:	84da      	strh	r2, [r3, #38]	@ 0x26
 800982a:	687b      	ldr	r3, [r7, #4]
 800982c:	22ff      	movs	r2, #255	@ 0xff
 800982e:	f883 2028 	strb.w	r2, [r3, #40]	@ 0x28
    {
        Image::setBitmap(bmp);
 8009832:	6839      	ldr	r1, [r7, #0]
 8009834:	6878      	ldr	r0, [r7, #4]
 8009836:	f005 fad3 	bl	800ede0 <_ZN8touchgfx5Image9setBitmapERKNS_6BitmapE>
    }
 800983a:	687b      	ldr	r3, [r7, #4]
 800983c:	4618      	mov	r0, r3
 800983e:	3708      	adds	r7, #8
 8009840:	46bd      	mov	sp, r7
 8009842:	bd80      	pop	{r7, pc}
 8009844:	0802530c 	.word	0x0802530c

08009848 <_ZN8touchgfx14AbstractButtonC1Ev>:
 */
class AbstractButton : public Widget
{
public:
    /** Sets this Widget touchable so the user can interact with buttons. */
    AbstractButton()
 8009848:	b580      	push	{r7, lr}
 800984a:	b082      	sub	sp, #8
 800984c:	af00      	add	r7, sp, #0
 800984e:	6078      	str	r0, [r7, #4]
        : Widget(), action(), pressed(false)
 8009850:	687b      	ldr	r3, [r7, #4]
 8009852:	4618      	mov	r0, r3
 8009854:	2326      	movs	r3, #38	@ 0x26
 8009856:	461a      	mov	r2, r3
 8009858:	2100      	movs	r1, #0
 800985a:	f019 f820 	bl	802289e <memset>
 800985e:	687b      	ldr	r3, [r7, #4]
 8009860:	4618      	mov	r0, r3
 8009862:	f7ff ff65 	bl	8009730 <_ZN8touchgfx6WidgetC1Ev>
 8009866:	4a0a      	ldr	r2, [pc, #40]	@ (8009890 <_ZN8touchgfx14AbstractButtonC1Ev+0x48>)
 8009868:	687b      	ldr	r3, [r7, #4]
 800986a:	601a      	str	r2, [r3, #0]
 800986c:	687b      	ldr	r3, [r7, #4]
 800986e:	2200      	movs	r2, #0
 8009870:	629a      	str	r2, [r3, #40]	@ 0x28
 8009872:	687b      	ldr	r3, [r7, #4]
 8009874:	2200      	movs	r2, #0
 8009876:	f883 202c 	strb.w	r2, [r3, #44]	@ 0x2c
    {
        setTouchable(true);
 800987a:	687b      	ldr	r3, [r7, #4]
 800987c:	2101      	movs	r1, #1
 800987e:	4618      	mov	r0, r3
 8009880:	f7ff fe54 	bl	800952c <_ZN8touchgfx8Drawable12setTouchableEb>
    }
 8009884:	687b      	ldr	r3, [r7, #4]
 8009886:	4618      	mov	r0, r3
 8009888:	3708      	adds	r7, #8
 800988a:	46bd      	mov	sp, r7
 800988c:	bd80      	pop	{r7, pc}
 800988e:	bf00      	nop
 8009890:	0802502c 	.word	0x0802502c

08009894 <_ZN8touchgfx14AbstractButton9setActionERNS_15GenericCallbackIRKS0_vvEE>:
     * @param  callback The callback to be executed. The callback will be executed with a
     *                  reference to the AbstractButton.
     *
     * @see GenericCallback, handleClickEvent, ClickEvent
     */
    void setAction(GenericCallback<const AbstractButton&>& callback)
 8009894:	b480      	push	{r7}
 8009896:	b083      	sub	sp, #12
 8009898:	af00      	add	r7, sp, #0
 800989a:	6078      	str	r0, [r7, #4]
 800989c:	6039      	str	r1, [r7, #0]
    {
        action = &callback;
 800989e:	687b      	ldr	r3, [r7, #4]
 80098a0:	683a      	ldr	r2, [r7, #0]
 80098a2:	629a      	str	r2, [r3, #40]	@ 0x28
    }
 80098a4:	bf00      	nop
 80098a6:	370c      	adds	r7, #12
 80098a8:	46bd      	mov	sp, r7
 80098aa:	f85d 7b04 	ldr.w	r7, [sp], #4
 80098ae:	4770      	bx	lr

080098b0 <_ZN8touchgfx14AbstractButtonD1Ev>:
class AbstractButton : public Widget
 80098b0:	b580      	push	{r7, lr}
 80098b2:	b082      	sub	sp, #8
 80098b4:	af00      	add	r7, sp, #0
 80098b6:	6078      	str	r0, [r7, #4]
 80098b8:	4a05      	ldr	r2, [pc, #20]	@ (80098d0 <_ZN8touchgfx14AbstractButtonD1Ev+0x20>)
 80098ba:	687b      	ldr	r3, [r7, #4]
 80098bc:	601a      	str	r2, [r3, #0]
 80098be:	687b      	ldr	r3, [r7, #4]
 80098c0:	4618      	mov	r0, r3
 80098c2:	f7ff ff47 	bl	8009754 <_ZN8touchgfx6WidgetD1Ev>
 80098c6:	687b      	ldr	r3, [r7, #4]
 80098c8:	4618      	mov	r0, r3
 80098ca:	3708      	adds	r7, #8
 80098cc:	46bd      	mov	sp, r7
 80098ce:	bd80      	pop	{r7, pc}
 80098d0:	0802502c 	.word	0x0802502c

080098d4 <_ZN8touchgfx14AbstractButtonD0Ev>:
 80098d4:	b580      	push	{r7, lr}
 80098d6:	b082      	sub	sp, #8
 80098d8:	af00      	add	r7, sp, #0
 80098da:	6078      	str	r0, [r7, #4]
 80098dc:	6878      	ldr	r0, [r7, #4]
 80098de:	f7ff ffe7 	bl	80098b0 <_ZN8touchgfx14AbstractButtonD1Ev>
 80098e2:	2130      	movs	r1, #48	@ 0x30
 80098e4:	6878      	ldr	r0, [r7, #4]
 80098e6:	f018 fd26 	bl	8022336 <_ZdlPvj>
 80098ea:	687b      	ldr	r3, [r7, #4]
 80098ec:	4618      	mov	r0, r3
 80098ee:	3708      	adds	r7, #8
 80098f0:	46bd      	mov	sp, r7
 80098f2:	bd80      	pop	{r7, pc}

080098f4 <_ZN8touchgfx6ButtonC1Ev>:
 * pressed state.
 */
class Button : public AbstractButton
{
public:
    Button()
 80098f4:	b580      	push	{r7, lr}
 80098f6:	b082      	sub	sp, #8
 80098f8:	af00      	add	r7, sp, #0
 80098fa:	6078      	str	r0, [r7, #4]
        : AbstractButton(), up(), down(), alpha(255)
 80098fc:	687b      	ldr	r3, [r7, #4]
 80098fe:	4618      	mov	r0, r3
 8009900:	f7ff ffa2 	bl	8009848 <_ZN8touchgfx14AbstractButtonC1Ev>
 8009904:	4a0c      	ldr	r2, [pc, #48]	@ (8009938 <_ZN8touchgfx6ButtonC1Ev+0x44>)
 8009906:	687b      	ldr	r3, [r7, #4]
 8009908:	601a      	str	r2, [r3, #0]
 800990a:	687b      	ldr	r3, [r7, #4]
 800990c:	332e      	adds	r3, #46	@ 0x2e
 800990e:	f64f 71ff 	movw	r1, #65535	@ 0xffff
 8009912:	4618      	mov	r0, r3
 8009914:	f7ff fcbe 	bl	8009294 <_ZN8touchgfx6BitmapC1Et>
 8009918:	687b      	ldr	r3, [r7, #4]
 800991a:	3330      	adds	r3, #48	@ 0x30
 800991c:	f64f 71ff 	movw	r1, #65535	@ 0xffff
 8009920:	4618      	mov	r0, r3
 8009922:	f7ff fcb7 	bl	8009294 <_ZN8touchgfx6BitmapC1Et>
 8009926:	687b      	ldr	r3, [r7, #4]
 8009928:	22ff      	movs	r2, #255	@ 0xff
 800992a:	f883 2032 	strb.w	r2, [r3, #50]	@ 0x32
    {
    }
 800992e:	687b      	ldr	r3, [r7, #4]
 8009930:	4618      	mov	r0, r3
 8009932:	3708      	adds	r7, #8
 8009934:	46bd      	mov	sp, r7
 8009936:	bd80      	pop	{r7, pc}
 8009938:	08025208 	.word	0x08025208

0800993c <_ZN8touchgfx12ToggleButton10setBitmapsERKNS_6BitmapES3_>:
 * when it is subsequently pressed, it will pop back out.
 */
class ToggleButton : public Button
{
public:
    virtual void setBitmaps(const Bitmap& bitmapReleased, const Bitmap& bitmapPressed)
 800993c:	b580      	push	{r7, lr}
 800993e:	b084      	sub	sp, #16
 8009940:	af00      	add	r7, sp, #0
 8009942:	60f8      	str	r0, [r7, #12]
 8009944:	60b9      	str	r1, [r7, #8]
 8009946:	607a      	str	r2, [r7, #4]
    {
        originalPressed = bitmapPressed;
 8009948:	68fb      	ldr	r3, [r7, #12]
 800994a:	687a      	ldr	r2, [r7, #4]
 800994c:	8812      	ldrh	r2, [r2, #0]
 800994e:	869a      	strh	r2, [r3, #52]	@ 0x34
        Button::setBitmaps(bitmapReleased, bitmapPressed);
 8009950:	68fb      	ldr	r3, [r7, #12]
 8009952:	687a      	ldr	r2, [r7, #4]
 8009954:	68b9      	ldr	r1, [r7, #8]
 8009956:	4618      	mov	r0, r3
 8009958:	f005 f92c 	bl	800ebb4 <_ZN8touchgfx6Button10setBitmapsERKNS_6BitmapES3_>
    }
 800995c:	bf00      	nop
 800995e:	3710      	adds	r7, #16
 8009960:	46bd      	mov	sp, r7
 8009962:	bd80      	pop	{r7, pc}

08009964 <_ZN8touchgfx9TypedTextC1Et>:
    TypedText(const TypedTextId id = TYPED_TEXT_INVALID)
 8009964:	b480      	push	{r7}
 8009966:	b083      	sub	sp, #12
 8009968:	af00      	add	r7, sp, #0
 800996a:	6078      	str	r0, [r7, #4]
 800996c:	460b      	mov	r3, r1
 800996e:	807b      	strh	r3, [r7, #2]
        : typedTextId(id)
 8009970:	4a06      	ldr	r2, [pc, #24]	@ (800998c <_ZN8touchgfx9TypedTextC1Et+0x28>)
 8009972:	687b      	ldr	r3, [r7, #4]
 8009974:	601a      	str	r2, [r3, #0]
 8009976:	687b      	ldr	r3, [r7, #4]
 8009978:	887a      	ldrh	r2, [r7, #2]
 800997a:	809a      	strh	r2, [r3, #4]
    }
 800997c:	687b      	ldr	r3, [r7, #4]
 800997e:	4618      	mov	r0, r3
 8009980:	370c      	adds	r7, #12
 8009982:	46bd      	mov	sp, r7
 8009984:	f85d 7b04 	ldr.w	r7, [sp], #4
 8009988:	4770      	bx	lr
 800998a:	bf00      	nop
 800998c:	08024588 	.word	0x08024588

08009990 <_ZN8touchgfx8TextAreaC1Ev>:
 *       the pointer remains valid when drawing.
 */
class TextArea : public Widget
{
public:
    TextArea()
 8009990:	b580      	push	{r7, lr}
 8009992:	b082      	sub	sp, #8
 8009994:	af00      	add	r7, sp, #0
 8009996:	6078      	str	r0, [r7, #4]
        : Widget(), typedText(TYPED_TEXT_INVALID), color(0), linespace(0), alpha(255), indentation(0), rotation(TEXT_ROTATE_0), wideTextAction(WIDE_TEXT_NONE), boundingArea()
 8009998:	687b      	ldr	r3, [r7, #4]
 800999a:	4618      	mov	r0, r3
 800999c:	2326      	movs	r3, #38	@ 0x26
 800999e:	461a      	mov	r2, r3
 80099a0:	2100      	movs	r1, #0
 80099a2:	f018 ff7c 	bl	802289e <memset>
 80099a6:	687b      	ldr	r3, [r7, #4]
 80099a8:	4618      	mov	r0, r3
 80099aa:	f7ff fec1 	bl	8009730 <_ZN8touchgfx6WidgetC1Ev>
 80099ae:	4a16      	ldr	r2, [pc, #88]	@ (8009a08 <_ZN8touchgfx8TextAreaC1Ev+0x78>)
 80099b0:	687b      	ldr	r3, [r7, #4]
 80099b2:	601a      	str	r2, [r3, #0]
 80099b4:	687b      	ldr	r3, [r7, #4]
 80099b6:	3328      	adds	r3, #40	@ 0x28
 80099b8:	f64f 71ff 	movw	r1, #65535	@ 0xffff
 80099bc:	4618      	mov	r0, r3
 80099be:	f7ff ffd1 	bl	8009964 <_ZN8touchgfx9TypedTextC1Et>
 80099c2:	687b      	ldr	r3, [r7, #4]
 80099c4:	3330      	adds	r3, #48	@ 0x30
 80099c6:	2100      	movs	r1, #0
 80099c8:	4618      	mov	r0, r3
 80099ca:	f7ff fc1d 	bl	8009208 <_ZN8touchgfx9colortypeC1Em>
 80099ce:	687b      	ldr	r3, [r7, #4]
 80099d0:	2200      	movs	r2, #0
 80099d2:	869a      	strh	r2, [r3, #52]	@ 0x34
 80099d4:	687b      	ldr	r3, [r7, #4]
 80099d6:	22ff      	movs	r2, #255	@ 0xff
 80099d8:	f883 2036 	strb.w	r2, [r3, #54]	@ 0x36
 80099dc:	687b      	ldr	r3, [r7, #4]
 80099de:	2200      	movs	r2, #0
 80099e0:	f883 2037 	strb.w	r2, [r3, #55]	@ 0x37
 80099e4:	687b      	ldr	r3, [r7, #4]
 80099e6:	2200      	movs	r2, #0
 80099e8:	f883 2038 	strb.w	r2, [r3, #56]	@ 0x38
 80099ec:	687b      	ldr	r3, [r7, #4]
 80099ee:	2200      	movs	r2, #0
 80099f0:	f883 2039 	strb.w	r2, [r3, #57]	@ 0x39
 80099f4:	687b      	ldr	r3, [r7, #4]
 80099f6:	333c      	adds	r3, #60	@ 0x3c
 80099f8:	4618      	mov	r0, r3
 80099fa:	f000 f8f0 	bl	8009bde <_ZN8touchgfx8TextArea12BoundingAreaC1Ev>
    {
    }
 80099fe:	687b      	ldr	r3, [r7, #4]
 8009a00:	4618      	mov	r0, r3
 8009a02:	3708      	adds	r7, #8
 8009a04:	46bd      	mov	sp, r7
 8009a06:	bd80      	pop	{r7, pc}
 8009a08:	08025110 	.word	0x08025110

08009a0c <_ZN8touchgfx8TextArea8setWidthEs>:

    virtual void setWidth(int16_t width)
 8009a0c:	b590      	push	{r4, r7, lr}
 8009a0e:	b087      	sub	sp, #28
 8009a10:	af00      	add	r7, sp, #0
 8009a12:	6178      	str	r0, [r7, #20]
 8009a14:	460b      	mov	r3, r1
 8009a16:	827b      	strh	r3, [r7, #18]
    {
        Widget::setWidth(width);
 8009a18:	697b      	ldr	r3, [r7, #20]
 8009a1a:	f9b7 2012 	ldrsh.w	r2, [r7, #18]
 8009a1e:	4611      	mov	r1, r2
 8009a20:	4618      	mov	r0, r3
 8009a22:	f7ff fd12 	bl	800944a <_ZN8touchgfx8Drawable8setWidthEs>
        boundingArea = calculateBoundingArea();
 8009a26:	697b      	ldr	r3, [r7, #20]
 8009a28:	681b      	ldr	r3, [r3, #0]
 8009a2a:	3384      	adds	r3, #132	@ 0x84
 8009a2c:	681b      	ldr	r3, [r3, #0]
 8009a2e:	697c      	ldr	r4, [r7, #20]
 8009a30:	463a      	mov	r2, r7
 8009a32:	6979      	ldr	r1, [r7, #20]
 8009a34:	4610      	mov	r0, r2
 8009a36:	4798      	blx	r3
 8009a38:	f104 033c 	add.w	r3, r4, #60	@ 0x3c
 8009a3c:	463a      	mov	r2, r7
 8009a3e:	ca07      	ldmia	r2, {r0, r1, r2}
 8009a40:	e883 0007 	stmia.w	r3, {r0, r1, r2}
    }
 8009a44:	bf00      	nop
 8009a46:	371c      	adds	r7, #28
 8009a48:	46bd      	mov	sp, r7
 8009a4a:	bd90      	pop	{r4, r7, pc}

08009a4c <_ZN8touchgfx8TextArea9setHeightEs>:

    virtual void setHeight(int16_t height)
 8009a4c:	b590      	push	{r4, r7, lr}
 8009a4e:	b087      	sub	sp, #28
 8009a50:	af00      	add	r7, sp, #0
 8009a52:	6178      	str	r0, [r7, #20]
 8009a54:	460b      	mov	r3, r1
 8009a56:	827b      	strh	r3, [r7, #18]
    {
        Widget::setHeight(height);
 8009a58:	697b      	ldr	r3, [r7, #20]
 8009a5a:	f9b7 2012 	ldrsh.w	r2, [r7, #18]
 8009a5e:	4611      	mov	r1, r2
 8009a60:	4618      	mov	r0, r3
 8009a62:	f7ff fd01 	bl	8009468 <_ZN8touchgfx8Drawable9setHeightEs>
        boundingArea = calculateBoundingArea();
 8009a66:	697b      	ldr	r3, [r7, #20]
 8009a68:	681b      	ldr	r3, [r3, #0]
 8009a6a:	3384      	adds	r3, #132	@ 0x84
 8009a6c:	681b      	ldr	r3, [r3, #0]
 8009a6e:	697c      	ldr	r4, [r7, #20]
 8009a70:	463a      	mov	r2, r7
 8009a72:	6979      	ldr	r1, [r7, #20]
 8009a74:	4610      	mov	r0, r2
 8009a76:	4798      	blx	r3
 8009a78:	f104 033c 	add.w	r3, r4, #60	@ 0x3c
 8009a7c:	463a      	mov	r2, r7
 8009a7e:	ca07      	ldmia	r2, {r0, r1, r2}
 8009a80:	e883 0007 	stmia.w	r3, {r0, r1, r2}
    }
 8009a84:	bf00      	nop
 8009a86:	371c      	adds	r7, #28
 8009a88:	46bd      	mov	sp, r7
 8009a8a:	bd90      	pop	{r4, r7, pc}

08009a8c <_ZNK8touchgfx8TextArea12getSolidRectEv>:

    virtual Rect getSolidRect() const
 8009a8c:	b580      	push	{r7, lr}
 8009a8e:	b082      	sub	sp, #8
 8009a90:	af00      	add	r7, sp, #0
 8009a92:	6078      	str	r0, [r7, #4]
 8009a94:	6039      	str	r1, [r7, #0]
    {
        return Rect();
 8009a96:	6878      	ldr	r0, [r7, #4]
 8009a98:	f7ff fbc5 	bl	8009226 <_ZN8touchgfx4RectC1Ev>
    }
 8009a9c:	6878      	ldr	r0, [r7, #4]
 8009a9e:	3708      	adds	r7, #8
 8009aa0:	46bd      	mov	sp, r7
 8009aa2:	bd80      	pop	{r7, pc}

08009aa4 <_ZN8touchgfx8TextArea8setAlphaEh>:
    }

    /**
     * @copydoc Image::setAlpha
     */
    virtual void setAlpha(uint8_t newAlpha)
 8009aa4:	b480      	push	{r7}
 8009aa6:	b083      	sub	sp, #12
 8009aa8:	af00      	add	r7, sp, #0
 8009aaa:	6078      	str	r0, [r7, #4]
 8009aac:	460b      	mov	r3, r1
 8009aae:	70fb      	strb	r3, [r7, #3]
    {
        alpha = newAlpha;
 8009ab0:	687b      	ldr	r3, [r7, #4]
 8009ab2:	78fa      	ldrb	r2, [r7, #3]
 8009ab4:	f883 2036 	strb.w	r2, [r3, #54]	@ 0x36
    }
 8009ab8:	bf00      	nop
 8009aba:	370c      	adds	r7, #12
 8009abc:	46bd      	mov	sp, r7
 8009abe:	f85d 7b04 	ldr.w	r7, [sp], #4
 8009ac2:	4770      	bx	lr

08009ac4 <_ZN8touchgfx8TextArea12setBaselineYEs>:
     *
     * @param  baselineY The y coordinate of the baseline of the text.
     *
     * @note setTypedText() must be called prior to setting the baseline.
     */
    virtual void setBaselineY(int16_t baselineY)
 8009ac4:	b5f0      	push	{r4, r5, r6, r7, lr}
 8009ac6:	b085      	sub	sp, #20
 8009ac8:	af00      	add	r7, sp, #0
 8009aca:	6078      	str	r0, [r7, #4]
 8009acc:	460b      	mov	r3, r1
 8009ace:	807b      	strh	r3, [r7, #2]
    {
        setY(baselineY - getTypedText().getFont()->getBaseline());
 8009ad0:	687e      	ldr	r6, [r7, #4]
 8009ad2:	687b      	ldr	r3, [r7, #4]
 8009ad4:	681b      	ldr	r3, [r3, #0]
 8009ad6:	3334      	adds	r3, #52	@ 0x34
 8009ad8:	681c      	ldr	r4, [r3, #0]
 8009ada:	887d      	ldrh	r5, [r7, #2]
 8009adc:	6878      	ldr	r0, [r7, #4]
 8009ade:	f000 f867 	bl	8009bb0 <_ZNK8touchgfx8TextArea12getTypedTextEv>
 8009ae2:	4603      	mov	r3, r0
 8009ae4:	60fb      	str	r3, [r7, #12]
     *
     * @return The font.
     */
    FORCE_INLINE_FUNCTION const Font* getFont() const
    {
        assert(typedTexts != 0 && "TypedText database has not been initialized.");
 8009ae6:	4b1c      	ldr	r3, [pc, #112]	@ (8009b58 <_ZN8touchgfx8TextArea12setBaselineYEs+0x94>)
 8009ae8:	681b      	ldr	r3, [r3, #0]
 8009aea:	2b00      	cmp	r3, #0
 8009aec:	d105      	bne.n	8009afa <_ZN8touchgfx8TextArea12setBaselineYEs+0x36>
 8009aee:	4b1b      	ldr	r3, [pc, #108]	@ (8009b5c <_ZN8touchgfx8TextArea12setBaselineYEs+0x98>)
 8009af0:	4a1b      	ldr	r2, [pc, #108]	@ (8009b60 <_ZN8touchgfx8TextArea12setBaselineYEs+0x9c>)
 8009af2:	216c      	movs	r1, #108	@ 0x6c
 8009af4:	481b      	ldr	r0, [pc, #108]	@ (8009b64 <_ZN8touchgfx8TextArea12setBaselineYEs+0xa0>)
 8009af6:	f018 fccb 	bl	8022490 <__assert_func>
 8009afa:	68fb      	ldr	r3, [r7, #12]
 8009afc:	60bb      	str	r3, [r7, #8]
        return typedTextId < numberOfTypedTexts;
 8009afe:	68bb      	ldr	r3, [r7, #8]
 8009b00:	889a      	ldrh	r2, [r3, #4]
 8009b02:	4b19      	ldr	r3, [pc, #100]	@ (8009b68 <_ZN8touchgfx8TextArea12setBaselineYEs+0xa4>)
 8009b04:	881b      	ldrh	r3, [r3, #0]
 8009b06:	429a      	cmp	r2, r3
 8009b08:	bf34      	ite	cc
 8009b0a:	2301      	movcc	r3, #1
 8009b0c:	2300      	movcs	r3, #0
 8009b0e:	b2db      	uxtb	r3, r3
        assert(hasValidId() && "typedTextId larger than numberOfTypedTexts.");
 8009b10:	2b00      	cmp	r3, #0
 8009b12:	d105      	bne.n	8009b20 <_ZN8touchgfx8TextArea12setBaselineYEs+0x5c>
 8009b14:	4b15      	ldr	r3, [pc, #84]	@ (8009b6c <_ZN8touchgfx8TextArea12setBaselineYEs+0xa8>)
 8009b16:	4a12      	ldr	r2, [pc, #72]	@ (8009b60 <_ZN8touchgfx8TextArea12setBaselineYEs+0x9c>)
 8009b18:	216d      	movs	r1, #109	@ 0x6d
 8009b1a:	4812      	ldr	r0, [pc, #72]	@ (8009b64 <_ZN8touchgfx8TextArea12setBaselineYEs+0xa0>)
 8009b1c:	f018 fcb8 	bl	8022490 <__assert_func>
        return fonts[typedTexts[typedTextId].fontIdx];
 8009b20:	4b13      	ldr	r3, [pc, #76]	@ (8009b70 <_ZN8touchgfx8TextArea12setBaselineYEs+0xac>)
 8009b22:	681a      	ldr	r2, [r3, #0]
 8009b24:	4b0c      	ldr	r3, [pc, #48]	@ (8009b58 <_ZN8touchgfx8TextArea12setBaselineYEs+0x94>)
 8009b26:	6819      	ldr	r1, [r3, #0]
 8009b28:	68fb      	ldr	r3, [r7, #12]
 8009b2a:	889b      	ldrh	r3, [r3, #4]
 8009b2c:	005b      	lsls	r3, r3, #1
 8009b2e:	440b      	add	r3, r1
 8009b30:	781b      	ldrb	r3, [r3, #0]
 8009b32:	009b      	lsls	r3, r3, #2
 8009b34:	4413      	add	r3, r2
 8009b36:	681b      	ldr	r3, [r3, #0]
 8009b38:	681a      	ldr	r2, [r3, #0]
 8009b3a:	3230      	adds	r2, #48	@ 0x30
 8009b3c:	6812      	ldr	r2, [r2, #0]
 8009b3e:	4618      	mov	r0, r3
 8009b40:	4790      	blx	r2
 8009b42:	4603      	mov	r3, r0
 8009b44:	1aeb      	subs	r3, r5, r3
 8009b46:	b29b      	uxth	r3, r3
 8009b48:	b21b      	sxth	r3, r3
 8009b4a:	4619      	mov	r1, r3
 8009b4c:	4630      	mov	r0, r6
 8009b4e:	47a0      	blx	r4
    }
 8009b50:	bf00      	nop
 8009b52:	3714      	adds	r7, #20
 8009b54:	46bd      	mov	sp, r7
 8009b56:	bdf0      	pop	{r4, r5, r6, r7, pc}
 8009b58:	20002e0c 	.word	0x20002e0c
 8009b5c:	080237d8 	.word	0x080237d8
 8009b60:	0802381c 	.word	0x0802381c
 8009b64:	08023858 	.word	0x08023858
 8009b68:	20002e10 	.word	0x20002e10
 8009b6c:	0802389c 	.word	0x0802389c
 8009b70:	20002e14 	.word	0x20002e14

08009b74 <_ZN8touchgfx8TextArea13setXBaselineYEss>:
     * @param  x         The x coordinate of the TextArea.
     * @param  baselineY The y coordinate of the baseline of the text.
     *
     * @note setTypedText() must be called prior to setting the baseline.
     */
    virtual void setXBaselineY(int16_t x, int16_t baselineY)
 8009b74:	b580      	push	{r7, lr}
 8009b76:	b082      	sub	sp, #8
 8009b78:	af00      	add	r7, sp, #0
 8009b7a:	6078      	str	r0, [r7, #4]
 8009b7c:	460b      	mov	r3, r1
 8009b7e:	807b      	strh	r3, [r7, #2]
 8009b80:	4613      	mov	r3, r2
 8009b82:	803b      	strh	r3, [r7, #0]
    {
        setX(x);
 8009b84:	687a      	ldr	r2, [r7, #4]
 8009b86:	687b      	ldr	r3, [r7, #4]
 8009b88:	681b      	ldr	r3, [r3, #0]
 8009b8a:	3330      	adds	r3, #48	@ 0x30
 8009b8c:	681b      	ldr	r3, [r3, #0]
 8009b8e:	f9b7 1002 	ldrsh.w	r1, [r7, #2]
 8009b92:	4610      	mov	r0, r2
 8009b94:	4798      	blx	r3
        setBaselineY(baselineY);
 8009b96:	687b      	ldr	r3, [r7, #4]
 8009b98:	681b      	ldr	r3, [r3, #0]
 8009b9a:	3364      	adds	r3, #100	@ 0x64
 8009b9c:	681b      	ldr	r3, [r3, #0]
 8009b9e:	f9b7 2000 	ldrsh.w	r2, [r7]
 8009ba2:	4611      	mov	r1, r2
 8009ba4:	6878      	ldr	r0, [r7, #4]
 8009ba6:	4798      	blx	r3
    }
 8009ba8:	bf00      	nop
 8009baa:	3708      	adds	r7, #8
 8009bac:	46bd      	mov	sp, r7
 8009bae:	bd80      	pop	{r7, pc}

08009bb0 <_ZNK8touchgfx8TextArea12getTypedTextEv>:
    /**
     * Gets the TypedText of the text area.
     *
     * @return The currently used TypedText.
     */
    const TypedText& getTypedText() const
 8009bb0:	b480      	push	{r7}
 8009bb2:	b083      	sub	sp, #12
 8009bb4:	af00      	add	r7, sp, #0
 8009bb6:	6078      	str	r0, [r7, #4]
    {
        return typedText;
 8009bb8:	687b      	ldr	r3, [r7, #4]
 8009bba:	3328      	adds	r3, #40	@ 0x28
    }
 8009bbc:	4618      	mov	r0, r3
 8009bbe:	370c      	adds	r7, #12
 8009bc0:	46bd      	mov	sp, r7
 8009bc2:	f85d 7b04 	ldr.w	r7, [sp], #4
 8009bc6:	4770      	bx	lr

08009bc8 <_ZNK8touchgfx8TextArea12getWildcard2Ev>:
     *
     * @return A pointer to the second wildcard, if this text area has two wildcards, otherwise 0.
     *
     * @see TextAreaWithOneWildcard, TextAreaWithTwoWildcards
     */
    virtual const Unicode::UnicodeChar* getWildcard2() const
 8009bc8:	b480      	push	{r7}
 8009bca:	b083      	sub	sp, #12
 8009bcc:	af00      	add	r7, sp, #0
 8009bce:	6078      	str	r0, [r7, #4]
    {
        return 0;
 8009bd0:	2300      	movs	r3, #0
    }
 8009bd2:	4618      	mov	r0, r3
 8009bd4:	370c      	adds	r7, #12
 8009bd6:	46bd      	mov	sp, r7
 8009bd8:	f85d 7b04 	ldr.w	r7, [sp], #4
 8009bdc:	4770      	bx	lr

08009bde <_ZN8touchgfx8TextArea12BoundingAreaC1Ev>:
        }

        /**
         * Initializes a new instance of the BoundingArea class which is invalid by default.
         */
        BoundingArea()
 8009bde:	b580      	push	{r7, lr}
 8009be0:	b084      	sub	sp, #16
 8009be2:	af02      	add	r7, sp, #8
 8009be4:	6078      	str	r0, [r7, #4]
            : rect(Rect(0, 0, -1, -1)), // Negative width and height means invalid rectangle
 8009be6:	6878      	ldr	r0, [r7, #4]
 8009be8:	f04f 33ff 	mov.w	r3, #4294967295
 8009bec:	9300      	str	r3, [sp, #0]
 8009bee:	f04f 33ff 	mov.w	r3, #4294967295
 8009bf2:	2200      	movs	r2, #0
 8009bf4:	2100      	movs	r1, #0
 8009bf6:	f7ff fb2d 	bl	8009254 <_ZN8touchgfx4RectC1Essss>
              text(0)
 8009bfa:	687b      	ldr	r3, [r7, #4]
 8009bfc:	2200      	movs	r2, #0
 8009bfe:	609a      	str	r2, [r3, #8]
        {
        }
 8009c00:	687b      	ldr	r3, [r7, #4]
 8009c02:	4618      	mov	r0, r3
 8009c04:	3708      	adds	r7, #8
 8009c06:	46bd      	mov	sp, r7
 8009c08:	bd80      	pop	{r7, pc}
	...

08009c0c <_ZN8touchgfx8TextAreaD1Ev>:
class TextArea : public Widget
 8009c0c:	b580      	push	{r7, lr}
 8009c0e:	b082      	sub	sp, #8
 8009c10:	af00      	add	r7, sp, #0
 8009c12:	6078      	str	r0, [r7, #4]
 8009c14:	4a08      	ldr	r2, [pc, #32]	@ (8009c38 <_ZN8touchgfx8TextAreaD1Ev+0x2c>)
 8009c16:	687b      	ldr	r3, [r7, #4]
 8009c18:	601a      	str	r2, [r3, #0]
 8009c1a:	687b      	ldr	r3, [r7, #4]
 8009c1c:	3328      	adds	r3, #40	@ 0x28
 8009c1e:	4618      	mov	r0, r3
 8009c20:	f7fe fc10 	bl	8008444 <_ZN8touchgfx9TypedTextD1Ev>
 8009c24:	687b      	ldr	r3, [r7, #4]
 8009c26:	4618      	mov	r0, r3
 8009c28:	f7ff fd94 	bl	8009754 <_ZN8touchgfx6WidgetD1Ev>
 8009c2c:	687b      	ldr	r3, [r7, #4]
 8009c2e:	4618      	mov	r0, r3
 8009c30:	3708      	adds	r7, #8
 8009c32:	46bd      	mov	sp, r7
 8009c34:	bd80      	pop	{r7, pc}
 8009c36:	bf00      	nop
 8009c38:	08025110 	.word	0x08025110

08009c3c <_ZN8touchgfx8TextAreaD0Ev>:
 8009c3c:	b580      	push	{r7, lr}
 8009c3e:	b082      	sub	sp, #8
 8009c40:	af00      	add	r7, sp, #0
 8009c42:	6078      	str	r0, [r7, #4]
 8009c44:	6878      	ldr	r0, [r7, #4]
 8009c46:	f7ff ffe1 	bl	8009c0c <_ZN8touchgfx8TextAreaD1Ev>
 8009c4a:	2148      	movs	r1, #72	@ 0x48
 8009c4c:	6878      	ldr	r0, [r7, #4]
 8009c4e:	f018 fb72 	bl	8022336 <_ZdlPvj>
 8009c52:	687b      	ldr	r3, [r7, #4]
 8009c54:	4618      	mov	r0, r3
 8009c56:	3708      	adds	r7, #8
 8009c58:	46bd      	mov	sp, r7
 8009c5a:	bd80      	pop	{r7, pc}

08009c5c <_ZN8touchgfx24TextAreaWithWildcardBaseC1Ev>:
 *
 */
class TextAreaWithWildcardBase : public TextArea
{
public:
    TextAreaWithWildcardBase()
 8009c5c:	b580      	push	{r7, lr}
 8009c5e:	b082      	sub	sp, #8
 8009c60:	af00      	add	r7, sp, #0
 8009c62:	6078      	str	r0, [r7, #4]
        : TextArea()
 8009c64:	687b      	ldr	r3, [r7, #4]
 8009c66:	4618      	mov	r0, r3
 8009c68:	f7ff fe92 	bl	8009990 <_ZN8touchgfx8TextAreaC1Ev>
 8009c6c:	4a03      	ldr	r2, [pc, #12]	@ (8009c7c <_ZN8touchgfx24TextAreaWithWildcardBaseC1Ev+0x20>)
 8009c6e:	687b      	ldr	r3, [r7, #4]
 8009c70:	601a      	str	r2, [r3, #0]
    {
    }
 8009c72:	687b      	ldr	r3, [r7, #4]
 8009c74:	4618      	mov	r0, r3
 8009c76:	3708      	adds	r7, #8
 8009c78:	46bd      	mov	sp, r7
 8009c7a:	bd80      	pop	{r7, pc}
 8009c7c:	0802527c 	.word	0x0802527c

08009c80 <_ZNK8touchgfx24TextAreaWithWildcardBase17invalidateContentEv>:

    virtual void draw(const Rect& area) const;

    virtual void invalidateContent() const
 8009c80:	b580      	push	{r7, lr}
 8009c82:	b082      	sub	sp, #8
 8009c84:	af00      	add	r7, sp, #0
 8009c86:	6078      	str	r0, [r7, #4]
    {
        Widget::invalidateContent();
 8009c88:	687b      	ldr	r3, [r7, #4]
 8009c8a:	4618      	mov	r0, r3
 8009c8c:	f7ff fb62 	bl	8009354 <_ZNK8touchgfx8Drawable17invalidateContentEv>
    }
 8009c90:	bf00      	nop
 8009c92:	3708      	adds	r7, #8
 8009c94:	46bd      	mov	sp, r7
 8009c96:	bd80      	pop	{r7, pc}

08009c98 <_ZNK8touchgfx24TextAreaWithWildcardBase21calculateBoundingAreaEv>:

protected:
    virtual TextArea::BoundingArea calculateBoundingArea() const
 8009c98:	b580      	push	{r7, lr}
 8009c9a:	b082      	sub	sp, #8
 8009c9c:	af00      	add	r7, sp, #0
 8009c9e:	6078      	str	r0, [r7, #4]
 8009ca0:	6039      	str	r1, [r7, #0]
    {
        return TextArea::BoundingArea();
 8009ca2:	6878      	ldr	r0, [r7, #4]
 8009ca4:	f7ff ff9b 	bl	8009bde <_ZN8touchgfx8TextArea12BoundingAreaC1Ev>
    }
 8009ca8:	6878      	ldr	r0, [r7, #4]
 8009caa:	3708      	adds	r7, #8
 8009cac:	46bd      	mov	sp, r7
 8009cae:	bd80      	pop	{r7, pc}

08009cb0 <_ZN8touchgfx24TextAreaWithWildcardBaseD1Ev>:
class TextAreaWithWildcardBase : public TextArea
 8009cb0:	b580      	push	{r7, lr}
 8009cb2:	b082      	sub	sp, #8
 8009cb4:	af00      	add	r7, sp, #0
 8009cb6:	6078      	str	r0, [r7, #4]
 8009cb8:	4a05      	ldr	r2, [pc, #20]	@ (8009cd0 <_ZN8touchgfx24TextAreaWithWildcardBaseD1Ev+0x20>)
 8009cba:	687b      	ldr	r3, [r7, #4]
 8009cbc:	601a      	str	r2, [r3, #0]
 8009cbe:	687b      	ldr	r3, [r7, #4]
 8009cc0:	4618      	mov	r0, r3
 8009cc2:	f7ff ffa3 	bl	8009c0c <_ZN8touchgfx8TextAreaD1Ev>
 8009cc6:	687b      	ldr	r3, [r7, #4]
 8009cc8:	4618      	mov	r0, r3
 8009cca:	3708      	adds	r7, #8
 8009ccc:	46bd      	mov	sp, r7
 8009cce:	bd80      	pop	{r7, pc}
 8009cd0:	0802527c 	.word	0x0802527c

08009cd4 <_ZN8touchgfx24TextAreaWithWildcardBaseD0Ev>:
 8009cd4:	b580      	push	{r7, lr}
 8009cd6:	b082      	sub	sp, #8
 8009cd8:	af00      	add	r7, sp, #0
 8009cda:	6078      	str	r0, [r7, #4]
 8009cdc:	6878      	ldr	r0, [r7, #4]
 8009cde:	f7ff ffe7 	bl	8009cb0 <_ZN8touchgfx24TextAreaWithWildcardBaseD1Ev>
 8009ce2:	2148      	movs	r1, #72	@ 0x48
 8009ce4:	6878      	ldr	r0, [r7, #4]
 8009ce6:	f018 fb26 	bl	8022336 <_ZdlPvj>
 8009cea:	687b      	ldr	r3, [r7, #4]
 8009cec:	4618      	mov	r0, r3
 8009cee:	3708      	adds	r7, #8
 8009cf0:	46bd      	mov	sp, r7
 8009cf2:	bd80      	pop	{r7, pc}

08009cf4 <_ZN8touchgfx23TextAreaWithOneWildcardC1Ev>:
 *       replaced by a wildcard text.
 */
class TextAreaWithOneWildcard : public TextAreaWithWildcardBase
{
public:
    TextAreaWithOneWildcard()
 8009cf4:	b580      	push	{r7, lr}
 8009cf6:	b082      	sub	sp, #8
 8009cf8:	af00      	add	r7, sp, #0
 8009cfa:	6078      	str	r0, [r7, #4]
        : TextAreaWithWildcardBase(), wc1(0)
 8009cfc:	687b      	ldr	r3, [r7, #4]
 8009cfe:	4618      	mov	r0, r3
 8009d00:	f7ff ffac 	bl	8009c5c <_ZN8touchgfx24TextAreaWithWildcardBaseC1Ev>
 8009d04:	4a05      	ldr	r2, [pc, #20]	@ (8009d1c <_ZN8touchgfx23TextAreaWithOneWildcardC1Ev+0x28>)
 8009d06:	687b      	ldr	r3, [r7, #4]
 8009d08:	601a      	str	r2, [r3, #0]
 8009d0a:	687b      	ldr	r3, [r7, #4]
 8009d0c:	2200      	movs	r2, #0
 8009d0e:	649a      	str	r2, [r3, #72]	@ 0x48
    {
    }
 8009d10:	687b      	ldr	r3, [r7, #4]
 8009d12:	4618      	mov	r0, r3
 8009d14:	3708      	adds	r7, #8
 8009d16:	46bd      	mov	sp, r7
 8009d18:	bd80      	pop	{r7, pc}
 8009d1a:	bf00      	nop
 8009d1c:	080247cc 	.word	0x080247cc

08009d20 <_ZN8touchgfx23TextAreaWithOneWildcard12setWildcard1EPKt>:
     * @param  value A pointer to the UnicodeChar to set the wildcard to.
     *
     * @note The pointer passed is saved, and must be accessible whenever TextAreaWithOneWildcard
     *       may need it.
     */
    void setWildcard1(const Unicode::UnicodeChar* value)
 8009d20:	b480      	push	{r7}
 8009d22:	b083      	sub	sp, #12
 8009d24:	af00      	add	r7, sp, #0
 8009d26:	6078      	str	r0, [r7, #4]
 8009d28:	6039      	str	r1, [r7, #0]
    {
        wc1 = value;
 8009d2a:	687b      	ldr	r3, [r7, #4]
 8009d2c:	683a      	ldr	r2, [r7, #0]
 8009d2e:	649a      	str	r2, [r3, #72]	@ 0x48
    }
 8009d30:	bf00      	nop
 8009d32:	370c      	adds	r7, #12
 8009d34:	46bd      	mov	sp, r7
 8009d36:	f85d 7b04 	ldr.w	r7, [sp], #4
 8009d3a:	4770      	bx	lr

08009d3c <_ZNK8touchgfx23TextAreaWithOneWildcard12getWildcard1Ev>:

    virtual const Unicode::UnicodeChar* getWildcard1() const
 8009d3c:	b480      	push	{r7}
 8009d3e:	b083      	sub	sp, #12
 8009d40:	af00      	add	r7, sp, #0
 8009d42:	6078      	str	r0, [r7, #4]
    {
        return wc1;
 8009d44:	687b      	ldr	r3, [r7, #4]
 8009d46:	6c9b      	ldr	r3, [r3, #72]	@ 0x48
    }
 8009d48:	4618      	mov	r0, r3
 8009d4a:	370c      	adds	r7, #12
 8009d4c:	46bd      	mov	sp, r7
 8009d4e:	f85d 7b04 	ldr.w	r7, [sp], #4
 8009d52:	4770      	bx	lr

08009d54 <_ZN8touchgfx23TextAreaWithOneWildcard11setWildcardEPKt>:
     * @param  value A pointer to the UnicodeChar to set the wildcard to.
     *
     * @note The pointer passed is saved, and must be accessible whenever TextAreaWithOneWildcard
     *       may need it.
     */
    void setWildcard(const Unicode::UnicodeChar* value)
 8009d54:	b580      	push	{r7, lr}
 8009d56:	b082      	sub	sp, #8
 8009d58:	af00      	add	r7, sp, #0
 8009d5a:	6078      	str	r0, [r7, #4]
 8009d5c:	6039      	str	r1, [r7, #0]
    {
        setWildcard1(value);
 8009d5e:	6839      	ldr	r1, [r7, #0]
 8009d60:	6878      	ldr	r0, [r7, #4]
 8009d62:	f7ff ffdd 	bl	8009d20 <_ZN8touchgfx23TextAreaWithOneWildcard12setWildcard1EPKt>
    }
 8009d66:	bf00      	nop
 8009d68:	3708      	adds	r7, #8
 8009d6a:	46bd      	mov	sp, r7
 8009d6c:	bd80      	pop	{r7, pc}

08009d6e <_ZN12MainViewBase12ToggleLightsEv>:
    virtual void setupScreen();

    /*
     * Virtual Action Handlers
     */
    virtual void ToggleLights()
 8009d6e:	b480      	push	{r7}
 8009d70:	b083      	sub	sp, #12
 8009d72:	af00      	add	r7, sp, #0
 8009d74:	6078      	str	r0, [r7, #4]
    {
        // Override and implement this function in Main
    }
 8009d76:	bf00      	nop
 8009d78:	370c      	adds	r7, #12
 8009d7a:	46bd      	mov	sp, r7
 8009d7c:	f85d 7b04 	ldr.w	r7, [sp], #4
 8009d80:	4770      	bx	lr
	...

08009d84 <_ZN8touchgfx4ViewI13MainPresenterED1Ev>:
class View : public Screen
 8009d84:	b580      	push	{r7, lr}
 8009d86:	b082      	sub	sp, #8
 8009d88:	af00      	add	r7, sp, #0
 8009d8a:	6078      	str	r0, [r7, #4]
 8009d8c:	4a05      	ldr	r2, [pc, #20]	@ (8009da4 <_ZN8touchgfx4ViewI13MainPresenterED1Ev+0x20>)
 8009d8e:	687b      	ldr	r3, [r7, #4]
 8009d90:	601a      	str	r2, [r3, #0]
 8009d92:	687b      	ldr	r3, [r7, #4]
 8009d94:	4618      	mov	r0, r3
 8009d96:	f7ff fc63 	bl	8009660 <_ZN8touchgfx6ScreenD1Ev>
 8009d9a:	687b      	ldr	r3, [r7, #4]
 8009d9c:	4618      	mov	r0, r3
 8009d9e:	3708      	adds	r7, #8
 8009da0:	46bd      	mov	sp, r7
 8009da2:	bd80      	pop	{r7, pc}
 8009da4:	08024798 	.word	0x08024798

08009da8 <_ZN8touchgfx4ViewI13MainPresenterED0Ev>:
 8009da8:	b580      	push	{r7, lr}
 8009daa:	b082      	sub	sp, #8
 8009dac:	af00      	add	r7, sp, #0
 8009dae:	6078      	str	r0, [r7, #4]
 8009db0:	6878      	ldr	r0, [r7, #4]
 8009db2:	f7ff ffe7 	bl	8009d84 <_ZN8touchgfx4ViewI13MainPresenterED1Ev>
 8009db6:	2140      	movs	r1, #64	@ 0x40
 8009db8:	6878      	ldr	r0, [r7, #4]
 8009dba:	f018 fabc 	bl	8022336 <_ZdlPvj>
 8009dbe:	687b      	ldr	r3, [r7, #4]
 8009dc0:	4618      	mov	r0, r3
 8009dc2:	3708      	adds	r7, #8
 8009dc4:	46bd      	mov	sp, r7
 8009dc6:	bd80      	pop	{r7, pc}

08009dc8 <_ZN8touchgfx6ButtonD1Ev>:
class Button : public AbstractButton
 8009dc8:	b580      	push	{r7, lr}
 8009dca:	b082      	sub	sp, #8
 8009dcc:	af00      	add	r7, sp, #0
 8009dce:	6078      	str	r0, [r7, #4]
 8009dd0:	4a05      	ldr	r2, [pc, #20]	@ (8009de8 <_ZN8touchgfx6ButtonD1Ev+0x20>)
 8009dd2:	687b      	ldr	r3, [r7, #4]
 8009dd4:	601a      	str	r2, [r3, #0]
 8009dd6:	687b      	ldr	r3, [r7, #4]
 8009dd8:	4618      	mov	r0, r3
 8009dda:	f7ff fd69 	bl	80098b0 <_ZN8touchgfx14AbstractButtonD1Ev>
 8009dde:	687b      	ldr	r3, [r7, #4]
 8009de0:	4618      	mov	r0, r3
 8009de2:	3708      	adds	r7, #8
 8009de4:	46bd      	mov	sp, r7
 8009de6:	bd80      	pop	{r7, pc}
 8009de8:	08025208 	.word	0x08025208

08009dec <_ZN8touchgfx6ButtonD0Ev>:
 8009dec:	b580      	push	{r7, lr}
 8009dee:	b082      	sub	sp, #8
 8009df0:	af00      	add	r7, sp, #0
 8009df2:	6078      	str	r0, [r7, #4]
 8009df4:	6878      	ldr	r0, [r7, #4]
 8009df6:	f7ff ffe7 	bl	8009dc8 <_ZN8touchgfx6ButtonD1Ev>
 8009dfa:	2134      	movs	r1, #52	@ 0x34
 8009dfc:	6878      	ldr	r0, [r7, #4]
 8009dfe:	f018 fa9a 	bl	8022336 <_ZdlPvj>
 8009e02:	687b      	ldr	r3, [r7, #4]
 8009e04:	4618      	mov	r0, r3
 8009e06:	3708      	adds	r7, #8
 8009e08:	46bd      	mov	sp, r7
 8009e0a:	bd80      	pop	{r7, pc}

08009e0c <_ZN8touchgfx12ToggleButtonC1Ev>:
class ToggleButton : public Button
 8009e0c:	b580      	push	{r7, lr}
 8009e0e:	b082      	sub	sp, #8
 8009e10:	af00      	add	r7, sp, #0
 8009e12:	6078      	str	r0, [r7, #4]
 8009e14:	687b      	ldr	r3, [r7, #4]
 8009e16:	4618      	mov	r0, r3
 8009e18:	f7ff fd6c 	bl	80098f4 <_ZN8touchgfx6ButtonC1Ev>
 8009e1c:	4a07      	ldr	r2, [pc, #28]	@ (8009e3c <_ZN8touchgfx12ToggleButtonC1Ev+0x30>)
 8009e1e:	687b      	ldr	r3, [r7, #4]
 8009e20:	601a      	str	r2, [r3, #0]
 8009e22:	687b      	ldr	r3, [r7, #4]
 8009e24:	3334      	adds	r3, #52	@ 0x34
 8009e26:	f64f 71ff 	movw	r1, #65535	@ 0xffff
 8009e2a:	4618      	mov	r0, r3
 8009e2c:	f7ff fa32 	bl	8009294 <_ZN8touchgfx6BitmapC1Et>
 8009e30:	687b      	ldr	r3, [r7, #4]
 8009e32:	4618      	mov	r0, r3
 8009e34:	3708      	adds	r7, #8
 8009e36:	46bd      	mov	sp, r7
 8009e38:	bd80      	pop	{r7, pc}
 8009e3a:	bf00      	nop
 8009e3c:	0802509c 	.word	0x0802509c

08009e40 <_ZN12MainViewBaseC1Ev>:
#include <gui_generated/main_screen/MainViewBase.hpp>
#include <touchgfx/Color.hpp>
#include <images/BitmapDatabase.hpp>
#include <texts/TextKeysAndLanguages.hpp>

MainViewBase::MainViewBase() :
 8009e40:	b590      	push	{r4, r7, lr}
 8009e42:	b0a9      	sub	sp, #164	@ 0xa4
 8009e44:	af02      	add	r7, sp, #8
 8009e46:	6178      	str	r0, [r7, #20]
    buttonCallback(this, &MainViewBase::buttonCallbackHandler)
 8009e48:	697b      	ldr	r3, [r7, #20]
 8009e4a:	4618      	mov	r0, r3
 8009e4c:	f000 faa0 	bl	800a390 <_ZN8touchgfx4ViewI13MainPresenterEC1Ev>
 8009e50:	4ad6      	ldr	r2, [pc, #856]	@ (800a1ac <_ZN12MainViewBaseC1Ev+0x36c>)
 8009e52:	697b      	ldr	r3, [r7, #20]
 8009e54:	601a      	str	r2, [r3, #0]
 8009e56:	697b      	ldr	r3, [r7, #20]
 8009e58:	3340      	adds	r3, #64	@ 0x40
 8009e5a:	4618      	mov	r0, r3
 8009e5c:	f7ff fc9c 	bl	8009798 <_ZN8touchgfx3BoxC1Ev>
 8009e60:	697b      	ldr	r3, [r7, #20]
 8009e62:	f103 046c 	add.w	r4, r3, #108	@ 0x6c
 8009e66:	f107 0324 	add.w	r3, r7, #36	@ 0x24
 8009e6a:	f64f 71ff 	movw	r1, #65535	@ 0xffff
 8009e6e:	4618      	mov	r0, r3
 8009e70:	f7ff fa10 	bl	8009294 <_ZN8touchgfx6BitmapC1Et>
 8009e74:	f107 0324 	add.w	r3, r7, #36	@ 0x24
 8009e78:	4619      	mov	r1, r3
 8009e7a:	4620      	mov	r0, r4
 8009e7c:	f7ff fcbe 	bl	80097fc <_ZN8touchgfx5ImageC1ERKNS_6BitmapE>
 8009e80:	697b      	ldr	r3, [r7, #20]
 8009e82:	3398      	adds	r3, #152	@ 0x98
 8009e84:	4618      	mov	r0, r3
 8009e86:	f7ff ffc1 	bl	8009e0c <_ZN8touchgfx12ToggleButtonC1Ev>
 8009e8a:	697b      	ldr	r3, [r7, #20]
 8009e8c:	33d0      	adds	r3, #208	@ 0xd0
 8009e8e:	4618      	mov	r0, r3
 8009e90:	f7ff ff30 	bl	8009cf4 <_ZN8touchgfx23TextAreaWithOneWildcardC1Ev>
 8009e94:	697b      	ldr	r3, [r7, #20]
 8009e96:	f503 738e 	add.w	r3, r3, #284	@ 0x11c
 8009e9a:	4618      	mov	r0, r3
 8009e9c:	f7ff ff2a 	bl	8009cf4 <_ZN8touchgfx23TextAreaWithOneWildcardC1Ev>
 8009ea0:	697b      	ldr	r3, [r7, #20]
 8009ea2:	f503 73b4 	add.w	r3, r3, #360	@ 0x168
 8009ea6:	4618      	mov	r0, r3
 8009ea8:	f7ff ff24 	bl	8009cf4 <_ZN8touchgfx23TextAreaWithOneWildcardC1Ev>
 8009eac:	697b      	ldr	r3, [r7, #20]
 8009eae:	f503 700b 	add.w	r0, r3, #556	@ 0x22c
 8009eb2:	4bbf      	ldr	r3, [pc, #764]	@ (800a1b0 <_ZN12MainViewBaseC1Ev+0x370>)
 8009eb4:	62bb      	str	r3, [r7, #40]	@ 0x28
 8009eb6:	2300      	movs	r3, #0
 8009eb8:	62fb      	str	r3, [r7, #44]	@ 0x2c
 8009eba:	f107 0328 	add.w	r3, r7, #40	@ 0x28
 8009ebe:	cb0c      	ldmia	r3, {r2, r3}
 8009ec0:	6979      	ldr	r1, [r7, #20]
 8009ec2:	f000 fa8b 	bl	800a3dc <_ZN8touchgfx8CallbackI12MainViewBaseRKNS_14AbstractButtonEvvEC1EPS1_MS1_FvS4_E>
{
    __background.setPosition(0, 0, 320, 480);
 8009ec6:	697b      	ldr	r3, [r7, #20]
 8009ec8:	f103 0040 	add.w	r0, r3, #64	@ 0x40
 8009ecc:	f44f 73f0 	mov.w	r3, #480	@ 0x1e0
 8009ed0:	9300      	str	r3, [sp, #0]
 8009ed2:	f44f 73a0 	mov.w	r3, #320	@ 0x140
 8009ed6:	2200      	movs	r2, #0
 8009ed8:	2100      	movs	r1, #0
 8009eda:	f7ff fa59 	bl	8009390 <_ZN8touchgfx8Drawable11setPositionEssss>
    __background.setColor(touchgfx::Color::getColorFromRGB(0, 0, 0));
 8009ede:	697b      	ldr	r3, [r7, #20]
 8009ee0:	f103 0440 	add.w	r4, r3, #64	@ 0x40
 8009ee4:	2300      	movs	r3, #0
 8009ee6:	f887 3068 	strb.w	r3, [r7, #104]	@ 0x68
 8009eea:	2300      	movs	r3, #0
 8009eec:	f887 3067 	strb.w	r3, [r7, #103]	@ 0x67
 8009ef0:	2300      	movs	r3, #0
 8009ef2:	f887 3066 	strb.w	r3, [r7, #102]	@ 0x66
     *
     * @return The color representation depending on LCD color format.
     */
    FORCE_INLINE_FUNCTION static colortype getColorFromRGB(uint8_t red, uint8_t green, uint8_t blue)
    {
        return 0xFF000000 | (red << 16) | (green << 8) | (blue);
 8009ef6:	f897 3068 	ldrb.w	r3, [r7, #104]	@ 0x68
 8009efa:	041a      	lsls	r2, r3, #16
 8009efc:	f897 3067 	ldrb.w	r3, [r7, #103]	@ 0x67
 8009f00:	021b      	lsls	r3, r3, #8
 8009f02:	431a      	orrs	r2, r3
 8009f04:	f897 3066 	ldrb.w	r3, [r7, #102]	@ 0x66
 8009f08:	4313      	orrs	r3, r2
 8009f0a:	f043 427f 	orr.w	r2, r3, #4278190080	@ 0xff000000
 8009f0e:	f107 0360 	add.w	r3, r7, #96	@ 0x60
 8009f12:	4611      	mov	r1, r2
 8009f14:	4618      	mov	r0, r3
 8009f16:	f7ff f977 	bl	8009208 <_ZN8touchgfx9colortypeC1Em>
 8009f1a:	6e3b      	ldr	r3, [r7, #96]	@ 0x60
 8009f1c:	4619      	mov	r1, r3
 8009f1e:	4620      	mov	r0, r4
 8009f20:	f7ff fc5e 	bl	80097e0 <_ZN8touchgfx3Box8setColorENS_9colortypeE>
    add(__background);
 8009f24:	697a      	ldr	r2, [r7, #20]
 8009f26:	697b      	ldr	r3, [r7, #20]
 8009f28:	3340      	adds	r3, #64	@ 0x40
 8009f2a:	4619      	mov	r1, r3
 8009f2c:	4610      	mov	r0, r2
 8009f2e:	f7ff fbef 	bl	8009710 <_ZN8touchgfx6Screen3addERNS_8DrawableE>

    image1.setXY(0, 0);
 8009f32:	697b      	ldr	r3, [r7, #20]
 8009f34:	336c      	adds	r3, #108	@ 0x6c
 8009f36:	2200      	movs	r2, #0
 8009f38:	2100      	movs	r1, #0
 8009f3a:	4618      	mov	r0, r3
 8009f3c:	f7ff fa67 	bl	800940e <_ZN8touchgfx8Drawable5setXYEss>
    image1.setBitmap(touchgfx::Bitmap(BITMAP_PIC_ID));
 8009f40:	697b      	ldr	r3, [r7, #20]
 8009f42:	f103 046c 	add.w	r4, r3, #108	@ 0x6c
 8009f46:	f107 0330 	add.w	r3, r7, #48	@ 0x30
 8009f4a:	2102      	movs	r1, #2
 8009f4c:	4618      	mov	r0, r3
 8009f4e:	f7ff f9a1 	bl	8009294 <_ZN8touchgfx6BitmapC1Et>
 8009f52:	f107 0330 	add.w	r3, r7, #48	@ 0x30
 8009f56:	4619      	mov	r1, r3
 8009f58:	4620      	mov	r0, r4
 8009f5a:	f004 ff41 	bl	800ede0 <_ZN8touchgfx5Image9setBitmapERKNS_6BitmapE>
    add(image1);
 8009f5e:	697a      	ldr	r2, [r7, #20]
 8009f60:	697b      	ldr	r3, [r7, #20]
 8009f62:	336c      	adds	r3, #108	@ 0x6c
 8009f64:	4619      	mov	r1, r3
 8009f66:	4610      	mov	r0, r2
 8009f68:	f7ff fbd2 	bl	8009710 <_ZN8touchgfx6Screen3addERNS_8DrawableE>

    toggleButton1.setXY(88, 383);
 8009f6c:	697b      	ldr	r3, [r7, #20]
 8009f6e:	3398      	adds	r3, #152	@ 0x98
 8009f70:	f240 127f 	movw	r2, #383	@ 0x17f
 8009f74:	2158      	movs	r1, #88	@ 0x58
 8009f76:	4618      	mov	r0, r3
 8009f78:	f7ff fa49 	bl	800940e <_ZN8touchgfx8Drawable5setXYEss>
    toggleButton1.setBitmaps(touchgfx::Bitmap(BITMAP_ALTERNATE_THEME_IMAGES_WIDGETS_TOGGLEBUTTON_LARGE_ROUNDED_ON_ACTION_ID), touchgfx::Bitmap(BITMAP_ALTERNATE_THEME_IMAGES_WIDGETS_TOGGLEBUTTON_LARGE_ROUNDED_OFF_NORMAL_ID));
 8009f7c:	697b      	ldr	r3, [r7, #20]
 8009f7e:	f103 0498 	add.w	r4, r3, #152	@ 0x98
 8009f82:	f107 0334 	add.w	r3, r7, #52	@ 0x34
 8009f86:	2101      	movs	r1, #1
 8009f88:	4618      	mov	r0, r3
 8009f8a:	f7ff f983 	bl	8009294 <_ZN8touchgfx6BitmapC1Et>
 8009f8e:	f107 0338 	add.w	r3, r7, #56	@ 0x38
 8009f92:	2100      	movs	r1, #0
 8009f94:	4618      	mov	r0, r3
 8009f96:	f7ff f97d 	bl	8009294 <_ZN8touchgfx6BitmapC1Et>
 8009f9a:	f107 0238 	add.w	r2, r7, #56	@ 0x38
 8009f9e:	f107 0334 	add.w	r3, r7, #52	@ 0x34
 8009fa2:	4619      	mov	r1, r3
 8009fa4:	4620      	mov	r0, r4
 8009fa6:	f7ff fcc9 	bl	800993c <_ZN8touchgfx12ToggleButton10setBitmapsERKNS_6BitmapES3_>
    toggleButton1.forceState(true);
 8009faa:	697b      	ldr	r3, [r7, #20]
 8009fac:	3398      	adds	r3, #152	@ 0x98
 8009fae:	2101      	movs	r1, #1
 8009fb0:	4618      	mov	r0, r3
 8009fb2:	f004 fa2d 	bl	800e410 <_ZN8touchgfx12ToggleButton10forceStateEb>
    toggleButton1.setAction(buttonCallback);
 8009fb6:	697b      	ldr	r3, [r7, #20]
 8009fb8:	f103 0298 	add.w	r2, r3, #152	@ 0x98
 8009fbc:	697b      	ldr	r3, [r7, #20]
 8009fbe:	f503 730b 	add.w	r3, r3, #556	@ 0x22c
 8009fc2:	4619      	mov	r1, r3
 8009fc4:	4610      	mov	r0, r2
 8009fc6:	f7ff fc65 	bl	8009894 <_ZN8touchgfx14AbstractButton9setActionERNS_15GenericCallbackIRKS0_vvEE>
    add(toggleButton1);
 8009fca:	697a      	ldr	r2, [r7, #20]
 8009fcc:	697b      	ldr	r3, [r7, #20]
 8009fce:	3398      	adds	r3, #152	@ 0x98
 8009fd0:	4619      	mov	r1, r3
 8009fd2:	4610      	mov	r0, r2
 8009fd4:	f7ff fb9c 	bl	8009710 <_ZN8touchgfx6Screen3addERNS_8DrawableE>

    HUMVAL.setPosition(9, 24, 303, 76);
 8009fd8:	697b      	ldr	r3, [r7, #20]
 8009fda:	f103 00d0 	add.w	r0, r3, #208	@ 0xd0
 8009fde:	234c      	movs	r3, #76	@ 0x4c
 8009fe0:	9300      	str	r3, [sp, #0]
 8009fe2:	f240 132f 	movw	r3, #303	@ 0x12f
 8009fe6:	2218      	movs	r2, #24
 8009fe8:	2109      	movs	r1, #9
 8009fea:	f7ff f9d1 	bl	8009390 <_ZN8touchgfx8Drawable11setPositionEssss>
    HUMVAL.setColor(touchgfx::Color::getColorFromRGB(255, 255, 255));
 8009fee:	697b      	ldr	r3, [r7, #20]
 8009ff0:	f103 04d0 	add.w	r4, r3, #208	@ 0xd0
 8009ff4:	23ff      	movs	r3, #255	@ 0xff
 8009ff6:	f887 306b 	strb.w	r3, [r7, #107]	@ 0x6b
 8009ffa:	23ff      	movs	r3, #255	@ 0xff
 8009ffc:	f887 306a 	strb.w	r3, [r7, #106]	@ 0x6a
 800a000:	23ff      	movs	r3, #255	@ 0xff
 800a002:	f887 3069 	strb.w	r3, [r7, #105]	@ 0x69
 800a006:	f897 306b 	ldrb.w	r3, [r7, #107]	@ 0x6b
 800a00a:	041a      	lsls	r2, r3, #16
 800a00c:	f897 306a 	ldrb.w	r3, [r7, #106]	@ 0x6a
 800a010:	021b      	lsls	r3, r3, #8
 800a012:	431a      	orrs	r2, r3
 800a014:	f897 3069 	ldrb.w	r3, [r7, #105]	@ 0x69
 800a018:	4313      	orrs	r3, r2
 800a01a:	f043 427f 	orr.w	r2, r3, #4278190080	@ 0xff000000
 800a01e:	f107 035c 	add.w	r3, r7, #92	@ 0x5c
 800a022:	4611      	mov	r1, r2
 800a024:	4618      	mov	r0, r3
 800a026:	f7ff f8ef 	bl	8009208 <_ZN8touchgfx9colortypeC1Em>
 800a02a:	6dfb      	ldr	r3, [r7, #92]	@ 0x5c
 800a02c:	66fc      	str	r4, [r7, #108]	@ 0x6c
 800a02e:	623b      	str	r3, [r7, #32]
        color = newColor;
 800a030:	6efb      	ldr	r3, [r7, #108]	@ 0x6c
 800a032:	6a3a      	ldr	r2, [r7, #32]
 800a034:	631a      	str	r2, [r3, #48]	@ 0x30
    }
 800a036:	bf00      	nop
    HUMVAL.setLinespacing(0);
 800a038:	697b      	ldr	r3, [r7, #20]
 800a03a:	33d0      	adds	r3, #208	@ 0xd0
 800a03c:	677b      	str	r3, [r7, #116]	@ 0x74
 800a03e:	2300      	movs	r3, #0
 800a040:	f8a7 3072 	strh.w	r3, [r7, #114]	@ 0x72
        linespace = space;
 800a044:	6f7b      	ldr	r3, [r7, #116]	@ 0x74
 800a046:	f8b7 2072 	ldrh.w	r2, [r7, #114]	@ 0x72
 800a04a:	869a      	strh	r2, [r3, #52]	@ 0x34
        boundingArea = calculateBoundingArea();
 800a04c:	6f7b      	ldr	r3, [r7, #116]	@ 0x74
 800a04e:	681b      	ldr	r3, [r3, #0]
 800a050:	3384      	adds	r3, #132	@ 0x84
 800a052:	681b      	ldr	r3, [r3, #0]
 800a054:	6f7c      	ldr	r4, [r7, #116]	@ 0x74
 800a056:	463a      	mov	r2, r7
 800a058:	6f79      	ldr	r1, [r7, #116]	@ 0x74
 800a05a:	4610      	mov	r0, r2
 800a05c:	4798      	blx	r3
 800a05e:	f104 033c 	add.w	r3, r4, #60	@ 0x3c
 800a062:	463a      	mov	r2, r7
 800a064:	ca07      	ldmia	r2, {r0, r1, r2}
 800a066:	e883 0007 	stmia.w	r3, {r0, r1, r2}
    }
 800a06a:	bf00      	nop
    HUMVALBuffer[0] = 0;
 800a06c:	697b      	ldr	r3, [r7, #20]
 800a06e:	2200      	movs	r2, #0
 800a070:	f8a3 21b4 	strh.w	r2, [r3, #436]	@ 0x1b4
    HUMVAL.setWildcard(HUMVALBuffer);
 800a074:	697b      	ldr	r3, [r7, #20]
 800a076:	f103 02d0 	add.w	r2, r3, #208	@ 0xd0
 800a07a:	697b      	ldr	r3, [r7, #20]
 800a07c:	f503 73da 	add.w	r3, r3, #436	@ 0x1b4
 800a080:	4619      	mov	r1, r3
 800a082:	4610      	mov	r0, r2
 800a084:	f7ff fe66 	bl	8009d54 <_ZN8touchgfx23TextAreaWithOneWildcard11setWildcardEPKt>
    HUMVAL.setTypedText(touchgfx::TypedText(T___SINGLEUSE_OPPC));
 800a088:	697b      	ldr	r3, [r7, #20]
 800a08a:	f103 04d0 	add.w	r4, r3, #208	@ 0xd0
 800a08e:	f107 033c 	add.w	r3, r7, #60	@ 0x3c
 800a092:	2103      	movs	r1, #3
 800a094:	4618      	mov	r0, r3
 800a096:	f7ff fc65 	bl	8009964 <_ZN8touchgfx9TypedTextC1Et>
 800a09a:	f107 033c 	add.w	r3, r7, #60	@ 0x3c
 800a09e:	4619      	mov	r1, r3
 800a0a0:	4620      	mov	r0, r4
 800a0a2:	f004 fd35 	bl	800eb10 <_ZN8touchgfx8TextArea12setTypedTextERKNS_9TypedTextE>
 800a0a6:	f107 033c 	add.w	r3, r7, #60	@ 0x3c
 800a0aa:	4618      	mov	r0, r3
 800a0ac:	f7fe f9ca 	bl	8008444 <_ZN8touchgfx9TypedTextD1Ev>
    add(HUMVAL);
 800a0b0:	697a      	ldr	r2, [r7, #20]
 800a0b2:	697b      	ldr	r3, [r7, #20]
 800a0b4:	33d0      	adds	r3, #208	@ 0xd0
 800a0b6:	4619      	mov	r1, r3
 800a0b8:	4610      	mov	r0, r2
 800a0ba:	f7ff fb29 	bl	8009710 <_ZN8touchgfx6Screen3addERNS_8DrawableE>

    TEMPVAL.setPosition(9, 79, 303, 43);
 800a0be:	697b      	ldr	r3, [r7, #20]
 800a0c0:	f503 708e 	add.w	r0, r3, #284	@ 0x11c
 800a0c4:	232b      	movs	r3, #43	@ 0x2b
 800a0c6:	9300      	str	r3, [sp, #0]
 800a0c8:	f240 132f 	movw	r3, #303	@ 0x12f
 800a0cc:	224f      	movs	r2, #79	@ 0x4f
 800a0ce:	2109      	movs	r1, #9
 800a0d0:	f7ff f95e 	bl	8009390 <_ZN8touchgfx8Drawable11setPositionEssss>
    TEMPVAL.setColor(touchgfx::Color::getColorFromRGB(255, 255, 255));
 800a0d4:	697b      	ldr	r3, [r7, #20]
 800a0d6:	f503 748e 	add.w	r4, r3, #284	@ 0x11c
 800a0da:	23ff      	movs	r3, #255	@ 0xff
 800a0dc:	f887 307b 	strb.w	r3, [r7, #123]	@ 0x7b
 800a0e0:	23ff      	movs	r3, #255	@ 0xff
 800a0e2:	f887 307a 	strb.w	r3, [r7, #122]	@ 0x7a
 800a0e6:	23ff      	movs	r3, #255	@ 0xff
 800a0e8:	f887 3079 	strb.w	r3, [r7, #121]	@ 0x79
 800a0ec:	f897 307b 	ldrb.w	r3, [r7, #123]	@ 0x7b
 800a0f0:	041a      	lsls	r2, r3, #16
 800a0f2:	f897 307a 	ldrb.w	r3, [r7, #122]	@ 0x7a
 800a0f6:	021b      	lsls	r3, r3, #8
 800a0f8:	431a      	orrs	r2, r3
 800a0fa:	f897 3079 	ldrb.w	r3, [r7, #121]	@ 0x79
 800a0fe:	4313      	orrs	r3, r2
 800a100:	f043 427f 	orr.w	r2, r3, #4278190080	@ 0xff000000
 800a104:	f107 0358 	add.w	r3, r7, #88	@ 0x58
 800a108:	4611      	mov	r1, r2
 800a10a:	4618      	mov	r0, r3
 800a10c:	f7ff f87c 	bl	8009208 <_ZN8touchgfx9colortypeC1Em>
 800a110:	6dbb      	ldr	r3, [r7, #88]	@ 0x58
 800a112:	67fc      	str	r4, [r7, #124]	@ 0x7c
 800a114:	61fb      	str	r3, [r7, #28]
        color = newColor;
 800a116:	6ffb      	ldr	r3, [r7, #124]	@ 0x7c
 800a118:	69fa      	ldr	r2, [r7, #28]
 800a11a:	631a      	str	r2, [r3, #48]	@ 0x30
    }
 800a11c:	bf00      	nop
    TEMPVAL.setLinespacing(0);
 800a11e:	697b      	ldr	r3, [r7, #20]
 800a120:	f503 738e 	add.w	r3, r3, #284	@ 0x11c
 800a124:	f8c7 3084 	str.w	r3, [r7, #132]	@ 0x84
 800a128:	2300      	movs	r3, #0
 800a12a:	f8a7 3082 	strh.w	r3, [r7, #130]	@ 0x82
        linespace = space;
 800a12e:	f8d7 3084 	ldr.w	r3, [r7, #132]	@ 0x84
 800a132:	f8b7 2082 	ldrh.w	r2, [r7, #130]	@ 0x82
 800a136:	869a      	strh	r2, [r3, #52]	@ 0x34
        boundingArea = calculateBoundingArea();
 800a138:	f8d7 3084 	ldr.w	r3, [r7, #132]	@ 0x84
 800a13c:	681b      	ldr	r3, [r3, #0]
 800a13e:	3384      	adds	r3, #132	@ 0x84
 800a140:	681b      	ldr	r3, [r3, #0]
 800a142:	f8d7 4084 	ldr.w	r4, [r7, #132]	@ 0x84
 800a146:	463a      	mov	r2, r7
 800a148:	f8d7 1084 	ldr.w	r1, [r7, #132]	@ 0x84
 800a14c:	4610      	mov	r0, r2
 800a14e:	4798      	blx	r3
 800a150:	f104 033c 	add.w	r3, r4, #60	@ 0x3c
 800a154:	463a      	mov	r2, r7
 800a156:	ca07      	ldmia	r2, {r0, r1, r2}
 800a158:	e883 0007 	stmia.w	r3, {r0, r1, r2}
    }
 800a15c:	bf00      	nop
    TEMPVALBuffer[0] = 0;
 800a15e:	697b      	ldr	r3, [r7, #20]
 800a160:	2200      	movs	r2, #0
 800a162:	f8a3 21dc 	strh.w	r2, [r3, #476]	@ 0x1dc
    TEMPVAL.setWildcard(TEMPVALBuffer);
 800a166:	697b      	ldr	r3, [r7, #20]
 800a168:	f503 728e 	add.w	r2, r3, #284	@ 0x11c
 800a16c:	697b      	ldr	r3, [r7, #20]
 800a16e:	f503 73ee 	add.w	r3, r3, #476	@ 0x1dc
 800a172:	4619      	mov	r1, r3
 800a174:	4610      	mov	r0, r2
 800a176:	f7ff fded 	bl	8009d54 <_ZN8touchgfx23TextAreaWithOneWildcard11setWildcardEPKt>
    TEMPVAL.setTypedText(touchgfx::TypedText(T___SINGLEUSE_0MT1));
 800a17a:	697b      	ldr	r3, [r7, #20]
 800a17c:	f503 748e 	add.w	r4, r3, #284	@ 0x11c
 800a180:	f107 0344 	add.w	r3, r7, #68	@ 0x44
 800a184:	2102      	movs	r1, #2
 800a186:	4618      	mov	r0, r3
 800a188:	f7ff fbec 	bl	8009964 <_ZN8touchgfx9TypedTextC1Et>
 800a18c:	f107 0344 	add.w	r3, r7, #68	@ 0x44
 800a190:	4619      	mov	r1, r3
 800a192:	4620      	mov	r0, r4
 800a194:	f004 fcbc 	bl	800eb10 <_ZN8touchgfx8TextArea12setTypedTextERKNS_9TypedTextE>
 800a198:	f107 0344 	add.w	r3, r7, #68	@ 0x44
 800a19c:	4618      	mov	r0, r3
 800a19e:	f7fe f951 	bl	8008444 <_ZN8touchgfx9TypedTextD1Ev>
    add(TEMPVAL);
 800a1a2:	697a      	ldr	r2, [r7, #20]
 800a1a4:	697b      	ldr	r3, [r7, #20]
 800a1a6:	f503 738e 	add.w	r3, r3, #284	@ 0x11c
 800a1aa:	e003      	b.n	800a1b4 <_ZN12MainViewBaseC1Ev+0x374>
 800a1ac:	08024748 	.word	0x08024748
 800a1b0:	0800a367 	.word	0x0800a367
 800a1b4:	4619      	mov	r1, r3
 800a1b6:	4610      	mov	r0, r2
 800a1b8:	f7ff faaa 	bl	8009710 <_ZN8touchgfx6Screen3addERNS_8DrawableE>

    ADCVAL.setPosition(9, 147, 303, 43);
 800a1bc:	697b      	ldr	r3, [r7, #20]
 800a1be:	f503 70b4 	add.w	r0, r3, #360	@ 0x168
 800a1c2:	232b      	movs	r3, #43	@ 0x2b
 800a1c4:	9300      	str	r3, [sp, #0]
 800a1c6:	f240 132f 	movw	r3, #303	@ 0x12f
 800a1ca:	2293      	movs	r2, #147	@ 0x93
 800a1cc:	2109      	movs	r1, #9
 800a1ce:	f7ff f8df 	bl	8009390 <_ZN8touchgfx8Drawable11setPositionEssss>
    ADCVAL.setColor(touchgfx::Color::getColorFromRGB(255, 255, 255));
 800a1d2:	697b      	ldr	r3, [r7, #20]
 800a1d4:	f503 74b4 	add.w	r4, r3, #360	@ 0x168
 800a1d8:	23ff      	movs	r3, #255	@ 0xff
 800a1da:	f887 308b 	strb.w	r3, [r7, #139]	@ 0x8b
 800a1de:	23ff      	movs	r3, #255	@ 0xff
 800a1e0:	f887 308a 	strb.w	r3, [r7, #138]	@ 0x8a
 800a1e4:	23ff      	movs	r3, #255	@ 0xff
 800a1e6:	f887 3089 	strb.w	r3, [r7, #137]	@ 0x89
 800a1ea:	f897 308b 	ldrb.w	r3, [r7, #139]	@ 0x8b
 800a1ee:	041a      	lsls	r2, r3, #16
 800a1f0:	f897 308a 	ldrb.w	r3, [r7, #138]	@ 0x8a
 800a1f4:	021b      	lsls	r3, r3, #8
 800a1f6:	431a      	orrs	r2, r3
 800a1f8:	f897 3089 	ldrb.w	r3, [r7, #137]	@ 0x89
 800a1fc:	4313      	orrs	r3, r2
 800a1fe:	f043 427f 	orr.w	r2, r3, #4278190080	@ 0xff000000
 800a202:	f107 0354 	add.w	r3, r7, #84	@ 0x54
 800a206:	4611      	mov	r1, r2
 800a208:	4618      	mov	r0, r3
 800a20a:	f7fe fffd 	bl	8009208 <_ZN8touchgfx9colortypeC1Em>
 800a20e:	6d7b      	ldr	r3, [r7, #84]	@ 0x54
 800a210:	f8c7 408c 	str.w	r4, [r7, #140]	@ 0x8c
 800a214:	61bb      	str	r3, [r7, #24]
        color = newColor;
 800a216:	f8d7 308c 	ldr.w	r3, [r7, #140]	@ 0x8c
 800a21a:	69ba      	ldr	r2, [r7, #24]
 800a21c:	631a      	str	r2, [r3, #48]	@ 0x30
    }
 800a21e:	bf00      	nop
    ADCVAL.setLinespacing(0);
 800a220:	697b      	ldr	r3, [r7, #20]
 800a222:	f503 73b4 	add.w	r3, r3, #360	@ 0x168
 800a226:	f8c7 3094 	str.w	r3, [r7, #148]	@ 0x94
 800a22a:	2300      	movs	r3, #0
 800a22c:	f8a7 3092 	strh.w	r3, [r7, #146]	@ 0x92
        linespace = space;
 800a230:	f8d7 3094 	ldr.w	r3, [r7, #148]	@ 0x94
 800a234:	f8b7 2092 	ldrh.w	r2, [r7, #146]	@ 0x92
 800a238:	869a      	strh	r2, [r3, #52]	@ 0x34
        boundingArea = calculateBoundingArea();
 800a23a:	f8d7 3094 	ldr.w	r3, [r7, #148]	@ 0x94
 800a23e:	681b      	ldr	r3, [r3, #0]
 800a240:	3384      	adds	r3, #132	@ 0x84
 800a242:	681b      	ldr	r3, [r3, #0]
 800a244:	f8d7 4094 	ldr.w	r4, [r7, #148]	@ 0x94
 800a248:	463a      	mov	r2, r7
 800a24a:	f8d7 1094 	ldr.w	r1, [r7, #148]	@ 0x94
 800a24e:	4610      	mov	r0, r2
 800a250:	4798      	blx	r3
 800a252:	f104 033c 	add.w	r3, r4, #60	@ 0x3c
 800a256:	463a      	mov	r2, r7
 800a258:	ca07      	ldmia	r2, {r0, r1, r2}
 800a25a:	e883 0007 	stmia.w	r3, {r0, r1, r2}
    }
 800a25e:	bf00      	nop
    ADCVALBuffer[0] = 0;
 800a260:	697b      	ldr	r3, [r7, #20]
 800a262:	2200      	movs	r2, #0
 800a264:	f8a3 2204 	strh.w	r2, [r3, #516]	@ 0x204
    ADCVAL.setWildcard(ADCVALBuffer);
 800a268:	697b      	ldr	r3, [r7, #20]
 800a26a:	f503 72b4 	add.w	r2, r3, #360	@ 0x168
 800a26e:	697b      	ldr	r3, [r7, #20]
 800a270:	f503 7301 	add.w	r3, r3, #516	@ 0x204
 800a274:	4619      	mov	r1, r3
 800a276:	4610      	mov	r0, r2
 800a278:	f7ff fd6c 	bl	8009d54 <_ZN8touchgfx23TextAreaWithOneWildcard11setWildcardEPKt>
    ADCVAL.setTypedText(touchgfx::TypedText(T___SINGLEUSE_JSQP));
 800a27c:	697b      	ldr	r3, [r7, #20]
 800a27e:	f503 74b4 	add.w	r4, r3, #360	@ 0x168
 800a282:	f107 034c 	add.w	r3, r7, #76	@ 0x4c
 800a286:	2101      	movs	r1, #1
 800a288:	4618      	mov	r0, r3
 800a28a:	f7ff fb6b 	bl	8009964 <_ZN8touchgfx9TypedTextC1Et>
 800a28e:	f107 034c 	add.w	r3, r7, #76	@ 0x4c
 800a292:	4619      	mov	r1, r3
 800a294:	4620      	mov	r0, r4
 800a296:	f004 fc3b 	bl	800eb10 <_ZN8touchgfx8TextArea12setTypedTextERKNS_9TypedTextE>
 800a29a:	f107 034c 	add.w	r3, r7, #76	@ 0x4c
 800a29e:	4618      	mov	r0, r3
 800a2a0:	f7fe f8d0 	bl	8008444 <_ZN8touchgfx9TypedTextD1Ev>
    add(ADCVAL);
 800a2a4:	697a      	ldr	r2, [r7, #20]
 800a2a6:	697b      	ldr	r3, [r7, #20]
 800a2a8:	f503 73b4 	add.w	r3, r3, #360	@ 0x168
 800a2ac:	4619      	mov	r1, r3
 800a2ae:	4610      	mov	r0, r2
 800a2b0:	f7ff fa2e 	bl	8009710 <_ZN8touchgfx6Screen3addERNS_8DrawableE>
}
 800a2b4:	697b      	ldr	r3, [r7, #20]
 800a2b6:	4618      	mov	r0, r3
 800a2b8:	379c      	adds	r7, #156	@ 0x9c
 800a2ba:	46bd      	mov	sp, r7
 800a2bc:	bd90      	pop	{r4, r7, pc}
 800a2be:	bf00      	nop

0800a2c0 <_ZN12MainViewBaseD1Ev>:

MainViewBase::~MainViewBase()
 800a2c0:	b580      	push	{r7, lr}
 800a2c2:	b082      	sub	sp, #8
 800a2c4:	af00      	add	r7, sp, #0
 800a2c6:	6078      	str	r0, [r7, #4]
 800a2c8:	4a18      	ldr	r2, [pc, #96]	@ (800a32c <_ZN12MainViewBaseD1Ev+0x6c>)
 800a2ca:	687b      	ldr	r3, [r7, #4]
 800a2cc:	601a      	str	r2, [r3, #0]
{

}
 800a2ce:	687b      	ldr	r3, [r7, #4]
 800a2d0:	f503 730b 	add.w	r3, r3, #556	@ 0x22c
 800a2d4:	4618      	mov	r0, r3
 800a2d6:	f000 f8c1 	bl	800a45c <_ZN8touchgfx8CallbackI12MainViewBaseRKNS_14AbstractButtonEvvED1Ev>
 800a2da:	687b      	ldr	r3, [r7, #4]
 800a2dc:	f503 73b4 	add.w	r3, r3, #360	@ 0x168
 800a2e0:	4618      	mov	r0, r3
 800a2e2:	f000 f8dd 	bl	800a4a0 <_ZN8touchgfx23TextAreaWithOneWildcardD1Ev>
 800a2e6:	687b      	ldr	r3, [r7, #4]
 800a2e8:	f503 738e 	add.w	r3, r3, #284	@ 0x11c
 800a2ec:	4618      	mov	r0, r3
 800a2ee:	f000 f8d7 	bl	800a4a0 <_ZN8touchgfx23TextAreaWithOneWildcardD1Ev>
 800a2f2:	687b      	ldr	r3, [r7, #4]
 800a2f4:	33d0      	adds	r3, #208	@ 0xd0
 800a2f6:	4618      	mov	r0, r3
 800a2f8:	f000 f8d2 	bl	800a4a0 <_ZN8touchgfx23TextAreaWithOneWildcardD1Ev>
 800a2fc:	687b      	ldr	r3, [r7, #4]
 800a2fe:	3398      	adds	r3, #152	@ 0x98
 800a300:	4618      	mov	r0, r3
 800a302:	f000 f955 	bl	800a5b0 <_ZN8touchgfx12ToggleButtonD1Ev>
 800a306:	687b      	ldr	r3, [r7, #4]
 800a308:	336c      	adds	r3, #108	@ 0x6c
 800a30a:	4618      	mov	r0, r3
 800a30c:	f000 f92e 	bl	800a56c <_ZN8touchgfx5ImageD1Ev>
 800a310:	687b      	ldr	r3, [r7, #4]
 800a312:	3340      	adds	r3, #64	@ 0x40
 800a314:	4618      	mov	r0, r3
 800a316:	f000 f907 	bl	800a528 <_ZN8touchgfx3BoxD1Ev>
 800a31a:	687b      	ldr	r3, [r7, #4]
 800a31c:	4618      	mov	r0, r3
 800a31e:	f7ff fd31 	bl	8009d84 <_ZN8touchgfx4ViewI13MainPresenterED1Ev>
 800a322:	687b      	ldr	r3, [r7, #4]
 800a324:	4618      	mov	r0, r3
 800a326:	3708      	adds	r7, #8
 800a328:	46bd      	mov	sp, r7
 800a32a:	bd80      	pop	{r7, pc}
 800a32c:	08024748 	.word	0x08024748

0800a330 <_ZN12MainViewBaseD0Ev>:
MainViewBase::~MainViewBase()
 800a330:	b580      	push	{r7, lr}
 800a332:	b082      	sub	sp, #8
 800a334:	af00      	add	r7, sp, #0
 800a336:	6078      	str	r0, [r7, #4]
}
 800a338:	6878      	ldr	r0, [r7, #4]
 800a33a:	f7ff ffc1 	bl	800a2c0 <_ZN12MainViewBaseD1Ev>
 800a33e:	f44f 710f 	mov.w	r1, #572	@ 0x23c
 800a342:	6878      	ldr	r0, [r7, #4]
 800a344:	f017 fff7 	bl	8022336 <_ZdlPvj>
 800a348:	687b      	ldr	r3, [r7, #4]
 800a34a:	4618      	mov	r0, r3
 800a34c:	3708      	adds	r7, #8
 800a34e:	46bd      	mov	sp, r7
 800a350:	bd80      	pop	{r7, pc}

0800a352 <_ZN12MainViewBase11setupScreenEv>:

void MainViewBase::setupScreen()
{
 800a352:	b480      	push	{r7}
 800a354:	b083      	sub	sp, #12
 800a356:	af00      	add	r7, sp, #0
 800a358:	6078      	str	r0, [r7, #4]

}
 800a35a:	bf00      	nop
 800a35c:	370c      	adds	r7, #12
 800a35e:	46bd      	mov	sp, r7
 800a360:	f85d 7b04 	ldr.w	r7, [sp], #4
 800a364:	4770      	bx	lr

0800a366 <_ZN12MainViewBase21buttonCallbackHandlerERKN8touchgfx14AbstractButtonE>:

void MainViewBase::buttonCallbackHandler(const touchgfx::AbstractButton& src)
{
 800a366:	b580      	push	{r7, lr}
 800a368:	b082      	sub	sp, #8
 800a36a:	af00      	add	r7, sp, #0
 800a36c:	6078      	str	r0, [r7, #4]
 800a36e:	6039      	str	r1, [r7, #0]
    if (&src == &toggleButton1)
 800a370:	687b      	ldr	r3, [r7, #4]
 800a372:	3398      	adds	r3, #152	@ 0x98
 800a374:	683a      	ldr	r2, [r7, #0]
 800a376:	429a      	cmp	r2, r3
 800a378:	d105      	bne.n	800a386 <_ZN12MainViewBase21buttonCallbackHandlerERKN8touchgfx14AbstractButtonE+0x20>
    {
        //Interaction1
        //When toggleButton1 clicked call virtual function
        //Call ToggleLights
        ToggleLights();
 800a37a:	687b      	ldr	r3, [r7, #4]
 800a37c:	681b      	ldr	r3, [r3, #0]
 800a37e:	332c      	adds	r3, #44	@ 0x2c
 800a380:	681b      	ldr	r3, [r3, #0]
 800a382:	6878      	ldr	r0, [r7, #4]
 800a384:	4798      	blx	r3
    }
}
 800a386:	bf00      	nop
 800a388:	3708      	adds	r7, #8
 800a38a:	46bd      	mov	sp, r7
 800a38c:	bd80      	pop	{r7, pc}
	...

0800a390 <_ZN8touchgfx4ViewI13MainPresenterEC1Ev>:
    View()
 800a390:	b580      	push	{r7, lr}
 800a392:	b082      	sub	sp, #8
 800a394:	af00      	add	r7, sp, #0
 800a396:	6078      	str	r0, [r7, #4]
        : presenter(0)
 800a398:	687b      	ldr	r3, [r7, #4]
 800a39a:	4618      	mov	r0, r3
 800a39c:	f007 fd88 	bl	8011eb0 <_ZN8touchgfx6ScreenC1Ev>
 800a3a0:	4a05      	ldr	r2, [pc, #20]	@ (800a3b8 <_ZN8touchgfx4ViewI13MainPresenterEC1Ev+0x28>)
 800a3a2:	687b      	ldr	r3, [r7, #4]
 800a3a4:	601a      	str	r2, [r3, #0]
 800a3a6:	687b      	ldr	r3, [r7, #4]
 800a3a8:	2200      	movs	r2, #0
 800a3aa:	63da      	str	r2, [r3, #60]	@ 0x3c
    }
 800a3ac:	687b      	ldr	r3, [r7, #4]
 800a3ae:	4618      	mov	r0, r3
 800a3b0:	3708      	adds	r7, #8
 800a3b2:	46bd      	mov	sp, r7
 800a3b4:	bd80      	pop	{r7, pc}
 800a3b6:	bf00      	nop
 800a3b8:	08024798 	.word	0x08024798

0800a3bc <_ZN8touchgfx15GenericCallbackIRKNS_14AbstractButtonEvvEC1Ev>:
class GenericCallback<T1, void, void>
 800a3bc:	b480      	push	{r7}
 800a3be:	b083      	sub	sp, #12
 800a3c0:	af00      	add	r7, sp, #0
 800a3c2:	6078      	str	r0, [r7, #4]
 800a3c4:	4a04      	ldr	r2, [pc, #16]	@ (800a3d8 <_ZN8touchgfx15GenericCallbackIRKNS_14AbstractButtonEvvEC1Ev+0x1c>)
 800a3c6:	687b      	ldr	r3, [r7, #4]
 800a3c8:	601a      	str	r2, [r3, #0]
 800a3ca:	687b      	ldr	r3, [r7, #4]
 800a3cc:	4618      	mov	r0, r3
 800a3ce:	370c      	adds	r7, #12
 800a3d0:	46bd      	mov	sp, r7
 800a3d2:	f85d 7b04 	ldr.w	r7, [sp], #4
 800a3d6:	4770      	bx	lr
 800a3d8:	0802485c 	.word	0x0802485c

0800a3dc <_ZN8touchgfx8CallbackI12MainViewBaseRKNS_14AbstractButtonEvvEC1EPS1_MS1_FvS4_E>:
    Callback(dest_type* pObject, void (dest_type::*pmemfun_1)(T1))
 800a3dc:	b580      	push	{r7, lr}
 800a3de:	b084      	sub	sp, #16
 800a3e0:	af00      	add	r7, sp, #0
 800a3e2:	60f8      	str	r0, [r7, #12]
 800a3e4:	60b9      	str	r1, [r7, #8]
 800a3e6:	4639      	mov	r1, r7
 800a3e8:	e881 000c 	stmia.w	r1, {r2, r3}
        : pobject(pObject), pmemfun(pmemfun_1)
 800a3ec:	68fb      	ldr	r3, [r7, #12]
 800a3ee:	4618      	mov	r0, r3
 800a3f0:	f7ff ffe4 	bl	800a3bc <_ZN8touchgfx15GenericCallbackIRKNS_14AbstractButtonEvvEC1Ev>
 800a3f4:	4a08      	ldr	r2, [pc, #32]	@ (800a418 <_ZN8touchgfx8CallbackI12MainViewBaseRKNS_14AbstractButtonEvvEC1EPS1_MS1_FvS4_E+0x3c>)
 800a3f6:	68fb      	ldr	r3, [r7, #12]
 800a3f8:	601a      	str	r2, [r3, #0]
 800a3fa:	68fb      	ldr	r3, [r7, #12]
 800a3fc:	68ba      	ldr	r2, [r7, #8]
 800a3fe:	605a      	str	r2, [r3, #4]
 800a400:	68fb      	ldr	r3, [r7, #12]
 800a402:	3308      	adds	r3, #8
 800a404:	463a      	mov	r2, r7
 800a406:	e892 0003 	ldmia.w	r2, {r0, r1}
 800a40a:	e883 0003 	stmia.w	r3, {r0, r1}
    }
 800a40e:	68fb      	ldr	r3, [r7, #12]
 800a410:	4618      	mov	r0, r3
 800a412:	3710      	adds	r7, #16
 800a414:	46bd      	mov	sp, r7
 800a416:	bd80      	pop	{r7, pc}
 800a418:	08024780 	.word	0x08024780

0800a41c <_ZN8touchgfx15GenericCallbackIRKNS_14AbstractButtonEvvED1Ev>:
    virtual ~GenericCallback()
 800a41c:	b480      	push	{r7}
 800a41e:	b083      	sub	sp, #12
 800a420:	af00      	add	r7, sp, #0
 800a422:	6078      	str	r0, [r7, #4]
    }
 800a424:	4a04      	ldr	r2, [pc, #16]	@ (800a438 <_ZN8touchgfx15GenericCallbackIRKNS_14AbstractButtonEvvED1Ev+0x1c>)
 800a426:	687b      	ldr	r3, [r7, #4]
 800a428:	601a      	str	r2, [r3, #0]
 800a42a:	687b      	ldr	r3, [r7, #4]
 800a42c:	4618      	mov	r0, r3
 800a42e:	370c      	adds	r7, #12
 800a430:	46bd      	mov	sp, r7
 800a432:	f85d 7b04 	ldr.w	r7, [sp], #4
 800a436:	4770      	bx	lr
 800a438:	0802485c 	.word	0x0802485c

0800a43c <_ZN8touchgfx15GenericCallbackIRKNS_14AbstractButtonEvvED0Ev>:
    virtual ~GenericCallback()
 800a43c:	b580      	push	{r7, lr}
 800a43e:	b082      	sub	sp, #8
 800a440:	af00      	add	r7, sp, #0
 800a442:	6078      	str	r0, [r7, #4]
    }
 800a444:	6878      	ldr	r0, [r7, #4]
 800a446:	f7ff ffe9 	bl	800a41c <_ZN8touchgfx15GenericCallbackIRKNS_14AbstractButtonEvvED1Ev>
 800a44a:	2104      	movs	r1, #4
 800a44c:	6878      	ldr	r0, [r7, #4]
 800a44e:	f017 ff72 	bl	8022336 <_ZdlPvj>
 800a452:	687b      	ldr	r3, [r7, #4]
 800a454:	4618      	mov	r0, r3
 800a456:	3708      	adds	r7, #8
 800a458:	46bd      	mov	sp, r7
 800a45a:	bd80      	pop	{r7, pc}

0800a45c <_ZN8touchgfx8CallbackI12MainViewBaseRKNS_14AbstractButtonEvvED1Ev>:
struct Callback<dest_type, T1, void, void> : public GenericCallback<T1>
 800a45c:	b580      	push	{r7, lr}
 800a45e:	b082      	sub	sp, #8
 800a460:	af00      	add	r7, sp, #0
 800a462:	6078      	str	r0, [r7, #4]
 800a464:	4a05      	ldr	r2, [pc, #20]	@ (800a47c <_ZN8touchgfx8CallbackI12MainViewBaseRKNS_14AbstractButtonEvvED1Ev+0x20>)
 800a466:	687b      	ldr	r3, [r7, #4]
 800a468:	601a      	str	r2, [r3, #0]
 800a46a:	687b      	ldr	r3, [r7, #4]
 800a46c:	4618      	mov	r0, r3
 800a46e:	f7ff ffd5 	bl	800a41c <_ZN8touchgfx15GenericCallbackIRKNS_14AbstractButtonEvvED1Ev>
 800a472:	687b      	ldr	r3, [r7, #4]
 800a474:	4618      	mov	r0, r3
 800a476:	3708      	adds	r7, #8
 800a478:	46bd      	mov	sp, r7
 800a47a:	bd80      	pop	{r7, pc}
 800a47c:	08024780 	.word	0x08024780

0800a480 <_ZN8touchgfx8CallbackI12MainViewBaseRKNS_14AbstractButtonEvvED0Ev>:
 800a480:	b580      	push	{r7, lr}
 800a482:	b082      	sub	sp, #8
 800a484:	af00      	add	r7, sp, #0
 800a486:	6078      	str	r0, [r7, #4]
 800a488:	6878      	ldr	r0, [r7, #4]
 800a48a:	f7ff ffe7 	bl	800a45c <_ZN8touchgfx8CallbackI12MainViewBaseRKNS_14AbstractButtonEvvED1Ev>
 800a48e:	2110      	movs	r1, #16
 800a490:	6878      	ldr	r0, [r7, #4]
 800a492:	f017 ff50 	bl	8022336 <_ZdlPvj>
 800a496:	687b      	ldr	r3, [r7, #4]
 800a498:	4618      	mov	r0, r3
 800a49a:	3708      	adds	r7, #8
 800a49c:	46bd      	mov	sp, r7
 800a49e:	bd80      	pop	{r7, pc}

0800a4a0 <_ZN8touchgfx23TextAreaWithOneWildcardD1Ev>:
class TextAreaWithOneWildcard : public TextAreaWithWildcardBase
 800a4a0:	b580      	push	{r7, lr}
 800a4a2:	b082      	sub	sp, #8
 800a4a4:	af00      	add	r7, sp, #0
 800a4a6:	6078      	str	r0, [r7, #4]
 800a4a8:	4a05      	ldr	r2, [pc, #20]	@ (800a4c0 <_ZN8touchgfx23TextAreaWithOneWildcardD1Ev+0x20>)
 800a4aa:	687b      	ldr	r3, [r7, #4]
 800a4ac:	601a      	str	r2, [r3, #0]
 800a4ae:	687b      	ldr	r3, [r7, #4]
 800a4b0:	4618      	mov	r0, r3
 800a4b2:	f7ff fbfd 	bl	8009cb0 <_ZN8touchgfx24TextAreaWithWildcardBaseD1Ev>
 800a4b6:	687b      	ldr	r3, [r7, #4]
 800a4b8:	4618      	mov	r0, r3
 800a4ba:	3708      	adds	r7, #8
 800a4bc:	46bd      	mov	sp, r7
 800a4be:	bd80      	pop	{r7, pc}
 800a4c0:	080247cc 	.word	0x080247cc

0800a4c4 <_ZN8touchgfx23TextAreaWithOneWildcardD0Ev>:
 800a4c4:	b580      	push	{r7, lr}
 800a4c6:	b082      	sub	sp, #8
 800a4c8:	af00      	add	r7, sp, #0
 800a4ca:	6078      	str	r0, [r7, #4]
 800a4cc:	6878      	ldr	r0, [r7, #4]
 800a4ce:	f7ff ffe7 	bl	800a4a0 <_ZN8touchgfx23TextAreaWithOneWildcardD1Ev>
 800a4d2:	214c      	movs	r1, #76	@ 0x4c
 800a4d4:	6878      	ldr	r0, [r7, #4]
 800a4d6:	f017 ff2e 	bl	8022336 <_ZdlPvj>
 800a4da:	687b      	ldr	r3, [r7, #4]
 800a4dc:	4618      	mov	r0, r3
 800a4de:	3708      	adds	r7, #8
 800a4e0:	46bd      	mov	sp, r7
 800a4e2:	bd80      	pop	{r7, pc}

0800a4e4 <_ZN8touchgfx9ContainerD1Ev>:
 * intersect with the geometry of the container will be visible (e.g. setting a
 * container's width to 0 will render all children invisible).
 *
 * @see Drawable
 */
class Container : public Drawable
 800a4e4:	b580      	push	{r7, lr}
 800a4e6:	b082      	sub	sp, #8
 800a4e8:	af00      	add	r7, sp, #0
 800a4ea:	6078      	str	r0, [r7, #4]
 800a4ec:	4a05      	ldr	r2, [pc, #20]	@ (800a504 <_ZN8touchgfx9ContainerD1Ev+0x20>)
 800a4ee:	687b      	ldr	r3, [r7, #4]
 800a4f0:	601a      	str	r2, [r3, #0]
 800a4f2:	687b      	ldr	r3, [r7, #4]
 800a4f4:	4618      	mov	r0, r3
 800a4f6:	f7fe ff0d 	bl	8009314 <_ZN8touchgfx8DrawableD1Ev>
 800a4fa:	687b      	ldr	r3, [r7, #4]
 800a4fc:	4618      	mov	r0, r3
 800a4fe:	3708      	adds	r7, #8
 800a500:	46bd      	mov	sp, r7
 800a502:	bd80      	pop	{r7, pc}
 800a504:	08024e44 	.word	0x08024e44

0800a508 <_ZN8touchgfx9ContainerD0Ev>:
 800a508:	b580      	push	{r7, lr}
 800a50a:	b082      	sub	sp, #8
 800a50c:	af00      	add	r7, sp, #0
 800a50e:	6078      	str	r0, [r7, #4]
 800a510:	6878      	ldr	r0, [r7, #4]
 800a512:	f7ff ffe7 	bl	800a4e4 <_ZN8touchgfx9ContainerD1Ev>
 800a516:	212c      	movs	r1, #44	@ 0x2c
 800a518:	6878      	ldr	r0, [r7, #4]
 800a51a:	f017 ff0c 	bl	8022336 <_ZdlPvj>
 800a51e:	687b      	ldr	r3, [r7, #4]
 800a520:	4618      	mov	r0, r3
 800a522:	3708      	adds	r7, #8
 800a524:	46bd      	mov	sp, r7
 800a526:	bd80      	pop	{r7, pc}

0800a528 <_ZN8touchgfx3BoxD1Ev>:
class Box : public Widget
 800a528:	b580      	push	{r7, lr}
 800a52a:	b082      	sub	sp, #8
 800a52c:	af00      	add	r7, sp, #0
 800a52e:	6078      	str	r0, [r7, #4]
 800a530:	4a05      	ldr	r2, [pc, #20]	@ (800a548 <_ZN8touchgfx3BoxD1Ev+0x20>)
 800a532:	687b      	ldr	r3, [r7, #4]
 800a534:	601a      	str	r2, [r3, #0]
 800a536:	687b      	ldr	r3, [r7, #4]
 800a538:	4618      	mov	r0, r3
 800a53a:	f7ff f90b 	bl	8009754 <_ZN8touchgfx6WidgetD1Ev>
 800a53e:	687b      	ldr	r3, [r7, #4]
 800a540:	4618      	mov	r0, r3
 800a542:	3708      	adds	r7, #8
 800a544:	46bd      	mov	sp, r7
 800a546:	bd80      	pop	{r7, pc}
 800a548:	080251a0 	.word	0x080251a0

0800a54c <_ZN8touchgfx3BoxD0Ev>:
 800a54c:	b580      	push	{r7, lr}
 800a54e:	b082      	sub	sp, #8
 800a550:	af00      	add	r7, sp, #0
 800a552:	6078      	str	r0, [r7, #4]
 800a554:	6878      	ldr	r0, [r7, #4]
 800a556:	f7ff ffe7 	bl	800a528 <_ZN8touchgfx3BoxD1Ev>
 800a55a:	212c      	movs	r1, #44	@ 0x2c
 800a55c:	6878      	ldr	r0, [r7, #4]
 800a55e:	f017 feea 	bl	8022336 <_ZdlPvj>
 800a562:	687b      	ldr	r3, [r7, #4]
 800a564:	4618      	mov	r0, r3
 800a566:	3708      	adds	r7, #8
 800a568:	46bd      	mov	sp, r7
 800a56a:	bd80      	pop	{r7, pc}

0800a56c <_ZN8touchgfx5ImageD1Ev>:
class Image : public Widget
 800a56c:	b580      	push	{r7, lr}
 800a56e:	b082      	sub	sp, #8
 800a570:	af00      	add	r7, sp, #0
 800a572:	6078      	str	r0, [r7, #4]
 800a574:	4a05      	ldr	r2, [pc, #20]	@ (800a58c <_ZN8touchgfx5ImageD1Ev+0x20>)
 800a576:	687b      	ldr	r3, [r7, #4]
 800a578:	601a      	str	r2, [r3, #0]
 800a57a:	687b      	ldr	r3, [r7, #4]
 800a57c:	4618      	mov	r0, r3
 800a57e:	f7ff f8e9 	bl	8009754 <_ZN8touchgfx6WidgetD1Ev>
 800a582:	687b      	ldr	r3, [r7, #4]
 800a584:	4618      	mov	r0, r3
 800a586:	3708      	adds	r7, #8
 800a588:	46bd      	mov	sp, r7
 800a58a:	bd80      	pop	{r7, pc}
 800a58c:	0802530c 	.word	0x0802530c

0800a590 <_ZN8touchgfx5ImageD0Ev>:
 800a590:	b580      	push	{r7, lr}
 800a592:	b082      	sub	sp, #8
 800a594:	af00      	add	r7, sp, #0
 800a596:	6078      	str	r0, [r7, #4]
 800a598:	6878      	ldr	r0, [r7, #4]
 800a59a:	f7ff ffe7 	bl	800a56c <_ZN8touchgfx5ImageD1Ev>
 800a59e:	212c      	movs	r1, #44	@ 0x2c
 800a5a0:	6878      	ldr	r0, [r7, #4]
 800a5a2:	f017 fec8 	bl	8022336 <_ZdlPvj>
 800a5a6:	687b      	ldr	r3, [r7, #4]
 800a5a8:	4618      	mov	r0, r3
 800a5aa:	3708      	adds	r7, #8
 800a5ac:	46bd      	mov	sp, r7
 800a5ae:	bd80      	pop	{r7, pc}

0800a5b0 <_ZN8touchgfx12ToggleButtonD1Ev>:
 800a5b0:	b580      	push	{r7, lr}
 800a5b2:	b082      	sub	sp, #8
 800a5b4:	af00      	add	r7, sp, #0
 800a5b6:	6078      	str	r0, [r7, #4]
 800a5b8:	4a05      	ldr	r2, [pc, #20]	@ (800a5d0 <_ZN8touchgfx12ToggleButtonD1Ev+0x20>)
 800a5ba:	687b      	ldr	r3, [r7, #4]
 800a5bc:	601a      	str	r2, [r3, #0]
 800a5be:	687b      	ldr	r3, [r7, #4]
 800a5c0:	4618      	mov	r0, r3
 800a5c2:	f7ff fc01 	bl	8009dc8 <_ZN8touchgfx6ButtonD1Ev>
 800a5c6:	687b      	ldr	r3, [r7, #4]
 800a5c8:	4618      	mov	r0, r3
 800a5ca:	3708      	adds	r7, #8
 800a5cc:	46bd      	mov	sp, r7
 800a5ce:	bd80      	pop	{r7, pc}
 800a5d0:	0802509c 	.word	0x0802509c

0800a5d4 <_ZN8touchgfx12ToggleButtonD0Ev>:
 800a5d4:	b580      	push	{r7, lr}
 800a5d6:	b082      	sub	sp, #8
 800a5d8:	af00      	add	r7, sp, #0
 800a5da:	6078      	str	r0, [r7, #4]
 800a5dc:	6878      	ldr	r0, [r7, #4]
 800a5de:	f7ff ffe7 	bl	800a5b0 <_ZN8touchgfx12ToggleButtonD1Ev>
 800a5e2:	2138      	movs	r1, #56	@ 0x38
 800a5e4:	6878      	ldr	r0, [r7, #4]
 800a5e6:	f017 fea6 	bl	8022336 <_ZdlPvj>
 800a5ea:	687b      	ldr	r3, [r7, #4]
 800a5ec:	4618      	mov	r0, r3
 800a5ee:	3708      	adds	r7, #8
 800a5f0:	46bd      	mov	sp, r7
 800a5f2:	bd80      	pop	{r7, pc}

0800a5f4 <_ZN8touchgfx8CallbackI12MainViewBaseRKNS_14AbstractButtonEvvE7executeES4_>:
    virtual void execute(T1 t1)
 800a5f4:	b580      	push	{r7, lr}
 800a5f6:	b082      	sub	sp, #8
 800a5f8:	af00      	add	r7, sp, #0
 800a5fa:	6078      	str	r0, [r7, #4]
 800a5fc:	6039      	str	r1, [r7, #0]
        (pobject->*pmemfun)(t1);
 800a5fe:	687b      	ldr	r3, [r7, #4]
 800a600:	685b      	ldr	r3, [r3, #4]
 800a602:	687a      	ldr	r2, [r7, #4]
 800a604:	68d2      	ldr	r2, [r2, #12]
 800a606:	1052      	asrs	r2, r2, #1
 800a608:	1898      	adds	r0, r3, r2
 800a60a:	687b      	ldr	r3, [r7, #4]
 800a60c:	68db      	ldr	r3, [r3, #12]
 800a60e:	f003 0301 	and.w	r3, r3, #1
 800a612:	2b00      	cmp	r3, #0
 800a614:	d102      	bne.n	800a61c <_ZN8touchgfx8CallbackI12MainViewBaseRKNS_14AbstractButtonEvvE7executeES4_+0x28>
 800a616:	687b      	ldr	r3, [r7, #4]
 800a618:	689b      	ldr	r3, [r3, #8]
 800a61a:	e00a      	b.n	800a632 <_ZN8touchgfx8CallbackI12MainViewBaseRKNS_14AbstractButtonEvvE7executeES4_+0x3e>
 800a61c:	687b      	ldr	r3, [r7, #4]
 800a61e:	685b      	ldr	r3, [r3, #4]
 800a620:	687a      	ldr	r2, [r7, #4]
 800a622:	68d2      	ldr	r2, [r2, #12]
 800a624:	1052      	asrs	r2, r2, #1
 800a626:	4413      	add	r3, r2
 800a628:	681b      	ldr	r3, [r3, #0]
 800a62a:	687a      	ldr	r2, [r7, #4]
 800a62c:	6892      	ldr	r2, [r2, #8]
 800a62e:	4413      	add	r3, r2
 800a630:	681b      	ldr	r3, [r3, #0]
 800a632:	6839      	ldr	r1, [r7, #0]
 800a634:	4798      	blx	r3
    }
 800a636:	bf00      	nop
 800a638:	3708      	adds	r7, #8
 800a63a:	46bd      	mov	sp, r7
 800a63c:	bd80      	pop	{r7, pc}

0800a63e <_ZNK8touchgfx8CallbackI12MainViewBaseRKNS_14AbstractButtonEvvE7isValidEv>:
    virtual bool isValid() const
 800a63e:	b480      	push	{r7}
 800a640:	b083      	sub	sp, #12
 800a642:	af00      	add	r7, sp, #0
 800a644:	6078      	str	r0, [r7, #4]
        return (pobject != 0) && (pmemfun != 0);
 800a646:	687b      	ldr	r3, [r7, #4]
 800a648:	685b      	ldr	r3, [r3, #4]
 800a64a:	2b00      	cmp	r3, #0
 800a64c:	d010      	beq.n	800a670 <_ZNK8touchgfx8CallbackI12MainViewBaseRKNS_14AbstractButtonEvvE7isValidEv+0x32>
 800a64e:	687b      	ldr	r3, [r7, #4]
 800a650:	689b      	ldr	r3, [r3, #8]
 800a652:	2b00      	cmp	r3, #0
 800a654:	d107      	bne.n	800a666 <_ZNK8touchgfx8CallbackI12MainViewBaseRKNS_14AbstractButtonEvvE7isValidEv+0x28>
 800a656:	687b      	ldr	r3, [r7, #4]
 800a658:	68db      	ldr	r3, [r3, #12]
 800a65a:	f003 0301 	and.w	r3, r3, #1
 800a65e:	2b00      	cmp	r3, #0
 800a660:	d101      	bne.n	800a666 <_ZNK8touchgfx8CallbackI12MainViewBaseRKNS_14AbstractButtonEvvE7isValidEv+0x28>
 800a662:	2301      	movs	r3, #1
 800a664:	e000      	b.n	800a668 <_ZNK8touchgfx8CallbackI12MainViewBaseRKNS_14AbstractButtonEvvE7isValidEv+0x2a>
 800a666:	2300      	movs	r3, #0
 800a668:	2b01      	cmp	r3, #1
 800a66a:	d001      	beq.n	800a670 <_ZNK8touchgfx8CallbackI12MainViewBaseRKNS_14AbstractButtonEvvE7isValidEv+0x32>
 800a66c:	2301      	movs	r3, #1
 800a66e:	e000      	b.n	800a672 <_ZNK8touchgfx8CallbackI12MainViewBaseRKNS_14AbstractButtonEvvE7isValidEv+0x34>
 800a670:	2300      	movs	r3, #0
    }
 800a672:	4618      	mov	r0, r3
 800a674:	370c      	adds	r7, #12
 800a676:	46bd      	mov	sp, r7
 800a678:	f85d 7b04 	ldr.w	r7, [sp], #4
 800a67c:	4770      	bx	lr
	...

0800a680 <_ZN14BitmapDatabase11getInstanceEv>:
};

namespace BitmapDatabase
{
const touchgfx::Bitmap::BitmapData* getInstance()
{
 800a680:	b480      	push	{r7}
 800a682:	af00      	add	r7, sp, #0
    return bitmap_database;
 800a684:	4b02      	ldr	r3, [pc, #8]	@ (800a690 <_ZN14BitmapDatabase11getInstanceEv+0x10>)
}
 800a686:	4618      	mov	r0, r3
 800a688:	46bd      	mov	sp, r7
 800a68a:	f85d 7b04 	ldr.w	r7, [sp], #4
 800a68e:	4770      	bx	lr
 800a690:	080248d4 	.word	0x080248d4

0800a694 <_ZN14BitmapDatabase15getInstanceSizeEv>:

uint16_t getInstanceSize()
{
 800a694:	b480      	push	{r7}
 800a696:	af00      	add	r7, sp, #0
    return (uint16_t)(sizeof(bitmap_database) / sizeof(touchgfx::Bitmap::BitmapData));
 800a698:	2303      	movs	r3, #3
}
 800a69a:	4618      	mov	r0, r3
 800a69c:	46bd      	mov	sp, r7
 800a69e:	f85d 7b04 	ldr.w	r7, [sp], #4
 800a6a2:	4770      	bx	lr

0800a6a4 <_ZNK8touchgfx4Font10getKerningEtPKNS_9GlyphNodeE>:
    virtual int8_t getKerning(Unicode::UnicodeChar prevChar, const GlyphNode* glyph) const
 800a6a4:	b480      	push	{r7}
 800a6a6:	b085      	sub	sp, #20
 800a6a8:	af00      	add	r7, sp, #0
 800a6aa:	60f8      	str	r0, [r7, #12]
 800a6ac:	460b      	mov	r3, r1
 800a6ae:	607a      	str	r2, [r7, #4]
 800a6b0:	817b      	strh	r3, [r7, #10]
        return 0;
 800a6b2:	2300      	movs	r3, #0
    }
 800a6b4:	4618      	mov	r0, r3
 800a6b6:	3714      	adds	r7, #20
 800a6b8:	46bd      	mov	sp, r7
 800a6ba:	f85d 7b04 	ldr.w	r7, [sp], #4
 800a6be:	4770      	bx	lr

0800a6c0 <_ZNK8touchgfx4Font12getGSUBTableEv>:
    virtual const uint16_t* getGSUBTable() const
 800a6c0:	b480      	push	{r7}
 800a6c2:	b083      	sub	sp, #12
 800a6c4:	af00      	add	r7, sp, #0
 800a6c6:	6078      	str	r0, [r7, #4]
        return 0;
 800a6c8:	2300      	movs	r3, #0
    }
 800a6ca:	4618      	mov	r0, r3
 800a6cc:	370c      	adds	r7, #12
 800a6ce:	46bd      	mov	sp, r7
 800a6d0:	f85d 7b04 	ldr.w	r7, [sp], #4
 800a6d4:	4770      	bx	lr

0800a6d6 <_ZNK8touchgfx4Font23getContextualFormsTableEv>:
    virtual const FontContextualFormsTable* getContextualFormsTable() const
 800a6d6:	b480      	push	{r7}
 800a6d8:	b083      	sub	sp, #12
 800a6da:	af00      	add	r7, sp, #0
 800a6dc:	6078      	str	r0, [r7, #4]
        return 0;
 800a6de:	2300      	movs	r3, #0
    }
 800a6e0:	4618      	mov	r0, r3
 800a6e2:	370c      	adds	r7, #12
 800a6e4:	46bd      	mov	sp, r7
 800a6e6:	f85d 7b04 	ldr.w	r7, [sp], #4
 800a6ea:	4770      	bx	lr

0800a6ec <_ZN8touchgfx9TypedText25registerTypedTextDatabaseEPKNS0_13TypedTextDataEPKPKNS_4FontEt>:
     *
     * @param  data A reference to the TypedTextData storage array.
     * @param  f    The fonts associated with the array.
     * @param  n    The number of typed texts in the array.
     */
    static void registerTypedTextDatabase(const TypedTextData* data, const Font* const* f, const uint16_t n)
 800a6ec:	b480      	push	{r7}
 800a6ee:	b085      	sub	sp, #20
 800a6f0:	af00      	add	r7, sp, #0
 800a6f2:	60f8      	str	r0, [r7, #12]
 800a6f4:	60b9      	str	r1, [r7, #8]
 800a6f6:	4613      	mov	r3, r2
 800a6f8:	80fb      	strh	r3, [r7, #6]
    {
        typedTexts = data;
 800a6fa:	4a07      	ldr	r2, [pc, #28]	@ (800a718 <_ZN8touchgfx9TypedText25registerTypedTextDatabaseEPKNS0_13TypedTextDataEPKPKNS_4FontEt+0x2c>)
 800a6fc:	68fb      	ldr	r3, [r7, #12]
 800a6fe:	6013      	str	r3, [r2, #0]
        fonts = f;
 800a700:	4a06      	ldr	r2, [pc, #24]	@ (800a71c <_ZN8touchgfx9TypedText25registerTypedTextDatabaseEPKNS0_13TypedTextDataEPKPKNS_4FontEt+0x30>)
 800a702:	68bb      	ldr	r3, [r7, #8]
 800a704:	6013      	str	r3, [r2, #0]
        numberOfTypedTexts = n;
 800a706:	4a06      	ldr	r2, [pc, #24]	@ (800a720 <_ZN8touchgfx9TypedText25registerTypedTextDatabaseEPKNS0_13TypedTextDataEPKPKNS_4FontEt+0x34>)
 800a708:	88fb      	ldrh	r3, [r7, #6]
 800a70a:	8013      	strh	r3, [r2, #0]
    }
 800a70c:	bf00      	nop
 800a70e:	3714      	adds	r7, #20
 800a710:	46bd      	mov	sp, r7
 800a712:	f85d 7b04 	ldr.w	r7, [sp], #4
 800a716:	4770      	bx	lr
 800a718:	20002e0c 	.word	0x20002e0c
 800a71c:	20002e14 	.word	0x20002e14
 800a720:	20002e10 	.word	0x20002e10

0800a724 <_ZNK8touchgfx4Font14getStringWidthEPKtz>:
#include <touchgfx/hal/HAL.hpp>
#include <touchgfx/lcd/LCD.hpp>
#include <texts/TypedTextDatabase.hpp>

uint16_t touchgfx::Font::getStringWidth(const touchgfx::Unicode::UnicodeChar* text, ...) const
{
 800a724:	b40e      	push	{r1, r2, r3}
 800a726:	b580      	push	{r7, lr}
 800a728:	b085      	sub	sp, #20
 800a72a:	af00      	add	r7, sp, #0
 800a72c:	6078      	str	r0, [r7, #4]
    va_list pArg;
    va_start(pArg, text);
 800a72e:	f107 0320 	add.w	r3, r7, #32
 800a732:	60bb      	str	r3, [r7, #8]
    uint16_t width = getStringWidthLTR(TEXT_DIRECTION_LTR, text, pArg);
 800a734:	68bb      	ldr	r3, [r7, #8]
 800a736:	69fa      	ldr	r2, [r7, #28]
 800a738:	2100      	movs	r1, #0
 800a73a:	6878      	ldr	r0, [r7, #4]
 800a73c:	f006 ffee 	bl	801171c <_ZNK8touchgfx4Font17getStringWidthLTREhPKtSt9__va_list>
 800a740:	4603      	mov	r3, r0
 800a742:	81fb      	strh	r3, [r7, #14]
    va_end(pArg);
    return width;
 800a744:	89fb      	ldrh	r3, [r7, #14]
}
 800a746:	4618      	mov	r0, r3
 800a748:	3714      	adds	r7, #20
 800a74a:	46bd      	mov	sp, r7
 800a74c:	e8bd 4080 	ldmia.w	sp!, {r7, lr}
 800a750:	b003      	add	sp, #12
 800a752:	4770      	bx	lr

0800a754 <_ZNK8touchgfx4Font14getStringWidthEhPKtz>:

uint16_t touchgfx::Font::getStringWidth(touchgfx::TextDirection textDirection, const touchgfx::Unicode::UnicodeChar* text, ...) const
{
 800a754:	b40c      	push	{r2, r3}
 800a756:	b580      	push	{r7, lr}
 800a758:	b084      	sub	sp, #16
 800a75a:	af00      	add	r7, sp, #0
 800a75c:	6078      	str	r0, [r7, #4]
 800a75e:	460b      	mov	r3, r1
 800a760:	70fb      	strb	r3, [r7, #3]
    va_list pArg;
    va_start(pArg, text);
 800a762:	f107 031c 	add.w	r3, r7, #28
 800a766:	60bb      	str	r3, [r7, #8]
    uint16_t width = getStringWidthLTR(textDirection, text, pArg);
 800a768:	78f9      	ldrb	r1, [r7, #3]
 800a76a:	68bb      	ldr	r3, [r7, #8]
 800a76c:	69ba      	ldr	r2, [r7, #24]
 800a76e:	6878      	ldr	r0, [r7, #4]
 800a770:	f006 ffd4 	bl	801171c <_ZNK8touchgfx4Font17getStringWidthLTREhPKtSt9__va_list>
 800a774:	4603      	mov	r3, r0
 800a776:	81fb      	strh	r3, [r7, #14]
    va_end(pArg);
    return width;
 800a778:	89fb      	ldrh	r3, [r7, #14]
}
 800a77a:	4618      	mov	r0, r3
 800a77c:	3710      	adds	r7, #16
 800a77e:	46bd      	mov	sp, r7
 800a780:	e8bd 4080 	ldmia.w	sp!, {r7, lr}
 800a784:	b002      	add	sp, #8
 800a786:	4770      	bx	lr

0800a788 <_ZN8touchgfx12TextProvider15getNextLigatureEh>:

touchgfx::Unicode::UnicodeChar touchgfx::TextProvider::getNextLigature(TextDirection direction)
{
 800a788:	b580      	push	{r7, lr}
 800a78a:	b08a      	sub	sp, #40	@ 0x28
 800a78c:	af00      	add	r7, sp, #0
 800a78e:	6078      	str	r0, [r7, #4]
 800a790:	460b      	mov	r3, r1
 800a792:	70fb      	strb	r3, [r7, #3]
    if (fontGsubTable && nextCharacters.peekChar())
 800a794:	687b      	ldr	r3, [r7, #4]
 800a796:	6c5b      	ldr	r3, [r3, #68]	@ 0x44
 800a798:	2b00      	cmp	r3, #0
 800a79a:	d016      	beq.n	800a7ca <_ZN8touchgfx12TextProvider15getNextLigatureEh+0x42>
 800a79c:	687b      	ldr	r3, [r7, #4]
 800a79e:	3322      	adds	r3, #34	@ 0x22
 800a7a0:	627b      	str	r3, [r7, #36]	@ 0x24
            return used == size;
        }

        FORCE_INLINE_FUNCTION Unicode::UnicodeChar peekChar()
        {
            assert(used > 0);
 800a7a2:	6a7b      	ldr	r3, [r7, #36]	@ 0x24
 800a7a4:	8adb      	ldrh	r3, [r3, #22]
 800a7a6:	2b00      	cmp	r3, #0
 800a7a8:	d105      	bne.n	800a7b6 <_ZN8touchgfx12TextProvider15getNextLigatureEh+0x2e>
 800a7aa:	4b43      	ldr	r3, [pc, #268]	@ (800a8b8 <_ZN8touchgfx12TextProvider15getNextLigatureEh+0x130>)
 800a7ac:	4a43      	ldr	r2, [pc, #268]	@ (800a8bc <_ZN8touchgfx12TextProvider15getNextLigatureEh+0x134>)
 800a7ae:	21c5      	movs	r1, #197	@ 0xc5
 800a7b0:	4843      	ldr	r0, [pc, #268]	@ (800a8c0 <_ZN8touchgfx12TextProvider15getNextLigatureEh+0x138>)
 800a7b2:	f017 fe6d 	bl	8022490 <__assert_func>
            return buffer[pos];
 800a7b6:	6a7b      	ldr	r3, [r7, #36]	@ 0x24
 800a7b8:	8a9b      	ldrh	r3, [r3, #20]
 800a7ba:	461a      	mov	r2, r3
 800a7bc:	6a7b      	ldr	r3, [r7, #36]	@ 0x24
 800a7be:	f833 3012 	ldrh.w	r3, [r3, r2, lsl #1]
 800a7c2:	2b00      	cmp	r3, #0
 800a7c4:	d001      	beq.n	800a7ca <_ZN8touchgfx12TextProvider15getNextLigatureEh+0x42>
 800a7c6:	2301      	movs	r3, #1
 800a7c8:	e000      	b.n	800a7cc <_ZN8touchgfx12TextProvider15getNextLigatureEh+0x44>
 800a7ca:	2300      	movs	r3, #0
 800a7cc:	2b00      	cmp	r3, #0
 800a7ce:	d06a      	beq.n	800a8a6 <_ZN8touchgfx12TextProvider15getNextLigatureEh+0x11e>
    {
        substituteGlyphs();
 800a7d0:	6878      	ldr	r0, [r7, #4]
 800a7d2:	f008 fa72 	bl	8012cba <_ZN8touchgfx12TextProvider16substituteGlyphsEv>
        if (nextCharacters.peekChar(1) == 0x093F) // Hindi I-matra
 800a7d6:	687b      	ldr	r3, [r7, #4]
 800a7d8:	3322      	adds	r3, #34	@ 0x22
 800a7da:	623b      	str	r3, [r7, #32]
 800a7dc:	2301      	movs	r3, #1
 800a7de:	83fb      	strh	r3, [r7, #30]
        }

        FORCE_INLINE_FUNCTION Unicode::UnicodeChar peekChar(uint16_t offset)
        {
            assert(offset < used);
 800a7e0:	6a3b      	ldr	r3, [r7, #32]
 800a7e2:	8adb      	ldrh	r3, [r3, #22]
 800a7e4:	8bfa      	ldrh	r2, [r7, #30]
 800a7e6:	429a      	cmp	r2, r3
 800a7e8:	d305      	bcc.n	800a7f6 <_ZN8touchgfx12TextProvider15getNextLigatureEh+0x6e>
 800a7ea:	4b36      	ldr	r3, [pc, #216]	@ (800a8c4 <_ZN8touchgfx12TextProvider15getNextLigatureEh+0x13c>)
 800a7ec:	4a36      	ldr	r2, [pc, #216]	@ (800a8c8 <_ZN8touchgfx12TextProvider15getNextLigatureEh+0x140>)
 800a7ee:	21cb      	movs	r1, #203	@ 0xcb
 800a7f0:	4833      	ldr	r0, [pc, #204]	@ (800a8c0 <_ZN8touchgfx12TextProvider15getNextLigatureEh+0x138>)
 800a7f2:	f017 fe4d 	bl	8022490 <__assert_func>
            const uint16_t index = pos + offset;
 800a7f6:	6a3b      	ldr	r3, [r7, #32]
 800a7f8:	8a9a      	ldrh	r2, [r3, #20]
 800a7fa:	8bfb      	ldrh	r3, [r7, #30]
 800a7fc:	4413      	add	r3, r2
 800a7fe:	83bb      	strh	r3, [r7, #28]
            return buffer[index < size ? index : index - size];
 800a800:	8bbb      	ldrh	r3, [r7, #28]
 800a802:	2b09      	cmp	r3, #9
 800a804:	d801      	bhi.n	800a80a <_ZN8touchgfx12TextProvider15getNextLigatureEh+0x82>
 800a806:	8bbb      	ldrh	r3, [r7, #28]
 800a808:	e001      	b.n	800a80e <_ZN8touchgfx12TextProvider15getNextLigatureEh+0x86>
 800a80a:	8bbb      	ldrh	r3, [r7, #28]
 800a80c:	3b0a      	subs	r3, #10
 800a80e:	6a3a      	ldr	r2, [r7, #32]
 800a810:	f832 3013 	ldrh.w	r3, [r2, r3, lsl #1]
 800a814:	f640 123f 	movw	r2, #2367	@ 0x93f
 800a818:	4293      	cmp	r3, r2
 800a81a:	bf0c      	ite	eq
 800a81c:	2301      	moveq	r3, #1
 800a81e:	2300      	movne	r3, #0
 800a820:	b2db      	uxtb	r3, r3
 800a822:	2b00      	cmp	r3, #0
 800a824:	d03f      	beq.n	800a8a6 <_ZN8touchgfx12TextProvider15getNextLigatureEh+0x11e>
        {
            nextCharacters.replaceAt1(nextCharacters.peekChar());
 800a826:	687b      	ldr	r3, [r7, #4]
 800a828:	3322      	adds	r3, #34	@ 0x22
 800a82a:	687a      	ldr	r2, [r7, #4]
 800a82c:	3222      	adds	r2, #34	@ 0x22
 800a82e:	60ba      	str	r2, [r7, #8]
            assert(used > 0);
 800a830:	68ba      	ldr	r2, [r7, #8]
 800a832:	8ad2      	ldrh	r2, [r2, #22]
 800a834:	2a00      	cmp	r2, #0
 800a836:	d105      	bne.n	800a844 <_ZN8touchgfx12TextProvider15getNextLigatureEh+0xbc>
 800a838:	4b1f      	ldr	r3, [pc, #124]	@ (800a8b8 <_ZN8touchgfx12TextProvider15getNextLigatureEh+0x130>)
 800a83a:	4a20      	ldr	r2, [pc, #128]	@ (800a8bc <_ZN8touchgfx12TextProvider15getNextLigatureEh+0x134>)
 800a83c:	21c5      	movs	r1, #197	@ 0xc5
 800a83e:	4820      	ldr	r0, [pc, #128]	@ (800a8c0 <_ZN8touchgfx12TextProvider15getNextLigatureEh+0x138>)
 800a840:	f017 fe26 	bl	8022490 <__assert_func>
            return buffer[pos];
 800a844:	68ba      	ldr	r2, [r7, #8]
 800a846:	8a92      	ldrh	r2, [r2, #20]
 800a848:	4611      	mov	r1, r2
 800a84a:	68ba      	ldr	r2, [r7, #8]
 800a84c:	f832 2011 	ldrh.w	r2, [r2, r1, lsl #1]
 800a850:	613b      	str	r3, [r7, #16]
 800a852:	4613      	mov	r3, r2
 800a854:	81fb      	strh	r3, [r7, #14]
            buffer[pos] = newChar;
        }

        FORCE_INLINE_FUNCTION void replaceAt1(Unicode::UnicodeChar newChar)
        {
            assert(used > 1);
 800a856:	693b      	ldr	r3, [r7, #16]
 800a858:	8adb      	ldrh	r3, [r3, #22]
 800a85a:	2b01      	cmp	r3, #1
 800a85c:	d806      	bhi.n	800a86c <_ZN8touchgfx12TextProvider15getNextLigatureEh+0xe4>
 800a85e:	4b1b      	ldr	r3, [pc, #108]	@ (800a8cc <_ZN8touchgfx12TextProvider15getNextLigatureEh+0x144>)
 800a860:	4a1b      	ldr	r2, [pc, #108]	@ (800a8d0 <_ZN8touchgfx12TextProvider15getNextLigatureEh+0x148>)
 800a862:	f44f 718e 	mov.w	r1, #284	@ 0x11c
 800a866:	4816      	ldr	r0, [pc, #88]	@ (800a8c0 <_ZN8touchgfx12TextProvider15getNextLigatureEh+0x138>)
 800a868:	f017 fe12 	bl	8022490 <__assert_func>
            const uint16_t index = pos + 1;
 800a86c:	693b      	ldr	r3, [r7, #16]
 800a86e:	8a9b      	ldrh	r3, [r3, #20]
 800a870:	3301      	adds	r3, #1
 800a872:	81bb      	strh	r3, [r7, #12]
            buffer[index < size ? index : 0] = newChar;
 800a874:	89bb      	ldrh	r3, [r7, #12]
 800a876:	2b09      	cmp	r3, #9
 800a878:	d801      	bhi.n	800a87e <_ZN8touchgfx12TextProvider15getNextLigatureEh+0xf6>
 800a87a:	89bb      	ldrh	r3, [r7, #12]
 800a87c:	e000      	b.n	800a880 <_ZN8touchgfx12TextProvider15getNextLigatureEh+0xf8>
 800a87e:	2300      	movs	r3, #0
 800a880:	693a      	ldr	r2, [r7, #16]
 800a882:	89f9      	ldrh	r1, [r7, #14]
 800a884:	f822 1013 	strh.w	r1, [r2, r3, lsl #1]
        }
 800a888:	bf00      	nop
            nextCharacters.replaceAt0(0x093F);
 800a88a:	687b      	ldr	r3, [r7, #4]
 800a88c:	3322      	adds	r3, #34	@ 0x22
 800a88e:	61bb      	str	r3, [r7, #24]
 800a890:	f640 133f 	movw	r3, #2367	@ 0x93f
 800a894:	82fb      	strh	r3, [r7, #22]
            buffer[pos] = newChar;
 800a896:	69bb      	ldr	r3, [r7, #24]
 800a898:	8a9b      	ldrh	r3, [r3, #20]
 800a89a:	4619      	mov	r1, r3
 800a89c:	69bb      	ldr	r3, [r7, #24]
 800a89e:	8afa      	ldrh	r2, [r7, #22]
 800a8a0:	f823 2011 	strh.w	r2, [r3, r1, lsl #1]
        }
 800a8a4:	bf00      	nop
        }
    }
    return getNextChar();
 800a8a6:	6878      	ldr	r0, [r7, #4]
 800a8a8:	f008 f90a 	bl	8012ac0 <_ZN8touchgfx12TextProvider11getNextCharEv>
 800a8ac:	4603      	mov	r3, r0
}
 800a8ae:	4618      	mov	r0, r3
 800a8b0:	3728      	adds	r7, #40	@ 0x28
 800a8b2:	46bd      	mov	sp, r7
 800a8b4:	bd80      	pop	{r7, pc}
 800a8b6:	bf00      	nop
 800a8b8:	080238dc 	.word	0x080238dc
 800a8bc:	080238e8 	.word	0x080238e8
 800a8c0:	08023994 	.word	0x08023994
 800a8c4:	080239dc 	.word	0x080239dc
 800a8c8:	080239ec 	.word	0x080239ec
 800a8cc:	08023ac0 	.word	0x08023ac0
 800a8d0:	08023acc 	.word	0x08023acc

0800a8d4 <_ZN8touchgfx12TextProvider18initializeInternalEv>:

void touchgfx::TextProvider::initializeInternal()
{
 800a8d4:	b580      	push	{r7, lr}
 800a8d6:	b082      	sub	sp, #8
 800a8d8:	af00      	add	r7, sp, #0
 800a8da:	6078      	str	r0, [r7, #4]
    fillInputBuffer();
 800a8dc:	6878      	ldr	r0, [r7, #4]
 800a8de:	f008 f8b6 	bl	8012a4e <_ZN8touchgfx12TextProvider15fillInputBufferEv>
}
 800a8e2:	bf00      	nop
 800a8e4:	3708      	adds	r7, #8
 800a8e6:	46bd      	mov	sp, r7
 800a8e8:	bd80      	pop	{r7, pc}

0800a8ea <_ZN8touchgfx3LCD10drawStringENS_4RectERKS1_RKNS0_13StringVisualsEPKtz>:

void touchgfx::LCD::drawString(touchgfx::Rect widgetArea, const touchgfx::Rect& invalidatedArea, const touchgfx::LCD::StringVisuals& stringVisuals, const touchgfx::Unicode::UnicodeChar* format, ...)
{
 800a8ea:	b580      	push	{r7, lr}
 800a8ec:	b088      	sub	sp, #32
 800a8ee:	af02      	add	r7, sp, #8
 800a8f0:	60f8      	str	r0, [r7, #12]
 800a8f2:	1d38      	adds	r0, r7, #4
 800a8f4:	e880 0006 	stmia.w	r0, {r1, r2}
 800a8f8:	603b      	str	r3, [r7, #0]
    va_list pArg;
    va_start(pArg, format);
 800a8fa:	f107 0328 	add.w	r3, r7, #40	@ 0x28
 800a8fe:	617b      	str	r3, [r7, #20]
    drawStringLTR(widgetArea, invalidatedArea, stringVisuals, format, pArg);
 800a900:	1d39      	adds	r1, r7, #4
 800a902:	697b      	ldr	r3, [r7, #20]
 800a904:	9301      	str	r3, [sp, #4]
 800a906:	6a7b      	ldr	r3, [r7, #36]	@ 0x24
 800a908:	9300      	str	r3, [sp, #0]
 800a90a:	6a3b      	ldr	r3, [r7, #32]
 800a90c:	683a      	ldr	r2, [r7, #0]
 800a90e:	68f8      	ldr	r0, [r7, #12]
 800a910:	f005 fb60 	bl	800ffd4 <_ZN8touchgfx3LCD13drawStringLTRERKNS_4RectES3_RKNS0_13StringVisualsEPKtSt9__va_list>
    va_end(pArg);
}
 800a914:	bf00      	nop
 800a916:	3718      	adds	r7, #24
 800a918:	46bd      	mov	sp, r7
 800a91a:	bd80      	pop	{r7, pc}

0800a91c <_ZN8touchgfx5Texts11setLanguageEt>:
touchgfx::LanguageId touchgfx::Texts::currentLanguage = static_cast<touchgfx::LanguageId>(0);
static const touchgfx::Unicode::UnicodeChar* currentLanguagePtr = 0;
static const uint32_t* currentLanguageIndices = 0;

void touchgfx::Texts::setLanguage(touchgfx::LanguageId id)
{
 800a91c:	b590      	push	{r4, r7, lr}
 800a91e:	b085      	sub	sp, #20
 800a920:	af00      	add	r7, sp, #0
 800a922:	4603      	mov	r3, r0
 800a924:	80fb      	strh	r3, [r7, #6]
    const touchgfx::TypedText::TypedTextData* currentLanguageTypedText = 0;
 800a926:	2300      	movs	r3, #0
 800a928:	60fb      	str	r3, [r7, #12]
    if (id < 1)
 800a92a:	88fb      	ldrh	r3, [r7, #6]
 800a92c:	2b00      	cmp	r3, #0
 800a92e:	d127      	bne.n	800a980 <_ZN8touchgfx5Texts11setLanguageEt+0x64>
    {
        if (languagesArray[id] != 0)
 800a930:	88fb      	ldrh	r3, [r7, #6]
 800a932:	4a1e      	ldr	r2, [pc, #120]	@ (800a9ac <_ZN8touchgfx5Texts11setLanguageEt+0x90>)
 800a934:	f852 3023 	ldr.w	r3, [r2, r3, lsl #2]
 800a938:	2b00      	cmp	r3, #0
 800a93a:	d016      	beq.n	800a96a <_ZN8touchgfx5Texts11setLanguageEt+0x4e>
        {
            // Dynamic translation is added
            const TranslationHeader* translation = languagesArray[id];
 800a93c:	88fb      	ldrh	r3, [r7, #6]
 800a93e:	4a1b      	ldr	r2, [pc, #108]	@ (800a9ac <_ZN8touchgfx5Texts11setLanguageEt+0x90>)
 800a940:	f852 3023 	ldr.w	r3, [r2, r3, lsl #2]
 800a944:	60bb      	str	r3, [r7, #8]
            currentLanguagePtr = (const touchgfx::Unicode::UnicodeChar*)(((const uint8_t*)translation) + translation->offset_to_texts);
 800a946:	68bb      	ldr	r3, [r7, #8]
 800a948:	681b      	ldr	r3, [r3, #0]
 800a94a:	68ba      	ldr	r2, [r7, #8]
 800a94c:	4413      	add	r3, r2
 800a94e:	4a18      	ldr	r2, [pc, #96]	@ (800a9b0 <_ZN8touchgfx5Texts11setLanguageEt+0x94>)
 800a950:	6013      	str	r3, [r2, #0]
            currentLanguageIndices = (const uint32_t*)(((const uint8_t*)translation) + translation->offset_to_indices);
 800a952:	68bb      	ldr	r3, [r7, #8]
 800a954:	685b      	ldr	r3, [r3, #4]
 800a956:	68ba      	ldr	r2, [r7, #8]
 800a958:	4413      	add	r3, r2
 800a95a:	4a16      	ldr	r2, [pc, #88]	@ (800a9b4 <_ZN8touchgfx5Texts11setLanguageEt+0x98>)
 800a95c:	6013      	str	r3, [r2, #0]
            currentLanguageTypedText = (const touchgfx::TypedText::TypedTextData*)(((const uint8_t*)translation) + translation->offset_to_typedtext);
 800a95e:	68bb      	ldr	r3, [r7, #8]
 800a960:	689b      	ldr	r3, [r3, #8]
 800a962:	68ba      	ldr	r2, [r7, #8]
 800a964:	4413      	add	r3, r2
 800a966:	60fb      	str	r3, [r7, #12]
 800a968:	e00a      	b.n	800a980 <_ZN8touchgfx5Texts11setLanguageEt+0x64>
        }
        else
        {
            // Compiled and linked in languages
            currentLanguagePtr = texts_all_languages;
 800a96a:	4b11      	ldr	r3, [pc, #68]	@ (800a9b0 <_ZN8touchgfx5Texts11setLanguageEt+0x94>)
 800a96c:	4a12      	ldr	r2, [pc, #72]	@ (800a9b8 <_ZN8touchgfx5Texts11setLanguageEt+0x9c>)
 800a96e:	601a      	str	r2, [r3, #0]
            currentLanguageIndices = staticLanguageIndices[id];
 800a970:	4a12      	ldr	r2, [pc, #72]	@ (800a9bc <_ZN8touchgfx5Texts11setLanguageEt+0xa0>)
 800a972:	4b10      	ldr	r3, [pc, #64]	@ (800a9b4 <_ZN8touchgfx5Texts11setLanguageEt+0x98>)
 800a974:	601a      	str	r2, [r3, #0]
            currentLanguageTypedText = typedTextDatabaseArray[id];
 800a976:	88fb      	ldrh	r3, [r7, #6]
 800a978:	4a11      	ldr	r2, [pc, #68]	@ (800a9c0 <_ZN8touchgfx5Texts11setLanguageEt+0xa4>)
 800a97a:	f852 3023 	ldr.w	r3, [r2, r3, lsl #2]
 800a97e:	60fb      	str	r3, [r7, #12]
        }
    }

    if (currentLanguageTypedText)
 800a980:	68fb      	ldr	r3, [r7, #12]
 800a982:	2b00      	cmp	r3, #0
 800a984:	d00d      	beq.n	800a9a2 <_ZN8touchgfx5Texts11setLanguageEt+0x86>
    {
        currentLanguage = id;
 800a986:	4a0f      	ldr	r2, [pc, #60]	@ (800a9c4 <_ZN8touchgfx5Texts11setLanguageEt+0xa8>)
 800a988:	88fb      	ldrh	r3, [r7, #6]
 800a98a:	8013      	strh	r3, [r2, #0]
        touchgfx::TypedText::registerTypedTextDatabase(currentLanguageTypedText,
                                                       TypedTextDatabase::getFonts(), TypedTextDatabase::getInstanceSize());
 800a98c:	f000 f83e 	bl	800aa0c <_ZN17TypedTextDatabase8getFontsEv>
 800a990:	4604      	mov	r4, r0
        touchgfx::TypedText::registerTypedTextDatabase(currentLanguageTypedText,
 800a992:	f000 f833 	bl	800a9fc <_ZN17TypedTextDatabase15getInstanceSizeEv>
 800a996:	4603      	mov	r3, r0
 800a998:	461a      	mov	r2, r3
 800a99a:	4621      	mov	r1, r4
 800a99c:	68f8      	ldr	r0, [r7, #12]
 800a99e:	f7ff fea5 	bl	800a6ec <_ZN8touchgfx9TypedText25registerTypedTextDatabaseEPKNS0_13TypedTextDataEPKPKNS_4FontEt>
    }
}
 800a9a2:	bf00      	nop
 800a9a4:	3714      	adds	r7, #20
 800a9a6:	46bd      	mov	sp, r7
 800a9a8:	bd90      	pop	{r4, r7, pc}
 800a9aa:	bf00      	nop
 800a9ac:	20000668 	.word	0x20000668
 800a9b0:	20000670 	.word	0x20000670
 800a9b4:	20000674 	.word	0x20000674
 800a9b8:	0806ee24 	.word	0x0806ee24
 800a9bc:	0806ee14 	.word	0x0806ee14
 800a9c0:	0806ee70 	.word	0x0806ee70
 800a9c4:	2000066c 	.word	0x2000066c

0800a9c8 <_ZNK8touchgfx5Texts7getTextEt>:
{
    languagesArray[id] = (const TranslationHeader*)translation;
}

const touchgfx::Unicode::UnicodeChar* touchgfx::Texts::getText(TypedTextId id) const
{
 800a9c8:	b480      	push	{r7}
 800a9ca:	b083      	sub	sp, #12
 800a9cc:	af00      	add	r7, sp, #0
 800a9ce:	6078      	str	r0, [r7, #4]
 800a9d0:	460b      	mov	r3, r1
 800a9d2:	807b      	strh	r3, [r7, #2]
    return &currentLanguagePtr[currentLanguageIndices[id]];
 800a9d4:	4b07      	ldr	r3, [pc, #28]	@ (800a9f4 <_ZNK8touchgfx5Texts7getTextEt+0x2c>)
 800a9d6:	681a      	ldr	r2, [r3, #0]
 800a9d8:	4b07      	ldr	r3, [pc, #28]	@ (800a9f8 <_ZNK8touchgfx5Texts7getTextEt+0x30>)
 800a9da:	6819      	ldr	r1, [r3, #0]
 800a9dc:	887b      	ldrh	r3, [r7, #2]
 800a9de:	009b      	lsls	r3, r3, #2
 800a9e0:	440b      	add	r3, r1
 800a9e2:	681b      	ldr	r3, [r3, #0]
 800a9e4:	005b      	lsls	r3, r3, #1
 800a9e6:	4413      	add	r3, r2
}
 800a9e8:	4618      	mov	r0, r3
 800a9ea:	370c      	adds	r7, #12
 800a9ec:	46bd      	mov	sp, r7
 800a9ee:	f85d 7b04 	ldr.w	r7, [sp], #4
 800a9f2:	4770      	bx	lr
 800a9f4:	20000670 	.word	0x20000670
 800a9f8:	20000674 	.word	0x20000674

0800a9fc <_ZN17TypedTextDatabase15getInstanceSizeEv>:
{
    return typedTextDatabaseArray[id];
}

uint16_t getInstanceSize()
{
 800a9fc:	b480      	push	{r7}
 800a9fe:	af00      	add	r7, sp, #0
    return sizeof(typedText_database_DEFAULT) / sizeof(touchgfx::TypedText::TypedTextData);
 800aa00:	2304      	movs	r3, #4
}
 800aa02:	4618      	mov	r0, r3
 800aa04:	46bd      	mov	sp, r7
 800aa06:	f85d 7b04 	ldr.w	r7, [sp], #4
 800aa0a:	4770      	bx	lr

0800aa0c <_ZN17TypedTextDatabase8getFontsEv>:

const touchgfx::Font** getFonts()
{
 800aa0c:	b480      	push	{r7}
 800aa0e:	af00      	add	r7, sp, #0
    return touchgfx_fonts;
 800aa10:	4b02      	ldr	r3, [pc, #8]	@ (800aa1c <_ZN17TypedTextDatabase8getFontsEv+0x10>)
}
 800aa12:	4618      	mov	r0, r3
 800aa14:	46bd      	mov	sp, r7
 800aa16:	f85d 7b04 	ldr.w	r7, [sp], #4
 800aa1a:	4770      	bx	lr
 800aa1c:	20000678 	.word	0x20000678

0800aa20 <_Z41__static_initialization_and_destruction_0ii>:
    case 1:
        touchgfx_fonts[1] = &(getFont_verdana_30_4bpp());
        break;
    }
}
} // namespace TypedTextDatabase
 800aa20:	b580      	push	{r7, lr}
 800aa22:	b082      	sub	sp, #8
 800aa24:	af00      	add	r7, sp, #0
 800aa26:	6078      	str	r0, [r7, #4]
 800aa28:	6039      	str	r1, [r7, #0]
 800aa2a:	687b      	ldr	r3, [r7, #4]
 800aa2c:	2b01      	cmp	r3, #1
 800aa2e:	d10e      	bne.n	800aa4e <_Z41__static_initialization_and_destruction_0ii+0x2e>
 800aa30:	683b      	ldr	r3, [r7, #0]
 800aa32:	f64f 72ff 	movw	r2, #65535	@ 0xffff
 800aa36:	4293      	cmp	r3, r2
 800aa38:	d109      	bne.n	800aa4e <_Z41__static_initialization_and_destruction_0ii+0x2e>
    &(getFont_Asap_Regular_80_4bpp()),
 800aa3a:	f7fd fde5 	bl	8008608 <_Z28getFont_Asap_Regular_80_4bppv>
 800aa3e:	4603      	mov	r3, r0
};
 800aa40:	4a05      	ldr	r2, [pc, #20]	@ (800aa58 <_Z41__static_initialization_and_destruction_0ii+0x38>)
 800aa42:	6013      	str	r3, [r2, #0]
    &(getFont_verdana_30_4bpp())
 800aa44:	f7fd fe3a 	bl	80086bc <_Z23getFont_verdana_30_4bppv>
 800aa48:	4603      	mov	r3, r0
};
 800aa4a:	4a03      	ldr	r2, [pc, #12]	@ (800aa58 <_Z41__static_initialization_and_destruction_0ii+0x38>)
 800aa4c:	6053      	str	r3, [r2, #4]
} // namespace TypedTextDatabase
 800aa4e:	bf00      	nop
 800aa50:	3708      	adds	r7, #8
 800aa52:	46bd      	mov	sp, r7
 800aa54:	bd80      	pop	{r7, pc}
 800aa56:	bf00      	nop
 800aa58:	20000678 	.word	0x20000678

0800aa5c <_GLOBAL__sub_I_touchgfx_fonts>:
 800aa5c:	b580      	push	{r7, lr}
 800aa5e:	af00      	add	r7, sp, #0
 800aa60:	f64f 71ff 	movw	r1, #65535	@ 0xffff
 800aa64:	2001      	movs	r0, #1
 800aa66:	f7ff ffdb 	bl	800aa20 <_Z41__static_initialization_and_destruction_0ii>
 800aa6a:	bd80      	pop	{r7, pc}

0800aa6c <_ZN19FrontendApplicationD1Ev>:

class FrontendApplication : public FrontendApplicationBase
{
public:
    FrontendApplication(Model& m, FrontendHeap& heap);
    virtual ~FrontendApplication() { }
 800aa6c:	b580      	push	{r7, lr}
 800aa6e:	b082      	sub	sp, #8
 800aa70:	af00      	add	r7, sp, #0
 800aa72:	6078      	str	r0, [r7, #4]
 800aa74:	4a05      	ldr	r2, [pc, #20]	@ (800aa8c <_ZN19FrontendApplicationD1Ev+0x20>)
 800aa76:	687b      	ldr	r3, [r7, #4]
 800aa78:	601a      	str	r2, [r3, #0]
 800aa7a:	687b      	ldr	r3, [r7, #4]
 800aa7c:	4618      	mov	r0, r3
 800aa7e:	f7fe f87d 	bl	8008b7c <_ZN23FrontendApplicationBaseD1Ev>
 800aa82:	687b      	ldr	r3, [r7, #4]
 800aa84:	4618      	mov	r0, r3
 800aa86:	3708      	adds	r7, #8
 800aa88:	46bd      	mov	sp, r7
 800aa8a:	bd80      	pop	{r7, pc}
 800aa8c:	0802497c 	.word	0x0802497c

0800aa90 <_ZN19FrontendApplicationD0Ev>:
 800aa90:	b580      	push	{r7, lr}
 800aa92:	b082      	sub	sp, #8
 800aa94:	af00      	add	r7, sp, #0
 800aa96:	6078      	str	r0, [r7, #4]
 800aa98:	6878      	ldr	r0, [r7, #4]
 800aa9a:	f7ff ffe7 	bl	800aa6c <_ZN19FrontendApplicationD1Ev>
 800aa9e:	f44f 71ae 	mov.w	r1, #348	@ 0x15c
 800aaa2:	6878      	ldr	r0, [r7, #4]
 800aaa4:	f017 fc47 	bl	8022336 <_ZdlPvj>
 800aaa8:	687b      	ldr	r3, [r7, #4]
 800aaaa:	4618      	mov	r0, r3
 800aaac:	3708      	adds	r7, #8
 800aaae:	46bd      	mov	sp, r7
 800aab0:	bd80      	pop	{r7, pc}

0800aab2 <_ZN19FrontendApplication15handleTickEventEv>:

    virtual void handleTickEvent()
 800aab2:	b580      	push	{r7, lr}
 800aab4:	b082      	sub	sp, #8
 800aab6:	af00      	add	r7, sp, #0
 800aab8:	6078      	str	r0, [r7, #4]
    {
        model.tick();
 800aaba:	687b      	ldr	r3, [r7, #4]
 800aabc:	f8d3 3158 	ldr.w	r3, [r3, #344]	@ 0x158
 800aac0:	4618      	mov	r0, r3
 800aac2:	f000 fa81 	bl	800afc8 <_ZN5Model4tickEv>
        FrontendApplicationBase::handleTickEvent();
 800aac6:	687b      	ldr	r3, [r7, #4]
 800aac8:	4618      	mov	r0, r3
 800aaca:	f005 ff5d 	bl	8010988 <_ZN8touchgfx11Application15handleTickEventEv>
    }
 800aace:	bf00      	nop
 800aad0:	3708      	adds	r7, #8
 800aad2:	46bd      	mov	sp, r7
 800aad4:	bd80      	pop	{r7, pc}
	...

0800aad8 <_ZN19FrontendApplicationC1ER5ModelR12FrontendHeap>:
#include <gui/common/FrontendApplication.hpp>

FrontendApplication::FrontendApplication(Model& m, FrontendHeap& heap)
 800aad8:	b580      	push	{r7, lr}
 800aada:	b084      	sub	sp, #16
 800aadc:	af00      	add	r7, sp, #0
 800aade:	60f8      	str	r0, [r7, #12]
 800aae0:	60b9      	str	r1, [r7, #8]
 800aae2:	607a      	str	r2, [r7, #4]
    : FrontendApplicationBase(m, heap)
 800aae4:	68fb      	ldr	r3, [r7, #12]
 800aae6:	687a      	ldr	r2, [r7, #4]
 800aae8:	68b9      	ldr	r1, [r7, #8]
 800aaea:	4618      	mov	r0, r3
 800aaec:	f7fe f896 	bl	8008c1c <_ZN23FrontendApplicationBaseC1ER5ModelR12FrontendHeap>
 800aaf0:	4a03      	ldr	r2, [pc, #12]	@ (800ab00 <_ZN19FrontendApplicationC1ER5ModelR12FrontendHeap+0x28>)
 800aaf2:	68fb      	ldr	r3, [r7, #12]
 800aaf4:	601a      	str	r2, [r3, #0]
{
}
 800aaf6:	68fb      	ldr	r3, [r7, #12]
 800aaf8:	4618      	mov	r0, r3
 800aafa:	3710      	adds	r7, #16
 800aafc:	46bd      	mov	sp, r7
 800aafe:	bd80      	pop	{r7, pc}
 800ab00:	0802497c 	.word	0x0802497c

0800ab04 <_ZN8touchgfx9Presenter8activateEv>:
     * Place initialization code for the Presenter here.
     *
     * The activate function is called automatically when a screen transition causes this
     * Presenter to become active. Place initialization code for the Presenter here.
     */
    virtual void activate()
 800ab04:	b480      	push	{r7}
 800ab06:	b083      	sub	sp, #12
 800ab08:	af00      	add	r7, sp, #0
 800ab0a:	6078      	str	r0, [r7, #4]
    {
    }
 800ab0c:	bf00      	nop
 800ab0e:	370c      	adds	r7, #12
 800ab10:	46bd      	mov	sp, r7
 800ab12:	f85d 7b04 	ldr.w	r7, [sp], #4
 800ab16:	4770      	bx	lr

0800ab18 <_ZN8touchgfx9Presenter10deactivateEv>:
     * Place cleanup code for the Presenter here.
     *
     * The deactivate function is called automatically when a screen transition causes this
     * Presenter to become inactive. Place cleanup code for the Presenter here.
     */
    virtual void deactivate()
 800ab18:	b480      	push	{r7}
 800ab1a:	b083      	sub	sp, #12
 800ab1c:	af00      	add	r7, sp, #0
 800ab1e:	6078      	str	r0, [r7, #4]
    {
    }
 800ab20:	bf00      	nop
 800ab22:	370c      	adds	r7, #12
 800ab24:	46bd      	mov	sp, r7
 800ab26:	f85d 7b04 	ldr.w	r7, [sp], #4
 800ab2a:	4770      	bx	lr

0800ab2c <_ZN8touchgfx9PresenterD1Ev>:

    /** Finalizes an instance of the Presenter class. */
    virtual ~Presenter()
 800ab2c:	b480      	push	{r7}
 800ab2e:	b083      	sub	sp, #12
 800ab30:	af00      	add	r7, sp, #0
 800ab32:	6078      	str	r0, [r7, #4]
    {
 800ab34:	4a04      	ldr	r2, [pc, #16]	@ (800ab48 <_ZN8touchgfx9PresenterD1Ev+0x1c>)
 800ab36:	687b      	ldr	r3, [r7, #4]
 800ab38:	601a      	str	r2, [r3, #0]
    }
 800ab3a:	687b      	ldr	r3, [r7, #4]
 800ab3c:	4618      	mov	r0, r3
 800ab3e:	370c      	adds	r7, #12
 800ab40:	46bd      	mov	sp, r7
 800ab42:	f85d 7b04 	ldr.w	r7, [sp], #4
 800ab46:	4770      	bx	lr
 800ab48:	08024a2c 	.word	0x08024a2c

0800ab4c <_ZN8touchgfx9PresenterD0Ev>:
    virtual ~Presenter()
 800ab4c:	b580      	push	{r7, lr}
 800ab4e:	b082      	sub	sp, #8
 800ab50:	af00      	add	r7, sp, #0
 800ab52:	6078      	str	r0, [r7, #4]
    }
 800ab54:	6878      	ldr	r0, [r7, #4]
 800ab56:	f7ff ffe9 	bl	800ab2c <_ZN8touchgfx9PresenterD1Ev>
 800ab5a:	2104      	movs	r1, #4
 800ab5c:	6878      	ldr	r0, [r7, #4]
 800ab5e:	f017 fbea 	bl	8022336 <_ZdlPvj>
 800ab62:	687b      	ldr	r3, [r7, #4]
 800ab64:	4618      	mov	r0, r3
 800ab66:	3708      	adds	r7, #8
 800ab68:	46bd      	mov	sp, r7
 800ab6a:	bd80      	pop	{r7, pc}

0800ab6c <_ZN8touchgfx9PresenterC1Ev>:

protected:
    /** Initializes a new instance of the Presenter class. */
    Presenter()
 800ab6c:	b480      	push	{r7}
 800ab6e:	b083      	sub	sp, #12
 800ab70:	af00      	add	r7, sp, #0
 800ab72:	6078      	str	r0, [r7, #4]
    {
 800ab74:	4a04      	ldr	r2, [pc, #16]	@ (800ab88 <_ZN8touchgfx9PresenterC1Ev+0x1c>)
 800ab76:	687b      	ldr	r3, [r7, #4]
 800ab78:	601a      	str	r2, [r3, #0]
    }
 800ab7a:	687b      	ldr	r3, [r7, #4]
 800ab7c:	4618      	mov	r0, r3
 800ab7e:	370c      	adds	r7, #12
 800ab80:	46bd      	mov	sp, r7
 800ab82:	f85d 7b04 	ldr.w	r7, [sp], #4
 800ab86:	4770      	bx	lr
 800ab88:	08024a2c 	.word	0x08024a2c

0800ab8c <_ZN13ModelListenerC1Ev>:
    ModelListener() : model(0) {}
 800ab8c:	b480      	push	{r7}
 800ab8e:	b083      	sub	sp, #12
 800ab90:	af00      	add	r7, sp, #0
 800ab92:	6078      	str	r0, [r7, #4]
 800ab94:	4a06      	ldr	r2, [pc, #24]	@ (800abb0 <_ZN13ModelListenerC1Ev+0x24>)
 800ab96:	687b      	ldr	r3, [r7, #4]
 800ab98:	601a      	str	r2, [r3, #0]
 800ab9a:	687b      	ldr	r3, [r7, #4]
 800ab9c:	2200      	movs	r2, #0
 800ab9e:	605a      	str	r2, [r3, #4]
 800aba0:	687b      	ldr	r3, [r7, #4]
 800aba2:	4618      	mov	r0, r3
 800aba4:	370c      	adds	r7, #12
 800aba6:	46bd      	mov	sp, r7
 800aba8:	f85d 7b04 	ldr.w	r7, [sp], #4
 800abac:	4770      	bx	lr
 800abae:	bf00      	nop
 800abb0:	08024a10 	.word	0x08024a10

0800abb4 <_ZN13ModelListenerD1Ev>:
    virtual ~ModelListener() {}
 800abb4:	b480      	push	{r7}
 800abb6:	b083      	sub	sp, #12
 800abb8:	af00      	add	r7, sp, #0
 800abba:	6078      	str	r0, [r7, #4]
 800abbc:	4a04      	ldr	r2, [pc, #16]	@ (800abd0 <_ZN13ModelListenerD1Ev+0x1c>)
 800abbe:	687b      	ldr	r3, [r7, #4]
 800abc0:	601a      	str	r2, [r3, #0]
 800abc2:	687b      	ldr	r3, [r7, #4]
 800abc4:	4618      	mov	r0, r3
 800abc6:	370c      	adds	r7, #12
 800abc8:	46bd      	mov	sp, r7
 800abca:	f85d 7b04 	ldr.w	r7, [sp], #4
 800abce:	4770      	bx	lr
 800abd0:	08024a10 	.word	0x08024a10

0800abd4 <_ZN13ModelListenerD0Ev>:
 800abd4:	b580      	push	{r7, lr}
 800abd6:	b082      	sub	sp, #8
 800abd8:	af00      	add	r7, sp, #0
 800abda:	6078      	str	r0, [r7, #4]
 800abdc:	6878      	ldr	r0, [r7, #4]
 800abde:	f7ff ffe9 	bl	800abb4 <_ZN13ModelListenerD1Ev>
 800abe2:	2108      	movs	r1, #8
 800abe4:	6878      	ldr	r0, [r7, #4]
 800abe6:	f017 fba6 	bl	8022336 <_ZdlPvj>
 800abea:	687b      	ldr	r3, [r7, #4]
 800abec:	4618      	mov	r0, r3
 800abee:	3708      	adds	r7, #8
 800abf0:	46bd      	mov	sp, r7
 800abf2:	bd80      	pop	{r7, pc}

0800abf4 <_ZN13ModelListener16notifyADCChangedEm>:


    virtual void notifyADCChanged(uint32_t newVal) {}
 800abf4:	b480      	push	{r7}
 800abf6:	b083      	sub	sp, #12
 800abf8:	af00      	add	r7, sp, #0
 800abfa:	6078      	str	r0, [r7, #4]
 800abfc:	6039      	str	r1, [r7, #0]
 800abfe:	bf00      	nop
 800ac00:	370c      	adds	r7, #12
 800ac02:	46bd      	mov	sp, r7
 800ac04:	f85d 7b04 	ldr.w	r7, [sp], #4
 800ac08:	4770      	bx	lr

0800ac0a <_ZN13ModelListener24notifyTemperatureChangedEf>:
    virtual void notifyTemperatureChanged(float newTemp) {}
 800ac0a:	b480      	push	{r7}
 800ac0c:	b083      	sub	sp, #12
 800ac0e:	af00      	add	r7, sp, #0
 800ac10:	6078      	str	r0, [r7, #4]
 800ac12:	ed87 0a00 	vstr	s0, [r7]
 800ac16:	bf00      	nop
 800ac18:	370c      	adds	r7, #12
 800ac1a:	46bd      	mov	sp, r7
 800ac1c:	f85d 7b04 	ldr.w	r7, [sp], #4
 800ac20:	4770      	bx	lr

0800ac22 <_ZN13ModelListener21notifyHumidityChangedEf>:
    virtual void notifyHumidityChanged(float newHumidity) {}
 800ac22:	b480      	push	{r7}
 800ac24:	b083      	sub	sp, #12
 800ac26:	af00      	add	r7, sp, #0
 800ac28:	6078      	str	r0, [r7, #4]
 800ac2a:	ed87 0a00 	vstr	s0, [r7]
 800ac2e:	bf00      	nop
 800ac30:	370c      	adds	r7, #12
 800ac32:	46bd      	mov	sp, r7
 800ac34:	f85d 7b04 	ldr.w	r7, [sp], #4
 800ac38:	4770      	bx	lr
	...

0800ac3c <_ZN13MainPresenterD1Ev>:
     * The deactivate function is called automatically when this screen is "switched out"
     * (ie. made inactive). Teardown functionality can be placed here.
     */
    virtual void deactivate();

    virtual ~MainPresenter() {};
 800ac3c:	b580      	push	{r7, lr}
 800ac3e:	b082      	sub	sp, #8
 800ac40:	af00      	add	r7, sp, #0
 800ac42:	6078      	str	r0, [r7, #4]
 800ac44:	4a09      	ldr	r2, [pc, #36]	@ (800ac6c <_ZN13MainPresenterD1Ev+0x30>)
 800ac46:	687b      	ldr	r3, [r7, #4]
 800ac48:	601a      	str	r2, [r3, #0]
 800ac4a:	4a09      	ldr	r2, [pc, #36]	@ (800ac70 <_ZN13MainPresenterD1Ev+0x34>)
 800ac4c:	687b      	ldr	r3, [r7, #4]
 800ac4e:	605a      	str	r2, [r3, #4]
 800ac50:	687b      	ldr	r3, [r7, #4]
 800ac52:	3304      	adds	r3, #4
 800ac54:	4618      	mov	r0, r3
 800ac56:	f7ff ffad 	bl	800abb4 <_ZN13ModelListenerD1Ev>
 800ac5a:	687b      	ldr	r3, [r7, #4]
 800ac5c:	4618      	mov	r0, r3
 800ac5e:	f7ff ff65 	bl	800ab2c <_ZN8touchgfx9PresenterD1Ev>
 800ac62:	687b      	ldr	r3, [r7, #4]
 800ac64:	4618      	mov	r0, r3
 800ac66:	3708      	adds	r7, #8
 800ac68:	46bd      	mov	sp, r7
 800ac6a:	bd80      	pop	{r7, pc}
 800ac6c:	080249d0 	.word	0x080249d0
 800ac70:	080249f4 	.word	0x080249f4

0800ac74 <_ZThn4_N13MainPresenterD1Ev>:
 800ac74:	f1a0 0004 	sub.w	r0, r0, #4
 800ac78:	e7e0      	b.n	800ac3c <_ZN13MainPresenterD1Ev>
 800ac7a:	bf00      	nop

0800ac7c <_ZN13MainPresenterD0Ev>:
 800ac7c:	b580      	push	{r7, lr}
 800ac7e:	b082      	sub	sp, #8
 800ac80:	af00      	add	r7, sp, #0
 800ac82:	6078      	str	r0, [r7, #4]
 800ac84:	6878      	ldr	r0, [r7, #4]
 800ac86:	f7ff ffd9 	bl	800ac3c <_ZN13MainPresenterD1Ev>
 800ac8a:	2110      	movs	r1, #16
 800ac8c:	6878      	ldr	r0, [r7, #4]
 800ac8e:	f017 fb52 	bl	8022336 <_ZdlPvj>
 800ac92:	687b      	ldr	r3, [r7, #4]
 800ac94:	4618      	mov	r0, r3
 800ac96:	3708      	adds	r7, #8
 800ac98:	46bd      	mov	sp, r7
 800ac9a:	bd80      	pop	{r7, pc}

0800ac9c <_ZThn4_N13MainPresenterD0Ev>:
 800ac9c:	f1a0 0004 	sub.w	r0, r0, #4
 800aca0:	e7ec      	b.n	800ac7c <_ZN13MainPresenterD0Ev>
	...

0800aca4 <_ZN13MainPresenterC1ER8MainView>:
#include <gui/main_screen/MainView.hpp>
#include <gui/main_screen/MainPresenter.hpp>

MainPresenter::MainPresenter(MainView& v)
 800aca4:	b580      	push	{r7, lr}
 800aca6:	b082      	sub	sp, #8
 800aca8:	af00      	add	r7, sp, #0
 800acaa:	6078      	str	r0, [r7, #4]
 800acac:	6039      	str	r1, [r7, #0]
    : view(v)
 800acae:	687b      	ldr	r3, [r7, #4]
 800acb0:	4618      	mov	r0, r3
 800acb2:	f7ff ff5b 	bl	800ab6c <_ZN8touchgfx9PresenterC1Ev>
 800acb6:	687b      	ldr	r3, [r7, #4]
 800acb8:	3304      	adds	r3, #4
 800acba:	4618      	mov	r0, r3
 800acbc:	f7ff ff66 	bl	800ab8c <_ZN13ModelListenerC1Ev>
 800acc0:	4a06      	ldr	r2, [pc, #24]	@ (800acdc <_ZN13MainPresenterC1ER8MainView+0x38>)
 800acc2:	687b      	ldr	r3, [r7, #4]
 800acc4:	601a      	str	r2, [r3, #0]
 800acc6:	4a06      	ldr	r2, [pc, #24]	@ (800ace0 <_ZN13MainPresenterC1ER8MainView+0x3c>)
 800acc8:	687b      	ldr	r3, [r7, #4]
 800acca:	605a      	str	r2, [r3, #4]
 800accc:	687b      	ldr	r3, [r7, #4]
 800acce:	683a      	ldr	r2, [r7, #0]
 800acd0:	60da      	str	r2, [r3, #12]
{
}
 800acd2:	687b      	ldr	r3, [r7, #4]
 800acd4:	4618      	mov	r0, r3
 800acd6:	3708      	adds	r7, #8
 800acd8:	46bd      	mov	sp, r7
 800acda:	bd80      	pop	{r7, pc}
 800acdc:	080249d0 	.word	0x080249d0
 800ace0:	080249f4 	.word	0x080249f4

0800ace4 <_ZN13MainPresenter8activateEv>:

void MainPresenter::activate()
{
 800ace4:	b480      	push	{r7}
 800ace6:	b083      	sub	sp, #12
 800ace8:	af00      	add	r7, sp, #0
 800acea:	6078      	str	r0, [r7, #4]
}
 800acec:	bf00      	nop
 800acee:	370c      	adds	r7, #12
 800acf0:	46bd      	mov	sp, r7
 800acf2:	f85d 7b04 	ldr.w	r7, [sp], #4
 800acf6:	4770      	bx	lr

0800acf8 <_ZN13MainPresenter10deactivateEv>:

void MainPresenter::deactivate()
{
 800acf8:	b480      	push	{r7}
 800acfa:	b083      	sub	sp, #12
 800acfc:	af00      	add	r7, sp, #0
 800acfe:	6078      	str	r0, [r7, #4]
}
 800ad00:	bf00      	nop
 800ad02:	370c      	adds	r7, #12
 800ad04:	46bd      	mov	sp, r7
 800ad06:	f85d 7b04 	ldr.w	r7, [sp], #4
 800ad0a:	4770      	bx	lr

0800ad0c <_ZN13MainPresenter16notifyADCChangedEm>:


void MainPresenter::notifyADCChanged(uint32_t newVal){
 800ad0c:	b580      	push	{r7, lr}
 800ad0e:	b082      	sub	sp, #8
 800ad10:	af00      	add	r7, sp, #0
 800ad12:	6078      	str	r0, [r7, #4]
 800ad14:	6039      	str	r1, [r7, #0]
	view.setVal(newVal);
 800ad16:	687b      	ldr	r3, [r7, #4]
 800ad18:	68da      	ldr	r2, [r3, #12]
 800ad1a:	687b      	ldr	r3, [r7, #4]
 800ad1c:	68db      	ldr	r3, [r3, #12]
 800ad1e:	681b      	ldr	r3, [r3, #0]
 800ad20:	3338      	adds	r3, #56	@ 0x38
 800ad22:	681b      	ldr	r3, [r3, #0]
 800ad24:	6839      	ldr	r1, [r7, #0]
 800ad26:	4610      	mov	r0, r2
 800ad28:	4798      	blx	r3
}
 800ad2a:	bf00      	nop
 800ad2c:	3708      	adds	r7, #8
 800ad2e:	46bd      	mov	sp, r7
 800ad30:	bd80      	pop	{r7, pc}

0800ad32 <_ZThn4_N13MainPresenter16notifyADCChangedEm>:

    virtual void notifyADCChanged(uint32_t newVal);
 800ad32:	f1a0 0004 	sub.w	r0, r0, #4
 800ad36:	f7ff bfe9 	b.w	800ad0c <_ZN13MainPresenter16notifyADCChangedEm>

0800ad3a <_ZN13MainPresenter24notifyTemperatureChangedEf>:

void MainPresenter::notifyTemperatureChanged(float newTemp){
 800ad3a:	b580      	push	{r7, lr}
 800ad3c:	b082      	sub	sp, #8
 800ad3e:	af00      	add	r7, sp, #0
 800ad40:	6078      	str	r0, [r7, #4]
 800ad42:	ed87 0a00 	vstr	s0, [r7]
	view.setTemperature(newTemp);
 800ad46:	687b      	ldr	r3, [r7, #4]
 800ad48:	68da      	ldr	r2, [r3, #12]
 800ad4a:	687b      	ldr	r3, [r7, #4]
 800ad4c:	68db      	ldr	r3, [r3, #12]
 800ad4e:	681b      	ldr	r3, [r3, #0]
 800ad50:	3340      	adds	r3, #64	@ 0x40
 800ad52:	681b      	ldr	r3, [r3, #0]
 800ad54:	ed97 0a00 	vldr	s0, [r7]
 800ad58:	4610      	mov	r0, r2
 800ad5a:	4798      	blx	r3

}
 800ad5c:	bf00      	nop
 800ad5e:	3708      	adds	r7, #8
 800ad60:	46bd      	mov	sp, r7
 800ad62:	bd80      	pop	{r7, pc}

0800ad64 <_ZThn4_N13MainPresenter24notifyTemperatureChangedEf>:
    virtual void notifyTemperatureChanged(float newTemp);
 800ad64:	f1a0 0004 	sub.w	r0, r0, #4
 800ad68:	f7ff bfe7 	b.w	800ad3a <_ZN13MainPresenter24notifyTemperatureChangedEf>

0800ad6c <_ZN13MainPresenter21notifyHumidityChangedEf>:

void MainPresenter::notifyHumidityChanged(float newHumidity){
 800ad6c:	b580      	push	{r7, lr}
 800ad6e:	b082      	sub	sp, #8
 800ad70:	af00      	add	r7, sp, #0
 800ad72:	6078      	str	r0, [r7, #4]
 800ad74:	ed87 0a00 	vstr	s0, [r7]
	view.setHumidity(newHumidity);
 800ad78:	687b      	ldr	r3, [r7, #4]
 800ad7a:	68da      	ldr	r2, [r3, #12]
 800ad7c:	687b      	ldr	r3, [r7, #4]
 800ad7e:	68db      	ldr	r3, [r3, #12]
 800ad80:	681b      	ldr	r3, [r3, #0]
 800ad82:	333c      	adds	r3, #60	@ 0x3c
 800ad84:	681b      	ldr	r3, [r3, #0]
 800ad86:	ed97 0a00 	vldr	s0, [r7]
 800ad8a:	4610      	mov	r0, r2
 800ad8c:	4798      	blx	r3
}
 800ad8e:	bf00      	nop
 800ad90:	3708      	adds	r7, #8
 800ad92:	46bd      	mov	sp, r7
 800ad94:	bd80      	pop	{r7, pc}

0800ad96 <_ZThn4_N13MainPresenter21notifyHumidityChangedEf>:
    virtual void notifyHumidityChanged(float newHumidity);
 800ad96:	f1a0 0004 	sub.w	r0, r0, #4
 800ad9a:	f7ff bfe7 	b.w	800ad6c <_ZN13MainPresenter21notifyHumidityChangedEf>

0800ad9e <_ZN8touchgfx7Unicode13snprintfFloatEPttPKcf>:
     * @return pointer to the first element in the buffer where the formatted string is
     *         placed.
     *
     * @see snprintf, snprintfFloats
     */
    static UnicodeChar* snprintfFloat(UnicodeChar* dst, uint16_t dstSize, const char* format, const float value)
 800ad9e:	b580      	push	{r7, lr}
 800ada0:	b084      	sub	sp, #16
 800ada2:	af00      	add	r7, sp, #0
 800ada4:	60f8      	str	r0, [r7, #12]
 800ada6:	460b      	mov	r3, r1
 800ada8:	607a      	str	r2, [r7, #4]
 800adaa:	ed87 0a00 	vstr	s0, [r7]
 800adae:	817b      	strh	r3, [r7, #10]
    {
        return snprintfFloats(dst, dstSize, format, &value);
 800adb0:	463b      	mov	r3, r7
 800adb2:	8979      	ldrh	r1, [r7, #10]
 800adb4:	687a      	ldr	r2, [r7, #4]
 800adb6:	68f8      	ldr	r0, [r7, #12]
 800adb8:	f008 ff34 	bl	8013c24 <_ZN8touchgfx7Unicode14snprintfFloatsEPttPKcPKf>
 800adbc:	4603      	mov	r3, r0
    }
 800adbe:	4618      	mov	r0, r3
 800adc0:	3710      	adds	r7, #16
 800adc2:	46bd      	mov	sp, r7
 800adc4:	bd80      	pop	{r7, pc}
	...

0800adc8 <_ZN8MainViewD1Ev>:

class MainView : public MainViewBase
{
public:
    MainView();
    ~MainView() {};
 800adc8:	b580      	push	{r7, lr}
 800adca:	b082      	sub	sp, #8
 800adcc:	af00      	add	r7, sp, #0
 800adce:	6078      	str	r0, [r7, #4]
 800add0:	4a05      	ldr	r2, [pc, #20]	@ (800ade8 <_ZN8MainViewD1Ev+0x20>)
 800add2:	687b      	ldr	r3, [r7, #4]
 800add4:	601a      	str	r2, [r3, #0]
 800add6:	687b      	ldr	r3, [r7, #4]
 800add8:	4618      	mov	r0, r3
 800adda:	f7ff fa71 	bl	800a2c0 <_ZN12MainViewBaseD1Ev>
 800adde:	687b      	ldr	r3, [r7, #4]
 800ade0:	4618      	mov	r0, r3
 800ade2:	3708      	adds	r7, #8
 800ade4:	46bd      	mov	sp, r7
 800ade6:	bd80      	pop	{r7, pc}
 800ade8:	08024a44 	.word	0x08024a44

0800adec <_ZN8MainViewD0Ev>:
 800adec:	b580      	push	{r7, lr}
 800adee:	b082      	sub	sp, #8
 800adf0:	af00      	add	r7, sp, #0
 800adf2:	6078      	str	r0, [r7, #4]
 800adf4:	6878      	ldr	r0, [r7, #4]
 800adf6:	f7ff ffe7 	bl	800adc8 <_ZN8MainViewD1Ev>
 800adfa:	f44f 7110 	mov.w	r1, #576	@ 0x240
 800adfe:	6878      	ldr	r0, [r7, #4]
 800ae00:	f017 fa99 	bl	8022336 <_ZdlPvj>
 800ae04:	687b      	ldr	r3, [r7, #4]
 800ae06:	4618      	mov	r0, r3
 800ae08:	3708      	adds	r7, #8
 800ae0a:	46bd      	mov	sp, r7
 800ae0c:	bd80      	pop	{r7, pc}
	...

0800ae10 <_ZN8MainViewC1Ev>:

const uint8_t UPPER_LIMIT = 42;
const uint8_t LOWER_LIMIT = 0;


MainView::MainView() : count(0) {}
 800ae10:	b580      	push	{r7, lr}
 800ae12:	b082      	sub	sp, #8
 800ae14:	af00      	add	r7, sp, #0
 800ae16:	6078      	str	r0, [r7, #4]
 800ae18:	687b      	ldr	r3, [r7, #4]
 800ae1a:	4618      	mov	r0, r3
 800ae1c:	f7ff f810 	bl	8009e40 <_ZN12MainViewBaseC1Ev>
 800ae20:	4a05      	ldr	r2, [pc, #20]	@ (800ae38 <_ZN8MainViewC1Ev+0x28>)
 800ae22:	687b      	ldr	r3, [r7, #4]
 800ae24:	601a      	str	r2, [r3, #0]
 800ae26:	687b      	ldr	r3, [r7, #4]
 800ae28:	2200      	movs	r2, #0
 800ae2a:	f883 223c 	strb.w	r2, [r3, #572]	@ 0x23c
 800ae2e:	687b      	ldr	r3, [r7, #4]
 800ae30:	4618      	mov	r0, r3
 800ae32:	3708      	adds	r7, #8
 800ae34:	46bd      	mov	sp, r7
 800ae36:	bd80      	pop	{r7, pc}
 800ae38:	08024a44 	.word	0x08024a44

0800ae3c <_ZN8MainView11setupScreenEv>:

void MainView::setupScreen()
{
 800ae3c:	b580      	push	{r7, lr}
 800ae3e:	b082      	sub	sp, #8
 800ae40:	af00      	add	r7, sp, #0
 800ae42:	6078      	str	r0, [r7, #4]
    updateGFXElements();
 800ae44:	6878      	ldr	r0, [r7, #4]
 800ae46:	f000 f855 	bl	800aef4 <_ZN8MainView17updateGFXElementsEv>
    MainViewBase::setupScreen();
 800ae4a:	687b      	ldr	r3, [r7, #4]
 800ae4c:	4618      	mov	r0, r3
 800ae4e:	f7ff fa80 	bl	800a352 <_ZN12MainViewBase11setupScreenEv>

}
 800ae52:	bf00      	nop
 800ae54:	3708      	adds	r7, #8
 800ae56:	46bd      	mov	sp, r7
 800ae58:	bd80      	pop	{r7, pc}

0800ae5a <_ZN8MainView13increaseValueEv>:

void MainView::increaseValue()
{
 800ae5a:	b580      	push	{r7, lr}
 800ae5c:	b082      	sub	sp, #8
 800ae5e:	af00      	add	r7, sp, #0
 800ae60:	6078      	str	r0, [r7, #4]
    count = (count++ > UPPER_LIMIT) ? UPPER_LIMIT : count;
 800ae62:	687b      	ldr	r3, [r7, #4]
 800ae64:	f893 323c 	ldrb.w	r3, [r3, #572]	@ 0x23c
 800ae68:	1c5a      	adds	r2, r3, #1
 800ae6a:	b2d1      	uxtb	r1, r2
 800ae6c:	687a      	ldr	r2, [r7, #4]
 800ae6e:	f882 123c 	strb.w	r1, [r2, #572]	@ 0x23c
 800ae72:	2b2a      	cmp	r3, #42	@ 0x2a
 800ae74:	d804      	bhi.n	800ae80 <_ZN8MainView13increaseValueEv+0x26>
 800ae76:	687b      	ldr	r3, [r7, #4]
 800ae78:	f503 730f 	add.w	r3, r3, #572	@ 0x23c
 800ae7c:	781a      	ldrb	r2, [r3, #0]
 800ae7e:	e000      	b.n	800ae82 <_ZN8MainView13increaseValueEv+0x28>
 800ae80:	222a      	movs	r2, #42	@ 0x2a
 800ae82:	687b      	ldr	r3, [r7, #4]
 800ae84:	f883 223c 	strb.w	r2, [r3, #572]	@ 0x23c
    updateGFXElements();
 800ae88:	6878      	ldr	r0, [r7, #4]
 800ae8a:	f000 f833 	bl	800aef4 <_ZN8MainView17updateGFXElementsEv>
}
 800ae8e:	bf00      	nop
 800ae90:	3708      	adds	r7, #8
 800ae92:	46bd      	mov	sp, r7
 800ae94:	bd80      	pop	{r7, pc}

0800ae96 <_ZN8MainView13decreaseValueEv>:

void MainView::decreaseValue()
{
 800ae96:	b580      	push	{r7, lr}
 800ae98:	b082      	sub	sp, #8
 800ae9a:	af00      	add	r7, sp, #0
 800ae9c:	6078      	str	r0, [r7, #4]
    count = (count-- <= LOWER_LIMIT) ? LOWER_LIMIT : count;
 800ae9e:	687b      	ldr	r3, [r7, #4]
 800aea0:	f893 323c 	ldrb.w	r3, [r3, #572]	@ 0x23c
 800aea4:	1e5a      	subs	r2, r3, #1
 800aea6:	b2d1      	uxtb	r1, r2
 800aea8:	687a      	ldr	r2, [r7, #4]
 800aeaa:	f882 123c 	strb.w	r1, [r2, #572]	@ 0x23c
 800aeae:	2b00      	cmp	r3, #0
 800aeb0:	d004      	beq.n	800aebc <_ZN8MainView13decreaseValueEv+0x26>
 800aeb2:	687b      	ldr	r3, [r7, #4]
 800aeb4:	f503 730f 	add.w	r3, r3, #572	@ 0x23c
 800aeb8:	781a      	ldrb	r2, [r3, #0]
 800aeba:	e000      	b.n	800aebe <_ZN8MainView13decreaseValueEv+0x28>
 800aebc:	2200      	movs	r2, #0
 800aebe:	687b      	ldr	r3, [r7, #4]
 800aec0:	f883 223c 	strb.w	r2, [r3, #572]	@ 0x23c
    updateGFXElements();
 800aec4:	6878      	ldr	r0, [r7, #4]
 800aec6:	f000 f815 	bl	800aef4 <_ZN8MainView17updateGFXElementsEv>
}
 800aeca:	bf00      	nop
 800aecc:	3708      	adds	r7, #8
 800aece:	46bd      	mov	sp, r7
 800aed0:	bd80      	pop	{r7, pc}
	...

0800aed4 <_ZN8MainView12ToggleLightsEv>:

void MainView::ToggleLights(){
 800aed4:	b580      	push	{r7, lr}
 800aed6:	b082      	sub	sp, #8
 800aed8:	af00      	add	r7, sp, #0
 800aeda:	6078      	str	r0, [r7, #4]
	HAL_GPIO_TogglePin(GPIOB, GPIO_PIN_8);
 800aedc:	f44f 7180 	mov.w	r1, #256	@ 0x100
 800aee0:	4803      	ldr	r0, [pc, #12]	@ (800aef0 <_ZN8MainView12ToggleLightsEv+0x1c>)
 800aee2:	f7f9 f990 	bl	8004206 <HAL_GPIO_TogglePin>


}
 800aee6:	bf00      	nop
 800aee8:	3708      	adds	r7, #8
 800aeea:	46bd      	mov	sp, r7
 800aeec:	bd80      	pop	{r7, pc}
 800aeee:	bf00      	nop
 800aef0:	40020400 	.word	0x40020400

0800aef4 <_ZN8MainView17updateGFXElementsEv>:
void MainView::updateGFXElements()
{
 800aef4:	b480      	push	{r7}
 800aef6:	b083      	sub	sp, #12
 800aef8:	af00      	add	r7, sp, #0
 800aefa:	6078      	str	r0, [r7, #4]
//    }
//    // Invalidate all GFX area, which will result in it being redrawn in next tick.
//    countTxt.invalidate();
//    buttonUp.invalidate();
//    buttonDown.invalidate();
}
 800aefc:	bf00      	nop
 800aefe:	370c      	adds	r7, #12
 800af00:	46bd      	mov	sp, r7
 800af02:	f85d 7b04 	ldr.w	r7, [sp], #4
 800af06:	4770      	bx	lr

0800af08 <_ZN8MainView6setValEm>:

void MainView::setVal(uint32_t val){
 800af08:	b580      	push	{r7, lr}
 800af0a:	b082      	sub	sp, #8
 800af0c:	af00      	add	r7, sp, #0
 800af0e:	6078      	str	r0, [r7, #4]
 800af10:	6039      	str	r1, [r7, #0]

	Unicode::snprintf(ADCVALBuffer, ADCVAL_SIZE, "%d", val);
 800af12:	687b      	ldr	r3, [r7, #4]
 800af14:	f503 7001 	add.w	r0, r3, #516	@ 0x204
 800af18:	683b      	ldr	r3, [r7, #0]
 800af1a:	4a07      	ldr	r2, [pc, #28]	@ (800af38 <_ZN8MainView6setValEm+0x30>)
 800af1c:	2114      	movs	r1, #20
 800af1e:	f008 fc81 	bl	8013824 <_ZN8touchgfx7Unicode8snprintfEPttPKcz>
	ADCVAL.invalidate();
 800af22:	687b      	ldr	r3, [r7, #4]
 800af24:	f503 73b4 	add.w	r3, r3, #360	@ 0x168
 800af28:	4618      	mov	r0, r3
 800af2a:	f006 fd21 	bl	8011970 <_ZNK8touchgfx8Drawable10invalidateEv>
}
 800af2e:	bf00      	nop
 800af30:	3708      	adds	r7, #8
 800af32:	46bd      	mov	sp, r7
 800af34:	bd80      	pop	{r7, pc}
 800af36:	bf00      	nop
 800af38:	08023b80 	.word	0x08023b80

0800af3c <_ZN8MainView14setTemperatureEf>:

void MainView::setTemperature(float temp){
 800af3c:	b580      	push	{r7, lr}
 800af3e:	b082      	sub	sp, #8
 800af40:	af00      	add	r7, sp, #0
 800af42:	6078      	str	r0, [r7, #4]
 800af44:	ed87 0a00 	vstr	s0, [r7]
	Unicode::snprintfFloat(TEMPVALBuffer, TEMPVAL_SIZE, "%.1f", temp);
 800af48:	687b      	ldr	r3, [r7, #4]
 800af4a:	f503 73ee 	add.w	r3, r3, #476	@ 0x1dc
 800af4e:	ed97 0a00 	vldr	s0, [r7]
 800af52:	4a07      	ldr	r2, [pc, #28]	@ (800af70 <_ZN8MainView14setTemperatureEf+0x34>)
 800af54:	2114      	movs	r1, #20
 800af56:	4618      	mov	r0, r3
 800af58:	f7ff ff21 	bl	800ad9e <_ZN8touchgfx7Unicode13snprintfFloatEPttPKcf>
	TEMPVAL.invalidate();
 800af5c:	687b      	ldr	r3, [r7, #4]
 800af5e:	f503 738e 	add.w	r3, r3, #284	@ 0x11c
 800af62:	4618      	mov	r0, r3
 800af64:	f006 fd04 	bl	8011970 <_ZNK8touchgfx8Drawable10invalidateEv>

}
 800af68:	bf00      	nop
 800af6a:	3708      	adds	r7, #8
 800af6c:	46bd      	mov	sp, r7
 800af6e:	bd80      	pop	{r7, pc}
 800af70:	08023b84 	.word	0x08023b84

0800af74 <_ZN8MainView11setHumidityEf>:

void MainView::setHumidity(float humidity){
 800af74:	b580      	push	{r7, lr}
 800af76:	b082      	sub	sp, #8
 800af78:	af00      	add	r7, sp, #0
 800af7a:	6078      	str	r0, [r7, #4]
 800af7c:	ed87 0a00 	vstr	s0, [r7]
	Unicode::snprintfFloat(HUMVALBuffer, HUMVAL_SIZE, "%.1f", humidity);
 800af80:	687b      	ldr	r3, [r7, #4]
 800af82:	f503 73da 	add.w	r3, r3, #436	@ 0x1b4
 800af86:	ed97 0a00 	vldr	s0, [r7]
 800af8a:	4a07      	ldr	r2, [pc, #28]	@ (800afa8 <_ZN8MainView11setHumidityEf+0x34>)
 800af8c:	2114      	movs	r1, #20
 800af8e:	4618      	mov	r0, r3
 800af90:	f7ff ff05 	bl	800ad9e <_ZN8touchgfx7Unicode13snprintfFloatEPttPKcf>
	HUMVAL.invalidate();
 800af94:	687b      	ldr	r3, [r7, #4]
 800af96:	33d0      	adds	r3, #208	@ 0xd0
 800af98:	4618      	mov	r0, r3
 800af9a:	f006 fce9 	bl	8011970 <_ZNK8touchgfx8Drawable10invalidateEv>


}
 800af9e:	bf00      	nop
 800afa0:	3708      	adds	r7, #8
 800afa2:	46bd      	mov	sp, r7
 800afa4:	bd80      	pop	{r7, pc}
 800afa6:	bf00      	nop
 800afa8:	08023b84 	.word	0x08023b84

0800afac <_ZN5ModelC1Ev>:
#include <gui/model/Model.hpp>
#include <gui/model/ModelListener.hpp>
#include "main.h"

Model::Model() : modelListener(0)
 800afac:	b480      	push	{r7}
 800afae:	b083      	sub	sp, #12
 800afb0:	af00      	add	r7, sp, #0
 800afb2:	6078      	str	r0, [r7, #4]
 800afb4:	687b      	ldr	r3, [r7, #4]
 800afb6:	2200      	movs	r2, #0
 800afb8:	601a      	str	r2, [r3, #0]
{
}
 800afba:	687b      	ldr	r3, [r7, #4]
 800afbc:	4618      	mov	r0, r3
 800afbe:	370c      	adds	r7, #12
 800afc0:	46bd      	mov	sp, r7
 800afc2:	f85d 7b04 	ldr.w	r7, [sp], #4
 800afc6:	4770      	bx	lr

0800afc8 <_ZN5Model4tickEv>:

void Model::tick()
{
 800afc8:	b580      	push	{r7, lr}
 800afca:	b086      	sub	sp, #24
 800afcc:	af00      	add	r7, sp, #0
 800afce:	6078      	str	r0, [r7, #4]

	float humidity = hum;
 800afd0:	4b18      	ldr	r3, [pc, #96]	@ (800b034 <_ZN5Model4tickEv+0x6c>)
 800afd2:	681b      	ldr	r3, [r3, #0]
 800afd4:	617b      	str	r3, [r7, #20]
	float temperature = temp;
 800afd6:	4b18      	ldr	r3, [pc, #96]	@ (800b038 <_ZN5Model4tickEv+0x70>)
 800afd8:	681b      	ldr	r3, [r3, #0]
 800afda:	613b      	str	r3, [r7, #16]
	uint32_t val = value_adc;
 800afdc:	4b17      	ldr	r3, [pc, #92]	@ (800b03c <_ZN5Model4tickEv+0x74>)
 800afde:	681b      	ldr	r3, [r3, #0]
 800afe0:	60fb      	str	r3, [r7, #12]

	if (modelListener != 0) {
 800afe2:	687b      	ldr	r3, [r7, #4]
 800afe4:	681b      	ldr	r3, [r3, #0]
 800afe6:	2b00      	cmp	r3, #0
 800afe8:	d01f      	beq.n	800b02a <_ZN5Model4tickEv+0x62>
		modelListener -> notifyADCChanged(val);
 800afea:	687b      	ldr	r3, [r7, #4]
 800afec:	681a      	ldr	r2, [r3, #0]
 800afee:	687b      	ldr	r3, [r7, #4]
 800aff0:	681b      	ldr	r3, [r3, #0]
 800aff2:	681b      	ldr	r3, [r3, #0]
 800aff4:	3308      	adds	r3, #8
 800aff6:	681b      	ldr	r3, [r3, #0]
 800aff8:	68f9      	ldr	r1, [r7, #12]
 800affa:	4610      	mov	r0, r2
 800affc:	4798      	blx	r3
		modelListener -> notifyTemperatureChanged(temperature);
 800affe:	687b      	ldr	r3, [r7, #4]
 800b000:	681a      	ldr	r2, [r3, #0]
 800b002:	687b      	ldr	r3, [r7, #4]
 800b004:	681b      	ldr	r3, [r3, #0]
 800b006:	681b      	ldr	r3, [r3, #0]
 800b008:	330c      	adds	r3, #12
 800b00a:	681b      	ldr	r3, [r3, #0]
 800b00c:	ed97 0a04 	vldr	s0, [r7, #16]
 800b010:	4610      	mov	r0, r2
 800b012:	4798      	blx	r3
		modelListener -> notifyHumidityChanged(humidity);
 800b014:	687b      	ldr	r3, [r7, #4]
 800b016:	681a      	ldr	r2, [r3, #0]
 800b018:	687b      	ldr	r3, [r7, #4]
 800b01a:	681b      	ldr	r3, [r3, #0]
 800b01c:	681b      	ldr	r3, [r3, #0]
 800b01e:	3310      	adds	r3, #16
 800b020:	681b      	ldr	r3, [r3, #0]
 800b022:	ed97 0a05 	vldr	s0, [r7, #20]
 800b026:	4610      	mov	r0, r2
 800b028:	4798      	blx	r3


	}


}
 800b02a:	bf00      	nop
 800b02c:	3718      	adds	r7, #24
 800b02e:	46bd      	mov	sp, r7
 800b030:	bd80      	pop	{r7, pc}
 800b032:	bf00      	nop
 800b034:	200005d8 	.word	0x200005d8
 800b038:	200005d4 	.word	0x200005d4
 800b03c:	200005d0 	.word	0x200005d0

0800b040 <_ZN8touchgfx15TouchControllerD1Ev>:
/** Basic Touch Controller interface. */
class TouchController
{
public:
    /** Finalizes an instance of the TouchController class. */
    virtual ~TouchController()
 800b040:	b480      	push	{r7}
 800b042:	b083      	sub	sp, #12
 800b044:	af00      	add	r7, sp, #0
 800b046:	6078      	str	r0, [r7, #4]
    {
 800b048:	4a04      	ldr	r2, [pc, #16]	@ (800b05c <_ZN8touchgfx15TouchControllerD1Ev+0x1c>)
 800b04a:	687b      	ldr	r3, [r7, #4]
 800b04c:	601a      	str	r2, [r3, #0]
    }
 800b04e:	687b      	ldr	r3, [r7, #4]
 800b050:	4618      	mov	r0, r3
 800b052:	370c      	adds	r7, #12
 800b054:	46bd      	mov	sp, r7
 800b056:	f85d 7b04 	ldr.w	r7, [sp], #4
 800b05a:	4770      	bx	lr
 800b05c:	08024aa8 	.word	0x08024aa8

0800b060 <_ZN8touchgfx15TouchControllerD0Ev>:
    virtual ~TouchController()
 800b060:	b580      	push	{r7, lr}
 800b062:	b082      	sub	sp, #8
 800b064:	af00      	add	r7, sp, #0
 800b066:	6078      	str	r0, [r7, #4]
    }
 800b068:	6878      	ldr	r0, [r7, #4]
 800b06a:	f7ff ffe9 	bl	800b040 <_ZN8touchgfx15TouchControllerD1Ev>
 800b06e:	2104      	movs	r1, #4
 800b070:	6878      	ldr	r0, [r7, #4]
 800b072:	f017 f960 	bl	8022336 <_ZdlPvj>
 800b076:	687b      	ldr	r3, [r7, #4]
 800b078:	4618      	mov	r0, r3
 800b07a:	3708      	adds	r7, #8
 800b07c:	46bd      	mov	sp, r7
 800b07e:	bd80      	pop	{r7, pc}

0800b080 <_ZN20STM32TouchController4initEv>:

#include <STM32TouchController.hpp>
#include "main.h"

void STM32TouchController::init()
{
 800b080:	b480      	push	{r7}
 800b082:	b083      	sub	sp, #12
 800b084:	af00      	add	r7, sp, #0
 800b086:	6078      	str	r0, [r7, #4]
    /**
     * Initialize touch controller and driver
     *
     */
}
 800b088:	bf00      	nop
 800b08a:	370c      	adds	r7, #12
 800b08c:	46bd      	mov	sp, r7
 800b08e:	f85d 7b04 	ldr.w	r7, [sp], #4
 800b092:	4770      	bx	lr

0800b094 <_ZN20STM32TouchController11sampleTouchERlS0_>:

bool STM32TouchController::sampleTouch(int32_t& x, int32_t& y)
{
 800b094:	b580      	push	{r7, lr}
 800b096:	b084      	sub	sp, #16
 800b098:	af00      	add	r7, sp, #0
 800b09a:	60f8      	str	r0, [r7, #12]
 800b09c:	60b9      	str	r1, [r7, #8]
 800b09e:	607a      	str	r2, [r7, #4]
     * This function is called by the TouchGFX framework.
     * By default sampleTouch is called every tick, this can be adjusted by HAL::setTouchSampleRate(int8_t);
     *
     */

	return((bool) Touch_TouchGFXSampleTouch(&x,&y));
 800b0a0:	6879      	ldr	r1, [r7, #4]
 800b0a2:	68b8      	ldr	r0, [r7, #8]
 800b0a4:	f7f7 fb42 	bl	800272c <Touch_TouchGFXSampleTouch>
 800b0a8:	4603      	mov	r3, r0
 800b0aa:	2b00      	cmp	r3, #0
 800b0ac:	bf14      	ite	ne
 800b0ae:	2301      	movne	r3, #1
 800b0b0:	2300      	moveq	r3, #0
 800b0b2:	b2db      	uxtb	r3, r3
}
 800b0b4:	4618      	mov	r0, r3
 800b0b6:	3710      	adds	r7, #16
 800b0b8:	46bd      	mov	sp, r7
 800b0ba:	bd80      	pop	{r7, pc}

0800b0bc <_ZN20STM32TouchControllerD1Ev>:
 * @brief This class specializes TouchController Interface.
 *
 * @sa touchgfx::TouchController
 */

class STM32TouchController : public touchgfx::TouchController
 800b0bc:	b580      	push	{r7, lr}
 800b0be:	b082      	sub	sp, #8
 800b0c0:	af00      	add	r7, sp, #0
 800b0c2:	6078      	str	r0, [r7, #4]
 800b0c4:	4a05      	ldr	r2, [pc, #20]	@ (800b0dc <_ZN20STM32TouchControllerD1Ev+0x20>)
 800b0c6:	687b      	ldr	r3, [r7, #4]
 800b0c8:	601a      	str	r2, [r3, #0]
 800b0ca:	687b      	ldr	r3, [r7, #4]
 800b0cc:	4618      	mov	r0, r3
 800b0ce:	f7ff ffb7 	bl	800b040 <_ZN8touchgfx15TouchControllerD1Ev>
 800b0d2:	687b      	ldr	r3, [r7, #4]
 800b0d4:	4618      	mov	r0, r3
 800b0d6:	3708      	adds	r7, #8
 800b0d8:	46bd      	mov	sp, r7
 800b0da:	bd80      	pop	{r7, pc}
 800b0dc:	08024a90 	.word	0x08024a90

0800b0e0 <_ZN20STM32TouchControllerD0Ev>:
 800b0e0:	b580      	push	{r7, lr}
 800b0e2:	b082      	sub	sp, #8
 800b0e4:	af00      	add	r7, sp, #0
 800b0e6:	6078      	str	r0, [r7, #4]
 800b0e8:	6878      	ldr	r0, [r7, #4]
 800b0ea:	f7ff ffe7 	bl	800b0bc <_ZN20STM32TouchControllerD1Ev>
 800b0ee:	2104      	movs	r1, #4
 800b0f0:	6878      	ldr	r0, [r7, #4]
 800b0f2:	f017 f920 	bl	8022336 <_ZdlPvj>
 800b0f6:	687b      	ldr	r3, [r7, #4]
 800b0f8:	4618      	mov	r0, r3
 800b0fa:	3708      	adds	r7, #8
 800b0fc:	46bd      	mov	sp, r7
 800b0fe:	bd80      	pop	{r7, pc}

0800b100 <_ZN8touchgfx4GPIO4initEv>:

/*
 * Perform configuration of IO pins.
 */
void GPIO::init()
{
 800b100:	b480      	push	{r7}
 800b102:	af00      	add	r7, sp, #0

}
 800b104:	bf00      	nop
 800b106:	46bd      	mov	sp, r7
 800b108:	f85d 7b04 	ldr.w	r7, [sp], #4
 800b10c:	4770      	bx	lr
	...

0800b110 <_ZN8touchgfx4GPIO3setENS0_7GPIO_IDE>:

/*
 * Sets a pin high.
 */
void GPIO::set(GPIO_ID id)
{
 800b110:	b480      	push	{r7}
 800b112:	b083      	sub	sp, #12
 800b114:	af00      	add	r7, sp, #0
 800b116:	4603      	mov	r3, r0
 800b118:	71fb      	strb	r3, [r7, #7]
    switch (id)
 800b11a:	79fb      	ldrb	r3, [r7, #7]
 800b11c:	2b03      	cmp	r3, #3
 800b11e:	d80c      	bhi.n	800b13a <_ZN8touchgfx4GPIO3setENS0_7GPIO_IDE+0x2a>
 800b120:	a201      	add	r2, pc, #4	@ (adr r2, 800b128 <_ZN8touchgfx4GPIO3setENS0_7GPIO_IDE+0x18>)
 800b122:	f852 f023 	ldr.w	pc, [r2, r3, lsl #2]
 800b126:	bf00      	nop
 800b128:	0800b139 	.word	0x0800b139
 800b12c:	0800b139 	.word	0x0800b139
 800b130:	0800b139 	.word	0x0800b139
 800b134:	0800b139 	.word	0x0800b139
    {
    case GPIO::VSYNC_FREQ:
#if defined(VSYNC_FREQ_GPIO_Port) && defined(VSYNC_FREQ_Pin)
        HAL_GPIO_WritePin(VSYNC_FREQ_GPIO_Port, VSYNC_FREQ_Pin, GPIO_PIN_SET);
#endif
        break;
 800b138:	bf00      	nop
#if defined(MCU_ACTIVE_GPIO_Port) && defined(MCU_ACTIVE_Pin)
        HAL_GPIO_WritePin(MCU_ACTIVE_GPIO_Port, MCU_ACTIVE_Pin, GPIO_PIN_SET);
#endif
        break;
    }
}
 800b13a:	bf00      	nop
 800b13c:	370c      	adds	r7, #12
 800b13e:	46bd      	mov	sp, r7
 800b140:	f85d 7b04 	ldr.w	r7, [sp], #4
 800b144:	4770      	bx	lr
 800b146:	bf00      	nop

0800b148 <_ZN8touchgfx4GPIO5clearENS0_7GPIO_IDE>:

/*
 * Sets a pin low.
 */
void GPIO::clear(GPIO_ID id)
{
 800b148:	b480      	push	{r7}
 800b14a:	b083      	sub	sp, #12
 800b14c:	af00      	add	r7, sp, #0
 800b14e:	4603      	mov	r3, r0
 800b150:	71fb      	strb	r3, [r7, #7]
    switch (id)
 800b152:	79fb      	ldrb	r3, [r7, #7]
 800b154:	2b03      	cmp	r3, #3
 800b156:	d80c      	bhi.n	800b172 <_ZN8touchgfx4GPIO5clearENS0_7GPIO_IDE+0x2a>
 800b158:	a201      	add	r2, pc, #4	@ (adr r2, 800b160 <_ZN8touchgfx4GPIO5clearENS0_7GPIO_IDE+0x18>)
 800b15a:	f852 f023 	ldr.w	pc, [r2, r3, lsl #2]
 800b15e:	bf00      	nop
 800b160:	0800b171 	.word	0x0800b171
 800b164:	0800b171 	.word	0x0800b171
 800b168:	0800b171 	.word	0x0800b171
 800b16c:	0800b171 	.word	0x0800b171
    {
    case GPIO::VSYNC_FREQ:
#if defined(VSYNC_FREQ_GPIO_Port) && defined(VSYNC_FREQ_Pin)
        HAL_GPIO_WritePin(VSYNC_FREQ_GPIO_Port, VSYNC_FREQ_Pin, GPIO_PIN_RESET);
#endif
        break;
 800b170:	bf00      	nop
#if defined(MCU_ACTIVE_GPIO_Port) && defined(MCU_ACTIVE_Pin)
        HAL_GPIO_WritePin(MCU_ACTIVE_GPIO_Port, MCU_ACTIVE_Pin, GPIO_PIN_RESET);
#endif
        break;
    }
}
 800b172:	bf00      	nop
 800b174:	370c      	adds	r7, #12
 800b176:	46bd      	mov	sp, r7
 800b178:	f85d 7b04 	ldr.w	r7, [sp], #4
 800b17c:	4770      	bx	lr
 800b17e:	bf00      	nop

0800b180 <_ZN8touchgfx4GPIO6toggleENS0_7GPIO_IDE>:

/*
 * Toggles a pin.
 */
void GPIO::toggle(GPIO_ID id)
{
 800b180:	b480      	push	{r7}
 800b182:	b083      	sub	sp, #12
 800b184:	af00      	add	r7, sp, #0
 800b186:	4603      	mov	r3, r0
 800b188:	71fb      	strb	r3, [r7, #7]
    switch (id)
 800b18a:	79fb      	ldrb	r3, [r7, #7]
 800b18c:	2b03      	cmp	r3, #3
 800b18e:	d80c      	bhi.n	800b1aa <_ZN8touchgfx4GPIO6toggleENS0_7GPIO_IDE+0x2a>
 800b190:	a201      	add	r2, pc, #4	@ (adr r2, 800b198 <_ZN8touchgfx4GPIO6toggleENS0_7GPIO_IDE+0x18>)
 800b192:	f852 f023 	ldr.w	pc, [r2, r3, lsl #2]
 800b196:	bf00      	nop
 800b198:	0800b1a9 	.word	0x0800b1a9
 800b19c:	0800b1a9 	.word	0x0800b1a9
 800b1a0:	0800b1a9 	.word	0x0800b1a9
 800b1a4:	0800b1a9 	.word	0x0800b1a9
    {
    case GPIO::VSYNC_FREQ:
#if defined(VSYNC_FREQ_GPIO_Port) && defined(VSYNC_FREQ_Pin)
        HAL_GPIO_TogglePin(VSYNC_FREQ_GPIO_Port, VSYNC_FREQ_Pin);
#endif
        break;
 800b1a8:	bf00      	nop
#if defined(MCU_ACTIVE_GPIO_Port) && defined(MCU_ACTIVE_Pin)
        HAL_GPIO_TogglePin(MCU_ACTIVE_GPIO_Port, MCU_ACTIVE_Pin);
#endif
        break;
    }
}
 800b1aa:	bf00      	nop
 800b1ac:	370c      	adds	r7, #12
 800b1ae:	46bd      	mov	sp, r7
 800b1b0:	f85d 7b04 	ldr.w	r7, [sp], #4
 800b1b4:	4770      	bx	lr
 800b1b6:	bf00      	nop

0800b1b8 <_ZN8touchgfx3HALD1Ev>:
 800b1b8:	b480      	push	{r7}
 800b1ba:	b083      	sub	sp, #12
 800b1bc:	af00      	add	r7, sp, #0
 800b1be:	6078      	str	r0, [r7, #4]
 800b1c0:	4a04      	ldr	r2, [pc, #16]	@ (800b1d4 <_ZN8touchgfx3HALD1Ev+0x1c>)
 800b1c2:	687b      	ldr	r3, [r7, #4]
 800b1c4:	601a      	str	r2, [r3, #0]
 800b1c6:	687b      	ldr	r3, [r7, #4]
 800b1c8:	4618      	mov	r0, r3
 800b1ca:	370c      	adds	r7, #12
 800b1cc:	46bd      	mov	sp, r7
 800b1ce:	f85d 7b04 	ldr.w	r7, [sp], #4
 800b1d2:	4770      	bx	lr
 800b1d4:	08024ee0 	.word	0x08024ee0

0800b1d8 <_ZN8touchgfx3HALD0Ev>:
 800b1d8:	b580      	push	{r7, lr}
 800b1da:	b082      	sub	sp, #8
 800b1dc:	af00      	add	r7, sp, #0
 800b1de:	6078      	str	r0, [r7, #4]
 800b1e0:	6878      	ldr	r0, [r7, #4]
 800b1e2:	f7ff ffe9 	bl	800b1b8 <_ZN8touchgfx3HALD1Ev>
 800b1e6:	217c      	movs	r1, #124	@ 0x7c
 800b1e8:	6878      	ldr	r0, [r7, #4]
 800b1ea:	f017 f8a4 	bl	8022336 <_ZdlPvj>
 800b1ee:	687b      	ldr	r3, [r7, #4]
 800b1f0:	4618      	mov	r0, r3
 800b1f2:	3708      	adds	r7, #8
 800b1f4:	46bd      	mov	sp, r7
 800b1f6:	bd80      	pop	{r7, pc}

0800b1f8 <_ZN8touchgfx3HAL21setDisplayOrientationENS_18DisplayOrientationE>:
 800b1f8:	b480      	push	{r7}
 800b1fa:	b083      	sub	sp, #12
 800b1fc:	af00      	add	r7, sp, #0
 800b1fe:	6078      	str	r0, [r7, #4]
 800b200:	460b      	mov	r3, r1
 800b202:	70fb      	strb	r3, [r7, #3]
 800b204:	687b      	ldr	r3, [r7, #4]
 800b206:	78fa      	ldrb	r2, [r7, #3]
 800b208:	f883 2078 	strb.w	r2, [r3, #120]	@ 0x78
 800b20c:	687b      	ldr	r3, [r7, #4]
 800b20e:	2201      	movs	r2, #1
 800b210:	f883 2079 	strb.w	r2, [r3, #121]	@ 0x79
 800b214:	bf00      	nop
 800b216:	370c      	adds	r7, #12
 800b218:	46bd      	mov	sp, r7
 800b21a:	f85d 7b04 	ldr.w	r7, [sp], #4
 800b21e:	4770      	bx	lr

0800b220 <_ZN8touchgfx3HAL18setFrameBufferSizeEtt>:
 800b220:	b580      	push	{r7, lr}
 800b222:	b082      	sub	sp, #8
 800b224:	af00      	add	r7, sp, #0
 800b226:	6078      	str	r0, [r7, #4]
 800b228:	460b      	mov	r3, r1
 800b22a:	807b      	strh	r3, [r7, #2]
 800b22c:	4613      	mov	r3, r2
 800b22e:	803b      	strh	r3, [r7, #0]
 800b230:	4b0c      	ldr	r3, [pc, #48]	@ (800b264 <_ZN8touchgfx3HAL18setFrameBufferSizeEtt+0x44>)
 800b232:	881b      	ldrh	r3, [r3, #0]
 800b234:	887a      	ldrh	r2, [r7, #2]
 800b236:	429a      	cmp	r2, r3
 800b238:	d304      	bcc.n	800b244 <_ZN8touchgfx3HAL18setFrameBufferSizeEtt+0x24>
 800b23a:	4b0b      	ldr	r3, [pc, #44]	@ (800b268 <_ZN8touchgfx3HAL18setFrameBufferSizeEtt+0x48>)
 800b23c:	881b      	ldrh	r3, [r3, #0]
 800b23e:	883a      	ldrh	r2, [r7, #0]
 800b240:	429a      	cmp	r2, r3
 800b242:	d205      	bcs.n	800b250 <_ZN8touchgfx3HAL18setFrameBufferSizeEtt+0x30>
 800b244:	4b09      	ldr	r3, [pc, #36]	@ (800b26c <_ZN8touchgfx3HAL18setFrameBufferSizeEtt+0x4c>)
 800b246:	4a0a      	ldr	r2, [pc, #40]	@ (800b270 <_ZN8touchgfx3HAL18setFrameBufferSizeEtt+0x50>)
 800b248:	219e      	movs	r1, #158	@ 0x9e
 800b24a:	480a      	ldr	r0, [pc, #40]	@ (800b274 <_ZN8touchgfx3HAL18setFrameBufferSizeEtt+0x54>)
 800b24c:	f017 f920 	bl	8022490 <__assert_func>
 800b250:	4a09      	ldr	r2, [pc, #36]	@ (800b278 <_ZN8touchgfx3HAL18setFrameBufferSizeEtt+0x58>)
 800b252:	887b      	ldrh	r3, [r7, #2]
 800b254:	8013      	strh	r3, [r2, #0]
 800b256:	4a09      	ldr	r2, [pc, #36]	@ (800b27c <_ZN8touchgfx3HAL18setFrameBufferSizeEtt+0x5c>)
 800b258:	883b      	ldrh	r3, [r7, #0]
 800b25a:	8013      	strh	r3, [r2, #0]
 800b25c:	bf00      	nop
 800b25e:	3708      	adds	r7, #8
 800b260:	46bd      	mov	sp, r7
 800b262:	bd80      	pop	{r7, pc}
 800b264:	20002db0 	.word	0x20002db0
 800b268:	20002db2 	.word	0x20002db2
 800b26c:	08023b8c 	.word	0x08023b8c
 800b270:	08023bf0 	.word	0x08023bf0
 800b274:	08023c34 	.word	0x08023c34
 800b278:	20002db6 	.word	0x20002db6
 800b27c:	20002db8 	.word	0x20002db8

0800b280 <_ZN8touchgfx3HAL11getBlitCapsEv>:
 800b280:	b580      	push	{r7, lr}
 800b282:	b082      	sub	sp, #8
 800b284:	af00      	add	r7, sp, #0
 800b286:	6078      	str	r0, [r7, #4]
 800b288:	687b      	ldr	r3, [r7, #4]
 800b28a:	f893 307a 	ldrb.w	r3, [r3, #122]	@ 0x7a
 800b28e:	2b00      	cmp	r3, #0
 800b290:	d009      	beq.n	800b2a6 <_ZN8touchgfx3HAL11getBlitCapsEv+0x26>
 800b292:	687b      	ldr	r3, [r7, #4]
 800b294:	685a      	ldr	r2, [r3, #4]
 800b296:	687b      	ldr	r3, [r7, #4]
 800b298:	685b      	ldr	r3, [r3, #4]
 800b29a:	681b      	ldr	r3, [r3, #0]
 800b29c:	681b      	ldr	r3, [r3, #0]
 800b29e:	4610      	mov	r0, r2
 800b2a0:	4798      	blx	r3
 800b2a2:	4603      	mov	r3, r0
 800b2a4:	e000      	b.n	800b2a8 <_ZN8touchgfx3HAL11getBlitCapsEv+0x28>
 800b2a6:	2300      	movs	r3, #0
 800b2a8:	4618      	mov	r0, r3
 800b2aa:	3708      	adds	r7, #8
 800b2ac:	46bd      	mov	sp, r7
 800b2ae:	bd80      	pop	{r7, pc}

0800b2b0 <_ZN8touchgfx3HAL15backPorchExitedEv>:
 800b2b0:	b580      	push	{r7, lr}
 800b2b2:	b082      	sub	sp, #8
 800b2b4:	af00      	add	r7, sp, #0
 800b2b6:	6078      	str	r0, [r7, #4]
 800b2b8:	6878      	ldr	r0, [r7, #4]
 800b2ba:	f002 ff17 	bl	800e0ec <_ZN8touchgfx3HAL16swapFrameBuffersEv>
 800b2be:	687b      	ldr	r3, [r7, #4]
 800b2c0:	681b      	ldr	r3, [r3, #0]
 800b2c2:	33ac      	adds	r3, #172	@ 0xac
 800b2c4:	681b      	ldr	r3, [r3, #0]
 800b2c6:	6878      	ldr	r0, [r7, #4]
 800b2c8:	4798      	blx	r3
 800b2ca:	bf00      	nop
 800b2cc:	3708      	adds	r7, #8
 800b2ce:	46bd      	mov	sp, r7
 800b2d0:	bd80      	pop	{r7, pc}

0800b2d2 <_ZN8touchgfx3HAL9sampleKeyERh>:
 800b2d2:	b480      	push	{r7}
 800b2d4:	b083      	sub	sp, #12
 800b2d6:	af00      	add	r7, sp, #0
 800b2d8:	6078      	str	r0, [r7, #4]
 800b2da:	6039      	str	r1, [r7, #0]
 800b2dc:	2300      	movs	r3, #0
 800b2de:	4618      	mov	r0, r3
 800b2e0:	370c      	adds	r7, #12
 800b2e2:	46bd      	mov	sp, r7
 800b2e4:	f85d 7b04 	ldr.w	r7, [sp], #4
 800b2e8:	4770      	bx	lr
	...

0800b2ec <_ZN8touchgfx3HAL28setFrameBufferStartAddressesEPvS1_S1_>:
 800b2ec:	b580      	push	{r7, lr}
 800b2ee:	b084      	sub	sp, #16
 800b2f0:	af00      	add	r7, sp, #0
 800b2f2:	60f8      	str	r0, [r7, #12]
 800b2f4:	60b9      	str	r1, [r7, #8]
 800b2f6:	607a      	str	r2, [r7, #4]
 800b2f8:	603b      	str	r3, [r7, #0]
 800b2fa:	68bb      	ldr	r3, [r7, #8]
 800b2fc:	2b00      	cmp	r3, #0
 800b2fe:	d106      	bne.n	800b30e <_ZN8touchgfx3HAL28setFrameBufferStartAddressesEPvS1_S1_+0x22>
 800b300:	4b0f      	ldr	r3, [pc, #60]	@ (800b340 <_ZN8touchgfx3HAL28setFrameBufferStartAddressesEPvS1_S1_+0x54>)
 800b302:	4a10      	ldr	r2, [pc, #64]	@ (800b344 <_ZN8touchgfx3HAL28setFrameBufferStartAddressesEPvS1_S1_+0x58>)
 800b304:	f240 21d2 	movw	r1, #722	@ 0x2d2
 800b308:	480f      	ldr	r0, [pc, #60]	@ (800b348 <_ZN8touchgfx3HAL28setFrameBufferStartAddressesEPvS1_S1_+0x5c>)
 800b30a:	f017 f8c1 	bl	8022490 <__assert_func>
 800b30e:	68fb      	ldr	r3, [r7, #12]
 800b310:	68ba      	ldr	r2, [r7, #8]
 800b312:	63da      	str	r2, [r3, #60]	@ 0x3c
 800b314:	68fb      	ldr	r3, [r7, #12]
 800b316:	687a      	ldr	r2, [r7, #4]
 800b318:	641a      	str	r2, [r3, #64]	@ 0x40
 800b31a:	687b      	ldr	r3, [r7, #4]
 800b31c:	2b00      	cmp	r3, #0
 800b31e:	bf14      	ite	ne
 800b320:	2301      	movne	r3, #1
 800b322:	2300      	moveq	r3, #0
 800b324:	b2da      	uxtb	r2, r3
 800b326:	4b09      	ldr	r3, [pc, #36]	@ (800b34c <_ZN8touchgfx3HAL28setFrameBufferStartAddressesEPvS1_S1_+0x60>)
 800b328:	701a      	strb	r2, [r3, #0]
 800b32a:	68fb      	ldr	r3, [r7, #12]
 800b32c:	681b      	ldr	r3, [r3, #0]
 800b32e:	338c      	adds	r3, #140	@ 0x8c
 800b330:	681b      	ldr	r3, [r3, #0]
 800b332:	6839      	ldr	r1, [r7, #0]
 800b334:	68f8      	ldr	r0, [r7, #12]
 800b336:	4798      	blx	r3
 800b338:	bf00      	nop
 800b33a:	3710      	adds	r7, #16
 800b33c:	46bd      	mov	sp, r7
 800b33e:	bd80      	pop	{r7, pc}
 800b340:	08023c78 	.word	0x08023c78
 800b344:	08023cb0 	.word	0x08023cb0
 800b348:	08023c34 	.word	0x08023c34
 800b34c:	20002dba 	.word	0x20002dba

0800b350 <_ZN8touchgfx3HAL19setAnimationStorageEPv>:
 800b350:	b480      	push	{r7}
 800b352:	b083      	sub	sp, #12
 800b354:	af00      	add	r7, sp, #0
 800b356:	6078      	str	r0, [r7, #4]
 800b358:	6039      	str	r1, [r7, #0]
 800b35a:	687b      	ldr	r3, [r7, #4]
 800b35c:	683a      	ldr	r2, [r7, #0]
 800b35e:	645a      	str	r2, [r3, #68]	@ 0x44
 800b360:	683b      	ldr	r3, [r7, #0]
 800b362:	2b00      	cmp	r3, #0
 800b364:	bf14      	ite	ne
 800b366:	2301      	movne	r3, #1
 800b368:	2300      	moveq	r3, #0
 800b36a:	b2da      	uxtb	r2, r3
 800b36c:	4b03      	ldr	r3, [pc, #12]	@ (800b37c <_ZN8touchgfx3HAL19setAnimationStorageEPv+0x2c>)
 800b36e:	701a      	strb	r2, [r3, #0]
 800b370:	bf00      	nop
 800b372:	370c      	adds	r7, #12
 800b374:	46bd      	mov	sp, r7
 800b376:	f85d 7b04 	ldr.w	r7, [sp], #4
 800b37a:	4770      	bx	lr
 800b37c:	20002dbb 	.word	0x20002dbb

0800b380 <_ZNK8touchgfx3HAL18getFlashDataReaderEv>:
 800b380:	b480      	push	{r7}
 800b382:	b083      	sub	sp, #12
 800b384:	af00      	add	r7, sp, #0
 800b386:	6078      	str	r0, [r7, #4]
 800b388:	2300      	movs	r3, #0
 800b38a:	4618      	mov	r0, r3
 800b38c:	370c      	adds	r7, #12
 800b38e:	46bd      	mov	sp, r7
 800b390:	f85d 7b04 	ldr.w	r7, [sp], #4
 800b394:	4770      	bx	lr

0800b396 <_ZN8touchgfx3HAL9taskDelayEt>:
 800b396:	b580      	push	{r7, lr}
 800b398:	b082      	sub	sp, #8
 800b39a:	af00      	add	r7, sp, #0
 800b39c:	6078      	str	r0, [r7, #4]
 800b39e:	460b      	mov	r3, r1
 800b3a0:	807b      	strh	r3, [r7, #2]
 800b3a2:	687b      	ldr	r3, [r7, #4]
 800b3a4:	6b9b      	ldr	r3, [r3, #56]	@ 0x38
 800b3a6:	2b00      	cmp	r3, #0
 800b3a8:	d004      	beq.n	800b3b4 <_ZN8touchgfx3HAL9taskDelayEt+0x1e>
 800b3aa:	687b      	ldr	r3, [r7, #4]
 800b3ac:	6b9b      	ldr	r3, [r3, #56]	@ 0x38
 800b3ae:	887a      	ldrh	r2, [r7, #2]
 800b3b0:	4610      	mov	r0, r2
 800b3b2:	4798      	blx	r3
 800b3b4:	bf00      	nop
 800b3b6:	3708      	adds	r7, #8
 800b3b8:	46bd      	mov	sp, r7
 800b3ba:	bd80      	pop	{r7, pc}

0800b3bc <_ZN8touchgfx3HAL17getTFTCurrentLineEv>:
 800b3bc:	b480      	push	{r7}
 800b3be:	b083      	sub	sp, #12
 800b3c0:	af00      	add	r7, sp, #0
 800b3c2:	6078      	str	r0, [r7, #4]
 800b3c4:	f64f 73ff 	movw	r3, #65535	@ 0xffff
 800b3c8:	4618      	mov	r0, r3
 800b3ca:	370c      	adds	r7, #12
 800b3cc:	46bd      	mov	sp, r7
 800b3ce:	f85d 7b04 	ldr.w	r7, [sp], #4
 800b3d2:	4770      	bx	lr

0800b3d4 <_ZN8touchgfx3HAL10getDMATypeEv>:
 800b3d4:	b580      	push	{r7, lr}
 800b3d6:	b082      	sub	sp, #8
 800b3d8:	af00      	add	r7, sp, #0
 800b3da:	6078      	str	r0, [r7, #4]
 800b3dc:	687b      	ldr	r3, [r7, #4]
 800b3de:	685a      	ldr	r2, [r3, #4]
 800b3e0:	687b      	ldr	r3, [r7, #4]
 800b3e2:	685b      	ldr	r3, [r3, #4]
 800b3e4:	681b      	ldr	r3, [r3, #0]
 800b3e6:	3318      	adds	r3, #24
 800b3e8:	681b      	ldr	r3, [r3, #0]
 800b3ea:	4610      	mov	r0, r2
 800b3ec:	4798      	blx	r3
 800b3ee:	4603      	mov	r3, r0
 800b3f0:	4618      	mov	r0, r3
 800b3f2:	3708      	adds	r7, #8
 800b3f4:	46bd      	mov	sp, r7
 800b3f6:	bd80      	pop	{r7, pc}

0800b3f8 <_ZN8touchgfx3HAL31performDisplayOrientationChangeEv>:
 800b3f8:	b480      	push	{r7}
 800b3fa:	b085      	sub	sp, #20
 800b3fc:	af00      	add	r7, sp, #0
 800b3fe:	6078      	str	r0, [r7, #4]
 800b400:	687b      	ldr	r3, [r7, #4]
 800b402:	f893 2078 	ldrb.w	r2, [r3, #120]	@ 0x78
 800b406:	687b      	ldr	r3, [r7, #4]
 800b408:	f893 3034 	ldrb.w	r3, [r3, #52]	@ 0x34
 800b40c:	429a      	cmp	r2, r3
 800b40e:	d011      	beq.n	800b434 <_ZN8touchgfx3HAL31performDisplayOrientationChangeEv+0x3c>
 800b410:	4b14      	ldr	r3, [pc, #80]	@ (800b464 <_ZN8touchgfx3HAL31performDisplayOrientationChangeEv+0x6c>)
 800b412:	781b      	ldrb	r3, [r3, #0]
 800b414:	2b00      	cmp	r3, #0
 800b416:	d11e      	bne.n	800b456 <_ZN8touchgfx3HAL31performDisplayOrientationChangeEv+0x5e>
 800b418:	4b13      	ldr	r3, [pc, #76]	@ (800b468 <_ZN8touchgfx3HAL31performDisplayOrientationChangeEv+0x70>)
 800b41a:	881b      	ldrh	r3, [r3, #0]
 800b41c:	81bb      	strh	r3, [r7, #12]
 800b41e:	4b13      	ldr	r3, [pc, #76]	@ (800b46c <_ZN8touchgfx3HAL31performDisplayOrientationChangeEv+0x74>)
 800b420:	881a      	ldrh	r2, [r3, #0]
 800b422:	4b11      	ldr	r3, [pc, #68]	@ (800b468 <_ZN8touchgfx3HAL31performDisplayOrientationChangeEv+0x70>)
 800b424:	801a      	strh	r2, [r3, #0]
 800b426:	4a11      	ldr	r2, [pc, #68]	@ (800b46c <_ZN8touchgfx3HAL31performDisplayOrientationChangeEv+0x74>)
 800b428:	89bb      	ldrh	r3, [r7, #12]
 800b42a:	8013      	strh	r3, [r2, #0]
 800b42c:	4b0d      	ldr	r3, [pc, #52]	@ (800b464 <_ZN8touchgfx3HAL31performDisplayOrientationChangeEv+0x6c>)
 800b42e:	2201      	movs	r2, #1
 800b430:	701a      	strb	r2, [r3, #0]
 800b432:	e010      	b.n	800b456 <_ZN8touchgfx3HAL31performDisplayOrientationChangeEv+0x5e>
 800b434:	4b0b      	ldr	r3, [pc, #44]	@ (800b464 <_ZN8touchgfx3HAL31performDisplayOrientationChangeEv+0x6c>)
 800b436:	781b      	ldrb	r3, [r3, #0]
 800b438:	2b00      	cmp	r3, #0
 800b43a:	d00c      	beq.n	800b456 <_ZN8touchgfx3HAL31performDisplayOrientationChangeEv+0x5e>
 800b43c:	4b0a      	ldr	r3, [pc, #40]	@ (800b468 <_ZN8touchgfx3HAL31performDisplayOrientationChangeEv+0x70>)
 800b43e:	881b      	ldrh	r3, [r3, #0]
 800b440:	81fb      	strh	r3, [r7, #14]
 800b442:	4b0a      	ldr	r3, [pc, #40]	@ (800b46c <_ZN8touchgfx3HAL31performDisplayOrientationChangeEv+0x74>)
 800b444:	881a      	ldrh	r2, [r3, #0]
 800b446:	4b08      	ldr	r3, [pc, #32]	@ (800b468 <_ZN8touchgfx3HAL31performDisplayOrientationChangeEv+0x70>)
 800b448:	801a      	strh	r2, [r3, #0]
 800b44a:	4a08      	ldr	r2, [pc, #32]	@ (800b46c <_ZN8touchgfx3HAL31performDisplayOrientationChangeEv+0x74>)
 800b44c:	89fb      	ldrh	r3, [r7, #14]
 800b44e:	8013      	strh	r3, [r2, #0]
 800b450:	4b04      	ldr	r3, [pc, #16]	@ (800b464 <_ZN8touchgfx3HAL31performDisplayOrientationChangeEv+0x6c>)
 800b452:	2200      	movs	r2, #0
 800b454:	701a      	strb	r2, [r3, #0]
 800b456:	bf00      	nop
 800b458:	3714      	adds	r7, #20
 800b45a:	46bd      	mov	sp, r7
 800b45c:	f85d 7b04 	ldr.w	r7, [sp], #4
 800b460:	4770      	bx	lr
 800b462:	bf00      	nop
 800b464:	20002db4 	.word	0x20002db4
 800b468:	20002db2 	.word	0x20002db2
 800b46c:	20002db0 	.word	0x20002db0

0800b470 <_ZN8touchgfx3HAL15InvalidateCacheEv>:
 800b470:	b480      	push	{r7}
 800b472:	b083      	sub	sp, #12
 800b474:	af00      	add	r7, sp, #0
 800b476:	6078      	str	r0, [r7, #4]
 800b478:	bf00      	nop
 800b47a:	370c      	adds	r7, #12
 800b47c:	46bd      	mov	sp, r7
 800b47e:	f85d 7b04 	ldr.w	r7, [sp], #4
 800b482:	4770      	bx	lr

0800b484 <_ZN8touchgfx3HAL10FlushCacheEv>:
 800b484:	b480      	push	{r7}
 800b486:	b083      	sub	sp, #12
 800b488:	af00      	add	r7, sp, #0
 800b48a:	6078      	str	r0, [r7, #4]
 800b48c:	bf00      	nop
 800b48e:	370c      	adds	r7, #12
 800b490:	46bd      	mov	sp, r7
 800b492:	f85d 7b04 	ldr.w	r7, [sp], #4
 800b496:	4770      	bx	lr

0800b498 <_ZN20TouchGFXGeneratedHAL16flushFrameBufferEv>:
 800b498:	b580      	push	{r7, lr}
 800b49a:	b082      	sub	sp, #8
 800b49c:	af00      	add	r7, sp, #0
 800b49e:	6078      	str	r0, [r7, #4]
 800b4a0:	687b      	ldr	r3, [r7, #4]
 800b4a2:	4618      	mov	r0, r3
 800b4a4:	f002 f880 	bl	800d5a8 <_ZN8touchgfx3HAL16flushFrameBufferEv>
 800b4a8:	bf00      	nop
 800b4aa:	3708      	adds	r7, #8
 800b4ac:	46bd      	mov	sp, r7
 800b4ae:	bd80      	pop	{r7, pc}

0800b4b0 <_ZN20TouchGFXGeneratedHALD1Ev>:
 800b4b0:	b580      	push	{r7, lr}
 800b4b2:	b082      	sub	sp, #8
 800b4b4:	af00      	add	r7, sp, #0
 800b4b6:	6078      	str	r0, [r7, #4]
 800b4b8:	4a05      	ldr	r2, [pc, #20]	@ (800b4d0 <_ZN20TouchGFXGeneratedHALD1Ev+0x20>)
 800b4ba:	687b      	ldr	r3, [r7, #4]
 800b4bc:	601a      	str	r2, [r3, #0]
 800b4be:	687b      	ldr	r3, [r7, #4]
 800b4c0:	4618      	mov	r0, r3
 800b4c2:	f7ff fe79 	bl	800b1b8 <_ZN8touchgfx3HALD1Ev>
 800b4c6:	687b      	ldr	r3, [r7, #4]
 800b4c8:	4618      	mov	r0, r3
 800b4ca:	3708      	adds	r7, #8
 800b4cc:	46bd      	mov	sp, r7
 800b4ce:	bd80      	pop	{r7, pc}
 800b4d0:	08024d0c 	.word	0x08024d0c

0800b4d4 <_ZN20TouchGFXGeneratedHALD0Ev>:
 800b4d4:	b580      	push	{r7, lr}
 800b4d6:	b082      	sub	sp, #8
 800b4d8:	af00      	add	r7, sp, #0
 800b4da:	6078      	str	r0, [r7, #4]
 800b4dc:	6878      	ldr	r0, [r7, #4]
 800b4de:	f7ff ffe7 	bl	800b4b0 <_ZN20TouchGFXGeneratedHALD1Ev>
 800b4e2:	217c      	movs	r1, #124	@ 0x7c
 800b4e4:	6878      	ldr	r0, [r7, #4]
 800b4e6:	f016 ff26 	bl	8022336 <_ZdlPvj>
 800b4ea:	687b      	ldr	r3, [r7, #4]
 800b4ec:	4618      	mov	r0, r3
 800b4ee:	3708      	adds	r7, #8
 800b4f0:	46bd      	mov	sp, r7
 800b4f2:	bd80      	pop	{r7, pc}

0800b4f4 <_ZN11TouchGFXHAL16flushFrameBufferEv>:
 800b4f4:	b580      	push	{r7, lr}
 800b4f6:	b082      	sub	sp, #8
 800b4f8:	af00      	add	r7, sp, #0
 800b4fa:	6078      	str	r0, [r7, #4]
 800b4fc:	687b      	ldr	r3, [r7, #4]
 800b4fe:	4618      	mov	r0, r3
 800b500:	f7ff ffca 	bl	800b498 <_ZN20TouchGFXGeneratedHAL16flushFrameBufferEv>
 800b504:	bf00      	nop
 800b506:	3708      	adds	r7, #8
 800b508:	46bd      	mov	sp, r7
 800b50a:	bd80      	pop	{r7, pc}

0800b50c <_ZN11TouchGFXHAL10initializeEv>:
 800b50c:	b580      	push	{r7, lr}
 800b50e:	b082      	sub	sp, #8
 800b510:	af00      	add	r7, sp, #0
 800b512:	6078      	str	r0, [r7, #4]
 800b514:	687b      	ldr	r3, [r7, #4]
 800b516:	4618      	mov	r0, r3
 800b518:	f001 f9b8 	bl	800c88c <_ZN20TouchGFXGeneratedHAL10initializeEv>
 800b51c:	bf00      	nop
 800b51e:	3708      	adds	r7, #8
 800b520:	46bd      	mov	sp, r7
 800b522:	bd80      	pop	{r7, pc}

0800b524 <_ZNK11TouchGFXHAL17getTFTFrameBufferEv>:
 800b524:	b580      	push	{r7, lr}
 800b526:	b082      	sub	sp, #8
 800b528:	af00      	add	r7, sp, #0
 800b52a:	6078      	str	r0, [r7, #4]
 800b52c:	687b      	ldr	r3, [r7, #4]
 800b52e:	4618      	mov	r0, r3
 800b530:	f001 fa2a 	bl	800c988 <_ZNK20TouchGFXGeneratedHAL17getTFTFrameBufferEv>
 800b534:	4603      	mov	r3, r0
 800b536:	4618      	mov	r0, r3
 800b538:	3708      	adds	r7, #8
 800b53a:	46bd      	mov	sp, r7
 800b53c:	bd80      	pop	{r7, pc}

0800b53e <_ZN11TouchGFXHAL17setTFTFrameBufferEPt>:
 800b53e:	b580      	push	{r7, lr}
 800b540:	b082      	sub	sp, #8
 800b542:	af00      	add	r7, sp, #0
 800b544:	6078      	str	r0, [r7, #4]
 800b546:	6039      	str	r1, [r7, #0]
 800b548:	687b      	ldr	r3, [r7, #4]
 800b54a:	6839      	ldr	r1, [r7, #0]
 800b54c:	4618      	mov	r0, r3
 800b54e:	f001 fa26 	bl	800c99e <_ZN20TouchGFXGeneratedHAL17setTFTFrameBufferEPt>
 800b552:	bf00      	nop
 800b554:	3708      	adds	r7, #8
 800b556:	46bd      	mov	sp, r7
 800b558:	bd80      	pop	{r7, pc}

0800b55a <_ZN11TouchGFXHAL16flushFrameBufferERKN8touchgfx4RectE>:
 800b55a:	b580      	push	{r7, lr}
 800b55c:	b082      	sub	sp, #8
 800b55e:	af00      	add	r7, sp, #0
 800b560:	6078      	str	r0, [r7, #4]
 800b562:	6039      	str	r1, [r7, #0]
 800b564:	687b      	ldr	r3, [r7, #4]
 800b566:	6839      	ldr	r1, [r7, #0]
 800b568:	4618      	mov	r0, r3
 800b56a:	f001 fa23 	bl	800c9b4 <_ZN20TouchGFXGeneratedHAL16flushFrameBufferERKN8touchgfx4RectE>
 800b56e:	bf00      	nop
 800b570:	3708      	adds	r7, #8
 800b572:	46bd      	mov	sp, r7
 800b574:	bd80      	pop	{r7, pc}

0800b576 <_ZN11TouchGFXHAL9blockCopyEPvPKvm>:
 800b576:	b580      	push	{r7, lr}
 800b578:	b084      	sub	sp, #16
 800b57a:	af00      	add	r7, sp, #0
 800b57c:	60f8      	str	r0, [r7, #12]
 800b57e:	60b9      	str	r1, [r7, #8]
 800b580:	607a      	str	r2, [r7, #4]
 800b582:	603b      	str	r3, [r7, #0]
 800b584:	68f8      	ldr	r0, [r7, #12]
 800b586:	683b      	ldr	r3, [r7, #0]
 800b588:	687a      	ldr	r2, [r7, #4]
 800b58a:	68b9      	ldr	r1, [r7, #8]
 800b58c:	f001 fa55 	bl	800ca3a <_ZN20TouchGFXGeneratedHAL9blockCopyEPvPKvm>
 800b590:	4603      	mov	r3, r0
 800b592:	4618      	mov	r0, r3
 800b594:	3710      	adds	r7, #16
 800b596:	46bd      	mov	sp, r7
 800b598:	bd80      	pop	{r7, pc}

0800b59a <_ZN11TouchGFXHAL19configureInterruptsEv>:
 800b59a:	b580      	push	{r7, lr}
 800b59c:	b082      	sub	sp, #8
 800b59e:	af00      	add	r7, sp, #0
 800b5a0:	6078      	str	r0, [r7, #4]
 800b5a2:	687b      	ldr	r3, [r7, #4]
 800b5a4:	4618      	mov	r0, r3
 800b5a6:	f001 f9a1 	bl	800c8ec <_ZN20TouchGFXGeneratedHAL19configureInterruptsEv>
 800b5aa:	bf00      	nop
 800b5ac:	3708      	adds	r7, #8
 800b5ae:	46bd      	mov	sp, r7
 800b5b0:	bd80      	pop	{r7, pc}

0800b5b2 <_ZN11TouchGFXHAL16enableInterruptsEv>:
 800b5b2:	b580      	push	{r7, lr}
 800b5b4:	b082      	sub	sp, #8
 800b5b6:	af00      	add	r7, sp, #0
 800b5b8:	6078      	str	r0, [r7, #4]
 800b5ba:	687b      	ldr	r3, [r7, #4]
 800b5bc:	4618      	mov	r0, r3
 800b5be:	f001 f99f 	bl	800c900 <_ZN20TouchGFXGeneratedHAL16enableInterruptsEv>
 800b5c2:	bf00      	nop
 800b5c4:	3708      	adds	r7, #8
 800b5c6:	46bd      	mov	sp, r7
 800b5c8:	bd80      	pop	{r7, pc}

0800b5ca <_ZN11TouchGFXHAL17disableInterruptsEv>:
 800b5ca:	b580      	push	{r7, lr}
 800b5cc:	b082      	sub	sp, #8
 800b5ce:	af00      	add	r7, sp, #0
 800b5d0:	6078      	str	r0, [r7, #4]
 800b5d2:	687b      	ldr	r3, [r7, #4]
 800b5d4:	4618      	mov	r0, r3
 800b5d6:	f001 f99d 	bl	800c914 <_ZN20TouchGFXGeneratedHAL17disableInterruptsEv>
 800b5da:	bf00      	nop
 800b5dc:	3708      	adds	r7, #8
 800b5de:	46bd      	mov	sp, r7
 800b5e0:	bd80      	pop	{r7, pc}

0800b5e2 <_ZN11TouchGFXHAL28enableLCDControllerInterruptEv>:
 800b5e2:	b580      	push	{r7, lr}
 800b5e4:	b082      	sub	sp, #8
 800b5e6:	af00      	add	r7, sp, #0
 800b5e8:	6078      	str	r0, [r7, #4]
 800b5ea:	687b      	ldr	r3, [r7, #4]
 800b5ec:	4618      	mov	r0, r3
 800b5ee:	f001 f99b 	bl	800c928 <_ZN20TouchGFXGeneratedHAL28enableLCDControllerInterruptEv>
 800b5f2:	bf00      	nop
 800b5f4:	3708      	adds	r7, #8
 800b5f6:	46bd      	mov	sp, r7
 800b5f8:	bd80      	pop	{r7, pc}

0800b5fa <_ZN11TouchGFXHAL10beginFrameEv>:
 800b5fa:	b580      	push	{r7, lr}
 800b5fc:	b082      	sub	sp, #8
 800b5fe:	af00      	add	r7, sp, #0
 800b600:	6078      	str	r0, [r7, #4]
 800b602:	687b      	ldr	r3, [r7, #4]
 800b604:	4618      	mov	r0, r3
 800b606:	f001 f999 	bl	800c93c <_ZN20TouchGFXGeneratedHAL10beginFrameEv>
 800b60a:	4603      	mov	r3, r0
 800b60c:	4618      	mov	r0, r3
 800b60e:	3708      	adds	r7, #8
 800b610:	46bd      	mov	sp, r7
 800b612:	bd80      	pop	{r7, pc}

0800b614 <_ZN11TouchGFXHAL8endFrameEv>:
 800b614:	b580      	push	{r7, lr}
 800b616:	b082      	sub	sp, #8
 800b618:	af00      	add	r7, sp, #0
 800b61a:	6078      	str	r0, [r7, #4]
 800b61c:	687b      	ldr	r3, [r7, #4]
 800b61e:	4618      	mov	r0, r3
 800b620:	f001 f999 	bl	800c956 <_ZN20TouchGFXGeneratedHAL8endFrameEv>
 800b624:	bf00      	nop
 800b626:	3708      	adds	r7, #8
 800b628:	46bd      	mov	sp, r7
 800b62a:	bd80      	pop	{r7, pc}

0800b62c <_ZN11TouchGFXHALD1Ev>:
 800b62c:	b580      	push	{r7, lr}
 800b62e:	b082      	sub	sp, #8
 800b630:	af00      	add	r7, sp, #0
 800b632:	6078      	str	r0, [r7, #4]
 800b634:	4a05      	ldr	r2, [pc, #20]	@ (800b64c <_ZN11TouchGFXHALD1Ev+0x20>)
 800b636:	687b      	ldr	r3, [r7, #4]
 800b638:	601a      	str	r2, [r3, #0]
 800b63a:	687b      	ldr	r3, [r7, #4]
 800b63c:	4618      	mov	r0, r3
 800b63e:	f7ff ff37 	bl	800b4b0 <_ZN20TouchGFXGeneratedHALD1Ev>
 800b642:	687b      	ldr	r3, [r7, #4]
 800b644:	4618      	mov	r0, r3
 800b646:	3708      	adds	r7, #8
 800b648:	46bd      	mov	sp, r7
 800b64a:	bd80      	pop	{r7, pc}
 800b64c:	08024ac0 	.word	0x08024ac0

0800b650 <_ZN11TouchGFXHALD0Ev>:
 800b650:	b580      	push	{r7, lr}
 800b652:	b082      	sub	sp, #8
 800b654:	af00      	add	r7, sp, #0
 800b656:	6078      	str	r0, [r7, #4]
 800b658:	6878      	ldr	r0, [r7, #4]
 800b65a:	f7ff ffe7 	bl	800b62c <_ZN11TouchGFXHALD1Ev>
 800b65e:	217c      	movs	r1, #124	@ 0x7c
 800b660:	6878      	ldr	r0, [r7, #4]
 800b662:	f016 fe68 	bl	8022336 <_ZdlPvj>
 800b666:	687b      	ldr	r3, [r7, #4]
 800b668:	4618      	mov	r0, r3
 800b66a:	3708      	adds	r7, #8
 800b66c:	46bd      	mov	sp, r7
 800b66e:	bd80      	pop	{r7, pc}

0800b670 <_ZN8touchgfx10OSWrappers10initializeEv>:

/*
 * Initialize frame buffer semaphore and queue/mutex for VSYNC signal.
 */
void OSWrappers::initialize()
{
 800b670:	b480      	push	{r7}
 800b672:	af00      	add	r7, sp, #0
    fb_sem = 0;
 800b674:	4b05      	ldr	r3, [pc, #20]	@ (800b68c <_ZN8touchgfx10OSWrappers10initializeEv+0x1c>)
 800b676:	2200      	movs	r2, #0
 800b678:	601a      	str	r2, [r3, #0]
    vsync_sem = 0;
 800b67a:	4b05      	ldr	r3, [pc, #20]	@ (800b690 <_ZN8touchgfx10OSWrappers10initializeEv+0x20>)
 800b67c:	2200      	movs	r2, #0
 800b67e:	601a      	str	r2, [r3, #0]
}
 800b680:	bf00      	nop
 800b682:	46bd      	mov	sp, r7
 800b684:	f85d 7b04 	ldr.w	r7, [sp], #4
 800b688:	4770      	bx	lr
 800b68a:	bf00      	nop
 800b68c:	20000680 	.word	0x20000680
 800b690:	20000684 	.word	0x20000684

0800b694 <_ZN8touchgfx10OSWrappers24takeFrameBufferSemaphoreEv>:

/*
 * Take the frame buffer semaphore. Blocks until semaphore is available.
 */
void OSWrappers::takeFrameBufferSemaphore()
{
 800b694:	b480      	push	{r7}
 800b696:	af00      	add	r7, sp, #0
    while (fb_sem);
 800b698:	bf00      	nop
 800b69a:	4b08      	ldr	r3, [pc, #32]	@ (800b6bc <_ZN8touchgfx10OSWrappers24takeFrameBufferSemaphoreEv+0x28>)
 800b69c:	681b      	ldr	r3, [r3, #0]
 800b69e:	2b00      	cmp	r3, #0
 800b6a0:	bf14      	ite	ne
 800b6a2:	2301      	movne	r3, #1
 800b6a4:	2300      	moveq	r3, #0
 800b6a6:	b2db      	uxtb	r3, r3
 800b6a8:	2b00      	cmp	r3, #0
 800b6aa:	d1f6      	bne.n	800b69a <_ZN8touchgfx10OSWrappers24takeFrameBufferSemaphoreEv+0x6>
    fb_sem = 1;
 800b6ac:	4b03      	ldr	r3, [pc, #12]	@ (800b6bc <_ZN8touchgfx10OSWrappers24takeFrameBufferSemaphoreEv+0x28>)
 800b6ae:	2201      	movs	r2, #1
 800b6b0:	601a      	str	r2, [r3, #0]
}
 800b6b2:	bf00      	nop
 800b6b4:	46bd      	mov	sp, r7
 800b6b6:	f85d 7b04 	ldr.w	r7, [sp], #4
 800b6ba:	4770      	bx	lr
 800b6bc:	20000680 	.word	0x20000680

0800b6c0 <_ZN8touchgfx10OSWrappers24giveFrameBufferSemaphoreEv>:

/*
 * Release the frame buffer semaphore.
 */
void OSWrappers::giveFrameBufferSemaphore()
{
 800b6c0:	b480      	push	{r7}
 800b6c2:	af00      	add	r7, sp, #0
    fb_sem = 0;
 800b6c4:	4b03      	ldr	r3, [pc, #12]	@ (800b6d4 <_ZN8touchgfx10OSWrappers24giveFrameBufferSemaphoreEv+0x14>)
 800b6c6:	2200      	movs	r2, #0
 800b6c8:	601a      	str	r2, [r3, #0]
}
 800b6ca:	bf00      	nop
 800b6cc:	46bd      	mov	sp, r7
 800b6ce:	f85d 7b04 	ldr.w	r7, [sp], #4
 800b6d2:	4770      	bx	lr
 800b6d4:	20000680 	.word	0x20000680

0800b6d8 <_ZN8touchgfx10OSWrappers27tryTakeFrameBufferSemaphoreEv>:
 *
 * Note must return immediately! This function does not care who has the taken the semaphore,
 * it only serves to make sure that the semaphore is taken by someone.
 */
void OSWrappers::tryTakeFrameBufferSemaphore()
{
 800b6d8:	b480      	push	{r7}
 800b6da:	af00      	add	r7, sp, #0
    fb_sem = 1;
 800b6dc:	4b03      	ldr	r3, [pc, #12]	@ (800b6ec <_ZN8touchgfx10OSWrappers27tryTakeFrameBufferSemaphoreEv+0x14>)
 800b6de:	2201      	movs	r2, #1
 800b6e0:	601a      	str	r2, [r3, #0]
}
 800b6e2:	bf00      	nop
 800b6e4:	46bd      	mov	sp, r7
 800b6e6:	f85d 7b04 	ldr.w	r7, [sp], #4
 800b6ea:	4770      	bx	lr
 800b6ec:	20000680 	.word	0x20000680

0800b6f0 <_ZN8touchgfx10OSWrappers31giveFrameBufferSemaphoreFromISREv>:
 *
 * Release the frame buffer semaphore in a way that is safe in interrupt context.
 * Called from ISR.
 */
void OSWrappers::giveFrameBufferSemaphoreFromISR()
{
 800b6f0:	b480      	push	{r7}
 800b6f2:	af00      	add	r7, sp, #0
    fb_sem = 0;
 800b6f4:	4b03      	ldr	r3, [pc, #12]	@ (800b704 <_ZN8touchgfx10OSWrappers31giveFrameBufferSemaphoreFromISREv+0x14>)
 800b6f6:	2200      	movs	r2, #0
 800b6f8:	601a      	str	r2, [r3, #0]
}
 800b6fa:	bf00      	nop
 800b6fc:	46bd      	mov	sp, r7
 800b6fe:	f85d 7b04 	ldr.w	r7, [sp], #4
 800b702:	4770      	bx	lr
 800b704:	20000680 	.word	0x20000680

0800b708 <_ZN8touchgfx10OSWrappers11signalVSyncEv>:
 *
 * Note This function is called from an ISR, and should (depending on OS) trigger a
 * scheduling.
 */
void OSWrappers::signalVSync()
{
 800b708:	b480      	push	{r7}
 800b70a:	af00      	add	r7, sp, #0
    vsync_sem = 1;
 800b70c:	4b03      	ldr	r3, [pc, #12]	@ (800b71c <_ZN8touchgfx10OSWrappers11signalVSyncEv+0x14>)
 800b70e:	2201      	movs	r2, #1
 800b710:	601a      	str	r2, [r3, #0]
}
 800b712:	bf00      	nop
 800b714:	46bd      	mov	sp, r7
 800b716:	f85d 7b04 	ldr.w	r7, [sp], #4
 800b71a:	4770      	bx	lr
 800b71c:	20000684 	.word	0x20000684

0800b720 <_ZN8touchgfx10OSWrappers19signalRenderingDoneEv>:
/*
  * Signal that the rendering of the frame has completed. Used by
  * some systems to avoid using any previous vsync.
  */
void OSWrappers::signalRenderingDone()
{
 800b720:	b480      	push	{r7}
 800b722:	af00      	add	r7, sp, #0
    vsync_sem = 0;
 800b724:	4b03      	ldr	r3, [pc, #12]	@ (800b734 <_ZN8touchgfx10OSWrappers19signalRenderingDoneEv+0x14>)
 800b726:	2200      	movs	r2, #0
 800b728:	601a      	str	r2, [r3, #0]
}
 800b72a:	bf00      	nop
 800b72c:	46bd      	mov	sp, r7
 800b72e:	f85d 7b04 	ldr.w	r7, [sp], #4
 800b732:	4770      	bx	lr
 800b734:	20000684 	.word	0x20000684

0800b738 <_ZN8touchgfx10OSWrappers16isVSyncAvailableEv>:
 * @note signalRenderingDone is typically used together with this function.
 *
 * @return True if VSync occurred.
 */
bool OSWrappers::isVSyncAvailable()
{
 800b738:	b480      	push	{r7}
 800b73a:	af00      	add	r7, sp, #0
    return vsync_sem;
 800b73c:	4b05      	ldr	r3, [pc, #20]	@ (800b754 <_ZN8touchgfx10OSWrappers16isVSyncAvailableEv+0x1c>)
 800b73e:	681b      	ldr	r3, [r3, #0]
 800b740:	2b00      	cmp	r3, #0
 800b742:	bf14      	ite	ne
 800b744:	2301      	movne	r3, #1
 800b746:	2300      	moveq	r3, #0
 800b748:	b2db      	uxtb	r3, r3
}
 800b74a:	4618      	mov	r0, r3
 800b74c:	46bd      	mov	sp, r7
 800b74e:	f85d 7b04 	ldr.w	r7, [sp], #4
 800b752:	4770      	bx	lr
 800b754:	20000684 	.word	0x20000684

0800b758 <_ZN8touchgfx10OSWrappers12waitForVSyncEv>:
/*
 * This function check if a VSYNC has occured.
 * If VSYNC has occured, signal TouchGFX to start a rendering
 */
void OSWrappers::waitForVSync()
{
 800b758:	b580      	push	{r7, lr}
 800b75a:	af00      	add	r7, sp, #0
    if (vsync_sem)
 800b75c:	4b0a      	ldr	r3, [pc, #40]	@ (800b788 <_ZN8touchgfx10OSWrappers12waitForVSyncEv+0x30>)
 800b75e:	681b      	ldr	r3, [r3, #0]
 800b760:	2b00      	cmp	r3, #0
 800b762:	bf14      	ite	ne
 800b764:	2301      	movne	r3, #1
 800b766:	2300      	moveq	r3, #0
 800b768:	b2db      	uxtb	r3, r3
 800b76a:	2b00      	cmp	r3, #0
 800b76c:	d00a      	beq.n	800b784 <_ZN8touchgfx10OSWrappers12waitForVSyncEv+0x2c>
    {
        vsync_sem = 0;
 800b76e:	4b06      	ldr	r3, [pc, #24]	@ (800b788 <_ZN8touchgfx10OSWrappers12waitForVSyncEv+0x30>)
 800b770:	2200      	movs	r2, #0
 800b772:	601a      	str	r2, [r3, #0]
        HAL::getInstance()->backPorchExited();
 800b774:	f7fd f8b8 	bl	80088e8 <_ZN8touchgfx3HAL11getInstanceEv>
 800b778:	4603      	mov	r3, r0
 800b77a:	681a      	ldr	r2, [r3, #0]
 800b77c:	3270      	adds	r2, #112	@ 0x70
 800b77e:	6812      	ldr	r2, [r2, #0]
 800b780:	4618      	mov	r0, r3
 800b782:	4790      	blx	r2
    }
}
 800b784:	bf00      	nop
 800b786:	bd80      	pop	{r7, pc}
 800b788:	20000684 	.word	0x20000684

0800b78c <_ZN8touchgfx9colortypeC1Ev>:
 800b78c:	b480      	push	{r7}
 800b78e:	b083      	sub	sp, #12
 800b790:	af00      	add	r7, sp, #0
 800b792:	6078      	str	r0, [r7, #4]
 800b794:	687b      	ldr	r3, [r7, #4]
 800b796:	2200      	movs	r2, #0
 800b798:	601a      	str	r2, [r3, #0]
 800b79a:	687b      	ldr	r3, [r7, #4]
 800b79c:	4618      	mov	r0, r3
 800b79e:	370c      	adds	r7, #12
 800b7a0:	46bd      	mov	sp, r7
 800b7a2:	f85d 7b04 	ldr.w	r7, [sp], #4
 800b7a6:	4770      	bx	lr

0800b7a8 <_ZN8touchgfx9DMA_QueueD1Ev>:
 800b7a8:	b480      	push	{r7}
 800b7aa:	b083      	sub	sp, #12
 800b7ac:	af00      	add	r7, sp, #0
 800b7ae:	6078      	str	r0, [r7, #4]
 800b7b0:	4a04      	ldr	r2, [pc, #16]	@ (800b7c4 <_ZN8touchgfx9DMA_QueueD1Ev+0x1c>)
 800b7b2:	687b      	ldr	r3, [r7, #4]
 800b7b4:	601a      	str	r2, [r3, #0]
 800b7b6:	687b      	ldr	r3, [r7, #4]
 800b7b8:	4618      	mov	r0, r3
 800b7ba:	370c      	adds	r7, #12
 800b7bc:	46bd      	mov	sp, r7
 800b7be:	f85d 7b04 	ldr.w	r7, [sp], #4
 800b7c2:	4770      	bx	lr
 800b7c4:	08024be8 	.word	0x08024be8

0800b7c8 <_ZN8touchgfx9DMA_QueueD0Ev>:
 800b7c8:	b580      	push	{r7, lr}
 800b7ca:	b082      	sub	sp, #8
 800b7cc:	af00      	add	r7, sp, #0
 800b7ce:	6078      	str	r0, [r7, #4]
 800b7d0:	6878      	ldr	r0, [r7, #4]
 800b7d2:	f7ff ffe9 	bl	800b7a8 <_ZN8touchgfx9DMA_QueueD1Ev>
 800b7d6:	2104      	movs	r1, #4
 800b7d8:	6878      	ldr	r0, [r7, #4]
 800b7da:	f016 fdac 	bl	8022336 <_ZdlPvj>
 800b7de:	687b      	ldr	r3, [r7, #4]
 800b7e0:	4618      	mov	r0, r3
 800b7e2:	3708      	adds	r7, #8
 800b7e4:	46bd      	mov	sp, r7
 800b7e6:	bd80      	pop	{r7, pc}

0800b7e8 <_ZN8touchgfx13DMA_Interface10initializeEv>:
 800b7e8:	b480      	push	{r7}
 800b7ea:	b083      	sub	sp, #12
 800b7ec:	af00      	add	r7, sp, #0
 800b7ee:	6078      	str	r0, [r7, #4]
 800b7f0:	bf00      	nop
 800b7f2:	370c      	adds	r7, #12
 800b7f4:	46bd      	mov	sp, r7
 800b7f6:	f85d 7b04 	ldr.w	r7, [sp], #4
 800b7fa:	4770      	bx	lr

0800b7fc <_ZN8touchgfx13DMA_Interface10getDMATypeEv>:
 800b7fc:	b480      	push	{r7}
 800b7fe:	b083      	sub	sp, #12
 800b800:	af00      	add	r7, sp, #0
 800b802:	6078      	str	r0, [r7, #4]
 800b804:	2300      	movs	r3, #0
 800b806:	4618      	mov	r0, r3
 800b808:	370c      	adds	r7, #12
 800b80a:	46bd      	mov	sp, r7
 800b80c:	f85d 7b04 	ldr.w	r7, [sp], #4
 800b810:	4770      	bx	lr
	...

0800b814 <_ZN8touchgfx13DMA_InterfaceD1Ev>:
 800b814:	b480      	push	{r7}
 800b816:	b083      	sub	sp, #12
 800b818:	af00      	add	r7, sp, #0
 800b81a:	6078      	str	r0, [r7, #4]
 800b81c:	4a04      	ldr	r2, [pc, #16]	@ (800b830 <_ZN8touchgfx13DMA_InterfaceD1Ev+0x1c>)
 800b81e:	687b      	ldr	r3, [r7, #4]
 800b820:	601a      	str	r2, [r3, #0]
 800b822:	687b      	ldr	r3, [r7, #4]
 800b824:	4618      	mov	r0, r3
 800b826:	370c      	adds	r7, #12
 800b828:	46bd      	mov	sp, r7
 800b82a:	f85d 7b04 	ldr.w	r7, [sp], #4
 800b82e:	4770      	bx	lr
 800b830:	08024fb8 	.word	0x08024fb8

0800b834 <_ZN8touchgfx13DMA_InterfaceD0Ev>:
 800b834:	b580      	push	{r7, lr}
 800b836:	b082      	sub	sp, #8
 800b838:	af00      	add	r7, sp, #0
 800b83a:	6078      	str	r0, [r7, #4]
 800b83c:	6878      	ldr	r0, [r7, #4]
 800b83e:	f7ff ffe9 	bl	800b814 <_ZN8touchgfx13DMA_InterfaceD1Ev>
 800b842:	210c      	movs	r1, #12
 800b844:	6878      	ldr	r0, [r7, #4]
 800b846:	f016 fd76 	bl	8022336 <_ZdlPvj>
 800b84a:	687b      	ldr	r3, [r7, #4]
 800b84c:	4618      	mov	r0, r3
 800b84e:	3708      	adds	r7, #8
 800b850:	46bd      	mov	sp, r7
 800b852:	bd80      	pop	{r7, pc}

0800b854 <_ZN8touchgfx13DMA_InterfaceC1ERNS_9DMA_QueueE>:
 800b854:	b480      	push	{r7}
 800b856:	b083      	sub	sp, #12
 800b858:	af00      	add	r7, sp, #0
 800b85a:	6078      	str	r0, [r7, #4]
 800b85c:	6039      	str	r1, [r7, #0]
 800b85e:	4a09      	ldr	r2, [pc, #36]	@ (800b884 <_ZN8touchgfx13DMA_InterfaceC1ERNS_9DMA_QueueE+0x30>)
 800b860:	687b      	ldr	r3, [r7, #4]
 800b862:	601a      	str	r2, [r3, #0]
 800b864:	687b      	ldr	r3, [r7, #4]
 800b866:	683a      	ldr	r2, [r7, #0]
 800b868:	605a      	str	r2, [r3, #4]
 800b86a:	687b      	ldr	r3, [r7, #4]
 800b86c:	2200      	movs	r2, #0
 800b86e:	721a      	strb	r2, [r3, #8]
 800b870:	687b      	ldr	r3, [r7, #4]
 800b872:	2200      	movs	r2, #0
 800b874:	725a      	strb	r2, [r3, #9]
 800b876:	687b      	ldr	r3, [r7, #4]
 800b878:	4618      	mov	r0, r3
 800b87a:	370c      	adds	r7, #12
 800b87c:	46bd      	mov	sp, r7
 800b87e:	f85d 7b04 	ldr.w	r7, [sp], #4
 800b882:	4770      	bx	lr
 800b884:	08024fb8 	.word	0x08024fb8

0800b888 <_ZN8STM32DMA18signalDMAInterruptEv>:
 800b888:	b480      	push	{r7}
 800b88a:	b083      	sub	sp, #12
 800b88c:	af00      	add	r7, sp, #0
 800b88e:	6078      	str	r0, [r7, #4]
 800b890:	bf00      	nop
 800b892:	370c      	adds	r7, #12
 800b894:	46bd      	mov	sp, r7
 800b896:	f85d 7b04 	ldr.w	r7, [sp], #4
 800b89a:	4770      	bx	lr

0800b89c <_ZN8STM32DMA5flushEv>:
 800b89c:	b480      	push	{r7}
 800b89e:	b083      	sub	sp, #12
 800b8a0:	af00      	add	r7, sp, #0
 800b8a2:	6078      	str	r0, [r7, #4]
 800b8a4:	bf00      	nop
 800b8a6:	370c      	adds	r7, #12
 800b8a8:	46bd      	mov	sp, r7
 800b8aa:	f85d 7b04 	ldr.w	r7, [sp], #4
 800b8ae:	4770      	bx	lr

0800b8b0 <_ZN8touchgfx6BlitOpC1Ev>:
 800b8b0:	b580      	push	{r7, lr}
 800b8b2:	b082      	sub	sp, #8
 800b8b4:	af00      	add	r7, sp, #0
 800b8b6:	6078      	str	r0, [r7, #4]
 800b8b8:	687b      	ldr	r3, [r7, #4]
 800b8ba:	330c      	adds	r3, #12
 800b8bc:	4618      	mov	r0, r3
 800b8be:	f7ff ff65 	bl	800b78c <_ZN8touchgfx9colortypeC1Ev>
 800b8c2:	687b      	ldr	r3, [r7, #4]
 800b8c4:	4618      	mov	r0, r3
 800b8c6:	3708      	adds	r7, #8
 800b8c8:	46bd      	mov	sp, r7
 800b8ca:	bd80      	pop	{r7, pc}

0800b8cc <_ZN8STM32DMAC1Ev>:
 800b8cc:	b580      	push	{r7, lr}
 800b8ce:	b082      	sub	sp, #8
 800b8d0:	af00      	add	r7, sp, #0
 800b8d2:	6078      	str	r0, [r7, #4]
 800b8d4:	687a      	ldr	r2, [r7, #4]
 800b8d6:	687b      	ldr	r3, [r7, #4]
 800b8d8:	330c      	adds	r3, #12
 800b8da:	4619      	mov	r1, r3
 800b8dc:	4610      	mov	r0, r2
 800b8de:	f7ff ffb9 	bl	800b854 <_ZN8touchgfx13DMA_InterfaceC1ERNS_9DMA_QueueE>
 800b8e2:	4a0b      	ldr	r2, [pc, #44]	@ (800b910 <_ZN8STM32DMAC1Ev+0x44>)
 800b8e4:	687b      	ldr	r3, [r7, #4]
 800b8e6:	601a      	str	r2, [r3, #0]
 800b8e8:	687b      	ldr	r3, [r7, #4]
 800b8ea:	f103 000c 	add.w	r0, r3, #12
 800b8ee:	687b      	ldr	r3, [r7, #4]
 800b8f0:	3320      	adds	r3, #32
 800b8f2:	2201      	movs	r2, #1
 800b8f4:	4619      	mov	r1, r3
 800b8f6:	f002 fd33 	bl	800e360 <_ZN8touchgfx17LockFreeDMA_QueueC1EPNS_6BlitOpEi>
 800b8fa:	687b      	ldr	r3, [r7, #4]
 800b8fc:	3320      	adds	r3, #32
 800b8fe:	4618      	mov	r0, r3
 800b900:	f7ff ffd6 	bl	800b8b0 <_ZN8touchgfx6BlitOpC1Ev>
 800b904:	687b      	ldr	r3, [r7, #4]
 800b906:	4618      	mov	r0, r3
 800b908:	3708      	adds	r7, #8
 800b90a:	46bd      	mov	sp, r7
 800b90c:	bd80      	pop	{r7, pc}
 800b90e:	bf00      	nop
 800b910:	08024b98 	.word	0x08024b98

0800b914 <_ZN8STM32DMA11getBlitCapsEv>:
 800b914:	b480      	push	{r7}
 800b916:	b083      	sub	sp, #12
 800b918:	af00      	add	r7, sp, #0
 800b91a:	6078      	str	r0, [r7, #4]
 800b91c:	2300      	movs	r3, #0
 800b91e:	4618      	mov	r0, r3
 800b920:	370c      	adds	r7, #12
 800b922:	46bd      	mov	sp, r7
 800b924:	f85d 7b04 	ldr.w	r7, [sp], #4
 800b928:	4770      	bx	lr
	...

0800b92c <_ZN8STM32DMA13setupDataCopyERKN8touchgfx6BlitOpE>:
 800b92c:	b580      	push	{r7, lr}
 800b92e:	b082      	sub	sp, #8
 800b930:	af00      	add	r7, sp, #0
 800b932:	6078      	str	r0, [r7, #4]
 800b934:	6039      	str	r1, [r7, #0]
 800b936:	4b03      	ldr	r3, [pc, #12]	@ (800b944 <_ZN8STM32DMA13setupDataCopyERKN8touchgfx6BlitOpE+0x18>)
 800b938:	4a03      	ldr	r2, [pc, #12]	@ (800b948 <_ZN8STM32DMA13setupDataCopyERKN8touchgfx6BlitOpE+0x1c>)
 800b93a:	2122      	movs	r1, #34	@ 0x22
 800b93c:	4803      	ldr	r0, [pc, #12]	@ (800b94c <_ZN8STM32DMA13setupDataCopyERKN8touchgfx6BlitOpE+0x20>)
 800b93e:	f016 fda7 	bl	8022490 <__assert_func>
 800b942:	bf00      	nop
 800b944:	08023d00 	.word	0x08023d00
 800b948:	08023d24 	.word	0x08023d24
 800b94c:	08023d64 	.word	0x08023d64

0800b950 <_ZN8STM32DMA13setupDataFillERKN8touchgfx6BlitOpE>:
 800b950:	b580      	push	{r7, lr}
 800b952:	b082      	sub	sp, #8
 800b954:	af00      	add	r7, sp, #0
 800b956:	6078      	str	r0, [r7, #4]
 800b958:	6039      	str	r1, [r7, #0]
 800b95a:	4b03      	ldr	r3, [pc, #12]	@ (800b968 <_ZN8STM32DMA13setupDataFillERKN8touchgfx6BlitOpE+0x18>)
 800b95c:	4a03      	ldr	r2, [pc, #12]	@ (800b96c <_ZN8STM32DMA13setupDataFillERKN8touchgfx6BlitOpE+0x1c>)
 800b95e:	2127      	movs	r1, #39	@ 0x27
 800b960:	4803      	ldr	r0, [pc, #12]	@ (800b970 <_ZN8STM32DMA13setupDataFillERKN8touchgfx6BlitOpE+0x20>)
 800b962:	f016 fd95 	bl	8022490 <__assert_func>
 800b966:	bf00      	nop
 800b968:	08023d00 	.word	0x08023d00
 800b96c:	08023d90 	.word	0x08023d90
 800b970:	08023d64 	.word	0x08023d64

0800b974 <_ZN8STM32DMAD1Ev>:
 800b974:	b580      	push	{r7, lr}
 800b976:	b082      	sub	sp, #8
 800b978:	af00      	add	r7, sp, #0
 800b97a:	6078      	str	r0, [r7, #4]
 800b97c:	4a08      	ldr	r2, [pc, #32]	@ (800b9a0 <_ZN8STM32DMAD1Ev+0x2c>)
 800b97e:	687b      	ldr	r3, [r7, #4]
 800b980:	601a      	str	r2, [r3, #0]
 800b982:	687b      	ldr	r3, [r7, #4]
 800b984:	330c      	adds	r3, #12
 800b986:	4618      	mov	r0, r3
 800b988:	f000 f81c 	bl	800b9c4 <_ZN8touchgfx17LockFreeDMA_QueueD1Ev>
 800b98c:	687b      	ldr	r3, [r7, #4]
 800b98e:	4618      	mov	r0, r3
 800b990:	f7ff ff40 	bl	800b814 <_ZN8touchgfx13DMA_InterfaceD1Ev>
 800b994:	687b      	ldr	r3, [r7, #4]
 800b996:	4618      	mov	r0, r3
 800b998:	3708      	adds	r7, #8
 800b99a:	46bd      	mov	sp, r7
 800b99c:	bd80      	pop	{r7, pc}
 800b99e:	bf00      	nop
 800b9a0:	08024b98 	.word	0x08024b98

0800b9a4 <_ZN8STM32DMAD0Ev>:
 800b9a4:	b580      	push	{r7, lr}
 800b9a6:	b082      	sub	sp, #8
 800b9a8:	af00      	add	r7, sp, #0
 800b9aa:	6078      	str	r0, [r7, #4]
 800b9ac:	6878      	ldr	r0, [r7, #4]
 800b9ae:	f7ff ffe1 	bl	800b974 <_ZN8STM32DMAD1Ev>
 800b9b2:	2144      	movs	r1, #68	@ 0x44
 800b9b4:	6878      	ldr	r0, [r7, #4]
 800b9b6:	f016 fcbe 	bl	8022336 <_ZdlPvj>
 800b9ba:	687b      	ldr	r3, [r7, #4]
 800b9bc:	4618      	mov	r0, r3
 800b9be:	3708      	adds	r7, #8
 800b9c0:	46bd      	mov	sp, r7
 800b9c2:	bd80      	pop	{r7, pc}

0800b9c4 <_ZN8touchgfx17LockFreeDMA_QueueD1Ev>:
 800b9c4:	b580      	push	{r7, lr}
 800b9c6:	b082      	sub	sp, #8
 800b9c8:	af00      	add	r7, sp, #0
 800b9ca:	6078      	str	r0, [r7, #4]
 800b9cc:	4a05      	ldr	r2, [pc, #20]	@ (800b9e4 <_ZN8touchgfx17LockFreeDMA_QueueD1Ev+0x20>)
 800b9ce:	687b      	ldr	r3, [r7, #4]
 800b9d0:	601a      	str	r2, [r3, #0]
 800b9d2:	687b      	ldr	r3, [r7, #4]
 800b9d4:	4618      	mov	r0, r3
 800b9d6:	f7ff fee7 	bl	800b7a8 <_ZN8touchgfx9DMA_QueueD1Ev>
 800b9da:	687b      	ldr	r3, [r7, #4]
 800b9dc:	4618      	mov	r0, r3
 800b9de:	3708      	adds	r7, #8
 800b9e0:	46bd      	mov	sp, r7
 800b9e2:	bd80      	pop	{r7, pc}
 800b9e4:	08025008 	.word	0x08025008

0800b9e8 <_ZN8touchgfx17LockFreeDMA_QueueD0Ev>:
 800b9e8:	b580      	push	{r7, lr}
 800b9ea:	b082      	sub	sp, #8
 800b9ec:	af00      	add	r7, sp, #0
 800b9ee:	6078      	str	r0, [r7, #4]
 800b9f0:	6878      	ldr	r0, [r7, #4]
 800b9f2:	f7ff ffe7 	bl	800b9c4 <_ZN8touchgfx17LockFreeDMA_QueueD1Ev>
 800b9f6:	2114      	movs	r1, #20
 800b9f8:	6878      	ldr	r0, [r7, #4]
 800b9fa:	f016 fc9c 	bl	8022336 <_ZdlPvj>
 800b9fe:	687b      	ldr	r3, [r7, #4]
 800ba00:	4618      	mov	r0, r3
 800ba02:	3708      	adds	r7, #8
 800ba04:	46bd      	mov	sp, r7
 800ba06:	bd80      	pop	{r7, pc}

0800ba08 <_ZN8touchgfx9TypedText13registerTextsEPKNS_5TextsE>:
     * Registers an array of texts. This function is called automatically from
     * touchgfx_generic_init(). Should not be called under normal circumstances.
     *
     * @param  t The array of texts.
     */
    static void registerTexts(const Texts* t)
 800ba08:	b480      	push	{r7}
 800ba0a:	b083      	sub	sp, #12
 800ba0c:	af00      	add	r7, sp, #0
 800ba0e:	6078      	str	r0, [r7, #4]
    {
        texts = t;
 800ba10:	4a04      	ldr	r2, [pc, #16]	@ (800ba24 <_ZN8touchgfx9TypedText13registerTextsEPKNS_5TextsE+0x1c>)
 800ba12:	687b      	ldr	r3, [r7, #4]
 800ba14:	6013      	str	r3, [r2, #0]
    }
 800ba16:	bf00      	nop
 800ba18:	370c      	adds	r7, #12
 800ba1a:	46bd      	mov	sp, r7
 800ba1c:	f85d 7b04 	ldr.w	r7, [sp], #4
 800ba20:	4770      	bx	lr
 800ba22:	bf00      	nop
 800ba24:	20002e18 	.word	0x20002e18

0800ba28 <_ZN8touchgfx7MVPHeapC1ERNS_17AbstractPartitionES2_S2_RNS_14MVPApplicationE>:
     * @param [in] scr  A memory partition containing enough memory to hold the largest view.
     * @param [in] tra  A memory partition containing enough memory to hold the largest
     *                  transition.
     * @param [in] app  A reference to the MVPApplication instance.
     */
    MVPHeap(AbstractPartition& pres,
 800ba28:	b480      	push	{r7}
 800ba2a:	b085      	sub	sp, #20
 800ba2c:	af00      	add	r7, sp, #0
 800ba2e:	60f8      	str	r0, [r7, #12]
 800ba30:	60b9      	str	r1, [r7, #8]
 800ba32:	607a      	str	r2, [r7, #4]
 800ba34:	603b      	str	r3, [r7, #0]
            AbstractPartition& tra,
            MVPApplication& app)
        : presenterStorage(pres),
          screenStorage(scr),
          transitionStorage(tra),
          frontendApplication(app)
 800ba36:	4a0b      	ldr	r2, [pc, #44]	@ (800ba64 <_ZN8touchgfx7MVPHeapC1ERNS_17AbstractPartitionES2_S2_RNS_14MVPApplicationE+0x3c>)
 800ba38:	68fb      	ldr	r3, [r7, #12]
 800ba3a:	601a      	str	r2, [r3, #0]
        : presenterStorage(pres),
 800ba3c:	68fb      	ldr	r3, [r7, #12]
 800ba3e:	68ba      	ldr	r2, [r7, #8]
 800ba40:	605a      	str	r2, [r3, #4]
          screenStorage(scr),
 800ba42:	68fb      	ldr	r3, [r7, #12]
 800ba44:	687a      	ldr	r2, [r7, #4]
 800ba46:	609a      	str	r2, [r3, #8]
          transitionStorage(tra),
 800ba48:	68fb      	ldr	r3, [r7, #12]
 800ba4a:	683a      	ldr	r2, [r7, #0]
 800ba4c:	60da      	str	r2, [r3, #12]
          frontendApplication(app)
 800ba4e:	68fb      	ldr	r3, [r7, #12]
 800ba50:	69ba      	ldr	r2, [r7, #24]
 800ba52:	611a      	str	r2, [r3, #16]
    {
    }
 800ba54:	68fb      	ldr	r3, [r7, #12]
 800ba56:	4618      	mov	r0, r3
 800ba58:	3714      	adds	r7, #20
 800ba5a:	46bd      	mov	sp, r7
 800ba5c:	f85d 7b04 	ldr.w	r7, [sp], #4
 800ba60:	4770      	bx	lr
 800ba62:	bf00      	nop
 800ba64:	08024cd0 	.word	0x08024cd0

0800ba68 <_ZN8touchgfx7MVPHeapD1Ev>:

    /** Finalizes an instance of the MVPHeap class. */
    virtual ~MVPHeap()
 800ba68:	b480      	push	{r7}
 800ba6a:	b083      	sub	sp, #12
 800ba6c:	af00      	add	r7, sp, #0
 800ba6e:	6078      	str	r0, [r7, #4]
    {
 800ba70:	4a04      	ldr	r2, [pc, #16]	@ (800ba84 <_ZN8touchgfx7MVPHeapD1Ev+0x1c>)
 800ba72:	687b      	ldr	r3, [r7, #4]
 800ba74:	601a      	str	r2, [r3, #0]
    }
 800ba76:	687b      	ldr	r3, [r7, #4]
 800ba78:	4618      	mov	r0, r3
 800ba7a:	370c      	adds	r7, #12
 800ba7c:	46bd      	mov	sp, r7
 800ba7e:	f85d 7b04 	ldr.w	r7, [sp], #4
 800ba82:	4770      	bx	lr
 800ba84:	08024cd0 	.word	0x08024cd0

0800ba88 <_ZN8touchgfx7MVPHeapD0Ev>:
    virtual ~MVPHeap()
 800ba88:	b580      	push	{r7, lr}
 800ba8a:	b082      	sub	sp, #8
 800ba8c:	af00      	add	r7, sp, #0
 800ba8e:	6078      	str	r0, [r7, #4]
    }
 800ba90:	6878      	ldr	r0, [r7, #4]
 800ba92:	f7ff ffe9 	bl	800ba68 <_ZN8touchgfx7MVPHeapD1Ev>
 800ba96:	2114      	movs	r1, #20
 800ba98:	6878      	ldr	r0, [r7, #4]
 800ba9a:	f016 fc4c 	bl	8022336 <_ZdlPvj>
 800ba9e:	687b      	ldr	r3, [r7, #4]
 800baa0:	4618      	mov	r0, r3
 800baa2:	3708      	adds	r7, #8
 800baa4:	46bd      	mov	sp, r7
 800baa6:	bd80      	pop	{r7, pc}

0800baa8 <_ZN8touchgfx3LCDD1Ev>:
        : textureMapperClass(0), vectorFontRenderer(0)
    {
    }

    /** Finalizes an instance of the LCD class. */
    virtual ~LCD()
 800baa8:	b480      	push	{r7}
 800baaa:	b083      	sub	sp, #12
 800baac:	af00      	add	r7, sp, #0
 800baae:	6078      	str	r0, [r7, #4]
    {
 800bab0:	4a04      	ldr	r2, [pc, #16]	@ (800bac4 <_ZN8touchgfx3LCDD1Ev+0x1c>)
 800bab2:	687b      	ldr	r3, [r7, #4]
 800bab4:	601a      	str	r2, [r3, #0]
    }
 800bab6:	687b      	ldr	r3, [r7, #4]
 800bab8:	4618      	mov	r0, r3
 800baba:	370c      	adds	r7, #12
 800babc:	46bd      	mov	sp, r7
 800babe:	f85d 7b04 	ldr.w	r7, [sp], #4
 800bac2:	4770      	bx	lr
 800bac4:	08025378 	.word	0x08025378

0800bac8 <_ZN8touchgfx3LCDD0Ev>:
    virtual ~LCD()
 800bac8:	b580      	push	{r7, lr}
 800baca:	b082      	sub	sp, #8
 800bacc:	af00      	add	r7, sp, #0
 800bace:	6078      	str	r0, [r7, #4]
    }
 800bad0:	6878      	ldr	r0, [r7, #4]
 800bad2:	f7ff ffe9 	bl	800baa8 <_ZN8touchgfx3LCDD1Ev>
 800bad6:	210c      	movs	r1, #12
 800bad8:	6878      	ldr	r0, [r7, #4]
 800bada:	f016 fc2c 	bl	8022336 <_ZdlPvj>
 800bade:	687b      	ldr	r3, [r7, #4]
 800bae0:	4618      	mov	r0, r3
 800bae2:	3708      	adds	r7, #8
 800bae4:	46bd      	mov	sp, r7
 800bae6:	bd80      	pop	{r7, pc}

0800bae8 <_ZN8touchgfx8Gestures9DragStateC1Ev>:
    static const uint8_t MIN_VELOCITY_AT_RELEASE_BEFORE_SWIPE = 3;

    /** Defines the state of a drag. */
    struct DragState
    {
        DragState()
 800bae8:	b480      	push	{r7}
 800baea:	b083      	sub	sp, #12
 800baec:	af00      	add	r7, sp, #0
 800baee:	6078      	str	r0, [r7, #4]
            : startX(0),
 800baf0:	687b      	ldr	r3, [r7, #4]
 800baf2:	2200      	movs	r2, #0
 800baf4:	801a      	strh	r2, [r3, #0]
              startY(0),
 800baf6:	687b      	ldr	r3, [r7, #4]
 800baf8:	2200      	movs	r2, #0
 800bafa:	805a      	strh	r2, [r3, #2]
              downX(0),
 800bafc:	687b      	ldr	r3, [r7, #4]
 800bafe:	2200      	movs	r2, #0
 800bb00:	809a      	strh	r2, [r3, #4]
              downY(0),
 800bb02:	687b      	ldr	r3, [r7, #4]
 800bb04:	2200      	movs	r2, #0
 800bb06:	80da      	strh	r2, [r3, #6]
              tickCount(0),
 800bb08:	687b      	ldr	r3, [r7, #4]
 800bb0a:	2200      	movs	r2, #0
 800bb0c:	811a      	strh	r2, [r3, #8]
              velocityX(0),
 800bb0e:	687b      	ldr	r3, [r7, #4]
 800bb10:	2200      	movs	r2, #0
 800bb12:	815a      	strh	r2, [r3, #10]
              velocityY(0),
 800bb14:	687b      	ldr	r3, [r7, #4]
 800bb16:	2200      	movs	r2, #0
 800bb18:	819a      	strh	r2, [r3, #12]
              inProgress(false)
 800bb1a:	687b      	ldr	r3, [r7, #4]
 800bb1c:	2200      	movs	r2, #0
 800bb1e:	739a      	strb	r2, [r3, #14]
        {
        }
 800bb20:	687b      	ldr	r3, [r7, #4]
 800bb22:	4618      	mov	r0, r3
 800bb24:	370c      	adds	r7, #12
 800bb26:	46bd      	mov	sp, r7
 800bb28:	f85d 7b04 	ldr.w	r7, [sp], #4
 800bb2c:	4770      	bx	lr

0800bb2e <_ZN8touchgfx8GesturesC1Ev>:
        bool inProgress;    ///< Whether a drag is in progress or not
    };

public:
    /** Default constructor. Does nothing. */
    Gestures()
 800bb2e:	b580      	push	{r7, lr}
 800bb30:	b082      	sub	sp, #8
 800bb32:	af00      	add	r7, sp, #0
 800bb34:	6078      	str	r0, [r7, #4]
        : drag(), listener(0), dragThresholdValue(0)
 800bb36:	687b      	ldr	r3, [r7, #4]
 800bb38:	4618      	mov	r0, r3
 800bb3a:	f7ff ffd5 	bl	800bae8 <_ZN8touchgfx8Gestures9DragStateC1Ev>
 800bb3e:	687b      	ldr	r3, [r7, #4]
 800bb40:	2200      	movs	r2, #0
 800bb42:	611a      	str	r2, [r3, #16]
 800bb44:	687b      	ldr	r3, [r7, #4]
 800bb46:	2200      	movs	r2, #0
 800bb48:	829a      	strh	r2, [r3, #20]
    {
    }
 800bb4a:	687b      	ldr	r3, [r7, #4]
 800bb4c:	4618      	mov	r0, r3
 800bb4e:	3708      	adds	r7, #8
 800bb50:	46bd      	mov	sp, r7
 800bb52:	bd80      	pop	{r7, pc}

0800bb54 <_ZN8touchgfx3HALC1ERNS_13DMA_InterfaceERNS_3LCDERNS_15TouchControllerEtt>:
    HAL(DMA_Interface& dmaInterface, LCD& display, TouchController& touchCtrl, uint16_t width, uint16_t height)
 800bb54:	b580      	push	{r7, lr}
 800bb56:	b084      	sub	sp, #16
 800bb58:	af00      	add	r7, sp, #0
 800bb5a:	60f8      	str	r0, [r7, #12]
 800bb5c:	60b9      	str	r1, [r7, #8]
 800bb5e:	607a      	str	r2, [r7, #4]
 800bb60:	603b      	str	r3, [r7, #0]
          lastRenderMethod(HARDWARE)
 800bb62:	4a55      	ldr	r2, [pc, #340]	@ (800bcb8 <_ZN8touchgfx3HALC1ERNS_13DMA_InterfaceERNS_3LCDERNS_15TouchControllerEtt+0x164>)
 800bb64:	68fb      	ldr	r3, [r7, #12]
 800bb66:	601a      	str	r2, [r3, #0]
        : dma(dmaInterface),
 800bb68:	68fb      	ldr	r3, [r7, #12]
 800bb6a:	68ba      	ldr	r2, [r7, #8]
 800bb6c:	605a      	str	r2, [r3, #4]
          lcdRef(display),
 800bb6e:	68fb      	ldr	r3, [r7, #12]
 800bb70:	687a      	ldr	r2, [r7, #4]
 800bb72:	609a      	str	r2, [r3, #8]
          touchController(touchCtrl),
 800bb74:	68fb      	ldr	r3, [r7, #12]
 800bb76:	683a      	ldr	r2, [r7, #0]
 800bb78:	60da      	str	r2, [r3, #12]
          mcuInstrumentation(0),
 800bb7a:	68fb      	ldr	r3, [r7, #12]
 800bb7c:	2200      	movs	r2, #0
 800bb7e:	611a      	str	r2, [r3, #16]
          buttonController(0),
 800bb80:	68fb      	ldr	r3, [r7, #12]
 800bb82:	2200      	movs	r2, #0
 800bb84:	615a      	str	r2, [r3, #20]
          frameBufferAllocator(0),
 800bb86:	68fb      	ldr	r3, [r7, #12]
 800bb88:	2200      	movs	r2, #0
 800bb8a:	619a      	str	r2, [r3, #24]
          gestures(),
 800bb8c:	68fb      	ldr	r3, [r7, #12]
 800bb8e:	331c      	adds	r3, #28
 800bb90:	4618      	mov	r0, r3
 800bb92:	f7ff ffcc 	bl	800bb2e <_ZN8touchgfx8GesturesC1Ev>
          nativeDisplayOrientation(ORIENTATION_LANDSCAPE),
 800bb96:	68fb      	ldr	r3, [r7, #12]
 800bb98:	2200      	movs	r2, #0
 800bb9a:	f883 2034 	strb.w	r2, [r3, #52]	@ 0x34
          taskDelayFunc(0),
 800bb9e:	68fb      	ldr	r3, [r7, #12]
 800bba0:	2200      	movs	r2, #0
 800bba2:	639a      	str	r2, [r3, #56]	@ 0x38
          frameBuffer0(0),
 800bba4:	68fb      	ldr	r3, [r7, #12]
 800bba6:	2200      	movs	r2, #0
 800bba8:	63da      	str	r2, [r3, #60]	@ 0x3c
          frameBuffer1(0),
 800bbaa:	68fb      	ldr	r3, [r7, #12]
 800bbac:	2200      	movs	r2, #0
 800bbae:	641a      	str	r2, [r3, #64]	@ 0x40
          frameBuffer2(0),
 800bbb0:	68fb      	ldr	r3, [r7, #12]
 800bbb2:	2200      	movs	r2, #0
 800bbb4:	645a      	str	r2, [r3, #68]	@ 0x44
          refreshStrategy(REFRESH_STRATEGY_DEFAULT),
 800bbb6:	68fb      	ldr	r3, [r7, #12]
 800bbb8:	2200      	movs	r2, #0
 800bbba:	f883 2048 	strb.w	r2, [r3, #72]	@ 0x48
          fingerSize(1),
 800bbbe:	68fb      	ldr	r3, [r7, #12]
 800bbc0:	2201      	movs	r2, #1
 800bbc2:	f883 2049 	strb.w	r2, [r3, #73]	@ 0x49
          lockDMAToPorch(false),
 800bbc6:	68fb      	ldr	r3, [r7, #12]
 800bbc8:	2200      	movs	r2, #0
 800bbca:	f883 204a 	strb.w	r2, [r3, #74]	@ 0x4a
          frameBufferUpdatedThisFrame(false),
 800bbce:	68fb      	ldr	r3, [r7, #12]
 800bbd0:	2200      	movs	r2, #0
 800bbd2:	f883 204b 	strb.w	r2, [r3, #75]	@ 0x4b
          auxiliaryLCD(0),
 800bbd6:	68fb      	ldr	r3, [r7, #12]
 800bbd8:	2200      	movs	r2, #0
 800bbda:	64da      	str	r2, [r3, #76]	@ 0x4c
          partialFrameBufferRect(),
 800bbdc:	68fb      	ldr	r3, [r7, #12]
 800bbde:	3350      	adds	r3, #80	@ 0x50
 800bbe0:	4618      	mov	r0, r3
 800bbe2:	f7fd fb20 	bl	8009226 <_ZN8touchgfx4RectC1Ev>
          useAuxiliaryLCD(false),
 800bbe6:	68fb      	ldr	r3, [r7, #12]
 800bbe8:	2200      	movs	r2, #0
 800bbea:	f883 2058 	strb.w	r2, [r3, #88]	@ 0x58
          listener(0),
 800bbee:	68fb      	ldr	r3, [r7, #12]
 800bbf0:	2200      	movs	r2, #0
 800bbf2:	65da      	str	r2, [r3, #92]	@ 0x5c
          lastX(0),
 800bbf4:	68fb      	ldr	r3, [r7, #12]
 800bbf6:	2200      	movs	r2, #0
 800bbf8:	661a      	str	r2, [r3, #96]	@ 0x60
          lastY(0),
 800bbfa:	68fb      	ldr	r3, [r7, #12]
 800bbfc:	2200      	movs	r2, #0
 800bbfe:	665a      	str	r2, [r3, #100]	@ 0x64
          touchSampleRate(1),
 800bc00:	68fb      	ldr	r3, [r7, #12]
 800bc02:	2201      	movs	r2, #1
 800bc04:	f883 2068 	strb.w	r2, [r3, #104]	@ 0x68
          mcuLoadPct(0),
 800bc08:	68fb      	ldr	r3, [r7, #12]
 800bc0a:	2200      	movs	r2, #0
 800bc0c:	f883 2069 	strb.w	r2, [r3, #105]	@ 0x69
          vSyncCnt(0),
 800bc10:	68fb      	ldr	r3, [r7, #12]
 800bc12:	2200      	movs	r2, #0
 800bc14:	f883 206a 	strb.w	r2, [r3, #106]	@ 0x6a
          vSyncForFrame(1),
 800bc18:	68fb      	ldr	r3, [r7, #12]
 800bc1a:	2201      	movs	r2, #1
 800bc1c:	f883 206b 	strb.w	r2, [r3, #107]	@ 0x6b
          vSyncCompensationEnabled(false),
 800bc20:	68fb      	ldr	r3, [r7, #12]
 800bc22:	2200      	movs	r2, #0
 800bc24:	f883 206c 	strb.w	r2, [r3, #108]	@ 0x6c
          clientDirty(false),
 800bc28:	68fb      	ldr	r3, [r7, #12]
 800bc2a:	2200      	movs	r2, #0
 800bc2c:	f883 206d 	strb.w	r2, [r3, #109]	@ 0x6d
          swapRequested(false),
 800bc30:	68fb      	ldr	r3, [r7, #12]
 800bc32:	2200      	movs	r2, #0
 800bc34:	f883 206e 	strb.w	r2, [r3, #110]	@ 0x6e
          lastTouched(false),
 800bc38:	68fb      	ldr	r3, [r7, #12]
 800bc3a:	2200      	movs	r2, #0
 800bc3c:	f883 206f 	strb.w	r2, [r3, #111]	@ 0x6f
          updateMCULoad(0),
 800bc40:	68fb      	ldr	r3, [r7, #12]
 800bc42:	2200      	movs	r2, #0
 800bc44:	f883 2070 	strb.w	r2, [r3, #112]	@ 0x70
          cc_begin(0),
 800bc48:	68fb      	ldr	r3, [r7, #12]
 800bc4a:	2200      	movs	r2, #0
 800bc4c:	675a      	str	r2, [r3, #116]	@ 0x74
          requestedOrientation(ORIENTATION_LANDSCAPE),
 800bc4e:	68fb      	ldr	r3, [r7, #12]
 800bc50:	2200      	movs	r2, #0
 800bc52:	f883 2078 	strb.w	r2, [r3, #120]	@ 0x78
          displayOrientationChangeRequested(false),
 800bc56:	68fb      	ldr	r3, [r7, #12]
 800bc58:	2200      	movs	r2, #0
 800bc5a:	f883 2079 	strb.w	r2, [r3, #121]	@ 0x79
          useDMAAcceleration(true),
 800bc5e:	68fb      	ldr	r3, [r7, #12]
 800bc60:	2201      	movs	r2, #1
 800bc62:	f883 207a 	strb.w	r2, [r3, #122]	@ 0x7a
          lastRenderMethod(HARDWARE)
 800bc66:	68fb      	ldr	r3, [r7, #12]
 800bc68:	2201      	movs	r2, #1
 800bc6a:	f883 207b 	strb.w	r2, [r3, #123]	@ 0x7b
        instance = this;
 800bc6e:	4a13      	ldr	r2, [pc, #76]	@ (800bcbc <_ZN8touchgfx3HALC1ERNS_13DMA_InterfaceERNS_3LCDERNS_15TouchControllerEtt+0x168>)
 800bc70:	68fb      	ldr	r3, [r7, #12]
 800bc72:	6013      	str	r3, [r2, #0]
        FRAME_BUFFER_WIDTH = DISPLAY_WIDTH = width;
 800bc74:	4a12      	ldr	r2, [pc, #72]	@ (800bcc0 <_ZN8touchgfx3HALC1ERNS_13DMA_InterfaceERNS_3LCDERNS_15TouchControllerEtt+0x16c>)
 800bc76:	8b3b      	ldrh	r3, [r7, #24]
 800bc78:	8013      	strh	r3, [r2, #0]
 800bc7a:	4b11      	ldr	r3, [pc, #68]	@ (800bcc0 <_ZN8touchgfx3HALC1ERNS_13DMA_InterfaceERNS_3LCDERNS_15TouchControllerEtt+0x16c>)
 800bc7c:	881a      	ldrh	r2, [r3, #0]
 800bc7e:	4b11      	ldr	r3, [pc, #68]	@ (800bcc4 <_ZN8touchgfx3HALC1ERNS_13DMA_InterfaceERNS_3LCDERNS_15TouchControllerEtt+0x170>)
 800bc80:	801a      	strh	r2, [r3, #0]
        FRAME_BUFFER_HEIGHT = DISPLAY_HEIGHT = height;
 800bc82:	4a11      	ldr	r2, [pc, #68]	@ (800bcc8 <_ZN8touchgfx3HALC1ERNS_13DMA_InterfaceERNS_3LCDERNS_15TouchControllerEtt+0x174>)
 800bc84:	8bbb      	ldrh	r3, [r7, #28]
 800bc86:	8013      	strh	r3, [r2, #0]
 800bc88:	4b0f      	ldr	r3, [pc, #60]	@ (800bcc8 <_ZN8touchgfx3HALC1ERNS_13DMA_InterfaceERNS_3LCDERNS_15TouchControllerEtt+0x174>)
 800bc8a:	881a      	ldrh	r2, [r3, #0]
 800bc8c:	4b0f      	ldr	r3, [pc, #60]	@ (800bccc <_ZN8touchgfx3HALC1ERNS_13DMA_InterfaceERNS_3LCDERNS_15TouchControllerEtt+0x178>)
 800bc8e:	801a      	strh	r2, [r3, #0]
        DISPLAY_ROTATION = rotate0;
 800bc90:	4b0f      	ldr	r3, [pc, #60]	@ (800bcd0 <_ZN8touchgfx3HALC1ERNS_13DMA_InterfaceERNS_3LCDERNS_15TouchControllerEtt+0x17c>)
 800bc92:	2200      	movs	r2, #0
 800bc94:	701a      	strb	r2, [r3, #0]
        nativeDisplayOrientation = ((width >= height) ? ORIENTATION_LANDSCAPE : ORIENTATION_PORTRAIT);
 800bc96:	8b3a      	ldrh	r2, [r7, #24]
 800bc98:	8bbb      	ldrh	r3, [r7, #28]
 800bc9a:	429a      	cmp	r2, r3
 800bc9c:	bf34      	ite	cc
 800bc9e:	2301      	movcc	r3, #1
 800bca0:	2300      	movcs	r3, #0
 800bca2:	b2db      	uxtb	r3, r3
 800bca4:	461a      	mov	r2, r3
 800bca6:	68fb      	ldr	r3, [r7, #12]
 800bca8:	f883 2034 	strb.w	r2, [r3, #52]	@ 0x34
    }
 800bcac:	68fb      	ldr	r3, [r7, #12]
 800bcae:	4618      	mov	r0, r3
 800bcb0:	3710      	adds	r7, #16
 800bcb2:	46bd      	mov	sp, r7
 800bcb4:	bd80      	pop	{r7, pc}
 800bcb6:	bf00      	nop
 800bcb8:	08024ee0 	.word	0x08024ee0
 800bcbc:	20002dbc 	.word	0x20002dbc
 800bcc0:	20002db0 	.word	0x20002db0
 800bcc4:	20002db6 	.word	0x20002db6
 800bcc8:	20002db2 	.word	0x20002db2
 800bccc:	20002db8 	.word	0x20002db8
 800bcd0:	20002db4 	.word	0x20002db4

0800bcd4 <_ZN16FrontendHeapBase15gotoStartScreenER19FrontendApplication>:
    /**
     * Determine (compile time) the Transition type of largest size.
     */
    typedef touchgfx::meta::select_type_maxsize< GeneratedTransitionTypes >::type MaxGeneratedTransitionType;

    virtual void gotoStartScreen(FrontendApplication& app)
 800bcd4:	b580      	push	{r7, lr}
 800bcd6:	b082      	sub	sp, #8
 800bcd8:	af00      	add	r7, sp, #0
 800bcda:	6078      	str	r0, [r7, #4]
 800bcdc:	6039      	str	r1, [r7, #0]
    {
        app.gotoMainScreenNoTransition();
 800bcde:	683b      	ldr	r3, [r7, #0]
 800bce0:	4618      	mov	r0, r3
 800bce2:	f7fd f803 	bl	8008cec <_ZN23FrontendApplicationBase26gotoMainScreenNoTransitionEv>
    }
 800bce6:	bf00      	nop
 800bce8:	3708      	adds	r7, #8
 800bcea:	46bd      	mov	sp, r7
 800bcec:	bd80      	pop	{r7, pc}
	...

0800bcf0 <_ZN16FrontendHeapBaseC1ERN8touchgfx17AbstractPartitionES2_S2_R19FrontendApplication>:
protected:
    FrontendHeapBase(touchgfx::AbstractPartition& presenters, touchgfx::AbstractPartition& views, touchgfx::AbstractPartition& transitions, FrontendApplication& app)
 800bcf0:	b580      	push	{r7, lr}
 800bcf2:	b086      	sub	sp, #24
 800bcf4:	af02      	add	r7, sp, #8
 800bcf6:	60f8      	str	r0, [r7, #12]
 800bcf8:	60b9      	str	r1, [r7, #8]
 800bcfa:	607a      	str	r2, [r7, #4]
 800bcfc:	603b      	str	r3, [r7, #0]
        : MVPHeap(presenters, views, transitions, app)
 800bcfe:	68f8      	ldr	r0, [r7, #12]
 800bd00:	69bb      	ldr	r3, [r7, #24]
 800bd02:	9300      	str	r3, [sp, #0]
 800bd04:	683b      	ldr	r3, [r7, #0]
 800bd06:	687a      	ldr	r2, [r7, #4]
 800bd08:	68b9      	ldr	r1, [r7, #8]
 800bd0a:	f7ff fe8d 	bl	800ba28 <_ZN8touchgfx7MVPHeapC1ERNS_17AbstractPartitionES2_S2_RNS_14MVPApplicationE>
 800bd0e:	4a04      	ldr	r2, [pc, #16]	@ (800bd20 <_ZN16FrontendHeapBaseC1ERN8touchgfx17AbstractPartitionES2_S2_R19FrontendApplication+0x30>)
 800bd10:	68fb      	ldr	r3, [r7, #12]
 800bd12:	601a      	str	r2, [r3, #0]
    {

    }
 800bd14:	68fb      	ldr	r3, [r7, #12]
 800bd16:	4618      	mov	r0, r3
 800bd18:	3710      	adds	r7, #16
 800bd1a:	46bd      	mov	sp, r7
 800bd1c:	bd80      	pop	{r7, pc}
 800bd1e:	bf00      	nop
 800bd20:	08024cbc 	.word	0x08024cbc

0800bd24 <__tcf_0>:
            > > CombinedTransitionTypes;
    typedef meta::select_type_maxsize< CombinedTransitionTypes >::type MaxTransitionType;

    static FrontendHeap& getInstance()
    {
        static FrontendHeap instance;
 800bd24:	b580      	push	{r7, lr}
 800bd26:	af00      	add	r7, sp, #0
 800bd28:	4801      	ldr	r0, [pc, #4]	@ (800bd30 <__tcf_0+0xc>)
 800bd2a:	f000 f969 	bl	800c000 <_ZN12FrontendHeapD1Ev>
 800bd2e:	bd80      	pop	{r7, pc}
 800bd30:	20000688 	.word	0x20000688

0800bd34 <_ZN12FrontendHeap11getInstanceEv>:
    static FrontendHeap& getInstance()
 800bd34:	b580      	push	{r7, lr}
 800bd36:	af00      	add	r7, sp, #0
        static FrontendHeap instance;
 800bd38:	4b11      	ldr	r3, [pc, #68]	@ (800bd80 <_ZN12FrontendHeap11getInstanceEv+0x4c>)
 800bd3a:	681b      	ldr	r3, [r3, #0]
 800bd3c:	f3bf 8f5b 	dmb	ish
 800bd40:	f003 0301 	and.w	r3, r3, #1
 800bd44:	2b00      	cmp	r3, #0
 800bd46:	bf0c      	ite	eq
 800bd48:	2301      	moveq	r3, #1
 800bd4a:	2300      	movne	r3, #0
 800bd4c:	b2db      	uxtb	r3, r3
 800bd4e:	2b00      	cmp	r3, #0
 800bd50:	d013      	beq.n	800bd7a <_ZN12FrontendHeap11getInstanceEv+0x46>
 800bd52:	480b      	ldr	r0, [pc, #44]	@ (800bd80 <_ZN12FrontendHeap11getInstanceEv+0x4c>)
 800bd54:	f016 faf1 	bl	802233a <__cxa_guard_acquire>
 800bd58:	4603      	mov	r3, r0
 800bd5a:	2b00      	cmp	r3, #0
 800bd5c:	bf14      	ite	ne
 800bd5e:	2301      	movne	r3, #1
 800bd60:	2300      	moveq	r3, #0
 800bd62:	b2db      	uxtb	r3, r3
 800bd64:	2b00      	cmp	r3, #0
 800bd66:	d008      	beq.n	800bd7a <_ZN12FrontendHeap11getInstanceEv+0x46>
 800bd68:	4806      	ldr	r0, [pc, #24]	@ (800bd84 <_ZN12FrontendHeap11getInstanceEv+0x50>)
 800bd6a:	f000 f867 	bl	800be3c <_ZN12FrontendHeapC1Ev>
 800bd6e:	4806      	ldr	r0, [pc, #24]	@ (800bd88 <_ZN12FrontendHeap11getInstanceEv+0x54>)
 800bd70:	f016 fbac 	bl	80224cc <atexit>
 800bd74:	4802      	ldr	r0, [pc, #8]	@ (800bd80 <_ZN12FrontendHeap11getInstanceEv+0x4c>)
 800bd76:	f016 faec 	bl	8022352 <__cxa_guard_release>
        return instance;
 800bd7a:	4b02      	ldr	r3, [pc, #8]	@ (800bd84 <_ZN12FrontendHeap11getInstanceEv+0x50>)
    }
 800bd7c:	4618      	mov	r0, r3
 800bd7e:	bd80      	pop	{r7, pc}
 800bd80:	20000a70 	.word	0x20000a70
 800bd84:	20000688 	.word	0x20000688
 800bd88:	0800bd25 	.word	0x0800bd25

0800bd8c <_ZN16FrontendHeapBaseD1Ev>:
class FrontendHeapBase : public touchgfx::MVPHeap
 800bd8c:	b580      	push	{r7, lr}
 800bd8e:	b082      	sub	sp, #8
 800bd90:	af00      	add	r7, sp, #0
 800bd92:	6078      	str	r0, [r7, #4]
 800bd94:	4a05      	ldr	r2, [pc, #20]	@ (800bdac <_ZN16FrontendHeapBaseD1Ev+0x20>)
 800bd96:	687b      	ldr	r3, [r7, #4]
 800bd98:	601a      	str	r2, [r3, #0]
 800bd9a:	687b      	ldr	r3, [r7, #4]
 800bd9c:	4618      	mov	r0, r3
 800bd9e:	f7ff fe63 	bl	800ba68 <_ZN8touchgfx7MVPHeapD1Ev>
 800bda2:	687b      	ldr	r3, [r7, #4]
 800bda4:	4618      	mov	r0, r3
 800bda6:	3708      	adds	r7, #8
 800bda8:	46bd      	mov	sp, r7
 800bdaa:	bd80      	pop	{r7, pc}
 800bdac:	08024cbc 	.word	0x08024cbc

0800bdb0 <_ZN16FrontendHeapBaseD0Ev>:
 800bdb0:	b580      	push	{r7, lr}
 800bdb2:	b082      	sub	sp, #8
 800bdb4:	af00      	add	r7, sp, #0
 800bdb6:	6078      	str	r0, [r7, #4]
 800bdb8:	6878      	ldr	r0, [r7, #4]
 800bdba:	f7ff ffe7 	bl	800bd8c <_ZN16FrontendHeapBaseD1Ev>
 800bdbe:	2114      	movs	r1, #20
 800bdc0:	6878      	ldr	r0, [r7, #4]
 800bdc2:	f016 fab8 	bl	8022336 <_ZdlPvj>
 800bdc6:	687b      	ldr	r3, [r7, #4]
 800bdc8:	4618      	mov	r0, r3
 800bdca:	3708      	adds	r7, #8
 800bdcc:	46bd      	mov	sp, r7
 800bdce:	bd80      	pop	{r7, pc}

0800bdd0 <_ZN8touchgfx9PartitionINS_4meta8TypeListI13MainPresenterNS2_INS1_3NilES4_EEEELt1EEC1Ev>:
 * @tparam NUMBER_OF_ELEMENTS Type of the number of elements.
 *
 * @see AbstractPartition
 */
template <typename ListOfTypes, uint16_t NUMBER_OF_ELEMENTS>
class Partition : public AbstractPartition
 800bdd0:	b580      	push	{r7, lr}
 800bdd2:	b082      	sub	sp, #8
 800bdd4:	af00      	add	r7, sp, #0
 800bdd6:	6078      	str	r0, [r7, #4]
 800bdd8:	687b      	ldr	r3, [r7, #4]
 800bdda:	4618      	mov	r0, r3
 800bddc:	f001 f942 	bl	800d064 <_ZN8touchgfx17AbstractPartitionC1Ev>
 800bde0:	4a03      	ldr	r2, [pc, #12]	@ (800bdf0 <_ZN8touchgfx9PartitionINS_4meta8TypeListI13MainPresenterNS2_INS1_3NilES4_EEEELt1EEC1Ev+0x20>)
 800bde2:	687b      	ldr	r3, [r7, #4]
 800bde4:	601a      	str	r2, [r3, #0]
 800bde6:	687b      	ldr	r3, [r7, #4]
 800bde8:	4618      	mov	r0, r3
 800bdea:	3708      	adds	r7, #8
 800bdec:	46bd      	mov	sp, r7
 800bdee:	bd80      	pop	{r7, pc}
 800bdf0:	08024c88 	.word	0x08024c88

0800bdf4 <_ZN8touchgfx9PartitionINS_4meta8TypeListI8MainViewNS2_INS1_3NilES4_EEEELt1EEC1Ev>:
 800bdf4:	b580      	push	{r7, lr}
 800bdf6:	b082      	sub	sp, #8
 800bdf8:	af00      	add	r7, sp, #0
 800bdfa:	6078      	str	r0, [r7, #4]
 800bdfc:	687b      	ldr	r3, [r7, #4]
 800bdfe:	4618      	mov	r0, r3
 800be00:	f001 f930 	bl	800d064 <_ZN8touchgfx17AbstractPartitionC1Ev>
 800be04:	4a03      	ldr	r2, [pc, #12]	@ (800be14 <_ZN8touchgfx9PartitionINS_4meta8TypeListI8MainViewNS2_INS1_3NilES4_EEEELt1EEC1Ev+0x20>)
 800be06:	687b      	ldr	r3, [r7, #4]
 800be08:	601a      	str	r2, [r3, #0]
 800be0a:	687b      	ldr	r3, [r7, #4]
 800be0c:	4618      	mov	r0, r3
 800be0e:	3708      	adds	r7, #8
 800be10:	46bd      	mov	sp, r7
 800be12:	bd80      	pop	{r7, pc}
 800be14:	08024c54 	.word	0x08024c54

0800be18 <_ZN8touchgfx9PartitionINS_4meta8TypeListINS_12NoTransitionENS2_INS1_3NilES4_EEEELt1EEC1Ev>:
 800be18:	b580      	push	{r7, lr}
 800be1a:	b082      	sub	sp, #8
 800be1c:	af00      	add	r7, sp, #0
 800be1e:	6078      	str	r0, [r7, #4]
 800be20:	687b      	ldr	r3, [r7, #4]
 800be22:	4618      	mov	r0, r3
 800be24:	f001 f91e 	bl	800d064 <_ZN8touchgfx17AbstractPartitionC1Ev>
 800be28:	4a03      	ldr	r2, [pc, #12]	@ (800be38 <_ZN8touchgfx9PartitionINS_4meta8TypeListINS_12NoTransitionENS2_INS1_3NilES4_EEEELt1EEC1Ev+0x20>)
 800be2a:	687b      	ldr	r3, [r7, #4]
 800be2c:	601a      	str	r2, [r3, #0]
 800be2e:	687b      	ldr	r3, [r7, #4]
 800be30:	4618      	mov	r0, r3
 800be32:	3708      	adds	r7, #8
 800be34:	46bd      	mov	sp, r7
 800be36:	bd80      	pop	{r7, pc}
 800be38:	08024c20 	.word	0x08024c20

0800be3c <_ZN12FrontendHeapC1Ev>:
    Partition< CombinedTransitionTypes, 1 > transitions;
    FrontendApplication app;
    Model model;

private:
    FrontendHeap() : FrontendHeapBase(presenters, views, transitions, app),
 800be3c:	b590      	push	{r4, r7, lr}
 800be3e:	b085      	sub	sp, #20
 800be40:	af02      	add	r7, sp, #8
 800be42:	6078      	str	r0, [r7, #4]
        app(model, *this)
 800be44:	6878      	ldr	r0, [r7, #4]
 800be46:	687b      	ldr	r3, [r7, #4]
 800be48:	f103 0114 	add.w	r1, r3, #20
 800be4c:	687b      	ldr	r3, [r7, #4]
 800be4e:	f103 022c 	add.w	r2, r3, #44	@ 0x2c
 800be52:	687b      	ldr	r3, [r7, #4]
 800be54:	f503 741d 	add.w	r4, r3, #628	@ 0x274
    FrontendHeap() : FrontendHeapBase(presenters, views, transitions, app),
 800be58:	687b      	ldr	r3, [r7, #4]
 800be5a:	f503 7322 	add.w	r3, r3, #648	@ 0x288
        app(model, *this)
 800be5e:	9300      	str	r3, [sp, #0]
 800be60:	4623      	mov	r3, r4
 800be62:	f7ff ff45 	bl	800bcf0 <_ZN16FrontendHeapBaseC1ERN8touchgfx17AbstractPartitionES2_S2_R19FrontendApplication>
 800be66:	4a18      	ldr	r2, [pc, #96]	@ (800bec8 <_ZN12FrontendHeapC1Ev+0x8c>)
 800be68:	687b      	ldr	r3, [r7, #4]
 800be6a:	601a      	str	r2, [r3, #0]
 800be6c:	687b      	ldr	r3, [r7, #4]
 800be6e:	3314      	adds	r3, #20
 800be70:	4618      	mov	r0, r3
 800be72:	f7ff ffad 	bl	800bdd0 <_ZN8touchgfx9PartitionINS_4meta8TypeListI13MainPresenterNS2_INS1_3NilES4_EEEELt1EEC1Ev>
 800be76:	687b      	ldr	r3, [r7, #4]
 800be78:	332c      	adds	r3, #44	@ 0x2c
 800be7a:	4618      	mov	r0, r3
 800be7c:	f7ff ffba 	bl	800bdf4 <_ZN8touchgfx9PartitionINS_4meta8TypeListI8MainViewNS2_INS1_3NilES4_EEEELt1EEC1Ev>
 800be80:	687b      	ldr	r3, [r7, #4]
 800be82:	f503 731d 	add.w	r3, r3, #628	@ 0x274
 800be86:	4618      	mov	r0, r3
 800be88:	f7ff ffc6 	bl	800be18 <_ZN8touchgfx9PartitionINS_4meta8TypeListINS_12NoTransitionENS2_INS1_3NilES4_EEEELt1EEC1Ev>
 800be8c:	687b      	ldr	r3, [r7, #4]
 800be8e:	f503 7022 	add.w	r0, r3, #648	@ 0x288
 800be92:	687b      	ldr	r3, [r7, #4]
 800be94:	f503 7379 	add.w	r3, r3, #996	@ 0x3e4
 800be98:	687a      	ldr	r2, [r7, #4]
 800be9a:	4619      	mov	r1, r3
 800be9c:	f7fe fe1c 	bl	800aad8 <_ZN19FrontendApplicationC1ER5ModelR12FrontendHeap>
 800bea0:	687b      	ldr	r3, [r7, #4]
 800bea2:	f503 7379 	add.w	r3, r3, #996	@ 0x3e4
 800bea6:	4618      	mov	r0, r3
 800bea8:	f7ff f880 	bl	800afac <_ZN5ModelC1Ev>
    {
        gotoStartScreen(app);
 800beac:	687a      	ldr	r2, [r7, #4]
 800beae:	687b      	ldr	r3, [r7, #4]
 800beb0:	f503 7322 	add.w	r3, r3, #648	@ 0x288
 800beb4:	4619      	mov	r1, r3
 800beb6:	4610      	mov	r0, r2
 800beb8:	f7ff ff0c 	bl	800bcd4 <_ZN16FrontendHeapBase15gotoStartScreenER19FrontendApplication>
    }
 800bebc:	687b      	ldr	r3, [r7, #4]
 800bebe:	4618      	mov	r0, r3
 800bec0:	370c      	adds	r7, #12
 800bec2:	46bd      	mov	sp, r7
 800bec4:	bd90      	pop	{r4, r7, pc}
 800bec6:	bf00      	nop
 800bec8:	08024c0c 	.word	0x08024c0c

0800becc <_ZN20TouchGFXGeneratedHALC1ERN8touchgfx13DMA_InterfaceERNS0_3LCDERNS0_15TouchControllerEtt>:
     * @param [in,out] display Reference to LCD interface.
     * @param [in,out] tc      Reference to Touch Controller driver.
     * @param width            Width of the display.
     * @param height           Height of the display.
     */
    TouchGFXGeneratedHAL(touchgfx::DMA_Interface& dma, touchgfx::LCD& display, touchgfx::TouchController& tc, uint16_t width, uint16_t height) :
 800becc:	b580      	push	{r7, lr}
 800bece:	b086      	sub	sp, #24
 800bed0:	af02      	add	r7, sp, #8
 800bed2:	60f8      	str	r0, [r7, #12]
 800bed4:	60b9      	str	r1, [r7, #8]
 800bed6:	607a      	str	r2, [r7, #4]
 800bed8:	603b      	str	r3, [r7, #0]
        touchgfx::HAL(dma, display, tc, width, height)
 800beda:	68f8      	ldr	r0, [r7, #12]
 800bedc:	8bbb      	ldrh	r3, [r7, #28]
 800bede:	9301      	str	r3, [sp, #4]
 800bee0:	8b3b      	ldrh	r3, [r7, #24]
 800bee2:	9300      	str	r3, [sp, #0]
 800bee4:	683b      	ldr	r3, [r7, #0]
 800bee6:	687a      	ldr	r2, [r7, #4]
 800bee8:	68b9      	ldr	r1, [r7, #8]
 800beea:	f7ff fe33 	bl	800bb54 <_ZN8touchgfx3HALC1ERNS_13DMA_InterfaceERNS_3LCDERNS_15TouchControllerEtt>
 800beee:	4a04      	ldr	r2, [pc, #16]	@ (800bf00 <_ZN20TouchGFXGeneratedHALC1ERN8touchgfx13DMA_InterfaceERNS0_3LCDERNS0_15TouchControllerEtt+0x34>)
 800bef0:	68fb      	ldr	r3, [r7, #12]
 800bef2:	601a      	str	r2, [r3, #0]
    {
    }
 800bef4:	68fb      	ldr	r3, [r7, #12]
 800bef6:	4618      	mov	r0, r3
 800bef8:	3710      	adds	r7, #16
 800befa:	46bd      	mov	sp, r7
 800befc:	bd80      	pop	{r7, pc}
 800befe:	bf00      	nop
 800bf00:	08024d0c 	.word	0x08024d0c

0800bf04 <_ZN11TouchGFXHALC1ERN8touchgfx13DMA_InterfaceERNS0_3LCDERNS0_15TouchControllerEtt>:
     * @param [in,out] display Reference to LCD interface.
     * @param [in,out] tc      Reference to Touch Controller driver.
     * @param width            Width of the display.
     * @param height           Height of the display.
     */
    TouchGFXHAL(touchgfx::DMA_Interface& dma, touchgfx::LCD& display, touchgfx::TouchController& tc, uint16_t width, uint16_t height) : TouchGFXGeneratedHAL(dma, display, tc, width, height)
 800bf04:	b580      	push	{r7, lr}
 800bf06:	b086      	sub	sp, #24
 800bf08:	af02      	add	r7, sp, #8
 800bf0a:	60f8      	str	r0, [r7, #12]
 800bf0c:	60b9      	str	r1, [r7, #8]
 800bf0e:	607a      	str	r2, [r7, #4]
 800bf10:	603b      	str	r3, [r7, #0]
 800bf12:	68f8      	ldr	r0, [r7, #12]
 800bf14:	8bbb      	ldrh	r3, [r7, #28]
 800bf16:	9301      	str	r3, [sp, #4]
 800bf18:	8b3b      	ldrh	r3, [r7, #24]
 800bf1a:	9300      	str	r3, [sp, #0]
 800bf1c:	683b      	ldr	r3, [r7, #0]
 800bf1e:	687a      	ldr	r2, [r7, #4]
 800bf20:	68b9      	ldr	r1, [r7, #8]
 800bf22:	f7ff ffd3 	bl	800becc <_ZN20TouchGFXGeneratedHALC1ERN8touchgfx13DMA_InterfaceERNS0_3LCDERNS0_15TouchControllerEtt>
 800bf26:	4a04      	ldr	r2, [pc, #16]	@ (800bf38 <_ZN11TouchGFXHALC1ERN8touchgfx13DMA_InterfaceERNS0_3LCDERNS0_15TouchControllerEtt+0x34>)
 800bf28:	68fb      	ldr	r3, [r7, #12]
 800bf2a:	601a      	str	r2, [r3, #0]
    {
    }
 800bf2c:	68fb      	ldr	r3, [r7, #12]
 800bf2e:	4618      	mov	r0, r3
 800bf30:	3710      	adds	r7, #16
 800bf32:	46bd      	mov	sp, r7
 800bf34:	bd80      	pop	{r7, pc}
 800bf36:	bf00      	nop
 800bf38:	08024ac0 	.word	0x08024ac0

0800bf3c <_ZN8touchgfx15TouchControllerC1Ev>:
class TouchController
 800bf3c:	b480      	push	{r7}
 800bf3e:	b083      	sub	sp, #12
 800bf40:	af00      	add	r7, sp, #0
 800bf42:	6078      	str	r0, [r7, #4]
 800bf44:	4a04      	ldr	r2, [pc, #16]	@ (800bf58 <_ZN8touchgfx15TouchControllerC1Ev+0x1c>)
 800bf46:	687b      	ldr	r3, [r7, #4]
 800bf48:	601a      	str	r2, [r3, #0]
 800bf4a:	687b      	ldr	r3, [r7, #4]
 800bf4c:	4618      	mov	r0, r3
 800bf4e:	370c      	adds	r7, #12
 800bf50:	46bd      	mov	sp, r7
 800bf52:	f85d 7b04 	ldr.w	r7, [sp], #4
 800bf56:	4770      	bx	lr
 800bf58:	08024aa8 	.word	0x08024aa8

0800bf5c <_ZN20STM32TouchControllerC1Ev>:
{
public:

    STM32TouchController() {}
 800bf5c:	b580      	push	{r7, lr}
 800bf5e:	b082      	sub	sp, #8
 800bf60:	af00      	add	r7, sp, #0
 800bf62:	6078      	str	r0, [r7, #4]
 800bf64:	687b      	ldr	r3, [r7, #4]
 800bf66:	4618      	mov	r0, r3
 800bf68:	f7ff ffe8 	bl	800bf3c <_ZN8touchgfx15TouchControllerC1Ev>
 800bf6c:	4a03      	ldr	r2, [pc, #12]	@ (800bf7c <_ZN20STM32TouchControllerC1Ev+0x20>)
 800bf6e:	687b      	ldr	r3, [r7, #4]
 800bf70:	601a      	str	r2, [r3, #0]
 800bf72:	687b      	ldr	r3, [r7, #4]
 800bf74:	4618      	mov	r0, r3
 800bf76:	3708      	adds	r7, #8
 800bf78:	46bd      	mov	sp, r7
 800bf7a:	bd80      	pop	{r7, pc}
 800bf7c:	08024a90 	.word	0x08024a90

0800bf80 <touchgfx_init>:
static ApplicationFontProvider fontProvider;
static Texts texts;
static TouchGFXHAL hal(dma, display, tc, 320, 480);

void touchgfx_init()
{
 800bf80:	b590      	push	{r4, r7, lr}
 800bf82:	b085      	sub	sp, #20
 800bf84:	af02      	add	r7, sp, #8
    Bitmap::registerBitmapDatabase(BitmapDatabase::getInstance(), BitmapDatabase::getInstanceSize());
 800bf86:	f7fe fb7b 	bl	800a680 <_ZN14BitmapDatabase11getInstanceEv>
 800bf8a:	4604      	mov	r4, r0
 800bf8c:	f7fe fb82 	bl	800a694 <_ZN14BitmapDatabase15getInstanceSizeEv>
 800bf90:	4603      	mov	r3, r0
 800bf92:	4619      	mov	r1, r3
 800bf94:	2300      	movs	r3, #0
 800bf96:	9300      	str	r3, [sp, #0]
 800bf98:	2300      	movs	r3, #0
 800bf9a:	2200      	movs	r2, #0
 800bf9c:	4620      	mov	r0, r4
 800bf9e:	f007 fee3 	bl	8013d68 <_ZN8touchgfx6Bitmap22registerBitmapDatabaseEPKNS0_10BitmapDataEtPtmm>
    TypedText::registerTexts(&texts);
 800bfa2:	4809      	ldr	r0, [pc, #36]	@ (800bfc8 <touchgfx_init+0x48>)
 800bfa4:	f7ff fd30 	bl	800ba08 <_ZN8touchgfx9TypedText13registerTextsEPKNS_5TextsE>
    Texts::setLanguage(0);
 800bfa8:	2000      	movs	r0, #0
 800bfaa:	f7fe fcb7 	bl	800a91c <_ZN8touchgfx5Texts11setLanguageEt>

    FontManager::setFontProvider(&fontProvider);
 800bfae:	4807      	ldr	r0, [pc, #28]	@ (800bfcc <touchgfx_init+0x4c>)
 800bfb0:	f007 fe42 	bl	8013c38 <_ZN8touchgfx11FontManager15setFontProviderEPNS_12FontProviderE>

    FrontendHeap& heap = FrontendHeap::getInstance();
 800bfb4:	f7ff febe 	bl	800bd34 <_ZN12FrontendHeap11getInstanceEv>
 800bfb8:	6078      	str	r0, [r7, #4]
    (void)heap;

    /*
     * Initialize TouchGFX
     */
    hal.initialize();
 800bfba:	4805      	ldr	r0, [pc, #20]	@ (800bfd0 <touchgfx_init+0x50>)
 800bfbc:	f7ff faa6 	bl	800b50c <_ZN11TouchGFXHAL10initializeEv>
}
 800bfc0:	bf00      	nop
 800bfc2:	370c      	adds	r7, #12
 800bfc4:	46bd      	mov	sp, r7
 800bfc6:	bd90      	pop	{r4, r7, pc}
 800bfc8:	20000b48 	.word	0x20000b48
 800bfcc:	20000020 	.word	0x20000020
 800bfd0:	20000b4c 	.word	0x20000b4c

0800bfd4 <touchgfx_components_init>:

void touchgfx_components_init()
{
 800bfd4:	b480      	push	{r7}
 800bfd6:	af00      	add	r7, sp, #0
}
 800bfd8:	bf00      	nop
 800bfda:	46bd      	mov	sp, r7
 800bfdc:	f85d 7b04 	ldr.w	r7, [sp], #4
 800bfe0:	4770      	bx	lr
	...

0800bfe4 <touchgfx_taskEntry>:

void touchgfx_taskEntry()
{
 800bfe4:	b580      	push	{r7, lr}
 800bfe6:	af00      	add	r7, sp, #0
    /*
     * Main event loop will check for VSYNC signal, and then process next frame.
     *
     * Note This function returns immediately if there is no VSYNC signal.
     */
    if (OSWrappers::isVSyncAvailable())
 800bfe8:	f7ff fba6 	bl	800b738 <_ZN8touchgfx10OSWrappers16isVSyncAvailableEv>
 800bfec:	4603      	mov	r3, r0
 800bfee:	2b00      	cmp	r3, #0
 800bff0:	d002      	beq.n	800bff8 <touchgfx_taskEntry+0x14>
    {
        hal.backPorchExited();
 800bff2:	4802      	ldr	r0, [pc, #8]	@ (800bffc <touchgfx_taskEntry+0x18>)
 800bff4:	f7ff f95c 	bl	800b2b0 <_ZN8touchgfx3HAL15backPorchExitedEv>
    }
}
 800bff8:	bf00      	nop
 800bffa:	bd80      	pop	{r7, pc}
 800bffc:	20000b4c 	.word	0x20000b4c

0800c000 <_ZN12FrontendHeapD1Ev>:
class FrontendHeap : public FrontendHeapBase
 800c000:	b580      	push	{r7, lr}
 800c002:	b082      	sub	sp, #8
 800c004:	af00      	add	r7, sp, #0
 800c006:	6078      	str	r0, [r7, #4]
 800c008:	4a10      	ldr	r2, [pc, #64]	@ (800c04c <_ZN12FrontendHeapD1Ev+0x4c>)
 800c00a:	687b      	ldr	r3, [r7, #4]
 800c00c:	601a      	str	r2, [r3, #0]
 800c00e:	687b      	ldr	r3, [r7, #4]
 800c010:	f503 7322 	add.w	r3, r3, #648	@ 0x288
 800c014:	4618      	mov	r0, r3
 800c016:	f7fe fd29 	bl	800aa6c <_ZN19FrontendApplicationD1Ev>
 800c01a:	687b      	ldr	r3, [r7, #4]
 800c01c:	f503 731d 	add.w	r3, r3, #628	@ 0x274
 800c020:	4618      	mov	r0, r3
 800c022:	f000 f827 	bl	800c074 <_ZN8touchgfx9PartitionINS_4meta8TypeListINS_12NoTransitionENS2_INS1_3NilES4_EEEELt1EED1Ev>
 800c026:	687b      	ldr	r3, [r7, #4]
 800c028:	332c      	adds	r3, #44	@ 0x2c
 800c02a:	4618      	mov	r0, r3
 800c02c:	f000 f844 	bl	800c0b8 <_ZN8touchgfx9PartitionINS_4meta8TypeListI8MainViewNS2_INS1_3NilES4_EEEELt1EED1Ev>
 800c030:	687b      	ldr	r3, [r7, #4]
 800c032:	3314      	adds	r3, #20
 800c034:	4618      	mov	r0, r3
 800c036:	f000 f863 	bl	800c100 <_ZN8touchgfx9PartitionINS_4meta8TypeListI13MainPresenterNS2_INS1_3NilES4_EEEELt1EED1Ev>
 800c03a:	687b      	ldr	r3, [r7, #4]
 800c03c:	4618      	mov	r0, r3
 800c03e:	f7ff fea5 	bl	800bd8c <_ZN16FrontendHeapBaseD1Ev>
 800c042:	687b      	ldr	r3, [r7, #4]
 800c044:	4618      	mov	r0, r3
 800c046:	3708      	adds	r7, #8
 800c048:	46bd      	mov	sp, r7
 800c04a:	bd80      	pop	{r7, pc}
 800c04c:	08024c0c 	.word	0x08024c0c

0800c050 <_ZN12FrontendHeapD0Ev>:
 800c050:	b580      	push	{r7, lr}
 800c052:	b082      	sub	sp, #8
 800c054:	af00      	add	r7, sp, #0
 800c056:	6078      	str	r0, [r7, #4]
 800c058:	6878      	ldr	r0, [r7, #4]
 800c05a:	f7ff ffd1 	bl	800c000 <_ZN12FrontendHeapD1Ev>
 800c05e:	f44f 717a 	mov.w	r1, #1000	@ 0x3e8
 800c062:	6878      	ldr	r0, [r7, #4]
 800c064:	f016 f967 	bl	8022336 <_ZdlPvj>
 800c068:	687b      	ldr	r3, [r7, #4]
 800c06a:	4618      	mov	r0, r3
 800c06c:	3708      	adds	r7, #8
 800c06e:	46bd      	mov	sp, r7
 800c070:	bd80      	pop	{r7, pc}
	...

0800c074 <_ZN8touchgfx9PartitionINS_4meta8TypeListINS_12NoTransitionENS2_INS1_3NilES4_EEEELt1EED1Ev>:
 800c074:	b580      	push	{r7, lr}
 800c076:	b082      	sub	sp, #8
 800c078:	af00      	add	r7, sp, #0
 800c07a:	6078      	str	r0, [r7, #4]
 800c07c:	4a05      	ldr	r2, [pc, #20]	@ (800c094 <_ZN8touchgfx9PartitionINS_4meta8TypeListINS_12NoTransitionENS2_INS1_3NilES4_EEEELt1EED1Ev+0x20>)
 800c07e:	687b      	ldr	r3, [r7, #4]
 800c080:	601a      	str	r2, [r3, #0]
 800c082:	687b      	ldr	r3, [r7, #4]
 800c084:	4618      	mov	r0, r3
 800c086:	f000 ffec 	bl	800d062 <_ZN8touchgfx17AbstractPartitionD1Ev>
 800c08a:	687b      	ldr	r3, [r7, #4]
 800c08c:	4618      	mov	r0, r3
 800c08e:	3708      	adds	r7, #8
 800c090:	46bd      	mov	sp, r7
 800c092:	bd80      	pop	{r7, pc}
 800c094:	08024c20 	.word	0x08024c20

0800c098 <_ZN8touchgfx9PartitionINS_4meta8TypeListINS_12NoTransitionENS2_INS1_3NilES4_EEEELt1EED0Ev>:
 800c098:	b580      	push	{r7, lr}
 800c09a:	b082      	sub	sp, #8
 800c09c:	af00      	add	r7, sp, #0
 800c09e:	6078      	str	r0, [r7, #4]
 800c0a0:	6878      	ldr	r0, [r7, #4]
 800c0a2:	f7ff ffe7 	bl	800c074 <_ZN8touchgfx9PartitionINS_4meta8TypeListINS_12NoTransitionENS2_INS1_3NilES4_EEEELt1EED1Ev>
 800c0a6:	2114      	movs	r1, #20
 800c0a8:	6878      	ldr	r0, [r7, #4]
 800c0aa:	f016 f944 	bl	8022336 <_ZdlPvj>
 800c0ae:	687b      	ldr	r3, [r7, #4]
 800c0b0:	4618      	mov	r0, r3
 800c0b2:	3708      	adds	r7, #8
 800c0b4:	46bd      	mov	sp, r7
 800c0b6:	bd80      	pop	{r7, pc}

0800c0b8 <_ZN8touchgfx9PartitionINS_4meta8TypeListI8MainViewNS2_INS1_3NilES4_EEEELt1EED1Ev>:
 800c0b8:	b580      	push	{r7, lr}
 800c0ba:	b082      	sub	sp, #8
 800c0bc:	af00      	add	r7, sp, #0
 800c0be:	6078      	str	r0, [r7, #4]
 800c0c0:	4a05      	ldr	r2, [pc, #20]	@ (800c0d8 <_ZN8touchgfx9PartitionINS_4meta8TypeListI8MainViewNS2_INS1_3NilES4_EEEELt1EED1Ev+0x20>)
 800c0c2:	687b      	ldr	r3, [r7, #4]
 800c0c4:	601a      	str	r2, [r3, #0]
 800c0c6:	687b      	ldr	r3, [r7, #4]
 800c0c8:	4618      	mov	r0, r3
 800c0ca:	f000 ffca 	bl	800d062 <_ZN8touchgfx17AbstractPartitionD1Ev>
 800c0ce:	687b      	ldr	r3, [r7, #4]
 800c0d0:	4618      	mov	r0, r3
 800c0d2:	3708      	adds	r7, #8
 800c0d4:	46bd      	mov	sp, r7
 800c0d6:	bd80      	pop	{r7, pc}
 800c0d8:	08024c54 	.word	0x08024c54

0800c0dc <_ZN8touchgfx9PartitionINS_4meta8TypeListI8MainViewNS2_INS1_3NilES4_EEEELt1EED0Ev>:
 800c0dc:	b580      	push	{r7, lr}
 800c0de:	b082      	sub	sp, #8
 800c0e0:	af00      	add	r7, sp, #0
 800c0e2:	6078      	str	r0, [r7, #4]
 800c0e4:	6878      	ldr	r0, [r7, #4]
 800c0e6:	f7ff ffe7 	bl	800c0b8 <_ZN8touchgfx9PartitionINS_4meta8TypeListI8MainViewNS2_INS1_3NilES4_EEEELt1EED1Ev>
 800c0ea:	f44f 7112 	mov.w	r1, #584	@ 0x248
 800c0ee:	6878      	ldr	r0, [r7, #4]
 800c0f0:	f016 f921 	bl	8022336 <_ZdlPvj>
 800c0f4:	687b      	ldr	r3, [r7, #4]
 800c0f6:	4618      	mov	r0, r3
 800c0f8:	3708      	adds	r7, #8
 800c0fa:	46bd      	mov	sp, r7
 800c0fc:	bd80      	pop	{r7, pc}
	...

0800c100 <_ZN8touchgfx9PartitionINS_4meta8TypeListI13MainPresenterNS2_INS1_3NilES4_EEEELt1EED1Ev>:
 800c100:	b580      	push	{r7, lr}
 800c102:	b082      	sub	sp, #8
 800c104:	af00      	add	r7, sp, #0
 800c106:	6078      	str	r0, [r7, #4]
 800c108:	4a05      	ldr	r2, [pc, #20]	@ (800c120 <_ZN8touchgfx9PartitionINS_4meta8TypeListI13MainPresenterNS2_INS1_3NilES4_EEEELt1EED1Ev+0x20>)
 800c10a:	687b      	ldr	r3, [r7, #4]
 800c10c:	601a      	str	r2, [r3, #0]
 800c10e:	687b      	ldr	r3, [r7, #4]
 800c110:	4618      	mov	r0, r3
 800c112:	f000 ffa6 	bl	800d062 <_ZN8touchgfx17AbstractPartitionD1Ev>
 800c116:	687b      	ldr	r3, [r7, #4]
 800c118:	4618      	mov	r0, r3
 800c11a:	3708      	adds	r7, #8
 800c11c:	46bd      	mov	sp, r7
 800c11e:	bd80      	pop	{r7, pc}
 800c120:	08024c88 	.word	0x08024c88

0800c124 <_ZN8touchgfx9PartitionINS_4meta8TypeListI13MainPresenterNS2_INS1_3NilES4_EEEELt1EED0Ev>:
 800c124:	b580      	push	{r7, lr}
 800c126:	b082      	sub	sp, #8
 800c128:	af00      	add	r7, sp, #0
 800c12a:	6078      	str	r0, [r7, #4]
 800c12c:	6878      	ldr	r0, [r7, #4]
 800c12e:	f7ff ffe7 	bl	800c100 <_ZN8touchgfx9PartitionINS_4meta8TypeListI13MainPresenterNS2_INS1_3NilES4_EEEELt1EED1Ev>
 800c132:	2118      	movs	r1, #24
 800c134:	6878      	ldr	r0, [r7, #4]
 800c136:	f016 f8fe 	bl	8022336 <_ZdlPvj>
 800c13a:	687b      	ldr	r3, [r7, #4]
 800c13c:	4618      	mov	r0, r3
 800c13e:	3708      	adds	r7, #8
 800c140:	46bd      	mov	sp, r7
 800c142:	bd80      	pop	{r7, pc}

0800c144 <_ZN8touchgfx8LCD16bppD1Ev>:
 *
 * @see LCD
 *
 * @note All coordinates are expected to be in absolute coordinates!
 */
class LCD16bpp : public LCD
 800c144:	b580      	push	{r7, lr}
 800c146:	b082      	sub	sp, #8
 800c148:	af00      	add	r7, sp, #0
 800c14a:	6078      	str	r0, [r7, #4]
 800c14c:	4a05      	ldr	r2, [pc, #20]	@ (800c164 <_ZN8touchgfx8LCD16bppD1Ev+0x20>)
 800c14e:	687b      	ldr	r3, [r7, #4]
 800c150:	601a      	str	r2, [r3, #0]
 800c152:	687b      	ldr	r3, [r7, #4]
 800c154:	4618      	mov	r0, r3
 800c156:	f7ff fca7 	bl	800baa8 <_ZN8touchgfx3LCDD1Ev>
 800c15a:	687b      	ldr	r3, [r7, #4]
 800c15c:	4618      	mov	r0, r3
 800c15e:	3708      	adds	r7, #8
 800c160:	46bd      	mov	sp, r7
 800c162:	bd80      	pop	{r7, pc}
 800c164:	08025800 	.word	0x08025800

0800c168 <_ZN8touchgfx8LCD16bppD0Ev>:
 800c168:	b580      	push	{r7, lr}
 800c16a:	b082      	sub	sp, #8
 800c16c:	af00      	add	r7, sp, #0
 800c16e:	6078      	str	r0, [r7, #4]
 800c170:	6878      	ldr	r0, [r7, #4]
 800c172:	f7ff ffe7 	bl	800c144 <_ZN8touchgfx8LCD16bppD1Ev>
 800c176:	218c      	movs	r1, #140	@ 0x8c
 800c178:	6878      	ldr	r0, [r7, #4]
 800c17a:	f016 f8dc 	bl	8022336 <_ZdlPvj>
 800c17e:	687b      	ldr	r3, [r7, #4]
 800c180:	4618      	mov	r0, r3
 800c182:	3708      	adds	r7, #8
 800c184:	46bd      	mov	sp, r7
 800c186:	bd80      	pop	{r7, pc}

0800c188 <_Z41__static_initialization_and_destruction_0ii>:
 800c188:	b580      	push	{r7, lr}
 800c18a:	b084      	sub	sp, #16
 800c18c:	af02      	add	r7, sp, #8
 800c18e:	6078      	str	r0, [r7, #4]
 800c190:	6039      	str	r1, [r7, #0]
 800c192:	687b      	ldr	r3, [r7, #4]
 800c194:	2b01      	cmp	r3, #1
 800c196:	d119      	bne.n	800c1cc <_Z41__static_initialization_and_destruction_0ii+0x44>
 800c198:	683b      	ldr	r3, [r7, #0]
 800c19a:	f64f 72ff 	movw	r2, #65535	@ 0xffff
 800c19e:	4293      	cmp	r3, r2
 800c1a0:	d114      	bne.n	800c1cc <_Z41__static_initialization_and_destruction_0ii+0x44>
static STM32TouchController tc;
 800c1a2:	4818      	ldr	r0, [pc, #96]	@ (800c204 <_Z41__static_initialization_and_destruction_0ii+0x7c>)
 800c1a4:	f7ff feda 	bl	800bf5c <_ZN20STM32TouchControllerC1Ev>
static STM32DMA dma;
 800c1a8:	4817      	ldr	r0, [pc, #92]	@ (800c208 <_Z41__static_initialization_and_destruction_0ii+0x80>)
 800c1aa:	f7ff fb8f 	bl	800b8cc <_ZN8STM32DMAC1Ev>
static LCD16bpp display;
 800c1ae:	4817      	ldr	r0, [pc, #92]	@ (800c20c <_Z41__static_initialization_and_destruction_0ii+0x84>)
 800c1b0:	f00c fed6 	bl	8018f60 <_ZN8touchgfx8LCD16bppC1Ev>
static TouchGFXHAL hal(dma, display, tc, 320, 480);
 800c1b4:	f44f 73f0 	mov.w	r3, #480	@ 0x1e0
 800c1b8:	9301      	str	r3, [sp, #4]
 800c1ba:	f44f 73a0 	mov.w	r3, #320	@ 0x140
 800c1be:	9300      	str	r3, [sp, #0]
 800c1c0:	4b10      	ldr	r3, [pc, #64]	@ (800c204 <_Z41__static_initialization_and_destruction_0ii+0x7c>)
 800c1c2:	4a12      	ldr	r2, [pc, #72]	@ (800c20c <_Z41__static_initialization_and_destruction_0ii+0x84>)
 800c1c4:	4910      	ldr	r1, [pc, #64]	@ (800c208 <_Z41__static_initialization_and_destruction_0ii+0x80>)
 800c1c6:	4812      	ldr	r0, [pc, #72]	@ (800c210 <_Z41__static_initialization_and_destruction_0ii+0x88>)
 800c1c8:	f7ff fe9c 	bl	800bf04 <_ZN11TouchGFXHALC1ERN8touchgfx13DMA_InterfaceERNS0_3LCDERNS0_15TouchControllerEtt>
 800c1cc:	687b      	ldr	r3, [r7, #4]
 800c1ce:	2b00      	cmp	r3, #0
 800c1d0:	d113      	bne.n	800c1fa <_Z41__static_initialization_and_destruction_0ii+0x72>
 800c1d2:	683b      	ldr	r3, [r7, #0]
 800c1d4:	f64f 72ff 	movw	r2, #65535	@ 0xffff
 800c1d8:	4293      	cmp	r3, r2
 800c1da:	d10e      	bne.n	800c1fa <_Z41__static_initialization_and_destruction_0ii+0x72>
 800c1dc:	480c      	ldr	r0, [pc, #48]	@ (800c210 <_Z41__static_initialization_and_destruction_0ii+0x88>)
 800c1de:	f7ff fa25 	bl	800b62c <_ZN11TouchGFXHALD1Ev>
static ApplicationFontProvider fontProvider;
 800c1e2:	480c      	ldr	r0, [pc, #48]	@ (800c214 <_Z41__static_initialization_and_destruction_0ii+0x8c>)
 800c1e4:	f7fc f820 	bl	8008228 <_ZN23ApplicationFontProviderD1Ev>
static LCD16bpp display;
 800c1e8:	4808      	ldr	r0, [pc, #32]	@ (800c20c <_Z41__static_initialization_and_destruction_0ii+0x84>)
 800c1ea:	f7ff ffab 	bl	800c144 <_ZN8touchgfx8LCD16bppD1Ev>
static STM32DMA dma;
 800c1ee:	4806      	ldr	r0, [pc, #24]	@ (800c208 <_Z41__static_initialization_and_destruction_0ii+0x80>)
 800c1f0:	f7ff fbc0 	bl	800b974 <_ZN8STM32DMAD1Ev>
static STM32TouchController tc;
 800c1f4:	4803      	ldr	r0, [pc, #12]	@ (800c204 <_Z41__static_initialization_and_destruction_0ii+0x7c>)
 800c1f6:	f7fe ff61 	bl	800b0bc <_ZN20STM32TouchControllerD1Ev>
}
 800c1fa:	bf00      	nop
 800c1fc:	3708      	adds	r7, #8
 800c1fe:	46bd      	mov	sp, r7
 800c200:	bd80      	pop	{r7, pc}
 800c202:	bf00      	nop
 800c204:	20000a74 	.word	0x20000a74
 800c208:	20000a78 	.word	0x20000a78
 800c20c:	20000abc 	.word	0x20000abc
 800c210:	20000b4c 	.word	0x20000b4c
 800c214:	20000020 	.word	0x20000020

0800c218 <_ZNK8touchgfx9PartitionINS_4meta8TypeListINS_12NoTransitionENS2_INS1_3NilES4_EEEELt1EE8capacityEv>:
    {
        INTS_PR_ELEMENT = (sizeof(typename meta::select_type_maxsize<SupportedTypesList>::type) + sizeof(int) - 1) / sizeof(int),
        SIZE_OF_ELEMENT = INTS_PR_ELEMENT * sizeof(int)
    };

    virtual uint16_t capacity() const
 800c218:	b480      	push	{r7}
 800c21a:	b083      	sub	sp, #12
 800c21c:	af00      	add	r7, sp, #0
 800c21e:	6078      	str	r0, [r7, #4]
    {
        return NUMBER_OF_ELEMENTS;
 800c220:	2301      	movs	r3, #1
    }
 800c222:	4618      	mov	r0, r3
 800c224:	370c      	adds	r7, #12
 800c226:	46bd      	mov	sp, r7
 800c228:	f85d 7b04 	ldr.w	r7, [sp], #4
 800c22c:	4770      	bx	lr

0800c22e <_ZN8touchgfx9PartitionINS_4meta8TypeListINS_12NoTransitionENS2_INS1_3NilES4_EEEELt1EE12element_sizeEv>:

    virtual uint32_t element_size()
 800c22e:	b480      	push	{r7}
 800c230:	b083      	sub	sp, #12
 800c232:	af00      	add	r7, sp, #0
 800c234:	6078      	str	r0, [r7, #4]
    {
        return sizeof(stBlocks[0]);
 800c236:	230c      	movs	r3, #12
    }
 800c238:	4618      	mov	r0, r3
 800c23a:	370c      	adds	r7, #12
 800c23c:	46bd      	mov	sp, r7
 800c23e:	f85d 7b04 	ldr.w	r7, [sp], #4
 800c242:	4770      	bx	lr

0800c244 <_ZN8touchgfx9PartitionINS_4meta8TypeListINS_12NoTransitionENS2_INS1_3NilES4_EEEELt1EE7elementEt>:

protected:
    virtual void* element(uint16_t index)
 800c244:	b480      	push	{r7}
 800c246:	b083      	sub	sp, #12
 800c248:	af00      	add	r7, sp, #0
 800c24a:	6078      	str	r0, [r7, #4]
 800c24c:	460b      	mov	r3, r1
 800c24e:	807b      	strh	r3, [r7, #2]
    {
        return &stBlocks[index];
 800c250:	887a      	ldrh	r2, [r7, #2]
 800c252:	4613      	mov	r3, r2
 800c254:	005b      	lsls	r3, r3, #1
 800c256:	4413      	add	r3, r2
 800c258:	009b      	lsls	r3, r3, #2
 800c25a:	3308      	adds	r3, #8
 800c25c:	687a      	ldr	r2, [r7, #4]
 800c25e:	4413      	add	r3, r2
    }
 800c260:	4618      	mov	r0, r3
 800c262:	370c      	adds	r7, #12
 800c264:	46bd      	mov	sp, r7
 800c266:	f85d 7b04 	ldr.w	r7, [sp], #4
 800c26a:	4770      	bx	lr

0800c26c <_ZNK8touchgfx9PartitionINS_4meta8TypeListINS_12NoTransitionENS2_INS1_3NilES4_EEEELt1EE7elementEt>:

    virtual const void* element(uint16_t index) const
 800c26c:	b480      	push	{r7}
 800c26e:	b083      	sub	sp, #12
 800c270:	af00      	add	r7, sp, #0
 800c272:	6078      	str	r0, [r7, #4]
 800c274:	460b      	mov	r3, r1
 800c276:	807b      	strh	r3, [r7, #2]
    {
        return &stBlocks[index];
 800c278:	887a      	ldrh	r2, [r7, #2]
 800c27a:	4613      	mov	r3, r2
 800c27c:	005b      	lsls	r3, r3, #1
 800c27e:	4413      	add	r3, r2
 800c280:	009b      	lsls	r3, r3, #2
 800c282:	3308      	adds	r3, #8
 800c284:	687a      	ldr	r2, [r7, #4]
 800c286:	4413      	add	r3, r2
    }
 800c288:	4618      	mov	r0, r3
 800c28a:	370c      	adds	r7, #12
 800c28c:	46bd      	mov	sp, r7
 800c28e:	f85d 7b04 	ldr.w	r7, [sp], #4
 800c292:	4770      	bx	lr

0800c294 <_ZNK8touchgfx9PartitionINS_4meta8TypeListI8MainViewNS2_INS1_3NilES4_EEEELt1EE8capacityEv>:
    virtual uint16_t capacity() const
 800c294:	b480      	push	{r7}
 800c296:	b083      	sub	sp, #12
 800c298:	af00      	add	r7, sp, #0
 800c29a:	6078      	str	r0, [r7, #4]
        return NUMBER_OF_ELEMENTS;
 800c29c:	2301      	movs	r3, #1
    }
 800c29e:	4618      	mov	r0, r3
 800c2a0:	370c      	adds	r7, #12
 800c2a2:	46bd      	mov	sp, r7
 800c2a4:	f85d 7b04 	ldr.w	r7, [sp], #4
 800c2a8:	4770      	bx	lr

0800c2aa <_ZN8touchgfx9PartitionINS_4meta8TypeListI8MainViewNS2_INS1_3NilES4_EEEELt1EE12element_sizeEv>:
    virtual uint32_t element_size()
 800c2aa:	b480      	push	{r7}
 800c2ac:	b083      	sub	sp, #12
 800c2ae:	af00      	add	r7, sp, #0
 800c2b0:	6078      	str	r0, [r7, #4]
        return sizeof(stBlocks[0]);
 800c2b2:	f44f 7310 	mov.w	r3, #576	@ 0x240
    }
 800c2b6:	4618      	mov	r0, r3
 800c2b8:	370c      	adds	r7, #12
 800c2ba:	46bd      	mov	sp, r7
 800c2bc:	f85d 7b04 	ldr.w	r7, [sp], #4
 800c2c0:	4770      	bx	lr

0800c2c2 <_ZN8touchgfx9PartitionINS_4meta8TypeListI8MainViewNS2_INS1_3NilES4_EEEELt1EE7elementEt>:
    virtual void* element(uint16_t index)
 800c2c2:	b480      	push	{r7}
 800c2c4:	b083      	sub	sp, #12
 800c2c6:	af00      	add	r7, sp, #0
 800c2c8:	6078      	str	r0, [r7, #4]
 800c2ca:	460b      	mov	r3, r1
 800c2cc:	807b      	strh	r3, [r7, #2]
        return &stBlocks[index];
 800c2ce:	887a      	ldrh	r2, [r7, #2]
 800c2d0:	4613      	mov	r3, r2
 800c2d2:	00db      	lsls	r3, r3, #3
 800c2d4:	4413      	add	r3, r2
 800c2d6:	019b      	lsls	r3, r3, #6
 800c2d8:	3308      	adds	r3, #8
 800c2da:	687a      	ldr	r2, [r7, #4]
 800c2dc:	4413      	add	r3, r2
    }
 800c2de:	4618      	mov	r0, r3
 800c2e0:	370c      	adds	r7, #12
 800c2e2:	46bd      	mov	sp, r7
 800c2e4:	f85d 7b04 	ldr.w	r7, [sp], #4
 800c2e8:	4770      	bx	lr

0800c2ea <_ZNK8touchgfx9PartitionINS_4meta8TypeListI8MainViewNS2_INS1_3NilES4_EEEELt1EE7elementEt>:
    virtual const void* element(uint16_t index) const
 800c2ea:	b480      	push	{r7}
 800c2ec:	b083      	sub	sp, #12
 800c2ee:	af00      	add	r7, sp, #0
 800c2f0:	6078      	str	r0, [r7, #4]
 800c2f2:	460b      	mov	r3, r1
 800c2f4:	807b      	strh	r3, [r7, #2]
        return &stBlocks[index];
 800c2f6:	887a      	ldrh	r2, [r7, #2]
 800c2f8:	4613      	mov	r3, r2
 800c2fa:	00db      	lsls	r3, r3, #3
 800c2fc:	4413      	add	r3, r2
 800c2fe:	019b      	lsls	r3, r3, #6
 800c300:	3308      	adds	r3, #8
 800c302:	687a      	ldr	r2, [r7, #4]
 800c304:	4413      	add	r3, r2
    }
 800c306:	4618      	mov	r0, r3
 800c308:	370c      	adds	r7, #12
 800c30a:	46bd      	mov	sp, r7
 800c30c:	f85d 7b04 	ldr.w	r7, [sp], #4
 800c310:	4770      	bx	lr

0800c312 <_ZNK8touchgfx9PartitionINS_4meta8TypeListI13MainPresenterNS2_INS1_3NilES4_EEEELt1EE8capacityEv>:
    virtual uint16_t capacity() const
 800c312:	b480      	push	{r7}
 800c314:	b083      	sub	sp, #12
 800c316:	af00      	add	r7, sp, #0
 800c318:	6078      	str	r0, [r7, #4]
        return NUMBER_OF_ELEMENTS;
 800c31a:	2301      	movs	r3, #1
    }
 800c31c:	4618      	mov	r0, r3
 800c31e:	370c      	adds	r7, #12
 800c320:	46bd      	mov	sp, r7
 800c322:	f85d 7b04 	ldr.w	r7, [sp], #4
 800c326:	4770      	bx	lr

0800c328 <_ZN8touchgfx9PartitionINS_4meta8TypeListI13MainPresenterNS2_INS1_3NilES4_EEEELt1EE12element_sizeEv>:
    virtual uint32_t element_size()
 800c328:	b480      	push	{r7}
 800c32a:	b083      	sub	sp, #12
 800c32c:	af00      	add	r7, sp, #0
 800c32e:	6078      	str	r0, [r7, #4]
        return sizeof(stBlocks[0]);
 800c330:	2310      	movs	r3, #16
    }
 800c332:	4618      	mov	r0, r3
 800c334:	370c      	adds	r7, #12
 800c336:	46bd      	mov	sp, r7
 800c338:	f85d 7b04 	ldr.w	r7, [sp], #4
 800c33c:	4770      	bx	lr

0800c33e <_ZN8touchgfx9PartitionINS_4meta8TypeListI13MainPresenterNS2_INS1_3NilES4_EEEELt1EE7elementEt>:
    virtual void* element(uint16_t index)
 800c33e:	b480      	push	{r7}
 800c340:	b083      	sub	sp, #12
 800c342:	af00      	add	r7, sp, #0
 800c344:	6078      	str	r0, [r7, #4]
 800c346:	460b      	mov	r3, r1
 800c348:	807b      	strh	r3, [r7, #2]
        return &stBlocks[index];
 800c34a:	887b      	ldrh	r3, [r7, #2]
 800c34c:	011b      	lsls	r3, r3, #4
 800c34e:	3308      	adds	r3, #8
 800c350:	687a      	ldr	r2, [r7, #4]
 800c352:	4413      	add	r3, r2
    }
 800c354:	4618      	mov	r0, r3
 800c356:	370c      	adds	r7, #12
 800c358:	46bd      	mov	sp, r7
 800c35a:	f85d 7b04 	ldr.w	r7, [sp], #4
 800c35e:	4770      	bx	lr

0800c360 <_ZNK8touchgfx9PartitionINS_4meta8TypeListI13MainPresenterNS2_INS1_3NilES4_EEEELt1EE7elementEt>:
    virtual const void* element(uint16_t index) const
 800c360:	b480      	push	{r7}
 800c362:	b083      	sub	sp, #12
 800c364:	af00      	add	r7, sp, #0
 800c366:	6078      	str	r0, [r7, #4]
 800c368:	460b      	mov	r3, r1
 800c36a:	807b      	strh	r3, [r7, #2]
        return &stBlocks[index];
 800c36c:	887b      	ldrh	r3, [r7, #2]
 800c36e:	011b      	lsls	r3, r3, #4
 800c370:	3308      	adds	r3, #8
 800c372:	687a      	ldr	r2, [r7, #4]
 800c374:	4413      	add	r3, r2
    }
 800c376:	4618      	mov	r0, r3
 800c378:	370c      	adds	r7, #12
 800c37a:	46bd      	mov	sp, r7
 800c37c:	f85d 7b04 	ldr.w	r7, [sp], #4
 800c380:	4770      	bx	lr

0800c382 <_GLOBAL__sub_I_touchgfx_init>:
 800c382:	b580      	push	{r7, lr}
 800c384:	af00      	add	r7, sp, #0
 800c386:	f64f 71ff 	movw	r1, #65535	@ 0xffff
 800c38a:	2001      	movs	r0, #1
 800c38c:	f7ff fefc 	bl	800c188 <_Z41__static_initialization_and_destruction_0ii>
 800c390:	bd80      	pop	{r7, pc}

0800c392 <_GLOBAL__sub_D_touchgfx_init>:
 800c392:	b580      	push	{r7, lr}
 800c394:	af00      	add	r7, sp, #0
 800c396:	f64f 71ff 	movw	r1, #65535	@ 0xffff
 800c39a:	2000      	movs	r0, #0
 800c39c:	f7ff fef4 	bl	800c188 <_Z41__static_initialization_and_destruction_0ii>
 800c3a0:	bd80      	pop	{r7, pc}

0800c3a2 <_ZNK8touchgfx9colortypecvmEv>:
    operator uint32_t() const
 800c3a2:	b480      	push	{r7}
 800c3a4:	b083      	sub	sp, #12
 800c3a6:	af00      	add	r7, sp, #0
 800c3a8:	6078      	str	r0, [r7, #4]
        return color;
 800c3aa:	687b      	ldr	r3, [r7, #4]
 800c3ac:	681b      	ldr	r3, [r3, #0]
    }
 800c3ae:	4618      	mov	r0, r3
 800c3b0:	370c      	adds	r7, #12
 800c3b2:	46bd      	mov	sp, r7
 800c3b4:	f85d 7b04 	ldr.w	r7, [sp], #4
 800c3b8:	4770      	bx	lr
	...

0800c3bc <_ZN8touchgfx20FrameBufferAllocatorD1Ev>:
     * transferred and ready to reuse.
     */
    virtual void freeBlockAfterTransfer() = 0;

    /** Finalizes an instance of the FrameBufferAllocator class. */
    virtual ~FrameBufferAllocator()
 800c3bc:	b480      	push	{r7}
 800c3be:	b083      	sub	sp, #12
 800c3c0:	af00      	add	r7, sp, #0
 800c3c2:	6078      	str	r0, [r7, #4]
    {
 800c3c4:	4a04      	ldr	r2, [pc, #16]	@ (800c3d8 <_ZN8touchgfx20FrameBufferAllocatorD1Ev+0x1c>)
 800c3c6:	687b      	ldr	r3, [r7, #4]
 800c3c8:	601a      	str	r2, [r3, #0]
    }
 800c3ca:	687b      	ldr	r3, [r7, #4]
 800c3cc:	4618      	mov	r0, r3
 800c3ce:	370c      	adds	r7, #12
 800c3d0:	46bd      	mov	sp, r7
 800c3d2:	f85d 7b04 	ldr.w	r7, [sp], #4
 800c3d6:	4770      	bx	lr
 800c3d8:	08024de4 	.word	0x08024de4

0800c3dc <_ZN8touchgfx20FrameBufferAllocatorD0Ev>:
    virtual ~FrameBufferAllocator()
 800c3dc:	b580      	push	{r7, lr}
 800c3de:	b082      	sub	sp, #8
 800c3e0:	af00      	add	r7, sp, #0
 800c3e2:	6078      	str	r0, [r7, #4]
    }
 800c3e4:	6878      	ldr	r0, [r7, #4]
 800c3e6:	f7ff ffe9 	bl	800c3bc <_ZN8touchgfx20FrameBufferAllocatorD1Ev>
 800c3ea:	2104      	movs	r1, #4
 800c3ec:	6878      	ldr	r0, [r7, #4]
 800c3ee:	f015 ffa2 	bl	8022336 <_ZdlPvj>
 800c3f2:	687b      	ldr	r3, [r7, #4]
 800c3f4:	4618      	mov	r0, r3
 800c3f6:	3708      	adds	r7, #8
 800c3f8:	46bd      	mov	sp, r7
 800c3fa:	bd80      	pop	{r7, pc}

0800c3fc <_ZN8touchgfx3HAL5vSyncEv>:
    /**
     * Called by the VSync interrupt.
     *
     * Called by the VSync interrupt for counting of LCD refreshes.
     */
    void vSync()
 800c3fc:	b480      	push	{r7}
 800c3fe:	b083      	sub	sp, #12
 800c400:	af00      	add	r7, sp, #0
 800c402:	6078      	str	r0, [r7, #4]
    {
        vSyncCnt++;
 800c404:	687b      	ldr	r3, [r7, #4]
 800c406:	f893 306a 	ldrb.w	r3, [r3, #106]	@ 0x6a
 800c40a:	3301      	adds	r3, #1
 800c40c:	b2da      	uxtb	r2, r3
 800c40e:	687b      	ldr	r3, [r7, #4]
 800c410:	f883 206a 	strb.w	r2, [r3, #106]	@ 0x6a
    }
 800c414:	bf00      	nop
 800c416:	370c      	adds	r7, #12
 800c418:	46bd      	mov	sp, r7
 800c41a:	f85d 7b04 	ldr.w	r7, [sp], #4
 800c41e:	4770      	bx	lr

0800c420 <_ZN8touchgfx3HAL23setFrameBufferAllocatorEPNS_20FrameBufferAllocatorE>:
     * Sets a framebuffer allocator. The framebuffer allocator is only used in partial
     * framebuffer mode.
     *
     * @param [in] allocator pointer to a framebuffer allocator object.
     */
    void setFrameBufferAllocator(FrameBufferAllocator* allocator)
 800c420:	b480      	push	{r7}
 800c422:	b083      	sub	sp, #12
 800c424:	af00      	add	r7, sp, #0
 800c426:	6078      	str	r0, [r7, #4]
 800c428:	6039      	str	r1, [r7, #0]
    {
        frameBufferAllocator = allocator;
 800c42a:	687b      	ldr	r3, [r7, #4]
 800c42c:	683a      	ldr	r2, [r7, #0]
 800c42e:	619a      	str	r2, [r3, #24]
    }
 800c430:	bf00      	nop
 800c432:	370c      	adds	r7, #12
 800c434:	46bd      	mov	sp, r7
 800c436:	f85d 7b04 	ldr.w	r7, [sp], #4
 800c43a:	4770      	bx	lr

0800c43c <_ZN8touchgfx3HAL23getFrameBufferAllocatorEv>:
    /**
     * Gets the framebuffer allocator.
     *
     * @return The framebuffer allocator.
     */
    FrameBufferAllocator* getFrameBufferAllocator()
 800c43c:	b480      	push	{r7}
 800c43e:	b083      	sub	sp, #12
 800c440:	af00      	add	r7, sp, #0
 800c442:	6078      	str	r0, [r7, #4]
    {
        return frameBufferAllocator;
 800c444:	687b      	ldr	r3, [r7, #4]
 800c446:	699b      	ldr	r3, [r3, #24]
    }
 800c448:	4618      	mov	r0, r3
 800c44a:	370c      	adds	r7, #12
 800c44c:	46bd      	mov	sp, r7
 800c44e:	f85d 7b04 	ldr.w	r7, [sp], #4
 800c452:	4770      	bx	lr

0800c454 <_ZN8touchgfx3HAL23setFrameRefreshStrategyENS0_20FrameRefreshStrategyE>:
     *
     * @param  s The desired strategy to use.
     *
     * @return true if the desired strategy will be used, false otherwise.
     */
    bool setFrameRefreshStrategy(FrameRefreshStrategy s)
 800c454:	b580      	push	{r7, lr}
 800c456:	b082      	sub	sp, #8
 800c458:	af00      	add	r7, sp, #0
 800c45a:	6078      	str	r0, [r7, #4]
 800c45c:	460b      	mov	r3, r1
 800c45e:	70fb      	strb	r3, [r7, #3]
    {
        if (s == REFRESH_STRATEGY_DEFAULT || s == REFRESH_STRATEGY_PARTIAL_FRAMEBUFFER)
 800c460:	78fb      	ldrb	r3, [r7, #3]
 800c462:	2b00      	cmp	r3, #0
 800c464:	d002      	beq.n	800c46c <_ZN8touchgfx3HAL23setFrameRefreshStrategyENS0_20FrameRefreshStrategyE+0x18>
 800c466:	78fb      	ldrb	r3, [r7, #3]
 800c468:	2b02      	cmp	r3, #2
 800c46a:	d105      	bne.n	800c478 <_ZN8touchgfx3HAL23setFrameRefreshStrategyENS0_20FrameRefreshStrategyE+0x24>
        {
            refreshStrategy = s;
 800c46c:	687b      	ldr	r3, [r7, #4]
 800c46e:	78fa      	ldrb	r2, [r7, #3]
 800c470:	f883 2048 	strb.w	r2, [r3, #72]	@ 0x48
            return true;
 800c474:	2301      	movs	r3, #1
 800c476:	e027      	b.n	800c4c8 <_ZN8touchgfx3HAL23setFrameRefreshStrategyENS0_20FrameRefreshStrategyE+0x74>
        }
        if (s == REFRESH_STRATEGY_OPTIM_SINGLE_BUFFER_TFT_CTRL)
 800c478:	78fb      	ldrb	r3, [r7, #3]
 800c47a:	2b01      	cmp	r3, #1
 800c47c:	d123      	bne.n	800c4c6 <_ZN8touchgfx3HAL23setFrameRefreshStrategyENS0_20FrameRefreshStrategyE+0x72>
        {
            // Perform sanity checks. This strategy requires
            //   - task delay function
            //   - a TFT controller (+ an impl of getTFTCurrentLine())
            //   - single buffering
            if (taskDelayFunc != 0 && getTFTCurrentLine() != 0xFFFF && !USE_DOUBLE_BUFFERING)
 800c47e:	687b      	ldr	r3, [r7, #4]
 800c480:	6b9b      	ldr	r3, [r3, #56]	@ 0x38
 800c482:	2b00      	cmp	r3, #0
 800c484:	d014      	beq.n	800c4b0 <_ZN8touchgfx3HAL23setFrameRefreshStrategyENS0_20FrameRefreshStrategyE+0x5c>
 800c486:	687b      	ldr	r3, [r7, #4]
 800c488:	681b      	ldr	r3, [r3, #0]
 800c48a:	339c      	adds	r3, #156	@ 0x9c
 800c48c:	681b      	ldr	r3, [r3, #0]
 800c48e:	6878      	ldr	r0, [r7, #4]
 800c490:	4798      	blx	r3
 800c492:	4603      	mov	r3, r0
 800c494:	461a      	mov	r2, r3
 800c496:	f64f 73ff 	movw	r3, #65535	@ 0xffff
 800c49a:	429a      	cmp	r2, r3
 800c49c:	d008      	beq.n	800c4b0 <_ZN8touchgfx3HAL23setFrameRefreshStrategyENS0_20FrameRefreshStrategyE+0x5c>
 800c49e:	4b0c      	ldr	r3, [pc, #48]	@ (800c4d0 <_ZN8touchgfx3HAL23setFrameRefreshStrategyENS0_20FrameRefreshStrategyE+0x7c>)
 800c4a0:	781b      	ldrb	r3, [r3, #0]
 800c4a2:	f083 0301 	eor.w	r3, r3, #1
 800c4a6:	b2db      	uxtb	r3, r3
 800c4a8:	2b00      	cmp	r3, #0
 800c4aa:	d001      	beq.n	800c4b0 <_ZN8touchgfx3HAL23setFrameRefreshStrategyENS0_20FrameRefreshStrategyE+0x5c>
 800c4ac:	2301      	movs	r3, #1
 800c4ae:	e000      	b.n	800c4b2 <_ZN8touchgfx3HAL23setFrameRefreshStrategyENS0_20FrameRefreshStrategyE+0x5e>
 800c4b0:	2300      	movs	r3, #0
 800c4b2:	2b00      	cmp	r3, #0
 800c4b4:	d005      	beq.n	800c4c2 <_ZN8touchgfx3HAL23setFrameRefreshStrategyENS0_20FrameRefreshStrategyE+0x6e>
            {
                refreshStrategy = s;
 800c4b6:	687b      	ldr	r3, [r7, #4]
 800c4b8:	78fa      	ldrb	r2, [r7, #3]
 800c4ba:	f883 2048 	strb.w	r2, [r3, #72]	@ 0x48
                return true;
 800c4be:	2301      	movs	r3, #1
 800c4c0:	e002      	b.n	800c4c8 <_ZN8touchgfx3HAL23setFrameRefreshStrategyENS0_20FrameRefreshStrategyE+0x74>
            }
            return false;
 800c4c2:	2300      	movs	r3, #0
 800c4c4:	e000      	b.n	800c4c8 <_ZN8touchgfx3HAL23setFrameRefreshStrategyENS0_20FrameRefreshStrategyE+0x74>
        }
        // Unknown strategy
        return false;
 800c4c6:	2300      	movs	r3, #0
    }
 800c4c8:	4618      	mov	r0, r3
 800c4ca:	3708      	adds	r7, #8
 800c4cc:	46bd      	mov	sp, r7
 800c4ce:	bd80      	pop	{r7, pc}
 800c4d0:	20002dba 	.word	0x20002dba

0800c4d4 <_ZN8touchgfx5paint8tearDownEv>:
{
    blendL8CLUT = data;
}

void tearDown()
{
 800c4d4:	b480      	push	{r7}
 800c4d6:	af00      	add	r7, sp, #0
}
 800c4d8:	bf00      	nop
 800c4da:	46bd      	mov	sp, r7
 800c4dc:	f85d 7b04 	ldr.w	r7, [sp], #4
 800c4e0:	4770      	bx	lr

0800c4e2 <_ZN8touchgfx5paint9flushLineEPmi>:

void flushLine(uint32_t* addr, int sizebytes)
{
 800c4e2:	b480      	push	{r7}
 800c4e4:	b083      	sub	sp, #12
 800c4e6:	af00      	add	r7, sp, #0
 800c4e8:	6078      	str	r0, [r7, #4]
 800c4ea:	6039      	str	r1, [r7, #0]
}
 800c4ec:	bf00      	nop
 800c4ee:	370c      	adds	r7, #12
 800c4f0:	46bd      	mov	sp, r7
 800c4f2:	f85d 7b04 	ldr.w	r7, [sp], #4
 800c4f6:	4770      	bx	lr

0800c4f8 <_ZN8touchgfx5paint6rgb56514lineFromRGB565EPtPKtjh>:
        } while (++framebuffer < lineEnd);
    }
}

void lineFromRGB565(uint16_t* const ptr, const uint16_t* const data, const unsigned count, const uint8_t alpha)
{
 800c4f8:	b480      	push	{r7}
 800c4fa:	b08d      	sub	sp, #52	@ 0x34
 800c4fc:	af00      	add	r7, sp, #0
 800c4fe:	60f8      	str	r0, [r7, #12]
 800c500:	60b9      	str	r1, [r7, #8]
 800c502:	607a      	str	r2, [r7, #4]
 800c504:	70fb      	strb	r3, [r7, #3]
    uint16_t* framebuffer = ptr;
 800c506:	68fb      	ldr	r3, [r7, #12]
 800c508:	62fb      	str	r3, [r7, #44]	@ 0x2c
    const uint16_t* bitmapPointer = data;
 800c50a:	68bb      	ldr	r3, [r7, #8]
 800c50c:	62bb      	str	r3, [r7, #40]	@ 0x28
    const uint16_t* const chunkend = framebuffer + count;
 800c50e:	687b      	ldr	r3, [r7, #4]
 800c510:	005b      	lsls	r3, r3, #1
 800c512:	6afa      	ldr	r2, [r7, #44]	@ 0x2c
 800c514:	4413      	add	r3, r2
 800c516:	627b      	str	r3, [r7, #36]	@ 0x24

    if (alpha == 0xFF)
 800c518:	78fb      	ldrb	r3, [r7, #3]
 800c51a:	2bff      	cmp	r3, #255	@ 0xff
 800c51c:	d112      	bne.n	800c544 <_ZN8touchgfx5paint6rgb56514lineFromRGB565EPtPKtjh+0x4c>
    {
        do
        {
            *framebuffer = *bitmapPointer++;
 800c51e:	6abb      	ldr	r3, [r7, #40]	@ 0x28
 800c520:	1c9a      	adds	r2, r3, #2
 800c522:	62ba      	str	r2, [r7, #40]	@ 0x28
 800c524:	881a      	ldrh	r2, [r3, #0]
 800c526:	6afb      	ldr	r3, [r7, #44]	@ 0x2c
 800c528:	801a      	strh	r2, [r3, #0]
        } while (++framebuffer < chunkend);
 800c52a:	6afb      	ldr	r3, [r7, #44]	@ 0x2c
 800c52c:	3302      	adds	r3, #2
 800c52e:	62fb      	str	r3, [r7, #44]	@ 0x2c
 800c530:	6afa      	ldr	r2, [r7, #44]	@ 0x2c
 800c532:	6a7b      	ldr	r3, [r7, #36]	@ 0x24
 800c534:	429a      	cmp	r2, r3
 800c536:	bf34      	ite	cc
 800c538:	2301      	movcc	r3, #1
 800c53a:	2300      	movcs	r3, #0
 800c53c:	b2db      	uxtb	r3, r3
 800c53e:	2b00      	cmp	r3, #0
 800c540:	d1ed      	bne.n	800c51e <_ZN8touchgfx5paint6rgb56514lineFromRGB565EPtPKtjh+0x26>
        do
        {
            *framebuffer = alphaBlend(*bitmapPointer++, *framebuffer, alpha);
        } while (++framebuffer < chunkend);
    }
}
 800c542:	e079      	b.n	800c638 <_ZN8touchgfx5paint6rgb56514lineFromRGB565EPtPKtjh+0x140>
            *framebuffer = alphaBlend(*bitmapPointer++, *framebuffer, alpha);
 800c544:	6abb      	ldr	r3, [r7, #40]	@ 0x28
 800c546:	1c9a      	adds	r2, r3, #2
 800c548:	62ba      	str	r2, [r7, #40]	@ 0x28
 800c54a:	881a      	ldrh	r2, [r3, #0]
 800c54c:	6afb      	ldr	r3, [r7, #44]	@ 0x2c
 800c54e:	881b      	ldrh	r3, [r3, #0]
 800c550:	847a      	strh	r2, [r7, #34]	@ 0x22
 800c552:	843b      	strh	r3, [r7, #32]
 800c554:	78fb      	ldrb	r3, [r7, #3]
 800c556:	77fb      	strb	r3, [r7, #31]
    return alphaBlend(newpix & RMASK, newpix & GMASK, newpix & BMASK, bufpix, alpha);
 800c558:	8c7b      	ldrh	r3, [r7, #34]	@ 0x22
 800c55a:	f423 63ff 	bic.w	r3, r3, #2040	@ 0x7f8
 800c55e:	f023 0307 	bic.w	r3, r3, #7
 800c562:	b299      	uxth	r1, r3
 800c564:	8c7b      	ldrh	r3, [r7, #34]	@ 0x22
 800c566:	f403 63fc 	and.w	r3, r3, #2016	@ 0x7e0
 800c56a:	b29a      	uxth	r2, r3
 800c56c:	8c7b      	ldrh	r3, [r7, #34]	@ 0x22
 800c56e:	f003 031f 	and.w	r3, r3, #31
 800c572:	b29b      	uxth	r3, r3
 800c574:	83b9      	strh	r1, [r7, #28]
 800c576:	837a      	strh	r2, [r7, #26]
 800c578:	833b      	strh	r3, [r7, #24]
 800c57a:	8c3b      	ldrh	r3, [r7, #32]
 800c57c:	82fb      	strh	r3, [r7, #22]
 800c57e:	7ffb      	ldrb	r3, [r7, #31]
 800c580:	757b      	strb	r3, [r7, #21]
    const uint8_t ialpha = 0xFF - alpha;
 800c582:	7d7b      	ldrb	r3, [r7, #21]
 800c584:	43db      	mvns	r3, r3
 800c586:	753b      	strb	r3, [r7, #20]
    return (((R * alpha + (bufpix & RMASK) * ialpha) / 255) & RMASK) |
 800c588:	8bbb      	ldrh	r3, [r7, #28]
 800c58a:	7d7a      	ldrb	r2, [r7, #21]
 800c58c:	fb03 f202 	mul.w	r2, r3, r2
 800c590:	8afb      	ldrh	r3, [r7, #22]
 800c592:	f403 4378 	and.w	r3, r3, #63488	@ 0xf800
 800c596:	7d39      	ldrb	r1, [r7, #20]
 800c598:	fb01 f303 	mul.w	r3, r1, r3
 800c59c:	4413      	add	r3, r2
 800c59e:	4a29      	ldr	r2, [pc, #164]	@ (800c644 <_ZN8touchgfx5paint6rgb56514lineFromRGB565EPtPKtjh+0x14c>)
 800c5a0:	fb82 1203 	smull	r1, r2, r2, r3
 800c5a4:	441a      	add	r2, r3
 800c5a6:	11d2      	asrs	r2, r2, #7
 800c5a8:	17db      	asrs	r3, r3, #31
 800c5aa:	1ad3      	subs	r3, r2, r3
 800c5ac:	b21b      	sxth	r3, r3
 800c5ae:	f423 63ff 	bic.w	r3, r3, #2040	@ 0x7f8
 800c5b2:	f023 0307 	bic.w	r3, r3, #7
 800c5b6:	b21a      	sxth	r2, r3
           (((G * alpha + (bufpix & GMASK) * ialpha) / 255) & GMASK) |
 800c5b8:	8b7b      	ldrh	r3, [r7, #26]
 800c5ba:	7d79      	ldrb	r1, [r7, #21]
 800c5bc:	fb03 f101 	mul.w	r1, r3, r1
 800c5c0:	8afb      	ldrh	r3, [r7, #22]
 800c5c2:	f403 63fc 	and.w	r3, r3, #2016	@ 0x7e0
 800c5c6:	7d38      	ldrb	r0, [r7, #20]
 800c5c8:	fb00 f303 	mul.w	r3, r0, r3
 800c5cc:	440b      	add	r3, r1
 800c5ce:	491d      	ldr	r1, [pc, #116]	@ (800c644 <_ZN8touchgfx5paint6rgb56514lineFromRGB565EPtPKtjh+0x14c>)
 800c5d0:	fb81 0103 	smull	r0, r1, r1, r3
 800c5d4:	4419      	add	r1, r3
 800c5d6:	11c9      	asrs	r1, r1, #7
 800c5d8:	17db      	asrs	r3, r3, #31
 800c5da:	1acb      	subs	r3, r1, r3
 800c5dc:	b21b      	sxth	r3, r3
 800c5de:	f403 63fc 	and.w	r3, r3, #2016	@ 0x7e0
 800c5e2:	b21b      	sxth	r3, r3
    return (((R * alpha + (bufpix & RMASK) * ialpha) / 255) & RMASK) |
 800c5e4:	4313      	orrs	r3, r2
 800c5e6:	b21a      	sxth	r2, r3
           (((B * alpha + (bufpix & BMASK) * ialpha) / 255) & BMASK);
 800c5e8:	8b3b      	ldrh	r3, [r7, #24]
 800c5ea:	7d79      	ldrb	r1, [r7, #21]
 800c5ec:	fb03 f101 	mul.w	r1, r3, r1
 800c5f0:	8afb      	ldrh	r3, [r7, #22]
 800c5f2:	f003 031f 	and.w	r3, r3, #31
 800c5f6:	7d38      	ldrb	r0, [r7, #20]
 800c5f8:	fb00 f303 	mul.w	r3, r0, r3
 800c5fc:	440b      	add	r3, r1
 800c5fe:	4911      	ldr	r1, [pc, #68]	@ (800c644 <_ZN8touchgfx5paint6rgb56514lineFromRGB565EPtPKtjh+0x14c>)
 800c600:	fb81 0103 	smull	r0, r1, r1, r3
 800c604:	4419      	add	r1, r3
 800c606:	11c9      	asrs	r1, r1, #7
 800c608:	17db      	asrs	r3, r3, #31
 800c60a:	1acb      	subs	r3, r1, r3
 800c60c:	b21b      	sxth	r3, r3
 800c60e:	f003 031f 	and.w	r3, r3, #31
 800c612:	b21b      	sxth	r3, r3
           (((G * alpha + (bufpix & GMASK) * ialpha) / 255) & GMASK) |
 800c614:	4313      	orrs	r3, r2
 800c616:	b21b      	sxth	r3, r3
           (((B * alpha + (bufpix & BMASK) * ialpha) / 255) & BMASK);
 800c618:	b29a      	uxth	r2, r3
    return alphaBlend(newpix & RMASK, newpix & GMASK, newpix & BMASK, bufpix, alpha);
 800c61a:	bf00      	nop
            *framebuffer = alphaBlend(*bitmapPointer++, *framebuffer, alpha);
 800c61c:	6afb      	ldr	r3, [r7, #44]	@ 0x2c
 800c61e:	801a      	strh	r2, [r3, #0]
        } while (++framebuffer < chunkend);
 800c620:	6afb      	ldr	r3, [r7, #44]	@ 0x2c
 800c622:	3302      	adds	r3, #2
 800c624:	62fb      	str	r3, [r7, #44]	@ 0x2c
 800c626:	6afa      	ldr	r2, [r7, #44]	@ 0x2c
 800c628:	6a7b      	ldr	r3, [r7, #36]	@ 0x24
 800c62a:	429a      	cmp	r2, r3
 800c62c:	bf34      	ite	cc
 800c62e:	2301      	movcc	r3, #1
 800c630:	2300      	movcs	r3, #0
 800c632:	b2db      	uxtb	r3, r3
 800c634:	2b00      	cmp	r3, #0
 800c636:	d185      	bne.n	800c544 <_ZN8touchgfx5paint6rgb56514lineFromRGB565EPtPKtjh+0x4c>
}
 800c638:	bf00      	nop
 800c63a:	3734      	adds	r7, #52	@ 0x34
 800c63c:	46bd      	mov	sp, r7
 800c63e:	f85d 7b04 	ldr.w	r7, [sp], #4
 800c642:	4770      	bx	lr
 800c644:	80808081 	.word	0x80808081

0800c648 <_ZN8touchgfx5paint6rgb56516lineFromARGB8888EPtPKmjh>:

void lineFromARGB8888(uint16_t* const ptr, const uint32_t* const data, const unsigned count, const uint8_t alpha)
{
 800c648:	b590      	push	{r4, r7, lr}
 800c64a:	b093      	sub	sp, #76	@ 0x4c
 800c64c:	af00      	add	r7, sp, #0
 800c64e:	60f8      	str	r0, [r7, #12]
 800c650:	60b9      	str	r1, [r7, #8]
 800c652:	607a      	str	r2, [r7, #4]
 800c654:	70fb      	strb	r3, [r7, #3]
    uint16_t* framebuffer = ptr;
 800c656:	68fb      	ldr	r3, [r7, #12]
 800c658:	647b      	str	r3, [r7, #68]	@ 0x44
    const uint32_t* bitmapPointer = data;
 800c65a:	68bb      	ldr	r3, [r7, #8]
 800c65c:	643b      	str	r3, [r7, #64]	@ 0x40
    const uint16_t* const chunkend = framebuffer + count;
 800c65e:	687b      	ldr	r3, [r7, #4]
 800c660:	005b      	lsls	r3, r3, #1
 800c662:	6c7a      	ldr	r2, [r7, #68]	@ 0x44
 800c664:	4413      	add	r3, r2
 800c666:	63fb      	str	r3, [r7, #60]	@ 0x3c
    do
    {
        const uint8_t srcAlpha = (*bitmapPointer) >> 24;
 800c668:	6c3b      	ldr	r3, [r7, #64]	@ 0x40
 800c66a:	681b      	ldr	r3, [r3, #0]
 800c66c:	0e1b      	lsrs	r3, r3, #24
 800c66e:	f887 303b 	strb.w	r3, [r7, #59]	@ 0x3b
        const uint8_t a = LCD::div255(alpha * srcAlpha);
 800c672:	78fb      	ldrb	r3, [r7, #3]
 800c674:	b29a      	uxth	r2, r3
 800c676:	f897 303b 	ldrb.w	r3, [r7, #59]	@ 0x3b
 800c67a:	b29b      	uxth	r3, r3
 800c67c:	fb12 f303 	smulbb	r3, r2, r3
 800c680:	b29b      	uxth	r3, r3
 800c682:	867b      	strh	r3, [r7, #50]	@ 0x32
     *
     * @return The result of a division by 255.
     */
    FORCE_INLINE_FUNCTION static uint8_t div255(uint16_t num)
    {
        return (num + 1 + (num >> 8)) >> 8;
 800c684:	8e7b      	ldrh	r3, [r7, #50]	@ 0x32
 800c686:	3301      	adds	r3, #1
 800c688:	8e7a      	ldrh	r2, [r7, #50]	@ 0x32
 800c68a:	0a12      	lsrs	r2, r2, #8
 800c68c:	b292      	uxth	r2, r2
 800c68e:	4413      	add	r3, r2
 800c690:	121b      	asrs	r3, r3, #8
 800c692:	b2db      	uxtb	r3, r3
 800c694:	f887 303a 	strb.w	r3, [r7, #58]	@ 0x3a
        if (a == 0xFF)
 800c698:	f897 303a 	ldrb.w	r3, [r7, #58]	@ 0x3a
 800c69c:	2bff      	cmp	r3, #255	@ 0xff
 800c69e:	d133      	bne.n	800c708 <_ZN8touchgfx5paint6rgb56516lineFromARGB8888EPtPKmjh+0xc0>
        {
            *framebuffer = getNativeColor(*bitmapPointer);
 800c6a0:	6c3b      	ldr	r3, [r7, #64]	@ 0x40
 800c6a2:	681a      	ldr	r2, [r3, #0]
 800c6a4:	f107 0318 	add.w	r3, r7, #24
 800c6a8:	4611      	mov	r1, r2
 800c6aa:	4618      	mov	r0, r3
 800c6ac:	f7fc fdac 	bl	8009208 <_ZN8touchgfx9colortypeC1Em>
 800c6b0:	69bb      	ldr	r3, [r7, #24]
 800c6b2:	617b      	str	r3, [r7, #20]
    return ((color >> 8) & 0xF800) | ((color >> 5) & 0x07E0) | ((color >> 3) & 0x001F);
 800c6b4:	f107 0314 	add.w	r3, r7, #20
 800c6b8:	4618      	mov	r0, r3
 800c6ba:	f7ff fe72 	bl	800c3a2 <_ZNK8touchgfx9colortypecvmEv>
 800c6be:	4603      	mov	r3, r0
 800c6c0:	0a1b      	lsrs	r3, r3, #8
 800c6c2:	b29b      	uxth	r3, r3
 800c6c4:	f423 63ff 	bic.w	r3, r3, #2040	@ 0x7f8
 800c6c8:	f023 0307 	bic.w	r3, r3, #7
 800c6cc:	b29c      	uxth	r4, r3
 800c6ce:	f107 0314 	add.w	r3, r7, #20
 800c6d2:	4618      	mov	r0, r3
 800c6d4:	f7ff fe65 	bl	800c3a2 <_ZNK8touchgfx9colortypecvmEv>
 800c6d8:	4603      	mov	r3, r0
 800c6da:	095b      	lsrs	r3, r3, #5
 800c6dc:	b29b      	uxth	r3, r3
 800c6de:	f403 63fc 	and.w	r3, r3, #2016	@ 0x7e0
 800c6e2:	b29b      	uxth	r3, r3
 800c6e4:	4323      	orrs	r3, r4
 800c6e6:	b29c      	uxth	r4, r3
 800c6e8:	f107 0314 	add.w	r3, r7, #20
 800c6ec:	4618      	mov	r0, r3
 800c6ee:	f7ff fe58 	bl	800c3a2 <_ZNK8touchgfx9colortypecvmEv>
 800c6f2:	4603      	mov	r3, r0
 800c6f4:	08db      	lsrs	r3, r3, #3
 800c6f6:	b29b      	uxth	r3, r3
 800c6f8:	f003 031f 	and.w	r3, r3, #31
 800c6fc:	b29b      	uxth	r3, r3
 800c6fe:	4323      	orrs	r3, r4
 800c700:	b29a      	uxth	r2, r3
            *framebuffer = getNativeColor(*bitmapPointer);
 800c702:	6c7b      	ldr	r3, [r7, #68]	@ 0x44
 800c704:	801a      	strh	r2, [r3, #0]
 800c706:	e0a9      	b.n	800c85c <_ZN8touchgfx5paint6rgb56516lineFromARGB8888EPtPKmjh+0x214>
        }
        else if (a)
 800c708:	f897 303a 	ldrb.w	r3, [r7, #58]	@ 0x3a
 800c70c:	2b00      	cmp	r3, #0
 800c70e:	f000 80a5 	beq.w	800c85c <_ZN8touchgfx5paint6rgb56516lineFromARGB8888EPtPKmjh+0x214>
        {
            const uint32_t newpix = *bitmapPointer;
 800c712:	6c3b      	ldr	r3, [r7, #64]	@ 0x40
 800c714:	681b      	ldr	r3, [r3, #0]
 800c716:	637b      	str	r3, [r7, #52]	@ 0x34
            *framebuffer = alphaBlend24bit((newpix >> 16), (newpix >> 8), (newpix), *framebuffer, a);
 800c718:	6b7b      	ldr	r3, [r7, #52]	@ 0x34
 800c71a:	0c1b      	lsrs	r3, r3, #16
 800c71c:	b2d8      	uxtb	r0, r3
 800c71e:	6b7b      	ldr	r3, [r7, #52]	@ 0x34
 800c720:	0a1b      	lsrs	r3, r3, #8
 800c722:	b2d9      	uxtb	r1, r3
 800c724:	6b7b      	ldr	r3, [r7, #52]	@ 0x34
 800c726:	b2da      	uxtb	r2, r3
 800c728:	6c7b      	ldr	r3, [r7, #68]	@ 0x44
 800c72a:	881b      	ldrh	r3, [r3, #0]
 800c72c:	f887 0031 	strb.w	r0, [r7, #49]	@ 0x31
 800c730:	f887 1030 	strb.w	r1, [r7, #48]	@ 0x30
 800c734:	f887 202f 	strb.w	r2, [r7, #47]	@ 0x2f
 800c738:	85bb      	strh	r3, [r7, #44]	@ 0x2c
 800c73a:	f897 303a 	ldrb.w	r3, [r7, #58]	@ 0x3a
 800c73e:	f887 302b 	strb.w	r3, [r7, #43]	@ 0x2b
    const uint8_t ialpha = 0xFF - alpha;
 800c742:	f897 302b 	ldrb.w	r3, [r7, #43]	@ 0x2b
 800c746:	43db      	mvns	r3, r3
 800c748:	f887 302a 	strb.w	r3, [r7, #42]	@ 0x2a
 800c74c:	8dbb      	ldrh	r3, [r7, #44]	@ 0x2c
 800c74e:	853b      	strh	r3, [r7, #40]	@ 0x28
     *
     * @return The red part of the color (0 to 255).
     */
    FORCE_INLINE_FUNCTION static uint8_t getRedFromRGB565(uint16_t color)
    {
        const uint8_t red = (color >> 8) & 0xF8;
 800c750:	8d3b      	ldrh	r3, [r7, #40]	@ 0x28
 800c752:	0a1b      	lsrs	r3, r3, #8
 800c754:	b29b      	uxth	r3, r3
 800c756:	b2db      	uxtb	r3, r3
 800c758:	f023 0307 	bic.w	r3, r3, #7
 800c75c:	f887 3027 	strb.w	r3, [r7, #39]	@ 0x27
        return red | (red >> 5);
 800c760:	f897 3027 	ldrb.w	r3, [r7, #39]	@ 0x27
 800c764:	095b      	lsrs	r3, r3, #5
 800c766:	b2da      	uxtb	r2, r3
 800c768:	f897 3027 	ldrb.w	r3, [r7, #39]	@ 0x27
 800c76c:	4313      	orrs	r3, r2
 800c76e:	b2db      	uxtb	r3, r3
    const uint8_t fbred = Color::getRedFromRGB565(bufpix);
 800c770:	f887 3026 	strb.w	r3, [r7, #38]	@ 0x26
 800c774:	8dbb      	ldrh	r3, [r7, #44]	@ 0x2c
 800c776:	84bb      	strh	r3, [r7, #36]	@ 0x24
     *
     * @return The green part of the color (0 to 255).
     */
    FORCE_INLINE_FUNCTION static uint8_t getGreenFromRGB565(uint16_t color)
    {
        const uint8_t green = (color >> 3) & 0xFC;
 800c778:	8cbb      	ldrh	r3, [r7, #36]	@ 0x24
 800c77a:	08db      	lsrs	r3, r3, #3
 800c77c:	b29b      	uxth	r3, r3
 800c77e:	b2db      	uxtb	r3, r3
 800c780:	f023 0303 	bic.w	r3, r3, #3
 800c784:	f887 3023 	strb.w	r3, [r7, #35]	@ 0x23
        return green | (green >> 6);
 800c788:	f897 3023 	ldrb.w	r3, [r7, #35]	@ 0x23
 800c78c:	099b      	lsrs	r3, r3, #6
 800c78e:	b2da      	uxtb	r2, r3
 800c790:	f897 3023 	ldrb.w	r3, [r7, #35]	@ 0x23
 800c794:	4313      	orrs	r3, r2
 800c796:	b2db      	uxtb	r3, r3
    const uint8_t fbgreen = Color::getGreenFromRGB565(bufpix);
 800c798:	f887 3022 	strb.w	r3, [r7, #34]	@ 0x22
 800c79c:	8dbb      	ldrh	r3, [r7, #44]	@ 0x2c
 800c79e:	843b      	strh	r3, [r7, #32]
     *
     * @return The blue part of the color (0 to 255).
     */
    FORCE_INLINE_FUNCTION static uint8_t getBlueFromRGB565(uint16_t color)
    {
        const uint8_t blue = color << 3;
 800c7a0:	8c3b      	ldrh	r3, [r7, #32]
 800c7a2:	b2db      	uxtb	r3, r3
 800c7a4:	00db      	lsls	r3, r3, #3
 800c7a6:	77fb      	strb	r3, [r7, #31]
        return blue | (blue >> 5);
 800c7a8:	7ffb      	ldrb	r3, [r7, #31]
 800c7aa:	095b      	lsrs	r3, r3, #5
 800c7ac:	b2da      	uxtb	r2, r3
 800c7ae:	7ffb      	ldrb	r3, [r7, #31]
 800c7b0:	4313      	orrs	r3, r2
 800c7b2:	b2db      	uxtb	r3, r3
    const uint8_t fbblue = Color::getBlueFromRGB565(bufpix);
 800c7b4:	77bb      	strb	r3, [r7, #30]
    return ((((R * alpha + fbred * ialpha) / 255) << 8) & RMASK) |
 800c7b6:	f897 3031 	ldrb.w	r3, [r7, #49]	@ 0x31
 800c7ba:	f897 202b 	ldrb.w	r2, [r7, #43]	@ 0x2b
 800c7be:	fb03 f202 	mul.w	r2, r3, r2
 800c7c2:	f897 3026 	ldrb.w	r3, [r7, #38]	@ 0x26
 800c7c6:	f897 102a 	ldrb.w	r1, [r7, #42]	@ 0x2a
 800c7ca:	fb01 f303 	mul.w	r3, r1, r3
 800c7ce:	4413      	add	r3, r2
 800c7d0:	4a2d      	ldr	r2, [pc, #180]	@ (800c888 <_ZN8touchgfx5paint6rgb56516lineFromARGB8888EPtPKmjh+0x240>)
 800c7d2:	fb82 1203 	smull	r1, r2, r2, r3
 800c7d6:	441a      	add	r2, r3
 800c7d8:	11d2      	asrs	r2, r2, #7
 800c7da:	17db      	asrs	r3, r3, #31
 800c7dc:	1ad3      	subs	r3, r2, r3
 800c7de:	021b      	lsls	r3, r3, #8
 800c7e0:	b21b      	sxth	r3, r3
 800c7e2:	f423 63ff 	bic.w	r3, r3, #2040	@ 0x7f8
 800c7e6:	f023 0307 	bic.w	r3, r3, #7
 800c7ea:	b21a      	sxth	r2, r3
           ((((G * alpha + fbgreen * ialpha) / 255) << 3) & GMASK) |
 800c7ec:	f897 3030 	ldrb.w	r3, [r7, #48]	@ 0x30
 800c7f0:	f897 102b 	ldrb.w	r1, [r7, #43]	@ 0x2b
 800c7f4:	fb03 f101 	mul.w	r1, r3, r1
 800c7f8:	f897 3022 	ldrb.w	r3, [r7, #34]	@ 0x22
 800c7fc:	f897 002a 	ldrb.w	r0, [r7, #42]	@ 0x2a
 800c800:	fb00 f303 	mul.w	r3, r0, r3
 800c804:	440b      	add	r3, r1
 800c806:	4920      	ldr	r1, [pc, #128]	@ (800c888 <_ZN8touchgfx5paint6rgb56516lineFromARGB8888EPtPKmjh+0x240>)
 800c808:	fb81 0103 	smull	r0, r1, r1, r3
 800c80c:	4419      	add	r1, r3
 800c80e:	11c9      	asrs	r1, r1, #7
 800c810:	17db      	asrs	r3, r3, #31
 800c812:	1acb      	subs	r3, r1, r3
 800c814:	00db      	lsls	r3, r3, #3
 800c816:	b21b      	sxth	r3, r3
 800c818:	f403 63fc 	and.w	r3, r3, #2016	@ 0x7e0
 800c81c:	b21b      	sxth	r3, r3
    return ((((R * alpha + fbred * ialpha) / 255) << 8) & RMASK) |
 800c81e:	4313      	orrs	r3, r2
 800c820:	b21a      	sxth	r2, r3
           ((((B * alpha + fbblue * ialpha) / 255) >> 3) & BMASK);
 800c822:	f897 302f 	ldrb.w	r3, [r7, #47]	@ 0x2f
 800c826:	f897 102b 	ldrb.w	r1, [r7, #43]	@ 0x2b
 800c82a:	fb03 f101 	mul.w	r1, r3, r1
 800c82e:	7fbb      	ldrb	r3, [r7, #30]
 800c830:	f897 002a 	ldrb.w	r0, [r7, #42]	@ 0x2a
 800c834:	fb00 f303 	mul.w	r3, r0, r3
 800c838:	440b      	add	r3, r1
 800c83a:	4913      	ldr	r1, [pc, #76]	@ (800c888 <_ZN8touchgfx5paint6rgb56516lineFromARGB8888EPtPKmjh+0x240>)
 800c83c:	fb81 0103 	smull	r0, r1, r1, r3
 800c840:	4419      	add	r1, r3
 800c842:	11c9      	asrs	r1, r1, #7
 800c844:	17db      	asrs	r3, r3, #31
 800c846:	1acb      	subs	r3, r1, r3
 800c848:	10db      	asrs	r3, r3, #3
 800c84a:	b21b      	sxth	r3, r3
 800c84c:	f003 031f 	and.w	r3, r3, #31
 800c850:	b21b      	sxth	r3, r3
           ((((G * alpha + fbgreen * ialpha) / 255) << 3) & GMASK) |
 800c852:	4313      	orrs	r3, r2
 800c854:	b21b      	sxth	r3, r3
           ((((B * alpha + fbblue * ialpha) / 255) >> 3) & BMASK);
 800c856:	b29a      	uxth	r2, r3
            *framebuffer = alphaBlend24bit((newpix >> 16), (newpix >> 8), (newpix), *framebuffer, a);
 800c858:	6c7b      	ldr	r3, [r7, #68]	@ 0x44
 800c85a:	801a      	strh	r2, [r3, #0]
        }
        bitmapPointer++;
 800c85c:	6c3b      	ldr	r3, [r7, #64]	@ 0x40
 800c85e:	3304      	adds	r3, #4
 800c860:	643b      	str	r3, [r7, #64]	@ 0x40
    } while (++framebuffer < chunkend);
 800c862:	6c7b      	ldr	r3, [r7, #68]	@ 0x44
 800c864:	3302      	adds	r3, #2
 800c866:	647b      	str	r3, [r7, #68]	@ 0x44
 800c868:	6c7a      	ldr	r2, [r7, #68]	@ 0x44
 800c86a:	6bfb      	ldr	r3, [r7, #60]	@ 0x3c
 800c86c:	429a      	cmp	r2, r3
 800c86e:	bf34      	ite	cc
 800c870:	2301      	movcc	r3, #1
 800c872:	2300      	movcs	r3, #0
 800c874:	b2db      	uxtb	r3, r3
 800c876:	2b00      	cmp	r3, #0
 800c878:	f47f aef6 	bne.w	800c668 <_ZN8touchgfx5paint6rgb56516lineFromARGB8888EPtPKmjh+0x20>
}
 800c87c:	bf00      	nop
 800c87e:	bf00      	nop
 800c880:	374c      	adds	r7, #76	@ 0x4c
 800c882:	46bd      	mov	sp, r7
 800c884:	bd90      	pop	{r4, r7, pc}
 800c886:	bf00      	nop
 800c888:	80808081 	.word	0x80808081

0800c88c <_ZN20TouchGFXGeneratedHAL10initializeEv>:
       3, /* number of blocks */
       2 /* bytes per pixel */
       > blockAllocator;

void TouchGFXGeneratedHAL::initialize()
{
 800c88c:	b5b0      	push	{r4, r5, r7, lr}
 800c88e:	b082      	sub	sp, #8
 800c890:	af00      	add	r7, sp, #0
 800c892:	6078      	str	r0, [r7, #4]
    HAL::initialize();
 800c894:	687b      	ldr	r3, [r7, #4]
 800c896:	4618      	mov	r0, r3
 800c898:	f000 fedb 	bl	800d652 <_ZN8touchgfx3HAL10initializeEv>
    registerEventListener(*(Application::getInstance()));
 800c89c:	687d      	ldr	r5, [r7, #4]
 800c89e:	687b      	ldr	r3, [r7, #4]
 800c8a0:	681b      	ldr	r3, [r3, #0]
 800c8a2:	3364      	adds	r3, #100	@ 0x64
 800c8a4:	681c      	ldr	r4, [r3, #0]
 800c8a6:	f003 ffed 	bl	8010884 <_ZN8touchgfx11Application11getInstanceEv>
 800c8aa:	4603      	mov	r3, r0
 800c8ac:	4619      	mov	r1, r3
 800c8ae:	4628      	mov	r0, r5
 800c8b0:	47a0      	blx	r4
    enableLCDControllerInterrupt();
 800c8b2:	687b      	ldr	r3, [r7, #4]
 800c8b4:	681b      	ldr	r3, [r3, #0]
 800c8b6:	3380      	adds	r3, #128	@ 0x80
 800c8b8:	681b      	ldr	r3, [r3, #0]
 800c8ba:	6878      	ldr	r0, [r7, #4]
 800c8bc:	4798      	blx	r3
    enableInterrupts();
 800c8be:	687b      	ldr	r3, [r7, #4]
 800c8c0:	681b      	ldr	r3, [r3, #0]
 800c8c2:	3378      	adds	r3, #120	@ 0x78
 800c8c4:	681b      	ldr	r3, [r3, #0]
 800c8c6:	6878      	ldr	r0, [r7, #4]
 800c8c8:	4798      	blx	r3
    // Partial framebuffer strategy
    setFrameBufferAllocator(&blockAllocator);
 800c8ca:	687b      	ldr	r3, [r7, #4]
 800c8cc:	4906      	ldr	r1, [pc, #24]	@ (800c8e8 <_ZN20TouchGFXGeneratedHAL10initializeEv+0x5c>)
 800c8ce:	4618      	mov	r0, r3
 800c8d0:	f7ff fda6 	bl	800c420 <_ZN8touchgfx3HAL23setFrameBufferAllocatorEPNS_20FrameBufferAllocatorE>
    setFrameRefreshStrategy(HAL::REFRESH_STRATEGY_PARTIAL_FRAMEBUFFER);
 800c8d4:	687b      	ldr	r3, [r7, #4]
 800c8d6:	2102      	movs	r1, #2
 800c8d8:	4618      	mov	r0, r3
 800c8da:	f7ff fdbb 	bl	800c454 <_ZN8touchgfx3HAL23setFrameRefreshStrategyENS0_20FrameRefreshStrategyE>
}
 800c8de:	bf00      	nop
 800c8e0:	3708      	adds	r7, #8
 800c8e2:	46bd      	mov	sp, r7
 800c8e4:	bdb0      	pop	{r4, r5, r7, pc}
 800c8e6:	bf00      	nop
 800c8e8:	20000bc8 	.word	0x20000bc8

0800c8ec <_ZN20TouchGFXGeneratedHAL19configureInterruptsEv>:

void TouchGFXGeneratedHAL::configureInterrupts()
{
 800c8ec:	b480      	push	{r7}
 800c8ee:	b083      	sub	sp, #12
 800c8f0:	af00      	add	r7, sp, #0
 800c8f2:	6078      	str	r0, [r7, #4]
}
 800c8f4:	bf00      	nop
 800c8f6:	370c      	adds	r7, #12
 800c8f8:	46bd      	mov	sp, r7
 800c8fa:	f85d 7b04 	ldr.w	r7, [sp], #4
 800c8fe:	4770      	bx	lr

0800c900 <_ZN20TouchGFXGeneratedHAL16enableInterruptsEv>:

void TouchGFXGeneratedHAL::enableInterrupts()
{
 800c900:	b480      	push	{r7}
 800c902:	b083      	sub	sp, #12
 800c904:	af00      	add	r7, sp, #0
 800c906:	6078      	str	r0, [r7, #4]
}
 800c908:	bf00      	nop
 800c90a:	370c      	adds	r7, #12
 800c90c:	46bd      	mov	sp, r7
 800c90e:	f85d 7b04 	ldr.w	r7, [sp], #4
 800c912:	4770      	bx	lr

0800c914 <_ZN20TouchGFXGeneratedHAL17disableInterruptsEv>:

void TouchGFXGeneratedHAL::disableInterrupts()
{
 800c914:	b480      	push	{r7}
 800c916:	b083      	sub	sp, #12
 800c918:	af00      	add	r7, sp, #0
 800c91a:	6078      	str	r0, [r7, #4]
}
 800c91c:	bf00      	nop
 800c91e:	370c      	adds	r7, #12
 800c920:	46bd      	mov	sp, r7
 800c922:	f85d 7b04 	ldr.w	r7, [sp], #4
 800c926:	4770      	bx	lr

0800c928 <_ZN20TouchGFXGeneratedHAL28enableLCDControllerInterruptEv>:

void TouchGFXGeneratedHAL::enableLCDControllerInterrupt()
{
 800c928:	b480      	push	{r7}
 800c92a:	b083      	sub	sp, #12
 800c92c:	af00      	add	r7, sp, #0
 800c92e:	6078      	str	r0, [r7, #4]
}
 800c930:	bf00      	nop
 800c932:	370c      	adds	r7, #12
 800c934:	46bd      	mov	sp, r7
 800c936:	f85d 7b04 	ldr.w	r7, [sp], #4
 800c93a:	4770      	bx	lr

0800c93c <_ZN20TouchGFXGeneratedHAL10beginFrameEv>:

bool TouchGFXGeneratedHAL::beginFrame()
{
 800c93c:	b580      	push	{r7, lr}
 800c93e:	b082      	sub	sp, #8
 800c940:	af00      	add	r7, sp, #0
 800c942:	6078      	str	r0, [r7, #4]
    return HAL::beginFrame();
 800c944:	687b      	ldr	r3, [r7, #4]
 800c946:	4618      	mov	r0, r3
 800c948:	f000 fe6a 	bl	800d620 <_ZN8touchgfx3HAL10beginFrameEv>
 800c94c:	4603      	mov	r3, r0
}
 800c94e:	4618      	mov	r0, r3
 800c950:	3708      	adds	r7, #8
 800c952:	46bd      	mov	sp, r7
 800c954:	bd80      	pop	{r7, pc}

0800c956 <_ZN20TouchGFXGeneratedHAL8endFrameEv>:

void TouchGFXGeneratedHAL::endFrame()
{
 800c956:	b580      	push	{r7, lr}
 800c958:	b082      	sub	sp, #8
 800c95a:	af00      	add	r7, sp, #0
 800c95c:	6078      	str	r0, [r7, #4]
    // We must guard the next frame until we're done transferring all blocks over our display interface
    // through either a semaphore if user is running an OS or a simple variable if not
    // Wait until all blocks have been transmitted
    while (touchgfxDisplayDriverTransmitActive()){}
 800c95e:	bf00      	nop
 800c960:	f7f5 fcea 	bl	8002338 <touchgfxDisplayDriverTransmitActive>
 800c964:	4603      	mov	r3, r0
 800c966:	2b00      	cmp	r3, #0
 800c968:	bf14      	ite	ne
 800c96a:	2301      	movne	r3, #1
 800c96c:	2300      	moveq	r3, #0
 800c96e:	b2db      	uxtb	r3, r3
 800c970:	2b00      	cmp	r3, #0
 800c972:	d1f5      	bne.n	800c960 <_ZN20TouchGFXGeneratedHAL8endFrameEv+0xa>

    HAL::endFrame();
 800c974:	687b      	ldr	r3, [r7, #4]
 800c976:	4618      	mov	r0, r3
 800c978:	f000 fe5e 	bl	800d638 <_ZN8touchgfx3HAL8endFrameEv>
    touchgfx::OSWrappers::signalRenderingDone();
 800c97c:	f7fe fed0 	bl	800b720 <_ZN8touchgfx10OSWrappers19signalRenderingDoneEv>
}
 800c980:	bf00      	nop
 800c982:	3708      	adds	r7, #8
 800c984:	46bd      	mov	sp, r7
 800c986:	bd80      	pop	{r7, pc}

0800c988 <_ZNK20TouchGFXGeneratedHAL17getTFTFrameBufferEv>:
    fbPtr += rect.y * lcd().framebufferStride() + rect.x * 2;
    return fbPtr;
}

uint16_t* TouchGFXGeneratedHAL::getTFTFrameBuffer() const
{
 800c988:	b480      	push	{r7}
 800c98a:	b083      	sub	sp, #12
 800c98c:	af00      	add	r7, sp, #0
 800c98e:	6078      	str	r0, [r7, #4]
    //getTFTFrameBuffer() not used for selected Frame Buffer Strategy
    return 0;
 800c990:	2300      	movs	r3, #0
}
 800c992:	4618      	mov	r0, r3
 800c994:	370c      	adds	r7, #12
 800c996:	46bd      	mov	sp, r7
 800c998:	f85d 7b04 	ldr.w	r7, [sp], #4
 800c99c:	4770      	bx	lr

0800c99e <_ZN20TouchGFXGeneratedHAL17setTFTFrameBufferEPt>:

void TouchGFXGeneratedHAL::setTFTFrameBuffer(uint16_t* adr)
{
 800c99e:	b480      	push	{r7}
 800c9a0:	b083      	sub	sp, #12
 800c9a2:	af00      	add	r7, sp, #0
 800c9a4:	6078      	str	r0, [r7, #4]
 800c9a6:	6039      	str	r1, [r7, #0]
    //setTFTFrameBuffer() not used for selected display interface
}
 800c9a8:	bf00      	nop
 800c9aa:	370c      	adds	r7, #12
 800c9ac:	46bd      	mov	sp, r7
 800c9ae:	f85d 7b04 	ldr.w	r7, [sp], #4
 800c9b2:	4770      	bx	lr

0800c9b4 <_ZN20TouchGFXGeneratedHAL16flushFrameBufferERKN8touchgfx4RectE>:

void TouchGFXGeneratedHAL::flushFrameBuffer(const touchgfx::Rect& rect)
{
 800c9b4:	b580      	push	{r7, lr}
 800c9b6:	b088      	sub	sp, #32
 800c9b8:	af02      	add	r7, sp, #8
 800c9ba:	6078      	str	r0, [r7, #4]
 800c9bc:	6039      	str	r1, [r7, #0]
    HAL::flushFrameBuffer(rect);
 800c9be:	687b      	ldr	r3, [r7, #4]
 800c9c0:	6839      	ldr	r1, [r7, #0]
 800c9c2:	4618      	mov	r0, r3
 800c9c4:	f000 fdf6 	bl	800d5b4 <_ZN8touchgfx3HAL16flushFrameBufferERKNS_4RectE>
    // Once flushFrameBuffer() is called by the framework a block is already for transfer
    // Mark it ready for transfer and transmit it if user defined method isTransmittingData() does not return false
    // If data is not being transmitted, transfer the data with user defined method transmitFrameBufferBlock().
    frameBufferAllocator->markBlockReadyForTransfer();
 800c9c8:	687b      	ldr	r3, [r7, #4]
 800c9ca:	699a      	ldr	r2, [r3, #24]
 800c9cc:	687b      	ldr	r3, [r7, #4]
 800c9ce:	699b      	ldr	r3, [r3, #24]
 800c9d0:	681b      	ldr	r3, [r3, #0]
 800c9d2:	3304      	adds	r3, #4
 800c9d4:	681b      	ldr	r3, [r3, #0]
 800c9d6:	4610      	mov	r0, r2
 800c9d8:	4798      	blx	r3
    if (!touchgfxDisplayDriverTransmitActive())
 800c9da:	f7f5 fcad 	bl	8002338 <touchgfxDisplayDriverTransmitActive>
 800c9de:	4603      	mov	r3, r0
 800c9e0:	2b00      	cmp	r3, #0
 800c9e2:	bf0c      	ite	eq
 800c9e4:	2301      	moveq	r3, #1
 800c9e6:	2300      	movne	r3, #0
 800c9e8:	b2db      	uxtb	r3, r3
 800c9ea:	2b00      	cmp	r3, #0
 800c9ec:	d021      	beq.n	800ca32 <_ZN20TouchGFXGeneratedHAL16flushFrameBufferERKN8touchgfx4RectE+0x7e>
    {
        touchgfx::Rect r;
 800c9ee:	f107 030c 	add.w	r3, r7, #12
 800c9f2:	4618      	mov	r0, r3
 800c9f4:	f7fc fc17 	bl	8009226 <_ZN8touchgfx4RectC1Ev>
        // Get pointer to block buffer and coordinates of the rect
        const uint8_t* pixels = frameBufferAllocator->getBlockForTransfer(r);
 800c9f8:	687b      	ldr	r3, [r7, #4]
 800c9fa:	699a      	ldr	r2, [r3, #24]
 800c9fc:	687b      	ldr	r3, [r7, #4]
 800c9fe:	699b      	ldr	r3, [r3, #24]
 800ca00:	681b      	ldr	r3, [r3, #0]
 800ca02:	330c      	adds	r3, #12
 800ca04:	681b      	ldr	r3, [r3, #0]
 800ca06:	f107 010c 	add.w	r1, r7, #12
 800ca0a:	4610      	mov	r0, r2
 800ca0c:	4798      	blx	r3
 800ca0e:	6178      	str	r0, [r7, #20]
        // Start transmission of the block
        touchgfxDisplayDriverTransmitBlock((uint8_t*)pixels, r.x, r.y, r.width, r.height);
 800ca10:	f9b7 300c 	ldrsh.w	r3, [r7, #12]
 800ca14:	b299      	uxth	r1, r3
 800ca16:	f9b7 300e 	ldrsh.w	r3, [r7, #14]
 800ca1a:	b29a      	uxth	r2, r3
 800ca1c:	f9b7 3010 	ldrsh.w	r3, [r7, #16]
 800ca20:	b298      	uxth	r0, r3
 800ca22:	f9b7 3012 	ldrsh.w	r3, [r7, #18]
 800ca26:	b29b      	uxth	r3, r3
 800ca28:	9300      	str	r3, [sp, #0]
 800ca2a:	4603      	mov	r3, r0
 800ca2c:	6978      	ldr	r0, [r7, #20]
 800ca2e:	f7f5 fc95 	bl	800235c <touchgfxDisplayDriverTransmitBlock>
    }
}
 800ca32:	bf00      	nop
 800ca34:	3718      	adds	r7, #24
 800ca36:	46bd      	mov	sp, r7
 800ca38:	bd80      	pop	{r7, pc}

0800ca3a <_ZN20TouchGFXGeneratedHAL9blockCopyEPvPKvm>:

bool TouchGFXGeneratedHAL::blockCopy(void* RESTRICT dest, const void* RESTRICT src, uint32_t numBytes)
{
 800ca3a:	b580      	push	{r7, lr}
 800ca3c:	b084      	sub	sp, #16
 800ca3e:	af00      	add	r7, sp, #0
 800ca40:	60f8      	str	r0, [r7, #12]
 800ca42:	60b9      	str	r1, [r7, #8]
 800ca44:	607a      	str	r2, [r7, #4]
 800ca46:	603b      	str	r3, [r7, #0]
    return HAL::blockCopy(dest, src, numBytes);
 800ca48:	68f8      	ldr	r0, [r7, #12]
 800ca4a:	683b      	ldr	r3, [r7, #0]
 800ca4c:	687a      	ldr	r2, [r7, #4]
 800ca4e:	68b9      	ldr	r1, [r7, #8]
 800ca50:	f000 ff21 	bl	800d896 <_ZN8touchgfx3HAL9blockCopyEPvPKvm>
 800ca54:	4603      	mov	r3, r0
}
 800ca56:	4618      	mov	r0, r3
 800ca58:	3710      	adds	r7, #16
 800ca5a:	46bd      	mov	sp, r7
 800ca5c:	bd80      	pop	{r7, pc}

0800ca5e <_ZN8touchgfx34FrameBufferAllocatorWaitOnTransferEv>:
/**
 * This function is called by FrameBufferAllocator if no block is
 * available.
 */
void FrameBufferAllocatorWaitOnTransfer()
{
 800ca5e:	b480      	push	{r7}
 800ca60:	af00      	add	r7, sp, #0
    /* NOTE: This function should not be modified, when the fuction is needed,
     *       FrameBufferAllocatorWaitOnTransfer should be implemented in the user file
     */
}
 800ca62:	bf00      	nop
 800ca64:	46bd      	mov	sp, r7
 800ca66:	f85d 7b04 	ldr.w	r7, [sp], #4
 800ca6a:	4770      	bx	lr

0800ca6c <_ZN8touchgfx36FrameBufferAllocatorSignalBlockDrawnEv>:
 * Called by FrameBufferAllocator when a block is drawn and
 * therefore ready for transfer. The LCD driver should use this
 * method to start a transfer.
 */
void FrameBufferAllocatorSignalBlockDrawn()
{
 800ca6c:	b480      	push	{r7}
 800ca6e:	af00      	add	r7, sp, #0
    /* NOTE: This function should not be modified, when the fuction is needed,
     *       FrameBufferAllocatorSignalBlockDrawn should be implemented in the user file
     */
}
 800ca70:	bf00      	nop
 800ca72:	46bd      	mov	sp, r7
 800ca74:	f85d 7b04 	ldr.w	r7, [sp], #4
 800ca78:	4770      	bx	lr

0800ca7a <_ZN8touchgfx16startNewTransferEv>:

// A user must call touchgfx::startNewTransfer(); once transmitFrameBufferBlock() has successfully sent a block.
void startNewTransfer()
{
 800ca7a:	b580      	push	{r7, lr}
 800ca7c:	b086      	sub	sp, #24
 800ca7e:	af02      	add	r7, sp, #8
    FrameBufferAllocator* fba = HAL::getInstance()->getFrameBufferAllocator();
 800ca80:	f7fb ff32 	bl	80088e8 <_ZN8touchgfx3HAL11getInstanceEv>
 800ca84:	4603      	mov	r3, r0
 800ca86:	4618      	mov	r0, r3
 800ca88:	f7ff fcd8 	bl	800c43c <_ZN8touchgfx3HAL23getFrameBufferAllocatorEv>
 800ca8c:	60f8      	str	r0, [r7, #12]

    // Free the previous transmitted block, marking it ready for rendering
    fba->freeBlockAfterTransfer();
 800ca8e:	68fb      	ldr	r3, [r7, #12]
 800ca90:	681b      	ldr	r3, [r3, #0]
 800ca92:	3318      	adds	r3, #24
 800ca94:	681b      	ldr	r3, [r3, #0]
 800ca96:	68f8      	ldr	r0, [r7, #12]
 800ca98:	4798      	blx	r3
    if (fba->hasBlockReadyForTransfer())
 800ca9a:	68fb      	ldr	r3, [r7, #12]
 800ca9c:	681b      	ldr	r3, [r3, #0]
 800ca9e:	3308      	adds	r3, #8
 800caa0:	681b      	ldr	r3, [r3, #0]
 800caa2:	68f8      	ldr	r0, [r7, #12]
 800caa4:	4798      	blx	r3
 800caa6:	4603      	mov	r3, r0
 800caa8:	2b00      	cmp	r3, #0
 800caaa:	d01d      	beq.n	800cae8 <_ZN8touchgfx16startNewTransferEv+0x6e>
    {
        touchgfx::Rect r;
 800caac:	463b      	mov	r3, r7
 800caae:	4618      	mov	r0, r3
 800cab0:	f7fc fbb9 	bl	8009226 <_ZN8touchgfx4RectC1Ev>
        // Get pointer to block buffer and coordinates of the rect
        const uint8_t* pixels = fba->getBlockForTransfer(r);
 800cab4:	68fb      	ldr	r3, [r7, #12]
 800cab6:	681b      	ldr	r3, [r3, #0]
 800cab8:	330c      	adds	r3, #12
 800caba:	681b      	ldr	r3, [r3, #0]
 800cabc:	463a      	mov	r2, r7
 800cabe:	4611      	mov	r1, r2
 800cac0:	68f8      	ldr	r0, [r7, #12]
 800cac2:	4798      	blx	r3
 800cac4:	60b8      	str	r0, [r7, #8]
        // Start transmission of the block
        touchgfxDisplayDriverTransmitBlock((uint8_t*)pixels, r.x, r.y, r.width, r.height);
 800cac6:	f9b7 3000 	ldrsh.w	r3, [r7]
 800caca:	b299      	uxth	r1, r3
 800cacc:	f9b7 3002 	ldrsh.w	r3, [r7, #2]
 800cad0:	b29a      	uxth	r2, r3
 800cad2:	f9b7 3004 	ldrsh.w	r3, [r7, #4]
 800cad6:	b298      	uxth	r0, r3
 800cad8:	f9b7 3006 	ldrsh.w	r3, [r7, #6]
 800cadc:	b29b      	uxth	r3, r3
 800cade:	9300      	str	r3, [sp, #0]
 800cae0:	4603      	mov	r3, r0
 800cae2:	68b8      	ldr	r0, [r7, #8]
 800cae4:	f7f5 fc3a 	bl	800235c <touchgfxDisplayDriverTransmitBlock>
    }
}
 800cae8:	bf00      	nop
 800caea:	3710      	adds	r7, #16
 800caec:	46bd      	mov	sp, r7
 800caee:	bd80      	pop	{r7, pc}

0800caf0 <DisplayDriver_TransferCompleteCallback>:

extern "C"
void DisplayDriver_TransferCompleteCallback()
{
 800caf0:	b580      	push	{r7, lr}
 800caf2:	af00      	add	r7, sp, #0
    // After completed transmission start new transfer if blocks are ready.
    touchgfx::startNewTransfer();
 800caf4:	f7ff ffc1 	bl	800ca7a <_ZN8touchgfx16startNewTransferEv>
}
 800caf8:	bf00      	nop
 800cafa:	bd80      	pop	{r7, pc}

0800cafc <touchgfxSignalVSync>:
}

extern "C"
void touchgfxSignalVSync(void)
{
 800cafc:	b580      	push	{r7, lr}
 800cafe:	af00      	add	r7, sp, #0
    /* VSync has occurred, increment TouchGFX engine vsync counter */
    touchgfx::HAL::getInstance()->vSync();
 800cb00:	f7fb fef2 	bl	80088e8 <_ZN8touchgfx3HAL11getInstanceEv>
 800cb04:	4603      	mov	r3, r0
 800cb06:	4618      	mov	r0, r3
 800cb08:	f7ff fc78 	bl	800c3fc <_ZN8touchgfx3HAL5vSyncEv>

    /* VSync has occurred, signal TouchGFX engine */
    touchgfx::OSWrappers::signalVSync();
 800cb0c:	f7fe fdfc 	bl	800b708 <_ZN8touchgfx10OSWrappers11signalVSyncEv>
}
 800cb10:	bf00      	nop
 800cb12:	bd80      	pop	{r7, pc}

0800cb14 <_ZN8touchgfx20FrameBufferAllocatorC1Ev>:
class FrameBufferAllocator
 800cb14:	b480      	push	{r7}
 800cb16:	b083      	sub	sp, #12
 800cb18:	af00      	add	r7, sp, #0
 800cb1a:	6078      	str	r0, [r7, #4]
 800cb1c:	4a04      	ldr	r2, [pc, #16]	@ (800cb30 <_ZN8touchgfx20FrameBufferAllocatorC1Ev+0x1c>)
 800cb1e:	687b      	ldr	r3, [r7, #4]
 800cb20:	601a      	str	r2, [r3, #0]
 800cb22:	687b      	ldr	r3, [r7, #4]
 800cb24:	4618      	mov	r0, r3
 800cb26:	370c      	adds	r7, #12
 800cb28:	46bd      	mov	sp, r7
 800cb2a:	f85d 7b04 	ldr.w	r7, [sp], #4
 800cb2e:	4770      	bx	lr
 800cb30:	08024de4 	.word	0x08024de4

0800cb34 <_ZN8touchgfx18ManyBlockAllocatorILm2880ELm3ELm2EEC1Ev>:
 */
template <uint32_t block_size, uint32_t blocks, uint32_t bytes_pr_pixel>
class ManyBlockAllocator : public FrameBufferAllocator
{
public:
    ManyBlockAllocator()
 800cb34:	b5b0      	push	{r4, r5, r7, lr}
 800cb36:	b084      	sub	sp, #16
 800cb38:	af00      	add	r7, sp, #0
 800cb3a:	6078      	str	r0, [r7, #4]
    {
 800cb3c:	687b      	ldr	r3, [r7, #4]
 800cb3e:	4618      	mov	r0, r3
 800cb40:	f7ff ffe8 	bl	800cb14 <_ZN8touchgfx20FrameBufferAllocatorC1Ev>
 800cb44:	4a1a      	ldr	r2, [pc, #104]	@ (800cbb0 <_ZN8touchgfx18ManyBlockAllocatorILm2880ELm3ELm2EEC1Ev+0x7c>)
 800cb46:	687b      	ldr	r3, [r7, #4]
 800cb48:	601a      	str	r2, [r3, #0]
 800cb4a:	687b      	ldr	r3, [r7, #4]
 800cb4c:	f503 5307 	add.w	r3, r3, #8640	@ 0x21c0
 800cb50:	3308      	adds	r3, #8
 800cb52:	2402      	movs	r4, #2
 800cb54:	461d      	mov	r5, r3
 800cb56:	e004      	b.n	800cb62 <_ZN8touchgfx18ManyBlockAllocatorILm2880ELm3ELm2EEC1Ev+0x2e>
 800cb58:	4628      	mov	r0, r5
 800cb5a:	f7fc fb64 	bl	8009226 <_ZN8touchgfx4RectC1Ev>
 800cb5e:	3c01      	subs	r4, #1
 800cb60:	3508      	adds	r5, #8
 800cb62:	2c00      	cmp	r4, #0
 800cb64:	daf8      	bge.n	800cb58 <_ZN8touchgfx18ManyBlockAllocatorILm2880ELm3ELm2EEC1Ev+0x24>
        sendingBlock = -1;
 800cb66:	687b      	ldr	r3, [r7, #4]
 800cb68:	f503 5300 	add.w	r3, r3, #8192	@ 0x2000
 800cb6c:	461a      	mov	r2, r3
 800cb6e:	f04f 33ff 	mov.w	r3, #4294967295
 800cb72:	f8c2 31e0 	str.w	r3, [r2, #480]	@ 0x1e0
        drawingBlock = -1;
 800cb76:	687b      	ldr	r3, [r7, #4]
 800cb78:	f503 5300 	add.w	r3, r3, #8192	@ 0x2000
 800cb7c:	461a      	mov	r2, r3
 800cb7e:	f04f 33ff 	mov.w	r3, #4294967295
 800cb82:	f8c2 31e4 	str.w	r3, [r2, #484]	@ 0x1e4
        for (uint32_t i = 0; i < blocks; i++)
 800cb86:	2300      	movs	r3, #0
 800cb88:	60fb      	str	r3, [r7, #12]
 800cb8a:	e008      	b.n	800cb9e <_ZN8touchgfx18ManyBlockAllocatorILm2880ELm3ELm2EEC1Ev+0x6a>
        {
            state[i] = EMPTY;
 800cb8c:	687a      	ldr	r2, [r7, #4]
 800cb8e:	68fb      	ldr	r3, [r7, #12]
 800cb90:	4413      	add	r3, r2
 800cb92:	3304      	adds	r3, #4
 800cb94:	2200      	movs	r2, #0
 800cb96:	701a      	strb	r2, [r3, #0]
        for (uint32_t i = 0; i < blocks; i++)
 800cb98:	68fb      	ldr	r3, [r7, #12]
 800cb9a:	3301      	adds	r3, #1
 800cb9c:	60fb      	str	r3, [r7, #12]
 800cb9e:	68fb      	ldr	r3, [r7, #12]
 800cba0:	2b02      	cmp	r3, #2
 800cba2:	d9f3      	bls.n	800cb8c <_ZN8touchgfx18ManyBlockAllocatorILm2880ELm3ELm2EEC1Ev+0x58>
        }
    }
 800cba4:	687b      	ldr	r3, [r7, #4]
 800cba6:	4618      	mov	r0, r3
 800cba8:	3710      	adds	r7, #16
 800cbaa:	46bd      	mov	sp, r7
 800cbac:	bdb0      	pop	{r4, r5, r7, pc}
 800cbae:	bf00      	nop
 800cbb0:	08024ce0 	.word	0x08024ce0

0800cbb4 <_ZN8touchgfx18ManyBlockAllocatorILm2880ELm3ELm2EED1Ev>:
class ManyBlockAllocator : public FrameBufferAllocator
 800cbb4:	b580      	push	{r7, lr}
 800cbb6:	b082      	sub	sp, #8
 800cbb8:	af00      	add	r7, sp, #0
 800cbba:	6078      	str	r0, [r7, #4]
 800cbbc:	4a05      	ldr	r2, [pc, #20]	@ (800cbd4 <_ZN8touchgfx18ManyBlockAllocatorILm2880ELm3ELm2EED1Ev+0x20>)
 800cbbe:	687b      	ldr	r3, [r7, #4]
 800cbc0:	601a      	str	r2, [r3, #0]
 800cbc2:	687b      	ldr	r3, [r7, #4]
 800cbc4:	4618      	mov	r0, r3
 800cbc6:	f7ff fbf9 	bl	800c3bc <_ZN8touchgfx20FrameBufferAllocatorD1Ev>
 800cbca:	687b      	ldr	r3, [r7, #4]
 800cbcc:	4618      	mov	r0, r3
 800cbce:	3708      	adds	r7, #8
 800cbd0:	46bd      	mov	sp, r7
 800cbd2:	bd80      	pop	{r7, pc}
 800cbd4:	08024ce0 	.word	0x08024ce0

0800cbd8 <_ZN8touchgfx18ManyBlockAllocatorILm2880ELm3ELm2EED0Ev>:
 800cbd8:	b580      	push	{r7, lr}
 800cbda:	b082      	sub	sp, #8
 800cbdc:	af00      	add	r7, sp, #0
 800cbde:	6078      	str	r0, [r7, #4]
 800cbe0:	6878      	ldr	r0, [r7, #4]
 800cbe2:	f7ff ffe7 	bl	800cbb4 <_ZN8touchgfx18ManyBlockAllocatorILm2880ELm3ELm2EED1Ev>
 800cbe6:	f242 11e8 	movw	r1, #8680	@ 0x21e8
 800cbea:	6878      	ldr	r0, [r7, #4]
 800cbec:	f015 fba3 	bl	8022336 <_ZdlPvj>
 800cbf0:	687b      	ldr	r3, [r7, #4]
 800cbf2:	4618      	mov	r0, r3
 800cbf4:	3708      	adds	r7, #8
 800cbf6:	46bd      	mov	sp, r7
 800cbf8:	bd80      	pop	{r7, pc}
	...

0800cbfc <_Z41__static_initialization_and_destruction_0ii>:
 800cbfc:	b580      	push	{r7, lr}
 800cbfe:	b082      	sub	sp, #8
 800cc00:	af00      	add	r7, sp, #0
 800cc02:	6078      	str	r0, [r7, #4]
 800cc04:	6039      	str	r1, [r7, #0]
 800cc06:	687b      	ldr	r3, [r7, #4]
 800cc08:	2b01      	cmp	r3, #1
 800cc0a:	d107      	bne.n	800cc1c <_Z41__static_initialization_and_destruction_0ii+0x20>
 800cc0c:	683b      	ldr	r3, [r7, #0]
 800cc0e:	f64f 72ff 	movw	r2, #65535	@ 0xffff
 800cc12:	4293      	cmp	r3, r2
 800cc14:	d102      	bne.n	800cc1c <_Z41__static_initialization_and_destruction_0ii+0x20>
       > blockAllocator;
 800cc16:	4809      	ldr	r0, [pc, #36]	@ (800cc3c <_Z41__static_initialization_and_destruction_0ii+0x40>)
 800cc18:	f7ff ff8c 	bl	800cb34 <_ZN8touchgfx18ManyBlockAllocatorILm2880ELm3ELm2EEC1Ev>
 800cc1c:	687b      	ldr	r3, [r7, #4]
 800cc1e:	2b00      	cmp	r3, #0
 800cc20:	d107      	bne.n	800cc32 <_Z41__static_initialization_and_destruction_0ii+0x36>
 800cc22:	683b      	ldr	r3, [r7, #0]
 800cc24:	f64f 72ff 	movw	r2, #65535	@ 0xffff
 800cc28:	4293      	cmp	r3, r2
 800cc2a:	d102      	bne.n	800cc32 <_Z41__static_initialization_and_destruction_0ii+0x36>
 800cc2c:	4803      	ldr	r0, [pc, #12]	@ (800cc3c <_Z41__static_initialization_and_destruction_0ii+0x40>)
 800cc2e:	f7ff ffc1 	bl	800cbb4 <_ZN8touchgfx18ManyBlockAllocatorILm2880ELm3ELm2EED1Ev>
}
 800cc32:	bf00      	nop
 800cc34:	3708      	adds	r7, #8
 800cc36:	46bd      	mov	sp, r7
 800cc38:	bd80      	pop	{r7, pc}
 800cc3a:	bf00      	nop
 800cc3c:	20000bc8 	.word	0x20000bc8

0800cc40 <_ZN8touchgfx18ManyBlockAllocatorILm2880ELm3ELm2EE13allocateBlockEttttPPh>:
     * @param          height The height of the block.
     * @param [in,out] block  Pointer to pointer to return the block address in.
     *
     * @return The height of the allocated block.
     */
    virtual uint16_t allocateBlock(const uint16_t x, const uint16_t y, const uint16_t width, const uint16_t height, uint8_t** block)
 800cc40:	b580      	push	{r7, lr}
 800cc42:	b086      	sub	sp, #24
 800cc44:	af00      	add	r7, sp, #0
 800cc46:	60f8      	str	r0, [r7, #12]
 800cc48:	4608      	mov	r0, r1
 800cc4a:	4611      	mov	r1, r2
 800cc4c:	461a      	mov	r2, r3
 800cc4e:	4603      	mov	r3, r0
 800cc50:	817b      	strh	r3, [r7, #10]
 800cc52:	460b      	mov	r3, r1
 800cc54:	813b      	strh	r3, [r7, #8]
 800cc56:	4613      	mov	r3, r2
 800cc58:	80fb      	strh	r3, [r7, #6]
    {
        drawingBlock++;
 800cc5a:	68fb      	ldr	r3, [r7, #12]
 800cc5c:	f503 5300 	add.w	r3, r3, #8192	@ 0x2000
 800cc60:	f8d3 31e4 	ldr.w	r3, [r3, #484]	@ 0x1e4
 800cc64:	3301      	adds	r3, #1
 800cc66:	68fa      	ldr	r2, [r7, #12]
 800cc68:	f502 5200 	add.w	r2, r2, #8192	@ 0x2000
 800cc6c:	f8c2 31e4 	str.w	r3, [r2, #484]	@ 0x1e4
        if (drawingBlock == blocks)
 800cc70:	68fb      	ldr	r3, [r7, #12]
 800cc72:	f503 5300 	add.w	r3, r3, #8192	@ 0x2000
 800cc76:	f8d3 31e4 	ldr.w	r3, [r3, #484]	@ 0x1e4
 800cc7a:	2b03      	cmp	r3, #3
 800cc7c:	d109      	bne.n	800cc92 <_ZN8touchgfx18ManyBlockAllocatorILm2880ELm3ELm2EE13allocateBlockEttttPPh+0x52>
        {
            drawingBlock = 0;
 800cc7e:	68fb      	ldr	r3, [r7, #12]
 800cc80:	f503 5300 	add.w	r3, r3, #8192	@ 0x2000
 800cc84:	461a      	mov	r2, r3
 800cc86:	2300      	movs	r3, #0
 800cc88:	f8c2 31e4 	str.w	r3, [r2, #484]	@ 0x1e4
        }
        while (state[drawingBlock] != EMPTY)
 800cc8c:	e001      	b.n	800cc92 <_ZN8touchgfx18ManyBlockAllocatorILm2880ELm3ELm2EE13allocateBlockEttttPPh+0x52>
        {
            FrameBufferAllocatorWaitOnTransfer();
 800cc8e:	f7ff fee6 	bl	800ca5e <_ZN8touchgfx34FrameBufferAllocatorWaitOnTransferEv>
        while (state[drawingBlock] != EMPTY)
 800cc92:	68fb      	ldr	r3, [r7, #12]
 800cc94:	f503 5300 	add.w	r3, r3, #8192	@ 0x2000
 800cc98:	f8d3 31e4 	ldr.w	r3, [r3, #484]	@ 0x1e4
 800cc9c:	68fa      	ldr	r2, [r7, #12]
 800cc9e:	4413      	add	r3, r2
 800cca0:	791b      	ldrb	r3, [r3, #4]
 800cca2:	b2db      	uxtb	r3, r3
 800cca4:	2b00      	cmp	r3, #0
 800cca6:	bf14      	ite	ne
 800cca8:	2301      	movne	r3, #1
 800ccaa:	2300      	moveq	r3, #0
 800ccac:	b2db      	uxtb	r3, r3
 800ccae:	2b00      	cmp	r3, #0
 800ccb0:	d1ed      	bne.n	800cc8e <_ZN8touchgfx18ManyBlockAllocatorILm2880ELm3ELm2EE13allocateBlockEttttPPh+0x4e>
        }
        assert(state[drawingBlock] == EMPTY);
 800ccb2:	68fb      	ldr	r3, [r7, #12]
 800ccb4:	f503 5300 	add.w	r3, r3, #8192	@ 0x2000
 800ccb8:	f8d3 31e4 	ldr.w	r3, [r3, #484]	@ 0x1e4
 800ccbc:	68fa      	ldr	r2, [r7, #12]
 800ccbe:	4413      	add	r3, r2
 800ccc0:	791b      	ldrb	r3, [r3, #4]
 800ccc2:	b2db      	uxtb	r3, r3
 800ccc4:	2b00      	cmp	r3, #0
 800ccc6:	d005      	beq.n	800ccd4 <_ZN8touchgfx18ManyBlockAllocatorILm2880ELm3ELm2EE13allocateBlockEttttPPh+0x94>
 800ccc8:	4b38      	ldr	r3, [pc, #224]	@ (800cdac <_ZN8touchgfx18ManyBlockAllocatorILm2880ELm3ELm2EE13allocateBlockEttttPPh+0x16c>)
 800ccca:	4a39      	ldr	r2, [pc, #228]	@ (800cdb0 <_ZN8touchgfx18ManyBlockAllocatorILm2880ELm3ELm2EE13allocateBlockEttttPPh+0x170>)
 800cccc:	21aa      	movs	r1, #170	@ 0xaa
 800ccce:	4839      	ldr	r0, [pc, #228]	@ (800cdb4 <_ZN8touchgfx18ManyBlockAllocatorILm2880ELm3ELm2EE13allocateBlockEttttPPh+0x174>)
 800ccd0:	f015 fbde 	bl	8022490 <__assert_func>
        state[drawingBlock] = ALLOCATED;
 800ccd4:	68fb      	ldr	r3, [r7, #12]
 800ccd6:	f503 5300 	add.w	r3, r3, #8192	@ 0x2000
 800ccda:	f8d3 31e4 	ldr.w	r3, [r3, #484]	@ 0x1e4
 800ccde:	68fa      	ldr	r2, [r7, #12]
 800cce0:	4413      	add	r3, r2
 800cce2:	2201      	movs	r2, #1
 800cce4:	711a      	strb	r2, [r3, #4]
        const int32_t stride = width * bytes_pr_pixel;
 800cce6:	88fb      	ldrh	r3, [r7, #6]
 800cce8:	005b      	lsls	r3, r3, #1
 800ccea:	617b      	str	r3, [r7, #20]
        const int32_t lines = block_size / stride;
 800ccec:	697b      	ldr	r3, [r7, #20]
 800ccee:	f44f 6234 	mov.w	r2, #2880	@ 0xb40
 800ccf2:	fbb2 f3f3 	udiv	r3, r2, r3
 800ccf6:	613b      	str	r3, [r7, #16]
        *block = (uint8_t*)&memory[drawingBlock][0];
 800ccf8:	68fb      	ldr	r3, [r7, #12]
 800ccfa:	f503 5300 	add.w	r3, r3, #8192	@ 0x2000
 800ccfe:	f8d3 31e4 	ldr.w	r3, [r3, #484]	@ 0x1e4
 800cd02:	f44f 6234 	mov.w	r2, #2880	@ 0xb40
 800cd06:	fb02 f303 	mul.w	r3, r2, r3
 800cd0a:	3308      	adds	r3, #8
 800cd0c:	68fa      	ldr	r2, [r7, #12]
 800cd0e:	441a      	add	r2, r3
 800cd10:	6a7b      	ldr	r3, [r7, #36]	@ 0x24
 800cd12:	601a      	str	r2, [r3, #0]
        blockRect[drawingBlock].x = x;
 800cd14:	68fb      	ldr	r3, [r7, #12]
 800cd16:	f503 5300 	add.w	r3, r3, #8192	@ 0x2000
 800cd1a:	f8d3 21e4 	ldr.w	r2, [r3, #484]	@ 0x1e4
 800cd1e:	f9b7 100a 	ldrsh.w	r1, [r7, #10]
 800cd22:	68fb      	ldr	r3, [r7, #12]
 800cd24:	f202 4239 	addw	r2, r2, #1081	@ 0x439
 800cd28:	f823 1032 	strh.w	r1, [r3, r2, lsl #3]
        blockRect[drawingBlock].y = y;
 800cd2c:	68fb      	ldr	r3, [r7, #12]
 800cd2e:	f503 5300 	add.w	r3, r3, #8192	@ 0x2000
 800cd32:	f8d3 31e4 	ldr.w	r3, [r3, #484]	@ 0x1e4
 800cd36:	f9b7 1008 	ldrsh.w	r1, [r7, #8]
 800cd3a:	68fa      	ldr	r2, [r7, #12]
 800cd3c:	f203 4339 	addw	r3, r3, #1081	@ 0x439
 800cd40:	00db      	lsls	r3, r3, #3
 800cd42:	4413      	add	r3, r2
 800cd44:	460a      	mov	r2, r1
 800cd46:	805a      	strh	r2, [r3, #2]
        blockRect[drawingBlock].width = width;
 800cd48:	68fb      	ldr	r3, [r7, #12]
 800cd4a:	f503 5300 	add.w	r3, r3, #8192	@ 0x2000
 800cd4e:	f8d3 31e4 	ldr.w	r3, [r3, #484]	@ 0x1e4
 800cd52:	f9b7 1006 	ldrsh.w	r1, [r7, #6]
 800cd56:	68fa      	ldr	r2, [r7, #12]
 800cd58:	f203 4339 	addw	r3, r3, #1081	@ 0x439
 800cd5c:	00db      	lsls	r3, r3, #3
 800cd5e:	4413      	add	r3, r2
 800cd60:	460a      	mov	r2, r1
 800cd62:	809a      	strh	r2, [r3, #4]
        blockRect[drawingBlock].height = MIN(height, lines);
 800cd64:	8c3a      	ldrh	r2, [r7, #32]
 800cd66:	693b      	ldr	r3, [r7, #16]
 800cd68:	429a      	cmp	r2, r3
 800cd6a:	bfa8      	it	ge
 800cd6c:	461a      	movge	r2, r3
 800cd6e:	68fb      	ldr	r3, [r7, #12]
 800cd70:	f503 5300 	add.w	r3, r3, #8192	@ 0x2000
 800cd74:	f8d3 31e4 	ldr.w	r3, [r3, #484]	@ 0x1e4
 800cd78:	b211      	sxth	r1, r2
 800cd7a:	68fa      	ldr	r2, [r7, #12]
 800cd7c:	f203 4339 	addw	r3, r3, #1081	@ 0x439
 800cd80:	00db      	lsls	r3, r3, #3
 800cd82:	4413      	add	r3, r2
 800cd84:	460a      	mov	r2, r1
 800cd86:	80da      	strh	r2, [r3, #6]
        return blockRect[drawingBlock].height;
 800cd88:	68fb      	ldr	r3, [r7, #12]
 800cd8a:	f503 5300 	add.w	r3, r3, #8192	@ 0x2000
 800cd8e:	f8d3 31e4 	ldr.w	r3, [r3, #484]	@ 0x1e4
 800cd92:	68fa      	ldr	r2, [r7, #12]
 800cd94:	f203 4339 	addw	r3, r3, #1081	@ 0x439
 800cd98:	00db      	lsls	r3, r3, #3
 800cd9a:	4413      	add	r3, r2
 800cd9c:	f9b3 3006 	ldrsh.w	r3, [r3, #6]
 800cda0:	b29b      	uxth	r3, r3
    }
 800cda2:	4618      	mov	r0, r3
 800cda4:	3718      	adds	r7, #24
 800cda6:	46bd      	mov	sp, r7
 800cda8:	bd80      	pop	{r7, pc}
 800cdaa:	bf00      	nop
 800cdac:	08023f44 	.word	0x08023f44
 800cdb0:	08023f64 	.word	0x08023f64
 800cdb4:	08024098 	.word	0x08024098

0800cdb8 <_ZN8touchgfx18ManyBlockAllocatorILm2880ELm3ELm2EE25markBlockReadyForTransferEv>:

    /** Marks a previously allocated block as ready to be transferred to the LCD. */
    virtual void markBlockReadyForTransfer()
 800cdb8:	b580      	push	{r7, lr}
 800cdba:	b082      	sub	sp, #8
 800cdbc:	af00      	add	r7, sp, #0
 800cdbe:	6078      	str	r0, [r7, #4]
    {
        assert(state[drawingBlock] == ALLOCATED);
 800cdc0:	687b      	ldr	r3, [r7, #4]
 800cdc2:	f503 5300 	add.w	r3, r3, #8192	@ 0x2000
 800cdc6:	f8d3 31e4 	ldr.w	r3, [r3, #484]	@ 0x1e4
 800cdca:	687a      	ldr	r2, [r7, #4]
 800cdcc:	4413      	add	r3, r2
 800cdce:	791b      	ldrb	r3, [r3, #4]
 800cdd0:	b2db      	uxtb	r3, r3
 800cdd2:	2b01      	cmp	r3, #1
 800cdd4:	d005      	beq.n	800cde2 <_ZN8touchgfx18ManyBlockAllocatorILm2880ELm3ELm2EE25markBlockReadyForTransferEv+0x2a>
 800cdd6:	4b0a      	ldr	r3, [pc, #40]	@ (800ce00 <_ZN8touchgfx18ManyBlockAllocatorILm2880ELm3ELm2EE25markBlockReadyForTransferEv+0x48>)
 800cdd8:	4a0a      	ldr	r2, [pc, #40]	@ (800ce04 <_ZN8touchgfx18ManyBlockAllocatorILm2880ELm3ELm2EE25markBlockReadyForTransferEv+0x4c>)
 800cdda:	21b9      	movs	r1, #185	@ 0xb9
 800cddc:	480a      	ldr	r0, [pc, #40]	@ (800ce08 <_ZN8touchgfx18ManyBlockAllocatorILm2880ELm3ELm2EE25markBlockReadyForTransferEv+0x50>)
 800cdde:	f015 fb57 	bl	8022490 <__assert_func>
        state[drawingBlock] = DRAWN;
 800cde2:	687b      	ldr	r3, [r7, #4]
 800cde4:	f503 5300 	add.w	r3, r3, #8192	@ 0x2000
 800cde8:	f8d3 31e4 	ldr.w	r3, [r3, #484]	@ 0x1e4
 800cdec:	687a      	ldr	r2, [r7, #4]
 800cdee:	4413      	add	r3, r2
 800cdf0:	2202      	movs	r2, #2
 800cdf2:	711a      	strb	r2, [r3, #4]
        FrameBufferAllocatorSignalBlockDrawn();
 800cdf4:	f7ff fe3a 	bl	800ca6c <_ZN8touchgfx36FrameBufferAllocatorSignalBlockDrawnEv>
    }
 800cdf8:	bf00      	nop
 800cdfa:	3708      	adds	r7, #8
 800cdfc:	46bd      	mov	sp, r7
 800cdfe:	bd80      	pop	{r7, pc}
 800ce00:	080240ec 	.word	0x080240ec
 800ce04:	08024110 	.word	0x08024110
 800ce08:	08024098 	.word	0x08024098

0800ce0c <_ZN8touchgfx18ManyBlockAllocatorILm2880ELm3ELm2EE24hasBlockReadyForTransferEv>:
    /**
     * Check if a block is ready for transfer to the LCD.
     *
     * @return True if a block is ready for transfer.
     */
    virtual bool hasBlockReadyForTransfer()
 800ce0c:	b480      	push	{r7}
 800ce0e:	b085      	sub	sp, #20
 800ce10:	af00      	add	r7, sp, #0
 800ce12:	6078      	str	r0, [r7, #4]
    {
        for (uint32_t i = 0; i < blocks; i++)
 800ce14:	2300      	movs	r3, #0
 800ce16:	60fb      	str	r3, [r7, #12]
 800ce18:	e011      	b.n	800ce3e <_ZN8touchgfx18ManyBlockAllocatorILm2880ELm3ELm2EE24hasBlockReadyForTransferEv+0x32>
        {
            if (state[i] == DRAWN)
 800ce1a:	687a      	ldr	r2, [r7, #4]
 800ce1c:	68fb      	ldr	r3, [r7, #12]
 800ce1e:	4413      	add	r3, r2
 800ce20:	3304      	adds	r3, #4
 800ce22:	781b      	ldrb	r3, [r3, #0]
 800ce24:	b2db      	uxtb	r3, r3
 800ce26:	2b02      	cmp	r3, #2
 800ce28:	bf0c      	ite	eq
 800ce2a:	2301      	moveq	r3, #1
 800ce2c:	2300      	movne	r3, #0
 800ce2e:	b2db      	uxtb	r3, r3
 800ce30:	2b00      	cmp	r3, #0
 800ce32:	d001      	beq.n	800ce38 <_ZN8touchgfx18ManyBlockAllocatorILm2880ELm3ELm2EE24hasBlockReadyForTransferEv+0x2c>
            {
                return true;
 800ce34:	2301      	movs	r3, #1
 800ce36:	e006      	b.n	800ce46 <_ZN8touchgfx18ManyBlockAllocatorILm2880ELm3ELm2EE24hasBlockReadyForTransferEv+0x3a>
        for (uint32_t i = 0; i < blocks; i++)
 800ce38:	68fb      	ldr	r3, [r7, #12]
 800ce3a:	3301      	adds	r3, #1
 800ce3c:	60fb      	str	r3, [r7, #12]
 800ce3e:	68fb      	ldr	r3, [r7, #12]
 800ce40:	2b02      	cmp	r3, #2
 800ce42:	d9ea      	bls.n	800ce1a <_ZN8touchgfx18ManyBlockAllocatorILm2880ELm3ELm2EE24hasBlockReadyForTransferEv+0xe>
            }
        }
        return false;
 800ce44:	2300      	movs	r3, #0
    }
 800ce46:	4618      	mov	r0, r3
 800ce48:	3714      	adds	r7, #20
 800ce4a:	46bd      	mov	sp, r7
 800ce4c:	f85d 7b04 	ldr.w	r7, [sp], #4
 800ce50:	4770      	bx	lr
	...

0800ce54 <_ZN8touchgfx18ManyBlockAllocatorILm2880ELm3ELm2EE19getBlockForTransferERNS_4RectE>:
     *
     * @param [in,out] rect Reference to rect to write block x, y, width, and height.
     *
     * @return Returns the address of the block ready for transfer.
     */
    virtual const uint8_t* getBlockForTransfer(Rect& rect)
 800ce54:	b580      	push	{r7, lr}
 800ce56:	b082      	sub	sp, #8
 800ce58:	af00      	add	r7, sp, #0
 800ce5a:	6078      	str	r0, [r7, #4]
 800ce5c:	6039      	str	r1, [r7, #0]
    {
        sendingBlock++;
 800ce5e:	687b      	ldr	r3, [r7, #4]
 800ce60:	f503 5300 	add.w	r3, r3, #8192	@ 0x2000
 800ce64:	f8d3 31e0 	ldr.w	r3, [r3, #480]	@ 0x1e0
 800ce68:	3301      	adds	r3, #1
 800ce6a:	687a      	ldr	r2, [r7, #4]
 800ce6c:	f502 5200 	add.w	r2, r2, #8192	@ 0x2000
 800ce70:	f8c2 31e0 	str.w	r3, [r2, #480]	@ 0x1e0
        if (sendingBlock == blocks)
 800ce74:	687b      	ldr	r3, [r7, #4]
 800ce76:	f503 5300 	add.w	r3, r3, #8192	@ 0x2000
 800ce7a:	f8d3 31e0 	ldr.w	r3, [r3, #480]	@ 0x1e0
 800ce7e:	2b03      	cmp	r3, #3
 800ce80:	d106      	bne.n	800ce90 <_ZN8touchgfx18ManyBlockAllocatorILm2880ELm3ELm2EE19getBlockForTransferERNS_4RectE+0x3c>
        {
            sendingBlock = 0;
 800ce82:	687b      	ldr	r3, [r7, #4]
 800ce84:	f503 5300 	add.w	r3, r3, #8192	@ 0x2000
 800ce88:	461a      	mov	r2, r3
 800ce8a:	2300      	movs	r3, #0
 800ce8c:	f8c2 31e0 	str.w	r3, [r2, #480]	@ 0x1e0
        }
        assert(state[sendingBlock] == DRAWN);
 800ce90:	687b      	ldr	r3, [r7, #4]
 800ce92:	f503 5300 	add.w	r3, r3, #8192	@ 0x2000
 800ce96:	f8d3 31e0 	ldr.w	r3, [r3, #480]	@ 0x1e0
 800ce9a:	687a      	ldr	r2, [r7, #4]
 800ce9c:	4413      	add	r3, r2
 800ce9e:	791b      	ldrb	r3, [r3, #4]
 800cea0:	b2db      	uxtb	r3, r3
 800cea2:	2b02      	cmp	r3, #2
 800cea4:	d005      	beq.n	800ceb2 <_ZN8touchgfx18ManyBlockAllocatorILm2880ELm3ELm2EE19getBlockForTransferERNS_4RectE+0x5e>
 800cea6:	4b16      	ldr	r3, [pc, #88]	@ (800cf00 <_ZN8touchgfx18ManyBlockAllocatorILm2880ELm3ELm2EE19getBlockForTransferERNS_4RectE+0xac>)
 800cea8:	4a16      	ldr	r2, [pc, #88]	@ (800cf04 <_ZN8touchgfx18ManyBlockAllocatorILm2880ELm3ELm2EE19getBlockForTransferERNS_4RectE+0xb0>)
 800ceaa:	21dd      	movs	r1, #221	@ 0xdd
 800ceac:	4816      	ldr	r0, [pc, #88]	@ (800cf08 <_ZN8touchgfx18ManyBlockAllocatorILm2880ELm3ELm2EE19getBlockForTransferERNS_4RectE+0xb4>)
 800ceae:	f015 faef 	bl	8022490 <__assert_func>
        rect = blockRect[sendingBlock];
 800ceb2:	687b      	ldr	r3, [r7, #4]
 800ceb4:	f503 5300 	add.w	r3, r3, #8192	@ 0x2000
 800ceb8:	f8d3 31e0 	ldr.w	r3, [r3, #480]	@ 0x1e0
 800cebc:	683a      	ldr	r2, [r7, #0]
 800cebe:	6879      	ldr	r1, [r7, #4]
 800cec0:	f203 4339 	addw	r3, r3, #1081	@ 0x439
 800cec4:	00db      	lsls	r3, r3, #3
 800cec6:	440b      	add	r3, r1
 800cec8:	cb03      	ldmia	r3!, {r0, r1}
 800ceca:	6010      	str	r0, [r2, #0]
 800cecc:	6051      	str	r1, [r2, #4]
        state[sendingBlock] = SENDING;
 800cece:	687b      	ldr	r3, [r7, #4]
 800ced0:	f503 5300 	add.w	r3, r3, #8192	@ 0x2000
 800ced4:	f8d3 31e0 	ldr.w	r3, [r3, #480]	@ 0x1e0
 800ced8:	687a      	ldr	r2, [r7, #4]
 800ceda:	4413      	add	r3, r2
 800cedc:	2203      	movs	r2, #3
 800cede:	711a      	strb	r2, [r3, #4]
        return (const uint8_t*)&memory[sendingBlock][0];
 800cee0:	687b      	ldr	r3, [r7, #4]
 800cee2:	f503 5300 	add.w	r3, r3, #8192	@ 0x2000
 800cee6:	f8d3 31e0 	ldr.w	r3, [r3, #480]	@ 0x1e0
 800ceea:	f44f 6234 	mov.w	r2, #2880	@ 0xb40
 800ceee:	fb02 f303 	mul.w	r3, r2, r3
 800cef2:	3308      	adds	r3, #8
 800cef4:	687a      	ldr	r2, [r7, #4]
 800cef6:	4413      	add	r3, r2
    }
 800cef8:	4618      	mov	r0, r3
 800cefa:	3708      	adds	r7, #8
 800cefc:	46bd      	mov	sp, r7
 800cefe:	bd80      	pop	{r7, pc}
 800cf00:	080241e4 	.word	0x080241e4
 800cf04:	08024204 	.word	0x08024204
 800cf08:	08024098 	.word	0x08024098

0800cf0c <_ZN8touchgfx18ManyBlockAllocatorILm2880ELm3ELm2EE20peekBlockForTransferEv>:

    virtual const Rect& peekBlockForTransfer()
 800cf0c:	b580      	push	{r7, lr}
 800cf0e:	b084      	sub	sp, #16
 800cf10:	af00      	add	r7, sp, #0
 800cf12:	6078      	str	r0, [r7, #4]
    {
        int nextSendingBlock = sendingBlock + 1;
 800cf14:	687b      	ldr	r3, [r7, #4]
 800cf16:	f503 5300 	add.w	r3, r3, #8192	@ 0x2000
 800cf1a:	f8d3 31e0 	ldr.w	r3, [r3, #480]	@ 0x1e0
 800cf1e:	3301      	adds	r3, #1
 800cf20:	60fb      	str	r3, [r7, #12]
        if (nextSendingBlock == blocks)
 800cf22:	68fb      	ldr	r3, [r7, #12]
 800cf24:	2b03      	cmp	r3, #3
 800cf26:	d101      	bne.n	800cf2c <_ZN8touchgfx18ManyBlockAllocatorILm2880ELm3ELm2EE20peekBlockForTransferEv+0x20>
        {
            nextSendingBlock = 0;
 800cf28:	2300      	movs	r3, #0
 800cf2a:	60fb      	str	r3, [r7, #12]
        }
        assert(state[nextSendingBlock] == DRAWN);
 800cf2c:	687a      	ldr	r2, [r7, #4]
 800cf2e:	68fb      	ldr	r3, [r7, #12]
 800cf30:	4413      	add	r3, r2
 800cf32:	3304      	adds	r3, #4
 800cf34:	781b      	ldrb	r3, [r3, #0]
 800cf36:	b2db      	uxtb	r3, r3
 800cf38:	2b02      	cmp	r3, #2
 800cf3a:	d005      	beq.n	800cf48 <_ZN8touchgfx18ManyBlockAllocatorILm2880ELm3ELm2EE20peekBlockForTransferEv+0x3c>
 800cf3c:	4b07      	ldr	r3, [pc, #28]	@ (800cf5c <_ZN8touchgfx18ManyBlockAllocatorILm2880ELm3ELm2EE20peekBlockForTransferEv+0x50>)
 800cf3e:	4a08      	ldr	r2, [pc, #32]	@ (800cf60 <_ZN8touchgfx18ManyBlockAllocatorILm2880ELm3ELm2EE20peekBlockForTransferEv+0x54>)
 800cf40:	21ea      	movs	r1, #234	@ 0xea
 800cf42:	4808      	ldr	r0, [pc, #32]	@ (800cf64 <_ZN8touchgfx18ManyBlockAllocatorILm2880ELm3ELm2EE20peekBlockForTransferEv+0x58>)
 800cf44:	f015 faa4 	bl	8022490 <__assert_func>
        return blockRect[nextSendingBlock];
 800cf48:	68fb      	ldr	r3, [r7, #12]
 800cf4a:	f203 4339 	addw	r3, r3, #1081	@ 0x439
 800cf4e:	00db      	lsls	r3, r3, #3
 800cf50:	687a      	ldr	r2, [r7, #4]
 800cf52:	4413      	add	r3, r2
    }
 800cf54:	4618      	mov	r0, r3
 800cf56:	3710      	adds	r7, #16
 800cf58:	46bd      	mov	sp, r7
 800cf5a:	bd80      	pop	{r7, pc}
 800cf5c:	08024304 	.word	0x08024304
 800cf60:	08024328 	.word	0x08024328
 800cf64:	08024098 	.word	0x08024098

0800cf68 <_ZN8touchgfx18ManyBlockAllocatorILm2880ELm3ELm2EE13hasEmptyBlockEv>:

    virtual bool hasEmptyBlock()
 800cf68:	b480      	push	{r7}
 800cf6a:	b085      	sub	sp, #20
 800cf6c:	af00      	add	r7, sp, #0
 800cf6e:	6078      	str	r0, [r7, #4]
    {
        int nextDrawingBlock = drawingBlock + 1;
 800cf70:	687b      	ldr	r3, [r7, #4]
 800cf72:	f503 5300 	add.w	r3, r3, #8192	@ 0x2000
 800cf76:	f8d3 31e4 	ldr.w	r3, [r3, #484]	@ 0x1e4
 800cf7a:	3301      	adds	r3, #1
 800cf7c:	60fb      	str	r3, [r7, #12]
        if (nextDrawingBlock == blocks)
 800cf7e:	68fb      	ldr	r3, [r7, #12]
 800cf80:	2b03      	cmp	r3, #3
 800cf82:	d101      	bne.n	800cf88 <_ZN8touchgfx18ManyBlockAllocatorILm2880ELm3ELm2EE13hasEmptyBlockEv+0x20>
        {
            nextDrawingBlock = 0;
 800cf84:	2300      	movs	r3, #0
 800cf86:	60fb      	str	r3, [r7, #12]
        }
        return (state[nextDrawingBlock] == EMPTY);
 800cf88:	687a      	ldr	r2, [r7, #4]
 800cf8a:	68fb      	ldr	r3, [r7, #12]
 800cf8c:	4413      	add	r3, r2
 800cf8e:	3304      	adds	r3, #4
 800cf90:	781b      	ldrb	r3, [r3, #0]
 800cf92:	b2db      	uxtb	r3, r3
 800cf94:	2b00      	cmp	r3, #0
 800cf96:	bf0c      	ite	eq
 800cf98:	2301      	moveq	r3, #1
 800cf9a:	2300      	movne	r3, #0
 800cf9c:	b2db      	uxtb	r3, r3
    }
 800cf9e:	4618      	mov	r0, r3
 800cfa0:	3714      	adds	r7, #20
 800cfa2:	46bd      	mov	sp, r7
 800cfa4:	f85d 7b04 	ldr.w	r7, [sp], #4
 800cfa8:	4770      	bx	lr
	...

0800cfac <_ZN8touchgfx18ManyBlockAllocatorILm2880ELm3ELm2EE22freeBlockAfterTransferEv>:
    /**
     * Free a block after transfer to the LCD.
     *
     * Marks a previously allocated block as transferred and ready to reuse.
     */
    virtual void freeBlockAfterTransfer()
 800cfac:	b580      	push	{r7, lr}
 800cfae:	b082      	sub	sp, #8
 800cfb0:	af00      	add	r7, sp, #0
 800cfb2:	6078      	str	r0, [r7, #4]
    {
        assert(state[sendingBlock] == SENDING);
 800cfb4:	687b      	ldr	r3, [r7, #4]
 800cfb6:	f503 5300 	add.w	r3, r3, #8192	@ 0x2000
 800cfba:	f8d3 31e0 	ldr.w	r3, [r3, #480]	@ 0x1e0
 800cfbe:	687a      	ldr	r2, [r7, #4]
 800cfc0:	4413      	add	r3, r2
 800cfc2:	791b      	ldrb	r3, [r3, #4]
 800cfc4:	b2db      	uxtb	r3, r3
 800cfc6:	2b03      	cmp	r3, #3
 800cfc8:	d005      	beq.n	800cfd6 <_ZN8touchgfx18ManyBlockAllocatorILm2880ELm3ELm2EE22freeBlockAfterTransferEv+0x2a>
 800cfca:	4b09      	ldr	r3, [pc, #36]	@ (800cff0 <_ZN8touchgfx18ManyBlockAllocatorILm2880ELm3ELm2EE22freeBlockAfterTransferEv+0x44>)
 800cfcc:	4a09      	ldr	r2, [pc, #36]	@ (800cff4 <_ZN8touchgfx18ManyBlockAllocatorILm2880ELm3ELm2EE22freeBlockAfterTransferEv+0x48>)
 800cfce:	21ff      	movs	r1, #255	@ 0xff
 800cfd0:	4809      	ldr	r0, [pc, #36]	@ (800cff8 <_ZN8touchgfx18ManyBlockAllocatorILm2880ELm3ELm2EE22freeBlockAfterTransferEv+0x4c>)
 800cfd2:	f015 fa5d 	bl	8022490 <__assert_func>
        state[sendingBlock] = EMPTY;
 800cfd6:	687b      	ldr	r3, [r7, #4]
 800cfd8:	f503 5300 	add.w	r3, r3, #8192	@ 0x2000
 800cfdc:	f8d3 31e0 	ldr.w	r3, [r3, #480]	@ 0x1e0
 800cfe0:	687a      	ldr	r2, [r7, #4]
 800cfe2:	4413      	add	r3, r2
 800cfe4:	2200      	movs	r2, #0
 800cfe6:	711a      	strb	r2, [r3, #4]
    }
 800cfe8:	bf00      	nop
 800cfea:	3708      	adds	r7, #8
 800cfec:	46bd      	mov	sp, r7
 800cfee:	bd80      	pop	{r7, pc}
 800cff0:	08024408 	.word	0x08024408
 800cff4:	08024428 	.word	0x08024428
 800cff8:	08024098 	.word	0x08024098

0800cffc <_GLOBAL__sub_I__ZN8touchgfx5paint12setL8PaletteEPKh>:
 800cffc:	b580      	push	{r7, lr}
 800cffe:	af00      	add	r7, sp, #0
 800d000:	f64f 71ff 	movw	r1, #65535	@ 0xffff
 800d004:	2001      	movs	r0, #1
 800d006:	f7ff fdf9 	bl	800cbfc <_Z41__static_initialization_and_destruction_0ii>
 800d00a:	bd80      	pop	{r7, pc}

0800d00c <_GLOBAL__sub_D__ZN8touchgfx5paint12setL8PaletteEPKh>:
 800d00c:	b580      	push	{r7, lr}
 800d00e:	af00      	add	r7, sp, #0
 800d010:	f64f 71ff 	movw	r1, #65535	@ 0xffff
 800d014:	2000      	movs	r0, #0
 800d016:	f7ff fdf1 	bl	800cbfc <_Z41__static_initialization_and_destruction_0ii>
 800d01a:	bd80      	pop	{r7, pc}

0800d01c <_ZNK8touchgfx17AbstractPartition18getAllocationCountEv>:
 800d01c:	8880      	ldrh	r0, [r0, #4]
 800d01e:	4770      	bx	lr

0800d020 <_ZN8touchgfx17AbstractPartition7indexOfEPKv>:
 800d020:	b570      	push	{r4, r5, r6, lr}
 800d022:	6803      	ldr	r3, [r0, #0]
 800d024:	4605      	mov	r5, r0
 800d026:	460c      	mov	r4, r1
 800d028:	6a5b      	ldr	r3, [r3, #36]	@ 0x24
 800d02a:	2100      	movs	r1, #0
 800d02c:	4798      	blx	r3
 800d02e:	682b      	ldr	r3, [r5, #0]
 800d030:	4606      	mov	r6, r0
 800d032:	6a1b      	ldr	r3, [r3, #32]
 800d034:	4628      	mov	r0, r5
 800d036:	4798      	blx	r3
 800d038:	1ba4      	subs	r4, r4, r6
 800d03a:	b2a4      	uxth	r4, r4
 800d03c:	fbb4 f0f0 	udiv	r0, r4, r0
 800d040:	bd70      	pop	{r4, r5, r6, pc}

0800d042 <_ZN8touchgfx17AbstractPartition5clearEv>:
 800d042:	2300      	movs	r3, #0
 800d044:	8083      	strh	r3, [r0, #4]
 800d046:	4770      	bx	lr

0800d048 <_ZN8touchgfx17AbstractPartition8allocateEt>:
 800d048:	b510      	push	{r4, lr}
 800d04a:	6803      	ldr	r3, [r0, #0]
 800d04c:	8881      	ldrh	r1, [r0, #4]
 800d04e:	6a5b      	ldr	r3, [r3, #36]	@ 0x24
 800d050:	4604      	mov	r4, r0
 800d052:	4798      	blx	r3
 800d054:	88a3      	ldrh	r3, [r4, #4]
 800d056:	3301      	adds	r3, #1
 800d058:	80a3      	strh	r3, [r4, #4]
 800d05a:	bd10      	pop	{r4, pc}

0800d05c <_ZN8touchgfx17AbstractPartition10allocateAtEtt>:
 800d05c:	6803      	ldr	r3, [r0, #0]
 800d05e:	6a5b      	ldr	r3, [r3, #36]	@ 0x24
 800d060:	4718      	bx	r3

0800d062 <_ZN8touchgfx17AbstractPartitionD1Ev>:
 800d062:	4770      	bx	lr

0800d064 <_ZN8touchgfx17AbstractPartitionC1Ev>:
 800d064:	4a02      	ldr	r2, [pc, #8]	@ (800d070 <_ZN8touchgfx17AbstractPartitionC1Ev+0xc>)
 800d066:	6002      	str	r2, [r0, #0]
 800d068:	2200      	movs	r2, #0
 800d06a:	8082      	strh	r2, [r0, #4]
 800d06c:	4770      	bx	lr
 800d06e:	bf00      	nop
 800d070:	08024e10 	.word	0x08024e10

0800d074 <_ZN8touchgfx9Container13getFirstChildEv>:
 800d074:	6a80      	ldr	r0, [r0, #40]	@ 0x28
 800d076:	4770      	bx	lr

0800d078 <_ZN8touchgfx9Container8containsERKNS_8DrawableE>:
 800d078:	6a83      	ldr	r3, [r0, #40]	@ 0x28
 800d07a:	2000      	movs	r0, #0
 800d07c:	b12b      	cbz	r3, 800d08a <_ZN8touchgfx9Container8containsERKNS_8DrawableE+0x12>
 800d07e:	b920      	cbnz	r0, 800d08a <_ZN8touchgfx9Container8containsERKNS_8DrawableE+0x12>
 800d080:	1a5a      	subs	r2, r3, r1
 800d082:	4250      	negs	r0, r2
 800d084:	4150      	adcs	r0, r2
 800d086:	699b      	ldr	r3, [r3, #24]
 800d088:	e7f8      	b.n	800d07c <_ZN8touchgfx9Container8containsERKNS_8DrawableE+0x4>
 800d08a:	4770      	bx	lr

0800d08c <_ZN8touchgfx9Container3addERNS_8DrawableE>:
 800d08c:	2300      	movs	r3, #0
 800d08e:	6148      	str	r0, [r1, #20]
 800d090:	618b      	str	r3, [r1, #24]
 800d092:	6a83      	ldr	r3, [r0, #40]	@ 0x28
 800d094:	b913      	cbnz	r3, 800d09c <_ZN8touchgfx9Container3addERNS_8DrawableE+0x10>
 800d096:	6281      	str	r1, [r0, #40]	@ 0x28
 800d098:	4770      	bx	lr
 800d09a:	4613      	mov	r3, r2
 800d09c:	699a      	ldr	r2, [r3, #24]
 800d09e:	2a00      	cmp	r2, #0
 800d0a0:	d1fb      	bne.n	800d09a <_ZN8touchgfx9Container3addERNS_8DrawableE+0xe>
 800d0a2:	6199      	str	r1, [r3, #24]
 800d0a4:	4770      	bx	lr

0800d0a6 <_ZN8touchgfx9Container9removeAllEv>:
 800d0a6:	2200      	movs	r2, #0
 800d0a8:	6a83      	ldr	r3, [r0, #40]	@ 0x28
 800d0aa:	b123      	cbz	r3, 800d0b6 <_ZN8touchgfx9Container9removeAllEv+0x10>
 800d0ac:	6999      	ldr	r1, [r3, #24]
 800d0ae:	6281      	str	r1, [r0, #40]	@ 0x28
 800d0b0:	e9c3 2205 	strd	r2, r2, [r3, #20]
 800d0b4:	e7f8      	b.n	800d0a8 <_ZN8touchgfx9Container9removeAllEv+0x2>
 800d0b6:	4770      	bx	lr

0800d0b8 <_ZN8touchgfx9Container6unlinkEv>:
 800d0b8:	2300      	movs	r3, #0
 800d0ba:	6283      	str	r3, [r0, #40]	@ 0x28
 800d0bc:	4770      	bx	lr

0800d0be <_ZNK8touchgfx9Container12getSolidRectEv>:
 800d0be:	2200      	movs	r2, #0
 800d0c0:	8002      	strh	r2, [r0, #0]
 800d0c2:	8042      	strh	r2, [r0, #2]
 800d0c4:	8082      	strh	r2, [r0, #4]
 800d0c6:	80c2      	strh	r2, [r0, #6]
 800d0c8:	4770      	bx	lr

0800d0ca <_ZN8touchgfx9Container20moveChildrenRelativeEss>:
 800d0ca:	b570      	push	{r4, r5, r6, lr}
 800d0cc:	6a84      	ldr	r4, [r0, #40]	@ 0x28
 800d0ce:	460d      	mov	r5, r1
 800d0d0:	4616      	mov	r6, r2
 800d0d2:	b13c      	cbz	r4, 800d0e4 <_ZN8touchgfx9Container20moveChildrenRelativeEss+0x1a>
 800d0d4:	6823      	ldr	r3, [r4, #0]
 800d0d6:	4620      	mov	r0, r4
 800d0d8:	6d5b      	ldr	r3, [r3, #84]	@ 0x54
 800d0da:	4632      	mov	r2, r6
 800d0dc:	4629      	mov	r1, r5
 800d0de:	4798      	blx	r3
 800d0e0:	69a4      	ldr	r4, [r4, #24]
 800d0e2:	e7f6      	b.n	800d0d2 <_ZN8touchgfx9Container20moveChildrenRelativeEss+0x8>
 800d0e4:	bd70      	pop	{r4, r5, r6, pc}

0800d0e6 <_ZN8touchgfx9Container12forEachChildEPNS_15GenericCallbackIRNS_8DrawableEvvEE>:
 800d0e6:	b538      	push	{r3, r4, r5, lr}
 800d0e8:	6a84      	ldr	r4, [r0, #40]	@ 0x28
 800d0ea:	460d      	mov	r5, r1
 800d0ec:	b134      	cbz	r4, 800d0fc <_ZN8touchgfx9Container12forEachChildEPNS_15GenericCallbackIRNS_8DrawableEvvEE+0x16>
 800d0ee:	682b      	ldr	r3, [r5, #0]
 800d0f0:	4621      	mov	r1, r4
 800d0f2:	689b      	ldr	r3, [r3, #8]
 800d0f4:	4628      	mov	r0, r5
 800d0f6:	4798      	blx	r3
 800d0f8:	69a4      	ldr	r4, [r4, #24]
 800d0fa:	e7f7      	b.n	800d0ec <_ZN8touchgfx9Container12forEachChildEPNS_15GenericCallbackIRNS_8DrawableEvvEE+0x6>
 800d0fc:	bd38      	pop	{r3, r4, r5, pc}

0800d0fe <_ZN8touchgfx9Container6removeERNS_8DrawableE>:
 800d0fe:	6a83      	ldr	r3, [r0, #40]	@ 0x28
 800d100:	b19b      	cbz	r3, 800d12a <_ZN8touchgfx9Container6removeERNS_8DrawableE+0x2c>
 800d102:	428b      	cmp	r3, r1
 800d104:	d109      	bne.n	800d11a <_ZN8touchgfx9Container6removeERNS_8DrawableE+0x1c>
 800d106:	699a      	ldr	r2, [r3, #24]
 800d108:	2100      	movs	r1, #0
 800d10a:	6159      	str	r1, [r3, #20]
 800d10c:	6282      	str	r2, [r0, #40]	@ 0x28
 800d10e:	b902      	cbnz	r2, 800d112 <_ZN8touchgfx9Container6removeERNS_8DrawableE+0x14>
 800d110:	4770      	bx	lr
 800d112:	6199      	str	r1, [r3, #24]
 800d114:	4770      	bx	lr
 800d116:	4613      	mov	r3, r2
 800d118:	b13a      	cbz	r2, 800d12a <_ZN8touchgfx9Container6removeERNS_8DrawableE+0x2c>
 800d11a:	699a      	ldr	r2, [r3, #24]
 800d11c:	428a      	cmp	r2, r1
 800d11e:	d1fa      	bne.n	800d116 <_ZN8touchgfx9Container6removeERNS_8DrawableE+0x18>
 800d120:	698a      	ldr	r2, [r1, #24]
 800d122:	619a      	str	r2, [r3, #24]
 800d124:	2300      	movs	r3, #0
 800d126:	e9c1 3305 	strd	r3, r3, [r1, #20]
 800d12a:	4770      	bx	lr

0800d12c <_ZN8touchgfx9Container6insertEPNS_8DrawableERS1_>:
 800d12c:	b410      	push	{r4}
 800d12e:	6a83      	ldr	r3, [r0, #40]	@ 0x28
 800d130:	4604      	mov	r4, r0
 800d132:	b92b      	cbnz	r3, 800d140 <_ZN8touchgfx9Container6insertEPNS_8DrawableERS1_+0x14>
 800d134:	6803      	ldr	r3, [r0, #0]
 800d136:	f85d 4b04 	ldr.w	r4, [sp], #4
 800d13a:	6e1b      	ldr	r3, [r3, #96]	@ 0x60
 800d13c:	4611      	mov	r1, r2
 800d13e:	4718      	bx	r3
 800d140:	b941      	cbnz	r1, 800d154 <_ZN8touchgfx9Container6insertEPNS_8DrawableERS1_+0x28>
 800d142:	6193      	str	r3, [r2, #24]
 800d144:	6282      	str	r2, [r0, #40]	@ 0x28
 800d146:	6154      	str	r4, [r2, #20]
 800d148:	f85d 4b04 	ldr.w	r4, [sp], #4
 800d14c:	4770      	bx	lr
 800d14e:	4603      	mov	r3, r0
 800d150:	2800      	cmp	r0, #0
 800d152:	d0f9      	beq.n	800d148 <_ZN8touchgfx9Container6insertEPNS_8DrawableERS1_+0x1c>
 800d154:	4299      	cmp	r1, r3
 800d156:	6998      	ldr	r0, [r3, #24]
 800d158:	d1f9      	bne.n	800d14e <_ZN8touchgfx9Container6insertEPNS_8DrawableERS1_+0x22>
 800d15a:	6190      	str	r0, [r2, #24]
 800d15c:	618a      	str	r2, [r1, #24]
 800d15e:	e7f2      	b.n	800d146 <_ZN8touchgfx9Container6insertEPNS_8DrawableERS1_+0x1a>

0800d160 <_ZN8touchgfx9Container12getLastChildEssPPNS_8DrawableE>:
 800d160:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 800d164:	461f      	mov	r7, r3
 800d166:	f890 3024 	ldrb.w	r3, [r0, #36]	@ 0x24
 800d16a:	460d      	mov	r5, r1
 800d16c:	4616      	mov	r6, r2
 800d16e:	b103      	cbz	r3, 800d172 <_ZN8touchgfx9Container12getLastChildEssPPNS_8DrawableE+0x12>
 800d170:	6038      	str	r0, [r7, #0]
 800d172:	6a84      	ldr	r4, [r0, #40]	@ 0x28
 800d174:	b314      	cbz	r4, 800d1bc <_ZN8touchgfx9Container12getLastChildEssPPNS_8DrawableE+0x5c>
 800d176:	f894 3025 	ldrb.w	r3, [r4, #37]	@ 0x25
 800d17a:	b1eb      	cbz	r3, 800d1b8 <_ZN8touchgfx9Container12getLastChildEssPPNS_8DrawableE+0x58>
 800d17c:	f9b4 1004 	ldrsh.w	r1, [r4, #4]
 800d180:	428d      	cmp	r5, r1
 800d182:	db19      	blt.n	800d1b8 <_ZN8touchgfx9Container12getLastChildEssPPNS_8DrawableE+0x58>
 800d184:	8923      	ldrh	r3, [r4, #8]
 800d186:	b289      	uxth	r1, r1
 800d188:	440b      	add	r3, r1
 800d18a:	b21b      	sxth	r3, r3
 800d18c:	429d      	cmp	r5, r3
 800d18e:	da13      	bge.n	800d1b8 <_ZN8touchgfx9Container12getLastChildEssPPNS_8DrawableE+0x58>
 800d190:	f9b4 2006 	ldrsh.w	r2, [r4, #6]
 800d194:	4296      	cmp	r6, r2
 800d196:	db0f      	blt.n	800d1b8 <_ZN8touchgfx9Container12getLastChildEssPPNS_8DrawableE+0x58>
 800d198:	8963      	ldrh	r3, [r4, #10]
 800d19a:	b292      	uxth	r2, r2
 800d19c:	4413      	add	r3, r2
 800d19e:	b21b      	sxth	r3, r3
 800d1a0:	429e      	cmp	r6, r3
 800d1a2:	da09      	bge.n	800d1b8 <_ZN8touchgfx9Container12getLastChildEssPPNS_8DrawableE+0x58>
 800d1a4:	6823      	ldr	r3, [r4, #0]
 800d1a6:	1ab2      	subs	r2, r6, r2
 800d1a8:	1a69      	subs	r1, r5, r1
 800d1aa:	f8d3 8024 	ldr.w	r8, [r3, #36]	@ 0x24
 800d1ae:	b212      	sxth	r2, r2
 800d1b0:	463b      	mov	r3, r7
 800d1b2:	b209      	sxth	r1, r1
 800d1b4:	4620      	mov	r0, r4
 800d1b6:	47c0      	blx	r8
 800d1b8:	69a4      	ldr	r4, [r4, #24]
 800d1ba:	e7db      	b.n	800d174 <_ZN8touchgfx9Container12getLastChildEssPPNS_8DrawableE+0x14>
 800d1bc:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}

0800d1c0 <_ZN8touchgfx9Container16getLastChildNearEssPPNS_8DrawableEPsS4_>:
 800d1c0:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 800d1c4:	4c6e      	ldr	r4, [pc, #440]	@ (800d380 <_ZN8touchgfx9Container16getLastChildNearEssPPNS_8DrawableEPsS4_+0x1c0>)
 800d1c6:	b0a1      	sub	sp, #132	@ 0x84
 800d1c8:	6824      	ldr	r4, [r4, #0]
 800d1ca:	9d2a      	ldr	r5, [sp, #168]	@ 0xa8
 800d1cc:	f894 9049 	ldrb.w	r9, [r4, #73]	@ 0x49
 800d1d0:	9303      	str	r3, [sp, #12]
 800d1d2:	2400      	movs	r4, #0
 800d1d4:	802c      	strh	r4, [r5, #0]
 800d1d6:	9d2b      	ldr	r5, [sp, #172]	@ 0xac
 800d1d8:	802c      	strh	r4, [r5, #0]
 800d1da:	601c      	str	r4, [r3, #0]
 800d1dc:	4606      	mov	r6, r0
 800d1de:	e9cd 1201 	strd	r1, r2, [sp, #4]
 800d1e2:	f7ff ffbd 	bl	800d160 <_ZN8touchgfx9Container12getLastChildEssPPNS_8DrawableE>
 800d1e6:	f1b9 0f03 	cmp.w	r9, #3
 800d1ea:	f340 80c2 	ble.w	800d372 <_ZN8touchgfx9Container16getLastChildNearEssPPNS_8DrawableEPsS4_+0x1b2>
 800d1ee:	4631      	mov	r1, r6
 800d1f0:	a80c      	add	r0, sp, #48	@ 0x30
 800d1f2:	f004 fc59 	bl	8011aa8 <_ZNK8touchgfx8Drawable15getAbsoluteRectEv>
 800d1f6:	f9bd 3030 	ldrsh.w	r3, [sp, #48]	@ 0x30
 800d1fa:	9306      	str	r3, [sp, #24]
 800d1fc:	f9bd 3032 	ldrsh.w	r3, [sp, #50]	@ 0x32
 800d200:	9307      	str	r3, [sp, #28]
 800d202:	9b03      	ldr	r3, [sp, #12]
 800d204:	f8d3 a000 	ldr.w	sl, [r3]
 800d208:	f1ba 0f00 	cmp.w	sl, #0
 800d20c:	f000 80b4 	beq.w	800d378 <_ZN8touchgfx9Container16getLastChildNearEssPPNS_8DrawableEPsS4_+0x1b8>
 800d210:	4651      	mov	r1, sl
 800d212:	a810      	add	r0, sp, #64	@ 0x40
 800d214:	f004 fc48 	bl	8011aa8 <_ZNK8touchgfx8Drawable15getAbsoluteRectEv>
 800d218:	9b01      	ldr	r3, [sp, #4]
 800d21a:	9a06      	ldr	r2, [sp, #24]
 800d21c:	f9bd 1044 	ldrsh.w	r1, [sp, #68]	@ 0x44
 800d220:	189d      	adds	r5, r3, r2
 800d222:	f9bd 3040 	ldrsh.w	r3, [sp, #64]	@ 0x40
 800d226:	9a07      	ldr	r2, [sp, #28]
 800d228:	2002      	movs	r0, #2
 800d22a:	fb91 f1f0 	sdiv	r1, r1, r0
 800d22e:	4419      	add	r1, r3
 800d230:	1a6d      	subs	r5, r5, r1
 800d232:	9b02      	ldr	r3, [sp, #8]
 800d234:	f9bd 1042 	ldrsh.w	r1, [sp, #66]	@ 0x42
 800d238:	4413      	add	r3, r2
 800d23a:	f9bd 2046 	ldrsh.w	r2, [sp, #70]	@ 0x46
 800d23e:	fb92 f2f0 	sdiv	r2, r2, r0
 800d242:	440a      	add	r2, r1
 800d244:	1a9b      	subs	r3, r3, r2
 800d246:	435b      	muls	r3, r3
 800d248:	fb05 3505 	mla	r5, r5, r5, r3
 800d24c:	4f4d      	ldr	r7, [pc, #308]	@ (800d384 <_ZN8touchgfx9Container16getLastChildNearEssPPNS_8DrawableEPsS4_+0x1c4>)
 800d24e:	cf0f      	ldmia	r7!, {r0, r1, r2, r3}
 800d250:	ac10      	add	r4, sp, #64	@ 0x40
 800d252:	c40f      	stmia	r4!, {r0, r1, r2, r3}
 800d254:	cf0f      	ldmia	r7!, {r0, r1, r2, r3}
 800d256:	c40f      	stmia	r4!, {r0, r1, r2, r3}
 800d258:	cf0f      	ldmia	r7!, {r0, r1, r2, r3}
 800d25a:	c40f      	stmia	r4!, {r0, r1, r2, r3}
 800d25c:	e897 000f 	ldmia.w	r7, {r0, r1, r2, r3}
 800d260:	f1b9 0f0c 	cmp.w	r9, #12
 800d264:	e884 000f 	stmia.w	r4, {r0, r1, r2, r3}
 800d268:	f04f 0303 	mov.w	r3, #3
 800d26c:	bfc8      	it	gt
 800d26e:	4698      	movgt	r8, r3
 800d270:	f8cd 9000 	str.w	r9, [sp]
 800d274:	f04f 0400 	mov.w	r4, #0
 800d278:	bfdc      	itt	le
 800d27a:	f109 32ff 	addle.w	r2, r9, #4294967295
 800d27e:	fb92 f8f3 	sdivle	r8, r2, r3
 800d282:	1c63      	adds	r3, r4, #1
 800d284:	aa10      	add	r2, sp, #64	@ 0x40
 800d286:	f004 0401 	and.w	r4, r4, #1
 800d28a:	9308      	str	r3, [sp, #32]
 800d28c:	eb02 1444 	add.w	r4, r2, r4, lsl #5
 800d290:	9b00      	ldr	r3, [sp, #0]
 800d292:	fb93 f3f8 	sdiv	r3, r3, r8
 800d296:	b29b      	uxth	r3, r3
 800d298:	3404      	adds	r4, #4
 800d29a:	f04f 0b00 	mov.w	fp, #0
 800d29e:	9304      	str	r3, [sp, #16]
 800d2a0:	9a04      	ldr	r2, [sp, #16]
 800d2a2:	f854 3c04 	ldr.w	r3, [r4, #-4]
 800d2a6:	fb13 f302 	smulbb	r3, r3, r2
 800d2aa:	9a01      	ldr	r2, [sp, #4]
 800d2ac:	b29b      	uxth	r3, r3
 800d2ae:	1899      	adds	r1, r3, r2
 800d2b0:	9305      	str	r3, [sp, #20]
 800d2b2:	f9b6 3004 	ldrsh.w	r3, [r6, #4]
 800d2b6:	b209      	sxth	r1, r1
 800d2b8:	4299      	cmp	r1, r3
 800d2ba:	db4d      	blt.n	800d358 <_ZN8touchgfx9Container16getLastChildNearEssPPNS_8DrawableEPsS4_+0x198>
 800d2bc:	8932      	ldrh	r2, [r6, #8]
 800d2be:	4413      	add	r3, r2
 800d2c0:	b21b      	sxth	r3, r3
 800d2c2:	4299      	cmp	r1, r3
 800d2c4:	da48      	bge.n	800d358 <_ZN8touchgfx9Container16getLastChildNearEssPPNS_8DrawableEPsS4_+0x198>
 800d2c6:	9b04      	ldr	r3, [sp, #16]
 800d2c8:	6827      	ldr	r7, [r4, #0]
 800d2ca:	fb17 f703 	smulbb	r7, r7, r3
 800d2ce:	9b02      	ldr	r3, [sp, #8]
 800d2d0:	b2bf      	uxth	r7, r7
 800d2d2:	18fa      	adds	r2, r7, r3
 800d2d4:	f9b6 3006 	ldrsh.w	r3, [r6, #6]
 800d2d8:	b212      	sxth	r2, r2
 800d2da:	429a      	cmp	r2, r3
 800d2dc:	db3c      	blt.n	800d358 <_ZN8touchgfx9Container16getLastChildNearEssPPNS_8DrawableEPsS4_+0x198>
 800d2de:	8970      	ldrh	r0, [r6, #10]
 800d2e0:	4403      	add	r3, r0
 800d2e2:	b21b      	sxth	r3, r3
 800d2e4:	429a      	cmp	r2, r3
 800d2e6:	da37      	bge.n	800d358 <_ZN8touchgfx9Container16getLastChildNearEssPPNS_8DrawableEPsS4_+0x198>
 800d2e8:	2300      	movs	r3, #0
 800d2ea:	930b      	str	r3, [sp, #44]	@ 0x2c
 800d2ec:	4630      	mov	r0, r6
 800d2ee:	ab0b      	add	r3, sp, #44	@ 0x2c
 800d2f0:	f7ff ff36 	bl	800d160 <_ZN8touchgfx9Container12getLastChildEssPPNS_8DrawableE>
 800d2f4:	9a0b      	ldr	r2, [sp, #44]	@ 0x2c
 800d2f6:	b37a      	cbz	r2, 800d358 <_ZN8touchgfx9Container16getLastChildNearEssPPNS_8DrawableEPsS4_+0x198>
 800d2f8:	4552      	cmp	r2, sl
 800d2fa:	d02d      	beq.n	800d358 <_ZN8touchgfx9Container16getLastChildNearEssPPNS_8DrawableEPsS4_+0x198>
 800d2fc:	4611      	mov	r1, r2
 800d2fe:	a80e      	add	r0, sp, #56	@ 0x38
 800d300:	9209      	str	r2, [sp, #36]	@ 0x24
 800d302:	f004 fbd1 	bl	8011aa8 <_ZNK8touchgfx8Drawable15getAbsoluteRectEv>
 800d306:	9a06      	ldr	r2, [sp, #24]
 800d308:	f9bd 0038 	ldrsh.w	r0, [sp, #56]	@ 0x38
 800d30c:	9b01      	ldr	r3, [sp, #4]
 800d30e:	f9bd 103c 	ldrsh.w	r1, [sp, #60]	@ 0x3c
 800d312:	f9bd c03e 	ldrsh.w	ip, [sp, #62]	@ 0x3e
 800d316:	4413      	add	r3, r2
 800d318:	f04f 0e02 	mov.w	lr, #2
 800d31c:	fb91 f1fe 	sdiv	r1, r1, lr
 800d320:	4401      	add	r1, r0
 800d322:	1a58      	subs	r0, r3, r1
 800d324:	9a07      	ldr	r2, [sp, #28]
 800d326:	9b02      	ldr	r3, [sp, #8]
 800d328:	f9bd 103a 	ldrsh.w	r1, [sp, #58]	@ 0x3a
 800d32c:	fb9c fcfe 	sdiv	ip, ip, lr
 800d330:	4413      	add	r3, r2
 800d332:	448c      	add	ip, r1
 800d334:	eba3 030c 	sub.w	r3, r3, ip
 800d338:	435b      	muls	r3, r3
 800d33a:	fb00 3300 	mla	r3, r0, r0, r3
 800d33e:	42ab      	cmp	r3, r5
 800d340:	9a09      	ldr	r2, [sp, #36]	@ 0x24
 800d342:	d208      	bcs.n	800d356 <_ZN8touchgfx9Container16getLastChildNearEssPPNS_8DrawableEPsS4_+0x196>
 800d344:	9803      	ldr	r0, [sp, #12]
 800d346:	990b      	ldr	r1, [sp, #44]	@ 0x2c
 800d348:	6001      	str	r1, [r0, #0]
 800d34a:	992a      	ldr	r1, [sp, #168]	@ 0xa8
 800d34c:	9805      	ldr	r0, [sp, #20]
 800d34e:	8008      	strh	r0, [r1, #0]
 800d350:	992b      	ldr	r1, [sp, #172]	@ 0xac
 800d352:	461d      	mov	r5, r3
 800d354:	800f      	strh	r7, [r1, #0]
 800d356:	4692      	mov	sl, r2
 800d358:	f10b 0b01 	add.w	fp, fp, #1
 800d35c:	f1bb 0f04 	cmp.w	fp, #4
 800d360:	f104 0408 	add.w	r4, r4, #8
 800d364:	d19c      	bne.n	800d2a0 <_ZN8touchgfx9Container16getLastChildNearEssPPNS_8DrawableEPsS4_+0xe0>
 800d366:	9b00      	ldr	r3, [sp, #0]
 800d368:	9c08      	ldr	r4, [sp, #32]
 800d36a:	444b      	add	r3, r9
 800d36c:	4544      	cmp	r4, r8
 800d36e:	9300      	str	r3, [sp, #0]
 800d370:	d187      	bne.n	800d282 <_ZN8touchgfx9Container16getLastChildNearEssPPNS_8DrawableEPsS4_+0xc2>
 800d372:	b021      	add	sp, #132	@ 0x84
 800d374:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 800d378:	f04f 35ff 	mov.w	r5, #4294967295
 800d37c:	e766      	b.n	800d24c <_ZN8touchgfx9Container16getLastChildNearEssPPNS_8DrawableEPsS4_+0x8c>
 800d37e:	bf00      	nop
 800d380:	20002dbc 	.word	0x20002dbc
 800d384:	080244f8 	.word	0x080244f8

0800d388 <_ZN8touchgfx4RectaNERKS0_>:
 800d388:	e92d 43f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, lr}
 800d38c:	f9b1 7000 	ldrsh.w	r7, [r1]
 800d390:	888c      	ldrh	r4, [r1, #4]
 800d392:	f9b0 9000 	ldrsh.w	r9, [r0]
 800d396:	443c      	add	r4, r7
 800d398:	b2a4      	uxth	r4, r4
 800d39a:	fa0f f884 	sxth.w	r8, r4
 800d39e:	45c1      	cmp	r9, r8
 800d3a0:	da2f      	bge.n	800d402 <_ZN8touchgfx4RectaNERKS0_+0x7a>
 800d3a2:	8882      	ldrh	r2, [r0, #4]
 800d3a4:	444a      	add	r2, r9
 800d3a6:	b292      	uxth	r2, r2
 800d3a8:	fa0f fe82 	sxth.w	lr, r2
 800d3ac:	4577      	cmp	r7, lr
 800d3ae:	da28      	bge.n	800d402 <_ZN8touchgfx4RectaNERKS0_+0x7a>
 800d3b0:	f9b1 5002 	ldrsh.w	r5, [r1, #2]
 800d3b4:	88cb      	ldrh	r3, [r1, #6]
 800d3b6:	f9b0 6002 	ldrsh.w	r6, [r0, #2]
 800d3ba:	442b      	add	r3, r5
 800d3bc:	b21b      	sxth	r3, r3
 800d3be:	429e      	cmp	r6, r3
 800d3c0:	da1f      	bge.n	800d402 <_ZN8touchgfx4RectaNERKS0_+0x7a>
 800d3c2:	88c3      	ldrh	r3, [r0, #6]
 800d3c4:	4433      	add	r3, r6
 800d3c6:	b29b      	uxth	r3, r3
 800d3c8:	fa0f fc83 	sxth.w	ip, r3
 800d3cc:	4565      	cmp	r5, ip
 800d3ce:	da18      	bge.n	800d402 <_ZN8touchgfx4RectaNERKS0_+0x7a>
 800d3d0:	454f      	cmp	r7, r9
 800d3d2:	bfb8      	it	lt
 800d3d4:	464f      	movlt	r7, r9
 800d3d6:	42b5      	cmp	r5, r6
 800d3d8:	bfb8      	it	lt
 800d3da:	4635      	movlt	r5, r6
 800d3dc:	45f0      	cmp	r8, lr
 800d3de:	bfd8      	it	le
 800d3e0:	4622      	movle	r2, r4
 800d3e2:	1bd2      	subs	r2, r2, r7
 800d3e4:	8082      	strh	r2, [r0, #4]
 800d3e6:	884a      	ldrh	r2, [r1, #2]
 800d3e8:	88c9      	ldrh	r1, [r1, #6]
 800d3ea:	8007      	strh	r7, [r0, #0]
 800d3ec:	440a      	add	r2, r1
 800d3ee:	b292      	uxth	r2, r2
 800d3f0:	b211      	sxth	r1, r2
 800d3f2:	458c      	cmp	ip, r1
 800d3f4:	bfa8      	it	ge
 800d3f6:	4613      	movge	r3, r2
 800d3f8:	1b5b      	subs	r3, r3, r5
 800d3fa:	80c3      	strh	r3, [r0, #6]
 800d3fc:	8045      	strh	r5, [r0, #2]
 800d3fe:	e8bd 83f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, pc}
 800d402:	2300      	movs	r3, #0
 800d404:	8003      	strh	r3, [r0, #0]
 800d406:	8043      	strh	r3, [r0, #2]
 800d408:	8083      	strh	r3, [r0, #4]
 800d40a:	80c3      	strh	r3, [r0, #6]
 800d40c:	e7f7      	b.n	800d3fe <_ZN8touchgfx4RectaNERKS0_+0x76>

0800d40e <_ZNK8touchgfx4Rect7isEmptyEv>:
 800d40e:	f9b0 3004 	ldrsh.w	r3, [r0, #4]
 800d412:	2b00      	cmp	r3, #0
 800d414:	dd06      	ble.n	800d424 <_ZNK8touchgfx4Rect7isEmptyEv+0x16>
 800d416:	f9b0 0006 	ldrsh.w	r0, [r0, #6]
 800d41a:	2800      	cmp	r0, #0
 800d41c:	bfcc      	ite	gt
 800d41e:	2000      	movgt	r0, #0
 800d420:	2001      	movle	r0, #1
 800d422:	4770      	bx	lr
 800d424:	2001      	movs	r0, #1
 800d426:	4770      	bx	lr

0800d428 <_ZNK8touchgfx9Container16getContainedAreaEv>:
 800d428:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 800d42c:	2300      	movs	r3, #0
 800d42e:	6a8d      	ldr	r5, [r1, #40]	@ 0x28
 800d430:	8003      	strh	r3, [r0, #0]
 800d432:	4604      	mov	r4, r0
 800d434:	8043      	strh	r3, [r0, #2]
 800d436:	8083      	strh	r3, [r0, #4]
 800d438:	80c3      	strh	r3, [r0, #6]
 800d43a:	2d00      	cmp	r5, #0
 800d43c:	d040      	beq.n	800d4c0 <_ZNK8touchgfx9Container16getContainedAreaEv+0x98>
 800d43e:	1d28      	adds	r0, r5, #4
 800d440:	f7ff ffe5 	bl	800d40e <_ZNK8touchgfx4Rect7isEmptyEv>
 800d444:	b988      	cbnz	r0, 800d46a <_ZNK8touchgfx9Container16getContainedAreaEv+0x42>
 800d446:	4620      	mov	r0, r4
 800d448:	f7ff ffe1 	bl	800d40e <_ZNK8touchgfx4Rect7isEmptyEv>
 800d44c:	f9b5 2004 	ldrsh.w	r2, [r5, #4]
 800d450:	f9b5 3006 	ldrsh.w	r3, [r5, #6]
 800d454:	f9b5 e008 	ldrsh.w	lr, [r5, #8]
 800d458:	f9b5 c00a 	ldrsh.w	ip, [r5, #10]
 800d45c:	b138      	cbz	r0, 800d46e <_ZNK8touchgfx9Container16getContainedAreaEv+0x46>
 800d45e:	8022      	strh	r2, [r4, #0]
 800d460:	8063      	strh	r3, [r4, #2]
 800d462:	f8a4 e004 	strh.w	lr, [r4, #4]
 800d466:	f8a4 c006 	strh.w	ip, [r4, #6]
 800d46a:	69ad      	ldr	r5, [r5, #24]
 800d46c:	e7e5      	b.n	800d43a <_ZNK8touchgfx9Container16getContainedAreaEv+0x12>
 800d46e:	f9b4 0000 	ldrsh.w	r0, [r4]
 800d472:	f9b4 1002 	ldrsh.w	r1, [r4, #2]
 800d476:	f8b4 8004 	ldrh.w	r8, [r4, #4]
 800d47a:	4290      	cmp	r0, r2
 800d47c:	4607      	mov	r7, r0
 800d47e:	bfa8      	it	ge
 800d480:	4617      	movge	r7, r2
 800d482:	4472      	add	r2, lr
 800d484:	f8b4 e006 	ldrh.w	lr, [r4, #6]
 800d488:	8027      	strh	r7, [r4, #0]
 800d48a:	4299      	cmp	r1, r3
 800d48c:	460e      	mov	r6, r1
 800d48e:	4440      	add	r0, r8
 800d490:	bfa8      	it	ge
 800d492:	461e      	movge	r6, r3
 800d494:	4471      	add	r1, lr
 800d496:	4463      	add	r3, ip
 800d498:	b200      	sxth	r0, r0
 800d49a:	b212      	sxth	r2, r2
 800d49c:	b209      	sxth	r1, r1
 800d49e:	b21b      	sxth	r3, r3
 800d4a0:	4290      	cmp	r0, r2
 800d4a2:	bfac      	ite	ge
 800d4a4:	ebc7 0200 	rsbge	r2, r7, r0
 800d4a8:	ebc7 0202 	rsblt	r2, r7, r2
 800d4ac:	4299      	cmp	r1, r3
 800d4ae:	bfac      	ite	ge
 800d4b0:	ebc6 0301 	rsbge	r3, r6, r1
 800d4b4:	ebc6 0303 	rsblt	r3, r6, r3
 800d4b8:	8066      	strh	r6, [r4, #2]
 800d4ba:	80a2      	strh	r2, [r4, #4]
 800d4bc:	80e3      	strh	r3, [r4, #6]
 800d4be:	e7d4      	b.n	800d46a <_ZNK8touchgfx9Container16getContainedAreaEv+0x42>
 800d4c0:	4620      	mov	r0, r4
 800d4c2:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}

0800d4c6 <_ZNK8touchgfx9Container4drawERKNS_4RectE>:
 800d4c6:	e92d 41f3 	stmdb	sp!, {r0, r1, r4, r5, r6, r7, r8, lr}
 800d4ca:	f890 3025 	ldrb.w	r3, [r0, #37]	@ 0x25
 800d4ce:	b383      	cbz	r3, 800d532 <_ZNK8touchgfx9Container4drawERKNS_4RectE+0x6c>
 800d4d0:	6a84      	ldr	r4, [r0, #40]	@ 0x28
 800d4d2:	b374      	cbz	r4, 800d532 <_ZNK8touchgfx9Container4drawERKNS_4RectE+0x6c>
 800d4d4:	f9b1 5000 	ldrsh.w	r5, [r1]
 800d4d8:	f9b1 6002 	ldrsh.w	r6, [r1, #2]
 800d4dc:	f9b1 7004 	ldrsh.w	r7, [r1, #4]
 800d4e0:	f9b1 8006 	ldrsh.w	r8, [r1, #6]
 800d4e4:	f894 3025 	ldrb.w	r3, [r4, #37]	@ 0x25
 800d4e8:	b303      	cbz	r3, 800d52c <_ZNK8touchgfx9Container4drawERKNS_4RectE+0x66>
 800d4ea:	4668      	mov	r0, sp
 800d4ec:	1d21      	adds	r1, r4, #4
 800d4ee:	f8ad 5000 	strh.w	r5, [sp]
 800d4f2:	f8ad 6002 	strh.w	r6, [sp, #2]
 800d4f6:	f8ad 7004 	strh.w	r7, [sp, #4]
 800d4fa:	f8ad 8006 	strh.w	r8, [sp, #6]
 800d4fe:	f7ff ff43 	bl	800d388 <_ZN8touchgfx4RectaNERKS0_>
 800d502:	4668      	mov	r0, sp
 800d504:	f7ff ff83 	bl	800d40e <_ZNK8touchgfx4Rect7isEmptyEv>
 800d508:	b980      	cbnz	r0, 800d52c <_ZNK8touchgfx9Container4drawERKNS_4RectE+0x66>
 800d50a:	f8bd 3000 	ldrh.w	r3, [sp]
 800d50e:	88a2      	ldrh	r2, [r4, #4]
 800d510:	1a9b      	subs	r3, r3, r2
 800d512:	f8ad 3000 	strh.w	r3, [sp]
 800d516:	88e2      	ldrh	r2, [r4, #6]
 800d518:	f8bd 3002 	ldrh.w	r3, [sp, #2]
 800d51c:	1a9b      	subs	r3, r3, r2
 800d51e:	f8ad 3002 	strh.w	r3, [sp, #2]
 800d522:	6823      	ldr	r3, [r4, #0]
 800d524:	4669      	mov	r1, sp
 800d526:	689b      	ldr	r3, [r3, #8]
 800d528:	4620      	mov	r0, r4
 800d52a:	4798      	blx	r3
 800d52c:	69a4      	ldr	r4, [r4, #24]
 800d52e:	2c00      	cmp	r4, #0
 800d530:	d1d8      	bne.n	800d4e4 <_ZNK8touchgfx9Container4drawERKNS_4RectE+0x1e>
 800d532:	b002      	add	sp, #8
 800d534:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}

0800d538 <_ZN8touchgfx9Container14setupDrawChainERKNS_4RectEPPNS_8DrawableE>:
 800d538:	b573      	push	{r0, r1, r4, r5, r6, lr}
 800d53a:	f890 3025 	ldrb.w	r3, [r0, #37]	@ 0x25
 800d53e:	460d      	mov	r5, r1
 800d540:	4616      	mov	r6, r2
 800d542:	b323      	cbz	r3, 800d58e <_ZN8touchgfx9Container14setupDrawChainERKNS_4RectEPPNS_8DrawableE+0x56>
 800d544:	6a84      	ldr	r4, [r0, #40]	@ 0x28
 800d546:	b314      	cbz	r4, 800d58e <_ZN8touchgfx9Container14setupDrawChainERKNS_4RectEPPNS_8DrawableE+0x56>
 800d548:	f894 3025 	ldrb.w	r3, [r4, #37]	@ 0x25
 800d54c:	b1eb      	cbz	r3, 800d58a <_ZN8touchgfx9Container14setupDrawChainERKNS_4RectEPPNS_8DrawableE+0x52>
 800d54e:	6828      	ldr	r0, [r5, #0]
 800d550:	6869      	ldr	r1, [r5, #4]
 800d552:	466b      	mov	r3, sp
 800d554:	c303      	stmia	r3!, {r0, r1}
 800d556:	4668      	mov	r0, sp
 800d558:	1d21      	adds	r1, r4, #4
 800d55a:	f7ff ff15 	bl	800d388 <_ZN8touchgfx4RectaNERKS0_>
 800d55e:	4668      	mov	r0, sp
 800d560:	f7ff ff55 	bl	800d40e <_ZNK8touchgfx4Rect7isEmptyEv>
 800d564:	b988      	cbnz	r0, 800d58a <_ZN8touchgfx9Container14setupDrawChainERKNS_4RectEPPNS_8DrawableE+0x52>
 800d566:	f8bd 3000 	ldrh.w	r3, [sp]
 800d56a:	88a2      	ldrh	r2, [r4, #4]
 800d56c:	1a9b      	subs	r3, r3, r2
 800d56e:	f8ad 3000 	strh.w	r3, [sp]
 800d572:	88e2      	ldrh	r2, [r4, #6]
 800d574:	f8bd 3002 	ldrh.w	r3, [sp, #2]
 800d578:	1a9b      	subs	r3, r3, r2
 800d57a:	f8ad 3002 	strh.w	r3, [sp, #2]
 800d57e:	6823      	ldr	r3, [r4, #0]
 800d580:	4632      	mov	r2, r6
 800d582:	6ddb      	ldr	r3, [r3, #92]	@ 0x5c
 800d584:	4669      	mov	r1, sp
 800d586:	4620      	mov	r0, r4
 800d588:	4798      	blx	r3
 800d58a:	69a4      	ldr	r4, [r4, #24]
 800d58c:	e7db      	b.n	800d546 <_ZN8touchgfx9Container14setupDrawChainERKNS_4RectEPPNS_8DrawableE+0xe>
 800d58e:	b002      	add	sp, #8
 800d590:	bd70      	pop	{r4, r5, r6, pc}

0800d592 <_ZN8touchgfx3HAL27drawDrawableInDynamicBitmapERNS_8DrawableEt>:
 800d592:	b513      	push	{r0, r1, r4, lr}
 800d594:	6803      	ldr	r3, [r0, #0]
 800d596:	f8d3 40a8 	ldr.w	r4, [r3, #168]	@ 0xa8
 800d59a:	2300      	movs	r3, #0
 800d59c:	e9cd 3300 	strd	r3, r3, [sp]
 800d5a0:	466b      	mov	r3, sp
 800d5a2:	47a0      	blx	r4
 800d5a4:	b002      	add	sp, #8
 800d5a6:	bd10      	pop	{r4, pc}

0800d5a8 <_ZN8touchgfx3HAL16flushFrameBufferEv>:
 800d5a8:	2301      	movs	r3, #1
 800d5aa:	f880 304b 	strb.w	r3, [r0, #75]	@ 0x4b
 800d5ae:	f880 306d 	strb.w	r3, [r0, #109]	@ 0x6d
 800d5b2:	4770      	bx	lr

0800d5b4 <_ZN8touchgfx3HAL16flushFrameBufferERKNS_4RectE>:
 800d5b4:	2301      	movs	r3, #1
 800d5b6:	f880 304b 	strb.w	r3, [r0, #75]	@ 0x4b
 800d5ba:	f880 306d 	strb.w	r3, [r0, #109]	@ 0x6d
 800d5be:	4770      	bx	lr

0800d5c0 <_ZN8touchgfx3HAL17allowDMATransfersEv>:
 800d5c0:	6843      	ldr	r3, [r0, #4]
 800d5c2:	2201      	movs	r2, #1
 800d5c4:	725a      	strb	r2, [r3, #9]
 800d5c6:	6840      	ldr	r0, [r0, #4]
 800d5c8:	6803      	ldr	r3, [r0, #0]
 800d5ca:	691b      	ldr	r3, [r3, #16]
 800d5cc:	4718      	bx	r3

0800d5ce <_ZN8touchgfx3HAL8flushDMAEv>:
 800d5ce:	6840      	ldr	r0, [r0, #4]
 800d5d0:	6803      	ldr	r3, [r0, #0]
 800d5d2:	689b      	ldr	r3, [r3, #8]
 800d5d4:	4718      	bx	r3

0800d5d6 <_ZN8touchgfx3HAL8blitCopyEPKtttttthbtNS_6Bitmap12BitmapFormatES4_b>:
 800d5d6:	b530      	push	{r4, r5, lr}
 800d5d8:	b08b      	sub	sp, #44	@ 0x2c
 800d5da:	6804      	ldr	r4, [r0, #0]
 800d5dc:	f89d 5058 	ldrb.w	r5, [sp, #88]	@ 0x58
 800d5e0:	9509      	str	r5, [sp, #36]	@ 0x24
 800d5e2:	f89d 5054 	ldrb.w	r5, [sp, #84]	@ 0x54
 800d5e6:	9508      	str	r5, [sp, #32]
 800d5e8:	f89d 5050 	ldrb.w	r5, [sp, #80]	@ 0x50
 800d5ec:	9507      	str	r5, [sp, #28]
 800d5ee:	f8bd 504c 	ldrh.w	r5, [sp, #76]	@ 0x4c
 800d5f2:	9506      	str	r5, [sp, #24]
 800d5f4:	f89d 5048 	ldrb.w	r5, [sp, #72]	@ 0x48
 800d5f8:	9505      	str	r5, [sp, #20]
 800d5fa:	f89d 5044 	ldrb.w	r5, [sp, #68]	@ 0x44
 800d5fe:	9504      	str	r5, [sp, #16]
 800d600:	f8bd 5040 	ldrh.w	r5, [sp, #64]	@ 0x40
 800d604:	9503      	str	r5, [sp, #12]
 800d606:	f8bd 503c 	ldrh.w	r5, [sp, #60]	@ 0x3c
 800d60a:	9502      	str	r5, [sp, #8]
 800d60c:	f8bd 5038 	ldrh.w	r5, [sp, #56]	@ 0x38
 800d610:	e9cd 3500 	strd	r3, r5, [sp]
 800d614:	4613      	mov	r3, r2
 800d616:	6be4      	ldr	r4, [r4, #60]	@ 0x3c
 800d618:	2200      	movs	r2, #0
 800d61a:	47a0      	blx	r4
 800d61c:	b00b      	add	sp, #44	@ 0x2c
 800d61e:	bd30      	pop	{r4, r5, pc}

0800d620 <_ZN8touchgfx3HAL10beginFrameEv>:
 800d620:	4b04      	ldr	r3, [pc, #16]	@ (800d634 <_ZN8touchgfx3HAL10beginFrameEv+0x14>)
 800d622:	781b      	ldrb	r3, [r3, #0]
 800d624:	b123      	cbz	r3, 800d630 <_ZN8touchgfx3HAL10beginFrameEv+0x10>
 800d626:	f890 006e 	ldrb.w	r0, [r0, #110]	@ 0x6e
 800d62a:	f080 0001 	eor.w	r0, r0, #1
 800d62e:	4770      	bx	lr
 800d630:	2001      	movs	r0, #1
 800d632:	4770      	bx	lr
 800d634:	20002dba 	.word	0x20002dba

0800d638 <_ZN8touchgfx3HAL8endFrameEv>:
 800d638:	b510      	push	{r4, lr}
 800d63a:	4604      	mov	r4, r0
 800d63c:	6840      	ldr	r0, [r0, #4]
 800d63e:	6803      	ldr	r3, [r0, #0]
 800d640:	689b      	ldr	r3, [r3, #8]
 800d642:	4798      	blx	r3
 800d644:	f894 306d 	ldrb.w	r3, [r4, #109]	@ 0x6d
 800d648:	b113      	cbz	r3, 800d650 <_ZN8touchgfx3HAL8endFrameEv+0x18>
 800d64a:	2301      	movs	r3, #1
 800d64c:	f884 306e 	strb.w	r3, [r4, #110]	@ 0x6e
 800d650:	bd10      	pop	{r4, pc}

0800d652 <_ZN8touchgfx3HAL10initializeEv>:
 800d652:	b510      	push	{r4, lr}
 800d654:	4604      	mov	r4, r0
 800d656:	f7fe f80b 	bl	800b670 <_ZN8touchgfx10OSWrappers10initializeEv>
 800d65a:	f7fd fd51 	bl	800b100 <_ZN8touchgfx4GPIO4initEv>
 800d65e:	6860      	ldr	r0, [r4, #4]
 800d660:	6803      	ldr	r3, [r0, #0]
 800d662:	68db      	ldr	r3, [r3, #12]
 800d664:	4798      	blx	r3
 800d666:	68e0      	ldr	r0, [r4, #12]
 800d668:	6803      	ldr	r3, [r0, #0]
 800d66a:	689b      	ldr	r3, [r3, #8]
 800d66c:	4798      	blx	r3
 800d66e:	6823      	ldr	r3, [r4, #0]
 800d670:	4620      	mov	r0, r4
 800d672:	6f5b      	ldr	r3, [r3, #116]	@ 0x74
 800d674:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
 800d678:	4718      	bx	r3

0800d67a <_ZN8touchgfx3HAL9taskEntryEv>:
 800d67a:	b508      	push	{r3, lr}
 800d67c:	6803      	ldr	r3, [r0, #0]
 800d67e:	4604      	mov	r4, r0
 800d680:	f8d3 3080 	ldr.w	r3, [r3, #128]	@ 0x80
 800d684:	4798      	blx	r3
 800d686:	6823      	ldr	r3, [r4, #0]
 800d688:	6f9b      	ldr	r3, [r3, #120]	@ 0x78
 800d68a:	4620      	mov	r0, r4
 800d68c:	4798      	blx	r3
 800d68e:	f7fe f863 	bl	800b758 <_ZN8touchgfx10OSWrappers12waitForVSyncEv>
 800d692:	6823      	ldr	r3, [r4, #0]
 800d694:	6f1b      	ldr	r3, [r3, #112]	@ 0x70
 800d696:	e7f8      	b.n	800d68a <_ZN8touchgfx3HAL9taskEntryEv+0x10>

0800d698 <_ZN8touchgfx3HAL4tickEv>:
 800d698:	b57f      	push	{r0, r1, r2, r3, r4, r5, r6, lr}
 800d69a:	6803      	ldr	r3, [r0, #0]
 800d69c:	4d5b      	ldr	r5, [pc, #364]	@ (800d80c <_ZN8touchgfx3HAL4tickEv+0x174>)
 800d69e:	f8d3 30b0 	ldr.w	r3, [r3, #176]	@ 0xb0
 800d6a2:	4604      	mov	r4, r0
 800d6a4:	4798      	blx	r3
 800d6a6:	2800      	cmp	r0, #0
 800d6a8:	f000 8095 	beq.w	800d7d6 <_ZN8touchgfx3HAL4tickEv+0x13e>
 800d6ac:	2001      	movs	r0, #1
 800d6ae:	f7fd fd2f 	bl	800b110 <_ZN8touchgfx4GPIO3setENS0_7GPIO_IDE>
 800d6b2:	f894 306a 	ldrb.w	r3, [r4, #106]	@ 0x6a
 800d6b6:	f884 306b 	strb.w	r3, [r4, #107]	@ 0x6b
 800d6ba:	f894 3079 	ldrb.w	r3, [r4, #121]	@ 0x79
 800d6be:	2600      	movs	r6, #0
 800d6c0:	f884 606a 	strb.w	r6, [r4, #106]	@ 0x6a
 800d6c4:	f884 604b 	strb.w	r6, [r4, #75]	@ 0x4b
 800d6c8:	b133      	cbz	r3, 800d6d8 <_ZN8touchgfx3HAL4tickEv+0x40>
 800d6ca:	6823      	ldr	r3, [r4, #0]
 800d6cc:	4620      	mov	r0, r4
 800d6ce:	f8d3 30c4 	ldr.w	r3, [r3, #196]	@ 0xc4
 800d6d2:	4798      	blx	r3
 800d6d4:	f884 6079 	strb.w	r6, [r4, #121]	@ 0x79
 800d6d8:	f894 304a 	ldrb.w	r3, [r4, #74]	@ 0x4a
 800d6dc:	6862      	ldr	r2, [r4, #4]
 800d6de:	f083 0301 	eor.w	r3, r3, #1
 800d6e2:	7253      	strb	r3, [r2, #9]
 800d6e4:	2601      	movs	r6, #1
 800d6e6:	702e      	strb	r6, [r5, #0]
 800d6e8:	f003 f8cc 	bl	8010884 <_ZN8touchgfx11Application11getInstanceEv>
 800d6ec:	6803      	ldr	r3, [r0, #0]
 800d6ee:	6b5b      	ldr	r3, [r3, #52]	@ 0x34
 800d6f0:	4798      	blx	r3
 800d6f2:	f894 306b 	ldrb.w	r3, [r4, #107]	@ 0x6b
 800d6f6:	b90b      	cbnz	r3, 800d6fc <_ZN8touchgfx3HAL4tickEv+0x64>
 800d6f8:	f884 606b 	strb.w	r6, [r4, #107]	@ 0x6b
 800d6fc:	f003 f8c2 	bl	8010884 <_ZN8touchgfx11Application11getInstanceEv>
 800d700:	6803      	ldr	r3, [r0, #0]
 800d702:	695b      	ldr	r3, [r3, #20]
 800d704:	4798      	blx	r3
 800d706:	6de0      	ldr	r0, [r4, #92]	@ 0x5c
 800d708:	6803      	ldr	r3, [r0, #0]
 800d70a:	691b      	ldr	r3, [r3, #16]
 800d70c:	4798      	blx	r3
 800d70e:	f894 306b 	ldrb.w	r3, [r4, #107]	@ 0x6b
 800d712:	f894 206c 	ldrb.w	r2, [r4, #108]	@ 0x6c
 800d716:	3b01      	subs	r3, #1
 800d718:	b2db      	uxtb	r3, r3
 800d71a:	f884 306b 	strb.w	r3, [r4, #107]	@ 0x6b
 800d71e:	b10a      	cbz	r2, 800d724 <_ZN8touchgfx3HAL4tickEv+0x8c>
 800d720:	2b00      	cmp	r3, #0
 800d722:	d1eb      	bne.n	800d6fc <_ZN8touchgfx3HAL4tickEv+0x64>
 800d724:	4a3a      	ldr	r2, [pc, #232]	@ (800d810 <_ZN8touchgfx3HAL4tickEv+0x178>)
 800d726:	f994 1068 	ldrsb.w	r1, [r4, #104]	@ 0x68
 800d72a:	7813      	ldrb	r3, [r2, #0]
 800d72c:	3301      	adds	r3, #1
 800d72e:	b25b      	sxtb	r3, r3
 800d730:	4299      	cmp	r1, r3
 800d732:	7013      	strb	r3, [r2, #0]
 800d734:	dc10      	bgt.n	800d758 <_ZN8touchgfx3HAL4tickEv+0xc0>
 800d736:	68e0      	ldr	r0, [r4, #12]
 800d738:	2300      	movs	r3, #0
 800d73a:	7013      	strb	r3, [r2, #0]
 800d73c:	6803      	ldr	r3, [r0, #0]
 800d73e:	aa03      	add	r2, sp, #12
 800d740:	68db      	ldr	r3, [r3, #12]
 800d742:	a902      	add	r1, sp, #8
 800d744:	4798      	blx	r3
 800d746:	6823      	ldr	r3, [r4, #0]
 800d748:	2800      	cmp	r0, #0
 800d74a:	d050      	beq.n	800d7ee <_ZN8touchgfx3HAL4tickEv+0x156>
 800d74c:	f8d3 30bc 	ldr.w	r3, [r3, #188]	@ 0xbc
 800d750:	e9dd 1202 	ldrd	r1, r2, [sp, #8]
 800d754:	4620      	mov	r0, r4
 800d756:	4798      	blx	r3
 800d758:	6960      	ldr	r0, [r4, #20]
 800d75a:	2300      	movs	r3, #0
 800d75c:	f88d 3007 	strb.w	r3, [sp, #7]
 800d760:	b158      	cbz	r0, 800d77a <_ZN8touchgfx3HAL4tickEv+0xe2>
 800d762:	6803      	ldr	r3, [r0, #0]
 800d764:	f10d 0107 	add.w	r1, sp, #7
 800d768:	68db      	ldr	r3, [r3, #12]
 800d76a:	4798      	blx	r3
 800d76c:	b128      	cbz	r0, 800d77a <_ZN8touchgfx3HAL4tickEv+0xe2>
 800d76e:	6de0      	ldr	r0, [r4, #92]	@ 0x5c
 800d770:	f89d 1007 	ldrb.w	r1, [sp, #7]
 800d774:	6803      	ldr	r3, [r0, #0]
 800d776:	68db      	ldr	r3, [r3, #12]
 800d778:	4798      	blx	r3
 800d77a:	f104 001c 	add.w	r0, r4, #28
 800d77e:	f014 fd25 	bl	80221cc <_ZN8touchgfx8Gestures4tickEv>
 800d782:	f894 3070 	ldrb.w	r3, [r4, #112]	@ 0x70
 800d786:	b30b      	cbz	r3, 800d7cc <_ZN8touchgfx3HAL4tickEv+0x134>
 800d788:	6920      	ldr	r0, [r4, #16]
 800d78a:	6803      	ldr	r3, [r0, #0]
 800d78c:	691b      	ldr	r3, [r3, #16]
 800d78e:	4798      	blx	r3
 800d790:	6f63      	ldr	r3, [r4, #116]	@ 0x74
 800d792:	4606      	mov	r6, r0
 800d794:	b903      	cbnz	r3, 800d798 <_ZN8touchgfx3HAL4tickEv+0x100>
 800d796:	6760      	str	r0, [r4, #116]	@ 0x74
 800d798:	6f63      	ldr	r3, [r4, #116]	@ 0x74
 800d79a:	4a1e      	ldr	r2, [pc, #120]	@ (800d814 <_ZN8touchgfx3HAL4tickEv+0x17c>)
 800d79c:	1af3      	subs	r3, r6, r3
 800d79e:	4293      	cmp	r3, r2
 800d7a0:	d914      	bls.n	800d7cc <_ZN8touchgfx3HAL4tickEv+0x134>
 800d7a2:	6920      	ldr	r0, [r4, #16]
 800d7a4:	6803      	ldr	r3, [r0, #0]
 800d7a6:	699b      	ldr	r3, [r3, #24]
 800d7a8:	4798      	blx	r3
 800d7aa:	6f63      	ldr	r3, [r4, #116]	@ 0x74
 800d7ac:	2264      	movs	r2, #100	@ 0x64
 800d7ae:	1af3      	subs	r3, r6, r3
 800d7b0:	fbb3 f3f2 	udiv	r3, r3, r2
 800d7b4:	fbb0 f0f3 	udiv	r0, r0, r3
 800d7b8:	2800      	cmp	r0, #0
 800d7ba:	dc1d      	bgt.n	800d7f8 <_ZN8touchgfx3HAL4tickEv+0x160>
 800d7bc:	f884 2069 	strb.w	r2, [r4, #105]	@ 0x69
 800d7c0:	6920      	ldr	r0, [r4, #16]
 800d7c2:	6803      	ldr	r3, [r0, #0]
 800d7c4:	2100      	movs	r1, #0
 800d7c6:	69db      	ldr	r3, [r3, #28]
 800d7c8:	4798      	blx	r3
 800d7ca:	6766      	str	r6, [r4, #116]	@ 0x74
 800d7cc:	f003 f85a 	bl	8010884 <_ZN8touchgfx11Application11getInstanceEv>
 800d7d0:	6803      	ldr	r3, [r0, #0]
 800d7d2:	6b9b      	ldr	r3, [r3, #56]	@ 0x38
 800d7d4:	4798      	blx	r3
 800d7d6:	6823      	ldr	r3, [r4, #0]
 800d7d8:	4620      	mov	r0, r4
 800d7da:	f8d3 30b4 	ldr.w	r3, [r3, #180]	@ 0xb4
 800d7de:	4798      	blx	r3
 800d7e0:	2001      	movs	r0, #1
 800d7e2:	f7fd fcb1 	bl	800b148 <_ZN8touchgfx4GPIO5clearENS0_7GPIO_IDE>
 800d7e6:	2300      	movs	r3, #0
 800d7e8:	702b      	strb	r3, [r5, #0]
 800d7ea:	b004      	add	sp, #16
 800d7ec:	bd70      	pop	{r4, r5, r6, pc}
 800d7ee:	f8d3 30c0 	ldr.w	r3, [r3, #192]	@ 0xc0
 800d7f2:	4620      	mov	r0, r4
 800d7f4:	4798      	blx	r3
 800d7f6:	e7af      	b.n	800d758 <_ZN8touchgfx3HAL4tickEv+0xc0>
 800d7f8:	2863      	cmp	r0, #99	@ 0x63
 800d7fa:	bfcb      	itete	gt
 800d7fc:	2300      	movgt	r3, #0
 800d7fe:	f1c0 0064 	rsble	r0, r0, #100	@ 0x64
 800d802:	f884 3069 	strbgt.w	r3, [r4, #105]	@ 0x69
 800d806:	f884 0069 	strble.w	r0, [r4, #105]	@ 0x69
 800d80a:	e7d9      	b.n	800d7c0 <_ZN8touchgfx3HAL4tickEv+0x128>
 800d80c:	20002dc0 	.word	0x20002dc0
 800d810:	20002dc1 	.word	0x20002dc1
 800d814:	05f5e100 	.word	0x05f5e100

0800d818 <_ZN8touchgfx3HAL17unlockFrameBufferEv>:
 800d818:	b510      	push	{r4, lr}
 800d81a:	4604      	mov	r4, r0
 800d81c:	f7fd ff50 	bl	800b6c0 <_ZN8touchgfx10OSWrappers24giveFrameBufferSemaphoreEv>
 800d820:	6863      	ldr	r3, [r4, #4]
 800d822:	2200      	movs	r2, #0
 800d824:	729a      	strb	r2, [r3, #10]
 800d826:	bd10      	pop	{r4, pc}

0800d828 <_ZN8touchgfx3HAL21registerEventListenerERNS_15UIEventListenerE>:
 800d828:	65c1      	str	r1, [r0, #92]	@ 0x5c
 800d82a:	301c      	adds	r0, #28
 800d82c:	f014 bccc 	b.w	80221c8 <_ZN8touchgfx8Gestures21registerEventListenerERNS_15UIEventListenerE>

0800d830 <_ZN8touchgfx3HAL5touchEll>:
 800d830:	b530      	push	{r4, r5, lr}
 800d832:	b087      	sub	sp, #28
 800d834:	4604      	mov	r4, r0
 800d836:	a804      	add	r0, sp, #16
 800d838:	e9cd 1204 	strd	r1, r2, [sp, #16]
 800d83c:	f002 fe14 	bl	8010468 <_ZN8touchgfx16TouchCalibration14translatePointERNS_5PointE>
 800d840:	9b04      	ldr	r3, [sp, #16]
 800d842:	f8ad 300c 	strh.w	r3, [sp, #12]
 800d846:	a906      	add	r1, sp, #24
 800d848:	9b05      	ldr	r3, [sp, #20]
 800d84a:	f821 3d0a 	strh.w	r3, [r1, #-10]!
 800d84e:	a803      	add	r0, sp, #12
 800d850:	f002 fe5c 	bl	801050c <_ZN8touchgfx21DisplayTransformation29transformFrameBufferToDisplayERsS1_>
 800d854:	f894 106f 	ldrb.w	r1, [r4, #111]	@ 0x6f
 800d858:	f8bd 200c 	ldrh.w	r2, [sp, #12]
 800d85c:	f8bd 300e 	ldrh.w	r3, [sp, #14]
 800d860:	f104 001c 	add.w	r0, r4, #28
 800d864:	b189      	cbz	r1, 800d88a <_ZN8touchgfx3HAL5touchEll+0x5a>
 800d866:	f8b4 5064 	ldrh.w	r5, [r4, #100]	@ 0x64
 800d86a:	9300      	str	r3, [sp, #0]
 800d86c:	f8b4 1060 	ldrh.w	r1, [r4, #96]	@ 0x60
 800d870:	4613      	mov	r3, r2
 800d872:	462a      	mov	r2, r5
 800d874:	f014 fcb8 	bl	80221e8 <_ZN8touchgfx8Gestures17registerDragEventEtttt>
 800d878:	b128      	cbz	r0, 800d886 <_ZN8touchgfx3HAL5touchEll+0x56>
 800d87a:	f9bd 300c 	ldrsh.w	r3, [sp, #12]
 800d87e:	6623      	str	r3, [r4, #96]	@ 0x60
 800d880:	f9bd 300e 	ldrsh.w	r3, [sp, #14]
 800d884:	6663      	str	r3, [r4, #100]	@ 0x64
 800d886:	b007      	add	sp, #28
 800d888:	bd30      	pop	{r4, r5, pc}
 800d88a:	f014 fced 	bl	8022268 <_ZN8touchgfx8Gestures18registerClickEventENS_10ClickEvent14ClickEventTypeEtt>
 800d88e:	2301      	movs	r3, #1
 800d890:	f884 306f 	strb.w	r3, [r4, #111]	@ 0x6f
 800d894:	e7f1      	b.n	800d87a <_ZN8touchgfx3HAL5touchEll+0x4a>

0800d896 <_ZN8touchgfx3HAL9blockCopyEPvPKvm>:
 800d896:	b510      	push	{r4, lr}
 800d898:	2b00      	cmp	r3, #0
 800d89a:	d046      	beq.n	800d92a <_ZN8touchgfx3HAL9blockCopyEPvPKvm+0x94>
 800d89c:	ea81 0002 	eor.w	r0, r1, r2
 800d8a0:	07c4      	lsls	r4, r0, #31
 800d8a2:	d508      	bpl.n	800d8b6 <_ZN8touchgfx3HAL9blockCopyEPvPKvm+0x20>
 800d8a4:	440b      	add	r3, r1
 800d8a6:	3a01      	subs	r2, #1
 800d8a8:	428b      	cmp	r3, r1
 800d8aa:	d93e      	bls.n	800d92a <_ZN8touchgfx3HAL9blockCopyEPvPKvm+0x94>
 800d8ac:	f812 0f01 	ldrb.w	r0, [r2, #1]!
 800d8b0:	f801 0b01 	strb.w	r0, [r1], #1
 800d8b4:	e7f8      	b.n	800d8a8 <_ZN8touchgfx3HAL9blockCopyEPvPKvm+0x12>
 800d8b6:	07d0      	lsls	r0, r2, #31
 800d8b8:	bf42      	ittt	mi
 800d8ba:	f812 0b01 	ldrbmi.w	r0, [r2], #1
 800d8be:	f801 0b01 	strbmi.w	r0, [r1], #1
 800d8c2:	f103 33ff 	addmi.w	r3, r3, #4294967295
 800d8c6:	2b01      	cmp	r3, #1
 800d8c8:	d911      	bls.n	800d8ee <_ZN8touchgfx3HAL9blockCopyEPvPKvm+0x58>
 800d8ca:	ea81 0402 	eor.w	r4, r1, r2
 800d8ce:	07a4      	lsls	r4, r4, #30
 800d8d0:	4610      	mov	r0, r2
 800d8d2:	d022      	beq.n	800d91a <_ZN8touchgfx3HAL9blockCopyEPvPKvm+0x84>
 800d8d4:	f023 0401 	bic.w	r4, r3, #1
 800d8d8:	440c      	add	r4, r1
 800d8da:	428c      	cmp	r4, r1
 800d8dc:	4602      	mov	r2, r0
 800d8de:	d904      	bls.n	800d8ea <_ZN8touchgfx3HAL9blockCopyEPvPKvm+0x54>
 800d8e0:	8812      	ldrh	r2, [r2, #0]
 800d8e2:	f821 2b02 	strh.w	r2, [r1], #2
 800d8e6:	3002      	adds	r0, #2
 800d8e8:	e7f7      	b.n	800d8da <_ZN8touchgfx3HAL9blockCopyEPvPKvm+0x44>
 800d8ea:	f003 0301 	and.w	r3, r3, #1
 800d8ee:	f023 0003 	bic.w	r0, r3, #3
 800d8f2:	4408      	add	r0, r1
 800d8f4:	4288      	cmp	r0, r1
 800d8f6:	4614      	mov	r4, r2
 800d8f8:	d904      	bls.n	800d904 <_ZN8touchgfx3HAL9blockCopyEPvPKvm+0x6e>
 800d8fa:	6824      	ldr	r4, [r4, #0]
 800d8fc:	f841 4b04 	str.w	r4, [r1], #4
 800d900:	3204      	adds	r2, #4
 800d902:	e7f7      	b.n	800d8f4 <_ZN8touchgfx3HAL9blockCopyEPvPKvm+0x5e>
 800d904:	f003 0303 	and.w	r3, r3, #3
 800d908:	440b      	add	r3, r1
 800d90a:	3a01      	subs	r2, #1
 800d90c:	428b      	cmp	r3, r1
 800d90e:	d90c      	bls.n	800d92a <_ZN8touchgfx3HAL9blockCopyEPvPKvm+0x94>
 800d910:	f812 0f01 	ldrb.w	r0, [r2, #1]!
 800d914:	f801 0b01 	strb.w	r0, [r1], #1
 800d918:	e7f8      	b.n	800d90c <_ZN8touchgfx3HAL9blockCopyEPvPKvm+0x76>
 800d91a:	0790      	lsls	r0, r2, #30
 800d91c:	d0e7      	beq.n	800d8ee <_ZN8touchgfx3HAL9blockCopyEPvPKvm+0x58>
 800d91e:	f832 0b02 	ldrh.w	r0, [r2], #2
 800d922:	f821 0b02 	strh.w	r0, [r1], #2
 800d926:	3b02      	subs	r3, #2
 800d928:	e7e1      	b.n	800d8ee <_ZN8touchgfx3HAL9blockCopyEPvPKvm+0x58>
 800d92a:	2001      	movs	r0, #1
 800d92c:	bd10      	pop	{r4, pc}

0800d92e <_ZN8touchgfx3HAL7noTouchEv>:
 800d92e:	b510      	push	{r4, lr}
 800d930:	f890 306f 	ldrb.w	r3, [r0, #111]	@ 0x6f
 800d934:	4604      	mov	r4, r0
 800d936:	b153      	cbz	r3, 800d94e <_ZN8touchgfx3HAL7noTouchEv+0x20>
 800d938:	f8b0 3064 	ldrh.w	r3, [r0, #100]	@ 0x64
 800d93c:	f8b0 2060 	ldrh.w	r2, [r0, #96]	@ 0x60
 800d940:	2101      	movs	r1, #1
 800d942:	301c      	adds	r0, #28
 800d944:	f014 fc90 	bl	8022268 <_ZN8touchgfx8Gestures18registerClickEventENS_10ClickEvent14ClickEventTypeEtt>
 800d948:	2300      	movs	r3, #0
 800d94a:	f884 306f 	strb.w	r3, [r4, #111]	@ 0x6f
 800d94e:	bd10      	pop	{r4, pc}

0800d950 <_ZN8touchgfx3HAL27configurePartialFrameBufferEtttt>:
 800d950:	e92d 43f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, lr}
 800d954:	b085      	sub	sp, #20
 800d956:	ad04      	add	r5, sp, #16
 800d958:	4604      	mov	r4, r0
 800d95a:	2000      	movs	r0, #0
 800d95c:	f845 0d04 	str.w	r0, [r5, #-4]!
 800d960:	69a0      	ldr	r0, [r4, #24]
 800d962:	6806      	ldr	r6, [r0, #0]
 800d964:	9501      	str	r5, [sp, #4]
 800d966:	f8bd 5030 	ldrh.w	r5, [sp, #48]	@ 0x30
 800d96a:	9500      	str	r5, [sp, #0]
 800d96c:	6835      	ldr	r5, [r6, #0]
 800d96e:	4699      	mov	r9, r3
 800d970:	460f      	mov	r7, r1
 800d972:	4690      	mov	r8, r2
 800d974:	47a8      	blx	r5
 800d976:	4d10      	ldr	r5, [pc, #64]	@ (800d9b8 <_ZN8touchgfx3HAL27configurePartialFrameBufferEtttt+0x68>)
 800d978:	4606      	mov	r6, r0
 800d97a:	f8a5 9000 	strh.w	r9, [r5]
 800d97e:	f7fa ffbf 	bl	8008900 <_ZN8touchgfx3HAL3lcdEv>
 800d982:	6803      	ldr	r3, [r0, #0]
 800d984:	6adb      	ldr	r3, [r3, #44]	@ 0x2c
 800d986:	4798      	blx	r3
 800d988:	b128      	cbz	r0, 800d996 <_ZN8touchgfx3HAL27configurePartialFrameBufferEtttt+0x46>
 800d98a:	2801      	cmp	r0, #1
 800d98c:	d00b      	beq.n	800d9a6 <_ZN8touchgfx3HAL27configurePartialFrameBufferEtttt+0x56>
 800d98e:	4630      	mov	r0, r6
 800d990:	b005      	add	sp, #20
 800d992:	e8bd 83f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, pc}
 800d996:	882b      	ldrh	r3, [r5, #0]
 800d998:	fb08 7203 	mla	r2, r8, r3, r7
 800d99c:	9b03      	ldr	r3, [sp, #12]
 800d99e:	eba3 0342 	sub.w	r3, r3, r2, lsl #1
 800d9a2:	63e3      	str	r3, [r4, #60]	@ 0x3c
 800d9a4:	e7f3      	b.n	800d98e <_ZN8touchgfx3HAL27configurePartialFrameBufferEtttt+0x3e>
 800d9a6:	882a      	ldrh	r2, [r5, #0]
 800d9a8:	9b03      	ldr	r3, [sp, #12]
 800d9aa:	fb08 7202 	mla	r2, r8, r2, r7
 800d9ae:	eb02 0242 	add.w	r2, r2, r2, lsl #1
 800d9b2:	1a9a      	subs	r2, r3, r2
 800d9b4:	63e2      	str	r2, [r4, #60]	@ 0x3c
 800d9b6:	e7ea      	b.n	800d98e <_ZN8touchgfx3HAL27configurePartialFrameBufferEtttt+0x3e>
 800d9b8:	20002db6 	.word	0x20002db6

0800d9bc <_ZN8touchgfx3HAL8blitCopyEPKtttttthbb>:
 800d9bc:	b5f0      	push	{r4, r5, r6, r7, lr}
 800d9be:	b08b      	sub	sp, #44	@ 0x2c
 800d9c0:	4617      	mov	r7, r2
 800d9c2:	4604      	mov	r4, r0
 800d9c4:	460e      	mov	r6, r1
 800d9c6:	461d      	mov	r5, r3
 800d9c8:	f7fa ff9a 	bl	8008900 <_ZN8touchgfx3HAL3lcdEv>
 800d9cc:	6803      	ldr	r3, [r0, #0]
 800d9ce:	6adb      	ldr	r3, [r3, #44]	@ 0x2c
 800d9d0:	4798      	blx	r3
 800d9d2:	f89d 3054 	ldrb.w	r3, [sp, #84]	@ 0x54
 800d9d6:	9007      	str	r0, [sp, #28]
 800d9d8:	e9cd 0308 	strd	r0, r3, [sp, #32]
 800d9dc:	4b0d      	ldr	r3, [pc, #52]	@ (800da14 <_ZN8touchgfx3HAL8blitCopyEPKtttttthbb+0x58>)
 800d9de:	6822      	ldr	r2, [r4, #0]
 800d9e0:	881b      	ldrh	r3, [r3, #0]
 800d9e2:	9306      	str	r3, [sp, #24]
 800d9e4:	f89d 3050 	ldrb.w	r3, [sp, #80]	@ 0x50
 800d9e8:	9305      	str	r3, [sp, #20]
 800d9ea:	f89d 304c 	ldrb.w	r3, [sp, #76]	@ 0x4c
 800d9ee:	9304      	str	r3, [sp, #16]
 800d9f0:	f8bd 3048 	ldrh.w	r3, [sp, #72]	@ 0x48
 800d9f4:	9303      	str	r3, [sp, #12]
 800d9f6:	f8bd 3044 	ldrh.w	r3, [sp, #68]	@ 0x44
 800d9fa:	9302      	str	r3, [sp, #8]
 800d9fc:	f8bd 3040 	ldrh.w	r3, [sp, #64]	@ 0x40
 800da00:	e9cd 5300 	strd	r5, r3, [sp]
 800da04:	4631      	mov	r1, r6
 800da06:	6bd5      	ldr	r5, [r2, #60]	@ 0x3c
 800da08:	463b      	mov	r3, r7
 800da0a:	2200      	movs	r2, #0
 800da0c:	4620      	mov	r0, r4
 800da0e:	47a8      	blx	r5
 800da10:	b00b      	add	sp, #44	@ 0x2c
 800da12:	bdf0      	pop	{r4, r5, r6, r7, pc}
 800da14:	20002db6 	.word	0x20002db6

0800da18 <_ZN8touchgfx3HAL16blitCopyARGB8888EPKtttttthb>:
 800da18:	e92d 43f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, lr}
 800da1c:	4698      	mov	r8, r3
 800da1e:	6803      	ldr	r3, [r0, #0]
 800da20:	6bdd      	ldr	r5, [r3, #60]	@ 0x3c
 800da22:	4b15      	ldr	r3, [pc, #84]	@ (800da78 <_ZN8touchgfx3HAL16blitCopyARGB8888EPKtttttthb+0x60>)
 800da24:	b08b      	sub	sp, #44	@ 0x2c
 800da26:	4617      	mov	r7, r2
 800da28:	f8b3 9000 	ldrh.w	r9, [r3]
 800da2c:	460e      	mov	r6, r1
 800da2e:	4604      	mov	r4, r0
 800da30:	f7fa ff66 	bl	8008900 <_ZN8touchgfx3HAL3lcdEv>
 800da34:	6803      	ldr	r3, [r0, #0]
 800da36:	6adb      	ldr	r3, [r3, #44]	@ 0x2c
 800da38:	4798      	blx	r3
 800da3a:	f89d 3058 	ldrb.w	r3, [sp, #88]	@ 0x58
 800da3e:	e9cd 0308 	strd	r0, r3, [sp, #32]
 800da42:	2302      	movs	r3, #2
 800da44:	e9cd 9306 	strd	r9, r3, [sp, #24]
 800da48:	2301      	movs	r3, #1
 800da4a:	9305      	str	r3, [sp, #20]
 800da4c:	f89d 3054 	ldrb.w	r3, [sp, #84]	@ 0x54
 800da50:	9304      	str	r3, [sp, #16]
 800da52:	f8bd 3050 	ldrh.w	r3, [sp, #80]	@ 0x50
 800da56:	9303      	str	r3, [sp, #12]
 800da58:	f8bd 304c 	ldrh.w	r3, [sp, #76]	@ 0x4c
 800da5c:	9302      	str	r3, [sp, #8]
 800da5e:	f8bd 3048 	ldrh.w	r3, [sp, #72]	@ 0x48
 800da62:	2200      	movs	r2, #0
 800da64:	e9cd 8300 	strd	r8, r3, [sp]
 800da68:	4631      	mov	r1, r6
 800da6a:	463b      	mov	r3, r7
 800da6c:	4620      	mov	r0, r4
 800da6e:	47a8      	blx	r5
 800da70:	b00b      	add	sp, #44	@ 0x2c
 800da72:	e8bd 83f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, pc}
 800da76:	bf00      	nop
 800da78:	20002db6 	.word	0x20002db6

0800da7c <_ZN8touchgfx3HAL8blitFillENS_9colortypeEtttthb>:
 800da7c:	e92d 43f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, lr}
 800da80:	4698      	mov	r8, r3
 800da82:	6803      	ldr	r3, [r0, #0]
 800da84:	6d9d      	ldr	r5, [r3, #88]	@ 0x58
 800da86:	4b11      	ldr	r3, [pc, #68]	@ (800dacc <_ZN8touchgfx3HAL8blitFillENS_9colortypeEtttthb+0x50>)
 800da88:	b087      	sub	sp, #28
 800da8a:	f8b3 9000 	ldrh.w	r9, [r3]
 800da8e:	460e      	mov	r6, r1
 800da90:	4617      	mov	r7, r2
 800da92:	4604      	mov	r4, r0
 800da94:	f7fa ff34 	bl	8008900 <_ZN8touchgfx3HAL3lcdEv>
 800da98:	6803      	ldr	r3, [r0, #0]
 800da9a:	6adb      	ldr	r3, [r3, #44]	@ 0x2c
 800da9c:	4798      	blx	r3
 800da9e:	f89d 3044 	ldrb.w	r3, [sp, #68]	@ 0x44
 800daa2:	f8cd 900c 	str.w	r9, [sp, #12]
 800daa6:	e9cd 0304 	strd	r0, r3, [sp, #16]
 800daaa:	f89d 3040 	ldrb.w	r3, [sp, #64]	@ 0x40
 800daae:	9302      	str	r3, [sp, #8]
 800dab0:	f8bd 303c 	ldrh.w	r3, [sp, #60]	@ 0x3c
 800dab4:	9301      	str	r3, [sp, #4]
 800dab6:	f8bd 3038 	ldrh.w	r3, [sp, #56]	@ 0x38
 800daba:	9300      	str	r3, [sp, #0]
 800dabc:	463a      	mov	r2, r7
 800dabe:	4643      	mov	r3, r8
 800dac0:	4631      	mov	r1, r6
 800dac2:	4620      	mov	r0, r4
 800dac4:	47a8      	blx	r5
 800dac6:	b007      	add	sp, #28
 800dac8:	e8bd 83f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, pc}
 800dacc:	20002db6 	.word	0x20002db6

0800dad0 <_ZN8touchgfx3HAL27drawDrawableInDynamicBitmapERNS_8DrawableEtRKNS_4RectE>:
 800dad0:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 800dad4:	4604      	mov	r4, r0
 800dad6:	b08f      	sub	sp, #60	@ 0x3c
 800dad8:	4610      	mov	r0, r2
 800dada:	460d      	mov	r5, r1
 800dadc:	4691      	mov	r9, r2
 800dade:	461e      	mov	r6, r3
 800dae0:	f006 f8c2 	bl	8013c68 <_ZN8touchgfx6Bitmap23dynamicBitmapGetAddressEt>
 800dae4:	2800      	cmp	r0, #0
 800dae6:	f000 809d 	beq.w	800dc24 <_ZN8touchgfx3HAL27drawDrawableInDynamicBitmapERNS_8DrawableEtRKNS_4RectE+0x154>
 800daea:	6823      	ldr	r3, [r4, #0]
 800daec:	f8df b198 	ldr.w	fp, [pc, #408]	@ 800dc88 <_ZN8touchgfx3HAL27drawDrawableInDynamicBitmapERNS_8DrawableEtRKNS_4RectE+0x1b8>
 800daf0:	6a9b      	ldr	r3, [r3, #40]	@ 0x28
 800daf2:	f8df a198 	ldr.w	sl, [pc, #408]	@ 800dc8c <_ZN8touchgfx3HAL27drawDrawableInDynamicBitmapERNS_8DrawableEtRKNS_4RectE+0x1bc>
 800daf6:	4f61      	ldr	r7, [pc, #388]	@ (800dc7c <_ZN8touchgfx3HAL27drawDrawableInDynamicBitmapERNS_8DrawableEtRKNS_4RectE+0x1ac>)
 800daf8:	4620      	mov	r0, r4
 800dafa:	4798      	blx	r3
 800dafc:	6823      	ldr	r3, [r4, #0]
 800dafe:	4620      	mov	r0, r4
 800db00:	6adb      	ldr	r3, [r3, #44]	@ 0x2c
 800db02:	4798      	blx	r3
 800db04:	f8bb 3000 	ldrh.w	r3, [fp]
 800db08:	9301      	str	r3, [sp, #4]
 800db0a:	f10d 0838 	add.w	r8, sp, #56	@ 0x38
 800db0e:	f8ba 3000 	ldrh.w	r3, [sl]
 800db12:	9302      	str	r3, [sp, #8]
 800db14:	883b      	ldrh	r3, [r7, #0]
 800db16:	f828 9d1c 	strh.w	r9, [r8, #-28]!
 800db1a:	9303      	str	r3, [sp, #12]
 800db1c:	4b58      	ldr	r3, [pc, #352]	@ (800dc80 <_ZN8touchgfx3HAL27drawDrawableInDynamicBitmapERNS_8DrawableEtRKNS_4RectE+0x1b0>)
 800db1e:	9305      	str	r3, [sp, #20]
 800db20:	881a      	ldrh	r2, [r3, #0]
 800db22:	9204      	str	r2, [sp, #16]
 800db24:	4640      	mov	r0, r8
 800db26:	f006 f933 	bl	8013d90 <_ZNK8touchgfx6Bitmap8getWidthEv>
 800db2a:	8038      	strh	r0, [r7, #0]
 800db2c:	4640      	mov	r0, r8
 800db2e:	f006 f963 	bl	8013df8 <_ZNK8touchgfx6Bitmap9getHeightEv>
 800db32:	9b05      	ldr	r3, [sp, #20]
 800db34:	b280      	uxth	r0, r0
 800db36:	8018      	strh	r0, [r3, #0]
 800db38:	4b52      	ldr	r3, [pc, #328]	@ (800dc84 <_ZN8touchgfx3HAL27drawDrawableInDynamicBitmapERNS_8DrawableEtRKNS_4RectE+0x1b4>)
 800db3a:	781b      	ldrb	r3, [r3, #0]
 800db3c:	2b00      	cmp	r3, #0
 800db3e:	d174      	bne.n	800dc2a <_ZN8touchgfx3HAL27drawDrawableInDynamicBitmapERNS_8DrawableEtRKNS_4RectE+0x15a>
 800db40:	883b      	ldrh	r3, [r7, #0]
 800db42:	f8ab 3000 	strh.w	r3, [fp]
 800db46:	f8aa 0000 	strh.w	r0, [sl]
 800db4a:	4648      	mov	r0, r9
 800db4c:	e9d4 870f 	ldrd	r8, r7, [r4, #60]	@ 0x3c
 800db50:	f006 f88a 	bl	8013c68 <_ZN8touchgfx6Bitmap23dynamicBitmapGetAddressEt>
 800db54:	e9c4 000f 	strd	r0, r0, [r4, #60]	@ 0x3c
 800db58:	2200      	movs	r2, #0
 800db5a:	4611      	mov	r1, r2
 800db5c:	4628      	mov	r0, r5
 800db5e:	f9b5 9004 	ldrsh.w	r9, [r5, #4]
 800db62:	f9b5 a006 	ldrsh.w	sl, [r5, #6]
 800db66:	f7fb fc52 	bl	800940e <_ZN8touchgfx8Drawable5setXYEss>
 800db6a:	2301      	movs	r3, #1
 800db6c:	f895 b025 	ldrb.w	fp, [r5, #37]	@ 0x25
 800db70:	f885 3025 	strb.w	r3, [r5, #37]	@ 0x25
 800db74:	f9b6 3004 	ldrsh.w	r3, [r6, #4]
 800db78:	2b00      	cmp	r3, #0
 800db7a:	dd5c      	ble.n	800dc36 <_ZN8touchgfx3HAL27drawDrawableInDynamicBitmapERNS_8DrawableEtRKNS_4RectE+0x166>
 800db7c:	f9b6 3006 	ldrsh.w	r3, [r6, #6]
 800db80:	2b00      	cmp	r3, #0
 800db82:	dd58      	ble.n	800dc36 <_ZN8touchgfx3HAL27drawDrawableInDynamicBitmapERNS_8DrawableEtRKNS_4RectE+0x166>
 800db84:	462a      	mov	r2, r5
 800db86:	ab0a      	add	r3, sp, #40	@ 0x28
 800db88:	f852 0f04 	ldr.w	r0, [r2, #4]!
 800db8c:	6851      	ldr	r1, [r2, #4]
 800db8e:	c303      	stmia	r3!, {r0, r1}
 800db90:	4631      	mov	r1, r6
 800db92:	a80a      	add	r0, sp, #40	@ 0x28
 800db94:	f7ff fbf8 	bl	800d388 <_ZN8touchgfx4RectaNERKS0_>
 800db98:	4b38      	ldr	r3, [pc, #224]	@ (800dc7c <_ZN8touchgfx3HAL27drawDrawableInDynamicBitmapERNS_8DrawableEtRKNS_4RectE+0x1ac>)
 800db9a:	f9b3 2000 	ldrsh.w	r2, [r3]
 800db9e:	f8ad 2034 	strh.w	r2, [sp, #52]	@ 0x34
 800dba2:	2100      	movs	r1, #0
 800dba4:	aa0a      	add	r2, sp, #40	@ 0x28
 800dba6:	4b36      	ldr	r3, [pc, #216]	@ (800dc80 <_ZN8touchgfx3HAL27drawDrawableInDynamicBitmapERNS_8DrawableEtRKNS_4RectE+0x1b0>)
 800dba8:	910c      	str	r1, [sp, #48]	@ 0x30
 800dbaa:	e892 0003 	ldmia.w	r2, {r0, r1}
 800dbae:	f9b3 3000 	ldrsh.w	r3, [r3]
 800dbb2:	f8ad 3036 	strh.w	r3, [sp, #54]	@ 0x36
 800dbb6:	ab08      	add	r3, sp, #32
 800dbb8:	e883 0003 	stmia.w	r3, {r0, r1}
 800dbbc:	4618      	mov	r0, r3
 800dbbe:	a90c      	add	r1, sp, #48	@ 0x30
 800dbc0:	f7ff fbe2 	bl	800d388 <_ZN8touchgfx4RectaNERKS0_>
 800dbc4:	6ce3      	ldr	r3, [r4, #76]	@ 0x4c
 800dbc6:	2b00      	cmp	r3, #0
 800dbc8:	d13c      	bne.n	800dc44 <_ZN8touchgfx3HAL27drawDrawableInDynamicBitmapERNS_8DrawableEtRKNS_4RectE+0x174>
 800dbca:	2000      	movs	r0, #0
 800dbcc:	f884 0058 	strb.w	r0, [r4, #88]	@ 0x58
 800dbd0:	2600      	movs	r6, #0
 800dbd2:	682a      	ldr	r2, [r5, #0]
 800dbd4:	696b      	ldr	r3, [r5, #20]
 800dbd6:	616e      	str	r6, [r5, #20]
 800dbd8:	9305      	str	r3, [sp, #20]
 800dbda:	6892      	ldr	r2, [r2, #8]
 800dbdc:	a908      	add	r1, sp, #32
 800dbde:	4628      	mov	r0, r5
 800dbe0:	4790      	blx	r2
 800dbe2:	9b05      	ldr	r3, [sp, #20]
 800dbe4:	616b      	str	r3, [r5, #20]
 800dbe6:	4652      	mov	r2, sl
 800dbe8:	f884 6058 	strb.w	r6, [r4, #88]	@ 0x58
 800dbec:	4649      	mov	r1, r9
 800dbee:	4628      	mov	r0, r5
 800dbf0:	f885 b025 	strb.w	fp, [r5, #37]	@ 0x25
 800dbf4:	f7fb fc0b 	bl	800940e <_ZN8touchgfx8Drawable5setXYEss>
 800dbf8:	4b23      	ldr	r3, [pc, #140]	@ (800dc88 <_ZN8touchgfx3HAL27drawDrawableInDynamicBitmapERNS_8DrawableEtRKNS_4RectE+0x1b8>)
 800dbfa:	9a01      	ldr	r2, [sp, #4]
 800dbfc:	801a      	strh	r2, [r3, #0]
 800dbfe:	4b23      	ldr	r3, [pc, #140]	@ (800dc8c <_ZN8touchgfx3HAL27drawDrawableInDynamicBitmapERNS_8DrawableEtRKNS_4RectE+0x1bc>)
 800dc00:	9a02      	ldr	r2, [sp, #8]
 800dc02:	801a      	strh	r2, [r3, #0]
 800dc04:	4b1d      	ldr	r3, [pc, #116]	@ (800dc7c <_ZN8touchgfx3HAL27drawDrawableInDynamicBitmapERNS_8DrawableEtRKNS_4RectE+0x1ac>)
 800dc06:	9a03      	ldr	r2, [sp, #12]
 800dc08:	801a      	strh	r2, [r3, #0]
 800dc0a:	4b1d      	ldr	r3, [pc, #116]	@ (800dc80 <_ZN8touchgfx3HAL27drawDrawableInDynamicBitmapERNS_8DrawableEtRKNS_4RectE+0x1b0>)
 800dc0c:	9a04      	ldr	r2, [sp, #16]
 800dc0e:	801a      	strh	r2, [r3, #0]
 800dc10:	e9c4 870f 	strd	r8, r7, [r4, #60]	@ 0x3c
 800dc14:	6823      	ldr	r3, [r4, #0]
 800dc16:	4620      	mov	r0, r4
 800dc18:	6a9b      	ldr	r3, [r3, #40]	@ 0x28
 800dc1a:	4798      	blx	r3
 800dc1c:	6823      	ldr	r3, [r4, #0]
 800dc1e:	4620      	mov	r0, r4
 800dc20:	6adb      	ldr	r3, [r3, #44]	@ 0x2c
 800dc22:	4798      	blx	r3
 800dc24:	b00f      	add	sp, #60	@ 0x3c
 800dc26:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 800dc2a:	883b      	ldrh	r3, [r7, #0]
 800dc2c:	f8ab 0000 	strh.w	r0, [fp]
 800dc30:	f8aa 3000 	strh.w	r3, [sl]
 800dc34:	e789      	b.n	800db4a <_ZN8touchgfx3HAL27drawDrawableInDynamicBitmapERNS_8DrawableEtRKNS_4RectE+0x7a>
 800dc36:	462a      	mov	r2, r5
 800dc38:	ab0a      	add	r3, sp, #40	@ 0x28
 800dc3a:	f852 0f04 	ldr.w	r0, [r2, #4]!
 800dc3e:	6851      	ldr	r1, [r2, #4]
 800dc40:	c303      	stmia	r3!, {r0, r1}
 800dc42:	e7a9      	b.n	800db98 <_ZN8touchgfx3HAL27drawDrawableInDynamicBitmapERNS_8DrawableEtRKNS_4RectE+0xc8>
 800dc44:	a807      	add	r0, sp, #28
 800dc46:	f006 fa19 	bl	801407c <_ZNK8touchgfx6Bitmap9getFormatEv>
 800dc4a:	4606      	mov	r6, r0
 800dc4c:	6ce0      	ldr	r0, [r4, #76]	@ 0x4c
 800dc4e:	6803      	ldr	r3, [r0, #0]
 800dc50:	6adb      	ldr	r3, [r3, #44]	@ 0x2c
 800dc52:	4798      	blx	r3
 800dc54:	4286      	cmp	r6, r0
 800dc56:	d1b8      	bne.n	800dbca <_ZN8touchgfx3HAL27drawDrawableInDynamicBitmapERNS_8DrawableEtRKNS_4RectE+0xfa>
 800dc58:	f7fa fe52 	bl	8008900 <_ZN8touchgfx3HAL3lcdEv>
 800dc5c:	6803      	ldr	r3, [r0, #0]
 800dc5e:	4606      	mov	r6, r0
 800dc60:	6b5b      	ldr	r3, [r3, #52]	@ 0x34
 800dc62:	9305      	str	r3, [sp, #20]
 800dc64:	a807      	add	r0, sp, #28
 800dc66:	f006 fa09 	bl	801407c <_ZNK8touchgfx6Bitmap9getFormatEv>
 800dc6a:	9b05      	ldr	r3, [sp, #20]
 800dc6c:	4601      	mov	r1, r0
 800dc6e:	4630      	mov	r0, r6
 800dc70:	4798      	blx	r3
 800dc72:	f080 0001 	eor.w	r0, r0, #1
 800dc76:	b2c0      	uxtb	r0, r0
 800dc78:	e7a8      	b.n	800dbcc <_ZN8touchgfx3HAL27drawDrawableInDynamicBitmapERNS_8DrawableEtRKNS_4RectE+0xfc>
 800dc7a:	bf00      	nop
 800dc7c:	20002db0 	.word	0x20002db0
 800dc80:	20002db2 	.word	0x20002db2
 800dc84:	20002db4 	.word	0x20002db4
 800dc88:	20002db6 	.word	0x20002db6
 800dc8c:	20002db8 	.word	0x20002db8

0800dc90 <_ZN8touchgfx3HAL20getClientFrameBufferEv>:
 800dc90:	b510      	push	{r4, lr}
 800dc92:	4b07      	ldr	r3, [pc, #28]	@ (800dcb0 <_ZN8touchgfx3HAL20getClientFrameBufferEv+0x20>)
 800dc94:	781b      	ldrb	r3, [r3, #0]
 800dc96:	4604      	mov	r4, r0
 800dc98:	b13b      	cbz	r3, 800dcaa <_ZN8touchgfx3HAL20getClientFrameBufferEv+0x1a>
 800dc9a:	6803      	ldr	r3, [r0, #0]
 800dc9c:	6b1b      	ldr	r3, [r3, #48]	@ 0x30
 800dc9e:	4798      	blx	r3
 800dca0:	6be3      	ldr	r3, [r4, #60]	@ 0x3c
 800dca2:	4283      	cmp	r3, r0
 800dca4:	d101      	bne.n	800dcaa <_ZN8touchgfx3HAL20getClientFrameBufferEv+0x1a>
 800dca6:	6c20      	ldr	r0, [r4, #64]	@ 0x40
 800dca8:	bd10      	pop	{r4, pc}
 800dcaa:	6be0      	ldr	r0, [r4, #60]	@ 0x3c
 800dcac:	e7fc      	b.n	800dca8 <_ZN8touchgfx3HAL20getClientFrameBufferEv+0x18>
 800dcae:	bf00      	nop
 800dcb0:	20002dba 	.word	0x20002dba

0800dcb4 <_ZN8touchgfx3HAL12blitCopyWordEPKttttttt>:
 800dcb4:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 800dcb8:	b08a      	sub	sp, #40	@ 0x28
 800dcba:	461d      	mov	r5, r3
 800dcbc:	f44f 6380 	mov.w	r3, #1024	@ 0x400
 800dcc0:	e9cd 3101 	strd	r3, r1, [sp, #4]
 800dcc4:	f8bd 3040 	ldrh.w	r3, [sp, #64]	@ 0x40
 800dcc8:	f8ad 3018 	strh.w	r3, [sp, #24]
 800dccc:	f8bd 3044 	ldrh.w	r3, [sp, #68]	@ 0x44
 800dcd0:	f8ad 301a 	strh.w	r3, [sp, #26]
 800dcd4:	2400      	movs	r4, #0
 800dcd6:	f8bd 3048 	ldrh.w	r3, [sp, #72]	@ 0x48
 800dcda:	f8bd 604c 	ldrh.w	r6, [sp, #76]	@ 0x4c
 800dcde:	f8ad 301c 	strh.w	r3, [sp, #28]
 800dce2:	4690      	mov	r8, r2
 800dce4:	4607      	mov	r7, r0
 800dce6:	9404      	str	r4, [sp, #16]
 800dce8:	f88d 4020 	strb.w	r4, [sp, #32]
 800dcec:	f7ff ffd0 	bl	800dc90 <_ZN8touchgfx3HAL20getClientFrameBufferEv>
 800dcf0:	fb06 8505 	mla	r5, r6, r5, r8
 800dcf4:	eb00 0545 	add.w	r5, r0, r5, lsl #1
 800dcf8:	6878      	ldr	r0, [r7, #4]
 800dcfa:	9505      	str	r5, [sp, #20]
 800dcfc:	f8ad 601e 	strh.w	r6, [sp, #30]
 800dd00:	f88d 4022 	strb.w	r4, [sp, #34]	@ 0x22
 800dd04:	f88d 4021 	strb.w	r4, [sp, #33]	@ 0x21
 800dd08:	f88d 4023 	strb.w	r4, [sp, #35]	@ 0x23
 800dd0c:	f88d 4024 	strb.w	r4, [sp, #36]	@ 0x24
 800dd10:	6803      	ldr	r3, [r0, #0]
 800dd12:	a901      	add	r1, sp, #4
 800dd14:	685b      	ldr	r3, [r3, #4]
 800dd16:	4798      	blx	r3
 800dd18:	b00a      	add	sp, #40	@ 0x28
 800dd1a:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}

0800dd1e <_ZN8touchgfx3HAL12blitFillWordEtttttt>:
 800dd1e:	e92d 43f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, lr}
 800dd22:	b08b      	sub	sp, #44	@ 0x2c
 800dd24:	2400      	movs	r4, #0
 800dd26:	461d      	mov	r5, r3
 800dd28:	f44f 6300 	mov.w	r3, #2048	@ 0x800
 800dd2c:	4688      	mov	r8, r1
 800dd2e:	4691      	mov	r9, r2
 800dd30:	f8bd 6050 	ldrh.w	r6, [sp, #80]	@ 0x50
 800dd34:	9404      	str	r4, [sp, #16]
 800dd36:	4607      	mov	r7, r0
 800dd38:	e9cd 3401 	strd	r3, r4, [sp, #4]
 800dd3c:	f7ff ffa8 	bl	800dc90 <_ZN8touchgfx3HAL20getClientFrameBufferEv>
 800dd40:	fb06 9505 	mla	r5, r6, r5, r9
 800dd44:	f8bd 3048 	ldrh.w	r3, [sp, #72]	@ 0x48
 800dd48:	f8ad 3018 	strh.w	r3, [sp, #24]
 800dd4c:	eb00 0545 	add.w	r5, r0, r5, lsl #1
 800dd50:	f8bd 304c 	ldrh.w	r3, [sp, #76]	@ 0x4c
 800dd54:	6878      	ldr	r0, [r7, #4]
 800dd56:	9505      	str	r5, [sp, #20]
 800dd58:	f8ad 301a 	strh.w	r3, [sp, #26]
 800dd5c:	f8ad 401c 	strh.w	r4, [sp, #28]
 800dd60:	f8ad 601e 	strh.w	r6, [sp, #30]
 800dd64:	f8cd 8010 	str.w	r8, [sp, #16]
 800dd68:	f8ad 4020 	strh.w	r4, [sp, #32]
 800dd6c:	f88d 4022 	strb.w	r4, [sp, #34]	@ 0x22
 800dd70:	f88d 4023 	strb.w	r4, [sp, #35]	@ 0x23
 800dd74:	f88d 4024 	strb.w	r4, [sp, #36]	@ 0x24
 800dd78:	6803      	ldr	r3, [r0, #0]
 800dd7a:	a901      	add	r1, sp, #4
 800dd7c:	685b      	ldr	r3, [r3, #4]
 800dd7e:	4798      	blx	r3
 800dd80:	b00b      	add	sp, #44	@ 0x2c
 800dd82:	e8bd 83f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, pc}
	...

0800dd88 <_ZN8touchgfx3HAL8blitCopyEPKtPKhttttthbtNS_6Bitmap12BitmapFormatES6_b>:
 800dd88:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 800dd8c:	b08a      	sub	sp, #40	@ 0x28
 800dd8e:	4698      	mov	r8, r3
 800dd90:	f89d 505c 	ldrb.w	r5, [sp, #92]	@ 0x5c
 800dd94:	f89d c054 	ldrb.w	ip, [sp, #84]	@ 0x54
 800dd98:	f8bd 7058 	ldrh.w	r7, [sp, #88]	@ 0x58
 800dd9c:	f89d 4060 	ldrb.w	r4, [sp, #96]	@ 0x60
 800dda0:	2300      	movs	r3, #0
 800dda2:	2d0b      	cmp	r5, #11
 800dda4:	4606      	mov	r6, r0
 800dda6:	9304      	str	r3, [sp, #16]
 800dda8:	f89d 0050 	ldrb.w	r0, [sp, #80]	@ 0x50
 800ddac:	d138      	bne.n	800de20 <_ZN8touchgfx3HAL8blitCopyEPKtPKhttttthbtNS_6Bitmap12BitmapFormatES6_b+0x98>
 800ddae:	2380      	movs	r3, #128	@ 0x80
 800ddb0:	e9cd 3101 	strd	r3, r1, [sp, #4]
 800ddb4:	f8bd 3044 	ldrh.w	r3, [sp, #68]	@ 0x44
 800ddb8:	f8ad 3018 	strh.w	r3, [sp, #24]
 800ddbc:	f8bd 3048 	ldrh.w	r3, [sp, #72]	@ 0x48
 800ddc0:	f8ad 301a 	strh.w	r3, [sp, #26]
 800ddc4:	f88d 0020 	strb.w	r0, [sp, #32]
 800ddc8:	f8bd 304c 	ldrh.w	r3, [sp, #76]	@ 0x4c
 800ddcc:	f8ad 301c 	strh.w	r3, [sp, #28]
 800ddd0:	4630      	mov	r0, r6
 800ddd2:	9203      	str	r2, [sp, #12]
 800ddd4:	f7ff ff5c 	bl	800dc90 <_ZN8touchgfx3HAL20getClientFrameBufferEv>
 800ddd8:	2c0b      	cmp	r4, #11
 800ddda:	bf98      	it	ls
 800dddc:	4b1b      	ldrls	r3, [pc, #108]	@ (800de4c <_ZN8touchgfx3HAL8blitCopyEPKtPKhttttthbtNS_6Bitmap12BitmapFormatES6_b+0xc4>)
 800ddde:	f8bd 2040 	ldrh.w	r2, [sp, #64]	@ 0x40
 800dde2:	bf98      	it	ls
 800dde4:	5d19      	ldrbls	r1, [r3, r4]
 800dde6:	f8ad 701e 	strh.w	r7, [sp, #30]
 800ddea:	bf88      	it	hi
 800ddec:	2100      	movhi	r1, #0
 800ddee:	fb02 8307 	mla	r3, r2, r7, r8
 800ddf2:	10c9      	asrs	r1, r1, #3
 800ddf4:	fb01 0003 	mla	r0, r1, r3, r0
 800ddf8:	f89d 3064 	ldrb.w	r3, [sp, #100]	@ 0x64
 800ddfc:	9005      	str	r0, [sp, #20]
 800ddfe:	f88d 3023 	strb.w	r3, [sp, #35]	@ 0x23
 800de02:	6870      	ldr	r0, [r6, #4]
 800de04:	f88d 5021 	strb.w	r5, [sp, #33]	@ 0x21
 800de08:	2300      	movs	r3, #0
 800de0a:	f88d 4022 	strb.w	r4, [sp, #34]	@ 0x22
 800de0e:	f88d 3024 	strb.w	r3, [sp, #36]	@ 0x24
 800de12:	6803      	ldr	r3, [r0, #0]
 800de14:	a901      	add	r1, sp, #4
 800de16:	685b      	ldr	r3, [r3, #4]
 800de18:	4798      	blx	r3
 800de1a:	b00a      	add	sp, #40	@ 0x28
 800de1c:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
 800de20:	2d02      	cmp	r5, #2
 800de22:	d109      	bne.n	800de38 <_ZN8touchgfx3HAL8blitCopyEPKtPKhttttthbtNS_6Bitmap12BitmapFormatES6_b+0xb0>
 800de24:	28ff      	cmp	r0, #255	@ 0xff
 800de26:	d105      	bne.n	800de34 <_ZN8touchgfx3HAL8blitCopyEPKtPKhttttthbtNS_6Bitmap12BitmapFormatES6_b+0xac>
 800de28:	f1bc 0f00 	cmp.w	ip, #0
 800de2c:	bf14      	ite	ne
 800de2e:	2340      	movne	r3, #64	@ 0x40
 800de30:	2320      	moveq	r3, #32
 800de32:	e7bd      	b.n	800ddb0 <_ZN8touchgfx3HAL8blitCopyEPKtPKhttttthbtNS_6Bitmap12BitmapFormatES6_b+0x28>
 800de34:	2340      	movs	r3, #64	@ 0x40
 800de36:	e7bb      	b.n	800ddb0 <_ZN8touchgfx3HAL8blitCopyEPKtPKhttttthbtNS_6Bitmap12BitmapFormatES6_b+0x28>
 800de38:	28ff      	cmp	r0, #255	@ 0xff
 800de3a:	d105      	bne.n	800de48 <_ZN8touchgfx3HAL8blitCopyEPKtPKhttttthbtNS_6Bitmap12BitmapFormatES6_b+0xc0>
 800de3c:	f1bc 0f00 	cmp.w	ip, #0
 800de40:	bf14      	ite	ne
 800de42:	2304      	movne	r3, #4
 800de44:	2301      	moveq	r3, #1
 800de46:	e7b3      	b.n	800ddb0 <_ZN8touchgfx3HAL8blitCopyEPKtPKhttttthbtNS_6Bitmap12BitmapFormatES6_b+0x28>
 800de48:	2304      	movs	r3, #4
 800de4a:	e7b1      	b.n	800ddb0 <_ZN8touchgfx3HAL8blitCopyEPKtPKhttttthbtNS_6Bitmap12BitmapFormatES6_b+0x28>
 800de4c:	08024ecc 	.word	0x08024ecc

0800de50 <_ZN8touchgfx3HAL8blitFillENS_9colortypeEtttthtNS_6Bitmap12BitmapFormatEb>:
 800de50:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 800de54:	b08b      	sub	sp, #44	@ 0x2c
 800de56:	461d      	mov	r5, r3
 800de58:	f89d 9058 	ldrb.w	r9, [sp, #88]	@ 0x58
 800de5c:	f89d 6060 	ldrb.w	r6, [sp, #96]	@ 0x60
 800de60:	f8bd a05c 	ldrh.w	sl, [sp, #92]	@ 0x5c
 800de64:	f1b9 0fff 	cmp.w	r9, #255	@ 0xff
 800de68:	bf14      	ite	ne
 800de6a:	2308      	movne	r3, #8
 800de6c:	2302      	moveq	r3, #2
 800de6e:	2400      	movs	r4, #0
 800de70:	e9cd 3401 	strd	r3, r4, [sp, #4]
 800de74:	4688      	mov	r8, r1
 800de76:	4693      	mov	fp, r2
 800de78:	9404      	str	r4, [sp, #16]
 800de7a:	4607      	mov	r7, r0
 800de7c:	f7ff ff08 	bl	800dc90 <_ZN8touchgfx3HAL20getClientFrameBufferEv>
 800de80:	2e0b      	cmp	r6, #11
 800de82:	bf98      	it	ls
 800de84:	4b15      	ldrls	r3, [pc, #84]	@ (800dedc <_ZN8touchgfx3HAL8blitFillENS_9colortypeEtttthtNS_6Bitmap12BitmapFormatEb+0x8c>)
 800de86:	f89d 2064 	ldrb.w	r2, [sp, #100]	@ 0x64
 800de8a:	bf98      	it	ls
 800de8c:	5d9c      	ldrbls	r4, [r3, r6]
 800de8e:	f8bd 3050 	ldrh.w	r3, [sp, #80]	@ 0x50
 800de92:	f8ad 3018 	strh.w	r3, [sp, #24]
 800de96:	fb05 b50a 	mla	r5, r5, sl, fp
 800de9a:	f8bd 3054 	ldrh.w	r3, [sp, #84]	@ 0x54
 800de9e:	f8ad 301a 	strh.w	r3, [sp, #26]
 800dea2:	10e4      	asrs	r4, r4, #3
 800dea4:	fb04 0405 	mla	r4, r4, r5, r0
 800dea8:	2300      	movs	r3, #0
 800deaa:	6878      	ldr	r0, [r7, #4]
 800deac:	9405      	str	r4, [sp, #20]
 800deae:	f8ad 301c 	strh.w	r3, [sp, #28]
 800deb2:	f8ad a01e 	strh.w	sl, [sp, #30]
 800deb6:	f8cd 8010 	str.w	r8, [sp, #16]
 800deba:	f88d 9020 	strb.w	r9, [sp, #32]
 800debe:	f88d 2023 	strb.w	r2, [sp, #35]	@ 0x23
 800dec2:	f88d 3024 	strb.w	r3, [sp, #36]	@ 0x24
 800dec6:	f88d 6021 	strb.w	r6, [sp, #33]	@ 0x21
 800deca:	f88d 6022 	strb.w	r6, [sp, #34]	@ 0x22
 800dece:	6803      	ldr	r3, [r0, #0]
 800ded0:	a901      	add	r1, sp, #4
 800ded2:	685b      	ldr	r3, [r3, #4]
 800ded4:	4798      	blx	r3
 800ded6:	b00b      	add	sp, #44	@ 0x2c
 800ded8:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 800dedc:	08024ecc 	.word	0x08024ecc

0800dee0 <_ZNK8touchgfx3HAL13getDstAddressEttPt>:
 800dee0:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 800dee4:	461e      	mov	r6, r3
 800dee6:	4b0a      	ldr	r3, [pc, #40]	@ (800df10 <_ZNK8touchgfx3HAL13getDstAddressEttPt+0x30>)
 800dee8:	460f      	mov	r7, r1
 800deea:	881d      	ldrh	r5, [r3, #0]
 800deec:	4690      	mov	r8, r2
 800deee:	f7fa fd07 	bl	8008900 <_ZN8touchgfx3HAL3lcdEv>
 800def2:	6803      	ldr	r3, [r0, #0]
 800def4:	6adb      	ldr	r3, [r3, #44]	@ 0x2c
 800def6:	4798      	blx	r3
 800def8:	280b      	cmp	r0, #11
 800defa:	bf9a      	itte	ls
 800defc:	4b05      	ldrls	r3, [pc, #20]	@ (800df14 <_ZNK8touchgfx3HAL13getDstAddressEttPt+0x34>)
 800defe:	5c1c      	ldrbls	r4, [r3, r0]
 800df00:	2400      	movhi	r4, #0
 800df02:	fb08 7005 	mla	r0, r8, r5, r7
 800df06:	10e4      	asrs	r4, r4, #3
 800df08:	fb04 6000 	mla	r0, r4, r0, r6
 800df0c:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
 800df10:	20002db6 	.word	0x20002db6
 800df14:	08024ecc 	.word	0x08024ecc

0800df18 <_ZN8touchgfx3HAL13blitCopyGlyphEPKhtttttNS_9colortypeEhNS_14BlitOperationsEb>:
 800df18:	b5f0      	push	{r4, r5, r6, r7, lr}
 800df1a:	b08b      	sub	sp, #44	@ 0x2c
 800df1c:	461f      	mov	r7, r3
 800df1e:	f8bd 3054 	ldrh.w	r3, [sp, #84]	@ 0x54
 800df22:	e9cd 3101 	strd	r3, r1, [sp, #4]
 800df26:	f8bd 3040 	ldrh.w	r3, [sp, #64]	@ 0x40
 800df2a:	f8ad 3018 	strh.w	r3, [sp, #24]
 800df2e:	f8bd 3044 	ldrh.w	r3, [sp, #68]	@ 0x44
 800df32:	f8ad 301a 	strh.w	r3, [sp, #26]
 800df36:	f8bd 3048 	ldrh.w	r3, [sp, #72]	@ 0x48
 800df3a:	f8ad 301c 	strh.w	r3, [sp, #28]
 800df3e:	2500      	movs	r5, #0
 800df40:	f89d 3050 	ldrb.w	r3, [sp, #80]	@ 0x50
 800df44:	f88d 3020 	strb.w	r3, [sp, #32]
 800df48:	4604      	mov	r4, r0
 800df4a:	4616      	mov	r6, r2
 800df4c:	9504      	str	r5, [sp, #16]
 800df4e:	f7ff fe9f 	bl	800dc90 <_ZN8touchgfx3HAL20getClientFrameBufferEv>
 800df52:	463a      	mov	r2, r7
 800df54:	4631      	mov	r1, r6
 800df56:	4603      	mov	r3, r0
 800df58:	4620      	mov	r0, r4
 800df5a:	f7ff ffc1 	bl	800dee0 <_ZNK8touchgfx3HAL13getDstAddressEttPt>
 800df5e:	4b0e      	ldr	r3, [pc, #56]	@ (800df98 <_ZN8touchgfx3HAL13blitCopyGlyphEPKhtttttNS_9colortypeEhNS_14BlitOperationsEb+0x80>)
 800df60:	9005      	str	r0, [sp, #20]
 800df62:	881b      	ldrh	r3, [r3, #0]
 800df64:	f8ad 301e 	strh.w	r3, [sp, #30]
 800df68:	f7fa fcca 	bl	8008900 <_ZN8touchgfx3HAL3lcdEv>
 800df6c:	6803      	ldr	r3, [r0, #0]
 800df6e:	6adb      	ldr	r3, [r3, #44]	@ 0x2c
 800df70:	4798      	blx	r3
 800df72:	9b13      	ldr	r3, [sp, #76]	@ 0x4c
 800df74:	f88d 0022 	strb.w	r0, [sp, #34]	@ 0x22
 800df78:	f88d 0021 	strb.w	r0, [sp, #33]	@ 0x21
 800df7c:	9304      	str	r3, [sp, #16]
 800df7e:	6860      	ldr	r0, [r4, #4]
 800df80:	f89d 3058 	ldrb.w	r3, [sp, #88]	@ 0x58
 800df84:	f88d 3023 	strb.w	r3, [sp, #35]	@ 0x23
 800df88:	f88d 5024 	strb.w	r5, [sp, #36]	@ 0x24
 800df8c:	6803      	ldr	r3, [r0, #0]
 800df8e:	a901      	add	r1, sp, #4
 800df90:	685b      	ldr	r3, [r3, #4]
 800df92:	4798      	blx	r3
 800df94:	b00b      	add	sp, #44	@ 0x2c
 800df96:	bdf0      	pop	{r4, r5, r6, r7, pc}
 800df98:	20002db6 	.word	0x20002db6

0800df9c <_ZN8touchgfx3HAL20copyFBRegionToMemoryENS_4RectE>:
 800df9c:	b5f0      	push	{r4, r5, r6, r7, lr}
 800df9e:	b08d      	sub	sp, #52	@ 0x34
 800dfa0:	466b      	mov	r3, sp
 800dfa2:	e883 0006 	stmia.w	r3, {r1, r2}
 800dfa6:	2300      	movs	r3, #0
 800dfa8:	9306      	str	r3, [sp, #24]
 800dfaa:	6803      	ldr	r3, [r0, #0]
 800dfac:	f8bd 6000 	ldrh.w	r6, [sp]
 800dfb0:	6b1b      	ldr	r3, [r3, #48]	@ 0x30
 800dfb2:	f8bd 7002 	ldrh.w	r7, [sp, #2]
 800dfb6:	2501      	movs	r5, #1
 800dfb8:	9503      	str	r5, [sp, #12]
 800dfba:	4604      	mov	r4, r0
 800dfbc:	4798      	blx	r3
 800dfbe:	463a      	mov	r2, r7
 800dfc0:	4631      	mov	r1, r6
 800dfc2:	4603      	mov	r3, r0
 800dfc4:	4620      	mov	r0, r4
 800dfc6:	f7ff ff8b 	bl	800dee0 <_ZNK8touchgfx3HAL13getDstAddressEttPt>
 800dfca:	6c63      	ldr	r3, [r4, #68]	@ 0x44
 800dfcc:	9307      	str	r3, [sp, #28]
 800dfce:	f8bd 3004 	ldrh.w	r3, [sp, #4]
 800dfd2:	f8ad 3020 	strh.w	r3, [sp, #32]
 800dfd6:	f8bd 3006 	ldrh.w	r3, [sp, #6]
 800dfda:	f8ad 3022 	strh.w	r3, [sp, #34]	@ 0x22
 800dfde:	4b0f      	ldr	r3, [pc, #60]	@ (800e01c <_ZN8touchgfx3HAL20copyFBRegionToMemoryENS_4RectE+0x80>)
 800dfe0:	9004      	str	r0, [sp, #16]
 800dfe2:	881b      	ldrh	r3, [r3, #0]
 800dfe4:	f8ad 3024 	strh.w	r3, [sp, #36]	@ 0x24
 800dfe8:	f8ad 3026 	strh.w	r3, [sp, #38]	@ 0x26
 800dfec:	f7fa fc88 	bl	8008900 <_ZN8touchgfx3HAL3lcdEv>
 800dff0:	6803      	ldr	r3, [r0, #0]
 800dff2:	6adb      	ldr	r3, [r3, #44]	@ 0x2c
 800dff4:	4798      	blx	r3
 800dff6:	23ff      	movs	r3, #255	@ 0xff
 800dff8:	f88d 0029 	strb.w	r0, [sp, #41]	@ 0x29
 800dffc:	f88d 002a 	strb.w	r0, [sp, #42]	@ 0x2a
 800e000:	6860      	ldr	r0, [r4, #4]
 800e002:	f88d 3028 	strb.w	r3, [sp, #40]	@ 0x28
 800e006:	f88d 502b 	strb.w	r5, [sp, #43]	@ 0x2b
 800e00a:	f88d 502c 	strb.w	r5, [sp, #44]	@ 0x2c
 800e00e:	6803      	ldr	r3, [r0, #0]
 800e010:	a903      	add	r1, sp, #12
 800e012:	685b      	ldr	r3, [r3, #4]
 800e014:	4798      	blx	r3
 800e016:	6c60      	ldr	r0, [r4, #68]	@ 0x44
 800e018:	b00d      	add	sp, #52	@ 0x34
 800e01a:	bdf0      	pop	{r4, r5, r6, r7, pc}
 800e01c:	20002db6 	.word	0x20002db6

0800e020 <_ZN8touchgfx3HAL20copyFBRegionToMemoryENS_4RectEPtm>:
 800e020:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 800e024:	b08c      	sub	sp, #48	@ 0x30
 800e026:	461e      	mov	r6, r3
 800e028:	466d      	mov	r5, sp
 800e02a:	2300      	movs	r3, #0
 800e02c:	e885 0006 	stmia.w	r5, {r1, r2}
 800e030:	9306      	str	r3, [sp, #24]
 800e032:	6803      	ldr	r3, [r0, #0]
 800e034:	f8bd 7000 	ldrh.w	r7, [sp]
 800e038:	6b1b      	ldr	r3, [r3, #48]	@ 0x30
 800e03a:	f8bd 8002 	ldrh.w	r8, [sp, #2]
 800e03e:	2501      	movs	r5, #1
 800e040:	9503      	str	r5, [sp, #12]
 800e042:	4604      	mov	r4, r0
 800e044:	4798      	blx	r3
 800e046:	4642      	mov	r2, r8
 800e048:	4639      	mov	r1, r7
 800e04a:	4603      	mov	r3, r0
 800e04c:	4620      	mov	r0, r4
 800e04e:	f7ff ff47 	bl	800dee0 <_ZNK8touchgfx3HAL13getDstAddressEttPt>
 800e052:	f8bd 3004 	ldrh.w	r3, [sp, #4]
 800e056:	f8ad 3020 	strh.w	r3, [sp, #32]
 800e05a:	f8bd 3006 	ldrh.w	r3, [sp, #6]
 800e05e:	f8ad 3022 	strh.w	r3, [sp, #34]	@ 0x22
 800e062:	4b11      	ldr	r3, [pc, #68]	@ (800e0a8 <_ZN8touchgfx3HAL20copyFBRegionToMemoryENS_4RectEPtm+0x88>)
 800e064:	9004      	str	r0, [sp, #16]
 800e066:	881b      	ldrh	r3, [r3, #0]
 800e068:	f8ad 3024 	strh.w	r3, [sp, #36]	@ 0x24
 800e06c:	9b12      	ldr	r3, [sp, #72]	@ 0x48
 800e06e:	f8ad 3026 	strh.w	r3, [sp, #38]	@ 0x26
 800e072:	9607      	str	r6, [sp, #28]
 800e074:	f7fa fc44 	bl	8008900 <_ZN8touchgfx3HAL3lcdEv>
 800e078:	6803      	ldr	r3, [r0, #0]
 800e07a:	6adb      	ldr	r3, [r3, #44]	@ 0x2c
 800e07c:	4798      	blx	r3
 800e07e:	23ff      	movs	r3, #255	@ 0xff
 800e080:	f88d 0029 	strb.w	r0, [sp, #41]	@ 0x29
 800e084:	f88d 002a 	strb.w	r0, [sp, #42]	@ 0x2a
 800e088:	6860      	ldr	r0, [r4, #4]
 800e08a:	f88d 3028 	strb.w	r3, [sp, #40]	@ 0x28
 800e08e:	f88d 502b 	strb.w	r5, [sp, #43]	@ 0x2b
 800e092:	f88d 502c 	strb.w	r5, [sp, #44]	@ 0x2c
 800e096:	6803      	ldr	r3, [r0, #0]
 800e098:	a903      	add	r1, sp, #12
 800e09a:	685b      	ldr	r3, [r3, #4]
 800e09c:	4798      	blx	r3
 800e09e:	4630      	mov	r0, r6
 800e0a0:	b00c      	add	sp, #48	@ 0x30
 800e0a2:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
 800e0a6:	bf00      	nop
 800e0a8:	20002db6 	.word	0x20002db6

0800e0ac <_ZN8touchgfx3HAL25copyFromTFTToClientBufferENS_4RectE>:
 800e0ac:	b5f0      	push	{r4, r5, r6, r7, lr}
 800e0ae:	b085      	sub	sp, #20
 800e0b0:	ac02      	add	r4, sp, #8
 800e0b2:	e884 0006 	stmia.w	r4, {r1, r2}
 800e0b6:	4605      	mov	r5, r0
 800e0b8:	f8bd 6008 	ldrh.w	r6, [sp, #8]
 800e0bc:	f8bd 700a 	ldrh.w	r7, [sp, #10]
 800e0c0:	f7ff fde6 	bl	800dc90 <_ZN8touchgfx3HAL20getClientFrameBufferEv>
 800e0c4:	463a      	mov	r2, r7
 800e0c6:	4603      	mov	r3, r0
 800e0c8:	4631      	mov	r1, r6
 800e0ca:	4628      	mov	r0, r5
 800e0cc:	f7ff ff08 	bl	800dee0 <_ZNK8touchgfx3HAL13getDstAddressEttPt>
 800e0d0:	4a05      	ldr	r2, [pc, #20]	@ (800e0e8 <_ZN8touchgfx3HAL25copyFromTFTToClientBufferENS_4RectE+0x3c>)
 800e0d2:	682b      	ldr	r3, [r5, #0]
 800e0d4:	8812      	ldrh	r2, [r2, #0]
 800e0d6:	9200      	str	r2, [sp, #0]
 800e0d8:	6ede      	ldr	r6, [r3, #108]	@ 0x6c
 800e0da:	e894 0006 	ldmia.w	r4, {r1, r2}
 800e0de:	4603      	mov	r3, r0
 800e0e0:	4628      	mov	r0, r5
 800e0e2:	47b0      	blx	r6
 800e0e4:	b005      	add	sp, #20
 800e0e6:	bdf0      	pop	{r4, r5, r6, r7, pc}
 800e0e8:	20002db6 	.word	0x20002db6

0800e0ec <_ZN8touchgfx3HAL16swapFrameBuffersEv>:
 800e0ec:	b570      	push	{r4, r5, r6, lr}
 800e0ee:	f890 306e 	ldrb.w	r3, [r0, #110]	@ 0x6e
 800e0f2:	4604      	mov	r4, r0
 800e0f4:	b19b      	cbz	r3, 800e11e <_ZN8touchgfx3HAL16swapFrameBuffersEv+0x32>
 800e0f6:	2002      	movs	r0, #2
 800e0f8:	f7fd f842 	bl	800b180 <_ZN8touchgfx4GPIO6toggleENS0_7GPIO_IDE>
 800e0fc:	2300      	movs	r3, #0
 800e0fe:	f884 306e 	strb.w	r3, [r4, #110]	@ 0x6e
 800e102:	f884 306d 	strb.w	r3, [r4, #109]	@ 0x6d
 800e106:	6823      	ldr	r3, [r4, #0]
 800e108:	4620      	mov	r0, r4
 800e10a:	f8d3 50b8 	ldr.w	r5, [r3, #184]	@ 0xb8
 800e10e:	f7ff fdbf 	bl	800dc90 <_ZN8touchgfx3HAL20getClientFrameBufferEv>
 800e112:	462b      	mov	r3, r5
 800e114:	4601      	mov	r1, r0
 800e116:	4620      	mov	r0, r4
 800e118:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
 800e11c:	4718      	bx	r3
 800e11e:	bd70      	pop	{r4, r5, r6, pc}

0800e120 <_ZN8touchgfx3HAL18setRenderingMethodENS0_15RenderingMethodE>:
 800e120:	b538      	push	{r3, r4, r5, lr}
 800e122:	f890 307b 	ldrb.w	r3, [r0, #123]	@ 0x7b
 800e126:	428b      	cmp	r3, r1
 800e128:	4604      	mov	r4, r0
 800e12a:	460d      	mov	r5, r1
 800e12c:	d006      	beq.n	800e13c <_ZN8touchgfx3HAL18setRenderingMethodENS0_15RenderingMethodE+0x1c>
 800e12e:	6803      	ldr	r3, [r0, #0]
 800e130:	b929      	cbnz	r1, 800e13e <_ZN8touchgfx3HAL18setRenderingMethodENS0_15RenderingMethodE+0x1e>
 800e132:	f8d3 30c8 	ldr.w	r3, [r3, #200]	@ 0xc8
 800e136:	4798      	blx	r3
 800e138:	f884 507b 	strb.w	r5, [r4, #123]	@ 0x7b
 800e13c:	bd38      	pop	{r3, r4, r5, pc}
 800e13e:	f8d3 30cc 	ldr.w	r3, [r3, #204]	@ 0xcc
 800e142:	e7f8      	b.n	800e136 <_ZN8touchgfx3HAL18setRenderingMethodENS0_15RenderingMethodE+0x16>

0800e144 <_ZN8touchgfx3HAL15lockFrameBufferEv>:
 800e144:	b510      	push	{r4, lr}
 800e146:	4b0d      	ldr	r3, [pc, #52]	@ (800e17c <_ZN8touchgfx3HAL15lockFrameBufferEv+0x38>)
 800e148:	781b      	ldrb	r3, [r3, #0]
 800e14a:	4604      	mov	r4, r0
 800e14c:	b95b      	cbnz	r3, 800e166 <_ZN8touchgfx3HAL15lockFrameBufferEv+0x22>
 800e14e:	f890 3048 	ldrb.w	r3, [r0, #72]	@ 0x48
 800e152:	2b02      	cmp	r3, #2
 800e154:	d007      	beq.n	800e166 <_ZN8touchgfx3HAL15lockFrameBufferEv+0x22>
 800e156:	6840      	ldr	r0, [r0, #4]
 800e158:	f000 f90e 	bl	800e378 <_ZN8touchgfx13DMA_Interface15isDmaQueueEmptyEv>
 800e15c:	b118      	cbz	r0, 800e166 <_ZN8touchgfx3HAL15lockFrameBufferEv+0x22>
 800e15e:	6862      	ldr	r2, [r4, #4]
 800e160:	7a53      	ldrb	r3, [r2, #9]
 800e162:	2b00      	cmp	r3, #0
 800e164:	d0fc      	beq.n	800e160 <_ZN8touchgfx3HAL15lockFrameBufferEv+0x1c>
 800e166:	f7fd fa95 	bl	800b694 <_ZN8touchgfx10OSWrappers24takeFrameBufferSemaphoreEv>
 800e16a:	4620      	mov	r0, r4
 800e16c:	2100      	movs	r1, #0
 800e16e:	f7ff ffd7 	bl	800e120 <_ZN8touchgfx3HAL18setRenderingMethodENS0_15RenderingMethodE>
 800e172:	4620      	mov	r0, r4
 800e174:	f7ff fd8c 	bl	800dc90 <_ZN8touchgfx3HAL20getClientFrameBufferEv>
 800e178:	bd10      	pop	{r4, pc}
 800e17a:	bf00      	nop
 800e17c:	20002dba 	.word	0x20002dba

0800e180 <_ZN8touchgfx13DMA_Interface5flushEv>:
 800e180:	6803      	ldr	r3, [r0, #0]
 800e182:	6c5b      	ldr	r3, [r3, #68]	@ 0x44
 800e184:	4718      	bx	r3

0800e186 <_ZN8touchgfx17LockFreeDMA_Queue7isEmptyEv>:
 800e186:	e9d0 2003 	ldrd	r2, r0, [r0, #12]
 800e18a:	1a13      	subs	r3, r2, r0
 800e18c:	4258      	negs	r0, r3
 800e18e:	4158      	adcs	r0, r3
 800e190:	4770      	bx	lr

0800e192 <_ZN8touchgfx17LockFreeDMA_Queue6isFullEv>:
 800e192:	e9d0 2303 	ldrd	r2, r3, [r0, #12]
 800e196:	1a9b      	subs	r3, r3, r2
 800e198:	2b00      	cmp	r3, #0
 800e19a:	bfdc      	itt	le
 800e19c:	6882      	ldrle	r2, [r0, #8]
 800e19e:	189b      	addle	r3, r3, r2
 800e1a0:	2b01      	cmp	r3, #1
 800e1a2:	bfcc      	ite	gt
 800e1a4:	2000      	movgt	r0, #0
 800e1a6:	2001      	movle	r0, #1
 800e1a8:	4770      	bx	lr

0800e1aa <_ZN8touchgfx17LockFreeDMA_Queue5firstEv>:
 800e1aa:	6902      	ldr	r2, [r0, #16]
 800e1ac:	6843      	ldr	r3, [r0, #4]
 800e1ae:	2024      	movs	r0, #36	@ 0x24
 800e1b0:	fb00 3002 	mla	r0, r0, r2, r3
 800e1b4:	4770      	bx	lr

0800e1b6 <_ZN8touchgfx13DMA_Interface13seedExecutionEv>:
 800e1b6:	6803      	ldr	r3, [r0, #0]
 800e1b8:	691b      	ldr	r3, [r3, #16]
 800e1ba:	4718      	bx	r3

0800e1bc <_ZN8touchgfx13DMA_Interface7executeEv>:
 800e1bc:	b570      	push	{r4, r5, r6, lr}
 800e1be:	2301      	movs	r3, #1
 800e1c0:	7203      	strb	r3, [r0, #8]
 800e1c2:	4604      	mov	r4, r0
 800e1c4:	6840      	ldr	r0, [r0, #4]
 800e1c6:	6803      	ldr	r3, [r0, #0]
 800e1c8:	699b      	ldr	r3, [r3, #24]
 800e1ca:	4798      	blx	r3
 800e1cc:	6803      	ldr	r3, [r0, #0]
 800e1ce:	2b40      	cmp	r3, #64	@ 0x40
 800e1d0:	4605      	mov	r5, r0
 800e1d2:	d00c      	beq.n	800e1ee <_ZN8touchgfx13DMA_Interface7executeEv+0x32>
 800e1d4:	d810      	bhi.n	800e1f8 <_ZN8touchgfx13DMA_Interface7executeEv+0x3c>
 800e1d6:	2b04      	cmp	r3, #4
 800e1d8:	d01d      	beq.n	800e216 <_ZN8touchgfx13DMA_Interface7executeEv+0x5a>
 800e1da:	d804      	bhi.n	800e1e6 <_ZN8touchgfx13DMA_Interface7executeEv+0x2a>
 800e1dc:	2b01      	cmp	r3, #1
 800e1de:	d006      	beq.n	800e1ee <_ZN8touchgfx13DMA_Interface7executeEv+0x32>
 800e1e0:	2b02      	cmp	r3, #2
 800e1e2:	d02c      	beq.n	800e23e <_ZN8touchgfx13DMA_Interface7executeEv+0x82>
 800e1e4:	bd70      	pop	{r4, r5, r6, pc}
 800e1e6:	2b08      	cmp	r3, #8
 800e1e8:	d01d      	beq.n	800e226 <_ZN8touchgfx13DMA_Interface7executeEv+0x6a>
 800e1ea:	2b20      	cmp	r3, #32
 800e1ec:	d1fa      	bne.n	800e1e4 <_ZN8touchgfx13DMA_Interface7executeEv+0x28>
 800e1ee:	6823      	ldr	r3, [r4, #0]
 800e1f0:	4620      	mov	r0, r4
 800e1f2:	6bdb      	ldr	r3, [r3, #60]	@ 0x3c
 800e1f4:	4798      	blx	r3
 800e1f6:	e013      	b.n	800e220 <_ZN8touchgfx13DMA_Interface7executeEv+0x64>
 800e1f8:	f5b3 7f00 	cmp.w	r3, #512	@ 0x200
 800e1fc:	d0f7      	beq.n	800e1ee <_ZN8touchgfx13DMA_Interface7executeEv+0x32>
 800e1fe:	d804      	bhi.n	800e20a <_ZN8touchgfx13DMA_Interface7executeEv+0x4e>
 800e200:	2b80      	cmp	r3, #128	@ 0x80
 800e202:	d0f4      	beq.n	800e1ee <_ZN8touchgfx13DMA_Interface7executeEv+0x32>
 800e204:	f5b3 7f80 	cmp.w	r3, #256	@ 0x100
 800e208:	e7f0      	b.n	800e1ec <_ZN8touchgfx13DMA_Interface7executeEv+0x30>
 800e20a:	f5b3 6f80 	cmp.w	r3, #1024	@ 0x400
 800e20e:	d0ee      	beq.n	800e1ee <_ZN8touchgfx13DMA_Interface7executeEv+0x32>
 800e210:	f5b3 6f00 	cmp.w	r3, #2048	@ 0x800
 800e214:	e7e5      	b.n	800e1e2 <_ZN8touchgfx13DMA_Interface7executeEv+0x26>
 800e216:	6823      	ldr	r3, [r4, #0]
 800e218:	7f01      	ldrb	r1, [r0, #28]
 800e21a:	6b9b      	ldr	r3, [r3, #56]	@ 0x38
 800e21c:	4620      	mov	r0, r4
 800e21e:	4798      	blx	r3
 800e220:	6823      	ldr	r3, [r4, #0]
 800e222:	6b1b      	ldr	r3, [r3, #48]	@ 0x30
 800e224:	e006      	b.n	800e234 <_ZN8touchgfx13DMA_Interface7executeEv+0x78>
 800e226:	6823      	ldr	r3, [r4, #0]
 800e228:	7f01      	ldrb	r1, [r0, #28]
 800e22a:	6b9b      	ldr	r3, [r3, #56]	@ 0x38
 800e22c:	4620      	mov	r0, r4
 800e22e:	4798      	blx	r3
 800e230:	6823      	ldr	r3, [r4, #0]
 800e232:	6b5b      	ldr	r3, [r3, #52]	@ 0x34
 800e234:	4629      	mov	r1, r5
 800e236:	4620      	mov	r0, r4
 800e238:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
 800e23c:	4718      	bx	r3
 800e23e:	6823      	ldr	r3, [r4, #0]
 800e240:	4620      	mov	r0, r4
 800e242:	6bdb      	ldr	r3, [r3, #60]	@ 0x3c
 800e244:	4798      	blx	r3
 800e246:	e7f3      	b.n	800e230 <_ZN8touchgfx13DMA_Interface7executeEv+0x74>

0800e248 <_ZN8touchgfx13DMA_Interface11enableAlphaEh>:
 800e248:	4770      	bx	lr

0800e24a <_ZN8touchgfx13DMA_Interface12disableAlphaEv>:
 800e24a:	4770      	bx	lr

0800e24c <_ZN8touchgfx17LockFreeDMA_Queue10pushCopyOfERKNS_6BlitOpE>:
 800e24c:	e9d0 3203 	ldrd	r3, r2, [r0, #12]
 800e250:	1ad2      	subs	r2, r2, r3
 800e252:	2a00      	cmp	r2, #0
 800e254:	b510      	push	{r4, lr}
 800e256:	bfdc      	itt	le
 800e258:	6884      	ldrle	r4, [r0, #8]
 800e25a:	1912      	addle	r2, r2, r4
 800e25c:	2a01      	cmp	r2, #1
 800e25e:	dd16      	ble.n	800e28e <_ZN8touchgfx17LockFreeDMA_Queue10pushCopyOfERKNS_6BlitOpE+0x42>
 800e260:	6842      	ldr	r2, [r0, #4]
 800e262:	2424      	movs	r4, #36	@ 0x24
 800e264:	fb04 2303 	mla	r3, r4, r3, r2
 800e268:	f101 0220 	add.w	r2, r1, #32
 800e26c:	f851 4b04 	ldr.w	r4, [r1], #4
 800e270:	f843 4b04 	str.w	r4, [r3], #4
 800e274:	4291      	cmp	r1, r2
 800e276:	d1f9      	bne.n	800e26c <_ZN8touchgfx17LockFreeDMA_Queue10pushCopyOfERKNS_6BlitOpE+0x20>
 800e278:	780a      	ldrb	r2, [r1, #0]
 800e27a:	701a      	strb	r2, [r3, #0]
 800e27c:	68c3      	ldr	r3, [r0, #12]
 800e27e:	6882      	ldr	r2, [r0, #8]
 800e280:	f3bf 8f5b 	dmb	ish
 800e284:	3301      	adds	r3, #1
 800e286:	429a      	cmp	r2, r3
 800e288:	bfd8      	it	le
 800e28a:	1a9b      	suble	r3, r3, r2
 800e28c:	60c3      	str	r3, [r0, #12]
 800e28e:	bd10      	pop	{r4, pc}

0800e290 <_ZN8touchgfx17LockFreeDMA_Queue3popEv>:
 800e290:	6903      	ldr	r3, [r0, #16]
 800e292:	6882      	ldr	r2, [r0, #8]
 800e294:	f3bf 8f5b 	dmb	ish
 800e298:	3301      	adds	r3, #1
 800e29a:	429a      	cmp	r2, r3
 800e29c:	bfd8      	it	le
 800e29e:	1a9b      	suble	r3, r3, r2
 800e2a0:	6103      	str	r3, [r0, #16]
 800e2a2:	4770      	bx	lr

0800e2a4 <_ZN8touchgfx13DMA_Interface10addToQueueERKNS_6BlitOpE>:
 800e2a4:	b570      	push	{r4, r5, r6, lr}
 800e2a6:	4604      	mov	r4, r0
 800e2a8:	460e      	mov	r6, r1
 800e2aa:	6860      	ldr	r0, [r4, #4]
 800e2ac:	6803      	ldr	r3, [r0, #0]
 800e2ae:	685b      	ldr	r3, [r3, #4]
 800e2b0:	4798      	blx	r3
 800e2b2:	2800      	cmp	r0, #0
 800e2b4:	d1f9      	bne.n	800e2aa <_ZN8touchgfx13DMA_Interface10addToQueueERKNS_6BlitOpE+0x6>
 800e2b6:	4d0d      	ldr	r5, [pc, #52]	@ (800e2ec <_ZN8touchgfx13DMA_Interface10addToQueueERKNS_6BlitOpE+0x48>)
 800e2b8:	6828      	ldr	r0, [r5, #0]
 800e2ba:	6803      	ldr	r3, [r0, #0]
 800e2bc:	6fdb      	ldr	r3, [r3, #124]	@ 0x7c
 800e2be:	4798      	blx	r3
 800e2c0:	f7fd fa0a 	bl	800b6d8 <_ZN8touchgfx10OSWrappers27tryTakeFrameBufferSemaphoreEv>
 800e2c4:	6828      	ldr	r0, [r5, #0]
 800e2c6:	2101      	movs	r1, #1
 800e2c8:	f7ff ff2a 	bl	800e120 <_ZN8touchgfx3HAL18setRenderingMethodENS0_15RenderingMethodE>
 800e2cc:	6860      	ldr	r0, [r4, #4]
 800e2ce:	6803      	ldr	r3, [r0, #0]
 800e2d0:	4631      	mov	r1, r6
 800e2d2:	689b      	ldr	r3, [r3, #8]
 800e2d4:	4798      	blx	r3
 800e2d6:	6823      	ldr	r3, [r4, #0]
 800e2d8:	4620      	mov	r0, r4
 800e2da:	6adb      	ldr	r3, [r3, #44]	@ 0x2c
 800e2dc:	4798      	blx	r3
 800e2de:	6828      	ldr	r0, [r5, #0]
 800e2e0:	6803      	ldr	r3, [r0, #0]
 800e2e2:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
 800e2e6:	6f9b      	ldr	r3, [r3, #120]	@ 0x78
 800e2e8:	4718      	bx	r3
 800e2ea:	bf00      	nop
 800e2ec:	20002dbc 	.word	0x20002dbc

0800e2f0 <_ZN8touchgfx13DMA_Interface27waitForFrameBufferSemaphoreEv>:
 800e2f0:	b508      	push	{r3, lr}
 800e2f2:	f7fd f9cf 	bl	800b694 <_ZN8touchgfx10OSWrappers24takeFrameBufferSemaphoreEv>
 800e2f6:	e8bd 4008 	ldmia.w	sp!, {r3, lr}
 800e2fa:	f7fd b9e1 	b.w	800b6c0 <_ZN8touchgfx10OSWrappers24giveFrameBufferSemaphoreEv>

0800e2fe <_ZN8touchgfx13DMA_Interface5startEv>:
 800e2fe:	b510      	push	{r4, lr}
 800e300:	4604      	mov	r4, r0
 800e302:	6840      	ldr	r0, [r0, #4]
 800e304:	6803      	ldr	r3, [r0, #0]
 800e306:	681b      	ldr	r3, [r3, #0]
 800e308:	4798      	blx	r3
 800e30a:	b948      	cbnz	r0, 800e320 <_ZN8touchgfx13DMA_Interface5startEv+0x22>
 800e30c:	7a63      	ldrb	r3, [r4, #9]
 800e30e:	b13b      	cbz	r3, 800e320 <_ZN8touchgfx13DMA_Interface5startEv+0x22>
 800e310:	7a23      	ldrb	r3, [r4, #8]
 800e312:	b92b      	cbnz	r3, 800e320 <_ZN8touchgfx13DMA_Interface5startEv+0x22>
 800e314:	6823      	ldr	r3, [r4, #0]
 800e316:	4620      	mov	r0, r4
 800e318:	6a5b      	ldr	r3, [r3, #36]	@ 0x24
 800e31a:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
 800e31e:	4718      	bx	r3
 800e320:	bd10      	pop	{r4, pc}

0800e322 <_ZN8touchgfx13DMA_Interface16executeCompletedEv>:
 800e322:	b570      	push	{r4, r5, r6, lr}
 800e324:	4604      	mov	r4, r0
 800e326:	6840      	ldr	r0, [r0, #4]
 800e328:	6803      	ldr	r3, [r0, #0]
 800e32a:	681b      	ldr	r3, [r3, #0]
 800e32c:	4798      	blx	r3
 800e32e:	4605      	mov	r5, r0
 800e330:	b930      	cbnz	r0, 800e340 <_ZN8touchgfx13DMA_Interface16executeCompletedEv+0x1e>
 800e332:	7a23      	ldrb	r3, [r4, #8]
 800e334:	b123      	cbz	r3, 800e340 <_ZN8touchgfx13DMA_Interface16executeCompletedEv+0x1e>
 800e336:	6860      	ldr	r0, [r4, #4]
 800e338:	6803      	ldr	r3, [r0, #0]
 800e33a:	695b      	ldr	r3, [r3, #20]
 800e33c:	4798      	blx	r3
 800e33e:	7225      	strb	r5, [r4, #8]
 800e340:	6860      	ldr	r0, [r4, #4]
 800e342:	6803      	ldr	r3, [r0, #0]
 800e344:	681b      	ldr	r3, [r3, #0]
 800e346:	4798      	blx	r3
 800e348:	b928      	cbnz	r0, 800e356 <_ZN8touchgfx13DMA_Interface16executeCompletedEv+0x34>
 800e34a:	6823      	ldr	r3, [r4, #0]
 800e34c:	4620      	mov	r0, r4
 800e34e:	6a5b      	ldr	r3, [r3, #36]	@ 0x24
 800e350:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
 800e354:	4718      	bx	r3
 800e356:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
 800e35a:	f7fd b9c9 	b.w	800b6f0 <_ZN8touchgfx10OSWrappers31giveFrameBufferSemaphoreFromISREv>
	...

0800e360 <_ZN8touchgfx17LockFreeDMA_QueueC1EPNS_6BlitOpEi>:
 800e360:	b510      	push	{r4, lr}
 800e362:	4c04      	ldr	r4, [pc, #16]	@ (800e374 <_ZN8touchgfx17LockFreeDMA_QueueC1EPNS_6BlitOpEi+0x14>)
 800e364:	6082      	str	r2, [r0, #8]
 800e366:	2200      	movs	r2, #0
 800e368:	e9c0 4100 	strd	r4, r1, [r0]
 800e36c:	e9c0 2203 	strd	r2, r2, [r0, #12]
 800e370:	bd10      	pop	{r4, pc}
 800e372:	bf00      	nop
 800e374:	08025008 	.word	0x08025008

0800e378 <_ZN8touchgfx13DMA_Interface15isDmaQueueEmptyEv>:
 800e378:	6840      	ldr	r0, [r0, #4]
 800e37a:	6803      	ldr	r3, [r0, #0]
 800e37c:	681b      	ldr	r3, [r3, #0]
 800e37e:	4718      	bx	r3

0800e380 <_ZNK8touchgfx14AbstractButton15getPressedStateEv>:
 800e380:	f890 002c 	ldrb.w	r0, [r0, #44]	@ 0x2c
 800e384:	4770      	bx	lr

0800e386 <_ZN8touchgfx14AbstractButton13executeActionEv>:
 800e386:	b510      	push	{r4, lr}
 800e388:	4604      	mov	r4, r0
 800e38a:	6a80      	ldr	r0, [r0, #40]	@ 0x28
 800e38c:	b150      	cbz	r0, 800e3a4 <_ZN8touchgfx14AbstractButton13executeActionEv+0x1e>
 800e38e:	6803      	ldr	r3, [r0, #0]
 800e390:	68db      	ldr	r3, [r3, #12]
 800e392:	4798      	blx	r3
 800e394:	b130      	cbz	r0, 800e3a4 <_ZN8touchgfx14AbstractButton13executeActionEv+0x1e>
 800e396:	6aa0      	ldr	r0, [r4, #40]	@ 0x28
 800e398:	6803      	ldr	r3, [r0, #0]
 800e39a:	4621      	mov	r1, r4
 800e39c:	689b      	ldr	r3, [r3, #8]
 800e39e:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
 800e3a2:	4718      	bx	r3
 800e3a4:	bd10      	pop	{r4, pc}

0800e3a6 <_ZN8touchgfx14AbstractButton16handleClickEventERKNS_10ClickEventE>:
 800e3a6:	b570      	push	{r4, r5, r6, lr}
 800e3a8:	790b      	ldrb	r3, [r1, #4]
 800e3aa:	f890 502c 	ldrb.w	r5, [r0, #44]	@ 0x2c
 800e3ae:	2b00      	cmp	r3, #0
 800e3b0:	bf0c      	ite	eq
 800e3b2:	2301      	moveq	r3, #1
 800e3b4:	2300      	movne	r3, #0
 800e3b6:	4604      	mov	r4, r0
 800e3b8:	460e      	mov	r6, r1
 800e3ba:	f880 302c 	strb.w	r3, [r0, #44]	@ 0x2c
 800e3be:	d109      	bne.n	800e3d4 <_ZN8touchgfx14AbstractButton16handleClickEventERKNS_10ClickEventE+0x2e>
 800e3c0:	b14d      	cbz	r5, 800e3d6 <_ZN8touchgfx14AbstractButton16handleClickEventERKNS_10ClickEventE+0x30>
 800e3c2:	7933      	ldrb	r3, [r6, #4]
 800e3c4:	2b01      	cmp	r3, #1
 800e3c6:	d10c      	bne.n	800e3e2 <_ZN8touchgfx14AbstractButton16handleClickEventERKNS_10ClickEventE+0x3c>
 800e3c8:	6823      	ldr	r3, [r4, #0]
 800e3ca:	4620      	mov	r0, r4
 800e3cc:	6e1b      	ldr	r3, [r3, #96]	@ 0x60
 800e3ce:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
 800e3d2:	4718      	bx	r3
 800e3d4:	b12d      	cbz	r5, 800e3e2 <_ZN8touchgfx14AbstractButton16handleClickEventERKNS_10ClickEventE+0x3c>
 800e3d6:	6823      	ldr	r3, [r4, #0]
 800e3d8:	4620      	mov	r0, r4
 800e3da:	695b      	ldr	r3, [r3, #20]
 800e3dc:	4798      	blx	r3
 800e3de:	2d00      	cmp	r5, #0
 800e3e0:	d1ef      	bne.n	800e3c2 <_ZN8touchgfx14AbstractButton16handleClickEventERKNS_10ClickEventE+0x1c>
 800e3e2:	bd70      	pop	{r4, r5, r6, pc}

0800e3e4 <_ZN8touchgfx12ToggleButton16handleClickEventERKNS_10ClickEventE>:
 800e3e4:	f890 302c 	ldrb.w	r3, [r0, #44]	@ 0x2c
 800e3e8:	b133      	cbz	r3, 800e3f8 <_ZN8touchgfx12ToggleButton16handleClickEventERKNS_10ClickEventE+0x14>
 800e3ea:	790b      	ldrb	r3, [r1, #4]
 800e3ec:	2b01      	cmp	r3, #1
 800e3ee:	bf01      	itttt	eq
 800e3f0:	8dc3      	ldrheq	r3, [r0, #46]	@ 0x2e
 800e3f2:	8e02      	ldrheq	r2, [r0, #48]	@ 0x30
 800e3f4:	85c2      	strheq	r2, [r0, #46]	@ 0x2e
 800e3f6:	8603      	strheq	r3, [r0, #48]	@ 0x30
 800e3f8:	f7ff bfd5 	b.w	800e3a6 <_ZN8touchgfx14AbstractButton16handleClickEventERKNS_10ClickEventE>

0800e3fc <_ZNK8touchgfx6Button17invalidateContentEv>:
 800e3fc:	f890 2032 	ldrb.w	r2, [r0, #50]	@ 0x32
 800e400:	b12a      	cbz	r2, 800e40e <_ZNK8touchgfx6Button17invalidateContentEv+0x12>
 800e402:	f890 2025 	ldrb.w	r2, [r0, #37]	@ 0x25
 800e406:	b112      	cbz	r2, 800e40e <_ZNK8touchgfx6Button17invalidateContentEv+0x12>
 800e408:	6803      	ldr	r3, [r0, #0]
 800e40a:	695b      	ldr	r3, [r3, #20]
 800e40c:	4718      	bx	r3
 800e40e:	4770      	bx	lr

0800e410 <_ZN8touchgfx12ToggleButton10forceStateEb>:
 800e410:	8e83      	ldrh	r3, [r0, #52]	@ 0x34
 800e412:	b129      	cbz	r1, 800e420 <_ZN8touchgfx12ToggleButton10forceStateEb+0x10>
 800e414:	8dc2      	ldrh	r2, [r0, #46]	@ 0x2e
 800e416:	429a      	cmp	r2, r3
 800e418:	d007      	beq.n	800e42a <_ZN8touchgfx12ToggleButton10forceStateEb+0x1a>
 800e41a:	8602      	strh	r2, [r0, #48]	@ 0x30
 800e41c:	85c3      	strh	r3, [r0, #46]	@ 0x2e
 800e41e:	4770      	bx	lr
 800e420:	8e02      	ldrh	r2, [r0, #48]	@ 0x30
 800e422:	429a      	cmp	r2, r3
 800e424:	bf1c      	itt	ne
 800e426:	85c2      	strhne	r2, [r0, #46]	@ 0x2e
 800e428:	8603      	strhne	r3, [r0, #48]	@ 0x30
 800e42a:	4770      	bx	lr

0800e42c <_ZNK8touchgfx8TextArea12getWildcard1Ev>:
 800e42c:	2000      	movs	r0, #0
 800e42e:	4770      	bx	lr

0800e430 <_ZNK8touchgfx8TextArea12getAlignmentEv>:
 800e430:	4b07      	ldr	r3, [pc, #28]	@ (800e450 <_ZNK8touchgfx8TextArea12getAlignmentEv+0x20>)
 800e432:	8d82      	ldrh	r2, [r0, #44]	@ 0x2c
 800e434:	881b      	ldrh	r3, [r3, #0]
 800e436:	4293      	cmp	r3, r2
 800e438:	bf81      	itttt	hi
 800e43a:	4b06      	ldrhi	r3, [pc, #24]	@ (800e454 <_ZNK8touchgfx8TextArea12getAlignmentEv+0x24>)
 800e43c:	681b      	ldrhi	r3, [r3, #0]
 800e43e:	eb03 0342 	addhi.w	r3, r3, r2, lsl #1
 800e442:	7858      	ldrbhi	r0, [r3, #1]
 800e444:	bf8c      	ite	hi
 800e446:	f000 0003 	andhi.w	r0, r0, #3
 800e44a:	2000      	movls	r0, #0
 800e44c:	4770      	bx	lr
 800e44e:	bf00      	nop
 800e450:	20002e10 	.word	0x20002e10
 800e454:	20002e0c 	.word	0x20002e0c

0800e458 <_ZNK8touchgfx8TextArea13getTextHeightEv>:
 800e458:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 800e45c:	4b10      	ldr	r3, [pc, #64]	@ (800e4a0 <_ZNK8touchgfx8TextArea13getTextHeightEv+0x48>)
 800e45e:	8d81      	ldrh	r1, [r0, #44]	@ 0x2c
 800e460:	881b      	ldrh	r3, [r3, #0]
 800e462:	428b      	cmp	r3, r1
 800e464:	4604      	mov	r4, r0
 800e466:	d918      	bls.n	800e49a <_ZNK8touchgfx8TextArea13getTextHeightEv+0x42>
 800e468:	6803      	ldr	r3, [r0, #0]
 800e46a:	6f9d      	ldr	r5, [r3, #120]	@ 0x78
 800e46c:	4b0d      	ldr	r3, [pc, #52]	@ (800e4a4 <_ZNK8touchgfx8TextArea13getTextHeightEv+0x4c>)
 800e46e:	6818      	ldr	r0, [r3, #0]
 800e470:	f7fc faaa 	bl	800a9c8 <_ZNK8touchgfx5Texts7getTextEt>
 800e474:	6823      	ldr	r3, [r4, #0]
 800e476:	4606      	mov	r6, r0
 800e478:	6fdb      	ldr	r3, [r3, #124]	@ 0x7c
 800e47a:	4620      	mov	r0, r4
 800e47c:	4798      	blx	r3
 800e47e:	6823      	ldr	r3, [r4, #0]
 800e480:	4607      	mov	r7, r0
 800e482:	f8d3 3080 	ldr.w	r3, [r3, #128]	@ 0x80
 800e486:	4620      	mov	r0, r4
 800e488:	4798      	blx	r3
 800e48a:	463a      	mov	r2, r7
 800e48c:	4603      	mov	r3, r0
 800e48e:	4631      	mov	r1, r6
 800e490:	4620      	mov	r0, r4
 800e492:	46ac      	mov	ip, r5
 800e494:	e8bd 41f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, lr}
 800e498:	4760      	bx	ip
 800e49a:	2000      	movs	r0, #0
 800e49c:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
 800e4a0:	20002e10 	.word	0x20002e10
 800e4a4:	20002e18 	.word	0x20002e18

0800e4a8 <_ZNK8touchgfx8TextArea12getTextWidthEv>:
 800e4a8:	e92d 43f7 	stmdb	sp!, {r0, r1, r2, r4, r5, r6, r7, r8, r9, lr}
 800e4ac:	4b17      	ldr	r3, [pc, #92]	@ (800e50c <_ZNK8touchgfx8TextArea12getTextWidthEv+0x64>)
 800e4ae:	8d81      	ldrh	r1, [r0, #44]	@ 0x2c
 800e4b0:	881b      	ldrh	r3, [r3, #0]
 800e4b2:	428b      	cmp	r3, r1
 800e4b4:	4604      	mov	r4, r0
 800e4b6:	d926      	bls.n	800e506 <_ZNK8touchgfx8TextArea12getTextWidthEv+0x5e>
 800e4b8:	4b15      	ldr	r3, [pc, #84]	@ (800e510 <_ZNK8touchgfx8TextArea12getTextWidthEv+0x68>)
 800e4ba:	681b      	ldr	r3, [r3, #0]
 800e4bc:	eb03 0241 	add.w	r2, r3, r1, lsl #1
 800e4c0:	f813 0011 	ldrb.w	r0, [r3, r1, lsl #1]
 800e4c4:	4b13      	ldr	r3, [pc, #76]	@ (800e514 <_ZNK8touchgfx8TextArea12getTextWidthEv+0x6c>)
 800e4c6:	7855      	ldrb	r5, [r2, #1]
 800e4c8:	681b      	ldr	r3, [r3, #0]
 800e4ca:	f853 6020 	ldr.w	r6, [r3, r0, lsl #2]
 800e4ce:	6833      	ldr	r3, [r6, #0]
 800e4d0:	69df      	ldr	r7, [r3, #28]
 800e4d2:	4b11      	ldr	r3, [pc, #68]	@ (800e518 <_ZNK8touchgfx8TextArea12getTextWidthEv+0x70>)
 800e4d4:	6818      	ldr	r0, [r3, #0]
 800e4d6:	f7fc fa77 	bl	800a9c8 <_ZNK8touchgfx5Texts7getTextEt>
 800e4da:	6823      	ldr	r3, [r4, #0]
 800e4dc:	4680      	mov	r8, r0
 800e4de:	6fdb      	ldr	r3, [r3, #124]	@ 0x7c
 800e4e0:	4620      	mov	r0, r4
 800e4e2:	4798      	blx	r3
 800e4e4:	6823      	ldr	r3, [r4, #0]
 800e4e6:	4681      	mov	r9, r0
 800e4e8:	f8d3 3080 	ldr.w	r3, [r3, #128]	@ 0x80
 800e4ec:	4620      	mov	r0, r4
 800e4ee:	4798      	blx	r3
 800e4f0:	f3c5 0581 	ubfx	r5, r5, #2, #2
 800e4f4:	9000      	str	r0, [sp, #0]
 800e4f6:	464b      	mov	r3, r9
 800e4f8:	4642      	mov	r2, r8
 800e4fa:	4629      	mov	r1, r5
 800e4fc:	4630      	mov	r0, r6
 800e4fe:	47b8      	blx	r7
 800e500:	b003      	add	sp, #12
 800e502:	e8bd 83f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, pc}
 800e506:	2000      	movs	r0, #0
 800e508:	e7fa      	b.n	800e500 <_ZNK8touchgfx8TextArea12getTextWidthEv+0x58>
 800e50a:	bf00      	nop
 800e50c:	20002e10 	.word	0x20002e10
 800e510:	20002e0c 	.word	0x20002e0c
 800e514:	20002e14 	.word	0x20002e14
 800e518:	20002e18 	.word	0x20002e18

0800e51c <_ZNK8touchgfx8TextArea19calculateTextHeightEPKtz>:
 800e51c:	b40e      	push	{r1, r2, r3}
 800e51e:	e92d 47f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
 800e522:	4b2f      	ldr	r3, [pc, #188]	@ (800e5e0 <_ZNK8touchgfx8TextArea19calculateTextHeightEPKtz+0xc4>)
 800e524:	881a      	ldrh	r2, [r3, #0]
 800e526:	8d83      	ldrh	r3, [r0, #44]	@ 0x2c
 800e528:	429a      	cmp	r2, r3
 800e52a:	b09d      	sub	sp, #116	@ 0x74
 800e52c:	4604      	mov	r4, r0
 800e52e:	d954      	bls.n	800e5da <_ZNK8touchgfx8TextArea19calculateTextHeightEPKtz+0xbe>
 800e530:	f8df 90b0 	ldr.w	r9, [pc, #176]	@ 800e5e4 <_ZNK8touchgfx8TextArea19calculateTextHeightEPKtz+0xc8>
 800e534:	f8df 80b0 	ldr.w	r8, [pc, #176]	@ 800e5e8 <_ZNK8touchgfx8TextArea19calculateTextHeightEPKtz+0xcc>
 800e538:	aa26      	add	r2, sp, #152	@ 0x98
 800e53a:	9202      	str	r2, [sp, #8]
 800e53c:	f8d9 2000 	ldr.w	r2, [r9]
 800e540:	f812 2013 	ldrb.w	r2, [r2, r3, lsl #1]
 800e544:	f8d8 3000 	ldr.w	r3, [r8]
 800e548:	f853 5022 	ldr.w	r5, [r3, r2, lsl #2]
 800e54c:	682b      	ldr	r3, [r5, #0]
 800e54e:	4628      	mov	r0, r5
 800e550:	6b9b      	ldr	r3, [r3, #56]	@ 0x38
 800e552:	4798      	blx	r3
 800e554:	b207      	sxth	r7, r0
 800e556:	4606      	mov	r6, r0
 800e558:	a803      	add	r0, sp, #12
 800e55a:	f003 fe5b 	bl	8012214 <_ZN8touchgfx12TextProviderC1Ev>
 800e55e:	682b      	ldr	r3, [r5, #0]
 800e560:	4628      	mov	r0, r5
 800e562:	6cdb      	ldr	r3, [r3, #76]	@ 0x4c
 800e564:	4798      	blx	r3
 800e566:	682b      	ldr	r3, [r5, #0]
 800e568:	4682      	mov	sl, r0
 800e56a:	6d1b      	ldr	r3, [r3, #80]	@ 0x50
 800e56c:	4628      	mov	r0, r5
 800e56e:	4798      	blx	r3
 800e570:	4653      	mov	r3, sl
 800e572:	9000      	str	r0, [sp, #0]
 800e574:	9a02      	ldr	r2, [sp, #8]
 800e576:	9925      	ldr	r1, [sp, #148]	@ 0x94
 800e578:	a803      	add	r0, sp, #12
 800e57a:	f003 fea6 	bl	80122ca <_ZN8touchgfx12TextProvider10initializeEPKtSt9__va_listS2_PKNS_24FontContextualFormsTableE>
 800e57e:	8da2      	ldrh	r2, [r4, #44]	@ 0x2c
 800e580:	f8d9 3000 	ldr.w	r3, [r9]
 800e584:	f894 c037 	ldrb.w	ip, [r4, #55]	@ 0x37
 800e588:	8925      	ldrh	r5, [r4, #8]
 800e58a:	f813 0012 	ldrb.w	r0, [r3, r2, lsl #1]
 800e58e:	eb03 0142 	add.w	r1, r3, r2, lsl #1
 800e592:	eba5 050c 	sub.w	r5, r5, ip
 800e596:	784a      	ldrb	r2, [r1, #1]
 800e598:	f8d8 3000 	ldr.w	r3, [r8]
 800e59c:	f894 1039 	ldrb.w	r1, [r4, #57]	@ 0x39
 800e5a0:	b22d      	sxth	r5, r5
 800e5a2:	9500      	str	r5, [sp, #0]
 800e5a4:	f853 3020 	ldr.w	r3, [r3, r0, lsl #2]
 800e5a8:	f3c2 0281 	ubfx	r2, r2, #2, #2
 800e5ac:	a803      	add	r0, sp, #12
 800e5ae:	f001 fce1 	bl	800ff74 <_ZN8touchgfx3LCD11getNumLinesERNS_12TextProviderENS_14WideTextActionEhPKNS_4FontEs>
 800e5b2:	f9b4 2034 	ldrsh.w	r2, [r4, #52]	@ 0x34
 800e5b6:	18b9      	adds	r1, r7, r2
 800e5b8:	2900      	cmp	r1, #0
 800e5ba:	b203      	sxth	r3, r0
 800e5bc:	dd0b      	ble.n	800e5d6 <_ZNK8touchgfx8TextArea19calculateTextHeightEPKtz+0xba>
 800e5be:	3b01      	subs	r3, #1
 800e5c0:	fb13 f302 	smulbb	r3, r3, r2
 800e5c4:	fb16 3300 	smlabb	r3, r6, r0, r3
 800e5c8:	b21f      	sxth	r7, r3
 800e5ca:	4638      	mov	r0, r7
 800e5cc:	b01d      	add	sp, #116	@ 0x74
 800e5ce:	e8bd 47f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
 800e5d2:	b003      	add	sp, #12
 800e5d4:	4770      	bx	lr
 800e5d6:	2b00      	cmp	r3, #0
 800e5d8:	dcf7      	bgt.n	800e5ca <_ZNK8touchgfx8TextArea19calculateTextHeightEPKtz+0xae>
 800e5da:	2700      	movs	r7, #0
 800e5dc:	e7f5      	b.n	800e5ca <_ZNK8touchgfx8TextArea19calculateTextHeightEPKtz+0xae>
 800e5de:	bf00      	nop
 800e5e0:	20002e10 	.word	0x20002e10
 800e5e4:	20002e0c 	.word	0x20002e0c
 800e5e8:	20002e14 	.word	0x20002e14

0800e5ec <_ZNK8touchgfx8TextArea21calculateBoundingAreaEv>:
 800e5ec:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 800e5f0:	4bbc      	ldr	r3, [pc, #752]	@ (800e8e4 <_ZNK8touchgfx8TextArea21calculateBoundingAreaEv+0x2f8>)
 800e5f2:	460c      	mov	r4, r1
 800e5f4:	881b      	ldrh	r3, [r3, #0]
 800e5f6:	8d89      	ldrh	r1, [r1, #44]	@ 0x2c
 800e5f8:	428b      	cmp	r3, r1
 800e5fa:	b0a9      	sub	sp, #164	@ 0xa4
 800e5fc:	4680      	mov	r8, r0
 800e5fe:	d809      	bhi.n	800e614 <_ZNK8touchgfx8TextArea21calculateBoundingAreaEv+0x28>
 800e600:	2300      	movs	r3, #0
 800e602:	f04f 32ff 	mov.w	r2, #4294967295
 800e606:	e9c0 3200 	strd	r3, r2, [r0]
 800e60a:	6083      	str	r3, [r0, #8]
 800e60c:	4640      	mov	r0, r8
 800e60e:	b029      	add	sp, #164	@ 0xa4
 800e610:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 800e614:	4eb4      	ldr	r6, [pc, #720]	@ (800e8e8 <_ZNK8touchgfx8TextArea21calculateBoundingAreaEv+0x2fc>)
 800e616:	6833      	ldr	r3, [r6, #0]
 800e618:	f813 2011 	ldrb.w	r2, [r3, r1, lsl #1]
 800e61c:	4bb3      	ldr	r3, [pc, #716]	@ (800e8ec <_ZNK8touchgfx8TextArea21calculateBoundingAreaEv+0x300>)
 800e61e:	681b      	ldr	r3, [r3, #0]
 800e620:	f853 5022 	ldr.w	r5, [r3, r2, lsl #2]
 800e624:	4bb2      	ldr	r3, [pc, #712]	@ (800e8f0 <_ZNK8touchgfx8TextArea21calculateBoundingAreaEv+0x304>)
 800e626:	6818      	ldr	r0, [r3, #0]
 800e628:	f7fc f9ce 	bl	800a9c8 <_ZNK8touchgfx5Texts7getTextEt>
 800e62c:	682b      	ldr	r3, [r5, #0]
 800e62e:	4681      	mov	r9, r0
 800e630:	6b9b      	ldr	r3, [r3, #56]	@ 0x38
 800e632:	4628      	mov	r0, r5
 800e634:	4798      	blx	r3
 800e636:	8ea7      	ldrh	r7, [r4, #52]	@ 0x34
 800e638:	b203      	sxth	r3, r0
 800e63a:	4407      	add	r7, r0
 800e63c:	9304      	str	r3, [sp, #16]
 800e63e:	b2bb      	uxth	r3, r7
 800e640:	9303      	str	r3, [sp, #12]
 800e642:	f894 3039 	ldrb.w	r3, [r4, #57]	@ 0x39
 800e646:	4682      	mov	sl, r0
 800e648:	a80f      	add	r0, sp, #60	@ 0x3c
 800e64a:	2b00      	cmp	r3, #0
 800e64c:	f040 80a6 	bne.w	800e79c <_ZNK8touchgfx8TextArea21calculateBoundingAreaEv+0x1b0>
 800e650:	f003 fde0 	bl	8012214 <_ZN8touchgfx12TextProviderC1Ev>
 800e654:	682b      	ldr	r3, [r5, #0]
 800e656:	4628      	mov	r0, r5
 800e658:	6cdb      	ldr	r3, [r3, #76]	@ 0x4c
 800e65a:	4798      	blx	r3
 800e65c:	682b      	ldr	r3, [r5, #0]
 800e65e:	4606      	mov	r6, r0
 800e660:	6d1b      	ldr	r3, [r3, #80]	@ 0x50
 800e662:	4628      	mov	r0, r5
 800e664:	4798      	blx	r3
 800e666:	6823      	ldr	r3, [r4, #0]
 800e668:	4607      	mov	r7, r0
 800e66a:	6fdb      	ldr	r3, [r3, #124]	@ 0x7c
 800e66c:	4620      	mov	r0, r4
 800e66e:	4798      	blx	r3
 800e670:	6823      	ldr	r3, [r4, #0]
 800e672:	4683      	mov	fp, r0
 800e674:	f8d3 3080 	ldr.w	r3, [r3, #128]	@ 0x80
 800e678:	4620      	mov	r0, r4
 800e67a:	4798      	blx	r3
 800e67c:	463b      	mov	r3, r7
 800e67e:	e9cd b000 	strd	fp, r0, [sp]
 800e682:	4649      	mov	r1, r9
 800e684:	4632      	mov	r2, r6
 800e686:	a80f      	add	r0, sp, #60	@ 0x3c
 800e688:	f003 fe34 	bl	80122f4 <_ZN8touchgfx12TextProvider10initializeEPKtS2_PKNS_24FontContextualFormsTableEz>
 800e68c:	f894 3038 	ldrb.w	r3, [r4, #56]	@ 0x38
 800e690:	f8df b254 	ldr.w	fp, [pc, #596]	@ 800e8e8 <_ZNK8touchgfx8TextArea21calculateBoundingAreaEv+0x2fc>
 800e694:	f013 0ffd 	tst.w	r3, #253	@ 0xfd
 800e698:	f04f 0600 	mov.w	r6, #0
 800e69c:	bf0c      	ite	eq
 800e69e:	f9b4 900a 	ldrsheq.w	r9, [r4, #10]
 800e6a2:	f9b4 9008 	ldrshne.w	r9, [r4, #8]
 800e6a6:	4637      	mov	r7, r6
 800e6a8:	8da2      	ldrh	r2, [r4, #44]	@ 0x2c
 800e6aa:	f8db 3000 	ldr.w	r3, [fp]
 800e6ae:	eb03 0342 	add.w	r3, r3, r2, lsl #1
 800e6b2:	4629      	mov	r1, r5
 800e6b4:	785b      	ldrb	r3, [r3, #1]
 800e6b6:	f647 72ff 	movw	r2, #32767	@ 0x7fff
 800e6ba:	f3c3 0381 	ubfx	r3, r3, #2, #2
 800e6be:	a80f      	add	r0, sp, #60	@ 0x3c
 800e6c0:	f001 f95f 	bl	800f982 <_ZN8touchgfx3LCD11stringWidthERNS_12TextProviderERKNS_4FontEih>
 800e6c4:	9b03      	ldr	r3, [sp, #12]
 800e6c6:	4286      	cmp	r6, r0
 800e6c8:	bfb8      	it	lt
 800e6ca:	4606      	movlt	r6, r0
 800e6cc:	3701      	adds	r7, #1
 800e6ce:	eba9 0903 	sub.w	r9, r9, r3
 800e6d2:	a80f      	add	r0, sp, #60	@ 0x3c
 800e6d4:	b236      	sxth	r6, r6
 800e6d6:	b2bf      	uxth	r7, r7
 800e6d8:	fa0f f989 	sxth.w	r9, r9
 800e6dc:	f003 fdc1 	bl	8012262 <_ZN8touchgfx12TextProvider11endOfStringEv>
 800e6e0:	b918      	cbnz	r0, 800e6ea <_ZNK8touchgfx8TextArea21calculateBoundingAreaEv+0xfe>
 800e6e2:	7a2b      	ldrb	r3, [r5, #8]
 800e6e4:	444b      	add	r3, r9
 800e6e6:	2b00      	cmp	r3, #0
 800e6e8:	dcde      	bgt.n	800e6a8 <_ZNK8touchgfx8TextArea21calculateBoundingAreaEv+0xbc>
 800e6ea:	9b03      	ldr	r3, [sp, #12]
 800e6ec:	9a04      	ldr	r2, [sp, #16]
 800e6ee:	f895 9009 	ldrb.w	r9, [r5, #9]
 800e6f2:	fb13 f707 	smulbb	r7, r3, r7
 800e6f6:	8ea3      	ldrh	r3, [r4, #52]	@ 0x34
 800e6f8:	1aff      	subs	r7, r7, r3
 800e6fa:	b2bf      	uxth	r7, r7
 800e6fc:	b23b      	sxth	r3, r7
 800e6fe:	429a      	cmp	r2, r3
 800e700:	bfa8      	it	ge
 800e702:	4657      	movge	r7, sl
 800e704:	f894 3038 	ldrb.w	r3, [r4, #56]	@ 0x38
 800e708:	f013 0ffd 	tst.w	r3, #253	@ 0xfd
 800e70c:	6823      	ldr	r3, [r4, #0]
 800e70e:	bf08      	it	eq
 800e710:	f9b4 a008 	ldrsheq.w	sl, [r4, #8]
 800e714:	6edb      	ldr	r3, [r3, #108]	@ 0x6c
 800e716:	bf18      	it	ne
 800e718:	f9b4 a00a 	ldrshne.w	sl, [r4, #10]
 800e71c:	4620      	mov	r0, r4
 800e71e:	4798      	blx	r3
 800e720:	444f      	add	r7, r9
 800e722:	fa1f f987 	uxth.w	r9, r7
 800e726:	2801      	cmp	r0, #1
 800e728:	fa0f f789 	sxth.w	r7, r9
 800e72c:	b2b3      	uxth	r3, r6
 800e72e:	f000 80e1 	beq.w	800e8f4 <_ZNK8touchgfx8TextArea21calculateBoundingAreaEv+0x308>
 800e732:	2802      	cmp	r0, #2
 800e734:	f894 6037 	ldrb.w	r6, [r4, #55]	@ 0x37
 800e738:	f000 80e2 	beq.w	800e900 <_ZNK8touchgfx8TextArea21calculateBoundingAreaEv+0x314>
 800e73c:	7aea      	ldrb	r2, [r5, #11]
 800e73e:	7b2d      	ldrb	r5, [r5, #12]
 800e740:	b236      	sxth	r6, r6
 800e742:	1ab6      	subs	r6, r6, r2
 800e744:	442a      	add	r2, r5
 800e746:	4413      	add	r3, r2
 800e748:	f894 2038 	ldrb.w	r2, [r4, #56]	@ 0x38
 800e74c:	fa1f fa86 	uxth.w	sl, r6
 800e750:	b29b      	uxth	r3, r3
 800e752:	2a02      	cmp	r2, #2
 800e754:	fa0f fb8a 	sxth.w	fp, sl
 800e758:	b21e      	sxth	r6, r3
 800e75a:	f000 80d5 	beq.w	800e908 <_ZNK8touchgfx8TextArea21calculateBoundingAreaEv+0x31c>
 800e75e:	2a03      	cmp	r2, #3
 800e760:	f000 80dd 	beq.w	800e91e <_ZNK8touchgfx8TextArea21calculateBoundingAreaEv+0x332>
 800e764:	2a01      	cmp	r2, #1
 800e766:	f040 80e5 	bne.w	800e934 <_ZNK8touchgfx8TextArea21calculateBoundingAreaEv+0x348>
 800e76a:	8925      	ldrh	r5, [r4, #8]
 800e76c:	4633      	mov	r3, r6
 800e76e:	eba5 0909 	sub.w	r9, r5, r9
 800e772:	463e      	mov	r6, r7
 800e774:	465d      	mov	r5, fp
 800e776:	461f      	mov	r7, r3
 800e778:	fa0f fb89 	sxth.w	fp, r9
 800e77c:	4b5c      	ldr	r3, [pc, #368]	@ (800e8f0 <_ZNK8touchgfx8TextArea21calculateBoundingAreaEv+0x304>)
 800e77e:	8da1      	ldrh	r1, [r4, #44]	@ 0x2c
 800e780:	6818      	ldr	r0, [r3, #0]
 800e782:	f7fc f921 	bl	800a9c8 <_ZNK8touchgfx5Texts7getTextEt>
 800e786:	f8a8 b000 	strh.w	fp, [r8]
 800e78a:	f8a8 5002 	strh.w	r5, [r8, #2]
 800e78e:	f8a8 6004 	strh.w	r6, [r8, #4]
 800e792:	f8a8 7006 	strh.w	r7, [r8, #6]
 800e796:	f8c8 0008 	str.w	r0, [r8, #8]
 800e79a:	e737      	b.n	800e60c <_ZNK8touchgfx8TextArea21calculateBoundingAreaEv+0x20>
 800e79c:	f003 fd3a 	bl	8012214 <_ZN8touchgfx12TextProviderC1Ev>
 800e7a0:	682b      	ldr	r3, [r5, #0]
 800e7a2:	4628      	mov	r0, r5
 800e7a4:	6cdb      	ldr	r3, [r3, #76]	@ 0x4c
 800e7a6:	4798      	blx	r3
 800e7a8:	682b      	ldr	r3, [r5, #0]
 800e7aa:	4607      	mov	r7, r0
 800e7ac:	6d1b      	ldr	r3, [r3, #80]	@ 0x50
 800e7ae:	4628      	mov	r0, r5
 800e7b0:	4798      	blx	r3
 800e7b2:	6823      	ldr	r3, [r4, #0]
 800e7b4:	4683      	mov	fp, r0
 800e7b6:	6fdb      	ldr	r3, [r3, #124]	@ 0x7c
 800e7b8:	4620      	mov	r0, r4
 800e7ba:	4798      	blx	r3
 800e7bc:	6822      	ldr	r2, [r4, #0]
 800e7be:	9005      	str	r0, [sp, #20]
 800e7c0:	f8d2 2080 	ldr.w	r2, [r2, #128]	@ 0x80
 800e7c4:	4620      	mov	r0, r4
 800e7c6:	4790      	blx	r2
 800e7c8:	9b05      	ldr	r3, [sp, #20]
 800e7ca:	9001      	str	r0, [sp, #4]
 800e7cc:	463a      	mov	r2, r7
 800e7ce:	4649      	mov	r1, r9
 800e7d0:	9300      	str	r3, [sp, #0]
 800e7d2:	a80f      	add	r0, sp, #60	@ 0x3c
 800e7d4:	465b      	mov	r3, fp
 800e7d6:	f003 fd8d 	bl	80122f4 <_ZN8touchgfx12TextProvider10initializeEPKtS2_PKNS_24FontContextualFormsTableEz>
 800e7da:	f894 3038 	ldrb.w	r3, [r4, #56]	@ 0x38
 800e7de:	f9b4 9008 	ldrsh.w	r9, [r4, #8]
 800e7e2:	8da1      	ldrh	r1, [r4, #44]	@ 0x2c
 800e7e4:	f894 0039 	ldrb.w	r0, [r4, #57]	@ 0x39
 800e7e8:	f013 0ffd 	tst.w	r3, #253	@ 0xfd
 800e7ec:	f9b4 300a 	ldrsh.w	r3, [r4, #10]
 800e7f0:	bf0a      	itet	eq
 800e7f2:	464a      	moveq	r2, r9
 800e7f4:	461a      	movne	r2, r3
 800e7f6:	4699      	moveq	r9, r3
 800e7f8:	f894 3037 	ldrb.w	r3, [r4, #55]	@ 0x37
 800e7fc:	1ad2      	subs	r2, r2, r3
 800e7fe:	6833      	ldr	r3, [r6, #0]
 800e800:	f9b4 6034 	ldrsh.w	r6, [r4, #52]	@ 0x34
 800e804:	eb03 0341 	add.w	r3, r3, r1, lsl #1
 800e808:	af0f      	add	r7, sp, #60	@ 0x3c
 800e80a:	7859      	ldrb	r1, [r3, #1]
 800e80c:	9707      	str	r7, [sp, #28]
 800e80e:	2300      	movs	r3, #0
 800e810:	f3c1 0181 	ubfx	r1, r1, #2, #2
 800e814:	f8ad 3018 	strh.w	r3, [sp, #24]
 800e818:	f88d 1020 	strb.w	r1, [sp, #32]
 800e81c:	f88d 0021 	strb.w	r0, [sp, #33]	@ 0x21
 800e820:	9509      	str	r5, [sp, #36]	@ 0x24
 800e822:	f8ad 2028 	strh.w	r2, [sp, #40]	@ 0x28
 800e826:	f8ad 902a 	strh.w	r9, [sp, #42]	@ 0x2a
 800e82a:	f8ad 602c 	strh.w	r6, [sp, #44]	@ 0x2c
 800e82e:	f8ad 302e 	strh.w	r3, [sp, #46]	@ 0x2e
 800e832:	f8ad 3030 	strh.w	r3, [sp, #48]	@ 0x30
 800e836:	f8ad 3032 	strh.w	r3, [sp, #50]	@ 0x32
 800e83a:	f8ad 3034 	strh.w	r3, [sp, #52]	@ 0x34
 800e83e:	f8ad 3036 	strh.w	r3, [sp, #54]	@ 0x36
 800e842:	f8ad 3038 	strh.w	r3, [sp, #56]	@ 0x38
 800e846:	f88d 303a 	strb.w	r3, [sp, #58]	@ 0x3a
 800e84a:	b350      	cbz	r0, 800e8a2 <_ZNK8touchgfx8TextArea21calculateBoundingAreaEv+0x2b6>
 800e84c:	682b      	ldr	r3, [r5, #0]
 800e84e:	4628      	mov	r0, r5
 800e850:	695b      	ldr	r3, [r3, #20]
 800e852:	4798      	blx	r3
 800e854:	4607      	mov	r7, r0
 800e856:	b320      	cbz	r0, 800e8a2 <_ZNK8touchgfx8TextArea21calculateBoundingAreaEv+0x2b6>
 800e858:	9809      	ldr	r0, [sp, #36]	@ 0x24
 800e85a:	6803      	ldr	r3, [r0, #0]
 800e85c:	4639      	mov	r1, r7
 800e85e:	68db      	ldr	r3, [r3, #12]
 800e860:	4798      	blx	r3
 800e862:	4606      	mov	r6, r0
 800e864:	b1e8      	cbz	r0, 800e8a2 <_ZNK8touchgfx8TextArea21calculateBoundingAreaEv+0x2b6>
 800e866:	7b43      	ldrb	r3, [r0, #13]
 800e868:	7a82      	ldrb	r2, [r0, #10]
 800e86a:	005b      	lsls	r3, r3, #1
 800e86c:	f403 7380 	and.w	r3, r3, #256	@ 0x100
 800e870:	4313      	orrs	r3, r2
 800e872:	f8ad 3038 	strh.w	r3, [sp, #56]	@ 0x38
 800e876:	f89d 3021 	ldrb.w	r3, [sp, #33]	@ 0x21
 800e87a:	2b06      	cmp	r3, #6
 800e87c:	d111      	bne.n	800e8a2 <_ZNK8touchgfx8TextArea21calculateBoundingAreaEv+0x2b6>
 800e87e:	9809      	ldr	r0, [sp, #36]	@ 0x24
 800e880:	6803      	ldr	r3, [r0, #0]
 800e882:	4632      	mov	r2, r6
 800e884:	6c5b      	ldr	r3, [r3, #68]	@ 0x44
 800e886:	4639      	mov	r1, r7
 800e888:	4798      	blx	r3
 800e88a:	7b73      	ldrb	r3, [r6, #13]
 800e88c:	005b      	lsls	r3, r3, #1
 800e88e:	f403 7280 	and.w	r2, r3, #256	@ 0x100
 800e892:	7ab3      	ldrb	r3, [r6, #10]
 800e894:	4313      	orrs	r3, r2
 800e896:	4418      	add	r0, r3
 800e898:	f8bd 3038 	ldrh.w	r3, [sp, #56]	@ 0x38
 800e89c:	4418      	add	r0, r3
 800e89e:	f8ad 0038 	strh.w	r0, [sp, #56]	@ 0x38
 800e8a2:	2600      	movs	r6, #0
 800e8a4:	4637      	mov	r7, r6
 800e8a6:	a806      	add	r0, sp, #24
 800e8a8:	f001 fa60 	bl	800fd6c <_ZN8touchgfx3LCD22WideTextInternalStruct23scanStringLengthForLineEv>
 800e8ac:	f8bd 0036 	ldrh.w	r0, [sp, #54]	@ 0x36
 800e8b0:	9b03      	ldr	r3, [sp, #12]
 800e8b2:	4286      	cmp	r6, r0
 800e8b4:	eba9 0903 	sub.w	r9, r9, r3
 800e8b8:	f8bd 3018 	ldrh.w	r3, [sp, #24]
 800e8bc:	bfb8      	it	lt
 800e8be:	4606      	movlt	r6, r0
 800e8c0:	3701      	adds	r7, #1
 800e8c2:	b236      	sxth	r6, r6
 800e8c4:	b2bf      	uxth	r7, r7
 800e8c6:	fa0f f989 	sxth.w	r9, r9
 800e8ca:	2b00      	cmp	r3, #0
 800e8cc:	f43f af0d 	beq.w	800e6ea <_ZNK8touchgfx8TextArea21calculateBoundingAreaEv+0xfe>
 800e8d0:	f89d 303a 	ldrb.w	r3, [sp, #58]	@ 0x3a
 800e8d4:	2b00      	cmp	r3, #0
 800e8d6:	f47f af08 	bne.w	800e6ea <_ZNK8touchgfx8TextArea21calculateBoundingAreaEv+0xfe>
 800e8da:	7a2b      	ldrb	r3, [r5, #8]
 800e8dc:	444b      	add	r3, r9
 800e8de:	2b00      	cmp	r3, #0
 800e8e0:	dce1      	bgt.n	800e8a6 <_ZNK8touchgfx8TextArea21calculateBoundingAreaEv+0x2ba>
 800e8e2:	e702      	b.n	800e6ea <_ZNK8touchgfx8TextArea21calculateBoundingAreaEv+0xfe>
 800e8e4:	20002e10 	.word	0x20002e10
 800e8e8:	20002e0c 	.word	0x20002e0c
 800e8ec:	20002e14 	.word	0x20002e14
 800e8f0:	20002e18 	.word	0x20002e18
 800e8f4:	ebaa 0606 	sub.w	r6, sl, r6
 800e8f8:	2002      	movs	r0, #2
 800e8fa:	fb96 f6f0 	sdiv	r6, r6, r0
 800e8fe:	e71d      	b.n	800e73c <_ZNK8touchgfx8TextArea21calculateBoundingAreaEv+0x150>
 800e900:	441e      	add	r6, r3
 800e902:	ebaa 0606 	sub.w	r6, sl, r6
 800e906:	e719      	b.n	800e73c <_ZNK8touchgfx8TextArea21calculateBoundingAreaEv+0x150>
 800e908:	8925      	ldrh	r5, [r4, #8]
 800e90a:	1aed      	subs	r5, r5, r3
 800e90c:	eba5 050a 	sub.w	r5, r5, sl
 800e910:	fa0f fb85 	sxth.w	fp, r5
 800e914:	8965      	ldrh	r5, [r4, #10]
 800e916:	eba5 0509 	sub.w	r5, r5, r9
 800e91a:	b22d      	sxth	r5, r5
 800e91c:	e72e      	b.n	800e77c <_ZNK8touchgfx8TextArea21calculateBoundingAreaEv+0x190>
 800e91e:	8965      	ldrh	r5, [r4, #10]
 800e920:	1aed      	subs	r5, r5, r3
 800e922:	eba5 050a 	sub.w	r5, r5, sl
 800e926:	4633      	mov	r3, r6
 800e928:	b22d      	sxth	r5, r5
 800e92a:	463e      	mov	r6, r7
 800e92c:	f04f 0b00 	mov.w	fp, #0
 800e930:	461f      	mov	r7, r3
 800e932:	e723      	b.n	800e77c <_ZNK8touchgfx8TextArea21calculateBoundingAreaEv+0x190>
 800e934:	2500      	movs	r5, #0
 800e936:	e721      	b.n	800e77c <_ZNK8touchgfx8TextArea21calculateBoundingAreaEv+0x190>

0800e938 <_ZNK8touchgfx8TextArea17invalidateContentEv>:
 800e938:	b513      	push	{r0, r1, r4, lr}
 800e93a:	f890 3036 	ldrb.w	r3, [r0, #54]	@ 0x36
 800e93e:	4604      	mov	r4, r0
 800e940:	b1fb      	cbz	r3, 800e982 <_ZNK8touchgfx8TextArea17invalidateContentEv+0x4a>
 800e942:	4b16      	ldr	r3, [pc, #88]	@ (800e99c <_ZNK8touchgfx8TextArea17invalidateContentEv+0x64>)
 800e944:	8d81      	ldrh	r1, [r0, #44]	@ 0x2c
 800e946:	881b      	ldrh	r3, [r3, #0]
 800e948:	428b      	cmp	r3, r1
 800e94a:	d91a      	bls.n	800e982 <_ZNK8touchgfx8TextArea17invalidateContentEv+0x4a>
 800e94c:	f9b0 3008 	ldrsh.w	r3, [r0, #8]
 800e950:	2b00      	cmp	r3, #0
 800e952:	dd16      	ble.n	800e982 <_ZNK8touchgfx8TextArea17invalidateContentEv+0x4a>
 800e954:	f9b0 300a 	ldrsh.w	r3, [r0, #10]
 800e958:	2b00      	cmp	r3, #0
 800e95a:	dd12      	ble.n	800e982 <_ZNK8touchgfx8TextArea17invalidateContentEv+0x4a>
 800e95c:	4b10      	ldr	r3, [pc, #64]	@ (800e9a0 <_ZNK8touchgfx8TextArea17invalidateContentEv+0x68>)
 800e95e:	6818      	ldr	r0, [r3, #0]
 800e960:	f7fc f832 	bl	800a9c8 <_ZNK8touchgfx5Texts7getTextEt>
 800e964:	f9b4 3042 	ldrsh.w	r3, [r4, #66]	@ 0x42
 800e968:	6822      	ldr	r2, [r4, #0]
 800e96a:	2b00      	cmp	r3, #0
 800e96c:	db06      	blt.n	800e97c <_ZNK8touchgfx8TextArea17invalidateContentEv+0x44>
 800e96e:	f9b4 3040 	ldrsh.w	r3, [r4, #64]	@ 0x40
 800e972:	2b00      	cmp	r3, #0
 800e974:	db02      	blt.n	800e97c <_ZNK8touchgfx8TextArea17invalidateContentEv+0x44>
 800e976:	6c63      	ldr	r3, [r4, #68]	@ 0x44
 800e978:	4298      	cmp	r0, r3
 800e97a:	d004      	beq.n	800e986 <_ZNK8touchgfx8TextArea17invalidateContentEv+0x4e>
 800e97c:	6953      	ldr	r3, [r2, #20]
 800e97e:	4620      	mov	r0, r4
 800e980:	4798      	blx	r3
 800e982:	b002      	add	sp, #8
 800e984:	bd10      	pop	{r4, pc}
 800e986:	f104 013c 	add.w	r1, r4, #60	@ 0x3c
 800e98a:	c903      	ldmia	r1, {r0, r1}
 800e98c:	466b      	mov	r3, sp
 800e98e:	e883 0003 	stmia.w	r3, {r0, r1}
 800e992:	6912      	ldr	r2, [r2, #16]
 800e994:	4619      	mov	r1, r3
 800e996:	4620      	mov	r0, r4
 800e998:	4790      	blx	r2
 800e99a:	e7f2      	b.n	800e982 <_ZNK8touchgfx8TextArea17invalidateContentEv+0x4a>
 800e99c:	20002e10 	.word	0x20002e10
 800e9a0:	20002e18 	.word	0x20002e18

0800e9a4 <_ZNK8touchgfx8TextArea4drawERKNS_4RectE>:
 800e9a4:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 800e9a8:	4b44      	ldr	r3, [pc, #272]	@ (800eabc <_ZNK8touchgfx8TextArea4drawERKNS_4RectE+0x118>)
 800e9aa:	8d82      	ldrh	r2, [r0, #44]	@ 0x2c
 800e9ac:	881b      	ldrh	r3, [r3, #0]
 800e9ae:	4293      	cmp	r3, r2
 800e9b0:	b08e      	sub	sp, #56	@ 0x38
 800e9b2:	4604      	mov	r4, r0
 800e9b4:	d97e      	bls.n	800eab4 <_ZNK8touchgfx8TextArea4drawERKNS_4RectE+0x110>
 800e9b6:	6808      	ldr	r0, [r1, #0]
 800e9b8:	4d41      	ldr	r5, [pc, #260]	@ (800eac0 <_ZNK8touchgfx8TextArea4drawERKNS_4RectE+0x11c>)
 800e9ba:	6849      	ldr	r1, [r1, #4]
 800e9bc:	ab05      	add	r3, sp, #20
 800e9be:	c303      	stmia	r3!, {r0, r1}
 800e9c0:	4611      	mov	r1, r2
 800e9c2:	6828      	ldr	r0, [r5, #0]
 800e9c4:	f7fc f800 	bl	800a9c8 <_ZNK8touchgfx5Texts7getTextEt>
 800e9c8:	f9b4 3042 	ldrsh.w	r3, [r4, #66]	@ 0x42
 800e9cc:	2b00      	cmp	r3, #0
 800e9ce:	db11      	blt.n	800e9f4 <_ZNK8touchgfx8TextArea4drawERKNS_4RectE+0x50>
 800e9d0:	f9b4 3040 	ldrsh.w	r3, [r4, #64]	@ 0x40
 800e9d4:	2b00      	cmp	r3, #0
 800e9d6:	db0d      	blt.n	800e9f4 <_ZNK8touchgfx8TextArea4drawERKNS_4RectE+0x50>
 800e9d8:	6c63      	ldr	r3, [r4, #68]	@ 0x44
 800e9da:	4298      	cmp	r0, r3
 800e9dc:	d10a      	bne.n	800e9f4 <_ZNK8touchgfx8TextArea4drawERKNS_4RectE+0x50>
 800e9de:	f104 023c 	add.w	r2, r4, #60	@ 0x3c
 800e9e2:	e892 0003 	ldmia.w	r2, {r0, r1}
 800e9e6:	ab09      	add	r3, sp, #36	@ 0x24
 800e9e8:	e883 0003 	stmia.w	r3, {r0, r1}
 800e9ec:	4619      	mov	r1, r3
 800e9ee:	a805      	add	r0, sp, #20
 800e9f0:	f7fe fcca 	bl	800d388 <_ZN8touchgfx4RectaNERKS0_>
 800e9f4:	f9bd 3018 	ldrsh.w	r3, [sp, #24]
 800e9f8:	2b00      	cmp	r3, #0
 800e9fa:	dd5b      	ble.n	800eab4 <_ZNK8touchgfx8TextArea4drawERKNS_4RectE+0x110>
 800e9fc:	f9bd 301a 	ldrsh.w	r3, [sp, #26]
 800ea00:	2b00      	cmp	r3, #0
 800ea02:	dd57      	ble.n	800eab4 <_ZNK8touchgfx8TextArea4drawERKNS_4RectE+0x110>
 800ea04:	4f2f      	ldr	r7, [pc, #188]	@ (800eac4 <_ZNK8touchgfx8TextArea4drawERKNS_4RectE+0x120>)
 800ea06:	8da2      	ldrh	r2, [r4, #44]	@ 0x2c
 800ea08:	683b      	ldr	r3, [r7, #0]
 800ea0a:	f813 2012 	ldrb.w	r2, [r3, r2, lsl #1]
 800ea0e:	4b2e      	ldr	r3, [pc, #184]	@ (800eac8 <_ZNK8touchgfx8TextArea4drawERKNS_4RectE+0x124>)
 800ea10:	681b      	ldr	r3, [r3, #0]
 800ea12:	f853 6022 	ldr.w	r6, [r3, r2, lsl #2]
 800ea16:	2e00      	cmp	r6, #0
 800ea18:	d04c      	beq.n	800eab4 <_ZNK8touchgfx8TextArea4drawERKNS_4RectE+0x110>
 800ea1a:	6823      	ldr	r3, [r4, #0]
 800ea1c:	f894 8036 	ldrb.w	r8, [r4, #54]	@ 0x36
 800ea20:	6edb      	ldr	r3, [r3, #108]	@ 0x6c
 800ea22:	4620      	mov	r0, r4
 800ea24:	4798      	blx	r3
 800ea26:	8da2      	ldrh	r2, [r4, #44]	@ 0x2c
 800ea28:	683b      	ldr	r3, [r7, #0]
 800ea2a:	f9b4 c034 	ldrsh.w	ip, [r4, #52]	@ 0x34
 800ea2e:	f894 e038 	ldrb.w	lr, [r4, #56]	@ 0x38
 800ea32:	f894 7037 	ldrb.w	r7, [r4, #55]	@ 0x37
 800ea36:	6b21      	ldr	r1, [r4, #48]	@ 0x30
 800ea38:	eb03 0342 	add.w	r3, r3, r2, lsl #1
 800ea3c:	f894 2039 	ldrb.w	r2, [r4, #57]	@ 0x39
 800ea40:	785b      	ldrb	r3, [r3, #1]
 800ea42:	9609      	str	r6, [sp, #36]	@ 0x24
 800ea44:	f3c3 0381 	ubfx	r3, r3, #2, #2
 800ea48:	f88d 3029 	strb.w	r3, [sp, #41]	@ 0x29
 800ea4c:	4b1f      	ldr	r3, [pc, #124]	@ (800eacc <_ZNK8touchgfx8TextArea4drawERKNS_4RectE+0x128>)
 800ea4e:	f88d 0028 	strb.w	r0, [sp, #40]	@ 0x28
 800ea52:	681b      	ldr	r3, [r3, #0]
 800ea54:	f88d e02a 	strb.w	lr, [sp, #42]	@ 0x2a
 800ea58:	910b      	str	r1, [sp, #44]	@ 0x2c
 800ea5a:	f8ad c030 	strh.w	ip, [sp, #48]	@ 0x30
 800ea5e:	f88d 8032 	strb.w	r8, [sp, #50]	@ 0x32
 800ea62:	f88d 7033 	strb.w	r7, [sp, #51]	@ 0x33
 800ea66:	f88d 2034 	strb.w	r2, [sp, #52]	@ 0x34
 800ea6a:	f893 2058 	ldrb.w	r2, [r3, #88]	@ 0x58
 800ea6e:	b10a      	cbz	r2, 800ea74 <_ZNK8touchgfx8TextArea4drawERKNS_4RectE+0xd0>
 800ea70:	6cde      	ldr	r6, [r3, #76]	@ 0x4c
 800ea72:	b906      	cbnz	r6, 800ea76 <_ZNK8touchgfx8TextArea4drawERKNS_4RectE+0xd2>
 800ea74:	689e      	ldr	r6, [r3, #8]
 800ea76:	af07      	add	r7, sp, #28
 800ea78:	4621      	mov	r1, r4
 800ea7a:	4638      	mov	r0, r7
 800ea7c:	f003 f814 	bl	8011aa8 <_ZNK8touchgfx8Drawable15getAbsoluteRectEv>
 800ea80:	8da1      	ldrh	r1, [r4, #44]	@ 0x2c
 800ea82:	6828      	ldr	r0, [r5, #0]
 800ea84:	f7fb ffa0 	bl	800a9c8 <_ZNK8touchgfx5Texts7getTextEt>
 800ea88:	6823      	ldr	r3, [r4, #0]
 800ea8a:	4605      	mov	r5, r0
 800ea8c:	6fdb      	ldr	r3, [r3, #124]	@ 0x7c
 800ea8e:	4620      	mov	r0, r4
 800ea90:	4798      	blx	r3
 800ea92:	6823      	ldr	r3, [r4, #0]
 800ea94:	4680      	mov	r8, r0
 800ea96:	f8d3 3080 	ldr.w	r3, [r3, #128]	@ 0x80
 800ea9a:	4620      	mov	r0, r4
 800ea9c:	4798      	blx	r3
 800ea9e:	e9cd 8002 	strd	r8, r0, [sp, #8]
 800eaa2:	ab09      	add	r3, sp, #36	@ 0x24
 800eaa4:	9300      	str	r3, [sp, #0]
 800eaa6:	9501      	str	r5, [sp, #4]
 800eaa8:	ab05      	add	r3, sp, #20
 800eaaa:	e897 0006 	ldmia.w	r7, {r1, r2}
 800eaae:	4630      	mov	r0, r6
 800eab0:	f7fb ff1b 	bl	800a8ea <_ZN8touchgfx3LCD10drawStringENS_4RectERKS1_RKNS0_13StringVisualsEPKtz>
 800eab4:	b00e      	add	sp, #56	@ 0x38
 800eab6:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
 800eaba:	bf00      	nop
 800eabc:	20002e10 	.word	0x20002e10
 800eac0:	20002e18 	.word	0x20002e18
 800eac4:	20002e0c 	.word	0x20002e0c
 800eac8:	20002e14 	.word	0x20002e14
 800eacc:	20002dbc 	.word	0x20002dbc

0800ead0 <_ZN8touchgfx8TextArea19resizeToCurrentTextEv>:
 800ead0:	b538      	push	{r3, r4, r5, lr}
 800ead2:	4b0e      	ldr	r3, [pc, #56]	@ (800eb0c <_ZN8touchgfx8TextArea19resizeToCurrentTextEv+0x3c>)
 800ead4:	8d82      	ldrh	r2, [r0, #44]	@ 0x2c
 800ead6:	881b      	ldrh	r3, [r3, #0]
 800ead8:	429a      	cmp	r2, r3
 800eada:	4604      	mov	r4, r0
 800eadc:	d214      	bcs.n	800eb08 <_ZN8touchgfx8TextArea19resizeToCurrentTextEv+0x38>
 800eade:	6803      	ldr	r3, [r0, #0]
 800eae0:	6f5b      	ldr	r3, [r3, #116]	@ 0x74
 800eae2:	4798      	blx	r3
 800eae4:	6823      	ldr	r3, [r4, #0]
 800eae6:	4605      	mov	r5, r0
 800eae8:	6f1b      	ldr	r3, [r3, #112]	@ 0x70
 800eaea:	4620      	mov	r0, r4
 800eaec:	4798      	blx	r3
 800eaee:	f894 3038 	ldrb.w	r3, [r4, #56]	@ 0x38
 800eaf2:	b22d      	sxth	r5, r5
 800eaf4:	f013 0ffd 	tst.w	r3, #253	@ 0xfd
 800eaf8:	4601      	mov	r1, r0
 800eafa:	bf06      	itte	eq
 800eafc:	4602      	moveq	r2, r0
 800eafe:	4629      	moveq	r1, r5
 800eb00:	462a      	movne	r2, r5
 800eb02:	4620      	mov	r0, r4
 800eb04:	f7fa fcdf 	bl	80094c6 <_ZN8touchgfx8Drawable14setWidthHeightEss>
 800eb08:	bd38      	pop	{r3, r4, r5, pc}
 800eb0a:	bf00      	nop
 800eb0c:	20002e10 	.word	0x20002e10

0800eb10 <_ZN8touchgfx8TextArea12setTypedTextERKNS_9TypedTextE>:
 800eb10:	b530      	push	{r4, r5, lr}
 800eb12:	888b      	ldrh	r3, [r1, #4]
 800eb14:	8583      	strh	r3, [r0, #44]	@ 0x2c
 800eb16:	f9b0 3008 	ldrsh.w	r3, [r0, #8]
 800eb1a:	b085      	sub	sp, #20
 800eb1c:	4604      	mov	r4, r0
 800eb1e:	b923      	cbnz	r3, 800eb2a <_ZN8touchgfx8TextArea12setTypedTextERKNS_9TypedTextE+0x1a>
 800eb20:	f9b0 300a 	ldrsh.w	r3, [r0, #10]
 800eb24:	b90b      	cbnz	r3, 800eb2a <_ZN8touchgfx8TextArea12setTypedTextERKNS_9TypedTextE+0x1a>
 800eb26:	f7ff ffd3 	bl	800ead0 <_ZN8touchgfx8TextArea19resizeToCurrentTextEv>
 800eb2a:	6823      	ldr	r3, [r4, #0]
 800eb2c:	466d      	mov	r5, sp
 800eb2e:	4621      	mov	r1, r4
 800eb30:	4628      	mov	r0, r5
 800eb32:	f8d3 3084 	ldr.w	r3, [r3, #132]	@ 0x84
 800eb36:	4798      	blx	r3
 800eb38:	e895 0007 	ldmia.w	r5, {r0, r1, r2}
 800eb3c:	343c      	adds	r4, #60	@ 0x3c
 800eb3e:	e884 0007 	stmia.w	r4, {r0, r1, r2}
 800eb42:	b005      	add	sp, #20
 800eb44:	bd30      	pop	{r4, r5, pc}

0800eb46 <_ZNK8touchgfx3Box12getSolidRectEv>:
 800eb46:	2300      	movs	r3, #0
 800eb48:	8083      	strh	r3, [r0, #4]
 800eb4a:	80c3      	strh	r3, [r0, #6]
 800eb4c:	8003      	strh	r3, [r0, #0]
 800eb4e:	8043      	strh	r3, [r0, #2]
 800eb50:	f891 3026 	ldrb.w	r3, [r1, #38]	@ 0x26
 800eb54:	2bff      	cmp	r3, #255	@ 0xff
 800eb56:	bf01      	itttt	eq
 800eb58:	890b      	ldrheq	r3, [r1, #8]
 800eb5a:	8083      	strheq	r3, [r0, #4]
 800eb5c:	894b      	ldrheq	r3, [r1, #10]
 800eb5e:	80c3      	strheq	r3, [r0, #6]
 800eb60:	4770      	bx	lr
	...

0800eb64 <_ZNK8touchgfx3Box4drawERKNS_4RectE>:
 800eb64:	b537      	push	{r0, r1, r2, r4, r5, lr}
 800eb66:	4604      	mov	r4, r0
 800eb68:	6808      	ldr	r0, [r1, #0]
 800eb6a:	6849      	ldr	r1, [r1, #4]
 800eb6c:	466b      	mov	r3, sp
 800eb6e:	c303      	stmia	r3!, {r0, r1}
 800eb70:	6823      	ldr	r3, [r4, #0]
 800eb72:	4669      	mov	r1, sp
 800eb74:	6adb      	ldr	r3, [r3, #44]	@ 0x2c
 800eb76:	4620      	mov	r0, r4
 800eb78:	4798      	blx	r3
 800eb7a:	4b08      	ldr	r3, [pc, #32]	@ (800eb9c <_ZNK8touchgfx3Box4drawERKNS_4RectE+0x38>)
 800eb7c:	681b      	ldr	r3, [r3, #0]
 800eb7e:	f893 2058 	ldrb.w	r2, [r3, #88]	@ 0x58
 800eb82:	b10a      	cbz	r2, 800eb88 <_ZNK8touchgfx3Box4drawERKNS_4RectE+0x24>
 800eb84:	6cd8      	ldr	r0, [r3, #76]	@ 0x4c
 800eb86:	b900      	cbnz	r0, 800eb8a <_ZNK8touchgfx3Box4drawERKNS_4RectE+0x26>
 800eb88:	6898      	ldr	r0, [r3, #8]
 800eb8a:	6803      	ldr	r3, [r0, #0]
 800eb8c:	6aa2      	ldr	r2, [r4, #40]	@ 0x28
 800eb8e:	6a1d      	ldr	r5, [r3, #32]
 800eb90:	f894 3026 	ldrb.w	r3, [r4, #38]	@ 0x26
 800eb94:	4669      	mov	r1, sp
 800eb96:	47a8      	blx	r5
 800eb98:	b003      	add	sp, #12
 800eb9a:	bd30      	pop	{r4, r5, pc}
 800eb9c:	20002dbc 	.word	0x20002dbc

0800eba0 <_ZNK8touchgfx3Box17invalidateContentEv>:
 800eba0:	f890 2026 	ldrb.w	r2, [r0, #38]	@ 0x26
 800eba4:	b12a      	cbz	r2, 800ebb2 <_ZNK8touchgfx3Box17invalidateContentEv+0x12>
 800eba6:	f890 2025 	ldrb.w	r2, [r0, #37]	@ 0x25
 800ebaa:	b112      	cbz	r2, 800ebb2 <_ZNK8touchgfx3Box17invalidateContentEv+0x12>
 800ebac:	6803      	ldr	r3, [r0, #0]
 800ebae:	695b      	ldr	r3, [r3, #20]
 800ebb0:	4718      	bx	r3
 800ebb2:	4770      	bx	lr

0800ebb4 <_ZN8touchgfx6Button10setBitmapsERKNS_6BitmapES3_>:
 800ebb4:	b570      	push	{r4, r5, r6, lr}
 800ebb6:	880b      	ldrh	r3, [r1, #0]
 800ebb8:	85c3      	strh	r3, [r0, #46]	@ 0x2e
 800ebba:	4605      	mov	r5, r0
 800ebbc:	8813      	ldrh	r3, [r2, #0]
 800ebbe:	f825 3f30 	strh.w	r3, [r5, #48]!
 800ebc2:	4604      	mov	r4, r0
 800ebc4:	4628      	mov	r0, r5
 800ebc6:	f005 f8e3 	bl	8013d90 <_ZNK8touchgfx6Bitmap8getWidthEv>
 800ebca:	4606      	mov	r6, r0
 800ebcc:	4628      	mov	r0, r5
 800ebce:	f005 f913 	bl	8013df8 <_ZNK8touchgfx6Bitmap9getHeightEv>
 800ebd2:	6823      	ldr	r3, [r4, #0]
 800ebd4:	4605      	mov	r5, r0
 800ebd6:	4631      	mov	r1, r6
 800ebd8:	4620      	mov	r0, r4
 800ebda:	6b9b      	ldr	r3, [r3, #56]	@ 0x38
 800ebdc:	4798      	blx	r3
 800ebde:	6823      	ldr	r3, [r4, #0]
 800ebe0:	4629      	mov	r1, r5
 800ebe2:	4620      	mov	r0, r4
 800ebe4:	6bdb      	ldr	r3, [r3, #60]	@ 0x3c
 800ebe6:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
 800ebea:	4718      	bx	r3

0800ebec <_ZNK8touchgfx6Button12getSolidRectEv>:
 800ebec:	b510      	push	{r4, lr}
 800ebee:	f891 3032 	ldrb.w	r3, [r1, #50]	@ 0x32
 800ebf2:	2bff      	cmp	r3, #255	@ 0xff
 800ebf4:	4604      	mov	r4, r0
 800ebf6:	d006      	beq.n	800ec06 <_ZNK8touchgfx6Button12getSolidRectEv+0x1a>
 800ebf8:	2300      	movs	r3, #0
 800ebfa:	8003      	strh	r3, [r0, #0]
 800ebfc:	8043      	strh	r3, [r0, #2]
 800ebfe:	8083      	strh	r3, [r0, #4]
 800ec00:	80c3      	strh	r3, [r0, #6]
 800ec02:	4620      	mov	r0, r4
 800ec04:	bd10      	pop	{r4, pc}
 800ec06:	f891 302c 	ldrb.w	r3, [r1, #44]	@ 0x2c
 800ec0a:	b11b      	cbz	r3, 800ec14 <_ZNK8touchgfx6Button12getSolidRectEv+0x28>
 800ec0c:	3130      	adds	r1, #48	@ 0x30
 800ec0e:	f005 f927 	bl	8013e60 <_ZNK8touchgfx6Bitmap12getSolidRectEv>
 800ec12:	e7f6      	b.n	800ec02 <_ZNK8touchgfx6Button12getSolidRectEv+0x16>
 800ec14:	312e      	adds	r1, #46	@ 0x2e
 800ec16:	e7fa      	b.n	800ec0e <_ZNK8touchgfx6Button12getSolidRectEv+0x22>

0800ec18 <_ZNK8touchgfx6Button4drawERKNS_4RectE>:
 800ec18:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 800ec1c:	f890 302c 	ldrb.w	r3, [r0, #44]	@ 0x2c
 800ec20:	b08a      	sub	sp, #40	@ 0x28
 800ec22:	4604      	mov	r4, r0
 800ec24:	4688      	mov	r8, r1
 800ec26:	2b00      	cmp	r3, #0
 800ec28:	d066      	beq.n	800ecf8 <_ZNK8touchgfx6Button4drawERKNS_4RectE+0xe0>
 800ec2a:	8e03      	ldrh	r3, [r0, #48]	@ 0x30
 800ec2c:	f8ad 3014 	strh.w	r3, [sp, #20]
 800ec30:	a805      	add	r0, sp, #20
 800ec32:	f005 f8ad 	bl	8013d90 <_ZNK8touchgfx6Bitmap8getWidthEv>
 800ec36:	4607      	mov	r7, r0
 800ec38:	a805      	add	r0, sp, #20
 800ec3a:	f005 f8dd 	bl	8013df8 <_ZNK8touchgfx6Bitmap9getHeightEv>
 800ec3e:	f9b8 6000 	ldrsh.w	r6, [r8]
 800ec42:	f8b8 2004 	ldrh.w	r2, [r8, #4]
 800ec46:	4432      	add	r2, r6
 800ec48:	b292      	uxth	r2, r2
 800ec4a:	2300      	movs	r3, #0
 800ec4c:	fa0f fc82 	sxth.w	ip, r2
 800ec50:	459c      	cmp	ip, r3
 800ec52:	9306      	str	r3, [sp, #24]
 800ec54:	dd52      	ble.n	800ecfc <_ZNK8touchgfx6Button4drawERKNS_4RectE+0xe4>
 800ec56:	42b7      	cmp	r7, r6
 800ec58:	dd50      	ble.n	800ecfc <_ZNK8touchgfx6Button4drawERKNS_4RectE+0xe4>
 800ec5a:	f9b8 5002 	ldrsh.w	r5, [r8, #2]
 800ec5e:	f8b8 3006 	ldrh.w	r3, [r8, #6]
 800ec62:	442b      	add	r3, r5
 800ec64:	b29b      	uxth	r3, r3
 800ec66:	b219      	sxth	r1, r3
 800ec68:	2900      	cmp	r1, #0
 800ec6a:	dd47      	ble.n	800ecfc <_ZNK8touchgfx6Button4drawERKNS_4RectE+0xe4>
 800ec6c:	42a8      	cmp	r0, r5
 800ec6e:	dd45      	ble.n	800ecfc <_ZNK8touchgfx6Button4drawERKNS_4RectE+0xe4>
 800ec70:	4567      	cmp	r7, ip
 800ec72:	bfb8      	it	lt
 800ec74:	b2ba      	uxthlt	r2, r7
 800ec76:	4288      	cmp	r0, r1
 800ec78:	ea26 76e6 	bic.w	r6, r6, r6, asr #31
 800ec7c:	ea25 75e5 	bic.w	r5, r5, r5, asr #31
 800ec80:	bfb8      	it	lt
 800ec82:	b283      	uxthlt	r3, r0
 800ec84:	1b92      	subs	r2, r2, r6
 800ec86:	1b5b      	subs	r3, r3, r5
 800ec88:	f8ad 201c 	strh.w	r2, [sp, #28]
 800ec8c:	f8ad 301e 	strh.w	r3, [sp, #30]
 800ec90:	f8ad 6018 	strh.w	r6, [sp, #24]
 800ec94:	f8ad 501a 	strh.w	r5, [sp, #26]
 800ec98:	f8bd 2014 	ldrh.w	r2, [sp, #20]
 800ec9c:	f64f 73ff 	movw	r3, #65535	@ 0xffff
 800eca0:	429a      	cmp	r2, r3
 800eca2:	d026      	beq.n	800ecf2 <_ZNK8touchgfx6Button4drawERKNS_4RectE+0xda>
 800eca4:	f9bd 301c 	ldrsh.w	r3, [sp, #28]
 800eca8:	2b00      	cmp	r3, #0
 800ecaa:	dd22      	ble.n	800ecf2 <_ZNK8touchgfx6Button4drawERKNS_4RectE+0xda>
 800ecac:	f9bd 301e 	ldrsh.w	r3, [sp, #30]
 800ecb0:	2b00      	cmp	r3, #0
 800ecb2:	dd1e      	ble.n	800ecf2 <_ZNK8touchgfx6Button4drawERKNS_4RectE+0xda>
 800ecb4:	2300      	movs	r3, #0
 800ecb6:	e9cd 3308 	strd	r3, r3, [sp, #32]
 800ecba:	6823      	ldr	r3, [r4, #0]
 800ecbc:	a908      	add	r1, sp, #32
 800ecbe:	6adb      	ldr	r3, [r3, #44]	@ 0x2c
 800ecc0:	4620      	mov	r0, r4
 800ecc2:	4798      	blx	r3
 800ecc4:	4b0f      	ldr	r3, [pc, #60]	@ (800ed04 <_ZNK8touchgfx6Button4drawERKNS_4RectE+0xec>)
 800ecc6:	681b      	ldr	r3, [r3, #0]
 800ecc8:	f893 2058 	ldrb.w	r2, [r3, #88]	@ 0x58
 800eccc:	b10a      	cbz	r2, 800ecd2 <_ZNK8touchgfx6Button4drawERKNS_4RectE+0xba>
 800ecce:	6cd8      	ldr	r0, [r3, #76]	@ 0x4c
 800ecd0:	b900      	cbnz	r0, 800ecd4 <_ZNK8touchgfx6Button4drawERKNS_4RectE+0xbc>
 800ecd2:	6898      	ldr	r0, [r3, #8]
 800ecd4:	6801      	ldr	r1, [r0, #0]
 800ecd6:	f9bd 3022 	ldrsh.w	r3, [sp, #34]	@ 0x22
 800ecda:	f9bd 2020 	ldrsh.w	r2, [sp, #32]
 800ecde:	2501      	movs	r5, #1
 800ece0:	9502      	str	r5, [sp, #8]
 800ece2:	f894 4032 	ldrb.w	r4, [r4, #50]	@ 0x32
 800ece6:	9401      	str	r4, [sp, #4]
 800ece8:	ac06      	add	r4, sp, #24
 800ecea:	9400      	str	r4, [sp, #0]
 800ecec:	688c      	ldr	r4, [r1, #8]
 800ecee:	a905      	add	r1, sp, #20
 800ecf0:	47a0      	blx	r4
 800ecf2:	b00a      	add	sp, #40	@ 0x28
 800ecf4:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
 800ecf8:	8dc3      	ldrh	r3, [r0, #46]	@ 0x2e
 800ecfa:	e797      	b.n	800ec2c <_ZNK8touchgfx6Button4drawERKNS_4RectE+0x14>
 800ecfc:	2300      	movs	r3, #0
 800ecfe:	9307      	str	r3, [sp, #28]
 800ed00:	e7ca      	b.n	800ec98 <_ZNK8touchgfx6Button4drawERKNS_4RectE+0x80>
 800ed02:	bf00      	nop
 800ed04:	20002dbc 	.word	0x20002dbc

0800ed08 <_ZNK8touchgfx24TextAreaWithWildcardBase4drawERKNS_4RectE>:
 800ed08:	e92d 43f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, lr}
 800ed0c:	4b2f      	ldr	r3, [pc, #188]	@ (800edcc <_ZNK8touchgfx24TextAreaWithWildcardBase4drawERKNS_4RectE+0xc4>)
 800ed0e:	8d82      	ldrh	r2, [r0, #44]	@ 0x2c
 800ed10:	881b      	ldrh	r3, [r3, #0]
 800ed12:	4293      	cmp	r3, r2
 800ed14:	b08d      	sub	sp, #52	@ 0x34
 800ed16:	4604      	mov	r4, r0
 800ed18:	460f      	mov	r7, r1
 800ed1a:	d954      	bls.n	800edc6 <_ZNK8touchgfx24TextAreaWithWildcardBase4drawERKNS_4RectE+0xbe>
 800ed1c:	4b2c      	ldr	r3, [pc, #176]	@ (800edd0 <_ZNK8touchgfx24TextAreaWithWildcardBase4drawERKNS_4RectE+0xc8>)
 800ed1e:	6819      	ldr	r1, [r3, #0]
 800ed20:	eb01 0342 	add.w	r3, r1, r2, lsl #1
 800ed24:	f811 1012 	ldrb.w	r1, [r1, r2, lsl #1]
 800ed28:	4a2a      	ldr	r2, [pc, #168]	@ (800edd4 <_ZNK8touchgfx24TextAreaWithWildcardBase4drawERKNS_4RectE+0xcc>)
 800ed2a:	6812      	ldr	r2, [r2, #0]
 800ed2c:	f852 1021 	ldr.w	r1, [r2, r1, lsl #2]
 800ed30:	2900      	cmp	r1, #0
 800ed32:	d048      	beq.n	800edc6 <_ZNK8touchgfx24TextAreaWithWildcardBase4drawERKNS_4RectE+0xbe>
 800ed34:	785a      	ldrb	r2, [r3, #1]
 800ed36:	f894 3039 	ldrb.w	r3, [r4, #57]	@ 0x39
 800ed3a:	f88d 302c 	strb.w	r3, [sp, #44]	@ 0x2c
 800ed3e:	4b26      	ldr	r3, [pc, #152]	@ (800edd8 <_ZNK8touchgfx24TextAreaWithWildcardBase4drawERKNS_4RectE+0xd0>)
 800ed40:	f890 5036 	ldrb.w	r5, [r0, #54]	@ 0x36
 800ed44:	f9b0 c034 	ldrsh.w	ip, [r0, #52]	@ 0x34
 800ed48:	f890 e038 	ldrb.w	lr, [r0, #56]	@ 0x38
 800ed4c:	6b26      	ldr	r6, [r4, #48]	@ 0x30
 800ed4e:	f890 0037 	ldrb.w	r0, [r0, #55]	@ 0x37
 800ed52:	9107      	str	r1, [sp, #28]
 800ed54:	f3c2 0801 	ubfx	r8, r2, #0, #2
 800ed58:	f3c2 0281 	ubfx	r2, r2, #2, #2
 800ed5c:	f88d 2021 	strb.w	r2, [sp, #33]	@ 0x21
 800ed60:	681a      	ldr	r2, [r3, #0]
 800ed62:	f88d 8020 	strb.w	r8, [sp, #32]
 800ed66:	f892 3058 	ldrb.w	r3, [r2, #88]	@ 0x58
 800ed6a:	f88d e022 	strb.w	lr, [sp, #34]	@ 0x22
 800ed6e:	9609      	str	r6, [sp, #36]	@ 0x24
 800ed70:	f8ad c028 	strh.w	ip, [sp, #40]	@ 0x28
 800ed74:	f88d 502a 	strb.w	r5, [sp, #42]	@ 0x2a
 800ed78:	f88d 002b 	strb.w	r0, [sp, #43]	@ 0x2b
 800ed7c:	b10b      	cbz	r3, 800ed82 <_ZNK8touchgfx24TextAreaWithWildcardBase4drawERKNS_4RectE+0x7a>
 800ed7e:	6cd5      	ldr	r5, [r2, #76]	@ 0x4c
 800ed80:	b905      	cbnz	r5, 800ed84 <_ZNK8touchgfx24TextAreaWithWildcardBase4drawERKNS_4RectE+0x7c>
 800ed82:	6895      	ldr	r5, [r2, #8]
 800ed84:	ae05      	add	r6, sp, #20
 800ed86:	4621      	mov	r1, r4
 800ed88:	4630      	mov	r0, r6
 800ed8a:	f002 fe8d 	bl	8011aa8 <_ZNK8touchgfx8Drawable15getAbsoluteRectEv>
 800ed8e:	4b13      	ldr	r3, [pc, #76]	@ (800eddc <_ZNK8touchgfx24TextAreaWithWildcardBase4drawERKNS_4RectE+0xd4>)
 800ed90:	8da1      	ldrh	r1, [r4, #44]	@ 0x2c
 800ed92:	6818      	ldr	r0, [r3, #0]
 800ed94:	f7fb fe18 	bl	800a9c8 <_ZNK8touchgfx5Texts7getTextEt>
 800ed98:	6823      	ldr	r3, [r4, #0]
 800ed9a:	4680      	mov	r8, r0
 800ed9c:	6fdb      	ldr	r3, [r3, #124]	@ 0x7c
 800ed9e:	4620      	mov	r0, r4
 800eda0:	4798      	blx	r3
 800eda2:	6823      	ldr	r3, [r4, #0]
 800eda4:	4681      	mov	r9, r0
 800eda6:	f8d3 3080 	ldr.w	r3, [r3, #128]	@ 0x80
 800edaa:	4620      	mov	r0, r4
 800edac:	4798      	blx	r3
 800edae:	e9cd 9002 	strd	r9, r0, [sp, #8]
 800edb2:	ab07      	add	r3, sp, #28
 800edb4:	9300      	str	r3, [sp, #0]
 800edb6:	f8cd 8004 	str.w	r8, [sp, #4]
 800edba:	463b      	mov	r3, r7
 800edbc:	e896 0006 	ldmia.w	r6, {r1, r2}
 800edc0:	4628      	mov	r0, r5
 800edc2:	f7fb fd92 	bl	800a8ea <_ZN8touchgfx3LCD10drawStringENS_4RectERKS1_RKNS0_13StringVisualsEPKtz>
 800edc6:	b00d      	add	sp, #52	@ 0x34
 800edc8:	e8bd 83f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, pc}
 800edcc:	20002e10 	.word	0x20002e10
 800edd0:	20002e0c 	.word	0x20002e0c
 800edd4:	20002e14 	.word	0x20002e14
 800edd8:	20002dbc 	.word	0x20002dbc
 800eddc:	20002e18 	.word	0x20002e18

0800ede0 <_ZN8touchgfx5Image9setBitmapERKNS_6BitmapE>:
 800ede0:	b570      	push	{r4, r5, r6, lr}
 800ede2:	880b      	ldrh	r3, [r1, #0]
 800ede4:	84c3      	strh	r3, [r0, #38]	@ 0x26
 800ede6:	4604      	mov	r4, r0
 800ede8:	4608      	mov	r0, r1
 800edea:	460d      	mov	r5, r1
 800edec:	f004 ffd0 	bl	8013d90 <_ZNK8touchgfx6Bitmap8getWidthEv>
 800edf0:	4606      	mov	r6, r0
 800edf2:	4628      	mov	r0, r5
 800edf4:	f005 f800 	bl	8013df8 <_ZNK8touchgfx6Bitmap9getHeightEv>
 800edf8:	6823      	ldr	r3, [r4, #0]
 800edfa:	4605      	mov	r5, r0
 800edfc:	4631      	mov	r1, r6
 800edfe:	4620      	mov	r0, r4
 800ee00:	6b9b      	ldr	r3, [r3, #56]	@ 0x38
 800ee02:	4798      	blx	r3
 800ee04:	6823      	ldr	r3, [r4, #0]
 800ee06:	4629      	mov	r1, r5
 800ee08:	4620      	mov	r0, r4
 800ee0a:	6bdb      	ldr	r3, [r3, #60]	@ 0x3c
 800ee0c:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
 800ee10:	4718      	bx	r3

0800ee12 <_ZNK8touchgfx5Image12getSolidRectEv>:
 800ee12:	b510      	push	{r4, lr}
 800ee14:	f891 3028 	ldrb.w	r3, [r1, #40]	@ 0x28
 800ee18:	2bff      	cmp	r3, #255	@ 0xff
 800ee1a:	4604      	mov	r4, r0
 800ee1c:	d006      	beq.n	800ee2c <_ZNK8touchgfx5Image12getSolidRectEv+0x1a>
 800ee1e:	2300      	movs	r3, #0
 800ee20:	8003      	strh	r3, [r0, #0]
 800ee22:	8043      	strh	r3, [r0, #2]
 800ee24:	8083      	strh	r3, [r0, #4]
 800ee26:	80c3      	strh	r3, [r0, #6]
 800ee28:	4620      	mov	r0, r4
 800ee2a:	bd10      	pop	{r4, pc}
 800ee2c:	3126      	adds	r1, #38	@ 0x26
 800ee2e:	f005 f817 	bl	8013e60 <_ZNK8touchgfx6Bitmap12getSolidRectEv>
 800ee32:	e7f9      	b.n	800ee28 <_ZNK8touchgfx5Image12getSolidRectEv+0x16>

0800ee34 <_ZNK8touchgfx5Image17invalidateContentEv>:
 800ee34:	f890 2028 	ldrb.w	r2, [r0, #40]	@ 0x28
 800ee38:	b12a      	cbz	r2, 800ee46 <_ZNK8touchgfx5Image17invalidateContentEv+0x12>
 800ee3a:	f890 2025 	ldrb.w	r2, [r0, #37]	@ 0x25
 800ee3e:	b112      	cbz	r2, 800ee46 <_ZNK8touchgfx5Image17invalidateContentEv+0x12>
 800ee40:	6803      	ldr	r3, [r0, #0]
 800ee42:	695b      	ldr	r3, [r3, #20]
 800ee44:	4718      	bx	r3
 800ee46:	4770      	bx	lr

0800ee48 <_ZNK8touchgfx5Image4drawERKNS_4RectE>:
 800ee48:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 800ee4c:	4604      	mov	r4, r0
 800ee4e:	b088      	sub	sp, #32
 800ee50:	f854 3b26 	ldr.w	r3, [r4], #38
 800ee54:	2500      	movs	r5, #0
 800ee56:	6adb      	ldr	r3, [r3, #44]	@ 0x2c
 800ee58:	460f      	mov	r7, r1
 800ee5a:	e9cd 5504 	strd	r5, r5, [sp, #16]
 800ee5e:	a904      	add	r1, sp, #16
 800ee60:	4606      	mov	r6, r0
 800ee62:	4798      	blx	r3
 800ee64:	4620      	mov	r0, r4
 800ee66:	f004 ff93 	bl	8013d90 <_ZNK8touchgfx6Bitmap8getWidthEv>
 800ee6a:	4680      	mov	r8, r0
 800ee6c:	4620      	mov	r0, r4
 800ee6e:	f004 ffc3 	bl	8013df8 <_ZNK8touchgfx6Bitmap9getHeightEv>
 800ee72:	9506      	str	r5, [sp, #24]
 800ee74:	ad06      	add	r5, sp, #24
 800ee76:	f8ad 001e 	strh.w	r0, [sp, #30]
 800ee7a:	4639      	mov	r1, r7
 800ee7c:	4628      	mov	r0, r5
 800ee7e:	f8ad 801c 	strh.w	r8, [sp, #28]
 800ee82:	f7fe fa81 	bl	800d388 <_ZN8touchgfx4RectaNERKS0_>
 800ee86:	f9bd 301c 	ldrsh.w	r3, [sp, #28]
 800ee8a:	2b00      	cmp	r3, #0
 800ee8c:	dd19      	ble.n	800eec2 <_ZNK8touchgfx5Image4drawERKNS_4RectE+0x7a>
 800ee8e:	f9bd 301e 	ldrsh.w	r3, [sp, #30]
 800ee92:	2b00      	cmp	r3, #0
 800ee94:	dd15      	ble.n	800eec2 <_ZNK8touchgfx5Image4drawERKNS_4RectE+0x7a>
 800ee96:	4b0c      	ldr	r3, [pc, #48]	@ (800eec8 <_ZNK8touchgfx5Image4drawERKNS_4RectE+0x80>)
 800ee98:	681b      	ldr	r3, [r3, #0]
 800ee9a:	f893 2058 	ldrb.w	r2, [r3, #88]	@ 0x58
 800ee9e:	b10a      	cbz	r2, 800eea4 <_ZNK8touchgfx5Image4drawERKNS_4RectE+0x5c>
 800eea0:	6cd8      	ldr	r0, [r3, #76]	@ 0x4c
 800eea2:	b900      	cbnz	r0, 800eea6 <_ZNK8touchgfx5Image4drawERKNS_4RectE+0x5e>
 800eea4:	6898      	ldr	r0, [r3, #8]
 800eea6:	6801      	ldr	r1, [r0, #0]
 800eea8:	f9bd 3012 	ldrsh.w	r3, [sp, #18]
 800eeac:	f9bd 2010 	ldrsh.w	r2, [sp, #16]
 800eeb0:	2701      	movs	r7, #1
 800eeb2:	9702      	str	r7, [sp, #8]
 800eeb4:	f896 6028 	ldrb.w	r6, [r6, #40]	@ 0x28
 800eeb8:	e9cd 5600 	strd	r5, r6, [sp]
 800eebc:	688d      	ldr	r5, [r1, #8]
 800eebe:	4621      	mov	r1, r4
 800eec0:	47a8      	blx	r5
 800eec2:	b008      	add	sp, #32
 800eec4:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
 800eec8:	20002dbc 	.word	0x20002dbc

0800eecc <_ZN8touchgfx3LCD27supportDynamicBitmapDrawingENS_6Bitmap12BitmapFormatE>:
 800eecc:	b510      	push	{r4, lr}
 800eece:	6803      	ldr	r3, [r0, #0]
 800eed0:	6adb      	ldr	r3, [r3, #44]	@ 0x2c
 800eed2:	460c      	mov	r4, r1
 800eed4:	4798      	blx	r3
 800eed6:	1b03      	subs	r3, r0, r4
 800eed8:	4258      	negs	r0, r3
 800eeda:	4158      	adcs	r0, r3
 800eedc:	bd10      	pop	{r4, pc}
	...

0800eee0 <_ZN8touchgfx3LCD15setDefaultColorENS_9colortypeE>:
 800eee0:	4b01      	ldr	r3, [pc, #4]	@ (800eee8 <_ZN8touchgfx3LCD15setDefaultColorENS_9colortypeE+0x8>)
 800eee2:	6019      	str	r1, [r3, #0]
 800eee4:	4770      	bx	lr
 800eee6:	bf00      	nop
 800eee8:	20002dc4 	.word	0x20002dc4

0800eeec <_ZN8touchgfx3LCD18drawTextureMapQuadERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht>:
 800eeec:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 800eef0:	4696      	mov	lr, r2
 800eef2:	4605      	mov	r5, r0
 800eef4:	4614      	mov	r4, r2
 800eef6:	460e      	mov	r6, r1
 800eef8:	461f      	mov	r7, r3
 800eefa:	e8be 000f 	ldmia.w	lr!, {r0, r1, r2, r3}
 800eefe:	b097      	sub	sp, #92	@ 0x5c
 800ef00:	f10d 0c1c 	add.w	ip, sp, #28
 800ef04:	e8ac 000f 	stmia.w	ip!, {r0, r1, r2, r3}
 800ef08:	f8de 3000 	ldr.w	r3, [lr]
 800ef0c:	f8cc 3000 	str.w	r3, [ip]
 800ef10:	f104 0e14 	add.w	lr, r4, #20
 800ef14:	e8be 000f 	ldmia.w	lr!, {r0, r1, r2, r3}
 800ef18:	f10d 0c30 	add.w	ip, sp, #48	@ 0x30
 800ef1c:	e8ac 000f 	stmia.w	ip!, {r0, r1, r2, r3}
 800ef20:	f8de 3000 	ldr.w	r3, [lr]
 800ef24:	f8cc 3000 	str.w	r3, [ip]
 800ef28:	f104 0e28 	add.w	lr, r4, #40	@ 0x28
 800ef2c:	e8be 000f 	ldmia.w	lr!, {r0, r1, r2, r3}
 800ef30:	f10d 0c44 	add.w	ip, sp, #68	@ 0x44
 800ef34:	e8ac 000f 	stmia.w	ip!, {r0, r1, r2, r3}
 800ef38:	f89d 908c 	ldrb.w	r9, [sp, #140]	@ 0x8c
 800ef3c:	f8bd a090 	ldrh.w	sl, [sp, #144]	@ 0x90
 800ef40:	f8bd 8088 	ldrh.w	r8, [sp, #136]	@ 0x88
 800ef44:	f8de 3000 	ldr.w	r3, [lr]
 800ef48:	f8cc 3000 	str.w	r3, [ip]
 800ef4c:	9a21      	ldr	r2, [sp, #132]	@ 0x84
 800ef4e:	682b      	ldr	r3, [r5, #0]
 800ef50:	9201      	str	r2, [sp, #4]
 800ef52:	e9cd 9a03 	strd	r9, sl, [sp, #12]
 800ef56:	9a20      	ldr	r2, [sp, #128]	@ 0x80
 800ef58:	9200      	str	r2, [sp, #0]
 800ef5a:	f8cd 8008 	str.w	r8, [sp, #8]
 800ef5e:	f8d3 b03c 	ldr.w	fp, [r3, #60]	@ 0x3c
 800ef62:	aa07      	add	r2, sp, #28
 800ef64:	463b      	mov	r3, r7
 800ef66:	4631      	mov	r1, r6
 800ef68:	4628      	mov	r0, r5
 800ef6a:	47d8      	blx	fp
 800ef6c:	46a6      	mov	lr, r4
 800ef6e:	e8be 000f 	ldmia.w	lr!, {r0, r1, r2, r3}
 800ef72:	f10d 0c1c 	add.w	ip, sp, #28
 800ef76:	e8ac 000f 	stmia.w	ip!, {r0, r1, r2, r3}
 800ef7a:	f8de 3000 	ldr.w	r3, [lr]
 800ef7e:	f8cc 3000 	str.w	r3, [ip]
 800ef82:	f104 0e28 	add.w	lr, r4, #40	@ 0x28
 800ef86:	e8be 000f 	ldmia.w	lr!, {r0, r1, r2, r3}
 800ef8a:	f10d 0c30 	add.w	ip, sp, #48	@ 0x30
 800ef8e:	e8ac 000f 	stmia.w	ip!, {r0, r1, r2, r3}
 800ef92:	343c      	adds	r4, #60	@ 0x3c
 800ef94:	f8de 3000 	ldr.w	r3, [lr]
 800ef98:	f8cc 3000 	str.w	r3, [ip]
 800ef9c:	cc0f      	ldmia	r4!, {r0, r1, r2, r3}
 800ef9e:	f10d 0c44 	add.w	ip, sp, #68	@ 0x44
 800efa2:	e8ac 000f 	stmia.w	ip!, {r0, r1, r2, r3}
 800efa6:	6823      	ldr	r3, [r4, #0]
 800efa8:	f8cc 3000 	str.w	r3, [ip]
 800efac:	682b      	ldr	r3, [r5, #0]
 800efae:	e9cd 9a03 	strd	r9, sl, [sp, #12]
 800efb2:	9a21      	ldr	r2, [sp, #132]	@ 0x84
 800efb4:	9201      	str	r2, [sp, #4]
 800efb6:	9a20      	ldr	r2, [sp, #128]	@ 0x80
 800efb8:	9200      	str	r2, [sp, #0]
 800efba:	f8cd 8008 	str.w	r8, [sp, #8]
 800efbe:	6bdc      	ldr	r4, [r3, #60]	@ 0x3c
 800efc0:	aa07      	add	r2, sp, #28
 800efc2:	463b      	mov	r3, r7
 800efc4:	4631      	mov	r1, r6
 800efc6:	4628      	mov	r0, r5
 800efc8:	47a0      	blx	r4
 800efca:	b017      	add	sp, #92	@ 0x5c
 800efcc:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}

0800efd0 <_ZN8touchgfx3LCD28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth>:
 800efd0:	2000      	movs	r0, #0
 800efd2:	4770      	bx	lr

0800efd4 <_ZN8touchgfx3LCD22drawTextureMapScanLineERKNS_14DrawingSurfaceERKNS_9GradientsEPKNS_4EdgeES9_RKNS_14TextureSurfaceERKNS_4RectESF_tht>:
 800efd4:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 800efd8:	b08d      	sub	sp, #52	@ 0x34
 800efda:	4688      	mov	r8, r1
 800efdc:	9916      	ldr	r1, [sp, #88]	@ 0x58
 800efde:	f8d3 c000 	ldr.w	ip, [r3]
 800efe2:	680f      	ldr	r7, [r1, #0]
 800efe4:	f8bd 4070 	ldrh.w	r4, [sp, #112]	@ 0x70
 800efe8:	ed92 4a09 	vldr	s8, [r2, #36]	@ 0x24
 800efec:	edd2 4a0b 	vldr	s9, [r2, #44]	@ 0x2c
 800eff0:	edd3 6a07 	vldr	s13, [r3, #28]
 800eff4:	9918      	ldr	r1, [sp, #96]	@ 0x60
 800eff6:	f8dd a064 	ldr.w	sl, [sp, #100]	@ 0x64
 800effa:	f9b1 9000 	ldrsh.w	r9, [r1]
 800effe:	f9ba 1000 	ldrsh.w	r1, [sl]
 800f002:	edd3 1a0a 	vldr	s3, [r3, #40]	@ 0x28
 800f006:	ed93 2a0d 	vldr	s4, [r3, #52]	@ 0x34
 800f00a:	eba7 070c 	sub.w	r7, r7, ip
 800f00e:	42bc      	cmp	r4, r7
 800f010:	bfa8      	it	ge
 800f012:	463c      	movge	r4, r7
 800f014:	ee07 4a90 	vmov	s15, r4
 800f018:	eeb8 5ae7 	vcvt.f32.s32	s10, s15
 800f01c:	edd2 7a0d 	vldr	s15, [r2, #52]	@ 0x34
 800f020:	ee25 4a04 	vmul.f32	s8, s10, s8
 800f024:	ee65 4a24 	vmul.f32	s9, s10, s9
 800f028:	ee25 5a27 	vmul.f32	s10, s10, s15
 800f02c:	eef7 7a00 	vmov.f32	s15, #112	@ 0x3f800000  1.0
 800f030:	ee87 7aa6 	vdiv.f32	s14, s15, s13
 800f034:	eb09 0e0c 	add.w	lr, r9, ip
 800f038:	4571      	cmp	r1, lr
 800f03a:	ee71 0aa4 	vadd.f32	s1, s3, s9
 800f03e:	ee32 1a05 	vadd.f32	s2, s4, s10
 800f042:	ee36 0a84 	vadd.f32	s0, s13, s8
 800f046:	ee61 1a87 	vmul.f32	s3, s3, s14
 800f04a:	ee22 2a07 	vmul.f32	s4, s4, s14
 800f04e:	f340 808d 	ble.w	800f16c <_ZN8touchgfx3LCD22drawTextureMapScanLineERKNS_14DrawingSurfaceERKNS_9GradientsEPKNS_4EdgeES9_RKNS_14TextureSurfaceERKNS_4RectESF_tht+0x198>
 800f052:	eba1 060e 	sub.w	r6, r1, lr
 800f056:	fb96 f5f4 	sdiv	r5, r6, r4
 800f05a:	ee07 5a10 	vmov	s14, r5
 800f05e:	eeb8 7ac7 	vcvt.f32.s32	s14, s14
 800f062:	2d00      	cmp	r5, #0
 800f064:	fb04 6615 	mls	r6, r4, r5, r6
 800f068:	eea7 0a04 	vfma.f32	s0, s14, s8
 800f06c:	eee7 0a24 	vfma.f32	s1, s14, s9
 800f070:	eea7 1a05 	vfma.f32	s2, s14, s10
 800f074:	dd13      	ble.n	800f09e <_ZN8touchgfx3LCD22drawTextureMapScanLineERKNS_14DrawingSurfaceERKNS_9GradientsEPKNS_4EdgeES9_RKNS_14TextureSurfaceERKNS_4RectESF_tht+0xca>
 800f076:	ee70 6a44 	vsub.f32	s13, s0, s8
 800f07a:	ee70 1ae4 	vsub.f32	s3, s1, s9
 800f07e:	eef5 6a40 	vcmp.f32	s13, #0.0
 800f082:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 800f086:	bf18      	it	ne
 800f088:	ee87 7aa6 	vdivne.f32	s14, s15, s13
 800f08c:	ee31 2a45 	vsub.f32	s4, s2, s10
 800f090:	bf08      	it	eq
 800f092:	eeb0 7a67 	vmoveq.f32	s14, s15
 800f096:	ee61 1a87 	vmul.f32	s3, s3, s14
 800f09a:	ee22 2a07 	vmul.f32	s4, s4, s14
 800f09e:	fb05 f204 	mul.w	r2, r5, r4
 800f0a2:	1abf      	subs	r7, r7, r2
 800f0a4:	4494      	add	ip, r2
 800f0a6:	f8ba 2004 	ldrh.w	r2, [sl, #4]
 800f0aa:	4411      	add	r1, r2
 800f0ac:	eb09 020c 	add.w	r2, r9, ip
 800f0b0:	443a      	add	r2, r7
 800f0b2:	b209      	sxth	r1, r1
 800f0b4:	428a      	cmp	r2, r1
 800f0b6:	bfc4      	itt	gt
 800f0b8:	eba1 0209 	subgt.w	r2, r1, r9
 800f0bc:	eba2 070c 	subgt.w	r7, r2, ip
 800f0c0:	2f00      	cmp	r7, #0
 800f0c2:	dd50      	ble.n	800f166 <_ZN8touchgfx3LCD22drawTextureMapScanLineERKNS_14DrawingSurfaceERKNS_9GradientsEPKNS_4EdgeES9_RKNS_14TextureSurfaceERKNS_4RectESF_tht+0x192>
 800f0c4:	fb97 f1f4 	sdiv	r1, r7, r4
 800f0c8:	fb04 7211 	mls	r2, r4, r1, r7
 800f0cc:	b90a      	cbnz	r2, 800f0d2 <_ZN8touchgfx3LCD22drawTextureMapScanLineERKNS_14DrawingSurfaceERKNS_9GradientsEPKNS_4EdgeES9_RKNS_14TextureSurfaceERKNS_4RectESF_tht+0xfe>
 800f0ce:	3901      	subs	r1, #1
 800f0d0:	4622      	mov	r2, r4
 800f0d2:	eec7 3a80 	vdiv.f32	s7, s15, s0
 800f0d6:	6840      	ldr	r0, [r0, #4]
 800f0d8:	900b      	str	r0, [sp, #44]	@ 0x2c
 800f0da:	f8d0 a000 	ldr.w	sl, [r0]
 800f0de:	9817      	ldr	r0, [sp, #92]	@ 0x5c
 800f0e0:	9008      	str	r0, [sp, #32]
 800f0e2:	f89d b06c 	ldrb.w	fp, [sp, #108]	@ 0x6c
 800f0e6:	9818      	ldr	r0, [sp, #96]	@ 0x60
 800f0e8:	f8cd b024 	str.w	fp, [sp, #36]	@ 0x24
 800f0ec:	f9b0 b002 	ldrsh.w	fp, [r0, #2]
 800f0f0:	695b      	ldr	r3, [r3, #20]
 800f0f2:	980b      	ldr	r0, [sp, #44]	@ 0x2c
 800f0f4:	445b      	add	r3, fp
 800f0f6:	eef0 6a42 	vmov.f32	s13, s4
 800f0fa:	ee60 2aa3 	vmul.f32	s5, s1, s7
 800f0fe:	ee21 3a23 	vmul.f32	s6, s2, s7
 800f102:	ee72 7ae1 	vsub.f32	s15, s5, s3
 800f106:	eefe 6ac8 	vcvt.s32.f32	s13, s13, #16
 800f10a:	eefe 7ac8 	vcvt.s32.f32	s15, s15, #16
 800f10e:	9307      	str	r3, [sp, #28]
 800f110:	ee17 7a90 	vmov	r7, s15
 800f114:	ee73 7a42 	vsub.f32	s15, s6, s4
 800f118:	eeb0 7a61 	vmov.f32	s14, s3
 800f11c:	eefe 7ac8 	vcvt.s32.f32	s15, s15, #16
 800f120:	ee16 3a90 	vmov	r3, s13
 800f124:	fb97 f7f4 	sdiv	r7, r7, r4
 800f128:	ee17 ca90 	vmov	ip, s15
 800f12c:	eebe 7ac8 	vcvt.s32.f32	s14, s14, #16
 800f130:	fb9c fcf4 	sdiv	ip, ip, r4
 800f134:	fb0c 3306 	mla	r3, ip, r6, r3
 800f138:	9302      	str	r3, [sp, #8]
 800f13a:	ee17 3a10 	vmov	r3, s14
 800f13e:	44b6      	add	lr, r6
 800f140:	fb04 e505 	mla	r5, r4, r5, lr
 800f144:	e9cd 7c03 	strd	r7, ip, [sp, #12]
 800f148:	fb07 3706 	mla	r7, r7, r6, r3
 800f14c:	e9cd 8505 	strd	r8, r5, [sp, #20]
 800f150:	e9cd 4700 	strd	r4, r7, [sp]
 800f154:	2900      	cmp	r1, #0
 800f156:	bfcc      	ite	gt
 800f158:	46a1      	movgt	r9, r4
 800f15a:	4691      	movle	r9, r2
 800f15c:	eba9 0306 	sub.w	r3, r9, r6
 800f160:	f8da 4008 	ldr.w	r4, [sl, #8]
 800f164:	47a0      	blx	r4
 800f166:	b00d      	add	sp, #52	@ 0x34
 800f168:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 800f16c:	2500      	movs	r5, #0
 800f16e:	462e      	mov	r6, r5
 800f170:	e799      	b.n	800f0a6 <_ZN8touchgfx3LCD22drawTextureMapScanLineERKNS_14DrawingSurfaceERKNS_9GradientsEPKNS_4EdgeES9_RKNS_14TextureSurfaceERKNS_4RectESF_tht+0xd2>
	...

0800f174 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht>:
 800f174:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 800f178:	b0db      	sub	sp, #364	@ 0x16c
 800f17a:	461d      	mov	r5, r3
 800f17c:	f8bd 3198 	ldrh.w	r3, [sp, #408]	@ 0x198
 800f180:	930a      	str	r3, [sp, #40]	@ 0x28
 800f182:	f89d 319c 	ldrb.w	r3, [sp, #412]	@ 0x19c
 800f186:	930b      	str	r3, [sp, #44]	@ 0x2c
 800f188:	f8bd 31a0 	ldrh.w	r3, [sp, #416]	@ 0x1a0
 800f18c:	9310      	str	r3, [sp, #64]	@ 0x40
 800f18e:	6803      	ldr	r3, [r0, #0]
 800f190:	910f      	str	r1, [sp, #60]	@ 0x3c
 800f192:	6c5f      	ldr	r7, [r3, #68]	@ 0x44
 800f194:	9009      	str	r0, [sp, #36]	@ 0x24
 800f196:	4614      	mov	r4, r2
 800f198:	4629      	mov	r1, r5
 800f19a:	e9dd 230a 	ldrd	r2, r3, [sp, #40]	@ 0x28
 800f19e:	f8dd b194 	ldr.w	fp, [sp, #404]	@ 0x194
 800f1a2:	47b8      	blx	r7
 800f1a4:	9b09      	ldr	r3, [sp, #36]	@ 0x24
 800f1a6:	6058      	str	r0, [r3, #4]
 800f1a8:	2800      	cmp	r0, #0
 800f1aa:	f000 83a1 	beq.w	800f8f0 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x77c>
 800f1ae:	682b      	ldr	r3, [r5, #0]
 800f1b0:	9314      	str	r3, [sp, #80]	@ 0x50
 800f1b2:	686b      	ldr	r3, [r5, #4]
 800f1b4:	9315      	str	r3, [sp, #84]	@ 0x54
 800f1b6:	4bc4      	ldr	r3, [pc, #784]	@ (800f4c8 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x354>)
 800f1b8:	ed94 7a02 	vldr	s14, [r4, #8]
 800f1bc:	7819      	ldrb	r1, [r3, #0]
 800f1be:	e9d5 2302 	ldrd	r2, r3, [r5, #8]
 800f1c2:	eef2 7a04 	vmov.f32	s15, #36	@ 0x41200000  10.0
 800f1c6:	2900      	cmp	r1, #0
 800f1c8:	eeb4 7ae7 	vcmpe.f32	s14, s15
 800f1cc:	bf16      	itet	ne
 800f1ce:	4619      	movne	r1, r3
 800f1d0:	4611      	moveq	r1, r2
 800f1d2:	4613      	movne	r3, r2
 800f1d4:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 800f1d8:	9116      	str	r1, [sp, #88]	@ 0x58
 800f1da:	e9cd 3217 	strd	r3, r2, [sp, #92]	@ 0x5c
 800f1de:	f240 8387 	bls.w	800f8f0 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x77c>
 800f1e2:	ed94 7a07 	vldr	s14, [r4, #28]
 800f1e6:	eeb4 7ae7 	vcmpe.f32	s14, s15
 800f1ea:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 800f1ee:	f240 837f 	bls.w	800f8f0 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x77c>
 800f1f2:	ed94 7a0c 	vldr	s14, [r4, #48]	@ 0x30
 800f1f6:	eeb4 7ae7 	vcmpe.f32	s14, s15
 800f1fa:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 800f1fe:	f240 8377 	bls.w	800f8f0 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x77c>
 800f202:	6822      	ldr	r2, [r4, #0]
 800f204:	4bb1      	ldr	r3, [pc, #708]	@ (800f4cc <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x358>)
 800f206:	429a      	cmp	r2, r3
 800f208:	f2c0 8372 	blt.w	800f8f0 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x77c>
 800f20c:	49b0      	ldr	r1, [pc, #704]	@ (800f4d0 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x35c>)
 800f20e:	6963      	ldr	r3, [r4, #20]
 800f210:	428a      	cmp	r2, r1
 800f212:	f300 836d 	bgt.w	800f8f0 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x77c>
 800f216:	f503 331c 	add.w	r3, r3, #159744	@ 0x27000
 800f21a:	48ae      	ldr	r0, [pc, #696]	@ (800f4d4 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x360>)
 800f21c:	33ff      	adds	r3, #255	@ 0xff
 800f21e:	4283      	cmp	r3, r0
 800f220:	f200 8366 	bhi.w	800f8f0 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x77c>
 800f224:	6aa3      	ldr	r3, [r4, #40]	@ 0x28
 800f226:	4dac      	ldr	r5, [pc, #688]	@ (800f4d8 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x364>)
 800f228:	f503 331c 	add.w	r3, r3, #159744	@ 0x27000
 800f22c:	33ff      	adds	r3, #255	@ 0xff
 800f22e:	42ab      	cmp	r3, r5
 800f230:	f200 835e 	bhi.w	800f8f0 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x77c>
 800f234:	6862      	ldr	r2, [r4, #4]
 800f236:	f502 331c 	add.w	r3, r2, #159744	@ 0x27000
 800f23a:	33ff      	adds	r3, #255	@ 0xff
 800f23c:	4283      	cmp	r3, r0
 800f23e:	f200 8357 	bhi.w	800f8f0 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x77c>
 800f242:	69a1      	ldr	r1, [r4, #24]
 800f244:	f501 331c 	add.w	r3, r1, #159744	@ 0x27000
 800f248:	33ff      	adds	r3, #255	@ 0xff
 800f24a:	4283      	cmp	r3, r0
 800f24c:	f200 8350 	bhi.w	800f8f0 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x77c>
 800f250:	6ae3      	ldr	r3, [r4, #44]	@ 0x2c
 800f252:	f503 301c 	add.w	r0, r3, #159744	@ 0x27000
 800f256:	30ff      	adds	r0, #255	@ 0xff
 800f258:	42a8      	cmp	r0, r5
 800f25a:	f200 8349 	bhi.w	800f8f0 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x77c>
 800f25e:	428a      	cmp	r2, r1
 800f260:	f280 8110 	bge.w	800f484 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x310>
 800f264:	429a      	cmp	r2, r3
 800f266:	f300 8119 	bgt.w	800f49c <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x328>
 800f26a:	4299      	cmp	r1, r3
 800f26c:	f280 811d 	bge.w	800f4aa <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x336>
 800f270:	2502      	movs	r5, #2
 800f272:	2701      	movs	r7, #1
 800f274:	46a9      	mov	r9, r5
 800f276:	46b8      	mov	r8, r7
 800f278:	f04f 0a00 	mov.w	sl, #0
 800f27c:	4621      	mov	r1, r4
 800f27e:	a849      	add	r0, sp, #292	@ 0x124
 800f280:	f003 fd3a 	bl	8012cf8 <_ZN8touchgfx9GradientsC1EPKNS_7Point3DE>
 800f284:	4622      	mov	r2, r4
 800f286:	4653      	mov	r3, sl
 800f288:	a949      	add	r1, sp, #292	@ 0x124
 800f28a:	f8cd 9000 	str.w	r9, [sp]
 800f28e:	a819      	add	r0, sp, #100	@ 0x64
 800f290:	f003 fe62 	bl	8012f58 <_ZN8touchgfx4EdgeC1ERKNS_9GradientsEPKNS_7Point3DEii>
 800f294:	4622      	mov	r2, r4
 800f296:	4653      	mov	r3, sl
 800f298:	a949      	add	r1, sp, #292	@ 0x124
 800f29a:	f8cd 8000 	str.w	r8, [sp]
 800f29e:	a829      	add	r0, sp, #164	@ 0xa4
 800f2a0:	f003 fe5a 	bl	8012f58 <_ZN8touchgfx4EdgeC1ERKNS_9GradientsEPKNS_7Point3DEii>
 800f2a4:	4643      	mov	r3, r8
 800f2a6:	4622      	mov	r2, r4
 800f2a8:	a949      	add	r1, sp, #292	@ 0x124
 800f2aa:	f8cd 9000 	str.w	r9, [sp]
 800f2ae:	a839      	add	r0, sp, #228	@ 0xe4
 800f2b0:	f003 fe52 	bl	8012f58 <_ZN8touchgfx4EdgeC1ERKNS_9GradientsEPKNS_7Point3DEii>
 800f2b4:	42af      	cmp	r7, r5
 800f2b6:	bfb5      	itete	lt
 800f2b8:	2300      	movlt	r3, #0
 800f2ba:	2301      	movge	r3, #1
 800f2bc:	930e      	strlt	r3, [sp, #56]	@ 0x38
 800f2be:	930e      	strge	r3, [sp, #56]	@ 0x38
 800f2c0:	9b0f      	ldr	r3, [sp, #60]	@ 0x3c
 800f2c2:	e893 0003 	ldmia.w	r3, {r0, r1}
 800f2c6:	af12      	add	r7, sp, #72	@ 0x48
 800f2c8:	bfb9      	ittee	lt
 800f2ca:	ad29      	addlt	r5, sp, #164	@ 0xa4
 800f2cc:	ac19      	addlt	r4, sp, #100	@ 0x64
 800f2ce:	ad19      	addge	r5, sp, #100	@ 0x64
 800f2d0:	ac29      	addge	r4, sp, #164	@ 0xa4
 800f2d2:	e887 0003 	stmia.w	r7, {r0, r1}
 800f2d6:	b928      	cbnz	r0, 800f2e4 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x170>
 800f2d8:	4b80      	ldr	r3, [pc, #512]	@ (800f4dc <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x368>)
 800f2da:	6818      	ldr	r0, [r3, #0]
 800f2dc:	6803      	ldr	r3, [r0, #0]
 800f2de:	6a9b      	ldr	r3, [r3, #40]	@ 0x28
 800f2e0:	4798      	blx	r3
 800f2e2:	6038      	str	r0, [r7, #0]
 800f2e4:	9b64      	ldr	r3, [sp, #400]	@ 0x190
 800f2e6:	f8bb 0006 	ldrh.w	r0, [fp, #6]
 800f2ea:	f9b3 3002 	ldrsh.w	r3, [r3, #2]
 800f2ee:	930c      	str	r3, [sp, #48]	@ 0x30
 800f2f0:	990c      	ldr	r1, [sp, #48]	@ 0x30
 800f2f2:	6963      	ldr	r3, [r4, #20]
 800f2f4:	9a2f      	ldr	r2, [sp, #188]	@ 0xbc
 800f2f6:	440b      	add	r3, r1
 800f2f8:	f9bb 1002 	ldrsh.w	r1, [fp, #2]
 800f2fc:	4408      	add	r0, r1
 800f2fe:	b200      	sxth	r0, r0
 800f300:	4283      	cmp	r3, r0
 800f302:	900d      	str	r0, [sp, #52]	@ 0x34
 800f304:	f280 80dd 	bge.w	800f4c2 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x34e>
 800f308:	428b      	cmp	r3, r1
 800f30a:	da08      	bge.n	800f31e <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x1aa>
 800f30c:	2a00      	cmp	r2, #0
 800f30e:	dd06      	ble.n	800f31e <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x1aa>
 800f310:	1acb      	subs	r3, r1, r3
 800f312:	429a      	cmp	r2, r3
 800f314:	f2c0 80e4 	blt.w	800f4e0 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x36c>
 800f318:	2b00      	cmp	r3, #0
 800f31a:	f300 80e2 	bgt.w	800f4e2 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x36e>
 800f31e:	6967      	ldr	r7, [r4, #20]
 800f320:	9b0c      	ldr	r3, [sp, #48]	@ 0x30
 800f322:	443b      	add	r3, r7
 800f324:	461f      	mov	r7, r3
 800f326:	9b0d      	ldr	r3, [sp, #52]	@ 0x34
 800f328:	1bdf      	subs	r7, r3, r7
 800f32a:	4297      	cmp	r7, r2
 800f32c:	bfa8      	it	ge
 800f32e:	4617      	movge	r7, r2
 800f330:	f10d 0850 	add.w	r8, sp, #80	@ 0x50
 800f334:	2f00      	cmp	r7, #0
 800f336:	f340 8166 	ble.w	800f606 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x492>
 800f33a:	9b64      	ldr	r3, [sp, #400]	@ 0x190
 800f33c:	6829      	ldr	r1, [r5, #0]
 800f33e:	f9b3 2000 	ldrsh.w	r2, [r3]
 800f342:	f9bb 3000 	ldrsh.w	r3, [fp]
 800f346:	6820      	ldr	r0, [r4, #0]
 800f348:	4411      	add	r1, r2
 800f34a:	4299      	cmp	r1, r3
 800f34c:	dd1a      	ble.n	800f384 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x210>
 800f34e:	f8bb 1004 	ldrh.w	r1, [fp, #4]
 800f352:	440b      	add	r3, r1
 800f354:	4402      	add	r2, r0
 800f356:	b21b      	sxth	r3, r3
 800f358:	429a      	cmp	r2, r3
 800f35a:	dc13      	bgt.n	800f384 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x210>
 800f35c:	9b09      	ldr	r3, [sp, #36]	@ 0x24
 800f35e:	9a10      	ldr	r2, [sp, #64]	@ 0x40
 800f360:	681b      	ldr	r3, [r3, #0]
 800f362:	9206      	str	r2, [sp, #24]
 800f364:	9a0b      	ldr	r2, [sp, #44]	@ 0x2c
 800f366:	9205      	str	r2, [sp, #20]
 800f368:	9a0a      	ldr	r2, [sp, #40]	@ 0x28
 800f36a:	9500      	str	r5, [sp, #0]
 800f36c:	e9cd b203 	strd	fp, r2, [sp, #12]
 800f370:	9a64      	ldr	r2, [sp, #400]	@ 0x190
 800f372:	9809      	ldr	r0, [sp, #36]	@ 0x24
 800f374:	e9cd 8201 	strd	r8, r2, [sp, #4]
 800f378:	a912      	add	r1, sp, #72	@ 0x48
 800f37a:	f8d3 9048 	ldr.w	r9, [r3, #72]	@ 0x48
 800f37e:	aa49      	add	r2, sp, #292	@ 0x124
 800f380:	4623      	mov	r3, r4
 800f382:	47c8      	blx	r9
 800f384:	e9d4 2300 	ldrd	r2, r3, [r4]
 800f388:	441a      	add	r2, r3
 800f38a:	6963      	ldr	r3, [r4, #20]
 800f38c:	ed94 7a0a 	vldr	s14, [r4, #40]	@ 0x28
 800f390:	edd4 7a0b 	vldr	s15, [r4, #44]	@ 0x2c
 800f394:	edd4 6a0e 	vldr	s13, [r4, #56]	@ 0x38
 800f398:	68a1      	ldr	r1, [r4, #8]
 800f39a:	ed94 6a08 	vldr	s12, [r4, #32]
 800f39e:	6022      	str	r2, [r4, #0]
 800f3a0:	3301      	adds	r3, #1
 800f3a2:	6163      	str	r3, [r4, #20]
 800f3a4:	69a3      	ldr	r3, [r4, #24]
 800f3a6:	ee37 7a27 	vadd.f32	s14, s14, s15
 800f3aa:	3b01      	subs	r3, #1
 800f3ac:	edd4 7a0d 	vldr	s15, [r4, #52]	@ 0x34
 800f3b0:	61a3      	str	r3, [r4, #24]
 800f3b2:	6923      	ldr	r3, [r4, #16]
 800f3b4:	ed84 7a0a 	vstr	s14, [r4, #40]	@ 0x28
 800f3b8:	ee77 7aa6 	vadd.f32	s15, s15, s13
 800f3bc:	edd4 6a07 	vldr	s13, [r4, #28]
 800f3c0:	edc4 7a0d 	vstr	s15, [r4, #52]	@ 0x34
 800f3c4:	440b      	add	r3, r1
 800f3c6:	68e1      	ldr	r1, [r4, #12]
 800f3c8:	6123      	str	r3, [r4, #16]
 800f3ca:	ee76 6a86 	vadd.f32	s13, s13, s12
 800f3ce:	428b      	cmp	r3, r1
 800f3d0:	edc4 6a07 	vstr	s13, [r4, #28]
 800f3d4:	db15      	blt.n	800f402 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x28e>
 800f3d6:	ed94 6a09 	vldr	s12, [r4, #36]	@ 0x24
 800f3da:	ee76 6a26 	vadd.f32	s13, s12, s13
 800f3de:	3201      	adds	r2, #1
 800f3e0:	edc4 6a07 	vstr	s13, [r4, #28]
 800f3e4:	edd4 6a0c 	vldr	s13, [r4, #48]	@ 0x30
 800f3e8:	6022      	str	r2, [r4, #0]
 800f3ea:	ee36 7a87 	vadd.f32	s14, s13, s14
 800f3ee:	1a5b      	subs	r3, r3, r1
 800f3f0:	ed84 7a0a 	vstr	s14, [r4, #40]	@ 0x28
 800f3f4:	ed94 7a0f 	vldr	s14, [r4, #60]	@ 0x3c
 800f3f8:	6123      	str	r3, [r4, #16]
 800f3fa:	ee77 7a27 	vadd.f32	s15, s14, s15
 800f3fe:	edc4 7a0d 	vstr	s15, [r4, #52]	@ 0x34
 800f402:	e9d5 2300 	ldrd	r2, r3, [r5]
 800f406:	441a      	add	r2, r3
 800f408:	696b      	ldr	r3, [r5, #20]
 800f40a:	ed95 7a0a 	vldr	s14, [r5, #40]	@ 0x28
 800f40e:	edd5 7a0b 	vldr	s15, [r5, #44]	@ 0x2c
 800f412:	edd5 6a0e 	vldr	s13, [r5, #56]	@ 0x38
 800f416:	68a9      	ldr	r1, [r5, #8]
 800f418:	ed95 6a08 	vldr	s12, [r5, #32]
 800f41c:	602a      	str	r2, [r5, #0]
 800f41e:	3301      	adds	r3, #1
 800f420:	616b      	str	r3, [r5, #20]
 800f422:	69ab      	ldr	r3, [r5, #24]
 800f424:	ee37 7a27 	vadd.f32	s14, s14, s15
 800f428:	3b01      	subs	r3, #1
 800f42a:	edd5 7a0d 	vldr	s15, [r5, #52]	@ 0x34
 800f42e:	61ab      	str	r3, [r5, #24]
 800f430:	692b      	ldr	r3, [r5, #16]
 800f432:	ed85 7a0a 	vstr	s14, [r5, #40]	@ 0x28
 800f436:	ee77 7aa6 	vadd.f32	s15, s15, s13
 800f43a:	edd5 6a07 	vldr	s13, [r5, #28]
 800f43e:	edc5 7a0d 	vstr	s15, [r5, #52]	@ 0x34
 800f442:	440b      	add	r3, r1
 800f444:	68e9      	ldr	r1, [r5, #12]
 800f446:	612b      	str	r3, [r5, #16]
 800f448:	ee76 6a86 	vadd.f32	s13, s13, s12
 800f44c:	428b      	cmp	r3, r1
 800f44e:	edc5 6a07 	vstr	s13, [r5, #28]
 800f452:	db15      	blt.n	800f480 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x30c>
 800f454:	ed95 6a09 	vldr	s12, [r5, #36]	@ 0x24
 800f458:	ee76 6a26 	vadd.f32	s13, s12, s13
 800f45c:	3201      	adds	r2, #1
 800f45e:	edc5 6a07 	vstr	s13, [r5, #28]
 800f462:	edd5 6a0c 	vldr	s13, [r5, #48]	@ 0x30
 800f466:	602a      	str	r2, [r5, #0]
 800f468:	ee36 7a87 	vadd.f32	s14, s13, s14
 800f46c:	1a5b      	subs	r3, r3, r1
 800f46e:	ed85 7a0a 	vstr	s14, [r5, #40]	@ 0x28
 800f472:	ed95 7a0f 	vldr	s14, [r5, #60]	@ 0x3c
 800f476:	612b      	str	r3, [r5, #16]
 800f478:	ee77 7a27 	vadd.f32	s15, s14, s15
 800f47c:	edc5 7a0d 	vstr	s15, [r5, #52]	@ 0x34
 800f480:	3f01      	subs	r7, #1
 800f482:	e757      	b.n	800f334 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x1c0>
 800f484:	4299      	cmp	r1, r3
 800f486:	dc13      	bgt.n	800f4b0 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x33c>
 800f488:	429a      	cmp	r2, r3
 800f48a:	da14      	bge.n	800f4b6 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x342>
 800f48c:	2502      	movs	r5, #2
 800f48e:	2703      	movs	r7, #3
 800f490:	46a9      	mov	r9, r5
 800f492:	f04f 0800 	mov.w	r8, #0
 800f496:	f04f 0a01 	mov.w	sl, #1
 800f49a:	e6ef      	b.n	800f27c <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x108>
 800f49c:	2501      	movs	r5, #1
 800f49e:	2700      	movs	r7, #0
 800f4a0:	46a9      	mov	r9, r5
 800f4a2:	46b8      	mov	r8, r7
 800f4a4:	f04f 0a02 	mov.w	sl, #2
 800f4a8:	e6e8      	b.n	800f27c <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x108>
 800f4aa:	2501      	movs	r5, #1
 800f4ac:	2702      	movs	r7, #2
 800f4ae:	e6e1      	b.n	800f274 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x100>
 800f4b0:	2500      	movs	r5, #0
 800f4b2:	2701      	movs	r7, #1
 800f4b4:	e7f4      	b.n	800f4a0 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x32c>
 800f4b6:	2702      	movs	r7, #2
 800f4b8:	2503      	movs	r5, #3
 800f4ba:	f04f 0900 	mov.w	r9, #0
 800f4be:	46b8      	mov	r8, r7
 800f4c0:	e7e9      	b.n	800f496 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x322>
 800f4c2:	4613      	mov	r3, r2
 800f4c4:	e728      	b.n	800f318 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x1a4>
 800f4c6:	bf00      	nop
 800f4c8:	20002db4 	.word	0x20002db4
 800f4cc:	fffd8f01 	.word	0xfffd8f01
 800f4d0:	00027100 	.word	0x00027100
 800f4d4:	0004e1ff 	.word	0x0004e1ff
 800f4d8:	0004e1fe 	.word	0x0004e1fe
 800f4dc:	20002dbc 	.word	0x20002dbc
 800f4e0:	4613      	mov	r3, r2
 800f4e2:	992b      	ldr	r1, [sp, #172]	@ 0xac
 800f4e4:	9111      	str	r1, [sp, #68]	@ 0x44
 800f4e6:	e9dd 0a29 	ldrd	r0, sl, [sp, #164]	@ 0xa4
 800f4ea:	e9dd 812c 	ldrd	r8, r1, [sp, #176]	@ 0xb0
 800f4ee:	9f2e      	ldr	r7, [sp, #184]	@ 0xb8
 800f4f0:	eddd 4a34 	vldr	s9, [sp, #208]	@ 0xd0
 800f4f4:	ed9d 7a33 	vldr	s14, [sp, #204]	@ 0xcc
 800f4f8:	ed9d 4a37 	vldr	s8, [sp, #220]	@ 0xdc
 800f4fc:	eddd 7a36 	vldr	s15, [sp, #216]	@ 0xd8
 800f500:	eddd 3a31 	vldr	s7, [sp, #196]	@ 0xc4
 800f504:	eddd 6a30 	vldr	s13, [sp, #192]	@ 0xc0
 800f508:	ed9d 5a32 	vldr	s10, [sp, #200]	@ 0xc8
 800f50c:	eddd 5a35 	vldr	s11, [sp, #212]	@ 0xd4
 800f510:	ed9d 6a38 	vldr	s12, [sp, #224]	@ 0xe0
 800f514:	469e      	mov	lr, r3
 800f516:	469c      	mov	ip, r3
 800f518:	f04f 0900 	mov.w	r9, #0
 800f51c:	f1bc 0f00 	cmp.w	ip, #0
 800f520:	d147      	bne.n	800f5b2 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x43e>
 800f522:	eb03 0c07 	add.w	ip, r3, r7
 800f526:	1ad7      	subs	r7, r2, r3
 800f528:	f1b9 0f00 	cmp.w	r9, #0
 800f52c:	d009      	beq.n	800f542 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x3ce>
 800f52e:	e9cd c72e 	strd	ip, r7, [sp, #184]	@ 0xb8
 800f532:	9029      	str	r0, [sp, #164]	@ 0xa4
 800f534:	ed8d 7a33 	vstr	s14, [sp, #204]	@ 0xcc
 800f538:	edcd 7a36 	vstr	s15, [sp, #216]	@ 0xd8
 800f53c:	edcd 6a30 	vstr	s13, [sp, #192]	@ 0xc0
 800f540:	912d      	str	r1, [sp, #180]	@ 0xb4
 800f542:	991b      	ldr	r1, [sp, #108]	@ 0x6c
 800f544:	9111      	str	r1, [sp, #68]	@ 0x44
 800f546:	e9dd 0a19 	ldrd	r0, sl, [sp, #100]	@ 0x64
 800f54a:	e9dd c71e 	ldrd	ip, r7, [sp, #120]	@ 0x78
 800f54e:	e9dd 911c 	ldrd	r9, r1, [sp, #112]	@ 0x70
 800f552:	eddd 4a24 	vldr	s9, [sp, #144]	@ 0x90
 800f556:	eddd 6a23 	vldr	s13, [sp, #140]	@ 0x8c
 800f55a:	ed9d 4a27 	vldr	s8, [sp, #156]	@ 0x9c
 800f55e:	ed9d 7a26 	vldr	s14, [sp, #152]	@ 0x98
 800f562:	eddd 3a21 	vldr	s7, [sp, #132]	@ 0x84
 800f566:	eddd 7a20 	vldr	s15, [sp, #128]	@ 0x80
 800f56a:	ed9d 5a22 	vldr	s10, [sp, #136]	@ 0x88
 800f56e:	eddd 5a25 	vldr	s11, [sp, #148]	@ 0x94
 800f572:	ed9d 6a28 	vldr	s12, [sp, #160]	@ 0xa0
 800f576:	f04f 0800 	mov.w	r8, #0
 800f57a:	f1be 0f00 	cmp.w	lr, #0
 800f57e:	d031      	beq.n	800f5e4 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x470>
 800f580:	9e11      	ldr	r6, [sp, #68]	@ 0x44
 800f582:	4431      	add	r1, r6
 800f584:	4549      	cmp	r1, r9
 800f586:	4450      	add	r0, sl
 800f588:	ee76 6aa4 	vadd.f32	s13, s13, s9
 800f58c:	ee37 7a04 	vadd.f32	s14, s14, s8
 800f590:	ee77 7aa3 	vadd.f32	s15, s15, s7
 800f594:	db08      	blt.n	800f5a8 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x434>
 800f596:	ee77 7a85 	vadd.f32	s15, s15, s10
 800f59a:	ee76 6aa5 	vadd.f32	s13, s13, s11
 800f59e:	ee37 7a06 	vadd.f32	s14, s14, s12
 800f5a2:	3001      	adds	r0, #1
 800f5a4:	eba1 0109 	sub.w	r1, r1, r9
 800f5a8:	f10e 3eff 	add.w	lr, lr, #4294967295
 800f5ac:	f04f 0801 	mov.w	r8, #1
 800f5b0:	e7e3      	b.n	800f57a <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x406>
 800f5b2:	9e11      	ldr	r6, [sp, #68]	@ 0x44
 800f5b4:	4431      	add	r1, r6
 800f5b6:	4541      	cmp	r1, r8
 800f5b8:	4450      	add	r0, sl
 800f5ba:	ee37 7a24 	vadd.f32	s14, s14, s9
 800f5be:	ee77 7a84 	vadd.f32	s15, s15, s8
 800f5c2:	ee76 6aa3 	vadd.f32	s13, s13, s7
 800f5c6:	db08      	blt.n	800f5da <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x466>
 800f5c8:	ee76 6a85 	vadd.f32	s13, s13, s10
 800f5cc:	ee37 7a25 	vadd.f32	s14, s14, s11
 800f5d0:	ee77 7a86 	vadd.f32	s15, s15, s12
 800f5d4:	3001      	adds	r0, #1
 800f5d6:	eba1 0108 	sub.w	r1, r1, r8
 800f5da:	f10c 3cff 	add.w	ip, ip, #4294967295
 800f5de:	f04f 0901 	mov.w	r9, #1
 800f5e2:	e79b      	b.n	800f51c <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x3a8>
 800f5e4:	449c      	add	ip, r3
 800f5e6:	1aff      	subs	r7, r7, r3
 800f5e8:	f1b8 0f00 	cmp.w	r8, #0
 800f5ec:	d009      	beq.n	800f602 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x48e>
 800f5ee:	e9cd c71e 	strd	ip, r7, [sp, #120]	@ 0x78
 800f5f2:	9019      	str	r0, [sp, #100]	@ 0x64
 800f5f4:	edcd 6a23 	vstr	s13, [sp, #140]	@ 0x8c
 800f5f8:	ed8d 7a26 	vstr	s14, [sp, #152]	@ 0x98
 800f5fc:	edcd 7a20 	vstr	s15, [sp, #128]	@ 0x80
 800f600:	911d      	str	r1, [sp, #116]	@ 0x74
 800f602:	1ad2      	subs	r2, r2, r3
 800f604:	e68b      	b.n	800f31e <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x1aa>
 800f606:	9b0e      	ldr	r3, [sp, #56]	@ 0x38
 800f608:	9a3f      	ldr	r2, [sp, #252]	@ 0xfc
 800f60a:	2b00      	cmp	r3, #0
 800f60c:	f000 80d1 	beq.w	800f7b2 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x63e>
 800f610:	ad19      	add	r5, sp, #100	@ 0x64
 800f612:	ac39      	add	r4, sp, #228	@ 0xe4
 800f614:	9b64      	ldr	r3, [sp, #400]	@ 0x190
 800f616:	f8bb 0006 	ldrh.w	r0, [fp, #6]
 800f61a:	f9b3 3002 	ldrsh.w	r3, [r3, #2]
 800f61e:	930c      	str	r3, [sp, #48]	@ 0x30
 800f620:	990c      	ldr	r1, [sp, #48]	@ 0x30
 800f622:	6963      	ldr	r3, [r4, #20]
 800f624:	440b      	add	r3, r1
 800f626:	f9bb 1002 	ldrsh.w	r1, [fp, #2]
 800f62a:	4408      	add	r0, r1
 800f62c:	b200      	sxth	r0, r0
 800f62e:	4283      	cmp	r3, r0
 800f630:	900d      	str	r0, [sp, #52]	@ 0x34
 800f632:	f280 80c1 	bge.w	800f7b8 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x644>
 800f636:	428b      	cmp	r3, r1
 800f638:	da08      	bge.n	800f64c <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x4d8>
 800f63a:	2a00      	cmp	r2, #0
 800f63c:	dd06      	ble.n	800f64c <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x4d8>
 800f63e:	1acb      	subs	r3, r1, r3
 800f640:	429a      	cmp	r2, r3
 800f642:	f2c0 80bb 	blt.w	800f7bc <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x648>
 800f646:	2b00      	cmp	r3, #0
 800f648:	f300 80b9 	bgt.w	800f7be <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x64a>
 800f64c:	6967      	ldr	r7, [r4, #20]
 800f64e:	9b0c      	ldr	r3, [sp, #48]	@ 0x30
 800f650:	443b      	add	r3, r7
 800f652:	461f      	mov	r7, r3
 800f654:	9b0d      	ldr	r3, [sp, #52]	@ 0x34
 800f656:	1bdf      	subs	r7, r3, r7
 800f658:	4297      	cmp	r7, r2
 800f65a:	bfa8      	it	ge
 800f65c:	4617      	movge	r7, r2
 800f65e:	f10d 0850 	add.w	r8, sp, #80	@ 0x50
 800f662:	2f00      	cmp	r7, #0
 800f664:	f340 813c 	ble.w	800f8e0 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x76c>
 800f668:	9b64      	ldr	r3, [sp, #400]	@ 0x190
 800f66a:	6829      	ldr	r1, [r5, #0]
 800f66c:	f9b3 2000 	ldrsh.w	r2, [r3]
 800f670:	f9bb 3000 	ldrsh.w	r3, [fp]
 800f674:	6820      	ldr	r0, [r4, #0]
 800f676:	4411      	add	r1, r2
 800f678:	4299      	cmp	r1, r3
 800f67a:	dd1a      	ble.n	800f6b2 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x53e>
 800f67c:	f8bb 1004 	ldrh.w	r1, [fp, #4]
 800f680:	440b      	add	r3, r1
 800f682:	4402      	add	r2, r0
 800f684:	b21b      	sxth	r3, r3
 800f686:	429a      	cmp	r2, r3
 800f688:	dc13      	bgt.n	800f6b2 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x53e>
 800f68a:	9b09      	ldr	r3, [sp, #36]	@ 0x24
 800f68c:	9a10      	ldr	r2, [sp, #64]	@ 0x40
 800f68e:	681b      	ldr	r3, [r3, #0]
 800f690:	9206      	str	r2, [sp, #24]
 800f692:	9a0b      	ldr	r2, [sp, #44]	@ 0x2c
 800f694:	9205      	str	r2, [sp, #20]
 800f696:	9a0a      	ldr	r2, [sp, #40]	@ 0x28
 800f698:	9500      	str	r5, [sp, #0]
 800f69a:	e9cd b203 	strd	fp, r2, [sp, #12]
 800f69e:	9a64      	ldr	r2, [sp, #400]	@ 0x190
 800f6a0:	9809      	ldr	r0, [sp, #36]	@ 0x24
 800f6a2:	e9cd 8201 	strd	r8, r2, [sp, #4]
 800f6a6:	a912      	add	r1, sp, #72	@ 0x48
 800f6a8:	f8d3 9048 	ldr.w	r9, [r3, #72]	@ 0x48
 800f6ac:	aa49      	add	r2, sp, #292	@ 0x124
 800f6ae:	4623      	mov	r3, r4
 800f6b0:	47c8      	blx	r9
 800f6b2:	e9d4 2300 	ldrd	r2, r3, [r4]
 800f6b6:	441a      	add	r2, r3
 800f6b8:	6963      	ldr	r3, [r4, #20]
 800f6ba:	ed94 7a0a 	vldr	s14, [r4, #40]	@ 0x28
 800f6be:	edd4 7a0b 	vldr	s15, [r4, #44]	@ 0x2c
 800f6c2:	edd4 6a0e 	vldr	s13, [r4, #56]	@ 0x38
 800f6c6:	68a1      	ldr	r1, [r4, #8]
 800f6c8:	ed94 6a08 	vldr	s12, [r4, #32]
 800f6cc:	6022      	str	r2, [r4, #0]
 800f6ce:	3301      	adds	r3, #1
 800f6d0:	6163      	str	r3, [r4, #20]
 800f6d2:	69a3      	ldr	r3, [r4, #24]
 800f6d4:	ee37 7a27 	vadd.f32	s14, s14, s15
 800f6d8:	3b01      	subs	r3, #1
 800f6da:	edd4 7a0d 	vldr	s15, [r4, #52]	@ 0x34
 800f6de:	61a3      	str	r3, [r4, #24]
 800f6e0:	6923      	ldr	r3, [r4, #16]
 800f6e2:	ed84 7a0a 	vstr	s14, [r4, #40]	@ 0x28
 800f6e6:	ee77 7aa6 	vadd.f32	s15, s15, s13
 800f6ea:	edd4 6a07 	vldr	s13, [r4, #28]
 800f6ee:	edc4 7a0d 	vstr	s15, [r4, #52]	@ 0x34
 800f6f2:	440b      	add	r3, r1
 800f6f4:	68e1      	ldr	r1, [r4, #12]
 800f6f6:	6123      	str	r3, [r4, #16]
 800f6f8:	ee76 6a86 	vadd.f32	s13, s13, s12
 800f6fc:	428b      	cmp	r3, r1
 800f6fe:	edc4 6a07 	vstr	s13, [r4, #28]
 800f702:	db15      	blt.n	800f730 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x5bc>
 800f704:	ed94 6a09 	vldr	s12, [r4, #36]	@ 0x24
 800f708:	ee76 6a26 	vadd.f32	s13, s12, s13
 800f70c:	3201      	adds	r2, #1
 800f70e:	edc4 6a07 	vstr	s13, [r4, #28]
 800f712:	edd4 6a0c 	vldr	s13, [r4, #48]	@ 0x30
 800f716:	6022      	str	r2, [r4, #0]
 800f718:	ee36 7a87 	vadd.f32	s14, s13, s14
 800f71c:	1a5b      	subs	r3, r3, r1
 800f71e:	ed84 7a0a 	vstr	s14, [r4, #40]	@ 0x28
 800f722:	ed94 7a0f 	vldr	s14, [r4, #60]	@ 0x3c
 800f726:	6123      	str	r3, [r4, #16]
 800f728:	ee77 7a27 	vadd.f32	s15, s14, s15
 800f72c:	edc4 7a0d 	vstr	s15, [r4, #52]	@ 0x34
 800f730:	e9d5 2300 	ldrd	r2, r3, [r5]
 800f734:	441a      	add	r2, r3
 800f736:	696b      	ldr	r3, [r5, #20]
 800f738:	ed95 7a0a 	vldr	s14, [r5, #40]	@ 0x28
 800f73c:	edd5 7a0b 	vldr	s15, [r5, #44]	@ 0x2c
 800f740:	edd5 6a0e 	vldr	s13, [r5, #56]	@ 0x38
 800f744:	68a9      	ldr	r1, [r5, #8]
 800f746:	ed95 6a08 	vldr	s12, [r5, #32]
 800f74a:	602a      	str	r2, [r5, #0]
 800f74c:	3301      	adds	r3, #1
 800f74e:	616b      	str	r3, [r5, #20]
 800f750:	69ab      	ldr	r3, [r5, #24]
 800f752:	ee37 7a27 	vadd.f32	s14, s14, s15
 800f756:	3b01      	subs	r3, #1
 800f758:	edd5 7a0d 	vldr	s15, [r5, #52]	@ 0x34
 800f75c:	61ab      	str	r3, [r5, #24]
 800f75e:	692b      	ldr	r3, [r5, #16]
 800f760:	ed85 7a0a 	vstr	s14, [r5, #40]	@ 0x28
 800f764:	ee77 7aa6 	vadd.f32	s15, s15, s13
 800f768:	edd5 6a07 	vldr	s13, [r5, #28]
 800f76c:	edc5 7a0d 	vstr	s15, [r5, #52]	@ 0x34
 800f770:	440b      	add	r3, r1
 800f772:	68e9      	ldr	r1, [r5, #12]
 800f774:	612b      	str	r3, [r5, #16]
 800f776:	ee76 6a86 	vadd.f32	s13, s13, s12
 800f77a:	428b      	cmp	r3, r1
 800f77c:	edc5 6a07 	vstr	s13, [r5, #28]
 800f780:	db15      	blt.n	800f7ae <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x63a>
 800f782:	ed95 6a09 	vldr	s12, [r5, #36]	@ 0x24
 800f786:	ee76 6a26 	vadd.f32	s13, s12, s13
 800f78a:	3201      	adds	r2, #1
 800f78c:	edc5 6a07 	vstr	s13, [r5, #28]
 800f790:	edd5 6a0c 	vldr	s13, [r5, #48]	@ 0x30
 800f794:	602a      	str	r2, [r5, #0]
 800f796:	ee36 7a87 	vadd.f32	s14, s13, s14
 800f79a:	1a5b      	subs	r3, r3, r1
 800f79c:	ed85 7a0a 	vstr	s14, [r5, #40]	@ 0x28
 800f7a0:	ed95 7a0f 	vldr	s14, [r5, #60]	@ 0x3c
 800f7a4:	612b      	str	r3, [r5, #16]
 800f7a6:	ee77 7a27 	vadd.f32	s15, s14, s15
 800f7aa:	edc5 7a0d 	vstr	s15, [r5, #52]	@ 0x34
 800f7ae:	3f01      	subs	r7, #1
 800f7b0:	e757      	b.n	800f662 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x4ee>
 800f7b2:	ad39      	add	r5, sp, #228	@ 0xe4
 800f7b4:	ac19      	add	r4, sp, #100	@ 0x64
 800f7b6:	e72d      	b.n	800f614 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x4a0>
 800f7b8:	4613      	mov	r3, r2
 800f7ba:	e744      	b.n	800f646 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x4d2>
 800f7bc:	4613      	mov	r3, r2
 800f7be:	e9dd 0a39 	ldrd	r0, sl, [sp, #228]	@ 0xe4
 800f7c2:	9e3b      	ldr	r6, [sp, #236]	@ 0xec
 800f7c4:	f8dd c0f8 	ldr.w	ip, [sp, #248]	@ 0xf8
 800f7c8:	ed9d 7a43 	vldr	s14, [sp, #268]	@ 0x10c
 800f7cc:	eddd 4a44 	vldr	s9, [sp, #272]	@ 0x110
 800f7d0:	eddd 7a46 	vldr	s15, [sp, #280]	@ 0x118
 800f7d4:	ed9d 4a47 	vldr	s8, [sp, #284]	@ 0x11c
 800f7d8:	eddd 6a40 	vldr	s13, [sp, #256]	@ 0x100
 800f7dc:	eddd 3a41 	vldr	s7, [sp, #260]	@ 0x104
 800f7e0:	993d      	ldr	r1, [sp, #244]	@ 0xf4
 800f7e2:	f8dd 80f0 	ldr.w	r8, [sp, #240]	@ 0xf0
 800f7e6:	ed9d 5a42 	vldr	s10, [sp, #264]	@ 0x108
 800f7ea:	eddd 5a45 	vldr	s11, [sp, #276]	@ 0x114
 800f7ee:	ed9d 6a48 	vldr	s12, [sp, #288]	@ 0x120
 800f7f2:	960e      	str	r6, [sp, #56]	@ 0x38
 800f7f4:	469e      	mov	lr, r3
 800f7f6:	461f      	mov	r7, r3
 800f7f8:	f04f 0900 	mov.w	r9, #0
 800f7fc:	2f00      	cmp	r7, #0
 800f7fe:	d146      	bne.n	800f88e <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x71a>
 800f800:	449c      	add	ip, r3
 800f802:	1ad7      	subs	r7, r2, r3
 800f804:	f1b9 0f00 	cmp.w	r9, #0
 800f808:	d009      	beq.n	800f81e <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x6aa>
 800f80a:	e9cd c73e 	strd	ip, r7, [sp, #248]	@ 0xf8
 800f80e:	9039      	str	r0, [sp, #228]	@ 0xe4
 800f810:	913d      	str	r1, [sp, #244]	@ 0xf4
 800f812:	edcd 6a40 	vstr	s13, [sp, #256]	@ 0x100
 800f816:	ed8d 7a43 	vstr	s14, [sp, #268]	@ 0x10c
 800f81a:	edcd 7a46 	vstr	s15, [sp, #280]	@ 0x118
 800f81e:	991b      	ldr	r1, [sp, #108]	@ 0x6c
 800f820:	910e      	str	r1, [sp, #56]	@ 0x38
 800f822:	e9dd 0a19 	ldrd	r0, sl, [sp, #100]	@ 0x64
 800f826:	e9dd c71e 	ldrd	ip, r7, [sp, #120]	@ 0x78
 800f82a:	e9dd 911c 	ldrd	r9, r1, [sp, #112]	@ 0x70
 800f82e:	eddd 4a24 	vldr	s9, [sp, #144]	@ 0x90
 800f832:	eddd 6a23 	vldr	s13, [sp, #140]	@ 0x8c
 800f836:	ed9d 4a27 	vldr	s8, [sp, #156]	@ 0x9c
 800f83a:	ed9d 7a26 	vldr	s14, [sp, #152]	@ 0x98
 800f83e:	eddd 3a21 	vldr	s7, [sp, #132]	@ 0x84
 800f842:	eddd 7a20 	vldr	s15, [sp, #128]	@ 0x80
 800f846:	ed9d 5a22 	vldr	s10, [sp, #136]	@ 0x88
 800f84a:	eddd 5a25 	vldr	s11, [sp, #148]	@ 0x94
 800f84e:	ed9d 6a28 	vldr	s12, [sp, #160]	@ 0xa0
 800f852:	f04f 0800 	mov.w	r8, #0
 800f856:	f1be 0f00 	cmp.w	lr, #0
 800f85a:	d030      	beq.n	800f8be <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x74a>
 800f85c:	9e0e      	ldr	r6, [sp, #56]	@ 0x38
 800f85e:	4431      	add	r1, r6
 800f860:	4549      	cmp	r1, r9
 800f862:	4450      	add	r0, sl
 800f864:	ee76 6aa4 	vadd.f32	s13, s13, s9
 800f868:	ee37 7a04 	vadd.f32	s14, s14, s8
 800f86c:	ee77 7aa3 	vadd.f32	s15, s15, s7
 800f870:	db08      	blt.n	800f884 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x710>
 800f872:	ee77 7a85 	vadd.f32	s15, s15, s10
 800f876:	ee76 6aa5 	vadd.f32	s13, s13, s11
 800f87a:	ee37 7a06 	vadd.f32	s14, s14, s12
 800f87e:	3001      	adds	r0, #1
 800f880:	eba1 0109 	sub.w	r1, r1, r9
 800f884:	f10e 3eff 	add.w	lr, lr, #4294967295
 800f888:	f04f 0801 	mov.w	r8, #1
 800f88c:	e7e3      	b.n	800f856 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x6e2>
 800f88e:	9e0e      	ldr	r6, [sp, #56]	@ 0x38
 800f890:	4431      	add	r1, r6
 800f892:	4541      	cmp	r1, r8
 800f894:	4450      	add	r0, sl
 800f896:	ee37 7a24 	vadd.f32	s14, s14, s9
 800f89a:	ee77 7a84 	vadd.f32	s15, s15, s8
 800f89e:	ee76 6aa3 	vadd.f32	s13, s13, s7
 800f8a2:	db08      	blt.n	800f8b6 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x742>
 800f8a4:	ee76 6a85 	vadd.f32	s13, s13, s10
 800f8a8:	ee37 7a25 	vadd.f32	s14, s14, s11
 800f8ac:	ee77 7a86 	vadd.f32	s15, s15, s12
 800f8b0:	3001      	adds	r0, #1
 800f8b2:	eba1 0108 	sub.w	r1, r1, r8
 800f8b6:	3f01      	subs	r7, #1
 800f8b8:	f04f 0901 	mov.w	r9, #1
 800f8bc:	e79e      	b.n	800f7fc <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x688>
 800f8be:	449c      	add	ip, r3
 800f8c0:	1aff      	subs	r7, r7, r3
 800f8c2:	f1b8 0f00 	cmp.w	r8, #0
 800f8c6:	d009      	beq.n	800f8dc <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x768>
 800f8c8:	e9cd c71e 	strd	ip, r7, [sp, #120]	@ 0x78
 800f8cc:	9019      	str	r0, [sp, #100]	@ 0x64
 800f8ce:	edcd 6a23 	vstr	s13, [sp, #140]	@ 0x8c
 800f8d2:	ed8d 7a26 	vstr	s14, [sp, #152]	@ 0x98
 800f8d6:	edcd 7a20 	vstr	s15, [sp, #128]	@ 0x80
 800f8da:	911d      	str	r1, [sp, #116]	@ 0x74
 800f8dc:	1ad2      	subs	r2, r2, r3
 800f8de:	e6b5      	b.n	800f64c <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x4d8>
 800f8e0:	9b0f      	ldr	r3, [sp, #60]	@ 0x3c
 800f8e2:	681b      	ldr	r3, [r3, #0]
 800f8e4:	b923      	cbnz	r3, 800f8f0 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x77c>
 800f8e6:	4b04      	ldr	r3, [pc, #16]	@ (800f8f8 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x784>)
 800f8e8:	6818      	ldr	r0, [r3, #0]
 800f8ea:	6803      	ldr	r3, [r0, #0]
 800f8ec:	6adb      	ldr	r3, [r3, #44]	@ 0x2c
 800f8ee:	4798      	blx	r3
 800f8f0:	b05b      	add	sp, #364	@ 0x16c
 800f8f2:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 800f8f6:	bf00      	nop
 800f8f8:	20002dbc 	.word	0x20002dbc

0800f8fc <_ZN8touchgfx3LCD22WideTextInternalStructC1ERNS_12TextProviderEtthPKNS_4FontEsNS_14WideTextActionE>:
 800f8fc:	b570      	push	{r4, r5, r6, lr}
 800f8fe:	4604      	mov	r4, r0
 800f900:	f89d 601c 	ldrb.w	r6, [sp, #28]
 800f904:	9805      	ldr	r0, [sp, #20]
 800f906:	6061      	str	r1, [r4, #4]
 800f908:	2500      	movs	r5, #0
 800f90a:	f89d 1010 	ldrb.w	r1, [sp, #16]
 800f90e:	8263      	strh	r3, [r4, #18]
 800f910:	f9bd 3018 	ldrsh.w	r3, [sp, #24]
 800f914:	8025      	strh	r5, [r4, #0]
 800f916:	7221      	strb	r1, [r4, #8]
 800f918:	7266      	strb	r6, [r4, #9]
 800f91a:	60e0      	str	r0, [r4, #12]
 800f91c:	8222      	strh	r2, [r4, #16]
 800f91e:	82a3      	strh	r3, [r4, #20]
 800f920:	82e5      	strh	r5, [r4, #22]
 800f922:	8325      	strh	r5, [r4, #24]
 800f924:	8365      	strh	r5, [r4, #26]
 800f926:	83a5      	strh	r5, [r4, #28]
 800f928:	83e5      	strh	r5, [r4, #30]
 800f92a:	8425      	strh	r5, [r4, #32]
 800f92c:	f884 5022 	strb.w	r5, [r4, #34]	@ 0x22
 800f930:	b32e      	cbz	r6, 800f97e <_ZN8touchgfx3LCD22WideTextInternalStructC1ERNS_12TextProviderEtthPKNS_4FontEsNS_14WideTextActionE+0x82>
 800f932:	6803      	ldr	r3, [r0, #0]
 800f934:	695b      	ldr	r3, [r3, #20]
 800f936:	4798      	blx	r3
 800f938:	4606      	mov	r6, r0
 800f93a:	b300      	cbz	r0, 800f97e <_ZN8touchgfx3LCD22WideTextInternalStructC1ERNS_12TextProviderEtthPKNS_4FontEsNS_14WideTextActionE+0x82>
 800f93c:	68e0      	ldr	r0, [r4, #12]
 800f93e:	6803      	ldr	r3, [r0, #0]
 800f940:	4631      	mov	r1, r6
 800f942:	68db      	ldr	r3, [r3, #12]
 800f944:	4798      	blx	r3
 800f946:	4605      	mov	r5, r0
 800f948:	b1c8      	cbz	r0, 800f97e <_ZN8touchgfx3LCD22WideTextInternalStructC1ERNS_12TextProviderEtthPKNS_4FontEsNS_14WideTextActionE+0x82>
 800f94a:	7b43      	ldrb	r3, [r0, #13]
 800f94c:	7a82      	ldrb	r2, [r0, #10]
 800f94e:	005b      	lsls	r3, r3, #1
 800f950:	f403 7380 	and.w	r3, r3, #256	@ 0x100
 800f954:	4313      	orrs	r3, r2
 800f956:	8423      	strh	r3, [r4, #32]
 800f958:	7a63      	ldrb	r3, [r4, #9]
 800f95a:	2b06      	cmp	r3, #6
 800f95c:	d10f      	bne.n	800f97e <_ZN8touchgfx3LCD22WideTextInternalStructC1ERNS_12TextProviderEtthPKNS_4FontEsNS_14WideTextActionE+0x82>
 800f95e:	68e0      	ldr	r0, [r4, #12]
 800f960:	6803      	ldr	r3, [r0, #0]
 800f962:	462a      	mov	r2, r5
 800f964:	6c5b      	ldr	r3, [r3, #68]	@ 0x44
 800f966:	4631      	mov	r1, r6
 800f968:	4798      	blx	r3
 800f96a:	7b6b      	ldrb	r3, [r5, #13]
 800f96c:	005b      	lsls	r3, r3, #1
 800f96e:	f403 7280 	and.w	r2, r3, #256	@ 0x100
 800f972:	7aab      	ldrb	r3, [r5, #10]
 800f974:	4313      	orrs	r3, r2
 800f976:	4418      	add	r0, r3
 800f978:	8c23      	ldrh	r3, [r4, #32]
 800f97a:	4418      	add	r0, r3
 800f97c:	8420      	strh	r0, [r4, #32]
 800f97e:	4620      	mov	r0, r4
 800f980:	bd70      	pop	{r4, r5, r6, pc}

0800f982 <_ZN8touchgfx3LCD11stringWidthERNS_12TextProviderERKNS_4FontEih>:
 800f982:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 800f986:	2400      	movs	r4, #0
 800f988:	b085      	sub	sp, #20
 800f98a:	4681      	mov	r9, r0
 800f98c:	4688      	mov	r8, r1
 800f98e:	4692      	mov	sl, r2
 800f990:	469b      	mov	fp, r3
 800f992:	4627      	mov	r7, r4
 800f994:	4625      	mov	r5, r4
 800f996:	4626      	mov	r6, r4
 800f998:	4554      	cmp	r4, sl
 800f99a:	da2a      	bge.n	800f9f2 <_ZN8touchgfx3LCD11stringWidthERNS_12TextProviderERKNS_4FontEih+0x70>
 800f99c:	2300      	movs	r3, #0
 800f99e:	9303      	str	r3, [sp, #12]
 800f9a0:	f64f 63ff 	movw	r3, #65279	@ 0xfeff
 800f9a4:	429d      	cmp	r5, r3
 800f9a6:	d004      	beq.n	800f9b2 <_ZN8touchgfx3LCD11stringWidthERNS_12TextProviderERKNS_4FontEih+0x30>
 800f9a8:	f242 030b 	movw	r3, #8203	@ 0x200b
 800f9ac:	429d      	cmp	r5, r3
 800f9ae:	bf18      	it	ne
 800f9b0:	462f      	movne	r7, r5
 800f9b2:	ab03      	add	r3, sp, #12
 800f9b4:	4642      	mov	r2, r8
 800f9b6:	4659      	mov	r1, fp
 800f9b8:	4648      	mov	r0, r9
 800f9ba:	f002 ffb3 	bl	8012924 <_ZN8touchgfx12TextProvider15getNextLigatureEhPKNS_4FontERPKNS_9GlyphNodeE>
 800f9be:	4605      	mov	r5, r0
 800f9c0:	b1b8      	cbz	r0, 800f9f2 <_ZN8touchgfx3LCD11stringWidthERNS_12TextProviderERKNS_4FontEih+0x70>
 800f9c2:	280a      	cmp	r0, #10
 800f9c4:	d015      	beq.n	800f9f2 <_ZN8touchgfx3LCD11stringWidthERNS_12TextProviderERKNS_4FontEih+0x70>
 800f9c6:	9a03      	ldr	r2, [sp, #12]
 800f9c8:	b18a      	cbz	r2, 800f9ee <_ZN8touchgfx3LCD11stringWidthERNS_12TextProviderERKNS_4FontEih+0x6c>
 800f9ca:	7b50      	ldrb	r0, [r2, #13]
 800f9cc:	7a93      	ldrb	r3, [r2, #10]
 800f9ce:	8895      	ldrh	r5, [r2, #4]
 800f9d0:	0040      	lsls	r0, r0, #1
 800f9d2:	f400 7080 	and.w	r0, r0, #256	@ 0x100
 800f9d6:	4303      	orrs	r3, r0
 800f9d8:	9301      	str	r3, [sp, #4]
 800f9da:	f8d8 3000 	ldr.w	r3, [r8]
 800f9de:	4639      	mov	r1, r7
 800f9e0:	6c5b      	ldr	r3, [r3, #68]	@ 0x44
 800f9e2:	4640      	mov	r0, r8
 800f9e4:	4798      	blx	r3
 800f9e6:	9b01      	ldr	r3, [sp, #4]
 800f9e8:	4418      	add	r0, r3
 800f9ea:	4406      	add	r6, r0
 800f9ec:	b2b6      	uxth	r6, r6
 800f9ee:	3401      	adds	r4, #1
 800f9f0:	e7d2      	b.n	800f998 <_ZN8touchgfx3LCD11stringWidthERNS_12TextProviderERKNS_4FontEih+0x16>
 800f9f2:	4630      	mov	r0, r6
 800f9f4:	b005      	add	sp, #20
 800f9f6:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}

0800f9fa <_ZN8touchgfx3LCD10rotateRectERNS_4RectERKS1_NS_12TextRotationE>:
 800f9fa:	2a02      	cmp	r2, #2
 800f9fc:	b530      	push	{r4, r5, lr}
 800f9fe:	d011      	beq.n	800fa24 <_ZN8touchgfx3LCD10rotateRectERNS_4RectERKS1_NS_12TextRotationE+0x2a>
 800fa00:	2a03      	cmp	r2, #3
 800fa02:	d01c      	beq.n	800fa3e <_ZN8touchgfx3LCD10rotateRectERNS_4RectERKS1_NS_12TextRotationE+0x44>
 800fa04:	2a01      	cmp	r2, #1
 800fa06:	d10c      	bne.n	800fa22 <_ZN8touchgfx3LCD10rotateRectERNS_4RectERKS1_NS_12TextRotationE+0x28>
 800fa08:	888b      	ldrh	r3, [r1, #4]
 800fa0a:	8801      	ldrh	r1, [r0, #0]
 800fa0c:	f9b0 2004 	ldrsh.w	r2, [r0, #4]
 800fa10:	8844      	ldrh	r4, [r0, #2]
 800fa12:	8004      	strh	r4, [r0, #0]
 800fa14:	1a5b      	subs	r3, r3, r1
 800fa16:	1a9b      	subs	r3, r3, r2
 800fa18:	f9b0 1006 	ldrsh.w	r1, [r0, #6]
 800fa1c:	8043      	strh	r3, [r0, #2]
 800fa1e:	8081      	strh	r1, [r0, #4]
 800fa20:	80c2      	strh	r2, [r0, #6]
 800fa22:	bd30      	pop	{r4, r5, pc}
 800fa24:	88cb      	ldrh	r3, [r1, #6]
 800fa26:	8842      	ldrh	r2, [r0, #2]
 800fa28:	1a9b      	subs	r3, r3, r2
 800fa2a:	88c2      	ldrh	r2, [r0, #6]
 800fa2c:	1a9b      	subs	r3, r3, r2
 800fa2e:	888a      	ldrh	r2, [r1, #4]
 800fa30:	8801      	ldrh	r1, [r0, #0]
 800fa32:	8043      	strh	r3, [r0, #2]
 800fa34:	1a52      	subs	r2, r2, r1
 800fa36:	8881      	ldrh	r1, [r0, #4]
 800fa38:	1a52      	subs	r2, r2, r1
 800fa3a:	8002      	strh	r2, [r0, #0]
 800fa3c:	e7f1      	b.n	800fa22 <_ZN8touchgfx3LCD10rotateRectERNS_4RectERKS1_NS_12TextRotationE+0x28>
 800fa3e:	88cb      	ldrh	r3, [r1, #6]
 800fa40:	8841      	ldrh	r1, [r0, #2]
 800fa42:	f9b0 2006 	ldrsh.w	r2, [r0, #6]
 800fa46:	f9b0 5000 	ldrsh.w	r5, [r0]
 800fa4a:	f9b0 4004 	ldrsh.w	r4, [r0, #4]
 800fa4e:	8045      	strh	r5, [r0, #2]
 800fa50:	1a5b      	subs	r3, r3, r1
 800fa52:	1a9b      	subs	r3, r3, r2
 800fa54:	8003      	strh	r3, [r0, #0]
 800fa56:	8082      	strh	r2, [r0, #4]
 800fa58:	80c4      	strh	r4, [r0, #6]
 800fa5a:	e7e2      	b.n	800fa22 <_ZN8touchgfx3LCD10rotateRectERNS_4RectERKS1_NS_12TextRotationE+0x28>

0800fa5c <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEssRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib>:
 800fa5c:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 800fa60:	b09f      	sub	sp, #124	@ 0x7c
 800fa62:	920f      	str	r2, [sp, #60]	@ 0x3c
 800fa64:	9312      	str	r3, [sp, #72]	@ 0x48
 800fa66:	9a29      	ldr	r2, [sp, #164]	@ 0xa4
 800fa68:	9b29      	ldr	r3, [sp, #164]	@ 0xa4
 800fa6a:	9d2a      	ldr	r5, [sp, #168]	@ 0xa8
 800fa6c:	8812      	ldrh	r2, [r2, #0]
 800fa6e:	889b      	ldrh	r3, [r3, #4]
 800fa70:	900e      	str	r0, [sp, #56]	@ 0x38
 800fa72:	4413      	add	r3, r2
 800fa74:	6828      	ldr	r0, [r5, #0]
 800fa76:	9117      	str	r1, [sp, #92]	@ 0x5c
 800fa78:	b21b      	sxth	r3, r3
 800fa7a:	9311      	str	r3, [sp, #68]	@ 0x44
 800fa7c:	6803      	ldr	r3, [r0, #0]
 800fa7e:	f89d b0ac 	ldrb.w	fp, [sp, #172]	@ 0xac
 800fa82:	6d5b      	ldr	r3, [r3, #84]	@ 0x54
 800fa84:	f89d 40b8 	ldrb.w	r4, [sp, #184]	@ 0xb8
 800fa88:	4798      	blx	r3
 800fa8a:	682b      	ldr	r3, [r5, #0]
 800fa8c:	9013      	str	r0, [sp, #76]	@ 0x4c
 800fa8e:	7b1a      	ldrb	r2, [r3, #12]
 800fa90:	7adb      	ldrb	r3, [r3, #11]
 800fa92:	9215      	str	r2, [sp, #84]	@ 0x54
 800fa94:	9316      	str	r3, [sp, #88]	@ 0x58
 800fa96:	f9bd 60a0 	ldrsh.w	r6, [sp, #160]	@ 0xa0
 800fa9a:	2c00      	cmp	r4, #0
 800fa9c:	d067      	beq.n	800fb6e <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEssRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0x112>
 800fa9e:	7c2b      	ldrb	r3, [r5, #16]
 800faa0:	9a2d      	ldr	r2, [sp, #180]	@ 0xb4
 800faa2:	2b06      	cmp	r3, #6
 800faa4:	bf14      	ite	ne
 800faa6:	2301      	movne	r3, #1
 800faa8:	2302      	moveq	r3, #2
 800faaa:	4413      	add	r3, r2
 800faac:	f04f 0900 	mov.w	r9, #0
 800fab0:	9310      	str	r3, [sp, #64]	@ 0x40
 800fab2:	f8cd 9034 	str.w	r9, [sp, #52]	@ 0x34
 800fab6:	464c      	mov	r4, r9
 800fab8:	f8cd 9030 	str.w	r9, [sp, #48]	@ 0x30
 800fabc:	9b0d      	ldr	r3, [sp, #52]	@ 0x34
 800fabe:	9a10      	ldr	r2, [sp, #64]	@ 0x40
 800fac0:	4293      	cmp	r3, r2
 800fac2:	f280 808b 	bge.w	800fbdc <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEssRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0x180>
 800fac6:	2300      	movs	r3, #0
 800fac8:	e9cd 331c 	strd	r3, r3, [sp, #112]	@ 0x70
 800facc:	f88d 306f 	strb.w	r3, [sp, #111]	@ 0x6f
 800fad0:	f64f 63ff 	movw	r3, #65279	@ 0xfeff
 800fad4:	429c      	cmp	r4, r3
 800fad6:	d006      	beq.n	800fae6 <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEssRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0x8a>
 800fad8:	9b0c      	ldr	r3, [sp, #48]	@ 0x30
 800fada:	f242 020b 	movw	r2, #8203	@ 0x200b
 800fade:	4294      	cmp	r4, r2
 800fae0:	bf18      	it	ne
 800fae2:	4623      	movne	r3, r4
 800fae4:	930c      	str	r3, [sp, #48]	@ 0x30
 800fae6:	9b0d      	ldr	r3, [sp, #52]	@ 0x34
 800fae8:	992d      	ldr	r1, [sp, #180]	@ 0xb4
 800faea:	682a      	ldr	r2, [r5, #0]
 800faec:	428b      	cmp	r3, r1
 800faee:	db40      	blt.n	800fb72 <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEssRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0x116>
 800faf0:	6813      	ldr	r3, [r2, #0]
 800faf2:	4610      	mov	r0, r2
 800faf4:	695b      	ldr	r3, [r3, #20]
 800faf6:	4798      	blx	r3
 800faf8:	4604      	mov	r4, r0
 800fafa:	6828      	ldr	r0, [r5, #0]
 800fafc:	6803      	ldr	r3, [r0, #0]
 800fafe:	aa1d      	add	r2, sp, #116	@ 0x74
 800fb00:	689f      	ldr	r7, [r3, #8]
 800fb02:	4621      	mov	r1, r4
 800fb04:	f10d 036f 	add.w	r3, sp, #111	@ 0x6f
 800fb08:	47b8      	blx	r7
 800fb0a:	901c      	str	r0, [sp, #112]	@ 0x70
 800fb0c:	f64f 63ff 	movw	r3, #65279	@ 0xfeff
 800fb10:	429c      	cmp	r4, r3
 800fb12:	f000 80ea 	beq.w	800fcea <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEssRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0x28e>
 800fb16:	f242 030b 	movw	r3, #8203	@ 0x200b
 800fb1a:	429c      	cmp	r4, r3
 800fb1c:	f000 80e5 	beq.w	800fcea <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEssRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0x28e>
 800fb20:	2c00      	cmp	r4, #0
 800fb22:	f000 810c 	beq.w	800fd3e <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEssRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0x2e2>
 800fb26:	2c0a      	cmp	r4, #10
 800fb28:	d05e      	beq.n	800fbe8 <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEssRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0x18c>
 800fb2a:	9a1c      	ldr	r2, [sp, #112]	@ 0x70
 800fb2c:	b36a      	cbz	r2, 800fb8a <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEssRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0x12e>
 800fb2e:	8894      	ldrh	r4, [r2, #4]
 800fb30:	f1bb 0f00 	cmp.w	fp, #0
 800fb34:	d03a      	beq.n	800fbac <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEssRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0x150>
 800fb36:	f892 900d 	ldrb.w	r9, [r2, #13]
 800fb3a:	ea4f 0949 	mov.w	r9, r9, lsl #1
 800fb3e:	f409 7380 	and.w	r3, r9, #256	@ 0x100
 800fb42:	f892 900a 	ldrb.w	r9, [r2, #10]
 800fb46:	f1bb 0f01 	cmp.w	fp, #1
 800fb4a:	ea49 0903 	orr.w	r9, r9, r3
 800fb4e:	d133      	bne.n	800fbb8 <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEssRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0x15c>
 800fb50:	9b0c      	ldr	r3, [sp, #48]	@ 0x30
 800fb52:	eba6 0609 	sub.w	r6, r6, r9
 800fb56:	2b00      	cmp	r3, #0
 800fb58:	d14d      	bne.n	800fbf6 <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEssRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0x19a>
 800fb5a:	9a15      	ldr	r2, [sp, #84]	@ 0x54
 800fb5c:	eb09 0306 	add.w	r3, r9, r6
 800fb60:	4413      	add	r3, r2
 800fb62:	9a29      	ldr	r2, [sp, #164]	@ 0xa4
 800fb64:	f9b2 2000 	ldrsh.w	r2, [r2]
 800fb68:	4293      	cmp	r3, r2
 800fb6a:	da4e      	bge.n	800fc0a <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEssRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0x1ae>
 800fb6c:	e036      	b.n	800fbdc <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEssRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0x180>
 800fb6e:	9b2d      	ldr	r3, [sp, #180]	@ 0xb4
 800fb70:	e79c      	b.n	800faac <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEssRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0x50>
 800fb72:	f10d 036f 	add.w	r3, sp, #111	@ 0x6f
 800fb76:	9301      	str	r3, [sp, #4]
 800fb78:	ab1d      	add	r3, sp, #116	@ 0x74
 800fb7a:	9300      	str	r3, [sp, #0]
 800fb7c:	4659      	mov	r1, fp
 800fb7e:	ab1c      	add	r3, sp, #112	@ 0x70
 800fb80:	982c      	ldr	r0, [sp, #176]	@ 0xb0
 800fb82:	f002 ff18 	bl	80129b6 <_ZN8touchgfx12TextProvider15getNextLigatureEhPKNS_4FontERPKNS_9GlyphNodeERPKhRh>
 800fb86:	4604      	mov	r4, r0
 800fb88:	e7c0      	b.n	800fb0c <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEssRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0xb0>
 800fb8a:	6828      	ldr	r0, [r5, #0]
 800fb8c:	6803      	ldr	r3, [r0, #0]
 800fb8e:	691b      	ldr	r3, [r3, #16]
 800fb90:	4798      	blx	r3
 800fb92:	f64f 63ff 	movw	r3, #65279	@ 0xfeff
 800fb96:	4298      	cmp	r0, r3
 800fb98:	f000 80a7 	beq.w	800fcea <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEssRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0x28e>
 800fb9c:	f242 030b 	movw	r3, #8203	@ 0x200b
 800fba0:	4298      	cmp	r0, r3
 800fba2:	f000 80a2 	beq.w	800fcea <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEssRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0x28e>
 800fba6:	f1bb 0f00 	cmp.w	fp, #0
 800fbaa:	d100      	bne.n	800fbae <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEssRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0x152>
 800fbac:	444e      	add	r6, r9
 800fbae:	9a1c      	ldr	r2, [sp, #112]	@ 0x70
 800fbb0:	2a00      	cmp	r2, #0
 800fbb2:	d1c0      	bne.n	800fb36 <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEssRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0xda>
 800fbb4:	4691      	mov	r9, r2
 800fbb6:	e098      	b.n	800fcea <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEssRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0x28e>
 800fbb8:	9b0c      	ldr	r3, [sp, #48]	@ 0x30
 800fbba:	2b00      	cmp	r3, #0
 800fbbc:	f000 80c1 	beq.w	800fd42 <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEssRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0x2e6>
 800fbc0:	f1bb 0f00 	cmp.w	fp, #0
 800fbc4:	d117      	bne.n	800fbf6 <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEssRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0x19a>
 800fbc6:	6828      	ldr	r0, [r5, #0]
 800fbc8:	990c      	ldr	r1, [sp, #48]	@ 0x30
 800fbca:	6803      	ldr	r3, [r0, #0]
 800fbcc:	6c5b      	ldr	r3, [r3, #68]	@ 0x44
 800fbce:	4798      	blx	r3
 800fbd0:	4406      	add	r6, r0
 800fbd2:	9b16      	ldr	r3, [sp, #88]	@ 0x58
 800fbd4:	9a11      	ldr	r2, [sp, #68]	@ 0x44
 800fbd6:	1af3      	subs	r3, r6, r3
 800fbd8:	4293      	cmp	r3, r2
 800fbda:	dd16      	ble.n	800fc0a <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEssRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0x1ae>
 800fbdc:	2c00      	cmp	r4, #0
 800fbde:	f000 80ae 	beq.w	800fd3e <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEssRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0x2e2>
 800fbe2:	2c0a      	cmp	r4, #10
 800fbe4:	f040 809c 	bne.w	800fd20 <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEssRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0x2c4>
 800fbe8:	240a      	movs	r4, #10
 800fbea:	fab4 f084 	clz	r0, r4
 800fbee:	0940      	lsrs	r0, r0, #5
 800fbf0:	b01f      	add	sp, #124	@ 0x7c
 800fbf2:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 800fbf6:	6828      	ldr	r0, [r5, #0]
 800fbf8:	990c      	ldr	r1, [sp, #48]	@ 0x30
 800fbfa:	6803      	ldr	r3, [r0, #0]
 800fbfc:	6c5b      	ldr	r3, [r3, #68]	@ 0x44
 800fbfe:	4798      	blx	r3
 800fc00:	f1bb 0f01 	cmp.w	fp, #1
 800fc04:	eba6 0600 	sub.w	r6, r6, r0
 800fc08:	d0a7      	beq.n	800fb5a <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEssRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0xfe>
 800fc0a:	981c      	ldr	r0, [sp, #112]	@ 0x70
 800fc0c:	9b29      	ldr	r3, [sp, #164]	@ 0xa4
 800fc0e:	f990 1009 	ldrsb.w	r1, [r0, #9]
 800fc12:	f9b3 8000 	ldrsh.w	r8, [r3]
 800fc16:	7b43      	ldrb	r3, [r0, #13]
 800fc18:	015b      	lsls	r3, r3, #5
 800fc1a:	f403 7280 	and.w	r2, r3, #256	@ 0x100
 800fc1e:	7983      	ldrb	r3, [r0, #6]
 800fc20:	4431      	add	r1, r6
 800fc22:	4313      	orrs	r3, r2
 800fc24:	440b      	add	r3, r1
 800fc26:	4543      	cmp	r3, r8
 800fc28:	db5f      	blt.n	800fcea <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEssRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0x28e>
 800fc2a:	9b11      	ldr	r3, [sp, #68]	@ 0x44
 800fc2c:	4299      	cmp	r1, r3
 800fc2e:	da5c      	bge.n	800fcea <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEssRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0x28e>
 800fc30:	6828      	ldr	r0, [r5, #0]
 800fc32:	6803      	ldr	r3, [r0, #0]
 800fc34:	45b0      	cmp	r8, r6
 800fc36:	bfc8      	it	gt
 800fc38:	eba8 0806 	subgt.w	r8, r8, r6
 800fc3c:	6b1b      	ldr	r3, [r3, #48]	@ 0x30
 800fc3e:	bfcc      	ite	gt
 800fc40:	fa1f f888 	uxthgt.w	r8, r8
 800fc44:	f04f 0800 	movle.w	r8, #0
 800fc48:	4798      	blx	r3
 800fc4a:	9a1c      	ldr	r2, [sp, #112]	@ 0x70
 800fc4c:	7b53      	ldrb	r3, [r2, #13]
 800fc4e:	00d9      	lsls	r1, r3, #3
 800fc50:	f401 7780 	and.w	r7, r1, #256	@ 0x100
 800fc54:	7a11      	ldrb	r1, [r2, #8]
 800fc56:	4339      	orrs	r1, r7
 800fc58:	065f      	lsls	r7, r3, #25
 800fc5a:	9f12      	ldr	r7, [sp, #72]	@ 0x48
 800fc5c:	bf44      	itt	mi
 800fc5e:	f5a1 7100 	submi.w	r1, r1, #512	@ 0x200
 800fc62:	b209      	sxthmi	r1, r1
 800fc64:	19c7      	adds	r7, r0, r7
 800fc66:	1a7f      	subs	r7, r7, r1
 800fc68:	9929      	ldr	r1, [sp, #164]	@ 0xa4
 800fc6a:	b2bf      	uxth	r7, r7
 800fc6c:	f9b1 1002 	ldrsh.w	r1, [r1, #2]
 800fc70:	fa0f fa87 	sxth.w	sl, r7
 800fc74:	4551      	cmp	r1, sl
 800fc76:	dd3c      	ble.n	800fcf2 <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEssRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0x296>
 800fc78:	011b      	lsls	r3, r3, #4
 800fc7a:	79d0      	ldrb	r0, [r2, #7]
 800fc7c:	f403 7380 	and.w	r3, r3, #256	@ 0x100
 800fc80:	4303      	orrs	r3, r0
 800fc82:	449a      	add	sl, r3
 800fc84:	4551      	cmp	r1, sl
 800fc86:	dc30      	bgt.n	800fcea <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEssRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0x28e>
 800fc88:	1bcf      	subs	r7, r1, r7
 800fc8a:	b23f      	sxth	r7, r7
 800fc8c:	468a      	mov	sl, r1
 800fc8e:	9219      	str	r2, [sp, #100]	@ 0x64
 800fc90:	9a13      	ldr	r2, [sp, #76]	@ 0x4c
 800fc92:	9b1d      	ldr	r3, [sp, #116]	@ 0x74
 800fc94:	6828      	ldr	r0, [r5, #0]
 800fc96:	2a00      	cmp	r2, #0
 800fc98:	d12d      	bne.n	800fcf6 <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEssRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0x29a>
 800fc9a:	9318      	str	r3, [sp, #96]	@ 0x60
 800fc9c:	9b0e      	ldr	r3, [sp, #56]	@ 0x38
 800fc9e:	6819      	ldr	r1, [r3, #0]
 800fca0:	6ccb      	ldr	r3, [r1, #76]	@ 0x4c
 800fca2:	6801      	ldr	r1, [r0, #0]
 800fca4:	9314      	str	r3, [sp, #80]	@ 0x50
 800fca6:	6c09      	ldr	r1, [r1, #64]	@ 0x40
 800fca8:	4788      	blx	r1
 800fcaa:	79a9      	ldrb	r1, [r5, #6]
 800fcac:	910b      	str	r1, [sp, #44]	@ 0x2c
 800fcae:	7ba9      	ldrb	r1, [r5, #14]
 800fcb0:	910a      	str	r1, [sp, #40]	@ 0x28
 800fcb2:	f89d 106f 	ldrb.w	r1, [sp, #111]	@ 0x6f
 800fcb6:	9109      	str	r1, [sp, #36]	@ 0x24
 800fcb8:	68a9      	ldr	r1, [r5, #8]
 800fcba:	9b18      	ldr	r3, [sp, #96]	@ 0x60
 800fcbc:	9306      	str	r3, [sp, #24]
 800fcbe:	b2bf      	uxth	r7, r7
 800fcc0:	e9cd 8702 	strd	r8, r7, [sp, #8]
 800fcc4:	9b29      	ldr	r3, [sp, #164]	@ 0xa4
 800fcc6:	9304      	str	r3, [sp, #16]
 800fcc8:	44b0      	add	r8, r6
 800fcca:	e9cd 0107 	strd	r0, r1, [sp, #28]
 800fcce:	fa0f f388 	sxth.w	r3, r8
 800fcd2:	9300      	str	r3, [sp, #0]
 800fcd4:	9a19      	ldr	r2, [sp, #100]	@ 0x64
 800fcd6:	9b0f      	ldr	r3, [sp, #60]	@ 0x3c
 800fcd8:	9205      	str	r2, [sp, #20]
 800fcda:	f8cd a004 	str.w	sl, [sp, #4]
 800fcde:	681a      	ldr	r2, [r3, #0]
 800fce0:	9917      	ldr	r1, [sp, #92]	@ 0x5c
 800fce2:	685b      	ldr	r3, [r3, #4]
 800fce4:	980e      	ldr	r0, [sp, #56]	@ 0x38
 800fce6:	9f14      	ldr	r7, [sp, #80]	@ 0x50
 800fce8:	47b8      	blx	r7
 800fcea:	9b0d      	ldr	r3, [sp, #52]	@ 0x34
 800fcec:	3301      	adds	r3, #1
 800fcee:	930d      	str	r3, [sp, #52]	@ 0x34
 800fcf0:	e6e4      	b.n	800fabc <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEssRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0x60>
 800fcf2:	2700      	movs	r7, #0
 800fcf4:	e7cb      	b.n	800fc8e <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEssRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0x232>
 800fcf6:	9a0e      	ldr	r2, [sp, #56]	@ 0x38
 800fcf8:	f8d2 c008 	ldr.w	ip, [r2, #8]
 800fcfc:	9a12      	ldr	r2, [sp, #72]	@ 0x48
 800fcfe:	f8dc 1000 	ldr.w	r1, [ip]
 800fd02:	e9cd 6204 	strd	r6, r2, [sp, #16]
 800fd06:	79aa      	ldrb	r2, [r5, #6]
 800fd08:	9203      	str	r2, [sp, #12]
 800fd0a:	7baa      	ldrb	r2, [r5, #14]
 800fd0c:	9202      	str	r2, [sp, #8]
 800fd0e:	68aa      	ldr	r2, [r5, #8]
 800fd10:	e9cd 0200 	strd	r0, r2, [sp]
 800fd14:	9a29      	ldr	r2, [sp, #164]	@ 0xa4
 800fd16:	688f      	ldr	r7, [r1, #8]
 800fd18:	990f      	ldr	r1, [sp, #60]	@ 0x3c
 800fd1a:	4660      	mov	r0, ip
 800fd1c:	47b8      	blx	r7
 800fd1e:	e7e4      	b.n	800fcea <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEssRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0x28e>
 800fd20:	9d0d      	ldr	r5, [sp, #52]	@ 0x34
 800fd22:	9b2d      	ldr	r3, [sp, #180]	@ 0xb4
 800fd24:	3501      	adds	r5, #1
 800fd26:	429d      	cmp	r5, r3
 800fd28:	f6bf af5f 	bge.w	800fbea <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEssRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0x18e>
 800fd2c:	4659      	mov	r1, fp
 800fd2e:	982c      	ldr	r0, [sp, #176]	@ 0xb0
 800fd30:	f7fa fd2a 	bl	800a788 <_ZN8touchgfx12TextProvider15getNextLigatureEh>
 800fd34:	4604      	mov	r4, r0
 800fd36:	b110      	cbz	r0, 800fd3e <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEssRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0x2e2>
 800fd38:	280a      	cmp	r0, #10
 800fd3a:	d1f2      	bne.n	800fd22 <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEssRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0x2c6>
 800fd3c:	e754      	b.n	800fbe8 <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEssRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0x18c>
 800fd3e:	2400      	movs	r4, #0
 800fd40:	e753      	b.n	800fbea <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEssRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0x18e>
 800fd42:	f1bb 0f00 	cmp.w	fp, #0
 800fd46:	f43f af44 	beq.w	800fbd2 <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEssRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0x176>
 800fd4a:	e75e      	b.n	800fc0a <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEssRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0x1ae>

0800fd4c <_ZN8touchgfx3LCD22WideTextInternalStruct7addWordEttt>:
 800fd4c:	b530      	push	{r4, r5, lr}
 800fd4e:	8ac4      	ldrh	r4, [r0, #22]
 800fd50:	8b45      	ldrh	r5, [r0, #26]
 800fd52:	8343      	strh	r3, [r0, #26]
 800fd54:	442c      	add	r4, r5
 800fd56:	1ae4      	subs	r4, r4, r3
 800fd58:	82c4      	strh	r4, [r0, #22]
 800fd5a:	8b83      	ldrh	r3, [r0, #28]
 800fd5c:	8b04      	ldrh	r4, [r0, #24]
 800fd5e:	4422      	add	r2, r4
 800fd60:	440c      	add	r4, r1
 800fd62:	1a59      	subs	r1, r3, r1
 800fd64:	83c2      	strh	r2, [r0, #30]
 800fd66:	8304      	strh	r4, [r0, #24]
 800fd68:	8381      	strh	r1, [r0, #28]
 800fd6a:	bd30      	pop	{r4, r5, pc}

0800fd6c <_ZN8touchgfx3LCD22WideTextInternalStruct23scanStringLengthForLineEv>:
 800fd6c:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 800fd70:	4604      	mov	r4, r0
 800fd72:	8a47      	ldrh	r7, [r0, #18]
 800fd74:	68c0      	ldr	r0, [r0, #12]
 800fd76:	6803      	ldr	r3, [r0, #0]
 800fd78:	b085      	sub	sp, #20
 800fd7a:	6b9b      	ldr	r3, [r3, #56]	@ 0x38
 800fd7c:	4798      	blx	r3
 800fd7e:	f9b4 6014 	ldrsh.w	r6, [r4, #20]
 800fd82:	7a63      	ldrb	r3, [r4, #9]
 800fd84:	eb06 0640 	add.w	r6, r6, r0, lsl #1
 800fd88:	42b7      	cmp	r7, r6
 800fd8a:	f103 33ff 	add.w	r3, r3, #4294967295
 800fd8e:	bfac      	ite	ge
 800fd90:	f04f 0900 	movge.w	r9, #0
 800fd94:	f04f 0901 	movlt.w	r9, #1
 800fd98:	2b05      	cmp	r3, #5
 800fd9a:	d804      	bhi.n	800fda6 <_ZN8touchgfx3LCD22WideTextInternalStruct23scanStringLengthForLineEv+0x3a>
 800fd9c:	e8df f003 	tbb	[pc, r3]
 800fda0:	470e0854 	.word	0x470e0854
 800fda4:	4c4c      	.short	0x4c4c
 800fda6:	2500      	movs	r5, #0
 800fda8:	46a9      	mov	r9, r5
 800fdaa:	462e      	mov	r6, r5
 800fdac:	462f      	mov	r7, r5
 800fdae:	e00d      	b.n	800fdcc <_ZN8touchgfx3LCD22WideTextInternalStruct23scanStringLengthForLineEv+0x60>
 800fdb0:	42b7      	cmp	r7, r6
 800fdb2:	bfb4      	ite	lt
 800fdb4:	2600      	movlt	r6, #0
 800fdb6:	2601      	movge	r6, #1
 800fdb8:	2500      	movs	r5, #0
 800fdba:	e7f7      	b.n	800fdac <_ZN8touchgfx3LCD22WideTextInternalStruct23scanStringLengthForLineEv+0x40>
 800fdbc:	42b7      	cmp	r7, r6
 800fdbe:	464d      	mov	r5, r9
 800fdc0:	f04f 0900 	mov.w	r9, #0
 800fdc4:	bfb4      	ite	lt
 800fdc6:	2600      	movlt	r6, #0
 800fdc8:	2601      	movge	r6, #1
 800fdca:	464f      	mov	r7, r9
 800fdcc:	f04f 0800 	mov.w	r8, #0
 800fdd0:	f8a4 8016 	strh.w	r8, [r4, #22]
 800fdd4:	f8a4 8018 	strh.w	r8, [r4, #24]
 800fdd8:	f8cd 8004 	str.w	r8, [sp, #4]
 800fddc:	2300      	movs	r3, #0
 800fdde:	9303      	str	r3, [sp, #12]
 800fde0:	8823      	ldrh	r3, [r4, #0]
 800fde2:	2b20      	cmp	r3, #32
 800fde4:	d034      	beq.n	800fe50 <_ZN8touchgfx3LCD22WideTextInternalStruct23scanStringLengthForLineEv+0xe4>
 800fde6:	f242 010b 	movw	r1, #8203	@ 0x200b
 800fdea:	1a5a      	subs	r2, r3, r1
 800fdec:	f1d2 0a00 	rsbs	sl, r2, #0
 800fdf0:	eb4a 0a02 	adc.w	sl, sl, r2
 800fdf4:	f64f 62ff 	movw	r2, #65279	@ 0xfeff
 800fdf8:	4293      	cmp	r3, r2
 800fdfa:	d009      	beq.n	800fe10 <_ZN8touchgfx3LCD22WideTextInternalStruct23scanStringLengthForLineEv+0xa4>
 800fdfc:	428b      	cmp	r3, r1
 800fdfe:	9a01      	ldr	r2, [sp, #4]
 800fe00:	bf18      	it	ne
 800fe02:	461a      	movne	r2, r3
 800fe04:	9201      	str	r2, [sp, #4]
 800fe06:	bf0c      	ite	eq
 800fe08:	f04f 0a01 	moveq.w	sl, #1
 800fe0c:	f04f 0a00 	movne.w	sl, #0
 800fe10:	ab03      	add	r3, sp, #12
 800fe12:	68e2      	ldr	r2, [r4, #12]
 800fe14:	7a21      	ldrb	r1, [r4, #8]
 800fe16:	6860      	ldr	r0, [r4, #4]
 800fe18:	f002 fd84 	bl	8012924 <_ZN8touchgfx12TextProvider15getNextLigatureEhPKNS_4FontERPKNS_9GlyphNodeE>
 800fe1c:	8020      	strh	r0, [r4, #0]
 800fe1e:	b9d8      	cbnz	r0, 800fe58 <_ZN8touchgfx3LCD22WideTextInternalStruct23scanStringLengthForLineEv+0xec>
 800fe20:	8ba2      	ldrh	r2, [r4, #28]
 800fe22:	2300      	movs	r3, #0
 800fe24:	4611      	mov	r1, r2
 800fe26:	4620      	mov	r0, r4
 800fe28:	f7ff ff90 	bl	800fd4c <_ZN8touchgfx3LCD22WideTextInternalStruct7addWordEttt>
 800fe2c:	e06e      	b.n	800ff0c <_ZN8touchgfx3LCD22WideTextInternalStruct23scanStringLengthForLineEv+0x1a0>
 800fe2e:	2500      	movs	r5, #0
 800fe30:	46a9      	mov	r9, r5
 800fe32:	462e      	mov	r6, r5
 800fe34:	2701      	movs	r7, #1
 800fe36:	e7c9      	b.n	800fdcc <_ZN8touchgfx3LCD22WideTextInternalStruct23scanStringLengthForLineEv+0x60>
 800fe38:	42b7      	cmp	r7, r6
 800fe3a:	f04f 0500 	mov.w	r5, #0
 800fe3e:	bfb4      	ite	lt
 800fe40:	2700      	movlt	r7, #0
 800fe42:	2701      	movge	r7, #1
 800fe44:	462e      	mov	r6, r5
 800fe46:	e7c1      	b.n	800fdcc <_ZN8touchgfx3LCD22WideTextInternalStruct23scanStringLengthForLineEv+0x60>
 800fe48:	2500      	movs	r5, #0
 800fe4a:	46a9      	mov	r9, r5
 800fe4c:	2601      	movs	r6, #1
 800fe4e:	e7ad      	b.n	800fdac <_ZN8touchgfx3LCD22WideTextInternalStruct23scanStringLengthForLineEv+0x40>
 800fe50:	9301      	str	r3, [sp, #4]
 800fe52:	f04f 0a01 	mov.w	sl, #1
 800fe56:	e7db      	b.n	800fe10 <_ZN8touchgfx3LCD22WideTextInternalStruct23scanStringLengthForLineEv+0xa4>
 800fe58:	8b63      	ldrh	r3, [r4, #26]
 800fe5a:	280a      	cmp	r0, #10
 800fe5c:	f103 0301 	add.w	r3, r3, #1
 800fe60:	8363      	strh	r3, [r4, #26]
 800fe62:	d0dd      	beq.n	800fe20 <_ZN8touchgfx3LCD22WideTextInternalStruct23scanStringLengthForLineEv+0xb4>
 800fe64:	9a03      	ldr	r2, [sp, #12]
 800fe66:	bb62      	cbnz	r2, 800fec2 <_ZN8touchgfx3LCD22WideTextInternalStruct23scanStringLengthForLineEv+0x156>
 800fe68:	f64f 63ff 	movw	r3, #65279	@ 0xfeff
 800fe6c:	4298      	cmp	r0, r3
 800fe6e:	d003      	beq.n	800fe78 <_ZN8touchgfx3LCD22WideTextInternalStruct23scanStringLengthForLineEv+0x10c>
 800fe70:	f242 030b 	movw	r3, #8203	@ 0x200b
 800fe74:	4298      	cmp	r0, r3
 800fe76:	d1b1      	bne.n	800fddc <_ZN8touchgfx3LCD22WideTextInternalStruct23scanStringLengthForLineEv+0x70>
 800fe78:	8823      	ldrh	r3, [r4, #0]
 800fe7a:	8ba1      	ldrh	r1, [r4, #28]
 800fe7c:	2b20      	cmp	r3, #32
 800fe7e:	d003      	beq.n	800fe88 <_ZN8touchgfx3LCD22WideTextInternalStruct23scanStringLengthForLineEv+0x11c>
 800fe80:	f242 000b 	movw	r0, #8203	@ 0x200b
 800fe84:	4283      	cmp	r3, r0
 800fe86:	d131      	bne.n	800feec <_ZN8touchgfx3LCD22WideTextInternalStruct23scanStringLengthForLineEv+0x180>
 800fe88:	f1ba 0f00 	cmp.w	sl, #0
 800fe8c:	bf0a      	itet	eq
 800fe8e:	4688      	moveq	r8, r1
 800fe90:	4650      	movne	r0, sl
 800fe92:	2001      	moveq	r0, #1
 800fe94:	440a      	add	r2, r1
 800fe96:	8b23      	ldrh	r3, [r4, #24]
 800fe98:	f8b4 c010 	ldrh.w	ip, [r4, #16]
 800fe9c:	b292      	uxth	r2, r2
 800fe9e:	83a2      	strh	r2, [r4, #28]
 800fea0:	4413      	add	r3, r2
 800fea2:	f1b9 0f00 	cmp.w	r9, #0
 800fea6:	d102      	bne.n	800feae <_ZN8touchgfx3LCD22WideTextInternalStruct23scanStringLengthForLineEv+0x142>
 800fea8:	2d00      	cmp	r5, #0
 800feaa:	d042      	beq.n	800ff32 <_ZN8touchgfx3LCD22WideTextInternalStruct23scanStringLengthForLineEv+0x1c6>
 800feac:	b300      	cbz	r0, 800fef0 <_ZN8touchgfx3LCD22WideTextInternalStruct23scanStringLengthForLineEv+0x184>
 800feae:	8c21      	ldrh	r1, [r4, #32]
 800feb0:	4419      	add	r1, r3
 800feb2:	458c      	cmp	ip, r1
 800feb4:	da37      	bge.n	800ff26 <_ZN8touchgfx3LCD22WideTextInternalStruct23scanStringLengthForLineEv+0x1ba>
 800feb6:	8ae1      	ldrh	r1, [r4, #22]
 800feb8:	2900      	cmp	r1, #0
 800feba:	d034      	beq.n	800ff26 <_ZN8touchgfx3LCD22WideTextInternalStruct23scanStringLengthForLineEv+0x1ba>
 800febc:	4563      	cmp	r3, ip
 800febe:	dd8d      	ble.n	800fddc <_ZN8touchgfx3LCD22WideTextInternalStruct23scanStringLengthForLineEv+0x70>
 800fec0:	e01d      	b.n	800fefe <_ZN8touchgfx3LCD22WideTextInternalStruct23scanStringLengthForLineEv+0x192>
 800fec2:	8893      	ldrh	r3, [r2, #4]
 800fec4:	8023      	strh	r3, [r4, #0]
 800fec6:	f892 b00d 	ldrb.w	fp, [r2, #13]
 800feca:	9901      	ldr	r1, [sp, #4]
 800fecc:	ea4f 0b4b 	mov.w	fp, fp, lsl #1
 800fed0:	f40b 7080 	and.w	r0, fp, #256	@ 0x100
 800fed4:	f892 b00a 	ldrb.w	fp, [r2, #10]
 800fed8:	ea4b 0b00 	orr.w	fp, fp, r0
 800fedc:	68e0      	ldr	r0, [r4, #12]
 800fede:	6803      	ldr	r3, [r0, #0]
 800fee0:	6c5b      	ldr	r3, [r3, #68]	@ 0x44
 800fee2:	4798      	blx	r3
 800fee4:	eb0b 0200 	add.w	r2, fp, r0
 800fee8:	b292      	uxth	r2, r2
 800feea:	e7c5      	b.n	800fe78 <_ZN8touchgfx3LCD22WideTextInternalStruct23scanStringLengthForLineEv+0x10c>
 800feec:	2000      	movs	r0, #0
 800feee:	e7d1      	b.n	800fe94 <_ZN8touchgfx3LCD22WideTextInternalStruct23scanStringLengthForLineEv+0x128>
 800fef0:	4563      	cmp	r3, ip
 800fef2:	f77f af73 	ble.w	800fddc <_ZN8touchgfx3LCD22WideTextInternalStruct23scanStringLengthForLineEv+0x70>
 800fef6:	8ae3      	ldrh	r3, [r4, #22]
 800fef8:	2b00      	cmp	r3, #0
 800fefa:	f43f af6f 	beq.w	800fddc <_ZN8touchgfx3LCD22WideTextInternalStruct23scanStringLengthForLineEv+0x70>
 800fefe:	2301      	movs	r3, #1
 800ff00:	f884 3022 	strb.w	r3, [r4, #34]	@ 0x22
 800ff04:	8c22      	ldrh	r2, [r4, #32]
 800ff06:	8be3      	ldrh	r3, [r4, #30]
 800ff08:	4413      	add	r3, r2
 800ff0a:	83e3      	strh	r3, [r4, #30]
 800ff0c:	68e0      	ldr	r0, [r4, #12]
 800ff0e:	6803      	ldr	r3, [r0, #0]
 800ff10:	6b9b      	ldr	r3, [r3, #56]	@ 0x38
 800ff12:	4798      	blx	r3
 800ff14:	f9b4 3014 	ldrsh.w	r3, [r4, #20]
 800ff18:	4418      	add	r0, r3
 800ff1a:	8a63      	ldrh	r3, [r4, #18]
 800ff1c:	1a18      	subs	r0, r3, r0
 800ff1e:	8260      	strh	r0, [r4, #18]
 800ff20:	b005      	add	sp, #20
 800ff22:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 800ff26:	2300      	movs	r3, #0
 800ff28:	4611      	mov	r1, r2
 800ff2a:	4620      	mov	r0, r4
 800ff2c:	f7ff ff0e 	bl	800fd4c <_ZN8touchgfx3LCD22WideTextInternalStruct7addWordEttt>
 800ff30:	e754      	b.n	800fddc <_ZN8touchgfx3LCD22WideTextInternalStruct23scanStringLengthForLineEv+0x70>
 800ff32:	4563      	cmp	r3, ip
 800ff34:	dd14      	ble.n	800ff60 <_ZN8touchgfx3LCD22WideTextInternalStruct23scanStringLengthForLineEv+0x1f4>
 800ff36:	b117      	cbz	r7, 800ff3e <_ZN8touchgfx3LCD22WideTextInternalStruct23scanStringLengthForLineEv+0x1d2>
 800ff38:	2301      	movs	r3, #1
 800ff3a:	460a      	mov	r2, r1
 800ff3c:	e772      	b.n	800fe24 <_ZN8touchgfx3LCD22WideTextInternalStruct23scanStringLengthForLineEv+0xb8>
 800ff3e:	2e00      	cmp	r6, #0
 800ff40:	f43f af4c 	beq.w	800fddc <_ZN8touchgfx3LCD22WideTextInternalStruct23scanStringLengthForLineEv+0x70>
 800ff44:	2800      	cmp	r0, #0
 800ff46:	f47f af49 	bne.w	800fddc <_ZN8touchgfx3LCD22WideTextInternalStruct23scanStringLengthForLineEv+0x70>
 800ff4a:	f1ba 0f00 	cmp.w	sl, #0
 800ff4e:	d002      	beq.n	800ff56 <_ZN8touchgfx3LCD22WideTextInternalStruct23scanStringLengthForLineEv+0x1ea>
 800ff50:	2301      	movs	r3, #1
 800ff52:	4642      	mov	r2, r8
 800ff54:	e767      	b.n	800fe26 <_ZN8touchgfx3LCD22WideTextInternalStruct23scanStringLengthForLineEv+0xba>
 800ff56:	8ae3      	ldrh	r3, [r4, #22]
 800ff58:	2b00      	cmp	r3, #0
 800ff5a:	f43f af3f 	beq.w	800fddc <_ZN8touchgfx3LCD22WideTextInternalStruct23scanStringLengthForLineEv+0x70>
 800ff5e:	e7d5      	b.n	800ff0c <_ZN8touchgfx3LCD22WideTextInternalStruct23scanStringLengthForLineEv+0x1a0>
 800ff60:	2800      	cmp	r0, #0
 800ff62:	f47f af3b 	bne.w	800fddc <_ZN8touchgfx3LCD22WideTextInternalStruct23scanStringLengthForLineEv+0x70>
 800ff66:	f1ba 0f00 	cmp.w	sl, #0
 800ff6a:	f43f af37 	beq.w	800fddc <_ZN8touchgfx3LCD22WideTextInternalStruct23scanStringLengthForLineEv+0x70>
 800ff6e:	2301      	movs	r3, #1
 800ff70:	4642      	mov	r2, r8
 800ff72:	e7da      	b.n	800ff2a <_ZN8touchgfx3LCD22WideTextInternalStruct23scanStringLengthForLineEv+0x1be>

0800ff74 <_ZN8touchgfx3LCD11getNumLinesERNS_12TextProviderENS_14WideTextActionEhPKNS_4FontEs>:
 800ff74:	b5f0      	push	{r4, r5, r6, r7, lr}
 800ff76:	4605      	mov	r5, r0
 800ff78:	b08f      	sub	sp, #60	@ 0x3c
 800ff7a:	4617      	mov	r7, r2
 800ff7c:	461c      	mov	r4, r3
 800ff7e:	460e      	mov	r6, r1
 800ff80:	b1d1      	cbz	r1, 800ffb8 <_ZN8touchgfx3LCD11getNumLinesERNS_12TextProviderENS_14WideTextActionEhPKNS_4FontEs+0x44>
 800ff82:	681b      	ldr	r3, [r3, #0]
 800ff84:	4620      	mov	r0, r4
 800ff86:	6b9b      	ldr	r3, [r3, #56]	@ 0x38
 800ff88:	4798      	blx	r3
 800ff8a:	4240      	negs	r0, r0
 800ff8c:	b200      	sxth	r0, r0
 800ff8e:	e9cd 4001 	strd	r4, r0, [sp, #4]
 800ff92:	9603      	str	r6, [sp, #12]
 800ff94:	9700      	str	r7, [sp, #0]
 800ff96:	f64f 73ff 	movw	r3, #65535	@ 0xffff
 800ff9a:	f8bd 2050 	ldrh.w	r2, [sp, #80]	@ 0x50
 800ff9e:	4629      	mov	r1, r5
 800ffa0:	a805      	add	r0, sp, #20
 800ffa2:	f7ff fcab 	bl	800f8fc <_ZN8touchgfx3LCD22WideTextInternalStructC1ERNS_12TextProviderEtthPKNS_4FontEsNS_14WideTextActionE>
 800ffa6:	2401      	movs	r4, #1
 800ffa8:	a805      	add	r0, sp, #20
 800ffaa:	f7ff fedf 	bl	800fd6c <_ZN8touchgfx3LCD22WideTextInternalStruct23scanStringLengthForLineEv>
 800ffae:	f8bd 3014 	ldrh.w	r3, [sp, #20]
 800ffb2:	b163      	cbz	r3, 800ffce <_ZN8touchgfx3LCD11getNumLinesERNS_12TextProviderENS_14WideTextActionEhPKNS_4FontEs+0x5a>
 800ffb4:	3401      	adds	r4, #1
 800ffb6:	e7f7      	b.n	800ffa8 <_ZN8touchgfx3LCD11getNumLinesERNS_12TextProviderENS_14WideTextActionEhPKNS_4FontEs+0x34>
 800ffb8:	f002 fd82 	bl	8012ac0 <_ZN8touchgfx12TextProvider11getNextCharEv>
 800ffbc:	2401      	movs	r4, #1
 800ffbe:	280a      	cmp	r0, #10
 800ffc0:	4628      	mov	r0, r5
 800ffc2:	bf08      	it	eq
 800ffc4:	3401      	addeq	r4, #1
 800ffc6:	f002 fd7b 	bl	8012ac0 <_ZN8touchgfx12TextProvider11getNextCharEv>
 800ffca:	2800      	cmp	r0, #0
 800ffcc:	d1f7      	bne.n	800ffbe <_ZN8touchgfx3LCD11getNumLinesERNS_12TextProviderENS_14WideTextActionEhPKNS_4FontEs+0x4a>
 800ffce:	b2a0      	uxth	r0, r4
 800ffd0:	b00f      	add	sp, #60	@ 0x3c
 800ffd2:	bdf0      	pop	{r4, r5, r6, r7, pc}

0800ffd4 <_ZN8touchgfx3LCD13drawStringLTRERKNS_4RectES3_RKNS0_13StringVisualsEPKtSt9__va_list>:
 800ffd4:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 800ffd8:	b0e3      	sub	sp, #396	@ 0x18c
 800ffda:	461c      	mov	r4, r3
 800ffdc:	9b6c      	ldr	r3, [sp, #432]	@ 0x1b0
 800ffde:	4683      	mov	fp, r0
 800ffe0:	4688      	mov	r8, r1
 800ffe2:	2b00      	cmp	r3, #0
 800ffe4:	f000 8112 	beq.w	801020c <_ZN8touchgfx3LCD13drawStringLTRERKNS_4RectES3_RKNS0_13StringVisualsEPKtSt9__va_list+0x238>
 800ffe8:	6823      	ldr	r3, [r4, #0]
 800ffea:	2b00      	cmp	r3, #0
 800ffec:	f000 810e 	beq.w	801020c <_ZN8touchgfx3LCD13drawStringLTRERKNS_4RectES3_RKNS0_13StringVisualsEPKtSt9__va_list+0x238>
 800fff0:	7ba3      	ldrb	r3, [r4, #14]
 800fff2:	2b00      	cmp	r3, #0
 800fff4:	f000 810a 	beq.w	801020c <_ZN8touchgfx3LCD13drawStringLTRERKNS_4RectES3_RKNS0_13StringVisualsEPKtSt9__va_list+0x238>
 800fff8:	6810      	ldr	r0, [r2, #0]
 800fffa:	6851      	ldr	r1, [r2, #4]
 800fffc:	f9b8 2004 	ldrsh.w	r2, [r8, #4]
 8010000:	f8ad 2034 	strh.w	r2, [sp, #52]	@ 0x34
 8010004:	ad0a      	add	r5, sp, #40	@ 0x28
 8010006:	462b      	mov	r3, r5
 8010008:	c303      	stmia	r3!, {r0, r1}
 801000a:	2100      	movs	r1, #0
 801000c:	f9b8 3006 	ldrsh.w	r3, [r8, #6]
 8010010:	910c      	str	r1, [sp, #48]	@ 0x30
 8010012:	79a2      	ldrb	r2, [r4, #6]
 8010014:	f8ad 3036 	strh.w	r3, [sp, #54]	@ 0x36
 8010018:	a90c      	add	r1, sp, #48	@ 0x30
 801001a:	4628      	mov	r0, r5
 801001c:	f7ff fced 	bl	800f9fa <_ZN8touchgfx3LCD10rotateRectERNS_4RectERKS1_NS_12TextRotationE>
 8010020:	a90c      	add	r1, sp, #48	@ 0x30
 8010022:	4608      	mov	r0, r1
 8010024:	79a2      	ldrb	r2, [r4, #6]
 8010026:	f7ff fce8 	bl	800f9fa <_ZN8touchgfx3LCD10rotateRectERNS_4RectERKS1_NS_12TextRotationE>
 801002a:	a817      	add	r0, sp, #92	@ 0x5c
 801002c:	f002 f8f2 	bl	8012214 <_ZN8touchgfx12TextProviderC1Ev>
 8010030:	6820      	ldr	r0, [r4, #0]
 8010032:	6803      	ldr	r3, [r0, #0]
 8010034:	6cdb      	ldr	r3, [r3, #76]	@ 0x4c
 8010036:	4798      	blx	r3
 8010038:	4606      	mov	r6, r0
 801003a:	6820      	ldr	r0, [r4, #0]
 801003c:	6803      	ldr	r3, [r0, #0]
 801003e:	6d1b      	ldr	r3, [r3, #80]	@ 0x50
 8010040:	4798      	blx	r3
 8010042:	4633      	mov	r3, r6
 8010044:	9a6d      	ldr	r2, [sp, #436]	@ 0x1b4
 8010046:	996c      	ldr	r1, [sp, #432]	@ 0x1b0
 8010048:	9000      	str	r0, [sp, #0]
 801004a:	a817      	add	r0, sp, #92	@ 0x5c
 801004c:	f002 f93d 	bl	80122ca <_ZN8touchgfx12TextProvider10initializeEPKtSt9__va_listS2_PKNS_24FontContextualFormsTableE>
 8010050:	6820      	ldr	r0, [r4, #0]
 8010052:	f894 a004 	ldrb.w	sl, [r4, #4]
 8010056:	6803      	ldr	r3, [r0, #0]
 8010058:	6b9b      	ldr	r3, [r3, #56]	@ 0x38
 801005a:	4798      	blx	r3
 801005c:	f9b4 600c 	ldrsh.w	r6, [r4, #12]
 8010060:	6823      	ldr	r3, [r4, #0]
 8010062:	4607      	mov	r7, r0
 8010064:	4406      	add	r6, r0
 8010066:	a830      	add	r0, sp, #192	@ 0xc0
 8010068:	f893 9009 	ldrb.w	r9, [r3, #9]
 801006c:	f002 f8d2 	bl	8012214 <_ZN8touchgfx12TextProviderC1Ev>
 8010070:	7c23      	ldrb	r3, [r4, #16]
 8010072:	b17b      	cbz	r3, 8010094 <_ZN8touchgfx3LCD13drawStringLTRERKNS_4RectES3_RKNS0_13StringVisualsEPKtSt9__va_list+0xc0>
 8010074:	6820      	ldr	r0, [r4, #0]
 8010076:	6803      	ldr	r3, [r0, #0]
 8010078:	6cdb      	ldr	r3, [r3, #76]	@ 0x4c
 801007a:	4798      	blx	r3
 801007c:	9009      	str	r0, [sp, #36]	@ 0x24
 801007e:	6820      	ldr	r0, [r4, #0]
 8010080:	6802      	ldr	r2, [r0, #0]
 8010082:	6d12      	ldr	r2, [r2, #80]	@ 0x50
 8010084:	4790      	blx	r2
 8010086:	9b09      	ldr	r3, [sp, #36]	@ 0x24
 8010088:	9000      	str	r0, [sp, #0]
 801008a:	9a6d      	ldr	r2, [sp, #436]	@ 0x1b4
 801008c:	996c      	ldr	r1, [sp, #432]	@ 0x1b0
 801008e:	a830      	add	r0, sp, #192	@ 0xc0
 8010090:	f002 f91b 	bl	80122ca <_ZN8touchgfx12TextProvider10initializeEPKtSt9__va_listS2_PKNS_24FontContextualFormsTableE>
 8010094:	f8bd 1034 	ldrh.w	r1, [sp, #52]	@ 0x34
 8010098:	7be2      	ldrb	r2, [r4, #15]
 801009a:	f8bd 3036 	ldrh.w	r3, [sp, #54]	@ 0x36
 801009e:	1a8a      	subs	r2, r1, r2
 80100a0:	7c21      	ldrb	r1, [r4, #16]
 80100a2:	9103      	str	r1, [sp, #12]
 80100a4:	f9b4 100c 	ldrsh.w	r1, [r4, #12]
 80100a8:	9102      	str	r1, [sp, #8]
 80100aa:	6821      	ldr	r1, [r4, #0]
 80100ac:	9101      	str	r1, [sp, #4]
 80100ae:	7961      	ldrb	r1, [r4, #5]
 80100b0:	9100      	str	r1, [sp, #0]
 80100b2:	b292      	uxth	r2, r2
 80100b4:	a930      	add	r1, sp, #192	@ 0xc0
 80100b6:	a80e      	add	r0, sp, #56	@ 0x38
 80100b8:	f7ff fc20 	bl	800f8fc <_ZN8touchgfx3LCD22WideTextInternalStructC1ERNS_12TextProviderEtthPKNS_4FontEsNS_14WideTextActionE>
 80100bc:	2e00      	cmp	r6, #0
 80100be:	dc5b      	bgt.n	8010178 <_ZN8touchgfx3LCD13drawStringLTRERKNS_4RectES3_RKNS0_13StringVisualsEPKtSt9__va_list+0x1a4>
 80100c0:	af17      	add	r7, sp, #92	@ 0x5c
 80100c2:	f04f 0900 	mov.w	r9, #0
 80100c6:	7c23      	ldrb	r3, [r4, #16]
 80100c8:	2b00      	cmp	r3, #0
 80100ca:	f000 80b1 	beq.w	8010230 <_ZN8touchgfx3LCD13drawStringLTRERKNS_4RectES3_RKNS0_13StringVisualsEPKtSt9__va_list+0x25c>
 80100ce:	a80e      	add	r0, sp, #56	@ 0x38
 80100d0:	f7ff fe4c 	bl	800fd6c <_ZN8touchgfx3LCD22WideTextInternalStruct23scanStringLengthForLineEv>
 80100d4:	f1ba 0f00 	cmp.w	sl, #0
 80100d8:	f000 80a5 	beq.w	8010226 <_ZN8touchgfx3LCD13drawStringLTRERKNS_4RectES3_RKNS0_13StringVisualsEPKtSt9__va_list+0x252>
 80100dc:	7c23      	ldrb	r3, [r4, #16]
 80100de:	9309      	str	r3, [sp, #36]	@ 0x24
 80100e0:	2264      	movs	r2, #100	@ 0x64
 80100e2:	4639      	mov	r1, r7
 80100e4:	a849      	add	r0, sp, #292	@ 0x124
 80100e6:	f012 fcaa 	bl	8022a3e <memcpy>
 80100ea:	9b09      	ldr	r3, [sp, #36]	@ 0x24
 80100ec:	2b00      	cmp	r3, #0
 80100ee:	f000 80a7 	beq.w	8010240 <_ZN8touchgfx3LCD13drawStringLTRERKNS_4RectES3_RKNS0_13StringVisualsEPKtSt9__va_list+0x26c>
 80100f2:	f9bd 3056 	ldrsh.w	r3, [sp, #86]	@ 0x56
 80100f6:	7922      	ldrb	r2, [r4, #4]
 80100f8:	2a01      	cmp	r2, #1
 80100fa:	f040 808a 	bne.w	8010212 <_ZN8touchgfx3LCD13drawStringLTRERKNS_4RectES3_RKNS0_13StringVisualsEPKtSt9__va_list+0x23e>
 80100fe:	f9bd 0034 	ldrsh.w	r0, [sp, #52]	@ 0x34
 8010102:	1ac0      	subs	r0, r0, r3
 8010104:	2302      	movs	r3, #2
 8010106:	fb90 f0f3 	sdiv	r0, r0, r3
 801010a:	b200      	sxth	r0, r0
 801010c:	7c23      	ldrb	r3, [r4, #16]
 801010e:	2b00      	cmp	r3, #0
 8010110:	f000 808b 	beq.w	801022a <_ZN8touchgfx3LCD13drawStringLTRERKNS_4RectES3_RKNS0_13StringVisualsEPKtSt9__va_list+0x256>
 8010114:	f8bd 204e 	ldrh.w	r2, [sp, #78]	@ 0x4e
 8010118:	f89d 105a 	ldrb.w	r1, [sp, #90]	@ 0x5a
 801011c:	f9bd 3032 	ldrsh.w	r3, [sp, #50]	@ 0x32
 8010120:	e9cd 2105 	strd	r2, r1, [sp, #20]
 8010124:	f8bd 2030 	ldrh.w	r2, [sp, #48]	@ 0x30
 8010128:	4410      	add	r0, r2
 801012a:	b200      	sxth	r0, r0
 801012c:	9000      	str	r0, [sp, #0]
 801012e:	e9cd 9703 	strd	r9, r7, [sp, #12]
 8010132:	e9cd 5401 	strd	r5, r4, [sp, #4]
 8010136:	4642      	mov	r2, r8
 8010138:	2100      	movs	r1, #0
 801013a:	4658      	mov	r0, fp
 801013c:	f7ff fc8e 	bl	800fa5c <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEssRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib>
 8010140:	2800      	cmp	r0, #0
 8010142:	d163      	bne.n	801020c <_ZN8touchgfx3LCD13drawStringLTRERKNS_4RectES3_RKNS0_13StringVisualsEPKtSt9__va_list+0x238>
 8010144:	f8bd 3032 	ldrh.w	r3, [sp, #50]	@ 0x32
 8010148:	f8bd 1036 	ldrh.w	r1, [sp, #54]	@ 0x36
 801014c:	b2b2      	uxth	r2, r6
 801014e:	4413      	add	r3, r2
 8010150:	1a8a      	subs	r2, r1, r2
 8010152:	f8ad 2036 	strh.w	r2, [sp, #54]	@ 0x36
 8010156:	f89d 205a 	ldrb.w	r2, [sp, #90]	@ 0x5a
 801015a:	b21b      	sxth	r3, r3
 801015c:	f8ad 3032 	strh.w	r3, [sp, #50]	@ 0x32
 8010160:	2a00      	cmp	r2, #0
 8010162:	d153      	bne.n	801020c <_ZN8touchgfx3LCD13drawStringLTRERKNS_4RectES3_RKNS0_13StringVisualsEPKtSt9__va_list+0x238>
 8010164:	6822      	ldr	r2, [r4, #0]
 8010166:	8869      	ldrh	r1, [r5, #2]
 8010168:	7a12      	ldrb	r2, [r2, #8]
 801016a:	1a9b      	subs	r3, r3, r2
 801016c:	88ea      	ldrh	r2, [r5, #6]
 801016e:	440a      	add	r2, r1
 8010170:	b212      	sxth	r2, r2
 8010172:	4293      	cmp	r3, r2
 8010174:	dda7      	ble.n	80100c6 <_ZN8touchgfx3LCD13drawStringLTRERKNS_4RectES3_RKNS0_13StringVisualsEPKtSt9__va_list+0xf2>
 8010176:	e049      	b.n	801020c <_ZN8touchgfx3LCD13drawStringLTRERKNS_4RectES3_RKNS0_13StringVisualsEPKtSt9__va_list+0x238>
 8010178:	7c23      	ldrb	r3, [r4, #16]
 801017a:	444f      	add	r7, r9
 801017c:	b1c3      	cbz	r3, 80101b0 <_ZN8touchgfx3LCD13drawStringLTRERKNS_4RectES3_RKNS0_13StringVisualsEPKtSt9__va_list+0x1dc>
 801017e:	f64f 79ff 	movw	r9, #65535	@ 0xffff
 8010182:	f9bd 3032 	ldrsh.w	r3, [sp, #50]	@ 0x32
 8010186:	f9b5 2002 	ldrsh.w	r2, [r5, #2]
 801018a:	443b      	add	r3, r7
 801018c:	4293      	cmp	r3, r2
 801018e:	da97      	bge.n	80100c0 <_ZN8touchgfx3LCD13drawStringLTRERKNS_4RectES3_RKNS0_13StringVisualsEPKtSt9__va_list+0xec>
 8010190:	a80e      	add	r0, sp, #56	@ 0x38
 8010192:	f7ff fdeb 	bl	800fd6c <_ZN8touchgfx3LCD22WideTextInternalStruct23scanStringLengthForLineEv>
 8010196:	f8bd 304e 	ldrh.w	r3, [sp, #78]	@ 0x4e
 801019a:	3b01      	subs	r3, #1
 801019c:	b29b      	uxth	r3, r3
 801019e:	454b      	cmp	r3, r9
 80101a0:	9309      	str	r3, [sp, #36]	@ 0x24
 80101a2:	d021      	beq.n	80101e8 <_ZN8touchgfx3LCD13drawStringLTRERKNS_4RectES3_RKNS0_13StringVisualsEPKtSt9__va_list+0x214>
 80101a4:	7961      	ldrb	r1, [r4, #5]
 80101a6:	a817      	add	r0, sp, #92	@ 0x5c
 80101a8:	f7fa faee 	bl	800a788 <_ZN8touchgfx12TextProvider15getNextLigatureEh>
 80101ac:	9b09      	ldr	r3, [sp, #36]	@ 0x24
 80101ae:	e7f4      	b.n	801019a <_ZN8touchgfx3LCD13drawStringLTRERKNS_4RectES3_RKNS0_13StringVisualsEPKtSt9__va_list+0x1c6>
 80101b0:	fa1f f986 	uxth.w	r9, r6
 80101b4:	f9bd 3032 	ldrsh.w	r3, [sp, #50]	@ 0x32
 80101b8:	f9b5 2002 	ldrsh.w	r2, [r5, #2]
 80101bc:	443b      	add	r3, r7
 80101be:	4293      	cmp	r3, r2
 80101c0:	f6bf af7e 	bge.w	80100c0 <_ZN8touchgfx3LCD13drawStringLTRERKNS_4RectES3_RKNS0_13StringVisualsEPKtSt9__va_list+0xec>
 80101c4:	a817      	add	r0, sp, #92	@ 0x5c
 80101c6:	f002 fc7b 	bl	8012ac0 <_ZN8touchgfx12TextProvider11getNextCharEv>
 80101ca:	b1f8      	cbz	r0, 801020c <_ZN8touchgfx3LCD13drawStringLTRERKNS_4RectES3_RKNS0_13StringVisualsEPKtSt9__va_list+0x238>
 80101cc:	280a      	cmp	r0, #10
 80101ce:	d1f1      	bne.n	80101b4 <_ZN8touchgfx3LCD13drawStringLTRERKNS_4RectES3_RKNS0_13StringVisualsEPKtSt9__va_list+0x1e0>
 80101d0:	f8bd 3032 	ldrh.w	r3, [sp, #50]	@ 0x32
 80101d4:	444b      	add	r3, r9
 80101d6:	f8ad 3032 	strh.w	r3, [sp, #50]	@ 0x32
 80101da:	f8bd 3036 	ldrh.w	r3, [sp, #54]	@ 0x36
 80101de:	eba3 0309 	sub.w	r3, r3, r9
 80101e2:	f8ad 3036 	strh.w	r3, [sp, #54]	@ 0x36
 80101e6:	e7e5      	b.n	80101b4 <_ZN8touchgfx3LCD13drawStringLTRERKNS_4RectES3_RKNS0_13StringVisualsEPKtSt9__va_list+0x1e0>
 80101e8:	f8bd 2032 	ldrh.w	r2, [sp, #50]	@ 0x32
 80101ec:	b2b3      	uxth	r3, r6
 80101ee:	441a      	add	r2, r3
 80101f0:	f8ad 2032 	strh.w	r2, [sp, #50]	@ 0x32
 80101f4:	f8bd 2036 	ldrh.w	r2, [sp, #54]	@ 0x36
 80101f8:	1ad3      	subs	r3, r2, r3
 80101fa:	f8ad 3036 	strh.w	r3, [sp, #54]	@ 0x36
 80101fe:	f8bd 3038 	ldrh.w	r3, [sp, #56]	@ 0x38
 8010202:	b11b      	cbz	r3, 801020c <_ZN8touchgfx3LCD13drawStringLTRERKNS_4RectES3_RKNS0_13StringVisualsEPKtSt9__va_list+0x238>
 8010204:	f89d 305a 	ldrb.w	r3, [sp, #90]	@ 0x5a
 8010208:	2b00      	cmp	r3, #0
 801020a:	d0ba      	beq.n	8010182 <_ZN8touchgfx3LCD13drawStringLTRERKNS_4RectES3_RKNS0_13StringVisualsEPKtSt9__va_list+0x1ae>
 801020c:	b063      	add	sp, #396	@ 0x18c
 801020e:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 8010212:	2a02      	cmp	r2, #2
 8010214:	d105      	bne.n	8010222 <_ZN8touchgfx3LCD13drawStringLTRERKNS_4RectES3_RKNS0_13StringVisualsEPKtSt9__va_list+0x24e>
 8010216:	7be2      	ldrb	r2, [r4, #15]
 8010218:	f8bd 0034 	ldrh.w	r0, [sp, #52]	@ 0x34
 801021c:	1a80      	subs	r0, r0, r2
 801021e:	1ac0      	subs	r0, r0, r3
 8010220:	e773      	b.n	801010a <_ZN8touchgfx3LCD13drawStringLTRERKNS_4RectES3_RKNS0_13StringVisualsEPKtSt9__va_list+0x136>
 8010222:	2000      	movs	r0, #0
 8010224:	e772      	b.n	801010c <_ZN8touchgfx3LCD13drawStringLTRERKNS_4RectES3_RKNS0_13StringVisualsEPKtSt9__va_list+0x138>
 8010226:	7be0      	ldrb	r0, [r4, #15]
 8010228:	e770      	b.n	801010c <_ZN8touchgfx3LCD13drawStringLTRERKNS_4RectES3_RKNS0_13StringVisualsEPKtSt9__va_list+0x138>
 801022a:	f647 72ff 	movw	r2, #32767	@ 0x7fff
 801022e:	e773      	b.n	8010118 <_ZN8touchgfx3LCD13drawStringLTRERKNS_4RectES3_RKNS0_13StringVisualsEPKtSt9__va_list+0x144>
 8010230:	f1ba 0f00 	cmp.w	sl, #0
 8010234:	d0f7      	beq.n	8010226 <_ZN8touchgfx3LCD13drawStringLTRERKNS_4RectES3_RKNS0_13StringVisualsEPKtSt9__va_list+0x252>
 8010236:	2264      	movs	r2, #100	@ 0x64
 8010238:	4639      	mov	r1, r7
 801023a:	a849      	add	r0, sp, #292	@ 0x124
 801023c:	f012 fbff 	bl	8022a3e <memcpy>
 8010240:	2300      	movs	r3, #0
 8010242:	f647 72ff 	movw	r2, #32767	@ 0x7fff
 8010246:	6821      	ldr	r1, [r4, #0]
 8010248:	a849      	add	r0, sp, #292	@ 0x124
 801024a:	f7ff fb9a 	bl	800f982 <_ZN8touchgfx3LCD11stringWidthERNS_12TextProviderERKNS_4FontEih>
 801024e:	b203      	sxth	r3, r0
 8010250:	e751      	b.n	80100f6 <_ZN8touchgfx3LCD13drawStringLTRERKNS_4RectES3_RKNS0_13StringVisualsEPKtSt9__va_list+0x122>

08010252 <_ZN8touchgfx3LCD5realXERKNS_4RectEssNS_12TextRotationE>:
 8010252:	2b03      	cmp	r3, #3
 8010254:	d818      	bhi.n	8010288 <_ZN8touchgfx3LCD5realXERKNS_4RectEssNS_12TextRotationE+0x36>
 8010256:	e8df f003 	tbb	[pc, r3]
 801025a:	0602      	.short	0x0602
 801025c:	130d      	.short	0x130d
 801025e:	f9b0 2000 	ldrsh.w	r2, [r0]
 8010262:	1850      	adds	r0, r2, r1
 8010264:	4770      	bx	lr
 8010266:	8803      	ldrh	r3, [r0, #0]
 8010268:	8880      	ldrh	r0, [r0, #4]
 801026a:	4418      	add	r0, r3
 801026c:	b200      	sxth	r0, r0
 801026e:	1a80      	subs	r0, r0, r2
 8010270:	3801      	subs	r0, #1
 8010272:	4770      	bx	lr
 8010274:	8803      	ldrh	r3, [r0, #0]
 8010276:	8880      	ldrh	r0, [r0, #4]
 8010278:	4418      	add	r0, r3
 801027a:	b200      	sxth	r0, r0
 801027c:	1a40      	subs	r0, r0, r1
 801027e:	e7f7      	b.n	8010270 <_ZN8touchgfx3LCD5realXERKNS_4RectEssNS_12TextRotationE+0x1e>
 8010280:	f9b0 0000 	ldrsh.w	r0, [r0]
 8010284:	4410      	add	r0, r2
 8010286:	4770      	bx	lr
 8010288:	2000      	movs	r0, #0
 801028a:	4770      	bx	lr

0801028c <_ZN8touchgfx3LCD5realYERKNS_4RectEssNS_12TextRotationE>:
 801028c:	2b03      	cmp	r3, #3
 801028e:	d817      	bhi.n	80102c0 <_ZN8touchgfx3LCD5realYERKNS_4RectEssNS_12TextRotationE+0x34>
 8010290:	e8df f003 	tbb	[pc, r3]
 8010294:	10090602 	.word	0x10090602
 8010298:	f9b0 1002 	ldrsh.w	r1, [r0, #2]
 801029c:	1850      	adds	r0, r2, r1
 801029e:	4770      	bx	lr
 80102a0:	f9b0 2002 	ldrsh.w	r2, [r0, #2]
 80102a4:	e7fa      	b.n	801029c <_ZN8touchgfx3LCD5realYERKNS_4RectEssNS_12TextRotationE+0x10>
 80102a6:	8843      	ldrh	r3, [r0, #2]
 80102a8:	88c0      	ldrh	r0, [r0, #6]
 80102aa:	4418      	add	r0, r3
 80102ac:	b200      	sxth	r0, r0
 80102ae:	1a80      	subs	r0, r0, r2
 80102b0:	3801      	subs	r0, #1
 80102b2:	4770      	bx	lr
 80102b4:	8843      	ldrh	r3, [r0, #2]
 80102b6:	88c0      	ldrh	r0, [r0, #6]
 80102b8:	4418      	add	r0, r3
 80102ba:	b200      	sxth	r0, r0
 80102bc:	1a40      	subs	r0, r0, r1
 80102be:	e7f7      	b.n	80102b0 <_ZN8touchgfx3LCD5realYERKNS_4RectEssNS_12TextRotationE+0x24>
 80102c0:	2000      	movs	r0, #0
 80102c2:	4770      	bx	lr

080102c4 <_GLOBAL__sub_I__ZN8touchgfx3LCD12defaultColorE>:
 80102c4:	4b01      	ldr	r3, [pc, #4]	@ (80102cc <_GLOBAL__sub_I__ZN8touchgfx3LCD12defaultColorE+0x8>)
 80102c6:	2200      	movs	r2, #0
 80102c8:	601a      	str	r2, [r3, #0]
 80102ca:	4770      	bx	lr
 80102cc:	20002dc4 	.word	0x20002dc4

080102d0 <_ZN8touchgfx16TouchCalibration4clzuEm>:
 80102d0:	4603      	mov	r3, r0
 80102d2:	b1c8      	cbz	r0, 8010308 <_ZN8touchgfx16TouchCalibration4clzuEm+0x38>
 80102d4:	0c02      	lsrs	r2, r0, #16
 80102d6:	0412      	lsls	r2, r2, #16
 80102d8:	b9a2      	cbnz	r2, 8010304 <_ZN8touchgfx16TouchCalibration4clzuEm+0x34>
 80102da:	0403      	lsls	r3, r0, #16
 80102dc:	2010      	movs	r0, #16
 80102de:	f013 4f7f 	tst.w	r3, #4278190080	@ 0xff000000
 80102e2:	bf04      	itt	eq
 80102e4:	021b      	lsleq	r3, r3, #8
 80102e6:	3008      	addeq	r0, #8
 80102e8:	f013 4f70 	tst.w	r3, #4026531840	@ 0xf0000000
 80102ec:	bf04      	itt	eq
 80102ee:	011b      	lsleq	r3, r3, #4
 80102f0:	3004      	addeq	r0, #4
 80102f2:	f013 4f40 	tst.w	r3, #3221225472	@ 0xc0000000
 80102f6:	bf04      	itt	eq
 80102f8:	009b      	lsleq	r3, r3, #2
 80102fa:	3002      	addeq	r0, #2
 80102fc:	2b00      	cmp	r3, #0
 80102fe:	db04      	blt.n	801030a <_ZN8touchgfx16TouchCalibration4clzuEm+0x3a>
 8010300:	3001      	adds	r0, #1
 8010302:	4770      	bx	lr
 8010304:	2000      	movs	r0, #0
 8010306:	e7ea      	b.n	80102de <_ZN8touchgfx16TouchCalibration4clzuEm+0xe>
 8010308:	2020      	movs	r0, #32
 801030a:	4770      	bx	lr

0801030c <_ZN8touchgfx16TouchCalibration7muldivuEmmmmmRm>:
 801030c:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8010310:	b087      	sub	sp, #28
 8010312:	460d      	mov	r5, r1
 8010314:	4616      	mov	r6, r2
 8010316:	4698      	mov	r8, r3
 8010318:	e9dd 4710 	ldrd	r4, r7, [sp, #64]	@ 0x40
 801031c:	4601      	mov	r1, r0
 801031e:	b120      	cbz	r0, 801032a <_ZN8touchgfx16TouchCalibration7muldivuEmmmmmRm+0x1e>
 8010320:	b11a      	cbz	r2, 801032a <_ZN8touchgfx16TouchCalibration7muldivuEmmmmmRm+0x1e>
 8010322:	2d1f      	cmp	r5, #31
 8010324:	d801      	bhi.n	801032a <_ZN8touchgfx16TouchCalibration7muldivuEmmmmmRm+0x1e>
 8010326:	2b1f      	cmp	r3, #31
 8010328:	d904      	bls.n	8010334 <_ZN8touchgfx16TouchCalibration7muldivuEmmmmmRm+0x28>
 801032a:	2000      	movs	r0, #0
 801032c:	6038      	str	r0, [r7, #0]
 801032e:	b007      	add	sp, #28
 8010330:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 8010334:	b97d      	cbnz	r5, 8010356 <_ZN8touchgfx16TouchCalibration7muldivuEmmmmmRm+0x4a>
 8010336:	b143      	cbz	r3, 801034a <_ZN8touchgfx16TouchCalibration7muldivuEmmmmmRm+0x3e>
 8010338:	4602      	mov	r2, r0
 801033a:	e9cd 4700 	strd	r4, r7, [sp]
 801033e:	462b      	mov	r3, r5
 8010340:	4641      	mov	r1, r8
 8010342:	4630      	mov	r0, r6
 8010344:	f7ff ffe2 	bl	801030c <_ZN8touchgfx16TouchCalibration7muldivuEmmmmmRm>
 8010348:	e7f1      	b.n	801032e <_ZN8touchgfx16TouchCalibration7muldivuEmmmmmRm+0x22>
 801034a:	f04f 33ff 	mov.w	r3, #4294967295
 801034e:	603b      	str	r3, [r7, #0]
 8010350:	f06f 4000 	mvn.w	r0, #2147483648	@ 0x80000000
 8010354:	e7eb      	b.n	801032e <_ZN8touchgfx16TouchCalibration7muldivuEmmmmmRm+0x22>
 8010356:	fa32 fa05 	lsrs.w	sl, r2, r5
 801035a:	d106      	bne.n	801036a <_ZN8touchgfx16TouchCalibration7muldivuEmmmmmRm+0x5e>
 801035c:	4346      	muls	r6, r0
 801035e:	fbb6 f0f4 	udiv	r0, r6, r4
 8010362:	fb04 6610 	mls	r6, r4, r0, r6
 8010366:	603e      	str	r6, [r7, #0]
 8010368:	e7e1      	b.n	801032e <_ZN8touchgfx16TouchCalibration7muldivuEmmmmmRm+0x22>
 801036a:	2201      	movs	r2, #1
 801036c:	40aa      	lsls	r2, r5
 801036e:	3a01      	subs	r2, #1
 8010370:	4016      	ands	r6, r2
 8010372:	fa00 fb05 	lsl.w	fp, r0, r5
 8010376:	4630      	mov	r0, r6
 8010378:	fbbb f9f4 	udiv	r9, fp, r4
 801037c:	fb0a f309 	mul.w	r3, sl, r9
 8010380:	9303      	str	r3, [sp, #12]
 8010382:	f7ff ffa5 	bl	80102d0 <_ZN8touchgfx16TouchCalibration4clzuEm>
 8010386:	462b      	mov	r3, r5
 8010388:	460a      	mov	r2, r1
 801038a:	e9cd 4700 	strd	r4, r7, [sp]
 801038e:	4601      	mov	r1, r0
 8010390:	4630      	mov	r0, r6
 8010392:	f7ff ffbb 	bl	801030c <_ZN8touchgfx16TouchCalibration7muldivuEmmmmmRm>
 8010396:	fb04 b919 	mls	r9, r4, r9, fp
 801039a:	4606      	mov	r6, r0
 801039c:	4648      	mov	r0, r9
 801039e:	eb05 0108 	add.w	r1, r5, r8
 80103a2:	f7ff ff95 	bl	80102d0 <_ZN8touchgfx16TouchCalibration4clzuEm>
 80103a6:	ab05      	add	r3, sp, #20
 80103a8:	e9cd 4300 	strd	r4, r3, [sp]
 80103ac:	464a      	mov	r2, r9
 80103ae:	4603      	mov	r3, r0
 80103b0:	4650      	mov	r0, sl
 80103b2:	f7ff ffab 	bl	801030c <_ZN8touchgfx16TouchCalibration7muldivuEmmmmmRm>
 80103b6:	6839      	ldr	r1, [r7, #0]
 80103b8:	9a05      	ldr	r2, [sp, #20]
 80103ba:	9b03      	ldr	r3, [sp, #12]
 80103bc:	4411      	add	r1, r2
 80103be:	fbb1 f2f4 	udiv	r2, r1, r4
 80103c2:	18d3      	adds	r3, r2, r3
 80103c4:	441e      	add	r6, r3
 80103c6:	fb04 1412 	mls	r4, r4, r2, r1
 80103ca:	4430      	add	r0, r6
 80103cc:	603c      	str	r4, [r7, #0]
 80103ce:	e7ae      	b.n	801032e <_ZN8touchgfx16TouchCalibration7muldivuEmmmmmRm+0x22>

080103d0 <_ZN8touchgfx16TouchCalibration6muldivEllllRl>:
 80103d0:	e92d 43f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, lr}
 80103d4:	b085      	sub	sp, #20
 80103d6:	f1b0 0900 	subs.w	r9, r0, #0
 80103da:	9c0c      	ldr	r4, [sp, #48]	@ 0x30
 80103dc:	461d      	mov	r5, r3
 80103de:	bfbf      	itttt	lt
 80103e0:	6823      	ldrlt	r3, [r4, #0]
 80103e2:	425b      	neglt	r3, r3
 80103e4:	f1c9 0900 	rsblt	r9, r9, #0
 80103e8:	6023      	strlt	r3, [r4, #0]
 80103ea:	bfb4      	ite	lt
 80103ec:	f04f 36ff 	movlt.w	r6, #4294967295
 80103f0:	2601      	movge	r6, #1
 80103f2:	2a00      	cmp	r2, #0
 80103f4:	4617      	mov	r7, r2
 80103f6:	da04      	bge.n	8010402 <_ZN8touchgfx16TouchCalibration6muldivEllllRl+0x32>
 80103f8:	6823      	ldr	r3, [r4, #0]
 80103fa:	425b      	negs	r3, r3
 80103fc:	4257      	negs	r7, r2
 80103fe:	4276      	negs	r6, r6
 8010400:	6023      	str	r3, [r4, #0]
 8010402:	2d00      	cmp	r5, #0
 8010404:	4638      	mov	r0, r7
 8010406:	bfba      	itte	lt
 8010408:	426d      	neglt	r5, r5
 801040a:	f04f 38ff 	movlt.w	r8, #4294967295
 801040e:	f04f 0801 	movge.w	r8, #1
 8010412:	f7ff ff5d 	bl	80102d0 <_ZN8touchgfx16TouchCalibration4clzuEm>
 8010416:	ab03      	add	r3, sp, #12
 8010418:	e9cd 5300 	strd	r5, r3, [sp]
 801041c:	463a      	mov	r2, r7
 801041e:	4603      	mov	r3, r0
 8010420:	4648      	mov	r0, r9
 8010422:	f7ff ff73 	bl	801030c <_ZN8touchgfx16TouchCalibration7muldivuEmmmmmRm>
 8010426:	6823      	ldr	r3, [r4, #0]
 8010428:	9a03      	ldr	r2, [sp, #12]
 801042a:	4546      	cmp	r6, r8
 801042c:	441a      	add	r2, r3
 801042e:	fb92 f3f5 	sdiv	r3, r2, r5
 8010432:	4418      	add	r0, r3
 8010434:	bf18      	it	ne
 8010436:	4240      	negne	r0, r0
 8010438:	fb05 2313 	mls	r3, r5, r3, r2
 801043c:	1c72      	adds	r2, r6, #1
 801043e:	6023      	str	r3, [r4, #0]
 8010440:	d105      	bne.n	801044e <_ZN8touchgfx16TouchCalibration6muldivEllllRl+0x7e>
 8010442:	2b00      	cmp	r3, #0
 8010444:	f1c3 0200 	rsb	r2, r3, #0
 8010448:	db0b      	blt.n	8010462 <_ZN8touchgfx16TouchCalibration6muldivEllllRl+0x92>
 801044a:	6022      	str	r2, [r4, #0]
 801044c:	e006      	b.n	801045c <_ZN8touchgfx16TouchCalibration6muldivEllllRl+0x8c>
 801044e:	2e01      	cmp	r6, #1
 8010450:	d104      	bne.n	801045c <_ZN8touchgfx16TouchCalibration6muldivEllllRl+0x8c>
 8010452:	2b00      	cmp	r3, #0
 8010454:	da02      	bge.n	801045c <_ZN8touchgfx16TouchCalibration6muldivEllllRl+0x8c>
 8010456:	442b      	add	r3, r5
 8010458:	3801      	subs	r0, #1
 801045a:	6023      	str	r3, [r4, #0]
 801045c:	b005      	add	sp, #20
 801045e:	e8bd 83f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, pc}
 8010462:	3801      	subs	r0, #1
 8010464:	1b52      	subs	r2, r2, r5
 8010466:	e7f0      	b.n	801044a <_ZN8touchgfx16TouchCalibration6muldivEllllRl+0x7a>

08010468 <_ZN8touchgfx16TouchCalibration14translatePointERNS_5PointE>:
 8010468:	e92d 41ff 	stmdb	sp!, {r0, r1, r2, r3, r4, r5, r6, r7, r8, lr}
 801046c:	4c1c      	ldr	r4, [pc, #112]	@ (80104e0 <_ZN8touchgfx16TouchCalibration14translatePointERNS_5PointE+0x78>)
 801046e:	6807      	ldr	r7, [r0, #0]
 8010470:	69a3      	ldr	r3, [r4, #24]
 8010472:	4605      	mov	r5, r0
 8010474:	b92b      	cbnz	r3, 8010482 <_ZN8touchgfx16TouchCalibration14translatePointERNS_5PointE+0x1a>
 8010476:	6840      	ldr	r0, [r0, #4]
 8010478:	e9c5 7000 	strd	r7, r0, [r5]
 801047c:	b004      	add	sp, #16
 801047e:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
 8010482:	68a2      	ldr	r2, [r4, #8]
 8010484:	6820      	ldr	r0, [r4, #0]
 8010486:	ae04      	add	r6, sp, #16
 8010488:	f04f 0802 	mov.w	r8, #2
 801048c:	fb93 f1f8 	sdiv	r1, r3, r8
 8010490:	440a      	add	r2, r1
 8010492:	f846 2d04 	str.w	r2, [r6, #-4]!
 8010496:	69e1      	ldr	r1, [r4, #28]
 8010498:	9600      	str	r6, [sp, #0]
 801049a:	463a      	mov	r2, r7
 801049c:	f7ff ff98 	bl	80103d0 <_ZN8touchgfx16TouchCalibration6muldivEllllRl>
 80104a0:	69a3      	ldr	r3, [r4, #24]
 80104a2:	686a      	ldr	r2, [r5, #4]
 80104a4:	6a21      	ldr	r1, [r4, #32]
 80104a6:	9600      	str	r6, [sp, #0]
 80104a8:	4607      	mov	r7, r0
 80104aa:	6860      	ldr	r0, [r4, #4]
 80104ac:	f7ff ff90 	bl	80103d0 <_ZN8touchgfx16TouchCalibration6muldivEllllRl>
 80104b0:	6962      	ldr	r2, [r4, #20]
 80104b2:	69a3      	ldr	r3, [r4, #24]
 80104b4:	fb93 f8f8 	sdiv	r8, r3, r8
 80104b8:	4442      	add	r2, r8
 80104ba:	9203      	str	r2, [sp, #12]
 80104bc:	6a61      	ldr	r1, [r4, #36]	@ 0x24
 80104be:	682a      	ldr	r2, [r5, #0]
 80104c0:	9600      	str	r6, [sp, #0]
 80104c2:	4407      	add	r7, r0
 80104c4:	68e0      	ldr	r0, [r4, #12]
 80104c6:	f7ff ff83 	bl	80103d0 <_ZN8touchgfx16TouchCalibration6muldivEllllRl>
 80104ca:	9600      	str	r6, [sp, #0]
 80104cc:	4680      	mov	r8, r0
 80104ce:	69a3      	ldr	r3, [r4, #24]
 80104d0:	686a      	ldr	r2, [r5, #4]
 80104d2:	6aa1      	ldr	r1, [r4, #40]	@ 0x28
 80104d4:	6920      	ldr	r0, [r4, #16]
 80104d6:	f7ff ff7b 	bl	80103d0 <_ZN8touchgfx16TouchCalibration6muldivEllllRl>
 80104da:	4440      	add	r0, r8
 80104dc:	e7cc      	b.n	8010478 <_ZN8touchgfx16TouchCalibration14translatePointERNS_5PointE+0x10>
 80104de:	bf00      	nop
 80104e0:	20002dc8 	.word	0x20002dc8

080104e4 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERsS1_>:
 80104e4:	4b07      	ldr	r3, [pc, #28]	@ (8010504 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERsS1_+0x20>)
 80104e6:	781b      	ldrb	r3, [r3, #0]
 80104e8:	2b01      	cmp	r3, #1
 80104ea:	d109      	bne.n	8010500 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERsS1_+0x1c>
 80104ec:	f9b1 3000 	ldrsh.w	r3, [r1]
 80104f0:	f9b0 2000 	ldrsh.w	r2, [r0]
 80104f4:	8003      	strh	r3, [r0, #0]
 80104f6:	4b04      	ldr	r3, [pc, #16]	@ (8010508 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERsS1_+0x24>)
 80104f8:	881b      	ldrh	r3, [r3, #0]
 80104fa:	3b01      	subs	r3, #1
 80104fc:	1a9b      	subs	r3, r3, r2
 80104fe:	800b      	strh	r3, [r1, #0]
 8010500:	4770      	bx	lr
 8010502:	bf00      	nop
 8010504:	20002db4 	.word	0x20002db4
 8010508:	20002db0 	.word	0x20002db0

0801050c <_ZN8touchgfx21DisplayTransformation29transformFrameBufferToDisplayERsS1_>:
 801050c:	b510      	push	{r4, lr}
 801050e:	4b07      	ldr	r3, [pc, #28]	@ (801052c <_ZN8touchgfx21DisplayTransformation29transformFrameBufferToDisplayERsS1_+0x20>)
 8010510:	781b      	ldrb	r3, [r3, #0]
 8010512:	2b01      	cmp	r3, #1
 8010514:	d108      	bne.n	8010528 <_ZN8touchgfx21DisplayTransformation29transformFrameBufferToDisplayERsS1_+0x1c>
 8010516:	4b06      	ldr	r3, [pc, #24]	@ (8010530 <_ZN8touchgfx21DisplayTransformation29transformFrameBufferToDisplayERsS1_+0x24>)
 8010518:	880c      	ldrh	r4, [r1, #0]
 801051a:	881b      	ldrh	r3, [r3, #0]
 801051c:	f9b0 2000 	ldrsh.w	r2, [r0]
 8010520:	3b01      	subs	r3, #1
 8010522:	1b1b      	subs	r3, r3, r4
 8010524:	8003      	strh	r3, [r0, #0]
 8010526:	800a      	strh	r2, [r1, #0]
 8010528:	bd10      	pop	{r4, pc}
 801052a:	bf00      	nop
 801052c:	20002db4 	.word	0x20002db4
 8010530:	20002db0 	.word	0x20002db0

08010534 <_ZN8touchgfx21DisplayTransformation29transformFrameBufferToDisplayERNS_4RectE>:
 8010534:	b510      	push	{r4, lr}
 8010536:	4b0a      	ldr	r3, [pc, #40]	@ (8010560 <_ZN8touchgfx21DisplayTransformation29transformFrameBufferToDisplayERNS_4RectE+0x2c>)
 8010538:	781b      	ldrb	r3, [r3, #0]
 801053a:	2b01      	cmp	r3, #1
 801053c:	d10e      	bne.n	801055c <_ZN8touchgfx21DisplayTransformation29transformFrameBufferToDisplayERNS_4RectE+0x28>
 801053e:	f9b0 1006 	ldrsh.w	r1, [r0, #6]
 8010542:	8843      	ldrh	r3, [r0, #2]
 8010544:	f9b0 4000 	ldrsh.w	r4, [r0]
 8010548:	8044      	strh	r4, [r0, #2]
 801054a:	18ca      	adds	r2, r1, r3
 801054c:	4b05      	ldr	r3, [pc, #20]	@ (8010564 <_ZN8touchgfx21DisplayTransformation29transformFrameBufferToDisplayERNS_4RectE+0x30>)
 801054e:	881b      	ldrh	r3, [r3, #0]
 8010550:	1a9b      	subs	r3, r3, r2
 8010552:	8003      	strh	r3, [r0, #0]
 8010554:	f9b0 3004 	ldrsh.w	r3, [r0, #4]
 8010558:	80c3      	strh	r3, [r0, #6]
 801055a:	8081      	strh	r1, [r0, #4]
 801055c:	bd10      	pop	{r4, pc}
 801055e:	bf00      	nop
 8010560:	20002db4 	.word	0x20002db4
 8010564:	20002db0 	.word	0x20002db0

08010568 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectE>:
 8010568:	4b08      	ldr	r3, [pc, #32]	@ (801058c <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectE+0x24>)
 801056a:	781b      	ldrb	r3, [r3, #0]
 801056c:	2b01      	cmp	r3, #1
 801056e:	d10c      	bne.n	801058a <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectE+0x22>
 8010570:	8803      	ldrh	r3, [r0, #0]
 8010572:	f9b0 1004 	ldrsh.w	r1, [r0, #4]
 8010576:	8842      	ldrh	r2, [r0, #2]
 8010578:	8002      	strh	r2, [r0, #0]
 801057a:	185a      	adds	r2, r3, r1
 801057c:	4b04      	ldr	r3, [pc, #16]	@ (8010590 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectE+0x28>)
 801057e:	881b      	ldrh	r3, [r3, #0]
 8010580:	1a9b      	subs	r3, r3, r2
 8010582:	8043      	strh	r3, [r0, #2]
 8010584:	88c3      	ldrh	r3, [r0, #6]
 8010586:	8083      	strh	r3, [r0, #4]
 8010588:	80c1      	strh	r1, [r0, #6]
 801058a:	4770      	bx	lr
 801058c:	20002db4 	.word	0x20002db4
 8010590:	20002db0 	.word	0x20002db0

08010594 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERsS1_RKNS_4RectE>:
 8010594:	b510      	push	{r4, lr}
 8010596:	4b07      	ldr	r3, [pc, #28]	@ (80105b4 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERsS1_RKNS_4RectE+0x20>)
 8010598:	781b      	ldrb	r3, [r3, #0]
 801059a:	2b01      	cmp	r3, #1
 801059c:	d108      	bne.n	80105b0 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERsS1_RKNS_4RectE+0x1c>
 801059e:	f9b1 3000 	ldrsh.w	r3, [r1]
 80105a2:	f9b0 4000 	ldrsh.w	r4, [r0]
 80105a6:	8003      	strh	r3, [r0, #0]
 80105a8:	8893      	ldrh	r3, [r2, #4]
 80105aa:	3b01      	subs	r3, #1
 80105ac:	1b1b      	subs	r3, r3, r4
 80105ae:	800b      	strh	r3, [r1, #0]
 80105b0:	bd10      	pop	{r4, pc}
 80105b2:	bf00      	nop
 80105b4:	20002db4 	.word	0x20002db4

080105b8 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectERKS1_>:
 80105b8:	b510      	push	{r4, lr}
 80105ba:	4b0a      	ldr	r3, [pc, #40]	@ (80105e4 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectERKS1_+0x2c>)
 80105bc:	781b      	ldrb	r3, [r3, #0]
 80105be:	2b01      	cmp	r3, #1
 80105c0:	460a      	mov	r2, r1
 80105c2:	d10d      	bne.n	80105e0 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectERKS1_+0x28>
 80105c4:	8881      	ldrh	r1, [r0, #4]
 80105c6:	8803      	ldrh	r3, [r0, #0]
 80105c8:	440b      	add	r3, r1
 80105ca:	4601      	mov	r1, r0
 80105cc:	3b01      	subs	r3, #1
 80105ce:	f821 3b02 	strh.w	r3, [r1], #2
 80105d2:	f7ff ffdf 	bl	8010594 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERsS1_RKNS_4RectE>
 80105d6:	f9b0 3004 	ldrsh.w	r3, [r0, #4]
 80105da:	88c2      	ldrh	r2, [r0, #6]
 80105dc:	8082      	strh	r2, [r0, #4]
 80105de:	80c3      	strh	r3, [r0, #6]
 80105e0:	bd10      	pop	{r4, pc}
 80105e2:	bf00      	nop
 80105e4:	20002db4 	.word	0x20002db4

080105e8 <_ZN8touchgfx11Application13requestRedrawEv>:
 80105e8:	4b06      	ldr	r3, [pc, #24]	@ (8010604 <_ZN8touchgfx11Application13requestRedrawEv+0x1c>)
 80105ea:	f9b3 2000 	ldrsh.w	r2, [r3]
 80105ee:	4b06      	ldr	r3, [pc, #24]	@ (8010608 <_ZN8touchgfx11Application13requestRedrawEv+0x20>)
 80105f0:	f8a0 2134 	strh.w	r2, [r0, #308]	@ 0x134
 80105f4:	f9b3 3000 	ldrsh.w	r3, [r3]
 80105f8:	f8a0 3136 	strh.w	r3, [r0, #310]	@ 0x136
 80105fc:	2100      	movs	r1, #0
 80105fe:	f8c0 1130 	str.w	r1, [r0, #304]	@ 0x130
 8010602:	4770      	bx	lr
 8010604:	20002db0 	.word	0x20002db0
 8010608:	20002db2 	.word	0x20002db2

0801060c <_ZN8touchgfx11Application16handleClickEventERKNS_10ClickEventE>:
 801060c:	4b03      	ldr	r3, [pc, #12]	@ (801061c <_ZN8touchgfx11Application16handleClickEventERKNS_10ClickEventE+0x10>)
 801060e:	6818      	ldr	r0, [r3, #0]
 8010610:	b110      	cbz	r0, 8010618 <_ZN8touchgfx11Application16handleClickEventERKNS_10ClickEventE+0xc>
 8010612:	6803      	ldr	r3, [r0, #0]
 8010614:	699b      	ldr	r3, [r3, #24]
 8010616:	4718      	bx	r3
 8010618:	4770      	bx	lr
 801061a:	bf00      	nop
 801061c:	20002df8 	.word	0x20002df8

08010620 <_ZN8touchgfx11Application29handlePendingScreenTransitionEv>:
 8010620:	4770      	bx	lr
	...

08010624 <_ZN8touchgfx11Application4drawEv>:
 8010624:	b507      	push	{r0, r1, r2, lr}
 8010626:	4b09      	ldr	r3, [pc, #36]	@ (801064c <_ZN8touchgfx11Application4drawEv+0x28>)
 8010628:	f9b3 2000 	ldrsh.w	r2, [r3]
 801062c:	4b08      	ldr	r3, [pc, #32]	@ (8010650 <_ZN8touchgfx11Application4drawEv+0x2c>)
 801062e:	f8ad 2004 	strh.w	r2, [sp, #4]
 8010632:	f9b3 3000 	ldrsh.w	r3, [r3]
 8010636:	f8ad 3006 	strh.w	r3, [sp, #6]
 801063a:	6803      	ldr	r3, [r0, #0]
 801063c:	2100      	movs	r1, #0
 801063e:	9100      	str	r1, [sp, #0]
 8010640:	6c9b      	ldr	r3, [r3, #72]	@ 0x48
 8010642:	4669      	mov	r1, sp
 8010644:	4798      	blx	r3
 8010646:	b003      	add	sp, #12
 8010648:	f85d fb04 	ldr.w	pc, [sp], #4
 801064c:	20002db0 	.word	0x20002db0
 8010650:	20002db2 	.word	0x20002db2

08010654 <_ZN8touchgfx11Application10invalidateEv>:
 8010654:	4b09      	ldr	r3, [pc, #36]	@ (801067c <_ZN8touchgfx11Application10invalidateEv+0x28>)
 8010656:	f9b3 2000 	ldrsh.w	r2, [r3]
 801065a:	4b09      	ldr	r3, [pc, #36]	@ (8010680 <_ZN8touchgfx11Application10invalidateEv+0x2c>)
 801065c:	b082      	sub	sp, #8
 801065e:	f9b3 3000 	ldrsh.w	r3, [r3]
 8010662:	f8ad 2004 	strh.w	r2, [sp, #4]
 8010666:	2100      	movs	r1, #0
 8010668:	f8ad 3006 	strh.w	r3, [sp, #6]
 801066c:	9100      	str	r1, [sp, #0]
 801066e:	6803      	ldr	r3, [r0, #0]
 8010670:	aa02      	add	r2, sp, #8
 8010672:	e912 0006 	ldmdb	r2, {r1, r2}
 8010676:	6c1b      	ldr	r3, [r3, #64]	@ 0x40
 8010678:	b002      	add	sp, #8
 801067a:	4718      	bx	r3
 801067c:	20002db0 	.word	0x20002db0
 8010680:	20002db2 	.word	0x20002db2

08010684 <_ZN8touchgfx11Application15handleDragEventERKNS_9DragEventE>:
 8010684:	4b03      	ldr	r3, [pc, #12]	@ (8010694 <_ZN8touchgfx11Application15handleDragEventERKNS_9DragEventE+0x10>)
 8010686:	6818      	ldr	r0, [r3, #0]
 8010688:	b110      	cbz	r0, 8010690 <_ZN8touchgfx11Application15handleDragEventERKNS_9DragEventE+0xc>
 801068a:	6803      	ldr	r3, [r0, #0]
 801068c:	69db      	ldr	r3, [r3, #28]
 801068e:	4718      	bx	r3
 8010690:	4770      	bx	lr
 8010692:	bf00      	nop
 8010694:	20002df8 	.word	0x20002df8

08010698 <_ZN8touchgfx11Application18handleGestureEventERKNS_12GestureEventE>:
 8010698:	4b03      	ldr	r3, [pc, #12]	@ (80106a8 <_ZN8touchgfx11Application18handleGestureEventERKNS_12GestureEventE+0x10>)
 801069a:	6818      	ldr	r0, [r3, #0]
 801069c:	b110      	cbz	r0, 80106a4 <_ZN8touchgfx11Application18handleGestureEventERKNS_12GestureEventE+0xc>
 801069e:	6803      	ldr	r3, [r0, #0]
 80106a0:	6a1b      	ldr	r3, [r3, #32]
 80106a2:	4718      	bx	r3
 80106a4:	4770      	bx	lr
 80106a6:	bf00      	nop
 80106a8:	20002df8 	.word	0x20002df8

080106ac <_ZN8touchgfx11Application16clearCachedAreasEv>:
 80106ac:	2300      	movs	r3, #0
 80106ae:	f8a0 30ec 	strh.w	r3, [r0, #236]	@ 0xec
 80106b2:	4770      	bx	lr

080106b4 <_ZN8touchgfx11Application14handleKeyEventEh>:
 80106b4:	4b03      	ldr	r3, [pc, #12]	@ (80106c4 <_ZN8touchgfx11Application14handleKeyEventEh+0x10>)
 80106b6:	6818      	ldr	r0, [r3, #0]
 80106b8:	b110      	cbz	r0, 80106c0 <_ZN8touchgfx11Application14handleKeyEventEh+0xc>
 80106ba:	6803      	ldr	r3, [r0, #0]
 80106bc:	6a9b      	ldr	r3, [r3, #40]	@ 0x28
 80106be:	4718      	bx	r3
 80106c0:	4770      	bx	lr
 80106c2:	bf00      	nop
 80106c4:	20002df8 	.word	0x20002df8

080106c8 <_ZNK8touchgfx4Rect9intersectERKS0_>:
 80106c8:	b510      	push	{r4, lr}
 80106ca:	f9b1 4000 	ldrsh.w	r4, [r1]
 80106ce:	888a      	ldrh	r2, [r1, #4]
 80106d0:	f9b0 3000 	ldrsh.w	r3, [r0]
 80106d4:	4422      	add	r2, r4
 80106d6:	b212      	sxth	r2, r2
 80106d8:	4293      	cmp	r3, r2
 80106da:	da15      	bge.n	8010708 <_ZNK8touchgfx4Rect9intersectERKS0_+0x40>
 80106dc:	8882      	ldrh	r2, [r0, #4]
 80106de:	4413      	add	r3, r2
 80106e0:	b21b      	sxth	r3, r3
 80106e2:	429c      	cmp	r4, r3
 80106e4:	da10      	bge.n	8010708 <_ZNK8touchgfx4Rect9intersectERKS0_+0x40>
 80106e6:	f9b1 3002 	ldrsh.w	r3, [r1, #2]
 80106ea:	88c9      	ldrh	r1, [r1, #6]
 80106ec:	f9b0 2002 	ldrsh.w	r2, [r0, #2]
 80106f0:	4419      	add	r1, r3
 80106f2:	b209      	sxth	r1, r1
 80106f4:	428a      	cmp	r2, r1
 80106f6:	da07      	bge.n	8010708 <_ZNK8touchgfx4Rect9intersectERKS0_+0x40>
 80106f8:	88c0      	ldrh	r0, [r0, #6]
 80106fa:	4410      	add	r0, r2
 80106fc:	b200      	sxth	r0, r0
 80106fe:	4283      	cmp	r3, r0
 8010700:	bfac      	ite	ge
 8010702:	2000      	movge	r0, #0
 8010704:	2001      	movlt	r0, #1
 8010706:	bd10      	pop	{r4, pc}
 8010708:	2000      	movs	r0, #0
 801070a:	e7fc      	b.n	8010706 <_ZNK8touchgfx4Rect9intersectERKS0_+0x3e>

0801070c <_ZN8touchgfx4Rect10restrictToEss>:
 801070c:	f9b0 3000 	ldrsh.w	r3, [r0]
 8010710:	2b00      	cmp	r3, #0
 8010712:	b510      	push	{r4, lr}
 8010714:	da04      	bge.n	8010720 <_ZN8touchgfx4Rect10restrictToEss+0x14>
 8010716:	8884      	ldrh	r4, [r0, #4]
 8010718:	4423      	add	r3, r4
 801071a:	8083      	strh	r3, [r0, #4]
 801071c:	2300      	movs	r3, #0
 801071e:	8003      	strh	r3, [r0, #0]
 8010720:	f9b0 4000 	ldrsh.w	r4, [r0]
 8010724:	f9b0 3004 	ldrsh.w	r3, [r0, #4]
 8010728:	1b09      	subs	r1, r1, r4
 801072a:	428b      	cmp	r3, r1
 801072c:	f9b0 3002 	ldrsh.w	r3, [r0, #2]
 8010730:	bfc8      	it	gt
 8010732:	8081      	strhgt	r1, [r0, #4]
 8010734:	2b00      	cmp	r3, #0
 8010736:	da04      	bge.n	8010742 <_ZN8touchgfx4Rect10restrictToEss+0x36>
 8010738:	88c1      	ldrh	r1, [r0, #6]
 801073a:	440b      	add	r3, r1
 801073c:	80c3      	strh	r3, [r0, #6]
 801073e:	2300      	movs	r3, #0
 8010740:	8043      	strh	r3, [r0, #2]
 8010742:	f9b0 1002 	ldrsh.w	r1, [r0, #2]
 8010746:	f9b0 3006 	ldrsh.w	r3, [r0, #6]
 801074a:	1a52      	subs	r2, r2, r1
 801074c:	4293      	cmp	r3, r2
 801074e:	bfc8      	it	gt
 8010750:	80c2      	strhgt	r2, [r0, #6]
 8010752:	bd10      	pop	{r4, pc}

08010754 <_ZN8touchgfx11Application4drawERNS_4RectE>:
 8010754:	b510      	push	{r4, lr}
 8010756:	4b10      	ldr	r3, [pc, #64]	@ (8010798 <_ZN8touchgfx11Application4drawERNS_4RectE+0x44>)
 8010758:	f9b3 2000 	ldrsh.w	r2, [r3]
 801075c:	4b0f      	ldr	r3, [pc, #60]	@ (801079c <_ZN8touchgfx11Application4drawERNS_4RectE+0x48>)
 801075e:	460c      	mov	r4, r1
 8010760:	4620      	mov	r0, r4
 8010762:	f9b3 1000 	ldrsh.w	r1, [r3]
 8010766:	f7ff ffd1 	bl	801070c <_ZN8touchgfx4Rect10restrictToEss>
 801076a:	4b0d      	ldr	r3, [pc, #52]	@ (80107a0 <_ZN8touchgfx11Application4drawERNS_4RectE+0x4c>)
 801076c:	6818      	ldr	r0, [r3, #0]
 801076e:	b190      	cbz	r0, 8010796 <_ZN8touchgfx11Application4drawERNS_4RectE+0x42>
 8010770:	6803      	ldr	r3, [r0, #0]
 8010772:	4621      	mov	r1, r4
 8010774:	689b      	ldr	r3, [r3, #8]
 8010776:	4798      	blx	r3
 8010778:	4b0a      	ldr	r3, [pc, #40]	@ (80107a4 <_ZN8touchgfx11Application4drawERNS_4RectE+0x50>)
 801077a:	6818      	ldr	r0, [r3, #0]
 801077c:	b118      	cbz	r0, 8010786 <_ZN8touchgfx11Application4drawERNS_4RectE+0x32>
 801077e:	6803      	ldr	r3, [r0, #0]
 8010780:	4621      	mov	r1, r4
 8010782:	689b      	ldr	r3, [r3, #8]
 8010784:	4798      	blx	r3
 8010786:	4b08      	ldr	r3, [pc, #32]	@ (80107a8 <_ZN8touchgfx11Application4drawERNS_4RectE+0x54>)
 8010788:	6818      	ldr	r0, [r3, #0]
 801078a:	6803      	ldr	r3, [r0, #0]
 801078c:	4621      	mov	r1, r4
 801078e:	69db      	ldr	r3, [r3, #28]
 8010790:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
 8010794:	4718      	bx	r3
 8010796:	bd10      	pop	{r4, pc}
 8010798:	20002db2 	.word	0x20002db2
 801079c:	20002db0 	.word	0x20002db0
 80107a0:	20002df8 	.word	0x20002df8
 80107a4:	20002df4 	.word	0x20002df4
 80107a8:	20002dbc 	.word	0x20002dbc

080107ac <_ZNK8touchgfx4Rect8includesERKS0_>:
 80107ac:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 80107ae:	4606      	mov	r6, r0
 80107b0:	4608      	mov	r0, r1
 80107b2:	460f      	mov	r7, r1
 80107b4:	f7fc fe2b 	bl	800d40e <_ZNK8touchgfx4Rect7isEmptyEv>
 80107b8:	b9e8      	cbnz	r0, 80107f6 <_ZNK8touchgfx4Rect8includesERKS0_+0x4a>
 80107ba:	f9b7 5000 	ldrsh.w	r5, [r7]
 80107be:	f9b6 4000 	ldrsh.w	r4, [r6]
 80107c2:	42a5      	cmp	r5, r4
 80107c4:	db17      	blt.n	80107f6 <_ZNK8touchgfx4Rect8includesERKS0_+0x4a>
 80107c6:	f9b7 2002 	ldrsh.w	r2, [r7, #2]
 80107ca:	f9b6 3002 	ldrsh.w	r3, [r6, #2]
 80107ce:	429a      	cmp	r2, r3
 80107d0:	db11      	blt.n	80107f6 <_ZNK8touchgfx4Rect8includesERKS0_+0x4a>
 80107d2:	88b9      	ldrh	r1, [r7, #4]
 80107d4:	440d      	add	r5, r1
 80107d6:	88b1      	ldrh	r1, [r6, #4]
 80107d8:	440c      	add	r4, r1
 80107da:	b22d      	sxth	r5, r5
 80107dc:	b224      	sxth	r4, r4
 80107de:	42a5      	cmp	r5, r4
 80107e0:	dc09      	bgt.n	80107f6 <_ZNK8touchgfx4Rect8includesERKS0_+0x4a>
 80107e2:	88f8      	ldrh	r0, [r7, #6]
 80107e4:	4410      	add	r0, r2
 80107e6:	88f2      	ldrh	r2, [r6, #6]
 80107e8:	4413      	add	r3, r2
 80107ea:	b200      	sxth	r0, r0
 80107ec:	b21b      	sxth	r3, r3
 80107ee:	4298      	cmp	r0, r3
 80107f0:	bfcc      	ite	gt
 80107f2:	2000      	movgt	r0, #0
 80107f4:	2001      	movle	r0, #1
 80107f6:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}

080107f8 <_ZN8touchgfx4Rect11expandToFitERKS0_>:
 80107f8:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 80107fa:	4604      	mov	r4, r0
 80107fc:	4608      	mov	r0, r1
 80107fe:	460d      	mov	r5, r1
 8010800:	f7fc fe05 	bl	800d40e <_ZNK8touchgfx4Rect7isEmptyEv>
 8010804:	b978      	cbnz	r0, 8010826 <_ZN8touchgfx4Rect11expandToFitERKS0_+0x2e>
 8010806:	4620      	mov	r0, r4
 8010808:	f7fc fe01 	bl	800d40e <_ZNK8touchgfx4Rect7isEmptyEv>
 801080c:	f9b5 6000 	ldrsh.w	r6, [r5]
 8010810:	b150      	cbz	r0, 8010828 <_ZN8touchgfx4Rect11expandToFitERKS0_+0x30>
 8010812:	8026      	strh	r6, [r4, #0]
 8010814:	f9b5 3002 	ldrsh.w	r3, [r5, #2]
 8010818:	8063      	strh	r3, [r4, #2]
 801081a:	f9b5 3004 	ldrsh.w	r3, [r5, #4]
 801081e:	80a3      	strh	r3, [r4, #4]
 8010820:	f9b5 3006 	ldrsh.w	r3, [r5, #6]
 8010824:	80e3      	strh	r3, [r4, #6]
 8010826:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
 8010828:	f9b4 1000 	ldrsh.w	r1, [r4]
 801082c:	f9b5 2002 	ldrsh.w	r2, [r5, #2]
 8010830:	f9b4 3002 	ldrsh.w	r3, [r4, #2]
 8010834:	f8b5 c004 	ldrh.w	ip, [r5, #4]
 8010838:	88ed      	ldrh	r5, [r5, #6]
 801083a:	42b1      	cmp	r1, r6
 801083c:	460f      	mov	r7, r1
 801083e:	bfa8      	it	ge
 8010840:	4637      	movge	r7, r6
 8010842:	4293      	cmp	r3, r2
 8010844:	4618      	mov	r0, r3
 8010846:	4466      	add	r6, ip
 8010848:	bfa8      	it	ge
 801084a:	4610      	movge	r0, r2
 801084c:	f8b4 c004 	ldrh.w	ip, [r4, #4]
 8010850:	8027      	strh	r7, [r4, #0]
 8010852:	442a      	add	r2, r5
 8010854:	88e5      	ldrh	r5, [r4, #6]
 8010856:	8060      	strh	r0, [r4, #2]
 8010858:	4461      	add	r1, ip
 801085a:	442b      	add	r3, r5
 801085c:	b236      	sxth	r6, r6
 801085e:	b209      	sxth	r1, r1
 8010860:	b212      	sxth	r2, r2
 8010862:	b21b      	sxth	r3, r3
 8010864:	428e      	cmp	r6, r1
 8010866:	bfac      	ite	ge
 8010868:	ebc7 0106 	rsbge	r1, r7, r6
 801086c:	ebc7 0101 	rsblt	r1, r7, r1
 8010870:	429a      	cmp	r2, r3
 8010872:	bfac      	ite	ge
 8010874:	ebc0 0202 	rsbge	r2, r0, r2
 8010878:	ebc0 0203 	rsblt	r2, r0, r3
 801087c:	80a1      	strh	r1, [r4, #4]
 801087e:	80e2      	strh	r2, [r4, #6]
 8010880:	e7d1      	b.n	8010826 <_ZN8touchgfx4Rect11expandToFitERKS0_+0x2e>
	...

08010884 <_ZN8touchgfx11Application11getInstanceEv>:
 8010884:	4b01      	ldr	r3, [pc, #4]	@ (801088c <_ZN8touchgfx11Application11getInstanceEv+0x8>)
 8010886:	6818      	ldr	r0, [r3, #0]
 8010888:	4770      	bx	lr
 801088a:	bf00      	nop
 801088c:	20002e08 	.word	0x20002e08

08010890 <_ZN8touchgfx11Application12TimerWidgets10tickActiveEv>:
 8010890:	b510      	push	{r4, lr}
 8010892:	2300      	movs	r3, #0
 8010894:	f8a0 30a4 	strh.w	r3, [r0, #164]	@ 0xa4
 8010898:	f8b0 3080 	ldrh.w	r3, [r0, #128]	@ 0x80
 801089c:	f8a0 30a6 	strh.w	r3, [r0, #166]	@ 0xa6
 80108a0:	4604      	mov	r4, r0
 80108a2:	f8b4 30a4 	ldrh.w	r3, [r4, #164]	@ 0xa4
 80108a6:	f8b4 20a6 	ldrh.w	r2, [r4, #166]	@ 0xa6
 80108aa:	429a      	cmp	r2, r3
 80108ac:	d90e      	bls.n	80108cc <_ZN8touchgfx11Application12TimerWidgets10tickActiveEv+0x3c>
 80108ae:	18e2      	adds	r2, r4, r3
 80108b0:	f892 2084 	ldrb.w	r2, [r2, #132]	@ 0x84
 80108b4:	b122      	cbz	r2, 80108c0 <_ZN8touchgfx11Application12TimerWidgets10tickActiveEv+0x30>
 80108b6:	f854 0023 	ldr.w	r0, [r4, r3, lsl #2]
 80108ba:	6803      	ldr	r3, [r0, #0]
 80108bc:	6d1b      	ldr	r3, [r3, #80]	@ 0x50
 80108be:	4798      	blx	r3
 80108c0:	f8b4 30a4 	ldrh.w	r3, [r4, #164]	@ 0xa4
 80108c4:	3301      	adds	r3, #1
 80108c6:	f8a4 30a4 	strh.w	r3, [r4, #164]	@ 0xa4
 80108ca:	e7ea      	b.n	80108a2 <_ZN8touchgfx11Application12TimerWidgets10tickActiveEv+0x12>
 80108cc:	bd10      	pop	{r4, pc}

080108ce <_ZN8touchgfx11Application12TimerWidgets5clearEv>:
 80108ce:	2300      	movs	r3, #0
 80108d0:	f8a0 3080 	strh.w	r3, [r0, #128]	@ 0x80
 80108d4:	f100 0284 	add.w	r2, r0, #132	@ 0x84
 80108d8:	30a4      	adds	r0, #164	@ 0xa4
 80108da:	f802 3b01 	strb.w	r3, [r2], #1
 80108de:	4282      	cmp	r2, r0
 80108e0:	d1fb      	bne.n	80108da <_ZN8touchgfx11Application12TimerWidgets5clearEv+0xc>
 80108e2:	4770      	bx	lr

080108e4 <_ZN8touchgfx11Application12switchScreenEPNS_6ScreenE>:
 80108e4:	b570      	push	{r4, r5, r6, lr}
 80108e6:	4c0b      	ldr	r4, [pc, #44]	@ (8010914 <_ZN8touchgfx11Application12switchScreenEPNS_6ScreenE+0x30>)
 80108e8:	4605      	mov	r5, r0
 80108ea:	6820      	ldr	r0, [r4, #0]
 80108ec:	460e      	mov	r6, r1
 80108ee:	b110      	cbz	r0, 80108f6 <_ZN8touchgfx11Application12switchScreenEPNS_6ScreenE+0x12>
 80108f0:	6803      	ldr	r3, [r0, #0]
 80108f2:	695b      	ldr	r3, [r3, #20]
 80108f4:	4798      	blx	r3
 80108f6:	1d28      	adds	r0, r5, #4
 80108f8:	f7ff ffe9 	bl	80108ce <_ZN8touchgfx11Application12TimerWidgets5clearEv>
 80108fc:	6026      	str	r6, [r4, #0]
 80108fe:	6833      	ldr	r3, [r6, #0]
 8010900:	4630      	mov	r0, r6
 8010902:	68db      	ldr	r3, [r3, #12]
 8010904:	4798      	blx	r3
 8010906:	682b      	ldr	r3, [r5, #0]
 8010908:	4628      	mov	r0, r5
 801090a:	6c5b      	ldr	r3, [r3, #68]	@ 0x44
 801090c:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
 8010910:	4718      	bx	r3
 8010912:	bf00      	nop
 8010914:	20002df8 	.word	0x20002df8

08010918 <_ZN8touchgfx11Application12TimerWidgets7compactEv>:
 8010918:	2300      	movs	r3, #0
 801091a:	f8b0 c080 	ldrh.w	ip, [r0, #128]	@ 0x80
 801091e:	f8b0 10a4 	ldrh.w	r1, [r0, #164]	@ 0xa4
 8010922:	b5f0      	push	{r4, r5, r6, r7, lr}
 8010924:	461a      	mov	r2, r3
 8010926:	461c      	mov	r4, r3
 8010928:	461d      	mov	r5, r3
 801092a:	459c      	cmp	ip, r3
 801092c:	dd1a      	ble.n	8010964 <_ZN8touchgfx11Application12TimerWidgets7compactEv+0x4c>
 801092e:	18c6      	adds	r6, r0, r3
 8010930:	f896 6084 	ldrb.w	r6, [r6, #132]	@ 0x84
 8010934:	b16e      	cbz	r6, 8010952 <_ZN8touchgfx11Application12TimerWidgets7compactEv+0x3a>
 8010936:	429a      	cmp	r2, r3
 8010938:	d008      	beq.n	801094c <_ZN8touchgfx11Application12TimerWidgets7compactEv+0x34>
 801093a:	fa1f fe82 	uxth.w	lr, r2
 801093e:	f850 7023 	ldr.w	r7, [r0, r3, lsl #2]
 8010942:	f840 702e 	str.w	r7, [r0, lr, lsl #2]
 8010946:	1887      	adds	r7, r0, r2
 8010948:	f887 6084 	strb.w	r6, [r7, #132]	@ 0x84
 801094c:	3201      	adds	r2, #1
 801094e:	3301      	adds	r3, #1
 8010950:	e7eb      	b.n	801092a <_ZN8touchgfx11Application12TimerWidgets7compactEv+0x12>
 8010952:	f8b0 60a6 	ldrh.w	r6, [r0, #166]	@ 0xa6
 8010956:	4299      	cmp	r1, r3
 8010958:	bfa8      	it	ge
 801095a:	3501      	addge	r5, #1
 801095c:	429e      	cmp	r6, r3
 801095e:	bfc8      	it	gt
 8010960:	3401      	addgt	r4, #1
 8010962:	e7f4      	b.n	801094e <_ZN8touchgfx11Application12TimerWidgets7compactEv+0x36>
 8010964:	f8b0 30a6 	ldrh.w	r3, [r0, #166]	@ 0xa6
 8010968:	1b49      	subs	r1, r1, r5
 801096a:	1b1b      	subs	r3, r3, r4
 801096c:	f8a0 10a4 	strh.w	r1, [r0, #164]	@ 0xa4
 8010970:	f8a0 30a6 	strh.w	r3, [r0, #166]	@ 0xa6
 8010974:	f8b0 3080 	ldrh.w	r3, [r0, #128]	@ 0x80
 8010978:	4293      	cmp	r3, r2
 801097a:	dd03      	ble.n	8010984 <_ZN8touchgfx11Application12TimerWidgets7compactEv+0x6c>
 801097c:	3b01      	subs	r3, #1
 801097e:	f8a0 3080 	strh.w	r3, [r0, #128]	@ 0x80
 8010982:	e7f7      	b.n	8010974 <_ZN8touchgfx11Application12TimerWidgets7compactEv+0x5c>
 8010984:	bdf0      	pop	{r4, r5, r6, r7, pc}
	...

08010988 <_ZN8touchgfx11Application15handleTickEventEv>:
 8010988:	b570      	push	{r4, r5, r6, lr}
 801098a:	4d16      	ldr	r5, [pc, #88]	@ (80109e4 <_ZN8touchgfx11Application15handleTickEventEv+0x5c>)
 801098c:	4604      	mov	r4, r0
 801098e:	6828      	ldr	r0, [r5, #0]
 8010990:	b140      	cbz	r0, 80109a4 <_ZN8touchgfx11Application15handleTickEventEv+0x1c>
 8010992:	7a03      	ldrb	r3, [r0, #8]
 8010994:	b933      	cbnz	r3, 80109a4 <_ZN8touchgfx11Application15handleTickEventEv+0x1c>
 8010996:	f884 3138 	strb.w	r3, [r4, #312]	@ 0x138
 801099a:	6803      	ldr	r3, [r0, #0]
 801099c:	689b      	ldr	r3, [r3, #8]
 801099e:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
 80109a2:	4718      	bx	r3
 80109a4:	f894 3138 	ldrb.w	r3, [r4, #312]	@ 0x138
 80109a8:	4e0f      	ldr	r6, [pc, #60]	@ (80109e8 <_ZN8touchgfx11Application15handleTickEventEv+0x60>)
 80109aa:	b973      	cbnz	r3, 80109ca <_ZN8touchgfx11Application15handleTickEventEv+0x42>
 80109ac:	b168      	cbz	r0, 80109ca <_ZN8touchgfx11Application15handleTickEventEv+0x42>
 80109ae:	7a03      	ldrb	r3, [r0, #8]
 80109b0:	b15b      	cbz	r3, 80109ca <_ZN8touchgfx11Application15handleTickEventEv+0x42>
 80109b2:	6830      	ldr	r0, [r6, #0]
 80109b4:	b110      	cbz	r0, 80109bc <_ZN8touchgfx11Application15handleTickEventEv+0x34>
 80109b6:	6803      	ldr	r3, [r0, #0]
 80109b8:	691b      	ldr	r3, [r3, #16]
 80109ba:	4798      	blx	r3
 80109bc:	6828      	ldr	r0, [r5, #0]
 80109be:	6803      	ldr	r3, [r0, #0]
 80109c0:	68db      	ldr	r3, [r3, #12]
 80109c2:	4798      	blx	r3
 80109c4:	2301      	movs	r3, #1
 80109c6:	f884 3138 	strb.w	r3, [r4, #312]	@ 0x138
 80109ca:	3404      	adds	r4, #4
 80109cc:	4620      	mov	r0, r4
 80109ce:	f7ff ff5f 	bl	8010890 <_ZN8touchgfx11Application12TimerWidgets10tickActiveEv>
 80109d2:	4620      	mov	r0, r4
 80109d4:	f7ff ffa0 	bl	8010918 <_ZN8touchgfx11Application12TimerWidgets7compactEv>
 80109d8:	6830      	ldr	r0, [r6, #0]
 80109da:	b110      	cbz	r0, 80109e2 <_ZN8touchgfx11Application15handleTickEventEv+0x5a>
 80109dc:	6803      	ldr	r3, [r0, #0]
 80109de:	6a5b      	ldr	r3, [r3, #36]	@ 0x24
 80109e0:	e7dd      	b.n	801099e <_ZN8touchgfx11Application15handleTickEventEv+0x16>
 80109e2:	bd70      	pop	{r4, r5, r6, pc}
 80109e4:	20002dfc 	.word	0x20002dfc
 80109e8:	20002df8 	.word	0x20002df8

080109ec <_ZN8touchgfx6VectorINS_4RectELt8EEC1Ev>:
 80109ec:	4603      	mov	r3, r0
 80109ee:	f100 0140 	add.w	r1, r0, #64	@ 0x40
 80109f2:	2200      	movs	r2, #0
 80109f4:	801a      	strh	r2, [r3, #0]
 80109f6:	805a      	strh	r2, [r3, #2]
 80109f8:	809a      	strh	r2, [r3, #4]
 80109fa:	80da      	strh	r2, [r3, #6]
 80109fc:	3308      	adds	r3, #8
 80109fe:	428b      	cmp	r3, r1
 8010a00:	d1f8      	bne.n	80109f4 <_ZN8touchgfx6VectorINS_4RectELt8EEC1Ev+0x8>
 8010a02:	f8a0 2040 	strh.w	r2, [r0, #64]	@ 0x40
 8010a06:	4770      	bx	lr

08010a08 <_ZN8touchgfx11ApplicationC1Ev>:
 8010a08:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 8010a0a:	4606      	mov	r6, r0
 8010a0c:	4b1c      	ldr	r3, [pc, #112]	@ (8010a80 <_ZN8touchgfx11ApplicationC1Ev+0x78>)
 8010a0e:	f846 3b04 	str.w	r3, [r6], #4
 8010a12:	4604      	mov	r4, r0
 8010a14:	2500      	movs	r5, #0
 8010a16:	22a8      	movs	r2, #168	@ 0xa8
 8010a18:	2100      	movs	r1, #0
 8010a1a:	4630      	mov	r0, r6
 8010a1c:	f011 ff3f 	bl	802289e <memset>
 8010a20:	f8a4 5084 	strh.w	r5, [r4, #132]	@ 0x84
 8010a24:	f104 00ac 	add.w	r0, r4, #172	@ 0xac
 8010a28:	f7ff ffe0 	bl	80109ec <_ZN8touchgfx6VectorINS_4RectELt8EEC1Ev>
 8010a2c:	f104 00ee 	add.w	r0, r4, #238	@ 0xee
 8010a30:	f7ff ffdc 	bl	80109ec <_ZN8touchgfx6VectorINS_4RectELt8EEC1Ev>
 8010a34:	f8a4 5130 	strh.w	r5, [r4, #304]	@ 0x130
 8010a38:	f8a4 5132 	strh.w	r5, [r4, #306]	@ 0x132
 8010a3c:	f8a4 5134 	strh.w	r5, [r4, #308]	@ 0x134
 8010a40:	f8a4 5136 	strh.w	r5, [r4, #310]	@ 0x136
 8010a44:	f884 5138 	strb.w	r5, [r4, #312]	@ 0x138
 8010a48:	490e      	ldr	r1, [pc, #56]	@ (8010a84 <_ZN8touchgfx11ApplicationC1Ev+0x7c>)
 8010a4a:	480f      	ldr	r0, [pc, #60]	@ (8010a88 <_ZN8touchgfx11ApplicationC1Ev+0x80>)
 8010a4c:	4f0f      	ldr	r7, [pc, #60]	@ (8010a8c <_ZN8touchgfx11ApplicationC1Ev+0x84>)
 8010a4e:	f011 fb49 	bl	80220e4 <CRC_Lock>
 8010a52:	4b0f      	ldr	r3, [pc, #60]	@ (8010a90 <_ZN8touchgfx11ApplicationC1Ev+0x88>)
 8010a54:	b158      	cbz	r0, 8010a6e <_ZN8touchgfx11ApplicationC1Ev+0x66>
 8010a56:	801d      	strh	r5, [r3, #0]
 8010a58:	4a0e      	ldr	r2, [pc, #56]	@ (8010a94 <_ZN8touchgfx11ApplicationC1Ev+0x8c>)
 8010a5a:	2300      	movs	r3, #0
 8010a5c:	6013      	str	r3, [r2, #0]
 8010a5e:	4a0e      	ldr	r2, [pc, #56]	@ (8010a98 <_ZN8touchgfx11ApplicationC1Ev+0x90>)
 8010a60:	603b      	str	r3, [r7, #0]
 8010a62:	4630      	mov	r0, r6
 8010a64:	6013      	str	r3, [r2, #0]
 8010a66:	f7ff ff32 	bl	80108ce <_ZN8touchgfx11Application12TimerWidgets5clearEv>
 8010a6a:	4620      	mov	r0, r4
 8010a6c:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
 8010a6e:	f44f 6280 	mov.w	r2, #1024	@ 0x400
 8010a72:	2002      	movs	r0, #2
 8010a74:	801a      	strh	r2, [r3, #0]
 8010a76:	6038      	str	r0, [r7, #0]
 8010a78:	f001 fa52 	bl	8011f20 <_ZN8touchgfx6Screen4drawEv>
 8010a7c:	e7ec      	b.n	8010a58 <_ZN8touchgfx11ApplicationC1Ev+0x50>
 8010a7e:	bf00      	nop
 8010a80:	080253d0 	.word	0x080253d0
 8010a84:	b5e8b5cd 	.word	0xb5e8b5cd
 8010a88:	f407a5c2 	.word	0xf407a5c2
 8010a8c:	20002df8 	.word	0x20002df8
 8010a90:	20000024 	.word	0x20000024
 8010a94:	20002e08 	.word	0x20002e08
 8010a98:	20002dfc 	.word	0x20002dfc

08010a9c <_ZN8touchgfx6VectorINS_4RectELt8EE13quickRemoveAtEt>:
 8010a9c:	f8b0 3040 	ldrh.w	r3, [r0, #64]	@ 0x40
 8010aa0:	3b01      	subs	r3, #1
 8010aa2:	b29b      	uxth	r3, r3
 8010aa4:	428b      	cmp	r3, r1
 8010aa6:	b510      	push	{r4, lr}
 8010aa8:	f8a0 3040 	strh.w	r3, [r0, #64]	@ 0x40
 8010aac:	d908      	bls.n	8010ac0 <_ZN8touchgfx6VectorINS_4RectELt8EE13quickRemoveAtEt+0x24>
 8010aae:	eb00 03c3 	add.w	r3, r0, r3, lsl #3
 8010ab2:	eb00 04c1 	add.w	r4, r0, r1, lsl #3
 8010ab6:	681a      	ldr	r2, [r3, #0]
 8010ab8:	f840 2031 	str.w	r2, [r0, r1, lsl #3]
 8010abc:	685a      	ldr	r2, [r3, #4]
 8010abe:	6062      	str	r2, [r4, #4]
 8010ac0:	bd10      	pop	{r4, pc}
	...

08010ac4 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE>:
 8010ac4:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8010ac8:	4b8f      	ldr	r3, [pc, #572]	@ (8010d08 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x244>)
 8010aca:	b08f      	sub	sp, #60	@ 0x3c
 8010acc:	ac0a      	add	r4, sp, #40	@ 0x28
 8010ace:	e884 0006 	stmia.w	r4, {r1, r2}
 8010ad2:	f9b3 2000 	ldrsh.w	r2, [r3]
 8010ad6:	4b8d      	ldr	r3, [pc, #564]	@ (8010d0c <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x248>)
 8010ad8:	4683      	mov	fp, r0
 8010ada:	f9b3 1000 	ldrsh.w	r1, [r3]
 8010ade:	4620      	mov	r0, r4
 8010ae0:	f7ff fe14 	bl	801070c <_ZN8touchgfx4Rect10restrictToEss>
 8010ae4:	4620      	mov	r0, r4
 8010ae6:	f7fc fc92 	bl	800d40e <_ZNK8touchgfx4Rect7isEmptyEv>
 8010aea:	2800      	cmp	r0, #0
 8010aec:	d16a      	bne.n	8010bc4 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x100>
 8010aee:	9403      	str	r4, [sp, #12]
 8010af0:	f8bb 40ec 	ldrh.w	r4, [fp, #236]	@ 0xec
 8010af4:	f10b 03ac 	add.w	r3, fp, #172	@ 0xac
 8010af8:	eb0b 05c4 	add.w	r5, fp, r4, lsl #3
 8010afc:	35a4      	adds	r5, #164	@ 0xa4
 8010afe:	9301      	str	r3, [sp, #4]
 8010b00:	b15c      	cbz	r4, 8010b1a <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x56>
 8010b02:	4629      	mov	r1, r5
 8010b04:	9803      	ldr	r0, [sp, #12]
 8010b06:	f7ff fe51 	bl	80107ac <_ZNK8touchgfx4Rect8includesERKS0_>
 8010b0a:	3c01      	subs	r4, #1
 8010b0c:	b118      	cbz	r0, 8010b16 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x52>
 8010b0e:	b2a1      	uxth	r1, r4
 8010b10:	9801      	ldr	r0, [sp, #4]
 8010b12:	f7ff ffc3 	bl	8010a9c <_ZN8touchgfx6VectorINS_4RectELt8EE13quickRemoveAtEt>
 8010b16:	3d08      	subs	r5, #8
 8010b18:	e7f2      	b.n	8010b00 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x3c>
 8010b1a:	f8bb a0ec 	ldrh.w	sl, [fp, #236]	@ 0xec
 8010b1e:	f8cd a010 	str.w	sl, [sp, #16]
 8010b22:	f10a 33ff 	add.w	r3, sl, #4294967295
 8010b26:	9302      	str	r3, [sp, #8]
 8010b28:	ea4f 03ca 	mov.w	r3, sl, lsl #3
 8010b2c:	f103 04a4 	add.w	r4, r3, #164	@ 0xa4
 8010b30:	9306      	str	r3, [sp, #24]
 8010b32:	445c      	add	r4, fp
 8010b34:	2500      	movs	r5, #0
 8010b36:	4626      	mov	r6, r4
 8010b38:	f8cd a014 	str.w	sl, [sp, #20]
 8010b3c:	462f      	mov	r7, r5
 8010b3e:	9b05      	ldr	r3, [sp, #20]
 8010b40:	2b00      	cmp	r3, #0
 8010b42:	d073      	beq.n	8010c2c <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x168>
 8010b44:	9903      	ldr	r1, [sp, #12]
 8010b46:	4630      	mov	r0, r6
 8010b48:	f7ff fdbe 	bl	80106c8 <_ZNK8touchgfx4Rect9intersectERKS0_>
 8010b4c:	b350      	cbz	r0, 8010ba4 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0xe0>
 8010b4e:	f9bd e028 	ldrsh.w	lr, [sp, #40]	@ 0x28
 8010b52:	f9b6 c000 	ldrsh.w	ip, [r6]
 8010b56:	f9bd 802a 	ldrsh.w	r8, [sp, #42]	@ 0x2a
 8010b5a:	f9b6 9002 	ldrsh.w	r9, [r6, #2]
 8010b5e:	45e6      	cmp	lr, ip
 8010b60:	db33      	blt.n	8010bca <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x106>
 8010b62:	f8bd 202c 	ldrh.w	r2, [sp, #44]	@ 0x2c
 8010b66:	88b3      	ldrh	r3, [r6, #4]
 8010b68:	4472      	add	r2, lr
 8010b6a:	4463      	add	r3, ip
 8010b6c:	b212      	sxth	r2, r2
 8010b6e:	b21b      	sxth	r3, r3
 8010b70:	429a      	cmp	r2, r3
 8010b72:	dc2a      	bgt.n	8010bca <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x106>
 8010b74:	88f3      	ldrh	r3, [r6, #6]
 8010b76:	f8bd 102e 	ldrh.w	r1, [sp, #46]	@ 0x2e
 8010b7a:	fa1f f289 	uxth.w	r2, r9
 8010b7e:	4413      	add	r3, r2
 8010b80:	b29b      	uxth	r3, r3
 8010b82:	45c8      	cmp	r8, r9
 8010b84:	fa1f fc88 	uxth.w	ip, r8
 8010b88:	fa0f fe83 	sxth.w	lr, r3
 8010b8c:	db0f      	blt.n	8010bae <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0xea>
 8010b8e:	eba3 030c 	sub.w	r3, r3, ip
 8010b92:	1ac9      	subs	r1, r1, r3
 8010b94:	b209      	sxth	r1, r1
 8010b96:	2900      	cmp	r1, #0
 8010b98:	f8ad 102e 	strh.w	r1, [sp, #46]	@ 0x2e
 8010b9c:	dd12      	ble.n	8010bc4 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x100>
 8010b9e:	f8ad e02a 	strh.w	lr, [sp, #42]	@ 0x2a
 8010ba2:	4605      	mov	r5, r0
 8010ba4:	9b05      	ldr	r3, [sp, #20]
 8010ba6:	3b01      	subs	r3, #1
 8010ba8:	9305      	str	r3, [sp, #20]
 8010baa:	3e08      	subs	r6, #8
 8010bac:	e7c7      	b.n	8010b3e <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x7a>
 8010bae:	4461      	add	r1, ip
 8010bb0:	b209      	sxth	r1, r1
 8010bb2:	4571      	cmp	r1, lr
 8010bb4:	dc38      	bgt.n	8010c28 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x164>
 8010bb6:	eba2 020c 	sub.w	r2, r2, ip
 8010bba:	b212      	sxth	r2, r2
 8010bbc:	f8ad 202e 	strh.w	r2, [sp, #46]	@ 0x2e
 8010bc0:	2a00      	cmp	r2, #0
 8010bc2:	dcee      	bgt.n	8010ba2 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0xde>
 8010bc4:	b00f      	add	sp, #60	@ 0x3c
 8010bc6:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 8010bca:	45c8      	cmp	r8, r9
 8010bcc:	db2c      	blt.n	8010c28 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x164>
 8010bce:	88f3      	ldrh	r3, [r6, #6]
 8010bd0:	4499      	add	r9, r3
 8010bd2:	f8bd 302e 	ldrh.w	r3, [sp, #46]	@ 0x2e
 8010bd6:	4498      	add	r8, r3
 8010bd8:	fa0f f989 	sxth.w	r9, r9
 8010bdc:	fa0f f888 	sxth.w	r8, r8
 8010be0:	45c1      	cmp	r9, r8
 8010be2:	db21      	blt.n	8010c28 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x164>
 8010be4:	88b3      	ldrh	r3, [r6, #4]
 8010be6:	f8bd 102c 	ldrh.w	r1, [sp, #44]	@ 0x2c
 8010bea:	fa1f f28c 	uxth.w	r2, ip
 8010bee:	4413      	add	r3, r2
 8010bf0:	b29b      	uxth	r3, r3
 8010bf2:	45e6      	cmp	lr, ip
 8010bf4:	fa1f f88e 	uxth.w	r8, lr
 8010bf8:	fa0f f983 	sxth.w	r9, r3
 8010bfc:	db0a      	blt.n	8010c14 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x150>
 8010bfe:	eba3 0308 	sub.w	r3, r3, r8
 8010c02:	1ac9      	subs	r1, r1, r3
 8010c04:	b209      	sxth	r1, r1
 8010c06:	2900      	cmp	r1, #0
 8010c08:	f8ad 102c 	strh.w	r1, [sp, #44]	@ 0x2c
 8010c0c:	ddda      	ble.n	8010bc4 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x100>
 8010c0e:	f8ad 9028 	strh.w	r9, [sp, #40]	@ 0x28
 8010c12:	e7c6      	b.n	8010ba2 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0xde>
 8010c14:	4441      	add	r1, r8
 8010c16:	b209      	sxth	r1, r1
 8010c18:	4549      	cmp	r1, r9
 8010c1a:	dc05      	bgt.n	8010c28 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x164>
 8010c1c:	eba2 0208 	sub.w	r2, r2, r8
 8010c20:	b212      	sxth	r2, r2
 8010c22:	f8ad 202c 	strh.w	r2, [sp, #44]	@ 0x2c
 8010c26:	e7cb      	b.n	8010bc0 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0xfc>
 8010c28:	4607      	mov	r7, r0
 8010c2a:	e7bb      	b.n	8010ba4 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0xe0>
 8010c2c:	2d00      	cmp	r5, #0
 8010c2e:	d181      	bne.n	8010b34 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x70>
 8010c30:	2f00      	cmp	r7, #0
 8010c32:	f000 81dd 	beq.w	8010ff0 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x52c>
 8010c36:	f9bd 6028 	ldrsh.w	r6, [sp, #40]	@ 0x28
 8010c3a:	f9bd 702a 	ldrsh.w	r7, [sp, #42]	@ 0x2a
 8010c3e:	f8bd a02e 	ldrh.w	sl, [sp, #46]	@ 0x2e
 8010c42:	b2b3      	uxth	r3, r6
 8010c44:	9305      	str	r3, [sp, #20]
 8010c46:	9a05      	ldr	r2, [sp, #20]
 8010c48:	f8bd 302c 	ldrh.w	r3, [sp, #44]	@ 0x2c
 8010c4c:	4413      	add	r3, r2
 8010c4e:	b2ba      	uxth	r2, r7
 8010c50:	4492      	add	sl, r2
 8010c52:	b29b      	uxth	r3, r3
 8010c54:	fa1f fa8a 	uxth.w	sl, sl
 8010c58:	fa0f f883 	sxth.w	r8, r3
 8010c5c:	fa0f f98a 	sxth.w	r9, sl
 8010c60:	e9cd 2307 	strd	r2, r3, [sp, #28]
 8010c64:	9b04      	ldr	r3, [sp, #16]
 8010c66:	2b00      	cmp	r3, #0
 8010c68:	d052      	beq.n	8010d10 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x24c>
 8010c6a:	9903      	ldr	r1, [sp, #12]
 8010c6c:	4620      	mov	r0, r4
 8010c6e:	f7ff fd2b 	bl	80106c8 <_ZNK8touchgfx4Rect9intersectERKS0_>
 8010c72:	e9dd 2307 	ldrd	r2, r3, [sp, #28]
 8010c76:	b1c0      	cbz	r0, 8010caa <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x1e6>
 8010c78:	f9b4 e000 	ldrsh.w	lr, [r4]
 8010c7c:	f9b4 1002 	ldrsh.w	r1, [r4, #2]
 8010c80:	4576      	cmp	r6, lr
 8010c82:	dc22      	bgt.n	8010cca <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x206>
 8010c84:	f8b4 c004 	ldrh.w	ip, [r4, #4]
 8010c88:	44f4      	add	ip, lr
 8010c8a:	fa0f fc8c 	sxth.w	ip, ip
 8010c8e:	45e0      	cmp	r8, ip
 8010c90:	db1b      	blt.n	8010cca <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x206>
 8010c92:	428f      	cmp	r7, r1
 8010c94:	fa1f fc81 	uxth.w	ip, r1
 8010c98:	88e1      	ldrh	r1, [r4, #6]
 8010c9a:	dc0d      	bgt.n	8010cb8 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x1f4>
 8010c9c:	ebaa 0c0c 	sub.w	ip, sl, ip
 8010ca0:	eba1 010c 	sub.w	r1, r1, ip
 8010ca4:	f8a4 9002 	strh.w	r9, [r4, #2]
 8010ca8:	80e1      	strh	r1, [r4, #6]
 8010caa:	4628      	mov	r0, r5
 8010cac:	9904      	ldr	r1, [sp, #16]
 8010cae:	3901      	subs	r1, #1
 8010cb0:	9104      	str	r1, [sp, #16]
 8010cb2:	3c08      	subs	r4, #8
 8010cb4:	4605      	mov	r5, r0
 8010cb6:	e7d3      	b.n	8010c60 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x19c>
 8010cb8:	4461      	add	r1, ip
 8010cba:	b209      	sxth	r1, r1
 8010cbc:	4549      	cmp	r1, r9
 8010cbe:	dcf5      	bgt.n	8010cac <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x1e8>
 8010cc0:	eba2 0c0c 	sub.w	ip, r2, ip
 8010cc4:	f8a4 c006 	strh.w	ip, [r4, #6]
 8010cc8:	e7ef      	b.n	8010caa <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x1e6>
 8010cca:	428f      	cmp	r7, r1
 8010ccc:	dcee      	bgt.n	8010cac <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x1e8>
 8010cce:	f8b4 c006 	ldrh.w	ip, [r4, #6]
 8010cd2:	4461      	add	r1, ip
 8010cd4:	b209      	sxth	r1, r1
 8010cd6:	4589      	cmp	r9, r1
 8010cd8:	dbe8      	blt.n	8010cac <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x1e8>
 8010cda:	4576      	cmp	r6, lr
 8010cdc:	fa1f fc8e 	uxth.w	ip, lr
 8010ce0:	88a1      	ldrh	r1, [r4, #4]
 8010ce2:	dc07      	bgt.n	8010cf4 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x230>
 8010ce4:	eba3 0c0c 	sub.w	ip, r3, ip
 8010ce8:	eba1 010c 	sub.w	r1, r1, ip
 8010cec:	f8a4 8000 	strh.w	r8, [r4]
 8010cf0:	80a1      	strh	r1, [r4, #4]
 8010cf2:	e7da      	b.n	8010caa <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x1e6>
 8010cf4:	4461      	add	r1, ip
 8010cf6:	b209      	sxth	r1, r1
 8010cf8:	4588      	cmp	r8, r1
 8010cfa:	dbd7      	blt.n	8010cac <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x1e8>
 8010cfc:	9905      	ldr	r1, [sp, #20]
 8010cfe:	eba1 0c0c 	sub.w	ip, r1, ip
 8010d02:	f8a4 c004 	strh.w	ip, [r4, #4]
 8010d06:	e7d0      	b.n	8010caa <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x1e6>
 8010d08:	20002db2 	.word	0x20002db2
 8010d0c:	20002db0 	.word	0x20002db0
 8010d10:	2d00      	cmp	r5, #0
 8010d12:	f000 816d 	beq.w	8010ff0 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x52c>
 8010d16:	9b06      	ldr	r3, [sp, #24]
 8010d18:	445b      	add	r3, fp
 8010d1a:	461c      	mov	r4, r3
 8010d1c:	9b02      	ldr	r3, [sp, #8]
 8010d1e:	3301      	adds	r3, #1
 8010d20:	f000 8166 	beq.w	8010ff0 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x52c>
 8010d24:	f104 05a4 	add.w	r5, r4, #164	@ 0xa4
 8010d28:	4629      	mov	r1, r5
 8010d2a:	9803      	ldr	r0, [sp, #12]
 8010d2c:	f7ff fd3e 	bl	80107ac <_ZNK8touchgfx4Rect8includesERKS0_>
 8010d30:	b120      	cbz	r0, 8010d3c <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x278>
 8010d32:	f8bd 1008 	ldrh.w	r1, [sp, #8]
 8010d36:	9801      	ldr	r0, [sp, #4]
 8010d38:	f7ff feb0 	bl	8010a9c <_ZN8touchgfx6VectorINS_4RectELt8EE13quickRemoveAtEt>
 8010d3c:	9903      	ldr	r1, [sp, #12]
 8010d3e:	4628      	mov	r0, r5
 8010d40:	f7ff fcc2 	bl	80106c8 <_ZNK8touchgfx4Rect9intersectERKS0_>
 8010d44:	2800      	cmp	r0, #0
 8010d46:	f000 809c 	beq.w	8010e82 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x3be>
 8010d4a:	f9b4 90a4 	ldrsh.w	r9, [r4, #164]	@ 0xa4
 8010d4e:	f9b4 30a8 	ldrsh.w	r3, [r4, #168]	@ 0xa8
 8010d52:	f9bd 0028 	ldrsh.w	r0, [sp, #40]	@ 0x28
 8010d56:	9309      	str	r3, [sp, #36]	@ 0x24
 8010d58:	fa1f f189 	uxth.w	r1, r9
 8010d5c:	eb01 0c03 	add.w	ip, r1, r3
 8010d60:	fa1f fa8c 	uxth.w	sl, ip
 8010d64:	f8bd c02c 	ldrh.w	ip, [sp, #44]	@ 0x2c
 8010d68:	f9bd e02a 	ldrsh.w	lr, [sp, #42]	@ 0x2a
 8010d6c:	f9b4 20a6 	ldrsh.w	r2, [r4, #166]	@ 0xa6
 8010d70:	b283      	uxth	r3, r0
 8010d72:	eb03 050c 	add.w	r5, r3, ip
 8010d76:	b2ad      	uxth	r5, r5
 8010d78:	9505      	str	r5, [sp, #20]
 8010d7a:	f9bd 5014 	ldrsh.w	r5, [sp, #20]
 8010d7e:	9504      	str	r5, [sp, #16]
 8010d80:	4548      	cmp	r0, r9
 8010d82:	f8bb 50ec 	ldrh.w	r5, [fp, #236]	@ 0xec
 8010d86:	f340 8099 	ble.w	8010ebc <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x3f8>
 8010d8a:	1a5b      	subs	r3, r3, r1
 8010d8c:	b29b      	uxth	r3, r3
 8010d8e:	4596      	cmp	lr, r2
 8010d90:	fa0f f08a 	sxth.w	r0, sl
 8010d94:	b21e      	sxth	r6, r3
 8010d96:	dd2e      	ble.n	8010df6 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x332>
 8010d98:	9f02      	ldr	r7, [sp, #8]
 8010d9a:	f8bd 402e 	ldrh.w	r4, [sp, #46]	@ 0x2e
 8010d9e:	eb0b 08c7 	add.w	r8, fp, r7, lsl #3
 8010da2:	9f04      	ldr	r7, [sp, #16]
 8010da4:	1a3f      	subs	r7, r7, r0
 8010da6:	f8b8 00b2 	ldrh.w	r0, [r8, #178]	@ 0xb2
 8010daa:	fa1f fe8e 	uxth.w	lr, lr
 8010dae:	b292      	uxth	r2, r2
 8010db0:	ebae 0102 	sub.w	r1, lr, r2
 8010db4:	44a6      	add	lr, r4
 8010db6:	4402      	add	r2, r0
 8010db8:	b289      	uxth	r1, r1
 8010dba:	fa0f fe8e 	sxth.w	lr, lr
 8010dbe:	b212      	sxth	r2, r2
 8010dc0:	b20d      	sxth	r5, r1
 8010dc2:	ebae 0202 	sub.w	r2, lr, r2
 8010dc6:	436f      	muls	r7, r5
 8010dc8:	4372      	muls	r2, r6
 8010dca:	4297      	cmp	r7, r2
 8010dcc:	db09      	blt.n	8010de2 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x31e>
 8010dce:	f8b8 20ac 	ldrh.w	r2, [r8, #172]	@ 0xac
 8010dd2:	f8a8 50b2 	strh.w	r5, [r8, #178]	@ 0xb2
 8010dd6:	f8ad 2028 	strh.w	r2, [sp, #40]	@ 0x28
 8010dda:	449c      	add	ip, r3
 8010ddc:	f8ad c02c 	strh.w	ip, [sp, #44]	@ 0x2c
 8010de0:	e686      	b.n	8010af0 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x2c>
 8010de2:	4421      	add	r1, r4
 8010de4:	f8b8 30ae 	ldrh.w	r3, [r8, #174]	@ 0xae
 8010de8:	f8a8 60b0 	strh.w	r6, [r8, #176]	@ 0xb0
 8010dec:	f8ad 102e 	strh.w	r1, [sp, #46]	@ 0x2e
 8010df0:	f8ad 302a 	strh.w	r3, [sp, #42]	@ 0x2a
 8010df4:	e67c      	b.n	8010af0 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x2c>
 8010df6:	9f04      	ldr	r7, [sp, #16]
 8010df8:	42b8      	cmp	r0, r7
 8010dfa:	da27      	bge.n	8010e4c <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x388>
 8010dfc:	9902      	ldr	r1, [sp, #8]
 8010dfe:	f8bd 502e 	ldrh.w	r5, [sp, #46]	@ 0x2e
 8010e02:	eb0b 04c1 	add.w	r4, fp, r1, lsl #3
 8010e06:	eb05 010e 	add.w	r1, r5, lr
 8010e0a:	fa1f f881 	uxth.w	r8, r1
 8010e0e:	f8b4 10b2 	ldrh.w	r1, [r4, #178]	@ 0xb2
 8010e12:	4411      	add	r1, r2
 8010e14:	eba1 0108 	sub.w	r1, r1, r8
 8010e18:	b289      	uxth	r1, r1
 8010e1a:	fa0f f988 	sxth.w	r9, r8
 8010e1e:	eba2 020e 	sub.w	r2, r2, lr
 8010e22:	fa0f f881 	sxth.w	r8, r1
 8010e26:	1a3f      	subs	r7, r7, r0
 8010e28:	4372      	muls	r2, r6
 8010e2a:	fb08 f707 	mul.w	r7, r8, r7
 8010e2e:	42ba      	cmp	r2, r7
 8010e30:	dc06      	bgt.n	8010e40 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x37c>
 8010e32:	f8a4 90ae 	strh.w	r9, [r4, #174]	@ 0xae
 8010e36:	f8a4 80b2 	strh.w	r8, [r4, #178]	@ 0xb2
 8010e3a:	f8b4 20ac 	ldrh.w	r2, [r4, #172]	@ 0xac
 8010e3e:	e7ca      	b.n	8010dd6 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x312>
 8010e40:	f8a4 60b0 	strh.w	r6, [r4, #176]	@ 0xb0
 8010e44:	4429      	add	r1, r5
 8010e46:	f8ad 102e 	strh.w	r1, [sp, #46]	@ 0x2e
 8010e4a:	e651      	b.n	8010af0 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x2c>
 8010e4c:	9805      	ldr	r0, [sp, #20]
 8010e4e:	ebaa 0000 	sub.w	r0, sl, r0
 8010e52:	b280      	uxth	r0, r0
 8010e54:	2d06      	cmp	r5, #6
 8010e56:	fa0f fe80 	sxth.w	lr, r0
 8010e5a:	d817      	bhi.n	8010e8c <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x3c8>
 8010e5c:	9b04      	ldr	r3, [sp, #16]
 8010e5e:	f8a4 30a4 	strh.w	r3, [r4, #164]	@ 0xa4
 8010e62:	1c6b      	adds	r3, r5, #1
 8010e64:	f9b4 10aa 	ldrsh.w	r1, [r4, #170]	@ 0xaa
 8010e68:	f8a4 e0a8 	strh.w	lr, [r4, #168]	@ 0xa8
 8010e6c:	f8ab 30ec 	strh.w	r3, [fp, #236]	@ 0xec
 8010e70:	9b01      	ldr	r3, [sp, #4]
 8010e72:	9801      	ldr	r0, [sp, #4]
 8010e74:	eb03 03c5 	add.w	r3, r3, r5, lsl #3
 8010e78:	f820 9035 	strh.w	r9, [r0, r5, lsl #3]
 8010e7c:	805a      	strh	r2, [r3, #2]
 8010e7e:	809e      	strh	r6, [r3, #4]
 8010e80:	80d9      	strh	r1, [r3, #6]
 8010e82:	9b02      	ldr	r3, [sp, #8]
 8010e84:	3b01      	subs	r3, #1
 8010e86:	9302      	str	r3, [sp, #8]
 8010e88:	3c08      	subs	r4, #8
 8010e8a:	e747      	b.n	8010d1c <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x258>
 8010e8c:	9a02      	ldr	r2, [sp, #8]
 8010e8e:	45b6      	cmp	lr, r6
 8010e90:	ea4f 02c2 	mov.w	r2, r2, lsl #3
 8010e94:	db0d      	blt.n	8010eb2 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x3ee>
 8010e96:	449c      	add	ip, r3
 8010e98:	fa1f fc8c 	uxth.w	ip, ip
 8010e9c:	445a      	add	r2, fp
 8010e9e:	f8ad c02c 	strh.w	ip, [sp, #44]	@ 0x2c
 8010ea2:	448c      	add	ip, r1
 8010ea4:	f8ad 9028 	strh.w	r9, [sp, #40]	@ 0x28
 8010ea8:	f8a2 c0ac 	strh.w	ip, [r2, #172]	@ 0xac
 8010eac:	f8a2 e0b0 	strh.w	lr, [r2, #176]	@ 0xb0
 8010eb0:	e61e      	b.n	8010af0 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x2c>
 8010eb2:	445a      	add	r2, fp
 8010eb4:	4484      	add	ip, r0
 8010eb6:	f8a2 60b0 	strh.w	r6, [r2, #176]	@ 0xb0
 8010eba:	e78f      	b.n	8010ddc <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x318>
 8010ebc:	f8bd 602e 	ldrh.w	r6, [sp, #46]	@ 0x2e
 8010ec0:	fa1f f18e 	uxth.w	r1, lr
 8010ec4:	eb01 0806 	add.w	r8, r1, r6
 8010ec8:	b293      	uxth	r3, r2
 8010eca:	fa1f f888 	uxth.w	r8, r8
 8010ece:	9306      	str	r3, [sp, #24]
 8010ed0:	fa0f f388 	sxth.w	r3, r8
 8010ed4:	9307      	str	r3, [sp, #28]
 8010ed6:	9f06      	ldr	r7, [sp, #24]
 8010ed8:	f8b4 30aa 	ldrh.w	r3, [r4, #170]	@ 0xaa
 8010edc:	443b      	add	r3, r7
 8010ede:	b29b      	uxth	r3, r3
 8010ee0:	4596      	cmp	lr, r2
 8010ee2:	9308      	str	r3, [sp, #32]
 8010ee4:	da24      	bge.n	8010f30 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x46c>
 8010ee6:	9905      	ldr	r1, [sp, #20]
 8010ee8:	eba3 0308 	sub.w	r3, r3, r8
 8010eec:	ebaa 0401 	sub.w	r4, sl, r1
 8010ef0:	b2a4      	uxth	r4, r4
 8010ef2:	b29b      	uxth	r3, r3
 8010ef4:	b225      	sxth	r5, r4
 8010ef6:	b219      	sxth	r1, r3
 8010ef8:	eba2 020e 	sub.w	r2, r2, lr
 8010efc:	eba9 0000 	sub.w	r0, r9, r0
 8010f00:	436a      	muls	r2, r5
 8010f02:	4348      	muls	r0, r1
 8010f04:	4282      	cmp	r2, r0
 8010f06:	9a02      	ldr	r2, [sp, #8]
 8010f08:	ea4f 02c2 	mov.w	r2, r2, lsl #3
 8010f0c:	445a      	add	r2, fp
 8010f0e:	dc06      	bgt.n	8010f1e <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x45a>
 8010f10:	9b07      	ldr	r3, [sp, #28]
 8010f12:	f8a2 10b2 	strh.w	r1, [r2, #178]	@ 0xb2
 8010f16:	f8a2 30ae 	strh.w	r3, [r2, #174]	@ 0xae
 8010f1a:	44a4      	add	ip, r4
 8010f1c:	e75e      	b.n	8010ddc <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x318>
 8010f1e:	9904      	ldr	r1, [sp, #16]
 8010f20:	f8a2 50b0 	strh.w	r5, [r2, #176]	@ 0xb0
 8010f24:	f8a2 10ac 	strh.w	r1, [r2, #172]	@ 0xac
 8010f28:	4433      	add	r3, r6
 8010f2a:	f8ad 302e 	strh.w	r3, [sp, #46]	@ 0x2e
 8010f2e:	e5df      	b.n	8010af0 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x2c>
 8010f30:	9f06      	ldr	r7, [sp, #24]
 8010f32:	9b04      	ldr	r3, [sp, #16]
 8010f34:	1bc9      	subs	r1, r1, r7
 8010f36:	fa0f f78a 	sxth.w	r7, sl
 8010f3a:	b289      	uxth	r1, r1
 8010f3c:	429f      	cmp	r7, r3
 8010f3e:	fa0f fe81 	sxth.w	lr, r1
 8010f42:	dd23      	ble.n	8010f8c <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x4c8>
 8010f44:	9a05      	ldr	r2, [sp, #20]
 8010f46:	f9bd 3020 	ldrsh.w	r3, [sp, #32]
 8010f4a:	9d07      	ldr	r5, [sp, #28]
 8010f4c:	ebaa 0202 	sub.w	r2, sl, r2
 8010f50:	b292      	uxth	r2, r2
 8010f52:	eba5 0a03 	sub.w	sl, r5, r3
 8010f56:	b214      	sxth	r4, r2
 8010f58:	eba9 0000 	sub.w	r0, r9, r0
 8010f5c:	9b02      	ldr	r3, [sp, #8]
 8010f5e:	fb0e f000 	mul.w	r0, lr, r0
 8010f62:	fb04 fa0a 	mul.w	sl, r4, sl
 8010f66:	00db      	lsls	r3, r3, #3
 8010f68:	4550      	cmp	r0, sl
 8010f6a:	445b      	add	r3, fp
 8010f6c:	db03      	blt.n	8010f76 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x4b2>
 8010f6e:	f8a3 e0b2 	strh.w	lr, [r3, #178]	@ 0xb2
 8010f72:	4494      	add	ip, r2
 8010f74:	e732      	b.n	8010ddc <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x318>
 8010f76:	9a04      	ldr	r2, [sp, #16]
 8010f78:	f8a3 20ac 	strh.w	r2, [r3, #172]	@ 0xac
 8010f7c:	f8a3 40b0 	strh.w	r4, [r3, #176]	@ 0xb0
 8010f80:	f8b3 30ae 	ldrh.w	r3, [r3, #174]	@ 0xae
 8010f84:	f8ad 302a 	strh.w	r3, [sp, #42]	@ 0x2a
 8010f88:	4431      	add	r1, r6
 8010f8a:	e75c      	b.n	8010e46 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x382>
 8010f8c:	9b08      	ldr	r3, [sp, #32]
 8010f8e:	eba3 0308 	sub.w	r3, r3, r8
 8010f92:	b29b      	uxth	r3, r3
 8010f94:	2d06      	cmp	r5, #6
 8010f96:	b218      	sxth	r0, r3
 8010f98:	d813      	bhi.n	8010fc2 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x4fe>
 8010f9a:	9b07      	ldr	r3, [sp, #28]
 8010f9c:	f8a4 30a6 	strh.w	r3, [r4, #166]	@ 0xa6
 8010fa0:	1c6b      	adds	r3, r5, #1
 8010fa2:	f8a4 00aa 	strh.w	r0, [r4, #170]	@ 0xaa
 8010fa6:	f8ab 30ec 	strh.w	r3, [fp, #236]	@ 0xec
 8010faa:	9b01      	ldr	r3, [sp, #4]
 8010fac:	9901      	ldr	r1, [sp, #4]
 8010fae:	eb03 03c5 	add.w	r3, r3, r5, lsl #3
 8010fb2:	f821 9035 	strh.w	r9, [r1, r5, lsl #3]
 8010fb6:	805a      	strh	r2, [r3, #2]
 8010fb8:	9a09      	ldr	r2, [sp, #36]	@ 0x24
 8010fba:	809a      	strh	r2, [r3, #4]
 8010fbc:	f8a3 e006 	strh.w	lr, [r3, #6]
 8010fc0:	e75f      	b.n	8010e82 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x3be>
 8010fc2:	9c02      	ldr	r4, [sp, #8]
 8010fc4:	4570      	cmp	r0, lr
 8010fc6:	ea4f 04c4 	mov.w	r4, r4, lsl #3
 8010fca:	db0d      	blt.n	8010fe8 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x524>
 8010fcc:	4431      	add	r1, r6
 8010fce:	9b06      	ldr	r3, [sp, #24]
 8010fd0:	f8ad 202a 	strh.w	r2, [sp, #42]	@ 0x2a
 8010fd4:	b289      	uxth	r1, r1
 8010fd6:	445c      	add	r4, fp
 8010fd8:	f8ad 102e 	strh.w	r1, [sp, #46]	@ 0x2e
 8010fdc:	4419      	add	r1, r3
 8010fde:	f8a4 10ae 	strh.w	r1, [r4, #174]	@ 0xae
 8010fe2:	f8a4 00b2 	strh.w	r0, [r4, #178]	@ 0xb2
 8010fe6:	e583      	b.n	8010af0 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x2c>
 8010fe8:	445c      	add	r4, fp
 8010fea:	f8a4 e0b2 	strh.w	lr, [r4, #178]	@ 0xb2
 8010fee:	e79b      	b.n	8010f28 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x464>
 8010ff0:	f8bb 40ec 	ldrh.w	r4, [fp, #236]	@ 0xec
 8010ff4:	1e65      	subs	r5, r4, #1
 8010ff6:	b2ad      	uxth	r5, r5
 8010ff8:	eb0b 04c4 	add.w	r4, fp, r4, lsl #3
 8010ffc:	f64f 76ff 	movw	r6, #65535	@ 0xffff
 8011000:	42b5      	cmp	r5, r6
 8011002:	d044      	beq.n	801108e <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x5ca>
 8011004:	f9bd 202a 	ldrsh.w	r2, [sp, #42]	@ 0x2a
 8011008:	f9b4 00a6 	ldrsh.w	r0, [r4, #166]	@ 0xa6
 801100c:	f9bd 1028 	ldrsh.w	r1, [sp, #40]	@ 0x28
 8011010:	f9b4 70a4 	ldrsh.w	r7, [r4, #164]	@ 0xa4
 8011014:	4282      	cmp	r2, r0
 8011016:	d11f      	bne.n	8011058 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x594>
 8011018:	f9bd c02e 	ldrsh.w	ip, [sp, #46]	@ 0x2e
 801101c:	f9b4 30aa 	ldrsh.w	r3, [r4, #170]	@ 0xaa
 8011020:	459c      	cmp	ip, r3
 8011022:	d119      	bne.n	8011058 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x594>
 8011024:	f8b4 30a8 	ldrh.w	r3, [r4, #168]	@ 0xa8
 8011028:	f8bd 202c 	ldrh.w	r2, [sp, #44]	@ 0x2c
 801102c:	19d8      	adds	r0, r3, r7
 801102e:	b200      	sxth	r0, r0
 8011030:	4288      	cmp	r0, r1
 8011032:	d109      	bne.n	8011048 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x584>
 8011034:	f8ad 7028 	strh.w	r7, [sp, #40]	@ 0x28
 8011038:	4413      	add	r3, r2
 801103a:	f8ad 302c 	strh.w	r3, [sp, #44]	@ 0x2c
 801103e:	4629      	mov	r1, r5
 8011040:	9801      	ldr	r0, [sp, #4]
 8011042:	f7ff fd2b 	bl	8010a9c <_ZN8touchgfx6VectorINS_4RectELt8EE13quickRemoveAtEt>
 8011046:	e003      	b.n	8011050 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x58c>
 8011048:	4411      	add	r1, r2
 801104a:	b209      	sxth	r1, r1
 801104c:	42b9      	cmp	r1, r7
 801104e:	d0f3      	beq.n	8011038 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x574>
 8011050:	3d01      	subs	r5, #1
 8011052:	b2ad      	uxth	r5, r5
 8011054:	3c08      	subs	r4, #8
 8011056:	e7d3      	b.n	8011000 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x53c>
 8011058:	42b9      	cmp	r1, r7
 801105a:	d1f9      	bne.n	8011050 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x58c>
 801105c:	f9bd 102c 	ldrsh.w	r1, [sp, #44]	@ 0x2c
 8011060:	f9b4 30a8 	ldrsh.w	r3, [r4, #168]	@ 0xa8
 8011064:	4299      	cmp	r1, r3
 8011066:	d1f3      	bne.n	8011050 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x58c>
 8011068:	f8b4 30aa 	ldrh.w	r3, [r4, #170]	@ 0xaa
 801106c:	f8bd 102e 	ldrh.w	r1, [sp, #46]	@ 0x2e
 8011070:	181f      	adds	r7, r3, r0
 8011072:	b23f      	sxth	r7, r7
 8011074:	42ba      	cmp	r2, r7
 8011076:	d105      	bne.n	8011084 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x5c0>
 8011078:	f8ad 002a 	strh.w	r0, [sp, #42]	@ 0x2a
 801107c:	440b      	add	r3, r1
 801107e:	f8ad 302e 	strh.w	r3, [sp, #46]	@ 0x2e
 8011082:	e7dc      	b.n	801103e <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x57a>
 8011084:	440a      	add	r2, r1
 8011086:	b212      	sxth	r2, r2
 8011088:	4290      	cmp	r0, r2
 801108a:	d1e1      	bne.n	8011050 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x58c>
 801108c:	e7f6      	b.n	801107c <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x5b8>
 801108e:	f8bb 60ec 	ldrh.w	r6, [fp, #236]	@ 0xec
 8011092:	2e07      	cmp	r6, #7
 8011094:	ea4f 04c6 	mov.w	r4, r6, lsl #3
 8011098:	d812      	bhi.n	80110c0 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x5fc>
 801109a:	1c75      	adds	r5, r6, #1
 801109c:	f8ab 50ec 	strh.w	r5, [fp, #236]	@ 0xec
 80110a0:	9d01      	ldr	r5, [sp, #4]
 80110a2:	f9bd 0028 	ldrsh.w	r0, [sp, #40]	@ 0x28
 80110a6:	f9bd 102a 	ldrsh.w	r1, [sp, #42]	@ 0x2a
 80110aa:	f9bd 202c 	ldrsh.w	r2, [sp, #44]	@ 0x2c
 80110ae:	f9bd 302e 	ldrsh.w	r3, [sp, #46]	@ 0x2e
 80110b2:	f825 0036 	strh.w	r0, [r5, r6, lsl #3]
 80110b6:	442c      	add	r4, r5
 80110b8:	8061      	strh	r1, [r4, #2]
 80110ba:	80a2      	strh	r2, [r4, #4]
 80110bc:	80e3      	strh	r3, [r4, #6]
 80110be:	e581      	b.n	8010bc4 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x100>
 80110c0:	f10b 03ac 	add.w	r3, fp, #172	@ 0xac
 80110c4:	3e01      	subs	r6, #1
 80110c6:	445c      	add	r4, fp
 80110c8:	f06f 4a00 	mvn.w	sl, #2147483648	@ 0x80000000
 80110cc:	f04f 37ff 	mov.w	r7, #4294967295
 80110d0:	2500      	movs	r5, #0
 80110d2:	9305      	str	r3, [sp, #20]
 80110d4:	f9b4 30a8 	ldrsh.w	r3, [r4, #168]	@ 0xa8
 80110d8:	9302      	str	r3, [sp, #8]
 80110da:	1e72      	subs	r2, r6, #1
 80110dc:	f9b4 30aa 	ldrsh.w	r3, [r4, #170]	@ 0xaa
 80110e0:	9304      	str	r3, [sp, #16]
 80110e2:	4691      	mov	r9, r2
 80110e4:	f104 03a4 	add.w	r3, r4, #164	@ 0xa4
 80110e8:	f1b9 3fff 	cmp.w	r9, #4294967295
 80110ec:	bf14      	ite	ne
 80110ee:	9905      	ldrne	r1, [sp, #20]
 80110f0:	f8dd e00c 	ldreq.w	lr, [sp, #12]
 80110f4:	6818      	ldr	r0, [r3, #0]
 80110f6:	9207      	str	r2, [sp, #28]
 80110f8:	bf18      	it	ne
 80110fa:	eb01 0ec9 	addne.w	lr, r1, r9, lsl #3
 80110fe:	f10d 0c30 	add.w	ip, sp, #48	@ 0x30
 8011102:	f8be 1006 	ldrh.w	r1, [lr, #6]
 8011106:	f8be 8004 	ldrh.w	r8, [lr, #4]
 801110a:	9306      	str	r3, [sp, #24]
 801110c:	fb18 f801 	smulbb	r8, r8, r1
 8011110:	6859      	ldr	r1, [r3, #4]
 8011112:	e8ac 0003 	stmia.w	ip!, {r0, r1}
 8011116:	4671      	mov	r1, lr
 8011118:	a80c      	add	r0, sp, #48	@ 0x30
 801111a:	f7ff fb6d 	bl	80107f8 <_ZN8touchgfx4Rect11expandToFitERKS0_>
 801111e:	f8bd 1036 	ldrh.w	r1, [sp, #54]	@ 0x36
 8011122:	f8bd 0034 	ldrh.w	r0, [sp, #52]	@ 0x34
 8011126:	9b04      	ldr	r3, [sp, #16]
 8011128:	9a02      	ldr	r2, [sp, #8]
 801112a:	fb10 f001 	smulbb	r0, r0, r1
 801112e:	fb02 8803 	mla	r8, r2, r3, r8
 8011132:	eba0 0108 	sub.w	r1, r0, r8
 8011136:	f04f 0c08 	mov.w	ip, #8
 801113a:	fb90 f0fc 	sdiv	r0, r0, ip
 801113e:	4288      	cmp	r0, r1
 8011140:	dc20      	bgt.n	8011184 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x6c0>
 8011142:	4551      	cmp	r1, sl
 8011144:	e9dd 3206 	ldrd	r3, r2, [sp, #24]
 8011148:	da03      	bge.n	8011152 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x68e>
 801114a:	b1d9      	cbz	r1, 8011184 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x6c0>
 801114c:	468a      	mov	sl, r1
 801114e:	464f      	mov	r7, r9
 8011150:	4635      	mov	r5, r6
 8011152:	f109 39ff 	add.w	r9, r9, #4294967295
 8011156:	f119 0f02 	cmn.w	r9, #2
 801115a:	d1c5      	bne.n	80110e8 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x624>
 801115c:	4616      	mov	r6, r2
 801115e:	3201      	adds	r2, #1
 8011160:	f1a4 0408 	sub.w	r4, r4, #8
 8011164:	d1b6      	bne.n	80110d4 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x610>
 8011166:	9b01      	ldr	r3, [sp, #4]
 8011168:	b2ac      	uxth	r4, r5
 801116a:	00ed      	lsls	r5, r5, #3
 801116c:	1958      	adds	r0, r3, r5
 801116e:	1c7b      	adds	r3, r7, #1
 8011170:	d10b      	bne.n	801118a <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x6c6>
 8011172:	4601      	mov	r1, r0
 8011174:	9803      	ldr	r0, [sp, #12]
 8011176:	f7ff fb3f 	bl	80107f8 <_ZN8touchgfx4Rect11expandToFitERKS0_>
 801117a:	4621      	mov	r1, r4
 801117c:	9801      	ldr	r0, [sp, #4]
 801117e:	f7ff fc8d 	bl	8010a9c <_ZN8touchgfx6VectorINS_4RectELt8EE13quickRemoveAtEt>
 8011182:	e4b5      	b.n	8010af0 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x2c>
 8011184:	464f      	mov	r7, r9
 8011186:	4635      	mov	r5, r6
 8011188:	e7ed      	b.n	8011166 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x6a2>
 801118a:	9b01      	ldr	r3, [sp, #4]
 801118c:	00ff      	lsls	r7, r7, #3
 801118e:	19d9      	adds	r1, r3, r7
 8011190:	f7ff fb32 	bl	80107f8 <_ZN8touchgfx4Rect11expandToFitERKS0_>
 8011194:	9b03      	ldr	r3, [sp, #12]
 8011196:	cb03      	ldmia	r3!, {r0, r1}
 8011198:	445f      	add	r7, fp
 801119a:	445d      	add	r5, fp
 801119c:	f8c7 00ac 	str.w	r0, [r7, #172]	@ 0xac
 80111a0:	f8c7 10b0 	str.w	r1, [r7, #176]	@ 0xb0
 80111a4:	f855 0fac 	ldr.w	r0, [r5, #172]!
 80111a8:	9b03      	ldr	r3, [sp, #12]
 80111aa:	6869      	ldr	r1, [r5, #4]
 80111ac:	c303      	stmia	r3!, {r0, r1}
 80111ae:	e7e4      	b.n	801117a <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x6b6>

080111b0 <_ZN8touchgfx11Application15drawCachedAreasEv>:
 80111b0:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 80111b4:	f500 7698 	add.w	r6, r0, #304	@ 0x130
 80111b8:	b09b      	sub	sp, #108	@ 0x6c
 80111ba:	4604      	mov	r4, r0
 80111bc:	4630      	mov	r0, r6
 80111be:	f7fc f926 	bl	800d40e <_ZNK8touchgfx4Rect7isEmptyEv>
 80111c2:	4605      	mov	r5, r0
 80111c4:	b948      	cbnz	r0, 80111da <_ZN8touchgfx11Application15drawCachedAreasEv+0x2a>
 80111c6:	6823      	ldr	r3, [r4, #0]
 80111c8:	e896 0006 	ldmia.w	r6, {r1, r2}
 80111cc:	6c1b      	ldr	r3, [r3, #64]	@ 0x40
 80111ce:	4620      	mov	r0, r4
 80111d0:	4798      	blx	r3
 80111d2:	f8c4 5130 	str.w	r5, [r4, #304]	@ 0x130
 80111d6:	f8c4 5134 	str.w	r5, [r4, #308]	@ 0x134
 80111da:	4bc6      	ldr	r3, [pc, #792]	@ (80114f4 <_ZN8touchgfx11Application15drawCachedAreasEv+0x344>)
 80111dc:	681b      	ldr	r3, [r3, #0]
 80111de:	2b00      	cmp	r3, #0
 80111e0:	d03f      	beq.n	8011262 <_ZN8touchgfx11Application15drawCachedAreasEv+0xb2>
 80111e2:	4dc5      	ldr	r5, [pc, #788]	@ (80114f8 <_ZN8touchgfx11Application15drawCachedAreasEv+0x348>)
 80111e4:	4628      	mov	r0, r5
 80111e6:	f7fc f912 	bl	800d40e <_ZNK8touchgfx4Rect7isEmptyEv>
 80111ea:	4606      	mov	r6, r0
 80111ec:	2800      	cmp	r0, #0
 80111ee:	d138      	bne.n	8011262 <_ZN8touchgfx11Application15drawCachedAreasEv+0xb2>
 80111f0:	4628      	mov	r0, r5
 80111f2:	f7ff f99f 	bl	8010534 <_ZN8touchgfx21DisplayTransformation29transformFrameBufferToDisplayERNS_4RectE>
 80111f6:	6823      	ldr	r3, [r4, #0]
 80111f8:	6829      	ldr	r1, [r5, #0]
 80111fa:	6c1b      	ldr	r3, [r3, #64]	@ 0x40
 80111fc:	686a      	ldr	r2, [r5, #4]
 80111fe:	4620      	mov	r0, r4
 8011200:	4798      	blx	r3
 8011202:	802e      	strh	r6, [r5, #0]
 8011204:	806e      	strh	r6, [r5, #2]
 8011206:	80ae      	strh	r6, [r5, #4]
 8011208:	80ee      	strh	r6, [r5, #6]
 801120a:	f10d 0824 	add.w	r8, sp, #36	@ 0x24
 801120e:	4dbb      	ldr	r5, [pc, #748]	@ (80114fc <_ZN8touchgfx11Application15drawCachedAreasEv+0x34c>)
 8011210:	4640      	mov	r0, r8
 8011212:	f7ff fbeb 	bl	80109ec <_ZN8touchgfx6VectorINS_4RectELt8EEC1Ev>
 8011216:	882e      	ldrh	r6, [r5, #0]
 8011218:	f8b4 70ec 	ldrh.w	r7, [r4, #236]	@ 0xec
 801121c:	4633      	mov	r3, r6
 801121e:	f104 00ac 	add.w	r0, r4, #172	@ 0xac
 8011222:	42bb      	cmp	r3, r7
 8011224:	d224      	bcs.n	8011270 <_ZN8touchgfx11Application15drawCachedAreasEv+0xc0>
 8011226:	f8bd 1064 	ldrh.w	r1, [sp, #100]	@ 0x64
 801122a:	2907      	cmp	r1, #7
 801122c:	d816      	bhi.n	801125c <_ZN8touchgfx11Application15drawCachedAreasEv+0xac>
 801122e:	eb00 02c3 	add.w	r2, r0, r3, lsl #3
 8011232:	f930 9033 	ldrsh.w	r9, [r0, r3, lsl #3]
 8011236:	f9b2 a002 	ldrsh.w	sl, [r2, #2]
 801123a:	f9b2 e004 	ldrsh.w	lr, [r2, #4]
 801123e:	f9b2 c006 	ldrsh.w	ip, [r2, #6]
 8011242:	1c4a      	adds	r2, r1, #1
 8011244:	f8ad 2064 	strh.w	r2, [sp, #100]	@ 0x64
 8011248:	eb08 02c1 	add.w	r2, r8, r1, lsl #3
 801124c:	f828 9031 	strh.w	r9, [r8, r1, lsl #3]
 8011250:	f8a2 a002 	strh.w	sl, [r2, #2]
 8011254:	f8a2 e004 	strh.w	lr, [r2, #4]
 8011258:	f8a2 c006 	strh.w	ip, [r2, #6]
 801125c:	3301      	adds	r3, #1
 801125e:	b29b      	uxth	r3, r3
 8011260:	e7df      	b.n	8011222 <_ZN8touchgfx11Application15drawCachedAreasEv+0x72>
 8011262:	f8b4 30ec 	ldrh.w	r3, [r4, #236]	@ 0xec
 8011266:	2b00      	cmp	r3, #0
 8011268:	d1cf      	bne.n	801120a <_ZN8touchgfx11Application15drawCachedAreasEv+0x5a>
 801126a:	b01b      	add	sp, #108	@ 0x6c
 801126c:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 8011270:	f8b4 312e 	ldrh.w	r3, [r4, #302]	@ 0x12e
 8011274:	42b3      	cmp	r3, r6
 8011276:	d90c      	bls.n	8011292 <_ZN8touchgfx11Application15drawCachedAreasEv+0xe2>
 8011278:	eb04 03c6 	add.w	r3, r4, r6, lsl #3
 801127c:	6822      	ldr	r2, [r4, #0]
 801127e:	f8d3 10ee 	ldr.w	r1, [r3, #238]	@ 0xee
 8011282:	6c17      	ldr	r7, [r2, #64]	@ 0x40
 8011284:	f8d3 20f2 	ldr.w	r2, [r3, #242]	@ 0xf2
 8011288:	4620      	mov	r0, r4
 801128a:	3601      	adds	r6, #1
 801128c:	47b8      	blx	r7
 801128e:	b2b6      	uxth	r6, r6
 8011290:	e7ee      	b.n	8011270 <_ZN8touchgfx11Application15drawCachedAreasEv+0xc0>
 8011292:	4a9b      	ldr	r2, [pc, #620]	@ (8011500 <_ZN8touchgfx11Application15drawCachedAreasEv+0x350>)
 8011294:	6813      	ldr	r3, [r2, #0]
 8011296:	f893 3048 	ldrb.w	r3, [r3, #72]	@ 0x48
 801129a:	2b01      	cmp	r3, #1
 801129c:	4691      	mov	r9, r2
 801129e:	f040 80e2 	bne.w	8011466 <_ZN8touchgfx11Application15drawCachedAreasEv+0x2b6>
 80112a2:	8829      	ldrh	r1, [r5, #0]
 80112a4:	f8b4 70ec 	ldrh.w	r7, [r4, #236]	@ 0xec
 80112a8:	eb04 03c1 	add.w	r3, r4, r1, lsl #3
 80112ac:	33ae      	adds	r3, #174	@ 0xae
 80112ae:	2600      	movs	r6, #0
 80112b0:	428f      	cmp	r7, r1
 80112b2:	f103 0308 	add.w	r3, r3, #8
 80112b6:	dd0a      	ble.n	80112ce <_ZN8touchgfx11Application15drawCachedAreasEv+0x11e>
 80112b8:	f833 2c04 	ldrh.w	r2, [r3, #-4]
 80112bc:	f833 0c08 	ldrh.w	r0, [r3, #-8]
 80112c0:	4402      	add	r2, r0
 80112c2:	b212      	sxth	r2, r2
 80112c4:	4296      	cmp	r6, r2
 80112c6:	bfb8      	it	lt
 80112c8:	4616      	movlt	r6, r2
 80112ca:	3101      	adds	r1, #1
 80112cc:	e7f0      	b.n	80112b0 <_ZN8touchgfx11Application15drawCachedAreasEv+0x100>
 80112ce:	4b8d      	ldr	r3, [pc, #564]	@ (8011504 <_ZN8touchgfx11Application15drawCachedAreasEv+0x354>)
 80112d0:	f8df 922c 	ldr.w	r9, [pc, #556]	@ 8011500 <_ZN8touchgfx11Application15drawCachedAreasEv+0x350>
 80112d4:	881b      	ldrh	r3, [r3, #0]
 80112d6:	2b0f      	cmp	r3, #15
 80112d8:	bf88      	it	hi
 80112da:	ea4f 0bd3 	movhi.w	fp, r3, lsr #3
 80112de:	f04f 0300 	mov.w	r3, #0
 80112e2:	e9cd 3305 	strd	r3, r3, [sp, #20]
 80112e6:	bf98      	it	ls
 80112e8:	f04f 0b01 	movls.w	fp, #1
 80112ec:	f8bd 7016 	ldrh.w	r7, [sp, #22]
 80112f0:	f8bd 001a 	ldrh.w	r0, [sp, #26]
 80112f4:	4b82      	ldr	r3, [pc, #520]	@ (8011500 <_ZN8touchgfx11Application15drawCachedAreasEv+0x350>)
 80112f6:	4438      	add	r0, r7
 80112f8:	b207      	sxth	r7, r0
 80112fa:	6818      	ldr	r0, [r3, #0]
 80112fc:	42b7      	cmp	r7, r6
 80112fe:	6803      	ldr	r3, [r0, #0]
 8011300:	f280 8083 	bge.w	801140a <_ZN8touchgfx11Application15drawCachedAreasEv+0x25a>
 8011304:	f8d3 309c 	ldr.w	r3, [r3, #156]	@ 0x9c
 8011308:	4798      	blx	r3
 801130a:	eb07 030b 	add.w	r3, r7, fp
 801130e:	4298      	cmp	r0, r3
 8011310:	da07      	bge.n	8011322 <_ZN8touchgfx11Application15drawCachedAreasEv+0x172>
 8011312:	42b0      	cmp	r0, r6
 8011314:	da05      	bge.n	8011322 <_ZN8touchgfx11Application15drawCachedAreasEv+0x172>
 8011316:	4287      	cmp	r7, r0
 8011318:	dd6c      	ble.n	80113f4 <_ZN8touchgfx11Application15drawCachedAreasEv+0x244>
 801131a:	2f00      	cmp	r7, #0
 801131c:	dd6a      	ble.n	80113f4 <_ZN8touchgfx11Application15drawCachedAreasEv+0x244>
 801131e:	4630      	mov	r0, r6
 8011320:	e004      	b.n	801132c <_ZN8touchgfx11Application15drawCachedAreasEv+0x17c>
 8011322:	4287      	cmp	r7, r0
 8011324:	dcfb      	bgt.n	801131e <_ZN8touchgfx11Application15drawCachedAreasEv+0x16e>
 8011326:	42b0      	cmp	r0, r6
 8011328:	bfa8      	it	ge
 801132a:	4630      	movge	r0, r6
 801132c:	4b76      	ldr	r3, [pc, #472]	@ (8011508 <_ZN8touchgfx11Application15drawCachedAreasEv+0x358>)
 801132e:	f8ad 7016 	strh.w	r7, [sp, #22]
 8011332:	1bc0      	subs	r0, r0, r7
 8011334:	f9b3 3000 	ldrsh.w	r3, [r3]
 8011338:	882f      	ldrh	r7, [r5, #0]
 801133a:	f8ad 3018 	strh.w	r3, [sp, #24]
 801133e:	2200      	movs	r2, #0
 8011340:	f8ad 2014 	strh.w	r2, [sp, #20]
 8011344:	f8ad 001a 	strh.w	r0, [sp, #26]
 8011348:	f8b4 30ec 	ldrh.w	r3, [r4, #236]	@ 0xec
 801134c:	42bb      	cmp	r3, r7
 801134e:	d9cd      	bls.n	80112ec <_ZN8touchgfx11Application15drawCachedAreasEv+0x13c>
 8011350:	eb04 02c7 	add.w	r2, r4, r7, lsl #3
 8011354:	ab07      	add	r3, sp, #28
 8011356:	f852 0fac 	ldr.w	r0, [r2, #172]!
 801135a:	6851      	ldr	r1, [r2, #4]
 801135c:	c303      	stmia	r3!, {r0, r1}
 801135e:	a905      	add	r1, sp, #20
 8011360:	a807      	add	r0, sp, #28
 8011362:	f7ff f9b1 	bl	80106c8 <_ZNK8touchgfx4Rect9intersectERKS0_>
 8011366:	2800      	cmp	r0, #0
 8011368:	d04c      	beq.n	8011404 <_ZN8touchgfx11Application15drawCachedAreasEv+0x254>
 801136a:	f9bd 001c 	ldrsh.w	r0, [sp, #28]
 801136e:	f9bd 2014 	ldrsh.w	r2, [sp, #20]
 8011372:	f8bd a020 	ldrh.w	sl, [sp, #32]
 8011376:	f9bd 101e 	ldrsh.w	r1, [sp, #30]
 801137a:	f9bd 3016 	ldrsh.w	r3, [sp, #22]
 801137e:	9302      	str	r3, [sp, #8]
 8011380:	4686      	mov	lr, r0
 8011382:	4290      	cmp	r0, r2
 8011384:	4450      	add	r0, sl
 8011386:	f8bd a018 	ldrh.w	sl, [sp, #24]
 801138a:	bfb8      	it	lt
 801138c:	4696      	movlt	lr, r2
 801138e:	4452      	add	r2, sl
 8011390:	4299      	cmp	r1, r3
 8011392:	b280      	uxth	r0, r0
 8011394:	b292      	uxth	r2, r2
 8011396:	468c      	mov	ip, r1
 8011398:	fa0f fa82 	sxth.w	sl, r2
 801139c:	bfb8      	it	lt
 801139e:	469c      	movlt	ip, r3
 80113a0:	b203      	sxth	r3, r0
 80113a2:	4553      	cmp	r3, sl
 80113a4:	bfb8      	it	lt
 80113a6:	4602      	movlt	r2, r0
 80113a8:	eba2 020e 	sub.w	r2, r2, lr
 80113ac:	f8ad 2020 	strh.w	r2, [sp, #32]
 80113b0:	f8bd 2022 	ldrh.w	r2, [sp, #34]	@ 0x22
 80113b4:	9b02      	ldr	r3, [sp, #8]
 80113b6:	f8ad e01c 	strh.w	lr, [sp, #28]
 80113ba:	4411      	add	r1, r2
 80113bc:	f8bd 201a 	ldrh.w	r2, [sp, #26]
 80113c0:	f8ad c01e 	strh.w	ip, [sp, #30]
 80113c4:	4413      	add	r3, r2
 80113c6:	b289      	uxth	r1, r1
 80113c8:	b29b      	uxth	r3, r3
 80113ca:	b208      	sxth	r0, r1
 80113cc:	b21a      	sxth	r2, r3
 80113ce:	4290      	cmp	r0, r2
 80113d0:	bfb8      	it	lt
 80113d2:	460b      	movlt	r3, r1
 80113d4:	eba3 030c 	sub.w	r3, r3, ip
 80113d8:	f8ad 3022 	strh.w	r3, [sp, #34]	@ 0x22
 80113dc:	a807      	add	r0, sp, #28
 80113de:	f7fc f816 	bl	800d40e <_ZNK8touchgfx4Rect7isEmptyEv>
 80113e2:	b920      	cbnz	r0, 80113ee <_ZN8touchgfx11Application15drawCachedAreasEv+0x23e>
 80113e4:	6823      	ldr	r3, [r4, #0]
 80113e6:	a907      	add	r1, sp, #28
 80113e8:	6c9b      	ldr	r3, [r3, #72]	@ 0x48
 80113ea:	4620      	mov	r0, r4
 80113ec:	4798      	blx	r3
 80113ee:	3701      	adds	r7, #1
 80113f0:	b2bf      	uxth	r7, r7
 80113f2:	e7a9      	b.n	8011348 <_ZN8touchgfx11Application15drawCachedAreasEv+0x198>
 80113f4:	f8d9 0000 	ldr.w	r0, [r9]
 80113f8:	6803      	ldr	r3, [r0, #0]
 80113fa:	2101      	movs	r1, #1
 80113fc:	f8d3 3098 	ldr.w	r3, [r3, #152]	@ 0x98
 8011400:	4798      	blx	r3
 8011402:	e773      	b.n	80112ec <_ZN8touchgfx11Application15drawCachedAreasEv+0x13c>
 8011404:	e9cd 0007 	strd	r0, r0, [sp, #28]
 8011408:	e7e8      	b.n	80113dc <_ZN8touchgfx11Application15drawCachedAreasEv+0x22c>
 801140a:	6a5b      	ldr	r3, [r3, #36]	@ 0x24
 801140c:	4798      	blx	r3
 801140e:	4b3f      	ldr	r3, [pc, #252]	@ (801150c <_ZN8touchgfx11Application15drawCachedAreasEv+0x35c>)
 8011410:	781b      	ldrb	r3, [r3, #0]
 8011412:	2b00      	cmp	r3, #0
 8011414:	f43f af29 	beq.w	801126a <_ZN8touchgfx11Application15drawCachedAreasEv+0xba>
 8011418:	2300      	movs	r3, #0
 801141a:	f8a4 312e 	strh.w	r3, [r4, #302]	@ 0x12e
 801141e:	882b      	ldrh	r3, [r5, #0]
 8011420:	f8bd 5064 	ldrh.w	r5, [sp, #100]	@ 0x64
 8011424:	f104 00ee 	add.w	r0, r4, #238	@ 0xee
 8011428:	42ab      	cmp	r3, r5
 801142a:	f4bf af1e 	bcs.w	801126a <_ZN8touchgfx11Application15drawCachedAreasEv+0xba>
 801142e:	f8b4 112e 	ldrh.w	r1, [r4, #302]	@ 0x12e
 8011432:	2907      	cmp	r1, #7
 8011434:	d814      	bhi.n	8011460 <_ZN8touchgfx11Application15drawCachedAreasEv+0x2b0>
 8011436:	eb08 02c3 	add.w	r2, r8, r3, lsl #3
 801143a:	f938 e033 	ldrsh.w	lr, [r8, r3, lsl #3]
 801143e:	f9b2 c002 	ldrsh.w	ip, [r2, #2]
 8011442:	f9b2 7004 	ldrsh.w	r7, [r2, #4]
 8011446:	f9b2 6006 	ldrsh.w	r6, [r2, #6]
 801144a:	1c4a      	adds	r2, r1, #1
 801144c:	f8a4 212e 	strh.w	r2, [r4, #302]	@ 0x12e
 8011450:	eb00 02c1 	add.w	r2, r0, r1, lsl #3
 8011454:	f820 e031 	strh.w	lr, [r0, r1, lsl #3]
 8011458:	f8a2 c002 	strh.w	ip, [r2, #2]
 801145c:	8097      	strh	r7, [r2, #4]
 801145e:	80d6      	strh	r6, [r2, #6]
 8011460:	3301      	adds	r3, #1
 8011462:	b29b      	uxth	r3, r3
 8011464:	e7e0      	b.n	8011428 <_ZN8touchgfx11Application15drawCachedAreasEv+0x278>
 8011466:	2b02      	cmp	r3, #2
 8011468:	f040 8133 	bne.w	80116d2 <_ZN8touchgfx11Application15drawCachedAreasEv+0x522>
 801146c:	4b28      	ldr	r3, [pc, #160]	@ (8011510 <_ZN8touchgfx11Application15drawCachedAreasEv+0x360>)
 801146e:	781b      	ldrb	r3, [r3, #0]
 8011470:	2b01      	cmp	r3, #1
 8011472:	f104 0aac 	add.w	sl, r4, #172	@ 0xac
 8011476:	f000 8098 	beq.w	80115aa <_ZN8touchgfx11Application15drawCachedAreasEv+0x3fa>
 801147a:	882a      	ldrh	r2, [r5, #0]
 801147c:	f8b4 10ec 	ldrh.w	r1, [r4, #236]	@ 0xec
 8011480:	3201      	adds	r2, #1
 8011482:	b292      	uxth	r2, r2
 8011484:	2900      	cmp	r1, #0
 8011486:	d0c2      	beq.n	801140e <_ZN8touchgfx11Application15drawCachedAreasEv+0x25e>
 8011488:	f8b4 60ae 	ldrh.w	r6, [r4, #174]	@ 0xae
 801148c:	f8b4 30b2 	ldrh.w	r3, [r4, #178]	@ 0xb2
 8011490:	441e      	add	r6, r3
 8011492:	b236      	sxth	r6, r6
 8011494:	4694      	mov	ip, r2
 8011496:	f04f 0900 	mov.w	r9, #0
 801149a:	fa1f f38c 	uxth.w	r3, ip
 801149e:	4299      	cmp	r1, r3
 80114a0:	ea4f 07c9 	mov.w	r7, r9, lsl #3
 80114a4:	f240 80bf 	bls.w	8011626 <_ZN8touchgfx11Application15drawCachedAreasEv+0x476>
 80114a8:	4427      	add	r7, r4
 80114aa:	eb04 0ecc 	add.w	lr, r4, ip, lsl #3
 80114ae:	f9b7 30ae 	ldrsh.w	r3, [r7, #174]	@ 0xae
 80114b2:	f9be 00ae 	ldrsh.w	r0, [lr, #174]	@ 0xae
 80114b6:	4283      	cmp	r3, r0
 80114b8:	f340 80a1 	ble.w	80115fe <_ZN8touchgfx11Application15drawCachedAreasEv+0x44e>
 80114bc:	f8be 60b2 	ldrh.w	r6, [lr, #178]	@ 0xb2
 80114c0:	4406      	add	r6, r0
 80114c2:	b236      	sxth	r6, r6
 80114c4:	429e      	cmp	r6, r3
 80114c6:	bfa8      	it	ge
 80114c8:	461e      	movge	r6, r3
 80114ca:	46e1      	mov	r9, ip
 80114cc:	f10c 0c01 	add.w	ip, ip, #1
 80114d0:	e7e3      	b.n	801149a <_ZN8touchgfx11Application15drawCachedAreasEv+0x2ea>
 80114d2:	d10a      	bne.n	80114ea <_ZN8touchgfx11Application15drawCachedAreasEv+0x33a>
 80114d4:	f9b6 00b2 	ldrsh.w	r0, [r6, #178]	@ 0xb2
 80114d8:	f9be 10b2 	ldrsh.w	r1, [lr, #178]	@ 0xb2
 80114dc:	4562      	cmp	r2, ip
 80114de:	bfb8      	it	lt
 80114e0:	4662      	movlt	r2, ip
 80114e2:	4288      	cmp	r0, r1
 80114e4:	bfb8      	it	lt
 80114e6:	461f      	movlt	r7, r3
 80114e8:	e087      	b.n	80115fa <_ZN8touchgfx11Application15drawCachedAreasEv+0x44a>
 80114ea:	428a      	cmp	r2, r1
 80114ec:	bfb8      	it	lt
 80114ee:	460a      	movlt	r2, r1
 80114f0:	e083      	b.n	80115fa <_ZN8touchgfx11Application15drawCachedAreasEv+0x44a>
 80114f2:	bf00      	nop
 80114f4:	20002df4 	.word	0x20002df4
 80114f8:	20002e00 	.word	0x20002e00
 80114fc:	20000024 	.word	0x20000024
 8011500:	20002dbc 	.word	0x20002dbc
 8011504:	20002db2 	.word	0x20002db2
 8011508:	20002db0 	.word	0x20002db0
 801150c:	20002dba 	.word	0x20002dba
 8011510:	20002db4 	.word	0x20002db4
 8011514:	19a1      	adds	r1, r4, r6
 8011516:	ab07      	add	r3, sp, #28
 8011518:	f851 0fac 	ldr.w	r0, [r1, #172]!
 801151c:	6849      	ldr	r1, [r1, #4]
 801151e:	c303      	stmia	r3!, {r0, r1}
 8011520:	f9bd 3020 	ldrsh.w	r3, [sp, #32]
 8011524:	f8bd 101c 	ldrh.w	r1, [sp, #28]
 8011528:	2b13      	cmp	r3, #19
 801152a:	bfd8      	it	le
 801152c:	f9bd 201c 	ldrshle.w	r2, [sp, #28]
 8011530:	f8ad 201c 	strh.w	r2, [sp, #28]
 8011534:	440b      	add	r3, r1
 8011536:	1a9b      	subs	r3, r3, r2
 8011538:	a807      	add	r0, sp, #28
 801153a:	f8ad 3020 	strh.w	r3, [sp, #32]
 801153e:	f7ff f813 	bl	8010568 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectE>
 8011542:	a807      	add	r0, sp, #28
 8011544:	f7fb ff63 	bl	800d40e <_ZNK8touchgfx4Rect7isEmptyEv>
 8011548:	bb78      	cbnz	r0, 80115aa <_ZN8touchgfx11Application15drawCachedAreasEv+0x3fa>
 801154a:	f9bd c022 	ldrsh.w	ip, [sp, #34]	@ 0x22
 801154e:	f8d9 0000 	ldr.w	r0, [r9]
 8011552:	f8bd 3020 	ldrh.w	r3, [sp, #32]
 8011556:	f8d0 e000 	ldr.w	lr, [r0]
 801155a:	f8bd 201e 	ldrh.w	r2, [sp, #30]
 801155e:	f8bd 101c 	ldrh.w	r1, [sp, #28]
 8011562:	f1bc 0f14 	cmp.w	ip, #20
 8011566:	bfa8      	it	ge
 8011568:	f04f 0c14 	movge.w	ip, #20
 801156c:	fa1f fc8c 	uxth.w	ip, ip
 8011570:	f8cd c000 	str.w	ip, [sp]
 8011574:	f8de b090 	ldr.w	fp, [lr, #144]	@ 0x90
 8011578:	47d8      	blx	fp
 801157a:	4683      	mov	fp, r0
 801157c:	f8ad 0022 	strh.w	r0, [sp, #34]	@ 0x22
 8011580:	a807      	add	r0, sp, #28
 8011582:	f7fe ffd7 	bl	8010534 <_ZN8touchgfx21DisplayTransformation29transformFrameBufferToDisplayERNS_4RectE>
 8011586:	6823      	ldr	r3, [r4, #0]
 8011588:	4426      	add	r6, r4
 801158a:	4620      	mov	r0, r4
 801158c:	6c9b      	ldr	r3, [r3, #72]	@ 0x48
 801158e:	a907      	add	r1, sp, #28
 8011590:	4798      	blx	r3
 8011592:	f8b6 00b0 	ldrh.w	r0, [r6, #176]	@ 0xb0
 8011596:	eba0 000b 	sub.w	r0, r0, fp
 801159a:	b200      	sxth	r0, r0
 801159c:	f8a6 00b0 	strh.w	r0, [r6, #176]	@ 0xb0
 80115a0:	b918      	cbnz	r0, 80115aa <_ZN8touchgfx11Application15drawCachedAreasEv+0x3fa>
 80115a2:	b2b9      	uxth	r1, r7
 80115a4:	4650      	mov	r0, sl
 80115a6:	f7ff fa79 	bl	8010a9c <_ZN8touchgfx6VectorINS_4RectELt8EE13quickRemoveAtEt>
 80115aa:	f8b4 b0ec 	ldrh.w	fp, [r4, #236]	@ 0xec
 80115ae:	f1bb 0f00 	cmp.w	fp, #0
 80115b2:	f43f af2c 	beq.w	801140e <_ZN8touchgfx11Application15drawCachedAreasEv+0x25e>
 80115b6:	882b      	ldrh	r3, [r5, #0]
 80115b8:	f9b4 20ac 	ldrsh.w	r2, [r4, #172]	@ 0xac
 80115bc:	3301      	adds	r3, #1
 80115be:	b29b      	uxth	r3, r3
 80115c0:	2700      	movs	r7, #0
 80115c2:	b299      	uxth	r1, r3
 80115c4:	458b      	cmp	fp, r1
 80115c6:	ea4f 06c7 	mov.w	r6, r7, lsl #3
 80115ca:	d9a3      	bls.n	8011514 <_ZN8touchgfx11Application15drawCachedAreasEv+0x364>
 80115cc:	4426      	add	r6, r4
 80115ce:	eb04 0ec3 	add.w	lr, r4, r3, lsl #3
 80115d2:	f8b6 10ac 	ldrh.w	r1, [r6, #172]	@ 0xac
 80115d6:	f8b6 00b0 	ldrh.w	r0, [r6, #176]	@ 0xb0
 80115da:	f9be c0ac 	ldrsh.w	ip, [lr, #172]	@ 0xac
 80115de:	4408      	add	r0, r1
 80115e0:	f8be 10b0 	ldrh.w	r1, [lr, #176]	@ 0xb0
 80115e4:	4461      	add	r1, ip
 80115e6:	b200      	sxth	r0, r0
 80115e8:	b209      	sxth	r1, r1
 80115ea:	4288      	cmp	r0, r1
 80115ec:	f6bf af71 	bge.w	80114d2 <_ZN8touchgfx11Application15drawCachedAreasEv+0x322>
 80115f0:	4584      	cmp	ip, r0
 80115f2:	4662      	mov	r2, ip
 80115f4:	461f      	mov	r7, r3
 80115f6:	bfb8      	it	lt
 80115f8:	4602      	movlt	r2, r0
 80115fa:	3301      	adds	r3, #1
 80115fc:	e7e1      	b.n	80115c2 <_ZN8touchgfx11Application15drawCachedAreasEv+0x412>
 80115fe:	d10e      	bne.n	801161e <_ZN8touchgfx11Application15drawCachedAreasEv+0x46e>
 8011600:	f9be 00b0 	ldrsh.w	r0, [lr, #176]	@ 0xb0
 8011604:	f8be e0b2 	ldrh.w	lr, [lr, #178]	@ 0xb2
 8011608:	f9b7 70b0 	ldrsh.w	r7, [r7, #176]	@ 0xb0
 801160c:	4473      	add	r3, lr
 801160e:	b21b      	sxth	r3, r3
 8011610:	429e      	cmp	r6, r3
 8011612:	bfa8      	it	ge
 8011614:	461e      	movge	r6, r3
 8011616:	4287      	cmp	r7, r0
 8011618:	bfb8      	it	lt
 801161a:	46e1      	movlt	r9, ip
 801161c:	e756      	b.n	80114cc <_ZN8touchgfx11Application15drawCachedAreasEv+0x31c>
 801161e:	4286      	cmp	r6, r0
 8011620:	bfa8      	it	ge
 8011622:	4606      	movge	r6, r0
 8011624:	e752      	b.n	80114cc <_ZN8touchgfx11Application15drawCachedAreasEv+0x31c>
 8011626:	eb0a 0007 	add.w	r0, sl, r7
 801162a:	4427      	add	r7, r4
 801162c:	e9cd 2102 	strd	r2, r1, [sp, #8]
 8011630:	f9b7 b0b2 	ldrsh.w	fp, [r7, #178]	@ 0xb2
 8011634:	f1bb 0f13 	cmp.w	fp, #19
 8011638:	bfde      	ittt	le
 801163a:	f8b7 60ae 	ldrhle.w	r6, [r7, #174]	@ 0xae
 801163e:	445e      	addle	r6, fp
 8011640:	b236      	sxthle	r6, r6
 8011642:	f7fb fee4 	bl	800d40e <_ZNK8touchgfx4Rect7isEmptyEv>
 8011646:	e9dd 2102 	ldrd	r2, r1, [sp, #8]
 801164a:	2800      	cmp	r0, #0
 801164c:	f47f af1a 	bne.w	8011484 <_ZN8touchgfx11Application15drawCachedAreasEv+0x2d4>
 8011650:	f9b7 20ae 	ldrsh.w	r2, [r7, #174]	@ 0xae
 8011654:	f8ad 0022 	strh.w	r0, [sp, #34]	@ 0x22
 8011658:	482a      	ldr	r0, [pc, #168]	@ (8011704 <_ZN8touchgfx11Application15drawCachedAreasEv+0x554>)
 801165a:	f9b7 10ac 	ldrsh.w	r1, [r7, #172]	@ 0xac
 801165e:	f9b7 30b0 	ldrsh.w	r3, [r7, #176]	@ 0xb0
 8011662:	6800      	ldr	r0, [r0, #0]
 8011664:	f8ad 101c 	strh.w	r1, [sp, #28]
 8011668:	1ab6      	subs	r6, r6, r2
 801166a:	2e14      	cmp	r6, #20
 801166c:	f8ad 201e 	strh.w	r2, [sp, #30]
 8011670:	f8ad 3020 	strh.w	r3, [sp, #32]
 8011674:	bfa8      	it	ge
 8011676:	2614      	movge	r6, #20
 8011678:	f8d0 c000 	ldr.w	ip, [r0]
 801167c:	b2b6      	uxth	r6, r6
 801167e:	fa1f fb8b 	uxth.w	fp, fp
 8011682:	455e      	cmp	r6, fp
 8011684:	bf94      	ite	ls
 8011686:	9600      	strls	r6, [sp, #0]
 8011688:	f8cd b000 	strhi.w	fp, [sp]
 801168c:	b292      	uxth	r2, r2
 801168e:	f8dc 6090 	ldr.w	r6, [ip, #144]	@ 0x90
 8011692:	b29b      	uxth	r3, r3
 8011694:	b289      	uxth	r1, r1
 8011696:	47b0      	blx	r6
 8011698:	6823      	ldr	r3, [r4, #0]
 801169a:	f8ad 0022 	strh.w	r0, [sp, #34]	@ 0x22
 801169e:	6c9b      	ldr	r3, [r3, #72]	@ 0x48
 80116a0:	a907      	add	r1, sp, #28
 80116a2:	4620      	mov	r0, r4
 80116a4:	4798      	blx	r3
 80116a6:	f8bd 1022 	ldrh.w	r1, [sp, #34]	@ 0x22
 80116aa:	f8b7 30b2 	ldrh.w	r3, [r7, #178]	@ 0xb2
 80116ae:	f8b7 20ae 	ldrh.w	r2, [r7, #174]	@ 0xae
 80116b2:	1a5b      	subs	r3, r3, r1
 80116b4:	440a      	add	r2, r1
 80116b6:	b21b      	sxth	r3, r3
 80116b8:	f8a7 20ae 	strh.w	r2, [r7, #174]	@ 0xae
 80116bc:	f8a7 30b2 	strh.w	r3, [r7, #178]	@ 0xb2
 80116c0:	2b00      	cmp	r3, #0
 80116c2:	f47f aeda 	bne.w	801147a <_ZN8touchgfx11Application15drawCachedAreasEv+0x2ca>
 80116c6:	fa1f f189 	uxth.w	r1, r9
 80116ca:	4650      	mov	r0, sl
 80116cc:	f7ff f9e6 	bl	8010a9c <_ZN8touchgfx6VectorINS_4RectELt8EE13quickRemoveAtEt>
 80116d0:	e6d3      	b.n	801147a <_ZN8touchgfx11Application15drawCachedAreasEv+0x2ca>
 80116d2:	882e      	ldrh	r6, [r5, #0]
 80116d4:	f8b4 30ec 	ldrh.w	r3, [r4, #236]	@ 0xec
 80116d8:	42b3      	cmp	r3, r6
 80116da:	f67f ae98 	bls.w	801140e <_ZN8touchgfx11Application15drawCachedAreasEv+0x25e>
 80116de:	eb04 02c6 	add.w	r2, r4, r6, lsl #3
 80116e2:	ab07      	add	r3, sp, #28
 80116e4:	f852 0fac 	ldr.w	r0, [r2, #172]!
 80116e8:	6851      	ldr	r1, [r2, #4]
 80116ea:	c303      	stmia	r3!, {r0, r1}
 80116ec:	a807      	add	r0, sp, #28
 80116ee:	f7fb fe8e 	bl	800d40e <_ZNK8touchgfx4Rect7isEmptyEv>
 80116f2:	b920      	cbnz	r0, 80116fe <_ZN8touchgfx11Application15drawCachedAreasEv+0x54e>
 80116f4:	6823      	ldr	r3, [r4, #0]
 80116f6:	a907      	add	r1, sp, #28
 80116f8:	6c9b      	ldr	r3, [r3, #72]	@ 0x48
 80116fa:	4620      	mov	r0, r4
 80116fc:	4798      	blx	r3
 80116fe:	3601      	adds	r6, #1
 8011700:	b2b6      	uxth	r6, r6
 8011702:	e7e7      	b.n	80116d4 <_ZN8touchgfx11Application15drawCachedAreasEv+0x524>
 8011704:	20002dbc 	.word	0x20002dbc

08011708 <_GLOBAL__sub_I__ZN8touchgfx11Application8instanceE>:
 8011708:	4b03      	ldr	r3, [pc, #12]	@ (8011718 <_GLOBAL__sub_I__ZN8touchgfx11Application8instanceE+0x10>)
 801170a:	2200      	movs	r2, #0
 801170c:	801a      	strh	r2, [r3, #0]
 801170e:	805a      	strh	r2, [r3, #2]
 8011710:	809a      	strh	r2, [r3, #4]
 8011712:	80da      	strh	r2, [r3, #6]
 8011714:	4770      	bx	lr
 8011716:	bf00      	nop
 8011718:	20002e00 	.word	0x20002e00

0801171c <_ZNK8touchgfx4Font17getStringWidthLTREhPKtSt9__va_list>:
 801171c:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8011720:	4606      	mov	r6, r0
 8011722:	b09d      	sub	sp, #116	@ 0x74
 8011724:	a803      	add	r0, sp, #12
 8011726:	4614      	mov	r4, r2
 8011728:	468a      	mov	sl, r1
 801172a:	461d      	mov	r5, r3
 801172c:	f000 fd72 	bl	8012214 <_ZN8touchgfx12TextProviderC1Ev>
 8011730:	6833      	ldr	r3, [r6, #0]
 8011732:	4630      	mov	r0, r6
 8011734:	6cdb      	ldr	r3, [r3, #76]	@ 0x4c
 8011736:	4798      	blx	r3
 8011738:	6833      	ldr	r3, [r6, #0]
 801173a:	4607      	mov	r7, r0
 801173c:	6d1b      	ldr	r3, [r3, #80]	@ 0x50
 801173e:	4630      	mov	r0, r6
 8011740:	4798      	blx	r3
 8011742:	462a      	mov	r2, r5
 8011744:	9000      	str	r0, [sp, #0]
 8011746:	4621      	mov	r1, r4
 8011748:	463b      	mov	r3, r7
 801174a:	a803      	add	r0, sp, #12
 801174c:	f000 fdbd 	bl	80122ca <_ZN8touchgfx12TextProvider10initializeEPKtSt9__va_listS2_PKNS_24FontContextualFormsTableE>
 8011750:	2500      	movs	r5, #0
 8011752:	462c      	mov	r4, r5
 8011754:	46a9      	mov	r9, r5
 8011756:	46a8      	mov	r8, r5
 8011758:	f242 0b0b 	movw	fp, #8203	@ 0x200b
 801175c:	2300      	movs	r3, #0
 801175e:	9302      	str	r3, [sp, #8]
 8011760:	f64f 63ff 	movw	r3, #65279	@ 0xfeff
 8011764:	429c      	cmp	r4, r3
 8011766:	d002      	beq.n	801176e <_ZNK8touchgfx4Font17getStringWidthLTREhPKtSt9__va_list+0x52>
 8011768:	455c      	cmp	r4, fp
 801176a:	bf18      	it	ne
 801176c:	4625      	movne	r5, r4
 801176e:	ab02      	add	r3, sp, #8
 8011770:	4632      	mov	r2, r6
 8011772:	4651      	mov	r1, sl
 8011774:	a803      	add	r0, sp, #12
 8011776:	f001 f8d5 	bl	8012924 <_ZN8touchgfx12TextProvider15getNextLigatureEhPKNS_4FontERPKNS_9GlyphNodeE>
 801177a:	4604      	mov	r4, r0
 801177c:	b108      	cbz	r0, 8011782 <_ZNK8touchgfx4Font17getStringWidthLTREhPKtSt9__va_list+0x66>
 801177e:	280a      	cmp	r0, #10
 8011780:	d10a      	bne.n	8011798 <_ZNK8touchgfx4Font17getStringWidthLTREhPKtSt9__va_list+0x7c>
 8011782:	45c1      	cmp	r9, r8
 8011784:	bf38      	it	cc
 8011786:	46c1      	movcc	r9, r8
 8011788:	f04f 0800 	mov.w	r8, #0
 801178c:	2c00      	cmp	r4, #0
 801178e:	d1e5      	bne.n	801175c <_ZNK8touchgfx4Font17getStringWidthLTREhPKtSt9__va_list+0x40>
 8011790:	4648      	mov	r0, r9
 8011792:	b01d      	add	sp, #116	@ 0x74
 8011794:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 8011798:	9a02      	ldr	r2, [sp, #8]
 801179a:	2a00      	cmp	r2, #0
 801179c:	d0de      	beq.n	801175c <_ZNK8touchgfx4Font17getStringWidthLTREhPKtSt9__va_list+0x40>
 801179e:	7b57      	ldrb	r7, [r2, #13]
 80117a0:	6833      	ldr	r3, [r6, #0]
 80117a2:	8894      	ldrh	r4, [r2, #4]
 80117a4:	6c5b      	ldr	r3, [r3, #68]	@ 0x44
 80117a6:	007f      	lsls	r7, r7, #1
 80117a8:	f407 7080 	and.w	r0, r7, #256	@ 0x100
 80117ac:	7a97      	ldrb	r7, [r2, #10]
 80117ae:	4629      	mov	r1, r5
 80117b0:	4307      	orrs	r7, r0
 80117b2:	4630      	mov	r0, r6
 80117b4:	4798      	blx	r3
 80117b6:	4438      	add	r0, r7
 80117b8:	4480      	add	r8, r0
 80117ba:	fa1f f888 	uxth.w	r8, r8
 80117be:	e7e5      	b.n	801178c <_ZNK8touchgfx4Font17getStringWidthLTREhPKtSt9__va_list+0x70>

080117c0 <_ZNK8touchgfx4Font12getCharWidthEt>:
 80117c0:	b508      	push	{r3, lr}
 80117c2:	6803      	ldr	r3, [r0, #0]
 80117c4:	68db      	ldr	r3, [r3, #12]
 80117c6:	4798      	blx	r3
 80117c8:	b128      	cbz	r0, 80117d6 <_ZNK8touchgfx4Font12getCharWidthEt+0x16>
 80117ca:	7b43      	ldrb	r3, [r0, #13]
 80117cc:	7a80      	ldrb	r0, [r0, #10]
 80117ce:	005b      	lsls	r3, r3, #1
 80117d0:	f403 7380 	and.w	r3, r3, #256	@ 0x100
 80117d4:	4318      	orrs	r0, r3
 80117d6:	bd08      	pop	{r3, pc}

080117d8 <_ZNK8touchgfx4Font16getMaxTextHeightEPKtz>:
 80117d8:	b40e      	push	{r1, r2, r3}
 80117da:	b5f0      	push	{r4, r5, r6, r7, lr}
 80117dc:	b09e      	sub	sp, #120	@ 0x78
 80117de:	ab23      	add	r3, sp, #140	@ 0x8c
 80117e0:	4605      	mov	r5, r0
 80117e2:	f853 4b04 	ldr.w	r4, [r3], #4
 80117e6:	9303      	str	r3, [sp, #12]
 80117e8:	a805      	add	r0, sp, #20
 80117ea:	f000 fd13 	bl	8012214 <_ZN8touchgfx12TextProviderC1Ev>
 80117ee:	682b      	ldr	r3, [r5, #0]
 80117f0:	4628      	mov	r0, r5
 80117f2:	6cdb      	ldr	r3, [r3, #76]	@ 0x4c
 80117f4:	4798      	blx	r3
 80117f6:	682b      	ldr	r3, [r5, #0]
 80117f8:	4606      	mov	r6, r0
 80117fa:	6d1b      	ldr	r3, [r3, #80]	@ 0x50
 80117fc:	4628      	mov	r0, r5
 80117fe:	4798      	blx	r3
 8011800:	4633      	mov	r3, r6
 8011802:	ae1e      	add	r6, sp, #120	@ 0x78
 8011804:	4621      	mov	r1, r4
 8011806:	9000      	str	r0, [sp, #0]
 8011808:	9a03      	ldr	r2, [sp, #12]
 801180a:	2400      	movs	r4, #0
 801180c:	a805      	add	r0, sp, #20
 801180e:	f000 fd5c 	bl	80122ca <_ZN8touchgfx12TextProvider10initializeEPKtSt9__va_listS2_PKNS_24FontContextualFormsTableE>
 8011812:	f846 4d68 	str.w	r4, [r6, #-104]!
 8011816:	462a      	mov	r2, r5
 8011818:	4633      	mov	r3, r6
 801181a:	4621      	mov	r1, r4
 801181c:	a805      	add	r0, sp, #20
 801181e:	f001 f881 	bl	8012924 <_ZN8touchgfx12TextProvider15getNextLigatureEhPKNS_4FontERPKNS_9GlyphNodeE>
 8011822:	b1f0      	cbz	r0, 8011862 <_ZNK8touchgfx4Font16getMaxTextHeightEPKtz+0x8a>
 8011824:	280a      	cmp	r0, #10
 8011826:	d018      	beq.n	801185a <_ZNK8touchgfx4Font16getMaxTextHeightEPKtz+0x82>
 8011828:	9f04      	ldr	r7, [sp, #16]
 801182a:	b1b7      	cbz	r7, 801185a <_ZNK8touchgfx4Font16getMaxTextHeightEPKtz+0x82>
 801182c:	7b78      	ldrb	r0, [r7, #13]
 801182e:	7a3b      	ldrb	r3, [r7, #8]
 8011830:	88ea      	ldrh	r2, [r5, #6]
 8011832:	00c1      	lsls	r1, r0, #3
 8011834:	f401 7180 	and.w	r1, r1, #256	@ 0x100
 8011838:	4319      	orrs	r1, r3
 801183a:	0643      	lsls	r3, r0, #25
 801183c:	bf44      	itt	mi
 801183e:	f5a1 7300 	submi.w	r3, r1, #512	@ 0x200
 8011842:	b219      	sxthmi	r1, r3
 8011844:	0100      	lsls	r0, r0, #4
 8011846:	79fb      	ldrb	r3, [r7, #7]
 8011848:	f400 7080 	and.w	r0, r0, #256	@ 0x100
 801184c:	4303      	orrs	r3, r0
 801184e:	4413      	add	r3, r2
 8011850:	1a5b      	subs	r3, r3, r1
 8011852:	b21b      	sxth	r3, r3
 8011854:	429c      	cmp	r4, r3
 8011856:	bfb8      	it	lt
 8011858:	461c      	movlt	r4, r3
 801185a:	4633      	mov	r3, r6
 801185c:	462a      	mov	r2, r5
 801185e:	2100      	movs	r1, #0
 8011860:	e7dc      	b.n	801181c <_ZNK8touchgfx4Font16getMaxTextHeightEPKtz+0x44>
 8011862:	b2a0      	uxth	r0, r4
 8011864:	b01e      	add	sp, #120	@ 0x78
 8011866:	e8bd 40f0 	ldmia.w	sp!, {r4, r5, r6, r7, lr}
 801186a:	b003      	add	sp, #12
 801186c:	4770      	bx	lr

0801186e <_ZNK8touchgfx4Font20getMinimumTextHeightEv>:
 801186e:	7a43      	ldrb	r3, [r0, #9]
 8011870:	8880      	ldrh	r0, [r0, #4]
 8011872:	4418      	add	r0, r3
 8011874:	b280      	uxth	r0, r0
 8011876:	4770      	bx	lr

08011878 <_ZNK8touchgfx4Font13getFontHeightEv>:
 8011878:	6803      	ldr	r3, [r0, #0]
 801187a:	6b1b      	ldr	r3, [r3, #48]	@ 0x30
 801187c:	4718      	bx	r3

0801187e <_ZNK8touchgfx4Font16getNumberOfLinesEPKtz>:
 801187e:	b40e      	push	{r1, r2, r3}
 8011880:	b570      	push	{r4, r5, r6, lr}
 8011882:	b09d      	sub	sp, #116	@ 0x74
 8011884:	ab21      	add	r3, sp, #132	@ 0x84
 8011886:	4604      	mov	r4, r0
 8011888:	f853 5b04 	ldr.w	r5, [r3], #4
 801188c:	9302      	str	r3, [sp, #8]
 801188e:	a803      	add	r0, sp, #12
 8011890:	f000 fcc0 	bl	8012214 <_ZN8touchgfx12TextProviderC1Ev>
 8011894:	6823      	ldr	r3, [r4, #0]
 8011896:	4620      	mov	r0, r4
 8011898:	6cdb      	ldr	r3, [r3, #76]	@ 0x4c
 801189a:	4798      	blx	r3
 801189c:	6823      	ldr	r3, [r4, #0]
 801189e:	4606      	mov	r6, r0
 80118a0:	6d1b      	ldr	r3, [r3, #80]	@ 0x50
 80118a2:	4620      	mov	r0, r4
 80118a4:	4798      	blx	r3
 80118a6:	4633      	mov	r3, r6
 80118a8:	9000      	str	r0, [sp, #0]
 80118aa:	9a02      	ldr	r2, [sp, #8]
 80118ac:	4629      	mov	r1, r5
 80118ae:	a803      	add	r0, sp, #12
 80118b0:	f000 fd0b 	bl	80122ca <_ZN8touchgfx12TextProvider10initializeEPKtSt9__va_listS2_PKNS_24FontContextualFormsTableE>
 80118b4:	a803      	add	r0, sp, #12
 80118b6:	f001 f903 	bl	8012ac0 <_ZN8touchgfx12TextProvider11getNextCharEv>
 80118ba:	2401      	movs	r4, #1
 80118bc:	b2a3      	uxth	r3, r4
 80118be:	b140      	cbz	r0, 80118d2 <_ZNK8touchgfx4Font16getNumberOfLinesEPKtz+0x54>
 80118c0:	280a      	cmp	r0, #10
 80118c2:	bf08      	it	eq
 80118c4:	3301      	addeq	r3, #1
 80118c6:	a803      	add	r0, sp, #12
 80118c8:	bf08      	it	eq
 80118ca:	b21c      	sxtheq	r4, r3
 80118cc:	f001 f8f8 	bl	8012ac0 <_ZN8touchgfx12TextProvider11getNextCharEv>
 80118d0:	e7f4      	b.n	80118bc <_ZNK8touchgfx4Font16getNumberOfLinesEPKtz+0x3e>
 80118d2:	4618      	mov	r0, r3
 80118d4:	b01d      	add	sp, #116	@ 0x74
 80118d6:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
 80118da:	b003      	add	sp, #12
 80118dc:	4770      	bx	lr

080118de <_ZNK8touchgfx4Font15getSpacingAboveEPKtz>:
 80118de:	b40e      	push	{r1, r2, r3}
 80118e0:	b5f0      	push	{r4, r5, r6, r7, lr}
 80118e2:	b09e      	sub	sp, #120	@ 0x78
 80118e4:	ab23      	add	r3, sp, #140	@ 0x8c
 80118e6:	4604      	mov	r4, r0
 80118e8:	f853 5b04 	ldr.w	r5, [r3], #4
 80118ec:	9303      	str	r3, [sp, #12]
 80118ee:	a805      	add	r0, sp, #20
 80118f0:	f000 fc90 	bl	8012214 <_ZN8touchgfx12TextProviderC1Ev>
 80118f4:	6823      	ldr	r3, [r4, #0]
 80118f6:	4620      	mov	r0, r4
 80118f8:	6cdb      	ldr	r3, [r3, #76]	@ 0x4c
 80118fa:	4798      	blx	r3
 80118fc:	6823      	ldr	r3, [r4, #0]
 80118fe:	4606      	mov	r6, r0
 8011900:	6d1b      	ldr	r3, [r3, #80]	@ 0x50
 8011902:	4620      	mov	r0, r4
 8011904:	4798      	blx	r3
 8011906:	4633      	mov	r3, r6
 8011908:	4629      	mov	r1, r5
 801190a:	9000      	str	r0, [sp, #0]
 801190c:	9a03      	ldr	r2, [sp, #12]
 801190e:	a805      	add	r0, sp, #20
 8011910:	ad1e      	add	r5, sp, #120	@ 0x78
 8011912:	f000 fcda 	bl	80122ca <_ZN8touchgfx12TextProvider10initializeEPKtSt9__va_listS2_PKNS_24FontContextualFormsTableE>
 8011916:	2100      	movs	r1, #0
 8011918:	f845 1d68 	str.w	r1, [r5, #-104]!
 801191c:	4622      	mov	r2, r4
 801191e:	462b      	mov	r3, r5
 8011920:	a805      	add	r0, sp, #20
 8011922:	f000 ffff 	bl	8012924 <_ZN8touchgfx12TextProvider15getNextLigatureEhPKNS_4FontERPKNS_9GlyphNodeE>
 8011926:	f647 76ff 	movw	r6, #32767	@ 0x7fff
 801192a:	b1d8      	cbz	r0, 8011964 <_ZNK8touchgfx4Font15getSpacingAboveEPKtz+0x86>
 801192c:	280a      	cmp	r0, #10
 801192e:	d012      	beq.n	8011956 <_ZNK8touchgfx4Font15getSpacingAboveEPKtz+0x78>
 8011930:	9804      	ldr	r0, [sp, #16]
 8011932:	b180      	cbz	r0, 8011956 <_ZNK8touchgfx4Font15getSpacingAboveEPKtz+0x78>
 8011934:	7b47      	ldrb	r7, [r0, #13]
 8011936:	88e2      	ldrh	r2, [r4, #6]
 8011938:	00fb      	lsls	r3, r7, #3
 801193a:	f403 7180 	and.w	r1, r3, #256	@ 0x100
 801193e:	7a03      	ldrb	r3, [r0, #8]
 8011940:	430b      	orrs	r3, r1
 8011942:	0679      	lsls	r1, r7, #25
 8011944:	bf44      	itt	mi
 8011946:	f5a3 7300 	submi.w	r3, r3, #512	@ 0x200
 801194a:	b21b      	sxthmi	r3, r3
 801194c:	1ad3      	subs	r3, r2, r3
 801194e:	b21b      	sxth	r3, r3
 8011950:	429e      	cmp	r6, r3
 8011952:	bfa8      	it	ge
 8011954:	461e      	movge	r6, r3
 8011956:	462b      	mov	r3, r5
 8011958:	4622      	mov	r2, r4
 801195a:	2100      	movs	r1, #0
 801195c:	a805      	add	r0, sp, #20
 801195e:	f000 ffe1 	bl	8012924 <_ZN8touchgfx12TextProvider15getNextLigatureEhPKNS_4FontERPKNS_9GlyphNodeE>
 8011962:	e7e2      	b.n	801192a <_ZNK8touchgfx4Font15getSpacingAboveEPKtz+0x4c>
 8011964:	4630      	mov	r0, r6
 8011966:	b01e      	add	sp, #120	@ 0x78
 8011968:	e8bd 40f0 	ldmia.w	sp!, {r4, r5, r6, r7, lr}
 801196c:	b003      	add	sp, #12
 801196e:	4770      	bx	lr

08011970 <_ZNK8touchgfx8Drawable10invalidateEv>:
 8011970:	b513      	push	{r0, r1, r4, lr}
 8011972:	6803      	ldr	r3, [r0, #0]
 8011974:	f9b0 1008 	ldrsh.w	r1, [r0, #8]
 8011978:	f9b0 200a 	ldrsh.w	r2, [r0, #10]
 801197c:	f8ad 1004 	strh.w	r1, [sp, #4]
 8011980:	2400      	movs	r4, #0
 8011982:	9400      	str	r4, [sp, #0]
 8011984:	f8ad 2006 	strh.w	r2, [sp, #6]
 8011988:	691b      	ldr	r3, [r3, #16]
 801198a:	4669      	mov	r1, sp
 801198c:	4798      	blx	r3
 801198e:	b002      	add	sp, #8
 8011990:	bd10      	pop	{r4, pc}

08011992 <_ZN8touchgfx8Drawable20getSolidRectAbsoluteEv>:
 8011992:	b538      	push	{r3, r4, r5, lr}
 8011994:	680b      	ldr	r3, [r1, #0]
 8011996:	460c      	mov	r4, r1
 8011998:	68db      	ldr	r3, [r3, #12]
 801199a:	4605      	mov	r5, r0
 801199c:	4798      	blx	r3
 801199e:	6823      	ldr	r3, [r4, #0]
 80119a0:	4620      	mov	r0, r4
 80119a2:	6adb      	ldr	r3, [r3, #44]	@ 0x2c
 80119a4:	4629      	mov	r1, r5
 80119a6:	4798      	blx	r3
 80119a8:	4628      	mov	r0, r5
 80119aa:	bd38      	pop	{r3, r4, r5, pc}

080119ac <_ZNK8touchgfx8Drawable23translateRectToAbsoluteERNS_4RectE>:
 80119ac:	b410      	push	{r4}
 80119ae:	880a      	ldrh	r2, [r1, #0]
 80119b0:	8884      	ldrh	r4, [r0, #4]
 80119b2:	4422      	add	r2, r4
 80119b4:	800a      	strh	r2, [r1, #0]
 80119b6:	88c4      	ldrh	r4, [r0, #6]
 80119b8:	884a      	ldrh	r2, [r1, #2]
 80119ba:	4422      	add	r2, r4
 80119bc:	804a      	strh	r2, [r1, #2]
 80119be:	6940      	ldr	r0, [r0, #20]
 80119c0:	b120      	cbz	r0, 80119cc <_ZNK8touchgfx8Drawable23translateRectToAbsoluteERNS_4RectE+0x20>
 80119c2:	6803      	ldr	r3, [r0, #0]
 80119c4:	f85d 4b04 	ldr.w	r4, [sp], #4
 80119c8:	6adb      	ldr	r3, [r3, #44]	@ 0x2c
 80119ca:	4718      	bx	r3
 80119cc:	f85d 4b04 	ldr.w	r4, [sp], #4
 80119d0:	4770      	bx	lr

080119d2 <_ZNK8touchgfx8Drawable14getVisibleRectERNS_4RectE>:
 80119d2:	b570      	push	{r4, r5, r6, lr}
 80119d4:	8882      	ldrh	r2, [r0, #4]
 80119d6:	880b      	ldrh	r3, [r1, #0]
 80119d8:	4413      	add	r3, r2
 80119da:	800b      	strh	r3, [r1, #0]
 80119dc:	88c2      	ldrh	r2, [r0, #6]
 80119de:	884b      	ldrh	r3, [r1, #2]
 80119e0:	460c      	mov	r4, r1
 80119e2:	4413      	add	r3, r2
 80119e4:	804b      	strh	r3, [r1, #2]
 80119e6:	4605      	mov	r5, r0
 80119e8:	1d01      	adds	r1, r0, #4
 80119ea:	4620      	mov	r0, r4
 80119ec:	f7fb fccc 	bl	800d388 <_ZN8touchgfx4RectaNERKS0_>
 80119f0:	f9b4 3004 	ldrsh.w	r3, [r4, #4]
 80119f4:	2b00      	cmp	r3, #0
 80119f6:	dd0b      	ble.n	8011a10 <_ZNK8touchgfx8Drawable14getVisibleRectERNS_4RectE+0x3e>
 80119f8:	f9b4 3006 	ldrsh.w	r3, [r4, #6]
 80119fc:	2b00      	cmp	r3, #0
 80119fe:	dd07      	ble.n	8011a10 <_ZNK8touchgfx8Drawable14getVisibleRectERNS_4RectE+0x3e>
 8011a00:	6968      	ldr	r0, [r5, #20]
 8011a02:	b128      	cbz	r0, 8011a10 <_ZNK8touchgfx8Drawable14getVisibleRectERNS_4RectE+0x3e>
 8011a04:	6803      	ldr	r3, [r0, #0]
 8011a06:	4621      	mov	r1, r4
 8011a08:	6a9b      	ldr	r3, [r3, #40]	@ 0x28
 8011a0a:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
 8011a0e:	4718      	bx	r3
 8011a10:	bd70      	pop	{r4, r5, r6, pc}
	...

08011a14 <_ZNK8touchgfx8Drawable14invalidateRectERNS_4RectE>:
 8011a14:	b570      	push	{r4, r5, r6, lr}
 8011a16:	8882      	ldrh	r2, [r0, #4]
 8011a18:	880b      	ldrh	r3, [r1, #0]
 8011a1a:	4413      	add	r3, r2
 8011a1c:	800b      	strh	r3, [r1, #0]
 8011a1e:	88c2      	ldrh	r2, [r0, #6]
 8011a20:	884b      	ldrh	r3, [r1, #2]
 8011a22:	460c      	mov	r4, r1
 8011a24:	4413      	add	r3, r2
 8011a26:	804b      	strh	r3, [r1, #2]
 8011a28:	4605      	mov	r5, r0
 8011a2a:	1d01      	adds	r1, r0, #4
 8011a2c:	4620      	mov	r0, r4
 8011a2e:	f7fb fcab 	bl	800d388 <_ZN8touchgfx4RectaNERKS0_>
 8011a32:	f9b4 3004 	ldrsh.w	r3, [r4, #4]
 8011a36:	2b00      	cmp	r3, #0
 8011a38:	dd19      	ble.n	8011a6e <_ZNK8touchgfx8Drawable14invalidateRectERNS_4RectE+0x5a>
 8011a3a:	f9b4 3006 	ldrsh.w	r3, [r4, #6]
 8011a3e:	2b00      	cmp	r3, #0
 8011a40:	dd15      	ble.n	8011a6e <_ZNK8touchgfx8Drawable14invalidateRectERNS_4RectE+0x5a>
 8011a42:	6968      	ldr	r0, [r5, #20]
 8011a44:	b128      	cbz	r0, 8011a52 <_ZNK8touchgfx8Drawable14invalidateRectERNS_4RectE+0x3e>
 8011a46:	6803      	ldr	r3, [r0, #0]
 8011a48:	4621      	mov	r1, r4
 8011a4a:	691b      	ldr	r3, [r3, #16]
 8011a4c:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
 8011a50:	4718      	bx	r3
 8011a52:	4b07      	ldr	r3, [pc, #28]	@ (8011a70 <_ZNK8touchgfx8Drawable14invalidateRectERNS_4RectE+0x5c>)
 8011a54:	681b      	ldr	r3, [r3, #0]
 8011a56:	3304      	adds	r3, #4
 8011a58:	429d      	cmp	r5, r3
 8011a5a:	d108      	bne.n	8011a6e <_ZNK8touchgfx8Drawable14invalidateRectERNS_4RectE+0x5a>
 8011a5c:	f7fe ff12 	bl	8010884 <_ZN8touchgfx11Application11getInstanceEv>
 8011a60:	6803      	ldr	r3, [r0, #0]
 8011a62:	6821      	ldr	r1, [r4, #0]
 8011a64:	6862      	ldr	r2, [r4, #4]
 8011a66:	6c1b      	ldr	r3, [r3, #64]	@ 0x40
 8011a68:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
 8011a6c:	4718      	bx	r3
 8011a6e:	bd70      	pop	{r4, r5, r6, pc}
 8011a70:	20002df8 	.word	0x20002df8

08011a74 <_ZN8touchgfx8Drawable12moveRelativeEss>:
 8011a74:	b570      	push	{r4, r5, r6, lr}
 8011a76:	4604      	mov	r4, r0
 8011a78:	4616      	mov	r6, r2
 8011a7a:	460d      	mov	r5, r1
 8011a7c:	b901      	cbnz	r1, 8011a80 <_ZN8touchgfx8Drawable12moveRelativeEss+0xc>
 8011a7e:	b192      	cbz	r2, 8011aa6 <_ZN8touchgfx8Drawable12moveRelativeEss+0x32>
 8011a80:	6823      	ldr	r3, [r4, #0]
 8011a82:	4620      	mov	r0, r4
 8011a84:	699b      	ldr	r3, [r3, #24]
 8011a86:	4798      	blx	r3
 8011a88:	88e2      	ldrh	r2, [r4, #6]
 8011a8a:	88a1      	ldrh	r1, [r4, #4]
 8011a8c:	4432      	add	r2, r6
 8011a8e:	4429      	add	r1, r5
 8011a90:	4620      	mov	r0, r4
 8011a92:	b212      	sxth	r2, r2
 8011a94:	b209      	sxth	r1, r1
 8011a96:	f7f7 fcba 	bl	800940e <_ZN8touchgfx8Drawable5setXYEss>
 8011a9a:	6823      	ldr	r3, [r4, #0]
 8011a9c:	4620      	mov	r0, r4
 8011a9e:	699b      	ldr	r3, [r3, #24]
 8011aa0:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
 8011aa4:	4718      	bx	r3
 8011aa6:	bd70      	pop	{r4, r5, r6, pc}

08011aa8 <_ZNK8touchgfx8Drawable15getAbsoluteRectEv>:
 8011aa8:	b510      	push	{r4, lr}
 8011aaa:	4604      	mov	r4, r0
 8011aac:	4608      	mov	r0, r1
 8011aae:	2300      	movs	r3, #0
 8011ab0:	8023      	strh	r3, [r4, #0]
 8011ab2:	8063      	strh	r3, [r4, #2]
 8011ab4:	6803      	ldr	r3, [r0, #0]
 8011ab6:	f9b0 200a 	ldrsh.w	r2, [r0, #10]
 8011aba:	f9b1 1008 	ldrsh.w	r1, [r1, #8]
 8011abe:	80a1      	strh	r1, [r4, #4]
 8011ac0:	80e2      	strh	r2, [r4, #6]
 8011ac2:	6adb      	ldr	r3, [r3, #44]	@ 0x2c
 8011ac4:	4621      	mov	r1, r4
 8011ac6:	4798      	blx	r3
 8011ac8:	4620      	mov	r0, r4
 8011aca:	bd10      	pop	{r4, pc}

08011acc <_ZN8touchgfx9ConstFontC1EPKNS_9GlyphNodeEttthhhhhhtt>:
 8011acc:	b530      	push	{r4, r5, lr}
 8011ace:	8083      	strh	r3, [r0, #4]
 8011ad0:	f8bd 300c 	ldrh.w	r3, [sp, #12]
 8011ad4:	80c3      	strh	r3, [r0, #6]
 8011ad6:	f89d 3010 	ldrb.w	r3, [sp, #16]
 8011ada:	7203      	strb	r3, [r0, #8]
 8011adc:	f89d 3014 	ldrb.w	r3, [sp, #20]
 8011ae0:	f89d 5018 	ldrb.w	r5, [sp, #24]
 8011ae4:	7243      	strb	r3, [r0, #9]
 8011ae6:	7a83      	ldrb	r3, [r0, #10]
 8011ae8:	6141      	str	r1, [r0, #20]
 8011aea:	f365 0306 	bfi	r3, r5, #0, #7
 8011aee:	f89d 501c 	ldrb.w	r5, [sp, #28]
 8011af2:	8302      	strh	r2, [r0, #24]
 8011af4:	f365 13c7 	bfi	r3, r5, #7, #1
 8011af8:	7283      	strb	r3, [r0, #10]
 8011afa:	f89d 3020 	ldrb.w	r3, [sp, #32]
 8011afe:	72c3      	strb	r3, [r0, #11]
 8011b00:	f89d 3024 	ldrb.w	r3, [sp, #36]	@ 0x24
 8011b04:	7303      	strb	r3, [r0, #12]
 8011b06:	f8bd 3028 	ldrh.w	r3, [sp, #40]	@ 0x28
 8011b0a:	81c3      	strh	r3, [r0, #14]
 8011b0c:	f8bd 302c 	ldrh.w	r3, [sp, #44]	@ 0x2c
 8011b10:	8203      	strh	r3, [r0, #16]
 8011b12:	4b01      	ldr	r3, [pc, #4]	@ (8011b18 <_ZN8touchgfx9ConstFontC1EPKNS_9GlyphNodeEttthhhhhhtt+0x4c>)
 8011b14:	6003      	str	r3, [r0, #0]
 8011b16:	bd30      	pop	{r4, r5, pc}
 8011b18:	0802548c 	.word	0x0802548c

08011b1c <_ZNK8touchgfx9ConstFont4findEt>:
 8011b1c:	b5f0      	push	{r4, r5, r6, r7, lr}
 8011b1e:	6944      	ldr	r4, [r0, #20]
 8011b20:	b3bc      	cbz	r4, 8011b92 <_ZNK8touchgfx9ConstFont4findEt+0x76>
 8011b22:	88a3      	ldrh	r3, [r4, #4]
 8011b24:	8b02      	ldrh	r2, [r0, #24]
 8011b26:	1acb      	subs	r3, r1, r3
 8011b28:	f102 32ff 	add.w	r2, r2, #4294967295
 8011b2c:	d431      	bmi.n	8011b92 <_ZNK8touchgfx9ConstFont4findEt+0x76>
 8011b2e:	4293      	cmp	r3, r2
 8011b30:	dd0c      	ble.n	8011b4c <_ZNK8touchgfx9ConstFont4findEt+0x30>
 8011b32:	230e      	movs	r3, #14
 8011b34:	fb03 4302 	mla	r3, r3, r2, r4
 8011b38:	889b      	ldrh	r3, [r3, #4]
 8011b3a:	1a5b      	subs	r3, r3, r1
 8011b3c:	1ad3      	subs	r3, r2, r3
 8011b3e:	429a      	cmp	r2, r3
 8011b40:	db27      	blt.n	8011b92 <_ZNK8touchgfx9ConstFont4findEt+0x76>
 8011b42:	2b00      	cmp	r3, #0
 8011b44:	bfbc      	itt	lt
 8011b46:	2302      	movlt	r3, #2
 8011b48:	fb92 f3f3 	sdivlt	r3, r2, r3
 8011b4c:	2500      	movs	r5, #0
 8011b4e:	260e      	movs	r6, #14
 8011b50:	4295      	cmp	r5, r2
 8011b52:	dc1e      	bgt.n	8011b92 <_ZNK8touchgfx9ConstFont4findEt+0x76>
 8011b54:	fb06 4003 	mla	r0, r6, r3, r4
 8011b58:	8887      	ldrh	r7, [r0, #4]
 8011b5a:	42b9      	cmp	r1, r7
 8011b5c:	d01a      	beq.n	8011b94 <_ZNK8touchgfx9ConstFont4findEt+0x78>
 8011b5e:	d20d      	bcs.n	8011b7c <_ZNK8touchgfx9ConstFont4findEt+0x60>
 8011b60:	1e5a      	subs	r2, r3, #1
 8011b62:	4295      	cmp	r5, r2
 8011b64:	dc15      	bgt.n	8011b92 <_ZNK8touchgfx9ConstFont4findEt+0x76>
 8011b66:	f830 3c0a 	ldrh.w	r3, [r0, #-10]
 8011b6a:	1a5b      	subs	r3, r3, r1
 8011b6c:	1ad3      	subs	r3, r2, r3
 8011b6e:	429a      	cmp	r2, r3
 8011b70:	db0f      	blt.n	8011b92 <_ZNK8touchgfx9ConstFont4findEt+0x76>
 8011b72:	429d      	cmp	r5, r3
 8011b74:	ddec      	ble.n	8011b50 <_ZNK8touchgfx9ConstFont4findEt+0x34>
 8011b76:	1953      	adds	r3, r2, r5
 8011b78:	105b      	asrs	r3, r3, #1
 8011b7a:	e7e9      	b.n	8011b50 <_ZNK8touchgfx9ConstFont4findEt+0x34>
 8011b7c:	1c5d      	adds	r5, r3, #1
 8011b7e:	42aa      	cmp	r2, r5
 8011b80:	db07      	blt.n	8011b92 <_ZNK8touchgfx9ConstFont4findEt+0x76>
 8011b82:	8a43      	ldrh	r3, [r0, #18]
 8011b84:	1acb      	subs	r3, r1, r3
 8011b86:	442b      	add	r3, r5
 8011b88:	429d      	cmp	r5, r3
 8011b8a:	dc02      	bgt.n	8011b92 <_ZNK8touchgfx9ConstFont4findEt+0x76>
 8011b8c:	429a      	cmp	r2, r3
 8011b8e:	dadf      	bge.n	8011b50 <_ZNK8touchgfx9ConstFont4findEt+0x34>
 8011b90:	e7f1      	b.n	8011b76 <_ZNK8touchgfx9ConstFont4findEt+0x5a>
 8011b92:	2000      	movs	r0, #0
 8011b94:	bdf0      	pop	{r4, r5, r6, r7, pc}

08011b96 <_ZNK8touchgfx9ConstFont8getGlyphEtRPKhRh>:
 8011b96:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 8011b98:	4604      	mov	r4, r0
 8011b9a:	4617      	mov	r7, r2
 8011b9c:	461e      	mov	r6, r3
 8011b9e:	b911      	cbnz	r1, 8011ba6 <_ZNK8touchgfx9ConstFont8getGlyphEtRPKhRh+0x10>
 8011ba0:	2500      	movs	r5, #0
 8011ba2:	4628      	mov	r0, r5
 8011ba4:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
 8011ba6:	290a      	cmp	r1, #10
 8011ba8:	d0fa      	beq.n	8011ba0 <_ZNK8touchgfx9ConstFont8getGlyphEtRPKhRh+0xa>
 8011baa:	f64f 62ff 	movw	r2, #65279	@ 0xfeff
 8011bae:	4291      	cmp	r1, r2
 8011bb0:	d0f6      	beq.n	8011ba0 <_ZNK8touchgfx9ConstFont8getGlyphEtRPKhRh+0xa>
 8011bb2:	f242 020b 	movw	r2, #8203	@ 0x200b
 8011bb6:	4291      	cmp	r1, r2
 8011bb8:	d0f2      	beq.n	8011ba0 <_ZNK8touchgfx9ConstFont8getGlyphEtRPKhRh+0xa>
 8011bba:	f7ff ffaf 	bl	8011b1c <_ZNK8touchgfx9ConstFont4findEt>
 8011bbe:	4605      	mov	r5, r0
 8011bc0:	b950      	cbnz	r0, 8011bd8 <_ZNK8touchgfx9ConstFont8getGlyphEtRPKhRh+0x42>
 8011bc2:	6823      	ldr	r3, [r4, #0]
 8011bc4:	4620      	mov	r0, r4
 8011bc6:	691b      	ldr	r3, [r3, #16]
 8011bc8:	4798      	blx	r3
 8011bca:	4601      	mov	r1, r0
 8011bcc:	4620      	mov	r0, r4
 8011bce:	f7ff ffa5 	bl	8011b1c <_ZNK8touchgfx9ConstFont4findEt>
 8011bd2:	4605      	mov	r5, r0
 8011bd4:	2800      	cmp	r0, #0
 8011bd6:	d0e3      	beq.n	8011ba0 <_ZNK8touchgfx9ConstFont8getGlyphEtRPKhRh+0xa>
 8011bd8:	6823      	ldr	r3, [r4, #0]
 8011bda:	4629      	mov	r1, r5
 8011bdc:	6ddb      	ldr	r3, [r3, #92]	@ 0x5c
 8011bde:	4620      	mov	r0, r4
 8011be0:	4798      	blx	r3
 8011be2:	6038      	str	r0, [r7, #0]
 8011be4:	6823      	ldr	r3, [r4, #0]
 8011be6:	4620      	mov	r0, r4
 8011be8:	6bdb      	ldr	r3, [r3, #60]	@ 0x3c
 8011bea:	4798      	blx	r3
 8011bec:	7030      	strb	r0, [r6, #0]
 8011bee:	e7d8      	b.n	8011ba2 <_ZNK8touchgfx9ConstFont8getGlyphEtRPKhRh+0xc>

08011bf0 <_ZNK8touchgfx10ClickEvent12getEventTypeEv>:
 8011bf0:	2000      	movs	r0, #0
 8011bf2:	4770      	bx	lr

08011bf4 <_ZNK8touchgfx9DragEvent12getEventTypeEv>:
 8011bf4:	2001      	movs	r0, #1
 8011bf6:	4770      	bx	lr

08011bf8 <_ZNK8touchgfx12GestureEvent12getEventTypeEv>:
 8011bf8:	2002      	movs	r0, #2
 8011bfa:	4770      	bx	lr

08011bfc <_ZN8touchgfx12GestureEventD1Ev>:
 8011bfc:	4770      	bx	lr

08011bfe <_ZN8touchgfx9DragEventD1Ev>:
 8011bfe:	4770      	bx	lr

08011c00 <_ZN8touchgfx10ClickEventD1Ev>:
 8011c00:	4770      	bx	lr

08011c02 <_ZN8touchgfx10ClickEventD0Ev>:
 8011c02:	b510      	push	{r4, lr}
 8011c04:	210c      	movs	r1, #12
 8011c06:	4604      	mov	r4, r0
 8011c08:	f010 fb95 	bl	8022336 <_ZdlPvj>
 8011c0c:	4620      	mov	r0, r4
 8011c0e:	bd10      	pop	{r4, pc}

08011c10 <_ZN8touchgfx9DragEventD0Ev>:
 8011c10:	b510      	push	{r4, lr}
 8011c12:	2110      	movs	r1, #16
 8011c14:	4604      	mov	r4, r0
 8011c16:	f010 fb8e 	bl	8022336 <_ZdlPvj>
 8011c1a:	4620      	mov	r0, r4
 8011c1c:	bd10      	pop	{r4, pc}

08011c1e <_ZN8touchgfx12GestureEventD0Ev>:
 8011c1e:	b510      	push	{r4, lr}
 8011c20:	210c      	movs	r1, #12
 8011c22:	4604      	mov	r4, r0
 8011c24:	f010 fb87 	bl	8022336 <_ZdlPvj>
 8011c28:	4620      	mov	r0, r4
 8011c2a:	bd10      	pop	{r4, pc}

08011c2c <_ZN8touchgfx6Screen18handleGestureEventERKNS_12GestureEventE>:
 8011c2c:	b530      	push	{r4, r5, lr}
 8011c2e:	460d      	mov	r5, r1
 8011c30:	6b01      	ldr	r1, [r0, #48]	@ 0x30
 8011c32:	b087      	sub	sp, #28
 8011c34:	4604      	mov	r4, r0
 8011c36:	b301      	cbz	r1, 8011c7a <_ZN8touchgfx6Screen18handleGestureEventERKNS_12GestureEventE+0x4e>
 8011c38:	a801      	add	r0, sp, #4
 8011c3a:	f7ff ff35 	bl	8011aa8 <_ZNK8touchgfx8Drawable15getAbsoluteRectEv>
 8011c3e:	892a      	ldrh	r2, [r5, #8]
 8011c40:	f8bd 3004 	ldrh.w	r3, [sp, #4]
 8011c44:	7928      	ldrb	r0, [r5, #4]
 8011c46:	f9b5 1006 	ldrsh.w	r1, [r5, #6]
 8011c4a:	f88d 0010 	strb.w	r0, [sp, #16]
 8011c4e:	1ad2      	subs	r2, r2, r3
 8011c50:	8ea3      	ldrh	r3, [r4, #52]	@ 0x34
 8011c52:	6b20      	ldr	r0, [r4, #48]	@ 0x30
 8011c54:	f8ad 1012 	strh.w	r1, [sp, #18]
 8011c58:	441a      	add	r2, r3
 8011c5a:	896b      	ldrh	r3, [r5, #10]
 8011c5c:	f8bd 5006 	ldrh.w	r5, [sp, #6]
 8011c60:	f8ad 2014 	strh.w	r2, [sp, #20]
 8011c64:	1b5b      	subs	r3, r3, r5
 8011c66:	8ee5      	ldrh	r5, [r4, #54]	@ 0x36
 8011c68:	442b      	add	r3, r5
 8011c6a:	4d05      	ldr	r5, [pc, #20]	@ (8011c80 <_ZN8touchgfx6Screen18handleGestureEventERKNS_12GestureEventE+0x54>)
 8011c6c:	9503      	str	r5, [sp, #12]
 8011c6e:	f8ad 3016 	strh.w	r3, [sp, #22]
 8011c72:	6803      	ldr	r3, [r0, #0]
 8011c74:	a903      	add	r1, sp, #12
 8011c76:	6c9b      	ldr	r3, [r3, #72]	@ 0x48
 8011c78:	4798      	blx	r3
 8011c7a:	b007      	add	sp, #28
 8011c7c:	bd30      	pop	{r4, r5, pc}
 8011c7e:	bf00      	nop
 8011c80:	0802551c 	.word	0x0802551c

08011c84 <_ZN8touchgfx6Screen16handleClickEventERKNS_10ClickEventE>:
 8011c84:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 8011c88:	6b03      	ldr	r3, [r0, #48]	@ 0x30
 8011c8a:	b08a      	sub	sp, #40	@ 0x28
 8011c8c:	4604      	mov	r4, r0
 8011c8e:	460d      	mov	r5, r1
 8011c90:	b113      	cbz	r3, 8011c98 <_ZN8touchgfx6Screen16handleClickEventERKNS_10ClickEventE+0x14>
 8011c92:	790b      	ldrb	r3, [r1, #4]
 8011c94:	2b00      	cmp	r3, #0
 8011c96:	d044      	beq.n	8011d22 <_ZN8touchgfx6Screen16handleClickEventERKNS_10ClickEventE+0x9e>
 8011c98:	f104 0804 	add.w	r8, r4, #4
 8011c9c:	4641      	mov	r1, r8
 8011c9e:	a803      	add	r0, sp, #12
 8011ca0:	f7ff ff02 	bl	8011aa8 <_ZNK8touchgfx8Drawable15getAbsoluteRectEv>
 8011ca4:	792b      	ldrb	r3, [r5, #4]
 8011ca6:	f9bd 700c 	ldrsh.w	r7, [sp, #12]
 8011caa:	f9bd 600e 	ldrsh.w	r6, [sp, #14]
 8011cae:	b983      	cbnz	r3, 8011cd2 <_ZN8touchgfx6Screen16handleClickEventERKNS_10ClickEventE+0x4e>
 8011cb0:	892a      	ldrh	r2, [r5, #8]
 8011cb2:	88e9      	ldrh	r1, [r5, #6]
 8011cb4:	f104 0336 	add.w	r3, r4, #54	@ 0x36
 8011cb8:	1b92      	subs	r2, r2, r6
 8011cba:	1bc9      	subs	r1, r1, r7
 8011cbc:	9301      	str	r3, [sp, #4]
 8011cbe:	f104 0334 	add.w	r3, r4, #52	@ 0x34
 8011cc2:	9300      	str	r3, [sp, #0]
 8011cc4:	b212      	sxth	r2, r2
 8011cc6:	f104 0330 	add.w	r3, r4, #48	@ 0x30
 8011cca:	b209      	sxth	r1, r1
 8011ccc:	4640      	mov	r0, r8
 8011cce:	f7fb fa77 	bl	800d1c0 <_ZN8touchgfx9Container16getLastChildNearEssPPNS_8DrawableEPsS4_>
 8011cd2:	6b21      	ldr	r1, [r4, #48]	@ 0x30
 8011cd4:	b329      	cbz	r1, 8011d22 <_ZN8touchgfx6Screen16handleClickEventERKNS_10ClickEventE+0x9e>
 8011cd6:	a805      	add	r0, sp, #20
 8011cd8:	f7ff fee6 	bl	8011aa8 <_ZNK8touchgfx8Drawable15getAbsoluteRectEv>
 8011cdc:	f8bd 2014 	ldrh.w	r2, [sp, #20]
 8011ce0:	792b      	ldrb	r3, [r5, #4]
 8011ce2:	6b20      	ldr	r0, [r4, #48]	@ 0x30
 8011ce4:	f88d 3020 	strb.w	r3, [sp, #32]
 8011ce8:	1abf      	subs	r7, r7, r2
 8011cea:	88ea      	ldrh	r2, [r5, #6]
 8011cec:	4417      	add	r7, r2
 8011cee:	8ea2      	ldrh	r2, [r4, #52]	@ 0x34
 8011cf0:	4417      	add	r7, r2
 8011cf2:	f8bd 2016 	ldrh.w	r2, [sp, #22]
 8011cf6:	f8ad 7022 	strh.w	r7, [sp, #34]	@ 0x22
 8011cfa:	1ab6      	subs	r6, r6, r2
 8011cfc:	892a      	ldrh	r2, [r5, #8]
 8011cfe:	4416      	add	r6, r2
 8011d00:	8ee2      	ldrh	r2, [r4, #54]	@ 0x36
 8011d02:	4416      	add	r6, r2
 8011d04:	f8ad 6024 	strh.w	r6, [sp, #36]	@ 0x24
 8011d08:	4a07      	ldr	r2, [pc, #28]	@ (8011d28 <_ZN8touchgfx6Screen16handleClickEventERKNS_10ClickEventE+0xa4>)
 8011d0a:	9207      	str	r2, [sp, #28]
 8011d0c:	2600      	movs	r6, #0
 8011d0e:	f8ad 6026 	strh.w	r6, [sp, #38]	@ 0x26
 8011d12:	6803      	ldr	r3, [r0, #0]
 8011d14:	a907      	add	r1, sp, #28
 8011d16:	6c5b      	ldr	r3, [r3, #68]	@ 0x44
 8011d18:	4798      	blx	r3
 8011d1a:	792b      	ldrb	r3, [r5, #4]
 8011d1c:	b10b      	cbz	r3, 8011d22 <_ZN8touchgfx6Screen16handleClickEventERKNS_10ClickEventE+0x9e>
 8011d1e:	e9c4 660c 	strd	r6, r6, [r4, #48]	@ 0x30
 8011d22:	b00a      	add	sp, #40	@ 0x28
 8011d24:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
 8011d28:	080254f4 	.word	0x080254f4

08011d2c <_ZN8touchgfx6Screen15handleDragEventERKNS_9DragEventE>:
 8011d2c:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 8011d30:	460c      	mov	r4, r1
 8011d32:	6b01      	ldr	r1, [r0, #48]	@ 0x30
 8011d34:	b088      	sub	sp, #32
 8011d36:	4605      	mov	r5, r0
 8011d38:	2900      	cmp	r1, #0
 8011d3a:	d06d      	beq.n	8011e18 <_ZN8touchgfx6Screen15handleDragEventERKNS_9DragEventE+0xec>
 8011d3c:	4668      	mov	r0, sp
 8011d3e:	f7ff feb3 	bl	8011aa8 <_ZNK8touchgfx8Drawable15getAbsoluteRectEv>
 8011d42:	8ea9      	ldrh	r1, [r5, #52]	@ 0x34
 8011d44:	88e3      	ldrh	r3, [r4, #6]
 8011d46:	f9bd 8000 	ldrsh.w	r8, [sp]
 8011d4a:	f9bd 7002 	ldrsh.w	r7, [sp, #2]
 8011d4e:	440b      	add	r3, r1
 8011d50:	b21b      	sxth	r3, r3
 8011d52:	4543      	cmp	r3, r8
 8011d54:	db31      	blt.n	8011dba <_ZN8touchgfx6Screen15handleDragEventERKNS_9DragEventE+0x8e>
 8011d56:	f8bd c004 	ldrh.w	ip, [sp, #4]
 8011d5a:	44c4      	add	ip, r8
 8011d5c:	fa0f fc8c 	sxth.w	ip, ip
 8011d60:	4563      	cmp	r3, ip
 8011d62:	da2a      	bge.n	8011dba <_ZN8touchgfx6Screen15handleDragEventERKNS_9DragEventE+0x8e>
 8011d64:	8eea      	ldrh	r2, [r5, #54]	@ 0x36
 8011d66:	8926      	ldrh	r6, [r4, #8]
 8011d68:	4416      	add	r6, r2
 8011d6a:	b236      	sxth	r6, r6
 8011d6c:	42be      	cmp	r6, r7
 8011d6e:	db24      	blt.n	8011dba <_ZN8touchgfx6Screen15handleDragEventERKNS_9DragEventE+0x8e>
 8011d70:	f8bd 0006 	ldrh.w	r0, [sp, #6]
 8011d74:	4438      	add	r0, r7
 8011d76:	b200      	sxth	r0, r0
 8011d78:	4286      	cmp	r6, r0
 8011d7a:	da1e      	bge.n	8011dba <_ZN8touchgfx6Screen15handleDragEventERKNS_9DragEventE+0x8e>
 8011d7c:	8963      	ldrh	r3, [r4, #10]
 8011d7e:	4419      	add	r1, r3
 8011d80:	b209      	sxth	r1, r1
 8011d82:	4541      	cmp	r1, r8
 8011d84:	db08      	blt.n	8011d98 <_ZN8touchgfx6Screen15handleDragEventERKNS_9DragEventE+0x6c>
 8011d86:	4561      	cmp	r1, ip
 8011d88:	da06      	bge.n	8011d98 <_ZN8touchgfx6Screen15handleDragEventERKNS_9DragEventE+0x6c>
 8011d8a:	89a3      	ldrh	r3, [r4, #12]
 8011d8c:	441a      	add	r2, r3
 8011d8e:	b212      	sxth	r2, r2
 8011d90:	42ba      	cmp	r2, r7
 8011d92:	db01      	blt.n	8011d98 <_ZN8touchgfx6Screen15handleDragEventERKNS_9DragEventE+0x6c>
 8011d94:	4282      	cmp	r2, r0
 8011d96:	db10      	blt.n	8011dba <_ZN8touchgfx6Screen15handleDragEventERKNS_9DragEventE+0x8e>
 8011d98:	4b21      	ldr	r3, [pc, #132]	@ (8011e20 <_ZN8touchgfx6Screen15handleDragEventERKNS_9DragEventE+0xf4>)
 8011d9a:	9304      	str	r3, [sp, #16]
 8011d9c:	2302      	movs	r3, #2
 8011d9e:	f88d 3014 	strb.w	r3, [sp, #20]
 8011da2:	6b28      	ldr	r0, [r5, #48]	@ 0x30
 8011da4:	2300      	movs	r3, #0
 8011da6:	f8ad 3016 	strh.w	r3, [sp, #22]
 8011daa:	f8ad 3018 	strh.w	r3, [sp, #24]
 8011dae:	f8ad 301a 	strh.w	r3, [sp, #26]
 8011db2:	6803      	ldr	r3, [r0, #0]
 8011db4:	a904      	add	r1, sp, #16
 8011db6:	6c5b      	ldr	r3, [r3, #68]	@ 0x44
 8011db8:	4798      	blx	r3
 8011dba:	1d29      	adds	r1, r5, #4
 8011dbc:	a802      	add	r0, sp, #8
 8011dbe:	f7ff fe73 	bl	8011aa8 <_ZNK8touchgfx8Drawable15getAbsoluteRectEv>
 8011dc2:	f8bd 3008 	ldrh.w	r3, [sp, #8]
 8011dc6:	88e0      	ldrh	r0, [r4, #6]
 8011dc8:	7921      	ldrb	r1, [r4, #4]
 8011dca:	f8b5 c034 	ldrh.w	ip, [r5, #52]	@ 0x34
 8011dce:	8922      	ldrh	r2, [r4, #8]
 8011dd0:	8eee      	ldrh	r6, [r5, #54]	@ 0x36
 8011dd2:	f88d 1014 	strb.w	r1, [sp, #20]
 8011dd6:	eba3 0808 	sub.w	r8, r3, r8
 8011dda:	f8bd 300a 	ldrh.w	r3, [sp, #10]
 8011dde:	1bdf      	subs	r7, r3, r7
 8011de0:	b2bb      	uxth	r3, r7
 8011de2:	fa1f f888 	uxth.w	r8, r8
 8011de6:	8967      	ldrh	r7, [r4, #10]
 8011de8:	89a4      	ldrh	r4, [r4, #12]
 8011dea:	4440      	add	r0, r8
 8011dec:	4460      	add	r0, ip
 8011dee:	441a      	add	r2, r3
 8011df0:	44b8      	add	r8, r7
 8011df2:	4423      	add	r3, r4
 8011df4:	f8ad 0016 	strh.w	r0, [sp, #22]
 8011df8:	4433      	add	r3, r6
 8011dfa:	4432      	add	r2, r6
 8011dfc:	44e0      	add	r8, ip
 8011dfe:	4c09      	ldr	r4, [pc, #36]	@ (8011e24 <_ZN8touchgfx6Screen15handleDragEventERKNS_9DragEventE+0xf8>)
 8011e00:	6b28      	ldr	r0, [r5, #48]	@ 0x30
 8011e02:	9404      	str	r4, [sp, #16]
 8011e04:	f8ad 2018 	strh.w	r2, [sp, #24]
 8011e08:	f8ad 801a 	strh.w	r8, [sp, #26]
 8011e0c:	f8ad 301c 	strh.w	r3, [sp, #28]
 8011e10:	6803      	ldr	r3, [r0, #0]
 8011e12:	a904      	add	r1, sp, #16
 8011e14:	6cdb      	ldr	r3, [r3, #76]	@ 0x4c
 8011e16:	4798      	blx	r3
 8011e18:	b008      	add	sp, #32
 8011e1a:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
 8011e1e:	bf00      	nop
 8011e20:	080254f4 	.word	0x080254f4
 8011e24:	08025508 	.word	0x08025508

08011e28 <_ZN8touchgfx8Drawable20getCachedVisibleRectEv>:
 8011e28:	b537      	push	{r0, r1, r2, r4, r5, lr}
 8011e2a:	4604      	mov	r4, r0
 8011e2c:	f934 2f0c 	ldrsh.w	r2, [r4, #12]!
 8011e30:	3201      	adds	r2, #1
 8011e32:	d112      	bne.n	8011e5a <_ZN8touchgfx8Drawable20getCachedVisibleRectEv+0x32>
 8011e34:	6803      	ldr	r3, [r0, #0]
 8011e36:	f9b0 1008 	ldrsh.w	r1, [r0, #8]
 8011e3a:	f9b0 200a 	ldrsh.w	r2, [r0, #10]
 8011e3e:	f8ad 1004 	strh.w	r1, [sp, #4]
 8011e42:	2500      	movs	r5, #0
 8011e44:	9500      	str	r5, [sp, #0]
 8011e46:	466d      	mov	r5, sp
 8011e48:	4629      	mov	r1, r5
 8011e4a:	f8ad 2006 	strh.w	r2, [sp, #6]
 8011e4e:	6a9b      	ldr	r3, [r3, #40]	@ 0x28
 8011e50:	4798      	blx	r3
 8011e52:	e895 0003 	ldmia.w	r5, {r0, r1}
 8011e56:	e884 0003 	stmia.w	r4, {r0, r1}
 8011e5a:	4620      	mov	r0, r4
 8011e5c:	b003      	add	sp, #12
 8011e5e:	bd30      	pop	{r4, r5, pc}

08011e60 <_ZN8touchgfx8Drawable13getCachedAbsXEv>:
 8011e60:	b513      	push	{r0, r1, r4, lr}
 8011e62:	f9b0 3020 	ldrsh.w	r3, [r0, #32]
 8011e66:	3301      	adds	r3, #1
 8011e68:	4604      	mov	r4, r0
 8011e6a:	d109      	bne.n	8011e80 <_ZN8touchgfx8Drawable13getCachedAbsXEv+0x20>
 8011e6c:	4601      	mov	r1, r0
 8011e6e:	4668      	mov	r0, sp
 8011e70:	f7ff fe1a 	bl	8011aa8 <_ZNK8touchgfx8Drawable15getAbsoluteRectEv>
 8011e74:	f8bd 3000 	ldrh.w	r3, [sp]
 8011e78:	8423      	strh	r3, [r4, #32]
 8011e7a:	f8bd 3002 	ldrh.w	r3, [sp, #2]
 8011e7e:	8463      	strh	r3, [r4, #34]	@ 0x22
 8011e80:	f9b4 0020 	ldrsh.w	r0, [r4, #32]
 8011e84:	b002      	add	sp, #8
 8011e86:	bd10      	pop	{r4, pc}

08011e88 <_ZN8touchgfx8Drawable13getCachedAbsYEv>:
 8011e88:	b513      	push	{r0, r1, r4, lr}
 8011e8a:	f9b0 3022 	ldrsh.w	r3, [r0, #34]	@ 0x22
 8011e8e:	3301      	adds	r3, #1
 8011e90:	4604      	mov	r4, r0
 8011e92:	d109      	bne.n	8011ea8 <_ZN8touchgfx8Drawable13getCachedAbsYEv+0x20>
 8011e94:	4601      	mov	r1, r0
 8011e96:	4668      	mov	r0, sp
 8011e98:	f7ff fe06 	bl	8011aa8 <_ZNK8touchgfx8Drawable15getAbsoluteRectEv>
 8011e9c:	f8bd 3000 	ldrh.w	r3, [sp]
 8011ea0:	8423      	strh	r3, [r4, #32]
 8011ea2:	f8bd 3002 	ldrh.w	r3, [sp, #2]
 8011ea6:	8463      	strh	r3, [r4, #34]	@ 0x22
 8011ea8:	f9b4 0022 	ldrsh.w	r0, [r4, #34]	@ 0x22
 8011eac:	b002      	add	sp, #8
 8011eae:	bd10      	pop	{r4, pc}

08011eb0 <_ZN8touchgfx6ScreenC1Ev>:
 8011eb0:	b570      	push	{r4, r5, r6, lr}
 8011eb2:	4605      	mov	r5, r0
 8011eb4:	4b16      	ldr	r3, [pc, #88]	@ (8011f10 <_ZN8touchgfx6ScreenC1Ev+0x60>)
 8011eb6:	f845 3b04 	str.w	r3, [r5], #4
 8011eba:	2300      	movs	r3, #0
 8011ebc:	8103      	strh	r3, [r0, #8]
 8011ebe:	8143      	strh	r3, [r0, #10]
 8011ec0:	8183      	strh	r3, [r0, #12]
 8011ec2:	81c3      	strh	r3, [r0, #14]
 8011ec4:	8203      	strh	r3, [r0, #16]
 8011ec6:	8243      	strh	r3, [r0, #18]
 8011ec8:	8283      	strh	r3, [r0, #20]
 8011eca:	82c3      	strh	r3, [r0, #22]
 8011ecc:	e9c0 3306 	strd	r3, r3, [r0, #24]
 8011ed0:	6203      	str	r3, [r0, #32]
 8011ed2:	8483      	strh	r3, [r0, #36]	@ 0x24
 8011ed4:	84c3      	strh	r3, [r0, #38]	@ 0x26
 8011ed6:	f880 3028 	strb.w	r3, [r0, #40]	@ 0x28
 8011eda:	4a0e      	ldr	r2, [pc, #56]	@ (8011f14 <_ZN8touchgfx6ScreenC1Ev+0x64>)
 8011edc:	6343      	str	r3, [r0, #52]	@ 0x34
 8011ede:	e9c0 330b 	strd	r3, r3, [r0, #44]	@ 0x2c
 8011ee2:	4b0d      	ldr	r3, [pc, #52]	@ (8011f18 <_ZN8touchgfx6ScreenC1Ev+0x68>)
 8011ee4:	6042      	str	r2, [r0, #4]
 8011ee6:	f9b3 6000 	ldrsh.w	r6, [r3]
 8011eea:	6b93      	ldr	r3, [r2, #56]	@ 0x38
 8011eec:	4a0b      	ldr	r2, [pc, #44]	@ (8011f1c <_ZN8touchgfx6ScreenC1Ev+0x6c>)
 8011eee:	4604      	mov	r4, r0
 8011ef0:	2101      	movs	r1, #1
 8011ef2:	f880 1029 	strb.w	r1, [r0, #41]	@ 0x29
 8011ef6:	f880 1038 	strb.w	r1, [r0, #56]	@ 0x38
 8011efa:	f9b2 1000 	ldrsh.w	r1, [r2]
 8011efe:	4628      	mov	r0, r5
 8011f00:	4798      	blx	r3
 8011f02:	6863      	ldr	r3, [r4, #4]
 8011f04:	4628      	mov	r0, r5
 8011f06:	6bdb      	ldr	r3, [r3, #60]	@ 0x3c
 8011f08:	4631      	mov	r1, r6
 8011f0a:	4798      	blx	r3
 8011f0c:	4620      	mov	r0, r4
 8011f0e:	bd70      	pop	{r4, r5, r6, pc}
 8011f10:	08025530 	.word	0x08025530
 8011f14:	08024e44 	.word	0x08024e44
 8011f18:	20002db2 	.word	0x20002db2
 8011f1c:	20002db0 	.word	0x20002db0

08011f20 <_ZN8touchgfx6Screen4drawEv>:
 8011f20:	b507      	push	{r0, r1, r2, lr}
 8011f22:	4b09      	ldr	r3, [pc, #36]	@ (8011f48 <_ZN8touchgfx6Screen4drawEv+0x28>)
 8011f24:	f9b3 2000 	ldrsh.w	r2, [r3]
 8011f28:	4b08      	ldr	r3, [pc, #32]	@ (8011f4c <_ZN8touchgfx6Screen4drawEv+0x2c>)
 8011f2a:	f8ad 2004 	strh.w	r2, [sp, #4]
 8011f2e:	f9b3 3000 	ldrsh.w	r3, [r3]
 8011f32:	f8ad 3006 	strh.w	r3, [sp, #6]
 8011f36:	6803      	ldr	r3, [r0, #0]
 8011f38:	2100      	movs	r1, #0
 8011f3a:	9100      	str	r1, [sp, #0]
 8011f3c:	689b      	ldr	r3, [r3, #8]
 8011f3e:	4669      	mov	r1, sp
 8011f40:	4798      	blx	r3
 8011f42:	b003      	add	sp, #12
 8011f44:	f85d fb04 	ldr.w	pc, [sp], #4
 8011f48:	20002db0 	.word	0x20002db0
 8011f4c:	20002db2 	.word	0x20002db2

08011f50 <_ZN8touchgfx6Screen5JSMOCERKNS_4RectEPNS_8DrawableE>:
 8011f50:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8011f54:	f9b1 3004 	ldrsh.w	r3, [r1, #4]
 8011f58:	2b00      	cmp	r3, #0
 8011f5a:	b089      	sub	sp, #36	@ 0x24
 8011f5c:	4680      	mov	r8, r0
 8011f5e:	460c      	mov	r4, r1
 8011f60:	4615      	mov	r5, r2
 8011f62:	dd0e      	ble.n	8011f82 <_ZN8touchgfx6Screen5JSMOCERKNS_4RectEPNS_8DrawableE+0x32>
 8011f64:	f9b1 3006 	ldrsh.w	r3, [r1, #6]
 8011f68:	2b00      	cmp	r3, #0
 8011f6a:	dd0a      	ble.n	8011f82 <_ZN8touchgfx6Screen5JSMOCERKNS_4RectEPNS_8DrawableE+0x32>
 8011f6c:	4628      	mov	r0, r5
 8011f6e:	f7ff ff5b 	bl	8011e28 <_ZN8touchgfx8Drawable20getCachedVisibleRectEv>
 8011f72:	4621      	mov	r1, r4
 8011f74:	f7fe fba8 	bl	80106c8 <_ZNK8touchgfx4Rect9intersectERKS0_>
 8011f78:	69eb      	ldr	r3, [r5, #28]
 8011f7a:	b928      	cbnz	r0, 8011f88 <_ZN8touchgfx6Screen5JSMOCERKNS_4RectEPNS_8DrawableE+0x38>
 8011f7c:	461d      	mov	r5, r3
 8011f7e:	2b00      	cmp	r3, #0
 8011f80:	d1f4      	bne.n	8011f6c <_ZN8touchgfx6Screen5JSMOCERKNS_4RectEPNS_8DrawableE+0x1c>
 8011f82:	b009      	add	sp, #36	@ 0x24
 8011f84:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 8011f88:	ae04      	add	r6, sp, #16
 8011f8a:	2b00      	cmp	r3, #0
 8011f8c:	f000 80b5 	beq.w	80120fa <_ZN8touchgfx6Screen5JSMOCERKNS_4RectEPNS_8DrawableE+0x1aa>
 8011f90:	682b      	ldr	r3, [r5, #0]
 8011f92:	4629      	mov	r1, r5
 8011f94:	68db      	ldr	r3, [r3, #12]
 8011f96:	a802      	add	r0, sp, #8
 8011f98:	4798      	blx	r3
 8011f9a:	4628      	mov	r0, r5
 8011f9c:	f7ff ff60 	bl	8011e60 <_ZN8touchgfx8Drawable13getCachedAbsXEv>
 8011fa0:	f8bd 7008 	ldrh.w	r7, [sp, #8]
 8011fa4:	4407      	add	r7, r0
 8011fa6:	4628      	mov	r0, r5
 8011fa8:	f7ff ff6e 	bl	8011e88 <_ZN8touchgfx8Drawable13getCachedAbsYEv>
 8011fac:	f8bd 300a 	ldrh.w	r3, [sp, #10]
 8011fb0:	f9bd 200c 	ldrsh.w	r2, [sp, #12]
 8011fb4:	f8ad 2014 	strh.w	r2, [sp, #20]
 8011fb8:	4418      	add	r0, r3
 8011fba:	4621      	mov	r1, r4
 8011fbc:	f9bd 300e 	ldrsh.w	r3, [sp, #14]
 8011fc0:	f8ad 0012 	strh.w	r0, [sp, #18]
 8011fc4:	b23f      	sxth	r7, r7
 8011fc6:	4630      	mov	r0, r6
 8011fc8:	f8ad 3016 	strh.w	r3, [sp, #22]
 8011fcc:	f8ad 7010 	strh.w	r7, [sp, #16]
 8011fd0:	f7fb f9da 	bl	800d388 <_ZN8touchgfx4RectaNERKS0_>
 8011fd4:	4628      	mov	r0, r5
 8011fd6:	f7ff ff27 	bl	8011e28 <_ZN8touchgfx8Drawable20getCachedVisibleRectEv>
 8011fda:	4602      	mov	r2, r0
 8011fdc:	e896 0003 	ldmia.w	r6, {r0, r1}
 8011fe0:	ab06      	add	r3, sp, #24
 8011fe2:	e883 0003 	stmia.w	r3, {r0, r1}
 8011fe6:	4611      	mov	r1, r2
 8011fe8:	4618      	mov	r0, r3
 8011fea:	f7fb f9cd 	bl	800d388 <_ZN8touchgfx4RectaNERKS0_>
 8011fee:	f9bd 3018 	ldrsh.w	r3, [sp, #24]
 8011ff2:	f9b4 1000 	ldrsh.w	r1, [r4]
 8011ff6:	f9bd a01a 	ldrsh.w	sl, [sp, #26]
 8011ffa:	f9bd b01c 	ldrsh.w	fp, [sp, #28]
 8011ffe:	f9bd 901e 	ldrsh.w	r9, [sp, #30]
 8012002:	4299      	cmp	r1, r3
 8012004:	d10b      	bne.n	801201e <_ZN8touchgfx6Screen5JSMOCERKNS_4RectEPNS_8DrawableE+0xce>
 8012006:	f9b4 2002 	ldrsh.w	r2, [r4, #2]
 801200a:	4552      	cmp	r2, sl
 801200c:	d107      	bne.n	801201e <_ZN8touchgfx6Screen5JSMOCERKNS_4RectEPNS_8DrawableE+0xce>
 801200e:	f9b4 2004 	ldrsh.w	r2, [r4, #4]
 8012012:	455a      	cmp	r2, fp
 8012014:	d103      	bne.n	801201e <_ZN8touchgfx6Screen5JSMOCERKNS_4RectEPNS_8DrawableE+0xce>
 8012016:	f9b4 2006 	ldrsh.w	r2, [r4, #6]
 801201a:	454a      	cmp	r2, r9
 801201c:	d06d      	beq.n	80120fa <_ZN8touchgfx6Screen5JSMOCERKNS_4RectEPNS_8DrawableE+0x1aa>
 801201e:	f1bb 0f00 	cmp.w	fp, #0
 8012022:	dd65      	ble.n	80120f0 <_ZN8touchgfx6Screen5JSMOCERKNS_4RectEPNS_8DrawableE+0x1a0>
 8012024:	f1b9 0f00 	cmp.w	r9, #0
 8012028:	dd62      	ble.n	80120f0 <_ZN8touchgfx6Screen5JSMOCERKNS_4RectEPNS_8DrawableE+0x1a0>
 801202a:	f9b4 2002 	ldrsh.w	r2, [r4, #2]
 801202e:	fa1f f08a 	uxth.w	r0, sl
 8012032:	4552      	cmp	r2, sl
 8012034:	9000      	str	r0, [sp, #0]
 8012036:	da12      	bge.n	801205e <_ZN8touchgfx6Screen5JSMOCERKNS_4RectEPNS_8DrawableE+0x10e>
 8012038:	9301      	str	r3, [sp, #4]
 801203a:	9b00      	ldr	r3, [sp, #0]
 801203c:	f9b4 0004 	ldrsh.w	r0, [r4, #4]
 8012040:	f8ad 2012 	strh.w	r2, [sp, #18]
 8012044:	1a9a      	subs	r2, r3, r2
 8012046:	f8ad 1010 	strh.w	r1, [sp, #16]
 801204a:	f8ad 0014 	strh.w	r0, [sp, #20]
 801204e:	f8ad 2016 	strh.w	r2, [sp, #22]
 8012052:	69ea      	ldr	r2, [r5, #28]
 8012054:	4631      	mov	r1, r6
 8012056:	4640      	mov	r0, r8
 8012058:	f7ff ff7a 	bl	8011f50 <_ZN8touchgfx6Screen5JSMOCERKNS_4RectEPNS_8DrawableE>
 801205c:	9b01      	ldr	r3, [sp, #4]
 801205e:	f9b4 2000 	ldrsh.w	r2, [r4]
 8012062:	429a      	cmp	r2, r3
 8012064:	b29f      	uxth	r7, r3
 8012066:	da0d      	bge.n	8012084 <_ZN8touchgfx6Screen5JSMOCERKNS_4RectEPNS_8DrawableE+0x134>
 8012068:	f8ad 2010 	strh.w	r2, [sp, #16]
 801206c:	1aba      	subs	r2, r7, r2
 801206e:	f8ad a012 	strh.w	sl, [sp, #18]
 8012072:	f8ad 2014 	strh.w	r2, [sp, #20]
 8012076:	f8ad 9016 	strh.w	r9, [sp, #22]
 801207a:	69ea      	ldr	r2, [r5, #28]
 801207c:	4631      	mov	r1, r6
 801207e:	4640      	mov	r0, r8
 8012080:	f7ff ff66 	bl	8011f50 <_ZN8touchgfx6Screen5JSMOCERKNS_4RectEPNS_8DrawableE>
 8012084:	8822      	ldrh	r2, [r4, #0]
 8012086:	88a3      	ldrh	r3, [r4, #4]
 8012088:	445f      	add	r7, fp
 801208a:	4413      	add	r3, r2
 801208c:	b29b      	uxth	r3, r3
 801208e:	b2bf      	uxth	r7, r7
 8012090:	b23a      	sxth	r2, r7
 8012092:	b219      	sxth	r1, r3
 8012094:	4291      	cmp	r1, r2
 8012096:	dd0d      	ble.n	80120b4 <_ZN8touchgfx6Screen5JSMOCERKNS_4RectEPNS_8DrawableE+0x164>
 8012098:	1bdb      	subs	r3, r3, r7
 801209a:	f8ad 2010 	strh.w	r2, [sp, #16]
 801209e:	f8ad a012 	strh.w	sl, [sp, #18]
 80120a2:	f8ad 3014 	strh.w	r3, [sp, #20]
 80120a6:	f8ad 9016 	strh.w	r9, [sp, #22]
 80120aa:	69ea      	ldr	r2, [r5, #28]
 80120ac:	4631      	mov	r1, r6
 80120ae:	4640      	mov	r0, r8
 80120b0:	f7ff ff4e 	bl	8011f50 <_ZN8touchgfx6Screen5JSMOCERKNS_4RectEPNS_8DrawableE>
 80120b4:	88e2      	ldrh	r2, [r4, #6]
 80120b6:	8863      	ldrh	r3, [r4, #2]
 80120b8:	4413      	add	r3, r2
 80120ba:	9a00      	ldr	r2, [sp, #0]
 80120bc:	444a      	add	r2, r9
 80120be:	b29b      	uxth	r3, r3
 80120c0:	fa1f f982 	uxth.w	r9, r2
 80120c4:	fa0f f289 	sxth.w	r2, r9
 80120c8:	b219      	sxth	r1, r3
 80120ca:	428a      	cmp	r2, r1
 80120cc:	da15      	bge.n	80120fa <_ZN8touchgfx6Screen5JSMOCERKNS_4RectEPNS_8DrawableE+0x1aa>
 80120ce:	f9b4 1004 	ldrsh.w	r1, [r4, #4]
 80120d2:	f9b4 0000 	ldrsh.w	r0, [r4]
 80120d6:	f8ad 1014 	strh.w	r1, [sp, #20]
 80120da:	eba3 0309 	sub.w	r3, r3, r9
 80120de:	f8ad 0010 	strh.w	r0, [sp, #16]
 80120e2:	f8ad 2012 	strh.w	r2, [sp, #18]
 80120e6:	f8ad 3016 	strh.w	r3, [sp, #22]
 80120ea:	69ea      	ldr	r2, [r5, #28]
 80120ec:	4631      	mov	r1, r6
 80120ee:	e001      	b.n	80120f4 <_ZN8touchgfx6Screen5JSMOCERKNS_4RectEPNS_8DrawableE+0x1a4>
 80120f0:	69ea      	ldr	r2, [r5, #28]
 80120f2:	4621      	mov	r1, r4
 80120f4:	4640      	mov	r0, r8
 80120f6:	f7ff ff2b 	bl	8011f50 <_ZN8touchgfx6Screen5JSMOCERKNS_4RectEPNS_8DrawableE>
 80120fa:	4628      	mov	r0, r5
 80120fc:	f7ff fe94 	bl	8011e28 <_ZN8touchgfx8Drawable20getCachedVisibleRectEv>
 8012100:	6861      	ldr	r1, [r4, #4]
 8012102:	4602      	mov	r2, r0
 8012104:	6820      	ldr	r0, [r4, #0]
 8012106:	4633      	mov	r3, r6
 8012108:	c303      	stmia	r3!, {r0, r1}
 801210a:	4611      	mov	r1, r2
 801210c:	4630      	mov	r0, r6
 801210e:	f7fb f93b 	bl	800d388 <_ZN8touchgfx4RectaNERKS0_>
 8012112:	f9bd 3014 	ldrsh.w	r3, [sp, #20]
 8012116:	2b00      	cmp	r3, #0
 8012118:	f77f af33 	ble.w	8011f82 <_ZN8touchgfx6Screen5JSMOCERKNS_4RectEPNS_8DrawableE+0x32>
 801211c:	f9bd 3016 	ldrsh.w	r3, [sp, #22]
 8012120:	2b00      	cmp	r3, #0
 8012122:	f77f af2e 	ble.w	8011f82 <_ZN8touchgfx6Screen5JSMOCERKNS_4RectEPNS_8DrawableE+0x32>
 8012126:	4628      	mov	r0, r5
 8012128:	f7ff fe9a 	bl	8011e60 <_ZN8touchgfx8Drawable13getCachedAbsXEv>
 801212c:	f8bd 3010 	ldrh.w	r3, [sp, #16]
 8012130:	1a18      	subs	r0, r3, r0
 8012132:	f8ad 0010 	strh.w	r0, [sp, #16]
 8012136:	4628      	mov	r0, r5
 8012138:	f7ff fea6 	bl	8011e88 <_ZN8touchgfx8Drawable13getCachedAbsYEv>
 801213c:	f8bd 3012 	ldrh.w	r3, [sp, #18]
 8012140:	1a18      	subs	r0, r3, r0
 8012142:	f8ad 0012 	strh.w	r0, [sp, #18]
 8012146:	682b      	ldr	r3, [r5, #0]
 8012148:	4631      	mov	r1, r6
 801214a:	689b      	ldr	r3, [r3, #8]
 801214c:	4628      	mov	r0, r5
 801214e:	4798      	blx	r3
 8012150:	e717      	b.n	8011f82 <_ZN8touchgfx6Screen5JSMOCERKNS_4RectEPNS_8DrawableE+0x32>

08012152 <_ZN8touchgfx6Screen9startSMOCERKNS_4RectE>:
 8012152:	b570      	push	{r4, r5, r6, lr}
 8012154:	460c      	mov	r4, r1
 8012156:	b086      	sub	sp, #24
 8012158:	1d06      	adds	r6, r0, #4
 801215a:	2300      	movs	r3, #0
 801215c:	4631      	mov	r1, r6
 801215e:	4605      	mov	r5, r0
 8012160:	a802      	add	r0, sp, #8
 8012162:	9301      	str	r3, [sp, #4]
 8012164:	f7ff fca0 	bl	8011aa8 <_ZNK8touchgfx8Drawable15getAbsoluteRectEv>
 8012168:	f8bd 3008 	ldrh.w	r3, [sp, #8]
 801216c:	8822      	ldrh	r2, [r4, #0]
 801216e:	f8bd 100a 	ldrh.w	r1, [sp, #10]
 8012172:	f9b4 0004 	ldrsh.w	r0, [r4, #4]
 8012176:	f8ad 0014 	strh.w	r0, [sp, #20]
 801217a:	1ad2      	subs	r2, r2, r3
 801217c:	8863      	ldrh	r3, [r4, #2]
 801217e:	f8ad 2010 	strh.w	r2, [sp, #16]
 8012182:	1a5b      	subs	r3, r3, r1
 8012184:	f9b4 1006 	ldrsh.w	r1, [r4, #6]
 8012188:	f8ad 1016 	strh.w	r1, [sp, #22]
 801218c:	aa01      	add	r2, sp, #4
 801218e:	a904      	add	r1, sp, #16
 8012190:	4630      	mov	r0, r6
 8012192:	f8ad 3012 	strh.w	r3, [sp, #18]
 8012196:	f7fb f9cf 	bl	800d538 <_ZN8touchgfx9Container14setupDrawChainERKNS_4RectEPPNS_8DrawableE>
 801219a:	9a01      	ldr	r2, [sp, #4]
 801219c:	b11a      	cbz	r2, 80121a6 <_ZN8touchgfx6Screen9startSMOCERKNS_4RectE+0x54>
 801219e:	4621      	mov	r1, r4
 80121a0:	4628      	mov	r0, r5
 80121a2:	f7ff fed5 	bl	8011f50 <_ZN8touchgfx6Screen5JSMOCERKNS_4RectEPNS_8DrawableE>
 80121a6:	b006      	add	sp, #24
 80121a8:	bd70      	pop	{r4, r5, r6, pc}

080121aa <_ZN8touchgfx6Screen4drawERNS_4RectE>:
 80121aa:	b530      	push	{r4, r5, lr}
 80121ac:	4602      	mov	r2, r0
 80121ae:	4604      	mov	r4, r0
 80121b0:	f852 0f08 	ldr.w	r0, [r2, #8]!
 80121b4:	b085      	sub	sp, #20
 80121b6:	460d      	mov	r5, r1
 80121b8:	6851      	ldr	r1, [r2, #4]
 80121ba:	466b      	mov	r3, sp
 80121bc:	c303      	stmia	r3!, {r0, r1}
 80121be:	4629      	mov	r1, r5
 80121c0:	4668      	mov	r0, sp
 80121c2:	f7fb f8e1 	bl	800d388 <_ZN8touchgfx4RectaNERKS0_>
 80121c6:	f894 3038 	ldrb.w	r3, [r4, #56]	@ 0x38
 80121ca:	b12b      	cbz	r3, 80121d8 <_ZN8touchgfx6Screen4drawERNS_4RectE+0x2e>
 80121cc:	4669      	mov	r1, sp
 80121ce:	4620      	mov	r0, r4
 80121d0:	f7ff ffbf 	bl	8012152 <_ZN8touchgfx6Screen9startSMOCERKNS_4RectE>
 80121d4:	b005      	add	sp, #20
 80121d6:	bd30      	pop	{r4, r5, pc}
 80121d8:	3404      	adds	r4, #4
 80121da:	4621      	mov	r1, r4
 80121dc:	a802      	add	r0, sp, #8
 80121de:	f7ff fc63 	bl	8011aa8 <_ZNK8touchgfx8Drawable15getAbsoluteRectEv>
 80121e2:	f8bd 3000 	ldrh.w	r3, [sp]
 80121e6:	f8bd 2008 	ldrh.w	r2, [sp, #8]
 80121ea:	1a9b      	subs	r3, r3, r2
 80121ec:	f8ad 3000 	strh.w	r3, [sp]
 80121f0:	f8bd 200a 	ldrh.w	r2, [sp, #10]
 80121f4:	f8bd 3002 	ldrh.w	r3, [sp, #2]
 80121f8:	4669      	mov	r1, sp
 80121fa:	1a9b      	subs	r3, r3, r2
 80121fc:	4620      	mov	r0, r4
 80121fe:	f8ad 3002 	strh.w	r3, [sp, #2]
 8012202:	f7fb f960 	bl	800d4c6 <_ZNK8touchgfx9Container4drawERKNS_4RectE>
 8012206:	e7e5      	b.n	80121d4 <_ZN8touchgfx6Screen4drawERNS_4RectE+0x2a>

08012208 <_ZN8touchgfx6Screen14bindTransitionERNS_10TransitionE>:
 8012208:	680a      	ldr	r2, [r1, #0]
 801220a:	460b      	mov	r3, r1
 801220c:	6992      	ldr	r2, [r2, #24]
 801220e:	1d01      	adds	r1, r0, #4
 8012210:	4618      	mov	r0, r3
 8012212:	4710      	bx	r2

08012214 <_ZN8touchgfx12TextProviderC1Ev>:
 8012214:	b538      	push	{r3, r4, r5, lr}
 8012216:	2500      	movs	r5, #0
 8012218:	2302      	movs	r3, #2
 801221a:	4604      	mov	r4, r0
 801221c:	e9c0 5500 	strd	r5, r5, [r0]
 8012220:	7403      	strb	r3, [r0, #16]
 8012222:	6145      	str	r5, [r0, #20]
 8012224:	7605      	strb	r5, [r0, #24]
 8012226:	83c5      	strh	r5, [r0, #30]
 8012228:	8405      	strh	r5, [r0, #32]
 801222a:	86c5      	strh	r5, [r0, #54]	@ 0x36
 801222c:	8705      	strh	r5, [r0, #56]	@ 0x38
 801222e:	87c5      	strh	r5, [r0, #62]	@ 0x3e
 8012230:	f8a0 5040 	strh.w	r5, [r0, #64]	@ 0x40
 8012234:	e9c0 5511 	strd	r5, r5, [r0, #68]	@ 0x44
 8012238:	220e      	movs	r2, #14
 801223a:	4629      	mov	r1, r5
 801223c:	304c      	adds	r0, #76	@ 0x4c
 801223e:	f010 fb2e 	bl	802289e <memset>
 8012242:	2301      	movs	r3, #1
 8012244:	4620      	mov	r0, r4
 8012246:	f8a4 505a 	strh.w	r5, [r4, #90]	@ 0x5a
 801224a:	f8a4 505c 	strh.w	r5, [r4, #92]	@ 0x5c
 801224e:	f8a4 505e 	strh.w	r5, [r4, #94]	@ 0x5e
 8012252:	f884 3060 	strb.w	r3, [r4, #96]	@ 0x60
 8012256:	f884 5061 	strb.w	r5, [r4, #97]	@ 0x61
 801225a:	f7f8 fb3b 	bl	800a8d4 <_ZN8touchgfx12TextProvider18initializeInternalEv>
 801225e:	4620      	mov	r0, r4
 8012260:	bd38      	pop	{r3, r4, r5, pc}

08012262 <_ZN8touchgfx12TextProvider11endOfStringEv>:
 8012262:	8ec3      	ldrh	r3, [r0, #54]	@ 0x36
 8012264:	eb00 0043 	add.w	r0, r0, r3, lsl #1
 8012268:	8c40      	ldrh	r0, [r0, #34]	@ 0x22
 801226a:	fab0 f080 	clz	r0, r0
 801226e:	0940      	lsrs	r0, r0, #5
 8012270:	4770      	bx	lr

08012272 <_ZN8touchgfx12TextProvider19getNextCharInternalEv>:
 8012272:	b530      	push	{r4, r5, lr}
 8012274:	2500      	movs	r5, #0
 8012276:	2401      	movs	r4, #1
 8012278:	6843      	ldr	r3, [r0, #4]
 801227a:	b913      	cbnz	r3, 8012282 <_ZN8touchgfx12TextProvider19getNextCharInternalEv+0x10>
 801227c:	6803      	ldr	r3, [r0, #0]
 801227e:	b313      	cbz	r3, 80122c6 <_ZN8touchgfx12TextProvider19getNextCharInternalEv+0x54>
 8012280:	6043      	str	r3, [r0, #4]
 8012282:	7e03      	ldrb	r3, [r0, #24]
 8012284:	b143      	cbz	r3, 8012298 <_ZN8touchgfx12TextProvider19getNextCharInternalEv+0x26>
 8012286:	6943      	ldr	r3, [r0, #20]
 8012288:	b12b      	cbz	r3, 8012296 <_ZN8touchgfx12TextProvider19getNextCharInternalEv+0x24>
 801228a:	881a      	ldrh	r2, [r3, #0]
 801228c:	b11a      	cbz	r2, 8012296 <_ZN8touchgfx12TextProvider19getNextCharInternalEv+0x24>
 801228e:	1c9a      	adds	r2, r3, #2
 8012290:	6142      	str	r2, [r0, #20]
 8012292:	8818      	ldrh	r0, [r3, #0]
 8012294:	bd30      	pop	{r4, r5, pc}
 8012296:	7605      	strb	r5, [r0, #24]
 8012298:	6843      	ldr	r3, [r0, #4]
 801229a:	8819      	ldrh	r1, [r3, #0]
 801229c:	b199      	cbz	r1, 80122c6 <_ZN8touchgfx12TextProvider19getNextCharInternalEv+0x54>
 801229e:	1c9a      	adds	r2, r3, #2
 80122a0:	2902      	cmp	r1, #2
 80122a2:	6042      	str	r2, [r0, #4]
 80122a4:	d1f5      	bne.n	8012292 <_ZN8touchgfx12TextProvider19getNextCharInternalEv+0x20>
 80122a6:	7c03      	ldrb	r3, [r0, #16]
 80122a8:	2b01      	cmp	r3, #1
 80122aa:	d8e5      	bhi.n	8012278 <_ZN8touchgfx12TextProvider19getNextCharInternalEv+0x6>
 80122ac:	1c5a      	adds	r2, r3, #1
 80122ae:	3302      	adds	r3, #2
 80122b0:	7402      	strb	r2, [r0, #16]
 80122b2:	f850 3023 	ldr.w	r3, [r0, r3, lsl #2]
 80122b6:	6143      	str	r3, [r0, #20]
 80122b8:	2b00      	cmp	r3, #0
 80122ba:	d0dd      	beq.n	8012278 <_ZN8touchgfx12TextProvider19getNextCharInternalEv+0x6>
 80122bc:	881b      	ldrh	r3, [r3, #0]
 80122be:	2b00      	cmp	r3, #0
 80122c0:	d0da      	beq.n	8012278 <_ZN8touchgfx12TextProvider19getNextCharInternalEv+0x6>
 80122c2:	7604      	strb	r4, [r0, #24]
 80122c4:	e7d8      	b.n	8012278 <_ZN8touchgfx12TextProvider19getNextCharInternalEv+0x6>
 80122c6:	2000      	movs	r0, #0
 80122c8:	e7e4      	b.n	8012294 <_ZN8touchgfx12TextProvider19getNextCharInternalEv+0x22>

080122ca <_ZN8touchgfx12TextProvider10initializeEPKtSt9__va_listS2_PKNS_24FontContextualFormsTableE>:
 80122ca:	b430      	push	{r4, r5}
 80122cc:	6001      	str	r1, [r0, #0]
 80122ce:	2100      	movs	r1, #0
 80122d0:	6041      	str	r1, [r0, #4]
 80122d2:	6815      	ldr	r5, [r2, #0]
 80122d4:	6085      	str	r5, [r0, #8]
 80122d6:	6852      	ldr	r2, [r2, #4]
 80122d8:	6443      	str	r3, [r0, #68]	@ 0x44
 80122da:	9b02      	ldr	r3, [sp, #8]
 80122dc:	60c2      	str	r2, [r0, #12]
 80122de:	7401      	strb	r1, [r0, #16]
 80122e0:	6141      	str	r1, [r0, #20]
 80122e2:	7601      	strb	r1, [r0, #24]
 80122e4:	8701      	strh	r1, [r0, #56]	@ 0x38
 80122e6:	8401      	strh	r1, [r0, #32]
 80122e8:	f8a0 1040 	strh.w	r1, [r0, #64]	@ 0x40
 80122ec:	6483      	str	r3, [r0, #72]	@ 0x48
 80122ee:	bc30      	pop	{r4, r5}
 80122f0:	f7f8 baf0 	b.w	800a8d4 <_ZN8touchgfx12TextProvider18initializeInternalEv>

080122f4 <_ZN8touchgfx12TextProvider10initializeEPKtS2_PKNS_24FontContextualFormsTableEz>:
 80122f4:	b408      	push	{r3}
 80122f6:	b510      	push	{r4, lr}
 80122f8:	b085      	sub	sp, #20
 80122fa:	ac07      	add	r4, sp, #28
 80122fc:	f854 3b04 	ldr.w	r3, [r4], #4
 8012300:	9300      	str	r3, [sp, #0]
 8012302:	4613      	mov	r3, r2
 8012304:	4622      	mov	r2, r4
 8012306:	9403      	str	r4, [sp, #12]
 8012308:	f7ff ffdf 	bl	80122ca <_ZN8touchgfx12TextProvider10initializeEPKtSt9__va_listS2_PKNS_24FontContextualFormsTableE>
 801230c:	b005      	add	sp, #20
 801230e:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
 8012312:	b001      	add	sp, #4
 8012314:	4770      	bx	lr

08012316 <_ZN8touchgfx12TextProvider16adjustHindiGlyphEPKNS_9GlyphNodeE>:
 8012316:	b5f0      	push	{r4, r5, r6, r7, lr}
 8012318:	4605      	mov	r5, r0
 801231a:	4608      	mov	r0, r1
 801231c:	b1e9      	cbz	r1, 801235a <_ZN8touchgfx12TextProvider16adjustHindiGlyphEPKNS_9GlyphNodeE+0x44>
 801231e:	f105 044c 	add.w	r4, r5, #76	@ 0x4c
 8012322:	460b      	mov	r3, r1
 8012324:	f101 0708 	add.w	r7, r1, #8
 8012328:	4622      	mov	r2, r4
 801232a:	6818      	ldr	r0, [r3, #0]
 801232c:	6859      	ldr	r1, [r3, #4]
 801232e:	4626      	mov	r6, r4
 8012330:	c603      	stmia	r6!, {r0, r1}
 8012332:	3308      	adds	r3, #8
 8012334:	42bb      	cmp	r3, r7
 8012336:	4634      	mov	r4, r6
 8012338:	d1f7      	bne.n	801232a <_ZN8touchgfx12TextProvider16adjustHindiGlyphEPKNS_9GlyphNodeE+0x14>
 801233a:	6818      	ldr	r0, [r3, #0]
 801233c:	6030      	str	r0, [r6, #0]
 801233e:	889b      	ldrh	r3, [r3, #4]
 8012340:	80b3      	strh	r3, [r6, #4]
 8012342:	f895 3059 	ldrb.w	r3, [r5, #89]	@ 0x59
 8012346:	015b      	lsls	r3, r3, #5
 8012348:	f403 7180 	and.w	r1, r3, #256	@ 0x100
 801234c:	f895 3052 	ldrb.w	r3, [r5, #82]	@ 0x52
 8012350:	430b      	orrs	r3, r1
 8012352:	425b      	negs	r3, r3
 8012354:	f885 3055 	strb.w	r3, [r5, #85]	@ 0x55
 8012358:	4610      	mov	r0, r2
 801235a:	bdf0      	pop	{r4, r5, r6, r7, pc}

0801235c <_ZNK8touchgfx12TextProvider15thaiLookupGlyphEPKNS_9GlyphNodeEPKNS_4FontEt>:
 801235c:	b538      	push	{r3, r4, r5, lr}
 801235e:	460c      	mov	r4, r1
 8012360:	6811      	ldr	r1, [r2, #0]
 8012362:	4610      	mov	r0, r2
 8012364:	68cd      	ldr	r5, [r1, #12]
 8012366:	4619      	mov	r1, r3
 8012368:	47a8      	blx	r5
 801236a:	2800      	cmp	r0, #0
 801236c:	bf08      	it	eq
 801236e:	4620      	moveq	r0, r4
 8012370:	bd38      	pop	{r3, r4, r5, pc}
	...

08012374 <_ZN8touchgfx12TextProvider15adjustThaiGlyphEPKNS_4FontEPKNS_9GlyphNodeE>:
 8012374:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 8012378:	468c      	mov	ip, r1
 801237a:	4605      	mov	r5, r0
 801237c:	4614      	mov	r4, r2
 801237e:	b942      	cbnz	r2, 8012392 <_ZN8touchgfx12TextProvider15adjustThaiGlyphEPKNS_4FontEPKNS_9GlyphNodeE+0x1e>
 8012380:	f8a5 205a 	strh.w	r2, [r5, #90]	@ 0x5a
 8012384:	f8a5 205c 	strh.w	r2, [r5, #92]	@ 0x5c
 8012388:	f8a5 205e 	strh.w	r2, [r5, #94]	@ 0x5e
 801238c:	4620      	mov	r0, r4
 801238e:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
 8012392:	7b50      	ldrb	r0, [r2, #13]
 8012394:	8893      	ldrh	r3, [r2, #4]
 8012396:	0106      	lsls	r6, r0, #4
 8012398:	f406 7280 	and.w	r2, r6, #256	@ 0x100
 801239c:	79e6      	ldrb	r6, [r4, #7]
 801239e:	f46f 6163 	mvn.w	r1, #3632	@ 0xe30
 80123a2:	4316      	orrs	r6, r2
 80123a4:	185a      	adds	r2, r3, r1
 80123a6:	b291      	uxth	r1, r2
 80123a8:	291d      	cmp	r1, #29
 80123aa:	b2b7      	uxth	r7, r6
 80123ac:	d87e      	bhi.n	80124ac <_ZN8touchgfx12TextProvider15adjustThaiGlyphEPKNS_4FontEPKNS_9GlyphNodeE+0x138>
 80123ae:	2201      	movs	r2, #1
 80123b0:	408a      	lsls	r2, r1
 80123b2:	498a      	ldr	r1, [pc, #552]	@ (80125dc <_ZN8touchgfx12TextProvider15adjustThaiGlyphEPKNS_4FontEPKNS_9GlyphNodeE+0x268>)
 80123b4:	420a      	tst	r2, r1
 80123b6:	ea4f 06e6 	mov.w	r6, r6, asr #3
 80123ba:	d12d      	bne.n	8012418 <_ZN8touchgfx12TextProvider15adjustThaiGlyphEPKNS_4FontEPKNS_9GlyphNodeE+0xa4>
 80123bc:	f412 7f60 	tst.w	r2, #896	@ 0x380
 80123c0:	d074      	beq.n	80124ac <_ZN8touchgfx12TextProvider15adjustThaiGlyphEPKNS_4FontEPKNS_9GlyphNodeE+0x138>
 80123c2:	f105 024c 	add.w	r2, r5, #76	@ 0x4c
 80123c6:	4623      	mov	r3, r4
 80123c8:	f104 0e08 	add.w	lr, r4, #8
 80123cc:	4614      	mov	r4, r2
 80123ce:	6818      	ldr	r0, [r3, #0]
 80123d0:	6859      	ldr	r1, [r3, #4]
 80123d2:	4694      	mov	ip, r2
 80123d4:	e8ac 0003 	stmia.w	ip!, {r0, r1}
 80123d8:	3308      	adds	r3, #8
 80123da:	4573      	cmp	r3, lr
 80123dc:	4662      	mov	r2, ip
 80123de:	d1f6      	bne.n	80123ce <_ZN8touchgfx12TextProvider15adjustThaiGlyphEPKNS_4FontEPKNS_9GlyphNodeE+0x5a>
 80123e0:	6818      	ldr	r0, [r3, #0]
 80123e2:	f8cc 0000 	str.w	r0, [ip]
 80123e6:	889b      	ldrh	r3, [r3, #4]
 80123e8:	f8ac 3004 	strh.w	r3, [ip, #4]
 80123ec:	f8b5 105c 	ldrh.w	r1, [r5, #92]	@ 0x5c
 80123f0:	f895 0059 	ldrb.w	r0, [r5, #89]	@ 0x59
 80123f4:	b2b3      	uxth	r3, r6
 80123f6:	1aca      	subs	r2, r1, r3
 80123f8:	b292      	uxth	r2, r2
 80123fa:	f885 2054 	strb.w	r2, [r5, #84]	@ 0x54
 80123fe:	10d2      	asrs	r2, r2, #3
 8012400:	f020 0060 	bic.w	r0, r0, #96	@ 0x60
 8012404:	f002 0260 	and.w	r2, r2, #96	@ 0x60
 8012408:	4302      	orrs	r2, r0
 801240a:	1bcf      	subs	r7, r1, r7
 801240c:	f885 2059 	strb.w	r2, [r5, #89]	@ 0x59
 8012410:	1afb      	subs	r3, r7, r3
 8012412:	f8a5 305c 	strh.w	r3, [r5, #92]	@ 0x5c
 8012416:	e7b9      	b.n	801238c <_ZN8touchgfx12TextProvider15adjustThaiGlyphEPKNS_4FontEPKNS_9GlyphNodeE+0x18>
 8012418:	f105 024c 	add.w	r2, r5, #76	@ 0x4c
 801241c:	4623      	mov	r3, r4
 801241e:	f104 0808 	add.w	r8, r4, #8
 8012422:	4614      	mov	r4, r2
 8012424:	6818      	ldr	r0, [r3, #0]
 8012426:	6859      	ldr	r1, [r3, #4]
 8012428:	4696      	mov	lr, r2
 801242a:	e8ae 0003 	stmia.w	lr!, {r0, r1}
 801242e:	3308      	adds	r3, #8
 8012430:	4543      	cmp	r3, r8
 8012432:	4672      	mov	r2, lr
 8012434:	d1f6      	bne.n	8012424 <_ZN8touchgfx12TextProvider15adjustThaiGlyphEPKNS_4FontEPKNS_9GlyphNodeE+0xb0>
 8012436:	6818      	ldr	r0, [r3, #0]
 8012438:	f8ce 0000 	str.w	r0, [lr]
 801243c:	889b      	ldrh	r3, [r3, #4]
 801243e:	f8ae 3004 	strh.w	r3, [lr, #4]
 8012442:	8eeb      	ldrh	r3, [r5, #54]	@ 0x36
 8012444:	eb05 0343 	add.w	r3, r5, r3, lsl #1
 8012448:	8c59      	ldrh	r1, [r3, #34]	@ 0x22
 801244a:	f640 6333 	movw	r3, #3635	@ 0xe33
 801244e:	4299      	cmp	r1, r3
 8012450:	d111      	bne.n	8012476 <_ZN8touchgfx12TextProvider15adjustThaiGlyphEPKNS_4FontEPKNS_9GlyphNodeE+0x102>
 8012452:	f8dc 3000 	ldr.w	r3, [ip]
 8012456:	4660      	mov	r0, ip
 8012458:	68db      	ldr	r3, [r3, #12]
 801245a:	4798      	blx	r3
 801245c:	7b41      	ldrb	r1, [r0, #13]
 801245e:	00cb      	lsls	r3, r1, #3
 8012460:	f403 7280 	and.w	r2, r3, #256	@ 0x100
 8012464:	7a03      	ldrb	r3, [r0, #8]
 8012466:	4313      	orrs	r3, r2
 8012468:	064a      	lsls	r2, r1, #25
 801246a:	bf44      	itt	mi
 801246c:	f5a3 7300 	submi.w	r3, r3, #512	@ 0x200
 8012470:	b21b      	sxthmi	r3, r3
 8012472:	f8a5 305a 	strh.w	r3, [r5, #90]	@ 0x5a
 8012476:	f8b5 305a 	ldrh.w	r3, [r5, #90]	@ 0x5a
 801247a:	f895 2059 	ldrb.w	r2, [r5, #89]	@ 0x59
 801247e:	443b      	add	r3, r7
 8012480:	4433      	add	r3, r6
 8012482:	b29b      	uxth	r3, r3
 8012484:	f8a5 305a 	strh.w	r3, [r5, #90]	@ 0x5a
 8012488:	f885 3054 	strb.w	r3, [r5, #84]	@ 0x54
 801248c:	10db      	asrs	r3, r3, #3
 801248e:	f022 0260 	bic.w	r2, r2, #96	@ 0x60
 8012492:	f003 0360 	and.w	r3, r3, #96	@ 0x60
 8012496:	4313      	orrs	r3, r2
 8012498:	f885 3059 	strb.w	r3, [r5, #89]	@ 0x59
 801249c:	f895 205e 	ldrb.w	r2, [r5, #94]	@ 0x5e
 80124a0:	f895 3055 	ldrb.w	r3, [r5, #85]	@ 0x55
 80124a4:	1a9b      	subs	r3, r3, r2
 80124a6:	f885 3055 	strb.w	r3, [r5, #85]	@ 0x55
 80124aa:	e76f      	b.n	801238c <_ZN8touchgfx12TextProvider15adjustThaiGlyphEPKNS_4FontEPKNS_9GlyphNodeE+0x18>
 80124ac:	f023 0204 	bic.w	r2, r3, #4
 80124b0:	f640 611b 	movw	r1, #3611	@ 0xe1b
 80124b4:	428a      	cmp	r2, r1
 80124b6:	d003      	beq.n	80124c0 <_ZN8touchgfx12TextProvider15adjustThaiGlyphEPKNS_4FontEPKNS_9GlyphNodeE+0x14c>
 80124b8:	f640 621d 	movw	r2, #3613	@ 0xe1d
 80124bc:	4293      	cmp	r3, r2
 80124be:	d137      	bne.n	8012530 <_ZN8touchgfx12TextProvider15adjustThaiGlyphEPKNS_4FontEPKNS_9GlyphNodeE+0x1bc>
 80124c0:	f105 064c 	add.w	r6, r5, #76	@ 0x4c
 80124c4:	4622      	mov	r2, r4
 80124c6:	f104 0808 	add.w	r8, r4, #8
 80124ca:	4634      	mov	r4, r6
 80124cc:	6810      	ldr	r0, [r2, #0]
 80124ce:	6851      	ldr	r1, [r2, #4]
 80124d0:	46b6      	mov	lr, r6
 80124d2:	e8ae 0003 	stmia.w	lr!, {r0, r1}
 80124d6:	3208      	adds	r2, #8
 80124d8:	4542      	cmp	r2, r8
 80124da:	4676      	mov	r6, lr
 80124dc:	d1f6      	bne.n	80124cc <_ZN8touchgfx12TextProvider15adjustThaiGlyphEPKNS_4FontEPKNS_9GlyphNodeE+0x158>
 80124de:	6810      	ldr	r0, [r2, #0]
 80124e0:	f8ce 0000 	str.w	r0, [lr]
 80124e4:	8892      	ldrh	r2, [r2, #4]
 80124e6:	f8ae 2004 	strh.w	r2, [lr, #4]
 80124ea:	3b01      	subs	r3, #1
 80124ec:	b29b      	uxth	r3, r3
 80124ee:	4662      	mov	r2, ip
 80124f0:	4621      	mov	r1, r4
 80124f2:	4628      	mov	r0, r5
 80124f4:	f7ff ff32 	bl	801235c <_ZNK8touchgfx12TextProvider15thaiLookupGlyphEPKNS_9GlyphNodeEPKNS_4FontEt>
 80124f8:	7b41      	ldrb	r1, [r0, #13]
 80124fa:	00cb      	lsls	r3, r1, #3
 80124fc:	f403 7280 	and.w	r2, r3, #256	@ 0x100
 8012500:	7a03      	ldrb	r3, [r0, #8]
 8012502:	0648      	lsls	r0, r1, #25
 8012504:	ea43 0302 	orr.w	r3, r3, r2
 8012508:	bf44      	itt	mi
 801250a:	f5a3 7300 	submi.w	r3, r3, #512	@ 0x200
 801250e:	b21b      	sxthmi	r3, r3
 8012510:	f8a5 305a 	strh.w	r3, [r5, #90]	@ 0x5a
 8012514:	f895 3059 	ldrb.w	r3, [r5, #89]	@ 0x59
 8012518:	f895 2056 	ldrb.w	r2, [r5, #86]	@ 0x56
 801251c:	005b      	lsls	r3, r3, #1
 801251e:	f403 7380 	and.w	r3, r3, #256	@ 0x100
 8012522:	4313      	orrs	r3, r2
 8012524:	115a      	asrs	r2, r3, #5
 8012526:	eb02 0393 	add.w	r3, r2, r3, lsr #2
 801252a:	f8a5 305e 	strh.w	r3, [r5, #94]	@ 0x5e
 801252e:	e046      	b.n	80125be <_ZN8touchgfx12TextProvider15adjustThaiGlyphEPKNS_4FontEPKNS_9GlyphNodeE+0x24a>
 8012530:	00c2      	lsls	r2, r0, #3
 8012532:	f402 7180 	and.w	r1, r2, #256	@ 0x100
 8012536:	7a22      	ldrb	r2, [r4, #8]
 8012538:	430a      	orrs	r2, r1
 801253a:	0641      	lsls	r1, r0, #25
 801253c:	bf44      	itt	mi
 801253e:	f5a2 7200 	submi.w	r2, r2, #512	@ 0x200
 8012542:	b212      	sxthmi	r2, r2
 8012544:	f8a5 205a 	strh.w	r2, [r5, #90]	@ 0x5a
 8012548:	f640 6109 	movw	r1, #3593	@ 0xe09
 801254c:	f023 0210 	bic.w	r2, r3, #16
 8012550:	428a      	cmp	r2, r1
 8012552:	d003      	beq.n	801255c <_ZN8touchgfx12TextProvider15adjustThaiGlyphEPKNS_4FontEPKNS_9GlyphNodeE+0x1e8>
 8012554:	f640 6213 	movw	r2, #3603	@ 0xe13
 8012558:	4293      	cmp	r3, r2
 801255a:	d13d      	bne.n	80125d8 <_ZN8touchgfx12TextProvider15adjustThaiGlyphEPKNS_4FontEPKNS_9GlyphNodeE+0x264>
 801255c:	f105 024c 	add.w	r2, r5, #76	@ 0x4c
 8012560:	f104 0808 	add.w	r8, r4, #8
 8012564:	4696      	mov	lr, r2
 8012566:	6820      	ldr	r0, [r4, #0]
 8012568:	6861      	ldr	r1, [r4, #4]
 801256a:	4616      	mov	r6, r2
 801256c:	c603      	stmia	r6!, {r0, r1}
 801256e:	3408      	adds	r4, #8
 8012570:	4544      	cmp	r4, r8
 8012572:	4632      	mov	r2, r6
 8012574:	d1f7      	bne.n	8012566 <_ZN8touchgfx12TextProvider15adjustThaiGlyphEPKNS_4FontEPKNS_9GlyphNodeE+0x1f2>
 8012576:	6820      	ldr	r0, [r4, #0]
 8012578:	6030      	str	r0, [r6, #0]
 801257a:	88a1      	ldrh	r1, [r4, #4]
 801257c:	80b1      	strh	r1, [r6, #4]
 801257e:	f895 6059 	ldrb.w	r6, [r5, #89]	@ 0x59
 8012582:	0076      	lsls	r6, r6, #1
 8012584:	f406 7280 	and.w	r2, r6, #256	@ 0x100
 8012588:	f895 6056 	ldrb.w	r6, [r5, #86]	@ 0x56
 801258c:	4316      	orrs	r6, r2
 801258e:	f640 6213 	movw	r2, #3603	@ 0xe13
 8012592:	4293      	cmp	r3, r2
 8012594:	bf1a      	itte	ne
 8012596:	f103 33ff 	addne.w	r3, r3, #4294967295
 801259a:	b29b      	uxthne	r3, r3
 801259c:	f640 630c 	movweq	r3, #3596	@ 0xe0c
 80125a0:	4662      	mov	r2, ip
 80125a2:	4671      	mov	r1, lr
 80125a4:	4628      	mov	r0, r5
 80125a6:	4674      	mov	r4, lr
 80125a8:	f7ff fed8 	bl	801235c <_ZNK8touchgfx12TextProvider15thaiLookupGlyphEPKNS_9GlyphNodeEPKNS_4FontEt>
 80125ac:	7b43      	ldrb	r3, [r0, #13]
 80125ae:	7a82      	ldrb	r2, [r0, #10]
 80125b0:	005b      	lsls	r3, r3, #1
 80125b2:	f403 7380 	and.w	r3, r3, #256	@ 0x100
 80125b6:	4313      	orrs	r3, r2
 80125b8:	1af6      	subs	r6, r6, r3
 80125ba:	f8a5 605e 	strh.w	r6, [r5, #94]	@ 0x5e
 80125be:	7b61      	ldrb	r1, [r4, #13]
 80125c0:	00cb      	lsls	r3, r1, #3
 80125c2:	f403 7280 	and.w	r2, r3, #256	@ 0x100
 80125c6:	7a23      	ldrb	r3, [r4, #8]
 80125c8:	4313      	orrs	r3, r2
 80125ca:	064a      	lsls	r2, r1, #25
 80125cc:	bf44      	itt	mi
 80125ce:	f5a3 7300 	submi.w	r3, r3, #512	@ 0x200
 80125d2:	b21b      	sxthmi	r3, r3
 80125d4:	1bdb      	subs	r3, r3, r7
 80125d6:	e71c      	b.n	8012412 <_ZN8touchgfx12TextProvider15adjustThaiGlyphEPKNS_4FontEPKNS_9GlyphNodeE+0x9e>
 80125d8:	2300      	movs	r3, #0
 80125da:	e7a6      	b.n	801252a <_ZN8touchgfx12TextProvider15adjustThaiGlyphEPKNS_4FontEPKNS_9GlyphNodeE+0x1b6>
 80125dc:	3fc00079 	.word	0x3fc00079

080125e0 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt>:
 80125e0:	e92d 43f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, lr}
 80125e4:	4604      	mov	r4, r0
 80125e6:	b942      	cbnz	r2, 80125fa <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x1a>
 80125e8:	f44f 4300 	mov.w	r3, #32768	@ 0x8000
 80125ec:	f8a0 305a 	strh.w	r3, [r0, #90]	@ 0x5a
 80125f0:	f8a0 305c 	strh.w	r3, [r0, #92]	@ 0x5c
 80125f4:	f8a4 305e 	strh.w	r3, [r4, #94]	@ 0x5e
 80125f8:	e047      	b.n	801268a <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0xaa>
 80125fa:	7b51      	ldrb	r1, [r2, #13]
 80125fc:	8893      	ldrh	r3, [r2, #4]
 80125fe:	010d      	lsls	r5, r1, #4
 8012600:	f405 7080 	and.w	r0, r5, #256	@ 0x100
 8012604:	79d5      	ldrb	r5, [r2, #7]
 8012606:	4305      	orrs	r5, r0
 8012608:	2d04      	cmp	r5, #4
 801260a:	bfcc      	ite	gt
 801260c:	ea4f 0e95 	movgt.w	lr, r5, lsr #2
 8012610:	f04f 0e01 	movle.w	lr, #1
 8012614:	f5b3 6fdd 	cmp.w	r3, #1768	@ 0x6e8
 8012618:	f200 80ab 	bhi.w	8012772 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x192>
 801261c:	f240 60e7 	movw	r0, #1767	@ 0x6e7
 8012620:	4283      	cmp	r3, r0
 8012622:	d216      	bcs.n	8012652 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x72>
 8012624:	f240 605b 	movw	r0, #1627	@ 0x65b
 8012628:	4283      	cmp	r3, r0
 801262a:	d859      	bhi.n	80126e0 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x100>
 801262c:	f240 6057 	movw	r0, #1623	@ 0x657
 8012630:	4283      	cmp	r3, r0
 8012632:	d20e      	bcs.n	8012652 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x72>
 8012634:	f5b3 6fca 	cmp.w	r3, #1616	@ 0x650
 8012638:	d24a      	bcs.n	80126d0 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0xf0>
 801263a:	f240 604e 	movw	r0, #1614	@ 0x64e
 801263e:	4283      	cmp	r3, r0
 8012640:	d207      	bcs.n	8012652 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x72>
 8012642:	f240 601a 	movw	r0, #1562	@ 0x61a
 8012646:	4283      	cmp	r3, r0
 8012648:	d02a      	beq.n	80126a0 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0xc0>
 801264a:	d821      	bhi.n	8012690 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0xb0>
 801264c:	f5b3 6fc2 	cmp.w	r3, #1552	@ 0x610
 8012650:	d35b      	bcc.n	801270a <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x12a>
 8012652:	f9b4 305a 	ldrsh.w	r3, [r4, #90]	@ 0x5a
 8012656:	f513 4f00 	cmn.w	r3, #32768	@ 0x8000
 801265a:	f040 80d0 	bne.w	80127fe <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x21e>
 801265e:	f9b4 005c 	ldrsh.w	r0, [r4, #92]	@ 0x5c
 8012662:	f510 4f00 	cmn.w	r0, #32768	@ 0x8000
 8012666:	f040 80ca 	bne.w	80127fe <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x21e>
 801266a:	00cb      	lsls	r3, r1, #3
 801266c:	f403 7080 	and.w	r0, r3, #256	@ 0x100
 8012670:	7a13      	ldrb	r3, [r2, #8]
 8012672:	0649      	lsls	r1, r1, #25
 8012674:	ea43 0300 	orr.w	r3, r3, r0
 8012678:	bf44      	itt	mi
 801267a:	f5a3 7300 	submi.w	r3, r3, #512	@ 0x200
 801267e:	b21b      	sxthmi	r3, r3
 8012680:	f8a4 305a 	strh.w	r3, [r4, #90]	@ 0x5a
 8012684:	1b5d      	subs	r5, r3, r5
 8012686:	f8a4 505c 	strh.w	r5, [r4, #92]	@ 0x5c
 801268a:	4610      	mov	r0, r2
 801268c:	e8bd 83f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, pc}
 8012690:	f240 604b 	movw	r0, #1611	@ 0x64b
 8012694:	4283      	cmp	r3, r0
 8012696:	d338      	bcc.n	801270a <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x12a>
 8012698:	f240 604c 	movw	r0, #1612	@ 0x64c
 801269c:	4283      	cmp	r3, r0
 801269e:	d9d8      	bls.n	8012652 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x72>
 80126a0:	f9b4 005a 	ldrsh.w	r0, [r4, #90]	@ 0x5a
 80126a4:	f9b4 305c 	ldrsh.w	r3, [r4, #92]	@ 0x5c
 80126a8:	f510 4f00 	cmn.w	r0, #32768	@ 0x8000
 80126ac:	f040 80f2 	bne.w	8012894 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x2b4>
 80126b0:	f513 4f00 	cmn.w	r3, #32768	@ 0x8000
 80126b4:	f040 80ee 	bne.w	8012894 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x2b4>
 80126b8:	00cb      	lsls	r3, r1, #3
 80126ba:	f403 7080 	and.w	r0, r3, #256	@ 0x100
 80126be:	7a13      	ldrb	r3, [r2, #8]
 80126c0:	064e      	lsls	r6, r1, #25
 80126c2:	ea43 0300 	orr.w	r3, r3, r0
 80126c6:	bf44      	itt	mi
 80126c8:	f5a3 7300 	submi.w	r3, r3, #512	@ 0x200
 80126cc:	b21b      	sxthmi	r3, r3
 80126ce:	e7d9      	b.n	8012684 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0xa4>
 80126d0:	f240 6054 	movw	r0, #1620	@ 0x654
 80126d4:	4283      	cmp	r3, r0
 80126d6:	d8e3      	bhi.n	80126a0 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0xc0>
 80126d8:	f5b3 6fca 	cmp.w	r3, #1616	@ 0x650
 80126dc:	d9e0      	bls.n	80126a0 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0xc0>
 80126de:	e7b8      	b.n	8012652 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x72>
 80126e0:	f240 6074 	movw	r0, #1652	@ 0x674
 80126e4:	4283      	cmp	r3, r0
 80126e6:	d0b4      	beq.n	8012652 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x72>
 80126e8:	d82d      	bhi.n	8012746 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x166>
 80126ea:	f240 605e 	movw	r0, #1630	@ 0x65e
 80126ee:	4283      	cmp	r3, r0
 80126f0:	d804      	bhi.n	80126fc <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x11c>
 80126f2:	f240 605d 	movw	r0, #1629	@ 0x65d
 80126f6:	4283      	cmp	r3, r0
 80126f8:	d3d2      	bcc.n	80126a0 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0xc0>
 80126fa:	e7aa      	b.n	8012652 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x72>
 80126fc:	f240 605f 	movw	r0, #1631	@ 0x65f
 8012700:	4283      	cmp	r3, r0
 8012702:	d0cd      	beq.n	80126a0 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0xc0>
 8012704:	f5b3 6fce 	cmp.w	r3, #1648	@ 0x670
 8012708:	d0a3      	beq.n	8012652 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x72>
 801270a:	00cb      	lsls	r3, r1, #3
 801270c:	f403 7080 	and.w	r0, r3, #256	@ 0x100
 8012710:	7a13      	ldrb	r3, [r2, #8]
 8012712:	0649      	lsls	r1, r1, #25
 8012714:	ea43 0300 	orr.w	r3, r3, r0
 8012718:	bf44      	itt	mi
 801271a:	f5a3 7300 	submi.w	r3, r3, #512	@ 0x200
 801271e:	b21b      	sxthmi	r3, r3
 8012720:	1b5d      	subs	r5, r3, r5
 8012722:	f8a4 305a 	strh.w	r3, [r4, #90]	@ 0x5a
 8012726:	f8a4 505c 	strh.w	r5, [r4, #92]	@ 0x5c
 801272a:	7b53      	ldrb	r3, [r2, #13]
 801272c:	015b      	lsls	r3, r3, #5
 801272e:	f403 7180 	and.w	r1, r3, #256	@ 0x100
 8012732:	7993      	ldrb	r3, [r2, #6]
 8012734:	430b      	orrs	r3, r1
 8012736:	005b      	lsls	r3, r3, #1
 8012738:	2105      	movs	r1, #5
 801273a:	fb93 f3f1 	sdiv	r3, r3, r1
 801273e:	f992 1009 	ldrsb.w	r1, [r2, #9]
 8012742:	440b      	add	r3, r1
 8012744:	e756      	b.n	80125f4 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x14>
 8012746:	f240 60e2 	movw	r0, #1762	@ 0x6e2
 801274a:	4283      	cmp	r3, r0
 801274c:	d809      	bhi.n	8012762 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x182>
 801274e:	f240 60df 	movw	r0, #1759	@ 0x6df
 8012752:	4283      	cmp	r3, r0
 8012754:	f4bf af7d 	bcs.w	8012652 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x72>
 8012758:	f2a3 63d6 	subw	r3, r3, #1750	@ 0x6d6
 801275c:	2b05      	cmp	r3, #5
 801275e:	d8d4      	bhi.n	801270a <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x12a>
 8012760:	e777      	b.n	8012652 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x72>
 8012762:	f240 60e3 	movw	r0, #1763	@ 0x6e3
 8012766:	4283      	cmp	r3, r0
 8012768:	d09a      	beq.n	80126a0 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0xc0>
 801276a:	f240 60e4 	movw	r0, #1764	@ 0x6e4
 801276e:	4283      	cmp	r3, r0
 8012770:	e7ca      	b.n	8012708 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x128>
 8012772:	f5b3 6f0f 	cmp.w	r3, #2288	@ 0x8f0
 8012776:	d22b      	bcs.n	80127d0 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x1f0>
 8012778:	f640 00ed 	movw	r0, #2285	@ 0x8ed
 801277c:	4283      	cmp	r3, r0
 801277e:	d28f      	bcs.n	80126a0 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0xc0>
 8012780:	f640 00e5 	movw	r0, #2277	@ 0x8e5
 8012784:	4283      	cmp	r3, r0
 8012786:	d816      	bhi.n	80127b6 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x1d6>
 8012788:	f640 00e4 	movw	r0, #2276	@ 0x8e4
 801278c:	4283      	cmp	r3, r0
 801278e:	f4bf af60 	bcs.w	8012652 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x72>
 8012792:	f240 60ec 	movw	r0, #1772	@ 0x6ec
 8012796:	4283      	cmp	r3, r0
 8012798:	d80a      	bhi.n	80127b0 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x1d0>
 801279a:	f240 60eb 	movw	r0, #1771	@ 0x6eb
 801279e:	4283      	cmp	r3, r0
 80127a0:	f4bf af57 	bcs.w	8012652 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x72>
 80127a4:	f240 60ea 	movw	r0, #1770	@ 0x6ea
 80127a8:	4283      	cmp	r3, r0
 80127aa:	f43f af79 	beq.w	80126a0 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0xc0>
 80127ae:	e7ac      	b.n	801270a <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x12a>
 80127b0:	f240 60ed 	movw	r0, #1773	@ 0x6ed
 80127b4:	e7f8      	b.n	80127a8 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x1c8>
 80127b6:	f640 00e8 	movw	r0, #2280	@ 0x8e8
 80127ba:	4283      	cmp	r3, r0
 80127bc:	d802      	bhi.n	80127c4 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x1e4>
 80127be:	f640 00e7 	movw	r0, #2279	@ 0x8e7
 80127c2:	e798      	b.n	80126f6 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x116>
 80127c4:	f640 00e9 	movw	r0, #2281	@ 0x8e9
 80127c8:	4283      	cmp	r3, r0
 80127ca:	f47f af42 	bne.w	8012652 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x72>
 80127ce:	e767      	b.n	80126a0 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0xc0>
 80127d0:	f640 00f6 	movw	r0, #2294	@ 0x8f6
 80127d4:	4283      	cmp	r3, r0
 80127d6:	f43f af63 	beq.w	80126a0 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0xc0>
 80127da:	d802      	bhi.n	80127e2 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x202>
 80127dc:	f640 00f2 	movw	r0, #2290	@ 0x8f2
 80127e0:	e7f2      	b.n	80127c8 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x1e8>
 80127e2:	f640 00fa 	movw	r0, #2298	@ 0x8fa
 80127e6:	4283      	cmp	r3, r0
 80127e8:	d805      	bhi.n	80127f6 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x216>
 80127ea:	f640 00f9 	movw	r0, #2297	@ 0x8f9
 80127ee:	4283      	cmp	r3, r0
 80127f0:	f4ff af2f 	bcc.w	8012652 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x72>
 80127f4:	e754      	b.n	80126a0 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0xc0>
 80127f6:	f640 00fe 	movw	r0, #2302	@ 0x8fe
 80127fa:	4283      	cmp	r3, r0
 80127fc:	e7af      	b.n	801275e <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x17e>
 80127fe:	f104 0c4c 	add.w	ip, r4, #76	@ 0x4c
 8012802:	4617      	mov	r7, r2
 8012804:	f102 0808 	add.w	r8, r2, #8
 8012808:	4666      	mov	r6, ip
 801280a:	6838      	ldr	r0, [r7, #0]
 801280c:	6879      	ldr	r1, [r7, #4]
 801280e:	46e6      	mov	lr, ip
 8012810:	e8ae 0003 	stmia.w	lr!, {r0, r1}
 8012814:	3708      	adds	r7, #8
 8012816:	4547      	cmp	r7, r8
 8012818:	46f4      	mov	ip, lr
 801281a:	d1f6      	bne.n	801280a <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x22a>
 801281c:	6838      	ldr	r0, [r7, #0]
 801281e:	f8ce 0000 	str.w	r0, [lr]
 8012822:	88b9      	ldrh	r1, [r7, #4]
 8012824:	f8ae 1004 	strh.w	r1, [lr, #4]
 8012828:	f9b4 005e 	ldrsh.w	r0, [r4, #94]	@ 0x5e
 801282c:	f510 4f00 	cmn.w	r0, #32768	@ 0x8000
 8012830:	d009      	beq.n	8012846 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x266>
 8012832:	7b51      	ldrb	r1, [r2, #13]
 8012834:	7992      	ldrb	r2, [r2, #6]
 8012836:	0149      	lsls	r1, r1, #5
 8012838:	f401 7180 	and.w	r1, r1, #256	@ 0x100
 801283c:	4311      	orrs	r1, r2
 801283e:	eba0 0051 	sub.w	r0, r0, r1, lsr #1
 8012842:	f884 0055 	strb.w	r0, [r4, #85]	@ 0x55
 8012846:	f513 4f00 	cmn.w	r3, #32768	@ 0x8000
 801284a:	b2ad      	uxth	r5, r5
 801284c:	d00d      	beq.n	801286a <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x28a>
 801284e:	442b      	add	r3, r5
 8012850:	b29b      	uxth	r3, r3
 8012852:	f894 2059 	ldrb.w	r2, [r4, #89]	@ 0x59
 8012856:	f884 3054 	strb.w	r3, [r4, #84]	@ 0x54
 801285a:	10db      	asrs	r3, r3, #3
 801285c:	f022 0260 	bic.w	r2, r2, #96	@ 0x60
 8012860:	f003 0360 	and.w	r3, r3, #96	@ 0x60
 8012864:	4313      	orrs	r3, r2
 8012866:	f884 3059 	strb.w	r3, [r4, #89]	@ 0x59
 801286a:	f894 1059 	ldrb.w	r1, [r4, #89]	@ 0x59
 801286e:	00cb      	lsls	r3, r1, #3
 8012870:	f403 7280 	and.w	r2, r3, #256	@ 0x100
 8012874:	f894 3054 	ldrb.w	r3, [r4, #84]	@ 0x54
 8012878:	064f      	lsls	r7, r1, #25
 801287a:	ea43 0302 	orr.w	r3, r3, r2
 801287e:	bf44      	itt	mi
 8012880:	f5a3 7300 	submi.w	r3, r3, #512	@ 0x200
 8012884:	b21b      	sxthmi	r3, r3
 8012886:	f8a4 305a 	strh.w	r3, [r4, #90]	@ 0x5a
 801288a:	1b5b      	subs	r3, r3, r5
 801288c:	f8a4 305c 	strh.w	r3, [r4, #92]	@ 0x5c
 8012890:	4632      	mov	r2, r6
 8012892:	e6fa      	b.n	801268a <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0xaa>
 8012894:	f104 0c4c 	add.w	ip, r4, #76	@ 0x4c
 8012898:	4617      	mov	r7, r2
 801289a:	f102 0908 	add.w	r9, r2, #8
 801289e:	4666      	mov	r6, ip
 80128a0:	6838      	ldr	r0, [r7, #0]
 80128a2:	6879      	ldr	r1, [r7, #4]
 80128a4:	46e0      	mov	r8, ip
 80128a6:	e8a8 0003 	stmia.w	r8!, {r0, r1}
 80128aa:	3708      	adds	r7, #8
 80128ac:	454f      	cmp	r7, r9
 80128ae:	46c4      	mov	ip, r8
 80128b0:	d1f6      	bne.n	80128a0 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x2c0>
 80128b2:	6838      	ldr	r0, [r7, #0]
 80128b4:	f8c8 0000 	str.w	r0, [r8]
 80128b8:	88b9      	ldrh	r1, [r7, #4]
 80128ba:	f8a8 1004 	strh.w	r1, [r8, #4]
 80128be:	f9b4 005e 	ldrsh.w	r0, [r4, #94]	@ 0x5e
 80128c2:	f510 4f00 	cmn.w	r0, #32768	@ 0x8000
 80128c6:	d009      	beq.n	80128dc <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x2fc>
 80128c8:	7b51      	ldrb	r1, [r2, #13]
 80128ca:	7992      	ldrb	r2, [r2, #6]
 80128cc:	0149      	lsls	r1, r1, #5
 80128ce:	f401 7180 	and.w	r1, r1, #256	@ 0x100
 80128d2:	4311      	orrs	r1, r2
 80128d4:	eba0 0051 	sub.w	r0, r0, r1, lsr #1
 80128d8:	f884 0055 	strb.w	r0, [r4, #85]	@ 0x55
 80128dc:	f513 4f00 	cmn.w	r3, #32768	@ 0x8000
 80128e0:	d00e      	beq.n	8012900 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x320>
 80128e2:	eba3 030e 	sub.w	r3, r3, lr
 80128e6:	f894 2059 	ldrb.w	r2, [r4, #89]	@ 0x59
 80128ea:	b29b      	uxth	r3, r3
 80128ec:	f884 3054 	strb.w	r3, [r4, #84]	@ 0x54
 80128f0:	10db      	asrs	r3, r3, #3
 80128f2:	f003 0360 	and.w	r3, r3, #96	@ 0x60
 80128f6:	f022 0260 	bic.w	r2, r2, #96	@ 0x60
 80128fa:	4313      	orrs	r3, r2
 80128fc:	f884 3059 	strb.w	r3, [r4, #89]	@ 0x59
 8012900:	f894 1059 	ldrb.w	r1, [r4, #89]	@ 0x59
 8012904:	00cb      	lsls	r3, r1, #3
 8012906:	f403 7280 	and.w	r2, r3, #256	@ 0x100
 801290a:	f894 3054 	ldrb.w	r3, [r4, #84]	@ 0x54
 801290e:	0648      	lsls	r0, r1, #25
 8012910:	ea43 0302 	orr.w	r3, r3, r2
 8012914:	bf44      	itt	mi
 8012916:	f5a3 7300 	submi.w	r3, r3, #512	@ 0x200
 801291a:	b21b      	sxthmi	r3, r3
 801291c:	1b5d      	subs	r5, r3, r5
 801291e:	f8a4 505c 	strh.w	r5, [r4, #92]	@ 0x5c
 8012922:	e7b5      	b.n	8012890 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x2b0>

08012924 <_ZN8touchgfx12TextProvider15getNextLigatureEhPKNS_4FontERPKNS_9GlyphNodeE>:
 8012924:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 8012928:	461e      	mov	r6, r3
 801292a:	8ec3      	ldrh	r3, [r0, #54]	@ 0x36
 801292c:	eb00 0343 	add.w	r3, r0, r3, lsl #1
 8012930:	4604      	mov	r4, r0
 8012932:	4617      	mov	r7, r2
 8012934:	f8b3 8022 	ldrh.w	r8, [r3, #34]	@ 0x22
 8012938:	f7f7 ff26 	bl	800a788 <_ZN8touchgfx12TextProvider15getNextLigatureEh>
 801293c:	4605      	mov	r5, r0
 801293e:	b918      	cbnz	r0, 8012948 <_ZN8touchgfx12TextProvider15getNextLigatureEhPKNS_4FontERPKNS_9GlyphNodeE+0x24>
 8012940:	6030      	str	r0, [r6, #0]
 8012942:	4628      	mov	r0, r5
 8012944:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
 8012948:	683b      	ldr	r3, [r7, #0]
 801294a:	4601      	mov	r1, r0
 801294c:	68db      	ldr	r3, [r3, #12]
 801294e:	4638      	mov	r0, r7
 8012950:	4798      	blx	r3
 8012952:	f5a8 63c0 	sub.w	r3, r8, #1536	@ 0x600
 8012956:	f5b3 7f40 	cmp.w	r3, #768	@ 0x300
 801295a:	4602      	mov	r2, r0
 801295c:	6030      	str	r0, [r6, #0]
 801295e:	d213      	bcs.n	8012988 <_ZN8touchgfx12TextProvider15getNextLigatureEhPKNS_4FontERPKNS_9GlyphNodeE+0x64>
 8012960:	4643      	mov	r3, r8
 8012962:	4639      	mov	r1, r7
 8012964:	4620      	mov	r0, r4
 8012966:	f7ff fe3b 	bl	80125e0 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt>
 801296a:	6030      	str	r0, [r6, #0]
 801296c:	6833      	ldr	r3, [r6, #0]
 801296e:	b143      	cbz	r3, 8012982 <_ZN8touchgfx12TextProvider15getNextLigatureEhPKNS_4FontERPKNS_9GlyphNodeE+0x5e>
 8012970:	7b5a      	ldrb	r2, [r3, #13]
 8012972:	7a9b      	ldrb	r3, [r3, #10]
 8012974:	0052      	lsls	r2, r2, #1
 8012976:	f402 7280 	and.w	r2, r2, #256	@ 0x100
 801297a:	4313      	orrs	r3, r2
 801297c:	bf0c      	ite	eq
 801297e:	2301      	moveq	r3, #1
 8012980:	2300      	movne	r3, #0
 8012982:	f884 3061 	strb.w	r3, [r4, #97]	@ 0x61
 8012986:	e7dc      	b.n	8012942 <_ZN8touchgfx12TextProvider15getNextLigatureEhPKNS_4FontERPKNS_9GlyphNodeE+0x1e>
 8012988:	f5a5 6360 	sub.w	r3, r5, #3584	@ 0xe00
 801298c:	b29b      	uxth	r3, r3
 801298e:	2b7f      	cmp	r3, #127	@ 0x7f
 8012990:	d804      	bhi.n	801299c <_ZN8touchgfx12TextProvider15getNextLigatureEhPKNS_4FontERPKNS_9GlyphNodeE+0x78>
 8012992:	4639      	mov	r1, r7
 8012994:	4620      	mov	r0, r4
 8012996:	f7ff fced 	bl	8012374 <_ZN8touchgfx12TextProvider15adjustThaiGlyphEPKNS_4FontEPKNS_9GlyphNodeE>
 801299a:	e7e6      	b.n	801296a <_ZN8touchgfx12TextProvider15getNextLigatureEhPKNS_4FontERPKNS_9GlyphNodeE+0x46>
 801299c:	f894 3061 	ldrb.w	r3, [r4, #97]	@ 0x61
 80129a0:	2b00      	cmp	r3, #0
 80129a2:	d0e3      	beq.n	801296c <_ZN8touchgfx12TextProvider15getNextLigatureEhPKNS_4FontERPKNS_9GlyphNodeE+0x48>
 80129a4:	f640 1302 	movw	r3, #2306	@ 0x902
 80129a8:	429d      	cmp	r5, r3
 80129aa:	d1df      	bne.n	801296c <_ZN8touchgfx12TextProvider15getNextLigatureEhPKNS_4FontERPKNS_9GlyphNodeE+0x48>
 80129ac:	4601      	mov	r1, r0
 80129ae:	4620      	mov	r0, r4
 80129b0:	f7ff fcb1 	bl	8012316 <_ZN8touchgfx12TextProvider16adjustHindiGlyphEPKNS_9GlyphNodeE>
 80129b4:	e7d9      	b.n	801296a <_ZN8touchgfx12TextProvider15getNextLigatureEhPKNS_4FontERPKNS_9GlyphNodeE+0x46>

080129b6 <_ZN8touchgfx12TextProvider15getNextLigatureEhPKNS_4FontERPKNS_9GlyphNodeERPKhRh>:
 80129b6:	e92d 43f8 	stmdb	sp!, {r3, r4, r5, r6, r7, r8, r9, lr}
 80129ba:	461e      	mov	r6, r3
 80129bc:	8ec3      	ldrh	r3, [r0, #54]	@ 0x36
 80129be:	eb00 0343 	add.w	r3, r0, r3, lsl #1
 80129c2:	4604      	mov	r4, r0
 80129c4:	4617      	mov	r7, r2
 80129c6:	f8b3 8022 	ldrh.w	r8, [r3, #34]	@ 0x22
 80129ca:	f7f7 fedd 	bl	800a788 <_ZN8touchgfx12TextProvider15getNextLigatureEh>
 80129ce:	4605      	mov	r5, r0
 80129d0:	b918      	cbnz	r0, 80129da <_ZN8touchgfx12TextProvider15getNextLigatureEhPKNS_4FontERPKNS_9GlyphNodeERPKhRh+0x24>
 80129d2:	6030      	str	r0, [r6, #0]
 80129d4:	4628      	mov	r0, r5
 80129d6:	e8bd 83f8 	ldmia.w	sp!, {r3, r4, r5, r6, r7, r8, r9, pc}
 80129da:	683b      	ldr	r3, [r7, #0]
 80129dc:	4601      	mov	r1, r0
 80129de:	f8d3 9008 	ldr.w	r9, [r3, #8]
 80129e2:	4638      	mov	r0, r7
 80129e4:	e9dd 2308 	ldrd	r2, r3, [sp, #32]
 80129e8:	47c8      	blx	r9
 80129ea:	f5a8 63c0 	sub.w	r3, r8, #1536	@ 0x600
 80129ee:	f5b3 7f40 	cmp.w	r3, #768	@ 0x300
 80129f2:	4602      	mov	r2, r0
 80129f4:	6030      	str	r0, [r6, #0]
 80129f6:	d213      	bcs.n	8012a20 <_ZN8touchgfx12TextProvider15getNextLigatureEhPKNS_4FontERPKNS_9GlyphNodeERPKhRh+0x6a>
 80129f8:	4643      	mov	r3, r8
 80129fa:	4639      	mov	r1, r7
 80129fc:	4620      	mov	r0, r4
 80129fe:	f7ff fdef 	bl	80125e0 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt>
 8012a02:	6030      	str	r0, [r6, #0]
 8012a04:	6833      	ldr	r3, [r6, #0]
 8012a06:	b143      	cbz	r3, 8012a1a <_ZN8touchgfx12TextProvider15getNextLigatureEhPKNS_4FontERPKNS_9GlyphNodeERPKhRh+0x64>
 8012a08:	7b5a      	ldrb	r2, [r3, #13]
 8012a0a:	7a9b      	ldrb	r3, [r3, #10]
 8012a0c:	0052      	lsls	r2, r2, #1
 8012a0e:	f402 7280 	and.w	r2, r2, #256	@ 0x100
 8012a12:	4313      	orrs	r3, r2
 8012a14:	bf0c      	ite	eq
 8012a16:	2301      	moveq	r3, #1
 8012a18:	2300      	movne	r3, #0
 8012a1a:	f884 3061 	strb.w	r3, [r4, #97]	@ 0x61
 8012a1e:	e7d9      	b.n	80129d4 <_ZN8touchgfx12TextProvider15getNextLigatureEhPKNS_4FontERPKNS_9GlyphNodeERPKhRh+0x1e>
 8012a20:	f5a5 6360 	sub.w	r3, r5, #3584	@ 0xe00
 8012a24:	b29b      	uxth	r3, r3
 8012a26:	2b7f      	cmp	r3, #127	@ 0x7f
 8012a28:	d804      	bhi.n	8012a34 <_ZN8touchgfx12TextProvider15getNextLigatureEhPKNS_4FontERPKNS_9GlyphNodeERPKhRh+0x7e>
 8012a2a:	4639      	mov	r1, r7
 8012a2c:	4620      	mov	r0, r4
 8012a2e:	f7ff fca1 	bl	8012374 <_ZN8touchgfx12TextProvider15adjustThaiGlyphEPKNS_4FontEPKNS_9GlyphNodeE>
 8012a32:	e7e6      	b.n	8012a02 <_ZN8touchgfx12TextProvider15getNextLigatureEhPKNS_4FontERPKNS_9GlyphNodeERPKhRh+0x4c>
 8012a34:	f894 3061 	ldrb.w	r3, [r4, #97]	@ 0x61
 8012a38:	2b00      	cmp	r3, #0
 8012a3a:	d0e3      	beq.n	8012a04 <_ZN8touchgfx12TextProvider15getNextLigatureEhPKNS_4FontERPKNS_9GlyphNodeERPKhRh+0x4e>
 8012a3c:	f640 1302 	movw	r3, #2306	@ 0x902
 8012a40:	429d      	cmp	r5, r3
 8012a42:	d1df      	bne.n	8012a04 <_ZN8touchgfx12TextProvider15getNextLigatureEhPKNS_4FontERPKNS_9GlyphNodeERPKhRh+0x4e>
 8012a44:	4601      	mov	r1, r0
 8012a46:	4620      	mov	r0, r4
 8012a48:	f7ff fc65 	bl	8012316 <_ZN8touchgfx12TextProvider16adjustHindiGlyphEPKNS_9GlyphNodeE>
 8012a4c:	e7d9      	b.n	8012a02 <_ZN8touchgfx12TextProvider15getNextLigatureEhPKNS_4FontERPKNS_9GlyphNodeERPKhRh+0x4c>

08012a4e <_ZN8touchgfx12TextProvider15fillInputBufferEv>:
 8012a4e:	b510      	push	{r4, lr}
 8012a50:	4604      	mov	r4, r0
 8012a52:	f8b4 1040 	ldrh.w	r1, [r4, #64]	@ 0x40
 8012a56:	8f23      	ldrh	r3, [r4, #56]	@ 0x38
 8012a58:	b1f1      	cbz	r1, 8012a98 <_ZN8touchgfx12TextProvider15fillInputBufferEv+0x4a>
 8012a5a:	2b0a      	cmp	r3, #10
 8012a5c:	d02f      	beq.n	8012abe <_ZN8touchgfx12TextProvider15fillInputBufferEv+0x70>
 8012a5e:	8fe2      	ldrh	r2, [r4, #62]	@ 0x3e
 8012a60:	eb04 0042 	add.w	r0, r4, r2, lsl #1
 8012a64:	3901      	subs	r1, #1
 8012a66:	8f40      	ldrh	r0, [r0, #58]	@ 0x3a
 8012a68:	f8a4 1040 	strh.w	r1, [r4, #64]	@ 0x40
 8012a6c:	1c51      	adds	r1, r2, #1
 8012a6e:	b289      	uxth	r1, r1
 8012a70:	2901      	cmp	r1, #1
 8012a72:	bf84      	itt	hi
 8012a74:	f102 32ff 	addhi.w	r2, r2, #4294967295
 8012a78:	87e2      	strhhi	r2, [r4, #62]	@ 0x3e
 8012a7a:	f103 0201 	add.w	r2, r3, #1
 8012a7e:	8722      	strh	r2, [r4, #56]	@ 0x38
 8012a80:	8ee2      	ldrh	r2, [r4, #54]	@ 0x36
 8012a82:	bf98      	it	ls
 8012a84:	87e1      	strhls	r1, [r4, #62]	@ 0x3e
 8012a86:	4413      	add	r3, r2
 8012a88:	b29b      	uxth	r3, r3
 8012a8a:	2b09      	cmp	r3, #9
 8012a8c:	bf88      	it	hi
 8012a8e:	3b0a      	subhi	r3, #10
 8012a90:	eb04 0343 	add.w	r3, r4, r3, lsl #1
 8012a94:	8458      	strh	r0, [r3, #34]	@ 0x22
 8012a96:	e7dc      	b.n	8012a52 <_ZN8touchgfx12TextProvider15fillInputBufferEv+0x4>
 8012a98:	8f23      	ldrh	r3, [r4, #56]	@ 0x38
 8012a9a:	2b0a      	cmp	r3, #10
 8012a9c:	d00f      	beq.n	8012abe <_ZN8touchgfx12TextProvider15fillInputBufferEv+0x70>
 8012a9e:	4620      	mov	r0, r4
 8012aa0:	f7ff fbe7 	bl	8012272 <_ZN8touchgfx12TextProvider19getNextCharInternalEv>
 8012aa4:	8f23      	ldrh	r3, [r4, #56]	@ 0x38
 8012aa6:	1c5a      	adds	r2, r3, #1
 8012aa8:	8722      	strh	r2, [r4, #56]	@ 0x38
 8012aaa:	8ee2      	ldrh	r2, [r4, #54]	@ 0x36
 8012aac:	4413      	add	r3, r2
 8012aae:	b29b      	uxth	r3, r3
 8012ab0:	2b09      	cmp	r3, #9
 8012ab2:	bf88      	it	hi
 8012ab4:	3b0a      	subhi	r3, #10
 8012ab6:	eb04 0343 	add.w	r3, r4, r3, lsl #1
 8012aba:	8458      	strh	r0, [r3, #34]	@ 0x22
 8012abc:	e7ec      	b.n	8012a98 <_ZN8touchgfx12TextProvider15fillInputBufferEv+0x4a>
 8012abe:	bd10      	pop	{r4, pc}

08012ac0 <_ZN8touchgfx12TextProvider11getNextCharEv>:
 8012ac0:	b538      	push	{r3, r4, r5, lr}
 8012ac2:	8ec3      	ldrh	r3, [r0, #54]	@ 0x36
 8012ac4:	eb00 0243 	add.w	r2, r0, r3, lsl #1
 8012ac8:	4604      	mov	r4, r0
 8012aca:	8c55      	ldrh	r5, [r2, #34]	@ 0x22
 8012acc:	8f02      	ldrh	r2, [r0, #56]	@ 0x38
 8012ace:	3a01      	subs	r2, #1
 8012ad0:	8702      	strh	r2, [r0, #56]	@ 0x38
 8012ad2:	1c5a      	adds	r2, r3, #1
 8012ad4:	b292      	uxth	r2, r2
 8012ad6:	2a09      	cmp	r2, #9
 8012ad8:	bf86      	itte	hi
 8012ada:	3b09      	subhi	r3, #9
 8012adc:	86c3      	strhhi	r3, [r0, #54]	@ 0x36
 8012ade:	86c2      	strhls	r2, [r0, #54]	@ 0x36
 8012ae0:	f7ff ffb5 	bl	8012a4e <_ZN8touchgfx12TextProvider15fillInputBufferEv>
 8012ae4:	8c23      	ldrh	r3, [r4, #32]
 8012ae6:	2b01      	cmp	r3, #1
 8012ae8:	bf9c      	itt	ls
 8012aea:	3301      	addls	r3, #1
 8012aec:	8423      	strhls	r3, [r4, #32]
 8012aee:	8be3      	ldrh	r3, [r4, #30]
 8012af0:	b90b      	cbnz	r3, 8012af6 <_ZN8touchgfx12TextProvider11getNextCharEv+0x36>
 8012af2:	2302      	movs	r3, #2
 8012af4:	83e3      	strh	r3, [r4, #30]
 8012af6:	8be3      	ldrh	r3, [r4, #30]
 8012af8:	3b01      	subs	r3, #1
 8012afa:	b29b      	uxth	r3, r3
 8012afc:	83e3      	strh	r3, [r4, #30]
 8012afe:	eb04 0443 	add.w	r4, r4, r3, lsl #1
 8012b02:	4628      	mov	r0, r5
 8012b04:	8365      	strh	r5, [r4, #26]
 8012b06:	bd38      	pop	{r3, r4, r5, pc}

08012b08 <_ZN8touchgfx12TextProvider22replaceInputCharactersEttPKt>:
 8012b08:	428a      	cmp	r2, r1
 8012b0a:	e92d 47f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
 8012b0e:	8ec7      	ldrh	r7, [r0, #54]	@ 0x36
 8012b10:	d931      	bls.n	8012b76 <_ZN8touchgfx12TextProvider22replaceInputCharactersEttPKt+0x6e>
 8012b12:	8f05      	ldrh	r5, [r0, #56]	@ 0x38
 8012b14:	f8b0 8040 	ldrh.w	r8, [r0, #64]	@ 0x40
 8012b18:	f8b0 c03e 	ldrh.w	ip, [r0, #62]	@ 0x3e
 8012b1c:	19ee      	adds	r6, r5, r7
 8012b1e:	1a54      	subs	r4, r2, r1
 8012b20:	3e01      	subs	r6, #1
 8012b22:	fa1f fe84 	uxth.w	lr, r4
 8012b26:	b2b4      	uxth	r4, r6
 8012b28:	eba4 090e 	sub.w	r9, r4, lr
 8012b2c:	fa1f f989 	uxth.w	r9, r9
 8012b30:	2c09      	cmp	r4, #9
 8012b32:	4626      	mov	r6, r4
 8012b34:	bf88      	it	hi
 8012b36:	f1a4 060a 	subhi.w	r6, r4, #10
 8012b3a:	f1bc 0f00 	cmp.w	ip, #0
 8012b3e:	bf08      	it	eq
 8012b40:	f04f 0c02 	moveq.w	ip, #2
 8012b44:	eb00 0646 	add.w	r6, r0, r6, lsl #1
 8012b48:	f10c 3cff 	add.w	ip, ip, #4294967295
 8012b4c:	fa1f fc8c 	uxth.w	ip, ip
 8012b50:	3c01      	subs	r4, #1
 8012b52:	f8b6 a022 	ldrh.w	sl, [r6, #34]	@ 0x22
 8012b56:	b2a4      	uxth	r4, r4
 8012b58:	eb00 064c 	add.w	r6, r0, ip, lsl #1
 8012b5c:	454c      	cmp	r4, r9
 8012b5e:	f8a6 a03a 	strh.w	sl, [r6, #58]	@ 0x3a
 8012b62:	d1e5      	bne.n	8012b30 <_ZN8touchgfx12TextProvider22replaceInputCharactersEttPKt+0x28>
 8012b64:	eba5 050e 	sub.w	r5, r5, lr
 8012b68:	eb0e 0408 	add.w	r4, lr, r8
 8012b6c:	8705      	strh	r5, [r0, #56]	@ 0x38
 8012b6e:	f8a0 4040 	strh.w	r4, [r0, #64]	@ 0x40
 8012b72:	f8a0 c03e 	strh.w	ip, [r0, #62]	@ 0x3e
 8012b76:	8f04      	ldrh	r4, [r0, #56]	@ 0x38
 8012b78:	1a64      	subs	r4, r4, r1
 8012b7a:	4439      	add	r1, r7
 8012b7c:	b289      	uxth	r1, r1
 8012b7e:	2909      	cmp	r1, #9
 8012b80:	bf88      	it	hi
 8012b82:	390a      	subhi	r1, #10
 8012b84:	8704      	strh	r4, [r0, #56]	@ 0x38
 8012b86:	86c1      	strh	r1, [r0, #54]	@ 0x36
 8012b88:	250a      	movs	r5, #10
 8012b8a:	b18a      	cbz	r2, 8012bb0 <_ZN8touchgfx12TextProvider22replaceInputCharactersEttPKt+0xa8>
 8012b8c:	8f01      	ldrh	r1, [r0, #56]	@ 0x38
 8012b8e:	3a01      	subs	r2, #1
 8012b90:	b292      	uxth	r2, r2
 8012b92:	3101      	adds	r1, #1
 8012b94:	f833 4012 	ldrh.w	r4, [r3, r2, lsl #1]
 8012b98:	8701      	strh	r1, [r0, #56]	@ 0x38
 8012b9a:	8ec1      	ldrh	r1, [r0, #54]	@ 0x36
 8012b9c:	b901      	cbnz	r1, 8012ba0 <_ZN8touchgfx12TextProvider22replaceInputCharactersEttPKt+0x98>
 8012b9e:	86c5      	strh	r5, [r0, #54]	@ 0x36
 8012ba0:	8ec1      	ldrh	r1, [r0, #54]	@ 0x36
 8012ba2:	3901      	subs	r1, #1
 8012ba4:	b289      	uxth	r1, r1
 8012ba6:	86c1      	strh	r1, [r0, #54]	@ 0x36
 8012ba8:	eb00 0141 	add.w	r1, r0, r1, lsl #1
 8012bac:	844c      	strh	r4, [r1, #34]	@ 0x22
 8012bae:	e7ec      	b.n	8012b8a <_ZN8touchgfx12TextProvider22replaceInputCharactersEttPKt+0x82>
 8012bb0:	e8bd 47f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
 8012bb4:	f7ff bf4b 	b.w	8012a4e <_ZN8touchgfx12TextProvider15fillInputBufferEv>

08012bb8 <_ZN8touchgfx12TextProvider13gsubRuleMatchEPKtttt>:
 8012bb8:	b570      	push	{r4, r5, r6, lr}
 8012bba:	2500      	movs	r5, #0
 8012bbc:	4295      	cmp	r5, r2
 8012bbe:	d011      	beq.n	8012be4 <_ZN8touchgfx12TextProvider13gsubRuleMatchEPKtttt+0x2c>
 8012bc0:	8bc4      	ldrh	r4, [r0, #30]
 8012bc2:	f831 6b02 	ldrh.w	r6, [r1], #2
 8012bc6:	4414      	add	r4, r2
 8012bc8:	3c01      	subs	r4, #1
 8012bca:	1b64      	subs	r4, r4, r5
 8012bcc:	b2a4      	uxth	r4, r4
 8012bce:	2c01      	cmp	r4, #1
 8012bd0:	bf88      	it	hi
 8012bd2:	3c02      	subhi	r4, #2
 8012bd4:	eb00 0444 	add.w	r4, r0, r4, lsl #1
 8012bd8:	8b64      	ldrh	r4, [r4, #26]
 8012bda:	42b4      	cmp	r4, r6
 8012bdc:	d117      	bne.n	8012c0e <_ZN8touchgfx12TextProvider13gsubRuleMatchEPKtttt+0x56>
 8012bde:	3501      	adds	r5, #1
 8012be0:	b2ad      	uxth	r5, r5
 8012be2:	e7eb      	b.n	8012bbc <_ZN8touchgfx12TextProvider13gsubRuleMatchEPKtttt+0x4>
 8012be4:	f8bd 2010 	ldrh.w	r2, [sp, #16]
 8012be8:	2400      	movs	r4, #0
 8012bea:	4413      	add	r3, r2
 8012bec:	b2a2      	uxth	r2, r4
 8012bee:	429a      	cmp	r2, r3
 8012bf0:	da0f      	bge.n	8012c12 <_ZN8touchgfx12TextProvider13gsubRuleMatchEPKtttt+0x5a>
 8012bf2:	8ec6      	ldrh	r6, [r0, #54]	@ 0x36
 8012bf4:	f831 5014 	ldrh.w	r5, [r1, r4, lsl #1]
 8012bf8:	4432      	add	r2, r6
 8012bfa:	b292      	uxth	r2, r2
 8012bfc:	2a09      	cmp	r2, #9
 8012bfe:	bf88      	it	hi
 8012c00:	3a0a      	subhi	r2, #10
 8012c02:	eb00 0242 	add.w	r2, r0, r2, lsl #1
 8012c06:	3401      	adds	r4, #1
 8012c08:	8c52      	ldrh	r2, [r2, #34]	@ 0x22
 8012c0a:	42aa      	cmp	r2, r5
 8012c0c:	d0ee      	beq.n	8012bec <_ZN8touchgfx12TextProvider13gsubRuleMatchEPKtttt+0x34>
 8012c0e:	2000      	movs	r0, #0
 8012c10:	bd70      	pop	{r4, r5, r6, pc}
 8012c12:	2001      	movs	r0, #1
 8012c14:	e7fc      	b.n	8012c10 <_ZN8touchgfx12TextProvider13gsubRuleMatchEPKtttt+0x58>

08012c16 <_ZN8touchgfx12TextProvider14applyGsubRulesEPKtt>:
 8012c16:	e92d 4ff7 	stmdb	sp!, {r0, r1, r2, r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8012c1a:	4605      	mov	r5, r0
 8012c1c:	4616      	mov	r6, r2
 8012c1e:	1c8c      	adds	r4, r1, #2
 8012c20:	8809      	ldrh	r1, [r1, #0]
 8012c22:	ea4f 3a11 	mov.w	sl, r1, lsr #12
 8012c26:	f834 301a 	ldrh.w	r3, [r4, sl, lsl #1]
 8012c2a:	42b3      	cmp	r3, r6
 8012c2c:	d124      	bne.n	8012c78 <_ZN8touchgfx12TextProvider14applyGsubRulesEPKtt+0x62>
 8012c2e:	f3c1 2903 	ubfx	r9, r1, #8, #4
 8012c32:	f3c1 1803 	ubfx	r8, r1, #4, #4
 8012c36:	f001 070f 	and.w	r7, r1, #15
 8012c3a:	f8cd 8000 	str.w	r8, [sp]
 8012c3e:	464b      	mov	r3, r9
 8012c40:	4652      	mov	r2, sl
 8012c42:	4621      	mov	r1, r4
 8012c44:	4628      	mov	r0, r5
 8012c46:	f7ff ffb7 	bl	8012bb8 <_ZN8touchgfx12TextProvider13gsubRuleMatchEPKtttt>
 8012c4a:	4683      	mov	fp, r0
 8012c4c:	b168      	cbz	r0, 8012c6a <_ZN8touchgfx12TextProvider14applyGsubRulesEPKtt+0x54>
 8012c4e:	eb0a 0109 	add.w	r1, sl, r9
 8012c52:	4441      	add	r1, r8
 8012c54:	eb04 0341 	add.w	r3, r4, r1, lsl #1
 8012c58:	463a      	mov	r2, r7
 8012c5a:	4649      	mov	r1, r9
 8012c5c:	4628      	mov	r0, r5
 8012c5e:	f7ff ff53 	bl	8012b08 <_ZN8touchgfx12TextProvider22replaceInputCharactersEttPKt>
 8012c62:	4658      	mov	r0, fp
 8012c64:	b003      	add	sp, #12
 8012c66:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 8012c6a:	eb07 010a 	add.w	r1, r7, sl
 8012c6e:	4449      	add	r1, r9
 8012c70:	4441      	add	r1, r8
 8012c72:	eb04 0141 	add.w	r1, r4, r1, lsl #1
 8012c76:	e7d2      	b.n	8012c1e <_ZN8touchgfx12TextProvider14applyGsubRulesEPKtt+0x8>
 8012c78:	f04f 0b00 	mov.w	fp, #0
 8012c7c:	e7f1      	b.n	8012c62 <_ZN8touchgfx12TextProvider14applyGsubRulesEPKtt+0x4c>

08012c7e <_ZNK8touchgfx12TextProvider21gsubTableBinarySearchEtPKtt>:
 8012c7e:	b570      	push	{r4, r5, r6, lr}
 8012c80:	8810      	ldrh	r0, [r2, #0]
 8012c82:	4298      	cmp	r0, r3
 8012c84:	d817      	bhi.n	8012cb6 <_ZNK8touchgfx12TextProvider21gsubTableBinarySearchEtPKtt+0x38>
 8012c86:	1e48      	subs	r0, r1, #1
 8012c88:	f832 0020 	ldrh.w	r0, [r2, r0, lsl #2]
 8012c8c:	4298      	cmp	r0, r3
 8012c8e:	d312      	bcc.n	8012cb6 <_ZNK8touchgfx12TextProvider21gsubTableBinarySearchEtPKtt+0x38>
 8012c90:	2400      	movs	r4, #0
 8012c92:	428c      	cmp	r4, r1
 8012c94:	d20f      	bcs.n	8012cb6 <_ZNK8touchgfx12TextProvider21gsubTableBinarySearchEtPKtt+0x38>
 8012c96:	1860      	adds	r0, r4, r1
 8012c98:	1040      	asrs	r0, r0, #1
 8012c9a:	0085      	lsls	r5, r0, #2
 8012c9c:	f832 6020 	ldrh.w	r6, [r2, r0, lsl #2]
 8012ca0:	42b3      	cmp	r3, r6
 8012ca2:	d902      	bls.n	8012caa <_ZNK8touchgfx12TextProvider21gsubTableBinarySearchEtPKtt+0x2c>
 8012ca4:	3001      	adds	r0, #1
 8012ca6:	b284      	uxth	r4, r0
 8012ca8:	e7f3      	b.n	8012c92 <_ZNK8touchgfx12TextProvider21gsubTableBinarySearchEtPKtt+0x14>
 8012caa:	d201      	bcs.n	8012cb0 <_ZNK8touchgfx12TextProvider21gsubTableBinarySearchEtPKtt+0x32>
 8012cac:	b281      	uxth	r1, r0
 8012cae:	e7f0      	b.n	8012c92 <_ZNK8touchgfx12TextProvider21gsubTableBinarySearchEtPKtt+0x14>
 8012cb0:	442a      	add	r2, r5
 8012cb2:	8850      	ldrh	r0, [r2, #2]
 8012cb4:	bd70      	pop	{r4, r5, r6, pc}
 8012cb6:	2000      	movs	r0, #0
 8012cb8:	e7fc      	b.n	8012cb4 <_ZNK8touchgfx12TextProvider21gsubTableBinarySearchEtPKtt+0x36>

08012cba <_ZN8touchgfx12TextProvider16substituteGlyphsEv>:
 8012cba:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 8012cbe:	6c45      	ldr	r5, [r0, #68]	@ 0x44
 8012cc0:	886f      	ldrh	r7, [r5, #2]
 8012cc2:	4604      	mov	r4, r0
 8012cc4:	087f      	lsrs	r7, r7, #1
 8012cc6:	260b      	movs	r6, #11
 8012cc8:	3e01      	subs	r6, #1
 8012cca:	d013      	beq.n	8012cf4 <_ZN8touchgfx12TextProvider16substituteGlyphsEv+0x3a>
 8012ccc:	8ee3      	ldrh	r3, [r4, #54]	@ 0x36
 8012cce:	eb04 0343 	add.w	r3, r4, r3, lsl #1
 8012cd2:	462a      	mov	r2, r5
 8012cd4:	f8b3 8022 	ldrh.w	r8, [r3, #34]	@ 0x22
 8012cd8:	4639      	mov	r1, r7
 8012cda:	4643      	mov	r3, r8
 8012cdc:	4620      	mov	r0, r4
 8012cde:	f7ff ffce 	bl	8012c7e <_ZNK8touchgfx12TextProvider21gsubTableBinarySearchEtPKtt>
 8012ce2:	b138      	cbz	r0, 8012cf4 <_ZN8touchgfx12TextProvider16substituteGlyphsEv+0x3a>
 8012ce4:	eb05 0140 	add.w	r1, r5, r0, lsl #1
 8012ce8:	4642      	mov	r2, r8
 8012cea:	4620      	mov	r0, r4
 8012cec:	f7ff ff93 	bl	8012c16 <_ZN8touchgfx12TextProvider14applyGsubRulesEPKtt>
 8012cf0:	2800      	cmp	r0, #0
 8012cf2:	d1e9      	bne.n	8012cc8 <_ZN8touchgfx12TextProvider16substituteGlyphsEv+0xe>
 8012cf4:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}

08012cf8 <_ZN8touchgfx9GradientsC1EPKNS_7Point3DE>:
 8012cf8:	b570      	push	{r4, r5, r6, lr}
 8012cfa:	694a      	ldr	r2, [r1, #20]
 8012cfc:	6a8d      	ldr	r5, [r1, #40]	@ 0x28
 8012cfe:	684b      	ldr	r3, [r1, #4]
 8012d00:	6ace      	ldr	r6, [r1, #44]	@ 0x2c
 8012d02:	1b54      	subs	r4, r2, r5
 8012d04:	f000 8106 	beq.w	8012f14 <_ZN8touchgfx9GradientsC1EPKNS_7Point3DE+0x21c>
 8012d08:	1b9b      	subs	r3, r3, r6
 8012d0a:	d003      	beq.n	8012d14 <_ZN8touchgfx9GradientsC1EPKNS_7Point3DE+0x1c>
 8012d0c:	4363      	muls	r3, r4
 8012d0e:	2210      	movs	r2, #16
 8012d10:	fb93 f3f2 	sdiv	r3, r3, r2
 8012d14:	680c      	ldr	r4, [r1, #0]
 8012d16:	698a      	ldr	r2, [r1, #24]
 8012d18:	1b65      	subs	r5, r4, r5
 8012d1a:	f000 80fd 	beq.w	8012f18 <_ZN8touchgfx9GradientsC1EPKNS_7Point3DE+0x220>
 8012d1e:	1b92      	subs	r2, r2, r6
 8012d20:	d003      	beq.n	8012d2a <_ZN8touchgfx9GradientsC1EPKNS_7Point3DE+0x32>
 8012d22:	436a      	muls	r2, r5
 8012d24:	2410      	movs	r4, #16
 8012d26:	fb92 f2f4 	sdiv	r2, r2, r4
 8012d2a:	1a9b      	subs	r3, r3, r2
 8012d2c:	ee07 3a90 	vmov	s15, r3
 8012d30:	ed9f 4a88 	vldr	s8, [pc, #544]	@ 8012f54 <_ZN8touchgfx9GradientsC1EPKNS_7Point3DE+0x25c>
 8012d34:	eef8 7ae7 	vcvt.f32.s32	s15, s15
 8012d38:	eeb7 7a00 	vmov.f32	s14, #112	@ 0x3f800000  1.0
 8012d3c:	ee67 7a84 	vmul.f32	s15, s15, s8
 8012d40:	460a      	mov	r2, r1
 8012d42:	ee87 3a27 	vdiv.f32	s6, s14, s15
 8012d46:	4603      	mov	r3, r0
 8012d48:	f100 040c 	add.w	r4, r0, #12
 8012d4c:	eeb1 6a43 	vneg.f32	s12, s6
 8012d50:	edd2 7a02 	vldr	s15, [r2, #8]
 8012d54:	eec7 6a27 	vdiv.f32	s13, s14, s15
 8012d58:	3214      	adds	r2, #20
 8012d5a:	ece3 6a01 	vstmia	r3!, {s13}
 8012d5e:	ed52 7a02 	vldr	s15, [r2, #-8]
 8012d62:	ee67 7aa6 	vmul.f32	s15, s15, s13
 8012d66:	429c      	cmp	r4, r3
 8012d68:	edc3 7a02 	vstr	s15, [r3, #8]
 8012d6c:	ed52 7a01 	vldr	s15, [r2, #-4]
 8012d70:	ee67 7aa6 	vmul.f32	s15, s15, s13
 8012d74:	edc3 7a05 	vstr	s15, [r3, #20]
 8012d78:	d1ea      	bne.n	8012d50 <_ZN8touchgfx9GradientsC1EPKNS_7Point3DE+0x58>
 8012d7a:	6aca      	ldr	r2, [r1, #44]	@ 0x2c
 8012d7c:	698b      	ldr	r3, [r1, #24]
 8012d7e:	edd0 4a02 	vldr	s9, [r0, #8]
 8012d82:	edd0 3a00 	vldr	s7, [r0]
 8012d86:	edd0 6a01 	vldr	s13, [r0, #4]
 8012d8a:	ed90 5a05 	vldr	s10, [r0, #20]
 8012d8e:	ed90 2a03 	vldr	s4, [r0, #12]
 8012d92:	edd0 5a04 	vldr	s11, [r0, #16]
 8012d96:	ed90 1a07 	vldr	s2, [r0, #28]
 8012d9a:	edd0 2a06 	vldr	s5, [r0, #24]
 8012d9e:	1a9b      	subs	r3, r3, r2
 8012da0:	ee07 3a90 	vmov	s15, r3
 8012da4:	684b      	ldr	r3, [r1, #4]
 8012da6:	1a9b      	subs	r3, r3, r2
 8012da8:	ee07 3a10 	vmov	s14, r3
 8012dac:	eef8 7ae7 	vcvt.f32.s32	s15, s15
 8012db0:	ee76 6ae4 	vsub.f32	s13, s13, s9
 8012db4:	ee67 7a84 	vmul.f32	s15, s15, s8
 8012db8:	ee73 4ae4 	vsub.f32	s9, s7, s9
 8012dbc:	eeb8 7ac7 	vcvt.f32.s32	s14, s14
 8012dc0:	ee64 7ae7 	vnmul.f32	s15, s9, s15
 8012dc4:	ee27 7a04 	vmul.f32	s14, s14, s8
 8012dc8:	ee75 5ac5 	vsub.f32	s11, s11, s10
 8012dcc:	eee6 7a87 	vfma.f32	s15, s13, s14
 8012dd0:	ee32 5a45 	vsub.f32	s10, s4, s10
 8012dd4:	ee67 7a83 	vmul.f32	s15, s15, s6
 8012dd8:	edc0 7a09 	vstr	s15, [r0, #36]	@ 0x24
 8012ddc:	6a8c      	ldr	r4, [r1, #40]	@ 0x28
 8012dde:	694a      	ldr	r2, [r1, #20]
 8012de0:	1b13      	subs	r3, r2, r4
 8012de2:	ee07 3a10 	vmov	s14, r3
 8012de6:	eeb8 7ac7 	vcvt.f32.s32	s14, s14
 8012dea:	680b      	ldr	r3, [r1, #0]
 8012dec:	ee27 7a04 	vmul.f32	s14, s14, s8
 8012df0:	1b1b      	subs	r3, r3, r4
 8012df2:	ee64 4ac7 	vnmul.f32	s9, s9, s14
 8012df6:	ee07 3a10 	vmov	s14, r3
 8012dfa:	eeb8 7ac7 	vcvt.f32.s32	s14, s14
 8012dfe:	ee27 7a04 	vmul.f32	s14, s14, s8
 8012e02:	eee6 4a87 	vfma.f32	s9, s13, s14
 8012e06:	ee64 4a86 	vmul.f32	s9, s9, s12
 8012e0a:	edc0 4a0a 	vstr	s9, [r0, #40]	@ 0x28
 8012e0e:	6aca      	ldr	r2, [r1, #44]	@ 0x2c
 8012e10:	698b      	ldr	r3, [r1, #24]
 8012e12:	1a9b      	subs	r3, r3, r2
 8012e14:	ee06 3a90 	vmov	s13, r3
 8012e18:	684b      	ldr	r3, [r1, #4]
 8012e1a:	1a9b      	subs	r3, r3, r2
 8012e1c:	ee07 3a10 	vmov	s14, r3
 8012e20:	eef8 6ae6 	vcvt.f32.s32	s13, s13
 8012e24:	eeb8 7ac7 	vcvt.f32.s32	s14, s14
 8012e28:	ee66 6a84 	vmul.f32	s13, s13, s8
 8012e2c:	ee27 7a04 	vmul.f32	s14, s14, s8
 8012e30:	ee65 6a66 	vnmul.f32	s13, s10, s13
 8012e34:	eee5 6a87 	vfma.f32	s13, s11, s14
 8012e38:	ee66 6a83 	vmul.f32	s13, s13, s6
 8012e3c:	edc0 6a0b 	vstr	s13, [r0, #44]	@ 0x2c
 8012e40:	6a8c      	ldr	r4, [r1, #40]	@ 0x28
 8012e42:	694a      	ldr	r2, [r1, #20]
 8012e44:	1b13      	subs	r3, r2, r4
 8012e46:	ee07 3a10 	vmov	s14, r3
 8012e4a:	eeb8 7ac7 	vcvt.f32.s32	s14, s14
 8012e4e:	680b      	ldr	r3, [r1, #0]
 8012e50:	ee27 7a04 	vmul.f32	s14, s14, s8
 8012e54:	1b1b      	subs	r3, r3, r4
 8012e56:	ee25 5a47 	vnmul.f32	s10, s10, s14
 8012e5a:	ee07 3a10 	vmov	s14, r3
 8012e5e:	eeb8 7ac7 	vcvt.f32.s32	s14, s14
 8012e62:	ee27 7a04 	vmul.f32	s14, s14, s8
 8012e66:	eea5 5a87 	vfma.f32	s10, s11, s14
 8012e6a:	edd0 5a08 	vldr	s11, [r0, #32]
 8012e6e:	ee25 5a06 	vmul.f32	s10, s10, s12
 8012e72:	ee31 1a65 	vsub.f32	s2, s2, s11
 8012e76:	ed80 5a0c 	vstr	s10, [r0, #48]	@ 0x30
 8012e7a:	6aca      	ldr	r2, [r1, #44]	@ 0x2c
 8012e7c:	698b      	ldr	r3, [r1, #24]
 8012e7e:	1a9b      	subs	r3, r3, r2
 8012e80:	ee07 3a10 	vmov	s14, r3
 8012e84:	684b      	ldr	r3, [r1, #4]
 8012e86:	1a9b      	subs	r3, r3, r2
 8012e88:	ee01 3a90 	vmov	s3, r3
 8012e8c:	eeb8 7ac7 	vcvt.f32.s32	s14, s14
 8012e90:	ee72 5ae5 	vsub.f32	s11, s5, s11
 8012e94:	ee27 7a04 	vmul.f32	s14, s14, s8
 8012e98:	eef8 1ae1 	vcvt.f32.s32	s3, s3
 8012e9c:	ee25 7ac7 	vnmul.f32	s14, s11, s14
 8012ea0:	ee61 1a84 	vmul.f32	s3, s3, s8
 8012ea4:	eea1 7a21 	vfma.f32	s14, s2, s3
 8012ea8:	ee27 7a03 	vmul.f32	s14, s14, s6
 8012eac:	ed80 7a0d 	vstr	s14, [r0, #52]	@ 0x34
 8012eb0:	6a8c      	ldr	r4, [r1, #40]	@ 0x28
 8012eb2:	694a      	ldr	r2, [r1, #20]
 8012eb4:	1b13      	subs	r3, r2, r4
 8012eb6:	ee03 3a10 	vmov	s6, r3
 8012eba:	eeb8 3ac3 	vcvt.f32.s32	s6, s6
 8012ebe:	680b      	ldr	r3, [r1, #0]
 8012ec0:	ee23 3a04 	vmul.f32	s6, s6, s8
 8012ec4:	1b1b      	subs	r3, r3, r4
 8012ec6:	ee65 5ac3 	vnmul.f32	s11, s11, s6
 8012eca:	ee03 3a10 	vmov	s6, r3
 8012ece:	eeb8 3ac3 	vcvt.f32.s32	s6, s6
 8012ed2:	ee23 4a04 	vmul.f32	s8, s6, s8
 8012ed6:	eee1 5a04 	vfma.f32	s11, s2, s8
 8012eda:	ee25 6a86 	vmul.f32	s12, s11, s12
 8012ede:	ee62 5a67 	vnmul.f32	s11, s4, s15
 8012ee2:	ed80 6a0e 	vstr	s12, [r0, #56]	@ 0x38
 8012ee6:	eee3 5aa6 	vfma.f32	s11, s7, s13
 8012eea:	eef5 5ac0 	vcmpe.f32	s11, #0.0
 8012eee:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 8012ef2:	dd13      	ble.n	8012f1c <_ZN8touchgfx9GradientsC1EPKNS_7Point3DE+0x224>
 8012ef4:	f44f 4300 	mov.w	r3, #32768	@ 0x8000
 8012ef8:	ee62 7ae7 	vnmul.f32	s15, s5, s15
 8012efc:	63c3      	str	r3, [r0, #60]	@ 0x3c
 8012efe:	eee3 7a87 	vfma.f32	s15, s7, s14
 8012f02:	eef5 7ac0 	vcmpe.f32	s15, #0.0
 8012f06:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 8012f0a:	dd15      	ble.n	8012f38 <_ZN8touchgfx9GradientsC1EPKNS_7Point3DE+0x240>
 8012f0c:	f44f 4300 	mov.w	r3, #32768	@ 0x8000
 8012f10:	6403      	str	r3, [r0, #64]	@ 0x40
 8012f12:	bd70      	pop	{r4, r5, r6, pc}
 8012f14:	4623      	mov	r3, r4
 8012f16:	e6fd      	b.n	8012d14 <_ZN8touchgfx9GradientsC1EPKNS_7Point3DE+0x1c>
 8012f18:	462a      	mov	r2, r5
 8012f1a:	e706      	b.n	8012d2a <_ZN8touchgfx9GradientsC1EPKNS_7Point3DE+0x32>
 8012f1c:	d502      	bpl.n	8012f24 <_ZN8touchgfx9GradientsC1EPKNS_7Point3DE+0x22c>
 8012f1e:	f647 73ff 	movw	r3, #32767	@ 0x7fff
 8012f22:	e7e9      	b.n	8012ef8 <_ZN8touchgfx9GradientsC1EPKNS_7Point3DE+0x200>
 8012f24:	ee22 2a64 	vnmul.f32	s4, s4, s9
 8012f28:	eea3 2a85 	vfma.f32	s4, s7, s10
 8012f2c:	eeb5 2ac0 	vcmpe.f32	s4, #0.0
 8012f30:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 8012f34:	dade      	bge.n	8012ef4 <_ZN8touchgfx9GradientsC1EPKNS_7Point3DE+0x1fc>
 8012f36:	e7f2      	b.n	8012f1e <_ZN8touchgfx9GradientsC1EPKNS_7Point3DE+0x226>
 8012f38:	d502      	bpl.n	8012f40 <_ZN8touchgfx9GradientsC1EPKNS_7Point3DE+0x248>
 8012f3a:	f647 73ff 	movw	r3, #32767	@ 0x7fff
 8012f3e:	e7e7      	b.n	8012f10 <_ZN8touchgfx9GradientsC1EPKNS_7Point3DE+0x218>
 8012f40:	ee62 4ae4 	vnmul.f32	s9, s5, s9
 8012f44:	eee3 4a86 	vfma.f32	s9, s7, s12
 8012f48:	eef5 4ac0 	vcmpe.f32	s9, #0.0
 8012f4c:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 8012f50:	dadc      	bge.n	8012f0c <_ZN8touchgfx9GradientsC1EPKNS_7Point3DE+0x214>
 8012f52:	e7f2      	b.n	8012f3a <_ZN8touchgfx9GradientsC1EPKNS_7Point3DE+0x242>
 8012f54:	3d800000 	.word	0x3d800000

08012f58 <_ZN8touchgfx4EdgeC1ERKNS_9GradientsEPKNS_7Point3DEii>:
 8012f58:	e92d 47f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
 8012f5c:	2714      	movs	r7, #20
 8012f5e:	435f      	muls	r7, r3
 8012f60:	eb02 0c07 	add.w	ip, r2, r7
 8012f64:	f8dc 5004 	ldr.w	r5, [ip, #4]
 8012f68:	f115 0e0f 	adds.w	lr, r5, #15
 8012f6c:	f100 80a2 	bmi.w	80130b4 <_ZN8touchgfx4EdgeC1ERKNS_9GradientsEPKNS_7Point3DEii+0x15c>
 8012f70:	ea4f 1e2e 	mov.w	lr, lr, asr #4
 8012f74:	9c08      	ldr	r4, [sp, #32]
 8012f76:	f8c0 e014 	str.w	lr, [r0, #20]
 8012f7a:	2614      	movs	r6, #20
 8012f7c:	4366      	muls	r6, r4
 8012f7e:	eb02 0806 	add.w	r8, r2, r6
 8012f82:	f8d8 5004 	ldr.w	r5, [r8, #4]
 8012f86:	f115 040f 	adds.w	r4, r5, #15
 8012f8a:	f100 809f 	bmi.w	80130cc <_ZN8touchgfx4EdgeC1ERKNS_9GradientsEPKNS_7Point3DEii+0x174>
 8012f8e:	1124      	asrs	r4, r4, #4
 8012f90:	eba4 040e 	sub.w	r4, r4, lr
 8012f94:	6184      	str	r4, [r0, #24]
 8012f96:	2c00      	cmp	r4, #0
 8012f98:	f000 808a 	beq.w	80130b0 <_ZN8touchgfx4EdgeC1ERKNS_9GradientsEPKNS_7Point3DEii+0x158>
 8012f9c:	f8dc 9004 	ldr.w	r9, [ip, #4]
 8012fa0:	f8d8 4004 	ldr.w	r4, [r8, #4]
 8012fa4:	5995      	ldr	r5, [r2, r6]
 8012fa6:	eba4 0809 	sub.w	r8, r4, r9
 8012faa:	59d4      	ldr	r4, [r2, r7]
 8012fac:	eba5 0a04 	sub.w	sl, r5, r4
 8012fb0:	ea4f 150a 	mov.w	r5, sl, lsl #4
 8012fb4:	fb0e fe05 	mul.w	lr, lr, r5
 8012fb8:	fb0a ee19 	mls	lr, sl, r9, lr
 8012fbc:	fb08 e404 	mla	r4, r8, r4, lr
 8012fc0:	ea4f 1608 	mov.w	r6, r8, lsl #4
 8012fc4:	3c01      	subs	r4, #1
 8012fc6:	19a4      	adds	r4, r4, r6
 8012fc8:	f100 808c 	bmi.w	80130e4 <_ZN8touchgfx4EdgeC1ERKNS_9GradientsEPKNS_7Point3DEii+0x18c>
 8012fcc:	fb94 fef6 	sdiv	lr, r4, r6
 8012fd0:	f8c0 e000 	str.w	lr, [r0]
 8012fd4:	fb06 441e 	mls	r4, r6, lr, r4
 8012fd8:	6104      	str	r4, [r0, #16]
 8012fda:	2d00      	cmp	r5, #0
 8012fdc:	f2c0 8095 	blt.w	801310a <_ZN8touchgfx4EdgeC1ERKNS_9GradientsEPKNS_7Point3DEii+0x1b2>
 8012fe0:	fb95 f4f6 	sdiv	r4, r5, r6
 8012fe4:	6044      	str	r4, [r0, #4]
 8012fe6:	fb06 5514 	mls	r5, r6, r4, r5
 8012fea:	6085      	str	r5, [r0, #8]
 8012fec:	60c6      	str	r6, [r0, #12]
 8012fee:	f8dc 4004 	ldr.w	r4, [ip, #4]
 8012ff2:	6945      	ldr	r5, [r0, #20]
 8012ff4:	59d2      	ldr	r2, [r2, r7]
 8012ff6:	eddf 6a4d 	vldr	s13, [pc, #308]	@ 801312c <_ZN8touchgfx4EdgeC1ERKNS_9GradientsEPKNS_7Point3DEii+0x1d4>
 8012ffa:	ed91 6a0a 	vldr	s12, [r1, #40]	@ 0x28
 8012ffe:	ebc4 1405 	rsb	r4, r4, r5, lsl #4
 8013002:	ee07 4a10 	vmov	s14, r4
 8013006:	6804      	ldr	r4, [r0, #0]
 8013008:	ebc2 1204 	rsb	r2, r2, r4, lsl #4
 801300c:	ee07 2a90 	vmov	s15, r2
 8013010:	eeb8 7ac7 	vcvt.f32.s32	s14, s14
 8013014:	eef8 7ae7 	vcvt.f32.s32	s15, s15
 8013018:	eb01 0383 	add.w	r3, r1, r3, lsl #2
 801301c:	ee27 7a26 	vmul.f32	s14, s14, s13
 8013020:	ee67 7aa6 	vmul.f32	s15, s15, s13
 8013024:	edd3 6a00 	vldr	s13, [r3]
 8013028:	eee6 6a07 	vfma.f32	s13, s12, s14
 801302c:	ed91 6a09 	vldr	s12, [r1, #36]	@ 0x24
 8013030:	eee6 6a27 	vfma.f32	s13, s12, s15
 8013034:	edc0 6a07 	vstr	s13, [r0, #28]
 8013038:	edd0 6a01 	vldr	s13, [r0, #4]
 801303c:	edd1 5a09 	vldr	s11, [r1, #36]	@ 0x24
 8013040:	ed91 6a0a 	vldr	s12, [r1, #40]	@ 0x28
 8013044:	eef8 6ae6 	vcvt.f32.s32	s13, s13
 8013048:	eea6 6aa5 	vfma.f32	s12, s13, s11
 801304c:	ed80 6a08 	vstr	s12, [r0, #32]
 8013050:	6a4a      	ldr	r2, [r1, #36]	@ 0x24
 8013052:	6242      	str	r2, [r0, #36]	@ 0x24
 8013054:	edd1 5a0c 	vldr	s11, [r1, #48]	@ 0x30
 8013058:	ed93 6a03 	vldr	s12, [r3, #12]
 801305c:	eea5 6a87 	vfma.f32	s12, s11, s14
 8013060:	edd1 5a0b 	vldr	s11, [r1, #44]	@ 0x2c
 8013064:	eea5 6aa7 	vfma.f32	s12, s11, s15
 8013068:	ed80 6a0a 	vstr	s12, [r0, #40]	@ 0x28
 801306c:	edd1 5a0b 	vldr	s11, [r1, #44]	@ 0x2c
 8013070:	ed91 6a0c 	vldr	s12, [r1, #48]	@ 0x30
 8013074:	eea6 6aa5 	vfma.f32	s12, s13, s11
 8013078:	ed80 6a0b 	vstr	s12, [r0, #44]	@ 0x2c
 801307c:	6aca      	ldr	r2, [r1, #44]	@ 0x2c
 801307e:	6302      	str	r2, [r0, #48]	@ 0x30
 8013080:	ed93 6a06 	vldr	s12, [r3, #24]
 8013084:	edd1 5a0e 	vldr	s11, [r1, #56]	@ 0x38
 8013088:	eea5 6a87 	vfma.f32	s12, s11, s14
 801308c:	eeb0 7a46 	vmov.f32	s14, s12
 8013090:	ed91 6a0d 	vldr	s12, [r1, #52]	@ 0x34
 8013094:	eea6 7a27 	vfma.f32	s14, s12, s15
 8013098:	ed80 7a0d 	vstr	s14, [r0, #52]	@ 0x34
 801309c:	ed91 7a0d 	vldr	s14, [r1, #52]	@ 0x34
 80130a0:	edd1 7a0e 	vldr	s15, [r1, #56]	@ 0x38
 80130a4:	eee6 7a87 	vfma.f32	s15, s13, s14
 80130a8:	edc0 7a0e 	vstr	s15, [r0, #56]	@ 0x38
 80130ac:	6b4b      	ldr	r3, [r1, #52]	@ 0x34
 80130ae:	63c3      	str	r3, [r0, #60]	@ 0x3c
 80130b0:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
 80130b4:	f1c5 0501 	rsb	r5, r5, #1
 80130b8:	f015 050f 	ands.w	r5, r5, #15
 80130bc:	bf18      	it	ne
 80130be:	2501      	movne	r5, #1
 80130c0:	2410      	movs	r4, #16
 80130c2:	fb9e fef4 	sdiv	lr, lr, r4
 80130c6:	ebae 0e05 	sub.w	lr, lr, r5
 80130ca:	e753      	b.n	8012f74 <_ZN8touchgfx4EdgeC1ERKNS_9GradientsEPKNS_7Point3DEii+0x1c>
 80130cc:	f1c5 0501 	rsb	r5, r5, #1
 80130d0:	f015 050f 	ands.w	r5, r5, #15
 80130d4:	bf18      	it	ne
 80130d6:	2501      	movne	r5, #1
 80130d8:	f04f 0910 	mov.w	r9, #16
 80130dc:	fb94 f4f9 	sdiv	r4, r4, r9
 80130e0:	1b64      	subs	r4, r4, r5
 80130e2:	e755      	b.n	8012f90 <_ZN8touchgfx4EdgeC1ERKNS_9GradientsEPKNS_7Point3DEii+0x38>
 80130e4:	4264      	negs	r4, r4
 80130e6:	fb94 fef6 	sdiv	lr, r4, r6
 80130ea:	f1ce 0800 	rsb	r8, lr, #0
 80130ee:	fb06 441e 	mls	r4, r6, lr, r4
 80130f2:	f8c0 8000 	str.w	r8, [r0]
 80130f6:	6104      	str	r4, [r0, #16]
 80130f8:	2c00      	cmp	r4, #0
 80130fa:	f43f af6e 	beq.w	8012fda <_ZN8touchgfx4EdgeC1ERKNS_9GradientsEPKNS_7Point3DEii+0x82>
 80130fe:	ea6f 0e0e 	mvn.w	lr, lr
 8013102:	f8c0 e000 	str.w	lr, [r0]
 8013106:	1b34      	subs	r4, r6, r4
 8013108:	e766      	b.n	8012fd8 <_ZN8touchgfx4EdgeC1ERKNS_9GradientsEPKNS_7Point3DEii+0x80>
 801310a:	426d      	negs	r5, r5
 801310c:	fb95 f4f6 	sdiv	r4, r5, r6
 8013110:	f1c4 0e00 	rsb	lr, r4, #0
 8013114:	fb06 5514 	mls	r5, r6, r4, r5
 8013118:	f8c0 e004 	str.w	lr, [r0, #4]
 801311c:	6085      	str	r5, [r0, #8]
 801311e:	2d00      	cmp	r5, #0
 8013120:	f43f af64 	beq.w	8012fec <_ZN8touchgfx4EdgeC1ERKNS_9GradientsEPKNS_7Point3DEii+0x94>
 8013124:	43e4      	mvns	r4, r4
 8013126:	6044      	str	r4, [r0, #4]
 8013128:	1b75      	subs	r5, r6, r5
 801312a:	e75e      	b.n	8012fea <_ZN8touchgfx4EdgeC1ERKNS_9GradientsEPKNS_7Point3DEii+0x92>
 801312c:	3d800000 	.word	0x3d800000

08013130 <_ZN8touchgfx7Unicode6strlenEPKt>:
 8013130:	4602      	mov	r2, r0
 8013132:	b148      	cbz	r0, 8013148 <_ZN8touchgfx7Unicode6strlenEPKt+0x18>
 8013134:	2300      	movs	r3, #0
 8013136:	b298      	uxth	r0, r3
 8013138:	3301      	adds	r3, #1
 801313a:	eb02 0143 	add.w	r1, r2, r3, lsl #1
 801313e:	f831 1c02 	ldrh.w	r1, [r1, #-2]
 8013142:	2900      	cmp	r1, #0
 8013144:	d1f7      	bne.n	8013136 <_ZN8touchgfx7Unicode6strlenEPKt+0x6>
 8013146:	4770      	bx	lr
 8013148:	4770      	bx	lr

0801314a <_ZN8touchgfx7Unicode7strncpyEPtPKct>:
 801314a:	b530      	push	{r4, r5, lr}
 801314c:	4604      	mov	r4, r0
 801314e:	b159      	cbz	r1, 8013168 <_ZN8touchgfx7Unicode7strncpyEPtPKct+0x1e>
 8013150:	b148      	cbz	r0, 8013166 <_ZN8touchgfx7Unicode7strncpyEPtPKct+0x1c>
 8013152:	2300      	movs	r3, #0
 8013154:	b298      	uxth	r0, r3
 8013156:	4282      	cmp	r2, r0
 8013158:	d905      	bls.n	8013166 <_ZN8touchgfx7Unicode7strncpyEPtPKct+0x1c>
 801315a:	5ccd      	ldrb	r5, [r1, r3]
 801315c:	f824 5013 	strh.w	r5, [r4, r3, lsl #1]
 8013160:	3301      	adds	r3, #1
 8013162:	2d00      	cmp	r5, #0
 8013164:	d1f6      	bne.n	8013154 <_ZN8touchgfx7Unicode7strncpyEPtPKct+0xa>
 8013166:	bd30      	pop	{r4, r5, pc}
 8013168:	4608      	mov	r0, r1
 801316a:	e7fc      	b.n	8013166 <_ZN8touchgfx7Unicode7strncpyEPtPKct+0x1c>

0801316c <_ZN8touchgfx7Unicode4itoaElPtti.part.2>:
 801316c:	b5f0      	push	{r4, r5, r6, r7, lr}
 801316e:	b08b      	sub	sp, #44	@ 0x2c
 8013170:	468c      	mov	ip, r1
 8013172:	2100      	movs	r1, #0
 8013174:	f88d 1024 	strb.w	r1, [sp, #36]	@ 0x24
 8013178:	4604      	mov	r4, r0
 801317a:	261f      	movs	r6, #31
 801317c:	af01      	add	r7, sp, #4
 801317e:	fb94 fef3 	sdiv	lr, r4, r3
 8013182:	fb03 441e 	mls	r4, r3, lr, r4
 8013186:	ea84 75e4 	eor.w	r5, r4, r4, asr #31
 801318a:	eba5 75e4 	sub.w	r5, r5, r4, asr #31
 801318e:	b2ec      	uxtb	r4, r5
 8013190:	2d09      	cmp	r5, #9
 8013192:	bfd4      	ite	le
 8013194:	3430      	addle	r4, #48	@ 0x30
 8013196:	3457      	addgt	r4, #87	@ 0x57
 8013198:	b2e4      	uxtb	r4, r4
 801319a:	55bc      	strb	r4, [r7, r6]
 801319c:	4674      	mov	r4, lr
 801319e:	1e71      	subs	r1, r6, #1
 80131a0:	b974      	cbnz	r4, 80131c0 <_ZN8touchgfx7Unicode4itoaElPtti.part.2+0x54>
 80131a2:	2800      	cmp	r0, #0
 80131a4:	da05      	bge.n	80131b2 <_ZN8touchgfx7Unicode4itoaElPtti.part.2+0x46>
 80131a6:	ab0a      	add	r3, sp, #40	@ 0x28
 80131a8:	4419      	add	r1, r3
 80131aa:	232d      	movs	r3, #45	@ 0x2d
 80131ac:	f801 3c24 	strb.w	r3, [r1, #-36]
 80131b0:	1eb1      	subs	r1, r6, #2
 80131b2:	3101      	adds	r1, #1
 80131b4:	4439      	add	r1, r7
 80131b6:	4660      	mov	r0, ip
 80131b8:	f7ff ffc7 	bl	801314a <_ZN8touchgfx7Unicode7strncpyEPtPKct>
 80131bc:	b00b      	add	sp, #44	@ 0x2c
 80131be:	bdf0      	pop	{r4, r5, r6, r7, pc}
 80131c0:	460e      	mov	r6, r1
 80131c2:	e7dc      	b.n	801317e <_ZN8touchgfx7Unicode4itoaElPtti.part.2+0x12>

080131c4 <_ZN8touchgfx7Unicode4utoaEmPtti.part.3>:
 80131c4:	b5f0      	push	{r4, r5, r6, r7, lr}
 80131c6:	b08b      	sub	sp, #44	@ 0x2c
 80131c8:	468c      	mov	ip, r1
 80131ca:	2100      	movs	r1, #0
 80131cc:	f88d 1024 	strb.w	r1, [sp, #36]	@ 0x24
 80131d0:	ae01      	add	r6, sp, #4
 80131d2:	211f      	movs	r1, #31
 80131d4:	fbb0 f7f3 	udiv	r7, r0, r3
 80131d8:	fb03 0517 	mls	r5, r3, r7, r0
 80131dc:	b2ec      	uxtb	r4, r5
 80131de:	2d09      	cmp	r5, #9
 80131e0:	bfd4      	ite	le
 80131e2:	3430      	addle	r4, #48	@ 0x30
 80131e4:	3457      	addgt	r4, #87	@ 0x57
 80131e6:	b2e4      	uxtb	r4, r4
 80131e8:	558c      	strb	r4, [r1, r6]
 80131ea:	4638      	mov	r0, r7
 80131ec:	1e4c      	subs	r4, r1, #1
 80131ee:	b92f      	cbnz	r7, 80131fc <_ZN8touchgfx7Unicode4utoaEmPtti.part.3+0x38>
 80131f0:	4431      	add	r1, r6
 80131f2:	4660      	mov	r0, ip
 80131f4:	f7ff ffa9 	bl	801314a <_ZN8touchgfx7Unicode7strncpyEPtPKct>
 80131f8:	b00b      	add	sp, #44	@ 0x2c
 80131fa:	bdf0      	pop	{r4, r5, r6, r7, pc}
 80131fc:	4621      	mov	r1, r4
 80131fe:	e7e9      	b.n	80131d4 <_ZN8touchgfx7Unicode4utoaEmPtti.part.3+0x10>

08013200 <_ZN8touchgfx7Unicode4itoaElPtti>:
 8013200:	b410      	push	{r4}
 8013202:	b131      	cbz	r1, 8013212 <_ZN8touchgfx7Unicode4itoaElPtti+0x12>
 8013204:	1e9c      	subs	r4, r3, #2
 8013206:	2c22      	cmp	r4, #34	@ 0x22
 8013208:	d803      	bhi.n	8013212 <_ZN8touchgfx7Unicode4itoaElPtti+0x12>
 801320a:	f85d 4b04 	ldr.w	r4, [sp], #4
 801320e:	f7ff bfad 	b.w	801316c <_ZN8touchgfx7Unicode4itoaElPtti.part.2>
 8013212:	f85d 4b04 	ldr.w	r4, [sp], #4
 8013216:	4770      	bx	lr

08013218 <_ZN8touchgfx7Unicode13composeStringERPKtttbbibibRitPt>:
 8013218:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 801321c:	4691      	mov	r9, r2
 801321e:	b085      	sub	sp, #20
 8013220:	6802      	ldr	r2, [r0, #0]
 8013222:	9201      	str	r2, [sp, #4]
 8013224:	4688      	mov	r8, r1
 8013226:	4683      	mov	fp, r0
 8013228:	f89d 1040 	ldrb.w	r1, [sp, #64]	@ 0x40
 801322c:	9103      	str	r1, [sp, #12]
 801322e:	4610      	mov	r0, r2
 8013230:	461c      	mov	r4, r3
 8013232:	f89d 3048 	ldrb.w	r3, [sp, #72]	@ 0x48
 8013236:	9302      	str	r3, [sp, #8]
 8013238:	f7ff ff7a 	bl	8013130 <_ZN8touchgfx7Unicode6strlenEPKt>
 801323c:	f1b8 0f00 	cmp.w	r8, #0
 8013240:	bf0c      	ite	eq
 8013242:	4684      	moveq	ip, r0
 8013244:	f100 0c01 	addne.w	ip, r0, #1
 8013248:	f1b9 0f69 	cmp.w	r9, #105	@ 0x69
 801324c:	f89d 6038 	ldrb.w	r6, [sp, #56]	@ 0x38
 8013250:	9f0f      	ldr	r7, [sp, #60]	@ 0x3c
 8013252:	9d13      	ldr	r5, [sp, #76]	@ 0x4c
 8013254:	f8dd a054 	ldr.w	sl, [sp, #84]	@ 0x54
 8013258:	9903      	ldr	r1, [sp, #12]
 801325a:	fa1f fc8c 	uxth.w	ip, ip
 801325e:	e9dd 2301 	ldrd	r2, r3, [sp, #4]
 8013262:	d041      	beq.n	80132e8 <_ZN8touchgfx7Unicode13composeStringERPKtttbbibibRitPt+0xd0>
 8013264:	d834      	bhi.n	80132d0 <_ZN8touchgfx7Unicode13composeStringERPKtttbbibibRitPt+0xb8>
 8013266:	f1b9 0f63 	cmp.w	r9, #99	@ 0x63
 801326a:	d059      	beq.n	8013320 <_ZN8touchgfx7Unicode13composeStringERPKtttbbibibRitPt+0x108>
 801326c:	f1b9 0f64 	cmp.w	r9, #100	@ 0x64
 8013270:	d03a      	beq.n	80132e8 <_ZN8touchgfx7Unicode13composeStringERPKtttbbibibRitPt+0xd0>
 8013272:	f1b9 0f58 	cmp.w	r9, #88	@ 0x58
 8013276:	d034      	beq.n	80132e2 <_ZN8touchgfx7Unicode13composeStringERPKtttbbibibRitPt+0xca>
 8013278:	2400      	movs	r4, #0
 801327a:	f8bd 2050 	ldrh.w	r2, [sp, #80]	@ 0x50
 801327e:	3a01      	subs	r2, #1
 8013280:	b169      	cbz	r1, 801329e <_ZN8touchgfx7Unicode13composeStringERPKtttbbibibRitPt+0x86>
 8013282:	9911      	ldr	r1, [sp, #68]	@ 0x44
 8013284:	458c      	cmp	ip, r1
 8013286:	da09      	bge.n	801329c <_ZN8touchgfx7Unicode13composeStringERPKtttbbibibRitPt+0x84>
 8013288:	eba1 010c 	sub.w	r1, r1, ip
 801328c:	b289      	uxth	r1, r1
 801328e:	b933      	cbnz	r3, 801329e <_ZN8touchgfx7Unicode13composeStringERPKtttbbibibRitPt+0x86>
 8013290:	2e00      	cmp	r6, #0
 8013292:	d051      	beq.n	8013338 <_ZN8touchgfx7Unicode13composeStringERPKtttbbibibRitPt+0x120>
 8013294:	2800      	cmp	r0, #0
 8013296:	d04f      	beq.n	8013338 <_ZN8touchgfx7Unicode13composeStringERPKtttbbibibRitPt+0x120>
 8013298:	440c      	add	r4, r1
 801329a:	b2a4      	uxth	r4, r4
 801329c:	2100      	movs	r1, #0
 801329e:	682b      	ldr	r3, [r5, #0]
 80132a0:	4293      	cmp	r3, r2
 80132a2:	da07      	bge.n	80132b4 <_ZN8touchgfx7Unicode13composeStringERPKtttbbibibRitPt+0x9c>
 80132a4:	f1b8 0f00 	cmp.w	r8, #0
 80132a8:	d004      	beq.n	80132b4 <_ZN8touchgfx7Unicode13composeStringERPKtttbbibibRitPt+0x9c>
 80132aa:	f82a 8013 	strh.w	r8, [sl, r3, lsl #1]
 80132ae:	682b      	ldr	r3, [r5, #0]
 80132b0:	3301      	adds	r3, #1
 80132b2:	602b      	str	r3, [r5, #0]
 80132b4:	2730      	movs	r7, #48	@ 0x30
 80132b6:	2c00      	cmp	r4, #0
 80132b8:	d04e      	beq.n	8013358 <_ZN8touchgfx7Unicode13composeStringERPKtttbbibibRitPt+0x140>
 80132ba:	682e      	ldr	r6, [r5, #0]
 80132bc:	3c01      	subs	r4, #1
 80132be:	42b2      	cmp	r2, r6
 80132c0:	b2a4      	uxth	r4, r4
 80132c2:	dd49      	ble.n	8013358 <_ZN8touchgfx7Unicode13composeStringERPKtttbbibibRitPt+0x140>
 80132c4:	f82a 7016 	strh.w	r7, [sl, r6, lsl #1]
 80132c8:	682b      	ldr	r3, [r5, #0]
 80132ca:	3301      	adds	r3, #1
 80132cc:	602b      	str	r3, [r5, #0]
 80132ce:	e7f2      	b.n	80132b6 <_ZN8touchgfx7Unicode13composeStringERPKtttbbibibRitPt+0x9e>
 80132d0:	f1b9 0f73 	cmp.w	r9, #115	@ 0x73
 80132d4:	d01d      	beq.n	8013312 <_ZN8touchgfx7Unicode13composeStringERPKtttbbibibRitPt+0xfa>
 80132d6:	f1b9 0f78 	cmp.w	r9, #120	@ 0x78
 80132da:	d002      	beq.n	80132e2 <_ZN8touchgfx7Unicode13composeStringERPKtttbbibibRitPt+0xca>
 80132dc:	f1b9 0f6f 	cmp.w	r9, #111	@ 0x6f
 80132e0:	e7c9      	b.n	8013276 <_ZN8touchgfx7Unicode13composeStringERPKtttbbibibRitPt+0x5e>
 80132e2:	4684      	mov	ip, r0
 80132e4:	f04f 0800 	mov.w	r8, #0
 80132e8:	2c00      	cmp	r4, #0
 80132ea:	d0c6      	beq.n	801327a <_ZN8touchgfx7Unicode13composeStringERPKtttbbibibRitPt+0x62>
 80132ec:	b947      	cbnz	r7, 8013300 <_ZN8touchgfx7Unicode13composeStringERPKtttbbibibRitPt+0xe8>
 80132ee:	2801      	cmp	r0, #1
 80132f0:	d106      	bne.n	8013300 <_ZN8touchgfx7Unicode13composeStringERPKtttbbibibRitPt+0xe8>
 80132f2:	8814      	ldrh	r4, [r2, #0]
 80132f4:	2c30      	cmp	r4, #48	@ 0x30
 80132f6:	bf02      	ittt	eq
 80132f8:	3202      	addeq	r2, #2
 80132fa:	f8cb 2000 	streq.w	r2, [fp]
 80132fe:	4638      	moveq	r0, r7
 8013300:	45bc      	cmp	ip, r7
 8013302:	da14      	bge.n	801332e <_ZN8touchgfx7Unicode13composeStringERPKtttbbibibRitPt+0x116>
 8013304:	b2bf      	uxth	r7, r7
 8013306:	eba7 040c 	sub.w	r4, r7, ip
 801330a:	b2a4      	uxth	r4, r4
 801330c:	46bc      	mov	ip, r7
 801330e:	2600      	movs	r6, #0
 8013310:	e7b3      	b.n	801327a <_ZN8touchgfx7Unicode13composeStringERPKtttbbibibRitPt+0x62>
 8013312:	4684      	mov	ip, r0
 8013314:	b16c      	cbz	r4, 8013332 <_ZN8touchgfx7Unicode13composeStringERPKtttbbibibRitPt+0x11a>
 8013316:	42b8      	cmp	r0, r7
 8013318:	dd00      	ble.n	801331c <_ZN8touchgfx7Unicode13composeStringERPKtttbbibibRitPt+0x104>
 801331a:	b2b8      	uxth	r0, r7
 801331c:	2400      	movs	r4, #0
 801331e:	e003      	b.n	8013328 <_ZN8touchgfx7Unicode13composeStringERPKtttbbibibRitPt+0x110>
 8013320:	f04f 0c01 	mov.w	ip, #1
 8013324:	2400      	movs	r4, #0
 8013326:	4660      	mov	r0, ip
 8013328:	4626      	mov	r6, r4
 801332a:	46a0      	mov	r8, r4
 801332c:	e7a5      	b.n	801327a <_ZN8touchgfx7Unicode13composeStringERPKtttbbibibRitPt+0x62>
 801332e:	2400      	movs	r4, #0
 8013330:	e7ed      	b.n	801330e <_ZN8touchgfx7Unicode13composeStringERPKtttbbibibRitPt+0xf6>
 8013332:	4626      	mov	r6, r4
 8013334:	46a0      	mov	r8, r4
 8013336:	e7a0      	b.n	801327a <_ZN8touchgfx7Unicode13composeStringERPKtttbbibibRitPt+0x62>
 8013338:	2900      	cmp	r1, #0
 801333a:	d0b0      	beq.n	801329e <_ZN8touchgfx7Unicode13composeStringERPKtttbbibibRitPt+0x86>
 801333c:	2720      	movs	r7, #32
 801333e:	682e      	ldr	r6, [r5, #0]
 8013340:	2900      	cmp	r1, #0
 8013342:	d0ac      	beq.n	801329e <_ZN8touchgfx7Unicode13composeStringERPKtttbbibibRitPt+0x86>
 8013344:	3901      	subs	r1, #1
 8013346:	4296      	cmp	r6, r2
 8013348:	b289      	uxth	r1, r1
 801334a:	daa7      	bge.n	801329c <_ZN8touchgfx7Unicode13composeStringERPKtttbbibibRitPt+0x84>
 801334c:	f82a 7016 	strh.w	r7, [sl, r6, lsl #1]
 8013350:	682b      	ldr	r3, [r5, #0]
 8013352:	3301      	adds	r3, #1
 8013354:	602b      	str	r3, [r5, #0]
 8013356:	e7f2      	b.n	801333e <_ZN8touchgfx7Unicode13composeStringERPKtttbbibibRitPt+0x126>
 8013358:	b188      	cbz	r0, 801337e <_ZN8touchgfx7Unicode13composeStringERPKtttbbibibRitPt+0x166>
 801335a:	682b      	ldr	r3, [r5, #0]
 801335c:	3801      	subs	r0, #1
 801335e:	429a      	cmp	r2, r3
 8013360:	b280      	uxth	r0, r0
 8013362:	dd0c      	ble.n	801337e <_ZN8touchgfx7Unicode13composeStringERPKtttbbibibRitPt+0x166>
 8013364:	f8db 3000 	ldr.w	r3, [fp]
 8013368:	1c9c      	adds	r4, r3, #2
 801336a:	f8cb 4000 	str.w	r4, [fp]
 801336e:	881c      	ldrh	r4, [r3, #0]
 8013370:	682b      	ldr	r3, [r5, #0]
 8013372:	f82a 4013 	strh.w	r4, [sl, r3, lsl #1]
 8013376:	682b      	ldr	r3, [r5, #0]
 8013378:	3301      	adds	r3, #1
 801337a:	602b      	str	r3, [r5, #0]
 801337c:	e7ec      	b.n	8013358 <_ZN8touchgfx7Unicode13composeStringERPKtttbbibibRitPt+0x140>
 801337e:	2620      	movs	r6, #32
 8013380:	b151      	cbz	r1, 8013398 <_ZN8touchgfx7Unicode13composeStringERPKtttbbibibRitPt+0x180>
 8013382:	6828      	ldr	r0, [r5, #0]
 8013384:	3901      	subs	r1, #1
 8013386:	4282      	cmp	r2, r0
 8013388:	b289      	uxth	r1, r1
 801338a:	dd05      	ble.n	8013398 <_ZN8touchgfx7Unicode13composeStringERPKtttbbibibRitPt+0x180>
 801338c:	f82a 6010 	strh.w	r6, [sl, r0, lsl #1]
 8013390:	682b      	ldr	r3, [r5, #0]
 8013392:	3301      	adds	r3, #1
 8013394:	602b      	str	r3, [r5, #0]
 8013396:	e7f3      	b.n	8013380 <_ZN8touchgfx7Unicode13composeStringERPKtttbbibibRitPt+0x168>
 8013398:	b005      	add	sp, #20
 801339a:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}

0801339e <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_>:
 801339e:	e92d 43f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, lr}
 80133a2:	e9dd 8c07 	ldrd	r8, ip, [sp, #28]
 80133a6:	e9dd e609 	ldrd	lr, r6, [sp, #36]	@ 0x24
 80133aa:	e9dd 750b 	ldrd	r7, r5, [sp, #44]	@ 0x2c
 80133ae:	2400      	movs	r4, #0
 80133b0:	8014      	strh	r4, [r2, #0]
 80133b2:	701c      	strb	r4, [r3, #0]
 80133b4:	f888 4000 	strb.w	r4, [r8]
 80133b8:	f88c 4000 	strb.w	r4, [ip]
 80133bc:	f88e 4000 	strb.w	r4, [lr]
 80133c0:	703c      	strb	r4, [r7, #0]
 80133c2:	6804      	ldr	r4, [r0, #0]
 80133c4:	b1a4      	cbz	r4, 80133f0 <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0x52>
 80133c6:	8824      	ldrh	r4, [r4, #0]
 80133c8:	f04f 0901 	mov.w	r9, #1
 80133cc:	b314      	cbz	r4, 8013414 <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0x76>
 80133ce:	2c2b      	cmp	r4, #43	@ 0x2b
 80133d0:	d001      	beq.n	80133d6 <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0x38>
 80133d2:	2c20      	cmp	r4, #32
 80133d4:	d110      	bne.n	80133f8 <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0x5a>
 80133d6:	8014      	strh	r4, [r2, #0]
 80133d8:	6804      	ldr	r4, [r0, #0]
 80133da:	b10c      	cbz	r4, 80133e0 <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0x42>
 80133dc:	3402      	adds	r4, #2
 80133de:	6004      	str	r4, [r0, #0]
 80133e0:	680c      	ldr	r4, [r1, #0]
 80133e2:	b10c      	cbz	r4, 80133e8 <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0x4a>
 80133e4:	3401      	adds	r4, #1
 80133e6:	600c      	str	r4, [r1, #0]
 80133e8:	6804      	ldr	r4, [r0, #0]
 80133ea:	b17c      	cbz	r4, 801340c <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0x6e>
 80133ec:	8824      	ldrh	r4, [r4, #0]
 80133ee:	e7ed      	b.n	80133cc <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0x2e>
 80133f0:	680c      	ldr	r4, [r1, #0]
 80133f2:	b17c      	cbz	r4, 8013414 <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0x76>
 80133f4:	7824      	ldrb	r4, [r4, #0]
 80133f6:	e7e7      	b.n	80133c8 <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0x2a>
 80133f8:	2c2d      	cmp	r4, #45	@ 0x2d
 80133fa:	d102      	bne.n	8013402 <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0x64>
 80133fc:	f883 9000 	strb.w	r9, [r3]
 8013400:	e7ea      	b.n	80133d8 <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0x3a>
 8013402:	2c23      	cmp	r4, #35	@ 0x23
 8013404:	d107      	bne.n	8013416 <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0x78>
 8013406:	f888 9000 	strb.w	r9, [r8]
 801340a:	e7e5      	b.n	80133d8 <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0x3a>
 801340c:	680c      	ldr	r4, [r1, #0]
 801340e:	b10c      	cbz	r4, 8013414 <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0x76>
 8013410:	7824      	ldrb	r4, [r4, #0]
 8013412:	e7db      	b.n	80133cc <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0x2e>
 8013414:	2400      	movs	r4, #0
 8013416:	f1a4 0330 	sub.w	r3, r4, #48	@ 0x30
 801341a:	2b09      	cmp	r3, #9
 801341c:	d901      	bls.n	8013422 <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0x84>
 801341e:	2c2a      	cmp	r4, #42	@ 0x2a
 8013420:	d122      	bne.n	8013468 <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0xca>
 8013422:	2301      	movs	r3, #1
 8013424:	2c30      	cmp	r4, #48	@ 0x30
 8013426:	f88e 3000 	strb.w	r3, [lr]
 801342a:	d10d      	bne.n	8013448 <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0xaa>
 801342c:	f88c 3000 	strb.w	r3, [ip]
 8013430:	6803      	ldr	r3, [r0, #0]
 8013432:	b10b      	cbz	r3, 8013438 <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0x9a>
 8013434:	3302      	adds	r3, #2
 8013436:	6003      	str	r3, [r0, #0]
 8013438:	680b      	ldr	r3, [r1, #0]
 801343a:	b10b      	cbz	r3, 8013440 <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0xa2>
 801343c:	3301      	adds	r3, #1
 801343e:	600b      	str	r3, [r1, #0]
 8013440:	6803      	ldr	r3, [r0, #0]
 8013442:	2b00      	cmp	r3, #0
 8013444:	d02f      	beq.n	80134a6 <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0x108>
 8013446:	881c      	ldrh	r4, [r3, #0]
 8013448:	2c2a      	cmp	r4, #42	@ 0x2a
 801344a:	d135      	bne.n	80134b8 <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0x11a>
 801344c:	f04f 33ff 	mov.w	r3, #4294967295
 8013450:	6033      	str	r3, [r6, #0]
 8013452:	6803      	ldr	r3, [r0, #0]
 8013454:	b10b      	cbz	r3, 801345a <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0xbc>
 8013456:	3302      	adds	r3, #2
 8013458:	6003      	str	r3, [r0, #0]
 801345a:	680b      	ldr	r3, [r1, #0]
 801345c:	b10b      	cbz	r3, 8013462 <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0xc4>
 801345e:	3301      	adds	r3, #1
 8013460:	600b      	str	r3, [r1, #0]
 8013462:	6803      	ldr	r3, [r0, #0]
 8013464:	b31b      	cbz	r3, 80134ae <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0x110>
 8013466:	881c      	ldrh	r4, [r3, #0]
 8013468:	2c2e      	cmp	r4, #46	@ 0x2e
 801346a:	d11a      	bne.n	80134a2 <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0x104>
 801346c:	2301      	movs	r3, #1
 801346e:	703b      	strb	r3, [r7, #0]
 8013470:	6803      	ldr	r3, [r0, #0]
 8013472:	b10b      	cbz	r3, 8013478 <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0xda>
 8013474:	3302      	adds	r3, #2
 8013476:	6003      	str	r3, [r0, #0]
 8013478:	680b      	ldr	r3, [r1, #0]
 801347a:	b10b      	cbz	r3, 8013480 <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0xe2>
 801347c:	3301      	adds	r3, #1
 801347e:	600b      	str	r3, [r1, #0]
 8013480:	6803      	ldr	r3, [r0, #0]
 8013482:	2b00      	cmp	r3, #0
 8013484:	d036      	beq.n	80134f4 <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0x156>
 8013486:	881b      	ldrh	r3, [r3, #0]
 8013488:	2b2a      	cmp	r3, #42	@ 0x2a
 801348a:	d137      	bne.n	80134fc <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0x15e>
 801348c:	f04f 33ff 	mov.w	r3, #4294967295
 8013490:	602b      	str	r3, [r5, #0]
 8013492:	6803      	ldr	r3, [r0, #0]
 8013494:	b10b      	cbz	r3, 801349a <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0xfc>
 8013496:	3302      	adds	r3, #2
 8013498:	6003      	str	r3, [r0, #0]
 801349a:	680b      	ldr	r3, [r1, #0]
 801349c:	b10b      	cbz	r3, 80134a2 <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0x104>
 801349e:	3301      	adds	r3, #1
 80134a0:	600b      	str	r3, [r1, #0]
 80134a2:	e8bd 83f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, pc}
 80134a6:	680c      	ldr	r4, [r1, #0]
 80134a8:	b134      	cbz	r4, 80134b8 <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0x11a>
 80134aa:	7824      	ldrb	r4, [r4, #0]
 80134ac:	e7cc      	b.n	8013448 <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0xaa>
 80134ae:	680b      	ldr	r3, [r1, #0]
 80134b0:	2b00      	cmp	r3, #0
 80134b2:	d0f6      	beq.n	80134a2 <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0x104>
 80134b4:	781c      	ldrb	r4, [r3, #0]
 80134b6:	e7d7      	b.n	8013468 <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0xca>
 80134b8:	2300      	movs	r3, #0
 80134ba:	6033      	str	r3, [r6, #0]
 80134bc:	220a      	movs	r2, #10
 80134be:	f1a4 0c30 	sub.w	ip, r4, #48	@ 0x30
 80134c2:	fa1f f38c 	uxth.w	r3, ip
 80134c6:	2b09      	cmp	r3, #9
 80134c8:	d8ce      	bhi.n	8013468 <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0xca>
 80134ca:	6833      	ldr	r3, [r6, #0]
 80134cc:	fb02 c303 	mla	r3, r2, r3, ip
 80134d0:	6033      	str	r3, [r6, #0]
 80134d2:	6803      	ldr	r3, [r0, #0]
 80134d4:	b10b      	cbz	r3, 80134da <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0x13c>
 80134d6:	3302      	adds	r3, #2
 80134d8:	6003      	str	r3, [r0, #0]
 80134da:	680b      	ldr	r3, [r1, #0]
 80134dc:	b10b      	cbz	r3, 80134e2 <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0x144>
 80134de:	3301      	adds	r3, #1
 80134e0:	600b      	str	r3, [r1, #0]
 80134e2:	6803      	ldr	r3, [r0, #0]
 80134e4:	b10b      	cbz	r3, 80134ea <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0x14c>
 80134e6:	881c      	ldrh	r4, [r3, #0]
 80134e8:	e7e9      	b.n	80134be <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0x120>
 80134ea:	680c      	ldr	r4, [r1, #0]
 80134ec:	2c00      	cmp	r4, #0
 80134ee:	d0e6      	beq.n	80134be <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0x120>
 80134f0:	7824      	ldrb	r4, [r4, #0]
 80134f2:	e7e4      	b.n	80134be <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0x120>
 80134f4:	680b      	ldr	r3, [r1, #0]
 80134f6:	b10b      	cbz	r3, 80134fc <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0x15e>
 80134f8:	781b      	ldrb	r3, [r3, #0]
 80134fa:	e7c5      	b.n	8013488 <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0xea>
 80134fc:	2200      	movs	r2, #0
 80134fe:	602a      	str	r2, [r5, #0]
 8013500:	240a      	movs	r4, #10
 8013502:	3b30      	subs	r3, #48	@ 0x30
 8013504:	b29e      	uxth	r6, r3
 8013506:	2e09      	cmp	r6, #9
 8013508:	682a      	ldr	r2, [r5, #0]
 801350a:	d813      	bhi.n	8013534 <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0x196>
 801350c:	fb04 3302 	mla	r3, r4, r2, r3
 8013510:	602b      	str	r3, [r5, #0]
 8013512:	6803      	ldr	r3, [r0, #0]
 8013514:	b10b      	cbz	r3, 801351a <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0x17c>
 8013516:	3302      	adds	r3, #2
 8013518:	6003      	str	r3, [r0, #0]
 801351a:	680b      	ldr	r3, [r1, #0]
 801351c:	b10b      	cbz	r3, 8013522 <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0x184>
 801351e:	3301      	adds	r3, #1
 8013520:	600b      	str	r3, [r1, #0]
 8013522:	6803      	ldr	r3, [r0, #0]
 8013524:	b10b      	cbz	r3, 801352a <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0x18c>
 8013526:	881b      	ldrh	r3, [r3, #0]
 8013528:	e7eb      	b.n	8013502 <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0x164>
 801352a:	680b      	ldr	r3, [r1, #0]
 801352c:	2b00      	cmp	r3, #0
 801352e:	d0e8      	beq.n	8013502 <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0x164>
 8013530:	781b      	ldrb	r3, [r3, #0]
 8013532:	e7e6      	b.n	8013502 <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0x164>
 8013534:	2a06      	cmp	r2, #6
 8013536:	bfa8      	it	ge
 8013538:	2206      	movge	r2, #6
 801353a:	602a      	str	r2, [r5, #0]
 801353c:	e7b1      	b.n	80134a2 <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0x104>

0801353e <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list>:
 801353e:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8013542:	b0a3      	sub	sp, #140	@ 0x8c
 8013544:	2600      	movs	r6, #0
 8013546:	f10d 0944 	add.w	r9, sp, #68	@ 0x44
 801354a:	4607      	mov	r7, r0
 801354c:	4688      	mov	r8, r1
 801354e:	e9cd 3208 	strd	r3, r2, [sp, #32]
 8013552:	4631      	mov	r1, r6
 8013554:	2242      	movs	r2, #66	@ 0x42
 8013556:	4648      	mov	r0, r9
 8013558:	9c2c      	ldr	r4, [sp, #176]	@ 0xb0
 801355a:	960d      	str	r6, [sp, #52]	@ 0x34
 801355c:	f00f f99f 	bl	802289e <memset>
 8013560:	b15f      	cbz	r7, 801357a <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x3c>
 8013562:	f108 3aff 	add.w	sl, r8, #4294967295
 8013566:	9a09      	ldr	r2, [sp, #36]	@ 0x24
 8013568:	9b0d      	ldr	r3, [sp, #52]	@ 0x34
 801356a:	b152      	cbz	r2, 8013582 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x44>
 801356c:	8812      	ldrh	r2, [r2, #0]
 801356e:	b10a      	cbz	r2, 8013574 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x36>
 8013570:	459a      	cmp	sl, r3
 8013572:	dc2e      	bgt.n	80135d2 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x94>
 8013574:	2200      	movs	r2, #0
 8013576:	f827 2013 	strh.w	r2, [r7, r3, lsl #1]
 801357a:	4638      	mov	r0, r7
 801357c:	b023      	add	sp, #140	@ 0x8c
 801357e:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 8013582:	9a08      	ldr	r2, [sp, #32]
 8013584:	2a00      	cmp	r2, #0
 8013586:	d0f5      	beq.n	8013574 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x36>
 8013588:	7812      	ldrb	r2, [r2, #0]
 801358a:	e7f0      	b.n	801356e <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x30>
 801358c:	2d00      	cmp	r5, #0
 801358e:	d0ea      	beq.n	8013566 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x28>
 8013590:	782a      	ldrb	r2, [r5, #0]
 8013592:	b142      	cbz	r2, 80135a6 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x68>
 8013594:	2a25      	cmp	r2, #37	@ 0x25
 8013596:	d001      	beq.n	801359c <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x5e>
 8013598:	459a      	cmp	sl, r3
 801359a:	dc08      	bgt.n	80135ae <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x70>
 801359c:	f1bb 0f00 	cmp.w	fp, #0
 80135a0:	d121      	bne.n	80135e6 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0xa8>
 80135a2:	2d00      	cmp	r5, #0
 80135a4:	d0df      	beq.n	8013566 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x28>
 80135a6:	782a      	ldrb	r2, [r5, #0]
 80135a8:	f04f 0b00 	mov.w	fp, #0
 80135ac:	e01d      	b.n	80135ea <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0xac>
 80135ae:	f1bb 0f00 	cmp.w	fp, #0
 80135b2:	d078      	beq.n	80136a6 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x168>
 80135b4:	f8bb 2000 	ldrh.w	r2, [fp]
 80135b8:	f827 2013 	strh.w	r2, [r7, r3, lsl #1]
 80135bc:	f1bb 0f00 	cmp.w	fp, #0
 80135c0:	d002      	beq.n	80135c8 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x8a>
 80135c2:	f10b 0202 	add.w	r2, fp, #2
 80135c6:	9209      	str	r2, [sp, #36]	@ 0x24
 80135c8:	b10d      	cbz	r5, 80135ce <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x90>
 80135ca:	3501      	adds	r5, #1
 80135cc:	9508      	str	r5, [sp, #32]
 80135ce:	3301      	adds	r3, #1
 80135d0:	930d      	str	r3, [sp, #52]	@ 0x34
 80135d2:	e9dd 5b08 	ldrd	r5, fp, [sp, #32]
 80135d6:	9b0d      	ldr	r3, [sp, #52]	@ 0x34
 80135d8:	f1bb 0f00 	cmp.w	fp, #0
 80135dc:	d0d6      	beq.n	801358c <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x4e>
 80135de:	f8bb 2000 	ldrh.w	r2, [fp]
 80135e2:	2a00      	cmp	r2, #0
 80135e4:	d1d6      	bne.n	8013594 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x56>
 80135e6:	f8bb 2000 	ldrh.w	r2, [fp]
 80135ea:	2a00      	cmp	r2, #0
 80135ec:	d0bb      	beq.n	8013566 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x28>
 80135ee:	459a      	cmp	sl, r3
 80135f0:	ddb9      	ble.n	8013566 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x28>
 80135f2:	f8ad 6032 	strh.w	r6, [sp, #50]	@ 0x32
 80135f6:	f88d 602d 	strb.w	r6, [sp, #45]	@ 0x2d
 80135fa:	f88d 602e 	strb.w	r6, [sp, #46]	@ 0x2e
 80135fe:	f88d 602f 	strb.w	r6, [sp, #47]	@ 0x2f
 8013602:	f88d 6030 	strb.w	r6, [sp, #48]	@ 0x30
 8013606:	960e      	str	r6, [sp, #56]	@ 0x38
 8013608:	f88d 6031 	strb.w	r6, [sp, #49]	@ 0x31
 801360c:	960f      	str	r6, [sp, #60]	@ 0x3c
 801360e:	f1bb 0f00 	cmp.w	fp, #0
 8013612:	d002      	beq.n	801361a <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0xdc>
 8013614:	f10b 0302 	add.w	r3, fp, #2
 8013618:	9309      	str	r3, [sp, #36]	@ 0x24
 801361a:	b10d      	cbz	r5, 8013620 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0xe2>
 801361c:	1c6b      	adds	r3, r5, #1
 801361e:	9308      	str	r3, [sp, #32]
 8013620:	ab0f      	add	r3, sp, #60	@ 0x3c
 8013622:	9305      	str	r3, [sp, #20]
 8013624:	f10d 0331 	add.w	r3, sp, #49	@ 0x31
 8013628:	9304      	str	r3, [sp, #16]
 801362a:	ab0e      	add	r3, sp, #56	@ 0x38
 801362c:	9303      	str	r3, [sp, #12]
 801362e:	ab0c      	add	r3, sp, #48	@ 0x30
 8013630:	9302      	str	r3, [sp, #8]
 8013632:	f10d 032f 	add.w	r3, sp, #47	@ 0x2f
 8013636:	9301      	str	r3, [sp, #4]
 8013638:	f10d 032e 	add.w	r3, sp, #46	@ 0x2e
 801363c:	9300      	str	r3, [sp, #0]
 801363e:	f10d 0232 	add.w	r2, sp, #50	@ 0x32
 8013642:	f10d 032d 	add.w	r3, sp, #45	@ 0x2d
 8013646:	a908      	add	r1, sp, #32
 8013648:	a809      	add	r0, sp, #36	@ 0x24
 801364a:	f7ff fea8 	bl	801339e <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_>
 801364e:	9b0e      	ldr	r3, [sp, #56]	@ 0x38
 8013650:	2b00      	cmp	r3, #0
 8013652:	bfbe      	ittt	lt
 8013654:	6823      	ldrlt	r3, [r4, #0]
 8013656:	ea23 73e3 	biclt.w	r3, r3, r3, asr #31
 801365a:	930e      	strlt	r3, [sp, #56]	@ 0x38
 801365c:	9b0f      	ldr	r3, [sp, #60]	@ 0x3c
 801365e:	bfb8      	it	lt
 8013660:	3404      	addlt	r4, #4
 8013662:	2b00      	cmp	r3, #0
 8013664:	bfb8      	it	lt
 8013666:	6823      	ldrlt	r3, [r4, #0]
 8013668:	e9dd 2108 	ldrd	r2, r1, [sp, #32]
 801366c:	bfbe      	ittt	lt
 801366e:	ea23 73e3 	biclt.w	r3, r3, r3, asr #31
 8013672:	930f      	strlt	r3, [sp, #60]	@ 0x3c
 8013674:	3404      	addlt	r4, #4
 8013676:	b1d9      	cbz	r1, 80136b0 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x172>
 8013678:	880b      	ldrh	r3, [r1, #0]
 801367a:	2b69      	cmp	r3, #105	@ 0x69
 801367c:	d01f      	beq.n	80136be <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x180>
 801367e:	d82f      	bhi.n	80136e0 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x1a2>
 8013680:	2b58      	cmp	r3, #88	@ 0x58
 8013682:	d01c      	beq.n	80136be <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x180>
 8013684:	d818      	bhi.n	80136b8 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x17a>
 8013686:	2b25      	cmp	r3, #37	@ 0x25
 8013688:	d034      	beq.n	80136f4 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x1b6>
 801368a:	e9cd 5b08 	strd	r5, fp, [sp, #32]
 801368e:	9b0d      	ldr	r3, [sp, #52]	@ 0x34
 8013690:	f1bb 0f00 	cmp.w	fp, #0
 8013694:	f000 80b8 	beq.w	8013808 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x2ca>
 8013698:	f8bb 5000 	ldrh.w	r5, [fp]
 801369c:	f827 5013 	strh.w	r5, [r7, r3, lsl #1]
 80136a0:	3301      	adds	r3, #1
 80136a2:	930d      	str	r3, [sp, #52]	@ 0x34
 80136a4:	e029      	b.n	80136fa <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x1bc>
 80136a6:	b10d      	cbz	r5, 80136ac <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x16e>
 80136a8:	782a      	ldrb	r2, [r5, #0]
 80136aa:	e785      	b.n	80135b8 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x7a>
 80136ac:	462a      	mov	r2, r5
 80136ae:	e783      	b.n	80135b8 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x7a>
 80136b0:	2a00      	cmp	r2, #0
 80136b2:	d0ea      	beq.n	801368a <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x14c>
 80136b4:	7813      	ldrb	r3, [r2, #0]
 80136b6:	e7e0      	b.n	801367a <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x13c>
 80136b8:	3b63      	subs	r3, #99	@ 0x63
 80136ba:	2b01      	cmp	r3, #1
 80136bc:	d8e5      	bhi.n	801368a <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x14c>
 80136be:	f8cd 9040 	str.w	r9, [sp, #64]	@ 0x40
 80136c2:	b329      	cbz	r1, 8013710 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x1d2>
 80136c4:	880b      	ldrh	r3, [r1, #0]
 80136c6:	2b69      	cmp	r3, #105	@ 0x69
 80136c8:	d063      	beq.n	8013792 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x254>
 80136ca:	d825      	bhi.n	8013718 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x1da>
 80136cc:	2b63      	cmp	r3, #99	@ 0x63
 80136ce:	d038      	beq.n	8013742 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x204>
 80136d0:	2b64      	cmp	r3, #100	@ 0x64
 80136d2:	d05e      	beq.n	8013792 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x254>
 80136d4:	2b58      	cmp	r3, #88	@ 0x58
 80136d6:	d07b      	beq.n	80137d0 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x292>
 80136d8:	f8ad 6044 	strh.w	r6, [sp, #68]	@ 0x44
 80136dc:	4625      	mov	r5, r4
 80136de:	e036      	b.n	801374e <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x210>
 80136e0:	2b73      	cmp	r3, #115	@ 0x73
 80136e2:	d0ec      	beq.n	80136be <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x180>
 80136e4:	d802      	bhi.n	80136ec <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x1ae>
 80136e6:	2b6f      	cmp	r3, #111	@ 0x6f
 80136e8:	d1cf      	bne.n	801368a <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x14c>
 80136ea:	e7e8      	b.n	80136be <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x180>
 80136ec:	2b75      	cmp	r3, #117	@ 0x75
 80136ee:	d0e6      	beq.n	80136be <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x180>
 80136f0:	2b78      	cmp	r3, #120	@ 0x78
 80136f2:	e7f9      	b.n	80136e8 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x1aa>
 80136f4:	9a0d      	ldr	r2, [sp, #52]	@ 0x34
 80136f6:	f827 3012 	strh.w	r3, [r7, r2, lsl #1]
 80136fa:	9b09      	ldr	r3, [sp, #36]	@ 0x24
 80136fc:	b10b      	cbz	r3, 8013702 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x1c4>
 80136fe:	3302      	adds	r3, #2
 8013700:	9309      	str	r3, [sp, #36]	@ 0x24
 8013702:	9b08      	ldr	r3, [sp, #32]
 8013704:	2b00      	cmp	r3, #0
 8013706:	f43f af2e 	beq.w	8013566 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x28>
 801370a:	3301      	adds	r3, #1
 801370c:	9308      	str	r3, [sp, #32]
 801370e:	e72a      	b.n	8013566 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x28>
 8013710:	2a00      	cmp	r2, #0
 8013712:	d0e1      	beq.n	80136d8 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x19a>
 8013714:	7813      	ldrb	r3, [r2, #0]
 8013716:	e7d6      	b.n	80136c6 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x188>
 8013718:	2b73      	cmp	r3, #115	@ 0x73
 801371a:	d036      	beq.n	801378a <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x24c>
 801371c:	d807      	bhi.n	801372e <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x1f0>
 801371e:	2b6f      	cmp	r3, #111	@ 0x6f
 8013720:	d1da      	bne.n	80136d8 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x19a>
 8013722:	9a0d      	ldr	r2, [sp, #52]	@ 0x34
 8013724:	1d25      	adds	r5, r4, #4
 8013726:	eba8 0202 	sub.w	r2, r8, r2
 801372a:	2308      	movs	r3, #8
 801372c:	e04a      	b.n	80137c4 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x286>
 801372e:	2b75      	cmp	r3, #117	@ 0x75
 8013730:	d043      	beq.n	80137ba <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x27c>
 8013732:	2b78      	cmp	r3, #120	@ 0x78
 8013734:	d1d0      	bne.n	80136d8 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x19a>
 8013736:	9a0d      	ldr	r2, [sp, #52]	@ 0x34
 8013738:	1d25      	adds	r5, r4, #4
 801373a:	eba8 0202 	sub.w	r2, r8, r2
 801373e:	2310      	movs	r3, #16
 8013740:	e040      	b.n	80137c4 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x286>
 8013742:	6823      	ldr	r3, [r4, #0]
 8013744:	f8ad 3044 	strh.w	r3, [sp, #68]	@ 0x44
 8013748:	1d25      	adds	r5, r4, #4
 801374a:	f8ad 6046 	strh.w	r6, [sp, #70]	@ 0x46
 801374e:	9b09      	ldr	r3, [sp, #36]	@ 0x24
 8013750:	f8bd 1032 	ldrh.w	r1, [sp, #50]	@ 0x32
 8013754:	2b00      	cmp	r3, #0
 8013756:	d052      	beq.n	80137fe <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x2c0>
 8013758:	881a      	ldrh	r2, [r3, #0]
 801375a:	f89d 3031 	ldrb.w	r3, [sp, #49]	@ 0x31
 801375e:	a80d      	add	r0, sp, #52	@ 0x34
 8013760:	9005      	str	r0, [sp, #20]
 8013762:	f89d 002d 	ldrb.w	r0, [sp, #45]	@ 0x2d
 8013766:	9004      	str	r0, [sp, #16]
 8013768:	980e      	ldr	r0, [sp, #56]	@ 0x38
 801376a:	9003      	str	r0, [sp, #12]
 801376c:	f89d 0030 	ldrb.w	r0, [sp, #48]	@ 0x30
 8013770:	9002      	str	r0, [sp, #8]
 8013772:	980f      	ldr	r0, [sp, #60]	@ 0x3c
 8013774:	9001      	str	r0, [sp, #4]
 8013776:	f89d 002f 	ldrb.w	r0, [sp, #47]	@ 0x2f
 801377a:	9000      	str	r0, [sp, #0]
 801377c:	e9cd 8706 	strd	r8, r7, [sp, #24]
 8013780:	a810      	add	r0, sp, #64	@ 0x40
 8013782:	f7ff fd49 	bl	8013218 <_ZN8touchgfx7Unicode13composeStringERPKtttbbibibRitPt>
 8013786:	462c      	mov	r4, r5
 8013788:	e7b7      	b.n	80136fa <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x1bc>
 801378a:	6823      	ldr	r3, [r4, #0]
 801378c:	1d25      	adds	r5, r4, #4
 801378e:	9310      	str	r3, [sp, #64]	@ 0x40
 8013790:	e7dd      	b.n	801374e <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x210>
 8013792:	9a0d      	ldr	r2, [sp, #52]	@ 0x34
 8013794:	6820      	ldr	r0, [r4, #0]
 8013796:	eba8 0202 	sub.w	r2, r8, r2
 801379a:	230a      	movs	r3, #10
 801379c:	b292      	uxth	r2, r2
 801379e:	4649      	mov	r1, r9
 80137a0:	f7ff fce4 	bl	801316c <_ZN8touchgfx7Unicode4itoaElPtti.part.2>
 80137a4:	f8bd 3044 	ldrh.w	r3, [sp, #68]	@ 0x44
 80137a8:	2b2d      	cmp	r3, #45	@ 0x2d
 80137aa:	f104 0504 	add.w	r5, r4, #4
 80137ae:	d1ce      	bne.n	801374e <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x210>
 80137b0:	f8ad 3032 	strh.w	r3, [sp, #50]	@ 0x32
 80137b4:	9b10      	ldr	r3, [sp, #64]	@ 0x40
 80137b6:	3302      	adds	r3, #2
 80137b8:	e7e9      	b.n	801378e <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x250>
 80137ba:	9a0d      	ldr	r2, [sp, #52]	@ 0x34
 80137bc:	1d25      	adds	r5, r4, #4
 80137be:	eba8 0202 	sub.w	r2, r8, r2
 80137c2:	230a      	movs	r3, #10
 80137c4:	b292      	uxth	r2, r2
 80137c6:	4649      	mov	r1, r9
 80137c8:	6820      	ldr	r0, [r4, #0]
 80137ca:	f7ff fcfb 	bl	80131c4 <_ZN8touchgfx7Unicode4utoaEmPtti.part.3>
 80137ce:	e7be      	b.n	801374e <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x210>
 80137d0:	9a0d      	ldr	r2, [sp, #52]	@ 0x34
 80137d2:	6820      	ldr	r0, [r4, #0]
 80137d4:	eba8 0202 	sub.w	r2, r8, r2
 80137d8:	b292      	uxth	r2, r2
 80137da:	2310      	movs	r3, #16
 80137dc:	4649      	mov	r1, r9
 80137de:	f7ff fcf1 	bl	80131c4 <_ZN8touchgfx7Unicode4utoaEmPtti.part.3>
 80137e2:	1d25      	adds	r5, r4, #4
 80137e4:	f10d 0242 	add.w	r2, sp, #66	@ 0x42
 80137e8:	f832 3f02 	ldrh.w	r3, [r2, #2]!
 80137ec:	2b00      	cmp	r3, #0
 80137ee:	d0ae      	beq.n	801374e <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x210>
 80137f0:	f1a3 0161 	sub.w	r1, r3, #97	@ 0x61
 80137f4:	2919      	cmp	r1, #25
 80137f6:	d8f7      	bhi.n	80137e8 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x2aa>
 80137f8:	3b20      	subs	r3, #32
 80137fa:	8013      	strh	r3, [r2, #0]
 80137fc:	e7f4      	b.n	80137e8 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x2aa>
 80137fe:	9a08      	ldr	r2, [sp, #32]
 8013800:	2a00      	cmp	r2, #0
 8013802:	d0aa      	beq.n	801375a <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x21c>
 8013804:	7812      	ldrb	r2, [r2, #0]
 8013806:	e7a8      	b.n	801375a <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x21c>
 8013808:	2d00      	cmp	r5, #0
 801380a:	f43f af47 	beq.w	801369c <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x15e>
 801380e:	782d      	ldrb	r5, [r5, #0]
 8013810:	e744      	b.n	801369c <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x15e>

08013812 <_ZN8touchgfx7Unicode9vsnprintfEPttPKcSt9__va_list>:
 8013812:	b507      	push	{r0, r1, r2, lr}
 8013814:	9300      	str	r3, [sp, #0]
 8013816:	4613      	mov	r3, r2
 8013818:	2200      	movs	r2, #0
 801381a:	f7ff fe90 	bl	801353e <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list>
 801381e:	b003      	add	sp, #12
 8013820:	f85d fb04 	ldr.w	pc, [sp], #4

08013824 <_ZN8touchgfx7Unicode8snprintfEPttPKcz>:
 8013824:	b40c      	push	{r2, r3}
 8013826:	b507      	push	{r0, r1, r2, lr}
 8013828:	ab04      	add	r3, sp, #16
 801382a:	f853 2b04 	ldr.w	r2, [r3], #4
 801382e:	9301      	str	r3, [sp, #4]
 8013830:	f7ff ffef 	bl	8013812 <_ZN8touchgfx7Unicode9vsnprintfEPttPKcSt9__va_list>
 8013834:	b003      	add	sp, #12
 8013836:	f85d eb04 	ldr.w	lr, [sp], #4
 801383a:	b002      	add	sp, #8
 801383c:	4770      	bx	lr
	...

08013840 <_ZN8touchgfx7Unicode14snprintfFloatsEPttPKtPKcPKf>:
 8013840:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8013844:	b0c5      	sub	sp, #276	@ 0x114
 8013846:	2400      	movs	r4, #0
 8013848:	af11      	add	r7, sp, #68	@ 0x44
 801384a:	4606      	mov	r6, r0
 801384c:	468a      	mov	sl, r1
 801384e:	e9cd 3208 	strd	r3, r2, [sp, #32]
 8013852:	4621      	mov	r1, r4
 8013854:	22c8      	movs	r2, #200	@ 0xc8
 8013856:	4638      	mov	r0, r7
 8013858:	f8dd b138 	ldr.w	fp, [sp, #312]	@ 0x138
 801385c:	940d      	str	r4, [sp, #52]	@ 0x34
 801385e:	f00f f81e 	bl	802289e <memset>
 8013862:	b16e      	cbz	r6, 8013880 <_ZN8touchgfx7Unicode14snprintfFloatsEPttPKtPKcPKf+0x40>
 8013864:	ed9f 5aa8 	vldr	s10, [pc, #672]	@ 8013b08 <_ZN8touchgfx7Unicode14snprintfFloatsEPttPKtPKcPKf+0x2c8>
 8013868:	9a09      	ldr	r2, [sp, #36]	@ 0x24
 801386a:	9b0d      	ldr	r3, [sp, #52]	@ 0x34
 801386c:	b162      	cbz	r2, 8013888 <_ZN8touchgfx7Unicode14snprintfFloatsEPttPKtPKcPKf+0x48>
 801386e:	8812      	ldrh	r2, [r2, #0]
 8013870:	b11a      	cbz	r2, 801387a <_ZN8touchgfx7Unicode14snprintfFloatsEPttPKtPKcPKf+0x3a>
 8013872:	f10a 31ff 	add.w	r1, sl, #4294967295
 8013876:	4299      	cmp	r1, r3
 8013878:	dc2e      	bgt.n	80138d8 <_ZN8touchgfx7Unicode14snprintfFloatsEPttPKtPKcPKf+0x98>
 801387a:	2200      	movs	r2, #0
 801387c:	f826 2013 	strh.w	r2, [r6, r3, lsl #1]
 8013880:	4630      	mov	r0, r6
 8013882:	b045      	add	sp, #276	@ 0x114
 8013884:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 8013888:	9a08      	ldr	r2, [sp, #32]
 801388a:	2a00      	cmp	r2, #0
 801388c:	d0f5      	beq.n	801387a <_ZN8touchgfx7Unicode14snprintfFloatsEPttPKtPKcPKf+0x3a>
 801388e:	7812      	ldrb	r2, [r2, #0]
 8013890:	e7ee      	b.n	8013870 <_ZN8touchgfx7Unicode14snprintfFloatsEPttPKtPKcPKf+0x30>
 8013892:	2d00      	cmp	r5, #0
 8013894:	d0e8      	beq.n	8013868 <_ZN8touchgfx7Unicode14snprintfFloatsEPttPKtPKcPKf+0x28>
 8013896:	782a      	ldrb	r2, [r5, #0]
 8013898:	b142      	cbz	r2, 80138ac <_ZN8touchgfx7Unicode14snprintfFloatsEPttPKtPKcPKf+0x6c>
 801389a:	2a25      	cmp	r2, #37	@ 0x25
 801389c:	d001      	beq.n	80138a2 <_ZN8touchgfx7Unicode14snprintfFloatsEPttPKtPKcPKf+0x62>
 801389e:	4299      	cmp	r1, r3
 80138a0:	dc08      	bgt.n	80138b4 <_ZN8touchgfx7Unicode14snprintfFloatsEPttPKtPKcPKf+0x74>
 80138a2:	f1b8 0f00 	cmp.w	r8, #0
 80138a6:	d121      	bne.n	80138ec <_ZN8touchgfx7Unicode14snprintfFloatsEPttPKtPKcPKf+0xac>
 80138a8:	2d00      	cmp	r5, #0
 80138aa:	d0dd      	beq.n	8013868 <_ZN8touchgfx7Unicode14snprintfFloatsEPttPKtPKcPKf+0x28>
 80138ac:	782a      	ldrb	r2, [r5, #0]
 80138ae:	f04f 0800 	mov.w	r8, #0
 80138b2:	e01d      	b.n	80138f0 <_ZN8touchgfx7Unicode14snprintfFloatsEPttPKtPKcPKf+0xb0>
 80138b4:	f1b8 0f00 	cmp.w	r8, #0
 80138b8:	d07f      	beq.n	80139ba <_ZN8touchgfx7Unicode14snprintfFloatsEPttPKtPKcPKf+0x17a>
 80138ba:	f8b8 2000 	ldrh.w	r2, [r8]
 80138be:	f826 2013 	strh.w	r2, [r6, r3, lsl #1]
 80138c2:	f1b8 0f00 	cmp.w	r8, #0
 80138c6:	d002      	beq.n	80138ce <_ZN8touchgfx7Unicode14snprintfFloatsEPttPKtPKcPKf+0x8e>
 80138c8:	f108 0202 	add.w	r2, r8, #2
 80138cc:	9209      	str	r2, [sp, #36]	@ 0x24
 80138ce:	b10d      	cbz	r5, 80138d4 <_ZN8touchgfx7Unicode14snprintfFloatsEPttPKtPKcPKf+0x94>
 80138d0:	3501      	adds	r5, #1
 80138d2:	9508      	str	r5, [sp, #32]
 80138d4:	3301      	adds	r3, #1
 80138d6:	930d      	str	r3, [sp, #52]	@ 0x34
 80138d8:	e9dd 5808 	ldrd	r5, r8, [sp, #32]
 80138dc:	9b0d      	ldr	r3, [sp, #52]	@ 0x34
 80138de:	f1b8 0f00 	cmp.w	r8, #0
 80138e2:	d0d6      	beq.n	8013892 <_ZN8touchgfx7Unicode14snprintfFloatsEPttPKtPKcPKf+0x52>
 80138e4:	f8b8 2000 	ldrh.w	r2, [r8]
 80138e8:	2a00      	cmp	r2, #0
 80138ea:	d1d6      	bne.n	801389a <_ZN8touchgfx7Unicode14snprintfFloatsEPttPKtPKcPKf+0x5a>
 80138ec:	f8b8 2000 	ldrh.w	r2, [r8]
 80138f0:	2a00      	cmp	r2, #0
 80138f2:	d0b9      	beq.n	8013868 <_ZN8touchgfx7Unicode14snprintfFloatsEPttPKtPKcPKf+0x28>
 80138f4:	4299      	cmp	r1, r3
 80138f6:	ddb7      	ble.n	8013868 <_ZN8touchgfx7Unicode14snprintfFloatsEPttPKtPKcPKf+0x28>
 80138f8:	2300      	movs	r3, #0
 80138fa:	f8ad 3032 	strh.w	r3, [sp, #50]	@ 0x32
 80138fe:	f88d 302d 	strb.w	r3, [sp, #45]	@ 0x2d
 8013902:	f88d 302e 	strb.w	r3, [sp, #46]	@ 0x2e
 8013906:	f88d 302f 	strb.w	r3, [sp, #47]	@ 0x2f
 801390a:	f88d 3030 	strb.w	r3, [sp, #48]	@ 0x30
 801390e:	930e      	str	r3, [sp, #56]	@ 0x38
 8013910:	f88d 3031 	strb.w	r3, [sp, #49]	@ 0x31
 8013914:	930f      	str	r3, [sp, #60]	@ 0x3c
 8013916:	f1b8 0f00 	cmp.w	r8, #0
 801391a:	d002      	beq.n	8013922 <_ZN8touchgfx7Unicode14snprintfFloatsEPttPKtPKcPKf+0xe2>
 801391c:	f108 0302 	add.w	r3, r8, #2
 8013920:	9309      	str	r3, [sp, #36]	@ 0x24
 8013922:	b10d      	cbz	r5, 8013928 <_ZN8touchgfx7Unicode14snprintfFloatsEPttPKtPKcPKf+0xe8>
 8013924:	1c6b      	adds	r3, r5, #1
 8013926:	9308      	str	r3, [sp, #32]
 8013928:	ab0f      	add	r3, sp, #60	@ 0x3c
 801392a:	9305      	str	r3, [sp, #20]
 801392c:	f10d 0331 	add.w	r3, sp, #49	@ 0x31
 8013930:	9304      	str	r3, [sp, #16]
 8013932:	ab0e      	add	r3, sp, #56	@ 0x38
 8013934:	9303      	str	r3, [sp, #12]
 8013936:	ab0c      	add	r3, sp, #48	@ 0x30
 8013938:	9302      	str	r3, [sp, #8]
 801393a:	f10d 032f 	add.w	r3, sp, #47	@ 0x2f
 801393e:	9301      	str	r3, [sp, #4]
 8013940:	f10d 032e 	add.w	r3, sp, #46	@ 0x2e
 8013944:	9300      	str	r3, [sp, #0]
 8013946:	f10d 0232 	add.w	r2, sp, #50	@ 0x32
 801394a:	f10d 032d 	add.w	r3, sp, #45	@ 0x2d
 801394e:	a908      	add	r1, sp, #32
 8013950:	a809      	add	r0, sp, #36	@ 0x24
 8013952:	f7ff fd24 	bl	801339e <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_>
 8013956:	9b0e      	ldr	r3, [sp, #56]	@ 0x38
 8013958:	2b00      	cmp	r3, #0
 801395a:	da0b      	bge.n	8013974 <_ZN8touchgfx7Unicode14snprintfFloatsEPttPKtPKcPKf+0x134>
 801395c:	eb0b 0384 	add.w	r3, fp, r4, lsl #2
 8013960:	edd3 7a00 	vldr	s15, [r3]
 8013964:	eefd 7ae7 	vcvt.s32.f32	s15, s15
 8013968:	3401      	adds	r4, #1
 801396a:	ee17 3a90 	vmov	r3, s15
 801396e:	ea23 73e3 	bic.w	r3, r3, r3, asr #31
 8013972:	930e      	str	r3, [sp, #56]	@ 0x38
 8013974:	9b0f      	ldr	r3, [sp, #60]	@ 0x3c
 8013976:	2b00      	cmp	r3, #0
 8013978:	da0b      	bge.n	8013992 <_ZN8touchgfx7Unicode14snprintfFloatsEPttPKtPKcPKf+0x152>
 801397a:	eb0b 0384 	add.w	r3, fp, r4, lsl #2
 801397e:	edd3 7a00 	vldr	s15, [r3]
 8013982:	eefd 7ae7 	vcvt.s32.f32	s15, s15
 8013986:	3401      	adds	r4, #1
 8013988:	ee17 3a90 	vmov	r3, s15
 801398c:	ea23 73e3 	bic.w	r3, r3, r3, asr #31
 8013990:	930f      	str	r3, [sp, #60]	@ 0x3c
 8013992:	9b09      	ldr	r3, [sp, #36]	@ 0x24
 8013994:	b1b3      	cbz	r3, 80139c4 <_ZN8touchgfx7Unicode14snprintfFloatsEPttPKtPKcPKf+0x184>
 8013996:	881a      	ldrh	r2, [r3, #0]
 8013998:	2a25      	cmp	r2, #37	@ 0x25
 801399a:	d018      	beq.n	80139ce <_ZN8touchgfx7Unicode14snprintfFloatsEPttPKtPKcPKf+0x18e>
 801399c:	2a66      	cmp	r2, #102	@ 0x66
 801399e:	d01c      	beq.n	80139da <_ZN8touchgfx7Unicode14snprintfFloatsEPttPKtPKcPKf+0x19a>
 80139a0:	e9cd 5808 	strd	r5, r8, [sp, #32]
 80139a4:	9b0d      	ldr	r3, [sp, #52]	@ 0x34
 80139a6:	f1b8 0f00 	cmp.w	r8, #0
 80139aa:	f000 8136 	beq.w	8013c1a <_ZN8touchgfx7Unicode14snprintfFloatsEPttPKtPKcPKf+0x3da>
 80139ae:	f8b8 5000 	ldrh.w	r5, [r8]
 80139b2:	f826 5013 	strh.w	r5, [r6, r3, lsl #1]
 80139b6:	3301      	adds	r3, #1
 80139b8:	e00d      	b.n	80139d6 <_ZN8touchgfx7Unicode14snprintfFloatsEPttPKtPKcPKf+0x196>
 80139ba:	b10d      	cbz	r5, 80139c0 <_ZN8touchgfx7Unicode14snprintfFloatsEPttPKtPKcPKf+0x180>
 80139bc:	782a      	ldrb	r2, [r5, #0]
 80139be:	e77e      	b.n	80138be <_ZN8touchgfx7Unicode14snprintfFloatsEPttPKtPKcPKf+0x7e>
 80139c0:	462a      	mov	r2, r5
 80139c2:	e77c      	b.n	80138be <_ZN8touchgfx7Unicode14snprintfFloatsEPttPKtPKcPKf+0x7e>
 80139c4:	9b08      	ldr	r3, [sp, #32]
 80139c6:	2b00      	cmp	r3, #0
 80139c8:	d0ea      	beq.n	80139a0 <_ZN8touchgfx7Unicode14snprintfFloatsEPttPKtPKcPKf+0x160>
 80139ca:	781a      	ldrb	r2, [r3, #0]
 80139cc:	e7e4      	b.n	8013998 <_ZN8touchgfx7Unicode14snprintfFloatsEPttPKtPKcPKf+0x158>
 80139ce:	9b0d      	ldr	r3, [sp, #52]	@ 0x34
 80139d0:	f826 2013 	strh.w	r2, [r6, r3, lsl #1]
 80139d4:	3302      	adds	r3, #2
 80139d6:	930d      	str	r3, [sp, #52]	@ 0x34
 80139d8:	e041      	b.n	8013a5e <_ZN8touchgfx7Unicode14snprintfFloatsEPttPKtPKcPKf+0x21e>
 80139da:	eb0b 0384 	add.w	r3, fp, r4, lsl #2
 80139de:	edd3 7a00 	vldr	s15, [r3]
 80139e2:	f89d 3031 	ldrb.w	r3, [sp, #49]	@ 0x31
 80139e6:	9710      	str	r7, [sp, #64]	@ 0x40
 80139e8:	3401      	adds	r4, #1
 80139ea:	b923      	cbnz	r3, 80139f6 <_ZN8touchgfx7Unicode14snprintfFloatsEPttPKtPKcPKf+0x1b6>
 80139ec:	2301      	movs	r3, #1
 80139ee:	f88d 3031 	strb.w	r3, [sp, #49]	@ 0x31
 80139f2:	2306      	movs	r3, #6
 80139f4:	930f      	str	r3, [sp, #60]	@ 0x3c
 80139f6:	eef5 7ac0 	vcmpe.f32	s15, #0.0
 80139fa:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 80139fe:	bf48      	it	mi
 8013a00:	eef1 7a67 	vnegmi.f32	s15, s15
 8013a04:	eeb0 7ae7 	vabs.f32	s14, s15
 8013a08:	bf48      	it	mi
 8013a0a:	232d      	movmi	r3, #45	@ 0x2d
 8013a0c:	eeb4 7a45 	vcmp.f32	s14, s10
 8013a10:	bf48      	it	mi
 8013a12:	f8ad 3032 	strhmi.w	r3, [sp, #50]	@ 0x32
 8013a16:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 8013a1a:	dd2b      	ble.n	8013a74 <_ZN8touchgfx7Unicode14snprintfFloatsEPttPKtPKcPKf+0x234>
 8013a1c:	4b3b      	ldr	r3, [pc, #236]	@ (8013b0c <_ZN8touchgfx7Unicode14snprintfFloatsEPttPKtPKcPKf+0x2cc>)
 8013a1e:	9311      	str	r3, [sp, #68]	@ 0x44
 8013a20:	2366      	movs	r3, #102	@ 0x66
 8013a22:	9312      	str	r3, [sp, #72]	@ 0x48
 8013a24:	9b09      	ldr	r3, [sp, #36]	@ 0x24
 8013a26:	f8bd 1032 	ldrh.w	r1, [sp, #50]	@ 0x32
 8013a2a:	2b00      	cmp	r3, #0
 8013a2c:	f000 80ef 	beq.w	8013c0e <_ZN8touchgfx7Unicode14snprintfFloatsEPttPKtPKcPKf+0x3ce>
 8013a30:	881a      	ldrh	r2, [r3, #0]
 8013a32:	f89d 3031 	ldrb.w	r3, [sp, #49]	@ 0x31
 8013a36:	a80d      	add	r0, sp, #52	@ 0x34
 8013a38:	9005      	str	r0, [sp, #20]
 8013a3a:	f89d 002d 	ldrb.w	r0, [sp, #45]	@ 0x2d
 8013a3e:	9004      	str	r0, [sp, #16]
 8013a40:	980e      	ldr	r0, [sp, #56]	@ 0x38
 8013a42:	9003      	str	r0, [sp, #12]
 8013a44:	f89d 0030 	ldrb.w	r0, [sp, #48]	@ 0x30
 8013a48:	9002      	str	r0, [sp, #8]
 8013a4a:	980f      	ldr	r0, [sp, #60]	@ 0x3c
 8013a4c:	9001      	str	r0, [sp, #4]
 8013a4e:	f89d 002f 	ldrb.w	r0, [sp, #47]	@ 0x2f
 8013a52:	9000      	str	r0, [sp, #0]
 8013a54:	e9cd a606 	strd	sl, r6, [sp, #24]
 8013a58:	a810      	add	r0, sp, #64	@ 0x40
 8013a5a:	f7ff fbdd 	bl	8013218 <_ZN8touchgfx7Unicode13composeStringERPKtttbbibibRitPt>
 8013a5e:	9b09      	ldr	r3, [sp, #36]	@ 0x24
 8013a60:	b10b      	cbz	r3, 8013a66 <_ZN8touchgfx7Unicode14snprintfFloatsEPttPKtPKcPKf+0x226>
 8013a62:	3302      	adds	r3, #2
 8013a64:	9309      	str	r3, [sp, #36]	@ 0x24
 8013a66:	9b08      	ldr	r3, [sp, #32]
 8013a68:	2b00      	cmp	r3, #0
 8013a6a:	f43f aefd 	beq.w	8013868 <_ZN8touchgfx7Unicode14snprintfFloatsEPttPKtPKcPKf+0x28>
 8013a6e:	3301      	adds	r3, #1
 8013a70:	9308      	str	r3, [sp, #32]
 8013a72:	e6f9      	b.n	8013868 <_ZN8touchgfx7Unicode14snprintfFloatsEPttPKtPKcPKf+0x28>
 8013a74:	eef4 7a67 	vcmp.f32	s15, s15
 8013a78:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 8013a7c:	d63a      	bvs.n	8013af4 <_ZN8touchgfx7Unicode14snprintfFloatsEPttPKtPKcPKf+0x2b4>
 8013a7e:	f10d 0846 	add.w	r8, sp, #70	@ 0x46
 8013a82:	eeb2 7a04 	vmov.f32	s14, #36	@ 0x41200000  10.0
 8013a86:	f8cd 8040 	str.w	r8, [sp, #64]	@ 0x40
 8013a8a:	eeb0 6a67 	vmov.f32	s12, s15
 8013a8e:	eef7 6a00 	vmov.f32	s13, #112	@ 0x3f800000  1.0
 8013a92:	eef0 5a47 	vmov.f32	s11, s14
 8013a96:	eeb4 6ac7 	vcmpe.f32	s12, s14
 8013a9a:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 8013a9e:	da2d      	bge.n	8013afc <_ZN8touchgfx7Unicode14snprintfFloatsEPttPKtPKcPKf+0x2bc>
 8013aa0:	9a0d      	ldr	r2, [sp, #52]	@ 0x34
 8013aa2:	eeb6 6a00 	vmov.f32	s12, #96	@ 0x3f000000  0.5
 8013aa6:	2100      	movs	r1, #0
 8013aa8:	eef0 4a46 	vmov.f32	s9, s12
 8013aac:	ebaa 0202 	sub.w	r2, sl, r2
 8013ab0:	eef4 6ac6 	vcmpe.f32	s13, s12
 8013ab4:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 8013ab8:	b28b      	uxth	r3, r1
 8013aba:	db2c      	blt.n	8013b16 <_ZN8touchgfx7Unicode14snprintfFloatsEPttPKtPKcPKf+0x2d6>
 8013abc:	1a50      	subs	r0, r2, r1
 8013abe:	2800      	cmp	r0, #0
 8013ac0:	dd29      	ble.n	8013b16 <_ZN8touchgfx7Unicode14snprintfFloatsEPttPKtPKcPKf+0x2d6>
 8013ac2:	3101      	adds	r1, #1
 8013ac4:	2964      	cmp	r1, #100	@ 0x64
 8013ac6:	d025      	beq.n	8013b14 <_ZN8touchgfx7Unicode14snprintfFloatsEPttPKtPKcPKf+0x2d4>
 8013ac8:	ee87 7aa6 	vdiv.f32	s14, s15, s13
 8013acc:	eebd 7ac7 	vcvt.s32.f32	s14, s14
 8013ad0:	ee17 3a10 	vmov	r3, s14
 8013ad4:	2b09      	cmp	r3, #9
 8013ad6:	bfa8      	it	ge
 8013ad8:	2309      	movge	r3, #9
 8013ada:	ee07 3a10 	vmov	s14, r3
 8013ade:	eeb8 7ac7 	vcvt.f32.s32	s14, s14
 8013ae2:	f103 0030 	add.w	r0, r3, #48	@ 0x30
 8013ae6:	eee7 7a66 	vfms.f32	s15, s14, s13
 8013aea:	f827 0011 	strh.w	r0, [r7, r1, lsl #1]
 8013aee:	eec6 6aa5 	vdiv.f32	s13, s13, s11
 8013af2:	e7dd      	b.n	8013ab0 <_ZN8touchgfx7Unicode14snprintfFloatsEPttPKtPKcPKf+0x270>
 8013af4:	4b06      	ldr	r3, [pc, #24]	@ (8013b10 <_ZN8touchgfx7Unicode14snprintfFloatsEPttPKtPKcPKf+0x2d0>)
 8013af6:	9311      	str	r3, [sp, #68]	@ 0x44
 8013af8:	236e      	movs	r3, #110	@ 0x6e
 8013afa:	e792      	b.n	8013a22 <_ZN8touchgfx7Unicode14snprintfFloatsEPttPKtPKcPKf+0x1e2>
 8013afc:	ee66 6a87 	vmul.f32	s13, s13, s14
 8013b00:	ee86 6a07 	vdiv.f32	s12, s12, s14
 8013b04:	e7c7      	b.n	8013a96 <_ZN8touchgfx7Unicode14snprintfFloatsEPttPKtPKcPKf+0x256>
 8013b06:	bf00      	nop
 8013b08:	7f7fffff 	.word	0x7f7fffff
 8013b0c:	006e0069 	.word	0x006e0069
 8013b10:	0061006e 	.word	0x0061006e
 8013b14:	2363      	movs	r3, #99	@ 0x63
 8013b16:	2a63      	cmp	r2, #99	@ 0x63
 8013b18:	bfd4      	ite	le
 8013b1a:	ebc3 0202 	rsble	r2, r3, r2
 8013b1e:	f1c3 0263 	rsbgt	r2, r3, #99	@ 0x63
 8013b22:	2a00      	cmp	r2, #0
 8013b24:	f103 0501 	add.w	r5, r3, #1
 8013b28:	dd57      	ble.n	8013bda <_ZN8touchgfx7Unicode14snprintfFloatsEPttPKtPKcPKf+0x39a>
 8013b2a:	990f      	ldr	r1, [sp, #60]	@ 0x3c
 8013b2c:	2900      	cmp	r1, #0
 8013b2e:	dd2b      	ble.n	8013b88 <_ZN8touchgfx7Unicode14snprintfFloatsEPttPKtPKcPKf+0x348>
 8013b30:	f04f 0901 	mov.w	r9, #1
 8013b34:	230a      	movs	r3, #10
 8013b36:	f111 31ff 	adds.w	r1, r1, #4294967295
 8013b3a:	d30c      	bcc.n	8013b56 <_ZN8touchgfx7Unicode14snprintfFloatsEPttPKtPKcPKf+0x316>
 8013b3c:	ee67 7aa5 	vmul.f32	s15, s15, s11
 8013b40:	eebd 7ae7 	vcvt.s32.f32	s14, s15
 8013b44:	ee17 0a10 	vmov	r0, s14
 8013b48:	eeb8 7ac7 	vcvt.f32.s32	s14, s14
 8013b4c:	fb03 0909 	mla	r9, r3, r9, r0
 8013b50:	ee77 7ac7 	vsub.f32	s15, s15, s14
 8013b54:	e7ef      	b.n	8013b36 <_ZN8touchgfx7Unicode14snprintfFloatsEPttPKtPKcPKf+0x2f6>
 8013b56:	910f      	str	r1, [sp, #60]	@ 0x3c
 8013b58:	230a      	movs	r3, #10
 8013b5a:	b292      	uxth	r2, r2
 8013b5c:	eb07 0145 	add.w	r1, r7, r5, lsl #1
 8013b60:	4648      	mov	r0, r9
 8013b62:	f7ff fb4d 	bl	8013200 <_ZN8touchgfx7Unicode4itoaElPtti>
 8013b66:	f1b9 0f01 	cmp.w	r9, #1
 8013b6a:	dc0b      	bgt.n	8013b84 <_ZN8touchgfx7Unicode14snprintfFloatsEPttPKtPKcPKf+0x344>
 8013b6c:	f89d 302e 	ldrb.w	r3, [sp, #46]	@ 0x2e
 8013b70:	2b00      	cmp	r3, #0
 8013b72:	bf0c      	ite	eq
 8013b74:	2300      	moveq	r3, #0
 8013b76:	232e      	movne	r3, #46	@ 0x2e
 8013b78:	aa44      	add	r2, sp, #272	@ 0x110
 8013b7a:	eb02 0545 	add.w	r5, r2, r5, lsl #1
 8013b7e:	f825 3ccc 	strh.w	r3, [r5, #-204]
 8013b82:	e015      	b.n	8013bb0 <_ZN8touchgfx7Unicode14snprintfFloatsEPttPKtPKcPKf+0x370>
 8013b84:	232e      	movs	r3, #46	@ 0x2e
 8013b86:	e7f7      	b.n	8013b78 <_ZN8touchgfx7Unicode14snprintfFloatsEPttPKtPKcPKf+0x338>
 8013b88:	2a01      	cmp	r2, #1
 8013b8a:	d026      	beq.n	8013bda <_ZN8touchgfx7Unicode14snprintfFloatsEPttPKtPKcPKf+0x39a>
 8013b8c:	2b63      	cmp	r3, #99	@ 0x63
 8013b8e:	d024      	beq.n	8013bda <_ZN8touchgfx7Unicode14snprintfFloatsEPttPKtPKcPKf+0x39a>
 8013b90:	f89d 202e 	ldrb.w	r2, [sp, #46]	@ 0x2e
 8013b94:	b30a      	cbz	r2, 8013bda <_ZN8touchgfx7Unicode14snprintfFloatsEPttPKtPKcPKf+0x39a>
 8013b96:	aa44      	add	r2, sp, #272	@ 0x110
 8013b98:	eb02 0545 	add.w	r5, r2, r5, lsl #1
 8013b9c:	222e      	movs	r2, #46	@ 0x2e
 8013b9e:	f825 2ccc 	strh.w	r2, [r5, #-204]
 8013ba2:	3302      	adds	r3, #2
 8013ba4:	aa44      	add	r2, sp, #272	@ 0x110
 8013ba6:	eb02 0343 	add.w	r3, r2, r3, lsl #1
 8013baa:	2200      	movs	r2, #0
 8013bac:	f823 2ccc 	strh.w	r2, [r3, #-204]
 8013bb0:	eef4 7ae4 	vcmpe.f32	s15, s9
 8013bb4:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 8013bb8:	f6ff af34 	blt.w	8013a24 <_ZN8touchgfx7Unicode14snprintfFloatsEPttPKtPKcPKf+0x1e4>
 8013bbc:	2300      	movs	r3, #0
 8013bbe:	f838 2b02 	ldrh.w	r2, [r8], #2
 8013bc2:	1c59      	adds	r1, r3, #1
 8013bc4:	b972      	cbnz	r2, 8013be4 <_ZN8touchgfx7Unicode14snprintfFloatsEPttPKtPKcPKf+0x3a4>
 8013bc6:	b29b      	uxth	r3, r3
 8013bc8:	2130      	movs	r1, #48	@ 0x30
 8013bca:	b96b      	cbnz	r3, 8013be8 <_ZN8touchgfx7Unicode14snprintfFloatsEPttPKtPKcPKf+0x3a8>
 8013bcc:	2331      	movs	r3, #49	@ 0x31
 8013bce:	f8ad 3044 	strh.w	r3, [sp, #68]	@ 0x44
 8013bd2:	9b10      	ldr	r3, [sp, #64]	@ 0x40
 8013bd4:	3b02      	subs	r3, #2
 8013bd6:	9310      	str	r3, [sp, #64]	@ 0x40
 8013bd8:	e724      	b.n	8013a24 <_ZN8touchgfx7Unicode14snprintfFloatsEPttPKtPKcPKf+0x1e4>
 8013bda:	ab44      	add	r3, sp, #272	@ 0x110
 8013bdc:	eb03 0545 	add.w	r5, r3, r5, lsl #1
 8013be0:	2300      	movs	r3, #0
 8013be2:	e7cc      	b.n	8013b7e <_ZN8touchgfx7Unicode14snprintfFloatsEPttPKtPKcPKf+0x33e>
 8013be4:	460b      	mov	r3, r1
 8013be6:	e7ea      	b.n	8013bbe <_ZN8touchgfx7Unicode14snprintfFloatsEPttPKtPKcPKf+0x37e>
 8013be8:	f837 2013 	ldrh.w	r2, [r7, r3, lsl #1]
 8013bec:	f1a2 0030 	sub.w	r0, r2, #48	@ 0x30
 8013bf0:	2808      	cmp	r0, #8
 8013bf2:	d806      	bhi.n	8013c02 <_ZN8touchgfx7Unicode14snprintfFloatsEPttPKtPKcPKf+0x3c2>
 8013bf4:	a944      	add	r1, sp, #272	@ 0x110
 8013bf6:	eb01 0343 	add.w	r3, r1, r3, lsl #1
 8013bfa:	3201      	adds	r2, #1
 8013bfc:	f823 2ccc 	strh.w	r2, [r3, #-204]
 8013c00:	e710      	b.n	8013a24 <_ZN8touchgfx7Unicode14snprintfFloatsEPttPKtPKcPKf+0x1e4>
 8013c02:	2a39      	cmp	r2, #57	@ 0x39
 8013c04:	bf08      	it	eq
 8013c06:	f827 1013 	strheq.w	r1, [r7, r3, lsl #1]
 8013c0a:	3b01      	subs	r3, #1
 8013c0c:	e7dd      	b.n	8013bca <_ZN8touchgfx7Unicode14snprintfFloatsEPttPKtPKcPKf+0x38a>
 8013c0e:	9a08      	ldr	r2, [sp, #32]
 8013c10:	2a00      	cmp	r2, #0
 8013c12:	f43f af0e 	beq.w	8013a32 <_ZN8touchgfx7Unicode14snprintfFloatsEPttPKtPKcPKf+0x1f2>
 8013c16:	7812      	ldrb	r2, [r2, #0]
 8013c18:	e70b      	b.n	8013a32 <_ZN8touchgfx7Unicode14snprintfFloatsEPttPKtPKcPKf+0x1f2>
 8013c1a:	2d00      	cmp	r5, #0
 8013c1c:	f43f aec9 	beq.w	80139b2 <_ZN8touchgfx7Unicode14snprintfFloatsEPttPKtPKcPKf+0x172>
 8013c20:	782d      	ldrb	r5, [r5, #0]
 8013c22:	e6c6      	b.n	80139b2 <_ZN8touchgfx7Unicode14snprintfFloatsEPttPKtPKcPKf+0x172>

08013c24 <_ZN8touchgfx7Unicode14snprintfFloatsEPttPKcPKf>:
 8013c24:	b507      	push	{r0, r1, r2, lr}
 8013c26:	9300      	str	r3, [sp, #0]
 8013c28:	4613      	mov	r3, r2
 8013c2a:	2200      	movs	r2, #0
 8013c2c:	f7ff fe08 	bl	8013840 <_ZN8touchgfx7Unicode14snprintfFloatsEPttPKtPKcPKf>
 8013c30:	b003      	add	sp, #12
 8013c32:	f85d fb04 	ldr.w	pc, [sp], #4
	...

08013c38 <_ZN8touchgfx11FontManager15setFontProviderEPNS_12FontProviderE>:
 8013c38:	4b01      	ldr	r3, [pc, #4]	@ (8013c40 <_ZN8touchgfx11FontManager15setFontProviderEPNS_12FontProviderE+0x8>)
 8013c3a:	6018      	str	r0, [r3, #0]
 8013c3c:	4770      	bx	lr
 8013c3e:	bf00      	nop
 8013c40:	20002e1c 	.word	0x20002e1c

08013c44 <_ZN8touchgfx6Bitmap15isDynamicBitmapEt>:
 8013c44:	4b06      	ldr	r3, [pc, #24]	@ (8013c60 <_ZN8touchgfx6Bitmap15isDynamicBitmapEt+0x1c>)
 8013c46:	881a      	ldrh	r2, [r3, #0]
 8013c48:	4282      	cmp	r2, r0
 8013c4a:	d807      	bhi.n	8013c5c <_ZN8touchgfx6Bitmap15isDynamicBitmapEt+0x18>
 8013c4c:	4b05      	ldr	r3, [pc, #20]	@ (8013c64 <_ZN8touchgfx6Bitmap15isDynamicBitmapEt+0x20>)
 8013c4e:	881b      	ldrh	r3, [r3, #0]
 8013c50:	4413      	add	r3, r2
 8013c52:	4298      	cmp	r0, r3
 8013c54:	bfac      	ite	ge
 8013c56:	2000      	movge	r0, #0
 8013c58:	2001      	movlt	r0, #1
 8013c5a:	4770      	bx	lr
 8013c5c:	2000      	movs	r0, #0
 8013c5e:	4770      	bx	lr
 8013c60:	20002e3c 	.word	0x20002e3c
 8013c64:	20002e40 	.word	0x20002e40

08013c68 <_ZN8touchgfx6Bitmap23dynamicBitmapGetAddressEt>:
 8013c68:	b508      	push	{r3, lr}
 8013c6a:	4601      	mov	r1, r0
 8013c6c:	f7ff ffea 	bl	8013c44 <_ZN8touchgfx6Bitmap15isDynamicBitmapEt>
 8013c70:	b118      	cbz	r0, 8013c7a <_ZN8touchgfx6Bitmap23dynamicBitmapGetAddressEt+0x12>
 8013c72:	4b02      	ldr	r3, [pc, #8]	@ (8013c7c <_ZN8touchgfx6Bitmap23dynamicBitmapGetAddressEt+0x14>)
 8013c74:	681b      	ldr	r3, [r3, #0]
 8013c76:	f853 0021 	ldr.w	r0, [r3, r1, lsl #2]
 8013c7a:	bd08      	pop	{r3, pc}
 8013c7c:	20002e20 	.word	0x20002e20

08013c80 <_ZN8touchgfx6Bitmap10clearCacheEv>:
 8013c80:	b5f0      	push	{r4, r5, r6, r7, lr}
 8013c82:	4c24      	ldr	r4, [pc, #144]	@ (8013d14 <_ZN8touchgfx6Bitmap10clearCacheEv+0x94>)
 8013c84:	6823      	ldr	r3, [r4, #0]
 8013c86:	2b00      	cmp	r3, #0
 8013c88:	d042      	beq.n	8013d10 <_ZN8touchgfx6Bitmap10clearCacheEv+0x90>
 8013c8a:	4a23      	ldr	r2, [pc, #140]	@ (8013d18 <_ZN8touchgfx6Bitmap10clearCacheEv+0x98>)
 8013c8c:	4d23      	ldr	r5, [pc, #140]	@ (8013d1c <_ZN8touchgfx6Bitmap10clearCacheEv+0x9c>)
 8013c8e:	8811      	ldrh	r1, [r2, #0]
 8013c90:	f8b5 c000 	ldrh.w	ip, [r5]
 8013c94:	4822      	ldr	r0, [pc, #136]	@ (8013d20 <_ZN8touchgfx6Bitmap10clearCacheEv+0xa0>)
 8013c96:	4461      	add	r1, ip
 8013c98:	1c4a      	adds	r2, r1, #1
 8013c9a:	f022 0201 	bic.w	r2, r2, #1
 8013c9e:	008f      	lsls	r7, r1, #2
 8013ca0:	0412      	lsls	r2, r2, #16
 8013ca2:	19de      	adds	r6, r3, r7
 8013ca4:	0c12      	lsrs	r2, r2, #16
 8013ca6:	eb07 0742 	add.w	r7, r7, r2, lsl #1
 8013caa:	6006      	str	r6, [r0, #0]
 8013cac:	4e1d      	ldr	r6, [pc, #116]	@ (8013d24 <_ZN8touchgfx6Bitmap10clearCacheEv+0xa4>)
 8013cae:	19da      	adds	r2, r3, r7
 8013cb0:	6032      	str	r2, [r6, #0]
 8013cb2:	220e      	movs	r2, #14
 8013cb4:	fb02 f20c 	mul.w	r2, r2, ip
 8013cb8:	3203      	adds	r2, #3
 8013cba:	f022 0203 	bic.w	r2, r2, #3
 8013cbe:	443a      	add	r2, r7
 8013cc0:	4f19      	ldr	r7, [pc, #100]	@ (8013d28 <_ZN8touchgfx6Bitmap10clearCacheEv+0xa8>)
 8013cc2:	4413      	add	r3, r2
 8013cc4:	603b      	str	r3, [r7, #0]
 8013cc6:	4f19      	ldr	r7, [pc, #100]	@ (8013d2c <_ZN8touchgfx6Bitmap10clearCacheEv+0xac>)
 8013cc8:	2300      	movs	r3, #0
 8013cca:	803b      	strh	r3, [r7, #0]
 8013ccc:	4f18      	ldr	r7, [pc, #96]	@ (8013d30 <_ZN8touchgfx6Bitmap10clearCacheEv+0xb0>)
 8013cce:	683f      	ldr	r7, [r7, #0]
 8013cd0:	1aba      	subs	r2, r7, r2
 8013cd2:	4f18      	ldr	r7, [pc, #96]	@ (8013d34 <_ZN8touchgfx6Bitmap10clearCacheEv+0xb4>)
 8013cd4:	603a      	str	r2, [r7, #0]
 8013cd6:	4a18      	ldr	r2, [pc, #96]	@ (8013d38 <_ZN8touchgfx6Bitmap10clearCacheEv+0xb8>)
 8013cd8:	469c      	mov	ip, r3
 8013cda:	8013      	strh	r3, [r2, #0]
 8013cdc:	f64f 77ff 	movw	r7, #65535	@ 0xffff
 8013ce0:	428b      	cmp	r3, r1
 8013ce2:	d10d      	bne.n	8013d00 <_ZN8touchgfx6Bitmap10clearCacheEv+0x80>
 8013ce4:	882d      	ldrh	r5, [r5, #0]
 8013ce6:	6830      	ldr	r0, [r6, #0]
 8013ce8:	2300      	movs	r3, #0
 8013cea:	240e      	movs	r4, #14
 8013cec:	429d      	cmp	r5, r3
 8013cee:	d90f      	bls.n	8013d10 <_ZN8touchgfx6Bitmap10clearCacheEv+0x90>
 8013cf0:	fb04 0203 	mla	r2, r4, r3, r0
 8013cf4:	3301      	adds	r3, #1
 8013cf6:	7b11      	ldrb	r1, [r2, #12]
 8013cf8:	f36f 1145 	bfc	r1, #5, #1
 8013cfc:	7311      	strb	r1, [r2, #12]
 8013cfe:	e7f5      	b.n	8013cec <_ZN8touchgfx6Bitmap10clearCacheEv+0x6c>
 8013d00:	6822      	ldr	r2, [r4, #0]
 8013d02:	f842 c023 	str.w	ip, [r2, r3, lsl #2]
 8013d06:	6802      	ldr	r2, [r0, #0]
 8013d08:	f822 7013 	strh.w	r7, [r2, r3, lsl #1]
 8013d0c:	3301      	adds	r3, #1
 8013d0e:	e7e7      	b.n	8013ce0 <_ZN8touchgfx6Bitmap10clearCacheEv+0x60>
 8013d10:	bdf0      	pop	{r4, r5, r6, r7, pc}
 8013d12:	bf00      	nop
 8013d14:	20002e20 	.word	0x20002e20
 8013d18:	20002e3c 	.word	0x20002e3c
 8013d1c:	20002e40 	.word	0x20002e40
 8013d20:	20002e34 	.word	0x20002e34
 8013d24:	20002e24 	.word	0x20002e24
 8013d28:	20002e2c 	.word	0x20002e2c
 8013d2c:	20002e3e 	.word	0x20002e3e
 8013d30:	20002e28 	.word	0x20002e28
 8013d34:	20002e38 	.word	0x20002e38
 8013d38:	20002e30 	.word	0x20002e30

08013d3c <_ZN8touchgfx6Bitmap8setCacheEPtmm>:
 8013d3c:	4b06      	ldr	r3, [pc, #24]	@ (8013d58 <_ZN8touchgfx6Bitmap8setCacheEPtmm+0x1c>)
 8013d3e:	681b      	ldr	r3, [r3, #0]
 8013d40:	b943      	cbnz	r3, 8013d54 <_ZN8touchgfx6Bitmap8setCacheEPtmm+0x18>
 8013d42:	b139      	cbz	r1, 8013d54 <_ZN8touchgfx6Bitmap8setCacheEPtmm+0x18>
 8013d44:	4b05      	ldr	r3, [pc, #20]	@ (8013d5c <_ZN8touchgfx6Bitmap8setCacheEPtmm+0x20>)
 8013d46:	801a      	strh	r2, [r3, #0]
 8013d48:	4b05      	ldr	r3, [pc, #20]	@ (8013d60 <_ZN8touchgfx6Bitmap8setCacheEPtmm+0x24>)
 8013d4a:	6019      	str	r1, [r3, #0]
 8013d4c:	4b05      	ldr	r3, [pc, #20]	@ (8013d64 <_ZN8touchgfx6Bitmap8setCacheEPtmm+0x28>)
 8013d4e:	6018      	str	r0, [r3, #0]
 8013d50:	f7ff bf96 	b.w	8013c80 <_ZN8touchgfx6Bitmap10clearCacheEv>
 8013d54:	4770      	bx	lr
 8013d56:	bf00      	nop
 8013d58:	20002e2c 	.word	0x20002e2c
 8013d5c:	20002e40 	.word	0x20002e40
 8013d60:	20002e28 	.word	0x20002e28
 8013d64:	20002e20 	.word	0x20002e20

08013d68 <_ZN8touchgfx6Bitmap22registerBitmapDatabaseEPKNS0_10BitmapDataEtPtmm>:
 8013d68:	b470      	push	{r4, r5, r6}
 8013d6a:	4c07      	ldr	r4, [pc, #28]	@ (8013d88 <_ZN8touchgfx6Bitmap22registerBitmapDatabaseEPKNS0_10BitmapDataEtPtmm+0x20>)
 8013d6c:	6826      	ldr	r6, [r4, #0]
 8013d6e:	4605      	mov	r5, r0
 8013d70:	4610      	mov	r0, r2
 8013d72:	9a03      	ldr	r2, [sp, #12]
 8013d74:	b936      	cbnz	r6, 8013d84 <_ZN8touchgfx6Bitmap22registerBitmapDatabaseEPKNS0_10BitmapDataEtPtmm+0x1c>
 8013d76:	6025      	str	r5, [r4, #0]
 8013d78:	4c04      	ldr	r4, [pc, #16]	@ (8013d8c <_ZN8touchgfx6Bitmap22registerBitmapDatabaseEPKNS0_10BitmapDataEtPtmm+0x24>)
 8013d7a:	8021      	strh	r1, [r4, #0]
 8013d7c:	bc70      	pop	{r4, r5, r6}
 8013d7e:	4619      	mov	r1, r3
 8013d80:	f7ff bfdc 	b.w	8013d3c <_ZN8touchgfx6Bitmap8setCacheEPtmm>
 8013d84:	bc70      	pop	{r4, r5, r6}
 8013d86:	4770      	bx	lr
 8013d88:	20002e44 	.word	0x20002e44
 8013d8c:	20002e3c 	.word	0x20002e3c

08013d90 <_ZNK8touchgfx6Bitmap8getWidthEv>:
 8013d90:	4a12      	ldr	r2, [pc, #72]	@ (8013ddc <_ZNK8touchgfx6Bitmap8getWidthEv+0x4c>)
 8013d92:	8803      	ldrh	r3, [r0, #0]
 8013d94:	8812      	ldrh	r2, [r2, #0]
 8013d96:	4293      	cmp	r3, r2
 8013d98:	d207      	bcs.n	8013daa <_ZNK8touchgfx6Bitmap8getWidthEv+0x1a>
 8013d9a:	4a11      	ldr	r2, [pc, #68]	@ (8013de0 <_ZNK8touchgfx6Bitmap8getWidthEv+0x50>)
 8013d9c:	6812      	ldr	r2, [r2, #0]
 8013d9e:	2114      	movs	r1, #20
 8013da0:	fb01 2303 	mla	r3, r1, r3, r2
 8013da4:	f9b3 0008 	ldrsh.w	r0, [r3, #8]
 8013da8:	4770      	bx	lr
 8013daa:	490e      	ldr	r1, [pc, #56]	@ (8013de4 <_ZNK8touchgfx6Bitmap8getWidthEv+0x54>)
 8013dac:	8809      	ldrh	r1, [r1, #0]
 8013dae:	4411      	add	r1, r2
 8013db0:	428b      	cmp	r3, r1
 8013db2:	da04      	bge.n	8013dbe <_ZNK8touchgfx6Bitmap8getWidthEv+0x2e>
 8013db4:	1a9b      	subs	r3, r3, r2
 8013db6:	4a0c      	ldr	r2, [pc, #48]	@ (8013de8 <_ZNK8touchgfx6Bitmap8getWidthEv+0x58>)
 8013db8:	210e      	movs	r1, #14
 8013dba:	6812      	ldr	r2, [r2, #0]
 8013dbc:	e7f0      	b.n	8013da0 <_ZNK8touchgfx6Bitmap8getWidthEv+0x10>
 8013dbe:	f64f 72fe 	movw	r2, #65534	@ 0xfffe
 8013dc2:	4293      	cmp	r3, r2
 8013dc4:	d108      	bne.n	8013dd8 <_ZNK8touchgfx6Bitmap8getWidthEv+0x48>
 8013dc6:	4b09      	ldr	r3, [pc, #36]	@ (8013dec <_ZNK8touchgfx6Bitmap8getWidthEv+0x5c>)
 8013dc8:	781b      	ldrb	r3, [r3, #0]
 8013dca:	b91b      	cbnz	r3, 8013dd4 <_ZNK8touchgfx6Bitmap8getWidthEv+0x44>
 8013dcc:	4b08      	ldr	r3, [pc, #32]	@ (8013df0 <_ZNK8touchgfx6Bitmap8getWidthEv+0x60>)
 8013dce:	f9b3 0000 	ldrsh.w	r0, [r3]
 8013dd2:	4770      	bx	lr
 8013dd4:	4b07      	ldr	r3, [pc, #28]	@ (8013df4 <_ZNK8touchgfx6Bitmap8getWidthEv+0x64>)
 8013dd6:	e7fa      	b.n	8013dce <_ZNK8touchgfx6Bitmap8getWidthEv+0x3e>
 8013dd8:	2000      	movs	r0, #0
 8013dda:	4770      	bx	lr
 8013ddc:	20002e3c 	.word	0x20002e3c
 8013de0:	20002e44 	.word	0x20002e44
 8013de4:	20002e40 	.word	0x20002e40
 8013de8:	20002e24 	.word	0x20002e24
 8013dec:	20002db4 	.word	0x20002db4
 8013df0:	20002db6 	.word	0x20002db6
 8013df4:	20002db8 	.word	0x20002db8

08013df8 <_ZNK8touchgfx6Bitmap9getHeightEv>:
 8013df8:	4a12      	ldr	r2, [pc, #72]	@ (8013e44 <_ZNK8touchgfx6Bitmap9getHeightEv+0x4c>)
 8013dfa:	8803      	ldrh	r3, [r0, #0]
 8013dfc:	8812      	ldrh	r2, [r2, #0]
 8013dfe:	4293      	cmp	r3, r2
 8013e00:	d207      	bcs.n	8013e12 <_ZNK8touchgfx6Bitmap9getHeightEv+0x1a>
 8013e02:	4a11      	ldr	r2, [pc, #68]	@ (8013e48 <_ZNK8touchgfx6Bitmap9getHeightEv+0x50>)
 8013e04:	6812      	ldr	r2, [r2, #0]
 8013e06:	2114      	movs	r1, #20
 8013e08:	fb01 2303 	mla	r3, r1, r3, r2
 8013e0c:	f9b3 000a 	ldrsh.w	r0, [r3, #10]
 8013e10:	4770      	bx	lr
 8013e12:	490e      	ldr	r1, [pc, #56]	@ (8013e4c <_ZNK8touchgfx6Bitmap9getHeightEv+0x54>)
 8013e14:	8809      	ldrh	r1, [r1, #0]
 8013e16:	4411      	add	r1, r2
 8013e18:	428b      	cmp	r3, r1
 8013e1a:	da04      	bge.n	8013e26 <_ZNK8touchgfx6Bitmap9getHeightEv+0x2e>
 8013e1c:	1a9b      	subs	r3, r3, r2
 8013e1e:	4a0c      	ldr	r2, [pc, #48]	@ (8013e50 <_ZNK8touchgfx6Bitmap9getHeightEv+0x58>)
 8013e20:	210e      	movs	r1, #14
 8013e22:	6812      	ldr	r2, [r2, #0]
 8013e24:	e7f0      	b.n	8013e08 <_ZNK8touchgfx6Bitmap9getHeightEv+0x10>
 8013e26:	f64f 72fe 	movw	r2, #65534	@ 0xfffe
 8013e2a:	4293      	cmp	r3, r2
 8013e2c:	d108      	bne.n	8013e40 <_ZNK8touchgfx6Bitmap9getHeightEv+0x48>
 8013e2e:	4b09      	ldr	r3, [pc, #36]	@ (8013e54 <_ZNK8touchgfx6Bitmap9getHeightEv+0x5c>)
 8013e30:	781b      	ldrb	r3, [r3, #0]
 8013e32:	b91b      	cbnz	r3, 8013e3c <_ZNK8touchgfx6Bitmap9getHeightEv+0x44>
 8013e34:	4b08      	ldr	r3, [pc, #32]	@ (8013e58 <_ZNK8touchgfx6Bitmap9getHeightEv+0x60>)
 8013e36:	f9b3 0000 	ldrsh.w	r0, [r3]
 8013e3a:	4770      	bx	lr
 8013e3c:	4b07      	ldr	r3, [pc, #28]	@ (8013e5c <_ZNK8touchgfx6Bitmap9getHeightEv+0x64>)
 8013e3e:	e7fa      	b.n	8013e36 <_ZNK8touchgfx6Bitmap9getHeightEv+0x3e>
 8013e40:	2000      	movs	r0, #0
 8013e42:	4770      	bx	lr
 8013e44:	20002e3c 	.word	0x20002e3c
 8013e48:	20002e44 	.word	0x20002e44
 8013e4c:	20002e40 	.word	0x20002e40
 8013e50:	20002e24 	.word	0x20002e24
 8013e54:	20002db4 	.word	0x20002db4
 8013e58:	20002db8 	.word	0x20002db8
 8013e5c:	20002db6 	.word	0x20002db6

08013e60 <_ZNK8touchgfx6Bitmap12getSolidRectEv>:
 8013e60:	b530      	push	{r4, r5, lr}
 8013e62:	4a22      	ldr	r2, [pc, #136]	@ (8013eec <_ZNK8touchgfx6Bitmap12getSolidRectEv+0x8c>)
 8013e64:	880b      	ldrh	r3, [r1, #0]
 8013e66:	8812      	ldrh	r2, [r2, #0]
 8013e68:	4293      	cmp	r3, r2
 8013e6a:	d213      	bcs.n	8013e94 <_ZNK8touchgfx6Bitmap12getSolidRectEv+0x34>
 8013e6c:	4a20      	ldr	r2, [pc, #128]	@ (8013ef0 <_ZNK8touchgfx6Bitmap12getSolidRectEv+0x90>)
 8013e6e:	6812      	ldr	r2, [r2, #0]
 8013e70:	2114      	movs	r1, #20
 8013e72:	fb01 2303 	mla	r3, r1, r3, r2
 8013e76:	8a1a      	ldrh	r2, [r3, #16]
 8013e78:	f9b3 400c 	ldrsh.w	r4, [r3, #12]
 8013e7c:	f9b3 100e 	ldrsh.w	r1, [r3, #14]
 8013e80:	8a5b      	ldrh	r3, [r3, #18]
 8013e82:	8004      	strh	r4, [r0, #0]
 8013e84:	f3c2 020c 	ubfx	r2, r2, #0, #13
 8013e88:	f3c3 030c 	ubfx	r3, r3, #0, #13
 8013e8c:	8041      	strh	r1, [r0, #2]
 8013e8e:	8082      	strh	r2, [r0, #4]
 8013e90:	80c3      	strh	r3, [r0, #6]
 8013e92:	e024      	b.n	8013ede <_ZNK8touchgfx6Bitmap12getSolidRectEv+0x7e>
 8013e94:	4917      	ldr	r1, [pc, #92]	@ (8013ef4 <_ZNK8touchgfx6Bitmap12getSolidRectEv+0x94>)
 8013e96:	8809      	ldrh	r1, [r1, #0]
 8013e98:	4411      	add	r1, r2
 8013e9a:	428b      	cmp	r3, r1
 8013e9c:	da10      	bge.n	8013ec0 <_ZNK8touchgfx6Bitmap12getSolidRectEv+0x60>
 8013e9e:	1a9b      	subs	r3, r3, r2
 8013ea0:	220e      	movs	r2, #14
 8013ea2:	4353      	muls	r3, r2
 8013ea4:	4a14      	ldr	r2, [pc, #80]	@ (8013ef8 <_ZNK8touchgfx6Bitmap12getSolidRectEv+0x98>)
 8013ea6:	6811      	ldr	r1, [r2, #0]
 8013ea8:	18ca      	adds	r2, r1, r3
 8013eaa:	5ecd      	ldrsh	r5, [r1, r3]
 8013eac:	f9b2 4002 	ldrsh.w	r4, [r2, #2]
 8013eb0:	f9b2 1004 	ldrsh.w	r1, [r2, #4]
 8013eb4:	f9b2 3006 	ldrsh.w	r3, [r2, #6]
 8013eb8:	8005      	strh	r5, [r0, #0]
 8013eba:	8044      	strh	r4, [r0, #2]
 8013ebc:	8081      	strh	r1, [r0, #4]
 8013ebe:	e7e7      	b.n	8013e90 <_ZNK8touchgfx6Bitmap12getSolidRectEv+0x30>
 8013ec0:	f64f 72fe 	movw	r2, #65534	@ 0xfffe
 8013ec4:	4293      	cmp	r3, r2
 8013ec6:	d10b      	bne.n	8013ee0 <_ZNK8touchgfx6Bitmap12getSolidRectEv+0x80>
 8013ec8:	4b0c      	ldr	r3, [pc, #48]	@ (8013efc <_ZNK8touchgfx6Bitmap12getSolidRectEv+0x9c>)
 8013eca:	f9b3 1000 	ldrsh.w	r1, [r3]
 8013ece:	4b0c      	ldr	r3, [pc, #48]	@ (8013f00 <_ZNK8touchgfx6Bitmap12getSolidRectEv+0xa0>)
 8013ed0:	8081      	strh	r1, [r0, #4]
 8013ed2:	f9b3 2000 	ldrsh.w	r2, [r3]
 8013ed6:	80c2      	strh	r2, [r0, #6]
 8013ed8:	2300      	movs	r3, #0
 8013eda:	8003      	strh	r3, [r0, #0]
 8013edc:	8043      	strh	r3, [r0, #2]
 8013ede:	bd30      	pop	{r4, r5, pc}
 8013ee0:	2300      	movs	r3, #0
 8013ee2:	8003      	strh	r3, [r0, #0]
 8013ee4:	8043      	strh	r3, [r0, #2]
 8013ee6:	8083      	strh	r3, [r0, #4]
 8013ee8:	e7d2      	b.n	8013e90 <_ZNK8touchgfx6Bitmap12getSolidRectEv+0x30>
 8013eea:	bf00      	nop
 8013eec:	20002e3c 	.word	0x20002e3c
 8013ef0:	20002e44 	.word	0x20002e44
 8013ef4:	20002e40 	.word	0x20002e40
 8013ef8:	20002e24 	.word	0x20002e24
 8013efc:	20002db0 	.word	0x20002db0
 8013f00:	20002db2 	.word	0x20002db2

08013f04 <_ZNK8touchgfx6Bitmap20hasTransparentPixelsEv>:
 8013f04:	4a17      	ldr	r2, [pc, #92]	@ (8013f64 <_ZNK8touchgfx6Bitmap20hasTransparentPixelsEv+0x60>)
 8013f06:	8803      	ldrh	r3, [r0, #0]
 8013f08:	8812      	ldrh	r2, [r2, #0]
 8013f0a:	4293      	cmp	r3, r2
 8013f0c:	d213      	bcs.n	8013f36 <_ZNK8touchgfx6Bitmap20hasTransparentPixelsEv+0x32>
 8013f0e:	4a16      	ldr	r2, [pc, #88]	@ (8013f68 <_ZNK8touchgfx6Bitmap20hasTransparentPixelsEv+0x64>)
 8013f10:	6812      	ldr	r2, [r2, #0]
 8013f12:	2114      	movs	r1, #20
 8013f14:	fb01 2303 	mla	r3, r1, r3, r2
 8013f18:	8a1a      	ldrh	r2, [r3, #16]
 8013f1a:	8919      	ldrh	r1, [r3, #8]
 8013f1c:	f3c2 020c 	ubfx	r2, r2, #0, #13
 8013f20:	428a      	cmp	r2, r1
 8013f22:	db1d      	blt.n	8013f60 <_ZNK8touchgfx6Bitmap20hasTransparentPixelsEv+0x5c>
 8013f24:	8a58      	ldrh	r0, [r3, #18]
 8013f26:	f3c0 000c 	ubfx	r0, r0, #0, #13
 8013f2a:	895b      	ldrh	r3, [r3, #10]
 8013f2c:	4298      	cmp	r0, r3
 8013f2e:	bfac      	ite	ge
 8013f30:	2000      	movge	r0, #0
 8013f32:	2001      	movlt	r0, #1
 8013f34:	4770      	bx	lr
 8013f36:	490d      	ldr	r1, [pc, #52]	@ (8013f6c <_ZNK8touchgfx6Bitmap20hasTransparentPixelsEv+0x68>)
 8013f38:	8809      	ldrh	r1, [r1, #0]
 8013f3a:	4411      	add	r1, r2
 8013f3c:	428b      	cmp	r3, r1
 8013f3e:	da0d      	bge.n	8013f5c <_ZNK8touchgfx6Bitmap20hasTransparentPixelsEv+0x58>
 8013f40:	1a9b      	subs	r3, r3, r2
 8013f42:	4a0b      	ldr	r2, [pc, #44]	@ (8013f70 <_ZNK8touchgfx6Bitmap20hasTransparentPixelsEv+0x6c>)
 8013f44:	6812      	ldr	r2, [r2, #0]
 8013f46:	210e      	movs	r1, #14
 8013f48:	fb01 2303 	mla	r3, r1, r3, r2
 8013f4c:	f9b3 1004 	ldrsh.w	r1, [r3, #4]
 8013f50:	891a      	ldrh	r2, [r3, #8]
 8013f52:	4291      	cmp	r1, r2
 8013f54:	db04      	blt.n	8013f60 <_ZNK8touchgfx6Bitmap20hasTransparentPixelsEv+0x5c>
 8013f56:	f9b3 0006 	ldrsh.w	r0, [r3, #6]
 8013f5a:	e7e6      	b.n	8013f2a <_ZNK8touchgfx6Bitmap20hasTransparentPixelsEv+0x26>
 8013f5c:	2000      	movs	r0, #0
 8013f5e:	4770      	bx	lr
 8013f60:	2001      	movs	r0, #1
 8013f62:	4770      	bx	lr
 8013f64:	20002e3c 	.word	0x20002e3c
 8013f68:	20002e44 	.word	0x20002e44
 8013f6c:	20002e40 	.word	0x20002e40
 8013f70:	20002e24 	.word	0x20002e24

08013f74 <_ZNK8touchgfx6Bitmap7getDataEv>:
 8013f74:	4a12      	ldr	r2, [pc, #72]	@ (8013fc0 <_ZNK8touchgfx6Bitmap7getDataEv+0x4c>)
 8013f76:	8803      	ldrh	r3, [r0, #0]
 8013f78:	8811      	ldrh	r1, [r2, #0]
 8013f7a:	428b      	cmp	r3, r1
 8013f7c:	d20b      	bcs.n	8013f96 <_ZNK8touchgfx6Bitmap7getDataEv+0x22>
 8013f7e:	4a11      	ldr	r2, [pc, #68]	@ (8013fc4 <_ZNK8touchgfx6Bitmap7getDataEv+0x50>)
 8013f80:	6812      	ldr	r2, [r2, #0]
 8013f82:	b112      	cbz	r2, 8013f8a <_ZNK8touchgfx6Bitmap7getDataEv+0x16>
 8013f84:	f852 0023 	ldr.w	r0, [r2, r3, lsl #2]
 8013f88:	b9c0      	cbnz	r0, 8013fbc <_ZNK8touchgfx6Bitmap7getDataEv+0x48>
 8013f8a:	4a0f      	ldr	r2, [pc, #60]	@ (8013fc8 <_ZNK8touchgfx6Bitmap7getDataEv+0x54>)
 8013f8c:	6811      	ldr	r1, [r2, #0]
 8013f8e:	2214      	movs	r2, #20
 8013f90:	4353      	muls	r3, r2
 8013f92:	58c8      	ldr	r0, [r1, r3]
 8013f94:	4770      	bx	lr
 8013f96:	4a0d      	ldr	r2, [pc, #52]	@ (8013fcc <_ZNK8touchgfx6Bitmap7getDataEv+0x58>)
 8013f98:	8812      	ldrh	r2, [r2, #0]
 8013f9a:	440a      	add	r2, r1
 8013f9c:	4293      	cmp	r3, r2
 8013f9e:	da04      	bge.n	8013faa <_ZNK8touchgfx6Bitmap7getDataEv+0x36>
 8013fa0:	4a08      	ldr	r2, [pc, #32]	@ (8013fc4 <_ZNK8touchgfx6Bitmap7getDataEv+0x50>)
 8013fa2:	6812      	ldr	r2, [r2, #0]
 8013fa4:	f852 0023 	ldr.w	r0, [r2, r3, lsl #2]
 8013fa8:	4770      	bx	lr
 8013faa:	f64f 72fe 	movw	r2, #65534	@ 0xfffe
 8013fae:	4293      	cmp	r3, r2
 8013fb0:	d103      	bne.n	8013fba <_ZNK8touchgfx6Bitmap7getDataEv+0x46>
 8013fb2:	4b07      	ldr	r3, [pc, #28]	@ (8013fd0 <_ZNK8touchgfx6Bitmap7getDataEv+0x5c>)
 8013fb4:	681b      	ldr	r3, [r3, #0]
 8013fb6:	6c58      	ldr	r0, [r3, #68]	@ 0x44
 8013fb8:	4770      	bx	lr
 8013fba:	2000      	movs	r0, #0
 8013fbc:	4770      	bx	lr
 8013fbe:	bf00      	nop
 8013fc0:	20002e3c 	.word	0x20002e3c
 8013fc4:	20002e20 	.word	0x20002e20
 8013fc8:	20002e44 	.word	0x20002e44
 8013fcc:	20002e40 	.word	0x20002e40
 8013fd0:	20002dbc 	.word	0x20002dbc

08013fd4 <_ZNK8touchgfx6Bitmap12getExtraDataEv>:
 8013fd4:	4b24      	ldr	r3, [pc, #144]	@ (8014068 <_ZNK8touchgfx6Bitmap12getExtraDataEv+0x94>)
 8013fd6:	8802      	ldrh	r2, [r0, #0]
 8013fd8:	8818      	ldrh	r0, [r3, #0]
 8013fda:	4282      	cmp	r2, r0
 8013fdc:	d221      	bcs.n	8014022 <_ZNK8touchgfx6Bitmap12getExtraDataEv+0x4e>
 8013fde:	4b23      	ldr	r3, [pc, #140]	@ (801406c <_ZNK8touchgfx6Bitmap12getExtraDataEv+0x98>)
 8013fe0:	6819      	ldr	r1, [r3, #0]
 8013fe2:	2314      	movs	r3, #20
 8013fe4:	fb03 1302 	mla	r3, r3, r2, r1
 8013fe8:	6858      	ldr	r0, [r3, #4]
 8013fea:	2800      	cmp	r0, #0
 8013fec:	d03a      	beq.n	8014064 <_ZNK8touchgfx6Bitmap12getExtraDataEv+0x90>
 8013fee:	4920      	ldr	r1, [pc, #128]	@ (8014070 <_ZNK8touchgfx6Bitmap12getExtraDataEv+0x9c>)
 8013ff0:	6809      	ldr	r1, [r1, #0]
 8013ff2:	2900      	cmp	r1, #0
 8013ff4:	d036      	beq.n	8014064 <_ZNK8touchgfx6Bitmap12getExtraDataEv+0x90>
 8013ff6:	f851 1022 	ldr.w	r1, [r1, r2, lsl #2]
 8013ffa:	2900      	cmp	r1, #0
 8013ffc:	d032      	beq.n	8014064 <_ZNK8touchgfx6Bitmap12getExtraDataEv+0x90>
 8013ffe:	891a      	ldrh	r2, [r3, #8]
 8014000:	8958      	ldrh	r0, [r3, #10]
 8014002:	4350      	muls	r0, r2
 8014004:	7c5a      	ldrb	r2, [r3, #17]
 8014006:	7cdb      	ldrb	r3, [r3, #19]
 8014008:	0952      	lsrs	r2, r2, #5
 801400a:	f3c3 1342 	ubfx	r3, r3, #5, #3
 801400e:	ea43 03c2 	orr.w	r3, r3, r2, lsl #3
 8014012:	2b0b      	cmp	r3, #11
 8014014:	bf18      	it	ne
 8014016:	0040      	lslne	r0, r0, #1
 8014018:	3003      	adds	r0, #3
 801401a:	f020 0003 	bic.w	r0, r0, #3
 801401e:	4408      	add	r0, r1
 8014020:	4770      	bx	lr
 8014022:	4b14      	ldr	r3, [pc, #80]	@ (8014074 <_ZNK8touchgfx6Bitmap12getExtraDataEv+0xa0>)
 8014024:	881b      	ldrh	r3, [r3, #0]
 8014026:	4403      	add	r3, r0
 8014028:	429a      	cmp	r2, r3
 801402a:	da1a      	bge.n	8014062 <_ZNK8touchgfx6Bitmap12getExtraDataEv+0x8e>
 801402c:	4b12      	ldr	r3, [pc, #72]	@ (8014078 <_ZNK8touchgfx6Bitmap12getExtraDataEv+0xa4>)
 801402e:	681b      	ldr	r3, [r3, #0]
 8014030:	1a10      	subs	r0, r2, r0
 8014032:	210e      	movs	r1, #14
 8014034:	fb01 3000 	mla	r0, r1, r0, r3
 8014038:	7b03      	ldrb	r3, [r0, #12]
 801403a:	f003 031f 	and.w	r3, r3, #31
 801403e:	2b0b      	cmp	r3, #11
 8014040:	d10b      	bne.n	801405a <_ZNK8touchgfx6Bitmap12getExtraDataEv+0x86>
 8014042:	8903      	ldrh	r3, [r0, #8]
 8014044:	8940      	ldrh	r0, [r0, #10]
 8014046:	4358      	muls	r0, r3
 8014048:	4b09      	ldr	r3, [pc, #36]	@ (8014070 <_ZNK8touchgfx6Bitmap12getExtraDataEv+0x9c>)
 801404a:	6819      	ldr	r1, [r3, #0]
 801404c:	3003      	adds	r0, #3
 801404e:	f020 0303 	bic.w	r3, r0, #3
 8014052:	f851 0022 	ldr.w	r0, [r1, r2, lsl #2]
 8014056:	4418      	add	r0, r3
 8014058:	4770      	bx	lr
 801405a:	2b0d      	cmp	r3, #13
 801405c:	d101      	bne.n	8014062 <_ZNK8touchgfx6Bitmap12getExtraDataEv+0x8e>
 801405e:	300d      	adds	r0, #13
 8014060:	4770      	bx	lr
 8014062:	2000      	movs	r0, #0
 8014064:	4770      	bx	lr
 8014066:	bf00      	nop
 8014068:	20002e3c 	.word	0x20002e3c
 801406c:	20002e44 	.word	0x20002e44
 8014070:	20002e20 	.word	0x20002e20
 8014074:	20002e40 	.word	0x20002e40
 8014078:	20002e24 	.word	0x20002e24

0801407c <_ZNK8touchgfx6Bitmap9getFormatEv>:
 801407c:	b510      	push	{r4, lr}
 801407e:	4b1f      	ldr	r3, [pc, #124]	@ (80140fc <_ZNK8touchgfx6Bitmap9getFormatEv+0x80>)
 8014080:	8802      	ldrh	r2, [r0, #0]
 8014082:	881b      	ldrh	r3, [r3, #0]
 8014084:	429a      	cmp	r2, r3
 8014086:	d21a      	bcs.n	80140be <_ZNK8touchgfx6Bitmap9getFormatEv+0x42>
 8014088:	4b1d      	ldr	r3, [pc, #116]	@ (8014100 <_ZNK8touchgfx6Bitmap9getFormatEv+0x84>)
 801408a:	681b      	ldr	r3, [r3, #0]
 801408c:	2114      	movs	r1, #20
 801408e:	fb01 3102 	mla	r1, r1, r2, r3
 8014092:	7c4b      	ldrb	r3, [r1, #17]
 8014094:	0958      	lsrs	r0, r3, #5
 8014096:	7ccb      	ldrb	r3, [r1, #19]
 8014098:	491a      	ldr	r1, [pc, #104]	@ (8014104 <_ZNK8touchgfx6Bitmap9getFormatEv+0x88>)
 801409a:	f3c3 1342 	ubfx	r3, r3, #5, #3
 801409e:	6809      	ldr	r1, [r1, #0]
 80140a0:	ea43 03c0 	orr.w	r3, r3, r0, lsl #3
 80140a4:	b2d8      	uxtb	r0, r3
 80140a6:	b149      	cbz	r1, 80140bc <_ZNK8touchgfx6Bitmap9getFormatEv+0x40>
 80140a8:	f851 2022 	ldr.w	r2, [r1, r2, lsl #2]
 80140ac:	b132      	cbz	r2, 80140bc <_ZNK8touchgfx6Bitmap9getFormatEv+0x40>
 80140ae:	2b0e      	cmp	r3, #14
 80140b0:	d021      	beq.n	80140f6 <_ZNK8touchgfx6Bitmap9getFormatEv+0x7a>
 80140b2:	280f      	cmp	r0, #15
 80140b4:	d01d      	beq.n	80140f2 <_ZNK8touchgfx6Bitmap9getFormatEv+0x76>
 80140b6:	2810      	cmp	r0, #16
 80140b8:	bf08      	it	eq
 80140ba:	2002      	moveq	r0, #2
 80140bc:	bd10      	pop	{r4, pc}
 80140be:	4912      	ldr	r1, [pc, #72]	@ (8014108 <_ZNK8touchgfx6Bitmap9getFormatEv+0x8c>)
 80140c0:	8809      	ldrh	r1, [r1, #0]
 80140c2:	4419      	add	r1, r3
 80140c4:	428a      	cmp	r2, r1
 80140c6:	da09      	bge.n	80140dc <_ZNK8touchgfx6Bitmap9getFormatEv+0x60>
 80140c8:	1ad3      	subs	r3, r2, r3
 80140ca:	4a10      	ldr	r2, [pc, #64]	@ (801410c <_ZNK8touchgfx6Bitmap9getFormatEv+0x90>)
 80140cc:	6812      	ldr	r2, [r2, #0]
 80140ce:	210e      	movs	r1, #14
 80140d0:	fb01 2303 	mla	r3, r1, r3, r2
 80140d4:	7b18      	ldrb	r0, [r3, #12]
 80140d6:	f000 001f 	and.w	r0, r0, #31
 80140da:	e7ef      	b.n	80140bc <_ZNK8touchgfx6Bitmap9getFormatEv+0x40>
 80140dc:	f64f 73fe 	movw	r3, #65534	@ 0xfffe
 80140e0:	429a      	cmp	r2, r3
 80140e2:	d108      	bne.n	80140f6 <_ZNK8touchgfx6Bitmap9getFormatEv+0x7a>
 80140e4:	f7f4 fc0c 	bl	8008900 <_ZN8touchgfx3HAL3lcdEv>
 80140e8:	6803      	ldr	r3, [r0, #0]
 80140ea:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
 80140ee:	6adb      	ldr	r3, [r3, #44]	@ 0x2c
 80140f0:	4718      	bx	r3
 80140f2:	2001      	movs	r0, #1
 80140f4:	e7e2      	b.n	80140bc <_ZNK8touchgfx6Bitmap9getFormatEv+0x40>
 80140f6:	2000      	movs	r0, #0
 80140f8:	e7e0      	b.n	80140bc <_ZNK8touchgfx6Bitmap9getFormatEv+0x40>
 80140fa:	bf00      	nop
 80140fc:	20002e3c 	.word	0x20002e3c
 8014100:	20002e44 	.word	0x20002e44
 8014104:	20002e20 	.word	0x20002e20
 8014108:	20002e40 	.word	0x20002e40
 801410c:	20002e24 	.word	0x20002e24

08014110 <_ZNK8touchgfx8LCD16bpp8bitDepthEv>:
 8014110:	2010      	movs	r0, #16
 8014112:	4770      	bx	lr

08014114 <_ZNK8touchgfx8LCD16bpp17framebufferFormatEv>:
 8014114:	2000      	movs	r0, #0
 8014116:	4770      	bx	lr

08014118 <_ZNK8touchgfx8LCD16bpp17framebufferStrideEv>:
 8014118:	4b02      	ldr	r3, [pc, #8]	@ (8014124 <_ZNK8touchgfx8LCD16bpp17framebufferStrideEv+0xc>)
 801411a:	8818      	ldrh	r0, [r3, #0]
 801411c:	0040      	lsls	r0, r0, #1
 801411e:	b280      	uxth	r0, r0
 8014120:	4770      	bx	lr
 8014122:	bf00      	nop
 8014124:	20002db6 	.word	0x20002db6

08014128 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth>:
 8014128:	2bff      	cmp	r3, #255	@ 0xff
 801412a:	d05e      	beq.n	80141ea <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0xc2>
 801412c:	2a0b      	cmp	r2, #11
 801412e:	d058      	beq.n	80141e2 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0xba>
 8014130:	d80e      	bhi.n	8014150 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x28>
 8014132:	2a03      	cmp	r2, #3
 8014134:	d04d      	beq.n	80141d2 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0xaa>
 8014136:	d804      	bhi.n	8014142 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x1a>
 8014138:	2a01      	cmp	r2, #1
 801413a:	d04c      	beq.n	80141d6 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0xae>
 801413c:	d94d      	bls.n	80141da <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0xb2>
 801413e:	6bc3      	ldr	r3, [r0, #60]	@ 0x3c
 8014140:	e031      	b.n	80141a6 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x7e>
 8014142:	2a09      	cmp	r2, #9
 8014144:	d04d      	beq.n	80141e2 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0xba>
 8014146:	d84a      	bhi.n	80141de <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0xb6>
 8014148:	2a08      	cmp	r2, #8
 801414a:	d048      	beq.n	80141de <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0xb6>
 801414c:	2300      	movs	r3, #0
 801414e:	e02a      	b.n	80141a6 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x7e>
 8014150:	2a2f      	cmp	r2, #47	@ 0x2f
 8014152:	d02c      	beq.n	80141ae <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x86>
 8014154:	d811      	bhi.n	801417a <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x52>
 8014156:	2a2d      	cmp	r2, #45	@ 0x2d
 8014158:	d018      	beq.n	801418c <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x64>
 801415a:	d831      	bhi.n	80141c0 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x98>
 801415c:	2a2c      	cmp	r2, #44	@ 0x2c
 801415e:	d1f5      	bne.n	801414c <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x24>
 8014160:	684a      	ldr	r2, [r1, #4]
 8014162:	7813      	ldrb	r3, [r2, #0]
 8014164:	7852      	ldrb	r2, [r2, #1]
 8014166:	2a00      	cmp	r2, #0
 8014168:	d1f0      	bne.n	801414c <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x24>
 801416a:	2b01      	cmp	r3, #1
 801416c:	d01d      	beq.n	80141aa <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x82>
 801416e:	2b00      	cmp	r3, #0
 8014170:	d02d      	beq.n	80141ce <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0xa6>
 8014172:	2b02      	cmp	r3, #2
 8014174:	d1ea      	bne.n	801414c <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x24>
 8014176:	68c3      	ldr	r3, [r0, #12]
 8014178:	e015      	b.n	80141a6 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x7e>
 801417a:	2a31      	cmp	r2, #49	@ 0x31
 801417c:	d004      	beq.n	8014188 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x60>
 801417e:	d332      	bcc.n	80141e6 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0xbe>
 8014180:	2a32      	cmp	r2, #50	@ 0x32
 8014182:	d030      	beq.n	80141e6 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0xbe>
 8014184:	2a33      	cmp	r2, #51	@ 0x33
 8014186:	d1e1      	bne.n	801414c <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x24>
 8014188:	6f43      	ldr	r3, [r0, #116]	@ 0x74
 801418a:	e00c      	b.n	80141a6 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x7e>
 801418c:	684a      	ldr	r2, [r1, #4]
 801418e:	7813      	ldrb	r3, [r2, #0]
 8014190:	7852      	ldrb	r2, [r2, #1]
 8014192:	2a00      	cmp	r2, #0
 8014194:	d1da      	bne.n	801414c <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x24>
 8014196:	2b01      	cmp	r3, #1
 8014198:	d004      	beq.n	80141a4 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x7c>
 801419a:	d30f      	bcc.n	80141bc <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x94>
 801419c:	2b02      	cmp	r3, #2
 801419e:	d1d5      	bne.n	801414c <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x24>
 80141a0:	6943      	ldr	r3, [r0, #20]
 80141a2:	e000      	b.n	80141a6 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x7e>
 80141a4:	6a43      	ldr	r3, [r0, #36]	@ 0x24
 80141a6:	4618      	mov	r0, r3
 80141a8:	4770      	bx	lr
 80141aa:	69c3      	ldr	r3, [r0, #28]
 80141ac:	e7fb      	b.n	80141a6 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x7e>
 80141ae:	684b      	ldr	r3, [r1, #4]
 80141b0:	781a      	ldrb	r2, [r3, #0]
 80141b2:	785b      	ldrb	r3, [r3, #1]
 80141b4:	2b00      	cmp	r3, #0
 80141b6:	d1c9      	bne.n	801414c <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x24>
 80141b8:	2a00      	cmp	r2, #0
 80141ba:	d1f4      	bne.n	80141a6 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x7e>
 80141bc:	6b43      	ldr	r3, [r0, #52]	@ 0x34
 80141be:	e7f2      	b.n	80141a6 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x7e>
 80141c0:	684b      	ldr	r3, [r1, #4]
 80141c2:	781a      	ldrb	r2, [r3, #0]
 80141c4:	785b      	ldrb	r3, [r3, #1]
 80141c6:	2b00      	cmp	r3, #0
 80141c8:	d1c0      	bne.n	801414c <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x24>
 80141ca:	2a00      	cmp	r2, #0
 80141cc:	d1eb      	bne.n	80141a6 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x7e>
 80141ce:	6ac3      	ldr	r3, [r0, #44]	@ 0x2c
 80141d0:	e7e9      	b.n	80141a6 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x7e>
 80141d2:	6cc3      	ldr	r3, [r0, #76]	@ 0x4c
 80141d4:	e7e7      	b.n	80141a6 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x7e>
 80141d6:	6d43      	ldr	r3, [r0, #84]	@ 0x54
 80141d8:	e7e5      	b.n	80141a6 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x7e>
 80141da:	6c43      	ldr	r3, [r0, #68]	@ 0x44
 80141dc:	e7e3      	b.n	80141a6 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x7e>
 80141de:	6dc3      	ldr	r3, [r0, #92]	@ 0x5c
 80141e0:	e7e1      	b.n	80141a6 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x7e>
 80141e2:	6e43      	ldr	r3, [r0, #100]	@ 0x64
 80141e4:	e7df      	b.n	80141a6 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x7e>
 80141e6:	6ec3      	ldr	r3, [r0, #108]	@ 0x6c
 80141e8:	e7dd      	b.n	80141a6 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x7e>
 80141ea:	2a0b      	cmp	r2, #11
 80141ec:	d059      	beq.n	80142a2 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x17a>
 80141ee:	d80e      	bhi.n	801420e <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0xe6>
 80141f0:	2a03      	cmp	r2, #3
 80141f2:	d050      	beq.n	8014296 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x16e>
 80141f4:	d804      	bhi.n	8014200 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0xd8>
 80141f6:	2a01      	cmp	r2, #1
 80141f8:	d04f      	beq.n	801429a <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x172>
 80141fa:	d950      	bls.n	801429e <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x176>
 80141fc:	6c03      	ldr	r3, [r0, #64]	@ 0x40
 80141fe:	e7d2      	b.n	80141a6 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x7e>
 8014200:	2a09      	cmp	r2, #9
 8014202:	d04e      	beq.n	80142a2 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x17a>
 8014204:	d801      	bhi.n	801420a <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0xe2>
 8014206:	2a08      	cmp	r2, #8
 8014208:	d1a0      	bne.n	801414c <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x24>
 801420a:	6e03      	ldr	r3, [r0, #96]	@ 0x60
 801420c:	e7cb      	b.n	80141a6 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x7e>
 801420e:	2a2f      	cmp	r2, #47	@ 0x2f
 8014210:	d02d      	beq.n	801426e <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x146>
 8014212:	d811      	bhi.n	8014238 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x110>
 8014214:	2a2d      	cmp	r2, #45	@ 0x2d
 8014216:	d018      	beq.n	801424a <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x122>
 8014218:	d833      	bhi.n	8014282 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x15a>
 801421a:	2a2c      	cmp	r2, #44	@ 0x2c
 801421c:	d196      	bne.n	801414c <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x24>
 801421e:	684a      	ldr	r2, [r1, #4]
 8014220:	7813      	ldrb	r3, [r2, #0]
 8014222:	7852      	ldrb	r2, [r2, #1]
 8014224:	2a00      	cmp	r2, #0
 8014226:	d191      	bne.n	801414c <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x24>
 8014228:	2b01      	cmp	r3, #1
 801422a:	d01e      	beq.n	801426a <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x142>
 801422c:	2b00      	cmp	r3, #0
 801422e:	d030      	beq.n	8014292 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x16a>
 8014230:	2b02      	cmp	r3, #2
 8014232:	d18b      	bne.n	801414c <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x24>
 8014234:	6903      	ldr	r3, [r0, #16]
 8014236:	e7b6      	b.n	80141a6 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x7e>
 8014238:	2a31      	cmp	r2, #49	@ 0x31
 801423a:	d004      	beq.n	8014246 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x11e>
 801423c:	d333      	bcc.n	80142a6 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x17e>
 801423e:	2a32      	cmp	r2, #50	@ 0x32
 8014240:	d031      	beq.n	80142a6 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x17e>
 8014242:	2a33      	cmp	r2, #51	@ 0x33
 8014244:	d182      	bne.n	801414c <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x24>
 8014246:	6f83      	ldr	r3, [r0, #120]	@ 0x78
 8014248:	e7ad      	b.n	80141a6 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x7e>
 801424a:	684a      	ldr	r2, [r1, #4]
 801424c:	7813      	ldrb	r3, [r2, #0]
 801424e:	7852      	ldrb	r2, [r2, #1]
 8014250:	2a00      	cmp	r2, #0
 8014252:	f47f af7b 	bne.w	801414c <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x24>
 8014256:	2b01      	cmp	r3, #1
 8014258:	d005      	beq.n	8014266 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x13e>
 801425a:	d310      	bcc.n	801427e <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x156>
 801425c:	2b02      	cmp	r3, #2
 801425e:	f47f af75 	bne.w	801414c <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x24>
 8014262:	6983      	ldr	r3, [r0, #24]
 8014264:	e79f      	b.n	80141a6 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x7e>
 8014266:	6a83      	ldr	r3, [r0, #40]	@ 0x28
 8014268:	e79d      	b.n	80141a6 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x7e>
 801426a:	6a03      	ldr	r3, [r0, #32]
 801426c:	e79b      	b.n	80141a6 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x7e>
 801426e:	684b      	ldr	r3, [r1, #4]
 8014270:	781a      	ldrb	r2, [r3, #0]
 8014272:	785b      	ldrb	r3, [r3, #1]
 8014274:	2b00      	cmp	r3, #0
 8014276:	f47f af69 	bne.w	801414c <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x24>
 801427a:	2a00      	cmp	r2, #0
 801427c:	d193      	bne.n	80141a6 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x7e>
 801427e:	6b83      	ldr	r3, [r0, #56]	@ 0x38
 8014280:	e791      	b.n	80141a6 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x7e>
 8014282:	684b      	ldr	r3, [r1, #4]
 8014284:	781a      	ldrb	r2, [r3, #0]
 8014286:	785b      	ldrb	r3, [r3, #1]
 8014288:	2b00      	cmp	r3, #0
 801428a:	f47f af5f 	bne.w	801414c <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x24>
 801428e:	2a00      	cmp	r2, #0
 8014290:	d189      	bne.n	80141a6 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x7e>
 8014292:	6b03      	ldr	r3, [r0, #48]	@ 0x30
 8014294:	e787      	b.n	80141a6 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x7e>
 8014296:	6d03      	ldr	r3, [r0, #80]	@ 0x50
 8014298:	e785      	b.n	80141a6 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x7e>
 801429a:	6d83      	ldr	r3, [r0, #88]	@ 0x58
 801429c:	e783      	b.n	80141a6 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x7e>
 801429e:	6c83      	ldr	r3, [r0, #72]	@ 0x48
 80142a0:	e781      	b.n	80141a6 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x7e>
 80142a2:	6e83      	ldr	r3, [r0, #104]	@ 0x68
 80142a4:	e77f      	b.n	80141a6 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x7e>
 80142a6:	6f03      	ldr	r3, [r0, #112]	@ 0x70
 80142a8:	e77d      	b.n	80141a6 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x7e>

080142aa <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff>:
 80142aa:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 80142ae:	b087      	sub	sp, #28
 80142b0:	9815      	ldr	r0, [sp, #84]	@ 0x54
 80142b2:	9205      	str	r2, [sp, #20]
 80142b4:	f89d 2064 	ldrb.w	r2, [sp, #100]	@ 0x64
 80142b8:	9202      	str	r2, [sp, #8]
 80142ba:	e9dd 2416 	ldrd	r2, r4, [sp, #88]	@ 0x58
 80142be:	9101      	str	r1, [sp, #4]
 80142c0:	6841      	ldr	r1, [r0, #4]
 80142c2:	f8dd e060 	ldr.w	lr, [sp, #96]	@ 0x60
 80142c6:	fb01 2404 	mla	r4, r1, r4, r2
 80142ca:	6802      	ldr	r2, [r0, #0]
 80142cc:	eb02 0444 	add.w	r4, r2, r4, lsl #1
 80142d0:	f8de 2000 	ldr.w	r2, [lr]
 80142d4:	9203      	str	r2, [sp, #12]
 80142d6:	f8de 2004 	ldr.w	r2, [lr, #4]
 80142da:	3204      	adds	r2, #4
 80142dc:	9204      	str	r2, [sp, #16]
 80142de:	9a02      	ldr	r2, [sp, #8]
 80142e0:	43d6      	mvns	r6, r2
 80142e2:	b2f6      	uxtb	r6, r6
 80142e4:	9a01      	ldr	r2, [sp, #4]
 80142e6:	2a00      	cmp	r2, #0
 80142e8:	dc03      	bgt.n	80142f2 <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x48>
 80142ea:	9a05      	ldr	r2, [sp, #20]
 80142ec:	2a00      	cmp	r2, #0
 80142ee:	f340 8129 	ble.w	8014544 <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x29a>
 80142f2:	9a11      	ldr	r2, [sp, #68]	@ 0x44
 80142f4:	f9be c008 	ldrsh.w	ip, [lr, #8]
 80142f8:	f9be 700c 	ldrsh.w	r7, [lr, #12]
 80142fc:	f502 4100 	add.w	r1, r2, #32768	@ 0x8000
 8014300:	9a12      	ldr	r2, [sp, #72]	@ 0x48
 8014302:	f502 4200 	add.w	r2, r2, #32768	@ 0x8000
 8014306:	2b00      	cmp	r3, #0
 8014308:	dd0e      	ble.n	8014328 <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x7e>
 801430a:	1408      	asrs	r0, r1, #16
 801430c:	d405      	bmi.n	801431a <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x70>
 801430e:	4560      	cmp	r0, ip
 8014310:	da03      	bge.n	801431a <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x70>
 8014312:	1410      	asrs	r0, r2, #16
 8014314:	d401      	bmi.n	801431a <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x70>
 8014316:	42b8      	cmp	r0, r7
 8014318:	db07      	blt.n	801432a <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x80>
 801431a:	9813      	ldr	r0, [sp, #76]	@ 0x4c
 801431c:	4401      	add	r1, r0
 801431e:	9814      	ldr	r0, [sp, #80]	@ 0x50
 8014320:	3b01      	subs	r3, #1
 8014322:	4402      	add	r2, r0
 8014324:	3402      	adds	r4, #2
 8014326:	e7ee      	b.n	8014306 <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x5c>
 8014328:	d071      	beq.n	801440e <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x164>
 801432a:	9d13      	ldr	r5, [sp, #76]	@ 0x4c
 801432c:	1e58      	subs	r0, r3, #1
 801432e:	fb05 1500 	mla	r5, r5, r0, r1
 8014332:	142d      	asrs	r5, r5, #16
 8014334:	d45f      	bmi.n	80143f6 <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x14c>
 8014336:	4565      	cmp	r5, ip
 8014338:	da5d      	bge.n	80143f6 <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x14c>
 801433a:	9d14      	ldr	r5, [sp, #80]	@ 0x50
 801433c:	fb05 2000 	mla	r0, r5, r0, r2
 8014340:	1400      	asrs	r0, r0, #16
 8014342:	d458      	bmi.n	80143f6 <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x14c>
 8014344:	42b8      	cmp	r0, r7
 8014346:	da56      	bge.n	80143f6 <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x14c>
 8014348:	f8bd b008 	ldrh.w	fp, [sp, #8]
 801434c:	4699      	mov	r9, r3
 801434e:	46a2      	mov	sl, r4
 8014350:	f1b9 0f00 	cmp.w	r9, #0
 8014354:	dd57      	ble.n	8014406 <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x15c>
 8014356:	f9be 7008 	ldrsh.w	r7, [lr, #8]
 801435a:	9803      	ldr	r0, [sp, #12]
 801435c:	ea4f 4c22 	mov.w	ip, r2, asr #16
 8014360:	140d      	asrs	r5, r1, #16
 8014362:	fb07 000c 	mla	r0, r7, ip, r0
 8014366:	f109 39ff 	add.w	r9, r9, #4294967295
 801436a:	5d40      	ldrb	r0, [r0, r5]
 801436c:	9d04      	ldr	r5, [sp, #16]
 801436e:	f835 0010 	ldrh.w	r0, [r5, r0, lsl #1]
 8014372:	f8ba 5000 	ldrh.w	r5, [sl]
 8014376:	122f      	asrs	r7, r5, #8
 8014378:	ea4f 2c20 	mov.w	ip, r0, asr #8
 801437c:	f007 07f8 	and.w	r7, r7, #248	@ 0xf8
 8014380:	fb17 f706 	smulbb	r7, r7, r6
 8014384:	ea4f 08e5 	mov.w	r8, r5, asr #3
 8014388:	f00c 0cf8 	and.w	ip, ip, #248	@ 0xf8
 801438c:	00ed      	lsls	r5, r5, #3
 801438e:	fb0c 7c0b 	mla	ip, ip, fp, r7
 8014392:	f008 08fc 	and.w	r8, r8, #252	@ 0xfc
 8014396:	10c7      	asrs	r7, r0, #3
 8014398:	b2ed      	uxtb	r5, r5
 801439a:	00c0      	lsls	r0, r0, #3
 801439c:	fb18 f806 	smulbb	r8, r8, r6
 80143a0:	fb15 f506 	smulbb	r5, r5, r6
 80143a4:	f007 07fc 	and.w	r7, r7, #252	@ 0xfc
 80143a8:	b2c0      	uxtb	r0, r0
 80143aa:	fa1f fc8c 	uxth.w	ip, ip
 80143ae:	fb07 870b 	mla	r7, r7, fp, r8
 80143b2:	fb00 500b 	mla	r0, r0, fp, r5
 80143b6:	b280      	uxth	r0, r0
 80143b8:	b2bf      	uxth	r7, r7
 80143ba:	f10c 0501 	add.w	r5, ip, #1
 80143be:	eb05 2c1c 	add.w	ip, r5, ip, lsr #8
 80143c2:	f107 0801 	add.w	r8, r7, #1
 80143c6:	1c45      	adds	r5, r0, #1
 80143c8:	eb05 2510 	add.w	r5, r5, r0, lsr #8
 80143cc:	eb08 2817 	add.w	r8, r8, r7, lsr #8
 80143d0:	9813      	ldr	r0, [sp, #76]	@ 0x4c
 80143d2:	f40c 4c78 	and.w	ip, ip, #63488	@ 0xf800
 80143d6:	f3c5 25c4 	ubfx	r5, r5, #11, #5
 80143da:	ea4f 1858 	mov.w	r8, r8, lsr #5
 80143de:	ea45 0c0c 	orr.w	ip, r5, ip
 80143e2:	f408 68fc 	and.w	r8, r8, #2016	@ 0x7e0
 80143e6:	4401      	add	r1, r0
 80143e8:	9814      	ldr	r0, [sp, #80]	@ 0x50
 80143ea:	ea4c 0c08 	orr.w	ip, ip, r8
 80143ee:	f82a cb02 	strh.w	ip, [sl], #2
 80143f2:	4402      	add	r2, r0
 80143f4:	e7ac      	b.n	8014350 <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xa6>
 80143f6:	f8bd a008 	ldrh.w	sl, [sp, #8]
 80143fa:	f04f 0800 	mov.w	r8, #0
 80143fe:	eb03 0008 	add.w	r0, r3, r8
 8014402:	2800      	cmp	r0, #0
 8014404:	dc41      	bgt.n	801448a <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1e0>
 8014406:	ea23 73e3 	bic.w	r3, r3, r3, asr #31
 801440a:	eb04 0443 	add.w	r4, r4, r3, lsl #1
 801440e:	9b01      	ldr	r3, [sp, #4]
 8014410:	2b00      	cmp	r3, #0
 8014412:	f340 8097 	ble.w	8014544 <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x29a>
 8014416:	ee30 0a04 	vadd.f32	s0, s0, s8
 801441a:	eeb7 7a00 	vmov.f32	s14, #112	@ 0x3f800000  1.0
 801441e:	eec7 7a00 	vdiv.f32	s15, s14, s0
 8014422:	9b10      	ldr	r3, [sp, #64]	@ 0x40
 8014424:	ee70 0aa4 	vadd.f32	s1, s1, s9
 8014428:	ee31 1a05 	vadd.f32	s2, s2, s10
 801442c:	ee20 7aa7 	vmul.f32	s14, s1, s15
 8014430:	eef0 6a62 	vmov.f32	s13, s5
 8014434:	ee61 7a27 	vmul.f32	s15, s2, s15
 8014438:	eefe 6ac8 	vcvt.s32.f32	s13, s13, #16
 801443c:	ee77 2a62 	vsub.f32	s5, s14, s5
 8014440:	edcd 6a11 	vstr	s13, [sp, #68]	@ 0x44
 8014444:	eefe 2ac8 	vcvt.s32.f32	s5, s5, #16
 8014448:	eef0 6a43 	vmov.f32	s13, s6
 801444c:	ee37 3ac3 	vsub.f32	s6, s15, s6
 8014450:	ee12 2a90 	vmov	r2, s5
 8014454:	eebe 3ac8 	vcvt.s32.f32	s6, s6, #16
 8014458:	fb92 f3f3 	sdiv	r3, r2, r3
 801445c:	ee13 2a10 	vmov	r2, s6
 8014460:	9313      	str	r3, [sp, #76]	@ 0x4c
 8014462:	9b10      	ldr	r3, [sp, #64]	@ 0x40
 8014464:	fb92 f3f3 	sdiv	r3, r2, r3
 8014468:	9314      	str	r3, [sp, #80]	@ 0x50
 801446a:	9b01      	ldr	r3, [sp, #4]
 801446c:	9a05      	ldr	r2, [sp, #20]
 801446e:	eefe 6ac8 	vcvt.s32.f32	s13, s13, #16
 8014472:	3b01      	subs	r3, #1
 8014474:	9301      	str	r3, [sp, #4]
 8014476:	edcd 6a12 	vstr	s13, [sp, #72]	@ 0x48
 801447a:	9b10      	ldr	r3, [sp, #64]	@ 0x40
 801447c:	eeb0 3a67 	vmov.f32	s6, s15
 8014480:	bf08      	it	eq
 8014482:	4613      	moveq	r3, r2
 8014484:	eef0 2a47 	vmov.f32	s5, s14
 8014488:	e72c      	b.n	80142e4 <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3a>
 801448a:	140f      	asrs	r7, r1, #16
 801448c:	d453      	bmi.n	8014536 <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x28c>
 801448e:	f8de 5008 	ldr.w	r5, [lr, #8]
 8014492:	42bd      	cmp	r5, r7
 8014494:	dd4f      	ble.n	8014536 <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x28c>
 8014496:	ea5f 4c22 	movs.w	ip, r2, asr #16
 801449a:	d44c      	bmi.n	8014536 <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x28c>
 801449c:	f8de 000c 	ldr.w	r0, [lr, #12]
 80144a0:	4560      	cmp	r0, ip
 80144a2:	dd48      	ble.n	8014536 <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x28c>
 80144a4:	9803      	ldr	r0, [sp, #12]
 80144a6:	b22d      	sxth	r5, r5
 80144a8:	fb0c 0505 	mla	r5, ip, r5, r0
 80144ac:	5de8      	ldrb	r0, [r5, r7]
 80144ae:	9d04      	ldr	r5, [sp, #16]
 80144b0:	f835 0010 	ldrh.w	r0, [r5, r0, lsl #1]
 80144b4:	f06f 0501 	mvn.w	r5, #1
 80144b8:	fb05 fb08 	mul.w	fp, r5, r8
 80144bc:	ea4f 2c20 	mov.w	ip, r0, asr #8
 80144c0:	f834 500b 	ldrh.w	r5, [r4, fp]
 80144c4:	122f      	asrs	r7, r5, #8
 80144c6:	f007 07f8 	and.w	r7, r7, #248	@ 0xf8
 80144ca:	fb17 f706 	smulbb	r7, r7, r6
 80144ce:	ea4f 09e5 	mov.w	r9, r5, asr #3
 80144d2:	f00c 0cf8 	and.w	ip, ip, #248	@ 0xf8
 80144d6:	00ed      	lsls	r5, r5, #3
 80144d8:	fb0c 7c0a 	mla	ip, ip, sl, r7
 80144dc:	f009 09fc 	and.w	r9, r9, #252	@ 0xfc
 80144e0:	10c7      	asrs	r7, r0, #3
 80144e2:	b2ed      	uxtb	r5, r5
 80144e4:	00c0      	lsls	r0, r0, #3
 80144e6:	fb19 f906 	smulbb	r9, r9, r6
 80144ea:	fb15 f506 	smulbb	r5, r5, r6
 80144ee:	f007 07fc 	and.w	r7, r7, #252	@ 0xfc
 80144f2:	b2c0      	uxtb	r0, r0
 80144f4:	fa1f fc8c 	uxth.w	ip, ip
 80144f8:	fb07 970a 	mla	r7, r7, sl, r9
 80144fc:	fb00 500a 	mla	r0, r0, sl, r5
 8014500:	b2bf      	uxth	r7, r7
 8014502:	b280      	uxth	r0, r0
 8014504:	f10c 0501 	add.w	r5, ip, #1
 8014508:	eb05 2c1c 	add.w	ip, r5, ip, lsr #8
 801450c:	f107 0901 	add.w	r9, r7, #1
 8014510:	1c45      	adds	r5, r0, #1
 8014512:	eb05 2510 	add.w	r5, r5, r0, lsr #8
 8014516:	eb09 2917 	add.w	r9, r9, r7, lsr #8
 801451a:	f40c 4c78 	and.w	ip, ip, #63488	@ 0xf800
 801451e:	f3c5 25c4 	ubfx	r5, r5, #11, #5
 8014522:	ea4f 1959 	mov.w	r9, r9, lsr #5
 8014526:	ea45 0c0c 	orr.w	ip, r5, ip
 801452a:	f409 69fc 	and.w	r9, r9, #2016	@ 0x7e0
 801452e:	ea4c 0c09 	orr.w	ip, ip, r9
 8014532:	f824 c00b 	strh.w	ip, [r4, fp]
 8014536:	9813      	ldr	r0, [sp, #76]	@ 0x4c
 8014538:	4401      	add	r1, r0
 801453a:	9814      	ldr	r0, [sp, #80]	@ 0x50
 801453c:	f108 38ff 	add.w	r8, r8, #4294967295
 8014540:	4402      	add	r2, r0
 8014542:	e75c      	b.n	80143fe <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x154>
 8014544:	b007      	add	sp, #28
 8014546:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}

0801454a <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff>:
 801454a:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 801454e:	b085      	sub	sp, #20
 8014550:	4693      	mov	fp, r2
 8014552:	9e13      	ldr	r6, [sp, #76]	@ 0x4c
 8014554:	9d16      	ldr	r5, [sp, #88]	@ 0x58
 8014556:	6870      	ldr	r0, [r6, #4]
 8014558:	9100      	str	r1, [sp, #0]
 801455a:	e9dd 2414 	ldrd	r2, r4, [sp, #80]	@ 0x50
 801455e:	fb00 2404 	mla	r4, r0, r4, r2
 8014562:	6832      	ldr	r2, [r6, #0]
 8014564:	eb02 0444 	add.w	r4, r2, r4, lsl #1
 8014568:	682a      	ldr	r2, [r5, #0]
 801456a:	9201      	str	r2, [sp, #4]
 801456c:	686a      	ldr	r2, [r5, #4]
 801456e:	e9dd ec11 	ldrd	lr, ip, [sp, #68]	@ 0x44
 8014572:	3204      	adds	r2, #4
 8014574:	9202      	str	r2, [sp, #8]
 8014576:	eef7 6a00 	vmov.f32	s13, #112	@ 0x3f800000  1.0
 801457a:	9a00      	ldr	r2, [sp, #0]
 801457c:	2a00      	cmp	r2, #0
 801457e:	dc03      	bgt.n	8014588 <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3e>
 8014580:	f1bb 0f00 	cmp.w	fp, #0
 8014584:	f340 80a0 	ble.w	80146c8 <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x17e>
 8014588:	9a0f      	ldr	r2, [sp, #60]	@ 0x3c
 801458a:	f9b5 9008 	ldrsh.w	r9, [r5, #8]
 801458e:	f9b5 800c 	ldrsh.w	r8, [r5, #12]
 8014592:	f502 4000 	add.w	r0, r2, #32768	@ 0x8000
 8014596:	9a10      	ldr	r2, [sp, #64]	@ 0x40
 8014598:	f502 4200 	add.w	r2, r2, #32768	@ 0x8000
 801459c:	2b00      	cmp	r3, #0
 801459e:	dd0c      	ble.n	80145ba <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x70>
 80145a0:	1406      	asrs	r6, r0, #16
 80145a2:	d405      	bmi.n	80145b0 <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x66>
 80145a4:	454e      	cmp	r6, r9
 80145a6:	da03      	bge.n	80145b0 <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x66>
 80145a8:	1416      	asrs	r6, r2, #16
 80145aa:	d401      	bmi.n	80145b0 <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x66>
 80145ac:	4546      	cmp	r6, r8
 80145ae:	db05      	blt.n	80145bc <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x72>
 80145b0:	4470      	add	r0, lr
 80145b2:	4462      	add	r2, ip
 80145b4:	3b01      	subs	r3, #1
 80145b6:	3402      	adds	r4, #2
 80145b8:	e7f0      	b.n	801459c <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x52>
 80145ba:	d00f      	beq.n	80145dc <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x92>
 80145bc:	1e5e      	subs	r6, r3, #1
 80145be:	fb0e 0706 	mla	r7, lr, r6, r0
 80145c2:	143f      	asrs	r7, r7, #16
 80145c4:	d541      	bpl.n	801464a <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x100>
 80145c6:	eb04 0643 	add.w	r6, r4, r3, lsl #1
 80145ca:	4698      	mov	r8, r3
 80145cc:	9603      	str	r6, [sp, #12]
 80145ce:	f1b8 0f00 	cmp.w	r8, #0
 80145d2:	dc59      	bgt.n	8014688 <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x13e>
 80145d4:	ea23 73e3 	bic.w	r3, r3, r3, asr #31
 80145d8:	eb04 0443 	add.w	r4, r4, r3, lsl #1
 80145dc:	9b00      	ldr	r3, [sp, #0]
 80145de:	2b00      	cmp	r3, #0
 80145e0:	dd72      	ble.n	80146c8 <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x17e>
 80145e2:	ee30 0a04 	vadd.f32	s0, s0, s8
 80145e6:	ee70 0aa4 	vadd.f32	s1, s1, s9
 80145ea:	eec6 7a80 	vdiv.f32	s15, s13, s0
 80145ee:	9b0e      	ldr	r3, [sp, #56]	@ 0x38
 80145f0:	ee31 1a05 	vadd.f32	s2, s2, s10
 80145f4:	ee20 7aa7 	vmul.f32	s14, s1, s15
 80145f8:	eeb0 6a62 	vmov.f32	s12, s5
 80145fc:	ee61 7a27 	vmul.f32	s15, s2, s15
 8014600:	eebe 6ac8 	vcvt.s32.f32	s12, s12, #16
 8014604:	ee77 2a62 	vsub.f32	s5, s14, s5
 8014608:	ed8d 6a0f 	vstr	s12, [sp, #60]	@ 0x3c
 801460c:	eefe 2ac8 	vcvt.s32.f32	s5, s5, #16
 8014610:	eeb0 6a43 	vmov.f32	s12, s6
 8014614:	ee37 3ac3 	vsub.f32	s6, s15, s6
 8014618:	ee12 2a90 	vmov	r2, s5
 801461c:	eebe 3ac8 	vcvt.s32.f32	s6, s6, #16
 8014620:	fb92 fef3 	sdiv	lr, r2, r3
 8014624:	ee13 2a10 	vmov	r2, s6
 8014628:	fb92 fcf3 	sdiv	ip, r2, r3
 801462c:	9b00      	ldr	r3, [sp, #0]
 801462e:	eebe 6ac8 	vcvt.s32.f32	s12, s12, #16
 8014632:	3b01      	subs	r3, #1
 8014634:	9300      	str	r3, [sp, #0]
 8014636:	ed8d 6a10 	vstr	s12, [sp, #64]	@ 0x40
 801463a:	9b0e      	ldr	r3, [sp, #56]	@ 0x38
 801463c:	eeb0 3a67 	vmov.f32	s6, s15
 8014640:	bf08      	it	eq
 8014642:	465b      	moveq	r3, fp
 8014644:	eef0 2a47 	vmov.f32	s5, s14
 8014648:	e797      	b.n	801457a <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x30>
 801464a:	454f      	cmp	r7, r9
 801464c:	dabb      	bge.n	80145c6 <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x7c>
 801464e:	fb0c 2606 	mla	r6, ip, r6, r2
 8014652:	1436      	asrs	r6, r6, #16
 8014654:	d4b7      	bmi.n	80145c6 <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x7c>
 8014656:	4546      	cmp	r6, r8
 8014658:	dab5      	bge.n	80145c6 <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x7c>
 801465a:	461e      	mov	r6, r3
 801465c:	46a0      	mov	r8, r4
 801465e:	2e00      	cmp	r6, #0
 8014660:	ddb8      	ble.n	80145d4 <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x8a>
 8014662:	f9b5 a008 	ldrsh.w	sl, [r5, #8]
 8014666:	9901      	ldr	r1, [sp, #4]
 8014668:	1417      	asrs	r7, r2, #16
 801466a:	ea4f 4920 	mov.w	r9, r0, asr #16
 801466e:	fb0a 1707 	mla	r7, sl, r7, r1
 8014672:	9902      	ldr	r1, [sp, #8]
 8014674:	f817 7009 	ldrb.w	r7, [r7, r9]
 8014678:	f831 7017 	ldrh.w	r7, [r1, r7, lsl #1]
 801467c:	f828 7b02 	strh.w	r7, [r8], #2
 8014680:	4470      	add	r0, lr
 8014682:	4462      	add	r2, ip
 8014684:	3e01      	subs	r6, #1
 8014686:	e7ea      	b.n	801465e <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x114>
 8014688:	ea5f 4920 	movs.w	r9, r0, asr #16
 801468c:	d417      	bmi.n	80146be <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x174>
 801468e:	68ae      	ldr	r6, [r5, #8]
 8014690:	454e      	cmp	r6, r9
 8014692:	dd14      	ble.n	80146be <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x174>
 8014694:	ea5f 4a22 	movs.w	sl, r2, asr #16
 8014698:	d411      	bmi.n	80146be <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x174>
 801469a:	68ef      	ldr	r7, [r5, #12]
 801469c:	4557      	cmp	r7, sl
 801469e:	dd0e      	ble.n	80146be <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x174>
 80146a0:	9f01      	ldr	r7, [sp, #4]
 80146a2:	b236      	sxth	r6, r6
 80146a4:	fb0a 7606 	mla	r6, sl, r6, r7
 80146a8:	9f02      	ldr	r7, [sp, #8]
 80146aa:	f816 6009 	ldrb.w	r6, [r6, r9]
 80146ae:	f06f 0101 	mvn.w	r1, #1
 80146b2:	f837 7016 	ldrh.w	r7, [r7, r6, lsl #1]
 80146b6:	fb01 f608 	mul.w	r6, r1, r8
 80146ba:	9903      	ldr	r1, [sp, #12]
 80146bc:	538f      	strh	r7, [r1, r6]
 80146be:	4470      	add	r0, lr
 80146c0:	4462      	add	r2, ip
 80146c2:	f108 38ff 	add.w	r8, r8, #4294967295
 80146c6:	e782      	b.n	80145ce <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x84>
 80146c8:	b005      	add	sp, #20
 80146ca:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}

080146ce <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB888_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff>:
 80146ce:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 80146d2:	b087      	sub	sp, #28
 80146d4:	9c15      	ldr	r4, [sp, #84]	@ 0x54
 80146d6:	9205      	str	r2, [sp, #20]
 80146d8:	f89d 2064 	ldrb.w	r2, [sp, #100]	@ 0x64
 80146dc:	9203      	str	r2, [sp, #12]
 80146de:	e9dd 2016 	ldrd	r2, r0, [sp, #88]	@ 0x58
 80146e2:	9102      	str	r1, [sp, #8]
 80146e4:	6861      	ldr	r1, [r4, #4]
 80146e6:	f8dd c060 	ldr.w	ip, [sp, #96]	@ 0x60
 80146ea:	fb01 2000 	mla	r0, r1, r0, r2
 80146ee:	6822      	ldr	r2, [r4, #0]
 80146f0:	eb02 0240 	add.w	r2, r2, r0, lsl #1
 80146f4:	9200      	str	r2, [sp, #0]
 80146f6:	f8dc 2000 	ldr.w	r2, [ip]
 80146fa:	9204      	str	r2, [sp, #16]
 80146fc:	f8dc 2004 	ldr.w	r2, [ip, #4]
 8014700:	3204      	adds	r2, #4
 8014702:	9201      	str	r2, [sp, #4]
 8014704:	9a03      	ldr	r2, [sp, #12]
 8014706:	43d5      	mvns	r5, r2
 8014708:	b2ed      	uxtb	r5, r5
 801470a:	9a02      	ldr	r2, [sp, #8]
 801470c:	2a00      	cmp	r2, #0
 801470e:	dc03      	bgt.n	8014718 <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB888_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x4a>
 8014710:	9a05      	ldr	r2, [sp, #20]
 8014712:	2a00      	cmp	r2, #0
 8014714:	f340 812c 	ble.w	8014970 <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB888_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2a2>
 8014718:	9a11      	ldr	r2, [sp, #68]	@ 0x44
 801471a:	f9bc e008 	ldrsh.w	lr, [ip, #8]
 801471e:	f9bc 700c 	ldrsh.w	r7, [ip, #12]
 8014722:	f502 4100 	add.w	r1, r2, #32768	@ 0x8000
 8014726:	9a12      	ldr	r2, [sp, #72]	@ 0x48
 8014728:	f502 4200 	add.w	r2, r2, #32768	@ 0x8000
 801472c:	2b00      	cmp	r3, #0
 801472e:	dd10      	ble.n	8014752 <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB888_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x84>
 8014730:	140c      	asrs	r4, r1, #16
 8014732:	d405      	bmi.n	8014740 <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB888_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x72>
 8014734:	4574      	cmp	r4, lr
 8014736:	da03      	bge.n	8014740 <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB888_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x72>
 8014738:	1414      	asrs	r4, r2, #16
 801473a:	d401      	bmi.n	8014740 <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB888_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x72>
 801473c:	42bc      	cmp	r4, r7
 801473e:	db09      	blt.n	8014754 <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB888_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x86>
 8014740:	9c13      	ldr	r4, [sp, #76]	@ 0x4c
 8014742:	9800      	ldr	r0, [sp, #0]
 8014744:	4421      	add	r1, r4
 8014746:	9c14      	ldr	r4, [sp, #80]	@ 0x50
 8014748:	3002      	adds	r0, #2
 801474a:	4422      	add	r2, r4
 801474c:	3b01      	subs	r3, #1
 801474e:	9000      	str	r0, [sp, #0]
 8014750:	e7ec      	b.n	801472c <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB888_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x5e>
 8014752:	d071      	beq.n	8014838 <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB888_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x16a>
 8014754:	9e13      	ldr	r6, [sp, #76]	@ 0x4c
 8014756:	1e5c      	subs	r4, r3, #1
 8014758:	fb06 1604 	mla	r6, r6, r4, r1
 801475c:	1436      	asrs	r6, r6, #16
 801475e:	d45d      	bmi.n	801481c <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB888_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x14e>
 8014760:	4576      	cmp	r6, lr
 8014762:	da5b      	bge.n	801481c <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB888_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x14e>
 8014764:	9e14      	ldr	r6, [sp, #80]	@ 0x50
 8014766:	fb06 2404 	mla	r4, r6, r4, r2
 801476a:	1424      	asrs	r4, r4, #16
 801476c:	d456      	bmi.n	801481c <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB888_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x14e>
 801476e:	42bc      	cmp	r4, r7
 8014770:	da54      	bge.n	801481c <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB888_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x14e>
 8014772:	f8dd 9000 	ldr.w	r9, [sp]
 8014776:	f8bd a00c 	ldrh.w	sl, [sp, #12]
 801477a:	4698      	mov	r8, r3
 801477c:	f1b8 0f00 	cmp.w	r8, #0
 8014780:	dd54      	ble.n	801482c <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB888_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x15e>
 8014782:	f9bc 7008 	ldrsh.w	r7, [ip, #8]
 8014786:	9804      	ldr	r0, [sp, #16]
 8014788:	1414      	asrs	r4, r2, #16
 801478a:	fb07 0404 	mla	r4, r7, r4, r0
 801478e:	140e      	asrs	r6, r1, #16
 8014790:	9801      	ldr	r0, [sp, #4]
 8014792:	f814 e006 	ldrb.w	lr, [r4, r6]
 8014796:	f8b9 4000 	ldrh.w	r4, [r9]
 801479a:	eb0e 0e4e 	add.w	lr, lr, lr, lsl #1
 801479e:	eb00 0b0e 	add.w	fp, r0, lr
 80147a2:	1227      	asrs	r7, r4, #8
 80147a4:	f89b 6002 	ldrb.w	r6, [fp, #2]
 80147a8:	f89b b001 	ldrb.w	fp, [fp, #1]
 80147ac:	f810 e00e 	ldrb.w	lr, [r0, lr]
 80147b0:	9813      	ldr	r0, [sp, #76]	@ 0x4c
 80147b2:	fb16 f60a 	smulbb	r6, r6, sl
 80147b6:	f007 07f8 	and.w	r7, r7, #248	@ 0xf8
 80147ba:	fb07 6705 	mla	r7, r7, r5, r6
 80147be:	10e6      	asrs	r6, r4, #3
 80147c0:	00e4      	lsls	r4, r4, #3
 80147c2:	b2e4      	uxtb	r4, r4
 80147c4:	fb1b fb0a 	smulbb	fp, fp, sl
 80147c8:	fb14 f405 	smulbb	r4, r4, r5
 80147cc:	f006 06fc 	and.w	r6, r6, #252	@ 0xfc
 80147d0:	b2bf      	uxth	r7, r7
 80147d2:	fb06 b605 	mla	r6, r6, r5, fp
 80147d6:	fb0e 4e0a 	mla	lr, lr, sl, r4
 80147da:	b2b6      	uxth	r6, r6
 80147dc:	fa1f fe8e 	uxth.w	lr, lr
 80147e0:	1c7c      	adds	r4, r7, #1
 80147e2:	eb04 2717 	add.w	r7, r4, r7, lsr #8
 80147e6:	f106 0b01 	add.w	fp, r6, #1
 80147ea:	f10e 0401 	add.w	r4, lr, #1
 80147ee:	eb04 241e 	add.w	r4, r4, lr, lsr #8
 80147f2:	eb0b 2b16 	add.w	fp, fp, r6, lsr #8
 80147f6:	f407 4778 	and.w	r7, r7, #63488	@ 0xf800
 80147fa:	f3c4 24c4 	ubfx	r4, r4, #11, #5
 80147fe:	ea4f 1b5b 	mov.w	fp, fp, lsr #5
 8014802:	4327      	orrs	r7, r4
 8014804:	f40b 6bfc 	and.w	fp, fp, #2016	@ 0x7e0
 8014808:	4401      	add	r1, r0
 801480a:	9814      	ldr	r0, [sp, #80]	@ 0x50
 801480c:	ea47 070b 	orr.w	r7, r7, fp
 8014810:	f829 7b02 	strh.w	r7, [r9], #2
 8014814:	4402      	add	r2, r0
 8014816:	f108 38ff 	add.w	r8, r8, #4294967295
 801481a:	e7af      	b.n	801477c <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB888_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xae>
 801481c:	f8bd 900c 	ldrh.w	r9, [sp, #12]
 8014820:	f04f 0e00 	mov.w	lr, #0
 8014824:	eb03 040e 	add.w	r4, r3, lr
 8014828:	2c00      	cmp	r4, #0
 801482a:	dc43      	bgt.n	80148b4 <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB888_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1e6>
 801482c:	9a00      	ldr	r2, [sp, #0]
 801482e:	ea23 73e3 	bic.w	r3, r3, r3, asr #31
 8014832:	eb02 0343 	add.w	r3, r2, r3, lsl #1
 8014836:	9300      	str	r3, [sp, #0]
 8014838:	9b02      	ldr	r3, [sp, #8]
 801483a:	2b00      	cmp	r3, #0
 801483c:	f340 8098 	ble.w	8014970 <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB888_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2a2>
 8014840:	ee30 0a04 	vadd.f32	s0, s0, s8
 8014844:	eeb7 7a00 	vmov.f32	s14, #112	@ 0x3f800000  1.0
 8014848:	eec7 7a00 	vdiv.f32	s15, s14, s0
 801484c:	9b10      	ldr	r3, [sp, #64]	@ 0x40
 801484e:	ee70 0aa4 	vadd.f32	s1, s1, s9
 8014852:	ee31 1a05 	vadd.f32	s2, s2, s10
 8014856:	ee20 7aa7 	vmul.f32	s14, s1, s15
 801485a:	eef0 6a62 	vmov.f32	s13, s5
 801485e:	ee61 7a27 	vmul.f32	s15, s2, s15
 8014862:	eefe 6ac8 	vcvt.s32.f32	s13, s13, #16
 8014866:	ee77 2a62 	vsub.f32	s5, s14, s5
 801486a:	edcd 6a11 	vstr	s13, [sp, #68]	@ 0x44
 801486e:	eefe 2ac8 	vcvt.s32.f32	s5, s5, #16
 8014872:	eef0 6a43 	vmov.f32	s13, s6
 8014876:	ee37 3ac3 	vsub.f32	s6, s15, s6
 801487a:	ee12 2a90 	vmov	r2, s5
 801487e:	eebe 3ac8 	vcvt.s32.f32	s6, s6, #16
 8014882:	fb92 f3f3 	sdiv	r3, r2, r3
 8014886:	ee13 2a10 	vmov	r2, s6
 801488a:	9313      	str	r3, [sp, #76]	@ 0x4c
 801488c:	9b10      	ldr	r3, [sp, #64]	@ 0x40
 801488e:	fb92 f3f3 	sdiv	r3, r2, r3
 8014892:	9314      	str	r3, [sp, #80]	@ 0x50
 8014894:	9b02      	ldr	r3, [sp, #8]
 8014896:	9a05      	ldr	r2, [sp, #20]
 8014898:	eefe 6ac8 	vcvt.s32.f32	s13, s13, #16
 801489c:	3b01      	subs	r3, #1
 801489e:	9302      	str	r3, [sp, #8]
 80148a0:	edcd 6a12 	vstr	s13, [sp, #72]	@ 0x48
 80148a4:	9b10      	ldr	r3, [sp, #64]	@ 0x40
 80148a6:	eeb0 3a67 	vmov.f32	s6, s15
 80148aa:	bf08      	it	eq
 80148ac:	4613      	moveq	r3, r2
 80148ae:	eef0 2a47 	vmov.f32	s5, s14
 80148b2:	e72a      	b.n	801470a <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB888_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3c>
 80148b4:	140f      	asrs	r7, r1, #16
 80148b6:	d454      	bmi.n	8014962 <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB888_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x294>
 80148b8:	f8dc 6008 	ldr.w	r6, [ip, #8]
 80148bc:	42be      	cmp	r6, r7
 80148be:	dd50      	ble.n	8014962 <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB888_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x294>
 80148c0:	ea5f 4822 	movs.w	r8, r2, asr #16
 80148c4:	d44d      	bmi.n	8014962 <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB888_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x294>
 80148c6:	f8dc 400c 	ldr.w	r4, [ip, #12]
 80148ca:	4544      	cmp	r4, r8
 80148cc:	dd49      	ble.n	8014962 <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB888_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x294>
 80148ce:	9c04      	ldr	r4, [sp, #16]
 80148d0:	b236      	sxth	r6, r6
 80148d2:	fb08 4606 	mla	r6, r8, r6, r4
 80148d6:	f06f 0001 	mvn.w	r0, #1
 80148da:	f816 8007 	ldrb.w	r8, [r6, r7]
 80148de:	9c01      	ldr	r4, [sp, #4]
 80148e0:	fb00 fa0e 	mul.w	sl, r0, lr
 80148e4:	eb08 0848 	add.w	r8, r8, r8, lsl #1
 80148e8:	9800      	ldr	r0, [sp, #0]
 80148ea:	eb04 0b08 	add.w	fp, r4, r8
 80148ee:	f830 400a 	ldrh.w	r4, [r0, sl]
 80148f2:	f89b 6002 	ldrb.w	r6, [fp, #2]
 80148f6:	9801      	ldr	r0, [sp, #4]
 80148f8:	f89b b001 	ldrb.w	fp, [fp, #1]
 80148fc:	f810 8008 	ldrb.w	r8, [r0, r8]
 8014900:	9800      	ldr	r0, [sp, #0]
 8014902:	1227      	asrs	r7, r4, #8
 8014904:	fb16 f609 	smulbb	r6, r6, r9
 8014908:	f007 07f8 	and.w	r7, r7, #248	@ 0xf8
 801490c:	fb07 6705 	mla	r7, r7, r5, r6
 8014910:	10e6      	asrs	r6, r4, #3
 8014912:	00e4      	lsls	r4, r4, #3
 8014914:	b2e4      	uxtb	r4, r4
 8014916:	fb1b fb09 	smulbb	fp, fp, r9
 801491a:	fb14 f405 	smulbb	r4, r4, r5
 801491e:	f006 06fc 	and.w	r6, r6, #252	@ 0xfc
 8014922:	b2bf      	uxth	r7, r7
 8014924:	fb06 b605 	mla	r6, r6, r5, fp
 8014928:	fb08 4809 	mla	r8, r8, r9, r4
 801492c:	b2b6      	uxth	r6, r6
 801492e:	fa1f f888 	uxth.w	r8, r8
 8014932:	1c7c      	adds	r4, r7, #1
 8014934:	eb04 2717 	add.w	r7, r4, r7, lsr #8
 8014938:	f106 0b01 	add.w	fp, r6, #1
 801493c:	f108 0401 	add.w	r4, r8, #1
 8014940:	eb04 2418 	add.w	r4, r4, r8, lsr #8
 8014944:	eb0b 2b16 	add.w	fp, fp, r6, lsr #8
 8014948:	f407 4778 	and.w	r7, r7, #63488	@ 0xf800
 801494c:	f3c4 24c4 	ubfx	r4, r4, #11, #5
 8014950:	ea4f 1b5b 	mov.w	fp, fp, lsr #5
 8014954:	4327      	orrs	r7, r4
 8014956:	f40b 6bfc 	and.w	fp, fp, #2016	@ 0x7e0
 801495a:	ea47 070b 	orr.w	r7, r7, fp
 801495e:	f820 700a 	strh.w	r7, [r0, sl]
 8014962:	9813      	ldr	r0, [sp, #76]	@ 0x4c
 8014964:	4401      	add	r1, r0
 8014966:	9814      	ldr	r0, [sp, #80]	@ 0x50
 8014968:	f10e 3eff 	add.w	lr, lr, #4294967295
 801496c:	4402      	add	r2, r0
 801496e:	e759      	b.n	8014824 <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB888_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x156>
 8014970:	b007      	add	sp, #28
 8014972:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
	...

08014978 <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB888_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff>:
 8014978:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 801497c:	b085      	sub	sp, #20
 801497e:	eef7 6a00 	vmov.f32	s13, #112	@ 0x3f800000  1.0
 8014982:	9e13      	ldr	r6, [sp, #76]	@ 0x4c
 8014984:	9203      	str	r2, [sp, #12]
 8014986:	e9dd 2414 	ldrd	r2, r4, [sp, #80]	@ 0x50
 801498a:	6870      	ldr	r0, [r6, #4]
 801498c:	9d16      	ldr	r5, [sp, #88]	@ 0x58
 801498e:	f8dd c044 	ldr.w	ip, [sp, #68]	@ 0x44
 8014992:	686f      	ldr	r7, [r5, #4]
 8014994:	9101      	str	r1, [sp, #4]
 8014996:	fb00 2404 	mla	r4, r0, r4, r2
 801499a:	6832      	ldr	r2, [r6, #0]
 801499c:	eb02 0444 	add.w	r4, r2, r4, lsl #1
 80149a0:	682a      	ldr	r2, [r5, #0]
 80149a2:	9202      	str	r2, [sp, #8]
 80149a4:	3704      	adds	r7, #4
 80149a6:	9a01      	ldr	r2, [sp, #4]
 80149a8:	2a00      	cmp	r2, #0
 80149aa:	dc03      	bgt.n	80149b4 <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB888_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3c>
 80149ac:	9a03      	ldr	r2, [sp, #12]
 80149ae:	2a00      	cmp	r2, #0
 80149b0:	f340 80cc 	ble.w	8014b4c <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB888_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1d4>
 80149b4:	9a0f      	ldr	r2, [sp, #60]	@ 0x3c
 80149b6:	f9b5 9008 	ldrsh.w	r9, [r5, #8]
 80149ba:	f9b5 800c 	ldrsh.w	r8, [r5, #12]
 80149be:	f502 4000 	add.w	r0, r2, #32768	@ 0x8000
 80149c2:	9a10      	ldr	r2, [sp, #64]	@ 0x40
 80149c4:	f502 4200 	add.w	r2, r2, #32768	@ 0x8000
 80149c8:	2b00      	cmp	r3, #0
 80149ca:	dd0d      	ble.n	80149e8 <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB888_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x70>
 80149cc:	1406      	asrs	r6, r0, #16
 80149ce:	d405      	bmi.n	80149dc <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB888_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x64>
 80149d0:	454e      	cmp	r6, r9
 80149d2:	da03      	bge.n	80149dc <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB888_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x64>
 80149d4:	1416      	asrs	r6, r2, #16
 80149d6:	d401      	bmi.n	80149dc <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB888_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x64>
 80149d8:	4546      	cmp	r6, r8
 80149da:	db06      	blt.n	80149ea <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB888_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x72>
 80149dc:	9e12      	ldr	r6, [sp, #72]	@ 0x48
 80149de:	4460      	add	r0, ip
 80149e0:	4432      	add	r2, r6
 80149e2:	3b01      	subs	r3, #1
 80149e4:	3402      	adds	r4, #2
 80149e6:	e7ef      	b.n	80149c8 <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB888_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x50>
 80149e8:	d00f      	beq.n	8014a0a <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB888_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x92>
 80149ea:	1e5e      	subs	r6, r3, #1
 80149ec:	fb0c 0e06 	mla	lr, ip, r6, r0
 80149f0:	ea5f 4e2e 	movs.w	lr, lr, asr #16
 80149f4:	d543      	bpl.n	8014a7e <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB888_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x106>
 80149f6:	4698      	mov	r8, r3
 80149f8:	eb04 0a43 	add.w	sl, r4, r3, lsl #1
 80149fc:	f1b8 0f00 	cmp.w	r8, #0
 8014a00:	dc71      	bgt.n	8014ae6 <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB888_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x16e>
 8014a02:	ea23 73e3 	bic.w	r3, r3, r3, asr #31
 8014a06:	eb04 0443 	add.w	r4, r4, r3, lsl #1
 8014a0a:	9b01      	ldr	r3, [sp, #4]
 8014a0c:	2b00      	cmp	r3, #0
 8014a0e:	f340 809d 	ble.w	8014b4c <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB888_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1d4>
 8014a12:	ee30 0a04 	vadd.f32	s0, s0, s8
 8014a16:	ee70 0aa4 	vadd.f32	s1, s1, s9
 8014a1a:	eec6 7a80 	vdiv.f32	s15, s13, s0
 8014a1e:	9b0e      	ldr	r3, [sp, #56]	@ 0x38
 8014a20:	ee31 1a05 	vadd.f32	s2, s2, s10
 8014a24:	ee20 7aa7 	vmul.f32	s14, s1, s15
 8014a28:	eeb0 6a62 	vmov.f32	s12, s5
 8014a2c:	ee61 7a27 	vmul.f32	s15, s2, s15
 8014a30:	eebe 6ac8 	vcvt.s32.f32	s12, s12, #16
 8014a34:	ee77 2a62 	vsub.f32	s5, s14, s5
 8014a38:	ed8d 6a0f 	vstr	s12, [sp, #60]	@ 0x3c
 8014a3c:	eefe 2ac8 	vcvt.s32.f32	s5, s5, #16
 8014a40:	eeb0 6a43 	vmov.f32	s12, s6
 8014a44:	ee37 3ac3 	vsub.f32	s6, s15, s6
 8014a48:	ee12 2a90 	vmov	r2, s5
 8014a4c:	eebe 3ac8 	vcvt.s32.f32	s6, s6, #16
 8014a50:	fb92 fcf3 	sdiv	ip, r2, r3
 8014a54:	ee13 2a10 	vmov	r2, s6
 8014a58:	fb92 f3f3 	sdiv	r3, r2, r3
 8014a5c:	9312      	str	r3, [sp, #72]	@ 0x48
 8014a5e:	9b01      	ldr	r3, [sp, #4]
 8014a60:	9a03      	ldr	r2, [sp, #12]
 8014a62:	eebe 6ac8 	vcvt.s32.f32	s12, s12, #16
 8014a66:	3b01      	subs	r3, #1
 8014a68:	9301      	str	r3, [sp, #4]
 8014a6a:	ed8d 6a10 	vstr	s12, [sp, #64]	@ 0x40
 8014a6e:	9b0e      	ldr	r3, [sp, #56]	@ 0x38
 8014a70:	eeb0 3a67 	vmov.f32	s6, s15
 8014a74:	bf08      	it	eq
 8014a76:	4613      	moveq	r3, r2
 8014a78:	eef0 2a47 	vmov.f32	s5, s14
 8014a7c:	e793      	b.n	80149a6 <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB888_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2e>
 8014a7e:	45ce      	cmp	lr, r9
 8014a80:	dab9      	bge.n	80149f6 <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB888_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x7e>
 8014a82:	9912      	ldr	r1, [sp, #72]	@ 0x48
 8014a84:	fb01 2606 	mla	r6, r1, r6, r2
 8014a88:	1436      	asrs	r6, r6, #16
 8014a8a:	d4b4      	bmi.n	80149f6 <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB888_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x7e>
 8014a8c:	4546      	cmp	r6, r8
 8014a8e:	dab2      	bge.n	80149f6 <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB888_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x7e>
 8014a90:	4698      	mov	r8, r3
 8014a92:	46a2      	mov	sl, r4
 8014a94:	f1b8 0f00 	cmp.w	r8, #0
 8014a98:	ddb3      	ble.n	8014a02 <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB888_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x8a>
 8014a9a:	f9b5 9008 	ldrsh.w	r9, [r5, #8]
 8014a9e:	9902      	ldr	r1, [sp, #8]
 8014aa0:	1416      	asrs	r6, r2, #16
 8014aa2:	fb09 1606 	mla	r6, r9, r6, r1
 8014aa6:	ea4f 4e20 	mov.w	lr, r0, asr #16
 8014aaa:	492a      	ldr	r1, [pc, #168]	@ (8014b54 <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB888_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1dc>)
 8014aac:	f816 e00e 	ldrb.w	lr, [r6, lr]
 8014ab0:	eb0e 0e4e 	add.w	lr, lr, lr, lsl #1
 8014ab4:	eb07 0b0e 	add.w	fp, r7, lr
 8014ab8:	4460      	add	r0, ip
 8014aba:	f89b 6001 	ldrb.w	r6, [fp, #1]
 8014abe:	f89b 9002 	ldrb.w	r9, [fp, #2]
 8014ac2:	00f6      	lsls	r6, r6, #3
 8014ac4:	ea01 2909 	and.w	r9, r1, r9, lsl #8
 8014ac8:	f406 66fc 	and.w	r6, r6, #2016	@ 0x7e0
 8014acc:	ea49 0606 	orr.w	r6, r9, r6
 8014ad0:	f817 900e 	ldrb.w	r9, [r7, lr]
 8014ad4:	9912      	ldr	r1, [sp, #72]	@ 0x48
 8014ad6:	ea46 06d9 	orr.w	r6, r6, r9, lsr #3
 8014ada:	f82a 6b02 	strh.w	r6, [sl], #2
 8014ade:	440a      	add	r2, r1
 8014ae0:	f108 38ff 	add.w	r8, r8, #4294967295
 8014ae4:	e7d6      	b.n	8014a94 <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB888_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x11c>
 8014ae6:	ea5f 4920 	movs.w	r9, r0, asr #16
 8014aea:	d429      	bmi.n	8014b40 <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB888_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1c8>
 8014aec:	68ae      	ldr	r6, [r5, #8]
 8014aee:	454e      	cmp	r6, r9
 8014af0:	dd26      	ble.n	8014b40 <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB888_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1c8>
 8014af2:	ea5f 4b22 	movs.w	fp, r2, asr #16
 8014af6:	d423      	bmi.n	8014b40 <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB888_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1c8>
 8014af8:	68e9      	ldr	r1, [r5, #12]
 8014afa:	4559      	cmp	r1, fp
 8014afc:	dd20      	ble.n	8014b40 <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB888_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1c8>
 8014afe:	9902      	ldr	r1, [sp, #8]
 8014b00:	fa0f fe86 	sxth.w	lr, r6
 8014b04:	fb0b 1e0e 	mla	lr, fp, lr, r1
 8014b08:	f06f 0101 	mvn.w	r1, #1
 8014b0c:	f81e e009 	ldrb.w	lr, [lr, r9]
 8014b10:	eb0e 0e4e 	add.w	lr, lr, lr, lsl #1
 8014b14:	eb07 060e 	add.w	r6, r7, lr
 8014b18:	fb01 f908 	mul.w	r9, r1, r8
 8014b1c:	f896 b002 	ldrb.w	fp, [r6, #2]
 8014b20:	7876      	ldrb	r6, [r6, #1]
 8014b22:	f2a1 71fe 	subw	r1, r1, #2046	@ 0x7fe
 8014b26:	00f6      	lsls	r6, r6, #3
 8014b28:	ea01 2b0b 	and.w	fp, r1, fp, lsl #8
 8014b2c:	f406 66fc 	and.w	r6, r6, #2016	@ 0x7e0
 8014b30:	ea4b 0606 	orr.w	r6, fp, r6
 8014b34:	f817 b00e 	ldrb.w	fp, [r7, lr]
 8014b38:	ea46 06db 	orr.w	r6, r6, fp, lsr #3
 8014b3c:	f82a 6009 	strh.w	r6, [sl, r9]
 8014b40:	9912      	ldr	r1, [sp, #72]	@ 0x48
 8014b42:	4460      	add	r0, ip
 8014b44:	440a      	add	r2, r1
 8014b46:	f108 38ff 	add.w	r8, r8, #4294967295
 8014b4a:	e757      	b.n	80149fc <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB888_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x84>
 8014b4c:	b005      	add	sp, #20
 8014b4e:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 8014b52:	bf00      	nop
 8014b54:	fffff800 	.word	0xfffff800

08014b58 <_ZN8touchgfx8LCD16bpp54TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff>:
 8014b58:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8014b5c:	b087      	sub	sp, #28
 8014b5e:	468b      	mov	fp, r1
 8014b60:	9815      	ldr	r0, [sp, #84]	@ 0x54
 8014b62:	9204      	str	r2, [sp, #16]
 8014b64:	f89d 2064 	ldrb.w	r2, [sp, #100]	@ 0x64
 8014b68:	9205      	str	r2, [sp, #20]
 8014b6a:	e9dd 2416 	ldrd	r2, r4, [sp, #88]	@ 0x58
 8014b6e:	6841      	ldr	r1, [r0, #4]
 8014b70:	f8dd c060 	ldr.w	ip, [sp, #96]	@ 0x60
 8014b74:	fb01 2404 	mla	r4, r1, r4, r2
 8014b78:	6802      	ldr	r2, [r0, #0]
 8014b7a:	eb02 0444 	add.w	r4, r2, r4, lsl #1
 8014b7e:	f8dc 2000 	ldr.w	r2, [ip]
 8014b82:	9201      	str	r2, [sp, #4]
 8014b84:	f8dc 2004 	ldr.w	r2, [ip, #4]
 8014b88:	3204      	adds	r2, #4
 8014b8a:	9202      	str	r2, [sp, #8]
 8014b8c:	eef7 6a00 	vmov.f32	s13, #112	@ 0x3f800000  1.0
 8014b90:	f1bb 0f00 	cmp.w	fp, #0
 8014b94:	dc03      	bgt.n	8014b9e <_ZN8touchgfx8LCD16bpp54TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x46>
 8014b96:	9a04      	ldr	r2, [sp, #16]
 8014b98:	2a00      	cmp	r2, #0
 8014b9a:	f340 8138 	ble.w	8014e0e <_ZN8touchgfx8LCD16bpp54TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2b6>
 8014b9e:	9a11      	ldr	r2, [sp, #68]	@ 0x44
 8014ba0:	f9bc 7008 	ldrsh.w	r7, [ip, #8]
 8014ba4:	f9bc 600c 	ldrsh.w	r6, [ip, #12]
 8014ba8:	f502 4000 	add.w	r0, r2, #32768	@ 0x8000
 8014bac:	9a12      	ldr	r2, [sp, #72]	@ 0x48
 8014bae:	f502 4100 	add.w	r1, r2, #32768	@ 0x8000
 8014bb2:	2b00      	cmp	r3, #0
 8014bb4:	dd0e      	ble.n	8014bd4 <_ZN8touchgfx8LCD16bpp54TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x7c>
 8014bb6:	1402      	asrs	r2, r0, #16
 8014bb8:	d405      	bmi.n	8014bc6 <_ZN8touchgfx8LCD16bpp54TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x6e>
 8014bba:	42ba      	cmp	r2, r7
 8014bbc:	da03      	bge.n	8014bc6 <_ZN8touchgfx8LCD16bpp54TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x6e>
 8014bbe:	140a      	asrs	r2, r1, #16
 8014bc0:	d401      	bmi.n	8014bc6 <_ZN8touchgfx8LCD16bpp54TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x6e>
 8014bc2:	42b2      	cmp	r2, r6
 8014bc4:	db07      	blt.n	8014bd6 <_ZN8touchgfx8LCD16bpp54TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x7e>
 8014bc6:	9a13      	ldr	r2, [sp, #76]	@ 0x4c
 8014bc8:	4410      	add	r0, r2
 8014bca:	9a14      	ldr	r2, [sp, #80]	@ 0x50
 8014bcc:	3b01      	subs	r3, #1
 8014bce:	4411      	add	r1, r2
 8014bd0:	3402      	adds	r4, #2
 8014bd2:	e7ee      	b.n	8014bb2 <_ZN8touchgfx8LCD16bpp54TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x5a>
 8014bd4:	d019      	beq.n	8014c0a <_ZN8touchgfx8LCD16bpp54TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xb2>
 8014bd6:	9d13      	ldr	r5, [sp, #76]	@ 0x4c
 8014bd8:	1e5a      	subs	r2, r3, #1
 8014bda:	fb05 0502 	mla	r5, r5, r2, r0
 8014bde:	142d      	asrs	r5, r5, #16
 8014be0:	d409      	bmi.n	8014bf6 <_ZN8touchgfx8LCD16bpp54TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x9e>
 8014be2:	42bd      	cmp	r5, r7
 8014be4:	da07      	bge.n	8014bf6 <_ZN8touchgfx8LCD16bpp54TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x9e>
 8014be6:	9d14      	ldr	r5, [sp, #80]	@ 0x50
 8014be8:	fb05 1202 	mla	r2, r5, r2, r1
 8014bec:	1412      	asrs	r2, r2, #16
 8014bee:	d402      	bmi.n	8014bf6 <_ZN8touchgfx8LCD16bpp54TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x9e>
 8014bf0:	42b2      	cmp	r2, r6
 8014bf2:	f2c0 80ac 	blt.w	8014d4e <_ZN8touchgfx8LCD16bpp54TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1f6>
 8014bf6:	f04f 0e00 	mov.w	lr, #0
 8014bfa:	eb03 020e 	add.w	r2, r3, lr
 8014bfe:	2a00      	cmp	r2, #0
 8014c00:	dc3e      	bgt.n	8014c80 <_ZN8touchgfx8LCD16bpp54TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x128>
 8014c02:	ea23 73e3 	bic.w	r3, r3, r3, asr #31
 8014c06:	eb04 0443 	add.w	r4, r4, r3, lsl #1
 8014c0a:	f1bb 0f00 	cmp.w	fp, #0
 8014c0e:	f340 80fe 	ble.w	8014e0e <_ZN8touchgfx8LCD16bpp54TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2b6>
 8014c12:	ee30 0a04 	vadd.f32	s0, s0, s8
 8014c16:	ee70 0aa4 	vadd.f32	s1, s1, s9
 8014c1a:	eec6 7a80 	vdiv.f32	s15, s13, s0
 8014c1e:	9b10      	ldr	r3, [sp, #64]	@ 0x40
 8014c20:	f1bb 0b01 	subs.w	fp, fp, #1
 8014c24:	ee31 1a05 	vadd.f32	s2, s2, s10
 8014c28:	ee20 7aa7 	vmul.f32	s14, s1, s15
 8014c2c:	eeb0 6a62 	vmov.f32	s12, s5
 8014c30:	ee61 7a27 	vmul.f32	s15, s2, s15
 8014c34:	eebe 6ac8 	vcvt.s32.f32	s12, s12, #16
 8014c38:	ee77 2a62 	vsub.f32	s5, s14, s5
 8014c3c:	ed8d 6a11 	vstr	s12, [sp, #68]	@ 0x44
 8014c40:	eefe 2ac8 	vcvt.s32.f32	s5, s5, #16
 8014c44:	eeb0 6a43 	vmov.f32	s12, s6
 8014c48:	ee37 3ac3 	vsub.f32	s6, s15, s6
 8014c4c:	ee12 2a90 	vmov	r2, s5
 8014c50:	eebe 3ac8 	vcvt.s32.f32	s6, s6, #16
 8014c54:	fb92 f3f3 	sdiv	r3, r2, r3
 8014c58:	ee13 2a10 	vmov	r2, s6
 8014c5c:	eebe 6ac8 	vcvt.s32.f32	s12, s12, #16
 8014c60:	9313      	str	r3, [sp, #76]	@ 0x4c
 8014c62:	9b10      	ldr	r3, [sp, #64]	@ 0x40
 8014c64:	fb92 f3f3 	sdiv	r3, r2, r3
 8014c68:	9a04      	ldr	r2, [sp, #16]
 8014c6a:	9314      	str	r3, [sp, #80]	@ 0x50
 8014c6c:	ed8d 6a12 	vstr	s12, [sp, #72]	@ 0x48
 8014c70:	9b10      	ldr	r3, [sp, #64]	@ 0x40
 8014c72:	eeb0 3a67 	vmov.f32	s6, s15
 8014c76:	bf08      	it	eq
 8014c78:	4613      	moveq	r3, r2
 8014c7a:	eef0 2a47 	vmov.f32	s5, s14
 8014c7e:	e787      	b.n	8014b90 <_ZN8touchgfx8LCD16bpp54TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x38>
 8014c80:	1406      	asrs	r6, r0, #16
 8014c82:	d45d      	bmi.n	8014d40 <_ZN8touchgfx8LCD16bpp54TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1e8>
 8014c84:	f8dc 5008 	ldr.w	r5, [ip, #8]
 8014c88:	42b5      	cmp	r5, r6
 8014c8a:	dd59      	ble.n	8014d40 <_ZN8touchgfx8LCD16bpp54TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1e8>
 8014c8c:	140f      	asrs	r7, r1, #16
 8014c8e:	d457      	bmi.n	8014d40 <_ZN8touchgfx8LCD16bpp54TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1e8>
 8014c90:	f8dc 200c 	ldr.w	r2, [ip, #12]
 8014c94:	42ba      	cmp	r2, r7
 8014c96:	dd53      	ble.n	8014d40 <_ZN8touchgfx8LCD16bpp54TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1e8>
 8014c98:	9a01      	ldr	r2, [sp, #4]
 8014c9a:	b22d      	sxth	r5, r5
 8014c9c:	fb07 2505 	mla	r5, r7, r5, r2
 8014ca0:	5daa      	ldrb	r2, [r5, r6]
 8014ca2:	9d02      	ldr	r5, [sp, #8]
 8014ca4:	f855 5022 	ldr.w	r5, [r5, r2, lsl #2]
 8014ca8:	0e2e      	lsrs	r6, r5, #24
 8014caa:	d049      	beq.n	8014d40 <_ZN8touchgfx8LCD16bpp54TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1e8>
 8014cac:	f06f 0201 	mvn.w	r2, #1
 8014cb0:	fb02 f20e 	mul.w	r2, r2, lr
 8014cb4:	9203      	str	r2, [sp, #12]
 8014cb6:	f834 8002 	ldrh.w	r8, [r4, r2]
 8014cba:	9a05      	ldr	r2, [sp, #20]
 8014cbc:	4356      	muls	r6, r2
 8014cbe:	1c72      	adds	r2, r6, #1
 8014cc0:	eb02 2226 	add.w	r2, r2, r6, asr #8
 8014cc4:	1212      	asrs	r2, r2, #8
 8014cc6:	fa1f f982 	uxth.w	r9, r2
 8014cca:	ea4f 2728 	mov.w	r7, r8, asr #8
 8014cce:	f3c5 4607 	ubfx	r6, r5, #16, #8
 8014cd2:	43d2      	mvns	r2, r2
 8014cd4:	b2d2      	uxtb	r2, r2
 8014cd6:	fb16 f609 	smulbb	r6, r6, r9
 8014cda:	f007 07f8 	and.w	r7, r7, #248	@ 0xf8
 8014cde:	fb07 6702 	mla	r7, r7, r2, r6
 8014ce2:	f3c5 2a07 	ubfx	sl, r5, #8, #8
 8014ce6:	ea4f 06e8 	mov.w	r6, r8, asr #3
 8014cea:	b2ed      	uxtb	r5, r5
 8014cec:	ea4f 08c8 	mov.w	r8, r8, lsl #3
 8014cf0:	fa5f f888 	uxtb.w	r8, r8
 8014cf4:	fb15 f509 	smulbb	r5, r5, r9
 8014cf8:	fb08 5502 	mla	r5, r8, r2, r5
 8014cfc:	b2bf      	uxth	r7, r7
 8014cfe:	fb1a fa09 	smulbb	sl, sl, r9
 8014d02:	b2ad      	uxth	r5, r5
 8014d04:	f006 06fc 	and.w	r6, r6, #252	@ 0xfc
 8014d08:	fb06 a602 	mla	r6, r6, r2, sl
 8014d0c:	1c7a      	adds	r2, r7, #1
 8014d0e:	f105 0a01 	add.w	sl, r5, #1
 8014d12:	eb02 2717 	add.w	r7, r2, r7, lsr #8
 8014d16:	eb0a 2a15 	add.w	sl, sl, r5, lsr #8
 8014d1a:	b2b6      	uxth	r6, r6
 8014d1c:	f3ca 2ac4 	ubfx	sl, sl, #11, #5
 8014d20:	f407 4778 	and.w	r7, r7, #63488	@ 0xf800
 8014d24:	ea4a 0707 	orr.w	r7, sl, r7
 8014d28:	f106 0a01 	add.w	sl, r6, #1
 8014d2c:	eb0a 2a16 	add.w	sl, sl, r6, lsr #8
 8014d30:	ea4f 1a5a 	mov.w	sl, sl, lsr #5
 8014d34:	f40a 6afc 	and.w	sl, sl, #2016	@ 0x7e0
 8014d38:	9a03      	ldr	r2, [sp, #12]
 8014d3a:	ea47 070a 	orr.w	r7, r7, sl
 8014d3e:	52a7      	strh	r7, [r4, r2]
 8014d40:	9a13      	ldr	r2, [sp, #76]	@ 0x4c
 8014d42:	4410      	add	r0, r2
 8014d44:	9a14      	ldr	r2, [sp, #80]	@ 0x50
 8014d46:	f10e 3eff 	add.w	lr, lr, #4294967295
 8014d4a:	4411      	add	r1, r2
 8014d4c:	e755      	b.n	8014bfa <_ZN8touchgfx8LCD16bpp54TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xa2>
 8014d4e:	f04f 0800 	mov.w	r8, #0
 8014d52:	eba3 0208 	sub.w	r2, r3, r8
 8014d56:	2a00      	cmp	r2, #0
 8014d58:	f77f af53 	ble.w	8014c02 <_ZN8touchgfx8LCD16bpp54TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xaa>
 8014d5c:	f9bc 6008 	ldrsh.w	r6, [ip, #8]
 8014d60:	9f01      	ldr	r7, [sp, #4]
 8014d62:	140a      	asrs	r2, r1, #16
 8014d64:	1405      	asrs	r5, r0, #16
 8014d66:	fb06 7202 	mla	r2, r6, r2, r7
 8014d6a:	5d52      	ldrb	r2, [r2, r5]
 8014d6c:	9d02      	ldr	r5, [sp, #8]
 8014d6e:	f855 5022 	ldr.w	r5, [r5, r2, lsl #2]
 8014d72:	0e2e      	lsrs	r6, r5, #24
 8014d74:	d044      	beq.n	8014e00 <_ZN8touchgfx8LCD16bpp54TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2a8>
 8014d76:	9a05      	ldr	r2, [sp, #20]
 8014d78:	f834 e018 	ldrh.w	lr, [r4, r8, lsl #1]
 8014d7c:	4356      	muls	r6, r2
 8014d7e:	1c72      	adds	r2, r6, #1
 8014d80:	eb02 2226 	add.w	r2, r2, r6, asr #8
 8014d84:	1212      	asrs	r2, r2, #8
 8014d86:	fa1f f982 	uxth.w	r9, r2
 8014d8a:	ea4f 272e 	mov.w	r7, lr, asr #8
 8014d8e:	f3c5 4607 	ubfx	r6, r5, #16, #8
 8014d92:	43d2      	mvns	r2, r2
 8014d94:	b2d2      	uxtb	r2, r2
 8014d96:	fb16 f609 	smulbb	r6, r6, r9
 8014d9a:	f007 07f8 	and.w	r7, r7, #248	@ 0xf8
 8014d9e:	fb07 6702 	mla	r7, r7, r2, r6
 8014da2:	f3c5 2a07 	ubfx	sl, r5, #8, #8
 8014da6:	ea4f 06ee 	mov.w	r6, lr, asr #3
 8014daa:	b2ed      	uxtb	r5, r5
 8014dac:	ea4f 0ece 	mov.w	lr, lr, lsl #3
 8014db0:	fa5f fe8e 	uxtb.w	lr, lr
 8014db4:	fb15 f509 	smulbb	r5, r5, r9
 8014db8:	fb0e 5502 	mla	r5, lr, r2, r5
 8014dbc:	b2bf      	uxth	r7, r7
 8014dbe:	fb1a fa09 	smulbb	sl, sl, r9
 8014dc2:	b2ad      	uxth	r5, r5
 8014dc4:	f006 06fc 	and.w	r6, r6, #252	@ 0xfc
 8014dc8:	fb06 a602 	mla	r6, r6, r2, sl
 8014dcc:	1c7a      	adds	r2, r7, #1
 8014dce:	f105 0a01 	add.w	sl, r5, #1
 8014dd2:	eb02 2717 	add.w	r7, r2, r7, lsr #8
 8014dd6:	eb0a 2a15 	add.w	sl, sl, r5, lsr #8
 8014dda:	b2b6      	uxth	r6, r6
 8014ddc:	f3ca 2ac4 	ubfx	sl, sl, #11, #5
 8014de0:	f407 4778 	and.w	r7, r7, #63488	@ 0xf800
 8014de4:	ea4a 0707 	orr.w	r7, sl, r7
 8014de8:	f106 0a01 	add.w	sl, r6, #1
 8014dec:	eb0a 2a16 	add.w	sl, sl, r6, lsr #8
 8014df0:	ea4f 1a5a 	mov.w	sl, sl, lsr #5
 8014df4:	f40a 6afc 	and.w	sl, sl, #2016	@ 0x7e0
 8014df8:	ea47 070a 	orr.w	r7, r7, sl
 8014dfc:	f824 7018 	strh.w	r7, [r4, r8, lsl #1]
 8014e00:	9a13      	ldr	r2, [sp, #76]	@ 0x4c
 8014e02:	4410      	add	r0, r2
 8014e04:	9a14      	ldr	r2, [sp, #80]	@ 0x50
 8014e06:	f108 0801 	add.w	r8, r8, #1
 8014e0a:	4411      	add	r1, r2
 8014e0c:	e7a1      	b.n	8014d52 <_ZN8touchgfx8LCD16bpp54TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1fa>
 8014e0e:	b007      	add	sp, #28
 8014e10:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}

08014e14 <_ZN8touchgfx8LCD16bpp56TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff>:
 8014e14:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8014e18:	b085      	sub	sp, #20
 8014e1a:	468b      	mov	fp, r1
 8014e1c:	9813      	ldr	r0, [sp, #76]	@ 0x4c
 8014e1e:	9203      	str	r2, [sp, #12]
 8014e20:	e9dd 2414 	ldrd	r2, r4, [sp, #80]	@ 0x50
 8014e24:	6841      	ldr	r1, [r0, #4]
 8014e26:	f8dd e058 	ldr.w	lr, [sp, #88]	@ 0x58
 8014e2a:	fb01 2404 	mla	r4, r1, r4, r2
 8014e2e:	6802      	ldr	r2, [r0, #0]
 8014e30:	eb02 0444 	add.w	r4, r2, r4, lsl #1
 8014e34:	f8de 2000 	ldr.w	r2, [lr]
 8014e38:	9200      	str	r2, [sp, #0]
 8014e3a:	f8de 2004 	ldr.w	r2, [lr, #4]
 8014e3e:	3204      	adds	r2, #4
 8014e40:	9201      	str	r2, [sp, #4]
 8014e42:	eef7 6a00 	vmov.f32	s13, #112	@ 0x3f800000  1.0
 8014e46:	f1bb 0f00 	cmp.w	fp, #0
 8014e4a:	dc03      	bgt.n	8014e54 <_ZN8touchgfx8LCD16bpp56TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x40>
 8014e4c:	9a03      	ldr	r2, [sp, #12]
 8014e4e:	2a00      	cmp	r2, #0
 8014e50:	f340 8153 	ble.w	80150fa <_ZN8touchgfx8LCD16bpp56TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2e6>
 8014e54:	9a0f      	ldr	r2, [sp, #60]	@ 0x3c
 8014e56:	f9be 7008 	ldrsh.w	r7, [lr, #8]
 8014e5a:	f9be 600c 	ldrsh.w	r6, [lr, #12]
 8014e5e:	f502 4100 	add.w	r1, r2, #32768	@ 0x8000
 8014e62:	9a10      	ldr	r2, [sp, #64]	@ 0x40
 8014e64:	f502 4200 	add.w	r2, r2, #32768	@ 0x8000
 8014e68:	2b00      	cmp	r3, #0
 8014e6a:	dd0e      	ble.n	8014e8a <_ZN8touchgfx8LCD16bpp56TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x76>
 8014e6c:	1408      	asrs	r0, r1, #16
 8014e6e:	d405      	bmi.n	8014e7c <_ZN8touchgfx8LCD16bpp56TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x68>
 8014e70:	42b8      	cmp	r0, r7
 8014e72:	da03      	bge.n	8014e7c <_ZN8touchgfx8LCD16bpp56TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x68>
 8014e74:	1410      	asrs	r0, r2, #16
 8014e76:	d401      	bmi.n	8014e7c <_ZN8touchgfx8LCD16bpp56TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x68>
 8014e78:	42b0      	cmp	r0, r6
 8014e7a:	db07      	blt.n	8014e8c <_ZN8touchgfx8LCD16bpp56TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x78>
 8014e7c:	9811      	ldr	r0, [sp, #68]	@ 0x44
 8014e7e:	4401      	add	r1, r0
 8014e80:	9812      	ldr	r0, [sp, #72]	@ 0x48
 8014e82:	3b01      	subs	r3, #1
 8014e84:	4402      	add	r2, r0
 8014e86:	3402      	adds	r4, #2
 8014e88:	e7ee      	b.n	8014e68 <_ZN8touchgfx8LCD16bpp56TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x54>
 8014e8a:	d017      	beq.n	8014ebc <_ZN8touchgfx8LCD16bpp56TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xa8>
 8014e8c:	9d11      	ldr	r5, [sp, #68]	@ 0x44
 8014e8e:	1e58      	subs	r0, r3, #1
 8014e90:	fb05 1500 	mla	r5, r5, r0, r1
 8014e94:	142d      	asrs	r5, r5, #16
 8014e96:	d409      	bmi.n	8014eac <_ZN8touchgfx8LCD16bpp56TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x98>
 8014e98:	42bd      	cmp	r5, r7
 8014e9a:	da07      	bge.n	8014eac <_ZN8touchgfx8LCD16bpp56TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x98>
 8014e9c:	9d12      	ldr	r5, [sp, #72]	@ 0x48
 8014e9e:	fb05 2000 	mla	r0, r5, r0, r2
 8014ea2:	1400      	asrs	r0, r0, #16
 8014ea4:	d402      	bmi.n	8014eac <_ZN8touchgfx8LCD16bpp56TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x98>
 8014ea6:	42b0      	cmp	r0, r6
 8014ea8:	f2c0 80bc 	blt.w	8015024 <_ZN8touchgfx8LCD16bpp56TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x210>
 8014eac:	2600      	movs	r6, #0
 8014eae:	1998      	adds	r0, r3, r6
 8014eb0:	2800      	cmp	r0, #0
 8014eb2:	dc3e      	bgt.n	8014f32 <_ZN8touchgfx8LCD16bpp56TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x11e>
 8014eb4:	ea23 73e3 	bic.w	r3, r3, r3, asr #31
 8014eb8:	eb04 0443 	add.w	r4, r4, r3, lsl #1
 8014ebc:	f1bb 0f00 	cmp.w	fp, #0
 8014ec0:	f340 811b 	ble.w	80150fa <_ZN8touchgfx8LCD16bpp56TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2e6>
 8014ec4:	ee30 0a04 	vadd.f32	s0, s0, s8
 8014ec8:	ee70 0aa4 	vadd.f32	s1, s1, s9
 8014ecc:	eec6 7a80 	vdiv.f32	s15, s13, s0
 8014ed0:	9b0e      	ldr	r3, [sp, #56]	@ 0x38
 8014ed2:	f1bb 0b01 	subs.w	fp, fp, #1
 8014ed6:	ee31 1a05 	vadd.f32	s2, s2, s10
 8014eda:	ee20 7aa7 	vmul.f32	s14, s1, s15
 8014ede:	eeb0 6a62 	vmov.f32	s12, s5
 8014ee2:	ee61 7a27 	vmul.f32	s15, s2, s15
 8014ee6:	eebe 6ac8 	vcvt.s32.f32	s12, s12, #16
 8014eea:	ee77 2a62 	vsub.f32	s5, s14, s5
 8014eee:	ed8d 6a0f 	vstr	s12, [sp, #60]	@ 0x3c
 8014ef2:	eefe 2ac8 	vcvt.s32.f32	s5, s5, #16
 8014ef6:	eeb0 6a43 	vmov.f32	s12, s6
 8014efa:	ee37 3ac3 	vsub.f32	s6, s15, s6
 8014efe:	ee12 2a90 	vmov	r2, s5
 8014f02:	eebe 3ac8 	vcvt.s32.f32	s6, s6, #16
 8014f06:	fb92 f3f3 	sdiv	r3, r2, r3
 8014f0a:	ee13 2a10 	vmov	r2, s6
 8014f0e:	eebe 6ac8 	vcvt.s32.f32	s12, s12, #16
 8014f12:	9311      	str	r3, [sp, #68]	@ 0x44
 8014f14:	9b0e      	ldr	r3, [sp, #56]	@ 0x38
 8014f16:	fb92 f3f3 	sdiv	r3, r2, r3
 8014f1a:	9a03      	ldr	r2, [sp, #12]
 8014f1c:	9312      	str	r3, [sp, #72]	@ 0x48
 8014f1e:	ed8d 6a10 	vstr	s12, [sp, #64]	@ 0x40
 8014f22:	9b0e      	ldr	r3, [sp, #56]	@ 0x38
 8014f24:	eeb0 3a67 	vmov.f32	s6, s15
 8014f28:	bf08      	it	eq
 8014f2a:	4613      	moveq	r3, r2
 8014f2c:	eef0 2a47 	vmov.f32	s5, s14
 8014f30:	e789      	b.n	8014e46 <_ZN8touchgfx8LCD16bpp56TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x32>
 8014f32:	140f      	asrs	r7, r1, #16
 8014f34:	d426      	bmi.n	8014f84 <_ZN8touchgfx8LCD16bpp56TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x170>
 8014f36:	f8de 5008 	ldr.w	r5, [lr, #8]
 8014f3a:	42bd      	cmp	r5, r7
 8014f3c:	dd22      	ble.n	8014f84 <_ZN8touchgfx8LCD16bpp56TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x170>
 8014f3e:	ea5f 4c22 	movs.w	ip, r2, asr #16
 8014f42:	d41f      	bmi.n	8014f84 <_ZN8touchgfx8LCD16bpp56TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x170>
 8014f44:	f8de 000c 	ldr.w	r0, [lr, #12]
 8014f48:	4560      	cmp	r0, ip
 8014f4a:	dd1b      	ble.n	8014f84 <_ZN8touchgfx8LCD16bpp56TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x170>
 8014f4c:	9800      	ldr	r0, [sp, #0]
 8014f4e:	b22d      	sxth	r5, r5
 8014f50:	fb0c 0505 	mla	r5, ip, r5, r0
 8014f54:	5de8      	ldrb	r0, [r5, r7]
 8014f56:	9d01      	ldr	r5, [sp, #4]
 8014f58:	f855 0020 	ldr.w	r0, [r5, r0, lsl #2]
 8014f5c:	0e07      	lsrs	r7, r0, #24
 8014f5e:	2fff      	cmp	r7, #255	@ 0xff
 8014f60:	d116      	bne.n	8014f90 <_ZN8touchgfx8LCD16bpp56TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x17c>
 8014f62:	f06f 0501 	mvn.w	r5, #1
 8014f66:	fb05 f706 	mul.w	r7, r5, r6
 8014f6a:	f2a5 75fe 	subw	r5, r5, #2046	@ 0x7fe
 8014f6e:	ea05 2c10 	and.w	ip, r5, r0, lsr #8
 8014f72:	0945      	lsrs	r5, r0, #5
 8014f74:	f405 65fc 	and.w	r5, r5, #2016	@ 0x7e0
 8014f78:	ea4c 0505 	orr.w	r5, ip, r5
 8014f7c:	f3c0 00c4 	ubfx	r0, r0, #3, #5
 8014f80:	4305      	orrs	r5, r0
 8014f82:	53e5      	strh	r5, [r4, r7]
 8014f84:	9811      	ldr	r0, [sp, #68]	@ 0x44
 8014f86:	4401      	add	r1, r0
 8014f88:	9812      	ldr	r0, [sp, #72]	@ 0x48
 8014f8a:	3e01      	subs	r6, #1
 8014f8c:	4402      	add	r2, r0
 8014f8e:	e78e      	b.n	8014eae <_ZN8touchgfx8LCD16bpp56TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x9a>
 8014f90:	b2fd      	uxtb	r5, r7
 8014f92:	2f00      	cmp	r7, #0
 8014f94:	d0f6      	beq.n	8014f84 <_ZN8touchgfx8LCD16bpp56TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x170>
 8014f96:	f06f 0701 	mvn.w	r7, #1
 8014f9a:	4377      	muls	r7, r6
 8014f9c:	fa1f f985 	uxth.w	r9, r5
 8014fa0:	f834 8007 	ldrh.w	r8, [r4, r7]
 8014fa4:	9702      	str	r7, [sp, #8]
 8014fa6:	ea4f 2c28 	mov.w	ip, r8, asr #8
 8014faa:	f3c0 4707 	ubfx	r7, r0, #16, #8
 8014fae:	43ed      	mvns	r5, r5
 8014fb0:	b2ed      	uxtb	r5, r5
 8014fb2:	fb17 f709 	smulbb	r7, r7, r9
 8014fb6:	f00c 0cf8 	and.w	ip, ip, #248	@ 0xf8
 8014fba:	fb0c 7c05 	mla	ip, ip, r5, r7
 8014fbe:	f3c0 2a07 	ubfx	sl, r0, #8, #8
 8014fc2:	ea4f 07e8 	mov.w	r7, r8, asr #3
 8014fc6:	b2c0      	uxtb	r0, r0
 8014fc8:	ea4f 08c8 	mov.w	r8, r8, lsl #3
 8014fcc:	fa5f f888 	uxtb.w	r8, r8
 8014fd0:	fb10 f009 	smulbb	r0, r0, r9
 8014fd4:	fb08 0005 	mla	r0, r8, r5, r0
 8014fd8:	b280      	uxth	r0, r0
 8014fda:	fa1f fc8c 	uxth.w	ip, ip
 8014fde:	fb1a fa09 	smulbb	sl, sl, r9
 8014fe2:	f007 07fc 	and.w	r7, r7, #252	@ 0xfc
 8014fe6:	fb07 a705 	mla	r7, r7, r5, sl
 8014fea:	f100 0a01 	add.w	sl, r0, #1
 8014fee:	f10c 0501 	add.w	r5, ip, #1
 8014ff2:	eb0a 2a10 	add.w	sl, sl, r0, lsr #8
 8014ff6:	eb05 2c1c 	add.w	ip, r5, ip, lsr #8
 8014ffa:	b2bf      	uxth	r7, r7
 8014ffc:	f3ca 2ac4 	ubfx	sl, sl, #11, #5
 8015000:	f40c 4c78 	and.w	ip, ip, #63488	@ 0xf800
 8015004:	ea4a 0c0c 	orr.w	ip, sl, ip
 8015008:	f107 0a01 	add.w	sl, r7, #1
 801500c:	eb0a 2a17 	add.w	sl, sl, r7, lsr #8
 8015010:	ea4f 1a5a 	mov.w	sl, sl, lsr #5
 8015014:	f40a 6afc 	and.w	sl, sl, #2016	@ 0x7e0
 8015018:	9802      	ldr	r0, [sp, #8]
 801501a:	ea4c 0c0a 	orr.w	ip, ip, sl
 801501e:	f824 c000 	strh.w	ip, [r4, r0]
 8015022:	e7af      	b.n	8014f84 <_ZN8touchgfx8LCD16bpp56TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x170>
 8015024:	f04f 0800 	mov.w	r8, #0
 8015028:	eba3 0008 	sub.w	r0, r3, r8
 801502c:	2800      	cmp	r0, #0
 801502e:	f77f af41 	ble.w	8014eb4 <_ZN8touchgfx8LCD16bpp56TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xa0>
 8015032:	f9be 6008 	ldrsh.w	r6, [lr, #8]
 8015036:	9f00      	ldr	r7, [sp, #0]
 8015038:	1410      	asrs	r0, r2, #16
 801503a:	140d      	asrs	r5, r1, #16
 801503c:	fb06 7000 	mla	r0, r6, r0, r7
 8015040:	5d40      	ldrb	r0, [r0, r5]
 8015042:	9d01      	ldr	r5, [sp, #4]
 8015044:	f855 5020 	ldr.w	r5, [r5, r0, lsl #2]
 8015048:	0e2e      	lsrs	r6, r5, #24
 801504a:	2eff      	cmp	r6, #255	@ 0xff
 801504c:	d112      	bne.n	8015074 <_ZN8touchgfx8LCD16bpp56TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x260>
 801504e:	482c      	ldr	r0, [pc, #176]	@ (8015100 <_ZN8touchgfx8LCD16bpp56TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2ec>)
 8015050:	ea00 2615 	and.w	r6, r0, r5, lsr #8
 8015054:	0968      	lsrs	r0, r5, #5
 8015056:	f400 60fc 	and.w	r0, r0, #2016	@ 0x7e0
 801505a:	4330      	orrs	r0, r6
 801505c:	f3c5 05c4 	ubfx	r5, r5, #3, #5
 8015060:	4328      	orrs	r0, r5
 8015062:	f824 0018 	strh.w	r0, [r4, r8, lsl #1]
 8015066:	9811      	ldr	r0, [sp, #68]	@ 0x44
 8015068:	4401      	add	r1, r0
 801506a:	9812      	ldr	r0, [sp, #72]	@ 0x48
 801506c:	f108 0801 	add.w	r8, r8, #1
 8015070:	4402      	add	r2, r0
 8015072:	e7d9      	b.n	8015028 <_ZN8touchgfx8LCD16bpp56TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x214>
 8015074:	b2f0      	uxtb	r0, r6
 8015076:	2e00      	cmp	r6, #0
 8015078:	d0f5      	beq.n	8015066 <_ZN8touchgfx8LCD16bpp56TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x252>
 801507a:	f834 c018 	ldrh.w	ip, [r4, r8, lsl #1]
 801507e:	fa1f f980 	uxth.w	r9, r0
 8015082:	ea4f 272c 	mov.w	r7, ip, asr #8
 8015086:	f3c5 4607 	ubfx	r6, r5, #16, #8
 801508a:	43c0      	mvns	r0, r0
 801508c:	b2c0      	uxtb	r0, r0
 801508e:	fb16 f609 	smulbb	r6, r6, r9
 8015092:	f007 07f8 	and.w	r7, r7, #248	@ 0xf8
 8015096:	fb07 6700 	mla	r7, r7, r0, r6
 801509a:	f3c5 2a07 	ubfx	sl, r5, #8, #8
 801509e:	ea4f 06ec 	mov.w	r6, ip, asr #3
 80150a2:	b2ed      	uxtb	r5, r5
 80150a4:	ea4f 0ccc 	mov.w	ip, ip, lsl #3
 80150a8:	fa5f fc8c 	uxtb.w	ip, ip
 80150ac:	fb15 f509 	smulbb	r5, r5, r9
 80150b0:	fb0c 5500 	mla	r5, ip, r0, r5
 80150b4:	b2bf      	uxth	r7, r7
 80150b6:	fb1a fa09 	smulbb	sl, sl, r9
 80150ba:	b2ad      	uxth	r5, r5
 80150bc:	f006 06fc 	and.w	r6, r6, #252	@ 0xfc
 80150c0:	fb06 a600 	mla	r6, r6, r0, sl
 80150c4:	1c78      	adds	r0, r7, #1
 80150c6:	f105 0a01 	add.w	sl, r5, #1
 80150ca:	eb00 2717 	add.w	r7, r0, r7, lsr #8
 80150ce:	eb0a 2a15 	add.w	sl, sl, r5, lsr #8
 80150d2:	b2b6      	uxth	r6, r6
 80150d4:	f3ca 2ac4 	ubfx	sl, sl, #11, #5
 80150d8:	f407 4778 	and.w	r7, r7, #63488	@ 0xf800
 80150dc:	ea4a 0707 	orr.w	r7, sl, r7
 80150e0:	f106 0a01 	add.w	sl, r6, #1
 80150e4:	eb0a 2a16 	add.w	sl, sl, r6, lsr #8
 80150e8:	ea4f 1a5a 	mov.w	sl, sl, lsr #5
 80150ec:	f40a 6afc 	and.w	sl, sl, #2016	@ 0x7e0
 80150f0:	ea47 070a 	orr.w	r7, r7, sl
 80150f4:	f824 7018 	strh.w	r7, [r4, r8, lsl #1]
 80150f8:	e7b5      	b.n	8015066 <_ZN8touchgfx8LCD16bpp56TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x252>
 80150fa:	b005      	add	sp, #20
 80150fc:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 8015100:	fffff800 	.word	0xfffff800

08015104 <_ZN8touchgfx8LCD16bpp49TextureMapper_RGB565_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff>:
 8015104:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8015108:	b087      	sub	sp, #28
 801510a:	468b      	mov	fp, r1
 801510c:	9c15      	ldr	r4, [sp, #84]	@ 0x54
 801510e:	9204      	str	r2, [sp, #16]
 8015110:	f89d 2064 	ldrb.w	r2, [sp, #100]	@ 0x64
 8015114:	9205      	str	r2, [sp, #20]
 8015116:	e9dd 2016 	ldrd	r2, r0, [sp, #88]	@ 0x58
 801511a:	6861      	ldr	r1, [r4, #4]
 801511c:	f8dd e060 	ldr.w	lr, [sp, #96]	@ 0x60
 8015120:	fb01 2000 	mla	r0, r1, r0, r2
 8015124:	6822      	ldr	r2, [r4, #0]
 8015126:	eb02 0040 	add.w	r0, r2, r0, lsl #1
 801512a:	f8de 2000 	ldr.w	r2, [lr]
 801512e:	9201      	str	r2, [sp, #4]
 8015130:	f8de 2004 	ldr.w	r2, [lr, #4]
 8015134:	9202      	str	r2, [sp, #8]
 8015136:	eef7 6a00 	vmov.f32	s13, #112	@ 0x3f800000  1.0
 801513a:	f1bb 0f00 	cmp.w	fp, #0
 801513e:	dc03      	bgt.n	8015148 <_ZN8touchgfx8LCD16bpp49TextureMapper_RGB565_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x44>
 8015140:	9a04      	ldr	r2, [sp, #16]
 8015142:	2a00      	cmp	r2, #0
 8015144:	f340 8142 	ble.w	80153cc <_ZN8touchgfx8LCD16bpp49TextureMapper_RGB565_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2c8>
 8015148:	9a11      	ldr	r2, [sp, #68]	@ 0x44
 801514a:	f9be 7008 	ldrsh.w	r7, [lr, #8]
 801514e:	f9be 600c 	ldrsh.w	r6, [lr, #12]
 8015152:	f502 4100 	add.w	r1, r2, #32768	@ 0x8000
 8015156:	9a12      	ldr	r2, [sp, #72]	@ 0x48
 8015158:	f502 4200 	add.w	r2, r2, #32768	@ 0x8000
 801515c:	2b00      	cmp	r3, #0
 801515e:	dd0e      	ble.n	801517e <_ZN8touchgfx8LCD16bpp49TextureMapper_RGB565_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x7a>
 8015160:	140c      	asrs	r4, r1, #16
 8015162:	d405      	bmi.n	8015170 <_ZN8touchgfx8LCD16bpp49TextureMapper_RGB565_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x6c>
 8015164:	42bc      	cmp	r4, r7
 8015166:	da03      	bge.n	8015170 <_ZN8touchgfx8LCD16bpp49TextureMapper_RGB565_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x6c>
 8015168:	1414      	asrs	r4, r2, #16
 801516a:	d401      	bmi.n	8015170 <_ZN8touchgfx8LCD16bpp49TextureMapper_RGB565_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x6c>
 801516c:	42b4      	cmp	r4, r6
 801516e:	db07      	blt.n	8015180 <_ZN8touchgfx8LCD16bpp49TextureMapper_RGB565_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x7c>
 8015170:	9c13      	ldr	r4, [sp, #76]	@ 0x4c
 8015172:	4421      	add	r1, r4
 8015174:	9c14      	ldr	r4, [sp, #80]	@ 0x50
 8015176:	3b01      	subs	r3, #1
 8015178:	4422      	add	r2, r4
 801517a:	3002      	adds	r0, #2
 801517c:	e7ee      	b.n	801515c <_ZN8touchgfx8LCD16bpp49TextureMapper_RGB565_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x58>
 801517e:	d019      	beq.n	80151b4 <_ZN8touchgfx8LCD16bpp49TextureMapper_RGB565_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xb0>
 8015180:	9d13      	ldr	r5, [sp, #76]	@ 0x4c
 8015182:	1e5c      	subs	r4, r3, #1
 8015184:	fb05 1504 	mla	r5, r5, r4, r1
 8015188:	142d      	asrs	r5, r5, #16
 801518a:	d409      	bmi.n	80151a0 <_ZN8touchgfx8LCD16bpp49TextureMapper_RGB565_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x9c>
 801518c:	42bd      	cmp	r5, r7
 801518e:	da07      	bge.n	80151a0 <_ZN8touchgfx8LCD16bpp49TextureMapper_RGB565_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x9c>
 8015190:	9d14      	ldr	r5, [sp, #80]	@ 0x50
 8015192:	fb05 2404 	mla	r4, r5, r4, r2
 8015196:	1424      	asrs	r4, r4, #16
 8015198:	d402      	bmi.n	80151a0 <_ZN8touchgfx8LCD16bpp49TextureMapper_RGB565_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x9c>
 801519a:	42b4      	cmp	r4, r6
 801519c:	f2c0 80b1 	blt.w	8015302 <_ZN8touchgfx8LCD16bpp49TextureMapper_RGB565_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1fe>
 80151a0:	f04f 0800 	mov.w	r8, #0
 80151a4:	eb03 0408 	add.w	r4, r3, r8
 80151a8:	2c00      	cmp	r4, #0
 80151aa:	dc3e      	bgt.n	801522a <_ZN8touchgfx8LCD16bpp49TextureMapper_RGB565_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x126>
 80151ac:	ea23 73e3 	bic.w	r3, r3, r3, asr #31
 80151b0:	eb00 0043 	add.w	r0, r0, r3, lsl #1
 80151b4:	f1bb 0f00 	cmp.w	fp, #0
 80151b8:	f340 8108 	ble.w	80153cc <_ZN8touchgfx8LCD16bpp49TextureMapper_RGB565_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2c8>
 80151bc:	ee30 0a04 	vadd.f32	s0, s0, s8
 80151c0:	ee70 0aa4 	vadd.f32	s1, s1, s9
 80151c4:	eec6 7a80 	vdiv.f32	s15, s13, s0
 80151c8:	9b10      	ldr	r3, [sp, #64]	@ 0x40
 80151ca:	f1bb 0b01 	subs.w	fp, fp, #1
 80151ce:	ee31 1a05 	vadd.f32	s2, s2, s10
 80151d2:	ee20 7aa7 	vmul.f32	s14, s1, s15
 80151d6:	eeb0 6a62 	vmov.f32	s12, s5
 80151da:	ee61 7a27 	vmul.f32	s15, s2, s15
 80151de:	eebe 6ac8 	vcvt.s32.f32	s12, s12, #16
 80151e2:	ee77 2a62 	vsub.f32	s5, s14, s5
 80151e6:	ed8d 6a11 	vstr	s12, [sp, #68]	@ 0x44
 80151ea:	eefe 2ac8 	vcvt.s32.f32	s5, s5, #16
 80151ee:	eeb0 6a43 	vmov.f32	s12, s6
 80151f2:	ee37 3ac3 	vsub.f32	s6, s15, s6
 80151f6:	ee12 2a90 	vmov	r2, s5
 80151fa:	eebe 3ac8 	vcvt.s32.f32	s6, s6, #16
 80151fe:	fb92 f3f3 	sdiv	r3, r2, r3
 8015202:	ee13 2a10 	vmov	r2, s6
 8015206:	eebe 6ac8 	vcvt.s32.f32	s12, s12, #16
 801520a:	9313      	str	r3, [sp, #76]	@ 0x4c
 801520c:	9b10      	ldr	r3, [sp, #64]	@ 0x40
 801520e:	fb92 f3f3 	sdiv	r3, r2, r3
 8015212:	9a04      	ldr	r2, [sp, #16]
 8015214:	9314      	str	r3, [sp, #80]	@ 0x50
 8015216:	ed8d 6a12 	vstr	s12, [sp, #72]	@ 0x48
 801521a:	9b10      	ldr	r3, [sp, #64]	@ 0x40
 801521c:	eeb0 3a67 	vmov.f32	s6, s15
 8015220:	bf08      	it	eq
 8015222:	4613      	moveq	r3, r2
 8015224:	eef0 2a47 	vmov.f32	s5, s14
 8015228:	e787      	b.n	801513a <_ZN8touchgfx8LCD16bpp49TextureMapper_RGB565_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x36>
 801522a:	140e      	asrs	r6, r1, #16
 801522c:	d462      	bmi.n	80152f4 <_ZN8touchgfx8LCD16bpp49TextureMapper_RGB565_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1f0>
 801522e:	f8de 5008 	ldr.w	r5, [lr, #8]
 8015232:	42b5      	cmp	r5, r6
 8015234:	dd5e      	ble.n	80152f4 <_ZN8touchgfx8LCD16bpp49TextureMapper_RGB565_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1f0>
 8015236:	1417      	asrs	r7, r2, #16
 8015238:	d45c      	bmi.n	80152f4 <_ZN8touchgfx8LCD16bpp49TextureMapper_RGB565_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1f0>
 801523a:	f8de 400c 	ldr.w	r4, [lr, #12]
 801523e:	42bc      	cmp	r4, r7
 8015240:	dd58      	ble.n	80152f4 <_ZN8touchgfx8LCD16bpp49TextureMapper_RGB565_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1f0>
 8015242:	b22d      	sxth	r5, r5
 8015244:	fb07 6505 	mla	r5, r7, r5, r6
 8015248:	9c02      	ldr	r4, [sp, #8]
 801524a:	5d66      	ldrb	r6, [r4, r5]
 801524c:	2e00      	cmp	r6, #0
 801524e:	d051      	beq.n	80152f4 <_ZN8touchgfx8LCD16bpp49TextureMapper_RGB565_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1f0>
 8015250:	9c01      	ldr	r4, [sp, #4]
 8015252:	f834 9015 	ldrh.w	r9, [r4, r5, lsl #1]
 8015256:	f06f 0401 	mvn.w	r4, #1
 801525a:	fb04 f408 	mul.w	r4, r4, r8
 801525e:	9403      	str	r4, [sp, #12]
 8015260:	5b05      	ldrh	r5, [r0, r4]
 8015262:	9c05      	ldr	r4, [sp, #20]
 8015264:	4366      	muls	r6, r4
 8015266:	1c74      	adds	r4, r6, #1
 8015268:	eb04 2416 	add.w	r4, r4, r6, lsr #8
 801526c:	1224      	asrs	r4, r4, #8
 801526e:	b2a7      	uxth	r7, r4
 8015270:	122e      	asrs	r6, r5, #8
 8015272:	43e4      	mvns	r4, r4
 8015274:	b2e4      	uxtb	r4, r4
 8015276:	ea4f 2c29 	mov.w	ip, r9, asr #8
 801527a:	f006 06f8 	and.w	r6, r6, #248	@ 0xf8
 801527e:	fb16 f604 	smulbb	r6, r6, r4
 8015282:	ea4f 0ae5 	mov.w	sl, r5, asr #3
 8015286:	f00c 0cf8 	and.w	ip, ip, #248	@ 0xf8
 801528a:	00ed      	lsls	r5, r5, #3
 801528c:	fb0c 6c07 	mla	ip, ip, r7, r6
 8015290:	b2ed      	uxtb	r5, r5
 8015292:	ea4f 06e9 	mov.w	r6, r9, asr #3
 8015296:	ea4f 09c9 	mov.w	r9, r9, lsl #3
 801529a:	fb15 f504 	smulbb	r5, r5, r4
 801529e:	fa5f f989 	uxtb.w	r9, r9
 80152a2:	f00a 0afc 	and.w	sl, sl, #252	@ 0xfc
 80152a6:	fb09 5507 	mla	r5, r9, r7, r5
 80152aa:	fb1a fa04 	smulbb	sl, sl, r4
 80152ae:	fa1f fc8c 	uxth.w	ip, ip
 80152b2:	b2ad      	uxth	r5, r5
 80152b4:	f006 06fc 	and.w	r6, r6, #252	@ 0xfc
 80152b8:	fb06 a607 	mla	r6, r6, r7, sl
 80152bc:	f10c 0401 	add.w	r4, ip, #1
 80152c0:	f105 0a01 	add.w	sl, r5, #1
 80152c4:	eb04 2c1c 	add.w	ip, r4, ip, lsr #8
 80152c8:	eb0a 2a15 	add.w	sl, sl, r5, lsr #8
 80152cc:	b2b6      	uxth	r6, r6
 80152ce:	f3ca 2ac4 	ubfx	sl, sl, #11, #5
 80152d2:	f40c 4c78 	and.w	ip, ip, #63488	@ 0xf800
 80152d6:	ea4a 0c0c 	orr.w	ip, sl, ip
 80152da:	f106 0a01 	add.w	sl, r6, #1
 80152de:	eb0a 2a16 	add.w	sl, sl, r6, lsr #8
 80152e2:	ea4f 1a5a 	mov.w	sl, sl, lsr #5
 80152e6:	f40a 6afc 	and.w	sl, sl, #2016	@ 0x7e0
 80152ea:	9c03      	ldr	r4, [sp, #12]
 80152ec:	ea4c 0c0a 	orr.w	ip, ip, sl
 80152f0:	f820 c004 	strh.w	ip, [r0, r4]
 80152f4:	9c13      	ldr	r4, [sp, #76]	@ 0x4c
 80152f6:	4421      	add	r1, r4
 80152f8:	9c14      	ldr	r4, [sp, #80]	@ 0x50
 80152fa:	f108 38ff 	add.w	r8, r8, #4294967295
 80152fe:	4422      	add	r2, r4
 8015300:	e750      	b.n	80151a4 <_ZN8touchgfx8LCD16bpp49TextureMapper_RGB565_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xa0>
 8015302:	f04f 0900 	mov.w	r9, #0
 8015306:	eba3 0409 	sub.w	r4, r3, r9
 801530a:	2c00      	cmp	r4, #0
 801530c:	f77f af4e 	ble.w	80151ac <_ZN8touchgfx8LCD16bpp49TextureMapper_RGB565_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xa8>
 8015310:	f9be 6008 	ldrsh.w	r6, [lr, #8]
 8015314:	140d      	asrs	r5, r1, #16
 8015316:	1414      	asrs	r4, r2, #16
 8015318:	fb06 5404 	mla	r4, r6, r4, r5
 801531c:	9d02      	ldr	r5, [sp, #8]
 801531e:	5d2e      	ldrb	r6, [r5, r4]
 8015320:	2e00      	cmp	r6, #0
 8015322:	d04c      	beq.n	80153be <_ZN8touchgfx8LCD16bpp49TextureMapper_RGB565_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2ba>
 8015324:	9d01      	ldr	r5, [sp, #4]
 8015326:	f835 8014 	ldrh.w	r8, [r5, r4, lsl #1]
 801532a:	9c05      	ldr	r4, [sp, #20]
 801532c:	f830 5019 	ldrh.w	r5, [r0, r9, lsl #1]
 8015330:	4366      	muls	r6, r4
 8015332:	1c74      	adds	r4, r6, #1
 8015334:	eb04 2416 	add.w	r4, r4, r6, lsr #8
 8015338:	1224      	asrs	r4, r4, #8
 801533a:	b2a7      	uxth	r7, r4
 801533c:	122e      	asrs	r6, r5, #8
 801533e:	43e4      	mvns	r4, r4
 8015340:	b2e4      	uxtb	r4, r4
 8015342:	ea4f 2c28 	mov.w	ip, r8, asr #8
 8015346:	f006 06f8 	and.w	r6, r6, #248	@ 0xf8
 801534a:	fb16 f604 	smulbb	r6, r6, r4
 801534e:	ea4f 0ae5 	mov.w	sl, r5, asr #3
 8015352:	f00c 0cf8 	and.w	ip, ip, #248	@ 0xf8
 8015356:	00ed      	lsls	r5, r5, #3
 8015358:	fb0c 6c07 	mla	ip, ip, r7, r6
 801535c:	b2ed      	uxtb	r5, r5
 801535e:	ea4f 06e8 	mov.w	r6, r8, asr #3
 8015362:	ea4f 08c8 	mov.w	r8, r8, lsl #3
 8015366:	fb15 f504 	smulbb	r5, r5, r4
 801536a:	fa5f f888 	uxtb.w	r8, r8
 801536e:	f00a 0afc 	and.w	sl, sl, #252	@ 0xfc
 8015372:	fb08 5507 	mla	r5, r8, r7, r5
 8015376:	fb1a fa04 	smulbb	sl, sl, r4
 801537a:	fa1f fc8c 	uxth.w	ip, ip
 801537e:	b2ad      	uxth	r5, r5
 8015380:	f006 06fc 	and.w	r6, r6, #252	@ 0xfc
 8015384:	fb06 a607 	mla	r6, r6, r7, sl
 8015388:	f10c 0401 	add.w	r4, ip, #1
 801538c:	f105 0a01 	add.w	sl, r5, #1
 8015390:	eb04 2c1c 	add.w	ip, r4, ip, lsr #8
 8015394:	eb0a 2a15 	add.w	sl, sl, r5, lsr #8
 8015398:	b2b6      	uxth	r6, r6
 801539a:	f3ca 2ac4 	ubfx	sl, sl, #11, #5
 801539e:	f40c 4c78 	and.w	ip, ip, #63488	@ 0xf800
 80153a2:	ea4a 0c0c 	orr.w	ip, sl, ip
 80153a6:	f106 0a01 	add.w	sl, r6, #1
 80153aa:	eb0a 2a16 	add.w	sl, sl, r6, lsr #8
 80153ae:	ea4f 1a5a 	mov.w	sl, sl, lsr #5
 80153b2:	f40a 6afc 	and.w	sl, sl, #2016	@ 0x7e0
 80153b6:	ea4c 0c0a 	orr.w	ip, ip, sl
 80153ba:	f820 c019 	strh.w	ip, [r0, r9, lsl #1]
 80153be:	9c13      	ldr	r4, [sp, #76]	@ 0x4c
 80153c0:	4421      	add	r1, r4
 80153c2:	9c14      	ldr	r4, [sp, #80]	@ 0x50
 80153c4:	f109 0901 	add.w	r9, r9, #1
 80153c8:	4422      	add	r2, r4
 80153ca:	e79c      	b.n	8015306 <_ZN8touchgfx8LCD16bpp49TextureMapper_RGB565_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x202>
 80153cc:	b007      	add	sp, #28
 80153ce:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}

080153d2 <_ZN8touchgfx8LCD16bpp51TextureMapper_RGB565_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff>:
 80153d2:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 80153d6:	b085      	sub	sp, #20
 80153d8:	468b      	mov	fp, r1
 80153da:	9c13      	ldr	r4, [sp, #76]	@ 0x4c
 80153dc:	9203      	str	r2, [sp, #12]
 80153de:	e9dd 2014 	ldrd	r2, r0, [sp, #80]	@ 0x50
 80153e2:	6861      	ldr	r1, [r4, #4]
 80153e4:	f8dd 8058 	ldr.w	r8, [sp, #88]	@ 0x58
 80153e8:	fb01 2000 	mla	r0, r1, r0, r2
 80153ec:	6822      	ldr	r2, [r4, #0]
 80153ee:	eb02 0040 	add.w	r0, r2, r0, lsl #1
 80153f2:	f8d8 2000 	ldr.w	r2, [r8]
 80153f6:	9200      	str	r2, [sp, #0]
 80153f8:	f8d8 2004 	ldr.w	r2, [r8, #4]
 80153fc:	9201      	str	r2, [sp, #4]
 80153fe:	eef7 6a00 	vmov.f32	s13, #112	@ 0x3f800000  1.0
 8015402:	f1bb 0f00 	cmp.w	fp, #0
 8015406:	dc03      	bgt.n	8015410 <_ZN8touchgfx8LCD16bpp51TextureMapper_RGB565_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3e>
 8015408:	9a03      	ldr	r2, [sp, #12]
 801540a:	2a00      	cmp	r2, #0
 801540c:	f340 8146 	ble.w	801569c <_ZN8touchgfx8LCD16bpp51TextureMapper_RGB565_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2ca>
 8015410:	9a0f      	ldr	r2, [sp, #60]	@ 0x3c
 8015412:	f9b8 7008 	ldrsh.w	r7, [r8, #8]
 8015416:	f9b8 600c 	ldrsh.w	r6, [r8, #12]
 801541a:	f502 4100 	add.w	r1, r2, #32768	@ 0x8000
 801541e:	9a10      	ldr	r2, [sp, #64]	@ 0x40
 8015420:	f502 4200 	add.w	r2, r2, #32768	@ 0x8000
 8015424:	2b00      	cmp	r3, #0
 8015426:	dd0e      	ble.n	8015446 <_ZN8touchgfx8LCD16bpp51TextureMapper_RGB565_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x74>
 8015428:	140c      	asrs	r4, r1, #16
 801542a:	d405      	bmi.n	8015438 <_ZN8touchgfx8LCD16bpp51TextureMapper_RGB565_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x66>
 801542c:	42bc      	cmp	r4, r7
 801542e:	da03      	bge.n	8015438 <_ZN8touchgfx8LCD16bpp51TextureMapper_RGB565_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x66>
 8015430:	1414      	asrs	r4, r2, #16
 8015432:	d401      	bmi.n	8015438 <_ZN8touchgfx8LCD16bpp51TextureMapper_RGB565_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x66>
 8015434:	42b4      	cmp	r4, r6
 8015436:	db07      	blt.n	8015448 <_ZN8touchgfx8LCD16bpp51TextureMapper_RGB565_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x76>
 8015438:	9c11      	ldr	r4, [sp, #68]	@ 0x44
 801543a:	4421      	add	r1, r4
 801543c:	9c12      	ldr	r4, [sp, #72]	@ 0x48
 801543e:	3b01      	subs	r3, #1
 8015440:	4422      	add	r2, r4
 8015442:	3002      	adds	r0, #2
 8015444:	e7ee      	b.n	8015424 <_ZN8touchgfx8LCD16bpp51TextureMapper_RGB565_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x52>
 8015446:	d017      	beq.n	8015478 <_ZN8touchgfx8LCD16bpp51TextureMapper_RGB565_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xa6>
 8015448:	9d11      	ldr	r5, [sp, #68]	@ 0x44
 801544a:	1e5c      	subs	r4, r3, #1
 801544c:	fb05 1504 	mla	r5, r5, r4, r1
 8015450:	142d      	asrs	r5, r5, #16
 8015452:	d409      	bmi.n	8015468 <_ZN8touchgfx8LCD16bpp51TextureMapper_RGB565_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x96>
 8015454:	42bd      	cmp	r5, r7
 8015456:	da07      	bge.n	8015468 <_ZN8touchgfx8LCD16bpp51TextureMapper_RGB565_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x96>
 8015458:	9d12      	ldr	r5, [sp, #72]	@ 0x48
 801545a:	fb05 2404 	mla	r4, r5, r4, r2
 801545e:	1424      	asrs	r4, r4, #16
 8015460:	d402      	bmi.n	8015468 <_ZN8touchgfx8LCD16bpp51TextureMapper_RGB565_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x96>
 8015462:	42b4      	cmp	r4, r6
 8015464:	f2c0 80b3 	blt.w	80155ce <_ZN8touchgfx8LCD16bpp51TextureMapper_RGB565_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1fc>
 8015468:	2600      	movs	r6, #0
 801546a:	199c      	adds	r4, r3, r6
 801546c:	2c00      	cmp	r4, #0
 801546e:	dc3e      	bgt.n	80154ee <_ZN8touchgfx8LCD16bpp51TextureMapper_RGB565_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x11c>
 8015470:	ea23 73e3 	bic.w	r3, r3, r3, asr #31
 8015474:	eb00 0043 	add.w	r0, r0, r3, lsl #1
 8015478:	f1bb 0f00 	cmp.w	fp, #0
 801547c:	f340 810e 	ble.w	801569c <_ZN8touchgfx8LCD16bpp51TextureMapper_RGB565_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2ca>
 8015480:	ee30 0a04 	vadd.f32	s0, s0, s8
 8015484:	ee70 0aa4 	vadd.f32	s1, s1, s9
 8015488:	eec6 7a80 	vdiv.f32	s15, s13, s0
 801548c:	9b0e      	ldr	r3, [sp, #56]	@ 0x38
 801548e:	f1bb 0b01 	subs.w	fp, fp, #1
 8015492:	ee31 1a05 	vadd.f32	s2, s2, s10
 8015496:	ee20 7aa7 	vmul.f32	s14, s1, s15
 801549a:	eeb0 6a62 	vmov.f32	s12, s5
 801549e:	ee61 7a27 	vmul.f32	s15, s2, s15
 80154a2:	eebe 6ac8 	vcvt.s32.f32	s12, s12, #16
 80154a6:	ee77 2a62 	vsub.f32	s5, s14, s5
 80154aa:	ed8d 6a0f 	vstr	s12, [sp, #60]	@ 0x3c
 80154ae:	eefe 2ac8 	vcvt.s32.f32	s5, s5, #16
 80154b2:	eeb0 6a43 	vmov.f32	s12, s6
 80154b6:	ee37 3ac3 	vsub.f32	s6, s15, s6
 80154ba:	ee12 2a90 	vmov	r2, s5
 80154be:	eebe 3ac8 	vcvt.s32.f32	s6, s6, #16
 80154c2:	fb92 f3f3 	sdiv	r3, r2, r3
 80154c6:	ee13 2a10 	vmov	r2, s6
 80154ca:	eebe 6ac8 	vcvt.s32.f32	s12, s12, #16
 80154ce:	9311      	str	r3, [sp, #68]	@ 0x44
 80154d0:	9b0e      	ldr	r3, [sp, #56]	@ 0x38
 80154d2:	fb92 f3f3 	sdiv	r3, r2, r3
 80154d6:	9a03      	ldr	r2, [sp, #12]
 80154d8:	9312      	str	r3, [sp, #72]	@ 0x48
 80154da:	ed8d 6a10 	vstr	s12, [sp, #64]	@ 0x40
 80154de:	9b0e      	ldr	r3, [sp, #56]	@ 0x38
 80154e0:	eeb0 3a67 	vmov.f32	s6, s15
 80154e4:	bf08      	it	eq
 80154e6:	4613      	moveq	r3, r2
 80154e8:	eef0 2a47 	vmov.f32	s5, s14
 80154ec:	e789      	b.n	8015402 <_ZN8touchgfx8LCD16bpp51TextureMapper_RGB565_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x30>
 80154ee:	140f      	asrs	r7, r1, #16
 80154f0:	d418      	bmi.n	8015524 <_ZN8touchgfx8LCD16bpp51TextureMapper_RGB565_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x152>
 80154f2:	f8d8 5008 	ldr.w	r5, [r8, #8]
 80154f6:	42bd      	cmp	r5, r7
 80154f8:	dd14      	ble.n	8015524 <_ZN8touchgfx8LCD16bpp51TextureMapper_RGB565_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x152>
 80154fa:	ea5f 4c22 	movs.w	ip, r2, asr #16
 80154fe:	d411      	bmi.n	8015524 <_ZN8touchgfx8LCD16bpp51TextureMapper_RGB565_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x152>
 8015500:	f8d8 400c 	ldr.w	r4, [r8, #12]
 8015504:	4564      	cmp	r4, ip
 8015506:	dd0d      	ble.n	8015524 <_ZN8touchgfx8LCD16bpp51TextureMapper_RGB565_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x152>
 8015508:	b22d      	sxth	r5, r5
 801550a:	fb0c 7505 	mla	r5, ip, r5, r7
 801550e:	9c01      	ldr	r4, [sp, #4]
 8015510:	5d64      	ldrb	r4, [r4, r5]
 8015512:	2cff      	cmp	r4, #255	@ 0xff
 8015514:	d10c      	bne.n	8015530 <_ZN8touchgfx8LCD16bpp51TextureMapper_RGB565_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x15e>
 8015516:	9c00      	ldr	r4, [sp, #0]
 8015518:	f834 5015 	ldrh.w	r5, [r4, r5, lsl #1]
 801551c:	f06f 0401 	mvn.w	r4, #1
 8015520:	4374      	muls	r4, r6
 8015522:	5305      	strh	r5, [r0, r4]
 8015524:	9c11      	ldr	r4, [sp, #68]	@ 0x44
 8015526:	4421      	add	r1, r4
 8015528:	9c12      	ldr	r4, [sp, #72]	@ 0x48
 801552a:	3e01      	subs	r6, #1
 801552c:	4422      	add	r2, r4
 801552e:	e79c      	b.n	801546a <_ZN8touchgfx8LCD16bpp51TextureMapper_RGB565_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x98>
 8015530:	2c00      	cmp	r4, #0
 8015532:	d0f7      	beq.n	8015524 <_ZN8touchgfx8LCD16bpp51TextureMapper_RGB565_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x152>
 8015534:	9f00      	ldr	r7, [sp, #0]
 8015536:	f837 9015 	ldrh.w	r9, [r7, r5, lsl #1]
 801553a:	f06f 0501 	mvn.w	r5, #1
 801553e:	4375      	muls	r5, r6
 8015540:	9502      	str	r5, [sp, #8]
 8015542:	5b45      	ldrh	r5, [r0, r5]
 8015544:	fa1f fc84 	uxth.w	ip, r4
 8015548:	122f      	asrs	r7, r5, #8
 801554a:	43e4      	mvns	r4, r4
 801554c:	b2e4      	uxtb	r4, r4
 801554e:	ea4f 2e29 	mov.w	lr, r9, asr #8
 8015552:	f007 07f8 	and.w	r7, r7, #248	@ 0xf8
 8015556:	fb17 f704 	smulbb	r7, r7, r4
 801555a:	ea4f 0ae5 	mov.w	sl, r5, asr #3
 801555e:	f00e 0ef8 	and.w	lr, lr, #248	@ 0xf8
 8015562:	00ed      	lsls	r5, r5, #3
 8015564:	fb0e 7e0c 	mla	lr, lr, ip, r7
 8015568:	b2ed      	uxtb	r5, r5
 801556a:	ea4f 07e9 	mov.w	r7, r9, asr #3
 801556e:	ea4f 09c9 	mov.w	r9, r9, lsl #3
 8015572:	fb15 f504 	smulbb	r5, r5, r4
 8015576:	fa5f f989 	uxtb.w	r9, r9
 801557a:	f00a 0afc 	and.w	sl, sl, #252	@ 0xfc
 801557e:	fb09 550c 	mla	r5, r9, ip, r5
 8015582:	fb1a fa04 	smulbb	sl, sl, r4
 8015586:	fa1f fe8e 	uxth.w	lr, lr
 801558a:	b2ad      	uxth	r5, r5
 801558c:	f007 07fc 	and.w	r7, r7, #252	@ 0xfc
 8015590:	fb07 a70c 	mla	r7, r7, ip, sl
 8015594:	f10e 0401 	add.w	r4, lr, #1
 8015598:	f105 0a01 	add.w	sl, r5, #1
 801559c:	eb04 2e1e 	add.w	lr, r4, lr, lsr #8
 80155a0:	eb0a 2a15 	add.w	sl, sl, r5, lsr #8
 80155a4:	b2bf      	uxth	r7, r7
 80155a6:	f3ca 2ac4 	ubfx	sl, sl, #11, #5
 80155aa:	f40e 4e78 	and.w	lr, lr, #63488	@ 0xf800
 80155ae:	ea4a 0e0e 	orr.w	lr, sl, lr
 80155b2:	f107 0a01 	add.w	sl, r7, #1
 80155b6:	eb0a 2a17 	add.w	sl, sl, r7, lsr #8
 80155ba:	ea4f 1a5a 	mov.w	sl, sl, lsr #5
 80155be:	f40a 6afc 	and.w	sl, sl, #2016	@ 0x7e0
 80155c2:	9c02      	ldr	r4, [sp, #8]
 80155c4:	ea4e 0e0a 	orr.w	lr, lr, sl
 80155c8:	f820 e004 	strh.w	lr, [r0, r4]
 80155cc:	e7aa      	b.n	8015524 <_ZN8touchgfx8LCD16bpp51TextureMapper_RGB565_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x152>
 80155ce:	f04f 0900 	mov.w	r9, #0
 80155d2:	eba3 0409 	sub.w	r4, r3, r9
 80155d6:	2c00      	cmp	r4, #0
 80155d8:	f77f af4a 	ble.w	8015470 <_ZN8touchgfx8LCD16bpp51TextureMapper_RGB565_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x9e>
 80155dc:	f9b8 6008 	ldrsh.w	r6, [r8, #8]
 80155e0:	1414      	asrs	r4, r2, #16
 80155e2:	140d      	asrs	r5, r1, #16
 80155e4:	fb06 5504 	mla	r5, r6, r4, r5
 80155e8:	9c01      	ldr	r4, [sp, #4]
 80155ea:	5d64      	ldrb	r4, [r4, r5]
 80155ec:	2cff      	cmp	r4, #255	@ 0xff
 80155ee:	d10b      	bne.n	8015608 <_ZN8touchgfx8LCD16bpp51TextureMapper_RGB565_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x236>
 80155f0:	9c00      	ldr	r4, [sp, #0]
 80155f2:	f834 4015 	ldrh.w	r4, [r4, r5, lsl #1]
 80155f6:	f820 4019 	strh.w	r4, [r0, r9, lsl #1]
 80155fa:	9c11      	ldr	r4, [sp, #68]	@ 0x44
 80155fc:	4421      	add	r1, r4
 80155fe:	9c12      	ldr	r4, [sp, #72]	@ 0x48
 8015600:	f109 0901 	add.w	r9, r9, #1
 8015604:	4422      	add	r2, r4
 8015606:	e7e4      	b.n	80155d2 <_ZN8touchgfx8LCD16bpp51TextureMapper_RGB565_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x200>
 8015608:	2c00      	cmp	r4, #0
 801560a:	d0f6      	beq.n	80155fa <_ZN8touchgfx8LCD16bpp51TextureMapper_RGB565_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x228>
 801560c:	9e00      	ldr	r6, [sp, #0]
 801560e:	f836 e015 	ldrh.w	lr, [r6, r5, lsl #1]
 8015612:	f830 5019 	ldrh.w	r5, [r0, r9, lsl #1]
 8015616:	b2a7      	uxth	r7, r4
 8015618:	122e      	asrs	r6, r5, #8
 801561a:	43e4      	mvns	r4, r4
 801561c:	b2e4      	uxtb	r4, r4
 801561e:	ea4f 2c2e 	mov.w	ip, lr, asr #8
 8015622:	f006 06f8 	and.w	r6, r6, #248	@ 0xf8
 8015626:	fb16 f604 	smulbb	r6, r6, r4
 801562a:	ea4f 0ae5 	mov.w	sl, r5, asr #3
 801562e:	f00c 0cf8 	and.w	ip, ip, #248	@ 0xf8
 8015632:	00ed      	lsls	r5, r5, #3
 8015634:	fb0c 6c07 	mla	ip, ip, r7, r6
 8015638:	b2ed      	uxtb	r5, r5
 801563a:	ea4f 06ee 	mov.w	r6, lr, asr #3
 801563e:	ea4f 0ece 	mov.w	lr, lr, lsl #3
 8015642:	fb15 f504 	smulbb	r5, r5, r4
 8015646:	fa5f fe8e 	uxtb.w	lr, lr
 801564a:	f00a 0afc 	and.w	sl, sl, #252	@ 0xfc
 801564e:	fb0e 5507 	mla	r5, lr, r7, r5
 8015652:	fb1a fa04 	smulbb	sl, sl, r4
 8015656:	fa1f fc8c 	uxth.w	ip, ip
 801565a:	b2ad      	uxth	r5, r5
 801565c:	f006 06fc 	and.w	r6, r6, #252	@ 0xfc
 8015660:	fb06 a607 	mla	r6, r6, r7, sl
 8015664:	f10c 0401 	add.w	r4, ip, #1
 8015668:	f105 0a01 	add.w	sl, r5, #1
 801566c:	eb04 2c1c 	add.w	ip, r4, ip, lsr #8
 8015670:	eb0a 2a15 	add.w	sl, sl, r5, lsr #8
 8015674:	b2b6      	uxth	r6, r6
 8015676:	f3ca 2ac4 	ubfx	sl, sl, #11, #5
 801567a:	f40c 4c78 	and.w	ip, ip, #63488	@ 0xf800
 801567e:	ea4a 0c0c 	orr.w	ip, sl, ip
 8015682:	f106 0a01 	add.w	sl, r6, #1
 8015686:	eb0a 2a16 	add.w	sl, sl, r6, lsr #8
 801568a:	ea4f 1a5a 	mov.w	sl, sl, lsr #5
 801568e:	f40a 6afc 	and.w	sl, sl, #2016	@ 0x7e0
 8015692:	ea4c 0c0a 	orr.w	ip, ip, sl
 8015696:	f820 c019 	strh.w	ip, [r0, r9, lsl #1]
 801569a:	e7ae      	b.n	80155fa <_ZN8touchgfx8LCD16bpp51TextureMapper_RGB565_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x228>
 801569c:	b005      	add	sp, #20
 801569e:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}

080156a2 <_ZN8touchgfx8LCD16bpp46TextureMapper_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff>:
 80156a2:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 80156a6:	b085      	sub	sp, #20
 80156a8:	9813      	ldr	r0, [sp, #76]	@ 0x4c
 80156aa:	9203      	str	r2, [sp, #12]
 80156ac:	f89d 205c 	ldrb.w	r2, [sp, #92]	@ 0x5c
 80156b0:	9201      	str	r2, [sp, #4]
 80156b2:	e9dd 2414 	ldrd	r2, r4, [sp, #80]	@ 0x50
 80156b6:	9100      	str	r1, [sp, #0]
 80156b8:	6841      	ldr	r1, [r0, #4]
 80156ba:	f8dd e058 	ldr.w	lr, [sp, #88]	@ 0x58
 80156be:	fb01 2404 	mla	r4, r1, r4, r2
 80156c2:	6802      	ldr	r2, [r0, #0]
 80156c4:	eb02 0444 	add.w	r4, r2, r4, lsl #1
 80156c8:	f8de 2000 	ldr.w	r2, [lr]
 80156cc:	9202      	str	r2, [sp, #8]
 80156ce:	9a01      	ldr	r2, [sp, #4]
 80156d0:	43d6      	mvns	r6, r2
 80156d2:	b2f6      	uxtb	r6, r6
 80156d4:	9a00      	ldr	r2, [sp, #0]
 80156d6:	2a00      	cmp	r2, #0
 80156d8:	dc03      	bgt.n	80156e2 <_ZN8touchgfx8LCD16bpp46TextureMapper_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x40>
 80156da:	9a03      	ldr	r2, [sp, #12]
 80156dc:	2a00      	cmp	r2, #0
 80156de:	f340 8124 	ble.w	801592a <_ZN8touchgfx8LCD16bpp46TextureMapper_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x288>
 80156e2:	9a0f      	ldr	r2, [sp, #60]	@ 0x3c
 80156e4:	f9be c008 	ldrsh.w	ip, [lr, #8]
 80156e8:	f9be 700c 	ldrsh.w	r7, [lr, #12]
 80156ec:	f502 4100 	add.w	r1, r2, #32768	@ 0x8000
 80156f0:	9a10      	ldr	r2, [sp, #64]	@ 0x40
 80156f2:	f502 4200 	add.w	r2, r2, #32768	@ 0x8000
 80156f6:	2b00      	cmp	r3, #0
 80156f8:	dd0e      	ble.n	8015718 <_ZN8touchgfx8LCD16bpp46TextureMapper_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x76>
 80156fa:	1408      	asrs	r0, r1, #16
 80156fc:	d405      	bmi.n	801570a <_ZN8touchgfx8LCD16bpp46TextureMapper_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x68>
 80156fe:	4560      	cmp	r0, ip
 8015700:	da03      	bge.n	801570a <_ZN8touchgfx8LCD16bpp46TextureMapper_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x68>
 8015702:	1410      	asrs	r0, r2, #16
 8015704:	d401      	bmi.n	801570a <_ZN8touchgfx8LCD16bpp46TextureMapper_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x68>
 8015706:	42b8      	cmp	r0, r7
 8015708:	db07      	blt.n	801571a <_ZN8touchgfx8LCD16bpp46TextureMapper_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x78>
 801570a:	9811      	ldr	r0, [sp, #68]	@ 0x44
 801570c:	4401      	add	r1, r0
 801570e:	9812      	ldr	r0, [sp, #72]	@ 0x48
 8015710:	3b01      	subs	r3, #1
 8015712:	4402      	add	r2, r0
 8015714:	3402      	adds	r4, #2
 8015716:	e7ee      	b.n	80156f6 <_ZN8touchgfx8LCD16bpp46TextureMapper_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x54>
 8015718:	d06e      	beq.n	80157f8 <_ZN8touchgfx8LCD16bpp46TextureMapper_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x156>
 801571a:	9d11      	ldr	r5, [sp, #68]	@ 0x44
 801571c:	1e58      	subs	r0, r3, #1
 801571e:	fb05 1500 	mla	r5, r5, r0, r1
 8015722:	142d      	asrs	r5, r5, #16
 8015724:	d45c      	bmi.n	80157e0 <_ZN8touchgfx8LCD16bpp46TextureMapper_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x13e>
 8015726:	4565      	cmp	r5, ip
 8015728:	da5a      	bge.n	80157e0 <_ZN8touchgfx8LCD16bpp46TextureMapper_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x13e>
 801572a:	9d12      	ldr	r5, [sp, #72]	@ 0x48
 801572c:	fb05 2000 	mla	r0, r5, r0, r2
 8015730:	1400      	asrs	r0, r0, #16
 8015732:	d455      	bmi.n	80157e0 <_ZN8touchgfx8LCD16bpp46TextureMapper_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x13e>
 8015734:	42b8      	cmp	r0, r7
 8015736:	da53      	bge.n	80157e0 <_ZN8touchgfx8LCD16bpp46TextureMapper_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x13e>
 8015738:	f8bd b004 	ldrh.w	fp, [sp, #4]
 801573c:	4699      	mov	r9, r3
 801573e:	46a2      	mov	sl, r4
 8015740:	f1b9 0f00 	cmp.w	r9, #0
 8015744:	dd54      	ble.n	80157f0 <_ZN8touchgfx8LCD16bpp46TextureMapper_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x14e>
 8015746:	f9be 7008 	ldrsh.w	r7, [lr, #8]
 801574a:	140d      	asrs	r5, r1, #16
 801574c:	1410      	asrs	r0, r2, #16
 801574e:	fb07 5000 	mla	r0, r7, r0, r5
 8015752:	9d02      	ldr	r5, [sp, #8]
 8015754:	f835 0010 	ldrh.w	r0, [r5, r0, lsl #1]
 8015758:	f8ba 5000 	ldrh.w	r5, [sl]
 801575c:	122f      	asrs	r7, r5, #8
 801575e:	ea4f 2c20 	mov.w	ip, r0, asr #8
 8015762:	f007 07f8 	and.w	r7, r7, #248	@ 0xf8
 8015766:	fb17 f706 	smulbb	r7, r7, r6
 801576a:	ea4f 08e5 	mov.w	r8, r5, asr #3
 801576e:	f00c 0cf8 	and.w	ip, ip, #248	@ 0xf8
 8015772:	00ed      	lsls	r5, r5, #3
 8015774:	fb0c 7c0b 	mla	ip, ip, fp, r7
 8015778:	f008 08fc 	and.w	r8, r8, #252	@ 0xfc
 801577c:	10c7      	asrs	r7, r0, #3
 801577e:	b2ed      	uxtb	r5, r5
 8015780:	00c0      	lsls	r0, r0, #3
 8015782:	fb18 f806 	smulbb	r8, r8, r6
 8015786:	fb15 f506 	smulbb	r5, r5, r6
 801578a:	f007 07fc 	and.w	r7, r7, #252	@ 0xfc
 801578e:	b2c0      	uxtb	r0, r0
 8015790:	fa1f fc8c 	uxth.w	ip, ip
 8015794:	fb07 870b 	mla	r7, r7, fp, r8
 8015798:	fb00 500b 	mla	r0, r0, fp, r5
 801579c:	b280      	uxth	r0, r0
 801579e:	b2bf      	uxth	r7, r7
 80157a0:	f10c 0501 	add.w	r5, ip, #1
 80157a4:	eb05 2c1c 	add.w	ip, r5, ip, lsr #8
 80157a8:	f107 0801 	add.w	r8, r7, #1
 80157ac:	1c45      	adds	r5, r0, #1
 80157ae:	eb05 2510 	add.w	r5, r5, r0, lsr #8
 80157b2:	eb08 2817 	add.w	r8, r8, r7, lsr #8
 80157b6:	9811      	ldr	r0, [sp, #68]	@ 0x44
 80157b8:	f40c 4c78 	and.w	ip, ip, #63488	@ 0xf800
 80157bc:	f3c5 25c4 	ubfx	r5, r5, #11, #5
 80157c0:	ea4f 1858 	mov.w	r8, r8, lsr #5
 80157c4:	ea45 0c0c 	orr.w	ip, r5, ip
 80157c8:	f408 68fc 	and.w	r8, r8, #2016	@ 0x7e0
 80157cc:	4401      	add	r1, r0
 80157ce:	9812      	ldr	r0, [sp, #72]	@ 0x48
 80157d0:	ea4c 0c08 	orr.w	ip, ip, r8
 80157d4:	f82a cb02 	strh.w	ip, [sl], #2
 80157d8:	4402      	add	r2, r0
 80157da:	f109 39ff 	add.w	r9, r9, #4294967295
 80157de:	e7af      	b.n	8015740 <_ZN8touchgfx8LCD16bpp46TextureMapper_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x9e>
 80157e0:	f8bd a004 	ldrh.w	sl, [sp, #4]
 80157e4:	f04f 0800 	mov.w	r8, #0
 80157e8:	eb03 0008 	add.w	r0, r3, r8
 80157ec:	2800      	cmp	r0, #0
 80157ee:	dc41      	bgt.n	8015874 <_ZN8touchgfx8LCD16bpp46TextureMapper_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1d2>
 80157f0:	ea23 73e3 	bic.w	r3, r3, r3, asr #31
 80157f4:	eb04 0443 	add.w	r4, r4, r3, lsl #1
 80157f8:	9b00      	ldr	r3, [sp, #0]
 80157fa:	2b00      	cmp	r3, #0
 80157fc:	f340 8095 	ble.w	801592a <_ZN8touchgfx8LCD16bpp46TextureMapper_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x288>
 8015800:	ee30 0a04 	vadd.f32	s0, s0, s8
 8015804:	eeb7 7a00 	vmov.f32	s14, #112	@ 0x3f800000  1.0
 8015808:	eec7 7a00 	vdiv.f32	s15, s14, s0
 801580c:	9b0e      	ldr	r3, [sp, #56]	@ 0x38
 801580e:	ee70 0aa4 	vadd.f32	s1, s1, s9
 8015812:	ee31 1a05 	vadd.f32	s2, s2, s10
 8015816:	ee20 7aa7 	vmul.f32	s14, s1, s15
 801581a:	eef0 6a62 	vmov.f32	s13, s5
 801581e:	ee61 7a27 	vmul.f32	s15, s2, s15
 8015822:	eefe 6ac8 	vcvt.s32.f32	s13, s13, #16
 8015826:	ee77 2a62 	vsub.f32	s5, s14, s5
 801582a:	edcd 6a0f 	vstr	s13, [sp, #60]	@ 0x3c
 801582e:	eefe 2ac8 	vcvt.s32.f32	s5, s5, #16
 8015832:	eef0 6a43 	vmov.f32	s13, s6
 8015836:	ee37 3ac3 	vsub.f32	s6, s15, s6
 801583a:	ee12 2a90 	vmov	r2, s5
 801583e:	eebe 3ac8 	vcvt.s32.f32	s6, s6, #16
 8015842:	fb92 f3f3 	sdiv	r3, r2, r3
 8015846:	ee13 2a10 	vmov	r2, s6
 801584a:	9311      	str	r3, [sp, #68]	@ 0x44
 801584c:	9b0e      	ldr	r3, [sp, #56]	@ 0x38
 801584e:	fb92 f3f3 	sdiv	r3, r2, r3
 8015852:	9312      	str	r3, [sp, #72]	@ 0x48
 8015854:	9b00      	ldr	r3, [sp, #0]
 8015856:	9a03      	ldr	r2, [sp, #12]
 8015858:	eefe 6ac8 	vcvt.s32.f32	s13, s13, #16
 801585c:	3b01      	subs	r3, #1
 801585e:	9300      	str	r3, [sp, #0]
 8015860:	edcd 6a10 	vstr	s13, [sp, #64]	@ 0x40
 8015864:	9b0e      	ldr	r3, [sp, #56]	@ 0x38
 8015866:	eeb0 3a67 	vmov.f32	s6, s15
 801586a:	bf08      	it	eq
 801586c:	4613      	moveq	r3, r2
 801586e:	eef0 2a47 	vmov.f32	s5, s14
 8015872:	e72f      	b.n	80156d4 <_ZN8touchgfx8LCD16bpp46TextureMapper_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x32>
 8015874:	140f      	asrs	r7, r1, #16
 8015876:	d451      	bmi.n	801591c <_ZN8touchgfx8LCD16bpp46TextureMapper_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x27a>
 8015878:	f8de 5008 	ldr.w	r5, [lr, #8]
 801587c:	42bd      	cmp	r5, r7
 801587e:	dd4d      	ble.n	801591c <_ZN8touchgfx8LCD16bpp46TextureMapper_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x27a>
 8015880:	ea5f 4c22 	movs.w	ip, r2, asr #16
 8015884:	d44a      	bmi.n	801591c <_ZN8touchgfx8LCD16bpp46TextureMapper_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x27a>
 8015886:	f8de 000c 	ldr.w	r0, [lr, #12]
 801588a:	4560      	cmp	r0, ip
 801588c:	dd46      	ble.n	801591c <_ZN8touchgfx8LCD16bpp46TextureMapper_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x27a>
 801588e:	b22d      	sxth	r5, r5
 8015890:	fb0c 7505 	mla	r5, ip, r5, r7
 8015894:	9802      	ldr	r0, [sp, #8]
 8015896:	f830 0015 	ldrh.w	r0, [r0, r5, lsl #1]
 801589a:	f06f 0501 	mvn.w	r5, #1
 801589e:	fb05 fb08 	mul.w	fp, r5, r8
 80158a2:	ea4f 2c20 	mov.w	ip, r0, asr #8
 80158a6:	f834 500b 	ldrh.w	r5, [r4, fp]
 80158aa:	122f      	asrs	r7, r5, #8
 80158ac:	f007 07f8 	and.w	r7, r7, #248	@ 0xf8
 80158b0:	fb17 f706 	smulbb	r7, r7, r6
 80158b4:	ea4f 09e5 	mov.w	r9, r5, asr #3
 80158b8:	f00c 0cf8 	and.w	ip, ip, #248	@ 0xf8
 80158bc:	00ed      	lsls	r5, r5, #3
 80158be:	fb0c 7c0a 	mla	ip, ip, sl, r7
 80158c2:	f009 09fc 	and.w	r9, r9, #252	@ 0xfc
 80158c6:	10c7      	asrs	r7, r0, #3
 80158c8:	b2ed      	uxtb	r5, r5
 80158ca:	00c0      	lsls	r0, r0, #3
 80158cc:	fb19 f906 	smulbb	r9, r9, r6
 80158d0:	fb15 f506 	smulbb	r5, r5, r6
 80158d4:	f007 07fc 	and.w	r7, r7, #252	@ 0xfc
 80158d8:	b2c0      	uxtb	r0, r0
 80158da:	fa1f fc8c 	uxth.w	ip, ip
 80158de:	fb07 970a 	mla	r7, r7, sl, r9
 80158e2:	fb00 500a 	mla	r0, r0, sl, r5
 80158e6:	b2bf      	uxth	r7, r7
 80158e8:	b280      	uxth	r0, r0
 80158ea:	f10c 0501 	add.w	r5, ip, #1
 80158ee:	eb05 2c1c 	add.w	ip, r5, ip, lsr #8
 80158f2:	f107 0901 	add.w	r9, r7, #1
 80158f6:	1c45      	adds	r5, r0, #1
 80158f8:	eb05 2510 	add.w	r5, r5, r0, lsr #8
 80158fc:	eb09 2917 	add.w	r9, r9, r7, lsr #8
 8015900:	f40c 4c78 	and.w	ip, ip, #63488	@ 0xf800
 8015904:	f3c5 25c4 	ubfx	r5, r5, #11, #5
 8015908:	ea4f 1959 	mov.w	r9, r9, lsr #5
 801590c:	ea45 0c0c 	orr.w	ip, r5, ip
 8015910:	f409 69fc 	and.w	r9, r9, #2016	@ 0x7e0
 8015914:	ea4c 0c09 	orr.w	ip, ip, r9
 8015918:	f824 c00b 	strh.w	ip, [r4, fp]
 801591c:	9811      	ldr	r0, [sp, #68]	@ 0x44
 801591e:	4401      	add	r1, r0
 8015920:	9812      	ldr	r0, [sp, #72]	@ 0x48
 8015922:	f108 38ff 	add.w	r8, r8, #4294967295
 8015926:	4402      	add	r2, r0
 8015928:	e75e      	b.n	80157e8 <_ZN8touchgfx8LCD16bpp46TextureMapper_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x146>
 801592a:	b005      	add	sp, #20
 801592c:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}

08015930 <_ZN8touchgfx8LCD16bpp48TextureMapper_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff>:
 8015930:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8015934:	b085      	sub	sp, #20
 8015936:	4693      	mov	fp, r2
 8015938:	9e13      	ldr	r6, [sp, #76]	@ 0x4c
 801593a:	9d16      	ldr	r5, [sp, #88]	@ 0x58
 801593c:	6870      	ldr	r0, [r6, #4]
 801593e:	9101      	str	r1, [sp, #4]
 8015940:	e9dd 2414 	ldrd	r2, r4, [sp, #80]	@ 0x50
 8015944:	fb00 2404 	mla	r4, r0, r4, r2
 8015948:	6832      	ldr	r2, [r6, #0]
 801594a:	e9dd ec11 	ldrd	lr, ip, [sp, #68]	@ 0x44
 801594e:	eb02 0444 	add.w	r4, r2, r4, lsl #1
 8015952:	682a      	ldr	r2, [r5, #0]
 8015954:	9202      	str	r2, [sp, #8]
 8015956:	eef7 6a00 	vmov.f32	s13, #112	@ 0x3f800000  1.0
 801595a:	9a01      	ldr	r2, [sp, #4]
 801595c:	2a00      	cmp	r2, #0
 801595e:	dc03      	bgt.n	8015968 <_ZN8touchgfx8LCD16bpp48TextureMapper_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x38>
 8015960:	f1bb 0f00 	cmp.w	fp, #0
 8015964:	f340 809a 	ble.w	8015a9c <_ZN8touchgfx8LCD16bpp48TextureMapper_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x16c>
 8015968:	9a0f      	ldr	r2, [sp, #60]	@ 0x3c
 801596a:	f9b5 9008 	ldrsh.w	r9, [r5, #8]
 801596e:	f9b5 800c 	ldrsh.w	r8, [r5, #12]
 8015972:	f502 4000 	add.w	r0, r2, #32768	@ 0x8000
 8015976:	9a10      	ldr	r2, [sp, #64]	@ 0x40
 8015978:	f502 4200 	add.w	r2, r2, #32768	@ 0x8000
 801597c:	2b00      	cmp	r3, #0
 801597e:	dd0c      	ble.n	801599a <_ZN8touchgfx8LCD16bpp48TextureMapper_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x6a>
 8015980:	1406      	asrs	r6, r0, #16
 8015982:	d405      	bmi.n	8015990 <_ZN8touchgfx8LCD16bpp48TextureMapper_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x60>
 8015984:	454e      	cmp	r6, r9
 8015986:	da03      	bge.n	8015990 <_ZN8touchgfx8LCD16bpp48TextureMapper_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x60>
 8015988:	1416      	asrs	r6, r2, #16
 801598a:	d401      	bmi.n	8015990 <_ZN8touchgfx8LCD16bpp48TextureMapper_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x60>
 801598c:	4546      	cmp	r6, r8
 801598e:	db05      	blt.n	801599c <_ZN8touchgfx8LCD16bpp48TextureMapper_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x6c>
 8015990:	4470      	add	r0, lr
 8015992:	4462      	add	r2, ip
 8015994:	3b01      	subs	r3, #1
 8015996:	3402      	adds	r4, #2
 8015998:	e7f0      	b.n	801597c <_ZN8touchgfx8LCD16bpp48TextureMapper_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x4c>
 801599a:	d00f      	beq.n	80159bc <_ZN8touchgfx8LCD16bpp48TextureMapper_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x8c>
 801599c:	1e5e      	subs	r6, r3, #1
 801599e:	fb0e 0706 	mla	r7, lr, r6, r0
 80159a2:	143f      	asrs	r7, r7, #16
 80159a4:	d541      	bpl.n	8015a2a <_ZN8touchgfx8LCD16bpp48TextureMapper_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xfa>
 80159a6:	eb04 0643 	add.w	r6, r4, r3, lsl #1
 80159aa:	4698      	mov	r8, r3
 80159ac:	9603      	str	r6, [sp, #12]
 80159ae:	f1b8 0f00 	cmp.w	r8, #0
 80159b2:	dc56      	bgt.n	8015a62 <_ZN8touchgfx8LCD16bpp48TextureMapper_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x132>
 80159b4:	ea23 73e3 	bic.w	r3, r3, r3, asr #31
 80159b8:	eb04 0443 	add.w	r4, r4, r3, lsl #1
 80159bc:	9b01      	ldr	r3, [sp, #4]
 80159be:	2b00      	cmp	r3, #0
 80159c0:	dd6c      	ble.n	8015a9c <_ZN8touchgfx8LCD16bpp48TextureMapper_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x16c>
 80159c2:	ee30 0a04 	vadd.f32	s0, s0, s8
 80159c6:	ee70 0aa4 	vadd.f32	s1, s1, s9
 80159ca:	eec6 7a80 	vdiv.f32	s15, s13, s0
 80159ce:	9b0e      	ldr	r3, [sp, #56]	@ 0x38
 80159d0:	ee31 1a05 	vadd.f32	s2, s2, s10
 80159d4:	ee20 7aa7 	vmul.f32	s14, s1, s15
 80159d8:	eeb0 6a62 	vmov.f32	s12, s5
 80159dc:	ee61 7a27 	vmul.f32	s15, s2, s15
 80159e0:	eebe 6ac8 	vcvt.s32.f32	s12, s12, #16
 80159e4:	ee77 2a62 	vsub.f32	s5, s14, s5
 80159e8:	ed8d 6a0f 	vstr	s12, [sp, #60]	@ 0x3c
 80159ec:	eefe 2ac8 	vcvt.s32.f32	s5, s5, #16
 80159f0:	eeb0 6a43 	vmov.f32	s12, s6
 80159f4:	ee37 3ac3 	vsub.f32	s6, s15, s6
 80159f8:	ee12 2a90 	vmov	r2, s5
 80159fc:	eebe 3ac8 	vcvt.s32.f32	s6, s6, #16
 8015a00:	fb92 fef3 	sdiv	lr, r2, r3
 8015a04:	ee13 2a10 	vmov	r2, s6
 8015a08:	fb92 fcf3 	sdiv	ip, r2, r3
 8015a0c:	9b01      	ldr	r3, [sp, #4]
 8015a0e:	eebe 6ac8 	vcvt.s32.f32	s12, s12, #16
 8015a12:	3b01      	subs	r3, #1
 8015a14:	9301      	str	r3, [sp, #4]
 8015a16:	ed8d 6a10 	vstr	s12, [sp, #64]	@ 0x40
 8015a1a:	9b0e      	ldr	r3, [sp, #56]	@ 0x38
 8015a1c:	eeb0 3a67 	vmov.f32	s6, s15
 8015a20:	bf08      	it	eq
 8015a22:	465b      	moveq	r3, fp
 8015a24:	eef0 2a47 	vmov.f32	s5, s14
 8015a28:	e797      	b.n	801595a <_ZN8touchgfx8LCD16bpp48TextureMapper_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2a>
 8015a2a:	454f      	cmp	r7, r9
 8015a2c:	dabb      	bge.n	80159a6 <_ZN8touchgfx8LCD16bpp48TextureMapper_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x76>
 8015a2e:	fb0c 2606 	mla	r6, ip, r6, r2
 8015a32:	1436      	asrs	r6, r6, #16
 8015a34:	d4b7      	bmi.n	80159a6 <_ZN8touchgfx8LCD16bpp48TextureMapper_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x76>
 8015a36:	4546      	cmp	r6, r8
 8015a38:	dab5      	bge.n	80159a6 <_ZN8touchgfx8LCD16bpp48TextureMapper_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x76>
 8015a3a:	461e      	mov	r6, r3
 8015a3c:	46a0      	mov	r8, r4
 8015a3e:	2e00      	cmp	r6, #0
 8015a40:	ddb8      	ble.n	80159b4 <_ZN8touchgfx8LCD16bpp48TextureMapper_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x84>
 8015a42:	f9b5 a008 	ldrsh.w	sl, [r5, #8]
 8015a46:	9902      	ldr	r1, [sp, #8]
 8015a48:	1417      	asrs	r7, r2, #16
 8015a4a:	ea4f 4920 	mov.w	r9, r0, asr #16
 8015a4e:	fb0a 9707 	mla	r7, sl, r7, r9
 8015a52:	4470      	add	r0, lr
 8015a54:	f831 7017 	ldrh.w	r7, [r1, r7, lsl #1]
 8015a58:	f828 7b02 	strh.w	r7, [r8], #2
 8015a5c:	4462      	add	r2, ip
 8015a5e:	3e01      	subs	r6, #1
 8015a60:	e7ed      	b.n	8015a3e <_ZN8touchgfx8LCD16bpp48TextureMapper_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x10e>
 8015a62:	ea5f 4920 	movs.w	r9, r0, asr #16
 8015a66:	d414      	bmi.n	8015a92 <_ZN8touchgfx8LCD16bpp48TextureMapper_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x162>
 8015a68:	68ae      	ldr	r6, [r5, #8]
 8015a6a:	454e      	cmp	r6, r9
 8015a6c:	dd11      	ble.n	8015a92 <_ZN8touchgfx8LCD16bpp48TextureMapper_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x162>
 8015a6e:	ea5f 4a22 	movs.w	sl, r2, asr #16
 8015a72:	d40e      	bmi.n	8015a92 <_ZN8touchgfx8LCD16bpp48TextureMapper_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x162>
 8015a74:	68ef      	ldr	r7, [r5, #12]
 8015a76:	4557      	cmp	r7, sl
 8015a78:	dd0b      	ble.n	8015a92 <_ZN8touchgfx8LCD16bpp48TextureMapper_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x162>
 8015a7a:	b236      	sxth	r6, r6
 8015a7c:	fb0a 9606 	mla	r6, sl, r6, r9
 8015a80:	9f02      	ldr	r7, [sp, #8]
 8015a82:	f06f 0101 	mvn.w	r1, #1
 8015a86:	f837 7016 	ldrh.w	r7, [r7, r6, lsl #1]
 8015a8a:	fb01 f608 	mul.w	r6, r1, r8
 8015a8e:	9903      	ldr	r1, [sp, #12]
 8015a90:	538f      	strh	r7, [r1, r6]
 8015a92:	4470      	add	r0, lr
 8015a94:	4462      	add	r2, ip
 8015a96:	f108 38ff 	add.w	r8, r8, #4294967295
 8015a9a:	e788      	b.n	80159ae <_ZN8touchgfx8LCD16bpp48TextureMapper_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x7e>
 8015a9c:	b005      	add	sp, #20
 8015a9e:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}

08015aa2 <_ZN8touchgfx8LCD16bpp51TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff>:
 8015aa2:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8015aa6:	b087      	sub	sp, #28
 8015aa8:	468b      	mov	fp, r1
 8015aaa:	9815      	ldr	r0, [sp, #84]	@ 0x54
 8015aac:	9203      	str	r2, [sp, #12]
 8015aae:	f89d 2064 	ldrb.w	r2, [sp, #100]	@ 0x64
 8015ab2:	9204      	str	r2, [sp, #16]
 8015ab4:	e9dd 2516 	ldrd	r2, r5, [sp, #88]	@ 0x58
 8015ab8:	6841      	ldr	r1, [r0, #4]
 8015aba:	f8dd 9060 	ldr.w	r9, [sp, #96]	@ 0x60
 8015abe:	fb01 2505 	mla	r5, r1, r5, r2
 8015ac2:	6802      	ldr	r2, [r0, #0]
 8015ac4:	eb02 0545 	add.w	r5, r2, r5, lsl #1
 8015ac8:	f8d9 2000 	ldr.w	r2, [r9]
 8015acc:	9201      	str	r2, [sp, #4]
 8015ace:	eef7 6a00 	vmov.f32	s13, #112	@ 0x3f800000  1.0
 8015ad2:	f1bb 0f00 	cmp.w	fp, #0
 8015ad6:	dc03      	bgt.n	8015ae0 <_ZN8touchgfx8LCD16bpp51TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3e>
 8015ad8:	9a03      	ldr	r2, [sp, #12]
 8015ada:	2a00      	cmp	r2, #0
 8015adc:	f340 8159 	ble.w	8015d92 <_ZN8touchgfx8LCD16bpp51TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2f0>
 8015ae0:	9a11      	ldr	r2, [sp, #68]	@ 0x44
 8015ae2:	f9b9 7008 	ldrsh.w	r7, [r9, #8]
 8015ae6:	f9b9 600c 	ldrsh.w	r6, [r9, #12]
 8015aea:	f502 4000 	add.w	r0, r2, #32768	@ 0x8000
 8015aee:	9a12      	ldr	r2, [sp, #72]	@ 0x48
 8015af0:	f502 4100 	add.w	r1, r2, #32768	@ 0x8000
 8015af4:	2b00      	cmp	r3, #0
 8015af6:	dd0e      	ble.n	8015b16 <_ZN8touchgfx8LCD16bpp51TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x74>
 8015af8:	1402      	asrs	r2, r0, #16
 8015afa:	d405      	bmi.n	8015b08 <_ZN8touchgfx8LCD16bpp51TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x66>
 8015afc:	42ba      	cmp	r2, r7
 8015afe:	da03      	bge.n	8015b08 <_ZN8touchgfx8LCD16bpp51TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x66>
 8015b00:	140a      	asrs	r2, r1, #16
 8015b02:	d401      	bmi.n	8015b08 <_ZN8touchgfx8LCD16bpp51TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x66>
 8015b04:	42b2      	cmp	r2, r6
 8015b06:	db07      	blt.n	8015b18 <_ZN8touchgfx8LCD16bpp51TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x76>
 8015b08:	9a13      	ldr	r2, [sp, #76]	@ 0x4c
 8015b0a:	4410      	add	r0, r2
 8015b0c:	9a14      	ldr	r2, [sp, #80]	@ 0x50
 8015b0e:	3b01      	subs	r3, #1
 8015b10:	4411      	add	r1, r2
 8015b12:	3502      	adds	r5, #2
 8015b14:	e7ee      	b.n	8015af4 <_ZN8touchgfx8LCD16bpp51TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x52>
 8015b16:	d017      	beq.n	8015b48 <_ZN8touchgfx8LCD16bpp51TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xa6>
 8015b18:	9c13      	ldr	r4, [sp, #76]	@ 0x4c
 8015b1a:	1e5a      	subs	r2, r3, #1
 8015b1c:	fb04 0402 	mla	r4, r4, r2, r0
 8015b20:	1424      	asrs	r4, r4, #16
 8015b22:	d409      	bmi.n	8015b38 <_ZN8touchgfx8LCD16bpp51TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x96>
 8015b24:	42bc      	cmp	r4, r7
 8015b26:	da07      	bge.n	8015b38 <_ZN8touchgfx8LCD16bpp51TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x96>
 8015b28:	9c14      	ldr	r4, [sp, #80]	@ 0x50
 8015b2a:	fb04 1202 	mla	r2, r4, r2, r1
 8015b2e:	1412      	asrs	r2, r2, #16
 8015b30:	d402      	bmi.n	8015b38 <_ZN8touchgfx8LCD16bpp51TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x96>
 8015b32:	42b2      	cmp	r2, r6
 8015b34:	f2c0 80bf 	blt.w	8015cb6 <_ZN8touchgfx8LCD16bpp51TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x214>
 8015b38:	2700      	movs	r7, #0
 8015b3a:	19da      	adds	r2, r3, r7
 8015b3c:	2a00      	cmp	r2, #0
 8015b3e:	dc3e      	bgt.n	8015bbe <_ZN8touchgfx8LCD16bpp51TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x11c>
 8015b40:	ea23 73e3 	bic.w	r3, r3, r3, asr #31
 8015b44:	eb05 0543 	add.w	r5, r5, r3, lsl #1
 8015b48:	f1bb 0f00 	cmp.w	fp, #0
 8015b4c:	f340 8121 	ble.w	8015d92 <_ZN8touchgfx8LCD16bpp51TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2f0>
 8015b50:	ee30 0a04 	vadd.f32	s0, s0, s8
 8015b54:	ee70 0aa4 	vadd.f32	s1, s1, s9
 8015b58:	eec6 7a80 	vdiv.f32	s15, s13, s0
 8015b5c:	9b10      	ldr	r3, [sp, #64]	@ 0x40
 8015b5e:	f1bb 0b01 	subs.w	fp, fp, #1
 8015b62:	ee31 1a05 	vadd.f32	s2, s2, s10
 8015b66:	ee20 7aa7 	vmul.f32	s14, s1, s15
 8015b6a:	eeb0 6a62 	vmov.f32	s12, s5
 8015b6e:	ee61 7a27 	vmul.f32	s15, s2, s15
 8015b72:	eebe 6ac8 	vcvt.s32.f32	s12, s12, #16
 8015b76:	ee77 2a62 	vsub.f32	s5, s14, s5
 8015b7a:	ed8d 6a11 	vstr	s12, [sp, #68]	@ 0x44
 8015b7e:	eefe 2ac8 	vcvt.s32.f32	s5, s5, #16
 8015b82:	eeb0 6a43 	vmov.f32	s12, s6
 8015b86:	ee37 3ac3 	vsub.f32	s6, s15, s6
 8015b8a:	ee12 2a90 	vmov	r2, s5
 8015b8e:	eebe 3ac8 	vcvt.s32.f32	s6, s6, #16
 8015b92:	fb92 f3f3 	sdiv	r3, r2, r3
 8015b96:	ee13 2a10 	vmov	r2, s6
 8015b9a:	eebe 6ac8 	vcvt.s32.f32	s12, s12, #16
 8015b9e:	9313      	str	r3, [sp, #76]	@ 0x4c
 8015ba0:	9b10      	ldr	r3, [sp, #64]	@ 0x40
 8015ba2:	fb92 f3f3 	sdiv	r3, r2, r3
 8015ba6:	9a03      	ldr	r2, [sp, #12]
 8015ba8:	9314      	str	r3, [sp, #80]	@ 0x50
 8015baa:	ed8d 6a12 	vstr	s12, [sp, #72]	@ 0x48
 8015bae:	9b10      	ldr	r3, [sp, #64]	@ 0x40
 8015bb0:	eeb0 3a67 	vmov.f32	s6, s15
 8015bb4:	bf08      	it	eq
 8015bb6:	4613      	moveq	r3, r2
 8015bb8:	eef0 2a47 	vmov.f32	s5, s14
 8015bbc:	e789      	b.n	8015ad2 <_ZN8touchgfx8LCD16bpp51TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x30>
 8015bbe:	1406      	asrs	r6, r0, #16
 8015bc0:	d42d      	bmi.n	8015c1e <_ZN8touchgfx8LCD16bpp51TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x17c>
 8015bc2:	f8d9 4008 	ldr.w	r4, [r9, #8]
 8015bc6:	42b4      	cmp	r4, r6
 8015bc8:	dd29      	ble.n	8015c1e <_ZN8touchgfx8LCD16bpp51TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x17c>
 8015bca:	ea5f 4c21 	movs.w	ip, r1, asr #16
 8015bce:	d426      	bmi.n	8015c1e <_ZN8touchgfx8LCD16bpp51TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x17c>
 8015bd0:	f8d9 200c 	ldr.w	r2, [r9, #12]
 8015bd4:	4562      	cmp	r2, ip
 8015bd6:	dd22      	ble.n	8015c1e <_ZN8touchgfx8LCD16bpp51TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x17c>
 8015bd8:	b224      	sxth	r4, r4
 8015bda:	9a01      	ldr	r2, [sp, #4]
 8015bdc:	fb0c 6404 	mla	r4, ip, r4, r6
 8015be0:	f852 4024 	ldr.w	r4, [r2, r4, lsl #2]
 8015be4:	0e22      	lsrs	r2, r4, #24
 8015be6:	d01a      	beq.n	8015c1e <_ZN8touchgfx8LCD16bpp51TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x17c>
 8015be8:	9e04      	ldr	r6, [sp, #16]
 8015bea:	4372      	muls	r2, r6
 8015bec:	1c56      	adds	r6, r2, #1
 8015bee:	eb06 2222 	add.w	r2, r6, r2, asr #8
 8015bf2:	1212      	asrs	r2, r2, #8
 8015bf4:	0a26      	lsrs	r6, r4, #8
 8015bf6:	2aff      	cmp	r2, #255	@ 0xff
 8015bf8:	9605      	str	r6, [sp, #20]
 8015bfa:	d116      	bne.n	8015c2a <_ZN8touchgfx8LCD16bpp51TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x188>
 8015bfc:	f06f 0201 	mvn.w	r2, #1
 8015c00:	fb02 fc07 	mul.w	ip, r2, r7
 8015c04:	f426 66ff 	bic.w	r6, r6, #2040	@ 0x7f8
 8015c08:	0962      	lsrs	r2, r4, #5
 8015c0a:	f402 62fc 	and.w	r2, r2, #2016	@ 0x7e0
 8015c0e:	f026 0607 	bic.w	r6, r6, #7
 8015c12:	4316      	orrs	r6, r2
 8015c14:	f3c4 04c4 	ubfx	r4, r4, #3, #5
 8015c18:	4326      	orrs	r6, r4
 8015c1a:	f825 600c 	strh.w	r6, [r5, ip]
 8015c1e:	9a13      	ldr	r2, [sp, #76]	@ 0x4c
 8015c20:	4410      	add	r0, r2
 8015c22:	9a14      	ldr	r2, [sp, #80]	@ 0x50
 8015c24:	3f01      	subs	r7, #1
 8015c26:	4411      	add	r1, r2
 8015c28:	e787      	b.n	8015b3a <_ZN8touchgfx8LCD16bpp51TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x98>
 8015c2a:	f06f 0601 	mvn.w	r6, #1
 8015c2e:	437e      	muls	r6, r7
 8015c30:	fa1f fa82 	uxth.w	sl, r2
 8015c34:	f835 8006 	ldrh.w	r8, [r5, r6]
 8015c38:	9602      	str	r6, [sp, #8]
 8015c3a:	ea4f 2e28 	mov.w	lr, r8, asr #8
 8015c3e:	f3c4 4c07 	ubfx	ip, r4, #16, #8
 8015c42:	43d2      	mvns	r2, r2
 8015c44:	b2d2      	uxtb	r2, r2
 8015c46:	fb1c fc0a 	smulbb	ip, ip, sl
 8015c4a:	f00e 0ef8 	and.w	lr, lr, #248	@ 0xf8
 8015c4e:	fb0e ce02 	mla	lr, lr, r2, ip
 8015c52:	b2e4      	uxtb	r4, r4
 8015c54:	ea4f 0ce8 	mov.w	ip, r8, asr #3
 8015c58:	ea4f 08c8 	mov.w	r8, r8, lsl #3
 8015c5c:	f89d 6014 	ldrb.w	r6, [sp, #20]
 8015c60:	fa5f f888 	uxtb.w	r8, r8
 8015c64:	fb14 f40a 	smulbb	r4, r4, sl
 8015c68:	fb08 4402 	mla	r4, r8, r2, r4
 8015c6c:	fa1f fe8e 	uxth.w	lr, lr
 8015c70:	fb16 f60a 	smulbb	r6, r6, sl
 8015c74:	b2a4      	uxth	r4, r4
 8015c76:	f00c 0cfc 	and.w	ip, ip, #252	@ 0xfc
 8015c7a:	fb0c 6c02 	mla	ip, ip, r2, r6
 8015c7e:	f10e 0201 	add.w	r2, lr, #1
 8015c82:	1c66      	adds	r6, r4, #1
 8015c84:	eb02 2e1e 	add.w	lr, r2, lr, lsr #8
 8015c88:	eb06 2614 	add.w	r6, r6, r4, lsr #8
 8015c8c:	fa1f fc8c 	uxth.w	ip, ip
 8015c90:	f3c6 26c4 	ubfx	r6, r6, #11, #5
 8015c94:	f40e 4e78 	and.w	lr, lr, #63488	@ 0xf800
 8015c98:	ea46 0e0e 	orr.w	lr, r6, lr
 8015c9c:	f10c 0601 	add.w	r6, ip, #1
 8015ca0:	eb06 261c 	add.w	r6, r6, ip, lsr #8
 8015ca4:	0976      	lsrs	r6, r6, #5
 8015ca6:	f406 66fc 	and.w	r6, r6, #2016	@ 0x7e0
 8015caa:	9a02      	ldr	r2, [sp, #8]
 8015cac:	ea4e 0e06 	orr.w	lr, lr, r6
 8015cb0:	f825 e002 	strh.w	lr, [r5, r2]
 8015cb4:	e7b3      	b.n	8015c1e <_ZN8touchgfx8LCD16bpp51TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x17c>
 8015cb6:	f04f 0800 	mov.w	r8, #0
 8015cba:	eba3 0208 	sub.w	r2, r3, r8
 8015cbe:	2a00      	cmp	r2, #0
 8015cc0:	f77f af3e 	ble.w	8015b40 <_ZN8touchgfx8LCD16bpp51TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x9e>
 8015cc4:	f9b9 6008 	ldrsh.w	r6, [r9, #8]
 8015cc8:	1404      	asrs	r4, r0, #16
 8015cca:	140a      	asrs	r2, r1, #16
 8015ccc:	fb06 4202 	mla	r2, r6, r2, r4
 8015cd0:	9c01      	ldr	r4, [sp, #4]
 8015cd2:	f854 4022 	ldr.w	r4, [r4, r2, lsl #2]
 8015cd6:	0e22      	lsrs	r2, r4, #24
 8015cd8:	d016      	beq.n	8015d08 <_ZN8touchgfx8LCD16bpp51TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x266>
 8015cda:	9e04      	ldr	r6, [sp, #16]
 8015cdc:	4372      	muls	r2, r6
 8015cde:	1c56      	adds	r6, r2, #1
 8015ce0:	eb06 2222 	add.w	r2, r6, r2, asr #8
 8015ce4:	1212      	asrs	r2, r2, #8
 8015ce6:	2aff      	cmp	r2, #255	@ 0xff
 8015ce8:	ea4f 2614 	mov.w	r6, r4, lsr #8
 8015cec:	d113      	bne.n	8015d16 <_ZN8touchgfx8LCD16bpp51TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x274>
 8015cee:	0962      	lsrs	r2, r4, #5
 8015cf0:	f426 66ff 	bic.w	r6, r6, #2040	@ 0x7f8
 8015cf4:	f402 62fc 	and.w	r2, r2, #2016	@ 0x7e0
 8015cf8:	f026 0607 	bic.w	r6, r6, #7
 8015cfc:	4316      	orrs	r6, r2
 8015cfe:	f3c4 04c4 	ubfx	r4, r4, #3, #5
 8015d02:	4326      	orrs	r6, r4
 8015d04:	f825 6018 	strh.w	r6, [r5, r8, lsl #1]
 8015d08:	9a13      	ldr	r2, [sp, #76]	@ 0x4c
 8015d0a:	4410      	add	r0, r2
 8015d0c:	9a14      	ldr	r2, [sp, #80]	@ 0x50
 8015d0e:	f108 0801 	add.w	r8, r8, #1
 8015d12:	4411      	add	r1, r2
 8015d14:	e7d1      	b.n	8015cba <_ZN8touchgfx8LCD16bpp51TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x218>
 8015d16:	f835 e018 	ldrh.w	lr, [r5, r8, lsl #1]
 8015d1a:	fa1f fa82 	uxth.w	sl, r2
 8015d1e:	ea4f 2c2e 	mov.w	ip, lr, asr #8
 8015d22:	f3c4 4707 	ubfx	r7, r4, #16, #8
 8015d26:	43d2      	mvns	r2, r2
 8015d28:	b2d2      	uxtb	r2, r2
 8015d2a:	fb17 f70a 	smulbb	r7, r7, sl
 8015d2e:	f00c 0cf8 	and.w	ip, ip, #248	@ 0xf8
 8015d32:	fb0c 7c02 	mla	ip, ip, r2, r7
 8015d36:	b2e4      	uxtb	r4, r4
 8015d38:	ea4f 07ee 	mov.w	r7, lr, asr #3
 8015d3c:	ea4f 0ece 	mov.w	lr, lr, lsl #3
 8015d40:	fa5f fe8e 	uxtb.w	lr, lr
 8015d44:	fb14 f40a 	smulbb	r4, r4, sl
 8015d48:	fb0e 4402 	mla	r4, lr, r2, r4
 8015d4c:	b2f6      	uxtb	r6, r6
 8015d4e:	fa1f fc8c 	uxth.w	ip, ip
 8015d52:	fb16 f60a 	smulbb	r6, r6, sl
 8015d56:	b2a4      	uxth	r4, r4
 8015d58:	f007 07fc 	and.w	r7, r7, #252	@ 0xfc
 8015d5c:	fb07 6702 	mla	r7, r7, r2, r6
 8015d60:	f10c 0201 	add.w	r2, ip, #1
 8015d64:	1c66      	adds	r6, r4, #1
 8015d66:	eb02 2c1c 	add.w	ip, r2, ip, lsr #8
 8015d6a:	eb06 2614 	add.w	r6, r6, r4, lsr #8
 8015d6e:	b2bf      	uxth	r7, r7
 8015d70:	f3c6 26c4 	ubfx	r6, r6, #11, #5
 8015d74:	f40c 4c78 	and.w	ip, ip, #63488	@ 0xf800
 8015d78:	ea46 0c0c 	orr.w	ip, r6, ip
 8015d7c:	1c7e      	adds	r6, r7, #1
 8015d7e:	eb06 2617 	add.w	r6, r6, r7, lsr #8
 8015d82:	0976      	lsrs	r6, r6, #5
 8015d84:	f406 66fc 	and.w	r6, r6, #2016	@ 0x7e0
 8015d88:	ea4c 0c06 	orr.w	ip, ip, r6
 8015d8c:	f825 c018 	strh.w	ip, [r5, r8, lsl #1]
 8015d90:	e7ba      	b.n	8015d08 <_ZN8touchgfx8LCD16bpp51TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x266>
 8015d92:	b007      	add	sp, #28
 8015d94:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}

08015d98 <_ZN8touchgfx8LCD16bpp53TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff>:
 8015d98:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8015d9c:	b085      	sub	sp, #20
 8015d9e:	468b      	mov	fp, r1
 8015da0:	9813      	ldr	r0, [sp, #76]	@ 0x4c
 8015da2:	9203      	str	r2, [sp, #12]
 8015da4:	e9dd 2414 	ldrd	r2, r4, [sp, #80]	@ 0x50
 8015da8:	6841      	ldr	r1, [r0, #4]
 8015daa:	f8dd 8058 	ldr.w	r8, [sp, #88]	@ 0x58
 8015dae:	fb01 2404 	mla	r4, r1, r4, r2
 8015db2:	6802      	ldr	r2, [r0, #0]
 8015db4:	eb02 0444 	add.w	r4, r2, r4, lsl #1
 8015db8:	f8d8 2000 	ldr.w	r2, [r8]
 8015dbc:	9201      	str	r2, [sp, #4]
 8015dbe:	eef7 6a00 	vmov.f32	s13, #112	@ 0x3f800000  1.0
 8015dc2:	f1bb 0f00 	cmp.w	fp, #0
 8015dc6:	dc03      	bgt.n	8015dd0 <_ZN8touchgfx8LCD16bpp53TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x38>
 8015dc8:	9a03      	ldr	r2, [sp, #12]
 8015dca:	2a00      	cmp	r2, #0
 8015dcc:	f340 814f 	ble.w	801606e <_ZN8touchgfx8LCD16bpp53TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2d6>
 8015dd0:	9a0f      	ldr	r2, [sp, #60]	@ 0x3c
 8015dd2:	f9b8 7008 	ldrsh.w	r7, [r8, #8]
 8015dd6:	f9b8 600c 	ldrsh.w	r6, [r8, #12]
 8015dda:	f502 4100 	add.w	r1, r2, #32768	@ 0x8000
 8015dde:	9a10      	ldr	r2, [sp, #64]	@ 0x40
 8015de0:	f502 4200 	add.w	r2, r2, #32768	@ 0x8000
 8015de4:	2b00      	cmp	r3, #0
 8015de6:	dd0e      	ble.n	8015e06 <_ZN8touchgfx8LCD16bpp53TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x6e>
 8015de8:	1408      	asrs	r0, r1, #16
 8015dea:	d405      	bmi.n	8015df8 <_ZN8touchgfx8LCD16bpp53TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x60>
 8015dec:	42b8      	cmp	r0, r7
 8015dee:	da03      	bge.n	8015df8 <_ZN8touchgfx8LCD16bpp53TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x60>
 8015df0:	1410      	asrs	r0, r2, #16
 8015df2:	d401      	bmi.n	8015df8 <_ZN8touchgfx8LCD16bpp53TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x60>
 8015df4:	42b0      	cmp	r0, r6
 8015df6:	db07      	blt.n	8015e08 <_ZN8touchgfx8LCD16bpp53TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x70>
 8015df8:	9811      	ldr	r0, [sp, #68]	@ 0x44
 8015dfa:	4401      	add	r1, r0
 8015dfc:	9812      	ldr	r0, [sp, #72]	@ 0x48
 8015dfe:	3b01      	subs	r3, #1
 8015e00:	4402      	add	r2, r0
 8015e02:	3402      	adds	r4, #2
 8015e04:	e7ee      	b.n	8015de4 <_ZN8touchgfx8LCD16bpp53TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x4c>
 8015e06:	d017      	beq.n	8015e38 <_ZN8touchgfx8LCD16bpp53TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xa0>
 8015e08:	9d11      	ldr	r5, [sp, #68]	@ 0x44
 8015e0a:	1e58      	subs	r0, r3, #1
 8015e0c:	fb05 1500 	mla	r5, r5, r0, r1
 8015e10:	142d      	asrs	r5, r5, #16
 8015e12:	d409      	bmi.n	8015e28 <_ZN8touchgfx8LCD16bpp53TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x90>
 8015e14:	42bd      	cmp	r5, r7
 8015e16:	da07      	bge.n	8015e28 <_ZN8touchgfx8LCD16bpp53TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x90>
 8015e18:	9d12      	ldr	r5, [sp, #72]	@ 0x48
 8015e1a:	fb05 2000 	mla	r0, r5, r0, r2
 8015e1e:	1400      	asrs	r0, r0, #16
 8015e20:	d402      	bmi.n	8015e28 <_ZN8touchgfx8LCD16bpp53TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x90>
 8015e22:	42b0      	cmp	r0, r6
 8015e24:	f2c0 80ba 	blt.w	8015f9c <_ZN8touchgfx8LCD16bpp53TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x204>
 8015e28:	2600      	movs	r6, #0
 8015e2a:	1998      	adds	r0, r3, r6
 8015e2c:	2800      	cmp	r0, #0
 8015e2e:	dc3e      	bgt.n	8015eae <_ZN8touchgfx8LCD16bpp53TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x116>
 8015e30:	ea23 73e3 	bic.w	r3, r3, r3, asr #31
 8015e34:	eb04 0443 	add.w	r4, r4, r3, lsl #1
 8015e38:	f1bb 0f00 	cmp.w	fp, #0
 8015e3c:	f340 8117 	ble.w	801606e <_ZN8touchgfx8LCD16bpp53TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2d6>
 8015e40:	ee30 0a04 	vadd.f32	s0, s0, s8
 8015e44:	ee70 0aa4 	vadd.f32	s1, s1, s9
 8015e48:	eec6 7a80 	vdiv.f32	s15, s13, s0
 8015e4c:	9b0e      	ldr	r3, [sp, #56]	@ 0x38
 8015e4e:	f1bb 0b01 	subs.w	fp, fp, #1
 8015e52:	ee31 1a05 	vadd.f32	s2, s2, s10
 8015e56:	ee20 7aa7 	vmul.f32	s14, s1, s15
 8015e5a:	eeb0 6a62 	vmov.f32	s12, s5
 8015e5e:	ee61 7a27 	vmul.f32	s15, s2, s15
 8015e62:	eebe 6ac8 	vcvt.s32.f32	s12, s12, #16
 8015e66:	ee77 2a62 	vsub.f32	s5, s14, s5
 8015e6a:	ed8d 6a0f 	vstr	s12, [sp, #60]	@ 0x3c
 8015e6e:	eefe 2ac8 	vcvt.s32.f32	s5, s5, #16
 8015e72:	eeb0 6a43 	vmov.f32	s12, s6
 8015e76:	ee37 3ac3 	vsub.f32	s6, s15, s6
 8015e7a:	ee12 2a90 	vmov	r2, s5
 8015e7e:	eebe 3ac8 	vcvt.s32.f32	s6, s6, #16
 8015e82:	fb92 f3f3 	sdiv	r3, r2, r3
 8015e86:	ee13 2a10 	vmov	r2, s6
 8015e8a:	eebe 6ac8 	vcvt.s32.f32	s12, s12, #16
 8015e8e:	9311      	str	r3, [sp, #68]	@ 0x44
 8015e90:	9b0e      	ldr	r3, [sp, #56]	@ 0x38
 8015e92:	fb92 f3f3 	sdiv	r3, r2, r3
 8015e96:	9a03      	ldr	r2, [sp, #12]
 8015e98:	9312      	str	r3, [sp, #72]	@ 0x48
 8015e9a:	ed8d 6a10 	vstr	s12, [sp, #64]	@ 0x40
 8015e9e:	9b0e      	ldr	r3, [sp, #56]	@ 0x38
 8015ea0:	eeb0 3a67 	vmov.f32	s6, s15
 8015ea4:	bf08      	it	eq
 8015ea6:	4613      	moveq	r3, r2
 8015ea8:	eef0 2a47 	vmov.f32	s5, s14
 8015eac:	e789      	b.n	8015dc2 <_ZN8touchgfx8LCD16bpp53TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2a>
 8015eae:	140f      	asrs	r7, r1, #16
 8015eb0:	d424      	bmi.n	8015efc <_ZN8touchgfx8LCD16bpp53TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x164>
 8015eb2:	f8d8 5008 	ldr.w	r5, [r8, #8]
 8015eb6:	42bd      	cmp	r5, r7
 8015eb8:	dd20      	ble.n	8015efc <_ZN8touchgfx8LCD16bpp53TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x164>
 8015eba:	ea5f 4c22 	movs.w	ip, r2, asr #16
 8015ebe:	d41d      	bmi.n	8015efc <_ZN8touchgfx8LCD16bpp53TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x164>
 8015ec0:	f8d8 000c 	ldr.w	r0, [r8, #12]
 8015ec4:	4560      	cmp	r0, ip
 8015ec6:	dd19      	ble.n	8015efc <_ZN8touchgfx8LCD16bpp53TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x164>
 8015ec8:	b22d      	sxth	r5, r5
 8015eca:	fb0c 7505 	mla	r5, ip, r5, r7
 8015ece:	9801      	ldr	r0, [sp, #4]
 8015ed0:	f850 0025 	ldr.w	r0, [r0, r5, lsl #2]
 8015ed4:	0e07      	lsrs	r7, r0, #24
 8015ed6:	2fff      	cmp	r7, #255	@ 0xff
 8015ed8:	d116      	bne.n	8015f08 <_ZN8touchgfx8LCD16bpp53TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x170>
 8015eda:	f06f 0501 	mvn.w	r5, #1
 8015ede:	fb05 f706 	mul.w	r7, r5, r6
 8015ee2:	f2a5 75fe 	subw	r5, r5, #2046	@ 0x7fe
 8015ee6:	ea05 2c10 	and.w	ip, r5, r0, lsr #8
 8015eea:	0945      	lsrs	r5, r0, #5
 8015eec:	f405 65fc 	and.w	r5, r5, #2016	@ 0x7e0
 8015ef0:	ea4c 0505 	orr.w	r5, ip, r5
 8015ef4:	f3c0 00c4 	ubfx	r0, r0, #3, #5
 8015ef8:	4305      	orrs	r5, r0
 8015efa:	53e5      	strh	r5, [r4, r7]
 8015efc:	9811      	ldr	r0, [sp, #68]	@ 0x44
 8015efe:	4401      	add	r1, r0
 8015f00:	9812      	ldr	r0, [sp, #72]	@ 0x48
 8015f02:	3e01      	subs	r6, #1
 8015f04:	4402      	add	r2, r0
 8015f06:	e790      	b.n	8015e2a <_ZN8touchgfx8LCD16bpp53TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x92>
 8015f08:	b2fd      	uxtb	r5, r7
 8015f0a:	2f00      	cmp	r7, #0
 8015f0c:	d0f6      	beq.n	8015efc <_ZN8touchgfx8LCD16bpp53TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x164>
 8015f0e:	f06f 0701 	mvn.w	r7, #1
 8015f12:	4377      	muls	r7, r6
 8015f14:	fa1f f985 	uxth.w	r9, r5
 8015f18:	f834 e007 	ldrh.w	lr, [r4, r7]
 8015f1c:	9702      	str	r7, [sp, #8]
 8015f1e:	ea4f 2c2e 	mov.w	ip, lr, asr #8
 8015f22:	f3c0 4707 	ubfx	r7, r0, #16, #8
 8015f26:	43ed      	mvns	r5, r5
 8015f28:	b2ed      	uxtb	r5, r5
 8015f2a:	fb17 f709 	smulbb	r7, r7, r9
 8015f2e:	f00c 0cf8 	and.w	ip, ip, #248	@ 0xf8
 8015f32:	fb0c 7c05 	mla	ip, ip, r5, r7
 8015f36:	f3c0 2a07 	ubfx	sl, r0, #8, #8
 8015f3a:	ea4f 07ee 	mov.w	r7, lr, asr #3
 8015f3e:	b2c0      	uxtb	r0, r0
 8015f40:	ea4f 0ece 	mov.w	lr, lr, lsl #3
 8015f44:	fa5f fe8e 	uxtb.w	lr, lr
 8015f48:	fb10 f009 	smulbb	r0, r0, r9
 8015f4c:	fb0e 0005 	mla	r0, lr, r5, r0
 8015f50:	b280      	uxth	r0, r0
 8015f52:	fa1f fc8c 	uxth.w	ip, ip
 8015f56:	fb1a fa09 	smulbb	sl, sl, r9
 8015f5a:	f007 07fc 	and.w	r7, r7, #252	@ 0xfc
 8015f5e:	fb07 a705 	mla	r7, r7, r5, sl
 8015f62:	f100 0a01 	add.w	sl, r0, #1
 8015f66:	f10c 0501 	add.w	r5, ip, #1
 8015f6a:	eb0a 2a10 	add.w	sl, sl, r0, lsr #8
 8015f6e:	eb05 2c1c 	add.w	ip, r5, ip, lsr #8
 8015f72:	b2bf      	uxth	r7, r7
 8015f74:	f3ca 2ac4 	ubfx	sl, sl, #11, #5
 8015f78:	f40c 4c78 	and.w	ip, ip, #63488	@ 0xf800
 8015f7c:	ea4a 0c0c 	orr.w	ip, sl, ip
 8015f80:	f107 0a01 	add.w	sl, r7, #1
 8015f84:	eb0a 2a17 	add.w	sl, sl, r7, lsr #8
 8015f88:	ea4f 1a5a 	mov.w	sl, sl, lsr #5
 8015f8c:	f40a 6afc 	and.w	sl, sl, #2016	@ 0x7e0
 8015f90:	9802      	ldr	r0, [sp, #8]
 8015f92:	ea4c 0c0a 	orr.w	ip, ip, sl
 8015f96:	f824 c000 	strh.w	ip, [r4, r0]
 8015f9a:	e7af      	b.n	8015efc <_ZN8touchgfx8LCD16bpp53TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x164>
 8015f9c:	f04f 0e00 	mov.w	lr, #0
 8015fa0:	eba3 000e 	sub.w	r0, r3, lr
 8015fa4:	2800      	cmp	r0, #0
 8015fa6:	f77f af43 	ble.w	8015e30 <_ZN8touchgfx8LCD16bpp53TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x98>
 8015faa:	f9b8 6008 	ldrsh.w	r6, [r8, #8]
 8015fae:	140d      	asrs	r5, r1, #16
 8015fb0:	1410      	asrs	r0, r2, #16
 8015fb2:	fb06 5000 	mla	r0, r6, r0, r5
 8015fb6:	9d01      	ldr	r5, [sp, #4]
 8015fb8:	f855 5020 	ldr.w	r5, [r5, r0, lsl #2]
 8015fbc:	0e2e      	lsrs	r6, r5, #24
 8015fbe:	2eff      	cmp	r6, #255	@ 0xff
 8015fc0:	d112      	bne.n	8015fe8 <_ZN8touchgfx8LCD16bpp53TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x250>
 8015fc2:	482c      	ldr	r0, [pc, #176]	@ (8016074 <_ZN8touchgfx8LCD16bpp53TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2dc>)
 8015fc4:	ea00 2615 	and.w	r6, r0, r5, lsr #8
 8015fc8:	0968      	lsrs	r0, r5, #5
 8015fca:	f400 60fc 	and.w	r0, r0, #2016	@ 0x7e0
 8015fce:	4330      	orrs	r0, r6
 8015fd0:	f3c5 05c4 	ubfx	r5, r5, #3, #5
 8015fd4:	4328      	orrs	r0, r5
 8015fd6:	f824 001e 	strh.w	r0, [r4, lr, lsl #1]
 8015fda:	9811      	ldr	r0, [sp, #68]	@ 0x44
 8015fdc:	4401      	add	r1, r0
 8015fde:	9812      	ldr	r0, [sp, #72]	@ 0x48
 8015fe0:	f10e 0e01 	add.w	lr, lr, #1
 8015fe4:	4402      	add	r2, r0
 8015fe6:	e7db      	b.n	8015fa0 <_ZN8touchgfx8LCD16bpp53TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x208>
 8015fe8:	b2f0      	uxtb	r0, r6
 8015fea:	2e00      	cmp	r6, #0
 8015fec:	d0f5      	beq.n	8015fda <_ZN8touchgfx8LCD16bpp53TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x242>
 8015fee:	f834 c01e 	ldrh.w	ip, [r4, lr, lsl #1]
 8015ff2:	fa1f f980 	uxth.w	r9, r0
 8015ff6:	ea4f 272c 	mov.w	r7, ip, asr #8
 8015ffa:	f3c5 4607 	ubfx	r6, r5, #16, #8
 8015ffe:	43c0      	mvns	r0, r0
 8016000:	b2c0      	uxtb	r0, r0
 8016002:	fb16 f609 	smulbb	r6, r6, r9
 8016006:	f007 07f8 	and.w	r7, r7, #248	@ 0xf8
 801600a:	fb07 6700 	mla	r7, r7, r0, r6
 801600e:	f3c5 2a07 	ubfx	sl, r5, #8, #8
 8016012:	ea4f 06ec 	mov.w	r6, ip, asr #3
 8016016:	b2ed      	uxtb	r5, r5
 8016018:	ea4f 0ccc 	mov.w	ip, ip, lsl #3
 801601c:	fa5f fc8c 	uxtb.w	ip, ip
 8016020:	fb15 f509 	smulbb	r5, r5, r9
 8016024:	fb0c 5500 	mla	r5, ip, r0, r5
 8016028:	b2bf      	uxth	r7, r7
 801602a:	fb1a fa09 	smulbb	sl, sl, r9
 801602e:	b2ad      	uxth	r5, r5
 8016030:	f006 06fc 	and.w	r6, r6, #252	@ 0xfc
 8016034:	fb06 a600 	mla	r6, r6, r0, sl
 8016038:	1c78      	adds	r0, r7, #1
 801603a:	f105 0a01 	add.w	sl, r5, #1
 801603e:	eb00 2717 	add.w	r7, r0, r7, lsr #8
 8016042:	eb0a 2a15 	add.w	sl, sl, r5, lsr #8
 8016046:	b2b6      	uxth	r6, r6
 8016048:	f3ca 2ac4 	ubfx	sl, sl, #11, #5
 801604c:	f407 4778 	and.w	r7, r7, #63488	@ 0xf800
 8016050:	ea4a 0707 	orr.w	r7, sl, r7
 8016054:	f106 0a01 	add.w	sl, r6, #1
 8016058:	eb0a 2a16 	add.w	sl, sl, r6, lsr #8
 801605c:	ea4f 1a5a 	mov.w	sl, sl, lsr #5
 8016060:	f40a 6afc 	and.w	sl, sl, #2016	@ 0x7e0
 8016064:	ea47 070a 	orr.w	r7, r7, sl
 8016068:	f824 701e 	strh.w	r7, [r4, lr, lsl #1]
 801606c:	e7b5      	b.n	8015fda <_ZN8touchgfx8LCD16bpp53TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x242>
 801606e:	b005      	add	sp, #20
 8016070:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 8016074:	fffff800 	.word	0xfffff800

08016078 <_ZN8touchgfx8LCD16bpp35TextureMapper_A4_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff>:
 8016078:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 801607c:	b087      	sub	sp, #28
 801607e:	468b      	mov	fp, r1
 8016080:	9815      	ldr	r0, [sp, #84]	@ 0x54
 8016082:	9203      	str	r2, [sp, #12]
 8016084:	f89d 2064 	ldrb.w	r2, [sp, #100]	@ 0x64
 8016088:	9204      	str	r2, [sp, #16]
 801608a:	e9dd 2416 	ldrd	r2, r4, [sp, #88]	@ 0x58
 801608e:	6841      	ldr	r1, [r0, #4]
 8016090:	f8dd 9060 	ldr.w	r9, [sp, #96]	@ 0x60
 8016094:	fb01 2404 	mla	r4, r1, r4, r2
 8016098:	6802      	ldr	r2, [r0, #0]
 801609a:	eb02 0444 	add.w	r4, r2, r4, lsl #1
 801609e:	f8d9 2008 	ldr.w	r2, [r9, #8]
 80160a2:	3201      	adds	r2, #1
 80160a4:	f022 0201 	bic.w	r2, r2, #1
 80160a8:	9200      	str	r2, [sp, #0]
 80160aa:	f8d9 2000 	ldr.w	r2, [r9]
 80160ae:	9201      	str	r2, [sp, #4]
 80160b0:	eef7 6a00 	vmov.f32	s13, #112	@ 0x3f800000  1.0
 80160b4:	f1bb 0f00 	cmp.w	fp, #0
 80160b8:	dc03      	bgt.n	80160c2 <_ZN8touchgfx8LCD16bpp35TextureMapper_A4_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x4a>
 80160ba:	9a03      	ldr	r2, [sp, #12]
 80160bc:	2a00      	cmp	r2, #0
 80160be:	f340 8169 	ble.w	8016394 <_ZN8touchgfx8LCD16bpp35TextureMapper_A4_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x31c>
 80160c2:	9a11      	ldr	r2, [sp, #68]	@ 0x44
 80160c4:	f9b9 7008 	ldrsh.w	r7, [r9, #8]
 80160c8:	f9b9 600c 	ldrsh.w	r6, [r9, #12]
 80160cc:	f502 4000 	add.w	r0, r2, #32768	@ 0x8000
 80160d0:	9a12      	ldr	r2, [sp, #72]	@ 0x48
 80160d2:	f502 4100 	add.w	r1, r2, #32768	@ 0x8000
 80160d6:	2b00      	cmp	r3, #0
 80160d8:	dd0e      	ble.n	80160f8 <_ZN8touchgfx8LCD16bpp35TextureMapper_A4_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x80>
 80160da:	1402      	asrs	r2, r0, #16
 80160dc:	d405      	bmi.n	80160ea <_ZN8touchgfx8LCD16bpp35TextureMapper_A4_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x72>
 80160de:	42ba      	cmp	r2, r7
 80160e0:	da03      	bge.n	80160ea <_ZN8touchgfx8LCD16bpp35TextureMapper_A4_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x72>
 80160e2:	140a      	asrs	r2, r1, #16
 80160e4:	d401      	bmi.n	80160ea <_ZN8touchgfx8LCD16bpp35TextureMapper_A4_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x72>
 80160e6:	42b2      	cmp	r2, r6
 80160e8:	db07      	blt.n	80160fa <_ZN8touchgfx8LCD16bpp35TextureMapper_A4_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x82>
 80160ea:	9a13      	ldr	r2, [sp, #76]	@ 0x4c
 80160ec:	4410      	add	r0, r2
 80160ee:	9a14      	ldr	r2, [sp, #80]	@ 0x50
 80160f0:	3b01      	subs	r3, #1
 80160f2:	4411      	add	r1, r2
 80160f4:	3402      	adds	r4, #2
 80160f6:	e7ee      	b.n	80160d6 <_ZN8touchgfx8LCD16bpp35TextureMapper_A4_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x5e>
 80160f8:	d017      	beq.n	801612a <_ZN8touchgfx8LCD16bpp35TextureMapper_A4_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xb2>
 80160fa:	9d13      	ldr	r5, [sp, #76]	@ 0x4c
 80160fc:	1e5a      	subs	r2, r3, #1
 80160fe:	fb05 0502 	mla	r5, r5, r2, r0
 8016102:	142d      	asrs	r5, r5, #16
 8016104:	d409      	bmi.n	801611a <_ZN8touchgfx8LCD16bpp35TextureMapper_A4_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xa2>
 8016106:	42bd      	cmp	r5, r7
 8016108:	da07      	bge.n	801611a <_ZN8touchgfx8LCD16bpp35TextureMapper_A4_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xa2>
 801610a:	9d14      	ldr	r5, [sp, #80]	@ 0x50
 801610c:	fb05 1202 	mla	r2, r5, r2, r1
 8016110:	1412      	asrs	r2, r2, #16
 8016112:	d402      	bmi.n	801611a <_ZN8touchgfx8LCD16bpp35TextureMapper_A4_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xa2>
 8016114:	42b2      	cmp	r2, r6
 8016116:	f2c0 80c7 	blt.w	80162a8 <_ZN8touchgfx8LCD16bpp35TextureMapper_A4_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x230>
 801611a:	2700      	movs	r7, #0
 801611c:	19da      	adds	r2, r3, r7
 801611e:	2a00      	cmp	r2, #0
 8016120:	dc3e      	bgt.n	80161a0 <_ZN8touchgfx8LCD16bpp35TextureMapper_A4_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x128>
 8016122:	ea23 73e3 	bic.w	r3, r3, r3, asr #31
 8016126:	eb04 0443 	add.w	r4, r4, r3, lsl #1
 801612a:	f1bb 0f00 	cmp.w	fp, #0
 801612e:	f340 8131 	ble.w	8016394 <_ZN8touchgfx8LCD16bpp35TextureMapper_A4_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x31c>
 8016132:	ee30 0a04 	vadd.f32	s0, s0, s8
 8016136:	ee70 0aa4 	vadd.f32	s1, s1, s9
 801613a:	eec6 7a80 	vdiv.f32	s15, s13, s0
 801613e:	9b10      	ldr	r3, [sp, #64]	@ 0x40
 8016140:	f1bb 0b01 	subs.w	fp, fp, #1
 8016144:	ee31 1a05 	vadd.f32	s2, s2, s10
 8016148:	ee20 7aa7 	vmul.f32	s14, s1, s15
 801614c:	eeb0 6a62 	vmov.f32	s12, s5
 8016150:	ee61 7a27 	vmul.f32	s15, s2, s15
 8016154:	eebe 6ac8 	vcvt.s32.f32	s12, s12, #16
 8016158:	ee77 2a62 	vsub.f32	s5, s14, s5
 801615c:	ed8d 6a11 	vstr	s12, [sp, #68]	@ 0x44
 8016160:	eefe 2ac8 	vcvt.s32.f32	s5, s5, #16
 8016164:	eeb0 6a43 	vmov.f32	s12, s6
 8016168:	ee37 3ac3 	vsub.f32	s6, s15, s6
 801616c:	ee12 2a90 	vmov	r2, s5
 8016170:	eebe 3ac8 	vcvt.s32.f32	s6, s6, #16
 8016174:	fb92 f3f3 	sdiv	r3, r2, r3
 8016178:	ee13 2a10 	vmov	r2, s6
 801617c:	eebe 6ac8 	vcvt.s32.f32	s12, s12, #16
 8016180:	9313      	str	r3, [sp, #76]	@ 0x4c
 8016182:	9b10      	ldr	r3, [sp, #64]	@ 0x40
 8016184:	fb92 f3f3 	sdiv	r3, r2, r3
 8016188:	9a03      	ldr	r2, [sp, #12]
 801618a:	9314      	str	r3, [sp, #80]	@ 0x50
 801618c:	ed8d 6a12 	vstr	s12, [sp, #72]	@ 0x48
 8016190:	9b10      	ldr	r3, [sp, #64]	@ 0x40
 8016192:	eeb0 3a67 	vmov.f32	s6, s15
 8016196:	bf08      	it	eq
 8016198:	4613      	moveq	r3, r2
 801619a:	eef0 2a47 	vmov.f32	s5, s14
 801619e:	e789      	b.n	80160b4 <_ZN8touchgfx8LCD16bpp35TextureMapper_A4_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3c>
 80161a0:	1405      	asrs	r5, r0, #16
 80161a2:	d435      	bmi.n	8016210 <_ZN8touchgfx8LCD16bpp35TextureMapper_A4_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x198>
 80161a4:	f8d9 2008 	ldr.w	r2, [r9, #8]
 80161a8:	42aa      	cmp	r2, r5
 80161aa:	dd31      	ble.n	8016210 <_ZN8touchgfx8LCD16bpp35TextureMapper_A4_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x198>
 80161ac:	140e      	asrs	r6, r1, #16
 80161ae:	d42f      	bmi.n	8016210 <_ZN8touchgfx8LCD16bpp35TextureMapper_A4_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x198>
 80161b0:	f8d9 200c 	ldr.w	r2, [r9, #12]
 80161b4:	42b2      	cmp	r2, r6
 80161b6:	dd2b      	ble.n	8016210 <_ZN8touchgfx8LCD16bpp35TextureMapper_A4_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x198>
 80161b8:	9a00      	ldr	r2, [sp, #0]
 80161ba:	fb06 5502 	mla	r5, r6, r2, r5
 80161be:	086a      	lsrs	r2, r5, #1
 80161c0:	9e01      	ldr	r6, [sp, #4]
 80161c2:	5cb2      	ldrb	r2, [r6, r2]
 80161c4:	07ee      	lsls	r6, r5, #31
 80161c6:	bf54      	ite	pl
 80161c8:	f002 020f 	andpl.w	r2, r2, #15
 80161cc:	1112      	asrmi	r2, r2, #4
 80161ce:	eb02 1202 	add.w	r2, r2, r2, lsl #4
 80161d2:	b2d2      	uxtb	r2, r2
 80161d4:	b1e2      	cbz	r2, 8016210 <_ZN8touchgfx8LCD16bpp35TextureMapper_A4_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x198>
 80161d6:	9d04      	ldr	r5, [sp, #16]
 80161d8:	436a      	muls	r2, r5
 80161da:	1c55      	adds	r5, r2, #1
 80161dc:	eb05 2222 	add.w	r2, r5, r2, asr #8
 80161e0:	4d6e      	ldr	r5, [pc, #440]	@ (801639c <_ZN8touchgfx8LCD16bpp35TextureMapper_A4_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x324>)
 80161e2:	682d      	ldr	r5, [r5, #0]
 80161e4:	1212      	asrs	r2, r2, #8
 80161e6:	0a2e      	lsrs	r6, r5, #8
 80161e8:	2aff      	cmp	r2, #255	@ 0xff
 80161ea:	9605      	str	r6, [sp, #20]
 80161ec:	d116      	bne.n	801621c <_ZN8touchgfx8LCD16bpp35TextureMapper_A4_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1a4>
 80161ee:	f06f 0201 	mvn.w	r2, #1
 80161f2:	fb02 fc07 	mul.w	ip, r2, r7
 80161f6:	f426 66ff 	bic.w	r6, r6, #2040	@ 0x7f8
 80161fa:	096a      	lsrs	r2, r5, #5
 80161fc:	f402 62fc 	and.w	r2, r2, #2016	@ 0x7e0
 8016200:	f026 0607 	bic.w	r6, r6, #7
 8016204:	4316      	orrs	r6, r2
 8016206:	f3c5 05c4 	ubfx	r5, r5, #3, #5
 801620a:	432e      	orrs	r6, r5
 801620c:	f824 600c 	strh.w	r6, [r4, ip]
 8016210:	9a13      	ldr	r2, [sp, #76]	@ 0x4c
 8016212:	4410      	add	r0, r2
 8016214:	9a14      	ldr	r2, [sp, #80]	@ 0x50
 8016216:	3f01      	subs	r7, #1
 8016218:	4411      	add	r1, r2
 801621a:	e77f      	b.n	801611c <_ZN8touchgfx8LCD16bpp35TextureMapper_A4_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xa4>
 801621c:	f06f 0601 	mvn.w	r6, #1
 8016220:	437e      	muls	r6, r7
 8016222:	fa1f fa82 	uxth.w	sl, r2
 8016226:	f834 8006 	ldrh.w	r8, [r4, r6]
 801622a:	9602      	str	r6, [sp, #8]
 801622c:	ea4f 2e28 	mov.w	lr, r8, asr #8
 8016230:	f3c5 4c07 	ubfx	ip, r5, #16, #8
 8016234:	43d2      	mvns	r2, r2
 8016236:	b2d2      	uxtb	r2, r2
 8016238:	fb1c fc0a 	smulbb	ip, ip, sl
 801623c:	f00e 0ef8 	and.w	lr, lr, #248	@ 0xf8
 8016240:	fb0e ce02 	mla	lr, lr, r2, ip
 8016244:	b2ed      	uxtb	r5, r5
 8016246:	ea4f 0ce8 	mov.w	ip, r8, asr #3
 801624a:	ea4f 08c8 	mov.w	r8, r8, lsl #3
 801624e:	f89d 6014 	ldrb.w	r6, [sp, #20]
 8016252:	fa5f f888 	uxtb.w	r8, r8
 8016256:	fb15 f50a 	smulbb	r5, r5, sl
 801625a:	fb08 5502 	mla	r5, r8, r2, r5
 801625e:	fa1f fe8e 	uxth.w	lr, lr
 8016262:	fb16 f60a 	smulbb	r6, r6, sl
 8016266:	b2ad      	uxth	r5, r5
 8016268:	f00c 0cfc 	and.w	ip, ip, #252	@ 0xfc
 801626c:	fb0c 6c02 	mla	ip, ip, r2, r6
 8016270:	f10e 0201 	add.w	r2, lr, #1
 8016274:	1c6e      	adds	r6, r5, #1
 8016276:	eb02 2e1e 	add.w	lr, r2, lr, lsr #8
 801627a:	eb06 2615 	add.w	r6, r6, r5, lsr #8
 801627e:	fa1f fc8c 	uxth.w	ip, ip
 8016282:	f3c6 26c4 	ubfx	r6, r6, #11, #5
 8016286:	f40e 4e78 	and.w	lr, lr, #63488	@ 0xf800
 801628a:	ea46 0e0e 	orr.w	lr, r6, lr
 801628e:	f10c 0601 	add.w	r6, ip, #1
 8016292:	eb06 261c 	add.w	r6, r6, ip, lsr #8
 8016296:	0976      	lsrs	r6, r6, #5
 8016298:	f406 66fc 	and.w	r6, r6, #2016	@ 0x7e0
 801629c:	9a02      	ldr	r2, [sp, #8]
 801629e:	ea4e 0e06 	orr.w	lr, lr, r6
 80162a2:	f824 e002 	strh.w	lr, [r4, r2]
 80162a6:	e7b3      	b.n	8016210 <_ZN8touchgfx8LCD16bpp35TextureMapper_A4_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x198>
 80162a8:	f04f 0800 	mov.w	r8, #0
 80162ac:	eba3 0208 	sub.w	r2, r3, r8
 80162b0:	2a00      	cmp	r2, #0
 80162b2:	f77f af36 	ble.w	8016122 <_ZN8touchgfx8LCD16bpp35TextureMapper_A4_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xaa>
 80162b6:	9e00      	ldr	r6, [sp, #0]
 80162b8:	1402      	asrs	r2, r0, #16
 80162ba:	140d      	asrs	r5, r1, #16
 80162bc:	fb06 2505 	mla	r5, r6, r5, r2
 80162c0:	086a      	lsrs	r2, r5, #1
 80162c2:	9e01      	ldr	r6, [sp, #4]
 80162c4:	5cb2      	ldrb	r2, [r6, r2]
 80162c6:	07ed      	lsls	r5, r5, #31
 80162c8:	bf54      	ite	pl
 80162ca:	f002 020f 	andpl.w	r2, r2, #15
 80162ce:	1112      	asrmi	r2, r2, #4
 80162d0:	eb02 1202 	add.w	r2, r2, r2, lsl #4
 80162d4:	b2d2      	uxtb	r2, r2
 80162d6:	b1c2      	cbz	r2, 801630a <_ZN8touchgfx8LCD16bpp35TextureMapper_A4_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x292>
 80162d8:	9d04      	ldr	r5, [sp, #16]
 80162da:	436a      	muls	r2, r5
 80162dc:	1c55      	adds	r5, r2, #1
 80162de:	eb05 2222 	add.w	r2, r5, r2, asr #8
 80162e2:	4d2e      	ldr	r5, [pc, #184]	@ (801639c <_ZN8touchgfx8LCD16bpp35TextureMapper_A4_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x324>)
 80162e4:	1212      	asrs	r2, r2, #8
 80162e6:	682e      	ldr	r6, [r5, #0]
 80162e8:	2aff      	cmp	r2, #255	@ 0xff
 80162ea:	ea4f 2516 	mov.w	r5, r6, lsr #8
 80162ee:	d113      	bne.n	8016318 <_ZN8touchgfx8LCD16bpp35TextureMapper_A4_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2a0>
 80162f0:	0972      	lsrs	r2, r6, #5
 80162f2:	f425 65ff 	bic.w	r5, r5, #2040	@ 0x7f8
 80162f6:	f402 62fc 	and.w	r2, r2, #2016	@ 0x7e0
 80162fa:	f025 0507 	bic.w	r5, r5, #7
 80162fe:	4315      	orrs	r5, r2
 8016300:	f3c6 06c4 	ubfx	r6, r6, #3, #5
 8016304:	4335      	orrs	r5, r6
 8016306:	f824 5018 	strh.w	r5, [r4, r8, lsl #1]
 801630a:	9a13      	ldr	r2, [sp, #76]	@ 0x4c
 801630c:	4410      	add	r0, r2
 801630e:	9a14      	ldr	r2, [sp, #80]	@ 0x50
 8016310:	f108 0801 	add.w	r8, r8, #1
 8016314:	4411      	add	r1, r2
 8016316:	e7c9      	b.n	80162ac <_ZN8touchgfx8LCD16bpp35TextureMapper_A4_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x234>
 8016318:	f834 e018 	ldrh.w	lr, [r4, r8, lsl #1]
 801631c:	fa1f fa82 	uxth.w	sl, r2
 8016320:	ea4f 2c2e 	mov.w	ip, lr, asr #8
 8016324:	f3c6 4707 	ubfx	r7, r6, #16, #8
 8016328:	43d2      	mvns	r2, r2
 801632a:	b2d2      	uxtb	r2, r2
 801632c:	fb17 f70a 	smulbb	r7, r7, sl
 8016330:	f00c 0cf8 	and.w	ip, ip, #248	@ 0xf8
 8016334:	fb0c 7c02 	mla	ip, ip, r2, r7
 8016338:	b2f6      	uxtb	r6, r6
 801633a:	ea4f 07ee 	mov.w	r7, lr, asr #3
 801633e:	ea4f 0ece 	mov.w	lr, lr, lsl #3
 8016342:	fa5f fe8e 	uxtb.w	lr, lr
 8016346:	fb16 f60a 	smulbb	r6, r6, sl
 801634a:	fb0e 6602 	mla	r6, lr, r2, r6
 801634e:	b2ed      	uxtb	r5, r5
 8016350:	fa1f fc8c 	uxth.w	ip, ip
 8016354:	fb15 f50a 	smulbb	r5, r5, sl
 8016358:	b2b6      	uxth	r6, r6
 801635a:	f007 07fc 	and.w	r7, r7, #252	@ 0xfc
 801635e:	fb07 5702 	mla	r7, r7, r2, r5
 8016362:	f10c 0201 	add.w	r2, ip, #1
 8016366:	1c75      	adds	r5, r6, #1
 8016368:	eb02 2c1c 	add.w	ip, r2, ip, lsr #8
 801636c:	eb05 2516 	add.w	r5, r5, r6, lsr #8
 8016370:	b2bf      	uxth	r7, r7
 8016372:	f3c5 25c4 	ubfx	r5, r5, #11, #5
 8016376:	f40c 4c78 	and.w	ip, ip, #63488	@ 0xf800
 801637a:	ea45 0c0c 	orr.w	ip, r5, ip
 801637e:	1c7d      	adds	r5, r7, #1
 8016380:	eb05 2517 	add.w	r5, r5, r7, lsr #8
 8016384:	096d      	lsrs	r5, r5, #5
 8016386:	f405 65fc 	and.w	r5, r5, #2016	@ 0x7e0
 801638a:	ea4c 0c05 	orr.w	ip, ip, r5
 801638e:	f824 c018 	strh.w	ip, [r4, r8, lsl #1]
 8016392:	e7ba      	b.n	801630a <_ZN8touchgfx8LCD16bpp35TextureMapper_A4_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x292>
 8016394:	b007      	add	sp, #28
 8016396:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 801639a:	bf00      	nop
 801639c:	20002dc4 	.word	0x20002dc4

080163a0 <_ZN8touchgfx8LCD16bpp37TextureMapper_A4_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff>:
 80163a0:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 80163a4:	b087      	sub	sp, #28
 80163a6:	f8df 830c 	ldr.w	r8, [pc, #780]	@ 80166b4 <_ZN8touchgfx8LCD16bpp37TextureMapper_A4_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x314>
 80163aa:	9815      	ldr	r0, [sp, #84]	@ 0x54
 80163ac:	9205      	str	r2, [sp, #20]
 80163ae:	e9dd 2416 	ldrd	r2, r4, [sp, #88]	@ 0x58
 80163b2:	9101      	str	r1, [sp, #4]
 80163b4:	6841      	ldr	r1, [r0, #4]
 80163b6:	f8dd b060 	ldr.w	fp, [sp, #96]	@ 0x60
 80163ba:	fb01 2404 	mla	r4, r1, r4, r2
 80163be:	6802      	ldr	r2, [r0, #0]
 80163c0:	eb02 0444 	add.w	r4, r2, r4, lsl #1
 80163c4:	f8db 2008 	ldr.w	r2, [fp, #8]
 80163c8:	3201      	adds	r2, #1
 80163ca:	f022 0201 	bic.w	r2, r2, #1
 80163ce:	9202      	str	r2, [sp, #8]
 80163d0:	f8db 2000 	ldr.w	r2, [fp]
 80163d4:	9203      	str	r2, [sp, #12]
 80163d6:	eef7 6a00 	vmov.f32	s13, #112	@ 0x3f800000  1.0
 80163da:	9a01      	ldr	r2, [sp, #4]
 80163dc:	2a00      	cmp	r2, #0
 80163de:	dc03      	bgt.n	80163e8 <_ZN8touchgfx8LCD16bpp37TextureMapper_A4_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x48>
 80163e0:	9a05      	ldr	r2, [sp, #20]
 80163e2:	2a00      	cmp	r2, #0
 80163e4:	f340 8162 	ble.w	80166ac <_ZN8touchgfx8LCD16bpp37TextureMapper_A4_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x30c>
 80163e8:	9a11      	ldr	r2, [sp, #68]	@ 0x44
 80163ea:	f9bb 7008 	ldrsh.w	r7, [fp, #8]
 80163ee:	f9bb 600c 	ldrsh.w	r6, [fp, #12]
 80163f2:	f502 4000 	add.w	r0, r2, #32768	@ 0x8000
 80163f6:	9a12      	ldr	r2, [sp, #72]	@ 0x48
 80163f8:	f502 4100 	add.w	r1, r2, #32768	@ 0x8000
 80163fc:	2b00      	cmp	r3, #0
 80163fe:	dd0e      	ble.n	801641e <_ZN8touchgfx8LCD16bpp37TextureMapper_A4_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x7e>
 8016400:	1402      	asrs	r2, r0, #16
 8016402:	d405      	bmi.n	8016410 <_ZN8touchgfx8LCD16bpp37TextureMapper_A4_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x70>
 8016404:	42ba      	cmp	r2, r7
 8016406:	da03      	bge.n	8016410 <_ZN8touchgfx8LCD16bpp37TextureMapper_A4_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x70>
 8016408:	140a      	asrs	r2, r1, #16
 801640a:	d401      	bmi.n	8016410 <_ZN8touchgfx8LCD16bpp37TextureMapper_A4_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x70>
 801640c:	42b2      	cmp	r2, r6
 801640e:	db07      	blt.n	8016420 <_ZN8touchgfx8LCD16bpp37TextureMapper_A4_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x80>
 8016410:	9a13      	ldr	r2, [sp, #76]	@ 0x4c
 8016412:	4410      	add	r0, r2
 8016414:	9a14      	ldr	r2, [sp, #80]	@ 0x50
 8016416:	3b01      	subs	r3, #1
 8016418:	4411      	add	r1, r2
 801641a:	3402      	adds	r4, #2
 801641c:	e7ee      	b.n	80163fc <_ZN8touchgfx8LCD16bpp37TextureMapper_A4_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x5c>
 801641e:	d017      	beq.n	8016450 <_ZN8touchgfx8LCD16bpp37TextureMapper_A4_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xb0>
 8016420:	9d13      	ldr	r5, [sp, #76]	@ 0x4c
 8016422:	1e5a      	subs	r2, r3, #1
 8016424:	fb05 0502 	mla	r5, r5, r2, r0
 8016428:	142d      	asrs	r5, r5, #16
 801642a:	d409      	bmi.n	8016440 <_ZN8touchgfx8LCD16bpp37TextureMapper_A4_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xa0>
 801642c:	42bd      	cmp	r5, r7
 801642e:	da07      	bge.n	8016440 <_ZN8touchgfx8LCD16bpp37TextureMapper_A4_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xa0>
 8016430:	9d14      	ldr	r5, [sp, #80]	@ 0x50
 8016432:	fb05 1202 	mla	r2, r5, r2, r1
 8016436:	1412      	asrs	r2, r2, #16
 8016438:	d402      	bmi.n	8016440 <_ZN8touchgfx8LCD16bpp37TextureMapper_A4_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xa0>
 801643a:	42b2      	cmp	r2, r6
 801643c:	f2c0 80c3 	blt.w	80165c6 <_ZN8touchgfx8LCD16bpp37TextureMapper_A4_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x226>
 8016440:	2500      	movs	r5, #0
 8016442:	195a      	adds	r2, r3, r5
 8016444:	2a00      	cmp	r2, #0
 8016446:	dc3f      	bgt.n	80164c8 <_ZN8touchgfx8LCD16bpp37TextureMapper_A4_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x128>
 8016448:	ea23 73e3 	bic.w	r3, r3, r3, asr #31
 801644c:	eb04 0443 	add.w	r4, r4, r3, lsl #1
 8016450:	9b01      	ldr	r3, [sp, #4]
 8016452:	2b00      	cmp	r3, #0
 8016454:	f340 812a 	ble.w	80166ac <_ZN8touchgfx8LCD16bpp37TextureMapper_A4_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x30c>
 8016458:	ee30 0a04 	vadd.f32	s0, s0, s8
 801645c:	ee70 0aa4 	vadd.f32	s1, s1, s9
 8016460:	eec6 7a80 	vdiv.f32	s15, s13, s0
 8016464:	9b10      	ldr	r3, [sp, #64]	@ 0x40
 8016466:	ee31 1a05 	vadd.f32	s2, s2, s10
 801646a:	ee20 7aa7 	vmul.f32	s14, s1, s15
 801646e:	eeb0 6a62 	vmov.f32	s12, s5
 8016472:	ee61 7a27 	vmul.f32	s15, s2, s15
 8016476:	eebe 6ac8 	vcvt.s32.f32	s12, s12, #16
 801647a:	ee77 2a62 	vsub.f32	s5, s14, s5
 801647e:	ed8d 6a11 	vstr	s12, [sp, #68]	@ 0x44
 8016482:	eefe 2ac8 	vcvt.s32.f32	s5, s5, #16
 8016486:	eeb0 6a43 	vmov.f32	s12, s6
 801648a:	ee37 3ac3 	vsub.f32	s6, s15, s6
 801648e:	ee12 2a90 	vmov	r2, s5
 8016492:	eebe 3ac8 	vcvt.s32.f32	s6, s6, #16
 8016496:	fb92 f3f3 	sdiv	r3, r2, r3
 801649a:	ee13 2a10 	vmov	r2, s6
 801649e:	9313      	str	r3, [sp, #76]	@ 0x4c
 80164a0:	9b10      	ldr	r3, [sp, #64]	@ 0x40
 80164a2:	fb92 f3f3 	sdiv	r3, r2, r3
 80164a6:	9314      	str	r3, [sp, #80]	@ 0x50
 80164a8:	9b01      	ldr	r3, [sp, #4]
 80164aa:	9a05      	ldr	r2, [sp, #20]
 80164ac:	eebe 6ac8 	vcvt.s32.f32	s12, s12, #16
 80164b0:	3b01      	subs	r3, #1
 80164b2:	9301      	str	r3, [sp, #4]
 80164b4:	ed8d 6a12 	vstr	s12, [sp, #72]	@ 0x48
 80164b8:	9b10      	ldr	r3, [sp, #64]	@ 0x40
 80164ba:	eeb0 3a67 	vmov.f32	s6, s15
 80164be:	bf08      	it	eq
 80164c0:	4613      	moveq	r3, r2
 80164c2:	eef0 2a47 	vmov.f32	s5, s14
 80164c6:	e788      	b.n	80163da <_ZN8touchgfx8LCD16bpp37TextureMapper_A4_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3a>
 80164c8:	1406      	asrs	r6, r0, #16
 80164ca:	d42c      	bmi.n	8016526 <_ZN8touchgfx8LCD16bpp37TextureMapper_A4_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x186>
 80164cc:	f8db 2008 	ldr.w	r2, [fp, #8]
 80164d0:	42b2      	cmp	r2, r6
 80164d2:	dd28      	ble.n	8016526 <_ZN8touchgfx8LCD16bpp37TextureMapper_A4_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x186>
 80164d4:	140f      	asrs	r7, r1, #16
 80164d6:	d426      	bmi.n	8016526 <_ZN8touchgfx8LCD16bpp37TextureMapper_A4_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x186>
 80164d8:	f8db 200c 	ldr.w	r2, [fp, #12]
 80164dc:	42ba      	cmp	r2, r7
 80164de:	dd22      	ble.n	8016526 <_ZN8touchgfx8LCD16bpp37TextureMapper_A4_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x186>
 80164e0:	9a02      	ldr	r2, [sp, #8]
 80164e2:	fb07 6602 	mla	r6, r7, r2, r6
 80164e6:	0872      	lsrs	r2, r6, #1
 80164e8:	9f03      	ldr	r7, [sp, #12]
 80164ea:	5cba      	ldrb	r2, [r7, r2]
 80164ec:	07f6      	lsls	r6, r6, #31
 80164ee:	bf54      	ite	pl
 80164f0:	f002 020f 	andpl.w	r2, r2, #15
 80164f4:	1112      	asrmi	r2, r2, #4
 80164f6:	eb02 1202 	add.w	r2, r2, r2, lsl #4
 80164fa:	b2d2      	uxtb	r2, r2
 80164fc:	2aff      	cmp	r2, #255	@ 0xff
 80164fe:	d118      	bne.n	8016532 <_ZN8touchgfx8LCD16bpp37TextureMapper_A4_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x192>
 8016500:	f8d8 2000 	ldr.w	r2, [r8]
 8016504:	f06f 0601 	mvn.w	r6, #1
 8016508:	fb06 f705 	mul.w	r7, r6, r5
 801650c:	f2a6 76fe 	subw	r6, r6, #2046	@ 0x7fe
 8016510:	ea06 2c12 	and.w	ip, r6, r2, lsr #8
 8016514:	0956      	lsrs	r6, r2, #5
 8016516:	f406 66fc 	and.w	r6, r6, #2016	@ 0x7e0
 801651a:	ea4c 0606 	orr.w	r6, ip, r6
 801651e:	f3c2 02c4 	ubfx	r2, r2, #3, #5
 8016522:	4316      	orrs	r6, r2
 8016524:	53e6      	strh	r6, [r4, r7]
 8016526:	9a13      	ldr	r2, [sp, #76]	@ 0x4c
 8016528:	4410      	add	r0, r2
 801652a:	9a14      	ldr	r2, [sp, #80]	@ 0x50
 801652c:	3d01      	subs	r5, #1
 801652e:	4411      	add	r1, r2
 8016530:	e787      	b.n	8016442 <_ZN8touchgfx8LCD16bpp37TextureMapper_A4_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xa2>
 8016532:	2a00      	cmp	r2, #0
 8016534:	d0f7      	beq.n	8016526 <_ZN8touchgfx8LCD16bpp37TextureMapper_A4_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x186>
 8016536:	f06f 0601 	mvn.w	r6, #1
 801653a:	436e      	muls	r6, r5
 801653c:	f8d8 c000 	ldr.w	ip, [r8]
 8016540:	f834 e006 	ldrh.w	lr, [r4, r6]
 8016544:	9604      	str	r6, [sp, #16]
 8016546:	fa1f f982 	uxth.w	r9, r2
 801654a:	ea4f 272e 	mov.w	r7, lr, asr #8
 801654e:	f3cc 4607 	ubfx	r6, ip, #16, #8
 8016552:	43d2      	mvns	r2, r2
 8016554:	b2d2      	uxtb	r2, r2
 8016556:	fb16 f609 	smulbb	r6, r6, r9
 801655a:	f007 07f8 	and.w	r7, r7, #248	@ 0xf8
 801655e:	fb07 6702 	mla	r7, r7, r2, r6
 8016562:	f3cc 2a07 	ubfx	sl, ip, #8, #8
 8016566:	ea4f 06ee 	mov.w	r6, lr, asr #3
 801656a:	fa5f fc8c 	uxtb.w	ip, ip
 801656e:	ea4f 0ece 	mov.w	lr, lr, lsl #3
 8016572:	fa5f fe8e 	uxtb.w	lr, lr
 8016576:	fb1c fc09 	smulbb	ip, ip, r9
 801657a:	fb0e cc02 	mla	ip, lr, r2, ip
 801657e:	b2bf      	uxth	r7, r7
 8016580:	fb1a fa09 	smulbb	sl, sl, r9
 8016584:	fa1f fc8c 	uxth.w	ip, ip
 8016588:	f006 06fc 	and.w	r6, r6, #252	@ 0xfc
 801658c:	fb06 a602 	mla	r6, r6, r2, sl
 8016590:	1c7a      	adds	r2, r7, #1
 8016592:	f10c 0a01 	add.w	sl, ip, #1
 8016596:	eb02 2717 	add.w	r7, r2, r7, lsr #8
 801659a:	eb0a 2a1c 	add.w	sl, sl, ip, lsr #8
 801659e:	b2b6      	uxth	r6, r6
 80165a0:	f3ca 2ac4 	ubfx	sl, sl, #11, #5
 80165a4:	f407 4778 	and.w	r7, r7, #63488	@ 0xf800
 80165a8:	ea4a 0707 	orr.w	r7, sl, r7
 80165ac:	f106 0a01 	add.w	sl, r6, #1
 80165b0:	eb0a 2a16 	add.w	sl, sl, r6, lsr #8
 80165b4:	ea4f 1a5a 	mov.w	sl, sl, lsr #5
 80165b8:	f40a 6afc 	and.w	sl, sl, #2016	@ 0x7e0
 80165bc:	9a04      	ldr	r2, [sp, #16]
 80165be:	ea47 070a 	orr.w	r7, r7, sl
 80165c2:	52a7      	strh	r7, [r4, r2]
 80165c4:	e7af      	b.n	8016526 <_ZN8touchgfx8LCD16bpp37TextureMapper_A4_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x186>
 80165c6:	f04f 0e00 	mov.w	lr, #0
 80165ca:	eba3 020e 	sub.w	r2, r3, lr
 80165ce:	2a00      	cmp	r2, #0
 80165d0:	f77f af3a 	ble.w	8016448 <_ZN8touchgfx8LCD16bpp37TextureMapper_A4_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xa8>
 80165d4:	9e02      	ldr	r6, [sp, #8]
 80165d6:	1402      	asrs	r2, r0, #16
 80165d8:	140d      	asrs	r5, r1, #16
 80165da:	fb06 2505 	mla	r5, r6, r5, r2
 80165de:	086a      	lsrs	r2, r5, #1
 80165e0:	9e03      	ldr	r6, [sp, #12]
 80165e2:	5cb2      	ldrb	r2, [r6, r2]
 80165e4:	07ed      	lsls	r5, r5, #31
 80165e6:	bf54      	ite	pl
 80165e8:	f002 020f 	andpl.w	r2, r2, #15
 80165ec:	1112      	asrmi	r2, r2, #4
 80165ee:	eb02 1202 	add.w	r2, r2, r2, lsl #4
 80165f2:	b2d2      	uxtb	r2, r2
 80165f4:	2aff      	cmp	r2, #255	@ 0xff
 80165f6:	d115      	bne.n	8016624 <_ZN8touchgfx8LCD16bpp37TextureMapper_A4_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x284>
 80165f8:	f8d8 5000 	ldr.w	r5, [r8]
 80165fc:	f6a2 02ff 	subw	r2, r2, #2303	@ 0x8ff
 8016600:	ea02 2615 	and.w	r6, r2, r5, lsr #8
 8016604:	096a      	lsrs	r2, r5, #5
 8016606:	f402 62fc 	and.w	r2, r2, #2016	@ 0x7e0
 801660a:	4332      	orrs	r2, r6
 801660c:	f3c5 05c4 	ubfx	r5, r5, #3, #5
 8016610:	432a      	orrs	r2, r5
 8016612:	f824 201e 	strh.w	r2, [r4, lr, lsl #1]
 8016616:	9a13      	ldr	r2, [sp, #76]	@ 0x4c
 8016618:	4410      	add	r0, r2
 801661a:	9a14      	ldr	r2, [sp, #80]	@ 0x50
 801661c:	f10e 0e01 	add.w	lr, lr, #1
 8016620:	4411      	add	r1, r2
 8016622:	e7d2      	b.n	80165ca <_ZN8touchgfx8LCD16bpp37TextureMapper_A4_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x22a>
 8016624:	2a00      	cmp	r2, #0
 8016626:	d0f6      	beq.n	8016616 <_ZN8touchgfx8LCD16bpp37TextureMapper_A4_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x276>
 8016628:	f8d8 7000 	ldr.w	r7, [r8]
 801662c:	f834 c01e 	ldrh.w	ip, [r4, lr, lsl #1]
 8016630:	fa1f f982 	uxth.w	r9, r2
 8016634:	ea4f 262c 	mov.w	r6, ip, asr #8
 8016638:	f3c7 4507 	ubfx	r5, r7, #16, #8
 801663c:	43d2      	mvns	r2, r2
 801663e:	b2d2      	uxtb	r2, r2
 8016640:	fb15 f509 	smulbb	r5, r5, r9
 8016644:	f006 06f8 	and.w	r6, r6, #248	@ 0xf8
 8016648:	fb06 5602 	mla	r6, r6, r2, r5
 801664c:	f3c7 2a07 	ubfx	sl, r7, #8, #8
 8016650:	ea4f 05ec 	mov.w	r5, ip, asr #3
 8016654:	b2ff      	uxtb	r7, r7
 8016656:	ea4f 0ccc 	mov.w	ip, ip, lsl #3
 801665a:	fa5f fc8c 	uxtb.w	ip, ip
 801665e:	fb17 f709 	smulbb	r7, r7, r9
 8016662:	fb0c 7702 	mla	r7, ip, r2, r7
 8016666:	b2b6      	uxth	r6, r6
 8016668:	fb1a fa09 	smulbb	sl, sl, r9
 801666c:	b2bf      	uxth	r7, r7
 801666e:	f005 05fc 	and.w	r5, r5, #252	@ 0xfc
 8016672:	fb05 a502 	mla	r5, r5, r2, sl
 8016676:	1c72      	adds	r2, r6, #1
 8016678:	f107 0a01 	add.w	sl, r7, #1
 801667c:	eb02 2616 	add.w	r6, r2, r6, lsr #8
 8016680:	eb0a 2a17 	add.w	sl, sl, r7, lsr #8
 8016684:	b2ad      	uxth	r5, r5
 8016686:	f3ca 2ac4 	ubfx	sl, sl, #11, #5
 801668a:	f406 4678 	and.w	r6, r6, #63488	@ 0xf800
 801668e:	ea4a 0606 	orr.w	r6, sl, r6
 8016692:	f105 0a01 	add.w	sl, r5, #1
 8016696:	eb0a 2a15 	add.w	sl, sl, r5, lsr #8
 801669a:	ea4f 1a5a 	mov.w	sl, sl, lsr #5
 801669e:	f40a 6afc 	and.w	sl, sl, #2016	@ 0x7e0
 80166a2:	ea46 060a 	orr.w	r6, r6, sl
 80166a6:	f824 601e 	strh.w	r6, [r4, lr, lsl #1]
 80166aa:	e7b4      	b.n	8016616 <_ZN8touchgfx8LCD16bpp37TextureMapper_A4_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x276>
 80166ac:	b007      	add	sp, #28
 80166ae:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 80166b2:	bf00      	nop
 80166b4:	20002dc4 	.word	0x20002dc4

080166b8 <_ZN8touchgfx8LCD16bpp19DecompressorRGB_QOID1Ev>:
 80166b8:	4770      	bx	lr

080166ba <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW9D1Ev>:
 80166ba:	4770      	bx	lr

080166bc <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLED1Ev>:
 80166bc:	4770      	bx	lr

080166be <_ZN8touchgfx8LCD16bpp17DecompressorL8_L4D1Ev>:
 80166be:	4770      	bx	lr

080166c0 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGAD1Ev>:
 80166c0:	4770      	bx	lr

080166c2 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GAD1Ev>:
 80166c2:	4770      	bx	lr

080166c4 <_ZN8touchgfx8LCD16bpp37TextureMapper_A4_NearestNeighbor_NoGAD1Ev>:
 80166c4:	4770      	bx	lr

080166c6 <_ZN8touchgfx8LCD16bpp35TextureMapper_A4_NearestNeighbor_GAD1Ev>:
 80166c6:	4770      	bx	lr

080166c8 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGAD1Ev>:
 80166c8:	4770      	bx	lr

080166ca <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GAD1Ev>:
 80166ca:	4770      	bx	lr

080166cc <_ZN8touchgfx8LCD16bpp53TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_NoGAD1Ev>:
 80166cc:	4770      	bx	lr

080166ce <_ZN8touchgfx8LCD16bpp51TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_GAD1Ev>:
 80166ce:	4770      	bx	lr

080166d0 <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGAD1Ev>:
 80166d0:	4770      	bx	lr

080166d2 <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GAD1Ev>:
 80166d2:	4770      	bx	lr

080166d4 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGAD1Ev>:
 80166d4:	4770      	bx	lr

080166d6 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GAD1Ev>:
 80166d6:	4770      	bx	lr

080166d8 <_ZN8touchgfx8LCD16bpp48TextureMapper_RGB565_Opaque_NearestNeighbor_NoGAD1Ev>:
 80166d8:	4770      	bx	lr

080166da <_ZN8touchgfx8LCD16bpp46TextureMapper_RGB565_Opaque_NearestNeighbor_GAD1Ev>:
 80166da:	4770      	bx	lr

080166dc <_ZN8touchgfx8LCD16bpp51TextureMapper_RGB565_NonOpaque_NearestNeighbor_NoGAD1Ev>:
 80166dc:	4770      	bx	lr

080166de <_ZN8touchgfx8LCD16bpp49TextureMapper_RGB565_NonOpaque_NearestNeighbor_GAD1Ev>:
 80166de:	4770      	bx	lr

080166e0 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGAD1Ev>:
 80166e0:	4770      	bx	lr

080166e2 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GAD1Ev>:
 80166e2:	4770      	bx	lr

080166e4 <_ZN8touchgfx8LCD16bpp56TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGAD1Ev>:
 80166e4:	4770      	bx	lr

080166e6 <_ZN8touchgfx8LCD16bpp54TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_GAD1Ev>:
 80166e6:	4770      	bx	lr

080166e8 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGAD1Ev>:
 80166e8:	4770      	bx	lr

080166ea <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GAD1Ev>:
 80166ea:	4770      	bx	lr

080166ec <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB888_Opaque_NearestNeighbor_NoGAD1Ev>:
 80166ec:	4770      	bx	lr

080166ee <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB888_Opaque_NearestNeighbor_GAD1Ev>:
 80166ee:	4770      	bx	lr

080166f0 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGAD1Ev>:
 80166f0:	4770      	bx	lr

080166f2 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GAD1Ev>:
 80166f2:	4770      	bx	lr

080166f4 <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB565_Opaque_NearestNeighbor_NoGAD1Ev>:
 80166f4:	4770      	bx	lr

080166f6 <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB565_Opaque_NearestNeighbor_GAD1Ev>:
 80166f6:	4770      	bx	lr

080166f8 <_ZN8touchgfx8LCD16bpp29copyFrameBufferRegionToMemoryERKNS_4RectES3_t>:
 80166f8:	e92d 47f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
 80166fc:	b088      	sub	sp, #32
 80166fe:	ac08      	add	r4, sp, #32
 8016700:	4606      	mov	r6, r0
 8016702:	f824 3d0c 	strh.w	r3, [r4, #-12]!
 8016706:	4620      	mov	r0, r4
 8016708:	4688      	mov	r8, r1
 801670a:	4691      	mov	r9, r2
 801670c:	f7fd fc32 	bl	8013f74 <_ZNK8touchgfx6Bitmap7getDataEv>
 8016710:	6833      	ldr	r3, [r6, #0]
 8016712:	4605      	mov	r5, r0
 8016714:	4620      	mov	r0, r4
 8016716:	699f      	ldr	r7, [r3, #24]
 8016718:	f7fd fb3a 	bl	8013d90 <_ZNK8touchgfx6Bitmap8getWidthEv>
 801671c:	4682      	mov	sl, r0
 801671e:	4620      	mov	r0, r4
 8016720:	f7fd fb6a 	bl	8013df8 <_ZNK8touchgfx6Bitmap9getHeightEv>
 8016724:	9500      	str	r5, [sp, #0]
 8016726:	e9cd a001 	strd	sl, r0, [sp, #4]
 801672a:	464b      	mov	r3, r9
 801672c:	a806      	add	r0, sp, #24
 801672e:	4642      	mov	r2, r8
 8016730:	4631      	mov	r1, r6
 8016732:	47b8      	blx	r7
 8016734:	4628      	mov	r0, r5
 8016736:	b008      	add	sp, #32
 8016738:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}

0801673c <_ZN8touchgfx8LCD16bpp29copyAreaFromTFTToClientBufferERKNS_4RectE>:
 801673c:	e92d 47ff 	stmdb	sp!, {r0, r1, r2, r3, r4, r5, r6, r7, r8, r9, sl, lr}
 8016740:	2300      	movs	r3, #0
 8016742:	9300      	str	r3, [sp, #0]
 8016744:	4b3d      	ldr	r3, [pc, #244]	@ (801683c <_ZN8touchgfx8LCD16bpp29copyAreaFromTFTToClientBufferERKNS_4RectE+0x100>)
 8016746:	781b      	ldrb	r3, [r3, #0]
 8016748:	2b00      	cmp	r3, #0
 801674a:	d137      	bne.n	80167bc <_ZN8touchgfx8LCD16bpp29copyAreaFromTFTToClientBufferERKNS_4RectE+0x80>
 801674c:	4a3c      	ldr	r2, [pc, #240]	@ (8016840 <_ZN8touchgfx8LCD16bpp29copyAreaFromTFTToClientBufferERKNS_4RectE+0x104>)
 801674e:	f9b2 2000 	ldrsh.w	r2, [r2]
 8016752:	f8ad 2004 	strh.w	r2, [sp, #4]
 8016756:	2b00      	cmp	r3, #0
 8016758:	d132      	bne.n	80167c0 <_ZN8touchgfx8LCD16bpp29copyAreaFromTFTToClientBufferERKNS_4RectE+0x84>
 801675a:	4b3a      	ldr	r3, [pc, #232]	@ (8016844 <_ZN8touchgfx8LCD16bpp29copyAreaFromTFTToClientBufferERKNS_4RectE+0x108>)
 801675c:	f9b3 3000 	ldrsh.w	r3, [r3]
 8016760:	6808      	ldr	r0, [r1, #0]
 8016762:	6849      	ldr	r1, [r1, #4]
 8016764:	f8ad 3006 	strh.w	r3, [sp, #6]
 8016768:	ac02      	add	r4, sp, #8
 801676a:	ab02      	add	r3, sp, #8
 801676c:	c303      	stmia	r3!, {r0, r1}
 801676e:	4669      	mov	r1, sp
 8016770:	4620      	mov	r0, r4
 8016772:	f7f9 ff21 	bl	80105b8 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectERKS1_>
 8016776:	4668      	mov	r0, sp
 8016778:	f7f9 fef6 	bl	8010568 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectE>
 801677c:	f8bd 3008 	ldrh.w	r3, [sp, #8]
 8016780:	f8bd 2000 	ldrh.w	r2, [sp]
 8016784:	4d30      	ldr	r5, [pc, #192]	@ (8016848 <_ZN8touchgfx8LCD16bpp29copyAreaFromTFTToClientBufferERKNS_4RectE+0x10c>)
 8016786:	4413      	add	r3, r2
 8016788:	f8ad 3008 	strh.w	r3, [sp, #8]
 801678c:	f8bd 2002 	ldrh.w	r2, [sp, #2]
 8016790:	f8bd 300a 	ldrh.w	r3, [sp, #10]
 8016794:	6828      	ldr	r0, [r5, #0]
 8016796:	4413      	add	r3, r2
 8016798:	f8ad 300a 	strh.w	r3, [sp, #10]
 801679c:	6803      	ldr	r3, [r0, #0]
 801679e:	6b9b      	ldr	r3, [r3, #56]	@ 0x38
 80167a0:	4798      	blx	r3
 80167a2:	f010 0f01 	tst.w	r0, #1
 80167a6:	462f      	mov	r7, r5
 80167a8:	d00c      	beq.n	80167c4 <_ZN8touchgfx8LCD16bpp29copyAreaFromTFTToClientBufferERKNS_4RectE+0x88>
 80167aa:	6828      	ldr	r0, [r5, #0]
 80167ac:	6803      	ldr	r3, [r0, #0]
 80167ae:	e894 0006 	ldmia.w	r4, {r1, r2}
 80167b2:	6ddb      	ldr	r3, [r3, #92]	@ 0x5c
 80167b4:	4798      	blx	r3
 80167b6:	b004      	add	sp, #16
 80167b8:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
 80167bc:	4a21      	ldr	r2, [pc, #132]	@ (8016844 <_ZN8touchgfx8LCD16bpp29copyAreaFromTFTToClientBufferERKNS_4RectE+0x108>)
 80167be:	e7c6      	b.n	801674e <_ZN8touchgfx8LCD16bpp29copyAreaFromTFTToClientBufferERKNS_4RectE+0x12>
 80167c0:	4b1f      	ldr	r3, [pc, #124]	@ (8016840 <_ZN8touchgfx8LCD16bpp29copyAreaFromTFTToClientBufferERKNS_4RectE+0x104>)
 80167c2:	e7cb      	b.n	801675c <_ZN8touchgfx8LCD16bpp29copyAreaFromTFTToClientBufferERKNS_4RectE+0x20>
 80167c4:	6838      	ldr	r0, [r7, #0]
 80167c6:	f9bd 800c 	ldrsh.w	r8, [sp, #12]
 80167ca:	6803      	ldr	r3, [r0, #0]
 80167cc:	f9bd 500e 	ldrsh.w	r5, [sp, #14]
 80167d0:	6b1b      	ldr	r3, [r3, #48]	@ 0x30
 80167d2:	4798      	blx	r3
 80167d4:	f9bd 3008 	ldrsh.w	r3, [sp, #8]
 80167d8:	f8bd 200a 	ldrh.w	r2, [sp, #10]
 80167dc:	f8bd 6004 	ldrh.w	r6, [sp, #4]
 80167e0:	fb16 3602 	smlabb	r6, r6, r2, r3
 80167e4:	eb00 0646 	add.w	r6, r0, r6, lsl #1
 80167e8:	6838      	ldr	r0, [r7, #0]
 80167ea:	6803      	ldr	r3, [r0, #0]
 80167ec:	6a9b      	ldr	r3, [r3, #40]	@ 0x28
 80167ee:	4798      	blx	r3
 80167f0:	4a13      	ldr	r2, [pc, #76]	@ (8016840 <_ZN8touchgfx8LCD16bpp29copyAreaFromTFTToClientBufferERKNS_4RectE+0x104>)
 80167f2:	f9bd 400a 	ldrsh.w	r4, [sp, #10]
 80167f6:	8813      	ldrh	r3, [r2, #0]
 80167f8:	f9bd 1008 	ldrsh.w	r1, [sp, #8]
 80167fc:	fb03 1404 	mla	r4, r3, r4, r1
 8016800:	eb00 0444 	add.w	r4, r0, r4, lsl #1
 8016804:	435d      	muls	r5, r3
 8016806:	eb04 0545 	add.w	r5, r4, r5, lsl #1
 801680a:	ea4f 0848 	mov.w	r8, r8, lsl #1
 801680e:	4691      	mov	r9, r2
 8016810:	6838      	ldr	r0, [r7, #0]
 8016812:	42ac      	cmp	r4, r5
 8016814:	6803      	ldr	r3, [r0, #0]
 8016816:	d20e      	bcs.n	8016836 <_ZN8touchgfx8LCD16bpp29copyAreaFromTFTToClientBufferERKNS_4RectE+0xfa>
 8016818:	f8d3 a034 	ldr.w	sl, [r3, #52]	@ 0x34
 801681c:	4632      	mov	r2, r6
 801681e:	4643      	mov	r3, r8
 8016820:	4621      	mov	r1, r4
 8016822:	47d0      	blx	sl
 8016824:	f8b9 3000 	ldrh.w	r3, [r9]
 8016828:	eb04 0443 	add.w	r4, r4, r3, lsl #1
 801682c:	f9bd 3004 	ldrsh.w	r3, [sp, #4]
 8016830:	eb06 0643 	add.w	r6, r6, r3, lsl #1
 8016834:	e7ec      	b.n	8016810 <_ZN8touchgfx8LCD16bpp29copyAreaFromTFTToClientBufferERKNS_4RectE+0xd4>
 8016836:	6adb      	ldr	r3, [r3, #44]	@ 0x2c
 8016838:	4798      	blx	r3
 801683a:	e7bc      	b.n	80167b6 <_ZN8touchgfx8LCD16bpp29copyAreaFromTFTToClientBufferERKNS_4RectE+0x7a>
 801683c:	20002db4 	.word	0x20002db4
 8016840:	20002db6 	.word	0x20002db6
 8016844:	20002db8 	.word	0x20002db8
 8016848:	20002dbc 	.word	0x20002dbc

0801684c <_ZN8touchgfx8LCD16bpp8blitCopyEPKtRKNS_4RectES5_hb>:
 801684c:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8016850:	b08b      	sub	sp, #44	@ 0x2c
 8016852:	460f      	mov	r7, r1
 8016854:	f89d b050 	ldrb.w	fp, [sp, #80]	@ 0x50
 8016858:	f89d 4054 	ldrb.w	r4, [sp, #84]	@ 0x54
 801685c:	4616      	mov	r6, r2
 801685e:	f1bb 0f00 	cmp.w	fp, #0
 8016862:	d04a      	beq.n	80168fa <_ZN8touchgfx8LCD16bpp8blitCopyEPKtRKNS_4RectES5_hb+0xae>
 8016864:	6810      	ldr	r0, [r2, #0]
 8016866:	6851      	ldr	r1, [r2, #4]
 8016868:	ad06      	add	r5, sp, #24
 801686a:	c503      	stmia	r5!, {r0, r1}
 801686c:	6818      	ldr	r0, [r3, #0]
 801686e:	6859      	ldr	r1, [r3, #4]
 8016870:	ad08      	add	r5, sp, #32
 8016872:	c503      	stmia	r5!, {r0, r1}
 8016874:	a806      	add	r0, sp, #24
 8016876:	f7f9 fe77 	bl	8010568 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectE>
 801687a:	4631      	mov	r1, r6
 801687c:	a808      	add	r0, sp, #32
 801687e:	f7f9 fe9b 	bl	80105b8 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectERKS1_>
 8016882:	f9bd 2020 	ldrsh.w	r2, [sp, #32]
 8016886:	f9bd 3022 	ldrsh.w	r3, [sp, #34]	@ 0x22
 801688a:	f8bd 601c 	ldrh.w	r6, [sp, #28]
 801688e:	f9bd 8024 	ldrsh.w	r8, [sp, #36]	@ 0x24
 8016892:	f9bd 5026 	ldrsh.w	r5, [sp, #38]	@ 0x26
 8016896:	fb16 2103 	smlabb	r1, r6, r3, r2
 801689a:	eb07 0641 	add.w	r6, r7, r1, lsl #1
 801689e:	f8bd 1018 	ldrh.w	r1, [sp, #24]
 80168a2:	4f5f      	ldr	r7, [pc, #380]	@ (8016a20 <_ZN8touchgfx8LCD16bpp8blitCopyEPKtRKNS_4RectES5_hb+0x1d4>)
 80168a4:	440a      	add	r2, r1
 80168a6:	f8ad 2020 	strh.w	r2, [sp, #32]
 80168aa:	f8bd 201a 	ldrh.w	r2, [sp, #26]
 80168ae:	6838      	ldr	r0, [r7, #0]
 80168b0:	4413      	add	r3, r2
 80168b2:	f8ad 3022 	strh.w	r3, [sp, #34]	@ 0x22
 80168b6:	6803      	ldr	r3, [r0, #0]
 80168b8:	6b9b      	ldr	r3, [r3, #56]	@ 0x38
 80168ba:	4798      	blx	r3
 80168bc:	f1bb 0fff 	cmp.w	fp, #255	@ 0xff
 80168c0:	46b9      	mov	r9, r7
 80168c2:	d11d      	bne.n	8016900 <_ZN8touchgfx8LCD16bpp8blitCopyEPKtRKNS_4RectES5_hb+0xb4>
 80168c4:	b9fc      	cbnz	r4, 8016906 <_ZN8touchgfx8LCD16bpp8blitCopyEPKtRKNS_4RectES5_hb+0xba>
 80168c6:	f010 0f01 	tst.w	r0, #1
 80168ca:	d01c      	beq.n	8016906 <_ZN8touchgfx8LCD16bpp8blitCopyEPKtRKNS_4RectES5_hb+0xba>
 80168cc:	f8d9 0000 	ldr.w	r0, [r9]
 80168d0:	f8bd 3022 	ldrh.w	r3, [sp, #34]	@ 0x22
 80168d4:	6801      	ldr	r1, [r0, #0]
 80168d6:	f8cd b00c 	str.w	fp, [sp, #12]
 80168da:	2700      	movs	r7, #0
 80168dc:	e9cd 4704 	strd	r4, r7, [sp, #16]
 80168e0:	f8bd 401c 	ldrh.w	r4, [sp, #28]
 80168e4:	9402      	str	r4, [sp, #8]
 80168e6:	b2ad      	uxth	r5, r5
 80168e8:	fa1f f488 	uxth.w	r4, r8
 80168ec:	9501      	str	r5, [sp, #4]
 80168ee:	9400      	str	r4, [sp, #0]
 80168f0:	6c4c      	ldr	r4, [r1, #68]	@ 0x44
 80168f2:	f8bd 2020 	ldrh.w	r2, [sp, #32]
 80168f6:	4631      	mov	r1, r6
 80168f8:	47a0      	blx	r4
 80168fa:	b00b      	add	sp, #44	@ 0x2c
 80168fc:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 8016900:	f010 0f04 	tst.w	r0, #4
 8016904:	e7e1      	b.n	80168ca <_ZN8touchgfx8LCD16bpp8blitCopyEPKtRKNS_4RectES5_hb+0x7e>
 8016906:	f8d9 0000 	ldr.w	r0, [r9]
 801690a:	6803      	ldr	r3, [r0, #0]
 801690c:	6a9b      	ldr	r3, [r3, #40]	@ 0x28
 801690e:	4798      	blx	r3
 8016910:	4b44      	ldr	r3, [pc, #272]	@ (8016a24 <_ZN8touchgfx8LCD16bpp8blitCopyEPKtRKNS_4RectES5_hb+0x1d8>)
 8016912:	f9bd 4022 	ldrsh.w	r4, [sp, #34]	@ 0x22
 8016916:	881a      	ldrh	r2, [r3, #0]
 8016918:	f9bd 1020 	ldrsh.w	r1, [sp, #32]
 801691c:	f1bb 0fff 	cmp.w	fp, #255	@ 0xff
 8016920:	fb02 1404 	mla	r4, r2, r4, r1
 8016924:	eb00 0444 	add.w	r4, r0, r4, lsl #1
 8016928:	469a      	mov	sl, r3
 801692a:	fb05 f502 	mul.w	r5, r5, r2
 801692e:	ea4f 0748 	mov.w	r7, r8, lsl #1
 8016932:	d059      	beq.n	80169e8 <_ZN8touchgfx8LCD16bpp8blitCopyEPKtRKNS_4RectES5_hb+0x19c>
 8016934:	f1cb 09ff 	rsb	r9, fp, #255	@ 0xff
 8016938:	eb04 0545 	add.w	r5, r4, r5, lsl #1
 801693c:	fa1f f28b 	uxth.w	r2, fp
 8016940:	fa1f f989 	uxth.w	r9, r9
 8016944:	469e      	mov	lr, r3
 8016946:	42ac      	cmp	r4, r5
 8016948:	d264      	bcs.n	8016a14 <_ZN8touchgfx8LCD16bpp8blitCopyEPKtRKNS_4RectES5_hb+0x1c8>
 801694a:	eb04 0a07 	add.w	sl, r4, r7
 801694e:	4554      	cmp	r4, sl
 8016950:	d23d      	bcs.n	80169ce <_ZN8touchgfx8LCD16bpp8blitCopyEPKtRKNS_4RectES5_hb+0x182>
 8016952:	8821      	ldrh	r1, [r4, #0]
 8016954:	f836 3b02 	ldrh.w	r3, [r6], #2
 8016958:	1208      	asrs	r0, r1, #8
 801695a:	ea4f 2c23 	mov.w	ip, r3, asr #8
 801695e:	f000 00f8 	and.w	r0, r0, #248	@ 0xf8
 8016962:	fb10 f009 	smulbb	r0, r0, r9
 8016966:	ea4f 0be1 	mov.w	fp, r1, asr #3
 801696a:	f00c 0cf8 	and.w	ip, ip, #248	@ 0xf8
 801696e:	00c9      	lsls	r1, r1, #3
 8016970:	fb0c 0c02 	mla	ip, ip, r2, r0
 8016974:	f00b 0bfc 	and.w	fp, fp, #252	@ 0xfc
 8016978:	10d8      	asrs	r0, r3, #3
 801697a:	b2c9      	uxtb	r1, r1
 801697c:	00db      	lsls	r3, r3, #3
 801697e:	fa1f fc8c 	uxth.w	ip, ip
 8016982:	fb1b fb09 	smulbb	fp, fp, r9
 8016986:	f000 00fc 	and.w	r0, r0, #252	@ 0xfc
 801698a:	b2db      	uxtb	r3, r3
 801698c:	fb11 f109 	smulbb	r1, r1, r9
 8016990:	fb00 b002 	mla	r0, r0, r2, fp
 8016994:	fb03 1302 	mla	r3, r3, r2, r1
 8016998:	f10c 0b01 	add.w	fp, ip, #1
 801699c:	b29b      	uxth	r3, r3
 801699e:	eb0b 2c1c 	add.w	ip, fp, ip, lsr #8
 80169a2:	b280      	uxth	r0, r0
 80169a4:	f40c 4b78 	and.w	fp, ip, #63488	@ 0xf800
 80169a8:	f103 0c01 	add.w	ip, r3, #1
 80169ac:	eb0c 2c13 	add.w	ip, ip, r3, lsr #8
 80169b0:	1c43      	adds	r3, r0, #1
 80169b2:	eb03 2010 	add.w	r0, r3, r0, lsr #8
 80169b6:	f3cc 2cc4 	ubfx	ip, ip, #11, #5
 80169ba:	0940      	lsrs	r0, r0, #5
 80169bc:	ea4c 0c0b 	orr.w	ip, ip, fp
 80169c0:	f400 60fc 	and.w	r0, r0, #2016	@ 0x7e0
 80169c4:	ea4c 0c00 	orr.w	ip, ip, r0
 80169c8:	f824 cb02 	strh.w	ip, [r4], #2
 80169cc:	e7bf      	b.n	801694e <_ZN8touchgfx8LCD16bpp8blitCopyEPKtRKNS_4RectES5_hb+0x102>
 80169ce:	f8be 3000 	ldrh.w	r3, [lr]
 80169d2:	eba3 0308 	sub.w	r3, r3, r8
 80169d6:	eb04 0443 	add.w	r4, r4, r3, lsl #1
 80169da:	f9bd 301c 	ldrsh.w	r3, [sp, #28]
 80169de:	eba3 0308 	sub.w	r3, r3, r8
 80169e2:	eb06 0643 	add.w	r6, r6, r3, lsl #1
 80169e6:	e7ae      	b.n	8016946 <_ZN8touchgfx8LCD16bpp8blitCopyEPKtRKNS_4RectES5_hb+0xfa>
 80169e8:	eb04 0545 	add.w	r5, r4, r5, lsl #1
 80169ec:	f8d9 0000 	ldr.w	r0, [r9]
 80169f0:	42ac      	cmp	r4, r5
 80169f2:	6803      	ldr	r3, [r0, #0]
 80169f4:	d20e      	bcs.n	8016a14 <_ZN8touchgfx8LCD16bpp8blitCopyEPKtRKNS_4RectES5_hb+0x1c8>
 80169f6:	f8d3 8034 	ldr.w	r8, [r3, #52]	@ 0x34
 80169fa:	4632      	mov	r2, r6
 80169fc:	463b      	mov	r3, r7
 80169fe:	4621      	mov	r1, r4
 8016a00:	47c0      	blx	r8
 8016a02:	f8ba 3000 	ldrh.w	r3, [sl]
 8016a06:	eb04 0443 	add.w	r4, r4, r3, lsl #1
 8016a0a:	f9bd 301c 	ldrsh.w	r3, [sp, #28]
 8016a0e:	eb06 0643 	add.w	r6, r6, r3, lsl #1
 8016a12:	e7eb      	b.n	80169ec <_ZN8touchgfx8LCD16bpp8blitCopyEPKtRKNS_4RectES5_hb+0x1a0>
 8016a14:	4b02      	ldr	r3, [pc, #8]	@ (8016a20 <_ZN8touchgfx8LCD16bpp8blitCopyEPKtRKNS_4RectES5_hb+0x1d4>)
 8016a16:	6818      	ldr	r0, [r3, #0]
 8016a18:	6803      	ldr	r3, [r0, #0]
 8016a1a:	6adb      	ldr	r3, [r3, #44]	@ 0x2c
 8016a1c:	4798      	blx	r3
 8016a1e:	e76c      	b.n	80168fa <_ZN8touchgfx8LCD16bpp8blitCopyEPKtRKNS_4RectES5_hb+0xae>
 8016a20:	20002dbc 	.word	0x20002dbc
 8016a24:	20002db6 	.word	0x20002db6

08016a28 <_ZN8touchgfx8LCD16bpp17DecompressorL8_L4D0Ev>:
 8016a28:	b510      	push	{r4, lr}
 8016a2a:	2104      	movs	r1, #4
 8016a2c:	4604      	mov	r4, r0
 8016a2e:	f00b fc82 	bl	8022336 <_ZdlPvj>
 8016a32:	4620      	mov	r0, r4
 8016a34:	bd10      	pop	{r4, pc}

08016a36 <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLED0Ev>:
 8016a36:	b510      	push	{r4, lr}
 8016a38:	2104      	movs	r1, #4
 8016a3a:	4604      	mov	r4, r0
 8016a3c:	f00b fc7b 	bl	8022336 <_ZdlPvj>
 8016a40:	4620      	mov	r0, r4
 8016a42:	bd10      	pop	{r4, pc}

08016a44 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW9D0Ev>:
 8016a44:	b510      	push	{r4, lr}
 8016a46:	f640 0144 	movw	r1, #2116	@ 0x844
 8016a4a:	4604      	mov	r4, r0
 8016a4c:	f00b fc73 	bl	8022336 <_ZdlPvj>
 8016a50:	4620      	mov	r0, r4
 8016a52:	bd10      	pop	{r4, pc}

08016a54 <_ZN8touchgfx8LCD16bpp19DecompressorRGB_QOID0Ev>:
 8016a54:	b510      	push	{r4, lr}
 8016a56:	f44f 7182 	mov.w	r1, #260	@ 0x104
 8016a5a:	4604      	mov	r4, r0
 8016a5c:	f00b fc6b 	bl	8022336 <_ZdlPvj>
 8016a60:	4620      	mov	r0, r4
 8016a62:	bd10      	pop	{r4, pc}

08016a64 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGAD0Ev>:
 8016a64:	b510      	push	{r4, lr}
 8016a66:	2104      	movs	r1, #4
 8016a68:	4604      	mov	r4, r0
 8016a6a:	f00b fc64 	bl	8022336 <_ZdlPvj>
 8016a6e:	4620      	mov	r0, r4
 8016a70:	bd10      	pop	{r4, pc}

08016a72 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GAD0Ev>:
 8016a72:	b510      	push	{r4, lr}
 8016a74:	2104      	movs	r1, #4
 8016a76:	4604      	mov	r4, r0
 8016a78:	f00b fc5d 	bl	8022336 <_ZdlPvj>
 8016a7c:	4620      	mov	r0, r4
 8016a7e:	bd10      	pop	{r4, pc}

08016a80 <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB565_Opaque_NearestNeighbor_NoGAD0Ev>:
 8016a80:	b510      	push	{r4, lr}
 8016a82:	2104      	movs	r1, #4
 8016a84:	4604      	mov	r4, r0
 8016a86:	f00b fc56 	bl	8022336 <_ZdlPvj>
 8016a8a:	4620      	mov	r0, r4
 8016a8c:	bd10      	pop	{r4, pc}

08016a8e <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB565_Opaque_NearestNeighbor_GAD0Ev>:
 8016a8e:	b510      	push	{r4, lr}
 8016a90:	2104      	movs	r1, #4
 8016a92:	4604      	mov	r4, r0
 8016a94:	f00b fc4f 	bl	8022336 <_ZdlPvj>
 8016a98:	4620      	mov	r0, r4
 8016a9a:	bd10      	pop	{r4, pc}

08016a9c <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGAD0Ev>:
 8016a9c:	b510      	push	{r4, lr}
 8016a9e:	2104      	movs	r1, #4
 8016aa0:	4604      	mov	r4, r0
 8016aa2:	f00b fc48 	bl	8022336 <_ZdlPvj>
 8016aa6:	4620      	mov	r0, r4
 8016aa8:	bd10      	pop	{r4, pc}

08016aaa <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GAD0Ev>:
 8016aaa:	b510      	push	{r4, lr}
 8016aac:	2104      	movs	r1, #4
 8016aae:	4604      	mov	r4, r0
 8016ab0:	f00b fc41 	bl	8022336 <_ZdlPvj>
 8016ab4:	4620      	mov	r0, r4
 8016ab6:	bd10      	pop	{r4, pc}

08016ab8 <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB888_Opaque_NearestNeighbor_NoGAD0Ev>:
 8016ab8:	b510      	push	{r4, lr}
 8016aba:	2104      	movs	r1, #4
 8016abc:	4604      	mov	r4, r0
 8016abe:	f00b fc3a 	bl	8022336 <_ZdlPvj>
 8016ac2:	4620      	mov	r0, r4
 8016ac4:	bd10      	pop	{r4, pc}

08016ac6 <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB888_Opaque_NearestNeighbor_GAD0Ev>:
 8016ac6:	b510      	push	{r4, lr}
 8016ac8:	2104      	movs	r1, #4
 8016aca:	4604      	mov	r4, r0
 8016acc:	f00b fc33 	bl	8022336 <_ZdlPvj>
 8016ad0:	4620      	mov	r0, r4
 8016ad2:	bd10      	pop	{r4, pc}

08016ad4 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGAD0Ev>:
 8016ad4:	b510      	push	{r4, lr}
 8016ad6:	2104      	movs	r1, #4
 8016ad8:	4604      	mov	r4, r0
 8016ada:	f00b fc2c 	bl	8022336 <_ZdlPvj>
 8016ade:	4620      	mov	r0, r4
 8016ae0:	bd10      	pop	{r4, pc}

08016ae2 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GAD0Ev>:
 8016ae2:	b510      	push	{r4, lr}
 8016ae4:	2104      	movs	r1, #4
 8016ae6:	4604      	mov	r4, r0
 8016ae8:	f00b fc25 	bl	8022336 <_ZdlPvj>
 8016aec:	4620      	mov	r0, r4
 8016aee:	bd10      	pop	{r4, pc}

08016af0 <_ZN8touchgfx8LCD16bpp56TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGAD0Ev>:
 8016af0:	b510      	push	{r4, lr}
 8016af2:	2104      	movs	r1, #4
 8016af4:	4604      	mov	r4, r0
 8016af6:	f00b fc1e 	bl	8022336 <_ZdlPvj>
 8016afa:	4620      	mov	r0, r4
 8016afc:	bd10      	pop	{r4, pc}

08016afe <_ZN8touchgfx8LCD16bpp54TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_GAD0Ev>:
 8016afe:	b510      	push	{r4, lr}
 8016b00:	2104      	movs	r1, #4
 8016b02:	4604      	mov	r4, r0
 8016b04:	f00b fc17 	bl	8022336 <_ZdlPvj>
 8016b08:	4620      	mov	r0, r4
 8016b0a:	bd10      	pop	{r4, pc}

08016b0c <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGAD0Ev>:
 8016b0c:	b510      	push	{r4, lr}
 8016b0e:	2104      	movs	r1, #4
 8016b10:	4604      	mov	r4, r0
 8016b12:	f00b fc10 	bl	8022336 <_ZdlPvj>
 8016b16:	4620      	mov	r0, r4
 8016b18:	bd10      	pop	{r4, pc}

08016b1a <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GAD0Ev>:
 8016b1a:	b510      	push	{r4, lr}
 8016b1c:	2104      	movs	r1, #4
 8016b1e:	4604      	mov	r4, r0
 8016b20:	f00b fc09 	bl	8022336 <_ZdlPvj>
 8016b24:	4620      	mov	r0, r4
 8016b26:	bd10      	pop	{r4, pc}

08016b28 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGAD0Ev>:
 8016b28:	b510      	push	{r4, lr}
 8016b2a:	2104      	movs	r1, #4
 8016b2c:	4604      	mov	r4, r0
 8016b2e:	f00b fc02 	bl	8022336 <_ZdlPvj>
 8016b32:	4620      	mov	r0, r4
 8016b34:	bd10      	pop	{r4, pc}

08016b36 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GAD0Ev>:
 8016b36:	b510      	push	{r4, lr}
 8016b38:	2104      	movs	r1, #4
 8016b3a:	4604      	mov	r4, r0
 8016b3c:	f00b fbfb 	bl	8022336 <_ZdlPvj>
 8016b40:	4620      	mov	r0, r4
 8016b42:	bd10      	pop	{r4, pc}

08016b44 <_ZN8touchgfx8LCD16bpp48TextureMapper_RGB565_Opaque_NearestNeighbor_NoGAD0Ev>:
 8016b44:	b510      	push	{r4, lr}
 8016b46:	2104      	movs	r1, #4
 8016b48:	4604      	mov	r4, r0
 8016b4a:	f00b fbf4 	bl	8022336 <_ZdlPvj>
 8016b4e:	4620      	mov	r0, r4
 8016b50:	bd10      	pop	{r4, pc}

08016b52 <_ZN8touchgfx8LCD16bpp46TextureMapper_RGB565_Opaque_NearestNeighbor_GAD0Ev>:
 8016b52:	b510      	push	{r4, lr}
 8016b54:	2104      	movs	r1, #4
 8016b56:	4604      	mov	r4, r0
 8016b58:	f00b fbed 	bl	8022336 <_ZdlPvj>
 8016b5c:	4620      	mov	r0, r4
 8016b5e:	bd10      	pop	{r4, pc}

08016b60 <_ZN8touchgfx8LCD16bpp51TextureMapper_RGB565_NonOpaque_NearestNeighbor_NoGAD0Ev>:
 8016b60:	b510      	push	{r4, lr}
 8016b62:	2104      	movs	r1, #4
 8016b64:	4604      	mov	r4, r0
 8016b66:	f00b fbe6 	bl	8022336 <_ZdlPvj>
 8016b6a:	4620      	mov	r0, r4
 8016b6c:	bd10      	pop	{r4, pc}

08016b6e <_ZN8touchgfx8LCD16bpp49TextureMapper_RGB565_NonOpaque_NearestNeighbor_GAD0Ev>:
 8016b6e:	b510      	push	{r4, lr}
 8016b70:	2104      	movs	r1, #4
 8016b72:	4604      	mov	r4, r0
 8016b74:	f00b fbdf 	bl	8022336 <_ZdlPvj>
 8016b78:	4620      	mov	r0, r4
 8016b7a:	bd10      	pop	{r4, pc}

08016b7c <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGAD0Ev>:
 8016b7c:	b510      	push	{r4, lr}
 8016b7e:	2104      	movs	r1, #4
 8016b80:	4604      	mov	r4, r0
 8016b82:	f00b fbd8 	bl	8022336 <_ZdlPvj>
 8016b86:	4620      	mov	r0, r4
 8016b88:	bd10      	pop	{r4, pc}

08016b8a <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GAD0Ev>:
 8016b8a:	b510      	push	{r4, lr}
 8016b8c:	2104      	movs	r1, #4
 8016b8e:	4604      	mov	r4, r0
 8016b90:	f00b fbd1 	bl	8022336 <_ZdlPvj>
 8016b94:	4620      	mov	r0, r4
 8016b96:	bd10      	pop	{r4, pc}

08016b98 <_ZN8touchgfx8LCD16bpp53TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_NoGAD0Ev>:
 8016b98:	b510      	push	{r4, lr}
 8016b9a:	2104      	movs	r1, #4
 8016b9c:	4604      	mov	r4, r0
 8016b9e:	f00b fbca 	bl	8022336 <_ZdlPvj>
 8016ba2:	4620      	mov	r0, r4
 8016ba4:	bd10      	pop	{r4, pc}

08016ba6 <_ZN8touchgfx8LCD16bpp51TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_GAD0Ev>:
 8016ba6:	b510      	push	{r4, lr}
 8016ba8:	2104      	movs	r1, #4
 8016baa:	4604      	mov	r4, r0
 8016bac:	f00b fbc3 	bl	8022336 <_ZdlPvj>
 8016bb0:	4620      	mov	r0, r4
 8016bb2:	bd10      	pop	{r4, pc}

08016bb4 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGAD0Ev>:
 8016bb4:	b510      	push	{r4, lr}
 8016bb6:	2104      	movs	r1, #4
 8016bb8:	4604      	mov	r4, r0
 8016bba:	f00b fbbc 	bl	8022336 <_ZdlPvj>
 8016bbe:	4620      	mov	r0, r4
 8016bc0:	bd10      	pop	{r4, pc}

08016bc2 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GAD0Ev>:
 8016bc2:	b510      	push	{r4, lr}
 8016bc4:	2104      	movs	r1, #4
 8016bc6:	4604      	mov	r4, r0
 8016bc8:	f00b fbb5 	bl	8022336 <_ZdlPvj>
 8016bcc:	4620      	mov	r0, r4
 8016bce:	bd10      	pop	{r4, pc}

08016bd0 <_ZN8touchgfx8LCD16bpp37TextureMapper_A4_NearestNeighbor_NoGAD0Ev>:
 8016bd0:	b510      	push	{r4, lr}
 8016bd2:	2104      	movs	r1, #4
 8016bd4:	4604      	mov	r4, r0
 8016bd6:	f00b fbae 	bl	8022336 <_ZdlPvj>
 8016bda:	4620      	mov	r0, r4
 8016bdc:	bd10      	pop	{r4, pc}

08016bde <_ZN8touchgfx8LCD16bpp35TextureMapper_A4_NearestNeighbor_GAD0Ev>:
 8016bde:	b510      	push	{r4, lr}
 8016be0:	2104      	movs	r1, #4
 8016be2:	4604      	mov	r4, r0
 8016be4:	f00b fba7 	bl	8022336 <_ZdlPvj>
 8016be8:	4620      	mov	r0, r4
 8016bea:	bd10      	pop	{r4, pc}

08016bec <_ZN8touchgfx8LCD16bpp19DecompressorRGB_QOI16blitCopyARGB8888EPKhRKNS_4RectES6_h>:
 8016bec:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8016bf0:	b08f      	sub	sp, #60	@ 0x3c
 8016bf2:	4616      	mov	r6, r2
 8016bf4:	f89d 2060 	ldrb.w	r2, [sp, #96]	@ 0x60
 8016bf8:	9205      	str	r2, [sp, #20]
 8016bfa:	4682      	mov	sl, r0
 8016bfc:	460d      	mov	r5, r1
 8016bfe:	2a00      	cmp	r2, #0
 8016c00:	f000 82b7 	beq.w	8017172 <_ZN8touchgfx8LCD16bpp19DecompressorRGB_QOI16blitCopyARGB8888EPKhRKNS_4RectES6_h+0x586>
 8016c04:	6830      	ldr	r0, [r6, #0]
 8016c06:	6871      	ldr	r1, [r6, #4]
 8016c08:	ac0a      	add	r4, sp, #40	@ 0x28
 8016c0a:	c403      	stmia	r4!, {r0, r1}
 8016c0c:	6818      	ldr	r0, [r3, #0]
 8016c0e:	6859      	ldr	r1, [r3, #4]
 8016c10:	ac0c      	add	r4, sp, #48	@ 0x30
 8016c12:	c403      	stmia	r4!, {r0, r1}
 8016c14:	a80a      	add	r0, sp, #40	@ 0x28
 8016c16:	f7f9 fca7 	bl	8010568 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectE>
 8016c1a:	4631      	mov	r1, r6
 8016c1c:	a80c      	add	r0, sp, #48	@ 0x30
 8016c1e:	f7f9 fccb 	bl	80105b8 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectERKS1_>
 8016c22:	f9bd 202c 	ldrsh.w	r2, [sp, #44]	@ 0x2c
 8016c26:	f5b2 6f80 	cmp.w	r2, #1024	@ 0x400
 8016c2a:	bfd7      	itett	le
 8016c2c:	b293      	uxthle	r3, r2
 8016c2e:	2301      	movgt	r3, #1
 8016c30:	f44f 6180 	movle.w	r1, #1024	@ 0x400
 8016c34:	fb91 f3f3 	sdivle	r3, r1, r3
 8016c38:	9300      	str	r3, [sp, #0]
 8016c3a:	f105 0308 	add.w	r3, r5, #8
 8016c3e:	9900      	ldr	r1, [sp, #0]
 8016c40:	9306      	str	r3, [sp, #24]
 8016c42:	f9bd 302e 	ldrsh.w	r3, [sp, #46]	@ 0x2e
 8016c46:	440b      	add	r3, r1
 8016c48:	3b01      	subs	r3, #1
 8016c4a:	fb93 f3f1 	sdiv	r3, r3, r1
 8016c4e:	9906      	ldr	r1, [sp, #24]
 8016c50:	3b01      	subs	r3, #1
 8016c52:	b29b      	uxth	r3, r3
 8016c54:	eb01 0383 	add.w	r3, r1, r3, lsl #2
 8016c58:	9307      	str	r3, [sp, #28]
 8016c5a:	9900      	ldr	r1, [sp, #0]
 8016c5c:	f9bd 3032 	ldrsh.w	r3, [sp, #50]	@ 0x32
 8016c60:	fb93 f0f1 	sdiv	r0, r3, r1
 8016c64:	b284      	uxth	r4, r0
 8016c66:	9402      	str	r4, [sp, #8]
 8016c68:	9d02      	ldr	r5, [sp, #8]
 8016c6a:	9c00      	ldr	r4, [sp, #0]
 8016c6c:	f8bd 1030 	ldrh.w	r1, [sp, #48]	@ 0x30
 8016c70:	fb05 3414 	mls	r4, r5, r4, r3
 8016c74:	fb14 f402 	smulbb	r4, r4, r2
 8016c78:	440c      	add	r4, r1
 8016c7a:	b2a4      	uxth	r4, r4
 8016c7c:	2d00      	cmp	r5, #0
 8016c7e:	d06c      	beq.n	8016d5a <_ZN8touchgfx8LCD16bpp19DecompressorRGB_QOI16blitCopyARGB8888EPKhRKNS_4RectES6_h+0x16e>
 8016c80:	1e6a      	subs	r2, r5, #1
 8016c82:	9806      	ldr	r0, [sp, #24]
 8016c84:	f850 6022 	ldr.w	r6, [r0, r2, lsl #2]
 8016c88:	9a07      	ldr	r2, [sp, #28]
 8016c8a:	ba36      	rev	r6, r6
 8016c8c:	4416      	add	r6, r2
 8016c8e:	f8bd 2028 	ldrh.w	r2, [sp, #40]	@ 0x28
 8016c92:	f9bd 5036 	ldrsh.w	r5, [sp, #54]	@ 0x36
 8016c96:	f8df 9334 	ldr.w	r9, [pc, #820]	@ 8016fcc <_ZN8touchgfx8LCD16bpp19DecompressorRGB_QOI16blitCopyARGB8888EPKhRKNS_4RectES6_h+0x3e0>
 8016c9a:	4411      	add	r1, r2
 8016c9c:	f8bd 202a 	ldrh.w	r2, [sp, #42]	@ 0x2a
 8016ca0:	f8ad 1030 	strh.w	r1, [sp, #48]	@ 0x30
 8016ca4:	4413      	add	r3, r2
 8016ca6:	f8ad 3032 	strh.w	r3, [sp, #50]	@ 0x32
 8016caa:	f9bd 3034 	ldrsh.w	r3, [sp, #52]	@ 0x34
 8016cae:	9301      	str	r3, [sp, #4]
 8016cb0:	4bc4      	ldr	r3, [pc, #784]	@ (8016fc4 <_ZN8touchgfx8LCD16bpp19DecompressorRGB_QOI16blitCopyARGB8888EPKhRKNS_4RectES6_h+0x3d8>)
 8016cb2:	6818      	ldr	r0, [r3, #0]
 8016cb4:	6803      	ldr	r3, [r0, #0]
 8016cb6:	6a9b      	ldr	r3, [r3, #40]	@ 0x28
 8016cb8:	4798      	blx	r3
 8016cba:	4bc3      	ldr	r3, [pc, #780]	@ (8016fc8 <_ZN8touchgfx8LCD16bpp19DecompressorRGB_QOI16blitCopyARGB8888EPKhRKNS_4RectES6_h+0x3dc>)
 8016cbc:	f9bd 2030 	ldrsh.w	r2, [sp, #48]	@ 0x30
 8016cc0:	881b      	ldrh	r3, [r3, #0]
 8016cc2:	f9bd 8032 	ldrsh.w	r8, [sp, #50]	@ 0x32
 8016cc6:	fb03 2808 	mla	r8, r3, r8, r2
 8016cca:	eb00 0848 	add.w	r8, r0, r8, lsl #1
 8016cce:	436b      	muls	r3, r5
 8016cd0:	eb08 0343 	add.w	r3, r8, r3, lsl #1
 8016cd4:	9309      	str	r3, [sp, #36]	@ 0x24
 8016cd6:	2500      	movs	r5, #0
 8016cd8:	f9bd 302c 	ldrsh.w	r3, [sp, #44]	@ 0x2c
 8016cdc:	fb94 f3f3 	sdiv	r3, r4, r3
 8016ce0:	9304      	str	r3, [sp, #16]
 8016ce2:	f10a 0304 	add.w	r3, sl, #4
 8016ce6:	f44f 7280 	mov.w	r2, #256	@ 0x100
 8016cea:	4629      	mov	r1, r5
 8016cec:	4618      	mov	r0, r3
 8016cee:	9308      	str	r3, [sp, #32]
 8016cf0:	f00b fdd5 	bl	802289e <memset>
 8016cf4:	9b09      	ldr	r3, [sp, #36]	@ 0x24
 8016cf6:	4543      	cmp	r3, r8
 8016cf8:	f240 8236 	bls.w	8017168 <_ZN8touchgfx8LCD16bpp19DecompressorRGB_QOI16blitCopyARGB8888EPKhRKNS_4RectES6_h+0x57c>
 8016cfc:	2203      	movs	r2, #3
 8016cfe:	2107      	movs	r1, #7
 8016d00:	200b      	movs	r0, #11
 8016d02:	2c00      	cmp	r4, #0
 8016d04:	f000 8131 	beq.w	8016f6a <_ZN8touchgfx8LCD16bpp19DecompressorRGB_QOI16blitCopyARGB8888EPKhRKNS_4RectES6_h+0x37e>
 8016d08:	7833      	ldrb	r3, [r6, #0]
 8016d0a:	b2db      	uxtb	r3, r3
 8016d0c:	2bfe      	cmp	r3, #254	@ 0xfe
 8016d0e:	d126      	bne.n	8016d5e <_ZN8touchgfx8LCD16bpp19DecompressorRGB_QOI16blitCopyARGB8888EPKhRKNS_4RectES6_h+0x172>
 8016d10:	f896 e001 	ldrb.w	lr, [r6, #1]
 8016d14:	f896 c002 	ldrb.w	ip, [r6, #2]
 8016d18:	f896 b003 	ldrb.w	fp, [r6, #3]
 8016d1c:	fa5f fe8e 	uxtb.w	lr, lr
 8016d20:	fa5f fc8c 	uxtb.w	ip, ip
 8016d24:	f36e 0507 	bfi	r5, lr, #0, #8
 8016d28:	f36c 250f 	bfi	r5, ip, #8, #8
 8016d2c:	fa5f fb8b 	uxtb.w	fp, fp
 8016d30:	eb0c 0c8c 	add.w	ip, ip, ip, lsl #2
 8016d34:	f36b 4517 	bfi	r5, fp, #16, #8
 8016d38:	fb12 cc0b 	smlabb	ip, r2, fp, ip
 8016d3c:	0e2b      	lsrs	r3, r5, #24
 8016d3e:	fb11 cc0e 	smlabb	ip, r1, lr, ip
 8016d42:	fb10 c303 	smlabb	r3, r0, r3, ip
 8016d46:	f003 033f 	and.w	r3, r3, #63	@ 0x3f
 8016d4a:	eb0a 0383 	add.w	r3, sl, r3, lsl #2
 8016d4e:	3c01      	subs	r4, #1
 8016d50:	1d37      	adds	r7, r6, #4
 8016d52:	b2a4      	uxth	r4, r4
 8016d54:	605d      	str	r5, [r3, #4]
 8016d56:	463e      	mov	r6, r7
 8016d58:	e7d3      	b.n	8016d02 <_ZN8touchgfx8LCD16bpp19DecompressorRGB_QOI16blitCopyARGB8888EPKhRKNS_4RectES6_h+0x116>
 8016d5a:	9e07      	ldr	r6, [sp, #28]
 8016d5c:	e797      	b.n	8016c8e <_ZN8touchgfx8LCD16bpp19DecompressorRGB_QOI16blitCopyARGB8888EPKhRKNS_4RectES6_h+0xa2>
 8016d5e:	2bff      	cmp	r3, #255	@ 0xff
 8016d60:	d127      	bne.n	8016db2 <_ZN8touchgfx8LCD16bpp19DecompressorRGB_QOI16blitCopyARGB8888EPKhRKNS_4RectES6_h+0x1c6>
 8016d62:	f896 c001 	ldrb.w	ip, [r6, #1]
 8016d66:	78b3      	ldrb	r3, [r6, #2]
 8016d68:	f896 e003 	ldrb.w	lr, [r6, #3]
 8016d6c:	f896 b004 	ldrb.w	fp, [r6, #4]
 8016d70:	fa5f fc8c 	uxtb.w	ip, ip
 8016d74:	b2db      	uxtb	r3, r3
 8016d76:	f36c 0507 	bfi	r5, ip, #0, #8
 8016d7a:	f363 250f 	bfi	r5, r3, #8, #8
 8016d7e:	fa5f fe8e 	uxtb.w	lr, lr
 8016d82:	eb03 0383 	add.w	r3, r3, r3, lsl #2
 8016d86:	fb12 330e 	smlabb	r3, r2, lr, r3
 8016d8a:	fa5f fb8b 	uxtb.w	fp, fp
 8016d8e:	f36e 4517 	bfi	r5, lr, #16, #8
 8016d92:	fb11 330c 	smlabb	r3, r1, ip, r3
 8016d96:	f36b 651f 	bfi	r5, fp, #24, #8
 8016d9a:	fb10 3b0b 	smlabb	fp, r0, fp, r3
 8016d9e:	f00b 0b3f 	and.w	fp, fp, #63	@ 0x3f
 8016da2:	eb0a 0b8b 	add.w	fp, sl, fp, lsl #2
 8016da6:	3c01      	subs	r4, #1
 8016da8:	1d77      	adds	r7, r6, #5
 8016daa:	b2a4      	uxth	r4, r4
 8016dac:	f8cb 5004 	str.w	r5, [fp, #4]
 8016db0:	e7d1      	b.n	8016d56 <_ZN8touchgfx8LCD16bpp19DecompressorRGB_QOI16blitCopyARGB8888EPKhRKNS_4RectES6_h+0x16a>
 8016db2:	ea5f 1ca3 	movs.w	ip, r3, asr #6
 8016db6:	f106 0701 	add.w	r7, r6, #1
 8016dba:	d107      	bne.n	8016dcc <_ZN8touchgfx8LCD16bpp19DecompressorRGB_QOI16blitCopyARGB8888EPKhRKNS_4RectES6_h+0x1e0>
 8016dbc:	f003 033f 	and.w	r3, r3, #63	@ 0x3f
 8016dc0:	eb0a 0383 	add.w	r3, sl, r3, lsl #2
 8016dc4:	685d      	ldr	r5, [r3, #4]
 8016dc6:	3c01      	subs	r4, #1
 8016dc8:	b2a4      	uxth	r4, r4
 8016dca:	e7c4      	b.n	8016d56 <_ZN8touchgfx8LCD16bpp19DecompressorRGB_QOI16blitCopyARGB8888EPKhRKNS_4RectES6_h+0x16a>
 8016dcc:	f1bc 0f01 	cmp.w	ip, #1
 8016dd0:	d12c      	bne.n	8016e2c <_ZN8touchgfx8LCD16bpp19DecompressorRGB_QOI16blitCopyARGB8888EPKhRKNS_4RectES6_h+0x240>
 8016dd2:	f003 0e03 	and.w	lr, r3, #3
 8016dd6:	f1ae 0e02 	sub.w	lr, lr, #2
 8016dda:	eb05 0ece 	add.w	lr, r5, lr, lsl #3
 8016dde:	fa5f fe8e 	uxtb.w	lr, lr
 8016de2:	f003 0c0c 	and.w	ip, r3, #12
 8016de6:	f36e 0507 	bfi	r5, lr, #0, #8
 8016dea:	f1ac 0c08 	sub.w	ip, ip, #8
 8016dee:	eb0c 2c15 	add.w	ip, ip, r5, lsr #8
 8016df2:	f00c 0cff 	and.w	ip, ip, #255	@ 0xff
 8016df6:	f36c 250f 	bfi	r5, ip, #8, #8
 8016dfa:	f3c3 1301 	ubfx	r3, r3, #4, #2
 8016dfe:	f3c5 4607 	ubfx	r6, r5, #16, #8
 8016e02:	3b02      	subs	r3, #2
 8016e04:	eb06 03c3 	add.w	r3, r6, r3, lsl #3
 8016e08:	b2db      	uxtb	r3, r3
 8016e0a:	eb0c 0c8c 	add.w	ip, ip, ip, lsl #2
 8016e0e:	f363 4517 	bfi	r5, r3, #16, #8
 8016e12:	fb12 cc03 	smlabb	ip, r2, r3, ip
 8016e16:	0e2e      	lsrs	r6, r5, #24
 8016e18:	fb11 cc0e 	smlabb	ip, r1, lr, ip
 8016e1c:	fb10 c606 	smlabb	r6, r0, r6, ip
 8016e20:	f006 063f 	and.w	r6, r6, #63	@ 0x3f
 8016e24:	eb0a 0686 	add.w	r6, sl, r6, lsl #2
 8016e28:	6075      	str	r5, [r6, #4]
 8016e2a:	e7cc      	b.n	8016dc6 <_ZN8touchgfx8LCD16bpp19DecompressorRGB_QOI16blitCopyARGB8888EPKhRKNS_4RectES6_h+0x1da>
 8016e2c:	f1bc 0f02 	cmp.w	ip, #2
 8016e30:	f003 033f 	and.w	r3, r3, #63	@ 0x3f
 8016e34:	d12a      	bne.n	8016e8c <_ZN8touchgfx8LCD16bpp19DecompressorRGB_QOI16blitCopyARGB8888EPKhRKNS_4RectES6_h+0x2a0>
 8016e36:	1cb7      	adds	r7, r6, #2
 8016e38:	7876      	ldrb	r6, [r6, #1]
 8016e3a:	b2f6      	uxtb	r6, r6
 8016e3c:	f006 0c0f 	and.w	ip, r6, #15
 8016e40:	3b20      	subs	r3, #32
 8016e42:	f1ac 0c08 	sub.w	ip, ip, #8
 8016e46:	449c      	add	ip, r3
 8016e48:	eb05 0ccc 	add.w	ip, r5, ip, lsl #3
 8016e4c:	fa5f fc8c 	uxtb.w	ip, ip
 8016e50:	f36c 0507 	bfi	r5, ip, #0, #8
 8016e54:	f3c5 2e07 	ubfx	lr, r5, #8, #8
 8016e58:	eb0e 0e83 	add.w	lr, lr, r3, lsl #2
 8016e5c:	fa5f fe8e 	uxtb.w	lr, lr
 8016e60:	1136      	asrs	r6, r6, #4
 8016e62:	f36e 250f 	bfi	r5, lr, #8, #8
 8016e66:	3e08      	subs	r6, #8
 8016e68:	4433      	add	r3, r6
 8016e6a:	f3c5 4607 	ubfx	r6, r5, #16, #8
 8016e6e:	eb06 03c3 	add.w	r3, r6, r3, lsl #3
 8016e72:	b2db      	uxtb	r3, r3
 8016e74:	eb0e 0e8e 	add.w	lr, lr, lr, lsl #2
 8016e78:	f363 4517 	bfi	r5, r3, #16, #8
 8016e7c:	fb12 ee03 	smlabb	lr, r2, r3, lr
 8016e80:	0e2e      	lsrs	r6, r5, #24
 8016e82:	fb11 ee0c 	smlabb	lr, r1, ip, lr
 8016e86:	fb10 e606 	smlabb	r6, r0, r6, lr
 8016e8a:	e7c9      	b.n	8016e20 <_ZN8touchgfx8LCD16bpp19DecompressorRGB_QOI16blitCopyARGB8888EPKhRKNS_4RectES6_h+0x234>
 8016e8c:	1c5e      	adds	r6, r3, #1
 8016e8e:	42a6      	cmp	r6, r4
 8016e90:	dd4e      	ble.n	8016f30 <_ZN8touchgfx8LCD16bpp19DecompressorRGB_QOI16blitCopyARGB8888EPKhRKNS_4RectES6_h+0x344>
 8016e92:	1b36      	subs	r6, r6, r4
 8016e94:	2e00      	cmp	r6, #0
 8016e96:	dc4e      	bgt.n	8016f36 <_ZN8touchgfx8LCD16bpp19DecompressorRGB_QOI16blitCopyARGB8888EPKhRKNS_4RectES6_h+0x34a>
 8016e98:	f8dd b004 	ldr.w	fp, [sp, #4]
 8016e9c:	2400      	movs	r4, #0
 8016e9e:	f1bb 0f00 	cmp.w	fp, #0
 8016ea2:	f340 8122 	ble.w	80170ea <_ZN8touchgfx8LCD16bpp19DecompressorRGB_QOI16blitCopyARGB8888EPKhRKNS_4RectES6_h+0x4fe>
 8016ea6:	1c7b      	adds	r3, r7, #1
 8016ea8:	9303      	str	r3, [sp, #12]
 8016eaa:	783b      	ldrb	r3, [r7, #0]
 8016eac:	b2db      	uxtb	r3, r3
 8016eae:	2bfe      	cmp	r3, #254	@ 0xfe
 8016eb0:	d160      	bne.n	8016f74 <_ZN8touchgfx8LCD16bpp19DecompressorRGB_QOI16blitCopyARGB8888EPKhRKNS_4RectES6_h+0x388>
 8016eb2:	7879      	ldrb	r1, [r7, #1]
 8016eb4:	78ba      	ldrb	r2, [r7, #2]
 8016eb6:	78f8      	ldrb	r0, [r7, #3]
 8016eb8:	b2c9      	uxtb	r1, r1
 8016eba:	f361 0507 	bfi	r5, r1, #0, #8
 8016ebe:	b2d2      	uxtb	r2, r2
 8016ec0:	1d3b      	adds	r3, r7, #4
 8016ec2:	f362 250f 	bfi	r5, r2, #8, #8
 8016ec6:	b2c0      	uxtb	r0, r0
 8016ec8:	9303      	str	r3, [sp, #12]
 8016eca:	eb02 0282 	add.w	r2, r2, r2, lsl #2
 8016ece:	2303      	movs	r3, #3
 8016ed0:	fb13 2200 	smlabb	r2, r3, r0, r2
 8016ed4:	f360 4517 	bfi	r5, r0, #16, #8
 8016ed8:	2307      	movs	r3, #7
 8016eda:	fb13 2101 	smlabb	r1, r3, r1, r2
 8016ede:	0e2e      	lsrs	r6, r5, #24
 8016ee0:	230b      	movs	r3, #11
 8016ee2:	fb13 1306 	smlabb	r3, r3, r6, r1
 8016ee6:	f003 033f 	and.w	r3, r3, #63	@ 0x3f
 8016eea:	eb0a 0383 	add.w	r3, sl, r3, lsl #2
 8016eee:	605d      	str	r5, [r3, #4]
 8016ef0:	2601      	movs	r6, #1
 8016ef2:	4637      	mov	r7, r6
 8016ef4:	0e2b      	lsrs	r3, r5, #24
 8016ef6:	ebab 0b07 	sub.w	fp, fp, r7
 8016efa:	eba6 0607 	sub.w	r6, r6, r7
 8016efe:	f040 80d3 	bne.w	80170a8 <_ZN8touchgfx8LCD16bpp19DecompressorRGB_QOI16blitCopyARGB8888EPKhRKNS_4RectES6_h+0x4bc>
 8016f02:	b18c      	cbz	r4, 8016f28 <_ZN8touchgfx8LCD16bpp19DecompressorRGB_QOI16blitCopyARGB8888EPKhRKNS_4RectES6_h+0x33c>
 8016f04:	4648      	mov	r0, r9
 8016f06:	00a1      	lsls	r1, r4, #2
 8016f08:	f7f5 faeb 	bl	800c4e2 <_ZN8touchgfx5paint9flushLineEPmi>
 8016f0c:	9b05      	ldr	r3, [sp, #20]
 8016f0e:	4622      	mov	r2, r4
 8016f10:	4649      	mov	r1, r9
 8016f12:	4640      	mov	r0, r8
 8016f14:	f7f5 fb98 	bl	800c648 <_ZN8touchgfx5paint6rgb56516lineFromARGB8888EPtPKmjh>
 8016f18:	4b2c      	ldr	r3, [pc, #176]	@ (8016fcc <_ZN8touchgfx8LCD16bpp19DecompressorRGB_QOI16blitCopyARGB8888EPKhRKNS_4RectES6_h+0x3e0>)
 8016f1a:	4a2d      	ldr	r2, [pc, #180]	@ (8016fd0 <_ZN8touchgfx8LCD16bpp19DecompressorRGB_QOI16blitCopyARGB8888EPKhRKNS_4RectES6_h+0x3e4>)
 8016f1c:	4599      	cmp	r9, r3
 8016f1e:	bf08      	it	eq
 8016f20:	4613      	moveq	r3, r2
 8016f22:	eb08 0844 	add.w	r8, r8, r4, lsl #1
 8016f26:	4699      	mov	r9, r3
 8016f28:	eb08 0847 	add.w	r8, r8, r7, lsl #1
 8016f2c:	2400      	movs	r4, #0
 8016f2e:	e0da      	b.n	80170e6 <_ZN8touchgfx8LCD16bpp19DecompressorRGB_QOI16blitCopyARGB8888EPKhRKNS_4RectES6_h+0x4fa>
 8016f30:	1ba6      	subs	r6, r4, r6
 8016f32:	b2b4      	uxth	r4, r6
 8016f34:	e70f      	b.n	8016d56 <_ZN8touchgfx8LCD16bpp19DecompressorRGB_QOI16blitCopyARGB8888EPKhRKNS_4RectES6_h+0x16a>
 8016f36:	9b01      	ldr	r3, [sp, #4]
 8016f38:	9a01      	ldr	r2, [sp, #4]
 8016f3a:	42b3      	cmp	r3, r6
 8016f3c:	bfa8      	it	ge
 8016f3e:	4633      	movge	r3, r6
 8016f40:	0e2c      	lsrs	r4, r5, #24
 8016f42:	eba2 0b03 	sub.w	fp, r2, r3
 8016f46:	eba6 0603 	sub.w	r6, r6, r3
 8016f4a:	d00b      	beq.n	8016f64 <_ZN8touchgfx8LCD16bpp19DecompressorRGB_QOI16blitCopyARGB8888EPKhRKNS_4RectES6_h+0x378>
 8016f4c:	f1a9 0104 	sub.w	r1, r9, #4
 8016f50:	461a      	mov	r2, r3
 8016f52:	2a00      	cmp	r2, #0
 8016f54:	dc02      	bgt.n	8016f5c <_ZN8touchgfx8LCD16bpp19DecompressorRGB_QOI16blitCopyARGB8888EPKhRKNS_4RectES6_h+0x370>
 8016f56:	ea23 74e3 	bic.w	r4, r3, r3, asr #31
 8016f5a:	e7a0      	b.n	8016e9e <_ZN8touchgfx8LCD16bpp19DecompressorRGB_QOI16blitCopyARGB8888EPKhRKNS_4RectES6_h+0x2b2>
 8016f5c:	f841 5f04 	str.w	r5, [r1, #4]!
 8016f60:	3a01      	subs	r2, #1
 8016f62:	e7f6      	b.n	8016f52 <_ZN8touchgfx8LCD16bpp19DecompressorRGB_QOI16blitCopyARGB8888EPKhRKNS_4RectES6_h+0x366>
 8016f64:	eb08 0843 	add.w	r8, r8, r3, lsl #1
 8016f68:	e799      	b.n	8016e9e <_ZN8touchgfx8LCD16bpp19DecompressorRGB_QOI16blitCopyARGB8888EPKhRKNS_4RectES6_h+0x2b2>
 8016f6a:	4637      	mov	r7, r6
 8016f6c:	f8dd b004 	ldr.w	fp, [sp, #4]
 8016f70:	4626      	mov	r6, r4
 8016f72:	e794      	b.n	8016e9e <_ZN8touchgfx8LCD16bpp19DecompressorRGB_QOI16blitCopyARGB8888EPKhRKNS_4RectES6_h+0x2b2>
 8016f74:	2bff      	cmp	r3, #255	@ 0xff
 8016f76:	d11d      	bne.n	8016fb4 <_ZN8touchgfx8LCD16bpp19DecompressorRGB_QOI16blitCopyARGB8888EPKhRKNS_4RectES6_h+0x3c8>
 8016f78:	7878      	ldrb	r0, [r7, #1]
 8016f7a:	78ba      	ldrb	r2, [r7, #2]
 8016f7c:	78fe      	ldrb	r6, [r7, #3]
 8016f7e:	1d7b      	adds	r3, r7, #5
 8016f80:	b2c0      	uxtb	r0, r0
 8016f82:	9303      	str	r3, [sp, #12]
 8016f84:	793b      	ldrb	r3, [r7, #4]
 8016f86:	f360 0507 	bfi	r5, r0, #0, #8
 8016f8a:	b2d2      	uxtb	r2, r2
 8016f8c:	b2d9      	uxtb	r1, r3
 8016f8e:	f362 250f 	bfi	r5, r2, #8, #8
 8016f92:	b2f6      	uxtb	r6, r6
 8016f94:	2303      	movs	r3, #3
 8016f96:	eb02 0282 	add.w	r2, r2, r2, lsl #2
 8016f9a:	fb13 2206 	smlabb	r2, r3, r6, r2
 8016f9e:	2307      	movs	r3, #7
 8016fa0:	fb13 2000 	smlabb	r0, r3, r0, r2
 8016fa4:	f366 4517 	bfi	r5, r6, #16, #8
 8016fa8:	230b      	movs	r3, #11
 8016faa:	f361 651f 	bfi	r5, r1, #24, #8
 8016fae:	fb13 0301 	smlabb	r3, r3, r1, r0
 8016fb2:	e798      	b.n	8016ee6 <_ZN8touchgfx8LCD16bpp19DecompressorRGB_QOI16blitCopyARGB8888EPKhRKNS_4RectES6_h+0x2fa>
 8016fb4:	119e      	asrs	r6, r3, #6
 8016fb6:	d10d      	bne.n	8016fd4 <_ZN8touchgfx8LCD16bpp19DecompressorRGB_QOI16blitCopyARGB8888EPKhRKNS_4RectES6_h+0x3e8>
 8016fb8:	f003 033f 	and.w	r3, r3, #63	@ 0x3f
 8016fbc:	eb0a 0383 	add.w	r3, sl, r3, lsl #2
 8016fc0:	685d      	ldr	r5, [r3, #4]
 8016fc2:	e795      	b.n	8016ef0 <_ZN8touchgfx8LCD16bpp19DecompressorRGB_QOI16blitCopyARGB8888EPKhRKNS_4RectES6_h+0x304>
 8016fc4:	20002dbc 	.word	0x20002dbc
 8016fc8:	20002db6 	.word	0x20002db6
 8016fcc:	20000120 	.word	0x20000120
 8016fd0:	20000220 	.word	0x20000220
 8016fd4:	2e01      	cmp	r6, #1
 8016fd6:	ea4f 6115 	mov.w	r1, r5, lsr #24
 8016fda:	d12b      	bne.n	8017034 <_ZN8touchgfx8LCD16bpp19DecompressorRGB_QOI16blitCopyARGB8888EPKhRKNS_4RectES6_h+0x448>
 8016fdc:	f003 0003 	and.w	r0, r3, #3
 8016fe0:	3802      	subs	r0, #2
 8016fe2:	eb05 00c0 	add.w	r0, r5, r0, lsl #3
 8016fe6:	b2c0      	uxtb	r0, r0
 8016fe8:	f003 020c 	and.w	r2, r3, #12
 8016fec:	f360 0507 	bfi	r5, r0, #0, #8
 8016ff0:	3a08      	subs	r2, #8
 8016ff2:	eb02 2215 	add.w	r2, r2, r5, lsr #8
 8016ff6:	f002 02ff 	and.w	r2, r2, #255	@ 0xff
 8016ffa:	f362 250f 	bfi	r5, r2, #8, #8
 8016ffe:	f3c3 1301 	ubfx	r3, r3, #4, #2
 8017002:	1e9f      	subs	r7, r3, #2
 8017004:	f3c5 4307 	ubfx	r3, r5, #16, #8
 8017008:	eb03 03c7 	add.w	r3, r3, r7, lsl #3
 801700c:	b2db      	uxtb	r3, r3
 801700e:	2703      	movs	r7, #3
 8017010:	eb02 0282 	add.w	r2, r2, r2, lsl #2
 8017014:	fb17 2203 	smlabb	r2, r7, r3, r2
 8017018:	2707      	movs	r7, #7
 801701a:	f363 4517 	bfi	r5, r3, #16, #8
 801701e:	fb17 2000 	smlabb	r0, r7, r0, r2
 8017022:	230b      	movs	r3, #11
 8017024:	fb13 0101 	smlabb	r1, r3, r1, r0
 8017028:	f001 013f 	and.w	r1, r1, #63	@ 0x3f
 801702c:	eb0a 0181 	add.w	r1, sl, r1, lsl #2
 8017030:	604d      	str	r5, [r1, #4]
 8017032:	e75e      	b.n	8016ef2 <_ZN8touchgfx8LCD16bpp19DecompressorRGB_QOI16blitCopyARGB8888EPKhRKNS_4RectES6_h+0x306>
 8017034:	2e02      	cmp	r6, #2
 8017036:	f003 033f 	and.w	r3, r3, #63	@ 0x3f
 801703a:	d12f      	bne.n	801709c <_ZN8touchgfx8LCD16bpp19DecompressorRGB_QOI16blitCopyARGB8888EPKhRKNS_4RectES6_h+0x4b0>
 801703c:	7878      	ldrb	r0, [r7, #1]
 801703e:	1cba      	adds	r2, r7, #2
 8017040:	b2c0      	uxtb	r0, r0
 8017042:	9203      	str	r2, [sp, #12]
 8017044:	f000 020f 	and.w	r2, r0, #15
 8017048:	3b20      	subs	r3, #32
 801704a:	3a08      	subs	r2, #8
 801704c:	441a      	add	r2, r3
 801704e:	eb05 02c2 	add.w	r2, r5, r2, lsl #3
 8017052:	b2d2      	uxtb	r2, r2
 8017054:	f362 0507 	bfi	r5, r2, #0, #8
 8017058:	f3c5 2607 	ubfx	r6, r5, #8, #8
 801705c:	eb06 0683 	add.w	r6, r6, r3, lsl #2
 8017060:	b2f6      	uxtb	r6, r6
 8017062:	1100      	asrs	r0, r0, #4
 8017064:	f366 250f 	bfi	r5, r6, #8, #8
 8017068:	3808      	subs	r0, #8
 801706a:	4403      	add	r3, r0
 801706c:	f3c5 4007 	ubfx	r0, r5, #16, #8
 8017070:	eb00 03c3 	add.w	r3, r0, r3, lsl #3
 8017074:	b2db      	uxtb	r3, r3
 8017076:	2003      	movs	r0, #3
 8017078:	eb06 0686 	add.w	r6, r6, r6, lsl #2
 801707c:	fb10 6603 	smlabb	r6, r0, r3, r6
 8017080:	2007      	movs	r0, #7
 8017082:	f363 4517 	bfi	r5, r3, #16, #8
 8017086:	fb10 6202 	smlabb	r2, r0, r2, r6
 801708a:	230b      	movs	r3, #11
 801708c:	fb13 2101 	smlabb	r1, r3, r1, r2
 8017090:	f001 013f 	and.w	r1, r1, #63	@ 0x3f
 8017094:	eb0a 0181 	add.w	r1, sl, r1, lsl #2
 8017098:	604d      	str	r5, [r1, #4]
 801709a:	e729      	b.n	8016ef0 <_ZN8touchgfx8LCD16bpp19DecompressorRGB_QOI16blitCopyARGB8888EPKhRKNS_4RectES6_h+0x304>
 801709c:	1c5e      	adds	r6, r3, #1
 801709e:	45b3      	cmp	fp, r6
 80170a0:	465f      	mov	r7, fp
 80170a2:	bfa8      	it	ge
 80170a4:	4637      	movge	r7, r6
 80170a6:	e725      	b.n	8016ef4 <_ZN8touchgfx8LCD16bpp19DecompressorRGB_QOI16blitCopyARGB8888EPKhRKNS_4RectES6_h+0x308>
 80170a8:	193b      	adds	r3, r7, r4
 80170aa:	2b40      	cmp	r3, #64	@ 0x40
 80170ac:	dd13      	ble.n	80170d6 <_ZN8touchgfx8LCD16bpp19DecompressorRGB_QOI16blitCopyARGB8888EPKhRKNS_4RectES6_h+0x4ea>
 80170ae:	4648      	mov	r0, r9
 80170b0:	00a1      	lsls	r1, r4, #2
 80170b2:	f7f5 fa16 	bl	800c4e2 <_ZN8touchgfx5paint9flushLineEPmi>
 80170b6:	4649      	mov	r1, r9
 80170b8:	9b05      	ldr	r3, [sp, #20]
 80170ba:	4622      	mov	r2, r4
 80170bc:	4640      	mov	r0, r8
 80170be:	f7f5 fac3 	bl	800c648 <_ZN8touchgfx5paint6rgb56516lineFromARGB8888EPtPKmjh>
 80170c2:	4b2d      	ldr	r3, [pc, #180]	@ (8017178 <_ZN8touchgfx8LCD16bpp19DecompressorRGB_QOI16blitCopyARGB8888EPKhRKNS_4RectES6_h+0x58c>)
 80170c4:	4599      	cmp	r9, r3
 80170c6:	bf0c      	ite	eq
 80170c8:	f8df 90b8 	ldreq.w	r9, [pc, #184]	@ 8017184 <_ZN8touchgfx8LCD16bpp19DecompressorRGB_QOI16blitCopyARGB8888EPKhRKNS_4RectES6_h+0x598>
 80170cc:	f8df 90a8 	ldrne.w	r9, [pc, #168]	@ 8017178 <_ZN8touchgfx8LCD16bpp19DecompressorRGB_QOI16blitCopyARGB8888EPKhRKNS_4RectES6_h+0x58c>
 80170d0:	eb08 0844 	add.w	r8, r8, r4, lsl #1
 80170d4:	2400      	movs	r4, #0
 80170d6:	eb09 0284 	add.w	r2, r9, r4, lsl #2
 80170da:	463b      	mov	r3, r7
 80170dc:	3b01      	subs	r3, #1
 80170de:	f842 5b04 	str.w	r5, [r2], #4
 80170e2:	d1fb      	bne.n	80170dc <_ZN8touchgfx8LCD16bpp19DecompressorRGB_QOI16blitCopyARGB8888EPKhRKNS_4RectES6_h+0x4f0>
 80170e4:	443c      	add	r4, r7
 80170e6:	9f03      	ldr	r7, [sp, #12]
 80170e8:	e6d9      	b.n	8016e9e <_ZN8touchgfx8LCD16bpp19DecompressorRGB_QOI16blitCopyARGB8888EPKhRKNS_4RectES6_h+0x2b2>
 80170ea:	b15c      	cbz	r4, 8017104 <_ZN8touchgfx8LCD16bpp19DecompressorRGB_QOI16blitCopyARGB8888EPKhRKNS_4RectES6_h+0x518>
 80170ec:	00a1      	lsls	r1, r4, #2
 80170ee:	4648      	mov	r0, r9
 80170f0:	f7f5 f9f7 	bl	800c4e2 <_ZN8touchgfx5paint9flushLineEPmi>
 80170f4:	4640      	mov	r0, r8
 80170f6:	9b05      	ldr	r3, [sp, #20]
 80170f8:	4622      	mov	r2, r4
 80170fa:	4649      	mov	r1, r9
 80170fc:	f7f5 faa4 	bl	800c648 <_ZN8touchgfx5paint6rgb56516lineFromARGB8888EPtPKmjh>
 8017100:	eb08 0844 	add.w	r8, r8, r4, lsl #1
 8017104:	4b1d      	ldr	r3, [pc, #116]	@ (801717c <_ZN8touchgfx8LCD16bpp19DecompressorRGB_QOI16blitCopyARGB8888EPKhRKNS_4RectES6_h+0x590>)
 8017106:	9a01      	ldr	r2, [sp, #4]
 8017108:	881b      	ldrh	r3, [r3, #0]
 801710a:	1a9b      	subs	r3, r3, r2
 801710c:	eb08 0843 	add.w	r8, r8, r3, lsl #1
 8017110:	9b04      	ldr	r3, [sp, #16]
 8017112:	3301      	adds	r3, #1
 8017114:	9304      	str	r3, [sp, #16]
 8017116:	9a04      	ldr	r2, [sp, #16]
 8017118:	9b00      	ldr	r3, [sp, #0]
 801711a:	4293      	cmp	r3, r2
 801711c:	d11d      	bne.n	801715a <_ZN8touchgfx8LCD16bpp19DecompressorRGB_QOI16blitCopyARGB8888EPKhRKNS_4RectES6_h+0x56e>
 801711e:	9b02      	ldr	r3, [sp, #8]
 8017120:	9a02      	ldr	r2, [sp, #8]
 8017122:	f8bd 4030 	ldrh.w	r4, [sp, #48]	@ 0x30
 8017126:	f8bd 6028 	ldrh.w	r6, [sp, #40]	@ 0x28
 801712a:	9808      	ldr	r0, [sp, #32]
 801712c:	f103 0b01 	add.w	fp, r3, #1
 8017130:	9b06      	ldr	r3, [sp, #24]
 8017132:	f853 7022 	ldr.w	r7, [r3, r2, lsl #2]
 8017136:	9b07      	ldr	r3, [sp, #28]
 8017138:	2500      	movs	r5, #0
 801713a:	ba3f      	rev	r7, r7
 801713c:	1ba4      	subs	r4, r4, r6
 801713e:	f44f 7280 	mov.w	r2, #256	@ 0x100
 8017142:	4629      	mov	r1, r5
 8017144:	441f      	add	r7, r3
 8017146:	b2a4      	uxth	r4, r4
 8017148:	f00b fba9 	bl	802289e <memset>
 801714c:	f8cd b008 	str.w	fp, [sp, #8]
 8017150:	9504      	str	r5, [sp, #16]
 8017152:	f7f5 f9bf 	bl	800c4d4 <_ZN8touchgfx5paint8tearDownEv>
 8017156:	463e      	mov	r6, r7
 8017158:	e5cc      	b.n	8016cf4 <_ZN8touchgfx8LCD16bpp19DecompressorRGB_QOI16blitCopyARGB8888EPKhRKNS_4RectES6_h+0x108>
 801715a:	f8bd 402c 	ldrh.w	r4, [sp, #44]	@ 0x2c
 801715e:	9b01      	ldr	r3, [sp, #4]
 8017160:	1ae4      	subs	r4, r4, r3
 8017162:	1ba4      	subs	r4, r4, r6
 8017164:	b2a4      	uxth	r4, r4
 8017166:	e7f4      	b.n	8017152 <_ZN8touchgfx8LCD16bpp19DecompressorRGB_QOI16blitCopyARGB8888EPKhRKNS_4RectES6_h+0x566>
 8017168:	4b05      	ldr	r3, [pc, #20]	@ (8017180 <_ZN8touchgfx8LCD16bpp19DecompressorRGB_QOI16blitCopyARGB8888EPKhRKNS_4RectES6_h+0x594>)
 801716a:	6818      	ldr	r0, [r3, #0]
 801716c:	6803      	ldr	r3, [r0, #0]
 801716e:	6adb      	ldr	r3, [r3, #44]	@ 0x2c
 8017170:	4798      	blx	r3
 8017172:	b00f      	add	sp, #60	@ 0x3c
 8017174:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 8017178:	20000120 	.word	0x20000120
 801717c:	20002db6 	.word	0x20002db6
 8017180:	20002dbc 	.word	0x20002dbc
 8017184:	20000220 	.word	0x20000220

08017188 <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE14blitCopyRGB565EPKhS3_RKNS_4RectES6_h>:
 8017188:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 801718c:	b08f      	sub	sp, #60	@ 0x3c
 801718e:	461c      	mov	r4, r3
 8017190:	9205      	str	r2, [sp, #20]
 8017192:	f89d 2064 	ldrb.w	r2, [sp, #100]	@ 0x64
 8017196:	9100      	str	r1, [sp, #0]
 8017198:	9b18      	ldr	r3, [sp, #96]	@ 0x60
 801719a:	9201      	str	r2, [sp, #4]
 801719c:	2a00      	cmp	r2, #0
 801719e:	f000 8115 	beq.w	80173cc <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE14blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x244>
 80171a2:	6820      	ldr	r0, [r4, #0]
 80171a4:	6861      	ldr	r1, [r4, #4]
 80171a6:	aa0a      	add	r2, sp, #40	@ 0x28
 80171a8:	c203      	stmia	r2!, {r0, r1}
 80171aa:	6818      	ldr	r0, [r3, #0]
 80171ac:	6859      	ldr	r1, [r3, #4]
 80171ae:	aa0c      	add	r2, sp, #48	@ 0x30
 80171b0:	c203      	stmia	r2!, {r0, r1}
 80171b2:	a80a      	add	r0, sp, #40	@ 0x28
 80171b4:	f7f9 f9d8 	bl	8010568 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectE>
 80171b8:	4621      	mov	r1, r4
 80171ba:	a80c      	add	r0, sp, #48	@ 0x30
 80171bc:	f7f9 f9fc 	bl	80105b8 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectERKS1_>
 80171c0:	f9bd 602c 	ldrsh.w	r6, [sp, #44]	@ 0x2c
 80171c4:	f9bd 502e 	ldrsh.w	r5, [sp, #46]	@ 0x2e
 80171c8:	f8bd 0030 	ldrh.w	r0, [sp, #48]	@ 0x30
 80171cc:	f5b6 6f80 	cmp.w	r6, #1024	@ 0x400
 80171d0:	bfde      	ittt	le
 80171d2:	b2b3      	uxthle	r3, r6
 80171d4:	f44f 6280 	movle.w	r2, #1024	@ 0x400
 80171d8:	fb92 f3f3 	sdivle	r3, r2, r3
 80171dc:	f9bd 2032 	ldrsh.w	r2, [sp, #50]	@ 0x32
 80171e0:	bfc8      	it	gt
 80171e2:	2301      	movgt	r3, #1
 80171e4:	fb92 f1f3 	sdiv	r1, r2, r3
 80171e8:	fa1f fc81 	uxth.w	ip, r1
 80171ec:	fb0c 2413 	mls	r4, ip, r3, r2
 80171f0:	fb14 f406 	smulbb	r4, r4, r6
 80171f4:	441d      	add	r5, r3
 80171f6:	4404      	add	r4, r0
 80171f8:	4661      	mov	r1, ip
 80171fa:	3d01      	subs	r5, #1
 80171fc:	b2a4      	uxth	r4, r4
 80171fe:	fb95 f5f3 	sdiv	r5, r5, r3
 8017202:	b131      	cbz	r1, 8017212 <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE14blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x8a>
 8017204:	9b05      	ldr	r3, [sp, #20]
 8017206:	9900      	ldr	r1, [sp, #0]
 8017208:	f853 302c 	ldr.w	r3, [r3, ip, lsl #2]
 801720c:	ba1b      	rev	r3, r3
 801720e:	4419      	add	r1, r3
 8017210:	9100      	str	r1, [sp, #0]
 8017212:	f8bd 3028 	ldrh.w	r3, [sp, #40]	@ 0x28
 8017216:	f9bd 8034 	ldrsh.w	r8, [sp, #52]	@ 0x34
 801721a:	f9bd 6036 	ldrsh.w	r6, [sp, #54]	@ 0x36
 801721e:	4418      	add	r0, r3
 8017220:	f8bd 302a 	ldrh.w	r3, [sp, #42]	@ 0x2a
 8017224:	f8ad 0030 	strh.w	r0, [sp, #48]	@ 0x30
 8017228:	441a      	add	r2, r3
 801722a:	4b6a      	ldr	r3, [pc, #424]	@ (80173d4 <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE14blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x24c>)
 801722c:	f8ad 2032 	strh.w	r2, [sp, #50]	@ 0x32
 8017230:	6818      	ldr	r0, [r3, #0]
 8017232:	6803      	ldr	r3, [r0, #0]
 8017234:	6a9b      	ldr	r3, [r3, #40]	@ 0x28
 8017236:	4798      	blx	r3
 8017238:	4967      	ldr	r1, [pc, #412]	@ (80173d8 <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE14blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x250>)
 801723a:	f9bd 2032 	ldrsh.w	r2, [sp, #50]	@ 0x32
 801723e:	880b      	ldrh	r3, [r1, #0]
 8017240:	f9bd c030 	ldrsh.w	ip, [sp, #48]	@ 0x30
 8017244:	9109      	str	r1, [sp, #36]	@ 0x24
 8017246:	fb03 c202 	mla	r2, r3, r2, ip
 801724a:	eb00 0042 	add.w	r0, r0, r2, lsl #1
 801724e:	4373      	muls	r3, r6
 8017250:	b2ad      	uxth	r5, r5
 8017252:	eb00 0343 	add.w	r3, r0, r3, lsl #1
 8017256:	00ad      	lsls	r5, r5, #2
 8017258:	9306      	str	r3, [sp, #24]
 801725a:	1d2b      	adds	r3, r5, #4
 801725c:	9307      	str	r3, [sp, #28]
 801725e:	9b01      	ldr	r3, [sp, #4]
 8017260:	f8bd 1004 	ldrh.w	r1, [sp, #4]
 8017264:	9103      	str	r1, [sp, #12]
 8017266:	f1c3 02ff 	rsb	r2, r3, #255	@ 0xff
 801726a:	2c00      	cmp	r4, #0
 801726c:	bf0c      	ite	eq
 801726e:	46c6      	moveq	lr, r8
 8017270:	f04f 0e00 	movne.w	lr, #0
 8017274:	2300      	movs	r3, #0
 8017276:	b292      	uxth	r2, r2
 8017278:	fa1f fe8e 	uxth.w	lr, lr
 801727c:	9302      	str	r3, [sp, #8]
 801727e:	9204      	str	r2, [sp, #16]
 8017280:	9a06      	ldr	r2, [sp, #24]
 8017282:	4282      	cmp	r2, r0
 8017284:	f240 809d 	bls.w	80173c2 <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE14blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x23a>
 8017288:	b963      	cbnz	r3, 80172a4 <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE14blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x11c>
 801728a:	9b00      	ldr	r3, [sp, #0]
 801728c:	781a      	ldrb	r2, [r3, #0]
 801728e:	0993      	lsrs	r3, r2, #6
 8017290:	f002 023f 	and.w	r2, r2, #63	@ 0x3f
 8017294:	9202      	str	r2, [sp, #8]
 8017296:	1e5a      	subs	r2, r3, #1
 8017298:	2a02      	cmp	r2, #2
 801729a:	d815      	bhi.n	80172c8 <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE14blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x140>
 801729c:	9a00      	ldr	r2, [sp, #0]
 801729e:	3201      	adds	r2, #1
 80172a0:	9200      	str	r2, [sp, #0]
 80172a2:	b29b      	uxth	r3, r3
 80172a4:	b1b4      	cbz	r4, 80172d4 <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE14blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x14c>
 80172a6:	429c      	cmp	r4, r3
 80172a8:	bf95      	itete	ls
 80172aa:	1b1c      	subls	r4, r3, r4
 80172ac:	1ae4      	subhi	r4, r4, r3
 80172ae:	fa1f fa84 	uxthls.w	sl, r4
 80172b2:	b2a4      	uxthhi	r4, r4
 80172b4:	bf87      	ittee	hi
 80172b6:	4671      	movhi	r1, lr
 80172b8:	f04f 0a00 	movhi.w	sl, #0
 80172bc:	fa1f f188 	uxthls.w	r1, r8
 80172c0:	2400      	movls	r4, #0
 80172c2:	4653      	mov	r3, sl
 80172c4:	468e      	mov	lr, r1
 80172c6:	e7db      	b.n	8017280 <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE14blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0xf8>
 80172c8:	9a00      	ldr	r2, [sp, #0]
 80172ca:	9b00      	ldr	r3, [sp, #0]
 80172cc:	3202      	adds	r2, #2
 80172ce:	785b      	ldrb	r3, [r3, #1]
 80172d0:	9200      	str	r2, [sp, #0]
 80172d2:	e7e7      	b.n	80172a4 <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE14blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x11c>
 80172d4:	2202      	movs	r2, #2
 80172d6:	4615      	mov	r5, r2
 80172d8:	9907      	ldr	r1, [sp, #28]
 80172da:	9a02      	ldr	r2, [sp, #8]
 80172dc:	fb15 1202 	smlabb	r2, r5, r2, r1
 80172e0:	9905      	ldr	r1, [sp, #20]
 80172e2:	4573      	cmp	r3, lr
 80172e4:	f831 c002 	ldrh.w	ip, [r1, r2]
 80172e8:	9a01      	ldr	r2, [sp, #4]
 80172ea:	bf2b      	itete	cs
 80172ec:	eba3 0a0e 	subcs.w	sl, r3, lr
 80172f0:	ebae 0103 	subcc.w	r1, lr, r3
 80172f4:	46f1      	movcs	r9, lr
 80172f6:	4699      	movcc	r9, r3
 80172f8:	bf27      	ittee	cs
 80172fa:	fa1f fa8a 	uxthcs.w	sl, sl
 80172fe:	4621      	movcs	r1, r4
 8017300:	b289      	uxthcc	r1, r1
 8017302:	46a2      	movcc	sl, r4
 8017304:	2aff      	cmp	r2, #255	@ 0xff
 8017306:	ea4f 0949 	mov.w	r9, r9, lsl #1
 801730a:	d105      	bne.n	8017318 <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE14blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x190>
 801730c:	4481      	add	r9, r0
 801730e:	4581      	cmp	r9, r0
 8017310:	d045      	beq.n	801739e <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE14blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x216>
 8017312:	f820 cb02 	strh.w	ip, [r0], #2
 8017316:	e7fa      	b.n	801730e <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE14blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x186>
 8017318:	9d03      	ldr	r5, [sp, #12]
 801731a:	ea4f 222c 	mov.w	r2, ip, asr #8
 801731e:	ea4f 0bec 	mov.w	fp, ip, asr #3
 8017322:	f002 02f8 	and.w	r2, r2, #248	@ 0xf8
 8017326:	ea4f 0ccc 	mov.w	ip, ip, lsl #3
 801732a:	436a      	muls	r2, r5
 801732c:	f00b 0bfc 	and.w	fp, fp, #252	@ 0xfc
 8017330:	fa5f fc8c 	uxtb.w	ip, ip
 8017334:	9208      	str	r2, [sp, #32]
 8017336:	fb0b fb05 	mul.w	fp, fp, r5
 801733a:	fb0c fc05 	mul.w	ip, ip, r5
 801733e:	4481      	add	r9, r0
 8017340:	4581      	cmp	r9, r0
 8017342:	d02c      	beq.n	801739e <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE14blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x216>
 8017344:	8802      	ldrh	r2, [r0, #0]
 8017346:	9d04      	ldr	r5, [sp, #16]
 8017348:	9f04      	ldr	r7, [sp, #16]
 801734a:	1216      	asrs	r6, r2, #8
 801734c:	f006 06f8 	and.w	r6, r6, #248	@ 0xf8
 8017350:	fb16 f605 	smulbb	r6, r6, r5
 8017354:	9d08      	ldr	r5, [sp, #32]
 8017356:	442e      	add	r6, r5
 8017358:	10d5      	asrs	r5, r2, #3
 801735a:	00d2      	lsls	r2, r2, #3
 801735c:	b2d2      	uxtb	r2, r2
 801735e:	fb12 f207 	smulbb	r2, r2, r7
 8017362:	b2b6      	uxth	r6, r6
 8017364:	f005 05fc 	and.w	r5, r5, #252	@ 0xfc
 8017368:	4462      	add	r2, ip
 801736a:	fb15 f507 	smulbb	r5, r5, r7
 801736e:	b292      	uxth	r2, r2
 8017370:	1c77      	adds	r7, r6, #1
 8017372:	eb07 2616 	add.w	r6, r7, r6, lsr #8
 8017376:	1c57      	adds	r7, r2, #1
 8017378:	445d      	add	r5, fp
 801737a:	eb07 2212 	add.w	r2, r7, r2, lsr #8
 801737e:	b2ad      	uxth	r5, r5
 8017380:	f3c2 22c4 	ubfx	r2, r2, #11, #5
 8017384:	f406 4678 	and.w	r6, r6, #63488	@ 0xf800
 8017388:	4316      	orrs	r6, r2
 801738a:	1c6a      	adds	r2, r5, #1
 801738c:	eb02 2515 	add.w	r5, r2, r5, lsr #8
 8017390:	096d      	lsrs	r5, r5, #5
 8017392:	f405 65fc 	and.w	r5, r5, #2016	@ 0x7e0
 8017396:	432e      	orrs	r6, r5
 8017398:	f820 6b02 	strh.w	r6, [r0], #2
 801739c:	e7d0      	b.n	8017340 <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE14blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x1b8>
 801739e:	4573      	cmp	r3, lr
 80173a0:	d38f      	bcc.n	80172c2 <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE14blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x13a>
 80173a2:	f8bd 402c 	ldrh.w	r4, [sp, #44]	@ 0x2c
 80173a6:	9b09      	ldr	r3, [sp, #36]	@ 0x24
 80173a8:	fa1f f188 	uxth.w	r1, r8
 80173ac:	1a64      	subs	r4, r4, r1
 80173ae:	881b      	ldrh	r3, [r3, #0]
 80173b0:	b2a4      	uxth	r4, r4
 80173b2:	2c00      	cmp	r4, #0
 80173b4:	eba3 0308 	sub.w	r3, r3, r8
 80173b8:	bf18      	it	ne
 80173ba:	2100      	movne	r1, #0
 80173bc:	eb00 0043 	add.w	r0, r0, r3, lsl #1
 80173c0:	e77f      	b.n	80172c2 <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE14blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x13a>
 80173c2:	4b04      	ldr	r3, [pc, #16]	@ (80173d4 <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE14blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x24c>)
 80173c4:	6818      	ldr	r0, [r3, #0]
 80173c6:	6803      	ldr	r3, [r0, #0]
 80173c8:	6adb      	ldr	r3, [r3, #44]	@ 0x2c
 80173ca:	4798      	blx	r3
 80173cc:	b00f      	add	sp, #60	@ 0x3c
 80173ce:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 80173d2:	bf00      	nop
 80173d4:	20002dbc 	.word	0x20002dbc
 80173d8:	20002db6 	.word	0x20002db6

080173dc <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB565EPKhS3_RKNS_4RectES6_h>:
 80173dc:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 80173e0:	b09f      	sub	sp, #124	@ 0x7c
 80173e2:	e9cd 1213 	strd	r1, r2, [sp, #76]	@ 0x4c
 80173e6:	f89d 20a4 	ldrb.w	r2, [sp, #164]	@ 0xa4
 80173ea:	9209      	str	r2, [sp, #36]	@ 0x24
 80173ec:	461d      	mov	r5, r3
 80173ee:	4604      	mov	r4, r0
 80173f0:	9b28      	ldr	r3, [sp, #160]	@ 0xa0
 80173f2:	2a00      	cmp	r2, #0
 80173f4:	f000 81eb 	beq.w	80177ce <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x3f2>
 80173f8:	6828      	ldr	r0, [r5, #0]
 80173fa:	6869      	ldr	r1, [r5, #4]
 80173fc:	aa1a      	add	r2, sp, #104	@ 0x68
 80173fe:	c203      	stmia	r2!, {r0, r1}
 8017400:	6818      	ldr	r0, [r3, #0]
 8017402:	6859      	ldr	r1, [r3, #4]
 8017404:	aa1c      	add	r2, sp, #112	@ 0x70
 8017406:	c203      	stmia	r2!, {r0, r1}
 8017408:	a81a      	add	r0, sp, #104	@ 0x68
 801740a:	f7f9 f8ad 	bl	8010568 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectE>
 801740e:	4629      	mov	r1, r5
 8017410:	a81c      	add	r0, sp, #112	@ 0x70
 8017412:	f7f9 f8d1 	bl	80105b8 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectERKS1_>
 8017416:	f9bd 306c 	ldrsh.w	r3, [sp, #108]	@ 0x6c
 801741a:	f9bd 806e 	ldrsh.w	r8, [sp, #110]	@ 0x6e
 801741e:	f9bd 6076 	ldrsh.w	r6, [sp, #118]	@ 0x76
 8017422:	f5b3 6f80 	cmp.w	r3, #1024	@ 0x400
 8017426:	bfd7      	itett	le
 8017428:	b29a      	uxthle	r2, r3
 801742a:	2201      	movgt	r2, #1
 801742c:	f44f 6180 	movle.w	r1, #1024	@ 0x400
 8017430:	fb91 f2f2 	sdivle	r2, r1, r2
 8017434:	9202      	str	r2, [sp, #8]
 8017436:	9802      	ldr	r0, [sp, #8]
 8017438:	f9bd 2072 	ldrsh.w	r2, [sp, #114]	@ 0x72
 801743c:	fb92 f0f0 	sdiv	r0, r2, r0
 8017440:	b280      	uxth	r0, r0
 8017442:	9010      	str	r0, [sp, #64]	@ 0x40
 8017444:	9902      	ldr	r1, [sp, #8]
 8017446:	9802      	ldr	r0, [sp, #8]
 8017448:	9d10      	ldr	r5, [sp, #64]	@ 0x40
 801744a:	4488      	add	r8, r1
 801744c:	fb05 2510 	mls	r5, r5, r0, r2
 8017450:	fb15 f503 	smulbb	r5, r5, r3
 8017454:	f108 38ff 	add.w	r8, r8, #4294967295
 8017458:	f8bd 3068 	ldrh.w	r3, [sp, #104]	@ 0x68
 801745c:	fb98 f8f1 	sdiv	r8, r8, r1
 8017460:	f8bd 1070 	ldrh.w	r1, [sp, #112]	@ 0x70
 8017464:	440d      	add	r5, r1
 8017466:	4419      	add	r1, r3
 8017468:	f8bd 306a 	ldrh.w	r3, [sp, #106]	@ 0x6a
 801746c:	f8ad 1070 	strh.w	r1, [sp, #112]	@ 0x70
 8017470:	441a      	add	r2, r3
 8017472:	f9bd 3074 	ldrsh.w	r3, [sp, #116]	@ 0x74
 8017476:	9304      	str	r3, [sp, #16]
 8017478:	4b95      	ldr	r3, [pc, #596]	@ (80176d0 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x2f4>)
 801747a:	f8ad 2072 	strh.w	r2, [sp, #114]	@ 0x72
 801747e:	6818      	ldr	r0, [r3, #0]
 8017480:	6803      	ldr	r3, [r0, #0]
 8017482:	6a9b      	ldr	r3, [r3, #40]	@ 0x28
 8017484:	4798      	blx	r3
 8017486:	4b93      	ldr	r3, [pc, #588]	@ (80176d4 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x2f8>)
 8017488:	f9bd 1072 	ldrsh.w	r1, [sp, #114]	@ 0x72
 801748c:	881a      	ldrh	r2, [r3, #0]
 801748e:	f9bd 7070 	ldrsh.w	r7, [sp, #112]	@ 0x70
 8017492:	9318      	str	r3, [sp, #96]	@ 0x60
 8017494:	fb02 7101 	mla	r1, r2, r1, r7
 8017498:	eb00 0041 	add.w	r0, r0, r1, lsl #1
 801749c:	4356      	muls	r6, r2
 801749e:	eb00 0246 	add.w	r2, r0, r6, lsl #1
 80174a2:	f108 0801 	add.w	r8, r8, #1
 80174a6:	920a      	str	r2, [sp, #40]	@ 0x28
 80174a8:	9a14      	ldr	r2, [sp, #80]	@ 0x50
 80174aa:	f8bd 3024 	ldrh.w	r3, [sp, #36]	@ 0x24
 80174ae:	930f      	str	r3, [sp, #60]	@ 0x3c
 80174b0:	fa1f f888 	uxth.w	r8, r8
 80174b4:	eb02 0888 	add.w	r8, r2, r8, lsl #2
 80174b8:	f108 0204 	add.w	r2, r8, #4
 80174bc:	9211      	str	r2, [sp, #68]	@ 0x44
 80174be:	9a09      	ldr	r2, [sp, #36]	@ 0x24
 80174c0:	4b85      	ldr	r3, [pc, #532]	@ (80176d8 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x2fc>)
 80174c2:	f1c2 02ff 	rsb	r2, r2, #255	@ 0xff
 80174c6:	b2ad      	uxth	r5, r5
 80174c8:	9215      	str	r2, [sp, #84]	@ 0x54
 80174ca:	2d00      	cmp	r5, #0
 80174cc:	9a04      	ldr	r2, [sp, #16]
 80174ce:	f04f 0100 	mov.w	r1, #0
 80174d2:	bf18      	it	ne
 80174d4:	2200      	movne	r2, #0
 80174d6:	1b1b      	subs	r3, r3, r4
 80174d8:	b292      	uxth	r2, r2
 80174da:	910d      	str	r1, [sp, #52]	@ 0x34
 80174dc:	9319      	str	r3, [sp, #100]	@ 0x64
 80174de:	9910      	ldr	r1, [sp, #64]	@ 0x40
 80174e0:	9b0d      	ldr	r3, [sp, #52]	@ 0x34
 80174e2:	fa11 f383 	uxtah	r3, r1, r3
 80174e6:	9914      	ldr	r1, [sp, #80]	@ 0x50
 80174e8:	eb01 0383 	add.w	r3, r1, r3, lsl #2
 80174ec:	3304      	adds	r3, #4
 80174ee:	9306      	str	r3, [sp, #24]
 80174f0:	9b0a      	ldr	r3, [sp, #40]	@ 0x28
 80174f2:	4283      	cmp	r3, r0
 80174f4:	f240 8166 	bls.w	80177c4 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x3e8>
 80174f8:	9902      	ldr	r1, [sp, #8]
 80174fa:	f8bd 306c 	ldrh.w	r3, [sp, #108]	@ 0x6c
 80174fe:	fbb5 f3f3 	udiv	r3, r5, r3
 8017502:	1acb      	subs	r3, r1, r3
 8017504:	b29b      	uxth	r3, r3
 8017506:	9316      	str	r3, [sp, #88]	@ 0x58
 8017508:	9b06      	ldr	r3, [sp, #24]
 801750a:	9e06      	ldr	r6, [sp, #24]
 801750c:	7859      	ldrb	r1, [r3, #1]
 801750e:	789b      	ldrb	r3, [r3, #2]
 8017510:	7836      	ldrb	r6, [r6, #0]
 8017512:	9612      	str	r6, [sp, #72]	@ 0x48
 8017514:	021b      	lsls	r3, r3, #8
 8017516:	ea43 4301 	orr.w	r3, r3, r1, lsl #16
 801751a:	9906      	ldr	r1, [sp, #24]
 801751c:	78c9      	ldrb	r1, [r1, #3]
 801751e:	430b      	orrs	r3, r1
 8017520:	9913      	ldr	r1, [sp, #76]	@ 0x4c
 8017522:	3601      	adds	r6, #1
 8017524:	4419      	add	r1, r3
 8017526:	9605      	str	r6, [sp, #20]
 8017528:	1c4e      	adds	r6, r1, #1
 801752a:	9603      	str	r6, [sp, #12]
 801752c:	7849      	ldrb	r1, [r1, #1]
 801752e:	9e13      	ldr	r6, [sp, #76]	@ 0x4c
 8017530:	0209      	lsls	r1, r1, #8
 8017532:	5cf3      	ldrb	r3, [r6, r3]
 8017534:	f401 71ff 	and.w	r1, r1, #510	@ 0x1fe
 8017538:	4319      	orrs	r1, r3
 801753a:	b28b      	uxth	r3, r1
 801753c:	930c      	str	r3, [sp, #48]	@ 0x30
 801753e:	2300      	movs	r3, #0
 8017540:	f04f 0a01 	mov.w	sl, #1
 8017544:	9307      	str	r3, [sp, #28]
 8017546:	469c      	mov	ip, r3
 8017548:	f8bd 3054 	ldrh.w	r3, [sp, #84]	@ 0x54
 801754c:	f884 1804 	strb.w	r1, [r4, #2052]	@ 0x804
 8017550:	46d3      	mov	fp, sl
 8017552:	4657      	mov	r7, sl
 8017554:	930e      	str	r3, [sp, #56]	@ 0x38
 8017556:	2d00      	cmp	r5, #0
 8017558:	d07e      	beq.n	8017658 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x27c>
 801755a:	42af      	cmp	r7, r5
 801755c:	d26e      	bcs.n	801763c <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x260>
 801755e:	9b0a      	ldr	r3, [sp, #40]	@ 0x28
 8017560:	9201      	str	r2, [sp, #4]
 8017562:	1bed      	subs	r5, r5, r7
 8017564:	4283      	cmp	r3, r0
 8017566:	b2ad      	uxth	r5, r5
 8017568:	d802      	bhi.n	8017570 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x194>
 801756a:	e073      	b.n	8017654 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x278>
 801756c:	2b00      	cmp	r3, #0
 801756e:	d15f      	bne.n	8017630 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x254>
 8017570:	9b03      	ldr	r3, [sp, #12]
 8017572:	785b      	ldrb	r3, [r3, #1]
 8017574:	f1cb 0207 	rsb	r2, fp, #7
 8017578:	4093      	lsls	r3, r2
 801757a:	005b      	lsls	r3, r3, #1
 801757c:	f403 72ff 	and.w	r2, r3, #510	@ 0x1fe
 8017580:	9b03      	ldr	r3, [sp, #12]
 8017582:	781b      	ldrb	r3, [r3, #0]
 8017584:	fa43 f30b 	asr.w	r3, r3, fp
 8017588:	b2db      	uxtb	r3, r3
 801758a:	4313      	orrs	r3, r2
 801758c:	f10b 0201 	add.w	r2, fp, #1
 8017590:	fa5f fb82 	uxtb.w	fp, r2
 8017594:	9a03      	ldr	r2, [sp, #12]
 8017596:	f1bb 0f08 	cmp.w	fp, #8
 801759a:	bf15      	itete	ne
 801759c:	3201      	addne	r2, #1
 801759e:	3202      	addeq	r2, #2
 80175a0:	9203      	strne	r2, [sp, #12]
 80175a2:	9203      	streq	r2, [sp, #12]
 80175a4:	9a12      	ldr	r2, [sp, #72]	@ 0x48
 80175a6:	b29f      	uxth	r7, r3
 80175a8:	bf08      	it	eq
 80175aa:	f04f 0b00 	moveq.w	fp, #0
 80175ae:	42ba      	cmp	r2, r7
 80175b0:	d309      	bcc.n	80175c6 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x1ea>
 80175b2:	f884 3804 	strb.w	r3, [r4, #2052]	@ 0x804
 80175b6:	2301      	movs	r3, #1
 80175b8:	9a05      	ldr	r2, [sp, #20]
 80175ba:	f5b2 7f00 	cmp.w	r2, #512	@ 0x200
 80175be:	d30e      	bcc.n	80175de <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x202>
 80175c0:	469a      	mov	sl, r3
 80175c2:	2600      	movs	r6, #0
 80175c4:	e035      	b.n	8017632 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x256>
 80175c6:	9b05      	ldr	r3, [sp, #20]
 80175c8:	429f      	cmp	r7, r3
 80175ca:	d318      	bcc.n	80175fe <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x222>
 80175cc:	eb04 030a 	add.w	r3, r4, sl
 80175d0:	f894 2804 	ldrb.w	r2, [r4, #2052]	@ 0x804
 80175d4:	f883 2804 	strb.w	r2, [r3, #2052]	@ 0x804
 80175d8:	f10a 0301 	add.w	r3, sl, #1
 80175dc:	b29b      	uxth	r3, r3
 80175de:	9a05      	ldr	r2, [sp, #20]
 80175e0:	f894 6804 	ldrb.w	r6, [r4, #2052]	@ 0x804
 80175e4:	990c      	ldr	r1, [sp, #48]	@ 0x30
 80175e6:	eb04 0282 	add.w	r2, r4, r2, lsl #2
 80175ea:	7116      	strb	r6, [r2, #4]
 80175ec:	f10a 0601 	add.w	r6, sl, #1
 80175f0:	80d1      	strh	r1, [r2, #6]
 80175f2:	7156      	strb	r6, [r2, #5]
 80175f4:	9a05      	ldr	r2, [sp, #20]
 80175f6:	3201      	adds	r2, #1
 80175f8:	b292      	uxth	r2, r2
 80175fa:	9205      	str	r2, [sp, #20]
 80175fc:	e7e0      	b.n	80175c0 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x1e4>
 80175fe:	eb04 0387 	add.w	r3, r4, r7, lsl #2
 8017602:	463a      	mov	r2, r7
 8017604:	795b      	ldrb	r3, [r3, #5]
 8017606:	f603 0604 	addw	r6, r3, #2052	@ 0x804
 801760a:	4426      	add	r6, r4
 801760c:	9919      	ldr	r1, [sp, #100]	@ 0x64
 801760e:	eb01 0c06 	add.w	ip, r1, r6
 8017612:	f1bc 0f00 	cmp.w	ip, #0
 8017616:	dd07      	ble.n	8017628 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x24c>
 8017618:	eb04 0282 	add.w	r2, r4, r2, lsl #2
 801761c:	f892 c004 	ldrb.w	ip, [r2, #4]
 8017620:	f806 cd01 	strb.w	ip, [r6, #-1]!
 8017624:	88d2      	ldrh	r2, [r2, #6]
 8017626:	e7f1      	b.n	801760c <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x230>
 8017628:	f884 2804 	strb.w	r2, [r4, #2052]	@ 0x804
 801762c:	b29b      	uxth	r3, r3
 801762e:	e7c3      	b.n	80175b8 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x1dc>
 8017630:	9f0c      	ldr	r7, [sp, #48]	@ 0x30
 8017632:	970c      	str	r7, [sp, #48]	@ 0x30
 8017634:	9a01      	ldr	r2, [sp, #4]
 8017636:	46b4      	mov	ip, r6
 8017638:	461f      	mov	r7, r3
 801763a:	e78c      	b.n	8017556 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x17a>
 801763c:	1b7b      	subs	r3, r7, r5
 801763e:	f8bd 2010 	ldrh.w	r2, [sp, #16]
 8017642:	9201      	str	r2, [sp, #4]
 8017644:	eb0c 0605 	add.w	r6, ip, r5
 8017648:	b29b      	uxth	r3, r3
 801764a:	b2b6      	uxth	r6, r6
 801764c:	2500      	movs	r5, #0
 801764e:	9a0a      	ldr	r2, [sp, #40]	@ 0x28
 8017650:	4282      	cmp	r2, r0
 8017652:	d88b      	bhi.n	801756c <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x190>
 8017654:	9a01      	ldr	r2, [sp, #4]
 8017656:	e74b      	b.n	80174f0 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x114>
 8017658:	4297      	cmp	r7, r2
 801765a:	d332      	bcc.n	80176c2 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x2e6>
 801765c:	1abb      	subs	r3, r7, r2
 801765e:	b29b      	uxth	r3, r3
 8017660:	9208      	str	r2, [sp, #32]
 8017662:	9501      	str	r5, [sp, #4]
 8017664:	9909      	ldr	r1, [sp, #36]	@ 0x24
 8017666:	29ff      	cmp	r1, #255	@ 0xff
 8017668:	9908      	ldr	r1, [sp, #32]
 801766a:	eb0c 0601 	add.w	r6, ip, r1
 801766e:	d135      	bne.n	80176dc <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x300>
 8017670:	f1a0 0e02 	sub.w	lr, r0, #2
 8017674:	b2b6      	uxth	r6, r6
 8017676:	45b4      	cmp	ip, r6
 8017678:	f040 808c 	bne.w	8017794 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x3b8>
 801767c:	9908      	ldr	r1, [sp, #32]
 801767e:	4297      	cmp	r7, r2
 8017680:	eb00 0041 	add.w	r0, r0, r1, lsl #1
 8017684:	d3e2      	bcc.n	801764c <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x270>
 8017686:	9a18      	ldr	r2, [sp, #96]	@ 0x60
 8017688:	9904      	ldr	r1, [sp, #16]
 801768a:	8812      	ldrh	r2, [r2, #0]
 801768c:	1a52      	subs	r2, r2, r1
 801768e:	eb00 0042 	add.w	r0, r0, r2, lsl #1
 8017692:	9a07      	ldr	r2, [sp, #28]
 8017694:	9916      	ldr	r1, [sp, #88]	@ 0x58
 8017696:	3201      	adds	r2, #1
 8017698:	428a      	cmp	r2, r1
 801769a:	9207      	str	r2, [sp, #28]
 801769c:	f040 8087 	bne.w	80177ae <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x3d2>
 80176a0:	f8bd 5070 	ldrh.w	r5, [sp, #112]	@ 0x70
 80176a4:	f8bd 7068 	ldrh.w	r7, [sp, #104]	@ 0x68
 80176a8:	9b04      	ldr	r3, [sp, #16]
 80176aa:	1bed      	subs	r5, r5, r7
 80176ac:	b2ad      	uxth	r5, r5
 80176ae:	2d00      	cmp	r5, #0
 80176b0:	bf08      	it	eq
 80176b2:	461a      	moveq	r2, r3
 80176b4:	9b0d      	ldr	r3, [sp, #52]	@ 0x34
 80176b6:	bf18      	it	ne
 80176b8:	2200      	movne	r2, #0
 80176ba:	3301      	adds	r3, #1
 80176bc:	930d      	str	r3, [sp, #52]	@ 0x34
 80176be:	b292      	uxth	r2, r2
 80176c0:	e70d      	b.n	80174de <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x102>
 80176c2:	1bd1      	subs	r1, r2, r7
 80176c4:	b28b      	uxth	r3, r1
 80176c6:	9301      	str	r3, [sp, #4]
 80176c8:	9708      	str	r7, [sp, #32]
 80176ca:	462b      	mov	r3, r5
 80176cc:	e7ca      	b.n	8017664 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x288>
 80176ce:	bf00      	nop
 80176d0:	20002dbc 	.word	0x20002dbc
 80176d4:	20002db6 	.word	0x20002db6
 80176d8:	fffff7fb 	.word	0xfffff7fb
 80176dc:	b2b6      	uxth	r6, r6
 80176de:	900b      	str	r0, [sp, #44]	@ 0x2c
 80176e0:	45b4      	cmp	ip, r6
 80176e2:	d0cb      	beq.n	801767c <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x2a0>
 80176e4:	f10c 0101 	add.w	r1, ip, #1
 80176e8:	44a4      	add	ip, r4
 80176ea:	9117      	str	r1, [sp, #92]	@ 0x5c
 80176ec:	f89c 5804 	ldrb.w	r5, [ip, #2052]	@ 0x804
 80176f0:	9911      	ldr	r1, [sp, #68]	@ 0x44
 80176f2:	f831 5015 	ldrh.w	r5, [r1, r5, lsl #1]
 80176f6:	990b      	ldr	r1, [sp, #44]	@ 0x2c
 80176f8:	f8b1 c000 	ldrh.w	ip, [r1]
 80176fc:	990e      	ldr	r1, [sp, #56]	@ 0x38
 80176fe:	ea4f 2e2c 	mov.w	lr, ip, asr #8
 8017702:	f00e 0ef8 	and.w	lr, lr, #248	@ 0xf8
 8017706:	fb1e fe01 	smulbb	lr, lr, r1
 801770a:	ea4f 2825 	mov.w	r8, r5, asr #8
 801770e:	990f      	ldr	r1, [sp, #60]	@ 0x3c
 8017710:	f008 08f8 	and.w	r8, r8, #248	@ 0xf8
 8017714:	fb08 e801 	mla	r8, r8, r1, lr
 8017718:	ea4f 09ec 	mov.w	r9, ip, asr #3
 801771c:	990e      	ldr	r1, [sp, #56]	@ 0x38
 801771e:	f009 09fc 	and.w	r9, r9, #252	@ 0xfc
 8017722:	fb19 f901 	smulbb	r9, r9, r1
 8017726:	ea4f 0ee5 	mov.w	lr, r5, asr #3
 801772a:	990f      	ldr	r1, [sp, #60]	@ 0x3c
 801772c:	f00e 0efc 	and.w	lr, lr, #252	@ 0xfc
 8017730:	fb0e 9e01 	mla	lr, lr, r1, r9
 8017734:	ea4f 0ccc 	mov.w	ip, ip, lsl #3
 8017738:	990e      	ldr	r1, [sp, #56]	@ 0x38
 801773a:	fa5f fc8c 	uxtb.w	ip, ip
 801773e:	fb1c fc01 	smulbb	ip, ip, r1
 8017742:	00ed      	lsls	r5, r5, #3
 8017744:	990f      	ldr	r1, [sp, #60]	@ 0x3c
 8017746:	b2ed      	uxtb	r5, r5
 8017748:	fb05 c501 	mla	r5, r5, r1, ip
 801774c:	fa1f f888 	uxth.w	r8, r8
 8017750:	fa1f fe8e 	uxth.w	lr, lr
 8017754:	b2ad      	uxth	r5, r5
 8017756:	f108 0c01 	add.w	ip, r8, #1
 801775a:	eb0c 2818 	add.w	r8, ip, r8, lsr #8
 801775e:	f10e 0901 	add.w	r9, lr, #1
 8017762:	f105 0c01 	add.w	ip, r5, #1
 8017766:	eb0c 2c15 	add.w	ip, ip, r5, lsr #8
 801776a:	eb09 291e 	add.w	r9, r9, lr, lsr #8
 801776e:	f3cc 2cc4 	ubfx	ip, ip, #11, #5
 8017772:	f408 4878 	and.w	r8, r8, #63488	@ 0xf800
 8017776:	ea4f 1959 	mov.w	r9, r9, lsr #5
 801777a:	ea4c 0808 	orr.w	r8, ip, r8
 801777e:	990b      	ldr	r1, [sp, #44]	@ 0x2c
 8017780:	f8bd c05c 	ldrh.w	ip, [sp, #92]	@ 0x5c
 8017784:	f409 69fc 	and.w	r9, r9, #2016	@ 0x7e0
 8017788:	ea48 0809 	orr.w	r8, r8, r9
 801778c:	f821 8b02 	strh.w	r8, [r1], #2
 8017790:	910b      	str	r1, [sp, #44]	@ 0x2c
 8017792:	e7a5      	b.n	80176e0 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x304>
 8017794:	f10c 0801 	add.w	r8, ip, #1
 8017798:	44a4      	add	ip, r4
 801779a:	9911      	ldr	r1, [sp, #68]	@ 0x44
 801779c:	f89c 5804 	ldrb.w	r5, [ip, #2052]	@ 0x804
 80177a0:	f831 5015 	ldrh.w	r5, [r1, r5, lsl #1]
 80177a4:	f82e 5f02 	strh.w	r5, [lr, #2]!
 80177a8:	fa1f fc88 	uxth.w	ip, r8
 80177ac:	e763      	b.n	8017676 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x29a>
 80177ae:	f8bd 2010 	ldrh.w	r2, [sp, #16]
 80177b2:	f8bd 506c 	ldrh.w	r5, [sp, #108]	@ 0x6c
 80177b6:	1aad      	subs	r5, r5, r2
 80177b8:	b2ad      	uxth	r5, r5
 80177ba:	2d00      	cmp	r5, #0
 80177bc:	bf18      	it	ne
 80177be:	2200      	movne	r2, #0
 80177c0:	9201      	str	r2, [sp, #4]
 80177c2:	e744      	b.n	801764e <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x272>
 80177c4:	4b03      	ldr	r3, [pc, #12]	@ (80177d4 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x3f8>)
 80177c6:	6818      	ldr	r0, [r3, #0]
 80177c8:	6803      	ldr	r3, [r0, #0]
 80177ca:	6adb      	ldr	r3, [r3, #44]	@ 0x2c
 80177cc:	4798      	blx	r3
 80177ce:	b01f      	add	sp, #124	@ 0x7c
 80177d0:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 80177d4:	20002dbc 	.word	0x20002dbc

080177d8 <_ZN8touchgfx8LCD16bpp19DecompressorRGB_QOI14blitCopyRGB565EPKhRKNS_4RectES6_h>:
 80177d8:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 80177dc:	b093      	sub	sp, #76	@ 0x4c
 80177de:	4616      	mov	r6, r2
 80177e0:	f89d 2070 	ldrb.w	r2, [sp, #112]	@ 0x70
 80177e4:	9003      	str	r0, [sp, #12]
 80177e6:	460d      	mov	r5, r1
 80177e8:	9201      	str	r2, [sp, #4]
 80177ea:	2a00      	cmp	r2, #0
 80177ec:	f000 8304 	beq.w	8017df8 <_ZN8touchgfx8LCD16bpp19DecompressorRGB_QOI14blitCopyRGB565EPKhRKNS_4RectES6_h+0x620>
 80177f0:	6830      	ldr	r0, [r6, #0]
 80177f2:	6871      	ldr	r1, [r6, #4]
 80177f4:	ac0e      	add	r4, sp, #56	@ 0x38
 80177f6:	c403      	stmia	r4!, {r0, r1}
 80177f8:	6818      	ldr	r0, [r3, #0]
 80177fa:	6859      	ldr	r1, [r3, #4]
 80177fc:	ac10      	add	r4, sp, #64	@ 0x40
 80177fe:	c403      	stmia	r4!, {r0, r1}
 8017800:	a80e      	add	r0, sp, #56	@ 0x38
 8017802:	f7f8 feb1 	bl	8010568 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectE>
 8017806:	4631      	mov	r1, r6
 8017808:	a810      	add	r0, sp, #64	@ 0x40
 801780a:	f7f8 fed5 	bl	80105b8 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectERKS1_>
 801780e:	f9bd 203c 	ldrsh.w	r2, [sp, #60]	@ 0x3c
 8017812:	f5b2 6f80 	cmp.w	r2, #1024	@ 0x400
 8017816:	bfd7      	itett	le
 8017818:	b293      	uxthle	r3, r2
 801781a:	2301      	movgt	r3, #1
 801781c:	f44f 6180 	movle.w	r1, #1024	@ 0x400
 8017820:	fb91 f3f3 	sdivle	r3, r1, r3
 8017824:	9304      	str	r3, [sp, #16]
 8017826:	f105 0308 	add.w	r3, r5, #8
 801782a:	9904      	ldr	r1, [sp, #16]
 801782c:	9308      	str	r3, [sp, #32]
 801782e:	f9bd 303e 	ldrsh.w	r3, [sp, #62]	@ 0x3e
 8017832:	440b      	add	r3, r1
 8017834:	3b01      	subs	r3, #1
 8017836:	fb93 f3f1 	sdiv	r3, r3, r1
 801783a:	9908      	ldr	r1, [sp, #32]
 801783c:	3b01      	subs	r3, #1
 801783e:	b29b      	uxth	r3, r3
 8017840:	eb01 0383 	add.w	r3, r1, r3, lsl #2
 8017844:	9309      	str	r3, [sp, #36]	@ 0x24
 8017846:	9904      	ldr	r1, [sp, #16]
 8017848:	f9bd 3042 	ldrsh.w	r3, [sp, #66]	@ 0x42
 801784c:	fb93 f0f1 	sdiv	r0, r3, r1
 8017850:	b284      	uxth	r4, r0
 8017852:	9405      	str	r4, [sp, #20]
 8017854:	e9dd 4504 	ldrd	r4, r5, [sp, #16]
 8017858:	f8bd 1040 	ldrh.w	r1, [sp, #64]	@ 0x40
 801785c:	fb05 3914 	mls	r9, r5, r4, r3
 8017860:	fb19 f902 	smulbb	r9, r9, r2
 8017864:	4489      	add	r9, r1
 8017866:	fa1f f989 	uxth.w	r9, r9
 801786a:	2d00      	cmp	r5, #0
 801786c:	d05d      	beq.n	801792a <_ZN8touchgfx8LCD16bpp19DecompressorRGB_QOI14blitCopyRGB565EPKhRKNS_4RectES6_h+0x152>
 801786e:	1e6a      	subs	r2, r5, #1
 8017870:	9808      	ldr	r0, [sp, #32]
 8017872:	f850 a022 	ldr.w	sl, [r0, r2, lsl #2]
 8017876:	9a09      	ldr	r2, [sp, #36]	@ 0x24
 8017878:	fa9a fa8a 	rev.w	sl, sl
 801787c:	4492      	add	sl, r2
 801787e:	f8bd 2038 	ldrh.w	r2, [sp, #56]	@ 0x38
 8017882:	f9bd 5046 	ldrsh.w	r5, [sp, #70]	@ 0x46
 8017886:	4411      	add	r1, r2
 8017888:	f8bd 203a 	ldrh.w	r2, [sp, #58]	@ 0x3a
 801788c:	f8ad 1040 	strh.w	r1, [sp, #64]	@ 0x40
 8017890:	4413      	add	r3, r2
 8017892:	f8ad 3042 	strh.w	r3, [sp, #66]	@ 0x42
 8017896:	f9bd 3044 	ldrsh.w	r3, [sp, #68]	@ 0x44
 801789a:	9302      	str	r3, [sp, #8]
 801789c:	4bcb      	ldr	r3, [pc, #812]	@ (8017bcc <_ZN8touchgfx8LCD16bpp19DecompressorRGB_QOI14blitCopyRGB565EPKhRKNS_4RectES6_h+0x3f4>)
 801789e:	6818      	ldr	r0, [r3, #0]
 80178a0:	6803      	ldr	r3, [r0, #0]
 80178a2:	6a9b      	ldr	r3, [r3, #40]	@ 0x28
 80178a4:	4798      	blx	r3
 80178a6:	4bca      	ldr	r3, [pc, #808]	@ (8017bd0 <_ZN8touchgfx8LCD16bpp19DecompressorRGB_QOI14blitCopyRGB565EPKhRKNS_4RectES6_h+0x3f8>)
 80178a8:	f9bd 2040 	ldrsh.w	r2, [sp, #64]	@ 0x40
 80178ac:	881b      	ldrh	r3, [r3, #0]
 80178ae:	f9bd 4042 	ldrsh.w	r4, [sp, #66]	@ 0x42
 80178b2:	fb03 2404 	mla	r4, r3, r4, r2
 80178b6:	eb00 0444 	add.w	r4, r0, r4, lsl #1
 80178ba:	436b      	muls	r3, r5
 80178bc:	eb04 0343 	add.w	r3, r4, r3, lsl #1
 80178c0:	930d      	str	r3, [sp, #52]	@ 0x34
 80178c2:	f9bd 303c 	ldrsh.w	r3, [sp, #60]	@ 0x3c
 80178c6:	fb99 f3f3 	sdiv	r3, r9, r3
 80178ca:	9306      	str	r3, [sp, #24]
 80178cc:	9b01      	ldr	r3, [sp, #4]
 80178ce:	43db      	mvns	r3, r3
 80178d0:	b2db      	uxtb	r3, r3
 80178d2:	930a      	str	r3, [sp, #40]	@ 0x28
 80178d4:	9b03      	ldr	r3, [sp, #12]
 80178d6:	3304      	adds	r3, #4
 80178d8:	4618      	mov	r0, r3
 80178da:	2280      	movs	r2, #128	@ 0x80
 80178dc:	2100      	movs	r1, #0
 80178de:	930b      	str	r3, [sp, #44]	@ 0x2c
 80178e0:	f00a ffdd 	bl	802289e <memset>
 80178e4:	4bbb      	ldr	r3, [pc, #748]	@ (8017bd4 <_ZN8touchgfx8LCD16bpp19DecompressorRGB_QOI14blitCopyRGB565EPKhRKNS_4RectES6_h+0x3fc>)
 80178e6:	9300      	str	r3, [sp, #0]
 80178e8:	2300      	movs	r3, #0
 80178ea:	f04f 0600 	mov.w	r6, #0
 80178ee:	9307      	str	r3, [sp, #28]
 80178f0:	9b0d      	ldr	r3, [sp, #52]	@ 0x34
 80178f2:	42a3      	cmp	r3, r4
 80178f4:	f240 827b 	bls.w	8017dee <_ZN8touchgfx8LCD16bpp19DecompressorRGB_QOI14blitCopyRGB565EPKhRKNS_4RectES6_h+0x616>
 80178f8:	f04f 0e07 	mov.w	lr, #7
 80178fc:	f1b9 0f00 	cmp.w	r9, #0
 8017900:	f000 8159 	beq.w	8017bb6 <_ZN8touchgfx8LCD16bpp19DecompressorRGB_QOI14blitCopyRGB565EPKhRKNS_4RectES6_h+0x3de>
 8017904:	f89a 5000 	ldrb.w	r5, [sl]
 8017908:	b2ed      	uxtb	r5, r5
 801790a:	11aa      	asrs	r2, r5, #6
 801790c:	f10a 0701 	add.w	r7, sl, #1
 8017910:	d10e      	bne.n	8017930 <_ZN8touchgfx8LCD16bpp19DecompressorRGB_QOI14blitCopyRGB565EPKhRKNS_4RectES6_h+0x158>
 8017912:	9b03      	ldr	r3, [sp, #12]
 8017914:	f005 053f 	and.w	r5, r5, #63	@ 0x3f
 8017918:	eb03 0545 	add.w	r5, r3, r5, lsl #1
 801791c:	88ae      	ldrh	r6, [r5, #4]
 801791e:	f109 39ff 	add.w	r9, r9, #4294967295
 8017922:	fa1f f989 	uxth.w	r9, r9
 8017926:	46ba      	mov	sl, r7
 8017928:	e7e8      	b.n	80178fc <_ZN8touchgfx8LCD16bpp19DecompressorRGB_QOI14blitCopyRGB565EPKhRKNS_4RectES6_h+0x124>
 801792a:	f8dd a024 	ldr.w	sl, [sp, #36]	@ 0x24
 801792e:	e7a6      	b.n	801787e <_ZN8touchgfx8LCD16bpp19DecompressorRGB_QOI14blitCopyRGB565EPKhRKNS_4RectES6_h+0xa6>
 8017930:	2a01      	cmp	r2, #1
 8017932:	d129      	bne.n	8017988 <_ZN8touchgfx8LCD16bpp19DecompressorRGB_QOI14blitCopyRGB565EPKhRKNS_4RectES6_h+0x1b0>
 8017934:	f3c6 0304 	ubfx	r3, r6, #0, #5
 8017938:	f005 0203 	and.w	r2, r5, #3
 801793c:	3b02      	subs	r3, #2
 801793e:	4413      	add	r3, r2
 8017940:	f003 031f 	and.w	r3, r3, #31
 8017944:	f3c5 0281 	ubfx	r2, r5, #2, #2
 8017948:	f363 0604 	bfi	r6, r3, #0, #5
 801794c:	3a02      	subs	r2, #2
 801794e:	eb02 1256 	add.w	r2, r2, r6, lsr #5
 8017952:	f002 023f 	and.w	r2, r2, #63	@ 0x3f
 8017956:	f3c5 1501 	ubfx	r5, r5, #4, #2
 801795a:	f362 164a 	bfi	r6, r2, #5, #6
 801795e:	3d02      	subs	r5, #2
 8017960:	eb05 25d6 	add.w	r5, r5, r6, lsr #11
 8017964:	f005 051f 	and.w	r5, r5, #31
 8017968:	eb02 0282 	add.w	r2, r2, r2, lsl #2
 801796c:	2103      	movs	r1, #3
 801796e:	fb11 2205 	smlabb	r2, r1, r5, r2
 8017972:	fb1e 2303 	smlabb	r3, lr, r3, r2
 8017976:	9a03      	ldr	r2, [sp, #12]
 8017978:	f003 033f 	and.w	r3, r3, #63	@ 0x3f
 801797c:	eb02 0343 	add.w	r3, r2, r3, lsl #1
 8017980:	f365 26cf 	bfi	r6, r5, #11, #5
 8017984:	809e      	strh	r6, [r3, #4]
 8017986:	e7ca      	b.n	801791e <_ZN8touchgfx8LCD16bpp19DecompressorRGB_QOI14blitCopyRGB565EPKhRKNS_4RectES6_h+0x146>
 8017988:	f005 053f 	and.w	r5, r5, #63	@ 0x3f
 801798c:	2a02      	cmp	r2, #2
 801798e:	b2ab      	uxth	r3, r5
 8017990:	d136      	bne.n	8017a00 <_ZN8touchgfx8LCD16bpp19DecompressorRGB_QOI14blitCopyRGB565EPKhRKNS_4RectES6_h+0x228>
 8017992:	2101      	movs	r1, #1
 8017994:	fb12 1205 	smlabb	r2, r2, r5, r1
 8017998:	4492      	add	sl, r2
 801799a:	463a      	mov	r2, r7
 801799c:	4552      	cmp	r2, sl
 801799e:	d01c      	beq.n	80179da <_ZN8touchgfx8LCD16bpp19DecompressorRGB_QOI14blitCopyRGB565EPKhRKNS_4RectES6_h+0x202>
 80179a0:	4694      	mov	ip, r2
 80179a2:	f04f 0b03 	mov.w	fp, #3
 80179a6:	f81c 1b02 	ldrb.w	r1, [ip], #2
 80179aa:	7852      	ldrb	r2, [r2, #1]
 80179ac:	ea41 2102 	orr.w	r1, r1, r2, lsl #8
 80179b0:	f3c1 1045 	ubfx	r0, r1, #5, #6
 80179b4:	ea4f 28d1 	mov.w	r8, r1, lsr #11
 80179b8:	eb00 0080 	add.w	r0, r0, r0, lsl #2
 80179bc:	f001 021f 	and.w	r2, r1, #31
 80179c0:	fb1b 0008 	smlabb	r0, fp, r8, r0
 80179c4:	fb1e 0002 	smlabb	r0, lr, r2, r0
 80179c8:	9a03      	ldr	r2, [sp, #12]
 80179ca:	f000 003f 	and.w	r0, r0, #63	@ 0x3f
 80179ce:	eb02 0040 	add.w	r0, r2, r0, lsl #1
 80179d2:	460e      	mov	r6, r1
 80179d4:	8081      	strh	r1, [r0, #4]
 80179d6:	4662      	mov	r2, ip
 80179d8:	e7e0      	b.n	801799c <_ZN8touchgfx8LCD16bpp19DecompressorRGB_QOI14blitCopyRGB565EPKhRKNS_4RectES6_h+0x1c4>
 80179da:	4599      	cmp	r9, r3
 80179dc:	d20b      	bcs.n	80179f6 <_ZN8touchgfx8LCD16bpp19DecompressorRGB_QOI14blitCopyRGB565EPKhRKNS_4RectES6_h+0x21e>
 80179de:	eba5 0509 	sub.w	r5, r5, r9
 80179e2:	2d00      	cmp	r5, #0
 80179e4:	eb07 0749 	add.w	r7, r7, r9, lsl #1
 80179e8:	f300 8209 	bgt.w	8017dfe <_ZN8touchgfx8LCD16bpp19DecompressorRGB_QOI14blitCopyRGB565EPKhRKNS_4RectES6_h+0x626>
 80179ec:	f8dd 8008 	ldr.w	r8, [sp, #8]
 80179f0:	2301      	movs	r3, #1
 80179f2:	9307      	str	r3, [sp, #28]
 80179f4:	e00c      	b.n	8017a10 <_ZN8touchgfx8LCD16bpp19DecompressorRGB_QOI14blitCopyRGB565EPKhRKNS_4RectES6_h+0x238>
 80179f6:	eb07 0745 	add.w	r7, r7, r5, lsl #1
 80179fa:	eba9 0903 	sub.w	r9, r9, r3
 80179fe:	e790      	b.n	8017922 <_ZN8touchgfx8LCD16bpp19DecompressorRGB_QOI14blitCopyRGB565EPKhRKNS_4RectES6_h+0x14a>
 8017a00:	4599      	cmp	r9, r3
 8017a02:	d2fa      	bcs.n	80179fa <_ZN8touchgfx8LCD16bpp19DecompressorRGB_QOI14blitCopyRGB565EPKhRKNS_4RectES6_h+0x222>
 8017a04:	eba5 0509 	sub.w	r5, r5, r9
 8017a08:	2d00      	cmp	r5, #0
 8017a0a:	dc1d      	bgt.n	8017a48 <_ZN8touchgfx8LCD16bpp19DecompressorRGB_QOI14blitCopyRGB565EPKhRKNS_4RectES6_h+0x270>
 8017a0c:	f8dd 8008 	ldr.w	r8, [sp, #8]
 8017a10:	f04f 0b00 	mov.w	fp, #0
 8017a14:	f1b8 0f00 	cmp.w	r8, #0
 8017a18:	f340 81a1 	ble.w	8017d5e <_ZN8touchgfx8LCD16bpp19DecompressorRGB_QOI14blitCopyRGB565EPKhRKNS_4RectES6_h+0x586>
 8017a1c:	783b      	ldrb	r3, [r7, #0]
 8017a1e:	b2db      	uxtb	r3, r3
 8017a20:	119a      	asrs	r2, r3, #6
 8017a22:	f107 0a01 	add.w	sl, r7, #1
 8017a26:	f040 80d7 	bne.w	8017bd8 <_ZN8touchgfx8LCD16bpp19DecompressorRGB_QOI14blitCopyRGB565EPKhRKNS_4RectES6_h+0x400>
 8017a2a:	9a03      	ldr	r2, [sp, #12]
 8017a2c:	f003 033f 	and.w	r3, r3, #63	@ 0x3f
 8017a30:	eb02 0343 	add.w	r3, r2, r3, lsl #1
 8017a34:	889e      	ldrh	r6, [r3, #4]
 8017a36:	9b01      	ldr	r3, [sp, #4]
 8017a38:	2bff      	cmp	r3, #255	@ 0xff
 8017a3a:	f040 81e9 	bne.w	8017e10 <_ZN8touchgfx8LCD16bpp19DecompressorRGB_QOI14blitCopyRGB565EPKhRKNS_4RectES6_h+0x638>
 8017a3e:	8026      	strh	r6, [r4, #0]
 8017a40:	f108 38ff 	add.w	r8, r8, #4294967295
 8017a44:	3402      	adds	r4, #2
 8017a46:	e0be      	b.n	8017bc6 <_ZN8touchgfx8LCD16bpp19DecompressorRGB_QOI14blitCopyRGB565EPKhRKNS_4RectES6_h+0x3ee>
 8017a48:	9b02      	ldr	r3, [sp, #8]
 8017a4a:	9a02      	ldr	r2, [sp, #8]
 8017a4c:	42ab      	cmp	r3, r5
 8017a4e:	bfa8      	it	ge
 8017a50:	462b      	movge	r3, r5
 8017a52:	eba2 0803 	sub.w	r8, r2, r3
 8017a56:	9a07      	ldr	r2, [sp, #28]
 8017a58:	1aed      	subs	r5, r5, r3
 8017a5a:	2a00      	cmp	r2, #0
 8017a5c:	d05a      	beq.n	8017b14 <_ZN8touchgfx8LCD16bpp19DecompressorRGB_QOI14blitCopyRGB565EPKhRKNS_4RectES6_h+0x33c>
 8017a5e:	9a01      	ldr	r2, [sp, #4]
 8017a60:	2aff      	cmp	r2, #255	@ 0xff
 8017a62:	eb04 0343 	add.w	r3, r4, r3, lsl #1
 8017a66:	d049      	beq.n	8017afc <_ZN8touchgfx8LCD16bpp19DecompressorRGB_QOI14blitCopyRGB565EPKhRKNS_4RectES6_h+0x324>
 8017a68:	f8bd e004 	ldrh.w	lr, [sp, #4]
 8017a6c:	f8bd 9028 	ldrh.w	r9, [sp, #40]	@ 0x28
 8017a70:	42a3      	cmp	r3, r4
 8017a72:	f240 80a5 	bls.w	8017bc0 <_ZN8touchgfx8LCD16bpp19DecompressorRGB_QOI14blitCopyRGB565EPKhRKNS_4RectES6_h+0x3e8>
 8017a76:	46bc      	mov	ip, r7
 8017a78:	8820      	ldrh	r0, [r4, #0]
 8017a7a:	f81c 2b02 	ldrb.w	r2, [ip], #2
 8017a7e:	7879      	ldrb	r1, [r7, #1]
 8017a80:	ea42 2201 	orr.w	r2, r2, r1, lsl #8
 8017a84:	b212      	sxth	r2, r2
 8017a86:	b291      	uxth	r1, r2
 8017a88:	ea4f 2a20 	mov.w	sl, r0, asr #8
 8017a8c:	120f      	asrs	r7, r1, #8
 8017a8e:	f00a 0af8 	and.w	sl, sl, #248	@ 0xf8
 8017a92:	fb1a fa09 	smulbb	sl, sl, r9
 8017a96:	f007 07f8 	and.w	r7, r7, #248	@ 0xf8
 8017a9a:	fb07 a70e 	mla	r7, r7, lr, sl
 8017a9e:	ea4f 0ae0 	mov.w	sl, r0, asr #3
 8017aa2:	00c0      	lsls	r0, r0, #3
 8017aa4:	10c9      	asrs	r1, r1, #3
 8017aa6:	f00a 0afc 	and.w	sl, sl, #252	@ 0xfc
 8017aaa:	00d2      	lsls	r2, r2, #3
 8017aac:	b2c0      	uxtb	r0, r0
 8017aae:	fb1a fa09 	smulbb	sl, sl, r9
 8017ab2:	fb10 f009 	smulbb	r0, r0, r9
 8017ab6:	f001 01fc 	and.w	r1, r1, #252	@ 0xfc
 8017aba:	b2d2      	uxtb	r2, r2
 8017abc:	b2bf      	uxth	r7, r7
 8017abe:	fb01 a10e 	mla	r1, r1, lr, sl
 8017ac2:	fb02 020e 	mla	r2, r2, lr, r0
 8017ac6:	b289      	uxth	r1, r1
 8017ac8:	b292      	uxth	r2, r2
 8017aca:	1c78      	adds	r0, r7, #1
 8017acc:	eb00 2717 	add.w	r7, r0, r7, lsr #8
 8017ad0:	f101 0a01 	add.w	sl, r1, #1
 8017ad4:	1c50      	adds	r0, r2, #1
 8017ad6:	eb00 2012 	add.w	r0, r0, r2, lsr #8
 8017ada:	eb0a 2a11 	add.w	sl, sl, r1, lsr #8
 8017ade:	f407 4778 	and.w	r7, r7, #63488	@ 0xf800
 8017ae2:	f3c0 20c4 	ubfx	r0, r0, #11, #5
 8017ae6:	ea4f 1a5a 	mov.w	sl, sl, lsr #5
 8017aea:	4307      	orrs	r7, r0
 8017aec:	f40a 6afc 	and.w	sl, sl, #2016	@ 0x7e0
 8017af0:	ea47 070a 	orr.w	r7, r7, sl
 8017af4:	f824 7b02 	strh.w	r7, [r4], #2
 8017af8:	4667      	mov	r7, ip
 8017afa:	e7b9      	b.n	8017a70 <_ZN8touchgfx8LCD16bpp19DecompressorRGB_QOI14blitCopyRGB565EPKhRKNS_4RectES6_h+0x298>
 8017afc:	42a3      	cmp	r3, r4
 8017afe:	d95f      	bls.n	8017bc0 <_ZN8touchgfx8LCD16bpp19DecompressorRGB_QOI14blitCopyRGB565EPKhRKNS_4RectES6_h+0x3e8>
 8017b00:	463a      	mov	r2, r7
 8017b02:	f812 1b02 	ldrb.w	r1, [r2], #2
 8017b06:	7878      	ldrb	r0, [r7, #1]
 8017b08:	ea41 2100 	orr.w	r1, r1, r0, lsl #8
 8017b0c:	f824 1b02 	strh.w	r1, [r4], #2
 8017b10:	4617      	mov	r7, r2
 8017b12:	e7f3      	b.n	8017afc <_ZN8touchgfx8LCD16bpp19DecompressorRGB_QOI14blitCopyRGB565EPKhRKNS_4RectES6_h+0x324>
 8017b14:	9901      	ldr	r1, [sp, #4]
 8017b16:	29ff      	cmp	r1, #255	@ 0xff
 8017b18:	eb04 0343 	add.w	r3, r4, r3, lsl #1
 8017b1c:	b2b2      	uxth	r2, r6
 8017b1e:	d044      	beq.n	8017baa <_ZN8touchgfx8LCD16bpp19DecompressorRGB_QOI14blitCopyRGB565EPKhRKNS_4RectES6_h+0x3d2>
 8017b20:	f8bd 1004 	ldrh.w	r1, [sp, #4]
 8017b24:	f8bd a028 	ldrh.w	sl, [sp, #40]	@ 0x28
 8017b28:	ea4f 2922 	mov.w	r9, r2, asr #8
 8017b2c:	ea4f 0ee2 	mov.w	lr, r2, asr #3
 8017b30:	f009 09f8 	and.w	r9, r9, #248	@ 0xf8
 8017b34:	f00e 0efc 	and.w	lr, lr, #252	@ 0xfc
 8017b38:	4608      	mov	r0, r1
 8017b3a:	fb09 f901 	mul.w	r9, r9, r1
 8017b3e:	fb0e fe01 	mul.w	lr, lr, r1
 8017b42:	00d1      	lsls	r1, r2, #3
 8017b44:	b2c9      	uxtb	r1, r1
 8017b46:	4341      	muls	r1, r0
 8017b48:	429c      	cmp	r4, r3
 8017b4a:	f4bf af61 	bcs.w	8017a10 <_ZN8touchgfx8LCD16bpp19DecompressorRGB_QOI14blitCopyRGB565EPKhRKNS_4RectES6_h+0x238>
 8017b4e:	8822      	ldrh	r2, [r4, #0]
 8017b50:	1210      	asrs	r0, r2, #8
 8017b52:	ea4f 0ce2 	mov.w	ip, r2, asr #3
 8017b56:	f000 00f8 	and.w	r0, r0, #248	@ 0xf8
 8017b5a:	00d2      	lsls	r2, r2, #3
 8017b5c:	fb00 900a 	mla	r0, r0, sl, r9
 8017b60:	b2d2      	uxtb	r2, r2
 8017b62:	b280      	uxth	r0, r0
 8017b64:	f00c 0cfc 	and.w	ip, ip, #252	@ 0xfc
 8017b68:	fb02 120a 	mla	r2, r2, sl, r1
 8017b6c:	b292      	uxth	r2, r2
 8017b6e:	f100 0b01 	add.w	fp, r0, #1
 8017b72:	fb0c ec0a 	mla	ip, ip, sl, lr
 8017b76:	fa1f fc8c 	uxth.w	ip, ip
 8017b7a:	eb0b 2b10 	add.w	fp, fp, r0, lsr #8
 8017b7e:	1c50      	adds	r0, r2, #1
 8017b80:	eb00 2012 	add.w	r0, r0, r2, lsr #8
 8017b84:	f10c 0201 	add.w	r2, ip, #1
 8017b88:	eb02 2c1c 	add.w	ip, r2, ip, lsr #8
 8017b8c:	f40b 4b78 	and.w	fp, fp, #63488	@ 0xf800
 8017b90:	f3c0 20c4 	ubfx	r0, r0, #11, #5
 8017b94:	ea4f 1c5c 	mov.w	ip, ip, lsr #5
 8017b98:	ea40 0b0b 	orr.w	fp, r0, fp
 8017b9c:	f40c 6cfc 	and.w	ip, ip, #2016	@ 0x7e0
 8017ba0:	ea4b 0b0c 	orr.w	fp, fp, ip
 8017ba4:	f824 bb02 	strh.w	fp, [r4], #2
 8017ba8:	e7ce      	b.n	8017b48 <_ZN8touchgfx8LCD16bpp19DecompressorRGB_QOI14blitCopyRGB565EPKhRKNS_4RectES6_h+0x370>
 8017baa:	429c      	cmp	r4, r3
 8017bac:	f4bf af30 	bcs.w	8017a10 <_ZN8touchgfx8LCD16bpp19DecompressorRGB_QOI14blitCopyRGB565EPKhRKNS_4RectES6_h+0x238>
 8017bb0:	f824 2b02 	strh.w	r2, [r4], #2
 8017bb4:	e7f9      	b.n	8017baa <_ZN8touchgfx8LCD16bpp19DecompressorRGB_QOI14blitCopyRGB565EPKhRKNS_4RectES6_h+0x3d2>
 8017bb6:	f8dd 8008 	ldr.w	r8, [sp, #8]
 8017bba:	4657      	mov	r7, sl
 8017bbc:	464d      	mov	r5, r9
 8017bbe:	e727      	b.n	8017a10 <_ZN8touchgfx8LCD16bpp19DecompressorRGB_QOI14blitCopyRGB565EPKhRKNS_4RectES6_h+0x238>
 8017bc0:	2300      	movs	r3, #0
 8017bc2:	e716      	b.n	80179f2 <_ZN8touchgfx8LCD16bpp19DecompressorRGB_QOI14blitCopyRGB565EPKhRKNS_4RectES6_h+0x21a>
 8017bc4:	44bb      	add	fp, r7
 8017bc6:	4657      	mov	r7, sl
 8017bc8:	e724      	b.n	8017a14 <_ZN8touchgfx8LCD16bpp19DecompressorRGB_QOI14blitCopyRGB565EPKhRKNS_4RectES6_h+0x23c>
 8017bca:	bf00      	nop
 8017bcc:	20002dbc 	.word	0x20002dbc
 8017bd0:	20002db6 	.word	0x20002db6
 8017bd4:	20000120 	.word	0x20000120
 8017bd8:	2a01      	cmp	r2, #1
 8017bda:	d12a      	bne.n	8017c32 <_ZN8touchgfx8LCD16bpp19DecompressorRGB_QOI14blitCopyRGB565EPKhRKNS_4RectES6_h+0x45a>
 8017bdc:	f3c6 0104 	ubfx	r1, r6, #0, #5
 8017be0:	f003 0203 	and.w	r2, r3, #3
 8017be4:	3902      	subs	r1, #2
 8017be6:	4411      	add	r1, r2
 8017be8:	f001 011f 	and.w	r1, r1, #31
 8017bec:	f3c3 0081 	ubfx	r0, r3, #2, #2
 8017bf0:	f361 0604 	bfi	r6, r1, #0, #5
 8017bf4:	3802      	subs	r0, #2
 8017bf6:	eb00 1056 	add.w	r0, r0, r6, lsr #5
 8017bfa:	f000 003f 	and.w	r0, r0, #63	@ 0x3f
 8017bfe:	f3c3 1301 	ubfx	r3, r3, #4, #2
 8017c02:	f360 164a 	bfi	r6, r0, #5, #6
 8017c06:	3b02      	subs	r3, #2
 8017c08:	eb03 22d6 	add.w	r2, r3, r6, lsr #11
 8017c0c:	f002 031f 	and.w	r3, r2, #31
 8017c10:	eb00 0080 	add.w	r0, r0, r0, lsl #2
 8017c14:	2203      	movs	r2, #3
 8017c16:	f363 26cf 	bfi	r6, r3, #11, #5
 8017c1a:	fb12 0303 	smlabb	r3, r2, r3, r0
 8017c1e:	2207      	movs	r2, #7
 8017c20:	fb12 3301 	smlabb	r3, r2, r1, r3
 8017c24:	9a03      	ldr	r2, [sp, #12]
 8017c26:	f003 033f 	and.w	r3, r3, #63	@ 0x3f
 8017c2a:	eb02 0343 	add.w	r3, r2, r3, lsl #1
 8017c2e:	809e      	strh	r6, [r3, #4]
 8017c30:	e701      	b.n	8017a36 <_ZN8touchgfx8LCD16bpp19DecompressorRGB_QOI14blitCopyRGB565EPKhRKNS_4RectES6_h+0x25e>
 8017c32:	f003 053f 	and.w	r5, r3, #63	@ 0x3f
 8017c36:	45a8      	cmp	r8, r5
 8017c38:	4647      	mov	r7, r8
 8017c3a:	bfa8      	it	ge
 8017c3c:	462f      	movge	r7, r5
 8017c3e:	2a02      	cmp	r2, #2
 8017c40:	d154      	bne.n	8017cec <_ZN8touchgfx8LCD16bpp19DecompressorRGB_QOI14blitCopyRGB565EPKhRKNS_4RectES6_h+0x514>
 8017c42:	9b01      	ldr	r3, [sp, #4]
 8017c44:	2bff      	cmp	r3, #255	@ 0xff
 8017c46:	d01a      	beq.n	8017c7e <_ZN8touchgfx8LCD16bpp19DecompressorRGB_QOI14blitCopyRGB565EPKhRKNS_4RectES6_h+0x4a6>
 8017c48:	eb0b 0307 	add.w	r3, fp, r7
 8017c4c:	2b40      	cmp	r3, #64	@ 0x40
 8017c4e:	dd16      	ble.n	8017c7e <_ZN8touchgfx8LCD16bpp19DecompressorRGB_QOI14blitCopyRGB565EPKhRKNS_4RectES6_h+0x4a6>
 8017c50:	ea4f 094b 	mov.w	r9, fp, lsl #1
 8017c54:	4649      	mov	r1, r9
 8017c56:	9800      	ldr	r0, [sp, #0]
 8017c58:	f7f4 fc43 	bl	800c4e2 <_ZN8touchgfx5paint9flushLineEPmi>
 8017c5c:	465a      	mov	r2, fp
 8017c5e:	9b01      	ldr	r3, [sp, #4]
 8017c60:	9900      	ldr	r1, [sp, #0]
 8017c62:	4620      	mov	r0, r4
 8017c64:	f7f4 fc48 	bl	800c4f8 <_ZN8touchgfx5paint6rgb56514lineFromRGB565EPtPKtjh>
 8017c68:	9b00      	ldr	r3, [sp, #0]
 8017c6a:	461a      	mov	r2, r3
 8017c6c:	4b6c      	ldr	r3, [pc, #432]	@ (8017e20 <_ZN8touchgfx8LCD16bpp19DecompressorRGB_QOI14blitCopyRGB565EPKhRKNS_4RectES6_h+0x648>)
 8017c6e:	429a      	cmp	r2, r3
 8017c70:	bf0c      	ite	eq
 8017c72:	4b6c      	ldreq	r3, [pc, #432]	@ (8017e24 <_ZN8touchgfx8LCD16bpp19DecompressorRGB_QOI14blitCopyRGB565EPKhRKNS_4RectES6_h+0x64c>)
 8017c74:	4b6a      	ldrne	r3, [pc, #424]	@ (8017e20 <_ZN8touchgfx8LCD16bpp19DecompressorRGB_QOI14blitCopyRGB565EPKhRKNS_4RectES6_h+0x648>)
 8017c76:	9300      	str	r3, [sp, #0]
 8017c78:	444c      	add	r4, r9
 8017c7a:	f04f 0b00 	mov.w	fp, #0
 8017c7e:	4652      	mov	r2, sl
 8017c80:	2100      	movs	r1, #0
 8017c82:	42a9      	cmp	r1, r5
 8017c84:	da2c      	bge.n	8017ce0 <_ZN8touchgfx8LCD16bpp19DecompressorRGB_QOI14blitCopyRGB565EPKhRKNS_4RectES6_h+0x508>
 8017c86:	4694      	mov	ip, r2
 8017c88:	f04f 0903 	mov.w	r9, #3
 8017c8c:	f81c 3b02 	ldrb.w	r3, [ip], #2
 8017c90:	7852      	ldrb	r2, [r2, #1]
 8017c92:	ea43 2302 	orr.w	r3, r3, r2, lsl #8
 8017c96:	f3c3 1045 	ubfx	r0, r3, #5, #6
 8017c9a:	ea4f 2ed3 	mov.w	lr, r3, lsr #11
 8017c9e:	eb00 0080 	add.w	r0, r0, r0, lsl #2
 8017ca2:	f003 021f 	and.w	r2, r3, #31
 8017ca6:	fb19 000e 	smlabb	r0, r9, lr, r0
 8017caa:	f04f 0e07 	mov.w	lr, #7
 8017cae:	fb1e 0002 	smlabb	r0, lr, r2, r0
 8017cb2:	9a03      	ldr	r2, [sp, #12]
 8017cb4:	f000 003f 	and.w	r0, r0, #63	@ 0x3f
 8017cb8:	eb02 0040 	add.w	r0, r2, r0, lsl #1
 8017cbc:	42b9      	cmp	r1, r7
 8017cbe:	461e      	mov	r6, r3
 8017cc0:	8083      	strh	r3, [r0, #4]
 8017cc2:	da0a      	bge.n	8017cda <_ZN8touchgfx8LCD16bpp19DecompressorRGB_QOI14blitCopyRGB565EPKhRKNS_4RectES6_h+0x502>
 8017cc4:	9a01      	ldr	r2, [sp, #4]
 8017cc6:	2aff      	cmp	r2, #255	@ 0xff
 8017cc8:	bf15      	itete	ne
 8017cca:	9a00      	ldrne	r2, [sp, #0]
 8017ccc:	8023      	strheq	r3, [r4, #0]
 8017cce:	f822 301b 	strhne.w	r3, [r2, fp, lsl #1]
 8017cd2:	3402      	addeq	r4, #2
 8017cd4:	bf18      	it	ne
 8017cd6:	f10b 0b01 	addne.w	fp, fp, #1
 8017cda:	3101      	adds	r1, #1
 8017cdc:	4662      	mov	r2, ip
 8017cde:	e7d0      	b.n	8017c82 <_ZN8touchgfx8LCD16bpp19DecompressorRGB_QOI14blitCopyRGB565EPKhRKNS_4RectES6_h+0x4aa>
 8017ce0:	eb0a 0a45 	add.w	sl, sl, r5, lsl #1
 8017ce4:	eba8 0807 	sub.w	r8, r8, r7
 8017ce8:	1bed      	subs	r5, r5, r7
 8017cea:	e76c      	b.n	8017bc6 <_ZN8touchgfx8LCD16bpp19DecompressorRGB_QOI14blitCopyRGB565EPKhRKNS_4RectES6_h+0x3ee>
 8017cec:	9b01      	ldr	r3, [sp, #4]
 8017cee:	2bff      	cmp	r3, #255	@ 0xff
 8017cf0:	eba8 0807 	sub.w	r8, r8, r7
 8017cf4:	eba5 0507 	sub.w	r5, r5, r7
 8017cf8:	fa1f f986 	uxth.w	r9, r6
 8017cfc:	d027      	beq.n	8017d4e <_ZN8touchgfx8LCD16bpp19DecompressorRGB_QOI14blitCopyRGB565EPKhRKNS_4RectES6_h+0x576>
 8017cfe:	eb0b 0307 	add.w	r3, fp, r7
 8017d02:	2b40      	cmp	r3, #64	@ 0x40
 8017d04:	dd18      	ble.n	8017d38 <_ZN8touchgfx8LCD16bpp19DecompressorRGB_QOI14blitCopyRGB565EPKhRKNS_4RectES6_h+0x560>
 8017d06:	ea4f 034b 	mov.w	r3, fp, lsl #1
 8017d0a:	4619      	mov	r1, r3
 8017d0c:	9800      	ldr	r0, [sp, #0]
 8017d0e:	930c      	str	r3, [sp, #48]	@ 0x30
 8017d10:	f7f4 fbe7 	bl	800c4e2 <_ZN8touchgfx5paint9flushLineEPmi>
 8017d14:	465a      	mov	r2, fp
 8017d16:	9b01      	ldr	r3, [sp, #4]
 8017d18:	9900      	ldr	r1, [sp, #0]
 8017d1a:	4620      	mov	r0, r4
 8017d1c:	f7f4 fbec 	bl	800c4f8 <_ZN8touchgfx5paint6rgb56514lineFromRGB565EPtPKtjh>
 8017d20:	9b0c      	ldr	r3, [sp, #48]	@ 0x30
 8017d22:	441c      	add	r4, r3
 8017d24:	9b00      	ldr	r3, [sp, #0]
 8017d26:	461a      	mov	r2, r3
 8017d28:	4b3d      	ldr	r3, [pc, #244]	@ (8017e20 <_ZN8touchgfx8LCD16bpp19DecompressorRGB_QOI14blitCopyRGB565EPKhRKNS_4RectES6_h+0x648>)
 8017d2a:	429a      	cmp	r2, r3
 8017d2c:	bf0c      	ite	eq
 8017d2e:	4b3d      	ldreq	r3, [pc, #244]	@ (8017e24 <_ZN8touchgfx8LCD16bpp19DecompressorRGB_QOI14blitCopyRGB565EPKhRKNS_4RectES6_h+0x64c>)
 8017d30:	4b3b      	ldrne	r3, [pc, #236]	@ (8017e20 <_ZN8touchgfx8LCD16bpp19DecompressorRGB_QOI14blitCopyRGB565EPKhRKNS_4RectES6_h+0x648>)
 8017d32:	9300      	str	r3, [sp, #0]
 8017d34:	f04f 0b00 	mov.w	fp, #0
 8017d38:	9b00      	ldr	r3, [sp, #0]
 8017d3a:	eb03 024b 	add.w	r2, r3, fp, lsl #1
 8017d3e:	463b      	mov	r3, r7
 8017d40:	2b00      	cmp	r3, #0
 8017d42:	f43f af3f 	beq.w	8017bc4 <_ZN8touchgfx8LCD16bpp19DecompressorRGB_QOI14blitCopyRGB565EPKhRKNS_4RectES6_h+0x3ec>
 8017d46:	f822 9b02 	strh.w	r9, [r2], #2
 8017d4a:	3b01      	subs	r3, #1
 8017d4c:	e7f8      	b.n	8017d40 <_ZN8touchgfx8LCD16bpp19DecompressorRGB_QOI14blitCopyRGB565EPKhRKNS_4RectES6_h+0x568>
 8017d4e:	eb04 0747 	add.w	r7, r4, r7, lsl #1
 8017d52:	42a7      	cmp	r7, r4
 8017d54:	f67f af37 	bls.w	8017bc6 <_ZN8touchgfx8LCD16bpp19DecompressorRGB_QOI14blitCopyRGB565EPKhRKNS_4RectES6_h+0x3ee>
 8017d58:	f824 9b02 	strh.w	r9, [r4], #2
 8017d5c:	e7f9      	b.n	8017d52 <_ZN8touchgfx8LCD16bpp19DecompressorRGB_QOI14blitCopyRGB565EPKhRKNS_4RectES6_h+0x57a>
 8017d5e:	f1bb 0f00 	cmp.w	fp, #0
 8017d62:	d00c      	beq.n	8017d7e <_ZN8touchgfx8LCD16bpp19DecompressorRGB_QOI14blitCopyRGB565EPKhRKNS_4RectES6_h+0x5a6>
 8017d64:	ea4f 084b 	mov.w	r8, fp, lsl #1
 8017d68:	4641      	mov	r1, r8
 8017d6a:	9800      	ldr	r0, [sp, #0]
 8017d6c:	f7f4 fbb9 	bl	800c4e2 <_ZN8touchgfx5paint9flushLineEPmi>
 8017d70:	4620      	mov	r0, r4
 8017d72:	9b01      	ldr	r3, [sp, #4]
 8017d74:	9900      	ldr	r1, [sp, #0]
 8017d76:	465a      	mov	r2, fp
 8017d78:	f7f4 fbbe 	bl	800c4f8 <_ZN8touchgfx5paint6rgb56514lineFromRGB565EPtPKtjh>
 8017d7c:	4444      	add	r4, r8
 8017d7e:	4b2a      	ldr	r3, [pc, #168]	@ (8017e28 <_ZN8touchgfx8LCD16bpp19DecompressorRGB_QOI14blitCopyRGB565EPKhRKNS_4RectES6_h+0x650>)
 8017d80:	9a02      	ldr	r2, [sp, #8]
 8017d82:	881b      	ldrh	r3, [r3, #0]
 8017d84:	1a9b      	subs	r3, r3, r2
 8017d86:	eb04 0443 	add.w	r4, r4, r3, lsl #1
 8017d8a:	9b06      	ldr	r3, [sp, #24]
 8017d8c:	3301      	adds	r3, #1
 8017d8e:	9306      	str	r3, [sp, #24]
 8017d90:	9a06      	ldr	r2, [sp, #24]
 8017d92:	9b04      	ldr	r3, [sp, #16]
 8017d94:	4293      	cmp	r3, r2
 8017d96:	d120      	bne.n	8017dda <_ZN8touchgfx8LCD16bpp19DecompressorRGB_QOI14blitCopyRGB565EPKhRKNS_4RectES6_h+0x602>
 8017d98:	9b05      	ldr	r3, [sp, #20]
 8017d9a:	9a05      	ldr	r2, [sp, #20]
 8017d9c:	f8bd 9040 	ldrh.w	r9, [sp, #64]	@ 0x40
 8017da0:	f8bd 5038 	ldrh.w	r5, [sp, #56]	@ 0x38
 8017da4:	980b      	ldr	r0, [sp, #44]	@ 0x2c
 8017da6:	f103 0801 	add.w	r8, r3, #1
 8017daa:	9b08      	ldr	r3, [sp, #32]
 8017dac:	f853 7022 	ldr.w	r7, [r3, r2, lsl #2]
 8017db0:	9b09      	ldr	r3, [sp, #36]	@ 0x24
 8017db2:	ba3f      	rev	r7, r7
 8017db4:	2280      	movs	r2, #128	@ 0x80
 8017db6:	2100      	movs	r1, #0
 8017db8:	441f      	add	r7, r3
 8017dba:	eba9 0905 	sub.w	r9, r9, r5
 8017dbe:	f00a fd6e 	bl	802289e <memset>
 8017dc2:	2300      	movs	r3, #0
 8017dc4:	fa1f f989 	uxth.w	r9, r9
 8017dc8:	f04f 0600 	mov.w	r6, #0
 8017dcc:	f8cd 8014 	str.w	r8, [sp, #20]
 8017dd0:	9306      	str	r3, [sp, #24]
 8017dd2:	f7f4 fb7f 	bl	800c4d4 <_ZN8touchgfx5paint8tearDownEv>
 8017dd6:	46ba      	mov	sl, r7
 8017dd8:	e58a      	b.n	80178f0 <_ZN8touchgfx8LCD16bpp19DecompressorRGB_QOI14blitCopyRGB565EPKhRKNS_4RectES6_h+0x118>
 8017dda:	f8bd 903c 	ldrh.w	r9, [sp, #60]	@ 0x3c
 8017dde:	9b02      	ldr	r3, [sp, #8]
 8017de0:	eba9 0903 	sub.w	r9, r9, r3
 8017de4:	eba9 0505 	sub.w	r5, r9, r5
 8017de8:	fa1f f985 	uxth.w	r9, r5
 8017dec:	e7f1      	b.n	8017dd2 <_ZN8touchgfx8LCD16bpp19DecompressorRGB_QOI14blitCopyRGB565EPKhRKNS_4RectES6_h+0x5fa>
 8017dee:	4b0f      	ldr	r3, [pc, #60]	@ (8017e2c <_ZN8touchgfx8LCD16bpp19DecompressorRGB_QOI14blitCopyRGB565EPKhRKNS_4RectES6_h+0x654>)
 8017df0:	6818      	ldr	r0, [r3, #0]
 8017df2:	6803      	ldr	r3, [r0, #0]
 8017df4:	6adb      	ldr	r3, [r3, #44]	@ 0x2c
 8017df6:	4798      	blx	r3
 8017df8:	b013      	add	sp, #76	@ 0x4c
 8017dfa:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 8017dfe:	9b02      	ldr	r3, [sp, #8]
 8017e00:	9a02      	ldr	r2, [sp, #8]
 8017e02:	42ab      	cmp	r3, r5
 8017e04:	bfa8      	it	ge
 8017e06:	462b      	movge	r3, r5
 8017e08:	eba2 0803 	sub.w	r8, r2, r3
 8017e0c:	1aed      	subs	r5, r5, r3
 8017e0e:	e626      	b.n	8017a5e <_ZN8touchgfx8LCD16bpp19DecompressorRGB_QOI14blitCopyRGB565EPKhRKNS_4RectES6_h+0x286>
 8017e10:	f108 38ff 	add.w	r8, r8, #4294967295
 8017e14:	fa1f f986 	uxth.w	r9, r6
 8017e18:	2500      	movs	r5, #0
 8017e1a:	2701      	movs	r7, #1
 8017e1c:	e76f      	b.n	8017cfe <_ZN8touchgfx8LCD16bpp19DecompressorRGB_QOI14blitCopyRGB565EPKhRKNS_4RectES6_h+0x526>
 8017e1e:	bf00      	nop
 8017e20:	20000120 	.word	0x20000120
 8017e24:	20000220 	.word	0x20000220
 8017e28:	20002db6 	.word	0x20002db6
 8017e2c:	20002dbc 	.word	0x20002dbc

08017e30 <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE16blitCopyARGB8888EPKhS3_RKNS_4RectES6_h>:
 8017e30:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8017e34:	b08f      	sub	sp, #60	@ 0x3c
 8017e36:	461c      	mov	r4, r3
 8017e38:	9203      	str	r2, [sp, #12]
 8017e3a:	f89d 2064 	ldrb.w	r2, [sp, #100]	@ 0x64
 8017e3e:	9b18      	ldr	r3, [sp, #96]	@ 0x60
 8017e40:	9202      	str	r2, [sp, #8]
 8017e42:	460f      	mov	r7, r1
 8017e44:	2a00      	cmp	r2, #0
 8017e46:	f000 8128 	beq.w	801809a <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE16blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x26a>
 8017e4a:	6820      	ldr	r0, [r4, #0]
 8017e4c:	6861      	ldr	r1, [r4, #4]
 8017e4e:	aa0a      	add	r2, sp, #40	@ 0x28
 8017e50:	c203      	stmia	r2!, {r0, r1}
 8017e52:	6818      	ldr	r0, [r3, #0]
 8017e54:	6859      	ldr	r1, [r3, #4]
 8017e56:	aa0c      	add	r2, sp, #48	@ 0x30
 8017e58:	c203      	stmia	r2!, {r0, r1}
 8017e5a:	a80a      	add	r0, sp, #40	@ 0x28
 8017e5c:	f7f8 fb84 	bl	8010568 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectE>
 8017e60:	4621      	mov	r1, r4
 8017e62:	a80c      	add	r0, sp, #48	@ 0x30
 8017e64:	f7f8 fba8 	bl	80105b8 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectERKS1_>
 8017e68:	f9bd 602c 	ldrsh.w	r6, [sp, #44]	@ 0x2c
 8017e6c:	f9bd 502e 	ldrsh.w	r5, [sp, #46]	@ 0x2e
 8017e70:	f8bd 0030 	ldrh.w	r0, [sp, #48]	@ 0x30
 8017e74:	f5b6 6f80 	cmp.w	r6, #1024	@ 0x400
 8017e78:	bfde      	ittt	le
 8017e7a:	b2b3      	uxthle	r3, r6
 8017e7c:	f44f 6280 	movle.w	r2, #1024	@ 0x400
 8017e80:	fb92 f3f3 	sdivle	r3, r2, r3
 8017e84:	f9bd 2032 	ldrsh.w	r2, [sp, #50]	@ 0x32
 8017e88:	bfc8      	it	gt
 8017e8a:	2301      	movgt	r3, #1
 8017e8c:	fb92 f1f3 	sdiv	r1, r2, r3
 8017e90:	fa1f fc81 	uxth.w	ip, r1
 8017e94:	fb0c 2413 	mls	r4, ip, r3, r2
 8017e98:	fb14 f406 	smulbb	r4, r4, r6
 8017e9c:	441d      	add	r5, r3
 8017e9e:	4404      	add	r4, r0
 8017ea0:	4661      	mov	r1, ip
 8017ea2:	3d01      	subs	r5, #1
 8017ea4:	b2a4      	uxth	r4, r4
 8017ea6:	fb95 f5f3 	sdiv	r5, r5, r3
 8017eaa:	b121      	cbz	r1, 8017eb6 <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE16blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x86>
 8017eac:	9b03      	ldr	r3, [sp, #12]
 8017eae:	f853 302c 	ldr.w	r3, [r3, ip, lsl #2]
 8017eb2:	ba1b      	rev	r3, r3
 8017eb4:	441f      	add	r7, r3
 8017eb6:	f8bd 3028 	ldrh.w	r3, [sp, #40]	@ 0x28
 8017eba:	f9bd 9034 	ldrsh.w	r9, [sp, #52]	@ 0x34
 8017ebe:	f9bd 6036 	ldrsh.w	r6, [sp, #54]	@ 0x36
 8017ec2:	4418      	add	r0, r3
 8017ec4:	f8bd 302a 	ldrh.w	r3, [sp, #42]	@ 0x2a
 8017ec8:	f8ad 0030 	strh.w	r0, [sp, #48]	@ 0x30
 8017ecc:	441a      	add	r2, r3
 8017ece:	4b74      	ldr	r3, [pc, #464]	@ (80180a0 <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE16blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x270>)
 8017ed0:	f8ad 2032 	strh.w	r2, [sp, #50]	@ 0x32
 8017ed4:	6818      	ldr	r0, [r3, #0]
 8017ed6:	6803      	ldr	r3, [r0, #0]
 8017ed8:	6a9b      	ldr	r3, [r3, #40]	@ 0x28
 8017eda:	4798      	blx	r3
 8017edc:	4a71      	ldr	r2, [pc, #452]	@ (80180a4 <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE16blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x274>)
 8017ede:	f9bd 1032 	ldrsh.w	r1, [sp, #50]	@ 0x32
 8017ee2:	8813      	ldrh	r3, [r2, #0]
 8017ee4:	f9bd c030 	ldrsh.w	ip, [sp, #48]	@ 0x30
 8017ee8:	9209      	str	r2, [sp, #36]	@ 0x24
 8017eea:	fb03 c101 	mla	r1, r3, r1, ip
 8017eee:	eb00 0041 	add.w	r0, r0, r1, lsl #1
 8017ef2:	4373      	muls	r3, r6
 8017ef4:	b2ad      	uxth	r5, r5
 8017ef6:	eb00 0343 	add.w	r3, r0, r3, lsl #1
 8017efa:	00ad      	lsls	r5, r5, #2
 8017efc:	2c00      	cmp	r4, #0
 8017efe:	9304      	str	r3, [sp, #16]
 8017f00:	f105 0304 	add.w	r3, r5, #4
 8017f04:	9305      	str	r3, [sp, #20]
 8017f06:	bf0c      	ite	eq
 8017f08:	46c8      	moveq	r8, r9
 8017f0a:	f04f 0800 	movne.w	r8, #0
 8017f0e:	2300      	movs	r3, #0
 8017f10:	fa1f f888 	uxth.w	r8, r8
 8017f14:	9301      	str	r3, [sp, #4]
 8017f16:	9a04      	ldr	r2, [sp, #16]
 8017f18:	4282      	cmp	r2, r0
 8017f1a:	f240 80b9 	bls.w	8018090 <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE16blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x260>
 8017f1e:	b95b      	cbnz	r3, 8017f38 <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE16blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x108>
 8017f20:	783a      	ldrb	r2, [r7, #0]
 8017f22:	0993      	lsrs	r3, r2, #6
 8017f24:	f002 023f 	and.w	r2, r2, #63	@ 0x3f
 8017f28:	9201      	str	r2, [sp, #4]
 8017f2a:	1e5a      	subs	r2, r3, #1
 8017f2c:	2a02      	cmp	r2, #2
 8017f2e:	bf8d      	iteet	hi
 8017f30:	787b      	ldrbhi	r3, [r7, #1]
 8017f32:	3701      	addls	r7, #1
 8017f34:	b29b      	uxthls	r3, r3
 8017f36:	3702      	addhi	r7, #2
 8017f38:	b184      	cbz	r4, 8017f5c <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE16blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x12c>
 8017f3a:	429c      	cmp	r4, r3
 8017f3c:	bf95      	itete	ls
 8017f3e:	1b1c      	subls	r4, r3, r4
 8017f40:	1ae4      	subhi	r4, r4, r3
 8017f42:	fa1f fa84 	uxthls.w	sl, r4
 8017f46:	b2a4      	uxthhi	r4, r4
 8017f48:	bf87      	ittee	hi
 8017f4a:	46c4      	movhi	ip, r8
 8017f4c:	f04f 0a00 	movhi.w	sl, #0
 8017f50:	fa1f fc89 	uxthls.w	ip, r9
 8017f54:	2400      	movls	r4, #0
 8017f56:	4653      	mov	r3, sl
 8017f58:	46e0      	mov	r8, ip
 8017f5a:	e7dc      	b.n	8017f16 <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE16blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0xe6>
 8017f5c:	2204      	movs	r2, #4
 8017f5e:	4615      	mov	r5, r2
 8017f60:	9905      	ldr	r1, [sp, #20]
 8017f62:	9a01      	ldr	r2, [sp, #4]
 8017f64:	fb15 1202 	smlabb	r2, r5, r2, r1
 8017f68:	9903      	ldr	r1, [sp, #12]
 8017f6a:	588a      	ldr	r2, [r1, r2]
 8017f6c:	4543      	cmp	r3, r8
 8017f6e:	bf27      	ittee	cs
 8017f70:	eba3 0a08 	subcs.w	sl, r3, r8
 8017f74:	46c6      	movcs	lr, r8
 8017f76:	eba8 0c03 	subcc.w	ip, r8, r3
 8017f7a:	469e      	movcc	lr, r3
 8017f7c:	ea4f 6112 	mov.w	r1, r2, lsr #24
 8017f80:	bf27      	ittee	cs
 8017f82:	fa1f fa8a 	uxthcs.w	sl, sl
 8017f86:	46a4      	movcs	ip, r4
 8017f88:	fa1f fc8c 	uxthcc.w	ip, ip
 8017f8c:	46a2      	movcc	sl, r4
 8017f8e:	ea4f 0e4e 	mov.w	lr, lr, lsl #1
 8017f92:	2900      	cmp	r1, #0
 8017f94:	d066      	beq.n	8018064 <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE16blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x234>
 8017f96:	29ff      	cmp	r1, #255	@ 0xff
 8017f98:	ea4f 2612 	mov.w	r6, r2, lsr #8
 8017f9c:	d114      	bne.n	8017fc8 <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE16blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x198>
 8017f9e:	9d02      	ldr	r5, [sp, #8]
 8017fa0:	2dff      	cmp	r5, #255	@ 0xff
 8017fa2:	d111      	bne.n	8017fc8 <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE16blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x198>
 8017fa4:	0951      	lsrs	r1, r2, #5
 8017fa6:	f426 66ff 	bic.w	r6, r6, #2040	@ 0x7f8
 8017faa:	f401 61fc 	and.w	r1, r1, #2016	@ 0x7e0
 8017fae:	f026 0607 	bic.w	r6, r6, #7
 8017fb2:	430e      	orrs	r6, r1
 8017fb4:	f3c2 02c4 	ubfx	r2, r2, #3, #5
 8017fb8:	4316      	orrs	r6, r2
 8017fba:	b2b6      	uxth	r6, r6
 8017fbc:	4486      	add	lr, r0
 8017fbe:	4586      	cmp	lr, r0
 8017fc0:	d051      	beq.n	8018066 <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE16blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x236>
 8017fc2:	f820 6b02 	strh.w	r6, [r0], #2
 8017fc6:	e7fa      	b.n	8017fbe <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE16blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x18e>
 8017fc8:	9d02      	ldr	r5, [sp, #8]
 8017fca:	4369      	muls	r1, r5
 8017fcc:	1c4d      	adds	r5, r1, #1
 8017fce:	eb05 2521 	add.w	r5, r5, r1, asr #8
 8017fd2:	122d      	asrs	r5, r5, #8
 8017fd4:	ea6f 0b05 	mvn.w	fp, r5
 8017fd8:	f3c2 4107 	ubfx	r1, r2, #16, #8
 8017fdc:	b2ad      	uxth	r5, r5
 8017fde:	b2f6      	uxtb	r6, r6
 8017fe0:	b2d2      	uxtb	r2, r2
 8017fe2:	fb11 f105 	smulbb	r1, r1, r5
 8017fe6:	fb16 f605 	smulbb	r6, r6, r5
 8017fea:	fb12 f205 	smulbb	r2, r2, r5
 8017fee:	b289      	uxth	r1, r1
 8017ff0:	b2b6      	uxth	r6, r6
 8017ff2:	b292      	uxth	r2, r2
 8017ff4:	9106      	str	r1, [sp, #24]
 8017ff6:	9607      	str	r6, [sp, #28]
 8017ff8:	9208      	str	r2, [sp, #32]
 8017ffa:	4486      	add	lr, r0
 8017ffc:	fa5f fb8b 	uxtb.w	fp, fp
 8018000:	4586      	cmp	lr, r0
 8018002:	d030      	beq.n	8018066 <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE16blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x236>
 8018004:	8802      	ldrh	r2, [r0, #0]
 8018006:	9906      	ldr	r1, [sp, #24]
 8018008:	1216      	asrs	r6, r2, #8
 801800a:	f006 06f8 	and.w	r6, r6, #248	@ 0xf8
 801800e:	10d5      	asrs	r5, r2, #3
 8018010:	ea46 1656 	orr.w	r6, r6, r6, lsr #5
 8018014:	fb06 160b 	mla	r6, r6, fp, r1
 8018018:	f005 05fc 	and.w	r5, r5, #252	@ 0xfc
 801801c:	9907      	ldr	r1, [sp, #28]
 801801e:	00d2      	lsls	r2, r2, #3
 8018020:	ea45 1595 	orr.w	r5, r5, r5, lsr #6
 8018024:	fb05 150b 	mla	r5, r5, fp, r1
 8018028:	b2d2      	uxtb	r2, r2
 801802a:	9908      	ldr	r1, [sp, #32]
 801802c:	ea42 1252 	orr.w	r2, r2, r2, lsr #5
 8018030:	b2b6      	uxth	r6, r6
 8018032:	fb02 120b 	mla	r2, r2, fp, r1
 8018036:	b292      	uxth	r2, r2
 8018038:	1c71      	adds	r1, r6, #1
 801803a:	eb01 2616 	add.w	r6, r1, r6, lsr #8
 801803e:	1c51      	adds	r1, r2, #1
 8018040:	eb01 2212 	add.w	r2, r1, r2, lsr #8
 8018044:	b2ad      	uxth	r5, r5
 8018046:	f3c2 22c4 	ubfx	r2, r2, #11, #5
 801804a:	f406 4678 	and.w	r6, r6, #63488	@ 0xf800
 801804e:	4316      	orrs	r6, r2
 8018050:	1c6a      	adds	r2, r5, #1
 8018052:	eb02 2515 	add.w	r5, r2, r5, lsr #8
 8018056:	096d      	lsrs	r5, r5, #5
 8018058:	f405 65fc 	and.w	r5, r5, #2016	@ 0x7e0
 801805c:	432e      	orrs	r6, r5
 801805e:	f820 6b02 	strh.w	r6, [r0], #2
 8018062:	e7cd      	b.n	8018000 <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE16blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x1d0>
 8018064:	4470      	add	r0, lr
 8018066:	4543      	cmp	r3, r8
 8018068:	f4ff af75 	bcc.w	8017f56 <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE16blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x126>
 801806c:	f8bd 402c 	ldrh.w	r4, [sp, #44]	@ 0x2c
 8018070:	9b09      	ldr	r3, [sp, #36]	@ 0x24
 8018072:	fa1f fc89 	uxth.w	ip, r9
 8018076:	eba4 040c 	sub.w	r4, r4, ip
 801807a:	881b      	ldrh	r3, [r3, #0]
 801807c:	b2a4      	uxth	r4, r4
 801807e:	2c00      	cmp	r4, #0
 8018080:	eba3 0309 	sub.w	r3, r3, r9
 8018084:	bf18      	it	ne
 8018086:	f04f 0c00 	movne.w	ip, #0
 801808a:	eb00 0043 	add.w	r0, r0, r3, lsl #1
 801808e:	e762      	b.n	8017f56 <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE16blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x126>
 8018090:	4b03      	ldr	r3, [pc, #12]	@ (80180a0 <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE16blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x270>)
 8018092:	6818      	ldr	r0, [r3, #0]
 8018094:	6803      	ldr	r3, [r0, #0]
 8018096:	6adb      	ldr	r3, [r3, #44]	@ 0x2c
 8018098:	4798      	blx	r3
 801809a:	b00f      	add	sp, #60	@ 0x3c
 801809c:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 80180a0:	20002dbc 	.word	0x20002dbc
 80180a4:	20002db6 	.word	0x20002db6

080180a8 <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE14blitCopyRGB888EPKhS3_RKNS_4RectES6_h>:
 80180a8:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 80180ac:	b093      	sub	sp, #76	@ 0x4c
 80180ae:	461c      	mov	r4, r3
 80180b0:	9205      	str	r2, [sp, #20]
 80180b2:	f89d 2074 	ldrb.w	r2, [sp, #116]	@ 0x74
 80180b6:	9101      	str	r1, [sp, #4]
 80180b8:	9b1c      	ldr	r3, [sp, #112]	@ 0x70
 80180ba:	9202      	str	r2, [sp, #8]
 80180bc:	2a00      	cmp	r2, #0
 80180be:	f000 812c 	beq.w	801831a <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE14blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x272>
 80180c2:	6820      	ldr	r0, [r4, #0]
 80180c4:	6861      	ldr	r1, [r4, #4]
 80180c6:	aa0e      	add	r2, sp, #56	@ 0x38
 80180c8:	c203      	stmia	r2!, {r0, r1}
 80180ca:	6818      	ldr	r0, [r3, #0]
 80180cc:	6859      	ldr	r1, [r3, #4]
 80180ce:	aa10      	add	r2, sp, #64	@ 0x40
 80180d0:	c203      	stmia	r2!, {r0, r1}
 80180d2:	a80e      	add	r0, sp, #56	@ 0x38
 80180d4:	f7f8 fa48 	bl	8010568 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectE>
 80180d8:	4621      	mov	r1, r4
 80180da:	a810      	add	r0, sp, #64	@ 0x40
 80180dc:	f7f8 fa6c 	bl	80105b8 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectERKS1_>
 80180e0:	f9bd 603c 	ldrsh.w	r6, [sp, #60]	@ 0x3c
 80180e4:	f9bd 503e 	ldrsh.w	r5, [sp, #62]	@ 0x3e
 80180e8:	f8bd 0040 	ldrh.w	r0, [sp, #64]	@ 0x40
 80180ec:	f5b6 6f80 	cmp.w	r6, #1024	@ 0x400
 80180f0:	bfde      	ittt	le
 80180f2:	b2b3      	uxthle	r3, r6
 80180f4:	f44f 6280 	movle.w	r2, #1024	@ 0x400
 80180f8:	fb92 f3f3 	sdivle	r3, r2, r3
 80180fc:	f9bd 2042 	ldrsh.w	r2, [sp, #66]	@ 0x42
 8018100:	bfc8      	it	gt
 8018102:	2301      	movgt	r3, #1
 8018104:	fb92 f1f3 	sdiv	r1, r2, r3
 8018108:	fa1f fc81 	uxth.w	ip, r1
 801810c:	fb0c 2413 	mls	r4, ip, r3, r2
 8018110:	fb14 f406 	smulbb	r4, r4, r6
 8018114:	441d      	add	r5, r3
 8018116:	4404      	add	r4, r0
 8018118:	4661      	mov	r1, ip
 801811a:	3d01      	subs	r5, #1
 801811c:	b2a4      	uxth	r4, r4
 801811e:	fb95 f5f3 	sdiv	r5, r5, r3
 8018122:	b131      	cbz	r1, 8018132 <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE14blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x8a>
 8018124:	9b05      	ldr	r3, [sp, #20]
 8018126:	9901      	ldr	r1, [sp, #4]
 8018128:	f853 302c 	ldr.w	r3, [r3, ip, lsl #2]
 801812c:	ba1b      	rev	r3, r3
 801812e:	4419      	add	r1, r3
 8018130:	9101      	str	r1, [sp, #4]
 8018132:	f8bd 3038 	ldrh.w	r3, [sp, #56]	@ 0x38
 8018136:	f9bd b044 	ldrsh.w	fp, [sp, #68]	@ 0x44
 801813a:	f9bd 6046 	ldrsh.w	r6, [sp, #70]	@ 0x46
 801813e:	4418      	add	r0, r3
 8018140:	f8bd 303a 	ldrh.w	r3, [sp, #58]	@ 0x3a
 8018144:	f8ad 0040 	strh.w	r0, [sp, #64]	@ 0x40
 8018148:	441a      	add	r2, r3
 801814a:	4b75      	ldr	r3, [pc, #468]	@ (8018320 <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE14blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x278>)
 801814c:	f8ad 2042 	strh.w	r2, [sp, #66]	@ 0x42
 8018150:	6818      	ldr	r0, [r3, #0]
 8018152:	6803      	ldr	r3, [r0, #0]
 8018154:	6a9b      	ldr	r3, [r3, #40]	@ 0x28
 8018156:	4798      	blx	r3
 8018158:	4972      	ldr	r1, [pc, #456]	@ (8018324 <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE14blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x27c>)
 801815a:	f9bd c040 	ldrsh.w	ip, [sp, #64]	@ 0x40
 801815e:	880b      	ldrh	r3, [r1, #0]
 8018160:	f9bd 2042 	ldrsh.w	r2, [sp, #66]	@ 0x42
 8018164:	910d      	str	r1, [sp, #52]	@ 0x34
 8018166:	fb03 c202 	mla	r2, r3, r2, ip
 801816a:	eb00 0042 	add.w	r0, r0, r2, lsl #1
 801816e:	4373      	muls	r3, r6
 8018170:	b2ad      	uxth	r5, r5
 8018172:	eb00 0343 	add.w	r3, r0, r3, lsl #1
 8018176:	00ad      	lsls	r5, r5, #2
 8018178:	9308      	str	r3, [sp, #32]
 801817a:	1d2b      	adds	r3, r5, #4
 801817c:	9309      	str	r3, [sp, #36]	@ 0x24
 801817e:	9b02      	ldr	r3, [sp, #8]
 8018180:	f8bd 1008 	ldrh.w	r1, [sp, #8]
 8018184:	9106      	str	r1, [sp, #24]
 8018186:	43da      	mvns	r2, r3
 8018188:	2c00      	cmp	r4, #0
 801818a:	bf0c      	ite	eq
 801818c:	46dc      	moveq	ip, fp
 801818e:	f04f 0c00 	movne.w	ip, #0
 8018192:	2300      	movs	r3, #0
 8018194:	b2d2      	uxtb	r2, r2
 8018196:	fa1f fc8c 	uxth.w	ip, ip
 801819a:	9303      	str	r3, [sp, #12]
 801819c:	9207      	str	r2, [sp, #28]
 801819e:	9a08      	ldr	r2, [sp, #32]
 80181a0:	4282      	cmp	r2, r0
 80181a2:	f240 80b5 	bls.w	8018310 <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE14blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x268>
 80181a6:	b963      	cbnz	r3, 80181c2 <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE14blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x11a>
 80181a8:	9b01      	ldr	r3, [sp, #4]
 80181aa:	781a      	ldrb	r2, [r3, #0]
 80181ac:	0993      	lsrs	r3, r2, #6
 80181ae:	f002 023f 	and.w	r2, r2, #63	@ 0x3f
 80181b2:	9203      	str	r2, [sp, #12]
 80181b4:	1e5a      	subs	r2, r3, #1
 80181b6:	2a02      	cmp	r2, #2
 80181b8:	d815      	bhi.n	80181e6 <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE14blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x13e>
 80181ba:	9a01      	ldr	r2, [sp, #4]
 80181bc:	3201      	adds	r2, #1
 80181be:	9201      	str	r2, [sp, #4]
 80181c0:	b29b      	uxth	r3, r3
 80181c2:	b1b4      	cbz	r4, 80181f2 <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE14blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x14a>
 80181c4:	429c      	cmp	r4, r3
 80181c6:	bf95      	itete	ls
 80181c8:	1b1c      	subls	r4, r3, r4
 80181ca:	1ae4      	subhi	r4, r4, r3
 80181cc:	fa1f f884 	uxthls.w	r8, r4
 80181d0:	b2a4      	uxthhi	r4, r4
 80181d2:	bf87      	ittee	hi
 80181d4:	4666      	movhi	r6, ip
 80181d6:	f04f 0800 	movhi.w	r8, #0
 80181da:	fa1f f68b 	uxthls.w	r6, fp
 80181de:	2400      	movls	r4, #0
 80181e0:	4643      	mov	r3, r8
 80181e2:	46b4      	mov	ip, r6
 80181e4:	e7db      	b.n	801819e <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE14blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0xf6>
 80181e6:	9a01      	ldr	r2, [sp, #4]
 80181e8:	9b01      	ldr	r3, [sp, #4]
 80181ea:	3202      	adds	r2, #2
 80181ec:	785b      	ldrb	r3, [r3, #1]
 80181ee:	9201      	str	r2, [sp, #4]
 80181f0:	e7e7      	b.n	80181c2 <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE14blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x11a>
 80181f2:	2203      	movs	r2, #3
 80181f4:	4615      	mov	r5, r2
 80181f6:	9909      	ldr	r1, [sp, #36]	@ 0x24
 80181f8:	9a03      	ldr	r2, [sp, #12]
 80181fa:	fb15 1202 	smlabb	r2, r5, r2, r1
 80181fe:	9905      	ldr	r1, [sp, #20]
 8018200:	4563      	cmp	r3, ip
 8018202:	eb01 0502 	add.w	r5, r1, r2
 8018206:	9902      	ldr	r1, [sp, #8]
 8018208:	bf29      	itett	cs
 801820a:	eba3 080c 	subcs.w	r8, r3, ip
 801820e:	ebac 0603 	subcc.w	r6, ip, r3
 8018212:	fa1f f888 	uxthcs.w	r8, r8
 8018216:	46e1      	movcs	r9, ip
 8018218:	bf2f      	iteee	cs
 801821a:	4626      	movcs	r6, r4
 801821c:	b2b6      	uxthcc	r6, r6
 801821e:	4699      	movcc	r9, r3
 8018220:	46a0      	movcc	r8, r4
 8018222:	29ff      	cmp	r1, #255	@ 0xff
 8018224:	d04a      	beq.n	80182bc <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE14blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x214>
 8018226:	9f06      	ldr	r7, [sp, #24]
 8018228:	78a9      	ldrb	r1, [r5, #2]
 801822a:	9004      	str	r0, [sp, #16]
 801822c:	4379      	muls	r1, r7
 801822e:	910a      	str	r1, [sp, #40]	@ 0x28
 8018230:	7869      	ldrb	r1, [r5, #1]
 8018232:	4379      	muls	r1, r7
 8018234:	910b      	str	r1, [sp, #44]	@ 0x2c
 8018236:	9905      	ldr	r1, [sp, #20]
 8018238:	5c8a      	ldrb	r2, [r1, r2]
 801823a:	437a      	muls	r2, r7
 801823c:	920c      	str	r2, [sp, #48]	@ 0x30
 801823e:	46ca      	mov	sl, r9
 8018240:	f1ba 0f00 	cmp.w	sl, #0
 8018244:	d03d      	beq.n	80182c2 <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE14blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x21a>
 8018246:	9a04      	ldr	r2, [sp, #16]
 8018248:	9f07      	ldr	r7, [sp, #28]
 801824a:	8812      	ldrh	r2, [r2, #0]
 801824c:	1215      	asrs	r5, r2, #8
 801824e:	46be      	mov	lr, r7
 8018250:	f005 05f8 	and.w	r5, r5, #248	@ 0xf8
 8018254:	9f0a      	ldr	r7, [sp, #40]	@ 0x28
 8018256:	10d1      	asrs	r1, r2, #3
 8018258:	ea45 1555 	orr.w	r5, r5, r5, lsr #5
 801825c:	fb05 750e 	mla	r5, r5, lr, r7
 8018260:	f001 01fc 	and.w	r1, r1, #252	@ 0xfc
 8018264:	9f0b      	ldr	r7, [sp, #44]	@ 0x2c
 8018266:	00d2      	lsls	r2, r2, #3
 8018268:	ea41 1191 	orr.w	r1, r1, r1, lsr #6
 801826c:	fb01 710e 	mla	r1, r1, lr, r7
 8018270:	b2d2      	uxtb	r2, r2
 8018272:	9f0c      	ldr	r7, [sp, #48]	@ 0x30
 8018274:	ea42 1252 	orr.w	r2, r2, r2, lsr #5
 8018278:	b2ad      	uxth	r5, r5
 801827a:	fb02 720e 	mla	r2, r2, lr, r7
 801827e:	b292      	uxth	r2, r2
 8018280:	f105 0e01 	add.w	lr, r5, #1
 8018284:	eb0e 2515 	add.w	r5, lr, r5, lsr #8
 8018288:	f102 0e01 	add.w	lr, r2, #1
 801828c:	eb0e 2212 	add.w	r2, lr, r2, lsr #8
 8018290:	b289      	uxth	r1, r1
 8018292:	f3c2 22c4 	ubfx	r2, r2, #11, #5
 8018296:	f405 4578 	and.w	r5, r5, #63488	@ 0xf800
 801829a:	4315      	orrs	r5, r2
 801829c:	1c4a      	adds	r2, r1, #1
 801829e:	eb02 2111 	add.w	r1, r2, r1, lsr #8
 80182a2:	0949      	lsrs	r1, r1, #5
 80182a4:	9a04      	ldr	r2, [sp, #16]
 80182a6:	f401 61fc 	and.w	r1, r1, #2016	@ 0x7e0
 80182aa:	430d      	orrs	r5, r1
 80182ac:	f822 5b02 	strh.w	r5, [r2], #2
 80182b0:	f10a 3aff 	add.w	sl, sl, #4294967295
 80182b4:	9204      	str	r2, [sp, #16]
 80182b6:	fa1f fa8a 	uxth.w	sl, sl
 80182ba:	e7c1      	b.n	8018240 <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE14blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x198>
 80182bc:	4649      	mov	r1, r9
 80182be:	4686      	mov	lr, r0
 80182c0:	b999      	cbnz	r1, 80182ea <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE14blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x242>
 80182c2:	4563      	cmp	r3, ip
 80182c4:	eb00 0049 	add.w	r0, r0, r9, lsl #1
 80182c8:	d38a      	bcc.n	80181e0 <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE14blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x138>
 80182ca:	f8bd 403c 	ldrh.w	r4, [sp, #60]	@ 0x3c
 80182ce:	9b0d      	ldr	r3, [sp, #52]	@ 0x34
 80182d0:	fa1f f68b 	uxth.w	r6, fp
 80182d4:	1ba4      	subs	r4, r4, r6
 80182d6:	881b      	ldrh	r3, [r3, #0]
 80182d8:	b2a4      	uxth	r4, r4
 80182da:	2c00      	cmp	r4, #0
 80182dc:	eba3 030b 	sub.w	r3, r3, fp
 80182e0:	bf18      	it	ne
 80182e2:	2600      	movne	r6, #0
 80182e4:	eb00 0043 	add.w	r0, r0, r3, lsl #1
 80182e8:	e77a      	b.n	80181e0 <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE14blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x138>
 80182ea:	78aa      	ldrb	r2, [r5, #2]
 80182ec:	4f0e      	ldr	r7, [pc, #56]	@ (8018328 <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE14blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x280>)
 80182ee:	ea07 2a02 	and.w	sl, r7, r2, lsl #8
 80182f2:	786a      	ldrb	r2, [r5, #1]
 80182f4:	00d2      	lsls	r2, r2, #3
 80182f6:	f402 62fc 	and.w	r2, r2, #2016	@ 0x7e0
 80182fa:	ea4a 0202 	orr.w	r2, sl, r2
 80182fe:	f895 a000 	ldrb.w	sl, [r5]
 8018302:	3901      	subs	r1, #1
 8018304:	ea42 02da 	orr.w	r2, r2, sl, lsr #3
 8018308:	f82e 2b02 	strh.w	r2, [lr], #2
 801830c:	b289      	uxth	r1, r1
 801830e:	e7d7      	b.n	80182c0 <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE14blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x218>
 8018310:	4b03      	ldr	r3, [pc, #12]	@ (8018320 <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE14blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x278>)
 8018312:	6818      	ldr	r0, [r3, #0]
 8018314:	6803      	ldr	r3, [r0, #0]
 8018316:	6adb      	ldr	r3, [r3, #44]	@ 0x2c
 8018318:	4798      	blx	r3
 801831a:	b013      	add	sp, #76	@ 0x4c
 801831c:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 8018320:	20002dbc 	.word	0x20002dbc
 8018324:	20002db6 	.word	0x20002db6
 8018328:	fffff800 	.word	0xfffff800

0801832c <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW916blitCopyARGB8888EPKhS3_RKNS_4RectES6_h>:
 801832c:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8018330:	b09d      	sub	sp, #116	@ 0x74
 8018332:	e9cd 1211 	strd	r1, r2, [sp, #68]	@ 0x44
 8018336:	f89d 209c 	ldrb.w	r2, [sp, #156]	@ 0x9c
 801833a:	920e      	str	r2, [sp, #56]	@ 0x38
 801833c:	461c      	mov	r4, r3
 801833e:	4683      	mov	fp, r0
 8018340:	9b26      	ldr	r3, [sp, #152]	@ 0x98
 8018342:	2a00      	cmp	r2, #0
 8018344:	f000 81e0 	beq.w	8018708 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW916blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x3dc>
 8018348:	6820      	ldr	r0, [r4, #0]
 801834a:	6861      	ldr	r1, [r4, #4]
 801834c:	aa18      	add	r2, sp, #96	@ 0x60
 801834e:	c203      	stmia	r2!, {r0, r1}
 8018350:	6818      	ldr	r0, [r3, #0]
 8018352:	6859      	ldr	r1, [r3, #4]
 8018354:	aa1a      	add	r2, sp, #104	@ 0x68
 8018356:	c203      	stmia	r2!, {r0, r1}
 8018358:	a818      	add	r0, sp, #96	@ 0x60
 801835a:	f7f8 f905 	bl	8010568 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectE>
 801835e:	4621      	mov	r1, r4
 8018360:	a81a      	add	r0, sp, #104	@ 0x68
 8018362:	f7f8 f929 	bl	80105b8 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectERKS1_>
 8018366:	f9bd 3064 	ldrsh.w	r3, [sp, #100]	@ 0x64
 801836a:	f9bd 4066 	ldrsh.w	r4, [sp, #102]	@ 0x66
 801836e:	f9bd 606e 	ldrsh.w	r6, [sp, #110]	@ 0x6e
 8018372:	f5b3 6f80 	cmp.w	r3, #1024	@ 0x400
 8018376:	bfd7      	itett	le
 8018378:	b29a      	uxthle	r2, r3
 801837a:	2201      	movgt	r2, #1
 801837c:	f44f 6180 	movle.w	r1, #1024	@ 0x400
 8018380:	fb91 f2f2 	sdivle	r2, r1, r2
 8018384:	9202      	str	r2, [sp, #8]
 8018386:	9802      	ldr	r0, [sp, #8]
 8018388:	f9bd 206a 	ldrsh.w	r2, [sp, #106]	@ 0x6a
 801838c:	fb92 f0f0 	sdiv	r0, r2, r0
 8018390:	b280      	uxth	r0, r0
 8018392:	900f      	str	r0, [sp, #60]	@ 0x3c
 8018394:	9902      	ldr	r1, [sp, #8]
 8018396:	9802      	ldr	r0, [sp, #8]
 8018398:	9d0f      	ldr	r5, [sp, #60]	@ 0x3c
 801839a:	440c      	add	r4, r1
 801839c:	fb05 2510 	mls	r5, r5, r0, r2
 80183a0:	fb15 f503 	smulbb	r5, r5, r3
 80183a4:	3c01      	subs	r4, #1
 80183a6:	f8bd 3060 	ldrh.w	r3, [sp, #96]	@ 0x60
 80183aa:	fb94 f4f1 	sdiv	r4, r4, r1
 80183ae:	f8bd 1068 	ldrh.w	r1, [sp, #104]	@ 0x68
 80183b2:	440d      	add	r5, r1
 80183b4:	4419      	add	r1, r3
 80183b6:	f8bd 3062 	ldrh.w	r3, [sp, #98]	@ 0x62
 80183ba:	f8ad 1068 	strh.w	r1, [sp, #104]	@ 0x68
 80183be:	441a      	add	r2, r3
 80183c0:	f9bd 306c 	ldrsh.w	r3, [sp, #108]	@ 0x6c
 80183c4:	9306      	str	r3, [sp, #24]
 80183c6:	4bb3      	ldr	r3, [pc, #716]	@ (8018694 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW916blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x368>)
 80183c8:	f8ad 206a 	strh.w	r2, [sp, #106]	@ 0x6a
 80183cc:	6818      	ldr	r0, [r3, #0]
 80183ce:	6803      	ldr	r3, [r0, #0]
 80183d0:	6a9b      	ldr	r3, [r3, #40]	@ 0x28
 80183d2:	4798      	blx	r3
 80183d4:	4bb0      	ldr	r3, [pc, #704]	@ (8018698 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW916blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x36c>)
 80183d6:	f9bd 106a 	ldrsh.w	r1, [sp, #106]	@ 0x6a
 80183da:	881a      	ldrh	r2, [r3, #0]
 80183dc:	f9bd 7068 	ldrsh.w	r7, [sp, #104]	@ 0x68
 80183e0:	9316      	str	r3, [sp, #88]	@ 0x58
 80183e2:	fb02 7101 	mla	r1, r2, r1, r7
 80183e6:	3401      	adds	r4, #1
 80183e8:	eb00 0841 	add.w	r8, r0, r1, lsl #1
 80183ec:	b2a4      	uxth	r4, r4
 80183ee:	4356      	muls	r6, r2
 80183f0:	eb08 0246 	add.w	r2, r8, r6, lsl #1
 80183f4:	00a4      	lsls	r4, r4, #2
 80183f6:	920a      	str	r2, [sp, #40]	@ 0x28
 80183f8:	1d22      	adds	r2, r4, #4
 80183fa:	b2ad      	uxth	r5, r5
 80183fc:	9213      	str	r2, [sp, #76]	@ 0x4c
 80183fe:	4ba7      	ldr	r3, [pc, #668]	@ (801869c <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW916blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x370>)
 8018400:	9a06      	ldr	r2, [sp, #24]
 8018402:	2d00      	cmp	r5, #0
 8018404:	bf0c      	ite	eq
 8018406:	4611      	moveq	r1, r2
 8018408:	2100      	movne	r1, #0
 801840a:	2200      	movs	r2, #0
 801840c:	eba3 030b 	sub.w	r3, r3, fp
 8018410:	b289      	uxth	r1, r1
 8018412:	920d      	str	r2, [sp, #52]	@ 0x34
 8018414:	9317      	str	r3, [sp, #92]	@ 0x5c
 8018416:	9a0f      	ldr	r2, [sp, #60]	@ 0x3c
 8018418:	9b0d      	ldr	r3, [sp, #52]	@ 0x34
 801841a:	fa12 f383 	uxtah	r3, r2, r3
 801841e:	9a12      	ldr	r2, [sp, #72]	@ 0x48
 8018420:	eb02 0383 	add.w	r3, r2, r3, lsl #2
 8018424:	3304      	adds	r3, #4
 8018426:	9308      	str	r3, [sp, #32]
 8018428:	9b0a      	ldr	r3, [sp, #40]	@ 0x28
 801842a:	4543      	cmp	r3, r8
 801842c:	f240 8167 	bls.w	80186fe <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW916blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x3d2>
 8018430:	9a02      	ldr	r2, [sp, #8]
 8018432:	f8bd 3064 	ldrh.w	r3, [sp, #100]	@ 0x64
 8018436:	fbb5 f3f3 	udiv	r3, r5, r3
 801843a:	1ad3      	subs	r3, r2, r3
 801843c:	b29b      	uxth	r3, r3
 801843e:	9314      	str	r3, [sp, #80]	@ 0x50
 8018440:	9b08      	ldr	r3, [sp, #32]
 8018442:	9808      	ldr	r0, [sp, #32]
 8018444:	785a      	ldrb	r2, [r3, #1]
 8018446:	789b      	ldrb	r3, [r3, #2]
 8018448:	7800      	ldrb	r0, [r0, #0]
 801844a:	9010      	str	r0, [sp, #64]	@ 0x40
 801844c:	021b      	lsls	r3, r3, #8
 801844e:	ea43 4302 	orr.w	r3, r3, r2, lsl #16
 8018452:	9a08      	ldr	r2, [sp, #32]
 8018454:	78d2      	ldrb	r2, [r2, #3]
 8018456:	4313      	orrs	r3, r2
 8018458:	9a11      	ldr	r2, [sp, #68]	@ 0x44
 801845a:	3001      	adds	r0, #1
 801845c:	441a      	add	r2, r3
 801845e:	9007      	str	r0, [sp, #28]
 8018460:	1c50      	adds	r0, r2, #1
 8018462:	9005      	str	r0, [sp, #20]
 8018464:	7852      	ldrb	r2, [r2, #1]
 8018466:	9811      	ldr	r0, [sp, #68]	@ 0x44
 8018468:	0212      	lsls	r2, r2, #8
 801846a:	5cc3      	ldrb	r3, [r0, r3]
 801846c:	f402 72ff 	and.w	r2, r2, #510	@ 0x1fe
 8018470:	431a      	orrs	r2, r3
 8018472:	b293      	uxth	r3, r2
 8018474:	930b      	str	r3, [sp, #44]	@ 0x2c
 8018476:	2300      	movs	r3, #0
 8018478:	9309      	str	r3, [sp, #36]	@ 0x24
 801847a:	2301      	movs	r3, #1
 801847c:	9301      	str	r3, [sp, #4]
 801847e:	9304      	str	r3, [sp, #16]
 8018480:	2300      	movs	r3, #0
 8018482:	f88b 2804 	strb.w	r2, [fp, #2052]	@ 0x804
 8018486:	9303      	str	r3, [sp, #12]
 8018488:	f04f 0e01 	mov.w	lr, #1
 801848c:	2d00      	cmp	r5, #0
 801848e:	d07c      	beq.n	801858a <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW916blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x25e>
 8018490:	45ae      	cmp	lr, r5
 8018492:	d26b      	bcs.n	801856c <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW916blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x240>
 8018494:	9b0a      	ldr	r3, [sp, #40]	@ 0x28
 8018496:	eba5 050e 	sub.w	r5, r5, lr
 801849a:	4543      	cmp	r3, r8
 801849c:	b2ad      	uxth	r5, r5
 801849e:	460c      	mov	r4, r1
 80184a0:	d802      	bhi.n	80184a8 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW916blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x17c>
 80184a2:	e070      	b.n	8018586 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW916blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x25a>
 80184a4:	2b00      	cmp	r3, #0
 80184a6:	d15c      	bne.n	8018562 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW916blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x236>
 80184a8:	9b05      	ldr	r3, [sp, #20]
 80184aa:	9a04      	ldr	r2, [sp, #16]
 80184ac:	785b      	ldrb	r3, [r3, #1]
 80184ae:	9904      	ldr	r1, [sp, #16]
 80184b0:	f1c2 0207 	rsb	r2, r2, #7
 80184b4:	4093      	lsls	r3, r2
 80184b6:	005b      	lsls	r3, r3, #1
 80184b8:	f403 72ff 	and.w	r2, r3, #510	@ 0x1fe
 80184bc:	9b05      	ldr	r3, [sp, #20]
 80184be:	781b      	ldrb	r3, [r3, #0]
 80184c0:	410b      	asrs	r3, r1
 80184c2:	3101      	adds	r1, #1
 80184c4:	b2c9      	uxtb	r1, r1
 80184c6:	2908      	cmp	r1, #8
 80184c8:	9104      	str	r1, [sp, #16]
 80184ca:	9905      	ldr	r1, [sp, #20]
 80184cc:	bf0a      	itet	eq
 80184ce:	3102      	addeq	r1, #2
 80184d0:	3101      	addne	r1, #1
 80184d2:	9105      	streq	r1, [sp, #20]
 80184d4:	b2db      	uxtb	r3, r3
 80184d6:	bf0a      	itet	eq
 80184d8:	2100      	moveq	r1, #0
 80184da:	9105      	strne	r1, [sp, #20]
 80184dc:	9104      	streq	r1, [sp, #16]
 80184de:	4313      	orrs	r3, r2
 80184e0:	9910      	ldr	r1, [sp, #64]	@ 0x40
 80184e2:	b29a      	uxth	r2, r3
 80184e4:	4291      	cmp	r1, r2
 80184e6:	d30a      	bcc.n	80184fe <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW916blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x1d2>
 80184e8:	f88b 3804 	strb.w	r3, [fp, #2052]	@ 0x804
 80184ec:	2301      	movs	r3, #1
 80184ee:	9907      	ldr	r1, [sp, #28]
 80184f0:	f5b1 7f00 	cmp.w	r1, #512	@ 0x200
 80184f4:	d30f      	bcc.n	8018516 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW916blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x1ea>
 80184f6:	2100      	movs	r1, #0
 80184f8:	9301      	str	r3, [sp, #4]
 80184fa:	9103      	str	r1, [sp, #12]
 80184fc:	e032      	b.n	8018564 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW916blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x238>
 80184fe:	9b07      	ldr	r3, [sp, #28]
 8018500:	429a      	cmp	r2, r3
 8018502:	d318      	bcc.n	8018536 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW916blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x20a>
 8018504:	9b01      	ldr	r3, [sp, #4]
 8018506:	f89b 1804 	ldrb.w	r1, [fp, #2052]	@ 0x804
 801850a:	445b      	add	r3, fp
 801850c:	f883 1804 	strb.w	r1, [r3, #2052]	@ 0x804
 8018510:	9b01      	ldr	r3, [sp, #4]
 8018512:	3301      	adds	r3, #1
 8018514:	b29b      	uxth	r3, r3
 8018516:	9907      	ldr	r1, [sp, #28]
 8018518:	f89b 0804 	ldrb.w	r0, [fp, #2052]	@ 0x804
 801851c:	eb0b 0181 	add.w	r1, fp, r1, lsl #2
 8018520:	7108      	strb	r0, [r1, #4]
 8018522:	980b      	ldr	r0, [sp, #44]	@ 0x2c
 8018524:	80c8      	strh	r0, [r1, #6]
 8018526:	9801      	ldr	r0, [sp, #4]
 8018528:	3001      	adds	r0, #1
 801852a:	7148      	strb	r0, [r1, #5]
 801852c:	9907      	ldr	r1, [sp, #28]
 801852e:	3101      	adds	r1, #1
 8018530:	b289      	uxth	r1, r1
 8018532:	9107      	str	r1, [sp, #28]
 8018534:	e7df      	b.n	80184f6 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW916blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x1ca>
 8018536:	eb0b 0382 	add.w	r3, fp, r2, lsl #2
 801853a:	4611      	mov	r1, r2
 801853c:	795b      	ldrb	r3, [r3, #5]
 801853e:	f603 0004 	addw	r0, r3, #2052	@ 0x804
 8018542:	4458      	add	r0, fp
 8018544:	9e17      	ldr	r6, [sp, #92]	@ 0x5c
 8018546:	4406      	add	r6, r0
 8018548:	2e00      	cmp	r6, #0
 801854a:	dd06      	ble.n	801855a <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW916blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x22e>
 801854c:	eb0b 0181 	add.w	r1, fp, r1, lsl #2
 8018550:	790e      	ldrb	r6, [r1, #4]
 8018552:	f800 6d01 	strb.w	r6, [r0, #-1]!
 8018556:	88c9      	ldrh	r1, [r1, #6]
 8018558:	e7f4      	b.n	8018544 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW916blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x218>
 801855a:	f88b 1804 	strb.w	r1, [fp, #2052]	@ 0x804
 801855e:	b29b      	uxth	r3, r3
 8018560:	e7c5      	b.n	80184ee <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW916blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x1c2>
 8018562:	9a0b      	ldr	r2, [sp, #44]	@ 0x2c
 8018564:	920b      	str	r2, [sp, #44]	@ 0x2c
 8018566:	4621      	mov	r1, r4
 8018568:	469e      	mov	lr, r3
 801856a:	e78f      	b.n	801848c <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW916blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x160>
 801856c:	9a03      	ldr	r2, [sp, #12]
 801856e:	f8bd 4018 	ldrh.w	r4, [sp, #24]
 8018572:	442a      	add	r2, r5
 8018574:	ebae 0305 	sub.w	r3, lr, r5
 8018578:	b292      	uxth	r2, r2
 801857a:	b29b      	uxth	r3, r3
 801857c:	9203      	str	r2, [sp, #12]
 801857e:	2500      	movs	r5, #0
 8018580:	9a0a      	ldr	r2, [sp, #40]	@ 0x28
 8018582:	4542      	cmp	r2, r8
 8018584:	d88e      	bhi.n	80184a4 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW916blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x178>
 8018586:	4621      	mov	r1, r4
 8018588:	e74e      	b.n	8018428 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW916blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0xfc>
 801858a:	458e      	cmp	lr, r1
 801858c:	bf29      	itett	cs
 801858e:	ebae 0301 	subcs.w	r3, lr, r1
 8018592:	eba1 040e 	subcc.w	r4, r1, lr
 8018596:	b29b      	uxthcs	r3, r3
 8018598:	910c      	strcs	r1, [sp, #48]	@ 0x30
 801859a:	bf2f      	iteee	cs
 801859c:	462c      	movcs	r4, r5
 801859e:	b2a4      	uxthcc	r4, r4
 80185a0:	f8cd e030 	strcc.w	lr, [sp, #48]	@ 0x30
 80185a4:	462b      	movcc	r3, r5
 80185a6:	f04f 0900 	mov.w	r9, #0
 80185aa:	9a03      	ldr	r2, [sp, #12]
 80185ac:	980c      	ldr	r0, [sp, #48]	@ 0x30
 80185ae:	444a      	add	r2, r9
 80185b0:	4548      	cmp	r0, r9
 80185b2:	b292      	uxth	r2, r2
 80185b4:	d074      	beq.n	80186a0 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW916blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x374>
 80185b6:	445a      	add	r2, fp
 80185b8:	2004      	movs	r0, #4
 80185ba:	4605      	mov	r5, r0
 80185bc:	f892 2804 	ldrb.w	r2, [r2, #2052]	@ 0x804
 80185c0:	9813      	ldr	r0, [sp, #76]	@ 0x4c
 80185c2:	fb15 0202 	smlabb	r2, r5, r2, r0
 80185c6:	9812      	ldr	r0, [sp, #72]	@ 0x48
 80185c8:	5880      	ldr	r0, [r0, r2]
 80185ca:	ea5f 6a10 	movs.w	sl, r0, lsr #24
 80185ce:	d014      	beq.n	80185fa <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW916blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x2ce>
 80185d0:	f1ba 0fff 	cmp.w	sl, #255	@ 0xff
 80185d4:	ea4f 2510 	mov.w	r5, r0, lsr #8
 80185d8:	d112      	bne.n	8018600 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW916blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x2d4>
 80185da:	9a0e      	ldr	r2, [sp, #56]	@ 0x38
 80185dc:	2aff      	cmp	r2, #255	@ 0xff
 80185de:	d10f      	bne.n	8018600 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW916blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x2d4>
 80185e0:	0942      	lsrs	r2, r0, #5
 80185e2:	f425 65ff 	bic.w	r5, r5, #2040	@ 0x7f8
 80185e6:	f402 62fc 	and.w	r2, r2, #2016	@ 0x7e0
 80185ea:	f025 0507 	bic.w	r5, r5, #7
 80185ee:	4315      	orrs	r5, r2
 80185f0:	f3c0 00c4 	ubfx	r0, r0, #3, #5
 80185f4:	4305      	orrs	r5, r0
 80185f6:	f828 5019 	strh.w	r5, [r8, r9, lsl #1]
 80185fa:	f109 0901 	add.w	r9, r9, #1
 80185fe:	e7d4      	b.n	80185aa <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW916blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x27e>
 8018600:	f838 c019 	ldrh.w	ip, [r8, r9, lsl #1]
 8018604:	ea4f 06ec 	mov.w	r6, ip, asr #3
 8018608:	f006 02fc 	and.w	r2, r6, #252	@ 0xfc
 801860c:	9215      	str	r2, [sp, #84]	@ 0x54
 801860e:	9a0e      	ldr	r2, [sp, #56]	@ 0x38
 8018610:	fb02 fa0a 	mul.w	sl, r2, sl
 8018614:	f10a 0201 	add.w	r2, sl, #1
 8018618:	eb02 222a 	add.w	r2, r2, sl, asr #8
 801861c:	ea4f 272c 	mov.w	r7, ip, asr #8
 8018620:	1212      	asrs	r2, r2, #8
 8018622:	fa1f fa82 	uxth.w	sl, r2
 8018626:	f3c0 4607 	ubfx	r6, r0, #16, #8
 801862a:	f007 07f8 	and.w	r7, r7, #248	@ 0xf8
 801862e:	ea4f 0ccc 	mov.w	ip, ip, lsl #3
 8018632:	43d2      	mvns	r2, r2
 8018634:	b2d2      	uxtb	r2, r2
 8018636:	fb16 f60a 	smulbb	r6, r6, sl
 801863a:	fa5f fc8c 	uxtb.w	ip, ip
 801863e:	ea47 1757 	orr.w	r7, r7, r7, lsr #5
 8018642:	b2c0      	uxtb	r0, r0
 8018644:	fb07 6702 	mla	r7, r7, r2, r6
 8018648:	ea4c 1c5c 	orr.w	ip, ip, ip, lsr #5
 801864c:	9e15      	ldr	r6, [sp, #84]	@ 0x54
 801864e:	fb10 f00a 	smulbb	r0, r0, sl
 8018652:	fb0c 0002 	mla	r0, ip, r2, r0
 8018656:	b2ed      	uxtb	r5, r5
 8018658:	b2bf      	uxth	r7, r7
 801865a:	fb15 f50a 	smulbb	r5, r5, sl
 801865e:	b280      	uxth	r0, r0
 8018660:	ea46 1696 	orr.w	r6, r6, r6, lsr #6
 8018664:	fb06 5602 	mla	r6, r6, r2, r5
 8018668:	1c7a      	adds	r2, r7, #1
 801866a:	1c45      	adds	r5, r0, #1
 801866c:	eb02 2717 	add.w	r7, r2, r7, lsr #8
 8018670:	eb05 2510 	add.w	r5, r5, r0, lsr #8
 8018674:	b2b6      	uxth	r6, r6
 8018676:	f3c5 25c4 	ubfx	r5, r5, #11, #5
 801867a:	f407 4778 	and.w	r7, r7, #63488	@ 0xf800
 801867e:	432f      	orrs	r7, r5
 8018680:	1c75      	adds	r5, r6, #1
 8018682:	eb05 2516 	add.w	r5, r5, r6, lsr #8
 8018686:	096d      	lsrs	r5, r5, #5
 8018688:	f405 65fc 	and.w	r5, r5, #2016	@ 0x7e0
 801868c:	432f      	orrs	r7, r5
 801868e:	f828 7019 	strh.w	r7, [r8, r9, lsl #1]
 8018692:	e7b2      	b.n	80185fa <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW916blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x2ce>
 8018694:	20002dbc 	.word	0x20002dbc
 8018698:	20002db6 	.word	0x20002db6
 801869c:	fffff7fb 	.word	0xfffff7fb
 80186a0:	9203      	str	r2, [sp, #12]
 80186a2:	9a0c      	ldr	r2, [sp, #48]	@ 0x30
 80186a4:	458e      	cmp	lr, r1
 80186a6:	eb08 0842 	add.w	r8, r8, r2, lsl #1
 80186aa:	f4ff af68 	bcc.w	801857e <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW916blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x252>
 80186ae:	9a16      	ldr	r2, [sp, #88]	@ 0x58
 80186b0:	9906      	ldr	r1, [sp, #24]
 80186b2:	8812      	ldrh	r2, [r2, #0]
 80186b4:	1a52      	subs	r2, r2, r1
 80186b6:	eb08 0842 	add.w	r8, r8, r2, lsl #1
 80186ba:	9a09      	ldr	r2, [sp, #36]	@ 0x24
 80186bc:	9914      	ldr	r1, [sp, #80]	@ 0x50
 80186be:	3201      	adds	r2, #1
 80186c0:	428a      	cmp	r2, r1
 80186c2:	9209      	str	r2, [sp, #36]	@ 0x24
 80186c4:	d111      	bne.n	80186ea <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW916blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x3be>
 80186c6:	f8bd 5068 	ldrh.w	r5, [sp, #104]	@ 0x68
 80186ca:	f8bd 9060 	ldrh.w	r9, [sp, #96]	@ 0x60
 80186ce:	9b06      	ldr	r3, [sp, #24]
 80186d0:	eba5 0509 	sub.w	r5, r5, r9
 80186d4:	b2ad      	uxth	r5, r5
 80186d6:	2d00      	cmp	r5, #0
 80186d8:	bf08      	it	eq
 80186da:	4619      	moveq	r1, r3
 80186dc:	9b0d      	ldr	r3, [sp, #52]	@ 0x34
 80186de:	bf18      	it	ne
 80186e0:	2100      	movne	r1, #0
 80186e2:	3301      	adds	r3, #1
 80186e4:	930d      	str	r3, [sp, #52]	@ 0x34
 80186e6:	b289      	uxth	r1, r1
 80186e8:	e695      	b.n	8018416 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW916blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0xea>
 80186ea:	f8bd 4018 	ldrh.w	r4, [sp, #24]
 80186ee:	f8bd 5064 	ldrh.w	r5, [sp, #100]	@ 0x64
 80186f2:	1b2d      	subs	r5, r5, r4
 80186f4:	b2ad      	uxth	r5, r5
 80186f6:	2d00      	cmp	r5, #0
 80186f8:	bf18      	it	ne
 80186fa:	2400      	movne	r4, #0
 80186fc:	e740      	b.n	8018580 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW916blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x254>
 80186fe:	4b04      	ldr	r3, [pc, #16]	@ (8018710 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW916blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x3e4>)
 8018700:	6818      	ldr	r0, [r3, #0]
 8018702:	6803      	ldr	r3, [r0, #0]
 8018704:	6adb      	ldr	r3, [r3, #44]	@ 0x2c
 8018706:	4798      	blx	r3
 8018708:	b01d      	add	sp, #116	@ 0x74
 801870a:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 801870e:	bf00      	nop
 8018710:	20002dbc 	.word	0x20002dbc

08018714 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB888EPKhS3_RKNS_4RectES6_h>:
 8018714:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8018718:	b09f      	sub	sp, #124	@ 0x7c
 801871a:	e9cd 1213 	strd	r1, r2, [sp, #76]	@ 0x4c
 801871e:	f89d 20a4 	ldrb.w	r2, [sp, #164]	@ 0xa4
 8018722:	920a      	str	r2, [sp, #40]	@ 0x28
 8018724:	461d      	mov	r5, r3
 8018726:	4604      	mov	r4, r0
 8018728:	9b28      	ldr	r3, [sp, #160]	@ 0xa0
 801872a:	2a00      	cmp	r2, #0
 801872c:	f000 81fa 	beq.w	8018b24 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x410>
 8018730:	6828      	ldr	r0, [r5, #0]
 8018732:	6869      	ldr	r1, [r5, #4]
 8018734:	aa1a      	add	r2, sp, #104	@ 0x68
 8018736:	c203      	stmia	r2!, {r0, r1}
 8018738:	6818      	ldr	r0, [r3, #0]
 801873a:	6859      	ldr	r1, [r3, #4]
 801873c:	aa1c      	add	r2, sp, #112	@ 0x70
 801873e:	c203      	stmia	r2!, {r0, r1}
 8018740:	a81a      	add	r0, sp, #104	@ 0x68
 8018742:	f7f7 ff11 	bl	8010568 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectE>
 8018746:	4629      	mov	r1, r5
 8018748:	a81c      	add	r0, sp, #112	@ 0x70
 801874a:	f7f7 ff35 	bl	80105b8 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectERKS1_>
 801874e:	f9bd 306c 	ldrsh.w	r3, [sp, #108]	@ 0x6c
 8018752:	f9bd 606e 	ldrsh.w	r6, [sp, #110]	@ 0x6e
 8018756:	f9bd 7076 	ldrsh.w	r7, [sp, #118]	@ 0x76
 801875a:	f5b3 6f80 	cmp.w	r3, #1024	@ 0x400
 801875e:	bfd7      	itett	le
 8018760:	b29a      	uxthle	r2, r3
 8018762:	2201      	movgt	r2, #1
 8018764:	f44f 6180 	movle.w	r1, #1024	@ 0x400
 8018768:	fb91 f2f2 	sdivle	r2, r1, r2
 801876c:	9201      	str	r2, [sp, #4]
 801876e:	9801      	ldr	r0, [sp, #4]
 8018770:	f9bd 2072 	ldrsh.w	r2, [sp, #114]	@ 0x72
 8018774:	fb92 f0f0 	sdiv	r0, r2, r0
 8018778:	b280      	uxth	r0, r0
 801877a:	9010      	str	r0, [sp, #64]	@ 0x40
 801877c:	9901      	ldr	r1, [sp, #4]
 801877e:	9801      	ldr	r0, [sp, #4]
 8018780:	9d10      	ldr	r5, [sp, #64]	@ 0x40
 8018782:	440e      	add	r6, r1
 8018784:	fb05 2510 	mls	r5, r5, r0, r2
 8018788:	fb15 f503 	smulbb	r5, r5, r3
 801878c:	3e01      	subs	r6, #1
 801878e:	f8bd 3068 	ldrh.w	r3, [sp, #104]	@ 0x68
 8018792:	fb96 f6f1 	sdiv	r6, r6, r1
 8018796:	f8bd 1070 	ldrh.w	r1, [sp, #112]	@ 0x70
 801879a:	440d      	add	r5, r1
 801879c:	4419      	add	r1, r3
 801879e:	f8bd 306a 	ldrh.w	r3, [sp, #106]	@ 0x6a
 80187a2:	f8ad 1070 	strh.w	r1, [sp, #112]	@ 0x70
 80187a6:	441a      	add	r2, r3
 80187a8:	f9bd 3074 	ldrsh.w	r3, [sp, #116]	@ 0x74
 80187ac:	9304      	str	r3, [sp, #16]
 80187ae:	4b96      	ldr	r3, [pc, #600]	@ (8018a08 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x2f4>)
 80187b0:	f8ad 2072 	strh.w	r2, [sp, #114]	@ 0x72
 80187b4:	6818      	ldr	r0, [r3, #0]
 80187b6:	6803      	ldr	r3, [r0, #0]
 80187b8:	6a9b      	ldr	r3, [r3, #40]	@ 0x28
 80187ba:	4798      	blx	r3
 80187bc:	4b93      	ldr	r3, [pc, #588]	@ (8018a0c <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x2f8>)
 80187be:	f9bd 1072 	ldrsh.w	r1, [sp, #114]	@ 0x72
 80187c2:	881a      	ldrh	r2, [r3, #0]
 80187c4:	f9bd c070 	ldrsh.w	ip, [sp, #112]	@ 0x70
 80187c8:	9318      	str	r3, [sp, #96]	@ 0x60
 80187ca:	fb02 c101 	mla	r1, r2, r1, ip
 80187ce:	eb00 0b41 	add.w	fp, r0, r1, lsl #1
 80187d2:	4357      	muls	r7, r2
 80187d4:	eb0b 0247 	add.w	r2, fp, r7, lsl #1
 80187d8:	3601      	adds	r6, #1
 80187da:	920b      	str	r2, [sp, #44]	@ 0x2c
 80187dc:	9a14      	ldr	r2, [sp, #80]	@ 0x50
 80187de:	4b8c      	ldr	r3, [pc, #560]	@ (8018a10 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x2fc>)
 80187e0:	b2b6      	uxth	r6, r6
 80187e2:	eb02 0686 	add.w	r6, r2, r6, lsl #2
 80187e6:	1d32      	adds	r2, r6, #4
 80187e8:	9206      	str	r2, [sp, #24]
 80187ea:	9a0a      	ldr	r2, [sp, #40]	@ 0x28
 80187ec:	43d2      	mvns	r2, r2
 80187ee:	b2d2      	uxtb	r2, r2
 80187f0:	b2ad      	uxth	r5, r5
 80187f2:	9215      	str	r2, [sp, #84]	@ 0x54
 80187f4:	9a04      	ldr	r2, [sp, #16]
 80187f6:	2d00      	cmp	r5, #0
 80187f8:	bf0c      	ite	eq
 80187fa:	4611      	moveq	r1, r2
 80187fc:	2100      	movne	r1, #0
 80187fe:	2200      	movs	r2, #0
 8018800:	1b1b      	subs	r3, r3, r4
 8018802:	b289      	uxth	r1, r1
 8018804:	920d      	str	r2, [sp, #52]	@ 0x34
 8018806:	9319      	str	r3, [sp, #100]	@ 0x64
 8018808:	9a10      	ldr	r2, [sp, #64]	@ 0x40
 801880a:	9b0d      	ldr	r3, [sp, #52]	@ 0x34
 801880c:	fa12 f383 	uxtah	r3, r2, r3
 8018810:	9a14      	ldr	r2, [sp, #80]	@ 0x50
 8018812:	eb02 0383 	add.w	r3, r2, r3, lsl #2
 8018816:	3304      	adds	r3, #4
 8018818:	9307      	str	r3, [sp, #28]
 801881a:	9b0b      	ldr	r3, [sp, #44]	@ 0x2c
 801881c:	455b      	cmp	r3, fp
 801881e:	f240 817c 	bls.w	8018b1a <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x406>
 8018822:	9a01      	ldr	r2, [sp, #4]
 8018824:	f8bd 306c 	ldrh.w	r3, [sp, #108]	@ 0x6c
 8018828:	fbb5 f3f3 	udiv	r3, r5, r3
 801882c:	1ad3      	subs	r3, r2, r3
 801882e:	b29b      	uxth	r3, r3
 8018830:	9316      	str	r3, [sp, #88]	@ 0x58
 8018832:	9b07      	ldr	r3, [sp, #28]
 8018834:	9807      	ldr	r0, [sp, #28]
 8018836:	785a      	ldrb	r2, [r3, #1]
 8018838:	789b      	ldrb	r3, [r3, #2]
 801883a:	7800      	ldrb	r0, [r0, #0]
 801883c:	9011      	str	r0, [sp, #68]	@ 0x44
 801883e:	021b      	lsls	r3, r3, #8
 8018840:	ea43 4302 	orr.w	r3, r3, r2, lsl #16
 8018844:	9a07      	ldr	r2, [sp, #28]
 8018846:	78d2      	ldrb	r2, [r2, #3]
 8018848:	4313      	orrs	r3, r2
 801884a:	9a13      	ldr	r2, [sp, #76]	@ 0x4c
 801884c:	3001      	adds	r0, #1
 801884e:	441a      	add	r2, r3
 8018850:	9005      	str	r0, [sp, #20]
 8018852:	1c50      	adds	r0, r2, #1
 8018854:	9003      	str	r0, [sp, #12]
 8018856:	7852      	ldrb	r2, [r2, #1]
 8018858:	9813      	ldr	r0, [sp, #76]	@ 0x4c
 801885a:	0212      	lsls	r2, r2, #8
 801885c:	5cc3      	ldrb	r3, [r0, r3]
 801885e:	f402 72ff 	and.w	r2, r2, #510	@ 0x1fe
 8018862:	431a      	orrs	r2, r3
 8018864:	b293      	uxth	r3, r2
 8018866:	930c      	str	r3, [sp, #48]	@ 0x30
 8018868:	2300      	movs	r3, #0
 801886a:	f884 2804 	strb.w	r2, [r4, #2052]	@ 0x804
 801886e:	9308      	str	r3, [sp, #32]
 8018870:	461a      	mov	r2, r3
 8018872:	f8bd 3028 	ldrh.w	r3, [sp, #40]	@ 0x28
 8018876:	930e      	str	r3, [sp, #56]	@ 0x38
 8018878:	f04f 0801 	mov.w	r8, #1
 801887c:	f8bd 3054 	ldrh.w	r3, [sp, #84]	@ 0x54
 8018880:	f8cd 8008 	str.w	r8, [sp, #8]
 8018884:	46c4      	mov	ip, r8
 8018886:	930f      	str	r3, [sp, #60]	@ 0x3c
 8018888:	2d00      	cmp	r5, #0
 801888a:	d07c      	beq.n	8018986 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x272>
 801888c:	45ac      	cmp	ip, r5
 801888e:	d26c      	bcs.n	801896a <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x256>
 8018890:	9b0b      	ldr	r3, [sp, #44]	@ 0x2c
 8018892:	eba5 050c 	sub.w	r5, r5, ip
 8018896:	455b      	cmp	r3, fp
 8018898:	b2ad      	uxth	r5, r5
 801889a:	4608      	mov	r0, r1
 801889c:	d802      	bhi.n	80188a4 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x190>
 801889e:	e070      	b.n	8018982 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x26e>
 80188a0:	2b00      	cmp	r3, #0
 80188a2:	d15c      	bne.n	801895e <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x24a>
 80188a4:	9b03      	ldr	r3, [sp, #12]
 80188a6:	9a02      	ldr	r2, [sp, #8]
 80188a8:	785b      	ldrb	r3, [r3, #1]
 80188aa:	9902      	ldr	r1, [sp, #8]
 80188ac:	f1c2 0207 	rsb	r2, r2, #7
 80188b0:	4093      	lsls	r3, r2
 80188b2:	005b      	lsls	r3, r3, #1
 80188b4:	f403 72ff 	and.w	r2, r3, #510	@ 0x1fe
 80188b8:	9b03      	ldr	r3, [sp, #12]
 80188ba:	781b      	ldrb	r3, [r3, #0]
 80188bc:	410b      	asrs	r3, r1
 80188be:	3101      	adds	r1, #1
 80188c0:	b2c9      	uxtb	r1, r1
 80188c2:	2908      	cmp	r1, #8
 80188c4:	9102      	str	r1, [sp, #8]
 80188c6:	9903      	ldr	r1, [sp, #12]
 80188c8:	bf0a      	itet	eq
 80188ca:	3102      	addeq	r1, #2
 80188cc:	3101      	addne	r1, #1
 80188ce:	9103      	streq	r1, [sp, #12]
 80188d0:	b2db      	uxtb	r3, r3
 80188d2:	bf0a      	itet	eq
 80188d4:	2100      	moveq	r1, #0
 80188d6:	9103      	strne	r1, [sp, #12]
 80188d8:	9102      	streq	r1, [sp, #8]
 80188da:	4313      	orrs	r3, r2
 80188dc:	9911      	ldr	r1, [sp, #68]	@ 0x44
 80188de:	b29a      	uxth	r2, r3
 80188e0:	4291      	cmp	r1, r2
 80188e2:	d30a      	bcc.n	80188fa <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x1e6>
 80188e4:	f884 3804 	strb.w	r3, [r4, #2052]	@ 0x804
 80188e8:	2301      	movs	r3, #1
 80188ea:	9905      	ldr	r1, [sp, #20]
 80188ec:	f5b1 7f00 	cmp.w	r1, #512	@ 0x200
 80188f0:	d30f      	bcc.n	8018912 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x1fe>
 80188f2:	2100      	movs	r1, #0
 80188f4:	4698      	mov	r8, r3
 80188f6:	9100      	str	r1, [sp, #0]
 80188f8:	e032      	b.n	8018960 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x24c>
 80188fa:	9b05      	ldr	r3, [sp, #20]
 80188fc:	429a      	cmp	r2, r3
 80188fe:	d318      	bcc.n	8018932 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x21e>
 8018900:	eb04 0308 	add.w	r3, r4, r8
 8018904:	f894 1804 	ldrb.w	r1, [r4, #2052]	@ 0x804
 8018908:	f883 1804 	strb.w	r1, [r3, #2052]	@ 0x804
 801890c:	f108 0301 	add.w	r3, r8, #1
 8018910:	b29b      	uxth	r3, r3
 8018912:	9905      	ldr	r1, [sp, #20]
 8018914:	f894 6804 	ldrb.w	r6, [r4, #2052]	@ 0x804
 8018918:	eb04 0181 	add.w	r1, r4, r1, lsl #2
 801891c:	710e      	strb	r6, [r1, #4]
 801891e:	9e0c      	ldr	r6, [sp, #48]	@ 0x30
 8018920:	80ce      	strh	r6, [r1, #6]
 8018922:	f108 0601 	add.w	r6, r8, #1
 8018926:	714e      	strb	r6, [r1, #5]
 8018928:	9905      	ldr	r1, [sp, #20]
 801892a:	3101      	adds	r1, #1
 801892c:	b289      	uxth	r1, r1
 801892e:	9105      	str	r1, [sp, #20]
 8018930:	e7df      	b.n	80188f2 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x1de>
 8018932:	eb04 0382 	add.w	r3, r4, r2, lsl #2
 8018936:	4611      	mov	r1, r2
 8018938:	795b      	ldrb	r3, [r3, #5]
 801893a:	f603 0604 	addw	r6, r3, #2052	@ 0x804
 801893e:	4426      	add	r6, r4
 8018940:	9f19      	ldr	r7, [sp, #100]	@ 0x64
 8018942:	4437      	add	r7, r6
 8018944:	2f00      	cmp	r7, #0
 8018946:	dd06      	ble.n	8018956 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x242>
 8018948:	eb04 0181 	add.w	r1, r4, r1, lsl #2
 801894c:	790f      	ldrb	r7, [r1, #4]
 801894e:	f806 7d01 	strb.w	r7, [r6, #-1]!
 8018952:	88c9      	ldrh	r1, [r1, #6]
 8018954:	e7f4      	b.n	8018940 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x22c>
 8018956:	f884 1804 	strb.w	r1, [r4, #2052]	@ 0x804
 801895a:	b29b      	uxth	r3, r3
 801895c:	e7c5      	b.n	80188ea <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x1d6>
 801895e:	9a0c      	ldr	r2, [sp, #48]	@ 0x30
 8018960:	920c      	str	r2, [sp, #48]	@ 0x30
 8018962:	4601      	mov	r1, r0
 8018964:	9a00      	ldr	r2, [sp, #0]
 8018966:	469c      	mov	ip, r3
 8018968:	e78e      	b.n	8018888 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x174>
 801896a:	1957      	adds	r7, r2, r5
 801896c:	ebac 0305 	sub.w	r3, ip, r5
 8018970:	b2ba      	uxth	r2, r7
 8018972:	f8bd 0010 	ldrh.w	r0, [sp, #16]
 8018976:	9200      	str	r2, [sp, #0]
 8018978:	b29b      	uxth	r3, r3
 801897a:	2500      	movs	r5, #0
 801897c:	9a0b      	ldr	r2, [sp, #44]	@ 0x2c
 801897e:	455a      	cmp	r2, fp
 8018980:	d88e      	bhi.n	80188a0 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x18c>
 8018982:	4601      	mov	r1, r0
 8018984:	e749      	b.n	801881a <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x106>
 8018986:	458c      	cmp	ip, r1
 8018988:	bf2c      	ite	cs
 801898a:	4628      	movcs	r0, r5
 801898c:	462b      	movcc	r3, r5
 801898e:	9d0a      	ldr	r5, [sp, #40]	@ 0x28
 8018990:	bf27      	ittee	cs
 8018992:	9109      	strcs	r1, [sp, #36]	@ 0x24
 8018994:	ebac 0301 	subcs.w	r3, ip, r1
 8018998:	eba1 000c 	subcc.w	r0, r1, ip
 801899c:	f8cd c024 	strcc.w	ip, [sp, #36]	@ 0x24
 80189a0:	bf2c      	ite	cs
 80189a2:	b29b      	uxthcs	r3, r3
 80189a4:	b280      	uxthcc	r0, r0
 80189a6:	2dff      	cmp	r5, #255	@ 0xff
 80189a8:	9d09      	ldr	r5, [sp, #36]	@ 0x24
 80189aa:	eb02 0705 	add.w	r7, r2, r5
 80189ae:	b2bd      	uxth	r5, r7
 80189b0:	9500      	str	r5, [sp, #0]
 80189b2:	d12f      	bne.n	8018a14 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x300>
 80189b4:	465e      	mov	r6, fp
 80189b6:	9d00      	ldr	r5, [sp, #0]
 80189b8:	42aa      	cmp	r2, r5
 80189ba:	f040 8084 	bne.w	8018ac6 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x3b2>
 80189be:	9a09      	ldr	r2, [sp, #36]	@ 0x24
 80189c0:	458c      	cmp	ip, r1
 80189c2:	eb0b 0b42 	add.w	fp, fp, r2, lsl #1
 80189c6:	d3d8      	bcc.n	801897a <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x266>
 80189c8:	9a18      	ldr	r2, [sp, #96]	@ 0x60
 80189ca:	9904      	ldr	r1, [sp, #16]
 80189cc:	8812      	ldrh	r2, [r2, #0]
 80189ce:	1a52      	subs	r2, r2, r1
 80189d0:	eb0b 0b42 	add.w	fp, fp, r2, lsl #1
 80189d4:	9a08      	ldr	r2, [sp, #32]
 80189d6:	9916      	ldr	r1, [sp, #88]	@ 0x58
 80189d8:	3201      	adds	r2, #1
 80189da:	428a      	cmp	r2, r1
 80189dc:	9208      	str	r2, [sp, #32]
 80189de:	f040 8092 	bne.w	8018b06 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x3f2>
 80189e2:	f8bd 5070 	ldrh.w	r5, [sp, #112]	@ 0x70
 80189e6:	f8bd c068 	ldrh.w	ip, [sp, #104]	@ 0x68
 80189ea:	9b04      	ldr	r3, [sp, #16]
 80189ec:	eba5 050c 	sub.w	r5, r5, ip
 80189f0:	b2ad      	uxth	r5, r5
 80189f2:	2d00      	cmp	r5, #0
 80189f4:	bf08      	it	eq
 80189f6:	4619      	moveq	r1, r3
 80189f8:	9b0d      	ldr	r3, [sp, #52]	@ 0x34
 80189fa:	bf18      	it	ne
 80189fc:	2100      	movne	r1, #0
 80189fe:	3301      	adds	r3, #1
 8018a00:	930d      	str	r3, [sp, #52]	@ 0x34
 8018a02:	b289      	uxth	r1, r1
 8018a04:	e700      	b.n	8018808 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0xf4>
 8018a06:	bf00      	nop
 8018a08:	20002dbc 	.word	0x20002dbc
 8018a0c:	20002db6 	.word	0x20002db6
 8018a10:	fffff7fb 	.word	0xfffff7fb
 8018a14:	46d9      	mov	r9, fp
 8018a16:	9d00      	ldr	r5, [sp, #0]
 8018a18:	42aa      	cmp	r2, r5
 8018a1a:	d0d0      	beq.n	80189be <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x2aa>
 8018a1c:	1c55      	adds	r5, r2, #1
 8018a1e:	4422      	add	r2, r4
 8018a20:	9517      	str	r5, [sp, #92]	@ 0x5c
 8018a22:	f892 e804 	ldrb.w	lr, [r2, #2052]	@ 0x804
 8018a26:	9a06      	ldr	r2, [sp, #24]
 8018a28:	eb0e 0e4e 	add.w	lr, lr, lr, lsl #1
 8018a2c:	4472      	add	r2, lr
 8018a2e:	9212      	str	r2, [sp, #72]	@ 0x48
 8018a30:	9f12      	ldr	r7, [sp, #72]	@ 0x48
 8018a32:	f8b9 2000 	ldrh.w	r2, [r9]
 8018a36:	f897 a002 	ldrb.w	sl, [r7, #2]
 8018a3a:	9f0e      	ldr	r7, [sp, #56]	@ 0x38
 8018a3c:	1216      	asrs	r6, r2, #8
 8018a3e:	fb1a fa07 	smulbb	sl, sl, r7
 8018a42:	f006 06f8 	and.w	r6, r6, #248	@ 0xf8
 8018a46:	9f0f      	ldr	r7, [sp, #60]	@ 0x3c
 8018a48:	ea46 1656 	orr.w	r6, r6, r6, lsr #5
 8018a4c:	fb06 a607 	mla	r6, r6, r7, sl
 8018a50:	9f12      	ldr	r7, [sp, #72]	@ 0x48
 8018a52:	f897 a001 	ldrb.w	sl, [r7, #1]
 8018a56:	9f0e      	ldr	r7, [sp, #56]	@ 0x38
 8018a58:	10d5      	asrs	r5, r2, #3
 8018a5a:	fb1a fa07 	smulbb	sl, sl, r7
 8018a5e:	f005 05fc 	and.w	r5, r5, #252	@ 0xfc
 8018a62:	9f0f      	ldr	r7, [sp, #60]	@ 0x3c
 8018a64:	ea45 1595 	orr.w	r5, r5, r5, lsr #6
 8018a68:	fb05 a507 	mla	r5, r5, r7, sl
 8018a6c:	9f06      	ldr	r7, [sp, #24]
 8018a6e:	f817 e00e 	ldrb.w	lr, [r7, lr]
 8018a72:	9f0e      	ldr	r7, [sp, #56]	@ 0x38
 8018a74:	00d2      	lsls	r2, r2, #3
 8018a76:	fb1e fe07 	smulbb	lr, lr, r7
 8018a7a:	b2d2      	uxtb	r2, r2
 8018a7c:	9f0f      	ldr	r7, [sp, #60]	@ 0x3c
 8018a7e:	ea42 1252 	orr.w	r2, r2, r2, lsr #5
 8018a82:	b2b6      	uxth	r6, r6
 8018a84:	fb02 e207 	mla	r2, r2, r7, lr
 8018a88:	b292      	uxth	r2, r2
 8018a8a:	b2ad      	uxth	r5, r5
 8018a8c:	f106 0a01 	add.w	sl, r6, #1
 8018a90:	eb0a 2616 	add.w	r6, sl, r6, lsr #8
 8018a94:	f102 0e01 	add.w	lr, r2, #1
 8018a98:	f105 0a01 	add.w	sl, r5, #1
 8018a9c:	eb0e 2e12 	add.w	lr, lr, r2, lsr #8
 8018aa0:	eb0a 2a15 	add.w	sl, sl, r5, lsr #8
 8018aa4:	f406 4678 	and.w	r6, r6, #63488	@ 0xf800
 8018aa8:	f3ce 2ec4 	ubfx	lr, lr, #11, #5
 8018aac:	ea4f 1a5a 	mov.w	sl, sl, lsr #5
 8018ab0:	ea4e 0606 	orr.w	r6, lr, r6
 8018ab4:	f40a 6afc 	and.w	sl, sl, #2016	@ 0x7e0
 8018ab8:	ea46 060a 	orr.w	r6, r6, sl
 8018abc:	f829 6b02 	strh.w	r6, [r9], #2
 8018ac0:	f8bd 205c 	ldrh.w	r2, [sp, #92]	@ 0x5c
 8018ac4:	e7a7      	b.n	8018a16 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x302>
 8018ac6:	f102 0e01 	add.w	lr, r2, #1
 8018aca:	4422      	add	r2, r4
 8018acc:	9f06      	ldr	r7, [sp, #24]
 8018ace:	f892 5804 	ldrb.w	r5, [r2, #2052]	@ 0x804
 8018ad2:	9a06      	ldr	r2, [sp, #24]
 8018ad4:	eb05 0545 	add.w	r5, r5, r5, lsl #1
 8018ad8:	eb02 0a05 	add.w	sl, r2, r5
 8018adc:	4a13      	ldr	r2, [pc, #76]	@ (8018b2c <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x418>)
 8018ade:	f89a 9002 	ldrb.w	r9, [sl, #2]
 8018ae2:	ea02 2909 	and.w	r9, r2, r9, lsl #8
 8018ae6:	f89a 2001 	ldrb.w	r2, [sl, #1]
 8018aea:	00d2      	lsls	r2, r2, #3
 8018aec:	f402 62fc 	and.w	r2, r2, #2016	@ 0x7e0
 8018af0:	ea49 0202 	orr.w	r2, r9, r2
 8018af4:	f817 9005 	ldrb.w	r9, [r7, r5]
 8018af8:	ea42 02d9 	orr.w	r2, r2, r9, lsr #3
 8018afc:	f826 2b02 	strh.w	r2, [r6], #2
 8018b00:	fa1f f28e 	uxth.w	r2, lr
 8018b04:	e757      	b.n	80189b6 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x2a2>
 8018b06:	f8bd 0010 	ldrh.w	r0, [sp, #16]
 8018b0a:	f8bd 506c 	ldrh.w	r5, [sp, #108]	@ 0x6c
 8018b0e:	1a2d      	subs	r5, r5, r0
 8018b10:	b2ad      	uxth	r5, r5
 8018b12:	2d00      	cmp	r5, #0
 8018b14:	bf18      	it	ne
 8018b16:	2000      	movne	r0, #0
 8018b18:	e730      	b.n	801897c <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x268>
 8018b1a:	4b05      	ldr	r3, [pc, #20]	@ (8018b30 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x41c>)
 8018b1c:	6818      	ldr	r0, [r3, #0]
 8018b1e:	6803      	ldr	r3, [r0, #0]
 8018b20:	6adb      	ldr	r3, [r3, #44]	@ 0x2c
 8018b22:	4798      	blx	r3
 8018b24:	b01f      	add	sp, #124	@ 0x7c
 8018b26:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 8018b2a:	bf00      	nop
 8018b2c:	fffff800 	.word	0xfffff800
 8018b30:	20002dbc 	.word	0x20002dbc

08018b34 <_ZN8touchgfx8LCD16bpp29copyFrameBufferRegionToMemoryERKNS_4RectES3_Phss>:
 8018b34:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8018b38:	b091      	sub	sp, #68	@ 0x44
 8018b3a:	469b      	mov	fp, r3
 8018b3c:	f10d 0828 	add.w	r8, sp, #40	@ 0x28
 8018b40:	4616      	mov	r6, r2
 8018b42:	f9bd 906c 	ldrsh.w	r9, [sp, #108]	@ 0x6c
 8018b46:	f9b3 2000 	ldrsh.w	r2, [r3]
 8018b4a:	f9bd 7070 	ldrsh.w	r7, [sp, #112]	@ 0x70
 8018b4e:	f9b3 3002 	ldrsh.w	r3, [r3, #2]
 8018b52:	f8ad 2028 	strh.w	r2, [sp, #40]	@ 0x28
 8018b56:	4604      	mov	r4, r0
 8018b58:	460d      	mov	r5, r1
 8018b5a:	4640      	mov	r0, r8
 8018b5c:	4659      	mov	r1, fp
 8018b5e:	f8ad 302a 	strh.w	r3, [sp, #42]	@ 0x2a
 8018b62:	f8ad 902c 	strh.w	r9, [sp, #44]	@ 0x2c
 8018b66:	f8ad 702e 	strh.w	r7, [sp, #46]	@ 0x2e
 8018b6a:	f7f4 fc0d 	bl	800d388 <_ZN8touchgfx4RectaNERKS0_>
 8018b6e:	4631      	mov	r1, r6
 8018b70:	4640      	mov	r0, r8
 8018b72:	f7f4 fc09 	bl	800d388 <_ZN8touchgfx4RectaNERKS0_>
 8018b76:	4b74      	ldr	r3, [pc, #464]	@ (8018d48 <_ZN8touchgfx8LCD16bpp29copyFrameBufferRegionToMemoryERKNS_4RectES3_Phss+0x214>)
 8018b78:	8818      	ldrh	r0, [r3, #0]
 8018b7a:	4b74      	ldr	r3, [pc, #464]	@ (8018d4c <_ZN8touchgfx8LCD16bpp29copyFrameBufferRegionToMemoryERKNS_4RectES3_Phss+0x218>)
 8018b7c:	8819      	ldrh	r1, [r3, #0]
 8018b7e:	f9bd 3028 	ldrsh.w	r3, [sp, #40]	@ 0x28
 8018b82:	2b00      	cmp	r3, #0
 8018b84:	b202      	sxth	r2, r0
 8018b86:	b20e      	sxth	r6, r1
 8018b88:	da07      	bge.n	8018b9a <_ZN8touchgfx8LCD16bpp29copyFrameBufferRegionToMemoryERKNS_4RectES3_Phss+0x66>
 8018b8a:	f8bd c02c 	ldrh.w	ip, [sp, #44]	@ 0x2c
 8018b8e:	4463      	add	r3, ip
 8018b90:	f8ad 302c 	strh.w	r3, [sp, #44]	@ 0x2c
 8018b94:	2300      	movs	r3, #0
 8018b96:	f8ad 3028 	strh.w	r3, [sp, #40]	@ 0x28
 8018b9a:	f9bd 3028 	ldrsh.w	r3, [sp, #40]	@ 0x28
 8018b9e:	f9bd c02c 	ldrsh.w	ip, [sp, #44]	@ 0x2c
 8018ba2:	1ad2      	subs	r2, r2, r3
 8018ba4:	4594      	cmp	ip, r2
 8018ba6:	bfc4      	itt	gt
 8018ba8:	1ac2      	subgt	r2, r0, r3
 8018baa:	f8ad 202c 	strhgt.w	r2, [sp, #44]	@ 0x2c
 8018bae:	f9bd 202a 	ldrsh.w	r2, [sp, #42]	@ 0x2a
 8018bb2:	2a00      	cmp	r2, #0
 8018bb4:	da07      	bge.n	8018bc6 <_ZN8touchgfx8LCD16bpp29copyFrameBufferRegionToMemoryERKNS_4RectES3_Phss+0x92>
 8018bb6:	f8bd c02e 	ldrh.w	ip, [sp, #46]	@ 0x2e
 8018bba:	4462      	add	r2, ip
 8018bbc:	f8ad 202e 	strh.w	r2, [sp, #46]	@ 0x2e
 8018bc0:	2200      	movs	r2, #0
 8018bc2:	f8ad 202a 	strh.w	r2, [sp, #42]	@ 0x2a
 8018bc6:	f9bd a02a 	ldrsh.w	sl, [sp, #42]	@ 0x2a
 8018bca:	f9bd 202e 	ldrsh.w	r2, [sp, #46]	@ 0x2e
 8018bce:	eba6 060a 	sub.w	r6, r6, sl
 8018bd2:	42b2      	cmp	r2, r6
 8018bd4:	bfc4      	itt	gt
 8018bd6:	eba1 020a 	subgt.w	r2, r1, sl
 8018bda:	f8ad 202e 	strhgt.w	r2, [sp, #46]	@ 0x2e
 8018bde:	4a5c      	ldr	r2, [pc, #368]	@ (8018d50 <_ZN8touchgfx8LCD16bpp29copyFrameBufferRegionToMemoryERKNS_4RectES3_Phss+0x21c>)
 8018be0:	7812      	ldrb	r2, [r2, #0]
 8018be2:	b9a2      	cbnz	r2, 8018c0e <_ZN8touchgfx8LCD16bpp29copyFrameBufferRegionToMemoryERKNS_4RectES3_Phss+0xda>
 8018be4:	f9bd 602c 	ldrsh.w	r6, [sp, #44]	@ 0x2c
 8018be8:	4286      	cmp	r6, r0
 8018bea:	4640      	mov	r0, r8
 8018bec:	9303      	str	r3, [sp, #12]
 8018bee:	bf14      	ite	ne
 8018bf0:	2600      	movne	r6, #0
 8018bf2:	2601      	moveq	r6, #1
 8018bf4:	f7f4 fc0b 	bl	800d40e <_ZNK8touchgfx4Rect7isEmptyEv>
 8018bf8:	9b03      	ldr	r3, [sp, #12]
 8018bfa:	b160      	cbz	r0, 8018c16 <_ZN8touchgfx8LCD16bpp29copyFrameBufferRegionToMemoryERKNS_4RectES3_Phss+0xe2>
 8018bfc:	2300      	movs	r3, #0
 8018bfe:	8023      	strh	r3, [r4, #0]
 8018c00:	8063      	strh	r3, [r4, #2]
 8018c02:	80a3      	strh	r3, [r4, #4]
 8018c04:	4620      	mov	r0, r4
 8018c06:	80e3      	strh	r3, [r4, #6]
 8018c08:	b011      	add	sp, #68	@ 0x44
 8018c0a:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 8018c0e:	f9bd 602e 	ldrsh.w	r6, [sp, #46]	@ 0x2e
 8018c12:	428e      	cmp	r6, r1
 8018c14:	e7e9      	b.n	8018bea <_ZN8touchgfx8LCD16bpp29copyFrameBufferRegionToMemoryERKNS_4RectES3_Phss+0xb6>
 8018c16:	f9bd 202c 	ldrsh.w	r2, [sp, #44]	@ 0x2c
 8018c1a:	9205      	str	r2, [sp, #20]
 8018c1c:	f9bd 202e 	ldrsh.w	r2, [sp, #46]	@ 0x2e
 8018c20:	9206      	str	r2, [sp, #24]
 8018c22:	f8bb 2000 	ldrh.w	r2, [fp]
 8018c26:	900e      	str	r0, [sp, #56]	@ 0x38
 8018c28:	1a9b      	subs	r3, r3, r2
 8018c2a:	b21b      	sxth	r3, r3
 8018c2c:	9303      	str	r3, [sp, #12]
 8018c2e:	f8bb 3002 	ldrh.w	r3, [fp, #2]
 8018c32:	f8ad 903c 	strh.w	r9, [sp, #60]	@ 0x3c
 8018c36:	ebaa 0a03 	sub.w	sl, sl, r3
 8018c3a:	fa0f f38a 	sxth.w	r3, sl
 8018c3e:	9304      	str	r3, [sp, #16]
 8018c40:	9b03      	ldr	r3, [sp, #12]
 8018c42:	f8ad 3030 	strh.w	r3, [sp, #48]	@ 0x30
 8018c46:	9b04      	ldr	r3, [sp, #16]
 8018c48:	f8ad 3032 	strh.w	r3, [sp, #50]	@ 0x32
 8018c4c:	9b05      	ldr	r3, [sp, #20]
 8018c4e:	f8ad 3034 	strh.w	r3, [sp, #52]	@ 0x34
 8018c52:	a90e      	add	r1, sp, #56	@ 0x38
 8018c54:	9b06      	ldr	r3, [sp, #24]
 8018c56:	f8ad 3036 	strh.w	r3, [sp, #54]	@ 0x36
 8018c5a:	a80c      	add	r0, sp, #48	@ 0x30
 8018c5c:	f8ad 703e 	strh.w	r7, [sp, #62]	@ 0x3e
 8018c60:	f7f7 fcaa 	bl	80105b8 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectERKS1_>
 8018c64:	4640      	mov	r0, r8
 8018c66:	f7f7 fc7f 	bl	8010568 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectE>
 8018c6a:	a80e      	add	r0, sp, #56	@ 0x38
 8018c6c:	f7f7 fc7c 	bl	8010568 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectE>
 8018c70:	4b38      	ldr	r3, [pc, #224]	@ (8018d54 <_ZN8touchgfx8LCD16bpp29copyFrameBufferRegionToMemoryERKNS_4RectES3_Phss+0x220>)
 8018c72:	f9bd a03c 	ldrsh.w	sl, [sp, #60]	@ 0x3c
 8018c76:	881b      	ldrh	r3, [r3, #0]
 8018c78:	9307      	str	r3, [sp, #28]
 8018c7a:	682b      	ldr	r3, [r5, #0]
 8018c7c:	f8df b0d8 	ldr.w	fp, [pc, #216]	@ 8018d58 <_ZN8touchgfx8LCD16bpp29copyFrameBufferRegionToMemoryERKNS_4RectES3_Phss+0x224>
 8018c80:	6b1b      	ldr	r3, [r3, #48]	@ 0x30
 8018c82:	4628      	mov	r0, r5
 8018c84:	4798      	blx	r3
 8018c86:	f8bd 5032 	ldrh.w	r5, [sp, #50]	@ 0x32
 8018c8a:	f9bd 3030 	ldrsh.w	r3, [sp, #48]	@ 0x30
 8018c8e:	4681      	mov	r9, r0
 8018c90:	fb1a 3305 	smlabb	r3, sl, r5, r3
 8018c94:	f8db 0000 	ldr.w	r0, [fp]
 8018c98:	9d1a      	ldr	r5, [sp, #104]	@ 0x68
 8018c9a:	eb05 0543 	add.w	r5, r5, r3, lsl #1
 8018c9e:	6803      	ldr	r3, [r0, #0]
 8018ca0:	6b1b      	ldr	r3, [r3, #48]	@ 0x30
 8018ca2:	4798      	blx	r3
 8018ca4:	4607      	mov	r7, r0
 8018ca6:	f8db 0000 	ldr.w	r0, [fp]
 8018caa:	f9bd 1028 	ldrsh.w	r1, [sp, #40]	@ 0x28
 8018cae:	6803      	ldr	r3, [r0, #0]
 8018cb0:	f9bd 202a 	ldrsh.w	r2, [sp, #42]	@ 0x2a
 8018cb4:	9109      	str	r1, [sp, #36]	@ 0x24
 8018cb6:	9208      	str	r2, [sp, #32]
 8018cb8:	6b9b      	ldr	r3, [r3, #56]	@ 0x38
 8018cba:	4798      	blx	r3
 8018cbc:	f010 0f01 	tst.w	r0, #1
 8018cc0:	e9dd 2108 	ldrd	r2, r1, [sp, #32]
 8018cc4:	d012      	beq.n	8018cec <_ZN8touchgfx8LCD16bpp29copyFrameBufferRegionToMemoryERKNS_4RectES3_Phss+0x1b8>
 8018cc6:	f8db 0000 	ldr.w	r0, [fp]
 8018cca:	f9bd 2034 	ldrsh.w	r2, [sp, #52]	@ 0x34
 8018cce:	6803      	ldr	r3, [r0, #0]
 8018cd0:	9200      	str	r2, [sp, #0]
 8018cd2:	6ede      	ldr	r6, [r3, #108]	@ 0x6c
 8018cd4:	e898 0006 	ldmia.w	r8, {r1, r2}
 8018cd8:	462b      	mov	r3, r5
 8018cda:	47b0      	blx	r6
 8018cdc:	9b03      	ldr	r3, [sp, #12]
 8018cde:	8023      	strh	r3, [r4, #0]
 8018ce0:	9b04      	ldr	r3, [sp, #16]
 8018ce2:	8063      	strh	r3, [r4, #2]
 8018ce4:	9b05      	ldr	r3, [sp, #20]
 8018ce6:	80a3      	strh	r3, [r4, #4]
 8018ce8:	9b06      	ldr	r3, [sp, #24]
 8018cea:	e78b      	b.n	8018c04 <_ZN8touchgfx8LCD16bpp29copyFrameBufferRegionToMemoryERKNS_4RectES3_Phss+0xd0>
 8018cec:	fb09 f202 	mul.w	r2, r9, r2
 8018cf0:	eb02 0141 	add.w	r1, r2, r1, lsl #1
 8018cf4:	440f      	add	r7, r1
 8018cf6:	f9bd 3036 	ldrsh.w	r3, [sp, #54]	@ 0x36
 8018cfa:	b166      	cbz	r6, 8018d16 <_ZN8touchgfx8LCD16bpp29copyFrameBufferRegionToMemoryERKNS_4RectES3_Phss+0x1e2>
 8018cfc:	9a07      	ldr	r2, [sp, #28]
 8018cfe:	4592      	cmp	sl, r2
 8018d00:	d109      	bne.n	8018d16 <_ZN8touchgfx8LCD16bpp29copyFrameBufferRegionToMemoryERKNS_4RectES3_Phss+0x1e2>
 8018d02:	f8db 0000 	ldr.w	r0, [fp]
 8018d06:	6802      	ldr	r2, [r0, #0]
 8018d08:	fb09 f303 	mul.w	r3, r9, r3
 8018d0c:	6b56      	ldr	r6, [r2, #52]	@ 0x34
 8018d0e:	4629      	mov	r1, r5
 8018d10:	463a      	mov	r2, r7
 8018d12:	47b0      	blx	r6
 8018d14:	e7e2      	b.n	8018cdc <_ZN8touchgfx8LCD16bpp29copyFrameBufferRegionToMemoryERKNS_4RectES3_Phss+0x1a8>
 8018d16:	fb0a f303 	mul.w	r3, sl, r3
 8018d1a:	f8df b03c 	ldr.w	fp, [pc, #60]	@ 8018d58 <_ZN8touchgfx8LCD16bpp29copyFrameBufferRegionToMemoryERKNS_4RectES3_Phss+0x224>
 8018d1e:	eb05 0843 	add.w	r8, r5, r3, lsl #1
 8018d22:	ea4f 064a 	mov.w	r6, sl, lsl #1
 8018d26:	4545      	cmp	r5, r8
 8018d28:	d2d8      	bcs.n	8018cdc <_ZN8touchgfx8LCD16bpp29copyFrameBufferRegionToMemoryERKNS_4RectES3_Phss+0x1a8>
 8018d2a:	f8db 0000 	ldr.w	r0, [fp]
 8018d2e:	f9bd 3034 	ldrsh.w	r3, [sp, #52]	@ 0x34
 8018d32:	6802      	ldr	r2, [r0, #0]
 8018d34:	4629      	mov	r1, r5
 8018d36:	f8d2 a034 	ldr.w	sl, [r2, #52]	@ 0x34
 8018d3a:	005b      	lsls	r3, r3, #1
 8018d3c:	463a      	mov	r2, r7
 8018d3e:	47d0      	blx	sl
 8018d40:	444f      	add	r7, r9
 8018d42:	4435      	add	r5, r6
 8018d44:	e7ef      	b.n	8018d26 <_ZN8touchgfx8LCD16bpp29copyFrameBufferRegionToMemoryERKNS_4RectES3_Phss+0x1f2>
 8018d46:	bf00      	nop
 8018d48:	20002db0 	.word	0x20002db0
 8018d4c:	20002db2 	.word	0x20002db2
 8018d50:	20002db4 	.word	0x20002db4
 8018d54:	20002db6 	.word	0x20002db6
 8018d58:	20002dbc 	.word	0x20002dbc

08018d5c <_ZN8touchgfx8LCD16bpp8fillRectERKNS_4RectENS_9colortypeEh>:
 8018d5c:	b5f0      	push	{r4, r5, r6, r7, lr}
 8018d5e:	4606      	mov	r6, r0
 8018d60:	b087      	sub	sp, #28
 8018d62:	460c      	mov	r4, r1
 8018d64:	4617      	mov	r7, r2
 8018d66:	461d      	mov	r5, r3
 8018d68:	b333      	cbz	r3, 8018db8 <_ZN8touchgfx8LCD16bpp8fillRectERKNS_4RectENS_9colortypeEh+0x5c>
 8018d6a:	4608      	mov	r0, r1
 8018d6c:	f7f4 fb4f 	bl	800d40e <_ZNK8touchgfx4Rect7isEmptyEv>
 8018d70:	bb10      	cbnz	r0, 8018db8 <_ZN8touchgfx8LCD16bpp8fillRectERKNS_4RectENS_9colortypeEh+0x5c>
 8018d72:	6820      	ldr	r0, [r4, #0]
 8018d74:	6861      	ldr	r1, [r4, #4]
 8018d76:	4c1c      	ldr	r4, [pc, #112]	@ (8018de8 <_ZN8touchgfx8LCD16bpp8fillRectERKNS_4RectENS_9colortypeEh+0x8c>)
 8018d78:	ab04      	add	r3, sp, #16
 8018d7a:	c303      	stmia	r3!, {r0, r1}
 8018d7c:	a804      	add	r0, sp, #16
 8018d7e:	f7f7 fbf3 	bl	8010568 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectE>
 8018d82:	6820      	ldr	r0, [r4, #0]
 8018d84:	6803      	ldr	r3, [r0, #0]
 8018d86:	6b9b      	ldr	r3, [r3, #56]	@ 0x38
 8018d88:	4798      	blx	r3
 8018d8a:	2dff      	cmp	r5, #255	@ 0xff
 8018d8c:	d016      	beq.n	8018dbc <_ZN8touchgfx8LCD16bpp8fillRectERKNS_4RectENS_9colortypeEh+0x60>
 8018d8e:	f010 0f08 	tst.w	r0, #8
 8018d92:	6820      	ldr	r0, [r4, #0]
 8018d94:	d015      	beq.n	8018dc2 <_ZN8touchgfx8LCD16bpp8fillRectERKNS_4RectENS_9colortypeEh+0x66>
 8018d96:	2400      	movs	r4, #0
 8018d98:	6801      	ldr	r1, [r0, #0]
 8018d9a:	f8bd 3012 	ldrh.w	r3, [sp, #18]
 8018d9e:	f8bd 2010 	ldrh.w	r2, [sp, #16]
 8018da2:	e9cd 5402 	strd	r5, r4, [sp, #8]
 8018da6:	f8bd 4016 	ldrh.w	r4, [sp, #22]
 8018daa:	9401      	str	r4, [sp, #4]
 8018dac:	f8bd 4014 	ldrh.w	r4, [sp, #20]
 8018db0:	9400      	str	r4, [sp, #0]
 8018db2:	6e0c      	ldr	r4, [r1, #96]	@ 0x60
 8018db4:	4639      	mov	r1, r7
 8018db6:	47a0      	blx	r4
 8018db8:	b007      	add	sp, #28
 8018dba:	bdf0      	pop	{r4, r5, r6, r7, pc}
 8018dbc:	f010 0f02 	tst.w	r0, #2
 8018dc0:	e7e7      	b.n	8018d92 <_ZN8touchgfx8LCD16bpp8fillRectERKNS_4RectENS_9colortypeEh+0x36>
 8018dc2:	6803      	ldr	r3, [r0, #0]
 8018dc4:	6a9b      	ldr	r3, [r3, #40]	@ 0x28
 8018dc6:	4798      	blx	r3
 8018dc8:	4b08      	ldr	r3, [pc, #32]	@ (8018dec <_ZN8touchgfx8LCD16bpp8fillRectERKNS_4RectENS_9colortypeEh+0x90>)
 8018dca:	881a      	ldrh	r2, [r3, #0]
 8018dcc:	6833      	ldr	r3, [r6, #0]
 8018dce:	e9cd 7500 	strd	r7, r5, [sp]
 8018dd2:	4601      	mov	r1, r0
 8018dd4:	6a5d      	ldr	r5, [r3, #36]	@ 0x24
 8018dd6:	4630      	mov	r0, r6
 8018dd8:	ab04      	add	r3, sp, #16
 8018dda:	47a8      	blx	r5
 8018ddc:	6820      	ldr	r0, [r4, #0]
 8018dde:	6803      	ldr	r3, [r0, #0]
 8018de0:	6adb      	ldr	r3, [r3, #44]	@ 0x2c
 8018de2:	4798      	blx	r3
 8018de4:	e7e8      	b.n	8018db8 <_ZN8touchgfx8LCD16bpp8fillRectERKNS_4RectENS_9colortypeEh+0x5c>
 8018de6:	bf00      	nop
 8018de8:	20002dbc 	.word	0x20002dbc
 8018dec:	20002db6 	.word	0x20002db6

08018df0 <_ZN8touchgfx8LCD16bpp10fillBufferEPhtRKNS_4RectENS_9colortypeEh>:
 8018df0:	e92d 47f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
 8018df4:	f89d 7024 	ldrb.w	r7, [sp, #36]	@ 0x24
 8018df8:	9e08      	ldr	r6, [sp, #32]
 8018dfa:	4688      	mov	r8, r1
 8018dfc:	4614      	mov	r4, r2
 8018dfe:	461d      	mov	r5, r3
 8018e00:	2f00      	cmp	r7, #0
 8018e02:	f000 80a9 	beq.w	8018f58 <_ZN8touchgfx8LCD16bpp10fillBufferEPhtRKNS_4RectENS_9colortypeEh+0x168>
 8018e06:	4618      	mov	r0, r3
 8018e08:	f7f4 fb01 	bl	800d40e <_ZNK8touchgfx4Rect7isEmptyEv>
 8018e0c:	2800      	cmp	r0, #0
 8018e0e:	f040 80a3 	bne.w	8018f58 <_ZN8touchgfx8LCD16bpp10fillBufferEPhtRKNS_4RectENS_9colortypeEh+0x168>
 8018e12:	f9b5 1000 	ldrsh.w	r1, [r5]
 8018e16:	f9b5 3002 	ldrsh.w	r3, [r5, #2]
 8018e1a:	f9b5 0004 	ldrsh.w	r0, [r5, #4]
 8018e1e:	f9b5 5006 	ldrsh.w	r5, [r5, #6]
 8018e22:	fb04 1303 	mla	r3, r4, r3, r1
 8018e26:	eb08 0143 	add.w	r1, r8, r3, lsl #1
 8018e2a:	4365      	muls	r5, r4
 8018e2c:	2fff      	cmp	r7, #255	@ 0xff
 8018e2e:	eba4 0200 	sub.w	r2, r4, r0
 8018e32:	eb01 0545 	add.w	r5, r1, r5, lsl #1
 8018e36:	ea4f 2816 	mov.w	r8, r6, lsr #8
 8018e3a:	d04a      	beq.n	8018ed2 <_ZN8touchgfx8LCD16bpp10fillBufferEPhtRKNS_4RectENS_9colortypeEh+0xe2>
 8018e3c:	b2bc      	uxth	r4, r7
 8018e3e:	f1c7 0cff 	rsb	ip, r7, #255	@ 0xff
 8018e42:	f3c6 4e07 	ubfx	lr, r6, #16, #8
 8018e46:	fa5f f788 	uxtb.w	r7, r8
 8018e4a:	b2f3      	uxtb	r3, r6
 8018e4c:	0040      	lsls	r0, r0, #1
 8018e4e:	fb0e fe04 	mul.w	lr, lr, r4
 8018e52:	4367      	muls	r7, r4
 8018e54:	4363      	muls	r3, r4
 8018e56:	ea4f 0842 	mov.w	r8, r2, lsl #1
 8018e5a:	fa1f fc8c 	uxth.w	ip, ip
 8018e5e:	42a9      	cmp	r1, r5
 8018e60:	d27a      	bcs.n	8018f58 <_ZN8touchgfx8LCD16bpp10fillBufferEPhtRKNS_4RectENS_9colortypeEh+0x168>
 8018e62:	eb01 0900 	add.w	r9, r1, r0
 8018e66:	4549      	cmp	r1, r9
 8018e68:	d231      	bcs.n	8018ece <_ZN8touchgfx8LCD16bpp10fillBufferEPhtRKNS_4RectENS_9colortypeEh+0xde>
 8018e6a:	880a      	ldrh	r2, [r1, #0]
 8018e6c:	1214      	asrs	r4, r2, #8
 8018e6e:	10d6      	asrs	r6, r2, #3
 8018e70:	f004 04f8 	and.w	r4, r4, #248	@ 0xf8
 8018e74:	00d2      	lsls	r2, r2, #3
 8018e76:	b2d2      	uxtb	r2, r2
 8018e78:	ea44 1454 	orr.w	r4, r4, r4, lsr #5
 8018e7c:	fb14 f40c 	smulbb	r4, r4, ip
 8018e80:	ea42 1252 	orr.w	r2, r2, r2, lsr #5
 8018e84:	4474      	add	r4, lr
 8018e86:	fb12 f20c 	smulbb	r2, r2, ip
 8018e8a:	b2a4      	uxth	r4, r4
 8018e8c:	f006 06fc 	and.w	r6, r6, #252	@ 0xfc
 8018e90:	441a      	add	r2, r3
 8018e92:	b292      	uxth	r2, r2
 8018e94:	f104 0a01 	add.w	sl, r4, #1
 8018e98:	ea46 1696 	orr.w	r6, r6, r6, lsr #6
 8018e9c:	eb0a 2414 	add.w	r4, sl, r4, lsr #8
 8018ea0:	fb16 f60c 	smulbb	r6, r6, ip
 8018ea4:	f102 0a01 	add.w	sl, r2, #1
 8018ea8:	443e      	add	r6, r7
 8018eaa:	eb0a 2212 	add.w	r2, sl, r2, lsr #8
 8018eae:	b2b6      	uxth	r6, r6
 8018eb0:	f404 4478 	and.w	r4, r4, #63488	@ 0xf800
 8018eb4:	f3c2 22c4 	ubfx	r2, r2, #11, #5
 8018eb8:	4322      	orrs	r2, r4
 8018eba:	1c74      	adds	r4, r6, #1
 8018ebc:	eb04 2616 	add.w	r6, r4, r6, lsr #8
 8018ec0:	0976      	lsrs	r6, r6, #5
 8018ec2:	f406 66fc 	and.w	r6, r6, #2016	@ 0x7e0
 8018ec6:	4332      	orrs	r2, r6
 8018ec8:	f821 2b02 	strh.w	r2, [r1], #2
 8018ecc:	e7cb      	b.n	8018e66 <_ZN8touchgfx8LCD16bpp10fillBufferEPhtRKNS_4RectENS_9colortypeEh+0x76>
 8018ece:	4441      	add	r1, r8
 8018ed0:	e7c5      	b.n	8018e5e <_ZN8touchgfx8LCD16bpp10fillBufferEPhtRKNS_4RectENS_9colortypeEh+0x6e>
 8018ed2:	4f22      	ldr	r7, [pc, #136]	@ (8018f5c <_ZN8touchgfx8LCD16bpp10fillBufferEPhtRKNS_4RectENS_9colortypeEh+0x16c>)
 8018ed4:	0973      	lsrs	r3, r6, #5
 8018ed6:	ea08 0707 	and.w	r7, r8, r7
 8018eda:	f403 63fc 	and.w	r3, r3, #2016	@ 0x7e0
 8018ede:	433b      	orrs	r3, r7
 8018ee0:	f3c6 06c4 	ubfx	r6, r6, #3, #5
 8018ee4:	4333      	orrs	r3, r6
 8018ee6:	07e7      	lsls	r7, r4, #31
 8018ee8:	b29b      	uxth	r3, r3
 8018eea:	d50b      	bpl.n	8018f04 <_ZN8touchgfx8LCD16bpp10fillBufferEPhtRKNS_4RectENS_9colortypeEh+0x114>
 8018eec:	0040      	lsls	r0, r0, #1
 8018eee:	0052      	lsls	r2, r2, #1
 8018ef0:	42a9      	cmp	r1, r5
 8018ef2:	d231      	bcs.n	8018f58 <_ZN8touchgfx8LCD16bpp10fillBufferEPhtRKNS_4RectENS_9colortypeEh+0x168>
 8018ef4:	180c      	adds	r4, r1, r0
 8018ef6:	42a1      	cmp	r1, r4
 8018ef8:	d202      	bcs.n	8018f00 <_ZN8touchgfx8LCD16bpp10fillBufferEPhtRKNS_4RectENS_9colortypeEh+0x110>
 8018efa:	f821 3b02 	strh.w	r3, [r1], #2
 8018efe:	e7fa      	b.n	8018ef6 <_ZN8touchgfx8LCD16bpp10fillBufferEPhtRKNS_4RectENS_9colortypeEh+0x106>
 8018f00:	4411      	add	r1, r2
 8018f02:	e7f5      	b.n	8018ef0 <_ZN8touchgfx8LCD16bpp10fillBufferEPhtRKNS_4RectENS_9colortypeEh+0x100>
 8018f04:	078e      	lsls	r6, r1, #30
 8018f06:	d008      	beq.n	8018f1a <_ZN8touchgfx8LCD16bpp10fillBufferEPhtRKNS_4RectENS_9colortypeEh+0x12a>
 8018f08:	0066      	lsls	r6, r4, #1
 8018f0a:	460a      	mov	r2, r1
 8018f0c:	42aa      	cmp	r2, r5
 8018f0e:	d202      	bcs.n	8018f16 <_ZN8touchgfx8LCD16bpp10fillBufferEPhtRKNS_4RectENS_9colortypeEh+0x126>
 8018f10:	8013      	strh	r3, [r2, #0]
 8018f12:	4432      	add	r2, r6
 8018f14:	e7fa      	b.n	8018f0c <_ZN8touchgfx8LCD16bpp10fillBufferEPhtRKNS_4RectENS_9colortypeEh+0x11c>
 8018f16:	3102      	adds	r1, #2
 8018f18:	3801      	subs	r0, #1
 8018f1a:	07c2      	lsls	r2, r0, #31
 8018f1c:	d50b      	bpl.n	8018f36 <_ZN8touchgfx8LCD16bpp10fillBufferEPhtRKNS_4RectENS_9colortypeEh+0x146>
 8018f1e:	f100 4200 	add.w	r2, r0, #2147483648	@ 0x80000000
 8018f22:	3a01      	subs	r2, #1
 8018f24:	eb01 0242 	add.w	r2, r1, r2, lsl #1
 8018f28:	0066      	lsls	r6, r4, #1
 8018f2a:	42aa      	cmp	r2, r5
 8018f2c:	d202      	bcs.n	8018f34 <_ZN8touchgfx8LCD16bpp10fillBufferEPhtRKNS_4RectENS_9colortypeEh+0x144>
 8018f2e:	8013      	strh	r3, [r2, #0]
 8018f30:	4432      	add	r2, r6
 8018f32:	e7fa      	b.n	8018f2a <_ZN8touchgfx8LCD16bpp10fillBufferEPhtRKNS_4RectENS_9colortypeEh+0x13a>
 8018f34:	3801      	subs	r0, #1
 8018f36:	b178      	cbz	r0, 8018f58 <_ZN8touchgfx8LCD16bpp10fillBufferEPhtRKNS_4RectENS_9colortypeEh+0x168>
 8018f38:	1040      	asrs	r0, r0, #1
 8018f3a:	ea43 4303 	orr.w	r3, r3, r3, lsl #16
 8018f3e:	0080      	lsls	r0, r0, #2
 8018f40:	0064      	lsls	r4, r4, #1
 8018f42:	42a9      	cmp	r1, r5
 8018f44:	d208      	bcs.n	8018f58 <_ZN8touchgfx8LCD16bpp10fillBufferEPhtRKNS_4RectENS_9colortypeEh+0x168>
 8018f46:	180e      	adds	r6, r1, r0
 8018f48:	460a      	mov	r2, r1
 8018f4a:	42b2      	cmp	r2, r6
 8018f4c:	d202      	bcs.n	8018f54 <_ZN8touchgfx8LCD16bpp10fillBufferEPhtRKNS_4RectENS_9colortypeEh+0x164>
 8018f4e:	f842 3b04 	str.w	r3, [r2], #4
 8018f52:	e7fa      	b.n	8018f4a <_ZN8touchgfx8LCD16bpp10fillBufferEPhtRKNS_4RectENS_9colortypeEh+0x15a>
 8018f54:	4421      	add	r1, r4
 8018f56:	e7f4      	b.n	8018f42 <_ZN8touchgfx8LCD16bpp10fillBufferEPhtRKNS_4RectENS_9colortypeEh+0x152>
 8018f58:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
 8018f5c:	00fff800 	.word	0x00fff800

08018f60 <_ZN8touchgfx8LCD16bppC1Ev>:
 8018f60:	2200      	movs	r2, #0
 8018f62:	4912      	ldr	r1, [pc, #72]	@ (8018fac <_ZN8touchgfx8LCD16bppC1Ev+0x4c>)
 8018f64:	6001      	str	r1, [r0, #0]
 8018f66:	e9c0 2201 	strd	r2, r2, [r0, #4]
 8018f6a:	e9c0 2203 	strd	r2, r2, [r0, #12]
 8018f6e:	e9c0 2205 	strd	r2, r2, [r0, #20]
 8018f72:	e9c0 2207 	strd	r2, r2, [r0, #28]
 8018f76:	e9c0 2209 	strd	r2, r2, [r0, #36]	@ 0x24
 8018f7a:	e9c0 220b 	strd	r2, r2, [r0, #44]	@ 0x2c
 8018f7e:	e9c0 220d 	strd	r2, r2, [r0, #52]	@ 0x34
 8018f82:	e9c0 220f 	strd	r2, r2, [r0, #60]	@ 0x3c
 8018f86:	e9c0 2211 	strd	r2, r2, [r0, #68]	@ 0x44
 8018f8a:	e9c0 2213 	strd	r2, r2, [r0, #76]	@ 0x4c
 8018f8e:	e9c0 2215 	strd	r2, r2, [r0, #84]	@ 0x54
 8018f92:	e9c0 2217 	strd	r2, r2, [r0, #92]	@ 0x5c
 8018f96:	e9c0 2219 	strd	r2, r2, [r0, #100]	@ 0x64
 8018f9a:	e9c0 221b 	strd	r2, r2, [r0, #108]	@ 0x6c
 8018f9e:	e9c0 221d 	strd	r2, r2, [r0, #116]	@ 0x74
 8018fa2:	e9c0 221f 	strd	r2, r2, [r0, #124]	@ 0x7c
 8018fa6:	e9c0 2221 	strd	r2, r2, [r0, #132]	@ 0x84
 8018faa:	4770      	bx	lr
 8018fac:	08025800 	.word	0x08025800

08018fb0 <_ZN8touchgfx8LCD16bpp16blitCopyARGB8888EPKmRKNS_4RectES5_h>:
 8018fb0:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8018fb4:	460d      	mov	r5, r1
 8018fb6:	b08d      	sub	sp, #52	@ 0x34
 8018fb8:	4604      	mov	r4, r0
 8018fba:	6808      	ldr	r0, [r1, #0]
 8018fbc:	6849      	ldr	r1, [r1, #4]
 8018fbe:	4699      	mov	r9, r3
 8018fc0:	ab08      	add	r3, sp, #32
 8018fc2:	c303      	stmia	r3!, {r0, r1}
 8018fc4:	6810      	ldr	r0, [r2, #0]
 8018fc6:	6851      	ldr	r1, [r2, #4]
 8018fc8:	ab0a      	add	r3, sp, #40	@ 0x28
 8018fca:	c303      	stmia	r3!, {r0, r1}
 8018fcc:	a808      	add	r0, sp, #32
 8018fce:	f7f7 facb 	bl	8010568 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectE>
 8018fd2:	4629      	mov	r1, r5
 8018fd4:	a80a      	add	r0, sp, #40	@ 0x28
 8018fd6:	f7f7 faef 	bl	80105b8 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectERKS1_>
 8018fda:	f9bd 2028 	ldrsh.w	r2, [sp, #40]	@ 0x28
 8018fde:	f9bd 302a 	ldrsh.w	r3, [sp, #42]	@ 0x2a
 8018fe2:	f8bd 1024 	ldrh.w	r1, [sp, #36]	@ 0x24
 8018fe6:	4d63      	ldr	r5, [pc, #396]	@ (8019174 <_ZN8touchgfx8LCD16bpp16blitCopyARGB8888EPKmRKNS_4RectES5_h+0x1c4>)
 8018fe8:	f9bd 802c 	ldrsh.w	r8, [sp, #44]	@ 0x2c
 8018fec:	6828      	ldr	r0, [r5, #0]
 8018fee:	f9bd 602e 	ldrsh.w	r6, [sp, #46]	@ 0x2e
 8018ff2:	fb11 2103 	smlabb	r1, r1, r3, r2
 8018ff6:	eb04 0481 	add.w	r4, r4, r1, lsl #2
 8018ffa:	f8bd 1020 	ldrh.w	r1, [sp, #32]
 8018ffe:	440a      	add	r2, r1
 8019000:	f8ad 2028 	strh.w	r2, [sp, #40]	@ 0x28
 8019004:	f8bd 2022 	ldrh.w	r2, [sp, #34]	@ 0x22
 8019008:	4413      	add	r3, r2
 801900a:	f8ad 302a 	strh.w	r3, [sp, #42]	@ 0x2a
 801900e:	6803      	ldr	r3, [r0, #0]
 8019010:	6b9b      	ldr	r3, [r3, #56]	@ 0x38
 8019012:	4798      	blx	r3
 8019014:	f1b9 0fff 	cmp.w	r9, #255	@ 0xff
 8019018:	d119      	bne.n	801904e <_ZN8touchgfx8LCD16bpp16blitCopyARGB8888EPKmRKNS_4RectES5_h+0x9e>
 801901a:	f010 0f20 	tst.w	r0, #32
 801901e:	6828      	ldr	r0, [r5, #0]
 8019020:	d018      	beq.n	8019054 <_ZN8touchgfx8LCD16bpp16blitCopyARGB8888EPKmRKNS_4RectES5_h+0xa4>
 8019022:	2500      	movs	r5, #0
 8019024:	6801      	ldr	r1, [r0, #0]
 8019026:	f8bd 302a 	ldrh.w	r3, [sp, #42]	@ 0x2a
 801902a:	f8bd 2028 	ldrh.w	r2, [sp, #40]	@ 0x28
 801902e:	e9cd 9503 	strd	r9, r5, [sp, #12]
 8019032:	f8bd 5024 	ldrh.w	r5, [sp, #36]	@ 0x24
 8019036:	9502      	str	r5, [sp, #8]
 8019038:	b2b6      	uxth	r6, r6
 801903a:	fa1f f588 	uxth.w	r5, r8
 801903e:	9601      	str	r6, [sp, #4]
 8019040:	9500      	str	r5, [sp, #0]
 8019042:	6d0d      	ldr	r5, [r1, #80]	@ 0x50
 8019044:	4621      	mov	r1, r4
 8019046:	47a8      	blx	r5
 8019048:	b00d      	add	sp, #52	@ 0x34
 801904a:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 801904e:	f010 0f40 	tst.w	r0, #64	@ 0x40
 8019052:	e7e4      	b.n	801901e <_ZN8touchgfx8LCD16bpp16blitCopyARGB8888EPKmRKNS_4RectES5_h+0x6e>
 8019054:	6803      	ldr	r3, [r0, #0]
 8019056:	6a9b      	ldr	r3, [r3, #40]	@ 0x28
 8019058:	4798      	blx	r3
 801905a:	4947      	ldr	r1, [pc, #284]	@ (8019178 <_ZN8touchgfx8LCD16bpp16blitCopyARGB8888EPKmRKNS_4RectES5_h+0x1c8>)
 801905c:	f9bd 202a 	ldrsh.w	r2, [sp, #42]	@ 0x2a
 8019060:	880b      	ldrh	r3, [r1, #0]
 8019062:	f9bd 5028 	ldrsh.w	r5, [sp, #40]	@ 0x28
 8019066:	fb03 5202 	mla	r2, r3, r2, r5
 801906a:	eb00 0042 	add.w	r0, r0, r2, lsl #1
 801906e:	4373      	muls	r3, r6
 8019070:	eb00 0343 	add.w	r3, r0, r3, lsl #1
 8019074:	9307      	str	r3, [sp, #28]
 8019076:	ea4f 0348 	mov.w	r3, r8, lsl #1
 801907a:	9306      	str	r3, [sp, #24]
 801907c:	468a      	mov	sl, r1
 801907e:	9b07      	ldr	r3, [sp, #28]
 8019080:	4298      	cmp	r0, r3
 8019082:	d270      	bcs.n	8019166 <_ZN8touchgfx8LCD16bpp16blitCopyARGB8888EPKmRKNS_4RectES5_h+0x1b6>
 8019084:	9b06      	ldr	r3, [sp, #24]
 8019086:	4621      	mov	r1, r4
 8019088:	eb00 0b03 	add.w	fp, r0, r3
 801908c:	4558      	cmp	r0, fp
 801908e:	d25d      	bcs.n	801914c <_ZN8touchgfx8LCD16bpp16blitCopyARGB8888EPKmRKNS_4RectES5_h+0x19c>
 8019090:	f851 4b04 	ldr.w	r4, [r1], #4
 8019094:	0e23      	lsrs	r3, r4, #24
 8019096:	d014      	beq.n	80190c2 <_ZN8touchgfx8LCD16bpp16blitCopyARGB8888EPKmRKNS_4RectES5_h+0x112>
 8019098:	2bff      	cmp	r3, #255	@ 0xff
 801909a:	ea4f 2c14 	mov.w	ip, r4, lsr #8
 801909e:	d112      	bne.n	80190c6 <_ZN8touchgfx8LCD16bpp16blitCopyARGB8888EPKmRKNS_4RectES5_h+0x116>
 80190a0:	f1b9 0fff 	cmp.w	r9, #255	@ 0xff
 80190a4:	d10f      	bne.n	80190c6 <_ZN8touchgfx8LCD16bpp16blitCopyARGB8888EPKmRKNS_4RectES5_h+0x116>
 80190a6:	0963      	lsrs	r3, r4, #5
 80190a8:	f42c 6cff 	bic.w	ip, ip, #2040	@ 0x7f8
 80190ac:	f403 63fc 	and.w	r3, r3, #2016	@ 0x7e0
 80190b0:	f02c 0c07 	bic.w	ip, ip, #7
 80190b4:	ea43 0c0c 	orr.w	ip, r3, ip
 80190b8:	f3c4 04c4 	ubfx	r4, r4, #3, #5
 80190bc:	ea4c 0404 	orr.w	r4, ip, r4
 80190c0:	8004      	strh	r4, [r0, #0]
 80190c2:	3002      	adds	r0, #2
 80190c4:	e7e2      	b.n	801908c <_ZN8touchgfx8LCD16bpp16blitCopyARGB8888EPKmRKNS_4RectES5_h+0xdc>
 80190c6:	fb09 f303 	mul.w	r3, r9, r3
 80190ca:	8807      	ldrh	r7, [r0, #0]
 80190cc:	1c5a      	adds	r2, r3, #1
 80190ce:	eb02 2223 	add.w	r2, r2, r3, asr #8
 80190d2:	1212      	asrs	r2, r2, #8
 80190d4:	123e      	asrs	r6, r7, #8
 80190d6:	b293      	uxth	r3, r2
 80190d8:	f3c4 4e07 	ubfx	lr, r4, #16, #8
 80190dc:	f006 06f8 	and.w	r6, r6, #248	@ 0xf8
 80190e0:	43d2      	mvns	r2, r2
 80190e2:	b2d2      	uxtb	r2, r2
 80190e4:	10fd      	asrs	r5, r7, #3
 80190e6:	fb1e fe03 	smulbb	lr, lr, r3
 80190ea:	00ff      	lsls	r7, r7, #3
 80190ec:	ea46 1656 	orr.w	r6, r6, r6, lsr #5
 80190f0:	fb06 e602 	mla	r6, r6, r2, lr
 80190f4:	f005 05fc 	and.w	r5, r5, #252	@ 0xfc
 80190f8:	b2ff      	uxtb	r7, r7
 80190fa:	fa5f fc8c 	uxtb.w	ip, ip
 80190fe:	b2e4      	uxtb	r4, r4
 8019100:	b2b6      	uxth	r6, r6
 8019102:	fb1c fc03 	smulbb	ip, ip, r3
 8019106:	ea45 1595 	orr.w	r5, r5, r5, lsr #6
 801910a:	ea47 1757 	orr.w	r7, r7, r7, lsr #5
 801910e:	fb14 f403 	smulbb	r4, r4, r3
 8019112:	fb05 c502 	mla	r5, r5, r2, ip
 8019116:	f106 0e01 	add.w	lr, r6, #1
 801911a:	fb07 4702 	mla	r7, r7, r2, r4
 801911e:	b2ad      	uxth	r5, r5
 8019120:	b2bf      	uxth	r7, r7
 8019122:	eb0e 2616 	add.w	r6, lr, r6, lsr #8
 8019126:	f406 4e78 	and.w	lr, r6, #63488	@ 0xf800
 801912a:	f105 0c01 	add.w	ip, r5, #1
 801912e:	1c7e      	adds	r6, r7, #1
 8019130:	eb06 2617 	add.w	r6, r6, r7, lsr #8
 8019134:	eb0c 2515 	add.w	r5, ip, r5, lsr #8
 8019138:	f3c6 26c4 	ubfx	r6, r6, #11, #5
 801913c:	096d      	lsrs	r5, r5, #5
 801913e:	ea46 060e 	orr.w	r6, r6, lr
 8019142:	f405 65fc 	and.w	r5, r5, #2016	@ 0x7e0
 8019146:	432e      	orrs	r6, r5
 8019148:	8006      	strh	r6, [r0, #0]
 801914a:	e7ba      	b.n	80190c2 <_ZN8touchgfx8LCD16bpp16blitCopyARGB8888EPKmRKNS_4RectES5_h+0x112>
 801914c:	f8ba 3000 	ldrh.w	r3, [sl]
 8019150:	f9bd 4024 	ldrsh.w	r4, [sp, #36]	@ 0x24
 8019154:	eba3 0308 	sub.w	r3, r3, r8
 8019158:	eba4 0408 	sub.w	r4, r4, r8
 801915c:	eb00 0043 	add.w	r0, r0, r3, lsl #1
 8019160:	eb01 0484 	add.w	r4, r1, r4, lsl #2
 8019164:	e78b      	b.n	801907e <_ZN8touchgfx8LCD16bpp16blitCopyARGB8888EPKmRKNS_4RectES5_h+0xce>
 8019166:	4b03      	ldr	r3, [pc, #12]	@ (8019174 <_ZN8touchgfx8LCD16bpp16blitCopyARGB8888EPKmRKNS_4RectES5_h+0x1c4>)
 8019168:	6818      	ldr	r0, [r3, #0]
 801916a:	6803      	ldr	r3, [r0, #0]
 801916c:	6adb      	ldr	r3, [r3, #44]	@ 0x2c
 801916e:	4798      	blx	r3
 8019170:	e76a      	b.n	8019048 <_ZN8touchgfx8LCD16bpp16blitCopyARGB8888EPKmRKNS_4RectES5_h+0x98>
 8019172:	bf00      	nop
 8019174:	20002dbc 	.word	0x20002dbc
 8019178:	20002db6 	.word	0x20002db6

0801917c <_ZNK8touchgfx8LCD16bpp21blitCopyARGB8888SolidEPKmRKNS_4RectES5_>:
 801917c:	e92d 43f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, lr}
 8019180:	460c      	mov	r4, r1
 8019182:	b085      	sub	sp, #20
 8019184:	6810      	ldr	r0, [r2, #0]
 8019186:	6851      	ldr	r1, [r2, #4]
 8019188:	466d      	mov	r5, sp
 801918a:	c503      	stmia	r5!, {r0, r1}
 801918c:	6818      	ldr	r0, [r3, #0]
 801918e:	6859      	ldr	r1, [r3, #4]
 8019190:	4616      	mov	r6, r2
 8019192:	c503      	stmia	r5!, {r0, r1}
 8019194:	4668      	mov	r0, sp
 8019196:	f7f7 f9e7 	bl	8010568 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectE>
 801919a:	4631      	mov	r1, r6
 801919c:	a802      	add	r0, sp, #8
 801919e:	f7f7 fa0b 	bl	80105b8 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectERKS1_>
 80191a2:	f9bd 2008 	ldrsh.w	r2, [sp, #8]
 80191a6:	f9bd 300a 	ldrsh.w	r3, [sp, #10]
 80191aa:	f8bd 1004 	ldrh.w	r1, [sp, #4]
 80191ae:	4d28      	ldr	r5, [pc, #160]	@ (8019250 <_ZNK8touchgfx8LCD16bpp21blitCopyARGB8888SolidEPKmRKNS_4RectES5_+0xd4>)
 80191b0:	4e28      	ldr	r6, [pc, #160]	@ (8019254 <_ZNK8touchgfx8LCD16bpp21blitCopyARGB8888SolidEPKmRKNS_4RectES5_+0xd8>)
 80191b2:	6828      	ldr	r0, [r5, #0]
 80191b4:	f9bd 700c 	ldrsh.w	r7, [sp, #12]
 80191b8:	f9bd 800e 	ldrsh.w	r8, [sp, #14]
 80191bc:	fb11 2103 	smlabb	r1, r1, r3, r2
 80191c0:	eb04 0481 	add.w	r4, r4, r1, lsl #2
 80191c4:	f8bd 1000 	ldrh.w	r1, [sp]
 80191c8:	440a      	add	r2, r1
 80191ca:	f8ad 2008 	strh.w	r2, [sp, #8]
 80191ce:	f8bd 2002 	ldrh.w	r2, [sp, #2]
 80191d2:	4413      	add	r3, r2
 80191d4:	f8ad 300a 	strh.w	r3, [sp, #10]
 80191d8:	6803      	ldr	r3, [r0, #0]
 80191da:	6a9b      	ldr	r3, [r3, #40]	@ 0x28
 80191dc:	4798      	blx	r3
 80191de:	8833      	ldrh	r3, [r6, #0]
 80191e0:	f9bd 200a 	ldrsh.w	r2, [sp, #10]
 80191e4:	f9bd 1008 	ldrsh.w	r1, [sp, #8]
 80191e8:	f8df e06c 	ldr.w	lr, [pc, #108]	@ 8019258 <_ZNK8touchgfx8LCD16bpp21blitCopyARGB8888SolidEPKmRKNS_4RectES5_+0xdc>
 80191ec:	fb03 1202 	mla	r2, r3, r2, r1
 80191f0:	eb00 0042 	add.w	r0, r0, r2, lsl #1
 80191f4:	fb08 f303 	mul.w	r3, r8, r3
 80191f8:	eb00 0343 	add.w	r3, r0, r3, lsl #1
 80191fc:	ea4f 0c47 	mov.w	ip, r7, lsl #1
 8019200:	4298      	cmp	r0, r3
 8019202:	d21d      	bcs.n	8019240 <_ZNK8touchgfx8LCD16bpp21blitCopyARGB8888SolidEPKmRKNS_4RectES5_+0xc4>
 8019204:	eb00 080c 	add.w	r8, r0, ip
 8019208:	4540      	cmp	r0, r8
 801920a:	d20f      	bcs.n	801922c <_ZNK8touchgfx8LCD16bpp21blitCopyARGB8888SolidEPKmRKNS_4RectES5_+0xb0>
 801920c:	f854 1b04 	ldr.w	r1, [r4], #4
 8019210:	ea4f 1951 	mov.w	r9, r1, lsr #5
 8019214:	ea0e 2211 	and.w	r2, lr, r1, lsr #8
 8019218:	f409 69fc 	and.w	r9, r9, #2016	@ 0x7e0
 801921c:	ea42 0209 	orr.w	r2, r2, r9
 8019220:	f3c1 01c4 	ubfx	r1, r1, #3, #5
 8019224:	430a      	orrs	r2, r1
 8019226:	f820 2b02 	strh.w	r2, [r0], #2
 801922a:	e7ed      	b.n	8019208 <_ZNK8touchgfx8LCD16bpp21blitCopyARGB8888SolidEPKmRKNS_4RectES5_+0x8c>
 801922c:	8832      	ldrh	r2, [r6, #0]
 801922e:	1bd2      	subs	r2, r2, r7
 8019230:	eb00 0042 	add.w	r0, r0, r2, lsl #1
 8019234:	f9bd 2004 	ldrsh.w	r2, [sp, #4]
 8019238:	1bd2      	subs	r2, r2, r7
 801923a:	eb04 0482 	add.w	r4, r4, r2, lsl #2
 801923e:	e7df      	b.n	8019200 <_ZNK8touchgfx8LCD16bpp21blitCopyARGB8888SolidEPKmRKNS_4RectES5_+0x84>
 8019240:	6828      	ldr	r0, [r5, #0]
 8019242:	6803      	ldr	r3, [r0, #0]
 8019244:	6adb      	ldr	r3, [r3, #44]	@ 0x2c
 8019246:	4798      	blx	r3
 8019248:	b005      	add	sp, #20
 801924a:	e8bd 83f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, pc}
 801924e:	bf00      	nop
 8019250:	20002dbc 	.word	0x20002dbc
 8019254:	20002db6 	.word	0x20002db6
 8019258:	fffff800 	.word	0xfffff800

0801925c <_ZN8touchgfx8LCD16bpp14blitCopyRGB888EPKhRKNS_4RectES5_h>:
 801925c:	e92d 47f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
 8019260:	460e      	mov	r6, r1
 8019262:	b08e      	sub	sp, #56	@ 0x38
 8019264:	4604      	mov	r4, r0
 8019266:	6808      	ldr	r0, [r1, #0]
 8019268:	6849      	ldr	r1, [r1, #4]
 801926a:	f8df 81d8 	ldr.w	r8, [pc, #472]	@ 8019444 <_ZN8touchgfx8LCD16bpp14blitCopyRGB888EPKhRKNS_4RectES5_h+0x1e8>
 801926e:	f8df 91d8 	ldr.w	r9, [pc, #472]	@ 8019448 <_ZN8touchgfx8LCD16bpp14blitCopyRGB888EPKhRKNS_4RectES5_h+0x1ec>
 8019272:	461d      	mov	r5, r3
 8019274:	ab0a      	add	r3, sp, #40	@ 0x28
 8019276:	c303      	stmia	r3!, {r0, r1}
 8019278:	6810      	ldr	r0, [r2, #0]
 801927a:	6851      	ldr	r1, [r2, #4]
 801927c:	ab0c      	add	r3, sp, #48	@ 0x30
 801927e:	c303      	stmia	r3!, {r0, r1}
 8019280:	a80a      	add	r0, sp, #40	@ 0x28
 8019282:	f7f7 f971 	bl	8010568 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectE>
 8019286:	4631      	mov	r1, r6
 8019288:	a80c      	add	r0, sp, #48	@ 0x30
 801928a:	f7f7 f995 	bl	80105b8 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectERKS1_>
 801928e:	f9bd 2030 	ldrsh.w	r2, [sp, #48]	@ 0x30
 8019292:	f9bd 3032 	ldrsh.w	r3, [sp, #50]	@ 0x32
 8019296:	f8bd 102c 	ldrh.w	r1, [sp, #44]	@ 0x2c
 801929a:	f8d8 0000 	ldr.w	r0, [r8]
 801929e:	f9bd 7034 	ldrsh.w	r7, [sp, #52]	@ 0x34
 80192a2:	f9bd 6036 	ldrsh.w	r6, [sp, #54]	@ 0x36
 80192a6:	fb11 2103 	smlabb	r1, r1, r3, r2
 80192aa:	eb01 0141 	add.w	r1, r1, r1, lsl #1
 80192ae:	440c      	add	r4, r1
 80192b0:	f8bd 1028 	ldrh.w	r1, [sp, #40]	@ 0x28
 80192b4:	440a      	add	r2, r1
 80192b6:	f8ad 2030 	strh.w	r2, [sp, #48]	@ 0x30
 80192ba:	f8bd 202a 	ldrh.w	r2, [sp, #42]	@ 0x2a
 80192be:	4413      	add	r3, r2
 80192c0:	f8ad 3032 	strh.w	r3, [sp, #50]	@ 0x32
 80192c4:	6803      	ldr	r3, [r0, #0]
 80192c6:	6b9b      	ldr	r3, [r3, #56]	@ 0x38
 80192c8:	4798      	blx	r3
 80192ca:	2dff      	cmp	r5, #255	@ 0xff
 80192cc:	d124      	bne.n	8019318 <_ZN8touchgfx8LCD16bpp14blitCopyRGB888EPKhRKNS_4RectES5_h+0xbc>
 80192ce:	f010 0f01 	tst.w	r0, #1
 80192d2:	f8d8 0000 	ldr.w	r0, [r8]
 80192d6:	d022      	beq.n	801931e <_ZN8touchgfx8LCD16bpp14blitCopyRGB888EPKhRKNS_4RectES5_h+0xc2>
 80192d8:	2100      	movs	r1, #0
 80192da:	f8d0 c000 	ldr.w	ip, [r0]
 80192de:	f8bd 3032 	ldrh.w	r3, [sp, #50]	@ 0x32
 80192e2:	f8bd 2030 	ldrh.w	r2, [sp, #48]	@ 0x30
 80192e6:	e9cd 1107 	strd	r1, r1, [sp, #28]
 80192ea:	f04f 0e01 	mov.w	lr, #1
 80192ee:	f8cd e018 	str.w	lr, [sp, #24]
 80192f2:	f8b9 e000 	ldrh.w	lr, [r9]
 80192f6:	9503      	str	r5, [sp, #12]
 80192f8:	e9cd 1e04 	strd	r1, lr, [sp, #16]
 80192fc:	b2b6      	uxth	r6, r6
 80192fe:	f8bd 102c 	ldrh.w	r1, [sp, #44]	@ 0x2c
 8019302:	9102      	str	r1, [sp, #8]
 8019304:	b2bf      	uxth	r7, r7
 8019306:	9601      	str	r6, [sp, #4]
 8019308:	9700      	str	r7, [sp, #0]
 801930a:	f8dc 5040 	ldr.w	r5, [ip, #64]	@ 0x40
 801930e:	4621      	mov	r1, r4
 8019310:	47a8      	blx	r5
 8019312:	b00e      	add	sp, #56	@ 0x38
 8019314:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
 8019318:	f010 0f04 	tst.w	r0, #4
 801931c:	e7d9      	b.n	80192d2 <_ZN8touchgfx8LCD16bpp14blitCopyRGB888EPKhRKNS_4RectES5_h+0x76>
 801931e:	6803      	ldr	r3, [r0, #0]
 8019320:	6a9b      	ldr	r3, [r3, #40]	@ 0x28
 8019322:	4798      	blx	r3
 8019324:	f8b9 3000 	ldrh.w	r3, [r9]
 8019328:	f9bd 2032 	ldrsh.w	r2, [sp, #50]	@ 0x32
 801932c:	f9bd 1030 	ldrsh.w	r1, [sp, #48]	@ 0x30
 8019330:	f9bd c02c 	ldrsh.w	ip, [sp, #44]	@ 0x2c
 8019334:	fb03 1202 	mla	r2, r3, r2, r1
 8019338:	ebac 0c07 	sub.w	ip, ip, r7
 801933c:	eb00 0042 	add.w	r0, r0, r2, lsl #1
 8019340:	435e      	muls	r6, r3
 8019342:	ea4f 0e47 	mov.w	lr, r7, lsl #1
 8019346:	2dff      	cmp	r5, #255	@ 0xff
 8019348:	eba3 0707 	sub.w	r7, r3, r7
 801934c:	eb00 0646 	add.w	r6, r0, r6, lsl #1
 8019350:	eb0c 0c4c 	add.w	ip, ip, ip, lsl #1
 8019354:	ea4f 0747 	mov.w	r7, r7, lsl #1
 8019358:	d049      	beq.n	80193ee <_ZN8touchgfx8LCD16bpp14blitCopyRGB888EPKhRKNS_4RectES5_h+0x192>
 801935a:	43eb      	mvns	r3, r5
 801935c:	fa1f f985 	uxth.w	r9, r5
 8019360:	b2db      	uxtb	r3, r3
 8019362:	42b0      	cmp	r0, r6
 8019364:	d266      	bcs.n	8019434 <_ZN8touchgfx8LCD16bpp14blitCopyRGB888EPKhRKNS_4RectES5_h+0x1d8>
 8019366:	eb00 0a0e 	add.w	sl, r0, lr
 801936a:	4550      	cmp	r0, sl
 801936c:	4621      	mov	r1, r4
 801936e:	f104 0403 	add.w	r4, r4, #3
 8019372:	d25b      	bcs.n	801942c <_ZN8touchgfx8LCD16bpp14blitCopyRGB888EPKhRKNS_4RectES5_h+0x1d0>
 8019374:	8802      	ldrh	r2, [r0, #0]
 8019376:	f814 1c01 	ldrb.w	r1, [r4, #-1]
 801937a:	ea4f 2822 	mov.w	r8, r2, asr #8
 801937e:	f008 08f8 	and.w	r8, r8, #248	@ 0xf8
 8019382:	fb11 f109 	smulbb	r1, r1, r9
 8019386:	ea48 1858 	orr.w	r8, r8, r8, lsr #5
 801938a:	10d5      	asrs	r5, r2, #3
 801938c:	fb08 1803 	mla	r8, r8, r3, r1
 8019390:	f814 1c02 	ldrb.w	r1, [r4, #-2]
 8019394:	f005 05fc 	and.w	r5, r5, #252	@ 0xfc
 8019398:	fb11 f109 	smulbb	r1, r1, r9
 801939c:	ea45 1595 	orr.w	r5, r5, r5, lsr #6
 80193a0:	fb05 1503 	mla	r5, r5, r3, r1
 80193a4:	00d2      	lsls	r2, r2, #3
 80193a6:	f814 1c03 	ldrb.w	r1, [r4, #-3]
 80193aa:	b2d2      	uxtb	r2, r2
 80193ac:	fb11 f109 	smulbb	r1, r1, r9
 80193b0:	ea42 1252 	orr.w	r2, r2, r2, lsr #5
 80193b4:	fa1f f888 	uxth.w	r8, r8
 80193b8:	fb02 1203 	mla	r2, r2, r3, r1
 80193bc:	b292      	uxth	r2, r2
 80193be:	f108 0101 	add.w	r1, r8, #1
 80193c2:	b2ad      	uxth	r5, r5
 80193c4:	eb01 2818 	add.w	r8, r1, r8, lsr #8
 80193c8:	1c51      	adds	r1, r2, #1
 80193ca:	eb01 2212 	add.w	r2, r1, r2, lsr #8
 80193ce:	1c69      	adds	r1, r5, #1
 80193d0:	eb01 2515 	add.w	r5, r1, r5, lsr #8
 80193d4:	f408 4878 	and.w	r8, r8, #63488	@ 0xf800
 80193d8:	f3c2 22c4 	ubfx	r2, r2, #11, #5
 80193dc:	096d      	lsrs	r5, r5, #5
 80193de:	ea42 0208 	orr.w	r2, r2, r8
 80193e2:	f405 65fc 	and.w	r5, r5, #2016	@ 0x7e0
 80193e6:	432a      	orrs	r2, r5
 80193e8:	f820 2b02 	strh.w	r2, [r0], #2
 80193ec:	e7bd      	b.n	801936a <_ZN8touchgfx8LCD16bpp14blitCopyRGB888EPKhRKNS_4RectES5_h+0x10e>
 80193ee:	4a14      	ldr	r2, [pc, #80]	@ (8019440 <_ZN8touchgfx8LCD16bpp14blitCopyRGB888EPKhRKNS_4RectES5_h+0x1e4>)
 80193f0:	42b0      	cmp	r0, r6
 80193f2:	d21f      	bcs.n	8019434 <_ZN8touchgfx8LCD16bpp14blitCopyRGB888EPKhRKNS_4RectES5_h+0x1d8>
 80193f4:	eb00 050e 	add.w	r5, r0, lr
 80193f8:	42a8      	cmp	r0, r5
 80193fa:	4621      	mov	r1, r4
 80193fc:	f104 0403 	add.w	r4, r4, #3
 8019400:	d210      	bcs.n	8019424 <_ZN8touchgfx8LCD16bpp14blitCopyRGB888EPKhRKNS_4RectES5_h+0x1c8>
 8019402:	f814 3c02 	ldrb.w	r3, [r4, #-2]
 8019406:	f814 1c01 	ldrb.w	r1, [r4, #-1]
 801940a:	00db      	lsls	r3, r3, #3
 801940c:	ea02 2101 	and.w	r1, r2, r1, lsl #8
 8019410:	f403 63fc 	and.w	r3, r3, #2016	@ 0x7e0
 8019414:	430b      	orrs	r3, r1
 8019416:	f814 1c03 	ldrb.w	r1, [r4, #-3]
 801941a:	ea43 03d1 	orr.w	r3, r3, r1, lsr #3
 801941e:	f820 3b02 	strh.w	r3, [r0], #2
 8019422:	e7e9      	b.n	80193f8 <_ZN8touchgfx8LCD16bpp14blitCopyRGB888EPKhRKNS_4RectES5_h+0x19c>
 8019424:	4438      	add	r0, r7
 8019426:	eb01 040c 	add.w	r4, r1, ip
 801942a:	e7e1      	b.n	80193f0 <_ZN8touchgfx8LCD16bpp14blitCopyRGB888EPKhRKNS_4RectES5_h+0x194>
 801942c:	4438      	add	r0, r7
 801942e:	eb01 040c 	add.w	r4, r1, ip
 8019432:	e796      	b.n	8019362 <_ZN8touchgfx8LCD16bpp14blitCopyRGB888EPKhRKNS_4RectES5_h+0x106>
 8019434:	4b03      	ldr	r3, [pc, #12]	@ (8019444 <_ZN8touchgfx8LCD16bpp14blitCopyRGB888EPKhRKNS_4RectES5_h+0x1e8>)
 8019436:	6818      	ldr	r0, [r3, #0]
 8019438:	6803      	ldr	r3, [r0, #0]
 801943a:	6adb      	ldr	r3, [r3, #44]	@ 0x2c
 801943c:	4798      	blx	r3
 801943e:	e768      	b.n	8019312 <_ZN8touchgfx8LCD16bpp14blitCopyRGB888EPKhRKNS_4RectES5_h+0xb6>
 8019440:	fffff800 	.word	0xfffff800
 8019444:	20002dbc 	.word	0x20002dbc
 8019448:	20002db6 	.word	0x20002db6

0801944c <_ZN8touchgfx8LCD16bpp8blitCopyEPKhNS_6Bitmap12BitmapFormatERKNS_4RectES7_hb>:
 801944c:	b4f0      	push	{r4, r5, r6, r7}
 801944e:	4616      	mov	r6, r2
 8019450:	2e01      	cmp	r6, #1
 8019452:	461c      	mov	r4, r3
 8019454:	460d      	mov	r5, r1
 8019456:	9a04      	ldr	r2, [sp, #16]
 8019458:	f89d 3014 	ldrb.w	r3, [sp, #20]
 801945c:	f89d 7018 	ldrb.w	r7, [sp, #24]
 8019460:	d012      	beq.n	8019488 <_ZN8touchgfx8LCD16bpp8blitCopyEPKhNS_6Bitmap12BitmapFormatERKNS_4RectES7_hb+0x3c>
 8019462:	d303      	bcc.n	801946c <_ZN8touchgfx8LCD16bpp8blitCopyEPKhNS_6Bitmap12BitmapFormatERKNS_4RectES7_hb+0x20>
 8019464:	2e02      	cmp	r6, #2
 8019466:	d00a      	beq.n	801947e <_ZN8touchgfx8LCD16bpp8blitCopyEPKhNS_6Bitmap12BitmapFormatERKNS_4RectES7_hb+0x32>
 8019468:	bcf0      	pop	{r4, r5, r6, r7}
 801946a:	4770      	bx	lr
 801946c:	6805      	ldr	r5, [r0, #0]
 801946e:	e9cd 3704 	strd	r3, r7, [sp, #16]
 8019472:	68ed      	ldr	r5, [r5, #12]
 8019474:	4613      	mov	r3, r2
 8019476:	46ac      	mov	ip, r5
 8019478:	4622      	mov	r2, r4
 801947a:	bcf0      	pop	{r4, r5, r6, r7}
 801947c:	4760      	bx	ip
 801947e:	4621      	mov	r1, r4
 8019480:	4628      	mov	r0, r5
 8019482:	bcf0      	pop	{r4, r5, r6, r7}
 8019484:	f7ff bd94 	b.w	8018fb0 <_ZN8touchgfx8LCD16bpp16blitCopyARGB8888EPKmRKNS_4RectES5_h>
 8019488:	4621      	mov	r1, r4
 801948a:	4628      	mov	r0, r5
 801948c:	bcf0      	pop	{r4, r5, r6, r7}
 801948e:	f7ff bee5 	b.w	801925c <_ZN8touchgfx8LCD16bpp14blitCopyRGB888EPKhRKNS_4RectES5_h>
	...

08019494 <_ZN8touchgfx8LCD16bpp19blitCopyL8_ARGB8888EPKhS2_RKNS_4RectES5_h>:
 8019494:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8019498:	4681      	mov	r9, r0
 801949a:	b093      	sub	sp, #76	@ 0x4c
 801949c:	6810      	ldr	r0, [r2, #0]
 801949e:	f89d a070 	ldrb.w	sl, [sp, #112]	@ 0x70
 80194a2:	4f6d      	ldr	r7, [pc, #436]	@ (8019658 <_ZN8touchgfx8LCD16bpp19blitCopyL8_ARGB8888EPKhS2_RKNS_4RectES5_h+0x1c4>)
 80194a4:	4688      	mov	r8, r1
 80194a6:	6851      	ldr	r1, [r2, #4]
 80194a8:	ac0e      	add	r4, sp, #56	@ 0x38
 80194aa:	c403      	stmia	r4!, {r0, r1}
 80194ac:	6818      	ldr	r0, [r3, #0]
 80194ae:	6859      	ldr	r1, [r3, #4]
 80194b0:	ac10      	add	r4, sp, #64	@ 0x40
 80194b2:	4616      	mov	r6, r2
 80194b4:	c403      	stmia	r4!, {r0, r1}
 80194b6:	a80e      	add	r0, sp, #56	@ 0x38
 80194b8:	f7f7 f856 	bl	8010568 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectE>
 80194bc:	4631      	mov	r1, r6
 80194be:	a810      	add	r0, sp, #64	@ 0x40
 80194c0:	f7f7 f87a 	bl	80105b8 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectERKS1_>
 80194c4:	f9bd 2040 	ldrsh.w	r2, [sp, #64]	@ 0x40
 80194c8:	f9bd 3042 	ldrsh.w	r3, [sp, #66]	@ 0x42
 80194cc:	f8bd 103c 	ldrh.w	r1, [sp, #60]	@ 0x3c
 80194d0:	4e62      	ldr	r6, [pc, #392]	@ (801965c <_ZN8touchgfx8LCD16bpp19blitCopyL8_ARGB8888EPKhS2_RKNS_4RectES5_h+0x1c8>)
 80194d2:	f9bd 4044 	ldrsh.w	r4, [sp, #68]	@ 0x44
 80194d6:	6830      	ldr	r0, [r6, #0]
 80194d8:	f9bd 5046 	ldrsh.w	r5, [sp, #70]	@ 0x46
 80194dc:	fb11 2103 	smlabb	r1, r1, r3, r2
 80194e0:	4489      	add	r9, r1
 80194e2:	f8bd 1038 	ldrh.w	r1, [sp, #56]	@ 0x38
 80194e6:	440a      	add	r2, r1
 80194e8:	f8ad 2040 	strh.w	r2, [sp, #64]	@ 0x40
 80194ec:	f8bd 203a 	ldrh.w	r2, [sp, #58]	@ 0x3a
 80194f0:	4413      	add	r3, r2
 80194f2:	f8ad 3042 	strh.w	r3, [sp, #66]	@ 0x42
 80194f6:	6803      	ldr	r3, [r0, #0]
 80194f8:	6b9b      	ldr	r3, [r3, #56]	@ 0x38
 80194fa:	4798      	blx	r3
 80194fc:	f010 0f80 	tst.w	r0, #128	@ 0x80
 8019500:	6830      	ldr	r0, [r6, #0]
 8019502:	d01d      	beq.n	8019540 <_ZN8touchgfx8LCD16bpp19blitCopyL8_ARGB8888EPKhS2_RKNS_4RectES5_h+0xac>
 8019504:	2200      	movs	r2, #0
 8019506:	6801      	ldr	r1, [r0, #0]
 8019508:	f8bd 3040 	ldrh.w	r3, [sp, #64]	@ 0x40
 801950c:	e9cd 2208 	strd	r2, r2, [sp, #32]
 8019510:	220b      	movs	r2, #11
 8019512:	9207      	str	r2, [sp, #28]
 8019514:	883a      	ldrh	r2, [r7, #0]
 8019516:	9206      	str	r2, [sp, #24]
 8019518:	2201      	movs	r2, #1
 801951a:	e9cd a204 	strd	sl, r2, [sp, #16]
 801951e:	f8bd 203c 	ldrh.w	r2, [sp, #60]	@ 0x3c
 8019522:	9203      	str	r2, [sp, #12]
 8019524:	b2a4      	uxth	r4, r4
 8019526:	f8bd 2042 	ldrh.w	r2, [sp, #66]	@ 0x42
 801952a:	9200      	str	r2, [sp, #0]
 801952c:	b2ad      	uxth	r5, r5
 801952e:	9502      	str	r5, [sp, #8]
 8019530:	9401      	str	r4, [sp, #4]
 8019532:	6bcc      	ldr	r4, [r1, #60]	@ 0x3c
 8019534:	4642      	mov	r2, r8
 8019536:	4649      	mov	r1, r9
 8019538:	47a0      	blx	r4
 801953a:	b013      	add	sp, #76	@ 0x4c
 801953c:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 8019540:	6803      	ldr	r3, [r0, #0]
 8019542:	6a9b      	ldr	r3, [r3, #40]	@ 0x28
 8019544:	4798      	blx	r3
 8019546:	883b      	ldrh	r3, [r7, #0]
 8019548:	f9bd 2042 	ldrsh.w	r2, [sp, #66]	@ 0x42
 801954c:	f9bd 1040 	ldrsh.w	r1, [sp, #64]	@ 0x40
 8019550:	fb03 1202 	mla	r2, r3, r2, r1
 8019554:	435d      	muls	r5, r3
 8019556:	eb00 0042 	add.w	r0, r0, r2, lsl #1
 801955a:	eb00 0245 	add.w	r2, r0, r5, lsl #1
 801955e:	920c      	str	r2, [sp, #48]	@ 0x30
 8019560:	f9bd 203c 	ldrsh.w	r2, [sp, #60]	@ 0x3c
 8019564:	1b12      	subs	r2, r2, r4
 8019566:	920d      	str	r2, [sp, #52]	@ 0x34
 8019568:	0062      	lsls	r2, r4, #1
 801956a:	1b1c      	subs	r4, r3, r4
 801956c:	0063      	lsls	r3, r4, #1
 801956e:	920a      	str	r2, [sp, #40]	@ 0x28
 8019570:	930b      	str	r3, [sp, #44]	@ 0x2c
 8019572:	f04f 0e04 	mov.w	lr, #4
 8019576:	9b0c      	ldr	r3, [sp, #48]	@ 0x30
 8019578:	4298      	cmp	r0, r3
 801957a:	d266      	bcs.n	801964a <_ZN8touchgfx8LCD16bpp19blitCopyL8_ARGB8888EPKhS2_RKNS_4RectES5_h+0x1b6>
 801957c:	9b0a      	ldr	r3, [sp, #40]	@ 0x28
 801957e:	eb00 0b03 	add.w	fp, r0, r3
 8019582:	4558      	cmp	r0, fp
 8019584:	d25c      	bcs.n	8019640 <_ZN8touchgfx8LCD16bpp19blitCopyL8_ARGB8888EPKhS2_RKNS_4RectES5_h+0x1ac>
 8019586:	f819 3b01 	ldrb.w	r3, [r9], #1
 801958a:	fb1e e303 	smlabb	r3, lr, r3, lr
 801958e:	f858 2003 	ldr.w	r2, [r8, r3]
 8019592:	0e11      	lsrs	r1, r2, #24
 8019594:	d012      	beq.n	80195bc <_ZN8touchgfx8LCD16bpp19blitCopyL8_ARGB8888EPKhS2_RKNS_4RectES5_h+0x128>
 8019596:	29ff      	cmp	r1, #255	@ 0xff
 8019598:	ea4f 2712 	mov.w	r7, r2, lsr #8
 801959c:	d110      	bne.n	80195c0 <_ZN8touchgfx8LCD16bpp19blitCopyL8_ARGB8888EPKhS2_RKNS_4RectES5_h+0x12c>
 801959e:	f1ba 0fff 	cmp.w	sl, #255	@ 0xff
 80195a2:	d10d      	bne.n	80195c0 <_ZN8touchgfx8LCD16bpp19blitCopyL8_ARGB8888EPKhS2_RKNS_4RectES5_h+0x12c>
 80195a4:	0953      	lsrs	r3, r2, #5
 80195a6:	f427 67ff 	bic.w	r7, r7, #2040	@ 0x7f8
 80195aa:	f403 63fc 	and.w	r3, r3, #2016	@ 0x7e0
 80195ae:	f027 0707 	bic.w	r7, r7, #7
 80195b2:	431f      	orrs	r7, r3
 80195b4:	f3c2 02c4 	ubfx	r2, r2, #3, #5
 80195b8:	433a      	orrs	r2, r7
 80195ba:	8002      	strh	r2, [r0, #0]
 80195bc:	3002      	adds	r0, #2
 80195be:	e7e0      	b.n	8019582 <_ZN8touchgfx8LCD16bpp19blitCopyL8_ARGB8888EPKhS2_RKNS_4RectES5_h+0xee>
 80195c0:	fb0a f101 	mul.w	r1, sl, r1
 80195c4:	8806      	ldrh	r6, [r0, #0]
 80195c6:	1c4b      	adds	r3, r1, #1
 80195c8:	eb03 2321 	add.w	r3, r3, r1, asr #8
 80195cc:	1235      	asrs	r5, r6, #8
 80195ce:	10f4      	asrs	r4, r6, #3
 80195d0:	121b      	asrs	r3, r3, #8
 80195d2:	00f6      	lsls	r6, r6, #3
 80195d4:	b299      	uxth	r1, r3
 80195d6:	f3c2 4c07 	ubfx	ip, r2, #16, #8
 80195da:	f005 05f8 	and.w	r5, r5, #248	@ 0xf8
 80195de:	b2f6      	uxtb	r6, r6
 80195e0:	43db      	mvns	r3, r3
 80195e2:	b2d2      	uxtb	r2, r2
 80195e4:	b2db      	uxtb	r3, r3
 80195e6:	fb1c fc01 	smulbb	ip, ip, r1
 80195ea:	ea45 1555 	orr.w	r5, r5, r5, lsr #5
 80195ee:	ea46 1656 	orr.w	r6, r6, r6, lsr #5
 80195f2:	fb12 f201 	smulbb	r2, r2, r1
 80195f6:	fb05 c503 	mla	r5, r5, r3, ip
 80195fa:	f004 04fc 	and.w	r4, r4, #252	@ 0xfc
 80195fe:	b2ff      	uxtb	r7, r7
 8019600:	fb06 2203 	mla	r2, r6, r3, r2
 8019604:	b2ad      	uxth	r5, r5
 8019606:	fb17 f701 	smulbb	r7, r7, r1
 801960a:	b292      	uxth	r2, r2
 801960c:	ea44 1494 	orr.w	r4, r4, r4, lsr #6
 8019610:	fb04 7403 	mla	r4, r4, r3, r7
 8019614:	f105 0c01 	add.w	ip, r5, #1
 8019618:	1c57      	adds	r7, r2, #1
 801961a:	eb0c 2515 	add.w	r5, ip, r5, lsr #8
 801961e:	eb07 2712 	add.w	r7, r7, r2, lsr #8
 8019622:	b2a4      	uxth	r4, r4
 8019624:	f3c7 27c4 	ubfx	r7, r7, #11, #5
 8019628:	f405 4578 	and.w	r5, r5, #63488	@ 0xf800
 801962c:	433d      	orrs	r5, r7
 801962e:	1c67      	adds	r7, r4, #1
 8019630:	eb07 2414 	add.w	r4, r7, r4, lsr #8
 8019634:	0964      	lsrs	r4, r4, #5
 8019636:	f404 64fc 	and.w	r4, r4, #2016	@ 0x7e0
 801963a:	4325      	orrs	r5, r4
 801963c:	8005      	strh	r5, [r0, #0]
 801963e:	e7bd      	b.n	80195bc <_ZN8touchgfx8LCD16bpp19blitCopyL8_ARGB8888EPKhS2_RKNS_4RectES5_h+0x128>
 8019640:	9b0b      	ldr	r3, [sp, #44]	@ 0x2c
 8019642:	4418      	add	r0, r3
 8019644:	9b0d      	ldr	r3, [sp, #52]	@ 0x34
 8019646:	4499      	add	r9, r3
 8019648:	e795      	b.n	8019576 <_ZN8touchgfx8LCD16bpp19blitCopyL8_ARGB8888EPKhS2_RKNS_4RectES5_h+0xe2>
 801964a:	4b04      	ldr	r3, [pc, #16]	@ (801965c <_ZN8touchgfx8LCD16bpp19blitCopyL8_ARGB8888EPKhS2_RKNS_4RectES5_h+0x1c8>)
 801964c:	6818      	ldr	r0, [r3, #0]
 801964e:	6803      	ldr	r3, [r0, #0]
 8019650:	6adb      	ldr	r3, [r3, #44]	@ 0x2c
 8019652:	4798      	blx	r3
 8019654:	e771      	b.n	801953a <_ZN8touchgfx8LCD16bpp19blitCopyL8_ARGB8888EPKhS2_RKNS_4RectES5_h+0xa6>
 8019656:	bf00      	nop
 8019658:	20002db6 	.word	0x20002db6
 801965c:	20002dbc 	.word	0x20002dbc

08019660 <_ZN8touchgfx8LCD16bpp17blitCopyL8_RGB565EPKhS2_RKNS_4RectES5_h>:
 8019660:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8019664:	b087      	sub	sp, #28
 8019666:	4680      	mov	r8, r0
 8019668:	f89d 6040 	ldrb.w	r6, [sp, #64]	@ 0x40
 801966c:	460d      	mov	r5, r1
 801966e:	4614      	mov	r4, r2
 8019670:	2e00      	cmp	r6, #0
 8019672:	f000 80b9 	beq.w	80197e8 <_ZN8touchgfx8LCD16bpp17blitCopyL8_RGB565EPKhS2_RKNS_4RectES5_h+0x188>
 8019676:	6810      	ldr	r0, [r2, #0]
 8019678:	6851      	ldr	r1, [r2, #4]
 801967a:	af02      	add	r7, sp, #8
 801967c:	c703      	stmia	r7!, {r0, r1}
 801967e:	6818      	ldr	r0, [r3, #0]
 8019680:	6859      	ldr	r1, [r3, #4]
 8019682:	af04      	add	r7, sp, #16
 8019684:	c703      	stmia	r7!, {r0, r1}
 8019686:	a802      	add	r0, sp, #8
 8019688:	f7f6 ff6e 	bl	8010568 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectE>
 801968c:	4621      	mov	r1, r4
 801968e:	a804      	add	r0, sp, #16
 8019690:	f7f6 ff92 	bl	80105b8 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectERKS1_>
 8019694:	f9bd 2010 	ldrsh.w	r2, [sp, #16]
 8019698:	f9bd 3012 	ldrsh.w	r3, [sp, #18]
 801969c:	f8bd 400c 	ldrh.w	r4, [sp, #12]
 80196a0:	f9bd 7016 	ldrsh.w	r7, [sp, #22]
 80196a4:	fb14 2103 	smlabb	r1, r4, r3, r2
 80196a8:	eb08 0401 	add.w	r4, r8, r1
 80196ac:	f8bd 1008 	ldrh.w	r1, [sp, #8]
 80196b0:	f9bd 8014 	ldrsh.w	r8, [sp, #20]
 80196b4:	440a      	add	r2, r1
 80196b6:	f8ad 2010 	strh.w	r2, [sp, #16]
 80196ba:	f8bd 200a 	ldrh.w	r2, [sp, #10]
 80196be:	4413      	add	r3, r2
 80196c0:	f8ad 3012 	strh.w	r3, [sp, #18]
 80196c4:	4b4a      	ldr	r3, [pc, #296]	@ (80197f0 <_ZN8touchgfx8LCD16bpp17blitCopyL8_RGB565EPKhS2_RKNS_4RectES5_h+0x190>)
 80196c6:	6818      	ldr	r0, [r3, #0]
 80196c8:	6803      	ldr	r3, [r0, #0]
 80196ca:	6a9b      	ldr	r3, [r3, #40]	@ 0x28
 80196cc:	4798      	blx	r3
 80196ce:	4b49      	ldr	r3, [pc, #292]	@ (80197f4 <_ZN8touchgfx8LCD16bpp17blitCopyL8_RGB565EPKhS2_RKNS_4RectES5_h+0x194>)
 80196d0:	f9bd 1012 	ldrsh.w	r1, [sp, #18]
 80196d4:	881a      	ldrh	r2, [r3, #0]
 80196d6:	f9bd c010 	ldrsh.w	ip, [sp, #16]
 80196da:	2eff      	cmp	r6, #255	@ 0xff
 80196dc:	fb02 c101 	mla	r1, r2, r1, ip
 80196e0:	eb00 0041 	add.w	r0, r0, r1, lsl #1
 80196e4:	fb02 f207 	mul.w	r2, r2, r7
 80196e8:	f105 0104 	add.w	r1, r5, #4
 80196ec:	ea4f 0a48 	mov.w	sl, r8, lsl #1
 80196f0:	461d      	mov	r5, r3
 80196f2:	d05a      	beq.n	80197aa <_ZN8touchgfx8LCD16bpp17blitCopyL8_RGB565EPKhS2_RKNS_4RectES5_h+0x14a>
 80196f4:	f1c6 0eff 	rsb	lr, r6, #255	@ 0xff
 80196f8:	eb00 0242 	add.w	r2, r0, r2, lsl #1
 80196fc:	b2b6      	uxth	r6, r6
 80196fe:	fa1f fe8e 	uxth.w	lr, lr
 8019702:	9301      	str	r3, [sp, #4]
 8019704:	4282      	cmp	r2, r0
 8019706:	d96a      	bls.n	80197de <_ZN8touchgfx8LCD16bpp17blitCopyL8_RGB565EPKhS2_RKNS_4RectES5_h+0x17e>
 8019708:	eb00 0b0a 	add.w	fp, r0, sl
 801970c:	4583      	cmp	fp, r0
 801970e:	d940      	bls.n	8019792 <_ZN8touchgfx8LCD16bpp17blitCopyL8_RGB565EPKhS2_RKNS_4RectES5_h+0x132>
 8019710:	f814 3b01 	ldrb.w	r3, [r4], #1
 8019714:	8805      	ldrh	r5, [r0, #0]
 8019716:	f831 3013 	ldrh.w	r3, [r1, r3, lsl #1]
 801971a:	122f      	asrs	r7, r5, #8
 801971c:	ea4f 2c23 	mov.w	ip, r3, asr #8
 8019720:	f007 07f8 	and.w	r7, r7, #248	@ 0xf8
 8019724:	fb17 f70e 	smulbb	r7, r7, lr
 8019728:	ea4f 09e5 	mov.w	r9, r5, asr #3
 801972c:	f00c 0cf8 	and.w	ip, ip, #248	@ 0xf8
 8019730:	00ed      	lsls	r5, r5, #3
 8019732:	fb0c 7c06 	mla	ip, ip, r6, r7
 8019736:	f009 09fc 	and.w	r9, r9, #252	@ 0xfc
 801973a:	10df      	asrs	r7, r3, #3
 801973c:	b2ed      	uxtb	r5, r5
 801973e:	00db      	lsls	r3, r3, #3
 8019740:	fa1f fc8c 	uxth.w	ip, ip
 8019744:	fb19 f90e 	smulbb	r9, r9, lr
 8019748:	f007 07fc 	and.w	r7, r7, #252	@ 0xfc
 801974c:	b2db      	uxtb	r3, r3
 801974e:	fb15 f50e 	smulbb	r5, r5, lr
 8019752:	fb07 9706 	mla	r7, r7, r6, r9
 8019756:	fb03 5306 	mla	r3, r3, r6, r5
 801975a:	f10c 0901 	add.w	r9, ip, #1
 801975e:	b29b      	uxth	r3, r3
 8019760:	eb09 2c1c 	add.w	ip, r9, ip, lsr #8
 8019764:	f40c 4978 	and.w	r9, ip, #63488	@ 0xf800
 8019768:	f103 0c01 	add.w	ip, r3, #1
 801976c:	eb0c 2c13 	add.w	ip, ip, r3, lsr #8
 8019770:	b2bf      	uxth	r7, r7
 8019772:	f3cc 2cc4 	ubfx	ip, ip, #11, #5
 8019776:	ea4c 0c09 	orr.w	ip, ip, r9
 801977a:	f107 0901 	add.w	r9, r7, #1
 801977e:	eb09 2717 	add.w	r7, r9, r7, lsr #8
 8019782:	097f      	lsrs	r7, r7, #5
 8019784:	f407 67fc 	and.w	r7, r7, #2016	@ 0x7e0
 8019788:	ea4c 0c07 	orr.w	ip, ip, r7
 801978c:	f820 cb02 	strh.w	ip, [r0], #2
 8019790:	e7bc      	b.n	801970c <_ZN8touchgfx8LCD16bpp17blitCopyL8_RGB565EPKhS2_RKNS_4RectES5_h+0xac>
 8019792:	9b01      	ldr	r3, [sp, #4]
 8019794:	881b      	ldrh	r3, [r3, #0]
 8019796:	eba3 0308 	sub.w	r3, r3, r8
 801979a:	eb00 0043 	add.w	r0, r0, r3, lsl #1
 801979e:	f9bd 300c 	ldrsh.w	r3, [sp, #12]
 80197a2:	eba3 0308 	sub.w	r3, r3, r8
 80197a6:	441c      	add	r4, r3
 80197a8:	e7ac      	b.n	8019704 <_ZN8touchgfx8LCD16bpp17blitCopyL8_RGB565EPKhS2_RKNS_4RectES5_h+0xa4>
 80197aa:	eb00 0242 	add.w	r2, r0, r2, lsl #1
 80197ae:	4282      	cmp	r2, r0
 80197b0:	d915      	bls.n	80197de <_ZN8touchgfx8LCD16bpp17blitCopyL8_RGB565EPKhS2_RKNS_4RectES5_h+0x17e>
 80197b2:	eb00 060a 	add.w	r6, r0, sl
 80197b6:	4286      	cmp	r6, r0
 80197b8:	d906      	bls.n	80197c8 <_ZN8touchgfx8LCD16bpp17blitCopyL8_RGB565EPKhS2_RKNS_4RectES5_h+0x168>
 80197ba:	f814 3b01 	ldrb.w	r3, [r4], #1
 80197be:	f831 3013 	ldrh.w	r3, [r1, r3, lsl #1]
 80197c2:	f820 3b02 	strh.w	r3, [r0], #2
 80197c6:	e7f6      	b.n	80197b6 <_ZN8touchgfx8LCD16bpp17blitCopyL8_RGB565EPKhS2_RKNS_4RectES5_h+0x156>
 80197c8:	882b      	ldrh	r3, [r5, #0]
 80197ca:	eba3 0308 	sub.w	r3, r3, r8
 80197ce:	eb00 0043 	add.w	r0, r0, r3, lsl #1
 80197d2:	f9bd 300c 	ldrsh.w	r3, [sp, #12]
 80197d6:	eba3 0308 	sub.w	r3, r3, r8
 80197da:	441c      	add	r4, r3
 80197dc:	e7e7      	b.n	80197ae <_ZN8touchgfx8LCD16bpp17blitCopyL8_RGB565EPKhS2_RKNS_4RectES5_h+0x14e>
 80197de:	4b04      	ldr	r3, [pc, #16]	@ (80197f0 <_ZN8touchgfx8LCD16bpp17blitCopyL8_RGB565EPKhS2_RKNS_4RectES5_h+0x190>)
 80197e0:	6818      	ldr	r0, [r3, #0]
 80197e2:	6803      	ldr	r3, [r0, #0]
 80197e4:	6adb      	ldr	r3, [r3, #44]	@ 0x2c
 80197e6:	4798      	blx	r3
 80197e8:	b007      	add	sp, #28
 80197ea:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 80197ee:	bf00      	nop
 80197f0:	20002dbc 	.word	0x20002dbc
 80197f4:	20002db6 	.word	0x20002db6

080197f8 <_ZN8touchgfx8LCD16bpp17blitCopyL8_RGB888EPKhS2_RKNS_4RectES5_h>:
 80197f8:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 80197fc:	b091      	sub	sp, #68	@ 0x44
 80197fe:	4680      	mov	r8, r0
 8019800:	f89d 5068 	ldrb.w	r5, [sp, #104]	@ 0x68
 8019804:	460f      	mov	r7, r1
 8019806:	4614      	mov	r4, r2
 8019808:	2d00      	cmp	r5, #0
 801980a:	d051      	beq.n	80198b0 <_ZN8touchgfx8LCD16bpp17blitCopyL8_RGB888EPKhS2_RKNS_4RectES5_h+0xb8>
 801980c:	6810      	ldr	r0, [r2, #0]
 801980e:	6851      	ldr	r1, [r2, #4]
 8019810:	f8df 9200 	ldr.w	r9, [pc, #512]	@ 8019a14 <_ZN8touchgfx8LCD16bpp17blitCopyL8_RGB888EPKhS2_RKNS_4RectES5_h+0x21c>
 8019814:	ae0c      	add	r6, sp, #48	@ 0x30
 8019816:	c603      	stmia	r6!, {r0, r1}
 8019818:	6818      	ldr	r0, [r3, #0]
 801981a:	6859      	ldr	r1, [r3, #4]
 801981c:	ae0e      	add	r6, sp, #56	@ 0x38
 801981e:	c603      	stmia	r6!, {r0, r1}
 8019820:	a80c      	add	r0, sp, #48	@ 0x30
 8019822:	f7f6 fea1 	bl	8010568 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectE>
 8019826:	4621      	mov	r1, r4
 8019828:	a80e      	add	r0, sp, #56	@ 0x38
 801982a:	f7f6 fec5 	bl	80105b8 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectERKS1_>
 801982e:	f9bd 2038 	ldrsh.w	r2, [sp, #56]	@ 0x38
 8019832:	f9bd 303a 	ldrsh.w	r3, [sp, #58]	@ 0x3a
 8019836:	f8bd 1034 	ldrh.w	r1, [sp, #52]	@ 0x34
 801983a:	f8d9 0000 	ldr.w	r0, [r9]
 801983e:	f9bd 603c 	ldrsh.w	r6, [sp, #60]	@ 0x3c
 8019842:	f9bd a03e 	ldrsh.w	sl, [sp, #62]	@ 0x3e
 8019846:	fb11 2103 	smlabb	r1, r1, r3, r2
 801984a:	eb08 0401 	add.w	r4, r8, r1
 801984e:	f8bd 1030 	ldrh.w	r1, [sp, #48]	@ 0x30
 8019852:	f8df 81c4 	ldr.w	r8, [pc, #452]	@ 8019a18 <_ZN8touchgfx8LCD16bpp17blitCopyL8_RGB888EPKhS2_RKNS_4RectES5_h+0x220>
 8019856:	440a      	add	r2, r1
 8019858:	f8ad 2038 	strh.w	r2, [sp, #56]	@ 0x38
 801985c:	f8bd 2032 	ldrh.w	r2, [sp, #50]	@ 0x32
 8019860:	4413      	add	r3, r2
 8019862:	f8ad 303a 	strh.w	r3, [sp, #58]	@ 0x3a
 8019866:	6803      	ldr	r3, [r0, #0]
 8019868:	6b9b      	ldr	r3, [r3, #56]	@ 0x38
 801986a:	4798      	blx	r3
 801986c:	f010 0f80 	tst.w	r0, #128	@ 0x80
 8019870:	f8d9 0000 	ldr.w	r0, [r9]
 8019874:	d01f      	beq.n	80198b6 <_ZN8touchgfx8LCD16bpp17blitCopyL8_RGB888EPKhS2_RKNS_4RectES5_h+0xbe>
 8019876:	2200      	movs	r2, #0
 8019878:	6801      	ldr	r1, [r0, #0]
 801987a:	f8bd 3038 	ldrh.w	r3, [sp, #56]	@ 0x38
 801987e:	e9cd 2208 	strd	r2, r2, [sp, #32]
 8019882:	220b      	movs	r2, #11
 8019884:	9207      	str	r2, [sp, #28]
 8019886:	f8b8 2000 	ldrh.w	r2, [r8]
 801988a:	9206      	str	r2, [sp, #24]
 801988c:	2201      	movs	r2, #1
 801988e:	e9cd 5204 	strd	r5, r2, [sp, #16]
 8019892:	f8bd 2034 	ldrh.w	r2, [sp, #52]	@ 0x34
 8019896:	9203      	str	r2, [sp, #12]
 8019898:	fa1f f28a 	uxth.w	r2, sl
 801989c:	9202      	str	r2, [sp, #8]
 801989e:	b2b6      	uxth	r6, r6
 80198a0:	f8bd 203a 	ldrh.w	r2, [sp, #58]	@ 0x3a
 80198a4:	9200      	str	r2, [sp, #0]
 80198a6:	9601      	str	r6, [sp, #4]
 80198a8:	6bcd      	ldr	r5, [r1, #60]	@ 0x3c
 80198aa:	463a      	mov	r2, r7
 80198ac:	4621      	mov	r1, r4
 80198ae:	47a8      	blx	r5
 80198b0:	b011      	add	sp, #68	@ 0x44
 80198b2:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 80198b6:	6803      	ldr	r3, [r0, #0]
 80198b8:	6a9b      	ldr	r3, [r3, #40]	@ 0x28
 80198ba:	4798      	blx	r3
 80198bc:	f8b8 2000 	ldrh.w	r2, [r8]
 80198c0:	f9bd 303a 	ldrsh.w	r3, [sp, #58]	@ 0x3a
 80198c4:	f9bd 1038 	ldrsh.w	r1, [sp, #56]	@ 0x38
 80198c8:	2dff      	cmp	r5, #255	@ 0xff
 80198ca:	fb02 1303 	mla	r3, r2, r3, r1
 80198ce:	eb00 0043 	add.w	r0, r0, r3, lsl #1
 80198d2:	ea4f 0946 	mov.w	r9, r6, lsl #1
 80198d6:	fb0a fa02 	mul.w	sl, sl, r2
 80198da:	d062      	beq.n	80199a2 <_ZN8touchgfx8LCD16bpp17blitCopyL8_RGB888EPKhS2_RKNS_4RectES5_h+0x1aa>
 80198dc:	ea6f 0c05 	mvn.w	ip, r5
 80198e0:	eb00 034a 	add.w	r3, r0, sl, lsl #1
 80198e4:	930a      	str	r3, [sp, #40]	@ 0x28
 80198e6:	b2ad      	uxth	r5, r5
 80198e8:	fa5f fc8c 	uxtb.w	ip, ip
 80198ec:	f8cd 802c 	str.w	r8, [sp, #44]	@ 0x2c
 80198f0:	9b0a      	ldr	r3, [sp, #40]	@ 0x28
 80198f2:	4298      	cmp	r0, r3
 80198f4:	f080 8085 	bcs.w	8019a02 <_ZN8touchgfx8LCD16bpp17blitCopyL8_RGB888EPKhS2_RKNS_4RectES5_h+0x20a>
 80198f8:	eb00 0b09 	add.w	fp, r0, r9
 80198fc:	4558      	cmp	r0, fp
 80198fe:	d246      	bcs.n	801998e <_ZN8touchgfx8LCD16bpp17blitCopyL8_RGB888EPKhS2_RKNS_4RectES5_h+0x196>
 8019900:	f814 eb01 	ldrb.w	lr, [r4], #1
 8019904:	2303      	movs	r3, #3
 8019906:	2204      	movs	r2, #4
 8019908:	fb13 2e0e 	smlabb	lr, r3, lr, r2
 801990c:	eb07 0a0e 	add.w	sl, r7, lr
 8019910:	8803      	ldrh	r3, [r0, #0]
 8019912:	f89a 8002 	ldrb.w	r8, [sl, #2]
 8019916:	f817 e00e 	ldrb.w	lr, [r7, lr]
 801991a:	1219      	asrs	r1, r3, #8
 801991c:	f001 01f8 	and.w	r1, r1, #248	@ 0xf8
 8019920:	fb18 f805 	smulbb	r8, r8, r5
 8019924:	ea41 1151 	orr.w	r1, r1, r1, lsr #5
 8019928:	10da      	asrs	r2, r3, #3
 801992a:	fb01 810c 	mla	r1, r1, ip, r8
 801992e:	00db      	lsls	r3, r3, #3
 8019930:	f89a 8001 	ldrb.w	r8, [sl, #1]
 8019934:	f002 02fc 	and.w	r2, r2, #252	@ 0xfc
 8019938:	b2db      	uxtb	r3, r3
 801993a:	fb18 f805 	smulbb	r8, r8, r5
 801993e:	fb1e fe05 	smulbb	lr, lr, r5
 8019942:	ea42 1292 	orr.w	r2, r2, r2, lsr #6
 8019946:	ea43 1353 	orr.w	r3, r3, r3, lsr #5
 801994a:	b289      	uxth	r1, r1
 801994c:	fb02 820c 	mla	r2, r2, ip, r8
 8019950:	fb03 e30c 	mla	r3, r3, ip, lr
 8019954:	b292      	uxth	r2, r2
 8019956:	b29b      	uxth	r3, r3
 8019958:	f101 0801 	add.w	r8, r1, #1
 801995c:	eb08 2111 	add.w	r1, r8, r1, lsr #8
 8019960:	f103 0e01 	add.w	lr, r3, #1
 8019964:	f102 0801 	add.w	r8, r2, #1
 8019968:	eb0e 2e13 	add.w	lr, lr, r3, lsr #8
 801996c:	eb08 2812 	add.w	r8, r8, r2, lsr #8
 8019970:	f401 4178 	and.w	r1, r1, #63488	@ 0xf800
 8019974:	f3ce 2ec4 	ubfx	lr, lr, #11, #5
 8019978:	ea4f 1858 	mov.w	r8, r8, lsr #5
 801997c:	ea4e 0101 	orr.w	r1, lr, r1
 8019980:	f408 68fc 	and.w	r8, r8, #2016	@ 0x7e0
 8019984:	ea41 0108 	orr.w	r1, r1, r8
 8019988:	f820 1b02 	strh.w	r1, [r0], #2
 801998c:	e7b6      	b.n	80198fc <_ZN8touchgfx8LCD16bpp17blitCopyL8_RGB888EPKhS2_RKNS_4RectES5_h+0x104>
 801998e:	9b0b      	ldr	r3, [sp, #44]	@ 0x2c
 8019990:	881b      	ldrh	r3, [r3, #0]
 8019992:	1b9b      	subs	r3, r3, r6
 8019994:	eb00 0043 	add.w	r0, r0, r3, lsl #1
 8019998:	f9bd 3034 	ldrsh.w	r3, [sp, #52]	@ 0x34
 801999c:	1b9b      	subs	r3, r3, r6
 801999e:	441c      	add	r4, r3
 80199a0:	e7a6      	b.n	80198f0 <_ZN8touchgfx8LCD16bpp17blitCopyL8_RGB888EPKhS2_RKNS_4RectES5_h+0xf8>
 80199a2:	491b      	ldr	r1, [pc, #108]	@ (8019a10 <_ZN8touchgfx8LCD16bpp17blitCopyL8_RGB888EPKhS2_RKNS_4RectES5_h+0x218>)
 80199a4:	eb00 0a4a 	add.w	sl, r0, sl, lsl #1
 80199a8:	2203      	movs	r2, #3
 80199aa:	2504      	movs	r5, #4
 80199ac:	4550      	cmp	r0, sl
 80199ae:	d228      	bcs.n	8019a02 <_ZN8touchgfx8LCD16bpp17blitCopyL8_RGB888EPKhS2_RKNS_4RectES5_h+0x20a>
 80199b0:	eb00 0c09 	add.w	ip, r0, r9
 80199b4:	4560      	cmp	r0, ip
 80199b6:	4623      	mov	r3, r4
 80199b8:	d219      	bcs.n	80199ee <_ZN8touchgfx8LCD16bpp17blitCopyL8_RGB888EPKhS2_RKNS_4RectES5_h+0x1f6>
 80199ba:	f893 e000 	ldrb.w	lr, [r3]
 80199be:	fb12 5e0e 	smlabb	lr, r2, lr, r5
 80199c2:	eb07 0b0e 	add.w	fp, r7, lr
 80199c6:	f817 e00e 	ldrb.w	lr, [r7, lr]
 80199ca:	f89b 3002 	ldrb.w	r3, [fp, #2]
 80199ce:	f89b b001 	ldrb.w	fp, [fp, #1]
 80199d2:	ea4f 0bcb 	mov.w	fp, fp, lsl #3
 80199d6:	ea01 2303 	and.w	r3, r1, r3, lsl #8
 80199da:	f40b 6bfc 	and.w	fp, fp, #2016	@ 0x7e0
 80199de:	ea43 030b 	orr.w	r3, r3, fp
 80199e2:	ea43 03de 	orr.w	r3, r3, lr, lsr #3
 80199e6:	3401      	adds	r4, #1
 80199e8:	f820 3b02 	strh.w	r3, [r0], #2
 80199ec:	e7e2      	b.n	80199b4 <_ZN8touchgfx8LCD16bpp17blitCopyL8_RGB888EPKhS2_RKNS_4RectES5_h+0x1bc>
 80199ee:	f8b8 3000 	ldrh.w	r3, [r8]
 80199f2:	1b9b      	subs	r3, r3, r6
 80199f4:	eb00 0043 	add.w	r0, r0, r3, lsl #1
 80199f8:	f9bd 3034 	ldrsh.w	r3, [sp, #52]	@ 0x34
 80199fc:	1b9b      	subs	r3, r3, r6
 80199fe:	441c      	add	r4, r3
 8019a00:	e7d4      	b.n	80199ac <_ZN8touchgfx8LCD16bpp17blitCopyL8_RGB888EPKhS2_RKNS_4RectES5_h+0x1b4>
 8019a02:	4b04      	ldr	r3, [pc, #16]	@ (8019a14 <_ZN8touchgfx8LCD16bpp17blitCopyL8_RGB888EPKhS2_RKNS_4RectES5_h+0x21c>)
 8019a04:	6818      	ldr	r0, [r3, #0]
 8019a06:	6803      	ldr	r3, [r0, #0]
 8019a08:	6adb      	ldr	r3, [r3, #44]	@ 0x2c
 8019a0a:	4798      	blx	r3
 8019a0c:	e750      	b.n	80198b0 <_ZN8touchgfx8LCD16bpp17blitCopyL8_RGB888EPKhS2_RKNS_4RectES5_h+0xb8>
 8019a0e:	bf00      	nop
 8019a10:	fffff800 	.word	0xfffff800
 8019a14:	20002dbc 	.word	0x20002dbc
 8019a18:	20002db6 	.word	0x20002db6

08019a1c <_ZN8touchgfx8LCD16bpp10blitCopyL8EPKhS2_RKNS_4RectES5_h>:
 8019a1c:	b4f0      	push	{r4, r5, r6, r7}
 8019a1e:	460c      	mov	r4, r1
 8019a20:	4611      	mov	r1, r2
 8019a22:	f89d 5014 	ldrb.w	r5, [sp, #20]
 8019a26:	780f      	ldrb	r7, [r1, #0]
 8019a28:	784e      	ldrb	r6, [r1, #1]
 8019a2a:	2f01      	cmp	r7, #1
 8019a2c:	461a      	mov	r2, r3
 8019a2e:	9b04      	ldr	r3, [sp, #16]
 8019a30:	d038      	beq.n	8019aa4 <_ZN8touchgfx8LCD16bpp10blitCopyL8EPKhS2_RKNS_4RectES5_h+0x88>
 8019a32:	d31f      	bcc.n	8019a74 <_ZN8touchgfx8LCD16bpp10blitCopyL8EPKhS2_RKNS_4RectES5_h+0x58>
 8019a34:	2f02      	cmp	r7, #2
 8019a36:	d14d      	bne.n	8019ad4 <_ZN8touchgfx8LCD16bpp10blitCopyL8EPKhS2_RKNS_4RectES5_h+0xb8>
 8019a38:	2e03      	cmp	r6, #3
 8019a3a:	d84b      	bhi.n	8019ad4 <_ZN8touchgfx8LCD16bpp10blitCopyL8EPKhS2_RKNS_4RectES5_h+0xb8>
 8019a3c:	e8df f006 	tbb	[pc, r6]
 8019a40:	17140702 	.word	0x17140702
 8019a44:	9504      	str	r5, [sp, #16]
 8019a46:	4620      	mov	r0, r4
 8019a48:	bcf0      	pop	{r4, r5, r6, r7}
 8019a4a:	f7ff be09 	b.w	8019660 <_ZN8touchgfx8LCD16bpp17blitCopyL8_RGB565EPKhS2_RKNS_4RectES5_h>
 8019a4e:	6fc0      	ldr	r0, [r0, #124]	@ 0x7c
 8019a50:	2800      	cmp	r0, #0
 8019a52:	d03f      	beq.n	8019ad4 <_ZN8touchgfx8LCD16bpp10blitCopyL8EPKhS2_RKNS_4RectES5_h+0xb8>
 8019a54:	6806      	ldr	r6, [r0, #0]
 8019a56:	e9cd 3504 	strd	r3, r5, [sp, #16]
 8019a5a:	68b5      	ldr	r5, [r6, #8]
 8019a5c:	4613      	mov	r3, r2
 8019a5e:	46ac      	mov	ip, r5
 8019a60:	460a      	mov	r2, r1
 8019a62:	4621      	mov	r1, r4
 8019a64:	bcf0      	pop	{r4, r5, r6, r7}
 8019a66:	4760      	bx	ip
 8019a68:	f8d0 0080 	ldr.w	r0, [r0, #128]	@ 0x80
 8019a6c:	e7f0      	b.n	8019a50 <_ZN8touchgfx8LCD16bpp10blitCopyL8EPKhS2_RKNS_4RectES5_h+0x34>
 8019a6e:	f8d0 0084 	ldr.w	r0, [r0, #132]	@ 0x84
 8019a72:	e7ed      	b.n	8019a50 <_ZN8touchgfx8LCD16bpp10blitCopyL8EPKhS2_RKNS_4RectES5_h+0x34>
 8019a74:	2e03      	cmp	r6, #3
 8019a76:	d82d      	bhi.n	8019ad4 <_ZN8touchgfx8LCD16bpp10blitCopyL8EPKhS2_RKNS_4RectES5_h+0xb8>
 8019a78:	e8df f006 	tbb	[pc, r6]
 8019a7c:	110e0702 	.word	0x110e0702
 8019a80:	9504      	str	r5, [sp, #16]
 8019a82:	4620      	mov	r0, r4
 8019a84:	bcf0      	pop	{r4, r5, r6, r7}
 8019a86:	f7ff bd05 	b.w	8019494 <_ZN8touchgfx8LCD16bpp19blitCopyL8_ARGB8888EPKhS2_RKNS_4RectES5_h>
 8019a8a:	6fc0      	ldr	r0, [r0, #124]	@ 0x7c
 8019a8c:	b310      	cbz	r0, 8019ad4 <_ZN8touchgfx8LCD16bpp10blitCopyL8EPKhS2_RKNS_4RectES5_h+0xb8>
 8019a8e:	6806      	ldr	r6, [r0, #0]
 8019a90:	e9cd 3504 	strd	r3, r5, [sp, #16]
 8019a94:	68f5      	ldr	r5, [r6, #12]
 8019a96:	e7e1      	b.n	8019a5c <_ZN8touchgfx8LCD16bpp10blitCopyL8EPKhS2_RKNS_4RectES5_h+0x40>
 8019a98:	f8d0 0080 	ldr.w	r0, [r0, #128]	@ 0x80
 8019a9c:	e7f6      	b.n	8019a8c <_ZN8touchgfx8LCD16bpp10blitCopyL8EPKhS2_RKNS_4RectES5_h+0x70>
 8019a9e:	f8d0 0084 	ldr.w	r0, [r0, #132]	@ 0x84
 8019aa2:	e7f3      	b.n	8019a8c <_ZN8touchgfx8LCD16bpp10blitCopyL8EPKhS2_RKNS_4RectES5_h+0x70>
 8019aa4:	2e03      	cmp	r6, #3
 8019aa6:	d815      	bhi.n	8019ad4 <_ZN8touchgfx8LCD16bpp10blitCopyL8EPKhS2_RKNS_4RectES5_h+0xb8>
 8019aa8:	e8df f006 	tbb	[pc, r6]
 8019aac:	110e0702 	.word	0x110e0702
 8019ab0:	9504      	str	r5, [sp, #16]
 8019ab2:	4620      	mov	r0, r4
 8019ab4:	bcf0      	pop	{r4, r5, r6, r7}
 8019ab6:	f7ff be9f 	b.w	80197f8 <_ZN8touchgfx8LCD16bpp17blitCopyL8_RGB888EPKhS2_RKNS_4RectES5_h>
 8019aba:	6fc0      	ldr	r0, [r0, #124]	@ 0x7c
 8019abc:	b150      	cbz	r0, 8019ad4 <_ZN8touchgfx8LCD16bpp10blitCopyL8EPKhS2_RKNS_4RectES5_h+0xb8>
 8019abe:	6806      	ldr	r6, [r0, #0]
 8019ac0:	e9cd 3504 	strd	r3, r5, [sp, #16]
 8019ac4:	6935      	ldr	r5, [r6, #16]
 8019ac6:	e7c9      	b.n	8019a5c <_ZN8touchgfx8LCD16bpp10blitCopyL8EPKhS2_RKNS_4RectES5_h+0x40>
 8019ac8:	f8d0 0080 	ldr.w	r0, [r0, #128]	@ 0x80
 8019acc:	e7f6      	b.n	8019abc <_ZN8touchgfx8LCD16bpp10blitCopyL8EPKhS2_RKNS_4RectES5_h+0xa0>
 8019ace:	f8d0 0084 	ldr.w	r0, [r0, #132]	@ 0x84
 8019ad2:	e7f3      	b.n	8019abc <_ZN8touchgfx8LCD16bpp10blitCopyL8EPKhS2_RKNS_4RectES5_h+0xa0>
 8019ad4:	bcf0      	pop	{r4, r5, r6, r7}
 8019ad6:	4770      	bx	lr

08019ad8 <_ZN8touchgfx8LCD16bpp21blitCopyAlphaPerPixelEPKtPKhRKNS_4RectES7_h>:
 8019ad8:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8019adc:	4604      	mov	r4, r0
 8019ade:	b087      	sub	sp, #28
 8019ae0:	6810      	ldr	r0, [r2, #0]
 8019ae2:	f89d a040 	ldrb.w	sl, [sp, #64]	@ 0x40
 8019ae6:	f8df 9238 	ldr.w	r9, [pc, #568]	@ 8019d20 <_ZN8touchgfx8LCD16bpp21blitCopyAlphaPerPixelEPKtPKhRKNS_4RectES7_h+0x248>
 8019aea:	460e      	mov	r6, r1
 8019aec:	6851      	ldr	r1, [r2, #4]
 8019aee:	ad02      	add	r5, sp, #8
 8019af0:	c503      	stmia	r5!, {r0, r1}
 8019af2:	6818      	ldr	r0, [r3, #0]
 8019af4:	6859      	ldr	r1, [r3, #4]
 8019af6:	ad04      	add	r5, sp, #16
 8019af8:	4617      	mov	r7, r2
 8019afa:	c503      	stmia	r5!, {r0, r1}
 8019afc:	a802      	add	r0, sp, #8
 8019afe:	f7f6 fd33 	bl	8010568 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectE>
 8019b02:	4639      	mov	r1, r7
 8019b04:	a804      	add	r0, sp, #16
 8019b06:	f7f6 fd57 	bl	80105b8 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectERKS1_>
 8019b0a:	f9bd 2010 	ldrsh.w	r2, [sp, #16]
 8019b0e:	f9bd 3012 	ldrsh.w	r3, [sp, #18]
 8019b12:	f8bd 100c 	ldrh.w	r1, [sp, #12]
 8019b16:	f9bd 8014 	ldrsh.w	r8, [sp, #20]
 8019b1a:	f9bd 5016 	ldrsh.w	r5, [sp, #22]
 8019b1e:	fb11 2103 	smlabb	r1, r1, r3, r2
 8019b22:	eb04 0441 	add.w	r4, r4, r1, lsl #1
 8019b26:	440e      	add	r6, r1
 8019b28:	f8bd 1008 	ldrh.w	r1, [sp, #8]
 8019b2c:	440a      	add	r2, r1
 8019b2e:	f8ad 2010 	strh.w	r2, [sp, #16]
 8019b32:	f8bd 200a 	ldrh.w	r2, [sp, #10]
 8019b36:	4413      	add	r3, r2
 8019b38:	f8ad 3012 	strh.w	r3, [sp, #18]
 8019b3c:	4b77      	ldr	r3, [pc, #476]	@ (8019d1c <_ZN8touchgfx8LCD16bpp21blitCopyAlphaPerPixelEPKtPKhRKNS_4RectES7_h+0x244>)
 8019b3e:	6818      	ldr	r0, [r3, #0]
 8019b40:	6803      	ldr	r3, [r0, #0]
 8019b42:	6a9b      	ldr	r3, [r3, #40]	@ 0x28
 8019b44:	4798      	blx	r3
 8019b46:	f8b9 b000 	ldrh.w	fp, [r9]
 8019b4a:	f9bd 3012 	ldrsh.w	r3, [sp, #18]
 8019b4e:	f9bd 2010 	ldrsh.w	r2, [sp, #16]
 8019b52:	fb0b 2303 	mla	r3, fp, r3, r2
 8019b56:	eb00 0043 	add.w	r0, r0, r3, lsl #1
 8019b5a:	f1ba 0fff 	cmp.w	sl, #255	@ 0xff
 8019b5e:	ea4f 0348 	mov.w	r3, r8, lsl #1
 8019b62:	fb05 f50b 	mul.w	r5, r5, fp
 8019b66:	9300      	str	r3, [sp, #0]
 8019b68:	d069      	beq.n	8019c3e <_ZN8touchgfx8LCD16bpp21blitCopyAlphaPerPixelEPKtPKhRKNS_4RectES7_h+0x166>
 8019b6a:	eb00 0b45 	add.w	fp, r0, r5, lsl #1
 8019b6e:	4558      	cmp	r0, fp
 8019b70:	f080 80cc 	bcs.w	8019d0c <_ZN8touchgfx8LCD16bpp21blitCopyAlphaPerPixelEPKtPKhRKNS_4RectES7_h+0x234>
 8019b74:	9b00      	ldr	r3, [sp, #0]
 8019b76:	18c3      	adds	r3, r0, r3
 8019b78:	9301      	str	r3, [sp, #4]
 8019b7a:	4631      	mov	r1, r6
 8019b7c:	9b01      	ldr	r3, [sp, #4]
 8019b7e:	4298      	cmp	r0, r3
 8019b80:	d24f      	bcs.n	8019c22 <_ZN8touchgfx8LCD16bpp21blitCopyAlphaPerPixelEPKtPKhRKNS_4RectES7_h+0x14a>
 8019b82:	f811 2b01 	ldrb.w	r2, [r1], #1
 8019b86:	2a00      	cmp	r2, #0
 8019b88:	d048      	beq.n	8019c1c <_ZN8touchgfx8LCD16bpp21blitCopyAlphaPerPixelEPKtPKhRKNS_4RectES7_h+0x144>
 8019b8a:	fb0a f202 	mul.w	r2, sl, r2
 8019b8e:	1c53      	adds	r3, r2, #1
 8019b90:	eb03 2312 	add.w	r3, r3, r2, lsr #8
 8019b94:	121b      	asrs	r3, r3, #8
 8019b96:	d041      	beq.n	8019c1c <_ZN8touchgfx8LCD16bpp21blitCopyAlphaPerPixelEPKtPKhRKNS_4RectES7_h+0x144>
 8019b98:	8802      	ldrh	r2, [r0, #0]
 8019b9a:	f8b4 c000 	ldrh.w	ip, [r4]
 8019b9e:	b29e      	uxth	r6, r3
 8019ba0:	1215      	asrs	r5, r2, #8
 8019ba2:	43db      	mvns	r3, r3
 8019ba4:	b2db      	uxtb	r3, r3
 8019ba6:	ea4f 272c 	mov.w	r7, ip, asr #8
 8019baa:	f005 05f8 	and.w	r5, r5, #248	@ 0xf8
 8019bae:	fb15 f503 	smulbb	r5, r5, r3
 8019bb2:	ea4f 0ee2 	mov.w	lr, r2, asr #3
 8019bb6:	f007 07f8 	and.w	r7, r7, #248	@ 0xf8
 8019bba:	00d2      	lsls	r2, r2, #3
 8019bbc:	fb07 5706 	mla	r7, r7, r6, r5
 8019bc0:	f00e 0efc 	and.w	lr, lr, #252	@ 0xfc
 8019bc4:	ea4f 05ec 	mov.w	r5, ip, asr #3
 8019bc8:	b2d2      	uxtb	r2, r2
 8019bca:	ea4f 0ccc 	mov.w	ip, ip, lsl #3
 8019bce:	b2bf      	uxth	r7, r7
 8019bd0:	fb1e fe03 	smulbb	lr, lr, r3
 8019bd4:	f005 05fc 	and.w	r5, r5, #252	@ 0xfc
 8019bd8:	fa5f fc8c 	uxtb.w	ip, ip
 8019bdc:	fb12 f203 	smulbb	r2, r2, r3
 8019be0:	fb05 e506 	mla	r5, r5, r6, lr
 8019be4:	fb0c 2c06 	mla	ip, ip, r6, r2
 8019be8:	f107 0e01 	add.w	lr, r7, #1
 8019bec:	fa1f fc8c 	uxth.w	ip, ip
 8019bf0:	eb0e 2717 	add.w	r7, lr, r7, lsr #8
 8019bf4:	f407 4e78 	and.w	lr, r7, #63488	@ 0xf800
 8019bf8:	f10c 0701 	add.w	r7, ip, #1
 8019bfc:	eb07 271c 	add.w	r7, r7, ip, lsr #8
 8019c00:	b2ad      	uxth	r5, r5
 8019c02:	f3c7 27c4 	ubfx	r7, r7, #11, #5
 8019c06:	ea47 070e 	orr.w	r7, r7, lr
 8019c0a:	f105 0e01 	add.w	lr, r5, #1
 8019c0e:	eb0e 2515 	add.w	r5, lr, r5, lsr #8
 8019c12:	096d      	lsrs	r5, r5, #5
 8019c14:	f405 65fc 	and.w	r5, r5, #2016	@ 0x7e0
 8019c18:	432f      	orrs	r7, r5
 8019c1a:	8007      	strh	r7, [r0, #0]
 8019c1c:	3002      	adds	r0, #2
 8019c1e:	3402      	adds	r4, #2
 8019c20:	e7ac      	b.n	8019b7c <_ZN8touchgfx8LCD16bpp21blitCopyAlphaPerPixelEPKtPKhRKNS_4RectES7_h+0xa4>
 8019c22:	f8b9 3000 	ldrh.w	r3, [r9]
 8019c26:	f9bd 600c 	ldrsh.w	r6, [sp, #12]
 8019c2a:	eba3 0308 	sub.w	r3, r3, r8
 8019c2e:	eba6 0608 	sub.w	r6, r6, r8
 8019c32:	eb04 0446 	add.w	r4, r4, r6, lsl #1
 8019c36:	eb00 0043 	add.w	r0, r0, r3, lsl #1
 8019c3a:	440e      	add	r6, r1
 8019c3c:	e797      	b.n	8019b6e <_ZN8touchgfx8LCD16bpp21blitCopyAlphaPerPixelEPKtPKhRKNS_4RectES7_h+0x96>
 8019c3e:	eb00 0545 	add.w	r5, r0, r5, lsl #1
 8019c42:	42a8      	cmp	r0, r5
 8019c44:	d262      	bcs.n	8019d0c <_ZN8touchgfx8LCD16bpp21blitCopyAlphaPerPixelEPKtPKhRKNS_4RectES7_h+0x234>
 8019c46:	9b00      	ldr	r3, [sp, #0]
 8019c48:	4631      	mov	r1, r6
 8019c4a:	eb00 0b03 	add.w	fp, r0, r3
 8019c4e:	4558      	cmp	r0, fp
 8019c50:	d24e      	bcs.n	8019cf0 <_ZN8touchgfx8LCD16bpp21blitCopyAlphaPerPixelEPKtPKhRKNS_4RectES7_h+0x218>
 8019c52:	f811 3b01 	ldrb.w	r3, [r1], #1
 8019c56:	b12b      	cbz	r3, 8019c64 <_ZN8touchgfx8LCD16bpp21blitCopyAlphaPerPixelEPKtPKhRKNS_4RectES7_h+0x18c>
 8019c58:	2bff      	cmp	r3, #255	@ 0xff
 8019c5a:	f8b4 e000 	ldrh.w	lr, [r4]
 8019c5e:	d104      	bne.n	8019c6a <_ZN8touchgfx8LCD16bpp21blitCopyAlphaPerPixelEPKtPKhRKNS_4RectES7_h+0x192>
 8019c60:	f8a0 e000 	strh.w	lr, [r0]
 8019c64:	3002      	adds	r0, #2
 8019c66:	3402      	adds	r4, #2
 8019c68:	e7f1      	b.n	8019c4e <_ZN8touchgfx8LCD16bpp21blitCopyAlphaPerPixelEPKtPKhRKNS_4RectES7_h+0x176>
 8019c6a:	8802      	ldrh	r2, [r0, #0]
 8019c6c:	b29f      	uxth	r7, r3
 8019c6e:	1216      	asrs	r6, r2, #8
 8019c70:	43db      	mvns	r3, r3
 8019c72:	b2db      	uxtb	r3, r3
 8019c74:	ea4f 2c2e 	mov.w	ip, lr, asr #8
 8019c78:	f006 06f8 	and.w	r6, r6, #248	@ 0xf8
 8019c7c:	fb16 f603 	smulbb	r6, r6, r3
 8019c80:	ea4f 0ae2 	mov.w	sl, r2, asr #3
 8019c84:	f00c 0cf8 	and.w	ip, ip, #248	@ 0xf8
 8019c88:	00d2      	lsls	r2, r2, #3
 8019c8a:	fb0c 6c07 	mla	ip, ip, r7, r6
 8019c8e:	b2d2      	uxtb	r2, r2
 8019c90:	ea4f 06ee 	mov.w	r6, lr, asr #3
 8019c94:	f00a 0afc 	and.w	sl, sl, #252	@ 0xfc
 8019c98:	ea4f 0ece 	mov.w	lr, lr, lsl #3
 8019c9c:	fb1a fa03 	smulbb	sl, sl, r3
 8019ca0:	fa1f fc8c 	uxth.w	ip, ip
 8019ca4:	fb12 f303 	smulbb	r3, r2, r3
 8019ca8:	f006 06fc 	and.w	r6, r6, #252	@ 0xfc
 8019cac:	fa5f fe8e 	uxtb.w	lr, lr
 8019cb0:	fb06 a607 	mla	r6, r6, r7, sl
 8019cb4:	f10c 0201 	add.w	r2, ip, #1
 8019cb8:	fb0e 3307 	mla	r3, lr, r7, r3
 8019cbc:	b2b6      	uxth	r6, r6
 8019cbe:	b29b      	uxth	r3, r3
 8019cc0:	eb02 2c1c 	add.w	ip, r2, ip, lsr #8
 8019cc4:	f40c 4278 	and.w	r2, ip, #63488	@ 0xf800
 8019cc8:	f106 0a01 	add.w	sl, r6, #1
 8019ccc:	f103 0c01 	add.w	ip, r3, #1
 8019cd0:	eb0c 2c13 	add.w	ip, ip, r3, lsr #8
 8019cd4:	eb0a 2616 	add.w	r6, sl, r6, lsr #8
 8019cd8:	f3cc 2cc4 	ubfx	ip, ip, #11, #5
 8019cdc:	0976      	lsrs	r6, r6, #5
 8019cde:	ea4c 0c02 	orr.w	ip, ip, r2
 8019ce2:	f406 66fc 	and.w	r6, r6, #2016	@ 0x7e0
 8019ce6:	ea4c 0c06 	orr.w	ip, ip, r6
 8019cea:	f8a0 c000 	strh.w	ip, [r0]
 8019cee:	e7b9      	b.n	8019c64 <_ZN8touchgfx8LCD16bpp21blitCopyAlphaPerPixelEPKtPKhRKNS_4RectES7_h+0x18c>
 8019cf0:	f8b9 3000 	ldrh.w	r3, [r9]
 8019cf4:	f9bd 600c 	ldrsh.w	r6, [sp, #12]
 8019cf8:	eba3 0308 	sub.w	r3, r3, r8
 8019cfc:	eba6 0608 	sub.w	r6, r6, r8
 8019d00:	eb04 0446 	add.w	r4, r4, r6, lsl #1
 8019d04:	eb00 0043 	add.w	r0, r0, r3, lsl #1
 8019d08:	440e      	add	r6, r1
 8019d0a:	e79a      	b.n	8019c42 <_ZN8touchgfx8LCD16bpp21blitCopyAlphaPerPixelEPKtPKhRKNS_4RectES7_h+0x16a>
 8019d0c:	4b03      	ldr	r3, [pc, #12]	@ (8019d1c <_ZN8touchgfx8LCD16bpp21blitCopyAlphaPerPixelEPKtPKhRKNS_4RectES7_h+0x244>)
 8019d0e:	6818      	ldr	r0, [r3, #0]
 8019d10:	6803      	ldr	r3, [r0, #0]
 8019d12:	6adb      	ldr	r3, [r3, #44]	@ 0x2c
 8019d14:	4798      	blx	r3
 8019d16:	b007      	add	sp, #28
 8019d18:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 8019d1c:	20002dbc 	.word	0x20002dbc
 8019d20:	20002db6 	.word	0x20002db6

08019d24 <_ZN8touchgfx8LCD16bpp17drawPartialBitmapERKNS_6BitmapEssRKNS_4RectEhb>:
 8019d24:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8019d28:	b089      	sub	sp, #36	@ 0x24
 8019d2a:	4607      	mov	r7, r0
 8019d2c:	f89d 604c 	ldrb.w	r6, [sp, #76]	@ 0x4c
 8019d30:	9c12      	ldr	r4, [sp, #72]	@ 0x48
 8019d32:	4688      	mov	r8, r1
 8019d34:	4692      	mov	sl, r2
 8019d36:	4699      	mov	r9, r3
 8019d38:	2e00      	cmp	r6, #0
 8019d3a:	d048      	beq.n	8019dce <_ZN8touchgfx8LCD16bpp17drawPartialBitmapERKNS_6BitmapEssRKNS_4RectEhb+0xaa>
 8019d3c:	4608      	mov	r0, r1
 8019d3e:	f7fa f827 	bl	8013d90 <_ZNK8touchgfx6Bitmap8getWidthEv>
 8019d42:	4605      	mov	r5, r0
 8019d44:	4640      	mov	r0, r8
 8019d46:	f7fa f857 	bl	8013df8 <_ZNK8touchgfx6Bitmap9getHeightEv>
 8019d4a:	f8ad 000e 	strh.w	r0, [sp, #14]
 8019d4e:	4640      	mov	r0, r8
 8019d50:	f8ad a008 	strh.w	sl, [sp, #8]
 8019d54:	f8ad 500c 	strh.w	r5, [sp, #12]
 8019d58:	f8ad 900a 	strh.w	r9, [sp, #10]
 8019d5c:	f7fa f90a 	bl	8013f74 <_ZNK8touchgfx6Bitmap7getDataEv>
 8019d60:	4605      	mov	r5, r0
 8019d62:	4640      	mov	r0, r8
 8019d64:	f7fa f936 	bl	8013fd4 <_ZNK8touchgfx6Bitmap12getExtraDataEv>
 8019d68:	4682      	mov	sl, r0
 8019d6a:	4640      	mov	r0, r8
 8019d6c:	f7fa f986 	bl	801407c <_ZNK8touchgfx6Bitmap9getFormatEv>
 8019d70:	2810      	cmp	r0, #16
 8019d72:	d82c      	bhi.n	8019dce <_ZN8touchgfx8LCD16bpp17drawPartialBitmapERKNS_6BitmapEssRKNS_4RectEhb+0xaa>
 8019d74:	e8df f010 	tbh	[pc, r0, lsl #1]
 8019d78:	00ba00ca 	.word	0x00ba00ca
 8019d7c:	002b0011 	.word	0x002b0011
 8019d80:	002b002b 	.word	0x002b002b
 8019d84:	002b002b 	.word	0x002b002b
 8019d88:	002b002b 	.word	0x002b002b
 8019d8c:	00c1002b 	.word	0x00c1002b
 8019d90:	002b002b 	.word	0x002b002b
 8019d94:	002b0180 	.word	0x002b0180
 8019d98:	0173      	.short	0x0173
 8019d9a:	4bbc      	ldr	r3, [pc, #752]	@ (801a08c <_ZN8touchgfx8LCD16bpp17drawPartialBitmapERKNS_6BitmapEssRKNS_4RectEhb+0x368>)
 8019d9c:	6818      	ldr	r0, [r3, #0]
 8019d9e:	6803      	ldr	r3, [r0, #0]
 8019da0:	6b9b      	ldr	r3, [r3, #56]	@ 0x38
 8019da2:	4798      	blx	r3
 8019da4:	2eff      	cmp	r6, #255	@ 0xff
 8019da6:	d101      	bne.n	8019dac <_ZN8touchgfx8LCD16bpp17drawPartialBitmapERKNS_6BitmapEssRKNS_4RectEhb+0x88>
 8019da8:	0683      	lsls	r3, r0, #26
 8019daa:	d506      	bpl.n	8019dba <_ZN8touchgfx8LCD16bpp17drawPartialBitmapERKNS_6BitmapEssRKNS_4RectEhb+0x96>
 8019dac:	4633      	mov	r3, r6
 8019dae:	4622      	mov	r2, r4
 8019db0:	a902      	add	r1, sp, #8
 8019db2:	4628      	mov	r0, r5
 8019db4:	f7ff f8fc 	bl	8018fb0 <_ZN8touchgfx8LCD16bpp16blitCopyARGB8888EPKmRKNS_4RectES5_h>
 8019db8:	e009      	b.n	8019dce <_ZN8touchgfx8LCD16bpp17drawPartialBitmapERKNS_6BitmapEssRKNS_4RectEhb+0xaa>
 8019dba:	4640      	mov	r0, r8
 8019dbc:	f7fa f8a2 	bl	8013f04 <_ZNK8touchgfx6Bitmap20hasTransparentPixelsEv>
 8019dc0:	b940      	cbnz	r0, 8019dd4 <_ZN8touchgfx8LCD16bpp17drawPartialBitmapERKNS_6BitmapEssRKNS_4RectEhb+0xb0>
 8019dc2:	4623      	mov	r3, r4
 8019dc4:	aa02      	add	r2, sp, #8
 8019dc6:	4629      	mov	r1, r5
 8019dc8:	4638      	mov	r0, r7
 8019dca:	f7ff f9d7 	bl	801917c <_ZNK8touchgfx8LCD16bpp21blitCopyARGB8888SolidEPKmRKNS_4RectES5_>
 8019dce:	b009      	add	sp, #36	@ 0x24
 8019dd0:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 8019dd4:	f10d 0918 	add.w	r9, sp, #24
 8019dd8:	4641      	mov	r1, r8
 8019dda:	4648      	mov	r0, r9
 8019ddc:	f7fa f840 	bl	8013e60 <_ZNK8touchgfx6Bitmap12getSolidRectEv>
 8019de0:	e899 0003 	ldmia.w	r9, {r0, r1}
 8019de4:	f10d 0810 	add.w	r8, sp, #16
 8019de8:	e888 0003 	stmia.w	r8, {r0, r1}
 8019dec:	4640      	mov	r0, r8
 8019dee:	4621      	mov	r1, r4
 8019df0:	f7f3 faca 	bl	800d388 <_ZN8touchgfx4RectaNERKS0_>
 8019df4:	4640      	mov	r0, r8
 8019df6:	f7f3 fb0a 	bl	800d40e <_ZNK8touchgfx4Rect7isEmptyEv>
 8019dfa:	2800      	cmp	r0, #0
 8019dfc:	d1d6      	bne.n	8019dac <_ZN8touchgfx8LCD16bpp17drawPartialBitmapERKNS_6BitmapEssRKNS_4RectEhb+0x88>
 8019dfe:	f9bd 3012 	ldrsh.w	r3, [sp, #18]
 8019e02:	f9b4 2002 	ldrsh.w	r2, [r4, #2]
 8019e06:	4293      	cmp	r3, r2
 8019e08:	dd12      	ble.n	8019e30 <_ZN8touchgfx8LCD16bpp17drawPartialBitmapERKNS_6BitmapEssRKNS_4RectEhb+0x10c>
 8019e0a:	1a9b      	subs	r3, r3, r2
 8019e0c:	f9b4 0000 	ldrsh.w	r0, [r4]
 8019e10:	f9b4 1004 	ldrsh.w	r1, [r4, #4]
 8019e14:	f8ad 0018 	strh.w	r0, [sp, #24]
 8019e18:	f8ad 201a 	strh.w	r2, [sp, #26]
 8019e1c:	f8ad 101c 	strh.w	r1, [sp, #28]
 8019e20:	f8ad 301e 	strh.w	r3, [sp, #30]
 8019e24:	464a      	mov	r2, r9
 8019e26:	4633      	mov	r3, r6
 8019e28:	a902      	add	r1, sp, #8
 8019e2a:	4628      	mov	r0, r5
 8019e2c:	f7ff f8c0 	bl	8018fb0 <_ZN8touchgfx8LCD16bpp16blitCopyARGB8888EPKmRKNS_4RectES5_h>
 8019e30:	f9bd 3010 	ldrsh.w	r3, [sp, #16]
 8019e34:	f9b4 2000 	ldrsh.w	r2, [r4]
 8019e38:	4293      	cmp	r3, r2
 8019e3a:	dd12      	ble.n	8019e62 <_ZN8touchgfx8LCD16bpp17drawPartialBitmapERKNS_6BitmapEssRKNS_4RectEhb+0x13e>
 8019e3c:	1a9b      	subs	r3, r3, r2
 8019e3e:	f9bd 0012 	ldrsh.w	r0, [sp, #18]
 8019e42:	f9bd 1016 	ldrsh.w	r1, [sp, #22]
 8019e46:	f8ad 2018 	strh.w	r2, [sp, #24]
 8019e4a:	f8ad 001a 	strh.w	r0, [sp, #26]
 8019e4e:	f8ad 301c 	strh.w	r3, [sp, #28]
 8019e52:	f8ad 101e 	strh.w	r1, [sp, #30]
 8019e56:	23ff      	movs	r3, #255	@ 0xff
 8019e58:	464a      	mov	r2, r9
 8019e5a:	a902      	add	r1, sp, #8
 8019e5c:	4628      	mov	r0, r5
 8019e5e:	f7ff f8a7 	bl	8018fb0 <_ZN8touchgfx8LCD16bpp16blitCopyARGB8888EPKmRKNS_4RectES5_h>
 8019e62:	4643      	mov	r3, r8
 8019e64:	aa02      	add	r2, sp, #8
 8019e66:	4629      	mov	r1, r5
 8019e68:	4638      	mov	r0, r7
 8019e6a:	f7ff f987 	bl	801917c <_ZNK8touchgfx8LCD16bpp21blitCopyARGB8888SolidEPKmRKNS_4RectES5_>
 8019e6e:	88a2      	ldrh	r2, [r4, #4]
 8019e70:	8823      	ldrh	r3, [r4, #0]
 8019e72:	f8bd 1014 	ldrh.w	r1, [sp, #20]
 8019e76:	4413      	add	r3, r2
 8019e78:	f8bd 2010 	ldrh.w	r2, [sp, #16]
 8019e7c:	440a      	add	r2, r1
 8019e7e:	b29b      	uxth	r3, r3
 8019e80:	b292      	uxth	r2, r2
 8019e82:	b211      	sxth	r1, r2
 8019e84:	b218      	sxth	r0, r3
 8019e86:	4288      	cmp	r0, r1
 8019e88:	dd12      	ble.n	8019eb0 <_ZN8touchgfx8LCD16bpp17drawPartialBitmapERKNS_6BitmapEssRKNS_4RectEhb+0x18c>
 8019e8a:	1a9b      	subs	r3, r3, r2
 8019e8c:	f9bd 0016 	ldrsh.w	r0, [sp, #22]
 8019e90:	f9bd 6012 	ldrsh.w	r6, [sp, #18]
 8019e94:	f8ad 1018 	strh.w	r1, [sp, #24]
 8019e98:	f8ad 301c 	strh.w	r3, [sp, #28]
 8019e9c:	f8ad 001e 	strh.w	r0, [sp, #30]
 8019ea0:	23ff      	movs	r3, #255	@ 0xff
 8019ea2:	464a      	mov	r2, r9
 8019ea4:	a902      	add	r1, sp, #8
 8019ea6:	4628      	mov	r0, r5
 8019ea8:	f8ad 601a 	strh.w	r6, [sp, #26]
 8019eac:	f7ff f880 	bl	8018fb0 <_ZN8touchgfx8LCD16bpp16blitCopyARGB8888EPKmRKNS_4RectES5_h>
 8019eb0:	88e2      	ldrh	r2, [r4, #6]
 8019eb2:	8863      	ldrh	r3, [r4, #2]
 8019eb4:	f8bd 1016 	ldrh.w	r1, [sp, #22]
 8019eb8:	4413      	add	r3, r2
 8019eba:	f8bd 2012 	ldrh.w	r2, [sp, #18]
 8019ebe:	440a      	add	r2, r1
 8019ec0:	b29b      	uxth	r3, r3
 8019ec2:	b292      	uxth	r2, r2
 8019ec4:	b211      	sxth	r1, r2
 8019ec6:	b218      	sxth	r0, r3
 8019ec8:	4288      	cmp	r0, r1
 8019eca:	dd80      	ble.n	8019dce <_ZN8touchgfx8LCD16bpp17drawPartialBitmapERKNS_6BitmapEssRKNS_4RectEhb+0xaa>
 8019ecc:	1a9b      	subs	r3, r3, r2
 8019ece:	f9b4 6000 	ldrsh.w	r6, [r4]
 8019ed2:	f9b4 0004 	ldrsh.w	r0, [r4, #4]
 8019ed6:	f8ad 301e 	strh.w	r3, [sp, #30]
 8019eda:	f8ad 6018 	strh.w	r6, [sp, #24]
 8019ede:	f8ad 101a 	strh.w	r1, [sp, #26]
 8019ee2:	f8ad 001c 	strh.w	r0, [sp, #28]
 8019ee6:	23ff      	movs	r3, #255	@ 0xff
 8019ee8:	464a      	mov	r2, r9
 8019eea:	e761      	b.n	8019db0 <_ZN8touchgfx8LCD16bpp17drawPartialBitmapERKNS_6BitmapEssRKNS_4RectEhb+0x8c>
 8019eec:	4633      	mov	r3, r6
 8019eee:	4622      	mov	r2, r4
 8019ef0:	a902      	add	r1, sp, #8
 8019ef2:	4628      	mov	r0, r5
 8019ef4:	f7ff f9b2 	bl	801925c <_ZN8touchgfx8LCD16bpp14blitCopyRGB888EPKhRKNS_4RectES5_h>
 8019ef8:	e769      	b.n	8019dce <_ZN8touchgfx8LCD16bpp17drawPartialBitmapERKNS_6BitmapEssRKNS_4RectEhb+0xaa>
 8019efa:	e9cd 4600 	strd	r4, r6, [sp]
 8019efe:	ab02      	add	r3, sp, #8
 8019f00:	4652      	mov	r2, sl
 8019f02:	4629      	mov	r1, r5
 8019f04:	4638      	mov	r0, r7
 8019f06:	f7ff fd89 	bl	8019a1c <_ZN8touchgfx8LCD16bpp10blitCopyL8EPKhS2_RKNS_4RectES5_h>
 8019f0a:	e760      	b.n	8019dce <_ZN8touchgfx8LCD16bpp17drawPartialBitmapERKNS_6BitmapEssRKNS_4RectEhb+0xaa>
 8019f0c:	4640      	mov	r0, r8
 8019f0e:	f7f9 fff9 	bl	8013f04 <_ZNK8touchgfx6Bitmap20hasTransparentPixelsEv>
 8019f12:	b948      	cbnz	r0, 8019f28 <_ZN8touchgfx8LCD16bpp17drawPartialBitmapERKNS_6BitmapEssRKNS_4RectEhb+0x204>
 8019f14:	683b      	ldr	r3, [r7, #0]
 8019f16:	e9cd 6000 	strd	r6, r0, [sp]
 8019f1a:	aa02      	add	r2, sp, #8
 8019f1c:	68de      	ldr	r6, [r3, #12]
 8019f1e:	4629      	mov	r1, r5
 8019f20:	4623      	mov	r3, r4
 8019f22:	4638      	mov	r0, r7
 8019f24:	47b0      	blx	r6
 8019f26:	e752      	b.n	8019dce <_ZN8touchgfx8LCD16bpp17drawPartialBitmapERKNS_6BitmapEssRKNS_4RectEhb+0xaa>
 8019f28:	f10d 0918 	add.w	r9, sp, #24
 8019f2c:	4641      	mov	r1, r8
 8019f2e:	4648      	mov	r0, r9
 8019f30:	f7f9 ff96 	bl	8013e60 <_ZNK8touchgfx6Bitmap12getSolidRectEv>
 8019f34:	e899 0003 	ldmia.w	r9, {r0, r1}
 8019f38:	f10d 0810 	add.w	r8, sp, #16
 8019f3c:	e888 0003 	stmia.w	r8, {r0, r1}
 8019f40:	4640      	mov	r0, r8
 8019f42:	4621      	mov	r1, r4
 8019f44:	f7f3 fa20 	bl	800d388 <_ZN8touchgfx4RectaNERKS0_>
 8019f48:	4640      	mov	r0, r8
 8019f4a:	f7f3 fa60 	bl	800d40e <_ZNK8touchgfx4Rect7isEmptyEv>
 8019f4e:	b138      	cbz	r0, 8019f60 <_ZN8touchgfx8LCD16bpp17drawPartialBitmapERKNS_6BitmapEssRKNS_4RectEhb+0x23c>
 8019f50:	9600      	str	r6, [sp, #0]
 8019f52:	4623      	mov	r3, r4
 8019f54:	aa02      	add	r2, sp, #8
 8019f56:	4651      	mov	r1, sl
 8019f58:	4628      	mov	r0, r5
 8019f5a:	f7ff fdbd 	bl	8019ad8 <_ZN8touchgfx8LCD16bpp21blitCopyAlphaPerPixelEPKtPKhRKNS_4RectES7_h>
 8019f5e:	e736      	b.n	8019dce <_ZN8touchgfx8LCD16bpp17drawPartialBitmapERKNS_6BitmapEssRKNS_4RectEhb+0xaa>
 8019f60:	683b      	ldr	r3, [r7, #0]
 8019f62:	e9cd 6000 	strd	r6, r0, [sp]
 8019f66:	aa02      	add	r2, sp, #8
 8019f68:	f8d3 b00c 	ldr.w	fp, [r3, #12]
 8019f6c:	4629      	mov	r1, r5
 8019f6e:	4643      	mov	r3, r8
 8019f70:	4638      	mov	r0, r7
 8019f72:	47d8      	blx	fp
 8019f74:	f9bd 3012 	ldrsh.w	r3, [sp, #18]
 8019f78:	f9b4 2002 	ldrsh.w	r2, [r4, #2]
 8019f7c:	4293      	cmp	r3, r2
 8019f7e:	dd13      	ble.n	8019fa8 <_ZN8touchgfx8LCD16bpp17drawPartialBitmapERKNS_6BitmapEssRKNS_4RectEhb+0x284>
 8019f80:	f9b4 0000 	ldrsh.w	r0, [r4]
 8019f84:	f9b4 1004 	ldrsh.w	r1, [r4, #4]
 8019f88:	f8ad 0018 	strh.w	r0, [sp, #24]
 8019f8c:	1a9b      	subs	r3, r3, r2
 8019f8e:	f8ad 201a 	strh.w	r2, [sp, #26]
 8019f92:	f8ad 101c 	strh.w	r1, [sp, #28]
 8019f96:	f8ad 301e 	strh.w	r3, [sp, #30]
 8019f9a:	9600      	str	r6, [sp, #0]
 8019f9c:	464b      	mov	r3, r9
 8019f9e:	aa02      	add	r2, sp, #8
 8019fa0:	4651      	mov	r1, sl
 8019fa2:	4628      	mov	r0, r5
 8019fa4:	f7ff fd98 	bl	8019ad8 <_ZN8touchgfx8LCD16bpp21blitCopyAlphaPerPixelEPKtPKhRKNS_4RectES7_h>
 8019fa8:	f9bd 3010 	ldrsh.w	r3, [sp, #16]
 8019fac:	f9b4 2000 	ldrsh.w	r2, [r4]
 8019fb0:	4293      	cmp	r3, r2
 8019fb2:	dd13      	ble.n	8019fdc <_ZN8touchgfx8LCD16bpp17drawPartialBitmapERKNS_6BitmapEssRKNS_4RectEhb+0x2b8>
 8019fb4:	1a9b      	subs	r3, r3, r2
 8019fb6:	f9bd 0012 	ldrsh.w	r0, [sp, #18]
 8019fba:	f9bd 1016 	ldrsh.w	r1, [sp, #22]
 8019fbe:	f8ad 2018 	strh.w	r2, [sp, #24]
 8019fc2:	f8ad 001a 	strh.w	r0, [sp, #26]
 8019fc6:	f8ad 301c 	strh.w	r3, [sp, #28]
 8019fca:	f8ad 101e 	strh.w	r1, [sp, #30]
 8019fce:	9600      	str	r6, [sp, #0]
 8019fd0:	464b      	mov	r3, r9
 8019fd2:	aa02      	add	r2, sp, #8
 8019fd4:	4651      	mov	r1, sl
 8019fd6:	4628      	mov	r0, r5
 8019fd8:	f7ff fd7e 	bl	8019ad8 <_ZN8touchgfx8LCD16bpp21blitCopyAlphaPerPixelEPKtPKhRKNS_4RectES7_h>
 8019fdc:	88a2      	ldrh	r2, [r4, #4]
 8019fde:	8823      	ldrh	r3, [r4, #0]
 8019fe0:	f8bd 1014 	ldrh.w	r1, [sp, #20]
 8019fe4:	4413      	add	r3, r2
 8019fe6:	f8bd 2010 	ldrh.w	r2, [sp, #16]
 8019fea:	440a      	add	r2, r1
 8019fec:	b29b      	uxth	r3, r3
 8019fee:	b292      	uxth	r2, r2
 8019ff0:	b211      	sxth	r1, r2
 8019ff2:	b218      	sxth	r0, r3
 8019ff4:	4288      	cmp	r0, r1
 8019ff6:	dd13      	ble.n	801a020 <_ZN8touchgfx8LCD16bpp17drawPartialBitmapERKNS_6BitmapEssRKNS_4RectEhb+0x2fc>
 8019ff8:	1a9b      	subs	r3, r3, r2
 8019ffa:	f9bd 0016 	ldrsh.w	r0, [sp, #22]
 8019ffe:	f9bd 7012 	ldrsh.w	r7, [sp, #18]
 801a002:	f8ad 1018 	strh.w	r1, [sp, #24]
 801a006:	f8ad 301c 	strh.w	r3, [sp, #28]
 801a00a:	f8ad 001e 	strh.w	r0, [sp, #30]
 801a00e:	9600      	str	r6, [sp, #0]
 801a010:	464b      	mov	r3, r9
 801a012:	aa02      	add	r2, sp, #8
 801a014:	4651      	mov	r1, sl
 801a016:	4628      	mov	r0, r5
 801a018:	f8ad 701a 	strh.w	r7, [sp, #26]
 801a01c:	f7ff fd5c 	bl	8019ad8 <_ZN8touchgfx8LCD16bpp21blitCopyAlphaPerPixelEPKtPKhRKNS_4RectES7_h>
 801a020:	88e2      	ldrh	r2, [r4, #6]
 801a022:	8863      	ldrh	r3, [r4, #2]
 801a024:	f8bd 1016 	ldrh.w	r1, [sp, #22]
 801a028:	4413      	add	r3, r2
 801a02a:	f8bd 2012 	ldrh.w	r2, [sp, #18]
 801a02e:	440a      	add	r2, r1
 801a030:	b29b      	uxth	r3, r3
 801a032:	b292      	uxth	r2, r2
 801a034:	b211      	sxth	r1, r2
 801a036:	b218      	sxth	r0, r3
 801a038:	4288      	cmp	r0, r1
 801a03a:	f77f aec8 	ble.w	8019dce <_ZN8touchgfx8LCD16bpp17drawPartialBitmapERKNS_6BitmapEssRKNS_4RectEhb+0xaa>
 801a03e:	f9b4 7000 	ldrsh.w	r7, [r4]
 801a042:	f9b4 0004 	ldrsh.w	r0, [r4, #4]
 801a046:	f8ad 7018 	strh.w	r7, [sp, #24]
 801a04a:	1a9b      	subs	r3, r3, r2
 801a04c:	f8ad 301e 	strh.w	r3, [sp, #30]
 801a050:	f8ad 101a 	strh.w	r1, [sp, #26]
 801a054:	f8ad 001c 	strh.w	r0, [sp, #28]
 801a058:	9600      	str	r6, [sp, #0]
 801a05a:	464b      	mov	r3, r9
 801a05c:	e77a      	b.n	8019f54 <_ZN8touchgfx8LCD16bpp17drawPartialBitmapERKNS_6BitmapEssRKNS_4RectEhb+0x230>
 801a05e:	f8d7 0088 	ldr.w	r0, [r7, #136]	@ 0x88
 801a062:	2800      	cmp	r0, #0
 801a064:	f43f aeb3 	beq.w	8019dce <_ZN8touchgfx8LCD16bpp17drawPartialBitmapERKNS_6BitmapEssRKNS_4RectEhb+0xaa>
 801a068:	6803      	ldr	r3, [r0, #0]
 801a06a:	9600      	str	r6, [sp, #0]
 801a06c:	68de      	ldr	r6, [r3, #12]
 801a06e:	4623      	mov	r3, r4
 801a070:	aa02      	add	r2, sp, #8
 801a072:	4629      	mov	r1, r5
 801a074:	47b0      	blx	r6
 801a076:	e6aa      	b.n	8019dce <_ZN8touchgfx8LCD16bpp17drawPartialBitmapERKNS_6BitmapEssRKNS_4RectEhb+0xaa>
 801a078:	f8d7 0088 	ldr.w	r0, [r7, #136]	@ 0x88
 801a07c:	2800      	cmp	r0, #0
 801a07e:	f43f aea6 	beq.w	8019dce <_ZN8touchgfx8LCD16bpp17drawPartialBitmapERKNS_6BitmapEssRKNS_4RectEhb+0xaa>
 801a082:	6803      	ldr	r3, [r0, #0]
 801a084:	9600      	str	r6, [sp, #0]
 801a086:	689e      	ldr	r6, [r3, #8]
 801a088:	e7f1      	b.n	801a06e <_ZN8touchgfx8LCD16bpp17drawPartialBitmapERKNS_6BitmapEssRKNS_4RectEhb+0x34a>
 801a08a:	bf00      	nop
 801a08c:	20002dbc 	.word	0x20002dbc

0801a090 <_ZN8touchgfx8LCD16bpp9nextPixelEbNS_12TextRotationE>:
 801a090:	b180      	cbz	r0, 801a0b4 <_ZN8touchgfx8LCD16bpp9nextPixelEbNS_12TextRotationE+0x24>
 801a092:	2903      	cmp	r1, #3
 801a094:	d81c      	bhi.n	801a0d0 <_ZN8touchgfx8LCD16bpp9nextPixelEbNS_12TextRotationE+0x40>
 801a096:	e8df f001 	tbb	[pc, r1]
 801a09a:	1d02      	.short	0x1d02
 801a09c:	1f08      	.short	0x1f08
 801a09e:	4b10      	ldr	r3, [pc, #64]	@ (801a0e0 <_ZN8touchgfx8LCD16bpp9nextPixelEbNS_12TextRotationE+0x50>)
 801a0a0:	8818      	ldrh	r0, [r3, #0]
 801a0a2:	f3c0 000e 	ubfx	r0, r0, #0, #15
 801a0a6:	4240      	negs	r0, r0
 801a0a8:	4770      	bx	lr
 801a0aa:	4b0d      	ldr	r3, [pc, #52]	@ (801a0e0 <_ZN8touchgfx8LCD16bpp9nextPixelEbNS_12TextRotationE+0x50>)
 801a0ac:	8818      	ldrh	r0, [r3, #0]
 801a0ae:	f3c0 000e 	ubfx	r0, r0, #0, #15
 801a0b2:	4770      	bx	lr
 801a0b4:	2903      	cmp	r1, #3
 801a0b6:	d80b      	bhi.n	801a0d0 <_ZN8touchgfx8LCD16bpp9nextPixelEbNS_12TextRotationE+0x40>
 801a0b8:	a301      	add	r3, pc, #4	@ (adr r3, 801a0c0 <_ZN8touchgfx8LCD16bpp9nextPixelEbNS_12TextRotationE+0x30>)
 801a0ba:	f853 f021 	ldr.w	pc, [r3, r1, lsl #2]
 801a0be:	bf00      	nop
 801a0c0:	0801a0d5 	.word	0x0801a0d5
 801a0c4:	0801a0ab 	.word	0x0801a0ab
 801a0c8:	0801a0d9 	.word	0x0801a0d9
 801a0cc:	0801a09f 	.word	0x0801a09f
 801a0d0:	2000      	movs	r0, #0
 801a0d2:	4770      	bx	lr
 801a0d4:	2001      	movs	r0, #1
 801a0d6:	4770      	bx	lr
 801a0d8:	f04f 30ff 	mov.w	r0, #4294967295
 801a0dc:	4770      	bx	lr
 801a0de:	bf00      	nop
 801a0e0:	20002db6 	.word	0x20002db6

0801a0e4 <_ZN8touchgfx8LCD16bpp8nextLineEbNS_12TextRotationE>:
 801a0e4:	b180      	cbz	r0, 801a108 <_ZN8touchgfx8LCD16bpp8nextLineEbNS_12TextRotationE+0x24>
 801a0e6:	2903      	cmp	r1, #3
 801a0e8:	d81c      	bhi.n	801a124 <_ZN8touchgfx8LCD16bpp8nextLineEbNS_12TextRotationE+0x40>
 801a0ea:	e8df f001 	tbb	[pc, r1]
 801a0ee:	021d      	.short	0x021d
 801a0f0:	071f      	.short	0x071f
 801a0f2:	4b10      	ldr	r3, [pc, #64]	@ (801a134 <_ZN8touchgfx8LCD16bpp8nextLineEbNS_12TextRotationE+0x50>)
 801a0f4:	8818      	ldrh	r0, [r3, #0]
 801a0f6:	f3c0 000e 	ubfx	r0, r0, #0, #15
 801a0fa:	4770      	bx	lr
 801a0fc:	4b0d      	ldr	r3, [pc, #52]	@ (801a134 <_ZN8touchgfx8LCD16bpp8nextLineEbNS_12TextRotationE+0x50>)
 801a0fe:	8818      	ldrh	r0, [r3, #0]
 801a100:	f3c0 000e 	ubfx	r0, r0, #0, #15
 801a104:	4240      	negs	r0, r0
 801a106:	4770      	bx	lr
 801a108:	2903      	cmp	r1, #3
 801a10a:	d80b      	bhi.n	801a124 <_ZN8touchgfx8LCD16bpp8nextLineEbNS_12TextRotationE+0x40>
 801a10c:	a301      	add	r3, pc, #4	@ (adr r3, 801a114 <_ZN8touchgfx8LCD16bpp8nextLineEbNS_12TextRotationE+0x30>)
 801a10e:	f853 f021 	ldr.w	pc, [r3, r1, lsl #2]
 801a112:	bf00      	nop
 801a114:	0801a0f3 	.word	0x0801a0f3
 801a118:	0801a12d 	.word	0x0801a12d
 801a11c:	0801a0fd 	.word	0x0801a0fd
 801a120:	0801a129 	.word	0x0801a129
 801a124:	2000      	movs	r0, #0
 801a126:	4770      	bx	lr
 801a128:	2001      	movs	r0, #1
 801a12a:	4770      	bx	lr
 801a12c:	f04f 30ff 	mov.w	r0, #4294967295
 801a130:	4770      	bx	lr
 801a132:	bf00      	nop
 801a134:	20002db6 	.word	0x20002db6

0801a138 <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE>:
 801a138:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 801a13c:	b099      	sub	sp, #100	@ 0x64
 801a13e:	910b      	str	r1, [sp, #44]	@ 0x2c
 801a140:	a914      	add	r1, sp, #80	@ 0x50
 801a142:	e881 000c 	stmia.w	r1, {r2, r3}
 801a146:	e9dd 2126 	ldrd	r2, r1, [sp, #152]	@ 0x98
 801a14a:	f9bd 308c 	ldrsh.w	r3, [sp, #140]	@ 0x8c
 801a14e:	f891 900d 	ldrb.w	r9, [r1, #13]
 801a152:	9309      	str	r3, [sp, #36]	@ 0x24
 801a154:	f89d 30a4 	ldrb.w	r3, [sp, #164]	@ 0xa4
 801a158:	9310      	str	r3, [sp, #64]	@ 0x40
 801a15a:	ea4f 1749 	mov.w	r7, r9, lsl #5
 801a15e:	f89d 30b0 	ldrb.w	r3, [sp, #176]	@ 0xb0
 801a162:	930c      	str	r3, [sp, #48]	@ 0x30
 801a164:	f407 7380 	and.w	r3, r7, #256	@ 0x100
 801a168:	798f      	ldrb	r7, [r1, #6]
 801a16a:	f9bd 4088 	ldrsh.w	r4, [sp, #136]	@ 0x88
 801a16e:	f8bd 5090 	ldrh.w	r5, [sp, #144]	@ 0x90
 801a172:	f8bd 6094 	ldrh.w	r6, [sp, #148]	@ 0x94
 801a176:	f89d 80ac 	ldrb.w	r8, [sp, #172]	@ 0xac
 801a17a:	f89d a0b4 	ldrb.w	sl, [sp, #180]	@ 0xb4
 801a17e:	431f      	orrs	r7, r3
 801a180:	f000 8195 	beq.w	801a4ae <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x376>
 801a184:	ea4f 1909 	mov.w	r9, r9, lsl #4
 801a188:	f409 7380 	and.w	r3, r9, #256	@ 0x100
 801a18c:	f891 9007 	ldrb.w	r9, [r1, #7]
 801a190:	ea59 0903 	orrs.w	r9, r9, r3
 801a194:	f000 818b 	beq.w	801a4ae <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x376>
 801a198:	f991 3009 	ldrsb.w	r3, [r1, #9]
 801a19c:	b29b      	uxth	r3, r3
 801a19e:	2d00      	cmp	r5, #0
 801a1a0:	f000 812e 	beq.w	801a400 <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x2c8>
 801a1a4:	1aed      	subs	r5, r5, r3
 801a1a6:	b2ad      	uxth	r5, r5
 801a1a8:	042b      	lsls	r3, r5, #16
 801a1aa:	d502      	bpl.n	801a1b2 <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x7a>
 801a1ac:	1b64      	subs	r4, r4, r5
 801a1ae:	b224      	sxth	r4, r4
 801a1b0:	2500      	movs	r5, #0
 801a1b2:	f9b2 1000 	ldrsh.w	r1, [r2]
 801a1b6:	f8cd 9028 	str.w	r9, [sp, #40]	@ 0x28
 801a1ba:	428c      	cmp	r4, r1
 801a1bc:	b28b      	uxth	r3, r1
 801a1be:	bfbf      	itttt	lt
 801a1c0:	18ed      	addlt	r5, r5, r3
 801a1c2:	1b2c      	sublt	r4, r5, r4
 801a1c4:	b2a5      	uxthlt	r5, r4
 801a1c6:	460c      	movlt	r4, r1
 801a1c8:	8891      	ldrh	r1, [r2, #4]
 801a1ca:	440b      	add	r3, r1
 801a1cc:	b21b      	sxth	r3, r3
 801a1ce:	930f      	str	r3, [sp, #60]	@ 0x3c
 801a1d0:	88d3      	ldrh	r3, [r2, #6]
 801a1d2:	8852      	ldrh	r2, [r2, #2]
 801a1d4:	4413      	add	r3, r2
 801a1d6:	b21b      	sxth	r3, r3
 801a1d8:	930d      	str	r3, [sp, #52]	@ 0x34
 801a1da:	4bbe      	ldr	r3, [pc, #760]	@ (801a4d4 <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x39c>)
 801a1dc:	9a09      	ldr	r2, [sp, #36]	@ 0x24
 801a1de:	f893 b000 	ldrb.w	fp, [r3]
 801a1e2:	f10b 3cff 	add.w	ip, fp, #4294967295
 801a1e6:	f1dc 0300 	rsbs	r3, ip, #0
 801a1ea:	eb43 030c 	adc.w	r3, r3, ip
 801a1ee:	930e      	str	r3, [sp, #56]	@ 0x38
 801a1f0:	4621      	mov	r1, r4
 801a1f2:	4653      	mov	r3, sl
 801a1f4:	a814      	add	r0, sp, #80	@ 0x50
 801a1f6:	f7f6 f82c 	bl	8010252 <_ZN8touchgfx3LCD5realXERKNS_4RectEssNS_12TextRotationE>
 801a1fa:	4621      	mov	r1, r4
 801a1fc:	f8ad 005c 	strh.w	r0, [sp, #92]	@ 0x5c
 801a200:	4653      	mov	r3, sl
 801a202:	9a09      	ldr	r2, [sp, #36]	@ 0x24
 801a204:	a814      	add	r0, sp, #80	@ 0x50
 801a206:	f7f6 f841 	bl	801028c <_ZN8touchgfx3LCD5realYERKNS_4RectEssNS_12TextRotationE>
 801a20a:	a918      	add	r1, sp, #96	@ 0x60
 801a20c:	f821 0d02 	strh.w	r0, [r1, #-2]!
 801a210:	a817      	add	r0, sp, #92	@ 0x5c
 801a212:	f7f6 f967 	bl	80104e4 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERsS1_>
 801a216:	f1ba 0f00 	cmp.w	sl, #0
 801a21a:	f040 80f4 	bne.w	801a406 <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x2ce>
 801a21e:	f1bb 0f01 	cmp.w	fp, #1
 801a222:	f040 80f8 	bne.w	801a416 <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x2de>
 801a226:	9b10      	ldr	r3, [sp, #64]	@ 0x40
 801a228:	2b00      	cmp	r3, #0
 801a22a:	f040 8145 	bne.w	801a4b8 <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x380>
 801a22e:	b2ba      	uxth	r2, r7
 801a230:	b905      	cbnz	r5, 801a234 <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0xfc>
 801a232:	b16e      	cbz	r6, 801a250 <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x118>
 801a234:	fb06 5302 	mla	r3, r6, r2, r5
 801a238:	9828      	ldr	r0, [sp, #160]	@ 0xa0
 801a23a:	fb08 f303 	mul.w	r3, r8, r3
 801a23e:	4631      	mov	r1, r6
 801a240:	f003 0607 	and.w	r6, r3, #7
 801a244:	eb00 03d3 	add.w	r3, r0, r3, lsr #3
 801a248:	9328      	str	r3, [sp, #160]	@ 0xa0
 801a24a:	eba9 0301 	sub.w	r3, r9, r1
 801a24e:	930a      	str	r3, [sp, #40]	@ 0x28
 801a250:	4651      	mov	r1, sl
 801a252:	980e      	ldr	r0, [sp, #56]	@ 0x38
 801a254:	f7ff ff1c 	bl	801a090 <_ZN8touchgfx8LCD16bpp9nextPixelEbNS_12TextRotationE>
 801a258:	4681      	mov	r9, r0
 801a25a:	980e      	ldr	r0, [sp, #56]	@ 0x38
 801a25c:	f7ff ff42 	bl	801a0e4 <_ZN8touchgfx8LCD16bpp8nextLineEbNS_12TextRotationE>
 801a260:	9b0d      	ldr	r3, [sp, #52]	@ 0x34
 801a262:	9909      	ldr	r1, [sp, #36]	@ 0x24
 801a264:	eba3 0a01 	sub.w	sl, r3, r1
 801a268:	9b0a      	ldr	r3, [sp, #40]	@ 0x28
 801a26a:	459a      	cmp	sl, r3
 801a26c:	bfa8      	it	ge
 801a26e:	469a      	movge	sl, r3
 801a270:	f1ba 0f00 	cmp.w	sl, #0
 801a274:	4683      	mov	fp, r0
 801a276:	f340 811a 	ble.w	801a4ae <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x376>
 801a27a:	9b0f      	ldr	r3, [sp, #60]	@ 0x3c
 801a27c:	1b64      	subs	r4, r4, r5
 801a27e:	1b1c      	subs	r4, r3, r4
 801a280:	42bc      	cmp	r4, r7
 801a282:	bfd4      	ite	le
 801a284:	ebc5 0504 	rsble	r5, r5, r4
 801a288:	ebc5 0507 	rsbgt	r5, r5, r7
 801a28c:	2d00      	cmp	r5, #0
 801a28e:	f340 810e 	ble.w	801a4ae <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x376>
 801a292:	1b52      	subs	r2, r2, r5
 801a294:	fb08 f302 	mul.w	r3, r8, r2
 801a298:	930f      	str	r3, [sp, #60]	@ 0x3c
 801a29a:	9b0b      	ldr	r3, [sp, #44]	@ 0x2c
 801a29c:	2b00      	cmp	r3, #0
 801a29e:	f040 8116 	bne.w	801a4ce <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x396>
 801a2a2:	4b8d      	ldr	r3, [pc, #564]	@ (801a4d8 <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x3a0>)
 801a2a4:	6818      	ldr	r0, [r3, #0]
 801a2a6:	6803      	ldr	r3, [r0, #0]
 801a2a8:	6a9b      	ldr	r3, [r3, #40]	@ 0x28
 801a2aa:	4798      	blx	r3
 801a2ac:	2301      	movs	r3, #1
 801a2ae:	fa03 f308 	lsl.w	r3, r3, r8
 801a2b2:	4a8a      	ldr	r2, [pc, #552]	@ (801a4dc <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x3a4>)
 801a2b4:	3b01      	subs	r3, #1
 801a2b6:	b2db      	uxtb	r3, r3
 801a2b8:	8811      	ldrh	r1, [r2, #0]
 801a2ba:	930e      	str	r3, [sp, #56]	@ 0x38
 801a2bc:	f9bd 205c 	ldrsh.w	r2, [sp, #92]	@ 0x5c
 801a2c0:	f9bd 305e 	ldrsh.w	r3, [sp, #94]	@ 0x5e
 801a2c4:	fb01 2303 	mla	r3, r1, r3, r2
 801a2c8:	eb00 0343 	add.w	r3, r0, r3, lsl #1
 801a2cc:	930a      	str	r3, [sp, #40]	@ 0x28
 801a2ce:	9b2a      	ldr	r3, [sp, #168]	@ 0xa8
 801a2d0:	f3c3 4307 	ubfx	r3, r3, #16, #8
 801a2d4:	9313      	str	r3, [sp, #76]	@ 0x4c
 801a2d6:	9b2a      	ldr	r3, [sp, #168]	@ 0xa8
 801a2d8:	0a19      	lsrs	r1, r3, #8
 801a2da:	b2cb      	uxtb	r3, r1
 801a2dc:	9312      	str	r3, [sp, #72]	@ 0x48
 801a2de:	9b2a      	ldr	r3, [sp, #168]	@ 0xa8
 801a2e0:	b2db      	uxtb	r3, r3
 801a2e2:	9311      	str	r3, [sp, #68]	@ 0x44
 801a2e4:	9b2a      	ldr	r3, [sp, #168]	@ 0xa8
 801a2e6:	095a      	lsrs	r2, r3, #5
 801a2e8:	4b7d      	ldr	r3, [pc, #500]	@ (801a4e0 <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x3a8>)
 801a2ea:	f402 62fc 	and.w	r2, r2, #2016	@ 0x7e0
 801a2ee:	400b      	ands	r3, r1
 801a2f0:	4313      	orrs	r3, r2
 801a2f2:	9a2a      	ldr	r2, [sp, #168]	@ 0xa8
 801a2f4:	f3c2 02c4 	ubfx	r2, r2, #3, #5
 801a2f8:	4313      	orrs	r3, r2
 801a2fa:	b29b      	uxth	r3, r3
 801a2fc:	9310      	str	r3, [sp, #64]	@ 0x40
 801a2fe:	9b28      	ldr	r3, [sp, #160]	@ 0xa0
 801a300:	781a      	ldrb	r2, [r3, #0]
 801a302:	ea4f 0349 	mov.w	r3, r9, lsl #1
 801a306:	4132      	asrs	r2, r6
 801a308:	fb05 b919 	mls	r9, r5, r9, fp
 801a30c:	fb03 fb05 	mul.w	fp, r3, r5
 801a310:	b2d2      	uxtb	r2, r2
 801a312:	930d      	str	r3, [sp, #52]	@ 0x34
 801a314:	eb0b 0b49 	add.w	fp, fp, r9, lsl #1
 801a318:	f11a 3aff 	adds.w	sl, sl, #4294967295
 801a31c:	f0c0 80f5 	bcc.w	801a50a <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x3d2>
 801a320:	f8dd c028 	ldr.w	ip, [sp, #40]	@ 0x28
 801a324:	46ae      	mov	lr, r5
 801a326:	f11e 3eff 	adds.w	lr, lr, #4294967295
 801a32a:	f0c0 80dd 	bcc.w	801a4e8 <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x3b0>
 801a32e:	9b0e      	ldr	r3, [sp, #56]	@ 0x38
 801a330:	4013      	ands	r3, r2
 801a332:	d055      	beq.n	801a3e0 <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x2a8>
 801a334:	20ff      	movs	r0, #255	@ 0xff
 801a336:	990e      	ldr	r1, [sp, #56]	@ 0x38
 801a338:	fb90 f1f1 	sdiv	r1, r0, r1
 801a33c:	434b      	muls	r3, r1
 801a33e:	2bfe      	cmp	r3, #254	@ 0xfe
 801a340:	dd03      	ble.n	801a34a <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x212>
 801a342:	990c      	ldr	r1, [sp, #48]	@ 0x30
 801a344:	4281      	cmp	r1, r0
 801a346:	f000 80cd 	beq.w	801a4e4 <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x3ac>
 801a34a:	990c      	ldr	r1, [sp, #48]	@ 0x30
 801a34c:	f8bc 4000 	ldrh.w	r4, [ip]
 801a350:	fb11 f303 	smulbb	r3, r1, r3
 801a354:	b29b      	uxth	r3, r3
 801a356:	1c59      	adds	r1, r3, #1
 801a358:	eb01 2313 	add.w	r3, r1, r3, lsr #8
 801a35c:	f3c3 2307 	ubfx	r3, r3, #8, #8
 801a360:	b29f      	uxth	r7, r3
 801a362:	43db      	mvns	r3, r3
 801a364:	b2db      	uxtb	r3, r3
 801a366:	9309      	str	r3, [sp, #36]	@ 0x24
 801a368:	9b13      	ldr	r3, [sp, #76]	@ 0x4c
 801a36a:	1220      	asrs	r0, r4, #8
 801a36c:	fb13 f907 	smulbb	r9, r3, r7
 801a370:	f000 00f8 	and.w	r0, r0, #248	@ 0xf8
 801a374:	9b09      	ldr	r3, [sp, #36]	@ 0x24
 801a376:	ea40 1050 	orr.w	r0, r0, r0, lsr #5
 801a37a:	fb00 9003 	mla	r0, r0, r3, r9
 801a37e:	9b12      	ldr	r3, [sp, #72]	@ 0x48
 801a380:	10e1      	asrs	r1, r4, #3
 801a382:	fb13 f907 	smulbb	r9, r3, r7
 801a386:	f001 01fc 	and.w	r1, r1, #252	@ 0xfc
 801a38a:	9b09      	ldr	r3, [sp, #36]	@ 0x24
 801a38c:	ea41 1191 	orr.w	r1, r1, r1, lsr #6
 801a390:	fb01 9103 	mla	r1, r1, r3, r9
 801a394:	9b11      	ldr	r3, [sp, #68]	@ 0x44
 801a396:	00e4      	lsls	r4, r4, #3
 801a398:	fb13 f707 	smulbb	r7, r3, r7
 801a39c:	b2e4      	uxtb	r4, r4
 801a39e:	9b09      	ldr	r3, [sp, #36]	@ 0x24
 801a3a0:	ea44 1454 	orr.w	r4, r4, r4, lsr #5
 801a3a4:	fb04 7403 	mla	r4, r4, r3, r7
 801a3a8:	b280      	uxth	r0, r0
 801a3aa:	b2a4      	uxth	r4, r4
 801a3ac:	1c43      	adds	r3, r0, #1
 801a3ae:	f104 0901 	add.w	r9, r4, #1
 801a3b2:	eb03 2010 	add.w	r0, r3, r0, lsr #8
 801a3b6:	eb09 2914 	add.w	r9, r9, r4, lsr #8
 801a3ba:	b289      	uxth	r1, r1
 801a3bc:	f3c9 29c4 	ubfx	r9, r9, #11, #5
 801a3c0:	f400 4078 	and.w	r0, r0, #63488	@ 0xf800
 801a3c4:	ea49 0000 	orr.w	r0, r9, r0
 801a3c8:	f101 0901 	add.w	r9, r1, #1
 801a3cc:	eb09 2911 	add.w	r9, r9, r1, lsr #8
 801a3d0:	ea4f 1959 	mov.w	r9, r9, lsr #5
 801a3d4:	f409 69fc 	and.w	r9, r9, #2016	@ 0x7e0
 801a3d8:	ea40 0009 	orr.w	r0, r0, r9
 801a3dc:	f8ac 0000 	strh.w	r0, [ip]
 801a3e0:	4446      	add	r6, r8
 801a3e2:	b2b6      	uxth	r6, r6
 801a3e4:	2e07      	cmp	r6, #7
 801a3e6:	bf81      	itttt	hi
 801a3e8:	9b28      	ldrhi	r3, [sp, #160]	@ 0xa0
 801a3ea:	785a      	ldrbhi	r2, [r3, #1]
 801a3ec:	3301      	addhi	r3, #1
 801a3ee:	9328      	strhi	r3, [sp, #160]	@ 0xa0
 801a3f0:	9b0d      	ldr	r3, [sp, #52]	@ 0x34
 801a3f2:	bf9a      	itte	ls
 801a3f4:	fa42 f208 	asrls.w	r2, r2, r8
 801a3f8:	b2d2      	uxtbls	r2, r2
 801a3fa:	2600      	movhi	r6, #0
 801a3fc:	449c      	add	ip, r3
 801a3fe:	e792      	b.n	801a326 <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x1ee>
 801a400:	441c      	add	r4, r3
 801a402:	b224      	sxth	r4, r4
 801a404:	e6d5      	b.n	801a1b2 <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x7a>
 801a406:	f1ba 0f01 	cmp.w	sl, #1
 801a40a:	f47f af0c 	bne.w	801a226 <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0xee>
 801a40e:	f1bb 0f01 	cmp.w	fp, #1
 801a412:	f47f af08 	bne.w	801a226 <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0xee>
 801a416:	f8df b0c0 	ldr.w	fp, [pc, #192]	@ 801a4d8 <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x3a0>
 801a41a:	f8db 0000 	ldr.w	r0, [fp]
 801a41e:	6803      	ldr	r3, [r0, #0]
 801a420:	6b9b      	ldr	r3, [r3, #56]	@ 0x38
 801a422:	4798      	blx	r3
 801a424:	f410 7380 	ands.w	r3, r0, #256	@ 0x100
 801a428:	465a      	mov	r2, fp
 801a42a:	d006      	beq.n	801a43a <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x302>
 801a42c:	f1b8 0f04 	cmp.w	r8, #4
 801a430:	d140      	bne.n	801a4b4 <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x37c>
 801a432:	9b10      	ldr	r3, [sp, #64]	@ 0x40
 801a434:	3300      	adds	r3, #0
 801a436:	bf18      	it	ne
 801a438:	2301      	movne	r3, #1
 801a43a:	0580      	lsls	r0, r0, #22
 801a43c:	d56e      	bpl.n	801a51c <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x3e4>
 801a43e:	f1b8 0f08 	cmp.w	r8, #8
 801a442:	d16b      	bne.n	801a51c <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x3e4>
 801a444:	2b00      	cmp	r3, #0
 801a446:	bf0c      	ite	eq
 801a448:	f44f 7100 	moveq.w	r1, #512	@ 0x200
 801a44c:	f44f 7180 	movne.w	r1, #256	@ 0x100
 801a450:	2d00      	cmp	r5, #0
 801a452:	f47f aee8 	bne.w	801a226 <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0xee>
 801a456:	2e00      	cmp	r6, #0
 801a458:	f47f aee5 	bne.w	801a226 <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0xee>
 801a45c:	980f      	ldr	r0, [sp, #60]	@ 0x3c
 801a45e:	19e3      	adds	r3, r4, r7
 801a460:	4283      	cmp	r3, r0
 801a462:	f73f aee0 	bgt.w	801a226 <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0xee>
 801a466:	9b09      	ldr	r3, [sp, #36]	@ 0x24
 801a468:	980d      	ldr	r0, [sp, #52]	@ 0x34
 801a46a:	444b      	add	r3, r9
 801a46c:	4283      	cmp	r3, r0
 801a46e:	f73f aeda 	bgt.w	801a226 <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0xee>
 801a472:	6810      	ldr	r0, [r2, #0]
 801a474:	f8bd 305e 	ldrh.w	r3, [sp, #94]	@ 0x5e
 801a478:	6804      	ldr	r4, [r0, #0]
 801a47a:	f8bd 205c 	ldrh.w	r2, [sp, #92]	@ 0x5c
 801a47e:	b2bf      	uxth	r7, r7
 801a480:	f1b8 0f08 	cmp.w	r8, #8
 801a484:	f04f 0500 	mov.w	r5, #0
 801a488:	bf18      	it	ne
 801a48a:	3701      	addne	r7, #1
 801a48c:	e9cd 1505 	strd	r1, r5, [sp, #20]
 801a490:	990c      	ldr	r1, [sp, #48]	@ 0x30
 801a492:	9104      	str	r1, [sp, #16]
 801a494:	bf18      	it	ne
 801a496:	f027 0701 	bicne.w	r7, r7, #1
 801a49a:	992a      	ldr	r1, [sp, #168]	@ 0xa8
 801a49c:	bf18      	it	ne
 801a49e:	b2bf      	uxthne	r7, r7
 801a4a0:	e9cd 7102 	strd	r7, r1, [sp, #8]
 801a4a4:	e9cd 7900 	strd	r7, r9, [sp]
 801a4a8:	9928      	ldr	r1, [sp, #160]	@ 0xa0
 801a4aa:	6d64      	ldr	r4, [r4, #84]	@ 0x54
 801a4ac:	47a0      	blx	r4
 801a4ae:	b019      	add	sp, #100	@ 0x64
 801a4b0:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 801a4b4:	2300      	movs	r3, #0
 801a4b6:	e7c0      	b.n	801a43a <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x302>
 801a4b8:	2208      	movs	r2, #8
 801a4ba:	fb92 f3f8 	sdiv	r3, r2, r8
 801a4be:	1e5a      	subs	r2, r3, #1
 801a4c0:	443a      	add	r2, r7
 801a4c2:	fb92 f2f3 	sdiv	r2, r2, r3
 801a4c6:	fb12 f203 	smulbb	r2, r2, r3
 801a4ca:	b292      	uxth	r2, r2
 801a4cc:	e6b0      	b.n	801a230 <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0xf8>
 801a4ce:	980b      	ldr	r0, [sp, #44]	@ 0x2c
 801a4d0:	e6ec      	b.n	801a2ac <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x174>
 801a4d2:	bf00      	nop
 801a4d4:	20002db4 	.word	0x20002db4
 801a4d8:	20002dbc 	.word	0x20002dbc
 801a4dc:	20002db6 	.word	0x20002db6
 801a4e0:	00fff800 	.word	0x00fff800
 801a4e4:	9810      	ldr	r0, [sp, #64]	@ 0x40
 801a4e6:	e779      	b.n	801a3dc <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x2a4>
 801a4e8:	9b0f      	ldr	r3, [sp, #60]	@ 0x3c
 801a4ea:	b153      	cbz	r3, 801a502 <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x3ca>
 801a4ec:	441e      	add	r6, r3
 801a4ee:	9b28      	ldr	r3, [sp, #160]	@ 0xa0
 801a4f0:	b2b6      	uxth	r6, r6
 801a4f2:	eb03 03d6 	add.w	r3, r3, r6, lsr #3
 801a4f6:	f006 0607 	and.w	r6, r6, #7
 801a4fa:	781a      	ldrb	r2, [r3, #0]
 801a4fc:	9328      	str	r3, [sp, #160]	@ 0xa0
 801a4fe:	4132      	asrs	r2, r6
 801a500:	b2d2      	uxtb	r2, r2
 801a502:	9b0a      	ldr	r3, [sp, #40]	@ 0x28
 801a504:	445b      	add	r3, fp
 801a506:	930a      	str	r3, [sp, #40]	@ 0x28
 801a508:	e706      	b.n	801a318 <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x1e0>
 801a50a:	9b0b      	ldr	r3, [sp, #44]	@ 0x2c
 801a50c:	2b00      	cmp	r3, #0
 801a50e:	d1ce      	bne.n	801a4ae <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x376>
 801a510:	4b05      	ldr	r3, [pc, #20]	@ (801a528 <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x3f0>)
 801a512:	6818      	ldr	r0, [r3, #0]
 801a514:	6803      	ldr	r3, [r0, #0]
 801a516:	6adb      	ldr	r3, [r3, #44]	@ 0x2c
 801a518:	4798      	blx	r3
 801a51a:	e7c8      	b.n	801a4ae <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x376>
 801a51c:	2b00      	cmp	r3, #0
 801a51e:	f43f ae82 	beq.w	801a226 <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0xee>
 801a522:	f44f 7180 	mov.w	r1, #256	@ 0x100
 801a526:	e793      	b.n	801a450 <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x318>
 801a528:	20002dbc 	.word	0x20002dbc

0801a52c <_ZN8touchgfx8LCD16bpp50enableTextureMapperL8_RGB565_BilinearInterpolationEv>:
 801a52c:	b538      	push	{r3, r4, r5, lr}
 801a52e:	4c15      	ldr	r4, [pc, #84]	@ (801a584 <_ZN8touchgfx8LCD16bpp50enableTextureMapperL8_RGB565_BilinearInterpolationEv+0x58>)
 801a530:	7823      	ldrb	r3, [r4, #0]
 801a532:	f3bf 8f5b 	dmb	ish
 801a536:	07da      	lsls	r2, r3, #31
 801a538:	4605      	mov	r5, r0
 801a53a:	d40b      	bmi.n	801a554 <_ZN8touchgfx8LCD16bpp50enableTextureMapperL8_RGB565_BilinearInterpolationEv+0x28>
 801a53c:	4620      	mov	r0, r4
 801a53e:	f007 fefc 	bl	802233a <__cxa_guard_acquire>
 801a542:	b138      	cbz	r0, 801a554 <_ZN8touchgfx8LCD16bpp50enableTextureMapperL8_RGB565_BilinearInterpolationEv+0x28>
 801a544:	4620      	mov	r0, r4
 801a546:	f007 ff04 	bl	8022352 <__cxa_guard_release>
 801a54a:	4a0f      	ldr	r2, [pc, #60]	@ (801a588 <_ZN8touchgfx8LCD16bpp50enableTextureMapperL8_RGB565_BilinearInterpolationEv+0x5c>)
 801a54c:	490f      	ldr	r1, [pc, #60]	@ (801a58c <_ZN8touchgfx8LCD16bpp50enableTextureMapperL8_RGB565_BilinearInterpolationEv+0x60>)
 801a54e:	4810      	ldr	r0, [pc, #64]	@ (801a590 <_ZN8touchgfx8LCD16bpp50enableTextureMapperL8_RGB565_BilinearInterpolationEv+0x64>)
 801a550:	f007 feec 	bl	802232c <__aeabi_atexit>
 801a554:	4c0f      	ldr	r4, [pc, #60]	@ (801a594 <_ZN8touchgfx8LCD16bpp50enableTextureMapperL8_RGB565_BilinearInterpolationEv+0x68>)
 801a556:	7823      	ldrb	r3, [r4, #0]
 801a558:	f3bf 8f5b 	dmb	ish
 801a55c:	07db      	lsls	r3, r3, #31
 801a55e:	d40b      	bmi.n	801a578 <_ZN8touchgfx8LCD16bpp50enableTextureMapperL8_RGB565_BilinearInterpolationEv+0x4c>
 801a560:	4620      	mov	r0, r4
 801a562:	f007 feea 	bl	802233a <__cxa_guard_acquire>
 801a566:	b138      	cbz	r0, 801a578 <_ZN8touchgfx8LCD16bpp50enableTextureMapperL8_RGB565_BilinearInterpolationEv+0x4c>
 801a568:	4620      	mov	r0, r4
 801a56a:	f007 fef2 	bl	8022352 <__cxa_guard_release>
 801a56e:	4a06      	ldr	r2, [pc, #24]	@ (801a588 <_ZN8touchgfx8LCD16bpp50enableTextureMapperL8_RGB565_BilinearInterpolationEv+0x5c>)
 801a570:	4909      	ldr	r1, [pc, #36]	@ (801a598 <_ZN8touchgfx8LCD16bpp50enableTextureMapperL8_RGB565_BilinearInterpolationEv+0x6c>)
 801a572:	480a      	ldr	r0, [pc, #40]	@ (801a59c <_ZN8touchgfx8LCD16bpp50enableTextureMapperL8_RGB565_BilinearInterpolationEv+0x70>)
 801a574:	f007 feda 	bl	802232c <__aeabi_atexit>
 801a578:	4b05      	ldr	r3, [pc, #20]	@ (801a590 <_ZN8touchgfx8LCD16bpp50enableTextureMapperL8_RGB565_BilinearInterpolationEv+0x64>)
 801a57a:	616b      	str	r3, [r5, #20]
 801a57c:	4b07      	ldr	r3, [pc, #28]	@ (801a59c <_ZN8touchgfx8LCD16bpp50enableTextureMapperL8_RGB565_BilinearInterpolationEv+0x70>)
 801a57e:	61ab      	str	r3, [r5, #24]
 801a580:	bd38      	pop	{r3, r4, r5, pc}
 801a582:	bf00      	nop
 801a584:	20002e98 	.word	0x20002e98
 801a588:	20000000 	.word	0x20000000
 801a58c:	080166f3 	.word	0x080166f3
 801a590:	20000070 	.word	0x20000070
 801a594:	20002e9c 	.word	0x20002e9c
 801a598:	080166f1 	.word	0x080166f1
 801a59c:	20000074 	.word	0x20000074

0801a5a0 <_ZN8touchgfx8LCD16bpp44enableTextureMapperL8_RGB565_NearestNeighborEv>:
 801a5a0:	b538      	push	{r3, r4, r5, lr}
 801a5a2:	4c15      	ldr	r4, [pc, #84]	@ (801a5f8 <_ZN8touchgfx8LCD16bpp44enableTextureMapperL8_RGB565_NearestNeighborEv+0x58>)
 801a5a4:	7823      	ldrb	r3, [r4, #0]
 801a5a6:	f3bf 8f5b 	dmb	ish
 801a5aa:	07da      	lsls	r2, r3, #31
 801a5ac:	4605      	mov	r5, r0
 801a5ae:	d40b      	bmi.n	801a5c8 <_ZN8touchgfx8LCD16bpp44enableTextureMapperL8_RGB565_NearestNeighborEv+0x28>
 801a5b0:	4620      	mov	r0, r4
 801a5b2:	f007 fec2 	bl	802233a <__cxa_guard_acquire>
 801a5b6:	b138      	cbz	r0, 801a5c8 <_ZN8touchgfx8LCD16bpp44enableTextureMapperL8_RGB565_NearestNeighborEv+0x28>
 801a5b8:	4620      	mov	r0, r4
 801a5ba:	f007 feca 	bl	8022352 <__cxa_guard_release>
 801a5be:	4a0f      	ldr	r2, [pc, #60]	@ (801a5fc <_ZN8touchgfx8LCD16bpp44enableTextureMapperL8_RGB565_NearestNeighborEv+0x5c>)
 801a5c0:	490f      	ldr	r1, [pc, #60]	@ (801a600 <_ZN8touchgfx8LCD16bpp44enableTextureMapperL8_RGB565_NearestNeighborEv+0x60>)
 801a5c2:	4810      	ldr	r0, [pc, #64]	@ (801a604 <_ZN8touchgfx8LCD16bpp44enableTextureMapperL8_RGB565_NearestNeighborEv+0x64>)
 801a5c4:	f007 feb2 	bl	802232c <__aeabi_atexit>
 801a5c8:	4c0f      	ldr	r4, [pc, #60]	@ (801a608 <_ZN8touchgfx8LCD16bpp44enableTextureMapperL8_RGB565_NearestNeighborEv+0x68>)
 801a5ca:	7823      	ldrb	r3, [r4, #0]
 801a5cc:	f3bf 8f5b 	dmb	ish
 801a5d0:	07db      	lsls	r3, r3, #31
 801a5d2:	d40b      	bmi.n	801a5ec <_ZN8touchgfx8LCD16bpp44enableTextureMapperL8_RGB565_NearestNeighborEv+0x4c>
 801a5d4:	4620      	mov	r0, r4
 801a5d6:	f007 feb0 	bl	802233a <__cxa_guard_acquire>
 801a5da:	b138      	cbz	r0, 801a5ec <_ZN8touchgfx8LCD16bpp44enableTextureMapperL8_RGB565_NearestNeighborEv+0x4c>
 801a5dc:	4620      	mov	r0, r4
 801a5de:	f007 feb8 	bl	8022352 <__cxa_guard_release>
 801a5e2:	4a06      	ldr	r2, [pc, #24]	@ (801a5fc <_ZN8touchgfx8LCD16bpp44enableTextureMapperL8_RGB565_NearestNeighborEv+0x5c>)
 801a5e4:	4909      	ldr	r1, [pc, #36]	@ (801a60c <_ZN8touchgfx8LCD16bpp44enableTextureMapperL8_RGB565_NearestNeighborEv+0x6c>)
 801a5e6:	480a      	ldr	r0, [pc, #40]	@ (801a610 <_ZN8touchgfx8LCD16bpp44enableTextureMapperL8_RGB565_NearestNeighborEv+0x70>)
 801a5e8:	f007 fea0 	bl	802232c <__aeabi_atexit>
 801a5ec:	4b05      	ldr	r3, [pc, #20]	@ (801a604 <_ZN8touchgfx8LCD16bpp44enableTextureMapperL8_RGB565_NearestNeighborEv+0x64>)
 801a5ee:	60eb      	str	r3, [r5, #12]
 801a5f0:	4b07      	ldr	r3, [pc, #28]	@ (801a610 <_ZN8touchgfx8LCD16bpp44enableTextureMapperL8_RGB565_NearestNeighborEv+0x70>)
 801a5f2:	612b      	str	r3, [r5, #16]
 801a5f4:	bd38      	pop	{r3, r4, r5, pc}
 801a5f6:	bf00      	nop
 801a5f8:	20002e70 	.word	0x20002e70
 801a5fc:	20000000 	.word	0x20000000
 801a600:	080166f7 	.word	0x080166f7
 801a604:	20000048 	.word	0x20000048
 801a608:	20002e74 	.word	0x20002e74
 801a60c:	080166f5 	.word	0x080166f5
 801a610:	2000004c 	.word	0x2000004c

0801a614 <_ZN8touchgfx8LCD16bpp28enableTextureMapperL8_RGB565Ev>:
 801a614:	b510      	push	{r4, lr}
 801a616:	4604      	mov	r4, r0
 801a618:	f7ff ff88 	bl	801a52c <_ZN8touchgfx8LCD16bpp50enableTextureMapperL8_RGB565_BilinearInterpolationEv>
 801a61c:	4620      	mov	r0, r4
 801a61e:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
 801a622:	f7ff bfbd 	b.w	801a5a0 <_ZN8touchgfx8LCD16bpp44enableTextureMapperL8_RGB565_NearestNeighborEv>
	...

0801a628 <_ZN8touchgfx8LCD16bpp50enableTextureMapperL8_RGB888_BilinearInterpolationEv>:
 801a628:	b538      	push	{r3, r4, r5, lr}
 801a62a:	4c15      	ldr	r4, [pc, #84]	@ (801a680 <_ZN8touchgfx8LCD16bpp50enableTextureMapperL8_RGB888_BilinearInterpolationEv+0x58>)
 801a62c:	7823      	ldrb	r3, [r4, #0]
 801a62e:	f3bf 8f5b 	dmb	ish
 801a632:	07da      	lsls	r2, r3, #31
 801a634:	4605      	mov	r5, r0
 801a636:	d40b      	bmi.n	801a650 <_ZN8touchgfx8LCD16bpp50enableTextureMapperL8_RGB888_BilinearInterpolationEv+0x28>
 801a638:	4620      	mov	r0, r4
 801a63a:	f007 fe7e 	bl	802233a <__cxa_guard_acquire>
 801a63e:	b138      	cbz	r0, 801a650 <_ZN8touchgfx8LCD16bpp50enableTextureMapperL8_RGB888_BilinearInterpolationEv+0x28>
 801a640:	4620      	mov	r0, r4
 801a642:	f007 fe86 	bl	8022352 <__cxa_guard_release>
 801a646:	4a0f      	ldr	r2, [pc, #60]	@ (801a684 <_ZN8touchgfx8LCD16bpp50enableTextureMapperL8_RGB888_BilinearInterpolationEv+0x5c>)
 801a648:	490f      	ldr	r1, [pc, #60]	@ (801a688 <_ZN8touchgfx8LCD16bpp50enableTextureMapperL8_RGB888_BilinearInterpolationEv+0x60>)
 801a64a:	4810      	ldr	r0, [pc, #64]	@ (801a68c <_ZN8touchgfx8LCD16bpp50enableTextureMapperL8_RGB888_BilinearInterpolationEv+0x64>)
 801a64c:	f007 fe6e 	bl	802232c <__aeabi_atexit>
 801a650:	4c0f      	ldr	r4, [pc, #60]	@ (801a690 <_ZN8touchgfx8LCD16bpp50enableTextureMapperL8_RGB888_BilinearInterpolationEv+0x68>)
 801a652:	7823      	ldrb	r3, [r4, #0]
 801a654:	f3bf 8f5b 	dmb	ish
 801a658:	07db      	lsls	r3, r3, #31
 801a65a:	d40b      	bmi.n	801a674 <_ZN8touchgfx8LCD16bpp50enableTextureMapperL8_RGB888_BilinearInterpolationEv+0x4c>
 801a65c:	4620      	mov	r0, r4
 801a65e:	f007 fe6c 	bl	802233a <__cxa_guard_acquire>
 801a662:	b138      	cbz	r0, 801a674 <_ZN8touchgfx8LCD16bpp50enableTextureMapperL8_RGB888_BilinearInterpolationEv+0x4c>
 801a664:	4620      	mov	r0, r4
 801a666:	f007 fe74 	bl	8022352 <__cxa_guard_release>
 801a66a:	4a06      	ldr	r2, [pc, #24]	@ (801a684 <_ZN8touchgfx8LCD16bpp50enableTextureMapperL8_RGB888_BilinearInterpolationEv+0x5c>)
 801a66c:	4909      	ldr	r1, [pc, #36]	@ (801a694 <_ZN8touchgfx8LCD16bpp50enableTextureMapperL8_RGB888_BilinearInterpolationEv+0x6c>)
 801a66e:	480a      	ldr	r0, [pc, #40]	@ (801a698 <_ZN8touchgfx8LCD16bpp50enableTextureMapperL8_RGB888_BilinearInterpolationEv+0x70>)
 801a670:	f007 fe5c 	bl	802232c <__aeabi_atexit>
 801a674:	4b05      	ldr	r3, [pc, #20]	@ (801a68c <_ZN8touchgfx8LCD16bpp50enableTextureMapperL8_RGB888_BilinearInterpolationEv+0x64>)
 801a676:	626b      	str	r3, [r5, #36]	@ 0x24
 801a678:	4b07      	ldr	r3, [pc, #28]	@ (801a698 <_ZN8touchgfx8LCD16bpp50enableTextureMapperL8_RGB888_BilinearInterpolationEv+0x70>)
 801a67a:	62ab      	str	r3, [r5, #40]	@ 0x28
 801a67c:	bd38      	pop	{r3, r4, r5, pc}
 801a67e:	bf00      	nop
 801a680:	20002ea0 	.word	0x20002ea0
 801a684:	20000000 	.word	0x20000000
 801a688:	080166eb 	.word	0x080166eb
 801a68c:	20000078 	.word	0x20000078
 801a690:	20002ea4 	.word	0x20002ea4
 801a694:	080166e9 	.word	0x080166e9
 801a698:	2000007c 	.word	0x2000007c

0801a69c <_ZN8touchgfx8LCD16bpp44enableTextureMapperL8_RGB888_NearestNeighborEv>:
 801a69c:	b538      	push	{r3, r4, r5, lr}
 801a69e:	4c15      	ldr	r4, [pc, #84]	@ (801a6f4 <_ZN8touchgfx8LCD16bpp44enableTextureMapperL8_RGB888_NearestNeighborEv+0x58>)
 801a6a0:	7823      	ldrb	r3, [r4, #0]
 801a6a2:	f3bf 8f5b 	dmb	ish
 801a6a6:	07da      	lsls	r2, r3, #31
 801a6a8:	4605      	mov	r5, r0
 801a6aa:	d40b      	bmi.n	801a6c4 <_ZN8touchgfx8LCD16bpp44enableTextureMapperL8_RGB888_NearestNeighborEv+0x28>
 801a6ac:	4620      	mov	r0, r4
 801a6ae:	f007 fe44 	bl	802233a <__cxa_guard_acquire>
 801a6b2:	b138      	cbz	r0, 801a6c4 <_ZN8touchgfx8LCD16bpp44enableTextureMapperL8_RGB888_NearestNeighborEv+0x28>
 801a6b4:	4620      	mov	r0, r4
 801a6b6:	f007 fe4c 	bl	8022352 <__cxa_guard_release>
 801a6ba:	4a0f      	ldr	r2, [pc, #60]	@ (801a6f8 <_ZN8touchgfx8LCD16bpp44enableTextureMapperL8_RGB888_NearestNeighborEv+0x5c>)
 801a6bc:	490f      	ldr	r1, [pc, #60]	@ (801a6fc <_ZN8touchgfx8LCD16bpp44enableTextureMapperL8_RGB888_NearestNeighborEv+0x60>)
 801a6be:	4810      	ldr	r0, [pc, #64]	@ (801a700 <_ZN8touchgfx8LCD16bpp44enableTextureMapperL8_RGB888_NearestNeighborEv+0x64>)
 801a6c0:	f007 fe34 	bl	802232c <__aeabi_atexit>
 801a6c4:	4c0f      	ldr	r4, [pc, #60]	@ (801a704 <_ZN8touchgfx8LCD16bpp44enableTextureMapperL8_RGB888_NearestNeighborEv+0x68>)
 801a6c6:	7823      	ldrb	r3, [r4, #0]
 801a6c8:	f3bf 8f5b 	dmb	ish
 801a6cc:	07db      	lsls	r3, r3, #31
 801a6ce:	d40b      	bmi.n	801a6e8 <_ZN8touchgfx8LCD16bpp44enableTextureMapperL8_RGB888_NearestNeighborEv+0x4c>
 801a6d0:	4620      	mov	r0, r4
 801a6d2:	f007 fe32 	bl	802233a <__cxa_guard_acquire>
 801a6d6:	b138      	cbz	r0, 801a6e8 <_ZN8touchgfx8LCD16bpp44enableTextureMapperL8_RGB888_NearestNeighborEv+0x4c>
 801a6d8:	4620      	mov	r0, r4
 801a6da:	f007 fe3a 	bl	8022352 <__cxa_guard_release>
 801a6de:	4a06      	ldr	r2, [pc, #24]	@ (801a6f8 <_ZN8touchgfx8LCD16bpp44enableTextureMapperL8_RGB888_NearestNeighborEv+0x5c>)
 801a6e0:	4909      	ldr	r1, [pc, #36]	@ (801a708 <_ZN8touchgfx8LCD16bpp44enableTextureMapperL8_RGB888_NearestNeighborEv+0x6c>)
 801a6e2:	480a      	ldr	r0, [pc, #40]	@ (801a70c <_ZN8touchgfx8LCD16bpp44enableTextureMapperL8_RGB888_NearestNeighborEv+0x70>)
 801a6e4:	f007 fe22 	bl	802232c <__aeabi_atexit>
 801a6e8:	4b05      	ldr	r3, [pc, #20]	@ (801a700 <_ZN8touchgfx8LCD16bpp44enableTextureMapperL8_RGB888_NearestNeighborEv+0x64>)
 801a6ea:	61eb      	str	r3, [r5, #28]
 801a6ec:	4b07      	ldr	r3, [pc, #28]	@ (801a70c <_ZN8touchgfx8LCD16bpp44enableTextureMapperL8_RGB888_NearestNeighborEv+0x70>)
 801a6ee:	622b      	str	r3, [r5, #32]
 801a6f0:	bd38      	pop	{r3, r4, r5, pc}
 801a6f2:	bf00      	nop
 801a6f4:	20002e78 	.word	0x20002e78
 801a6f8:	20000000 	.word	0x20000000
 801a6fc:	080166ef 	.word	0x080166ef
 801a700:	20000050 	.word	0x20000050
 801a704:	20002e7c 	.word	0x20002e7c
 801a708:	080166ed 	.word	0x080166ed
 801a70c:	20000054 	.word	0x20000054

0801a710 <_ZN8touchgfx8LCD16bpp28enableTextureMapperL8_RGB888Ev>:
 801a710:	b510      	push	{r4, lr}
 801a712:	4604      	mov	r4, r0
 801a714:	f7ff ff88 	bl	801a628 <_ZN8touchgfx8LCD16bpp50enableTextureMapperL8_RGB888_BilinearInterpolationEv>
 801a718:	4620      	mov	r0, r4
 801a71a:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
 801a71e:	f7ff bfbd 	b.w	801a69c <_ZN8touchgfx8LCD16bpp44enableTextureMapperL8_RGB888_NearestNeighborEv>
	...

0801a724 <_ZN8touchgfx8LCD16bpp52enableTextureMapperL8_ARGB8888_BilinearInterpolationEv>:
 801a724:	b538      	push	{r3, r4, r5, lr}
 801a726:	4c15      	ldr	r4, [pc, #84]	@ (801a77c <_ZN8touchgfx8LCD16bpp52enableTextureMapperL8_ARGB8888_BilinearInterpolationEv+0x58>)
 801a728:	7823      	ldrb	r3, [r4, #0]
 801a72a:	f3bf 8f5b 	dmb	ish
 801a72e:	07da      	lsls	r2, r3, #31
 801a730:	4605      	mov	r5, r0
 801a732:	d40b      	bmi.n	801a74c <_ZN8touchgfx8LCD16bpp52enableTextureMapperL8_ARGB8888_BilinearInterpolationEv+0x28>
 801a734:	4620      	mov	r0, r4
 801a736:	f007 fe00 	bl	802233a <__cxa_guard_acquire>
 801a73a:	b138      	cbz	r0, 801a74c <_ZN8touchgfx8LCD16bpp52enableTextureMapperL8_ARGB8888_BilinearInterpolationEv+0x28>
 801a73c:	4620      	mov	r0, r4
 801a73e:	f007 fe08 	bl	8022352 <__cxa_guard_release>
 801a742:	4a0f      	ldr	r2, [pc, #60]	@ (801a780 <_ZN8touchgfx8LCD16bpp52enableTextureMapperL8_ARGB8888_BilinearInterpolationEv+0x5c>)
 801a744:	490f      	ldr	r1, [pc, #60]	@ (801a784 <_ZN8touchgfx8LCD16bpp52enableTextureMapperL8_ARGB8888_BilinearInterpolationEv+0x60>)
 801a746:	4810      	ldr	r0, [pc, #64]	@ (801a788 <_ZN8touchgfx8LCD16bpp52enableTextureMapperL8_ARGB8888_BilinearInterpolationEv+0x64>)
 801a748:	f007 fdf0 	bl	802232c <__aeabi_atexit>
 801a74c:	4c0f      	ldr	r4, [pc, #60]	@ (801a78c <_ZN8touchgfx8LCD16bpp52enableTextureMapperL8_ARGB8888_BilinearInterpolationEv+0x68>)
 801a74e:	7823      	ldrb	r3, [r4, #0]
 801a750:	f3bf 8f5b 	dmb	ish
 801a754:	07db      	lsls	r3, r3, #31
 801a756:	d40b      	bmi.n	801a770 <_ZN8touchgfx8LCD16bpp52enableTextureMapperL8_ARGB8888_BilinearInterpolationEv+0x4c>
 801a758:	4620      	mov	r0, r4
 801a75a:	f007 fdee 	bl	802233a <__cxa_guard_acquire>
 801a75e:	b138      	cbz	r0, 801a770 <_ZN8touchgfx8LCD16bpp52enableTextureMapperL8_ARGB8888_BilinearInterpolationEv+0x4c>
 801a760:	4620      	mov	r0, r4
 801a762:	f007 fdf6 	bl	8022352 <__cxa_guard_release>
 801a766:	4a06      	ldr	r2, [pc, #24]	@ (801a780 <_ZN8touchgfx8LCD16bpp52enableTextureMapperL8_ARGB8888_BilinearInterpolationEv+0x5c>)
 801a768:	4909      	ldr	r1, [pc, #36]	@ (801a790 <_ZN8touchgfx8LCD16bpp52enableTextureMapperL8_ARGB8888_BilinearInterpolationEv+0x6c>)
 801a76a:	480a      	ldr	r0, [pc, #40]	@ (801a794 <_ZN8touchgfx8LCD16bpp52enableTextureMapperL8_ARGB8888_BilinearInterpolationEv+0x70>)
 801a76c:	f007 fdde 	bl	802232c <__aeabi_atexit>
 801a770:	4b05      	ldr	r3, [pc, #20]	@ (801a788 <_ZN8touchgfx8LCD16bpp52enableTextureMapperL8_ARGB8888_BilinearInterpolationEv+0x64>)
 801a772:	636b      	str	r3, [r5, #52]	@ 0x34
 801a774:	4b07      	ldr	r3, [pc, #28]	@ (801a794 <_ZN8touchgfx8LCD16bpp52enableTextureMapperL8_ARGB8888_BilinearInterpolationEv+0x70>)
 801a776:	63ab      	str	r3, [r5, #56]	@ 0x38
 801a778:	bd38      	pop	{r3, r4, r5, pc}
 801a77a:	bf00      	nop
 801a77c:	20002eb0 	.word	0x20002eb0
 801a780:	20000000 	.word	0x20000000
 801a784:	080166e3 	.word	0x080166e3
 801a788:	20000088 	.word	0x20000088
 801a78c:	20002eb4 	.word	0x20002eb4
 801a790:	080166e1 	.word	0x080166e1
 801a794:	2000008c 	.word	0x2000008c

0801a798 <_ZN8touchgfx8LCD16bpp46enableTextureMapperL8_ARGB8888_NearestNeighborEv>:
 801a798:	b538      	push	{r3, r4, r5, lr}
 801a79a:	4c15      	ldr	r4, [pc, #84]	@ (801a7f0 <_ZN8touchgfx8LCD16bpp46enableTextureMapperL8_ARGB8888_NearestNeighborEv+0x58>)
 801a79c:	7823      	ldrb	r3, [r4, #0]
 801a79e:	f3bf 8f5b 	dmb	ish
 801a7a2:	07da      	lsls	r2, r3, #31
 801a7a4:	4605      	mov	r5, r0
 801a7a6:	d40b      	bmi.n	801a7c0 <_ZN8touchgfx8LCD16bpp46enableTextureMapperL8_ARGB8888_NearestNeighborEv+0x28>
 801a7a8:	4620      	mov	r0, r4
 801a7aa:	f007 fdc6 	bl	802233a <__cxa_guard_acquire>
 801a7ae:	b138      	cbz	r0, 801a7c0 <_ZN8touchgfx8LCD16bpp46enableTextureMapperL8_ARGB8888_NearestNeighborEv+0x28>
 801a7b0:	4620      	mov	r0, r4
 801a7b2:	f007 fdce 	bl	8022352 <__cxa_guard_release>
 801a7b6:	4a0f      	ldr	r2, [pc, #60]	@ (801a7f4 <_ZN8touchgfx8LCD16bpp46enableTextureMapperL8_ARGB8888_NearestNeighborEv+0x5c>)
 801a7b8:	490f      	ldr	r1, [pc, #60]	@ (801a7f8 <_ZN8touchgfx8LCD16bpp46enableTextureMapperL8_ARGB8888_NearestNeighborEv+0x60>)
 801a7ba:	4810      	ldr	r0, [pc, #64]	@ (801a7fc <_ZN8touchgfx8LCD16bpp46enableTextureMapperL8_ARGB8888_NearestNeighborEv+0x64>)
 801a7bc:	f007 fdb6 	bl	802232c <__aeabi_atexit>
 801a7c0:	4c0f      	ldr	r4, [pc, #60]	@ (801a800 <_ZN8touchgfx8LCD16bpp46enableTextureMapperL8_ARGB8888_NearestNeighborEv+0x68>)
 801a7c2:	7823      	ldrb	r3, [r4, #0]
 801a7c4:	f3bf 8f5b 	dmb	ish
 801a7c8:	07db      	lsls	r3, r3, #31
 801a7ca:	d40b      	bmi.n	801a7e4 <_ZN8touchgfx8LCD16bpp46enableTextureMapperL8_ARGB8888_NearestNeighborEv+0x4c>
 801a7cc:	4620      	mov	r0, r4
 801a7ce:	f007 fdb4 	bl	802233a <__cxa_guard_acquire>
 801a7d2:	b138      	cbz	r0, 801a7e4 <_ZN8touchgfx8LCD16bpp46enableTextureMapperL8_ARGB8888_NearestNeighborEv+0x4c>
 801a7d4:	4620      	mov	r0, r4
 801a7d6:	f007 fdbc 	bl	8022352 <__cxa_guard_release>
 801a7da:	4a06      	ldr	r2, [pc, #24]	@ (801a7f4 <_ZN8touchgfx8LCD16bpp46enableTextureMapperL8_ARGB8888_NearestNeighborEv+0x5c>)
 801a7dc:	4909      	ldr	r1, [pc, #36]	@ (801a804 <_ZN8touchgfx8LCD16bpp46enableTextureMapperL8_ARGB8888_NearestNeighborEv+0x6c>)
 801a7de:	480a      	ldr	r0, [pc, #40]	@ (801a808 <_ZN8touchgfx8LCD16bpp46enableTextureMapperL8_ARGB8888_NearestNeighborEv+0x70>)
 801a7e0:	f007 fda4 	bl	802232c <__aeabi_atexit>
 801a7e4:	4b05      	ldr	r3, [pc, #20]	@ (801a7fc <_ZN8touchgfx8LCD16bpp46enableTextureMapperL8_ARGB8888_NearestNeighborEv+0x64>)
 801a7e6:	62eb      	str	r3, [r5, #44]	@ 0x2c
 801a7e8:	4b07      	ldr	r3, [pc, #28]	@ (801a808 <_ZN8touchgfx8LCD16bpp46enableTextureMapperL8_ARGB8888_NearestNeighborEv+0x70>)
 801a7ea:	632b      	str	r3, [r5, #48]	@ 0x30
 801a7ec:	bd38      	pop	{r3, r4, r5, pc}
 801a7ee:	bf00      	nop
 801a7f0:	20002e80 	.word	0x20002e80
 801a7f4:	20000000 	.word	0x20000000
 801a7f8:	080166e7 	.word	0x080166e7
 801a7fc:	20000058 	.word	0x20000058
 801a800:	20002e84 	.word	0x20002e84
 801a804:	080166e5 	.word	0x080166e5
 801a808:	2000005c 	.word	0x2000005c

0801a80c <_ZN8touchgfx8LCD16bpp30enableTextureMapperL8_ARGB8888Ev>:
 801a80c:	b510      	push	{r4, lr}
 801a80e:	4604      	mov	r4, r0
 801a810:	f7ff ff88 	bl	801a724 <_ZN8touchgfx8LCD16bpp52enableTextureMapperL8_ARGB8888_BilinearInterpolationEv>
 801a814:	4620      	mov	r0, r4
 801a816:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
 801a81a:	f7ff bfbd 	b.w	801a798 <_ZN8touchgfx8LCD16bpp46enableTextureMapperL8_ARGB8888_NearestNeighborEv>
	...

0801a820 <_ZN8touchgfx8LCD16bpp54enableTextureMapperRGB565_Opaque_BilinearInterpolationEv>:
 801a820:	b538      	push	{r3, r4, r5, lr}
 801a822:	4c15      	ldr	r4, [pc, #84]	@ (801a878 <_ZN8touchgfx8LCD16bpp54enableTextureMapperRGB565_Opaque_BilinearInterpolationEv+0x58>)
 801a824:	7823      	ldrb	r3, [r4, #0]
 801a826:	f3bf 8f5b 	dmb	ish
 801a82a:	07da      	lsls	r2, r3, #31
 801a82c:	4605      	mov	r5, r0
 801a82e:	d40b      	bmi.n	801a848 <_ZN8touchgfx8LCD16bpp54enableTextureMapperRGB565_Opaque_BilinearInterpolationEv+0x28>
 801a830:	4620      	mov	r0, r4
 801a832:	f007 fd82 	bl	802233a <__cxa_guard_acquire>
 801a836:	b138      	cbz	r0, 801a848 <_ZN8touchgfx8LCD16bpp54enableTextureMapperRGB565_Opaque_BilinearInterpolationEv+0x28>
 801a838:	4620      	mov	r0, r4
 801a83a:	f007 fd8a 	bl	8022352 <__cxa_guard_release>
 801a83e:	4a0f      	ldr	r2, [pc, #60]	@ (801a87c <_ZN8touchgfx8LCD16bpp54enableTextureMapperRGB565_Opaque_BilinearInterpolationEv+0x5c>)
 801a840:	490f      	ldr	r1, [pc, #60]	@ (801a880 <_ZN8touchgfx8LCD16bpp54enableTextureMapperRGB565_Opaque_BilinearInterpolationEv+0x60>)
 801a842:	4810      	ldr	r0, [pc, #64]	@ (801a884 <_ZN8touchgfx8LCD16bpp54enableTextureMapperRGB565_Opaque_BilinearInterpolationEv+0x64>)
 801a844:	f007 fd72 	bl	802232c <__aeabi_atexit>
 801a848:	4c0f      	ldr	r4, [pc, #60]	@ (801a888 <_ZN8touchgfx8LCD16bpp54enableTextureMapperRGB565_Opaque_BilinearInterpolationEv+0x68>)
 801a84a:	7823      	ldrb	r3, [r4, #0]
 801a84c:	f3bf 8f5b 	dmb	ish
 801a850:	07db      	lsls	r3, r3, #31
 801a852:	d40b      	bmi.n	801a86c <_ZN8touchgfx8LCD16bpp54enableTextureMapperRGB565_Opaque_BilinearInterpolationEv+0x4c>
 801a854:	4620      	mov	r0, r4
 801a856:	f007 fd70 	bl	802233a <__cxa_guard_acquire>
 801a85a:	b138      	cbz	r0, 801a86c <_ZN8touchgfx8LCD16bpp54enableTextureMapperRGB565_Opaque_BilinearInterpolationEv+0x4c>
 801a85c:	4620      	mov	r0, r4
 801a85e:	f007 fd78 	bl	8022352 <__cxa_guard_release>
 801a862:	4a06      	ldr	r2, [pc, #24]	@ (801a87c <_ZN8touchgfx8LCD16bpp54enableTextureMapperRGB565_Opaque_BilinearInterpolationEv+0x5c>)
 801a864:	4909      	ldr	r1, [pc, #36]	@ (801a88c <_ZN8touchgfx8LCD16bpp54enableTextureMapperRGB565_Opaque_BilinearInterpolationEv+0x6c>)
 801a866:	480a      	ldr	r0, [pc, #40]	@ (801a890 <_ZN8touchgfx8LCD16bpp54enableTextureMapperRGB565_Opaque_BilinearInterpolationEv+0x70>)
 801a868:	f007 fd60 	bl	802232c <__aeabi_atexit>
 801a86c:	4b05      	ldr	r3, [pc, #20]	@ (801a884 <_ZN8touchgfx8LCD16bpp54enableTextureMapperRGB565_Opaque_BilinearInterpolationEv+0x64>)
 801a86e:	656b      	str	r3, [r5, #84]	@ 0x54
 801a870:	4b07      	ldr	r3, [pc, #28]	@ (801a890 <_ZN8touchgfx8LCD16bpp54enableTextureMapperRGB565_Opaque_BilinearInterpolationEv+0x70>)
 801a872:	65ab      	str	r3, [r5, #88]	@ 0x58
 801a874:	bd38      	pop	{r3, r4, r5, pc}
 801a876:	bf00      	nop
 801a878:	20002eb8 	.word	0x20002eb8
 801a87c:	20000000 	.word	0x20000000
 801a880:	080166d3 	.word	0x080166d3
 801a884:	20000090 	.word	0x20000090
 801a888:	20002ebc 	.word	0x20002ebc
 801a88c:	080166d1 	.word	0x080166d1
 801a890:	20000094 	.word	0x20000094

0801a894 <_ZN8touchgfx8LCD16bpp57enableTextureMapperRGB565_NonOpaque_BilinearInterpolationEv>:
 801a894:	b538      	push	{r3, r4, r5, lr}
 801a896:	4c15      	ldr	r4, [pc, #84]	@ (801a8ec <_ZN8touchgfx8LCD16bpp57enableTextureMapperRGB565_NonOpaque_BilinearInterpolationEv+0x58>)
 801a898:	7823      	ldrb	r3, [r4, #0]
 801a89a:	f3bf 8f5b 	dmb	ish
 801a89e:	07da      	lsls	r2, r3, #31
 801a8a0:	4605      	mov	r5, r0
 801a8a2:	d40b      	bmi.n	801a8bc <_ZN8touchgfx8LCD16bpp57enableTextureMapperRGB565_NonOpaque_BilinearInterpolationEv+0x28>
 801a8a4:	4620      	mov	r0, r4
 801a8a6:	f007 fd48 	bl	802233a <__cxa_guard_acquire>
 801a8aa:	b138      	cbz	r0, 801a8bc <_ZN8touchgfx8LCD16bpp57enableTextureMapperRGB565_NonOpaque_BilinearInterpolationEv+0x28>
 801a8ac:	4620      	mov	r0, r4
 801a8ae:	f007 fd50 	bl	8022352 <__cxa_guard_release>
 801a8b2:	4a0f      	ldr	r2, [pc, #60]	@ (801a8f0 <_ZN8touchgfx8LCD16bpp57enableTextureMapperRGB565_NonOpaque_BilinearInterpolationEv+0x5c>)
 801a8b4:	490f      	ldr	r1, [pc, #60]	@ (801a8f4 <_ZN8touchgfx8LCD16bpp57enableTextureMapperRGB565_NonOpaque_BilinearInterpolationEv+0x60>)
 801a8b6:	4810      	ldr	r0, [pc, #64]	@ (801a8f8 <_ZN8touchgfx8LCD16bpp57enableTextureMapperRGB565_NonOpaque_BilinearInterpolationEv+0x64>)
 801a8b8:	f007 fd38 	bl	802232c <__aeabi_atexit>
 801a8bc:	4c0f      	ldr	r4, [pc, #60]	@ (801a8fc <_ZN8touchgfx8LCD16bpp57enableTextureMapperRGB565_NonOpaque_BilinearInterpolationEv+0x68>)
 801a8be:	7823      	ldrb	r3, [r4, #0]
 801a8c0:	f3bf 8f5b 	dmb	ish
 801a8c4:	07db      	lsls	r3, r3, #31
 801a8c6:	d40b      	bmi.n	801a8e0 <_ZN8touchgfx8LCD16bpp57enableTextureMapperRGB565_NonOpaque_BilinearInterpolationEv+0x4c>
 801a8c8:	4620      	mov	r0, r4
 801a8ca:	f007 fd36 	bl	802233a <__cxa_guard_acquire>
 801a8ce:	b138      	cbz	r0, 801a8e0 <_ZN8touchgfx8LCD16bpp57enableTextureMapperRGB565_NonOpaque_BilinearInterpolationEv+0x4c>
 801a8d0:	4620      	mov	r0, r4
 801a8d2:	f007 fd3e 	bl	8022352 <__cxa_guard_release>
 801a8d6:	4a06      	ldr	r2, [pc, #24]	@ (801a8f0 <_ZN8touchgfx8LCD16bpp57enableTextureMapperRGB565_NonOpaque_BilinearInterpolationEv+0x5c>)
 801a8d8:	4909      	ldr	r1, [pc, #36]	@ (801a900 <_ZN8touchgfx8LCD16bpp57enableTextureMapperRGB565_NonOpaque_BilinearInterpolationEv+0x6c>)
 801a8da:	480a      	ldr	r0, [pc, #40]	@ (801a904 <_ZN8touchgfx8LCD16bpp57enableTextureMapperRGB565_NonOpaque_BilinearInterpolationEv+0x70>)
 801a8dc:	f007 fd26 	bl	802232c <__aeabi_atexit>
 801a8e0:	4b05      	ldr	r3, [pc, #20]	@ (801a8f8 <_ZN8touchgfx8LCD16bpp57enableTextureMapperRGB565_NonOpaque_BilinearInterpolationEv+0x64>)
 801a8e2:	64eb      	str	r3, [r5, #76]	@ 0x4c
 801a8e4:	4b07      	ldr	r3, [pc, #28]	@ (801a904 <_ZN8touchgfx8LCD16bpp57enableTextureMapperRGB565_NonOpaque_BilinearInterpolationEv+0x70>)
 801a8e6:	652b      	str	r3, [r5, #80]	@ 0x50
 801a8e8:	bd38      	pop	{r3, r4, r5, pc}
 801a8ea:	bf00      	nop
 801a8ec:	20002ec0 	.word	0x20002ec0
 801a8f0:	20000000 	.word	0x20000000
 801a8f4:	080166d7 	.word	0x080166d7
 801a8f8:	20000098 	.word	0x20000098
 801a8fc:	20002ec4 	.word	0x20002ec4
 801a900:	080166d5 	.word	0x080166d5
 801a904:	2000009c 	.word	0x2000009c

0801a908 <_ZN8touchgfx8LCD16bpp48enableTextureMapperRGB565_Opaque_NearestNeighborEv>:
 801a908:	b538      	push	{r3, r4, r5, lr}
 801a90a:	4c15      	ldr	r4, [pc, #84]	@ (801a960 <_ZN8touchgfx8LCD16bpp48enableTextureMapperRGB565_Opaque_NearestNeighborEv+0x58>)
 801a90c:	7823      	ldrb	r3, [r4, #0]
 801a90e:	f3bf 8f5b 	dmb	ish
 801a912:	07da      	lsls	r2, r3, #31
 801a914:	4605      	mov	r5, r0
 801a916:	d40b      	bmi.n	801a930 <_ZN8touchgfx8LCD16bpp48enableTextureMapperRGB565_Opaque_NearestNeighborEv+0x28>
 801a918:	4620      	mov	r0, r4
 801a91a:	f007 fd0e 	bl	802233a <__cxa_guard_acquire>
 801a91e:	b138      	cbz	r0, 801a930 <_ZN8touchgfx8LCD16bpp48enableTextureMapperRGB565_Opaque_NearestNeighborEv+0x28>
 801a920:	4620      	mov	r0, r4
 801a922:	f007 fd16 	bl	8022352 <__cxa_guard_release>
 801a926:	4a0f      	ldr	r2, [pc, #60]	@ (801a964 <_ZN8touchgfx8LCD16bpp48enableTextureMapperRGB565_Opaque_NearestNeighborEv+0x5c>)
 801a928:	490f      	ldr	r1, [pc, #60]	@ (801a968 <_ZN8touchgfx8LCD16bpp48enableTextureMapperRGB565_Opaque_NearestNeighborEv+0x60>)
 801a92a:	4810      	ldr	r0, [pc, #64]	@ (801a96c <_ZN8touchgfx8LCD16bpp48enableTextureMapperRGB565_Opaque_NearestNeighborEv+0x64>)
 801a92c:	f007 fcfe 	bl	802232c <__aeabi_atexit>
 801a930:	4c0f      	ldr	r4, [pc, #60]	@ (801a970 <_ZN8touchgfx8LCD16bpp48enableTextureMapperRGB565_Opaque_NearestNeighborEv+0x68>)
 801a932:	7823      	ldrb	r3, [r4, #0]
 801a934:	f3bf 8f5b 	dmb	ish
 801a938:	07db      	lsls	r3, r3, #31
 801a93a:	d40b      	bmi.n	801a954 <_ZN8touchgfx8LCD16bpp48enableTextureMapperRGB565_Opaque_NearestNeighborEv+0x4c>
 801a93c:	4620      	mov	r0, r4
 801a93e:	f007 fcfc 	bl	802233a <__cxa_guard_acquire>
 801a942:	b138      	cbz	r0, 801a954 <_ZN8touchgfx8LCD16bpp48enableTextureMapperRGB565_Opaque_NearestNeighborEv+0x4c>
 801a944:	4620      	mov	r0, r4
 801a946:	f007 fd04 	bl	8022352 <__cxa_guard_release>
 801a94a:	4a06      	ldr	r2, [pc, #24]	@ (801a964 <_ZN8touchgfx8LCD16bpp48enableTextureMapperRGB565_Opaque_NearestNeighborEv+0x5c>)
 801a94c:	4909      	ldr	r1, [pc, #36]	@ (801a974 <_ZN8touchgfx8LCD16bpp48enableTextureMapperRGB565_Opaque_NearestNeighborEv+0x6c>)
 801a94e:	480a      	ldr	r0, [pc, #40]	@ (801a978 <_ZN8touchgfx8LCD16bpp48enableTextureMapperRGB565_Opaque_NearestNeighborEv+0x70>)
 801a950:	f007 fcec 	bl	802232c <__aeabi_atexit>
 801a954:	4b05      	ldr	r3, [pc, #20]	@ (801a96c <_ZN8touchgfx8LCD16bpp48enableTextureMapperRGB565_Opaque_NearestNeighborEv+0x64>)
 801a956:	646b      	str	r3, [r5, #68]	@ 0x44
 801a958:	4b07      	ldr	r3, [pc, #28]	@ (801a978 <_ZN8touchgfx8LCD16bpp48enableTextureMapperRGB565_Opaque_NearestNeighborEv+0x70>)
 801a95a:	64ab      	str	r3, [r5, #72]	@ 0x48
 801a95c:	bd38      	pop	{r3, r4, r5, pc}
 801a95e:	bf00      	nop
 801a960:	20002e88 	.word	0x20002e88
 801a964:	20000000 	.word	0x20000000
 801a968:	080166db 	.word	0x080166db
 801a96c:	20000060 	.word	0x20000060
 801a970:	20002e8c 	.word	0x20002e8c
 801a974:	080166d9 	.word	0x080166d9
 801a978:	20000064 	.word	0x20000064

0801a97c <_ZN8touchgfx8LCD16bpp51enableTextureMapperRGB565_NonOpaque_NearestNeighborEv>:
 801a97c:	b538      	push	{r3, r4, r5, lr}
 801a97e:	4c15      	ldr	r4, [pc, #84]	@ (801a9d4 <_ZN8touchgfx8LCD16bpp51enableTextureMapperRGB565_NonOpaque_NearestNeighborEv+0x58>)
 801a980:	7823      	ldrb	r3, [r4, #0]
 801a982:	f3bf 8f5b 	dmb	ish
 801a986:	07da      	lsls	r2, r3, #31
 801a988:	4605      	mov	r5, r0
 801a98a:	d40b      	bmi.n	801a9a4 <_ZN8touchgfx8LCD16bpp51enableTextureMapperRGB565_NonOpaque_NearestNeighborEv+0x28>
 801a98c:	4620      	mov	r0, r4
 801a98e:	f007 fcd4 	bl	802233a <__cxa_guard_acquire>
 801a992:	b138      	cbz	r0, 801a9a4 <_ZN8touchgfx8LCD16bpp51enableTextureMapperRGB565_NonOpaque_NearestNeighborEv+0x28>
 801a994:	4620      	mov	r0, r4
 801a996:	f007 fcdc 	bl	8022352 <__cxa_guard_release>
 801a99a:	4a0f      	ldr	r2, [pc, #60]	@ (801a9d8 <_ZN8touchgfx8LCD16bpp51enableTextureMapperRGB565_NonOpaque_NearestNeighborEv+0x5c>)
 801a99c:	490f      	ldr	r1, [pc, #60]	@ (801a9dc <_ZN8touchgfx8LCD16bpp51enableTextureMapperRGB565_NonOpaque_NearestNeighborEv+0x60>)
 801a99e:	4810      	ldr	r0, [pc, #64]	@ (801a9e0 <_ZN8touchgfx8LCD16bpp51enableTextureMapperRGB565_NonOpaque_NearestNeighborEv+0x64>)
 801a9a0:	f007 fcc4 	bl	802232c <__aeabi_atexit>
 801a9a4:	4c0f      	ldr	r4, [pc, #60]	@ (801a9e4 <_ZN8touchgfx8LCD16bpp51enableTextureMapperRGB565_NonOpaque_NearestNeighborEv+0x68>)
 801a9a6:	7823      	ldrb	r3, [r4, #0]
 801a9a8:	f3bf 8f5b 	dmb	ish
 801a9ac:	07db      	lsls	r3, r3, #31
 801a9ae:	d40b      	bmi.n	801a9c8 <_ZN8touchgfx8LCD16bpp51enableTextureMapperRGB565_NonOpaque_NearestNeighborEv+0x4c>
 801a9b0:	4620      	mov	r0, r4
 801a9b2:	f007 fcc2 	bl	802233a <__cxa_guard_acquire>
 801a9b6:	b138      	cbz	r0, 801a9c8 <_ZN8touchgfx8LCD16bpp51enableTextureMapperRGB565_NonOpaque_NearestNeighborEv+0x4c>
 801a9b8:	4620      	mov	r0, r4
 801a9ba:	f007 fcca 	bl	8022352 <__cxa_guard_release>
 801a9be:	4a06      	ldr	r2, [pc, #24]	@ (801a9d8 <_ZN8touchgfx8LCD16bpp51enableTextureMapperRGB565_NonOpaque_NearestNeighborEv+0x5c>)
 801a9c0:	4909      	ldr	r1, [pc, #36]	@ (801a9e8 <_ZN8touchgfx8LCD16bpp51enableTextureMapperRGB565_NonOpaque_NearestNeighborEv+0x6c>)
 801a9c2:	480a      	ldr	r0, [pc, #40]	@ (801a9ec <_ZN8touchgfx8LCD16bpp51enableTextureMapperRGB565_NonOpaque_NearestNeighborEv+0x70>)
 801a9c4:	f007 fcb2 	bl	802232c <__aeabi_atexit>
 801a9c8:	4b05      	ldr	r3, [pc, #20]	@ (801a9e0 <_ZN8touchgfx8LCD16bpp51enableTextureMapperRGB565_NonOpaque_NearestNeighborEv+0x64>)
 801a9ca:	63eb      	str	r3, [r5, #60]	@ 0x3c
 801a9cc:	4b07      	ldr	r3, [pc, #28]	@ (801a9ec <_ZN8touchgfx8LCD16bpp51enableTextureMapperRGB565_NonOpaque_NearestNeighborEv+0x70>)
 801a9ce:	642b      	str	r3, [r5, #64]	@ 0x40
 801a9d0:	bd38      	pop	{r3, r4, r5, pc}
 801a9d2:	bf00      	nop
 801a9d4:	20002ea8 	.word	0x20002ea8
 801a9d8:	20000000 	.word	0x20000000
 801a9dc:	080166df 	.word	0x080166df
 801a9e0:	20000080 	.word	0x20000080
 801a9e4:	20002eac 	.word	0x20002eac
 801a9e8:	080166dd 	.word	0x080166dd
 801a9ec:	20000084 	.word	0x20000084

0801a9f0 <_ZN8touchgfx8LCD16bpp25enableTextureMapperRGB565Ev>:
 801a9f0:	b510      	push	{r4, lr}
 801a9f2:	4604      	mov	r4, r0
 801a9f4:	f7ff ff14 	bl	801a820 <_ZN8touchgfx8LCD16bpp54enableTextureMapperRGB565_Opaque_BilinearInterpolationEv>
 801a9f8:	4620      	mov	r0, r4
 801a9fa:	f7ff ff85 	bl	801a908 <_ZN8touchgfx8LCD16bpp48enableTextureMapperRGB565_Opaque_NearestNeighborEv>
 801a9fe:	4620      	mov	r0, r4
 801aa00:	f7ff ff48 	bl	801a894 <_ZN8touchgfx8LCD16bpp57enableTextureMapperRGB565_NonOpaque_BilinearInterpolationEv>
 801aa04:	4620      	mov	r0, r4
 801aa06:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
 801aa0a:	f7ff bfb7 	b.w	801a97c <_ZN8touchgfx8LCD16bpp51enableTextureMapperRGB565_NonOpaque_NearestNeighborEv>
	...

0801aa10 <_ZN8touchgfx8LCD16bpp49enableTextureMapperARGB8888_BilinearInterpolationEv>:
 801aa10:	b538      	push	{r3, r4, r5, lr}
 801aa12:	4c15      	ldr	r4, [pc, #84]	@ (801aa68 <_ZN8touchgfx8LCD16bpp49enableTextureMapperARGB8888_BilinearInterpolationEv+0x58>)
 801aa14:	7823      	ldrb	r3, [r4, #0]
 801aa16:	f3bf 8f5b 	dmb	ish
 801aa1a:	07da      	lsls	r2, r3, #31
 801aa1c:	4605      	mov	r5, r0
 801aa1e:	d40b      	bmi.n	801aa38 <_ZN8touchgfx8LCD16bpp49enableTextureMapperARGB8888_BilinearInterpolationEv+0x28>
 801aa20:	4620      	mov	r0, r4
 801aa22:	f007 fc8a 	bl	802233a <__cxa_guard_acquire>
 801aa26:	b138      	cbz	r0, 801aa38 <_ZN8touchgfx8LCD16bpp49enableTextureMapperARGB8888_BilinearInterpolationEv+0x28>
 801aa28:	4620      	mov	r0, r4
 801aa2a:	f007 fc92 	bl	8022352 <__cxa_guard_release>
 801aa2e:	4a0f      	ldr	r2, [pc, #60]	@ (801aa6c <_ZN8touchgfx8LCD16bpp49enableTextureMapperARGB8888_BilinearInterpolationEv+0x5c>)
 801aa30:	490f      	ldr	r1, [pc, #60]	@ (801aa70 <_ZN8touchgfx8LCD16bpp49enableTextureMapperARGB8888_BilinearInterpolationEv+0x60>)
 801aa32:	4810      	ldr	r0, [pc, #64]	@ (801aa74 <_ZN8touchgfx8LCD16bpp49enableTextureMapperARGB8888_BilinearInterpolationEv+0x64>)
 801aa34:	f007 fc7a 	bl	802232c <__aeabi_atexit>
 801aa38:	4c0f      	ldr	r4, [pc, #60]	@ (801aa78 <_ZN8touchgfx8LCD16bpp49enableTextureMapperARGB8888_BilinearInterpolationEv+0x68>)
 801aa3a:	7823      	ldrb	r3, [r4, #0]
 801aa3c:	f3bf 8f5b 	dmb	ish
 801aa40:	07db      	lsls	r3, r3, #31
 801aa42:	d40b      	bmi.n	801aa5c <_ZN8touchgfx8LCD16bpp49enableTextureMapperARGB8888_BilinearInterpolationEv+0x4c>
 801aa44:	4620      	mov	r0, r4
 801aa46:	f007 fc78 	bl	802233a <__cxa_guard_acquire>
 801aa4a:	b138      	cbz	r0, 801aa5c <_ZN8touchgfx8LCD16bpp49enableTextureMapperARGB8888_BilinearInterpolationEv+0x4c>
 801aa4c:	4620      	mov	r0, r4
 801aa4e:	f007 fc80 	bl	8022352 <__cxa_guard_release>
 801aa52:	4a06      	ldr	r2, [pc, #24]	@ (801aa6c <_ZN8touchgfx8LCD16bpp49enableTextureMapperARGB8888_BilinearInterpolationEv+0x5c>)
 801aa54:	4909      	ldr	r1, [pc, #36]	@ (801aa7c <_ZN8touchgfx8LCD16bpp49enableTextureMapperARGB8888_BilinearInterpolationEv+0x6c>)
 801aa56:	480a      	ldr	r0, [pc, #40]	@ (801aa80 <_ZN8touchgfx8LCD16bpp49enableTextureMapperARGB8888_BilinearInterpolationEv+0x70>)
 801aa58:	f007 fc68 	bl	802232c <__aeabi_atexit>
 801aa5c:	4b05      	ldr	r3, [pc, #20]	@ (801aa74 <_ZN8touchgfx8LCD16bpp49enableTextureMapperARGB8888_BilinearInterpolationEv+0x64>)
 801aa5e:	666b      	str	r3, [r5, #100]	@ 0x64
 801aa60:	4b07      	ldr	r3, [pc, #28]	@ (801aa80 <_ZN8touchgfx8LCD16bpp49enableTextureMapperARGB8888_BilinearInterpolationEv+0x70>)
 801aa62:	66ab      	str	r3, [r5, #104]	@ 0x68
 801aa64:	bd38      	pop	{r3, r4, r5, pc}
 801aa66:	bf00      	nop
 801aa68:	20002e90 	.word	0x20002e90
 801aa6c:	20000000 	.word	0x20000000
 801aa70:	080166cb 	.word	0x080166cb
 801aa74:	20000068 	.word	0x20000068
 801aa78:	20002e94 	.word	0x20002e94
 801aa7c:	080166c9 	.word	0x080166c9
 801aa80:	2000006c 	.word	0x2000006c

0801aa84 <_ZN8touchgfx8LCD16bpp43enableTextureMapperARGB8888_NearestNeighborEv>:
 801aa84:	b538      	push	{r3, r4, r5, lr}
 801aa86:	4c15      	ldr	r4, [pc, #84]	@ (801aadc <_ZN8touchgfx8LCD16bpp43enableTextureMapperARGB8888_NearestNeighborEv+0x58>)
 801aa88:	7823      	ldrb	r3, [r4, #0]
 801aa8a:	f3bf 8f5b 	dmb	ish
 801aa8e:	07da      	lsls	r2, r3, #31
 801aa90:	4605      	mov	r5, r0
 801aa92:	d40b      	bmi.n	801aaac <_ZN8touchgfx8LCD16bpp43enableTextureMapperARGB8888_NearestNeighborEv+0x28>
 801aa94:	4620      	mov	r0, r4
 801aa96:	f007 fc50 	bl	802233a <__cxa_guard_acquire>
 801aa9a:	b138      	cbz	r0, 801aaac <_ZN8touchgfx8LCD16bpp43enableTextureMapperARGB8888_NearestNeighborEv+0x28>
 801aa9c:	4620      	mov	r0, r4
 801aa9e:	f007 fc58 	bl	8022352 <__cxa_guard_release>
 801aaa2:	4a0f      	ldr	r2, [pc, #60]	@ (801aae0 <_ZN8touchgfx8LCD16bpp43enableTextureMapperARGB8888_NearestNeighborEv+0x5c>)
 801aaa4:	490f      	ldr	r1, [pc, #60]	@ (801aae4 <_ZN8touchgfx8LCD16bpp43enableTextureMapperARGB8888_NearestNeighborEv+0x60>)
 801aaa6:	4810      	ldr	r0, [pc, #64]	@ (801aae8 <_ZN8touchgfx8LCD16bpp43enableTextureMapperARGB8888_NearestNeighborEv+0x64>)
 801aaa8:	f007 fc40 	bl	802232c <__aeabi_atexit>
 801aaac:	4c0f      	ldr	r4, [pc, #60]	@ (801aaec <_ZN8touchgfx8LCD16bpp43enableTextureMapperARGB8888_NearestNeighborEv+0x68>)
 801aaae:	7823      	ldrb	r3, [r4, #0]
 801aab0:	f3bf 8f5b 	dmb	ish
 801aab4:	07db      	lsls	r3, r3, #31
 801aab6:	d40b      	bmi.n	801aad0 <_ZN8touchgfx8LCD16bpp43enableTextureMapperARGB8888_NearestNeighborEv+0x4c>
 801aab8:	4620      	mov	r0, r4
 801aaba:	f007 fc3e 	bl	802233a <__cxa_guard_acquire>
 801aabe:	b138      	cbz	r0, 801aad0 <_ZN8touchgfx8LCD16bpp43enableTextureMapperARGB8888_NearestNeighborEv+0x4c>
 801aac0:	4620      	mov	r0, r4
 801aac2:	f007 fc46 	bl	8022352 <__cxa_guard_release>
 801aac6:	4a06      	ldr	r2, [pc, #24]	@ (801aae0 <_ZN8touchgfx8LCD16bpp43enableTextureMapperARGB8888_NearestNeighborEv+0x5c>)
 801aac8:	4909      	ldr	r1, [pc, #36]	@ (801aaf0 <_ZN8touchgfx8LCD16bpp43enableTextureMapperARGB8888_NearestNeighborEv+0x6c>)
 801aaca:	480a      	ldr	r0, [pc, #40]	@ (801aaf4 <_ZN8touchgfx8LCD16bpp43enableTextureMapperARGB8888_NearestNeighborEv+0x70>)
 801aacc:	f007 fc2e 	bl	802232c <__aeabi_atexit>
 801aad0:	4b05      	ldr	r3, [pc, #20]	@ (801aae8 <_ZN8touchgfx8LCD16bpp43enableTextureMapperARGB8888_NearestNeighborEv+0x64>)
 801aad2:	65eb      	str	r3, [r5, #92]	@ 0x5c
 801aad4:	4b07      	ldr	r3, [pc, #28]	@ (801aaf4 <_ZN8touchgfx8LCD16bpp43enableTextureMapperARGB8888_NearestNeighborEv+0x70>)
 801aad6:	662b      	str	r3, [r5, #96]	@ 0x60
 801aad8:	bd38      	pop	{r3, r4, r5, pc}
 801aada:	bf00      	nop
 801aadc:	20002e68 	.word	0x20002e68
 801aae0:	20000000 	.word	0x20000000
 801aae4:	080166cf 	.word	0x080166cf
 801aae8:	20000040 	.word	0x20000040
 801aaec:	20002e6c 	.word	0x20002e6c
 801aaf0:	080166cd 	.word	0x080166cd
 801aaf4:	20000044 	.word	0x20000044

0801aaf8 <_ZN8touchgfx8LCD16bpp27enableTextureMapperARGB8888Ev>:
 801aaf8:	b510      	push	{r4, lr}
 801aafa:	4604      	mov	r4, r0
 801aafc:	f7ff ff88 	bl	801aa10 <_ZN8touchgfx8LCD16bpp49enableTextureMapperARGB8888_BilinearInterpolationEv>
 801ab00:	4620      	mov	r0, r4
 801ab02:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
 801ab06:	f7ff bfbd 	b.w	801aa84 <_ZN8touchgfx8LCD16bpp43enableTextureMapperARGB8888_NearestNeighborEv>
	...

0801ab0c <_ZN8touchgfx8LCD16bpp43enableTextureMapperA4_BilinearInterpolationEv>:
 801ab0c:	b538      	push	{r3, r4, r5, lr}
 801ab0e:	4c15      	ldr	r4, [pc, #84]	@ (801ab64 <_ZN8touchgfx8LCD16bpp43enableTextureMapperA4_BilinearInterpolationEv+0x58>)
 801ab10:	7823      	ldrb	r3, [r4, #0]
 801ab12:	f3bf 8f5b 	dmb	ish
 801ab16:	07da      	lsls	r2, r3, #31
 801ab18:	4605      	mov	r5, r0
 801ab1a:	d40b      	bmi.n	801ab34 <_ZN8touchgfx8LCD16bpp43enableTextureMapperA4_BilinearInterpolationEv+0x28>
 801ab1c:	4620      	mov	r0, r4
 801ab1e:	f007 fc0c 	bl	802233a <__cxa_guard_acquire>
 801ab22:	b138      	cbz	r0, 801ab34 <_ZN8touchgfx8LCD16bpp43enableTextureMapperA4_BilinearInterpolationEv+0x28>
 801ab24:	4620      	mov	r0, r4
 801ab26:	f007 fc14 	bl	8022352 <__cxa_guard_release>
 801ab2a:	4a0f      	ldr	r2, [pc, #60]	@ (801ab68 <_ZN8touchgfx8LCD16bpp43enableTextureMapperA4_BilinearInterpolationEv+0x5c>)
 801ab2c:	490f      	ldr	r1, [pc, #60]	@ (801ab6c <_ZN8touchgfx8LCD16bpp43enableTextureMapperA4_BilinearInterpolationEv+0x60>)
 801ab2e:	4810      	ldr	r0, [pc, #64]	@ (801ab70 <_ZN8touchgfx8LCD16bpp43enableTextureMapperA4_BilinearInterpolationEv+0x64>)
 801ab30:	f007 fbfc 	bl	802232c <__aeabi_atexit>
 801ab34:	4c0f      	ldr	r4, [pc, #60]	@ (801ab74 <_ZN8touchgfx8LCD16bpp43enableTextureMapperA4_BilinearInterpolationEv+0x68>)
 801ab36:	7823      	ldrb	r3, [r4, #0]
 801ab38:	f3bf 8f5b 	dmb	ish
 801ab3c:	07db      	lsls	r3, r3, #31
 801ab3e:	d40b      	bmi.n	801ab58 <_ZN8touchgfx8LCD16bpp43enableTextureMapperA4_BilinearInterpolationEv+0x4c>
 801ab40:	4620      	mov	r0, r4
 801ab42:	f007 fbfa 	bl	802233a <__cxa_guard_acquire>
 801ab46:	b138      	cbz	r0, 801ab58 <_ZN8touchgfx8LCD16bpp43enableTextureMapperA4_BilinearInterpolationEv+0x4c>
 801ab48:	4620      	mov	r0, r4
 801ab4a:	f007 fc02 	bl	8022352 <__cxa_guard_release>
 801ab4e:	4a06      	ldr	r2, [pc, #24]	@ (801ab68 <_ZN8touchgfx8LCD16bpp43enableTextureMapperA4_BilinearInterpolationEv+0x5c>)
 801ab50:	4909      	ldr	r1, [pc, #36]	@ (801ab78 <_ZN8touchgfx8LCD16bpp43enableTextureMapperA4_BilinearInterpolationEv+0x6c>)
 801ab52:	480a      	ldr	r0, [pc, #40]	@ (801ab7c <_ZN8touchgfx8LCD16bpp43enableTextureMapperA4_BilinearInterpolationEv+0x70>)
 801ab54:	f007 fbea 	bl	802232c <__aeabi_atexit>
 801ab58:	4b05      	ldr	r3, [pc, #20]	@ (801ab70 <_ZN8touchgfx8LCD16bpp43enableTextureMapperA4_BilinearInterpolationEv+0x64>)
 801ab5a:	676b      	str	r3, [r5, #116]	@ 0x74
 801ab5c:	4b07      	ldr	r3, [pc, #28]	@ (801ab7c <_ZN8touchgfx8LCD16bpp43enableTextureMapperA4_BilinearInterpolationEv+0x70>)
 801ab5e:	67ab      	str	r3, [r5, #120]	@ 0x78
 801ab60:	bd38      	pop	{r3, r4, r5, pc}
 801ab62:	bf00      	nop
 801ab64:	20002e60 	.word	0x20002e60
 801ab68:	20000000 	.word	0x20000000
 801ab6c:	080166c3 	.word	0x080166c3
 801ab70:	20000038 	.word	0x20000038
 801ab74:	20002e64 	.word	0x20002e64
 801ab78:	080166c1 	.word	0x080166c1
 801ab7c:	2000003c 	.word	0x2000003c

0801ab80 <_ZN8touchgfx8LCD16bpp37enableTextureMapperA4_NearestNeighborEv>:
 801ab80:	b538      	push	{r3, r4, r5, lr}
 801ab82:	4c15      	ldr	r4, [pc, #84]	@ (801abd8 <_ZN8touchgfx8LCD16bpp37enableTextureMapperA4_NearestNeighborEv+0x58>)
 801ab84:	7823      	ldrb	r3, [r4, #0]
 801ab86:	f3bf 8f5b 	dmb	ish
 801ab8a:	07da      	lsls	r2, r3, #31
 801ab8c:	4605      	mov	r5, r0
 801ab8e:	d40b      	bmi.n	801aba8 <_ZN8touchgfx8LCD16bpp37enableTextureMapperA4_NearestNeighborEv+0x28>
 801ab90:	4620      	mov	r0, r4
 801ab92:	f007 fbd2 	bl	802233a <__cxa_guard_acquire>
 801ab96:	b138      	cbz	r0, 801aba8 <_ZN8touchgfx8LCD16bpp37enableTextureMapperA4_NearestNeighborEv+0x28>
 801ab98:	4620      	mov	r0, r4
 801ab9a:	f007 fbda 	bl	8022352 <__cxa_guard_release>
 801ab9e:	4a0f      	ldr	r2, [pc, #60]	@ (801abdc <_ZN8touchgfx8LCD16bpp37enableTextureMapperA4_NearestNeighborEv+0x5c>)
 801aba0:	490f      	ldr	r1, [pc, #60]	@ (801abe0 <_ZN8touchgfx8LCD16bpp37enableTextureMapperA4_NearestNeighborEv+0x60>)
 801aba2:	4810      	ldr	r0, [pc, #64]	@ (801abe4 <_ZN8touchgfx8LCD16bpp37enableTextureMapperA4_NearestNeighborEv+0x64>)
 801aba4:	f007 fbc2 	bl	802232c <__aeabi_atexit>
 801aba8:	4c0f      	ldr	r4, [pc, #60]	@ (801abe8 <_ZN8touchgfx8LCD16bpp37enableTextureMapperA4_NearestNeighborEv+0x68>)
 801abaa:	7823      	ldrb	r3, [r4, #0]
 801abac:	f3bf 8f5b 	dmb	ish
 801abb0:	07db      	lsls	r3, r3, #31
 801abb2:	d40b      	bmi.n	801abcc <_ZN8touchgfx8LCD16bpp37enableTextureMapperA4_NearestNeighborEv+0x4c>
 801abb4:	4620      	mov	r0, r4
 801abb6:	f007 fbc0 	bl	802233a <__cxa_guard_acquire>
 801abba:	b138      	cbz	r0, 801abcc <_ZN8touchgfx8LCD16bpp37enableTextureMapperA4_NearestNeighborEv+0x4c>
 801abbc:	4620      	mov	r0, r4
 801abbe:	f007 fbc8 	bl	8022352 <__cxa_guard_release>
 801abc2:	4a06      	ldr	r2, [pc, #24]	@ (801abdc <_ZN8touchgfx8LCD16bpp37enableTextureMapperA4_NearestNeighborEv+0x5c>)
 801abc4:	4909      	ldr	r1, [pc, #36]	@ (801abec <_ZN8touchgfx8LCD16bpp37enableTextureMapperA4_NearestNeighborEv+0x6c>)
 801abc6:	480a      	ldr	r0, [pc, #40]	@ (801abf0 <_ZN8touchgfx8LCD16bpp37enableTextureMapperA4_NearestNeighborEv+0x70>)
 801abc8:	f007 fbb0 	bl	802232c <__aeabi_atexit>
 801abcc:	4b05      	ldr	r3, [pc, #20]	@ (801abe4 <_ZN8touchgfx8LCD16bpp37enableTextureMapperA4_NearestNeighborEv+0x64>)
 801abce:	66eb      	str	r3, [r5, #108]	@ 0x6c
 801abd0:	4b07      	ldr	r3, [pc, #28]	@ (801abf0 <_ZN8touchgfx8LCD16bpp37enableTextureMapperA4_NearestNeighborEv+0x70>)
 801abd2:	672b      	str	r3, [r5, #112]	@ 0x70
 801abd4:	bd38      	pop	{r3, r4, r5, pc}
 801abd6:	bf00      	nop
 801abd8:	20002e58 	.word	0x20002e58
 801abdc:	20000000 	.word	0x20000000
 801abe0:	080166c7 	.word	0x080166c7
 801abe4:	20000030 	.word	0x20000030
 801abe8:	20002e5c 	.word	0x20002e5c
 801abec:	080166c5 	.word	0x080166c5
 801abf0:	20000034 	.word	0x20000034

0801abf4 <_ZN8touchgfx8LCD16bpp21enableTextureMapperA4Ev>:
 801abf4:	b510      	push	{r4, lr}
 801abf6:	4604      	mov	r4, r0
 801abf8:	f7ff ff88 	bl	801ab0c <_ZN8touchgfx8LCD16bpp43enableTextureMapperA4_BilinearInterpolationEv>
 801abfc:	4620      	mov	r0, r4
 801abfe:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
 801ac02:	f7ff bfbd 	b.w	801ab80 <_ZN8touchgfx8LCD16bpp37enableTextureMapperA4_NearestNeighborEv>

0801ac06 <_ZN8touchgfx8LCD16bpp22enableTextureMapperAllEv>:
 801ac06:	b510      	push	{r4, lr}
 801ac08:	4604      	mov	r4, r0
 801ac0a:	f7ff fff3 	bl	801abf4 <_ZN8touchgfx8LCD16bpp21enableTextureMapperA4Ev>
 801ac0e:	4620      	mov	r0, r4
 801ac10:	f7ff ff72 	bl	801aaf8 <_ZN8touchgfx8LCD16bpp27enableTextureMapperARGB8888Ev>
 801ac14:	4620      	mov	r0, r4
 801ac16:	f7ff fdf9 	bl	801a80c <_ZN8touchgfx8LCD16bpp30enableTextureMapperL8_ARGB8888Ev>
 801ac1a:	4620      	mov	r0, r4
 801ac1c:	f7ff fcfa 	bl	801a614 <_ZN8touchgfx8LCD16bpp28enableTextureMapperL8_RGB565Ev>
 801ac20:	4620      	mov	r0, r4
 801ac22:	f7ff fd75 	bl	801a710 <_ZN8touchgfx8LCD16bpp28enableTextureMapperL8_RGB888Ev>
 801ac26:	4620      	mov	r0, r4
 801ac28:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
 801ac2c:	f7ff bee0 	b.w	801a9f0 <_ZN8touchgfx8LCD16bpp25enableTextureMapperRGB565Ev>

0801ac30 <_ZN8touchgfx8LCD16bpp23enableDecompressorL8_L4Ev>:
 801ac30:	b538      	push	{r3, r4, r5, lr}
 801ac32:	4c0b      	ldr	r4, [pc, #44]	@ (801ac60 <_ZN8touchgfx8LCD16bpp23enableDecompressorL8_L4Ev+0x30>)
 801ac34:	7823      	ldrb	r3, [r4, #0]
 801ac36:	f3bf 8f5b 	dmb	ish
 801ac3a:	07db      	lsls	r3, r3, #31
 801ac3c:	4605      	mov	r5, r0
 801ac3e:	d40b      	bmi.n	801ac58 <_ZN8touchgfx8LCD16bpp23enableDecompressorL8_L4Ev+0x28>
 801ac40:	4620      	mov	r0, r4
 801ac42:	f007 fb7a 	bl	802233a <__cxa_guard_acquire>
 801ac46:	b138      	cbz	r0, 801ac58 <_ZN8touchgfx8LCD16bpp23enableDecompressorL8_L4Ev+0x28>
 801ac48:	4620      	mov	r0, r4
 801ac4a:	f007 fb82 	bl	8022352 <__cxa_guard_release>
 801ac4e:	4a05      	ldr	r2, [pc, #20]	@ (801ac64 <_ZN8touchgfx8LCD16bpp23enableDecompressorL8_L4Ev+0x34>)
 801ac50:	4905      	ldr	r1, [pc, #20]	@ (801ac68 <_ZN8touchgfx8LCD16bpp23enableDecompressorL8_L4Ev+0x38>)
 801ac52:	4806      	ldr	r0, [pc, #24]	@ (801ac6c <_ZN8touchgfx8LCD16bpp23enableDecompressorL8_L4Ev+0x3c>)
 801ac54:	f007 fb6a 	bl	802232c <__aeabi_atexit>
 801ac58:	4b04      	ldr	r3, [pc, #16]	@ (801ac6c <_ZN8touchgfx8LCD16bpp23enableDecompressorL8_L4Ev+0x3c>)
 801ac5a:	67eb      	str	r3, [r5, #124]	@ 0x7c
 801ac5c:	bd38      	pop	{r3, r4, r5, pc}
 801ac5e:	bf00      	nop
 801ac60:	20002e4c 	.word	0x20002e4c
 801ac64:	20000000 	.word	0x20000000
 801ac68:	080166bf 	.word	0x080166bf
 801ac6c:	20000028 	.word	0x20000028

0801ac70 <_ZN8touchgfx8LCD16bpp24enableDecompressorL8_RLEEv>:
 801ac70:	b538      	push	{r3, r4, r5, lr}
 801ac72:	4c0b      	ldr	r4, [pc, #44]	@ (801aca0 <_ZN8touchgfx8LCD16bpp24enableDecompressorL8_RLEEv+0x30>)
 801ac74:	7823      	ldrb	r3, [r4, #0]
 801ac76:	f3bf 8f5b 	dmb	ish
 801ac7a:	07db      	lsls	r3, r3, #31
 801ac7c:	4605      	mov	r5, r0
 801ac7e:	d40b      	bmi.n	801ac98 <_ZN8touchgfx8LCD16bpp24enableDecompressorL8_RLEEv+0x28>
 801ac80:	4620      	mov	r0, r4
 801ac82:	f007 fb5a 	bl	802233a <__cxa_guard_acquire>
 801ac86:	b138      	cbz	r0, 801ac98 <_ZN8touchgfx8LCD16bpp24enableDecompressorL8_RLEEv+0x28>
 801ac88:	4620      	mov	r0, r4
 801ac8a:	f007 fb62 	bl	8022352 <__cxa_guard_release>
 801ac8e:	4a05      	ldr	r2, [pc, #20]	@ (801aca4 <_ZN8touchgfx8LCD16bpp24enableDecompressorL8_RLEEv+0x34>)
 801ac90:	4905      	ldr	r1, [pc, #20]	@ (801aca8 <_ZN8touchgfx8LCD16bpp24enableDecompressorL8_RLEEv+0x38>)
 801ac92:	4806      	ldr	r0, [pc, #24]	@ (801acac <_ZN8touchgfx8LCD16bpp24enableDecompressorL8_RLEEv+0x3c>)
 801ac94:	f007 fb4a 	bl	802232c <__aeabi_atexit>
 801ac98:	4b04      	ldr	r3, [pc, #16]	@ (801acac <_ZN8touchgfx8LCD16bpp24enableDecompressorL8_RLEEv+0x3c>)
 801ac9a:	f8c5 3080 	str.w	r3, [r5, #128]	@ 0x80
 801ac9e:	bd38      	pop	{r3, r4, r5, pc}
 801aca0:	20002e50 	.word	0x20002e50
 801aca4:	20000000 	.word	0x20000000
 801aca8:	080166bd 	.word	0x080166bd
 801acac:	2000002c 	.word	0x2000002c

0801acb0 <_ZN8touchgfx8LCD16bpp25enableDecompressorL8_LZW9Ev>:
 801acb0:	b570      	push	{r4, r5, r6, lr}
 801acb2:	4d0d      	ldr	r5, [pc, #52]	@ (801ace8 <_ZN8touchgfx8LCD16bpp25enableDecompressorL8_LZW9Ev+0x38>)
 801acb4:	4c0d      	ldr	r4, [pc, #52]	@ (801acec <_ZN8touchgfx8LCD16bpp25enableDecompressorL8_LZW9Ev+0x3c>)
 801acb6:	782b      	ldrb	r3, [r5, #0]
 801acb8:	f3bf 8f5b 	dmb	ish
 801acbc:	f013 0f01 	tst.w	r3, #1
 801acc0:	4606      	mov	r6, r0
 801acc2:	d10d      	bne.n	801ace0 <_ZN8touchgfx8LCD16bpp25enableDecompressorL8_LZW9Ev+0x30>
 801acc4:	4628      	mov	r0, r5
 801acc6:	f007 fb38 	bl	802233a <__cxa_guard_acquire>
 801acca:	b148      	cbz	r0, 801ace0 <_ZN8touchgfx8LCD16bpp25enableDecompressorL8_LZW9Ev+0x30>
 801accc:	4b08      	ldr	r3, [pc, #32]	@ (801acf0 <_ZN8touchgfx8LCD16bpp25enableDecompressorL8_LZW9Ev+0x40>)
 801acce:	6023      	str	r3, [r4, #0]
 801acd0:	4628      	mov	r0, r5
 801acd2:	f007 fb3e 	bl	8022352 <__cxa_guard_release>
 801acd6:	4a07      	ldr	r2, [pc, #28]	@ (801acf4 <_ZN8touchgfx8LCD16bpp25enableDecompressorL8_LZW9Ev+0x44>)
 801acd8:	4907      	ldr	r1, [pc, #28]	@ (801acf8 <_ZN8touchgfx8LCD16bpp25enableDecompressorL8_LZW9Ev+0x48>)
 801acda:	4620      	mov	r0, r4
 801acdc:	f007 fb26 	bl	802232c <__aeabi_atexit>
 801ace0:	f8c6 4084 	str.w	r4, [r6, #132]	@ 0x84
 801ace4:	bd70      	pop	{r4, r5, r6, pc}
 801ace6:	bf00      	nop
 801ace8:	20002e54 	.word	0x20002e54
 801acec:	20002fcc 	.word	0x20002fcc
 801acf0:	0802559c 	.word	0x0802559c
 801acf4:	20000000 	.word	0x20000000
 801acf8:	080166bb 	.word	0x080166bb

0801acfc <_ZN8touchgfx8LCD16bpp24enableDecompressorL8_AllEv>:
 801acfc:	b510      	push	{r4, lr}
 801acfe:	4604      	mov	r4, r0
 801ad00:	f7ff ff96 	bl	801ac30 <_ZN8touchgfx8LCD16bpp23enableDecompressorL8_L4Ev>
 801ad04:	4620      	mov	r0, r4
 801ad06:	f7ff ffb3 	bl	801ac70 <_ZN8touchgfx8LCD16bpp24enableDecompressorL8_RLEEv>
 801ad0a:	4620      	mov	r0, r4
 801ad0c:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
 801ad10:	f7ff bfce 	b.w	801acb0 <_ZN8touchgfx8LCD16bpp25enableDecompressorL8_LZW9Ev>

0801ad14 <_ZN8touchgfx8LCD16bpp21enableDecompressorRGBEv>:
 801ad14:	b570      	push	{r4, r5, r6, lr}
 801ad16:	4d0d      	ldr	r5, [pc, #52]	@ (801ad4c <_ZN8touchgfx8LCD16bpp21enableDecompressorRGBEv+0x38>)
 801ad18:	4c0d      	ldr	r4, [pc, #52]	@ (801ad50 <_ZN8touchgfx8LCD16bpp21enableDecompressorRGBEv+0x3c>)
 801ad1a:	782b      	ldrb	r3, [r5, #0]
 801ad1c:	f3bf 8f5b 	dmb	ish
 801ad20:	f013 0f01 	tst.w	r3, #1
 801ad24:	4606      	mov	r6, r0
 801ad26:	d10d      	bne.n	801ad44 <_ZN8touchgfx8LCD16bpp21enableDecompressorRGBEv+0x30>
 801ad28:	4628      	mov	r0, r5
 801ad2a:	f007 fb06 	bl	802233a <__cxa_guard_acquire>
 801ad2e:	b148      	cbz	r0, 801ad44 <_ZN8touchgfx8LCD16bpp21enableDecompressorRGBEv+0x30>
 801ad30:	4b08      	ldr	r3, [pc, #32]	@ (801ad54 <_ZN8touchgfx8LCD16bpp21enableDecompressorRGBEv+0x40>)
 801ad32:	6023      	str	r3, [r4, #0]
 801ad34:	4628      	mov	r0, r5
 801ad36:	f007 fb0c 	bl	8022352 <__cxa_guard_release>
 801ad3a:	4a07      	ldr	r2, [pc, #28]	@ (801ad58 <_ZN8touchgfx8LCD16bpp21enableDecompressorRGBEv+0x44>)
 801ad3c:	4907      	ldr	r1, [pc, #28]	@ (801ad5c <_ZN8touchgfx8LCD16bpp21enableDecompressorRGBEv+0x48>)
 801ad3e:	4620      	mov	r0, r4
 801ad40:	f007 faf4 	bl	802232c <__aeabi_atexit>
 801ad44:	f8c6 4088 	str.w	r4, [r6, #136]	@ 0x88
 801ad48:	bd70      	pop	{r4, r5, r6, pc}
 801ad4a:	bf00      	nop
 801ad4c:	20002e48 	.word	0x20002e48
 801ad50:	20002ec8 	.word	0x20002ec8
 801ad54:	080255b8 	.word	0x080255b8
 801ad58:	20000000 	.word	0x20000000
 801ad5c:	080166b9 	.word	0x080166b9

0801ad60 <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKtssiihhh>:
 801ad60:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 801ad64:	e9dd 450b 	ldrd	r4, r5, [sp, #44]	@ 0x2c
 801ad68:	f9bd e024 	ldrsh.w	lr, [sp, #36]	@ 0x24
 801ad6c:	f9bd b028 	ldrsh.w	fp, [sp, #40]	@ 0x28
 801ad70:	f89d 9034 	ldrb.w	r9, [sp, #52]	@ 0x34
 801ad74:	f89d 7038 	ldrb.w	r7, [sp, #56]	@ 0x38
 801ad78:	f89d 603c 	ldrb.w	r6, [sp, #60]	@ 0x3c
 801ad7c:	8808      	ldrh	r0, [r1, #0]
 801ad7e:	fb05 4c0e 	mla	ip, r5, lr, r4
 801ad82:	2d00      	cmp	r5, #0
 801ad84:	eb02 0a0c 	add.w	sl, r2, ip
 801ad88:	f2c0 80b0 	blt.w	801aeec <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKtssiihhh+0x18c>
 801ad8c:	45ab      	cmp	fp, r5
 801ad8e:	f340 80ad 	ble.w	801aeec <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKtssiihhh+0x18c>
 801ad92:	2c00      	cmp	r4, #0
 801ad94:	f2c0 80a8 	blt.w	801aee8 <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKtssiihhh+0x188>
 801ad98:	45a6      	cmp	lr, r4
 801ad9a:	f340 80a5 	ble.w	801aee8 <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKtssiihhh+0x188>
 801ad9e:	f812 200c 	ldrb.w	r2, [r2, ip]
 801ada2:	f833 8012 	ldrh.w	r8, [r3, r2, lsl #1]
 801ada6:	1c62      	adds	r2, r4, #1
 801ada8:	f100 80a3 	bmi.w	801aef2 <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKtssiihhh+0x192>
 801adac:	4596      	cmp	lr, r2
 801adae:	f340 80a0 	ble.w	801aef2 <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKtssiihhh+0x192>
 801adb2:	f1b9 0f00 	cmp.w	r9, #0
 801adb6:	f000 809c 	beq.w	801aef2 <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKtssiihhh+0x192>
 801adba:	f89a 2001 	ldrb.w	r2, [sl, #1]
 801adbe:	f833 c012 	ldrh.w	ip, [r3, r2, lsl #1]
 801adc2:	3501      	adds	r5, #1
 801adc4:	f100 8099 	bmi.w	801aefa <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKtssiihhh+0x19a>
 801adc8:	45ab      	cmp	fp, r5
 801adca:	f340 8096 	ble.w	801aefa <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKtssiihhh+0x19a>
 801adce:	2f00      	cmp	r7, #0
 801add0:	f000 8093 	beq.w	801aefa <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKtssiihhh+0x19a>
 801add4:	2c00      	cmp	r4, #0
 801add6:	f2c0 808e 	blt.w	801aef6 <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKtssiihhh+0x196>
 801adda:	45a6      	cmp	lr, r4
 801addc:	f340 808b 	ble.w	801aef6 <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKtssiihhh+0x196>
 801ade0:	f81a 200e 	ldrb.w	r2, [sl, lr]
 801ade4:	f833 5012 	ldrh.w	r5, [r3, r2, lsl #1]
 801ade8:	3401      	adds	r4, #1
 801adea:	f100 8089 	bmi.w	801af00 <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKtssiihhh+0x1a0>
 801adee:	45a6      	cmp	lr, r4
 801adf0:	f340 8086 	ble.w	801af00 <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKtssiihhh+0x1a0>
 801adf4:	f1b9 0f00 	cmp.w	r9, #0
 801adf8:	f000 8082 	beq.w	801af00 <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKtssiihhh+0x1a0>
 801adfc:	44d6      	add	lr, sl
 801adfe:	f89e 2001 	ldrb.w	r2, [lr, #1]
 801ae02:	f833 3012 	ldrh.w	r3, [r3, r2, lsl #1]
 801ae06:	ea4f 4408 	mov.w	r4, r8, lsl #16
 801ae0a:	f004 64fc 	and.w	r4, r4, #132120576	@ 0x7e00000
 801ae0e:	f428 68fc 	bic.w	r8, r8, #2016	@ 0x7e0
 801ae12:	fb19 fe07 	smulbb	lr, r9, r7
 801ae16:	ea44 0808 	orr.w	r8, r4, r8
 801ae1a:	ea4f 440c 	mov.w	r4, ip, lsl #16
 801ae1e:	f3ce 0ec7 	ubfx	lr, lr, #3, #8
 801ae22:	f1c7 0210 	rsb	r2, r7, #16
 801ae26:	f004 64fc 	and.w	r4, r4, #132120576	@ 0x7e00000
 801ae2a:	f42c 6cfc 	bic.w	ip, ip, #2016	@ 0x7e0
 801ae2e:	ea44 0c0c 	orr.w	ip, r4, ip
 801ae32:	eba2 0209 	sub.w	r2, r2, r9
 801ae36:	ebce 0449 	rsb	r4, lr, r9, lsl #1
 801ae3a:	eb0e 0242 	add.w	r2, lr, r2, lsl #1
 801ae3e:	fb04 f40c 	mul.w	r4, r4, ip
 801ae42:	fb02 4808 	mla	r8, r2, r8, r4
 801ae46:	041a      	lsls	r2, r3, #16
 801ae48:	f002 62fc 	and.w	r2, r2, #132120576	@ 0x7e00000
 801ae4c:	f423 63fc 	bic.w	r3, r3, #2016	@ 0x7e0
 801ae50:	4313      	orrs	r3, r2
 801ae52:	042a      	lsls	r2, r5, #16
 801ae54:	f002 62fc 	and.w	r2, r2, #132120576	@ 0x7e00000
 801ae58:	f425 65fc 	bic.w	r5, r5, #2016	@ 0x7e0
 801ae5c:	fb0e 8303 	mla	r3, lr, r3, r8
 801ae60:	432a      	orrs	r2, r5
 801ae62:	ebce 0747 	rsb	r7, lr, r7, lsl #1
 801ae66:	fb07 3202 	mla	r2, r7, r2, r3
 801ae6a:	0d53      	lsrs	r3, r2, #21
 801ae6c:	0952      	lsrs	r2, r2, #5
 801ae6e:	f403 63fc 	and.w	r3, r3, #2016	@ 0x7e0
 801ae72:	f422 62fc 	bic.w	r2, r2, #2016	@ 0x7e0
 801ae76:	431a      	orrs	r2, r3
 801ae78:	b293      	uxth	r3, r2
 801ae7a:	b2b4      	uxth	r4, r6
 801ae7c:	1202      	asrs	r2, r0, #8
 801ae7e:	43f6      	mvns	r6, r6
 801ae80:	b2f6      	uxtb	r6, r6
 801ae82:	121d      	asrs	r5, r3, #8
 801ae84:	f002 02f8 	and.w	r2, r2, #248	@ 0xf8
 801ae88:	fb12 f206 	smulbb	r2, r2, r6
 801ae8c:	10c7      	asrs	r7, r0, #3
 801ae8e:	f005 05f8 	and.w	r5, r5, #248	@ 0xf8
 801ae92:	00c0      	lsls	r0, r0, #3
 801ae94:	fb05 2504 	mla	r5, r5, r4, r2
 801ae98:	b2c0      	uxtb	r0, r0
 801ae9a:	10da      	asrs	r2, r3, #3
 801ae9c:	00db      	lsls	r3, r3, #3
 801ae9e:	b2db      	uxtb	r3, r3
 801aea0:	f007 07fc 	and.w	r7, r7, #252	@ 0xfc
 801aea4:	fb10 f006 	smulbb	r0, r0, r6
 801aea8:	b2ad      	uxth	r5, r5
 801aeaa:	fb03 0004 	mla	r0, r3, r4, r0
 801aeae:	f002 02fc 	and.w	r2, r2, #252	@ 0xfc
 801aeb2:	fb17 f706 	smulbb	r7, r7, r6
 801aeb6:	b280      	uxth	r0, r0
 801aeb8:	1c6b      	adds	r3, r5, #1
 801aeba:	fb02 7204 	mla	r2, r2, r4, r7
 801aebe:	b292      	uxth	r2, r2
 801aec0:	eb03 2515 	add.w	r5, r3, r5, lsr #8
 801aec4:	1c43      	adds	r3, r0, #1
 801aec6:	eb03 2310 	add.w	r3, r3, r0, lsr #8
 801aeca:	1c50      	adds	r0, r2, #1
 801aecc:	eb00 2212 	add.w	r2, r0, r2, lsr #8
 801aed0:	f405 4578 	and.w	r5, r5, #63488	@ 0xf800
 801aed4:	f3c3 23c4 	ubfx	r3, r3, #11, #5
 801aed8:	0952      	lsrs	r2, r2, #5
 801aeda:	432b      	orrs	r3, r5
 801aedc:	f402 62fc 	and.w	r2, r2, #2016	@ 0x7e0
 801aee0:	4313      	orrs	r3, r2
 801aee2:	800b      	strh	r3, [r1, #0]
 801aee4:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 801aee8:	4680      	mov	r8, r0
 801aeea:	e75c      	b.n	801ada6 <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKtssiihhh+0x46>
 801aeec:	4684      	mov	ip, r0
 801aeee:	4680      	mov	r8, r0
 801aef0:	e767      	b.n	801adc2 <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKtssiihhh+0x62>
 801aef2:	4684      	mov	ip, r0
 801aef4:	e765      	b.n	801adc2 <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKtssiihhh+0x62>
 801aef6:	4605      	mov	r5, r0
 801aef8:	e776      	b.n	801ade8 <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKtssiihhh+0x88>
 801aefa:	4603      	mov	r3, r0
 801aefc:	4605      	mov	r5, r0
 801aefe:	e782      	b.n	801ae06 <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKtssiihhh+0xa6>
 801af00:	4603      	mov	r3, r0
 801af02:	e780      	b.n	801ae06 <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKtssiihhh+0xa6>

0801af04 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff>:
 801af04:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 801af08:	b099      	sub	sp, #100	@ 0x64
 801af0a:	e9dd a523 	ldrd	sl, r5, [sp, #140]	@ 0x8c
 801af0e:	9215      	str	r2, [sp, #84]	@ 0x54
 801af10:	9309      	str	r3, [sp, #36]	@ 0x24
 801af12:	9a27      	ldr	r2, [sp, #156]	@ 0x9c
 801af14:	f89d 30ac 	ldrb.w	r3, [sp, #172]	@ 0xac
 801af18:	930d      	str	r3, [sp, #52]	@ 0x34
 801af1a:	910c      	str	r1, [sp, #48]	@ 0x30
 801af1c:	e9dd 1328 	ldrd	r1, r3, [sp, #160]	@ 0xa0
 801af20:	9016      	str	r0, [sp, #88]	@ 0x58
 801af22:	6850      	ldr	r0, [r2, #4]
 801af24:	6812      	ldr	r2, [r2, #0]
 801af26:	fb00 1303 	mla	r3, r0, r3, r1
 801af2a:	eb02 0843 	add.w	r8, r2, r3, lsl #1
 801af2e:	9b2a      	ldr	r3, [sp, #168]	@ 0xa8
 801af30:	681b      	ldr	r3, [r3, #0]
 801af32:	930b      	str	r3, [sp, #44]	@ 0x2c
 801af34:	9b2a      	ldr	r3, [sp, #168]	@ 0xa8
 801af36:	685e      	ldr	r6, [r3, #4]
 801af38:	9b0d      	ldr	r3, [sp, #52]	@ 0x34
 801af3a:	43db      	mvns	r3, r3
 801af3c:	b2db      	uxtb	r3, r3
 801af3e:	3604      	adds	r6, #4
 801af40:	930a      	str	r3, [sp, #40]	@ 0x28
 801af42:	9b0c      	ldr	r3, [sp, #48]	@ 0x30
 801af44:	2b00      	cmp	r3, #0
 801af46:	dc03      	bgt.n	801af50 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x4c>
 801af48:	9b15      	ldr	r3, [sp, #84]	@ 0x54
 801af4a:	2b00      	cmp	r3, #0
 801af4c:	f340 8225 	ble.w	801b39a <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x496>
 801af50:	9b2a      	ldr	r3, [sp, #168]	@ 0xa8
 801af52:	f9b3 1008 	ldrsh.w	r1, [r3, #8]
 801af56:	f9b3 200c 	ldrsh.w	r2, [r3, #12]
 801af5a:	1e48      	subs	r0, r1, #1
 801af5c:	1e57      	subs	r7, r2, #1
 801af5e:	9b09      	ldr	r3, [sp, #36]	@ 0x24
 801af60:	2b00      	cmp	r3, #0
 801af62:	f340 80e3 	ble.w	801b12c <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x228>
 801af66:	ea5f 4c2a 	movs.w	ip, sl, asr #16
 801af6a:	ea4f 4325 	mov.w	r3, r5, asr #16
 801af6e:	d406      	bmi.n	801af7e <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x7a>
 801af70:	4584      	cmp	ip, r0
 801af72:	da04      	bge.n	801af7e <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x7a>
 801af74:	2b00      	cmp	r3, #0
 801af76:	db02      	blt.n	801af7e <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x7a>
 801af78:	42bb      	cmp	r3, r7
 801af7a:	f2c0 80d8 	blt.w	801b12e <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x22a>
 801af7e:	f11c 0c01 	adds.w	ip, ip, #1
 801af82:	f100 80c9 	bmi.w	801b118 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x214>
 801af86:	4561      	cmp	r1, ip
 801af88:	f2c0 80c6 	blt.w	801b118 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x214>
 801af8c:	3301      	adds	r3, #1
 801af8e:	f100 80c3 	bmi.w	801b118 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x214>
 801af92:	429a      	cmp	r2, r3
 801af94:	f2c0 80c0 	blt.w	801b118 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x214>
 801af98:	f8dd b024 	ldr.w	fp, [sp, #36]	@ 0x24
 801af9c:	4647      	mov	r7, r8
 801af9e:	f1bb 0f00 	cmp.w	fp, #0
 801afa2:	f340 80e3 	ble.w	801b16c <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x268>
 801afa6:	9a2a      	ldr	r2, [sp, #168]	@ 0xa8
 801afa8:	9b2a      	ldr	r3, [sp, #168]	@ 0xa8
 801afaa:	f8d2 e00c 	ldr.w	lr, [r2, #12]
 801afae:	689b      	ldr	r3, [r3, #8]
 801afb0:	ea5f 422a 	movs.w	r2, sl, asr #16
 801afb4:	ea4f 4c25 	mov.w	ip, r5, asr #16
 801afb8:	f3ca 3003 	ubfx	r0, sl, #12, #4
 801afbc:	f3c5 3103 	ubfx	r1, r5, #12, #4
 801afc0:	f100 8121 	bmi.w	801b206 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x302>
 801afc4:	f103 39ff 	add.w	r9, r3, #4294967295
 801afc8:	454a      	cmp	r2, r9
 801afca:	f280 811c 	bge.w	801b206 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x302>
 801afce:	f1bc 0f00 	cmp.w	ip, #0
 801afd2:	f2c0 8118 	blt.w	801b206 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x302>
 801afd6:	f10e 39ff 	add.w	r9, lr, #4294967295
 801afda:	45cc      	cmp	ip, r9
 801afdc:	f280 8113 	bge.w	801b206 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x302>
 801afe0:	b21b      	sxth	r3, r3
 801afe2:	fb0c 2203 	mla	r2, ip, r3, r2
 801afe6:	9c0b      	ldr	r4, [sp, #44]	@ 0x2c
 801afe8:	eb04 0902 	add.w	r9, r4, r2
 801afec:	5ca2      	ldrb	r2, [r4, r2]
 801afee:	f836 e012 	ldrh.w	lr, [r6, r2, lsl #1]
 801aff2:	2800      	cmp	r0, #0
 801aff4:	f000 80fe 	beq.w	801b1f4 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2f0>
 801aff8:	f899 2001 	ldrb.w	r2, [r9, #1]
 801affc:	f836 2012 	ldrh.w	r2, [r6, r2, lsl #1]
 801b000:	9211      	str	r2, [sp, #68]	@ 0x44
 801b002:	b151      	cbz	r1, 801b01a <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x116>
 801b004:	eb09 0203 	add.w	r2, r9, r3
 801b008:	f819 3003 	ldrb.w	r3, [r9, r3]
 801b00c:	f836 3013 	ldrh.w	r3, [r6, r3, lsl #1]
 801b010:	930f      	str	r3, [sp, #60]	@ 0x3c
 801b012:	7853      	ldrb	r3, [r2, #1]
 801b014:	f836 3013 	ldrh.w	r3, [r6, r3, lsl #1]
 801b018:	9312      	str	r3, [sp, #72]	@ 0x48
 801b01a:	9b11      	ldr	r3, [sp, #68]	@ 0x44
 801b01c:	9c12      	ldr	r4, [sp, #72]	@ 0x48
 801b01e:	ea4f 4c03 	mov.w	ip, r3, lsl #16
 801b022:	f00c 6cfc 	and.w	ip, ip, #132120576	@ 0x7e00000
 801b026:	f423 63fc 	bic.w	r3, r3, #2016	@ 0x7e0
 801b02a:	ea4c 0c03 	orr.w	ip, ip, r3
 801b02e:	9b12      	ldr	r3, [sp, #72]	@ 0x48
 801b030:	041b      	lsls	r3, r3, #16
 801b032:	fb10 f201 	smulbb	r2, r0, r1
 801b036:	f424 64fc 	bic.w	r4, r4, #2016	@ 0x7e0
 801b03a:	f003 63fc 	and.w	r3, r3, #132120576	@ 0x7e00000
 801b03e:	10d2      	asrs	r2, r2, #3
 801b040:	4323      	orrs	r3, r4
 801b042:	ebc2 0940 	rsb	r9, r2, r0, lsl #1
 801b046:	4353      	muls	r3, r2
 801b048:	fb09 330c 	mla	r3, r9, ip, r3
 801b04c:	ea4f 4c0e 	mov.w	ip, lr, lsl #16
 801b050:	f00c 6cfc 	and.w	ip, ip, #132120576	@ 0x7e00000
 801b054:	f42e 6efc 	bic.w	lr, lr, #2016	@ 0x7e0
 801b058:	ea4c 0e0e 	orr.w	lr, ip, lr
 801b05c:	f1c1 0c10 	rsb	ip, r1, #16
 801b060:	ebac 0c00 	sub.w	ip, ip, r0
 801b064:	eb02 0c4c 	add.w	ip, r2, ip, lsl #1
 801b068:	fb0c 3c0e 	mla	ip, ip, lr, r3
 801b06c:	9b0f      	ldr	r3, [sp, #60]	@ 0x3c
 801b06e:	9c0a      	ldr	r4, [sp, #40]	@ 0x28
 801b070:	0418      	lsls	r0, r3, #16
 801b072:	f000 60fc 	and.w	r0, r0, #132120576	@ 0x7e00000
 801b076:	f423 63fc 	bic.w	r3, r3, #2016	@ 0x7e0
 801b07a:	4318      	orrs	r0, r3
 801b07c:	ebc2 0241 	rsb	r2, r2, r1, lsl #1
 801b080:	fb02 c200 	mla	r2, r2, r0, ip
 801b084:	0d53      	lsrs	r3, r2, #21
 801b086:	0952      	lsrs	r2, r2, #5
 801b088:	8838      	ldrh	r0, [r7, #0]
 801b08a:	f403 63fc 	and.w	r3, r3, #2016	@ 0x7e0
 801b08e:	f422 62fc 	bic.w	r2, r2, #2016	@ 0x7e0
 801b092:	431a      	orrs	r2, r3
 801b094:	b292      	uxth	r2, r2
 801b096:	1201      	asrs	r1, r0, #8
 801b098:	f8bd 3034 	ldrh.w	r3, [sp, #52]	@ 0x34
 801b09c:	ea4f 2c22 	mov.w	ip, r2, asr #8
 801b0a0:	f001 01f8 	and.w	r1, r1, #248	@ 0xf8
 801b0a4:	fb11 f104 	smulbb	r1, r1, r4
 801b0a8:	ea4f 0ee0 	mov.w	lr, r0, asr #3
 801b0ac:	f00c 0cf8 	and.w	ip, ip, #248	@ 0xf8
 801b0b0:	00c0      	lsls	r0, r0, #3
 801b0b2:	fb0c 1c03 	mla	ip, ip, r3, r1
 801b0b6:	f00e 0efc 	and.w	lr, lr, #252	@ 0xfc
 801b0ba:	10d1      	asrs	r1, r2, #3
 801b0bc:	b2c0      	uxtb	r0, r0
 801b0be:	00d2      	lsls	r2, r2, #3
 801b0c0:	b2d2      	uxtb	r2, r2
 801b0c2:	f001 01fc 	and.w	r1, r1, #252	@ 0xfc
 801b0c6:	fb1e fe04 	smulbb	lr, lr, r4
 801b0ca:	fb10 f004 	smulbb	r0, r0, r4
 801b0ce:	fa1f fc8c 	uxth.w	ip, ip
 801b0d2:	fb01 e103 	mla	r1, r1, r3, lr
 801b0d6:	fb02 0303 	mla	r3, r2, r3, r0
 801b0da:	b29a      	uxth	r2, r3
 801b0dc:	f10c 0301 	add.w	r3, ip, #1
 801b0e0:	b289      	uxth	r1, r1
 801b0e2:	eb03 2c1c 	add.w	ip, r3, ip, lsr #8
 801b0e6:	1c53      	adds	r3, r2, #1
 801b0e8:	eb03 2312 	add.w	r3, r3, r2, lsr #8
 801b0ec:	1c4a      	adds	r2, r1, #1
 801b0ee:	eb02 2111 	add.w	r1, r2, r1, lsr #8
 801b0f2:	f40c 4c78 	and.w	ip, ip, #63488	@ 0xf800
 801b0f6:	f3c3 23c4 	ubfx	r3, r3, #11, #5
 801b0fa:	0949      	lsrs	r1, r1, #5
 801b0fc:	ea43 030c 	orr.w	r3, r3, ip
 801b100:	f401 61fc 	and.w	r1, r1, #2016	@ 0x7e0
 801b104:	430b      	orrs	r3, r1
 801b106:	803b      	strh	r3, [r7, #0]
 801b108:	9b25      	ldr	r3, [sp, #148]	@ 0x94
 801b10a:	449a      	add	sl, r3
 801b10c:	9b26      	ldr	r3, [sp, #152]	@ 0x98
 801b10e:	3702      	adds	r7, #2
 801b110:	441d      	add	r5, r3
 801b112:	f10b 3bff 	add.w	fp, fp, #4294967295
 801b116:	e742      	b.n	801af9e <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x9a>
 801b118:	9b25      	ldr	r3, [sp, #148]	@ 0x94
 801b11a:	449a      	add	sl, r3
 801b11c:	9b26      	ldr	r3, [sp, #152]	@ 0x98
 801b11e:	441d      	add	r5, r3
 801b120:	9b09      	ldr	r3, [sp, #36]	@ 0x24
 801b122:	3b01      	subs	r3, #1
 801b124:	9309      	str	r3, [sp, #36]	@ 0x24
 801b126:	f108 0802 	add.w	r8, r8, #2
 801b12a:	e718      	b.n	801af5e <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x5a>
 801b12c:	d023      	beq.n	801b176 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x272>
 801b12e:	9b09      	ldr	r3, [sp, #36]	@ 0x24
 801b130:	9825      	ldr	r0, [sp, #148]	@ 0x94
 801b132:	3b01      	subs	r3, #1
 801b134:	fb00 a003 	mla	r0, r0, r3, sl
 801b138:	1400      	asrs	r0, r0, #16
 801b13a:	f53f af2d 	bmi.w	801af98 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x94>
 801b13e:	3901      	subs	r1, #1
 801b140:	4288      	cmp	r0, r1
 801b142:	f6bf af29 	bge.w	801af98 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x94>
 801b146:	9926      	ldr	r1, [sp, #152]	@ 0x98
 801b148:	fb01 5303 	mla	r3, r1, r3, r5
 801b14c:	141b      	asrs	r3, r3, #16
 801b14e:	f53f af23 	bmi.w	801af98 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x94>
 801b152:	3a01      	subs	r2, #1
 801b154:	4293      	cmp	r3, r2
 801b156:	f6bf af1f 	bge.w	801af98 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x94>
 801b15a:	f8dd e024 	ldr.w	lr, [sp, #36]	@ 0x24
 801b15e:	f8bd 9034 	ldrh.w	r9, [sp, #52]	@ 0x34
 801b162:	f8cd 8038 	str.w	r8, [sp, #56]	@ 0x38
 801b166:	f1be 0f00 	cmp.w	lr, #0
 801b16a:	dc6c      	bgt.n	801b246 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x342>
 801b16c:	9b09      	ldr	r3, [sp, #36]	@ 0x24
 801b16e:	ea23 74e3 	bic.w	r4, r3, r3, asr #31
 801b172:	eb08 0844 	add.w	r8, r8, r4, lsl #1
 801b176:	9b0c      	ldr	r3, [sp, #48]	@ 0x30
 801b178:	2b00      	cmp	r3, #0
 801b17a:	f340 810e 	ble.w	801b39a <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x496>
 801b17e:	ee30 0a04 	vadd.f32	s0, s0, s8
 801b182:	eeb7 7a00 	vmov.f32	s14, #112	@ 0x3f800000  1.0
 801b186:	eec7 7a00 	vdiv.f32	s15, s14, s0
 801b18a:	9b22      	ldr	r3, [sp, #136]	@ 0x88
 801b18c:	ee70 0aa4 	vadd.f32	s1, s1, s9
 801b190:	ee31 1a05 	vadd.f32	s2, s2, s10
 801b194:	ee20 7aa7 	vmul.f32	s14, s1, s15
 801b198:	eef0 6a62 	vmov.f32	s13, s5
 801b19c:	ee61 7a27 	vmul.f32	s15, s2, s15
 801b1a0:	eefe 6ac8 	vcvt.s32.f32	s13, s13, #16
 801b1a4:	ee77 2a62 	vsub.f32	s5, s14, s5
 801b1a8:	ee16 aa90 	vmov	sl, s13
 801b1ac:	eefe 2ac8 	vcvt.s32.f32	s5, s5, #16
 801b1b0:	eef0 6a43 	vmov.f32	s13, s6
 801b1b4:	ee37 3ac3 	vsub.f32	s6, s15, s6
 801b1b8:	ee12 2a90 	vmov	r2, s5
 801b1bc:	eebe 3ac8 	vcvt.s32.f32	s6, s6, #16
 801b1c0:	fb92 f3f3 	sdiv	r3, r2, r3
 801b1c4:	ee13 2a10 	vmov	r2, s6
 801b1c8:	9325      	str	r3, [sp, #148]	@ 0x94
 801b1ca:	9b22      	ldr	r3, [sp, #136]	@ 0x88
 801b1cc:	fb92 f3f3 	sdiv	r3, r2, r3
 801b1d0:	9326      	str	r3, [sp, #152]	@ 0x98
 801b1d2:	9b0c      	ldr	r3, [sp, #48]	@ 0x30
 801b1d4:	9a15      	ldr	r2, [sp, #84]	@ 0x54
 801b1d6:	3b01      	subs	r3, #1
 801b1d8:	eefe 6ac8 	vcvt.s32.f32	s13, s13, #16
 801b1dc:	930c      	str	r3, [sp, #48]	@ 0x30
 801b1de:	9b22      	ldr	r3, [sp, #136]	@ 0x88
 801b1e0:	bf08      	it	eq
 801b1e2:	4613      	moveq	r3, r2
 801b1e4:	ee16 5a90 	vmov	r5, s13
 801b1e8:	9309      	str	r3, [sp, #36]	@ 0x24
 801b1ea:	eeb0 3a67 	vmov.f32	s6, s15
 801b1ee:	eef0 2a47 	vmov.f32	s5, s14
 801b1f2:	e6a6      	b.n	801af42 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3e>
 801b1f4:	2900      	cmp	r1, #0
 801b1f6:	f43f af10 	beq.w	801b01a <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x116>
 801b1fa:	f819 3003 	ldrb.w	r3, [r9, r3]
 801b1fe:	f836 3013 	ldrh.w	r3, [r6, r3, lsl #1]
 801b202:	930f      	str	r3, [sp, #60]	@ 0x3c
 801b204:	e709      	b.n	801b01a <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x116>
 801b206:	f112 0901 	adds.w	r9, r2, #1
 801b20a:	f53f af7d 	bmi.w	801b108 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x204>
 801b20e:	454b      	cmp	r3, r9
 801b210:	f6ff af7a 	blt.w	801b108 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x204>
 801b214:	f11c 0901 	adds.w	r9, ip, #1
 801b218:	f53f af76 	bmi.w	801b108 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x204>
 801b21c:	45ce      	cmp	lr, r9
 801b21e:	f6ff af73 	blt.w	801b108 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x204>
 801b222:	9c0d      	ldr	r4, [sp, #52]	@ 0x34
 801b224:	9202      	str	r2, [sp, #8]
 801b226:	b21b      	sxth	r3, r3
 801b228:	fa0f f28e 	sxth.w	r2, lr
 801b22c:	e9cd 1405 	strd	r1, r4, [sp, #20]
 801b230:	e9cd c003 	strd	ip, r0, [sp, #12]
 801b234:	9201      	str	r2, [sp, #4]
 801b236:	9300      	str	r3, [sp, #0]
 801b238:	9a0b      	ldr	r2, [sp, #44]	@ 0x2c
 801b23a:	9816      	ldr	r0, [sp, #88]	@ 0x58
 801b23c:	4633      	mov	r3, r6
 801b23e:	4639      	mov	r1, r7
 801b240:	f7ff fd8e 	bl	801ad60 <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKtssiihhh>
 801b244:	e760      	b.n	801b108 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x204>
 801b246:	9b2a      	ldr	r3, [sp, #168]	@ 0xa8
 801b248:	9c0b      	ldr	r4, [sp, #44]	@ 0x2c
 801b24a:	f9b3 3008 	ldrsh.w	r3, [r3, #8]
 801b24e:	ea4f 422a 	mov.w	r2, sl, asr #16
 801b252:	1429      	asrs	r1, r5, #16
 801b254:	fb03 2101 	mla	r1, r3, r1, r2
 801b258:	9a0b      	ldr	r2, [sp, #44]	@ 0x2c
 801b25a:	440a      	add	r2, r1
 801b25c:	5c61      	ldrb	r1, [r4, r1]
 801b25e:	f3ca 3c03 	ubfx	ip, sl, #12, #4
 801b262:	f3c5 3003 	ubfx	r0, r5, #12, #4
 801b266:	f836 1011 	ldrh.w	r1, [r6, r1, lsl #1]
 801b26a:	f1bc 0f00 	cmp.w	ip, #0
 801b26e:	f000 808c 	beq.w	801b38a <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x486>
 801b272:	7857      	ldrb	r7, [r2, #1]
 801b274:	f836 4017 	ldrh.w	r4, [r6, r7, lsl #1]
 801b278:	9413      	str	r4, [sp, #76]	@ 0x4c
 801b27a:	b140      	cbz	r0, 801b28e <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x38a>
 801b27c:	18d7      	adds	r7, r2, r3
 801b27e:	5cd3      	ldrb	r3, [r2, r3]
 801b280:	f836 3013 	ldrh.w	r3, [r6, r3, lsl #1]
 801b284:	9310      	str	r3, [sp, #64]	@ 0x40
 801b286:	787b      	ldrb	r3, [r7, #1]
 801b288:	f836 3013 	ldrh.w	r3, [r6, r3, lsl #1]
 801b28c:	9314      	str	r3, [sp, #80]	@ 0x50
 801b28e:	9b13      	ldr	r3, [sp, #76]	@ 0x4c
 801b290:	9c14      	ldr	r4, [sp, #80]	@ 0x50
 801b292:	fb1c f200 	smulbb	r2, ip, r0
 801b296:	041f      	lsls	r7, r3, #16
 801b298:	10d2      	asrs	r2, r2, #3
 801b29a:	f423 63fc 	bic.w	r3, r3, #2016	@ 0x7e0
 801b29e:	f007 67fc 	and.w	r7, r7, #132120576	@ 0x7e00000
 801b2a2:	431f      	orrs	r7, r3
 801b2a4:	ebc2 034c 	rsb	r3, r2, ip, lsl #1
 801b2a8:	9317      	str	r3, [sp, #92]	@ 0x5c
 801b2aa:	9b14      	ldr	r3, [sp, #80]	@ 0x50
 801b2ac:	041b      	lsls	r3, r3, #16
 801b2ae:	f424 6bfc 	bic.w	fp, r4, #2016	@ 0x7e0
 801b2b2:	f003 63fc 	and.w	r3, r3, #132120576	@ 0x7e00000
 801b2b6:	ea43 030b 	orr.w	r3, r3, fp
 801b2ba:	9c17      	ldr	r4, [sp, #92]	@ 0x5c
 801b2bc:	4353      	muls	r3, r2
 801b2be:	ea4f 4b01 	mov.w	fp, r1, lsl #16
 801b2c2:	fb04 3707 	mla	r7, r4, r7, r3
 801b2c6:	f421 61fc 	bic.w	r1, r1, #2016	@ 0x7e0
 801b2ca:	f00b 63fc 	and.w	r3, fp, #132120576	@ 0x7e00000
 801b2ce:	ea43 0b01 	orr.w	fp, r3, r1
 801b2d2:	f1c0 0110 	rsb	r1, r0, #16
 801b2d6:	9b10      	ldr	r3, [sp, #64]	@ 0x40
 801b2d8:	9c0a      	ldr	r4, [sp, #40]	@ 0x28
 801b2da:	eba1 0c0c 	sub.w	ip, r1, ip
 801b2de:	eb02 0c4c 	add.w	ip, r2, ip, lsl #1
 801b2e2:	fb0c 770b 	mla	r7, ip, fp, r7
 801b2e6:	ea4f 4c03 	mov.w	ip, r3, lsl #16
 801b2ea:	f423 6bfc 	bic.w	fp, r3, #2016	@ 0x7e0
 801b2ee:	f00c 6cfc 	and.w	ip, ip, #132120576	@ 0x7e00000
 801b2f2:	ebc2 0240 	rsb	r2, r2, r0, lsl #1
 801b2f6:	ea4c 0c0b 	orr.w	ip, ip, fp
 801b2fa:	fb02 770c 	mla	r7, r2, ip, r7
 801b2fe:	9a0e      	ldr	r2, [sp, #56]	@ 0x38
 801b300:	0d79      	lsrs	r1, r7, #21
 801b302:	097f      	lsrs	r7, r7, #5
 801b304:	8812      	ldrh	r2, [r2, #0]
 801b306:	f401 61fc 	and.w	r1, r1, #2016	@ 0x7e0
 801b30a:	f427 67fc 	bic.w	r7, r7, #2016	@ 0x7e0
 801b30e:	430f      	orrs	r7, r1
 801b310:	b2bb      	uxth	r3, r7
 801b312:	1211      	asrs	r1, r2, #8
 801b314:	1218      	asrs	r0, r3, #8
 801b316:	f001 01f8 	and.w	r1, r1, #248	@ 0xf8
 801b31a:	fb11 f104 	smulbb	r1, r1, r4
 801b31e:	10d7      	asrs	r7, r2, #3
 801b320:	f000 00f8 	and.w	r0, r0, #248	@ 0xf8
 801b324:	00d2      	lsls	r2, r2, #3
 801b326:	fb00 1009 	mla	r0, r0, r9, r1
 801b32a:	f007 07fc 	and.w	r7, r7, #252	@ 0xfc
 801b32e:	10d9      	asrs	r1, r3, #3
 801b330:	b2d2      	uxtb	r2, r2
 801b332:	00db      	lsls	r3, r3, #3
 801b334:	fb17 f704 	smulbb	r7, r7, r4
 801b338:	fb12 f204 	smulbb	r2, r2, r4
 801b33c:	f001 01fc 	and.w	r1, r1, #252	@ 0xfc
 801b340:	b2db      	uxtb	r3, r3
 801b342:	b280      	uxth	r0, r0
 801b344:	fb01 7109 	mla	r1, r1, r9, r7
 801b348:	fb03 2309 	mla	r3, r3, r9, r2
 801b34c:	b29b      	uxth	r3, r3
 801b34e:	b289      	uxth	r1, r1
 801b350:	1c42      	adds	r2, r0, #1
 801b352:	eb02 2010 	add.w	r0, r2, r0, lsr #8
 801b356:	1c4f      	adds	r7, r1, #1
 801b358:	1c5a      	adds	r2, r3, #1
 801b35a:	eb02 2213 	add.w	r2, r2, r3, lsr #8
 801b35e:	eb07 2111 	add.w	r1, r7, r1, lsr #8
 801b362:	f400 4078 	and.w	r0, r0, #63488	@ 0xf800
 801b366:	f3c2 22c4 	ubfx	r2, r2, #11, #5
 801b36a:	0949      	lsrs	r1, r1, #5
 801b36c:	9b0e      	ldr	r3, [sp, #56]	@ 0x38
 801b36e:	4310      	orrs	r0, r2
 801b370:	f401 61fc 	and.w	r1, r1, #2016	@ 0x7e0
 801b374:	4308      	orrs	r0, r1
 801b376:	f823 0b02 	strh.w	r0, [r3], #2
 801b37a:	930e      	str	r3, [sp, #56]	@ 0x38
 801b37c:	9b25      	ldr	r3, [sp, #148]	@ 0x94
 801b37e:	449a      	add	sl, r3
 801b380:	9b26      	ldr	r3, [sp, #152]	@ 0x98
 801b382:	f10e 3eff 	add.w	lr, lr, #4294967295
 801b386:	441d      	add	r5, r3
 801b388:	e6ed      	b.n	801b166 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x262>
 801b38a:	2800      	cmp	r0, #0
 801b38c:	f43f af7f 	beq.w	801b28e <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x38a>
 801b390:	5cd3      	ldrb	r3, [r2, r3]
 801b392:	f836 3013 	ldrh.w	r3, [r6, r3, lsl #1]
 801b396:	9310      	str	r3, [sp, #64]	@ 0x40
 801b398:	e779      	b.n	801b28e <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x38a>
 801b39a:	b019      	add	sp, #100	@ 0x64
 801b39c:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}

0801b3a0 <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh>:
 801b3a0:	e92d 47f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
 801b3a4:	e9dd 480a 	ldrd	r4, r8, [sp, #40]	@ 0x28
 801b3a8:	f9bd e020 	ldrsh.w	lr, [sp, #32]
 801b3ac:	f9bd a024 	ldrsh.w	sl, [sp, #36]	@ 0x24
 801b3b0:	f89d 5030 	ldrb.w	r5, [sp, #48]	@ 0x30
 801b3b4:	f89d 6034 	ldrb.w	r6, [sp, #52]	@ 0x34
 801b3b8:	8808      	ldrh	r0, [r1, #0]
 801b3ba:	fb08 470e 	mla	r7, r8, lr, r4
 801b3be:	f1b8 0f00 	cmp.w	r8, #0
 801b3c2:	eb02 0907 	add.w	r9, r2, r7
 801b3c6:	db67      	blt.n	801b498 <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0xf8>
 801b3c8:	45c2      	cmp	sl, r8
 801b3ca:	dd65      	ble.n	801b498 <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0xf8>
 801b3cc:	2c00      	cmp	r4, #0
 801b3ce:	db61      	blt.n	801b494 <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0xf4>
 801b3d0:	45a6      	cmp	lr, r4
 801b3d2:	dd5f      	ble.n	801b494 <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0xf4>
 801b3d4:	5dd2      	ldrb	r2, [r2, r7]
 801b3d6:	f833 c012 	ldrh.w	ip, [r3, r2, lsl #1]
 801b3da:	1c62      	adds	r2, r4, #1
 801b3dc:	d45f      	bmi.n	801b49e <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0xfe>
 801b3de:	4596      	cmp	lr, r2
 801b3e0:	dd5d      	ble.n	801b49e <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0xfe>
 801b3e2:	2d00      	cmp	r5, #0
 801b3e4:	d05b      	beq.n	801b49e <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0xfe>
 801b3e6:	f899 2001 	ldrb.w	r2, [r9, #1]
 801b3ea:	f833 7012 	ldrh.w	r7, [r3, r2, lsl #1]
 801b3ee:	f118 0801 	adds.w	r8, r8, #1
 801b3f2:	d458      	bmi.n	801b4a6 <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x106>
 801b3f4:	45c2      	cmp	sl, r8
 801b3f6:	dd56      	ble.n	801b4a6 <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x106>
 801b3f8:	2e00      	cmp	r6, #0
 801b3fa:	d054      	beq.n	801b4a6 <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x106>
 801b3fc:	2c00      	cmp	r4, #0
 801b3fe:	db50      	blt.n	801b4a2 <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x102>
 801b400:	45a6      	cmp	lr, r4
 801b402:	dd4e      	ble.n	801b4a2 <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x102>
 801b404:	f819 200e 	ldrb.w	r2, [r9, lr]
 801b408:	f833 2012 	ldrh.w	r2, [r3, r2, lsl #1]
 801b40c:	3401      	adds	r4, #1
 801b40e:	d407      	bmi.n	801b420 <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x80>
 801b410:	45a6      	cmp	lr, r4
 801b412:	dd05      	ble.n	801b420 <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x80>
 801b414:	b125      	cbz	r5, 801b420 <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x80>
 801b416:	44ce      	add	lr, r9
 801b418:	f89e 0001 	ldrb.w	r0, [lr, #1]
 801b41c:	f833 0010 	ldrh.w	r0, [r3, r0, lsl #1]
 801b420:	ea4f 430c 	mov.w	r3, ip, lsl #16
 801b424:	fb15 f406 	smulbb	r4, r5, r6
 801b428:	f003 63fc 	and.w	r3, r3, #132120576	@ 0x7e00000
 801b42c:	ea4f 4e07 	mov.w	lr, r7, lsl #16
 801b430:	f42c 6cfc 	bic.w	ip, ip, #2016	@ 0x7e0
 801b434:	f3c4 04c7 	ubfx	r4, r4, #3, #8
 801b438:	ea43 0c0c 	orr.w	ip, r3, ip
 801b43c:	f00e 6efc 	and.w	lr, lr, #132120576	@ 0x7e00000
 801b440:	f1c6 0310 	rsb	r3, r6, #16
 801b444:	f427 67fc 	bic.w	r7, r7, #2016	@ 0x7e0
 801b448:	1b5b      	subs	r3, r3, r5
 801b44a:	ea4e 0707 	orr.w	r7, lr, r7
 801b44e:	ebc4 0545 	rsb	r5, r4, r5, lsl #1
 801b452:	eb04 0343 	add.w	r3, r4, r3, lsl #1
 801b456:	437d      	muls	r5, r7
 801b458:	fb03 5c0c 	mla	ip, r3, ip, r5
 801b45c:	0403      	lsls	r3, r0, #16
 801b45e:	f003 63fc 	and.w	r3, r3, #132120576	@ 0x7e00000
 801b462:	f420 60fc 	bic.w	r0, r0, #2016	@ 0x7e0
 801b466:	4318      	orrs	r0, r3
 801b468:	0413      	lsls	r3, r2, #16
 801b46a:	f003 63fc 	and.w	r3, r3, #132120576	@ 0x7e00000
 801b46e:	f422 62fc 	bic.w	r2, r2, #2016	@ 0x7e0
 801b472:	4313      	orrs	r3, r2
 801b474:	fb04 c000 	mla	r0, r4, r0, ip
 801b478:	ebc4 0646 	rsb	r6, r4, r6, lsl #1
 801b47c:	fb06 0003 	mla	r0, r6, r3, r0
 801b480:	0d43      	lsrs	r3, r0, #21
 801b482:	0940      	lsrs	r0, r0, #5
 801b484:	f403 63fc 	and.w	r3, r3, #2016	@ 0x7e0
 801b488:	f420 60fc 	bic.w	r0, r0, #2016	@ 0x7e0
 801b48c:	4318      	orrs	r0, r3
 801b48e:	8008      	strh	r0, [r1, #0]
 801b490:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
 801b494:	4684      	mov	ip, r0
 801b496:	e7a0      	b.n	801b3da <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x3a>
 801b498:	4607      	mov	r7, r0
 801b49a:	4684      	mov	ip, r0
 801b49c:	e7a7      	b.n	801b3ee <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x4e>
 801b49e:	4607      	mov	r7, r0
 801b4a0:	e7a5      	b.n	801b3ee <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x4e>
 801b4a2:	4602      	mov	r2, r0
 801b4a4:	e7b2      	b.n	801b40c <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x6c>
 801b4a6:	4602      	mov	r2, r0
 801b4a8:	e7ba      	b.n	801b420 <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x80>

0801b4aa <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff>:
 801b4aa:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 801b4ae:	b093      	sub	sp, #76	@ 0x4c
 801b4b0:	e9dd 461d 	ldrd	r4, r6, [sp, #116]	@ 0x74
 801b4b4:	920f      	str	r2, [sp, #60]	@ 0x3c
 801b4b6:	9a21      	ldr	r2, [sp, #132]	@ 0x84
 801b4b8:	9108      	str	r1, [sp, #32]
 801b4ba:	9306      	str	r3, [sp, #24]
 801b4bc:	e9dd 1322 	ldrd	r1, r3, [sp, #136]	@ 0x88
 801b4c0:	9010      	str	r0, [sp, #64]	@ 0x40
 801b4c2:	6850      	ldr	r0, [r2, #4]
 801b4c4:	6812      	ldr	r2, [r2, #0]
 801b4c6:	fb00 1303 	mla	r3, r0, r3, r1
 801b4ca:	eb02 0943 	add.w	r9, r2, r3, lsl #1
 801b4ce:	9b24      	ldr	r3, [sp, #144]	@ 0x90
 801b4d0:	681b      	ldr	r3, [r3, #0]
 801b4d2:	9307      	str	r3, [sp, #28]
 801b4d4:	9b24      	ldr	r3, [sp, #144]	@ 0x90
 801b4d6:	685f      	ldr	r7, [r3, #4]
 801b4d8:	eef7 6a00 	vmov.f32	s13, #112	@ 0x3f800000  1.0
 801b4dc:	3704      	adds	r7, #4
 801b4de:	9b08      	ldr	r3, [sp, #32]
 801b4e0:	2b00      	cmp	r3, #0
 801b4e2:	dc03      	bgt.n	801b4ec <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x42>
 801b4e4:	9b0f      	ldr	r3, [sp, #60]	@ 0x3c
 801b4e6:	2b00      	cmp	r3, #0
 801b4e8:	f340 81b2 	ble.w	801b850 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3a6>
 801b4ec:	9b24      	ldr	r3, [sp, #144]	@ 0x90
 801b4ee:	f9b3 1008 	ldrsh.w	r1, [r3, #8]
 801b4f2:	f9b3 200c 	ldrsh.w	r2, [r3, #12]
 801b4f6:	1e48      	subs	r0, r1, #1
 801b4f8:	f102 3cff 	add.w	ip, r2, #4294967295
 801b4fc:	9b06      	ldr	r3, [sp, #24]
 801b4fe:	2b00      	cmp	r3, #0
 801b500:	f340 80a9 	ble.w	801b656 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1ac>
 801b504:	ea5f 4e24 	movs.w	lr, r4, asr #16
 801b508:	ea4f 4326 	mov.w	r3, r6, asr #16
 801b50c:	d406      	bmi.n	801b51c <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x72>
 801b50e:	4586      	cmp	lr, r0
 801b510:	da04      	bge.n	801b51c <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x72>
 801b512:	2b00      	cmp	r3, #0
 801b514:	db02      	blt.n	801b51c <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x72>
 801b516:	4563      	cmp	r3, ip
 801b518:	f2c0 809e 	blt.w	801b658 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1ae>
 801b51c:	f11e 0e01 	adds.w	lr, lr, #1
 801b520:	f100 808f 	bmi.w	801b642 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x198>
 801b524:	4571      	cmp	r1, lr
 801b526:	f2c0 808c 	blt.w	801b642 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x198>
 801b52a:	3301      	adds	r3, #1
 801b52c:	f100 8089 	bmi.w	801b642 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x198>
 801b530:	429a      	cmp	r2, r3
 801b532:	f2c0 8086 	blt.w	801b642 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x198>
 801b536:	f8dd b018 	ldr.w	fp, [sp, #24]
 801b53a:	46c8      	mov	r8, r9
 801b53c:	f1bb 0f00 	cmp.w	fp, #0
 801b540:	f340 80a6 	ble.w	801b690 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1e6>
 801b544:	9a24      	ldr	r2, [sp, #144]	@ 0x90
 801b546:	9b24      	ldr	r3, [sp, #144]	@ 0x90
 801b548:	f8d2 e00c 	ldr.w	lr, [r2, #12]
 801b54c:	689b      	ldr	r3, [r3, #8]
 801b54e:	1422      	asrs	r2, r4, #16
 801b550:	ea4f 4c26 	mov.w	ip, r6, asr #16
 801b554:	f3c4 3003 	ubfx	r0, r4, #12, #4
 801b558:	f3c6 3103 	ubfx	r1, r6, #12, #4
 801b55c:	f100 80e3 	bmi.w	801b726 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x27c>
 801b560:	f103 3aff 	add.w	sl, r3, #4294967295
 801b564:	4552      	cmp	r2, sl
 801b566:	f280 80de 	bge.w	801b726 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x27c>
 801b56a:	f1bc 0f00 	cmp.w	ip, #0
 801b56e:	f2c0 80da 	blt.w	801b726 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x27c>
 801b572:	f10e 3aff 	add.w	sl, lr, #4294967295
 801b576:	45d4      	cmp	ip, sl
 801b578:	f280 80d5 	bge.w	801b726 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x27c>
 801b57c:	b21b      	sxth	r3, r3
 801b57e:	fb0c 2203 	mla	r2, ip, r3, r2
 801b582:	9d07      	ldr	r5, [sp, #28]
 801b584:	eb05 0a02 	add.w	sl, r5, r2
 801b588:	5caa      	ldrb	r2, [r5, r2]
 801b58a:	f837 e012 	ldrh.w	lr, [r7, r2, lsl #1]
 801b58e:	2800      	cmp	r0, #0
 801b590:	f000 80c0 	beq.w	801b714 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x26a>
 801b594:	f89a 2001 	ldrb.w	r2, [sl, #1]
 801b598:	f837 2012 	ldrh.w	r2, [r7, r2, lsl #1]
 801b59c:	920b      	str	r2, [sp, #44]	@ 0x2c
 801b59e:	b151      	cbz	r1, 801b5b6 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x10c>
 801b5a0:	eb0a 0203 	add.w	r2, sl, r3
 801b5a4:	f81a 3003 	ldrb.w	r3, [sl, r3]
 801b5a8:	f837 3013 	ldrh.w	r3, [r7, r3, lsl #1]
 801b5ac:	9309      	str	r3, [sp, #36]	@ 0x24
 801b5ae:	7853      	ldrb	r3, [r2, #1]
 801b5b0:	f837 3013 	ldrh.w	r3, [r7, r3, lsl #1]
 801b5b4:	930c      	str	r3, [sp, #48]	@ 0x30
 801b5b6:	9b0b      	ldr	r3, [sp, #44]	@ 0x2c
 801b5b8:	9d0c      	ldr	r5, [sp, #48]	@ 0x30
 801b5ba:	ea4f 4c03 	mov.w	ip, r3, lsl #16
 801b5be:	f00c 6cfc 	and.w	ip, ip, #132120576	@ 0x7e00000
 801b5c2:	f423 63fc 	bic.w	r3, r3, #2016	@ 0x7e0
 801b5c6:	ea4c 0c03 	orr.w	ip, ip, r3
 801b5ca:	9b0c      	ldr	r3, [sp, #48]	@ 0x30
 801b5cc:	041b      	lsls	r3, r3, #16
 801b5ce:	fb10 f201 	smulbb	r2, r0, r1
 801b5d2:	f003 63fc 	and.w	r3, r3, #132120576	@ 0x7e00000
 801b5d6:	f425 65fc 	bic.w	r5, r5, #2016	@ 0x7e0
 801b5da:	10d2      	asrs	r2, r2, #3
 801b5dc:	432b      	orrs	r3, r5
 801b5de:	ebc2 0a40 	rsb	sl, r2, r0, lsl #1
 801b5e2:	4353      	muls	r3, r2
 801b5e4:	fb0a 330c 	mla	r3, sl, ip, r3
 801b5e8:	ea4f 4c0e 	mov.w	ip, lr, lsl #16
 801b5ec:	f00c 6cfc 	and.w	ip, ip, #132120576	@ 0x7e00000
 801b5f0:	f42e 6efc 	bic.w	lr, lr, #2016	@ 0x7e0
 801b5f4:	ea4c 0e0e 	orr.w	lr, ip, lr
 801b5f8:	f1c1 0c10 	rsb	ip, r1, #16
 801b5fc:	ebac 0c00 	sub.w	ip, ip, r0
 801b600:	eb02 0c4c 	add.w	ip, r2, ip, lsl #1
 801b604:	fb0c 3c0e 	mla	ip, ip, lr, r3
 801b608:	9b09      	ldr	r3, [sp, #36]	@ 0x24
 801b60a:	0418      	lsls	r0, r3, #16
 801b60c:	f000 60fc 	and.w	r0, r0, #132120576	@ 0x7e00000
 801b610:	f423 63fc 	bic.w	r3, r3, #2016	@ 0x7e0
 801b614:	4318      	orrs	r0, r3
 801b616:	ebc2 0241 	rsb	r2, r2, r1, lsl #1
 801b61a:	fb02 c200 	mla	r2, r2, r0, ip
 801b61e:	0d53      	lsrs	r3, r2, #21
 801b620:	0952      	lsrs	r2, r2, #5
 801b622:	f403 63fc 	and.w	r3, r3, #2016	@ 0x7e0
 801b626:	f422 62fc 	bic.w	r2, r2, #2016	@ 0x7e0
 801b62a:	431a      	orrs	r2, r3
 801b62c:	f8a8 2000 	strh.w	r2, [r8]
 801b630:	9b1f      	ldr	r3, [sp, #124]	@ 0x7c
 801b632:	441c      	add	r4, r3
 801b634:	9b20      	ldr	r3, [sp, #128]	@ 0x80
 801b636:	f108 0802 	add.w	r8, r8, #2
 801b63a:	441e      	add	r6, r3
 801b63c:	f10b 3bff 	add.w	fp, fp, #4294967295
 801b640:	e77c      	b.n	801b53c <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x92>
 801b642:	9b1f      	ldr	r3, [sp, #124]	@ 0x7c
 801b644:	441c      	add	r4, r3
 801b646:	9b20      	ldr	r3, [sp, #128]	@ 0x80
 801b648:	441e      	add	r6, r3
 801b64a:	9b06      	ldr	r3, [sp, #24]
 801b64c:	3b01      	subs	r3, #1
 801b64e:	9306      	str	r3, [sp, #24]
 801b650:	f109 0902 	add.w	r9, r9, #2
 801b654:	e752      	b.n	801b4fc <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x52>
 801b656:	d020      	beq.n	801b69a <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1f0>
 801b658:	9b06      	ldr	r3, [sp, #24]
 801b65a:	981f      	ldr	r0, [sp, #124]	@ 0x7c
 801b65c:	3b01      	subs	r3, #1
 801b65e:	fb00 4003 	mla	r0, r0, r3, r4
 801b662:	1400      	asrs	r0, r0, #16
 801b664:	f53f af67 	bmi.w	801b536 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x8c>
 801b668:	3901      	subs	r1, #1
 801b66a:	4288      	cmp	r0, r1
 801b66c:	f6bf af63 	bge.w	801b536 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x8c>
 801b670:	9920      	ldr	r1, [sp, #128]	@ 0x80
 801b672:	fb01 6303 	mla	r3, r1, r3, r6
 801b676:	141b      	asrs	r3, r3, #16
 801b678:	f53f af5d 	bmi.w	801b536 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x8c>
 801b67c:	3a01      	subs	r2, #1
 801b67e:	4293      	cmp	r3, r2
 801b680:	f6bf af59 	bge.w	801b536 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x8c>
 801b684:	f8dd 8018 	ldr.w	r8, [sp, #24]
 801b688:	46ca      	mov	sl, r9
 801b68a:	f1b8 0f00 	cmp.w	r8, #0
 801b68e:	dc67      	bgt.n	801b760 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2b6>
 801b690:	9b06      	ldr	r3, [sp, #24]
 801b692:	ea23 75e3 	bic.w	r5, r3, r3, asr #31
 801b696:	eb09 0945 	add.w	r9, r9, r5, lsl #1
 801b69a:	9b08      	ldr	r3, [sp, #32]
 801b69c:	2b00      	cmp	r3, #0
 801b69e:	f340 80d7 	ble.w	801b850 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3a6>
 801b6a2:	ee30 0a04 	vadd.f32	s0, s0, s8
 801b6a6:	ee70 0aa4 	vadd.f32	s1, s1, s9
 801b6aa:	eec6 7a80 	vdiv.f32	s15, s13, s0
 801b6ae:	9b1c      	ldr	r3, [sp, #112]	@ 0x70
 801b6b0:	ee31 1a05 	vadd.f32	s2, s2, s10
 801b6b4:	ee20 7aa7 	vmul.f32	s14, s1, s15
 801b6b8:	eeb0 6a62 	vmov.f32	s12, s5
 801b6bc:	ee61 7a27 	vmul.f32	s15, s2, s15
 801b6c0:	eebe 6ac8 	vcvt.s32.f32	s12, s12, #16
 801b6c4:	ee77 2a62 	vsub.f32	s5, s14, s5
 801b6c8:	ee16 4a10 	vmov	r4, s12
 801b6cc:	eefe 2ac8 	vcvt.s32.f32	s5, s5, #16
 801b6d0:	eeb0 6a43 	vmov.f32	s12, s6
 801b6d4:	ee37 3ac3 	vsub.f32	s6, s15, s6
 801b6d8:	ee12 2a90 	vmov	r2, s5
 801b6dc:	eebe 3ac8 	vcvt.s32.f32	s6, s6, #16
 801b6e0:	fb92 f3f3 	sdiv	r3, r2, r3
 801b6e4:	ee13 2a10 	vmov	r2, s6
 801b6e8:	931f      	str	r3, [sp, #124]	@ 0x7c
 801b6ea:	9b1c      	ldr	r3, [sp, #112]	@ 0x70
 801b6ec:	fb92 f3f3 	sdiv	r3, r2, r3
 801b6f0:	9320      	str	r3, [sp, #128]	@ 0x80
 801b6f2:	9b08      	ldr	r3, [sp, #32]
 801b6f4:	9a0f      	ldr	r2, [sp, #60]	@ 0x3c
 801b6f6:	3b01      	subs	r3, #1
 801b6f8:	eebe 6ac8 	vcvt.s32.f32	s12, s12, #16
 801b6fc:	9308      	str	r3, [sp, #32]
 801b6fe:	9b1c      	ldr	r3, [sp, #112]	@ 0x70
 801b700:	bf08      	it	eq
 801b702:	4613      	moveq	r3, r2
 801b704:	ee16 6a10 	vmov	r6, s12
 801b708:	9306      	str	r3, [sp, #24]
 801b70a:	eeb0 3a67 	vmov.f32	s6, s15
 801b70e:	eef0 2a47 	vmov.f32	s5, s14
 801b712:	e6e4      	b.n	801b4de <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x34>
 801b714:	2900      	cmp	r1, #0
 801b716:	f43f af4e 	beq.w	801b5b6 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x10c>
 801b71a:	f81a 3003 	ldrb.w	r3, [sl, r3]
 801b71e:	f837 3013 	ldrh.w	r3, [r7, r3, lsl #1]
 801b722:	9309      	str	r3, [sp, #36]	@ 0x24
 801b724:	e747      	b.n	801b5b6 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x10c>
 801b726:	f112 0a01 	adds.w	sl, r2, #1
 801b72a:	d481      	bmi.n	801b630 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x186>
 801b72c:	4553      	cmp	r3, sl
 801b72e:	f6ff af7f 	blt.w	801b630 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x186>
 801b732:	f11c 0a01 	adds.w	sl, ip, #1
 801b736:	f53f af7b 	bmi.w	801b630 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x186>
 801b73a:	45d6      	cmp	lr, sl
 801b73c:	f6ff af78 	blt.w	801b630 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x186>
 801b740:	e9cd 2c02 	strd	r2, ip, [sp, #8]
 801b744:	b21b      	sxth	r3, r3
 801b746:	fa0f f28e 	sxth.w	r2, lr
 801b74a:	e9cd 0104 	strd	r0, r1, [sp, #16]
 801b74e:	9201      	str	r2, [sp, #4]
 801b750:	9300      	str	r3, [sp, #0]
 801b752:	9a07      	ldr	r2, [sp, #28]
 801b754:	9810      	ldr	r0, [sp, #64]	@ 0x40
 801b756:	463b      	mov	r3, r7
 801b758:	4641      	mov	r1, r8
 801b75a:	f7ff fe21 	bl	801b3a0 <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh>
 801b75e:	e767      	b.n	801b630 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x186>
 801b760:	9b24      	ldr	r3, [sp, #144]	@ 0x90
 801b762:	9d07      	ldr	r5, [sp, #28]
 801b764:	f9b3 3008 	ldrsh.w	r3, [r3, #8]
 801b768:	1422      	asrs	r2, r4, #16
 801b76a:	1431      	asrs	r1, r6, #16
 801b76c:	fb03 2101 	mla	r1, r3, r1, r2
 801b770:	9a07      	ldr	r2, [sp, #28]
 801b772:	440a      	add	r2, r1
 801b774:	5c69      	ldrb	r1, [r5, r1]
 801b776:	f3c4 3e03 	ubfx	lr, r4, #12, #4
 801b77a:	f3c6 3003 	ubfx	r0, r6, #12, #4
 801b77e:	f837 1011 	ldrh.w	r1, [r7, r1, lsl #1]
 801b782:	f1be 0f00 	cmp.w	lr, #0
 801b786:	d05c      	beq.n	801b842 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x398>
 801b788:	f892 c001 	ldrb.w	ip, [r2, #1]
 801b78c:	f837 501c 	ldrh.w	r5, [r7, ip, lsl #1]
 801b790:	950d      	str	r5, [sp, #52]	@ 0x34
 801b792:	b150      	cbz	r0, 801b7aa <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x300>
 801b794:	eb02 0c03 	add.w	ip, r2, r3
 801b798:	5cd3      	ldrb	r3, [r2, r3]
 801b79a:	f837 3013 	ldrh.w	r3, [r7, r3, lsl #1]
 801b79e:	930a      	str	r3, [sp, #40]	@ 0x28
 801b7a0:	f89c 3001 	ldrb.w	r3, [ip, #1]
 801b7a4:	f837 3013 	ldrh.w	r3, [r7, r3, lsl #1]
 801b7a8:	930e      	str	r3, [sp, #56]	@ 0x38
 801b7aa:	9b0d      	ldr	r3, [sp, #52]	@ 0x34
 801b7ac:	9d0e      	ldr	r5, [sp, #56]	@ 0x38
 801b7ae:	fb1e f200 	smulbb	r2, lr, r0
 801b7b2:	ea4f 4c03 	mov.w	ip, r3, lsl #16
 801b7b6:	10d2      	asrs	r2, r2, #3
 801b7b8:	f423 63fc 	bic.w	r3, r3, #2016	@ 0x7e0
 801b7bc:	f00c 6cfc 	and.w	ip, ip, #132120576	@ 0x7e00000
 801b7c0:	ea4c 0c03 	orr.w	ip, ip, r3
 801b7c4:	ebc2 034e 	rsb	r3, r2, lr, lsl #1
 801b7c8:	9311      	str	r3, [sp, #68]	@ 0x44
 801b7ca:	9b0e      	ldr	r3, [sp, #56]	@ 0x38
 801b7cc:	041b      	lsls	r3, r3, #16
 801b7ce:	f425 6bfc 	bic.w	fp, r5, #2016	@ 0x7e0
 801b7d2:	f003 63fc 	and.w	r3, r3, #132120576	@ 0x7e00000
 801b7d6:	ea43 030b 	orr.w	r3, r3, fp
 801b7da:	9d11      	ldr	r5, [sp, #68]	@ 0x44
 801b7dc:	4353      	muls	r3, r2
 801b7de:	ea4f 4b01 	mov.w	fp, r1, lsl #16
 801b7e2:	fb05 3c0c 	mla	ip, r5, ip, r3
 801b7e6:	f421 61fc 	bic.w	r1, r1, #2016	@ 0x7e0
 801b7ea:	f00b 63fc 	and.w	r3, fp, #132120576	@ 0x7e00000
 801b7ee:	ea43 0b01 	orr.w	fp, r3, r1
 801b7f2:	f1c0 0110 	rsb	r1, r0, #16
 801b7f6:	9b0a      	ldr	r3, [sp, #40]	@ 0x28
 801b7f8:	eba1 0e0e 	sub.w	lr, r1, lr
 801b7fc:	eb02 0e4e 	add.w	lr, r2, lr, lsl #1
 801b800:	fb0e cc0b 	mla	ip, lr, fp, ip
 801b804:	ea4f 4b03 	mov.w	fp, r3, lsl #16
 801b808:	f423 6efc 	bic.w	lr, r3, #2016	@ 0x7e0
 801b80c:	f00b 6bfc 	and.w	fp, fp, #132120576	@ 0x7e00000
 801b810:	ea4b 0e0e 	orr.w	lr, fp, lr
 801b814:	ebc2 0240 	rsb	r2, r2, r0, lsl #1
 801b818:	fb02 cc0e 	mla	ip, r2, lr, ip
 801b81c:	ea4f 535c 	mov.w	r3, ip, lsr #21
 801b820:	ea4f 1c5c 	mov.w	ip, ip, lsr #5
 801b824:	f403 63fc 	and.w	r3, r3, #2016	@ 0x7e0
 801b828:	f42c 6cfc 	bic.w	ip, ip, #2016	@ 0x7e0
 801b82c:	ea43 0c0c 	orr.w	ip, r3, ip
 801b830:	9b1f      	ldr	r3, [sp, #124]	@ 0x7c
 801b832:	f82a cb02 	strh.w	ip, [sl], #2
 801b836:	441c      	add	r4, r3
 801b838:	9b20      	ldr	r3, [sp, #128]	@ 0x80
 801b83a:	f108 38ff 	add.w	r8, r8, #4294967295
 801b83e:	441e      	add	r6, r3
 801b840:	e723      	b.n	801b68a <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1e0>
 801b842:	2800      	cmp	r0, #0
 801b844:	d0b1      	beq.n	801b7aa <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x300>
 801b846:	5cd3      	ldrb	r3, [r2, r3]
 801b848:	f837 3013 	ldrh.w	r3, [r7, r3, lsl #1]
 801b84c:	930a      	str	r3, [sp, #40]	@ 0x28
 801b84e:	e7ac      	b.n	801b7aa <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x300>
 801b850:	b013      	add	sp, #76	@ 0x4c
 801b852:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}

0801b856 <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhS4_ssiihhh>:
 801b856:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 801b85a:	880d      	ldrh	r5, [r1, #0]
 801b85c:	b087      	sub	sp, #28
 801b85e:	10ef      	asrs	r7, r5, #3
 801b860:	ea4f 2a25 	mov.w	sl, r5, asr #8
 801b864:	f007 07fc 	and.w	r7, r7, #252	@ 0xfc
 801b868:	00ed      	lsls	r5, r5, #3
 801b86a:	9701      	str	r7, [sp, #4]
 801b86c:	b2ed      	uxtb	r5, r5
 801b86e:	9502      	str	r5, [sp, #8]
 801b870:	9d01      	ldr	r5, [sp, #4]
 801b872:	9103      	str	r1, [sp, #12]
 801b874:	e9dd 0612 	ldrd	r0, r6, [sp, #72]	@ 0x48
 801b878:	f9bd 9040 	ldrsh.w	r9, [sp, #64]	@ 0x40
 801b87c:	9902      	ldr	r1, [sp, #8]
 801b87e:	f9bd b044 	ldrsh.w	fp, [sp, #68]	@ 0x44
 801b882:	f89d 4050 	ldrb.w	r4, [sp, #80]	@ 0x50
 801b886:	f89d e054 	ldrb.w	lr, [sp, #84]	@ 0x54
 801b88a:	f89d 8058 	ldrb.w	r8, [sp, #88]	@ 0x58
 801b88e:	f00a 0af8 	and.w	sl, sl, #248	@ 0xf8
 801b892:	022d      	lsls	r5, r5, #8
 801b894:	ea45 450a 	orr.w	r5, r5, sl, lsl #16
 801b898:	fb06 0709 	mla	r7, r6, r9, r0
 801b89c:	430d      	orrs	r5, r1
 801b89e:	2e00      	cmp	r6, #0
 801b8a0:	eb02 0c07 	add.w	ip, r2, r7
 801b8a4:	9505      	str	r5, [sp, #20]
 801b8a6:	f2c0 80b6 	blt.w	801ba16 <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhS4_ssiihhh+0x1c0>
 801b8aa:	45b3      	cmp	fp, r6
 801b8ac:	f340 80b3 	ble.w	801ba16 <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhS4_ssiihhh+0x1c0>
 801b8b0:	2800      	cmp	r0, #0
 801b8b2:	f2c0 80ae 	blt.w	801ba12 <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhS4_ssiihhh+0x1bc>
 801b8b6:	4581      	cmp	r9, r0
 801b8b8:	f340 80ab 	ble.w	801ba12 <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhS4_ssiihhh+0x1bc>
 801b8bc:	5dd7      	ldrb	r7, [r2, r7]
 801b8be:	eb07 0747 	add.w	r7, r7, r7, lsl #1
 801b8c2:	441f      	add	r7, r3
 801b8c4:	1c42      	adds	r2, r0, #1
 801b8c6:	f100 80a9 	bmi.w	801ba1c <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhS4_ssiihhh+0x1c6>
 801b8ca:	4591      	cmp	r9, r2
 801b8cc:	f340 80a6 	ble.w	801ba1c <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhS4_ssiihhh+0x1c6>
 801b8d0:	2c00      	cmp	r4, #0
 801b8d2:	f000 80a3 	beq.w	801ba1c <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhS4_ssiihhh+0x1c6>
 801b8d6:	f89c 5001 	ldrb.w	r5, [ip, #1]
 801b8da:	eb05 0545 	add.w	r5, r5, r5, lsl #1
 801b8de:	441d      	add	r5, r3
 801b8e0:	3601      	adds	r6, #1
 801b8e2:	f100 809f 	bmi.w	801ba24 <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhS4_ssiihhh+0x1ce>
 801b8e6:	45b3      	cmp	fp, r6
 801b8e8:	f340 809c 	ble.w	801ba24 <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhS4_ssiihhh+0x1ce>
 801b8ec:	f1be 0f00 	cmp.w	lr, #0
 801b8f0:	f000 8098 	beq.w	801ba24 <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhS4_ssiihhh+0x1ce>
 801b8f4:	2800      	cmp	r0, #0
 801b8f6:	f2c0 8093 	blt.w	801ba20 <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhS4_ssiihhh+0x1ca>
 801b8fa:	4581      	cmp	r9, r0
 801b8fc:	f340 8090 	ble.w	801ba20 <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhS4_ssiihhh+0x1ca>
 801b900:	f81c 6009 	ldrb.w	r6, [ip, r9]
 801b904:	eb06 0646 	add.w	r6, r6, r6, lsl #1
 801b908:	441e      	add	r6, r3
 801b90a:	3001      	adds	r0, #1
 801b90c:	f100 808d 	bmi.w	801ba2a <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhS4_ssiihhh+0x1d4>
 801b910:	4581      	cmp	r9, r0
 801b912:	f340 808a 	ble.w	801ba2a <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhS4_ssiihhh+0x1d4>
 801b916:	2c00      	cmp	r4, #0
 801b918:	f000 8087 	beq.w	801ba2a <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhS4_ssiihhh+0x1d4>
 801b91c:	44e1      	add	r9, ip
 801b91e:	f899 2001 	ldrb.w	r2, [r9, #1]
 801b922:	eb02 0242 	add.w	r2, r2, r2, lsl #1
 801b926:	4413      	add	r3, r2
 801b928:	b2a4      	uxth	r4, r4
 801b92a:	fa1f fe8e 	uxth.w	lr, lr
 801b92e:	fb04 fb0e 	mul.w	fp, r4, lr
 801b932:	0124      	lsls	r4, r4, #4
 801b934:	ebcb 1e0e 	rsb	lr, fp, lr, lsl #4
 801b938:	f5c4 7980 	rsb	r9, r4, #256	@ 0x100
 801b93c:	eba4 040b 	sub.w	r4, r4, fp
 801b940:	fa1f f08e 	uxth.w	r0, lr
 801b944:	b2a2      	uxth	r2, r4
 801b946:	78ac      	ldrb	r4, [r5, #2]
 801b948:	f897 c002 	ldrb.w	ip, [r7, #2]
 801b94c:	9901      	ldr	r1, [sp, #4]
 801b94e:	eba9 0900 	sub.w	r9, r9, r0
 801b952:	fa1f f989 	uxth.w	r9, r9
 801b956:	4354      	muls	r4, r2
 801b958:	fb09 440c 	mla	r4, r9, ip, r4
 801b95c:	f896 c002 	ldrb.w	ip, [r6, #2]
 801b960:	fb00 440c 	mla	r4, r0, ip, r4
 801b964:	f893 c002 	ldrb.w	ip, [r3, #2]
 801b968:	fa1f fe88 	uxth.w	lr, r8
 801b96c:	ea6f 0808 	mvn.w	r8, r8
 801b970:	fa5f f888 	uxtb.w	r8, r8
 801b974:	fb0b 4c0c 	mla	ip, fp, ip, r4
 801b978:	fb1a fa08 	smulbb	sl, sl, r8
 801b97c:	f3cc 2c07 	ubfx	ip, ip, #8, #8
 801b980:	fb0c ac0e 	mla	ip, ip, lr, sl
 801b984:	f895 a001 	ldrb.w	sl, [r5, #1]
 801b988:	787c      	ldrb	r4, [r7, #1]
 801b98a:	782d      	ldrb	r5, [r5, #0]
 801b98c:	783f      	ldrb	r7, [r7, #0]
 801b98e:	fb02 fa0a 	mul.w	sl, r2, sl
 801b992:	fb09 aa04 	mla	sl, r9, r4, sl
 801b996:	7874      	ldrb	r4, [r6, #1]
 801b998:	436a      	muls	r2, r5
 801b99a:	7835      	ldrb	r5, [r6, #0]
 801b99c:	fb00 aa04 	mla	sl, r0, r4, sl
 801b9a0:	fb09 2207 	mla	r2, r9, r7, r2
 801b9a4:	785c      	ldrb	r4, [r3, #1]
 801b9a6:	781b      	ldrb	r3, [r3, #0]
 801b9a8:	fb00 2005 	mla	r0, r0, r5, r2
 801b9ac:	fb0b a404 	mla	r4, fp, r4, sl
 801b9b0:	fb0b 0b03 	mla	fp, fp, r3, r0
 801b9b4:	9b02      	ldr	r3, [sp, #8]
 801b9b6:	fb11 fa08 	smulbb	sl, r1, r8
 801b9ba:	fa1f fc8c 	uxth.w	ip, ip
 801b9be:	fb13 f808 	smulbb	r8, r3, r8
 801b9c2:	f3cb 2b07 	ubfx	fp, fp, #8, #8
 801b9c6:	f3c4 2407 	ubfx	r4, r4, #8, #8
 801b9ca:	fb04 a40e 	mla	r4, r4, lr, sl
 801b9ce:	f10c 0301 	add.w	r3, ip, #1
 801b9d2:	fb0b 8e0e 	mla	lr, fp, lr, r8
 801b9d6:	fa1f fe8e 	uxth.w	lr, lr
 801b9da:	b2a4      	uxth	r4, r4
 801b9dc:	eb03 2c1c 	add.w	ip, r3, ip, lsr #8
 801b9e0:	f40c 4378 	and.w	r3, ip, #63488	@ 0xf800
 801b9e4:	f104 0a01 	add.w	sl, r4, #1
 801b9e8:	f10e 0c01 	add.w	ip, lr, #1
 801b9ec:	eb0c 2c1e 	add.w	ip, ip, lr, lsr #8
 801b9f0:	eb0a 2414 	add.w	r4, sl, r4, lsr #8
 801b9f4:	f3cc 2cc4 	ubfx	ip, ip, #11, #5
 801b9f8:	0964      	lsrs	r4, r4, #5
 801b9fa:	ea4c 0c03 	orr.w	ip, ip, r3
 801b9fe:	f404 64fc 	and.w	r4, r4, #2016	@ 0x7e0
 801ba02:	9b03      	ldr	r3, [sp, #12]
 801ba04:	ea4c 0c04 	orr.w	ip, ip, r4
 801ba08:	f8a3 c000 	strh.w	ip, [r3]
 801ba0c:	b007      	add	sp, #28
 801ba0e:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 801ba12:	af05      	add	r7, sp, #20
 801ba14:	e756      	b.n	801b8c4 <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhS4_ssiihhh+0x6e>
 801ba16:	ad05      	add	r5, sp, #20
 801ba18:	462f      	mov	r7, r5
 801ba1a:	e761      	b.n	801b8e0 <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhS4_ssiihhh+0x8a>
 801ba1c:	ad05      	add	r5, sp, #20
 801ba1e:	e75f      	b.n	801b8e0 <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhS4_ssiihhh+0x8a>
 801ba20:	ae05      	add	r6, sp, #20
 801ba22:	e772      	b.n	801b90a <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhS4_ssiihhh+0xb4>
 801ba24:	ab05      	add	r3, sp, #20
 801ba26:	461e      	mov	r6, r3
 801ba28:	e77e      	b.n	801b928 <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhS4_ssiihhh+0xd2>
 801ba2a:	ab05      	add	r3, sp, #20
 801ba2c:	e77c      	b.n	801b928 <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhS4_ssiihhh+0xd2>

0801ba2e <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff>:
 801ba2e:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 801ba32:	b095      	sub	sp, #84	@ 0x54
 801ba34:	9212      	str	r2, [sp, #72]	@ 0x48
 801ba36:	9309      	str	r3, [sp, #36]	@ 0x24
 801ba38:	9a23      	ldr	r2, [sp, #140]	@ 0x8c
 801ba3a:	f89d 309c 	ldrb.w	r3, [sp, #156]	@ 0x9c
 801ba3e:	930f      	str	r3, [sp, #60]	@ 0x3c
 801ba40:	910e      	str	r1, [sp, #56]	@ 0x38
 801ba42:	e9dd 1324 	ldrd	r1, r3, [sp, #144]	@ 0x90
 801ba46:	9013      	str	r0, [sp, #76]	@ 0x4c
 801ba48:	6850      	ldr	r0, [r2, #4]
 801ba4a:	6812      	ldr	r2, [r2, #0]
 801ba4c:	fb00 1303 	mla	r3, r0, r3, r1
 801ba50:	eb02 0343 	add.w	r3, r2, r3, lsl #1
 801ba54:	930a      	str	r3, [sp, #40]	@ 0x28
 801ba56:	9b26      	ldr	r3, [sp, #152]	@ 0x98
 801ba58:	681b      	ldr	r3, [r3, #0]
 801ba5a:	930d      	str	r3, [sp, #52]	@ 0x34
 801ba5c:	9b26      	ldr	r3, [sp, #152]	@ 0x98
 801ba5e:	685c      	ldr	r4, [r3, #4]
 801ba60:	9b0f      	ldr	r3, [sp, #60]	@ 0x3c
 801ba62:	43db      	mvns	r3, r3
 801ba64:	b2db      	uxtb	r3, r3
 801ba66:	3404      	adds	r4, #4
 801ba68:	930b      	str	r3, [sp, #44]	@ 0x2c
 801ba6a:	9b0e      	ldr	r3, [sp, #56]	@ 0x38
 801ba6c:	2b00      	cmp	r3, #0
 801ba6e:	dc03      	bgt.n	801ba78 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x4a>
 801ba70:	9b12      	ldr	r3, [sp, #72]	@ 0x48
 801ba72:	2b00      	cmp	r3, #0
 801ba74:	f340 8255 	ble.w	801bf22 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x4f4>
 801ba78:	9b26      	ldr	r3, [sp, #152]	@ 0x98
 801ba7a:	f9b3 1008 	ldrsh.w	r1, [r3, #8]
 801ba7e:	f9b3 200c 	ldrsh.w	r2, [r3, #12]
 801ba82:	1e48      	subs	r0, r1, #1
 801ba84:	1e55      	subs	r5, r2, #1
 801ba86:	9b09      	ldr	r3, [sp, #36]	@ 0x24
 801ba88:	2b00      	cmp	r3, #0
 801ba8a:	f340 80f9 	ble.w	801bc80 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x252>
 801ba8e:	9e1f      	ldr	r6, [sp, #124]	@ 0x7c
 801ba90:	9b20      	ldr	r3, [sp, #128]	@ 0x80
 801ba92:	1436      	asrs	r6, r6, #16
 801ba94:	ea4f 4323 	mov.w	r3, r3, asr #16
 801ba98:	d406      	bmi.n	801baa8 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x7a>
 801ba9a:	4286      	cmp	r6, r0
 801ba9c:	da04      	bge.n	801baa8 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x7a>
 801ba9e:	2b00      	cmp	r3, #0
 801baa0:	db02      	blt.n	801baa8 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x7a>
 801baa2:	42ab      	cmp	r3, r5
 801baa4:	f2c0 80ed 	blt.w	801bc82 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x254>
 801baa8:	3601      	adds	r6, #1
 801baaa:	f100 80da 	bmi.w	801bc62 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x234>
 801baae:	42b1      	cmp	r1, r6
 801bab0:	f2c0 80d7 	blt.w	801bc62 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x234>
 801bab4:	3301      	adds	r3, #1
 801bab6:	f100 80d4 	bmi.w	801bc62 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x234>
 801baba:	429a      	cmp	r2, r3
 801babc:	f2c0 80d1 	blt.w	801bc62 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x234>
 801bac0:	9b09      	ldr	r3, [sp, #36]	@ 0x24
 801bac2:	9311      	str	r3, [sp, #68]	@ 0x44
 801bac4:	9b0a      	ldr	r3, [sp, #40]	@ 0x28
 801bac6:	930c      	str	r3, [sp, #48]	@ 0x30
 801bac8:	9b11      	ldr	r3, [sp, #68]	@ 0x44
 801baca:	2b00      	cmp	r3, #0
 801bacc:	f340 80fa 	ble.w	801bcc4 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x296>
 801bad0:	9826      	ldr	r0, [sp, #152]	@ 0x98
 801bad2:	9b20      	ldr	r3, [sp, #128]	@ 0x80
 801bad4:	9a20      	ldr	r2, [sp, #128]	@ 0x80
 801bad6:	68c6      	ldr	r6, [r0, #12]
 801bad8:	981f      	ldr	r0, [sp, #124]	@ 0x7c
 801bada:	141d      	asrs	r5, r3, #16
 801badc:	f3c2 3103 	ubfx	r1, r2, #12, #4
 801bae0:	9b1f      	ldr	r3, [sp, #124]	@ 0x7c
 801bae2:	9a26      	ldr	r2, [sp, #152]	@ 0x98
 801bae4:	1400      	asrs	r0, r0, #16
 801bae6:	f3c3 3303 	ubfx	r3, r3, #12, #4
 801baea:	6892      	ldr	r2, [r2, #8]
 801baec:	f100 813e 	bmi.w	801bd6c <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x33e>
 801baf0:	1e57      	subs	r7, r2, #1
 801baf2:	42b8      	cmp	r0, r7
 801baf4:	f280 813a 	bge.w	801bd6c <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x33e>
 801baf8:	2d00      	cmp	r5, #0
 801bafa:	f2c0 8137 	blt.w	801bd6c <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x33e>
 801bafe:	1e77      	subs	r7, r6, #1
 801bb00:	42bd      	cmp	r5, r7
 801bb02:	f280 8133 	bge.w	801bd6c <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x33e>
 801bb06:	b212      	sxth	r2, r2
 801bb08:	fb05 0002 	mla	r0, r5, r2, r0
 801bb0c:	9d0d      	ldr	r5, [sp, #52]	@ 0x34
 801bb0e:	f815 a000 	ldrb.w	sl, [r5, r0]
 801bb12:	eb0a 0a4a 	add.w	sl, sl, sl, lsl #1
 801bb16:	182e      	adds	r6, r5, r0
 801bb18:	eb04 050a 	add.w	r5, r4, sl
 801bb1c:	2b00      	cmp	r3, #0
 801bb1e:	f000 8117 	beq.w	801bd50 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x322>
 801bb22:	f896 c001 	ldrb.w	ip, [r6, #1]
 801bb26:	eb0c 0c4c 	add.w	ip, ip, ip, lsl #1
 801bb2a:	44a4      	add	ip, r4
 801bb2c:	2900      	cmp	r1, #0
 801bb2e:	f000 8117 	beq.w	801bd60 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x332>
 801bb32:	18b0      	adds	r0, r6, r2
 801bb34:	5cb2      	ldrb	r2, [r6, r2]
 801bb36:	7840      	ldrb	r0, [r0, #1]
 801bb38:	eb02 0242 	add.w	r2, r2, r2, lsl #1
 801bb3c:	eb00 0040 	add.w	r0, r0, r0, lsl #1
 801bb40:	4422      	add	r2, r4
 801bb42:	4420      	add	r0, r4
 801bb44:	b29b      	uxth	r3, r3
 801bb46:	b289      	uxth	r1, r1
 801bb48:	fb03 f901 	mul.w	r9, r3, r1
 801bb4c:	ebc9 1101 	rsb	r1, r9, r1, lsl #4
 801bb50:	011b      	lsls	r3, r3, #4
 801bb52:	b289      	uxth	r1, r1
 801bb54:	f89c 7002 	ldrb.w	r7, [ip, #2]
 801bb58:	f895 b002 	ldrb.w	fp, [r5, #2]
 801bb5c:	9e0c      	ldr	r6, [sp, #48]	@ 0x30
 801bb5e:	f814 a00a 	ldrb.w	sl, [r4, sl]
 801bb62:	f8b6 e000 	ldrh.w	lr, [r6]
 801bb66:	f8bd 603c 	ldrh.w	r6, [sp, #60]	@ 0x3c
 801bb6a:	f5c3 7880 	rsb	r8, r3, #256	@ 0x100
 801bb6e:	eba3 0309 	sub.w	r3, r3, r9
 801bb72:	b29b      	uxth	r3, r3
 801bb74:	eba8 0801 	sub.w	r8, r8, r1
 801bb78:	fa1f f888 	uxth.w	r8, r8
 801bb7c:	435f      	muls	r7, r3
 801bb7e:	fb08 770b 	mla	r7, r8, fp, r7
 801bb82:	f892 b002 	ldrb.w	fp, [r2, #2]
 801bb86:	9310      	str	r3, [sp, #64]	@ 0x40
 801bb88:	fb01 770b 	mla	r7, r1, fp, r7
 801bb8c:	f890 b002 	ldrb.w	fp, [r0, #2]
 801bb90:	9b0b      	ldr	r3, [sp, #44]	@ 0x2c
 801bb92:	fb09 770b 	mla	r7, r9, fp, r7
 801bb96:	ea4f 2b2e 	mov.w	fp, lr, asr #8
 801bb9a:	f00b 0bf8 	and.w	fp, fp, #248	@ 0xf8
 801bb9e:	fb1b fb03 	smulbb	fp, fp, r3
 801bba2:	f3c7 2707 	ubfx	r7, r7, #8, #8
 801bba6:	fb07 b706 	mla	r7, r7, r6, fp
 801bbaa:	9b10      	ldr	r3, [sp, #64]	@ 0x40
 801bbac:	f895 b001 	ldrb.w	fp, [r5, #1]
 801bbb0:	f89c 5001 	ldrb.w	r5, [ip, #1]
 801bbb4:	f89c c000 	ldrb.w	ip, [ip]
 801bbb8:	435d      	muls	r5, r3
 801bbba:	fb08 550b 	mla	r5, r8, fp, r5
 801bbbe:	f892 b001 	ldrb.w	fp, [r2, #1]
 801bbc2:	9b0b      	ldr	r3, [sp, #44]	@ 0x2c
 801bbc4:	fb01 550b 	mla	r5, r1, fp, r5
 801bbc8:	f890 b001 	ldrb.w	fp, [r0, #1]
 801bbcc:	fb09 550b 	mla	r5, r9, fp, r5
 801bbd0:	ea4f 0bee 	mov.w	fp, lr, asr #3
 801bbd4:	f00b 0bfc 	and.w	fp, fp, #252	@ 0xfc
 801bbd8:	fb1b fb03 	smulbb	fp, fp, r3
 801bbdc:	9b10      	ldr	r3, [sp, #64]	@ 0x40
 801bbde:	fb03 f30c 	mul.w	r3, r3, ip
 801bbe2:	f892 c000 	ldrb.w	ip, [r2]
 801bbe6:	fb08 330a 	mla	r3, r8, sl, r3
 801bbea:	fb01 330c 	mla	r3, r1, ip, r3
 801bbee:	f890 c000 	ldrb.w	ip, [r0]
 801bbf2:	ea4f 0ece 	mov.w	lr, lr, lsl #3
 801bbf6:	fb09 3c0c 	mla	ip, r9, ip, r3
 801bbfa:	9b0b      	ldr	r3, [sp, #44]	@ 0x2c
 801bbfc:	fa5f fe8e 	uxtb.w	lr, lr
 801bc00:	b2bf      	uxth	r7, r7
 801bc02:	fb1e fe03 	smulbb	lr, lr, r3
 801bc06:	f3c5 2507 	ubfx	r5, r5, #8, #8
 801bc0a:	f3cc 2c07 	ubfx	ip, ip, #8, #8
 801bc0e:	fb05 b506 	mla	r5, r5, r6, fp
 801bc12:	1c7b      	adds	r3, r7, #1
 801bc14:	fb0c e606 	mla	r6, ip, r6, lr
 801bc18:	b2ad      	uxth	r5, r5
 801bc1a:	b2b6      	uxth	r6, r6
 801bc1c:	eb03 2717 	add.w	r7, r3, r7, lsr #8
 801bc20:	f407 4378 	and.w	r3, r7, #63488	@ 0xf800
 801bc24:	f105 0b01 	add.w	fp, r5, #1
 801bc28:	1c77      	adds	r7, r6, #1
 801bc2a:	eb07 2716 	add.w	r7, r7, r6, lsr #8
 801bc2e:	eb0b 2515 	add.w	r5, fp, r5, lsr #8
 801bc32:	f3c7 27c4 	ubfx	r7, r7, #11, #5
 801bc36:	096d      	lsrs	r5, r5, #5
 801bc38:	431f      	orrs	r7, r3
 801bc3a:	f405 65fc 	and.w	r5, r5, #2016	@ 0x7e0
 801bc3e:	9b0c      	ldr	r3, [sp, #48]	@ 0x30
 801bc40:	433d      	orrs	r5, r7
 801bc42:	801d      	strh	r5, [r3, #0]
 801bc44:	9b0c      	ldr	r3, [sp, #48]	@ 0x30
 801bc46:	9a21      	ldr	r2, [sp, #132]	@ 0x84
 801bc48:	3302      	adds	r3, #2
 801bc4a:	930c      	str	r3, [sp, #48]	@ 0x30
 801bc4c:	9b1f      	ldr	r3, [sp, #124]	@ 0x7c
 801bc4e:	4413      	add	r3, r2
 801bc50:	931f      	str	r3, [sp, #124]	@ 0x7c
 801bc52:	9a22      	ldr	r2, [sp, #136]	@ 0x88
 801bc54:	9b20      	ldr	r3, [sp, #128]	@ 0x80
 801bc56:	4413      	add	r3, r2
 801bc58:	9320      	str	r3, [sp, #128]	@ 0x80
 801bc5a:	9b11      	ldr	r3, [sp, #68]	@ 0x44
 801bc5c:	3b01      	subs	r3, #1
 801bc5e:	9311      	str	r3, [sp, #68]	@ 0x44
 801bc60:	e732      	b.n	801bac8 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x9a>
 801bc62:	9b1f      	ldr	r3, [sp, #124]	@ 0x7c
 801bc64:	9e21      	ldr	r6, [sp, #132]	@ 0x84
 801bc66:	4433      	add	r3, r6
 801bc68:	931f      	str	r3, [sp, #124]	@ 0x7c
 801bc6a:	9e22      	ldr	r6, [sp, #136]	@ 0x88
 801bc6c:	9b20      	ldr	r3, [sp, #128]	@ 0x80
 801bc6e:	4433      	add	r3, r6
 801bc70:	9320      	str	r3, [sp, #128]	@ 0x80
 801bc72:	9b09      	ldr	r3, [sp, #36]	@ 0x24
 801bc74:	3b01      	subs	r3, #1
 801bc76:	9309      	str	r3, [sp, #36]	@ 0x24
 801bc78:	9b0a      	ldr	r3, [sp, #40]	@ 0x28
 801bc7a:	3302      	adds	r3, #2
 801bc7c:	930a      	str	r3, [sp, #40]	@ 0x28
 801bc7e:	e702      	b.n	801ba86 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x58>
 801bc80:	d027      	beq.n	801bcd2 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2a4>
 801bc82:	9b09      	ldr	r3, [sp, #36]	@ 0x24
 801bc84:	9821      	ldr	r0, [sp, #132]	@ 0x84
 801bc86:	9d1f      	ldr	r5, [sp, #124]	@ 0x7c
 801bc88:	3b01      	subs	r3, #1
 801bc8a:	fb00 5003 	mla	r0, r0, r3, r5
 801bc8e:	1400      	asrs	r0, r0, #16
 801bc90:	f53f af16 	bmi.w	801bac0 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x92>
 801bc94:	3901      	subs	r1, #1
 801bc96:	4288      	cmp	r0, r1
 801bc98:	f6bf af12 	bge.w	801bac0 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x92>
 801bc9c:	9922      	ldr	r1, [sp, #136]	@ 0x88
 801bc9e:	9820      	ldr	r0, [sp, #128]	@ 0x80
 801bca0:	fb01 0303 	mla	r3, r1, r3, r0
 801bca4:	141b      	asrs	r3, r3, #16
 801bca6:	f53f af0b 	bmi.w	801bac0 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x92>
 801bcaa:	3a01      	subs	r2, #1
 801bcac:	4293      	cmp	r3, r2
 801bcae:	f6bf af07 	bge.w	801bac0 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x92>
 801bcb2:	9b09      	ldr	r3, [sp, #36]	@ 0x24
 801bcb4:	9311      	str	r3, [sp, #68]	@ 0x44
 801bcb6:	f8bd a03c 	ldrh.w	sl, [sp, #60]	@ 0x3c
 801bcba:	9b0a      	ldr	r3, [sp, #40]	@ 0x28
 801bcbc:	930c      	str	r3, [sp, #48]	@ 0x30
 801bcbe:	9b11      	ldr	r3, [sp, #68]	@ 0x44
 801bcc0:	2b00      	cmp	r3, #0
 801bcc2:	dc70      	bgt.n	801bda6 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x378>
 801bcc4:	9b09      	ldr	r3, [sp, #36]	@ 0x24
 801bcc6:	9a0a      	ldr	r2, [sp, #40]	@ 0x28
 801bcc8:	ea23 73e3 	bic.w	r3, r3, r3, asr #31
 801bccc:	eb02 0343 	add.w	r3, r2, r3, lsl #1
 801bcd0:	930a      	str	r3, [sp, #40]	@ 0x28
 801bcd2:	9b0e      	ldr	r3, [sp, #56]	@ 0x38
 801bcd4:	2b00      	cmp	r3, #0
 801bcd6:	f340 8124 	ble.w	801bf22 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x4f4>
 801bcda:	ee30 0a04 	vadd.f32	s0, s0, s8
 801bcde:	eeb7 7a00 	vmov.f32	s14, #112	@ 0x3f800000  1.0
 801bce2:	eec7 7a00 	vdiv.f32	s15, s14, s0
 801bce6:	9b1e      	ldr	r3, [sp, #120]	@ 0x78
 801bce8:	ee70 0aa4 	vadd.f32	s1, s1, s9
 801bcec:	ee31 1a05 	vadd.f32	s2, s2, s10
 801bcf0:	ee20 7aa7 	vmul.f32	s14, s1, s15
 801bcf4:	eef0 6a62 	vmov.f32	s13, s5
 801bcf8:	ee61 7a27 	vmul.f32	s15, s2, s15
 801bcfc:	eefe 6ac8 	vcvt.s32.f32	s13, s13, #16
 801bd00:	ee77 2a62 	vsub.f32	s5, s14, s5
 801bd04:	edcd 6a1f 	vstr	s13, [sp, #124]	@ 0x7c
 801bd08:	eefe 2ac8 	vcvt.s32.f32	s5, s5, #16
 801bd0c:	eef0 6a43 	vmov.f32	s13, s6
 801bd10:	ee37 3ac3 	vsub.f32	s6, s15, s6
 801bd14:	ee12 2a90 	vmov	r2, s5
 801bd18:	eebe 3ac8 	vcvt.s32.f32	s6, s6, #16
 801bd1c:	fb92 f3f3 	sdiv	r3, r2, r3
 801bd20:	ee13 2a10 	vmov	r2, s6
 801bd24:	9321      	str	r3, [sp, #132]	@ 0x84
 801bd26:	9b1e      	ldr	r3, [sp, #120]	@ 0x78
 801bd28:	fb92 f3f3 	sdiv	r3, r2, r3
 801bd2c:	9322      	str	r3, [sp, #136]	@ 0x88
 801bd2e:	9b0e      	ldr	r3, [sp, #56]	@ 0x38
 801bd30:	9a12      	ldr	r2, [sp, #72]	@ 0x48
 801bd32:	3b01      	subs	r3, #1
 801bd34:	eefe 6ac8 	vcvt.s32.f32	s13, s13, #16
 801bd38:	930e      	str	r3, [sp, #56]	@ 0x38
 801bd3a:	9b1e      	ldr	r3, [sp, #120]	@ 0x78
 801bd3c:	edcd 6a20 	vstr	s13, [sp, #128]	@ 0x80
 801bd40:	bf08      	it	eq
 801bd42:	4613      	moveq	r3, r2
 801bd44:	9309      	str	r3, [sp, #36]	@ 0x24
 801bd46:	eeb0 3a67 	vmov.f32	s6, s15
 801bd4a:	eef0 2a47 	vmov.f32	s5, s14
 801bd4e:	e68c      	b.n	801ba6a <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3c>
 801bd50:	b149      	cbz	r1, 801bd66 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x338>
 801bd52:	5cb2      	ldrb	r2, [r6, r2]
 801bd54:	eb02 0242 	add.w	r2, r2, r2, lsl #1
 801bd58:	4422      	add	r2, r4
 801bd5a:	4628      	mov	r0, r5
 801bd5c:	46ac      	mov	ip, r5
 801bd5e:	e6f1      	b.n	801bb44 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x116>
 801bd60:	4628      	mov	r0, r5
 801bd62:	462a      	mov	r2, r5
 801bd64:	e6ee      	b.n	801bb44 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x116>
 801bd66:	4628      	mov	r0, r5
 801bd68:	462a      	mov	r2, r5
 801bd6a:	e7f7      	b.n	801bd5c <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x32e>
 801bd6c:	1c47      	adds	r7, r0, #1
 801bd6e:	f53f af69 	bmi.w	801bc44 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x216>
 801bd72:	42ba      	cmp	r2, r7
 801bd74:	f6ff af66 	blt.w	801bc44 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x216>
 801bd78:	1c6f      	adds	r7, r5, #1
 801bd7a:	f53f af63 	bmi.w	801bc44 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x216>
 801bd7e:	42be      	cmp	r6, r7
 801bd80:	f6ff af60 	blt.w	801bc44 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x216>
 801bd84:	9f0f      	ldr	r7, [sp, #60]	@ 0x3c
 801bd86:	9002      	str	r0, [sp, #8]
 801bd88:	b236      	sxth	r6, r6
 801bd8a:	b212      	sxth	r2, r2
 801bd8c:	e9cd 1705 	strd	r1, r7, [sp, #20]
 801bd90:	e9cd 5303 	strd	r5, r3, [sp, #12]
 801bd94:	9200      	str	r2, [sp, #0]
 801bd96:	9601      	str	r6, [sp, #4]
 801bd98:	4623      	mov	r3, r4
 801bd9a:	e9dd 120c 	ldrd	r1, r2, [sp, #48]	@ 0x30
 801bd9e:	9813      	ldr	r0, [sp, #76]	@ 0x4c
 801bda0:	f7ff fd59 	bl	801b856 <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhS4_ssiihhh>
 801bda4:	e74e      	b.n	801bc44 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x216>
 801bda6:	9a20      	ldr	r2, [sp, #128]	@ 0x80
 801bda8:	9820      	ldr	r0, [sp, #128]	@ 0x80
 801bdaa:	9d1f      	ldr	r5, [sp, #124]	@ 0x7c
 801bdac:	9b1f      	ldr	r3, [sp, #124]	@ 0x7c
 801bdae:	f3c2 3103 	ubfx	r1, r2, #12, #4
 801bdb2:	9a26      	ldr	r2, [sp, #152]	@ 0x98
 801bdb4:	f9b2 2008 	ldrsh.w	r2, [r2, #8]
 801bdb8:	142d      	asrs	r5, r5, #16
 801bdba:	1400      	asrs	r0, r0, #16
 801bdbc:	fb02 5000 	mla	r0, r2, r0, r5
 801bdc0:	9d0d      	ldr	r5, [sp, #52]	@ 0x34
 801bdc2:	f815 9000 	ldrb.w	r9, [r5, r0]
 801bdc6:	f3c3 3303 	ubfx	r3, r3, #12, #4
 801bdca:	eb09 0949 	add.w	r9, r9, r9, lsl #1
 801bdce:	182e      	adds	r6, r5, r0
 801bdd0:	eb04 0509 	add.w	r5, r4, r9
 801bdd4:	2b00      	cmp	r3, #0
 801bdd6:	f000 8096 	beq.w	801bf06 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x4d8>
 801bdda:	7877      	ldrb	r7, [r6, #1]
 801bddc:	eb07 0747 	add.w	r7, r7, r7, lsl #1
 801bde0:	4427      	add	r7, r4
 801bde2:	2900      	cmp	r1, #0
 801bde4:	f000 8097 	beq.w	801bf16 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x4e8>
 801bde8:	18b0      	adds	r0, r6, r2
 801bdea:	5cb2      	ldrb	r2, [r6, r2]
 801bdec:	7840      	ldrb	r0, [r0, #1]
 801bdee:	eb02 0242 	add.w	r2, r2, r2, lsl #1
 801bdf2:	eb00 0040 	add.w	r0, r0, r0, lsl #1
 801bdf6:	4422      	add	r2, r4
 801bdf8:	4420      	add	r0, r4
 801bdfa:	b29b      	uxth	r3, r3
 801bdfc:	b289      	uxth	r1, r1
 801bdfe:	fb03 f801 	mul.w	r8, r3, r1
 801be02:	9e0c      	ldr	r6, [sp, #48]	@ 0x30
 801be04:	f895 b002 	ldrb.w	fp, [r5, #2]
 801be08:	f8b6 c000 	ldrh.w	ip, [r6]
 801be0c:	78be      	ldrb	r6, [r7, #2]
 801be0e:	f814 9009 	ldrb.w	r9, [r4, r9]
 801be12:	011b      	lsls	r3, r3, #4
 801be14:	ebc8 1101 	rsb	r1, r8, r1, lsl #4
 801be18:	b289      	uxth	r1, r1
 801be1a:	f5c3 7e80 	rsb	lr, r3, #256	@ 0x100
 801be1e:	eba3 0308 	sub.w	r3, r3, r8
 801be22:	b29b      	uxth	r3, r3
 801be24:	ebae 0e01 	sub.w	lr, lr, r1
 801be28:	fa1f fe8e 	uxth.w	lr, lr
 801be2c:	435e      	muls	r6, r3
 801be2e:	fb0e 660b 	mla	r6, lr, fp, r6
 801be32:	f892 b002 	ldrb.w	fp, [r2, #2]
 801be36:	9310      	str	r3, [sp, #64]	@ 0x40
 801be38:	fb01 660b 	mla	r6, r1, fp, r6
 801be3c:	f890 b002 	ldrb.w	fp, [r0, #2]
 801be40:	9b0b      	ldr	r3, [sp, #44]	@ 0x2c
 801be42:	fb08 660b 	mla	r6, r8, fp, r6
 801be46:	ea4f 2b2c 	mov.w	fp, ip, asr #8
 801be4a:	f00b 0bf8 	and.w	fp, fp, #248	@ 0xf8
 801be4e:	fb1b fb03 	smulbb	fp, fp, r3
 801be52:	f3c6 2607 	ubfx	r6, r6, #8, #8
 801be56:	fb06 b60a 	mla	r6, r6, sl, fp
 801be5a:	9b10      	ldr	r3, [sp, #64]	@ 0x40
 801be5c:	f895 b001 	ldrb.w	fp, [r5, #1]
 801be60:	787d      	ldrb	r5, [r7, #1]
 801be62:	783f      	ldrb	r7, [r7, #0]
 801be64:	435d      	muls	r5, r3
 801be66:	fb0e 550b 	mla	r5, lr, fp, r5
 801be6a:	f892 b001 	ldrb.w	fp, [r2, #1]
 801be6e:	9b0b      	ldr	r3, [sp, #44]	@ 0x2c
 801be70:	fb01 550b 	mla	r5, r1, fp, r5
 801be74:	f890 b001 	ldrb.w	fp, [r0, #1]
 801be78:	fb08 550b 	mla	r5, r8, fp, r5
 801be7c:	ea4f 0bec 	mov.w	fp, ip, asr #3
 801be80:	f00b 0bfc 	and.w	fp, fp, #252	@ 0xfc
 801be84:	fb1b fb03 	smulbb	fp, fp, r3
 801be88:	9b10      	ldr	r3, [sp, #64]	@ 0x40
 801be8a:	437b      	muls	r3, r7
 801be8c:	7817      	ldrb	r7, [r2, #0]
 801be8e:	fb0e 3309 	mla	r3, lr, r9, r3
 801be92:	fb01 3307 	mla	r3, r1, r7, r3
 801be96:	7807      	ldrb	r7, [r0, #0]
 801be98:	ea4f 0ccc 	mov.w	ip, ip, lsl #3
 801be9c:	fb08 3707 	mla	r7, r8, r7, r3
 801bea0:	9b0b      	ldr	r3, [sp, #44]	@ 0x2c
 801bea2:	fa5f fc8c 	uxtb.w	ip, ip
 801bea6:	fb1c fc03 	smulbb	ip, ip, r3
 801beaa:	f3c5 2507 	ubfx	r5, r5, #8, #8
 801beae:	f3c7 2707 	ubfx	r7, r7, #8, #8
 801beb2:	fb05 b50a 	mla	r5, r5, sl, fp
 801beb6:	fb07 c70a 	mla	r7, r7, sl, ip
 801beba:	b2b6      	uxth	r6, r6
 801bebc:	b2ad      	uxth	r5, r5
 801bebe:	b2bf      	uxth	r7, r7
 801bec0:	1c73      	adds	r3, r6, #1
 801bec2:	1c7a      	adds	r2, r7, #1
 801bec4:	f105 0b01 	add.w	fp, r5, #1
 801bec8:	eb03 2616 	add.w	r6, r3, r6, lsr #8
 801becc:	eb02 2217 	add.w	r2, r2, r7, lsr #8
 801bed0:	eb0b 2515 	add.w	r5, fp, r5, lsr #8
 801bed4:	f3c2 22c4 	ubfx	r2, r2, #11, #5
 801bed8:	f406 4678 	and.w	r6, r6, #63488	@ 0xf800
 801bedc:	096d      	lsrs	r5, r5, #5
 801bede:	9b0c      	ldr	r3, [sp, #48]	@ 0x30
 801bee0:	4316      	orrs	r6, r2
 801bee2:	f405 65fc 	and.w	r5, r5, #2016	@ 0x7e0
 801bee6:	432e      	orrs	r6, r5
 801bee8:	f823 6b02 	strh.w	r6, [r3], #2
 801beec:	9a21      	ldr	r2, [sp, #132]	@ 0x84
 801beee:	930c      	str	r3, [sp, #48]	@ 0x30
 801bef0:	9b1f      	ldr	r3, [sp, #124]	@ 0x7c
 801bef2:	4413      	add	r3, r2
 801bef4:	931f      	str	r3, [sp, #124]	@ 0x7c
 801bef6:	9a22      	ldr	r2, [sp, #136]	@ 0x88
 801bef8:	9b20      	ldr	r3, [sp, #128]	@ 0x80
 801befa:	4413      	add	r3, r2
 801befc:	9320      	str	r3, [sp, #128]	@ 0x80
 801befe:	9b11      	ldr	r3, [sp, #68]	@ 0x44
 801bf00:	3b01      	subs	r3, #1
 801bf02:	9311      	str	r3, [sp, #68]	@ 0x44
 801bf04:	e6db      	b.n	801bcbe <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x290>
 801bf06:	b149      	cbz	r1, 801bf1c <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x4ee>
 801bf08:	5cb2      	ldrb	r2, [r6, r2]
 801bf0a:	eb02 0242 	add.w	r2, r2, r2, lsl #1
 801bf0e:	4422      	add	r2, r4
 801bf10:	4628      	mov	r0, r5
 801bf12:	462f      	mov	r7, r5
 801bf14:	e771      	b.n	801bdfa <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3cc>
 801bf16:	4628      	mov	r0, r5
 801bf18:	462a      	mov	r2, r5
 801bf1a:	e76e      	b.n	801bdfa <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3cc>
 801bf1c:	4628      	mov	r0, r5
 801bf1e:	462a      	mov	r2, r5
 801bf20:	e7f7      	b.n	801bf12 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x4e4>
 801bf22:	b015      	add	sp, #84	@ 0x54
 801bf24:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}

0801bf28 <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhS4_ssiihh>:
 801bf28:	e92d 4ff7 	stmdb	sp!, {r0, r1, r2, r4, r5, r6, r7, r8, r9, sl, fp, lr}
 801bf2c:	880f      	ldrh	r7, [r1, #0]
 801bf2e:	f9bd e030 	ldrsh.w	lr, [sp, #48]	@ 0x30
 801bf32:	f9bd 9034 	ldrsh.w	r9, [sp, #52]	@ 0x34
 801bf36:	f89d 0040 	ldrb.w	r0, [sp, #64]	@ 0x40
 801bf3a:	f89d 6044 	ldrb.w	r6, [sp, #68]	@ 0x44
 801bf3e:	023c      	lsls	r4, r7, #8
 801bf40:	e9dd c50e 	ldrd	ip, r5, [sp, #56]	@ 0x38
 801bf44:	f404 0b78 	and.w	fp, r4, #16252928	@ 0xf80000
 801bf48:	017c      	lsls	r4, r7, #5
 801bf4a:	f404 447c 	and.w	r4, r4, #64512	@ 0xfc00
 801bf4e:	00ff      	lsls	r7, r7, #3
 801bf50:	ea4b 0404 	orr.w	r4, fp, r4
 801bf54:	b2ff      	uxtb	r7, r7
 801bf56:	fb05 ca0e 	mla	sl, r5, lr, ip
 801bf5a:	4327      	orrs	r7, r4
 801bf5c:	2d00      	cmp	r5, #0
 801bf5e:	eb02 080a 	add.w	r8, r2, sl
 801bf62:	9701      	str	r7, [sp, #4]
 801bf64:	db7e      	blt.n	801c064 <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhS4_ssiihh+0x13c>
 801bf66:	45a9      	cmp	r9, r5
 801bf68:	dd7c      	ble.n	801c064 <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhS4_ssiihh+0x13c>
 801bf6a:	f1bc 0f00 	cmp.w	ip, #0
 801bf6e:	db77      	blt.n	801c060 <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhS4_ssiihh+0x138>
 801bf70:	45e6      	cmp	lr, ip
 801bf72:	dd75      	ble.n	801c060 <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhS4_ssiihh+0x138>
 801bf74:	f812 700a 	ldrb.w	r7, [r2, sl]
 801bf78:	eb07 0747 	add.w	r7, r7, r7, lsl #1
 801bf7c:	441f      	add	r7, r3
 801bf7e:	f11c 0201 	adds.w	r2, ip, #1
 801bf82:	d472      	bmi.n	801c06a <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhS4_ssiihh+0x142>
 801bf84:	4596      	cmp	lr, r2
 801bf86:	dd70      	ble.n	801c06a <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhS4_ssiihh+0x142>
 801bf88:	2800      	cmp	r0, #0
 801bf8a:	d06e      	beq.n	801c06a <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhS4_ssiihh+0x142>
 801bf8c:	f898 4001 	ldrb.w	r4, [r8, #1]
 801bf90:	eb04 0444 	add.w	r4, r4, r4, lsl #1
 801bf94:	441c      	add	r4, r3
 801bf96:	3501      	adds	r5, #1
 801bf98:	d46b      	bmi.n	801c072 <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhS4_ssiihh+0x14a>
 801bf9a:	45a9      	cmp	r9, r5
 801bf9c:	dd69      	ble.n	801c072 <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhS4_ssiihh+0x14a>
 801bf9e:	2e00      	cmp	r6, #0
 801bfa0:	d067      	beq.n	801c072 <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhS4_ssiihh+0x14a>
 801bfa2:	f1bc 0f00 	cmp.w	ip, #0
 801bfa6:	db62      	blt.n	801c06e <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhS4_ssiihh+0x146>
 801bfa8:	45e6      	cmp	lr, ip
 801bfaa:	dd60      	ble.n	801c06e <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhS4_ssiihh+0x146>
 801bfac:	f818 500e 	ldrb.w	r5, [r8, lr]
 801bfb0:	eb05 0545 	add.w	r5, r5, r5, lsl #1
 801bfb4:	441d      	add	r5, r3
 801bfb6:	f11c 0201 	adds.w	r2, ip, #1
 801bfba:	d45d      	bmi.n	801c078 <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhS4_ssiihh+0x150>
 801bfbc:	4596      	cmp	lr, r2
 801bfbe:	dd5b      	ble.n	801c078 <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhS4_ssiihh+0x150>
 801bfc0:	2800      	cmp	r0, #0
 801bfc2:	d059      	beq.n	801c078 <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhS4_ssiihh+0x150>
 801bfc4:	44c6      	add	lr, r8
 801bfc6:	f89e 2001 	ldrb.w	r2, [lr, #1]
 801bfca:	eb02 0242 	add.w	r2, r2, r2, lsl #1
 801bfce:	4413      	add	r3, r2
 801bfd0:	b280      	uxth	r0, r0
 801bfd2:	b2b2      	uxth	r2, r6
 801bfd4:	fb00 f602 	mul.w	r6, r0, r2
 801bfd8:	0100      	lsls	r0, r0, #4
 801bfda:	ebc6 1202 	rsb	r2, r6, r2, lsl #4
 801bfde:	f5c0 7880 	rsb	r8, r0, #256	@ 0x100
 801bfe2:	1b80      	subs	r0, r0, r6
 801bfe4:	fa1f fc82 	uxth.w	ip, r2
 801bfe8:	b282      	uxth	r2, r0
 801bfea:	78a0      	ldrb	r0, [r4, #2]
 801bfec:	f897 e002 	ldrb.w	lr, [r7, #2]
 801bff0:	f897 9000 	ldrb.w	r9, [r7]
 801bff4:	787f      	ldrb	r7, [r7, #1]
 801bff6:	eba8 080c 	sub.w	r8, r8, ip
 801bffa:	fa1f f888 	uxth.w	r8, r8
 801bffe:	4350      	muls	r0, r2
 801c000:	fb08 0e0e 	mla	lr, r8, lr, r0
 801c004:	78a8      	ldrb	r0, [r5, #2]
 801c006:	fb0c e000 	mla	r0, ip, r0, lr
 801c00a:	f893 e002 	ldrb.w	lr, [r3, #2]
 801c00e:	fb06 0e0e 	mla	lr, r6, lr, r0
 801c012:	f40e 4078 	and.w	r0, lr, #63488	@ 0xf800
 801c016:	f894 e000 	ldrb.w	lr, [r4]
 801c01a:	fb02 fe0e 	mul.w	lr, r2, lr
 801c01e:	fb08 e909 	mla	r9, r8, r9, lr
 801c022:	f895 e000 	ldrb.w	lr, [r5]
 801c026:	fb0c 990e 	mla	r9, ip, lr, r9
 801c02a:	f893 e000 	ldrb.w	lr, [r3]
 801c02e:	785b      	ldrb	r3, [r3, #1]
 801c030:	fb06 9e0e 	mla	lr, r6, lr, r9
 801c034:	f3ce 2ec4 	ubfx	lr, lr, #11, #5
 801c038:	ea4e 0e00 	orr.w	lr, lr, r0
 801c03c:	7860      	ldrb	r0, [r4, #1]
 801c03e:	4350      	muls	r0, r2
 801c040:	786a      	ldrb	r2, [r5, #1]
 801c042:	fb08 0007 	mla	r0, r8, r7, r0
 801c046:	fb0c 0202 	mla	r2, ip, r2, r0
 801c04a:	fb06 2303 	mla	r3, r6, r3, r2
 801c04e:	095b      	lsrs	r3, r3, #5
 801c050:	f403 63fc 	and.w	r3, r3, #2016	@ 0x7e0
 801c054:	ea4e 0303 	orr.w	r3, lr, r3
 801c058:	800b      	strh	r3, [r1, #0]
 801c05a:	b003      	add	sp, #12
 801c05c:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 801c060:	af01      	add	r7, sp, #4
 801c062:	e78c      	b.n	801bf7e <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhS4_ssiihh+0x56>
 801c064:	ac01      	add	r4, sp, #4
 801c066:	4627      	mov	r7, r4
 801c068:	e795      	b.n	801bf96 <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhS4_ssiihh+0x6e>
 801c06a:	ac01      	add	r4, sp, #4
 801c06c:	e793      	b.n	801bf96 <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhS4_ssiihh+0x6e>
 801c06e:	ad01      	add	r5, sp, #4
 801c070:	e7a1      	b.n	801bfb6 <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhS4_ssiihh+0x8e>
 801c072:	ab01      	add	r3, sp, #4
 801c074:	461d      	mov	r5, r3
 801c076:	e7ab      	b.n	801bfd0 <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhS4_ssiihh+0xa8>
 801c078:	ab01      	add	r3, sp, #4
 801c07a:	e7a9      	b.n	801bfd0 <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhS4_ssiihh+0xa8>

0801c07c <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff>:
 801c07c:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 801c080:	b08f      	sub	sp, #60	@ 0x3c
 801c082:	e9dd b519 	ldrd	fp, r5, [sp, #100]	@ 0x64
 801c086:	920c      	str	r2, [sp, #48]	@ 0x30
 801c088:	9a1d      	ldr	r2, [sp, #116]	@ 0x74
 801c08a:	910a      	str	r1, [sp, #40]	@ 0x28
 801c08c:	9306      	str	r3, [sp, #24]
 801c08e:	e9dd 131e 	ldrd	r1, r3, [sp, #120]	@ 0x78
 801c092:	900d      	str	r0, [sp, #52]	@ 0x34
 801c094:	6850      	ldr	r0, [r2, #4]
 801c096:	6812      	ldr	r2, [r2, #0]
 801c098:	fb00 1303 	mla	r3, r0, r3, r1
 801c09c:	eb02 0343 	add.w	r3, r2, r3, lsl #1
 801c0a0:	9307      	str	r3, [sp, #28]
 801c0a2:	9b20      	ldr	r3, [sp, #128]	@ 0x80
 801c0a4:	681b      	ldr	r3, [r3, #0]
 801c0a6:	9308      	str	r3, [sp, #32]
 801c0a8:	9b20      	ldr	r3, [sp, #128]	@ 0x80
 801c0aa:	685c      	ldr	r4, [r3, #4]
 801c0ac:	3404      	adds	r4, #4
 801c0ae:	9b0a      	ldr	r3, [sp, #40]	@ 0x28
 801c0b0:	2b00      	cmp	r3, #0
 801c0b2:	dc03      	bgt.n	801c0bc <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x40>
 801c0b4:	9b0c      	ldr	r3, [sp, #48]	@ 0x30
 801c0b6:	2b00      	cmp	r3, #0
 801c0b8:	f340 81d6 	ble.w	801c468 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3ec>
 801c0bc:	9b20      	ldr	r3, [sp, #128]	@ 0x80
 801c0be:	f9b3 1008 	ldrsh.w	r1, [r3, #8]
 801c0c2:	f9b3 200c 	ldrsh.w	r2, [r3, #12]
 801c0c6:	1e48      	subs	r0, r1, #1
 801c0c8:	1e56      	subs	r6, r2, #1
 801c0ca:	9b06      	ldr	r3, [sp, #24]
 801c0cc:	2b00      	cmp	r3, #0
 801c0ce:	f340 80b7 	ble.w	801c240 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1c4>
 801c0d2:	ea5f 472b 	movs.w	r7, fp, asr #16
 801c0d6:	ea4f 4325 	mov.w	r3, r5, asr #16
 801c0da:	d406      	bmi.n	801c0ea <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x6e>
 801c0dc:	4287      	cmp	r7, r0
 801c0de:	da04      	bge.n	801c0ea <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x6e>
 801c0e0:	2b00      	cmp	r3, #0
 801c0e2:	db02      	blt.n	801c0ea <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x6e>
 801c0e4:	42b3      	cmp	r3, r6
 801c0e6:	f2c0 80ac 	blt.w	801c242 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1c6>
 801c0ea:	3701      	adds	r7, #1
 801c0ec:	f100 809d 	bmi.w	801c22a <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1ae>
 801c0f0:	42b9      	cmp	r1, r7
 801c0f2:	f2c0 809a 	blt.w	801c22a <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1ae>
 801c0f6:	3301      	adds	r3, #1
 801c0f8:	f100 8097 	bmi.w	801c22a <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1ae>
 801c0fc:	429a      	cmp	r2, r3
 801c0fe:	f2c0 8094 	blt.w	801c22a <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1ae>
 801c102:	9b06      	ldr	r3, [sp, #24]
 801c104:	930b      	str	r3, [sp, #44]	@ 0x2c
 801c106:	9b07      	ldr	r3, [sp, #28]
 801c108:	9309      	str	r3, [sp, #36]	@ 0x24
 801c10a:	9b0b      	ldr	r3, [sp, #44]	@ 0x2c
 801c10c:	2b00      	cmp	r3, #0
 801c10e:	f340 80b5 	ble.w	801c27c <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x200>
 801c112:	9820      	ldr	r0, [sp, #128]	@ 0x80
 801c114:	9a20      	ldr	r2, [sp, #128]	@ 0x80
 801c116:	68c7      	ldr	r7, [r0, #12]
 801c118:	6892      	ldr	r2, [r2, #8]
 801c11a:	ea5f 402b 	movs.w	r0, fp, asr #16
 801c11e:	ea4f 4625 	mov.w	r6, r5, asr #16
 801c122:	f3cb 3303 	ubfx	r3, fp, #12, #4
 801c126:	f3c5 3103 	ubfx	r1, r5, #12, #4
 801c12a:	f100 80fb 	bmi.w	801c324 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2a8>
 801c12e:	f102 3cff 	add.w	ip, r2, #4294967295
 801c132:	4560      	cmp	r0, ip
 801c134:	f280 80f6 	bge.w	801c324 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2a8>
 801c138:	2e00      	cmp	r6, #0
 801c13a:	f2c0 80f3 	blt.w	801c324 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2a8>
 801c13e:	f107 3cff 	add.w	ip, r7, #4294967295
 801c142:	4566      	cmp	r6, ip
 801c144:	f280 80ee 	bge.w	801c324 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2a8>
 801c148:	b212      	sxth	r2, r2
 801c14a:	fb06 0002 	mla	r0, r6, r2, r0
 801c14e:	9e08      	ldr	r6, [sp, #32]
 801c150:	1837      	adds	r7, r6, r0
 801c152:	5c30      	ldrb	r0, [r6, r0]
 801c154:	eb00 0840 	add.w	r8, r0, r0, lsl #1
 801c158:	eb04 0c08 	add.w	ip, r4, r8
 801c15c:	2b00      	cmp	r3, #0
 801c15e:	f000 80d3 	beq.w	801c308 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x28c>
 801c162:	787e      	ldrb	r6, [r7, #1]
 801c164:	eb06 0646 	add.w	r6, r6, r6, lsl #1
 801c168:	4426      	add	r6, r4
 801c16a:	2900      	cmp	r1, #0
 801c16c:	f000 80d4 	beq.w	801c318 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x29c>
 801c170:	18b8      	adds	r0, r7, r2
 801c172:	5cba      	ldrb	r2, [r7, r2]
 801c174:	7840      	ldrb	r0, [r0, #1]
 801c176:	eb02 0242 	add.w	r2, r2, r2, lsl #1
 801c17a:	eb00 0040 	add.w	r0, r0, r0, lsl #1
 801c17e:	4422      	add	r2, r4
 801c180:	4420      	add	r0, r4
 801c182:	b29b      	uxth	r3, r3
 801c184:	b289      	uxth	r1, r1
 801c186:	fb03 f901 	mul.w	r9, r3, r1
 801c18a:	ebc9 1101 	rsb	r1, r9, r1, lsl #4
 801c18e:	011b      	lsls	r3, r3, #4
 801c190:	b289      	uxth	r1, r1
 801c192:	78b7      	ldrb	r7, [r6, #2]
 801c194:	f89c a002 	ldrb.w	sl, [ip, #2]
 801c198:	f89c c001 	ldrb.w	ip, [ip, #1]
 801c19c:	f5c3 7e80 	rsb	lr, r3, #256	@ 0x100
 801c1a0:	eba3 0309 	sub.w	r3, r3, r9
 801c1a4:	b29b      	uxth	r3, r3
 801c1a6:	ebae 0e01 	sub.w	lr, lr, r1
 801c1aa:	fa1f fe8e 	uxth.w	lr, lr
 801c1ae:	435f      	muls	r7, r3
 801c1b0:	fb0e 770a 	mla	r7, lr, sl, r7
 801c1b4:	f892 a002 	ldrb.w	sl, [r2, #2]
 801c1b8:	fb01 770a 	mla	r7, r1, sl, r7
 801c1bc:	f890 a002 	ldrb.w	sl, [r0, #2]
 801c1c0:	fb09 7a0a 	mla	sl, r9, sl, r7
 801c1c4:	f814 7008 	ldrb.w	r7, [r4, r8]
 801c1c8:	f896 8000 	ldrb.w	r8, [r6]
 801c1cc:	7876      	ldrb	r6, [r6, #1]
 801c1ce:	fb03 f808 	mul.w	r8, r3, r8
 801c1d2:	fb0e 8807 	mla	r8, lr, r7, r8
 801c1d6:	7817      	ldrb	r7, [r2, #0]
 801c1d8:	fb01 8807 	mla	r8, r1, r7, r8
 801c1dc:	7807      	ldrb	r7, [r0, #0]
 801c1de:	fb09 8707 	mla	r7, r9, r7, r8
 801c1e2:	f40a 4a78 	and.w	sl, sl, #63488	@ 0xf800
 801c1e6:	f3c7 27c4 	ubfx	r7, r7, #11, #5
 801c1ea:	ea47 070a 	orr.w	r7, r7, sl
 801c1ee:	4373      	muls	r3, r6
 801c1f0:	f892 a001 	ldrb.w	sl, [r2, #1]
 801c1f4:	fb0e 330c 	mla	r3, lr, ip, r3
 801c1f8:	fb01 310a 	mla	r1, r1, sl, r3
 801c1fc:	f890 a001 	ldrb.w	sl, [r0, #1]
 801c200:	9b09      	ldr	r3, [sp, #36]	@ 0x24
 801c202:	fb09 1a0a 	mla	sl, r9, sl, r1
 801c206:	ea4f 1a5a 	mov.w	sl, sl, lsr #5
 801c20a:	f40a 6afc 	and.w	sl, sl, #2016	@ 0x7e0
 801c20e:	ea47 070a 	orr.w	r7, r7, sl
 801c212:	801f      	strh	r7, [r3, #0]
 801c214:	9b09      	ldr	r3, [sp, #36]	@ 0x24
 801c216:	3302      	adds	r3, #2
 801c218:	9309      	str	r3, [sp, #36]	@ 0x24
 801c21a:	9b1b      	ldr	r3, [sp, #108]	@ 0x6c
 801c21c:	449b      	add	fp, r3
 801c21e:	9b1c      	ldr	r3, [sp, #112]	@ 0x70
 801c220:	441d      	add	r5, r3
 801c222:	9b0b      	ldr	r3, [sp, #44]	@ 0x2c
 801c224:	3b01      	subs	r3, #1
 801c226:	930b      	str	r3, [sp, #44]	@ 0x2c
 801c228:	e76f      	b.n	801c10a <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x8e>
 801c22a:	9b1b      	ldr	r3, [sp, #108]	@ 0x6c
 801c22c:	449b      	add	fp, r3
 801c22e:	9b1c      	ldr	r3, [sp, #112]	@ 0x70
 801c230:	441d      	add	r5, r3
 801c232:	9b06      	ldr	r3, [sp, #24]
 801c234:	3b01      	subs	r3, #1
 801c236:	9306      	str	r3, [sp, #24]
 801c238:	9b07      	ldr	r3, [sp, #28]
 801c23a:	3302      	adds	r3, #2
 801c23c:	9307      	str	r3, [sp, #28]
 801c23e:	e744      	b.n	801c0ca <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x4e>
 801c240:	d023      	beq.n	801c28a <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x20e>
 801c242:	9b06      	ldr	r3, [sp, #24]
 801c244:	981b      	ldr	r0, [sp, #108]	@ 0x6c
 801c246:	3b01      	subs	r3, #1
 801c248:	fb00 b003 	mla	r0, r0, r3, fp
 801c24c:	1400      	asrs	r0, r0, #16
 801c24e:	f53f af58 	bmi.w	801c102 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x86>
 801c252:	3901      	subs	r1, #1
 801c254:	4288      	cmp	r0, r1
 801c256:	f6bf af54 	bge.w	801c102 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x86>
 801c25a:	991c      	ldr	r1, [sp, #112]	@ 0x70
 801c25c:	fb01 5303 	mla	r3, r1, r3, r5
 801c260:	141b      	asrs	r3, r3, #16
 801c262:	f53f af4e 	bmi.w	801c102 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x86>
 801c266:	3a01      	subs	r2, #1
 801c268:	4293      	cmp	r3, r2
 801c26a:	f6bf af4a 	bge.w	801c102 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x86>
 801c26e:	9b06      	ldr	r3, [sp, #24]
 801c270:	9309      	str	r3, [sp, #36]	@ 0x24
 801c272:	9b07      	ldr	r3, [sp, #28]
 801c274:	930b      	str	r3, [sp, #44]	@ 0x2c
 801c276:	9b09      	ldr	r3, [sp, #36]	@ 0x24
 801c278:	2b00      	cmp	r3, #0
 801c27a:	dc70      	bgt.n	801c35e <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2e2>
 801c27c:	9b06      	ldr	r3, [sp, #24]
 801c27e:	9a07      	ldr	r2, [sp, #28]
 801c280:	ea23 73e3 	bic.w	r3, r3, r3, asr #31
 801c284:	eb02 0343 	add.w	r3, r2, r3, lsl #1
 801c288:	9307      	str	r3, [sp, #28]
 801c28a:	9b0a      	ldr	r3, [sp, #40]	@ 0x28
 801c28c:	2b00      	cmp	r3, #0
 801c28e:	f340 80eb 	ble.w	801c468 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3ec>
 801c292:	ee30 0a04 	vadd.f32	s0, s0, s8
 801c296:	eeb7 7a00 	vmov.f32	s14, #112	@ 0x3f800000  1.0
 801c29a:	eec7 7a00 	vdiv.f32	s15, s14, s0
 801c29e:	9b18      	ldr	r3, [sp, #96]	@ 0x60
 801c2a0:	ee70 0aa4 	vadd.f32	s1, s1, s9
 801c2a4:	ee31 1a05 	vadd.f32	s2, s2, s10
 801c2a8:	ee20 7aa7 	vmul.f32	s14, s1, s15
 801c2ac:	eef0 6a62 	vmov.f32	s13, s5
 801c2b0:	ee61 7a27 	vmul.f32	s15, s2, s15
 801c2b4:	eefe 6ac8 	vcvt.s32.f32	s13, s13, #16
 801c2b8:	ee77 2a62 	vsub.f32	s5, s14, s5
 801c2bc:	ee16 ba90 	vmov	fp, s13
 801c2c0:	eefe 2ac8 	vcvt.s32.f32	s5, s5, #16
 801c2c4:	eef0 6a43 	vmov.f32	s13, s6
 801c2c8:	ee37 3ac3 	vsub.f32	s6, s15, s6
 801c2cc:	ee12 2a90 	vmov	r2, s5
 801c2d0:	eebe 3ac8 	vcvt.s32.f32	s6, s6, #16
 801c2d4:	fb92 f3f3 	sdiv	r3, r2, r3
 801c2d8:	ee13 2a10 	vmov	r2, s6
 801c2dc:	931b      	str	r3, [sp, #108]	@ 0x6c
 801c2de:	9b18      	ldr	r3, [sp, #96]	@ 0x60
 801c2e0:	fb92 f3f3 	sdiv	r3, r2, r3
 801c2e4:	931c      	str	r3, [sp, #112]	@ 0x70
 801c2e6:	9b0a      	ldr	r3, [sp, #40]	@ 0x28
 801c2e8:	9a0c      	ldr	r2, [sp, #48]	@ 0x30
 801c2ea:	3b01      	subs	r3, #1
 801c2ec:	eefe 6ac8 	vcvt.s32.f32	s13, s13, #16
 801c2f0:	930a      	str	r3, [sp, #40]	@ 0x28
 801c2f2:	9b18      	ldr	r3, [sp, #96]	@ 0x60
 801c2f4:	bf08      	it	eq
 801c2f6:	4613      	moveq	r3, r2
 801c2f8:	ee16 5a90 	vmov	r5, s13
 801c2fc:	9306      	str	r3, [sp, #24]
 801c2fe:	eeb0 3a67 	vmov.f32	s6, s15
 801c302:	eef0 2a47 	vmov.f32	s5, s14
 801c306:	e6d2      	b.n	801c0ae <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x32>
 801c308:	b149      	cbz	r1, 801c31e <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2a2>
 801c30a:	5cba      	ldrb	r2, [r7, r2]
 801c30c:	eb02 0242 	add.w	r2, r2, r2, lsl #1
 801c310:	4422      	add	r2, r4
 801c312:	4660      	mov	r0, ip
 801c314:	4666      	mov	r6, ip
 801c316:	e734      	b.n	801c182 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x106>
 801c318:	4660      	mov	r0, ip
 801c31a:	4662      	mov	r2, ip
 801c31c:	e731      	b.n	801c182 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x106>
 801c31e:	4660      	mov	r0, ip
 801c320:	4662      	mov	r2, ip
 801c322:	e7f7      	b.n	801c314 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x298>
 801c324:	f110 0c01 	adds.w	ip, r0, #1
 801c328:	f53f af74 	bmi.w	801c214 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x198>
 801c32c:	4562      	cmp	r2, ip
 801c32e:	f6ff af71 	blt.w	801c214 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x198>
 801c332:	f116 0c01 	adds.w	ip, r6, #1
 801c336:	f53f af6d 	bmi.w	801c214 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x198>
 801c33a:	4567      	cmp	r7, ip
 801c33c:	f6ff af6a 	blt.w	801c214 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x198>
 801c340:	b23f      	sxth	r7, r7
 801c342:	b212      	sxth	r2, r2
 801c344:	e9cd 3104 	strd	r3, r1, [sp, #16]
 801c348:	e9cd 0602 	strd	r0, r6, [sp, #8]
 801c34c:	9200      	str	r2, [sp, #0]
 801c34e:	9701      	str	r7, [sp, #4]
 801c350:	4623      	mov	r3, r4
 801c352:	e9dd 2108 	ldrd	r2, r1, [sp, #32]
 801c356:	980d      	ldr	r0, [sp, #52]	@ 0x34
 801c358:	f7ff fde6 	bl	801bf28 <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhS4_ssiihh>
 801c35c:	e75a      	b.n	801c214 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x198>
 801c35e:	9a20      	ldr	r2, [sp, #128]	@ 0x80
 801c360:	f9b2 2008 	ldrsh.w	r2, [r2, #8]
 801c364:	ea4f 462b 	mov.w	r6, fp, asr #16
 801c368:	1428      	asrs	r0, r5, #16
 801c36a:	fb02 6000 	mla	r0, r2, r0, r6
 801c36e:	9e08      	ldr	r6, [sp, #32]
 801c370:	f816 8000 	ldrb.w	r8, [r6, r0]
 801c374:	f3cb 3303 	ubfx	r3, fp, #12, #4
 801c378:	eb08 0848 	add.w	r8, r8, r8, lsl #1
 801c37c:	f3c5 3103 	ubfx	r1, r5, #12, #4
 801c380:	1837      	adds	r7, r6, r0
 801c382:	eb04 0c08 	add.w	ip, r4, r8
 801c386:	2b00      	cmp	r3, #0
 801c388:	d060      	beq.n	801c44c <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3d0>
 801c38a:	787e      	ldrb	r6, [r7, #1]
 801c38c:	eb06 0646 	add.w	r6, r6, r6, lsl #1
 801c390:	4426      	add	r6, r4
 801c392:	2900      	cmp	r1, #0
 801c394:	d062      	beq.n	801c45c <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3e0>
 801c396:	18b8      	adds	r0, r7, r2
 801c398:	5cba      	ldrb	r2, [r7, r2]
 801c39a:	7840      	ldrb	r0, [r0, #1]
 801c39c:	eb02 0242 	add.w	r2, r2, r2, lsl #1
 801c3a0:	eb00 0040 	add.w	r0, r0, r0, lsl #1
 801c3a4:	4422      	add	r2, r4
 801c3a6:	4420      	add	r0, r4
 801c3a8:	b29b      	uxth	r3, r3
 801c3aa:	b289      	uxth	r1, r1
 801c3ac:	fb03 f901 	mul.w	r9, r3, r1
 801c3b0:	ebc9 1101 	rsb	r1, r9, r1, lsl #4
 801c3b4:	011b      	lsls	r3, r3, #4
 801c3b6:	b289      	uxth	r1, r1
 801c3b8:	78b7      	ldrb	r7, [r6, #2]
 801c3ba:	f89c a002 	ldrb.w	sl, [ip, #2]
 801c3be:	f89c c001 	ldrb.w	ip, [ip, #1]
 801c3c2:	f5c3 7e80 	rsb	lr, r3, #256	@ 0x100
 801c3c6:	eba3 0309 	sub.w	r3, r3, r9
 801c3ca:	b29b      	uxth	r3, r3
 801c3cc:	ebae 0e01 	sub.w	lr, lr, r1
 801c3d0:	fa1f fe8e 	uxth.w	lr, lr
 801c3d4:	435f      	muls	r7, r3
 801c3d6:	fb0e 770a 	mla	r7, lr, sl, r7
 801c3da:	f892 a002 	ldrb.w	sl, [r2, #2]
 801c3de:	fb01 770a 	mla	r7, r1, sl, r7
 801c3e2:	f890 a002 	ldrb.w	sl, [r0, #2]
 801c3e6:	fb09 7a0a 	mla	sl, r9, sl, r7
 801c3ea:	f814 7008 	ldrb.w	r7, [r4, r8]
 801c3ee:	f896 8000 	ldrb.w	r8, [r6]
 801c3f2:	7876      	ldrb	r6, [r6, #1]
 801c3f4:	fb03 f808 	mul.w	r8, r3, r8
 801c3f8:	fb0e 8807 	mla	r8, lr, r7, r8
 801c3fc:	7817      	ldrb	r7, [r2, #0]
 801c3fe:	fb01 8807 	mla	r8, r1, r7, r8
 801c402:	7807      	ldrb	r7, [r0, #0]
 801c404:	fb09 8707 	mla	r7, r9, r7, r8
 801c408:	f40a 4a78 	and.w	sl, sl, #63488	@ 0xf800
 801c40c:	4373      	muls	r3, r6
 801c40e:	f3c7 27c4 	ubfx	r7, r7, #11, #5
 801c412:	7856      	ldrb	r6, [r2, #1]
 801c414:	ea47 070a 	orr.w	r7, r7, sl
 801c418:	fb0e 330c 	mla	r3, lr, ip, r3
 801c41c:	f890 a001 	ldrb.w	sl, [r0, #1]
 801c420:	fb01 3306 	mla	r3, r1, r6, r3
 801c424:	fb09 3a0a 	mla	sl, r9, sl, r3
 801c428:	ea4f 1a5a 	mov.w	sl, sl, lsr #5
 801c42c:	9b0b      	ldr	r3, [sp, #44]	@ 0x2c
 801c42e:	f40a 6afc 	and.w	sl, sl, #2016	@ 0x7e0
 801c432:	ea47 070a 	orr.w	r7, r7, sl
 801c436:	f823 7b02 	strh.w	r7, [r3], #2
 801c43a:	930b      	str	r3, [sp, #44]	@ 0x2c
 801c43c:	9b1b      	ldr	r3, [sp, #108]	@ 0x6c
 801c43e:	449b      	add	fp, r3
 801c440:	9b1c      	ldr	r3, [sp, #112]	@ 0x70
 801c442:	441d      	add	r5, r3
 801c444:	9b09      	ldr	r3, [sp, #36]	@ 0x24
 801c446:	3b01      	subs	r3, #1
 801c448:	9309      	str	r3, [sp, #36]	@ 0x24
 801c44a:	e714      	b.n	801c276 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1fa>
 801c44c:	b149      	cbz	r1, 801c462 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3e6>
 801c44e:	5cba      	ldrb	r2, [r7, r2]
 801c450:	eb02 0242 	add.w	r2, r2, r2, lsl #1
 801c454:	4422      	add	r2, r4
 801c456:	4660      	mov	r0, ip
 801c458:	4666      	mov	r6, ip
 801c45a:	e7a5      	b.n	801c3a8 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x32c>
 801c45c:	4660      	mov	r0, ip
 801c45e:	4662      	mov	r2, ip
 801c460:	e7a2      	b.n	801c3a8 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x32c>
 801c462:	4660      	mov	r0, ip
 801c464:	4662      	mov	r2, ip
 801c466:	e7f7      	b.n	801c458 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3dc>
 801c468:	b00f      	add	sp, #60	@ 0x3c
 801c46a:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}

0801c46e <_ZNK8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKmssiihhh>:
 801c46e:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 801c472:	b085      	sub	sp, #20
 801c474:	e9dd 7410 	ldrd	r7, r4, [sp, #64]	@ 0x40
 801c478:	f9bd c038 	ldrsh.w	ip, [sp, #56]	@ 0x38
 801c47c:	9102      	str	r1, [sp, #8]
 801c47e:	2c00      	cmp	r4, #0
 801c480:	fb04 710c 	mla	r1, r4, ip, r7
 801c484:	f9bd 803c 	ldrsh.w	r8, [sp, #60]	@ 0x3c
 801c488:	f89d 6048 	ldrb.w	r6, [sp, #72]	@ 0x48
 801c48c:	f89d 004c 	ldrb.w	r0, [sp, #76]	@ 0x4c
 801c490:	eb02 0e01 	add.w	lr, r2, r1
 801c494:	f2c0 8122 	blt.w	801c6dc <_ZNK8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKmssiihhh+0x26e>
 801c498:	45a0      	cmp	r8, r4
 801c49a:	f340 811f 	ble.w	801c6dc <_ZNK8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKmssiihhh+0x26e>
 801c49e:	2f00      	cmp	r7, #0
 801c4a0:	f2c0 811a 	blt.w	801c6d8 <_ZNK8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKmssiihhh+0x26a>
 801c4a4:	45bc      	cmp	ip, r7
 801c4a6:	f340 8117 	ble.w	801c6d8 <_ZNK8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKmssiihhh+0x26a>
 801c4aa:	5c52      	ldrb	r2, [r2, r1]
 801c4ac:	f853 5022 	ldr.w	r5, [r3, r2, lsl #2]
 801c4b0:	1c7a      	adds	r2, r7, #1
 801c4b2:	f100 8116 	bmi.w	801c6e2 <_ZNK8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKmssiihhh+0x274>
 801c4b6:	4594      	cmp	ip, r2
 801c4b8:	f340 8113 	ble.w	801c6e2 <_ZNK8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKmssiihhh+0x274>
 801c4bc:	2e00      	cmp	r6, #0
 801c4be:	f000 8112 	beq.w	801c6e6 <_ZNK8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKmssiihhh+0x278>
 801c4c2:	f89e 2001 	ldrb.w	r2, [lr, #1]
 801c4c6:	f853 1022 	ldr.w	r1, [r3, r2, lsl #2]
 801c4ca:	3401      	adds	r4, #1
 801c4cc:	f100 810f 	bmi.w	801c6ee <_ZNK8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKmssiihhh+0x280>
 801c4d0:	45a0      	cmp	r8, r4
 801c4d2:	f340 810c 	ble.w	801c6ee <_ZNK8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKmssiihhh+0x280>
 801c4d6:	2800      	cmp	r0, #0
 801c4d8:	f000 810c 	beq.w	801c6f4 <_ZNK8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKmssiihhh+0x286>
 801c4dc:	2f00      	cmp	r7, #0
 801c4de:	f2c0 8104 	blt.w	801c6ea <_ZNK8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKmssiihhh+0x27c>
 801c4e2:	45bc      	cmp	ip, r7
 801c4e4:	f340 8101 	ble.w	801c6ea <_ZNK8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKmssiihhh+0x27c>
 801c4e8:	f81e 200c 	ldrb.w	r2, [lr, ip]
 801c4ec:	f853 4022 	ldr.w	r4, [r3, r2, lsl #2]
 801c4f0:	3701      	adds	r7, #1
 801c4f2:	f100 8102 	bmi.w	801c6fa <_ZNK8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKmssiihhh+0x28c>
 801c4f6:	45bc      	cmp	ip, r7
 801c4f8:	f340 80ff 	ble.w	801c6fa <_ZNK8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKmssiihhh+0x28c>
 801c4fc:	2e00      	cmp	r6, #0
 801c4fe:	f000 80fe 	beq.w	801c6fe <_ZNK8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKmssiihhh+0x290>
 801c502:	44f4      	add	ip, lr
 801c504:	f89c 2001 	ldrb.w	r2, [ip, #1]
 801c508:	f853 2022 	ldr.w	r2, [r3, r2, lsl #2]
 801c50c:	b2b6      	uxth	r6, r6
 801c50e:	b280      	uxth	r0, r0
 801c510:	fb00 fe06 	mul.w	lr, r0, r6
 801c514:	ebce 1000 	rsb	r0, lr, r0, lsl #4
 801c518:	0136      	lsls	r6, r6, #4
 801c51a:	eba6 070e 	sub.w	r7, r6, lr
 801c51e:	b280      	uxth	r0, r0
 801c520:	f5c6 7380 	rsb	r3, r6, #256	@ 0x100
 801c524:	ea4f 6a11 	mov.w	sl, r1, lsr #24
 801c528:	b2bf      	uxth	r7, r7
 801c52a:	1a1b      	subs	r3, r3, r0
 801c52c:	ea4f 6b15 	mov.w	fp, r5, lsr #24
 801c530:	b29b      	uxth	r3, r3
 801c532:	fb0a f607 	mul.w	r6, sl, r7
 801c536:	ea4f 6914 	mov.w	r9, r4, lsr #24
 801c53a:	fb0b 6603 	mla	r6, fp, r3, r6
 801c53e:	ea4f 6812 	mov.w	r8, r2, lsr #24
 801c542:	fb00 6609 	mla	r6, r0, r9, r6
 801c546:	fb0e 6608 	mla	r6, lr, r8, r6
 801c54a:	f3c6 2607 	ubfx	r6, r6, #8, #8
 801c54e:	9600      	str	r6, [sp, #0]
 801c550:	2e00      	cmp	r6, #0
 801c552:	f000 80be 	beq.w	801c6d2 <_ZNK8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKmssiihhh+0x264>
 801c556:	f005 1cff 	and.w	ip, r5, #16711935	@ 0xff00ff
 801c55a:	fb0b fc0c 	mul.w	ip, fp, ip
 801c55e:	f405 457f 	and.w	r5, r5, #65280	@ 0xff00
 801c562:	fb0b f505 	mul.w	r5, fp, r5
 801c566:	ea4f 2b1c 	mov.w	fp, ip, lsr #8
 801c56a:	f00b 1bff 	and.w	fp, fp, #16711935	@ 0xff00ff
 801c56e:	f10c 1c01 	add.w	ip, ip, #65537	@ 0x10001
 801c572:	44dc      	add	ip, fp
 801c574:	ea4f 2c1c 	mov.w	ip, ip, lsr #8
 801c578:	9501      	str	r5, [sp, #4]
 801c57a:	f00c 15ff 	and.w	r5, ip, #16711935	@ 0xff00ff
 801c57e:	9503      	str	r5, [sp, #12]
 801c580:	9d01      	ldr	r5, [sp, #4]
 801c582:	9e02      	ldr	r6, [sp, #8]
 801c584:	f505 7c80 	add.w	ip, r5, #256	@ 0x100
 801c588:	eb0c 2515 	add.w	r5, ip, r5, lsr #8
 801c58c:	f001 1cff 	and.w	ip, r1, #16711935	@ 0xff00ff
 801c590:	fb0a fc0c 	mul.w	ip, sl, ip
 801c594:	ea4f 2b15 	mov.w	fp, r5, lsr #8
 801c598:	ea4f 251c 	mov.w	r5, ip, lsr #8
 801c59c:	f005 15ff 	and.w	r5, r5, #16711935	@ 0xff00ff
 801c5a0:	f10c 1c01 	add.w	ip, ip, #65537	@ 0x10001
 801c5a4:	4465      	add	r5, ip
 801c5a6:	f004 1cff 	and.w	ip, r4, #16711935	@ 0xff00ff
 801c5aa:	f404 447f 	and.w	r4, r4, #65280	@ 0xff00
 801c5ae:	fb09 fc0c 	mul.w	ip, r9, ip
 801c5b2:	fb09 f904 	mul.w	r9, r9, r4
 801c5b6:	f509 7480 	add.w	r4, r9, #256	@ 0x100
 801c5ba:	eb04 2919 	add.w	r9, r4, r9, lsr #8
 801c5be:	f002 14ff 	and.w	r4, r2, #16711935	@ 0xff00ff
 801c5c2:	fb08 f404 	mul.w	r4, r8, r4
 801c5c6:	f401 417f 	and.w	r1, r1, #65280	@ 0xff00
 801c5ca:	f402 427f 	and.w	r2, r2, #65280	@ 0xff00
 801c5ce:	fb08 f802 	mul.w	r8, r8, r2
 801c5d2:	fb0a fa01 	mul.w	sl, sl, r1
 801c5d6:	0a22      	lsrs	r2, r4, #8
 801c5d8:	f50a 7180 	add.w	r1, sl, #256	@ 0x100
 801c5dc:	f002 12ff 	and.w	r2, r2, #16711935	@ 0xff00ff
 801c5e0:	f104 1401 	add.w	r4, r4, #65537	@ 0x10001
 801c5e4:	eb01 2a1a 	add.w	sl, r1, sl, lsr #8
 801c5e8:	4414      	add	r4, r2
 801c5ea:	ea4f 211c 	mov.w	r1, ip, lsr #8
 801c5ee:	f508 7280 	add.w	r2, r8, #256	@ 0x100
 801c5f2:	0a2d      	lsrs	r5, r5, #8
 801c5f4:	eb02 2818 	add.w	r8, r2, r8, lsr #8
 801c5f8:	f005 15ff 	and.w	r5, r5, #16711935	@ 0xff00ff
 801c5fc:	9a03      	ldr	r2, [sp, #12]
 801c5fe:	8836      	ldrh	r6, [r6, #0]
 801c600:	f001 11ff 	and.w	r1, r1, #16711935	@ 0xff00ff
 801c604:	f10c 1c01 	add.w	ip, ip, #65537	@ 0x10001
 801c608:	437d      	muls	r5, r7
 801c60a:	4461      	add	r1, ip
 801c60c:	0a24      	lsrs	r4, r4, #8
 801c60e:	fb02 5503 	mla	r5, r2, r3, r5
 801c612:	0a09      	lsrs	r1, r1, #8
 801c614:	f004 14ff 	and.w	r4, r4, #16711935	@ 0xff00ff
 801c618:	fb04 540e 	mla	r4, r4, lr, r5
 801c61c:	f001 11ff 	and.w	r1, r1, #16711935	@ 0xff00ff
 801c620:	fb01 4100 	mla	r1, r1, r0, r4
 801c624:	ea4f 2a1a 	mov.w	sl, sl, lsr #8
 801c628:	0a09      	lsrs	r1, r1, #8
 801c62a:	f40a 4a7f 	and.w	sl, sl, #65280	@ 0xff00
 801c62e:	f001 14ff 	and.w	r4, r1, #16711935	@ 0xff00ff
 801c632:	fb07 f70a 	mul.w	r7, r7, sl
 801c636:	ea4f 2818 	mov.w	r8, r8, lsr #8
 801c63a:	f40b 417f 	and.w	r1, fp, #65280	@ 0xff00
 801c63e:	fb03 7101 	mla	r1, r3, r1, r7
 801c642:	ea4f 2919 	mov.w	r9, r9, lsr #8
 801c646:	f408 487f 	and.w	r8, r8, #65280	@ 0xff00
 801c64a:	fb0e 1e08 	mla	lr, lr, r8, r1
 801c64e:	f409 417f 	and.w	r1, r9, #65280	@ 0xff00
 801c652:	fb00 e101 	mla	r1, r0, r1, lr
 801c656:	f89d 0050 	ldrb.w	r0, [sp, #80]	@ 0x50
 801c65a:	9a00      	ldr	r2, [sp, #0]
 801c65c:	b287      	uxth	r7, r0
 801c65e:	437a      	muls	r2, r7
 801c660:	0a09      	lsrs	r1, r1, #8
 801c662:	1c53      	adds	r3, r2, #1
 801c664:	f401 417f 	and.w	r1, r1, #65280	@ 0xff00
 801c668:	4321      	orrs	r1, r4
 801c66a:	eb03 2312 	add.w	r3, r3, r2, lsr #8
 801c66e:	1235      	asrs	r5, r6, #8
 801c670:	0c0a      	lsrs	r2, r1, #16
 801c672:	ea6f 2313 	mvn.w	r3, r3, lsr #8
 801c676:	b2db      	uxtb	r3, r3
 801c678:	fb12 f207 	smulbb	r2, r2, r7
 801c67c:	f005 05f8 	and.w	r5, r5, #248	@ 0xf8
 801c680:	fb05 2503 	mla	r5, r5, r3, r2
 801c684:	f3c1 2407 	ubfx	r4, r1, #8, #8
 801c688:	10f2      	asrs	r2, r6, #3
 801c68a:	b2c8      	uxtb	r0, r1
 801c68c:	00f6      	lsls	r6, r6, #3
 801c68e:	fb14 f407 	smulbb	r4, r4, r7
 801c692:	f002 02fc 	and.w	r2, r2, #252	@ 0xfc
 801c696:	b2f6      	uxtb	r6, r6
 801c698:	fb10 f007 	smulbb	r0, r0, r7
 801c69c:	fb02 4203 	mla	r2, r2, r3, r4
 801c6a0:	b2ad      	uxth	r5, r5
 801c6a2:	fb06 0303 	mla	r3, r6, r3, r0
 801c6a6:	b299      	uxth	r1, r3
 801c6a8:	b294      	uxth	r4, r2
 801c6aa:	1c6b      	adds	r3, r5, #1
 801c6ac:	eb03 2515 	add.w	r5, r3, r5, lsr #8
 801c6b0:	1c62      	adds	r2, r4, #1
 801c6b2:	1c4b      	adds	r3, r1, #1
 801c6b4:	eb03 2311 	add.w	r3, r3, r1, lsr #8
 801c6b8:	eb02 2214 	add.w	r2, r2, r4, lsr #8
 801c6bc:	f405 4578 	and.w	r5, r5, #63488	@ 0xf800
 801c6c0:	f3c3 23c4 	ubfx	r3, r3, #11, #5
 801c6c4:	0952      	lsrs	r2, r2, #5
 801c6c6:	f402 62fc 	and.w	r2, r2, #2016	@ 0x7e0
 801c6ca:	432b      	orrs	r3, r5
 801c6cc:	4313      	orrs	r3, r2
 801c6ce:	9a02      	ldr	r2, [sp, #8]
 801c6d0:	8013      	strh	r3, [r2, #0]
 801c6d2:	b005      	add	sp, #20
 801c6d4:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 801c6d8:	2500      	movs	r5, #0
 801c6da:	e6e9      	b.n	801c4b0 <_ZNK8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKmssiihhh+0x42>
 801c6dc:	2100      	movs	r1, #0
 801c6de:	460d      	mov	r5, r1
 801c6e0:	e6f3      	b.n	801c4ca <_ZNK8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKmssiihhh+0x5c>
 801c6e2:	2100      	movs	r1, #0
 801c6e4:	e6f1      	b.n	801c4ca <_ZNK8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKmssiihhh+0x5c>
 801c6e6:	4631      	mov	r1, r6
 801c6e8:	e6ef      	b.n	801c4ca <_ZNK8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKmssiihhh+0x5c>
 801c6ea:	2400      	movs	r4, #0
 801c6ec:	e700      	b.n	801c4f0 <_ZNK8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKmssiihhh+0x82>
 801c6ee:	2200      	movs	r2, #0
 801c6f0:	4614      	mov	r4, r2
 801c6f2:	e70b      	b.n	801c50c <_ZNK8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKmssiihhh+0x9e>
 801c6f4:	4602      	mov	r2, r0
 801c6f6:	4604      	mov	r4, r0
 801c6f8:	e708      	b.n	801c50c <_ZNK8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKmssiihhh+0x9e>
 801c6fa:	2200      	movs	r2, #0
 801c6fc:	e706      	b.n	801c50c <_ZNK8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKmssiihhh+0x9e>
 801c6fe:	4632      	mov	r2, r6
 801c700:	e704      	b.n	801c50c <_ZNK8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKmssiihhh+0x9e>

0801c702 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff>:
 801c702:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 801c706:	b09f      	sub	sp, #124	@ 0x7c
 801c708:	921b      	str	r2, [sp, #108]	@ 0x6c
 801c70a:	9309      	str	r3, [sp, #36]	@ 0x24
 801c70c:	9a2d      	ldr	r2, [sp, #180]	@ 0xb4
 801c70e:	f89d 30c4 	ldrb.w	r3, [sp, #196]	@ 0xc4
 801c712:	931c      	str	r3, [sp, #112]	@ 0x70
 801c714:	9119      	str	r1, [sp, #100]	@ 0x64
 801c716:	e9dd 132e 	ldrd	r1, r3, [sp, #184]	@ 0xb8
 801c71a:	901d      	str	r0, [sp, #116]	@ 0x74
 801c71c:	6850      	ldr	r0, [r2, #4]
 801c71e:	6812      	ldr	r2, [r2, #0]
 801c720:	9d2a      	ldr	r5, [sp, #168]	@ 0xa8
 801c722:	fb00 1303 	mla	r3, r0, r3, r1
 801c726:	eb02 0343 	add.w	r3, r2, r3, lsl #1
 801c72a:	930c      	str	r3, [sp, #48]	@ 0x30
 801c72c:	9b30      	ldr	r3, [sp, #192]	@ 0xc0
 801c72e:	681b      	ldr	r3, [r3, #0]
 801c730:	9312      	str	r3, [sp, #72]	@ 0x48
 801c732:	9b30      	ldr	r3, [sp, #192]	@ 0xc0
 801c734:	685e      	ldr	r6, [r3, #4]
 801c736:	f8bd 3070 	ldrh.w	r3, [sp, #112]	@ 0x70
 801c73a:	930d      	str	r3, [sp, #52]	@ 0x34
 801c73c:	3604      	adds	r6, #4
 801c73e:	9b19      	ldr	r3, [sp, #100]	@ 0x64
 801c740:	2b00      	cmp	r3, #0
 801c742:	dc03      	bgt.n	801c74c <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x4a>
 801c744:	9b1b      	ldr	r3, [sp, #108]	@ 0x6c
 801c746:	2b00      	cmp	r3, #0
 801c748:	f340 8388 	ble.w	801ce5c <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x75a>
 801c74c:	9b30      	ldr	r3, [sp, #192]	@ 0xc0
 801c74e:	f9b3 1008 	ldrsh.w	r1, [r3, #8]
 801c752:	f9b3 200c 	ldrsh.w	r2, [r3, #12]
 801c756:	1e48      	subs	r0, r1, #1
 801c758:	1e57      	subs	r7, r2, #1
 801c75a:	9b09      	ldr	r3, [sp, #36]	@ 0x24
 801c75c:	2b00      	cmp	r3, #0
 801c75e:	f340 8195 	ble.w	801ca8c <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x38a>
 801c762:	9c29      	ldr	r4, [sp, #164]	@ 0xa4
 801c764:	ea5f 4c24 	movs.w	ip, r4, asr #16
 801c768:	ea4f 4325 	mov.w	r3, r5, asr #16
 801c76c:	d406      	bmi.n	801c77c <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x7a>
 801c76e:	4584      	cmp	ip, r0
 801c770:	da04      	bge.n	801c77c <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x7a>
 801c772:	2b00      	cmp	r3, #0
 801c774:	db02      	blt.n	801c77c <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x7a>
 801c776:	42bb      	cmp	r3, r7
 801c778:	f2c0 8189 	blt.w	801ca8e <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x38c>
 801c77c:	f11c 0c01 	adds.w	ip, ip, #1
 801c780:	f100 8177 	bmi.w	801ca72 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x370>
 801c784:	4561      	cmp	r1, ip
 801c786:	f2c0 8174 	blt.w	801ca72 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x370>
 801c78a:	3301      	adds	r3, #1
 801c78c:	f100 8171 	bmi.w	801ca72 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x370>
 801c790:	429a      	cmp	r2, r3
 801c792:	f2c0 816e 	blt.w	801ca72 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x370>
 801c796:	9b09      	ldr	r3, [sp, #36]	@ 0x24
 801c798:	9f0c      	ldr	r7, [sp, #48]	@ 0x30
 801c79a:	931a      	str	r3, [sp, #104]	@ 0x68
 801c79c:	9b1a      	ldr	r3, [sp, #104]	@ 0x68
 801c79e:	2b00      	cmp	r3, #0
 801c7a0:	f340 8193 	ble.w	801caca <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3c8>
 801c7a4:	9b29      	ldr	r3, [sp, #164]	@ 0xa4
 801c7a6:	f3c3 3203 	ubfx	r2, r3, #12, #4
 801c7aa:	9b30      	ldr	r3, [sp, #192]	@ 0xc0
 801c7ac:	e9d3 0e02 	ldrd	r0, lr, [r3, #8]
 801c7b0:	9b29      	ldr	r3, [sp, #164]	@ 0xa4
 801c7b2:	141b      	asrs	r3, r3, #16
 801c7b4:	ea4f 4c25 	mov.w	ip, r5, asr #16
 801c7b8:	f3c5 3103 	ubfx	r1, r5, #12, #4
 801c7bc:	f100 81d6 	bmi.w	801cb6c <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x46a>
 801c7c0:	f100 38ff 	add.w	r8, r0, #4294967295
 801c7c4:	4543      	cmp	r3, r8
 801c7c6:	f280 81d1 	bge.w	801cb6c <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x46a>
 801c7ca:	f1bc 0f00 	cmp.w	ip, #0
 801c7ce:	f2c0 81cd 	blt.w	801cb6c <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x46a>
 801c7d2:	f10e 38ff 	add.w	r8, lr, #4294967295
 801c7d6:	45c4      	cmp	ip, r8
 801c7d8:	f280 81c8 	bge.w	801cb6c <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x46a>
 801c7dc:	b200      	sxth	r0, r0
 801c7de:	fb0c 3300 	mla	r3, ip, r0, r3
 801c7e2:	9c12      	ldr	r4, [sp, #72]	@ 0x48
 801c7e4:	eb04 0803 	add.w	r8, r4, r3
 801c7e8:	5ce3      	ldrb	r3, [r4, r3]
 801c7ea:	f856 3023 	ldr.w	r3, [r6, r3, lsl #2]
 801c7ee:	ea4f 6e13 	mov.w	lr, r3, lsr #24
 801c7f2:	2a00      	cmp	r2, #0
 801c7f4:	f000 81af 	beq.w	801cb56 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x454>
 801c7f8:	f898 c001 	ldrb.w	ip, [r8, #1]
 801c7fc:	f856 402c 	ldr.w	r4, [r6, ip, lsl #2]
 801c800:	940e      	str	r4, [sp, #56]	@ 0x38
 801c802:	0e24      	lsrs	r4, r4, #24
 801c804:	9415      	str	r4, [sp, #84]	@ 0x54
 801c806:	b179      	cbz	r1, 801c828 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x126>
 801c808:	eb08 0c00 	add.w	ip, r8, r0
 801c80c:	f818 0000 	ldrb.w	r0, [r8, r0]
 801c810:	f856 0020 	ldr.w	r0, [r6, r0, lsl #2]
 801c814:	900a      	str	r0, [sp, #40]	@ 0x28
 801c816:	0e00      	lsrs	r0, r0, #24
 801c818:	9013      	str	r0, [sp, #76]	@ 0x4c
 801c81a:	f89c 0001 	ldrb.w	r0, [ip, #1]
 801c81e:	f856 0020 	ldr.w	r0, [r6, r0, lsl #2]
 801c822:	900f      	str	r0, [sp, #60]	@ 0x3c
 801c824:	0e00      	lsrs	r0, r0, #24
 801c826:	9016      	str	r0, [sp, #88]	@ 0x58
 801c828:	b292      	uxth	r2, r2
 801c82a:	b289      	uxth	r1, r1
 801c82c:	fb02 f901 	mul.w	r9, r2, r1
 801c830:	ebc9 1101 	rsb	r1, r9, r1, lsl #4
 801c834:	0112      	lsls	r2, r2, #4
 801c836:	eba2 0809 	sub.w	r8, r2, r9
 801c83a:	b289      	uxth	r1, r1
 801c83c:	f5c2 7280 	rsb	r2, r2, #256	@ 0x100
 801c840:	9815      	ldr	r0, [sp, #84]	@ 0x54
 801c842:	9c13      	ldr	r4, [sp, #76]	@ 0x4c
 801c844:	fa1f f888 	uxth.w	r8, r8
 801c848:	1a52      	subs	r2, r2, r1
 801c84a:	b292      	uxth	r2, r2
 801c84c:	fb08 f000 	mul.w	r0, r8, r0
 801c850:	fb02 000e 	mla	r0, r2, lr, r0
 801c854:	fb01 0004 	mla	r0, r1, r4, r0
 801c858:	9c16      	ldr	r4, [sp, #88]	@ 0x58
 801c85a:	fb09 0004 	mla	r0, r9, r4, r0
 801c85e:	f3c0 2007 	ubfx	r0, r0, #8, #8
 801c862:	2800      	cmp	r0, #0
 801c864:	f000 80fa 	beq.w	801ca5c <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x35a>
 801c868:	f1be 0fff 	cmp.w	lr, #255	@ 0xff
 801c86c:	d01b      	beq.n	801c8a6 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1a4>
 801c86e:	f003 1aff 	and.w	sl, r3, #16711935	@ 0xff00ff
 801c872:	fb0e fa0a 	mul.w	sl, lr, sl
 801c876:	f403 437f 	and.w	r3, r3, #65280	@ 0xff00
 801c87a:	fb0e fe03 	mul.w	lr, lr, r3
 801c87e:	ea4f 231a 	mov.w	r3, sl, lsr #8
 801c882:	f003 13ff 	and.w	r3, r3, #16711935	@ 0xff00ff
 801c886:	f10a 1a01 	add.w	sl, sl, #65537	@ 0x10001
 801c88a:	f50e 7c80 	add.w	ip, lr, #256	@ 0x100
 801c88e:	4453      	add	r3, sl
 801c890:	eb0c 2c1e 	add.w	ip, ip, lr, lsr #8
 801c894:	0a1b      	lsrs	r3, r3, #8
 801c896:	ea4f 2c1c 	mov.w	ip, ip, lsr #8
 801c89a:	f003 13ff 	and.w	r3, r3, #16711935	@ 0xff00ff
 801c89e:	f40c 4c7f 	and.w	ip, ip, #65280	@ 0xff00
 801c8a2:	ea43 030c 	orr.w	r3, r3, ip
 801c8a6:	9c15      	ldr	r4, [sp, #84]	@ 0x54
 801c8a8:	2cff      	cmp	r4, #255	@ 0xff
 801c8aa:	d021      	beq.n	801c8f0 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1ee>
 801c8ac:	9c0e      	ldr	r4, [sp, #56]	@ 0x38
 801c8ae:	f004 1bff 	and.w	fp, r4, #16711935	@ 0xff00ff
 801c8b2:	9c15      	ldr	r4, [sp, #84]	@ 0x54
 801c8b4:	fb04 fb0b 	mul.w	fp, r4, fp
 801c8b8:	9c0e      	ldr	r4, [sp, #56]	@ 0x38
 801c8ba:	f404 4a7f 	and.w	sl, r4, #65280	@ 0xff00
 801c8be:	9c15      	ldr	r4, [sp, #84]	@ 0x54
 801c8c0:	ea4f 2e1b 	mov.w	lr, fp, lsr #8
 801c8c4:	fb04 fa0a 	mul.w	sl, r4, sl
 801c8c8:	f00e 1eff 	and.w	lr, lr, #16711935	@ 0xff00ff
 801c8cc:	f10b 1b01 	add.w	fp, fp, #65537	@ 0x10001
 801c8d0:	f50a 7c80 	add.w	ip, sl, #256	@ 0x100
 801c8d4:	44de      	add	lr, fp
 801c8d6:	eb0c 2a1a 	add.w	sl, ip, sl, lsr #8
 801c8da:	ea4f 2e1e 	mov.w	lr, lr, lsr #8
 801c8de:	ea4f 2a1a 	mov.w	sl, sl, lsr #8
 801c8e2:	f00e 1eff 	and.w	lr, lr, #16711935	@ 0xff00ff
 801c8e6:	f40a 4a7f 	and.w	sl, sl, #65280	@ 0xff00
 801c8ea:	ea4e 040a 	orr.w	r4, lr, sl
 801c8ee:	940e      	str	r4, [sp, #56]	@ 0x38
 801c8f0:	9c13      	ldr	r4, [sp, #76]	@ 0x4c
 801c8f2:	2cff      	cmp	r4, #255	@ 0xff
 801c8f4:	d021      	beq.n	801c93a <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x238>
 801c8f6:	9c0a      	ldr	r4, [sp, #40]	@ 0x28
 801c8f8:	f004 1bff 	and.w	fp, r4, #16711935	@ 0xff00ff
 801c8fc:	9c13      	ldr	r4, [sp, #76]	@ 0x4c
 801c8fe:	fb04 fb0b 	mul.w	fp, r4, fp
 801c902:	9c0a      	ldr	r4, [sp, #40]	@ 0x28
 801c904:	f404 4a7f 	and.w	sl, r4, #65280	@ 0xff00
 801c908:	9c13      	ldr	r4, [sp, #76]	@ 0x4c
 801c90a:	ea4f 2e1b 	mov.w	lr, fp, lsr #8
 801c90e:	fb04 fa0a 	mul.w	sl, r4, sl
 801c912:	f00e 1eff 	and.w	lr, lr, #16711935	@ 0xff00ff
 801c916:	f10b 1b01 	add.w	fp, fp, #65537	@ 0x10001
 801c91a:	f50a 7c80 	add.w	ip, sl, #256	@ 0x100
 801c91e:	44de      	add	lr, fp
 801c920:	eb0c 2a1a 	add.w	sl, ip, sl, lsr #8
 801c924:	ea4f 2e1e 	mov.w	lr, lr, lsr #8
 801c928:	ea4f 2a1a 	mov.w	sl, sl, lsr #8
 801c92c:	f00e 1eff 	and.w	lr, lr, #16711935	@ 0xff00ff
 801c930:	f40a 4a7f 	and.w	sl, sl, #65280	@ 0xff00
 801c934:	ea4e 040a 	orr.w	r4, lr, sl
 801c938:	940a      	str	r4, [sp, #40]	@ 0x28
 801c93a:	9c16      	ldr	r4, [sp, #88]	@ 0x58
 801c93c:	2cff      	cmp	r4, #255	@ 0xff
 801c93e:	d021      	beq.n	801c984 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x282>
 801c940:	9c0f      	ldr	r4, [sp, #60]	@ 0x3c
 801c942:	f004 1bff 	and.w	fp, r4, #16711935	@ 0xff00ff
 801c946:	9c16      	ldr	r4, [sp, #88]	@ 0x58
 801c948:	fb04 fb0b 	mul.w	fp, r4, fp
 801c94c:	9c0f      	ldr	r4, [sp, #60]	@ 0x3c
 801c94e:	f404 4a7f 	and.w	sl, r4, #65280	@ 0xff00
 801c952:	9c16      	ldr	r4, [sp, #88]	@ 0x58
 801c954:	ea4f 2e1b 	mov.w	lr, fp, lsr #8
 801c958:	fb04 fa0a 	mul.w	sl, r4, sl
 801c95c:	f00e 1eff 	and.w	lr, lr, #16711935	@ 0xff00ff
 801c960:	f10b 1b01 	add.w	fp, fp, #65537	@ 0x10001
 801c964:	f50a 7c80 	add.w	ip, sl, #256	@ 0x100
 801c968:	44de      	add	lr, fp
 801c96a:	eb0c 2a1a 	add.w	sl, ip, sl, lsr #8
 801c96e:	ea4f 2e1e 	mov.w	lr, lr, lsr #8
 801c972:	ea4f 2a1a 	mov.w	sl, sl, lsr #8
 801c976:	f00e 1eff 	and.w	lr, lr, #16711935	@ 0xff00ff
 801c97a:	f40a 4a7f 	and.w	sl, sl, #65280	@ 0xff00
 801c97e:	ea4e 040a 	orr.w	r4, lr, sl
 801c982:	940f      	str	r4, [sp, #60]	@ 0x3c
 801c984:	9c0e      	ldr	r4, [sp, #56]	@ 0x38
 801c986:	f004 1cff 	and.w	ip, r4, #16711935	@ 0xff00ff
 801c98a:	9c0a      	ldr	r4, [sp, #40]	@ 0x28
 801c98c:	f003 1eff 	and.w	lr, r3, #16711935	@ 0xff00ff
 801c990:	fb08 fc0c 	mul.w	ip, r8, ip
 801c994:	fb02 cc0e 	mla	ip, r2, lr, ip
 801c998:	f004 1eff 	and.w	lr, r4, #16711935	@ 0xff00ff
 801c99c:	9c0f      	ldr	r4, [sp, #60]	@ 0x3c
 801c99e:	fb01 cc0e 	mla	ip, r1, lr, ip
 801c9a2:	f004 1eff 	and.w	lr, r4, #16711935	@ 0xff00ff
 801c9a6:	9c0e      	ldr	r4, [sp, #56]	@ 0x38
 801c9a8:	fb09 cc0e 	mla	ip, r9, lr, ip
 801c9ac:	f404 4e7f 	and.w	lr, r4, #65280	@ 0xff00
 801c9b0:	fb08 f80e 	mul.w	r8, r8, lr
 801c9b4:	f403 437f 	and.w	r3, r3, #65280	@ 0xff00
 801c9b8:	fb02 8303 	mla	r3, r2, r3, r8
 801c9bc:	9a0a      	ldr	r2, [sp, #40]	@ 0x28
 801c9be:	9c0d      	ldr	r4, [sp, #52]	@ 0x34
 801c9c0:	f402 4a7f 	and.w	sl, r2, #65280	@ 0xff00
 801c9c4:	9a0f      	ldr	r2, [sp, #60]	@ 0x3c
 801c9c6:	fb01 330a 	mla	r3, r1, sl, r3
 801c9ca:	f402 417f 	and.w	r1, r2, #65280	@ 0xff00
 801c9ce:	9a0d      	ldr	r2, [sp, #52]	@ 0x34
 801c9d0:	fb09 3901 	mla	r9, r9, r1, r3
 801c9d4:	4342      	muls	r2, r0
 801c9d6:	ea4f 2c1c 	mov.w	ip, ip, lsr #8
 801c9da:	ea4f 2919 	mov.w	r9, r9, lsr #8
 801c9de:	883b      	ldrh	r3, [r7, #0]
 801c9e0:	1c50      	adds	r0, r2, #1
 801c9e2:	f00c 1cff 	and.w	ip, ip, #16711935	@ 0xff00ff
 801c9e6:	f409 497f 	and.w	r9, r9, #65280	@ 0xff00
 801c9ea:	ea4c 0c09 	orr.w	ip, ip, r9
 801c9ee:	eb00 2012 	add.w	r0, r0, r2, lsr #8
 801c9f2:	1219      	asrs	r1, r3, #8
 801c9f4:	ea4f 421c 	mov.w	r2, ip, lsr #16
 801c9f8:	ea6f 2010 	mvn.w	r0, r0, lsr #8
 801c9fc:	b2c0      	uxtb	r0, r0
 801c9fe:	fb12 f204 	smulbb	r2, r2, r4
 801ca02:	f001 01f8 	and.w	r1, r1, #248	@ 0xf8
 801ca06:	fb01 2100 	mla	r1, r1, r0, r2
 801ca0a:	f3cc 2e07 	ubfx	lr, ip, #8, #8
 801ca0e:	10da      	asrs	r2, r3, #3
 801ca10:	fa5f fc8c 	uxtb.w	ip, ip
 801ca14:	00db      	lsls	r3, r3, #3
 801ca16:	fb1c fc04 	smulbb	ip, ip, r4
 801ca1a:	b2db      	uxtb	r3, r3
 801ca1c:	b289      	uxth	r1, r1
 801ca1e:	fb03 c300 	mla	r3, r3, r0, ip
 801ca22:	fa1f fc83 	uxth.w	ip, r3
 801ca26:	1c4b      	adds	r3, r1, #1
 801ca28:	eb03 2111 	add.w	r1, r3, r1, lsr #8
 801ca2c:	f002 02fc 	and.w	r2, r2, #252	@ 0xfc
 801ca30:	fb1e fe04 	smulbb	lr, lr, r4
 801ca34:	f10c 0301 	add.w	r3, ip, #1
 801ca38:	fb02 e200 	mla	r2, r2, r0, lr
 801ca3c:	eb03 231c 	add.w	r3, r3, ip, lsr #8
 801ca40:	b292      	uxth	r2, r2
 801ca42:	f401 4178 	and.w	r1, r1, #63488	@ 0xf800
 801ca46:	f3c3 23c4 	ubfx	r3, r3, #11, #5
 801ca4a:	430b      	orrs	r3, r1
 801ca4c:	1c51      	adds	r1, r2, #1
 801ca4e:	eb01 2212 	add.w	r2, r1, r2, lsr #8
 801ca52:	0952      	lsrs	r2, r2, #5
 801ca54:	f402 62fc 	and.w	r2, r2, #2016	@ 0x7e0
 801ca58:	4313      	orrs	r3, r2
 801ca5a:	803b      	strh	r3, [r7, #0]
 801ca5c:	9b2b      	ldr	r3, [sp, #172]	@ 0xac
 801ca5e:	9a29      	ldr	r2, [sp, #164]	@ 0xa4
 801ca60:	441a      	add	r2, r3
 801ca62:	9b2c      	ldr	r3, [sp, #176]	@ 0xb0
 801ca64:	9229      	str	r2, [sp, #164]	@ 0xa4
 801ca66:	441d      	add	r5, r3
 801ca68:	9b1a      	ldr	r3, [sp, #104]	@ 0x68
 801ca6a:	3b01      	subs	r3, #1
 801ca6c:	3702      	adds	r7, #2
 801ca6e:	931a      	str	r3, [sp, #104]	@ 0x68
 801ca70:	e694      	b.n	801c79c <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x9a>
 801ca72:	9b2b      	ldr	r3, [sp, #172]	@ 0xac
 801ca74:	9c29      	ldr	r4, [sp, #164]	@ 0xa4
 801ca76:	441c      	add	r4, r3
 801ca78:	9b2c      	ldr	r3, [sp, #176]	@ 0xb0
 801ca7a:	9429      	str	r4, [sp, #164]	@ 0xa4
 801ca7c:	441d      	add	r5, r3
 801ca7e:	9b09      	ldr	r3, [sp, #36]	@ 0x24
 801ca80:	3b01      	subs	r3, #1
 801ca82:	9309      	str	r3, [sp, #36]	@ 0x24
 801ca84:	9b0c      	ldr	r3, [sp, #48]	@ 0x30
 801ca86:	3302      	adds	r3, #2
 801ca88:	930c      	str	r3, [sp, #48]	@ 0x30
 801ca8a:	e666      	b.n	801c75a <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x58>
 801ca8c:	d024      	beq.n	801cad8 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3d6>
 801ca8e:	9b09      	ldr	r3, [sp, #36]	@ 0x24
 801ca90:	982b      	ldr	r0, [sp, #172]	@ 0xac
 801ca92:	9c29      	ldr	r4, [sp, #164]	@ 0xa4
 801ca94:	3b01      	subs	r3, #1
 801ca96:	fb00 4003 	mla	r0, r0, r3, r4
 801ca9a:	1400      	asrs	r0, r0, #16
 801ca9c:	f53f ae7b 	bmi.w	801c796 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x94>
 801caa0:	3901      	subs	r1, #1
 801caa2:	4288      	cmp	r0, r1
 801caa4:	f6bf ae77 	bge.w	801c796 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x94>
 801caa8:	992c      	ldr	r1, [sp, #176]	@ 0xb0
 801caaa:	fb01 5303 	mla	r3, r1, r3, r5
 801caae:	141b      	asrs	r3, r3, #16
 801cab0:	f53f ae71 	bmi.w	801c796 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x94>
 801cab4:	3a01      	subs	r2, #1
 801cab6:	4293      	cmp	r3, r2
 801cab8:	f6bf ae6d 	bge.w	801c796 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x94>
 801cabc:	f8dd b024 	ldr.w	fp, [sp, #36]	@ 0x24
 801cac0:	f8dd 9030 	ldr.w	r9, [sp, #48]	@ 0x30
 801cac4:	f1bb 0f00 	cmp.w	fp, #0
 801cac8:	dc70      	bgt.n	801cbac <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x4aa>
 801caca:	9b09      	ldr	r3, [sp, #36]	@ 0x24
 801cacc:	ea23 74e3 	bic.w	r4, r3, r3, asr #31
 801cad0:	9b0c      	ldr	r3, [sp, #48]	@ 0x30
 801cad2:	eb03 0344 	add.w	r3, r3, r4, lsl #1
 801cad6:	930c      	str	r3, [sp, #48]	@ 0x30
 801cad8:	9b19      	ldr	r3, [sp, #100]	@ 0x64
 801cada:	2b00      	cmp	r3, #0
 801cadc:	f340 81be 	ble.w	801ce5c <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x75a>
 801cae0:	ee30 0a04 	vadd.f32	s0, s0, s8
 801cae4:	eeb7 7a00 	vmov.f32	s14, #112	@ 0x3f800000  1.0
 801cae8:	eec7 7a00 	vdiv.f32	s15, s14, s0
 801caec:	9b28      	ldr	r3, [sp, #160]	@ 0xa0
 801caee:	ee70 0aa4 	vadd.f32	s1, s1, s9
 801caf2:	ee31 1a05 	vadd.f32	s2, s2, s10
 801caf6:	ee20 7aa7 	vmul.f32	s14, s1, s15
 801cafa:	eef0 6a62 	vmov.f32	s13, s5
 801cafe:	ee61 7a27 	vmul.f32	s15, s2, s15
 801cb02:	eefe 6ac8 	vcvt.s32.f32	s13, s13, #16
 801cb06:	ee77 2a62 	vsub.f32	s5, s14, s5
 801cb0a:	edcd 6a29 	vstr	s13, [sp, #164]	@ 0xa4
 801cb0e:	eefe 2ac8 	vcvt.s32.f32	s5, s5, #16
 801cb12:	eef0 6a43 	vmov.f32	s13, s6
 801cb16:	ee37 3ac3 	vsub.f32	s6, s15, s6
 801cb1a:	ee12 2a90 	vmov	r2, s5
 801cb1e:	eebe 3ac8 	vcvt.s32.f32	s6, s6, #16
 801cb22:	fb92 f3f3 	sdiv	r3, r2, r3
 801cb26:	ee13 2a10 	vmov	r2, s6
 801cb2a:	932b      	str	r3, [sp, #172]	@ 0xac
 801cb2c:	9b28      	ldr	r3, [sp, #160]	@ 0xa0
 801cb2e:	fb92 f3f3 	sdiv	r3, r2, r3
 801cb32:	932c      	str	r3, [sp, #176]	@ 0xb0
 801cb34:	9b19      	ldr	r3, [sp, #100]	@ 0x64
 801cb36:	9a1b      	ldr	r2, [sp, #108]	@ 0x6c
 801cb38:	3b01      	subs	r3, #1
 801cb3a:	eefe 6ac8 	vcvt.s32.f32	s13, s13, #16
 801cb3e:	9319      	str	r3, [sp, #100]	@ 0x64
 801cb40:	9b28      	ldr	r3, [sp, #160]	@ 0xa0
 801cb42:	bf08      	it	eq
 801cb44:	4613      	moveq	r3, r2
 801cb46:	ee16 5a90 	vmov	r5, s13
 801cb4a:	9309      	str	r3, [sp, #36]	@ 0x24
 801cb4c:	eeb0 3a67 	vmov.f32	s6, s15
 801cb50:	eef0 2a47 	vmov.f32	s5, s14
 801cb54:	e5f3      	b.n	801c73e <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3c>
 801cb56:	2900      	cmp	r1, #0
 801cb58:	f43f ae66 	beq.w	801c828 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x126>
 801cb5c:	f818 0000 	ldrb.w	r0, [r8, r0]
 801cb60:	f856 0020 	ldr.w	r0, [r6, r0, lsl #2]
 801cb64:	900a      	str	r0, [sp, #40]	@ 0x28
 801cb66:	0e00      	lsrs	r0, r0, #24
 801cb68:	9013      	str	r0, [sp, #76]	@ 0x4c
 801cb6a:	e65d      	b.n	801c828 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x126>
 801cb6c:	f113 0801 	adds.w	r8, r3, #1
 801cb70:	f53f af74 	bmi.w	801ca5c <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x35a>
 801cb74:	4540      	cmp	r0, r8
 801cb76:	f6ff af71 	blt.w	801ca5c <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x35a>
 801cb7a:	f11c 0801 	adds.w	r8, ip, #1
 801cb7e:	f53f af6d 	bmi.w	801ca5c <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x35a>
 801cb82:	45c6      	cmp	lr, r8
 801cb84:	f6ff af6a 	blt.w	801ca5c <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x35a>
 801cb88:	9c1c      	ldr	r4, [sp, #112]	@ 0x70
 801cb8a:	9302      	str	r3, [sp, #8]
 801cb8c:	b200      	sxth	r0, r0
 801cb8e:	fa0f f38e 	sxth.w	r3, lr
 801cb92:	e9cd 1405 	strd	r1, r4, [sp, #20]
 801cb96:	e9cd c203 	strd	ip, r2, [sp, #12]
 801cb9a:	9301      	str	r3, [sp, #4]
 801cb9c:	9000      	str	r0, [sp, #0]
 801cb9e:	4633      	mov	r3, r6
 801cba0:	9a12      	ldr	r2, [sp, #72]	@ 0x48
 801cba2:	981d      	ldr	r0, [sp, #116]	@ 0x74
 801cba4:	4639      	mov	r1, r7
 801cba6:	f7ff fc62 	bl	801c46e <_ZNK8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKmssiihhh>
 801cbaa:	e757      	b.n	801ca5c <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x35a>
 801cbac:	9b29      	ldr	r3, [sp, #164]	@ 0xa4
 801cbae:	9c29      	ldr	r4, [sp, #164]	@ 0xa4
 801cbb0:	f3c3 3203 	ubfx	r2, r3, #12, #4
 801cbb4:	9b30      	ldr	r3, [sp, #192]	@ 0xc0
 801cbb6:	f9b3 1008 	ldrsh.w	r1, [r3, #8]
 801cbba:	1427      	asrs	r7, r4, #16
 801cbbc:	142b      	asrs	r3, r5, #16
 801cbbe:	fb01 7303 	mla	r3, r1, r3, r7
 801cbc2:	9c12      	ldr	r4, [sp, #72]	@ 0x48
 801cbc4:	18e7      	adds	r7, r4, r3
 801cbc6:	5ce3      	ldrb	r3, [r4, r3]
 801cbc8:	f856 3023 	ldr.w	r3, [r6, r3, lsl #2]
 801cbcc:	f3c5 3003 	ubfx	r0, r5, #12, #4
 801cbd0:	ea4f 6c13 	mov.w	ip, r3, lsr #24
 801cbd4:	2a00      	cmp	r2, #0
 801cbd6:	f000 8137 	beq.w	801ce48 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x746>
 801cbda:	f897 e001 	ldrb.w	lr, [r7, #1]
 801cbde:	f856 402e 	ldr.w	r4, [r6, lr, lsl #2]
 801cbe2:	9410      	str	r4, [sp, #64]	@ 0x40
 801cbe4:	0e24      	lsrs	r4, r4, #24
 801cbe6:	9417      	str	r4, [sp, #92]	@ 0x5c
 801cbe8:	b170      	cbz	r0, 801cc08 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x506>
 801cbea:	eb07 0e01 	add.w	lr, r7, r1
 801cbee:	5c79      	ldrb	r1, [r7, r1]
 801cbf0:	f856 1021 	ldr.w	r1, [r6, r1, lsl #2]
 801cbf4:	910b      	str	r1, [sp, #44]	@ 0x2c
 801cbf6:	0e09      	lsrs	r1, r1, #24
 801cbf8:	9114      	str	r1, [sp, #80]	@ 0x50
 801cbfa:	f89e 1001 	ldrb.w	r1, [lr, #1]
 801cbfe:	f856 1021 	ldr.w	r1, [r6, r1, lsl #2]
 801cc02:	9111      	str	r1, [sp, #68]	@ 0x44
 801cc04:	0e09      	lsrs	r1, r1, #24
 801cc06:	9118      	str	r1, [sp, #96]	@ 0x60
 801cc08:	b292      	uxth	r2, r2
 801cc0a:	b280      	uxth	r0, r0
 801cc0c:	fb02 f800 	mul.w	r8, r2, r0
 801cc10:	ebc8 1000 	rsb	r0, r8, r0, lsl #4
 801cc14:	0112      	lsls	r2, r2, #4
 801cc16:	eba2 0e08 	sub.w	lr, r2, r8
 801cc1a:	b280      	uxth	r0, r0
 801cc1c:	f5c2 7280 	rsb	r2, r2, #256	@ 0x100
 801cc20:	9917      	ldr	r1, [sp, #92]	@ 0x5c
 801cc22:	9c14      	ldr	r4, [sp, #80]	@ 0x50
 801cc24:	fa1f fe8e 	uxth.w	lr, lr
 801cc28:	1a12      	subs	r2, r2, r0
 801cc2a:	b292      	uxth	r2, r2
 801cc2c:	fb0e f101 	mul.w	r1, lr, r1
 801cc30:	fb02 110c 	mla	r1, r2, ip, r1
 801cc34:	fb00 1104 	mla	r1, r0, r4, r1
 801cc38:	9c18      	ldr	r4, [sp, #96]	@ 0x60
 801cc3a:	fb08 1104 	mla	r1, r8, r4, r1
 801cc3e:	f3c1 2107 	ubfx	r1, r1, #8, #8
 801cc42:	2900      	cmp	r1, #0
 801cc44:	f000 80f5 	beq.w	801ce32 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x730>
 801cc48:	f1bc 0fff 	cmp.w	ip, #255	@ 0xff
 801cc4c:	d019      	beq.n	801cc82 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x580>
 801cc4e:	f003 1aff 	and.w	sl, r3, #16711935	@ 0xff00ff
 801cc52:	fb0c fa0a 	mul.w	sl, ip, sl
 801cc56:	f403 437f 	and.w	r3, r3, #65280	@ 0xff00
 801cc5a:	fb0c fc03 	mul.w	ip, ip, r3
 801cc5e:	ea4f 231a 	mov.w	r3, sl, lsr #8
 801cc62:	f003 13ff 	and.w	r3, r3, #16711935	@ 0xff00ff
 801cc66:	f10a 1a01 	add.w	sl, sl, #65537	@ 0x10001
 801cc6a:	f50c 7780 	add.w	r7, ip, #256	@ 0x100
 801cc6e:	4453      	add	r3, sl
 801cc70:	eb07 271c 	add.w	r7, r7, ip, lsr #8
 801cc74:	0a1b      	lsrs	r3, r3, #8
 801cc76:	0a3f      	lsrs	r7, r7, #8
 801cc78:	f003 13ff 	and.w	r3, r3, #16711935	@ 0xff00ff
 801cc7c:	f407 477f 	and.w	r7, r7, #65280	@ 0xff00
 801cc80:	433b      	orrs	r3, r7
 801cc82:	9c17      	ldr	r4, [sp, #92]	@ 0x5c
 801cc84:	2cff      	cmp	r4, #255	@ 0xff
 801cc86:	d020      	beq.n	801ccca <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x5c8>
 801cc88:	9c10      	ldr	r4, [sp, #64]	@ 0x40
 801cc8a:	f004 17ff 	and.w	r7, r4, #16711935	@ 0xff00ff
 801cc8e:	9c17      	ldr	r4, [sp, #92]	@ 0x5c
 801cc90:	4367      	muls	r7, r4
 801cc92:	9c10      	ldr	r4, [sp, #64]	@ 0x40
 801cc94:	f404 4a7f 	and.w	sl, r4, #65280	@ 0xff00
 801cc98:	9c17      	ldr	r4, [sp, #92]	@ 0x5c
 801cc9a:	ea4f 2c17 	mov.w	ip, r7, lsr #8
 801cc9e:	fb04 fa0a 	mul.w	sl, r4, sl
 801cca2:	f107 1701 	add.w	r7, r7, #65537	@ 0x10001
 801cca6:	f00c 1cff 	and.w	ip, ip, #16711935	@ 0xff00ff
 801ccaa:	44bc      	add	ip, r7
 801ccac:	f50a 7780 	add.w	r7, sl, #256	@ 0x100
 801ccb0:	eb07 2a1a 	add.w	sl, r7, sl, lsr #8
 801ccb4:	ea4f 2c1c 	mov.w	ip, ip, lsr #8
 801ccb8:	ea4f 2a1a 	mov.w	sl, sl, lsr #8
 801ccbc:	f00c 1cff 	and.w	ip, ip, #16711935	@ 0xff00ff
 801ccc0:	f40a 4a7f 	and.w	sl, sl, #65280	@ 0xff00
 801ccc4:	ea4c 040a 	orr.w	r4, ip, sl
 801ccc8:	9410      	str	r4, [sp, #64]	@ 0x40
 801ccca:	9c14      	ldr	r4, [sp, #80]	@ 0x50
 801cccc:	2cff      	cmp	r4, #255	@ 0xff
 801ccce:	d020      	beq.n	801cd12 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x610>
 801ccd0:	9c0b      	ldr	r4, [sp, #44]	@ 0x2c
 801ccd2:	f004 17ff 	and.w	r7, r4, #16711935	@ 0xff00ff
 801ccd6:	9c14      	ldr	r4, [sp, #80]	@ 0x50
 801ccd8:	4367      	muls	r7, r4
 801ccda:	9c0b      	ldr	r4, [sp, #44]	@ 0x2c
 801ccdc:	f404 4a7f 	and.w	sl, r4, #65280	@ 0xff00
 801cce0:	9c14      	ldr	r4, [sp, #80]	@ 0x50
 801cce2:	ea4f 2c17 	mov.w	ip, r7, lsr #8
 801cce6:	fb04 fa0a 	mul.w	sl, r4, sl
 801ccea:	f107 1701 	add.w	r7, r7, #65537	@ 0x10001
 801ccee:	f00c 1cff 	and.w	ip, ip, #16711935	@ 0xff00ff
 801ccf2:	44bc      	add	ip, r7
 801ccf4:	f50a 7780 	add.w	r7, sl, #256	@ 0x100
 801ccf8:	eb07 2a1a 	add.w	sl, r7, sl, lsr #8
 801ccfc:	ea4f 2c1c 	mov.w	ip, ip, lsr #8
 801cd00:	ea4f 2a1a 	mov.w	sl, sl, lsr #8
 801cd04:	f00c 1cff 	and.w	ip, ip, #16711935	@ 0xff00ff
 801cd08:	f40a 4a7f 	and.w	sl, sl, #65280	@ 0xff00
 801cd0c:	ea4c 040a 	orr.w	r4, ip, sl
 801cd10:	940b      	str	r4, [sp, #44]	@ 0x2c
 801cd12:	9c18      	ldr	r4, [sp, #96]	@ 0x60
 801cd14:	2cff      	cmp	r4, #255	@ 0xff
 801cd16:	d020      	beq.n	801cd5a <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x658>
 801cd18:	9c11      	ldr	r4, [sp, #68]	@ 0x44
 801cd1a:	f004 17ff 	and.w	r7, r4, #16711935	@ 0xff00ff
 801cd1e:	9c18      	ldr	r4, [sp, #96]	@ 0x60
 801cd20:	4367      	muls	r7, r4
 801cd22:	9c11      	ldr	r4, [sp, #68]	@ 0x44
 801cd24:	f404 4a7f 	and.w	sl, r4, #65280	@ 0xff00
 801cd28:	9c18      	ldr	r4, [sp, #96]	@ 0x60
 801cd2a:	ea4f 2c17 	mov.w	ip, r7, lsr #8
 801cd2e:	fb04 fa0a 	mul.w	sl, r4, sl
 801cd32:	f107 1701 	add.w	r7, r7, #65537	@ 0x10001
 801cd36:	f00c 1cff 	and.w	ip, ip, #16711935	@ 0xff00ff
 801cd3a:	44bc      	add	ip, r7
 801cd3c:	f50a 7780 	add.w	r7, sl, #256	@ 0x100
 801cd40:	eb07 2a1a 	add.w	sl, r7, sl, lsr #8
 801cd44:	ea4f 2c1c 	mov.w	ip, ip, lsr #8
 801cd48:	ea4f 2a1a 	mov.w	sl, sl, lsr #8
 801cd4c:	f00c 1cff 	and.w	ip, ip, #16711935	@ 0xff00ff
 801cd50:	f40a 4a7f 	and.w	sl, sl, #65280	@ 0xff00
 801cd54:	ea4c 040a 	orr.w	r4, ip, sl
 801cd58:	9411      	str	r4, [sp, #68]	@ 0x44
 801cd5a:	9c10      	ldr	r4, [sp, #64]	@ 0x40
 801cd5c:	f004 17ff 	and.w	r7, r4, #16711935	@ 0xff00ff
 801cd60:	9c0b      	ldr	r4, [sp, #44]	@ 0x2c
 801cd62:	f003 1cff 	and.w	ip, r3, #16711935	@ 0xff00ff
 801cd66:	fb0e f707 	mul.w	r7, lr, r7
 801cd6a:	fb02 770c 	mla	r7, r2, ip, r7
 801cd6e:	f004 1cff 	and.w	ip, r4, #16711935	@ 0xff00ff
 801cd72:	9c11      	ldr	r4, [sp, #68]	@ 0x44
 801cd74:	fb00 770c 	mla	r7, r0, ip, r7
 801cd78:	f004 1cff 	and.w	ip, r4, #16711935	@ 0xff00ff
 801cd7c:	9c10      	ldr	r4, [sp, #64]	@ 0x40
 801cd7e:	fb08 770c 	mla	r7, r8, ip, r7
 801cd82:	f404 4c7f 	and.w	ip, r4, #65280	@ 0xff00
 801cd86:	fb0e fe0c 	mul.w	lr, lr, ip
 801cd8a:	f403 437f 	and.w	r3, r3, #65280	@ 0xff00
 801cd8e:	fb02 e303 	mla	r3, r2, r3, lr
 801cd92:	9a0b      	ldr	r2, [sp, #44]	@ 0x2c
 801cd94:	9c0d      	ldr	r4, [sp, #52]	@ 0x34
 801cd96:	f402 4a7f 	and.w	sl, r2, #65280	@ 0xff00
 801cd9a:	9a11      	ldr	r2, [sp, #68]	@ 0x44
 801cd9c:	fb00 330a 	mla	r3, r0, sl, r3
 801cda0:	f402 4c7f 	and.w	ip, r2, #65280	@ 0xff00
 801cda4:	fb08 3c0c 	mla	ip, r8, ip, r3
 801cda8:	9b0d      	ldr	r3, [sp, #52]	@ 0x34
 801cdaa:	f8b9 0000 	ldrh.w	r0, [r9]
 801cdae:	434b      	muls	r3, r1
 801cdb0:	0a3f      	lsrs	r7, r7, #8
 801cdb2:	ea4f 2c1c 	mov.w	ip, ip, lsr #8
 801cdb6:	f40c 4c7f 	and.w	ip, ip, #65280	@ 0xff00
 801cdba:	1c59      	adds	r1, r3, #1
 801cdbc:	f007 17ff 	and.w	r7, r7, #16711935	@ 0xff00ff
 801cdc0:	ea47 070c 	orr.w	r7, r7, ip
 801cdc4:	eb01 2113 	add.w	r1, r1, r3, lsr #8
 801cdc8:	1202      	asrs	r2, r0, #8
 801cdca:	0c3b      	lsrs	r3, r7, #16
 801cdcc:	ea6f 2111 	mvn.w	r1, r1, lsr #8
 801cdd0:	b2c9      	uxtb	r1, r1
 801cdd2:	fb13 f304 	smulbb	r3, r3, r4
 801cdd6:	f002 02f8 	and.w	r2, r2, #248	@ 0xf8
 801cdda:	fb02 3201 	mla	r2, r2, r1, r3
 801cdde:	f3c7 2c07 	ubfx	ip, r7, #8, #8
 801cde2:	10c3      	asrs	r3, r0, #3
 801cde4:	b2ff      	uxtb	r7, r7
 801cde6:	00c0      	lsls	r0, r0, #3
 801cde8:	b292      	uxth	r2, r2
 801cdea:	fb1c fc04 	smulbb	ip, ip, r4
 801cdee:	f003 03fc 	and.w	r3, r3, #252	@ 0xfc
 801cdf2:	b2c0      	uxtb	r0, r0
 801cdf4:	fb17 f704 	smulbb	r7, r7, r4
 801cdf8:	fb03 c301 	mla	r3, r3, r1, ip
 801cdfc:	fb00 7001 	mla	r0, r0, r1, r7
 801ce00:	f102 0c01 	add.w	ip, r2, #1
 801ce04:	b280      	uxth	r0, r0
 801ce06:	eb0c 2212 	add.w	r2, ip, r2, lsr #8
 801ce0a:	f402 4c78 	and.w	ip, r2, #63488	@ 0xf800
 801ce0e:	1c42      	adds	r2, r0, #1
 801ce10:	eb02 2210 	add.w	r2, r2, r0, lsr #8
 801ce14:	b29b      	uxth	r3, r3
 801ce16:	f3c2 22c4 	ubfx	r2, r2, #11, #5
 801ce1a:	ea42 020c 	orr.w	r2, r2, ip
 801ce1e:	f103 0c01 	add.w	ip, r3, #1
 801ce22:	eb0c 2313 	add.w	r3, ip, r3, lsr #8
 801ce26:	095b      	lsrs	r3, r3, #5
 801ce28:	f403 63fc 	and.w	r3, r3, #2016	@ 0x7e0
 801ce2c:	431a      	orrs	r2, r3
 801ce2e:	f8a9 2000 	strh.w	r2, [r9]
 801ce32:	9b2b      	ldr	r3, [sp, #172]	@ 0xac
 801ce34:	9a29      	ldr	r2, [sp, #164]	@ 0xa4
 801ce36:	441a      	add	r2, r3
 801ce38:	9b2c      	ldr	r3, [sp, #176]	@ 0xb0
 801ce3a:	9229      	str	r2, [sp, #164]	@ 0xa4
 801ce3c:	f109 0902 	add.w	r9, r9, #2
 801ce40:	441d      	add	r5, r3
 801ce42:	f10b 3bff 	add.w	fp, fp, #4294967295
 801ce46:	e63d      	b.n	801cac4 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3c2>
 801ce48:	2800      	cmp	r0, #0
 801ce4a:	f43f aedd 	beq.w	801cc08 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x506>
 801ce4e:	5c79      	ldrb	r1, [r7, r1]
 801ce50:	f856 1021 	ldr.w	r1, [r6, r1, lsl #2]
 801ce54:	910b      	str	r1, [sp, #44]	@ 0x2c
 801ce56:	0e09      	lsrs	r1, r1, #24
 801ce58:	9114      	str	r1, [sp, #80]	@ 0x50
 801ce5a:	e6d5      	b.n	801cc08 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x506>
 801ce5c:	b01f      	add	sp, #124	@ 0x7c
 801ce5e:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}

0801ce62 <_ZNK8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKmssiihh>:
 801ce62:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 801ce66:	b089      	sub	sp, #36	@ 0x24
 801ce68:	9101      	str	r1, [sp, #4]
 801ce6a:	9801      	ldr	r0, [sp, #4]
 801ce6c:	f9bd c048 	ldrsh.w	ip, [sp, #72]	@ 0x48
 801ce70:	8800      	ldrh	r0, [r0, #0]
 801ce72:	f9bd 804c 	ldrsh.w	r8, [sp, #76]	@ 0x4c
 801ce76:	f89d 5058 	ldrb.w	r5, [sp, #88]	@ 0x58
 801ce7a:	f89d 405c 	ldrb.w	r4, [sp, #92]	@ 0x5c
 801ce7e:	1206      	asrs	r6, r0, #8
 801ce80:	e9dd 1714 	ldrd	r1, r7, [sp, #80]	@ 0x50
 801ce84:	f006 06f8 	and.w	r6, r6, #248	@ 0xf8
 801ce88:	9602      	str	r6, [sp, #8]
 801ce8a:	10c6      	asrs	r6, r0, #3
 801ce8c:	00c0      	lsls	r0, r0, #3
 801ce8e:	b2c0      	uxtb	r0, r0
 801ce90:	f006 06fc 	and.w	r6, r6, #252	@ 0xfc
 801ce94:	9004      	str	r0, [sp, #16]
 801ce96:	2f00      	cmp	r7, #0
 801ce98:	fb07 100c 	mla	r0, r7, ip, r1
 801ce9c:	9603      	str	r6, [sp, #12]
 801ce9e:	eb02 0e00 	add.w	lr, r2, r0
 801cea2:	f2c0 810a 	blt.w	801d0ba <_ZNK8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKmssiihh+0x258>
 801cea6:	45b8      	cmp	r8, r7
 801cea8:	f340 8107 	ble.w	801d0ba <_ZNK8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKmssiihh+0x258>
 801ceac:	2900      	cmp	r1, #0
 801ceae:	f2c0 8102 	blt.w	801d0b6 <_ZNK8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKmssiihh+0x254>
 801ceb2:	458c      	cmp	ip, r1
 801ceb4:	f340 80ff 	ble.w	801d0b6 <_ZNK8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKmssiihh+0x254>
 801ceb8:	5c12      	ldrb	r2, [r2, r0]
 801ceba:	f853 0022 	ldr.w	r0, [r3, r2, lsl #2]
 801cebe:	1c4a      	adds	r2, r1, #1
 801cec0:	f100 80fe 	bmi.w	801d0c0 <_ZNK8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKmssiihh+0x25e>
 801cec4:	4594      	cmp	ip, r2
 801cec6:	f340 80fb 	ble.w	801d0c0 <_ZNK8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKmssiihh+0x25e>
 801ceca:	2d00      	cmp	r5, #0
 801cecc:	f000 80fa 	beq.w	801d0c4 <_ZNK8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKmssiihh+0x262>
 801ced0:	f89e 2001 	ldrb.w	r2, [lr, #1]
 801ced4:	f853 6022 	ldr.w	r6, [r3, r2, lsl #2]
 801ced8:	3701      	adds	r7, #1
 801ceda:	f100 80f7 	bmi.w	801d0cc <_ZNK8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKmssiihh+0x26a>
 801cede:	45b8      	cmp	r8, r7
 801cee0:	f340 80f4 	ble.w	801d0cc <_ZNK8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKmssiihh+0x26a>
 801cee4:	2c00      	cmp	r4, #0
 801cee6:	f000 80f4 	beq.w	801d0d2 <_ZNK8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKmssiihh+0x270>
 801ceea:	2900      	cmp	r1, #0
 801ceec:	eb0e 020c 	add.w	r2, lr, ip
 801cef0:	f2c0 80ea 	blt.w	801d0c8 <_ZNK8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKmssiihh+0x266>
 801cef4:	458c      	cmp	ip, r1
 801cef6:	f340 80e7 	ble.w	801d0c8 <_ZNK8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKmssiihh+0x266>
 801cefa:	f81e 700c 	ldrb.w	r7, [lr, ip]
 801cefe:	f853 7027 	ldr.w	r7, [r3, r7, lsl #2]
 801cf02:	3101      	adds	r1, #1
 801cf04:	f100 80e8 	bmi.w	801d0d8 <_ZNK8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKmssiihh+0x276>
 801cf08:	458c      	cmp	ip, r1
 801cf0a:	f340 80e5 	ble.w	801d0d8 <_ZNK8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKmssiihh+0x276>
 801cf0e:	2d00      	cmp	r5, #0
 801cf10:	f000 80e4 	beq.w	801d0dc <_ZNK8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKmssiihh+0x27a>
 801cf14:	7852      	ldrb	r2, [r2, #1]
 801cf16:	f853 1022 	ldr.w	r1, [r3, r2, lsl #2]
 801cf1a:	0e0b      	lsrs	r3, r1, #24
 801cf1c:	ea4f 6a10 	mov.w	sl, r0, lsr #24
 801cf20:	9300      	str	r3, [sp, #0]
 801cf22:	b2a4      	uxth	r4, r4
 801cf24:	b2ab      	uxth	r3, r5
 801cf26:	f000 15ff 	and.w	r5, r0, #16711935	@ 0xff00ff
 801cf2a:	fb03 f904 	mul.w	r9, r3, r4
 801cf2e:	fb0a f505 	mul.w	r5, sl, r5
 801cf32:	011b      	lsls	r3, r3, #4
 801cf34:	eba3 0e09 	sub.w	lr, r3, r9
 801cf38:	f5c3 7280 	rsb	r2, r3, #256	@ 0x100
 801cf3c:	f400 437f 	and.w	r3, r0, #65280	@ 0xff00
 801cf40:	0a28      	lsrs	r0, r5, #8
 801cf42:	f000 10ff 	and.w	r0, r0, #16711935	@ 0xff00ff
 801cf46:	f105 1501 	add.w	r5, r5, #65537	@ 0x10001
 801cf4a:	4405      	add	r5, r0
 801cf4c:	0a2d      	lsrs	r5, r5, #8
 801cf4e:	fb0a f303 	mul.w	r3, sl, r3
 801cf52:	f005 10ff 	and.w	r0, r5, #16711935	@ 0xff00ff
 801cf56:	9005      	str	r0, [sp, #20]
 801cf58:	f503 7080 	add.w	r0, r3, #256	@ 0x100
 801cf5c:	eb00 2313 	add.w	r3, r0, r3, lsr #8
 801cf60:	0a1b      	lsrs	r3, r3, #8
 801cf62:	ea4f 6b16 	mov.w	fp, r6, lsr #24
 801cf66:	9306      	str	r3, [sp, #24]
 801cf68:	f006 13ff 	and.w	r3, r6, #16711935	@ 0xff00ff
 801cf6c:	fb0b f303 	mul.w	r3, fp, r3
 801cf70:	0a1d      	lsrs	r5, r3, #8
 801cf72:	f406 467f 	and.w	r6, r6, #65280	@ 0xff00
 801cf76:	ea4f 6817 	mov.w	r8, r7, lsr #24
 801cf7a:	fb0b f606 	mul.w	r6, fp, r6
 801cf7e:	f103 1301 	add.w	r3, r3, #65537	@ 0x10001
 801cf82:	f007 1cff 	and.w	ip, r7, #16711935	@ 0xff00ff
 801cf86:	f005 15ff 	and.w	r5, r5, #16711935	@ 0xff00ff
 801cf8a:	f407 477f 	and.w	r7, r7, #65280	@ 0xff00
 801cf8e:	fb08 f707 	mul.w	r7, r8, r7
 801cf92:	441d      	add	r5, r3
 801cf94:	f506 7380 	add.w	r3, r6, #256	@ 0x100
 801cf98:	eb03 2616 	add.w	r6, r3, r6, lsr #8
 801cf9c:	f507 7380 	add.w	r3, r7, #256	@ 0x100
 801cfa0:	eb03 2317 	add.w	r3, r3, r7, lsr #8
 801cfa4:	fb08 fc0c 	mul.w	ip, r8, ip
 801cfa8:	0a1b      	lsrs	r3, r3, #8
 801cfaa:	9307      	str	r3, [sp, #28]
 801cfac:	ea4f 201c 	mov.w	r0, ip, lsr #8
 801cfb0:	0e0b      	lsrs	r3, r1, #24
 801cfb2:	f001 17ff 	and.w	r7, r1, #16711935	@ 0xff00ff
 801cfb6:	435f      	muls	r7, r3
 801cfb8:	f10c 1c01 	add.w	ip, ip, #65537	@ 0x10001
 801cfbc:	f000 10ff 	and.w	r0, r0, #16711935	@ 0xff00ff
 801cfc0:	ebc9 1404 	rsb	r4, r9, r4, lsl #4
 801cfc4:	4460      	add	r0, ip
 801cfc6:	ea4f 2c17 	mov.w	ip, r7, lsr #8
 801cfca:	b2a4      	uxth	r4, r4
 801cfcc:	f107 1701 	add.w	r7, r7, #65537	@ 0x10001
 801cfd0:	0a2d      	lsrs	r5, r5, #8
 801cfd2:	f401 417f 	and.w	r1, r1, #65280	@ 0xff00
 801cfd6:	f00c 1cff 	and.w	ip, ip, #16711935	@ 0xff00ff
 801cfda:	fa1f fe8e 	uxth.w	lr, lr
 801cfde:	4359      	muls	r1, r3
 801cfe0:	1b12      	subs	r2, r2, r4
 801cfe2:	9b05      	ldr	r3, [sp, #20]
 801cfe4:	44bc      	add	ip, r7
 801cfe6:	f005 15ff 	and.w	r5, r5, #16711935	@ 0xff00ff
 801cfea:	b292      	uxth	r2, r2
 801cfec:	fb05 f50e 	mul.w	r5, r5, lr
 801cff0:	ea4f 2c1c 	mov.w	ip, ip, lsr #8
 801cff4:	fb03 5502 	mla	r5, r3, r2, r5
 801cff8:	f00c 1cff 	and.w	ip, ip, #16711935	@ 0xff00ff
 801cffc:	9b06      	ldr	r3, [sp, #24]
 801cffe:	f501 7780 	add.w	r7, r1, #256	@ 0x100
 801d002:	0a36      	lsrs	r6, r6, #8
 801d004:	0a00      	lsrs	r0, r0, #8
 801d006:	fb0c 5509 	mla	r5, ip, r9, r5
 801d00a:	f000 10ff 	and.w	r0, r0, #16711935	@ 0xff00ff
 801d00e:	eb07 2111 	add.w	r1, r7, r1, lsr #8
 801d012:	f406 467f 	and.w	r6, r6, #65280	@ 0xff00
 801d016:	fb00 5504 	mla	r5, r0, r4, r5
 801d01a:	fb0e f606 	mul.w	r6, lr, r6
 801d01e:	f403 407f 	and.w	r0, r3, #65280	@ 0xff00
 801d022:	0a09      	lsrs	r1, r1, #8
 801d024:	9b07      	ldr	r3, [sp, #28]
 801d026:	fb02 6000 	mla	r0, r2, r0, r6
 801d02a:	f401 417f 	and.w	r1, r1, #65280	@ 0xff00
 801d02e:	fb09 0001 	mla	r0, r9, r1, r0
 801d032:	f403 437f 	and.w	r3, r3, #65280	@ 0xff00
 801d036:	fb0e fe0b 	mul.w	lr, lr, fp
 801d03a:	fb04 0003 	mla	r0, r4, r3, r0
 801d03e:	fb02 e20a 	mla	r2, r2, sl, lr
 801d042:	9b00      	ldr	r3, [sp, #0]
 801d044:	fb04 2408 	mla	r4, r4, r8, r2
 801d048:	fb09 4903 	mla	r9, r9, r3, r4
 801d04c:	ea6f 2929 	mvn.w	r9, r9, asr #8
 801d050:	9b02      	ldr	r3, [sp, #8]
 801d052:	9a04      	ldr	r2, [sp, #16]
 801d054:	fa5f f989 	uxtb.w	r9, r9
 801d058:	fb03 f109 	mul.w	r1, r3, r9
 801d05c:	9b03      	ldr	r3, [sp, #12]
 801d05e:	0a2d      	lsrs	r5, r5, #8
 801d060:	0a00      	lsrs	r0, r0, #8
 801d062:	fb03 f309 	mul.w	r3, r3, r9
 801d066:	f400 407f 	and.w	r0, r0, #65280	@ 0xff00
 801d06a:	f005 15ff 	and.w	r5, r5, #16711935	@ 0xff00ff
 801d06e:	4305      	orrs	r5, r0
 801d070:	fb02 f909 	mul.w	r9, r2, r9
 801d074:	1c58      	adds	r0, r3, #1
 801d076:	1c4a      	adds	r2, r1, #1
 801d078:	eb00 2013 	add.w	r0, r0, r3, lsr #8
 801d07c:	eb02 2111 	add.w	r1, r2, r1, lsr #8
 801d080:	0a2b      	lsrs	r3, r5, #8
 801d082:	0c2a      	lsrs	r2, r5, #16
 801d084:	eb03 2310 	add.w	r3, r3, r0, lsr #8
 801d088:	eb02 2211 	add.w	r2, r2, r1, lsr #8
 801d08c:	00db      	lsls	r3, r3, #3
 801d08e:	0212      	lsls	r2, r2, #8
 801d090:	f402 4278 	and.w	r2, r2, #63488	@ 0xf800
 801d094:	f403 63fc 	and.w	r3, r3, #2016	@ 0x7e0
 801d098:	4313      	orrs	r3, r2
 801d09a:	f109 0201 	add.w	r2, r9, #1
 801d09e:	eb02 2919 	add.w	r9, r2, r9, lsr #8
 801d0a2:	eb05 2519 	add.w	r5, r5, r9, lsr #8
 801d0a6:	f3c5 05c4 	ubfx	r5, r5, #3, #5
 801d0aa:	431d      	orrs	r5, r3
 801d0ac:	9b01      	ldr	r3, [sp, #4]
 801d0ae:	801d      	strh	r5, [r3, #0]
 801d0b0:	b009      	add	sp, #36	@ 0x24
 801d0b2:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 801d0b6:	2000      	movs	r0, #0
 801d0b8:	e701      	b.n	801cebe <_ZNK8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKmssiihh+0x5c>
 801d0ba:	2600      	movs	r6, #0
 801d0bc:	4630      	mov	r0, r6
 801d0be:	e70b      	b.n	801ced8 <_ZNK8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKmssiihh+0x76>
 801d0c0:	2600      	movs	r6, #0
 801d0c2:	e709      	b.n	801ced8 <_ZNK8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKmssiihh+0x76>
 801d0c4:	462e      	mov	r6, r5
 801d0c6:	e707      	b.n	801ced8 <_ZNK8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKmssiihh+0x76>
 801d0c8:	2700      	movs	r7, #0
 801d0ca:	e71a      	b.n	801cf02 <_ZNK8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKmssiihh+0xa0>
 801d0cc:	2100      	movs	r1, #0
 801d0ce:	460f      	mov	r7, r1
 801d0d0:	e723      	b.n	801cf1a <_ZNK8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKmssiihh+0xb8>
 801d0d2:	4621      	mov	r1, r4
 801d0d4:	4627      	mov	r7, r4
 801d0d6:	e720      	b.n	801cf1a <_ZNK8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKmssiihh+0xb8>
 801d0d8:	2100      	movs	r1, #0
 801d0da:	e71e      	b.n	801cf1a <_ZNK8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKmssiihh+0xb8>
 801d0dc:	4629      	mov	r1, r5
 801d0de:	e71c      	b.n	801cf1a <_ZNK8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKmssiihh+0xb8>

0801d0e0 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff>:
 801d0e0:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 801d0e4:	b09b      	sub	sp, #108	@ 0x6c
 801d0e6:	9218      	str	r2, [sp, #96]	@ 0x60
 801d0e8:	9a29      	ldr	r2, [sp, #164]	@ 0xa4
 801d0ea:	9116      	str	r1, [sp, #88]	@ 0x58
 801d0ec:	9307      	str	r3, [sp, #28]
 801d0ee:	e9dd 132a 	ldrd	r1, r3, [sp, #168]	@ 0xa8
 801d0f2:	9019      	str	r0, [sp, #100]	@ 0x64
 801d0f4:	6850      	ldr	r0, [r2, #4]
 801d0f6:	6812      	ldr	r2, [r2, #0]
 801d0f8:	9d26      	ldr	r5, [sp, #152]	@ 0x98
 801d0fa:	fb00 1303 	mla	r3, r0, r3, r1
 801d0fe:	eb02 0343 	add.w	r3, r2, r3, lsl #1
 801d102:	930a      	str	r3, [sp, #40]	@ 0x28
 801d104:	9b2c      	ldr	r3, [sp, #176]	@ 0xb0
 801d106:	681b      	ldr	r3, [r3, #0]
 801d108:	930f      	str	r3, [sp, #60]	@ 0x3c
 801d10a:	9b2c      	ldr	r3, [sp, #176]	@ 0xb0
 801d10c:	685e      	ldr	r6, [r3, #4]
 801d10e:	3604      	adds	r6, #4
 801d110:	9b16      	ldr	r3, [sp, #88]	@ 0x58
 801d112:	2b00      	cmp	r3, #0
 801d114:	dc03      	bgt.n	801d11e <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3e>
 801d116:	9b18      	ldr	r3, [sp, #96]	@ 0x60
 801d118:	2b00      	cmp	r3, #0
 801d11a:	f340 8373 	ble.w	801d804 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x724>
 801d11e:	9b2c      	ldr	r3, [sp, #176]	@ 0xb0
 801d120:	f9b3 1008 	ldrsh.w	r1, [r3, #8]
 801d124:	f9b3 200c 	ldrsh.w	r2, [r3, #12]
 801d128:	1e48      	subs	r0, r1, #1
 801d12a:	1e57      	subs	r7, r2, #1
 801d12c:	9b07      	ldr	r3, [sp, #28]
 801d12e:	2b00      	cmp	r3, #0
 801d130:	f340 8190 	ble.w	801d454 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x374>
 801d134:	9c25      	ldr	r4, [sp, #148]	@ 0x94
 801d136:	ea5f 4c24 	movs.w	ip, r4, asr #16
 801d13a:	ea4f 4325 	mov.w	r3, r5, asr #16
 801d13e:	d406      	bmi.n	801d14e <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x6e>
 801d140:	4584      	cmp	ip, r0
 801d142:	da04      	bge.n	801d14e <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x6e>
 801d144:	2b00      	cmp	r3, #0
 801d146:	db02      	blt.n	801d14e <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x6e>
 801d148:	42bb      	cmp	r3, r7
 801d14a:	f2c0 8184 	blt.w	801d456 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x376>
 801d14e:	f11c 0c01 	adds.w	ip, ip, #1
 801d152:	f100 8172 	bmi.w	801d43a <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x35a>
 801d156:	4561      	cmp	r1, ip
 801d158:	f2c0 816f 	blt.w	801d43a <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x35a>
 801d15c:	3301      	adds	r3, #1
 801d15e:	f100 816c 	bmi.w	801d43a <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x35a>
 801d162:	429a      	cmp	r2, r3
 801d164:	f2c0 8169 	blt.w	801d43a <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x35a>
 801d168:	9b07      	ldr	r3, [sp, #28]
 801d16a:	9f0a      	ldr	r7, [sp, #40]	@ 0x28
 801d16c:	9317      	str	r3, [sp, #92]	@ 0x5c
 801d16e:	9b17      	ldr	r3, [sp, #92]	@ 0x5c
 801d170:	2b00      	cmp	r3, #0
 801d172:	f340 818e 	ble.w	801d492 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3b2>
 801d176:	9b25      	ldr	r3, [sp, #148]	@ 0x94
 801d178:	f3c3 3203 	ubfx	r2, r3, #12, #4
 801d17c:	9b2c      	ldr	r3, [sp, #176]	@ 0xb0
 801d17e:	e9d3 1e02 	ldrd	r1, lr, [r3, #8]
 801d182:	9b25      	ldr	r3, [sp, #148]	@ 0x94
 801d184:	141b      	asrs	r3, r3, #16
 801d186:	ea4f 4c25 	mov.w	ip, r5, asr #16
 801d18a:	f3c5 3003 	ubfx	r0, r5, #12, #4
 801d18e:	f100 81d1 	bmi.w	801d534 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x454>
 801d192:	f101 38ff 	add.w	r8, r1, #4294967295
 801d196:	4543      	cmp	r3, r8
 801d198:	f280 81cc 	bge.w	801d534 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x454>
 801d19c:	f1bc 0f00 	cmp.w	ip, #0
 801d1a0:	f2c0 81c8 	blt.w	801d534 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x454>
 801d1a4:	f10e 38ff 	add.w	r8, lr, #4294967295
 801d1a8:	45c4      	cmp	ip, r8
 801d1aa:	f280 81c3 	bge.w	801d534 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x454>
 801d1ae:	b209      	sxth	r1, r1
 801d1b0:	fb0c 3301 	mla	r3, ip, r1, r3
 801d1b4:	9c0f      	ldr	r4, [sp, #60]	@ 0x3c
 801d1b6:	eb04 0803 	add.w	r8, r4, r3
 801d1ba:	5ce3      	ldrb	r3, [r4, r3]
 801d1bc:	f856 3023 	ldr.w	r3, [r6, r3, lsl #2]
 801d1c0:	ea4f 6e13 	mov.w	lr, r3, lsr #24
 801d1c4:	2a00      	cmp	r2, #0
 801d1c6:	f000 81aa 	beq.w	801d51e <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x43e>
 801d1ca:	f898 c001 	ldrb.w	ip, [r8, #1]
 801d1ce:	f856 402c 	ldr.w	r4, [r6, ip, lsl #2]
 801d1d2:	940b      	str	r4, [sp, #44]	@ 0x2c
 801d1d4:	0e24      	lsrs	r4, r4, #24
 801d1d6:	9412      	str	r4, [sp, #72]	@ 0x48
 801d1d8:	b178      	cbz	r0, 801d1fa <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x11a>
 801d1da:	eb08 0c01 	add.w	ip, r8, r1
 801d1de:	f818 1001 	ldrb.w	r1, [r8, r1]
 801d1e2:	f856 1021 	ldr.w	r1, [r6, r1, lsl #2]
 801d1e6:	9108      	str	r1, [sp, #32]
 801d1e8:	0e09      	lsrs	r1, r1, #24
 801d1ea:	9110      	str	r1, [sp, #64]	@ 0x40
 801d1ec:	f89c 1001 	ldrb.w	r1, [ip, #1]
 801d1f0:	f856 1021 	ldr.w	r1, [r6, r1, lsl #2]
 801d1f4:	910c      	str	r1, [sp, #48]	@ 0x30
 801d1f6:	0e09      	lsrs	r1, r1, #24
 801d1f8:	9113      	str	r1, [sp, #76]	@ 0x4c
 801d1fa:	b292      	uxth	r2, r2
 801d1fc:	b280      	uxth	r0, r0
 801d1fe:	fb02 f900 	mul.w	r9, r2, r0
 801d202:	ebc9 1000 	rsb	r0, r9, r0, lsl #4
 801d206:	0112      	lsls	r2, r2, #4
 801d208:	eba2 0809 	sub.w	r8, r2, r9
 801d20c:	b280      	uxth	r0, r0
 801d20e:	f5c2 7280 	rsb	r2, r2, #256	@ 0x100
 801d212:	9912      	ldr	r1, [sp, #72]	@ 0x48
 801d214:	9c10      	ldr	r4, [sp, #64]	@ 0x40
 801d216:	fa1f f888 	uxth.w	r8, r8
 801d21a:	1a12      	subs	r2, r2, r0
 801d21c:	b292      	uxth	r2, r2
 801d21e:	fb08 f101 	mul.w	r1, r8, r1
 801d222:	fb02 110e 	mla	r1, r2, lr, r1
 801d226:	fb00 1104 	mla	r1, r0, r4, r1
 801d22a:	9c13      	ldr	r4, [sp, #76]	@ 0x4c
 801d22c:	fb09 1104 	mla	r1, r9, r4, r1
 801d230:	f3c1 2107 	ubfx	r1, r1, #8, #8
 801d234:	2900      	cmp	r1, #0
 801d236:	f000 80f5 	beq.w	801d424 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x344>
 801d23a:	f1be 0fff 	cmp.w	lr, #255	@ 0xff
 801d23e:	d01b      	beq.n	801d278 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x198>
 801d240:	f003 1aff 	and.w	sl, r3, #16711935	@ 0xff00ff
 801d244:	fb0e fa0a 	mul.w	sl, lr, sl
 801d248:	f403 437f 	and.w	r3, r3, #65280	@ 0xff00
 801d24c:	fb0e fe03 	mul.w	lr, lr, r3
 801d250:	ea4f 231a 	mov.w	r3, sl, lsr #8
 801d254:	f003 13ff 	and.w	r3, r3, #16711935	@ 0xff00ff
 801d258:	f10a 1a01 	add.w	sl, sl, #65537	@ 0x10001
 801d25c:	f50e 7c80 	add.w	ip, lr, #256	@ 0x100
 801d260:	4453      	add	r3, sl
 801d262:	eb0c 2c1e 	add.w	ip, ip, lr, lsr #8
 801d266:	0a1b      	lsrs	r3, r3, #8
 801d268:	ea4f 2c1c 	mov.w	ip, ip, lsr #8
 801d26c:	f003 13ff 	and.w	r3, r3, #16711935	@ 0xff00ff
 801d270:	f40c 4c7f 	and.w	ip, ip, #65280	@ 0xff00
 801d274:	ea43 030c 	orr.w	r3, r3, ip
 801d278:	9c12      	ldr	r4, [sp, #72]	@ 0x48
 801d27a:	2cff      	cmp	r4, #255	@ 0xff
 801d27c:	d021      	beq.n	801d2c2 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1e2>
 801d27e:	9c0b      	ldr	r4, [sp, #44]	@ 0x2c
 801d280:	f004 1bff 	and.w	fp, r4, #16711935	@ 0xff00ff
 801d284:	9c12      	ldr	r4, [sp, #72]	@ 0x48
 801d286:	fb04 fb0b 	mul.w	fp, r4, fp
 801d28a:	9c0b      	ldr	r4, [sp, #44]	@ 0x2c
 801d28c:	f404 4a7f 	and.w	sl, r4, #65280	@ 0xff00
 801d290:	9c12      	ldr	r4, [sp, #72]	@ 0x48
 801d292:	ea4f 2e1b 	mov.w	lr, fp, lsr #8
 801d296:	fb04 fa0a 	mul.w	sl, r4, sl
 801d29a:	f00e 1eff 	and.w	lr, lr, #16711935	@ 0xff00ff
 801d29e:	f10b 1b01 	add.w	fp, fp, #65537	@ 0x10001
 801d2a2:	f50a 7c80 	add.w	ip, sl, #256	@ 0x100
 801d2a6:	44de      	add	lr, fp
 801d2a8:	eb0c 2a1a 	add.w	sl, ip, sl, lsr #8
 801d2ac:	ea4f 2e1e 	mov.w	lr, lr, lsr #8
 801d2b0:	ea4f 2a1a 	mov.w	sl, sl, lsr #8
 801d2b4:	f00e 1eff 	and.w	lr, lr, #16711935	@ 0xff00ff
 801d2b8:	f40a 4a7f 	and.w	sl, sl, #65280	@ 0xff00
 801d2bc:	ea4e 040a 	orr.w	r4, lr, sl
 801d2c0:	940b      	str	r4, [sp, #44]	@ 0x2c
 801d2c2:	9c10      	ldr	r4, [sp, #64]	@ 0x40
 801d2c4:	2cff      	cmp	r4, #255	@ 0xff
 801d2c6:	d021      	beq.n	801d30c <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x22c>
 801d2c8:	9c08      	ldr	r4, [sp, #32]
 801d2ca:	f004 1bff 	and.w	fp, r4, #16711935	@ 0xff00ff
 801d2ce:	9c10      	ldr	r4, [sp, #64]	@ 0x40
 801d2d0:	fb04 fb0b 	mul.w	fp, r4, fp
 801d2d4:	9c08      	ldr	r4, [sp, #32]
 801d2d6:	f404 4a7f 	and.w	sl, r4, #65280	@ 0xff00
 801d2da:	9c10      	ldr	r4, [sp, #64]	@ 0x40
 801d2dc:	ea4f 2e1b 	mov.w	lr, fp, lsr #8
 801d2e0:	fb04 fa0a 	mul.w	sl, r4, sl
 801d2e4:	f00e 1eff 	and.w	lr, lr, #16711935	@ 0xff00ff
 801d2e8:	f10b 1b01 	add.w	fp, fp, #65537	@ 0x10001
 801d2ec:	f50a 7c80 	add.w	ip, sl, #256	@ 0x100
 801d2f0:	44de      	add	lr, fp
 801d2f2:	eb0c 2a1a 	add.w	sl, ip, sl, lsr #8
 801d2f6:	ea4f 2e1e 	mov.w	lr, lr, lsr #8
 801d2fa:	ea4f 2a1a 	mov.w	sl, sl, lsr #8
 801d2fe:	f00e 1eff 	and.w	lr, lr, #16711935	@ 0xff00ff
 801d302:	f40a 4a7f 	and.w	sl, sl, #65280	@ 0xff00
 801d306:	ea4e 040a 	orr.w	r4, lr, sl
 801d30a:	9408      	str	r4, [sp, #32]
 801d30c:	9c13      	ldr	r4, [sp, #76]	@ 0x4c
 801d30e:	2cff      	cmp	r4, #255	@ 0xff
 801d310:	d021      	beq.n	801d356 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x276>
 801d312:	9c0c      	ldr	r4, [sp, #48]	@ 0x30
 801d314:	f004 1bff 	and.w	fp, r4, #16711935	@ 0xff00ff
 801d318:	9c13      	ldr	r4, [sp, #76]	@ 0x4c
 801d31a:	fb04 fb0b 	mul.w	fp, r4, fp
 801d31e:	9c0c      	ldr	r4, [sp, #48]	@ 0x30
 801d320:	f404 4a7f 	and.w	sl, r4, #65280	@ 0xff00
 801d324:	9c13      	ldr	r4, [sp, #76]	@ 0x4c
 801d326:	ea4f 2e1b 	mov.w	lr, fp, lsr #8
 801d32a:	fb04 fa0a 	mul.w	sl, r4, sl
 801d32e:	f00e 1eff 	and.w	lr, lr, #16711935	@ 0xff00ff
 801d332:	f10b 1b01 	add.w	fp, fp, #65537	@ 0x10001
 801d336:	f50a 7c80 	add.w	ip, sl, #256	@ 0x100
 801d33a:	44de      	add	lr, fp
 801d33c:	eb0c 2a1a 	add.w	sl, ip, sl, lsr #8
 801d340:	ea4f 2e1e 	mov.w	lr, lr, lsr #8
 801d344:	ea4f 2a1a 	mov.w	sl, sl, lsr #8
 801d348:	f00e 1eff 	and.w	lr, lr, #16711935	@ 0xff00ff
 801d34c:	f40a 4a7f 	and.w	sl, sl, #65280	@ 0xff00
 801d350:	ea4e 040a 	orr.w	r4, lr, sl
 801d354:	940c      	str	r4, [sp, #48]	@ 0x30
 801d356:	9c0b      	ldr	r4, [sp, #44]	@ 0x2c
 801d358:	f004 1cff 	and.w	ip, r4, #16711935	@ 0xff00ff
 801d35c:	9c08      	ldr	r4, [sp, #32]
 801d35e:	f003 1eff 	and.w	lr, r3, #16711935	@ 0xff00ff
 801d362:	fb08 fc0c 	mul.w	ip, r8, ip
 801d366:	fb02 cc0e 	mla	ip, r2, lr, ip
 801d36a:	f004 1eff 	and.w	lr, r4, #16711935	@ 0xff00ff
 801d36e:	9c0c      	ldr	r4, [sp, #48]	@ 0x30
 801d370:	fb00 cc0e 	mla	ip, r0, lr, ip
 801d374:	f004 1eff 	and.w	lr, r4, #16711935	@ 0xff00ff
 801d378:	9c0b      	ldr	r4, [sp, #44]	@ 0x2c
 801d37a:	fb09 cc0e 	mla	ip, r9, lr, ip
 801d37e:	f404 4e7f 	and.w	lr, r4, #65280	@ 0xff00
 801d382:	fb08 f80e 	mul.w	r8, r8, lr
 801d386:	f403 437f 	and.w	r3, r3, #65280	@ 0xff00
 801d38a:	fb02 8303 	mla	r3, r2, r3, r8
 801d38e:	9a08      	ldr	r2, [sp, #32]
 801d390:	f8b7 8000 	ldrh.w	r8, [r7]
 801d394:	f402 4a7f 	and.w	sl, r2, #65280	@ 0xff00
 801d398:	9a0c      	ldr	r2, [sp, #48]	@ 0x30
 801d39a:	fb00 330a 	mla	r3, r0, sl, r3
 801d39e:	f402 407f 	and.w	r0, r2, #65280	@ 0xff00
 801d3a2:	fb09 3900 	mla	r9, r9, r0, r3
 801d3a6:	43c9      	mvns	r1, r1
 801d3a8:	ea4f 2228 	mov.w	r2, r8, asr #8
 801d3ac:	fa5f fe81 	uxtb.w	lr, r1
 801d3b0:	ea4f 2c1c 	mov.w	ip, ip, lsr #8
 801d3b4:	ea4f 2919 	mov.w	r9, r9, lsr #8
 801d3b8:	f002 02f8 	and.w	r2, r2, #248	@ 0xf8
 801d3bc:	fb02 f20e 	mul.w	r2, r2, lr
 801d3c0:	f00c 1cff 	and.w	ip, ip, #16711935	@ 0xff00ff
 801d3c4:	f409 497f 	and.w	r9, r9, #65280	@ 0xff00
 801d3c8:	ea4c 0c09 	orr.w	ip, ip, r9
 801d3cc:	1c53      	adds	r3, r2, #1
 801d3ce:	eb03 2212 	add.w	r2, r3, r2, lsr #8
 801d3d2:	ea4f 00e8 	mov.w	r0, r8, asr #3
 801d3d6:	ea4f 431c 	mov.w	r3, ip, lsr #16
 801d3da:	eb03 2312 	add.w	r3, r3, r2, lsr #8
 801d3de:	f000 00fc 	and.w	r0, r0, #252	@ 0xfc
 801d3e2:	4a63      	ldr	r2, [pc, #396]	@ (801d570 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x490>)
 801d3e4:	fb00 f00e 	mul.w	r0, r0, lr
 801d3e8:	b2db      	uxtb	r3, r3
 801d3ea:	ea02 2203 	and.w	r2, r2, r3, lsl #8
 801d3ee:	1c43      	adds	r3, r0, #1
 801d3f0:	eb03 2010 	add.w	r0, r3, r0, lsr #8
 801d3f4:	ea4f 231c 	mov.w	r3, ip, lsr #8
 801d3f8:	ea4f 01c8 	mov.w	r1, r8, lsl #3
 801d3fc:	eb03 2310 	add.w	r3, r3, r0, lsr #8
 801d400:	b2c9      	uxtb	r1, r1
 801d402:	00db      	lsls	r3, r3, #3
 801d404:	fb01 f10e 	mul.w	r1, r1, lr
 801d408:	f403 63fc 	and.w	r3, r3, #2016	@ 0x7e0
 801d40c:	4313      	orrs	r3, r2
 801d40e:	1c4a      	adds	r2, r1, #1
 801d410:	eb02 2111 	add.w	r1, r2, r1, lsr #8
 801d414:	eb0c 2c11 	add.w	ip, ip, r1, lsr #8
 801d418:	f3cc 0cc4 	ubfx	ip, ip, #3, #5
 801d41c:	ea4c 0c03 	orr.w	ip, ip, r3
 801d420:	f8a7 c000 	strh.w	ip, [r7]
 801d424:	9b27      	ldr	r3, [sp, #156]	@ 0x9c
 801d426:	9a25      	ldr	r2, [sp, #148]	@ 0x94
 801d428:	441a      	add	r2, r3
 801d42a:	9b28      	ldr	r3, [sp, #160]	@ 0xa0
 801d42c:	9225      	str	r2, [sp, #148]	@ 0x94
 801d42e:	441d      	add	r5, r3
 801d430:	9b17      	ldr	r3, [sp, #92]	@ 0x5c
 801d432:	3b01      	subs	r3, #1
 801d434:	3702      	adds	r7, #2
 801d436:	9317      	str	r3, [sp, #92]	@ 0x5c
 801d438:	e699      	b.n	801d16e <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x8e>
 801d43a:	9b27      	ldr	r3, [sp, #156]	@ 0x9c
 801d43c:	9c25      	ldr	r4, [sp, #148]	@ 0x94
 801d43e:	441c      	add	r4, r3
 801d440:	9b28      	ldr	r3, [sp, #160]	@ 0xa0
 801d442:	9425      	str	r4, [sp, #148]	@ 0x94
 801d444:	441d      	add	r5, r3
 801d446:	9b07      	ldr	r3, [sp, #28]
 801d448:	3b01      	subs	r3, #1
 801d44a:	9307      	str	r3, [sp, #28]
 801d44c:	9b0a      	ldr	r3, [sp, #40]	@ 0x28
 801d44e:	3302      	adds	r3, #2
 801d450:	930a      	str	r3, [sp, #40]	@ 0x28
 801d452:	e66b      	b.n	801d12c <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x4c>
 801d454:	d024      	beq.n	801d4a0 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3c0>
 801d456:	9b07      	ldr	r3, [sp, #28]
 801d458:	9827      	ldr	r0, [sp, #156]	@ 0x9c
 801d45a:	9c25      	ldr	r4, [sp, #148]	@ 0x94
 801d45c:	3b01      	subs	r3, #1
 801d45e:	fb00 4003 	mla	r0, r0, r3, r4
 801d462:	1400      	asrs	r0, r0, #16
 801d464:	f53f ae80 	bmi.w	801d168 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x88>
 801d468:	3901      	subs	r1, #1
 801d46a:	4288      	cmp	r0, r1
 801d46c:	f6bf ae7c 	bge.w	801d168 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x88>
 801d470:	9928      	ldr	r1, [sp, #160]	@ 0xa0
 801d472:	fb01 5303 	mla	r3, r1, r3, r5
 801d476:	141b      	asrs	r3, r3, #16
 801d478:	f53f ae76 	bmi.w	801d168 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x88>
 801d47c:	3a01      	subs	r2, #1
 801d47e:	4293      	cmp	r3, r2
 801d480:	f6bf ae72 	bge.w	801d168 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x88>
 801d484:	f8dd b01c 	ldr.w	fp, [sp, #28]
 801d488:	f8dd 9028 	ldr.w	r9, [sp, #40]	@ 0x28
 801d48c:	f1bb 0f00 	cmp.w	fp, #0
 801d490:	dc70      	bgt.n	801d574 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x494>
 801d492:	9b07      	ldr	r3, [sp, #28]
 801d494:	ea23 74e3 	bic.w	r4, r3, r3, asr #31
 801d498:	9b0a      	ldr	r3, [sp, #40]	@ 0x28
 801d49a:	eb03 0344 	add.w	r3, r3, r4, lsl #1
 801d49e:	930a      	str	r3, [sp, #40]	@ 0x28
 801d4a0:	9b16      	ldr	r3, [sp, #88]	@ 0x58
 801d4a2:	2b00      	cmp	r3, #0
 801d4a4:	f340 81ae 	ble.w	801d804 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x724>
 801d4a8:	ee30 0a04 	vadd.f32	s0, s0, s8
 801d4ac:	eeb7 7a00 	vmov.f32	s14, #112	@ 0x3f800000  1.0
 801d4b0:	eec7 7a00 	vdiv.f32	s15, s14, s0
 801d4b4:	9b24      	ldr	r3, [sp, #144]	@ 0x90
 801d4b6:	ee70 0aa4 	vadd.f32	s1, s1, s9
 801d4ba:	ee31 1a05 	vadd.f32	s2, s2, s10
 801d4be:	ee20 7aa7 	vmul.f32	s14, s1, s15
 801d4c2:	eef0 6a62 	vmov.f32	s13, s5
 801d4c6:	ee61 7a27 	vmul.f32	s15, s2, s15
 801d4ca:	eefe 6ac8 	vcvt.s32.f32	s13, s13, #16
 801d4ce:	ee77 2a62 	vsub.f32	s5, s14, s5
 801d4d2:	edcd 6a25 	vstr	s13, [sp, #148]	@ 0x94
 801d4d6:	eefe 2ac8 	vcvt.s32.f32	s5, s5, #16
 801d4da:	eef0 6a43 	vmov.f32	s13, s6
 801d4de:	ee37 3ac3 	vsub.f32	s6, s15, s6
 801d4e2:	ee12 2a90 	vmov	r2, s5
 801d4e6:	eebe 3ac8 	vcvt.s32.f32	s6, s6, #16
 801d4ea:	fb92 f3f3 	sdiv	r3, r2, r3
 801d4ee:	ee13 2a10 	vmov	r2, s6
 801d4f2:	9327      	str	r3, [sp, #156]	@ 0x9c
 801d4f4:	9b24      	ldr	r3, [sp, #144]	@ 0x90
 801d4f6:	fb92 f3f3 	sdiv	r3, r2, r3
 801d4fa:	9328      	str	r3, [sp, #160]	@ 0xa0
 801d4fc:	9b16      	ldr	r3, [sp, #88]	@ 0x58
 801d4fe:	9a18      	ldr	r2, [sp, #96]	@ 0x60
 801d500:	3b01      	subs	r3, #1
 801d502:	eefe 6ac8 	vcvt.s32.f32	s13, s13, #16
 801d506:	9316      	str	r3, [sp, #88]	@ 0x58
 801d508:	9b24      	ldr	r3, [sp, #144]	@ 0x90
 801d50a:	bf08      	it	eq
 801d50c:	4613      	moveq	r3, r2
 801d50e:	ee16 5a90 	vmov	r5, s13
 801d512:	9307      	str	r3, [sp, #28]
 801d514:	eeb0 3a67 	vmov.f32	s6, s15
 801d518:	eef0 2a47 	vmov.f32	s5, s14
 801d51c:	e5f8      	b.n	801d110 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x30>
 801d51e:	2800      	cmp	r0, #0
 801d520:	f43f ae6b 	beq.w	801d1fa <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x11a>
 801d524:	f818 1001 	ldrb.w	r1, [r8, r1]
 801d528:	f856 1021 	ldr.w	r1, [r6, r1, lsl #2]
 801d52c:	9108      	str	r1, [sp, #32]
 801d52e:	0e09      	lsrs	r1, r1, #24
 801d530:	9110      	str	r1, [sp, #64]	@ 0x40
 801d532:	e662      	b.n	801d1fa <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x11a>
 801d534:	f113 0801 	adds.w	r8, r3, #1
 801d538:	f53f af74 	bmi.w	801d424 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x344>
 801d53c:	4541      	cmp	r1, r8
 801d53e:	f6ff af71 	blt.w	801d424 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x344>
 801d542:	f11c 0801 	adds.w	r8, ip, #1
 801d546:	f53f af6d 	bmi.w	801d424 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x344>
 801d54a:	45c6      	cmp	lr, r8
 801d54c:	f6ff af6a 	blt.w	801d424 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x344>
 801d550:	e9cd 3c02 	strd	r3, ip, [sp, #8]
 801d554:	b209      	sxth	r1, r1
 801d556:	fa0f f38e 	sxth.w	r3, lr
 801d55a:	e9cd 2004 	strd	r2, r0, [sp, #16]
 801d55e:	9301      	str	r3, [sp, #4]
 801d560:	9100      	str	r1, [sp, #0]
 801d562:	4633      	mov	r3, r6
 801d564:	9a0f      	ldr	r2, [sp, #60]	@ 0x3c
 801d566:	9819      	ldr	r0, [sp, #100]	@ 0x64
 801d568:	4639      	mov	r1, r7
 801d56a:	f7ff fc7a 	bl	801ce62 <_ZNK8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKmssiihh>
 801d56e:	e759      	b.n	801d424 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x344>
 801d570:	fffff800 	.word	0xfffff800
 801d574:	9b25      	ldr	r3, [sp, #148]	@ 0x94
 801d576:	9c25      	ldr	r4, [sp, #148]	@ 0x94
 801d578:	f3c3 3203 	ubfx	r2, r3, #12, #4
 801d57c:	9b2c      	ldr	r3, [sp, #176]	@ 0xb0
 801d57e:	f9b3 1008 	ldrsh.w	r1, [r3, #8]
 801d582:	1427      	asrs	r7, r4, #16
 801d584:	142b      	asrs	r3, r5, #16
 801d586:	fb01 7303 	mla	r3, r1, r3, r7
 801d58a:	9c0f      	ldr	r4, [sp, #60]	@ 0x3c
 801d58c:	18e7      	adds	r7, r4, r3
 801d58e:	5ce3      	ldrb	r3, [r4, r3]
 801d590:	f856 3023 	ldr.w	r3, [r6, r3, lsl #2]
 801d594:	f3c5 3003 	ubfx	r0, r5, #12, #4
 801d598:	ea4f 6c13 	mov.w	ip, r3, lsr #24
 801d59c:	2a00      	cmp	r2, #0
 801d59e:	f000 8127 	beq.w	801d7f0 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x710>
 801d5a2:	f897 e001 	ldrb.w	lr, [r7, #1]
 801d5a6:	f856 402e 	ldr.w	r4, [r6, lr, lsl #2]
 801d5aa:	940d      	str	r4, [sp, #52]	@ 0x34
 801d5ac:	0e24      	lsrs	r4, r4, #24
 801d5ae:	9414      	str	r4, [sp, #80]	@ 0x50
 801d5b0:	b170      	cbz	r0, 801d5d0 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x4f0>
 801d5b2:	eb07 0e01 	add.w	lr, r7, r1
 801d5b6:	5c79      	ldrb	r1, [r7, r1]
 801d5b8:	f856 1021 	ldr.w	r1, [r6, r1, lsl #2]
 801d5bc:	9109      	str	r1, [sp, #36]	@ 0x24
 801d5be:	0e09      	lsrs	r1, r1, #24
 801d5c0:	9111      	str	r1, [sp, #68]	@ 0x44
 801d5c2:	f89e 1001 	ldrb.w	r1, [lr, #1]
 801d5c6:	f856 1021 	ldr.w	r1, [r6, r1, lsl #2]
 801d5ca:	910e      	str	r1, [sp, #56]	@ 0x38
 801d5cc:	0e09      	lsrs	r1, r1, #24
 801d5ce:	9115      	str	r1, [sp, #84]	@ 0x54
 801d5d0:	b292      	uxth	r2, r2
 801d5d2:	b280      	uxth	r0, r0
 801d5d4:	fb02 f800 	mul.w	r8, r2, r0
 801d5d8:	ebc8 1000 	rsb	r0, r8, r0, lsl #4
 801d5dc:	0112      	lsls	r2, r2, #4
 801d5de:	eba2 0e08 	sub.w	lr, r2, r8
 801d5e2:	b280      	uxth	r0, r0
 801d5e4:	f5c2 7180 	rsb	r1, r2, #256	@ 0x100
 801d5e8:	9a14      	ldr	r2, [sp, #80]	@ 0x50
 801d5ea:	9c11      	ldr	r4, [sp, #68]	@ 0x44
 801d5ec:	fa1f fe8e 	uxth.w	lr, lr
 801d5f0:	1a09      	subs	r1, r1, r0
 801d5f2:	b289      	uxth	r1, r1
 801d5f4:	fb0e f202 	mul.w	r2, lr, r2
 801d5f8:	fb01 220c 	mla	r2, r1, ip, r2
 801d5fc:	fb00 2204 	mla	r2, r0, r4, r2
 801d600:	9c15      	ldr	r4, [sp, #84]	@ 0x54
 801d602:	fb08 2204 	mla	r2, r8, r4, r2
 801d606:	f3c2 2207 	ubfx	r2, r2, #8, #8
 801d60a:	2a00      	cmp	r2, #0
 801d60c:	f000 80e5 	beq.w	801d7da <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x6fa>
 801d610:	f1bc 0fff 	cmp.w	ip, #255	@ 0xff
 801d614:	d019      	beq.n	801d64a <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x56a>
 801d616:	f003 1aff 	and.w	sl, r3, #16711935	@ 0xff00ff
 801d61a:	fb0c fa0a 	mul.w	sl, ip, sl
 801d61e:	f403 437f 	and.w	r3, r3, #65280	@ 0xff00
 801d622:	fb0c fc03 	mul.w	ip, ip, r3
 801d626:	ea4f 231a 	mov.w	r3, sl, lsr #8
 801d62a:	f003 13ff 	and.w	r3, r3, #16711935	@ 0xff00ff
 801d62e:	f10a 1a01 	add.w	sl, sl, #65537	@ 0x10001
 801d632:	f50c 7780 	add.w	r7, ip, #256	@ 0x100
 801d636:	4453      	add	r3, sl
 801d638:	eb07 271c 	add.w	r7, r7, ip, lsr #8
 801d63c:	0a1b      	lsrs	r3, r3, #8
 801d63e:	0a3f      	lsrs	r7, r7, #8
 801d640:	f003 13ff 	and.w	r3, r3, #16711935	@ 0xff00ff
 801d644:	f407 477f 	and.w	r7, r7, #65280	@ 0xff00
 801d648:	433b      	orrs	r3, r7
 801d64a:	9c14      	ldr	r4, [sp, #80]	@ 0x50
 801d64c:	2cff      	cmp	r4, #255	@ 0xff
 801d64e:	d020      	beq.n	801d692 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x5b2>
 801d650:	9c0d      	ldr	r4, [sp, #52]	@ 0x34
 801d652:	f004 17ff 	and.w	r7, r4, #16711935	@ 0xff00ff
 801d656:	9c14      	ldr	r4, [sp, #80]	@ 0x50
 801d658:	4367      	muls	r7, r4
 801d65a:	9c0d      	ldr	r4, [sp, #52]	@ 0x34
 801d65c:	f404 4a7f 	and.w	sl, r4, #65280	@ 0xff00
 801d660:	9c14      	ldr	r4, [sp, #80]	@ 0x50
 801d662:	ea4f 2c17 	mov.w	ip, r7, lsr #8
 801d666:	fb04 fa0a 	mul.w	sl, r4, sl
 801d66a:	f107 1701 	add.w	r7, r7, #65537	@ 0x10001
 801d66e:	f00c 1cff 	and.w	ip, ip, #16711935	@ 0xff00ff
 801d672:	44bc      	add	ip, r7
 801d674:	f50a 7780 	add.w	r7, sl, #256	@ 0x100
 801d678:	eb07 2a1a 	add.w	sl, r7, sl, lsr #8
 801d67c:	ea4f 2c1c 	mov.w	ip, ip, lsr #8
 801d680:	ea4f 2a1a 	mov.w	sl, sl, lsr #8
 801d684:	f00c 1cff 	and.w	ip, ip, #16711935	@ 0xff00ff
 801d688:	f40a 4a7f 	and.w	sl, sl, #65280	@ 0xff00
 801d68c:	ea4c 040a 	orr.w	r4, ip, sl
 801d690:	940d      	str	r4, [sp, #52]	@ 0x34
 801d692:	9c11      	ldr	r4, [sp, #68]	@ 0x44
 801d694:	2cff      	cmp	r4, #255	@ 0xff
 801d696:	d020      	beq.n	801d6da <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x5fa>
 801d698:	9c09      	ldr	r4, [sp, #36]	@ 0x24
 801d69a:	f004 17ff 	and.w	r7, r4, #16711935	@ 0xff00ff
 801d69e:	9c11      	ldr	r4, [sp, #68]	@ 0x44
 801d6a0:	4367      	muls	r7, r4
 801d6a2:	9c09      	ldr	r4, [sp, #36]	@ 0x24
 801d6a4:	f404 4a7f 	and.w	sl, r4, #65280	@ 0xff00
 801d6a8:	9c11      	ldr	r4, [sp, #68]	@ 0x44
 801d6aa:	ea4f 2c17 	mov.w	ip, r7, lsr #8
 801d6ae:	fb04 fa0a 	mul.w	sl, r4, sl
 801d6b2:	f107 1701 	add.w	r7, r7, #65537	@ 0x10001
 801d6b6:	f00c 1cff 	and.w	ip, ip, #16711935	@ 0xff00ff
 801d6ba:	44bc      	add	ip, r7
 801d6bc:	f50a 7780 	add.w	r7, sl, #256	@ 0x100
 801d6c0:	eb07 2a1a 	add.w	sl, r7, sl, lsr #8
 801d6c4:	ea4f 2c1c 	mov.w	ip, ip, lsr #8
 801d6c8:	ea4f 2a1a 	mov.w	sl, sl, lsr #8
 801d6cc:	f00c 1cff 	and.w	ip, ip, #16711935	@ 0xff00ff
 801d6d0:	f40a 4a7f 	and.w	sl, sl, #65280	@ 0xff00
 801d6d4:	ea4c 040a 	orr.w	r4, ip, sl
 801d6d8:	9409      	str	r4, [sp, #36]	@ 0x24
 801d6da:	9c15      	ldr	r4, [sp, #84]	@ 0x54
 801d6dc:	2cff      	cmp	r4, #255	@ 0xff
 801d6de:	d020      	beq.n	801d722 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x642>
 801d6e0:	9c0e      	ldr	r4, [sp, #56]	@ 0x38
 801d6e2:	f004 17ff 	and.w	r7, r4, #16711935	@ 0xff00ff
 801d6e6:	9c15      	ldr	r4, [sp, #84]	@ 0x54
 801d6e8:	4367      	muls	r7, r4
 801d6ea:	9c0e      	ldr	r4, [sp, #56]	@ 0x38
 801d6ec:	f404 4a7f 	and.w	sl, r4, #65280	@ 0xff00
 801d6f0:	9c15      	ldr	r4, [sp, #84]	@ 0x54
 801d6f2:	ea4f 2c17 	mov.w	ip, r7, lsr #8
 801d6f6:	fb04 fa0a 	mul.w	sl, r4, sl
 801d6fa:	f107 1701 	add.w	r7, r7, #65537	@ 0x10001
 801d6fe:	f00c 1cff 	and.w	ip, ip, #16711935	@ 0xff00ff
 801d702:	44bc      	add	ip, r7
 801d704:	f50a 7780 	add.w	r7, sl, #256	@ 0x100
 801d708:	eb07 2a1a 	add.w	sl, r7, sl, lsr #8
 801d70c:	ea4f 2c1c 	mov.w	ip, ip, lsr #8
 801d710:	ea4f 2a1a 	mov.w	sl, sl, lsr #8
 801d714:	f00c 1cff 	and.w	ip, ip, #16711935	@ 0xff00ff
 801d718:	f40a 4a7f 	and.w	sl, sl, #65280	@ 0xff00
 801d71c:	ea4c 040a 	orr.w	r4, ip, sl
 801d720:	940e      	str	r4, [sp, #56]	@ 0x38
 801d722:	9c0d      	ldr	r4, [sp, #52]	@ 0x34
 801d724:	f004 17ff 	and.w	r7, r4, #16711935	@ 0xff00ff
 801d728:	9c09      	ldr	r4, [sp, #36]	@ 0x24
 801d72a:	f003 1cff 	and.w	ip, r3, #16711935	@ 0xff00ff
 801d72e:	fb0e f707 	mul.w	r7, lr, r7
 801d732:	fb01 770c 	mla	r7, r1, ip, r7
 801d736:	f004 1cff 	and.w	ip, r4, #16711935	@ 0xff00ff
 801d73a:	9c0e      	ldr	r4, [sp, #56]	@ 0x38
 801d73c:	fb00 770c 	mla	r7, r0, ip, r7
 801d740:	f004 1cff 	and.w	ip, r4, #16711935	@ 0xff00ff
 801d744:	9c0d      	ldr	r4, [sp, #52]	@ 0x34
 801d746:	fb08 770c 	mla	r7, r8, ip, r7
 801d74a:	f404 4c7f 	and.w	ip, r4, #65280	@ 0xff00
 801d74e:	fb0e fe0c 	mul.w	lr, lr, ip
 801d752:	f403 437f 	and.w	r3, r3, #65280	@ 0xff00
 801d756:	fb01 e303 	mla	r3, r1, r3, lr
 801d75a:	9909      	ldr	r1, [sp, #36]	@ 0x24
 801d75c:	f401 4a7f 	and.w	sl, r1, #65280	@ 0xff00
 801d760:	990e      	ldr	r1, [sp, #56]	@ 0x38
 801d762:	fb00 330a 	mla	r3, r0, sl, r3
 801d766:	f401 4c7f 	and.w	ip, r1, #65280	@ 0xff00
 801d76a:	fb08 3c0c 	mla	ip, r8, ip, r3
 801d76e:	f8b9 3000 	ldrh.w	r3, [r9]
 801d772:	43d2      	mvns	r2, r2
 801d774:	1218      	asrs	r0, r3, #8
 801d776:	b2d2      	uxtb	r2, r2
 801d778:	10d9      	asrs	r1, r3, #3
 801d77a:	0a3f      	lsrs	r7, r7, #8
 801d77c:	ea4f 2c1c 	mov.w	ip, ip, lsr #8
 801d780:	f000 00f8 	and.w	r0, r0, #248	@ 0xf8
 801d784:	00db      	lsls	r3, r3, #3
 801d786:	4350      	muls	r0, r2
 801d788:	f007 17ff 	and.w	r7, r7, #16711935	@ 0xff00ff
 801d78c:	f40c 4c7f 	and.w	ip, ip, #65280	@ 0xff00
 801d790:	f001 01fc 	and.w	r1, r1, #252	@ 0xfc
 801d794:	b2db      	uxtb	r3, r3
 801d796:	ea47 070c 	orr.w	r7, r7, ip
 801d79a:	4351      	muls	r1, r2
 801d79c:	4353      	muls	r3, r2
 801d79e:	1c42      	adds	r2, r0, #1
 801d7a0:	eb02 2010 	add.w	r0, r2, r0, lsr #8
 801d7a4:	0c3a      	lsrs	r2, r7, #16
 801d7a6:	eb02 2010 	add.w	r0, r2, r0, lsr #8
 801d7aa:	4a18      	ldr	r2, [pc, #96]	@ (801d80c <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x72c>)
 801d7ac:	b2c0      	uxtb	r0, r0
 801d7ae:	ea02 2000 	and.w	r0, r2, r0, lsl #8
 801d7b2:	1c4a      	adds	r2, r1, #1
 801d7b4:	eb02 2111 	add.w	r1, r2, r1, lsr #8
 801d7b8:	0a3a      	lsrs	r2, r7, #8
 801d7ba:	eb02 2111 	add.w	r1, r2, r1, lsr #8
 801d7be:	00c9      	lsls	r1, r1, #3
 801d7c0:	f401 61fc 	and.w	r1, r1, #2016	@ 0x7e0
 801d7c4:	4301      	orrs	r1, r0
 801d7c6:	1c58      	adds	r0, r3, #1
 801d7c8:	eb00 2013 	add.w	r0, r0, r3, lsr #8
 801d7cc:	eb07 2710 	add.w	r7, r7, r0, lsr #8
 801d7d0:	f3c7 00c4 	ubfx	r0, r7, #3, #5
 801d7d4:	4308      	orrs	r0, r1
 801d7d6:	f8a9 0000 	strh.w	r0, [r9]
 801d7da:	9b27      	ldr	r3, [sp, #156]	@ 0x9c
 801d7dc:	9a25      	ldr	r2, [sp, #148]	@ 0x94
 801d7de:	441a      	add	r2, r3
 801d7e0:	9b28      	ldr	r3, [sp, #160]	@ 0xa0
 801d7e2:	9225      	str	r2, [sp, #148]	@ 0x94
 801d7e4:	f109 0902 	add.w	r9, r9, #2
 801d7e8:	441d      	add	r5, r3
 801d7ea:	f10b 3bff 	add.w	fp, fp, #4294967295
 801d7ee:	e64d      	b.n	801d48c <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3ac>
 801d7f0:	2800      	cmp	r0, #0
 801d7f2:	f43f aeed 	beq.w	801d5d0 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x4f0>
 801d7f6:	5c79      	ldrb	r1, [r7, r1]
 801d7f8:	f856 1021 	ldr.w	r1, [r6, r1, lsl #2]
 801d7fc:	9109      	str	r1, [sp, #36]	@ 0x24
 801d7fe:	0e09      	lsrs	r1, r1, #24
 801d800:	9111      	str	r1, [sp, #68]	@ 0x44
 801d802:	e6e5      	b.n	801d5d0 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x4f0>
 801d804:	b01b      	add	sp, #108	@ 0x6c
 801d806:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 801d80a:	bf00      	nop
 801d80c:	fffff800 	.word	0xfffff800

0801d810 <_ZNK8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtPKhssiihhh>:
 801d810:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 801d814:	b085      	sub	sp, #20
 801d816:	e9dd 7010 	ldrd	r7, r0, [sp, #64]	@ 0x40
 801d81a:	f9bd 6038 	ldrsh.w	r6, [sp, #56]	@ 0x38
 801d81e:	9103      	str	r1, [sp, #12]
 801d820:	fb00 7406 	mla	r4, r0, r6, r7
 801d824:	eb02 0544 	add.w	r5, r2, r4, lsl #1
 801d828:	2800      	cmp	r0, #0
 801d82a:	f9bd b03c 	ldrsh.w	fp, [sp, #60]	@ 0x3c
 801d82e:	f89d 1048 	ldrb.w	r1, [sp, #72]	@ 0x48
 801d832:	f89d e04c 	ldrb.w	lr, [sp, #76]	@ 0x4c
 801d836:	9501      	str	r5, [sp, #4]
 801d838:	eb03 0904 	add.w	r9, r3, r4
 801d83c:	f2c0 8150 	blt.w	801dae0 <_ZNK8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtPKhssiihhh+0x2d0>
 801d840:	4583      	cmp	fp, r0
 801d842:	f340 814d 	ble.w	801dae0 <_ZNK8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtPKhssiihhh+0x2d0>
 801d846:	2f00      	cmp	r7, #0
 801d848:	f2c0 8146 	blt.w	801dad8 <_ZNK8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtPKhssiihhh+0x2c8>
 801d84c:	42be      	cmp	r6, r7
 801d84e:	f340 8143 	ble.w	801dad8 <_ZNK8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtPKhssiihhh+0x2c8>
 801d852:	f813 c004 	ldrb.w	ip, [r3, r4]
 801d856:	f832 3014 	ldrh.w	r3, [r2, r4, lsl #1]
 801d85a:	ea4f 02ec 	mov.w	r2, ip, asr #3
 801d85e:	f423 65fc 	bic.w	r5, r3, #2016	@ 0x7e0
 801d862:	4355      	muls	r5, r2
 801d864:	f403 63fc 	and.w	r3, r3, #2016	@ 0x7e0
 801d868:	f64f 041f 	movw	r4, #63519	@ 0xf81f
 801d86c:	fb0c f203 	mul.w	r2, ip, r3
 801d870:	ea04 1355 	and.w	r3, r4, r5, lsr #5
 801d874:	f605 0501 	addw	r5, r5, #2049	@ 0x801
 801d878:	441d      	add	r5, r3
 801d87a:	f102 0320 	add.w	r3, r2, #32
 801d87e:	eb03 2312 	add.w	r3, r3, r2, lsr #8
 801d882:	0a1b      	lsrs	r3, r3, #8
 801d884:	ea04 1455 	and.w	r4, r4, r5, lsr #5
 801d888:	f403 63fc 	and.w	r3, r3, #2016	@ 0x7e0
 801d88c:	431c      	orrs	r4, r3
 801d88e:	1c7b      	adds	r3, r7, #1
 801d890:	f100 812b 	bmi.w	801daea <_ZNK8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtPKhssiihhh+0x2da>
 801d894:	429e      	cmp	r6, r3
 801d896:	f340 8128 	ble.w	801daea <_ZNK8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtPKhssiihhh+0x2da>
 801d89a:	2900      	cmp	r1, #0
 801d89c:	f000 8128 	beq.w	801daf0 <_ZNK8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtPKhssiihhh+0x2e0>
 801d8a0:	9a01      	ldr	r2, [sp, #4]
 801d8a2:	f899 3001 	ldrb.w	r3, [r9, #1]
 801d8a6:	8855      	ldrh	r5, [r2, #2]
 801d8a8:	ea4f 08e3 	mov.w	r8, r3, asr #3
 801d8ac:	f425 62fc 	bic.w	r2, r5, #2016	@ 0x7e0
 801d8b0:	fb08 f802 	mul.w	r8, r8, r2
 801d8b4:	f405 65fc 	and.w	r5, r5, #2016	@ 0x7e0
 801d8b8:	f64f 021f 	movw	r2, #63519	@ 0xf81f
 801d8bc:	ea02 1a58 	and.w	sl, r2, r8, lsr #5
 801d8c0:	435d      	muls	r5, r3
 801d8c2:	f608 0801 	addw	r8, r8, #2049	@ 0x801
 801d8c6:	44d0      	add	r8, sl
 801d8c8:	f105 0a20 	add.w	sl, r5, #32
 801d8cc:	eb0a 2515 	add.w	r5, sl, r5, lsr #8
 801d8d0:	0a2d      	lsrs	r5, r5, #8
 801d8d2:	ea02 1258 	and.w	r2, r2, r8, lsr #5
 801d8d6:	f405 65fc 	and.w	r5, r5, #2016	@ 0x7e0
 801d8da:	432a      	orrs	r2, r5
 801d8dc:	3001      	adds	r0, #1
 801d8de:	f100 810d 	bmi.w	801dafc <_ZNK8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtPKhssiihhh+0x2ec>
 801d8e2:	4583      	cmp	fp, r0
 801d8e4:	f340 810a 	ble.w	801dafc <_ZNK8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtPKhssiihhh+0x2ec>
 801d8e8:	f1be 0f00 	cmp.w	lr, #0
 801d8ec:	f000 810b 	beq.w	801db06 <_ZNK8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtPKhssiihhh+0x2f6>
 801d8f0:	2f00      	cmp	r7, #0
 801d8f2:	f2c0 8100 	blt.w	801daf6 <_ZNK8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtPKhssiihhh+0x2e6>
 801d8f6:	42be      	cmp	r6, r7
 801d8f8:	f340 80fd 	ble.w	801daf6 <_ZNK8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtPKhssiihhh+0x2e6>
 801d8fc:	9801      	ldr	r0, [sp, #4]
 801d8fe:	f819 5006 	ldrb.w	r5, [r9, r6]
 801d902:	f830 8016 	ldrh.w	r8, [r0, r6, lsl #1]
 801d906:	ea4f 0ae5 	mov.w	sl, r5, asr #3
 801d90a:	f428 60fc 	bic.w	r0, r8, #2016	@ 0x7e0
 801d90e:	fb0a fa00 	mul.w	sl, sl, r0
 801d912:	f64f 0b1f 	movw	fp, #63519	@ 0xf81f
 801d916:	f408 68fc 	and.w	r8, r8, #2016	@ 0x7e0
 801d91a:	ea0b 105a 	and.w	r0, fp, sl, lsr #5
 801d91e:	fb05 f808 	mul.w	r8, r5, r8
 801d922:	f60a 0a01 	addw	sl, sl, #2049	@ 0x801
 801d926:	4482      	add	sl, r0
 801d928:	f108 0020 	add.w	r0, r8, #32
 801d92c:	eb00 2018 	add.w	r0, r0, r8, lsr #8
 801d930:	0a00      	lsrs	r0, r0, #8
 801d932:	ea0b 1b5a 	and.w	fp, fp, sl, lsr #5
 801d936:	f400 60fc 	and.w	r0, r0, #2016	@ 0x7e0
 801d93a:	ea4b 0b00 	orr.w	fp, fp, r0
 801d93e:	3701      	adds	r7, #1
 801d940:	f100 80e6 	bmi.w	801db10 <_ZNK8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtPKhssiihhh+0x300>
 801d944:	42be      	cmp	r6, r7
 801d946:	f340 80e3 	ble.w	801db10 <_ZNK8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtPKhssiihhh+0x300>
 801d94a:	2900      	cmp	r1, #0
 801d94c:	f000 80e3 	beq.w	801db16 <_ZNK8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtPKhssiihhh+0x306>
 801d950:	3601      	adds	r6, #1
 801d952:	9801      	ldr	r0, [sp, #4]
 801d954:	f819 7006 	ldrb.w	r7, [r9, r6]
 801d958:	f830 0016 	ldrh.w	r0, [r0, r6, lsl #1]
 801d95c:	ea4f 09e7 	mov.w	r9, r7, asr #3
 801d960:	f420 66fc 	bic.w	r6, r0, #2016	@ 0x7e0
 801d964:	f400 60fc 	and.w	r0, r0, #2016	@ 0x7e0
 801d968:	fb09 f906 	mul.w	r9, r9, r6
 801d96c:	fb07 f800 	mul.w	r8, r7, r0
 801d970:	f64f 001f 	movw	r0, #63519	@ 0xf81f
 801d974:	ea00 1a59 	and.w	sl, r0, r9, lsr #5
 801d978:	f609 0901 	addw	r9, r9, #2049	@ 0x801
 801d97c:	44d1      	add	r9, sl
 801d97e:	ea00 1659 	and.w	r6, r0, r9, lsr #5
 801d982:	f108 0020 	add.w	r0, r8, #32
 801d986:	eb00 2018 	add.w	r0, r0, r8, lsr #8
 801d98a:	0a00      	lsrs	r0, r0, #8
 801d98c:	f400 60fc 	and.w	r0, r0, #2016	@ 0x7e0
 801d990:	4330      	orrs	r0, r6
 801d992:	b28e      	uxth	r6, r1
 801d994:	fa1f f98e 	uxth.w	r9, lr
 801d998:	fb06 f809 	mul.w	r8, r6, r9
 801d99c:	ea4f 4a04 	mov.w	sl, r4, lsl #16
 801d9a0:	ebc8 1909 	rsb	r9, r8, r9, lsl #4
 801d9a4:	0136      	lsls	r6, r6, #4
 801d9a6:	f00a 6afc 	and.w	sl, sl, #132120576	@ 0x7e00000
 801d9aa:	f424 64fc 	bic.w	r4, r4, #2016	@ 0x7e0
 801d9ae:	9601      	str	r6, [sp, #4]
 801d9b0:	ea4a 0404 	orr.w	r4, sl, r4
 801d9b4:	fa1f f689 	uxth.w	r6, r9
 801d9b8:	ea4f 4a02 	mov.w	sl, r2, lsl #16
 801d9bc:	fb11 f90e 	smulbb	r9, r1, lr
 801d9c0:	f3c9 09c7 	ubfx	r9, r9, #3, #8
 801d9c4:	9602      	str	r6, [sp, #8]
 801d9c6:	f00a 6afc 	and.w	sl, sl, #132120576	@ 0x7e00000
 801d9ca:	4626      	mov	r6, r4
 801d9cc:	f422 62fc 	bic.w	r2, r2, #2016	@ 0x7e0
 801d9d0:	f1ce 0410 	rsb	r4, lr, #16
 801d9d4:	1a64      	subs	r4, r4, r1
 801d9d6:	ea4a 0202 	orr.w	r2, sl, r2
 801d9da:	ebc9 0141 	rsb	r1, r9, r1, lsl #1
 801d9de:	ea4f 4a00 	mov.w	sl, r0, lsl #16
 801d9e2:	434a      	muls	r2, r1
 801d9e4:	eb09 0444 	add.w	r4, r9, r4, lsl #1
 801d9e8:	f00a 6afc 	and.w	sl, sl, #132120576	@ 0x7e00000
 801d9ec:	f420 60fc 	bic.w	r0, r0, #2016	@ 0x7e0
 801d9f0:	fb04 2406 	mla	r4, r4, r6, r2
 801d9f4:	ea4a 0000 	orr.w	r0, sl, r0
 801d9f8:	fb09 4200 	mla	r2, r9, r0, r4
 801d9fc:	ea4f 440b 	mov.w	r4, fp, lsl #16
 801da00:	f004 64fc 	and.w	r4, r4, #132120576	@ 0x7e00000
 801da04:	f42b 6bfc 	bic.w	fp, fp, #2016	@ 0x7e0
 801da08:	ea44 0b0b 	orr.w	fp, r4, fp
 801da0c:	9c01      	ldr	r4, [sp, #4]
 801da0e:	9e02      	ldr	r6, [sp, #8]
 801da10:	9903      	ldr	r1, [sp, #12]
 801da12:	f5c4 7480 	rsb	r4, r4, #256	@ 0x100
 801da16:	1ba4      	subs	r4, r4, r6
 801da18:	9e01      	ldr	r6, [sp, #4]
 801da1a:	8808      	ldrh	r0, [r1, #0]
 801da1c:	f89d 1050 	ldrb.w	r1, [sp, #80]	@ 0x50
 801da20:	eba6 0608 	sub.w	r6, r6, r8
 801da24:	b2b6      	uxth	r6, r6
 801da26:	b2a4      	uxth	r4, r4
 801da28:	4373      	muls	r3, r6
 801da2a:	fb0c 3304 	mla	r3, ip, r4, r3
 801da2e:	9c02      	ldr	r4, [sp, #8]
 801da30:	fb04 3505 	mla	r5, r4, r5, r3
 801da34:	fb08 5707 	mla	r7, r8, r7, r5
 801da38:	ebc9 0e4e 	rsb	lr, r9, lr, lsl #1
 801da3c:	b289      	uxth	r1, r1
 801da3e:	fb0e 2e0b 	mla	lr, lr, fp, r2
 801da42:	f3c7 2707 	ubfx	r7, r7, #8, #8
 801da46:	434f      	muls	r7, r1
 801da48:	ea4f 525e 	mov.w	r2, lr, lsr #21
 801da4c:	ea4f 1e5e 	mov.w	lr, lr, lsr #5
 801da50:	f402 62fc 	and.w	r2, r2, #2016	@ 0x7e0
 801da54:	1c7b      	adds	r3, r7, #1
 801da56:	f42e 6efc 	bic.w	lr, lr, #2016	@ 0x7e0
 801da5a:	ea42 0e0e 	orr.w	lr, r2, lr
 801da5e:	eb03 2717 	add.w	r7, r3, r7, lsr #8
 801da62:	fa1f f28e 	uxth.w	r2, lr
 801da66:	1203      	asrs	r3, r0, #8
 801da68:	ea6f 2717 	mvn.w	r7, r7, lsr #8
 801da6c:	b2ff      	uxtb	r7, r7
 801da6e:	1215      	asrs	r5, r2, #8
 801da70:	f003 03f8 	and.w	r3, r3, #248	@ 0xf8
 801da74:	fb13 f307 	smulbb	r3, r3, r7
 801da78:	f005 05f8 	and.w	r5, r5, #248	@ 0xf8
 801da7c:	fb05 3501 	mla	r5, r5, r1, r3
 801da80:	10c3      	asrs	r3, r0, #3
 801da82:	10d4      	asrs	r4, r2, #3
 801da84:	f003 03fc 	and.w	r3, r3, #252	@ 0xfc
 801da88:	fb13 f307 	smulbb	r3, r3, r7
 801da8c:	f004 04fc 	and.w	r4, r4, #252	@ 0xfc
 801da90:	fb04 3401 	mla	r4, r4, r1, r3
 801da94:	00c3      	lsls	r3, r0, #3
 801da96:	00d2      	lsls	r2, r2, #3
 801da98:	b2db      	uxtb	r3, r3
 801da9a:	fb13 f307 	smulbb	r3, r3, r7
 801da9e:	b2d2      	uxtb	r2, r2
 801daa0:	fb02 3101 	mla	r1, r2, r1, r3
 801daa4:	b2ad      	uxth	r5, r5
 801daa6:	b289      	uxth	r1, r1
 801daa8:	b2a4      	uxth	r4, r4
 801daaa:	1c6b      	adds	r3, r5, #1
 801daac:	eb03 2515 	add.w	r5, r3, r5, lsr #8
 801dab0:	1c62      	adds	r2, r4, #1
 801dab2:	1c4b      	adds	r3, r1, #1
 801dab4:	eb03 2311 	add.w	r3, r3, r1, lsr #8
 801dab8:	eb02 2414 	add.w	r4, r2, r4, lsr #8
 801dabc:	f405 4578 	and.w	r5, r5, #63488	@ 0xf800
 801dac0:	f3c3 23c4 	ubfx	r3, r3, #11, #5
 801dac4:	0964      	lsrs	r4, r4, #5
 801dac6:	432b      	orrs	r3, r5
 801dac8:	f404 64fc 	and.w	r4, r4, #2016	@ 0x7e0
 801dacc:	9a03      	ldr	r2, [sp, #12]
 801dace:	4323      	orrs	r3, r4
 801dad0:	8013      	strh	r3, [r2, #0]
 801dad2:	b005      	add	sp, #20
 801dad4:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 801dad8:	f04f 0c00 	mov.w	ip, #0
 801dadc:	4664      	mov	r4, ip
 801dade:	e6d6      	b.n	801d88e <_ZNK8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtPKhssiihhh+0x7e>
 801dae0:	2300      	movs	r3, #0
 801dae2:	469c      	mov	ip, r3
 801dae4:	461a      	mov	r2, r3
 801dae6:	461c      	mov	r4, r3
 801dae8:	e6f8      	b.n	801d8dc <_ZNK8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtPKhssiihhh+0xcc>
 801daea:	2300      	movs	r3, #0
 801daec:	461a      	mov	r2, r3
 801daee:	e6f5      	b.n	801d8dc <_ZNK8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtPKhssiihhh+0xcc>
 801daf0:	460b      	mov	r3, r1
 801daf2:	460a      	mov	r2, r1
 801daf4:	e6f2      	b.n	801d8dc <_ZNK8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtPKhssiihhh+0xcc>
 801daf6:	2500      	movs	r5, #0
 801daf8:	46ab      	mov	fp, r5
 801dafa:	e720      	b.n	801d93e <_ZNK8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtPKhssiihhh+0x12e>
 801dafc:	2700      	movs	r7, #0
 801dafe:	463d      	mov	r5, r7
 801db00:	4638      	mov	r0, r7
 801db02:	46bb      	mov	fp, r7
 801db04:	e745      	b.n	801d992 <_ZNK8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtPKhssiihhh+0x182>
 801db06:	4677      	mov	r7, lr
 801db08:	4675      	mov	r5, lr
 801db0a:	4670      	mov	r0, lr
 801db0c:	46f3      	mov	fp, lr
 801db0e:	e740      	b.n	801d992 <_ZNK8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtPKhssiihhh+0x182>
 801db10:	2700      	movs	r7, #0
 801db12:	4638      	mov	r0, r7
 801db14:	e73d      	b.n	801d992 <_ZNK8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtPKhssiihhh+0x182>
 801db16:	460f      	mov	r7, r1
 801db18:	4608      	mov	r0, r1
 801db1a:	e73a      	b.n	801d992 <_ZNK8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtPKhssiihhh+0x182>

0801db1c <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff>:
 801db1c:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 801db20:	b097      	sub	sp, #92	@ 0x5c
 801db22:	9214      	str	r2, [sp, #80]	@ 0x50
 801db24:	9308      	str	r3, [sp, #32]
 801db26:	9a25      	ldr	r2, [sp, #148]	@ 0x94
 801db28:	f89d 30a4 	ldrb.w	r3, [sp, #164]	@ 0xa4
 801db2c:	9312      	str	r3, [sp, #72]	@ 0x48
 801db2e:	9111      	str	r1, [sp, #68]	@ 0x44
 801db30:	e9dd 1326 	ldrd	r1, r3, [sp, #152]	@ 0x98
 801db34:	9015      	str	r0, [sp, #84]	@ 0x54
 801db36:	6850      	ldr	r0, [r2, #4]
 801db38:	6812      	ldr	r2, [r2, #0]
 801db3a:	fb00 1303 	mla	r3, r0, r3, r1
 801db3e:	eb02 0343 	add.w	r3, r2, r3, lsl #1
 801db42:	9309      	str	r3, [sp, #36]	@ 0x24
 801db44:	9b28      	ldr	r3, [sp, #160]	@ 0xa0
 801db46:	681b      	ldr	r3, [r3, #0]
 801db48:	930b      	str	r3, [sp, #44]	@ 0x2c
 801db4a:	9b28      	ldr	r3, [sp, #160]	@ 0xa0
 801db4c:	685b      	ldr	r3, [r3, #4]
 801db4e:	930c      	str	r3, [sp, #48]	@ 0x30
 801db50:	f8bd 3048 	ldrh.w	r3, [sp, #72]	@ 0x48
 801db54:	930a      	str	r3, [sp, #40]	@ 0x28
 801db56:	9b11      	ldr	r3, [sp, #68]	@ 0x44
 801db58:	2b00      	cmp	r3, #0
 801db5a:	dc03      	bgt.n	801db64 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x48>
 801db5c:	9b14      	ldr	r3, [sp, #80]	@ 0x50
 801db5e:	2b00      	cmp	r3, #0
 801db60:	f340 83cb 	ble.w	801e2fa <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x7de>
 801db64:	9b28      	ldr	r3, [sp, #160]	@ 0xa0
 801db66:	f9b3 1008 	ldrsh.w	r1, [r3, #8]
 801db6a:	f9b3 200c 	ldrsh.w	r2, [r3, #12]
 801db6e:	1e48      	subs	r0, r1, #1
 801db70:	1e55      	subs	r5, r2, #1
 801db72:	9b08      	ldr	r3, [sp, #32]
 801db74:	2b00      	cmp	r3, #0
 801db76:	f340 81a3 	ble.w	801dec0 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3a4>
 801db7a:	9e21      	ldr	r6, [sp, #132]	@ 0x84
 801db7c:	9b22      	ldr	r3, [sp, #136]	@ 0x88
 801db7e:	1436      	asrs	r6, r6, #16
 801db80:	ea4f 4323 	mov.w	r3, r3, asr #16
 801db84:	d406      	bmi.n	801db94 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x78>
 801db86:	4286      	cmp	r6, r0
 801db88:	da04      	bge.n	801db94 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x78>
 801db8a:	2b00      	cmp	r3, #0
 801db8c:	db02      	blt.n	801db94 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x78>
 801db8e:	42ab      	cmp	r3, r5
 801db90:	f2c0 8197 	blt.w	801dec2 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3a6>
 801db94:	3601      	adds	r6, #1
 801db96:	f100 8184 	bmi.w	801dea2 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x386>
 801db9a:	42b1      	cmp	r1, r6
 801db9c:	f2c0 8181 	blt.w	801dea2 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x386>
 801dba0:	3301      	adds	r3, #1
 801dba2:	f100 817e 	bmi.w	801dea2 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x386>
 801dba6:	429a      	cmp	r2, r3
 801dba8:	f2c0 817b 	blt.w	801dea2 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x386>
 801dbac:	9b08      	ldr	r3, [sp, #32]
 801dbae:	9f09      	ldr	r7, [sp, #36]	@ 0x24
 801dbb0:	9313      	str	r3, [sp, #76]	@ 0x4c
 801dbb2:	f64f 061f 	movw	r6, #63519	@ 0xf81f
 801dbb6:	9b13      	ldr	r3, [sp, #76]	@ 0x4c
 801dbb8:	2b00      	cmp	r3, #0
 801dbba:	f340 81a4 	ble.w	801df06 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3ea>
 801dbbe:	9b22      	ldr	r3, [sp, #136]	@ 0x88
 801dbc0:	9d21      	ldr	r5, [sp, #132]	@ 0x84
 801dbc2:	1418      	asrs	r0, r3, #16
 801dbc4:	9b21      	ldr	r3, [sp, #132]	@ 0x84
 801dbc6:	f3c3 3103 	ubfx	r1, r3, #12, #4
 801dbca:	9b22      	ldr	r3, [sp, #136]	@ 0x88
 801dbcc:	f3c3 3c03 	ubfx	ip, r3, #12, #4
 801dbd0:	9b28      	ldr	r3, [sp, #160]	@ 0xa0
 801dbd2:	142d      	asrs	r5, r5, #16
 801dbd4:	e9d3 2302 	ldrd	r2, r3, [r3, #8]
 801dbd8:	f100 81f8 	bmi.w	801dfcc <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x4b0>
 801dbdc:	f102 3eff 	add.w	lr, r2, #4294967295
 801dbe0:	4575      	cmp	r5, lr
 801dbe2:	f280 81f3 	bge.w	801dfcc <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x4b0>
 801dbe6:	2800      	cmp	r0, #0
 801dbe8:	f2c0 81f0 	blt.w	801dfcc <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x4b0>
 801dbec:	f103 3eff 	add.w	lr, r3, #4294967295
 801dbf0:	4570      	cmp	r0, lr
 801dbf2:	f280 81eb 	bge.w	801dfcc <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x4b0>
 801dbf6:	9b0c      	ldr	r3, [sp, #48]	@ 0x30
 801dbf8:	b212      	sxth	r2, r2
 801dbfa:	fb00 5002 	mla	r0, r0, r2, r5
 801dbfe:	fa1f fe81 	uxth.w	lr, r1
 801dc02:	eb03 0a00 	add.w	sl, r3, r0
 801dc06:	ea4f 150e 	mov.w	r5, lr, lsl #4
 801dc0a:	f813 9000 	ldrb.w	r9, [r3, r0]
 801dc0e:	f89a 8001 	ldrb.w	r8, [sl, #1]
 801dc12:	f5c5 7380 	rsb	r3, r5, #256	@ 0x100
 801dc16:	b29b      	uxth	r3, r3
 801dc18:	f1bc 0f00 	cmp.w	ip, #0
 801dc1c:	f000 81b9 	beq.w	801df92 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x476>
 801dc20:	f81a 4002 	ldrb.w	r4, [sl, r2]
 801dc24:	940d      	str	r4, [sp, #52]	@ 0x34
 801dc26:	eb0a 0b02 	add.w	fp, sl, r2
 801dc2a:	fa1f fa8c 	uxth.w	sl, ip
 801dc2e:	fb0a fe0e 	mul.w	lr, sl, lr
 801dc32:	ebce 1a0a 	rsb	sl, lr, sl, lsl #4
 801dc36:	fa1f fa8a 	uxth.w	sl, sl
 801dc3a:	eba5 050e 	sub.w	r5, r5, lr
 801dc3e:	f89b 4001 	ldrb.w	r4, [fp, #1]
 801dc42:	940e      	str	r4, [sp, #56]	@ 0x38
 801dc44:	eba3 030a 	sub.w	r3, r3, sl
 801dc48:	b2ad      	uxth	r5, r5
 801dc4a:	9c0d      	ldr	r4, [sp, #52]	@ 0x34
 801dc4c:	b29b      	uxth	r3, r3
 801dc4e:	fb08 f505 	mul.w	r5, r8, r5
 801dc52:	fb09 5303 	mla	r3, r9, r3, r5
 801dc56:	fb0a 3304 	mla	r3, sl, r4, r3
 801dc5a:	9c0e      	ldr	r4, [sp, #56]	@ 0x38
 801dc5c:	fb0e 3304 	mla	r3, lr, r4, r3
 801dc60:	f3c3 2307 	ubfx	r3, r3, #8, #8
 801dc64:	2b00      	cmp	r3, #0
 801dc66:	f000 810f 	beq.w	801de88 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x36c>
 801dc6a:	9c0b      	ldr	r4, [sp, #44]	@ 0x2c
 801dc6c:	f1b9 0fff 	cmp.w	r9, #255	@ 0xff
 801dc70:	eb04 0540 	add.w	r5, r4, r0, lsl #1
 801dc74:	f834 0010 	ldrh.w	r0, [r4, r0, lsl #1]
 801dc78:	f000 8190 	beq.w	801df9c <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x480>
 801dc7c:	f420 6efc 	bic.w	lr, r0, #2016	@ 0x7e0
 801dc80:	ea4f 0ae9 	mov.w	sl, r9, asr #3
 801dc84:	f400 60fc 	and.w	r0, r0, #2016	@ 0x7e0
 801dc88:	fb09 f000 	mul.w	r0, r9, r0
 801dc8c:	fb0a fe0e 	mul.w	lr, sl, lr
 801dc90:	ea06 195e 	and.w	r9, r6, lr, lsr #5
 801dc94:	f100 0b20 	add.w	fp, r0, #32
 801dc98:	f60e 0e01 	addw	lr, lr, #2049	@ 0x801
 801dc9c:	44ce      	add	lr, r9
 801dc9e:	eb0b 2910 	add.w	r9, fp, r0, lsr #8
 801dca2:	ea4f 2919 	mov.w	r9, r9, lsr #8
 801dca6:	ea06 1e5e 	and.w	lr, r6, lr, lsr #5
 801dcaa:	f409 69fc 	and.w	r9, r9, #2016	@ 0x7e0
 801dcae:	ea4e 0909 	orr.w	r9, lr, r9
 801dcb2:	f1b8 0fff 	cmp.w	r8, #255	@ 0xff
 801dcb6:	8868      	ldrh	r0, [r5, #2]
 801dcb8:	d019      	beq.n	801dcee <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1d2>
 801dcba:	f420 6efc 	bic.w	lr, r0, #2016	@ 0x7e0
 801dcbe:	ea4f 0ae8 	mov.w	sl, r8, asr #3
 801dcc2:	f400 60fc 	and.w	r0, r0, #2016	@ 0x7e0
 801dcc6:	fb08 f800 	mul.w	r8, r8, r0
 801dcca:	fb0a fe0e 	mul.w	lr, sl, lr
 801dcce:	ea06 105e 	and.w	r0, r6, lr, lsr #5
 801dcd2:	f108 0b20 	add.w	fp, r8, #32
 801dcd6:	f60e 0e01 	addw	lr, lr, #2049	@ 0x801
 801dcda:	4486      	add	lr, r0
 801dcdc:	eb0b 2018 	add.w	r0, fp, r8, lsr #8
 801dce0:	0a00      	lsrs	r0, r0, #8
 801dce2:	ea06 1e5e 	and.w	lr, r6, lr, lsr #5
 801dce6:	f400 60fc 	and.w	r0, r0, #2016	@ 0x7e0
 801dcea:	ea4e 0000 	orr.w	r0, lr, r0
 801dcee:	ea4f 4e09 	mov.w	lr, r9, lsl #16
 801dcf2:	ea4f 4a00 	mov.w	sl, r0, lsl #16
 801dcf6:	f00e 6efc 	and.w	lr, lr, #132120576	@ 0x7e00000
 801dcfa:	f429 69fc 	bic.w	r9, r9, #2016	@ 0x7e0
 801dcfe:	f00a 6afc 	and.w	sl, sl, #132120576	@ 0x7e00000
 801dd02:	f420 60fc 	bic.w	r0, r0, #2016	@ 0x7e0
 801dd06:	ea4e 0909 	orr.w	r9, lr, r9
 801dd0a:	ea4a 0000 	orr.w	r0, sl, r0
 801dd0e:	f1bc 0f00 	cmp.w	ip, #0
 801dd12:	f000 8145 	beq.w	801dfa0 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x484>
 801dd16:	f102 4200 	add.w	r2, r2, #2147483648	@ 0x80000000
 801dd1a:	3a01      	subs	r2, #1
 801dd1c:	0052      	lsls	r2, r2, #1
 801dd1e:	9c0d      	ldr	r4, [sp, #52]	@ 0x34
 801dd20:	3202      	adds	r2, #2
 801dd22:	2cff      	cmp	r4, #255	@ 0xff
 801dd24:	eb05 0e02 	add.w	lr, r5, r2
 801dd28:	5aaa      	ldrh	r2, [r5, r2]
 801dd2a:	d018      	beq.n	801dd5e <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x242>
 801dd2c:	f422 65fc 	bic.w	r5, r2, #2016	@ 0x7e0
 801dd30:	f402 62fc 	and.w	r2, r2, #2016	@ 0x7e0
 801dd34:	fb04 fa02 	mul.w	sl, r4, r2
 801dd38:	ea4f 08e4 	mov.w	r8, r4, asr #3
 801dd3c:	fb08 f805 	mul.w	r8, r8, r5
 801dd40:	f10a 0520 	add.w	r5, sl, #32
 801dd44:	ea06 1258 	and.w	r2, r6, r8, lsr #5
 801dd48:	eb05 251a 	add.w	r5, r5, sl, lsr #8
 801dd4c:	f608 0801 	addw	r8, r8, #2049	@ 0x801
 801dd50:	4442      	add	r2, r8
 801dd52:	0a2d      	lsrs	r5, r5, #8
 801dd54:	ea06 1252 	and.w	r2, r6, r2, lsr #5
 801dd58:	f405 65fc 	and.w	r5, r5, #2016	@ 0x7e0
 801dd5c:	432a      	orrs	r2, r5
 801dd5e:	9c0e      	ldr	r4, [sp, #56]	@ 0x38
 801dd60:	f8be 5002 	ldrh.w	r5, [lr, #2]
 801dd64:	2cff      	cmp	r4, #255	@ 0xff
 801dd66:	d01a      	beq.n	801dd9e <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x282>
 801dd68:	f425 6efc 	bic.w	lr, r5, #2016	@ 0x7e0
 801dd6c:	f405 65fc 	and.w	r5, r5, #2016	@ 0x7e0
 801dd70:	fb04 fa05 	mul.w	sl, r4, r5
 801dd74:	ea4f 08e4 	mov.w	r8, r4, asr #3
 801dd78:	fb08 f80e 	mul.w	r8, r8, lr
 801dd7c:	f10a 0e20 	add.w	lr, sl, #32
 801dd80:	ea06 1558 	and.w	r5, r6, r8, lsr #5
 801dd84:	eb0e 2e1a 	add.w	lr, lr, sl, lsr #8
 801dd88:	f608 0801 	addw	r8, r8, #2049	@ 0x801
 801dd8c:	4445      	add	r5, r8
 801dd8e:	ea4f 2e1e 	mov.w	lr, lr, lsr #8
 801dd92:	ea06 1555 	and.w	r5, r6, r5, lsr #5
 801dd96:	f40e 6efc 	and.w	lr, lr, #2016	@ 0x7e0
 801dd9a:	ea45 050e 	orr.w	r5, r5, lr
 801dd9e:	fb1c fe01 	smulbb	lr, ip, r1
 801dda2:	ea4f 0eee 	mov.w	lr, lr, asr #3
 801dda6:	f1cc 0810 	rsb	r8, ip, #16
 801ddaa:	eba8 0801 	sub.w	r8, r8, r1
 801ddae:	ea4f 4a02 	mov.w	sl, r2, lsl #16
 801ddb2:	ebce 0141 	rsb	r1, lr, r1, lsl #1
 801ddb6:	eb0e 0848 	add.w	r8, lr, r8, lsl #1
 801ddba:	ea4f 4b05 	mov.w	fp, r5, lsl #16
 801ddbe:	4341      	muls	r1, r0
 801ddc0:	f00a 6afc 	and.w	sl, sl, #132120576	@ 0x7e00000
 801ddc4:	f422 62fc 	bic.w	r2, r2, #2016	@ 0x7e0
 801ddc8:	ea4a 0202 	orr.w	r2, sl, r2
 801ddcc:	ebce 0c4c 	rsb	ip, lr, ip, lsl #1
 801ddd0:	fb09 1108 	mla	r1, r9, r8, r1
 801ddd4:	f00b 6bfc 	and.w	fp, fp, #132120576	@ 0x7e00000
 801ddd8:	f425 65fc 	bic.w	r5, r5, #2016	@ 0x7e0
 801dddc:	fb0c 1102 	mla	r1, ip, r2, r1
 801dde0:	ea4b 0505 	orr.w	r5, fp, r5
 801dde4:	fb0e 1e05 	mla	lr, lr, r5, r1
 801dde8:	ea4f 525e 	mov.w	r2, lr, lsr #21
 801ddec:	ea4f 1e5e 	mov.w	lr, lr, lsr #5
 801ddf0:	f402 62fc 	and.w	r2, r2, #2016	@ 0x7e0
 801ddf4:	f42e 6efc 	bic.w	lr, lr, #2016	@ 0x7e0
 801ddf8:	ea42 0e0e 	orr.w	lr, r2, lr
 801ddfc:	fa1f f28e 	uxth.w	r2, lr
 801de00:	2bff      	cmp	r3, #255	@ 0xff
 801de02:	d103      	bne.n	801de0c <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2f0>
 801de04:	9912      	ldr	r1, [sp, #72]	@ 0x48
 801de06:	29ff      	cmp	r1, #255	@ 0xff
 801de08:	f000 80de 	beq.w	801dfc8 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x4ac>
 801de0c:	990a      	ldr	r1, [sp, #40]	@ 0x28
 801de0e:	8838      	ldrh	r0, [r7, #0]
 801de10:	9c0a      	ldr	r4, [sp, #40]	@ 0x28
 801de12:	434b      	muls	r3, r1
 801de14:	f103 0c01 	add.w	ip, r3, #1
 801de18:	eb0c 2323 	add.w	r3, ip, r3, asr #8
 801de1c:	ea6f 2323 	mvn.w	r3, r3, asr #8
 801de20:	fa5f fc83 	uxtb.w	ip, r3
 801de24:	1203      	asrs	r3, r0, #8
 801de26:	1215      	asrs	r5, r2, #8
 801de28:	f003 03f8 	and.w	r3, r3, #248	@ 0xf8
 801de2c:	fb13 f30c 	smulbb	r3, r3, ip
 801de30:	f005 05f8 	and.w	r5, r5, #248	@ 0xf8
 801de34:	fb05 3501 	mla	r5, r5, r1, r3
 801de38:	10c3      	asrs	r3, r0, #3
 801de3a:	10d1      	asrs	r1, r2, #3
 801de3c:	f003 03fc 	and.w	r3, r3, #252	@ 0xfc
 801de40:	fb13 f30c 	smulbb	r3, r3, ip
 801de44:	f001 01fc 	and.w	r1, r1, #252	@ 0xfc
 801de48:	fb01 3104 	mla	r1, r1, r4, r3
 801de4c:	00c3      	lsls	r3, r0, #3
 801de4e:	00d2      	lsls	r2, r2, #3
 801de50:	b2db      	uxtb	r3, r3
 801de52:	b2d2      	uxtb	r2, r2
 801de54:	fb13 f30c 	smulbb	r3, r3, ip
 801de58:	b2ad      	uxth	r5, r5
 801de5a:	fb02 3304 	mla	r3, r2, r4, r3
 801de5e:	b29a      	uxth	r2, r3
 801de60:	1c6b      	adds	r3, r5, #1
 801de62:	b289      	uxth	r1, r1
 801de64:	eb03 2515 	add.w	r5, r3, r5, lsr #8
 801de68:	1c53      	adds	r3, r2, #1
 801de6a:	eb03 2312 	add.w	r3, r3, r2, lsr #8
 801de6e:	1c4a      	adds	r2, r1, #1
 801de70:	eb02 2111 	add.w	r1, r2, r1, lsr #8
 801de74:	f405 4578 	and.w	r5, r5, #63488	@ 0xf800
 801de78:	f3c3 23c4 	ubfx	r3, r3, #11, #5
 801de7c:	0949      	lsrs	r1, r1, #5
 801de7e:	432b      	orrs	r3, r5
 801de80:	f401 61fc 	and.w	r1, r1, #2016	@ 0x7e0
 801de84:	430b      	orrs	r3, r1
 801de86:	803b      	strh	r3, [r7, #0]
 801de88:	9b21      	ldr	r3, [sp, #132]	@ 0x84
 801de8a:	9a23      	ldr	r2, [sp, #140]	@ 0x8c
 801de8c:	4413      	add	r3, r2
 801de8e:	9321      	str	r3, [sp, #132]	@ 0x84
 801de90:	9a22      	ldr	r2, [sp, #136]	@ 0x88
 801de92:	9b24      	ldr	r3, [sp, #144]	@ 0x90
 801de94:	441a      	add	r2, r3
 801de96:	9b13      	ldr	r3, [sp, #76]	@ 0x4c
 801de98:	9222      	str	r2, [sp, #136]	@ 0x88
 801de9a:	3b01      	subs	r3, #1
 801de9c:	3702      	adds	r7, #2
 801de9e:	9313      	str	r3, [sp, #76]	@ 0x4c
 801dea0:	e689      	b.n	801dbb6 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x9a>
 801dea2:	9b21      	ldr	r3, [sp, #132]	@ 0x84
 801dea4:	9e23      	ldr	r6, [sp, #140]	@ 0x8c
 801dea6:	9c22      	ldr	r4, [sp, #136]	@ 0x88
 801dea8:	4433      	add	r3, r6
 801deaa:	9321      	str	r3, [sp, #132]	@ 0x84
 801deac:	9b24      	ldr	r3, [sp, #144]	@ 0x90
 801deae:	441c      	add	r4, r3
 801deb0:	9b08      	ldr	r3, [sp, #32]
 801deb2:	9422      	str	r4, [sp, #136]	@ 0x88
 801deb4:	3b01      	subs	r3, #1
 801deb6:	9308      	str	r3, [sp, #32]
 801deb8:	9b09      	ldr	r3, [sp, #36]	@ 0x24
 801deba:	3302      	adds	r3, #2
 801debc:	9309      	str	r3, [sp, #36]	@ 0x24
 801debe:	e658      	b.n	801db72 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x56>
 801dec0:	d028      	beq.n	801df14 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3f8>
 801dec2:	9b08      	ldr	r3, [sp, #32]
 801dec4:	9823      	ldr	r0, [sp, #140]	@ 0x8c
 801dec6:	9d21      	ldr	r5, [sp, #132]	@ 0x84
 801dec8:	3b01      	subs	r3, #1
 801deca:	fb00 5003 	mla	r0, r0, r3, r5
 801dece:	1400      	asrs	r0, r0, #16
 801ded0:	f53f ae6c 	bmi.w	801dbac <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x90>
 801ded4:	3901      	subs	r1, #1
 801ded6:	4288      	cmp	r0, r1
 801ded8:	f6bf ae68 	bge.w	801dbac <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x90>
 801dedc:	9924      	ldr	r1, [sp, #144]	@ 0x90
 801dede:	9822      	ldr	r0, [sp, #136]	@ 0x88
 801dee0:	fb01 0303 	mla	r3, r1, r3, r0
 801dee4:	141b      	asrs	r3, r3, #16
 801dee6:	f53f ae61 	bmi.w	801dbac <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x90>
 801deea:	3a01      	subs	r2, #1
 801deec:	4293      	cmp	r3, r2
 801deee:	f6bf ae5d 	bge.w	801dbac <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x90>
 801def2:	9b08      	ldr	r3, [sp, #32]
 801def4:	f8dd e024 	ldr.w	lr, [sp, #36]	@ 0x24
 801def8:	9313      	str	r3, [sp, #76]	@ 0x4c
 801defa:	f64f 061f 	movw	r6, #63519	@ 0xf81f
 801defe:	9b13      	ldr	r3, [sp, #76]	@ 0x4c
 801df00:	2b00      	cmp	r3, #0
 801df02:	f300 8082 	bgt.w	801e00a <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x4ee>
 801df06:	9b08      	ldr	r3, [sp, #32]
 801df08:	ea23 74e3 	bic.w	r4, r3, r3, asr #31
 801df0c:	9b09      	ldr	r3, [sp, #36]	@ 0x24
 801df0e:	eb03 0344 	add.w	r3, r3, r4, lsl #1
 801df12:	9309      	str	r3, [sp, #36]	@ 0x24
 801df14:	9b11      	ldr	r3, [sp, #68]	@ 0x44
 801df16:	2b00      	cmp	r3, #0
 801df18:	f340 81ef 	ble.w	801e2fa <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x7de>
 801df1c:	ee30 0a04 	vadd.f32	s0, s0, s8
 801df20:	eeb7 7a00 	vmov.f32	s14, #112	@ 0x3f800000  1.0
 801df24:	eec7 7a00 	vdiv.f32	s15, s14, s0
 801df28:	9b20      	ldr	r3, [sp, #128]	@ 0x80
 801df2a:	ee70 0aa4 	vadd.f32	s1, s1, s9
 801df2e:	ee31 1a05 	vadd.f32	s2, s2, s10
 801df32:	ee20 7aa7 	vmul.f32	s14, s1, s15
 801df36:	eef0 6a62 	vmov.f32	s13, s5
 801df3a:	ee61 7a27 	vmul.f32	s15, s2, s15
 801df3e:	eefe 6ac8 	vcvt.s32.f32	s13, s13, #16
 801df42:	ee77 2a62 	vsub.f32	s5, s14, s5
 801df46:	edcd 6a21 	vstr	s13, [sp, #132]	@ 0x84
 801df4a:	eefe 2ac8 	vcvt.s32.f32	s5, s5, #16
 801df4e:	eef0 6a43 	vmov.f32	s13, s6
 801df52:	ee37 3ac3 	vsub.f32	s6, s15, s6
 801df56:	ee12 2a90 	vmov	r2, s5
 801df5a:	eebe 3ac8 	vcvt.s32.f32	s6, s6, #16
 801df5e:	fb92 f3f3 	sdiv	r3, r2, r3
 801df62:	ee13 2a10 	vmov	r2, s6
 801df66:	9323      	str	r3, [sp, #140]	@ 0x8c
 801df68:	9b20      	ldr	r3, [sp, #128]	@ 0x80
 801df6a:	fb92 f3f3 	sdiv	r3, r2, r3
 801df6e:	9324      	str	r3, [sp, #144]	@ 0x90
 801df70:	9b11      	ldr	r3, [sp, #68]	@ 0x44
 801df72:	9a14      	ldr	r2, [sp, #80]	@ 0x50
 801df74:	3b01      	subs	r3, #1
 801df76:	eefe 6ac8 	vcvt.s32.f32	s13, s13, #16
 801df7a:	9311      	str	r3, [sp, #68]	@ 0x44
 801df7c:	9b20      	ldr	r3, [sp, #128]	@ 0x80
 801df7e:	edcd 6a22 	vstr	s13, [sp, #136]	@ 0x88
 801df82:	bf08      	it	eq
 801df84:	4613      	moveq	r3, r2
 801df86:	9308      	str	r3, [sp, #32]
 801df88:	eeb0 3a67 	vmov.f32	s6, s15
 801df8c:	eef0 2a47 	vmov.f32	s5, s14
 801df90:	e5e1      	b.n	801db56 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3a>
 801df92:	fb08 f505 	mul.w	r5, r8, r5
 801df96:	fb09 5303 	mla	r3, r9, r3, r5
 801df9a:	e661      	b.n	801dc60 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x144>
 801df9c:	4681      	mov	r9, r0
 801df9e:	e688      	b.n	801dcb2 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x196>
 801dfa0:	f1c1 0210 	rsb	r2, r1, #16
 801dfa4:	4341      	muls	r1, r0
 801dfa6:	fb09 1902 	mla	r9, r9, r2, r1
 801dfaa:	ea4f 0949 	mov.w	r9, r9, lsl #1
 801dfae:	ea4f 5259 	mov.w	r2, r9, lsr #21
 801dfb2:	ea4f 1959 	mov.w	r9, r9, lsr #5
 801dfb6:	f402 62fc 	and.w	r2, r2, #2016	@ 0x7e0
 801dfba:	f429 69fc 	bic.w	r9, r9, #2016	@ 0x7e0
 801dfbe:	ea42 0909 	orr.w	r9, r2, r9
 801dfc2:	fa1f f289 	uxth.w	r2, r9
 801dfc6:	e71b      	b.n	801de00 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2e4>
 801dfc8:	803a      	strh	r2, [r7, #0]
 801dfca:	e75d      	b.n	801de88 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x36c>
 801dfcc:	f115 0e01 	adds.w	lr, r5, #1
 801dfd0:	f53f af5a 	bmi.w	801de88 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x36c>
 801dfd4:	4572      	cmp	r2, lr
 801dfd6:	f6ff af57 	blt.w	801de88 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x36c>
 801dfda:	f110 0e01 	adds.w	lr, r0, #1
 801dfde:	f53f af53 	bmi.w	801de88 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x36c>
 801dfe2:	4573      	cmp	r3, lr
 801dfe4:	f6ff af50 	blt.w	801de88 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x36c>
 801dfe8:	9c12      	ldr	r4, [sp, #72]	@ 0x48
 801dfea:	9502      	str	r5, [sp, #8]
 801dfec:	b21b      	sxth	r3, r3
 801dfee:	b212      	sxth	r2, r2
 801dff0:	e9cd 0103 	strd	r0, r1, [sp, #12]
 801dff4:	9301      	str	r3, [sp, #4]
 801dff6:	9200      	str	r2, [sp, #0]
 801dff8:	e9cd c405 	strd	ip, r4, [sp, #20]
 801dffc:	e9dd 230b 	ldrd	r2, r3, [sp, #44]	@ 0x2c
 801e000:	4639      	mov	r1, r7
 801e002:	9815      	ldr	r0, [sp, #84]	@ 0x54
 801e004:	f7ff fc04 	bl	801d810 <_ZNK8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtPKhssiihhh>
 801e008:	e73e      	b.n	801de88 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x36c>
 801e00a:	9b21      	ldr	r3, [sp, #132]	@ 0x84
 801e00c:	f3c3 3203 	ubfx	r2, r3, #12, #4
 801e010:	9b22      	ldr	r3, [sp, #136]	@ 0x88
 801e012:	f3c3 3503 	ubfx	r5, r3, #12, #4
 801e016:	9b28      	ldr	r3, [sp, #160]	@ 0xa0
 801e018:	f9b3 1008 	ldrsh.w	r1, [r3, #8]
 801e01c:	9b22      	ldr	r3, [sp, #136]	@ 0x88
 801e01e:	141f      	asrs	r7, r3, #16
 801e020:	9b21      	ldr	r3, [sp, #132]	@ 0x84
 801e022:	141b      	asrs	r3, r3, #16
 801e024:	fb01 3707 	mla	r7, r1, r7, r3
 801e028:	9b0c      	ldr	r3, [sp, #48]	@ 0x30
 801e02a:	fa1f fc82 	uxth.w	ip, r2
 801e02e:	eb03 0a07 	add.w	sl, r3, r7
 801e032:	ea4f 100c 	mov.w	r0, ip, lsl #4
 801e036:	f813 9007 	ldrb.w	r9, [r3, r7]
 801e03a:	f89a 8001 	ldrb.w	r8, [sl, #1]
 801e03e:	f5c0 7380 	rsb	r3, r0, #256	@ 0x100
 801e042:	b29b      	uxth	r3, r3
 801e044:	2d00      	cmp	r5, #0
 801e046:	f000 813d 	beq.w	801e2c4 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x7a8>
 801e04a:	f81a 4001 	ldrb.w	r4, [sl, r1]
 801e04e:	940f      	str	r4, [sp, #60]	@ 0x3c
 801e050:	eb0a 0b01 	add.w	fp, sl, r1
 801e054:	fa1f fa85 	uxth.w	sl, r5
 801e058:	fb0a fc0c 	mul.w	ip, sl, ip
 801e05c:	ebcc 1a0a 	rsb	sl, ip, sl, lsl #4
 801e060:	fa1f fa8a 	uxth.w	sl, sl
 801e064:	eba0 000c 	sub.w	r0, r0, ip
 801e068:	eba3 030a 	sub.w	r3, r3, sl
 801e06c:	b280      	uxth	r0, r0
 801e06e:	fb08 f000 	mul.w	r0, r8, r0
 801e072:	b29b      	uxth	r3, r3
 801e074:	fb09 0303 	mla	r3, r9, r3, r0
 801e078:	980f      	ldr	r0, [sp, #60]	@ 0x3c
 801e07a:	f89b 4001 	ldrb.w	r4, [fp, #1]
 801e07e:	9410      	str	r4, [sp, #64]	@ 0x40
 801e080:	fb0a 3300 	mla	r3, sl, r0, r3
 801e084:	fb0c 3304 	mla	r3, ip, r4, r3
 801e088:	f3c3 2307 	ubfx	r3, r3, #8, #8
 801e08c:	2b00      	cmp	r3, #0
 801e08e:	f000 810b 	beq.w	801e2a8 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x78c>
 801e092:	980b      	ldr	r0, [sp, #44]	@ 0x2c
 801e094:	9c0b      	ldr	r4, [sp, #44]	@ 0x2c
 801e096:	f1b9 0fff 	cmp.w	r9, #255	@ 0xff
 801e09a:	eb00 0047 	add.w	r0, r0, r7, lsl #1
 801e09e:	f834 7017 	ldrh.w	r7, [r4, r7, lsl #1]
 801e0a2:	f000 8114 	beq.w	801e2ce <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x7b2>
 801e0a6:	f427 6cfc 	bic.w	ip, r7, #2016	@ 0x7e0
 801e0aa:	ea4f 0ae9 	mov.w	sl, r9, asr #3
 801e0ae:	f407 67fc 	and.w	r7, r7, #2016	@ 0x7e0
 801e0b2:	fb09 f707 	mul.w	r7, r9, r7
 801e0b6:	fb0a fc0c 	mul.w	ip, sl, ip
 801e0ba:	ea06 195c 	and.w	r9, r6, ip, lsr #5
 801e0be:	f107 0b20 	add.w	fp, r7, #32
 801e0c2:	f60c 0c01 	addw	ip, ip, #2049	@ 0x801
 801e0c6:	44cc      	add	ip, r9
 801e0c8:	eb0b 2917 	add.w	r9, fp, r7, lsr #8
 801e0cc:	ea4f 2919 	mov.w	r9, r9, lsr #8
 801e0d0:	ea06 1c5c 	and.w	ip, r6, ip, lsr #5
 801e0d4:	f409 69fc 	and.w	r9, r9, #2016	@ 0x7e0
 801e0d8:	ea4c 0909 	orr.w	r9, ip, r9
 801e0dc:	f1b8 0fff 	cmp.w	r8, #255	@ 0xff
 801e0e0:	8847      	ldrh	r7, [r0, #2]
 801e0e2:	d019      	beq.n	801e118 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x5fc>
 801e0e4:	f427 6cfc 	bic.w	ip, r7, #2016	@ 0x7e0
 801e0e8:	ea4f 0ae8 	mov.w	sl, r8, asr #3
 801e0ec:	f407 67fc 	and.w	r7, r7, #2016	@ 0x7e0
 801e0f0:	fb08 f807 	mul.w	r8, r8, r7
 801e0f4:	fb0a fc0c 	mul.w	ip, sl, ip
 801e0f8:	ea06 175c 	and.w	r7, r6, ip, lsr #5
 801e0fc:	f108 0b20 	add.w	fp, r8, #32
 801e100:	f60c 0c01 	addw	ip, ip, #2049	@ 0x801
 801e104:	44bc      	add	ip, r7
 801e106:	eb0b 2718 	add.w	r7, fp, r8, lsr #8
 801e10a:	0a3f      	lsrs	r7, r7, #8
 801e10c:	ea06 1c5c 	and.w	ip, r6, ip, lsr #5
 801e110:	f407 67fc 	and.w	r7, r7, #2016	@ 0x7e0
 801e114:	ea4c 0707 	orr.w	r7, ip, r7
 801e118:	ea4f 4c09 	mov.w	ip, r9, lsl #16
 801e11c:	ea4f 4a07 	mov.w	sl, r7, lsl #16
 801e120:	f00c 6cfc 	and.w	ip, ip, #132120576	@ 0x7e00000
 801e124:	f429 69fc 	bic.w	r9, r9, #2016	@ 0x7e0
 801e128:	f00a 6afc 	and.w	sl, sl, #132120576	@ 0x7e00000
 801e12c:	f427 67fc 	bic.w	r7, r7, #2016	@ 0x7e0
 801e130:	ea4c 0909 	orr.w	r9, ip, r9
 801e134:	ea4a 0707 	orr.w	r7, sl, r7
 801e138:	2d00      	cmp	r5, #0
 801e13a:	f000 80ca 	beq.w	801e2d2 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x7b6>
 801e13e:	f101 4100 	add.w	r1, r1, #2147483648	@ 0x80000000
 801e142:	3901      	subs	r1, #1
 801e144:	0049      	lsls	r1, r1, #1
 801e146:	3102      	adds	r1, #2
 801e148:	eb00 0c01 	add.w	ip, r0, r1
 801e14c:	5a41      	ldrh	r1, [r0, r1]
 801e14e:	980f      	ldr	r0, [sp, #60]	@ 0x3c
 801e150:	28ff      	cmp	r0, #255	@ 0xff
 801e152:	d019      	beq.n	801e188 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x66c>
 801e154:	9c0f      	ldr	r4, [sp, #60]	@ 0x3c
 801e156:	f421 60fc 	bic.w	r0, r1, #2016	@ 0x7e0
 801e15a:	f401 61fc 	and.w	r1, r1, #2016	@ 0x7e0
 801e15e:	fb04 fa01 	mul.w	sl, r4, r1
 801e162:	ea4f 08e4 	mov.w	r8, r4, asr #3
 801e166:	fb08 f800 	mul.w	r8, r8, r0
 801e16a:	f10a 0020 	add.w	r0, sl, #32
 801e16e:	ea06 1158 	and.w	r1, r6, r8, lsr #5
 801e172:	eb00 201a 	add.w	r0, r0, sl, lsr #8
 801e176:	f608 0801 	addw	r8, r8, #2049	@ 0x801
 801e17a:	4441      	add	r1, r8
 801e17c:	0a00      	lsrs	r0, r0, #8
 801e17e:	ea06 1151 	and.w	r1, r6, r1, lsr #5
 801e182:	f400 60fc 	and.w	r0, r0, #2016	@ 0x7e0
 801e186:	4301      	orrs	r1, r0
 801e188:	9c10      	ldr	r4, [sp, #64]	@ 0x40
 801e18a:	f8bc 0002 	ldrh.w	r0, [ip, #2]
 801e18e:	2cff      	cmp	r4, #255	@ 0xff
 801e190:	d01a      	beq.n	801e1c8 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x6ac>
 801e192:	f420 6cfc 	bic.w	ip, r0, #2016	@ 0x7e0
 801e196:	f400 60fc 	and.w	r0, r0, #2016	@ 0x7e0
 801e19a:	fb04 fa00 	mul.w	sl, r4, r0
 801e19e:	ea4f 08e4 	mov.w	r8, r4, asr #3
 801e1a2:	fb08 f80c 	mul.w	r8, r8, ip
 801e1a6:	f10a 0c20 	add.w	ip, sl, #32
 801e1aa:	ea06 1058 	and.w	r0, r6, r8, lsr #5
 801e1ae:	eb0c 2c1a 	add.w	ip, ip, sl, lsr #8
 801e1b2:	f608 0801 	addw	r8, r8, #2049	@ 0x801
 801e1b6:	4440      	add	r0, r8
 801e1b8:	ea4f 2c1c 	mov.w	ip, ip, lsr #8
 801e1bc:	ea06 1050 	and.w	r0, r6, r0, lsr #5
 801e1c0:	f40c 6cfc 	and.w	ip, ip, #2016	@ 0x7e0
 801e1c4:	ea40 000c 	orr.w	r0, r0, ip
 801e1c8:	fb15 fc02 	smulbb	ip, r5, r2
 801e1cc:	ea4f 0cec 	mov.w	ip, ip, asr #3
 801e1d0:	f1c5 0810 	rsb	r8, r5, #16
 801e1d4:	eba8 0802 	sub.w	r8, r8, r2
 801e1d8:	ea4f 4a01 	mov.w	sl, r1, lsl #16
 801e1dc:	ebcc 0242 	rsb	r2, ip, r2, lsl #1
 801e1e0:	437a      	muls	r2, r7
 801e1e2:	ea4f 4b00 	mov.w	fp, r0, lsl #16
 801e1e6:	eb0c 0848 	add.w	r8, ip, r8, lsl #1
 801e1ea:	f00a 6afc 	and.w	sl, sl, #132120576	@ 0x7e00000
 801e1ee:	f421 61fc 	bic.w	r1, r1, #2016	@ 0x7e0
 801e1f2:	fb09 2208 	mla	r2, r9, r8, r2
 801e1f6:	ea4a 0101 	orr.w	r1, sl, r1
 801e1fa:	ebcc 0545 	rsb	r5, ip, r5, lsl #1
 801e1fe:	f00b 6bfc 	and.w	fp, fp, #132120576	@ 0x7e00000
 801e202:	f420 60fc 	bic.w	r0, r0, #2016	@ 0x7e0
 801e206:	fb05 2201 	mla	r2, r5, r1, r2
 801e20a:	ea4b 0000 	orr.w	r0, fp, r0
 801e20e:	fb0c 2200 	mla	r2, ip, r0, r2
 801e212:	0d57      	lsrs	r7, r2, #21
 801e214:	0952      	lsrs	r2, r2, #5
 801e216:	f407 67fc 	and.w	r7, r7, #2016	@ 0x7e0
 801e21a:	f422 62fc 	bic.w	r2, r2, #2016	@ 0x7e0
 801e21e:	433a      	orrs	r2, r7
 801e220:	2bff      	cmp	r3, #255	@ 0xff
 801e222:	b292      	uxth	r2, r2
 801e224:	d102      	bne.n	801e22c <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x710>
 801e226:	9912      	ldr	r1, [sp, #72]	@ 0x48
 801e228:	29ff      	cmp	r1, #255	@ 0xff
 801e22a:	d063      	beq.n	801e2f4 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x7d8>
 801e22c:	980a      	ldr	r0, [sp, #40]	@ 0x28
 801e22e:	f8be 1000 	ldrh.w	r1, [lr]
 801e232:	9c0a      	ldr	r4, [sp, #40]	@ 0x28
 801e234:	4343      	muls	r3, r0
 801e236:	1c58      	adds	r0, r3, #1
 801e238:	eb00 2323 	add.w	r3, r0, r3, asr #8
 801e23c:	ea6f 2323 	mvn.w	r3, r3, asr #8
 801e240:	1208      	asrs	r0, r1, #8
 801e242:	b2db      	uxtb	r3, r3
 801e244:	1215      	asrs	r5, r2, #8
 801e246:	f000 00f8 	and.w	r0, r0, #248	@ 0xf8
 801e24a:	fb10 f003 	smulbb	r0, r0, r3
 801e24e:	10cf      	asrs	r7, r1, #3
 801e250:	f005 05f8 	and.w	r5, r5, #248	@ 0xf8
 801e254:	00c9      	lsls	r1, r1, #3
 801e256:	fb05 0504 	mla	r5, r5, r4, r0
 801e25a:	b2c9      	uxtb	r1, r1
 801e25c:	10d0      	asrs	r0, r2, #3
 801e25e:	00d2      	lsls	r2, r2, #3
 801e260:	fb11 f103 	smulbb	r1, r1, r3
 801e264:	b2d2      	uxtb	r2, r2
 801e266:	f007 07fc 	and.w	r7, r7, #252	@ 0xfc
 801e26a:	fb02 1204 	mla	r2, r2, r4, r1
 801e26e:	fb17 f703 	smulbb	r7, r7, r3
 801e272:	b2ad      	uxth	r5, r5
 801e274:	b292      	uxth	r2, r2
 801e276:	f000 00fc 	and.w	r0, r0, #252	@ 0xfc
 801e27a:	fb00 7004 	mla	r0, r0, r4, r7
 801e27e:	1c6b      	adds	r3, r5, #1
 801e280:	1c57      	adds	r7, r2, #1
 801e282:	eb03 2515 	add.w	r5, r3, r5, lsr #8
 801e286:	eb07 2712 	add.w	r7, r7, r2, lsr #8
 801e28a:	b280      	uxth	r0, r0
 801e28c:	f3c7 27c4 	ubfx	r7, r7, #11, #5
 801e290:	f405 4578 	and.w	r5, r5, #63488	@ 0xf800
 801e294:	433d      	orrs	r5, r7
 801e296:	1c47      	adds	r7, r0, #1
 801e298:	eb07 2710 	add.w	r7, r7, r0, lsr #8
 801e29c:	097f      	lsrs	r7, r7, #5
 801e29e:	f407 67fc 	and.w	r7, r7, #2016	@ 0x7e0
 801e2a2:	433d      	orrs	r5, r7
 801e2a4:	f8ae 5000 	strh.w	r5, [lr]
 801e2a8:	9b21      	ldr	r3, [sp, #132]	@ 0x84
 801e2aa:	9a23      	ldr	r2, [sp, #140]	@ 0x8c
 801e2ac:	4413      	add	r3, r2
 801e2ae:	9321      	str	r3, [sp, #132]	@ 0x84
 801e2b0:	9a22      	ldr	r2, [sp, #136]	@ 0x88
 801e2b2:	9b24      	ldr	r3, [sp, #144]	@ 0x90
 801e2b4:	441a      	add	r2, r3
 801e2b6:	9b13      	ldr	r3, [sp, #76]	@ 0x4c
 801e2b8:	9222      	str	r2, [sp, #136]	@ 0x88
 801e2ba:	3b01      	subs	r3, #1
 801e2bc:	f10e 0e02 	add.w	lr, lr, #2
 801e2c0:	9313      	str	r3, [sp, #76]	@ 0x4c
 801e2c2:	e61c      	b.n	801defe <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3e2>
 801e2c4:	fb08 f000 	mul.w	r0, r8, r0
 801e2c8:	fb09 0303 	mla	r3, r9, r3, r0
 801e2cc:	e6dc      	b.n	801e088 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x56c>
 801e2ce:	46b9      	mov	r9, r7
 801e2d0:	e704      	b.n	801e0dc <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x5c0>
 801e2d2:	f1c2 0110 	rsb	r1, r2, #16
 801e2d6:	437a      	muls	r2, r7
 801e2d8:	fb09 2901 	mla	r9, r9, r1, r2
 801e2dc:	ea4f 0949 	mov.w	r9, r9, lsl #1
 801e2e0:	ea4f 5059 	mov.w	r0, r9, lsr #21
 801e2e4:	ea4f 1259 	mov.w	r2, r9, lsr #5
 801e2e8:	f400 60fc 	and.w	r0, r0, #2016	@ 0x7e0
 801e2ec:	f422 62fc 	bic.w	r2, r2, #2016	@ 0x7e0
 801e2f0:	4302      	orrs	r2, r0
 801e2f2:	e795      	b.n	801e220 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x704>
 801e2f4:	f8ae 2000 	strh.w	r2, [lr]
 801e2f8:	e7d6      	b.n	801e2a8 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x78c>
 801e2fa:	b017      	add	sp, #92	@ 0x5c
 801e2fc:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}

0801e300 <_ZNK8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh>:
 801e300:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 801e304:	b085      	sub	sp, #20
 801e306:	e9dd 7010 	ldrd	r7, r0, [sp, #64]	@ 0x40
 801e30a:	f9bd 6038 	ldrsh.w	r6, [sp, #56]	@ 0x38
 801e30e:	9103      	str	r1, [sp, #12]
 801e310:	fb00 7406 	mla	r4, r0, r6, r7
 801e314:	eb03 0544 	add.w	r5, r3, r4, lsl #1
 801e318:	2800      	cmp	r0, #0
 801e31a:	f9bd b03c 	ldrsh.w	fp, [sp, #60]	@ 0x3c
 801e31e:	f89d 1048 	ldrb.w	r1, [sp, #72]	@ 0x48
 801e322:	f89d e04c 	ldrb.w	lr, [sp, #76]	@ 0x4c
 801e326:	9501      	str	r5, [sp, #4]
 801e328:	eb02 0904 	add.w	r9, r2, r4
 801e32c:	f2c0 8141 	blt.w	801e5b2 <_ZNK8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x2b2>
 801e330:	4583      	cmp	fp, r0
 801e332:	f340 813e 	ble.w	801e5b2 <_ZNK8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x2b2>
 801e336:	2f00      	cmp	r7, #0
 801e338:	f2c0 8137 	blt.w	801e5aa <_ZNK8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x2aa>
 801e33c:	42be      	cmp	r6, r7
 801e33e:	f340 8134 	ble.w	801e5aa <_ZNK8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x2aa>
 801e342:	f812 c004 	ldrb.w	ip, [r2, r4]
 801e346:	f833 3014 	ldrh.w	r3, [r3, r4, lsl #1]
 801e34a:	ea4f 02ec 	mov.w	r2, ip, asr #3
 801e34e:	f423 65fc 	bic.w	r5, r3, #2016	@ 0x7e0
 801e352:	4355      	muls	r5, r2
 801e354:	f403 63fc 	and.w	r3, r3, #2016	@ 0x7e0
 801e358:	f64f 041f 	movw	r4, #63519	@ 0xf81f
 801e35c:	fb0c f203 	mul.w	r2, ip, r3
 801e360:	ea04 1355 	and.w	r3, r4, r5, lsr #5
 801e364:	f605 0501 	addw	r5, r5, #2049	@ 0x801
 801e368:	441d      	add	r5, r3
 801e36a:	f102 0320 	add.w	r3, r2, #32
 801e36e:	eb03 2312 	add.w	r3, r3, r2, lsr #8
 801e372:	0a1b      	lsrs	r3, r3, #8
 801e374:	ea04 1455 	and.w	r4, r4, r5, lsr #5
 801e378:	f403 63fc 	and.w	r3, r3, #2016	@ 0x7e0
 801e37c:	431c      	orrs	r4, r3
 801e37e:	1c7b      	adds	r3, r7, #1
 801e380:	f100 811c 	bmi.w	801e5bc <_ZNK8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x2bc>
 801e384:	429e      	cmp	r6, r3
 801e386:	f340 8119 	ble.w	801e5bc <_ZNK8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x2bc>
 801e38a:	2900      	cmp	r1, #0
 801e38c:	f000 8119 	beq.w	801e5c2 <_ZNK8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x2c2>
 801e390:	9a01      	ldr	r2, [sp, #4]
 801e392:	f899 3001 	ldrb.w	r3, [r9, #1]
 801e396:	8855      	ldrh	r5, [r2, #2]
 801e398:	ea4f 08e3 	mov.w	r8, r3, asr #3
 801e39c:	f425 62fc 	bic.w	r2, r5, #2016	@ 0x7e0
 801e3a0:	fb08 f802 	mul.w	r8, r8, r2
 801e3a4:	f405 65fc 	and.w	r5, r5, #2016	@ 0x7e0
 801e3a8:	f64f 021f 	movw	r2, #63519	@ 0xf81f
 801e3ac:	ea02 1a58 	and.w	sl, r2, r8, lsr #5
 801e3b0:	435d      	muls	r5, r3
 801e3b2:	f608 0801 	addw	r8, r8, #2049	@ 0x801
 801e3b6:	44d0      	add	r8, sl
 801e3b8:	f105 0a20 	add.w	sl, r5, #32
 801e3bc:	eb0a 2515 	add.w	r5, sl, r5, lsr #8
 801e3c0:	0a2d      	lsrs	r5, r5, #8
 801e3c2:	ea02 1258 	and.w	r2, r2, r8, lsr #5
 801e3c6:	f405 65fc 	and.w	r5, r5, #2016	@ 0x7e0
 801e3ca:	432a      	orrs	r2, r5
 801e3cc:	3001      	adds	r0, #1
 801e3ce:	f100 80fe 	bmi.w	801e5ce <_ZNK8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x2ce>
 801e3d2:	4583      	cmp	fp, r0
 801e3d4:	f340 80fb 	ble.w	801e5ce <_ZNK8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x2ce>
 801e3d8:	f1be 0f00 	cmp.w	lr, #0
 801e3dc:	f000 80fc 	beq.w	801e5d8 <_ZNK8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x2d8>
 801e3e0:	2f00      	cmp	r7, #0
 801e3e2:	f2c0 80f1 	blt.w	801e5c8 <_ZNK8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x2c8>
 801e3e6:	42be      	cmp	r6, r7
 801e3e8:	f340 80ee 	ble.w	801e5c8 <_ZNK8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x2c8>
 801e3ec:	9801      	ldr	r0, [sp, #4]
 801e3ee:	f819 5006 	ldrb.w	r5, [r9, r6]
 801e3f2:	f830 8016 	ldrh.w	r8, [r0, r6, lsl #1]
 801e3f6:	ea4f 0ae5 	mov.w	sl, r5, asr #3
 801e3fa:	f428 60fc 	bic.w	r0, r8, #2016	@ 0x7e0
 801e3fe:	fb0a fa00 	mul.w	sl, sl, r0
 801e402:	f64f 0b1f 	movw	fp, #63519	@ 0xf81f
 801e406:	f408 68fc 	and.w	r8, r8, #2016	@ 0x7e0
 801e40a:	ea0b 105a 	and.w	r0, fp, sl, lsr #5
 801e40e:	fb05 f808 	mul.w	r8, r5, r8
 801e412:	f60a 0a01 	addw	sl, sl, #2049	@ 0x801
 801e416:	4482      	add	sl, r0
 801e418:	f108 0020 	add.w	r0, r8, #32
 801e41c:	eb00 2018 	add.w	r0, r0, r8, lsr #8
 801e420:	0a00      	lsrs	r0, r0, #8
 801e422:	ea0b 1b5a 	and.w	fp, fp, sl, lsr #5
 801e426:	f400 60fc 	and.w	r0, r0, #2016	@ 0x7e0
 801e42a:	ea4b 0b00 	orr.w	fp, fp, r0
 801e42e:	3701      	adds	r7, #1
 801e430:	f100 80d7 	bmi.w	801e5e2 <_ZNK8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x2e2>
 801e434:	42be      	cmp	r6, r7
 801e436:	f340 80d4 	ble.w	801e5e2 <_ZNK8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x2e2>
 801e43a:	2900      	cmp	r1, #0
 801e43c:	f000 80d4 	beq.w	801e5e8 <_ZNK8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x2e8>
 801e440:	3601      	adds	r6, #1
 801e442:	9801      	ldr	r0, [sp, #4]
 801e444:	f819 7006 	ldrb.w	r7, [r9, r6]
 801e448:	f830 0016 	ldrh.w	r0, [r0, r6, lsl #1]
 801e44c:	ea4f 09e7 	mov.w	r9, r7, asr #3
 801e450:	f420 66fc 	bic.w	r6, r0, #2016	@ 0x7e0
 801e454:	f400 60fc 	and.w	r0, r0, #2016	@ 0x7e0
 801e458:	fb09 f906 	mul.w	r9, r9, r6
 801e45c:	fb07 f800 	mul.w	r8, r7, r0
 801e460:	f64f 001f 	movw	r0, #63519	@ 0xf81f
 801e464:	ea00 1a59 	and.w	sl, r0, r9, lsr #5
 801e468:	f609 0901 	addw	r9, r9, #2049	@ 0x801
 801e46c:	44d1      	add	r9, sl
 801e46e:	ea00 1659 	and.w	r6, r0, r9, lsr #5
 801e472:	f108 0020 	add.w	r0, r8, #32
 801e476:	eb00 2018 	add.w	r0, r0, r8, lsr #8
 801e47a:	0a00      	lsrs	r0, r0, #8
 801e47c:	f400 60fc 	and.w	r0, r0, #2016	@ 0x7e0
 801e480:	4330      	orrs	r0, r6
 801e482:	b28e      	uxth	r6, r1
 801e484:	fa1f f98e 	uxth.w	r9, lr
 801e488:	fb06 f809 	mul.w	r8, r6, r9
 801e48c:	ea4f 4a04 	mov.w	sl, r4, lsl #16
 801e490:	ebc8 1909 	rsb	r9, r8, r9, lsl #4
 801e494:	0136      	lsls	r6, r6, #4
 801e496:	f00a 6afc 	and.w	sl, sl, #132120576	@ 0x7e00000
 801e49a:	f424 64fc 	bic.w	r4, r4, #2016	@ 0x7e0
 801e49e:	9601      	str	r6, [sp, #4]
 801e4a0:	ea4a 0404 	orr.w	r4, sl, r4
 801e4a4:	fa1f f689 	uxth.w	r6, r9
 801e4a8:	ea4f 4a02 	mov.w	sl, r2, lsl #16
 801e4ac:	fb11 f90e 	smulbb	r9, r1, lr
 801e4b0:	f3c9 09c7 	ubfx	r9, r9, #3, #8
 801e4b4:	9602      	str	r6, [sp, #8]
 801e4b6:	f00a 6afc 	and.w	sl, sl, #132120576	@ 0x7e00000
 801e4ba:	4626      	mov	r6, r4
 801e4bc:	f422 62fc 	bic.w	r2, r2, #2016	@ 0x7e0
 801e4c0:	f1ce 0410 	rsb	r4, lr, #16
 801e4c4:	1a64      	subs	r4, r4, r1
 801e4c6:	ea4a 0202 	orr.w	r2, sl, r2
 801e4ca:	ebc9 0141 	rsb	r1, r9, r1, lsl #1
 801e4ce:	ea4f 4a00 	mov.w	sl, r0, lsl #16
 801e4d2:	434a      	muls	r2, r1
 801e4d4:	eb09 0444 	add.w	r4, r9, r4, lsl #1
 801e4d8:	f00a 6afc 	and.w	sl, sl, #132120576	@ 0x7e00000
 801e4dc:	f420 60fc 	bic.w	r0, r0, #2016	@ 0x7e0
 801e4e0:	fb04 2406 	mla	r4, r4, r6, r2
 801e4e4:	ea4a 0000 	orr.w	r0, sl, r0
 801e4e8:	fb09 4200 	mla	r2, r9, r0, r4
 801e4ec:	ea4f 440b 	mov.w	r4, fp, lsl #16
 801e4f0:	f004 64fc 	and.w	r4, r4, #132120576	@ 0x7e00000
 801e4f4:	9801      	ldr	r0, [sp, #4]
 801e4f6:	9903      	ldr	r1, [sp, #12]
 801e4f8:	f42b 6bfc 	bic.w	fp, fp, #2016	@ 0x7e0
 801e4fc:	ea44 0b0b 	orr.w	fp, r4, fp
 801e500:	9c02      	ldr	r4, [sp, #8]
 801e502:	8809      	ldrh	r1, [r1, #0]
 801e504:	f5c0 7080 	rsb	r0, r0, #256	@ 0x100
 801e508:	1b00      	subs	r0, r0, r4
 801e50a:	9c01      	ldr	r4, [sp, #4]
 801e50c:	eba4 0608 	sub.w	r6, r4, r8
 801e510:	b2b6      	uxth	r6, r6
 801e512:	b280      	uxth	r0, r0
 801e514:	4373      	muls	r3, r6
 801e516:	fb0c 3300 	mla	r3, ip, r0, r3
 801e51a:	9802      	ldr	r0, [sp, #8]
 801e51c:	ebc9 0e4e 	rsb	lr, r9, lr, lsl #1
 801e520:	fb00 3505 	mla	r5, r0, r5, r3
 801e524:	fb0e 2e0b 	mla	lr, lr, fp, r2
 801e528:	fb08 5707 	mla	r7, r8, r7, r5
 801e52c:	ea4f 525e 	mov.w	r2, lr, lsr #21
 801e530:	120b      	asrs	r3, r1, #8
 801e532:	ea4f 1e5e 	mov.w	lr, lr, lsr #5
 801e536:	ea6f 2727 	mvn.w	r7, r7, asr #8
 801e53a:	b2ff      	uxtb	r7, r7
 801e53c:	f402 62fc 	and.w	r2, r2, #2016	@ 0x7e0
 801e540:	10c8      	asrs	r0, r1, #3
 801e542:	f42e 6efc 	bic.w	lr, lr, #2016	@ 0x7e0
 801e546:	f003 03f8 	and.w	r3, r3, #248	@ 0xf8
 801e54a:	00c9      	lsls	r1, r1, #3
 801e54c:	437b      	muls	r3, r7
 801e54e:	ea42 0e0e 	orr.w	lr, r2, lr
 801e552:	b2c9      	uxtb	r1, r1
 801e554:	f000 00fc 	and.w	r0, r0, #252	@ 0xfc
 801e558:	fa1f f28e 	uxth.w	r2, lr
 801e55c:	4378      	muls	r0, r7
 801e55e:	434f      	muls	r7, r1
 801e560:	1c59      	adds	r1, r3, #1
 801e562:	eb01 2113 	add.w	r1, r1, r3, lsr #8
 801e566:	1213      	asrs	r3, r2, #8
 801e568:	f023 0307 	bic.w	r3, r3, #7
 801e56c:	eb03 2311 	add.w	r3, r3, r1, lsr #8
 801e570:	1c41      	adds	r1, r0, #1
 801e572:	eb01 2010 	add.w	r0, r1, r0, lsr #8
 801e576:	10d1      	asrs	r1, r2, #3
 801e578:	f021 0103 	bic.w	r1, r1, #3
 801e57c:	eb01 2110 	add.w	r1, r1, r0, lsr #8
 801e580:	021b      	lsls	r3, r3, #8
 801e582:	00c9      	lsls	r1, r1, #3
 801e584:	f401 61fc 	and.w	r1, r1, #2016	@ 0x7e0
 801e588:	f403 4378 	and.w	r3, r3, #63488	@ 0xf800
 801e58c:	430b      	orrs	r3, r1
 801e58e:	1c79      	adds	r1, r7, #1
 801e590:	eb01 2717 	add.w	r7, r1, r7, lsr #8
 801e594:	00d2      	lsls	r2, r2, #3
 801e596:	eb02 2217 	add.w	r2, r2, r7, lsr #8
 801e59a:	f3c2 02c4 	ubfx	r2, r2, #3, #5
 801e59e:	431a      	orrs	r2, r3
 801e5a0:	9b03      	ldr	r3, [sp, #12]
 801e5a2:	801a      	strh	r2, [r3, #0]
 801e5a4:	b005      	add	sp, #20
 801e5a6:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 801e5aa:	f04f 0c00 	mov.w	ip, #0
 801e5ae:	4664      	mov	r4, ip
 801e5b0:	e6e5      	b.n	801e37e <_ZNK8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x7e>
 801e5b2:	2300      	movs	r3, #0
 801e5b4:	469c      	mov	ip, r3
 801e5b6:	461a      	mov	r2, r3
 801e5b8:	461c      	mov	r4, r3
 801e5ba:	e707      	b.n	801e3cc <_ZNK8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0xcc>
 801e5bc:	2300      	movs	r3, #0
 801e5be:	461a      	mov	r2, r3
 801e5c0:	e704      	b.n	801e3cc <_ZNK8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0xcc>
 801e5c2:	460b      	mov	r3, r1
 801e5c4:	460a      	mov	r2, r1
 801e5c6:	e701      	b.n	801e3cc <_ZNK8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0xcc>
 801e5c8:	2500      	movs	r5, #0
 801e5ca:	46ab      	mov	fp, r5
 801e5cc:	e72f      	b.n	801e42e <_ZNK8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x12e>
 801e5ce:	2700      	movs	r7, #0
 801e5d0:	463d      	mov	r5, r7
 801e5d2:	4638      	mov	r0, r7
 801e5d4:	46bb      	mov	fp, r7
 801e5d6:	e754      	b.n	801e482 <_ZNK8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x182>
 801e5d8:	4677      	mov	r7, lr
 801e5da:	4675      	mov	r5, lr
 801e5dc:	4670      	mov	r0, lr
 801e5de:	46f3      	mov	fp, lr
 801e5e0:	e74f      	b.n	801e482 <_ZNK8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x182>
 801e5e2:	2700      	movs	r7, #0
 801e5e4:	4638      	mov	r0, r7
 801e5e6:	e74c      	b.n	801e482 <_ZNK8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x182>
 801e5e8:	460f      	mov	r7, r1
 801e5ea:	4608      	mov	r0, r1
 801e5ec:	e749      	b.n	801e482 <_ZNK8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x182>
	...

0801e5f0 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff>:
 801e5f0:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 801e5f4:	b093      	sub	sp, #76	@ 0x4c
 801e5f6:	9210      	str	r2, [sp, #64]	@ 0x40
 801e5f8:	9a21      	ldr	r2, [sp, #132]	@ 0x84
 801e5fa:	910e      	str	r1, [sp, #56]	@ 0x38
 801e5fc:	9306      	str	r3, [sp, #24]
 801e5fe:	e9dd 1322 	ldrd	r1, r3, [sp, #136]	@ 0x88
 801e602:	9011      	str	r0, [sp, #68]	@ 0x44
 801e604:	6850      	ldr	r0, [r2, #4]
 801e606:	6812      	ldr	r2, [r2, #0]
 801e608:	fb00 1303 	mla	r3, r0, r3, r1
 801e60c:	eb02 0343 	add.w	r3, r2, r3, lsl #1
 801e610:	9307      	str	r3, [sp, #28]
 801e612:	9b24      	ldr	r3, [sp, #144]	@ 0x90
 801e614:	681b      	ldr	r3, [r3, #0]
 801e616:	9308      	str	r3, [sp, #32]
 801e618:	9b24      	ldr	r3, [sp, #144]	@ 0x90
 801e61a:	685b      	ldr	r3, [r3, #4]
 801e61c:	9309      	str	r3, [sp, #36]	@ 0x24
 801e61e:	9b0e      	ldr	r3, [sp, #56]	@ 0x38
 801e620:	2b00      	cmp	r3, #0
 801e622:	dc03      	bgt.n	801e62c <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3c>
 801e624:	9b10      	ldr	r3, [sp, #64]	@ 0x40
 801e626:	2b00      	cmp	r3, #0
 801e628:	f340 83b4 	ble.w	801ed94 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x7a4>
 801e62c:	9b24      	ldr	r3, [sp, #144]	@ 0x90
 801e62e:	f9b3 1008 	ldrsh.w	r1, [r3, #8]
 801e632:	f9b3 200c 	ldrsh.w	r2, [r3, #12]
 801e636:	1e48      	subs	r0, r1, #1
 801e638:	1e55      	subs	r5, r2, #1
 801e63a:	9b06      	ldr	r3, [sp, #24]
 801e63c:	2b00      	cmp	r3, #0
 801e63e:	f340 8163 	ble.w	801e908 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x318>
 801e642:	9e1d      	ldr	r6, [sp, #116]	@ 0x74
 801e644:	9b1e      	ldr	r3, [sp, #120]	@ 0x78
 801e646:	1436      	asrs	r6, r6, #16
 801e648:	ea4f 4323 	mov.w	r3, r3, asr #16
 801e64c:	d406      	bmi.n	801e65c <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x6c>
 801e64e:	4286      	cmp	r6, r0
 801e650:	da04      	bge.n	801e65c <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x6c>
 801e652:	2b00      	cmp	r3, #0
 801e654:	db02      	blt.n	801e65c <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x6c>
 801e656:	42ab      	cmp	r3, r5
 801e658:	f2c0 8157 	blt.w	801e90a <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x31a>
 801e65c:	3601      	adds	r6, #1
 801e65e:	f100 8144 	bmi.w	801e8ea <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2fa>
 801e662:	42b1      	cmp	r1, r6
 801e664:	f2c0 8141 	blt.w	801e8ea <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2fa>
 801e668:	3301      	adds	r3, #1
 801e66a:	f100 813e 	bmi.w	801e8ea <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2fa>
 801e66e:	429a      	cmp	r2, r3
 801e670:	f2c0 813b 	blt.w	801e8ea <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2fa>
 801e674:	9b06      	ldr	r3, [sp, #24]
 801e676:	9f07      	ldr	r7, [sp, #28]
 801e678:	930f      	str	r3, [sp, #60]	@ 0x3c
 801e67a:	f64f 061f 	movw	r6, #63519	@ 0xf81f
 801e67e:	9b0f      	ldr	r3, [sp, #60]	@ 0x3c
 801e680:	2b00      	cmp	r3, #0
 801e682:	f340 8164 	ble.w	801e94e <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x35e>
 801e686:	9b1e      	ldr	r3, [sp, #120]	@ 0x78
 801e688:	9d1d      	ldr	r5, [sp, #116]	@ 0x74
 801e68a:	1418      	asrs	r0, r3, #16
 801e68c:	9b1d      	ldr	r3, [sp, #116]	@ 0x74
 801e68e:	f3c3 3103 	ubfx	r1, r3, #12, #4
 801e692:	9b1e      	ldr	r3, [sp, #120]	@ 0x78
 801e694:	f3c3 3c03 	ubfx	ip, r3, #12, #4
 801e698:	9b24      	ldr	r3, [sp, #144]	@ 0x90
 801e69a:	142d      	asrs	r5, r5, #16
 801e69c:	e9d3 2302 	ldrd	r2, r3, [r3, #8]
 801e6a0:	f100 81ee 	bmi.w	801ea80 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x490>
 801e6a4:	f102 3eff 	add.w	lr, r2, #4294967295
 801e6a8:	4575      	cmp	r5, lr
 801e6aa:	f280 81e9 	bge.w	801ea80 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x490>
 801e6ae:	2800      	cmp	r0, #0
 801e6b0:	f2c0 81e6 	blt.w	801ea80 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x490>
 801e6b4:	f103 3eff 	add.w	lr, r3, #4294967295
 801e6b8:	4570      	cmp	r0, lr
 801e6ba:	f280 81e1 	bge.w	801ea80 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x490>
 801e6be:	9b09      	ldr	r3, [sp, #36]	@ 0x24
 801e6c0:	b212      	sxth	r2, r2
 801e6c2:	fb00 5002 	mla	r0, r0, r2, r5
 801e6c6:	fa1f fe81 	uxth.w	lr, r1
 801e6ca:	eb03 0a00 	add.w	sl, r3, r0
 801e6ce:	ea4f 150e 	mov.w	r5, lr, lsl #4
 801e6d2:	f813 9000 	ldrb.w	r9, [r3, r0]
 801e6d6:	f89a 8001 	ldrb.w	r8, [sl, #1]
 801e6da:	f5c5 7380 	rsb	r3, r5, #256	@ 0x100
 801e6de:	b29b      	uxth	r3, r3
 801e6e0:	f1bc 0f00 	cmp.w	ip, #0
 801e6e4:	f000 8179 	beq.w	801e9da <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3ea>
 801e6e8:	f81a 4002 	ldrb.w	r4, [sl, r2]
 801e6ec:	940a      	str	r4, [sp, #40]	@ 0x28
 801e6ee:	eb0a 0b02 	add.w	fp, sl, r2
 801e6f2:	fa1f fa8c 	uxth.w	sl, ip
 801e6f6:	fb0a fe0e 	mul.w	lr, sl, lr
 801e6fa:	ebce 1a0a 	rsb	sl, lr, sl, lsl #4
 801e6fe:	fa1f fa8a 	uxth.w	sl, sl
 801e702:	eba5 050e 	sub.w	r5, r5, lr
 801e706:	f89b 4001 	ldrb.w	r4, [fp, #1]
 801e70a:	940b      	str	r4, [sp, #44]	@ 0x2c
 801e70c:	eba3 030a 	sub.w	r3, r3, sl
 801e710:	b2ad      	uxth	r5, r5
 801e712:	9c0a      	ldr	r4, [sp, #40]	@ 0x28
 801e714:	b29b      	uxth	r3, r3
 801e716:	fb08 f505 	mul.w	r5, r8, r5
 801e71a:	fb09 5303 	mla	r3, r9, r3, r5
 801e71e:	fb0a 3304 	mla	r3, sl, r4, r3
 801e722:	9c0b      	ldr	r4, [sp, #44]	@ 0x2c
 801e724:	fb0e 3304 	mla	r3, lr, r4, r3
 801e728:	f3c3 2307 	ubfx	r3, r3, #8, #8
 801e72c:	2b00      	cmp	r3, #0
 801e72e:	f000 80cf 	beq.w	801e8d0 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2e0>
 801e732:	9c08      	ldr	r4, [sp, #32]
 801e734:	f1b9 0fff 	cmp.w	r9, #255	@ 0xff
 801e738:	eb04 0540 	add.w	r5, r4, r0, lsl #1
 801e73c:	f834 0010 	ldrh.w	r0, [r4, r0, lsl #1]
 801e740:	f000 8150 	beq.w	801e9e4 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3f4>
 801e744:	f420 6efc 	bic.w	lr, r0, #2016	@ 0x7e0
 801e748:	ea4f 0ae9 	mov.w	sl, r9, asr #3
 801e74c:	f400 60fc 	and.w	r0, r0, #2016	@ 0x7e0
 801e750:	fb09 f000 	mul.w	r0, r9, r0
 801e754:	fb0a fe0e 	mul.w	lr, sl, lr
 801e758:	ea06 195e 	and.w	r9, r6, lr, lsr #5
 801e75c:	f100 0b20 	add.w	fp, r0, #32
 801e760:	f60e 0e01 	addw	lr, lr, #2049	@ 0x801
 801e764:	44ce      	add	lr, r9
 801e766:	eb0b 2910 	add.w	r9, fp, r0, lsr #8
 801e76a:	ea4f 2919 	mov.w	r9, r9, lsr #8
 801e76e:	ea06 1e5e 	and.w	lr, r6, lr, lsr #5
 801e772:	f409 69fc 	and.w	r9, r9, #2016	@ 0x7e0
 801e776:	ea4e 0909 	orr.w	r9, lr, r9
 801e77a:	f1b8 0fff 	cmp.w	r8, #255	@ 0xff
 801e77e:	8868      	ldrh	r0, [r5, #2]
 801e780:	d019      	beq.n	801e7b6 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1c6>
 801e782:	f420 6efc 	bic.w	lr, r0, #2016	@ 0x7e0
 801e786:	ea4f 0ae8 	mov.w	sl, r8, asr #3
 801e78a:	f400 60fc 	and.w	r0, r0, #2016	@ 0x7e0
 801e78e:	fb08 f800 	mul.w	r8, r8, r0
 801e792:	fb0a fe0e 	mul.w	lr, sl, lr
 801e796:	ea06 105e 	and.w	r0, r6, lr, lsr #5
 801e79a:	f108 0b20 	add.w	fp, r8, #32
 801e79e:	f60e 0e01 	addw	lr, lr, #2049	@ 0x801
 801e7a2:	4486      	add	lr, r0
 801e7a4:	eb0b 2018 	add.w	r0, fp, r8, lsr #8
 801e7a8:	0a00      	lsrs	r0, r0, #8
 801e7aa:	ea06 1e5e 	and.w	lr, r6, lr, lsr #5
 801e7ae:	f400 60fc 	and.w	r0, r0, #2016	@ 0x7e0
 801e7b2:	ea4e 0000 	orr.w	r0, lr, r0
 801e7b6:	ea4f 4e09 	mov.w	lr, r9, lsl #16
 801e7ba:	ea4f 4a00 	mov.w	sl, r0, lsl #16
 801e7be:	f00e 6efc 	and.w	lr, lr, #132120576	@ 0x7e00000
 801e7c2:	f429 69fc 	bic.w	r9, r9, #2016	@ 0x7e0
 801e7c6:	f00a 6afc 	and.w	sl, sl, #132120576	@ 0x7e00000
 801e7ca:	f420 60fc 	bic.w	r0, r0, #2016	@ 0x7e0
 801e7ce:	ea4e 0909 	orr.w	r9, lr, r9
 801e7d2:	ea4a 0000 	orr.w	r0, sl, r0
 801e7d6:	f1bc 0f00 	cmp.w	ip, #0
 801e7da:	f000 8105 	beq.w	801e9e8 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3f8>
 801e7de:	f102 4200 	add.w	r2, r2, #2147483648	@ 0x80000000
 801e7e2:	3a01      	subs	r2, #1
 801e7e4:	0052      	lsls	r2, r2, #1
 801e7e6:	9c0a      	ldr	r4, [sp, #40]	@ 0x28
 801e7e8:	3202      	adds	r2, #2
 801e7ea:	2cff      	cmp	r4, #255	@ 0xff
 801e7ec:	eb05 0e02 	add.w	lr, r5, r2
 801e7f0:	5aaa      	ldrh	r2, [r5, r2]
 801e7f2:	d018      	beq.n	801e826 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x236>
 801e7f4:	f422 65fc 	bic.w	r5, r2, #2016	@ 0x7e0
 801e7f8:	f402 62fc 	and.w	r2, r2, #2016	@ 0x7e0
 801e7fc:	fb04 fa02 	mul.w	sl, r4, r2
 801e800:	ea4f 08e4 	mov.w	r8, r4, asr #3
 801e804:	fb08 f805 	mul.w	r8, r8, r5
 801e808:	f10a 0520 	add.w	r5, sl, #32
 801e80c:	ea06 1258 	and.w	r2, r6, r8, lsr #5
 801e810:	eb05 251a 	add.w	r5, r5, sl, lsr #8
 801e814:	f608 0801 	addw	r8, r8, #2049	@ 0x801
 801e818:	4442      	add	r2, r8
 801e81a:	0a2d      	lsrs	r5, r5, #8
 801e81c:	ea06 1252 	and.w	r2, r6, r2, lsr #5
 801e820:	f405 65fc 	and.w	r5, r5, #2016	@ 0x7e0
 801e824:	432a      	orrs	r2, r5
 801e826:	9c0b      	ldr	r4, [sp, #44]	@ 0x2c
 801e828:	f8be 5002 	ldrh.w	r5, [lr, #2]
 801e82c:	2cff      	cmp	r4, #255	@ 0xff
 801e82e:	d01a      	beq.n	801e866 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x276>
 801e830:	f425 6efc 	bic.w	lr, r5, #2016	@ 0x7e0
 801e834:	f405 65fc 	and.w	r5, r5, #2016	@ 0x7e0
 801e838:	fb04 fa05 	mul.w	sl, r4, r5
 801e83c:	ea4f 08e4 	mov.w	r8, r4, asr #3
 801e840:	fb08 f80e 	mul.w	r8, r8, lr
 801e844:	f10a 0e20 	add.w	lr, sl, #32
 801e848:	ea06 1558 	and.w	r5, r6, r8, lsr #5
 801e84c:	eb0e 2e1a 	add.w	lr, lr, sl, lsr #8
 801e850:	f608 0801 	addw	r8, r8, #2049	@ 0x801
 801e854:	4445      	add	r5, r8
 801e856:	ea4f 2e1e 	mov.w	lr, lr, lsr #8
 801e85a:	ea06 1555 	and.w	r5, r6, r5, lsr #5
 801e85e:	f40e 6efc 	and.w	lr, lr, #2016	@ 0x7e0
 801e862:	ea45 050e 	orr.w	r5, r5, lr
 801e866:	fb1c fe01 	smulbb	lr, ip, r1
 801e86a:	ea4f 0eee 	mov.w	lr, lr, asr #3
 801e86e:	f1cc 0810 	rsb	r8, ip, #16
 801e872:	eba8 0801 	sub.w	r8, r8, r1
 801e876:	ea4f 4a02 	mov.w	sl, r2, lsl #16
 801e87a:	ebce 0141 	rsb	r1, lr, r1, lsl #1
 801e87e:	eb0e 0848 	add.w	r8, lr, r8, lsl #1
 801e882:	ea4f 4b05 	mov.w	fp, r5, lsl #16
 801e886:	4341      	muls	r1, r0
 801e888:	f00a 6afc 	and.w	sl, sl, #132120576	@ 0x7e00000
 801e88c:	f422 62fc 	bic.w	r2, r2, #2016	@ 0x7e0
 801e890:	ea4a 0202 	orr.w	r2, sl, r2
 801e894:	ebce 0c4c 	rsb	ip, lr, ip, lsl #1
 801e898:	fb09 1108 	mla	r1, r9, r8, r1
 801e89c:	f00b 6bfc 	and.w	fp, fp, #132120576	@ 0x7e00000
 801e8a0:	f425 65fc 	bic.w	r5, r5, #2016	@ 0x7e0
 801e8a4:	fb0c 1102 	mla	r1, ip, r2, r1
 801e8a8:	ea4b 0505 	orr.w	r5, fp, r5
 801e8ac:	fb0e 1e05 	mla	lr, lr, r5, r1
 801e8b0:	ea4f 525e 	mov.w	r2, lr, lsr #21
 801e8b4:	ea4f 1e5e 	mov.w	lr, lr, lsr #5
 801e8b8:	f402 62fc 	and.w	r2, r2, #2016	@ 0x7e0
 801e8bc:	f42e 6efc 	bic.w	lr, lr, #2016	@ 0x7e0
 801e8c0:	ea42 0e0e 	orr.w	lr, r2, lr
 801e8c4:	fa1f f28e 	uxth.w	r2, lr
 801e8c8:	2bff      	cmp	r3, #255	@ 0xff
 801e8ca:	f040 80a1 	bne.w	801ea10 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x420>
 801e8ce:	803a      	strh	r2, [r7, #0]
 801e8d0:	9b1d      	ldr	r3, [sp, #116]	@ 0x74
 801e8d2:	9a1f      	ldr	r2, [sp, #124]	@ 0x7c
 801e8d4:	4413      	add	r3, r2
 801e8d6:	931d      	str	r3, [sp, #116]	@ 0x74
 801e8d8:	9a1e      	ldr	r2, [sp, #120]	@ 0x78
 801e8da:	9b20      	ldr	r3, [sp, #128]	@ 0x80
 801e8dc:	441a      	add	r2, r3
 801e8de:	9b0f      	ldr	r3, [sp, #60]	@ 0x3c
 801e8e0:	921e      	str	r2, [sp, #120]	@ 0x78
 801e8e2:	3b01      	subs	r3, #1
 801e8e4:	3702      	adds	r7, #2
 801e8e6:	930f      	str	r3, [sp, #60]	@ 0x3c
 801e8e8:	e6c9      	b.n	801e67e <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x8e>
 801e8ea:	9b1d      	ldr	r3, [sp, #116]	@ 0x74
 801e8ec:	9e1f      	ldr	r6, [sp, #124]	@ 0x7c
 801e8ee:	9c1e      	ldr	r4, [sp, #120]	@ 0x78
 801e8f0:	4433      	add	r3, r6
 801e8f2:	931d      	str	r3, [sp, #116]	@ 0x74
 801e8f4:	9b20      	ldr	r3, [sp, #128]	@ 0x80
 801e8f6:	441c      	add	r4, r3
 801e8f8:	9b06      	ldr	r3, [sp, #24]
 801e8fa:	941e      	str	r4, [sp, #120]	@ 0x78
 801e8fc:	3b01      	subs	r3, #1
 801e8fe:	9306      	str	r3, [sp, #24]
 801e900:	9b07      	ldr	r3, [sp, #28]
 801e902:	3302      	adds	r3, #2
 801e904:	9307      	str	r3, [sp, #28]
 801e906:	e698      	b.n	801e63a <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x4a>
 801e908:	d028      	beq.n	801e95c <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x36c>
 801e90a:	9b06      	ldr	r3, [sp, #24]
 801e90c:	981f      	ldr	r0, [sp, #124]	@ 0x7c
 801e90e:	9d1d      	ldr	r5, [sp, #116]	@ 0x74
 801e910:	3b01      	subs	r3, #1
 801e912:	fb00 5003 	mla	r0, r0, r3, r5
 801e916:	1400      	asrs	r0, r0, #16
 801e918:	f53f aeac 	bmi.w	801e674 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x84>
 801e91c:	3901      	subs	r1, #1
 801e91e:	4288      	cmp	r0, r1
 801e920:	f6bf aea8 	bge.w	801e674 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x84>
 801e924:	9920      	ldr	r1, [sp, #128]	@ 0x80
 801e926:	981e      	ldr	r0, [sp, #120]	@ 0x78
 801e928:	fb01 0303 	mla	r3, r1, r3, r0
 801e92c:	141b      	asrs	r3, r3, #16
 801e92e:	f53f aea1 	bmi.w	801e674 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x84>
 801e932:	3a01      	subs	r2, #1
 801e934:	4293      	cmp	r3, r2
 801e936:	f6bf ae9d 	bge.w	801e674 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x84>
 801e93a:	9b06      	ldr	r3, [sp, #24]
 801e93c:	f8dd e01c 	ldr.w	lr, [sp, #28]
 801e940:	930f      	str	r3, [sp, #60]	@ 0x3c
 801e942:	f64f 061f 	movw	r6, #63519	@ 0xf81f
 801e946:	9b0f      	ldr	r3, [sp, #60]	@ 0x3c
 801e948:	2b00      	cmp	r3, #0
 801e94a:	f300 80b6 	bgt.w	801eaba <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x4ca>
 801e94e:	9b06      	ldr	r3, [sp, #24]
 801e950:	ea23 74e3 	bic.w	r4, r3, r3, asr #31
 801e954:	9b07      	ldr	r3, [sp, #28]
 801e956:	eb03 0344 	add.w	r3, r3, r4, lsl #1
 801e95a:	9307      	str	r3, [sp, #28]
 801e95c:	9b0e      	ldr	r3, [sp, #56]	@ 0x38
 801e95e:	2b00      	cmp	r3, #0
 801e960:	f340 8218 	ble.w	801ed94 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x7a4>
 801e964:	ee30 0a04 	vadd.f32	s0, s0, s8
 801e968:	eeb7 7a00 	vmov.f32	s14, #112	@ 0x3f800000  1.0
 801e96c:	eec7 7a00 	vdiv.f32	s15, s14, s0
 801e970:	9b1c      	ldr	r3, [sp, #112]	@ 0x70
 801e972:	ee70 0aa4 	vadd.f32	s1, s1, s9
 801e976:	ee31 1a05 	vadd.f32	s2, s2, s10
 801e97a:	ee20 7aa7 	vmul.f32	s14, s1, s15
 801e97e:	eef0 6a62 	vmov.f32	s13, s5
 801e982:	ee61 7a27 	vmul.f32	s15, s2, s15
 801e986:	eefe 6ac8 	vcvt.s32.f32	s13, s13, #16
 801e98a:	ee77 2a62 	vsub.f32	s5, s14, s5
 801e98e:	edcd 6a1d 	vstr	s13, [sp, #116]	@ 0x74
 801e992:	eefe 2ac8 	vcvt.s32.f32	s5, s5, #16
 801e996:	eef0 6a43 	vmov.f32	s13, s6
 801e99a:	ee37 3ac3 	vsub.f32	s6, s15, s6
 801e99e:	ee12 2a90 	vmov	r2, s5
 801e9a2:	eebe 3ac8 	vcvt.s32.f32	s6, s6, #16
 801e9a6:	fb92 f3f3 	sdiv	r3, r2, r3
 801e9aa:	ee13 2a10 	vmov	r2, s6
 801e9ae:	931f      	str	r3, [sp, #124]	@ 0x7c
 801e9b0:	9b1c      	ldr	r3, [sp, #112]	@ 0x70
 801e9b2:	fb92 f3f3 	sdiv	r3, r2, r3
 801e9b6:	9320      	str	r3, [sp, #128]	@ 0x80
 801e9b8:	9b0e      	ldr	r3, [sp, #56]	@ 0x38
 801e9ba:	9a10      	ldr	r2, [sp, #64]	@ 0x40
 801e9bc:	3b01      	subs	r3, #1
 801e9be:	eefe 6ac8 	vcvt.s32.f32	s13, s13, #16
 801e9c2:	930e      	str	r3, [sp, #56]	@ 0x38
 801e9c4:	9b1c      	ldr	r3, [sp, #112]	@ 0x70
 801e9c6:	edcd 6a1e 	vstr	s13, [sp, #120]	@ 0x78
 801e9ca:	bf08      	it	eq
 801e9cc:	4613      	moveq	r3, r2
 801e9ce:	9306      	str	r3, [sp, #24]
 801e9d0:	eeb0 3a67 	vmov.f32	s6, s15
 801e9d4:	eef0 2a47 	vmov.f32	s5, s14
 801e9d8:	e621      	b.n	801e61e <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2e>
 801e9da:	fb08 f505 	mul.w	r5, r8, r5
 801e9de:	fb09 5303 	mla	r3, r9, r3, r5
 801e9e2:	e6a1      	b.n	801e728 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x138>
 801e9e4:	4681      	mov	r9, r0
 801e9e6:	e6c8      	b.n	801e77a <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x18a>
 801e9e8:	f1c1 0210 	rsb	r2, r1, #16
 801e9ec:	4341      	muls	r1, r0
 801e9ee:	fb09 1902 	mla	r9, r9, r2, r1
 801e9f2:	ea4f 0949 	mov.w	r9, r9, lsl #1
 801e9f6:	ea4f 5259 	mov.w	r2, r9, lsr #21
 801e9fa:	ea4f 1959 	mov.w	r9, r9, lsr #5
 801e9fe:	f402 62fc 	and.w	r2, r2, #2016	@ 0x7e0
 801ea02:	f429 69fc 	bic.w	r9, r9, #2016	@ 0x7e0
 801ea06:	ea42 0909 	orr.w	r9, r2, r9
 801ea0a:	fa1f f289 	uxth.w	r2, r9
 801ea0e:	e75b      	b.n	801e8c8 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2d8>
 801ea10:	f8b7 c000 	ldrh.w	ip, [r7]
 801ea14:	43db      	mvns	r3, r3
 801ea16:	ea4f 202c 	mov.w	r0, ip, asr #8
 801ea1a:	fa5f fe83 	uxtb.w	lr, r3
 801ea1e:	f000 00f8 	and.w	r0, r0, #248	@ 0xf8
 801ea22:	fb00 f00e 	mul.w	r0, r0, lr
 801ea26:	1c41      	adds	r1, r0, #1
 801ea28:	eb01 2010 	add.w	r0, r1, r0, lsr #8
 801ea2c:	1211      	asrs	r1, r2, #8
 801ea2e:	ea4f 05ec 	mov.w	r5, ip, asr #3
 801ea32:	f021 0107 	bic.w	r1, r1, #7
 801ea36:	eb01 2110 	add.w	r1, r1, r0, lsr #8
 801ea3a:	f005 05fc 	and.w	r5, r5, #252	@ 0xfc
 801ea3e:	48d7      	ldr	r0, [pc, #860]	@ (801ed9c <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x7ac>)
 801ea40:	fb05 f50e 	mul.w	r5, r5, lr
 801ea44:	b2c9      	uxtb	r1, r1
 801ea46:	ea00 2001 	and.w	r0, r0, r1, lsl #8
 801ea4a:	1c69      	adds	r1, r5, #1
 801ea4c:	eb01 2515 	add.w	r5, r1, r5, lsr #8
 801ea50:	10d1      	asrs	r1, r2, #3
 801ea52:	f021 0103 	bic.w	r1, r1, #3
 801ea56:	ea4f 03cc 	mov.w	r3, ip, lsl #3
 801ea5a:	eb01 2115 	add.w	r1, r1, r5, lsr #8
 801ea5e:	b2db      	uxtb	r3, r3
 801ea60:	00c9      	lsls	r1, r1, #3
 801ea62:	fb03 f30e 	mul.w	r3, r3, lr
 801ea66:	f401 61fc 	and.w	r1, r1, #2016	@ 0x7e0
 801ea6a:	4301      	orrs	r1, r0
 801ea6c:	1c58      	adds	r0, r3, #1
 801ea6e:	eb00 2313 	add.w	r3, r0, r3, lsr #8
 801ea72:	00d2      	lsls	r2, r2, #3
 801ea74:	eb02 2213 	add.w	r2, r2, r3, lsr #8
 801ea78:	f3c2 02c4 	ubfx	r2, r2, #3, #5
 801ea7c:	430a      	orrs	r2, r1
 801ea7e:	e726      	b.n	801e8ce <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2de>
 801ea80:	f115 0e01 	adds.w	lr, r5, #1
 801ea84:	f53f af24 	bmi.w	801e8d0 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2e0>
 801ea88:	4572      	cmp	r2, lr
 801ea8a:	f6ff af21 	blt.w	801e8d0 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2e0>
 801ea8e:	f110 0e01 	adds.w	lr, r0, #1
 801ea92:	f53f af1d 	bmi.w	801e8d0 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2e0>
 801ea96:	4573      	cmp	r3, lr
 801ea98:	f6ff af1a 	blt.w	801e8d0 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2e0>
 801ea9c:	b21b      	sxth	r3, r3
 801ea9e:	b212      	sxth	r2, r2
 801eaa0:	e9cd 1c04 	strd	r1, ip, [sp, #16]
 801eaa4:	e9cd 5002 	strd	r5, r0, [sp, #8]
 801eaa8:	9301      	str	r3, [sp, #4]
 801eaaa:	9200      	str	r2, [sp, #0]
 801eaac:	4639      	mov	r1, r7
 801eaae:	e9dd 3208 	ldrd	r3, r2, [sp, #32]
 801eab2:	9811      	ldr	r0, [sp, #68]	@ 0x44
 801eab4:	f7ff fc24 	bl	801e300 <_ZNK8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh>
 801eab8:	e70a      	b.n	801e8d0 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2e0>
 801eaba:	9b1d      	ldr	r3, [sp, #116]	@ 0x74
 801eabc:	f3c3 3203 	ubfx	r2, r3, #12, #4
 801eac0:	9b1e      	ldr	r3, [sp, #120]	@ 0x78
 801eac2:	f3c3 3503 	ubfx	r5, r3, #12, #4
 801eac6:	9b24      	ldr	r3, [sp, #144]	@ 0x90
 801eac8:	f9b3 1008 	ldrsh.w	r1, [r3, #8]
 801eacc:	9b1e      	ldr	r3, [sp, #120]	@ 0x78
 801eace:	141f      	asrs	r7, r3, #16
 801ead0:	9b1d      	ldr	r3, [sp, #116]	@ 0x74
 801ead2:	141b      	asrs	r3, r3, #16
 801ead4:	fb01 3707 	mla	r7, r1, r7, r3
 801ead8:	9b09      	ldr	r3, [sp, #36]	@ 0x24
 801eada:	fa1f fc82 	uxth.w	ip, r2
 801eade:	eb03 0a07 	add.w	sl, r3, r7
 801eae2:	ea4f 100c 	mov.w	r0, ip, lsl #4
 801eae6:	f813 9007 	ldrb.w	r9, [r3, r7]
 801eaea:	f89a 8001 	ldrb.w	r8, [sl, #1]
 801eaee:	f5c0 7380 	rsb	r3, r0, #256	@ 0x100
 801eaf2:	b29b      	uxth	r3, r3
 801eaf4:	2d00      	cmp	r5, #0
 801eaf6:	f000 80fe 	beq.w	801ecf6 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x706>
 801eafa:	f81a 4001 	ldrb.w	r4, [sl, r1]
 801eafe:	940c      	str	r4, [sp, #48]	@ 0x30
 801eb00:	eb0a 0b01 	add.w	fp, sl, r1
 801eb04:	fa1f fa85 	uxth.w	sl, r5
 801eb08:	fb0a fc0c 	mul.w	ip, sl, ip
 801eb0c:	ebcc 1a0a 	rsb	sl, ip, sl, lsl #4
 801eb10:	fa1f fa8a 	uxth.w	sl, sl
 801eb14:	eba0 000c 	sub.w	r0, r0, ip
 801eb18:	eba3 030a 	sub.w	r3, r3, sl
 801eb1c:	b280      	uxth	r0, r0
 801eb1e:	fb08 f000 	mul.w	r0, r8, r0
 801eb22:	b29b      	uxth	r3, r3
 801eb24:	fb09 0303 	mla	r3, r9, r3, r0
 801eb28:	980c      	ldr	r0, [sp, #48]	@ 0x30
 801eb2a:	f89b 4001 	ldrb.w	r4, [fp, #1]
 801eb2e:	940d      	str	r4, [sp, #52]	@ 0x34
 801eb30:	fb0a 3300 	mla	r3, sl, r0, r3
 801eb34:	fb0c 3304 	mla	r3, ip, r4, r3
 801eb38:	f3c3 2307 	ubfx	r3, r3, #8, #8
 801eb3c:	2b00      	cmp	r3, #0
 801eb3e:	f000 80cc 	beq.w	801ecda <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x6ea>
 801eb42:	9808      	ldr	r0, [sp, #32]
 801eb44:	9c08      	ldr	r4, [sp, #32]
 801eb46:	f1b9 0fff 	cmp.w	r9, #255	@ 0xff
 801eb4a:	eb00 0047 	add.w	r0, r0, r7, lsl #1
 801eb4e:	f834 7017 	ldrh.w	r7, [r4, r7, lsl #1]
 801eb52:	f000 80d5 	beq.w	801ed00 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x710>
 801eb56:	f427 6cfc 	bic.w	ip, r7, #2016	@ 0x7e0
 801eb5a:	ea4f 0ae9 	mov.w	sl, r9, asr #3
 801eb5e:	f407 67fc 	and.w	r7, r7, #2016	@ 0x7e0
 801eb62:	fb09 f707 	mul.w	r7, r9, r7
 801eb66:	fb0a fc0c 	mul.w	ip, sl, ip
 801eb6a:	ea06 195c 	and.w	r9, r6, ip, lsr #5
 801eb6e:	f107 0b20 	add.w	fp, r7, #32
 801eb72:	f60c 0c01 	addw	ip, ip, #2049	@ 0x801
 801eb76:	44cc      	add	ip, r9
 801eb78:	eb0b 2917 	add.w	r9, fp, r7, lsr #8
 801eb7c:	ea4f 2919 	mov.w	r9, r9, lsr #8
 801eb80:	ea06 1c5c 	and.w	ip, r6, ip, lsr #5
 801eb84:	f409 69fc 	and.w	r9, r9, #2016	@ 0x7e0
 801eb88:	ea4c 0909 	orr.w	r9, ip, r9
 801eb8c:	f1b8 0fff 	cmp.w	r8, #255	@ 0xff
 801eb90:	8847      	ldrh	r7, [r0, #2]
 801eb92:	d019      	beq.n	801ebc8 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x5d8>
 801eb94:	f427 6cfc 	bic.w	ip, r7, #2016	@ 0x7e0
 801eb98:	ea4f 0ae8 	mov.w	sl, r8, asr #3
 801eb9c:	f407 67fc 	and.w	r7, r7, #2016	@ 0x7e0
 801eba0:	fb08 f807 	mul.w	r8, r8, r7
 801eba4:	fb0a fc0c 	mul.w	ip, sl, ip
 801eba8:	ea06 175c 	and.w	r7, r6, ip, lsr #5
 801ebac:	f108 0b20 	add.w	fp, r8, #32
 801ebb0:	f60c 0c01 	addw	ip, ip, #2049	@ 0x801
 801ebb4:	44bc      	add	ip, r7
 801ebb6:	eb0b 2718 	add.w	r7, fp, r8, lsr #8
 801ebba:	0a3f      	lsrs	r7, r7, #8
 801ebbc:	ea06 1c5c 	and.w	ip, r6, ip, lsr #5
 801ebc0:	f407 67fc 	and.w	r7, r7, #2016	@ 0x7e0
 801ebc4:	ea4c 0707 	orr.w	r7, ip, r7
 801ebc8:	ea4f 4c09 	mov.w	ip, r9, lsl #16
 801ebcc:	ea4f 4a07 	mov.w	sl, r7, lsl #16
 801ebd0:	f00c 6cfc 	and.w	ip, ip, #132120576	@ 0x7e00000
 801ebd4:	f429 69fc 	bic.w	r9, r9, #2016	@ 0x7e0
 801ebd8:	f00a 6afc 	and.w	sl, sl, #132120576	@ 0x7e00000
 801ebdc:	f427 67fc 	bic.w	r7, r7, #2016	@ 0x7e0
 801ebe0:	ea4c 0909 	orr.w	r9, ip, r9
 801ebe4:	ea4a 0707 	orr.w	r7, sl, r7
 801ebe8:	2d00      	cmp	r5, #0
 801ebea:	f000 808b 	beq.w	801ed04 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x714>
 801ebee:	f101 4100 	add.w	r1, r1, #2147483648	@ 0x80000000
 801ebf2:	3901      	subs	r1, #1
 801ebf4:	0049      	lsls	r1, r1, #1
 801ebf6:	3102      	adds	r1, #2
 801ebf8:	eb00 0c01 	add.w	ip, r0, r1
 801ebfc:	5a41      	ldrh	r1, [r0, r1]
 801ebfe:	980c      	ldr	r0, [sp, #48]	@ 0x30
 801ec00:	28ff      	cmp	r0, #255	@ 0xff
 801ec02:	d019      	beq.n	801ec38 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x648>
 801ec04:	9c0c      	ldr	r4, [sp, #48]	@ 0x30
 801ec06:	f421 60fc 	bic.w	r0, r1, #2016	@ 0x7e0
 801ec0a:	f401 61fc 	and.w	r1, r1, #2016	@ 0x7e0
 801ec0e:	fb04 fa01 	mul.w	sl, r4, r1
 801ec12:	ea4f 08e4 	mov.w	r8, r4, asr #3
 801ec16:	fb08 f800 	mul.w	r8, r8, r0
 801ec1a:	f10a 0020 	add.w	r0, sl, #32
 801ec1e:	ea06 1158 	and.w	r1, r6, r8, lsr #5
 801ec22:	eb00 201a 	add.w	r0, r0, sl, lsr #8
 801ec26:	f608 0801 	addw	r8, r8, #2049	@ 0x801
 801ec2a:	4441      	add	r1, r8
 801ec2c:	0a00      	lsrs	r0, r0, #8
 801ec2e:	ea06 1151 	and.w	r1, r6, r1, lsr #5
 801ec32:	f400 60fc 	and.w	r0, r0, #2016	@ 0x7e0
 801ec36:	4301      	orrs	r1, r0
 801ec38:	9c0d      	ldr	r4, [sp, #52]	@ 0x34
 801ec3a:	f8bc 0002 	ldrh.w	r0, [ip, #2]
 801ec3e:	2cff      	cmp	r4, #255	@ 0xff
 801ec40:	d01a      	beq.n	801ec78 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x688>
 801ec42:	f420 6cfc 	bic.w	ip, r0, #2016	@ 0x7e0
 801ec46:	f400 60fc 	and.w	r0, r0, #2016	@ 0x7e0
 801ec4a:	fb04 fa00 	mul.w	sl, r4, r0
 801ec4e:	ea4f 08e4 	mov.w	r8, r4, asr #3
 801ec52:	fb08 f80c 	mul.w	r8, r8, ip
 801ec56:	f10a 0c20 	add.w	ip, sl, #32
 801ec5a:	ea06 1058 	and.w	r0, r6, r8, lsr #5
 801ec5e:	eb0c 2c1a 	add.w	ip, ip, sl, lsr #8
 801ec62:	f608 0801 	addw	r8, r8, #2049	@ 0x801
 801ec66:	4440      	add	r0, r8
 801ec68:	ea4f 2c1c 	mov.w	ip, ip, lsr #8
 801ec6c:	ea06 1050 	and.w	r0, r6, r0, lsr #5
 801ec70:	f40c 6cfc 	and.w	ip, ip, #2016	@ 0x7e0
 801ec74:	ea40 000c 	orr.w	r0, r0, ip
 801ec78:	fb15 fc02 	smulbb	ip, r5, r2
 801ec7c:	ea4f 0cec 	mov.w	ip, ip, asr #3
 801ec80:	f1c5 0810 	rsb	r8, r5, #16
 801ec84:	eba8 0802 	sub.w	r8, r8, r2
 801ec88:	ea4f 4a01 	mov.w	sl, r1, lsl #16
 801ec8c:	ebcc 0242 	rsb	r2, ip, r2, lsl #1
 801ec90:	437a      	muls	r2, r7
 801ec92:	ea4f 4b00 	mov.w	fp, r0, lsl #16
 801ec96:	eb0c 0848 	add.w	r8, ip, r8, lsl #1
 801ec9a:	f00a 6afc 	and.w	sl, sl, #132120576	@ 0x7e00000
 801ec9e:	f421 61fc 	bic.w	r1, r1, #2016	@ 0x7e0
 801eca2:	fb09 2208 	mla	r2, r9, r8, r2
 801eca6:	ea4a 0101 	orr.w	r1, sl, r1
 801ecaa:	ebcc 0545 	rsb	r5, ip, r5, lsl #1
 801ecae:	f00b 6bfc 	and.w	fp, fp, #132120576	@ 0x7e00000
 801ecb2:	f420 60fc 	bic.w	r0, r0, #2016	@ 0x7e0
 801ecb6:	fb05 2201 	mla	r2, r5, r1, r2
 801ecba:	ea4b 0000 	orr.w	r0, fp, r0
 801ecbe:	fb0c 2200 	mla	r2, ip, r0, r2
 801ecc2:	0d57      	lsrs	r7, r2, #21
 801ecc4:	0952      	lsrs	r2, r2, #5
 801ecc6:	f407 67fc 	and.w	r7, r7, #2016	@ 0x7e0
 801ecca:	f422 62fc 	bic.w	r2, r2, #2016	@ 0x7e0
 801ecce:	433a      	orrs	r2, r7
 801ecd0:	2bff      	cmp	r3, #255	@ 0xff
 801ecd2:	b292      	uxth	r2, r2
 801ecd4:	d127      	bne.n	801ed26 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x736>
 801ecd6:	f8ae 2000 	strh.w	r2, [lr]
 801ecda:	9b1d      	ldr	r3, [sp, #116]	@ 0x74
 801ecdc:	9a1f      	ldr	r2, [sp, #124]	@ 0x7c
 801ecde:	4413      	add	r3, r2
 801ece0:	931d      	str	r3, [sp, #116]	@ 0x74
 801ece2:	9a1e      	ldr	r2, [sp, #120]	@ 0x78
 801ece4:	9b20      	ldr	r3, [sp, #128]	@ 0x80
 801ece6:	441a      	add	r2, r3
 801ece8:	9b0f      	ldr	r3, [sp, #60]	@ 0x3c
 801ecea:	921e      	str	r2, [sp, #120]	@ 0x78
 801ecec:	3b01      	subs	r3, #1
 801ecee:	f10e 0e02 	add.w	lr, lr, #2
 801ecf2:	930f      	str	r3, [sp, #60]	@ 0x3c
 801ecf4:	e627      	b.n	801e946 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x356>
 801ecf6:	fb08 f000 	mul.w	r0, r8, r0
 801ecfa:	fb09 0303 	mla	r3, r9, r3, r0
 801ecfe:	e71b      	b.n	801eb38 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x548>
 801ed00:	46b9      	mov	r9, r7
 801ed02:	e743      	b.n	801eb8c <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x59c>
 801ed04:	f1c2 0110 	rsb	r1, r2, #16
 801ed08:	437a      	muls	r2, r7
 801ed0a:	fb09 2901 	mla	r9, r9, r1, r2
 801ed0e:	ea4f 0949 	mov.w	r9, r9, lsl #1
 801ed12:	ea4f 5059 	mov.w	r0, r9, lsr #21
 801ed16:	ea4f 1259 	mov.w	r2, r9, lsr #5
 801ed1a:	f400 60fc 	and.w	r0, r0, #2016	@ 0x7e0
 801ed1e:	f422 62fc 	bic.w	r2, r2, #2016	@ 0x7e0
 801ed22:	4302      	orrs	r2, r0
 801ed24:	e7d4      	b.n	801ecd0 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x6e0>
 801ed26:	f8be 7000 	ldrh.w	r7, [lr]
 801ed2a:	4c1c      	ldr	r4, [pc, #112]	@ (801ed9c <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x7ac>)
 801ed2c:	43db      	mvns	r3, r3
 801ed2e:	1238      	asrs	r0, r7, #8
 801ed30:	fa5f fc83 	uxtb.w	ip, r3
 801ed34:	f000 00f8 	and.w	r0, r0, #248	@ 0xf8
 801ed38:	10fd      	asrs	r5, r7, #3
 801ed3a:	fb00 f00c 	mul.w	r0, r0, ip
 801ed3e:	f005 05fc 	and.w	r5, r5, #252	@ 0xfc
 801ed42:	fb05 f10c 	mul.w	r1, r5, ip
 801ed46:	1c45      	adds	r5, r0, #1
 801ed48:	eb05 2010 	add.w	r0, r5, r0, lsr #8
 801ed4c:	1215      	asrs	r5, r2, #8
 801ed4e:	f025 0507 	bic.w	r5, r5, #7
 801ed52:	eb05 2010 	add.w	r0, r5, r0, lsr #8
 801ed56:	1c4d      	adds	r5, r1, #1
 801ed58:	eb05 2511 	add.w	r5, r5, r1, lsr #8
 801ed5c:	10d1      	asrs	r1, r2, #3
 801ed5e:	f021 0103 	bic.w	r1, r1, #3
 801ed62:	00fb      	lsls	r3, r7, #3
 801ed64:	eb01 2115 	add.w	r1, r1, r5, lsr #8
 801ed68:	b2db      	uxtb	r3, r3
 801ed6a:	b2c0      	uxtb	r0, r0
 801ed6c:	00c9      	lsls	r1, r1, #3
 801ed6e:	fb03 f30c 	mul.w	r3, r3, ip
 801ed72:	f401 61fc 	and.w	r1, r1, #2016	@ 0x7e0
 801ed76:	ea04 2000 	and.w	r0, r4, r0, lsl #8
 801ed7a:	4308      	orrs	r0, r1
 801ed7c:	1c59      	adds	r1, r3, #1
 801ed7e:	eb01 2313 	add.w	r3, r1, r3, lsr #8
 801ed82:	00d2      	lsls	r2, r2, #3
 801ed84:	eb02 2313 	add.w	r3, r2, r3, lsr #8
 801ed88:	f3c3 03c4 	ubfx	r3, r3, #3, #5
 801ed8c:	4318      	orrs	r0, r3
 801ed8e:	f8ae 0000 	strh.w	r0, [lr]
 801ed92:	e7a2      	b.n	801ecda <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x6ea>
 801ed94:	b013      	add	sp, #76	@ 0x4c
 801ed96:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 801ed9a:	bf00      	nop
 801ed9c:	fffff800 	.word	0xfffff800

0801eda0 <_ZNK8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtssiihhh>:
 801eda0:	e92d 47f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
 801eda4:	e9dd 4509 	ldrd	r4, r5, [sp, #36]	@ 0x24
 801eda8:	fb05 4c03 	mla	ip, r5, r3, r4
 801edac:	2d00      	cmp	r5, #0
 801edae:	f9bd a020 	ldrsh.w	sl, [sp, #32]
 801edb2:	f89d 902c 	ldrb.w	r9, [sp, #44]	@ 0x2c
 801edb6:	f89d 7030 	ldrb.w	r7, [sp, #48]	@ 0x30
 801edba:	f89d 6034 	ldrb.w	r6, [sp, #52]	@ 0x34
 801edbe:	8808      	ldrh	r0, [r1, #0]
 801edc0:	eb02 0e4c 	add.w	lr, r2, ip, lsl #1
 801edc4:	f2c0 80a7 	blt.w	801ef16 <_ZNK8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtssiihhh+0x176>
 801edc8:	45aa      	cmp	sl, r5
 801edca:	f340 80a4 	ble.w	801ef16 <_ZNK8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtssiihhh+0x176>
 801edce:	2c00      	cmp	r4, #0
 801edd0:	f2c0 809f 	blt.w	801ef12 <_ZNK8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtssiihhh+0x172>
 801edd4:	42a3      	cmp	r3, r4
 801edd6:	f340 809c 	ble.w	801ef12 <_ZNK8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtssiihhh+0x172>
 801edda:	f832 801c 	ldrh.w	r8, [r2, ip, lsl #1]
 801edde:	1c62      	adds	r2, r4, #1
 801ede0:	f100 809c 	bmi.w	801ef1c <_ZNK8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtssiihhh+0x17c>
 801ede4:	4293      	cmp	r3, r2
 801ede6:	f340 8099 	ble.w	801ef1c <_ZNK8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtssiihhh+0x17c>
 801edea:	f1b9 0f00 	cmp.w	r9, #0
 801edee:	f000 8095 	beq.w	801ef1c <_ZNK8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtssiihhh+0x17c>
 801edf2:	f8be c002 	ldrh.w	ip, [lr, #2]
 801edf6:	3501      	adds	r5, #1
 801edf8:	f100 8094 	bmi.w	801ef24 <_ZNK8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtssiihhh+0x184>
 801edfc:	45aa      	cmp	sl, r5
 801edfe:	f340 8091 	ble.w	801ef24 <_ZNK8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtssiihhh+0x184>
 801ee02:	2f00      	cmp	r7, #0
 801ee04:	f000 808e 	beq.w	801ef24 <_ZNK8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtssiihhh+0x184>
 801ee08:	2c00      	cmp	r4, #0
 801ee0a:	f2c0 8089 	blt.w	801ef20 <_ZNK8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtssiihhh+0x180>
 801ee0e:	42a3      	cmp	r3, r4
 801ee10:	f340 8086 	ble.w	801ef20 <_ZNK8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtssiihhh+0x180>
 801ee14:	f83e 5013 	ldrh.w	r5, [lr, r3, lsl #1]
 801ee18:	3401      	adds	r4, #1
 801ee1a:	f100 8086 	bmi.w	801ef2a <_ZNK8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtssiihhh+0x18a>
 801ee1e:	42a3      	cmp	r3, r4
 801ee20:	f340 8083 	ble.w	801ef2a <_ZNK8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtssiihhh+0x18a>
 801ee24:	f1b9 0f00 	cmp.w	r9, #0
 801ee28:	d07f      	beq.n	801ef2a <_ZNK8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtssiihhh+0x18a>
 801ee2a:	3301      	adds	r3, #1
 801ee2c:	f83e 3013 	ldrh.w	r3, [lr, r3, lsl #1]
 801ee30:	ea4f 4408 	mov.w	r4, r8, lsl #16
 801ee34:	f004 64fc 	and.w	r4, r4, #132120576	@ 0x7e00000
 801ee38:	f428 68fc 	bic.w	r8, r8, #2016	@ 0x7e0
 801ee3c:	fb19 fe07 	smulbb	lr, r9, r7
 801ee40:	ea44 0808 	orr.w	r8, r4, r8
 801ee44:	ea4f 440c 	mov.w	r4, ip, lsl #16
 801ee48:	f3ce 0ec7 	ubfx	lr, lr, #3, #8
 801ee4c:	f1c7 0210 	rsb	r2, r7, #16
 801ee50:	f004 64fc 	and.w	r4, r4, #132120576	@ 0x7e00000
 801ee54:	f42c 6cfc 	bic.w	ip, ip, #2016	@ 0x7e0
 801ee58:	ea44 0c0c 	orr.w	ip, r4, ip
 801ee5c:	eba2 0209 	sub.w	r2, r2, r9
 801ee60:	ebce 0449 	rsb	r4, lr, r9, lsl #1
 801ee64:	eb0e 0242 	add.w	r2, lr, r2, lsl #1
 801ee68:	fb04 f40c 	mul.w	r4, r4, ip
 801ee6c:	fb02 4808 	mla	r8, r2, r8, r4
 801ee70:	041a      	lsls	r2, r3, #16
 801ee72:	f002 62fc 	and.w	r2, r2, #132120576	@ 0x7e00000
 801ee76:	f423 63fc 	bic.w	r3, r3, #2016	@ 0x7e0
 801ee7a:	4313      	orrs	r3, r2
 801ee7c:	042a      	lsls	r2, r5, #16
 801ee7e:	f002 62fc 	and.w	r2, r2, #132120576	@ 0x7e00000
 801ee82:	f425 65fc 	bic.w	r5, r5, #2016	@ 0x7e0
 801ee86:	fb0e 8303 	mla	r3, lr, r3, r8
 801ee8a:	432a      	orrs	r2, r5
 801ee8c:	ebce 0747 	rsb	r7, lr, r7, lsl #1
 801ee90:	fb07 3202 	mla	r2, r7, r2, r3
 801ee94:	0d53      	lsrs	r3, r2, #21
 801ee96:	0952      	lsrs	r2, r2, #5
 801ee98:	f403 63fc 	and.w	r3, r3, #2016	@ 0x7e0
 801ee9c:	f422 62fc 	bic.w	r2, r2, #2016	@ 0x7e0
 801eea0:	431a      	orrs	r2, r3
 801eea2:	b293      	uxth	r3, r2
 801eea4:	b2b4      	uxth	r4, r6
 801eea6:	1202      	asrs	r2, r0, #8
 801eea8:	43f6      	mvns	r6, r6
 801eeaa:	b2f6      	uxtb	r6, r6
 801eeac:	121d      	asrs	r5, r3, #8
 801eeae:	f002 02f8 	and.w	r2, r2, #248	@ 0xf8
 801eeb2:	fb12 f206 	smulbb	r2, r2, r6
 801eeb6:	10c7      	asrs	r7, r0, #3
 801eeb8:	f005 05f8 	and.w	r5, r5, #248	@ 0xf8
 801eebc:	00c0      	lsls	r0, r0, #3
 801eebe:	fb05 2504 	mla	r5, r5, r4, r2
 801eec2:	b2c0      	uxtb	r0, r0
 801eec4:	10da      	asrs	r2, r3, #3
 801eec6:	00db      	lsls	r3, r3, #3
 801eec8:	b2db      	uxtb	r3, r3
 801eeca:	f007 07fc 	and.w	r7, r7, #252	@ 0xfc
 801eece:	fb10 f006 	smulbb	r0, r0, r6
 801eed2:	b2ad      	uxth	r5, r5
 801eed4:	fb03 0004 	mla	r0, r3, r4, r0
 801eed8:	f002 02fc 	and.w	r2, r2, #252	@ 0xfc
 801eedc:	fb17 f706 	smulbb	r7, r7, r6
 801eee0:	b280      	uxth	r0, r0
 801eee2:	1c6b      	adds	r3, r5, #1
 801eee4:	fb02 7204 	mla	r2, r2, r4, r7
 801eee8:	b292      	uxth	r2, r2
 801eeea:	eb03 2515 	add.w	r5, r3, r5, lsr #8
 801eeee:	1c43      	adds	r3, r0, #1
 801eef0:	eb03 2310 	add.w	r3, r3, r0, lsr #8
 801eef4:	1c50      	adds	r0, r2, #1
 801eef6:	eb00 2212 	add.w	r2, r0, r2, lsr #8
 801eefa:	f405 4578 	and.w	r5, r5, #63488	@ 0xf800
 801eefe:	f3c3 23c4 	ubfx	r3, r3, #11, #5
 801ef02:	0952      	lsrs	r2, r2, #5
 801ef04:	432b      	orrs	r3, r5
 801ef06:	f402 62fc 	and.w	r2, r2, #2016	@ 0x7e0
 801ef0a:	4313      	orrs	r3, r2
 801ef0c:	800b      	strh	r3, [r1, #0]
 801ef0e:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
 801ef12:	4680      	mov	r8, r0
 801ef14:	e763      	b.n	801edde <_ZNK8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtssiihhh+0x3e>
 801ef16:	4684      	mov	ip, r0
 801ef18:	4680      	mov	r8, r0
 801ef1a:	e76c      	b.n	801edf6 <_ZNK8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtssiihhh+0x56>
 801ef1c:	4684      	mov	ip, r0
 801ef1e:	e76a      	b.n	801edf6 <_ZNK8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtssiihhh+0x56>
 801ef20:	4605      	mov	r5, r0
 801ef22:	e779      	b.n	801ee18 <_ZNK8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtssiihhh+0x78>
 801ef24:	4603      	mov	r3, r0
 801ef26:	4605      	mov	r5, r0
 801ef28:	e782      	b.n	801ee30 <_ZNK8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtssiihhh+0x90>
 801ef2a:	4603      	mov	r3, r0
 801ef2c:	e780      	b.n	801ee30 <_ZNK8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtssiihhh+0x90>

0801ef2e <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff>:
 801ef2e:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 801ef32:	b093      	sub	sp, #76	@ 0x4c
 801ef34:	461d      	mov	r5, r3
 801ef36:	9210      	str	r2, [sp, #64]	@ 0x40
 801ef38:	9b21      	ldr	r3, [sp, #132]	@ 0x84
 801ef3a:	f89d 2094 	ldrb.w	r2, [sp, #148]	@ 0x94
 801ef3e:	920b      	str	r2, [sp, #44]	@ 0x2c
 801ef40:	e9dd 2722 	ldrd	r2, r7, [sp, #136]	@ 0x88
 801ef44:	910a      	str	r1, [sp, #40]	@ 0x28
 801ef46:	6859      	ldr	r1, [r3, #4]
 801ef48:	681b      	ldr	r3, [r3, #0]
 801ef4a:	9011      	str	r0, [sp, #68]	@ 0x44
 801ef4c:	fb01 2707 	mla	r7, r1, r7, r2
 801ef50:	eb03 0347 	add.w	r3, r3, r7, lsl #1
 801ef54:	9307      	str	r3, [sp, #28]
 801ef56:	9b24      	ldr	r3, [sp, #144]	@ 0x90
 801ef58:	681b      	ldr	r3, [r3, #0]
 801ef5a:	9309      	str	r3, [sp, #36]	@ 0x24
 801ef5c:	9b0b      	ldr	r3, [sp, #44]	@ 0x2c
 801ef5e:	e9dd 461d 	ldrd	r4, r6, [sp, #116]	@ 0x74
 801ef62:	43db      	mvns	r3, r3
 801ef64:	b2db      	uxtb	r3, r3
 801ef66:	9308      	str	r3, [sp, #32]
 801ef68:	9b0a      	ldr	r3, [sp, #40]	@ 0x28
 801ef6a:	2b00      	cmp	r3, #0
 801ef6c:	dc03      	bgt.n	801ef76 <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x48>
 801ef6e:	9b10      	ldr	r3, [sp, #64]	@ 0x40
 801ef70:	2b00      	cmp	r3, #0
 801ef72:	f340 8203 	ble.w	801f37c <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x44e>
 801ef76:	9b24      	ldr	r3, [sp, #144]	@ 0x90
 801ef78:	f9b3 1008 	ldrsh.w	r1, [r3, #8]
 801ef7c:	f9b3 200c 	ldrsh.w	r2, [r3, #12]
 801ef80:	1e48      	subs	r0, r1, #1
 801ef82:	f102 3cff 	add.w	ip, r2, #4294967295
 801ef86:	2d00      	cmp	r5, #0
 801ef88:	f340 80da 	ble.w	801f140 <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x212>
 801ef8c:	ea5f 4e24 	movs.w	lr, r4, asr #16
 801ef90:	ea4f 4326 	mov.w	r3, r6, asr #16
 801ef94:	d406      	bmi.n	801efa4 <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x76>
 801ef96:	4586      	cmp	lr, r0
 801ef98:	da04      	bge.n	801efa4 <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x76>
 801ef9a:	2b00      	cmp	r3, #0
 801ef9c:	db02      	blt.n	801efa4 <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x76>
 801ef9e:	4563      	cmp	r3, ip
 801efa0:	f2c0 80cf 	blt.w	801f142 <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x214>
 801efa4:	f11e 0e01 	adds.w	lr, lr, #1
 801efa8:	f100 80c1 	bmi.w	801f12e <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x200>
 801efac:	4571      	cmp	r1, lr
 801efae:	f2c0 80be 	blt.w	801f12e <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x200>
 801efb2:	3301      	adds	r3, #1
 801efb4:	f100 80bb 	bmi.w	801f12e <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x200>
 801efb8:	429a      	cmp	r2, r3
 801efba:	f2c0 80b8 	blt.w	801f12e <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x200>
 801efbe:	f8dd 801c 	ldr.w	r8, [sp, #28]
 801efc2:	46a9      	mov	r9, r5
 801efc4:	f1b9 0f00 	cmp.w	r9, #0
 801efc8:	f340 80d8 	ble.w	801f17c <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x24e>
 801efcc:	9b24      	ldr	r3, [sp, #144]	@ 0x90
 801efce:	1421      	asrs	r1, r4, #16
 801efd0:	ea4f 4026 	mov.w	r0, r6, asr #16
 801efd4:	f3c4 3203 	ubfx	r2, r4, #12, #4
 801efd8:	f3c6 3c03 	ubfx	ip, r6, #12, #4
 801efdc:	e9d3 e302 	ldrd	lr, r3, [r3, #8]
 801efe0:	f100 8111 	bmi.w	801f206 <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2d8>
 801efe4:	f10e 3aff 	add.w	sl, lr, #4294967295
 801efe8:	4551      	cmp	r1, sl
 801efea:	f280 810c 	bge.w	801f206 <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2d8>
 801efee:	2800      	cmp	r0, #0
 801eff0:	f2c0 8109 	blt.w	801f206 <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2d8>
 801eff4:	f103 3aff 	add.w	sl, r3, #4294967295
 801eff8:	4550      	cmp	r0, sl
 801effa:	f280 8104 	bge.w	801f206 <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2d8>
 801effe:	fa0f f38e 	sxth.w	r3, lr
 801f002:	fb00 1103 	mla	r1, r0, r3, r1
 801f006:	9809      	ldr	r0, [sp, #36]	@ 0x24
 801f008:	eb00 0a41 	add.w	sl, r0, r1, lsl #1
 801f00c:	f830 e011 	ldrh.w	lr, [r0, r1, lsl #1]
 801f010:	f8ba 1002 	ldrh.w	r1, [sl, #2]
 801f014:	f1bc 0f00 	cmp.w	ip, #0
 801f018:	d007      	beq.n	801f02a <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xfc>
 801f01a:	005b      	lsls	r3, r3, #1
 801f01c:	eb0a 0003 	add.w	r0, sl, r3
 801f020:	f83a 3003 	ldrh.w	r3, [sl, r3]
 801f024:	930c      	str	r3, [sp, #48]	@ 0x30
 801f026:	8843      	ldrh	r3, [r0, #2]
 801f028:	930d      	str	r3, [sp, #52]	@ 0x34
 801f02a:	ea4f 400e 	mov.w	r0, lr, lsl #16
 801f02e:	fb12 f30c 	smulbb	r3, r2, ip
 801f032:	f42e 6efc 	bic.w	lr, lr, #2016	@ 0x7e0
 801f036:	ea4f 4a01 	mov.w	sl, r1, lsl #16
 801f03a:	f000 60fc 	and.w	r0, r0, #132120576	@ 0x7e00000
 801f03e:	10db      	asrs	r3, r3, #3
 801f040:	ea40 000e 	orr.w	r0, r0, lr
 801f044:	f00a 6afc 	and.w	sl, sl, #132120576	@ 0x7e00000
 801f048:	f1cc 0e10 	rsb	lr, ip, #16
 801f04c:	f421 61fc 	bic.w	r1, r1, #2016	@ 0x7e0
 801f050:	ebae 0e02 	sub.w	lr, lr, r2
 801f054:	ea4a 0101 	orr.w	r1, sl, r1
 801f058:	ebc3 0242 	rsb	r2, r3, r2, lsl #1
 801f05c:	4351      	muls	r1, r2
 801f05e:	9a0d      	ldr	r2, [sp, #52]	@ 0x34
 801f060:	9f08      	ldr	r7, [sp, #32]
 801f062:	eb03 0e4e 	add.w	lr, r3, lr, lsl #1
 801f066:	fb0e 1e00 	mla	lr, lr, r0, r1
 801f06a:	0410      	lsls	r0, r2, #16
 801f06c:	f000 60fc 	and.w	r0, r0, #132120576	@ 0x7e00000
 801f070:	f422 62fc 	bic.w	r2, r2, #2016	@ 0x7e0
 801f074:	4310      	orrs	r0, r2
 801f076:	9a0c      	ldr	r2, [sp, #48]	@ 0x30
 801f078:	990c      	ldr	r1, [sp, #48]	@ 0x30
 801f07a:	0412      	lsls	r2, r2, #16
 801f07c:	fb03 e000 	mla	r0, r3, r0, lr
 801f080:	f002 62fc 	and.w	r2, r2, #132120576	@ 0x7e00000
 801f084:	f421 6efc 	bic.w	lr, r1, #2016	@ 0x7e0
 801f088:	ea42 020e 	orr.w	r2, r2, lr
 801f08c:	ebc3 034c 	rsb	r3, r3, ip, lsl #1
 801f090:	fb03 0302 	mla	r3, r3, r2, r0
 801f094:	0d5a      	lsrs	r2, r3, #21
 801f096:	095b      	lsrs	r3, r3, #5
 801f098:	f8b8 0000 	ldrh.w	r0, [r8]
 801f09c:	f402 62fc 	and.w	r2, r2, #2016	@ 0x7e0
 801f0a0:	f423 63fc 	bic.w	r3, r3, #2016	@ 0x7e0
 801f0a4:	4313      	orrs	r3, r2
 801f0a6:	b29b      	uxth	r3, r3
 801f0a8:	1201      	asrs	r1, r0, #8
 801f0aa:	f8bd 202c 	ldrh.w	r2, [sp, #44]	@ 0x2c
 801f0ae:	ea4f 2c23 	mov.w	ip, r3, asr #8
 801f0b2:	f001 01f8 	and.w	r1, r1, #248	@ 0xf8
 801f0b6:	fb11 f107 	smulbb	r1, r1, r7
 801f0ba:	ea4f 0ee0 	mov.w	lr, r0, asr #3
 801f0be:	f00c 0cf8 	and.w	ip, ip, #248	@ 0xf8
 801f0c2:	00c0      	lsls	r0, r0, #3
 801f0c4:	fb0c 1c02 	mla	ip, ip, r2, r1
 801f0c8:	b2c0      	uxtb	r0, r0
 801f0ca:	10d9      	asrs	r1, r3, #3
 801f0cc:	00db      	lsls	r3, r3, #3
 801f0ce:	f00e 0efc 	and.w	lr, lr, #252	@ 0xfc
 801f0d2:	b2db      	uxtb	r3, r3
 801f0d4:	fb10 f007 	smulbb	r0, r0, r7
 801f0d8:	fa1f fc8c 	uxth.w	ip, ip
 801f0dc:	fb03 0302 	mla	r3, r3, r2, r0
 801f0e0:	f001 01fc 	and.w	r1, r1, #252	@ 0xfc
 801f0e4:	fb1e fe07 	smulbb	lr, lr, r7
 801f0e8:	fb01 e102 	mla	r1, r1, r2, lr
 801f0ec:	b29a      	uxth	r2, r3
 801f0ee:	f10c 0301 	add.w	r3, ip, #1
 801f0f2:	b289      	uxth	r1, r1
 801f0f4:	eb03 2c1c 	add.w	ip, r3, ip, lsr #8
 801f0f8:	1c53      	adds	r3, r2, #1
 801f0fa:	eb03 2312 	add.w	r3, r3, r2, lsr #8
 801f0fe:	1c4a      	adds	r2, r1, #1
 801f100:	eb02 2111 	add.w	r1, r2, r1, lsr #8
 801f104:	f40c 4c78 	and.w	ip, ip, #63488	@ 0xf800
 801f108:	f3c3 23c4 	ubfx	r3, r3, #11, #5
 801f10c:	0949      	lsrs	r1, r1, #5
 801f10e:	ea43 030c 	orr.w	r3, r3, ip
 801f112:	f401 61fc 	and.w	r1, r1, #2016	@ 0x7e0
 801f116:	430b      	orrs	r3, r1
 801f118:	f8a8 3000 	strh.w	r3, [r8]
 801f11c:	9b1f      	ldr	r3, [sp, #124]	@ 0x7c
 801f11e:	441c      	add	r4, r3
 801f120:	9b20      	ldr	r3, [sp, #128]	@ 0x80
 801f122:	f108 0802 	add.w	r8, r8, #2
 801f126:	441e      	add	r6, r3
 801f128:	f109 39ff 	add.w	r9, r9, #4294967295
 801f12c:	e74a      	b.n	801efc4 <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x96>
 801f12e:	9b1f      	ldr	r3, [sp, #124]	@ 0x7c
 801f130:	441c      	add	r4, r3
 801f132:	9b20      	ldr	r3, [sp, #128]	@ 0x80
 801f134:	441e      	add	r6, r3
 801f136:	9b07      	ldr	r3, [sp, #28]
 801f138:	3302      	adds	r3, #2
 801f13a:	3d01      	subs	r5, #1
 801f13c:	9307      	str	r3, [sp, #28]
 801f13e:	e722      	b.n	801ef86 <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x58>
 801f140:	d022      	beq.n	801f188 <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x25a>
 801f142:	981f      	ldr	r0, [sp, #124]	@ 0x7c
 801f144:	1e6b      	subs	r3, r5, #1
 801f146:	fb00 4003 	mla	r0, r0, r3, r4
 801f14a:	1400      	asrs	r0, r0, #16
 801f14c:	f53f af37 	bmi.w	801efbe <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x90>
 801f150:	3901      	subs	r1, #1
 801f152:	4288      	cmp	r0, r1
 801f154:	f6bf af33 	bge.w	801efbe <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x90>
 801f158:	9920      	ldr	r1, [sp, #128]	@ 0x80
 801f15a:	fb01 6303 	mla	r3, r1, r3, r6
 801f15e:	141b      	asrs	r3, r3, #16
 801f160:	f53f af2d 	bmi.w	801efbe <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x90>
 801f164:	3a01      	subs	r2, #1
 801f166:	4293      	cmp	r3, r2
 801f168:	f6bf af29 	bge.w	801efbe <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x90>
 801f16c:	f8dd 901c 	ldr.w	r9, [sp, #28]
 801f170:	f8bd a02c 	ldrh.w	sl, [sp, #44]	@ 0x2c
 801f174:	46a8      	mov	r8, r5
 801f176:	f1b8 0f00 	cmp.w	r8, #0
 801f17a:	dc5e      	bgt.n	801f23a <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x30c>
 801f17c:	9b07      	ldr	r3, [sp, #28]
 801f17e:	ea25 75e5 	bic.w	r5, r5, r5, asr #31
 801f182:	eb03 0345 	add.w	r3, r3, r5, lsl #1
 801f186:	9307      	str	r3, [sp, #28]
 801f188:	9b0a      	ldr	r3, [sp, #40]	@ 0x28
 801f18a:	2b00      	cmp	r3, #0
 801f18c:	f340 80f6 	ble.w	801f37c <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x44e>
 801f190:	ee30 0a04 	vadd.f32	s0, s0, s8
 801f194:	eeb7 7a00 	vmov.f32	s14, #112	@ 0x3f800000  1.0
 801f198:	eec7 7a00 	vdiv.f32	s15, s14, s0
 801f19c:	9b1c      	ldr	r3, [sp, #112]	@ 0x70
 801f19e:	ee70 0aa4 	vadd.f32	s1, s1, s9
 801f1a2:	ee31 1a05 	vadd.f32	s2, s2, s10
 801f1a6:	ee20 7aa7 	vmul.f32	s14, s1, s15
 801f1aa:	eef0 6a62 	vmov.f32	s13, s5
 801f1ae:	ee61 7a27 	vmul.f32	s15, s2, s15
 801f1b2:	eefe 6ac8 	vcvt.s32.f32	s13, s13, #16
 801f1b6:	ee77 2a62 	vsub.f32	s5, s14, s5
 801f1ba:	ee16 4a90 	vmov	r4, s13
 801f1be:	eefe 2ac8 	vcvt.s32.f32	s5, s5, #16
 801f1c2:	eef0 6a43 	vmov.f32	s13, s6
 801f1c6:	ee37 3ac3 	vsub.f32	s6, s15, s6
 801f1ca:	ee12 2a90 	vmov	r2, s5
 801f1ce:	eebe 3ac8 	vcvt.s32.f32	s6, s6, #16
 801f1d2:	fb92 f3f3 	sdiv	r3, r2, r3
 801f1d6:	ee13 2a10 	vmov	r2, s6
 801f1da:	931f      	str	r3, [sp, #124]	@ 0x7c
 801f1dc:	9b1c      	ldr	r3, [sp, #112]	@ 0x70
 801f1de:	fb92 f3f3 	sdiv	r3, r2, r3
 801f1e2:	9320      	str	r3, [sp, #128]	@ 0x80
 801f1e4:	9b0a      	ldr	r3, [sp, #40]	@ 0x28
 801f1e6:	9a10      	ldr	r2, [sp, #64]	@ 0x40
 801f1e8:	3b01      	subs	r3, #1
 801f1ea:	eefe 6ac8 	vcvt.s32.f32	s13, s13, #16
 801f1ee:	930a      	str	r3, [sp, #40]	@ 0x28
 801f1f0:	9b1c      	ldr	r3, [sp, #112]	@ 0x70
 801f1f2:	ee16 6a90 	vmov	r6, s13
 801f1f6:	bf14      	ite	ne
 801f1f8:	461d      	movne	r5, r3
 801f1fa:	4615      	moveq	r5, r2
 801f1fc:	eeb0 3a67 	vmov.f32	s6, s15
 801f200:	eef0 2a47 	vmov.f32	s5, s14
 801f204:	e6b0      	b.n	801ef68 <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3a>
 801f206:	f111 0a01 	adds.w	sl, r1, #1
 801f20a:	d487      	bmi.n	801f11c <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1ee>
 801f20c:	45d6      	cmp	lr, sl
 801f20e:	db85      	blt.n	801f11c <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1ee>
 801f210:	f110 0a01 	adds.w	sl, r0, #1
 801f214:	d482      	bmi.n	801f11c <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1ee>
 801f216:	4553      	cmp	r3, sl
 801f218:	db80      	blt.n	801f11c <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1ee>
 801f21a:	9f0b      	ldr	r7, [sp, #44]	@ 0x2c
 801f21c:	9101      	str	r1, [sp, #4]
 801f21e:	b21b      	sxth	r3, r3
 801f220:	e9cd 0202 	strd	r0, r2, [sp, #8]
 801f224:	9300      	str	r3, [sp, #0]
 801f226:	e9cd c704 	strd	ip, r7, [sp, #16]
 801f22a:	fa0f f38e 	sxth.w	r3, lr
 801f22e:	9a09      	ldr	r2, [sp, #36]	@ 0x24
 801f230:	9811      	ldr	r0, [sp, #68]	@ 0x44
 801f232:	4641      	mov	r1, r8
 801f234:	f7ff fdb4 	bl	801eda0 <_ZNK8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtssiihhh>
 801f238:	e770      	b.n	801f11c <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1ee>
 801f23a:	9b24      	ldr	r3, [sp, #144]	@ 0x90
 801f23c:	9f09      	ldr	r7, [sp, #36]	@ 0x24
 801f23e:	f9b3 1008 	ldrsh.w	r1, [r3, #8]
 801f242:	1430      	asrs	r0, r6, #16
 801f244:	1423      	asrs	r3, r4, #16
 801f246:	fb01 3000 	mla	r0, r1, r0, r3
 801f24a:	9b09      	ldr	r3, [sp, #36]	@ 0x24
 801f24c:	f837 c010 	ldrh.w	ip, [r7, r0, lsl #1]
 801f250:	eb03 0340 	add.w	r3, r3, r0, lsl #1
 801f254:	f3c6 3e03 	ubfx	lr, r6, #12, #4
 801f258:	f3c4 3203 	ubfx	r2, r4, #12, #4
 801f25c:	8858      	ldrh	r0, [r3, #2]
 801f25e:	f1be 0f00 	cmp.w	lr, #0
 801f262:	d00b      	beq.n	801f27c <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x34e>
 801f264:	f101 4100 	add.w	r1, r1, #2147483648	@ 0x80000000
 801f268:	3901      	subs	r1, #1
 801f26a:	0049      	lsls	r1, r1, #1
 801f26c:	3102      	adds	r1, #2
 801f26e:	eb03 0b01 	add.w	fp, r3, r1
 801f272:	5a5b      	ldrh	r3, [r3, r1]
 801f274:	930e      	str	r3, [sp, #56]	@ 0x38
 801f276:	f8bb 3002 	ldrh.w	r3, [fp, #2]
 801f27a:	930f      	str	r3, [sp, #60]	@ 0x3c
 801f27c:	ea4f 410c 	mov.w	r1, ip, lsl #16
 801f280:	fb12 f30e 	smulbb	r3, r2, lr
 801f284:	f42c 6cfc 	bic.w	ip, ip, #2016	@ 0x7e0
 801f288:	ea4f 4b00 	mov.w	fp, r0, lsl #16
 801f28c:	f001 61fc 	and.w	r1, r1, #132120576	@ 0x7e00000
 801f290:	10db      	asrs	r3, r3, #3
 801f292:	ea41 010c 	orr.w	r1, r1, ip
 801f296:	f00b 6bfc 	and.w	fp, fp, #132120576	@ 0x7e00000
 801f29a:	f1ce 0c10 	rsb	ip, lr, #16
 801f29e:	f420 60fc 	bic.w	r0, r0, #2016	@ 0x7e0
 801f2a2:	ebac 0c02 	sub.w	ip, ip, r2
 801f2a6:	ea4b 0000 	orr.w	r0, fp, r0
 801f2aa:	ebc3 0242 	rsb	r2, r3, r2, lsl #1
 801f2ae:	4350      	muls	r0, r2
 801f2b0:	9a0f      	ldr	r2, [sp, #60]	@ 0x3c
 801f2b2:	9f08      	ldr	r7, [sp, #32]
 801f2b4:	eb03 0c4c 	add.w	ip, r3, ip, lsl #1
 801f2b8:	fb0c 0c01 	mla	ip, ip, r1, r0
 801f2bc:	ea4f 4b02 	mov.w	fp, r2, lsl #16
 801f2c0:	f422 61fc 	bic.w	r1, r2, #2016	@ 0x7e0
 801f2c4:	9a0e      	ldr	r2, [sp, #56]	@ 0x38
 801f2c6:	980e      	ldr	r0, [sp, #56]	@ 0x38
 801f2c8:	f00b 6bfc 	and.w	fp, fp, #132120576	@ 0x7e00000
 801f2cc:	0412      	lsls	r2, r2, #16
 801f2ce:	ea4b 0101 	orr.w	r1, fp, r1
 801f2d2:	f420 60fc 	bic.w	r0, r0, #2016	@ 0x7e0
 801f2d6:	f002 62fc 	and.w	r2, r2, #132120576	@ 0x7e00000
 801f2da:	fb03 c101 	mla	r1, r3, r1, ip
 801f2de:	4302      	orrs	r2, r0
 801f2e0:	ebc3 034e 	rsb	r3, r3, lr, lsl #1
 801f2e4:	fb03 1202 	mla	r2, r3, r2, r1
 801f2e8:	ea4f 5b52 	mov.w	fp, r2, lsr #21
 801f2ec:	0952      	lsrs	r2, r2, #5
 801f2ee:	f422 63fc 	bic.w	r3, r2, #2016	@ 0x7e0
 801f2f2:	f40b 6bfc 	and.w	fp, fp, #2016	@ 0x7e0
 801f2f6:	f8b9 2000 	ldrh.w	r2, [r9]
 801f2fa:	ea4b 0303 	orr.w	r3, fp, r3
 801f2fe:	b29b      	uxth	r3, r3
 801f300:	1211      	asrs	r1, r2, #8
 801f302:	1218      	asrs	r0, r3, #8
 801f304:	f001 01f8 	and.w	r1, r1, #248	@ 0xf8
 801f308:	fb11 f107 	smulbb	r1, r1, r7
 801f30c:	ea4f 0ce2 	mov.w	ip, r2, asr #3
 801f310:	f000 00f8 	and.w	r0, r0, #248	@ 0xf8
 801f314:	00d2      	lsls	r2, r2, #3
 801f316:	fb00 100a 	mla	r0, r0, sl, r1
 801f31a:	f00c 0cfc 	and.w	ip, ip, #252	@ 0xfc
 801f31e:	10d9      	asrs	r1, r3, #3
 801f320:	b2d2      	uxtb	r2, r2
 801f322:	00db      	lsls	r3, r3, #3
 801f324:	fb1c fc07 	smulbb	ip, ip, r7
 801f328:	fb12 f207 	smulbb	r2, r2, r7
 801f32c:	f001 01fc 	and.w	r1, r1, #252	@ 0xfc
 801f330:	b2db      	uxtb	r3, r3
 801f332:	b280      	uxth	r0, r0
 801f334:	fb01 c10a 	mla	r1, r1, sl, ip
 801f338:	fb03 230a 	mla	r3, r3, sl, r2
 801f33c:	b29b      	uxth	r3, r3
 801f33e:	b289      	uxth	r1, r1
 801f340:	1c42      	adds	r2, r0, #1
 801f342:	eb02 2010 	add.w	r0, r2, r0, lsr #8
 801f346:	f101 0c01 	add.w	ip, r1, #1
 801f34a:	1c5a      	adds	r2, r3, #1
 801f34c:	eb02 2213 	add.w	r2, r2, r3, lsr #8
 801f350:	eb0c 2c11 	add.w	ip, ip, r1, lsr #8
 801f354:	9b1f      	ldr	r3, [sp, #124]	@ 0x7c
 801f356:	f400 4078 	and.w	r0, r0, #63488	@ 0xf800
 801f35a:	f3c2 22c4 	ubfx	r2, r2, #11, #5
 801f35e:	ea4f 1c5c 	mov.w	ip, ip, lsr #5
 801f362:	4310      	orrs	r0, r2
 801f364:	f40c 6cfc 	and.w	ip, ip, #2016	@ 0x7e0
 801f368:	441c      	add	r4, r3
 801f36a:	9b20      	ldr	r3, [sp, #128]	@ 0x80
 801f36c:	ea40 000c 	orr.w	r0, r0, ip
 801f370:	f829 0b02 	strh.w	r0, [r9], #2
 801f374:	441e      	add	r6, r3
 801f376:	f108 38ff 	add.w	r8, r8, #4294967295
 801f37a:	e6fc      	b.n	801f176 <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x248>
 801f37c:	b013      	add	sp, #76	@ 0x4c
 801f37e:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}

0801f382 <_ZNK8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtssiihh>:
 801f382:	e92d 43f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, lr}
 801f386:	e9dd 4e08 	ldrd	r4, lr, [sp, #32]
 801f38a:	fb0e 4703 	mla	r7, lr, r3, r4
 801f38e:	f1be 0f00 	cmp.w	lr, #0
 801f392:	f9bd 901c 	ldrsh.w	r9, [sp, #28]
 801f396:	f89d 5028 	ldrb.w	r5, [sp, #40]	@ 0x28
 801f39a:	f89d 602c 	ldrb.w	r6, [sp, #44]	@ 0x2c
 801f39e:	8808      	ldrh	r0, [r1, #0]
 801f3a0:	eb02 0847 	add.w	r8, r2, r7, lsl #1
 801f3a4:	db60      	blt.n	801f468 <_ZNK8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtssiihh+0xe6>
 801f3a6:	45f1      	cmp	r9, lr
 801f3a8:	dd5e      	ble.n	801f468 <_ZNK8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtssiihh+0xe6>
 801f3aa:	2c00      	cmp	r4, #0
 801f3ac:	db5a      	blt.n	801f464 <_ZNK8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtssiihh+0xe2>
 801f3ae:	42a3      	cmp	r3, r4
 801f3b0:	dd58      	ble.n	801f464 <_ZNK8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtssiihh+0xe2>
 801f3b2:	f832 c017 	ldrh.w	ip, [r2, r7, lsl #1]
 801f3b6:	1c62      	adds	r2, r4, #1
 801f3b8:	d459      	bmi.n	801f46e <_ZNK8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtssiihh+0xec>
 801f3ba:	4293      	cmp	r3, r2
 801f3bc:	dd57      	ble.n	801f46e <_ZNK8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtssiihh+0xec>
 801f3be:	2d00      	cmp	r5, #0
 801f3c0:	d055      	beq.n	801f46e <_ZNK8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtssiihh+0xec>
 801f3c2:	f8b8 7002 	ldrh.w	r7, [r8, #2]
 801f3c6:	f11e 0e01 	adds.w	lr, lr, #1
 801f3ca:	d454      	bmi.n	801f476 <_ZNK8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtssiihh+0xf4>
 801f3cc:	45f1      	cmp	r9, lr
 801f3ce:	dd52      	ble.n	801f476 <_ZNK8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtssiihh+0xf4>
 801f3d0:	2e00      	cmp	r6, #0
 801f3d2:	d050      	beq.n	801f476 <_ZNK8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtssiihh+0xf4>
 801f3d4:	2c00      	cmp	r4, #0
 801f3d6:	db4c      	blt.n	801f472 <_ZNK8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtssiihh+0xf0>
 801f3d8:	42a3      	cmp	r3, r4
 801f3da:	dd4a      	ble.n	801f472 <_ZNK8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtssiihh+0xf0>
 801f3dc:	f838 2013 	ldrh.w	r2, [r8, r3, lsl #1]
 801f3e0:	3401      	adds	r4, #1
 801f3e2:	d405      	bmi.n	801f3f0 <_ZNK8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtssiihh+0x6e>
 801f3e4:	42a3      	cmp	r3, r4
 801f3e6:	dd03      	ble.n	801f3f0 <_ZNK8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtssiihh+0x6e>
 801f3e8:	b115      	cbz	r5, 801f3f0 <_ZNK8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtssiihh+0x6e>
 801f3ea:	3301      	adds	r3, #1
 801f3ec:	f838 0013 	ldrh.w	r0, [r8, r3, lsl #1]
 801f3f0:	ea4f 430c 	mov.w	r3, ip, lsl #16
 801f3f4:	fb15 f406 	smulbb	r4, r5, r6
 801f3f8:	f003 63fc 	and.w	r3, r3, #132120576	@ 0x7e00000
 801f3fc:	ea4f 4e07 	mov.w	lr, r7, lsl #16
 801f400:	f42c 6cfc 	bic.w	ip, ip, #2016	@ 0x7e0
 801f404:	f3c4 04c7 	ubfx	r4, r4, #3, #8
 801f408:	ea43 0c0c 	orr.w	ip, r3, ip
 801f40c:	f00e 6efc 	and.w	lr, lr, #132120576	@ 0x7e00000
 801f410:	f1c6 0310 	rsb	r3, r6, #16
 801f414:	f427 67fc 	bic.w	r7, r7, #2016	@ 0x7e0
 801f418:	1b5b      	subs	r3, r3, r5
 801f41a:	ea4e 0707 	orr.w	r7, lr, r7
 801f41e:	ebc4 0545 	rsb	r5, r4, r5, lsl #1
 801f422:	eb04 0343 	add.w	r3, r4, r3, lsl #1
 801f426:	437d      	muls	r5, r7
 801f428:	fb03 5c0c 	mla	ip, r3, ip, r5
 801f42c:	0403      	lsls	r3, r0, #16
 801f42e:	f003 63fc 	and.w	r3, r3, #132120576	@ 0x7e00000
 801f432:	f420 60fc 	bic.w	r0, r0, #2016	@ 0x7e0
 801f436:	4318      	orrs	r0, r3
 801f438:	0413      	lsls	r3, r2, #16
 801f43a:	f003 63fc 	and.w	r3, r3, #132120576	@ 0x7e00000
 801f43e:	f422 62fc 	bic.w	r2, r2, #2016	@ 0x7e0
 801f442:	4313      	orrs	r3, r2
 801f444:	fb04 c000 	mla	r0, r4, r0, ip
 801f448:	ebc4 0646 	rsb	r6, r4, r6, lsl #1
 801f44c:	fb06 0003 	mla	r0, r6, r3, r0
 801f450:	0d43      	lsrs	r3, r0, #21
 801f452:	0940      	lsrs	r0, r0, #5
 801f454:	f403 63fc 	and.w	r3, r3, #2016	@ 0x7e0
 801f458:	f420 60fc 	bic.w	r0, r0, #2016	@ 0x7e0
 801f45c:	4318      	orrs	r0, r3
 801f45e:	8008      	strh	r0, [r1, #0]
 801f460:	e8bd 83f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, pc}
 801f464:	4684      	mov	ip, r0
 801f466:	e7a6      	b.n	801f3b6 <_ZNK8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtssiihh+0x34>
 801f468:	4607      	mov	r7, r0
 801f46a:	4684      	mov	ip, r0
 801f46c:	e7ab      	b.n	801f3c6 <_ZNK8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtssiihh+0x44>
 801f46e:	4607      	mov	r7, r0
 801f470:	e7a9      	b.n	801f3c6 <_ZNK8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtssiihh+0x44>
 801f472:	4602      	mov	r2, r0
 801f474:	e7b4      	b.n	801f3e0 <_ZNK8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtssiihh+0x5e>
 801f476:	4602      	mov	r2, r0
 801f478:	e7ba      	b.n	801f3f0 <_ZNK8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtssiihh+0x6e>

0801f47a <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff>:
 801f47a:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 801f47e:	b08f      	sub	sp, #60	@ 0x3c
 801f480:	461d      	mov	r5, r3
 801f482:	9b1d      	ldr	r3, [sp, #116]	@ 0x74
 801f484:	920c      	str	r2, [sp, #48]	@ 0x30
 801f486:	e9dd 271e 	ldrd	r2, r7, [sp, #120]	@ 0x78
 801f48a:	9107      	str	r1, [sp, #28]
 801f48c:	6859      	ldr	r1, [r3, #4]
 801f48e:	681b      	ldr	r3, [r3, #0]
 801f490:	900d      	str	r0, [sp, #52]	@ 0x34
 801f492:	fb01 2707 	mla	r7, r1, r7, r2
 801f496:	eb03 0747 	add.w	r7, r3, r7, lsl #1
 801f49a:	9b20      	ldr	r3, [sp, #128]	@ 0x80
 801f49c:	e9dd 4619 	ldrd	r4, r6, [sp, #100]	@ 0x64
 801f4a0:	f8d3 8000 	ldr.w	r8, [r3]
 801f4a4:	9b07      	ldr	r3, [sp, #28]
 801f4a6:	2b00      	cmp	r3, #0
 801f4a8:	dc03      	bgt.n	801f4b2 <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x38>
 801f4aa:	9b0c      	ldr	r3, [sp, #48]	@ 0x30
 801f4ac:	2b00      	cmp	r3, #0
 801f4ae:	f340 8181 	ble.w	801f7b4 <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x33a>
 801f4b2:	9b20      	ldr	r3, [sp, #128]	@ 0x80
 801f4b4:	f9b3 1008 	ldrsh.w	r1, [r3, #8]
 801f4b8:	f9b3 200c 	ldrsh.w	r2, [r3, #12]
 801f4bc:	1e48      	subs	r0, r1, #1
 801f4be:	f102 3cff 	add.w	ip, r2, #4294967295
 801f4c2:	2d00      	cmp	r5, #0
 801f4c4:	f340 809b 	ble.w	801f5fe <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x184>
 801f4c8:	ea5f 4e24 	movs.w	lr, r4, asr #16
 801f4cc:	ea4f 4326 	mov.w	r3, r6, asr #16
 801f4d0:	d406      	bmi.n	801f4e0 <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x66>
 801f4d2:	4586      	cmp	lr, r0
 801f4d4:	da04      	bge.n	801f4e0 <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x66>
 801f4d6:	2b00      	cmp	r3, #0
 801f4d8:	db02      	blt.n	801f4e0 <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x66>
 801f4da:	4563      	cmp	r3, ip
 801f4dc:	f2c0 8090 	blt.w	801f600 <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x186>
 801f4e0:	f11e 0e01 	adds.w	lr, lr, #1
 801f4e4:	f100 8084 	bmi.w	801f5f0 <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x176>
 801f4e8:	4571      	cmp	r1, lr
 801f4ea:	f2c0 8081 	blt.w	801f5f0 <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x176>
 801f4ee:	3301      	adds	r3, #1
 801f4f0:	d47e      	bmi.n	801f5f0 <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x176>
 801f4f2:	429a      	cmp	r2, r3
 801f4f4:	db7c      	blt.n	801f5f0 <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x176>
 801f4f6:	46aa      	mov	sl, r5
 801f4f8:	46b9      	mov	r9, r7
 801f4fa:	f1ba 0f00 	cmp.w	sl, #0
 801f4fe:	f340 8099 	ble.w	801f634 <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1ba>
 801f502:	9b20      	ldr	r3, [sp, #128]	@ 0x80
 801f504:	1421      	asrs	r1, r4, #16
 801f506:	ea4f 4026 	mov.w	r0, r6, asr #16
 801f50a:	f3c4 3203 	ubfx	r2, r4, #12, #4
 801f50e:	f3c6 3c03 	ubfx	ip, r6, #12, #4
 801f512:	e9d3 e302 	ldrd	lr, r3, [r3, #8]
 801f516:	f100 80d0 	bmi.w	801f6ba <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x240>
 801f51a:	f10e 3bff 	add.w	fp, lr, #4294967295
 801f51e:	4559      	cmp	r1, fp
 801f520:	f280 80cb 	bge.w	801f6ba <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x240>
 801f524:	2800      	cmp	r0, #0
 801f526:	f2c0 80c8 	blt.w	801f6ba <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x240>
 801f52a:	f103 3bff 	add.w	fp, r3, #4294967295
 801f52e:	4558      	cmp	r0, fp
 801f530:	f280 80c3 	bge.w	801f6ba <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x240>
 801f534:	fa0f fe8e 	sxth.w	lr, lr
 801f538:	fb00 110e 	mla	r1, r0, lr, r1
 801f53c:	eb08 0041 	add.w	r0, r8, r1, lsl #1
 801f540:	f838 b011 	ldrh.w	fp, [r8, r1, lsl #1]
 801f544:	8841      	ldrh	r1, [r0, #2]
 801f546:	f1bc 0f00 	cmp.w	ip, #0
 801f54a:	d00b      	beq.n	801f564 <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xea>
 801f54c:	f10e 4300 	add.w	r3, lr, #2147483648	@ 0x80000000
 801f550:	3b01      	subs	r3, #1
 801f552:	005b      	lsls	r3, r3, #1
 801f554:	3302      	adds	r3, #2
 801f556:	eb00 0e03 	add.w	lr, r0, r3
 801f55a:	5ac3      	ldrh	r3, [r0, r3]
 801f55c:	9308      	str	r3, [sp, #32]
 801f55e:	f8be 3002 	ldrh.w	r3, [lr, #2]
 801f562:	9309      	str	r3, [sp, #36]	@ 0x24
 801f564:	ea4f 400b 	mov.w	r0, fp, lsl #16
 801f568:	f000 60fc 	and.w	r0, r0, #132120576	@ 0x7e00000
 801f56c:	f42b 6bfc 	bic.w	fp, fp, #2016	@ 0x7e0
 801f570:	ea40 000b 	orr.w	r0, r0, fp
 801f574:	fb12 f30c 	smulbb	r3, r2, ip
 801f578:	ea4f 4b01 	mov.w	fp, r1, lsl #16
 801f57c:	10db      	asrs	r3, r3, #3
 801f57e:	f1cc 0e10 	rsb	lr, ip, #16
 801f582:	f00b 6bfc 	and.w	fp, fp, #132120576	@ 0x7e00000
 801f586:	f421 61fc 	bic.w	r1, r1, #2016	@ 0x7e0
 801f58a:	ebae 0e02 	sub.w	lr, lr, r2
 801f58e:	ea4b 0101 	orr.w	r1, fp, r1
 801f592:	ebc3 0242 	rsb	r2, r3, r2, lsl #1
 801f596:	4351      	muls	r1, r2
 801f598:	9a09      	ldr	r2, [sp, #36]	@ 0x24
 801f59a:	eb03 0e4e 	add.w	lr, r3, lr, lsl #1
 801f59e:	fb0e 1e00 	mla	lr, lr, r0, r1
 801f5a2:	0410      	lsls	r0, r2, #16
 801f5a4:	f000 60fc 	and.w	r0, r0, #132120576	@ 0x7e00000
 801f5a8:	f422 62fc 	bic.w	r2, r2, #2016	@ 0x7e0
 801f5ac:	4310      	orrs	r0, r2
 801f5ae:	9a08      	ldr	r2, [sp, #32]
 801f5b0:	9908      	ldr	r1, [sp, #32]
 801f5b2:	0412      	lsls	r2, r2, #16
 801f5b4:	fb03 e000 	mla	r0, r3, r0, lr
 801f5b8:	f002 62fc 	and.w	r2, r2, #132120576	@ 0x7e00000
 801f5bc:	f421 6efc 	bic.w	lr, r1, #2016	@ 0x7e0
 801f5c0:	ea42 020e 	orr.w	r2, r2, lr
 801f5c4:	ebc3 034c 	rsb	r3, r3, ip, lsl #1
 801f5c8:	fb03 0302 	mla	r3, r3, r2, r0
 801f5cc:	0d5a      	lsrs	r2, r3, #21
 801f5ce:	095b      	lsrs	r3, r3, #5
 801f5d0:	f402 62fc 	and.w	r2, r2, #2016	@ 0x7e0
 801f5d4:	f423 63fc 	bic.w	r3, r3, #2016	@ 0x7e0
 801f5d8:	4313      	orrs	r3, r2
 801f5da:	f8a9 3000 	strh.w	r3, [r9]
 801f5de:	9b1b      	ldr	r3, [sp, #108]	@ 0x6c
 801f5e0:	441c      	add	r4, r3
 801f5e2:	9b1c      	ldr	r3, [sp, #112]	@ 0x70
 801f5e4:	f109 0902 	add.w	r9, r9, #2
 801f5e8:	441e      	add	r6, r3
 801f5ea:	f10a 3aff 	add.w	sl, sl, #4294967295
 801f5ee:	e784      	b.n	801f4fa <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x80>
 801f5f0:	9b1b      	ldr	r3, [sp, #108]	@ 0x6c
 801f5f2:	441c      	add	r4, r3
 801f5f4:	9b1c      	ldr	r3, [sp, #112]	@ 0x70
 801f5f6:	3d01      	subs	r5, #1
 801f5f8:	441e      	add	r6, r3
 801f5fa:	3702      	adds	r7, #2
 801f5fc:	e761      	b.n	801f4c2 <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x48>
 801f5fe:	d01d      	beq.n	801f63c <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1c2>
 801f600:	981b      	ldr	r0, [sp, #108]	@ 0x6c
 801f602:	1e6b      	subs	r3, r5, #1
 801f604:	fb00 4003 	mla	r0, r0, r3, r4
 801f608:	1400      	asrs	r0, r0, #16
 801f60a:	f53f af74 	bmi.w	801f4f6 <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x7c>
 801f60e:	3901      	subs	r1, #1
 801f610:	4288      	cmp	r0, r1
 801f612:	f6bf af70 	bge.w	801f4f6 <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x7c>
 801f616:	991c      	ldr	r1, [sp, #112]	@ 0x70
 801f618:	fb01 6303 	mla	r3, r1, r3, r6
 801f61c:	141b      	asrs	r3, r3, #16
 801f61e:	f53f af6a 	bmi.w	801f4f6 <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x7c>
 801f622:	3a01      	subs	r2, #1
 801f624:	4293      	cmp	r3, r2
 801f626:	f6bf af66 	bge.w	801f4f6 <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x7c>
 801f62a:	46a9      	mov	r9, r5
 801f62c:	46ba      	mov	sl, r7
 801f62e:	f1b9 0f00 	cmp.w	r9, #0
 801f632:	dc5a      	bgt.n	801f6ea <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x270>
 801f634:	ea25 75e5 	bic.w	r5, r5, r5, asr #31
 801f638:	eb07 0745 	add.w	r7, r7, r5, lsl #1
 801f63c:	9b07      	ldr	r3, [sp, #28]
 801f63e:	2b00      	cmp	r3, #0
 801f640:	f340 80b8 	ble.w	801f7b4 <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x33a>
 801f644:	ee30 0a04 	vadd.f32	s0, s0, s8
 801f648:	eeb7 7a00 	vmov.f32	s14, #112	@ 0x3f800000  1.0
 801f64c:	eec7 7a00 	vdiv.f32	s15, s14, s0
 801f650:	9b18      	ldr	r3, [sp, #96]	@ 0x60
 801f652:	ee70 0aa4 	vadd.f32	s1, s1, s9
 801f656:	ee31 1a05 	vadd.f32	s2, s2, s10
 801f65a:	ee20 7aa7 	vmul.f32	s14, s1, s15
 801f65e:	eef0 6a62 	vmov.f32	s13, s5
 801f662:	ee61 7a27 	vmul.f32	s15, s2, s15
 801f666:	eefe 6ac8 	vcvt.s32.f32	s13, s13, #16
 801f66a:	ee77 2a62 	vsub.f32	s5, s14, s5
 801f66e:	ee16 4a90 	vmov	r4, s13
 801f672:	eefe 2ac8 	vcvt.s32.f32	s5, s5, #16
 801f676:	eef0 6a43 	vmov.f32	s13, s6
 801f67a:	ee37 3ac3 	vsub.f32	s6, s15, s6
 801f67e:	ee12 2a90 	vmov	r2, s5
 801f682:	eebe 3ac8 	vcvt.s32.f32	s6, s6, #16
 801f686:	fb92 f3f3 	sdiv	r3, r2, r3
 801f68a:	ee13 2a10 	vmov	r2, s6
 801f68e:	931b      	str	r3, [sp, #108]	@ 0x6c
 801f690:	9b18      	ldr	r3, [sp, #96]	@ 0x60
 801f692:	fb92 f3f3 	sdiv	r3, r2, r3
 801f696:	931c      	str	r3, [sp, #112]	@ 0x70
 801f698:	9b07      	ldr	r3, [sp, #28]
 801f69a:	9a0c      	ldr	r2, [sp, #48]	@ 0x30
 801f69c:	3b01      	subs	r3, #1
 801f69e:	eefe 6ac8 	vcvt.s32.f32	s13, s13, #16
 801f6a2:	9307      	str	r3, [sp, #28]
 801f6a4:	9b18      	ldr	r3, [sp, #96]	@ 0x60
 801f6a6:	ee16 6a90 	vmov	r6, s13
 801f6aa:	bf14      	ite	ne
 801f6ac:	461d      	movne	r5, r3
 801f6ae:	4615      	moveq	r5, r2
 801f6b0:	eeb0 3a67 	vmov.f32	s6, s15
 801f6b4:	eef0 2a47 	vmov.f32	s5, s14
 801f6b8:	e6f4      	b.n	801f4a4 <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2a>
 801f6ba:	f111 0b01 	adds.w	fp, r1, #1
 801f6be:	d48e      	bmi.n	801f5de <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x164>
 801f6c0:	45de      	cmp	lr, fp
 801f6c2:	db8c      	blt.n	801f5de <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x164>
 801f6c4:	f110 0b01 	adds.w	fp, r0, #1
 801f6c8:	d489      	bmi.n	801f5de <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x164>
 801f6ca:	455b      	cmp	r3, fp
 801f6cc:	db87      	blt.n	801f5de <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x164>
 801f6ce:	b21b      	sxth	r3, r3
 801f6d0:	e9cd 1001 	strd	r1, r0, [sp, #4]
 801f6d4:	e9cd 2c03 	strd	r2, ip, [sp, #12]
 801f6d8:	9300      	str	r3, [sp, #0]
 801f6da:	4642      	mov	r2, r8
 801f6dc:	fa0f f38e 	sxth.w	r3, lr
 801f6e0:	4649      	mov	r1, r9
 801f6e2:	980d      	ldr	r0, [sp, #52]	@ 0x34
 801f6e4:	f7ff fe4d 	bl	801f382 <_ZNK8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtssiihh>
 801f6e8:	e779      	b.n	801f5de <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x164>
 801f6ea:	9b20      	ldr	r3, [sp, #128]	@ 0x80
 801f6ec:	f9b3 3008 	ldrsh.w	r3, [r3, #8]
 801f6f0:	1420      	asrs	r0, r4, #16
 801f6f2:	1431      	asrs	r1, r6, #16
 801f6f4:	fb03 0101 	mla	r1, r3, r1, r0
 801f6f8:	eb08 0041 	add.w	r0, r8, r1, lsl #1
 801f6fc:	f3c6 3e03 	ubfx	lr, r6, #12, #4
 801f700:	f838 c011 	ldrh.w	ip, [r8, r1, lsl #1]
 801f704:	8841      	ldrh	r1, [r0, #2]
 801f706:	f3c4 3203 	ubfx	r2, r4, #12, #4
 801f70a:	f1be 0f00 	cmp.w	lr, #0
 801f70e:	d00b      	beq.n	801f728 <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2ae>
 801f710:	f103 4300 	add.w	r3, r3, #2147483648	@ 0x80000000
 801f714:	3b01      	subs	r3, #1
 801f716:	005b      	lsls	r3, r3, #1
 801f718:	3302      	adds	r3, #2
 801f71a:	eb00 0b03 	add.w	fp, r0, r3
 801f71e:	5ac3      	ldrh	r3, [r0, r3]
 801f720:	930a      	str	r3, [sp, #40]	@ 0x28
 801f722:	f8bb 3002 	ldrh.w	r3, [fp, #2]
 801f726:	930b      	str	r3, [sp, #44]	@ 0x2c
 801f728:	ea4f 400c 	mov.w	r0, ip, lsl #16
 801f72c:	fb12 f30e 	smulbb	r3, r2, lr
 801f730:	f42c 6cfc 	bic.w	ip, ip, #2016	@ 0x7e0
 801f734:	ea4f 4b01 	mov.w	fp, r1, lsl #16
 801f738:	f000 60fc 	and.w	r0, r0, #132120576	@ 0x7e00000
 801f73c:	10db      	asrs	r3, r3, #3
 801f73e:	ea40 000c 	orr.w	r0, r0, ip
 801f742:	f00b 6bfc 	and.w	fp, fp, #132120576	@ 0x7e00000
 801f746:	f1ce 0c10 	rsb	ip, lr, #16
 801f74a:	f421 61fc 	bic.w	r1, r1, #2016	@ 0x7e0
 801f74e:	ebac 0c02 	sub.w	ip, ip, r2
 801f752:	ea4b 0101 	orr.w	r1, fp, r1
 801f756:	ebc3 0242 	rsb	r2, r3, r2, lsl #1
 801f75a:	4351      	muls	r1, r2
 801f75c:	9a0b      	ldr	r2, [sp, #44]	@ 0x2c
 801f75e:	eb03 0c4c 	add.w	ip, r3, ip, lsl #1
 801f762:	fb0c 1c00 	mla	ip, ip, r0, r1
 801f766:	ea4f 4b02 	mov.w	fp, r2, lsl #16
 801f76a:	f422 60fc 	bic.w	r0, r2, #2016	@ 0x7e0
 801f76e:	9a0a      	ldr	r2, [sp, #40]	@ 0x28
 801f770:	990a      	ldr	r1, [sp, #40]	@ 0x28
 801f772:	f00b 6bfc 	and.w	fp, fp, #132120576	@ 0x7e00000
 801f776:	0412      	lsls	r2, r2, #16
 801f778:	ea4b 0000 	orr.w	r0, fp, r0
 801f77c:	f002 62fc 	and.w	r2, r2, #132120576	@ 0x7e00000
 801f780:	f421 6bfc 	bic.w	fp, r1, #2016	@ 0x7e0
 801f784:	fb03 c000 	mla	r0, r3, r0, ip
 801f788:	ea42 0b0b 	orr.w	fp, r2, fp
 801f78c:	ebc3 034e 	rsb	r3, r3, lr, lsl #1
 801f790:	fb03 000b 	mla	r0, r3, fp, r0
 801f794:	0d43      	lsrs	r3, r0, #21
 801f796:	0940      	lsrs	r0, r0, #5
 801f798:	f403 63fc 	and.w	r3, r3, #2016	@ 0x7e0
 801f79c:	f420 60fc 	bic.w	r0, r0, #2016	@ 0x7e0
 801f7a0:	4318      	orrs	r0, r3
 801f7a2:	9b1b      	ldr	r3, [sp, #108]	@ 0x6c
 801f7a4:	f82a 0b02 	strh.w	r0, [sl], #2
 801f7a8:	441c      	add	r4, r3
 801f7aa:	9b1c      	ldr	r3, [sp, #112]	@ 0x70
 801f7ac:	f109 39ff 	add.w	r9, r9, #4294967295
 801f7b0:	441e      	add	r6, r3
 801f7b2:	e73c      	b.n	801f62e <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1b4>
 801f7b4:	b00f      	add	sp, #60	@ 0x3c
 801f7b6:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}

0801f7ba <_ZNK8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKmssiihhh>:
 801f7ba:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 801f7be:	b085      	sub	sp, #20
 801f7c0:	e9dd 740f 	ldrd	r7, r4, [sp, #60]	@ 0x3c
 801f7c4:	9102      	str	r1, [sp, #8]
 801f7c6:	2c00      	cmp	r4, #0
 801f7c8:	fb04 7103 	mla	r1, r4, r3, r7
 801f7cc:	f9bd e038 	ldrsh.w	lr, [sp, #56]	@ 0x38
 801f7d0:	f89d 6044 	ldrb.w	r6, [sp, #68]	@ 0x44
 801f7d4:	f89d 0048 	ldrb.w	r0, [sp, #72]	@ 0x48
 801f7d8:	eb02 0c81 	add.w	ip, r2, r1, lsl #2
 801f7dc:	f2c0 811b 	blt.w	801fa16 <_ZNK8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKmssiihhh+0x25c>
 801f7e0:	45a6      	cmp	lr, r4
 801f7e2:	f340 8118 	ble.w	801fa16 <_ZNK8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKmssiihhh+0x25c>
 801f7e6:	2f00      	cmp	r7, #0
 801f7e8:	f2c0 8113 	blt.w	801fa12 <_ZNK8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKmssiihhh+0x258>
 801f7ec:	42bb      	cmp	r3, r7
 801f7ee:	f340 8110 	ble.w	801fa12 <_ZNK8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKmssiihhh+0x258>
 801f7f2:	f852 5021 	ldr.w	r5, [r2, r1, lsl #2]
 801f7f6:	1c7a      	adds	r2, r7, #1
 801f7f8:	f100 8110 	bmi.w	801fa1c <_ZNK8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKmssiihhh+0x262>
 801f7fc:	4293      	cmp	r3, r2
 801f7fe:	f340 810d 	ble.w	801fa1c <_ZNK8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKmssiihhh+0x262>
 801f802:	2e00      	cmp	r6, #0
 801f804:	f000 810c 	beq.w	801fa20 <_ZNK8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKmssiihhh+0x266>
 801f808:	f8dc 1004 	ldr.w	r1, [ip, #4]
 801f80c:	3401      	adds	r4, #1
 801f80e:	f100 810b 	bmi.w	801fa28 <_ZNK8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKmssiihhh+0x26e>
 801f812:	45a6      	cmp	lr, r4
 801f814:	f340 8108 	ble.w	801fa28 <_ZNK8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKmssiihhh+0x26e>
 801f818:	2800      	cmp	r0, #0
 801f81a:	f000 8108 	beq.w	801fa2e <_ZNK8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKmssiihhh+0x274>
 801f81e:	2f00      	cmp	r7, #0
 801f820:	f2c0 8100 	blt.w	801fa24 <_ZNK8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKmssiihhh+0x26a>
 801f824:	42bb      	cmp	r3, r7
 801f826:	f340 80fd 	ble.w	801fa24 <_ZNK8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKmssiihhh+0x26a>
 801f82a:	f85c 4023 	ldr.w	r4, [ip, r3, lsl #2]
 801f82e:	3701      	adds	r7, #1
 801f830:	f100 8100 	bmi.w	801fa34 <_ZNK8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKmssiihhh+0x27a>
 801f834:	42bb      	cmp	r3, r7
 801f836:	f340 80fd 	ble.w	801fa34 <_ZNK8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKmssiihhh+0x27a>
 801f83a:	2e00      	cmp	r6, #0
 801f83c:	f000 80fc 	beq.w	801fa38 <_ZNK8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKmssiihhh+0x27e>
 801f840:	3301      	adds	r3, #1
 801f842:	f85c 2023 	ldr.w	r2, [ip, r3, lsl #2]
 801f846:	b2b6      	uxth	r6, r6
 801f848:	b280      	uxth	r0, r0
 801f84a:	fb00 fe06 	mul.w	lr, r0, r6
 801f84e:	ebce 1000 	rsb	r0, lr, r0, lsl #4
 801f852:	0136      	lsls	r6, r6, #4
 801f854:	eba6 070e 	sub.w	r7, r6, lr
 801f858:	b280      	uxth	r0, r0
 801f85a:	f5c6 7380 	rsb	r3, r6, #256	@ 0x100
 801f85e:	ea4f 6a11 	mov.w	sl, r1, lsr #24
 801f862:	b2bf      	uxth	r7, r7
 801f864:	1a1b      	subs	r3, r3, r0
 801f866:	ea4f 6b15 	mov.w	fp, r5, lsr #24
 801f86a:	b29b      	uxth	r3, r3
 801f86c:	fb0a f607 	mul.w	r6, sl, r7
 801f870:	ea4f 6914 	mov.w	r9, r4, lsr #24
 801f874:	fb0b 6603 	mla	r6, fp, r3, r6
 801f878:	ea4f 6812 	mov.w	r8, r2, lsr #24
 801f87c:	fb00 6609 	mla	r6, r0, r9, r6
 801f880:	fb0e 6608 	mla	r6, lr, r8, r6
 801f884:	f3c6 2607 	ubfx	r6, r6, #8, #8
 801f888:	9600      	str	r6, [sp, #0]
 801f88a:	2e00      	cmp	r6, #0
 801f88c:	f000 80be 	beq.w	801fa0c <_ZNK8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKmssiihhh+0x252>
 801f890:	f005 1cff 	and.w	ip, r5, #16711935	@ 0xff00ff
 801f894:	fb0b fc0c 	mul.w	ip, fp, ip
 801f898:	f405 457f 	and.w	r5, r5, #65280	@ 0xff00
 801f89c:	fb0b f505 	mul.w	r5, fp, r5
 801f8a0:	ea4f 2b1c 	mov.w	fp, ip, lsr #8
 801f8a4:	f00b 1bff 	and.w	fp, fp, #16711935	@ 0xff00ff
 801f8a8:	f10c 1c01 	add.w	ip, ip, #65537	@ 0x10001
 801f8ac:	44dc      	add	ip, fp
 801f8ae:	ea4f 2c1c 	mov.w	ip, ip, lsr #8
 801f8b2:	9501      	str	r5, [sp, #4]
 801f8b4:	f00c 15ff 	and.w	r5, ip, #16711935	@ 0xff00ff
 801f8b8:	9503      	str	r5, [sp, #12]
 801f8ba:	9d01      	ldr	r5, [sp, #4]
 801f8bc:	9e02      	ldr	r6, [sp, #8]
 801f8be:	f505 7c80 	add.w	ip, r5, #256	@ 0x100
 801f8c2:	eb0c 2515 	add.w	r5, ip, r5, lsr #8
 801f8c6:	f001 1cff 	and.w	ip, r1, #16711935	@ 0xff00ff
 801f8ca:	fb0a fc0c 	mul.w	ip, sl, ip
 801f8ce:	ea4f 2b15 	mov.w	fp, r5, lsr #8
 801f8d2:	ea4f 251c 	mov.w	r5, ip, lsr #8
 801f8d6:	f005 15ff 	and.w	r5, r5, #16711935	@ 0xff00ff
 801f8da:	f10c 1c01 	add.w	ip, ip, #65537	@ 0x10001
 801f8de:	4465      	add	r5, ip
 801f8e0:	f004 1cff 	and.w	ip, r4, #16711935	@ 0xff00ff
 801f8e4:	f404 447f 	and.w	r4, r4, #65280	@ 0xff00
 801f8e8:	fb09 fc0c 	mul.w	ip, r9, ip
 801f8ec:	fb09 f904 	mul.w	r9, r9, r4
 801f8f0:	f509 7480 	add.w	r4, r9, #256	@ 0x100
 801f8f4:	eb04 2919 	add.w	r9, r4, r9, lsr #8
 801f8f8:	f002 14ff 	and.w	r4, r2, #16711935	@ 0xff00ff
 801f8fc:	fb08 f404 	mul.w	r4, r8, r4
 801f900:	f401 417f 	and.w	r1, r1, #65280	@ 0xff00
 801f904:	f402 427f 	and.w	r2, r2, #65280	@ 0xff00
 801f908:	fb08 f802 	mul.w	r8, r8, r2
 801f90c:	fb0a fa01 	mul.w	sl, sl, r1
 801f910:	0a22      	lsrs	r2, r4, #8
 801f912:	f50a 7180 	add.w	r1, sl, #256	@ 0x100
 801f916:	f002 12ff 	and.w	r2, r2, #16711935	@ 0xff00ff
 801f91a:	f104 1401 	add.w	r4, r4, #65537	@ 0x10001
 801f91e:	eb01 2a1a 	add.w	sl, r1, sl, lsr #8
 801f922:	4414      	add	r4, r2
 801f924:	ea4f 211c 	mov.w	r1, ip, lsr #8
 801f928:	f508 7280 	add.w	r2, r8, #256	@ 0x100
 801f92c:	0a2d      	lsrs	r5, r5, #8
 801f92e:	eb02 2818 	add.w	r8, r2, r8, lsr #8
 801f932:	f005 15ff 	and.w	r5, r5, #16711935	@ 0xff00ff
 801f936:	9a03      	ldr	r2, [sp, #12]
 801f938:	8836      	ldrh	r6, [r6, #0]
 801f93a:	f001 11ff 	and.w	r1, r1, #16711935	@ 0xff00ff
 801f93e:	f10c 1c01 	add.w	ip, ip, #65537	@ 0x10001
 801f942:	437d      	muls	r5, r7
 801f944:	4461      	add	r1, ip
 801f946:	0a24      	lsrs	r4, r4, #8
 801f948:	fb02 5503 	mla	r5, r2, r3, r5
 801f94c:	0a09      	lsrs	r1, r1, #8
 801f94e:	f004 14ff 	and.w	r4, r4, #16711935	@ 0xff00ff
 801f952:	fb04 540e 	mla	r4, r4, lr, r5
 801f956:	f001 11ff 	and.w	r1, r1, #16711935	@ 0xff00ff
 801f95a:	fb01 4100 	mla	r1, r1, r0, r4
 801f95e:	ea4f 2a1a 	mov.w	sl, sl, lsr #8
 801f962:	0a09      	lsrs	r1, r1, #8
 801f964:	f40a 4a7f 	and.w	sl, sl, #65280	@ 0xff00
 801f968:	f001 14ff 	and.w	r4, r1, #16711935	@ 0xff00ff
 801f96c:	fb07 f70a 	mul.w	r7, r7, sl
 801f970:	ea4f 2818 	mov.w	r8, r8, lsr #8
 801f974:	f40b 417f 	and.w	r1, fp, #65280	@ 0xff00
 801f978:	fb03 7101 	mla	r1, r3, r1, r7
 801f97c:	ea4f 2919 	mov.w	r9, r9, lsr #8
 801f980:	f408 487f 	and.w	r8, r8, #65280	@ 0xff00
 801f984:	fb0e 1e08 	mla	lr, lr, r8, r1
 801f988:	f409 417f 	and.w	r1, r9, #65280	@ 0xff00
 801f98c:	fb00 e101 	mla	r1, r0, r1, lr
 801f990:	f89d 004c 	ldrb.w	r0, [sp, #76]	@ 0x4c
 801f994:	9a00      	ldr	r2, [sp, #0]
 801f996:	b287      	uxth	r7, r0
 801f998:	437a      	muls	r2, r7
 801f99a:	0a09      	lsrs	r1, r1, #8
 801f99c:	1c53      	adds	r3, r2, #1
 801f99e:	f401 417f 	and.w	r1, r1, #65280	@ 0xff00
 801f9a2:	4321      	orrs	r1, r4
 801f9a4:	eb03 2312 	add.w	r3, r3, r2, lsr #8
 801f9a8:	1235      	asrs	r5, r6, #8
 801f9aa:	0c0a      	lsrs	r2, r1, #16
 801f9ac:	ea6f 2313 	mvn.w	r3, r3, lsr #8
 801f9b0:	b2db      	uxtb	r3, r3
 801f9b2:	fb12 f207 	smulbb	r2, r2, r7
 801f9b6:	f005 05f8 	and.w	r5, r5, #248	@ 0xf8
 801f9ba:	fb05 2503 	mla	r5, r5, r3, r2
 801f9be:	f3c1 2407 	ubfx	r4, r1, #8, #8
 801f9c2:	10f2      	asrs	r2, r6, #3
 801f9c4:	b2c8      	uxtb	r0, r1
 801f9c6:	00f6      	lsls	r6, r6, #3
 801f9c8:	fb14 f407 	smulbb	r4, r4, r7
 801f9cc:	f002 02fc 	and.w	r2, r2, #252	@ 0xfc
 801f9d0:	b2f6      	uxtb	r6, r6
 801f9d2:	fb10 f007 	smulbb	r0, r0, r7
 801f9d6:	fb02 4203 	mla	r2, r2, r3, r4
 801f9da:	b2ad      	uxth	r5, r5
 801f9dc:	fb06 0303 	mla	r3, r6, r3, r0
 801f9e0:	b299      	uxth	r1, r3
 801f9e2:	b294      	uxth	r4, r2
 801f9e4:	1c6b      	adds	r3, r5, #1
 801f9e6:	eb03 2515 	add.w	r5, r3, r5, lsr #8
 801f9ea:	1c62      	adds	r2, r4, #1
 801f9ec:	1c4b      	adds	r3, r1, #1
 801f9ee:	eb03 2311 	add.w	r3, r3, r1, lsr #8
 801f9f2:	eb02 2214 	add.w	r2, r2, r4, lsr #8
 801f9f6:	f405 4578 	and.w	r5, r5, #63488	@ 0xf800
 801f9fa:	f3c3 23c4 	ubfx	r3, r3, #11, #5
 801f9fe:	0952      	lsrs	r2, r2, #5
 801fa00:	f402 62fc 	and.w	r2, r2, #2016	@ 0x7e0
 801fa04:	432b      	orrs	r3, r5
 801fa06:	4313      	orrs	r3, r2
 801fa08:	9a02      	ldr	r2, [sp, #8]
 801fa0a:	8013      	strh	r3, [r2, #0]
 801fa0c:	b005      	add	sp, #20
 801fa0e:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 801fa12:	2500      	movs	r5, #0
 801fa14:	e6ef      	b.n	801f7f6 <_ZNK8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKmssiihhh+0x3c>
 801fa16:	2100      	movs	r1, #0
 801fa18:	460d      	mov	r5, r1
 801fa1a:	e6f7      	b.n	801f80c <_ZNK8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKmssiihhh+0x52>
 801fa1c:	2100      	movs	r1, #0
 801fa1e:	e6f5      	b.n	801f80c <_ZNK8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKmssiihhh+0x52>
 801fa20:	4631      	mov	r1, r6
 801fa22:	e6f3      	b.n	801f80c <_ZNK8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKmssiihhh+0x52>
 801fa24:	2400      	movs	r4, #0
 801fa26:	e702      	b.n	801f82e <_ZNK8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKmssiihhh+0x74>
 801fa28:	2200      	movs	r2, #0
 801fa2a:	4614      	mov	r4, r2
 801fa2c:	e70b      	b.n	801f846 <_ZNK8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKmssiihhh+0x8c>
 801fa2e:	4602      	mov	r2, r0
 801fa30:	4604      	mov	r4, r0
 801fa32:	e708      	b.n	801f846 <_ZNK8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKmssiihhh+0x8c>
 801fa34:	2200      	movs	r2, #0
 801fa36:	e706      	b.n	801f846 <_ZNK8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKmssiihhh+0x8c>
 801fa38:	4632      	mov	r2, r6
 801fa3a:	e704      	b.n	801f846 <_ZNK8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKmssiihhh+0x8c>

0801fa3c <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff>:
 801fa3c:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 801fa40:	b09d      	sub	sp, #116	@ 0x74
 801fa42:	e9dd 4627 	ldrd	r4, r6, [sp, #156]	@ 0x9c
 801fa46:	9219      	str	r2, [sp, #100]	@ 0x64
 801fa48:	9307      	str	r3, [sp, #28]
 801fa4a:	9a2b      	ldr	r2, [sp, #172]	@ 0xac
 801fa4c:	f89d 30bc 	ldrb.w	r3, [sp, #188]	@ 0xbc
 801fa50:	931a      	str	r3, [sp, #104]	@ 0x68
 801fa52:	9117      	str	r1, [sp, #92]	@ 0x5c
 801fa54:	e9dd 132c 	ldrd	r1, r3, [sp, #176]	@ 0xb0
 801fa58:	901b      	str	r0, [sp, #108]	@ 0x6c
 801fa5a:	6850      	ldr	r0, [r2, #4]
 801fa5c:	6812      	ldr	r2, [r2, #0]
 801fa5e:	fb00 1303 	mla	r3, r0, r3, r1
 801fa62:	eb02 0343 	add.w	r3, r2, r3, lsl #1
 801fa66:	930a      	str	r3, [sp, #40]	@ 0x28
 801fa68:	9b2e      	ldr	r3, [sp, #184]	@ 0xb8
 801fa6a:	681b      	ldr	r3, [r3, #0]
 801fa6c:	9310      	str	r3, [sp, #64]	@ 0x40
 801fa6e:	f8bd 3068 	ldrh.w	r3, [sp, #104]	@ 0x68
 801fa72:	930b      	str	r3, [sp, #44]	@ 0x2c
 801fa74:	9b17      	ldr	r3, [sp, #92]	@ 0x5c
 801fa76:	2b00      	cmp	r3, #0
 801fa78:	dc03      	bgt.n	801fa82 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x46>
 801fa7a:	9b19      	ldr	r3, [sp, #100]	@ 0x64
 801fa7c:	2b00      	cmp	r3, #0
 801fa7e:	f340 8375 	ble.w	802016c <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x730>
 801fa82:	9b2e      	ldr	r3, [sp, #184]	@ 0xb8
 801fa84:	f9b3 1008 	ldrsh.w	r1, [r3, #8]
 801fa88:	f9b3 200c 	ldrsh.w	r2, [r3, #12]
 801fa8c:	1e48      	subs	r0, r1, #1
 801fa8e:	1e57      	subs	r7, r2, #1
 801fa90:	9b07      	ldr	r3, [sp, #28]
 801fa92:	2b00      	cmp	r3, #0
 801fa94:	f340 818e 	ble.w	801fdb4 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x378>
 801fa98:	ea5f 4c24 	movs.w	ip, r4, asr #16
 801fa9c:	ea4f 4326 	mov.w	r3, r6, asr #16
 801faa0:	d406      	bmi.n	801fab0 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x74>
 801faa2:	4584      	cmp	ip, r0
 801faa4:	da04      	bge.n	801fab0 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x74>
 801faa6:	2b00      	cmp	r3, #0
 801faa8:	db02      	blt.n	801fab0 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x74>
 801faaa:	42bb      	cmp	r3, r7
 801faac:	f2c0 8183 	blt.w	801fdb6 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x37a>
 801fab0:	f11c 0c01 	adds.w	ip, ip, #1
 801fab4:	f100 8173 	bmi.w	801fd9e <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x362>
 801fab8:	4561      	cmp	r1, ip
 801faba:	f2c0 8170 	blt.w	801fd9e <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x362>
 801fabe:	3301      	adds	r3, #1
 801fac0:	f100 816d 	bmi.w	801fd9e <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x362>
 801fac4:	429a      	cmp	r2, r3
 801fac6:	f2c0 816a 	blt.w	801fd9e <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x362>
 801faca:	9b07      	ldr	r3, [sp, #28]
 801facc:	9f0a      	ldr	r7, [sp, #40]	@ 0x28
 801face:	9318      	str	r3, [sp, #96]	@ 0x60
 801fad0:	9b18      	ldr	r3, [sp, #96]	@ 0x60
 801fad2:	2b00      	cmp	r3, #0
 801fad4:	f340 818c 	ble.w	801fdf0 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3b4>
 801fad8:	9a2e      	ldr	r2, [sp, #184]	@ 0xb8
 801fada:	9b2e      	ldr	r3, [sp, #184]	@ 0xb8
 801fadc:	f8d2 e00c 	ldr.w	lr, [r2, #12]
 801fae0:	689b      	ldr	r3, [r3, #8]
 801fae2:	1422      	asrs	r2, r4, #16
 801fae4:	ea4f 4c26 	mov.w	ip, r6, asr #16
 801fae8:	f3c4 3003 	ubfx	r0, r4, #12, #4
 801faec:	f3c6 3103 	ubfx	r1, r6, #12, #4
 801faf0:	f100 81cd 	bmi.w	801fe8e <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x452>
 801faf4:	f103 38ff 	add.w	r8, r3, #4294967295
 801faf8:	4542      	cmp	r2, r8
 801fafa:	f280 81c8 	bge.w	801fe8e <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x452>
 801fafe:	f1bc 0f00 	cmp.w	ip, #0
 801fb02:	f2c0 81c4 	blt.w	801fe8e <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x452>
 801fb06:	f10e 38ff 	add.w	r8, lr, #4294967295
 801fb0a:	45c4      	cmp	ip, r8
 801fb0c:	f280 81bf 	bge.w	801fe8e <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x452>
 801fb10:	b21b      	sxth	r3, r3
 801fb12:	fb0c 2203 	mla	r2, ip, r3, r2
 801fb16:	9d10      	ldr	r5, [sp, #64]	@ 0x40
 801fb18:	eb05 0882 	add.w	r8, r5, r2, lsl #2
 801fb1c:	f855 2022 	ldr.w	r2, [r5, r2, lsl #2]
 801fb20:	ea4f 6e12 	mov.w	lr, r2, lsr #24
 801fb24:	2800      	cmp	r0, #0
 801fb26:	f000 81a9 	beq.w	801fe7c <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x440>
 801fb2a:	f8d8 5004 	ldr.w	r5, [r8, #4]
 801fb2e:	950c      	str	r5, [sp, #48]	@ 0x30
 801fb30:	0e2d      	lsrs	r5, r5, #24
 801fb32:	9513      	str	r5, [sp, #76]	@ 0x4c
 801fb34:	b181      	cbz	r1, 801fb58 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x11c>
 801fb36:	f103 4380 	add.w	r3, r3, #1073741824	@ 0x40000000
 801fb3a:	3b01      	subs	r3, #1
 801fb3c:	009b      	lsls	r3, r3, #2
 801fb3e:	3304      	adds	r3, #4
 801fb40:	eb08 0c03 	add.w	ip, r8, r3
 801fb44:	f858 3003 	ldr.w	r3, [r8, r3]
 801fb48:	9308      	str	r3, [sp, #32]
 801fb4a:	0e1b      	lsrs	r3, r3, #24
 801fb4c:	9311      	str	r3, [sp, #68]	@ 0x44
 801fb4e:	f8dc 3004 	ldr.w	r3, [ip, #4]
 801fb52:	930d      	str	r3, [sp, #52]	@ 0x34
 801fb54:	0e1b      	lsrs	r3, r3, #24
 801fb56:	9314      	str	r3, [sp, #80]	@ 0x50
 801fb58:	b280      	uxth	r0, r0
 801fb5a:	b289      	uxth	r1, r1
 801fb5c:	fb00 f901 	mul.w	r9, r0, r1
 801fb60:	ebc9 1101 	rsb	r1, r9, r1, lsl #4
 801fb64:	0100      	lsls	r0, r0, #4
 801fb66:	eba0 0809 	sub.w	r8, r0, r9
 801fb6a:	b289      	uxth	r1, r1
 801fb6c:	f5c0 7380 	rsb	r3, r0, #256	@ 0x100
 801fb70:	9813      	ldr	r0, [sp, #76]	@ 0x4c
 801fb72:	9d11      	ldr	r5, [sp, #68]	@ 0x44
 801fb74:	fa1f f888 	uxth.w	r8, r8
 801fb78:	1a5b      	subs	r3, r3, r1
 801fb7a:	b29b      	uxth	r3, r3
 801fb7c:	fb08 f000 	mul.w	r0, r8, r0
 801fb80:	fb03 000e 	mla	r0, r3, lr, r0
 801fb84:	fb01 0005 	mla	r0, r1, r5, r0
 801fb88:	9d14      	ldr	r5, [sp, #80]	@ 0x50
 801fb8a:	fb09 0005 	mla	r0, r9, r5, r0
 801fb8e:	f3c0 2007 	ubfx	r0, r0, #8, #8
 801fb92:	2800      	cmp	r0, #0
 801fb94:	f000 80fa 	beq.w	801fd8c <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x350>
 801fb98:	f1be 0fff 	cmp.w	lr, #255	@ 0xff
 801fb9c:	d01b      	beq.n	801fbd6 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x19a>
 801fb9e:	f002 1aff 	and.w	sl, r2, #16711935	@ 0xff00ff
 801fba2:	fb0e fa0a 	mul.w	sl, lr, sl
 801fba6:	f402 427f 	and.w	r2, r2, #65280	@ 0xff00
 801fbaa:	fb0e fe02 	mul.w	lr, lr, r2
 801fbae:	ea4f 221a 	mov.w	r2, sl, lsr #8
 801fbb2:	f002 12ff 	and.w	r2, r2, #16711935	@ 0xff00ff
 801fbb6:	f10a 1a01 	add.w	sl, sl, #65537	@ 0x10001
 801fbba:	f50e 7c80 	add.w	ip, lr, #256	@ 0x100
 801fbbe:	4452      	add	r2, sl
 801fbc0:	eb0c 2c1e 	add.w	ip, ip, lr, lsr #8
 801fbc4:	0a12      	lsrs	r2, r2, #8
 801fbc6:	ea4f 2c1c 	mov.w	ip, ip, lsr #8
 801fbca:	f002 12ff 	and.w	r2, r2, #16711935	@ 0xff00ff
 801fbce:	f40c 4c7f 	and.w	ip, ip, #65280	@ 0xff00
 801fbd2:	ea42 020c 	orr.w	r2, r2, ip
 801fbd6:	9d13      	ldr	r5, [sp, #76]	@ 0x4c
 801fbd8:	2dff      	cmp	r5, #255	@ 0xff
 801fbda:	d021      	beq.n	801fc20 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1e4>
 801fbdc:	9d0c      	ldr	r5, [sp, #48]	@ 0x30
 801fbde:	f005 1bff 	and.w	fp, r5, #16711935	@ 0xff00ff
 801fbe2:	9d13      	ldr	r5, [sp, #76]	@ 0x4c
 801fbe4:	fb05 fb0b 	mul.w	fp, r5, fp
 801fbe8:	9d0c      	ldr	r5, [sp, #48]	@ 0x30
 801fbea:	f405 4a7f 	and.w	sl, r5, #65280	@ 0xff00
 801fbee:	9d13      	ldr	r5, [sp, #76]	@ 0x4c
 801fbf0:	ea4f 2e1b 	mov.w	lr, fp, lsr #8
 801fbf4:	fb05 fa0a 	mul.w	sl, r5, sl
 801fbf8:	f00e 1eff 	and.w	lr, lr, #16711935	@ 0xff00ff
 801fbfc:	f10b 1b01 	add.w	fp, fp, #65537	@ 0x10001
 801fc00:	f50a 7c80 	add.w	ip, sl, #256	@ 0x100
 801fc04:	44de      	add	lr, fp
 801fc06:	eb0c 2a1a 	add.w	sl, ip, sl, lsr #8
 801fc0a:	ea4f 2e1e 	mov.w	lr, lr, lsr #8
 801fc0e:	ea4f 2a1a 	mov.w	sl, sl, lsr #8
 801fc12:	f00e 1eff 	and.w	lr, lr, #16711935	@ 0xff00ff
 801fc16:	f40a 4a7f 	and.w	sl, sl, #65280	@ 0xff00
 801fc1a:	ea4e 050a 	orr.w	r5, lr, sl
 801fc1e:	950c      	str	r5, [sp, #48]	@ 0x30
 801fc20:	9d11      	ldr	r5, [sp, #68]	@ 0x44
 801fc22:	2dff      	cmp	r5, #255	@ 0xff
 801fc24:	d021      	beq.n	801fc6a <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x22e>
 801fc26:	9d08      	ldr	r5, [sp, #32]
 801fc28:	f005 1bff 	and.w	fp, r5, #16711935	@ 0xff00ff
 801fc2c:	9d11      	ldr	r5, [sp, #68]	@ 0x44
 801fc2e:	fb05 fb0b 	mul.w	fp, r5, fp
 801fc32:	9d08      	ldr	r5, [sp, #32]
 801fc34:	f405 4a7f 	and.w	sl, r5, #65280	@ 0xff00
 801fc38:	9d11      	ldr	r5, [sp, #68]	@ 0x44
 801fc3a:	ea4f 2e1b 	mov.w	lr, fp, lsr #8
 801fc3e:	fb05 fa0a 	mul.w	sl, r5, sl
 801fc42:	f00e 1eff 	and.w	lr, lr, #16711935	@ 0xff00ff
 801fc46:	f10b 1b01 	add.w	fp, fp, #65537	@ 0x10001
 801fc4a:	f50a 7c80 	add.w	ip, sl, #256	@ 0x100
 801fc4e:	44de      	add	lr, fp
 801fc50:	eb0c 2a1a 	add.w	sl, ip, sl, lsr #8
 801fc54:	ea4f 2e1e 	mov.w	lr, lr, lsr #8
 801fc58:	ea4f 2a1a 	mov.w	sl, sl, lsr #8
 801fc5c:	f00e 1eff 	and.w	lr, lr, #16711935	@ 0xff00ff
 801fc60:	f40a 4a7f 	and.w	sl, sl, #65280	@ 0xff00
 801fc64:	ea4e 050a 	orr.w	r5, lr, sl
 801fc68:	9508      	str	r5, [sp, #32]
 801fc6a:	9d14      	ldr	r5, [sp, #80]	@ 0x50
 801fc6c:	2dff      	cmp	r5, #255	@ 0xff
 801fc6e:	d021      	beq.n	801fcb4 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x278>
 801fc70:	9d0d      	ldr	r5, [sp, #52]	@ 0x34
 801fc72:	f005 1bff 	and.w	fp, r5, #16711935	@ 0xff00ff
 801fc76:	9d14      	ldr	r5, [sp, #80]	@ 0x50
 801fc78:	fb05 fb0b 	mul.w	fp, r5, fp
 801fc7c:	9d0d      	ldr	r5, [sp, #52]	@ 0x34
 801fc7e:	f405 4a7f 	and.w	sl, r5, #65280	@ 0xff00
 801fc82:	9d14      	ldr	r5, [sp, #80]	@ 0x50
 801fc84:	ea4f 2e1b 	mov.w	lr, fp, lsr #8
 801fc88:	fb05 fa0a 	mul.w	sl, r5, sl
 801fc8c:	f00e 1eff 	and.w	lr, lr, #16711935	@ 0xff00ff
 801fc90:	f10b 1b01 	add.w	fp, fp, #65537	@ 0x10001
 801fc94:	f50a 7c80 	add.w	ip, sl, #256	@ 0x100
 801fc98:	44de      	add	lr, fp
 801fc9a:	eb0c 2a1a 	add.w	sl, ip, sl, lsr #8
 801fc9e:	ea4f 2e1e 	mov.w	lr, lr, lsr #8
 801fca2:	ea4f 2a1a 	mov.w	sl, sl, lsr #8
 801fca6:	f00e 1eff 	and.w	lr, lr, #16711935	@ 0xff00ff
 801fcaa:	f40a 4a7f 	and.w	sl, sl, #65280	@ 0xff00
 801fcae:	ea4e 050a 	orr.w	r5, lr, sl
 801fcb2:	950d      	str	r5, [sp, #52]	@ 0x34
 801fcb4:	9d0c      	ldr	r5, [sp, #48]	@ 0x30
 801fcb6:	f005 1cff 	and.w	ip, r5, #16711935	@ 0xff00ff
 801fcba:	9d08      	ldr	r5, [sp, #32]
 801fcbc:	f002 1eff 	and.w	lr, r2, #16711935	@ 0xff00ff
 801fcc0:	fb08 fc0c 	mul.w	ip, r8, ip
 801fcc4:	fb03 cc0e 	mla	ip, r3, lr, ip
 801fcc8:	f005 1eff 	and.w	lr, r5, #16711935	@ 0xff00ff
 801fccc:	9d0d      	ldr	r5, [sp, #52]	@ 0x34
 801fcce:	fb01 cc0e 	mla	ip, r1, lr, ip
 801fcd2:	f005 1eff 	and.w	lr, r5, #16711935	@ 0xff00ff
 801fcd6:	9d0c      	ldr	r5, [sp, #48]	@ 0x30
 801fcd8:	fb09 cc0e 	mla	ip, r9, lr, ip
 801fcdc:	f405 4e7f 	and.w	lr, r5, #65280	@ 0xff00
 801fce0:	fb08 f80e 	mul.w	r8, r8, lr
 801fce4:	f402 427f 	and.w	r2, r2, #65280	@ 0xff00
 801fce8:	fb03 8202 	mla	r2, r3, r2, r8
 801fcec:	9b08      	ldr	r3, [sp, #32]
 801fcee:	9d0b      	ldr	r5, [sp, #44]	@ 0x2c
 801fcf0:	f403 4a7f 	and.w	sl, r3, #65280	@ 0xff00
 801fcf4:	9b0d      	ldr	r3, [sp, #52]	@ 0x34
 801fcf6:	fb01 220a 	mla	r2, r1, sl, r2
 801fcfa:	f403 417f 	and.w	r1, r3, #65280	@ 0xff00
 801fcfe:	fb09 2901 	mla	r9, r9, r1, r2
 801fd02:	9a0b      	ldr	r2, [sp, #44]	@ 0x2c
 801fd04:	883b      	ldrh	r3, [r7, #0]
 801fd06:	4342      	muls	r2, r0
 801fd08:	ea4f 2c1c 	mov.w	ip, ip, lsr #8
 801fd0c:	ea4f 2919 	mov.w	r9, r9, lsr #8
 801fd10:	1c50      	adds	r0, r2, #1
 801fd12:	f00c 1cff 	and.w	ip, ip, #16711935	@ 0xff00ff
 801fd16:	f409 497f 	and.w	r9, r9, #65280	@ 0xff00
 801fd1a:	ea4c 0c09 	orr.w	ip, ip, r9
 801fd1e:	eb00 2012 	add.w	r0, r0, r2, lsr #8
 801fd22:	1219      	asrs	r1, r3, #8
 801fd24:	ea4f 421c 	mov.w	r2, ip, lsr #16
 801fd28:	ea6f 2010 	mvn.w	r0, r0, lsr #8
 801fd2c:	b2c0      	uxtb	r0, r0
 801fd2e:	fb12 f205 	smulbb	r2, r2, r5
 801fd32:	f001 01f8 	and.w	r1, r1, #248	@ 0xf8
 801fd36:	fb01 2100 	mla	r1, r1, r0, r2
 801fd3a:	f3cc 2e07 	ubfx	lr, ip, #8, #8
 801fd3e:	10da      	asrs	r2, r3, #3
 801fd40:	fa5f fc8c 	uxtb.w	ip, ip
 801fd44:	00db      	lsls	r3, r3, #3
 801fd46:	fb1c fc05 	smulbb	ip, ip, r5
 801fd4a:	b2db      	uxtb	r3, r3
 801fd4c:	b289      	uxth	r1, r1
 801fd4e:	fb03 c300 	mla	r3, r3, r0, ip
 801fd52:	fa1f fc83 	uxth.w	ip, r3
 801fd56:	1c4b      	adds	r3, r1, #1
 801fd58:	eb03 2111 	add.w	r1, r3, r1, lsr #8
 801fd5c:	f002 02fc 	and.w	r2, r2, #252	@ 0xfc
 801fd60:	fb1e fe05 	smulbb	lr, lr, r5
 801fd64:	f10c 0301 	add.w	r3, ip, #1
 801fd68:	fb02 e200 	mla	r2, r2, r0, lr
 801fd6c:	eb03 231c 	add.w	r3, r3, ip, lsr #8
 801fd70:	b292      	uxth	r2, r2
 801fd72:	f401 4178 	and.w	r1, r1, #63488	@ 0xf800
 801fd76:	f3c3 23c4 	ubfx	r3, r3, #11, #5
 801fd7a:	430b      	orrs	r3, r1
 801fd7c:	1c51      	adds	r1, r2, #1
 801fd7e:	eb01 2212 	add.w	r2, r1, r2, lsr #8
 801fd82:	0952      	lsrs	r2, r2, #5
 801fd84:	f402 62fc 	and.w	r2, r2, #2016	@ 0x7e0
 801fd88:	4313      	orrs	r3, r2
 801fd8a:	803b      	strh	r3, [r7, #0]
 801fd8c:	9b29      	ldr	r3, [sp, #164]	@ 0xa4
 801fd8e:	441c      	add	r4, r3
 801fd90:	9b2a      	ldr	r3, [sp, #168]	@ 0xa8
 801fd92:	441e      	add	r6, r3
 801fd94:	9b18      	ldr	r3, [sp, #96]	@ 0x60
 801fd96:	3b01      	subs	r3, #1
 801fd98:	3702      	adds	r7, #2
 801fd9a:	9318      	str	r3, [sp, #96]	@ 0x60
 801fd9c:	e698      	b.n	801fad0 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x94>
 801fd9e:	9b29      	ldr	r3, [sp, #164]	@ 0xa4
 801fda0:	441c      	add	r4, r3
 801fda2:	9b2a      	ldr	r3, [sp, #168]	@ 0xa8
 801fda4:	441e      	add	r6, r3
 801fda6:	9b07      	ldr	r3, [sp, #28]
 801fda8:	3b01      	subs	r3, #1
 801fdaa:	9307      	str	r3, [sp, #28]
 801fdac:	9b0a      	ldr	r3, [sp, #40]	@ 0x28
 801fdae:	3302      	adds	r3, #2
 801fdb0:	930a      	str	r3, [sp, #40]	@ 0x28
 801fdb2:	e66d      	b.n	801fa90 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x54>
 801fdb4:	d023      	beq.n	801fdfe <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3c2>
 801fdb6:	9b07      	ldr	r3, [sp, #28]
 801fdb8:	9829      	ldr	r0, [sp, #164]	@ 0xa4
 801fdba:	3b01      	subs	r3, #1
 801fdbc:	fb00 4003 	mla	r0, r0, r3, r4
 801fdc0:	1400      	asrs	r0, r0, #16
 801fdc2:	f53f ae82 	bmi.w	801faca <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x8e>
 801fdc6:	3901      	subs	r1, #1
 801fdc8:	4288      	cmp	r0, r1
 801fdca:	f6bf ae7e 	bge.w	801faca <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x8e>
 801fdce:	992a      	ldr	r1, [sp, #168]	@ 0xa8
 801fdd0:	fb01 6303 	mla	r3, r1, r3, r6
 801fdd4:	141b      	asrs	r3, r3, #16
 801fdd6:	f53f ae78 	bmi.w	801faca <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x8e>
 801fdda:	3a01      	subs	r2, #1
 801fddc:	4293      	cmp	r3, r2
 801fdde:	f6bf ae74 	bge.w	801faca <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x8e>
 801fde2:	f8dd b01c 	ldr.w	fp, [sp, #28]
 801fde6:	f8dd 9028 	ldr.w	r9, [sp, #40]	@ 0x28
 801fdea:	f1bb 0f00 	cmp.w	fp, #0
 801fdee:	dc6c      	bgt.n	801feca <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x48e>
 801fdf0:	9b07      	ldr	r3, [sp, #28]
 801fdf2:	ea23 75e3 	bic.w	r5, r3, r3, asr #31
 801fdf6:	9b0a      	ldr	r3, [sp, #40]	@ 0x28
 801fdf8:	eb03 0345 	add.w	r3, r3, r5, lsl #1
 801fdfc:	930a      	str	r3, [sp, #40]	@ 0x28
 801fdfe:	9b17      	ldr	r3, [sp, #92]	@ 0x5c
 801fe00:	2b00      	cmp	r3, #0
 801fe02:	f340 81b3 	ble.w	802016c <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x730>
 801fe06:	ee30 0a04 	vadd.f32	s0, s0, s8
 801fe0a:	eeb7 7a00 	vmov.f32	s14, #112	@ 0x3f800000  1.0
 801fe0e:	eec7 7a00 	vdiv.f32	s15, s14, s0
 801fe12:	9b26      	ldr	r3, [sp, #152]	@ 0x98
 801fe14:	ee70 0aa4 	vadd.f32	s1, s1, s9
 801fe18:	ee31 1a05 	vadd.f32	s2, s2, s10
 801fe1c:	ee20 7aa7 	vmul.f32	s14, s1, s15
 801fe20:	eef0 6a62 	vmov.f32	s13, s5
 801fe24:	ee61 7a27 	vmul.f32	s15, s2, s15
 801fe28:	eefe 6ac8 	vcvt.s32.f32	s13, s13, #16
 801fe2c:	ee77 2a62 	vsub.f32	s5, s14, s5
 801fe30:	ee16 4a90 	vmov	r4, s13
 801fe34:	eefe 2ac8 	vcvt.s32.f32	s5, s5, #16
 801fe38:	eef0 6a43 	vmov.f32	s13, s6
 801fe3c:	ee37 3ac3 	vsub.f32	s6, s15, s6
 801fe40:	ee12 2a90 	vmov	r2, s5
 801fe44:	eebe 3ac8 	vcvt.s32.f32	s6, s6, #16
 801fe48:	fb92 f3f3 	sdiv	r3, r2, r3
 801fe4c:	ee13 2a10 	vmov	r2, s6
 801fe50:	9329      	str	r3, [sp, #164]	@ 0xa4
 801fe52:	9b26      	ldr	r3, [sp, #152]	@ 0x98
 801fe54:	fb92 f3f3 	sdiv	r3, r2, r3
 801fe58:	932a      	str	r3, [sp, #168]	@ 0xa8
 801fe5a:	9b17      	ldr	r3, [sp, #92]	@ 0x5c
 801fe5c:	9a19      	ldr	r2, [sp, #100]	@ 0x64
 801fe5e:	3b01      	subs	r3, #1
 801fe60:	eefe 6ac8 	vcvt.s32.f32	s13, s13, #16
 801fe64:	9317      	str	r3, [sp, #92]	@ 0x5c
 801fe66:	9b26      	ldr	r3, [sp, #152]	@ 0x98
 801fe68:	bf08      	it	eq
 801fe6a:	4613      	moveq	r3, r2
 801fe6c:	ee16 6a90 	vmov	r6, s13
 801fe70:	9307      	str	r3, [sp, #28]
 801fe72:	eeb0 3a67 	vmov.f32	s6, s15
 801fe76:	eef0 2a47 	vmov.f32	s5, s14
 801fe7a:	e5fb      	b.n	801fa74 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x38>
 801fe7c:	2900      	cmp	r1, #0
 801fe7e:	f43f ae6b 	beq.w	801fb58 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x11c>
 801fe82:	f858 3023 	ldr.w	r3, [r8, r3, lsl #2]
 801fe86:	9308      	str	r3, [sp, #32]
 801fe88:	0e1b      	lsrs	r3, r3, #24
 801fe8a:	9311      	str	r3, [sp, #68]	@ 0x44
 801fe8c:	e664      	b.n	801fb58 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x11c>
 801fe8e:	f112 0801 	adds.w	r8, r2, #1
 801fe92:	f53f af7b 	bmi.w	801fd8c <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x350>
 801fe96:	4543      	cmp	r3, r8
 801fe98:	f6ff af78 	blt.w	801fd8c <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x350>
 801fe9c:	f11c 0801 	adds.w	r8, ip, #1
 801fea0:	f53f af74 	bmi.w	801fd8c <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x350>
 801fea4:	45c6      	cmp	lr, r8
 801fea6:	f6ff af71 	blt.w	801fd8c <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x350>
 801feaa:	9d1a      	ldr	r5, [sp, #104]	@ 0x68
 801feac:	9201      	str	r2, [sp, #4]
 801feae:	fa0f f28e 	sxth.w	r2, lr
 801feb2:	e9cd 1504 	strd	r1, r5, [sp, #16]
 801feb6:	e9cd c002 	strd	ip, r0, [sp, #8]
 801feba:	9200      	str	r2, [sp, #0]
 801febc:	b21b      	sxth	r3, r3
 801febe:	9a10      	ldr	r2, [sp, #64]	@ 0x40
 801fec0:	981b      	ldr	r0, [sp, #108]	@ 0x6c
 801fec2:	4639      	mov	r1, r7
 801fec4:	f7ff fc79 	bl	801f7ba <_ZNK8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKmssiihhh>
 801fec8:	e760      	b.n	801fd8c <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x350>
 801feca:	9b2e      	ldr	r3, [sp, #184]	@ 0xb8
 801fecc:	9d10      	ldr	r5, [sp, #64]	@ 0x40
 801fece:	f9b3 1008 	ldrsh.w	r1, [r3, #8]
 801fed2:	1427      	asrs	r7, r4, #16
 801fed4:	1433      	asrs	r3, r6, #16
 801fed6:	fb01 7303 	mla	r3, r1, r3, r7
 801feda:	eb05 0783 	add.w	r7, r5, r3, lsl #2
 801fede:	f855 3023 	ldr.w	r3, [r5, r3, lsl #2]
 801fee2:	f3c4 3203 	ubfx	r2, r4, #12, #4
 801fee6:	f3c6 3003 	ubfx	r0, r6, #12, #4
 801feea:	ea4f 6c13 	mov.w	ip, r3, lsr #24
 801feee:	2a00      	cmp	r2, #0
 801fef0:	f000 8133 	beq.w	802015a <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x71e>
 801fef4:	687d      	ldr	r5, [r7, #4]
 801fef6:	950e      	str	r5, [sp, #56]	@ 0x38
 801fef8:	0e2d      	lsrs	r5, r5, #24
 801fefa:	9515      	str	r5, [sp, #84]	@ 0x54
 801fefc:	b178      	cbz	r0, 801ff1e <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x4e2>
 801fefe:	f101 4180 	add.w	r1, r1, #1073741824	@ 0x40000000
 801ff02:	3901      	subs	r1, #1
 801ff04:	0089      	lsls	r1, r1, #2
 801ff06:	3104      	adds	r1, #4
 801ff08:	eb07 0e01 	add.w	lr, r7, r1
 801ff0c:	5879      	ldr	r1, [r7, r1]
 801ff0e:	9109      	str	r1, [sp, #36]	@ 0x24
 801ff10:	0e09      	lsrs	r1, r1, #24
 801ff12:	9112      	str	r1, [sp, #72]	@ 0x48
 801ff14:	f8de 1004 	ldr.w	r1, [lr, #4]
 801ff18:	910f      	str	r1, [sp, #60]	@ 0x3c
 801ff1a:	0e09      	lsrs	r1, r1, #24
 801ff1c:	9116      	str	r1, [sp, #88]	@ 0x58
 801ff1e:	b292      	uxth	r2, r2
 801ff20:	b280      	uxth	r0, r0
 801ff22:	fb02 f800 	mul.w	r8, r2, r0
 801ff26:	ebc8 1000 	rsb	r0, r8, r0, lsl #4
 801ff2a:	0112      	lsls	r2, r2, #4
 801ff2c:	eba2 0e08 	sub.w	lr, r2, r8
 801ff30:	b280      	uxth	r0, r0
 801ff32:	f5c2 7280 	rsb	r2, r2, #256	@ 0x100
 801ff36:	9915      	ldr	r1, [sp, #84]	@ 0x54
 801ff38:	9d12      	ldr	r5, [sp, #72]	@ 0x48
 801ff3a:	fa1f fe8e 	uxth.w	lr, lr
 801ff3e:	1a12      	subs	r2, r2, r0
 801ff40:	b292      	uxth	r2, r2
 801ff42:	fb0e f101 	mul.w	r1, lr, r1
 801ff46:	fb02 110c 	mla	r1, r2, ip, r1
 801ff4a:	fb00 1105 	mla	r1, r0, r5, r1
 801ff4e:	9d16      	ldr	r5, [sp, #88]	@ 0x58
 801ff50:	fb08 1105 	mla	r1, r8, r5, r1
 801ff54:	f3c1 2107 	ubfx	r1, r1, #8, #8
 801ff58:	2900      	cmp	r1, #0
 801ff5a:	f000 80f5 	beq.w	8020148 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x70c>
 801ff5e:	f1bc 0fff 	cmp.w	ip, #255	@ 0xff
 801ff62:	d019      	beq.n	801ff98 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x55c>
 801ff64:	f003 1aff 	and.w	sl, r3, #16711935	@ 0xff00ff
 801ff68:	fb0c fa0a 	mul.w	sl, ip, sl
 801ff6c:	f403 437f 	and.w	r3, r3, #65280	@ 0xff00
 801ff70:	fb0c fc03 	mul.w	ip, ip, r3
 801ff74:	ea4f 231a 	mov.w	r3, sl, lsr #8
 801ff78:	f003 13ff 	and.w	r3, r3, #16711935	@ 0xff00ff
 801ff7c:	f10a 1a01 	add.w	sl, sl, #65537	@ 0x10001
 801ff80:	f50c 7780 	add.w	r7, ip, #256	@ 0x100
 801ff84:	4453      	add	r3, sl
 801ff86:	eb07 271c 	add.w	r7, r7, ip, lsr #8
 801ff8a:	0a1b      	lsrs	r3, r3, #8
 801ff8c:	0a3f      	lsrs	r7, r7, #8
 801ff8e:	f003 13ff 	and.w	r3, r3, #16711935	@ 0xff00ff
 801ff92:	f407 477f 	and.w	r7, r7, #65280	@ 0xff00
 801ff96:	433b      	orrs	r3, r7
 801ff98:	9d15      	ldr	r5, [sp, #84]	@ 0x54
 801ff9a:	2dff      	cmp	r5, #255	@ 0xff
 801ff9c:	d020      	beq.n	801ffe0 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x5a4>
 801ff9e:	9d0e      	ldr	r5, [sp, #56]	@ 0x38
 801ffa0:	f005 17ff 	and.w	r7, r5, #16711935	@ 0xff00ff
 801ffa4:	9d15      	ldr	r5, [sp, #84]	@ 0x54
 801ffa6:	436f      	muls	r7, r5
 801ffa8:	9d0e      	ldr	r5, [sp, #56]	@ 0x38
 801ffaa:	f405 4a7f 	and.w	sl, r5, #65280	@ 0xff00
 801ffae:	9d15      	ldr	r5, [sp, #84]	@ 0x54
 801ffb0:	ea4f 2c17 	mov.w	ip, r7, lsr #8
 801ffb4:	fb05 fa0a 	mul.w	sl, r5, sl
 801ffb8:	f107 1701 	add.w	r7, r7, #65537	@ 0x10001
 801ffbc:	f00c 1cff 	and.w	ip, ip, #16711935	@ 0xff00ff
 801ffc0:	44bc      	add	ip, r7
 801ffc2:	f50a 7780 	add.w	r7, sl, #256	@ 0x100
 801ffc6:	eb07 2a1a 	add.w	sl, r7, sl, lsr #8
 801ffca:	ea4f 2c1c 	mov.w	ip, ip, lsr #8
 801ffce:	ea4f 2a1a 	mov.w	sl, sl, lsr #8
 801ffd2:	f00c 1cff 	and.w	ip, ip, #16711935	@ 0xff00ff
 801ffd6:	f40a 4a7f 	and.w	sl, sl, #65280	@ 0xff00
 801ffda:	ea4c 050a 	orr.w	r5, ip, sl
 801ffde:	950e      	str	r5, [sp, #56]	@ 0x38
 801ffe0:	9d12      	ldr	r5, [sp, #72]	@ 0x48
 801ffe2:	2dff      	cmp	r5, #255	@ 0xff
 801ffe4:	d020      	beq.n	8020028 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x5ec>
 801ffe6:	9d09      	ldr	r5, [sp, #36]	@ 0x24
 801ffe8:	f005 17ff 	and.w	r7, r5, #16711935	@ 0xff00ff
 801ffec:	9d12      	ldr	r5, [sp, #72]	@ 0x48
 801ffee:	436f      	muls	r7, r5
 801fff0:	9d09      	ldr	r5, [sp, #36]	@ 0x24
 801fff2:	f405 4a7f 	and.w	sl, r5, #65280	@ 0xff00
 801fff6:	9d12      	ldr	r5, [sp, #72]	@ 0x48
 801fff8:	ea4f 2c17 	mov.w	ip, r7, lsr #8
 801fffc:	fb05 fa0a 	mul.w	sl, r5, sl
 8020000:	f107 1701 	add.w	r7, r7, #65537	@ 0x10001
 8020004:	f00c 1cff 	and.w	ip, ip, #16711935	@ 0xff00ff
 8020008:	44bc      	add	ip, r7
 802000a:	f50a 7780 	add.w	r7, sl, #256	@ 0x100
 802000e:	eb07 2a1a 	add.w	sl, r7, sl, lsr #8
 8020012:	ea4f 2c1c 	mov.w	ip, ip, lsr #8
 8020016:	ea4f 2a1a 	mov.w	sl, sl, lsr #8
 802001a:	f00c 1cff 	and.w	ip, ip, #16711935	@ 0xff00ff
 802001e:	f40a 4a7f 	and.w	sl, sl, #65280	@ 0xff00
 8020022:	ea4c 050a 	orr.w	r5, ip, sl
 8020026:	9509      	str	r5, [sp, #36]	@ 0x24
 8020028:	9d16      	ldr	r5, [sp, #88]	@ 0x58
 802002a:	2dff      	cmp	r5, #255	@ 0xff
 802002c:	d020      	beq.n	8020070 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x634>
 802002e:	9d0f      	ldr	r5, [sp, #60]	@ 0x3c
 8020030:	f005 17ff 	and.w	r7, r5, #16711935	@ 0xff00ff
 8020034:	9d16      	ldr	r5, [sp, #88]	@ 0x58
 8020036:	436f      	muls	r7, r5
 8020038:	9d0f      	ldr	r5, [sp, #60]	@ 0x3c
 802003a:	f405 4a7f 	and.w	sl, r5, #65280	@ 0xff00
 802003e:	9d16      	ldr	r5, [sp, #88]	@ 0x58
 8020040:	ea4f 2c17 	mov.w	ip, r7, lsr #8
 8020044:	fb05 fa0a 	mul.w	sl, r5, sl
 8020048:	f107 1701 	add.w	r7, r7, #65537	@ 0x10001
 802004c:	f00c 1cff 	and.w	ip, ip, #16711935	@ 0xff00ff
 8020050:	44bc      	add	ip, r7
 8020052:	f50a 7780 	add.w	r7, sl, #256	@ 0x100
 8020056:	eb07 2a1a 	add.w	sl, r7, sl, lsr #8
 802005a:	ea4f 2c1c 	mov.w	ip, ip, lsr #8
 802005e:	ea4f 2a1a 	mov.w	sl, sl, lsr #8
 8020062:	f00c 1cff 	and.w	ip, ip, #16711935	@ 0xff00ff
 8020066:	f40a 4a7f 	and.w	sl, sl, #65280	@ 0xff00
 802006a:	ea4c 050a 	orr.w	r5, ip, sl
 802006e:	950f      	str	r5, [sp, #60]	@ 0x3c
 8020070:	9d0e      	ldr	r5, [sp, #56]	@ 0x38
 8020072:	f005 17ff 	and.w	r7, r5, #16711935	@ 0xff00ff
 8020076:	9d09      	ldr	r5, [sp, #36]	@ 0x24
 8020078:	f003 1cff 	and.w	ip, r3, #16711935	@ 0xff00ff
 802007c:	fb0e f707 	mul.w	r7, lr, r7
 8020080:	fb02 770c 	mla	r7, r2, ip, r7
 8020084:	f005 1cff 	and.w	ip, r5, #16711935	@ 0xff00ff
 8020088:	9d0f      	ldr	r5, [sp, #60]	@ 0x3c
 802008a:	fb00 770c 	mla	r7, r0, ip, r7
 802008e:	f005 1cff 	and.w	ip, r5, #16711935	@ 0xff00ff
 8020092:	9d0e      	ldr	r5, [sp, #56]	@ 0x38
 8020094:	fb08 770c 	mla	r7, r8, ip, r7
 8020098:	f405 4c7f 	and.w	ip, r5, #65280	@ 0xff00
 802009c:	fb0e fe0c 	mul.w	lr, lr, ip
 80200a0:	f403 437f 	and.w	r3, r3, #65280	@ 0xff00
 80200a4:	fb02 e303 	mla	r3, r2, r3, lr
 80200a8:	9a09      	ldr	r2, [sp, #36]	@ 0x24
 80200aa:	9d0b      	ldr	r5, [sp, #44]	@ 0x2c
 80200ac:	f402 4a7f 	and.w	sl, r2, #65280	@ 0xff00
 80200b0:	9a0f      	ldr	r2, [sp, #60]	@ 0x3c
 80200b2:	fb00 330a 	mla	r3, r0, sl, r3
 80200b6:	f402 4c7f 	and.w	ip, r2, #65280	@ 0xff00
 80200ba:	fb08 3c0c 	mla	ip, r8, ip, r3
 80200be:	9b0b      	ldr	r3, [sp, #44]	@ 0x2c
 80200c0:	f8b9 0000 	ldrh.w	r0, [r9]
 80200c4:	4359      	muls	r1, r3
 80200c6:	0a3f      	lsrs	r7, r7, #8
 80200c8:	ea4f 2c1c 	mov.w	ip, ip, lsr #8
 80200cc:	f40c 4c7f 	and.w	ip, ip, #65280	@ 0xff00
 80200d0:	1c4b      	adds	r3, r1, #1
 80200d2:	f007 17ff 	and.w	r7, r7, #16711935	@ 0xff00ff
 80200d6:	ea47 070c 	orr.w	r7, r7, ip
 80200da:	eb03 2111 	add.w	r1, r3, r1, lsr #8
 80200de:	1202      	asrs	r2, r0, #8
 80200e0:	0c3b      	lsrs	r3, r7, #16
 80200e2:	ea6f 2111 	mvn.w	r1, r1, lsr #8
 80200e6:	b2c9      	uxtb	r1, r1
 80200e8:	fb13 f305 	smulbb	r3, r3, r5
 80200ec:	f002 02f8 	and.w	r2, r2, #248	@ 0xf8
 80200f0:	fb02 3201 	mla	r2, r2, r1, r3
 80200f4:	f3c7 2c07 	ubfx	ip, r7, #8, #8
 80200f8:	10c3      	asrs	r3, r0, #3
 80200fa:	b2ff      	uxtb	r7, r7
 80200fc:	00c0      	lsls	r0, r0, #3
 80200fe:	b2c0      	uxtb	r0, r0
 8020100:	fb17 f705 	smulbb	r7, r7, r5
 8020104:	fb00 7001 	mla	r0, r0, r1, r7
 8020108:	b292      	uxth	r2, r2
 802010a:	fb1c fc05 	smulbb	ip, ip, r5
 802010e:	b280      	uxth	r0, r0
 8020110:	f003 03fc 	and.w	r3, r3, #252	@ 0xfc
 8020114:	fb03 c301 	mla	r3, r3, r1, ip
 8020118:	1c51      	adds	r1, r2, #1
 802011a:	f100 0c01 	add.w	ip, r0, #1
 802011e:	eb01 2212 	add.w	r2, r1, r2, lsr #8
 8020122:	eb0c 2c10 	add.w	ip, ip, r0, lsr #8
 8020126:	b29b      	uxth	r3, r3
 8020128:	f3cc 2cc4 	ubfx	ip, ip, #11, #5
 802012c:	f402 4278 	and.w	r2, r2, #63488	@ 0xf800
 8020130:	ea4c 0202 	orr.w	r2, ip, r2
 8020134:	f103 0c01 	add.w	ip, r3, #1
 8020138:	eb0c 2313 	add.w	r3, ip, r3, lsr #8
 802013c:	095b      	lsrs	r3, r3, #5
 802013e:	f403 63fc 	and.w	r3, r3, #2016	@ 0x7e0
 8020142:	431a      	orrs	r2, r3
 8020144:	f8a9 2000 	strh.w	r2, [r9]
 8020148:	9b29      	ldr	r3, [sp, #164]	@ 0xa4
 802014a:	441c      	add	r4, r3
 802014c:	9b2a      	ldr	r3, [sp, #168]	@ 0xa8
 802014e:	f109 0902 	add.w	r9, r9, #2
 8020152:	441e      	add	r6, r3
 8020154:	f10b 3bff 	add.w	fp, fp, #4294967295
 8020158:	e647      	b.n	801fdea <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3ae>
 802015a:	2800      	cmp	r0, #0
 802015c:	f43f aedf 	beq.w	801ff1e <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x4e2>
 8020160:	f857 1021 	ldr.w	r1, [r7, r1, lsl #2]
 8020164:	9109      	str	r1, [sp, #36]	@ 0x24
 8020166:	0e09      	lsrs	r1, r1, #24
 8020168:	9112      	str	r1, [sp, #72]	@ 0x48
 802016a:	e6d8      	b.n	801ff1e <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x4e2>
 802016c:	b01d      	add	sp, #116	@ 0x74
 802016e:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}

08020172 <_ZNK8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKmssiihh>:
 8020172:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8020176:	b085      	sub	sp, #20
 8020178:	e9dd 740f 	ldrd	r7, r4, [sp, #60]	@ 0x3c
 802017c:	9102      	str	r1, [sp, #8]
 802017e:	2c00      	cmp	r4, #0
 8020180:	fb04 7103 	mla	r1, r4, r3, r7
 8020184:	f9bd e038 	ldrsh.w	lr, [sp, #56]	@ 0x38
 8020188:	f89d 6044 	ldrb.w	r6, [sp, #68]	@ 0x44
 802018c:	f89d 0048 	ldrb.w	r0, [sp, #72]	@ 0x48
 8020190:	eb02 0c81 	add.w	ip, r2, r1, lsl #2
 8020194:	f2c0 810c 	blt.w	80203b0 <_ZNK8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKmssiihh+0x23e>
 8020198:	45a6      	cmp	lr, r4
 802019a:	f340 8109 	ble.w	80203b0 <_ZNK8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKmssiihh+0x23e>
 802019e:	2f00      	cmp	r7, #0
 80201a0:	f2c0 8104 	blt.w	80203ac <_ZNK8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKmssiihh+0x23a>
 80201a4:	42bb      	cmp	r3, r7
 80201a6:	f340 8101 	ble.w	80203ac <_ZNK8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKmssiihh+0x23a>
 80201aa:	f852 5021 	ldr.w	r5, [r2, r1, lsl #2]
 80201ae:	1c7a      	adds	r2, r7, #1
 80201b0:	f100 8101 	bmi.w	80203b6 <_ZNK8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKmssiihh+0x244>
 80201b4:	4293      	cmp	r3, r2
 80201b6:	f340 80fe 	ble.w	80203b6 <_ZNK8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKmssiihh+0x244>
 80201ba:	2e00      	cmp	r6, #0
 80201bc:	f000 80fd 	beq.w	80203ba <_ZNK8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKmssiihh+0x248>
 80201c0:	f8dc 1004 	ldr.w	r1, [ip, #4]
 80201c4:	3401      	adds	r4, #1
 80201c6:	f100 80fc 	bmi.w	80203c2 <_ZNK8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKmssiihh+0x250>
 80201ca:	45a6      	cmp	lr, r4
 80201cc:	f340 80f9 	ble.w	80203c2 <_ZNK8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKmssiihh+0x250>
 80201d0:	2800      	cmp	r0, #0
 80201d2:	f000 80f9 	beq.w	80203c8 <_ZNK8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKmssiihh+0x256>
 80201d6:	2f00      	cmp	r7, #0
 80201d8:	eb0c 0283 	add.w	r2, ip, r3, lsl #2
 80201dc:	f2c0 80ef 	blt.w	80203be <_ZNK8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKmssiihh+0x24c>
 80201e0:	42bb      	cmp	r3, r7
 80201e2:	f340 80ec 	ble.w	80203be <_ZNK8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKmssiihh+0x24c>
 80201e6:	f85c 4023 	ldr.w	r4, [ip, r3, lsl #2]
 80201ea:	3701      	adds	r7, #1
 80201ec:	f100 80ef 	bmi.w	80203ce <_ZNK8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKmssiihh+0x25c>
 80201f0:	42bb      	cmp	r3, r7
 80201f2:	f340 80ec 	ble.w	80203ce <_ZNK8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKmssiihh+0x25c>
 80201f6:	2e00      	cmp	r6, #0
 80201f8:	f000 80eb 	beq.w	80203d2 <_ZNK8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKmssiihh+0x260>
 80201fc:	6852      	ldr	r2, [r2, #4]
 80201fe:	b2b6      	uxth	r6, r6
 8020200:	b280      	uxth	r0, r0
 8020202:	fb00 fe06 	mul.w	lr, r0, r6
 8020206:	ebce 1000 	rsb	r0, lr, r0, lsl #4
 802020a:	0136      	lsls	r6, r6, #4
 802020c:	eba6 070e 	sub.w	r7, r6, lr
 8020210:	b280      	uxth	r0, r0
 8020212:	f5c6 7380 	rsb	r3, r6, #256	@ 0x100
 8020216:	ea4f 6a11 	mov.w	sl, r1, lsr #24
 802021a:	b2bf      	uxth	r7, r7
 802021c:	1a1b      	subs	r3, r3, r0
 802021e:	ea4f 6b15 	mov.w	fp, r5, lsr #24
 8020222:	b29b      	uxth	r3, r3
 8020224:	fb07 f60a 	mul.w	r6, r7, sl
 8020228:	ea4f 6914 	mov.w	r9, r4, lsr #24
 802022c:	fb0b 6603 	mla	r6, fp, r3, r6
 8020230:	ea4f 6812 	mov.w	r8, r2, lsr #24
 8020234:	fb00 6609 	mla	r6, r0, r9, r6
 8020238:	fb0e 6608 	mla	r6, lr, r8, r6
 802023c:	f3c6 2607 	ubfx	r6, r6, #8, #8
 8020240:	9600      	str	r6, [sp, #0]
 8020242:	2e00      	cmp	r6, #0
 8020244:	f000 80af 	beq.w	80203a6 <_ZNK8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKmssiihh+0x234>
 8020248:	f005 1cff 	and.w	ip, r5, #16711935	@ 0xff00ff
 802024c:	fb0b fc0c 	mul.w	ip, fp, ip
 8020250:	f405 457f 	and.w	r5, r5, #65280	@ 0xff00
 8020254:	fb0b f505 	mul.w	r5, fp, r5
 8020258:	ea4f 2b1c 	mov.w	fp, ip, lsr #8
 802025c:	f00b 1bff 	and.w	fp, fp, #16711935	@ 0xff00ff
 8020260:	f10c 1c01 	add.w	ip, ip, #65537	@ 0x10001
 8020264:	44dc      	add	ip, fp
 8020266:	ea4f 2c1c 	mov.w	ip, ip, lsr #8
 802026a:	9501      	str	r5, [sp, #4]
 802026c:	f00c 15ff 	and.w	r5, ip, #16711935	@ 0xff00ff
 8020270:	9503      	str	r5, [sp, #12]
 8020272:	9d01      	ldr	r5, [sp, #4]
 8020274:	9e02      	ldr	r6, [sp, #8]
 8020276:	f505 7c80 	add.w	ip, r5, #256	@ 0x100
 802027a:	eb0c 2515 	add.w	r5, ip, r5, lsr #8
 802027e:	f001 1cff 	and.w	ip, r1, #16711935	@ 0xff00ff
 8020282:	fb0a fc0c 	mul.w	ip, sl, ip
 8020286:	ea4f 2b15 	mov.w	fp, r5, lsr #8
 802028a:	ea4f 251c 	mov.w	r5, ip, lsr #8
 802028e:	f005 15ff 	and.w	r5, r5, #16711935	@ 0xff00ff
 8020292:	f10c 1c01 	add.w	ip, ip, #65537	@ 0x10001
 8020296:	4465      	add	r5, ip
 8020298:	f004 1cff 	and.w	ip, r4, #16711935	@ 0xff00ff
 802029c:	f404 447f 	and.w	r4, r4, #65280	@ 0xff00
 80202a0:	fb09 fc0c 	mul.w	ip, r9, ip
 80202a4:	fb09 f904 	mul.w	r9, r9, r4
 80202a8:	f509 7480 	add.w	r4, r9, #256	@ 0x100
 80202ac:	eb04 2919 	add.w	r9, r4, r9, lsr #8
 80202b0:	f002 14ff 	and.w	r4, r2, #16711935	@ 0xff00ff
 80202b4:	fb08 f404 	mul.w	r4, r8, r4
 80202b8:	f401 417f 	and.w	r1, r1, #65280	@ 0xff00
 80202bc:	f402 427f 	and.w	r2, r2, #65280	@ 0xff00
 80202c0:	fb08 f802 	mul.w	r8, r8, r2
 80202c4:	fb0a fa01 	mul.w	sl, sl, r1
 80202c8:	0a22      	lsrs	r2, r4, #8
 80202ca:	f50a 7180 	add.w	r1, sl, #256	@ 0x100
 80202ce:	f002 12ff 	and.w	r2, r2, #16711935	@ 0xff00ff
 80202d2:	f104 1401 	add.w	r4, r4, #65537	@ 0x10001
 80202d6:	eb01 2a1a 	add.w	sl, r1, sl, lsr #8
 80202da:	4414      	add	r4, r2
 80202dc:	ea4f 211c 	mov.w	r1, ip, lsr #8
 80202e0:	f508 7280 	add.w	r2, r8, #256	@ 0x100
 80202e4:	0a2d      	lsrs	r5, r5, #8
 80202e6:	eb02 2818 	add.w	r8, r2, r8, lsr #8
 80202ea:	f005 15ff 	and.w	r5, r5, #16711935	@ 0xff00ff
 80202ee:	9a03      	ldr	r2, [sp, #12]
 80202f0:	8836      	ldrh	r6, [r6, #0]
 80202f2:	f001 11ff 	and.w	r1, r1, #16711935	@ 0xff00ff
 80202f6:	f10c 1c01 	add.w	ip, ip, #65537	@ 0x10001
 80202fa:	437d      	muls	r5, r7
 80202fc:	4461      	add	r1, ip
 80202fe:	0a24      	lsrs	r4, r4, #8
 8020300:	fb02 5503 	mla	r5, r2, r3, r5
 8020304:	0a09      	lsrs	r1, r1, #8
 8020306:	f004 14ff 	and.w	r4, r4, #16711935	@ 0xff00ff
 802030a:	fb04 540e 	mla	r4, r4, lr, r5
 802030e:	f001 11ff 	and.w	r1, r1, #16711935	@ 0xff00ff
 8020312:	fb01 4100 	mla	r1, r1, r0, r4
 8020316:	ea4f 2a1a 	mov.w	sl, sl, lsr #8
 802031a:	0a09      	lsrs	r1, r1, #8
 802031c:	f40a 4a7f 	and.w	sl, sl, #65280	@ 0xff00
 8020320:	f001 14ff 	and.w	r4, r1, #16711935	@ 0xff00ff
 8020324:	ea4f 2818 	mov.w	r8, r8, lsr #8
 8020328:	f40b 417f 	and.w	r1, fp, #65280	@ 0xff00
 802032c:	fb07 f70a 	mul.w	r7, r7, sl
 8020330:	fb03 7101 	mla	r1, r3, r1, r7
 8020334:	ea4f 2919 	mov.w	r9, r9, lsr #8
 8020338:	9b00      	ldr	r3, [sp, #0]
 802033a:	f408 487f 	and.w	r8, r8, #65280	@ 0xff00
 802033e:	fb0e 1e08 	mla	lr, lr, r8, r1
 8020342:	f409 417f 	and.w	r1, r9, #65280	@ 0xff00
 8020346:	fb00 e101 	mla	r1, r0, r1, lr
 802034a:	43da      	mvns	r2, r3
 802034c:	1233      	asrs	r3, r6, #8
 802034e:	b2d2      	uxtb	r2, r2
 8020350:	10f0      	asrs	r0, r6, #3
 8020352:	0a09      	lsrs	r1, r1, #8
 8020354:	f003 03f8 	and.w	r3, r3, #248	@ 0xf8
 8020358:	00f6      	lsls	r6, r6, #3
 802035a:	4353      	muls	r3, r2
 802035c:	f401 417f 	and.w	r1, r1, #65280	@ 0xff00
 8020360:	f000 00fc 	and.w	r0, r0, #252	@ 0xfc
 8020364:	b2f6      	uxtb	r6, r6
 8020366:	4321      	orrs	r1, r4
 8020368:	4350      	muls	r0, r2
 802036a:	4356      	muls	r6, r2
 802036c:	1c5a      	adds	r2, r3, #1
 802036e:	eb02 2213 	add.w	r2, r2, r3, lsr #8
 8020372:	0c0b      	lsrs	r3, r1, #16
 8020374:	eb03 2312 	add.w	r3, r3, r2, lsr #8
 8020378:	1c42      	adds	r2, r0, #1
 802037a:	eb02 2010 	add.w	r0, r2, r0, lsr #8
 802037e:	0a0a      	lsrs	r2, r1, #8
 8020380:	eb02 2210 	add.w	r2, r2, r0, lsr #8
 8020384:	021b      	lsls	r3, r3, #8
 8020386:	00d2      	lsls	r2, r2, #3
 8020388:	f402 62fc 	and.w	r2, r2, #2016	@ 0x7e0
 802038c:	f403 4378 	and.w	r3, r3, #63488	@ 0xf800
 8020390:	4313      	orrs	r3, r2
 8020392:	1c72      	adds	r2, r6, #1
 8020394:	eb02 2616 	add.w	r6, r2, r6, lsr #8
 8020398:	eb01 2116 	add.w	r1, r1, r6, lsr #8
 802039c:	f3c1 01c4 	ubfx	r1, r1, #3, #5
 80203a0:	4319      	orrs	r1, r3
 80203a2:	9b02      	ldr	r3, [sp, #8]
 80203a4:	8019      	strh	r1, [r3, #0]
 80203a6:	b005      	add	sp, #20
 80203a8:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 80203ac:	2500      	movs	r5, #0
 80203ae:	e6fe      	b.n	80201ae <_ZNK8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKmssiihh+0x3c>
 80203b0:	2100      	movs	r1, #0
 80203b2:	460d      	mov	r5, r1
 80203b4:	e706      	b.n	80201c4 <_ZNK8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKmssiihh+0x52>
 80203b6:	2100      	movs	r1, #0
 80203b8:	e704      	b.n	80201c4 <_ZNK8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKmssiihh+0x52>
 80203ba:	4631      	mov	r1, r6
 80203bc:	e702      	b.n	80201c4 <_ZNK8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKmssiihh+0x52>
 80203be:	2400      	movs	r4, #0
 80203c0:	e713      	b.n	80201ea <_ZNK8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKmssiihh+0x78>
 80203c2:	2200      	movs	r2, #0
 80203c4:	4614      	mov	r4, r2
 80203c6:	e71a      	b.n	80201fe <_ZNK8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKmssiihh+0x8c>
 80203c8:	4602      	mov	r2, r0
 80203ca:	4604      	mov	r4, r0
 80203cc:	e717      	b.n	80201fe <_ZNK8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKmssiihh+0x8c>
 80203ce:	2200      	movs	r2, #0
 80203d0:	e715      	b.n	80201fe <_ZNK8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKmssiihh+0x8c>
 80203d2:	4632      	mov	r2, r6
 80203d4:	e713      	b.n	80201fe <_ZNK8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKmssiihh+0x8c>
	...

080203d8 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff>:
 80203d8:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 80203dc:	b09b      	sub	sp, #108	@ 0x6c
 80203de:	e9dd 4625 	ldrd	r4, r6, [sp, #148]	@ 0x94
 80203e2:	9218      	str	r2, [sp, #96]	@ 0x60
 80203e4:	9a29      	ldr	r2, [sp, #164]	@ 0xa4
 80203e6:	9116      	str	r1, [sp, #88]	@ 0x58
 80203e8:	9307      	str	r3, [sp, #28]
 80203ea:	e9dd 132a 	ldrd	r1, r3, [sp, #168]	@ 0xa8
 80203ee:	9019      	str	r0, [sp, #100]	@ 0x64
 80203f0:	6850      	ldr	r0, [r2, #4]
 80203f2:	6812      	ldr	r2, [r2, #0]
 80203f4:	fb00 1303 	mla	r3, r0, r3, r1
 80203f8:	eb02 0343 	add.w	r3, r2, r3, lsl #1
 80203fc:	930a      	str	r3, [sp, #40]	@ 0x28
 80203fe:	9b2c      	ldr	r3, [sp, #176]	@ 0xb0
 8020400:	681b      	ldr	r3, [r3, #0]
 8020402:	930f      	str	r3, [sp, #60]	@ 0x3c
 8020404:	9b16      	ldr	r3, [sp, #88]	@ 0x58
 8020406:	2b00      	cmp	r3, #0
 8020408:	dc03      	bgt.n	8020412 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3a>
 802040a:	9b18      	ldr	r3, [sp, #96]	@ 0x60
 802040c:	2b00      	cmp	r3, #0
 802040e:	f340 8386 	ble.w	8020b1e <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x746>
 8020412:	9b2c      	ldr	r3, [sp, #176]	@ 0xb0
 8020414:	f9b3 1008 	ldrsh.w	r1, [r3, #8]
 8020418:	f9b3 200c 	ldrsh.w	r2, [r3, #12]
 802041c:	1e48      	subs	r0, r1, #1
 802041e:	1e57      	subs	r7, r2, #1
 8020420:	9b07      	ldr	r3, [sp, #28]
 8020422:	2b00      	cmp	r3, #0
 8020424:	f340 8166 	ble.w	80206f4 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x31c>
 8020428:	ea5f 4c24 	movs.w	ip, r4, asr #16
 802042c:	ea4f 4326 	mov.w	r3, r6, asr #16
 8020430:	d406      	bmi.n	8020440 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x68>
 8020432:	4584      	cmp	ip, r0
 8020434:	da04      	bge.n	8020440 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x68>
 8020436:	2b00      	cmp	r3, #0
 8020438:	db02      	blt.n	8020440 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x68>
 802043a:	42bb      	cmp	r3, r7
 802043c:	f2c0 815b 	blt.w	80206f6 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x31e>
 8020440:	f11c 0c01 	adds.w	ip, ip, #1
 8020444:	f100 814b 	bmi.w	80206de <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x306>
 8020448:	4561      	cmp	r1, ip
 802044a:	f2c0 8148 	blt.w	80206de <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x306>
 802044e:	3301      	adds	r3, #1
 8020450:	f100 8145 	bmi.w	80206de <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x306>
 8020454:	429a      	cmp	r2, r3
 8020456:	f2c0 8142 	blt.w	80206de <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x306>
 802045a:	9b07      	ldr	r3, [sp, #28]
 802045c:	9f0a      	ldr	r7, [sp, #40]	@ 0x28
 802045e:	9317      	str	r3, [sp, #92]	@ 0x5c
 8020460:	9b17      	ldr	r3, [sp, #92]	@ 0x5c
 8020462:	2b00      	cmp	r3, #0
 8020464:	f340 8165 	ble.w	8020732 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x35a>
 8020468:	9a2c      	ldr	r2, [sp, #176]	@ 0xb0
 802046a:	9b2c      	ldr	r3, [sp, #176]	@ 0xb0
 802046c:	f8d2 e00c 	ldr.w	lr, [r2, #12]
 8020470:	689b      	ldr	r3, [r3, #8]
 8020472:	1422      	asrs	r2, r4, #16
 8020474:	ea4f 4c26 	mov.w	ip, r6, asr #16
 8020478:	f3c4 3103 	ubfx	r1, r4, #12, #4
 802047c:	f3c6 3003 	ubfx	r0, r6, #12, #4
 8020480:	f100 81d5 	bmi.w	802082e <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x456>
 8020484:	f103 38ff 	add.w	r8, r3, #4294967295
 8020488:	4542      	cmp	r2, r8
 802048a:	f280 81d0 	bge.w	802082e <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x456>
 802048e:	f1bc 0f00 	cmp.w	ip, #0
 8020492:	f2c0 81cc 	blt.w	802082e <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x456>
 8020496:	f10e 38ff 	add.w	r8, lr, #4294967295
 802049a:	45c4      	cmp	ip, r8
 802049c:	f280 81c7 	bge.w	802082e <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x456>
 80204a0:	b21b      	sxth	r3, r3
 80204a2:	fb0c 2203 	mla	r2, ip, r3, r2
 80204a6:	9d0f      	ldr	r5, [sp, #60]	@ 0x3c
 80204a8:	eb05 0882 	add.w	r8, r5, r2, lsl #2
 80204ac:	f855 2022 	ldr.w	r2, [r5, r2, lsl #2]
 80204b0:	ea4f 6e12 	mov.w	lr, r2, lsr #24
 80204b4:	2900      	cmp	r1, #0
 80204b6:	f000 8182 	beq.w	80207be <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3e6>
 80204ba:	f8d8 5004 	ldr.w	r5, [r8, #4]
 80204be:	950b      	str	r5, [sp, #44]	@ 0x2c
 80204c0:	0e2d      	lsrs	r5, r5, #24
 80204c2:	9512      	str	r5, [sp, #72]	@ 0x48
 80204c4:	b180      	cbz	r0, 80204e8 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x110>
 80204c6:	f103 4380 	add.w	r3, r3, #1073741824	@ 0x40000000
 80204ca:	3b01      	subs	r3, #1
 80204cc:	009b      	lsls	r3, r3, #2
 80204ce:	3304      	adds	r3, #4
 80204d0:	eb08 0c03 	add.w	ip, r8, r3
 80204d4:	f858 3003 	ldr.w	r3, [r8, r3]
 80204d8:	9308      	str	r3, [sp, #32]
 80204da:	0e1b      	lsrs	r3, r3, #24
 80204dc:	9310      	str	r3, [sp, #64]	@ 0x40
 80204de:	f8dc 3004 	ldr.w	r3, [ip, #4]
 80204e2:	930c      	str	r3, [sp, #48]	@ 0x30
 80204e4:	0e1b      	lsrs	r3, r3, #24
 80204e6:	9313      	str	r3, [sp, #76]	@ 0x4c
 80204e8:	b289      	uxth	r1, r1
 80204ea:	b280      	uxth	r0, r0
 80204ec:	fb01 f900 	mul.w	r9, r1, r0
 80204f0:	ebc9 1000 	rsb	r0, r9, r0, lsl #4
 80204f4:	0109      	lsls	r1, r1, #4
 80204f6:	eba1 0809 	sub.w	r8, r1, r9
 80204fa:	b280      	uxth	r0, r0
 80204fc:	f5c1 7180 	rsb	r1, r1, #256	@ 0x100
 8020500:	9b12      	ldr	r3, [sp, #72]	@ 0x48
 8020502:	9d10      	ldr	r5, [sp, #64]	@ 0x40
 8020504:	fa1f f888 	uxth.w	r8, r8
 8020508:	1a09      	subs	r1, r1, r0
 802050a:	b289      	uxth	r1, r1
 802050c:	fb08 f303 	mul.w	r3, r8, r3
 8020510:	fb01 330e 	mla	r3, r1, lr, r3
 8020514:	fb00 3305 	mla	r3, r0, r5, r3
 8020518:	9d13      	ldr	r5, [sp, #76]	@ 0x4c
 802051a:	fb09 3305 	mla	r3, r9, r5, r3
 802051e:	f3c3 2307 	ubfx	r3, r3, #8, #8
 8020522:	2b00      	cmp	r3, #0
 8020524:	f000 80d2 	beq.w	80206cc <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2f4>
 8020528:	f1be 0fff 	cmp.w	lr, #255	@ 0xff
 802052c:	d01b      	beq.n	8020566 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x18e>
 802052e:	f002 1aff 	and.w	sl, r2, #16711935	@ 0xff00ff
 8020532:	fb0e fa0a 	mul.w	sl, lr, sl
 8020536:	f402 427f 	and.w	r2, r2, #65280	@ 0xff00
 802053a:	fb0e fe02 	mul.w	lr, lr, r2
 802053e:	ea4f 221a 	mov.w	r2, sl, lsr #8
 8020542:	f002 12ff 	and.w	r2, r2, #16711935	@ 0xff00ff
 8020546:	f10a 1a01 	add.w	sl, sl, #65537	@ 0x10001
 802054a:	f50e 7c80 	add.w	ip, lr, #256	@ 0x100
 802054e:	4452      	add	r2, sl
 8020550:	eb0c 2c1e 	add.w	ip, ip, lr, lsr #8
 8020554:	0a12      	lsrs	r2, r2, #8
 8020556:	ea4f 2c1c 	mov.w	ip, ip, lsr #8
 802055a:	f002 12ff 	and.w	r2, r2, #16711935	@ 0xff00ff
 802055e:	f40c 4c7f 	and.w	ip, ip, #65280	@ 0xff00
 8020562:	ea42 020c 	orr.w	r2, r2, ip
 8020566:	9d12      	ldr	r5, [sp, #72]	@ 0x48
 8020568:	2dff      	cmp	r5, #255	@ 0xff
 802056a:	d021      	beq.n	80205b0 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1d8>
 802056c:	9d0b      	ldr	r5, [sp, #44]	@ 0x2c
 802056e:	f005 1bff 	and.w	fp, r5, #16711935	@ 0xff00ff
 8020572:	9d12      	ldr	r5, [sp, #72]	@ 0x48
 8020574:	fb05 fb0b 	mul.w	fp, r5, fp
 8020578:	9d0b      	ldr	r5, [sp, #44]	@ 0x2c
 802057a:	f405 4a7f 	and.w	sl, r5, #65280	@ 0xff00
 802057e:	9d12      	ldr	r5, [sp, #72]	@ 0x48
 8020580:	ea4f 2e1b 	mov.w	lr, fp, lsr #8
 8020584:	fb05 fa0a 	mul.w	sl, r5, sl
 8020588:	f00e 1eff 	and.w	lr, lr, #16711935	@ 0xff00ff
 802058c:	f10b 1b01 	add.w	fp, fp, #65537	@ 0x10001
 8020590:	f50a 7c80 	add.w	ip, sl, #256	@ 0x100
 8020594:	44de      	add	lr, fp
 8020596:	eb0c 2a1a 	add.w	sl, ip, sl, lsr #8
 802059a:	ea4f 2e1e 	mov.w	lr, lr, lsr #8
 802059e:	ea4f 2a1a 	mov.w	sl, sl, lsr #8
 80205a2:	f00e 1eff 	and.w	lr, lr, #16711935	@ 0xff00ff
 80205a6:	f40a 4a7f 	and.w	sl, sl, #65280	@ 0xff00
 80205aa:	ea4e 050a 	orr.w	r5, lr, sl
 80205ae:	950b      	str	r5, [sp, #44]	@ 0x2c
 80205b0:	9d10      	ldr	r5, [sp, #64]	@ 0x40
 80205b2:	2dff      	cmp	r5, #255	@ 0xff
 80205b4:	d021      	beq.n	80205fa <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x222>
 80205b6:	9d08      	ldr	r5, [sp, #32]
 80205b8:	f005 1bff 	and.w	fp, r5, #16711935	@ 0xff00ff
 80205bc:	9d10      	ldr	r5, [sp, #64]	@ 0x40
 80205be:	fb05 fb0b 	mul.w	fp, r5, fp
 80205c2:	9d08      	ldr	r5, [sp, #32]
 80205c4:	f405 4e7f 	and.w	lr, r5, #65280	@ 0xff00
 80205c8:	9d10      	ldr	r5, [sp, #64]	@ 0x40
 80205ca:	fb05 fa0e 	mul.w	sl, r5, lr
 80205ce:	ea4f 2e1b 	mov.w	lr, fp, lsr #8
 80205d2:	f00e 1eff 	and.w	lr, lr, #16711935	@ 0xff00ff
 80205d6:	f10b 1b01 	add.w	fp, fp, #65537	@ 0x10001
 80205da:	f50a 7c80 	add.w	ip, sl, #256	@ 0x100
 80205de:	44de      	add	lr, fp
 80205e0:	eb0c 2a1a 	add.w	sl, ip, sl, lsr #8
 80205e4:	ea4f 2e1e 	mov.w	lr, lr, lsr #8
 80205e8:	ea4f 2a1a 	mov.w	sl, sl, lsr #8
 80205ec:	f00e 1eff 	and.w	lr, lr, #16711935	@ 0xff00ff
 80205f0:	f40a 4a7f 	and.w	sl, sl, #65280	@ 0xff00
 80205f4:	ea4e 050a 	orr.w	r5, lr, sl
 80205f8:	9508      	str	r5, [sp, #32]
 80205fa:	9d13      	ldr	r5, [sp, #76]	@ 0x4c
 80205fc:	2dff      	cmp	r5, #255	@ 0xff
 80205fe:	d021      	beq.n	8020644 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x26c>
 8020600:	9d0c      	ldr	r5, [sp, #48]	@ 0x30
 8020602:	f005 1bff 	and.w	fp, r5, #16711935	@ 0xff00ff
 8020606:	9d13      	ldr	r5, [sp, #76]	@ 0x4c
 8020608:	fb05 fb0b 	mul.w	fp, r5, fp
 802060c:	9d0c      	ldr	r5, [sp, #48]	@ 0x30
 802060e:	f405 4a7f 	and.w	sl, r5, #65280	@ 0xff00
 8020612:	9d13      	ldr	r5, [sp, #76]	@ 0x4c
 8020614:	ea4f 2e1b 	mov.w	lr, fp, lsr #8
 8020618:	fb05 fa0a 	mul.w	sl, r5, sl
 802061c:	f00e 1eff 	and.w	lr, lr, #16711935	@ 0xff00ff
 8020620:	f10b 1b01 	add.w	fp, fp, #65537	@ 0x10001
 8020624:	f50a 7c80 	add.w	ip, sl, #256	@ 0x100
 8020628:	44de      	add	lr, fp
 802062a:	eb0c 2a1a 	add.w	sl, ip, sl, lsr #8
 802062e:	ea4f 2e1e 	mov.w	lr, lr, lsr #8
 8020632:	ea4f 2a1a 	mov.w	sl, sl, lsr #8
 8020636:	f00e 1eff 	and.w	lr, lr, #16711935	@ 0xff00ff
 802063a:	f40a 4a7f 	and.w	sl, sl, #65280	@ 0xff00
 802063e:	ea4e 050a 	orr.w	r5, lr, sl
 8020642:	950c      	str	r5, [sp, #48]	@ 0x30
 8020644:	9d0b      	ldr	r5, [sp, #44]	@ 0x2c
 8020646:	f005 1cff 	and.w	ip, r5, #16711935	@ 0xff00ff
 802064a:	9d08      	ldr	r5, [sp, #32]
 802064c:	f002 1eff 	and.w	lr, r2, #16711935	@ 0xff00ff
 8020650:	fb08 fc0c 	mul.w	ip, r8, ip
 8020654:	fb01 cc0e 	mla	ip, r1, lr, ip
 8020658:	f005 1eff 	and.w	lr, r5, #16711935	@ 0xff00ff
 802065c:	9d0c      	ldr	r5, [sp, #48]	@ 0x30
 802065e:	fb00 cc0e 	mla	ip, r0, lr, ip
 8020662:	f005 1eff 	and.w	lr, r5, #16711935	@ 0xff00ff
 8020666:	9d0b      	ldr	r5, [sp, #44]	@ 0x2c
 8020668:	fb09 cc0e 	mla	ip, r9, lr, ip
 802066c:	f405 4e7f 	and.w	lr, r5, #65280	@ 0xff00
 8020670:	f402 427f 	and.w	r2, r2, #65280	@ 0xff00
 8020674:	fb08 f80e 	mul.w	r8, r8, lr
 8020678:	fb01 8202 	mla	r2, r1, r2, r8
 802067c:	9908      	ldr	r1, [sp, #32]
 802067e:	f401 4a7f 	and.w	sl, r1, #65280	@ 0xff00
 8020682:	990c      	ldr	r1, [sp, #48]	@ 0x30
 8020684:	fb00 220a 	mla	r2, r0, sl, r2
 8020688:	f401 407f 	and.w	r0, r1, #65280	@ 0xff00
 802068c:	fb09 2900 	mla	r9, r9, r0, r2
 8020690:	ea4f 2c1c 	mov.w	ip, ip, lsr #8
 8020694:	ea4f 2919 	mov.w	r9, r9, lsr #8
 8020698:	f00c 1cff 	and.w	ip, ip, #16711935	@ 0xff00ff
 802069c:	f409 497f 	and.w	r9, r9, #65280	@ 0xff00
 80206a0:	ea4c 0c09 	orr.w	ip, ip, r9
 80206a4:	2bff      	cmp	r3, #255	@ 0xff
 80206a6:	ea4f 221c 	mov.w	r2, ip, lsr #8
 80206aa:	f040 8091 	bne.w	80207d0 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3f8>
 80206ae:	ea4f 135c 	mov.w	r3, ip, lsr #5
 80206b2:	f422 62ff 	bic.w	r2, r2, #2040	@ 0x7f8
 80206b6:	f403 63fc 	and.w	r3, r3, #2016	@ 0x7e0
 80206ba:	f022 0207 	bic.w	r2, r2, #7
 80206be:	431a      	orrs	r2, r3
 80206c0:	f3cc 0cc4 	ubfx	ip, ip, #3, #5
 80206c4:	ea4c 0c02 	orr.w	ip, ip, r2
 80206c8:	f8a7 c000 	strh.w	ip, [r7]
 80206cc:	9b27      	ldr	r3, [sp, #156]	@ 0x9c
 80206ce:	441c      	add	r4, r3
 80206d0:	9b28      	ldr	r3, [sp, #160]	@ 0xa0
 80206d2:	441e      	add	r6, r3
 80206d4:	9b17      	ldr	r3, [sp, #92]	@ 0x5c
 80206d6:	3b01      	subs	r3, #1
 80206d8:	3702      	adds	r7, #2
 80206da:	9317      	str	r3, [sp, #92]	@ 0x5c
 80206dc:	e6c0      	b.n	8020460 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x88>
 80206de:	9b27      	ldr	r3, [sp, #156]	@ 0x9c
 80206e0:	441c      	add	r4, r3
 80206e2:	9b28      	ldr	r3, [sp, #160]	@ 0xa0
 80206e4:	441e      	add	r6, r3
 80206e6:	9b07      	ldr	r3, [sp, #28]
 80206e8:	3b01      	subs	r3, #1
 80206ea:	9307      	str	r3, [sp, #28]
 80206ec:	9b0a      	ldr	r3, [sp, #40]	@ 0x28
 80206ee:	3302      	adds	r3, #2
 80206f0:	930a      	str	r3, [sp, #40]	@ 0x28
 80206f2:	e695      	b.n	8020420 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x48>
 80206f4:	d024      	beq.n	8020740 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x368>
 80206f6:	9b07      	ldr	r3, [sp, #28]
 80206f8:	9827      	ldr	r0, [sp, #156]	@ 0x9c
 80206fa:	3b01      	subs	r3, #1
 80206fc:	fb00 4003 	mla	r0, r0, r3, r4
 8020700:	1400      	asrs	r0, r0, #16
 8020702:	f53f aeaa 	bmi.w	802045a <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x82>
 8020706:	3901      	subs	r1, #1
 8020708:	4288      	cmp	r0, r1
 802070a:	f6bf aea6 	bge.w	802045a <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x82>
 802070e:	9928      	ldr	r1, [sp, #160]	@ 0xa0
 8020710:	fb01 6303 	mla	r3, r1, r3, r6
 8020714:	141b      	asrs	r3, r3, #16
 8020716:	f53f aea0 	bmi.w	802045a <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x82>
 802071a:	3a01      	subs	r2, #1
 802071c:	4293      	cmp	r3, r2
 802071e:	f6bf ae9c 	bge.w	802045a <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x82>
 8020722:	f8dd b01c 	ldr.w	fp, [sp, #28]
 8020726:	f8dd 8028 	ldr.w	r8, [sp, #40]	@ 0x28
 802072a:	f1bb 0f00 	cmp.w	fp, #0
 802072e:	f300 809a 	bgt.w	8020866 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x48e>
 8020732:	9b07      	ldr	r3, [sp, #28]
 8020734:	ea23 75e3 	bic.w	r5, r3, r3, asr #31
 8020738:	9b0a      	ldr	r3, [sp, #40]	@ 0x28
 802073a:	eb03 0345 	add.w	r3, r3, r5, lsl #1
 802073e:	930a      	str	r3, [sp, #40]	@ 0x28
 8020740:	9b16      	ldr	r3, [sp, #88]	@ 0x58
 8020742:	2b00      	cmp	r3, #0
 8020744:	f340 81eb 	ble.w	8020b1e <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x746>
 8020748:	ee30 0a04 	vadd.f32	s0, s0, s8
 802074c:	eeb7 7a00 	vmov.f32	s14, #112	@ 0x3f800000  1.0
 8020750:	eec7 7a00 	vdiv.f32	s15, s14, s0
 8020754:	9b24      	ldr	r3, [sp, #144]	@ 0x90
 8020756:	ee70 0aa4 	vadd.f32	s1, s1, s9
 802075a:	ee31 1a05 	vadd.f32	s2, s2, s10
 802075e:	ee20 7aa7 	vmul.f32	s14, s1, s15
 8020762:	eef0 6a62 	vmov.f32	s13, s5
 8020766:	ee61 7a27 	vmul.f32	s15, s2, s15
 802076a:	eefe 6ac8 	vcvt.s32.f32	s13, s13, #16
 802076e:	ee77 2a62 	vsub.f32	s5, s14, s5
 8020772:	ee16 4a90 	vmov	r4, s13
 8020776:	eefe 2ac8 	vcvt.s32.f32	s5, s5, #16
 802077a:	eef0 6a43 	vmov.f32	s13, s6
 802077e:	ee37 3ac3 	vsub.f32	s6, s15, s6
 8020782:	ee12 2a90 	vmov	r2, s5
 8020786:	eebe 3ac8 	vcvt.s32.f32	s6, s6, #16
 802078a:	fb92 f3f3 	sdiv	r3, r2, r3
 802078e:	ee13 2a10 	vmov	r2, s6
 8020792:	9327      	str	r3, [sp, #156]	@ 0x9c
 8020794:	9b24      	ldr	r3, [sp, #144]	@ 0x90
 8020796:	fb92 f3f3 	sdiv	r3, r2, r3
 802079a:	9328      	str	r3, [sp, #160]	@ 0xa0
 802079c:	9b16      	ldr	r3, [sp, #88]	@ 0x58
 802079e:	9a18      	ldr	r2, [sp, #96]	@ 0x60
 80207a0:	3b01      	subs	r3, #1
 80207a2:	eefe 6ac8 	vcvt.s32.f32	s13, s13, #16
 80207a6:	9316      	str	r3, [sp, #88]	@ 0x58
 80207a8:	9b24      	ldr	r3, [sp, #144]	@ 0x90
 80207aa:	bf08      	it	eq
 80207ac:	4613      	moveq	r3, r2
 80207ae:	ee16 6a90 	vmov	r6, s13
 80207b2:	9307      	str	r3, [sp, #28]
 80207b4:	eeb0 3a67 	vmov.f32	s6, s15
 80207b8:	eef0 2a47 	vmov.f32	s5, s14
 80207bc:	e622      	b.n	8020404 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2c>
 80207be:	2800      	cmp	r0, #0
 80207c0:	f43f ae92 	beq.w	80204e8 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x110>
 80207c4:	f858 3023 	ldr.w	r3, [r8, r3, lsl #2]
 80207c8:	9308      	str	r3, [sp, #32]
 80207ca:	0e1b      	lsrs	r3, r3, #24
 80207cc:	9310      	str	r3, [sp, #64]	@ 0x40
 80207ce:	e68b      	b.n	80204e8 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x110>
 80207d0:	8839      	ldrh	r1, [r7, #0]
 80207d2:	4dd4      	ldr	r5, [pc, #848]	@ (8020b24 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x74c>)
 80207d4:	43db      	mvns	r3, r3
 80207d6:	ea4f 2e21 	mov.w	lr, r1, asr #8
 80207da:	fa5f f883 	uxtb.w	r8, r3
 80207de:	f00e 0ef8 	and.w	lr, lr, #248	@ 0xf8
 80207e2:	fb0e fe08 	mul.w	lr, lr, r8
 80207e6:	10c8      	asrs	r0, r1, #3
 80207e8:	00cb      	lsls	r3, r1, #3
 80207ea:	f000 00fc 	and.w	r0, r0, #252	@ 0xfc
 80207ee:	f10e 0101 	add.w	r1, lr, #1
 80207f2:	eb01 2e1e 	add.w	lr, r1, lr, lsr #8
 80207f6:	fb00 f008 	mul.w	r0, r0, r8
 80207fa:	ea4f 411c 	mov.w	r1, ip, lsr #16
 80207fe:	eb01 211e 	add.w	r1, r1, lr, lsr #8
 8020802:	f100 0e01 	add.w	lr, r0, #1
 8020806:	eb0e 2010 	add.w	r0, lr, r0, lsr #8
 802080a:	eb02 2210 	add.w	r2, r2, r0, lsr #8
 802080e:	b2db      	uxtb	r3, r3
 8020810:	b2c9      	uxtb	r1, r1
 8020812:	00d2      	lsls	r2, r2, #3
 8020814:	fb03 f308 	mul.w	r3, r3, r8
 8020818:	ea05 2101 	and.w	r1, r5, r1, lsl #8
 802081c:	f402 62fc 	and.w	r2, r2, #2016	@ 0x7e0
 8020820:	430a      	orrs	r2, r1
 8020822:	1c59      	adds	r1, r3, #1
 8020824:	eb01 2313 	add.w	r3, r1, r3, lsr #8
 8020828:	eb0c 2c13 	add.w	ip, ip, r3, lsr #8
 802082c:	e748      	b.n	80206c0 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2e8>
 802082e:	f112 0801 	adds.w	r8, r2, #1
 8020832:	f53f af4b 	bmi.w	80206cc <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2f4>
 8020836:	4543      	cmp	r3, r8
 8020838:	f6ff af48 	blt.w	80206cc <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2f4>
 802083c:	f11c 0801 	adds.w	r8, ip, #1
 8020840:	f53f af44 	bmi.w	80206cc <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2f4>
 8020844:	45c6      	cmp	lr, r8
 8020846:	f6ff af41 	blt.w	80206cc <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2f4>
 802084a:	e9cd 2c01 	strd	r2, ip, [sp, #4]
 802084e:	fa0f f28e 	sxth.w	r2, lr
 8020852:	e9cd 1003 	strd	r1, r0, [sp, #12]
 8020856:	9200      	str	r2, [sp, #0]
 8020858:	b21b      	sxth	r3, r3
 802085a:	9a0f      	ldr	r2, [sp, #60]	@ 0x3c
 802085c:	9819      	ldr	r0, [sp, #100]	@ 0x64
 802085e:	4639      	mov	r1, r7
 8020860:	f7ff fc87 	bl	8020172 <_ZNK8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKmssiihh>
 8020864:	e732      	b.n	80206cc <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2f4>
 8020866:	9b2c      	ldr	r3, [sp, #176]	@ 0xb0
 8020868:	9d0f      	ldr	r5, [sp, #60]	@ 0x3c
 802086a:	f9b3 7008 	ldrsh.w	r7, [r3, #8]
 802086e:	1421      	asrs	r1, r4, #16
 8020870:	1433      	asrs	r3, r6, #16
 8020872:	fb07 1303 	mla	r3, r7, r3, r1
 8020876:	990f      	ldr	r1, [sp, #60]	@ 0x3c
 8020878:	eb01 0183 	add.w	r1, r1, r3, lsl #2
 802087c:	f855 3023 	ldr.w	r3, [r5, r3, lsl #2]
 8020880:	f3c4 3203 	ubfx	r2, r4, #12, #4
 8020884:	f3c6 3003 	ubfx	r0, r6, #12, #4
 8020888:	ea4f 6c13 	mov.w	ip, r3, lsr #24
 802088c:	2a00      	cmp	r2, #0
 802088e:	f000 8107 	beq.w	8020aa0 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x6c8>
 8020892:	684d      	ldr	r5, [r1, #4]
 8020894:	950d      	str	r5, [sp, #52]	@ 0x34
 8020896:	0e2d      	lsrs	r5, r5, #24
 8020898:	9514      	str	r5, [sp, #80]	@ 0x50
 802089a:	b178      	cbz	r0, 80208bc <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x4e4>
 802089c:	f107 4780 	add.w	r7, r7, #1073741824	@ 0x40000000
 80208a0:	3f01      	subs	r7, #1
 80208a2:	00bf      	lsls	r7, r7, #2
 80208a4:	3704      	adds	r7, #4
 80208a6:	eb01 0e07 	add.w	lr, r1, r7
 80208aa:	59c9      	ldr	r1, [r1, r7]
 80208ac:	9109      	str	r1, [sp, #36]	@ 0x24
 80208ae:	0e09      	lsrs	r1, r1, #24
 80208b0:	9111      	str	r1, [sp, #68]	@ 0x44
 80208b2:	f8de 1004 	ldr.w	r1, [lr, #4]
 80208b6:	910e      	str	r1, [sp, #56]	@ 0x38
 80208b8:	0e09      	lsrs	r1, r1, #24
 80208ba:	9115      	str	r1, [sp, #84]	@ 0x54
 80208bc:	b292      	uxth	r2, r2
 80208be:	b280      	uxth	r0, r0
 80208c0:	fb02 f900 	mul.w	r9, r2, r0
 80208c4:	ebc9 1000 	rsb	r0, r9, r0, lsl #4
 80208c8:	0112      	lsls	r2, r2, #4
 80208ca:	eba2 0e09 	sub.w	lr, r2, r9
 80208ce:	b280      	uxth	r0, r0
 80208d0:	f5c2 7180 	rsb	r1, r2, #256	@ 0x100
 80208d4:	9a14      	ldr	r2, [sp, #80]	@ 0x50
 80208d6:	9d11      	ldr	r5, [sp, #68]	@ 0x44
 80208d8:	fa1f fe8e 	uxth.w	lr, lr
 80208dc:	1a09      	subs	r1, r1, r0
 80208de:	b289      	uxth	r1, r1
 80208e0:	fb0e f202 	mul.w	r2, lr, r2
 80208e4:	fb01 220c 	mla	r2, r1, ip, r2
 80208e8:	fb00 2205 	mla	r2, r0, r5, r2
 80208ec:	9d15      	ldr	r5, [sp, #84]	@ 0x54
 80208ee:	fb09 2205 	mla	r2, r9, r5, r2
 80208f2:	f3c2 2207 	ubfx	r2, r2, #8, #8
 80208f6:	2a00      	cmp	r2, #0
 80208f8:	f000 80c9 	beq.w	8020a8e <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x6b6>
 80208fc:	f1bc 0fff 	cmp.w	ip, #255	@ 0xff
 8020900:	d019      	beq.n	8020936 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x55e>
 8020902:	f003 1aff 	and.w	sl, r3, #16711935	@ 0xff00ff
 8020906:	fb0c fa0a 	mul.w	sl, ip, sl
 802090a:	f403 437f 	and.w	r3, r3, #65280	@ 0xff00
 802090e:	fb0c fc03 	mul.w	ip, ip, r3
 8020912:	ea4f 231a 	mov.w	r3, sl, lsr #8
 8020916:	f003 13ff 	and.w	r3, r3, #16711935	@ 0xff00ff
 802091a:	f10a 1a01 	add.w	sl, sl, #65537	@ 0x10001
 802091e:	f50c 7780 	add.w	r7, ip, #256	@ 0x100
 8020922:	4453      	add	r3, sl
 8020924:	eb07 271c 	add.w	r7, r7, ip, lsr #8
 8020928:	0a1b      	lsrs	r3, r3, #8
 802092a:	0a3f      	lsrs	r7, r7, #8
 802092c:	f003 13ff 	and.w	r3, r3, #16711935	@ 0xff00ff
 8020930:	f407 477f 	and.w	r7, r7, #65280	@ 0xff00
 8020934:	433b      	orrs	r3, r7
 8020936:	9d14      	ldr	r5, [sp, #80]	@ 0x50
 8020938:	2dff      	cmp	r5, #255	@ 0xff
 802093a:	d020      	beq.n	802097e <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x5a6>
 802093c:	9d0d      	ldr	r5, [sp, #52]	@ 0x34
 802093e:	f005 17ff 	and.w	r7, r5, #16711935	@ 0xff00ff
 8020942:	9d14      	ldr	r5, [sp, #80]	@ 0x50
 8020944:	436f      	muls	r7, r5
 8020946:	9d0d      	ldr	r5, [sp, #52]	@ 0x34
 8020948:	f405 4a7f 	and.w	sl, r5, #65280	@ 0xff00
 802094c:	9d14      	ldr	r5, [sp, #80]	@ 0x50
 802094e:	ea4f 2c17 	mov.w	ip, r7, lsr #8
 8020952:	fb05 fa0a 	mul.w	sl, r5, sl
 8020956:	f107 1701 	add.w	r7, r7, #65537	@ 0x10001
 802095a:	f00c 1cff 	and.w	ip, ip, #16711935	@ 0xff00ff
 802095e:	44bc      	add	ip, r7
 8020960:	f50a 7780 	add.w	r7, sl, #256	@ 0x100
 8020964:	eb07 2a1a 	add.w	sl, r7, sl, lsr #8
 8020968:	ea4f 2c1c 	mov.w	ip, ip, lsr #8
 802096c:	ea4f 2a1a 	mov.w	sl, sl, lsr #8
 8020970:	f00c 1cff 	and.w	ip, ip, #16711935	@ 0xff00ff
 8020974:	f40a 4a7f 	and.w	sl, sl, #65280	@ 0xff00
 8020978:	ea4c 050a 	orr.w	r5, ip, sl
 802097c:	950d      	str	r5, [sp, #52]	@ 0x34
 802097e:	9d11      	ldr	r5, [sp, #68]	@ 0x44
 8020980:	2dff      	cmp	r5, #255	@ 0xff
 8020982:	d020      	beq.n	80209c6 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x5ee>
 8020984:	9d09      	ldr	r5, [sp, #36]	@ 0x24
 8020986:	f005 17ff 	and.w	r7, r5, #16711935	@ 0xff00ff
 802098a:	9d11      	ldr	r5, [sp, #68]	@ 0x44
 802098c:	436f      	muls	r7, r5
 802098e:	9d09      	ldr	r5, [sp, #36]	@ 0x24
 8020990:	f405 4c7f 	and.w	ip, r5, #65280	@ 0xff00
 8020994:	9d11      	ldr	r5, [sp, #68]	@ 0x44
 8020996:	fb05 fa0c 	mul.w	sl, r5, ip
 802099a:	ea4f 2c17 	mov.w	ip, r7, lsr #8
 802099e:	f00c 1cff 	and.w	ip, ip, #16711935	@ 0xff00ff
 80209a2:	f107 1701 	add.w	r7, r7, #65537	@ 0x10001
 80209a6:	44bc      	add	ip, r7
 80209a8:	f50a 7780 	add.w	r7, sl, #256	@ 0x100
 80209ac:	eb07 2a1a 	add.w	sl, r7, sl, lsr #8
 80209b0:	ea4f 2c1c 	mov.w	ip, ip, lsr #8
 80209b4:	ea4f 2a1a 	mov.w	sl, sl, lsr #8
 80209b8:	f00c 1cff 	and.w	ip, ip, #16711935	@ 0xff00ff
 80209bc:	f40a 4a7f 	and.w	sl, sl, #65280	@ 0xff00
 80209c0:	ea4c 050a 	orr.w	r5, ip, sl
 80209c4:	9509      	str	r5, [sp, #36]	@ 0x24
 80209c6:	9d15      	ldr	r5, [sp, #84]	@ 0x54
 80209c8:	2dff      	cmp	r5, #255	@ 0xff
 80209ca:	d020      	beq.n	8020a0e <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x636>
 80209cc:	9d0e      	ldr	r5, [sp, #56]	@ 0x38
 80209ce:	f005 17ff 	and.w	r7, r5, #16711935	@ 0xff00ff
 80209d2:	9d15      	ldr	r5, [sp, #84]	@ 0x54
 80209d4:	436f      	muls	r7, r5
 80209d6:	9d0e      	ldr	r5, [sp, #56]	@ 0x38
 80209d8:	f405 4a7f 	and.w	sl, r5, #65280	@ 0xff00
 80209dc:	9d15      	ldr	r5, [sp, #84]	@ 0x54
 80209de:	ea4f 2c17 	mov.w	ip, r7, lsr #8
 80209e2:	fb05 fa0a 	mul.w	sl, r5, sl
 80209e6:	f107 1701 	add.w	r7, r7, #65537	@ 0x10001
 80209ea:	f00c 1cff 	and.w	ip, ip, #16711935	@ 0xff00ff
 80209ee:	44bc      	add	ip, r7
 80209f0:	f50a 7780 	add.w	r7, sl, #256	@ 0x100
 80209f4:	eb07 2a1a 	add.w	sl, r7, sl, lsr #8
 80209f8:	ea4f 2c1c 	mov.w	ip, ip, lsr #8
 80209fc:	ea4f 2a1a 	mov.w	sl, sl, lsr #8
 8020a00:	f00c 1cff 	and.w	ip, ip, #16711935	@ 0xff00ff
 8020a04:	f40a 4a7f 	and.w	sl, sl, #65280	@ 0xff00
 8020a08:	ea4c 050a 	orr.w	r5, ip, sl
 8020a0c:	950e      	str	r5, [sp, #56]	@ 0x38
 8020a0e:	9d0d      	ldr	r5, [sp, #52]	@ 0x34
 8020a10:	f005 17ff 	and.w	r7, r5, #16711935	@ 0xff00ff
 8020a14:	9d09      	ldr	r5, [sp, #36]	@ 0x24
 8020a16:	f003 1cff 	and.w	ip, r3, #16711935	@ 0xff00ff
 8020a1a:	fb0e f707 	mul.w	r7, lr, r7
 8020a1e:	fb01 770c 	mla	r7, r1, ip, r7
 8020a22:	f005 1cff 	and.w	ip, r5, #16711935	@ 0xff00ff
 8020a26:	9d0e      	ldr	r5, [sp, #56]	@ 0x38
 8020a28:	fb00 770c 	mla	r7, r0, ip, r7
 8020a2c:	f005 1cff 	and.w	ip, r5, #16711935	@ 0xff00ff
 8020a30:	9d0d      	ldr	r5, [sp, #52]	@ 0x34
 8020a32:	fb09 770c 	mla	r7, r9, ip, r7
 8020a36:	f405 4c7f 	and.w	ip, r5, #65280	@ 0xff00
 8020a3a:	fb0e fe0c 	mul.w	lr, lr, ip
 8020a3e:	f403 437f 	and.w	r3, r3, #65280	@ 0xff00
 8020a42:	fb01 e303 	mla	r3, r1, r3, lr
 8020a46:	9909      	ldr	r1, [sp, #36]	@ 0x24
 8020a48:	f401 4a7f 	and.w	sl, r1, #65280	@ 0xff00
 8020a4c:	990e      	ldr	r1, [sp, #56]	@ 0x38
 8020a4e:	fb00 330a 	mla	r3, r0, sl, r3
 8020a52:	f401 4c7f 	and.w	ip, r1, #65280	@ 0xff00
 8020a56:	fb09 3c0c 	mla	ip, r9, ip, r3
 8020a5a:	0a3f      	lsrs	r7, r7, #8
 8020a5c:	ea4f 2c1c 	mov.w	ip, ip, lsr #8
 8020a60:	f007 17ff 	and.w	r7, r7, #16711935	@ 0xff00ff
 8020a64:	f40c 4c7f 	and.w	ip, ip, #65280	@ 0xff00
 8020a68:	ea47 070c 	orr.w	r7, r7, ip
 8020a6c:	2aff      	cmp	r2, #255	@ 0xff
 8020a6e:	ea4f 2317 	mov.w	r3, r7, lsr #8
 8020a72:	d11e      	bne.n	8020ab2 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x6da>
 8020a74:	097a      	lsrs	r2, r7, #5
 8020a76:	f423 63ff 	bic.w	r3, r3, #2040	@ 0x7f8
 8020a7a:	f402 62fc 	and.w	r2, r2, #2016	@ 0x7e0
 8020a7e:	f023 0307 	bic.w	r3, r3, #7
 8020a82:	4313      	orrs	r3, r2
 8020a84:	f3c7 07c4 	ubfx	r7, r7, #3, #5
 8020a88:	431f      	orrs	r7, r3
 8020a8a:	f8a8 7000 	strh.w	r7, [r8]
 8020a8e:	9b27      	ldr	r3, [sp, #156]	@ 0x9c
 8020a90:	441c      	add	r4, r3
 8020a92:	9b28      	ldr	r3, [sp, #160]	@ 0xa0
 8020a94:	f108 0802 	add.w	r8, r8, #2
 8020a98:	441e      	add	r6, r3
 8020a9a:	f10b 3bff 	add.w	fp, fp, #4294967295
 8020a9e:	e644      	b.n	802072a <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x352>
 8020aa0:	2800      	cmp	r0, #0
 8020aa2:	f43f af0b 	beq.w	80208bc <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x4e4>
 8020aa6:	f851 1027 	ldr.w	r1, [r1, r7, lsl #2]
 8020aaa:	9109      	str	r1, [sp, #36]	@ 0x24
 8020aac:	0e09      	lsrs	r1, r1, #24
 8020aae:	9111      	str	r1, [sp, #68]	@ 0x44
 8020ab0:	e704      	b.n	80208bc <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x4e4>
 8020ab2:	f8b8 1000 	ldrh.w	r1, [r8]
 8020ab6:	43d2      	mvns	r2, r2
 8020ab8:	ea4f 2c21 	mov.w	ip, r1, asr #8
 8020abc:	fa5f fe82 	uxtb.w	lr, r2
 8020ac0:	f00c 0cf8 	and.w	ip, ip, #248	@ 0xf8
 8020ac4:	fb0c fc0e 	mul.w	ip, ip, lr
 8020ac8:	10c8      	asrs	r0, r1, #3
 8020aca:	00ca      	lsls	r2, r1, #3
 8020acc:	f10c 0101 	add.w	r1, ip, #1
 8020ad0:	eb01 2c1c 	add.w	ip, r1, ip, lsr #8
 8020ad4:	0c39      	lsrs	r1, r7, #16
 8020ad6:	eb01 2c1c 	add.w	ip, r1, ip, lsr #8
 8020ada:	f000 00fc 	and.w	r0, r0, #252	@ 0xfc
 8020ade:	4911      	ldr	r1, [pc, #68]	@ (8020b24 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x74c>)
 8020ae0:	fb00 f00e 	mul.w	r0, r0, lr
 8020ae4:	fa5f fc8c 	uxtb.w	ip, ip
 8020ae8:	ea01 2c0c 	and.w	ip, r1, ip, lsl #8
 8020aec:	b2d2      	uxtb	r2, r2
 8020aee:	1c41      	adds	r1, r0, #1
 8020af0:	fb02 f20e 	mul.w	r2, r2, lr
 8020af4:	eb01 2010 	add.w	r0, r1, r0, lsr #8
 8020af8:	eb03 2010 	add.w	r0, r3, r0, lsr #8
 8020afc:	1c51      	adds	r1, r2, #1
 8020afe:	00c0      	lsls	r0, r0, #3
 8020b00:	eb01 2212 	add.w	r2, r1, r2, lsr #8
 8020b04:	f400 60fc 	and.w	r0, r0, #2016	@ 0x7e0
 8020b08:	eb07 2712 	add.w	r7, r7, r2, lsr #8
 8020b0c:	ea4c 0c00 	orr.w	ip, ip, r0
 8020b10:	f3c7 07c4 	ubfx	r7, r7, #3, #5
 8020b14:	ea47 0c0c 	orr.w	ip, r7, ip
 8020b18:	f8a8 c000 	strh.w	ip, [r8]
 8020b1c:	e7b7      	b.n	8020a8e <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x6b6>
 8020b1e:	b01b      	add	sp, #108	@ 0x6c
 8020b20:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 8020b24:	fffff800 	.word	0xfffff800

08020b28 <_ZNK8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtsssiihhh>:
 8020b28:	e92d 47f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
 8020b2c:	e9dd 050a 	ldrd	r0, r5, [sp, #40]	@ 0x28
 8020b30:	2d00      	cmp	r5, #0
 8020b32:	f9bd 8020 	ldrsh.w	r8, [sp, #32]
 8020b36:	f9bd 9024 	ldrsh.w	r9, [sp, #36]	@ 0x24
 8020b3a:	f89d 7030 	ldrb.w	r7, [sp, #48]	@ 0x30
 8020b3e:	f89d c034 	ldrb.w	ip, [sp, #52]	@ 0x34
 8020b42:	fb05 0e03 	mla	lr, r5, r3, r0
 8020b46:	f2c0 808c 	blt.w	8020c62 <_ZNK8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtsssiihhh+0x13a>
 8020b4a:	45a9      	cmp	r9, r5
 8020b4c:	f340 8089 	ble.w	8020c62 <_ZNK8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtsssiihhh+0x13a>
 8020b50:	2800      	cmp	r0, #0
 8020b52:	f2c0 8084 	blt.w	8020c5e <_ZNK8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtsssiihhh+0x136>
 8020b56:	4580      	cmp	r8, r0
 8020b58:	f340 8081 	ble.w	8020c5e <_ZNK8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtsssiihhh+0x136>
 8020b5c:	ea4f 045e 	mov.w	r4, lr, lsr #1
 8020b60:	f01e 0f01 	tst.w	lr, #1
 8020b64:	5d16      	ldrb	r6, [r2, r4]
 8020b66:	bf0c      	ite	eq
 8020b68:	f006 060f 	andeq.w	r6, r6, #15
 8020b6c:	1136      	asrne	r6, r6, #4
 8020b6e:	eb06 1606 	add.w	r6, r6, r6, lsl #4
 8020b72:	b2f6      	uxtb	r6, r6
 8020b74:	1c44      	adds	r4, r0, #1
 8020b76:	d477      	bmi.n	8020c68 <_ZNK8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtsssiihhh+0x140>
 8020b78:	45a0      	cmp	r8, r4
 8020b7a:	dd75      	ble.n	8020c68 <_ZNK8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtsssiihhh+0x140>
 8020b7c:	2f00      	cmp	r7, #0
 8020b7e:	d075      	beq.n	8020c6c <_ZNK8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtsssiihhh+0x144>
 8020b80:	f10e 0a01 	add.w	sl, lr, #1
 8020b84:	ea4f 045a 	mov.w	r4, sl, lsr #1
 8020b88:	f01a 0f01 	tst.w	sl, #1
 8020b8c:	5d14      	ldrb	r4, [r2, r4]
 8020b8e:	bf0c      	ite	eq
 8020b90:	f004 040f 	andeq.w	r4, r4, #15
 8020b94:	1124      	asrne	r4, r4, #4
 8020b96:	eb04 1404 	add.w	r4, r4, r4, lsl #4
 8020b9a:	b2e4      	uxtb	r4, r4
 8020b9c:	3501      	adds	r5, #1
 8020b9e:	d469      	bmi.n	8020c74 <_ZNK8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtsssiihhh+0x14c>
 8020ba0:	45a9      	cmp	r9, r5
 8020ba2:	dd67      	ble.n	8020c74 <_ZNK8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtsssiihhh+0x14c>
 8020ba4:	f1bc 0f00 	cmp.w	ip, #0
 8020ba8:	d067      	beq.n	8020c7a <_ZNK8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtsssiihhh+0x152>
 8020baa:	2800      	cmp	r0, #0
 8020bac:	db60      	blt.n	8020c70 <_ZNK8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtsssiihhh+0x148>
 8020bae:	4580      	cmp	r8, r0
 8020bb0:	dd5e      	ble.n	8020c70 <_ZNK8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtsssiihhh+0x148>
 8020bb2:	eb03 090e 	add.w	r9, r3, lr
 8020bb6:	ea4f 0559 	mov.w	r5, r9, lsr #1
 8020bba:	f019 0f01 	tst.w	r9, #1
 8020bbe:	5d55      	ldrb	r5, [r2, r5]
 8020bc0:	bf0c      	ite	eq
 8020bc2:	f005 050f 	andeq.w	r5, r5, #15
 8020bc6:	112d      	asrne	r5, r5, #4
 8020bc8:	eb05 1505 	add.w	r5, r5, r5, lsl #4
 8020bcc:	b2ed      	uxtb	r5, r5
 8020bce:	3001      	adds	r0, #1
 8020bd0:	d456      	bmi.n	8020c80 <_ZNK8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtsssiihhh+0x158>
 8020bd2:	4580      	cmp	r8, r0
 8020bd4:	dd54      	ble.n	8020c80 <_ZNK8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtsssiihhh+0x158>
 8020bd6:	2f00      	cmp	r7, #0
 8020bd8:	d054      	beq.n	8020c84 <_ZNK8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtsssiihhh+0x15c>
 8020bda:	3301      	adds	r3, #1
 8020bdc:	449e      	add	lr, r3
 8020bde:	ea4f 035e 	mov.w	r3, lr, lsr #1
 8020be2:	f01e 0f01 	tst.w	lr, #1
 8020be6:	5cd0      	ldrb	r0, [r2, r3]
 8020be8:	bf0c      	ite	eq
 8020bea:	f000 000f 	andeq.w	r0, r0, #15
 8020bee:	1100      	asrne	r0, r0, #4
 8020bf0:	eb00 1000 	add.w	r0, r0, r0, lsl #4
 8020bf4:	b2c3      	uxtb	r3, r0
 8020bf6:	b2ba      	uxth	r2, r7
 8020bf8:	fa1f fc8c 	uxth.w	ip, ip
 8020bfc:	fb02 f00c 	mul.w	r0, r2, ip
 8020c00:	ebc0 1c0c 	rsb	ip, r0, ip, lsl #4
 8020c04:	0112      	lsls	r2, r2, #4
 8020c06:	fa1f fc8c 	uxth.w	ip, ip
 8020c0a:	f5c2 7780 	rsb	r7, r2, #256	@ 0x100
 8020c0e:	1a12      	subs	r2, r2, r0
 8020c10:	eba7 070c 	sub.w	r7, r7, ip
 8020c14:	b292      	uxth	r2, r2
 8020c16:	b2bf      	uxth	r7, r7
 8020c18:	4362      	muls	r2, r4
 8020c1a:	fb06 2207 	mla	r2, r6, r7, r2
 8020c1e:	fb0c 2505 	mla	r5, ip, r5, r2
 8020c22:	fb00 5303 	mla	r3, r0, r3, r5
 8020c26:	f3c3 2307 	ubfx	r3, r3, #8, #8
 8020c2a:	b1b3      	cbz	r3, 8020c5a <_ZNK8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtsssiihhh+0x132>
 8020c2c:	f89d 2038 	ldrb.w	r2, [sp, #56]	@ 0x38
 8020c30:	435a      	muls	r2, r3
 8020c32:	1c53      	adds	r3, r2, #1
 8020c34:	eb03 2312 	add.w	r3, r3, r2, lsr #8
 8020c38:	4a2d      	ldr	r2, [pc, #180]	@ (8020cf0 <_ZNK8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtsssiihhh+0x1c8>)
 8020c3a:	121b      	asrs	r3, r3, #8
 8020c3c:	6812      	ldr	r2, [r2, #0]
 8020c3e:	2bff      	cmp	r3, #255	@ 0xff
 8020c40:	ea4f 2612 	mov.w	r6, r2, lsr #8
 8020c44:	d120      	bne.n	8020c88 <_ZNK8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtsssiihhh+0x160>
 8020c46:	4b2b      	ldr	r3, [pc, #172]	@ (8020cf4 <_ZNK8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtsssiihhh+0x1cc>)
 8020c48:	0950      	lsrs	r0, r2, #5
 8020c4a:	f400 60fc 	and.w	r0, r0, #2016	@ 0x7e0
 8020c4e:	4033      	ands	r3, r6
 8020c50:	4318      	orrs	r0, r3
 8020c52:	f3c2 02c4 	ubfx	r2, r2, #3, #5
 8020c56:	4302      	orrs	r2, r0
 8020c58:	800a      	strh	r2, [r1, #0]
 8020c5a:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
 8020c5e:	2600      	movs	r6, #0
 8020c60:	e788      	b.n	8020b74 <_ZNK8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtsssiihhh+0x4c>
 8020c62:	2400      	movs	r4, #0
 8020c64:	4626      	mov	r6, r4
 8020c66:	e799      	b.n	8020b9c <_ZNK8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtsssiihhh+0x74>
 8020c68:	2400      	movs	r4, #0
 8020c6a:	e797      	b.n	8020b9c <_ZNK8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtsssiihhh+0x74>
 8020c6c:	463c      	mov	r4, r7
 8020c6e:	e795      	b.n	8020b9c <_ZNK8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtsssiihhh+0x74>
 8020c70:	2500      	movs	r5, #0
 8020c72:	e7ac      	b.n	8020bce <_ZNK8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtsssiihhh+0xa6>
 8020c74:	2300      	movs	r3, #0
 8020c76:	461d      	mov	r5, r3
 8020c78:	e7bd      	b.n	8020bf6 <_ZNK8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtsssiihhh+0xce>
 8020c7a:	4663      	mov	r3, ip
 8020c7c:	4665      	mov	r5, ip
 8020c7e:	e7ba      	b.n	8020bf6 <_ZNK8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtsssiihhh+0xce>
 8020c80:	2300      	movs	r3, #0
 8020c82:	e7b8      	b.n	8020bf6 <_ZNK8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtsssiihhh+0xce>
 8020c84:	463b      	mov	r3, r7
 8020c86:	e7b6      	b.n	8020bf6 <_ZNK8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtsssiihhh+0xce>
 8020c88:	880d      	ldrh	r5, [r1, #0]
 8020c8a:	b29f      	uxth	r7, r3
 8020c8c:	122c      	asrs	r4, r5, #8
 8020c8e:	f3c2 4007 	ubfx	r0, r2, #16, #8
 8020c92:	43db      	mvns	r3, r3
 8020c94:	b2db      	uxtb	r3, r3
 8020c96:	fb10 f007 	smulbb	r0, r0, r7
 8020c9a:	f004 04f8 	and.w	r4, r4, #248	@ 0xf8
 8020c9e:	fb04 0403 	mla	r4, r4, r3, r0
 8020ca2:	b2f6      	uxtb	r6, r6
 8020ca4:	10e8      	asrs	r0, r5, #3
 8020ca6:	b2d2      	uxtb	r2, r2
 8020ca8:	00ed      	lsls	r5, r5, #3
 8020caa:	f000 00fc 	and.w	r0, r0, #252	@ 0xfc
 8020cae:	fb12 f207 	smulbb	r2, r2, r7
 8020cb2:	fb16 f607 	smulbb	r6, r6, r7
 8020cb6:	b2ed      	uxtb	r5, r5
 8020cb8:	b2a4      	uxth	r4, r4
 8020cba:	fb00 6603 	mla	r6, r0, r3, r6
 8020cbe:	fb05 2303 	mla	r3, r5, r3, r2
 8020cc2:	b29a      	uxth	r2, r3
 8020cc4:	1c63      	adds	r3, r4, #1
 8020cc6:	b2b0      	uxth	r0, r6
 8020cc8:	eb03 2414 	add.w	r4, r3, r4, lsr #8
 8020ccc:	1c53      	adds	r3, r2, #1
 8020cce:	eb03 2312 	add.w	r3, r3, r2, lsr #8
 8020cd2:	1c42      	adds	r2, r0, #1
 8020cd4:	eb02 2010 	add.w	r0, r2, r0, lsr #8
 8020cd8:	f404 4478 	and.w	r4, r4, #63488	@ 0xf800
 8020cdc:	f3c3 23c4 	ubfx	r3, r3, #11, #5
 8020ce0:	0940      	lsrs	r0, r0, #5
 8020ce2:	4323      	orrs	r3, r4
 8020ce4:	f400 60fc 	and.w	r0, r0, #2016	@ 0x7e0
 8020ce8:	4303      	orrs	r3, r0
 8020cea:	800b      	strh	r3, [r1, #0]
 8020cec:	e7b5      	b.n	8020c5a <_ZNK8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtsssiihhh+0x132>
 8020cee:	bf00      	nop
 8020cf0:	20002dc4 	.word	0x20002dc4
 8020cf4:	00fff800 	.word	0x00fff800

08020cf8 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff>:
 8020cf8:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8020cfc:	b097      	sub	sp, #92	@ 0x5c
 8020cfe:	e9dd 4621 	ldrd	r4, r6, [sp, #132]	@ 0x84
 8020d02:	9214      	str	r2, [sp, #80]	@ 0x50
 8020d04:	9309      	str	r3, [sp, #36]	@ 0x24
 8020d06:	9a25      	ldr	r2, [sp, #148]	@ 0x94
 8020d08:	f89d 30a4 	ldrb.w	r3, [sp, #164]	@ 0xa4
 8020d0c:	910d      	str	r1, [sp, #52]	@ 0x34
 8020d0e:	930f      	str	r3, [sp, #60]	@ 0x3c
 8020d10:	e9dd 1326 	ldrd	r1, r3, [sp, #152]	@ 0x98
 8020d14:	9015      	str	r0, [sp, #84]	@ 0x54
 8020d16:	6850      	ldr	r0, [r2, #4]
 8020d18:	6812      	ldr	r2, [r2, #0]
 8020d1a:	fb00 1303 	mla	r3, r0, r3, r1
 8020d1e:	eb02 0943 	add.w	r9, r2, r3, lsl #1
 8020d22:	9b28      	ldr	r3, [sp, #160]	@ 0xa0
 8020d24:	689b      	ldr	r3, [r3, #8]
 8020d26:	3301      	adds	r3, #1
 8020d28:	f023 0301 	bic.w	r3, r3, #1
 8020d2c:	930a      	str	r3, [sp, #40]	@ 0x28
 8020d2e:	9b28      	ldr	r3, [sp, #160]	@ 0xa0
 8020d30:	681f      	ldr	r7, [r3, #0]
 8020d32:	9b0d      	ldr	r3, [sp, #52]	@ 0x34
 8020d34:	2b00      	cmp	r3, #0
 8020d36:	dc03      	bgt.n	8020d40 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x48>
 8020d38:	9b14      	ldr	r3, [sp, #80]	@ 0x50
 8020d3a:	2b00      	cmp	r3, #0
 8020d3c:	f340 8287 	ble.w	802124e <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x556>
 8020d40:	9b28      	ldr	r3, [sp, #160]	@ 0xa0
 8020d42:	f9b3 1008 	ldrsh.w	r1, [r3, #8]
 8020d46:	f9b3 200c 	ldrsh.w	r2, [r3, #12]
 8020d4a:	1e48      	subs	r0, r1, #1
 8020d4c:	f102 3cff 	add.w	ip, r2, #4294967295
 8020d50:	9b09      	ldr	r3, [sp, #36]	@ 0x24
 8020d52:	2b00      	cmp	r3, #0
 8020d54:	f340 80c4 	ble.w	8020ee0 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1e8>
 8020d58:	ea5f 4e24 	movs.w	lr, r4, asr #16
 8020d5c:	ea4f 4326 	mov.w	r3, r6, asr #16
 8020d60:	d406      	bmi.n	8020d70 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x78>
 8020d62:	4586      	cmp	lr, r0
 8020d64:	da04      	bge.n	8020d70 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x78>
 8020d66:	2b00      	cmp	r3, #0
 8020d68:	db02      	blt.n	8020d70 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x78>
 8020d6a:	4563      	cmp	r3, ip
 8020d6c:	f2c0 80b9 	blt.w	8020ee2 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1ea>
 8020d70:	f11e 0e01 	adds.w	lr, lr, #1
 8020d74:	f100 80aa 	bmi.w	8020ecc <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1d4>
 8020d78:	4571      	cmp	r1, lr
 8020d7a:	f2c0 80a7 	blt.w	8020ecc <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1d4>
 8020d7e:	3301      	adds	r3, #1
 8020d80:	f100 80a4 	bmi.w	8020ecc <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1d4>
 8020d84:	429a      	cmp	r2, r3
 8020d86:	f2c0 80a1 	blt.w	8020ecc <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1d4>
 8020d8a:	9b09      	ldr	r3, [sp, #36]	@ 0x24
 8020d8c:	f9bd a028 	ldrsh.w	sl, [sp, #40]	@ 0x28
 8020d90:	930e      	str	r3, [sp, #56]	@ 0x38
 8020d92:	46c8      	mov	r8, r9
 8020d94:	9b0e      	ldr	r3, [sp, #56]	@ 0x38
 8020d96:	2b00      	cmp	r3, #0
 8020d98:	f340 80c3 	ble.w	8020f22 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x22a>
 8020d9c:	9b28      	ldr	r3, [sp, #160]	@ 0xa0
 8020d9e:	e9d3 ce02 	ldrd	ip, lr, [r3, #8]
 8020da2:	1423      	asrs	r3, r4, #16
 8020da4:	ea4f 4026 	mov.w	r0, r6, asr #16
 8020da8:	f3c4 3203 	ubfx	r2, r4, #12, #4
 8020dac:	f3c6 3103 	ubfx	r1, r6, #12, #4
 8020db0:	f100 814d 	bmi.w	802104e <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x356>
 8020db4:	f10c 3bff 	add.w	fp, ip, #4294967295
 8020db8:	455b      	cmp	r3, fp
 8020dba:	f280 8148 	bge.w	802104e <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x356>
 8020dbe:	2800      	cmp	r0, #0
 8020dc0:	f2c0 8145 	blt.w	802104e <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x356>
 8020dc4:	f10e 3bff 	add.w	fp, lr, #4294967295
 8020dc8:	4558      	cmp	r0, fp
 8020dca:	f280 8140 	bge.w	802104e <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x356>
 8020dce:	9d0a      	ldr	r5, [sp, #40]	@ 0x28
 8020dd0:	fb00 3305 	mla	r3, r0, r5, r3
 8020dd4:	0858      	lsrs	r0, r3, #1
 8020dd6:	07dd      	lsls	r5, r3, #31
 8020dd8:	f817 c000 	ldrb.w	ip, [r7, r0]
 8020ddc:	bf54      	ite	pl
 8020dde:	f00c 0c0f 	andpl.w	ip, ip, #15
 8020de2:	ea4f 1c2c 	movmi.w	ip, ip, asr #4
 8020de6:	eb0c 1c0c 	add.w	ip, ip, ip, lsl #4
 8020dea:	fa5f fc8c 	uxtb.w	ip, ip
 8020dee:	2a00      	cmp	r2, #0
 8020df0:	f000 80db 	beq.w	8020faa <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2b2>
 8020df4:	1c58      	adds	r0, r3, #1
 8020df6:	ea4f 0e50 	mov.w	lr, r0, lsr #1
 8020dfa:	07c0      	lsls	r0, r0, #31
 8020dfc:	f817 e00e 	ldrb.w	lr, [r7, lr]
 8020e00:	bf54      	ite	pl
 8020e02:	f00e 0e0f 	andpl.w	lr, lr, #15
 8020e06:	ea4f 1e2e 	movmi.w	lr, lr, asr #4
 8020e0a:	eb0e 1e0e 	add.w	lr, lr, lr, lsl #4
 8020e0e:	fa5f f08e 	uxtb.w	r0, lr
 8020e12:	9010      	str	r0, [sp, #64]	@ 0x40
 8020e14:	b1c9      	cbz	r1, 8020e4a <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x152>
 8020e16:	4453      	add	r3, sl
 8020e18:	0858      	lsrs	r0, r3, #1
 8020e1a:	07dd      	lsls	r5, r3, #31
 8020e1c:	5c38      	ldrb	r0, [r7, r0]
 8020e1e:	bf54      	ite	pl
 8020e20:	f000 000f 	andpl.w	r0, r0, #15
 8020e24:	1100      	asrmi	r0, r0, #4
 8020e26:	eb00 1000 	add.w	r0, r0, r0, lsl #4
 8020e2a:	3301      	adds	r3, #1
 8020e2c:	b2c0      	uxtb	r0, r0
 8020e2e:	900b      	str	r0, [sp, #44]	@ 0x2c
 8020e30:	0858      	lsrs	r0, r3, #1
 8020e32:	07dd      	lsls	r5, r3, #31
 8020e34:	f817 e000 	ldrb.w	lr, [r7, r0]
 8020e38:	bf54      	ite	pl
 8020e3a:	f00e 030f 	andpl.w	r3, lr, #15
 8020e3e:	ea4f 132e 	movmi.w	r3, lr, asr #4
 8020e42:	eb03 1303 	add.w	r3, r3, r3, lsl #4
 8020e46:	b2db      	uxtb	r3, r3
 8020e48:	9311      	str	r3, [sp, #68]	@ 0x44
 8020e4a:	b292      	uxth	r2, r2
 8020e4c:	b289      	uxth	r1, r1
 8020e4e:	fb02 f301 	mul.w	r3, r2, r1
 8020e52:	ebc3 1101 	rsb	r1, r3, r1, lsl #4
 8020e56:	0112      	lsls	r2, r2, #4
 8020e58:	b289      	uxth	r1, r1
 8020e5a:	f5c2 7080 	rsb	r0, r2, #256	@ 0x100
 8020e5e:	9d10      	ldr	r5, [sp, #64]	@ 0x40
 8020e60:	1ad2      	subs	r2, r2, r3
 8020e62:	1a40      	subs	r0, r0, r1
 8020e64:	b292      	uxth	r2, r2
 8020e66:	436a      	muls	r2, r5
 8020e68:	b280      	uxth	r0, r0
 8020e6a:	fb0c 2c00 	mla	ip, ip, r0, r2
 8020e6e:	9a0b      	ldr	r2, [sp, #44]	@ 0x2c
 8020e70:	fb01 c102 	mla	r1, r1, r2, ip
 8020e74:	9a11      	ldr	r2, [sp, #68]	@ 0x44
 8020e76:	fb03 1302 	mla	r3, r3, r2, r1
 8020e7a:	f3c3 2307 	ubfx	r3, r3, #8, #8
 8020e7e:	b1db      	cbz	r3, 8020eb8 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1c0>
 8020e80:	9a0f      	ldr	r2, [sp, #60]	@ 0x3c
 8020e82:	4353      	muls	r3, r2
 8020e84:	1c5a      	adds	r2, r3, #1
 8020e86:	eb02 2313 	add.w	r3, r2, r3, lsr #8
 8020e8a:	4ac6      	ldr	r2, [pc, #792]	@ (80211a4 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x4ac>)
 8020e8c:	121b      	asrs	r3, r3, #8
 8020e8e:	6812      	ldr	r2, [r2, #0]
 8020e90:	2bff      	cmp	r3, #255	@ 0xff
 8020e92:	ea4f 2c12 	mov.w	ip, r2, lsr #8
 8020e96:	f040 8099 	bne.w	8020fcc <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2d4>
 8020e9a:	0953      	lsrs	r3, r2, #5
 8020e9c:	f42c 6cff 	bic.w	ip, ip, #2040	@ 0x7f8
 8020ea0:	f403 63fc 	and.w	r3, r3, #2016	@ 0x7e0
 8020ea4:	f02c 0c07 	bic.w	ip, ip, #7
 8020ea8:	ea43 0c0c 	orr.w	ip, r3, ip
 8020eac:	f3c2 02c4 	ubfx	r2, r2, #3, #5
 8020eb0:	ea4c 0202 	orr.w	r2, ip, r2
 8020eb4:	f8a8 2000 	strh.w	r2, [r8]
 8020eb8:	9b23      	ldr	r3, [sp, #140]	@ 0x8c
 8020eba:	441c      	add	r4, r3
 8020ebc:	9b24      	ldr	r3, [sp, #144]	@ 0x90
 8020ebe:	441e      	add	r6, r3
 8020ec0:	9b0e      	ldr	r3, [sp, #56]	@ 0x38
 8020ec2:	3b01      	subs	r3, #1
 8020ec4:	f108 0802 	add.w	r8, r8, #2
 8020ec8:	930e      	str	r3, [sp, #56]	@ 0x38
 8020eca:	e763      	b.n	8020d94 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x9c>
 8020ecc:	9b23      	ldr	r3, [sp, #140]	@ 0x8c
 8020ece:	441c      	add	r4, r3
 8020ed0:	9b24      	ldr	r3, [sp, #144]	@ 0x90
 8020ed2:	441e      	add	r6, r3
 8020ed4:	9b09      	ldr	r3, [sp, #36]	@ 0x24
 8020ed6:	3b01      	subs	r3, #1
 8020ed8:	9309      	str	r3, [sp, #36]	@ 0x24
 8020eda:	f109 0902 	add.w	r9, r9, #2
 8020ede:	e737      	b.n	8020d50 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x58>
 8020ee0:	d024      	beq.n	8020f2c <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x234>
 8020ee2:	9b09      	ldr	r3, [sp, #36]	@ 0x24
 8020ee4:	9823      	ldr	r0, [sp, #140]	@ 0x8c
 8020ee6:	3b01      	subs	r3, #1
 8020ee8:	fb00 4003 	mla	r0, r0, r3, r4
 8020eec:	1400      	asrs	r0, r0, #16
 8020eee:	f53f af4c 	bmi.w	8020d8a <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x92>
 8020ef2:	3901      	subs	r1, #1
 8020ef4:	4288      	cmp	r0, r1
 8020ef6:	f6bf af48 	bge.w	8020d8a <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x92>
 8020efa:	9924      	ldr	r1, [sp, #144]	@ 0x90
 8020efc:	fb01 6303 	mla	r3, r1, r3, r6
 8020f00:	141b      	asrs	r3, r3, #16
 8020f02:	f53f af42 	bmi.w	8020d8a <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x92>
 8020f06:	3a01      	subs	r2, #1
 8020f08:	4293      	cmp	r3, r2
 8020f0a:	f6bf af3e 	bge.w	8020d8a <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x92>
 8020f0e:	f9bd 3028 	ldrsh.w	r3, [sp, #40]	@ 0x28
 8020f12:	f8dd b024 	ldr.w	fp, [sp, #36]	@ 0x24
 8020f16:	930e      	str	r3, [sp, #56]	@ 0x38
 8020f18:	46c8      	mov	r8, r9
 8020f1a:	f1bb 0f00 	cmp.w	fp, #0
 8020f1e:	f300 80b7 	bgt.w	8021090 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x398>
 8020f22:	9b09      	ldr	r3, [sp, #36]	@ 0x24
 8020f24:	ea23 75e3 	bic.w	r5, r3, r3, asr #31
 8020f28:	eb09 0945 	add.w	r9, r9, r5, lsl #1
 8020f2c:	9b0d      	ldr	r3, [sp, #52]	@ 0x34
 8020f2e:	2b00      	cmp	r3, #0
 8020f30:	f340 818d 	ble.w	802124e <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x556>
 8020f34:	ee30 0a04 	vadd.f32	s0, s0, s8
 8020f38:	eeb7 7a00 	vmov.f32	s14, #112	@ 0x3f800000  1.0
 8020f3c:	eec7 7a00 	vdiv.f32	s15, s14, s0
 8020f40:	9b20      	ldr	r3, [sp, #128]	@ 0x80
 8020f42:	ee70 0aa4 	vadd.f32	s1, s1, s9
 8020f46:	ee31 1a05 	vadd.f32	s2, s2, s10
 8020f4a:	ee20 7aa7 	vmul.f32	s14, s1, s15
 8020f4e:	eef0 6a62 	vmov.f32	s13, s5
 8020f52:	ee61 7a27 	vmul.f32	s15, s2, s15
 8020f56:	eefe 6ac8 	vcvt.s32.f32	s13, s13, #16
 8020f5a:	ee77 2a62 	vsub.f32	s5, s14, s5
 8020f5e:	ee16 4a90 	vmov	r4, s13
 8020f62:	eefe 2ac8 	vcvt.s32.f32	s5, s5, #16
 8020f66:	eef0 6a43 	vmov.f32	s13, s6
 8020f6a:	ee37 3ac3 	vsub.f32	s6, s15, s6
 8020f6e:	ee12 2a90 	vmov	r2, s5
 8020f72:	eebe 3ac8 	vcvt.s32.f32	s6, s6, #16
 8020f76:	fb92 f3f3 	sdiv	r3, r2, r3
 8020f7a:	ee13 2a10 	vmov	r2, s6
 8020f7e:	9323      	str	r3, [sp, #140]	@ 0x8c
 8020f80:	9b20      	ldr	r3, [sp, #128]	@ 0x80
 8020f82:	fb92 f3f3 	sdiv	r3, r2, r3
 8020f86:	9324      	str	r3, [sp, #144]	@ 0x90
 8020f88:	9b0d      	ldr	r3, [sp, #52]	@ 0x34
 8020f8a:	9a14      	ldr	r2, [sp, #80]	@ 0x50
 8020f8c:	3b01      	subs	r3, #1
 8020f8e:	eefe 6ac8 	vcvt.s32.f32	s13, s13, #16
 8020f92:	930d      	str	r3, [sp, #52]	@ 0x34
 8020f94:	9b20      	ldr	r3, [sp, #128]	@ 0x80
 8020f96:	bf08      	it	eq
 8020f98:	4613      	moveq	r3, r2
 8020f9a:	ee16 6a90 	vmov	r6, s13
 8020f9e:	9309      	str	r3, [sp, #36]	@ 0x24
 8020fa0:	eeb0 3a67 	vmov.f32	s6, s15
 8020fa4:	eef0 2a47 	vmov.f32	s5, s14
 8020fa8:	e6c3      	b.n	8020d32 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3a>
 8020faa:	2900      	cmp	r1, #0
 8020fac:	f43f af4d 	beq.w	8020e4a <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x152>
 8020fb0:	eb0a 0003 	add.w	r0, sl, r3
 8020fb4:	0843      	lsrs	r3, r0, #1
 8020fb6:	07c0      	lsls	r0, r0, #31
 8020fb8:	5cfb      	ldrb	r3, [r7, r3]
 8020fba:	bf54      	ite	pl
 8020fbc:	f003 030f 	andpl.w	r3, r3, #15
 8020fc0:	111b      	asrmi	r3, r3, #4
 8020fc2:	eb03 1303 	add.w	r3, r3, r3, lsl #4
 8020fc6:	b2db      	uxtb	r3, r3
 8020fc8:	930b      	str	r3, [sp, #44]	@ 0x2c
 8020fca:	e73e      	b.n	8020e4a <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x152>
 8020fcc:	f8b8 e000 	ldrh.w	lr, [r8]
 8020fd0:	fa1f fb83 	uxth.w	fp, r3
 8020fd4:	ea4f 202e 	mov.w	r0, lr, asr #8
 8020fd8:	f3c2 4107 	ubfx	r1, r2, #16, #8
 8020fdc:	43db      	mvns	r3, r3
 8020fde:	b2db      	uxtb	r3, r3
 8020fe0:	fb11 f10b 	smulbb	r1, r1, fp
 8020fe4:	f000 00f8 	and.w	r0, r0, #248	@ 0xf8
 8020fe8:	fb00 1003 	mla	r0, r0, r3, r1
 8020fec:	fa5f fc8c 	uxtb.w	ip, ip
 8020ff0:	ea4f 01ee 	mov.w	r1, lr, asr #3
 8020ff4:	b2d2      	uxtb	r2, r2
 8020ff6:	ea4f 0ece 	mov.w	lr, lr, lsl #3
 8020ffa:	b280      	uxth	r0, r0
 8020ffc:	f001 01fc 	and.w	r1, r1, #252	@ 0xfc
 8021000:	fb1c fc0b 	smulbb	ip, ip, fp
 8021004:	fa5f fe8e 	uxtb.w	lr, lr
 8021008:	fb12 fb0b 	smulbb	fp, r2, fp
 802100c:	fb01 cc03 	mla	ip, r1, r3, ip
 8021010:	fb0e bb03 	mla	fp, lr, r3, fp
 8021014:	1c43      	adds	r3, r0, #1
 8021016:	fa1f fc8c 	uxth.w	ip, ip
 802101a:	fa1f fb8b 	uxth.w	fp, fp
 802101e:	eb03 2010 	add.w	r0, r3, r0, lsr #8
 8021022:	f400 4378 	and.w	r3, r0, #63488	@ 0xf800
 8021026:	f10c 0101 	add.w	r1, ip, #1
 802102a:	f10b 0001 	add.w	r0, fp, #1
 802102e:	eb00 201b 	add.w	r0, r0, fp, lsr #8
 8021032:	eb01 2c1c 	add.w	ip, r1, ip, lsr #8
 8021036:	f3c0 20c4 	ubfx	r0, r0, #11, #5
 802103a:	ea4f 1c5c 	mov.w	ip, ip, lsr #5
 802103e:	4318      	orrs	r0, r3
 8021040:	f40c 6cfc 	and.w	ip, ip, #2016	@ 0x7e0
 8021044:	ea40 000c 	orr.w	r0, r0, ip
 8021048:	f8a8 0000 	strh.w	r0, [r8]
 802104c:	e734      	b.n	8020eb8 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1c0>
 802104e:	f113 0b01 	adds.w	fp, r3, #1
 8021052:	f53f af31 	bmi.w	8020eb8 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1c0>
 8021056:	45dc      	cmp	ip, fp
 8021058:	f6ff af2e 	blt.w	8020eb8 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1c0>
 802105c:	f110 0b01 	adds.w	fp, r0, #1
 8021060:	f53f af2a 	bmi.w	8020eb8 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1c0>
 8021064:	45de      	cmp	lr, fp
 8021066:	f6ff af27 	blt.w	8020eb8 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1c0>
 802106a:	9d0f      	ldr	r5, [sp, #60]	@ 0x3c
 802106c:	9302      	str	r3, [sp, #8]
 802106e:	fa0f f38e 	sxth.w	r3, lr
 8021072:	9301      	str	r3, [sp, #4]
 8021074:	fa0f f38c 	sxth.w	r3, ip
 8021078:	e9cd 0203 	strd	r0, r2, [sp, #12]
 802107c:	e9cd 1505 	strd	r1, r5, [sp, #20]
 8021080:	9300      	str	r3, [sp, #0]
 8021082:	463a      	mov	r2, r7
 8021084:	4653      	mov	r3, sl
 8021086:	4641      	mov	r1, r8
 8021088:	9815      	ldr	r0, [sp, #84]	@ 0x54
 802108a:	f7ff fd4d 	bl	8020b28 <_ZNK8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtsssiihhh>
 802108e:	e713      	b.n	8020eb8 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1c0>
 8021090:	9d0a      	ldr	r5, [sp, #40]	@ 0x28
 8021092:	1422      	asrs	r2, r4, #16
 8021094:	1433      	asrs	r3, r6, #16
 8021096:	fb05 2303 	mla	r3, r5, r3, r2
 802109a:	085a      	lsrs	r2, r3, #1
 802109c:	07dd      	lsls	r5, r3, #31
 802109e:	5cba      	ldrb	r2, [r7, r2]
 80210a0:	bf54      	ite	pl
 80210a2:	f002 020f 	andpl.w	r2, r2, #15
 80210a6:	1112      	asrmi	r2, r2, #4
 80210a8:	eb02 1202 	add.w	r2, r2, r2, lsl #4
 80210ac:	f3c4 3103 	ubfx	r1, r4, #12, #4
 80210b0:	f3c6 3003 	ubfx	r0, r6, #12, #4
 80210b4:	b2d2      	uxtb	r2, r2
 80210b6:	2900      	cmp	r1, #0
 80210b8:	d076      	beq.n	80211a8 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x4b0>
 80210ba:	f103 0e01 	add.w	lr, r3, #1
 80210be:	ea4f 0c5e 	mov.w	ip, lr, lsr #1
 80210c2:	f01e 0f01 	tst.w	lr, #1
 80210c6:	f817 c00c 	ldrb.w	ip, [r7, ip]
 80210ca:	bf0c      	ite	eq
 80210cc:	f00c 0c0f 	andeq.w	ip, ip, #15
 80210d0:	ea4f 1c2c 	movne.w	ip, ip, asr #4
 80210d4:	eb0c 1c0c 	add.w	ip, ip, ip, lsl #4
 80210d8:	fa5f f58c 	uxtb.w	r5, ip
 80210dc:	9512      	str	r5, [sp, #72]	@ 0x48
 80210de:	b300      	cbz	r0, 8021122 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x42a>
 80210e0:	9d0e      	ldr	r5, [sp, #56]	@ 0x38
 80210e2:	442b      	add	r3, r5
 80210e4:	ea4f 0c53 	mov.w	ip, r3, lsr #1
 80210e8:	07dd      	lsls	r5, r3, #31
 80210ea:	f817 c00c 	ldrb.w	ip, [r7, ip]
 80210ee:	bf54      	ite	pl
 80210f0:	f00c 0c0f 	andpl.w	ip, ip, #15
 80210f4:	ea4f 1c2c 	movmi.w	ip, ip, asr #4
 80210f8:	3301      	adds	r3, #1
 80210fa:	eb0c 1c0c 	add.w	ip, ip, ip, lsl #4
 80210fe:	fa5f f58c 	uxtb.w	r5, ip
 8021102:	ea4f 0c53 	mov.w	ip, r3, lsr #1
 8021106:	950c      	str	r5, [sp, #48]	@ 0x30
 8021108:	f817 c00c 	ldrb.w	ip, [r7, ip]
 802110c:	07dd      	lsls	r5, r3, #31
 802110e:	bf54      	ite	pl
 8021110:	f00c 0c0f 	andpl.w	ip, ip, #15
 8021114:	ea4f 1c2c 	movmi.w	ip, ip, asr #4
 8021118:	eb0c 1c0c 	add.w	ip, ip, ip, lsl #4
 802111c:	fa5f f38c 	uxtb.w	r3, ip
 8021120:	9313      	str	r3, [sp, #76]	@ 0x4c
 8021122:	b289      	uxth	r1, r1
 8021124:	b280      	uxth	r0, r0
 8021126:	fb01 f300 	mul.w	r3, r1, r0
 802112a:	ebc3 1000 	rsb	r0, r3, r0, lsl #4
 802112e:	0109      	lsls	r1, r1, #4
 8021130:	b280      	uxth	r0, r0
 8021132:	f5c1 7c80 	rsb	ip, r1, #256	@ 0x100
 8021136:	9d12      	ldr	r5, [sp, #72]	@ 0x48
 8021138:	1ac9      	subs	r1, r1, r3
 802113a:	ebac 0c00 	sub.w	ip, ip, r0
 802113e:	b289      	uxth	r1, r1
 8021140:	4369      	muls	r1, r5
 8021142:	fa1f fc8c 	uxth.w	ip, ip
 8021146:	fb02 120c 	mla	r2, r2, ip, r1
 802114a:	990c      	ldr	r1, [sp, #48]	@ 0x30
 802114c:	fb00 2001 	mla	r0, r0, r1, r2
 8021150:	9a13      	ldr	r2, [sp, #76]	@ 0x4c
 8021152:	fb03 0302 	mla	r3, r3, r2, r0
 8021156:	f3c3 2307 	ubfx	r3, r3, #8, #8
 802115a:	b1d3      	cbz	r3, 8021192 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x49a>
 802115c:	9a0f      	ldr	r2, [sp, #60]	@ 0x3c
 802115e:	4353      	muls	r3, r2
 8021160:	1c5a      	adds	r2, r3, #1
 8021162:	eb02 2313 	add.w	r3, r2, r3, lsr #8
 8021166:	4a0f      	ldr	r2, [pc, #60]	@ (80211a4 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x4ac>)
 8021168:	121b      	asrs	r3, r3, #8
 802116a:	6812      	ldr	r2, [r2, #0]
 802116c:	2bff      	cmp	r3, #255	@ 0xff
 802116e:	ea4f 2c12 	mov.w	ip, r2, lsr #8
 8021172:	d12d      	bne.n	80211d0 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x4d8>
 8021174:	0953      	lsrs	r3, r2, #5
 8021176:	f42c 6cff 	bic.w	ip, ip, #2040	@ 0x7f8
 802117a:	f403 63fc 	and.w	r3, r3, #2016	@ 0x7e0
 802117e:	f02c 0c07 	bic.w	ip, ip, #7
 8021182:	ea43 0c0c 	orr.w	ip, r3, ip
 8021186:	f3c2 02c4 	ubfx	r2, r2, #3, #5
 802118a:	ea4c 0202 	orr.w	r2, ip, r2
 802118e:	f8a8 2000 	strh.w	r2, [r8]
 8021192:	9b23      	ldr	r3, [sp, #140]	@ 0x8c
 8021194:	441c      	add	r4, r3
 8021196:	9b24      	ldr	r3, [sp, #144]	@ 0x90
 8021198:	f108 0802 	add.w	r8, r8, #2
 802119c:	441e      	add	r6, r3
 802119e:	f10b 3bff 	add.w	fp, fp, #4294967295
 80211a2:	e6ba      	b.n	8020f1a <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x222>
 80211a4:	20002dc4 	.word	0x20002dc4
 80211a8:	2800      	cmp	r0, #0
 80211aa:	d0ba      	beq.n	8021122 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x42a>
 80211ac:	9d0e      	ldr	r5, [sp, #56]	@ 0x38
 80211ae:	442b      	add	r3, r5
 80211b0:	ea4f 0c53 	mov.w	ip, r3, lsr #1
 80211b4:	07db      	lsls	r3, r3, #31
 80211b6:	f817 c00c 	ldrb.w	ip, [r7, ip]
 80211ba:	bf54      	ite	pl
 80211bc:	f00c 0c0f 	andpl.w	ip, ip, #15
 80211c0:	ea4f 1c2c 	movmi.w	ip, ip, asr #4
 80211c4:	eb0c 1c0c 	add.w	ip, ip, ip, lsl #4
 80211c8:	fa5f f38c 	uxtb.w	r3, ip
 80211cc:	930c      	str	r3, [sp, #48]	@ 0x30
 80211ce:	e7a8      	b.n	8021122 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x42a>
 80211d0:	f8b8 e000 	ldrh.w	lr, [r8]
 80211d4:	fa1f fa83 	uxth.w	sl, r3
 80211d8:	ea4f 202e 	mov.w	r0, lr, asr #8
 80211dc:	f3c2 4107 	ubfx	r1, r2, #16, #8
 80211e0:	43db      	mvns	r3, r3
 80211e2:	b2db      	uxtb	r3, r3
 80211e4:	fb11 f10a 	smulbb	r1, r1, sl
 80211e8:	f000 00f8 	and.w	r0, r0, #248	@ 0xf8
 80211ec:	fb00 1003 	mla	r0, r0, r3, r1
 80211f0:	b2d2      	uxtb	r2, r2
 80211f2:	ea4f 01ee 	mov.w	r1, lr, asr #3
 80211f6:	ea4f 0ece 	mov.w	lr, lr, lsl #3
 80211fa:	fa5f fe8e 	uxtb.w	lr, lr
 80211fe:	fb12 f20a 	smulbb	r2, r2, sl
 8021202:	fb0e 2203 	mla	r2, lr, r3, r2
 8021206:	fa5f fc8c 	uxtb.w	ip, ip
 802120a:	b280      	uxth	r0, r0
 802120c:	f001 01fc 	and.w	r1, r1, #252	@ 0xfc
 8021210:	b292      	uxth	r2, r2
 8021212:	fb1c fc0a 	smulbb	ip, ip, sl
 8021216:	fb01 cc03 	mla	ip, r1, r3, ip
 802121a:	1c43      	adds	r3, r0, #1
 802121c:	1c51      	adds	r1, r2, #1
 802121e:	eb03 2010 	add.w	r0, r3, r0, lsr #8
 8021222:	eb01 2112 	add.w	r1, r1, r2, lsr #8
 8021226:	fa1f fc8c 	uxth.w	ip, ip
 802122a:	f3c1 21c4 	ubfx	r1, r1, #11, #5
 802122e:	f400 4078 	and.w	r0, r0, #63488	@ 0xf800
 8021232:	4308      	orrs	r0, r1
 8021234:	f10c 0101 	add.w	r1, ip, #1
 8021238:	eb01 2c1c 	add.w	ip, r1, ip, lsr #8
 802123c:	ea4f 1c5c 	mov.w	ip, ip, lsr #5
 8021240:	f40c 6cfc 	and.w	ip, ip, #2016	@ 0x7e0
 8021244:	ea40 000c 	orr.w	r0, r0, ip
 8021248:	f8a8 0000 	strh.w	r0, [r8]
 802124c:	e7a1      	b.n	8021192 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x49a>
 802124e:	b017      	add	sp, #92	@ 0x5c
 8021250:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}

08021254 <_ZNK8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtsssiihh>:
 8021254:	e92d 47f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
 8021258:	e9dd 050a 	ldrd	r0, r5, [sp, #40]	@ 0x28
 802125c:	2d00      	cmp	r5, #0
 802125e:	f9bd 8020 	ldrsh.w	r8, [sp, #32]
 8021262:	f9bd 9024 	ldrsh.w	r9, [sp, #36]	@ 0x24
 8021266:	f89d 7030 	ldrb.w	r7, [sp, #48]	@ 0x30
 802126a:	f89d c034 	ldrb.w	ip, [sp, #52]	@ 0x34
 802126e:	fb05 0e03 	mla	lr, r5, r3, r0
 8021272:	f2c0 80b0 	blt.w	80213d6 <_ZNK8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtsssiihh+0x182>
 8021276:	45a9      	cmp	r9, r5
 8021278:	f340 80ad 	ble.w	80213d6 <_ZNK8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtsssiihh+0x182>
 802127c:	2800      	cmp	r0, #0
 802127e:	f2c0 80a8 	blt.w	80213d2 <_ZNK8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtsssiihh+0x17e>
 8021282:	4580      	cmp	r8, r0
 8021284:	f340 80a5 	ble.w	80213d2 <_ZNK8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtsssiihh+0x17e>
 8021288:	ea4f 045e 	mov.w	r4, lr, lsr #1
 802128c:	f01e 0f01 	tst.w	lr, #1
 8021290:	5d16      	ldrb	r6, [r2, r4]
 8021292:	bf0c      	ite	eq
 8021294:	f006 060f 	andeq.w	r6, r6, #15
 8021298:	1136      	asrne	r6, r6, #4
 802129a:	eb06 1606 	add.w	r6, r6, r6, lsl #4
 802129e:	b2f6      	uxtb	r6, r6
 80212a0:	1c44      	adds	r4, r0, #1
 80212a2:	f100 809b 	bmi.w	80213dc <_ZNK8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtsssiihh+0x188>
 80212a6:	45a0      	cmp	r8, r4
 80212a8:	f340 8098 	ble.w	80213dc <_ZNK8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtsssiihh+0x188>
 80212ac:	2f00      	cmp	r7, #0
 80212ae:	f000 8097 	beq.w	80213e0 <_ZNK8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtsssiihh+0x18c>
 80212b2:	f10e 0a01 	add.w	sl, lr, #1
 80212b6:	ea4f 045a 	mov.w	r4, sl, lsr #1
 80212ba:	f01a 0f01 	tst.w	sl, #1
 80212be:	5d14      	ldrb	r4, [r2, r4]
 80212c0:	bf0c      	ite	eq
 80212c2:	f004 040f 	andeq.w	r4, r4, #15
 80212c6:	1124      	asrne	r4, r4, #4
 80212c8:	eb04 1404 	add.w	r4, r4, r4, lsl #4
 80212cc:	b2e4      	uxtb	r4, r4
 80212ce:	3501      	adds	r5, #1
 80212d0:	f100 808a 	bmi.w	80213e8 <_ZNK8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtsssiihh+0x194>
 80212d4:	45a9      	cmp	r9, r5
 80212d6:	f340 8087 	ble.w	80213e8 <_ZNK8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtsssiihh+0x194>
 80212da:	f1bc 0f00 	cmp.w	ip, #0
 80212de:	f000 8086 	beq.w	80213ee <_ZNK8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtsssiihh+0x19a>
 80212e2:	2800      	cmp	r0, #0
 80212e4:	db7e      	blt.n	80213e4 <_ZNK8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtsssiihh+0x190>
 80212e6:	4580      	cmp	r8, r0
 80212e8:	dd7c      	ble.n	80213e4 <_ZNK8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtsssiihh+0x190>
 80212ea:	eb03 090e 	add.w	r9, r3, lr
 80212ee:	ea4f 0559 	mov.w	r5, r9, lsr #1
 80212f2:	f019 0f01 	tst.w	r9, #1
 80212f6:	5d55      	ldrb	r5, [r2, r5]
 80212f8:	bf0c      	ite	eq
 80212fa:	f005 050f 	andeq.w	r5, r5, #15
 80212fe:	112d      	asrne	r5, r5, #4
 8021300:	eb05 1505 	add.w	r5, r5, r5, lsl #4
 8021304:	b2ed      	uxtb	r5, r5
 8021306:	3001      	adds	r0, #1
 8021308:	d474      	bmi.n	80213f4 <_ZNK8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtsssiihh+0x1a0>
 802130a:	4580      	cmp	r8, r0
 802130c:	dd72      	ble.n	80213f4 <_ZNK8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtsssiihh+0x1a0>
 802130e:	2f00      	cmp	r7, #0
 8021310:	d072      	beq.n	80213f8 <_ZNK8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtsssiihh+0x1a4>
 8021312:	3301      	adds	r3, #1
 8021314:	449e      	add	lr, r3
 8021316:	ea4f 035e 	mov.w	r3, lr, lsr #1
 802131a:	f01e 0f01 	tst.w	lr, #1
 802131e:	5cd0      	ldrb	r0, [r2, r3]
 8021320:	bf0c      	ite	eq
 8021322:	f000 000f 	andeq.w	r0, r0, #15
 8021326:	1100      	asrne	r0, r0, #4
 8021328:	eb00 1000 	add.w	r0, r0, r0, lsl #4
 802132c:	b2c3      	uxtb	r3, r0
 802132e:	b2ba      	uxth	r2, r7
 8021330:	fa1f fc8c 	uxth.w	ip, ip
 8021334:	fb02 f00c 	mul.w	r0, r2, ip
 8021338:	ebc0 1c0c 	rsb	ip, r0, ip, lsl #4
 802133c:	0112      	lsls	r2, r2, #4
 802133e:	fa1f fc8c 	uxth.w	ip, ip
 8021342:	f5c2 7780 	rsb	r7, r2, #256	@ 0x100
 8021346:	1a12      	subs	r2, r2, r0
 8021348:	eba7 070c 	sub.w	r7, r7, ip
 802134c:	b292      	uxth	r2, r2
 802134e:	b2bf      	uxth	r7, r7
 8021350:	4362      	muls	r2, r4
 8021352:	fb06 2207 	mla	r2, r6, r7, r2
 8021356:	fb0c 2505 	mla	r5, ip, r5, r2
 802135a:	fb00 5303 	mla	r3, r0, r3, r5
 802135e:	f3c3 2307 	ubfx	r3, r3, #8, #8
 8021362:	b3a3      	cbz	r3, 80213ce <_ZNK8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtsssiihh+0x17a>
 8021364:	4a25      	ldr	r2, [pc, #148]	@ (80213fc <_ZNK8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtsssiihh+0x1a8>)
 8021366:	880e      	ldrh	r6, [r1, #0]
 8021368:	6815      	ldr	r5, [r2, #0]
 802136a:	1234      	asrs	r4, r6, #8
 802136c:	b29a      	uxth	r2, r3
 802136e:	f3c5 4007 	ubfx	r0, r5, #16, #8
 8021372:	43db      	mvns	r3, r3
 8021374:	b2db      	uxtb	r3, r3
 8021376:	fb10 f002 	smulbb	r0, r0, r2
 802137a:	f004 04f8 	and.w	r4, r4, #248	@ 0xf8
 802137e:	fb04 0403 	mla	r4, r4, r3, r0
 8021382:	f3c5 2707 	ubfx	r7, r5, #8, #8
 8021386:	10f0      	asrs	r0, r6, #3
 8021388:	b2ed      	uxtb	r5, r5
 802138a:	00f6      	lsls	r6, r6, #3
 802138c:	fb17 f702 	smulbb	r7, r7, r2
 8021390:	f000 00fc 	and.w	r0, r0, #252	@ 0xfc
 8021394:	fb15 f202 	smulbb	r2, r5, r2
 8021398:	b2f6      	uxtb	r6, r6
 802139a:	b2a4      	uxth	r4, r4
 802139c:	fb00 7003 	mla	r0, r0, r3, r7
 80213a0:	fb06 2303 	mla	r3, r6, r3, r2
 80213a4:	b29a      	uxth	r2, r3
 80213a6:	1c63      	adds	r3, r4, #1
 80213a8:	b280      	uxth	r0, r0
 80213aa:	eb03 2414 	add.w	r4, r3, r4, lsr #8
 80213ae:	1c53      	adds	r3, r2, #1
 80213b0:	eb03 2312 	add.w	r3, r3, r2, lsr #8
 80213b4:	1c42      	adds	r2, r0, #1
 80213b6:	eb02 2010 	add.w	r0, r2, r0, lsr #8
 80213ba:	f404 4478 	and.w	r4, r4, #63488	@ 0xf800
 80213be:	f3c3 23c4 	ubfx	r3, r3, #11, #5
 80213c2:	0940      	lsrs	r0, r0, #5
 80213c4:	4323      	orrs	r3, r4
 80213c6:	f400 60fc 	and.w	r0, r0, #2016	@ 0x7e0
 80213ca:	4303      	orrs	r3, r0
 80213cc:	800b      	strh	r3, [r1, #0]
 80213ce:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
 80213d2:	2600      	movs	r6, #0
 80213d4:	e764      	b.n	80212a0 <_ZNK8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtsssiihh+0x4c>
 80213d6:	2400      	movs	r4, #0
 80213d8:	4626      	mov	r6, r4
 80213da:	e778      	b.n	80212ce <_ZNK8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtsssiihh+0x7a>
 80213dc:	2400      	movs	r4, #0
 80213de:	e776      	b.n	80212ce <_ZNK8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtsssiihh+0x7a>
 80213e0:	463c      	mov	r4, r7
 80213e2:	e774      	b.n	80212ce <_ZNK8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtsssiihh+0x7a>
 80213e4:	2500      	movs	r5, #0
 80213e6:	e78e      	b.n	8021306 <_ZNK8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtsssiihh+0xb2>
 80213e8:	2300      	movs	r3, #0
 80213ea:	461d      	mov	r5, r3
 80213ec:	e79f      	b.n	802132e <_ZNK8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtsssiihh+0xda>
 80213ee:	4663      	mov	r3, ip
 80213f0:	4665      	mov	r5, ip
 80213f2:	e79c      	b.n	802132e <_ZNK8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtsssiihh+0xda>
 80213f4:	2300      	movs	r3, #0
 80213f6:	e79a      	b.n	802132e <_ZNK8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtsssiihh+0xda>
 80213f8:	463b      	mov	r3, r7
 80213fa:	e798      	b.n	802132e <_ZNK8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtsssiihh+0xda>
 80213fc:	20002dc4 	.word	0x20002dc4

08021400 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff>:
 8021400:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8021404:	b093      	sub	sp, #76	@ 0x4c
 8021406:	461d      	mov	r5, r3
 8021408:	920c      	str	r2, [sp, #48]	@ 0x30
 802140a:	9a21      	ldr	r2, [sp, #132]	@ 0x84
 802140c:	9107      	str	r1, [sp, #28]
 802140e:	e9dd 1322 	ldrd	r1, r3, [sp, #136]	@ 0x88
 8021412:	9011      	str	r0, [sp, #68]	@ 0x44
 8021414:	6850      	ldr	r0, [r2, #4]
 8021416:	6812      	ldr	r2, [r2, #0]
 8021418:	fb00 1303 	mla	r3, r0, r3, r1
 802141c:	eb02 0943 	add.w	r9, r2, r3, lsl #1
 8021420:	9b24      	ldr	r3, [sp, #144]	@ 0x90
 8021422:	689b      	ldr	r3, [r3, #8]
 8021424:	3301      	adds	r3, #1
 8021426:	f023 0301 	bic.w	r3, r3, #1
 802142a:	9306      	str	r3, [sp, #24]
 802142c:	9b24      	ldr	r3, [sp, #144]	@ 0x90
 802142e:	e9dd 461d 	ldrd	r4, r6, [sp, #116]	@ 0x74
 8021432:	681f      	ldr	r7, [r3, #0]
 8021434:	9b07      	ldr	r3, [sp, #28]
 8021436:	2b00      	cmp	r3, #0
 8021438:	dc03      	bgt.n	8021442 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x42>
 802143a:	9b0c      	ldr	r3, [sp, #48]	@ 0x30
 802143c:	2b00      	cmp	r3, #0
 802143e:	f340 8267 	ble.w	8021910 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x510>
 8021442:	9b24      	ldr	r3, [sp, #144]	@ 0x90
 8021444:	f9b3 1008 	ldrsh.w	r1, [r3, #8]
 8021448:	f9b3 200c 	ldrsh.w	r2, [r3, #12]
 802144c:	1e48      	subs	r0, r1, #1
 802144e:	f102 3cff 	add.w	ip, r2, #4294967295
 8021452:	2d00      	cmp	r5, #0
 8021454:	f340 80b8 	ble.w	80215c8 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1c8>
 8021458:	ea5f 4e24 	movs.w	lr, r4, asr #16
 802145c:	ea4f 4326 	mov.w	r3, r6, asr #16
 8021460:	d406      	bmi.n	8021470 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x70>
 8021462:	4586      	cmp	lr, r0
 8021464:	da04      	bge.n	8021470 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x70>
 8021466:	2b00      	cmp	r3, #0
 8021468:	db02      	blt.n	8021470 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x70>
 802146a:	4563      	cmp	r3, ip
 802146c:	f2c0 80ad 	blt.w	80215ca <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1ca>
 8021470:	f11e 0e01 	adds.w	lr, lr, #1
 8021474:	f100 80a0 	bmi.w	80215b8 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1b8>
 8021478:	4571      	cmp	r1, lr
 802147a:	f2c0 809d 	blt.w	80215b8 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1b8>
 802147e:	3301      	adds	r3, #1
 8021480:	f100 809a 	bmi.w	80215b8 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1b8>
 8021484:	429a      	cmp	r2, r3
 8021486:	f2c0 8097 	blt.w	80215b8 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1b8>
 802148a:	f9bd a018 	ldrsh.w	sl, [sp, #24]
 802148e:	9509      	str	r5, [sp, #36]	@ 0x24
 8021490:	46c8      	mov	r8, r9
 8021492:	9b09      	ldr	r3, [sp, #36]	@ 0x24
 8021494:	2b00      	cmp	r3, #0
 8021496:	f340 80b6 	ble.w	8021606 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x206>
 802149a:	f3c4 3303 	ubfx	r3, r4, #12, #4
 802149e:	9308      	str	r3, [sp, #32]
 80214a0:	9b24      	ldr	r3, [sp, #144]	@ 0x90
 80214a2:	e9d3 ce02 	ldrd	ip, lr, [r3, #8]
 80214a6:	1423      	asrs	r3, r4, #16
 80214a8:	ea4f 4026 	mov.w	r0, r6, asr #16
 80214ac:	f3c6 3103 	ubfx	r1, r6, #12, #4
 80214b0:	f100 813e 	bmi.w	8021730 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x330>
 80214b4:	f10c 3bff 	add.w	fp, ip, #4294967295
 80214b8:	455b      	cmp	r3, fp
 80214ba:	f280 8139 	bge.w	8021730 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x330>
 80214be:	2800      	cmp	r0, #0
 80214c0:	f2c0 8136 	blt.w	8021730 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x330>
 80214c4:	f10e 3bff 	add.w	fp, lr, #4294967295
 80214c8:	4558      	cmp	r0, fp
 80214ca:	f280 8131 	bge.w	8021730 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x330>
 80214ce:	9a06      	ldr	r2, [sp, #24]
 80214d0:	fb00 3302 	mla	r3, r0, r2, r3
 80214d4:	0858      	lsrs	r0, r3, #1
 80214d6:	07da      	lsls	r2, r3, #31
 80214d8:	f817 c000 	ldrb.w	ip, [r7, r0]
 80214dc:	9a08      	ldr	r2, [sp, #32]
 80214de:	bf54      	ite	pl
 80214e0:	f00c 0c0f 	andpl.w	ip, ip, #15
 80214e4:	ea4f 1c2c 	movmi.w	ip, ip, asr #4
 80214e8:	eb0c 1c0c 	add.w	ip, ip, ip, lsl #4
 80214ec:	fa5f fc8c 	uxtb.w	ip, ip
 80214f0:	2a00      	cmp	r2, #0
 80214f2:	f000 80cb 	beq.w	802168c <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x28c>
 80214f6:	1c58      	adds	r0, r3, #1
 80214f8:	ea4f 0e50 	mov.w	lr, r0, lsr #1
 80214fc:	07c0      	lsls	r0, r0, #31
 80214fe:	f817 e00e 	ldrb.w	lr, [r7, lr]
 8021502:	bf54      	ite	pl
 8021504:	f00e 0e0f 	andpl.w	lr, lr, #15
 8021508:	ea4f 1e2e 	movmi.w	lr, lr, asr #4
 802150c:	eb0e 1e0e 	add.w	lr, lr, lr, lsl #4
 8021510:	fa5f fe8e 	uxtb.w	lr, lr
 8021514:	f8cd e034 	str.w	lr, [sp, #52]	@ 0x34
 8021518:	b1b9      	cbz	r1, 802154a <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x14a>
 802151a:	4453      	add	r3, sl
 802151c:	0858      	lsrs	r0, r3, #1
 802151e:	07da      	lsls	r2, r3, #31
 8021520:	5c38      	ldrb	r0, [r7, r0]
 8021522:	bf54      	ite	pl
 8021524:	f000 000f 	andpl.w	r0, r0, #15
 8021528:	1100      	asrmi	r0, r0, #4
 802152a:	eb00 1000 	add.w	r0, r0, r0, lsl #4
 802152e:	b2c0      	uxtb	r0, r0
 8021530:	900a      	str	r0, [sp, #40]	@ 0x28
 8021532:	1c58      	adds	r0, r3, #1
 8021534:	0843      	lsrs	r3, r0, #1
 8021536:	07c2      	lsls	r2, r0, #31
 8021538:	5cfb      	ldrb	r3, [r7, r3]
 802153a:	bf54      	ite	pl
 802153c:	f003 030f 	andpl.w	r3, r3, #15
 8021540:	111b      	asrmi	r3, r3, #4
 8021542:	eb03 1303 	add.w	r3, r3, r3, lsl #4
 8021546:	b2db      	uxtb	r3, r3
 8021548:	930e      	str	r3, [sp, #56]	@ 0x38
 802154a:	f8bd 2020 	ldrh.w	r2, [sp, #32]
 802154e:	b289      	uxth	r1, r1
 8021550:	fb02 f301 	mul.w	r3, r2, r1
 8021554:	ebc3 1101 	rsb	r1, r3, r1, lsl #4
 8021558:	0112      	lsls	r2, r2, #4
 802155a:	b289      	uxth	r1, r1
 802155c:	f5c2 7080 	rsb	r0, r2, #256	@ 0x100
 8021560:	1a40      	subs	r0, r0, r1
 8021562:	fa1f fe80 	uxth.w	lr, r0
 8021566:	1ad2      	subs	r2, r2, r3
 8021568:	980d      	ldr	r0, [sp, #52]	@ 0x34
 802156a:	b292      	uxth	r2, r2
 802156c:	4342      	muls	r2, r0
 802156e:	fb0c 2c0e 	mla	ip, ip, lr, r2
 8021572:	9a0a      	ldr	r2, [sp, #40]	@ 0x28
 8021574:	fb01 c102 	mla	r1, r1, r2, ip
 8021578:	9a0e      	ldr	r2, [sp, #56]	@ 0x38
 802157a:	fb03 1302 	mla	r3, r3, r2, r1
 802157e:	f3c3 2307 	ubfx	r3, r3, #8, #8
 8021582:	2bff      	cmp	r3, #255	@ 0xff
 8021584:	f040 8093 	bne.w	80216ae <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2ae>
 8021588:	4bbe      	ldr	r3, [pc, #760]	@ (8021884 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x484>)
 802158a:	681a      	ldr	r2, [r3, #0]
 802158c:	4bbe      	ldr	r3, [pc, #760]	@ (8021888 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x488>)
 802158e:	0951      	lsrs	r1, r2, #5
 8021590:	ea03 2312 	and.w	r3, r3, r2, lsr #8
 8021594:	f401 61fc 	and.w	r1, r1, #2016	@ 0x7e0
 8021598:	430b      	orrs	r3, r1
 802159a:	f3c2 02c4 	ubfx	r2, r2, #3, #5
 802159e:	4313      	orrs	r3, r2
 80215a0:	f8a8 3000 	strh.w	r3, [r8]
 80215a4:	9b1f      	ldr	r3, [sp, #124]	@ 0x7c
 80215a6:	441c      	add	r4, r3
 80215a8:	9b20      	ldr	r3, [sp, #128]	@ 0x80
 80215aa:	441e      	add	r6, r3
 80215ac:	9b09      	ldr	r3, [sp, #36]	@ 0x24
 80215ae:	3b01      	subs	r3, #1
 80215b0:	f108 0802 	add.w	r8, r8, #2
 80215b4:	9309      	str	r3, [sp, #36]	@ 0x24
 80215b6:	e76c      	b.n	8021492 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x92>
 80215b8:	9b1f      	ldr	r3, [sp, #124]	@ 0x7c
 80215ba:	441c      	add	r4, r3
 80215bc:	9b20      	ldr	r3, [sp, #128]	@ 0x80
 80215be:	3d01      	subs	r5, #1
 80215c0:	441e      	add	r6, r3
 80215c2:	f109 0902 	add.w	r9, r9, #2
 80215c6:	e744      	b.n	8021452 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x52>
 80215c8:	d021      	beq.n	802160e <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x20e>
 80215ca:	981f      	ldr	r0, [sp, #124]	@ 0x7c
 80215cc:	1e6b      	subs	r3, r5, #1
 80215ce:	fb00 4003 	mla	r0, r0, r3, r4
 80215d2:	1400      	asrs	r0, r0, #16
 80215d4:	f53f af59 	bmi.w	802148a <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x8a>
 80215d8:	3901      	subs	r1, #1
 80215da:	4288      	cmp	r0, r1
 80215dc:	f6bf af55 	bge.w	802148a <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x8a>
 80215e0:	9920      	ldr	r1, [sp, #128]	@ 0x80
 80215e2:	fb01 6303 	mla	r3, r1, r3, r6
 80215e6:	141b      	asrs	r3, r3, #16
 80215e8:	f53f af4f 	bmi.w	802148a <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x8a>
 80215ec:	3a01      	subs	r2, #1
 80215ee:	4293      	cmp	r3, r2
 80215f0:	f6bf af4b 	bge.w	802148a <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x8a>
 80215f4:	f9bd 3018 	ldrsh.w	r3, [sp, #24]
 80215f8:	9308      	str	r3, [sp, #32]
 80215fa:	46a8      	mov	r8, r5
 80215fc:	46ce      	mov	lr, r9
 80215fe:	f1b8 0f00 	cmp.w	r8, #0
 8021602:	f300 80b5 	bgt.w	8021770 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x370>
 8021606:	ea25 75e5 	bic.w	r5, r5, r5, asr #31
 802160a:	eb09 0945 	add.w	r9, r9, r5, lsl #1
 802160e:	9b07      	ldr	r3, [sp, #28]
 8021610:	2b00      	cmp	r3, #0
 8021612:	f340 817d 	ble.w	8021910 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x510>
 8021616:	ee30 0a04 	vadd.f32	s0, s0, s8
 802161a:	eeb7 7a00 	vmov.f32	s14, #112	@ 0x3f800000  1.0
 802161e:	eec7 7a00 	vdiv.f32	s15, s14, s0
 8021622:	9b1c      	ldr	r3, [sp, #112]	@ 0x70
 8021624:	ee70 0aa4 	vadd.f32	s1, s1, s9
 8021628:	ee31 1a05 	vadd.f32	s2, s2, s10
 802162c:	ee20 7aa7 	vmul.f32	s14, s1, s15
 8021630:	eef0 6a62 	vmov.f32	s13, s5
 8021634:	ee61 7a27 	vmul.f32	s15, s2, s15
 8021638:	eefe 6ac8 	vcvt.s32.f32	s13, s13, #16
 802163c:	ee77 2a62 	vsub.f32	s5, s14, s5
 8021640:	ee16 4a90 	vmov	r4, s13
 8021644:	eefe 2ac8 	vcvt.s32.f32	s5, s5, #16
 8021648:	eef0 6a43 	vmov.f32	s13, s6
 802164c:	ee37 3ac3 	vsub.f32	s6, s15, s6
 8021650:	ee12 2a90 	vmov	r2, s5
 8021654:	eebe 3ac8 	vcvt.s32.f32	s6, s6, #16
 8021658:	fb92 f3f3 	sdiv	r3, r2, r3
 802165c:	ee13 2a10 	vmov	r2, s6
 8021660:	931f      	str	r3, [sp, #124]	@ 0x7c
 8021662:	9b1c      	ldr	r3, [sp, #112]	@ 0x70
 8021664:	fb92 f3f3 	sdiv	r3, r2, r3
 8021668:	9320      	str	r3, [sp, #128]	@ 0x80
 802166a:	9b07      	ldr	r3, [sp, #28]
 802166c:	9a0c      	ldr	r2, [sp, #48]	@ 0x30
 802166e:	3b01      	subs	r3, #1
 8021670:	eefe 6ac8 	vcvt.s32.f32	s13, s13, #16
 8021674:	9307      	str	r3, [sp, #28]
 8021676:	9b1c      	ldr	r3, [sp, #112]	@ 0x70
 8021678:	ee16 6a90 	vmov	r6, s13
 802167c:	bf14      	ite	ne
 802167e:	461d      	movne	r5, r3
 8021680:	4615      	moveq	r5, r2
 8021682:	eeb0 3a67 	vmov.f32	s6, s15
 8021686:	eef0 2a47 	vmov.f32	s5, s14
 802168a:	e6d3      	b.n	8021434 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x34>
 802168c:	2900      	cmp	r1, #0
 802168e:	f43f af5c 	beq.w	802154a <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x14a>
 8021692:	eb0a 0003 	add.w	r0, sl, r3
 8021696:	0843      	lsrs	r3, r0, #1
 8021698:	07c0      	lsls	r0, r0, #31
 802169a:	5cfb      	ldrb	r3, [r7, r3]
 802169c:	bf54      	ite	pl
 802169e:	f003 030f 	andpl.w	r3, r3, #15
 80216a2:	111b      	asrmi	r3, r3, #4
 80216a4:	eb03 1303 	add.w	r3, r3, r3, lsl #4
 80216a8:	b2db      	uxtb	r3, r3
 80216aa:	930a      	str	r3, [sp, #40]	@ 0x28
 80216ac:	e74d      	b.n	802154a <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x14a>
 80216ae:	2b00      	cmp	r3, #0
 80216b0:	f43f af78 	beq.w	80215a4 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1a4>
 80216b4:	4a73      	ldr	r2, [pc, #460]	@ (8021884 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x484>)
 80216b6:	f8b8 c000 	ldrh.w	ip, [r8]
 80216ba:	6810      	ldr	r0, [r2, #0]
 80216bc:	fa1f fe83 	uxth.w	lr, r3
 80216c0:	ea4f 212c 	mov.w	r1, ip, asr #8
 80216c4:	f3c0 4207 	ubfx	r2, r0, #16, #8
 80216c8:	43db      	mvns	r3, r3
 80216ca:	b2db      	uxtb	r3, r3
 80216cc:	fb12 f20e 	smulbb	r2, r2, lr
 80216d0:	f001 01f8 	and.w	r1, r1, #248	@ 0xf8
 80216d4:	fb01 2103 	mla	r1, r1, r3, r2
 80216d8:	f3c0 2b07 	ubfx	fp, r0, #8, #8
 80216dc:	ea4f 02ec 	mov.w	r2, ip, asr #3
 80216e0:	b2c0      	uxtb	r0, r0
 80216e2:	ea4f 0ccc 	mov.w	ip, ip, lsl #3
 80216e6:	fb1b fb0e 	smulbb	fp, fp, lr
 80216ea:	b289      	uxth	r1, r1
 80216ec:	fb10 fe0e 	smulbb	lr, r0, lr
 80216f0:	f002 02fc 	and.w	r2, r2, #252	@ 0xfc
 80216f4:	fa5f fc8c 	uxtb.w	ip, ip
 80216f8:	fb02 b203 	mla	r2, r2, r3, fp
 80216fc:	1c48      	adds	r0, r1, #1
 80216fe:	fb0c e303 	mla	r3, ip, r3, lr
 8021702:	b292      	uxth	r2, r2
 8021704:	b29b      	uxth	r3, r3
 8021706:	eb00 2111 	add.w	r1, r0, r1, lsr #8
 802170a:	f401 4078 	and.w	r0, r1, #63488	@ 0xf800
 802170e:	f102 0b01 	add.w	fp, r2, #1
 8021712:	1c59      	adds	r1, r3, #1
 8021714:	eb01 2113 	add.w	r1, r1, r3, lsr #8
 8021718:	eb0b 2212 	add.w	r2, fp, r2, lsr #8
 802171c:	f3c1 21c4 	ubfx	r1, r1, #11, #5
 8021720:	0952      	lsrs	r2, r2, #5
 8021722:	4301      	orrs	r1, r0
 8021724:	f402 62fc 	and.w	r2, r2, #2016	@ 0x7e0
 8021728:	4311      	orrs	r1, r2
 802172a:	f8a8 1000 	strh.w	r1, [r8]
 802172e:	e739      	b.n	80215a4 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1a4>
 8021730:	f113 0b01 	adds.w	fp, r3, #1
 8021734:	f53f af36 	bmi.w	80215a4 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1a4>
 8021738:	45dc      	cmp	ip, fp
 802173a:	f6ff af33 	blt.w	80215a4 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1a4>
 802173e:	f110 0b01 	adds.w	fp, r0, #1
 8021742:	f53f af2f 	bmi.w	80215a4 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1a4>
 8021746:	45de      	cmp	lr, fp
 8021748:	f6ff af2c 	blt.w	80215a4 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1a4>
 802174c:	9a08      	ldr	r2, [sp, #32]
 802174e:	9302      	str	r3, [sp, #8]
 8021750:	fa0f f38e 	sxth.w	r3, lr
 8021754:	9301      	str	r3, [sp, #4]
 8021756:	fa0f f38c 	sxth.w	r3, ip
 802175a:	e9cd 0203 	strd	r0, r2, [sp, #12]
 802175e:	9105      	str	r1, [sp, #20]
 8021760:	9300      	str	r3, [sp, #0]
 8021762:	463a      	mov	r2, r7
 8021764:	4653      	mov	r3, sl
 8021766:	4641      	mov	r1, r8
 8021768:	9811      	ldr	r0, [sp, #68]	@ 0x44
 802176a:	f7ff fd73 	bl	8021254 <_ZNK8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtsssiihh>
 802176e:	e719      	b.n	80215a4 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1a4>
 8021770:	9906      	ldr	r1, [sp, #24]
 8021772:	1422      	asrs	r2, r4, #16
 8021774:	1433      	asrs	r3, r6, #16
 8021776:	fb01 2303 	mla	r3, r1, r3, r2
 802177a:	085a      	lsrs	r2, r3, #1
 802177c:	07d9      	lsls	r1, r3, #31
 802177e:	5cba      	ldrb	r2, [r7, r2]
 8021780:	bf54      	ite	pl
 8021782:	f002 020f 	andpl.w	r2, r2, #15
 8021786:	1112      	asrmi	r2, r2, #4
 8021788:	eb02 1202 	add.w	r2, r2, r2, lsl #4
 802178c:	f3c4 3003 	ubfx	r0, r4, #12, #4
 8021790:	f3c6 3c03 	ubfx	ip, r6, #12, #4
 8021794:	b2d2      	uxtb	r2, r2
 8021796:	2800      	cmp	r0, #0
 8021798:	d062      	beq.n	8021860 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x460>
 802179a:	f103 0a01 	add.w	sl, r3, #1
 802179e:	ea4f 015a 	mov.w	r1, sl, lsr #1
 80217a2:	f01a 0f01 	tst.w	sl, #1
 80217a6:	5c79      	ldrb	r1, [r7, r1]
 80217a8:	bf0c      	ite	eq
 80217aa:	f001 010f 	andeq.w	r1, r1, #15
 80217ae:	1109      	asrne	r1, r1, #4
 80217b0:	eb01 1101 	add.w	r1, r1, r1, lsl #4
 80217b4:	b2c9      	uxtb	r1, r1
 80217b6:	910f      	str	r1, [sp, #60]	@ 0x3c
 80217b8:	f1bc 0f00 	cmp.w	ip, #0
 80217bc:	d019      	beq.n	80217f2 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3f2>
 80217be:	9908      	ldr	r1, [sp, #32]
 80217c0:	440b      	add	r3, r1
 80217c2:	0859      	lsrs	r1, r3, #1
 80217c4:	f013 0f01 	tst.w	r3, #1
 80217c8:	5c79      	ldrb	r1, [r7, r1]
 80217ca:	bf0c      	ite	eq
 80217cc:	f001 010f 	andeq.w	r1, r1, #15
 80217d0:	1109      	asrne	r1, r1, #4
 80217d2:	eb01 1101 	add.w	r1, r1, r1, lsl #4
 80217d6:	b2c9      	uxtb	r1, r1
 80217d8:	3301      	adds	r3, #1
 80217da:	910b      	str	r1, [sp, #44]	@ 0x2c
 80217dc:	0859      	lsrs	r1, r3, #1
 80217de:	07db      	lsls	r3, r3, #31
 80217e0:	5c79      	ldrb	r1, [r7, r1]
 80217e2:	bf54      	ite	pl
 80217e4:	f001 010f 	andpl.w	r1, r1, #15
 80217e8:	1109      	asrmi	r1, r1, #4
 80217ea:	eb01 1101 	add.w	r1, r1, r1, lsl #4
 80217ee:	b2c9      	uxtb	r1, r1
 80217f0:	9110      	str	r1, [sp, #64]	@ 0x40
 80217f2:	b280      	uxth	r0, r0
 80217f4:	fa1f fc8c 	uxth.w	ip, ip
 80217f8:	fb00 f30c 	mul.w	r3, r0, ip
 80217fc:	ebc3 1c0c 	rsb	ip, r3, ip, lsl #4
 8021800:	0100      	lsls	r0, r0, #4
 8021802:	fa1f fc8c 	uxth.w	ip, ip
 8021806:	f5c0 7180 	rsb	r1, r0, #256	@ 0x100
 802180a:	eba1 010c 	sub.w	r1, r1, ip
 802180e:	fa1f fa81 	uxth.w	sl, r1
 8021812:	1ac0      	subs	r0, r0, r3
 8021814:	990f      	ldr	r1, [sp, #60]	@ 0x3c
 8021816:	b280      	uxth	r0, r0
 8021818:	4348      	muls	r0, r1
 802181a:	990b      	ldr	r1, [sp, #44]	@ 0x2c
 802181c:	fb02 020a 	mla	r2, r2, sl, r0
 8021820:	fb0c 2c01 	mla	ip, ip, r1, r2
 8021824:	9a10      	ldr	r2, [sp, #64]	@ 0x40
 8021826:	fb03 c302 	mla	r3, r3, r2, ip
 802182a:	f3c3 2307 	ubfx	r3, r3, #8, #8
 802182e:	2bff      	cmp	r3, #255	@ 0xff
 8021830:	d12c      	bne.n	802188c <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x48c>
 8021832:	4b14      	ldr	r3, [pc, #80]	@ (8021884 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x484>)
 8021834:	681a      	ldr	r2, [r3, #0]
 8021836:	4b14      	ldr	r3, [pc, #80]	@ (8021888 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x488>)
 8021838:	0951      	lsrs	r1, r2, #5
 802183a:	ea03 2312 	and.w	r3, r3, r2, lsr #8
 802183e:	f401 61fc 	and.w	r1, r1, #2016	@ 0x7e0
 8021842:	430b      	orrs	r3, r1
 8021844:	f3c2 02c4 	ubfx	r2, r2, #3, #5
 8021848:	4313      	orrs	r3, r2
 802184a:	f8ae 3000 	strh.w	r3, [lr]
 802184e:	9b1f      	ldr	r3, [sp, #124]	@ 0x7c
 8021850:	441c      	add	r4, r3
 8021852:	9b20      	ldr	r3, [sp, #128]	@ 0x80
 8021854:	f10e 0e02 	add.w	lr, lr, #2
 8021858:	441e      	add	r6, r3
 802185a:	f108 38ff 	add.w	r8, r8, #4294967295
 802185e:	e6ce      	b.n	80215fe <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1fe>
 8021860:	f1bc 0f00 	cmp.w	ip, #0
 8021864:	d0c5      	beq.n	80217f2 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3f2>
 8021866:	9908      	ldr	r1, [sp, #32]
 8021868:	440b      	add	r3, r1
 802186a:	0859      	lsrs	r1, r3, #1
 802186c:	07db      	lsls	r3, r3, #31
 802186e:	5c79      	ldrb	r1, [r7, r1]
 8021870:	bf54      	ite	pl
 8021872:	f001 010f 	andpl.w	r1, r1, #15
 8021876:	1109      	asrmi	r1, r1, #4
 8021878:	eb01 1101 	add.w	r1, r1, r1, lsl #4
 802187c:	b2c9      	uxtb	r1, r1
 802187e:	910b      	str	r1, [sp, #44]	@ 0x2c
 8021880:	e7b7      	b.n	80217f2 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3f2>
 8021882:	bf00      	nop
 8021884:	20002dc4 	.word	0x20002dc4
 8021888:	fffff800 	.word	0xfffff800
 802188c:	2b00      	cmp	r3, #0
 802188e:	d0de      	beq.n	802184e <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x44e>
 8021890:	4a21      	ldr	r2, [pc, #132]	@ (8021918 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x518>)
 8021892:	f8be c000 	ldrh.w	ip, [lr]
 8021896:	6810      	ldr	r0, [r2, #0]
 8021898:	fa1f fa83 	uxth.w	sl, r3
 802189c:	ea4f 212c 	mov.w	r1, ip, asr #8
 80218a0:	f3c0 4207 	ubfx	r2, r0, #16, #8
 80218a4:	43db      	mvns	r3, r3
 80218a6:	b2db      	uxtb	r3, r3
 80218a8:	fb12 f20a 	smulbb	r2, r2, sl
 80218ac:	f001 01f8 	and.w	r1, r1, #248	@ 0xf8
 80218b0:	fb01 2103 	mla	r1, r1, r3, r2
 80218b4:	f3c0 2b07 	ubfx	fp, r0, #8, #8
 80218b8:	ea4f 02ec 	mov.w	r2, ip, asr #3
 80218bc:	b2c0      	uxtb	r0, r0
 80218be:	ea4f 0ccc 	mov.w	ip, ip, lsl #3
 80218c2:	fa5f fc8c 	uxtb.w	ip, ip
 80218c6:	fb10 f00a 	smulbb	r0, r0, sl
 80218ca:	fb0c 0003 	mla	r0, ip, r3, r0
 80218ce:	b289      	uxth	r1, r1
 80218d0:	fb1b fb0a 	smulbb	fp, fp, sl
 80218d4:	b280      	uxth	r0, r0
 80218d6:	f002 02fc 	and.w	r2, r2, #252	@ 0xfc
 80218da:	fb02 b203 	mla	r2, r2, r3, fp
 80218de:	1c4b      	adds	r3, r1, #1
 80218e0:	f100 0b01 	add.w	fp, r0, #1
 80218e4:	eb03 2111 	add.w	r1, r3, r1, lsr #8
 80218e8:	eb0b 2b10 	add.w	fp, fp, r0, lsr #8
 80218ec:	b292      	uxth	r2, r2
 80218ee:	f3cb 2bc4 	ubfx	fp, fp, #11, #5
 80218f2:	f401 4178 	and.w	r1, r1, #63488	@ 0xf800
 80218f6:	ea4b 0101 	orr.w	r1, fp, r1
 80218fa:	f102 0b01 	add.w	fp, r2, #1
 80218fe:	eb0b 2212 	add.w	r2, fp, r2, lsr #8
 8021902:	0952      	lsrs	r2, r2, #5
 8021904:	f402 62fc 	and.w	r2, r2, #2016	@ 0x7e0
 8021908:	4311      	orrs	r1, r2
 802190a:	f8ae 1000 	strh.w	r1, [lr]
 802190e:	e79e      	b.n	802184e <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x44e>
 8021910:	b013      	add	sp, #76	@ 0x4c
 8021912:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 8021916:	bf00      	nop
 8021918:	20002dc4 	.word	0x20002dc4

0802191c <_ZNK8touchgfx8LCD16bpp17DecompressorL8_L416blendPixelRGB565Ettii>:
 802191c:	b570      	push	{r4, r5, r6, lr}
 802191e:	1208      	asrs	r0, r1, #8
 8021920:	b29e      	uxth	r6, r3
 8021922:	f8bd 5010 	ldrh.w	r5, [sp, #16]
 8021926:	1213      	asrs	r3, r2, #8
 8021928:	f000 00f8 	and.w	r0, r0, #248	@ 0xf8
 802192c:	f003 03f8 	and.w	r3, r3, #248	@ 0xf8
 8021930:	fb13 f305 	smulbb	r3, r3, r5
 8021934:	fb10 f006 	smulbb	r0, r0, r6
 8021938:	4418      	add	r0, r3
 802193a:	10cc      	asrs	r4, r1, #3
 802193c:	10d3      	asrs	r3, r2, #3
 802193e:	f004 04fc 	and.w	r4, r4, #252	@ 0xfc
 8021942:	f003 03fc 	and.w	r3, r3, #252	@ 0xfc
 8021946:	fb13 f305 	smulbb	r3, r3, r5
 802194a:	fb14 f406 	smulbb	r4, r4, r6
 802194e:	00c9      	lsls	r1, r1, #3
 8021950:	00d2      	lsls	r2, r2, #3
 8021952:	441c      	add	r4, r3
 8021954:	b2d2      	uxtb	r2, r2
 8021956:	b2cb      	uxtb	r3, r1
 8021958:	fb12 f205 	smulbb	r2, r2, r5
 802195c:	b280      	uxth	r0, r0
 802195e:	fb13 f306 	smulbb	r3, r3, r6
 8021962:	4413      	add	r3, r2
 8021964:	1c42      	adds	r2, r0, #1
 8021966:	b29b      	uxth	r3, r3
 8021968:	eb02 2010 	add.w	r0, r2, r0, lsr #8
 802196c:	f400 4278 	and.w	r2, r0, #63488	@ 0xf800
 8021970:	1c58      	adds	r0, r3, #1
 8021972:	eb00 2013 	add.w	r0, r0, r3, lsr #8
 8021976:	b2a4      	uxth	r4, r4
 8021978:	f3c0 20c4 	ubfx	r0, r0, #11, #5
 802197c:	4310      	orrs	r0, r2
 802197e:	1c62      	adds	r2, r4, #1
 8021980:	eb02 2414 	add.w	r4, r2, r4, lsr #8
 8021984:	0964      	lsrs	r4, r4, #5
 8021986:	f404 64fc 	and.w	r4, r4, #2016	@ 0x7e0
 802198a:	4320      	orrs	r0, r4
 802198c:	bd70      	pop	{r4, r5, r6, pc}
	...

08021990 <_ZN8touchgfx8LCD16bpp17DecompressorL8_L414blitCopyRGB565EPKhS3_RKNS_4RectES6_h>:
 8021990:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8021994:	b08f      	sub	sp, #60	@ 0x3c
 8021996:	461c      	mov	r4, r3
 8021998:	f89d 7064 	ldrb.w	r7, [sp, #100]	@ 0x64
 802199c:	9004      	str	r0, [sp, #16]
 802199e:	460d      	mov	r5, r1
 80219a0:	4616      	mov	r6, r2
 80219a2:	9b18      	ldr	r3, [sp, #96]	@ 0x60
 80219a4:	2f00      	cmp	r7, #0
 80219a6:	f000 80f6 	beq.w	8021b96 <_ZN8touchgfx8LCD16bpp17DecompressorL8_L414blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x206>
 80219aa:	6820      	ldr	r0, [r4, #0]
 80219ac:	6861      	ldr	r1, [r4, #4]
 80219ae:	aa0a      	add	r2, sp, #40	@ 0x28
 80219b0:	c203      	stmia	r2!, {r0, r1}
 80219b2:	6818      	ldr	r0, [r3, #0]
 80219b4:	6859      	ldr	r1, [r3, #4]
 80219b6:	aa0c      	add	r2, sp, #48	@ 0x30
 80219b8:	c203      	stmia	r2!, {r0, r1}
 80219ba:	a80a      	add	r0, sp, #40	@ 0x28
 80219bc:	f7ee fdd4 	bl	8010568 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectE>
 80219c0:	4621      	mov	r1, r4
 80219c2:	a80c      	add	r0, sp, #48	@ 0x30
 80219c4:	f7ee fdf8 	bl	80105b8 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectERKS1_>
 80219c8:	f9bd 2030 	ldrsh.w	r2, [sp, #48]	@ 0x30
 80219cc:	f9bd b036 	ldrsh.w	fp, [sp, #54]	@ 0x36
 80219d0:	f9bd 9034 	ldrsh.w	r9, [sp, #52]	@ 0x34
 80219d4:	f002 0301 	and.w	r3, r2, #1
 80219d8:	9306      	str	r3, [sp, #24]
 80219da:	f9bd 302c 	ldrsh.w	r3, [sp, #44]	@ 0x2c
 80219de:	f003 0101 	and.w	r1, r3, #1
 80219e2:	9105      	str	r1, [sp, #20]
 80219e4:	9805      	ldr	r0, [sp, #20]
 80219e6:	f9bd 1032 	ldrsh.w	r1, [sp, #50]	@ 0x32
 80219ea:	4403      	add	r3, r0
 80219ec:	fb01 2303 	mla	r3, r1, r3, r2
 80219f0:	f04f 0802 	mov.w	r8, #2
 80219f4:	fb93 f3f8 	sdiv	r3, r3, r8
 80219f8:	441d      	add	r5, r3
 80219fa:	f8bd 3028 	ldrh.w	r3, [sp, #40]	@ 0x28
 80219fe:	441a      	add	r2, r3
 8021a00:	f8bd 302a 	ldrh.w	r3, [sp, #42]	@ 0x2a
 8021a04:	f8ad 2030 	strh.w	r2, [sp, #48]	@ 0x30
 8021a08:	4419      	add	r1, r3
 8021a0a:	4b64      	ldr	r3, [pc, #400]	@ (8021b9c <_ZN8touchgfx8LCD16bpp17DecompressorL8_L414blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x20c>)
 8021a0c:	f8ad 1032 	strh.w	r1, [sp, #50]	@ 0x32
 8021a10:	6818      	ldr	r0, [r3, #0]
 8021a12:	6803      	ldr	r3, [r0, #0]
 8021a14:	6a9b      	ldr	r3, [r3, #40]	@ 0x28
 8021a16:	4798      	blx	r3
 8021a18:	4a61      	ldr	r2, [pc, #388]	@ (8021ba0 <_ZN8touchgfx8LCD16bpp17DecompressorL8_L414blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x210>)
 8021a1a:	f9bd 4032 	ldrsh.w	r4, [sp, #50]	@ 0x32
 8021a1e:	8813      	ldrh	r3, [r2, #0]
 8021a20:	f9bd a030 	ldrsh.w	sl, [sp, #48]	@ 0x30
 8021a24:	2fff      	cmp	r7, #255	@ 0xff
 8021a26:	fb03 a404 	mla	r4, r3, r4, sl
 8021a2a:	eb00 0444 	add.w	r4, r0, r4, lsl #1
 8021a2e:	f106 0604 	add.w	r6, r6, #4
 8021a32:	4611      	mov	r1, r2
 8021a34:	fb03 fb0b 	mul.w	fp, r3, fp
 8021a38:	d06b      	beq.n	8021b12 <_ZN8touchgfx8LCD16bpp17DecompressorL8_L414blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x182>
 8021a3a:	f1c7 03ff 	rsb	r3, r7, #255	@ 0xff
 8021a3e:	9303      	str	r3, [sp, #12]
 8021a40:	eb04 034b 	add.w	r3, r4, fp, lsl #1
 8021a44:	e9cd 3207 	strd	r3, r2, [sp, #28]
 8021a48:	f8cd 8024 	str.w	r8, [sp, #36]	@ 0x24
 8021a4c:	9b07      	ldr	r3, [sp, #28]
 8021a4e:	42a3      	cmp	r3, r4
 8021a50:	f240 809c 	bls.w	8021b8c <_ZN8touchgfx8LCD16bpp17DecompressorL8_L414blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x1fc>
 8021a54:	9b06      	ldr	r3, [sp, #24]
 8021a56:	2b00      	cmp	r3, #0
 8021a58:	d039      	beq.n	8021ace <_ZN8touchgfx8LCD16bpp17DecompressorL8_L414blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x13e>
 8021a5a:	782b      	ldrb	r3, [r5, #0]
 8021a5c:	8822      	ldrh	r2, [r4, #0]
 8021a5e:	9804      	ldr	r0, [sp, #16]
 8021a60:	f003 030f 	and.w	r3, r3, #15
 8021a64:	f105 0801 	add.w	r8, r5, #1
 8021a68:	f836 1013 	ldrh.w	r1, [r6, r3, lsl #1]
 8021a6c:	9b03      	ldr	r3, [sp, #12]
 8021a6e:	9300      	str	r3, [sp, #0]
 8021a70:	463b      	mov	r3, r7
 8021a72:	f7ff ff53 	bl	802191c <_ZNK8touchgfx8LCD16bpp17DecompressorL8_L416blendPixelRGB565Ettii>
 8021a76:	f824 0b02 	strh.w	r0, [r4], #2
 8021a7a:	f109 3bff 	add.w	fp, r9, #4294967295
 8021a7e:	f1bb 0f01 	cmp.w	fp, #1
 8021a82:	46a2      	mov	sl, r4
 8021a84:	f104 0404 	add.w	r4, r4, #4
 8021a88:	dd24      	ble.n	8021ad4 <_ZN8touchgfx8LCD16bpp17DecompressorL8_L414blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x144>
 8021a8a:	f898 3000 	ldrb.w	r3, [r8]
 8021a8e:	f834 2c04 	ldrh.w	r2, [r4, #-4]
 8021a92:	9804      	ldr	r0, [sp, #16]
 8021a94:	091b      	lsrs	r3, r3, #4
 8021a96:	f1ab 0b02 	sub.w	fp, fp, #2
 8021a9a:	f836 1013 	ldrh.w	r1, [r6, r3, lsl #1]
 8021a9e:	9b03      	ldr	r3, [sp, #12]
 8021aa0:	9300      	str	r3, [sp, #0]
 8021aa2:	463b      	mov	r3, r7
 8021aa4:	f7ff ff3a 	bl	802191c <_ZNK8touchgfx8LCD16bpp17DecompressorL8_L416blendPixelRGB565Ettii>
 8021aa8:	f824 0c04 	strh.w	r0, [r4, #-4]
 8021aac:	f818 3b01 	ldrb.w	r3, [r8], #1
 8021ab0:	f834 2c02 	ldrh.w	r2, [r4, #-2]
 8021ab4:	9804      	ldr	r0, [sp, #16]
 8021ab6:	f003 030f 	and.w	r3, r3, #15
 8021aba:	f836 1013 	ldrh.w	r1, [r6, r3, lsl #1]
 8021abe:	9b03      	ldr	r3, [sp, #12]
 8021ac0:	9300      	str	r3, [sp, #0]
 8021ac2:	463b      	mov	r3, r7
 8021ac4:	f7ff ff2a 	bl	802191c <_ZNK8touchgfx8LCD16bpp17DecompressorL8_L416blendPixelRGB565Ettii>
 8021ac8:	f824 0c02 	strh.w	r0, [r4, #-2]
 8021acc:	e7d7      	b.n	8021a7e <_ZN8touchgfx8LCD16bpp17DecompressorL8_L414blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0xee>
 8021ace:	46a8      	mov	r8, r5
 8021ad0:	46cb      	mov	fp, r9
 8021ad2:	e7d4      	b.n	8021a7e <_ZN8touchgfx8LCD16bpp17DecompressorL8_L414blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0xee>
 8021ad4:	d10e      	bne.n	8021af4 <_ZN8touchgfx8LCD16bpp17DecompressorL8_L414blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x164>
 8021ad6:	f898 3000 	ldrb.w	r3, [r8]
 8021ada:	f8ba 2000 	ldrh.w	r2, [sl]
 8021ade:	9804      	ldr	r0, [sp, #16]
 8021ae0:	091b      	lsrs	r3, r3, #4
 8021ae2:	f836 1013 	ldrh.w	r1, [r6, r3, lsl #1]
 8021ae6:	9b03      	ldr	r3, [sp, #12]
 8021ae8:	9300      	str	r3, [sp, #0]
 8021aea:	463b      	mov	r3, r7
 8021aec:	f7ff ff16 	bl	802191c <_ZNK8touchgfx8LCD16bpp17DecompressorL8_L416blendPixelRGB565Ettii>
 8021af0:	f82a 0b02 	strh.w	r0, [sl], #2
 8021af4:	9b08      	ldr	r3, [sp, #32]
 8021af6:	9a05      	ldr	r2, [sp, #20]
 8021af8:	881c      	ldrh	r4, [r3, #0]
 8021afa:	f9bd 302c 	ldrsh.w	r3, [sp, #44]	@ 0x2c
 8021afe:	eba4 0409 	sub.w	r4, r4, r9
 8021b02:	4413      	add	r3, r2
 8021b04:	eb0a 0444 	add.w	r4, sl, r4, lsl #1
 8021b08:	9a09      	ldr	r2, [sp, #36]	@ 0x24
 8021b0a:	fb93 f3f2 	sdiv	r3, r3, r2
 8021b0e:	441d      	add	r5, r3
 8021b10:	e79c      	b.n	8021a4c <_ZN8touchgfx8LCD16bpp17DecompressorL8_L414blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0xbc>
 8021b12:	eb04 0b4b 	add.w	fp, r4, fp, lsl #1
 8021b16:	45a3      	cmp	fp, r4
 8021b18:	d938      	bls.n	8021b8c <_ZN8touchgfx8LCD16bpp17DecompressorL8_L414blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x1fc>
 8021b1a:	9b06      	ldr	r3, [sp, #24]
 8021b1c:	b1f3      	cbz	r3, 8021b5c <_ZN8touchgfx8LCD16bpp17DecompressorL8_L414blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x1cc>
 8021b1e:	782b      	ldrb	r3, [r5, #0]
 8021b20:	f003 030f 	and.w	r3, r3, #15
 8021b24:	1c6a      	adds	r2, r5, #1
 8021b26:	f836 3013 	ldrh.w	r3, [r6, r3, lsl #1]
 8021b2a:	8023      	strh	r3, [r4, #0]
 8021b2c:	f109 30ff 	add.w	r0, r9, #4294967295
 8021b30:	3402      	adds	r4, #2
 8021b32:	2801      	cmp	r0, #1
 8021b34:	4623      	mov	r3, r4
 8021b36:	f104 0404 	add.w	r4, r4, #4
 8021b3a:	dd12      	ble.n	8021b62 <_ZN8touchgfx8LCD16bpp17DecompressorL8_L414blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x1d2>
 8021b3c:	7813      	ldrb	r3, [r2, #0]
 8021b3e:	091b      	lsrs	r3, r3, #4
 8021b40:	3802      	subs	r0, #2
 8021b42:	f836 3013 	ldrh.w	r3, [r6, r3, lsl #1]
 8021b46:	f824 3c04 	strh.w	r3, [r4, #-4]
 8021b4a:	f812 3b01 	ldrb.w	r3, [r2], #1
 8021b4e:	f003 030f 	and.w	r3, r3, #15
 8021b52:	f836 3013 	ldrh.w	r3, [r6, r3, lsl #1]
 8021b56:	f824 3c02 	strh.w	r3, [r4, #-2]
 8021b5a:	e7ea      	b.n	8021b32 <_ZN8touchgfx8LCD16bpp17DecompressorL8_L414blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x1a2>
 8021b5c:	462a      	mov	r2, r5
 8021b5e:	4648      	mov	r0, r9
 8021b60:	e7e7      	b.n	8021b32 <_ZN8touchgfx8LCD16bpp17DecompressorL8_L414blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x1a2>
 8021b62:	d106      	bne.n	8021b72 <_ZN8touchgfx8LCD16bpp17DecompressorL8_L414blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x1e2>
 8021b64:	7812      	ldrb	r2, [r2, #0]
 8021b66:	0912      	lsrs	r2, r2, #4
 8021b68:	3302      	adds	r3, #2
 8021b6a:	f836 2012 	ldrh.w	r2, [r6, r2, lsl #1]
 8021b6e:	f823 2c02 	strh.w	r2, [r3, #-2]
 8021b72:	880c      	ldrh	r4, [r1, #0]
 8021b74:	9a05      	ldr	r2, [sp, #20]
 8021b76:	eba4 0409 	sub.w	r4, r4, r9
 8021b7a:	eb03 0444 	add.w	r4, r3, r4, lsl #1
 8021b7e:	f9bd 302c 	ldrsh.w	r3, [sp, #44]	@ 0x2c
 8021b82:	4413      	add	r3, r2
 8021b84:	fb93 f3f8 	sdiv	r3, r3, r8
 8021b88:	441d      	add	r5, r3
 8021b8a:	e7c4      	b.n	8021b16 <_ZN8touchgfx8LCD16bpp17DecompressorL8_L414blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x186>
 8021b8c:	4b03      	ldr	r3, [pc, #12]	@ (8021b9c <_ZN8touchgfx8LCD16bpp17DecompressorL8_L414blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x20c>)
 8021b8e:	6818      	ldr	r0, [r3, #0]
 8021b90:	6803      	ldr	r3, [r0, #0]
 8021b92:	6adb      	ldr	r3, [r3, #44]	@ 0x2c
 8021b94:	4798      	blx	r3
 8021b96:	b00f      	add	sp, #60	@ 0x3c
 8021b98:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 8021b9c:	20002dbc 	.word	0x20002dbc
 8021ba0:	20002db6 	.word	0x20002db6

08021ba4 <_ZNK8touchgfx8LCD16bpp17DecompressorL8_L418blendPixelARGB8888Emtih>:
 8021ba4:	b5f0      	push	{r4, r5, r6, r7, lr}
 8021ba6:	f89d 5014 	ldrb.w	r5, [sp, #20]
 8021baa:	2dff      	cmp	r5, #255	@ 0xff
 8021bac:	ea4f 2711 	mov.w	r7, r1, lsr #8
 8021bb0:	d10c      	bne.n	8021bcc <_ZNK8touchgfx8LCD16bpp17DecompressorL8_L418blendPixelARGB8888Emtih+0x28>
 8021bb2:	2bff      	cmp	r3, #255	@ 0xff
 8021bb4:	d10a      	bne.n	8021bcc <_ZNK8touchgfx8LCD16bpp17DecompressorL8_L418blendPixelARGB8888Emtih+0x28>
 8021bb6:	4b25      	ldr	r3, [pc, #148]	@ (8021c4c <_ZNK8touchgfx8LCD16bpp17DecompressorL8_L418blendPixelARGB8888Emtih+0xa8>)
 8021bb8:	0948      	lsrs	r0, r1, #5
 8021bba:	f400 60fc 	and.w	r0, r0, #2016	@ 0x7e0
 8021bbe:	403b      	ands	r3, r7
 8021bc0:	4318      	orrs	r0, r3
 8021bc2:	f3c1 01c4 	ubfx	r1, r1, #3, #5
 8021bc6:	4308      	orrs	r0, r1
 8021bc8:	b280      	uxth	r0, r0
 8021bca:	bdf0      	pop	{r4, r5, r6, r7, pc}
 8021bcc:	fb15 f503 	smulbb	r5, r5, r3
 8021bd0:	b2ab      	uxth	r3, r5
 8021bd2:	1c5d      	adds	r5, r3, #1
 8021bd4:	eb05 2513 	add.w	r5, r5, r3, lsr #8
 8021bd8:	1214      	asrs	r4, r2, #8
 8021bda:	f3c5 2507 	ubfx	r5, r5, #8, #8
 8021bde:	fa1f fc85 	uxth.w	ip, r5
 8021be2:	10d6      	asrs	r6, r2, #3
 8021be4:	00d0      	lsls	r0, r2, #3
 8021be6:	43ed      	mvns	r5, r5
 8021be8:	f004 04f8 	and.w	r4, r4, #248	@ 0xf8
 8021bec:	f3c1 4207 	ubfx	r2, r1, #16, #8
 8021bf0:	b2eb      	uxtb	r3, r5
 8021bf2:	b2c0      	uxtb	r0, r0
 8021bf4:	fb12 f20c 	smulbb	r2, r2, ip
 8021bf8:	ea44 1454 	orr.w	r4, r4, r4, lsr #5
 8021bfc:	fb04 2403 	mla	r4, r4, r3, r2
 8021c00:	ea40 1250 	orr.w	r2, r0, r0, lsr #5
 8021c04:	b2c8      	uxtb	r0, r1
 8021c06:	f006 06fc 	and.w	r6, r6, #252	@ 0xfc
 8021c0a:	b2fd      	uxtb	r5, r7
 8021c0c:	fb10 f00c 	smulbb	r0, r0, ip
 8021c10:	b2a4      	uxth	r4, r4
 8021c12:	fb02 0003 	mla	r0, r2, r3, r0
 8021c16:	ea46 1696 	orr.w	r6, r6, r6, lsr #6
 8021c1a:	fb15 f50c 	smulbb	r5, r5, ip
 8021c1e:	fb06 5503 	mla	r5, r6, r3, r5
 8021c22:	b283      	uxth	r3, r0
 8021c24:	1c60      	adds	r0, r4, #1
 8021c26:	b2ad      	uxth	r5, r5
 8021c28:	eb00 2414 	add.w	r4, r0, r4, lsr #8
 8021c2c:	1c58      	adds	r0, r3, #1
 8021c2e:	eb00 2013 	add.w	r0, r0, r3, lsr #8
 8021c32:	1c6b      	adds	r3, r5, #1
 8021c34:	eb03 2515 	add.w	r5, r3, r5, lsr #8
 8021c38:	f404 4478 	and.w	r4, r4, #63488	@ 0xf800
 8021c3c:	f3c0 20c4 	ubfx	r0, r0, #11, #5
 8021c40:	096d      	lsrs	r5, r5, #5
 8021c42:	4320      	orrs	r0, r4
 8021c44:	f405 65fc 	and.w	r5, r5, #2016	@ 0x7e0
 8021c48:	4328      	orrs	r0, r5
 8021c4a:	e7be      	b.n	8021bca <_ZNK8touchgfx8LCD16bpp17DecompressorL8_L418blendPixelARGB8888Emtih+0x26>
 8021c4c:	00fff800 	.word	0x00fff800

08021c50 <_ZN8touchgfx8LCD16bpp17DecompressorL8_L416blitCopyARGB8888EPKhS3_RKNS_4RectES6_h>:
 8021c50:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8021c54:	461c      	mov	r4, r3
 8021c56:	b08d      	sub	sp, #52	@ 0x34
 8021c58:	460d      	mov	r5, r1
 8021c5a:	9b16      	ldr	r3, [sp, #88]	@ 0x58
 8021c5c:	6861      	ldr	r1, [r4, #4]
 8021c5e:	f89d 905c 	ldrb.w	r9, [sp, #92]	@ 0x5c
 8021c62:	4680      	mov	r8, r0
 8021c64:	6820      	ldr	r0, [r4, #0]
 8021c66:	4616      	mov	r6, r2
 8021c68:	aa08      	add	r2, sp, #32
 8021c6a:	c203      	stmia	r2!, {r0, r1}
 8021c6c:	6818      	ldr	r0, [r3, #0]
 8021c6e:	6859      	ldr	r1, [r3, #4]
 8021c70:	aa0a      	add	r2, sp, #40	@ 0x28
 8021c72:	c203      	stmia	r2!, {r0, r1}
 8021c74:	a808      	add	r0, sp, #32
 8021c76:	f7ee fc77 	bl	8010568 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectE>
 8021c7a:	4621      	mov	r1, r4
 8021c7c:	a80a      	add	r0, sp, #40	@ 0x28
 8021c7e:	f7ee fc9b 	bl	80105b8 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectERKS1_>
 8021c82:	f9bd 2028 	ldrsh.w	r2, [sp, #40]	@ 0x28
 8021c86:	f9bd 702e 	ldrsh.w	r7, [sp, #46]	@ 0x2e
 8021c8a:	f9bd b02c 	ldrsh.w	fp, [sp, #44]	@ 0x2c
 8021c8e:	f002 0301 	and.w	r3, r2, #1
 8021c92:	9303      	str	r3, [sp, #12]
 8021c94:	f9bd 3024 	ldrsh.w	r3, [sp, #36]	@ 0x24
 8021c98:	f003 0101 	and.w	r1, r3, #1
 8021c9c:	9102      	str	r1, [sp, #8]
 8021c9e:	9802      	ldr	r0, [sp, #8]
 8021ca0:	f9bd 102a 	ldrsh.w	r1, [sp, #42]	@ 0x2a
 8021ca4:	4403      	add	r3, r0
 8021ca6:	fb01 2303 	mla	r3, r1, r3, r2
 8021caa:	f04f 0a02 	mov.w	sl, #2
 8021cae:	fb93 f3fa 	sdiv	r3, r3, sl
 8021cb2:	441d      	add	r5, r3
 8021cb4:	f8bd 3020 	ldrh.w	r3, [sp, #32]
 8021cb8:	441a      	add	r2, r3
 8021cba:	f8ad 2028 	strh.w	r2, [sp, #40]	@ 0x28
 8021cbe:	f8bd 3022 	ldrh.w	r3, [sp, #34]	@ 0x22
 8021cc2:	4a3f      	ldr	r2, [pc, #252]	@ (8021dc0 <_ZN8touchgfx8LCD16bpp17DecompressorL8_L416blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x170>)
 8021cc4:	9205      	str	r2, [sp, #20]
 8021cc6:	4419      	add	r1, r3
 8021cc8:	6810      	ldr	r0, [r2, #0]
 8021cca:	f8ad 102a 	strh.w	r1, [sp, #42]	@ 0x2a
 8021cce:	6803      	ldr	r3, [r0, #0]
 8021cd0:	6a9b      	ldr	r3, [r3, #40]	@ 0x28
 8021cd2:	4798      	blx	r3
 8021cd4:	4b3b      	ldr	r3, [pc, #236]	@ (8021dc4 <_ZN8touchgfx8LCD16bpp17DecompressorL8_L416blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x174>)
 8021cd6:	f9bd 402a 	ldrsh.w	r4, [sp, #42]	@ 0x2a
 8021cda:	8819      	ldrh	r1, [r3, #0]
 8021cdc:	f9bd c028 	ldrsh.w	ip, [sp, #40]	@ 0x28
 8021ce0:	fb01 c404 	mla	r4, r1, r4, ip
 8021ce4:	eb00 0444 	add.w	r4, r0, r4, lsl #1
 8021ce8:	434f      	muls	r7, r1
 8021cea:	e9cd 3a06 	strd	r3, sl, [sp, #24]
 8021cee:	eb04 0247 	add.w	r2, r4, r7, lsl #1
 8021cf2:	3604      	adds	r6, #4
 8021cf4:	9204      	str	r2, [sp, #16]
 8021cf6:	9b04      	ldr	r3, [sp, #16]
 8021cf8:	429c      	cmp	r4, r3
 8021cfa:	d258      	bcs.n	8021dae <_ZN8touchgfx8LCD16bpp17DecompressorL8_L416blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x15e>
 8021cfc:	9b03      	ldr	r3, [sp, #12]
 8021cfe:	2b00      	cmp	r3, #0
 8021d00:	d034      	beq.n	8021d6c <_ZN8touchgfx8LCD16bpp17DecompressorL8_L416blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x11c>
 8021d02:	782b      	ldrb	r3, [r5, #0]
 8021d04:	f003 030f 	and.w	r3, r3, #15
 8021d08:	1c6f      	adds	r7, r5, #1
 8021d0a:	f856 1023 	ldr.w	r1, [r6, r3, lsl #2]
 8021d0e:	0e0b      	lsrs	r3, r1, #24
 8021d10:	d006      	beq.n	8021d20 <_ZN8touchgfx8LCD16bpp17DecompressorL8_L416blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0xd0>
 8021d12:	8822      	ldrh	r2, [r4, #0]
 8021d14:	9300      	str	r3, [sp, #0]
 8021d16:	4640      	mov	r0, r8
 8021d18:	464b      	mov	r3, r9
 8021d1a:	f7ff ff43 	bl	8021ba4 <_ZNK8touchgfx8LCD16bpp17DecompressorL8_L418blendPixelARGB8888Emtih>
 8021d1e:	8020      	strh	r0, [r4, #0]
 8021d20:	3402      	adds	r4, #2
 8021d22:	f10b 3aff 	add.w	sl, fp, #4294967295
 8021d26:	f1ba 0f01 	cmp.w	sl, #1
 8021d2a:	dd22      	ble.n	8021d72 <_ZN8touchgfx8LCD16bpp17DecompressorL8_L416blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x122>
 8021d2c:	783b      	ldrb	r3, [r7, #0]
 8021d2e:	091b      	lsrs	r3, r3, #4
 8021d30:	f856 1023 	ldr.w	r1, [r6, r3, lsl #2]
 8021d34:	0e0b      	lsrs	r3, r1, #24
 8021d36:	d006      	beq.n	8021d46 <_ZN8touchgfx8LCD16bpp17DecompressorL8_L416blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0xf6>
 8021d38:	8822      	ldrh	r2, [r4, #0]
 8021d3a:	9300      	str	r3, [sp, #0]
 8021d3c:	4640      	mov	r0, r8
 8021d3e:	464b      	mov	r3, r9
 8021d40:	f7ff ff30 	bl	8021ba4 <_ZNK8touchgfx8LCD16bpp17DecompressorL8_L418blendPixelARGB8888Emtih>
 8021d44:	8020      	strh	r0, [r4, #0]
 8021d46:	f817 3b01 	ldrb.w	r3, [r7], #1
 8021d4a:	f003 030f 	and.w	r3, r3, #15
 8021d4e:	f856 1023 	ldr.w	r1, [r6, r3, lsl #2]
 8021d52:	0e0b      	lsrs	r3, r1, #24
 8021d54:	d006      	beq.n	8021d64 <_ZN8touchgfx8LCD16bpp17DecompressorL8_L416blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x114>
 8021d56:	8862      	ldrh	r2, [r4, #2]
 8021d58:	9300      	str	r3, [sp, #0]
 8021d5a:	4640      	mov	r0, r8
 8021d5c:	464b      	mov	r3, r9
 8021d5e:	f7ff ff21 	bl	8021ba4 <_ZNK8touchgfx8LCD16bpp17DecompressorL8_L418blendPixelARGB8888Emtih>
 8021d62:	8060      	strh	r0, [r4, #2]
 8021d64:	3404      	adds	r4, #4
 8021d66:	f1aa 0a02 	sub.w	sl, sl, #2
 8021d6a:	e7dc      	b.n	8021d26 <_ZN8touchgfx8LCD16bpp17DecompressorL8_L416blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0xd6>
 8021d6c:	462f      	mov	r7, r5
 8021d6e:	46da      	mov	sl, fp
 8021d70:	e7d9      	b.n	8021d26 <_ZN8touchgfx8LCD16bpp17DecompressorL8_L416blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0xd6>
 8021d72:	d10d      	bne.n	8021d90 <_ZN8touchgfx8LCD16bpp17DecompressorL8_L416blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x140>
 8021d74:	783b      	ldrb	r3, [r7, #0]
 8021d76:	091b      	lsrs	r3, r3, #4
 8021d78:	f856 1023 	ldr.w	r1, [r6, r3, lsl #2]
 8021d7c:	0e0b      	lsrs	r3, r1, #24
 8021d7e:	d006      	beq.n	8021d8e <_ZN8touchgfx8LCD16bpp17DecompressorL8_L416blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x13e>
 8021d80:	8822      	ldrh	r2, [r4, #0]
 8021d82:	9300      	str	r3, [sp, #0]
 8021d84:	4640      	mov	r0, r8
 8021d86:	464b      	mov	r3, r9
 8021d88:	f7ff ff0c 	bl	8021ba4 <_ZNK8touchgfx8LCD16bpp17DecompressorL8_L418blendPixelARGB8888Emtih>
 8021d8c:	8020      	strh	r0, [r4, #0]
 8021d8e:	3402      	adds	r4, #2
 8021d90:	9b06      	ldr	r3, [sp, #24]
 8021d92:	9a02      	ldr	r2, [sp, #8]
 8021d94:	881b      	ldrh	r3, [r3, #0]
 8021d96:	eba3 030b 	sub.w	r3, r3, fp
 8021d9a:	eb04 0443 	add.w	r4, r4, r3, lsl #1
 8021d9e:	f9bd 3024 	ldrsh.w	r3, [sp, #36]	@ 0x24
 8021da2:	4413      	add	r3, r2
 8021da4:	9a07      	ldr	r2, [sp, #28]
 8021da6:	fb93 f3f2 	sdiv	r3, r3, r2
 8021daa:	441d      	add	r5, r3
 8021dac:	e7a3      	b.n	8021cf6 <_ZN8touchgfx8LCD16bpp17DecompressorL8_L416blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0xa6>
 8021dae:	9b05      	ldr	r3, [sp, #20]
 8021db0:	6818      	ldr	r0, [r3, #0]
 8021db2:	6803      	ldr	r3, [r0, #0]
 8021db4:	6adb      	ldr	r3, [r3, #44]	@ 0x2c
 8021db6:	4798      	blx	r3
 8021db8:	b00d      	add	sp, #52	@ 0x34
 8021dba:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 8021dbe:	bf00      	nop
 8021dc0:	20002dbc 	.word	0x20002dbc
 8021dc4:	20002db6 	.word	0x20002db6

08021dc8 <_ZNK8touchgfx8LCD16bpp17DecompressorL8_L416blendPixelRGB888EPKhthh>:
 8021dc8:	b570      	push	{r4, r5, r6, lr}
 8021dca:	1214      	asrs	r4, r2, #8
 8021dcc:	788d      	ldrb	r5, [r1, #2]
 8021dce:	f89d 6010 	ldrb.w	r6, [sp, #16]
 8021dd2:	f004 04f8 	and.w	r4, r4, #248	@ 0xf8
 8021dd6:	ea44 1454 	orr.w	r4, r4, r4, lsr #5
 8021dda:	fb15 f503 	smulbb	r5, r5, r3
 8021dde:	fb04 5506 	mla	r5, r4, r6, r5
 8021de2:	10d0      	asrs	r0, r2, #3
 8021de4:	784c      	ldrb	r4, [r1, #1]
 8021de6:	7809      	ldrb	r1, [r1, #0]
 8021de8:	00d2      	lsls	r2, r2, #3
 8021dea:	f000 00fc 	and.w	r0, r0, #252	@ 0xfc
 8021dee:	b2d2      	uxtb	r2, r2
 8021df0:	ea40 1090 	orr.w	r0, r0, r0, lsr #6
 8021df4:	fb14 f403 	smulbb	r4, r4, r3
 8021df8:	ea42 1252 	orr.w	r2, r2, r2, lsr #5
 8021dfc:	fb11 f303 	smulbb	r3, r1, r3
 8021e00:	fb00 4406 	mla	r4, r0, r6, r4
 8021e04:	fb02 3306 	mla	r3, r2, r6, r3
 8021e08:	b2ad      	uxth	r5, r5
 8021e0a:	b29b      	uxth	r3, r3
 8021e0c:	b2a4      	uxth	r4, r4
 8021e0e:	1c68      	adds	r0, r5, #1
 8021e10:	eb00 2515 	add.w	r5, r0, r5, lsr #8
 8021e14:	1c62      	adds	r2, r4, #1
 8021e16:	1c58      	adds	r0, r3, #1
 8021e18:	eb00 2013 	add.w	r0, r0, r3, lsr #8
 8021e1c:	eb02 2414 	add.w	r4, r2, r4, lsr #8
 8021e20:	f405 4578 	and.w	r5, r5, #63488	@ 0xf800
 8021e24:	f3c0 20c4 	ubfx	r0, r0, #11, #5
 8021e28:	0964      	lsrs	r4, r4, #5
 8021e2a:	4328      	orrs	r0, r5
 8021e2c:	f404 64fc 	and.w	r4, r4, #2016	@ 0x7e0
 8021e30:	4320      	orrs	r0, r4
 8021e32:	bd70      	pop	{r4, r5, r6, pc}

08021e34 <_ZN8touchgfx8LCD16bpp17DecompressorL8_L414blitCopyRGB888EPKhS3_RKNS_4RectES6_h>:
 8021e34:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8021e38:	b08f      	sub	sp, #60	@ 0x3c
 8021e3a:	461c      	mov	r4, r3
 8021e3c:	f89d 7064 	ldrb.w	r7, [sp, #100]	@ 0x64
 8021e40:	9b18      	ldr	r3, [sp, #96]	@ 0x60
 8021e42:	4682      	mov	sl, r0
 8021e44:	460e      	mov	r6, r1
 8021e46:	4615      	mov	r5, r2
 8021e48:	2f00      	cmp	r7, #0
 8021e4a:	f000 8142 	beq.w	80220d2 <_ZN8touchgfx8LCD16bpp17DecompressorL8_L414blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x29e>
 8021e4e:	6820      	ldr	r0, [r4, #0]
 8021e50:	6861      	ldr	r1, [r4, #4]
 8021e52:	aa0a      	add	r2, sp, #40	@ 0x28
 8021e54:	c203      	stmia	r2!, {r0, r1}
 8021e56:	6818      	ldr	r0, [r3, #0]
 8021e58:	6859      	ldr	r1, [r3, #4]
 8021e5a:	aa0c      	add	r2, sp, #48	@ 0x30
 8021e5c:	c203      	stmia	r2!, {r0, r1}
 8021e5e:	a80a      	add	r0, sp, #40	@ 0x28
 8021e60:	f7ee fb82 	bl	8010568 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectE>
 8021e64:	4621      	mov	r1, r4
 8021e66:	a80c      	add	r0, sp, #48	@ 0x30
 8021e68:	f7ee fba6 	bl	80105b8 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectERKS1_>
 8021e6c:	f9bd 2030 	ldrsh.w	r2, [sp, #48]	@ 0x30
 8021e70:	f9bd b036 	ldrsh.w	fp, [sp, #54]	@ 0x36
 8021e74:	f002 0301 	and.w	r3, r2, #1
 8021e78:	9306      	str	r3, [sp, #24]
 8021e7a:	f9bd 302c 	ldrsh.w	r3, [sp, #44]	@ 0x2c
 8021e7e:	f003 0101 	and.w	r1, r3, #1
 8021e82:	9105      	str	r1, [sp, #20]
 8021e84:	9805      	ldr	r0, [sp, #20]
 8021e86:	f9bd 1032 	ldrsh.w	r1, [sp, #50]	@ 0x32
 8021e8a:	4403      	add	r3, r0
 8021e8c:	fb01 2303 	mla	r3, r1, r3, r2
 8021e90:	f04f 0802 	mov.w	r8, #2
 8021e94:	fb93 f3f8 	sdiv	r3, r3, r8
 8021e98:	441e      	add	r6, r3
 8021e9a:	f8bd 3028 	ldrh.w	r3, [sp, #40]	@ 0x28
 8021e9e:	441a      	add	r2, r3
 8021ea0:	f8bd 302a 	ldrh.w	r3, [sp, #42]	@ 0x2a
 8021ea4:	f8ad 2030 	strh.w	r2, [sp, #48]	@ 0x30
 8021ea8:	4419      	add	r1, r3
 8021eaa:	f9bd 3034 	ldrsh.w	r3, [sp, #52]	@ 0x34
 8021eae:	9303      	str	r3, [sp, #12]
 8021eb0:	4b89      	ldr	r3, [pc, #548]	@ (80220d8 <_ZN8touchgfx8LCD16bpp17DecompressorL8_L414blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x2a4>)
 8021eb2:	f8ad 1032 	strh.w	r1, [sp, #50]	@ 0x32
 8021eb6:	6818      	ldr	r0, [r3, #0]
 8021eb8:	6803      	ldr	r3, [r0, #0]
 8021eba:	6a9b      	ldr	r3, [r3, #40]	@ 0x28
 8021ebc:	4798      	blx	r3
 8021ebe:	4a87      	ldr	r2, [pc, #540]	@ (80220dc <_ZN8touchgfx8LCD16bpp17DecompressorL8_L414blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x2a8>)
 8021ec0:	f9bd 4032 	ldrsh.w	r4, [sp, #50]	@ 0x32
 8021ec4:	8813      	ldrh	r3, [r2, #0]
 8021ec6:	f9bd 9030 	ldrsh.w	r9, [sp, #48]	@ 0x30
 8021eca:	2fff      	cmp	r7, #255	@ 0xff
 8021ecc:	fb03 9404 	mla	r4, r3, r4, r9
 8021ed0:	eb00 0444 	add.w	r4, r0, r4, lsl #1
 8021ed4:	f105 0504 	add.w	r5, r5, #4
 8021ed8:	4694      	mov	ip, r2
 8021eda:	fb03 f30b 	mul.w	r3, r3, fp
 8021ede:	d071      	beq.n	8021fc4 <_ZN8touchgfx8LCD16bpp17DecompressorL8_L414blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x190>
 8021ee0:	eb04 0343 	add.w	r3, r4, r3, lsl #1
 8021ee4:	43f9      	mvns	r1, r7
 8021ee6:	e9cd 3207 	strd	r3, r2, [sp, #28]
 8021eea:	b2c9      	uxtb	r1, r1
 8021eec:	9104      	str	r1, [sp, #16]
 8021eee:	f8cd 8024 	str.w	r8, [sp, #36]	@ 0x24
 8021ef2:	9b07      	ldr	r3, [sp, #28]
 8021ef4:	42a3      	cmp	r3, r4
 8021ef6:	f240 80e7 	bls.w	80220c8 <_ZN8touchgfx8LCD16bpp17DecompressorL8_L414blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x294>
 8021efa:	9b06      	ldr	r3, [sp, #24]
 8021efc:	2b00      	cmp	r3, #0
 8021efe:	d03d      	beq.n	8021f7c <_ZN8touchgfx8LCD16bpp17DecompressorL8_L414blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x148>
 8021f00:	7831      	ldrb	r1, [r6, #0]
 8021f02:	9b04      	ldr	r3, [sp, #16]
 8021f04:	8822      	ldrh	r2, [r4, #0]
 8021f06:	9300      	str	r3, [sp, #0]
 8021f08:	f001 010f 	and.w	r1, r1, #15
 8021f0c:	eb01 0141 	add.w	r1, r1, r1, lsl #1
 8021f10:	463b      	mov	r3, r7
 8021f12:	4429      	add	r1, r5
 8021f14:	4650      	mov	r0, sl
 8021f16:	f7ff ff57 	bl	8021dc8 <_ZNK8touchgfx8LCD16bpp17DecompressorL8_L416blendPixelRGB888EPKhthh>
 8021f1a:	9b03      	ldr	r3, [sp, #12]
 8021f1c:	f824 0b02 	strh.w	r0, [r4], #2
 8021f20:	f106 0801 	add.w	r8, r6, #1
 8021f24:	f103 3bff 	add.w	fp, r3, #4294967295
 8021f28:	f1bb 0f01 	cmp.w	fp, #1
 8021f2c:	46a1      	mov	r9, r4
 8021f2e:	f104 0404 	add.w	r4, r4, #4
 8021f32:	dd27      	ble.n	8021f84 <_ZN8touchgfx8LCD16bpp17DecompressorL8_L414blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x150>
 8021f34:	f898 1000 	ldrb.w	r1, [r8]
 8021f38:	9b04      	ldr	r3, [sp, #16]
 8021f3a:	f834 2c04 	ldrh.w	r2, [r4, #-4]
 8021f3e:	9300      	str	r3, [sp, #0]
 8021f40:	0909      	lsrs	r1, r1, #4
 8021f42:	eb01 0141 	add.w	r1, r1, r1, lsl #1
 8021f46:	463b      	mov	r3, r7
 8021f48:	4429      	add	r1, r5
 8021f4a:	4650      	mov	r0, sl
 8021f4c:	f7ff ff3c 	bl	8021dc8 <_ZNK8touchgfx8LCD16bpp17DecompressorL8_L416blendPixelRGB888EPKhthh>
 8021f50:	f824 0c04 	strh.w	r0, [r4, #-4]
 8021f54:	f818 1b01 	ldrb.w	r1, [r8], #1
 8021f58:	9b04      	ldr	r3, [sp, #16]
 8021f5a:	f834 2c02 	ldrh.w	r2, [r4, #-2]
 8021f5e:	9300      	str	r3, [sp, #0]
 8021f60:	f001 010f 	and.w	r1, r1, #15
 8021f64:	eb01 0141 	add.w	r1, r1, r1, lsl #1
 8021f68:	463b      	mov	r3, r7
 8021f6a:	4429      	add	r1, r5
 8021f6c:	4650      	mov	r0, sl
 8021f6e:	f7ff ff2b 	bl	8021dc8 <_ZNK8touchgfx8LCD16bpp17DecompressorL8_L416blendPixelRGB888EPKhthh>
 8021f72:	f1ab 0b02 	sub.w	fp, fp, #2
 8021f76:	f824 0c02 	strh.w	r0, [r4, #-2]
 8021f7a:	e7d5      	b.n	8021f28 <_ZN8touchgfx8LCD16bpp17DecompressorL8_L414blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0xf4>
 8021f7c:	46b0      	mov	r8, r6
 8021f7e:	f8dd b00c 	ldr.w	fp, [sp, #12]
 8021f82:	e7d1      	b.n	8021f28 <_ZN8touchgfx8LCD16bpp17DecompressorL8_L414blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0xf4>
 8021f84:	d10f      	bne.n	8021fa6 <_ZN8touchgfx8LCD16bpp17DecompressorL8_L414blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x172>
 8021f86:	f898 1000 	ldrb.w	r1, [r8]
 8021f8a:	9b04      	ldr	r3, [sp, #16]
 8021f8c:	f8b9 2000 	ldrh.w	r2, [r9]
 8021f90:	9300      	str	r3, [sp, #0]
 8021f92:	0909      	lsrs	r1, r1, #4
 8021f94:	eb01 0141 	add.w	r1, r1, r1, lsl #1
 8021f98:	463b      	mov	r3, r7
 8021f9a:	4429      	add	r1, r5
 8021f9c:	4650      	mov	r0, sl
 8021f9e:	f7ff ff13 	bl	8021dc8 <_ZNK8touchgfx8LCD16bpp17DecompressorL8_L416blendPixelRGB888EPKhthh>
 8021fa2:	f829 0b02 	strh.w	r0, [r9], #2
 8021fa6:	9b08      	ldr	r3, [sp, #32]
 8021fa8:	9a05      	ldr	r2, [sp, #20]
 8021faa:	881c      	ldrh	r4, [r3, #0]
 8021fac:	9b03      	ldr	r3, [sp, #12]
 8021fae:	1ae4      	subs	r4, r4, r3
 8021fb0:	f9bd 302c 	ldrsh.w	r3, [sp, #44]	@ 0x2c
 8021fb4:	eb09 0444 	add.w	r4, r9, r4, lsl #1
 8021fb8:	4413      	add	r3, r2
 8021fba:	9a09      	ldr	r2, [sp, #36]	@ 0x24
 8021fbc:	fb93 f3f2 	sdiv	r3, r3, r2
 8021fc0:	441e      	add	r6, r3
 8021fc2:	e796      	b.n	8021ef2 <_ZN8touchgfx8LCD16bpp17DecompressorL8_L414blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0xbe>
 8021fc4:	4f46      	ldr	r7, [pc, #280]	@ (80220e0 <_ZN8touchgfx8LCD16bpp17DecompressorL8_L414blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x2ac>)
 8021fc6:	eb04 0343 	add.w	r3, r4, r3, lsl #1
 8021fca:	42a3      	cmp	r3, r4
 8021fcc:	d97c      	bls.n	80220c8 <_ZN8touchgfx8LCD16bpp17DecompressorL8_L414blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x294>
 8021fce:	9a06      	ldr	r2, [sp, #24]
 8021fd0:	2a00      	cmp	r2, #0
 8021fd2:	d054      	beq.n	802207e <_ZN8touchgfx8LCD16bpp17DecompressorL8_L414blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x24a>
 8021fd4:	7830      	ldrb	r0, [r6, #0]
 8021fd6:	f000 000f 	and.w	r0, r0, #15
 8021fda:	eb00 0040 	add.w	r0, r0, r0, lsl #1
 8021fde:	eb05 0e00 	add.w	lr, r5, r0
 8021fe2:	5c28      	ldrb	r0, [r5, r0]
 8021fe4:	f89e 2002 	ldrb.w	r2, [lr, #2]
 8021fe8:	f89e e001 	ldrb.w	lr, [lr, #1]
 8021fec:	ea4f 0ece 	mov.w	lr, lr, lsl #3
 8021ff0:	f40e 6efc 	and.w	lr, lr, #2016	@ 0x7e0
 8021ff4:	ea07 2202 	and.w	r2, r7, r2, lsl #8
 8021ff8:	ea42 020e 	orr.w	r2, r2, lr
 8021ffc:	ea42 02d0 	orr.w	r2, r2, r0, lsr #3
 8022000:	f824 2b02 	strh.w	r2, [r4], #2
 8022004:	9a03      	ldr	r2, [sp, #12]
 8022006:	1c71      	adds	r1, r6, #1
 8022008:	f102 3eff 	add.w	lr, r2, #4294967295
 802200c:	f1be 0f01 	cmp.w	lr, #1
 8022010:	4620      	mov	r0, r4
 8022012:	f104 0404 	add.w	r4, r4, #4
 8022016:	dd36      	ble.n	8022086 <_ZN8touchgfx8LCD16bpp17DecompressorL8_L414blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x252>
 8022018:	7808      	ldrb	r0, [r1, #0]
 802201a:	0900      	lsrs	r0, r0, #4
 802201c:	eb00 0040 	add.w	r0, r0, r0, lsl #1
 8022020:	eb05 0a00 	add.w	sl, r5, r0
 8022024:	f1ae 0e02 	sub.w	lr, lr, #2
 8022028:	f89a 2001 	ldrb.w	r2, [sl, #1]
 802202c:	f89a 9002 	ldrb.w	r9, [sl, #2]
 8022030:	00d2      	lsls	r2, r2, #3
 8022032:	ea07 2909 	and.w	r9, r7, r9, lsl #8
 8022036:	f402 62fc 	and.w	r2, r2, #2016	@ 0x7e0
 802203a:	ea49 0202 	orr.w	r2, r9, r2
 802203e:	f815 9000 	ldrb.w	r9, [r5, r0]
 8022042:	ea42 02d9 	orr.w	r2, r2, r9, lsr #3
 8022046:	f824 2c04 	strh.w	r2, [r4, #-4]
 802204a:	f811 0b01 	ldrb.w	r0, [r1], #1
 802204e:	f000 000f 	and.w	r0, r0, #15
 8022052:	eb00 0040 	add.w	r0, r0, r0, lsl #1
 8022056:	eb05 0a00 	add.w	sl, r5, r0
 802205a:	f89a 2001 	ldrb.w	r2, [sl, #1]
 802205e:	f89a 9002 	ldrb.w	r9, [sl, #2]
 8022062:	00d2      	lsls	r2, r2, #3
 8022064:	ea07 2909 	and.w	r9, r7, r9, lsl #8
 8022068:	f402 62fc 	and.w	r2, r2, #2016	@ 0x7e0
 802206c:	ea49 0202 	orr.w	r2, r9, r2
 8022070:	f815 9000 	ldrb.w	r9, [r5, r0]
 8022074:	ea42 02d9 	orr.w	r2, r2, r9, lsr #3
 8022078:	f824 2c02 	strh.w	r2, [r4, #-2]
 802207c:	e7c6      	b.n	802200c <_ZN8touchgfx8LCD16bpp17DecompressorL8_L414blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x1d8>
 802207e:	4631      	mov	r1, r6
 8022080:	f8dd e00c 	ldr.w	lr, [sp, #12]
 8022084:	e7c2      	b.n	802200c <_ZN8touchgfx8LCD16bpp17DecompressorL8_L414blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x1d8>
 8022086:	d111      	bne.n	80220ac <_ZN8touchgfx8LCD16bpp17DecompressorL8_L414blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x278>
 8022088:	7809      	ldrb	r1, [r1, #0]
 802208a:	0909      	lsrs	r1, r1, #4
 802208c:	eb01 0141 	add.w	r1, r1, r1, lsl #1
 8022090:	186c      	adds	r4, r5, r1
 8022092:	5c69      	ldrb	r1, [r5, r1]
 8022094:	78a2      	ldrb	r2, [r4, #2]
 8022096:	7864      	ldrb	r4, [r4, #1]
 8022098:	00e4      	lsls	r4, r4, #3
 802209a:	ea07 2202 	and.w	r2, r7, r2, lsl #8
 802209e:	f404 64fc 	and.w	r4, r4, #2016	@ 0x7e0
 80220a2:	4322      	orrs	r2, r4
 80220a4:	ea42 02d1 	orr.w	r2, r2, r1, lsr #3
 80220a8:	f820 2b02 	strh.w	r2, [r0], #2
 80220ac:	9a03      	ldr	r2, [sp, #12]
 80220ae:	f8bc 4000 	ldrh.w	r4, [ip]
 80220b2:	9905      	ldr	r1, [sp, #20]
 80220b4:	1aa4      	subs	r4, r4, r2
 80220b6:	f9bd 202c 	ldrsh.w	r2, [sp, #44]	@ 0x2c
 80220ba:	eb00 0444 	add.w	r4, r0, r4, lsl #1
 80220be:	440a      	add	r2, r1
 80220c0:	fb92 f2f8 	sdiv	r2, r2, r8
 80220c4:	4416      	add	r6, r2
 80220c6:	e780      	b.n	8021fca <_ZN8touchgfx8LCD16bpp17DecompressorL8_L414blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x196>
 80220c8:	4b03      	ldr	r3, [pc, #12]	@ (80220d8 <_ZN8touchgfx8LCD16bpp17DecompressorL8_L414blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x2a4>)
 80220ca:	6818      	ldr	r0, [r3, #0]
 80220cc:	6803      	ldr	r3, [r0, #0]
 80220ce:	6adb      	ldr	r3, [r3, #44]	@ 0x2c
 80220d0:	4798      	blx	r3
 80220d2:	b00f      	add	sp, #60	@ 0x3c
 80220d4:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 80220d8:	20002dbc 	.word	0x20002dbc
 80220dc:	20002db6 	.word	0x20002db6
 80220e0:	fffff800 	.word	0xfffff800

080220e4 <CRC_Lock>:
 80220e4:	b530      	push	{r4, r5, lr}
 80220e6:	4a2d      	ldr	r2, [pc, #180]	@ (802219c <CRC_Lock+0xb8>)
 80220e8:	6813      	ldr	r3, [r2, #0]
 80220ea:	f023 0301 	bic.w	r3, r3, #1
 80220ee:	6013      	str	r3, [r2, #0]
 80220f0:	4b2b      	ldr	r3, [pc, #172]	@ (80221a0 <CRC_Lock+0xbc>)
 80220f2:	681c      	ldr	r4, [r3, #0]
 80220f4:	f64f 72f0 	movw	r2, #65520	@ 0xfff0
 80220f8:	4014      	ands	r4, r2
 80220fa:	f24c 2540 	movw	r5, #49728	@ 0xc240
 80220fe:	42ac      	cmp	r4, r5
 8022100:	d005      	beq.n	802210e <CRC_Lock+0x2a>
 8022102:	681c      	ldr	r4, [r3, #0]
 8022104:	f24c 2570 	movw	r5, #49776	@ 0xc270
 8022108:	4014      	ands	r4, r2
 802210a:	42ac      	cmp	r4, r5
 802210c:	d125      	bne.n	802215a <CRC_Lock+0x76>
 802210e:	4b25      	ldr	r3, [pc, #148]	@ (80221a4 <CRC_Lock+0xc0>)
 8022110:	681b      	ldr	r3, [r3, #0]
 8022112:	2b00      	cmp	r3, #0
 8022114:	d139      	bne.n	802218a <CRC_Lock+0xa6>
 8022116:	4b24      	ldr	r3, [pc, #144]	@ (80221a8 <CRC_Lock+0xc4>)
 8022118:	681a      	ldr	r2, [r3, #0]
 802211a:	f3c2 020b 	ubfx	r2, r2, #0, #12
 802211e:	f5b2 6f8a 	cmp.w	r2, #1104	@ 0x450
 8022122:	d00d      	beq.n	8022140 <CRC_Lock+0x5c>
 8022124:	681a      	ldr	r2, [r3, #0]
 8022126:	f240 4483 	movw	r4, #1155	@ 0x483
 802212a:	f3c2 020b 	ubfx	r2, r2, #0, #12
 802212e:	42a2      	cmp	r2, r4
 8022130:	d006      	beq.n	8022140 <CRC_Lock+0x5c>
 8022132:	681b      	ldr	r3, [r3, #0]
 8022134:	f240 4285 	movw	r2, #1157	@ 0x485
 8022138:	f3c3 030b 	ubfx	r3, r3, #0, #12
 802213c:	4293      	cmp	r3, r2
 802213e:	d124      	bne.n	802218a <CRC_Lock+0xa6>
 8022140:	4b1a      	ldr	r3, [pc, #104]	@ (80221ac <CRC_Lock+0xc8>)
 8022142:	2201      	movs	r2, #1
 8022144:	601a      	str	r2, [r3, #0]
 8022146:	681a      	ldr	r2, [r3, #0]
 8022148:	2a00      	cmp	r2, #0
 802214a:	d1fc      	bne.n	8022146 <CRC_Lock+0x62>
 802214c:	4b18      	ldr	r3, [pc, #96]	@ (80221b0 <CRC_Lock+0xcc>)
 802214e:	6018      	str	r0, [r3, #0]
 8022150:	6818      	ldr	r0, [r3, #0]
 8022152:	1a43      	subs	r3, r0, r1
 8022154:	4258      	negs	r0, r3
 8022156:	4158      	adcs	r0, r3
 8022158:	e00e      	b.n	8022178 <CRC_Lock+0x94>
 802215a:	681b      	ldr	r3, [r3, #0]
 802215c:	4013      	ands	r3, r2
 802215e:	f24d 2220 	movw	r2, #53792	@ 0xd220
 8022162:	4293      	cmp	r3, r2
 8022164:	d111      	bne.n	802218a <CRC_Lock+0xa6>
 8022166:	4b13      	ldr	r3, [pc, #76]	@ (80221b4 <CRC_Lock+0xd0>)
 8022168:	681b      	ldr	r3, [r3, #0]
 802216a:	f240 4286 	movw	r2, #1158	@ 0x486
 802216e:	f3c3 030b 	ubfx	r3, r3, #0, #12
 8022172:	4293      	cmp	r3, r2
 8022174:	d001      	beq.n	802217a <CRC_Lock+0x96>
 8022176:	2000      	movs	r0, #0
 8022178:	bd30      	pop	{r4, r5, pc}
 802217a:	4b0f      	ldr	r3, [pc, #60]	@ (80221b8 <CRC_Lock+0xd4>)
 802217c:	2201      	movs	r2, #1
 802217e:	601a      	str	r2, [r3, #0]
 8022180:	681a      	ldr	r2, [r3, #0]
 8022182:	2a00      	cmp	r2, #0
 8022184:	d1fc      	bne.n	8022180 <CRC_Lock+0x9c>
 8022186:	4b0d      	ldr	r3, [pc, #52]	@ (80221bc <CRC_Lock+0xd8>)
 8022188:	e7e1      	b.n	802214e <CRC_Lock+0x6a>
 802218a:	4b0d      	ldr	r3, [pc, #52]	@ (80221c0 <CRC_Lock+0xdc>)
 802218c:	2201      	movs	r2, #1
 802218e:	601a      	str	r2, [r3, #0]
 8022190:	681a      	ldr	r2, [r3, #0]
 8022192:	2a00      	cmp	r2, #0
 8022194:	d1fc      	bne.n	8022190 <CRC_Lock+0xac>
 8022196:	4b0b      	ldr	r3, [pc, #44]	@ (80221c4 <CRC_Lock+0xe0>)
 8022198:	e7d9      	b.n	802214e <CRC_Lock+0x6a>
 802219a:	bf00      	nop
 802219c:	e0002000 	.word	0xe0002000
 80221a0:	e000ed00 	.word	0xe000ed00
 80221a4:	e0042000 	.word	0xe0042000
 80221a8:	5c001000 	.word	0x5c001000
 80221ac:	58024c08 	.word	0x58024c08
 80221b0:	58024c00 	.word	0x58024c00
 80221b4:	46008ff0 	.word	0x46008ff0
 80221b8:	46024c08 	.word	0x46024c08
 80221bc:	46024c00 	.word	0x46024c00
 80221c0:	40023008 	.word	0x40023008
 80221c4:	40023000 	.word	0x40023000

080221c8 <_ZN8touchgfx8Gestures21registerEventListenerERNS_15UIEventListenerE>:
 80221c8:	6101      	str	r1, [r0, #16]
 80221ca:	4770      	bx	lr

080221cc <_ZN8touchgfx8Gestures4tickEv>:
 80221cc:	7b83      	ldrb	r3, [r0, #14]
 80221ce:	b14b      	cbz	r3, 80221e4 <_ZN8touchgfx8Gestures4tickEv+0x18>
 80221d0:	8903      	ldrh	r3, [r0, #8]
 80221d2:	3301      	adds	r3, #1
 80221d4:	b29b      	uxth	r3, r3
 80221d6:	2b07      	cmp	r3, #7
 80221d8:	8103      	strh	r3, [r0, #8]
 80221da:	bf81      	itttt	hi
 80221dc:	2300      	movhi	r3, #0
 80221de:	8143      	strhhi	r3, [r0, #10]
 80221e0:	8183      	strhhi	r3, [r0, #12]
 80221e2:	7383      	strbhi	r3, [r0, #14]
 80221e4:	4770      	bx	lr
	...

080221e8 <_ZN8touchgfx8Gestures17registerDragEventEtttt>:
 80221e8:	e92d 41ff 	stmdb	sp!, {r0, r1, r2, r3, r4, r5, r6, r7, r8, lr}
 80221ec:	4698      	mov	r8, r3
 80221ee:	8883      	ldrh	r3, [r0, #4]
 80221f0:	f8ad 3006 	strh.w	r3, [sp, #6]
 80221f4:	eba8 0303 	sub.w	r3, r8, r3
 80221f8:	b21b      	sxth	r3, r3
 80221fa:	4604      	mov	r4, r0
 80221fc:	2b00      	cmp	r3, #0
 80221fe:	4617      	mov	r7, r2
 8022200:	4a18      	ldr	r2, [pc, #96]	@ (8022264 <_ZN8touchgfx8Gestures17registerDragEventEtttt+0x7c>)
 8022202:	9200      	str	r2, [sp, #0]
 8022204:	bfb8      	it	lt
 8022206:	425b      	neglt	r3, r3
 8022208:	8aa2      	ldrh	r2, [r4, #20]
 802220a:	f8bd 5028 	ldrh.w	r5, [sp, #40]	@ 0x28
 802220e:	f8ad 800a 	strh.w	r8, [sp, #10]
 8022212:	b21b      	sxth	r3, r3
 8022214:	460e      	mov	r6, r1
 8022216:	4293      	cmp	r3, r2
 8022218:	88c1      	ldrh	r1, [r0, #6]
 802221a:	f8ad 1008 	strh.w	r1, [sp, #8]
 802221e:	f04f 0000 	mov.w	r0, #0
 8022222:	f88d 0004 	strb.w	r0, [sp, #4]
 8022226:	f8ad 500c 	strh.w	r5, [sp, #12]
 802222a:	dc07      	bgt.n	802223c <_ZN8touchgfx8Gestures17registerDragEventEtttt+0x54>
 802222c:	1a69      	subs	r1, r5, r1
 802222e:	b209      	sxth	r1, r1
 8022230:	2900      	cmp	r1, #0
 8022232:	bfb8      	it	lt
 8022234:	4249      	neglt	r1, r1
 8022236:	b209      	sxth	r1, r1
 8022238:	428a      	cmp	r2, r1
 802223a:	da10      	bge.n	802225e <_ZN8touchgfx8Gestures17registerDragEventEtttt+0x76>
 802223c:	6920      	ldr	r0, [r4, #16]
 802223e:	6803      	ldr	r3, [r0, #0]
 8022240:	4669      	mov	r1, sp
 8022242:	685b      	ldr	r3, [r3, #4]
 8022244:	4798      	blx	r3
 8022246:	eba8 0606 	sub.w	r6, r8, r6
 802224a:	2300      	movs	r3, #0
 802224c:	1bef      	subs	r7, r5, r7
 802224e:	2001      	movs	r0, #1
 8022250:	8123      	strh	r3, [r4, #8]
 8022252:	8166      	strh	r6, [r4, #10]
 8022254:	81a7      	strh	r7, [r4, #12]
 8022256:	f8a4 8004 	strh.w	r8, [r4, #4]
 802225a:	80e5      	strh	r5, [r4, #6]
 802225c:	73a0      	strb	r0, [r4, #14]
 802225e:	b004      	add	sp, #16
 8022260:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
 8022264:	08025508 	.word	0x08025508

08022268 <_ZN8touchgfx8Gestures18registerClickEventENS_10ClickEvent14ClickEventTypeEtt>:
 8022268:	b5f0      	push	{r4, r5, r6, r7, lr}
 802226a:	461e      	mov	r6, r3
 802226c:	1e4b      	subs	r3, r1, #1
 802226e:	2b01      	cmp	r3, #1
 8022270:	b085      	sub	sp, #20
 8022272:	4604      	mov	r4, r0
 8022274:	460d      	mov	r5, r1
 8022276:	4617      	mov	r7, r2
 8022278:	d84b      	bhi.n	8022312 <_ZN8touchgfx8Gestures18registerClickEventENS_10ClickEvent14ClickEventTypeEtt+0xaa>
 802227a:	f9b0 200a 	ldrsh.w	r2, [r0, #10]
 802227e:	1cd3      	adds	r3, r2, #3
 8022280:	b29b      	uxth	r3, r3
 8022282:	2b06      	cmp	r3, #6
 8022284:	d916      	bls.n	80222b4 <_ZN8touchgfx8Gestures18registerClickEventENS_10ClickEvent14ClickEventTypeEtt+0x4c>
 8022286:	f8df c0a0 	ldr.w	ip, [pc, #160]	@ 8022328 <_ZN8touchgfx8Gestures18registerClickEventENS_10ClickEvent14ClickEventTypeEtt+0xc0>
 802228a:	f8cd c004 	str.w	ip, [sp, #4]
 802228e:	f9b4 1004 	ldrsh.w	r1, [r4, #4]
 8022292:	f9b4 3006 	ldrsh.w	r3, [r4, #6]
 8022296:	6900      	ldr	r0, [r0, #16]
 8022298:	f8ad 100c 	strh.w	r1, [sp, #12]
 802229c:	f04f 0c00 	mov.w	ip, #0
 80222a0:	f88d c008 	strb.w	ip, [sp, #8]
 80222a4:	f8ad 200a 	strh.w	r2, [sp, #10]
 80222a8:	f8ad 300e 	strh.w	r3, [sp, #14]
 80222ac:	6803      	ldr	r3, [r0, #0]
 80222ae:	a901      	add	r1, sp, #4
 80222b0:	689b      	ldr	r3, [r3, #8]
 80222b2:	4798      	blx	r3
 80222b4:	f9b4 200c 	ldrsh.w	r2, [r4, #12]
 80222b8:	1cd3      	adds	r3, r2, #3
 80222ba:	b29b      	uxth	r3, r3
 80222bc:	2b06      	cmp	r3, #6
 80222be:	d916      	bls.n	80222ee <_ZN8touchgfx8Gestures18registerClickEventENS_10ClickEvent14ClickEventTypeEtt+0x86>
 80222c0:	f8df c064 	ldr.w	ip, [pc, #100]	@ 8022328 <_ZN8touchgfx8Gestures18registerClickEventENS_10ClickEvent14ClickEventTypeEtt+0xc0>
 80222c4:	f8cd c004 	str.w	ip, [sp, #4]
 80222c8:	f9b4 1004 	ldrsh.w	r1, [r4, #4]
 80222cc:	f9b4 3006 	ldrsh.w	r3, [r4, #6]
 80222d0:	6920      	ldr	r0, [r4, #16]
 80222d2:	f8ad 100c 	strh.w	r1, [sp, #12]
 80222d6:	f04f 0c01 	mov.w	ip, #1
 80222da:	f88d c008 	strb.w	ip, [sp, #8]
 80222de:	f8ad 200a 	strh.w	r2, [sp, #10]
 80222e2:	f8ad 300e 	strh.w	r3, [sp, #14]
 80222e6:	6803      	ldr	r3, [r0, #0]
 80222e8:	a901      	add	r1, sp, #4
 80222ea:	689b      	ldr	r3, [r3, #8]
 80222ec:	4798      	blx	r3
 80222ee:	4b0d      	ldr	r3, [pc, #52]	@ (8022324 <_ZN8touchgfx8Gestures18registerClickEventENS_10ClickEvent14ClickEventTypeEtt+0xbc>)
 80222f0:	9301      	str	r3, [sp, #4]
 80222f2:	6920      	ldr	r0, [r4, #16]
 80222f4:	f88d 5008 	strb.w	r5, [sp, #8]
 80222f8:	2300      	movs	r3, #0
 80222fa:	f8ad 700a 	strh.w	r7, [sp, #10]
 80222fe:	f8ad 600c 	strh.w	r6, [sp, #12]
 8022302:	f8ad 300e 	strh.w	r3, [sp, #14]
 8022306:	6803      	ldr	r3, [r0, #0]
 8022308:	a901      	add	r1, sp, #4
 802230a:	681b      	ldr	r3, [r3, #0]
 802230c:	4798      	blx	r3
 802230e:	b005      	add	sp, #20
 8022310:	bdf0      	pop	{r4, r5, r6, r7, pc}
 8022312:	2900      	cmp	r1, #0
 8022314:	d1eb      	bne.n	80222ee <_ZN8touchgfx8Gestures18registerClickEventENS_10ClickEvent14ClickEventTypeEtt+0x86>
 8022316:	80a2      	strh	r2, [r4, #4]
 8022318:	80c6      	strh	r6, [r0, #6]
 802231a:	60a1      	str	r1, [r4, #8]
 802231c:	81a1      	strh	r1, [r4, #12]
 802231e:	73a1      	strb	r1, [r4, #14]
 8022320:	e7e5      	b.n	80222ee <_ZN8touchgfx8Gestures18registerClickEventENS_10ClickEvent14ClickEventTypeEtt+0x86>
 8022322:	bf00      	nop
 8022324:	080254f4 	.word	0x080254f4
 8022328:	0802551c 	.word	0x0802551c

0802232c <__aeabi_atexit>:
 802232c:	460b      	mov	r3, r1
 802232e:	4601      	mov	r1, r0
 8022330:	4618      	mov	r0, r3
 8022332:	f000 b98f 	b.w	8022654 <__cxa_atexit>

08022336 <_ZdlPvj>:
 8022336:	f000 b812 	b.w	802235e <_ZdlPv>

0802233a <__cxa_guard_acquire>:
 802233a:	6802      	ldr	r2, [r0, #0]
 802233c:	07d2      	lsls	r2, r2, #31
 802233e:	4603      	mov	r3, r0
 8022340:	d405      	bmi.n	802234e <__cxa_guard_acquire+0x14>
 8022342:	7842      	ldrb	r2, [r0, #1]
 8022344:	b102      	cbz	r2, 8022348 <__cxa_guard_acquire+0xe>
 8022346:	deff      	udf	#255	@ 0xff
 8022348:	2001      	movs	r0, #1
 802234a:	7058      	strb	r0, [r3, #1]
 802234c:	4770      	bx	lr
 802234e:	2000      	movs	r0, #0
 8022350:	4770      	bx	lr

08022352 <__cxa_guard_release>:
 8022352:	2301      	movs	r3, #1
 8022354:	6003      	str	r3, [r0, #0]
 8022356:	4770      	bx	lr

08022358 <__cxa_pure_virtual>:
 8022358:	b508      	push	{r3, lr}
 802235a:	f000 f80f 	bl	802237c <_ZSt9terminatev>

0802235e <_ZdlPv>:
 802235e:	f000 b8c3 	b.w	80224e8 <free>

08022362 <_ZN10__cxxabiv111__terminateEPFvvE>:
 8022362:	b508      	push	{r3, lr}
 8022364:	4780      	blx	r0
 8022366:	f000 f88b 	bl	8022480 <abort>
	...

0802236c <_ZSt13get_terminatev>:
 802236c:	4b02      	ldr	r3, [pc, #8]	@ (8022378 <_ZSt13get_terminatev+0xc>)
 802236e:	6818      	ldr	r0, [r3, #0]
 8022370:	f3bf 8f5b 	dmb	ish
 8022374:	4770      	bx	lr
 8022376:	bf00      	nop
 8022378:	200000a0 	.word	0x200000a0

0802237c <_ZSt9terminatev>:
 802237c:	b508      	push	{r3, lr}
 802237e:	f7ff fff5 	bl	802236c <_ZSt13get_terminatev>
 8022382:	f7ff ffee 	bl	8022362 <_ZN10__cxxabiv111__terminateEPFvvE>
	...

08022388 <floor>:
 8022388:	ec51 0b10 	vmov	r0, r1, d0
 802238c:	f3c1 530a 	ubfx	r3, r1, #20, #11
 8022390:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 8022394:	f2a3 36ff 	subw	r6, r3, #1023	@ 0x3ff
 8022398:	2e13      	cmp	r6, #19
 802239a:	460c      	mov	r4, r1
 802239c:	4605      	mov	r5, r0
 802239e:	4680      	mov	r8, r0
 80223a0:	dc34      	bgt.n	802240c <floor+0x84>
 80223a2:	2e00      	cmp	r6, #0
 80223a4:	da17      	bge.n	80223d6 <floor+0x4e>
 80223a6:	a332      	add	r3, pc, #200	@ (adr r3, 8022470 <floor+0xe8>)
 80223a8:	e9d3 2300 	ldrd	r2, r3, [r3]
 80223ac:	f7dd ff86 	bl	80002bc <__adddf3>
 80223b0:	2200      	movs	r2, #0
 80223b2:	2300      	movs	r3, #0
 80223b4:	f7de fbc8 	bl	8000b48 <__aeabi_dcmpgt>
 80223b8:	b150      	cbz	r0, 80223d0 <floor+0x48>
 80223ba:	2c00      	cmp	r4, #0
 80223bc:	da55      	bge.n	802246a <floor+0xe2>
 80223be:	f024 4400 	bic.w	r4, r4, #2147483648	@ 0x80000000
 80223c2:	432c      	orrs	r4, r5
 80223c4:	2500      	movs	r5, #0
 80223c6:	42ac      	cmp	r4, r5
 80223c8:	4c2b      	ldr	r4, [pc, #172]	@ (8022478 <floor+0xf0>)
 80223ca:	bf08      	it	eq
 80223cc:	f04f 4400 	moveq.w	r4, #2147483648	@ 0x80000000
 80223d0:	4621      	mov	r1, r4
 80223d2:	4628      	mov	r0, r5
 80223d4:	e023      	b.n	802241e <floor+0x96>
 80223d6:	4f29      	ldr	r7, [pc, #164]	@ (802247c <floor+0xf4>)
 80223d8:	4137      	asrs	r7, r6
 80223da:	ea01 0307 	and.w	r3, r1, r7
 80223de:	4303      	orrs	r3, r0
 80223e0:	d01d      	beq.n	802241e <floor+0x96>
 80223e2:	a323      	add	r3, pc, #140	@ (adr r3, 8022470 <floor+0xe8>)
 80223e4:	e9d3 2300 	ldrd	r2, r3, [r3]
 80223e8:	f7dd ff68 	bl	80002bc <__adddf3>
 80223ec:	2200      	movs	r2, #0
 80223ee:	2300      	movs	r3, #0
 80223f0:	f7de fbaa 	bl	8000b48 <__aeabi_dcmpgt>
 80223f4:	2800      	cmp	r0, #0
 80223f6:	d0eb      	beq.n	80223d0 <floor+0x48>
 80223f8:	2c00      	cmp	r4, #0
 80223fa:	bfbe      	ittt	lt
 80223fc:	f44f 1380 	movlt.w	r3, #1048576	@ 0x100000
 8022400:	4133      	asrlt	r3, r6
 8022402:	18e4      	addlt	r4, r4, r3
 8022404:	ea24 0407 	bic.w	r4, r4, r7
 8022408:	2500      	movs	r5, #0
 802240a:	e7e1      	b.n	80223d0 <floor+0x48>
 802240c:	2e33      	cmp	r6, #51	@ 0x33
 802240e:	dd0a      	ble.n	8022426 <floor+0x9e>
 8022410:	f5b6 6f80 	cmp.w	r6, #1024	@ 0x400
 8022414:	d103      	bne.n	802241e <floor+0x96>
 8022416:	4602      	mov	r2, r0
 8022418:	460b      	mov	r3, r1
 802241a:	f7dd ff4f 	bl	80002bc <__adddf3>
 802241e:	ec41 0b10 	vmov	d0, r0, r1
 8022422:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
 8022426:	f2a3 4313 	subw	r3, r3, #1043	@ 0x413
 802242a:	f04f 37ff 	mov.w	r7, #4294967295
 802242e:	40df      	lsrs	r7, r3
 8022430:	4207      	tst	r7, r0
 8022432:	d0f4      	beq.n	802241e <floor+0x96>
 8022434:	a30e      	add	r3, pc, #56	@ (adr r3, 8022470 <floor+0xe8>)
 8022436:	e9d3 2300 	ldrd	r2, r3, [r3]
 802243a:	f7dd ff3f 	bl	80002bc <__adddf3>
 802243e:	2200      	movs	r2, #0
 8022440:	2300      	movs	r3, #0
 8022442:	f7de fb81 	bl	8000b48 <__aeabi_dcmpgt>
 8022446:	2800      	cmp	r0, #0
 8022448:	d0c2      	beq.n	80223d0 <floor+0x48>
 802244a:	2c00      	cmp	r4, #0
 802244c:	da0a      	bge.n	8022464 <floor+0xdc>
 802244e:	2e14      	cmp	r6, #20
 8022450:	d101      	bne.n	8022456 <floor+0xce>
 8022452:	3401      	adds	r4, #1
 8022454:	e006      	b.n	8022464 <floor+0xdc>
 8022456:	f1c6 0634 	rsb	r6, r6, #52	@ 0x34
 802245a:	2301      	movs	r3, #1
 802245c:	40b3      	lsls	r3, r6
 802245e:	441d      	add	r5, r3
 8022460:	4545      	cmp	r5, r8
 8022462:	d3f6      	bcc.n	8022452 <floor+0xca>
 8022464:	ea25 0507 	bic.w	r5, r5, r7
 8022468:	e7b2      	b.n	80223d0 <floor+0x48>
 802246a:	2500      	movs	r5, #0
 802246c:	462c      	mov	r4, r5
 802246e:	e7af      	b.n	80223d0 <floor+0x48>
 8022470:	8800759c 	.word	0x8800759c
 8022474:	7e37e43c 	.word	0x7e37e43c
 8022478:	bff00000 	.word	0xbff00000
 802247c:	000fffff 	.word	0x000fffff

08022480 <abort>:
 8022480:	b508      	push	{r3, lr}
 8022482:	2006      	movs	r0, #6
 8022484:	f000 fa3c 	bl	8022900 <raise>
 8022488:	2001      	movs	r0, #1
 802248a:	f7df fc89 	bl	8001da0 <_exit>
	...

08022490 <__assert_func>:
 8022490:	b51f      	push	{r0, r1, r2, r3, r4, lr}
 8022492:	4614      	mov	r4, r2
 8022494:	461a      	mov	r2, r3
 8022496:	4b09      	ldr	r3, [pc, #36]	@ (80224bc <__assert_func+0x2c>)
 8022498:	681b      	ldr	r3, [r3, #0]
 802249a:	4605      	mov	r5, r0
 802249c:	68d8      	ldr	r0, [r3, #12]
 802249e:	b954      	cbnz	r4, 80224b6 <__assert_func+0x26>
 80224a0:	4b07      	ldr	r3, [pc, #28]	@ (80224c0 <__assert_func+0x30>)
 80224a2:	461c      	mov	r4, r3
 80224a4:	e9cd 3401 	strd	r3, r4, [sp, #4]
 80224a8:	9100      	str	r1, [sp, #0]
 80224aa:	462b      	mov	r3, r5
 80224ac:	4905      	ldr	r1, [pc, #20]	@ (80224c4 <__assert_func+0x34>)
 80224ae:	f000 f983 	bl	80227b8 <fiprintf>
 80224b2:	f7ff ffe5 	bl	8022480 <abort>
 80224b6:	4b04      	ldr	r3, [pc, #16]	@ (80224c8 <__assert_func+0x38>)
 80224b8:	e7f4      	b.n	80224a4 <__assert_func+0x14>
 80224ba:	bf00      	nop
 80224bc:	200000b0 	.word	0x200000b0
 80224c0:	0802588b 	.word	0x0802588b
 80224c4:	0802585d 	.word	0x0802585d
 80224c8:	08025850 	.word	0x08025850

080224cc <atexit>:
 80224cc:	2300      	movs	r3, #0
 80224ce:	4601      	mov	r1, r0
 80224d0:	461a      	mov	r2, r3
 80224d2:	4618      	mov	r0, r3
 80224d4:	f000 bac2 	b.w	8022a5c <__register_exitproc>

080224d8 <malloc>:
 80224d8:	4b02      	ldr	r3, [pc, #8]	@ (80224e4 <malloc+0xc>)
 80224da:	4601      	mov	r1, r0
 80224dc:	6818      	ldr	r0, [r3, #0]
 80224de:	f000 b82d 	b.w	802253c <_malloc_r>
 80224e2:	bf00      	nop
 80224e4:	200000b0 	.word	0x200000b0

080224e8 <free>:
 80224e8:	4b02      	ldr	r3, [pc, #8]	@ (80224f4 <free+0xc>)
 80224ea:	4601      	mov	r1, r0
 80224ec:	6818      	ldr	r0, [r3, #0]
 80224ee:	f000 bb11 	b.w	8022b14 <_free_r>
 80224f2:	bf00      	nop
 80224f4:	200000b0 	.word	0x200000b0

080224f8 <sbrk_aligned>:
 80224f8:	b570      	push	{r4, r5, r6, lr}
 80224fa:	4e0f      	ldr	r6, [pc, #60]	@ (8022538 <sbrk_aligned+0x40>)
 80224fc:	460c      	mov	r4, r1
 80224fe:	6831      	ldr	r1, [r6, #0]
 8022500:	4605      	mov	r5, r0
 8022502:	b911      	cbnz	r1, 802250a <sbrk_aligned+0x12>
 8022504:	f000 fa4c 	bl	80229a0 <_sbrk_r>
 8022508:	6030      	str	r0, [r6, #0]
 802250a:	4621      	mov	r1, r4
 802250c:	4628      	mov	r0, r5
 802250e:	f000 fa47 	bl	80229a0 <_sbrk_r>
 8022512:	1c43      	adds	r3, r0, #1
 8022514:	d103      	bne.n	802251e <sbrk_aligned+0x26>
 8022516:	f04f 34ff 	mov.w	r4, #4294967295
 802251a:	4620      	mov	r0, r4
 802251c:	bd70      	pop	{r4, r5, r6, pc}
 802251e:	1cc4      	adds	r4, r0, #3
 8022520:	f024 0403 	bic.w	r4, r4, #3
 8022524:	42a0      	cmp	r0, r4
 8022526:	d0f8      	beq.n	802251a <sbrk_aligned+0x22>
 8022528:	1a21      	subs	r1, r4, r0
 802252a:	4628      	mov	r0, r5
 802252c:	f000 fa38 	bl	80229a0 <_sbrk_r>
 8022530:	3001      	adds	r0, #1
 8022532:	d1f2      	bne.n	802251a <sbrk_aligned+0x22>
 8022534:	e7ef      	b.n	8022516 <sbrk_aligned+0x1e>
 8022536:	bf00      	nop
 8022538:	20003810 	.word	0x20003810

0802253c <_malloc_r>:
 802253c:	e92d 43f8 	stmdb	sp!, {r3, r4, r5, r6, r7, r8, r9, lr}
 8022540:	1ccd      	adds	r5, r1, #3
 8022542:	f025 0503 	bic.w	r5, r5, #3
 8022546:	3508      	adds	r5, #8
 8022548:	2d0c      	cmp	r5, #12
 802254a:	bf38      	it	cc
 802254c:	250c      	movcc	r5, #12
 802254e:	2d00      	cmp	r5, #0
 8022550:	4606      	mov	r6, r0
 8022552:	db01      	blt.n	8022558 <_malloc_r+0x1c>
 8022554:	42a9      	cmp	r1, r5
 8022556:	d904      	bls.n	8022562 <_malloc_r+0x26>
 8022558:	230c      	movs	r3, #12
 802255a:	6033      	str	r3, [r6, #0]
 802255c:	2000      	movs	r0, #0
 802255e:	e8bd 83f8 	ldmia.w	sp!, {r3, r4, r5, r6, r7, r8, r9, pc}
 8022562:	f8df 80d4 	ldr.w	r8, [pc, #212]	@ 8022638 <_malloc_r+0xfc>
 8022566:	f000 f869 	bl	802263c <__malloc_lock>
 802256a:	f8d8 3000 	ldr.w	r3, [r8]
 802256e:	461c      	mov	r4, r3
 8022570:	bb44      	cbnz	r4, 80225c4 <_malloc_r+0x88>
 8022572:	4629      	mov	r1, r5
 8022574:	4630      	mov	r0, r6
 8022576:	f7ff ffbf 	bl	80224f8 <sbrk_aligned>
 802257a:	1c43      	adds	r3, r0, #1
 802257c:	4604      	mov	r4, r0
 802257e:	d158      	bne.n	8022632 <_malloc_r+0xf6>
 8022580:	f8d8 4000 	ldr.w	r4, [r8]
 8022584:	4627      	mov	r7, r4
 8022586:	2f00      	cmp	r7, #0
 8022588:	d143      	bne.n	8022612 <_malloc_r+0xd6>
 802258a:	2c00      	cmp	r4, #0
 802258c:	d04b      	beq.n	8022626 <_malloc_r+0xea>
 802258e:	6823      	ldr	r3, [r4, #0]
 8022590:	4639      	mov	r1, r7
 8022592:	4630      	mov	r0, r6
 8022594:	eb04 0903 	add.w	r9, r4, r3
 8022598:	f000 fa02 	bl	80229a0 <_sbrk_r>
 802259c:	4581      	cmp	r9, r0
 802259e:	d142      	bne.n	8022626 <_malloc_r+0xea>
 80225a0:	6821      	ldr	r1, [r4, #0]
 80225a2:	1a6d      	subs	r5, r5, r1
 80225a4:	4629      	mov	r1, r5
 80225a6:	4630      	mov	r0, r6
 80225a8:	f7ff ffa6 	bl	80224f8 <sbrk_aligned>
 80225ac:	3001      	adds	r0, #1
 80225ae:	d03a      	beq.n	8022626 <_malloc_r+0xea>
 80225b0:	6823      	ldr	r3, [r4, #0]
 80225b2:	442b      	add	r3, r5
 80225b4:	6023      	str	r3, [r4, #0]
 80225b6:	f8d8 3000 	ldr.w	r3, [r8]
 80225ba:	685a      	ldr	r2, [r3, #4]
 80225bc:	bb62      	cbnz	r2, 8022618 <_malloc_r+0xdc>
 80225be:	f8c8 7000 	str.w	r7, [r8]
 80225c2:	e00f      	b.n	80225e4 <_malloc_r+0xa8>
 80225c4:	6822      	ldr	r2, [r4, #0]
 80225c6:	1b52      	subs	r2, r2, r5
 80225c8:	d420      	bmi.n	802260c <_malloc_r+0xd0>
 80225ca:	2a0b      	cmp	r2, #11
 80225cc:	d917      	bls.n	80225fe <_malloc_r+0xc2>
 80225ce:	1961      	adds	r1, r4, r5
 80225d0:	42a3      	cmp	r3, r4
 80225d2:	6025      	str	r5, [r4, #0]
 80225d4:	bf18      	it	ne
 80225d6:	6059      	strne	r1, [r3, #4]
 80225d8:	6863      	ldr	r3, [r4, #4]
 80225da:	bf08      	it	eq
 80225dc:	f8c8 1000 	streq.w	r1, [r8]
 80225e0:	5162      	str	r2, [r4, r5]
 80225e2:	604b      	str	r3, [r1, #4]
 80225e4:	4630      	mov	r0, r6
 80225e6:	f000 f82f 	bl	8022648 <__malloc_unlock>
 80225ea:	f104 000b 	add.w	r0, r4, #11
 80225ee:	1d23      	adds	r3, r4, #4
 80225f0:	f020 0007 	bic.w	r0, r0, #7
 80225f4:	1ac2      	subs	r2, r0, r3
 80225f6:	bf1c      	itt	ne
 80225f8:	1a1b      	subne	r3, r3, r0
 80225fa:	50a3      	strne	r3, [r4, r2]
 80225fc:	e7af      	b.n	802255e <_malloc_r+0x22>
 80225fe:	6862      	ldr	r2, [r4, #4]
 8022600:	42a3      	cmp	r3, r4
 8022602:	bf0c      	ite	eq
 8022604:	f8c8 2000 	streq.w	r2, [r8]
 8022608:	605a      	strne	r2, [r3, #4]
 802260a:	e7eb      	b.n	80225e4 <_malloc_r+0xa8>
 802260c:	4623      	mov	r3, r4
 802260e:	6864      	ldr	r4, [r4, #4]
 8022610:	e7ae      	b.n	8022570 <_malloc_r+0x34>
 8022612:	463c      	mov	r4, r7
 8022614:	687f      	ldr	r7, [r7, #4]
 8022616:	e7b6      	b.n	8022586 <_malloc_r+0x4a>
 8022618:	461a      	mov	r2, r3
 802261a:	685b      	ldr	r3, [r3, #4]
 802261c:	42a3      	cmp	r3, r4
 802261e:	d1fb      	bne.n	8022618 <_malloc_r+0xdc>
 8022620:	2300      	movs	r3, #0
 8022622:	6053      	str	r3, [r2, #4]
 8022624:	e7de      	b.n	80225e4 <_malloc_r+0xa8>
 8022626:	230c      	movs	r3, #12
 8022628:	6033      	str	r3, [r6, #0]
 802262a:	4630      	mov	r0, r6
 802262c:	f000 f80c 	bl	8022648 <__malloc_unlock>
 8022630:	e794      	b.n	802255c <_malloc_r+0x20>
 8022632:	6005      	str	r5, [r0, #0]
 8022634:	e7d6      	b.n	80225e4 <_malloc_r+0xa8>
 8022636:	bf00      	nop
 8022638:	20003814 	.word	0x20003814

0802263c <__malloc_lock>:
 802263c:	4801      	ldr	r0, [pc, #4]	@ (8022644 <__malloc_lock+0x8>)
 802263e:	f000 b9fc 	b.w	8022a3a <__retarget_lock_acquire_recursive>
 8022642:	bf00      	nop
 8022644:	20003958 	.word	0x20003958

08022648 <__malloc_unlock>:
 8022648:	4801      	ldr	r0, [pc, #4]	@ (8022650 <__malloc_unlock+0x8>)
 802264a:	f000 b9f7 	b.w	8022a3c <__retarget_lock_release_recursive>
 802264e:	bf00      	nop
 8022650:	20003958 	.word	0x20003958

08022654 <__cxa_atexit>:
 8022654:	b510      	push	{r4, lr}
 8022656:	4604      	mov	r4, r0
 8022658:	4804      	ldr	r0, [pc, #16]	@ (802266c <__cxa_atexit+0x18>)
 802265a:	4613      	mov	r3, r2
 802265c:	b120      	cbz	r0, 8022668 <__cxa_atexit+0x14>
 802265e:	460a      	mov	r2, r1
 8022660:	2002      	movs	r0, #2
 8022662:	4621      	mov	r1, r4
 8022664:	f000 f9fa 	bl	8022a5c <__register_exitproc>
 8022668:	bd10      	pop	{r4, pc}
 802266a:	bf00      	nop
 802266c:	08022a5d 	.word	0x08022a5d

08022670 <std>:
 8022670:	2300      	movs	r3, #0
 8022672:	b510      	push	{r4, lr}
 8022674:	4604      	mov	r4, r0
 8022676:	e9c0 3300 	strd	r3, r3, [r0]
 802267a:	e9c0 3304 	strd	r3, r3, [r0, #16]
 802267e:	6083      	str	r3, [r0, #8]
 8022680:	8181      	strh	r1, [r0, #12]
 8022682:	6643      	str	r3, [r0, #100]	@ 0x64
 8022684:	81c2      	strh	r2, [r0, #14]
 8022686:	6183      	str	r3, [r0, #24]
 8022688:	4619      	mov	r1, r3
 802268a:	2208      	movs	r2, #8
 802268c:	305c      	adds	r0, #92	@ 0x5c
 802268e:	f000 f906 	bl	802289e <memset>
 8022692:	4b0d      	ldr	r3, [pc, #52]	@ (80226c8 <std+0x58>)
 8022694:	6263      	str	r3, [r4, #36]	@ 0x24
 8022696:	4b0d      	ldr	r3, [pc, #52]	@ (80226cc <std+0x5c>)
 8022698:	62a3      	str	r3, [r4, #40]	@ 0x28
 802269a:	4b0d      	ldr	r3, [pc, #52]	@ (80226d0 <std+0x60>)
 802269c:	62e3      	str	r3, [r4, #44]	@ 0x2c
 802269e:	4b0d      	ldr	r3, [pc, #52]	@ (80226d4 <std+0x64>)
 80226a0:	6323      	str	r3, [r4, #48]	@ 0x30
 80226a2:	4b0d      	ldr	r3, [pc, #52]	@ (80226d8 <std+0x68>)
 80226a4:	6224      	str	r4, [r4, #32]
 80226a6:	429c      	cmp	r4, r3
 80226a8:	d006      	beq.n	80226b8 <std+0x48>
 80226aa:	f103 0268 	add.w	r2, r3, #104	@ 0x68
 80226ae:	4294      	cmp	r4, r2
 80226b0:	d002      	beq.n	80226b8 <std+0x48>
 80226b2:	33d0      	adds	r3, #208	@ 0xd0
 80226b4:	429c      	cmp	r4, r3
 80226b6:	d105      	bne.n	80226c4 <std+0x54>
 80226b8:	f104 0058 	add.w	r0, r4, #88	@ 0x58
 80226bc:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
 80226c0:	f000 b9ba 	b.w	8022a38 <__retarget_lock_init_recursive>
 80226c4:	bd10      	pop	{r4, pc}
 80226c6:	bf00      	nop
 80226c8:	08022819 	.word	0x08022819
 80226cc:	0802283b 	.word	0x0802283b
 80226d0:	08022873 	.word	0x08022873
 80226d4:	08022897 	.word	0x08022897
 80226d8:	20003818 	.word	0x20003818

080226dc <stdio_exit_handler>:
 80226dc:	4a02      	ldr	r2, [pc, #8]	@ (80226e8 <stdio_exit_handler+0xc>)
 80226de:	4903      	ldr	r1, [pc, #12]	@ (80226ec <stdio_exit_handler+0x10>)
 80226e0:	4803      	ldr	r0, [pc, #12]	@ (80226f0 <stdio_exit_handler+0x14>)
 80226e2:	f000 b87b 	b.w	80227dc <_fwalk_sglue>
 80226e6:	bf00      	nop
 80226e8:	200000a4 	.word	0x200000a4
 80226ec:	08023251 	.word	0x08023251
 80226f0:	200000b4 	.word	0x200000b4

080226f4 <cleanup_stdio>:
 80226f4:	6841      	ldr	r1, [r0, #4]
 80226f6:	4b0c      	ldr	r3, [pc, #48]	@ (8022728 <cleanup_stdio+0x34>)
 80226f8:	4299      	cmp	r1, r3
 80226fa:	b510      	push	{r4, lr}
 80226fc:	4604      	mov	r4, r0
 80226fe:	d001      	beq.n	8022704 <cleanup_stdio+0x10>
 8022700:	f000 fda6 	bl	8023250 <_fflush_r>
 8022704:	68a1      	ldr	r1, [r4, #8]
 8022706:	4b09      	ldr	r3, [pc, #36]	@ (802272c <cleanup_stdio+0x38>)
 8022708:	4299      	cmp	r1, r3
 802270a:	d002      	beq.n	8022712 <cleanup_stdio+0x1e>
 802270c:	4620      	mov	r0, r4
 802270e:	f000 fd9f 	bl	8023250 <_fflush_r>
 8022712:	68e1      	ldr	r1, [r4, #12]
 8022714:	4b06      	ldr	r3, [pc, #24]	@ (8022730 <cleanup_stdio+0x3c>)
 8022716:	4299      	cmp	r1, r3
 8022718:	d004      	beq.n	8022724 <cleanup_stdio+0x30>
 802271a:	4620      	mov	r0, r4
 802271c:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
 8022720:	f000 bd96 	b.w	8023250 <_fflush_r>
 8022724:	bd10      	pop	{r4, pc}
 8022726:	bf00      	nop
 8022728:	20003818 	.word	0x20003818
 802272c:	20003880 	.word	0x20003880
 8022730:	200038e8 	.word	0x200038e8

08022734 <global_stdio_init.part.0>:
 8022734:	b510      	push	{r4, lr}
 8022736:	4b0b      	ldr	r3, [pc, #44]	@ (8022764 <global_stdio_init.part.0+0x30>)
 8022738:	4c0b      	ldr	r4, [pc, #44]	@ (8022768 <global_stdio_init.part.0+0x34>)
 802273a:	4a0c      	ldr	r2, [pc, #48]	@ (802276c <global_stdio_init.part.0+0x38>)
 802273c:	601a      	str	r2, [r3, #0]
 802273e:	4620      	mov	r0, r4
 8022740:	2200      	movs	r2, #0
 8022742:	2104      	movs	r1, #4
 8022744:	f7ff ff94 	bl	8022670 <std>
 8022748:	f104 0068 	add.w	r0, r4, #104	@ 0x68
 802274c:	2201      	movs	r2, #1
 802274e:	2109      	movs	r1, #9
 8022750:	f7ff ff8e 	bl	8022670 <std>
 8022754:	f104 00d0 	add.w	r0, r4, #208	@ 0xd0
 8022758:	2202      	movs	r2, #2
 802275a:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
 802275e:	2112      	movs	r1, #18
 8022760:	f7ff bf86 	b.w	8022670 <std>
 8022764:	20003950 	.word	0x20003950
 8022768:	20003818 	.word	0x20003818
 802276c:	080226dd 	.word	0x080226dd

08022770 <__sfp_lock_acquire>:
 8022770:	4801      	ldr	r0, [pc, #4]	@ (8022778 <__sfp_lock_acquire+0x8>)
 8022772:	f000 b962 	b.w	8022a3a <__retarget_lock_acquire_recursive>
 8022776:	bf00      	nop
 8022778:	2000395a 	.word	0x2000395a

0802277c <__sfp_lock_release>:
 802277c:	4801      	ldr	r0, [pc, #4]	@ (8022784 <__sfp_lock_release+0x8>)
 802277e:	f000 b95d 	b.w	8022a3c <__retarget_lock_release_recursive>
 8022782:	bf00      	nop
 8022784:	2000395a 	.word	0x2000395a

08022788 <__sinit>:
 8022788:	b510      	push	{r4, lr}
 802278a:	4604      	mov	r4, r0
 802278c:	f7ff fff0 	bl	8022770 <__sfp_lock_acquire>
 8022790:	6a23      	ldr	r3, [r4, #32]
 8022792:	b11b      	cbz	r3, 802279c <__sinit+0x14>
 8022794:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
 8022798:	f7ff bff0 	b.w	802277c <__sfp_lock_release>
 802279c:	4b04      	ldr	r3, [pc, #16]	@ (80227b0 <__sinit+0x28>)
 802279e:	6223      	str	r3, [r4, #32]
 80227a0:	4b04      	ldr	r3, [pc, #16]	@ (80227b4 <__sinit+0x2c>)
 80227a2:	681b      	ldr	r3, [r3, #0]
 80227a4:	2b00      	cmp	r3, #0
 80227a6:	d1f5      	bne.n	8022794 <__sinit+0xc>
 80227a8:	f7ff ffc4 	bl	8022734 <global_stdio_init.part.0>
 80227ac:	e7f2      	b.n	8022794 <__sinit+0xc>
 80227ae:	bf00      	nop
 80227b0:	080226f5 	.word	0x080226f5
 80227b4:	20003950 	.word	0x20003950

080227b8 <fiprintf>:
 80227b8:	b40e      	push	{r1, r2, r3}
 80227ba:	b503      	push	{r0, r1, lr}
 80227bc:	4601      	mov	r1, r0
 80227be:	ab03      	add	r3, sp, #12
 80227c0:	4805      	ldr	r0, [pc, #20]	@ (80227d8 <fiprintf+0x20>)
 80227c2:	f853 2b04 	ldr.w	r2, [r3], #4
 80227c6:	6800      	ldr	r0, [r0, #0]
 80227c8:	9301      	str	r3, [sp, #4]
 80227ca:	f000 fa17 	bl	8022bfc <_vfiprintf_r>
 80227ce:	b002      	add	sp, #8
 80227d0:	f85d eb04 	ldr.w	lr, [sp], #4
 80227d4:	b003      	add	sp, #12
 80227d6:	4770      	bx	lr
 80227d8:	200000b0 	.word	0x200000b0

080227dc <_fwalk_sglue>:
 80227dc:	e92d 43f8 	stmdb	sp!, {r3, r4, r5, r6, r7, r8, r9, lr}
 80227e0:	4607      	mov	r7, r0
 80227e2:	4688      	mov	r8, r1
 80227e4:	4614      	mov	r4, r2
 80227e6:	2600      	movs	r6, #0
 80227e8:	e9d4 9501 	ldrd	r9, r5, [r4, #4]
 80227ec:	f1b9 0901 	subs.w	r9, r9, #1
 80227f0:	d505      	bpl.n	80227fe <_fwalk_sglue+0x22>
 80227f2:	6824      	ldr	r4, [r4, #0]
 80227f4:	2c00      	cmp	r4, #0
 80227f6:	d1f7      	bne.n	80227e8 <_fwalk_sglue+0xc>
 80227f8:	4630      	mov	r0, r6
 80227fa:	e8bd 83f8 	ldmia.w	sp!, {r3, r4, r5, r6, r7, r8, r9, pc}
 80227fe:	89ab      	ldrh	r3, [r5, #12]
 8022800:	2b01      	cmp	r3, #1
 8022802:	d907      	bls.n	8022814 <_fwalk_sglue+0x38>
 8022804:	f9b5 300e 	ldrsh.w	r3, [r5, #14]
 8022808:	3301      	adds	r3, #1
 802280a:	d003      	beq.n	8022814 <_fwalk_sglue+0x38>
 802280c:	4629      	mov	r1, r5
 802280e:	4638      	mov	r0, r7
 8022810:	47c0      	blx	r8
 8022812:	4306      	orrs	r6, r0
 8022814:	3568      	adds	r5, #104	@ 0x68
 8022816:	e7e9      	b.n	80227ec <_fwalk_sglue+0x10>

08022818 <__sread>:
 8022818:	b510      	push	{r4, lr}
 802281a:	460c      	mov	r4, r1
 802281c:	f9b1 100e 	ldrsh.w	r1, [r1, #14]
 8022820:	f000 f898 	bl	8022954 <_read_r>
 8022824:	2800      	cmp	r0, #0
 8022826:	bfab      	itete	ge
 8022828:	6d63      	ldrge	r3, [r4, #84]	@ 0x54
 802282a:	89a3      	ldrhlt	r3, [r4, #12]
 802282c:	181b      	addge	r3, r3, r0
 802282e:	f423 5380 	biclt.w	r3, r3, #4096	@ 0x1000
 8022832:	bfac      	ite	ge
 8022834:	6563      	strge	r3, [r4, #84]	@ 0x54
 8022836:	81a3      	strhlt	r3, [r4, #12]
 8022838:	bd10      	pop	{r4, pc}

0802283a <__swrite>:
 802283a:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 802283e:	461f      	mov	r7, r3
 8022840:	898b      	ldrh	r3, [r1, #12]
 8022842:	05db      	lsls	r3, r3, #23
 8022844:	4605      	mov	r5, r0
 8022846:	460c      	mov	r4, r1
 8022848:	4616      	mov	r6, r2
 802284a:	d505      	bpl.n	8022858 <__swrite+0x1e>
 802284c:	f9b1 100e 	ldrsh.w	r1, [r1, #14]
 8022850:	2302      	movs	r3, #2
 8022852:	2200      	movs	r2, #0
 8022854:	f000 f86c 	bl	8022930 <_lseek_r>
 8022858:	89a3      	ldrh	r3, [r4, #12]
 802285a:	f9b4 100e 	ldrsh.w	r1, [r4, #14]
 802285e:	f423 5380 	bic.w	r3, r3, #4096	@ 0x1000
 8022862:	81a3      	strh	r3, [r4, #12]
 8022864:	4632      	mov	r2, r6
 8022866:	463b      	mov	r3, r7
 8022868:	4628      	mov	r0, r5
 802286a:	e8bd 41f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, lr}
 802286e:	f000 b8a7 	b.w	80229c0 <_write_r>

08022872 <__sseek>:
 8022872:	b510      	push	{r4, lr}
 8022874:	460c      	mov	r4, r1
 8022876:	f9b1 100e 	ldrsh.w	r1, [r1, #14]
 802287a:	f000 f859 	bl	8022930 <_lseek_r>
 802287e:	1c43      	adds	r3, r0, #1
 8022880:	89a3      	ldrh	r3, [r4, #12]
 8022882:	bf15      	itete	ne
 8022884:	6560      	strne	r0, [r4, #84]	@ 0x54
 8022886:	f423 5380 	biceq.w	r3, r3, #4096	@ 0x1000
 802288a:	f443 5380 	orrne.w	r3, r3, #4096	@ 0x1000
 802288e:	81a3      	strheq	r3, [r4, #12]
 8022890:	bf18      	it	ne
 8022892:	81a3      	strhne	r3, [r4, #12]
 8022894:	bd10      	pop	{r4, pc}

08022896 <__sclose>:
 8022896:	f9b1 100e 	ldrsh.w	r1, [r1, #14]
 802289a:	f000 b839 	b.w	8022910 <_close_r>

0802289e <memset>:
 802289e:	4402      	add	r2, r0
 80228a0:	4603      	mov	r3, r0
 80228a2:	4293      	cmp	r3, r2
 80228a4:	d100      	bne.n	80228a8 <memset+0xa>
 80228a6:	4770      	bx	lr
 80228a8:	f803 1b01 	strb.w	r1, [r3], #1
 80228ac:	e7f9      	b.n	80228a2 <memset+0x4>

080228ae <_raise_r>:
 80228ae:	291f      	cmp	r1, #31
 80228b0:	b538      	push	{r3, r4, r5, lr}
 80228b2:	4605      	mov	r5, r0
 80228b4:	460c      	mov	r4, r1
 80228b6:	d904      	bls.n	80228c2 <_raise_r+0x14>
 80228b8:	2316      	movs	r3, #22
 80228ba:	6003      	str	r3, [r0, #0]
 80228bc:	f04f 30ff 	mov.w	r0, #4294967295
 80228c0:	bd38      	pop	{r3, r4, r5, pc}
 80228c2:	6bc2      	ldr	r2, [r0, #60]	@ 0x3c
 80228c4:	b112      	cbz	r2, 80228cc <_raise_r+0x1e>
 80228c6:	f852 3021 	ldr.w	r3, [r2, r1, lsl #2]
 80228ca:	b94b      	cbnz	r3, 80228e0 <_raise_r+0x32>
 80228cc:	4628      	mov	r0, r5
 80228ce:	f000 f865 	bl	802299c <_getpid_r>
 80228d2:	4622      	mov	r2, r4
 80228d4:	4601      	mov	r1, r0
 80228d6:	4628      	mov	r0, r5
 80228d8:	e8bd 4038 	ldmia.w	sp!, {r3, r4, r5, lr}
 80228dc:	f000 b84c 	b.w	8022978 <_kill_r>
 80228e0:	2b01      	cmp	r3, #1
 80228e2:	d00a      	beq.n	80228fa <_raise_r+0x4c>
 80228e4:	1c59      	adds	r1, r3, #1
 80228e6:	d103      	bne.n	80228f0 <_raise_r+0x42>
 80228e8:	2316      	movs	r3, #22
 80228ea:	6003      	str	r3, [r0, #0]
 80228ec:	2001      	movs	r0, #1
 80228ee:	e7e7      	b.n	80228c0 <_raise_r+0x12>
 80228f0:	2100      	movs	r1, #0
 80228f2:	f842 1024 	str.w	r1, [r2, r4, lsl #2]
 80228f6:	4620      	mov	r0, r4
 80228f8:	4798      	blx	r3
 80228fa:	2000      	movs	r0, #0
 80228fc:	e7e0      	b.n	80228c0 <_raise_r+0x12>
	...

08022900 <raise>:
 8022900:	4b02      	ldr	r3, [pc, #8]	@ (802290c <raise+0xc>)
 8022902:	4601      	mov	r1, r0
 8022904:	6818      	ldr	r0, [r3, #0]
 8022906:	f7ff bfd2 	b.w	80228ae <_raise_r>
 802290a:	bf00      	nop
 802290c:	200000b0 	.word	0x200000b0

08022910 <_close_r>:
 8022910:	b538      	push	{r3, r4, r5, lr}
 8022912:	4d06      	ldr	r5, [pc, #24]	@ (802292c <_close_r+0x1c>)
 8022914:	2300      	movs	r3, #0
 8022916:	4604      	mov	r4, r0
 8022918:	4608      	mov	r0, r1
 802291a:	602b      	str	r3, [r5, #0]
 802291c:	f7df fa84 	bl	8001e28 <_close>
 8022920:	1c43      	adds	r3, r0, #1
 8022922:	d102      	bne.n	802292a <_close_r+0x1a>
 8022924:	682b      	ldr	r3, [r5, #0]
 8022926:	b103      	cbz	r3, 802292a <_close_r+0x1a>
 8022928:	6023      	str	r3, [r4, #0]
 802292a:	bd38      	pop	{r3, r4, r5, pc}
 802292c:	20003954 	.word	0x20003954

08022930 <_lseek_r>:
 8022930:	b538      	push	{r3, r4, r5, lr}
 8022932:	4d07      	ldr	r5, [pc, #28]	@ (8022950 <_lseek_r+0x20>)
 8022934:	4604      	mov	r4, r0
 8022936:	4608      	mov	r0, r1
 8022938:	4611      	mov	r1, r2
 802293a:	2200      	movs	r2, #0
 802293c:	602a      	str	r2, [r5, #0]
 802293e:	461a      	mov	r2, r3
 8022940:	f7df fa99 	bl	8001e76 <_lseek>
 8022944:	1c43      	adds	r3, r0, #1
 8022946:	d102      	bne.n	802294e <_lseek_r+0x1e>
 8022948:	682b      	ldr	r3, [r5, #0]
 802294a:	b103      	cbz	r3, 802294e <_lseek_r+0x1e>
 802294c:	6023      	str	r3, [r4, #0]
 802294e:	bd38      	pop	{r3, r4, r5, pc}
 8022950:	20003954 	.word	0x20003954

08022954 <_read_r>:
 8022954:	b538      	push	{r3, r4, r5, lr}
 8022956:	4d07      	ldr	r5, [pc, #28]	@ (8022974 <_read_r+0x20>)
 8022958:	4604      	mov	r4, r0
 802295a:	4608      	mov	r0, r1
 802295c:	4611      	mov	r1, r2
 802295e:	2200      	movs	r2, #0
 8022960:	602a      	str	r2, [r5, #0]
 8022962:	461a      	mov	r2, r3
 8022964:	f7df fa27 	bl	8001db6 <_read>
 8022968:	1c43      	adds	r3, r0, #1
 802296a:	d102      	bne.n	8022972 <_read_r+0x1e>
 802296c:	682b      	ldr	r3, [r5, #0]
 802296e:	b103      	cbz	r3, 8022972 <_read_r+0x1e>
 8022970:	6023      	str	r3, [r4, #0]
 8022972:	bd38      	pop	{r3, r4, r5, pc}
 8022974:	20003954 	.word	0x20003954

08022978 <_kill_r>:
 8022978:	b538      	push	{r3, r4, r5, lr}
 802297a:	4d07      	ldr	r5, [pc, #28]	@ (8022998 <_kill_r+0x20>)
 802297c:	2300      	movs	r3, #0
 802297e:	4604      	mov	r4, r0
 8022980:	4608      	mov	r0, r1
 8022982:	4611      	mov	r1, r2
 8022984:	602b      	str	r3, [r5, #0]
 8022986:	f7df f9fb 	bl	8001d80 <_kill>
 802298a:	1c43      	adds	r3, r0, #1
 802298c:	d102      	bne.n	8022994 <_kill_r+0x1c>
 802298e:	682b      	ldr	r3, [r5, #0]
 8022990:	b103      	cbz	r3, 8022994 <_kill_r+0x1c>
 8022992:	6023      	str	r3, [r4, #0]
 8022994:	bd38      	pop	{r3, r4, r5, pc}
 8022996:	bf00      	nop
 8022998:	20003954 	.word	0x20003954

0802299c <_getpid_r>:
 802299c:	f7df b9e8 	b.w	8001d70 <_getpid>

080229a0 <_sbrk_r>:
 80229a0:	b538      	push	{r3, r4, r5, lr}
 80229a2:	4d06      	ldr	r5, [pc, #24]	@ (80229bc <_sbrk_r+0x1c>)
 80229a4:	2300      	movs	r3, #0
 80229a6:	4604      	mov	r4, r0
 80229a8:	4608      	mov	r0, r1
 80229aa:	602b      	str	r3, [r5, #0]
 80229ac:	f7df fa70 	bl	8001e90 <_sbrk>
 80229b0:	1c43      	adds	r3, r0, #1
 80229b2:	d102      	bne.n	80229ba <_sbrk_r+0x1a>
 80229b4:	682b      	ldr	r3, [r5, #0]
 80229b6:	b103      	cbz	r3, 80229ba <_sbrk_r+0x1a>
 80229b8:	6023      	str	r3, [r4, #0]
 80229ba:	bd38      	pop	{r3, r4, r5, pc}
 80229bc:	20003954 	.word	0x20003954

080229c0 <_write_r>:
 80229c0:	b538      	push	{r3, r4, r5, lr}
 80229c2:	4d07      	ldr	r5, [pc, #28]	@ (80229e0 <_write_r+0x20>)
 80229c4:	4604      	mov	r4, r0
 80229c6:	4608      	mov	r0, r1
 80229c8:	4611      	mov	r1, r2
 80229ca:	2200      	movs	r2, #0
 80229cc:	602a      	str	r2, [r5, #0]
 80229ce:	461a      	mov	r2, r3
 80229d0:	f7df fa0e 	bl	8001df0 <_write>
 80229d4:	1c43      	adds	r3, r0, #1
 80229d6:	d102      	bne.n	80229de <_write_r+0x1e>
 80229d8:	682b      	ldr	r3, [r5, #0]
 80229da:	b103      	cbz	r3, 80229de <_write_r+0x1e>
 80229dc:	6023      	str	r3, [r4, #0]
 80229de:	bd38      	pop	{r3, r4, r5, pc}
 80229e0:	20003954 	.word	0x20003954

080229e4 <__errno>:
 80229e4:	4b01      	ldr	r3, [pc, #4]	@ (80229ec <__errno+0x8>)
 80229e6:	6818      	ldr	r0, [r3, #0]
 80229e8:	4770      	bx	lr
 80229ea:	bf00      	nop
 80229ec:	200000b0 	.word	0x200000b0

080229f0 <__libc_init_array>:
 80229f0:	b570      	push	{r4, r5, r6, lr}
 80229f2:	4d0d      	ldr	r5, [pc, #52]	@ (8022a28 <__libc_init_array+0x38>)
 80229f4:	4c0d      	ldr	r4, [pc, #52]	@ (8022a2c <__libc_init_array+0x3c>)
 80229f6:	1b64      	subs	r4, r4, r5
 80229f8:	10a4      	asrs	r4, r4, #2
 80229fa:	2600      	movs	r6, #0
 80229fc:	42a6      	cmp	r6, r4
 80229fe:	d109      	bne.n	8022a14 <__libc_init_array+0x24>
 8022a00:	4d0b      	ldr	r5, [pc, #44]	@ (8022a30 <__libc_init_array+0x40>)
 8022a02:	4c0c      	ldr	r4, [pc, #48]	@ (8022a34 <__libc_init_array+0x44>)
 8022a04:	f000 fd64 	bl	80234d0 <_init>
 8022a08:	1b64      	subs	r4, r4, r5
 8022a0a:	10a4      	asrs	r4, r4, #2
 8022a0c:	2600      	movs	r6, #0
 8022a0e:	42a6      	cmp	r6, r4
 8022a10:	d105      	bne.n	8022a1e <__libc_init_array+0x2e>
 8022a12:	bd70      	pop	{r4, r5, r6, pc}
 8022a14:	f855 3b04 	ldr.w	r3, [r5], #4
 8022a18:	4798      	blx	r3
 8022a1a:	3601      	adds	r6, #1
 8022a1c:	e7ee      	b.n	80229fc <__libc_init_array+0xc>
 8022a1e:	f855 3b04 	ldr.w	r3, [r5], #4
 8022a22:	4798      	blx	r3
 8022a24:	3601      	adds	r6, #1
 8022a26:	e7f2      	b.n	8022a0e <__libc_init_array+0x1e>
 8022a28:	0806ee7c 	.word	0x0806ee7c
 8022a2c:	0806ee7c 	.word	0x0806ee7c
 8022a30:	0806ee7c 	.word	0x0806ee7c
 8022a34:	0806ee94 	.word	0x0806ee94

08022a38 <__retarget_lock_init_recursive>:
 8022a38:	4770      	bx	lr

08022a3a <__retarget_lock_acquire_recursive>:
 8022a3a:	4770      	bx	lr

08022a3c <__retarget_lock_release_recursive>:
 8022a3c:	4770      	bx	lr

08022a3e <memcpy>:
 8022a3e:	440a      	add	r2, r1
 8022a40:	4291      	cmp	r1, r2
 8022a42:	f100 33ff 	add.w	r3, r0, #4294967295
 8022a46:	d100      	bne.n	8022a4a <memcpy+0xc>
 8022a48:	4770      	bx	lr
 8022a4a:	b510      	push	{r4, lr}
 8022a4c:	f811 4b01 	ldrb.w	r4, [r1], #1
 8022a50:	f803 4f01 	strb.w	r4, [r3, #1]!
 8022a54:	4291      	cmp	r1, r2
 8022a56:	d1f9      	bne.n	8022a4c <memcpy+0xe>
 8022a58:	bd10      	pop	{r4, pc}
	...

08022a5c <__register_exitproc>:
 8022a5c:	e92d 43f8 	stmdb	sp!, {r3, r4, r5, r6, r7, r8, r9, lr}
 8022a60:	4d27      	ldr	r5, [pc, #156]	@ (8022b00 <__register_exitproc+0xa4>)
 8022a62:	4607      	mov	r7, r0
 8022a64:	6828      	ldr	r0, [r5, #0]
 8022a66:	4691      	mov	r9, r2
 8022a68:	460e      	mov	r6, r1
 8022a6a:	4698      	mov	r8, r3
 8022a6c:	f7ff ffe5 	bl	8022a3a <__retarget_lock_acquire_recursive>
 8022a70:	4a24      	ldr	r2, [pc, #144]	@ (8022b04 <__register_exitproc+0xa8>)
 8022a72:	6814      	ldr	r4, [r2, #0]
 8022a74:	b93c      	cbnz	r4, 8022a86 <__register_exitproc+0x2a>
 8022a76:	4b24      	ldr	r3, [pc, #144]	@ (8022b08 <__register_exitproc+0xac>)
 8022a78:	6013      	str	r3, [r2, #0]
 8022a7a:	4a24      	ldr	r2, [pc, #144]	@ (8022b0c <__register_exitproc+0xb0>)
 8022a7c:	b112      	cbz	r2, 8022a84 <__register_exitproc+0x28>
 8022a7e:	6812      	ldr	r2, [r2, #0]
 8022a80:	f8c3 2088 	str.w	r2, [r3, #136]	@ 0x88
 8022a84:	4c20      	ldr	r4, [pc, #128]	@ (8022b08 <__register_exitproc+0xac>)
 8022a86:	6863      	ldr	r3, [r4, #4]
 8022a88:	2b1f      	cmp	r3, #31
 8022a8a:	dd06      	ble.n	8022a9a <__register_exitproc+0x3e>
 8022a8c:	6828      	ldr	r0, [r5, #0]
 8022a8e:	f7ff ffd5 	bl	8022a3c <__retarget_lock_release_recursive>
 8022a92:	f04f 30ff 	mov.w	r0, #4294967295
 8022a96:	e8bd 83f8 	ldmia.w	sp!, {r3, r4, r5, r6, r7, r8, r9, pc}
 8022a9a:	b32f      	cbz	r7, 8022ae8 <__register_exitproc+0x8c>
 8022a9c:	f8d4 0088 	ldr.w	r0, [r4, #136]	@ 0x88
 8022aa0:	b968      	cbnz	r0, 8022abe <__register_exitproc+0x62>
 8022aa2:	4b1b      	ldr	r3, [pc, #108]	@ (8022b10 <__register_exitproc+0xb4>)
 8022aa4:	2b00      	cmp	r3, #0
 8022aa6:	d0f1      	beq.n	8022a8c <__register_exitproc+0x30>
 8022aa8:	f44f 7084 	mov.w	r0, #264	@ 0x108
 8022aac:	f7ff fd14 	bl	80224d8 <malloc>
 8022ab0:	2800      	cmp	r0, #0
 8022ab2:	d0eb      	beq.n	8022a8c <__register_exitproc+0x30>
 8022ab4:	2300      	movs	r3, #0
 8022ab6:	e9c0 3340 	strd	r3, r3, [r0, #256]	@ 0x100
 8022aba:	f8c4 0088 	str.w	r0, [r4, #136]	@ 0x88
 8022abe:	6863      	ldr	r3, [r4, #4]
 8022ac0:	f840 9023 	str.w	r9, [r0, r3, lsl #2]
 8022ac4:	2201      	movs	r2, #1
 8022ac6:	409a      	lsls	r2, r3
 8022ac8:	eb00 0183 	add.w	r1, r0, r3, lsl #2
 8022acc:	f8d0 3100 	ldr.w	r3, [r0, #256]	@ 0x100
 8022ad0:	4313      	orrs	r3, r2
 8022ad2:	f8c0 3100 	str.w	r3, [r0, #256]	@ 0x100
 8022ad6:	2f02      	cmp	r7, #2
 8022ad8:	f8c1 8080 	str.w	r8, [r1, #128]	@ 0x80
 8022adc:	bf02      	ittt	eq
 8022ade:	f8d0 3104 	ldreq.w	r3, [r0, #260]	@ 0x104
 8022ae2:	4313      	orreq	r3, r2
 8022ae4:	f8c0 3104 	streq.w	r3, [r0, #260]	@ 0x104
 8022ae8:	6863      	ldr	r3, [r4, #4]
 8022aea:	6828      	ldr	r0, [r5, #0]
 8022aec:	1c5a      	adds	r2, r3, #1
 8022aee:	3302      	adds	r3, #2
 8022af0:	6062      	str	r2, [r4, #4]
 8022af2:	f844 6023 	str.w	r6, [r4, r3, lsl #2]
 8022af6:	f7ff ffa1 	bl	8022a3c <__retarget_lock_release_recursive>
 8022afa:	2000      	movs	r0, #0
 8022afc:	e7cb      	b.n	8022a96 <__register_exitproc+0x3a>
 8022afe:	bf00      	nop
 8022b00:	20000100 	.word	0x20000100
 8022b04:	200039e8 	.word	0x200039e8
 8022b08:	2000395c 	.word	0x2000395c
 8022b0c:	0802588c 	.word	0x0802588c
 8022b10:	080224d9 	.word	0x080224d9

08022b14 <_free_r>:
 8022b14:	b538      	push	{r3, r4, r5, lr}
 8022b16:	4605      	mov	r5, r0
 8022b18:	2900      	cmp	r1, #0
 8022b1a:	d041      	beq.n	8022ba0 <_free_r+0x8c>
 8022b1c:	f851 3c04 	ldr.w	r3, [r1, #-4]
 8022b20:	1f0c      	subs	r4, r1, #4
 8022b22:	2b00      	cmp	r3, #0
 8022b24:	bfb8      	it	lt
 8022b26:	18e4      	addlt	r4, r4, r3
 8022b28:	f7ff fd88 	bl	802263c <__malloc_lock>
 8022b2c:	4a1d      	ldr	r2, [pc, #116]	@ (8022ba4 <_free_r+0x90>)
 8022b2e:	6813      	ldr	r3, [r2, #0]
 8022b30:	b933      	cbnz	r3, 8022b40 <_free_r+0x2c>
 8022b32:	6063      	str	r3, [r4, #4]
 8022b34:	6014      	str	r4, [r2, #0]
 8022b36:	4628      	mov	r0, r5
 8022b38:	e8bd 4038 	ldmia.w	sp!, {r3, r4, r5, lr}
 8022b3c:	f7ff bd84 	b.w	8022648 <__malloc_unlock>
 8022b40:	42a3      	cmp	r3, r4
 8022b42:	d908      	bls.n	8022b56 <_free_r+0x42>
 8022b44:	6820      	ldr	r0, [r4, #0]
 8022b46:	1821      	adds	r1, r4, r0
 8022b48:	428b      	cmp	r3, r1
 8022b4a:	bf01      	itttt	eq
 8022b4c:	6819      	ldreq	r1, [r3, #0]
 8022b4e:	685b      	ldreq	r3, [r3, #4]
 8022b50:	1809      	addeq	r1, r1, r0
 8022b52:	6021      	streq	r1, [r4, #0]
 8022b54:	e7ed      	b.n	8022b32 <_free_r+0x1e>
 8022b56:	461a      	mov	r2, r3
 8022b58:	685b      	ldr	r3, [r3, #4]
 8022b5a:	b10b      	cbz	r3, 8022b60 <_free_r+0x4c>
 8022b5c:	42a3      	cmp	r3, r4
 8022b5e:	d9fa      	bls.n	8022b56 <_free_r+0x42>
 8022b60:	6811      	ldr	r1, [r2, #0]
 8022b62:	1850      	adds	r0, r2, r1
 8022b64:	42a0      	cmp	r0, r4
 8022b66:	d10b      	bne.n	8022b80 <_free_r+0x6c>
 8022b68:	6820      	ldr	r0, [r4, #0]
 8022b6a:	4401      	add	r1, r0
 8022b6c:	1850      	adds	r0, r2, r1
 8022b6e:	4283      	cmp	r3, r0
 8022b70:	6011      	str	r1, [r2, #0]
 8022b72:	d1e0      	bne.n	8022b36 <_free_r+0x22>
 8022b74:	6818      	ldr	r0, [r3, #0]
 8022b76:	685b      	ldr	r3, [r3, #4]
 8022b78:	6053      	str	r3, [r2, #4]
 8022b7a:	4408      	add	r0, r1
 8022b7c:	6010      	str	r0, [r2, #0]
 8022b7e:	e7da      	b.n	8022b36 <_free_r+0x22>
 8022b80:	d902      	bls.n	8022b88 <_free_r+0x74>
 8022b82:	230c      	movs	r3, #12
 8022b84:	602b      	str	r3, [r5, #0]
 8022b86:	e7d6      	b.n	8022b36 <_free_r+0x22>
 8022b88:	6820      	ldr	r0, [r4, #0]
 8022b8a:	1821      	adds	r1, r4, r0
 8022b8c:	428b      	cmp	r3, r1
 8022b8e:	bf04      	itt	eq
 8022b90:	6819      	ldreq	r1, [r3, #0]
 8022b92:	685b      	ldreq	r3, [r3, #4]
 8022b94:	6063      	str	r3, [r4, #4]
 8022b96:	bf04      	itt	eq
 8022b98:	1809      	addeq	r1, r1, r0
 8022b9a:	6021      	streq	r1, [r4, #0]
 8022b9c:	6054      	str	r4, [r2, #4]
 8022b9e:	e7ca      	b.n	8022b36 <_free_r+0x22>
 8022ba0:	bd38      	pop	{r3, r4, r5, pc}
 8022ba2:	bf00      	nop
 8022ba4:	20003814 	.word	0x20003814

08022ba8 <__sfputc_r>:
 8022ba8:	6893      	ldr	r3, [r2, #8]
 8022baa:	3b01      	subs	r3, #1
 8022bac:	2b00      	cmp	r3, #0
 8022bae:	b410      	push	{r4}
 8022bb0:	6093      	str	r3, [r2, #8]
 8022bb2:	da08      	bge.n	8022bc6 <__sfputc_r+0x1e>
 8022bb4:	6994      	ldr	r4, [r2, #24]
 8022bb6:	42a3      	cmp	r3, r4
 8022bb8:	db01      	blt.n	8022bbe <__sfputc_r+0x16>
 8022bba:	290a      	cmp	r1, #10
 8022bbc:	d103      	bne.n	8022bc6 <__sfputc_r+0x1e>
 8022bbe:	f85d 4b04 	ldr.w	r4, [sp], #4
 8022bc2:	f000 bb6d 	b.w	80232a0 <__swbuf_r>
 8022bc6:	6813      	ldr	r3, [r2, #0]
 8022bc8:	1c58      	adds	r0, r3, #1
 8022bca:	6010      	str	r0, [r2, #0]
 8022bcc:	7019      	strb	r1, [r3, #0]
 8022bce:	4608      	mov	r0, r1
 8022bd0:	f85d 4b04 	ldr.w	r4, [sp], #4
 8022bd4:	4770      	bx	lr

08022bd6 <__sfputs_r>:
 8022bd6:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 8022bd8:	4606      	mov	r6, r0
 8022bda:	460f      	mov	r7, r1
 8022bdc:	4614      	mov	r4, r2
 8022bde:	18d5      	adds	r5, r2, r3
 8022be0:	42ac      	cmp	r4, r5
 8022be2:	d101      	bne.n	8022be8 <__sfputs_r+0x12>
 8022be4:	2000      	movs	r0, #0
 8022be6:	e007      	b.n	8022bf8 <__sfputs_r+0x22>
 8022be8:	f814 1b01 	ldrb.w	r1, [r4], #1
 8022bec:	463a      	mov	r2, r7
 8022bee:	4630      	mov	r0, r6
 8022bf0:	f7ff ffda 	bl	8022ba8 <__sfputc_r>
 8022bf4:	1c43      	adds	r3, r0, #1
 8022bf6:	d1f3      	bne.n	8022be0 <__sfputs_r+0xa>
 8022bf8:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
	...

08022bfc <_vfiprintf_r>:
 8022bfc:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8022c00:	460d      	mov	r5, r1
 8022c02:	b09d      	sub	sp, #116	@ 0x74
 8022c04:	4614      	mov	r4, r2
 8022c06:	4698      	mov	r8, r3
 8022c08:	4606      	mov	r6, r0
 8022c0a:	b118      	cbz	r0, 8022c14 <_vfiprintf_r+0x18>
 8022c0c:	6a03      	ldr	r3, [r0, #32]
 8022c0e:	b90b      	cbnz	r3, 8022c14 <_vfiprintf_r+0x18>
 8022c10:	f7ff fdba 	bl	8022788 <__sinit>
 8022c14:	6e6b      	ldr	r3, [r5, #100]	@ 0x64
 8022c16:	07d9      	lsls	r1, r3, #31
 8022c18:	d405      	bmi.n	8022c26 <_vfiprintf_r+0x2a>
 8022c1a:	89ab      	ldrh	r3, [r5, #12]
 8022c1c:	059a      	lsls	r2, r3, #22
 8022c1e:	d402      	bmi.n	8022c26 <_vfiprintf_r+0x2a>
 8022c20:	6da8      	ldr	r0, [r5, #88]	@ 0x58
 8022c22:	f7ff ff0a 	bl	8022a3a <__retarget_lock_acquire_recursive>
 8022c26:	89ab      	ldrh	r3, [r5, #12]
 8022c28:	071b      	lsls	r3, r3, #28
 8022c2a:	d501      	bpl.n	8022c30 <_vfiprintf_r+0x34>
 8022c2c:	692b      	ldr	r3, [r5, #16]
 8022c2e:	b99b      	cbnz	r3, 8022c58 <_vfiprintf_r+0x5c>
 8022c30:	4629      	mov	r1, r5
 8022c32:	4630      	mov	r0, r6
 8022c34:	f000 fb72 	bl	802331c <__swsetup_r>
 8022c38:	b170      	cbz	r0, 8022c58 <_vfiprintf_r+0x5c>
 8022c3a:	6e6b      	ldr	r3, [r5, #100]	@ 0x64
 8022c3c:	07dc      	lsls	r4, r3, #31
 8022c3e:	d504      	bpl.n	8022c4a <_vfiprintf_r+0x4e>
 8022c40:	f04f 30ff 	mov.w	r0, #4294967295
 8022c44:	b01d      	add	sp, #116	@ 0x74
 8022c46:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 8022c4a:	89ab      	ldrh	r3, [r5, #12]
 8022c4c:	0598      	lsls	r0, r3, #22
 8022c4e:	d4f7      	bmi.n	8022c40 <_vfiprintf_r+0x44>
 8022c50:	6da8      	ldr	r0, [r5, #88]	@ 0x58
 8022c52:	f7ff fef3 	bl	8022a3c <__retarget_lock_release_recursive>
 8022c56:	e7f3      	b.n	8022c40 <_vfiprintf_r+0x44>
 8022c58:	2300      	movs	r3, #0
 8022c5a:	9309      	str	r3, [sp, #36]	@ 0x24
 8022c5c:	2320      	movs	r3, #32
 8022c5e:	f88d 3029 	strb.w	r3, [sp, #41]	@ 0x29
 8022c62:	f8cd 800c 	str.w	r8, [sp, #12]
 8022c66:	2330      	movs	r3, #48	@ 0x30
 8022c68:	f8df 81ac 	ldr.w	r8, [pc, #428]	@ 8022e18 <_vfiprintf_r+0x21c>
 8022c6c:	f88d 302a 	strb.w	r3, [sp, #42]	@ 0x2a
 8022c70:	f04f 0901 	mov.w	r9, #1
 8022c74:	4623      	mov	r3, r4
 8022c76:	469a      	mov	sl, r3
 8022c78:	f813 2b01 	ldrb.w	r2, [r3], #1
 8022c7c:	b10a      	cbz	r2, 8022c82 <_vfiprintf_r+0x86>
 8022c7e:	2a25      	cmp	r2, #37	@ 0x25
 8022c80:	d1f9      	bne.n	8022c76 <_vfiprintf_r+0x7a>
 8022c82:	ebba 0b04 	subs.w	fp, sl, r4
 8022c86:	d00b      	beq.n	8022ca0 <_vfiprintf_r+0xa4>
 8022c88:	465b      	mov	r3, fp
 8022c8a:	4622      	mov	r2, r4
 8022c8c:	4629      	mov	r1, r5
 8022c8e:	4630      	mov	r0, r6
 8022c90:	f7ff ffa1 	bl	8022bd6 <__sfputs_r>
 8022c94:	3001      	adds	r0, #1
 8022c96:	f000 80a7 	beq.w	8022de8 <_vfiprintf_r+0x1ec>
 8022c9a:	9a09      	ldr	r2, [sp, #36]	@ 0x24
 8022c9c:	445a      	add	r2, fp
 8022c9e:	9209      	str	r2, [sp, #36]	@ 0x24
 8022ca0:	f89a 3000 	ldrb.w	r3, [sl]
 8022ca4:	2b00      	cmp	r3, #0
 8022ca6:	f000 809f 	beq.w	8022de8 <_vfiprintf_r+0x1ec>
 8022caa:	2300      	movs	r3, #0
 8022cac:	f04f 32ff 	mov.w	r2, #4294967295
 8022cb0:	e9cd 2305 	strd	r2, r3, [sp, #20]
 8022cb4:	f10a 0a01 	add.w	sl, sl, #1
 8022cb8:	9304      	str	r3, [sp, #16]
 8022cba:	9307      	str	r3, [sp, #28]
 8022cbc:	f88d 3053 	strb.w	r3, [sp, #83]	@ 0x53
 8022cc0:	931a      	str	r3, [sp, #104]	@ 0x68
 8022cc2:	4654      	mov	r4, sl
 8022cc4:	2205      	movs	r2, #5
 8022cc6:	f814 1b01 	ldrb.w	r1, [r4], #1
 8022cca:	4853      	ldr	r0, [pc, #332]	@ (8022e18 <_vfiprintf_r+0x21c>)
 8022ccc:	f7dd faa0 	bl	8000210 <memchr>
 8022cd0:	9a04      	ldr	r2, [sp, #16]
 8022cd2:	b9d8      	cbnz	r0, 8022d0c <_vfiprintf_r+0x110>
 8022cd4:	06d1      	lsls	r1, r2, #27
 8022cd6:	bf44      	itt	mi
 8022cd8:	2320      	movmi	r3, #32
 8022cda:	f88d 3053 	strbmi.w	r3, [sp, #83]	@ 0x53
 8022cde:	0713      	lsls	r3, r2, #28
 8022ce0:	bf44      	itt	mi
 8022ce2:	232b      	movmi	r3, #43	@ 0x2b
 8022ce4:	f88d 3053 	strbmi.w	r3, [sp, #83]	@ 0x53
 8022ce8:	f89a 3000 	ldrb.w	r3, [sl]
 8022cec:	2b2a      	cmp	r3, #42	@ 0x2a
 8022cee:	d015      	beq.n	8022d1c <_vfiprintf_r+0x120>
 8022cf0:	9a07      	ldr	r2, [sp, #28]
 8022cf2:	4654      	mov	r4, sl
 8022cf4:	2000      	movs	r0, #0
 8022cf6:	f04f 0c0a 	mov.w	ip, #10
 8022cfa:	4621      	mov	r1, r4
 8022cfc:	f811 3b01 	ldrb.w	r3, [r1], #1
 8022d00:	3b30      	subs	r3, #48	@ 0x30
 8022d02:	2b09      	cmp	r3, #9
 8022d04:	d94b      	bls.n	8022d9e <_vfiprintf_r+0x1a2>
 8022d06:	b1b0      	cbz	r0, 8022d36 <_vfiprintf_r+0x13a>
 8022d08:	9207      	str	r2, [sp, #28]
 8022d0a:	e014      	b.n	8022d36 <_vfiprintf_r+0x13a>
 8022d0c:	eba0 0308 	sub.w	r3, r0, r8
 8022d10:	fa09 f303 	lsl.w	r3, r9, r3
 8022d14:	4313      	orrs	r3, r2
 8022d16:	9304      	str	r3, [sp, #16]
 8022d18:	46a2      	mov	sl, r4
 8022d1a:	e7d2      	b.n	8022cc2 <_vfiprintf_r+0xc6>
 8022d1c:	9b03      	ldr	r3, [sp, #12]
 8022d1e:	1d19      	adds	r1, r3, #4
 8022d20:	681b      	ldr	r3, [r3, #0]
 8022d22:	9103      	str	r1, [sp, #12]
 8022d24:	2b00      	cmp	r3, #0
 8022d26:	bfbb      	ittet	lt
 8022d28:	425b      	neglt	r3, r3
 8022d2a:	f042 0202 	orrlt.w	r2, r2, #2
 8022d2e:	9307      	strge	r3, [sp, #28]
 8022d30:	9307      	strlt	r3, [sp, #28]
 8022d32:	bfb8      	it	lt
 8022d34:	9204      	strlt	r2, [sp, #16]
 8022d36:	7823      	ldrb	r3, [r4, #0]
 8022d38:	2b2e      	cmp	r3, #46	@ 0x2e
 8022d3a:	d10a      	bne.n	8022d52 <_vfiprintf_r+0x156>
 8022d3c:	7863      	ldrb	r3, [r4, #1]
 8022d3e:	2b2a      	cmp	r3, #42	@ 0x2a
 8022d40:	d132      	bne.n	8022da8 <_vfiprintf_r+0x1ac>
 8022d42:	9b03      	ldr	r3, [sp, #12]
 8022d44:	1d1a      	adds	r2, r3, #4
 8022d46:	681b      	ldr	r3, [r3, #0]
 8022d48:	9203      	str	r2, [sp, #12]
 8022d4a:	ea43 73e3 	orr.w	r3, r3, r3, asr #31
 8022d4e:	3402      	adds	r4, #2
 8022d50:	9305      	str	r3, [sp, #20]
 8022d52:	f8df a0d4 	ldr.w	sl, [pc, #212]	@ 8022e28 <_vfiprintf_r+0x22c>
 8022d56:	7821      	ldrb	r1, [r4, #0]
 8022d58:	2203      	movs	r2, #3
 8022d5a:	4650      	mov	r0, sl
 8022d5c:	f7dd fa58 	bl	8000210 <memchr>
 8022d60:	b138      	cbz	r0, 8022d72 <_vfiprintf_r+0x176>
 8022d62:	9b04      	ldr	r3, [sp, #16]
 8022d64:	eba0 000a 	sub.w	r0, r0, sl
 8022d68:	2240      	movs	r2, #64	@ 0x40
 8022d6a:	4082      	lsls	r2, r0
 8022d6c:	4313      	orrs	r3, r2
 8022d6e:	3401      	adds	r4, #1
 8022d70:	9304      	str	r3, [sp, #16]
 8022d72:	f814 1b01 	ldrb.w	r1, [r4], #1
 8022d76:	4829      	ldr	r0, [pc, #164]	@ (8022e1c <_vfiprintf_r+0x220>)
 8022d78:	f88d 1028 	strb.w	r1, [sp, #40]	@ 0x28
 8022d7c:	2206      	movs	r2, #6
 8022d7e:	f7dd fa47 	bl	8000210 <memchr>
 8022d82:	2800      	cmp	r0, #0
 8022d84:	d03f      	beq.n	8022e06 <_vfiprintf_r+0x20a>
 8022d86:	4b26      	ldr	r3, [pc, #152]	@ (8022e20 <_vfiprintf_r+0x224>)
 8022d88:	bb1b      	cbnz	r3, 8022dd2 <_vfiprintf_r+0x1d6>
 8022d8a:	9b03      	ldr	r3, [sp, #12]
 8022d8c:	3307      	adds	r3, #7
 8022d8e:	f023 0307 	bic.w	r3, r3, #7
 8022d92:	3308      	adds	r3, #8
 8022d94:	9303      	str	r3, [sp, #12]
 8022d96:	9b09      	ldr	r3, [sp, #36]	@ 0x24
 8022d98:	443b      	add	r3, r7
 8022d9a:	9309      	str	r3, [sp, #36]	@ 0x24
 8022d9c:	e76a      	b.n	8022c74 <_vfiprintf_r+0x78>
 8022d9e:	fb0c 3202 	mla	r2, ip, r2, r3
 8022da2:	460c      	mov	r4, r1
 8022da4:	2001      	movs	r0, #1
 8022da6:	e7a8      	b.n	8022cfa <_vfiprintf_r+0xfe>
 8022da8:	2300      	movs	r3, #0
 8022daa:	3401      	adds	r4, #1
 8022dac:	9305      	str	r3, [sp, #20]
 8022dae:	4619      	mov	r1, r3
 8022db0:	f04f 0c0a 	mov.w	ip, #10
 8022db4:	4620      	mov	r0, r4
 8022db6:	f810 2b01 	ldrb.w	r2, [r0], #1
 8022dba:	3a30      	subs	r2, #48	@ 0x30
 8022dbc:	2a09      	cmp	r2, #9
 8022dbe:	d903      	bls.n	8022dc8 <_vfiprintf_r+0x1cc>
 8022dc0:	2b00      	cmp	r3, #0
 8022dc2:	d0c6      	beq.n	8022d52 <_vfiprintf_r+0x156>
 8022dc4:	9105      	str	r1, [sp, #20]
 8022dc6:	e7c4      	b.n	8022d52 <_vfiprintf_r+0x156>
 8022dc8:	fb0c 2101 	mla	r1, ip, r1, r2
 8022dcc:	4604      	mov	r4, r0
 8022dce:	2301      	movs	r3, #1
 8022dd0:	e7f0      	b.n	8022db4 <_vfiprintf_r+0x1b8>
 8022dd2:	ab03      	add	r3, sp, #12
 8022dd4:	9300      	str	r3, [sp, #0]
 8022dd6:	462a      	mov	r2, r5
 8022dd8:	4b12      	ldr	r3, [pc, #72]	@ (8022e24 <_vfiprintf_r+0x228>)
 8022dda:	a904      	add	r1, sp, #16
 8022ddc:	4630      	mov	r0, r6
 8022dde:	f3af 8000 	nop.w
 8022de2:	4607      	mov	r7, r0
 8022de4:	1c78      	adds	r0, r7, #1
 8022de6:	d1d6      	bne.n	8022d96 <_vfiprintf_r+0x19a>
 8022de8:	6e6b      	ldr	r3, [r5, #100]	@ 0x64
 8022dea:	07d9      	lsls	r1, r3, #31
 8022dec:	d405      	bmi.n	8022dfa <_vfiprintf_r+0x1fe>
 8022dee:	89ab      	ldrh	r3, [r5, #12]
 8022df0:	059a      	lsls	r2, r3, #22
 8022df2:	d402      	bmi.n	8022dfa <_vfiprintf_r+0x1fe>
 8022df4:	6da8      	ldr	r0, [r5, #88]	@ 0x58
 8022df6:	f7ff fe21 	bl	8022a3c <__retarget_lock_release_recursive>
 8022dfa:	89ab      	ldrh	r3, [r5, #12]
 8022dfc:	065b      	lsls	r3, r3, #25
 8022dfe:	f53f af1f 	bmi.w	8022c40 <_vfiprintf_r+0x44>
 8022e02:	9809      	ldr	r0, [sp, #36]	@ 0x24
 8022e04:	e71e      	b.n	8022c44 <_vfiprintf_r+0x48>
 8022e06:	ab03      	add	r3, sp, #12
 8022e08:	9300      	str	r3, [sp, #0]
 8022e0a:	462a      	mov	r2, r5
 8022e0c:	4b05      	ldr	r3, [pc, #20]	@ (8022e24 <_vfiprintf_r+0x228>)
 8022e0e:	a904      	add	r1, sp, #16
 8022e10:	4630      	mov	r0, r6
 8022e12:	f000 f879 	bl	8022f08 <_printf_i>
 8022e16:	e7e4      	b.n	8022de2 <_vfiprintf_r+0x1e6>
 8022e18:	08025890 	.word	0x08025890
 8022e1c:	0802589a 	.word	0x0802589a
 8022e20:	00000000 	.word	0x00000000
 8022e24:	08022bd7 	.word	0x08022bd7
 8022e28:	08025896 	.word	0x08025896

08022e2c <_printf_common>:
 8022e2c:	e92d 47f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
 8022e30:	4616      	mov	r6, r2
 8022e32:	4698      	mov	r8, r3
 8022e34:	688a      	ldr	r2, [r1, #8]
 8022e36:	690b      	ldr	r3, [r1, #16]
 8022e38:	f8dd 9020 	ldr.w	r9, [sp, #32]
 8022e3c:	4293      	cmp	r3, r2
 8022e3e:	bfb8      	it	lt
 8022e40:	4613      	movlt	r3, r2
 8022e42:	6033      	str	r3, [r6, #0]
 8022e44:	f891 2043 	ldrb.w	r2, [r1, #67]	@ 0x43
 8022e48:	4607      	mov	r7, r0
 8022e4a:	460c      	mov	r4, r1
 8022e4c:	b10a      	cbz	r2, 8022e52 <_printf_common+0x26>
 8022e4e:	3301      	adds	r3, #1
 8022e50:	6033      	str	r3, [r6, #0]
 8022e52:	6823      	ldr	r3, [r4, #0]
 8022e54:	0699      	lsls	r1, r3, #26
 8022e56:	bf42      	ittt	mi
 8022e58:	6833      	ldrmi	r3, [r6, #0]
 8022e5a:	3302      	addmi	r3, #2
 8022e5c:	6033      	strmi	r3, [r6, #0]
 8022e5e:	6825      	ldr	r5, [r4, #0]
 8022e60:	f015 0506 	ands.w	r5, r5, #6
 8022e64:	d106      	bne.n	8022e74 <_printf_common+0x48>
 8022e66:	f104 0a19 	add.w	sl, r4, #25
 8022e6a:	68e3      	ldr	r3, [r4, #12]
 8022e6c:	6832      	ldr	r2, [r6, #0]
 8022e6e:	1a9b      	subs	r3, r3, r2
 8022e70:	42ab      	cmp	r3, r5
 8022e72:	dc26      	bgt.n	8022ec2 <_printf_common+0x96>
 8022e74:	f894 3043 	ldrb.w	r3, [r4, #67]	@ 0x43
 8022e78:	6822      	ldr	r2, [r4, #0]
 8022e7a:	3b00      	subs	r3, #0
 8022e7c:	bf18      	it	ne
 8022e7e:	2301      	movne	r3, #1
 8022e80:	0692      	lsls	r2, r2, #26
 8022e82:	d42b      	bmi.n	8022edc <_printf_common+0xb0>
 8022e84:	f104 0243 	add.w	r2, r4, #67	@ 0x43
 8022e88:	4641      	mov	r1, r8
 8022e8a:	4638      	mov	r0, r7
 8022e8c:	47c8      	blx	r9
 8022e8e:	3001      	adds	r0, #1
 8022e90:	d01e      	beq.n	8022ed0 <_printf_common+0xa4>
 8022e92:	6823      	ldr	r3, [r4, #0]
 8022e94:	6922      	ldr	r2, [r4, #16]
 8022e96:	f003 0306 	and.w	r3, r3, #6
 8022e9a:	2b04      	cmp	r3, #4
 8022e9c:	bf02      	ittt	eq
 8022e9e:	68e5      	ldreq	r5, [r4, #12]
 8022ea0:	6833      	ldreq	r3, [r6, #0]
 8022ea2:	1aed      	subeq	r5, r5, r3
 8022ea4:	68a3      	ldr	r3, [r4, #8]
 8022ea6:	bf0c      	ite	eq
 8022ea8:	ea25 75e5 	biceq.w	r5, r5, r5, asr #31
 8022eac:	2500      	movne	r5, #0
 8022eae:	4293      	cmp	r3, r2
 8022eb0:	bfc4      	itt	gt
 8022eb2:	1a9b      	subgt	r3, r3, r2
 8022eb4:	18ed      	addgt	r5, r5, r3
 8022eb6:	2600      	movs	r6, #0
 8022eb8:	341a      	adds	r4, #26
 8022eba:	42b5      	cmp	r5, r6
 8022ebc:	d11a      	bne.n	8022ef4 <_printf_common+0xc8>
 8022ebe:	2000      	movs	r0, #0
 8022ec0:	e008      	b.n	8022ed4 <_printf_common+0xa8>
 8022ec2:	2301      	movs	r3, #1
 8022ec4:	4652      	mov	r2, sl
 8022ec6:	4641      	mov	r1, r8
 8022ec8:	4638      	mov	r0, r7
 8022eca:	47c8      	blx	r9
 8022ecc:	3001      	adds	r0, #1
 8022ece:	d103      	bne.n	8022ed8 <_printf_common+0xac>
 8022ed0:	f04f 30ff 	mov.w	r0, #4294967295
 8022ed4:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
 8022ed8:	3501      	adds	r5, #1
 8022eda:	e7c6      	b.n	8022e6a <_printf_common+0x3e>
 8022edc:	18e1      	adds	r1, r4, r3
 8022ede:	1c5a      	adds	r2, r3, #1
 8022ee0:	2030      	movs	r0, #48	@ 0x30
 8022ee2:	f881 0043 	strb.w	r0, [r1, #67]	@ 0x43
 8022ee6:	4422      	add	r2, r4
 8022ee8:	f894 1045 	ldrb.w	r1, [r4, #69]	@ 0x45
 8022eec:	f882 1043 	strb.w	r1, [r2, #67]	@ 0x43
 8022ef0:	3302      	adds	r3, #2
 8022ef2:	e7c7      	b.n	8022e84 <_printf_common+0x58>
 8022ef4:	2301      	movs	r3, #1
 8022ef6:	4622      	mov	r2, r4
 8022ef8:	4641      	mov	r1, r8
 8022efa:	4638      	mov	r0, r7
 8022efc:	47c8      	blx	r9
 8022efe:	3001      	adds	r0, #1
 8022f00:	d0e6      	beq.n	8022ed0 <_printf_common+0xa4>
 8022f02:	3601      	adds	r6, #1
 8022f04:	e7d9      	b.n	8022eba <_printf_common+0x8e>
	...

08022f08 <_printf_i>:
 8022f08:	e92d 47ff 	stmdb	sp!, {r0, r1, r2, r3, r4, r5, r6, r7, r8, r9, sl, lr}
 8022f0c:	7e0f      	ldrb	r7, [r1, #24]
 8022f0e:	9e0c      	ldr	r6, [sp, #48]	@ 0x30
 8022f10:	2f78      	cmp	r7, #120	@ 0x78
 8022f12:	4691      	mov	r9, r2
 8022f14:	4680      	mov	r8, r0
 8022f16:	460c      	mov	r4, r1
 8022f18:	469a      	mov	sl, r3
 8022f1a:	f101 0243 	add.w	r2, r1, #67	@ 0x43
 8022f1e:	d807      	bhi.n	8022f30 <_printf_i+0x28>
 8022f20:	2f62      	cmp	r7, #98	@ 0x62
 8022f22:	d80a      	bhi.n	8022f3a <_printf_i+0x32>
 8022f24:	2f00      	cmp	r7, #0
 8022f26:	f000 80d2 	beq.w	80230ce <_printf_i+0x1c6>
 8022f2a:	2f58      	cmp	r7, #88	@ 0x58
 8022f2c:	f000 80b9 	beq.w	80230a2 <_printf_i+0x19a>
 8022f30:	f104 0642 	add.w	r6, r4, #66	@ 0x42
 8022f34:	f884 7042 	strb.w	r7, [r4, #66]	@ 0x42
 8022f38:	e03a      	b.n	8022fb0 <_printf_i+0xa8>
 8022f3a:	f1a7 0363 	sub.w	r3, r7, #99	@ 0x63
 8022f3e:	2b15      	cmp	r3, #21
 8022f40:	d8f6      	bhi.n	8022f30 <_printf_i+0x28>
 8022f42:	a101      	add	r1, pc, #4	@ (adr r1, 8022f48 <_printf_i+0x40>)
 8022f44:	f851 f023 	ldr.w	pc, [r1, r3, lsl #2]
 8022f48:	08022fa1 	.word	0x08022fa1
 8022f4c:	08022fb5 	.word	0x08022fb5
 8022f50:	08022f31 	.word	0x08022f31
 8022f54:	08022f31 	.word	0x08022f31
 8022f58:	08022f31 	.word	0x08022f31
 8022f5c:	08022f31 	.word	0x08022f31
 8022f60:	08022fb5 	.word	0x08022fb5
 8022f64:	08022f31 	.word	0x08022f31
 8022f68:	08022f31 	.word	0x08022f31
 8022f6c:	08022f31 	.word	0x08022f31
 8022f70:	08022f31 	.word	0x08022f31
 8022f74:	080230b5 	.word	0x080230b5
 8022f78:	08022fdf 	.word	0x08022fdf
 8022f7c:	0802306f 	.word	0x0802306f
 8022f80:	08022f31 	.word	0x08022f31
 8022f84:	08022f31 	.word	0x08022f31
 8022f88:	080230d7 	.word	0x080230d7
 8022f8c:	08022f31 	.word	0x08022f31
 8022f90:	08022fdf 	.word	0x08022fdf
 8022f94:	08022f31 	.word	0x08022f31
 8022f98:	08022f31 	.word	0x08022f31
 8022f9c:	08023077 	.word	0x08023077
 8022fa0:	6833      	ldr	r3, [r6, #0]
 8022fa2:	1d1a      	adds	r2, r3, #4
 8022fa4:	681b      	ldr	r3, [r3, #0]
 8022fa6:	6032      	str	r2, [r6, #0]
 8022fa8:	f104 0642 	add.w	r6, r4, #66	@ 0x42
 8022fac:	f884 3042 	strb.w	r3, [r4, #66]	@ 0x42
 8022fb0:	2301      	movs	r3, #1
 8022fb2:	e09d      	b.n	80230f0 <_printf_i+0x1e8>
 8022fb4:	6833      	ldr	r3, [r6, #0]
 8022fb6:	6820      	ldr	r0, [r4, #0]
 8022fb8:	1d19      	adds	r1, r3, #4
 8022fba:	6031      	str	r1, [r6, #0]
 8022fbc:	0606      	lsls	r6, r0, #24
 8022fbe:	d501      	bpl.n	8022fc4 <_printf_i+0xbc>
 8022fc0:	681d      	ldr	r5, [r3, #0]
 8022fc2:	e003      	b.n	8022fcc <_printf_i+0xc4>
 8022fc4:	0645      	lsls	r5, r0, #25
 8022fc6:	d5fb      	bpl.n	8022fc0 <_printf_i+0xb8>
 8022fc8:	f9b3 5000 	ldrsh.w	r5, [r3]
 8022fcc:	2d00      	cmp	r5, #0
 8022fce:	da03      	bge.n	8022fd8 <_printf_i+0xd0>
 8022fd0:	232d      	movs	r3, #45	@ 0x2d
 8022fd2:	426d      	negs	r5, r5
 8022fd4:	f884 3043 	strb.w	r3, [r4, #67]	@ 0x43
 8022fd8:	4859      	ldr	r0, [pc, #356]	@ (8023140 <_printf_i+0x238>)
 8022fda:	230a      	movs	r3, #10
 8022fdc:	e011      	b.n	8023002 <_printf_i+0xfa>
 8022fde:	6821      	ldr	r1, [r4, #0]
 8022fe0:	6833      	ldr	r3, [r6, #0]
 8022fe2:	0608      	lsls	r0, r1, #24
 8022fe4:	f853 5b04 	ldr.w	r5, [r3], #4
 8022fe8:	d402      	bmi.n	8022ff0 <_printf_i+0xe8>
 8022fea:	0649      	lsls	r1, r1, #25
 8022fec:	bf48      	it	mi
 8022fee:	b2ad      	uxthmi	r5, r5
 8022ff0:	2f6f      	cmp	r7, #111	@ 0x6f
 8022ff2:	4853      	ldr	r0, [pc, #332]	@ (8023140 <_printf_i+0x238>)
 8022ff4:	6033      	str	r3, [r6, #0]
 8022ff6:	bf14      	ite	ne
 8022ff8:	230a      	movne	r3, #10
 8022ffa:	2308      	moveq	r3, #8
 8022ffc:	2100      	movs	r1, #0
 8022ffe:	f884 1043 	strb.w	r1, [r4, #67]	@ 0x43
 8023002:	6866      	ldr	r6, [r4, #4]
 8023004:	60a6      	str	r6, [r4, #8]
 8023006:	2e00      	cmp	r6, #0
 8023008:	bfa2      	ittt	ge
 802300a:	6821      	ldrge	r1, [r4, #0]
 802300c:	f021 0104 	bicge.w	r1, r1, #4
 8023010:	6021      	strge	r1, [r4, #0]
 8023012:	b90d      	cbnz	r5, 8023018 <_printf_i+0x110>
 8023014:	2e00      	cmp	r6, #0
 8023016:	d04b      	beq.n	80230b0 <_printf_i+0x1a8>
 8023018:	4616      	mov	r6, r2
 802301a:	fbb5 f1f3 	udiv	r1, r5, r3
 802301e:	fb03 5711 	mls	r7, r3, r1, r5
 8023022:	5dc7      	ldrb	r7, [r0, r7]
 8023024:	f806 7d01 	strb.w	r7, [r6, #-1]!
 8023028:	462f      	mov	r7, r5
 802302a:	42bb      	cmp	r3, r7
 802302c:	460d      	mov	r5, r1
 802302e:	d9f4      	bls.n	802301a <_printf_i+0x112>
 8023030:	2b08      	cmp	r3, #8
 8023032:	d10b      	bne.n	802304c <_printf_i+0x144>
 8023034:	6823      	ldr	r3, [r4, #0]
 8023036:	07df      	lsls	r7, r3, #31
 8023038:	d508      	bpl.n	802304c <_printf_i+0x144>
 802303a:	6923      	ldr	r3, [r4, #16]
 802303c:	6861      	ldr	r1, [r4, #4]
 802303e:	4299      	cmp	r1, r3
 8023040:	bfde      	ittt	le
 8023042:	2330      	movle	r3, #48	@ 0x30
 8023044:	f806 3c01 	strble.w	r3, [r6, #-1]
 8023048:	f106 36ff 	addle.w	r6, r6, #4294967295
 802304c:	1b92      	subs	r2, r2, r6
 802304e:	6122      	str	r2, [r4, #16]
 8023050:	f8cd a000 	str.w	sl, [sp]
 8023054:	464b      	mov	r3, r9
 8023056:	aa03      	add	r2, sp, #12
 8023058:	4621      	mov	r1, r4
 802305a:	4640      	mov	r0, r8
 802305c:	f7ff fee6 	bl	8022e2c <_printf_common>
 8023060:	3001      	adds	r0, #1
 8023062:	d14a      	bne.n	80230fa <_printf_i+0x1f2>
 8023064:	f04f 30ff 	mov.w	r0, #4294967295
 8023068:	b004      	add	sp, #16
 802306a:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
 802306e:	6823      	ldr	r3, [r4, #0]
 8023070:	f043 0320 	orr.w	r3, r3, #32
 8023074:	6023      	str	r3, [r4, #0]
 8023076:	4833      	ldr	r0, [pc, #204]	@ (8023144 <_printf_i+0x23c>)
 8023078:	2778      	movs	r7, #120	@ 0x78
 802307a:	f884 7045 	strb.w	r7, [r4, #69]	@ 0x45
 802307e:	6823      	ldr	r3, [r4, #0]
 8023080:	6831      	ldr	r1, [r6, #0]
 8023082:	061f      	lsls	r7, r3, #24
 8023084:	f851 5b04 	ldr.w	r5, [r1], #4
 8023088:	d402      	bmi.n	8023090 <_printf_i+0x188>
 802308a:	065f      	lsls	r7, r3, #25
 802308c:	bf48      	it	mi
 802308e:	b2ad      	uxthmi	r5, r5
 8023090:	6031      	str	r1, [r6, #0]
 8023092:	07d9      	lsls	r1, r3, #31
 8023094:	bf44      	itt	mi
 8023096:	f043 0320 	orrmi.w	r3, r3, #32
 802309a:	6023      	strmi	r3, [r4, #0]
 802309c:	b11d      	cbz	r5, 80230a6 <_printf_i+0x19e>
 802309e:	2310      	movs	r3, #16
 80230a0:	e7ac      	b.n	8022ffc <_printf_i+0xf4>
 80230a2:	4827      	ldr	r0, [pc, #156]	@ (8023140 <_printf_i+0x238>)
 80230a4:	e7e9      	b.n	802307a <_printf_i+0x172>
 80230a6:	6823      	ldr	r3, [r4, #0]
 80230a8:	f023 0320 	bic.w	r3, r3, #32
 80230ac:	6023      	str	r3, [r4, #0]
 80230ae:	e7f6      	b.n	802309e <_printf_i+0x196>
 80230b0:	4616      	mov	r6, r2
 80230b2:	e7bd      	b.n	8023030 <_printf_i+0x128>
 80230b4:	6833      	ldr	r3, [r6, #0]
 80230b6:	6825      	ldr	r5, [r4, #0]
 80230b8:	6961      	ldr	r1, [r4, #20]
 80230ba:	1d18      	adds	r0, r3, #4
 80230bc:	6030      	str	r0, [r6, #0]
 80230be:	062e      	lsls	r6, r5, #24
 80230c0:	681b      	ldr	r3, [r3, #0]
 80230c2:	d501      	bpl.n	80230c8 <_printf_i+0x1c0>
 80230c4:	6019      	str	r1, [r3, #0]
 80230c6:	e002      	b.n	80230ce <_printf_i+0x1c6>
 80230c8:	0668      	lsls	r0, r5, #25
 80230ca:	d5fb      	bpl.n	80230c4 <_printf_i+0x1bc>
 80230cc:	8019      	strh	r1, [r3, #0]
 80230ce:	2300      	movs	r3, #0
 80230d0:	6123      	str	r3, [r4, #16]
 80230d2:	4616      	mov	r6, r2
 80230d4:	e7bc      	b.n	8023050 <_printf_i+0x148>
 80230d6:	6833      	ldr	r3, [r6, #0]
 80230d8:	1d1a      	adds	r2, r3, #4
 80230da:	6032      	str	r2, [r6, #0]
 80230dc:	681e      	ldr	r6, [r3, #0]
 80230de:	6862      	ldr	r2, [r4, #4]
 80230e0:	2100      	movs	r1, #0
 80230e2:	4630      	mov	r0, r6
 80230e4:	f7dd f894 	bl	8000210 <memchr>
 80230e8:	b108      	cbz	r0, 80230ee <_printf_i+0x1e6>
 80230ea:	1b80      	subs	r0, r0, r6
 80230ec:	6060      	str	r0, [r4, #4]
 80230ee:	6863      	ldr	r3, [r4, #4]
 80230f0:	6123      	str	r3, [r4, #16]
 80230f2:	2300      	movs	r3, #0
 80230f4:	f884 3043 	strb.w	r3, [r4, #67]	@ 0x43
 80230f8:	e7aa      	b.n	8023050 <_printf_i+0x148>
 80230fa:	6923      	ldr	r3, [r4, #16]
 80230fc:	4632      	mov	r2, r6
 80230fe:	4649      	mov	r1, r9
 8023100:	4640      	mov	r0, r8
 8023102:	47d0      	blx	sl
 8023104:	3001      	adds	r0, #1
 8023106:	d0ad      	beq.n	8023064 <_printf_i+0x15c>
 8023108:	6823      	ldr	r3, [r4, #0]
 802310a:	079b      	lsls	r3, r3, #30
 802310c:	d413      	bmi.n	8023136 <_printf_i+0x22e>
 802310e:	68e0      	ldr	r0, [r4, #12]
 8023110:	9b03      	ldr	r3, [sp, #12]
 8023112:	4298      	cmp	r0, r3
 8023114:	bfb8      	it	lt
 8023116:	4618      	movlt	r0, r3
 8023118:	e7a6      	b.n	8023068 <_printf_i+0x160>
 802311a:	2301      	movs	r3, #1
 802311c:	4632      	mov	r2, r6
 802311e:	4649      	mov	r1, r9
 8023120:	4640      	mov	r0, r8
 8023122:	47d0      	blx	sl
 8023124:	3001      	adds	r0, #1
 8023126:	d09d      	beq.n	8023064 <_printf_i+0x15c>
 8023128:	3501      	adds	r5, #1
 802312a:	68e3      	ldr	r3, [r4, #12]
 802312c:	9903      	ldr	r1, [sp, #12]
 802312e:	1a5b      	subs	r3, r3, r1
 8023130:	42ab      	cmp	r3, r5
 8023132:	dcf2      	bgt.n	802311a <_printf_i+0x212>
 8023134:	e7eb      	b.n	802310e <_printf_i+0x206>
 8023136:	2500      	movs	r5, #0
 8023138:	f104 0619 	add.w	r6, r4, #25
 802313c:	e7f5      	b.n	802312a <_printf_i+0x222>
 802313e:	bf00      	nop
 8023140:	080258a1 	.word	0x080258a1
 8023144:	080258b2 	.word	0x080258b2

08023148 <__sflush_r>:
 8023148:	f9b1 200c 	ldrsh.w	r2, [r1, #12]
 802314c:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 8023150:	0716      	lsls	r6, r2, #28
 8023152:	4605      	mov	r5, r0
 8023154:	460c      	mov	r4, r1
 8023156:	d454      	bmi.n	8023202 <__sflush_r+0xba>
 8023158:	684b      	ldr	r3, [r1, #4]
 802315a:	2b00      	cmp	r3, #0
 802315c:	dc02      	bgt.n	8023164 <__sflush_r+0x1c>
 802315e:	6c0b      	ldr	r3, [r1, #64]	@ 0x40
 8023160:	2b00      	cmp	r3, #0
 8023162:	dd48      	ble.n	80231f6 <__sflush_r+0xae>
 8023164:	6ae6      	ldr	r6, [r4, #44]	@ 0x2c
 8023166:	2e00      	cmp	r6, #0
 8023168:	d045      	beq.n	80231f6 <__sflush_r+0xae>
 802316a:	2300      	movs	r3, #0
 802316c:	f412 5280 	ands.w	r2, r2, #4096	@ 0x1000
 8023170:	682f      	ldr	r7, [r5, #0]
 8023172:	6a21      	ldr	r1, [r4, #32]
 8023174:	602b      	str	r3, [r5, #0]
 8023176:	d030      	beq.n	80231da <__sflush_r+0x92>
 8023178:	6d62      	ldr	r2, [r4, #84]	@ 0x54
 802317a:	89a3      	ldrh	r3, [r4, #12]
 802317c:	0759      	lsls	r1, r3, #29
 802317e:	d505      	bpl.n	802318c <__sflush_r+0x44>
 8023180:	6863      	ldr	r3, [r4, #4]
 8023182:	1ad2      	subs	r2, r2, r3
 8023184:	6b63      	ldr	r3, [r4, #52]	@ 0x34
 8023186:	b10b      	cbz	r3, 802318c <__sflush_r+0x44>
 8023188:	6c23      	ldr	r3, [r4, #64]	@ 0x40
 802318a:	1ad2      	subs	r2, r2, r3
 802318c:	2300      	movs	r3, #0
 802318e:	6ae6      	ldr	r6, [r4, #44]	@ 0x2c
 8023190:	6a21      	ldr	r1, [r4, #32]
 8023192:	4628      	mov	r0, r5
 8023194:	47b0      	blx	r6
 8023196:	1c43      	adds	r3, r0, #1
 8023198:	89a3      	ldrh	r3, [r4, #12]
 802319a:	d106      	bne.n	80231aa <__sflush_r+0x62>
 802319c:	6829      	ldr	r1, [r5, #0]
 802319e:	291d      	cmp	r1, #29
 80231a0:	d82b      	bhi.n	80231fa <__sflush_r+0xb2>
 80231a2:	4a2a      	ldr	r2, [pc, #168]	@ (802324c <__sflush_r+0x104>)
 80231a4:	410a      	asrs	r2, r1
 80231a6:	07d6      	lsls	r6, r2, #31
 80231a8:	d427      	bmi.n	80231fa <__sflush_r+0xb2>
 80231aa:	2200      	movs	r2, #0
 80231ac:	6062      	str	r2, [r4, #4]
 80231ae:	04d9      	lsls	r1, r3, #19
 80231b0:	6922      	ldr	r2, [r4, #16]
 80231b2:	6022      	str	r2, [r4, #0]
 80231b4:	d504      	bpl.n	80231c0 <__sflush_r+0x78>
 80231b6:	1c42      	adds	r2, r0, #1
 80231b8:	d101      	bne.n	80231be <__sflush_r+0x76>
 80231ba:	682b      	ldr	r3, [r5, #0]
 80231bc:	b903      	cbnz	r3, 80231c0 <__sflush_r+0x78>
 80231be:	6560      	str	r0, [r4, #84]	@ 0x54
 80231c0:	6b61      	ldr	r1, [r4, #52]	@ 0x34
 80231c2:	602f      	str	r7, [r5, #0]
 80231c4:	b1b9      	cbz	r1, 80231f6 <__sflush_r+0xae>
 80231c6:	f104 0344 	add.w	r3, r4, #68	@ 0x44
 80231ca:	4299      	cmp	r1, r3
 80231cc:	d002      	beq.n	80231d4 <__sflush_r+0x8c>
 80231ce:	4628      	mov	r0, r5
 80231d0:	f7ff fca0 	bl	8022b14 <_free_r>
 80231d4:	2300      	movs	r3, #0
 80231d6:	6363      	str	r3, [r4, #52]	@ 0x34
 80231d8:	e00d      	b.n	80231f6 <__sflush_r+0xae>
 80231da:	2301      	movs	r3, #1
 80231dc:	4628      	mov	r0, r5
 80231de:	47b0      	blx	r6
 80231e0:	4602      	mov	r2, r0
 80231e2:	1c50      	adds	r0, r2, #1
 80231e4:	d1c9      	bne.n	802317a <__sflush_r+0x32>
 80231e6:	682b      	ldr	r3, [r5, #0]
 80231e8:	2b00      	cmp	r3, #0
 80231ea:	d0c6      	beq.n	802317a <__sflush_r+0x32>
 80231ec:	2b1d      	cmp	r3, #29
 80231ee:	d001      	beq.n	80231f4 <__sflush_r+0xac>
 80231f0:	2b16      	cmp	r3, #22
 80231f2:	d11e      	bne.n	8023232 <__sflush_r+0xea>
 80231f4:	602f      	str	r7, [r5, #0]
 80231f6:	2000      	movs	r0, #0
 80231f8:	e022      	b.n	8023240 <__sflush_r+0xf8>
 80231fa:	f043 0340 	orr.w	r3, r3, #64	@ 0x40
 80231fe:	b21b      	sxth	r3, r3
 8023200:	e01b      	b.n	802323a <__sflush_r+0xf2>
 8023202:	690f      	ldr	r7, [r1, #16]
 8023204:	2f00      	cmp	r7, #0
 8023206:	d0f6      	beq.n	80231f6 <__sflush_r+0xae>
 8023208:	0793      	lsls	r3, r2, #30
 802320a:	680e      	ldr	r6, [r1, #0]
 802320c:	bf08      	it	eq
 802320e:	694b      	ldreq	r3, [r1, #20]
 8023210:	600f      	str	r7, [r1, #0]
 8023212:	bf18      	it	ne
 8023214:	2300      	movne	r3, #0
 8023216:	eba6 0807 	sub.w	r8, r6, r7
 802321a:	608b      	str	r3, [r1, #8]
 802321c:	f1b8 0f00 	cmp.w	r8, #0
 8023220:	dde9      	ble.n	80231f6 <__sflush_r+0xae>
 8023222:	6a21      	ldr	r1, [r4, #32]
 8023224:	6aa6      	ldr	r6, [r4, #40]	@ 0x28
 8023226:	4643      	mov	r3, r8
 8023228:	463a      	mov	r2, r7
 802322a:	4628      	mov	r0, r5
 802322c:	47b0      	blx	r6
 802322e:	2800      	cmp	r0, #0
 8023230:	dc08      	bgt.n	8023244 <__sflush_r+0xfc>
 8023232:	f9b4 300c 	ldrsh.w	r3, [r4, #12]
 8023236:	f043 0340 	orr.w	r3, r3, #64	@ 0x40
 802323a:	81a3      	strh	r3, [r4, #12]
 802323c:	f04f 30ff 	mov.w	r0, #4294967295
 8023240:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
 8023244:	4407      	add	r7, r0
 8023246:	eba8 0800 	sub.w	r8, r8, r0
 802324a:	e7e7      	b.n	802321c <__sflush_r+0xd4>
 802324c:	dfbffffe 	.word	0xdfbffffe

08023250 <_fflush_r>:
 8023250:	b538      	push	{r3, r4, r5, lr}
 8023252:	690b      	ldr	r3, [r1, #16]
 8023254:	4605      	mov	r5, r0
 8023256:	460c      	mov	r4, r1
 8023258:	b913      	cbnz	r3, 8023260 <_fflush_r+0x10>
 802325a:	2500      	movs	r5, #0
 802325c:	4628      	mov	r0, r5
 802325e:	bd38      	pop	{r3, r4, r5, pc}
 8023260:	b118      	cbz	r0, 802326a <_fflush_r+0x1a>
 8023262:	6a03      	ldr	r3, [r0, #32]
 8023264:	b90b      	cbnz	r3, 802326a <_fflush_r+0x1a>
 8023266:	f7ff fa8f 	bl	8022788 <__sinit>
 802326a:	f9b4 300c 	ldrsh.w	r3, [r4, #12]
 802326e:	2b00      	cmp	r3, #0
 8023270:	d0f3      	beq.n	802325a <_fflush_r+0xa>
 8023272:	6e62      	ldr	r2, [r4, #100]	@ 0x64
 8023274:	07d0      	lsls	r0, r2, #31
 8023276:	d404      	bmi.n	8023282 <_fflush_r+0x32>
 8023278:	0599      	lsls	r1, r3, #22
 802327a:	d402      	bmi.n	8023282 <_fflush_r+0x32>
 802327c:	6da0      	ldr	r0, [r4, #88]	@ 0x58
 802327e:	f7ff fbdc 	bl	8022a3a <__retarget_lock_acquire_recursive>
 8023282:	4628      	mov	r0, r5
 8023284:	4621      	mov	r1, r4
 8023286:	f7ff ff5f 	bl	8023148 <__sflush_r>
 802328a:	6e63      	ldr	r3, [r4, #100]	@ 0x64
 802328c:	07da      	lsls	r2, r3, #31
 802328e:	4605      	mov	r5, r0
 8023290:	d4e4      	bmi.n	802325c <_fflush_r+0xc>
 8023292:	89a3      	ldrh	r3, [r4, #12]
 8023294:	059b      	lsls	r3, r3, #22
 8023296:	d4e1      	bmi.n	802325c <_fflush_r+0xc>
 8023298:	6da0      	ldr	r0, [r4, #88]	@ 0x58
 802329a:	f7ff fbcf 	bl	8022a3c <__retarget_lock_release_recursive>
 802329e:	e7dd      	b.n	802325c <_fflush_r+0xc>

080232a0 <__swbuf_r>:
 80232a0:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 80232a2:	460e      	mov	r6, r1
 80232a4:	4614      	mov	r4, r2
 80232a6:	4605      	mov	r5, r0
 80232a8:	b118      	cbz	r0, 80232b2 <__swbuf_r+0x12>
 80232aa:	6a03      	ldr	r3, [r0, #32]
 80232ac:	b90b      	cbnz	r3, 80232b2 <__swbuf_r+0x12>
 80232ae:	f7ff fa6b 	bl	8022788 <__sinit>
 80232b2:	69a3      	ldr	r3, [r4, #24]
 80232b4:	60a3      	str	r3, [r4, #8]
 80232b6:	89a3      	ldrh	r3, [r4, #12]
 80232b8:	071a      	lsls	r2, r3, #28
 80232ba:	d501      	bpl.n	80232c0 <__swbuf_r+0x20>
 80232bc:	6923      	ldr	r3, [r4, #16]
 80232be:	b943      	cbnz	r3, 80232d2 <__swbuf_r+0x32>
 80232c0:	4621      	mov	r1, r4
 80232c2:	4628      	mov	r0, r5
 80232c4:	f000 f82a 	bl	802331c <__swsetup_r>
 80232c8:	b118      	cbz	r0, 80232d2 <__swbuf_r+0x32>
 80232ca:	f04f 37ff 	mov.w	r7, #4294967295
 80232ce:	4638      	mov	r0, r7
 80232d0:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
 80232d2:	6823      	ldr	r3, [r4, #0]
 80232d4:	6922      	ldr	r2, [r4, #16]
 80232d6:	1a98      	subs	r0, r3, r2
 80232d8:	6963      	ldr	r3, [r4, #20]
 80232da:	b2f6      	uxtb	r6, r6
 80232dc:	4283      	cmp	r3, r0
 80232de:	4637      	mov	r7, r6
 80232e0:	dc05      	bgt.n	80232ee <__swbuf_r+0x4e>
 80232e2:	4621      	mov	r1, r4
 80232e4:	4628      	mov	r0, r5
 80232e6:	f7ff ffb3 	bl	8023250 <_fflush_r>
 80232ea:	2800      	cmp	r0, #0
 80232ec:	d1ed      	bne.n	80232ca <__swbuf_r+0x2a>
 80232ee:	68a3      	ldr	r3, [r4, #8]
 80232f0:	3b01      	subs	r3, #1
 80232f2:	60a3      	str	r3, [r4, #8]
 80232f4:	6823      	ldr	r3, [r4, #0]
 80232f6:	1c5a      	adds	r2, r3, #1
 80232f8:	6022      	str	r2, [r4, #0]
 80232fa:	701e      	strb	r6, [r3, #0]
 80232fc:	6962      	ldr	r2, [r4, #20]
 80232fe:	1c43      	adds	r3, r0, #1
 8023300:	429a      	cmp	r2, r3
 8023302:	d004      	beq.n	802330e <__swbuf_r+0x6e>
 8023304:	89a3      	ldrh	r3, [r4, #12]
 8023306:	07db      	lsls	r3, r3, #31
 8023308:	d5e1      	bpl.n	80232ce <__swbuf_r+0x2e>
 802330a:	2e0a      	cmp	r6, #10
 802330c:	d1df      	bne.n	80232ce <__swbuf_r+0x2e>
 802330e:	4621      	mov	r1, r4
 8023310:	4628      	mov	r0, r5
 8023312:	f7ff ff9d 	bl	8023250 <_fflush_r>
 8023316:	2800      	cmp	r0, #0
 8023318:	d0d9      	beq.n	80232ce <__swbuf_r+0x2e>
 802331a:	e7d6      	b.n	80232ca <__swbuf_r+0x2a>

0802331c <__swsetup_r>:
 802331c:	b538      	push	{r3, r4, r5, lr}
 802331e:	4b29      	ldr	r3, [pc, #164]	@ (80233c4 <__swsetup_r+0xa8>)
 8023320:	4605      	mov	r5, r0
 8023322:	6818      	ldr	r0, [r3, #0]
 8023324:	460c      	mov	r4, r1
 8023326:	b118      	cbz	r0, 8023330 <__swsetup_r+0x14>
 8023328:	6a03      	ldr	r3, [r0, #32]
 802332a:	b90b      	cbnz	r3, 8023330 <__swsetup_r+0x14>
 802332c:	f7ff fa2c 	bl	8022788 <__sinit>
 8023330:	f9b4 300c 	ldrsh.w	r3, [r4, #12]
 8023334:	0719      	lsls	r1, r3, #28
 8023336:	d422      	bmi.n	802337e <__swsetup_r+0x62>
 8023338:	06da      	lsls	r2, r3, #27
 802333a:	d407      	bmi.n	802334c <__swsetup_r+0x30>
 802333c:	2209      	movs	r2, #9
 802333e:	602a      	str	r2, [r5, #0]
 8023340:	f043 0340 	orr.w	r3, r3, #64	@ 0x40
 8023344:	81a3      	strh	r3, [r4, #12]
 8023346:	f04f 30ff 	mov.w	r0, #4294967295
 802334a:	e033      	b.n	80233b4 <__swsetup_r+0x98>
 802334c:	0758      	lsls	r0, r3, #29
 802334e:	d512      	bpl.n	8023376 <__swsetup_r+0x5a>
 8023350:	6b61      	ldr	r1, [r4, #52]	@ 0x34
 8023352:	b141      	cbz	r1, 8023366 <__swsetup_r+0x4a>
 8023354:	f104 0344 	add.w	r3, r4, #68	@ 0x44
 8023358:	4299      	cmp	r1, r3
 802335a:	d002      	beq.n	8023362 <__swsetup_r+0x46>
 802335c:	4628      	mov	r0, r5
 802335e:	f7ff fbd9 	bl	8022b14 <_free_r>
 8023362:	2300      	movs	r3, #0
 8023364:	6363      	str	r3, [r4, #52]	@ 0x34
 8023366:	89a3      	ldrh	r3, [r4, #12]
 8023368:	f023 0324 	bic.w	r3, r3, #36	@ 0x24
 802336c:	81a3      	strh	r3, [r4, #12]
 802336e:	2300      	movs	r3, #0
 8023370:	6063      	str	r3, [r4, #4]
 8023372:	6923      	ldr	r3, [r4, #16]
 8023374:	6023      	str	r3, [r4, #0]
 8023376:	89a3      	ldrh	r3, [r4, #12]
 8023378:	f043 0308 	orr.w	r3, r3, #8
 802337c:	81a3      	strh	r3, [r4, #12]
 802337e:	6923      	ldr	r3, [r4, #16]
 8023380:	b94b      	cbnz	r3, 8023396 <__swsetup_r+0x7a>
 8023382:	89a3      	ldrh	r3, [r4, #12]
 8023384:	f403 7320 	and.w	r3, r3, #640	@ 0x280
 8023388:	f5b3 7f00 	cmp.w	r3, #512	@ 0x200
 802338c:	d003      	beq.n	8023396 <__swsetup_r+0x7a>
 802338e:	4621      	mov	r1, r4
 8023390:	4628      	mov	r0, r5
 8023392:	f000 f83f 	bl	8023414 <__smakebuf_r>
 8023396:	f9b4 300c 	ldrsh.w	r3, [r4, #12]
 802339a:	f013 0201 	ands.w	r2, r3, #1
 802339e:	d00a      	beq.n	80233b6 <__swsetup_r+0x9a>
 80233a0:	2200      	movs	r2, #0
 80233a2:	60a2      	str	r2, [r4, #8]
 80233a4:	6962      	ldr	r2, [r4, #20]
 80233a6:	4252      	negs	r2, r2
 80233a8:	61a2      	str	r2, [r4, #24]
 80233aa:	6922      	ldr	r2, [r4, #16]
 80233ac:	b942      	cbnz	r2, 80233c0 <__swsetup_r+0xa4>
 80233ae:	f013 0080 	ands.w	r0, r3, #128	@ 0x80
 80233b2:	d1c5      	bne.n	8023340 <__swsetup_r+0x24>
 80233b4:	bd38      	pop	{r3, r4, r5, pc}
 80233b6:	0799      	lsls	r1, r3, #30
 80233b8:	bf58      	it	pl
 80233ba:	6962      	ldrpl	r2, [r4, #20]
 80233bc:	60a2      	str	r2, [r4, #8]
 80233be:	e7f4      	b.n	80233aa <__swsetup_r+0x8e>
 80233c0:	2000      	movs	r0, #0
 80233c2:	e7f7      	b.n	80233b4 <__swsetup_r+0x98>
 80233c4:	200000b0 	.word	0x200000b0

080233c8 <__swhatbuf_r>:
 80233c8:	b570      	push	{r4, r5, r6, lr}
 80233ca:	460c      	mov	r4, r1
 80233cc:	f9b1 100e 	ldrsh.w	r1, [r1, #14]
 80233d0:	2900      	cmp	r1, #0
 80233d2:	b096      	sub	sp, #88	@ 0x58
 80233d4:	4615      	mov	r5, r2
 80233d6:	461e      	mov	r6, r3
 80233d8:	da0d      	bge.n	80233f6 <__swhatbuf_r+0x2e>
 80233da:	89a3      	ldrh	r3, [r4, #12]
 80233dc:	f013 0f80 	tst.w	r3, #128	@ 0x80
 80233e0:	f04f 0100 	mov.w	r1, #0
 80233e4:	bf14      	ite	ne
 80233e6:	2340      	movne	r3, #64	@ 0x40
 80233e8:	f44f 6380 	moveq.w	r3, #1024	@ 0x400
 80233ec:	2000      	movs	r0, #0
 80233ee:	6031      	str	r1, [r6, #0]
 80233f0:	602b      	str	r3, [r5, #0]
 80233f2:	b016      	add	sp, #88	@ 0x58
 80233f4:	bd70      	pop	{r4, r5, r6, pc}
 80233f6:	466a      	mov	r2, sp
 80233f8:	f000 f848 	bl	802348c <_fstat_r>
 80233fc:	2800      	cmp	r0, #0
 80233fe:	dbec      	blt.n	80233da <__swhatbuf_r+0x12>
 8023400:	9901      	ldr	r1, [sp, #4]
 8023402:	f401 4170 	and.w	r1, r1, #61440	@ 0xf000
 8023406:	f5a1 5300 	sub.w	r3, r1, #8192	@ 0x2000
 802340a:	4259      	negs	r1, r3
 802340c:	4159      	adcs	r1, r3
 802340e:	f44f 6380 	mov.w	r3, #1024	@ 0x400
 8023412:	e7eb      	b.n	80233ec <__swhatbuf_r+0x24>

08023414 <__smakebuf_r>:
 8023414:	898b      	ldrh	r3, [r1, #12]
 8023416:	b5f7      	push	{r0, r1, r2, r4, r5, r6, r7, lr}
 8023418:	079d      	lsls	r5, r3, #30
 802341a:	4606      	mov	r6, r0
 802341c:	460c      	mov	r4, r1
 802341e:	d507      	bpl.n	8023430 <__smakebuf_r+0x1c>
 8023420:	f104 0347 	add.w	r3, r4, #71	@ 0x47
 8023424:	6023      	str	r3, [r4, #0]
 8023426:	6123      	str	r3, [r4, #16]
 8023428:	2301      	movs	r3, #1
 802342a:	6163      	str	r3, [r4, #20]
 802342c:	b003      	add	sp, #12
 802342e:	bdf0      	pop	{r4, r5, r6, r7, pc}
 8023430:	ab01      	add	r3, sp, #4
 8023432:	466a      	mov	r2, sp
 8023434:	f7ff ffc8 	bl	80233c8 <__swhatbuf_r>
 8023438:	9f00      	ldr	r7, [sp, #0]
 802343a:	4605      	mov	r5, r0
 802343c:	4639      	mov	r1, r7
 802343e:	4630      	mov	r0, r6
 8023440:	f7ff f87c 	bl	802253c <_malloc_r>
 8023444:	b948      	cbnz	r0, 802345a <__smakebuf_r+0x46>
 8023446:	f9b4 300c 	ldrsh.w	r3, [r4, #12]
 802344a:	059a      	lsls	r2, r3, #22
 802344c:	d4ee      	bmi.n	802342c <__smakebuf_r+0x18>
 802344e:	f023 0303 	bic.w	r3, r3, #3
 8023452:	f043 0302 	orr.w	r3, r3, #2
 8023456:	81a3      	strh	r3, [r4, #12]
 8023458:	e7e2      	b.n	8023420 <__smakebuf_r+0xc>
 802345a:	89a3      	ldrh	r3, [r4, #12]
 802345c:	6020      	str	r0, [r4, #0]
 802345e:	f043 0380 	orr.w	r3, r3, #128	@ 0x80
 8023462:	81a3      	strh	r3, [r4, #12]
 8023464:	9b01      	ldr	r3, [sp, #4]
 8023466:	e9c4 0704 	strd	r0, r7, [r4, #16]
 802346a:	b15b      	cbz	r3, 8023484 <__smakebuf_r+0x70>
 802346c:	f9b4 100e 	ldrsh.w	r1, [r4, #14]
 8023470:	4630      	mov	r0, r6
 8023472:	f000 f81d 	bl	80234b0 <_isatty_r>
 8023476:	b128      	cbz	r0, 8023484 <__smakebuf_r+0x70>
 8023478:	89a3      	ldrh	r3, [r4, #12]
 802347a:	f023 0303 	bic.w	r3, r3, #3
 802347e:	f043 0301 	orr.w	r3, r3, #1
 8023482:	81a3      	strh	r3, [r4, #12]
 8023484:	89a3      	ldrh	r3, [r4, #12]
 8023486:	431d      	orrs	r5, r3
 8023488:	81a5      	strh	r5, [r4, #12]
 802348a:	e7cf      	b.n	802342c <__smakebuf_r+0x18>

0802348c <_fstat_r>:
 802348c:	b538      	push	{r3, r4, r5, lr}
 802348e:	4d07      	ldr	r5, [pc, #28]	@ (80234ac <_fstat_r+0x20>)
 8023490:	2300      	movs	r3, #0
 8023492:	4604      	mov	r4, r0
 8023494:	4608      	mov	r0, r1
 8023496:	4611      	mov	r1, r2
 8023498:	602b      	str	r3, [r5, #0]
 802349a:	f7de fcd1 	bl	8001e40 <_fstat>
 802349e:	1c43      	adds	r3, r0, #1
 80234a0:	d102      	bne.n	80234a8 <_fstat_r+0x1c>
 80234a2:	682b      	ldr	r3, [r5, #0]
 80234a4:	b103      	cbz	r3, 80234a8 <_fstat_r+0x1c>
 80234a6:	6023      	str	r3, [r4, #0]
 80234a8:	bd38      	pop	{r3, r4, r5, pc}
 80234aa:	bf00      	nop
 80234ac:	20003954 	.word	0x20003954

080234b0 <_isatty_r>:
 80234b0:	b538      	push	{r3, r4, r5, lr}
 80234b2:	4d06      	ldr	r5, [pc, #24]	@ (80234cc <_isatty_r+0x1c>)
 80234b4:	2300      	movs	r3, #0
 80234b6:	4604      	mov	r4, r0
 80234b8:	4608      	mov	r0, r1
 80234ba:	602b      	str	r3, [r5, #0]
 80234bc:	f7de fcd0 	bl	8001e60 <_isatty>
 80234c0:	1c43      	adds	r3, r0, #1
 80234c2:	d102      	bne.n	80234ca <_isatty_r+0x1a>
 80234c4:	682b      	ldr	r3, [r5, #0]
 80234c6:	b103      	cbz	r3, 80234ca <_isatty_r+0x1a>
 80234c8:	6023      	str	r3, [r4, #0]
 80234ca:	bd38      	pop	{r3, r4, r5, pc}
 80234cc:	20003954 	.word	0x20003954

080234d0 <_init>:
 80234d0:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 80234d2:	bf00      	nop
 80234d4:	bcf8      	pop	{r3, r4, r5, r6, r7}
 80234d6:	bc08      	pop	{r3}
 80234d8:	469e      	mov	lr, r3
 80234da:	4770      	bx	lr

080234dc <_fini>:
 80234dc:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 80234de:	bf00      	nop
 80234e0:	bcf8      	pop	{r3, r4, r5, r6, r7}
 80234e2:	bc08      	pop	{r3}
 80234e4:	469e      	mov	lr, r3
 80234e6:	4770      	bx	lr
