
f4_senior_design.elf:     file format elf32-littlearm

Sections:
Idx Name          Size      VMA       LMA       File off  Algn
  0 .isr_vector   000001c4  08000000  08000000  00001000  2**0
                  CONTENTS, ALLOC, LOAD, READONLY, DATA
  1 .text         00026a78  080001d0  080001d0  000011d0  2**4
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  2 .rodata       00002ce8  08026c48  08026c48  00027c48  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, DATA
  3 FontFlashSection 00006996  08029930  08029930  0002a930  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, DATA
  4 FontSearchFlashSection 000002b4  080302c8  080302c8  000312c8  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, DATA
  5 ExtFlashSection 0002fa30  0803057c  0803057c  0003157c  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, DATA
  6 TextFlashSection 00000120  0805ffac  0805ffac  00060fac  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, DATA
  7 .ARM.extab    00000000  080600cc  080600cc  00062320  2**0
                  CONTENTS
  8 .ARM          00000008  080600cc  080600cc  000610cc  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, DATA
  9 .preinit_array 00000000  080600d4  080600d4  00062320  2**0
                  CONTENTS, ALLOC, LOAD, DATA
 10 .init_array   00000018  080600d4  080600d4  000610d4  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, DATA
 11 .fini_array   0000000c  080600ec  080600ec  000610ec  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, DATA
 12 .data         0000010c  20000000  080600f8  00062000  2**2
                  CONTENTS, ALLOC, LOAD, DATA
 13 TouchGFX_ScratchbufferA 00000100  20000120  08060204  00062120  2**5
                  CONTENTS, ALLOC, LOAD, DATA
 14 TouchGFX_ScratchbufferB 00000100  20000220  08060304  00062220  2**5
                  CONTENTS, ALLOC, LOAD, DATA
 15 .bss          000039c0  20000320  08060404  00062320  2**2
                  ALLOC
 16 ._user_heap_stack 00000600  20003ce0  08060404  00062ce0  2**0
                  ALLOC
 17 .ARM.attributes 00000030  00000000  00000000  00062320  2**0
                  CONTENTS, READONLY
 18 .debug_info   000ccf43  00000000  00000000  00062350  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 19 .debug_abbrev 00013ede  00000000  00000000  0012f293  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 20 .debug_aranges 00003d50  00000000  00000000  00143178  2**3
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 21 .debug_rnglists 00002d74  00000000  00000000  00146ec8  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 22 .debug_macro  00031b78  00000000  00000000  00149c3c  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 23 .debug_line   000475c8  00000000  00000000  0017b7b4  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 24 .debug_str    00100b0e  00000000  00000000  001c2d7c  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 25 .comment      000000c2  00000000  00000000  002c388a  2**0
                  CONTENTS, READONLY
 26 .debug_frame  00011294  00000000  00000000  002c394c  2**2
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 27 .debug_line_str 0000006c  00000000  00000000  002d4be0  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS

Disassembly of section .text:

080001d0 <__do_global_dtors_aux>:
 80001d0:	b510      	push	{r4, lr}
 80001d2:	4c05      	ldr	r4, [pc, #20]	@ (80001e8 <__do_global_dtors_aux+0x18>)
 80001d4:	7823      	ldrb	r3, [r4, #0]
 80001d6:	b933      	cbnz	r3, 80001e6 <__do_global_dtors_aux+0x16>
 80001d8:	4b04      	ldr	r3, [pc, #16]	@ (80001ec <__do_global_dtors_aux+0x1c>)
 80001da:	b113      	cbz	r3, 80001e2 <__do_global_dtors_aux+0x12>
 80001dc:	4804      	ldr	r0, [pc, #16]	@ (80001f0 <__do_global_dtors_aux+0x20>)
 80001de:	f3af 8000 	nop.w
 80001e2:	2301      	movs	r3, #1
 80001e4:	7023      	strb	r3, [r4, #0]
 80001e6:	bd10      	pop	{r4, pc}
 80001e8:	20000320 	.word	0x20000320
 80001ec:	00000000 	.word	0x00000000
 80001f0:	08026c30 	.word	0x08026c30

080001f4 <frame_dummy>:
 80001f4:	b508      	push	{r3, lr}
 80001f6:	4b03      	ldr	r3, [pc, #12]	@ (8000204 <frame_dummy+0x10>)
 80001f8:	b11b      	cbz	r3, 8000202 <frame_dummy+0xe>
 80001fa:	4903      	ldr	r1, [pc, #12]	@ (8000208 <frame_dummy+0x14>)
 80001fc:	4803      	ldr	r0, [pc, #12]	@ (800020c <frame_dummy+0x18>)
 80001fe:	f3af 8000 	nop.w
 8000202:	bd08      	pop	{r3, pc}
 8000204:	00000000 	.word	0x00000000
 8000208:	20000324 	.word	0x20000324
 800020c:	08026c30 	.word	0x08026c30

08000210 <memchr>:
 8000210:	f001 01ff 	and.w	r1, r1, #255	@ 0xff
 8000214:	2a10      	cmp	r2, #16
 8000216:	db2b      	blt.n	8000270 <memchr+0x60>
 8000218:	f010 0f07 	tst.w	r0, #7
 800021c:	d008      	beq.n	8000230 <memchr+0x20>
 800021e:	f810 3b01 	ldrb.w	r3, [r0], #1
 8000222:	3a01      	subs	r2, #1
 8000224:	428b      	cmp	r3, r1
 8000226:	d02d      	beq.n	8000284 <memchr+0x74>
 8000228:	f010 0f07 	tst.w	r0, #7
 800022c:	b342      	cbz	r2, 8000280 <memchr+0x70>
 800022e:	d1f6      	bne.n	800021e <memchr+0xe>
 8000230:	b4f0      	push	{r4, r5, r6, r7}
 8000232:	ea41 2101 	orr.w	r1, r1, r1, lsl #8
 8000236:	ea41 4101 	orr.w	r1, r1, r1, lsl #16
 800023a:	f022 0407 	bic.w	r4, r2, #7
 800023e:	f07f 0700 	mvns.w	r7, #0
 8000242:	2300      	movs	r3, #0
 8000244:	e8f0 5602 	ldrd	r5, r6, [r0], #8
 8000248:	3c08      	subs	r4, #8
 800024a:	ea85 0501 	eor.w	r5, r5, r1
 800024e:	ea86 0601 	eor.w	r6, r6, r1
 8000252:	fa85 f547 	uadd8	r5, r5, r7
 8000256:	faa3 f587 	sel	r5, r3, r7
 800025a:	fa86 f647 	uadd8	r6, r6, r7
 800025e:	faa5 f687 	sel	r6, r5, r7
 8000262:	b98e      	cbnz	r6, 8000288 <memchr+0x78>
 8000264:	d1ee      	bne.n	8000244 <memchr+0x34>
 8000266:	bcf0      	pop	{r4, r5, r6, r7}
 8000268:	f001 01ff 	and.w	r1, r1, #255	@ 0xff
 800026c:	f002 0207 	and.w	r2, r2, #7
 8000270:	b132      	cbz	r2, 8000280 <memchr+0x70>
 8000272:	f810 3b01 	ldrb.w	r3, [r0], #1
 8000276:	3a01      	subs	r2, #1
 8000278:	ea83 0301 	eor.w	r3, r3, r1
 800027c:	b113      	cbz	r3, 8000284 <memchr+0x74>
 800027e:	d1f8      	bne.n	8000272 <memchr+0x62>
 8000280:	2000      	movs	r0, #0
 8000282:	4770      	bx	lr
 8000284:	3801      	subs	r0, #1
 8000286:	4770      	bx	lr
 8000288:	2d00      	cmp	r5, #0
 800028a:	bf06      	itte	eq
 800028c:	4635      	moveq	r5, r6
 800028e:	3803      	subeq	r0, #3
 8000290:	3807      	subne	r0, #7
 8000292:	f015 0f01 	tst.w	r5, #1
 8000296:	d107      	bne.n	80002a8 <memchr+0x98>
 8000298:	3001      	adds	r0, #1
 800029a:	f415 7f80 	tst.w	r5, #256	@ 0x100
 800029e:	bf02      	ittt	eq
 80002a0:	3001      	addeq	r0, #1
 80002a2:	f415 3fc0 	tsteq.w	r5, #98304	@ 0x18000
 80002a6:	3001      	addeq	r0, #1
 80002a8:	bcf0      	pop	{r4, r5, r6, r7}
 80002aa:	3801      	subs	r0, #1
 80002ac:	4770      	bx	lr
 80002ae:	bf00      	nop

080002b0 <__aeabi_drsub>:
 80002b0:	f081 4100 	eor.w	r1, r1, #2147483648	@ 0x80000000
 80002b4:	e002      	b.n	80002bc <__adddf3>
 80002b6:	bf00      	nop

080002b8 <__aeabi_dsub>:
 80002b8:	f083 4300 	eor.w	r3, r3, #2147483648	@ 0x80000000

080002bc <__adddf3>:
 80002bc:	b530      	push	{r4, r5, lr}
 80002be:	ea4f 0441 	mov.w	r4, r1, lsl #1
 80002c2:	ea4f 0543 	mov.w	r5, r3, lsl #1
 80002c6:	ea94 0f05 	teq	r4, r5
 80002ca:	bf08      	it	eq
 80002cc:	ea90 0f02 	teqeq	r0, r2
 80002d0:	bf1f      	itttt	ne
 80002d2:	ea54 0c00 	orrsne.w	ip, r4, r0
 80002d6:	ea55 0c02 	orrsne.w	ip, r5, r2
 80002da:	ea7f 5c64 	mvnsne.w	ip, r4, asr #21
 80002de:	ea7f 5c65 	mvnsne.w	ip, r5, asr #21
 80002e2:	f000 80e2 	beq.w	80004aa <__adddf3+0x1ee>
 80002e6:	ea4f 5454 	mov.w	r4, r4, lsr #21
 80002ea:	ebd4 5555 	rsbs	r5, r4, r5, lsr #21
 80002ee:	bfb8      	it	lt
 80002f0:	426d      	neglt	r5, r5
 80002f2:	dd0c      	ble.n	800030e <__adddf3+0x52>
 80002f4:	442c      	add	r4, r5
 80002f6:	ea80 0202 	eor.w	r2, r0, r2
 80002fa:	ea81 0303 	eor.w	r3, r1, r3
 80002fe:	ea82 0000 	eor.w	r0, r2, r0
 8000302:	ea83 0101 	eor.w	r1, r3, r1
 8000306:	ea80 0202 	eor.w	r2, r0, r2
 800030a:	ea81 0303 	eor.w	r3, r1, r3
 800030e:	2d36      	cmp	r5, #54	@ 0x36
 8000310:	bf88      	it	hi
 8000312:	bd30      	pophi	{r4, r5, pc}
 8000314:	f011 4f00 	tst.w	r1, #2147483648	@ 0x80000000
 8000318:	ea4f 3101 	mov.w	r1, r1, lsl #12
 800031c:	f44f 1c80 	mov.w	ip, #1048576	@ 0x100000
 8000320:	ea4c 3111 	orr.w	r1, ip, r1, lsr #12
 8000324:	d002      	beq.n	800032c <__adddf3+0x70>
 8000326:	4240      	negs	r0, r0
 8000328:	eb61 0141 	sbc.w	r1, r1, r1, lsl #1
 800032c:	f013 4f00 	tst.w	r3, #2147483648	@ 0x80000000
 8000330:	ea4f 3303 	mov.w	r3, r3, lsl #12
 8000334:	ea4c 3313 	orr.w	r3, ip, r3, lsr #12
 8000338:	d002      	beq.n	8000340 <__adddf3+0x84>
 800033a:	4252      	negs	r2, r2
 800033c:	eb63 0343 	sbc.w	r3, r3, r3, lsl #1
 8000340:	ea94 0f05 	teq	r4, r5
 8000344:	f000 80a7 	beq.w	8000496 <__adddf3+0x1da>
 8000348:	f1a4 0401 	sub.w	r4, r4, #1
 800034c:	f1d5 0e20 	rsbs	lr, r5, #32
 8000350:	db0d      	blt.n	800036e <__adddf3+0xb2>
 8000352:	fa02 fc0e 	lsl.w	ip, r2, lr
 8000356:	fa22 f205 	lsr.w	r2, r2, r5
 800035a:	1880      	adds	r0, r0, r2
 800035c:	f141 0100 	adc.w	r1, r1, #0
 8000360:	fa03 f20e 	lsl.w	r2, r3, lr
 8000364:	1880      	adds	r0, r0, r2
 8000366:	fa43 f305 	asr.w	r3, r3, r5
 800036a:	4159      	adcs	r1, r3
 800036c:	e00e      	b.n	800038c <__adddf3+0xd0>
 800036e:	f1a5 0520 	sub.w	r5, r5, #32
 8000372:	f10e 0e20 	add.w	lr, lr, #32
 8000376:	2a01      	cmp	r2, #1
 8000378:	fa03 fc0e 	lsl.w	ip, r3, lr
 800037c:	bf28      	it	cs
 800037e:	f04c 0c02 	orrcs.w	ip, ip, #2
 8000382:	fa43 f305 	asr.w	r3, r3, r5
 8000386:	18c0      	adds	r0, r0, r3
 8000388:	eb51 71e3 	adcs.w	r1, r1, r3, asr #31
 800038c:	f001 4500 	and.w	r5, r1, #2147483648	@ 0x80000000
 8000390:	d507      	bpl.n	80003a2 <__adddf3+0xe6>
 8000392:	f04f 0e00 	mov.w	lr, #0
 8000396:	f1dc 0c00 	rsbs	ip, ip, #0
 800039a:	eb7e 0000 	sbcs.w	r0, lr, r0
 800039e:	eb6e 0101 	sbc.w	r1, lr, r1
 80003a2:	f5b1 1f80 	cmp.w	r1, #1048576	@ 0x100000
 80003a6:	d31b      	bcc.n	80003e0 <__adddf3+0x124>
 80003a8:	f5b1 1f00 	cmp.w	r1, #2097152	@ 0x200000
 80003ac:	d30c      	bcc.n	80003c8 <__adddf3+0x10c>
 80003ae:	0849      	lsrs	r1, r1, #1
 80003b0:	ea5f 0030 	movs.w	r0, r0, rrx
 80003b4:	ea4f 0c3c 	mov.w	ip, ip, rrx
 80003b8:	f104 0401 	add.w	r4, r4, #1
 80003bc:	ea4f 5244 	mov.w	r2, r4, lsl #21
 80003c0:	f512 0f80 	cmn.w	r2, #4194304	@ 0x400000
 80003c4:	f080 809a 	bcs.w	80004fc <__adddf3+0x240>
 80003c8:	f1bc 4f00 	cmp.w	ip, #2147483648	@ 0x80000000
 80003cc:	bf08      	it	eq
 80003ce:	ea5f 0c50 	movseq.w	ip, r0, lsr #1
 80003d2:	f150 0000 	adcs.w	r0, r0, #0
 80003d6:	eb41 5104 	adc.w	r1, r1, r4, lsl #20
 80003da:	ea41 0105 	orr.w	r1, r1, r5
 80003de:	bd30      	pop	{r4, r5, pc}
 80003e0:	ea5f 0c4c 	movs.w	ip, ip, lsl #1
 80003e4:	4140      	adcs	r0, r0
 80003e6:	eb41 0101 	adc.w	r1, r1, r1
 80003ea:	3c01      	subs	r4, #1
 80003ec:	bf28      	it	cs
 80003ee:	f5b1 1f80 	cmpcs.w	r1, #1048576	@ 0x100000
 80003f2:	d2e9      	bcs.n	80003c8 <__adddf3+0x10c>
 80003f4:	f091 0f00 	teq	r1, #0
 80003f8:	bf04      	itt	eq
 80003fa:	4601      	moveq	r1, r0
 80003fc:	2000      	moveq	r0, #0
 80003fe:	fab1 f381 	clz	r3, r1
 8000402:	bf08      	it	eq
 8000404:	3320      	addeq	r3, #32
 8000406:	f1a3 030b 	sub.w	r3, r3, #11
 800040a:	f1b3 0220 	subs.w	r2, r3, #32
 800040e:	da0c      	bge.n	800042a <__adddf3+0x16e>
 8000410:	320c      	adds	r2, #12
 8000412:	dd08      	ble.n	8000426 <__adddf3+0x16a>
 8000414:	f102 0c14 	add.w	ip, r2, #20
 8000418:	f1c2 020c 	rsb	r2, r2, #12
 800041c:	fa01 f00c 	lsl.w	r0, r1, ip
 8000420:	fa21 f102 	lsr.w	r1, r1, r2
 8000424:	e00c      	b.n	8000440 <__adddf3+0x184>
 8000426:	f102 0214 	add.w	r2, r2, #20
 800042a:	bfd8      	it	le
 800042c:	f1c2 0c20 	rsble	ip, r2, #32
 8000430:	fa01 f102 	lsl.w	r1, r1, r2
 8000434:	fa20 fc0c 	lsr.w	ip, r0, ip
 8000438:	bfdc      	itt	le
 800043a:	ea41 010c 	orrle.w	r1, r1, ip
 800043e:	4090      	lslle	r0, r2
 8000440:	1ae4      	subs	r4, r4, r3
 8000442:	bfa2      	ittt	ge
 8000444:	eb01 5104 	addge.w	r1, r1, r4, lsl #20
 8000448:	4329      	orrge	r1, r5
 800044a:	bd30      	popge	{r4, r5, pc}
 800044c:	ea6f 0404 	mvn.w	r4, r4
 8000450:	3c1f      	subs	r4, #31
 8000452:	da1c      	bge.n	800048e <__adddf3+0x1d2>
 8000454:	340c      	adds	r4, #12
 8000456:	dc0e      	bgt.n	8000476 <__adddf3+0x1ba>
 8000458:	f104 0414 	add.w	r4, r4, #20
 800045c:	f1c4 0220 	rsb	r2, r4, #32
 8000460:	fa20 f004 	lsr.w	r0, r0, r4
 8000464:	fa01 f302 	lsl.w	r3, r1, r2
 8000468:	ea40 0003 	orr.w	r0, r0, r3
 800046c:	fa21 f304 	lsr.w	r3, r1, r4
 8000470:	ea45 0103 	orr.w	r1, r5, r3
 8000474:	bd30      	pop	{r4, r5, pc}
 8000476:	f1c4 040c 	rsb	r4, r4, #12
 800047a:	f1c4 0220 	rsb	r2, r4, #32
 800047e:	fa20 f002 	lsr.w	r0, r0, r2
 8000482:	fa01 f304 	lsl.w	r3, r1, r4
 8000486:	ea40 0003 	orr.w	r0, r0, r3
 800048a:	4629      	mov	r1, r5
 800048c:	bd30      	pop	{r4, r5, pc}
 800048e:	fa21 f004 	lsr.w	r0, r1, r4
 8000492:	4629      	mov	r1, r5
 8000494:	bd30      	pop	{r4, r5, pc}
 8000496:	f094 0f00 	teq	r4, #0
 800049a:	f483 1380 	eor.w	r3, r3, #1048576	@ 0x100000
 800049e:	bf06      	itte	eq
 80004a0:	f481 1180 	eoreq.w	r1, r1, #1048576	@ 0x100000
 80004a4:	3401      	addeq	r4, #1
 80004a6:	3d01      	subne	r5, #1
 80004a8:	e74e      	b.n	8000348 <__adddf3+0x8c>
 80004aa:	ea7f 5c64 	mvns.w	ip, r4, asr #21
 80004ae:	bf18      	it	ne
 80004b0:	ea7f 5c65 	mvnsne.w	ip, r5, asr #21
 80004b4:	d029      	beq.n	800050a <__adddf3+0x24e>
 80004b6:	ea94 0f05 	teq	r4, r5
 80004ba:	bf08      	it	eq
 80004bc:	ea90 0f02 	teqeq	r0, r2
 80004c0:	d005      	beq.n	80004ce <__adddf3+0x212>
 80004c2:	ea54 0c00 	orrs.w	ip, r4, r0
 80004c6:	bf04      	itt	eq
 80004c8:	4619      	moveq	r1, r3
 80004ca:	4610      	moveq	r0, r2
 80004cc:	bd30      	pop	{r4, r5, pc}
 80004ce:	ea91 0f03 	teq	r1, r3
 80004d2:	bf1e      	ittt	ne
 80004d4:	2100      	movne	r1, #0
 80004d6:	2000      	movne	r0, #0
 80004d8:	bd30      	popne	{r4, r5, pc}
 80004da:	ea5f 5c54 	movs.w	ip, r4, lsr #21
 80004de:	d105      	bne.n	80004ec <__adddf3+0x230>
 80004e0:	0040      	lsls	r0, r0, #1
 80004e2:	4149      	adcs	r1, r1
 80004e4:	bf28      	it	cs
 80004e6:	f041 4100 	orrcs.w	r1, r1, #2147483648	@ 0x80000000
 80004ea:	bd30      	pop	{r4, r5, pc}
 80004ec:	f514 0480 	adds.w	r4, r4, #4194304	@ 0x400000
 80004f0:	bf3c      	itt	cc
 80004f2:	f501 1180 	addcc.w	r1, r1, #1048576	@ 0x100000
 80004f6:	bd30      	popcc	{r4, r5, pc}
 80004f8:	f001 4500 	and.w	r5, r1, #2147483648	@ 0x80000000
 80004fc:	f045 41fe 	orr.w	r1, r5, #2130706432	@ 0x7f000000
 8000500:	f441 0170 	orr.w	r1, r1, #15728640	@ 0xf00000
 8000504:	f04f 0000 	mov.w	r0, #0
 8000508:	bd30      	pop	{r4, r5, pc}
 800050a:	ea7f 5c64 	mvns.w	ip, r4, asr #21
 800050e:	bf1a      	itte	ne
 8000510:	4619      	movne	r1, r3
 8000512:	4610      	movne	r0, r2
 8000514:	ea7f 5c65 	mvnseq.w	ip, r5, asr #21
 8000518:	bf1c      	itt	ne
 800051a:	460b      	movne	r3, r1
 800051c:	4602      	movne	r2, r0
 800051e:	ea50 3401 	orrs.w	r4, r0, r1, lsl #12
 8000522:	bf06      	itte	eq
 8000524:	ea52 3503 	orrseq.w	r5, r2, r3, lsl #12
 8000528:	ea91 0f03 	teqeq	r1, r3
 800052c:	f441 2100 	orrne.w	r1, r1, #524288	@ 0x80000
 8000530:	bd30      	pop	{r4, r5, pc}
 8000532:	bf00      	nop

08000534 <__aeabi_ui2d>:
 8000534:	f090 0f00 	teq	r0, #0
 8000538:	bf04      	itt	eq
 800053a:	2100      	moveq	r1, #0
 800053c:	4770      	bxeq	lr
 800053e:	b530      	push	{r4, r5, lr}
 8000540:	f44f 6480 	mov.w	r4, #1024	@ 0x400
 8000544:	f104 0432 	add.w	r4, r4, #50	@ 0x32
 8000548:	f04f 0500 	mov.w	r5, #0
 800054c:	f04f 0100 	mov.w	r1, #0
 8000550:	e750      	b.n	80003f4 <__adddf3+0x138>
 8000552:	bf00      	nop

08000554 <__aeabi_i2d>:
 8000554:	f090 0f00 	teq	r0, #0
 8000558:	bf04      	itt	eq
 800055a:	2100      	moveq	r1, #0
 800055c:	4770      	bxeq	lr
 800055e:	b530      	push	{r4, r5, lr}
 8000560:	f44f 6480 	mov.w	r4, #1024	@ 0x400
 8000564:	f104 0432 	add.w	r4, r4, #50	@ 0x32
 8000568:	f010 4500 	ands.w	r5, r0, #2147483648	@ 0x80000000
 800056c:	bf48      	it	mi
 800056e:	4240      	negmi	r0, r0
 8000570:	f04f 0100 	mov.w	r1, #0
 8000574:	e73e      	b.n	80003f4 <__adddf3+0x138>
 8000576:	bf00      	nop

08000578 <__aeabi_f2d>:
 8000578:	0042      	lsls	r2, r0, #1
 800057a:	ea4f 01e2 	mov.w	r1, r2, asr #3
 800057e:	ea4f 0131 	mov.w	r1, r1, rrx
 8000582:	ea4f 7002 	mov.w	r0, r2, lsl #28
 8000586:	bf1f      	itttt	ne
 8000588:	f012 437f 	andsne.w	r3, r2, #4278190080	@ 0xff000000
 800058c:	f093 4f7f 	teqne	r3, #4278190080	@ 0xff000000
 8000590:	f081 5160 	eorne.w	r1, r1, #939524096	@ 0x38000000
 8000594:	4770      	bxne	lr
 8000596:	f032 427f 	bics.w	r2, r2, #4278190080	@ 0xff000000
 800059a:	bf08      	it	eq
 800059c:	4770      	bxeq	lr
 800059e:	f093 4f7f 	teq	r3, #4278190080	@ 0xff000000
 80005a2:	bf04      	itt	eq
 80005a4:	f441 2100 	orreq.w	r1, r1, #524288	@ 0x80000
 80005a8:	4770      	bxeq	lr
 80005aa:	b530      	push	{r4, r5, lr}
 80005ac:	f44f 7460 	mov.w	r4, #896	@ 0x380
 80005b0:	f001 4500 	and.w	r5, r1, #2147483648	@ 0x80000000
 80005b4:	f021 4100 	bic.w	r1, r1, #2147483648	@ 0x80000000
 80005b8:	e71c      	b.n	80003f4 <__adddf3+0x138>
 80005ba:	bf00      	nop

080005bc <__aeabi_ul2d>:
 80005bc:	ea50 0201 	orrs.w	r2, r0, r1
 80005c0:	bf08      	it	eq
 80005c2:	4770      	bxeq	lr
 80005c4:	b530      	push	{r4, r5, lr}
 80005c6:	f04f 0500 	mov.w	r5, #0
 80005ca:	e00a      	b.n	80005e2 <__aeabi_l2d+0x16>

080005cc <__aeabi_l2d>:
 80005cc:	ea50 0201 	orrs.w	r2, r0, r1
 80005d0:	bf08      	it	eq
 80005d2:	4770      	bxeq	lr
 80005d4:	b530      	push	{r4, r5, lr}
 80005d6:	f011 4500 	ands.w	r5, r1, #2147483648	@ 0x80000000
 80005da:	d502      	bpl.n	80005e2 <__aeabi_l2d+0x16>
 80005dc:	4240      	negs	r0, r0
 80005de:	eb61 0141 	sbc.w	r1, r1, r1, lsl #1
 80005e2:	f44f 6480 	mov.w	r4, #1024	@ 0x400
 80005e6:	f104 0432 	add.w	r4, r4, #50	@ 0x32
 80005ea:	ea5f 5c91 	movs.w	ip, r1, lsr #22
 80005ee:	f43f aed8 	beq.w	80003a2 <__adddf3+0xe6>
 80005f2:	f04f 0203 	mov.w	r2, #3
 80005f6:	ea5f 0cdc 	movs.w	ip, ip, lsr #3
 80005fa:	bf18      	it	ne
 80005fc:	3203      	addne	r2, #3
 80005fe:	ea5f 0cdc 	movs.w	ip, ip, lsr #3
 8000602:	bf18      	it	ne
 8000604:	3203      	addne	r2, #3
 8000606:	eb02 02dc 	add.w	r2, r2, ip, lsr #3
 800060a:	f1c2 0320 	rsb	r3, r2, #32
 800060e:	fa00 fc03 	lsl.w	ip, r0, r3
 8000612:	fa20 f002 	lsr.w	r0, r0, r2
 8000616:	fa01 fe03 	lsl.w	lr, r1, r3
 800061a:	ea40 000e 	orr.w	r0, r0, lr
 800061e:	fa21 f102 	lsr.w	r1, r1, r2
 8000622:	4414      	add	r4, r2
 8000624:	e6bd      	b.n	80003a2 <__adddf3+0xe6>
 8000626:	bf00      	nop

08000628 <__aeabi_dmul>:
 8000628:	b570      	push	{r4, r5, r6, lr}
 800062a:	f04f 0cff 	mov.w	ip, #255	@ 0xff
 800062e:	f44c 6ce0 	orr.w	ip, ip, #1792	@ 0x700
 8000632:	ea1c 5411 	ands.w	r4, ip, r1, lsr #20
 8000636:	bf1d      	ittte	ne
 8000638:	ea1c 5513 	andsne.w	r5, ip, r3, lsr #20
 800063c:	ea94 0f0c 	teqne	r4, ip
 8000640:	ea95 0f0c 	teqne	r5, ip
 8000644:	f000 f8de 	bleq	8000804 <__aeabi_dmul+0x1dc>
 8000648:	442c      	add	r4, r5
 800064a:	ea81 0603 	eor.w	r6, r1, r3
 800064e:	ea21 514c 	bic.w	r1, r1, ip, lsl #21
 8000652:	ea23 534c 	bic.w	r3, r3, ip, lsl #21
 8000656:	ea50 3501 	orrs.w	r5, r0, r1, lsl #12
 800065a:	bf18      	it	ne
 800065c:	ea52 3503 	orrsne.w	r5, r2, r3, lsl #12
 8000660:	f441 1180 	orr.w	r1, r1, #1048576	@ 0x100000
 8000664:	f443 1380 	orr.w	r3, r3, #1048576	@ 0x100000
 8000668:	d038      	beq.n	80006dc <__aeabi_dmul+0xb4>
 800066a:	fba0 ce02 	umull	ip, lr, r0, r2
 800066e:	f04f 0500 	mov.w	r5, #0
 8000672:	fbe1 e502 	umlal	lr, r5, r1, r2
 8000676:	f006 4200 	and.w	r2, r6, #2147483648	@ 0x80000000
 800067a:	fbe0 e503 	umlal	lr, r5, r0, r3
 800067e:	f04f 0600 	mov.w	r6, #0
 8000682:	fbe1 5603 	umlal	r5, r6, r1, r3
 8000686:	f09c 0f00 	teq	ip, #0
 800068a:	bf18      	it	ne
 800068c:	f04e 0e01 	orrne.w	lr, lr, #1
 8000690:	f1a4 04ff 	sub.w	r4, r4, #255	@ 0xff
 8000694:	f5b6 7f00 	cmp.w	r6, #512	@ 0x200
 8000698:	f564 7440 	sbc.w	r4, r4, #768	@ 0x300
 800069c:	d204      	bcs.n	80006a8 <__aeabi_dmul+0x80>
 800069e:	ea5f 0e4e 	movs.w	lr, lr, lsl #1
 80006a2:	416d      	adcs	r5, r5
 80006a4:	eb46 0606 	adc.w	r6, r6, r6
 80006a8:	ea42 21c6 	orr.w	r1, r2, r6, lsl #11
 80006ac:	ea41 5155 	orr.w	r1, r1, r5, lsr #21
 80006b0:	ea4f 20c5 	mov.w	r0, r5, lsl #11
 80006b4:	ea40 505e 	orr.w	r0, r0, lr, lsr #21
 80006b8:	ea4f 2ece 	mov.w	lr, lr, lsl #11
 80006bc:	f1b4 0cfd 	subs.w	ip, r4, #253	@ 0xfd
 80006c0:	bf88      	it	hi
 80006c2:	f5bc 6fe0 	cmphi.w	ip, #1792	@ 0x700
 80006c6:	d81e      	bhi.n	8000706 <__aeabi_dmul+0xde>
 80006c8:	f1be 4f00 	cmp.w	lr, #2147483648	@ 0x80000000
 80006cc:	bf08      	it	eq
 80006ce:	ea5f 0e50 	movseq.w	lr, r0, lsr #1
 80006d2:	f150 0000 	adcs.w	r0, r0, #0
 80006d6:	eb41 5104 	adc.w	r1, r1, r4, lsl #20
 80006da:	bd70      	pop	{r4, r5, r6, pc}
 80006dc:	f006 4600 	and.w	r6, r6, #2147483648	@ 0x80000000
 80006e0:	ea46 0101 	orr.w	r1, r6, r1
 80006e4:	ea40 0002 	orr.w	r0, r0, r2
 80006e8:	ea81 0103 	eor.w	r1, r1, r3
 80006ec:	ebb4 045c 	subs.w	r4, r4, ip, lsr #1
 80006f0:	bfc2      	ittt	gt
 80006f2:	ebd4 050c 	rsbsgt	r5, r4, ip
 80006f6:	ea41 5104 	orrgt.w	r1, r1, r4, lsl #20
 80006fa:	bd70      	popgt	{r4, r5, r6, pc}
 80006fc:	f441 1180 	orr.w	r1, r1, #1048576	@ 0x100000
 8000700:	f04f 0e00 	mov.w	lr, #0
 8000704:	3c01      	subs	r4, #1
 8000706:	f300 80ab 	bgt.w	8000860 <__aeabi_dmul+0x238>
 800070a:	f114 0f36 	cmn.w	r4, #54	@ 0x36
 800070e:	bfde      	ittt	le
 8000710:	2000      	movle	r0, #0
 8000712:	f001 4100 	andle.w	r1, r1, #2147483648	@ 0x80000000
 8000716:	bd70      	pople	{r4, r5, r6, pc}
 8000718:	f1c4 0400 	rsb	r4, r4, #0
 800071c:	3c20      	subs	r4, #32
 800071e:	da35      	bge.n	800078c <__aeabi_dmul+0x164>
 8000720:	340c      	adds	r4, #12
 8000722:	dc1b      	bgt.n	800075c <__aeabi_dmul+0x134>
 8000724:	f104 0414 	add.w	r4, r4, #20
 8000728:	f1c4 0520 	rsb	r5, r4, #32
 800072c:	fa00 f305 	lsl.w	r3, r0, r5
 8000730:	fa20 f004 	lsr.w	r0, r0, r4
 8000734:	fa01 f205 	lsl.w	r2, r1, r5
 8000738:	ea40 0002 	orr.w	r0, r0, r2
 800073c:	f001 4200 	and.w	r2, r1, #2147483648	@ 0x80000000
 8000740:	f021 4100 	bic.w	r1, r1, #2147483648	@ 0x80000000
 8000744:	eb10 70d3 	adds.w	r0, r0, r3, lsr #31
 8000748:	fa21 f604 	lsr.w	r6, r1, r4
 800074c:	eb42 0106 	adc.w	r1, r2, r6
 8000750:	ea5e 0e43 	orrs.w	lr, lr, r3, lsl #1
 8000754:	bf08      	it	eq
 8000756:	ea20 70d3 	biceq.w	r0, r0, r3, lsr #31
 800075a:	bd70      	pop	{r4, r5, r6, pc}
 800075c:	f1c4 040c 	rsb	r4, r4, #12
 8000760:	f1c4 0520 	rsb	r5, r4, #32
 8000764:	fa00 f304 	lsl.w	r3, r0, r4
 8000768:	fa20 f005 	lsr.w	r0, r0, r5
 800076c:	fa01 f204 	lsl.w	r2, r1, r4
 8000770:	ea40 0002 	orr.w	r0, r0, r2
 8000774:	f001 4100 	and.w	r1, r1, #2147483648	@ 0x80000000
 8000778:	eb10 70d3 	adds.w	r0, r0, r3, lsr #31
 800077c:	f141 0100 	adc.w	r1, r1, #0
 8000780:	ea5e 0e43 	orrs.w	lr, lr, r3, lsl #1
 8000784:	bf08      	it	eq
 8000786:	ea20 70d3 	biceq.w	r0, r0, r3, lsr #31
 800078a:	bd70      	pop	{r4, r5, r6, pc}
 800078c:	f1c4 0520 	rsb	r5, r4, #32
 8000790:	fa00 f205 	lsl.w	r2, r0, r5
 8000794:	ea4e 0e02 	orr.w	lr, lr, r2
 8000798:	fa20 f304 	lsr.w	r3, r0, r4
 800079c:	fa01 f205 	lsl.w	r2, r1, r5
 80007a0:	ea43 0302 	orr.w	r3, r3, r2
 80007a4:	fa21 f004 	lsr.w	r0, r1, r4
 80007a8:	f001 4100 	and.w	r1, r1, #2147483648	@ 0x80000000
 80007ac:	fa21 f204 	lsr.w	r2, r1, r4
 80007b0:	ea20 0002 	bic.w	r0, r0, r2
 80007b4:	eb00 70d3 	add.w	r0, r0, r3, lsr #31
 80007b8:	ea5e 0e43 	orrs.w	lr, lr, r3, lsl #1
 80007bc:	bf08      	it	eq
 80007be:	ea20 70d3 	biceq.w	r0, r0, r3, lsr #31
 80007c2:	bd70      	pop	{r4, r5, r6, pc}
 80007c4:	f094 0f00 	teq	r4, #0
 80007c8:	d10f      	bne.n	80007ea <__aeabi_dmul+0x1c2>
 80007ca:	f001 4600 	and.w	r6, r1, #2147483648	@ 0x80000000
 80007ce:	0040      	lsls	r0, r0, #1
 80007d0:	eb41 0101 	adc.w	r1, r1, r1
 80007d4:	f411 1f80 	tst.w	r1, #1048576	@ 0x100000
 80007d8:	bf08      	it	eq
 80007da:	3c01      	subeq	r4, #1
 80007dc:	d0f7      	beq.n	80007ce <__aeabi_dmul+0x1a6>
 80007de:	ea41 0106 	orr.w	r1, r1, r6
 80007e2:	f095 0f00 	teq	r5, #0
 80007e6:	bf18      	it	ne
 80007e8:	4770      	bxne	lr
 80007ea:	f003 4600 	and.w	r6, r3, #2147483648	@ 0x80000000
 80007ee:	0052      	lsls	r2, r2, #1
 80007f0:	eb43 0303 	adc.w	r3, r3, r3
 80007f4:	f413 1f80 	tst.w	r3, #1048576	@ 0x100000
 80007f8:	bf08      	it	eq
 80007fa:	3d01      	subeq	r5, #1
 80007fc:	d0f7      	beq.n	80007ee <__aeabi_dmul+0x1c6>
 80007fe:	ea43 0306 	orr.w	r3, r3, r6
 8000802:	4770      	bx	lr
 8000804:	ea94 0f0c 	teq	r4, ip
 8000808:	ea0c 5513 	and.w	r5, ip, r3, lsr #20
 800080c:	bf18      	it	ne
 800080e:	ea95 0f0c 	teqne	r5, ip
 8000812:	d00c      	beq.n	800082e <__aeabi_dmul+0x206>
 8000814:	ea50 0641 	orrs.w	r6, r0, r1, lsl #1
 8000818:	bf18      	it	ne
 800081a:	ea52 0643 	orrsne.w	r6, r2, r3, lsl #1
 800081e:	d1d1      	bne.n	80007c4 <__aeabi_dmul+0x19c>
 8000820:	ea81 0103 	eor.w	r1, r1, r3
 8000824:	f001 4100 	and.w	r1, r1, #2147483648	@ 0x80000000
 8000828:	f04f 0000 	mov.w	r0, #0
 800082c:	bd70      	pop	{r4, r5, r6, pc}
 800082e:	ea50 0641 	orrs.w	r6, r0, r1, lsl #1
 8000832:	bf06      	itte	eq
 8000834:	4610      	moveq	r0, r2
 8000836:	4619      	moveq	r1, r3
 8000838:	ea52 0643 	orrsne.w	r6, r2, r3, lsl #1
 800083c:	d019      	beq.n	8000872 <__aeabi_dmul+0x24a>
 800083e:	ea94 0f0c 	teq	r4, ip
 8000842:	d102      	bne.n	800084a <__aeabi_dmul+0x222>
 8000844:	ea50 3601 	orrs.w	r6, r0, r1, lsl #12
 8000848:	d113      	bne.n	8000872 <__aeabi_dmul+0x24a>
 800084a:	ea95 0f0c 	teq	r5, ip
 800084e:	d105      	bne.n	800085c <__aeabi_dmul+0x234>
 8000850:	ea52 3603 	orrs.w	r6, r2, r3, lsl #12
 8000854:	bf1c      	itt	ne
 8000856:	4610      	movne	r0, r2
 8000858:	4619      	movne	r1, r3
 800085a:	d10a      	bne.n	8000872 <__aeabi_dmul+0x24a>
 800085c:	ea81 0103 	eor.w	r1, r1, r3
 8000860:	f001 4100 	and.w	r1, r1, #2147483648	@ 0x80000000
 8000864:	f041 41fe 	orr.w	r1, r1, #2130706432	@ 0x7f000000
 8000868:	f441 0170 	orr.w	r1, r1, #15728640	@ 0xf00000
 800086c:	f04f 0000 	mov.w	r0, #0
 8000870:	bd70      	pop	{r4, r5, r6, pc}
 8000872:	f041 41fe 	orr.w	r1, r1, #2130706432	@ 0x7f000000
 8000876:	f441 0178 	orr.w	r1, r1, #16252928	@ 0xf80000
 800087a:	bd70      	pop	{r4, r5, r6, pc}

0800087c <__aeabi_ddiv>:
 800087c:	b570      	push	{r4, r5, r6, lr}
 800087e:	f04f 0cff 	mov.w	ip, #255	@ 0xff
 8000882:	f44c 6ce0 	orr.w	ip, ip, #1792	@ 0x700
 8000886:	ea1c 5411 	ands.w	r4, ip, r1, lsr #20
 800088a:	bf1d      	ittte	ne
 800088c:	ea1c 5513 	andsne.w	r5, ip, r3, lsr #20
 8000890:	ea94 0f0c 	teqne	r4, ip
 8000894:	ea95 0f0c 	teqne	r5, ip
 8000898:	f000 f8a7 	bleq	80009ea <__aeabi_ddiv+0x16e>
 800089c:	eba4 0405 	sub.w	r4, r4, r5
 80008a0:	ea81 0e03 	eor.w	lr, r1, r3
 80008a4:	ea52 3503 	orrs.w	r5, r2, r3, lsl #12
 80008a8:	ea4f 3101 	mov.w	r1, r1, lsl #12
 80008ac:	f000 8088 	beq.w	80009c0 <__aeabi_ddiv+0x144>
 80008b0:	ea4f 3303 	mov.w	r3, r3, lsl #12
 80008b4:	f04f 5580 	mov.w	r5, #268435456	@ 0x10000000
 80008b8:	ea45 1313 	orr.w	r3, r5, r3, lsr #4
 80008bc:	ea43 6312 	orr.w	r3, r3, r2, lsr #24
 80008c0:	ea4f 2202 	mov.w	r2, r2, lsl #8
 80008c4:	ea45 1511 	orr.w	r5, r5, r1, lsr #4
 80008c8:	ea45 6510 	orr.w	r5, r5, r0, lsr #24
 80008cc:	ea4f 2600 	mov.w	r6, r0, lsl #8
 80008d0:	f00e 4100 	and.w	r1, lr, #2147483648	@ 0x80000000
 80008d4:	429d      	cmp	r5, r3
 80008d6:	bf08      	it	eq
 80008d8:	4296      	cmpeq	r6, r2
 80008da:	f144 04fd 	adc.w	r4, r4, #253	@ 0xfd
 80008de:	f504 7440 	add.w	r4, r4, #768	@ 0x300
 80008e2:	d202      	bcs.n	80008ea <__aeabi_ddiv+0x6e>
 80008e4:	085b      	lsrs	r3, r3, #1
 80008e6:	ea4f 0232 	mov.w	r2, r2, rrx
 80008ea:	1ab6      	subs	r6, r6, r2
 80008ec:	eb65 0503 	sbc.w	r5, r5, r3
 80008f0:	085b      	lsrs	r3, r3, #1
 80008f2:	ea4f 0232 	mov.w	r2, r2, rrx
 80008f6:	f44f 1080 	mov.w	r0, #1048576	@ 0x100000
 80008fa:	f44f 2c00 	mov.w	ip, #524288	@ 0x80000
 80008fe:	ebb6 0e02 	subs.w	lr, r6, r2
 8000902:	eb75 0e03 	sbcs.w	lr, r5, r3
 8000906:	bf22      	ittt	cs
 8000908:	1ab6      	subcs	r6, r6, r2
 800090a:	4675      	movcs	r5, lr
 800090c:	ea40 000c 	orrcs.w	r0, r0, ip
 8000910:	085b      	lsrs	r3, r3, #1
 8000912:	ea4f 0232 	mov.w	r2, r2, rrx
 8000916:	ebb6 0e02 	subs.w	lr, r6, r2
 800091a:	eb75 0e03 	sbcs.w	lr, r5, r3
 800091e:	bf22      	ittt	cs
 8000920:	1ab6      	subcs	r6, r6, r2
 8000922:	4675      	movcs	r5, lr
 8000924:	ea40 005c 	orrcs.w	r0, r0, ip, lsr #1
 8000928:	085b      	lsrs	r3, r3, #1
 800092a:	ea4f 0232 	mov.w	r2, r2, rrx
 800092e:	ebb6 0e02 	subs.w	lr, r6, r2
 8000932:	eb75 0e03 	sbcs.w	lr, r5, r3
 8000936:	bf22      	ittt	cs
 8000938:	1ab6      	subcs	r6, r6, r2
 800093a:	4675      	movcs	r5, lr
 800093c:	ea40 009c 	orrcs.w	r0, r0, ip, lsr #2
 8000940:	085b      	lsrs	r3, r3, #1
 8000942:	ea4f 0232 	mov.w	r2, r2, rrx
 8000946:	ebb6 0e02 	subs.w	lr, r6, r2
 800094a:	eb75 0e03 	sbcs.w	lr, r5, r3
 800094e:	bf22      	ittt	cs
 8000950:	1ab6      	subcs	r6, r6, r2
 8000952:	4675      	movcs	r5, lr
 8000954:	ea40 00dc 	orrcs.w	r0, r0, ip, lsr #3
 8000958:	ea55 0e06 	orrs.w	lr, r5, r6
 800095c:	d018      	beq.n	8000990 <__aeabi_ddiv+0x114>
 800095e:	ea4f 1505 	mov.w	r5, r5, lsl #4
 8000962:	ea45 7516 	orr.w	r5, r5, r6, lsr #28
 8000966:	ea4f 1606 	mov.w	r6, r6, lsl #4
 800096a:	ea4f 03c3 	mov.w	r3, r3, lsl #3
 800096e:	ea43 7352 	orr.w	r3, r3, r2, lsr #29
 8000972:	ea4f 02c2 	mov.w	r2, r2, lsl #3
 8000976:	ea5f 1c1c 	movs.w	ip, ip, lsr #4
 800097a:	d1c0      	bne.n	80008fe <__aeabi_ddiv+0x82>
 800097c:	f411 1f80 	tst.w	r1, #1048576	@ 0x100000
 8000980:	d10b      	bne.n	800099a <__aeabi_ddiv+0x11e>
 8000982:	ea41 0100 	orr.w	r1, r1, r0
 8000986:	f04f 0000 	mov.w	r0, #0
 800098a:	f04f 4c00 	mov.w	ip, #2147483648	@ 0x80000000
 800098e:	e7b6      	b.n	80008fe <__aeabi_ddiv+0x82>
 8000990:	f411 1f80 	tst.w	r1, #1048576	@ 0x100000
 8000994:	bf04      	itt	eq
 8000996:	4301      	orreq	r1, r0
 8000998:	2000      	moveq	r0, #0
 800099a:	f1b4 0cfd 	subs.w	ip, r4, #253	@ 0xfd
 800099e:	bf88      	it	hi
 80009a0:	f5bc 6fe0 	cmphi.w	ip, #1792	@ 0x700
 80009a4:	f63f aeaf 	bhi.w	8000706 <__aeabi_dmul+0xde>
 80009a8:	ebb5 0c03 	subs.w	ip, r5, r3
 80009ac:	bf04      	itt	eq
 80009ae:	ebb6 0c02 	subseq.w	ip, r6, r2
 80009b2:	ea5f 0c50 	movseq.w	ip, r0, lsr #1
 80009b6:	f150 0000 	adcs.w	r0, r0, #0
 80009ba:	eb41 5104 	adc.w	r1, r1, r4, lsl #20
 80009be:	bd70      	pop	{r4, r5, r6, pc}
 80009c0:	f00e 4e00 	and.w	lr, lr, #2147483648	@ 0x80000000
 80009c4:	ea4e 3111 	orr.w	r1, lr, r1, lsr #12
 80009c8:	eb14 045c 	adds.w	r4, r4, ip, lsr #1
 80009cc:	bfc2      	ittt	gt
 80009ce:	ebd4 050c 	rsbsgt	r5, r4, ip
 80009d2:	ea41 5104 	orrgt.w	r1, r1, r4, lsl #20
 80009d6:	bd70      	popgt	{r4, r5, r6, pc}
 80009d8:	f441 1180 	orr.w	r1, r1, #1048576	@ 0x100000
 80009dc:	f04f 0e00 	mov.w	lr, #0
 80009e0:	3c01      	subs	r4, #1
 80009e2:	e690      	b.n	8000706 <__aeabi_dmul+0xde>
 80009e4:	ea45 0e06 	orr.w	lr, r5, r6
 80009e8:	e68d      	b.n	8000706 <__aeabi_dmul+0xde>
 80009ea:	ea0c 5513 	and.w	r5, ip, r3, lsr #20
 80009ee:	ea94 0f0c 	teq	r4, ip
 80009f2:	bf08      	it	eq
 80009f4:	ea95 0f0c 	teqeq	r5, ip
 80009f8:	f43f af3b 	beq.w	8000872 <__aeabi_dmul+0x24a>
 80009fc:	ea94 0f0c 	teq	r4, ip
 8000a00:	d10a      	bne.n	8000a18 <__aeabi_ddiv+0x19c>
 8000a02:	ea50 3401 	orrs.w	r4, r0, r1, lsl #12
 8000a06:	f47f af34 	bne.w	8000872 <__aeabi_dmul+0x24a>
 8000a0a:	ea95 0f0c 	teq	r5, ip
 8000a0e:	f47f af25 	bne.w	800085c <__aeabi_dmul+0x234>
 8000a12:	4610      	mov	r0, r2
 8000a14:	4619      	mov	r1, r3
 8000a16:	e72c      	b.n	8000872 <__aeabi_dmul+0x24a>
 8000a18:	ea95 0f0c 	teq	r5, ip
 8000a1c:	d106      	bne.n	8000a2c <__aeabi_ddiv+0x1b0>
 8000a1e:	ea52 3503 	orrs.w	r5, r2, r3, lsl #12
 8000a22:	f43f aefd 	beq.w	8000820 <__aeabi_dmul+0x1f8>
 8000a26:	4610      	mov	r0, r2
 8000a28:	4619      	mov	r1, r3
 8000a2a:	e722      	b.n	8000872 <__aeabi_dmul+0x24a>
 8000a2c:	ea50 0641 	orrs.w	r6, r0, r1, lsl #1
 8000a30:	bf18      	it	ne
 8000a32:	ea52 0643 	orrsne.w	r6, r2, r3, lsl #1
 8000a36:	f47f aec5 	bne.w	80007c4 <__aeabi_dmul+0x19c>
 8000a3a:	ea50 0441 	orrs.w	r4, r0, r1, lsl #1
 8000a3e:	f47f af0d 	bne.w	800085c <__aeabi_dmul+0x234>
 8000a42:	ea52 0543 	orrs.w	r5, r2, r3, lsl #1
 8000a46:	f47f aeeb 	bne.w	8000820 <__aeabi_dmul+0x1f8>
 8000a4a:	e712      	b.n	8000872 <__aeabi_dmul+0x24a>

08000a4c <__gedf2>:
 8000a4c:	f04f 3cff 	mov.w	ip, #4294967295
 8000a50:	e006      	b.n	8000a60 <__cmpdf2+0x4>
 8000a52:	bf00      	nop

08000a54 <__ledf2>:
 8000a54:	f04f 0c01 	mov.w	ip, #1
 8000a58:	e002      	b.n	8000a60 <__cmpdf2+0x4>
 8000a5a:	bf00      	nop

08000a5c <__cmpdf2>:
 8000a5c:	f04f 0c01 	mov.w	ip, #1
 8000a60:	f84d cd04 	str.w	ip, [sp, #-4]!
 8000a64:	ea4f 0c41 	mov.w	ip, r1, lsl #1
 8000a68:	ea7f 5c6c 	mvns.w	ip, ip, asr #21
 8000a6c:	ea4f 0c43 	mov.w	ip, r3, lsl #1
 8000a70:	bf18      	it	ne
 8000a72:	ea7f 5c6c 	mvnsne.w	ip, ip, asr #21
 8000a76:	d01b      	beq.n	8000ab0 <__cmpdf2+0x54>
 8000a78:	b001      	add	sp, #4
 8000a7a:	ea50 0c41 	orrs.w	ip, r0, r1, lsl #1
 8000a7e:	bf0c      	ite	eq
 8000a80:	ea52 0c43 	orrseq.w	ip, r2, r3, lsl #1
 8000a84:	ea91 0f03 	teqne	r1, r3
 8000a88:	bf02      	ittt	eq
 8000a8a:	ea90 0f02 	teqeq	r0, r2
 8000a8e:	2000      	moveq	r0, #0
 8000a90:	4770      	bxeq	lr
 8000a92:	f110 0f00 	cmn.w	r0, #0
 8000a96:	ea91 0f03 	teq	r1, r3
 8000a9a:	bf58      	it	pl
 8000a9c:	4299      	cmppl	r1, r3
 8000a9e:	bf08      	it	eq
 8000aa0:	4290      	cmpeq	r0, r2
 8000aa2:	bf2c      	ite	cs
 8000aa4:	17d8      	asrcs	r0, r3, #31
 8000aa6:	ea6f 70e3 	mvncc.w	r0, r3, asr #31
 8000aaa:	f040 0001 	orr.w	r0, r0, #1
 8000aae:	4770      	bx	lr
 8000ab0:	ea4f 0c41 	mov.w	ip, r1, lsl #1
 8000ab4:	ea7f 5c6c 	mvns.w	ip, ip, asr #21
 8000ab8:	d102      	bne.n	8000ac0 <__cmpdf2+0x64>
 8000aba:	ea50 3c01 	orrs.w	ip, r0, r1, lsl #12
 8000abe:	d107      	bne.n	8000ad0 <__cmpdf2+0x74>
 8000ac0:	ea4f 0c43 	mov.w	ip, r3, lsl #1
 8000ac4:	ea7f 5c6c 	mvns.w	ip, ip, asr #21
 8000ac8:	d1d6      	bne.n	8000a78 <__cmpdf2+0x1c>
 8000aca:	ea52 3c03 	orrs.w	ip, r2, r3, lsl #12
 8000ace:	d0d3      	beq.n	8000a78 <__cmpdf2+0x1c>
 8000ad0:	f85d 0b04 	ldr.w	r0, [sp], #4
 8000ad4:	4770      	bx	lr
 8000ad6:	bf00      	nop

08000ad8 <__aeabi_cdrcmple>:
 8000ad8:	4684      	mov	ip, r0
 8000ada:	4610      	mov	r0, r2
 8000adc:	4662      	mov	r2, ip
 8000ade:	468c      	mov	ip, r1
 8000ae0:	4619      	mov	r1, r3
 8000ae2:	4663      	mov	r3, ip
 8000ae4:	e000      	b.n	8000ae8 <__aeabi_cdcmpeq>
 8000ae6:	bf00      	nop

08000ae8 <__aeabi_cdcmpeq>:
 8000ae8:	b501      	push	{r0, lr}
 8000aea:	f7ff ffb7 	bl	8000a5c <__cmpdf2>
 8000aee:	2800      	cmp	r0, #0
 8000af0:	bf48      	it	mi
 8000af2:	f110 0f00 	cmnmi.w	r0, #0
 8000af6:	bd01      	pop	{r0, pc}

08000af8 <__aeabi_dcmpeq>:
 8000af8:	f84d ed08 	str.w	lr, [sp, #-8]!
 8000afc:	f7ff fff4 	bl	8000ae8 <__aeabi_cdcmpeq>
 8000b00:	bf0c      	ite	eq
 8000b02:	2001      	moveq	r0, #1
 8000b04:	2000      	movne	r0, #0
 8000b06:	f85d fb08 	ldr.w	pc, [sp], #8
 8000b0a:	bf00      	nop

08000b0c <__aeabi_dcmplt>:
 8000b0c:	f84d ed08 	str.w	lr, [sp, #-8]!
 8000b10:	f7ff ffea 	bl	8000ae8 <__aeabi_cdcmpeq>
 8000b14:	bf34      	ite	cc
 8000b16:	2001      	movcc	r0, #1
 8000b18:	2000      	movcs	r0, #0
 8000b1a:	f85d fb08 	ldr.w	pc, [sp], #8
 8000b1e:	bf00      	nop

08000b20 <__aeabi_dcmple>:
 8000b20:	f84d ed08 	str.w	lr, [sp, #-8]!
 8000b24:	f7ff ffe0 	bl	8000ae8 <__aeabi_cdcmpeq>
 8000b28:	bf94      	ite	ls
 8000b2a:	2001      	movls	r0, #1
 8000b2c:	2000      	movhi	r0, #0
 8000b2e:	f85d fb08 	ldr.w	pc, [sp], #8
 8000b32:	bf00      	nop

08000b34 <__aeabi_dcmpge>:
 8000b34:	f84d ed08 	str.w	lr, [sp, #-8]!
 8000b38:	f7ff ffce 	bl	8000ad8 <__aeabi_cdrcmple>
 8000b3c:	bf94      	ite	ls
 8000b3e:	2001      	movls	r0, #1
 8000b40:	2000      	movhi	r0, #0
 8000b42:	f85d fb08 	ldr.w	pc, [sp], #8
 8000b46:	bf00      	nop

08000b48 <__aeabi_dcmpgt>:
 8000b48:	f84d ed08 	str.w	lr, [sp, #-8]!
 8000b4c:	f7ff ffc4 	bl	8000ad8 <__aeabi_cdrcmple>
 8000b50:	bf34      	ite	cc
 8000b52:	2001      	movcc	r0, #1
 8000b54:	2000      	movcs	r0, #0
 8000b56:	f85d fb08 	ldr.w	pc, [sp], #8
 8000b5a:	bf00      	nop

08000b5c <__aeabi_d2f>:
 8000b5c:	ea4f 0241 	mov.w	r2, r1, lsl #1
 8000b60:	f1b2 43e0 	subs.w	r3, r2, #1879048192	@ 0x70000000
 8000b64:	bf24      	itt	cs
 8000b66:	f5b3 1c00 	subscs.w	ip, r3, #2097152	@ 0x200000
 8000b6a:	f1dc 5cfe 	rsbscs	ip, ip, #532676608	@ 0x1fc00000
 8000b6e:	d90d      	bls.n	8000b8c <__aeabi_d2f+0x30>
 8000b70:	f001 4c00 	and.w	ip, r1, #2147483648	@ 0x80000000
 8000b74:	ea4f 02c0 	mov.w	r2, r0, lsl #3
 8000b78:	ea4c 7050 	orr.w	r0, ip, r0, lsr #29
 8000b7c:	f1b2 4f00 	cmp.w	r2, #2147483648	@ 0x80000000
 8000b80:	eb40 0083 	adc.w	r0, r0, r3, lsl #2
 8000b84:	bf08      	it	eq
 8000b86:	f020 0001 	biceq.w	r0, r0, #1
 8000b8a:	4770      	bx	lr
 8000b8c:	f011 4f80 	tst.w	r1, #1073741824	@ 0x40000000
 8000b90:	d121      	bne.n	8000bd6 <__aeabi_d2f+0x7a>
 8000b92:	f113 7238 	adds.w	r2, r3, #48234496	@ 0x2e00000
 8000b96:	bfbc      	itt	lt
 8000b98:	f001 4000 	andlt.w	r0, r1, #2147483648	@ 0x80000000
 8000b9c:	4770      	bxlt	lr
 8000b9e:	f441 1180 	orr.w	r1, r1, #1048576	@ 0x100000
 8000ba2:	ea4f 5252 	mov.w	r2, r2, lsr #21
 8000ba6:	f1c2 0218 	rsb	r2, r2, #24
 8000baa:	f1c2 0c20 	rsb	ip, r2, #32
 8000bae:	fa10 f30c 	lsls.w	r3, r0, ip
 8000bb2:	fa20 f002 	lsr.w	r0, r0, r2
 8000bb6:	bf18      	it	ne
 8000bb8:	f040 0001 	orrne.w	r0, r0, #1
 8000bbc:	ea4f 23c1 	mov.w	r3, r1, lsl #11
 8000bc0:	ea4f 23d3 	mov.w	r3, r3, lsr #11
 8000bc4:	fa03 fc0c 	lsl.w	ip, r3, ip
 8000bc8:	ea40 000c 	orr.w	r0, r0, ip
 8000bcc:	fa23 f302 	lsr.w	r3, r3, r2
 8000bd0:	ea4f 0343 	mov.w	r3, r3, lsl #1
 8000bd4:	e7cc      	b.n	8000b70 <__aeabi_d2f+0x14>
 8000bd6:	ea7f 5362 	mvns.w	r3, r2, asr #21
 8000bda:	d107      	bne.n	8000bec <__aeabi_d2f+0x90>
 8000bdc:	ea50 3301 	orrs.w	r3, r0, r1, lsl #12
 8000be0:	bf1e      	ittt	ne
 8000be2:	f04f 40fe 	movne.w	r0, #2130706432	@ 0x7f000000
 8000be6:	f440 0040 	orrne.w	r0, r0, #12582912	@ 0xc00000
 8000bea:	4770      	bxne	lr
 8000bec:	f001 4000 	and.w	r0, r1, #2147483648	@ 0x80000000
 8000bf0:	f040 40fe 	orr.w	r0, r0, #2130706432	@ 0x7f000000
 8000bf4:	f440 0000 	orr.w	r0, r0, #8388608	@ 0x800000
 8000bf8:	4770      	bx	lr
 8000bfa:	bf00      	nop

08000bfc <__aeabi_uldivmod>:
 8000bfc:	b953      	cbnz	r3, 8000c14 <__aeabi_uldivmod+0x18>
 8000bfe:	b94a      	cbnz	r2, 8000c14 <__aeabi_uldivmod+0x18>
 8000c00:	2900      	cmp	r1, #0
 8000c02:	bf08      	it	eq
 8000c04:	2800      	cmpeq	r0, #0
 8000c06:	bf1c      	itt	ne
 8000c08:	f04f 31ff 	movne.w	r1, #4294967295
 8000c0c:	f04f 30ff 	movne.w	r0, #4294967295
 8000c10:	f000 b96a 	b.w	8000ee8 <__aeabi_idiv0>
 8000c14:	f1ad 0c08 	sub.w	ip, sp, #8
 8000c18:	e96d ce04 	strd	ip, lr, [sp, #-16]!
 8000c1c:	f000 f806 	bl	8000c2c <__udivmoddi4>
 8000c20:	f8dd e004 	ldr.w	lr, [sp, #4]
 8000c24:	e9dd 2302 	ldrd	r2, r3, [sp, #8]
 8000c28:	b004      	add	sp, #16
 8000c2a:	4770      	bx	lr

08000c2c <__udivmoddi4>:
 8000c2c:	e92d 47f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
 8000c30:	9d08      	ldr	r5, [sp, #32]
 8000c32:	460c      	mov	r4, r1
 8000c34:	2b00      	cmp	r3, #0
 8000c36:	d14e      	bne.n	8000cd6 <__udivmoddi4+0xaa>
 8000c38:	4694      	mov	ip, r2
 8000c3a:	458c      	cmp	ip, r1
 8000c3c:	4686      	mov	lr, r0
 8000c3e:	fab2 f282 	clz	r2, r2
 8000c42:	d962      	bls.n	8000d0a <__udivmoddi4+0xde>
 8000c44:	b14a      	cbz	r2, 8000c5a <__udivmoddi4+0x2e>
 8000c46:	f1c2 0320 	rsb	r3, r2, #32
 8000c4a:	4091      	lsls	r1, r2
 8000c4c:	fa20 f303 	lsr.w	r3, r0, r3
 8000c50:	fa0c fc02 	lsl.w	ip, ip, r2
 8000c54:	4319      	orrs	r1, r3
 8000c56:	fa00 fe02 	lsl.w	lr, r0, r2
 8000c5a:	ea4f 471c 	mov.w	r7, ip, lsr #16
 8000c5e:	fa1f f68c 	uxth.w	r6, ip
 8000c62:	fbb1 f4f7 	udiv	r4, r1, r7
 8000c66:	ea4f 431e 	mov.w	r3, lr, lsr #16
 8000c6a:	fb07 1114 	mls	r1, r7, r4, r1
 8000c6e:	ea43 4301 	orr.w	r3, r3, r1, lsl #16
 8000c72:	fb04 f106 	mul.w	r1, r4, r6
 8000c76:	4299      	cmp	r1, r3
 8000c78:	d90a      	bls.n	8000c90 <__udivmoddi4+0x64>
 8000c7a:	eb1c 0303 	adds.w	r3, ip, r3
 8000c7e:	f104 30ff 	add.w	r0, r4, #4294967295
 8000c82:	f080 8112 	bcs.w	8000eaa <__udivmoddi4+0x27e>
 8000c86:	4299      	cmp	r1, r3
 8000c88:	f240 810f 	bls.w	8000eaa <__udivmoddi4+0x27e>
 8000c8c:	3c02      	subs	r4, #2
 8000c8e:	4463      	add	r3, ip
 8000c90:	1a59      	subs	r1, r3, r1
 8000c92:	fa1f f38e 	uxth.w	r3, lr
 8000c96:	fbb1 f0f7 	udiv	r0, r1, r7
 8000c9a:	fb07 1110 	mls	r1, r7, r0, r1
 8000c9e:	ea43 4301 	orr.w	r3, r3, r1, lsl #16
 8000ca2:	fb00 f606 	mul.w	r6, r0, r6
 8000ca6:	429e      	cmp	r6, r3
 8000ca8:	d90a      	bls.n	8000cc0 <__udivmoddi4+0x94>
 8000caa:	eb1c 0303 	adds.w	r3, ip, r3
 8000cae:	f100 31ff 	add.w	r1, r0, #4294967295
 8000cb2:	f080 80fc 	bcs.w	8000eae <__udivmoddi4+0x282>
 8000cb6:	429e      	cmp	r6, r3
 8000cb8:	f240 80f9 	bls.w	8000eae <__udivmoddi4+0x282>
 8000cbc:	4463      	add	r3, ip
 8000cbe:	3802      	subs	r0, #2
 8000cc0:	1b9b      	subs	r3, r3, r6
 8000cc2:	ea40 4004 	orr.w	r0, r0, r4, lsl #16
 8000cc6:	2100      	movs	r1, #0
 8000cc8:	b11d      	cbz	r5, 8000cd2 <__udivmoddi4+0xa6>
 8000cca:	40d3      	lsrs	r3, r2
 8000ccc:	2200      	movs	r2, #0
 8000cce:	e9c5 3200 	strd	r3, r2, [r5]
 8000cd2:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
 8000cd6:	428b      	cmp	r3, r1
 8000cd8:	d905      	bls.n	8000ce6 <__udivmoddi4+0xba>
 8000cda:	b10d      	cbz	r5, 8000ce0 <__udivmoddi4+0xb4>
 8000cdc:	e9c5 0100 	strd	r0, r1, [r5]
 8000ce0:	2100      	movs	r1, #0
 8000ce2:	4608      	mov	r0, r1
 8000ce4:	e7f5      	b.n	8000cd2 <__udivmoddi4+0xa6>
 8000ce6:	fab3 f183 	clz	r1, r3
 8000cea:	2900      	cmp	r1, #0
 8000cec:	d146      	bne.n	8000d7c <__udivmoddi4+0x150>
 8000cee:	42a3      	cmp	r3, r4
 8000cf0:	d302      	bcc.n	8000cf8 <__udivmoddi4+0xcc>
 8000cf2:	4290      	cmp	r0, r2
 8000cf4:	f0c0 80f0 	bcc.w	8000ed8 <__udivmoddi4+0x2ac>
 8000cf8:	1a86      	subs	r6, r0, r2
 8000cfa:	eb64 0303 	sbc.w	r3, r4, r3
 8000cfe:	2001      	movs	r0, #1
 8000d00:	2d00      	cmp	r5, #0
 8000d02:	d0e6      	beq.n	8000cd2 <__udivmoddi4+0xa6>
 8000d04:	e9c5 6300 	strd	r6, r3, [r5]
 8000d08:	e7e3      	b.n	8000cd2 <__udivmoddi4+0xa6>
 8000d0a:	2a00      	cmp	r2, #0
 8000d0c:	f040 8090 	bne.w	8000e30 <__udivmoddi4+0x204>
 8000d10:	eba1 040c 	sub.w	r4, r1, ip
 8000d14:	ea4f 481c 	mov.w	r8, ip, lsr #16
 8000d18:	fa1f f78c 	uxth.w	r7, ip
 8000d1c:	2101      	movs	r1, #1
 8000d1e:	fbb4 f6f8 	udiv	r6, r4, r8
 8000d22:	ea4f 431e 	mov.w	r3, lr, lsr #16
 8000d26:	fb08 4416 	mls	r4, r8, r6, r4
 8000d2a:	ea43 4304 	orr.w	r3, r3, r4, lsl #16
 8000d2e:	fb07 f006 	mul.w	r0, r7, r6
 8000d32:	4298      	cmp	r0, r3
 8000d34:	d908      	bls.n	8000d48 <__udivmoddi4+0x11c>
 8000d36:	eb1c 0303 	adds.w	r3, ip, r3
 8000d3a:	f106 34ff 	add.w	r4, r6, #4294967295
 8000d3e:	d202      	bcs.n	8000d46 <__udivmoddi4+0x11a>
 8000d40:	4298      	cmp	r0, r3
 8000d42:	f200 80cd 	bhi.w	8000ee0 <__udivmoddi4+0x2b4>
 8000d46:	4626      	mov	r6, r4
 8000d48:	1a1c      	subs	r4, r3, r0
 8000d4a:	fa1f f38e 	uxth.w	r3, lr
 8000d4e:	fbb4 f0f8 	udiv	r0, r4, r8
 8000d52:	fb08 4410 	mls	r4, r8, r0, r4
 8000d56:	ea43 4304 	orr.w	r3, r3, r4, lsl #16
 8000d5a:	fb00 f707 	mul.w	r7, r0, r7
 8000d5e:	429f      	cmp	r7, r3
 8000d60:	d908      	bls.n	8000d74 <__udivmoddi4+0x148>
 8000d62:	eb1c 0303 	adds.w	r3, ip, r3
 8000d66:	f100 34ff 	add.w	r4, r0, #4294967295
 8000d6a:	d202      	bcs.n	8000d72 <__udivmoddi4+0x146>
 8000d6c:	429f      	cmp	r7, r3
 8000d6e:	f200 80b0 	bhi.w	8000ed2 <__udivmoddi4+0x2a6>
 8000d72:	4620      	mov	r0, r4
 8000d74:	1bdb      	subs	r3, r3, r7
 8000d76:	ea40 4006 	orr.w	r0, r0, r6, lsl #16
 8000d7a:	e7a5      	b.n	8000cc8 <__udivmoddi4+0x9c>
 8000d7c:	f1c1 0620 	rsb	r6, r1, #32
 8000d80:	408b      	lsls	r3, r1
 8000d82:	fa22 f706 	lsr.w	r7, r2, r6
 8000d86:	431f      	orrs	r7, r3
 8000d88:	fa20 fc06 	lsr.w	ip, r0, r6
 8000d8c:	fa04 f301 	lsl.w	r3, r4, r1
 8000d90:	ea43 030c 	orr.w	r3, r3, ip
 8000d94:	40f4      	lsrs	r4, r6
 8000d96:	fa00 f801 	lsl.w	r8, r0, r1
 8000d9a:	0c38      	lsrs	r0, r7, #16
 8000d9c:	ea4f 4913 	mov.w	r9, r3, lsr #16
 8000da0:	fbb4 fef0 	udiv	lr, r4, r0
 8000da4:	fa1f fc87 	uxth.w	ip, r7
 8000da8:	fb00 441e 	mls	r4, r0, lr, r4
 8000dac:	ea49 4404 	orr.w	r4, r9, r4, lsl #16
 8000db0:	fb0e f90c 	mul.w	r9, lr, ip
 8000db4:	45a1      	cmp	r9, r4
 8000db6:	fa02 f201 	lsl.w	r2, r2, r1
 8000dba:	d90a      	bls.n	8000dd2 <__udivmoddi4+0x1a6>
 8000dbc:	193c      	adds	r4, r7, r4
 8000dbe:	f10e 3aff 	add.w	sl, lr, #4294967295
 8000dc2:	f080 8084 	bcs.w	8000ece <__udivmoddi4+0x2a2>
 8000dc6:	45a1      	cmp	r9, r4
 8000dc8:	f240 8081 	bls.w	8000ece <__udivmoddi4+0x2a2>
 8000dcc:	f1ae 0e02 	sub.w	lr, lr, #2
 8000dd0:	443c      	add	r4, r7
 8000dd2:	eba4 0409 	sub.w	r4, r4, r9
 8000dd6:	fa1f f983 	uxth.w	r9, r3
 8000dda:	fbb4 f3f0 	udiv	r3, r4, r0
 8000dde:	fb00 4413 	mls	r4, r0, r3, r4
 8000de2:	ea49 4404 	orr.w	r4, r9, r4, lsl #16
 8000de6:	fb03 fc0c 	mul.w	ip, r3, ip
 8000dea:	45a4      	cmp	ip, r4
 8000dec:	d907      	bls.n	8000dfe <__udivmoddi4+0x1d2>
 8000dee:	193c      	adds	r4, r7, r4
 8000df0:	f103 30ff 	add.w	r0, r3, #4294967295
 8000df4:	d267      	bcs.n	8000ec6 <__udivmoddi4+0x29a>
 8000df6:	45a4      	cmp	ip, r4
 8000df8:	d965      	bls.n	8000ec6 <__udivmoddi4+0x29a>
 8000dfa:	3b02      	subs	r3, #2
 8000dfc:	443c      	add	r4, r7
 8000dfe:	ea43 400e 	orr.w	r0, r3, lr, lsl #16
 8000e02:	fba0 9302 	umull	r9, r3, r0, r2
 8000e06:	eba4 040c 	sub.w	r4, r4, ip
 8000e0a:	429c      	cmp	r4, r3
 8000e0c:	46ce      	mov	lr, r9
 8000e0e:	469c      	mov	ip, r3
 8000e10:	d351      	bcc.n	8000eb6 <__udivmoddi4+0x28a>
 8000e12:	d04e      	beq.n	8000eb2 <__udivmoddi4+0x286>
 8000e14:	b155      	cbz	r5, 8000e2c <__udivmoddi4+0x200>
 8000e16:	ebb8 030e 	subs.w	r3, r8, lr
 8000e1a:	eb64 040c 	sbc.w	r4, r4, ip
 8000e1e:	fa04 f606 	lsl.w	r6, r4, r6
 8000e22:	40cb      	lsrs	r3, r1
 8000e24:	431e      	orrs	r6, r3
 8000e26:	40cc      	lsrs	r4, r1
 8000e28:	e9c5 6400 	strd	r6, r4, [r5]
 8000e2c:	2100      	movs	r1, #0
 8000e2e:	e750      	b.n	8000cd2 <__udivmoddi4+0xa6>
 8000e30:	f1c2 0320 	rsb	r3, r2, #32
 8000e34:	fa20 f103 	lsr.w	r1, r0, r3
 8000e38:	fa0c fc02 	lsl.w	ip, ip, r2
 8000e3c:	fa24 f303 	lsr.w	r3, r4, r3
 8000e40:	4094      	lsls	r4, r2
 8000e42:	430c      	orrs	r4, r1
 8000e44:	ea4f 481c 	mov.w	r8, ip, lsr #16
 8000e48:	fa00 fe02 	lsl.w	lr, r0, r2
 8000e4c:	fa1f f78c 	uxth.w	r7, ip
 8000e50:	fbb3 f0f8 	udiv	r0, r3, r8
 8000e54:	fb08 3110 	mls	r1, r8, r0, r3
 8000e58:	0c23      	lsrs	r3, r4, #16
 8000e5a:	ea43 4301 	orr.w	r3, r3, r1, lsl #16
 8000e5e:	fb00 f107 	mul.w	r1, r0, r7
 8000e62:	4299      	cmp	r1, r3
 8000e64:	d908      	bls.n	8000e78 <__udivmoddi4+0x24c>
 8000e66:	eb1c 0303 	adds.w	r3, ip, r3
 8000e6a:	f100 36ff 	add.w	r6, r0, #4294967295
 8000e6e:	d22c      	bcs.n	8000eca <__udivmoddi4+0x29e>
 8000e70:	4299      	cmp	r1, r3
 8000e72:	d92a      	bls.n	8000eca <__udivmoddi4+0x29e>
 8000e74:	3802      	subs	r0, #2
 8000e76:	4463      	add	r3, ip
 8000e78:	1a5b      	subs	r3, r3, r1
 8000e7a:	b2a4      	uxth	r4, r4
 8000e7c:	fbb3 f1f8 	udiv	r1, r3, r8
 8000e80:	fb08 3311 	mls	r3, r8, r1, r3
 8000e84:	ea44 4403 	orr.w	r4, r4, r3, lsl #16
 8000e88:	fb01 f307 	mul.w	r3, r1, r7
 8000e8c:	42a3      	cmp	r3, r4
 8000e8e:	d908      	bls.n	8000ea2 <__udivmoddi4+0x276>
 8000e90:	eb1c 0404 	adds.w	r4, ip, r4
 8000e94:	f101 36ff 	add.w	r6, r1, #4294967295
 8000e98:	d213      	bcs.n	8000ec2 <__udivmoddi4+0x296>
 8000e9a:	42a3      	cmp	r3, r4
 8000e9c:	d911      	bls.n	8000ec2 <__udivmoddi4+0x296>
 8000e9e:	3902      	subs	r1, #2
 8000ea0:	4464      	add	r4, ip
 8000ea2:	1ae4      	subs	r4, r4, r3
 8000ea4:	ea41 4100 	orr.w	r1, r1, r0, lsl #16
 8000ea8:	e739      	b.n	8000d1e <__udivmoddi4+0xf2>
 8000eaa:	4604      	mov	r4, r0
 8000eac:	e6f0      	b.n	8000c90 <__udivmoddi4+0x64>
 8000eae:	4608      	mov	r0, r1
 8000eb0:	e706      	b.n	8000cc0 <__udivmoddi4+0x94>
 8000eb2:	45c8      	cmp	r8, r9
 8000eb4:	d2ae      	bcs.n	8000e14 <__udivmoddi4+0x1e8>
 8000eb6:	ebb9 0e02 	subs.w	lr, r9, r2
 8000eba:	eb63 0c07 	sbc.w	ip, r3, r7
 8000ebe:	3801      	subs	r0, #1
 8000ec0:	e7a8      	b.n	8000e14 <__udivmoddi4+0x1e8>
 8000ec2:	4631      	mov	r1, r6
 8000ec4:	e7ed      	b.n	8000ea2 <__udivmoddi4+0x276>
 8000ec6:	4603      	mov	r3, r0
 8000ec8:	e799      	b.n	8000dfe <__udivmoddi4+0x1d2>
 8000eca:	4630      	mov	r0, r6
 8000ecc:	e7d4      	b.n	8000e78 <__udivmoddi4+0x24c>
 8000ece:	46d6      	mov	lr, sl
 8000ed0:	e77f      	b.n	8000dd2 <__udivmoddi4+0x1a6>
 8000ed2:	4463      	add	r3, ip
 8000ed4:	3802      	subs	r0, #2
 8000ed6:	e74d      	b.n	8000d74 <__udivmoddi4+0x148>
 8000ed8:	4606      	mov	r6, r0
 8000eda:	4623      	mov	r3, r4
 8000edc:	4608      	mov	r0, r1
 8000ede:	e70f      	b.n	8000d00 <__udivmoddi4+0xd4>
 8000ee0:	3e02      	subs	r6, #2
 8000ee2:	4463      	add	r3, ip
 8000ee4:	e730      	b.n	8000d48 <__udivmoddi4+0x11c>
 8000ee6:	bf00      	nop

08000ee8 <__aeabi_idiv0>:
 8000ee8:	4770      	bx	lr
 8000eea:	bf00      	nop

08000eec <main>:
/**
  * @brief  The application entry point.
  * @retval int
  */
int main(void)
{
 8000eec:	b580      	push	{r7, lr}
 8000eee:	b082      	sub	sp, #8
 8000ef0:	af02      	add	r7, sp, #8
  /* USER CODE END 1 */

  /* MCU Configuration--------------------------------------------------------*/

  /* Reset of all peripherals, Initializes the Flash interface and the Systick. */
  HAL_Init();
 8000ef2:	f001 fd3d 	bl	8002970 <HAL_Init>
  /* USER CODE BEGIN Init */

  /* USER CODE END Init */

  /* Configure the system clock */
  SystemClock_Config();
 8000ef6:	f000 f8e1 	bl	80010bc <SystemClock_Config>
  /* USER CODE BEGIN SysInit */

  /* USER CODE END SysInit */

  /* Initialize all configured peripherals */
  MX_GPIO_Init();
 8000efa:	f000 fbb9 	bl	8001670 <MX_GPIO_Init>
  MX_DMA_Init();
 8000efe:	f000 fb81 	bl	8001604 <MX_DMA_Init>
  MX_SPI2_Init();
 8000f02:	f000 fa0f 	bl	8001324 <MX_SPI2_Init>
  MX_CRC_Init();
 8000f06:	f000 f99d 	bl	8001244 <MX_CRC_Init>
  MX_TIM3_Init();
 8000f0a:	f000 fab7 	bl	800147c <MX_TIM3_Init>
  MX_TIM2_Init();
 8000f0e:	f000 fa3f 	bl	8001390 <MX_TIM2_Init>
  MX_I2C2_Init();
 8000f12:	f000 f9d9 	bl	80012c8 <MX_I2C2_Init>
  MX_TIM4_Init();
 8000f16:	f000 faff 	bl	8001518 <MX_TIM4_Init>
  MX_ADC2_Init();
 8000f1a:	f000 f941 	bl	80011a0 <MX_ADC2_Init>
  MX_I2C1_Init();
 8000f1e:	f000 f9a5 	bl	800126c <MX_I2C1_Init>
  MX_TouchGFX_Init();
 8000f22:	f006 ff59 	bl	8007dd8 <MX_TouchGFX_Init>
  /* USER CODE BEGIN 2 */

	  HAL_TIM_PWM_Init(&htim2);
 8000f26:	4858      	ldr	r0, [pc, #352]	@ (8001088 <main+0x19c>)
 8000f28:	f005 ffe6 	bl	8006ef8 <HAL_TIM_PWM_Init>



	  Displ_Init(Displ_Orientat_0);			// initialize display controller - set orientation parameter as per TouchGFX setup
 8000f2c:	2000      	movs	r0, #0
 8000f2e:	f001 f9a5 	bl	800227c <Displ_Init>
	  touchgfxSignalVSync();
 8000f32:	f00f f8bf 	bl	80100b4 <touchgfxSignalVSync>
	  Displ_Init(Displ_Orientat_0);			// initialize display controller - set orientation parameter as per TouchGFX setup
 8000f36:	2000      	movs	r0, #0
 8000f38:	f001 f9a0 	bl	800227c <Displ_Init>
	  touchgfxSignalVSync();
 8000f3c:	f00f f8ba 	bl	80100b4 <touchgfxSignalVSync>


	  Displ_BackLight('I');  					// initialize backlight
 8000f40:	2049      	movs	r0, #73	@ 0x49
 8000f42:	f001 fa41 	bl	80023c8 <Displ_BackLight>
	  HAL_TIM_Base_Start_IT(&TGFX_T);			// start TouchGFX tick timer
 8000f46:	4851      	ldr	r0, [pc, #324]	@ (800108c <main+0x1a0>)
 8000f48:	f005 ff66 	bl	8006e18 <HAL_TIM_Base_Start_IT>
	  HAL_ADC_Start_DMA(&hadc2,(uint32_t*)&value_adc,1);
 8000f4c:	2201      	movs	r2, #1
 8000f4e:	4950      	ldr	r1, [pc, #320]	@ (8001090 <main+0x1a4>)
 8000f50:	4850      	ldr	r0, [pc, #320]	@ (8001094 <main+0x1a8>)
 8000f52:	f001 fde7 	bl	8002b24 <HAL_ADC_Start_DMA>
	  HAL_TIM_PWM_Start(&htim2,TIM_CHANNEL_1);
 8000f56:	2100      	movs	r1, #0
 8000f58:	484b      	ldr	r0, [pc, #300]	@ (8001088 <main+0x19c>)
 8000f5a:	f006 f827 	bl	8006fac <HAL_TIM_PWM_Start>

	  //HAL_TIM_PWM_Start(&htim4, TIM_CHANNEL_2);
	  htim4.Instance->CCR2 = 10;
 8000f5e:	4b4e      	ldr	r3, [pc, #312]	@ (8001098 <main+0x1ac>)
 8000f60:	681b      	ldr	r3, [r3, #0]
 8000f62:	220a      	movs	r2, #10
 8000f64:	639a      	str	r2, [r3, #56]	@ 0x38
	  htim2.Instance->CCR1 = 15000;
 8000f66:	4b48      	ldr	r3, [pc, #288]	@ (8001088 <main+0x19c>)
 8000f68:	681b      	ldr	r3, [r3, #0]
 8000f6a:	f643 2298 	movw	r2, #15000	@ 0x3a98
 8000f6e:	635a      	str	r2, [r3, #52]	@ 0x34
  /* USER CODE BEGIN WHILE */
//	  while(HAL_I2C_IsDeviceReady(&hi2c1, 0xB8,1, HAL_MAX_DELAY) != HAL_OK){
//
//	  }

	  HAL_GPIO_WritePin(HUMIDITY_EN_GPIO_Port, HUMIDITY_EN_Pin,1);
 8000f70:	2201      	movs	r2, #1
 8000f72:	f44f 4100 	mov.w	r1, #32768	@ 0x8000
 8000f76:	4849      	ldr	r0, [pc, #292]	@ (800109c <main+0x1b0>)
 8000f78:	f003 f87c 	bl	8004074 <HAL_GPIO_WritePin>
//		  HAL_GPIO_WritePin(PUMP2_EN_GPIO_Port, PUMP2_EN_Pin, 1);
//	  	  HAL_GPIO_WritePin(HUMIDITY_EN_GPIO_Port, HUMIDITY_EN_Pin,1);
//
//		  HAL_Delay(10000);

		  if (HAL_GPIO_ReadPin(WATER_LEVEL_GPIO_Port, WATER_LEVEL_Pin)){
 8000f7c:	2120      	movs	r1, #32
 8000f7e:	4848      	ldr	r0, [pc, #288]	@ (80010a0 <main+0x1b4>)
 8000f80:	f003 f860 	bl	8004044 <HAL_GPIO_ReadPin>
 8000f84:	4603      	mov	r3, r0
 8000f86:	2b00      	cmp	r3, #0
 8000f88:	d00b      	beq.n	8000fa2 <main+0xb6>
			  HAL_GPIO_WritePin(PUMP1_EN_GPIO_Port, PUMP1_EN_Pin, 1);
 8000f8a:	2201      	movs	r2, #1
 8000f8c:	f44f 5180 	mov.w	r1, #4096	@ 0x1000
 8000f90:	4842      	ldr	r0, [pc, #264]	@ (800109c <main+0x1b0>)
 8000f92:	f003 f86f 	bl	8004074 <HAL_GPIO_WritePin>
			  HAL_GPIO_WritePin(PUMP2_EN_GPIO_Port, PUMP2_EN_Pin, 1);
 8000f96:	2201      	movs	r2, #1
 8000f98:	2140      	movs	r1, #64	@ 0x40
 8000f9a:	4841      	ldr	r0, [pc, #260]	@ (80010a0 <main+0x1b4>)
 8000f9c:	f003 f86a 	bl	8004074 <HAL_GPIO_WritePin>
 8000fa0:	e00a      	b.n	8000fb8 <main+0xcc>
		  }
		  else{
			  HAL_GPIO_WritePin(PUMP1_EN_GPIO_Port, PUMP1_EN_Pin, 0);
 8000fa2:	2200      	movs	r2, #0
 8000fa4:	f44f 5180 	mov.w	r1, #4096	@ 0x1000
 8000fa8:	483c      	ldr	r0, [pc, #240]	@ (800109c <main+0x1b0>)
 8000faa:	f003 f863 	bl	8004074 <HAL_GPIO_WritePin>
			  HAL_GPIO_WritePin(PUMP2_EN_GPIO_Port, PUMP2_EN_Pin, 0);
 8000fae:	2200      	movs	r2, #0
 8000fb0:	2140      	movs	r1, #64	@ 0x40
 8000fb2:	483b      	ldr	r0, [pc, #236]	@ (80010a0 <main+0x1b4>)
 8000fb4:	f003 f85e 	bl	8004074 <HAL_GPIO_WritePin>
		  }




		  HAL_ADC_Start_DMA(&hadc2,(uint32_t*)&value_adc,1);
 8000fb8:	2201      	movs	r2, #1
 8000fba:	4935      	ldr	r1, [pc, #212]	@ (8001090 <main+0x1a4>)
 8000fbc:	4835      	ldr	r0, [pc, #212]	@ (8001094 <main+0x1a8>)
 8000fbe:	f001 fdb1 	bl	8002b24 <HAL_ADC_Start_DMA>
		  HAL_I2C_Master_Transmit (&hi2c1, 0xB8, i2c_buffer, 3, 100);
 8000fc2:	2364      	movs	r3, #100	@ 0x64
 8000fc4:	9300      	str	r3, [sp, #0]
 8000fc6:	2303      	movs	r3, #3
 8000fc8:	4a36      	ldr	r2, [pc, #216]	@ (80010a4 <main+0x1b8>)
 8000fca:	21b8      	movs	r1, #184	@ 0xb8
 8000fcc:	4836      	ldr	r0, [pc, #216]	@ (80010a8 <main+0x1bc>)
 8000fce:	f003 f9e1 	bl	8004394 <HAL_I2C_Master_Transmit>
		  HAL_I2C_Master_Receive (&hi2c1, 0xB9, i2c_return, 8, 100);
 8000fd2:	2364      	movs	r3, #100	@ 0x64
 8000fd4:	9300      	str	r3, [sp, #0]
 8000fd6:	2308      	movs	r3, #8
 8000fd8:	4a34      	ldr	r2, [pc, #208]	@ (80010ac <main+0x1c0>)
 8000fda:	21b9      	movs	r1, #185	@ 0xb9
 8000fdc:	4832      	ldr	r0, [pc, #200]	@ (80010a8 <main+0x1bc>)
 8000fde:	f003 fad7 	bl	8004590 <HAL_I2C_Master_Receive>
		  temp = ((i2c_return[4] << 8) + i2c_return[5]);
 8000fe2:	4b32      	ldr	r3, [pc, #200]	@ (80010ac <main+0x1c0>)
 8000fe4:	791b      	ldrb	r3, [r3, #4]
 8000fe6:	021b      	lsls	r3, r3, #8
 8000fe8:	4a30      	ldr	r2, [pc, #192]	@ (80010ac <main+0x1c0>)
 8000fea:	7952      	ldrb	r2, [r2, #5]
 8000fec:	4413      	add	r3, r2
 8000fee:	ee07 3a90 	vmov	s15, r3
 8000ff2:	eef8 7ae7 	vcvt.f32.s32	s15, s15
 8000ff6:	4b2e      	ldr	r3, [pc, #184]	@ (80010b0 <main+0x1c4>)
 8000ff8:	edc3 7a00 	vstr	s15, [r3]
		  hum = ((i2c_return[2] << 8) + i2c_return[3]);
 8000ffc:	4b2b      	ldr	r3, [pc, #172]	@ (80010ac <main+0x1c0>)
 8000ffe:	789b      	ldrb	r3, [r3, #2]
 8001000:	021b      	lsls	r3, r3, #8
 8001002:	4a2a      	ldr	r2, [pc, #168]	@ (80010ac <main+0x1c0>)
 8001004:	78d2      	ldrb	r2, [r2, #3]
 8001006:	4413      	add	r3, r2
 8001008:	ee07 3a90 	vmov	s15, r3
 800100c:	eef8 7ae7 	vcvt.f32.s32	s15, s15
 8001010:	4b28      	ldr	r3, [pc, #160]	@ (80010b4 <main+0x1c8>)
 8001012:	edc3 7a00 	vstr	s15, [r3]
		  temp = floor(temp)/10.0;
 8001016:	4b26      	ldr	r3, [pc, #152]	@ (80010b0 <main+0x1c4>)
 8001018:	681b      	ldr	r3, [r3, #0]
 800101a:	4618      	mov	r0, r3
 800101c:	f7ff faac 	bl	8000578 <__aeabi_f2d>
 8001020:	4602      	mov	r2, r0
 8001022:	460b      	mov	r3, r1
 8001024:	ec43 2b10 	vmov	d0, r2, r3
 8001028:	f024 fd5e 	bl	8025ae8 <floor>
 800102c:	ec51 0b10 	vmov	r0, r1, d0
 8001030:	f04f 0200 	mov.w	r2, #0
 8001034:	4b20      	ldr	r3, [pc, #128]	@ (80010b8 <main+0x1cc>)
 8001036:	f7ff fc21 	bl	800087c <__aeabi_ddiv>
 800103a:	4602      	mov	r2, r0
 800103c:	460b      	mov	r3, r1
 800103e:	4610      	mov	r0, r2
 8001040:	4619      	mov	r1, r3
 8001042:	f7ff fd8b 	bl	8000b5c <__aeabi_d2f>
 8001046:	4603      	mov	r3, r0
 8001048:	4a19      	ldr	r2, [pc, #100]	@ (80010b0 <main+0x1c4>)
 800104a:	6013      	str	r3, [r2, #0]
		  hum = floor(hum)/10.0;
 800104c:	4b19      	ldr	r3, [pc, #100]	@ (80010b4 <main+0x1c8>)
 800104e:	681b      	ldr	r3, [r3, #0]
 8001050:	4618      	mov	r0, r3
 8001052:	f7ff fa91 	bl	8000578 <__aeabi_f2d>
 8001056:	4602      	mov	r2, r0
 8001058:	460b      	mov	r3, r1
 800105a:	ec43 2b10 	vmov	d0, r2, r3
 800105e:	f024 fd43 	bl	8025ae8 <floor>
 8001062:	ec51 0b10 	vmov	r0, r1, d0
 8001066:	f04f 0200 	mov.w	r2, #0
 800106a:	4b13      	ldr	r3, [pc, #76]	@ (80010b8 <main+0x1cc>)
 800106c:	f7ff fc06 	bl	800087c <__aeabi_ddiv>
 8001070:	4602      	mov	r2, r0
 8001072:	460b      	mov	r3, r1
 8001074:	4610      	mov	r0, r2
 8001076:	4619      	mov	r1, r3
 8001078:	f7ff fd70 	bl	8000b5c <__aeabi_d2f>
 800107c:	4603      	mov	r3, r0
 800107e:	4a0d      	ldr	r2, [pc, #52]	@ (80010b4 <main+0x1c8>)
 8001080:	6013      	str	r3, [r2, #0]
//
//
//
    /* USER CODE END WHILE */

  MX_TouchGFX_Process();
 8001082:	f006 feb1 	bl	8007de8 <MX_TouchGFX_Process>
		  if (HAL_GPIO_ReadPin(WATER_LEVEL_GPIO_Port, WATER_LEVEL_Pin)){
 8001086:	e779      	b.n	8000f7c <main+0x90>
 8001088:	2000054c 	.word	0x2000054c
 800108c:	20000594 	.word	0x20000594
 8001090:	20000624 	.word	0x20000624
 8001094:	2000033c 	.word	0x2000033c
 8001098:	200005dc 	.word	0x200005dc
 800109c:	40020400 	.word	0x40020400
 80010a0:	40020800 	.word	0x40020800
 80010a4:	20000010 	.word	0x20000010
 80010a8:	200003ec 	.word	0x200003ec
 80010ac:	20000630 	.word	0x20000630
 80010b0:	20000628 	.word	0x20000628
 80010b4:	2000062c 	.word	0x2000062c
 80010b8:	40240000 	.word	0x40240000

080010bc <SystemClock_Config>:
/**
  * @brief System Clock Configuration
  * @retval None
  */
void SystemClock_Config(void)
{
 80010bc:	b580      	push	{r7, lr}
 80010be:	b094      	sub	sp, #80	@ 0x50
 80010c0:	af00      	add	r7, sp, #0
  RCC_OscInitTypeDef RCC_OscInitStruct = {0};
 80010c2:	f107 031c 	add.w	r3, r7, #28
 80010c6:	2234      	movs	r2, #52	@ 0x34
 80010c8:	2100      	movs	r1, #0
 80010ca:	4618      	mov	r0, r3
 80010cc:	f024 ff97 	bl	8025ffe <memset>
  RCC_ClkInitTypeDef RCC_ClkInitStruct = {0};
 80010d0:	f107 0308 	add.w	r3, r7, #8
 80010d4:	2200      	movs	r2, #0
 80010d6:	601a      	str	r2, [r3, #0]
 80010d8:	605a      	str	r2, [r3, #4]
 80010da:	609a      	str	r2, [r3, #8]
 80010dc:	60da      	str	r2, [r3, #12]
 80010de:	611a      	str	r2, [r3, #16]

  /** Configure the main internal regulator output voltage
  */
  __HAL_RCC_PWR_CLK_ENABLE();
 80010e0:	2300      	movs	r3, #0
 80010e2:	607b      	str	r3, [r7, #4]
 80010e4:	4b2c      	ldr	r3, [pc, #176]	@ (8001198 <SystemClock_Config+0xdc>)
 80010e6:	6c1b      	ldr	r3, [r3, #64]	@ 0x40
 80010e8:	4a2b      	ldr	r2, [pc, #172]	@ (8001198 <SystemClock_Config+0xdc>)
 80010ea:	f043 5380 	orr.w	r3, r3, #268435456	@ 0x10000000
 80010ee:	6413      	str	r3, [r2, #64]	@ 0x40
 80010f0:	4b29      	ldr	r3, [pc, #164]	@ (8001198 <SystemClock_Config+0xdc>)
 80010f2:	6c1b      	ldr	r3, [r3, #64]	@ 0x40
 80010f4:	f003 5380 	and.w	r3, r3, #268435456	@ 0x10000000
 80010f8:	607b      	str	r3, [r7, #4]
 80010fa:	687b      	ldr	r3, [r7, #4]
  __HAL_PWR_VOLTAGESCALING_CONFIG(PWR_REGULATOR_VOLTAGE_SCALE1);
 80010fc:	2300      	movs	r3, #0
 80010fe:	603b      	str	r3, [r7, #0]
 8001100:	4b26      	ldr	r3, [pc, #152]	@ (800119c <SystemClock_Config+0xe0>)
 8001102:	681b      	ldr	r3, [r3, #0]
 8001104:	4a25      	ldr	r2, [pc, #148]	@ (800119c <SystemClock_Config+0xe0>)
 8001106:	f443 4340 	orr.w	r3, r3, #49152	@ 0xc000
 800110a:	6013      	str	r3, [r2, #0]
 800110c:	4b23      	ldr	r3, [pc, #140]	@ (800119c <SystemClock_Config+0xe0>)
 800110e:	681b      	ldr	r3, [r3, #0]
 8001110:	f403 4340 	and.w	r3, r3, #49152	@ 0xc000
 8001114:	603b      	str	r3, [r7, #0]
 8001116:	683b      	ldr	r3, [r7, #0]

  /** Initializes the RCC Oscillators according to the specified parameters
  * in the RCC_OscInitTypeDef structure.
  */
  RCC_OscInitStruct.OscillatorType = RCC_OSCILLATORTYPE_HSI;
 8001118:	2302      	movs	r3, #2
 800111a:	61fb      	str	r3, [r7, #28]
  RCC_OscInitStruct.HSIState = RCC_HSI_ON;
 800111c:	2301      	movs	r3, #1
 800111e:	62bb      	str	r3, [r7, #40]	@ 0x28
  RCC_OscInitStruct.HSICalibrationValue = RCC_HSICALIBRATION_DEFAULT;
 8001120:	2310      	movs	r3, #16
 8001122:	62fb      	str	r3, [r7, #44]	@ 0x2c
  RCC_OscInitStruct.PLL.PLLState = RCC_PLL_ON;
 8001124:	2302      	movs	r3, #2
 8001126:	637b      	str	r3, [r7, #52]	@ 0x34
  RCC_OscInitStruct.PLL.PLLSource = RCC_PLLSOURCE_HSI;
 8001128:	2300      	movs	r3, #0
 800112a:	63bb      	str	r3, [r7, #56]	@ 0x38
  RCC_OscInitStruct.PLL.PLLM = 8;
 800112c:	2308      	movs	r3, #8
 800112e:	63fb      	str	r3, [r7, #60]	@ 0x3c
  RCC_OscInitStruct.PLL.PLLN = 180;
 8001130:	23b4      	movs	r3, #180	@ 0xb4
 8001132:	643b      	str	r3, [r7, #64]	@ 0x40
  RCC_OscInitStruct.PLL.PLLP = RCC_PLLP_DIV2;
 8001134:	2302      	movs	r3, #2
 8001136:	647b      	str	r3, [r7, #68]	@ 0x44
  RCC_OscInitStruct.PLL.PLLQ = 2;
 8001138:	2302      	movs	r3, #2
 800113a:	64bb      	str	r3, [r7, #72]	@ 0x48
  RCC_OscInitStruct.PLL.PLLR = 2;
 800113c:	2302      	movs	r3, #2
 800113e:	64fb      	str	r3, [r7, #76]	@ 0x4c
  if (HAL_RCC_OscConfig(&RCC_OscInitStruct) != HAL_OK)
 8001140:	f107 031c 	add.w	r3, r7, #28
 8001144:	4618      	mov	r0, r3
 8001146:	f004 fb61 	bl	800580c <HAL_RCC_OscConfig>
 800114a:	4603      	mov	r3, r0
 800114c:	2b00      	cmp	r3, #0
 800114e:	d001      	beq.n	8001154 <SystemClock_Config+0x98>
  {
    Error_Handler();
 8001150:	f000 fb48 	bl	80017e4 <Error_Handler>
  }

  /** Activate the Over-Drive mode
  */
  if (HAL_PWREx_EnableOverDrive() != HAL_OK)
 8001154:	f003 ffd4 	bl	8005100 <HAL_PWREx_EnableOverDrive>
 8001158:	4603      	mov	r3, r0
 800115a:	2b00      	cmp	r3, #0
 800115c:	d001      	beq.n	8001162 <SystemClock_Config+0xa6>
  {
    Error_Handler();
 800115e:	f000 fb41 	bl	80017e4 <Error_Handler>
  }

  /** Initializes the CPU, AHB and APB buses clocks
  */
  RCC_ClkInitStruct.ClockType = RCC_CLOCKTYPE_HCLK|RCC_CLOCKTYPE_SYSCLK
 8001162:	230f      	movs	r3, #15
 8001164:	60bb      	str	r3, [r7, #8]
                              |RCC_CLOCKTYPE_PCLK1|RCC_CLOCKTYPE_PCLK2;
  RCC_ClkInitStruct.SYSCLKSource = RCC_SYSCLKSOURCE_PLLCLK;
 8001166:	2302      	movs	r3, #2
 8001168:	60fb      	str	r3, [r7, #12]
  RCC_ClkInitStruct.AHBCLKDivider = RCC_SYSCLK_DIV1;
 800116a:	2300      	movs	r3, #0
 800116c:	613b      	str	r3, [r7, #16]
  RCC_ClkInitStruct.APB1CLKDivider = RCC_HCLK_DIV4;
 800116e:	f44f 53a0 	mov.w	r3, #5120	@ 0x1400
 8001172:	617b      	str	r3, [r7, #20]
  RCC_ClkInitStruct.APB2CLKDivider = RCC_HCLK_DIV2;
 8001174:	f44f 5380 	mov.w	r3, #4096	@ 0x1000
 8001178:	61bb      	str	r3, [r7, #24]

  if (HAL_RCC_ClockConfig(&RCC_ClkInitStruct, FLASH_LATENCY_5) != HAL_OK)
 800117a:	f107 0308 	add.w	r3, r7, #8
 800117e:	2105      	movs	r1, #5
 8001180:	4618      	mov	r0, r3
 8001182:	f004 f80d 	bl	80051a0 <HAL_RCC_ClockConfig>
 8001186:	4603      	mov	r3, r0
 8001188:	2b00      	cmp	r3, #0
 800118a:	d001      	beq.n	8001190 <SystemClock_Config+0xd4>
  {
    Error_Handler();
 800118c:	f000 fb2a 	bl	80017e4 <Error_Handler>
  }
}
 8001190:	bf00      	nop
 8001192:	3750      	adds	r7, #80	@ 0x50
 8001194:	46bd      	mov	sp, r7
 8001196:	bd80      	pop	{r7, pc}
 8001198:	40023800 	.word	0x40023800
 800119c:	40007000 	.word	0x40007000

080011a0 <MX_ADC2_Init>:
  * @brief ADC2 Initialization Function
  * @param None
  * @retval None
  */
static void MX_ADC2_Init(void)
{
 80011a0:	b580      	push	{r7, lr}
 80011a2:	b084      	sub	sp, #16
 80011a4:	af00      	add	r7, sp, #0

  /* USER CODE BEGIN ADC2_Init 0 */

  /* USER CODE END ADC2_Init 0 */

  ADC_ChannelConfTypeDef sConfig = {0};
 80011a6:	463b      	mov	r3, r7
 80011a8:	2200      	movs	r2, #0
 80011aa:	601a      	str	r2, [r3, #0]
 80011ac:	605a      	str	r2, [r3, #4]
 80011ae:	609a      	str	r2, [r3, #8]
 80011b0:	60da      	str	r2, [r3, #12]

  /* USER CODE END ADC2_Init 1 */

  /** Configure the global features of the ADC (Clock, Resolution, Data Alignment and number of conversion)
  */
  hadc2.Instance = ADC2;
 80011b2:	4b21      	ldr	r3, [pc, #132]	@ (8001238 <MX_ADC2_Init+0x98>)
 80011b4:	4a21      	ldr	r2, [pc, #132]	@ (800123c <MX_ADC2_Init+0x9c>)
 80011b6:	601a      	str	r2, [r3, #0]
  hadc2.Init.ClockPrescaler = ADC_CLOCK_SYNC_PCLK_DIV4;
 80011b8:	4b1f      	ldr	r3, [pc, #124]	@ (8001238 <MX_ADC2_Init+0x98>)
 80011ba:	f44f 3280 	mov.w	r2, #65536	@ 0x10000
 80011be:	605a      	str	r2, [r3, #4]
  hadc2.Init.Resolution = ADC_RESOLUTION_12B;
 80011c0:	4b1d      	ldr	r3, [pc, #116]	@ (8001238 <MX_ADC2_Init+0x98>)
 80011c2:	2200      	movs	r2, #0
 80011c4:	609a      	str	r2, [r3, #8]
  hadc2.Init.ScanConvMode = DISABLE;
 80011c6:	4b1c      	ldr	r3, [pc, #112]	@ (8001238 <MX_ADC2_Init+0x98>)
 80011c8:	2200      	movs	r2, #0
 80011ca:	611a      	str	r2, [r3, #16]
  hadc2.Init.ContinuousConvMode = ENABLE;
 80011cc:	4b1a      	ldr	r3, [pc, #104]	@ (8001238 <MX_ADC2_Init+0x98>)
 80011ce:	2201      	movs	r2, #1
 80011d0:	761a      	strb	r2, [r3, #24]
  hadc2.Init.DiscontinuousConvMode = DISABLE;
 80011d2:	4b19      	ldr	r3, [pc, #100]	@ (8001238 <MX_ADC2_Init+0x98>)
 80011d4:	2200      	movs	r2, #0
 80011d6:	f883 2020 	strb.w	r2, [r3, #32]
  hadc2.Init.ExternalTrigConvEdge = ADC_EXTERNALTRIGCONVEDGE_NONE;
 80011da:	4b17      	ldr	r3, [pc, #92]	@ (8001238 <MX_ADC2_Init+0x98>)
 80011dc:	2200      	movs	r2, #0
 80011de:	62da      	str	r2, [r3, #44]	@ 0x2c
  hadc2.Init.ExternalTrigConv = ADC_SOFTWARE_START;
 80011e0:	4b15      	ldr	r3, [pc, #84]	@ (8001238 <MX_ADC2_Init+0x98>)
 80011e2:	4a17      	ldr	r2, [pc, #92]	@ (8001240 <MX_ADC2_Init+0xa0>)
 80011e4:	629a      	str	r2, [r3, #40]	@ 0x28
  hadc2.Init.DataAlign = ADC_DATAALIGN_RIGHT;
 80011e6:	4b14      	ldr	r3, [pc, #80]	@ (8001238 <MX_ADC2_Init+0x98>)
 80011e8:	2200      	movs	r2, #0
 80011ea:	60da      	str	r2, [r3, #12]
  hadc2.Init.NbrOfConversion = 1;
 80011ec:	4b12      	ldr	r3, [pc, #72]	@ (8001238 <MX_ADC2_Init+0x98>)
 80011ee:	2201      	movs	r2, #1
 80011f0:	61da      	str	r2, [r3, #28]
  hadc2.Init.DMAContinuousRequests = DISABLE;
 80011f2:	4b11      	ldr	r3, [pc, #68]	@ (8001238 <MX_ADC2_Init+0x98>)
 80011f4:	2200      	movs	r2, #0
 80011f6:	f883 2030 	strb.w	r2, [r3, #48]	@ 0x30
  hadc2.Init.EOCSelection = ADC_EOC_SINGLE_CONV;
 80011fa:	4b0f      	ldr	r3, [pc, #60]	@ (8001238 <MX_ADC2_Init+0x98>)
 80011fc:	2201      	movs	r2, #1
 80011fe:	615a      	str	r2, [r3, #20]
  if (HAL_ADC_Init(&hadc2) != HAL_OK)
 8001200:	480d      	ldr	r0, [pc, #52]	@ (8001238 <MX_ADC2_Init+0x98>)
 8001202:	f001 fc4b 	bl	8002a9c <HAL_ADC_Init>
 8001206:	4603      	mov	r3, r0
 8001208:	2b00      	cmp	r3, #0
 800120a:	d001      	beq.n	8001210 <MX_ADC2_Init+0x70>
  {
    Error_Handler();
 800120c:	f000 faea 	bl	80017e4 <Error_Handler>
  }

  /** Configure for the selected ADC regular channel its corresponding rank in the sequencer and its sample time.
  */
  sConfig.Channel = ADC_CHANNEL_14;
 8001210:	230e      	movs	r3, #14
 8001212:	603b      	str	r3, [r7, #0]
  sConfig.Rank = 1;
 8001214:	2301      	movs	r3, #1
 8001216:	607b      	str	r3, [r7, #4]
  sConfig.SamplingTime = ADC_SAMPLETIME_3CYCLES;
 8001218:	2300      	movs	r3, #0
 800121a:	60bb      	str	r3, [r7, #8]
  if (HAL_ADC_ConfigChannel(&hadc2, &sConfig) != HAL_OK)
 800121c:	463b      	mov	r3, r7
 800121e:	4619      	mov	r1, r3
 8001220:	4805      	ldr	r0, [pc, #20]	@ (8001238 <MX_ADC2_Init+0x98>)
 8001222:	f001 fdad 	bl	8002d80 <HAL_ADC_ConfigChannel>
 8001226:	4603      	mov	r3, r0
 8001228:	2b00      	cmp	r3, #0
 800122a:	d001      	beq.n	8001230 <MX_ADC2_Init+0x90>
  {
    Error_Handler();
 800122c:	f000 fada 	bl	80017e4 <Error_Handler>
  }
  /* USER CODE BEGIN ADC2_Init 2 */

  /* USER CODE END ADC2_Init 2 */

}
 8001230:	bf00      	nop
 8001232:	3710      	adds	r7, #16
 8001234:	46bd      	mov	sp, r7
 8001236:	bd80      	pop	{r7, pc}
 8001238:	2000033c 	.word	0x2000033c
 800123c:	40012100 	.word	0x40012100
 8001240:	0f000001 	.word	0x0f000001

08001244 <MX_CRC_Init>:
  * @brief CRC Initialization Function
  * @param None
  * @retval None
  */
static void MX_CRC_Init(void)
{
 8001244:	b580      	push	{r7, lr}
 8001246:	af00      	add	r7, sp, #0
  /* USER CODE END CRC_Init 0 */

  /* USER CODE BEGIN CRC_Init 1 */

  /* USER CODE END CRC_Init 1 */
  hcrc.Instance = CRC;
 8001248:	4b06      	ldr	r3, [pc, #24]	@ (8001264 <MX_CRC_Init+0x20>)
 800124a:	4a07      	ldr	r2, [pc, #28]	@ (8001268 <MX_CRC_Init+0x24>)
 800124c:	601a      	str	r2, [r3, #0]
  if (HAL_CRC_Init(&hcrc) != HAL_OK)
 800124e:	4805      	ldr	r0, [pc, #20]	@ (8001264 <MX_CRC_Init+0x20>)
 8001250:	f002 f9b5 	bl	80035be <HAL_CRC_Init>
 8001254:	4603      	mov	r3, r0
 8001256:	2b00      	cmp	r3, #0
 8001258:	d001      	beq.n	800125e <MX_CRC_Init+0x1a>
  {
    Error_Handler();
 800125a:	f000 fac3 	bl	80017e4 <Error_Handler>
  }
  /* USER CODE BEGIN CRC_Init 2 */

  /* USER CODE END CRC_Init 2 */

}
 800125e:	bf00      	nop
 8001260:	bd80      	pop	{r7, pc}
 8001262:	bf00      	nop
 8001264:	200003e4 	.word	0x200003e4
 8001268:	40023000 	.word	0x40023000

0800126c <MX_I2C1_Init>:
  * @brief I2C1 Initialization Function
  * @param None
  * @retval None
  */
static void MX_I2C1_Init(void)
{
 800126c:	b580      	push	{r7, lr}
 800126e:	af00      	add	r7, sp, #0
  /* USER CODE END I2C1_Init 0 */

  /* USER CODE BEGIN I2C1_Init 1 */

  /* USER CODE END I2C1_Init 1 */
  hi2c1.Instance = I2C1;
 8001270:	4b12      	ldr	r3, [pc, #72]	@ (80012bc <MX_I2C1_Init+0x50>)
 8001272:	4a13      	ldr	r2, [pc, #76]	@ (80012c0 <MX_I2C1_Init+0x54>)
 8001274:	601a      	str	r2, [r3, #0]
  hi2c1.Init.ClockSpeed = 100000;
 8001276:	4b11      	ldr	r3, [pc, #68]	@ (80012bc <MX_I2C1_Init+0x50>)
 8001278:	4a12      	ldr	r2, [pc, #72]	@ (80012c4 <MX_I2C1_Init+0x58>)
 800127a:	605a      	str	r2, [r3, #4]
  hi2c1.Init.DutyCycle = I2C_DUTYCYCLE_2;
 800127c:	4b0f      	ldr	r3, [pc, #60]	@ (80012bc <MX_I2C1_Init+0x50>)
 800127e:	2200      	movs	r2, #0
 8001280:	609a      	str	r2, [r3, #8]
  hi2c1.Init.OwnAddress1 = 0;
 8001282:	4b0e      	ldr	r3, [pc, #56]	@ (80012bc <MX_I2C1_Init+0x50>)
 8001284:	2200      	movs	r2, #0
 8001286:	60da      	str	r2, [r3, #12]
  hi2c1.Init.AddressingMode = I2C_ADDRESSINGMODE_7BIT;
 8001288:	4b0c      	ldr	r3, [pc, #48]	@ (80012bc <MX_I2C1_Init+0x50>)
 800128a:	f44f 4280 	mov.w	r2, #16384	@ 0x4000
 800128e:	611a      	str	r2, [r3, #16]
  hi2c1.Init.DualAddressMode = I2C_DUALADDRESS_DISABLE;
 8001290:	4b0a      	ldr	r3, [pc, #40]	@ (80012bc <MX_I2C1_Init+0x50>)
 8001292:	2200      	movs	r2, #0
 8001294:	615a      	str	r2, [r3, #20]
  hi2c1.Init.OwnAddress2 = 0;
 8001296:	4b09      	ldr	r3, [pc, #36]	@ (80012bc <MX_I2C1_Init+0x50>)
 8001298:	2200      	movs	r2, #0
 800129a:	619a      	str	r2, [r3, #24]
  hi2c1.Init.GeneralCallMode = I2C_GENERALCALL_DISABLE;
 800129c:	4b07      	ldr	r3, [pc, #28]	@ (80012bc <MX_I2C1_Init+0x50>)
 800129e:	2200      	movs	r2, #0
 80012a0:	61da      	str	r2, [r3, #28]
  hi2c1.Init.NoStretchMode = I2C_NOSTRETCH_DISABLE;
 80012a2:	4b06      	ldr	r3, [pc, #24]	@ (80012bc <MX_I2C1_Init+0x50>)
 80012a4:	2200      	movs	r2, #0
 80012a6:	621a      	str	r2, [r3, #32]
  if (HAL_I2C_Init(&hi2c1) != HAL_OK)
 80012a8:	4804      	ldr	r0, [pc, #16]	@ (80012bc <MX_I2C1_Init+0x50>)
 80012aa:	f002 ff2f 	bl	800410c <HAL_I2C_Init>
 80012ae:	4603      	mov	r3, r0
 80012b0:	2b00      	cmp	r3, #0
 80012b2:	d001      	beq.n	80012b8 <MX_I2C1_Init+0x4c>
  {
    Error_Handler();
 80012b4:	f000 fa96 	bl	80017e4 <Error_Handler>
  }
  /* USER CODE BEGIN I2C1_Init 2 */

  /* USER CODE END I2C1_Init 2 */

}
 80012b8:	bf00      	nop
 80012ba:	bd80      	pop	{r7, pc}
 80012bc:	200003ec 	.word	0x200003ec
 80012c0:	40005400 	.word	0x40005400
 80012c4:	000186a0 	.word	0x000186a0

080012c8 <MX_I2C2_Init>:
  * @brief I2C2 Initialization Function
  * @param None
  * @retval None
  */
static void MX_I2C2_Init(void)
{
 80012c8:	b580      	push	{r7, lr}
 80012ca:	af00      	add	r7, sp, #0
  /* USER CODE END I2C2_Init 0 */

  /* USER CODE BEGIN I2C2_Init 1 */

  /* USER CODE END I2C2_Init 1 */
  hi2c2.Instance = I2C2;
 80012cc:	4b12      	ldr	r3, [pc, #72]	@ (8001318 <MX_I2C2_Init+0x50>)
 80012ce:	4a13      	ldr	r2, [pc, #76]	@ (800131c <MX_I2C2_Init+0x54>)
 80012d0:	601a      	str	r2, [r3, #0]
  hi2c2.Init.ClockSpeed = 100000;
 80012d2:	4b11      	ldr	r3, [pc, #68]	@ (8001318 <MX_I2C2_Init+0x50>)
 80012d4:	4a12      	ldr	r2, [pc, #72]	@ (8001320 <MX_I2C2_Init+0x58>)
 80012d6:	605a      	str	r2, [r3, #4]
  hi2c2.Init.DutyCycle = I2C_DUTYCYCLE_2;
 80012d8:	4b0f      	ldr	r3, [pc, #60]	@ (8001318 <MX_I2C2_Init+0x50>)
 80012da:	2200      	movs	r2, #0
 80012dc:	609a      	str	r2, [r3, #8]
  hi2c2.Init.OwnAddress1 = 0;
 80012de:	4b0e      	ldr	r3, [pc, #56]	@ (8001318 <MX_I2C2_Init+0x50>)
 80012e0:	2200      	movs	r2, #0
 80012e2:	60da      	str	r2, [r3, #12]
  hi2c2.Init.AddressingMode = I2C_ADDRESSINGMODE_7BIT;
 80012e4:	4b0c      	ldr	r3, [pc, #48]	@ (8001318 <MX_I2C2_Init+0x50>)
 80012e6:	f44f 4280 	mov.w	r2, #16384	@ 0x4000
 80012ea:	611a      	str	r2, [r3, #16]
  hi2c2.Init.DualAddressMode = I2C_DUALADDRESS_DISABLE;
 80012ec:	4b0a      	ldr	r3, [pc, #40]	@ (8001318 <MX_I2C2_Init+0x50>)
 80012ee:	2200      	movs	r2, #0
 80012f0:	615a      	str	r2, [r3, #20]
  hi2c2.Init.OwnAddress2 = 0;
 80012f2:	4b09      	ldr	r3, [pc, #36]	@ (8001318 <MX_I2C2_Init+0x50>)
 80012f4:	2200      	movs	r2, #0
 80012f6:	619a      	str	r2, [r3, #24]
  hi2c2.Init.GeneralCallMode = I2C_GENERALCALL_DISABLE;
 80012f8:	4b07      	ldr	r3, [pc, #28]	@ (8001318 <MX_I2C2_Init+0x50>)
 80012fa:	2200      	movs	r2, #0
 80012fc:	61da      	str	r2, [r3, #28]
  hi2c2.Init.NoStretchMode = I2C_NOSTRETCH_DISABLE;
 80012fe:	4b06      	ldr	r3, [pc, #24]	@ (8001318 <MX_I2C2_Init+0x50>)
 8001300:	2200      	movs	r2, #0
 8001302:	621a      	str	r2, [r3, #32]
  if (HAL_I2C_Init(&hi2c2) != HAL_OK)
 8001304:	4804      	ldr	r0, [pc, #16]	@ (8001318 <MX_I2C2_Init+0x50>)
 8001306:	f002 ff01 	bl	800410c <HAL_I2C_Init>
 800130a:	4603      	mov	r3, r0
 800130c:	2b00      	cmp	r3, #0
 800130e:	d001      	beq.n	8001314 <MX_I2C2_Init+0x4c>
  {
    Error_Handler();
 8001310:	f000 fa68 	bl	80017e4 <Error_Handler>
  }
  /* USER CODE BEGIN I2C2_Init 2 */

  /* USER CODE END I2C2_Init 2 */

}
 8001314:	bf00      	nop
 8001316:	bd80      	pop	{r7, pc}
 8001318:	20000440 	.word	0x20000440
 800131c:	40005800 	.word	0x40005800
 8001320:	000186a0 	.word	0x000186a0

08001324 <MX_SPI2_Init>:
  * @brief SPI2 Initialization Function
  * @param None
  * @retval None
  */
static void MX_SPI2_Init(void)
{
 8001324:	b580      	push	{r7, lr}
 8001326:	af00      	add	r7, sp, #0

  /* USER CODE BEGIN SPI2_Init 1 */

  /* USER CODE END SPI2_Init 1 */
  /* SPI2 parameter configuration*/
  hspi2.Instance = SPI2;
 8001328:	4b17      	ldr	r3, [pc, #92]	@ (8001388 <MX_SPI2_Init+0x64>)
 800132a:	4a18      	ldr	r2, [pc, #96]	@ (800138c <MX_SPI2_Init+0x68>)
 800132c:	601a      	str	r2, [r3, #0]
  hspi2.Init.Mode = SPI_MODE_MASTER;
 800132e:	4b16      	ldr	r3, [pc, #88]	@ (8001388 <MX_SPI2_Init+0x64>)
 8001330:	f44f 7282 	mov.w	r2, #260	@ 0x104
 8001334:	605a      	str	r2, [r3, #4]
  hspi2.Init.Direction = SPI_DIRECTION_2LINES;
 8001336:	4b14      	ldr	r3, [pc, #80]	@ (8001388 <MX_SPI2_Init+0x64>)
 8001338:	2200      	movs	r2, #0
 800133a:	609a      	str	r2, [r3, #8]
  hspi2.Init.DataSize = SPI_DATASIZE_8BIT;
 800133c:	4b12      	ldr	r3, [pc, #72]	@ (8001388 <MX_SPI2_Init+0x64>)
 800133e:	2200      	movs	r2, #0
 8001340:	60da      	str	r2, [r3, #12]
  hspi2.Init.CLKPolarity = SPI_POLARITY_LOW;
 8001342:	4b11      	ldr	r3, [pc, #68]	@ (8001388 <MX_SPI2_Init+0x64>)
 8001344:	2200      	movs	r2, #0
 8001346:	611a      	str	r2, [r3, #16]
  hspi2.Init.CLKPhase = SPI_PHASE_1EDGE;
 8001348:	4b0f      	ldr	r3, [pc, #60]	@ (8001388 <MX_SPI2_Init+0x64>)
 800134a:	2200      	movs	r2, #0
 800134c:	615a      	str	r2, [r3, #20]
  hspi2.Init.NSS = SPI_NSS_SOFT;
 800134e:	4b0e      	ldr	r3, [pc, #56]	@ (8001388 <MX_SPI2_Init+0x64>)
 8001350:	f44f 7200 	mov.w	r2, #512	@ 0x200
 8001354:	619a      	str	r2, [r3, #24]
  hspi2.Init.BaudRatePrescaler = SPI_BAUDRATEPRESCALER_2;
 8001356:	4b0c      	ldr	r3, [pc, #48]	@ (8001388 <MX_SPI2_Init+0x64>)
 8001358:	2200      	movs	r2, #0
 800135a:	61da      	str	r2, [r3, #28]
  hspi2.Init.FirstBit = SPI_FIRSTBIT_MSB;
 800135c:	4b0a      	ldr	r3, [pc, #40]	@ (8001388 <MX_SPI2_Init+0x64>)
 800135e:	2200      	movs	r2, #0
 8001360:	621a      	str	r2, [r3, #32]
  hspi2.Init.TIMode = SPI_TIMODE_DISABLE;
 8001362:	4b09      	ldr	r3, [pc, #36]	@ (8001388 <MX_SPI2_Init+0x64>)
 8001364:	2200      	movs	r2, #0
 8001366:	625a      	str	r2, [r3, #36]	@ 0x24
  hspi2.Init.CRCCalculation = SPI_CRCCALCULATION_DISABLE;
 8001368:	4b07      	ldr	r3, [pc, #28]	@ (8001388 <MX_SPI2_Init+0x64>)
 800136a:	2200      	movs	r2, #0
 800136c:	629a      	str	r2, [r3, #40]	@ 0x28
  hspi2.Init.CRCPolynomial = 10;
 800136e:	4b06      	ldr	r3, [pc, #24]	@ (8001388 <MX_SPI2_Init+0x64>)
 8001370:	220a      	movs	r2, #10
 8001372:	62da      	str	r2, [r3, #44]	@ 0x2c
  if (HAL_SPI_Init(&hspi2) != HAL_OK)
 8001374:	4804      	ldr	r0, [pc, #16]	@ (8001388 <MX_SPI2_Init+0x64>)
 8001376:	f004 fce7 	bl	8005d48 <HAL_SPI_Init>
 800137a:	4603      	mov	r3, r0
 800137c:	2b00      	cmp	r3, #0
 800137e:	d001      	beq.n	8001384 <MX_SPI2_Init+0x60>
  {
    Error_Handler();
 8001380:	f000 fa30 	bl	80017e4 <Error_Handler>
  }
  /* USER CODE BEGIN SPI2_Init 2 */

  /* USER CODE END SPI2_Init 2 */

}
 8001384:	bf00      	nop
 8001386:	bd80      	pop	{r7, pc}
 8001388:	20000494 	.word	0x20000494
 800138c:	40003800 	.word	0x40003800

08001390 <MX_TIM2_Init>:
  * @brief TIM2 Initialization Function
  * @param None
  * @retval None
  */
static void MX_TIM2_Init(void)
{
 8001390:	b580      	push	{r7, lr}
 8001392:	b08e      	sub	sp, #56	@ 0x38
 8001394:	af00      	add	r7, sp, #0

  /* USER CODE BEGIN TIM2_Init 0 */

  /* USER CODE END TIM2_Init 0 */

  TIM_ClockConfigTypeDef sClockSourceConfig = {0};
 8001396:	f107 0328 	add.w	r3, r7, #40	@ 0x28
 800139a:	2200      	movs	r2, #0
 800139c:	601a      	str	r2, [r3, #0]
 800139e:	605a      	str	r2, [r3, #4]
 80013a0:	609a      	str	r2, [r3, #8]
 80013a2:	60da      	str	r2, [r3, #12]
  TIM_MasterConfigTypeDef sMasterConfig = {0};
 80013a4:	f107 0320 	add.w	r3, r7, #32
 80013a8:	2200      	movs	r2, #0
 80013aa:	601a      	str	r2, [r3, #0]
 80013ac:	605a      	str	r2, [r3, #4]
  TIM_OC_InitTypeDef sConfigOC = {0};
 80013ae:	1d3b      	adds	r3, r7, #4
 80013b0:	2200      	movs	r2, #0
 80013b2:	601a      	str	r2, [r3, #0]
 80013b4:	605a      	str	r2, [r3, #4]
 80013b6:	609a      	str	r2, [r3, #8]
 80013b8:	60da      	str	r2, [r3, #12]
 80013ba:	611a      	str	r2, [r3, #16]
 80013bc:	615a      	str	r2, [r3, #20]
 80013be:	619a      	str	r2, [r3, #24]

  /* USER CODE BEGIN TIM2_Init 1 */

  /* USER CODE END TIM2_Init 1 */
  htim2.Instance = TIM2;
 80013c0:	4b2d      	ldr	r3, [pc, #180]	@ (8001478 <MX_TIM2_Init+0xe8>)
 80013c2:	f04f 4280 	mov.w	r2, #1073741824	@ 0x40000000
 80013c6:	601a      	str	r2, [r3, #0]
  htim2.Init.Prescaler = 59999;
 80013c8:	4b2b      	ldr	r3, [pc, #172]	@ (8001478 <MX_TIM2_Init+0xe8>)
 80013ca:	f64e 225f 	movw	r2, #59999	@ 0xea5f
 80013ce:	605a      	str	r2, [r3, #4]
  htim2.Init.CounterMode = TIM_COUNTERMODE_UP;
 80013d0:	4b29      	ldr	r3, [pc, #164]	@ (8001478 <MX_TIM2_Init+0xe8>)
 80013d2:	2200      	movs	r2, #0
 80013d4:	609a      	str	r2, [r3, #8]
  htim2.Init.Period = 29999;
 80013d6:	4b28      	ldr	r3, [pc, #160]	@ (8001478 <MX_TIM2_Init+0xe8>)
 80013d8:	f247 522f 	movw	r2, #29999	@ 0x752f
 80013dc:	60da      	str	r2, [r3, #12]
  htim2.Init.ClockDivision = TIM_CLOCKDIVISION_DIV1;
 80013de:	4b26      	ldr	r3, [pc, #152]	@ (8001478 <MX_TIM2_Init+0xe8>)
 80013e0:	2200      	movs	r2, #0
 80013e2:	611a      	str	r2, [r3, #16]
  htim2.Init.AutoReloadPreload = TIM_AUTORELOAD_PRELOAD_DISABLE;
 80013e4:	4b24      	ldr	r3, [pc, #144]	@ (8001478 <MX_TIM2_Init+0xe8>)
 80013e6:	2200      	movs	r2, #0
 80013e8:	619a      	str	r2, [r3, #24]
  if (HAL_TIM_Base_Init(&htim2) != HAL_OK)
 80013ea:	4823      	ldr	r0, [pc, #140]	@ (8001478 <MX_TIM2_Init+0xe8>)
 80013ec:	f005 fcc4 	bl	8006d78 <HAL_TIM_Base_Init>
 80013f0:	4603      	mov	r3, r0
 80013f2:	2b00      	cmp	r3, #0
 80013f4:	d001      	beq.n	80013fa <MX_TIM2_Init+0x6a>
  {
    Error_Handler();
 80013f6:	f000 f9f5 	bl	80017e4 <Error_Handler>
  }
  sClockSourceConfig.ClockSource = TIM_CLOCKSOURCE_INTERNAL;
 80013fa:	f44f 5380 	mov.w	r3, #4096	@ 0x1000
 80013fe:	62bb      	str	r3, [r7, #40]	@ 0x28
  if (HAL_TIM_ConfigClockSource(&htim2, &sClockSourceConfig) != HAL_OK)
 8001400:	f107 0328 	add.w	r3, r7, #40	@ 0x28
 8001404:	4619      	mov	r1, r3
 8001406:	481c      	ldr	r0, [pc, #112]	@ (8001478 <MX_TIM2_Init+0xe8>)
 8001408:	f006 f84a 	bl	80074a0 <HAL_TIM_ConfigClockSource>
 800140c:	4603      	mov	r3, r0
 800140e:	2b00      	cmp	r3, #0
 8001410:	d001      	beq.n	8001416 <MX_TIM2_Init+0x86>
  {
    Error_Handler();
 8001412:	f000 f9e7 	bl	80017e4 <Error_Handler>
  }
  if (HAL_TIM_PWM_Init(&htim2) != HAL_OK)
 8001416:	4818      	ldr	r0, [pc, #96]	@ (8001478 <MX_TIM2_Init+0xe8>)
 8001418:	f005 fd6e 	bl	8006ef8 <HAL_TIM_PWM_Init>
 800141c:	4603      	mov	r3, r0
 800141e:	2b00      	cmp	r3, #0
 8001420:	d001      	beq.n	8001426 <MX_TIM2_Init+0x96>
  {
    Error_Handler();
 8001422:	f000 f9df 	bl	80017e4 <Error_Handler>
  }
  sMasterConfig.MasterOutputTrigger = TIM_TRGO_RESET;
 8001426:	2300      	movs	r3, #0
 8001428:	623b      	str	r3, [r7, #32]
  sMasterConfig.MasterSlaveMode = TIM_MASTERSLAVEMODE_DISABLE;
 800142a:	2300      	movs	r3, #0
 800142c:	627b      	str	r3, [r7, #36]	@ 0x24
  if (HAL_TIMEx_MasterConfigSynchronization(&htim2, &sMasterConfig) != HAL_OK)
 800142e:	f107 0320 	add.w	r3, r7, #32
 8001432:	4619      	mov	r1, r3
 8001434:	4810      	ldr	r0, [pc, #64]	@ (8001478 <MX_TIM2_Init+0xe8>)
 8001436:	f006 fc3f 	bl	8007cb8 <HAL_TIMEx_MasterConfigSynchronization>
 800143a:	4603      	mov	r3, r0
 800143c:	2b00      	cmp	r3, #0
 800143e:	d001      	beq.n	8001444 <MX_TIM2_Init+0xb4>
  {
    Error_Handler();
 8001440:	f000 f9d0 	bl	80017e4 <Error_Handler>
  }
  sConfigOC.OCMode = TIM_OCMODE_PWM1;
 8001444:	2360      	movs	r3, #96	@ 0x60
 8001446:	607b      	str	r3, [r7, #4]
  sConfigOC.Pulse = 0;
 8001448:	2300      	movs	r3, #0
 800144a:	60bb      	str	r3, [r7, #8]
  sConfigOC.OCPolarity = TIM_OCPOLARITY_HIGH;
 800144c:	2300      	movs	r3, #0
 800144e:	60fb      	str	r3, [r7, #12]
  sConfigOC.OCFastMode = TIM_OCFAST_DISABLE;
 8001450:	2300      	movs	r3, #0
 8001452:	617b      	str	r3, [r7, #20]
  if (HAL_TIM_PWM_ConfigChannel(&htim2, &sConfigOC, TIM_CHANNEL_1) != HAL_OK)
 8001454:	1d3b      	adds	r3, r7, #4
 8001456:	2200      	movs	r2, #0
 8001458:	4619      	mov	r1, r3
 800145a:	4807      	ldr	r0, [pc, #28]	@ (8001478 <MX_TIM2_Init+0xe8>)
 800145c:	f005 ff5e 	bl	800731c <HAL_TIM_PWM_ConfigChannel>
 8001460:	4603      	mov	r3, r0
 8001462:	2b00      	cmp	r3, #0
 8001464:	d001      	beq.n	800146a <MX_TIM2_Init+0xda>
  {
    Error_Handler();
 8001466:	f000 f9bd 	bl	80017e4 <Error_Handler>
  }
  /* USER CODE BEGIN TIM2_Init 2 */

  /* USER CODE END TIM2_Init 2 */
  HAL_TIM_MspPostInit(&htim2);
 800146a:	4803      	ldr	r0, [pc, #12]	@ (8001478 <MX_TIM2_Init+0xe8>)
 800146c:	f000 fc2c 	bl	8001cc8 <HAL_TIM_MspPostInit>

}
 8001470:	bf00      	nop
 8001472:	3738      	adds	r7, #56	@ 0x38
 8001474:	46bd      	mov	sp, r7
 8001476:	bd80      	pop	{r7, pc}
 8001478:	2000054c 	.word	0x2000054c

0800147c <MX_TIM3_Init>:
  * @brief TIM3 Initialization Function
  * @param None
  * @retval None
  */
static void MX_TIM3_Init(void)
{
 800147c:	b580      	push	{r7, lr}
 800147e:	b086      	sub	sp, #24
 8001480:	af00      	add	r7, sp, #0

  /* USER CODE BEGIN TIM3_Init 0 */

  /* USER CODE END TIM3_Init 0 */

  TIM_ClockConfigTypeDef sClockSourceConfig = {0};
 8001482:	f107 0308 	add.w	r3, r7, #8
 8001486:	2200      	movs	r2, #0
 8001488:	601a      	str	r2, [r3, #0]
 800148a:	605a      	str	r2, [r3, #4]
 800148c:	609a      	str	r2, [r3, #8]
 800148e:	60da      	str	r2, [r3, #12]
  TIM_MasterConfigTypeDef sMasterConfig = {0};
 8001490:	463b      	mov	r3, r7
 8001492:	2200      	movs	r2, #0
 8001494:	601a      	str	r2, [r3, #0]
 8001496:	605a      	str	r2, [r3, #4]

  /* USER CODE BEGIN TIM3_Init 1 */

  /* USER CODE END TIM3_Init 1 */
  htim3.Instance = TIM3;
 8001498:	4b1d      	ldr	r3, [pc, #116]	@ (8001510 <MX_TIM3_Init+0x94>)
 800149a:	4a1e      	ldr	r2, [pc, #120]	@ (8001514 <MX_TIM3_Init+0x98>)
 800149c:	601a      	str	r2, [r3, #0]
  htim3.Init.Prescaler = 9999;
 800149e:	4b1c      	ldr	r3, [pc, #112]	@ (8001510 <MX_TIM3_Init+0x94>)
 80014a0:	f242 720f 	movw	r2, #9999	@ 0x270f
 80014a4:	605a      	str	r2, [r3, #4]
  htim3.Init.CounterMode = TIM_COUNTERMODE_UP;
 80014a6:	4b1a      	ldr	r3, [pc, #104]	@ (8001510 <MX_TIM3_Init+0x94>)
 80014a8:	2200      	movs	r2, #0
 80014aa:	609a      	str	r2, [r3, #8]
  htim3.Init.Period = 299;
 80014ac:	4b18      	ldr	r3, [pc, #96]	@ (8001510 <MX_TIM3_Init+0x94>)
 80014ae:	f240 122b 	movw	r2, #299	@ 0x12b
 80014b2:	60da      	str	r2, [r3, #12]
  htim3.Init.ClockDivision = TIM_CLOCKDIVISION_DIV1;
 80014b4:	4b16      	ldr	r3, [pc, #88]	@ (8001510 <MX_TIM3_Init+0x94>)
 80014b6:	2200      	movs	r2, #0
 80014b8:	611a      	str	r2, [r3, #16]
  htim3.Init.AutoReloadPreload = TIM_AUTORELOAD_PRELOAD_DISABLE;
 80014ba:	4b15      	ldr	r3, [pc, #84]	@ (8001510 <MX_TIM3_Init+0x94>)
 80014bc:	2200      	movs	r2, #0
 80014be:	619a      	str	r2, [r3, #24]
  if (HAL_TIM_Base_Init(&htim3) != HAL_OK)
 80014c0:	4813      	ldr	r0, [pc, #76]	@ (8001510 <MX_TIM3_Init+0x94>)
 80014c2:	f005 fc59 	bl	8006d78 <HAL_TIM_Base_Init>
 80014c6:	4603      	mov	r3, r0
 80014c8:	2b00      	cmp	r3, #0
 80014ca:	d001      	beq.n	80014d0 <MX_TIM3_Init+0x54>
  {
    Error_Handler();
 80014cc:	f000 f98a 	bl	80017e4 <Error_Handler>
  }
  sClockSourceConfig.ClockSource = TIM_CLOCKSOURCE_INTERNAL;
 80014d0:	f44f 5380 	mov.w	r3, #4096	@ 0x1000
 80014d4:	60bb      	str	r3, [r7, #8]
  if (HAL_TIM_ConfigClockSource(&htim3, &sClockSourceConfig) != HAL_OK)
 80014d6:	f107 0308 	add.w	r3, r7, #8
 80014da:	4619      	mov	r1, r3
 80014dc:	480c      	ldr	r0, [pc, #48]	@ (8001510 <MX_TIM3_Init+0x94>)
 80014de:	f005 ffdf 	bl	80074a0 <HAL_TIM_ConfigClockSource>
 80014e2:	4603      	mov	r3, r0
 80014e4:	2b00      	cmp	r3, #0
 80014e6:	d001      	beq.n	80014ec <MX_TIM3_Init+0x70>
  {
    Error_Handler();
 80014e8:	f000 f97c 	bl	80017e4 <Error_Handler>
  }
  sMasterConfig.MasterOutputTrigger = TIM_TRGO_RESET;
 80014ec:	2300      	movs	r3, #0
 80014ee:	603b      	str	r3, [r7, #0]
  sMasterConfig.MasterSlaveMode = TIM_MASTERSLAVEMODE_DISABLE;
 80014f0:	2300      	movs	r3, #0
 80014f2:	607b      	str	r3, [r7, #4]
  if (HAL_TIMEx_MasterConfigSynchronization(&htim3, &sMasterConfig) != HAL_OK)
 80014f4:	463b      	mov	r3, r7
 80014f6:	4619      	mov	r1, r3
 80014f8:	4805      	ldr	r0, [pc, #20]	@ (8001510 <MX_TIM3_Init+0x94>)
 80014fa:	f006 fbdd 	bl	8007cb8 <HAL_TIMEx_MasterConfigSynchronization>
 80014fe:	4603      	mov	r3, r0
 8001500:	2b00      	cmp	r3, #0
 8001502:	d001      	beq.n	8001508 <MX_TIM3_Init+0x8c>
  {
    Error_Handler();
 8001504:	f000 f96e 	bl	80017e4 <Error_Handler>
  }
  /* USER CODE BEGIN TIM3_Init 2 */

  /* USER CODE END TIM3_Init 2 */

}
 8001508:	bf00      	nop
 800150a:	3718      	adds	r7, #24
 800150c:	46bd      	mov	sp, r7
 800150e:	bd80      	pop	{r7, pc}
 8001510:	20000594 	.word	0x20000594
 8001514:	40000400 	.word	0x40000400

08001518 <MX_TIM4_Init>:
  * @brief TIM4 Initialization Function
  * @param None
  * @retval None
  */
static void MX_TIM4_Init(void)
{
 8001518:	b580      	push	{r7, lr}
 800151a:	b08e      	sub	sp, #56	@ 0x38
 800151c:	af00      	add	r7, sp, #0

  /* USER CODE BEGIN TIM4_Init 0 */

  /* USER CODE END TIM4_Init 0 */

  TIM_ClockConfigTypeDef sClockSourceConfig = {0};
 800151e:	f107 0328 	add.w	r3, r7, #40	@ 0x28
 8001522:	2200      	movs	r2, #0
 8001524:	601a      	str	r2, [r3, #0]
 8001526:	605a      	str	r2, [r3, #4]
 8001528:	609a      	str	r2, [r3, #8]
 800152a:	60da      	str	r2, [r3, #12]
  TIM_MasterConfigTypeDef sMasterConfig = {0};
 800152c:	f107 0320 	add.w	r3, r7, #32
 8001530:	2200      	movs	r2, #0
 8001532:	601a      	str	r2, [r3, #0]
 8001534:	605a      	str	r2, [r3, #4]
  TIM_OC_InitTypeDef sConfigOC = {0};
 8001536:	1d3b      	adds	r3, r7, #4
 8001538:	2200      	movs	r2, #0
 800153a:	601a      	str	r2, [r3, #0]
 800153c:	605a      	str	r2, [r3, #4]
 800153e:	609a      	str	r2, [r3, #8]
 8001540:	60da      	str	r2, [r3, #12]
 8001542:	611a      	str	r2, [r3, #16]
 8001544:	615a      	str	r2, [r3, #20]
 8001546:	619a      	str	r2, [r3, #24]

  /* USER CODE BEGIN TIM4_Init 1 */

  /* USER CODE END TIM4_Init 1 */
  htim4.Instance = TIM4;
 8001548:	4b2c      	ldr	r3, [pc, #176]	@ (80015fc <MX_TIM4_Init+0xe4>)
 800154a:	4a2d      	ldr	r2, [pc, #180]	@ (8001600 <MX_TIM4_Init+0xe8>)
 800154c:	601a      	str	r2, [r3, #0]
  htim4.Init.Prescaler = 44999;
 800154e:	4b2b      	ldr	r3, [pc, #172]	@ (80015fc <MX_TIM4_Init+0xe4>)
 8001550:	f64a 72c7 	movw	r2, #44999	@ 0xafc7
 8001554:	605a      	str	r2, [r3, #4]
  htim4.Init.CounterMode = TIM_COUNTERMODE_UP;
 8001556:	4b29      	ldr	r3, [pc, #164]	@ (80015fc <MX_TIM4_Init+0xe4>)
 8001558:	2200      	movs	r2, #0
 800155a:	609a      	str	r2, [r3, #8]
  htim4.Init.Period = 19;
 800155c:	4b27      	ldr	r3, [pc, #156]	@ (80015fc <MX_TIM4_Init+0xe4>)
 800155e:	2213      	movs	r2, #19
 8001560:	60da      	str	r2, [r3, #12]
  htim4.Init.ClockDivision = TIM_CLOCKDIVISION_DIV1;
 8001562:	4b26      	ldr	r3, [pc, #152]	@ (80015fc <MX_TIM4_Init+0xe4>)
 8001564:	2200      	movs	r2, #0
 8001566:	611a      	str	r2, [r3, #16]
  htim4.Init.AutoReloadPreload = TIM_AUTORELOAD_PRELOAD_DISABLE;
 8001568:	4b24      	ldr	r3, [pc, #144]	@ (80015fc <MX_TIM4_Init+0xe4>)
 800156a:	2200      	movs	r2, #0
 800156c:	619a      	str	r2, [r3, #24]
  if (HAL_TIM_Base_Init(&htim4) != HAL_OK)
 800156e:	4823      	ldr	r0, [pc, #140]	@ (80015fc <MX_TIM4_Init+0xe4>)
 8001570:	f005 fc02 	bl	8006d78 <HAL_TIM_Base_Init>
 8001574:	4603      	mov	r3, r0
 8001576:	2b00      	cmp	r3, #0
 8001578:	d001      	beq.n	800157e <MX_TIM4_Init+0x66>
  {
    Error_Handler();
 800157a:	f000 f933 	bl	80017e4 <Error_Handler>
  }
  sClockSourceConfig.ClockSource = TIM_CLOCKSOURCE_INTERNAL;
 800157e:	f44f 5380 	mov.w	r3, #4096	@ 0x1000
 8001582:	62bb      	str	r3, [r7, #40]	@ 0x28
  if (HAL_TIM_ConfigClockSource(&htim4, &sClockSourceConfig) != HAL_OK)
 8001584:	f107 0328 	add.w	r3, r7, #40	@ 0x28
 8001588:	4619      	mov	r1, r3
 800158a:	481c      	ldr	r0, [pc, #112]	@ (80015fc <MX_TIM4_Init+0xe4>)
 800158c:	f005 ff88 	bl	80074a0 <HAL_TIM_ConfigClockSource>
 8001590:	4603      	mov	r3, r0
 8001592:	2b00      	cmp	r3, #0
 8001594:	d001      	beq.n	800159a <MX_TIM4_Init+0x82>
  {
    Error_Handler();
 8001596:	f000 f925 	bl	80017e4 <Error_Handler>
  }
  if (HAL_TIM_PWM_Init(&htim4) != HAL_OK)
 800159a:	4818      	ldr	r0, [pc, #96]	@ (80015fc <MX_TIM4_Init+0xe4>)
 800159c:	f005 fcac 	bl	8006ef8 <HAL_TIM_PWM_Init>
 80015a0:	4603      	mov	r3, r0
 80015a2:	2b00      	cmp	r3, #0
 80015a4:	d001      	beq.n	80015aa <MX_TIM4_Init+0x92>
  {
    Error_Handler();
 80015a6:	f000 f91d 	bl	80017e4 <Error_Handler>
  }
  sMasterConfig.MasterOutputTrigger = TIM_TRGO_RESET;
 80015aa:	2300      	movs	r3, #0
 80015ac:	623b      	str	r3, [r7, #32]
  sMasterConfig.MasterSlaveMode = TIM_MASTERSLAVEMODE_DISABLE;
 80015ae:	2300      	movs	r3, #0
 80015b0:	627b      	str	r3, [r7, #36]	@ 0x24
  if (HAL_TIMEx_MasterConfigSynchronization(&htim4, &sMasterConfig) != HAL_OK)
 80015b2:	f107 0320 	add.w	r3, r7, #32
 80015b6:	4619      	mov	r1, r3
 80015b8:	4810      	ldr	r0, [pc, #64]	@ (80015fc <MX_TIM4_Init+0xe4>)
 80015ba:	f006 fb7d 	bl	8007cb8 <HAL_TIMEx_MasterConfigSynchronization>
 80015be:	4603      	mov	r3, r0
 80015c0:	2b00      	cmp	r3, #0
 80015c2:	d001      	beq.n	80015c8 <MX_TIM4_Init+0xb0>
  {
    Error_Handler();
 80015c4:	f000 f90e 	bl	80017e4 <Error_Handler>
  }
  sConfigOC.OCMode = TIM_OCMODE_PWM1;
 80015c8:	2360      	movs	r3, #96	@ 0x60
 80015ca:	607b      	str	r3, [r7, #4]
  sConfigOC.Pulse = 0;
 80015cc:	2300      	movs	r3, #0
 80015ce:	60bb      	str	r3, [r7, #8]
  sConfigOC.OCPolarity = TIM_OCPOLARITY_HIGH;
 80015d0:	2300      	movs	r3, #0
 80015d2:	60fb      	str	r3, [r7, #12]
  sConfigOC.OCFastMode = TIM_OCFAST_DISABLE;
 80015d4:	2300      	movs	r3, #0
 80015d6:	617b      	str	r3, [r7, #20]
  if (HAL_TIM_PWM_ConfigChannel(&htim4, &sConfigOC, TIM_CHANNEL_2) != HAL_OK)
 80015d8:	1d3b      	adds	r3, r7, #4
 80015da:	2204      	movs	r2, #4
 80015dc:	4619      	mov	r1, r3
 80015de:	4807      	ldr	r0, [pc, #28]	@ (80015fc <MX_TIM4_Init+0xe4>)
 80015e0:	f005 fe9c 	bl	800731c <HAL_TIM_PWM_ConfigChannel>
 80015e4:	4603      	mov	r3, r0
 80015e6:	2b00      	cmp	r3, #0
 80015e8:	d001      	beq.n	80015ee <MX_TIM4_Init+0xd6>
  {
    Error_Handler();
 80015ea:	f000 f8fb 	bl	80017e4 <Error_Handler>
  }
  /* USER CODE BEGIN TIM4_Init 2 */

  /* USER CODE END TIM4_Init 2 */
  HAL_TIM_MspPostInit(&htim4);
 80015ee:	4803      	ldr	r0, [pc, #12]	@ (80015fc <MX_TIM4_Init+0xe4>)
 80015f0:	f000 fb6a 	bl	8001cc8 <HAL_TIM_MspPostInit>

}
 80015f4:	bf00      	nop
 80015f6:	3738      	adds	r7, #56	@ 0x38
 80015f8:	46bd      	mov	sp, r7
 80015fa:	bd80      	pop	{r7, pc}
 80015fc:	200005dc 	.word	0x200005dc
 8001600:	40000800 	.word	0x40000800

08001604 <MX_DMA_Init>:

/**
  * Enable DMA controller clock
  */
static void MX_DMA_Init(void)
{
 8001604:	b580      	push	{r7, lr}
 8001606:	b082      	sub	sp, #8
 8001608:	af00      	add	r7, sp, #0

  /* DMA controller clock enable */
  __HAL_RCC_DMA1_CLK_ENABLE();
 800160a:	2300      	movs	r3, #0
 800160c:	607b      	str	r3, [r7, #4]
 800160e:	4b17      	ldr	r3, [pc, #92]	@ (800166c <MX_DMA_Init+0x68>)
 8001610:	6b1b      	ldr	r3, [r3, #48]	@ 0x30
 8001612:	4a16      	ldr	r2, [pc, #88]	@ (800166c <MX_DMA_Init+0x68>)
 8001614:	f443 1300 	orr.w	r3, r3, #2097152	@ 0x200000
 8001618:	6313      	str	r3, [r2, #48]	@ 0x30
 800161a:	4b14      	ldr	r3, [pc, #80]	@ (800166c <MX_DMA_Init+0x68>)
 800161c:	6b1b      	ldr	r3, [r3, #48]	@ 0x30
 800161e:	f403 1300 	and.w	r3, r3, #2097152	@ 0x200000
 8001622:	607b      	str	r3, [r7, #4]
 8001624:	687b      	ldr	r3, [r7, #4]
  __HAL_RCC_DMA2_CLK_ENABLE();
 8001626:	2300      	movs	r3, #0
 8001628:	603b      	str	r3, [r7, #0]
 800162a:	4b10      	ldr	r3, [pc, #64]	@ (800166c <MX_DMA_Init+0x68>)
 800162c:	6b1b      	ldr	r3, [r3, #48]	@ 0x30
 800162e:	4a0f      	ldr	r2, [pc, #60]	@ (800166c <MX_DMA_Init+0x68>)
 8001630:	f443 0380 	orr.w	r3, r3, #4194304	@ 0x400000
 8001634:	6313      	str	r3, [r2, #48]	@ 0x30
 8001636:	4b0d      	ldr	r3, [pc, #52]	@ (800166c <MX_DMA_Init+0x68>)
 8001638:	6b1b      	ldr	r3, [r3, #48]	@ 0x30
 800163a:	f403 0380 	and.w	r3, r3, #4194304	@ 0x400000
 800163e:	603b      	str	r3, [r7, #0]
 8001640:	683b      	ldr	r3, [r7, #0]

  /* DMA interrupt init */
  /* DMA1_Stream4_IRQn interrupt configuration */
  HAL_NVIC_SetPriority(DMA1_Stream4_IRQn, 0, 0);
 8001642:	2200      	movs	r2, #0
 8001644:	2100      	movs	r1, #0
 8001646:	200f      	movs	r0, #15
 8001648:	f001 ff67 	bl	800351a <HAL_NVIC_SetPriority>
  HAL_NVIC_EnableIRQ(DMA1_Stream4_IRQn);
 800164c:	200f      	movs	r0, #15
 800164e:	f001 ff80 	bl	8003552 <HAL_NVIC_EnableIRQ>
  /* DMA2_Stream2_IRQn interrupt configuration */
  HAL_NVIC_SetPriority(DMA2_Stream2_IRQn, 0, 0);
 8001652:	2200      	movs	r2, #0
 8001654:	2100      	movs	r1, #0
 8001656:	203a      	movs	r0, #58	@ 0x3a
 8001658:	f001 ff5f 	bl	800351a <HAL_NVIC_SetPriority>
  HAL_NVIC_EnableIRQ(DMA2_Stream2_IRQn);
 800165c:	203a      	movs	r0, #58	@ 0x3a
 800165e:	f001 ff78 	bl	8003552 <HAL_NVIC_EnableIRQ>

}
 8001662:	bf00      	nop
 8001664:	3708      	adds	r7, #8
 8001666:	46bd      	mov	sp, r7
 8001668:	bd80      	pop	{r7, pc}
 800166a:	bf00      	nop
 800166c:	40023800 	.word	0x40023800

08001670 <MX_GPIO_Init>:
  * @brief GPIO Initialization Function
  * @param None
  * @retval None
  */
static void MX_GPIO_Init(void)
{
 8001670:	b580      	push	{r7, lr}
 8001672:	b088      	sub	sp, #32
 8001674:	af00      	add	r7, sp, #0
  GPIO_InitTypeDef GPIO_InitStruct = {0};
 8001676:	f107 030c 	add.w	r3, r7, #12
 800167a:	2200      	movs	r2, #0
 800167c:	601a      	str	r2, [r3, #0]
 800167e:	605a      	str	r2, [r3, #4]
 8001680:	609a      	str	r2, [r3, #8]
 8001682:	60da      	str	r2, [r3, #12]
 8001684:	611a      	str	r2, [r3, #16]
/* USER CODE BEGIN MX_GPIO_Init_1 */
/* USER CODE END MX_GPIO_Init_1 */

  /* GPIO Ports Clock Enable */
  __HAL_RCC_GPIOC_CLK_ENABLE();
 8001686:	2300      	movs	r3, #0
 8001688:	60bb      	str	r3, [r7, #8]
 800168a:	4b4a      	ldr	r3, [pc, #296]	@ (80017b4 <MX_GPIO_Init+0x144>)
 800168c:	6b1b      	ldr	r3, [r3, #48]	@ 0x30
 800168e:	4a49      	ldr	r2, [pc, #292]	@ (80017b4 <MX_GPIO_Init+0x144>)
 8001690:	f043 0304 	orr.w	r3, r3, #4
 8001694:	6313      	str	r3, [r2, #48]	@ 0x30
 8001696:	4b47      	ldr	r3, [pc, #284]	@ (80017b4 <MX_GPIO_Init+0x144>)
 8001698:	6b1b      	ldr	r3, [r3, #48]	@ 0x30
 800169a:	f003 0304 	and.w	r3, r3, #4
 800169e:	60bb      	str	r3, [r7, #8]
 80016a0:	68bb      	ldr	r3, [r7, #8]
  __HAL_RCC_GPIOA_CLK_ENABLE();
 80016a2:	2300      	movs	r3, #0
 80016a4:	607b      	str	r3, [r7, #4]
 80016a6:	4b43      	ldr	r3, [pc, #268]	@ (80017b4 <MX_GPIO_Init+0x144>)
 80016a8:	6b1b      	ldr	r3, [r3, #48]	@ 0x30
 80016aa:	4a42      	ldr	r2, [pc, #264]	@ (80017b4 <MX_GPIO_Init+0x144>)
 80016ac:	f043 0301 	orr.w	r3, r3, #1
 80016b0:	6313      	str	r3, [r2, #48]	@ 0x30
 80016b2:	4b40      	ldr	r3, [pc, #256]	@ (80017b4 <MX_GPIO_Init+0x144>)
 80016b4:	6b1b      	ldr	r3, [r3, #48]	@ 0x30
 80016b6:	f003 0301 	and.w	r3, r3, #1
 80016ba:	607b      	str	r3, [r7, #4]
 80016bc:	687b      	ldr	r3, [r7, #4]
  __HAL_RCC_GPIOB_CLK_ENABLE();
 80016be:	2300      	movs	r3, #0
 80016c0:	603b      	str	r3, [r7, #0]
 80016c2:	4b3c      	ldr	r3, [pc, #240]	@ (80017b4 <MX_GPIO_Init+0x144>)
 80016c4:	6b1b      	ldr	r3, [r3, #48]	@ 0x30
 80016c6:	4a3b      	ldr	r2, [pc, #236]	@ (80017b4 <MX_GPIO_Init+0x144>)
 80016c8:	f043 0302 	orr.w	r3, r3, #2
 80016cc:	6313      	str	r3, [r2, #48]	@ 0x30
 80016ce:	4b39      	ldr	r3, [pc, #228]	@ (80017b4 <MX_GPIO_Init+0x144>)
 80016d0:	6b1b      	ldr	r3, [r3, #48]	@ 0x30
 80016d2:	f003 0302 	and.w	r3, r3, #2
 80016d6:	603b      	str	r3, [r7, #0]
 80016d8:	683b      	ldr	r3, [r7, #0]

  /*Configure GPIO pin Output Level */
  HAL_GPIO_WritePin(GPIOA, DISPL_LED_Pin|DISPL_DC_Pin, GPIO_PIN_RESET);
 80016da:	2200      	movs	r2, #0
 80016dc:	21c0      	movs	r1, #192	@ 0xc0
 80016de:	4836      	ldr	r0, [pc, #216]	@ (80017b8 <MX_GPIO_Init+0x148>)
 80016e0:	f002 fcc8 	bl	8004074 <HAL_GPIO_WritePin>

  /*Configure GPIO pin Output Level */
  HAL_GPIO_WritePin(GPIOB, PUMP1_EN_Pin|HUMIDITY_EN_Pin|DISPL_RST_Pin, GPIO_PIN_RESET);
 80016e4:	2200      	movs	r2, #0
 80016e6:	f249 0140 	movw	r1, #36928	@ 0x9040
 80016ea:	4834      	ldr	r0, [pc, #208]	@ (80017bc <MX_GPIO_Init+0x14c>)
 80016ec:	f002 fcc2 	bl	8004074 <HAL_GPIO_WritePin>

  /*Configure GPIO pin Output Level */
  HAL_GPIO_WritePin(PUMP2_EN_GPIO_Port, PUMP2_EN_Pin, GPIO_PIN_RESET);
 80016f0:	2200      	movs	r2, #0
 80016f2:	2140      	movs	r1, #64	@ 0x40
 80016f4:	4832      	ldr	r0, [pc, #200]	@ (80017c0 <MX_GPIO_Init+0x150>)
 80016f6:	f002 fcbd 	bl	8004074 <HAL_GPIO_WritePin>

  /*Configure GPIO pin Output Level */
  HAL_GPIO_WritePin(DISPL_CS_GPIO_Port, DISPL_CS_Pin, GPIO_PIN_SET);
 80016fa:	2201      	movs	r2, #1
 80016fc:	2180      	movs	r1, #128	@ 0x80
 80016fe:	4830      	ldr	r0, [pc, #192]	@ (80017c0 <MX_GPIO_Init+0x150>)
 8001700:	f002 fcb8 	bl	8004074 <HAL_GPIO_WritePin>

  /*Configure GPIO pin Output Level */
  HAL_GPIO_WritePin(TOUCH_CS_GPIO_Port, TOUCH_CS_Pin, GPIO_PIN_SET);
 8001704:	2201      	movs	r2, #1
 8001706:	f44f 7100 	mov.w	r1, #512	@ 0x200
 800170a:	482b      	ldr	r0, [pc, #172]	@ (80017b8 <MX_GPIO_Init+0x148>)
 800170c:	f002 fcb2 	bl	8004074 <HAL_GPIO_WritePin>

  /*Configure GPIO pins : DISPL_LED_Pin DISPL_DC_Pin TOUCH_CS_Pin */
  GPIO_InitStruct.Pin = DISPL_LED_Pin|DISPL_DC_Pin|TOUCH_CS_Pin;
 8001710:	f44f 7330 	mov.w	r3, #704	@ 0x2c0
 8001714:	60fb      	str	r3, [r7, #12]
  GPIO_InitStruct.Mode = GPIO_MODE_OUTPUT_PP;
 8001716:	2301      	movs	r3, #1
 8001718:	613b      	str	r3, [r7, #16]
  GPIO_InitStruct.Pull = GPIO_NOPULL;
 800171a:	2300      	movs	r3, #0
 800171c:	617b      	str	r3, [r7, #20]
  GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_LOW;
 800171e:	2300      	movs	r3, #0
 8001720:	61bb      	str	r3, [r7, #24]
  HAL_GPIO_Init(GPIOA, &GPIO_InitStruct);
 8001722:	f107 030c 	add.w	r3, r7, #12
 8001726:	4619      	mov	r1, r3
 8001728:	4823      	ldr	r0, [pc, #140]	@ (80017b8 <MX_GPIO_Init+0x148>)
 800172a:	f002 faf7 	bl	8003d1c <HAL_GPIO_Init>

  /*Configure GPIO pin : WATER_LEVEL_Pin */
  GPIO_InitStruct.Pin = WATER_LEVEL_Pin;
 800172e:	2320      	movs	r3, #32
 8001730:	60fb      	str	r3, [r7, #12]
  GPIO_InitStruct.Mode = GPIO_MODE_INPUT;
 8001732:	2300      	movs	r3, #0
 8001734:	613b      	str	r3, [r7, #16]
  GPIO_InitStruct.Pull = GPIO_NOPULL;
 8001736:	2300      	movs	r3, #0
 8001738:	617b      	str	r3, [r7, #20]
  HAL_GPIO_Init(WATER_LEVEL_GPIO_Port, &GPIO_InitStruct);
 800173a:	f107 030c 	add.w	r3, r7, #12
 800173e:	4619      	mov	r1, r3
 8001740:	481f      	ldr	r0, [pc, #124]	@ (80017c0 <MX_GPIO_Init+0x150>)
 8001742:	f002 faeb 	bl	8003d1c <HAL_GPIO_Init>

  /*Configure GPIO pins : PUMP1_EN_Pin HUMIDITY_EN_Pin DISPL_RST_Pin */
  GPIO_InitStruct.Pin = PUMP1_EN_Pin|HUMIDITY_EN_Pin|DISPL_RST_Pin;
 8001746:	f249 0340 	movw	r3, #36928	@ 0x9040
 800174a:	60fb      	str	r3, [r7, #12]
  GPIO_InitStruct.Mode = GPIO_MODE_OUTPUT_PP;
 800174c:	2301      	movs	r3, #1
 800174e:	613b      	str	r3, [r7, #16]
  GPIO_InitStruct.Pull = GPIO_NOPULL;
 8001750:	2300      	movs	r3, #0
 8001752:	617b      	str	r3, [r7, #20]
  GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_LOW;
 8001754:	2300      	movs	r3, #0
 8001756:	61bb      	str	r3, [r7, #24]
  HAL_GPIO_Init(GPIOB, &GPIO_InitStruct);
 8001758:	f107 030c 	add.w	r3, r7, #12
 800175c:	4619      	mov	r1, r3
 800175e:	4817      	ldr	r0, [pc, #92]	@ (80017bc <MX_GPIO_Init+0x14c>)
 8001760:	f002 fadc 	bl	8003d1c <HAL_GPIO_Init>

  /*Configure GPIO pins : PUMP2_EN_Pin DISPL_CS_Pin */
  GPIO_InitStruct.Pin = PUMP2_EN_Pin|DISPL_CS_Pin;
 8001764:	23c0      	movs	r3, #192	@ 0xc0
 8001766:	60fb      	str	r3, [r7, #12]
  GPIO_InitStruct.Mode = GPIO_MODE_OUTPUT_PP;
 8001768:	2301      	movs	r3, #1
 800176a:	613b      	str	r3, [r7, #16]
  GPIO_InitStruct.Pull = GPIO_NOPULL;
 800176c:	2300      	movs	r3, #0
 800176e:	617b      	str	r3, [r7, #20]
  GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_LOW;
 8001770:	2300      	movs	r3, #0
 8001772:	61bb      	str	r3, [r7, #24]
  HAL_GPIO_Init(GPIOC, &GPIO_InitStruct);
 8001774:	f107 030c 	add.w	r3, r7, #12
 8001778:	4619      	mov	r1, r3
 800177a:	4811      	ldr	r0, [pc, #68]	@ (80017c0 <MX_GPIO_Init+0x150>)
 800177c:	f002 face 	bl	8003d1c <HAL_GPIO_Init>

  /*Configure GPIO pin : TOUCH_INT_Pin */
  GPIO_InitStruct.Pin = TOUCH_INT_Pin;
 8001780:	f44f 7380 	mov.w	r3, #256	@ 0x100
 8001784:	60fb      	str	r3, [r7, #12]
  GPIO_InitStruct.Mode = GPIO_MODE_IT_FALLING;
 8001786:	f44f 1304 	mov.w	r3, #2162688	@ 0x210000
 800178a:	613b      	str	r3, [r7, #16]
  GPIO_InitStruct.Pull = GPIO_PULLUP;
 800178c:	2301      	movs	r3, #1
 800178e:	617b      	str	r3, [r7, #20]
  HAL_GPIO_Init(TOUCH_INT_GPIO_Port, &GPIO_InitStruct);
 8001790:	f107 030c 	add.w	r3, r7, #12
 8001794:	4619      	mov	r1, r3
 8001796:	4808      	ldr	r0, [pc, #32]	@ (80017b8 <MX_GPIO_Init+0x148>)
 8001798:	f002 fac0 	bl	8003d1c <HAL_GPIO_Init>

  /* EXTI interrupt init*/
  HAL_NVIC_SetPriority(EXTI9_5_IRQn, 0, 0);
 800179c:	2200      	movs	r2, #0
 800179e:	2100      	movs	r1, #0
 80017a0:	2017      	movs	r0, #23
 80017a2:	f001 feba 	bl	800351a <HAL_NVIC_SetPriority>
  HAL_NVIC_EnableIRQ(EXTI9_5_IRQn);
 80017a6:	2017      	movs	r0, #23
 80017a8:	f001 fed3 	bl	8003552 <HAL_NVIC_EnableIRQ>

/* USER CODE BEGIN MX_GPIO_Init_2 */
/* USER CODE END MX_GPIO_Init_2 */
}
 80017ac:	bf00      	nop
 80017ae:	3720      	adds	r7, #32
 80017b0:	46bd      	mov	sp, r7
 80017b2:	bd80      	pop	{r7, pc}
 80017b4:	40023800 	.word	0x40023800
 80017b8:	40020000 	.word	0x40020000
 80017bc:	40020400 	.word	0x40020400
 80017c0:	40020800 	.word	0x40020800

080017c4 <HAL_TIM_PeriodElapsedCallback>:

/* USER CODE BEGIN 4 */
	void HAL_TIM_PeriodElapsedCallback(TIM_HandleTypeDef *htim)
	{
 80017c4:	b580      	push	{r7, lr}
 80017c6:	b082      	sub	sp, #8
 80017c8:	af00      	add	r7, sp, #0
 80017ca:	6078      	str	r0, [r7, #4]
	  // Check which version of the timer triggered this callback and toggle LED
		if (htim==&TGFX_T){
 80017cc:	687b      	ldr	r3, [r7, #4]
 80017ce:	4a04      	ldr	r2, [pc, #16]	@ (80017e0 <HAL_TIM_PeriodElapsedCallback+0x1c>)
 80017d0:	4293      	cmp	r3, r2
 80017d2:	d101      	bne.n	80017d8 <HAL_TIM_PeriodElapsedCallback+0x14>
			  //Displ_Init(Displ_Orientat_0);			// initialize display controller - set orientation parameter as per TouchGFX setup
			  touchgfxSignalVSync();
 80017d4:	f00e fc6e 	bl	80100b4 <touchgfxSignalVSync>
		}
	}
 80017d8:	bf00      	nop
 80017da:	3708      	adds	r7, #8
 80017dc:	46bd      	mov	sp, r7
 80017de:	bd80      	pop	{r7, pc}
 80017e0:	20000594 	.word	0x20000594

080017e4 <Error_Handler>:
/**
  * @brief  This function is executed in case of error occurrence.
  * @retval None
  */
void Error_Handler(void)
{
 80017e4:	b480      	push	{r7}
 80017e6:	af00      	add	r7, sp, #0
  \details Disables IRQ interrupts by setting special-purpose register PRIMASK.
           Can only be executed in Privileged modes.
 */
__STATIC_FORCEINLINE void __disable_irq(void)
{
  __ASM volatile ("cpsid i" : : : "memory");
 80017e8:	b672      	cpsid	i
}
 80017ea:	bf00      	nop
  /* USER CODE BEGIN Error_Handler_Debug */
	  /* User can add his own implementation to report the HAL error return state */
	  __disable_irq();
	  while (1)
 80017ec:	bf00      	nop
 80017ee:	e7fd      	b.n	80017ec <Error_Handler+0x8>

080017f0 <HAL_MspInit>:
void HAL_TIM_MspPostInit(TIM_HandleTypeDef *htim);
                                        /**
  * Initializes the Global MSP.
  */
void HAL_MspInit(void)
{
 80017f0:	b480      	push	{r7}
 80017f2:	b083      	sub	sp, #12
 80017f4:	af00      	add	r7, sp, #0

  /* USER CODE BEGIN MspInit 0 */

  /* USER CODE END MspInit 0 */

  __HAL_RCC_SYSCFG_CLK_ENABLE();
 80017f6:	2300      	movs	r3, #0
 80017f8:	607b      	str	r3, [r7, #4]
 80017fa:	4b10      	ldr	r3, [pc, #64]	@ (800183c <HAL_MspInit+0x4c>)
 80017fc:	6c5b      	ldr	r3, [r3, #68]	@ 0x44
 80017fe:	4a0f      	ldr	r2, [pc, #60]	@ (800183c <HAL_MspInit+0x4c>)
 8001800:	f443 4380 	orr.w	r3, r3, #16384	@ 0x4000
 8001804:	6453      	str	r3, [r2, #68]	@ 0x44
 8001806:	4b0d      	ldr	r3, [pc, #52]	@ (800183c <HAL_MspInit+0x4c>)
 8001808:	6c5b      	ldr	r3, [r3, #68]	@ 0x44
 800180a:	f403 4380 	and.w	r3, r3, #16384	@ 0x4000
 800180e:	607b      	str	r3, [r7, #4]
 8001810:	687b      	ldr	r3, [r7, #4]
  __HAL_RCC_PWR_CLK_ENABLE();
 8001812:	2300      	movs	r3, #0
 8001814:	603b      	str	r3, [r7, #0]
 8001816:	4b09      	ldr	r3, [pc, #36]	@ (800183c <HAL_MspInit+0x4c>)
 8001818:	6c1b      	ldr	r3, [r3, #64]	@ 0x40
 800181a:	4a08      	ldr	r2, [pc, #32]	@ (800183c <HAL_MspInit+0x4c>)
 800181c:	f043 5380 	orr.w	r3, r3, #268435456	@ 0x10000000
 8001820:	6413      	str	r3, [r2, #64]	@ 0x40
 8001822:	4b06      	ldr	r3, [pc, #24]	@ (800183c <HAL_MspInit+0x4c>)
 8001824:	6c1b      	ldr	r3, [r3, #64]	@ 0x40
 8001826:	f003 5380 	and.w	r3, r3, #268435456	@ 0x10000000
 800182a:	603b      	str	r3, [r7, #0]
 800182c:	683b      	ldr	r3, [r7, #0]
  /* System interrupt init*/

  /* USER CODE BEGIN MspInit 1 */

  /* USER CODE END MspInit 1 */
}
 800182e:	bf00      	nop
 8001830:	370c      	adds	r7, #12
 8001832:	46bd      	mov	sp, r7
 8001834:	f85d 7b04 	ldr.w	r7, [sp], #4
 8001838:	4770      	bx	lr
 800183a:	bf00      	nop
 800183c:	40023800 	.word	0x40023800

08001840 <HAL_ADC_MspInit>:
* This function configures the hardware resources used in this example
* @param hadc: ADC handle pointer
* @retval None
*/
void HAL_ADC_MspInit(ADC_HandleTypeDef* hadc)
{
 8001840:	b580      	push	{r7, lr}
 8001842:	b08a      	sub	sp, #40	@ 0x28
 8001844:	af00      	add	r7, sp, #0
 8001846:	6078      	str	r0, [r7, #4]
  GPIO_InitTypeDef GPIO_InitStruct = {0};
 8001848:	f107 0314 	add.w	r3, r7, #20
 800184c:	2200      	movs	r2, #0
 800184e:	601a      	str	r2, [r3, #0]
 8001850:	605a      	str	r2, [r3, #4]
 8001852:	609a      	str	r2, [r3, #8]
 8001854:	60da      	str	r2, [r3, #12]
 8001856:	611a      	str	r2, [r3, #16]
  if(hadc->Instance==ADC2)
 8001858:	687b      	ldr	r3, [r7, #4]
 800185a:	681b      	ldr	r3, [r3, #0]
 800185c:	4a2f      	ldr	r2, [pc, #188]	@ (800191c <HAL_ADC_MspInit+0xdc>)
 800185e:	4293      	cmp	r3, r2
 8001860:	d158      	bne.n	8001914 <HAL_ADC_MspInit+0xd4>
  {
  /* USER CODE BEGIN ADC2_MspInit 0 */

  /* USER CODE END ADC2_MspInit 0 */
    /* Peripheral clock enable */
    __HAL_RCC_ADC2_CLK_ENABLE();
 8001862:	2300      	movs	r3, #0
 8001864:	613b      	str	r3, [r7, #16]
 8001866:	4b2e      	ldr	r3, [pc, #184]	@ (8001920 <HAL_ADC_MspInit+0xe0>)
 8001868:	6c5b      	ldr	r3, [r3, #68]	@ 0x44
 800186a:	4a2d      	ldr	r2, [pc, #180]	@ (8001920 <HAL_ADC_MspInit+0xe0>)
 800186c:	f443 7300 	orr.w	r3, r3, #512	@ 0x200
 8001870:	6453      	str	r3, [r2, #68]	@ 0x44
 8001872:	4b2b      	ldr	r3, [pc, #172]	@ (8001920 <HAL_ADC_MspInit+0xe0>)
 8001874:	6c5b      	ldr	r3, [r3, #68]	@ 0x44
 8001876:	f403 7300 	and.w	r3, r3, #512	@ 0x200
 800187a:	613b      	str	r3, [r7, #16]
 800187c:	693b      	ldr	r3, [r7, #16]

    __HAL_RCC_GPIOC_CLK_ENABLE();
 800187e:	2300      	movs	r3, #0
 8001880:	60fb      	str	r3, [r7, #12]
 8001882:	4b27      	ldr	r3, [pc, #156]	@ (8001920 <HAL_ADC_MspInit+0xe0>)
 8001884:	6b1b      	ldr	r3, [r3, #48]	@ 0x30
 8001886:	4a26      	ldr	r2, [pc, #152]	@ (8001920 <HAL_ADC_MspInit+0xe0>)
 8001888:	f043 0304 	orr.w	r3, r3, #4
 800188c:	6313      	str	r3, [r2, #48]	@ 0x30
 800188e:	4b24      	ldr	r3, [pc, #144]	@ (8001920 <HAL_ADC_MspInit+0xe0>)
 8001890:	6b1b      	ldr	r3, [r3, #48]	@ 0x30
 8001892:	f003 0304 	and.w	r3, r3, #4
 8001896:	60fb      	str	r3, [r7, #12]
 8001898:	68fb      	ldr	r3, [r7, #12]
    /**ADC2 GPIO Configuration
    PC4     ------> ADC2_IN14
    */
    GPIO_InitStruct.Pin = MOISTURE_SENSOR_Pin;
 800189a:	2310      	movs	r3, #16
 800189c:	617b      	str	r3, [r7, #20]
    GPIO_InitStruct.Mode = GPIO_MODE_ANALOG;
 800189e:	2303      	movs	r3, #3
 80018a0:	61bb      	str	r3, [r7, #24]
    GPIO_InitStruct.Pull = GPIO_NOPULL;
 80018a2:	2300      	movs	r3, #0
 80018a4:	61fb      	str	r3, [r7, #28]
    HAL_GPIO_Init(MOISTURE_SENSOR_GPIO_Port, &GPIO_InitStruct);
 80018a6:	f107 0314 	add.w	r3, r7, #20
 80018aa:	4619      	mov	r1, r3
 80018ac:	481d      	ldr	r0, [pc, #116]	@ (8001924 <HAL_ADC_MspInit+0xe4>)
 80018ae:	f002 fa35 	bl	8003d1c <HAL_GPIO_Init>

    /* ADC2 DMA Init */
    /* ADC2 Init */
    hdma_adc2.Instance = DMA2_Stream2;
 80018b2:	4b1d      	ldr	r3, [pc, #116]	@ (8001928 <HAL_ADC_MspInit+0xe8>)
 80018b4:	4a1d      	ldr	r2, [pc, #116]	@ (800192c <HAL_ADC_MspInit+0xec>)
 80018b6:	601a      	str	r2, [r3, #0]
    hdma_adc2.Init.Channel = DMA_CHANNEL_1;
 80018b8:	4b1b      	ldr	r3, [pc, #108]	@ (8001928 <HAL_ADC_MspInit+0xe8>)
 80018ba:	f04f 7200 	mov.w	r2, #33554432	@ 0x2000000
 80018be:	605a      	str	r2, [r3, #4]
    hdma_adc2.Init.Direction = DMA_PERIPH_TO_MEMORY;
 80018c0:	4b19      	ldr	r3, [pc, #100]	@ (8001928 <HAL_ADC_MspInit+0xe8>)
 80018c2:	2200      	movs	r2, #0
 80018c4:	609a      	str	r2, [r3, #8]
    hdma_adc2.Init.PeriphInc = DMA_PINC_DISABLE;
 80018c6:	4b18      	ldr	r3, [pc, #96]	@ (8001928 <HAL_ADC_MspInit+0xe8>)
 80018c8:	2200      	movs	r2, #0
 80018ca:	60da      	str	r2, [r3, #12]
    hdma_adc2.Init.MemInc = DMA_MINC_ENABLE;
 80018cc:	4b16      	ldr	r3, [pc, #88]	@ (8001928 <HAL_ADC_MspInit+0xe8>)
 80018ce:	f44f 6280 	mov.w	r2, #1024	@ 0x400
 80018d2:	611a      	str	r2, [r3, #16]
    hdma_adc2.Init.PeriphDataAlignment = DMA_PDATAALIGN_HALFWORD;
 80018d4:	4b14      	ldr	r3, [pc, #80]	@ (8001928 <HAL_ADC_MspInit+0xe8>)
 80018d6:	f44f 6200 	mov.w	r2, #2048	@ 0x800
 80018da:	615a      	str	r2, [r3, #20]
    hdma_adc2.Init.MemDataAlignment = DMA_MDATAALIGN_HALFWORD;
 80018dc:	4b12      	ldr	r3, [pc, #72]	@ (8001928 <HAL_ADC_MspInit+0xe8>)
 80018de:	f44f 5200 	mov.w	r2, #8192	@ 0x2000
 80018e2:	619a      	str	r2, [r3, #24]
    hdma_adc2.Init.Mode = DMA_CIRCULAR;
 80018e4:	4b10      	ldr	r3, [pc, #64]	@ (8001928 <HAL_ADC_MspInit+0xe8>)
 80018e6:	f44f 7280 	mov.w	r2, #256	@ 0x100
 80018ea:	61da      	str	r2, [r3, #28]
    hdma_adc2.Init.Priority = DMA_PRIORITY_LOW;
 80018ec:	4b0e      	ldr	r3, [pc, #56]	@ (8001928 <HAL_ADC_MspInit+0xe8>)
 80018ee:	2200      	movs	r2, #0
 80018f0:	621a      	str	r2, [r3, #32]
    hdma_adc2.Init.FIFOMode = DMA_FIFOMODE_DISABLE;
 80018f2:	4b0d      	ldr	r3, [pc, #52]	@ (8001928 <HAL_ADC_MspInit+0xe8>)
 80018f4:	2200      	movs	r2, #0
 80018f6:	625a      	str	r2, [r3, #36]	@ 0x24
    if (HAL_DMA_Init(&hdma_adc2) != HAL_OK)
 80018f8:	480b      	ldr	r0, [pc, #44]	@ (8001928 <HAL_ADC_MspInit+0xe8>)
 80018fa:	f001 fe7d 	bl	80035f8 <HAL_DMA_Init>
 80018fe:	4603      	mov	r3, r0
 8001900:	2b00      	cmp	r3, #0
 8001902:	d001      	beq.n	8001908 <HAL_ADC_MspInit+0xc8>
    {
      Error_Handler();
 8001904:	f7ff ff6e 	bl	80017e4 <Error_Handler>
    }

    __HAL_LINKDMA(hadc,DMA_Handle,hdma_adc2);
 8001908:	687b      	ldr	r3, [r7, #4]
 800190a:	4a07      	ldr	r2, [pc, #28]	@ (8001928 <HAL_ADC_MspInit+0xe8>)
 800190c:	639a      	str	r2, [r3, #56]	@ 0x38
 800190e:	4a06      	ldr	r2, [pc, #24]	@ (8001928 <HAL_ADC_MspInit+0xe8>)
 8001910:	687b      	ldr	r3, [r7, #4]
 8001912:	6393      	str	r3, [r2, #56]	@ 0x38

  /* USER CODE END ADC2_MspInit 1 */

  }

}
 8001914:	bf00      	nop
 8001916:	3728      	adds	r7, #40	@ 0x28
 8001918:	46bd      	mov	sp, r7
 800191a:	bd80      	pop	{r7, pc}
 800191c:	40012100 	.word	0x40012100
 8001920:	40023800 	.word	0x40023800
 8001924:	40020800 	.word	0x40020800
 8001928:	20000384 	.word	0x20000384
 800192c:	40026440 	.word	0x40026440

08001930 <HAL_CRC_MspInit>:
* This function configures the hardware resources used in this example
* @param hcrc: CRC handle pointer
* @retval None
*/
void HAL_CRC_MspInit(CRC_HandleTypeDef* hcrc)
{
 8001930:	b480      	push	{r7}
 8001932:	b085      	sub	sp, #20
 8001934:	af00      	add	r7, sp, #0
 8001936:	6078      	str	r0, [r7, #4]
  if(hcrc->Instance==CRC)
 8001938:	687b      	ldr	r3, [r7, #4]
 800193a:	681b      	ldr	r3, [r3, #0]
 800193c:	4a0b      	ldr	r2, [pc, #44]	@ (800196c <HAL_CRC_MspInit+0x3c>)
 800193e:	4293      	cmp	r3, r2
 8001940:	d10d      	bne.n	800195e <HAL_CRC_MspInit+0x2e>
  {
  /* USER CODE BEGIN CRC_MspInit 0 */

  /* USER CODE END CRC_MspInit 0 */
    /* Peripheral clock enable */
    __HAL_RCC_CRC_CLK_ENABLE();
 8001942:	2300      	movs	r3, #0
 8001944:	60fb      	str	r3, [r7, #12]
 8001946:	4b0a      	ldr	r3, [pc, #40]	@ (8001970 <HAL_CRC_MspInit+0x40>)
 8001948:	6b1b      	ldr	r3, [r3, #48]	@ 0x30
 800194a:	4a09      	ldr	r2, [pc, #36]	@ (8001970 <HAL_CRC_MspInit+0x40>)
 800194c:	f443 5380 	orr.w	r3, r3, #4096	@ 0x1000
 8001950:	6313      	str	r3, [r2, #48]	@ 0x30
 8001952:	4b07      	ldr	r3, [pc, #28]	@ (8001970 <HAL_CRC_MspInit+0x40>)
 8001954:	6b1b      	ldr	r3, [r3, #48]	@ 0x30
 8001956:	f403 5380 	and.w	r3, r3, #4096	@ 0x1000
 800195a:	60fb      	str	r3, [r7, #12]
 800195c:	68fb      	ldr	r3, [r7, #12]

  /* USER CODE END CRC_MspInit 1 */

  }

}
 800195e:	bf00      	nop
 8001960:	3714      	adds	r7, #20
 8001962:	46bd      	mov	sp, r7
 8001964:	f85d 7b04 	ldr.w	r7, [sp], #4
 8001968:	4770      	bx	lr
 800196a:	bf00      	nop
 800196c:	40023000 	.word	0x40023000
 8001970:	40023800 	.word	0x40023800

08001974 <HAL_I2C_MspInit>:
* This function configures the hardware resources used in this example
* @param hi2c: I2C handle pointer
* @retval None
*/
void HAL_I2C_MspInit(I2C_HandleTypeDef* hi2c)
{
 8001974:	b580      	push	{r7, lr}
 8001976:	b08c      	sub	sp, #48	@ 0x30
 8001978:	af00      	add	r7, sp, #0
 800197a:	6078      	str	r0, [r7, #4]
  GPIO_InitTypeDef GPIO_InitStruct = {0};
 800197c:	f107 031c 	add.w	r3, r7, #28
 8001980:	2200      	movs	r2, #0
 8001982:	601a      	str	r2, [r3, #0]
 8001984:	605a      	str	r2, [r3, #4]
 8001986:	609a      	str	r2, [r3, #8]
 8001988:	60da      	str	r2, [r3, #12]
 800198a:	611a      	str	r2, [r3, #16]
  if(hi2c->Instance==I2C1)
 800198c:	687b      	ldr	r3, [r7, #4]
 800198e:	681b      	ldr	r3, [r3, #0]
 8001990:	4a42      	ldr	r2, [pc, #264]	@ (8001a9c <HAL_I2C_MspInit+0x128>)
 8001992:	4293      	cmp	r3, r2
 8001994:	d12d      	bne.n	80019f2 <HAL_I2C_MspInit+0x7e>
  {
  /* USER CODE BEGIN I2C1_MspInit 0 */

  /* USER CODE END I2C1_MspInit 0 */

    __HAL_RCC_GPIOB_CLK_ENABLE();
 8001996:	2300      	movs	r3, #0
 8001998:	61bb      	str	r3, [r7, #24]
 800199a:	4b41      	ldr	r3, [pc, #260]	@ (8001aa0 <HAL_I2C_MspInit+0x12c>)
 800199c:	6b1b      	ldr	r3, [r3, #48]	@ 0x30
 800199e:	4a40      	ldr	r2, [pc, #256]	@ (8001aa0 <HAL_I2C_MspInit+0x12c>)
 80019a0:	f043 0302 	orr.w	r3, r3, #2
 80019a4:	6313      	str	r3, [r2, #48]	@ 0x30
 80019a6:	4b3e      	ldr	r3, [pc, #248]	@ (8001aa0 <HAL_I2C_MspInit+0x12c>)
 80019a8:	6b1b      	ldr	r3, [r3, #48]	@ 0x30
 80019aa:	f003 0302 	and.w	r3, r3, #2
 80019ae:	61bb      	str	r3, [r7, #24]
 80019b0:	69bb      	ldr	r3, [r7, #24]
    /**I2C1 GPIO Configuration
    PB8     ------> I2C1_SCL
    PB9     ------> I2C1_SDA
    */
    GPIO_InitStruct.Pin = GPIO_PIN_8|GPIO_PIN_9;
 80019b2:	f44f 7340 	mov.w	r3, #768	@ 0x300
 80019b6:	61fb      	str	r3, [r7, #28]
    GPIO_InitStruct.Mode = GPIO_MODE_AF_OD;
 80019b8:	2312      	movs	r3, #18
 80019ba:	623b      	str	r3, [r7, #32]
    GPIO_InitStruct.Pull = GPIO_NOPULL;
 80019bc:	2300      	movs	r3, #0
 80019be:	627b      	str	r3, [r7, #36]	@ 0x24
    GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_VERY_HIGH;
 80019c0:	2303      	movs	r3, #3
 80019c2:	62bb      	str	r3, [r7, #40]	@ 0x28
    GPIO_InitStruct.Alternate = GPIO_AF4_I2C1;
 80019c4:	2304      	movs	r3, #4
 80019c6:	62fb      	str	r3, [r7, #44]	@ 0x2c
    HAL_GPIO_Init(GPIOB, &GPIO_InitStruct);
 80019c8:	f107 031c 	add.w	r3, r7, #28
 80019cc:	4619      	mov	r1, r3
 80019ce:	4835      	ldr	r0, [pc, #212]	@ (8001aa4 <HAL_I2C_MspInit+0x130>)
 80019d0:	f002 f9a4 	bl	8003d1c <HAL_GPIO_Init>

    /* Peripheral clock enable */
    __HAL_RCC_I2C1_CLK_ENABLE();
 80019d4:	2300      	movs	r3, #0
 80019d6:	617b      	str	r3, [r7, #20]
 80019d8:	4b31      	ldr	r3, [pc, #196]	@ (8001aa0 <HAL_I2C_MspInit+0x12c>)
 80019da:	6c1b      	ldr	r3, [r3, #64]	@ 0x40
 80019dc:	4a30      	ldr	r2, [pc, #192]	@ (8001aa0 <HAL_I2C_MspInit+0x12c>)
 80019de:	f443 1300 	orr.w	r3, r3, #2097152	@ 0x200000
 80019e2:	6413      	str	r3, [r2, #64]	@ 0x40
 80019e4:	4b2e      	ldr	r3, [pc, #184]	@ (8001aa0 <HAL_I2C_MspInit+0x12c>)
 80019e6:	6c1b      	ldr	r3, [r3, #64]	@ 0x40
 80019e8:	f403 1300 	and.w	r3, r3, #2097152	@ 0x200000
 80019ec:	617b      	str	r3, [r7, #20]
 80019ee:	697b      	ldr	r3, [r7, #20]
  /* USER CODE BEGIN I2C2_MspInit 1 */

  /* USER CODE END I2C2_MspInit 1 */
  }

}
 80019f0:	e050      	b.n	8001a94 <HAL_I2C_MspInit+0x120>
  else if(hi2c->Instance==I2C2)
 80019f2:	687b      	ldr	r3, [r7, #4]
 80019f4:	681b      	ldr	r3, [r3, #0]
 80019f6:	4a2c      	ldr	r2, [pc, #176]	@ (8001aa8 <HAL_I2C_MspInit+0x134>)
 80019f8:	4293      	cmp	r3, r2
 80019fa:	d14b      	bne.n	8001a94 <HAL_I2C_MspInit+0x120>
    __HAL_RCC_GPIOB_CLK_ENABLE();
 80019fc:	2300      	movs	r3, #0
 80019fe:	613b      	str	r3, [r7, #16]
 8001a00:	4b27      	ldr	r3, [pc, #156]	@ (8001aa0 <HAL_I2C_MspInit+0x12c>)
 8001a02:	6b1b      	ldr	r3, [r3, #48]	@ 0x30
 8001a04:	4a26      	ldr	r2, [pc, #152]	@ (8001aa0 <HAL_I2C_MspInit+0x12c>)
 8001a06:	f043 0302 	orr.w	r3, r3, #2
 8001a0a:	6313      	str	r3, [r2, #48]	@ 0x30
 8001a0c:	4b24      	ldr	r3, [pc, #144]	@ (8001aa0 <HAL_I2C_MspInit+0x12c>)
 8001a0e:	6b1b      	ldr	r3, [r3, #48]	@ 0x30
 8001a10:	f003 0302 	and.w	r3, r3, #2
 8001a14:	613b      	str	r3, [r7, #16]
 8001a16:	693b      	ldr	r3, [r7, #16]
    __HAL_RCC_GPIOC_CLK_ENABLE();
 8001a18:	2300      	movs	r3, #0
 8001a1a:	60fb      	str	r3, [r7, #12]
 8001a1c:	4b20      	ldr	r3, [pc, #128]	@ (8001aa0 <HAL_I2C_MspInit+0x12c>)
 8001a1e:	6b1b      	ldr	r3, [r3, #48]	@ 0x30
 8001a20:	4a1f      	ldr	r2, [pc, #124]	@ (8001aa0 <HAL_I2C_MspInit+0x12c>)
 8001a22:	f043 0304 	orr.w	r3, r3, #4
 8001a26:	6313      	str	r3, [r2, #48]	@ 0x30
 8001a28:	4b1d      	ldr	r3, [pc, #116]	@ (8001aa0 <HAL_I2C_MspInit+0x12c>)
 8001a2a:	6b1b      	ldr	r3, [r3, #48]	@ 0x30
 8001a2c:	f003 0304 	and.w	r3, r3, #4
 8001a30:	60fb      	str	r3, [r7, #12]
 8001a32:	68fb      	ldr	r3, [r7, #12]
    GPIO_InitStruct.Pin = GPIO_PIN_10;
 8001a34:	f44f 6380 	mov.w	r3, #1024	@ 0x400
 8001a38:	61fb      	str	r3, [r7, #28]
    GPIO_InitStruct.Mode = GPIO_MODE_AF_OD;
 8001a3a:	2312      	movs	r3, #18
 8001a3c:	623b      	str	r3, [r7, #32]
    GPIO_InitStruct.Pull = GPIO_NOPULL;
 8001a3e:	2300      	movs	r3, #0
 8001a40:	627b      	str	r3, [r7, #36]	@ 0x24
    GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_VERY_HIGH;
 8001a42:	2303      	movs	r3, #3
 8001a44:	62bb      	str	r3, [r7, #40]	@ 0x28
    GPIO_InitStruct.Alternate = GPIO_AF4_I2C2;
 8001a46:	2304      	movs	r3, #4
 8001a48:	62fb      	str	r3, [r7, #44]	@ 0x2c
    HAL_GPIO_Init(GPIOB, &GPIO_InitStruct);
 8001a4a:	f107 031c 	add.w	r3, r7, #28
 8001a4e:	4619      	mov	r1, r3
 8001a50:	4814      	ldr	r0, [pc, #80]	@ (8001aa4 <HAL_I2C_MspInit+0x130>)
 8001a52:	f002 f963 	bl	8003d1c <HAL_GPIO_Init>
    GPIO_InitStruct.Pin = GPIO_PIN_12;
 8001a56:	f44f 5380 	mov.w	r3, #4096	@ 0x1000
 8001a5a:	61fb      	str	r3, [r7, #28]
    GPIO_InitStruct.Mode = GPIO_MODE_AF_OD;
 8001a5c:	2312      	movs	r3, #18
 8001a5e:	623b      	str	r3, [r7, #32]
    GPIO_InitStruct.Pull = GPIO_NOPULL;
 8001a60:	2300      	movs	r3, #0
 8001a62:	627b      	str	r3, [r7, #36]	@ 0x24
    GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_VERY_HIGH;
 8001a64:	2303      	movs	r3, #3
 8001a66:	62bb      	str	r3, [r7, #40]	@ 0x28
    GPIO_InitStruct.Alternate = GPIO_AF4_I2C2;
 8001a68:	2304      	movs	r3, #4
 8001a6a:	62fb      	str	r3, [r7, #44]	@ 0x2c
    HAL_GPIO_Init(GPIOC, &GPIO_InitStruct);
 8001a6c:	f107 031c 	add.w	r3, r7, #28
 8001a70:	4619      	mov	r1, r3
 8001a72:	480e      	ldr	r0, [pc, #56]	@ (8001aac <HAL_I2C_MspInit+0x138>)
 8001a74:	f002 f952 	bl	8003d1c <HAL_GPIO_Init>
    __HAL_RCC_I2C2_CLK_ENABLE();
 8001a78:	2300      	movs	r3, #0
 8001a7a:	60bb      	str	r3, [r7, #8]
 8001a7c:	4b08      	ldr	r3, [pc, #32]	@ (8001aa0 <HAL_I2C_MspInit+0x12c>)
 8001a7e:	6c1b      	ldr	r3, [r3, #64]	@ 0x40
 8001a80:	4a07      	ldr	r2, [pc, #28]	@ (8001aa0 <HAL_I2C_MspInit+0x12c>)
 8001a82:	f443 0380 	orr.w	r3, r3, #4194304	@ 0x400000
 8001a86:	6413      	str	r3, [r2, #64]	@ 0x40
 8001a88:	4b05      	ldr	r3, [pc, #20]	@ (8001aa0 <HAL_I2C_MspInit+0x12c>)
 8001a8a:	6c1b      	ldr	r3, [r3, #64]	@ 0x40
 8001a8c:	f403 0380 	and.w	r3, r3, #4194304	@ 0x400000
 8001a90:	60bb      	str	r3, [r7, #8]
 8001a92:	68bb      	ldr	r3, [r7, #8]
}
 8001a94:	bf00      	nop
 8001a96:	3730      	adds	r7, #48	@ 0x30
 8001a98:	46bd      	mov	sp, r7
 8001a9a:	bd80      	pop	{r7, pc}
 8001a9c:	40005400 	.word	0x40005400
 8001aa0:	40023800 	.word	0x40023800
 8001aa4:	40020400 	.word	0x40020400
 8001aa8:	40005800 	.word	0x40005800
 8001aac:	40020800 	.word	0x40020800

08001ab0 <HAL_SPI_MspInit>:
* This function configures the hardware resources used in this example
* @param hspi: SPI handle pointer
* @retval None
*/
void HAL_SPI_MspInit(SPI_HandleTypeDef* hspi)
{
 8001ab0:	b580      	push	{r7, lr}
 8001ab2:	b08a      	sub	sp, #40	@ 0x28
 8001ab4:	af00      	add	r7, sp, #0
 8001ab6:	6078      	str	r0, [r7, #4]
  GPIO_InitTypeDef GPIO_InitStruct = {0};
 8001ab8:	f107 0314 	add.w	r3, r7, #20
 8001abc:	2200      	movs	r2, #0
 8001abe:	601a      	str	r2, [r3, #0]
 8001ac0:	605a      	str	r2, [r3, #4]
 8001ac2:	609a      	str	r2, [r3, #8]
 8001ac4:	60da      	str	r2, [r3, #12]
 8001ac6:	611a      	str	r2, [r3, #16]
  if(hspi->Instance==SPI2)
 8001ac8:	687b      	ldr	r3, [r7, #4]
 8001aca:	681b      	ldr	r3, [r3, #0]
 8001acc:	4a4b      	ldr	r2, [pc, #300]	@ (8001bfc <HAL_SPI_MspInit+0x14c>)
 8001ace:	4293      	cmp	r3, r2
 8001ad0:	f040 8090 	bne.w	8001bf4 <HAL_SPI_MspInit+0x144>
  {
  /* USER CODE BEGIN SPI2_MspInit 0 */

  /* USER CODE END SPI2_MspInit 0 */
    /* Peripheral clock enable */
    __HAL_RCC_SPI2_CLK_ENABLE();
 8001ad4:	2300      	movs	r3, #0
 8001ad6:	613b      	str	r3, [r7, #16]
 8001ad8:	4b49      	ldr	r3, [pc, #292]	@ (8001c00 <HAL_SPI_MspInit+0x150>)
 8001ada:	6c1b      	ldr	r3, [r3, #64]	@ 0x40
 8001adc:	4a48      	ldr	r2, [pc, #288]	@ (8001c00 <HAL_SPI_MspInit+0x150>)
 8001ade:	f443 4380 	orr.w	r3, r3, #16384	@ 0x4000
 8001ae2:	6413      	str	r3, [r2, #64]	@ 0x40
 8001ae4:	4b46      	ldr	r3, [pc, #280]	@ (8001c00 <HAL_SPI_MspInit+0x150>)
 8001ae6:	6c1b      	ldr	r3, [r3, #64]	@ 0x40
 8001ae8:	f403 4380 	and.w	r3, r3, #16384	@ 0x4000
 8001aec:	613b      	str	r3, [r7, #16]
 8001aee:	693b      	ldr	r3, [r7, #16]

    __HAL_RCC_GPIOC_CLK_ENABLE();
 8001af0:	2300      	movs	r3, #0
 8001af2:	60fb      	str	r3, [r7, #12]
 8001af4:	4b42      	ldr	r3, [pc, #264]	@ (8001c00 <HAL_SPI_MspInit+0x150>)
 8001af6:	6b1b      	ldr	r3, [r3, #48]	@ 0x30
 8001af8:	4a41      	ldr	r2, [pc, #260]	@ (8001c00 <HAL_SPI_MspInit+0x150>)
 8001afa:	f043 0304 	orr.w	r3, r3, #4
 8001afe:	6313      	str	r3, [r2, #48]	@ 0x30
 8001b00:	4b3f      	ldr	r3, [pc, #252]	@ (8001c00 <HAL_SPI_MspInit+0x150>)
 8001b02:	6b1b      	ldr	r3, [r3, #48]	@ 0x30
 8001b04:	f003 0304 	and.w	r3, r3, #4
 8001b08:	60fb      	str	r3, [r7, #12]
 8001b0a:	68fb      	ldr	r3, [r7, #12]
    __HAL_RCC_GPIOB_CLK_ENABLE();
 8001b0c:	2300      	movs	r3, #0
 8001b0e:	60bb      	str	r3, [r7, #8]
 8001b10:	4b3b      	ldr	r3, [pc, #236]	@ (8001c00 <HAL_SPI_MspInit+0x150>)
 8001b12:	6b1b      	ldr	r3, [r3, #48]	@ 0x30
 8001b14:	4a3a      	ldr	r2, [pc, #232]	@ (8001c00 <HAL_SPI_MspInit+0x150>)
 8001b16:	f043 0302 	orr.w	r3, r3, #2
 8001b1a:	6313      	str	r3, [r2, #48]	@ 0x30
 8001b1c:	4b38      	ldr	r3, [pc, #224]	@ (8001c00 <HAL_SPI_MspInit+0x150>)
 8001b1e:	6b1b      	ldr	r3, [r3, #48]	@ 0x30
 8001b20:	f003 0302 	and.w	r3, r3, #2
 8001b24:	60bb      	str	r3, [r7, #8]
 8001b26:	68bb      	ldr	r3, [r7, #8]
    /**SPI2 GPIO Configuration
    PC1     ------> SPI2_MOSI
    PC2     ------> SPI2_MISO
    PB13     ------> SPI2_SCK
    */
    GPIO_InitStruct.Pin = DISPL_MOSI_Pin;
 8001b28:	2302      	movs	r3, #2
 8001b2a:	617b      	str	r3, [r7, #20]
    GPIO_InitStruct.Mode = GPIO_MODE_AF_PP;
 8001b2c:	2302      	movs	r3, #2
 8001b2e:	61bb      	str	r3, [r7, #24]
    GPIO_InitStruct.Pull = GPIO_NOPULL;
 8001b30:	2300      	movs	r3, #0
 8001b32:	61fb      	str	r3, [r7, #28]
    GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_VERY_HIGH;
 8001b34:	2303      	movs	r3, #3
 8001b36:	623b      	str	r3, [r7, #32]
    GPIO_InitStruct.Alternate = GPIO_AF7_SPI2;
 8001b38:	2307      	movs	r3, #7
 8001b3a:	627b      	str	r3, [r7, #36]	@ 0x24
    HAL_GPIO_Init(DISPL_MOSI_GPIO_Port, &GPIO_InitStruct);
 8001b3c:	f107 0314 	add.w	r3, r7, #20
 8001b40:	4619      	mov	r1, r3
 8001b42:	4830      	ldr	r0, [pc, #192]	@ (8001c04 <HAL_SPI_MspInit+0x154>)
 8001b44:	f002 f8ea 	bl	8003d1c <HAL_GPIO_Init>

    GPIO_InitStruct.Pin = TOUCH_MISO_Pin;
 8001b48:	2304      	movs	r3, #4
 8001b4a:	617b      	str	r3, [r7, #20]
    GPIO_InitStruct.Mode = GPIO_MODE_AF_PP;
 8001b4c:	2302      	movs	r3, #2
 8001b4e:	61bb      	str	r3, [r7, #24]
    GPIO_InitStruct.Pull = GPIO_NOPULL;
 8001b50:	2300      	movs	r3, #0
 8001b52:	61fb      	str	r3, [r7, #28]
    GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_VERY_HIGH;
 8001b54:	2303      	movs	r3, #3
 8001b56:	623b      	str	r3, [r7, #32]
    GPIO_InitStruct.Alternate = GPIO_AF5_SPI2;
 8001b58:	2305      	movs	r3, #5
 8001b5a:	627b      	str	r3, [r7, #36]	@ 0x24
    HAL_GPIO_Init(TOUCH_MISO_GPIO_Port, &GPIO_InitStruct);
 8001b5c:	f107 0314 	add.w	r3, r7, #20
 8001b60:	4619      	mov	r1, r3
 8001b62:	4828      	ldr	r0, [pc, #160]	@ (8001c04 <HAL_SPI_MspInit+0x154>)
 8001b64:	f002 f8da 	bl	8003d1c <HAL_GPIO_Init>

    GPIO_InitStruct.Pin = DISPL_SCK_Pin;
 8001b68:	f44f 5300 	mov.w	r3, #8192	@ 0x2000
 8001b6c:	617b      	str	r3, [r7, #20]
    GPIO_InitStruct.Mode = GPIO_MODE_AF_PP;
 8001b6e:	2302      	movs	r3, #2
 8001b70:	61bb      	str	r3, [r7, #24]
    GPIO_InitStruct.Pull = GPIO_NOPULL;
 8001b72:	2300      	movs	r3, #0
 8001b74:	61fb      	str	r3, [r7, #28]
    GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_VERY_HIGH;
 8001b76:	2303      	movs	r3, #3
 8001b78:	623b      	str	r3, [r7, #32]
    GPIO_InitStruct.Alternate = GPIO_AF5_SPI2;
 8001b7a:	2305      	movs	r3, #5
 8001b7c:	627b      	str	r3, [r7, #36]	@ 0x24
    HAL_GPIO_Init(DISPL_SCK_GPIO_Port, &GPIO_InitStruct);
 8001b7e:	f107 0314 	add.w	r3, r7, #20
 8001b82:	4619      	mov	r1, r3
 8001b84:	4820      	ldr	r0, [pc, #128]	@ (8001c08 <HAL_SPI_MspInit+0x158>)
 8001b86:	f002 f8c9 	bl	8003d1c <HAL_GPIO_Init>

    /* SPI2 DMA Init */
    /* SPI2_TX Init */
    hdma_spi2_tx.Instance = DMA1_Stream4;
 8001b8a:	4b20      	ldr	r3, [pc, #128]	@ (8001c0c <HAL_SPI_MspInit+0x15c>)
 8001b8c:	4a20      	ldr	r2, [pc, #128]	@ (8001c10 <HAL_SPI_MspInit+0x160>)
 8001b8e:	601a      	str	r2, [r3, #0]
    hdma_spi2_tx.Init.Channel = DMA_CHANNEL_0;
 8001b90:	4b1e      	ldr	r3, [pc, #120]	@ (8001c0c <HAL_SPI_MspInit+0x15c>)
 8001b92:	2200      	movs	r2, #0
 8001b94:	605a      	str	r2, [r3, #4]
    hdma_spi2_tx.Init.Direction = DMA_MEMORY_TO_PERIPH;
 8001b96:	4b1d      	ldr	r3, [pc, #116]	@ (8001c0c <HAL_SPI_MspInit+0x15c>)
 8001b98:	2240      	movs	r2, #64	@ 0x40
 8001b9a:	609a      	str	r2, [r3, #8]
    hdma_spi2_tx.Init.PeriphInc = DMA_PINC_DISABLE;
 8001b9c:	4b1b      	ldr	r3, [pc, #108]	@ (8001c0c <HAL_SPI_MspInit+0x15c>)
 8001b9e:	2200      	movs	r2, #0
 8001ba0:	60da      	str	r2, [r3, #12]
    hdma_spi2_tx.Init.MemInc = DMA_MINC_ENABLE;
 8001ba2:	4b1a      	ldr	r3, [pc, #104]	@ (8001c0c <HAL_SPI_MspInit+0x15c>)
 8001ba4:	f44f 6280 	mov.w	r2, #1024	@ 0x400
 8001ba8:	611a      	str	r2, [r3, #16]
    hdma_spi2_tx.Init.PeriphDataAlignment = DMA_PDATAALIGN_BYTE;
 8001baa:	4b18      	ldr	r3, [pc, #96]	@ (8001c0c <HAL_SPI_MspInit+0x15c>)
 8001bac:	2200      	movs	r2, #0
 8001bae:	615a      	str	r2, [r3, #20]
    hdma_spi2_tx.Init.MemDataAlignment = DMA_MDATAALIGN_BYTE;
 8001bb0:	4b16      	ldr	r3, [pc, #88]	@ (8001c0c <HAL_SPI_MspInit+0x15c>)
 8001bb2:	2200      	movs	r2, #0
 8001bb4:	619a      	str	r2, [r3, #24]
    hdma_spi2_tx.Init.Mode = DMA_NORMAL;
 8001bb6:	4b15      	ldr	r3, [pc, #84]	@ (8001c0c <HAL_SPI_MspInit+0x15c>)
 8001bb8:	2200      	movs	r2, #0
 8001bba:	61da      	str	r2, [r3, #28]
    hdma_spi2_tx.Init.Priority = DMA_PRIORITY_LOW;
 8001bbc:	4b13      	ldr	r3, [pc, #76]	@ (8001c0c <HAL_SPI_MspInit+0x15c>)
 8001bbe:	2200      	movs	r2, #0
 8001bc0:	621a      	str	r2, [r3, #32]
    hdma_spi2_tx.Init.FIFOMode = DMA_FIFOMODE_DISABLE;
 8001bc2:	4b12      	ldr	r3, [pc, #72]	@ (8001c0c <HAL_SPI_MspInit+0x15c>)
 8001bc4:	2200      	movs	r2, #0
 8001bc6:	625a      	str	r2, [r3, #36]	@ 0x24
    if (HAL_DMA_Init(&hdma_spi2_tx) != HAL_OK)
 8001bc8:	4810      	ldr	r0, [pc, #64]	@ (8001c0c <HAL_SPI_MspInit+0x15c>)
 8001bca:	f001 fd15 	bl	80035f8 <HAL_DMA_Init>
 8001bce:	4603      	mov	r3, r0
 8001bd0:	2b00      	cmp	r3, #0
 8001bd2:	d001      	beq.n	8001bd8 <HAL_SPI_MspInit+0x128>
    {
      Error_Handler();
 8001bd4:	f7ff fe06 	bl	80017e4 <Error_Handler>
    }

    __HAL_LINKDMA(hspi,hdmatx,hdma_spi2_tx);
 8001bd8:	687b      	ldr	r3, [r7, #4]
 8001bda:	4a0c      	ldr	r2, [pc, #48]	@ (8001c0c <HAL_SPI_MspInit+0x15c>)
 8001bdc:	649a      	str	r2, [r3, #72]	@ 0x48
 8001bde:	4a0b      	ldr	r2, [pc, #44]	@ (8001c0c <HAL_SPI_MspInit+0x15c>)
 8001be0:	687b      	ldr	r3, [r7, #4]
 8001be2:	6393      	str	r3, [r2, #56]	@ 0x38

    /* SPI2 interrupt Init */
    HAL_NVIC_SetPriority(SPI2_IRQn, 0, 0);
 8001be4:	2200      	movs	r2, #0
 8001be6:	2100      	movs	r1, #0
 8001be8:	2024      	movs	r0, #36	@ 0x24
 8001bea:	f001 fc96 	bl	800351a <HAL_NVIC_SetPriority>
    HAL_NVIC_EnableIRQ(SPI2_IRQn);
 8001bee:	2024      	movs	r0, #36	@ 0x24
 8001bf0:	f001 fcaf 	bl	8003552 <HAL_NVIC_EnableIRQ>

  /* USER CODE END SPI2_MspInit 1 */

  }

}
 8001bf4:	bf00      	nop
 8001bf6:	3728      	adds	r7, #40	@ 0x28
 8001bf8:	46bd      	mov	sp, r7
 8001bfa:	bd80      	pop	{r7, pc}
 8001bfc:	40003800 	.word	0x40003800
 8001c00:	40023800 	.word	0x40023800
 8001c04:	40020800 	.word	0x40020800
 8001c08:	40020400 	.word	0x40020400
 8001c0c:	200004ec 	.word	0x200004ec
 8001c10:	40026070 	.word	0x40026070

08001c14 <HAL_TIM_Base_MspInit>:
* This function configures the hardware resources used in this example
* @param htim_base: TIM_Base handle pointer
* @retval None
*/
void HAL_TIM_Base_MspInit(TIM_HandleTypeDef* htim_base)
{
 8001c14:	b580      	push	{r7, lr}
 8001c16:	b086      	sub	sp, #24
 8001c18:	af00      	add	r7, sp, #0
 8001c1a:	6078      	str	r0, [r7, #4]
  if(htim_base->Instance==TIM2)
 8001c1c:	687b      	ldr	r3, [r7, #4]
 8001c1e:	681b      	ldr	r3, [r3, #0]
 8001c20:	f1b3 4f80 	cmp.w	r3, #1073741824	@ 0x40000000
 8001c24:	d10e      	bne.n	8001c44 <HAL_TIM_Base_MspInit+0x30>
  {
  /* USER CODE BEGIN TIM2_MspInit 0 */

  /* USER CODE END TIM2_MspInit 0 */
    /* Peripheral clock enable */
    __HAL_RCC_TIM2_CLK_ENABLE();
 8001c26:	2300      	movs	r3, #0
 8001c28:	617b      	str	r3, [r7, #20]
 8001c2a:	4b24      	ldr	r3, [pc, #144]	@ (8001cbc <HAL_TIM_Base_MspInit+0xa8>)
 8001c2c:	6c1b      	ldr	r3, [r3, #64]	@ 0x40
 8001c2e:	4a23      	ldr	r2, [pc, #140]	@ (8001cbc <HAL_TIM_Base_MspInit+0xa8>)
 8001c30:	f043 0301 	orr.w	r3, r3, #1
 8001c34:	6413      	str	r3, [r2, #64]	@ 0x40
 8001c36:	4b21      	ldr	r3, [pc, #132]	@ (8001cbc <HAL_TIM_Base_MspInit+0xa8>)
 8001c38:	6c1b      	ldr	r3, [r3, #64]	@ 0x40
 8001c3a:	f003 0301 	and.w	r3, r3, #1
 8001c3e:	617b      	str	r3, [r7, #20]
 8001c40:	697b      	ldr	r3, [r7, #20]
  /* USER CODE BEGIN TIM4_MspInit 1 */

  /* USER CODE END TIM4_MspInit 1 */
  }

}
 8001c42:	e036      	b.n	8001cb2 <HAL_TIM_Base_MspInit+0x9e>
  else if(htim_base->Instance==TIM3)
 8001c44:	687b      	ldr	r3, [r7, #4]
 8001c46:	681b      	ldr	r3, [r3, #0]
 8001c48:	4a1d      	ldr	r2, [pc, #116]	@ (8001cc0 <HAL_TIM_Base_MspInit+0xac>)
 8001c4a:	4293      	cmp	r3, r2
 8001c4c:	d116      	bne.n	8001c7c <HAL_TIM_Base_MspInit+0x68>
    __HAL_RCC_TIM3_CLK_ENABLE();
 8001c4e:	2300      	movs	r3, #0
 8001c50:	613b      	str	r3, [r7, #16]
 8001c52:	4b1a      	ldr	r3, [pc, #104]	@ (8001cbc <HAL_TIM_Base_MspInit+0xa8>)
 8001c54:	6c1b      	ldr	r3, [r3, #64]	@ 0x40
 8001c56:	4a19      	ldr	r2, [pc, #100]	@ (8001cbc <HAL_TIM_Base_MspInit+0xa8>)
 8001c58:	f043 0302 	orr.w	r3, r3, #2
 8001c5c:	6413      	str	r3, [r2, #64]	@ 0x40
 8001c5e:	4b17      	ldr	r3, [pc, #92]	@ (8001cbc <HAL_TIM_Base_MspInit+0xa8>)
 8001c60:	6c1b      	ldr	r3, [r3, #64]	@ 0x40
 8001c62:	f003 0302 	and.w	r3, r3, #2
 8001c66:	613b      	str	r3, [r7, #16]
 8001c68:	693b      	ldr	r3, [r7, #16]
    HAL_NVIC_SetPriority(TIM3_IRQn, 0, 0);
 8001c6a:	2200      	movs	r2, #0
 8001c6c:	2100      	movs	r1, #0
 8001c6e:	201d      	movs	r0, #29
 8001c70:	f001 fc53 	bl	800351a <HAL_NVIC_SetPriority>
    HAL_NVIC_EnableIRQ(TIM3_IRQn);
 8001c74:	201d      	movs	r0, #29
 8001c76:	f001 fc6c 	bl	8003552 <HAL_NVIC_EnableIRQ>
}
 8001c7a:	e01a      	b.n	8001cb2 <HAL_TIM_Base_MspInit+0x9e>
  else if(htim_base->Instance==TIM4)
 8001c7c:	687b      	ldr	r3, [r7, #4]
 8001c7e:	681b      	ldr	r3, [r3, #0]
 8001c80:	4a10      	ldr	r2, [pc, #64]	@ (8001cc4 <HAL_TIM_Base_MspInit+0xb0>)
 8001c82:	4293      	cmp	r3, r2
 8001c84:	d115      	bne.n	8001cb2 <HAL_TIM_Base_MspInit+0x9e>
    __HAL_RCC_TIM4_CLK_ENABLE();
 8001c86:	2300      	movs	r3, #0
 8001c88:	60fb      	str	r3, [r7, #12]
 8001c8a:	4b0c      	ldr	r3, [pc, #48]	@ (8001cbc <HAL_TIM_Base_MspInit+0xa8>)
 8001c8c:	6c1b      	ldr	r3, [r3, #64]	@ 0x40
 8001c8e:	4a0b      	ldr	r2, [pc, #44]	@ (8001cbc <HAL_TIM_Base_MspInit+0xa8>)
 8001c90:	f043 0304 	orr.w	r3, r3, #4
 8001c94:	6413      	str	r3, [r2, #64]	@ 0x40
 8001c96:	4b09      	ldr	r3, [pc, #36]	@ (8001cbc <HAL_TIM_Base_MspInit+0xa8>)
 8001c98:	6c1b      	ldr	r3, [r3, #64]	@ 0x40
 8001c9a:	f003 0304 	and.w	r3, r3, #4
 8001c9e:	60fb      	str	r3, [r7, #12]
 8001ca0:	68fb      	ldr	r3, [r7, #12]
    HAL_NVIC_SetPriority(TIM4_IRQn, 0, 0);
 8001ca2:	2200      	movs	r2, #0
 8001ca4:	2100      	movs	r1, #0
 8001ca6:	201e      	movs	r0, #30
 8001ca8:	f001 fc37 	bl	800351a <HAL_NVIC_SetPriority>
    HAL_NVIC_EnableIRQ(TIM4_IRQn);
 8001cac:	201e      	movs	r0, #30
 8001cae:	f001 fc50 	bl	8003552 <HAL_NVIC_EnableIRQ>
}
 8001cb2:	bf00      	nop
 8001cb4:	3718      	adds	r7, #24
 8001cb6:	46bd      	mov	sp, r7
 8001cb8:	bd80      	pop	{r7, pc}
 8001cba:	bf00      	nop
 8001cbc:	40023800 	.word	0x40023800
 8001cc0:	40000400 	.word	0x40000400
 8001cc4:	40000800 	.word	0x40000800

08001cc8 <HAL_TIM_MspPostInit>:

void HAL_TIM_MspPostInit(TIM_HandleTypeDef* htim)
{
 8001cc8:	b580      	push	{r7, lr}
 8001cca:	b08a      	sub	sp, #40	@ 0x28
 8001ccc:	af00      	add	r7, sp, #0
 8001cce:	6078      	str	r0, [r7, #4]
  GPIO_InitTypeDef GPIO_InitStruct = {0};
 8001cd0:	f107 0314 	add.w	r3, r7, #20
 8001cd4:	2200      	movs	r2, #0
 8001cd6:	601a      	str	r2, [r3, #0]
 8001cd8:	605a      	str	r2, [r3, #4]
 8001cda:	609a      	str	r2, [r3, #8]
 8001cdc:	60da      	str	r2, [r3, #12]
 8001cde:	611a      	str	r2, [r3, #16]
  if(htim->Instance==TIM2)
 8001ce0:	687b      	ldr	r3, [r7, #4]
 8001ce2:	681b      	ldr	r3, [r3, #0]
 8001ce4:	f1b3 4f80 	cmp.w	r3, #1073741824	@ 0x40000000
 8001ce8:	d11e      	bne.n	8001d28 <HAL_TIM_MspPostInit+0x60>
  {
  /* USER CODE BEGIN TIM2_MspPostInit 0 */

  /* USER CODE END TIM2_MspPostInit 0 */
    __HAL_RCC_GPIOA_CLK_ENABLE();
 8001cea:	2300      	movs	r3, #0
 8001cec:	613b      	str	r3, [r7, #16]
 8001cee:	4b22      	ldr	r3, [pc, #136]	@ (8001d78 <HAL_TIM_MspPostInit+0xb0>)
 8001cf0:	6b1b      	ldr	r3, [r3, #48]	@ 0x30
 8001cf2:	4a21      	ldr	r2, [pc, #132]	@ (8001d78 <HAL_TIM_MspPostInit+0xb0>)
 8001cf4:	f043 0301 	orr.w	r3, r3, #1
 8001cf8:	6313      	str	r3, [r2, #48]	@ 0x30
 8001cfa:	4b1f      	ldr	r3, [pc, #124]	@ (8001d78 <HAL_TIM_MspPostInit+0xb0>)
 8001cfc:	6b1b      	ldr	r3, [r3, #48]	@ 0x30
 8001cfe:	f003 0301 	and.w	r3, r3, #1
 8001d02:	613b      	str	r3, [r7, #16]
 8001d04:	693b      	ldr	r3, [r7, #16]
    /**TIM2 GPIO Configuration
    PA0-WKUP     ------> TIM2_CH1
    */
    GPIO_InitStruct.Pin = GPIO_PIN_0;
 8001d06:	2301      	movs	r3, #1
 8001d08:	617b      	str	r3, [r7, #20]
    GPIO_InitStruct.Mode = GPIO_MODE_AF_PP;
 8001d0a:	2302      	movs	r3, #2
 8001d0c:	61bb      	str	r3, [r7, #24]
    GPIO_InitStruct.Pull = GPIO_NOPULL;
 8001d0e:	2300      	movs	r3, #0
 8001d10:	61fb      	str	r3, [r7, #28]
    GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_LOW;
 8001d12:	2300      	movs	r3, #0
 8001d14:	623b      	str	r3, [r7, #32]
    GPIO_InitStruct.Alternate = GPIO_AF1_TIM2;
 8001d16:	2301      	movs	r3, #1
 8001d18:	627b      	str	r3, [r7, #36]	@ 0x24
    HAL_GPIO_Init(GPIOA, &GPIO_InitStruct);
 8001d1a:	f107 0314 	add.w	r3, r7, #20
 8001d1e:	4619      	mov	r1, r3
 8001d20:	4816      	ldr	r0, [pc, #88]	@ (8001d7c <HAL_TIM_MspPostInit+0xb4>)
 8001d22:	f001 fffb 	bl	8003d1c <HAL_GPIO_Init>
  /* USER CODE BEGIN TIM4_MspPostInit 1 */

  /* USER CODE END TIM4_MspPostInit 1 */
  }

}
 8001d26:	e022      	b.n	8001d6e <HAL_TIM_MspPostInit+0xa6>
  else if(htim->Instance==TIM4)
 8001d28:	687b      	ldr	r3, [r7, #4]
 8001d2a:	681b      	ldr	r3, [r3, #0]
 8001d2c:	4a14      	ldr	r2, [pc, #80]	@ (8001d80 <HAL_TIM_MspPostInit+0xb8>)
 8001d2e:	4293      	cmp	r3, r2
 8001d30:	d11d      	bne.n	8001d6e <HAL_TIM_MspPostInit+0xa6>
    __HAL_RCC_GPIOB_CLK_ENABLE();
 8001d32:	2300      	movs	r3, #0
 8001d34:	60fb      	str	r3, [r7, #12]
 8001d36:	4b10      	ldr	r3, [pc, #64]	@ (8001d78 <HAL_TIM_MspPostInit+0xb0>)
 8001d38:	6b1b      	ldr	r3, [r3, #48]	@ 0x30
 8001d3a:	4a0f      	ldr	r2, [pc, #60]	@ (8001d78 <HAL_TIM_MspPostInit+0xb0>)
 8001d3c:	f043 0302 	orr.w	r3, r3, #2
 8001d40:	6313      	str	r3, [r2, #48]	@ 0x30
 8001d42:	4b0d      	ldr	r3, [pc, #52]	@ (8001d78 <HAL_TIM_MspPostInit+0xb0>)
 8001d44:	6b1b      	ldr	r3, [r3, #48]	@ 0x30
 8001d46:	f003 0302 	and.w	r3, r3, #2
 8001d4a:	60fb      	str	r3, [r7, #12]
 8001d4c:	68fb      	ldr	r3, [r7, #12]
    GPIO_InitStruct.Pin = HEATER_PWM_Pin;
 8001d4e:	2380      	movs	r3, #128	@ 0x80
 8001d50:	617b      	str	r3, [r7, #20]
    GPIO_InitStruct.Mode = GPIO_MODE_AF_PP;
 8001d52:	2302      	movs	r3, #2
 8001d54:	61bb      	str	r3, [r7, #24]
    GPIO_InitStruct.Pull = GPIO_NOPULL;
 8001d56:	2300      	movs	r3, #0
 8001d58:	61fb      	str	r3, [r7, #28]
    GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_LOW;
 8001d5a:	2300      	movs	r3, #0
 8001d5c:	623b      	str	r3, [r7, #32]
    GPIO_InitStruct.Alternate = GPIO_AF2_TIM4;
 8001d5e:	2302      	movs	r3, #2
 8001d60:	627b      	str	r3, [r7, #36]	@ 0x24
    HAL_GPIO_Init(HEATER_PWM_GPIO_Port, &GPIO_InitStruct);
 8001d62:	f107 0314 	add.w	r3, r7, #20
 8001d66:	4619      	mov	r1, r3
 8001d68:	4806      	ldr	r0, [pc, #24]	@ (8001d84 <HAL_TIM_MspPostInit+0xbc>)
 8001d6a:	f001 ffd7 	bl	8003d1c <HAL_GPIO_Init>
}
 8001d6e:	bf00      	nop
 8001d70:	3728      	adds	r7, #40	@ 0x28
 8001d72:	46bd      	mov	sp, r7
 8001d74:	bd80      	pop	{r7, pc}
 8001d76:	bf00      	nop
 8001d78:	40023800 	.word	0x40023800
 8001d7c:	40020000 	.word	0x40020000
 8001d80:	40000800 	.word	0x40000800
 8001d84:	40020400 	.word	0x40020400

08001d88 <NMI_Handler>:
/******************************************************************************/
/**
  * @brief This function handles Non maskable interrupt.
  */
void NMI_Handler(void)
{
 8001d88:	b480      	push	{r7}
 8001d8a:	af00      	add	r7, sp, #0
  /* USER CODE BEGIN NonMaskableInt_IRQn 0 */

  /* USER CODE END NonMaskableInt_IRQn 0 */
  /* USER CODE BEGIN NonMaskableInt_IRQn 1 */
   while (1)
 8001d8c:	bf00      	nop
 8001d8e:	e7fd      	b.n	8001d8c <NMI_Handler+0x4>

08001d90 <HardFault_Handler>:

/**
  * @brief This function handles Hard fault interrupt.
  */
void HardFault_Handler(void)
{
 8001d90:	b480      	push	{r7}
 8001d92:	af00      	add	r7, sp, #0
  /* USER CODE BEGIN HardFault_IRQn 0 */

  /* USER CODE END HardFault_IRQn 0 */
  while (1)
 8001d94:	bf00      	nop
 8001d96:	e7fd      	b.n	8001d94 <HardFault_Handler+0x4>

08001d98 <MemManage_Handler>:

/**
  * @brief This function handles Memory management fault.
  */
void MemManage_Handler(void)
{
 8001d98:	b480      	push	{r7}
 8001d9a:	af00      	add	r7, sp, #0
  /* USER CODE BEGIN MemoryManagement_IRQn 0 */

  /* USER CODE END MemoryManagement_IRQn 0 */
  while (1)
 8001d9c:	bf00      	nop
 8001d9e:	e7fd      	b.n	8001d9c <MemManage_Handler+0x4>

08001da0 <BusFault_Handler>:

/**
  * @brief This function handles Pre-fetch fault, memory access fault.
  */
void BusFault_Handler(void)
{
 8001da0:	b480      	push	{r7}
 8001da2:	af00      	add	r7, sp, #0
  /* USER CODE BEGIN BusFault_IRQn 0 */

  /* USER CODE END BusFault_IRQn 0 */
  while (1)
 8001da4:	bf00      	nop
 8001da6:	e7fd      	b.n	8001da4 <BusFault_Handler+0x4>

08001da8 <UsageFault_Handler>:

/**
  * @brief This function handles Undefined instruction or illegal state.
  */
void UsageFault_Handler(void)
{
 8001da8:	b480      	push	{r7}
 8001daa:	af00      	add	r7, sp, #0
  /* USER CODE BEGIN UsageFault_IRQn 0 */

  /* USER CODE END UsageFault_IRQn 0 */
  while (1)
 8001dac:	bf00      	nop
 8001dae:	e7fd      	b.n	8001dac <UsageFault_Handler+0x4>

08001db0 <SVC_Handler>:

/**
  * @brief This function handles System service call via SWI instruction.
  */
void SVC_Handler(void)
{
 8001db0:	b480      	push	{r7}
 8001db2:	af00      	add	r7, sp, #0

  /* USER CODE END SVCall_IRQn 0 */
  /* USER CODE BEGIN SVCall_IRQn 1 */

  /* USER CODE END SVCall_IRQn 1 */
}
 8001db4:	bf00      	nop
 8001db6:	46bd      	mov	sp, r7
 8001db8:	f85d 7b04 	ldr.w	r7, [sp], #4
 8001dbc:	4770      	bx	lr

08001dbe <DebugMon_Handler>:

/**
  * @brief This function handles Debug monitor.
  */
void DebugMon_Handler(void)
{
 8001dbe:	b480      	push	{r7}
 8001dc0:	af00      	add	r7, sp, #0

  /* USER CODE END DebugMonitor_IRQn 0 */
  /* USER CODE BEGIN DebugMonitor_IRQn 1 */

  /* USER CODE END DebugMonitor_IRQn 1 */
}
 8001dc2:	bf00      	nop
 8001dc4:	46bd      	mov	sp, r7
 8001dc6:	f85d 7b04 	ldr.w	r7, [sp], #4
 8001dca:	4770      	bx	lr

08001dcc <PendSV_Handler>:

/**
  * @brief This function handles Pendable request for system service.
  */
void PendSV_Handler(void)
{
 8001dcc:	b480      	push	{r7}
 8001dce:	af00      	add	r7, sp, #0

  /* USER CODE END PendSV_IRQn 0 */
  /* USER CODE BEGIN PendSV_IRQn 1 */

  /* USER CODE END PendSV_IRQn 1 */
}
 8001dd0:	bf00      	nop
 8001dd2:	46bd      	mov	sp, r7
 8001dd4:	f85d 7b04 	ldr.w	r7, [sp], #4
 8001dd8:	4770      	bx	lr

08001dda <SysTick_Handler>:

/**
  * @brief This function handles System tick timer.
  */
void SysTick_Handler(void)
{
 8001dda:	b580      	push	{r7, lr}
 8001ddc:	af00      	add	r7, sp, #0
  /* USER CODE BEGIN SysTick_IRQn 0 */

  /* USER CODE END SysTick_IRQn 0 */
  HAL_IncTick();
 8001dde:	f000 fe19 	bl	8002a14 <HAL_IncTick>
  /* USER CODE BEGIN SysTick_IRQn 1 */

  /* USER CODE END SysTick_IRQn 1 */
}
 8001de2:	bf00      	nop
 8001de4:	bd80      	pop	{r7, pc}
	...

08001de8 <DMA1_Stream4_IRQHandler>:

/**
  * @brief This function handles DMA1 stream4 global interrupt.
  */
void DMA1_Stream4_IRQHandler(void)
{
 8001de8:	b580      	push	{r7, lr}
 8001dea:	af00      	add	r7, sp, #0
  /* USER CODE BEGIN DMA1_Stream4_IRQn 0 */

  /* USER CODE END DMA1_Stream4_IRQn 0 */
  HAL_DMA_IRQHandler(&hdma_spi2_tx);
 8001dec:	4802      	ldr	r0, [pc, #8]	@ (8001df8 <DMA1_Stream4_IRQHandler+0x10>)
 8001dee:	f001 fd2b 	bl	8003848 <HAL_DMA_IRQHandler>
  /* USER CODE BEGIN DMA1_Stream4_IRQn 1 */

  /* USER CODE END DMA1_Stream4_IRQn 1 */
}
 8001df2:	bf00      	nop
 8001df4:	bd80      	pop	{r7, pc}
 8001df6:	bf00      	nop
 8001df8:	200004ec 	.word	0x200004ec

08001dfc <EXTI9_5_IRQHandler>:

/**
  * @brief This function handles EXTI line[9:5] interrupts.
  */
void EXTI9_5_IRQHandler(void)
{
 8001dfc:	b580      	push	{r7, lr}
 8001dfe:	af00      	add	r7, sp, #0
  /* USER CODE BEGIN EXTI9_5_IRQn 0 */

  /* USER CODE END EXTI9_5_IRQn 0 */
  HAL_GPIO_EXTI_IRQHandler(TOUCH_INT_Pin);
 8001e00:	f44f 7080 	mov.w	r0, #256	@ 0x100
 8001e04:	f002 f96a 	bl	80040dc <HAL_GPIO_EXTI_IRQHandler>
  /* USER CODE BEGIN EXTI9_5_IRQn 1 */

  /* USER CODE END EXTI9_5_IRQn 1 */
}
 8001e08:	bf00      	nop
 8001e0a:	bd80      	pop	{r7, pc}

08001e0c <TIM3_IRQHandler>:

/**
  * @brief This function handles TIM3 global interrupt.
  */
void TIM3_IRQHandler(void)
{
 8001e0c:	b580      	push	{r7, lr}
 8001e0e:	af00      	add	r7, sp, #0
  /* USER CODE BEGIN TIM3_IRQn 0 */

  /* USER CODE END TIM3_IRQn 0 */
  HAL_TIM_IRQHandler(&htim3);
 8001e10:	4802      	ldr	r0, [pc, #8]	@ (8001e1c <TIM3_IRQHandler+0x10>)
 8001e12:	f005 f993 	bl	800713c <HAL_TIM_IRQHandler>
  /* USER CODE BEGIN TIM3_IRQn 1 */

  /* USER CODE END TIM3_IRQn 1 */
}
 8001e16:	bf00      	nop
 8001e18:	bd80      	pop	{r7, pc}
 8001e1a:	bf00      	nop
 8001e1c:	20000594 	.word	0x20000594

08001e20 <TIM4_IRQHandler>:

/**
  * @brief This function handles TIM4 global interrupt.
  */
void TIM4_IRQHandler(void)
{
 8001e20:	b580      	push	{r7, lr}
 8001e22:	af00      	add	r7, sp, #0
  /* USER CODE BEGIN TIM4_IRQn 0 */

  /* USER CODE END TIM4_IRQn 0 */
  HAL_TIM_IRQHandler(&htim4);
 8001e24:	4802      	ldr	r0, [pc, #8]	@ (8001e30 <TIM4_IRQHandler+0x10>)
 8001e26:	f005 f989 	bl	800713c <HAL_TIM_IRQHandler>
  /* USER CODE BEGIN TIM4_IRQn 1 */

  /* USER CODE END TIM4_IRQn 1 */
}
 8001e2a:	bf00      	nop
 8001e2c:	bd80      	pop	{r7, pc}
 8001e2e:	bf00      	nop
 8001e30:	200005dc 	.word	0x200005dc

08001e34 <SPI2_IRQHandler>:

/**
  * @brief This function handles SPI2 global interrupt.
  */
void SPI2_IRQHandler(void)
{
 8001e34:	b580      	push	{r7, lr}
 8001e36:	af00      	add	r7, sp, #0
  /* USER CODE BEGIN SPI2_IRQn 0 */

  /* USER CODE END SPI2_IRQn 0 */
  HAL_SPI_IRQHandler(&hspi2);
 8001e38:	4802      	ldr	r0, [pc, #8]	@ (8001e44 <SPI2_IRQHandler+0x10>)
 8001e3a:	f004 fcc7 	bl	80067cc <HAL_SPI_IRQHandler>
  /* USER CODE BEGIN SPI2_IRQn 1 */

  /* USER CODE END SPI2_IRQn 1 */
}
 8001e3e:	bf00      	nop
 8001e40:	bd80      	pop	{r7, pc}
 8001e42:	bf00      	nop
 8001e44:	20000494 	.word	0x20000494

08001e48 <DMA2_Stream2_IRQHandler>:

/**
  * @brief This function handles DMA2 stream2 global interrupt.
  */
void DMA2_Stream2_IRQHandler(void)
{
 8001e48:	b580      	push	{r7, lr}
 8001e4a:	af00      	add	r7, sp, #0
  /* USER CODE BEGIN DMA2_Stream2_IRQn 0 */

  /* USER CODE END DMA2_Stream2_IRQn 0 */
  HAL_DMA_IRQHandler(&hdma_adc2);
 8001e4c:	4802      	ldr	r0, [pc, #8]	@ (8001e58 <DMA2_Stream2_IRQHandler+0x10>)
 8001e4e:	f001 fcfb 	bl	8003848 <HAL_DMA_IRQHandler>
  /* USER CODE BEGIN DMA2_Stream2_IRQn 1 */

  /* USER CODE END DMA2_Stream2_IRQn 1 */
}
 8001e52:	bf00      	nop
 8001e54:	bd80      	pop	{r7, pc}
 8001e56:	bf00      	nop
 8001e58:	20000384 	.word	0x20000384

08001e5c <_getpid>:
 8001e5c:	b480      	push	{r7}
 8001e5e:	af00      	add	r7, sp, #0
 8001e60:	2301      	movs	r3, #1
 8001e62:	4618      	mov	r0, r3
 8001e64:	46bd      	mov	sp, r7
 8001e66:	f85d 7b04 	ldr.w	r7, [sp], #4
 8001e6a:	4770      	bx	lr

08001e6c <_kill>:
 8001e6c:	b580      	push	{r7, lr}
 8001e6e:	b082      	sub	sp, #8
 8001e70:	af00      	add	r7, sp, #0
 8001e72:	6078      	str	r0, [r7, #4]
 8001e74:	6039      	str	r1, [r7, #0]
 8001e76:	f024 f965 	bl	8026144 <__errno>
 8001e7a:	4603      	mov	r3, r0
 8001e7c:	2216      	movs	r2, #22
 8001e7e:	601a      	str	r2, [r3, #0]
 8001e80:	f04f 33ff 	mov.w	r3, #4294967295
 8001e84:	4618      	mov	r0, r3
 8001e86:	3708      	adds	r7, #8
 8001e88:	46bd      	mov	sp, r7
 8001e8a:	bd80      	pop	{r7, pc}

08001e8c <_exit>:
 8001e8c:	b580      	push	{r7, lr}
 8001e8e:	b082      	sub	sp, #8
 8001e90:	af00      	add	r7, sp, #0
 8001e92:	6078      	str	r0, [r7, #4]
 8001e94:	f04f 31ff 	mov.w	r1, #4294967295
 8001e98:	6878      	ldr	r0, [r7, #4]
 8001e9a:	f7ff ffe7 	bl	8001e6c <_kill>
 8001e9e:	bf00      	nop
 8001ea0:	e7fd      	b.n	8001e9e <_exit+0x12>

08001ea2 <_read>:
 8001ea2:	b580      	push	{r7, lr}
 8001ea4:	b086      	sub	sp, #24
 8001ea6:	af00      	add	r7, sp, #0
 8001ea8:	60f8      	str	r0, [r7, #12]
 8001eaa:	60b9      	str	r1, [r7, #8]
 8001eac:	607a      	str	r2, [r7, #4]
 8001eae:	2300      	movs	r3, #0
 8001eb0:	617b      	str	r3, [r7, #20]
 8001eb2:	e00a      	b.n	8001eca <_read+0x28>
 8001eb4:	f3af 8000 	nop.w
 8001eb8:	4601      	mov	r1, r0
 8001eba:	68bb      	ldr	r3, [r7, #8]
 8001ebc:	1c5a      	adds	r2, r3, #1
 8001ebe:	60ba      	str	r2, [r7, #8]
 8001ec0:	b2ca      	uxtb	r2, r1
 8001ec2:	701a      	strb	r2, [r3, #0]
 8001ec4:	697b      	ldr	r3, [r7, #20]
 8001ec6:	3301      	adds	r3, #1
 8001ec8:	617b      	str	r3, [r7, #20]
 8001eca:	697a      	ldr	r2, [r7, #20]
 8001ecc:	687b      	ldr	r3, [r7, #4]
 8001ece:	429a      	cmp	r2, r3
 8001ed0:	dbf0      	blt.n	8001eb4 <_read+0x12>
 8001ed2:	687b      	ldr	r3, [r7, #4]
 8001ed4:	4618      	mov	r0, r3
 8001ed6:	3718      	adds	r7, #24
 8001ed8:	46bd      	mov	sp, r7
 8001eda:	bd80      	pop	{r7, pc}

08001edc <_write>:
 8001edc:	b580      	push	{r7, lr}
 8001ede:	b086      	sub	sp, #24
 8001ee0:	af00      	add	r7, sp, #0
 8001ee2:	60f8      	str	r0, [r7, #12]
 8001ee4:	60b9      	str	r1, [r7, #8]
 8001ee6:	607a      	str	r2, [r7, #4]
 8001ee8:	2300      	movs	r3, #0
 8001eea:	617b      	str	r3, [r7, #20]
 8001eec:	e009      	b.n	8001f02 <_write+0x26>
 8001eee:	68bb      	ldr	r3, [r7, #8]
 8001ef0:	1c5a      	adds	r2, r3, #1
 8001ef2:	60ba      	str	r2, [r7, #8]
 8001ef4:	781b      	ldrb	r3, [r3, #0]
 8001ef6:	4618      	mov	r0, r3
 8001ef8:	f3af 8000 	nop.w
 8001efc:	697b      	ldr	r3, [r7, #20]
 8001efe:	3301      	adds	r3, #1
 8001f00:	617b      	str	r3, [r7, #20]
 8001f02:	697a      	ldr	r2, [r7, #20]
 8001f04:	687b      	ldr	r3, [r7, #4]
 8001f06:	429a      	cmp	r2, r3
 8001f08:	dbf1      	blt.n	8001eee <_write+0x12>
 8001f0a:	687b      	ldr	r3, [r7, #4]
 8001f0c:	4618      	mov	r0, r3
 8001f0e:	3718      	adds	r7, #24
 8001f10:	46bd      	mov	sp, r7
 8001f12:	bd80      	pop	{r7, pc}

08001f14 <_close>:
 8001f14:	b480      	push	{r7}
 8001f16:	b083      	sub	sp, #12
 8001f18:	af00      	add	r7, sp, #0
 8001f1a:	6078      	str	r0, [r7, #4]
 8001f1c:	f04f 33ff 	mov.w	r3, #4294967295
 8001f20:	4618      	mov	r0, r3
 8001f22:	370c      	adds	r7, #12
 8001f24:	46bd      	mov	sp, r7
 8001f26:	f85d 7b04 	ldr.w	r7, [sp], #4
 8001f2a:	4770      	bx	lr

08001f2c <_fstat>:
 8001f2c:	b480      	push	{r7}
 8001f2e:	b083      	sub	sp, #12
 8001f30:	af00      	add	r7, sp, #0
 8001f32:	6078      	str	r0, [r7, #4]
 8001f34:	6039      	str	r1, [r7, #0]
 8001f36:	683b      	ldr	r3, [r7, #0]
 8001f38:	f44f 5200 	mov.w	r2, #8192	@ 0x2000
 8001f3c:	605a      	str	r2, [r3, #4]
 8001f3e:	2300      	movs	r3, #0
 8001f40:	4618      	mov	r0, r3
 8001f42:	370c      	adds	r7, #12
 8001f44:	46bd      	mov	sp, r7
 8001f46:	f85d 7b04 	ldr.w	r7, [sp], #4
 8001f4a:	4770      	bx	lr

08001f4c <_isatty>:
 8001f4c:	b480      	push	{r7}
 8001f4e:	b083      	sub	sp, #12
 8001f50:	af00      	add	r7, sp, #0
 8001f52:	6078      	str	r0, [r7, #4]
 8001f54:	2301      	movs	r3, #1
 8001f56:	4618      	mov	r0, r3
 8001f58:	370c      	adds	r7, #12
 8001f5a:	46bd      	mov	sp, r7
 8001f5c:	f85d 7b04 	ldr.w	r7, [sp], #4
 8001f60:	4770      	bx	lr

08001f62 <_lseek>:
 8001f62:	b480      	push	{r7}
 8001f64:	b085      	sub	sp, #20
 8001f66:	af00      	add	r7, sp, #0
 8001f68:	60f8      	str	r0, [r7, #12]
 8001f6a:	60b9      	str	r1, [r7, #8]
 8001f6c:	607a      	str	r2, [r7, #4]
 8001f6e:	2300      	movs	r3, #0
 8001f70:	4618      	mov	r0, r3
 8001f72:	3714      	adds	r7, #20
 8001f74:	46bd      	mov	sp, r7
 8001f76:	f85d 7b04 	ldr.w	r7, [sp], #4
 8001f7a:	4770      	bx	lr

08001f7c <_sbrk>:
 8001f7c:	b580      	push	{r7, lr}
 8001f7e:	b086      	sub	sp, #24
 8001f80:	af00      	add	r7, sp, #0
 8001f82:	6078      	str	r0, [r7, #4]
 8001f84:	4a14      	ldr	r2, [pc, #80]	@ (8001fd8 <_sbrk+0x5c>)
 8001f86:	4b15      	ldr	r3, [pc, #84]	@ (8001fdc <_sbrk+0x60>)
 8001f88:	1ad3      	subs	r3, r2, r3
 8001f8a:	617b      	str	r3, [r7, #20]
 8001f8c:	697b      	ldr	r3, [r7, #20]
 8001f8e:	613b      	str	r3, [r7, #16]
 8001f90:	4b13      	ldr	r3, [pc, #76]	@ (8001fe0 <_sbrk+0x64>)
 8001f92:	681b      	ldr	r3, [r3, #0]
 8001f94:	2b00      	cmp	r3, #0
 8001f96:	d102      	bne.n	8001f9e <_sbrk+0x22>
 8001f98:	4b11      	ldr	r3, [pc, #68]	@ (8001fe0 <_sbrk+0x64>)
 8001f9a:	4a12      	ldr	r2, [pc, #72]	@ (8001fe4 <_sbrk+0x68>)
 8001f9c:	601a      	str	r2, [r3, #0]
 8001f9e:	4b10      	ldr	r3, [pc, #64]	@ (8001fe0 <_sbrk+0x64>)
 8001fa0:	681a      	ldr	r2, [r3, #0]
 8001fa2:	687b      	ldr	r3, [r7, #4]
 8001fa4:	4413      	add	r3, r2
 8001fa6:	693a      	ldr	r2, [r7, #16]
 8001fa8:	429a      	cmp	r2, r3
 8001faa:	d207      	bcs.n	8001fbc <_sbrk+0x40>
 8001fac:	f024 f8ca 	bl	8026144 <__errno>
 8001fb0:	4603      	mov	r3, r0
 8001fb2:	220c      	movs	r2, #12
 8001fb4:	601a      	str	r2, [r3, #0]
 8001fb6:	f04f 33ff 	mov.w	r3, #4294967295
 8001fba:	e009      	b.n	8001fd0 <_sbrk+0x54>
 8001fbc:	4b08      	ldr	r3, [pc, #32]	@ (8001fe0 <_sbrk+0x64>)
 8001fbe:	681b      	ldr	r3, [r3, #0]
 8001fc0:	60fb      	str	r3, [r7, #12]
 8001fc2:	4b07      	ldr	r3, [pc, #28]	@ (8001fe0 <_sbrk+0x64>)
 8001fc4:	681a      	ldr	r2, [r3, #0]
 8001fc6:	687b      	ldr	r3, [r7, #4]
 8001fc8:	4413      	add	r3, r2
 8001fca:	4a05      	ldr	r2, [pc, #20]	@ (8001fe0 <_sbrk+0x64>)
 8001fcc:	6013      	str	r3, [r2, #0]
 8001fce:	68fb      	ldr	r3, [r7, #12]
 8001fd0:	4618      	mov	r0, r3
 8001fd2:	3718      	adds	r7, #24
 8001fd4:	46bd      	mov	sp, r7
 8001fd6:	bd80      	pop	{r7, pc}
 8001fd8:	20020000 	.word	0x20020000
 8001fdc:	00000400 	.word	0x00000400
 8001fe0:	20000638 	.word	0x20000638
 8001fe4:	20003ce0 	.word	0x20003ce0

08001fe8 <SystemInit>:
  *         configuration.
  * @param  None
  * @retval None
  */
void SystemInit(void)
{
 8001fe8:	b480      	push	{r7}
 8001fea:	af00      	add	r7, sp, #0
  /* FPU settings ------------------------------------------------------------*/
  #if (__FPU_PRESENT == 1) && (__FPU_USED == 1)
    SCB->CPACR |= ((3UL << 10*2)|(3UL << 11*2));  /* set CP10 and CP11 Full Access */
 8001fec:	4b06      	ldr	r3, [pc, #24]	@ (8002008 <SystemInit+0x20>)
 8001fee:	f8d3 3088 	ldr.w	r3, [r3, #136]	@ 0x88
 8001ff2:	4a05      	ldr	r2, [pc, #20]	@ (8002008 <SystemInit+0x20>)
 8001ff4:	f443 0370 	orr.w	r3, r3, #15728640	@ 0xf00000
 8001ff8:	f8c2 3088 	str.w	r3, [r2, #136]	@ 0x88

  /* Configure the Vector Table location -------------------------------------*/
#if defined(USER_VECT_TAB_ADDRESS)
  SCB->VTOR = VECT_TAB_BASE_ADDRESS | VECT_TAB_OFFSET; /* Vector Table Relocation in Internal SRAM */
#endif /* USER_VECT_TAB_ADDRESS */
}
 8001ffc:	bf00      	nop
 8001ffe:	46bd      	mov	sp, r7
 8002000:	f85d 7b04 	ldr.w	r7, [sp], #4
 8002004:	4770      	bx	lr
 8002006:	bf00      	nop
 8002008:	e000ed00 	.word	0xe000ed00

0800200c <Displ_Select>:

/******************************************
 * @brief	enable display, disabling touch
 * 			device selected if CS low
 ******************************************/
void Displ_Select(void) {
 800200c:	b580      	push	{r7, lr}
 800200e:	af00      	add	r7, sp, #0
	if (TOUCH_SPI==DISPL_SPI){														// if SPI port shared (display <-> touch)
		if (HAL_GPIO_ReadPin(DISPL_CS_GPIO_Port, DISPL_CS_Pin)) {					// if display not yet selected
 8002010:	2180      	movs	r1, #128	@ 0x80
 8002012:	4810      	ldr	r0, [pc, #64]	@ (8002054 <Displ_Select+0x48>)
 8002014:	f002 f816 	bl	8004044 <HAL_GPIO_ReadPin>
 8002018:	4603      	mov	r3, r0
 800201a:	2b00      	cmp	r3, #0
 800201c:	d017      	beq.n	800204e <Displ_Select+0x42>
			HAL_GPIO_WritePin(TOUCH_CS_GPIO_Port, TOUCH_CS_Pin, GPIO_PIN_SET); 		// unselect touch
 800201e:	2201      	movs	r2, #1
 8002020:	f44f 7100 	mov.w	r1, #512	@ 0x200
 8002024:	480c      	ldr	r0, [pc, #48]	@ (8002058 <Displ_Select+0x4c>)
 8002026:	f002 f825 	bl	8004074 <HAL_GPIO_WritePin>
			SET_DISPL_SPI_BAUDRATE;				   									//change SPI port speed as per display needs
 800202a:	4b0c      	ldr	r3, [pc, #48]	@ (800205c <Displ_Select+0x50>)
 800202c:	681a      	ldr	r2, [r3, #0]
 800202e:	490b      	ldr	r1, [pc, #44]	@ (800205c <Displ_Select+0x50>)
 8002030:	f64f 73c7 	movw	r3, #65479	@ 0xffc7
 8002034:	4013      	ands	r3, r2
 8002036:	600b      	str	r3, [r1, #0]
 8002038:	4b08      	ldr	r3, [pc, #32]	@ (800205c <Displ_Select+0x50>)
 800203a:	681b      	ldr	r3, [r3, #0]
 800203c:	4a07      	ldr	r2, [pc, #28]	@ (800205c <Displ_Select+0x50>)
 800203e:	f043 0308 	orr.w	r3, r3, #8
 8002042:	6013      	str	r3, [r2, #0]
			HAL_GPIO_WritePin(DISPL_CS_GPIO_Port, DISPL_CS_Pin, GPIO_PIN_RESET);	// select display
 8002044:	2200      	movs	r2, #0
 8002046:	2180      	movs	r1, #128	@ 0x80
 8002048:	4802      	ldr	r0, [pc, #8]	@ (8002054 <Displ_Select+0x48>)
 800204a:	f002 f813 	bl	8004074 <HAL_GPIO_WritePin>
		}
	}
}
 800204e:	bf00      	nop
 8002050:	bd80      	pop	{r7, pc}
 8002052:	bf00      	nop
 8002054:	40020800 	.word	0x40020800
 8002058:	40020000 	.word	0x40020000
 800205c:	40003800 	.word	0x40003800

08002060 <Displ_Transmit>:
 * @PARAM	DC_Status 	indicates if sending command or data
 * 			data		buffer data to send
 * 			dataSize	number of bytes in "data" to be sent
 * 			isTouchGFXBuffer 1 only when called by touchgfxDisplayDriverTransmitBlock (for byte endian conversion). All other cases 0
 **************************/
void Displ_Transmit(GPIO_PinState DC_Status, uint8_t* data, uint16_t dataSize, uint8_t isTouchGFXBuffer ){
 8002060:	b580      	push	{r7, lr}
 8002062:	b086      	sub	sp, #24
 8002064:	af00      	add	r7, sp, #0
 8002066:	6039      	str	r1, [r7, #0]
 8002068:	4611      	mov	r1, r2
 800206a:	461a      	mov	r2, r3
 800206c:	4603      	mov	r3, r0
 800206e:	71fb      	strb	r3, [r7, #7]
 8002070:	460b      	mov	r3, r1
 8002072:	80bb      	strh	r3, [r7, #4]
 8002074:	4613      	mov	r3, r2
 8002076:	71bb      	strb	r3, [r7, #6]

	while (!Displ_SpiAvailable) {};  // waiting for a free SPI port. Flag is set to 1 by transmission-complete interrupt callback
 8002078:	bf00      	nop
 800207a:	4b25      	ldr	r3, [pc, #148]	@ (8002110 <Displ_Transmit+0xb0>)
 800207c:	781b      	ldrb	r3, [r3, #0]
 800207e:	b2db      	uxtb	r3, r3
 8002080:	2b00      	cmp	r3, #0
 8002082:	d0fa      	beq.n	800207a <Displ_Transmit+0x1a>

	Displ_Select();
 8002084:	f7ff ffc2 	bl	800200c <Displ_Select>
	HAL_GPIO_WritePin(DISPL_DC_GPIO_Port, DISPL_DC_Pin, DC_Status);
 8002088:	79fb      	ldrb	r3, [r7, #7]
 800208a:	461a      	mov	r2, r3
 800208c:	2180      	movs	r1, #128	@ 0x80
 800208e:	4821      	ldr	r0, [pc, #132]	@ (8002114 <Displ_Transmit+0xb4>)
 8002090:	f001 fff0 	bl	8004074 <HAL_GPIO_WritePin>

	if (isTouchGFXBuffer){
 8002094:	79bb      	ldrb	r3, [r7, #6]
 8002096:	2b00      	cmp	r3, #0
 8002098:	d016      	beq.n	80020c8 <Displ_Transmit+0x68>
#ifdef Z_RGB565
//if color format is RGB565 just swap even and odd bytes correcting endianess for ILI driver
		uint32_t *limit=(uint32_t*)(data+dataSize);
 800209a:	88bb      	ldrh	r3, [r7, #4]
 800209c:	683a      	ldr	r2, [r7, #0]
 800209e:	4413      	add	r3, r2
 80020a0:	613b      	str	r3, [r7, #16]
		for (uint32_t *data32=(uint32_t*)data; data32<limit; data32++) {
 80020a2:	683b      	ldr	r3, [r7, #0]
 80020a4:	617b      	str	r3, [r7, #20]
 80020a6:	e00b      	b.n	80020c0 <Displ_Transmit+0x60>
			*data32=__REV16(*data32);
 80020a8:	697b      	ldr	r3, [r7, #20]
 80020aa:	681b      	ldr	r3, [r3, #0]
 80020ac:	60fb      	str	r3, [r7, #12]
  __ASM ("rev16 %0, %1" : __CMSIS_GCC_OUT_REG (result) : __CMSIS_GCC_USE_REG (value) );
 80020ae:	68fb      	ldr	r3, [r7, #12]
 80020b0:	ba5b      	rev16	r3, r3
 80020b2:	60bb      	str	r3, [r7, #8]
  return result;
 80020b4:	68ba      	ldr	r2, [r7, #8]
 80020b6:	697b      	ldr	r3, [r7, #20]
 80020b8:	601a      	str	r2, [r3, #0]
		for (uint32_t *data32=(uint32_t*)data; data32<limit; data32++) {
 80020ba:	697b      	ldr	r3, [r7, #20]
 80020bc:	3304      	adds	r3, #4
 80020be:	617b      	str	r3, [r7, #20]
 80020c0:	697a      	ldr	r2, [r7, #20]
 80020c2:	693b      	ldr	r3, [r7, #16]
 80020c4:	429a      	cmp	r2, r3
 80020c6:	d3ef      	bcc.n	80020a8 <Displ_Transmit+0x48>
#ifdef DISPLAY_SPI_INTERRUPT_MODE
		Displ_SpiAvailable=0;
		HAL_SPI_Transmit_IT(&DISPL_SPI_PORT , data, dataSize);
#else
#ifdef DISPLAY_SPI_DMA_MODE
		if (dataSize<DISPL_DMA_CUTOFF) {
 80020c8:	88bb      	ldrh	r3, [r7, #4]
 80020ca:	2b13      	cmp	r3, #19
 80020cc:	d812      	bhi.n	80020f4 <Displ_Transmit+0x94>
#endif //DISPLAY_SPI_DMA_MODE
			Displ_SpiAvailable=0;
 80020ce:	4b10      	ldr	r3, [pc, #64]	@ (8002110 <Displ_Transmit+0xb0>)
 80020d0:	2200      	movs	r2, #0
 80020d2:	701a      	strb	r2, [r3, #0]
			HAL_SPI_Transmit(&DISPL_SPI_PORT , data, dataSize, HAL_MAX_DELAY);
 80020d4:	88ba      	ldrh	r2, [r7, #4]
 80020d6:	f04f 33ff 	mov.w	r3, #4294967295
 80020da:	6839      	ldr	r1, [r7, #0]
 80020dc:	480e      	ldr	r0, [pc, #56]	@ (8002118 <Displ_Transmit+0xb8>)
 80020de:	f003 febc 	bl	8005e5a <HAL_SPI_Transmit>
			Displ_SpiAvailable=1;
 80020e2:	4b0b      	ldr	r3, [pc, #44]	@ (8002110 <Displ_Transmit+0xb0>)
 80020e4:	2201      	movs	r2, #1
 80020e6:	701a      	strb	r2, [r3, #0]
#ifdef DISPLAY_USING_TOUCHGFX
			if (isTouchGFXBuffer){
 80020e8:	79bb      	ldrb	r3, [r7, #6]
 80020ea:	2b00      	cmp	r3, #0
 80020ec:	d00b      	beq.n	8002106 <Displ_Transmit+0xa6>
				DisplayDriver_TransferCompleteCallback();
 80020ee:	f00d ffdb 	bl	80100a8 <DisplayDriver_TransferCompleteCallback>
			Displ_SpiAvailable=0;
			HAL_SPI_Transmit_DMA(&DISPL_SPI_PORT , data, dataSize);
		}
#endif //DISPLAY_SPI_DMA_MODE
#endif //DISPLAY_SPI_INTERRUPT_MODE
	}
 80020f2:	e008      	b.n	8002106 <Displ_Transmit+0xa6>
			Displ_SpiAvailable=0;
 80020f4:	4b06      	ldr	r3, [pc, #24]	@ (8002110 <Displ_Transmit+0xb0>)
 80020f6:	2200      	movs	r2, #0
 80020f8:	701a      	strb	r2, [r3, #0]
			HAL_SPI_Transmit_DMA(&DISPL_SPI_PORT , data, dataSize);
 80020fa:	88bb      	ldrh	r3, [r7, #4]
 80020fc:	461a      	mov	r2, r3
 80020fe:	6839      	ldr	r1, [r7, #0]
 8002100:	4805      	ldr	r0, [pc, #20]	@ (8002118 <Displ_Transmit+0xb8>)
 8002102:	f004 fab1 	bl	8006668 <HAL_SPI_Transmit_DMA>
	}
 8002106:	bf00      	nop
 8002108:	3718      	adds	r7, #24
 800210a:	46bd      	mov	sp, r7
 800210c:	bd80      	pop	{r7, pc}
 800210e:	bf00      	nop
 8002110:	20000018 	.word	0x20000018
 8002114:	40020000 	.word	0x40020000
 8002118:	20000494 	.word	0x20000494

0800211c <Displ_WriteCommand>:


/**********************************
 * @BRIEF	transmit a byte in a SPI_COMMAND format
 **********************************/
void Displ_WriteCommand(uint8_t cmd){
 800211c:	b580      	push	{r7, lr}
 800211e:	b082      	sub	sp, #8
 8002120:	af00      	add	r7, sp, #0
 8002122:	4603      	mov	r3, r0
 8002124:	71fb      	strb	r3, [r7, #7]
	Displ_Transmit(SPI_COMMAND, &cmd, sizeof(cmd),0);
 8002126:	1df9      	adds	r1, r7, #7
 8002128:	2300      	movs	r3, #0
 800212a:	2201      	movs	r2, #1
 800212c:	2000      	movs	r0, #0
 800212e:	f7ff ff97 	bl	8002060 <Displ_Transmit>
}
 8002132:	bf00      	nop
 8002134:	3708      	adds	r7, #8
 8002136:	46bd      	mov	sp, r7
 8002138:	bd80      	pop	{r7, pc}

0800213a <Displ_WriteData>:
 * @BRIEF	transmit a set of data in a SPI_DATA format
 * @PARAM 	data		buffer data to send
 * 			dataSize	number of bytes in "data" to be sent
 * 			isTouchGFXBuffer 1 only when called by touchgfxDisplayDriverTransmitBlock (for byte endian conversion). All other cases 0
 **********************************/
void Displ_WriteData(uint8_t* buff, size_t buff_size, uint8_t isTouchGFXBuffer){
 800213a:	b580      	push	{r7, lr}
 800213c:	b084      	sub	sp, #16
 800213e:	af00      	add	r7, sp, #0
 8002140:	60f8      	str	r0, [r7, #12]
 8002142:	60b9      	str	r1, [r7, #8]
 8002144:	4613      	mov	r3, r2
 8002146:	71fb      	strb	r3, [r7, #7]
	if (buff_size==0) return;
 8002148:	68bb      	ldr	r3, [r7, #8]
 800214a:	2b00      	cmp	r3, #0
 800214c:	d007      	beq.n	800215e <Displ_WriteData+0x24>
	Displ_Transmit(SPI_DATA, buff, buff_size, isTouchGFXBuffer);
 800214e:	68bb      	ldr	r3, [r7, #8]
 8002150:	b29a      	uxth	r2, r3
 8002152:	79fb      	ldrb	r3, [r7, #7]
 8002154:	68f9      	ldr	r1, [r7, #12]
 8002156:	2001      	movs	r0, #1
 8002158:	f7ff ff82 	bl	8002060 <Displ_Transmit>
 800215c:	e000      	b.n	8002160 <Displ_WriteData+0x26>
	if (buff_size==0) return;
 800215e:	bf00      	nop
}
 8002160:	3710      	adds	r7, #16
 8002162:	46bd      	mov	sp, r7
 8002164:	bd80      	pop	{r7, pc}
	...

08002168 <ILI9XXX_Init>:


/**********************************
 * @brief	ILIXXX initialization sequence
 **********************************/
void ILI9XXX_Init(){
 8002168:	b580      	push	{r7, lr}
 800216a:	af00      	add	r7, sp, #0
	Displ_Select();
 800216c:	f7ff ff4e 	bl	800200c <Displ_Select>

	HAL_GPIO_WritePin(DISPL_RST_GPIO_Port, DISPL_RST_Pin, GPIO_PIN_RESET);
 8002170:	2200      	movs	r2, #0
 8002172:	2140      	movs	r1, #64	@ 0x40
 8002174:	4819      	ldr	r0, [pc, #100]	@ (80021dc <ILI9XXX_Init+0x74>)
 8002176:	f001 ff7d 	bl	8004074 <HAL_GPIO_WritePin>
	HAL_Delay(1);
 800217a:	2001      	movs	r0, #1
 800217c:	f000 fc6a 	bl	8002a54 <HAL_Delay>
	HAL_GPIO_WritePin(DISPL_RST_GPIO_Port, DISPL_RST_Pin, GPIO_PIN_SET);
 8002180:	2201      	movs	r2, #1
 8002182:	2140      	movs	r1, #64	@ 0x40
 8002184:	4815      	ldr	r0, [pc, #84]	@ (80021dc <ILI9XXX_Init+0x74>)
 8002186:	f001 ff75 	bl	8004074 <HAL_GPIO_WritePin>
	HAL_Delay(150);
 800218a:	2096      	movs	r0, #150	@ 0x96
 800218c:	f000 fc62 	bl	8002a54 <HAL_Delay>
		Displ_WriteData(data,3);
	#endif
*/


	Displ_WriteCommand(ILI9XXX_PIXEL_FORMAT);
 8002190:	203a      	movs	r0, #58	@ 0x3a
 8002192:	f7ff ffc3 	bl	800211c <Displ_WriteCommand>
#ifdef Z_RGB666
	Displ_WriteData((uint8_t *)"\x66",1,0);		// RGB666
#endif
#ifdef Z_RGB565
	Displ_WriteData((uint8_t *)"\x55",1,0);		// RGB565
 8002196:	2200      	movs	r2, #0
 8002198:	2101      	movs	r1, #1
 800219a:	4811      	ldr	r0, [pc, #68]	@ (80021e0 <ILI9XXX_Init+0x78>)
 800219c:	f7ff ffcd 	bl	800213a <Displ_WriteData>
#endif
	Displ_WriteCommand(ILI9XXX_RGB_INTERFACE);
 80021a0:	20b0      	movs	r0, #176	@ 0xb0
 80021a2:	f7ff ffbb 	bl	800211c <Displ_WriteCommand>
	Displ_WriteData((uint8_t *)"\x80",1,0);        // disable MISO pin
 80021a6:	2200      	movs	r2, #0
 80021a8:	2101      	movs	r1, #1
 80021aa:	480e      	ldr	r0, [pc, #56]	@ (80021e4 <ILI9XXX_Init+0x7c>)
 80021ac:	f7ff ffc5 	bl	800213a <Displ_WriteData>

	Displ_WriteCommand(ILI9XXX_RGB_INTERFACE);
 80021b0:	20b0      	movs	r0, #176	@ 0xb0
 80021b2:	f7ff ffb3 	bl	800211c <Displ_WriteCommand>
	Displ_WriteData((uint8_t *)"\x80",1,0);        // disable MISO pin
 80021b6:	2200      	movs	r2, #0
 80021b8:	2101      	movs	r1, #1
 80021ba:	480a      	ldr	r0, [pc, #40]	@ (80021e4 <ILI9XXX_Init+0x7c>)
 80021bc:	f7ff ffbd 	bl	800213a <Displ_WriteData>

	Displ_WriteCommand(ILI9XXX_SLEEP_OUT);
 80021c0:	2011      	movs	r0, #17
 80021c2:	f7ff ffab 	bl	800211c <Displ_WriteCommand>
	HAL_Delay(120);
 80021c6:	2078      	movs	r0, #120	@ 0x78
 80021c8:	f000 fc44 	bl	8002a54 <HAL_Delay>

	Displ_WriteCommand(ILI9XXX_DISPLAY_ON);
 80021cc:	2029      	movs	r0, #41	@ 0x29
 80021ce:	f7ff ffa5 	bl	800211c <Displ_WriteCommand>
	HAL_Delay(5);
 80021d2:	2005      	movs	r0, #5
 80021d4:	f000 fc3e 	bl	8002a54 <HAL_Delay>

}
 80021d8:	bf00      	nop
 80021da:	bd80      	pop	{r7, pc}
 80021dc:	40020400 	.word	0x40020400
 80021e0:	08026c48 	.word	0x08026c48
 80021e4:	08026c4c 	.word	0x08026c4c

080021e8 <Displ_SetAddressWindow>:
 * 			information
 * @param  x1,y1,x2,y2 top left and bottom
 * 					   right corner of the area
 * 					   to write
 **********************************************/
void Displ_SetAddressWindow(uint16_t x1, uint16_t y1, uint16_t x2, uint16_t y2) {
 80021e8:	b590      	push	{r4, r7, lr}
 80021ea:	b083      	sub	sp, #12
 80021ec:	af00      	add	r7, sp, #0
 80021ee:	4604      	mov	r4, r0
 80021f0:	4608      	mov	r0, r1
 80021f2:	4611      	mov	r1, r2
 80021f4:	461a      	mov	r2, r3
 80021f6:	4623      	mov	r3, r4
 80021f8:	80fb      	strh	r3, [r7, #6]
 80021fa:	4603      	mov	r3, r0
 80021fc:	80bb      	strh	r3, [r7, #4]
 80021fe:	460b      	mov	r3, r1
 8002200:	807b      	strh	r3, [r7, #2]
 8002202:	4613      	mov	r3, r2
 8002204:	803b      	strh	r3, [r7, #0]
	static uint8_t data[4];

	((uint32_t *)data)[0]=(((x2 & 0xFF)<<24) | ((x2 & 0xFF00)<<8) | ((x1 & 0xFF)<<8) | ((x1 & 0xFF00)>>8) );
 8002206:	887b      	ldrh	r3, [r7, #2]
 8002208:	061a      	lsls	r2, r3, #24
 800220a:	887b      	ldrh	r3, [r7, #2]
 800220c:	021b      	lsls	r3, r3, #8
 800220e:	f403 037f 	and.w	r3, r3, #16711680	@ 0xff0000
 8002212:	431a      	orrs	r2, r3
 8002214:	88fb      	ldrh	r3, [r7, #6]
 8002216:	021b      	lsls	r3, r3, #8
 8002218:	b29b      	uxth	r3, r3
 800221a:	4313      	orrs	r3, r2
 800221c:	88fa      	ldrh	r2, [r7, #6]
 800221e:	0a12      	lsrs	r2, r2, #8
 8002220:	b292      	uxth	r2, r2
 8002222:	431a      	orrs	r2, r3
 8002224:	4b14      	ldr	r3, [pc, #80]	@ (8002278 <Displ_SetAddressWindow+0x90>)
 8002226:	601a      	str	r2, [r3, #0]
	Displ_WriteCommand(ILI9XXX_COLUMN_ADDR);
 8002228:	202a      	movs	r0, #42	@ 0x2a
 800222a:	f7ff ff77 	bl	800211c <Displ_WriteCommand>
	Displ_WriteData(data, 4,0);
 800222e:	2200      	movs	r2, #0
 8002230:	2104      	movs	r1, #4
 8002232:	4811      	ldr	r0, [pc, #68]	@ (8002278 <Displ_SetAddressWindow+0x90>)
 8002234:	f7ff ff81 	bl	800213a <Displ_WriteData>

	((uint32_t *)data)[0]=(((y2 & 0xFF)<<24) | ((y2 & 0xFF00)<<8) | ((y1 & 0xFF)<<8) | ((y1 & 0xFF00)>>8) );
 8002238:	883b      	ldrh	r3, [r7, #0]
 800223a:	061a      	lsls	r2, r3, #24
 800223c:	883b      	ldrh	r3, [r7, #0]
 800223e:	021b      	lsls	r3, r3, #8
 8002240:	f403 037f 	and.w	r3, r3, #16711680	@ 0xff0000
 8002244:	431a      	orrs	r2, r3
 8002246:	88bb      	ldrh	r3, [r7, #4]
 8002248:	021b      	lsls	r3, r3, #8
 800224a:	b29b      	uxth	r3, r3
 800224c:	4313      	orrs	r3, r2
 800224e:	88ba      	ldrh	r2, [r7, #4]
 8002250:	0a12      	lsrs	r2, r2, #8
 8002252:	b292      	uxth	r2, r2
 8002254:	431a      	orrs	r2, r3
 8002256:	4b08      	ldr	r3, [pc, #32]	@ (8002278 <Displ_SetAddressWindow+0x90>)
 8002258:	601a      	str	r2, [r3, #0]
	Displ_WriteCommand(ILI9XXX_PAGE_ADDR);
 800225a:	202b      	movs	r0, #43	@ 0x2b
 800225c:	f7ff ff5e 	bl	800211c <Displ_WriteCommand>
	Displ_WriteData(data, 4,0);
 8002260:	2200      	movs	r2, #0
 8002262:	2104      	movs	r1, #4
 8002264:	4804      	ldr	r0, [pc, #16]	@ (8002278 <Displ_SetAddressWindow+0x90>)
 8002266:	f7ff ff68 	bl	800213a <Displ_WriteData>
	Displ_WriteCommand(ILI9XXX_MEMWR);
 800226a:	202c      	movs	r0, #44	@ 0x2c
 800226c:	f7ff ff56 	bl	800211c <Displ_WriteCommand>
}
 8002270:	bf00      	nop
 8002272:	370c      	adds	r7, #12
 8002274:	46bd      	mov	sp, r7
 8002276:	bd90      	pop	{r4, r7, pc}
 8002278:	20000644 	.word	0x20000644

0800227c <Displ_Init>:

/*****************************************************
 * @brief				first display initialization.
 * @param	orientation	display orientation
 *****************************************************/
void Displ_Init(Displ_Orientat_e orientation){
 800227c:	b580      	push	{r7, lr}
 800227e:	b082      	sub	sp, #8
 8002280:	af00      	add	r7, sp, #0
 8002282:	4603      	mov	r3, r0
 8002284:	71fb      	strb	r3, [r7, #7]
	if (TOUCH_SPI==DISPL_SPI){													// if touch and display share the same SPI port
		HAL_GPIO_WritePin(DISPL_CS_GPIO_Port, DISPL_CS_Pin, GPIO_PIN_SET); 		// unselect display (will be selected at writing time)
 8002286:	2201      	movs	r2, #1
 8002288:	2180      	movs	r1, #128	@ 0x80
 800228a:	4809      	ldr	r0, [pc, #36]	@ (80022b0 <Displ_Init+0x34>)
 800228c:	f001 fef2 	bl	8004074 <HAL_GPIO_WritePin>
		HAL_GPIO_WritePin(TOUCH_CS_GPIO_Port, TOUCH_CS_Pin, GPIO_PIN_SET);		// unselect touch (will be selected at writing time)
 8002290:	2201      	movs	r2, #1
 8002292:	f44f 7100 	mov.w	r1, #512	@ 0x200
 8002296:	4807      	ldr	r0, [pc, #28]	@ (80022b4 <Displ_Init+0x38>)
 8002298:	f001 feec 	bl	8004074 <HAL_GPIO_WritePin>
		HAL_GPIO_WritePin(DISPL_CS_GPIO_Port, DISPL_CS_Pin, GPIO_PIN_RESET); 	// select display
		SET_DISPL_SPI_BAUDRATE;
		HAL_GPIO_WritePin(TOUCH_CS_GPIO_Port, TOUCH_CS_Pin, GPIO_PIN_RESET);	// select touch
		SET_TOUCH_SPI_BAUDRATE;
	}
	ILI9XXX_Init();
 800229c:	f7ff ff64 	bl	8002168 <ILI9XXX_Init>
	Displ_Orientation(orientation);
 80022a0:	79fb      	ldrb	r3, [r7, #7]
 80022a2:	4618      	mov	r0, r3
 80022a4:	f000 f808 	bl	80022b8 <Displ_Orientation>
}
 80022a8:	bf00      	nop
 80022aa:	3708      	adds	r7, #8
 80022ac:	46bd      	mov	sp, r7
 80022ae:	bd80      	pop	{r7, pc}
 80022b0:	40020800 	.word	0x40020800
 80022b4:	40020000 	.word	0x40020000

080022b8 <Displ_Orientation>:

/**********************************************
 * @brief		set orientation of the display
 * @param  	m	orientation
 **********************************************/
void Displ_Orientation(Displ_Orientat_e orientation){
 80022b8:	b580      	push	{r7, lr}
 80022ba:	b082      	sub	sp, #8
 80022bc:	af00      	add	r7, sp, #0
 80022be:	4603      	mov	r3, r0
 80022c0:	71fb      	strb	r3, [r7, #7]
	static uint8_t data[1];
	switch(orientation) {
 80022c2:	79fb      	ldrb	r3, [r7, #7]
 80022c4:	2b03      	cmp	r3, #3
 80022c6:	d83b      	bhi.n	8002340 <Displ_Orientation+0x88>
 80022c8:	a201      	add	r2, pc, #4	@ (adr r2, 80022d0 <Displ_Orientation+0x18>)
 80022ca:	f852 f023 	ldr.w	pc, [r2, r3, lsl #2]
 80022ce:	bf00      	nop
 80022d0:	080022e1 	.word	0x080022e1
 80022d4:	080022f9 	.word	0x080022f9
 80022d8:	08002311 	.word	0x08002311
 80022dc:	08002329 	.word	0x08002329
		case Displ_Orientat_0:
			data[0]=ILI9XXX_MADCTL_0DEG;
 80022e0:	4b1f      	ldr	r3, [pc, #124]	@ (8002360 <Displ_Orientation+0xa8>)
 80022e2:	2288      	movs	r2, #136	@ 0x88
 80022e4:	701a      	strb	r2, [r3, #0]
			_height = DISPL_HEIGHT;
 80022e6:	4b1f      	ldr	r3, [pc, #124]	@ (8002364 <Displ_Orientation+0xac>)
 80022e8:	f44f 72f0 	mov.w	r2, #480	@ 0x1e0
 80022ec:	801a      	strh	r2, [r3, #0]
			_width = DISPL_WIDTH;
 80022ee:	4b1e      	ldr	r3, [pc, #120]	@ (8002368 <Displ_Orientation+0xb0>)
 80022f0:	f44f 72a0 	mov.w	r2, #320	@ 0x140
 80022f4:	801a      	strh	r2, [r3, #0]
			break;
 80022f6:	e023      	b.n	8002340 <Displ_Orientation+0x88>
		case Displ_Orientat_90:
			data[0]=ILI9XXX_MADCTL_90DEG;
 80022f8:	4b19      	ldr	r3, [pc, #100]	@ (8002360 <Displ_Orientation+0xa8>)
 80022fa:	22e8      	movs	r2, #232	@ 0xe8
 80022fc:	701a      	strb	r2, [r3, #0]
			_height = DISPL_WIDTH;
 80022fe:	4b19      	ldr	r3, [pc, #100]	@ (8002364 <Displ_Orientation+0xac>)
 8002300:	f44f 72a0 	mov.w	r2, #320	@ 0x140
 8002304:	801a      	strh	r2, [r3, #0]
			_width = DISPL_HEIGHT;
 8002306:	4b18      	ldr	r3, [pc, #96]	@ (8002368 <Displ_Orientation+0xb0>)
 8002308:	f44f 72f0 	mov.w	r2, #480	@ 0x1e0
 800230c:	801a      	strh	r2, [r3, #0]
			break;
 800230e:	e017      	b.n	8002340 <Displ_Orientation+0x88>
		case Displ_Orientat_180:
			data[0]=ILI9XXX_MADCTL_180DEG;
 8002310:	4b13      	ldr	r3, [pc, #76]	@ (8002360 <Displ_Orientation+0xa8>)
 8002312:	2248      	movs	r2, #72	@ 0x48
 8002314:	701a      	strb	r2, [r3, #0]
			_height = DISPL_HEIGHT;
 8002316:	4b13      	ldr	r3, [pc, #76]	@ (8002364 <Displ_Orientation+0xac>)
 8002318:	f44f 72f0 	mov.w	r2, #480	@ 0x1e0
 800231c:	801a      	strh	r2, [r3, #0]
			_width = DISPL_WIDTH;
 800231e:	4b12      	ldr	r3, [pc, #72]	@ (8002368 <Displ_Orientation+0xb0>)
 8002320:	f44f 72a0 	mov.w	r2, #320	@ 0x140
 8002324:	801a      	strh	r2, [r3, #0]
			break;
 8002326:	e00b      	b.n	8002340 <Displ_Orientation+0x88>
		case Displ_Orientat_270:
			data[0]=ILI9XXX_MADCTL_270DEG;
 8002328:	4b0d      	ldr	r3, [pc, #52]	@ (8002360 <Displ_Orientation+0xa8>)
 800232a:	2228      	movs	r2, #40	@ 0x28
 800232c:	701a      	strb	r2, [r3, #0]
			_height = DISPL_WIDTH;
 800232e:	4b0d      	ldr	r3, [pc, #52]	@ (8002364 <Displ_Orientation+0xac>)
 8002330:	f44f 72a0 	mov.w	r2, #320	@ 0x140
 8002334:	801a      	strh	r2, [r3, #0]
			_width = DISPL_HEIGHT;
 8002336:	4b0c      	ldr	r3, [pc, #48]	@ (8002368 <Displ_Orientation+0xb0>)
 8002338:	f44f 72f0 	mov.w	r2, #480	@ 0x1e0
 800233c:	801a      	strh	r2, [r3, #0]
			break;
 800233e:	bf00      	nop
	}
	Displ_WriteCommand(ILI9XXX_MADCTL);
 8002340:	2036      	movs	r0, #54	@ 0x36
 8002342:	f7ff feeb 	bl	800211c <Displ_WriteCommand>
	Displ_WriteData(data,1,0);
 8002346:	2200      	movs	r2, #0
 8002348:	2101      	movs	r1, #1
 800234a:	4805      	ldr	r0, [pc, #20]	@ (8002360 <Displ_Orientation+0xa8>)
 800234c:	f7ff fef5 	bl	800213a <Displ_WriteData>
	current_orientation = orientation;  //stores active orientation into a global variable for touch routines
 8002350:	4a06      	ldr	r2, [pc, #24]	@ (800236c <Displ_Orientation+0xb4>)
 8002352:	79fb      	ldrb	r3, [r7, #7]
 8002354:	7013      	strb	r3, [r2, #0]
}
 8002356:	bf00      	nop
 8002358:	3708      	adds	r7, #8
 800235a:	46bd      	mov	sp, r7
 800235c:	bd80      	pop	{r7, pc}
 800235e:	bf00      	nop
 8002360:	20000648 	.word	0x20000648
 8002364:	20000640 	.word	0x20000640
 8002368:	2000063e 	.word	0x2000063e
 800236c:	2000063c 	.word	0x2000063c

08002370 <HAL_SPI_ErrorCallback>:




void HAL_SPI_ErrorCallback(SPI_HandleTypeDef *hspi){
 8002370:	b480      	push	{r7}
 8002372:	b083      	sub	sp, #12
 8002374:	af00      	add	r7, sp, #0
 8002376:	6078      	str	r0, [r7, #4]
	if (hspi->Instance==DISPL_SPI) {
 8002378:	687b      	ldr	r3, [r7, #4]
 800237a:	681b      	ldr	r3, [r3, #0]
 800237c:	4a05      	ldr	r2, [pc, #20]	@ (8002394 <HAL_SPI_ErrorCallback+0x24>)
 800237e:	4293      	cmp	r3, r2
 8002380:	d102      	bne.n	8002388 <HAL_SPI_ErrorCallback+0x18>
		Displ_SpiAvailable=1;
 8002382:	4b05      	ldr	r3, [pc, #20]	@ (8002398 <HAL_SPI_ErrorCallback+0x28>)
 8002384:	2201      	movs	r2, #1
 8002386:	701a      	strb	r2, [r3, #0]
	}
}
 8002388:	bf00      	nop
 800238a:	370c      	adds	r7, #12
 800238c:	46bd      	mov	sp, r7
 800238e:	f85d 7b04 	ldr.w	r7, [sp], #4
 8002392:	4770      	bx	lr
 8002394:	40003800 	.word	0x40003800
 8002398:	20000018 	.word	0x20000018

0800239c <HAL_SPI_TxCpltCallback>:





void HAL_SPI_TxCpltCallback(SPI_HandleTypeDef *hspi) {
 800239c:	b580      	push	{r7, lr}
 800239e:	b082      	sub	sp, #8
 80023a0:	af00      	add	r7, sp, #0
 80023a2:	6078      	str	r0, [r7, #4]
	if (hspi->Instance==DISPL_SPI) {
 80023a4:	687b      	ldr	r3, [r7, #4]
 80023a6:	681b      	ldr	r3, [r3, #0]
 80023a8:	4a05      	ldr	r2, [pc, #20]	@ (80023c0 <HAL_SPI_TxCpltCallback+0x24>)
 80023aa:	4293      	cmp	r3, r2
 80023ac:	d104      	bne.n	80023b8 <HAL_SPI_TxCpltCallback+0x1c>
		Displ_SpiAvailable=1;
 80023ae:	4b05      	ldr	r3, [pc, #20]	@ (80023c4 <HAL_SPI_TxCpltCallback+0x28>)
 80023b0:	2201      	movs	r2, #1
 80023b2:	701a      	strb	r2, [r3, #0]

	#ifdef DISPLAY_USING_TOUCHGFX
		DisplayDriver_TransferCompleteCallback();
 80023b4:	f00d fe78 	bl	80100a8 <DisplayDriver_TransferCompleteCallback>
	#endif

	}
}
 80023b8:	bf00      	nop
 80023ba:	3708      	adds	r7, #8
 80023bc:	46bd      	mov	sp, r7
 80023be:	bd80      	pop	{r7, pc}
 80023c0:	40003800 	.word	0x40003800
 80023c4:	20000018 	.word	0x20000018

080023c8 <Displ_BackLight>:
 *				'0'		set the display level to 0 (off)
 *				'I'		'Initialize'  IT MUST BE in dimming mode
 *              'Q'		do nothing, just return current level
 * @return		current backlight level
 **************************************/
uint32_t  Displ_BackLight(uint8_t cmd) {
 80023c8:	b580      	push	{r7, lr}
 80023ca:	b082      	sub	sp, #8
 80023cc:	af00      	add	r7, sp, #0
 80023ce:	4603      	mov	r3, r0
 80023d0:	71fb      	strb	r3, [r7, #7]

#ifdef DISPLAY_DIMMING_MODE
	static uint16_t memCCR1=0;  			//it stores CCR1 value while in stand-by
#endif

	switch (cmd) {
 80023d2:	79fb      	ldrb	r3, [r7, #7]
 80023d4:	2b51      	cmp	r3, #81	@ 0x51
 80023d6:	d00a      	beq.n	80023ee <Displ_BackLight+0x26>
 80023d8:	2b51      	cmp	r3, #81	@ 0x51
 80023da:	dc16      	bgt.n	800240a <Displ_BackLight+0x42>
 80023dc:	2b46      	cmp	r3, #70	@ 0x46
 80023de:	d008      	beq.n	80023f2 <Displ_BackLight+0x2a>
 80023e0:	2b46      	cmp	r3, #70	@ 0x46
 80023e2:	dc12      	bgt.n	800240a <Displ_BackLight+0x42>
 80023e4:	2b30      	cmp	r3, #48	@ 0x30
 80023e6:	d00a      	beq.n	80023fe <Displ_BackLight+0x36>
 80023e8:	2b31      	cmp	r3, #49	@ 0x31
 80023ea:	d002      	beq.n	80023f2 <Displ_BackLight+0x2a>
	  	HAL_TIM_PWM_Start(&BKLIT_T, BKLIT_CHANNEL);
		BKLIT_TIMER->BKLIT_CCR=BKLIT_INIT_LEVEL;
		break;
#endif
	default:
		break;
 80023ec:	e00d      	b.n	800240a <Displ_BackLight+0x42>
		__NOP();
 80023ee:	bf00      	nop
		break;
 80023f0:	e00c      	b.n	800240c <Displ_BackLight+0x44>
		HAL_GPIO_WritePin(DISPL_LED_GPIO_Port, DISPL_LED_Pin, GPIO_PIN_SET);
 80023f2:	2201      	movs	r2, #1
 80023f4:	2140      	movs	r1, #64	@ 0x40
 80023f6:	480a      	ldr	r0, [pc, #40]	@ (8002420 <Displ_BackLight+0x58>)
 80023f8:	f001 fe3c 	bl	8004074 <HAL_GPIO_WritePin>
		break;
 80023fc:	e006      	b.n	800240c <Displ_BackLight+0x44>
		HAL_GPIO_WritePin(DISPL_LED_GPIO_Port, DISPL_LED_Pin, GPIO_PIN_RESET);
 80023fe:	2200      	movs	r2, #0
 8002400:	2140      	movs	r1, #64	@ 0x40
 8002402:	4807      	ldr	r0, [pc, #28]	@ (8002420 <Displ_BackLight+0x58>)
 8002404:	f001 fe36 	bl	8004074 <HAL_GPIO_WritePin>
		break;
 8002408:	e000      	b.n	800240c <Displ_BackLight+0x44>
		break;
 800240a:	bf00      	nop
	}
#ifndef DISPLAY_DIMMING_MODE
	return HAL_GPIO_ReadPin(DISPL_LED_GPIO_Port, DISPL_LED_Pin);
 800240c:	2140      	movs	r1, #64	@ 0x40
 800240e:	4804      	ldr	r0, [pc, #16]	@ (8002420 <Displ_BackLight+0x58>)
 8002410:	f001 fe18 	bl	8004044 <HAL_GPIO_ReadPin>
 8002414:	4603      	mov	r3, r0
#else
	return (BKLIT_TIMER->BKLIT_CCR);
#endif
}
 8002416:	4618      	mov	r0, r3
 8002418:	3708      	adds	r7, #8
 800241a:	46bd      	mov	sp, r7
 800241c:	bd80      	pop	{r7, pc}
 800241e:	bf00      	nop
 8002420:	40020000 	.word	0x40020000

08002424 <touchgfxDisplayDriverTransmitActive>:
 * @brief	TouchGFX integration: returns status of
 * 			communication to the display
 * @return	1 = there is a transmission running
 * 			0 = no transmission
 *********************************************************/
int touchgfxDisplayDriverTransmitActive(){
 8002424:	b480      	push	{r7}
 8002426:	af00      	add	r7, sp, #0
	// using the flag indicating SPI port availability
	// already used to drive communication via DMA
	return (!Displ_SpiAvailable);
 8002428:	4b06      	ldr	r3, [pc, #24]	@ (8002444 <touchgfxDisplayDriverTransmitActive+0x20>)
 800242a:	781b      	ldrb	r3, [r3, #0]
 800242c:	b2db      	uxtb	r3, r3
 800242e:	2b00      	cmp	r3, #0
 8002430:	bf0c      	ite	eq
 8002432:	2301      	moveq	r3, #1
 8002434:	2300      	movne	r3, #0
 8002436:	b2db      	uxtb	r3, r3
}
 8002438:	4618      	mov	r0, r3
 800243a:	46bd      	mov	sp, r7
 800243c:	f85d 7b04 	ldr.w	r7, [sp], #4
 8002440:	4770      	bx	lr
 8002442:	bf00      	nop
 8002444:	20000018 	.word	0x20000018

08002448 <touchgfxDisplayDriverTransmitBlock>:

/*********************************************************
 * @brief	TouchGFX integration: write to display the
 * 			block indicated by parameters
 *********************************************************/
void touchgfxDisplayDriverTransmitBlock(const uint8_t* pixels, uint16_t x, uint16_t y, uint16_t w, uint16_t h){
 8002448:	b590      	push	{r4, r7, lr}
 800244a:	b085      	sub	sp, #20
 800244c:	af00      	add	r7, sp, #0
 800244e:	60f8      	str	r0, [r7, #12]
 8002450:	4608      	mov	r0, r1
 8002452:	4611      	mov	r1, r2
 8002454:	461a      	mov	r2, r3
 8002456:	4603      	mov	r3, r0
 8002458:	817b      	strh	r3, [r7, #10]
 800245a:	460b      	mov	r3, r1
 800245c:	813b      	strh	r3, [r7, #8]
 800245e:	4613      	mov	r3, r2
 8002460:	80fb      	strh	r3, [r7, #6]
	//START WRITING TO DISPLAY
		Displ_SetAddressWindow(x, y, x+w-1, y+h-1);
 8002462:	897a      	ldrh	r2, [r7, #10]
 8002464:	88fb      	ldrh	r3, [r7, #6]
 8002466:	4413      	add	r3, r2
 8002468:	b29b      	uxth	r3, r3
 800246a:	3b01      	subs	r3, #1
 800246c:	b29c      	uxth	r4, r3
 800246e:	893a      	ldrh	r2, [r7, #8]
 8002470:	8c3b      	ldrh	r3, [r7, #32]
 8002472:	4413      	add	r3, r2
 8002474:	b29b      	uxth	r3, r3
 8002476:	3b01      	subs	r3, #1
 8002478:	b29b      	uxth	r3, r3
 800247a:	8939      	ldrh	r1, [r7, #8]
 800247c:	8978      	ldrh	r0, [r7, #10]
 800247e:	4622      	mov	r2, r4
 8002480:	f7ff feb2 	bl	80021e8 <Displ_SetAddressWindow>
		Displ_WriteData((uint8_t* )pixels,((w*h)<<1),1);
 8002484:	88fb      	ldrh	r3, [r7, #6]
 8002486:	8c3a      	ldrh	r2, [r7, #32]
 8002488:	fb02 f303 	mul.w	r3, r2, r3
 800248c:	005b      	lsls	r3, r3, #1
 800248e:	2201      	movs	r2, #1
 8002490:	4619      	mov	r1, r3
 8002492:	68f8      	ldr	r0, [r7, #12]
 8002494:	f7ff fe51 	bl	800213a <Displ_WriteData>
}
 8002498:	bf00      	nop
 800249a:	3714      	adds	r7, #20
 800249c:	46bd      	mov	sp, r7
 800249e:	bd90      	pop	{r4, r7, pc}

080024a0 <Touch_HandlePenDownInterrupt>:
volatile uint8_t Touch_PenDown=0;						// set to 1 by pendown interrupt callback, reset to 0 by sw
volatile uint8_t Touch_Int_Enabled=1;					// while reading touch sensor touch interrupt handling is disabled through this flag



void Touch_HandlePenDownInterrupt (){
 80024a0:	b480      	push	{r7}
 80024a2:	af00      	add	r7, sp, #0
	if (Touch_Int_Enabled) {
 80024a4:	4b06      	ldr	r3, [pc, #24]	@ (80024c0 <Touch_HandlePenDownInterrupt+0x20>)
 80024a6:	781b      	ldrb	r3, [r3, #0]
 80024a8:	b2db      	uxtb	r3, r3
 80024aa:	2b00      	cmp	r3, #0
 80024ac:	d002      	beq.n	80024b4 <Touch_HandlePenDownInterrupt+0x14>
		Touch_PenDown=1;
 80024ae:	4b05      	ldr	r3, [pc, #20]	@ (80024c4 <Touch_HandlePenDownInterrupt+0x24>)
 80024b0:	2201      	movs	r2, #1
 80024b2:	701a      	strb	r2, [r3, #0]
	}
}
 80024b4:	bf00      	nop
 80024b6:	46bd      	mov	sp, r7
 80024b8:	f85d 7b04 	ldr.w	r7, [sp], #4
 80024bc:	4770      	bx	lr
 80024be:	bf00      	nop
 80024c0:	20000019 	.word	0x20000019
 80024c4:	20000649 	.word	0x20000649

080024c8 <HAL_GPIO_EXTI_Callback>:



void HAL_GPIO_EXTI_Callback(uint16_t GPIO_Pin){
 80024c8:	b580      	push	{r7, lr}
 80024ca:	b082      	sub	sp, #8
 80024cc:	af00      	add	r7, sp, #0
 80024ce:	4603      	mov	r3, r0
 80024d0:	80fb      	strh	r3, [r7, #6]
	if (GPIO_Pin==TOUCH_INT_Pin){
 80024d2:	88fb      	ldrh	r3, [r7, #6]
 80024d4:	f5b3 7f80 	cmp.w	r3, #256	@ 0x100
 80024d8:	d101      	bne.n	80024de <HAL_GPIO_EXTI_Callback+0x16>
		Touch_HandlePenDownInterrupt();
 80024da:	f7ff ffe1 	bl	80024a0 <Touch_HandlePenDownInterrupt>
	}
}
 80024de:	bf00      	nop
 80024e0:	3708      	adds	r7, #8
 80024e2:	46bd      	mov	sp, r7
 80024e4:	bd80      	pop	{r7, pc}
	...

080024e8 <Touch_Select>:

/******************************************
 * @brief	enable touch, disabling display
 * 			set SPI baudrate as needed
 ******************************************/
void Touch_Select(void) {
 80024e8:	b580      	push	{r7, lr}
 80024ea:	af00      	add	r7, sp, #0
	if (TOUCH_SPI==DISPL_SPI){														// if touch and display share the same SPI port
		if (!HAL_GPIO_ReadPin(DISPL_CS_GPIO_Port, DISPL_CS_Pin)) {					// if display selected
 80024ec:	2180      	movs	r1, #128	@ 0x80
 80024ee:	4813      	ldr	r0, [pc, #76]	@ (800253c <Touch_Select+0x54>)
 80024f0:	f001 fda8 	bl	8004044 <HAL_GPIO_ReadPin>
 80024f4:	4603      	mov	r3, r0
 80024f6:	2b00      	cmp	r3, #0
 80024f8:	d10a      	bne.n	8002510 <Touch_Select+0x28>
			while (!Displ_SpiAvailable) {};  										// waiting for completing display communication. Flag is set to 1 by transmission-complete interrupt callback
 80024fa:	bf00      	nop
 80024fc:	4b10      	ldr	r3, [pc, #64]	@ (8002540 <Touch_Select+0x58>)
 80024fe:	781b      	ldrb	r3, [r3, #0]
 8002500:	b2db      	uxtb	r3, r3
 8002502:	2b00      	cmp	r3, #0
 8002504:	d0fa      	beq.n	80024fc <Touch_Select+0x14>
			HAL_GPIO_WritePin(DISPL_CS_GPIO_Port, DISPL_CS_Pin, GPIO_PIN_SET); 		// unselect display
 8002506:	2201      	movs	r2, #1
 8002508:	2180      	movs	r1, #128	@ 0x80
 800250a:	480c      	ldr	r0, [pc, #48]	@ (800253c <Touch_Select+0x54>)
 800250c:	f001 fdb2 	bl	8004074 <HAL_GPIO_WritePin>
		}
		SET_TOUCH_SPI_BAUDRATE;				   										//change SPI port speed as per display needs
 8002510:	4b0c      	ldr	r3, [pc, #48]	@ (8002544 <Touch_Select+0x5c>)
 8002512:	681a      	ldr	r2, [r3, #0]
 8002514:	490b      	ldr	r1, [pc, #44]	@ (8002544 <Touch_Select+0x5c>)
 8002516:	f64f 73c7 	movw	r3, #65479	@ 0xffc7
 800251a:	4013      	ands	r3, r2
 800251c:	600b      	str	r3, [r1, #0]
 800251e:	4b09      	ldr	r3, [pc, #36]	@ (8002544 <Touch_Select+0x5c>)
 8002520:	681b      	ldr	r3, [r3, #0]
 8002522:	4a08      	ldr	r2, [pc, #32]	@ (8002544 <Touch_Select+0x5c>)
 8002524:	f043 0338 	orr.w	r3, r3, #56	@ 0x38
 8002528:	6013      	str	r3, [r2, #0]
		HAL_GPIO_WritePin(TOUCH_CS_GPIO_Port, TOUCH_CS_Pin, GPIO_PIN_RESET);
 800252a:	2200      	movs	r2, #0
 800252c:	f44f 7100 	mov.w	r1, #512	@ 0x200
 8002530:	4805      	ldr	r0, [pc, #20]	@ (8002548 <Touch_Select+0x60>)
 8002532:	f001 fd9f 	bl	8004074 <HAL_GPIO_WritePin>
	}
}
 8002536:	bf00      	nop
 8002538:	bd80      	pop	{r7, pc}
 800253a:	bf00      	nop
 800253c:	40020800 	.word	0x40020800
 8002540:	20000018 	.word	0x20000018
 8002544:	40003800 	.word	0x40003800
 8002548:	40020000 	.word	0x40020000

0800254c <Touch_UnSelect>:


/******************************************
 * @brief	disable touch
 ******************************************/
void Touch_UnSelect(void) {
 800254c:	b580      	push	{r7, lr}
 800254e:	af00      	add	r7, sp, #0
	if (TOUCH_SPI==DISPL_SPI){														// if touch and display share the same SPI port
		HAL_GPIO_WritePin(TOUCH_CS_GPIO_Port, TOUCH_CS_Pin, GPIO_PIN_SET);			// unselect touch
 8002550:	2201      	movs	r2, #1
 8002552:	f44f 7100 	mov.w	r1, #512	@ 0x200
 8002556:	4802      	ldr	r0, [pc, #8]	@ (8002560 <Touch_UnSelect+0x14>)
 8002558:	f001 fd8c 	bl	8004074 <HAL_GPIO_WritePin>
	}
}
 800255c:	bf00      	nop
 800255e:	bd80      	pop	{r7, pc}
 8002560:	40020000 	.word	0x40020000

08002564 <Touch_PollAxis>:
 * @params	axis	use only one of the three options X_AXIS, Y_AXIS or Z_AXIS
 * @return			the level measured on the "axis" axis
 * 					PLEASE NOTE this function should be only for internal usage
 * 								Use Touch_GetXYTouch() instead
 *******************************************************************************/
uint16_t Touch_PollAxis(uint8_t axis) {
 8002564:	b580      	push	{r7, lr}
 8002566:	b084      	sub	sp, #16
 8002568:	af00      	add	r7, sp, #0
 800256a:	4603      	mov	r3, r0
 800256c:	71fb      	strb	r3, [r7, #7]
	uint8_t poll[2] = {0,0};
 800256e:	2300      	movs	r3, #0
 8002570:	813b      	strh	r3, [r7, #8]
	uint32_t poll16;
	
	if (TOUCH_SPI==DISPL_SPI){				// if touch and display share the same SPI port
		Touch_Select();						// enable CS on touch device
 8002572:	f7ff ffb9 	bl	80024e8 <Touch_Select>
	}

	Touch_Int_Enabled=0;	//disable interrupt handling: sensor reading triggers interrupt
 8002576:	4b17      	ldr	r3, [pc, #92]	@ (80025d4 <Touch_PollAxis+0x70>)
 8002578:	2200      	movs	r2, #0
 800257a:	701a      	strb	r2, [r3, #0]
	// disable interrupt while enquiring the touch sensor because it triggers the interrupt pin
	HAL_NVIC_DisableIRQ(TOUCH_INT_EXTI_IRQn);
 800257c:	2017      	movs	r0, #23
 800257e:	f000 fff6 	bl	800356e <HAL_NVIC_DisableIRQ>

	HAL_SPI_Transmit(&TOUCH_SPI_PORT, &axis, 1, 10);
 8002582:	1df9      	adds	r1, r7, #7
 8002584:	230a      	movs	r3, #10
 8002586:	2201      	movs	r2, #1
 8002588:	4813      	ldr	r0, [pc, #76]	@ (80025d8 <Touch_PollAxis+0x74>)
 800258a:	f003 fc66 	bl	8005e5a <HAL_SPI_Transmit>
	if (HAL_SPI_Receive(&TOUCH_SPI_PORT, poll, 2, 10) == HAL_OK) {
 800258e:	f107 0108 	add.w	r1, r7, #8
 8002592:	230a      	movs	r3, #10
 8002594:	2202      	movs	r2, #2
 8002596:	4810      	ldr	r0, [pc, #64]	@ (80025d8 <Touch_PollAxis+0x74>)
 8002598:	f003 fda3 	bl	80060e2 <HAL_SPI_Receive>
 800259c:	4603      	mov	r3, r0
 800259e:	2b00      	cmp	r3, #0
 80025a0:	d105      	bne.n	80025ae <Touch_PollAxis+0x4a>
		poll16 = (poll[0]<<8) + poll[1];
 80025a2:	7a3b      	ldrb	r3, [r7, #8]
 80025a4:	021b      	lsls	r3, r3, #8
 80025a6:	7a7a      	ldrb	r2, [r7, #9]
 80025a8:	4413      	add	r3, r2
 80025aa:	60fb      	str	r3, [r7, #12]
 80025ac:	e001      	b.n	80025b2 <Touch_PollAxis+0x4e>
	}
	else {
		poll16 = 0;
 80025ae:	2300      	movs	r3, #0
 80025b0:	60fb      	str	r3, [r7, #12]
	}

//enable back interrupt after reading the sensor
	HAL_NVIC_ClearPendingIRQ(TOUCH_INT_EXTI_IRQn);
 80025b2:	2017      	movs	r0, #23
 80025b4:	f000 fff5 	bl	80035a2 <HAL_NVIC_ClearPendingIRQ>
	HAL_NVIC_EnableIRQ(TOUCH_INT_EXTI_IRQn);
 80025b8:	2017      	movs	r0, #23
 80025ba:	f000 ffca 	bl	8003552 <HAL_NVIC_EnableIRQ>

	Touch_Int_Enabled=1;
 80025be:	4b05      	ldr	r3, [pc, #20]	@ (80025d4 <Touch_PollAxis+0x70>)
 80025c0:	2201      	movs	r2, #1
 80025c2:	701a      	strb	r2, [r3, #0]

	if (TOUCH_SPI==DISPL_SPI){	// if touch and display share the same SPI port
		Touch_UnSelect();
 80025c4:	f7ff ffc2 	bl	800254c <Touch_UnSelect>
	}

	return poll16;
 80025c8:	68fb      	ldr	r3, [r7, #12]
 80025ca:	b29b      	uxth	r3, r3
}
 80025cc:	4618      	mov	r0, r3
 80025ce:	3710      	adds	r7, #16
 80025d0:	46bd      	mov	sp, r7
 80025d2:	bd80      	pop	{r7, pc}
 80025d4:	20000019 	.word	0x20000019
 80025d8:	20000494 	.word	0x20000494

080025dc <Touch_GetXYtouch>:
 * @brief			polls touch screen and returning its XY screen position
 * 					that's regardless touch recording flag (interrupt received)
 * @return	x,y		in case isTouch=1 contain touch coordinates
 * 			isTouch is 1 if detected a touch, otherwise 0;
 *********************************************************************************/
void Touch_GetXYtouch(uint16_t *x, uint16_t *y, uint8_t *isTouch){
 80025dc:	b580      	push	{r7, lr}
 80025de:	b08a      	sub	sp, #40	@ 0x28
 80025e0:	af00      	add	r7, sp, #0
 80025e2:	60f8      	str	r0, [r7, #12]
 80025e4:	60b9      	str	r1, [r7, #8]
 80025e6:	607a      	str	r2, [r7, #4]

const uint8_t pollingLevel=4;
 80025e8:	2304      	movs	r3, #4
 80025ea:	77fb      	strb	r3, [r7, #31]


// get the average value (over "1<<pollingLevel" attempts of X, Y and Z axes readings)

	// reading Z
	touch=0;
 80025ec:	2300      	movs	r3, #0
 80025ee:	623b      	str	r3, [r7, #32]
	for (k=0;k<(1<<pollingLevel);k++)
 80025f0:	2300      	movs	r3, #0
 80025f2:	f887 3027 	strb.w	r3, [r7, #39]	@ 0x27
 80025f6:	e00c      	b.n	8002612 <Touch_GetXYtouch+0x36>
		touch += Touch_PollAxis(Z_AXIS);
 80025f8:	20b0      	movs	r0, #176	@ 0xb0
 80025fa:	f7ff ffb3 	bl	8002564 <Touch_PollAxis>
 80025fe:	4603      	mov	r3, r0
 8002600:	461a      	mov	r2, r3
 8002602:	6a3b      	ldr	r3, [r7, #32]
 8002604:	4413      	add	r3, r2
 8002606:	623b      	str	r3, [r7, #32]
	for (k=0;k<(1<<pollingLevel);k++)
 8002608:	f897 3027 	ldrb.w	r3, [r7, #39]	@ 0x27
 800260c:	3301      	adds	r3, #1
 800260e:	f887 3027 	strb.w	r3, [r7, #39]	@ 0x27
 8002612:	f897 2027 	ldrb.w	r2, [r7, #39]	@ 0x27
 8002616:	7ffb      	ldrb	r3, [r7, #31]
 8002618:	2101      	movs	r1, #1
 800261a:	fa01 f303 	lsl.w	r3, r1, r3
 800261e:	429a      	cmp	r2, r3
 8002620:	dbea      	blt.n	80025f8 <Touch_GetXYtouch+0x1c>
	touch >>= pollingLevel;  //get the average value
 8002622:	7ffb      	ldrb	r3, [r7, #31]
 8002624:	6a3a      	ldr	r2, [r7, #32]
 8002626:	fa22 f303 	lsr.w	r3, r2, r3
 800262a:	623b      	str	r3, [r7, #32]
	if (touch<=Z_THRESHOLD) {
 800262c:	6a3b      	ldr	r3, [r7, #32]
 800262e:	f5b3 6fa0 	cmp.w	r3, #1280	@ 0x500
 8002632:	d806      	bhi.n	8002642 <Touch_GetXYtouch+0x66>
		*isTouch=0;
 8002634:	687b      	ldr	r3, [r7, #4]
 8002636:	2200      	movs	r2, #0
 8002638:	701a      	strb	r2, [r3, #0]
		HAL_NVIC_ClearPendingIRQ(TOUCH_INT_EXTI_IRQn);
 800263a:	2017      	movs	r0, #23
 800263c:	f000 ffb1 	bl	80035a2 <HAL_NVIC_ClearPendingIRQ>
		return;	// no touch: return 0
 8002640:	e0b2      	b.n	80027a8 <Touch_GetXYtouch+0x1cc>
	}

	// reading X
	touch=0;
 8002642:	2300      	movs	r3, #0
 8002644:	623b      	str	r3, [r7, #32]
	for (k=0;k<(1<<pollingLevel);k++)
 8002646:	2300      	movs	r3, #0
 8002648:	f887 3027 	strb.w	r3, [r7, #39]	@ 0x27
 800264c:	e00c      	b.n	8002668 <Touch_GetXYtouch+0x8c>
		touch += Touch_PollAxis(X_AXIS);
 800264e:	20d0      	movs	r0, #208	@ 0xd0
 8002650:	f7ff ff88 	bl	8002564 <Touch_PollAxis>
 8002654:	4603      	mov	r3, r0
 8002656:	461a      	mov	r2, r3
 8002658:	6a3b      	ldr	r3, [r7, #32]
 800265a:	4413      	add	r3, r2
 800265c:	623b      	str	r3, [r7, #32]
	for (k=0;k<(1<<pollingLevel);k++)
 800265e:	f897 3027 	ldrb.w	r3, [r7, #39]	@ 0x27
 8002662:	3301      	adds	r3, #1
 8002664:	f887 3027 	strb.w	r3, [r7, #39]	@ 0x27
 8002668:	f897 2027 	ldrb.w	r2, [r7, #39]	@ 0x27
 800266c:	7ffb      	ldrb	r3, [r7, #31]
 800266e:	2101      	movs	r1, #1
 8002670:	fa01 f303 	lsl.w	r3, r1, r3
 8002674:	429a      	cmp	r2, r3
 8002676:	dbea      	blt.n	800264e <Touch_GetXYtouch+0x72>
	touch >>= pollingLevel;  //get the average value
 8002678:	7ffb      	ldrb	r3, [r7, #31]
 800267a:	6a3a      	ldr	r2, [r7, #32]
 800267c:	fa22 f303 	lsr.w	r3, r2, r3
 8002680:	623b      	str	r3, [r7, #32]
	if (touch<=X_THRESHOLD) {
 8002682:	6a3b      	ldr	r3, [r7, #32]
 8002684:	f5b3 6fa0 	cmp.w	r3, #1280	@ 0x500
 8002688:	d806      	bhi.n	8002698 <Touch_GetXYtouch+0xbc>
		*isTouch=0;
 800268a:	687b      	ldr	r3, [r7, #4]
 800268c:	2200      	movs	r2, #0
 800268e:	701a      	strb	r2, [r3, #0]
		HAL_NVIC_ClearPendingIRQ(TOUCH_INT_EXTI_IRQn);
 8002690:	2017      	movs	r0, #23
 8002692:	f000 ff86 	bl	80035a2 <HAL_NVIC_ClearPendingIRQ>
		return;	// no touch: return 0
 8002696:	e087      	b.n	80027a8 <Touch_GetXYtouch+0x1cc>
	}
	touchx=(AX*touch+BX);
 8002698:	6a3b      	ldr	r3, [r7, #32]
 800269a:	ee07 3a90 	vmov	s15, r3
 800269e:	eef8 7a67 	vcvt.f32.u32	s15, s15
 80026a2:	ed9f 7a43 	vldr	s14, [pc, #268]	@ 80027b0 <Touch_GetXYtouch+0x1d4>
 80026a6:	ee67 7a87 	vmul.f32	s15, s15, s14
 80026aa:	ed9f 7a42 	vldr	s14, [pc, #264]	@ 80027b4 <Touch_GetXYtouch+0x1d8>
 80026ae:	ee77 7a87 	vadd.f32	s15, s15, s14
 80026b2:	eefc 7ae7 	vcvt.u32.f32	s15, s15
 80026b6:	ee17 3a90 	vmov	r3, s15
 80026ba:	61bb      	str	r3, [r7, #24]

	// reading Y - there is no a threshold for Y
	touch=0;
 80026bc:	2300      	movs	r3, #0
 80026be:	623b      	str	r3, [r7, #32]
	for (k=0;k<(1<<pollingLevel);k++)
 80026c0:	2300      	movs	r3, #0
 80026c2:	f887 3027 	strb.w	r3, [r7, #39]	@ 0x27
 80026c6:	e00c      	b.n	80026e2 <Touch_GetXYtouch+0x106>
		touch += Touch_PollAxis(Y_AXIS);
 80026c8:	2090      	movs	r0, #144	@ 0x90
 80026ca:	f7ff ff4b 	bl	8002564 <Touch_PollAxis>
 80026ce:	4603      	mov	r3, r0
 80026d0:	461a      	mov	r2, r3
 80026d2:	6a3b      	ldr	r3, [r7, #32]
 80026d4:	4413      	add	r3, r2
 80026d6:	623b      	str	r3, [r7, #32]
	for (k=0;k<(1<<pollingLevel);k++)
 80026d8:	f897 3027 	ldrb.w	r3, [r7, #39]	@ 0x27
 80026dc:	3301      	adds	r3, #1
 80026de:	f887 3027 	strb.w	r3, [r7, #39]	@ 0x27
 80026e2:	f897 2027 	ldrb.w	r2, [r7, #39]	@ 0x27
 80026e6:	7ffb      	ldrb	r3, [r7, #31]
 80026e8:	2101      	movs	r1, #1
 80026ea:	fa01 f303 	lsl.w	r3, r1, r3
 80026ee:	429a      	cmp	r2, r3
 80026f0:	dbea      	blt.n	80026c8 <Touch_GetXYtouch+0xec>
	touch >>= pollingLevel; //get the average value
 80026f2:	7ffb      	ldrb	r3, [r7, #31]
 80026f4:	6a3a      	ldr	r2, [r7, #32]
 80026f6:	fa22 f303 	lsr.w	r3, r2, r3
 80026fa:	623b      	str	r3, [r7, #32]

	touchy=(AY*touch+BY);
 80026fc:	6a3b      	ldr	r3, [r7, #32]
 80026fe:	ee07 3a90 	vmov	s15, r3
 8002702:	eef8 7a67 	vcvt.f32.u32	s15, s15
 8002706:	ed9f 7a2c 	vldr	s14, [pc, #176]	@ 80027b8 <Touch_GetXYtouch+0x1dc>
 800270a:	ee67 7a87 	vmul.f32	s15, s15, s14
 800270e:	ed9f 7a2b 	vldr	s14, [pc, #172]	@ 80027bc <Touch_GetXYtouch+0x1e0>
 8002712:	ee77 7ac7 	vsub.f32	s15, s15, s14
 8002716:	eefc 7ae7 	vcvt.u32.f32	s15, s15
 800271a:	ee17 3a90 	vmov	r3, s15
 800271e:	617b      	str	r3, [r7, #20]


//having X and Y axis average values
// calculating coordinates as per screen orientation
	switch (current_orientation)
 8002720:	4b27      	ldr	r3, [pc, #156]	@ (80027c0 <Touch_GetXYtouch+0x1e4>)
 8002722:	781b      	ldrb	r3, [r3, #0]
 8002724:	2b03      	cmp	r3, #3
 8002726:	d83b      	bhi.n	80027a0 <Touch_GetXYtouch+0x1c4>
 8002728:	a201      	add	r2, pc, #4	@ (adr r2, 8002730 <Touch_GetXYtouch+0x154>)
 800272a:	f852 f023 	ldr.w	pc, [r2, r3, lsl #2]
 800272e:	bf00      	nop
 8002730:	08002741 	.word	0x08002741
 8002734:	08002753 	.word	0x08002753
 8002738:	0800276b 	.word	0x0800276b
 800273c:	08002789 	.word	0x08002789
	{
	case TOUCH0:
		*x=touchx;
 8002740:	69bb      	ldr	r3, [r7, #24]
 8002742:	b29a      	uxth	r2, r3
 8002744:	68fb      	ldr	r3, [r7, #12]
 8002746:	801a      	strh	r2, [r3, #0]
		*y=touchy;
 8002748:	697b      	ldr	r3, [r7, #20]
 800274a:	b29a      	uxth	r2, r3
 800274c:	68bb      	ldr	r3, [r7, #8]
 800274e:	801a      	strh	r2, [r3, #0]
		break;
 8002750:	e026      	b.n	80027a0 <Touch_GetXYtouch+0x1c4>
	case TOUCH90:
		*x=touchy;
 8002752:	697b      	ldr	r3, [r7, #20]
 8002754:	b29a      	uxth	r2, r3
 8002756:	68fb      	ldr	r3, [r7, #12]
 8002758:	801a      	strh	r2, [r3, #0]
		*y=(TOUCH_0_WIDTH-touchx);
 800275a:	69bb      	ldr	r3, [r7, #24]
 800275c:	b29b      	uxth	r3, r3
 800275e:	f5c3 73a0 	rsb	r3, r3, #320	@ 0x140
 8002762:	b29a      	uxth	r2, r3
 8002764:	68bb      	ldr	r3, [r7, #8]
 8002766:	801a      	strh	r2, [r3, #0]
		break;
 8002768:	e01a      	b.n	80027a0 <Touch_GetXYtouch+0x1c4>
	case TOUCH180:
		*x=(TOUCH_0_WIDTH-touchx);
 800276a:	69bb      	ldr	r3, [r7, #24]
 800276c:	b29b      	uxth	r3, r3
 800276e:	f5c3 73a0 	rsb	r3, r3, #320	@ 0x140
 8002772:	b29a      	uxth	r2, r3
 8002774:	68fb      	ldr	r3, [r7, #12]
 8002776:	801a      	strh	r2, [r3, #0]
		*y=(TOUCH_0_HEIGHT - touchy);
 8002778:	697b      	ldr	r3, [r7, #20]
 800277a:	b29b      	uxth	r3, r3
 800277c:	f5c3 73f0 	rsb	r3, r3, #480	@ 0x1e0
 8002780:	b29a      	uxth	r2, r3
 8002782:	68bb      	ldr	r3, [r7, #8]
 8002784:	801a      	strh	r2, [r3, #0]
		break;
 8002786:	e00b      	b.n	80027a0 <Touch_GetXYtouch+0x1c4>
	case TOUCH270:
		*x=(TOUCH_0_HEIGHT- touchy);
 8002788:	697b      	ldr	r3, [r7, #20]
 800278a:	b29b      	uxth	r3, r3
 800278c:	f5c3 73f0 	rsb	r3, r3, #480	@ 0x1e0
 8002790:	b29a      	uxth	r2, r3
 8002792:	68fb      	ldr	r3, [r7, #12]
 8002794:	801a      	strh	r2, [r3, #0]
		*y=touchx;
 8002796:	69bb      	ldr	r3, [r7, #24]
 8002798:	b29a      	uxth	r2, r3
 800279a:	68bb      	ldr	r3, [r7, #8]
 800279c:	801a      	strh	r2, [r3, #0]
		break;
 800279e:	bf00      	nop
	}

// set flag indicating there was a touch
	*isTouch=1;
 80027a0:	687b      	ldr	r3, [r7, #4]
 80027a2:	2201      	movs	r2, #1
 80027a4:	701a      	strb	r2, [r3, #0]
	return;
 80027a6:	bf00      	nop
}
 80027a8:	3728      	adds	r7, #40	@ 0x28
 80027aa:	46bd      	mov	sp, r7
 80027ac:	bd80      	pop	{r7, pc}
 80027ae:	bf00      	nop
 80027b0:	bc378034 	.word	0xbc378034
 80027b4:	43a80000 	.word	0x43a80000
 80027b8:	3c87fcb9 	.word	0x3c87fcb9
 80027bc:	4225851f 	.word	0x4225851f
 80027c0:	2000063c 	.word	0x2000063c

080027c4 <Touch_GotATouch>:
 * 						(use "2" in main loop activating touchgfxSignalVSync()
 * @returns		1	if recorded a touch
 * 				0	if no touch recorded
 ***********************************************************/

uint8_t Touch_GotATouch(uint8_t reset) {
 80027c4:	b580      	push	{r7, lr}
 80027c6:	b084      	sub	sp, #16
 80027c8:	af00      	add	r7, sp, #0
 80027ca:	4603      	mov	r3, r0
 80027cc:	71fb      	strb	r3, [r7, #7]
static uint32_t touchTime=0;
uint8_t result = Touch_PenDown;
 80027ce:	4b10      	ldr	r3, [pc, #64]	@ (8002810 <Touch_GotATouch+0x4c>)
 80027d0:	781b      	ldrb	r3, [r3, #0]
 80027d2:	73fb      	strb	r3, [r7, #15]

//	if (result)
//		result=Touch_PollTouch();

	if (reset==2){
 80027d4:	79fb      	ldrb	r3, [r7, #7]
 80027d6:	2b02      	cmp	r3, #2
 80027d8:	d10f      	bne.n	80027fa <Touch_GotATouch+0x36>
		if ((HAL_GetTick()-touchTime) >= TOUCHGFX_TIMING)
 80027da:	f000 f92f 	bl	8002a3c <HAL_GetTick>
 80027de:	4602      	mov	r2, r0
 80027e0:	4b0c      	ldr	r3, [pc, #48]	@ (8002814 <Touch_GotATouch+0x50>)
 80027e2:	681b      	ldr	r3, [r3, #0]
 80027e4:	1ad3      	subs	r3, r2, r3
 80027e6:	2b3b      	cmp	r3, #59	@ 0x3b
 80027e8:	d905      	bls.n	80027f6 <Touch_GotATouch+0x32>
			touchTime=HAL_GetTick();
 80027ea:	f000 f927 	bl	8002a3c <HAL_GetTick>
 80027ee:	4603      	mov	r3, r0
 80027f0:	4a08      	ldr	r2, [pc, #32]	@ (8002814 <Touch_GotATouch+0x50>)
 80027f2:	6013      	str	r3, [r2, #0]
 80027f4:	e001      	b.n	80027fa <Touch_GotATouch+0x36>
		else
			result=0;
 80027f6:	2300      	movs	r3, #0
 80027f8:	73fb      	strb	r3, [r7, #15]
	}
	if (reset==1)
 80027fa:	79fb      	ldrb	r3, [r7, #7]
 80027fc:	2b01      	cmp	r3, #1
 80027fe:	d102      	bne.n	8002806 <Touch_GotATouch+0x42>
		Touch_PenDown=0;
 8002800:	4b03      	ldr	r3, [pc, #12]	@ (8002810 <Touch_GotATouch+0x4c>)
 8002802:	2200      	movs	r2, #0
 8002804:	701a      	strb	r2, [r3, #0]
	return result;
 8002806:	7bfb      	ldrb	r3, [r7, #15]
}
 8002808:	4618      	mov	r0, r3
 800280a:	3710      	adds	r7, #16
 800280c:	46bd      	mov	sp, r7
 800280e:	bd80      	pop	{r7, pc}
 8002810:	20000649 	.word	0x20000649
 8002814:	2000064c 	.word	0x2000064c

08002818 <Touch_TouchGFXSampleTouch>:
 *			then, into STM32TouchController::sampleTouch(int32_t& x, int32_t& y)
 *			change "return false;"
 *			into:  "return ((bool) Touch_TouchGFXSampleTouch(&x, &y));"
 * 			that's enough for touch integration in TouchGFX
***********************************************************/
uint8_t Touch_TouchGFXSampleTouch(int32_t *x, int32_t *y){
 8002818:	b580      	push	{r7, lr}
 800281a:	b084      	sub	sp, #16
 800281c:	af00      	add	r7, sp, #0
 800281e:	6078      	str	r0, [r7, #4]
 8002820:	6039      	str	r1, [r7, #0]
	//	sTouchData result;
	uint8_t isTouch=0;				// preset to no touch
 8002822:	2300      	movs	r3, #0
 8002824:	73fb      	strb	r3, [r7, #15]
	uint16_t xx=0,yy=0;  			// need to convert library coordinates type (uint16_t) to TouchGFX ones (int32_t)
 8002826:	2300      	movs	r3, #0
 8002828:	81bb      	strh	r3, [r7, #12]
 800282a:	2300      	movs	r3, #0
 800282c:	817b      	strh	r3, [r7, #10]
	static uint8_t flipTouch=0;		// switches 0/1, on every function call, until sensor is touched allowing to return key repeat
	static uint32_t touchTime=1; 	// tick value get on the first touch. 0 means display untouched.
	static uint16_t avgXX=0, avgYY=0;  			// need to convert library coordinates type (uint16_t) to TouchGFX one (int32_t)
	static uint8_t repetition=TOUCHGFX_REPEAT_IT+TOUCHGFX_REPEAT_NO;

	if (Touch_GotATouch(0)){				// polls interrupt flag not resetting it
 800282e:	2000      	movs	r0, #0
 8002830:	f7ff ffc8 	bl	80027c4 <Touch_GotATouch>
 8002834:	4603      	mov	r3, r0
 8002836:	2b00      	cmp	r3, #0
 8002838:	d060      	beq.n	80028fc <Touch_TouchGFXSampleTouch+0xe4>
		Touch_GetXYtouch(&xx,&yy,&isTouch);	// get touch sensor position
 800283a:	f107 020f 	add.w	r2, r7, #15
 800283e:	f107 010a 	add.w	r1, r7, #10
 8002842:	f107 030c 	add.w	r3, r7, #12
 8002846:	4618      	mov	r0, r3
 8002848:	f7ff fec8 	bl	80025dc <Touch_GetXYtouch>
		if (!isTouch){						// received a "no touch"
 800284c:	7bfb      	ldrb	r3, [r7, #15]
 800284e:	2b00      	cmp	r3, #0
 8002850:	d126      	bne.n	80028a0 <Touch_TouchGFXSampleTouch+0x88>
			if (touchTime != 0){			// if previously touched
 8002852:	4b2d      	ldr	r3, [pc, #180]	@ (8002908 <Touch_TouchGFXSampleTouch+0xf0>)
 8002854:	681b      	ldr	r3, [r3, #0]
 8002856:	2b00      	cmp	r3, #0
 8002858:	d050      	beq.n	80028fc <Touch_TouchGFXSampleTouch+0xe4>
				if ((repetition--)>TOUCHGFX_REPEAT_NO+1){		// n-repetition of last touch sending
 800285a:	4b2c      	ldr	r3, [pc, #176]	@ (800290c <Touch_TouchGFXSampleTouch+0xf4>)
 800285c:	781b      	ldrb	r3, [r3, #0]
 800285e:	1e5a      	subs	r2, r3, #1
 8002860:	b2d1      	uxtb	r1, r2
 8002862:	4a2a      	ldr	r2, [pc, #168]	@ (800290c <Touch_TouchGFXSampleTouch+0xf4>)
 8002864:	7011      	strb	r1, [r2, #0]
 8002866:	2b01      	cmp	r3, #1
 8002868:	d90c      	bls.n	8002884 <Touch_TouchGFXSampleTouch+0x6c>
					*x = avgXX;
 800286a:	4b29      	ldr	r3, [pc, #164]	@ (8002910 <Touch_TouchGFXSampleTouch+0xf8>)
 800286c:	881b      	ldrh	r3, [r3, #0]
 800286e:	461a      	mov	r2, r3
 8002870:	687b      	ldr	r3, [r7, #4]
 8002872:	601a      	str	r2, [r3, #0]
					*y = avgYY;
 8002874:	4b27      	ldr	r3, [pc, #156]	@ (8002914 <Touch_TouchGFXSampleTouch+0xfc>)
 8002876:	881b      	ldrh	r3, [r3, #0]
 8002878:	461a      	mov	r2, r3
 800287a:	683b      	ldr	r3, [r7, #0]
 800287c:	601a      	str	r2, [r3, #0]
					isTouch=1;
 800287e:	2301      	movs	r3, #1
 8002880:	73fb      	strb	r3, [r7, #15]
 8002882:	e03b      	b.n	80028fc <Touch_TouchGFXSampleTouch+0xe4>
				} else if ((repetition==255)) {  // that's -1
 8002884:	4b21      	ldr	r3, [pc, #132]	@ (800290c <Touch_TouchGFXSampleTouch+0xf4>)
 8002886:	781b      	ldrb	r3, [r3, #0]
 8002888:	2bff      	cmp	r3, #255	@ 0xff
 800288a:	d137      	bne.n	80028fc <Touch_TouchGFXSampleTouch+0xe4>
					touchTime=0;					// set display as untouched
 800288c:	4b1e      	ldr	r3, [pc, #120]	@ (8002908 <Touch_TouchGFXSampleTouch+0xf0>)
 800288e:	2200      	movs	r2, #0
 8002890:	601a      	str	r2, [r3, #0]
					Touch_GotATouch(1);				// reset interrupt touch flag
 8002892:	2001      	movs	r0, #1
 8002894:	f7ff ff96 	bl	80027c4 <Touch_GotATouch>
					repetition=TOUCHGFX_REPEAT_IT+TOUCHGFX_REPEAT_NO;  //reset repetition counter
 8002898:	4b1c      	ldr	r3, [pc, #112]	@ (800290c <Touch_TouchGFXSampleTouch+0xf4>)
 800289a:	2200      	movs	r2, #0
 800289c:	701a      	strb	r2, [r3, #0]
 800289e:	e02d      	b.n	80028fc <Touch_TouchGFXSampleTouch+0xe4>
				}
			}
		} else {					// display touched

			if (touchTime==0) {				// if previously untouched
 80028a0:	4b19      	ldr	r3, [pc, #100]	@ (8002908 <Touch_TouchGFXSampleTouch+0xf0>)
 80028a2:	681b      	ldr	r3, [r3, #0]
 80028a4:	2b00      	cmp	r3, #0
 80028a6:	d10e      	bne.n	80028c6 <Touch_TouchGFXSampleTouch+0xae>
				avgXX =(xx/TOUCHGFX_SENSITIVITY)*TOUCHGFX_SENSITIVITY;
 80028a8:	89ba      	ldrh	r2, [r7, #12]
 80028aa:	4b19      	ldr	r3, [pc, #100]	@ (8002910 <Touch_TouchGFXSampleTouch+0xf8>)
 80028ac:	801a      	strh	r2, [r3, #0]
				avgYY =(yy/TOUCHGFX_SENSITIVITY)*TOUCHGFX_SENSITIVITY;
 80028ae:	897a      	ldrh	r2, [r7, #10]
 80028b0:	4b18      	ldr	r3, [pc, #96]	@ (8002914 <Touch_TouchGFXSampleTouch+0xfc>)
 80028b2:	801a      	strh	r2, [r3, #0]
				touchTime=HAL_GetTick();	// store tick value at touch time
 80028b4:	f000 f8c2 	bl	8002a3c <HAL_GetTick>
 80028b8:	4603      	mov	r3, r0
 80028ba:	4a13      	ldr	r2, [pc, #76]	@ (8002908 <Touch_TouchGFXSampleTouch+0xf0>)
 80028bc:	6013      	str	r3, [r2, #0]
				flipTouch=1;				// set switch to send touch now
 80028be:	4b16      	ldr	r3, [pc, #88]	@ (8002918 <Touch_TouchGFXSampleTouch+0x100>)
 80028c0:	2201      	movs	r2, #1
 80028c2:	701a      	strb	r2, [r3, #0]
 80028c4:	e001      	b.n	80028ca <Touch_TouchGFXSampleTouch+0xb2>
			} else {						// not a new touch
				if (((HAL_GetTick()-touchTime)>DELAY_TO_KEY_REPEAT) && (DELAY_TO_KEY_REPEAT > 0)){	// if timeout to key repeat is over (0 means no key repeat)
 80028c6:	f000 f8b9 	bl	8002a3c <HAL_GetTick>
					flipTouch=!flipTouch;	// alternate every time function is called
				} else
					if (DELAY_TO_KEY_REPEAT == 0)
						flipTouch=0;		// (DELAY_TO_KEY_REPEAT == 0) means a single pulse, "-1" keep pulse as long as touch
			}
			if (flipTouch) { 	// return position only if the switching flag is on
 80028ca:	4b13      	ldr	r3, [pc, #76]	@ (8002918 <Touch_TouchGFXSampleTouch+0x100>)
 80028cc:	781b      	ldrb	r3, [r3, #0]
 80028ce:	2b00      	cmp	r3, #0
 80028d0:	d012      	beq.n	80028f8 <Touch_TouchGFXSampleTouch+0xe0>
				*x=(((avgXX*(TOUCHGFX_MOVAVG-1)+((xx/TOUCHGFX_SENSITIVITY)*TOUCHGFX_SENSITIVITY)))/TOUCHGFX_MOVAVG);
 80028d2:	89bb      	ldrh	r3, [r7, #12]
 80028d4:	461a      	mov	r2, r3
 80028d6:	687b      	ldr	r3, [r7, #4]
 80028d8:	601a      	str	r2, [r3, #0]
				*y=(((avgYY*(TOUCHGFX_MOVAVG-1)+((yy/TOUCHGFX_SENSITIVITY)*TOUCHGFX_SENSITIVITY)))/TOUCHGFX_MOVAVG);
 80028da:	897b      	ldrh	r3, [r7, #10]
 80028dc:	461a      	mov	r2, r3
 80028de:	683b      	ldr	r3, [r7, #0]
 80028e0:	601a      	str	r2, [r3, #0]
				avgXX = *x;
 80028e2:	687b      	ldr	r3, [r7, #4]
 80028e4:	681b      	ldr	r3, [r3, #0]
 80028e6:	b29a      	uxth	r2, r3
 80028e8:	4b09      	ldr	r3, [pc, #36]	@ (8002910 <Touch_TouchGFXSampleTouch+0xf8>)
 80028ea:	801a      	strh	r2, [r3, #0]
				avgYY = *y;
 80028ec:	683b      	ldr	r3, [r7, #0]
 80028ee:	681b      	ldr	r3, [r3, #0]
 80028f0:	b29a      	uxth	r2, r3
 80028f2:	4b08      	ldr	r3, [pc, #32]	@ (8002914 <Touch_TouchGFXSampleTouch+0xfc>)
 80028f4:	801a      	strh	r2, [r3, #0]
 80028f6:	e001      	b.n	80028fc <Touch_TouchGFXSampleTouch+0xe4>
			} else {			// otherwise return "no touch" from display
				isTouch = 0;
 80028f8:	2300      	movs	r3, #0
 80028fa:	73fb      	strb	r3, [r7, #15]
			}
		}
	}
	return isTouch;
 80028fc:	7bfb      	ldrb	r3, [r7, #15]
}
 80028fe:	4618      	mov	r0, r3
 8002900:	3710      	adds	r7, #16
 8002902:	46bd      	mov	sp, r7
 8002904:	bd80      	pop	{r7, pc}
 8002906:	bf00      	nop
 8002908:	2000001c 	.word	0x2000001c
 800290c:	20000650 	.word	0x20000650
 8002910:	20000652 	.word	0x20000652
 8002914:	20000654 	.word	0x20000654
 8002918:	20000656 	.word	0x20000656

0800291c <Reset_Handler>:
 800291c:	f8df d034 	ldr.w	sp, [pc, #52]	@ 8002954 <LoopFillZerobss+0xe>
 8002920:	f7ff fb62 	bl	8001fe8 <SystemInit>
 8002924:	480c      	ldr	r0, [pc, #48]	@ (8002958 <LoopFillZerobss+0x12>)
 8002926:	490d      	ldr	r1, [pc, #52]	@ (800295c <LoopFillZerobss+0x16>)
 8002928:	4a0d      	ldr	r2, [pc, #52]	@ (8002960 <LoopFillZerobss+0x1a>)
 800292a:	2300      	movs	r3, #0
 800292c:	e002      	b.n	8002934 <LoopCopyDataInit>

0800292e <CopyDataInit>:
 800292e:	58d4      	ldr	r4, [r2, r3]
 8002930:	50c4      	str	r4, [r0, r3]
 8002932:	3304      	adds	r3, #4

08002934 <LoopCopyDataInit>:
 8002934:	18c4      	adds	r4, r0, r3
 8002936:	428c      	cmp	r4, r1
 8002938:	d3f9      	bcc.n	800292e <CopyDataInit>
 800293a:	4a0a      	ldr	r2, [pc, #40]	@ (8002964 <LoopFillZerobss+0x1e>)
 800293c:	4c0a      	ldr	r4, [pc, #40]	@ (8002968 <LoopFillZerobss+0x22>)
 800293e:	2300      	movs	r3, #0
 8002940:	e001      	b.n	8002946 <LoopFillZerobss>

08002942 <FillZerobss>:
 8002942:	6013      	str	r3, [r2, #0]
 8002944:	3204      	adds	r2, #4

08002946 <LoopFillZerobss>:
 8002946:	42a2      	cmp	r2, r4
 8002948:	d3fb      	bcc.n	8002942 <FillZerobss>
 800294a:	f023 fc01 	bl	8026150 <__libc_init_array>
 800294e:	f7fe facd 	bl	8000eec <main>
 8002952:	4770      	bx	lr
 8002954:	20020000 	.word	0x20020000
 8002958:	20000000 	.word	0x20000000
 800295c:	2000010c 	.word	0x2000010c
 8002960:	080600f8 	.word	0x080600f8
 8002964:	20000320 	.word	0x20000320
 8002968:	20003ce0 	.word	0x20003ce0

0800296c <ADC_IRQHandler>:
 800296c:	e7fe      	b.n	800296c <ADC_IRQHandler>
	...

08002970 <HAL_Init>:
  *         need to ensure that the SysTick time base is always set to 1 millisecond
  *         to have correct HAL operation.
  * @retval HAL status
  */
HAL_StatusTypeDef HAL_Init(void)
{
 8002970:	b580      	push	{r7, lr}
 8002972:	af00      	add	r7, sp, #0
  /* Configure Flash prefetch, Instruction cache, Data cache */ 
#if (INSTRUCTION_CACHE_ENABLE != 0U)
  __HAL_FLASH_INSTRUCTION_CACHE_ENABLE();
 8002974:	4b0e      	ldr	r3, [pc, #56]	@ (80029b0 <HAL_Init+0x40>)
 8002976:	681b      	ldr	r3, [r3, #0]
 8002978:	4a0d      	ldr	r2, [pc, #52]	@ (80029b0 <HAL_Init+0x40>)
 800297a:	f443 7300 	orr.w	r3, r3, #512	@ 0x200
 800297e:	6013      	str	r3, [r2, #0]
#endif /* INSTRUCTION_CACHE_ENABLE */

#if (DATA_CACHE_ENABLE != 0U)
  __HAL_FLASH_DATA_CACHE_ENABLE();
 8002980:	4b0b      	ldr	r3, [pc, #44]	@ (80029b0 <HAL_Init+0x40>)
 8002982:	681b      	ldr	r3, [r3, #0]
 8002984:	4a0a      	ldr	r2, [pc, #40]	@ (80029b0 <HAL_Init+0x40>)
 8002986:	f443 6380 	orr.w	r3, r3, #1024	@ 0x400
 800298a:	6013      	str	r3, [r2, #0]
#endif /* DATA_CACHE_ENABLE */

#if (PREFETCH_ENABLE != 0U)
  __HAL_FLASH_PREFETCH_BUFFER_ENABLE();
 800298c:	4b08      	ldr	r3, [pc, #32]	@ (80029b0 <HAL_Init+0x40>)
 800298e:	681b      	ldr	r3, [r3, #0]
 8002990:	4a07      	ldr	r2, [pc, #28]	@ (80029b0 <HAL_Init+0x40>)
 8002992:	f443 7380 	orr.w	r3, r3, #256	@ 0x100
 8002996:	6013      	str	r3, [r2, #0]
#endif /* PREFETCH_ENABLE */

  /* Set Interrupt Group Priority */
  HAL_NVIC_SetPriorityGrouping(NVIC_PRIORITYGROUP_4);
 8002998:	2003      	movs	r0, #3
 800299a:	f000 fdb3 	bl	8003504 <HAL_NVIC_SetPriorityGrouping>

  /* Use systick as time base source and configure 1ms tick (default clock after Reset is HSI) */
  HAL_InitTick(TICK_INT_PRIORITY);
 800299e:	2000      	movs	r0, #0
 80029a0:	f000 f808 	bl	80029b4 <HAL_InitTick>

  /* Init the low level hardware */
  HAL_MspInit();
 80029a4:	f7fe ff24 	bl	80017f0 <HAL_MspInit>

  /* Return function status */
  return HAL_OK;
 80029a8:	2300      	movs	r3, #0
}
 80029aa:	4618      	mov	r0, r3
 80029ac:	bd80      	pop	{r7, pc}
 80029ae:	bf00      	nop
 80029b0:	40023c00 	.word	0x40023c00

080029b4 <HAL_InitTick>:
  *       implementation  in user file.
  * @param TickPriority Tick interrupt priority.
  * @retval HAL status
  */
__weak HAL_StatusTypeDef HAL_InitTick(uint32_t TickPriority)
{
 80029b4:	b580      	push	{r7, lr}
 80029b6:	b082      	sub	sp, #8
 80029b8:	af00      	add	r7, sp, #0
 80029ba:	6078      	str	r0, [r7, #4]
  /* Configure the SysTick to have interrupt in 1ms time basis*/
  if (HAL_SYSTICK_Config(SystemCoreClock / (1000U / uwTickFreq)) > 0U)
 80029bc:	4b12      	ldr	r3, [pc, #72]	@ (8002a08 <HAL_InitTick+0x54>)
 80029be:	681a      	ldr	r2, [r3, #0]
 80029c0:	4b12      	ldr	r3, [pc, #72]	@ (8002a0c <HAL_InitTick+0x58>)
 80029c2:	781b      	ldrb	r3, [r3, #0]
 80029c4:	4619      	mov	r1, r3
 80029c6:	f44f 737a 	mov.w	r3, #1000	@ 0x3e8
 80029ca:	fbb3 f3f1 	udiv	r3, r3, r1
 80029ce:	fbb2 f3f3 	udiv	r3, r2, r3
 80029d2:	4618      	mov	r0, r3
 80029d4:	f000 fdd9 	bl	800358a <HAL_SYSTICK_Config>
 80029d8:	4603      	mov	r3, r0
 80029da:	2b00      	cmp	r3, #0
 80029dc:	d001      	beq.n	80029e2 <HAL_InitTick+0x2e>
  {
    return HAL_ERROR;
 80029de:	2301      	movs	r3, #1
 80029e0:	e00e      	b.n	8002a00 <HAL_InitTick+0x4c>
  }

  /* Configure the SysTick IRQ priority */
  if (TickPriority < (1UL << __NVIC_PRIO_BITS))
 80029e2:	687b      	ldr	r3, [r7, #4]
 80029e4:	2b0f      	cmp	r3, #15
 80029e6:	d80a      	bhi.n	80029fe <HAL_InitTick+0x4a>
  {
    HAL_NVIC_SetPriority(SysTick_IRQn, TickPriority, 0U);
 80029e8:	2200      	movs	r2, #0
 80029ea:	6879      	ldr	r1, [r7, #4]
 80029ec:	f04f 30ff 	mov.w	r0, #4294967295
 80029f0:	f000 fd93 	bl	800351a <HAL_NVIC_SetPriority>
    uwTickPrio = TickPriority;
 80029f4:	4a06      	ldr	r2, [pc, #24]	@ (8002a10 <HAL_InitTick+0x5c>)
 80029f6:	687b      	ldr	r3, [r7, #4]
 80029f8:	6013      	str	r3, [r2, #0]
  {
    return HAL_ERROR;
  }

  /* Return function status */
  return HAL_OK;
 80029fa:	2300      	movs	r3, #0
 80029fc:	e000      	b.n	8002a00 <HAL_InitTick+0x4c>
    return HAL_ERROR;
 80029fe:	2301      	movs	r3, #1
}
 8002a00:	4618      	mov	r0, r3
 8002a02:	3708      	adds	r7, #8
 8002a04:	46bd      	mov	sp, r7
 8002a06:	bd80      	pop	{r7, pc}
 8002a08:	20000014 	.word	0x20000014
 8002a0c:	20000024 	.word	0x20000024
 8002a10:	20000020 	.word	0x20000020

08002a14 <HAL_IncTick>:
 * @note This function is declared as __weak to be overwritten in case of other 
  *      implementations in user file.
  * @retval None
  */
__weak void HAL_IncTick(void)
{
 8002a14:	b480      	push	{r7}
 8002a16:	af00      	add	r7, sp, #0
  uwTick += uwTickFreq;
 8002a18:	4b06      	ldr	r3, [pc, #24]	@ (8002a34 <HAL_IncTick+0x20>)
 8002a1a:	781b      	ldrb	r3, [r3, #0]
 8002a1c:	461a      	mov	r2, r3
 8002a1e:	4b06      	ldr	r3, [pc, #24]	@ (8002a38 <HAL_IncTick+0x24>)
 8002a20:	681b      	ldr	r3, [r3, #0]
 8002a22:	4413      	add	r3, r2
 8002a24:	4a04      	ldr	r2, [pc, #16]	@ (8002a38 <HAL_IncTick+0x24>)
 8002a26:	6013      	str	r3, [r2, #0]
}
 8002a28:	bf00      	nop
 8002a2a:	46bd      	mov	sp, r7
 8002a2c:	f85d 7b04 	ldr.w	r7, [sp], #4
 8002a30:	4770      	bx	lr
 8002a32:	bf00      	nop
 8002a34:	20000024 	.word	0x20000024
 8002a38:	20000658 	.word	0x20000658

08002a3c <HAL_GetTick>:
  * @note This function is declared as __weak to be overwritten in case of other 
  *       implementations in user file.
  * @retval tick value
  */
__weak uint32_t HAL_GetTick(void)
{
 8002a3c:	b480      	push	{r7}
 8002a3e:	af00      	add	r7, sp, #0
  return uwTick;
 8002a40:	4b03      	ldr	r3, [pc, #12]	@ (8002a50 <HAL_GetTick+0x14>)
 8002a42:	681b      	ldr	r3, [r3, #0]
}
 8002a44:	4618      	mov	r0, r3
 8002a46:	46bd      	mov	sp, r7
 8002a48:	f85d 7b04 	ldr.w	r7, [sp], #4
 8002a4c:	4770      	bx	lr
 8002a4e:	bf00      	nop
 8002a50:	20000658 	.word	0x20000658

08002a54 <HAL_Delay>:
  *       implementations in user file.
  * @param Delay specifies the delay time length, in milliseconds.
  * @retval None
  */
__weak void HAL_Delay(uint32_t Delay)
{
 8002a54:	b580      	push	{r7, lr}
 8002a56:	b084      	sub	sp, #16
 8002a58:	af00      	add	r7, sp, #0
 8002a5a:	6078      	str	r0, [r7, #4]
  uint32_t tickstart = HAL_GetTick();
 8002a5c:	f7ff ffee 	bl	8002a3c <HAL_GetTick>
 8002a60:	60b8      	str	r0, [r7, #8]
  uint32_t wait = Delay;
 8002a62:	687b      	ldr	r3, [r7, #4]
 8002a64:	60fb      	str	r3, [r7, #12]

  /* Add a freq to guarantee minimum wait */
  if (wait < HAL_MAX_DELAY)
 8002a66:	68fb      	ldr	r3, [r7, #12]
 8002a68:	f1b3 3fff 	cmp.w	r3, #4294967295
 8002a6c:	d005      	beq.n	8002a7a <HAL_Delay+0x26>
  {
    wait += (uint32_t)(uwTickFreq);
 8002a6e:	4b0a      	ldr	r3, [pc, #40]	@ (8002a98 <HAL_Delay+0x44>)
 8002a70:	781b      	ldrb	r3, [r3, #0]
 8002a72:	461a      	mov	r2, r3
 8002a74:	68fb      	ldr	r3, [r7, #12]
 8002a76:	4413      	add	r3, r2
 8002a78:	60fb      	str	r3, [r7, #12]
  }

  while((HAL_GetTick() - tickstart) < wait)
 8002a7a:	bf00      	nop
 8002a7c:	f7ff ffde 	bl	8002a3c <HAL_GetTick>
 8002a80:	4602      	mov	r2, r0
 8002a82:	68bb      	ldr	r3, [r7, #8]
 8002a84:	1ad3      	subs	r3, r2, r3
 8002a86:	68fa      	ldr	r2, [r7, #12]
 8002a88:	429a      	cmp	r2, r3
 8002a8a:	d8f7      	bhi.n	8002a7c <HAL_Delay+0x28>
  {
  }
}
 8002a8c:	bf00      	nop
 8002a8e:	bf00      	nop
 8002a90:	3710      	adds	r7, #16
 8002a92:	46bd      	mov	sp, r7
 8002a94:	bd80      	pop	{r7, pc}
 8002a96:	bf00      	nop
 8002a98:	20000024 	.word	0x20000024

08002a9c <HAL_ADC_Init>:
  * @param  hadc pointer to a ADC_HandleTypeDef structure that contains
  *         the configuration information for the specified ADC.
  * @retval HAL status
  */
HAL_StatusTypeDef HAL_ADC_Init(ADC_HandleTypeDef *hadc)
{
 8002a9c:	b580      	push	{r7, lr}
 8002a9e:	b084      	sub	sp, #16
 8002aa0:	af00      	add	r7, sp, #0
 8002aa2:	6078      	str	r0, [r7, #4]
  HAL_StatusTypeDef tmp_hal_status = HAL_OK;
 8002aa4:	2300      	movs	r3, #0
 8002aa6:	73fb      	strb	r3, [r7, #15]

  /* Check ADC handle */
  if (hadc == NULL)
 8002aa8:	687b      	ldr	r3, [r7, #4]
 8002aaa:	2b00      	cmp	r3, #0
 8002aac:	d101      	bne.n	8002ab2 <HAL_ADC_Init+0x16>
  {
    return HAL_ERROR;
 8002aae:	2301      	movs	r3, #1
 8002ab0:	e033      	b.n	8002b1a <HAL_ADC_Init+0x7e>
  if (hadc->Init.ExternalTrigConv != ADC_SOFTWARE_START)
  {
    assert_param(IS_ADC_EXT_TRIG_EDGE(hadc->Init.ExternalTrigConvEdge));
  }

  if (hadc->State == HAL_ADC_STATE_RESET)
 8002ab2:	687b      	ldr	r3, [r7, #4]
 8002ab4:	6c1b      	ldr	r3, [r3, #64]	@ 0x40
 8002ab6:	2b00      	cmp	r3, #0
 8002ab8:	d109      	bne.n	8002ace <HAL_ADC_Init+0x32>

    /* Init the low level hardware */
    hadc->MspInitCallback(hadc);
#else
    /* Init the low level hardware */
    HAL_ADC_MspInit(hadc);
 8002aba:	6878      	ldr	r0, [r7, #4]
 8002abc:	f7fe fec0 	bl	8001840 <HAL_ADC_MspInit>
#endif /* USE_HAL_ADC_REGISTER_CALLBACKS */

    /* Initialize ADC error code */
    ADC_CLEAR_ERRORCODE(hadc);
 8002ac0:	687b      	ldr	r3, [r7, #4]
 8002ac2:	2200      	movs	r2, #0
 8002ac4:	645a      	str	r2, [r3, #68]	@ 0x44

    /* Allocate lock resource and initialize it */
    hadc->Lock = HAL_UNLOCKED;
 8002ac6:	687b      	ldr	r3, [r7, #4]
 8002ac8:	2200      	movs	r2, #0
 8002aca:	f883 203c 	strb.w	r2, [r3, #60]	@ 0x3c
  }

  /* Configuration of ADC parameters if previous preliminary actions are      */
  /* correctly completed.                                                     */
  if (HAL_IS_BIT_CLR(hadc->State, HAL_ADC_STATE_ERROR_INTERNAL))
 8002ace:	687b      	ldr	r3, [r7, #4]
 8002ad0:	6c1b      	ldr	r3, [r3, #64]	@ 0x40
 8002ad2:	f003 0310 	and.w	r3, r3, #16
 8002ad6:	2b00      	cmp	r3, #0
 8002ad8:	d118      	bne.n	8002b0c <HAL_ADC_Init+0x70>
  {
    /* Set ADC state */
    ADC_STATE_CLR_SET(hadc->State,
 8002ada:	687b      	ldr	r3, [r7, #4]
 8002adc:	6c1b      	ldr	r3, [r3, #64]	@ 0x40
 8002ade:	f423 5388 	bic.w	r3, r3, #4352	@ 0x1100
 8002ae2:	f023 0302 	bic.w	r3, r3, #2
 8002ae6:	f043 0202 	orr.w	r2, r3, #2
 8002aea:	687b      	ldr	r3, [r7, #4]
 8002aec:	641a      	str	r2, [r3, #64]	@ 0x40
                      HAL_ADC_STATE_REG_BUSY | HAL_ADC_STATE_INJ_BUSY,
                      HAL_ADC_STATE_BUSY_INTERNAL);

    /* Set ADC parameters */
    ADC_Init(hadc);
 8002aee:	6878      	ldr	r0, [r7, #4]
 8002af0:	f000 fa78 	bl	8002fe4 <ADC_Init>

    /* Set ADC error code to none */
    ADC_CLEAR_ERRORCODE(hadc);
 8002af4:	687b      	ldr	r3, [r7, #4]
 8002af6:	2200      	movs	r2, #0
 8002af8:	645a      	str	r2, [r3, #68]	@ 0x44

    /* Set the ADC state */
    ADC_STATE_CLR_SET(hadc->State,
 8002afa:	687b      	ldr	r3, [r7, #4]
 8002afc:	6c1b      	ldr	r3, [r3, #64]	@ 0x40
 8002afe:	f023 0303 	bic.w	r3, r3, #3
 8002b02:	f043 0201 	orr.w	r2, r3, #1
 8002b06:	687b      	ldr	r3, [r7, #4]
 8002b08:	641a      	str	r2, [r3, #64]	@ 0x40
 8002b0a:	e001      	b.n	8002b10 <HAL_ADC_Init+0x74>
                      HAL_ADC_STATE_BUSY_INTERNAL,
                      HAL_ADC_STATE_READY);
  }
  else
  {
    tmp_hal_status = HAL_ERROR;
 8002b0c:	2301      	movs	r3, #1
 8002b0e:	73fb      	strb	r3, [r7, #15]
  }

  /* Release Lock */
  __HAL_UNLOCK(hadc);
 8002b10:	687b      	ldr	r3, [r7, #4]
 8002b12:	2200      	movs	r2, #0
 8002b14:	f883 203c 	strb.w	r2, [r3, #60]	@ 0x3c

  /* Return function status */
  return tmp_hal_status;
 8002b18:	7bfb      	ldrb	r3, [r7, #15]
}
 8002b1a:	4618      	mov	r0, r3
 8002b1c:	3710      	adds	r7, #16
 8002b1e:	46bd      	mov	sp, r7
 8002b20:	bd80      	pop	{r7, pc}
	...

08002b24 <HAL_ADC_Start_DMA>:
  * @param  pData The destination Buffer address.
  * @param  Length The length of data to be transferred from ADC peripheral to memory.
  * @retval HAL status
  */
HAL_StatusTypeDef HAL_ADC_Start_DMA(ADC_HandleTypeDef *hadc, uint32_t *pData, uint32_t Length)
{
 8002b24:	b580      	push	{r7, lr}
 8002b26:	b086      	sub	sp, #24
 8002b28:	af00      	add	r7, sp, #0
 8002b2a:	60f8      	str	r0, [r7, #12]
 8002b2c:	60b9      	str	r1, [r7, #8]
 8002b2e:	607a      	str	r2, [r7, #4]
  __IO uint32_t counter = 0U;
 8002b30:	2300      	movs	r3, #0
 8002b32:	613b      	str	r3, [r7, #16]
  /* Check the parameters */
  assert_param(IS_FUNCTIONAL_STATE(hadc->Init.ContinuousConvMode));
  assert_param(IS_ADC_EXT_TRIG_EDGE(hadc->Init.ExternalTrigConvEdge));

  /* Process locked */
  __HAL_LOCK(hadc);
 8002b34:	68fb      	ldr	r3, [r7, #12]
 8002b36:	f893 303c 	ldrb.w	r3, [r3, #60]	@ 0x3c
 8002b3a:	2b01      	cmp	r3, #1
 8002b3c:	d101      	bne.n	8002b42 <HAL_ADC_Start_DMA+0x1e>
 8002b3e:	2302      	movs	r3, #2
 8002b40:	e0e9      	b.n	8002d16 <HAL_ADC_Start_DMA+0x1f2>
 8002b42:	68fb      	ldr	r3, [r7, #12]
 8002b44:	2201      	movs	r2, #1
 8002b46:	f883 203c 	strb.w	r2, [r3, #60]	@ 0x3c

  /* Enable the ADC peripheral */
  /* Check if ADC peripheral is disabled in order to enable it and wait during
  Tstab time the ADC's stabilization */
  if ((hadc->Instance->CR2 & ADC_CR2_ADON) != ADC_CR2_ADON)
 8002b4a:	68fb      	ldr	r3, [r7, #12]
 8002b4c:	681b      	ldr	r3, [r3, #0]
 8002b4e:	689b      	ldr	r3, [r3, #8]
 8002b50:	f003 0301 	and.w	r3, r3, #1
 8002b54:	2b01      	cmp	r3, #1
 8002b56:	d018      	beq.n	8002b8a <HAL_ADC_Start_DMA+0x66>
  {
    /* Enable the Peripheral */
    __HAL_ADC_ENABLE(hadc);
 8002b58:	68fb      	ldr	r3, [r7, #12]
 8002b5a:	681b      	ldr	r3, [r3, #0]
 8002b5c:	689a      	ldr	r2, [r3, #8]
 8002b5e:	68fb      	ldr	r3, [r7, #12]
 8002b60:	681b      	ldr	r3, [r3, #0]
 8002b62:	f042 0201 	orr.w	r2, r2, #1
 8002b66:	609a      	str	r2, [r3, #8]

    /* Delay for ADC stabilization time */
    /* Compute number of CPU cycles to wait for */
    counter = (ADC_STAB_DELAY_US * (SystemCoreClock / 1000000U));
 8002b68:	4b6d      	ldr	r3, [pc, #436]	@ (8002d20 <HAL_ADC_Start_DMA+0x1fc>)
 8002b6a:	681b      	ldr	r3, [r3, #0]
 8002b6c:	4a6d      	ldr	r2, [pc, #436]	@ (8002d24 <HAL_ADC_Start_DMA+0x200>)
 8002b6e:	fba2 2303 	umull	r2, r3, r2, r3
 8002b72:	0c9a      	lsrs	r2, r3, #18
 8002b74:	4613      	mov	r3, r2
 8002b76:	005b      	lsls	r3, r3, #1
 8002b78:	4413      	add	r3, r2
 8002b7a:	613b      	str	r3, [r7, #16]
    while (counter != 0U)
 8002b7c:	e002      	b.n	8002b84 <HAL_ADC_Start_DMA+0x60>
    {
      counter--;
 8002b7e:	693b      	ldr	r3, [r7, #16]
 8002b80:	3b01      	subs	r3, #1
 8002b82:	613b      	str	r3, [r7, #16]
    while (counter != 0U)
 8002b84:	693b      	ldr	r3, [r7, #16]
 8002b86:	2b00      	cmp	r3, #0
 8002b88:	d1f9      	bne.n	8002b7e <HAL_ADC_Start_DMA+0x5a>
    }
  }

  /* Check ADC DMA Mode                                                     */
  /* - disable the DMA Mode if it is already enabled                        */
  if ((hadc->Instance->CR2 & ADC_CR2_DMA) == ADC_CR2_DMA)
 8002b8a:	68fb      	ldr	r3, [r7, #12]
 8002b8c:	681b      	ldr	r3, [r3, #0]
 8002b8e:	689b      	ldr	r3, [r3, #8]
 8002b90:	f403 7380 	and.w	r3, r3, #256	@ 0x100
 8002b94:	f5b3 7f80 	cmp.w	r3, #256	@ 0x100
 8002b98:	d107      	bne.n	8002baa <HAL_ADC_Start_DMA+0x86>
  {
    CLEAR_BIT(hadc->Instance->CR2, ADC_CR2_DMA);
 8002b9a:	68fb      	ldr	r3, [r7, #12]
 8002b9c:	681b      	ldr	r3, [r3, #0]
 8002b9e:	689a      	ldr	r2, [r3, #8]
 8002ba0:	68fb      	ldr	r3, [r7, #12]
 8002ba2:	681b      	ldr	r3, [r3, #0]
 8002ba4:	f422 7280 	bic.w	r2, r2, #256	@ 0x100
 8002ba8:	609a      	str	r2, [r3, #8]
  }

  /* Start conversion if ADC is effectively enabled */
  if (HAL_IS_BIT_SET(hadc->Instance->CR2, ADC_CR2_ADON))
 8002baa:	68fb      	ldr	r3, [r7, #12]
 8002bac:	681b      	ldr	r3, [r3, #0]
 8002bae:	689b      	ldr	r3, [r3, #8]
 8002bb0:	f003 0301 	and.w	r3, r3, #1
 8002bb4:	2b01      	cmp	r3, #1
 8002bb6:	f040 80a1 	bne.w	8002cfc <HAL_ADC_Start_DMA+0x1d8>
  {
    /* Set ADC state                                                          */
    /* - Clear state bitfield related to regular group conversion results     */
    /* - Set state bitfield related to regular group operation                */
    ADC_STATE_CLR_SET(hadc->State,
 8002bba:	68fb      	ldr	r3, [r7, #12]
 8002bbc:	6c1b      	ldr	r3, [r3, #64]	@ 0x40
 8002bbe:	f423 63e0 	bic.w	r3, r3, #1792	@ 0x700
 8002bc2:	f023 0301 	bic.w	r3, r3, #1
 8002bc6:	f443 7280 	orr.w	r2, r3, #256	@ 0x100
 8002bca:	68fb      	ldr	r3, [r7, #12]
 8002bcc:	641a      	str	r2, [r3, #64]	@ 0x40
                      HAL_ADC_STATE_READY | HAL_ADC_STATE_REG_EOC | HAL_ADC_STATE_REG_OVR,
                      HAL_ADC_STATE_REG_BUSY);

    /* If conversions on group regular are also triggering group injected,    */
    /* update ADC state.                                                      */
    if (READ_BIT(hadc->Instance->CR1, ADC_CR1_JAUTO) != RESET)
 8002bce:	68fb      	ldr	r3, [r7, #12]
 8002bd0:	681b      	ldr	r3, [r3, #0]
 8002bd2:	685b      	ldr	r3, [r3, #4]
 8002bd4:	f403 6380 	and.w	r3, r3, #1024	@ 0x400
 8002bd8:	2b00      	cmp	r3, #0
 8002bda:	d007      	beq.n	8002bec <HAL_ADC_Start_DMA+0xc8>
    {
      ADC_STATE_CLR_SET(hadc->State, HAL_ADC_STATE_INJ_EOC, HAL_ADC_STATE_INJ_BUSY);
 8002bdc:	68fb      	ldr	r3, [r7, #12]
 8002bde:	6c1b      	ldr	r3, [r3, #64]	@ 0x40
 8002be0:	f423 5340 	bic.w	r3, r3, #12288	@ 0x3000
 8002be4:	f443 5280 	orr.w	r2, r3, #4096	@ 0x1000
 8002be8:	68fb      	ldr	r3, [r7, #12]
 8002bea:	641a      	str	r2, [r3, #64]	@ 0x40
    }

    /* State machine update: Check if an injected conversion is ongoing */
    if (HAL_IS_BIT_SET(hadc->State, HAL_ADC_STATE_INJ_BUSY))
 8002bec:	68fb      	ldr	r3, [r7, #12]
 8002bee:	6c1b      	ldr	r3, [r3, #64]	@ 0x40
 8002bf0:	f403 5380 	and.w	r3, r3, #4096	@ 0x1000
 8002bf4:	f5b3 5f80 	cmp.w	r3, #4096	@ 0x1000
 8002bf8:	d106      	bne.n	8002c08 <HAL_ADC_Start_DMA+0xe4>
    {
      /* Reset ADC error code fields related to conversions on group regular */
      CLEAR_BIT(hadc->ErrorCode, (HAL_ADC_ERROR_OVR | HAL_ADC_ERROR_DMA));
 8002bfa:	68fb      	ldr	r3, [r7, #12]
 8002bfc:	6c5b      	ldr	r3, [r3, #68]	@ 0x44
 8002bfe:	f023 0206 	bic.w	r2, r3, #6
 8002c02:	68fb      	ldr	r3, [r7, #12]
 8002c04:	645a      	str	r2, [r3, #68]	@ 0x44
 8002c06:	e002      	b.n	8002c0e <HAL_ADC_Start_DMA+0xea>
    }
    else
    {
      /* Reset ADC all error code fields */
      ADC_CLEAR_ERRORCODE(hadc);
 8002c08:	68fb      	ldr	r3, [r7, #12]
 8002c0a:	2200      	movs	r2, #0
 8002c0c:	645a      	str	r2, [r3, #68]	@ 0x44
    }

    /* Process unlocked */
    /* Unlock before starting ADC conversions: in case of potential           */
    /* interruption, to let the process to ADC IRQ Handler.                   */
    __HAL_UNLOCK(hadc);
 8002c0e:	68fb      	ldr	r3, [r7, #12]
 8002c10:	2200      	movs	r2, #0
 8002c12:	f883 203c 	strb.w	r2, [r3, #60]	@ 0x3c

    /* Pointer to the common control register to which is belonging hadc    */
    /* (Depending on STM32F4 product, there may be up to 3 ADCs and 1 common */
    /* control register)                                                    */
    tmpADC_Common = ADC_COMMON_REGISTER(hadc);
 8002c16:	4b44      	ldr	r3, [pc, #272]	@ (8002d28 <HAL_ADC_Start_DMA+0x204>)
 8002c18:	617b      	str	r3, [r7, #20]

    /* Set the DMA transfer complete callback */
    hadc->DMA_Handle->XferCpltCallback = ADC_DMAConvCplt;
 8002c1a:	68fb      	ldr	r3, [r7, #12]
 8002c1c:	6b9b      	ldr	r3, [r3, #56]	@ 0x38
 8002c1e:	4a43      	ldr	r2, [pc, #268]	@ (8002d2c <HAL_ADC_Start_DMA+0x208>)
 8002c20:	63da      	str	r2, [r3, #60]	@ 0x3c

    /* Set the DMA half transfer complete callback */
    hadc->DMA_Handle->XferHalfCpltCallback = ADC_DMAHalfConvCplt;
 8002c22:	68fb      	ldr	r3, [r7, #12]
 8002c24:	6b9b      	ldr	r3, [r3, #56]	@ 0x38
 8002c26:	4a42      	ldr	r2, [pc, #264]	@ (8002d30 <HAL_ADC_Start_DMA+0x20c>)
 8002c28:	641a      	str	r2, [r3, #64]	@ 0x40

    /* Set the DMA error callback */
    hadc->DMA_Handle->XferErrorCallback = ADC_DMAError;
 8002c2a:	68fb      	ldr	r3, [r7, #12]
 8002c2c:	6b9b      	ldr	r3, [r3, #56]	@ 0x38
 8002c2e:	4a41      	ldr	r2, [pc, #260]	@ (8002d34 <HAL_ADC_Start_DMA+0x210>)
 8002c30:	64da      	str	r2, [r3, #76]	@ 0x4c
    /* Manage ADC and DMA start: ADC overrun interruption, DMA start, ADC     */
    /* start (in case of SW start):                                           */

    /* Clear regular group conversion flag and overrun flag */
    /* (To ensure of no unknown state from potential previous ADC operations) */
    __HAL_ADC_CLEAR_FLAG(hadc, ADC_FLAG_EOC | ADC_FLAG_OVR);
 8002c32:	68fb      	ldr	r3, [r7, #12]
 8002c34:	681b      	ldr	r3, [r3, #0]
 8002c36:	f06f 0222 	mvn.w	r2, #34	@ 0x22
 8002c3a:	601a      	str	r2, [r3, #0]

    /* Enable ADC overrun interrupt */
    __HAL_ADC_ENABLE_IT(hadc, ADC_IT_OVR);
 8002c3c:	68fb      	ldr	r3, [r7, #12]
 8002c3e:	681b      	ldr	r3, [r3, #0]
 8002c40:	685a      	ldr	r2, [r3, #4]
 8002c42:	68fb      	ldr	r3, [r7, #12]
 8002c44:	681b      	ldr	r3, [r3, #0]
 8002c46:	f042 6280 	orr.w	r2, r2, #67108864	@ 0x4000000
 8002c4a:	605a      	str	r2, [r3, #4]

    /* Enable ADC DMA mode */
    hadc->Instance->CR2 |= ADC_CR2_DMA;
 8002c4c:	68fb      	ldr	r3, [r7, #12]
 8002c4e:	681b      	ldr	r3, [r3, #0]
 8002c50:	689a      	ldr	r2, [r3, #8]
 8002c52:	68fb      	ldr	r3, [r7, #12]
 8002c54:	681b      	ldr	r3, [r3, #0]
 8002c56:	f442 7280 	orr.w	r2, r2, #256	@ 0x100
 8002c5a:	609a      	str	r2, [r3, #8]

    /* Start the DMA channel */
    HAL_DMA_Start_IT(hadc->DMA_Handle, (uint32_t)&hadc->Instance->DR, (uint32_t)pData, Length);
 8002c5c:	68fb      	ldr	r3, [r7, #12]
 8002c5e:	6b98      	ldr	r0, [r3, #56]	@ 0x38
 8002c60:	68fb      	ldr	r3, [r7, #12]
 8002c62:	681b      	ldr	r3, [r3, #0]
 8002c64:	334c      	adds	r3, #76	@ 0x4c
 8002c66:	4619      	mov	r1, r3
 8002c68:	68ba      	ldr	r2, [r7, #8]
 8002c6a:	687b      	ldr	r3, [r7, #4]
 8002c6c:	f000 fd72 	bl	8003754 <HAL_DMA_Start_IT>

    /* Check if Multimode enabled */
    if (HAL_IS_BIT_CLR(tmpADC_Common->CCR, ADC_CCR_MULTI))
 8002c70:	697b      	ldr	r3, [r7, #20]
 8002c72:	685b      	ldr	r3, [r3, #4]
 8002c74:	f003 031f 	and.w	r3, r3, #31
 8002c78:	2b00      	cmp	r3, #0
 8002c7a:	d12a      	bne.n	8002cd2 <HAL_ADC_Start_DMA+0x1ae>
    {
#if defined(ADC2) && defined(ADC3)
      if ((hadc->Instance == ADC1) || ((hadc->Instance == ADC2) && ((ADC->CCR & ADC_CCR_MULTI_Msk) < ADC_CCR_MULTI_0)) \
 8002c7c:	68fb      	ldr	r3, [r7, #12]
 8002c7e:	681b      	ldr	r3, [r3, #0]
 8002c80:	4a2d      	ldr	r2, [pc, #180]	@ (8002d38 <HAL_ADC_Start_DMA+0x214>)
 8002c82:	4293      	cmp	r3, r2
 8002c84:	d015      	beq.n	8002cb2 <HAL_ADC_Start_DMA+0x18e>
 8002c86:	68fb      	ldr	r3, [r7, #12]
 8002c88:	681b      	ldr	r3, [r3, #0]
 8002c8a:	4a2c      	ldr	r2, [pc, #176]	@ (8002d3c <HAL_ADC_Start_DMA+0x218>)
 8002c8c:	4293      	cmp	r3, r2
 8002c8e:	d105      	bne.n	8002c9c <HAL_ADC_Start_DMA+0x178>
 8002c90:	4b25      	ldr	r3, [pc, #148]	@ (8002d28 <HAL_ADC_Start_DMA+0x204>)
 8002c92:	685b      	ldr	r3, [r3, #4]
 8002c94:	f003 031f 	and.w	r3, r3, #31
 8002c98:	2b00      	cmp	r3, #0
 8002c9a:	d00a      	beq.n	8002cb2 <HAL_ADC_Start_DMA+0x18e>
          || ((hadc->Instance == ADC3) && ((ADC->CCR & ADC_CCR_MULTI_Msk) < ADC_CCR_MULTI_4)))
 8002c9c:	68fb      	ldr	r3, [r7, #12]
 8002c9e:	681b      	ldr	r3, [r3, #0]
 8002ca0:	4a27      	ldr	r2, [pc, #156]	@ (8002d40 <HAL_ADC_Start_DMA+0x21c>)
 8002ca2:	4293      	cmp	r3, r2
 8002ca4:	d136      	bne.n	8002d14 <HAL_ADC_Start_DMA+0x1f0>
 8002ca6:	4b20      	ldr	r3, [pc, #128]	@ (8002d28 <HAL_ADC_Start_DMA+0x204>)
 8002ca8:	685b      	ldr	r3, [r3, #4]
 8002caa:	f003 0310 	and.w	r3, r3, #16
 8002cae:	2b00      	cmp	r3, #0
 8002cb0:	d130      	bne.n	8002d14 <HAL_ADC_Start_DMA+0x1f0>
      {
#endif /* ADC2 || ADC3 */
        /* if no external trigger present enable software conversion of regular channels */
        if ((hadc->Instance->CR2 & ADC_CR2_EXTEN) == RESET)
 8002cb2:	68fb      	ldr	r3, [r7, #12]
 8002cb4:	681b      	ldr	r3, [r3, #0]
 8002cb6:	689b      	ldr	r3, [r3, #8]
 8002cb8:	f003 5340 	and.w	r3, r3, #805306368	@ 0x30000000
 8002cbc:	2b00      	cmp	r3, #0
 8002cbe:	d129      	bne.n	8002d14 <HAL_ADC_Start_DMA+0x1f0>
        {
          /* Enable the selected ADC software conversion for regular group */
          hadc->Instance->CR2 |= (uint32_t)ADC_CR2_SWSTART;
 8002cc0:	68fb      	ldr	r3, [r7, #12]
 8002cc2:	681b      	ldr	r3, [r3, #0]
 8002cc4:	689a      	ldr	r2, [r3, #8]
 8002cc6:	68fb      	ldr	r3, [r7, #12]
 8002cc8:	681b      	ldr	r3, [r3, #0]
 8002cca:	f042 4280 	orr.w	r2, r2, #1073741824	@ 0x40000000
 8002cce:	609a      	str	r2, [r3, #8]
 8002cd0:	e020      	b.n	8002d14 <HAL_ADC_Start_DMA+0x1f0>
#endif /* ADC2 || ADC3 */
    }
    else
    {
      /* if instance of handle correspond to ADC1 and  no external trigger present enable software conversion of regular channels */
      if ((hadc->Instance == ADC1) && ((hadc->Instance->CR2 & ADC_CR2_EXTEN) == RESET))
 8002cd2:	68fb      	ldr	r3, [r7, #12]
 8002cd4:	681b      	ldr	r3, [r3, #0]
 8002cd6:	4a18      	ldr	r2, [pc, #96]	@ (8002d38 <HAL_ADC_Start_DMA+0x214>)
 8002cd8:	4293      	cmp	r3, r2
 8002cda:	d11b      	bne.n	8002d14 <HAL_ADC_Start_DMA+0x1f0>
 8002cdc:	68fb      	ldr	r3, [r7, #12]
 8002cde:	681b      	ldr	r3, [r3, #0]
 8002ce0:	689b      	ldr	r3, [r3, #8]
 8002ce2:	f003 5340 	and.w	r3, r3, #805306368	@ 0x30000000
 8002ce6:	2b00      	cmp	r3, #0
 8002ce8:	d114      	bne.n	8002d14 <HAL_ADC_Start_DMA+0x1f0>
      {
        /* Enable the selected ADC software conversion for regular group */
        hadc->Instance->CR2 |= (uint32_t)ADC_CR2_SWSTART;
 8002cea:	68fb      	ldr	r3, [r7, #12]
 8002cec:	681b      	ldr	r3, [r3, #0]
 8002cee:	689a      	ldr	r2, [r3, #8]
 8002cf0:	68fb      	ldr	r3, [r7, #12]
 8002cf2:	681b      	ldr	r3, [r3, #0]
 8002cf4:	f042 4280 	orr.w	r2, r2, #1073741824	@ 0x40000000
 8002cf8:	609a      	str	r2, [r3, #8]
 8002cfa:	e00b      	b.n	8002d14 <HAL_ADC_Start_DMA+0x1f0>
    }
  }
  else
  {
    /* Update ADC state machine to error */
    SET_BIT(hadc->State, HAL_ADC_STATE_ERROR_INTERNAL);
 8002cfc:	68fb      	ldr	r3, [r7, #12]
 8002cfe:	6c1b      	ldr	r3, [r3, #64]	@ 0x40
 8002d00:	f043 0210 	orr.w	r2, r3, #16
 8002d04:	68fb      	ldr	r3, [r7, #12]
 8002d06:	641a      	str	r2, [r3, #64]	@ 0x40

    /* Set ADC error code to ADC IP internal error */
    SET_BIT(hadc->ErrorCode, HAL_ADC_ERROR_INTERNAL);
 8002d08:	68fb      	ldr	r3, [r7, #12]
 8002d0a:	6c5b      	ldr	r3, [r3, #68]	@ 0x44
 8002d0c:	f043 0201 	orr.w	r2, r3, #1
 8002d10:	68fb      	ldr	r3, [r7, #12]
 8002d12:	645a      	str	r2, [r3, #68]	@ 0x44
  }

  /* Return function status */
  return HAL_OK;
 8002d14:	2300      	movs	r3, #0
}
 8002d16:	4618      	mov	r0, r3
 8002d18:	3718      	adds	r7, #24
 8002d1a:	46bd      	mov	sp, r7
 8002d1c:	bd80      	pop	{r7, pc}
 8002d1e:	bf00      	nop
 8002d20:	20000014 	.word	0x20000014
 8002d24:	431bde83 	.word	0x431bde83
 8002d28:	40012300 	.word	0x40012300
 8002d2c:	080031dd 	.word	0x080031dd
 8002d30:	08003297 	.word	0x08003297
 8002d34:	080032b3 	.word	0x080032b3
 8002d38:	40012000 	.word	0x40012000
 8002d3c:	40012100 	.word	0x40012100
 8002d40:	40012200 	.word	0x40012200

08002d44 <HAL_ADC_ConvCpltCallback>:
  * @param  hadc pointer to a ADC_HandleTypeDef structure that contains
  *         the configuration information for the specified ADC.
  * @retval None
  */
__weak void HAL_ADC_ConvCpltCallback(ADC_HandleTypeDef *hadc)
{
 8002d44:	b480      	push	{r7}
 8002d46:	b083      	sub	sp, #12
 8002d48:	af00      	add	r7, sp, #0
 8002d4a:	6078      	str	r0, [r7, #4]
  /* Prevent unused argument(s) compilation warning */
  UNUSED(hadc);
  /* NOTE : This function Should not be modified, when the callback is needed,
            the HAL_ADC_ConvCpltCallback could be implemented in the user file
   */
}
 8002d4c:	bf00      	nop
 8002d4e:	370c      	adds	r7, #12
 8002d50:	46bd      	mov	sp, r7
 8002d52:	f85d 7b04 	ldr.w	r7, [sp], #4
 8002d56:	4770      	bx	lr

08002d58 <HAL_ADC_ConvHalfCpltCallback>:
  * @param  hadc pointer to a ADC_HandleTypeDef structure that contains
  *         the configuration information for the specified ADC.
  * @retval None
  */
__weak void HAL_ADC_ConvHalfCpltCallback(ADC_HandleTypeDef *hadc)
{
 8002d58:	b480      	push	{r7}
 8002d5a:	b083      	sub	sp, #12
 8002d5c:	af00      	add	r7, sp, #0
 8002d5e:	6078      	str	r0, [r7, #4]
  /* Prevent unused argument(s) compilation warning */
  UNUSED(hadc);
  /* NOTE : This function Should not be modified, when the callback is needed,
            the HAL_ADC_ConvHalfCpltCallback could be implemented in the user file
   */
}
 8002d60:	bf00      	nop
 8002d62:	370c      	adds	r7, #12
 8002d64:	46bd      	mov	sp, r7
 8002d66:	f85d 7b04 	ldr.w	r7, [sp], #4
 8002d6a:	4770      	bx	lr

08002d6c <HAL_ADC_ErrorCallback>:
  * @param  hadc pointer to a ADC_HandleTypeDef structure that contains
  *         the configuration information for the specified ADC.
  * @retval None
  */
__weak void HAL_ADC_ErrorCallback(ADC_HandleTypeDef *hadc)
{
 8002d6c:	b480      	push	{r7}
 8002d6e:	b083      	sub	sp, #12
 8002d70:	af00      	add	r7, sp, #0
 8002d72:	6078      	str	r0, [r7, #4]
  /* Prevent unused argument(s) compilation warning */
  UNUSED(hadc);
  /* NOTE : This function Should not be modified, when the callback is needed,
            the HAL_ADC_ErrorCallback could be implemented in the user file
   */
}
 8002d74:	bf00      	nop
 8002d76:	370c      	adds	r7, #12
 8002d78:	46bd      	mov	sp, r7
 8002d7a:	f85d 7b04 	ldr.w	r7, [sp], #4
 8002d7e:	4770      	bx	lr

08002d80 <HAL_ADC_ConfigChannel>:
*         the configuration information for the specified ADC.
* @param  sConfig ADC configuration structure.
* @retval HAL status
*/
HAL_StatusTypeDef HAL_ADC_ConfigChannel(ADC_HandleTypeDef *hadc, ADC_ChannelConfTypeDef *sConfig)
{
 8002d80:	b480      	push	{r7}
 8002d82:	b085      	sub	sp, #20
 8002d84:	af00      	add	r7, sp, #0
 8002d86:	6078      	str	r0, [r7, #4]
 8002d88:	6039      	str	r1, [r7, #0]
  __IO uint32_t counter = 0U;
 8002d8a:	2300      	movs	r3, #0
 8002d8c:	60bb      	str	r3, [r7, #8]
  assert_param(IS_ADC_CHANNEL(sConfig->Channel));
  assert_param(IS_ADC_REGULAR_RANK(sConfig->Rank));
  assert_param(IS_ADC_SAMPLE_TIME(sConfig->SamplingTime));

  /* Process locked */
  __HAL_LOCK(hadc);
 8002d8e:	687b      	ldr	r3, [r7, #4]
 8002d90:	f893 303c 	ldrb.w	r3, [r3, #60]	@ 0x3c
 8002d94:	2b01      	cmp	r3, #1
 8002d96:	d101      	bne.n	8002d9c <HAL_ADC_ConfigChannel+0x1c>
 8002d98:	2302      	movs	r3, #2
 8002d9a:	e113      	b.n	8002fc4 <HAL_ADC_ConfigChannel+0x244>
 8002d9c:	687b      	ldr	r3, [r7, #4]
 8002d9e:	2201      	movs	r2, #1
 8002da0:	f883 203c 	strb.w	r2, [r3, #60]	@ 0x3c

  /* if ADC_Channel_10 ... ADC_Channel_18 is selected */
  if (sConfig->Channel > ADC_CHANNEL_9)
 8002da4:	683b      	ldr	r3, [r7, #0]
 8002da6:	681b      	ldr	r3, [r3, #0]
 8002da8:	2b09      	cmp	r3, #9
 8002daa:	d925      	bls.n	8002df8 <HAL_ADC_ConfigChannel+0x78>
  {
    /* Clear the old sample time */
    hadc->Instance->SMPR1 &= ~ADC_SMPR1(ADC_SMPR1_SMP10, sConfig->Channel);
 8002dac:	687b      	ldr	r3, [r7, #4]
 8002dae:	681b      	ldr	r3, [r3, #0]
 8002db0:	68d9      	ldr	r1, [r3, #12]
 8002db2:	683b      	ldr	r3, [r7, #0]
 8002db4:	681b      	ldr	r3, [r3, #0]
 8002db6:	b29b      	uxth	r3, r3
 8002db8:	461a      	mov	r2, r3
 8002dba:	4613      	mov	r3, r2
 8002dbc:	005b      	lsls	r3, r3, #1
 8002dbe:	4413      	add	r3, r2
 8002dc0:	3b1e      	subs	r3, #30
 8002dc2:	2207      	movs	r2, #7
 8002dc4:	fa02 f303 	lsl.w	r3, r2, r3
 8002dc8:	43da      	mvns	r2, r3
 8002dca:	687b      	ldr	r3, [r7, #4]
 8002dcc:	681b      	ldr	r3, [r3, #0]
 8002dce:	400a      	ands	r2, r1
 8002dd0:	60da      	str	r2, [r3, #12]

    /* Set the new sample time */
    hadc->Instance->SMPR1 |= ADC_SMPR1(sConfig->SamplingTime, sConfig->Channel);
 8002dd2:	687b      	ldr	r3, [r7, #4]
 8002dd4:	681b      	ldr	r3, [r3, #0]
 8002dd6:	68d9      	ldr	r1, [r3, #12]
 8002dd8:	683b      	ldr	r3, [r7, #0]
 8002dda:	689a      	ldr	r2, [r3, #8]
 8002ddc:	683b      	ldr	r3, [r7, #0]
 8002dde:	681b      	ldr	r3, [r3, #0]
 8002de0:	b29b      	uxth	r3, r3
 8002de2:	4618      	mov	r0, r3
 8002de4:	4603      	mov	r3, r0
 8002de6:	005b      	lsls	r3, r3, #1
 8002de8:	4403      	add	r3, r0
 8002dea:	3b1e      	subs	r3, #30
 8002dec:	409a      	lsls	r2, r3
 8002dee:	687b      	ldr	r3, [r7, #4]
 8002df0:	681b      	ldr	r3, [r3, #0]
 8002df2:	430a      	orrs	r2, r1
 8002df4:	60da      	str	r2, [r3, #12]
 8002df6:	e022      	b.n	8002e3e <HAL_ADC_ConfigChannel+0xbe>
  }
  else /* ADC_Channel include in ADC_Channel_[0..9] */
  {
    /* Clear the old sample time */
    hadc->Instance->SMPR2 &= ~ADC_SMPR2(ADC_SMPR2_SMP0, sConfig->Channel);
 8002df8:	687b      	ldr	r3, [r7, #4]
 8002dfa:	681b      	ldr	r3, [r3, #0]
 8002dfc:	6919      	ldr	r1, [r3, #16]
 8002dfe:	683b      	ldr	r3, [r7, #0]
 8002e00:	681b      	ldr	r3, [r3, #0]
 8002e02:	b29b      	uxth	r3, r3
 8002e04:	461a      	mov	r2, r3
 8002e06:	4613      	mov	r3, r2
 8002e08:	005b      	lsls	r3, r3, #1
 8002e0a:	4413      	add	r3, r2
 8002e0c:	2207      	movs	r2, #7
 8002e0e:	fa02 f303 	lsl.w	r3, r2, r3
 8002e12:	43da      	mvns	r2, r3
 8002e14:	687b      	ldr	r3, [r7, #4]
 8002e16:	681b      	ldr	r3, [r3, #0]
 8002e18:	400a      	ands	r2, r1
 8002e1a:	611a      	str	r2, [r3, #16]

    /* Set the new sample time */
    hadc->Instance->SMPR2 |= ADC_SMPR2(sConfig->SamplingTime, sConfig->Channel);
 8002e1c:	687b      	ldr	r3, [r7, #4]
 8002e1e:	681b      	ldr	r3, [r3, #0]
 8002e20:	6919      	ldr	r1, [r3, #16]
 8002e22:	683b      	ldr	r3, [r7, #0]
 8002e24:	689a      	ldr	r2, [r3, #8]
 8002e26:	683b      	ldr	r3, [r7, #0]
 8002e28:	681b      	ldr	r3, [r3, #0]
 8002e2a:	b29b      	uxth	r3, r3
 8002e2c:	4618      	mov	r0, r3
 8002e2e:	4603      	mov	r3, r0
 8002e30:	005b      	lsls	r3, r3, #1
 8002e32:	4403      	add	r3, r0
 8002e34:	409a      	lsls	r2, r3
 8002e36:	687b      	ldr	r3, [r7, #4]
 8002e38:	681b      	ldr	r3, [r3, #0]
 8002e3a:	430a      	orrs	r2, r1
 8002e3c:	611a      	str	r2, [r3, #16]
  }

  /* For Rank 1 to 6 */
  if (sConfig->Rank < 7U)
 8002e3e:	683b      	ldr	r3, [r7, #0]
 8002e40:	685b      	ldr	r3, [r3, #4]
 8002e42:	2b06      	cmp	r3, #6
 8002e44:	d824      	bhi.n	8002e90 <HAL_ADC_ConfigChannel+0x110>
  {
    /* Clear the old SQx bits for the selected rank */
    hadc->Instance->SQR3 &= ~ADC_SQR3_RK(ADC_SQR3_SQ1, sConfig->Rank);
 8002e46:	687b      	ldr	r3, [r7, #4]
 8002e48:	681b      	ldr	r3, [r3, #0]
 8002e4a:	6b59      	ldr	r1, [r3, #52]	@ 0x34
 8002e4c:	683b      	ldr	r3, [r7, #0]
 8002e4e:	685a      	ldr	r2, [r3, #4]
 8002e50:	4613      	mov	r3, r2
 8002e52:	009b      	lsls	r3, r3, #2
 8002e54:	4413      	add	r3, r2
 8002e56:	3b05      	subs	r3, #5
 8002e58:	221f      	movs	r2, #31
 8002e5a:	fa02 f303 	lsl.w	r3, r2, r3
 8002e5e:	43da      	mvns	r2, r3
 8002e60:	687b      	ldr	r3, [r7, #4]
 8002e62:	681b      	ldr	r3, [r3, #0]
 8002e64:	400a      	ands	r2, r1
 8002e66:	635a      	str	r2, [r3, #52]	@ 0x34

    /* Set the SQx bits for the selected rank */
    hadc->Instance->SQR3 |= ADC_SQR3_RK(sConfig->Channel, sConfig->Rank);
 8002e68:	687b      	ldr	r3, [r7, #4]
 8002e6a:	681b      	ldr	r3, [r3, #0]
 8002e6c:	6b59      	ldr	r1, [r3, #52]	@ 0x34
 8002e6e:	683b      	ldr	r3, [r7, #0]
 8002e70:	681b      	ldr	r3, [r3, #0]
 8002e72:	b29b      	uxth	r3, r3
 8002e74:	4618      	mov	r0, r3
 8002e76:	683b      	ldr	r3, [r7, #0]
 8002e78:	685a      	ldr	r2, [r3, #4]
 8002e7a:	4613      	mov	r3, r2
 8002e7c:	009b      	lsls	r3, r3, #2
 8002e7e:	4413      	add	r3, r2
 8002e80:	3b05      	subs	r3, #5
 8002e82:	fa00 f203 	lsl.w	r2, r0, r3
 8002e86:	687b      	ldr	r3, [r7, #4]
 8002e88:	681b      	ldr	r3, [r3, #0]
 8002e8a:	430a      	orrs	r2, r1
 8002e8c:	635a      	str	r2, [r3, #52]	@ 0x34
 8002e8e:	e04c      	b.n	8002f2a <HAL_ADC_ConfigChannel+0x1aa>
  }
  /* For Rank 7 to 12 */
  else if (sConfig->Rank < 13U)
 8002e90:	683b      	ldr	r3, [r7, #0]
 8002e92:	685b      	ldr	r3, [r3, #4]
 8002e94:	2b0c      	cmp	r3, #12
 8002e96:	d824      	bhi.n	8002ee2 <HAL_ADC_ConfigChannel+0x162>
  {
    /* Clear the old SQx bits for the selected rank */
    hadc->Instance->SQR2 &= ~ADC_SQR2_RK(ADC_SQR2_SQ7, sConfig->Rank);
 8002e98:	687b      	ldr	r3, [r7, #4]
 8002e9a:	681b      	ldr	r3, [r3, #0]
 8002e9c:	6b19      	ldr	r1, [r3, #48]	@ 0x30
 8002e9e:	683b      	ldr	r3, [r7, #0]
 8002ea0:	685a      	ldr	r2, [r3, #4]
 8002ea2:	4613      	mov	r3, r2
 8002ea4:	009b      	lsls	r3, r3, #2
 8002ea6:	4413      	add	r3, r2
 8002ea8:	3b23      	subs	r3, #35	@ 0x23
 8002eaa:	221f      	movs	r2, #31
 8002eac:	fa02 f303 	lsl.w	r3, r2, r3
 8002eb0:	43da      	mvns	r2, r3
 8002eb2:	687b      	ldr	r3, [r7, #4]
 8002eb4:	681b      	ldr	r3, [r3, #0]
 8002eb6:	400a      	ands	r2, r1
 8002eb8:	631a      	str	r2, [r3, #48]	@ 0x30

    /* Set the SQx bits for the selected rank */
    hadc->Instance->SQR2 |= ADC_SQR2_RK(sConfig->Channel, sConfig->Rank);
 8002eba:	687b      	ldr	r3, [r7, #4]
 8002ebc:	681b      	ldr	r3, [r3, #0]
 8002ebe:	6b19      	ldr	r1, [r3, #48]	@ 0x30
 8002ec0:	683b      	ldr	r3, [r7, #0]
 8002ec2:	681b      	ldr	r3, [r3, #0]
 8002ec4:	b29b      	uxth	r3, r3
 8002ec6:	4618      	mov	r0, r3
 8002ec8:	683b      	ldr	r3, [r7, #0]
 8002eca:	685a      	ldr	r2, [r3, #4]
 8002ecc:	4613      	mov	r3, r2
 8002ece:	009b      	lsls	r3, r3, #2
 8002ed0:	4413      	add	r3, r2
 8002ed2:	3b23      	subs	r3, #35	@ 0x23
 8002ed4:	fa00 f203 	lsl.w	r2, r0, r3
 8002ed8:	687b      	ldr	r3, [r7, #4]
 8002eda:	681b      	ldr	r3, [r3, #0]
 8002edc:	430a      	orrs	r2, r1
 8002ede:	631a      	str	r2, [r3, #48]	@ 0x30
 8002ee0:	e023      	b.n	8002f2a <HAL_ADC_ConfigChannel+0x1aa>
  }
  /* For Rank 13 to 16 */
  else
  {
    /* Clear the old SQx bits for the selected rank */
    hadc->Instance->SQR1 &= ~ADC_SQR1_RK(ADC_SQR1_SQ13, sConfig->Rank);
 8002ee2:	687b      	ldr	r3, [r7, #4]
 8002ee4:	681b      	ldr	r3, [r3, #0]
 8002ee6:	6ad9      	ldr	r1, [r3, #44]	@ 0x2c
 8002ee8:	683b      	ldr	r3, [r7, #0]
 8002eea:	685a      	ldr	r2, [r3, #4]
 8002eec:	4613      	mov	r3, r2
 8002eee:	009b      	lsls	r3, r3, #2
 8002ef0:	4413      	add	r3, r2
 8002ef2:	3b41      	subs	r3, #65	@ 0x41
 8002ef4:	221f      	movs	r2, #31
 8002ef6:	fa02 f303 	lsl.w	r3, r2, r3
 8002efa:	43da      	mvns	r2, r3
 8002efc:	687b      	ldr	r3, [r7, #4]
 8002efe:	681b      	ldr	r3, [r3, #0]
 8002f00:	400a      	ands	r2, r1
 8002f02:	62da      	str	r2, [r3, #44]	@ 0x2c

    /* Set the SQx bits for the selected rank */
    hadc->Instance->SQR1 |= ADC_SQR1_RK(sConfig->Channel, sConfig->Rank);
 8002f04:	687b      	ldr	r3, [r7, #4]
 8002f06:	681b      	ldr	r3, [r3, #0]
 8002f08:	6ad9      	ldr	r1, [r3, #44]	@ 0x2c
 8002f0a:	683b      	ldr	r3, [r7, #0]
 8002f0c:	681b      	ldr	r3, [r3, #0]
 8002f0e:	b29b      	uxth	r3, r3
 8002f10:	4618      	mov	r0, r3
 8002f12:	683b      	ldr	r3, [r7, #0]
 8002f14:	685a      	ldr	r2, [r3, #4]
 8002f16:	4613      	mov	r3, r2
 8002f18:	009b      	lsls	r3, r3, #2
 8002f1a:	4413      	add	r3, r2
 8002f1c:	3b41      	subs	r3, #65	@ 0x41
 8002f1e:	fa00 f203 	lsl.w	r2, r0, r3
 8002f22:	687b      	ldr	r3, [r7, #4]
 8002f24:	681b      	ldr	r3, [r3, #0]
 8002f26:	430a      	orrs	r2, r1
 8002f28:	62da      	str	r2, [r3, #44]	@ 0x2c
  }

  /* Pointer to the common control register to which is belonging hadc    */
  /* (Depending on STM32F4 product, there may be up to 3 ADCs and 1 common */
  /* control register)                                                    */
  tmpADC_Common = ADC_COMMON_REGISTER(hadc);
 8002f2a:	4b29      	ldr	r3, [pc, #164]	@ (8002fd0 <HAL_ADC_ConfigChannel+0x250>)
 8002f2c:	60fb      	str	r3, [r7, #12]

  /* if ADC1 Channel_18 is selected for VBAT Channel ennable VBATE */
  if ((hadc->Instance == ADC1) && (sConfig->Channel == ADC_CHANNEL_VBAT))
 8002f2e:	687b      	ldr	r3, [r7, #4]
 8002f30:	681b      	ldr	r3, [r3, #0]
 8002f32:	4a28      	ldr	r2, [pc, #160]	@ (8002fd4 <HAL_ADC_ConfigChannel+0x254>)
 8002f34:	4293      	cmp	r3, r2
 8002f36:	d10f      	bne.n	8002f58 <HAL_ADC_ConfigChannel+0x1d8>
 8002f38:	683b      	ldr	r3, [r7, #0]
 8002f3a:	681b      	ldr	r3, [r3, #0]
 8002f3c:	2b12      	cmp	r3, #18
 8002f3e:	d10b      	bne.n	8002f58 <HAL_ADC_ConfigChannel+0x1d8>
  {
    /* Disable the TEMPSENSOR channel in case of using board with multiplixed ADC_CHANNEL_VBAT & ADC_CHANNEL_TEMPSENSOR*/
    if ((uint16_t)ADC_CHANNEL_TEMPSENSOR == (uint16_t)ADC_CHANNEL_VBAT)
    {
      tmpADC_Common->CCR &= ~ADC_CCR_TSVREFE;
 8002f40:	68fb      	ldr	r3, [r7, #12]
 8002f42:	685b      	ldr	r3, [r3, #4]
 8002f44:	f423 0200 	bic.w	r2, r3, #8388608	@ 0x800000
 8002f48:	68fb      	ldr	r3, [r7, #12]
 8002f4a:	605a      	str	r2, [r3, #4]
    }
    /* Enable the VBAT channel*/
    tmpADC_Common->CCR |= ADC_CCR_VBATE;
 8002f4c:	68fb      	ldr	r3, [r7, #12]
 8002f4e:	685b      	ldr	r3, [r3, #4]
 8002f50:	f443 0280 	orr.w	r2, r3, #4194304	@ 0x400000
 8002f54:	68fb      	ldr	r3, [r7, #12]
 8002f56:	605a      	str	r2, [r3, #4]
  }

  /* if ADC1 Channel_16 or Channel_18 is selected for Temperature sensor or
     Channel_17 is selected for VREFINT enable TSVREFE */
  if ((hadc->Instance == ADC1) && ((sConfig->Channel == ADC_CHANNEL_TEMPSENSOR) || (sConfig->Channel == ADC_CHANNEL_VREFINT)))
 8002f58:	687b      	ldr	r3, [r7, #4]
 8002f5a:	681b      	ldr	r3, [r3, #0]
 8002f5c:	4a1d      	ldr	r2, [pc, #116]	@ (8002fd4 <HAL_ADC_ConfigChannel+0x254>)
 8002f5e:	4293      	cmp	r3, r2
 8002f60:	d12b      	bne.n	8002fba <HAL_ADC_ConfigChannel+0x23a>
 8002f62:	683b      	ldr	r3, [r7, #0]
 8002f64:	681b      	ldr	r3, [r3, #0]
 8002f66:	4a1c      	ldr	r2, [pc, #112]	@ (8002fd8 <HAL_ADC_ConfigChannel+0x258>)
 8002f68:	4293      	cmp	r3, r2
 8002f6a:	d003      	beq.n	8002f74 <HAL_ADC_ConfigChannel+0x1f4>
 8002f6c:	683b      	ldr	r3, [r7, #0]
 8002f6e:	681b      	ldr	r3, [r3, #0]
 8002f70:	2b11      	cmp	r3, #17
 8002f72:	d122      	bne.n	8002fba <HAL_ADC_ConfigChannel+0x23a>
  {
    /* Disable the VBAT channel in case of using board with multiplixed ADC_CHANNEL_VBAT & ADC_CHANNEL_TEMPSENSOR*/
    if ((uint16_t)ADC_CHANNEL_TEMPSENSOR == (uint16_t)ADC_CHANNEL_VBAT)
    {
      tmpADC_Common->CCR &= ~ADC_CCR_VBATE;
 8002f74:	68fb      	ldr	r3, [r7, #12]
 8002f76:	685b      	ldr	r3, [r3, #4]
 8002f78:	f423 0280 	bic.w	r2, r3, #4194304	@ 0x400000
 8002f7c:	68fb      	ldr	r3, [r7, #12]
 8002f7e:	605a      	str	r2, [r3, #4]
    }
    /* Enable the Temperature sensor and VREFINT channel*/
    tmpADC_Common->CCR |= ADC_CCR_TSVREFE;
 8002f80:	68fb      	ldr	r3, [r7, #12]
 8002f82:	685b      	ldr	r3, [r3, #4]
 8002f84:	f443 0200 	orr.w	r2, r3, #8388608	@ 0x800000
 8002f88:	68fb      	ldr	r3, [r7, #12]
 8002f8a:	605a      	str	r2, [r3, #4]

    if (sConfig->Channel == ADC_CHANNEL_TEMPSENSOR)
 8002f8c:	683b      	ldr	r3, [r7, #0]
 8002f8e:	681b      	ldr	r3, [r3, #0]
 8002f90:	4a11      	ldr	r2, [pc, #68]	@ (8002fd8 <HAL_ADC_ConfigChannel+0x258>)
 8002f92:	4293      	cmp	r3, r2
 8002f94:	d111      	bne.n	8002fba <HAL_ADC_ConfigChannel+0x23a>
    {
      /* Delay for temperature sensor stabilization time */
      /* Compute number of CPU cycles to wait for */
      counter = (ADC_TEMPSENSOR_DELAY_US * (SystemCoreClock / 1000000U));
 8002f96:	4b11      	ldr	r3, [pc, #68]	@ (8002fdc <HAL_ADC_ConfigChannel+0x25c>)
 8002f98:	681b      	ldr	r3, [r3, #0]
 8002f9a:	4a11      	ldr	r2, [pc, #68]	@ (8002fe0 <HAL_ADC_ConfigChannel+0x260>)
 8002f9c:	fba2 2303 	umull	r2, r3, r2, r3
 8002fa0:	0c9a      	lsrs	r2, r3, #18
 8002fa2:	4613      	mov	r3, r2
 8002fa4:	009b      	lsls	r3, r3, #2
 8002fa6:	4413      	add	r3, r2
 8002fa8:	005b      	lsls	r3, r3, #1
 8002faa:	60bb      	str	r3, [r7, #8]
      while (counter != 0U)
 8002fac:	e002      	b.n	8002fb4 <HAL_ADC_ConfigChannel+0x234>
      {
        counter--;
 8002fae:	68bb      	ldr	r3, [r7, #8]
 8002fb0:	3b01      	subs	r3, #1
 8002fb2:	60bb      	str	r3, [r7, #8]
      while (counter != 0U)
 8002fb4:	68bb      	ldr	r3, [r7, #8]
 8002fb6:	2b00      	cmp	r3, #0
 8002fb8:	d1f9      	bne.n	8002fae <HAL_ADC_ConfigChannel+0x22e>
      }
    }
  }

  /* Process unlocked */
  __HAL_UNLOCK(hadc);
 8002fba:	687b      	ldr	r3, [r7, #4]
 8002fbc:	2200      	movs	r2, #0
 8002fbe:	f883 203c 	strb.w	r2, [r3, #60]	@ 0x3c

  /* Return function status */
  return HAL_OK;
 8002fc2:	2300      	movs	r3, #0
}
 8002fc4:	4618      	mov	r0, r3
 8002fc6:	3714      	adds	r7, #20
 8002fc8:	46bd      	mov	sp, r7
 8002fca:	f85d 7b04 	ldr.w	r7, [sp], #4
 8002fce:	4770      	bx	lr
 8002fd0:	40012300 	.word	0x40012300
 8002fd4:	40012000 	.word	0x40012000
 8002fd8:	10000012 	.word	0x10000012
 8002fdc:	20000014 	.word	0x20000014
 8002fe0:	431bde83 	.word	0x431bde83

08002fe4 <ADC_Init>:
  * @param  hadc pointer to a ADC_HandleTypeDef structure that contains
  *         the configuration information for the specified ADC.
  * @retval None
  */
static void ADC_Init(ADC_HandleTypeDef *hadc)
{
 8002fe4:	b480      	push	{r7}
 8002fe6:	b085      	sub	sp, #20
 8002fe8:	af00      	add	r7, sp, #0
 8002fea:	6078      	str	r0, [r7, #4]

  /* Set ADC parameters */
  /* Pointer to the common control register to which is belonging hadc    */
  /* (Depending on STM32F4 product, there may be up to 3 ADCs and 1 common */
  /* control register)                                                    */
  tmpADC_Common = ADC_COMMON_REGISTER(hadc);
 8002fec:	4b79      	ldr	r3, [pc, #484]	@ (80031d4 <ADC_Init+0x1f0>)
 8002fee:	60fb      	str	r3, [r7, #12]

  /* Set the ADC clock prescaler */
  tmpADC_Common->CCR &= ~(ADC_CCR_ADCPRE);
 8002ff0:	68fb      	ldr	r3, [r7, #12]
 8002ff2:	685b      	ldr	r3, [r3, #4]
 8002ff4:	f423 3240 	bic.w	r2, r3, #196608	@ 0x30000
 8002ff8:	68fb      	ldr	r3, [r7, #12]
 8002ffa:	605a      	str	r2, [r3, #4]
  tmpADC_Common->CCR |=  hadc->Init.ClockPrescaler;
 8002ffc:	68fb      	ldr	r3, [r7, #12]
 8002ffe:	685a      	ldr	r2, [r3, #4]
 8003000:	687b      	ldr	r3, [r7, #4]
 8003002:	685b      	ldr	r3, [r3, #4]
 8003004:	431a      	orrs	r2, r3
 8003006:	68fb      	ldr	r3, [r7, #12]
 8003008:	605a      	str	r2, [r3, #4]

  /* Set ADC scan mode */
  hadc->Instance->CR1 &= ~(ADC_CR1_SCAN);
 800300a:	687b      	ldr	r3, [r7, #4]
 800300c:	681b      	ldr	r3, [r3, #0]
 800300e:	685a      	ldr	r2, [r3, #4]
 8003010:	687b      	ldr	r3, [r7, #4]
 8003012:	681b      	ldr	r3, [r3, #0]
 8003014:	f422 7280 	bic.w	r2, r2, #256	@ 0x100
 8003018:	605a      	str	r2, [r3, #4]
  hadc->Instance->CR1 |=  ADC_CR1_SCANCONV(hadc->Init.ScanConvMode);
 800301a:	687b      	ldr	r3, [r7, #4]
 800301c:	681b      	ldr	r3, [r3, #0]
 800301e:	6859      	ldr	r1, [r3, #4]
 8003020:	687b      	ldr	r3, [r7, #4]
 8003022:	691b      	ldr	r3, [r3, #16]
 8003024:	021a      	lsls	r2, r3, #8
 8003026:	687b      	ldr	r3, [r7, #4]
 8003028:	681b      	ldr	r3, [r3, #0]
 800302a:	430a      	orrs	r2, r1
 800302c:	605a      	str	r2, [r3, #4]

  /* Set ADC resolution */
  hadc->Instance->CR1 &= ~(ADC_CR1_RES);
 800302e:	687b      	ldr	r3, [r7, #4]
 8003030:	681b      	ldr	r3, [r3, #0]
 8003032:	685a      	ldr	r2, [r3, #4]
 8003034:	687b      	ldr	r3, [r7, #4]
 8003036:	681b      	ldr	r3, [r3, #0]
 8003038:	f022 7240 	bic.w	r2, r2, #50331648	@ 0x3000000
 800303c:	605a      	str	r2, [r3, #4]
  hadc->Instance->CR1 |=  hadc->Init.Resolution;
 800303e:	687b      	ldr	r3, [r7, #4]
 8003040:	681b      	ldr	r3, [r3, #0]
 8003042:	6859      	ldr	r1, [r3, #4]
 8003044:	687b      	ldr	r3, [r7, #4]
 8003046:	689a      	ldr	r2, [r3, #8]
 8003048:	687b      	ldr	r3, [r7, #4]
 800304a:	681b      	ldr	r3, [r3, #0]
 800304c:	430a      	orrs	r2, r1
 800304e:	605a      	str	r2, [r3, #4]

  /* Set ADC data alignment */
  hadc->Instance->CR2 &= ~(ADC_CR2_ALIGN);
 8003050:	687b      	ldr	r3, [r7, #4]
 8003052:	681b      	ldr	r3, [r3, #0]
 8003054:	689a      	ldr	r2, [r3, #8]
 8003056:	687b      	ldr	r3, [r7, #4]
 8003058:	681b      	ldr	r3, [r3, #0]
 800305a:	f422 6200 	bic.w	r2, r2, #2048	@ 0x800
 800305e:	609a      	str	r2, [r3, #8]
  hadc->Instance->CR2 |= hadc->Init.DataAlign;
 8003060:	687b      	ldr	r3, [r7, #4]
 8003062:	681b      	ldr	r3, [r3, #0]
 8003064:	6899      	ldr	r1, [r3, #8]
 8003066:	687b      	ldr	r3, [r7, #4]
 8003068:	68da      	ldr	r2, [r3, #12]
 800306a:	687b      	ldr	r3, [r7, #4]
 800306c:	681b      	ldr	r3, [r3, #0]
 800306e:	430a      	orrs	r2, r1
 8003070:	609a      	str	r2, [r3, #8]
  /* Enable external trigger if trigger selection is different of software  */
  /* start.                                                                 */
  /* Note: This configuration keeps the hardware feature of parameter       */
  /*       ExternalTrigConvEdge "trigger edge none" equivalent to           */
  /*       software start.                                                  */
  if (hadc->Init.ExternalTrigConv != ADC_SOFTWARE_START)
 8003072:	687b      	ldr	r3, [r7, #4]
 8003074:	6a9b      	ldr	r3, [r3, #40]	@ 0x28
 8003076:	4a58      	ldr	r2, [pc, #352]	@ (80031d8 <ADC_Init+0x1f4>)
 8003078:	4293      	cmp	r3, r2
 800307a:	d022      	beq.n	80030c2 <ADC_Init+0xde>
  {
    /* Select external trigger to start conversion */
    hadc->Instance->CR2 &= ~(ADC_CR2_EXTSEL);
 800307c:	687b      	ldr	r3, [r7, #4]
 800307e:	681b      	ldr	r3, [r3, #0]
 8003080:	689a      	ldr	r2, [r3, #8]
 8003082:	687b      	ldr	r3, [r7, #4]
 8003084:	681b      	ldr	r3, [r3, #0]
 8003086:	f022 6270 	bic.w	r2, r2, #251658240	@ 0xf000000
 800308a:	609a      	str	r2, [r3, #8]
    hadc->Instance->CR2 |= hadc->Init.ExternalTrigConv;
 800308c:	687b      	ldr	r3, [r7, #4]
 800308e:	681b      	ldr	r3, [r3, #0]
 8003090:	6899      	ldr	r1, [r3, #8]
 8003092:	687b      	ldr	r3, [r7, #4]
 8003094:	6a9a      	ldr	r2, [r3, #40]	@ 0x28
 8003096:	687b      	ldr	r3, [r7, #4]
 8003098:	681b      	ldr	r3, [r3, #0]
 800309a:	430a      	orrs	r2, r1
 800309c:	609a      	str	r2, [r3, #8]

    /* Select external trigger polarity */
    hadc->Instance->CR2 &= ~(ADC_CR2_EXTEN);
 800309e:	687b      	ldr	r3, [r7, #4]
 80030a0:	681b      	ldr	r3, [r3, #0]
 80030a2:	689a      	ldr	r2, [r3, #8]
 80030a4:	687b      	ldr	r3, [r7, #4]
 80030a6:	681b      	ldr	r3, [r3, #0]
 80030a8:	f022 5240 	bic.w	r2, r2, #805306368	@ 0x30000000
 80030ac:	609a      	str	r2, [r3, #8]
    hadc->Instance->CR2 |= hadc->Init.ExternalTrigConvEdge;
 80030ae:	687b      	ldr	r3, [r7, #4]
 80030b0:	681b      	ldr	r3, [r3, #0]
 80030b2:	6899      	ldr	r1, [r3, #8]
 80030b4:	687b      	ldr	r3, [r7, #4]
 80030b6:	6ada      	ldr	r2, [r3, #44]	@ 0x2c
 80030b8:	687b      	ldr	r3, [r7, #4]
 80030ba:	681b      	ldr	r3, [r3, #0]
 80030bc:	430a      	orrs	r2, r1
 80030be:	609a      	str	r2, [r3, #8]
 80030c0:	e00f      	b.n	80030e2 <ADC_Init+0xfe>
  }
  else
  {
    /* Reset the external trigger */
    hadc->Instance->CR2 &= ~(ADC_CR2_EXTSEL);
 80030c2:	687b      	ldr	r3, [r7, #4]
 80030c4:	681b      	ldr	r3, [r3, #0]
 80030c6:	689a      	ldr	r2, [r3, #8]
 80030c8:	687b      	ldr	r3, [r7, #4]
 80030ca:	681b      	ldr	r3, [r3, #0]
 80030cc:	f022 6270 	bic.w	r2, r2, #251658240	@ 0xf000000
 80030d0:	609a      	str	r2, [r3, #8]
    hadc->Instance->CR2 &= ~(ADC_CR2_EXTEN);
 80030d2:	687b      	ldr	r3, [r7, #4]
 80030d4:	681b      	ldr	r3, [r3, #0]
 80030d6:	689a      	ldr	r2, [r3, #8]
 80030d8:	687b      	ldr	r3, [r7, #4]
 80030da:	681b      	ldr	r3, [r3, #0]
 80030dc:	f022 5240 	bic.w	r2, r2, #805306368	@ 0x30000000
 80030e0:	609a      	str	r2, [r3, #8]
  }

  /* Enable or disable ADC continuous conversion mode */
  hadc->Instance->CR2 &= ~(ADC_CR2_CONT);
 80030e2:	687b      	ldr	r3, [r7, #4]
 80030e4:	681b      	ldr	r3, [r3, #0]
 80030e6:	689a      	ldr	r2, [r3, #8]
 80030e8:	687b      	ldr	r3, [r7, #4]
 80030ea:	681b      	ldr	r3, [r3, #0]
 80030ec:	f022 0202 	bic.w	r2, r2, #2
 80030f0:	609a      	str	r2, [r3, #8]
  hadc->Instance->CR2 |= ADC_CR2_CONTINUOUS((uint32_t)hadc->Init.ContinuousConvMode);
 80030f2:	687b      	ldr	r3, [r7, #4]
 80030f4:	681b      	ldr	r3, [r3, #0]
 80030f6:	6899      	ldr	r1, [r3, #8]
 80030f8:	687b      	ldr	r3, [r7, #4]
 80030fa:	7e1b      	ldrb	r3, [r3, #24]
 80030fc:	005a      	lsls	r2, r3, #1
 80030fe:	687b      	ldr	r3, [r7, #4]
 8003100:	681b      	ldr	r3, [r3, #0]
 8003102:	430a      	orrs	r2, r1
 8003104:	609a      	str	r2, [r3, #8]

  if (hadc->Init.DiscontinuousConvMode != DISABLE)
 8003106:	687b      	ldr	r3, [r7, #4]
 8003108:	f893 3020 	ldrb.w	r3, [r3, #32]
 800310c:	2b00      	cmp	r3, #0
 800310e:	d01b      	beq.n	8003148 <ADC_Init+0x164>
  {
    assert_param(IS_ADC_REGULAR_DISC_NUMBER(hadc->Init.NbrOfDiscConversion));

    /* Enable the selected ADC regular discontinuous mode */
    hadc->Instance->CR1 |= (uint32_t)ADC_CR1_DISCEN;
 8003110:	687b      	ldr	r3, [r7, #4]
 8003112:	681b      	ldr	r3, [r3, #0]
 8003114:	685a      	ldr	r2, [r3, #4]
 8003116:	687b      	ldr	r3, [r7, #4]
 8003118:	681b      	ldr	r3, [r3, #0]
 800311a:	f442 6200 	orr.w	r2, r2, #2048	@ 0x800
 800311e:	605a      	str	r2, [r3, #4]

    /* Set the number of channels to be converted in discontinuous mode */
    hadc->Instance->CR1 &= ~(ADC_CR1_DISCNUM);
 8003120:	687b      	ldr	r3, [r7, #4]
 8003122:	681b      	ldr	r3, [r3, #0]
 8003124:	685a      	ldr	r2, [r3, #4]
 8003126:	687b      	ldr	r3, [r7, #4]
 8003128:	681b      	ldr	r3, [r3, #0]
 800312a:	f422 4260 	bic.w	r2, r2, #57344	@ 0xe000
 800312e:	605a      	str	r2, [r3, #4]
    hadc->Instance->CR1 |=  ADC_CR1_DISCONTINUOUS(hadc->Init.NbrOfDiscConversion);
 8003130:	687b      	ldr	r3, [r7, #4]
 8003132:	681b      	ldr	r3, [r3, #0]
 8003134:	6859      	ldr	r1, [r3, #4]
 8003136:	687b      	ldr	r3, [r7, #4]
 8003138:	6a5b      	ldr	r3, [r3, #36]	@ 0x24
 800313a:	3b01      	subs	r3, #1
 800313c:	035a      	lsls	r2, r3, #13
 800313e:	687b      	ldr	r3, [r7, #4]
 8003140:	681b      	ldr	r3, [r3, #0]
 8003142:	430a      	orrs	r2, r1
 8003144:	605a      	str	r2, [r3, #4]
 8003146:	e007      	b.n	8003158 <ADC_Init+0x174>
  }
  else
  {
    /* Disable the selected ADC regular discontinuous mode */
    hadc->Instance->CR1 &= ~(ADC_CR1_DISCEN);
 8003148:	687b      	ldr	r3, [r7, #4]
 800314a:	681b      	ldr	r3, [r3, #0]
 800314c:	685a      	ldr	r2, [r3, #4]
 800314e:	687b      	ldr	r3, [r7, #4]
 8003150:	681b      	ldr	r3, [r3, #0]
 8003152:	f422 6200 	bic.w	r2, r2, #2048	@ 0x800
 8003156:	605a      	str	r2, [r3, #4]
  }

  /* Set ADC number of conversion */
  hadc->Instance->SQR1 &= ~(ADC_SQR1_L);
 8003158:	687b      	ldr	r3, [r7, #4]
 800315a:	681b      	ldr	r3, [r3, #0]
 800315c:	6ada      	ldr	r2, [r3, #44]	@ 0x2c
 800315e:	687b      	ldr	r3, [r7, #4]
 8003160:	681b      	ldr	r3, [r3, #0]
 8003162:	f422 0270 	bic.w	r2, r2, #15728640	@ 0xf00000
 8003166:	62da      	str	r2, [r3, #44]	@ 0x2c
  hadc->Instance->SQR1 |=  ADC_SQR1(hadc->Init.NbrOfConversion);
 8003168:	687b      	ldr	r3, [r7, #4]
 800316a:	681b      	ldr	r3, [r3, #0]
 800316c:	6ad9      	ldr	r1, [r3, #44]	@ 0x2c
 800316e:	687b      	ldr	r3, [r7, #4]
 8003170:	69db      	ldr	r3, [r3, #28]
 8003172:	3b01      	subs	r3, #1
 8003174:	051a      	lsls	r2, r3, #20
 8003176:	687b      	ldr	r3, [r7, #4]
 8003178:	681b      	ldr	r3, [r3, #0]
 800317a:	430a      	orrs	r2, r1
 800317c:	62da      	str	r2, [r3, #44]	@ 0x2c

  /* Enable or disable ADC DMA continuous request */
  hadc->Instance->CR2 &= ~(ADC_CR2_DDS);
 800317e:	687b      	ldr	r3, [r7, #4]
 8003180:	681b      	ldr	r3, [r3, #0]
 8003182:	689a      	ldr	r2, [r3, #8]
 8003184:	687b      	ldr	r3, [r7, #4]
 8003186:	681b      	ldr	r3, [r3, #0]
 8003188:	f422 7200 	bic.w	r2, r2, #512	@ 0x200
 800318c:	609a      	str	r2, [r3, #8]
  hadc->Instance->CR2 |= ADC_CR2_DMAContReq((uint32_t)hadc->Init.DMAContinuousRequests);
 800318e:	687b      	ldr	r3, [r7, #4]
 8003190:	681b      	ldr	r3, [r3, #0]
 8003192:	6899      	ldr	r1, [r3, #8]
 8003194:	687b      	ldr	r3, [r7, #4]
 8003196:	f893 3030 	ldrb.w	r3, [r3, #48]	@ 0x30
 800319a:	025a      	lsls	r2, r3, #9
 800319c:	687b      	ldr	r3, [r7, #4]
 800319e:	681b      	ldr	r3, [r3, #0]
 80031a0:	430a      	orrs	r2, r1
 80031a2:	609a      	str	r2, [r3, #8]

  /* Enable or disable ADC end of conversion selection */
  hadc->Instance->CR2 &= ~(ADC_CR2_EOCS);
 80031a4:	687b      	ldr	r3, [r7, #4]
 80031a6:	681b      	ldr	r3, [r3, #0]
 80031a8:	689a      	ldr	r2, [r3, #8]
 80031aa:	687b      	ldr	r3, [r7, #4]
 80031ac:	681b      	ldr	r3, [r3, #0]
 80031ae:	f422 6280 	bic.w	r2, r2, #1024	@ 0x400
 80031b2:	609a      	str	r2, [r3, #8]
  hadc->Instance->CR2 |= ADC_CR2_EOCSelection(hadc->Init.EOCSelection);
 80031b4:	687b      	ldr	r3, [r7, #4]
 80031b6:	681b      	ldr	r3, [r3, #0]
 80031b8:	6899      	ldr	r1, [r3, #8]
 80031ba:	687b      	ldr	r3, [r7, #4]
 80031bc:	695b      	ldr	r3, [r3, #20]
 80031be:	029a      	lsls	r2, r3, #10
 80031c0:	687b      	ldr	r3, [r7, #4]
 80031c2:	681b      	ldr	r3, [r3, #0]
 80031c4:	430a      	orrs	r2, r1
 80031c6:	609a      	str	r2, [r3, #8]
}
 80031c8:	bf00      	nop
 80031ca:	3714      	adds	r7, #20
 80031cc:	46bd      	mov	sp, r7
 80031ce:	f85d 7b04 	ldr.w	r7, [sp], #4
 80031d2:	4770      	bx	lr
 80031d4:	40012300 	.word	0x40012300
 80031d8:	0f000001 	.word	0x0f000001

080031dc <ADC_DMAConvCplt>:
  * @param  hdma pointer to a DMA_HandleTypeDef structure that contains
  *                the configuration information for the specified DMA module.
  * @retval None
  */
static void ADC_DMAConvCplt(DMA_HandleTypeDef *hdma)
{
 80031dc:	b580      	push	{r7, lr}
 80031de:	b084      	sub	sp, #16
 80031e0:	af00      	add	r7, sp, #0
 80031e2:	6078      	str	r0, [r7, #4]
  /* Retrieve ADC handle corresponding to current DMA handle */
  ADC_HandleTypeDef *hadc = (ADC_HandleTypeDef *)((DMA_HandleTypeDef *)hdma)->Parent;
 80031e4:	687b      	ldr	r3, [r7, #4]
 80031e6:	6b9b      	ldr	r3, [r3, #56]	@ 0x38
 80031e8:	60fb      	str	r3, [r7, #12]

  /* Update state machine on conversion status if not in error state */
  if (HAL_IS_BIT_CLR(hadc->State, HAL_ADC_STATE_ERROR_INTERNAL | HAL_ADC_STATE_ERROR_DMA))
 80031ea:	68fb      	ldr	r3, [r7, #12]
 80031ec:	6c1b      	ldr	r3, [r3, #64]	@ 0x40
 80031ee:	f003 0350 	and.w	r3, r3, #80	@ 0x50
 80031f2:	2b00      	cmp	r3, #0
 80031f4:	d13c      	bne.n	8003270 <ADC_DMAConvCplt+0x94>
  {
    /* Update ADC state machine */
    SET_BIT(hadc->State, HAL_ADC_STATE_REG_EOC);
 80031f6:	68fb      	ldr	r3, [r7, #12]
 80031f8:	6c1b      	ldr	r3, [r3, #64]	@ 0x40
 80031fa:	f443 7200 	orr.w	r2, r3, #512	@ 0x200
 80031fe:	68fb      	ldr	r3, [r7, #12]
 8003200:	641a      	str	r2, [r3, #64]	@ 0x40
    /* by external trigger, continuous mode or scan sequence on going.      */
    /* Note: On STM32F4, there is no independent flag of end of sequence.   */
    /*       The test of scan sequence on going is done either with scan    */
    /*       sequence disabled or with end of conversion flag set to        */
    /*       of end of sequence.                                            */
    if (ADC_IS_SOFTWARE_START_REGULAR(hadc)                   &&
 8003202:	68fb      	ldr	r3, [r7, #12]
 8003204:	681b      	ldr	r3, [r3, #0]
 8003206:	689b      	ldr	r3, [r3, #8]
 8003208:	f003 5340 	and.w	r3, r3, #805306368	@ 0x30000000
 800320c:	2b00      	cmp	r3, #0
 800320e:	d12b      	bne.n	8003268 <ADC_DMAConvCplt+0x8c>
        (hadc->Init.ContinuousConvMode == DISABLE)            &&
 8003210:	68fb      	ldr	r3, [r7, #12]
 8003212:	7e1b      	ldrb	r3, [r3, #24]
    if (ADC_IS_SOFTWARE_START_REGULAR(hadc)                   &&
 8003214:	2b00      	cmp	r3, #0
 8003216:	d127      	bne.n	8003268 <ADC_DMAConvCplt+0x8c>
        (HAL_IS_BIT_CLR(hadc->Instance->SQR1, ADC_SQR1_L) ||
 8003218:	68fb      	ldr	r3, [r7, #12]
 800321a:	681b      	ldr	r3, [r3, #0]
 800321c:	6adb      	ldr	r3, [r3, #44]	@ 0x2c
 800321e:	f403 0370 	and.w	r3, r3, #15728640	@ 0xf00000
        (hadc->Init.ContinuousConvMode == DISABLE)            &&
 8003222:	2b00      	cmp	r3, #0
 8003224:	d006      	beq.n	8003234 <ADC_DMAConvCplt+0x58>
         HAL_IS_BIT_CLR(hadc->Instance->CR2, ADC_CR2_EOCS)))
 8003226:	68fb      	ldr	r3, [r7, #12]
 8003228:	681b      	ldr	r3, [r3, #0]
 800322a:	689b      	ldr	r3, [r3, #8]
 800322c:	f403 6380 	and.w	r3, r3, #1024	@ 0x400
        (HAL_IS_BIT_CLR(hadc->Instance->SQR1, ADC_SQR1_L) ||
 8003230:	2b00      	cmp	r3, #0
 8003232:	d119      	bne.n	8003268 <ADC_DMAConvCplt+0x8c>
    {
      /* Disable ADC end of single conversion interrupt on group regular */
      /* Note: Overrun interrupt was enabled with EOC interrupt in          */
      /* HAL_ADC_Start_IT(), but is not disabled here because can be used   */
      /* by overrun IRQ process below.                                      */
      __HAL_ADC_DISABLE_IT(hadc, ADC_IT_EOC);
 8003234:	68fb      	ldr	r3, [r7, #12]
 8003236:	681b      	ldr	r3, [r3, #0]
 8003238:	685a      	ldr	r2, [r3, #4]
 800323a:	68fb      	ldr	r3, [r7, #12]
 800323c:	681b      	ldr	r3, [r3, #0]
 800323e:	f022 0220 	bic.w	r2, r2, #32
 8003242:	605a      	str	r2, [r3, #4]

      /* Set ADC state */
      CLEAR_BIT(hadc->State, HAL_ADC_STATE_REG_BUSY);
 8003244:	68fb      	ldr	r3, [r7, #12]
 8003246:	6c1b      	ldr	r3, [r3, #64]	@ 0x40
 8003248:	f423 7280 	bic.w	r2, r3, #256	@ 0x100
 800324c:	68fb      	ldr	r3, [r7, #12]
 800324e:	641a      	str	r2, [r3, #64]	@ 0x40

      if (HAL_IS_BIT_CLR(hadc->State, HAL_ADC_STATE_INJ_BUSY))
 8003250:	68fb      	ldr	r3, [r7, #12]
 8003252:	6c1b      	ldr	r3, [r3, #64]	@ 0x40
 8003254:	f403 5380 	and.w	r3, r3, #4096	@ 0x1000
 8003258:	2b00      	cmp	r3, #0
 800325a:	d105      	bne.n	8003268 <ADC_DMAConvCplt+0x8c>
      {
        SET_BIT(hadc->State, HAL_ADC_STATE_READY);
 800325c:	68fb      	ldr	r3, [r7, #12]
 800325e:	6c1b      	ldr	r3, [r3, #64]	@ 0x40
 8003260:	f043 0201 	orr.w	r2, r3, #1
 8003264:	68fb      	ldr	r3, [r7, #12]
 8003266:	641a      	str	r2, [r3, #64]	@ 0x40

    /* Conversion complete callback */
#if (USE_HAL_ADC_REGISTER_CALLBACKS == 1)
    hadc->ConvCpltCallback(hadc);
#else
    HAL_ADC_ConvCpltCallback(hadc);
 8003268:	68f8      	ldr	r0, [r7, #12]
 800326a:	f7ff fd6b 	bl	8002d44 <HAL_ADC_ConvCpltCallback>
    {
      /* Call DMA error callback */
      hadc->DMA_Handle->XferErrorCallback(hdma);
    }
  }
}
 800326e:	e00e      	b.n	800328e <ADC_DMAConvCplt+0xb2>
    if ((hadc->State & HAL_ADC_STATE_ERROR_INTERNAL) != 0UL)
 8003270:	68fb      	ldr	r3, [r7, #12]
 8003272:	6c1b      	ldr	r3, [r3, #64]	@ 0x40
 8003274:	f003 0310 	and.w	r3, r3, #16
 8003278:	2b00      	cmp	r3, #0
 800327a:	d003      	beq.n	8003284 <ADC_DMAConvCplt+0xa8>
      HAL_ADC_ErrorCallback(hadc);
 800327c:	68f8      	ldr	r0, [r7, #12]
 800327e:	f7ff fd75 	bl	8002d6c <HAL_ADC_ErrorCallback>
}
 8003282:	e004      	b.n	800328e <ADC_DMAConvCplt+0xb2>
      hadc->DMA_Handle->XferErrorCallback(hdma);
 8003284:	68fb      	ldr	r3, [r7, #12]
 8003286:	6b9b      	ldr	r3, [r3, #56]	@ 0x38
 8003288:	6cdb      	ldr	r3, [r3, #76]	@ 0x4c
 800328a:	6878      	ldr	r0, [r7, #4]
 800328c:	4798      	blx	r3
}
 800328e:	bf00      	nop
 8003290:	3710      	adds	r7, #16
 8003292:	46bd      	mov	sp, r7
 8003294:	bd80      	pop	{r7, pc}

08003296 <ADC_DMAHalfConvCplt>:
  * @param  hdma pointer to a DMA_HandleTypeDef structure that contains
  *                the configuration information for the specified DMA module.
  * @retval None
  */
static void ADC_DMAHalfConvCplt(DMA_HandleTypeDef *hdma)
{
 8003296:	b580      	push	{r7, lr}
 8003298:	b084      	sub	sp, #16
 800329a:	af00      	add	r7, sp, #0
 800329c:	6078      	str	r0, [r7, #4]
  ADC_HandleTypeDef *hadc = (ADC_HandleTypeDef *)((DMA_HandleTypeDef *)hdma)->Parent;
 800329e:	687b      	ldr	r3, [r7, #4]
 80032a0:	6b9b      	ldr	r3, [r3, #56]	@ 0x38
 80032a2:	60fb      	str	r3, [r7, #12]
  /* Half conversion callback */
#if (USE_HAL_ADC_REGISTER_CALLBACKS == 1)
  hadc->ConvHalfCpltCallback(hadc);
#else
  HAL_ADC_ConvHalfCpltCallback(hadc);
 80032a4:	68f8      	ldr	r0, [r7, #12]
 80032a6:	f7ff fd57 	bl	8002d58 <HAL_ADC_ConvHalfCpltCallback>
#endif /* USE_HAL_ADC_REGISTER_CALLBACKS */
}
 80032aa:	bf00      	nop
 80032ac:	3710      	adds	r7, #16
 80032ae:	46bd      	mov	sp, r7
 80032b0:	bd80      	pop	{r7, pc}

080032b2 <ADC_DMAError>:
  * @param  hdma pointer to a DMA_HandleTypeDef structure that contains
  *                the configuration information for the specified DMA module.
  * @retval None
  */
static void ADC_DMAError(DMA_HandleTypeDef *hdma)
{
 80032b2:	b580      	push	{r7, lr}
 80032b4:	b084      	sub	sp, #16
 80032b6:	af00      	add	r7, sp, #0
 80032b8:	6078      	str	r0, [r7, #4]
  ADC_HandleTypeDef *hadc = (ADC_HandleTypeDef *)((DMA_HandleTypeDef *)hdma)->Parent;
 80032ba:	687b      	ldr	r3, [r7, #4]
 80032bc:	6b9b      	ldr	r3, [r3, #56]	@ 0x38
 80032be:	60fb      	str	r3, [r7, #12]
  hadc->State = HAL_ADC_STATE_ERROR_DMA;
 80032c0:	68fb      	ldr	r3, [r7, #12]
 80032c2:	2240      	movs	r2, #64	@ 0x40
 80032c4:	641a      	str	r2, [r3, #64]	@ 0x40
  /* Set ADC error code to DMA error */
  hadc->ErrorCode |= HAL_ADC_ERROR_DMA;
 80032c6:	68fb      	ldr	r3, [r7, #12]
 80032c8:	6c5b      	ldr	r3, [r3, #68]	@ 0x44
 80032ca:	f043 0204 	orr.w	r2, r3, #4
 80032ce:	68fb      	ldr	r3, [r7, #12]
 80032d0:	645a      	str	r2, [r3, #68]	@ 0x44
  /* Error callback */
#if (USE_HAL_ADC_REGISTER_CALLBACKS == 1)
  hadc->ErrorCallback(hadc);
#else
  HAL_ADC_ErrorCallback(hadc);
 80032d2:	68f8      	ldr	r0, [r7, #12]
 80032d4:	f7ff fd4a 	bl	8002d6c <HAL_ADC_ErrorCallback>
#endif /* USE_HAL_ADC_REGISTER_CALLBACKS */
}
 80032d8:	bf00      	nop
 80032da:	3710      	adds	r7, #16
 80032dc:	46bd      	mov	sp, r7
 80032de:	bd80      	pop	{r7, pc}

080032e0 <__NVIC_SetPriorityGrouping>:
           In case of a conflict between priority grouping and available
           priority bits (__NVIC_PRIO_BITS), the smallest possible priority group is set.
  \param [in]      PriorityGroup  Priority grouping field.
 */
__STATIC_INLINE void __NVIC_SetPriorityGrouping(uint32_t PriorityGroup)
{
 80032e0:	b480      	push	{r7}
 80032e2:	b085      	sub	sp, #20
 80032e4:	af00      	add	r7, sp, #0
 80032e6:	6078      	str	r0, [r7, #4]
  uint32_t reg_value;
  uint32_t PriorityGroupTmp = (PriorityGroup & (uint32_t)0x07UL);             /* only values 0..7 are used          */
 80032e8:	687b      	ldr	r3, [r7, #4]
 80032ea:	f003 0307 	and.w	r3, r3, #7
 80032ee:	60fb      	str	r3, [r7, #12]

  reg_value  =  SCB->AIRCR;                                                   /* read old register configuration    */
 80032f0:	4b0c      	ldr	r3, [pc, #48]	@ (8003324 <__NVIC_SetPriorityGrouping+0x44>)
 80032f2:	68db      	ldr	r3, [r3, #12]
 80032f4:	60bb      	str	r3, [r7, #8]
  reg_value &= ~((uint32_t)(SCB_AIRCR_VECTKEY_Msk | SCB_AIRCR_PRIGROUP_Msk)); /* clear bits to change               */
 80032f6:	68ba      	ldr	r2, [r7, #8]
 80032f8:	f64f 03ff 	movw	r3, #63743	@ 0xf8ff
 80032fc:	4013      	ands	r3, r2
 80032fe:	60bb      	str	r3, [r7, #8]
  reg_value  =  (reg_value                                   |
                ((uint32_t)0x5FAUL << SCB_AIRCR_VECTKEY_Pos) |
                (PriorityGroupTmp << SCB_AIRCR_PRIGROUP_Pos)  );              /* Insert write key and priority group */
 8003300:	68fb      	ldr	r3, [r7, #12]
 8003302:	021a      	lsls	r2, r3, #8
                ((uint32_t)0x5FAUL << SCB_AIRCR_VECTKEY_Pos) |
 8003304:	68bb      	ldr	r3, [r7, #8]
 8003306:	4313      	orrs	r3, r2
  reg_value  =  (reg_value                                   |
 8003308:	f043 63bf 	orr.w	r3, r3, #100139008	@ 0x5f80000
 800330c:	f443 3300 	orr.w	r3, r3, #131072	@ 0x20000
 8003310:	60bb      	str	r3, [r7, #8]
  SCB->AIRCR =  reg_value;
 8003312:	4a04      	ldr	r2, [pc, #16]	@ (8003324 <__NVIC_SetPriorityGrouping+0x44>)
 8003314:	68bb      	ldr	r3, [r7, #8]
 8003316:	60d3      	str	r3, [r2, #12]
}
 8003318:	bf00      	nop
 800331a:	3714      	adds	r7, #20
 800331c:	46bd      	mov	sp, r7
 800331e:	f85d 7b04 	ldr.w	r7, [sp], #4
 8003322:	4770      	bx	lr
 8003324:	e000ed00 	.word	0xe000ed00

08003328 <__NVIC_GetPriorityGrouping>:
  \brief   Get Priority Grouping
  \details Reads the priority grouping field from the NVIC Interrupt Controller.
  \return                Priority grouping field (SCB->AIRCR [10:8] PRIGROUP field).
 */
__STATIC_INLINE uint32_t __NVIC_GetPriorityGrouping(void)
{
 8003328:	b480      	push	{r7}
 800332a:	af00      	add	r7, sp, #0
  return ((uint32_t)((SCB->AIRCR & SCB_AIRCR_PRIGROUP_Msk) >> SCB_AIRCR_PRIGROUP_Pos));
 800332c:	4b04      	ldr	r3, [pc, #16]	@ (8003340 <__NVIC_GetPriorityGrouping+0x18>)
 800332e:	68db      	ldr	r3, [r3, #12]
 8003330:	0a1b      	lsrs	r3, r3, #8
 8003332:	f003 0307 	and.w	r3, r3, #7
}
 8003336:	4618      	mov	r0, r3
 8003338:	46bd      	mov	sp, r7
 800333a:	f85d 7b04 	ldr.w	r7, [sp], #4
 800333e:	4770      	bx	lr
 8003340:	e000ed00 	.word	0xe000ed00

08003344 <__NVIC_EnableIRQ>:
  \details Enables a device specific interrupt in the NVIC interrupt controller.
  \param [in]      IRQn  Device specific interrupt number.
  \note    IRQn must not be negative.
 */
__STATIC_INLINE void __NVIC_EnableIRQ(IRQn_Type IRQn)
{
 8003344:	b480      	push	{r7}
 8003346:	b083      	sub	sp, #12
 8003348:	af00      	add	r7, sp, #0
 800334a:	4603      	mov	r3, r0
 800334c:	71fb      	strb	r3, [r7, #7]
  if ((int32_t)(IRQn) >= 0)
 800334e:	f997 3007 	ldrsb.w	r3, [r7, #7]
 8003352:	2b00      	cmp	r3, #0
 8003354:	db0b      	blt.n	800336e <__NVIC_EnableIRQ+0x2a>
  {
    __COMPILER_BARRIER();
    NVIC->ISER[(((uint32_t)IRQn) >> 5UL)] = (uint32_t)(1UL << (((uint32_t)IRQn) & 0x1FUL));
 8003356:	79fb      	ldrb	r3, [r7, #7]
 8003358:	f003 021f 	and.w	r2, r3, #31
 800335c:	4907      	ldr	r1, [pc, #28]	@ (800337c <__NVIC_EnableIRQ+0x38>)
 800335e:	f997 3007 	ldrsb.w	r3, [r7, #7]
 8003362:	095b      	lsrs	r3, r3, #5
 8003364:	2001      	movs	r0, #1
 8003366:	fa00 f202 	lsl.w	r2, r0, r2
 800336a:	f841 2023 	str.w	r2, [r1, r3, lsl #2]
    __COMPILER_BARRIER();
  }
}
 800336e:	bf00      	nop
 8003370:	370c      	adds	r7, #12
 8003372:	46bd      	mov	sp, r7
 8003374:	f85d 7b04 	ldr.w	r7, [sp], #4
 8003378:	4770      	bx	lr
 800337a:	bf00      	nop
 800337c:	e000e100 	.word	0xe000e100

08003380 <__NVIC_DisableIRQ>:
  \details Disables a device specific interrupt in the NVIC interrupt controller.
  \param [in]      IRQn  Device specific interrupt number.
  \note    IRQn must not be negative.
 */
__STATIC_INLINE void __NVIC_DisableIRQ(IRQn_Type IRQn)
{
 8003380:	b480      	push	{r7}
 8003382:	b083      	sub	sp, #12
 8003384:	af00      	add	r7, sp, #0
 8003386:	4603      	mov	r3, r0
 8003388:	71fb      	strb	r3, [r7, #7]
  if ((int32_t)(IRQn) >= 0)
 800338a:	f997 3007 	ldrsb.w	r3, [r7, #7]
 800338e:	2b00      	cmp	r3, #0
 8003390:	db12      	blt.n	80033b8 <__NVIC_DisableIRQ+0x38>
  {
    NVIC->ICER[(((uint32_t)IRQn) >> 5UL)] = (uint32_t)(1UL << (((uint32_t)IRQn) & 0x1FUL));
 8003392:	79fb      	ldrb	r3, [r7, #7]
 8003394:	f003 021f 	and.w	r2, r3, #31
 8003398:	490a      	ldr	r1, [pc, #40]	@ (80033c4 <__NVIC_DisableIRQ+0x44>)
 800339a:	f997 3007 	ldrsb.w	r3, [r7, #7]
 800339e:	095b      	lsrs	r3, r3, #5
 80033a0:	2001      	movs	r0, #1
 80033a2:	fa00 f202 	lsl.w	r2, r0, r2
 80033a6:	3320      	adds	r3, #32
 80033a8:	f841 2023 	str.w	r2, [r1, r3, lsl #2]
  __ASM volatile ("dsb 0xF":::"memory");
 80033ac:	f3bf 8f4f 	dsb	sy
}
 80033b0:	bf00      	nop
  __ASM volatile ("isb 0xF":::"memory");
 80033b2:	f3bf 8f6f 	isb	sy
}
 80033b6:	bf00      	nop
    __DSB();
    __ISB();
  }
}
 80033b8:	bf00      	nop
 80033ba:	370c      	adds	r7, #12
 80033bc:	46bd      	mov	sp, r7
 80033be:	f85d 7b04 	ldr.w	r7, [sp], #4
 80033c2:	4770      	bx	lr
 80033c4:	e000e100 	.word	0xe000e100

080033c8 <__NVIC_ClearPendingIRQ>:
  \details Clears the pending bit of a device specific interrupt in the NVIC pending register.
  \param [in]      IRQn  Device specific interrupt number.
  \note    IRQn must not be negative.
 */
__STATIC_INLINE void __NVIC_ClearPendingIRQ(IRQn_Type IRQn)
{
 80033c8:	b480      	push	{r7}
 80033ca:	b083      	sub	sp, #12
 80033cc:	af00      	add	r7, sp, #0
 80033ce:	4603      	mov	r3, r0
 80033d0:	71fb      	strb	r3, [r7, #7]
  if ((int32_t)(IRQn) >= 0)
 80033d2:	f997 3007 	ldrsb.w	r3, [r7, #7]
 80033d6:	2b00      	cmp	r3, #0
 80033d8:	db0c      	blt.n	80033f4 <__NVIC_ClearPendingIRQ+0x2c>
  {
    NVIC->ICPR[(((uint32_t)IRQn) >> 5UL)] = (uint32_t)(1UL << (((uint32_t)IRQn) & 0x1FUL));
 80033da:	79fb      	ldrb	r3, [r7, #7]
 80033dc:	f003 021f 	and.w	r2, r3, #31
 80033e0:	4907      	ldr	r1, [pc, #28]	@ (8003400 <__NVIC_ClearPendingIRQ+0x38>)
 80033e2:	f997 3007 	ldrsb.w	r3, [r7, #7]
 80033e6:	095b      	lsrs	r3, r3, #5
 80033e8:	2001      	movs	r0, #1
 80033ea:	fa00 f202 	lsl.w	r2, r0, r2
 80033ee:	3360      	adds	r3, #96	@ 0x60
 80033f0:	f841 2023 	str.w	r2, [r1, r3, lsl #2]
  }
}
 80033f4:	bf00      	nop
 80033f6:	370c      	adds	r7, #12
 80033f8:	46bd      	mov	sp, r7
 80033fa:	f85d 7b04 	ldr.w	r7, [sp], #4
 80033fe:	4770      	bx	lr
 8003400:	e000e100 	.word	0xe000e100

08003404 <__NVIC_SetPriority>:
  \param [in]      IRQn  Interrupt number.
  \param [in]  priority  Priority to set.
  \note    The priority cannot be set for every processor exception.
 */
__STATIC_INLINE void __NVIC_SetPriority(IRQn_Type IRQn, uint32_t priority)
{
 8003404:	b480      	push	{r7}
 8003406:	b083      	sub	sp, #12
 8003408:	af00      	add	r7, sp, #0
 800340a:	4603      	mov	r3, r0
 800340c:	6039      	str	r1, [r7, #0]
 800340e:	71fb      	strb	r3, [r7, #7]
  if ((int32_t)(IRQn) >= 0)
 8003410:	f997 3007 	ldrsb.w	r3, [r7, #7]
 8003414:	2b00      	cmp	r3, #0
 8003416:	db0a      	blt.n	800342e <__NVIC_SetPriority+0x2a>
  {
    NVIC->IP[((uint32_t)IRQn)]               = (uint8_t)((priority << (8U - __NVIC_PRIO_BITS)) & (uint32_t)0xFFUL);
 8003418:	683b      	ldr	r3, [r7, #0]
 800341a:	b2da      	uxtb	r2, r3
 800341c:	490c      	ldr	r1, [pc, #48]	@ (8003450 <__NVIC_SetPriority+0x4c>)
 800341e:	f997 3007 	ldrsb.w	r3, [r7, #7]
 8003422:	0112      	lsls	r2, r2, #4
 8003424:	b2d2      	uxtb	r2, r2
 8003426:	440b      	add	r3, r1
 8003428:	f883 2300 	strb.w	r2, [r3, #768]	@ 0x300
  }
  else
  {
    SCB->SHP[(((uint32_t)IRQn) & 0xFUL)-4UL] = (uint8_t)((priority << (8U - __NVIC_PRIO_BITS)) & (uint32_t)0xFFUL);
  }
}
 800342c:	e00a      	b.n	8003444 <__NVIC_SetPriority+0x40>
    SCB->SHP[(((uint32_t)IRQn) & 0xFUL)-4UL] = (uint8_t)((priority << (8U - __NVIC_PRIO_BITS)) & (uint32_t)0xFFUL);
 800342e:	683b      	ldr	r3, [r7, #0]
 8003430:	b2da      	uxtb	r2, r3
 8003432:	4908      	ldr	r1, [pc, #32]	@ (8003454 <__NVIC_SetPriority+0x50>)
 8003434:	79fb      	ldrb	r3, [r7, #7]
 8003436:	f003 030f 	and.w	r3, r3, #15
 800343a:	3b04      	subs	r3, #4
 800343c:	0112      	lsls	r2, r2, #4
 800343e:	b2d2      	uxtb	r2, r2
 8003440:	440b      	add	r3, r1
 8003442:	761a      	strb	r2, [r3, #24]
}
 8003444:	bf00      	nop
 8003446:	370c      	adds	r7, #12
 8003448:	46bd      	mov	sp, r7
 800344a:	f85d 7b04 	ldr.w	r7, [sp], #4
 800344e:	4770      	bx	lr
 8003450:	e000e100 	.word	0xe000e100
 8003454:	e000ed00 	.word	0xe000ed00

08003458 <NVIC_EncodePriority>:
  \param [in]   PreemptPriority  Preemptive priority value (starting from 0).
  \param [in]       SubPriority  Subpriority value (starting from 0).
  \return                        Encoded priority. Value can be used in the function \ref NVIC_SetPriority().
 */
__STATIC_INLINE uint32_t NVIC_EncodePriority (uint32_t PriorityGroup, uint32_t PreemptPriority, uint32_t SubPriority)
{
 8003458:	b480      	push	{r7}
 800345a:	b089      	sub	sp, #36	@ 0x24
 800345c:	af00      	add	r7, sp, #0
 800345e:	60f8      	str	r0, [r7, #12]
 8003460:	60b9      	str	r1, [r7, #8]
 8003462:	607a      	str	r2, [r7, #4]
  uint32_t PriorityGroupTmp = (PriorityGroup & (uint32_t)0x07UL);   /* only values 0..7 are used          */
 8003464:	68fb      	ldr	r3, [r7, #12]
 8003466:	f003 0307 	and.w	r3, r3, #7
 800346a:	61fb      	str	r3, [r7, #28]
  uint32_t PreemptPriorityBits;
  uint32_t SubPriorityBits;

  PreemptPriorityBits = ((7UL - PriorityGroupTmp) > (uint32_t)(__NVIC_PRIO_BITS)) ? (uint32_t)(__NVIC_PRIO_BITS) : (uint32_t)(7UL - PriorityGroupTmp);
 800346c:	69fb      	ldr	r3, [r7, #28]
 800346e:	f1c3 0307 	rsb	r3, r3, #7
 8003472:	2b04      	cmp	r3, #4
 8003474:	bf28      	it	cs
 8003476:	2304      	movcs	r3, #4
 8003478:	61bb      	str	r3, [r7, #24]
  SubPriorityBits     = ((PriorityGroupTmp + (uint32_t)(__NVIC_PRIO_BITS)) < (uint32_t)7UL) ? (uint32_t)0UL : (uint32_t)((PriorityGroupTmp - 7UL) + (uint32_t)(__NVIC_PRIO_BITS));
 800347a:	69fb      	ldr	r3, [r7, #28]
 800347c:	3304      	adds	r3, #4
 800347e:	2b06      	cmp	r3, #6
 8003480:	d902      	bls.n	8003488 <NVIC_EncodePriority+0x30>
 8003482:	69fb      	ldr	r3, [r7, #28]
 8003484:	3b03      	subs	r3, #3
 8003486:	e000      	b.n	800348a <NVIC_EncodePriority+0x32>
 8003488:	2300      	movs	r3, #0
 800348a:	617b      	str	r3, [r7, #20]

  return (
           ((PreemptPriority & (uint32_t)((1UL << (PreemptPriorityBits)) - 1UL)) << SubPriorityBits) |
 800348c:	f04f 32ff 	mov.w	r2, #4294967295
 8003490:	69bb      	ldr	r3, [r7, #24]
 8003492:	fa02 f303 	lsl.w	r3, r2, r3
 8003496:	43da      	mvns	r2, r3
 8003498:	68bb      	ldr	r3, [r7, #8]
 800349a:	401a      	ands	r2, r3
 800349c:	697b      	ldr	r3, [r7, #20]
 800349e:	409a      	lsls	r2, r3
           ((SubPriority     & (uint32_t)((1UL << (SubPriorityBits    )) - 1UL)))
 80034a0:	f04f 31ff 	mov.w	r1, #4294967295
 80034a4:	697b      	ldr	r3, [r7, #20]
 80034a6:	fa01 f303 	lsl.w	r3, r1, r3
 80034aa:	43d9      	mvns	r1, r3
 80034ac:	687b      	ldr	r3, [r7, #4]
 80034ae:	400b      	ands	r3, r1
           ((PreemptPriority & (uint32_t)((1UL << (PreemptPriorityBits)) - 1UL)) << SubPriorityBits) |
 80034b0:	4313      	orrs	r3, r2
         );
}
 80034b2:	4618      	mov	r0, r3
 80034b4:	3724      	adds	r7, #36	@ 0x24
 80034b6:	46bd      	mov	sp, r7
 80034b8:	f85d 7b04 	ldr.w	r7, [sp], #4
 80034bc:	4770      	bx	lr
	...

080034c0 <SysTick_Config>:
  \note    When the variable <b>__Vendor_SysTickConfig</b> is set to 1, then the
           function <b>SysTick_Config</b> is not included. In this case, the file <b><i>device</i>.h</b>
           must contain a vendor-specific implementation of this function.
 */
__STATIC_INLINE uint32_t SysTick_Config(uint32_t ticks)
{
 80034c0:	b580      	push	{r7, lr}
 80034c2:	b082      	sub	sp, #8
 80034c4:	af00      	add	r7, sp, #0
 80034c6:	6078      	str	r0, [r7, #4]
  if ((ticks - 1UL) > SysTick_LOAD_RELOAD_Msk)
 80034c8:	687b      	ldr	r3, [r7, #4]
 80034ca:	3b01      	subs	r3, #1
 80034cc:	f1b3 7f80 	cmp.w	r3, #16777216	@ 0x1000000
 80034d0:	d301      	bcc.n	80034d6 <SysTick_Config+0x16>
  {
    return (1UL);                                                   /* Reload value impossible */
 80034d2:	2301      	movs	r3, #1
 80034d4:	e00f      	b.n	80034f6 <SysTick_Config+0x36>
  }

  SysTick->LOAD  = (uint32_t)(ticks - 1UL);                         /* set reload register */
 80034d6:	4a0a      	ldr	r2, [pc, #40]	@ (8003500 <SysTick_Config+0x40>)
 80034d8:	687b      	ldr	r3, [r7, #4]
 80034da:	3b01      	subs	r3, #1
 80034dc:	6053      	str	r3, [r2, #4]
  NVIC_SetPriority (SysTick_IRQn, (1UL << __NVIC_PRIO_BITS) - 1UL); /* set Priority for Systick Interrupt */
 80034de:	210f      	movs	r1, #15
 80034e0:	f04f 30ff 	mov.w	r0, #4294967295
 80034e4:	f7ff ff8e 	bl	8003404 <__NVIC_SetPriority>
  SysTick->VAL   = 0UL;                                             /* Load the SysTick Counter Value */
 80034e8:	4b05      	ldr	r3, [pc, #20]	@ (8003500 <SysTick_Config+0x40>)
 80034ea:	2200      	movs	r2, #0
 80034ec:	609a      	str	r2, [r3, #8]
  SysTick->CTRL  = SysTick_CTRL_CLKSOURCE_Msk |
 80034ee:	4b04      	ldr	r3, [pc, #16]	@ (8003500 <SysTick_Config+0x40>)
 80034f0:	2207      	movs	r2, #7
 80034f2:	601a      	str	r2, [r3, #0]
                   SysTick_CTRL_TICKINT_Msk   |
                   SysTick_CTRL_ENABLE_Msk;                         /* Enable SysTick IRQ and SysTick Timer */
  return (0UL);                                                     /* Function successful */
 80034f4:	2300      	movs	r3, #0
}
 80034f6:	4618      	mov	r0, r3
 80034f8:	3708      	adds	r7, #8
 80034fa:	46bd      	mov	sp, r7
 80034fc:	bd80      	pop	{r7, pc}
 80034fe:	bf00      	nop
 8003500:	e000e010 	.word	0xe000e010

08003504 <HAL_NVIC_SetPriorityGrouping>:
  * @note   When the NVIC_PriorityGroup_0 is selected, IRQ preemption is no more possible. 
  *         The pending IRQ priority will be managed only by the subpriority. 
  * @retval None
  */
void HAL_NVIC_SetPriorityGrouping(uint32_t PriorityGroup)
{
 8003504:	b580      	push	{r7, lr}
 8003506:	b082      	sub	sp, #8
 8003508:	af00      	add	r7, sp, #0
 800350a:	6078      	str	r0, [r7, #4]
  /* Check the parameters */
  assert_param(IS_NVIC_PRIORITY_GROUP(PriorityGroup));
  
  /* Set the PRIGROUP[10:8] bits according to the PriorityGroup parameter value */
  NVIC_SetPriorityGrouping(PriorityGroup);
 800350c:	6878      	ldr	r0, [r7, #4]
 800350e:	f7ff fee7 	bl	80032e0 <__NVIC_SetPriorityGrouping>
}
 8003512:	bf00      	nop
 8003514:	3708      	adds	r7, #8
 8003516:	46bd      	mov	sp, r7
 8003518:	bd80      	pop	{r7, pc}

0800351a <HAL_NVIC_SetPriority>:
  *         This parameter can be a value between 0 and 15
  *         A lower priority value indicates a higher priority.          
  * @retval None
  */
void HAL_NVIC_SetPriority(IRQn_Type IRQn, uint32_t PreemptPriority, uint32_t SubPriority)
{ 
 800351a:	b580      	push	{r7, lr}
 800351c:	b086      	sub	sp, #24
 800351e:	af00      	add	r7, sp, #0
 8003520:	4603      	mov	r3, r0
 8003522:	60b9      	str	r1, [r7, #8]
 8003524:	607a      	str	r2, [r7, #4]
 8003526:	73fb      	strb	r3, [r7, #15]
  uint32_t prioritygroup = 0x00U;
 8003528:	2300      	movs	r3, #0
 800352a:	617b      	str	r3, [r7, #20]
  
  /* Check the parameters */
  assert_param(IS_NVIC_SUB_PRIORITY(SubPriority));
  assert_param(IS_NVIC_PREEMPTION_PRIORITY(PreemptPriority));
  
  prioritygroup = NVIC_GetPriorityGrouping();
 800352c:	f7ff fefc 	bl	8003328 <__NVIC_GetPriorityGrouping>
 8003530:	6178      	str	r0, [r7, #20]
  
  NVIC_SetPriority(IRQn, NVIC_EncodePriority(prioritygroup, PreemptPriority, SubPriority));
 8003532:	687a      	ldr	r2, [r7, #4]
 8003534:	68b9      	ldr	r1, [r7, #8]
 8003536:	6978      	ldr	r0, [r7, #20]
 8003538:	f7ff ff8e 	bl	8003458 <NVIC_EncodePriority>
 800353c:	4602      	mov	r2, r0
 800353e:	f997 300f 	ldrsb.w	r3, [r7, #15]
 8003542:	4611      	mov	r1, r2
 8003544:	4618      	mov	r0, r3
 8003546:	f7ff ff5d 	bl	8003404 <__NVIC_SetPriority>
}
 800354a:	bf00      	nop
 800354c:	3718      	adds	r7, #24
 800354e:	46bd      	mov	sp, r7
 8003550:	bd80      	pop	{r7, pc}

08003552 <HAL_NVIC_EnableIRQ>:
  *         This parameter can be an enumerator of IRQn_Type enumeration
  *         (For the complete STM32 Devices IRQ Channels list, please refer to the appropriate CMSIS device file (stm32f4xxxx.h))
  * @retval None
  */
void HAL_NVIC_EnableIRQ(IRQn_Type IRQn)
{
 8003552:	b580      	push	{r7, lr}
 8003554:	b082      	sub	sp, #8
 8003556:	af00      	add	r7, sp, #0
 8003558:	4603      	mov	r3, r0
 800355a:	71fb      	strb	r3, [r7, #7]
  /* Check the parameters */
  assert_param(IS_NVIC_DEVICE_IRQ(IRQn));
  
  /* Enable interrupt */
  NVIC_EnableIRQ(IRQn);
 800355c:	f997 3007 	ldrsb.w	r3, [r7, #7]
 8003560:	4618      	mov	r0, r3
 8003562:	f7ff feef 	bl	8003344 <__NVIC_EnableIRQ>
}
 8003566:	bf00      	nop
 8003568:	3708      	adds	r7, #8
 800356a:	46bd      	mov	sp, r7
 800356c:	bd80      	pop	{r7, pc}

0800356e <HAL_NVIC_DisableIRQ>:
  *         This parameter can be an enumerator of IRQn_Type enumeration
  *         (For the complete STM32 Devices IRQ Channels list, please refer to the appropriate CMSIS device file (stm32f4xxxx.h))
  * @retval None
  */
void HAL_NVIC_DisableIRQ(IRQn_Type IRQn)
{
 800356e:	b580      	push	{r7, lr}
 8003570:	b082      	sub	sp, #8
 8003572:	af00      	add	r7, sp, #0
 8003574:	4603      	mov	r3, r0
 8003576:	71fb      	strb	r3, [r7, #7]
  /* Check the parameters */
  assert_param(IS_NVIC_DEVICE_IRQ(IRQn));
  
  /* Disable interrupt */
  NVIC_DisableIRQ(IRQn);
 8003578:	f997 3007 	ldrsb.w	r3, [r7, #7]
 800357c:	4618      	mov	r0, r3
 800357e:	f7ff feff 	bl	8003380 <__NVIC_DisableIRQ>
}
 8003582:	bf00      	nop
 8003584:	3708      	adds	r7, #8
 8003586:	46bd      	mov	sp, r7
 8003588:	bd80      	pop	{r7, pc}

0800358a <HAL_SYSTICK_Config>:
  * @param  TicksNumb Specifies the ticks Number of ticks between two interrupts.
  * @retval status:  - 0  Function succeeded.
  *                  - 1  Function failed.
  */
uint32_t HAL_SYSTICK_Config(uint32_t TicksNumb)
{
 800358a:	b580      	push	{r7, lr}
 800358c:	b082      	sub	sp, #8
 800358e:	af00      	add	r7, sp, #0
 8003590:	6078      	str	r0, [r7, #4]
   return SysTick_Config(TicksNumb);
 8003592:	6878      	ldr	r0, [r7, #4]
 8003594:	f7ff ff94 	bl	80034c0 <SysTick_Config>
 8003598:	4603      	mov	r3, r0
}
 800359a:	4618      	mov	r0, r3
 800359c:	3708      	adds	r7, #8
 800359e:	46bd      	mov	sp, r7
 80035a0:	bd80      	pop	{r7, pc}

080035a2 <HAL_NVIC_ClearPendingIRQ>:
  *         This parameter can be an enumerator of IRQn_Type enumeration
  *         (For the complete STM32 Devices IRQ Channels list, please refer to the appropriate CMSIS device file (stm32f4xxxx.h))
  * @retval None
  */
void HAL_NVIC_ClearPendingIRQ(IRQn_Type IRQn)
{
 80035a2:	b580      	push	{r7, lr}
 80035a4:	b082      	sub	sp, #8
 80035a6:	af00      	add	r7, sp, #0
 80035a8:	4603      	mov	r3, r0
 80035aa:	71fb      	strb	r3, [r7, #7]
  /* Check the parameters */
  assert_param(IS_NVIC_DEVICE_IRQ(IRQn));
  
  /* Clear pending interrupt */
  NVIC_ClearPendingIRQ(IRQn);
 80035ac:	f997 3007 	ldrsb.w	r3, [r7, #7]
 80035b0:	4618      	mov	r0, r3
 80035b2:	f7ff ff09 	bl	80033c8 <__NVIC_ClearPendingIRQ>
}
 80035b6:	bf00      	nop
 80035b8:	3708      	adds	r7, #8
 80035ba:	46bd      	mov	sp, r7
 80035bc:	bd80      	pop	{r7, pc}

080035be <HAL_CRC_Init>:
  *         parameters in the CRC_InitTypeDef and create the associated handle.
  * @param  hcrc CRC handle
  * @retval HAL status
  */
HAL_StatusTypeDef HAL_CRC_Init(CRC_HandleTypeDef *hcrc)
{
 80035be:	b580      	push	{r7, lr}
 80035c0:	b082      	sub	sp, #8
 80035c2:	af00      	add	r7, sp, #0
 80035c4:	6078      	str	r0, [r7, #4]
  /* Check the CRC handle allocation */
  if (hcrc == NULL)
 80035c6:	687b      	ldr	r3, [r7, #4]
 80035c8:	2b00      	cmp	r3, #0
 80035ca:	d101      	bne.n	80035d0 <HAL_CRC_Init+0x12>
  {
    return HAL_ERROR;
 80035cc:	2301      	movs	r3, #1
 80035ce:	e00e      	b.n	80035ee <HAL_CRC_Init+0x30>
  }

  /* Check the parameters */
  assert_param(IS_CRC_ALL_INSTANCE(hcrc->Instance));

  if (hcrc->State == HAL_CRC_STATE_RESET)
 80035d0:	687b      	ldr	r3, [r7, #4]
 80035d2:	795b      	ldrb	r3, [r3, #5]
 80035d4:	b2db      	uxtb	r3, r3
 80035d6:	2b00      	cmp	r3, #0
 80035d8:	d105      	bne.n	80035e6 <HAL_CRC_Init+0x28>
  {
    /* Allocate lock resource and initialize it */
    hcrc->Lock = HAL_UNLOCKED;
 80035da:	687b      	ldr	r3, [r7, #4]
 80035dc:	2200      	movs	r2, #0
 80035de:	711a      	strb	r2, [r3, #4]
    /* Init the low level hardware */
    HAL_CRC_MspInit(hcrc);
 80035e0:	6878      	ldr	r0, [r7, #4]
 80035e2:	f7fe f9a5 	bl	8001930 <HAL_CRC_MspInit>
  }

  /* Change CRC peripheral state */
  hcrc->State = HAL_CRC_STATE_READY;
 80035e6:	687b      	ldr	r3, [r7, #4]
 80035e8:	2201      	movs	r2, #1
 80035ea:	715a      	strb	r2, [r3, #5]

  /* Return function status */
  return HAL_OK;
 80035ec:	2300      	movs	r3, #0
}
 80035ee:	4618      	mov	r0, r3
 80035f0:	3708      	adds	r7, #8
 80035f2:	46bd      	mov	sp, r7
 80035f4:	bd80      	pop	{r7, pc}
	...

080035f8 <HAL_DMA_Init>:
  * @param  hdma Pointer to a DMA_HandleTypeDef structure that contains
  *               the configuration information for the specified DMA Stream.  
  * @retval HAL status
  */
HAL_StatusTypeDef HAL_DMA_Init(DMA_HandleTypeDef *hdma)
{
 80035f8:	b580      	push	{r7, lr}
 80035fa:	b086      	sub	sp, #24
 80035fc:	af00      	add	r7, sp, #0
 80035fe:	6078      	str	r0, [r7, #4]
  uint32_t tmp = 0U;
 8003600:	2300      	movs	r3, #0
 8003602:	617b      	str	r3, [r7, #20]
  uint32_t tickstart = HAL_GetTick();
 8003604:	f7ff fa1a 	bl	8002a3c <HAL_GetTick>
 8003608:	6138      	str	r0, [r7, #16]
  DMA_Base_Registers *regs;

  /* Check the DMA peripheral state */
  if(hdma == NULL)
 800360a:	687b      	ldr	r3, [r7, #4]
 800360c:	2b00      	cmp	r3, #0
 800360e:	d101      	bne.n	8003614 <HAL_DMA_Init+0x1c>
  {
    return HAL_ERROR;
 8003610:	2301      	movs	r3, #1
 8003612:	e099      	b.n	8003748 <HAL_DMA_Init+0x150>
    assert_param(IS_DMA_MEMORY_BURST(hdma->Init.MemBurst));
    assert_param(IS_DMA_PERIPHERAL_BURST(hdma->Init.PeriphBurst));
  }

  /* Change DMA peripheral state */
  hdma->State = HAL_DMA_STATE_BUSY;
 8003614:	687b      	ldr	r3, [r7, #4]
 8003616:	2202      	movs	r2, #2
 8003618:	f883 2035 	strb.w	r2, [r3, #53]	@ 0x35

  /* Allocate lock resource */
  __HAL_UNLOCK(hdma);
 800361c:	687b      	ldr	r3, [r7, #4]
 800361e:	2200      	movs	r2, #0
 8003620:	f883 2034 	strb.w	r2, [r3, #52]	@ 0x34
  
  /* Disable the peripheral */
  __HAL_DMA_DISABLE(hdma);
 8003624:	687b      	ldr	r3, [r7, #4]
 8003626:	681b      	ldr	r3, [r3, #0]
 8003628:	681a      	ldr	r2, [r3, #0]
 800362a:	687b      	ldr	r3, [r7, #4]
 800362c:	681b      	ldr	r3, [r3, #0]
 800362e:	f022 0201 	bic.w	r2, r2, #1
 8003632:	601a      	str	r2, [r3, #0]
  
  /* Check if the DMA Stream is effectively disabled */
  while((hdma->Instance->CR & DMA_SxCR_EN) != RESET)
 8003634:	e00f      	b.n	8003656 <HAL_DMA_Init+0x5e>
  {
    /* Check for the Timeout */
    if((HAL_GetTick() - tickstart ) > HAL_TIMEOUT_DMA_ABORT)
 8003636:	f7ff fa01 	bl	8002a3c <HAL_GetTick>
 800363a:	4602      	mov	r2, r0
 800363c:	693b      	ldr	r3, [r7, #16]
 800363e:	1ad3      	subs	r3, r2, r3
 8003640:	2b05      	cmp	r3, #5
 8003642:	d908      	bls.n	8003656 <HAL_DMA_Init+0x5e>
    {
      /* Update error code */
      hdma->ErrorCode = HAL_DMA_ERROR_TIMEOUT;
 8003644:	687b      	ldr	r3, [r7, #4]
 8003646:	2220      	movs	r2, #32
 8003648:	655a      	str	r2, [r3, #84]	@ 0x54
      
      /* Change the DMA state */
      hdma->State = HAL_DMA_STATE_TIMEOUT;
 800364a:	687b      	ldr	r3, [r7, #4]
 800364c:	2203      	movs	r2, #3
 800364e:	f883 2035 	strb.w	r2, [r3, #53]	@ 0x35
      
      return HAL_TIMEOUT;
 8003652:	2303      	movs	r3, #3
 8003654:	e078      	b.n	8003748 <HAL_DMA_Init+0x150>
  while((hdma->Instance->CR & DMA_SxCR_EN) != RESET)
 8003656:	687b      	ldr	r3, [r7, #4]
 8003658:	681b      	ldr	r3, [r3, #0]
 800365a:	681b      	ldr	r3, [r3, #0]
 800365c:	f003 0301 	and.w	r3, r3, #1
 8003660:	2b00      	cmp	r3, #0
 8003662:	d1e8      	bne.n	8003636 <HAL_DMA_Init+0x3e>
    }
  }
  
  /* Get the CR register value */
  tmp = hdma->Instance->CR;
 8003664:	687b      	ldr	r3, [r7, #4]
 8003666:	681b      	ldr	r3, [r3, #0]
 8003668:	681b      	ldr	r3, [r3, #0]
 800366a:	617b      	str	r3, [r7, #20]

  /* Clear CHSEL, MBURST, PBURST, PL, MSIZE, PSIZE, MINC, PINC, CIRC, DIR, CT and DBM bits */
  tmp &= ((uint32_t)~(DMA_SxCR_CHSEL | DMA_SxCR_MBURST | DMA_SxCR_PBURST | \
 800366c:	697a      	ldr	r2, [r7, #20]
 800366e:	4b38      	ldr	r3, [pc, #224]	@ (8003750 <HAL_DMA_Init+0x158>)
 8003670:	4013      	ands	r3, r2
 8003672:	617b      	str	r3, [r7, #20]
                      DMA_SxCR_PL    | DMA_SxCR_MSIZE  | DMA_SxCR_PSIZE  | \
                      DMA_SxCR_MINC  | DMA_SxCR_PINC   | DMA_SxCR_CIRC   | \
                      DMA_SxCR_DIR   | DMA_SxCR_CT     | DMA_SxCR_DBM));

  /* Prepare the DMA Stream configuration */
  tmp |=  hdma->Init.Channel             | hdma->Init.Direction        |
 8003674:	687b      	ldr	r3, [r7, #4]
 8003676:	685a      	ldr	r2, [r3, #4]
 8003678:	687b      	ldr	r3, [r7, #4]
 800367a:	689b      	ldr	r3, [r3, #8]
 800367c:	431a      	orrs	r2, r3
          hdma->Init.PeriphInc           | hdma->Init.MemInc           |
 800367e:	687b      	ldr	r3, [r7, #4]
 8003680:	68db      	ldr	r3, [r3, #12]
  tmp |=  hdma->Init.Channel             | hdma->Init.Direction        |
 8003682:	431a      	orrs	r2, r3
          hdma->Init.PeriphInc           | hdma->Init.MemInc           |
 8003684:	687b      	ldr	r3, [r7, #4]
 8003686:	691b      	ldr	r3, [r3, #16]
 8003688:	431a      	orrs	r2, r3
          hdma->Init.PeriphDataAlignment | hdma->Init.MemDataAlignment |
 800368a:	687b      	ldr	r3, [r7, #4]
 800368c:	695b      	ldr	r3, [r3, #20]
          hdma->Init.PeriphInc           | hdma->Init.MemInc           |
 800368e:	431a      	orrs	r2, r3
          hdma->Init.PeriphDataAlignment | hdma->Init.MemDataAlignment |
 8003690:	687b      	ldr	r3, [r7, #4]
 8003692:	699b      	ldr	r3, [r3, #24]
 8003694:	431a      	orrs	r2, r3
          hdma->Init.Mode                | hdma->Init.Priority;
 8003696:	687b      	ldr	r3, [r7, #4]
 8003698:	69db      	ldr	r3, [r3, #28]
          hdma->Init.PeriphDataAlignment | hdma->Init.MemDataAlignment |
 800369a:	431a      	orrs	r2, r3
          hdma->Init.Mode                | hdma->Init.Priority;
 800369c:	687b      	ldr	r3, [r7, #4]
 800369e:	6a1b      	ldr	r3, [r3, #32]
 80036a0:	4313      	orrs	r3, r2
  tmp |=  hdma->Init.Channel             | hdma->Init.Direction        |
 80036a2:	697a      	ldr	r2, [r7, #20]
 80036a4:	4313      	orrs	r3, r2
 80036a6:	617b      	str	r3, [r7, #20]

  /* the Memory burst and peripheral burst are not used when the FIFO is disabled */
  if(hdma->Init.FIFOMode == DMA_FIFOMODE_ENABLE)
 80036a8:	687b      	ldr	r3, [r7, #4]
 80036aa:	6a5b      	ldr	r3, [r3, #36]	@ 0x24
 80036ac:	2b04      	cmp	r3, #4
 80036ae:	d107      	bne.n	80036c0 <HAL_DMA_Init+0xc8>
  {
    /* Get memory burst and peripheral burst */
    tmp |=  hdma->Init.MemBurst | hdma->Init.PeriphBurst;
 80036b0:	687b      	ldr	r3, [r7, #4]
 80036b2:	6ada      	ldr	r2, [r3, #44]	@ 0x2c
 80036b4:	687b      	ldr	r3, [r7, #4]
 80036b6:	6b1b      	ldr	r3, [r3, #48]	@ 0x30
 80036b8:	4313      	orrs	r3, r2
 80036ba:	697a      	ldr	r2, [r7, #20]
 80036bc:	4313      	orrs	r3, r2
 80036be:	617b      	str	r3, [r7, #20]
  }
  
  /* Write to DMA Stream CR register */
  hdma->Instance->CR = tmp;  
 80036c0:	687b      	ldr	r3, [r7, #4]
 80036c2:	681b      	ldr	r3, [r3, #0]
 80036c4:	697a      	ldr	r2, [r7, #20]
 80036c6:	601a      	str	r2, [r3, #0]

  /* Get the FCR register value */
  tmp = hdma->Instance->FCR;
 80036c8:	687b      	ldr	r3, [r7, #4]
 80036ca:	681b      	ldr	r3, [r3, #0]
 80036cc:	695b      	ldr	r3, [r3, #20]
 80036ce:	617b      	str	r3, [r7, #20]

  /* Clear Direct mode and FIFO threshold bits */
  tmp &= (uint32_t)~(DMA_SxFCR_DMDIS | DMA_SxFCR_FTH);
 80036d0:	697b      	ldr	r3, [r7, #20]
 80036d2:	f023 0307 	bic.w	r3, r3, #7
 80036d6:	617b      	str	r3, [r7, #20]

  /* Prepare the DMA Stream FIFO configuration */
  tmp |= hdma->Init.FIFOMode;
 80036d8:	687b      	ldr	r3, [r7, #4]
 80036da:	6a5b      	ldr	r3, [r3, #36]	@ 0x24
 80036dc:	697a      	ldr	r2, [r7, #20]
 80036de:	4313      	orrs	r3, r2
 80036e0:	617b      	str	r3, [r7, #20]

  /* The FIFO threshold is not used when the FIFO mode is disabled */
  if(hdma->Init.FIFOMode == DMA_FIFOMODE_ENABLE)
 80036e2:	687b      	ldr	r3, [r7, #4]
 80036e4:	6a5b      	ldr	r3, [r3, #36]	@ 0x24
 80036e6:	2b04      	cmp	r3, #4
 80036e8:	d117      	bne.n	800371a <HAL_DMA_Init+0x122>
  {
    /* Get the FIFO threshold */
    tmp |= hdma->Init.FIFOThreshold;
 80036ea:	687b      	ldr	r3, [r7, #4]
 80036ec:	6a9b      	ldr	r3, [r3, #40]	@ 0x28
 80036ee:	697a      	ldr	r2, [r7, #20]
 80036f0:	4313      	orrs	r3, r2
 80036f2:	617b      	str	r3, [r7, #20]
    
    /* Check compatibility between FIFO threshold level and size of the memory burst */
    /* for INCR4, INCR8, INCR16 bursts */
    if (hdma->Init.MemBurst != DMA_MBURST_SINGLE)
 80036f4:	687b      	ldr	r3, [r7, #4]
 80036f6:	6adb      	ldr	r3, [r3, #44]	@ 0x2c
 80036f8:	2b00      	cmp	r3, #0
 80036fa:	d00e      	beq.n	800371a <HAL_DMA_Init+0x122>
    {
      if (DMA_CheckFifoParam(hdma) != HAL_OK)
 80036fc:	6878      	ldr	r0, [r7, #4]
 80036fe:	f000 fa91 	bl	8003c24 <DMA_CheckFifoParam>
 8003702:	4603      	mov	r3, r0
 8003704:	2b00      	cmp	r3, #0
 8003706:	d008      	beq.n	800371a <HAL_DMA_Init+0x122>
      {
        /* Update error code */
        hdma->ErrorCode = HAL_DMA_ERROR_PARAM;
 8003708:	687b      	ldr	r3, [r7, #4]
 800370a:	2240      	movs	r2, #64	@ 0x40
 800370c:	655a      	str	r2, [r3, #84]	@ 0x54
        
        /* Change the DMA state */
        hdma->State = HAL_DMA_STATE_READY;
 800370e:	687b      	ldr	r3, [r7, #4]
 8003710:	2201      	movs	r2, #1
 8003712:	f883 2035 	strb.w	r2, [r3, #53]	@ 0x35
        
        return HAL_ERROR; 
 8003716:	2301      	movs	r3, #1
 8003718:	e016      	b.n	8003748 <HAL_DMA_Init+0x150>
      }
    }
  }
  
  /* Write to DMA Stream FCR */
  hdma->Instance->FCR = tmp;
 800371a:	687b      	ldr	r3, [r7, #4]
 800371c:	681b      	ldr	r3, [r3, #0]
 800371e:	697a      	ldr	r2, [r7, #20]
 8003720:	615a      	str	r2, [r3, #20]

  /* Initialize StreamBaseAddress and StreamIndex parameters to be used to calculate
     DMA steam Base Address needed by HAL_DMA_IRQHandler() and HAL_DMA_PollForTransfer() */
  regs = (DMA_Base_Registers *)DMA_CalcBaseAndBitshift(hdma);
 8003722:	6878      	ldr	r0, [r7, #4]
 8003724:	f000 fa48 	bl	8003bb8 <DMA_CalcBaseAndBitshift>
 8003728:	4603      	mov	r3, r0
 800372a:	60fb      	str	r3, [r7, #12]
  
  /* Clear all interrupt flags */
  regs->IFCR = 0x3FU << hdma->StreamIndex;
 800372c:	687b      	ldr	r3, [r7, #4]
 800372e:	6ddb      	ldr	r3, [r3, #92]	@ 0x5c
 8003730:	223f      	movs	r2, #63	@ 0x3f
 8003732:	409a      	lsls	r2, r3
 8003734:	68fb      	ldr	r3, [r7, #12]
 8003736:	609a      	str	r2, [r3, #8]

  /* Initialize the error code */
  hdma->ErrorCode = HAL_DMA_ERROR_NONE;
 8003738:	687b      	ldr	r3, [r7, #4]
 800373a:	2200      	movs	r2, #0
 800373c:	655a      	str	r2, [r3, #84]	@ 0x54
                                                                                     
  /* Initialize the DMA state */
  hdma->State = HAL_DMA_STATE_READY;
 800373e:	687b      	ldr	r3, [r7, #4]
 8003740:	2201      	movs	r2, #1
 8003742:	f883 2035 	strb.w	r2, [r3, #53]	@ 0x35

  return HAL_OK;
 8003746:	2300      	movs	r3, #0
}
 8003748:	4618      	mov	r0, r3
 800374a:	3718      	adds	r7, #24
 800374c:	46bd      	mov	sp, r7
 800374e:	bd80      	pop	{r7, pc}
 8003750:	f010803f 	.word	0xf010803f

08003754 <HAL_DMA_Start_IT>:
  * @param  DstAddress The destination memory Buffer address
  * @param  DataLength The length of data to be transferred from source to destination
  * @retval HAL status
  */
HAL_StatusTypeDef HAL_DMA_Start_IT(DMA_HandleTypeDef *hdma, uint32_t SrcAddress, uint32_t DstAddress, uint32_t DataLength)
{
 8003754:	b580      	push	{r7, lr}
 8003756:	b086      	sub	sp, #24
 8003758:	af00      	add	r7, sp, #0
 800375a:	60f8      	str	r0, [r7, #12]
 800375c:	60b9      	str	r1, [r7, #8]
 800375e:	607a      	str	r2, [r7, #4]
 8003760:	603b      	str	r3, [r7, #0]
  HAL_StatusTypeDef status = HAL_OK;
 8003762:	2300      	movs	r3, #0
 8003764:	75fb      	strb	r3, [r7, #23]

  /* calculate DMA base and stream number */
  DMA_Base_Registers *regs = (DMA_Base_Registers *)hdma->StreamBaseAddress;
 8003766:	68fb      	ldr	r3, [r7, #12]
 8003768:	6d9b      	ldr	r3, [r3, #88]	@ 0x58
 800376a:	613b      	str	r3, [r7, #16]
  
  /* Check the parameters */
  assert_param(IS_DMA_BUFFER_SIZE(DataLength));
 
  /* Process locked */
  __HAL_LOCK(hdma);
 800376c:	68fb      	ldr	r3, [r7, #12]
 800376e:	f893 3034 	ldrb.w	r3, [r3, #52]	@ 0x34
 8003772:	2b01      	cmp	r3, #1
 8003774:	d101      	bne.n	800377a <HAL_DMA_Start_IT+0x26>
 8003776:	2302      	movs	r3, #2
 8003778:	e040      	b.n	80037fc <HAL_DMA_Start_IT+0xa8>
 800377a:	68fb      	ldr	r3, [r7, #12]
 800377c:	2201      	movs	r2, #1
 800377e:	f883 2034 	strb.w	r2, [r3, #52]	@ 0x34
  
  if(HAL_DMA_STATE_READY == hdma->State)
 8003782:	68fb      	ldr	r3, [r7, #12]
 8003784:	f893 3035 	ldrb.w	r3, [r3, #53]	@ 0x35
 8003788:	b2db      	uxtb	r3, r3
 800378a:	2b01      	cmp	r3, #1
 800378c:	d12f      	bne.n	80037ee <HAL_DMA_Start_IT+0x9a>
  {
    /* Change DMA peripheral state */
    hdma->State = HAL_DMA_STATE_BUSY;
 800378e:	68fb      	ldr	r3, [r7, #12]
 8003790:	2202      	movs	r2, #2
 8003792:	f883 2035 	strb.w	r2, [r3, #53]	@ 0x35
    
    /* Initialize the error code */
    hdma->ErrorCode = HAL_DMA_ERROR_NONE;
 8003796:	68fb      	ldr	r3, [r7, #12]
 8003798:	2200      	movs	r2, #0
 800379a:	655a      	str	r2, [r3, #84]	@ 0x54
    
    /* Configure the source, destination address and the data length */
    DMA_SetConfig(hdma, SrcAddress, DstAddress, DataLength);
 800379c:	683b      	ldr	r3, [r7, #0]
 800379e:	687a      	ldr	r2, [r7, #4]
 80037a0:	68b9      	ldr	r1, [r7, #8]
 80037a2:	68f8      	ldr	r0, [r7, #12]
 80037a4:	f000 f9da 	bl	8003b5c <DMA_SetConfig>
    
    /* Clear all interrupt flags at correct offset within the register */
    regs->IFCR = 0x3FU << hdma->StreamIndex;
 80037a8:	68fb      	ldr	r3, [r7, #12]
 80037aa:	6ddb      	ldr	r3, [r3, #92]	@ 0x5c
 80037ac:	223f      	movs	r2, #63	@ 0x3f
 80037ae:	409a      	lsls	r2, r3
 80037b0:	693b      	ldr	r3, [r7, #16]
 80037b2:	609a      	str	r2, [r3, #8]
    
    /* Enable Common interrupts*/
    hdma->Instance->CR  |= DMA_IT_TC | DMA_IT_TE | DMA_IT_DME;
 80037b4:	68fb      	ldr	r3, [r7, #12]
 80037b6:	681b      	ldr	r3, [r3, #0]
 80037b8:	681a      	ldr	r2, [r3, #0]
 80037ba:	68fb      	ldr	r3, [r7, #12]
 80037bc:	681b      	ldr	r3, [r3, #0]
 80037be:	f042 0216 	orr.w	r2, r2, #22
 80037c2:	601a      	str	r2, [r3, #0]
    
    if(hdma->XferHalfCpltCallback != NULL)
 80037c4:	68fb      	ldr	r3, [r7, #12]
 80037c6:	6c1b      	ldr	r3, [r3, #64]	@ 0x40
 80037c8:	2b00      	cmp	r3, #0
 80037ca:	d007      	beq.n	80037dc <HAL_DMA_Start_IT+0x88>
    {
      hdma->Instance->CR  |= DMA_IT_HT;
 80037cc:	68fb      	ldr	r3, [r7, #12]
 80037ce:	681b      	ldr	r3, [r3, #0]
 80037d0:	681a      	ldr	r2, [r3, #0]
 80037d2:	68fb      	ldr	r3, [r7, #12]
 80037d4:	681b      	ldr	r3, [r3, #0]
 80037d6:	f042 0208 	orr.w	r2, r2, #8
 80037da:	601a      	str	r2, [r3, #0]
    }
    
    /* Enable the Peripheral */
    __HAL_DMA_ENABLE(hdma);
 80037dc:	68fb      	ldr	r3, [r7, #12]
 80037de:	681b      	ldr	r3, [r3, #0]
 80037e0:	681a      	ldr	r2, [r3, #0]
 80037e2:	68fb      	ldr	r3, [r7, #12]
 80037e4:	681b      	ldr	r3, [r3, #0]
 80037e6:	f042 0201 	orr.w	r2, r2, #1
 80037ea:	601a      	str	r2, [r3, #0]
 80037ec:	e005      	b.n	80037fa <HAL_DMA_Start_IT+0xa6>
  }
  else
  {
    /* Process unlocked */
    __HAL_UNLOCK(hdma);	  
 80037ee:	68fb      	ldr	r3, [r7, #12]
 80037f0:	2200      	movs	r2, #0
 80037f2:	f883 2034 	strb.w	r2, [r3, #52]	@ 0x34
    
    /* Return error status */
    status = HAL_BUSY;
 80037f6:	2302      	movs	r3, #2
 80037f8:	75fb      	strb	r3, [r7, #23]
  }
  
  return status;
 80037fa:	7dfb      	ldrb	r3, [r7, #23]
}
 80037fc:	4618      	mov	r0, r3
 80037fe:	3718      	adds	r7, #24
 8003800:	46bd      	mov	sp, r7
 8003802:	bd80      	pop	{r7, pc}

08003804 <HAL_DMA_Abort_IT>:
  * @param  hdma   pointer to a DMA_HandleTypeDef structure that contains
  *                 the configuration information for the specified DMA Stream.
  * @retval HAL status
  */
HAL_StatusTypeDef HAL_DMA_Abort_IT(DMA_HandleTypeDef *hdma)
{
 8003804:	b480      	push	{r7}
 8003806:	b083      	sub	sp, #12
 8003808:	af00      	add	r7, sp, #0
 800380a:	6078      	str	r0, [r7, #4]
  if(hdma->State != HAL_DMA_STATE_BUSY)
 800380c:	687b      	ldr	r3, [r7, #4]
 800380e:	f893 3035 	ldrb.w	r3, [r3, #53]	@ 0x35
 8003812:	b2db      	uxtb	r3, r3
 8003814:	2b02      	cmp	r3, #2
 8003816:	d004      	beq.n	8003822 <HAL_DMA_Abort_IT+0x1e>
  {
    hdma->ErrorCode = HAL_DMA_ERROR_NO_XFER;
 8003818:	687b      	ldr	r3, [r7, #4]
 800381a:	2280      	movs	r2, #128	@ 0x80
 800381c:	655a      	str	r2, [r3, #84]	@ 0x54
    return HAL_ERROR;
 800381e:	2301      	movs	r3, #1
 8003820:	e00c      	b.n	800383c <HAL_DMA_Abort_IT+0x38>
  }
  else
  {
    /* Set Abort State  */
    hdma->State = HAL_DMA_STATE_ABORT;
 8003822:	687b      	ldr	r3, [r7, #4]
 8003824:	2205      	movs	r2, #5
 8003826:	f883 2035 	strb.w	r2, [r3, #53]	@ 0x35
    
    /* Disable the stream */
    __HAL_DMA_DISABLE(hdma);
 800382a:	687b      	ldr	r3, [r7, #4]
 800382c:	681b      	ldr	r3, [r3, #0]
 800382e:	681a      	ldr	r2, [r3, #0]
 8003830:	687b      	ldr	r3, [r7, #4]
 8003832:	681b      	ldr	r3, [r3, #0]
 8003834:	f022 0201 	bic.w	r2, r2, #1
 8003838:	601a      	str	r2, [r3, #0]
  }

  return HAL_OK;
 800383a:	2300      	movs	r3, #0
}
 800383c:	4618      	mov	r0, r3
 800383e:	370c      	adds	r7, #12
 8003840:	46bd      	mov	sp, r7
 8003842:	f85d 7b04 	ldr.w	r7, [sp], #4
 8003846:	4770      	bx	lr

08003848 <HAL_DMA_IRQHandler>:
  * @param  hdma pointer to a DMA_HandleTypeDef structure that contains
  *               the configuration information for the specified DMA Stream.  
  * @retval None
  */
void HAL_DMA_IRQHandler(DMA_HandleTypeDef *hdma)
{
 8003848:	b580      	push	{r7, lr}
 800384a:	b086      	sub	sp, #24
 800384c:	af00      	add	r7, sp, #0
 800384e:	6078      	str	r0, [r7, #4]
  uint32_t tmpisr;
  __IO uint32_t count = 0U;
 8003850:	2300      	movs	r3, #0
 8003852:	60bb      	str	r3, [r7, #8]
  uint32_t timeout = SystemCoreClock / 9600U;
 8003854:	4b8e      	ldr	r3, [pc, #568]	@ (8003a90 <HAL_DMA_IRQHandler+0x248>)
 8003856:	681b      	ldr	r3, [r3, #0]
 8003858:	4a8e      	ldr	r2, [pc, #568]	@ (8003a94 <HAL_DMA_IRQHandler+0x24c>)
 800385a:	fba2 2303 	umull	r2, r3, r2, r3
 800385e:	0a9b      	lsrs	r3, r3, #10
 8003860:	617b      	str	r3, [r7, #20]

  /* calculate DMA base and stream number */
  DMA_Base_Registers *regs = (DMA_Base_Registers *)hdma->StreamBaseAddress;
 8003862:	687b      	ldr	r3, [r7, #4]
 8003864:	6d9b      	ldr	r3, [r3, #88]	@ 0x58
 8003866:	613b      	str	r3, [r7, #16]

  tmpisr = regs->ISR;
 8003868:	693b      	ldr	r3, [r7, #16]
 800386a:	681b      	ldr	r3, [r3, #0]
 800386c:	60fb      	str	r3, [r7, #12]

  /* Transfer Error Interrupt management ***************************************/
  if ((tmpisr & (DMA_FLAG_TEIF0_4 << hdma->StreamIndex)) != RESET)
 800386e:	687b      	ldr	r3, [r7, #4]
 8003870:	6ddb      	ldr	r3, [r3, #92]	@ 0x5c
 8003872:	2208      	movs	r2, #8
 8003874:	409a      	lsls	r2, r3
 8003876:	68fb      	ldr	r3, [r7, #12]
 8003878:	4013      	ands	r3, r2
 800387a:	2b00      	cmp	r3, #0
 800387c:	d01a      	beq.n	80038b4 <HAL_DMA_IRQHandler+0x6c>
  {
    if(__HAL_DMA_GET_IT_SOURCE(hdma, DMA_IT_TE) != RESET)
 800387e:	687b      	ldr	r3, [r7, #4]
 8003880:	681b      	ldr	r3, [r3, #0]
 8003882:	681b      	ldr	r3, [r3, #0]
 8003884:	f003 0304 	and.w	r3, r3, #4
 8003888:	2b00      	cmp	r3, #0
 800388a:	d013      	beq.n	80038b4 <HAL_DMA_IRQHandler+0x6c>
    {
      /* Disable the transfer error interrupt */
      hdma->Instance->CR  &= ~(DMA_IT_TE);
 800388c:	687b      	ldr	r3, [r7, #4]
 800388e:	681b      	ldr	r3, [r3, #0]
 8003890:	681a      	ldr	r2, [r3, #0]
 8003892:	687b      	ldr	r3, [r7, #4]
 8003894:	681b      	ldr	r3, [r3, #0]
 8003896:	f022 0204 	bic.w	r2, r2, #4
 800389a:	601a      	str	r2, [r3, #0]
      
      /* Clear the transfer error flag */
      regs->IFCR = DMA_FLAG_TEIF0_4 << hdma->StreamIndex;
 800389c:	687b      	ldr	r3, [r7, #4]
 800389e:	6ddb      	ldr	r3, [r3, #92]	@ 0x5c
 80038a0:	2208      	movs	r2, #8
 80038a2:	409a      	lsls	r2, r3
 80038a4:	693b      	ldr	r3, [r7, #16]
 80038a6:	609a      	str	r2, [r3, #8]
      
      /* Update error code */
      hdma->ErrorCode |= HAL_DMA_ERROR_TE;
 80038a8:	687b      	ldr	r3, [r7, #4]
 80038aa:	6d5b      	ldr	r3, [r3, #84]	@ 0x54
 80038ac:	f043 0201 	orr.w	r2, r3, #1
 80038b0:	687b      	ldr	r3, [r7, #4]
 80038b2:	655a      	str	r2, [r3, #84]	@ 0x54
    }
  }
  /* FIFO Error Interrupt management ******************************************/
  if ((tmpisr & (DMA_FLAG_FEIF0_4 << hdma->StreamIndex)) != RESET)
 80038b4:	687b      	ldr	r3, [r7, #4]
 80038b6:	6ddb      	ldr	r3, [r3, #92]	@ 0x5c
 80038b8:	2201      	movs	r2, #1
 80038ba:	409a      	lsls	r2, r3
 80038bc:	68fb      	ldr	r3, [r7, #12]
 80038be:	4013      	ands	r3, r2
 80038c0:	2b00      	cmp	r3, #0
 80038c2:	d012      	beq.n	80038ea <HAL_DMA_IRQHandler+0xa2>
  {
    if(__HAL_DMA_GET_IT_SOURCE(hdma, DMA_IT_FE) != RESET)
 80038c4:	687b      	ldr	r3, [r7, #4]
 80038c6:	681b      	ldr	r3, [r3, #0]
 80038c8:	695b      	ldr	r3, [r3, #20]
 80038ca:	f003 0380 	and.w	r3, r3, #128	@ 0x80
 80038ce:	2b00      	cmp	r3, #0
 80038d0:	d00b      	beq.n	80038ea <HAL_DMA_IRQHandler+0xa2>
    {
      /* Clear the FIFO error flag */
      regs->IFCR = DMA_FLAG_FEIF0_4 << hdma->StreamIndex;
 80038d2:	687b      	ldr	r3, [r7, #4]
 80038d4:	6ddb      	ldr	r3, [r3, #92]	@ 0x5c
 80038d6:	2201      	movs	r2, #1
 80038d8:	409a      	lsls	r2, r3
 80038da:	693b      	ldr	r3, [r7, #16]
 80038dc:	609a      	str	r2, [r3, #8]

      /* Update error code */
      hdma->ErrorCode |= HAL_DMA_ERROR_FE;
 80038de:	687b      	ldr	r3, [r7, #4]
 80038e0:	6d5b      	ldr	r3, [r3, #84]	@ 0x54
 80038e2:	f043 0202 	orr.w	r2, r3, #2
 80038e6:	687b      	ldr	r3, [r7, #4]
 80038e8:	655a      	str	r2, [r3, #84]	@ 0x54
    }
  }
  /* Direct Mode Error Interrupt management ***********************************/
  if ((tmpisr & (DMA_FLAG_DMEIF0_4 << hdma->StreamIndex)) != RESET)
 80038ea:	687b      	ldr	r3, [r7, #4]
 80038ec:	6ddb      	ldr	r3, [r3, #92]	@ 0x5c
 80038ee:	2204      	movs	r2, #4
 80038f0:	409a      	lsls	r2, r3
 80038f2:	68fb      	ldr	r3, [r7, #12]
 80038f4:	4013      	ands	r3, r2
 80038f6:	2b00      	cmp	r3, #0
 80038f8:	d012      	beq.n	8003920 <HAL_DMA_IRQHandler+0xd8>
  {
    if(__HAL_DMA_GET_IT_SOURCE(hdma, DMA_IT_DME) != RESET)
 80038fa:	687b      	ldr	r3, [r7, #4]
 80038fc:	681b      	ldr	r3, [r3, #0]
 80038fe:	681b      	ldr	r3, [r3, #0]
 8003900:	f003 0302 	and.w	r3, r3, #2
 8003904:	2b00      	cmp	r3, #0
 8003906:	d00b      	beq.n	8003920 <HAL_DMA_IRQHandler+0xd8>
    {
      /* Clear the direct mode error flag */
      regs->IFCR = DMA_FLAG_DMEIF0_4 << hdma->StreamIndex;
 8003908:	687b      	ldr	r3, [r7, #4]
 800390a:	6ddb      	ldr	r3, [r3, #92]	@ 0x5c
 800390c:	2204      	movs	r2, #4
 800390e:	409a      	lsls	r2, r3
 8003910:	693b      	ldr	r3, [r7, #16]
 8003912:	609a      	str	r2, [r3, #8]

      /* Update error code */
      hdma->ErrorCode |= HAL_DMA_ERROR_DME;
 8003914:	687b      	ldr	r3, [r7, #4]
 8003916:	6d5b      	ldr	r3, [r3, #84]	@ 0x54
 8003918:	f043 0204 	orr.w	r2, r3, #4
 800391c:	687b      	ldr	r3, [r7, #4]
 800391e:	655a      	str	r2, [r3, #84]	@ 0x54
    }
  }
  /* Half Transfer Complete Interrupt management ******************************/
  if ((tmpisr & (DMA_FLAG_HTIF0_4 << hdma->StreamIndex)) != RESET)
 8003920:	687b      	ldr	r3, [r7, #4]
 8003922:	6ddb      	ldr	r3, [r3, #92]	@ 0x5c
 8003924:	2210      	movs	r2, #16
 8003926:	409a      	lsls	r2, r3
 8003928:	68fb      	ldr	r3, [r7, #12]
 800392a:	4013      	ands	r3, r2
 800392c:	2b00      	cmp	r3, #0
 800392e:	d043      	beq.n	80039b8 <HAL_DMA_IRQHandler+0x170>
  {
    if(__HAL_DMA_GET_IT_SOURCE(hdma, DMA_IT_HT) != RESET)
 8003930:	687b      	ldr	r3, [r7, #4]
 8003932:	681b      	ldr	r3, [r3, #0]
 8003934:	681b      	ldr	r3, [r3, #0]
 8003936:	f003 0308 	and.w	r3, r3, #8
 800393a:	2b00      	cmp	r3, #0
 800393c:	d03c      	beq.n	80039b8 <HAL_DMA_IRQHandler+0x170>
    {
      /* Clear the half transfer complete flag */
      regs->IFCR = DMA_FLAG_HTIF0_4 << hdma->StreamIndex;
 800393e:	687b      	ldr	r3, [r7, #4]
 8003940:	6ddb      	ldr	r3, [r3, #92]	@ 0x5c
 8003942:	2210      	movs	r2, #16
 8003944:	409a      	lsls	r2, r3
 8003946:	693b      	ldr	r3, [r7, #16]
 8003948:	609a      	str	r2, [r3, #8]
      
      /* Multi_Buffering mode enabled */
      if(((hdma->Instance->CR) & (uint32_t)(DMA_SxCR_DBM)) != RESET)
 800394a:	687b      	ldr	r3, [r7, #4]
 800394c:	681b      	ldr	r3, [r3, #0]
 800394e:	681b      	ldr	r3, [r3, #0]
 8003950:	f403 2380 	and.w	r3, r3, #262144	@ 0x40000
 8003954:	2b00      	cmp	r3, #0
 8003956:	d018      	beq.n	800398a <HAL_DMA_IRQHandler+0x142>
      {
        /* Current memory buffer used is Memory 0 */
        if((hdma->Instance->CR & DMA_SxCR_CT) == RESET)
 8003958:	687b      	ldr	r3, [r7, #4]
 800395a:	681b      	ldr	r3, [r3, #0]
 800395c:	681b      	ldr	r3, [r3, #0]
 800395e:	f403 2300 	and.w	r3, r3, #524288	@ 0x80000
 8003962:	2b00      	cmp	r3, #0
 8003964:	d108      	bne.n	8003978 <HAL_DMA_IRQHandler+0x130>
        {
          if(hdma->XferHalfCpltCallback != NULL)
 8003966:	687b      	ldr	r3, [r7, #4]
 8003968:	6c1b      	ldr	r3, [r3, #64]	@ 0x40
 800396a:	2b00      	cmp	r3, #0
 800396c:	d024      	beq.n	80039b8 <HAL_DMA_IRQHandler+0x170>
          {
            /* Half transfer callback */
            hdma->XferHalfCpltCallback(hdma);
 800396e:	687b      	ldr	r3, [r7, #4]
 8003970:	6c1b      	ldr	r3, [r3, #64]	@ 0x40
 8003972:	6878      	ldr	r0, [r7, #4]
 8003974:	4798      	blx	r3
 8003976:	e01f      	b.n	80039b8 <HAL_DMA_IRQHandler+0x170>
          }
        }
        /* Current memory buffer used is Memory 1 */
        else
        {
          if(hdma->XferM1HalfCpltCallback != NULL)
 8003978:	687b      	ldr	r3, [r7, #4]
 800397a:	6c9b      	ldr	r3, [r3, #72]	@ 0x48
 800397c:	2b00      	cmp	r3, #0
 800397e:	d01b      	beq.n	80039b8 <HAL_DMA_IRQHandler+0x170>
          {
            /* Half transfer callback */
            hdma->XferM1HalfCpltCallback(hdma);
 8003980:	687b      	ldr	r3, [r7, #4]
 8003982:	6c9b      	ldr	r3, [r3, #72]	@ 0x48
 8003984:	6878      	ldr	r0, [r7, #4]
 8003986:	4798      	blx	r3
 8003988:	e016      	b.n	80039b8 <HAL_DMA_IRQHandler+0x170>
        }
      }
      else
      {
        /* Disable the half transfer interrupt if the DMA mode is not CIRCULAR */
        if((hdma->Instance->CR & DMA_SxCR_CIRC) == RESET)
 800398a:	687b      	ldr	r3, [r7, #4]
 800398c:	681b      	ldr	r3, [r3, #0]
 800398e:	681b      	ldr	r3, [r3, #0]
 8003990:	f403 7380 	and.w	r3, r3, #256	@ 0x100
 8003994:	2b00      	cmp	r3, #0
 8003996:	d107      	bne.n	80039a8 <HAL_DMA_IRQHandler+0x160>
        {
          /* Disable the half transfer interrupt */
          hdma->Instance->CR  &= ~(DMA_IT_HT);
 8003998:	687b      	ldr	r3, [r7, #4]
 800399a:	681b      	ldr	r3, [r3, #0]
 800399c:	681a      	ldr	r2, [r3, #0]
 800399e:	687b      	ldr	r3, [r7, #4]
 80039a0:	681b      	ldr	r3, [r3, #0]
 80039a2:	f022 0208 	bic.w	r2, r2, #8
 80039a6:	601a      	str	r2, [r3, #0]
        }
        
        if(hdma->XferHalfCpltCallback != NULL)
 80039a8:	687b      	ldr	r3, [r7, #4]
 80039aa:	6c1b      	ldr	r3, [r3, #64]	@ 0x40
 80039ac:	2b00      	cmp	r3, #0
 80039ae:	d003      	beq.n	80039b8 <HAL_DMA_IRQHandler+0x170>
        {
          /* Half transfer callback */
          hdma->XferHalfCpltCallback(hdma);
 80039b0:	687b      	ldr	r3, [r7, #4]
 80039b2:	6c1b      	ldr	r3, [r3, #64]	@ 0x40
 80039b4:	6878      	ldr	r0, [r7, #4]
 80039b6:	4798      	blx	r3
        }
      }
    }
  }
  /* Transfer Complete Interrupt management ***********************************/
  if ((tmpisr & (DMA_FLAG_TCIF0_4 << hdma->StreamIndex)) != RESET)
 80039b8:	687b      	ldr	r3, [r7, #4]
 80039ba:	6ddb      	ldr	r3, [r3, #92]	@ 0x5c
 80039bc:	2220      	movs	r2, #32
 80039be:	409a      	lsls	r2, r3
 80039c0:	68fb      	ldr	r3, [r7, #12]
 80039c2:	4013      	ands	r3, r2
 80039c4:	2b00      	cmp	r3, #0
 80039c6:	f000 808f 	beq.w	8003ae8 <HAL_DMA_IRQHandler+0x2a0>
  {
    if(__HAL_DMA_GET_IT_SOURCE(hdma, DMA_IT_TC) != RESET)
 80039ca:	687b      	ldr	r3, [r7, #4]
 80039cc:	681b      	ldr	r3, [r3, #0]
 80039ce:	681b      	ldr	r3, [r3, #0]
 80039d0:	f003 0310 	and.w	r3, r3, #16
 80039d4:	2b00      	cmp	r3, #0
 80039d6:	f000 8087 	beq.w	8003ae8 <HAL_DMA_IRQHandler+0x2a0>
    {
      /* Clear the transfer complete flag */
      regs->IFCR = DMA_FLAG_TCIF0_4 << hdma->StreamIndex;
 80039da:	687b      	ldr	r3, [r7, #4]
 80039dc:	6ddb      	ldr	r3, [r3, #92]	@ 0x5c
 80039de:	2220      	movs	r2, #32
 80039e0:	409a      	lsls	r2, r3
 80039e2:	693b      	ldr	r3, [r7, #16]
 80039e4:	609a      	str	r2, [r3, #8]
      
      if(HAL_DMA_STATE_ABORT == hdma->State)
 80039e6:	687b      	ldr	r3, [r7, #4]
 80039e8:	f893 3035 	ldrb.w	r3, [r3, #53]	@ 0x35
 80039ec:	b2db      	uxtb	r3, r3
 80039ee:	2b05      	cmp	r3, #5
 80039f0:	d136      	bne.n	8003a60 <HAL_DMA_IRQHandler+0x218>
      {
        /* Disable all the transfer interrupts */
        hdma->Instance->CR  &= ~(DMA_IT_TC | DMA_IT_TE | DMA_IT_DME);
 80039f2:	687b      	ldr	r3, [r7, #4]
 80039f4:	681b      	ldr	r3, [r3, #0]
 80039f6:	681a      	ldr	r2, [r3, #0]
 80039f8:	687b      	ldr	r3, [r7, #4]
 80039fa:	681b      	ldr	r3, [r3, #0]
 80039fc:	f022 0216 	bic.w	r2, r2, #22
 8003a00:	601a      	str	r2, [r3, #0]
        hdma->Instance->FCR &= ~(DMA_IT_FE);
 8003a02:	687b      	ldr	r3, [r7, #4]
 8003a04:	681b      	ldr	r3, [r3, #0]
 8003a06:	695a      	ldr	r2, [r3, #20]
 8003a08:	687b      	ldr	r3, [r7, #4]
 8003a0a:	681b      	ldr	r3, [r3, #0]
 8003a0c:	f022 0280 	bic.w	r2, r2, #128	@ 0x80
 8003a10:	615a      	str	r2, [r3, #20]
        
        if((hdma->XferHalfCpltCallback != NULL) || (hdma->XferM1HalfCpltCallback != NULL))
 8003a12:	687b      	ldr	r3, [r7, #4]
 8003a14:	6c1b      	ldr	r3, [r3, #64]	@ 0x40
 8003a16:	2b00      	cmp	r3, #0
 8003a18:	d103      	bne.n	8003a22 <HAL_DMA_IRQHandler+0x1da>
 8003a1a:	687b      	ldr	r3, [r7, #4]
 8003a1c:	6c9b      	ldr	r3, [r3, #72]	@ 0x48
 8003a1e:	2b00      	cmp	r3, #0
 8003a20:	d007      	beq.n	8003a32 <HAL_DMA_IRQHandler+0x1ea>
        {
          hdma->Instance->CR  &= ~(DMA_IT_HT);
 8003a22:	687b      	ldr	r3, [r7, #4]
 8003a24:	681b      	ldr	r3, [r3, #0]
 8003a26:	681a      	ldr	r2, [r3, #0]
 8003a28:	687b      	ldr	r3, [r7, #4]
 8003a2a:	681b      	ldr	r3, [r3, #0]
 8003a2c:	f022 0208 	bic.w	r2, r2, #8
 8003a30:	601a      	str	r2, [r3, #0]
        }

        /* Clear all interrupt flags at correct offset within the register */
        regs->IFCR = 0x3FU << hdma->StreamIndex;
 8003a32:	687b      	ldr	r3, [r7, #4]
 8003a34:	6ddb      	ldr	r3, [r3, #92]	@ 0x5c
 8003a36:	223f      	movs	r2, #63	@ 0x3f
 8003a38:	409a      	lsls	r2, r3
 8003a3a:	693b      	ldr	r3, [r7, #16]
 8003a3c:	609a      	str	r2, [r3, #8]

        /* Change the DMA state */
        hdma->State = HAL_DMA_STATE_READY;
 8003a3e:	687b      	ldr	r3, [r7, #4]
 8003a40:	2201      	movs	r2, #1
 8003a42:	f883 2035 	strb.w	r2, [r3, #53]	@ 0x35

        /* Process Unlocked */
        __HAL_UNLOCK(hdma);
 8003a46:	687b      	ldr	r3, [r7, #4]
 8003a48:	2200      	movs	r2, #0
 8003a4a:	f883 2034 	strb.w	r2, [r3, #52]	@ 0x34

        if(hdma->XferAbortCallback != NULL)
 8003a4e:	687b      	ldr	r3, [r7, #4]
 8003a50:	6d1b      	ldr	r3, [r3, #80]	@ 0x50
 8003a52:	2b00      	cmp	r3, #0
 8003a54:	d07e      	beq.n	8003b54 <HAL_DMA_IRQHandler+0x30c>
        {
          hdma->XferAbortCallback(hdma);
 8003a56:	687b      	ldr	r3, [r7, #4]
 8003a58:	6d1b      	ldr	r3, [r3, #80]	@ 0x50
 8003a5a:	6878      	ldr	r0, [r7, #4]
 8003a5c:	4798      	blx	r3
        }
        return;
 8003a5e:	e079      	b.n	8003b54 <HAL_DMA_IRQHandler+0x30c>
      }

      if(((hdma->Instance->CR) & (uint32_t)(DMA_SxCR_DBM)) != RESET)
 8003a60:	687b      	ldr	r3, [r7, #4]
 8003a62:	681b      	ldr	r3, [r3, #0]
 8003a64:	681b      	ldr	r3, [r3, #0]
 8003a66:	f403 2380 	and.w	r3, r3, #262144	@ 0x40000
 8003a6a:	2b00      	cmp	r3, #0
 8003a6c:	d01d      	beq.n	8003aaa <HAL_DMA_IRQHandler+0x262>
      {
        /* Current memory buffer used is Memory 0 */
        if((hdma->Instance->CR & DMA_SxCR_CT) == RESET)
 8003a6e:	687b      	ldr	r3, [r7, #4]
 8003a70:	681b      	ldr	r3, [r3, #0]
 8003a72:	681b      	ldr	r3, [r3, #0]
 8003a74:	f403 2300 	and.w	r3, r3, #524288	@ 0x80000
 8003a78:	2b00      	cmp	r3, #0
 8003a7a:	d10d      	bne.n	8003a98 <HAL_DMA_IRQHandler+0x250>
        {
          if(hdma->XferM1CpltCallback != NULL)
 8003a7c:	687b      	ldr	r3, [r7, #4]
 8003a7e:	6c5b      	ldr	r3, [r3, #68]	@ 0x44
 8003a80:	2b00      	cmp	r3, #0
 8003a82:	d031      	beq.n	8003ae8 <HAL_DMA_IRQHandler+0x2a0>
          {
            /* Transfer complete Callback for memory1 */
            hdma->XferM1CpltCallback(hdma);
 8003a84:	687b      	ldr	r3, [r7, #4]
 8003a86:	6c5b      	ldr	r3, [r3, #68]	@ 0x44
 8003a88:	6878      	ldr	r0, [r7, #4]
 8003a8a:	4798      	blx	r3
 8003a8c:	e02c      	b.n	8003ae8 <HAL_DMA_IRQHandler+0x2a0>
 8003a8e:	bf00      	nop
 8003a90:	20000014 	.word	0x20000014
 8003a94:	1b4e81b5 	.word	0x1b4e81b5
          }
        }
        /* Current memory buffer used is Memory 1 */
        else
        {
          if(hdma->XferCpltCallback != NULL)
 8003a98:	687b      	ldr	r3, [r7, #4]
 8003a9a:	6bdb      	ldr	r3, [r3, #60]	@ 0x3c
 8003a9c:	2b00      	cmp	r3, #0
 8003a9e:	d023      	beq.n	8003ae8 <HAL_DMA_IRQHandler+0x2a0>
          {
            /* Transfer complete Callback for memory0 */
            hdma->XferCpltCallback(hdma);
 8003aa0:	687b      	ldr	r3, [r7, #4]
 8003aa2:	6bdb      	ldr	r3, [r3, #60]	@ 0x3c
 8003aa4:	6878      	ldr	r0, [r7, #4]
 8003aa6:	4798      	blx	r3
 8003aa8:	e01e      	b.n	8003ae8 <HAL_DMA_IRQHandler+0x2a0>
        }
      }
      /* Disable the transfer complete interrupt if the DMA mode is not CIRCULAR */
      else
      {
        if((hdma->Instance->CR & DMA_SxCR_CIRC) == RESET)
 8003aaa:	687b      	ldr	r3, [r7, #4]
 8003aac:	681b      	ldr	r3, [r3, #0]
 8003aae:	681b      	ldr	r3, [r3, #0]
 8003ab0:	f403 7380 	and.w	r3, r3, #256	@ 0x100
 8003ab4:	2b00      	cmp	r3, #0
 8003ab6:	d10f      	bne.n	8003ad8 <HAL_DMA_IRQHandler+0x290>
        {
          /* Disable the transfer complete interrupt */
          hdma->Instance->CR  &= ~(DMA_IT_TC);
 8003ab8:	687b      	ldr	r3, [r7, #4]
 8003aba:	681b      	ldr	r3, [r3, #0]
 8003abc:	681a      	ldr	r2, [r3, #0]
 8003abe:	687b      	ldr	r3, [r7, #4]
 8003ac0:	681b      	ldr	r3, [r3, #0]
 8003ac2:	f022 0210 	bic.w	r2, r2, #16
 8003ac6:	601a      	str	r2, [r3, #0]

          /* Change the DMA state */
          hdma->State = HAL_DMA_STATE_READY;
 8003ac8:	687b      	ldr	r3, [r7, #4]
 8003aca:	2201      	movs	r2, #1
 8003acc:	f883 2035 	strb.w	r2, [r3, #53]	@ 0x35

          /* Process Unlocked */
          __HAL_UNLOCK(hdma);
 8003ad0:	687b      	ldr	r3, [r7, #4]
 8003ad2:	2200      	movs	r2, #0
 8003ad4:	f883 2034 	strb.w	r2, [r3, #52]	@ 0x34
        }

        if(hdma->XferCpltCallback != NULL)
 8003ad8:	687b      	ldr	r3, [r7, #4]
 8003ada:	6bdb      	ldr	r3, [r3, #60]	@ 0x3c
 8003adc:	2b00      	cmp	r3, #0
 8003ade:	d003      	beq.n	8003ae8 <HAL_DMA_IRQHandler+0x2a0>
        {
          /* Transfer complete callback */
          hdma->XferCpltCallback(hdma);
 8003ae0:	687b      	ldr	r3, [r7, #4]
 8003ae2:	6bdb      	ldr	r3, [r3, #60]	@ 0x3c
 8003ae4:	6878      	ldr	r0, [r7, #4]
 8003ae6:	4798      	blx	r3
      }
    }
  }
  
  /* manage error case */
  if(hdma->ErrorCode != HAL_DMA_ERROR_NONE)
 8003ae8:	687b      	ldr	r3, [r7, #4]
 8003aea:	6d5b      	ldr	r3, [r3, #84]	@ 0x54
 8003aec:	2b00      	cmp	r3, #0
 8003aee:	d032      	beq.n	8003b56 <HAL_DMA_IRQHandler+0x30e>
  {
    if((hdma->ErrorCode & HAL_DMA_ERROR_TE) != RESET)
 8003af0:	687b      	ldr	r3, [r7, #4]
 8003af2:	6d5b      	ldr	r3, [r3, #84]	@ 0x54
 8003af4:	f003 0301 	and.w	r3, r3, #1
 8003af8:	2b00      	cmp	r3, #0
 8003afa:	d022      	beq.n	8003b42 <HAL_DMA_IRQHandler+0x2fa>
    {
      hdma->State = HAL_DMA_STATE_ABORT;
 8003afc:	687b      	ldr	r3, [r7, #4]
 8003afe:	2205      	movs	r2, #5
 8003b00:	f883 2035 	strb.w	r2, [r3, #53]	@ 0x35

      /* Disable the stream */
      __HAL_DMA_DISABLE(hdma);
 8003b04:	687b      	ldr	r3, [r7, #4]
 8003b06:	681b      	ldr	r3, [r3, #0]
 8003b08:	681a      	ldr	r2, [r3, #0]
 8003b0a:	687b      	ldr	r3, [r7, #4]
 8003b0c:	681b      	ldr	r3, [r3, #0]
 8003b0e:	f022 0201 	bic.w	r2, r2, #1
 8003b12:	601a      	str	r2, [r3, #0]

      do
      {
        if (++count > timeout)
 8003b14:	68bb      	ldr	r3, [r7, #8]
 8003b16:	3301      	adds	r3, #1
 8003b18:	60bb      	str	r3, [r7, #8]
 8003b1a:	697a      	ldr	r2, [r7, #20]
 8003b1c:	429a      	cmp	r2, r3
 8003b1e:	d307      	bcc.n	8003b30 <HAL_DMA_IRQHandler+0x2e8>
        {
          break;
        }
      }
      while((hdma->Instance->CR & DMA_SxCR_EN) != RESET);
 8003b20:	687b      	ldr	r3, [r7, #4]
 8003b22:	681b      	ldr	r3, [r3, #0]
 8003b24:	681b      	ldr	r3, [r3, #0]
 8003b26:	f003 0301 	and.w	r3, r3, #1
 8003b2a:	2b00      	cmp	r3, #0
 8003b2c:	d1f2      	bne.n	8003b14 <HAL_DMA_IRQHandler+0x2cc>
 8003b2e:	e000      	b.n	8003b32 <HAL_DMA_IRQHandler+0x2ea>
          break;
 8003b30:	bf00      	nop

      /* Change the DMA state */
      hdma->State = HAL_DMA_STATE_READY;
 8003b32:	687b      	ldr	r3, [r7, #4]
 8003b34:	2201      	movs	r2, #1
 8003b36:	f883 2035 	strb.w	r2, [r3, #53]	@ 0x35

      /* Process Unlocked */
      __HAL_UNLOCK(hdma);
 8003b3a:	687b      	ldr	r3, [r7, #4]
 8003b3c:	2200      	movs	r2, #0
 8003b3e:	f883 2034 	strb.w	r2, [r3, #52]	@ 0x34
    }

    if(hdma->XferErrorCallback != NULL)
 8003b42:	687b      	ldr	r3, [r7, #4]
 8003b44:	6cdb      	ldr	r3, [r3, #76]	@ 0x4c
 8003b46:	2b00      	cmp	r3, #0
 8003b48:	d005      	beq.n	8003b56 <HAL_DMA_IRQHandler+0x30e>
    {
      /* Transfer error callback */
      hdma->XferErrorCallback(hdma);
 8003b4a:	687b      	ldr	r3, [r7, #4]
 8003b4c:	6cdb      	ldr	r3, [r3, #76]	@ 0x4c
 8003b4e:	6878      	ldr	r0, [r7, #4]
 8003b50:	4798      	blx	r3
 8003b52:	e000      	b.n	8003b56 <HAL_DMA_IRQHandler+0x30e>
        return;
 8003b54:	bf00      	nop
    }
  }
}
 8003b56:	3718      	adds	r7, #24
 8003b58:	46bd      	mov	sp, r7
 8003b5a:	bd80      	pop	{r7, pc}

08003b5c <DMA_SetConfig>:
  * @param  DstAddress The destination memory Buffer address
  * @param  DataLength The length of data to be transferred from source to destination
  * @retval HAL status
  */
static void DMA_SetConfig(DMA_HandleTypeDef *hdma, uint32_t SrcAddress, uint32_t DstAddress, uint32_t DataLength)
{
 8003b5c:	b480      	push	{r7}
 8003b5e:	b085      	sub	sp, #20
 8003b60:	af00      	add	r7, sp, #0
 8003b62:	60f8      	str	r0, [r7, #12]
 8003b64:	60b9      	str	r1, [r7, #8]
 8003b66:	607a      	str	r2, [r7, #4]
 8003b68:	603b      	str	r3, [r7, #0]
  /* Clear DBM bit */
  hdma->Instance->CR &= (uint32_t)(~DMA_SxCR_DBM);
 8003b6a:	68fb      	ldr	r3, [r7, #12]
 8003b6c:	681b      	ldr	r3, [r3, #0]
 8003b6e:	681a      	ldr	r2, [r3, #0]
 8003b70:	68fb      	ldr	r3, [r7, #12]
 8003b72:	681b      	ldr	r3, [r3, #0]
 8003b74:	f422 2280 	bic.w	r2, r2, #262144	@ 0x40000
 8003b78:	601a      	str	r2, [r3, #0]

  /* Configure DMA Stream data length */
  hdma->Instance->NDTR = DataLength;
 8003b7a:	68fb      	ldr	r3, [r7, #12]
 8003b7c:	681b      	ldr	r3, [r3, #0]
 8003b7e:	683a      	ldr	r2, [r7, #0]
 8003b80:	605a      	str	r2, [r3, #4]

  /* Memory to Peripheral */
  if((hdma->Init.Direction) == DMA_MEMORY_TO_PERIPH)
 8003b82:	68fb      	ldr	r3, [r7, #12]
 8003b84:	689b      	ldr	r3, [r3, #8]
 8003b86:	2b40      	cmp	r3, #64	@ 0x40
 8003b88:	d108      	bne.n	8003b9c <DMA_SetConfig+0x40>
  {
    /* Configure DMA Stream destination address */
    hdma->Instance->PAR = DstAddress;
 8003b8a:	68fb      	ldr	r3, [r7, #12]
 8003b8c:	681b      	ldr	r3, [r3, #0]
 8003b8e:	687a      	ldr	r2, [r7, #4]
 8003b90:	609a      	str	r2, [r3, #8]

    /* Configure DMA Stream source address */
    hdma->Instance->M0AR = SrcAddress;
 8003b92:	68fb      	ldr	r3, [r7, #12]
 8003b94:	681b      	ldr	r3, [r3, #0]
 8003b96:	68ba      	ldr	r2, [r7, #8]
 8003b98:	60da      	str	r2, [r3, #12]
    hdma->Instance->PAR = SrcAddress;

    /* Configure DMA Stream destination address */
    hdma->Instance->M0AR = DstAddress;
  }
}
 8003b9a:	e007      	b.n	8003bac <DMA_SetConfig+0x50>
    hdma->Instance->PAR = SrcAddress;
 8003b9c:	68fb      	ldr	r3, [r7, #12]
 8003b9e:	681b      	ldr	r3, [r3, #0]
 8003ba0:	68ba      	ldr	r2, [r7, #8]
 8003ba2:	609a      	str	r2, [r3, #8]
    hdma->Instance->M0AR = DstAddress;
 8003ba4:	68fb      	ldr	r3, [r7, #12]
 8003ba6:	681b      	ldr	r3, [r3, #0]
 8003ba8:	687a      	ldr	r2, [r7, #4]
 8003baa:	60da      	str	r2, [r3, #12]
}
 8003bac:	bf00      	nop
 8003bae:	3714      	adds	r7, #20
 8003bb0:	46bd      	mov	sp, r7
 8003bb2:	f85d 7b04 	ldr.w	r7, [sp], #4
 8003bb6:	4770      	bx	lr

08003bb8 <DMA_CalcBaseAndBitshift>:
  * @param  hdma       pointer to a DMA_HandleTypeDef structure that contains
  *                     the configuration information for the specified DMA Stream. 
  * @retval Stream base address
  */
static uint32_t DMA_CalcBaseAndBitshift(DMA_HandleTypeDef *hdma)
{
 8003bb8:	b480      	push	{r7}
 8003bba:	b085      	sub	sp, #20
 8003bbc:	af00      	add	r7, sp, #0
 8003bbe:	6078      	str	r0, [r7, #4]
  uint32_t stream_number = (((uint32_t)hdma->Instance & 0xFFU) - 16U) / 24U;
 8003bc0:	687b      	ldr	r3, [r7, #4]
 8003bc2:	681b      	ldr	r3, [r3, #0]
 8003bc4:	b2db      	uxtb	r3, r3
 8003bc6:	3b10      	subs	r3, #16
 8003bc8:	4a14      	ldr	r2, [pc, #80]	@ (8003c1c <DMA_CalcBaseAndBitshift+0x64>)
 8003bca:	fba2 2303 	umull	r2, r3, r2, r3
 8003bce:	091b      	lsrs	r3, r3, #4
 8003bd0:	60fb      	str	r3, [r7, #12]
  
  /* lookup table for necessary bitshift of flags within status registers */
  static const uint8_t flagBitshiftOffset[8U] = {0U, 6U, 16U, 22U, 0U, 6U, 16U, 22U};
  hdma->StreamIndex = flagBitshiftOffset[stream_number];
 8003bd2:	4a13      	ldr	r2, [pc, #76]	@ (8003c20 <DMA_CalcBaseAndBitshift+0x68>)
 8003bd4:	68fb      	ldr	r3, [r7, #12]
 8003bd6:	4413      	add	r3, r2
 8003bd8:	781b      	ldrb	r3, [r3, #0]
 8003bda:	461a      	mov	r2, r3
 8003bdc:	687b      	ldr	r3, [r7, #4]
 8003bde:	65da      	str	r2, [r3, #92]	@ 0x5c
  
  if (stream_number > 3U)
 8003be0:	68fb      	ldr	r3, [r7, #12]
 8003be2:	2b03      	cmp	r3, #3
 8003be4:	d909      	bls.n	8003bfa <DMA_CalcBaseAndBitshift+0x42>
  {
    /* return pointer to HISR and HIFCR */
    hdma->StreamBaseAddress = (((uint32_t)hdma->Instance & (uint32_t)(~0x3FFU)) + 4U);
 8003be6:	687b      	ldr	r3, [r7, #4]
 8003be8:	681b      	ldr	r3, [r3, #0]
 8003bea:	f423 737f 	bic.w	r3, r3, #1020	@ 0x3fc
 8003bee:	f023 0303 	bic.w	r3, r3, #3
 8003bf2:	1d1a      	adds	r2, r3, #4
 8003bf4:	687b      	ldr	r3, [r7, #4]
 8003bf6:	659a      	str	r2, [r3, #88]	@ 0x58
 8003bf8:	e007      	b.n	8003c0a <DMA_CalcBaseAndBitshift+0x52>
  }
  else
  {
    /* return pointer to LISR and LIFCR */
    hdma->StreamBaseAddress = ((uint32_t)hdma->Instance & (uint32_t)(~0x3FFU));
 8003bfa:	687b      	ldr	r3, [r7, #4]
 8003bfc:	681b      	ldr	r3, [r3, #0]
 8003bfe:	f423 737f 	bic.w	r3, r3, #1020	@ 0x3fc
 8003c02:	f023 0303 	bic.w	r3, r3, #3
 8003c06:	687a      	ldr	r2, [r7, #4]
 8003c08:	6593      	str	r3, [r2, #88]	@ 0x58
  }
  
  return hdma->StreamBaseAddress;
 8003c0a:	687b      	ldr	r3, [r7, #4]
 8003c0c:	6d9b      	ldr	r3, [r3, #88]	@ 0x58
}
 8003c0e:	4618      	mov	r0, r3
 8003c10:	3714      	adds	r7, #20
 8003c12:	46bd      	mov	sp, r7
 8003c14:	f85d 7b04 	ldr.w	r7, [sp], #4
 8003c18:	4770      	bx	lr
 8003c1a:	bf00      	nop
 8003c1c:	aaaaaaab 	.word	0xaaaaaaab
 8003c20:	08027f70 	.word	0x08027f70

08003c24 <DMA_CheckFifoParam>:
  * @param  hdma       pointer to a DMA_HandleTypeDef structure that contains
  *                     the configuration information for the specified DMA Stream. 
  * @retval HAL status
  */
static HAL_StatusTypeDef DMA_CheckFifoParam(DMA_HandleTypeDef *hdma)
{
 8003c24:	b480      	push	{r7}
 8003c26:	b085      	sub	sp, #20
 8003c28:	af00      	add	r7, sp, #0
 8003c2a:	6078      	str	r0, [r7, #4]
  HAL_StatusTypeDef status = HAL_OK;
 8003c2c:	2300      	movs	r3, #0
 8003c2e:	73fb      	strb	r3, [r7, #15]
  uint32_t tmp = hdma->Init.FIFOThreshold;
 8003c30:	687b      	ldr	r3, [r7, #4]
 8003c32:	6a9b      	ldr	r3, [r3, #40]	@ 0x28
 8003c34:	60bb      	str	r3, [r7, #8]
  
  /* Memory Data size equal to Byte */
  if(hdma->Init.MemDataAlignment == DMA_MDATAALIGN_BYTE)
 8003c36:	687b      	ldr	r3, [r7, #4]
 8003c38:	699b      	ldr	r3, [r3, #24]
 8003c3a:	2b00      	cmp	r3, #0
 8003c3c:	d11f      	bne.n	8003c7e <DMA_CheckFifoParam+0x5a>
  {
    switch (tmp)
 8003c3e:	68bb      	ldr	r3, [r7, #8]
 8003c40:	2b03      	cmp	r3, #3
 8003c42:	d856      	bhi.n	8003cf2 <DMA_CheckFifoParam+0xce>
 8003c44:	a201      	add	r2, pc, #4	@ (adr r2, 8003c4c <DMA_CheckFifoParam+0x28>)
 8003c46:	f852 f023 	ldr.w	pc, [r2, r3, lsl #2]
 8003c4a:	bf00      	nop
 8003c4c:	08003c5d 	.word	0x08003c5d
 8003c50:	08003c6f 	.word	0x08003c6f
 8003c54:	08003c5d 	.word	0x08003c5d
 8003c58:	08003cf3 	.word	0x08003cf3
    {
    case DMA_FIFO_THRESHOLD_1QUARTERFULL:
    case DMA_FIFO_THRESHOLD_3QUARTERSFULL:
      if ((hdma->Init.MemBurst & DMA_SxCR_MBURST_1) == DMA_SxCR_MBURST_1)
 8003c5c:	687b      	ldr	r3, [r7, #4]
 8003c5e:	6adb      	ldr	r3, [r3, #44]	@ 0x2c
 8003c60:	f003 7380 	and.w	r3, r3, #16777216	@ 0x1000000
 8003c64:	2b00      	cmp	r3, #0
 8003c66:	d046      	beq.n	8003cf6 <DMA_CheckFifoParam+0xd2>
      {
        status = HAL_ERROR;
 8003c68:	2301      	movs	r3, #1
 8003c6a:	73fb      	strb	r3, [r7, #15]
      }
      break;
 8003c6c:	e043      	b.n	8003cf6 <DMA_CheckFifoParam+0xd2>
    case DMA_FIFO_THRESHOLD_HALFFULL:
      if (hdma->Init.MemBurst == DMA_MBURST_INC16)
 8003c6e:	687b      	ldr	r3, [r7, #4]
 8003c70:	6adb      	ldr	r3, [r3, #44]	@ 0x2c
 8003c72:	f1b3 7fc0 	cmp.w	r3, #25165824	@ 0x1800000
 8003c76:	d140      	bne.n	8003cfa <DMA_CheckFifoParam+0xd6>
      {
        status = HAL_ERROR;
 8003c78:	2301      	movs	r3, #1
 8003c7a:	73fb      	strb	r3, [r7, #15]
      }
      break;
 8003c7c:	e03d      	b.n	8003cfa <DMA_CheckFifoParam+0xd6>
      break;
    }
  }
  
  /* Memory Data size equal to Half-Word */
  else if (hdma->Init.MemDataAlignment == DMA_MDATAALIGN_HALFWORD)
 8003c7e:	687b      	ldr	r3, [r7, #4]
 8003c80:	699b      	ldr	r3, [r3, #24]
 8003c82:	f5b3 5f00 	cmp.w	r3, #8192	@ 0x2000
 8003c86:	d121      	bne.n	8003ccc <DMA_CheckFifoParam+0xa8>
  {
    switch (tmp)
 8003c88:	68bb      	ldr	r3, [r7, #8]
 8003c8a:	2b03      	cmp	r3, #3
 8003c8c:	d837      	bhi.n	8003cfe <DMA_CheckFifoParam+0xda>
 8003c8e:	a201      	add	r2, pc, #4	@ (adr r2, 8003c94 <DMA_CheckFifoParam+0x70>)
 8003c90:	f852 f023 	ldr.w	pc, [r2, r3, lsl #2]
 8003c94:	08003ca5 	.word	0x08003ca5
 8003c98:	08003cab 	.word	0x08003cab
 8003c9c:	08003ca5 	.word	0x08003ca5
 8003ca0:	08003cbd 	.word	0x08003cbd
    {
    case DMA_FIFO_THRESHOLD_1QUARTERFULL:
    case DMA_FIFO_THRESHOLD_3QUARTERSFULL:
      status = HAL_ERROR;
 8003ca4:	2301      	movs	r3, #1
 8003ca6:	73fb      	strb	r3, [r7, #15]
      break;
 8003ca8:	e030      	b.n	8003d0c <DMA_CheckFifoParam+0xe8>
    case DMA_FIFO_THRESHOLD_HALFFULL:
      if ((hdma->Init.MemBurst & DMA_SxCR_MBURST_1) == DMA_SxCR_MBURST_1)
 8003caa:	687b      	ldr	r3, [r7, #4]
 8003cac:	6adb      	ldr	r3, [r3, #44]	@ 0x2c
 8003cae:	f003 7380 	and.w	r3, r3, #16777216	@ 0x1000000
 8003cb2:	2b00      	cmp	r3, #0
 8003cb4:	d025      	beq.n	8003d02 <DMA_CheckFifoParam+0xde>
      {
        status = HAL_ERROR;
 8003cb6:	2301      	movs	r3, #1
 8003cb8:	73fb      	strb	r3, [r7, #15]
      }
      break;
 8003cba:	e022      	b.n	8003d02 <DMA_CheckFifoParam+0xde>
    case DMA_FIFO_THRESHOLD_FULL:
      if (hdma->Init.MemBurst == DMA_MBURST_INC16)
 8003cbc:	687b      	ldr	r3, [r7, #4]
 8003cbe:	6adb      	ldr	r3, [r3, #44]	@ 0x2c
 8003cc0:	f1b3 7fc0 	cmp.w	r3, #25165824	@ 0x1800000
 8003cc4:	d11f      	bne.n	8003d06 <DMA_CheckFifoParam+0xe2>
      {
        status = HAL_ERROR;
 8003cc6:	2301      	movs	r3, #1
 8003cc8:	73fb      	strb	r3, [r7, #15]
      }
      break;   
 8003cca:	e01c      	b.n	8003d06 <DMA_CheckFifoParam+0xe2>
  }
  
  /* Memory Data size equal to Word */
  else
  {
    switch (tmp)
 8003ccc:	68bb      	ldr	r3, [r7, #8]
 8003cce:	2b02      	cmp	r3, #2
 8003cd0:	d903      	bls.n	8003cda <DMA_CheckFifoParam+0xb6>
 8003cd2:	68bb      	ldr	r3, [r7, #8]
 8003cd4:	2b03      	cmp	r3, #3
 8003cd6:	d003      	beq.n	8003ce0 <DMA_CheckFifoParam+0xbc>
      {
        status = HAL_ERROR;
      }
      break;
    default:
      break;
 8003cd8:	e018      	b.n	8003d0c <DMA_CheckFifoParam+0xe8>
      status = HAL_ERROR;
 8003cda:	2301      	movs	r3, #1
 8003cdc:	73fb      	strb	r3, [r7, #15]
      break;
 8003cde:	e015      	b.n	8003d0c <DMA_CheckFifoParam+0xe8>
      if ((hdma->Init.MemBurst & DMA_SxCR_MBURST_1) == DMA_SxCR_MBURST_1)
 8003ce0:	687b      	ldr	r3, [r7, #4]
 8003ce2:	6adb      	ldr	r3, [r3, #44]	@ 0x2c
 8003ce4:	f003 7380 	and.w	r3, r3, #16777216	@ 0x1000000
 8003ce8:	2b00      	cmp	r3, #0
 8003cea:	d00e      	beq.n	8003d0a <DMA_CheckFifoParam+0xe6>
        status = HAL_ERROR;
 8003cec:	2301      	movs	r3, #1
 8003cee:	73fb      	strb	r3, [r7, #15]
      break;
 8003cf0:	e00b      	b.n	8003d0a <DMA_CheckFifoParam+0xe6>
      break;
 8003cf2:	bf00      	nop
 8003cf4:	e00a      	b.n	8003d0c <DMA_CheckFifoParam+0xe8>
      break;
 8003cf6:	bf00      	nop
 8003cf8:	e008      	b.n	8003d0c <DMA_CheckFifoParam+0xe8>
      break;
 8003cfa:	bf00      	nop
 8003cfc:	e006      	b.n	8003d0c <DMA_CheckFifoParam+0xe8>
      break;
 8003cfe:	bf00      	nop
 8003d00:	e004      	b.n	8003d0c <DMA_CheckFifoParam+0xe8>
      break;
 8003d02:	bf00      	nop
 8003d04:	e002      	b.n	8003d0c <DMA_CheckFifoParam+0xe8>
      break;   
 8003d06:	bf00      	nop
 8003d08:	e000      	b.n	8003d0c <DMA_CheckFifoParam+0xe8>
      break;
 8003d0a:	bf00      	nop
    }
  } 
  
  return status; 
 8003d0c:	7bfb      	ldrb	r3, [r7, #15]
}
 8003d0e:	4618      	mov	r0, r3
 8003d10:	3714      	adds	r7, #20
 8003d12:	46bd      	mov	sp, r7
 8003d14:	f85d 7b04 	ldr.w	r7, [sp], #4
 8003d18:	4770      	bx	lr
 8003d1a:	bf00      	nop

08003d1c <HAL_GPIO_Init>:
  * @param  GPIO_Init pointer to a GPIO_InitTypeDef structure that contains
  *         the configuration information for the specified GPIO peripheral.
  * @retval None
  */
void HAL_GPIO_Init(GPIO_TypeDef  *GPIOx, GPIO_InitTypeDef *GPIO_Init)
{
 8003d1c:	b480      	push	{r7}
 8003d1e:	b089      	sub	sp, #36	@ 0x24
 8003d20:	af00      	add	r7, sp, #0
 8003d22:	6078      	str	r0, [r7, #4]
 8003d24:	6039      	str	r1, [r7, #0]
  uint32_t position;
  uint32_t ioposition = 0x00U;
 8003d26:	2300      	movs	r3, #0
 8003d28:	617b      	str	r3, [r7, #20]
  uint32_t iocurrent = 0x00U;
 8003d2a:	2300      	movs	r3, #0
 8003d2c:	613b      	str	r3, [r7, #16]
  uint32_t temp = 0x00U;
 8003d2e:	2300      	movs	r3, #0
 8003d30:	61bb      	str	r3, [r7, #24]
  assert_param(IS_GPIO_ALL_INSTANCE(GPIOx));
  assert_param(IS_GPIO_PIN(GPIO_Init->Pin));
  assert_param(IS_GPIO_MODE(GPIO_Init->Mode));

  /* Configure the port pins */
  for(position = 0U; position < GPIO_NUMBER; position++)
 8003d32:	2300      	movs	r3, #0
 8003d34:	61fb      	str	r3, [r7, #28]
 8003d36:	e165      	b.n	8004004 <HAL_GPIO_Init+0x2e8>
  {
    /* Get the IO position */
    ioposition = 0x01U << position;
 8003d38:	2201      	movs	r2, #1
 8003d3a:	69fb      	ldr	r3, [r7, #28]
 8003d3c:	fa02 f303 	lsl.w	r3, r2, r3
 8003d40:	617b      	str	r3, [r7, #20]
    /* Get the current IO position */
    iocurrent = (uint32_t)(GPIO_Init->Pin) & ioposition;
 8003d42:	683b      	ldr	r3, [r7, #0]
 8003d44:	681b      	ldr	r3, [r3, #0]
 8003d46:	697a      	ldr	r2, [r7, #20]
 8003d48:	4013      	ands	r3, r2
 8003d4a:	613b      	str	r3, [r7, #16]

    if(iocurrent == ioposition)
 8003d4c:	693a      	ldr	r2, [r7, #16]
 8003d4e:	697b      	ldr	r3, [r7, #20]
 8003d50:	429a      	cmp	r2, r3
 8003d52:	f040 8154 	bne.w	8003ffe <HAL_GPIO_Init+0x2e2>
    {
      /*--------------------- GPIO Mode Configuration ------------------------*/
      /* In case of Output or Alternate function mode selection */
      if(((GPIO_Init->Mode & GPIO_MODE) == MODE_OUTPUT) || \
 8003d56:	683b      	ldr	r3, [r7, #0]
 8003d58:	685b      	ldr	r3, [r3, #4]
 8003d5a:	f003 0303 	and.w	r3, r3, #3
 8003d5e:	2b01      	cmp	r3, #1
 8003d60:	d005      	beq.n	8003d6e <HAL_GPIO_Init+0x52>
          (GPIO_Init->Mode & GPIO_MODE) == MODE_AF)
 8003d62:	683b      	ldr	r3, [r7, #0]
 8003d64:	685b      	ldr	r3, [r3, #4]
 8003d66:	f003 0303 	and.w	r3, r3, #3
      if(((GPIO_Init->Mode & GPIO_MODE) == MODE_OUTPUT) || \
 8003d6a:	2b02      	cmp	r3, #2
 8003d6c:	d130      	bne.n	8003dd0 <HAL_GPIO_Init+0xb4>
      {
        /* Check the Speed parameter */
        assert_param(IS_GPIO_SPEED(GPIO_Init->Speed));
        /* Configure the IO Speed */
        temp = GPIOx->OSPEEDR; 
 8003d6e:	687b      	ldr	r3, [r7, #4]
 8003d70:	689b      	ldr	r3, [r3, #8]
 8003d72:	61bb      	str	r3, [r7, #24]
        temp &= ~(GPIO_OSPEEDER_OSPEEDR0 << (position * 2U));
 8003d74:	69fb      	ldr	r3, [r7, #28]
 8003d76:	005b      	lsls	r3, r3, #1
 8003d78:	2203      	movs	r2, #3
 8003d7a:	fa02 f303 	lsl.w	r3, r2, r3
 8003d7e:	43db      	mvns	r3, r3
 8003d80:	69ba      	ldr	r2, [r7, #24]
 8003d82:	4013      	ands	r3, r2
 8003d84:	61bb      	str	r3, [r7, #24]
        temp |= (GPIO_Init->Speed << (position * 2U));
 8003d86:	683b      	ldr	r3, [r7, #0]
 8003d88:	68da      	ldr	r2, [r3, #12]
 8003d8a:	69fb      	ldr	r3, [r7, #28]
 8003d8c:	005b      	lsls	r3, r3, #1
 8003d8e:	fa02 f303 	lsl.w	r3, r2, r3
 8003d92:	69ba      	ldr	r2, [r7, #24]
 8003d94:	4313      	orrs	r3, r2
 8003d96:	61bb      	str	r3, [r7, #24]
        GPIOx->OSPEEDR = temp;
 8003d98:	687b      	ldr	r3, [r7, #4]
 8003d9a:	69ba      	ldr	r2, [r7, #24]
 8003d9c:	609a      	str	r2, [r3, #8]

        /* Configure the IO Output Type */
        temp = GPIOx->OTYPER;
 8003d9e:	687b      	ldr	r3, [r7, #4]
 8003da0:	685b      	ldr	r3, [r3, #4]
 8003da2:	61bb      	str	r3, [r7, #24]
        temp &= ~(GPIO_OTYPER_OT_0 << position) ;
 8003da4:	2201      	movs	r2, #1
 8003da6:	69fb      	ldr	r3, [r7, #28]
 8003da8:	fa02 f303 	lsl.w	r3, r2, r3
 8003dac:	43db      	mvns	r3, r3
 8003dae:	69ba      	ldr	r2, [r7, #24]
 8003db0:	4013      	ands	r3, r2
 8003db2:	61bb      	str	r3, [r7, #24]
        temp |= (((GPIO_Init->Mode & OUTPUT_TYPE) >> OUTPUT_TYPE_Pos) << position);
 8003db4:	683b      	ldr	r3, [r7, #0]
 8003db6:	685b      	ldr	r3, [r3, #4]
 8003db8:	091b      	lsrs	r3, r3, #4
 8003dba:	f003 0201 	and.w	r2, r3, #1
 8003dbe:	69fb      	ldr	r3, [r7, #28]
 8003dc0:	fa02 f303 	lsl.w	r3, r2, r3
 8003dc4:	69ba      	ldr	r2, [r7, #24]
 8003dc6:	4313      	orrs	r3, r2
 8003dc8:	61bb      	str	r3, [r7, #24]
        GPIOx->OTYPER = temp;
 8003dca:	687b      	ldr	r3, [r7, #4]
 8003dcc:	69ba      	ldr	r2, [r7, #24]
 8003dce:	605a      	str	r2, [r3, #4]
       }

      if((GPIO_Init->Mode & GPIO_MODE) != MODE_ANALOG)
 8003dd0:	683b      	ldr	r3, [r7, #0]
 8003dd2:	685b      	ldr	r3, [r3, #4]
 8003dd4:	f003 0303 	and.w	r3, r3, #3
 8003dd8:	2b03      	cmp	r3, #3
 8003dda:	d017      	beq.n	8003e0c <HAL_GPIO_Init+0xf0>
      {
        /* Check the parameters */
        assert_param(IS_GPIO_PULL(GPIO_Init->Pull));
        
        /* Activate the Pull-up or Pull down resistor for the current IO */
        temp = GPIOx->PUPDR;
 8003ddc:	687b      	ldr	r3, [r7, #4]
 8003dde:	68db      	ldr	r3, [r3, #12]
 8003de0:	61bb      	str	r3, [r7, #24]
        temp &= ~(GPIO_PUPDR_PUPDR0 << (position * 2U));
 8003de2:	69fb      	ldr	r3, [r7, #28]
 8003de4:	005b      	lsls	r3, r3, #1
 8003de6:	2203      	movs	r2, #3
 8003de8:	fa02 f303 	lsl.w	r3, r2, r3
 8003dec:	43db      	mvns	r3, r3
 8003dee:	69ba      	ldr	r2, [r7, #24]
 8003df0:	4013      	ands	r3, r2
 8003df2:	61bb      	str	r3, [r7, #24]
        temp |= ((GPIO_Init->Pull) << (position * 2U));
 8003df4:	683b      	ldr	r3, [r7, #0]
 8003df6:	689a      	ldr	r2, [r3, #8]
 8003df8:	69fb      	ldr	r3, [r7, #28]
 8003dfa:	005b      	lsls	r3, r3, #1
 8003dfc:	fa02 f303 	lsl.w	r3, r2, r3
 8003e00:	69ba      	ldr	r2, [r7, #24]
 8003e02:	4313      	orrs	r3, r2
 8003e04:	61bb      	str	r3, [r7, #24]
        GPIOx->PUPDR = temp;
 8003e06:	687b      	ldr	r3, [r7, #4]
 8003e08:	69ba      	ldr	r2, [r7, #24]
 8003e0a:	60da      	str	r2, [r3, #12]
      }

      /* In case of Alternate function mode selection */
      if((GPIO_Init->Mode & GPIO_MODE) == MODE_AF)
 8003e0c:	683b      	ldr	r3, [r7, #0]
 8003e0e:	685b      	ldr	r3, [r3, #4]
 8003e10:	f003 0303 	and.w	r3, r3, #3
 8003e14:	2b02      	cmp	r3, #2
 8003e16:	d123      	bne.n	8003e60 <HAL_GPIO_Init+0x144>
      {
        /* Check the Alternate function parameter */
        assert_param(IS_GPIO_AF(GPIO_Init->Alternate));
        /* Configure Alternate function mapped with the current IO */
        temp = GPIOx->AFR[position >> 3U];
 8003e18:	69fb      	ldr	r3, [r7, #28]
 8003e1a:	08da      	lsrs	r2, r3, #3
 8003e1c:	687b      	ldr	r3, [r7, #4]
 8003e1e:	3208      	adds	r2, #8
 8003e20:	f853 3022 	ldr.w	r3, [r3, r2, lsl #2]
 8003e24:	61bb      	str	r3, [r7, #24]
        temp &= ~(0xFU << ((uint32_t)(position & 0x07U) * 4U)) ;
 8003e26:	69fb      	ldr	r3, [r7, #28]
 8003e28:	f003 0307 	and.w	r3, r3, #7
 8003e2c:	009b      	lsls	r3, r3, #2
 8003e2e:	220f      	movs	r2, #15
 8003e30:	fa02 f303 	lsl.w	r3, r2, r3
 8003e34:	43db      	mvns	r3, r3
 8003e36:	69ba      	ldr	r2, [r7, #24]
 8003e38:	4013      	ands	r3, r2
 8003e3a:	61bb      	str	r3, [r7, #24]
        temp |= ((uint32_t)(GPIO_Init->Alternate) << (((uint32_t)position & 0x07U) * 4U));
 8003e3c:	683b      	ldr	r3, [r7, #0]
 8003e3e:	691a      	ldr	r2, [r3, #16]
 8003e40:	69fb      	ldr	r3, [r7, #28]
 8003e42:	f003 0307 	and.w	r3, r3, #7
 8003e46:	009b      	lsls	r3, r3, #2
 8003e48:	fa02 f303 	lsl.w	r3, r2, r3
 8003e4c:	69ba      	ldr	r2, [r7, #24]
 8003e4e:	4313      	orrs	r3, r2
 8003e50:	61bb      	str	r3, [r7, #24]
        GPIOx->AFR[position >> 3U] = temp;
 8003e52:	69fb      	ldr	r3, [r7, #28]
 8003e54:	08da      	lsrs	r2, r3, #3
 8003e56:	687b      	ldr	r3, [r7, #4]
 8003e58:	3208      	adds	r2, #8
 8003e5a:	69b9      	ldr	r1, [r7, #24]
 8003e5c:	f843 1022 	str.w	r1, [r3, r2, lsl #2]
      }

      /* Configure IO Direction mode (Input, Output, Alternate or Analog) */
      temp = GPIOx->MODER;
 8003e60:	687b      	ldr	r3, [r7, #4]
 8003e62:	681b      	ldr	r3, [r3, #0]
 8003e64:	61bb      	str	r3, [r7, #24]
      temp &= ~(GPIO_MODER_MODER0 << (position * 2U));
 8003e66:	69fb      	ldr	r3, [r7, #28]
 8003e68:	005b      	lsls	r3, r3, #1
 8003e6a:	2203      	movs	r2, #3
 8003e6c:	fa02 f303 	lsl.w	r3, r2, r3
 8003e70:	43db      	mvns	r3, r3
 8003e72:	69ba      	ldr	r2, [r7, #24]
 8003e74:	4013      	ands	r3, r2
 8003e76:	61bb      	str	r3, [r7, #24]
      temp |= ((GPIO_Init->Mode & GPIO_MODE) << (position * 2U));
 8003e78:	683b      	ldr	r3, [r7, #0]
 8003e7a:	685b      	ldr	r3, [r3, #4]
 8003e7c:	f003 0203 	and.w	r2, r3, #3
 8003e80:	69fb      	ldr	r3, [r7, #28]
 8003e82:	005b      	lsls	r3, r3, #1
 8003e84:	fa02 f303 	lsl.w	r3, r2, r3
 8003e88:	69ba      	ldr	r2, [r7, #24]
 8003e8a:	4313      	orrs	r3, r2
 8003e8c:	61bb      	str	r3, [r7, #24]
      GPIOx->MODER = temp;
 8003e8e:	687b      	ldr	r3, [r7, #4]
 8003e90:	69ba      	ldr	r2, [r7, #24]
 8003e92:	601a      	str	r2, [r3, #0]

      /*--------------------- EXTI Mode Configuration ------------------------*/
      /* Configure the External Interrupt or event for the current IO */
      if((GPIO_Init->Mode & EXTI_MODE) != 0x00U)
 8003e94:	683b      	ldr	r3, [r7, #0]
 8003e96:	685b      	ldr	r3, [r3, #4]
 8003e98:	f403 3340 	and.w	r3, r3, #196608	@ 0x30000
 8003e9c:	2b00      	cmp	r3, #0
 8003e9e:	f000 80ae 	beq.w	8003ffe <HAL_GPIO_Init+0x2e2>
      {
        /* Enable SYSCFG Clock */
        __HAL_RCC_SYSCFG_CLK_ENABLE();
 8003ea2:	2300      	movs	r3, #0
 8003ea4:	60fb      	str	r3, [r7, #12]
 8003ea6:	4b5d      	ldr	r3, [pc, #372]	@ (800401c <HAL_GPIO_Init+0x300>)
 8003ea8:	6c5b      	ldr	r3, [r3, #68]	@ 0x44
 8003eaa:	4a5c      	ldr	r2, [pc, #368]	@ (800401c <HAL_GPIO_Init+0x300>)
 8003eac:	f443 4380 	orr.w	r3, r3, #16384	@ 0x4000
 8003eb0:	6453      	str	r3, [r2, #68]	@ 0x44
 8003eb2:	4b5a      	ldr	r3, [pc, #360]	@ (800401c <HAL_GPIO_Init+0x300>)
 8003eb4:	6c5b      	ldr	r3, [r3, #68]	@ 0x44
 8003eb6:	f403 4380 	and.w	r3, r3, #16384	@ 0x4000
 8003eba:	60fb      	str	r3, [r7, #12]
 8003ebc:	68fb      	ldr	r3, [r7, #12]

        temp = SYSCFG->EXTICR[position >> 2U];
 8003ebe:	4a58      	ldr	r2, [pc, #352]	@ (8004020 <HAL_GPIO_Init+0x304>)
 8003ec0:	69fb      	ldr	r3, [r7, #28]
 8003ec2:	089b      	lsrs	r3, r3, #2
 8003ec4:	3302      	adds	r3, #2
 8003ec6:	f852 3023 	ldr.w	r3, [r2, r3, lsl #2]
 8003eca:	61bb      	str	r3, [r7, #24]
        temp &= ~(0x0FU << (4U * (position & 0x03U)));
 8003ecc:	69fb      	ldr	r3, [r7, #28]
 8003ece:	f003 0303 	and.w	r3, r3, #3
 8003ed2:	009b      	lsls	r3, r3, #2
 8003ed4:	220f      	movs	r2, #15
 8003ed6:	fa02 f303 	lsl.w	r3, r2, r3
 8003eda:	43db      	mvns	r3, r3
 8003edc:	69ba      	ldr	r2, [r7, #24]
 8003ede:	4013      	ands	r3, r2
 8003ee0:	61bb      	str	r3, [r7, #24]
        temp |= ((uint32_t)(GPIO_GET_INDEX(GPIOx)) << (4U * (position & 0x03U)));
 8003ee2:	687b      	ldr	r3, [r7, #4]
 8003ee4:	4a4f      	ldr	r2, [pc, #316]	@ (8004024 <HAL_GPIO_Init+0x308>)
 8003ee6:	4293      	cmp	r3, r2
 8003ee8:	d025      	beq.n	8003f36 <HAL_GPIO_Init+0x21a>
 8003eea:	687b      	ldr	r3, [r7, #4]
 8003eec:	4a4e      	ldr	r2, [pc, #312]	@ (8004028 <HAL_GPIO_Init+0x30c>)
 8003eee:	4293      	cmp	r3, r2
 8003ef0:	d01f      	beq.n	8003f32 <HAL_GPIO_Init+0x216>
 8003ef2:	687b      	ldr	r3, [r7, #4]
 8003ef4:	4a4d      	ldr	r2, [pc, #308]	@ (800402c <HAL_GPIO_Init+0x310>)
 8003ef6:	4293      	cmp	r3, r2
 8003ef8:	d019      	beq.n	8003f2e <HAL_GPIO_Init+0x212>
 8003efa:	687b      	ldr	r3, [r7, #4]
 8003efc:	4a4c      	ldr	r2, [pc, #304]	@ (8004030 <HAL_GPIO_Init+0x314>)
 8003efe:	4293      	cmp	r3, r2
 8003f00:	d013      	beq.n	8003f2a <HAL_GPIO_Init+0x20e>
 8003f02:	687b      	ldr	r3, [r7, #4]
 8003f04:	4a4b      	ldr	r2, [pc, #300]	@ (8004034 <HAL_GPIO_Init+0x318>)
 8003f06:	4293      	cmp	r3, r2
 8003f08:	d00d      	beq.n	8003f26 <HAL_GPIO_Init+0x20a>
 8003f0a:	687b      	ldr	r3, [r7, #4]
 8003f0c:	4a4a      	ldr	r2, [pc, #296]	@ (8004038 <HAL_GPIO_Init+0x31c>)
 8003f0e:	4293      	cmp	r3, r2
 8003f10:	d007      	beq.n	8003f22 <HAL_GPIO_Init+0x206>
 8003f12:	687b      	ldr	r3, [r7, #4]
 8003f14:	4a49      	ldr	r2, [pc, #292]	@ (800403c <HAL_GPIO_Init+0x320>)
 8003f16:	4293      	cmp	r3, r2
 8003f18:	d101      	bne.n	8003f1e <HAL_GPIO_Init+0x202>
 8003f1a:	2306      	movs	r3, #6
 8003f1c:	e00c      	b.n	8003f38 <HAL_GPIO_Init+0x21c>
 8003f1e:	2307      	movs	r3, #7
 8003f20:	e00a      	b.n	8003f38 <HAL_GPIO_Init+0x21c>
 8003f22:	2305      	movs	r3, #5
 8003f24:	e008      	b.n	8003f38 <HAL_GPIO_Init+0x21c>
 8003f26:	2304      	movs	r3, #4
 8003f28:	e006      	b.n	8003f38 <HAL_GPIO_Init+0x21c>
 8003f2a:	2303      	movs	r3, #3
 8003f2c:	e004      	b.n	8003f38 <HAL_GPIO_Init+0x21c>
 8003f2e:	2302      	movs	r3, #2
 8003f30:	e002      	b.n	8003f38 <HAL_GPIO_Init+0x21c>
 8003f32:	2301      	movs	r3, #1
 8003f34:	e000      	b.n	8003f38 <HAL_GPIO_Init+0x21c>
 8003f36:	2300      	movs	r3, #0
 8003f38:	69fa      	ldr	r2, [r7, #28]
 8003f3a:	f002 0203 	and.w	r2, r2, #3
 8003f3e:	0092      	lsls	r2, r2, #2
 8003f40:	4093      	lsls	r3, r2
 8003f42:	69ba      	ldr	r2, [r7, #24]
 8003f44:	4313      	orrs	r3, r2
 8003f46:	61bb      	str	r3, [r7, #24]
        SYSCFG->EXTICR[position >> 2U] = temp;
 8003f48:	4935      	ldr	r1, [pc, #212]	@ (8004020 <HAL_GPIO_Init+0x304>)
 8003f4a:	69fb      	ldr	r3, [r7, #28]
 8003f4c:	089b      	lsrs	r3, r3, #2
 8003f4e:	3302      	adds	r3, #2
 8003f50:	69ba      	ldr	r2, [r7, #24]
 8003f52:	f841 2023 	str.w	r2, [r1, r3, lsl #2]

        /* Clear Rising Falling edge configuration */
        temp = EXTI->RTSR;
 8003f56:	4b3a      	ldr	r3, [pc, #232]	@ (8004040 <HAL_GPIO_Init+0x324>)
 8003f58:	689b      	ldr	r3, [r3, #8]
 8003f5a:	61bb      	str	r3, [r7, #24]
        temp &= ~((uint32_t)iocurrent);
 8003f5c:	693b      	ldr	r3, [r7, #16]
 8003f5e:	43db      	mvns	r3, r3
 8003f60:	69ba      	ldr	r2, [r7, #24]
 8003f62:	4013      	ands	r3, r2
 8003f64:	61bb      	str	r3, [r7, #24]
        if((GPIO_Init->Mode & TRIGGER_RISING) != 0x00U)
 8003f66:	683b      	ldr	r3, [r7, #0]
 8003f68:	685b      	ldr	r3, [r3, #4]
 8003f6a:	f403 1380 	and.w	r3, r3, #1048576	@ 0x100000
 8003f6e:	2b00      	cmp	r3, #0
 8003f70:	d003      	beq.n	8003f7a <HAL_GPIO_Init+0x25e>
        {
          temp |= iocurrent;
 8003f72:	69ba      	ldr	r2, [r7, #24]
 8003f74:	693b      	ldr	r3, [r7, #16]
 8003f76:	4313      	orrs	r3, r2
 8003f78:	61bb      	str	r3, [r7, #24]
        }
        EXTI->RTSR = temp;
 8003f7a:	4a31      	ldr	r2, [pc, #196]	@ (8004040 <HAL_GPIO_Init+0x324>)
 8003f7c:	69bb      	ldr	r3, [r7, #24]
 8003f7e:	6093      	str	r3, [r2, #8]

        temp = EXTI->FTSR;
 8003f80:	4b2f      	ldr	r3, [pc, #188]	@ (8004040 <HAL_GPIO_Init+0x324>)
 8003f82:	68db      	ldr	r3, [r3, #12]
 8003f84:	61bb      	str	r3, [r7, #24]
        temp &= ~((uint32_t)iocurrent);
 8003f86:	693b      	ldr	r3, [r7, #16]
 8003f88:	43db      	mvns	r3, r3
 8003f8a:	69ba      	ldr	r2, [r7, #24]
 8003f8c:	4013      	ands	r3, r2
 8003f8e:	61bb      	str	r3, [r7, #24]
        if((GPIO_Init->Mode & TRIGGER_FALLING) != 0x00U)
 8003f90:	683b      	ldr	r3, [r7, #0]
 8003f92:	685b      	ldr	r3, [r3, #4]
 8003f94:	f403 1300 	and.w	r3, r3, #2097152	@ 0x200000
 8003f98:	2b00      	cmp	r3, #0
 8003f9a:	d003      	beq.n	8003fa4 <HAL_GPIO_Init+0x288>
        {
          temp |= iocurrent;
 8003f9c:	69ba      	ldr	r2, [r7, #24]
 8003f9e:	693b      	ldr	r3, [r7, #16]
 8003fa0:	4313      	orrs	r3, r2
 8003fa2:	61bb      	str	r3, [r7, #24]
        }
        EXTI->FTSR = temp;
 8003fa4:	4a26      	ldr	r2, [pc, #152]	@ (8004040 <HAL_GPIO_Init+0x324>)
 8003fa6:	69bb      	ldr	r3, [r7, #24]
 8003fa8:	60d3      	str	r3, [r2, #12]

        temp = EXTI->EMR;
 8003faa:	4b25      	ldr	r3, [pc, #148]	@ (8004040 <HAL_GPIO_Init+0x324>)
 8003fac:	685b      	ldr	r3, [r3, #4]
 8003fae:	61bb      	str	r3, [r7, #24]
        temp &= ~((uint32_t)iocurrent);
 8003fb0:	693b      	ldr	r3, [r7, #16]
 8003fb2:	43db      	mvns	r3, r3
 8003fb4:	69ba      	ldr	r2, [r7, #24]
 8003fb6:	4013      	ands	r3, r2
 8003fb8:	61bb      	str	r3, [r7, #24]
        if((GPIO_Init->Mode & EXTI_EVT) != 0x00U)
 8003fba:	683b      	ldr	r3, [r7, #0]
 8003fbc:	685b      	ldr	r3, [r3, #4]
 8003fbe:	f403 3300 	and.w	r3, r3, #131072	@ 0x20000
 8003fc2:	2b00      	cmp	r3, #0
 8003fc4:	d003      	beq.n	8003fce <HAL_GPIO_Init+0x2b2>
        {
          temp |= iocurrent;
 8003fc6:	69ba      	ldr	r2, [r7, #24]
 8003fc8:	693b      	ldr	r3, [r7, #16]
 8003fca:	4313      	orrs	r3, r2
 8003fcc:	61bb      	str	r3, [r7, #24]
        }
        EXTI->EMR = temp;
 8003fce:	4a1c      	ldr	r2, [pc, #112]	@ (8004040 <HAL_GPIO_Init+0x324>)
 8003fd0:	69bb      	ldr	r3, [r7, #24]
 8003fd2:	6053      	str	r3, [r2, #4]

        /* Clear EXTI line configuration */
        temp = EXTI->IMR;
 8003fd4:	4b1a      	ldr	r3, [pc, #104]	@ (8004040 <HAL_GPIO_Init+0x324>)
 8003fd6:	681b      	ldr	r3, [r3, #0]
 8003fd8:	61bb      	str	r3, [r7, #24]
        temp &= ~((uint32_t)iocurrent);
 8003fda:	693b      	ldr	r3, [r7, #16]
 8003fdc:	43db      	mvns	r3, r3
 8003fde:	69ba      	ldr	r2, [r7, #24]
 8003fe0:	4013      	ands	r3, r2
 8003fe2:	61bb      	str	r3, [r7, #24]
        if((GPIO_Init->Mode & EXTI_IT) != 0x00U)
 8003fe4:	683b      	ldr	r3, [r7, #0]
 8003fe6:	685b      	ldr	r3, [r3, #4]
 8003fe8:	f403 3380 	and.w	r3, r3, #65536	@ 0x10000
 8003fec:	2b00      	cmp	r3, #0
 8003fee:	d003      	beq.n	8003ff8 <HAL_GPIO_Init+0x2dc>
        {
          temp |= iocurrent;
 8003ff0:	69ba      	ldr	r2, [r7, #24]
 8003ff2:	693b      	ldr	r3, [r7, #16]
 8003ff4:	4313      	orrs	r3, r2
 8003ff6:	61bb      	str	r3, [r7, #24]
        }
        EXTI->IMR = temp;
 8003ff8:	4a11      	ldr	r2, [pc, #68]	@ (8004040 <HAL_GPIO_Init+0x324>)
 8003ffa:	69bb      	ldr	r3, [r7, #24]
 8003ffc:	6013      	str	r3, [r2, #0]
  for(position = 0U; position < GPIO_NUMBER; position++)
 8003ffe:	69fb      	ldr	r3, [r7, #28]
 8004000:	3301      	adds	r3, #1
 8004002:	61fb      	str	r3, [r7, #28]
 8004004:	69fb      	ldr	r3, [r7, #28]
 8004006:	2b0f      	cmp	r3, #15
 8004008:	f67f ae96 	bls.w	8003d38 <HAL_GPIO_Init+0x1c>
      }
    }
  }
}
 800400c:	bf00      	nop
 800400e:	bf00      	nop
 8004010:	3724      	adds	r7, #36	@ 0x24
 8004012:	46bd      	mov	sp, r7
 8004014:	f85d 7b04 	ldr.w	r7, [sp], #4
 8004018:	4770      	bx	lr
 800401a:	bf00      	nop
 800401c:	40023800 	.word	0x40023800
 8004020:	40013800 	.word	0x40013800
 8004024:	40020000 	.word	0x40020000
 8004028:	40020400 	.word	0x40020400
 800402c:	40020800 	.word	0x40020800
 8004030:	40020c00 	.word	0x40020c00
 8004034:	40021000 	.word	0x40021000
 8004038:	40021400 	.word	0x40021400
 800403c:	40021800 	.word	0x40021800
 8004040:	40013c00 	.word	0x40013c00

08004044 <HAL_GPIO_ReadPin>:
  * @param  GPIO_Pin specifies the port bit to read.
  *         This parameter can be GPIO_PIN_x where x can be (0..15).
  * @retval The input port pin value.
  */
GPIO_PinState HAL_GPIO_ReadPin(GPIO_TypeDef* GPIOx, uint16_t GPIO_Pin)
{
 8004044:	b480      	push	{r7}
 8004046:	b085      	sub	sp, #20
 8004048:	af00      	add	r7, sp, #0
 800404a:	6078      	str	r0, [r7, #4]
 800404c:	460b      	mov	r3, r1
 800404e:	807b      	strh	r3, [r7, #2]
  GPIO_PinState bitstatus;

  /* Check the parameters */
  assert_param(IS_GPIO_PIN(GPIO_Pin));

  if((GPIOx->IDR & GPIO_Pin) != (uint32_t)GPIO_PIN_RESET)
 8004050:	687b      	ldr	r3, [r7, #4]
 8004052:	691a      	ldr	r2, [r3, #16]
 8004054:	887b      	ldrh	r3, [r7, #2]
 8004056:	4013      	ands	r3, r2
 8004058:	2b00      	cmp	r3, #0
 800405a:	d002      	beq.n	8004062 <HAL_GPIO_ReadPin+0x1e>
  {
    bitstatus = GPIO_PIN_SET;
 800405c:	2301      	movs	r3, #1
 800405e:	73fb      	strb	r3, [r7, #15]
 8004060:	e001      	b.n	8004066 <HAL_GPIO_ReadPin+0x22>
  }
  else
  {
    bitstatus = GPIO_PIN_RESET;
 8004062:	2300      	movs	r3, #0
 8004064:	73fb      	strb	r3, [r7, #15]
  }
  return bitstatus;
 8004066:	7bfb      	ldrb	r3, [r7, #15]
}
 8004068:	4618      	mov	r0, r3
 800406a:	3714      	adds	r7, #20
 800406c:	46bd      	mov	sp, r7
 800406e:	f85d 7b04 	ldr.w	r7, [sp], #4
 8004072:	4770      	bx	lr

08004074 <HAL_GPIO_WritePin>:
  *            @arg GPIO_PIN_RESET: to clear the port pin
  *            @arg GPIO_PIN_SET: to set the port pin
  * @retval None
  */
void HAL_GPIO_WritePin(GPIO_TypeDef* GPIOx, uint16_t GPIO_Pin, GPIO_PinState PinState)
{
 8004074:	b480      	push	{r7}
 8004076:	b083      	sub	sp, #12
 8004078:	af00      	add	r7, sp, #0
 800407a:	6078      	str	r0, [r7, #4]
 800407c:	460b      	mov	r3, r1
 800407e:	807b      	strh	r3, [r7, #2]
 8004080:	4613      	mov	r3, r2
 8004082:	707b      	strb	r3, [r7, #1]
  /* Check the parameters */
  assert_param(IS_GPIO_PIN(GPIO_Pin));
  assert_param(IS_GPIO_PIN_ACTION(PinState));

  if(PinState != GPIO_PIN_RESET)
 8004084:	787b      	ldrb	r3, [r7, #1]
 8004086:	2b00      	cmp	r3, #0
 8004088:	d003      	beq.n	8004092 <HAL_GPIO_WritePin+0x1e>
  {
    GPIOx->BSRR = GPIO_Pin;
 800408a:	887a      	ldrh	r2, [r7, #2]
 800408c:	687b      	ldr	r3, [r7, #4]
 800408e:	619a      	str	r2, [r3, #24]
  }
  else
  {
    GPIOx->BSRR = (uint32_t)GPIO_Pin << 16U;
  }
}
 8004090:	e003      	b.n	800409a <HAL_GPIO_WritePin+0x26>
    GPIOx->BSRR = (uint32_t)GPIO_Pin << 16U;
 8004092:	887b      	ldrh	r3, [r7, #2]
 8004094:	041a      	lsls	r2, r3, #16
 8004096:	687b      	ldr	r3, [r7, #4]
 8004098:	619a      	str	r2, [r3, #24]
}
 800409a:	bf00      	nop
 800409c:	370c      	adds	r7, #12
 800409e:	46bd      	mov	sp, r7
 80040a0:	f85d 7b04 	ldr.w	r7, [sp], #4
 80040a4:	4770      	bx	lr

080040a6 <HAL_GPIO_TogglePin>:
  *                      x can be (A..I) to select the GPIO peripheral for STM32F40XX and STM32F427X devices.
  * @param  GPIO_Pin Specifies the pins to be toggled.
  * @retval None
  */
void HAL_GPIO_TogglePin(GPIO_TypeDef* GPIOx, uint16_t GPIO_Pin)
{
 80040a6:	b480      	push	{r7}
 80040a8:	b085      	sub	sp, #20
 80040aa:	af00      	add	r7, sp, #0
 80040ac:	6078      	str	r0, [r7, #4]
 80040ae:	460b      	mov	r3, r1
 80040b0:	807b      	strh	r3, [r7, #2]

  /* Check the parameters */
  assert_param(IS_GPIO_PIN(GPIO_Pin));

  /* get current Output Data Register value */
  odr = GPIOx->ODR;
 80040b2:	687b      	ldr	r3, [r7, #4]
 80040b4:	695b      	ldr	r3, [r3, #20]
 80040b6:	60fb      	str	r3, [r7, #12]

  /* Set selected pins that were at low level, and reset ones that were high */
  GPIOx->BSRR = ((odr & GPIO_Pin) << GPIO_NUMBER) | (~odr & GPIO_Pin);
 80040b8:	887a      	ldrh	r2, [r7, #2]
 80040ba:	68fb      	ldr	r3, [r7, #12]
 80040bc:	4013      	ands	r3, r2
 80040be:	041a      	lsls	r2, r3, #16
 80040c0:	68fb      	ldr	r3, [r7, #12]
 80040c2:	43d9      	mvns	r1, r3
 80040c4:	887b      	ldrh	r3, [r7, #2]
 80040c6:	400b      	ands	r3, r1
 80040c8:	431a      	orrs	r2, r3
 80040ca:	687b      	ldr	r3, [r7, #4]
 80040cc:	619a      	str	r2, [r3, #24]
}
 80040ce:	bf00      	nop
 80040d0:	3714      	adds	r7, #20
 80040d2:	46bd      	mov	sp, r7
 80040d4:	f85d 7b04 	ldr.w	r7, [sp], #4
 80040d8:	4770      	bx	lr
	...

080040dc <HAL_GPIO_EXTI_IRQHandler>:
  * @brief  This function handles EXTI interrupt request.
  * @param  GPIO_Pin Specifies the pins connected EXTI line
  * @retval None
  */
void HAL_GPIO_EXTI_IRQHandler(uint16_t GPIO_Pin)
{
 80040dc:	b580      	push	{r7, lr}
 80040de:	b082      	sub	sp, #8
 80040e0:	af00      	add	r7, sp, #0
 80040e2:	4603      	mov	r3, r0
 80040e4:	80fb      	strh	r3, [r7, #6]
  /* EXTI line interrupt detected */
  if(__HAL_GPIO_EXTI_GET_IT(GPIO_Pin) != RESET)
 80040e6:	4b08      	ldr	r3, [pc, #32]	@ (8004108 <HAL_GPIO_EXTI_IRQHandler+0x2c>)
 80040e8:	695a      	ldr	r2, [r3, #20]
 80040ea:	88fb      	ldrh	r3, [r7, #6]
 80040ec:	4013      	ands	r3, r2
 80040ee:	2b00      	cmp	r3, #0
 80040f0:	d006      	beq.n	8004100 <HAL_GPIO_EXTI_IRQHandler+0x24>
  {
    __HAL_GPIO_EXTI_CLEAR_IT(GPIO_Pin);
 80040f2:	4a05      	ldr	r2, [pc, #20]	@ (8004108 <HAL_GPIO_EXTI_IRQHandler+0x2c>)
 80040f4:	88fb      	ldrh	r3, [r7, #6]
 80040f6:	6153      	str	r3, [r2, #20]
    HAL_GPIO_EXTI_Callback(GPIO_Pin);
 80040f8:	88fb      	ldrh	r3, [r7, #6]
 80040fa:	4618      	mov	r0, r3
 80040fc:	f7fe f9e4 	bl	80024c8 <HAL_GPIO_EXTI_Callback>
  }
}
 8004100:	bf00      	nop
 8004102:	3708      	adds	r7, #8
 8004104:	46bd      	mov	sp, r7
 8004106:	bd80      	pop	{r7, pc}
 8004108:	40013c00 	.word	0x40013c00

0800410c <HAL_I2C_Init>:
  * @param  hi2c Pointer to a I2C_HandleTypeDef structure that contains
  *                the configuration information for the specified I2C.
  * @retval HAL status
  */
HAL_StatusTypeDef HAL_I2C_Init(I2C_HandleTypeDef *hi2c)
{
 800410c:	b580      	push	{r7, lr}
 800410e:	b084      	sub	sp, #16
 8004110:	af00      	add	r7, sp, #0
 8004112:	6078      	str	r0, [r7, #4]
  uint32_t freqrange;
  uint32_t pclk1;

  /* Check the I2C handle allocation */
  if (hi2c == NULL)
 8004114:	687b      	ldr	r3, [r7, #4]
 8004116:	2b00      	cmp	r3, #0
 8004118:	d101      	bne.n	800411e <HAL_I2C_Init+0x12>
  {
    return HAL_ERROR;
 800411a:	2301      	movs	r3, #1
 800411c:	e12b      	b.n	8004376 <HAL_I2C_Init+0x26a>
  assert_param(IS_I2C_DUAL_ADDRESS(hi2c->Init.DualAddressMode));
  assert_param(IS_I2C_OWN_ADDRESS2(hi2c->Init.OwnAddress2));
  assert_param(IS_I2C_GENERAL_CALL(hi2c->Init.GeneralCallMode));
  assert_param(IS_I2C_NO_STRETCH(hi2c->Init.NoStretchMode));

  if (hi2c->State == HAL_I2C_STATE_RESET)
 800411e:	687b      	ldr	r3, [r7, #4]
 8004120:	f893 303d 	ldrb.w	r3, [r3, #61]	@ 0x3d
 8004124:	b2db      	uxtb	r3, r3
 8004126:	2b00      	cmp	r3, #0
 8004128:	d106      	bne.n	8004138 <HAL_I2C_Init+0x2c>
  {
    /* Allocate lock resource and initialize it */
    hi2c->Lock = HAL_UNLOCKED;
 800412a:	687b      	ldr	r3, [r7, #4]
 800412c:	2200      	movs	r2, #0
 800412e:	f883 203c 	strb.w	r2, [r3, #60]	@ 0x3c

    /* Init the low level hardware : GPIO, CLOCK, NVIC */
    hi2c->MspInitCallback(hi2c);
#else
    /* Init the low level hardware : GPIO, CLOCK, NVIC */
    HAL_I2C_MspInit(hi2c);
 8004132:	6878      	ldr	r0, [r7, #4]
 8004134:	f7fd fc1e 	bl	8001974 <HAL_I2C_MspInit>
#endif /* USE_HAL_I2C_REGISTER_CALLBACKS */
  }

  hi2c->State = HAL_I2C_STATE_BUSY;
 8004138:	687b      	ldr	r3, [r7, #4]
 800413a:	2224      	movs	r2, #36	@ 0x24
 800413c:	f883 203d 	strb.w	r2, [r3, #61]	@ 0x3d

  /* Disable the selected I2C peripheral */
  __HAL_I2C_DISABLE(hi2c);
 8004140:	687b      	ldr	r3, [r7, #4]
 8004142:	681b      	ldr	r3, [r3, #0]
 8004144:	681a      	ldr	r2, [r3, #0]
 8004146:	687b      	ldr	r3, [r7, #4]
 8004148:	681b      	ldr	r3, [r3, #0]
 800414a:	f022 0201 	bic.w	r2, r2, #1
 800414e:	601a      	str	r2, [r3, #0]

  /*Reset I2C*/
  hi2c->Instance->CR1 |= I2C_CR1_SWRST;
 8004150:	687b      	ldr	r3, [r7, #4]
 8004152:	681b      	ldr	r3, [r3, #0]
 8004154:	681a      	ldr	r2, [r3, #0]
 8004156:	687b      	ldr	r3, [r7, #4]
 8004158:	681b      	ldr	r3, [r3, #0]
 800415a:	f442 4200 	orr.w	r2, r2, #32768	@ 0x8000
 800415e:	601a      	str	r2, [r3, #0]
  hi2c->Instance->CR1 &= ~I2C_CR1_SWRST;
 8004160:	687b      	ldr	r3, [r7, #4]
 8004162:	681b      	ldr	r3, [r3, #0]
 8004164:	681a      	ldr	r2, [r3, #0]
 8004166:	687b      	ldr	r3, [r7, #4]
 8004168:	681b      	ldr	r3, [r3, #0]
 800416a:	f422 4200 	bic.w	r2, r2, #32768	@ 0x8000
 800416e:	601a      	str	r2, [r3, #0]

  /* Get PCLK1 frequency */
  pclk1 = HAL_RCC_GetPCLK1Freq();
 8004170:	f001 f908 	bl	8005384 <HAL_RCC_GetPCLK1Freq>
 8004174:	60f8      	str	r0, [r7, #12]

  /* Check the minimum allowed PCLK1 frequency */
  if (I2C_MIN_PCLK_FREQ(pclk1, hi2c->Init.ClockSpeed) == 1U)
 8004176:	687b      	ldr	r3, [r7, #4]
 8004178:	685b      	ldr	r3, [r3, #4]
 800417a:	4a81      	ldr	r2, [pc, #516]	@ (8004380 <HAL_I2C_Init+0x274>)
 800417c:	4293      	cmp	r3, r2
 800417e:	d807      	bhi.n	8004190 <HAL_I2C_Init+0x84>
 8004180:	68fb      	ldr	r3, [r7, #12]
 8004182:	4a80      	ldr	r2, [pc, #512]	@ (8004384 <HAL_I2C_Init+0x278>)
 8004184:	4293      	cmp	r3, r2
 8004186:	bf94      	ite	ls
 8004188:	2301      	movls	r3, #1
 800418a:	2300      	movhi	r3, #0
 800418c:	b2db      	uxtb	r3, r3
 800418e:	e006      	b.n	800419e <HAL_I2C_Init+0x92>
 8004190:	68fb      	ldr	r3, [r7, #12]
 8004192:	4a7d      	ldr	r2, [pc, #500]	@ (8004388 <HAL_I2C_Init+0x27c>)
 8004194:	4293      	cmp	r3, r2
 8004196:	bf94      	ite	ls
 8004198:	2301      	movls	r3, #1
 800419a:	2300      	movhi	r3, #0
 800419c:	b2db      	uxtb	r3, r3
 800419e:	2b00      	cmp	r3, #0
 80041a0:	d001      	beq.n	80041a6 <HAL_I2C_Init+0x9a>
  {
    return HAL_ERROR;
 80041a2:	2301      	movs	r3, #1
 80041a4:	e0e7      	b.n	8004376 <HAL_I2C_Init+0x26a>
  }

  /* Calculate frequency range */
  freqrange = I2C_FREQRANGE(pclk1);
 80041a6:	68fb      	ldr	r3, [r7, #12]
 80041a8:	4a78      	ldr	r2, [pc, #480]	@ (800438c <HAL_I2C_Init+0x280>)
 80041aa:	fba2 2303 	umull	r2, r3, r2, r3
 80041ae:	0c9b      	lsrs	r3, r3, #18
 80041b0:	60bb      	str	r3, [r7, #8]

  /*---------------------------- I2Cx CR2 Configuration ----------------------*/
  /* Configure I2Cx: Frequency range */
  MODIFY_REG(hi2c->Instance->CR2, I2C_CR2_FREQ, freqrange);
 80041b2:	687b      	ldr	r3, [r7, #4]
 80041b4:	681b      	ldr	r3, [r3, #0]
 80041b6:	685b      	ldr	r3, [r3, #4]
 80041b8:	f023 013f 	bic.w	r1, r3, #63	@ 0x3f
 80041bc:	687b      	ldr	r3, [r7, #4]
 80041be:	681b      	ldr	r3, [r3, #0]
 80041c0:	68ba      	ldr	r2, [r7, #8]
 80041c2:	430a      	orrs	r2, r1
 80041c4:	605a      	str	r2, [r3, #4]

  /*---------------------------- I2Cx TRISE Configuration --------------------*/
  /* Configure I2Cx: Rise Time */
  MODIFY_REG(hi2c->Instance->TRISE, I2C_TRISE_TRISE, I2C_RISE_TIME(freqrange, hi2c->Init.ClockSpeed));
 80041c6:	687b      	ldr	r3, [r7, #4]
 80041c8:	681b      	ldr	r3, [r3, #0]
 80041ca:	6a1b      	ldr	r3, [r3, #32]
 80041cc:	f023 013f 	bic.w	r1, r3, #63	@ 0x3f
 80041d0:	687b      	ldr	r3, [r7, #4]
 80041d2:	685b      	ldr	r3, [r3, #4]
 80041d4:	4a6a      	ldr	r2, [pc, #424]	@ (8004380 <HAL_I2C_Init+0x274>)
 80041d6:	4293      	cmp	r3, r2
 80041d8:	d802      	bhi.n	80041e0 <HAL_I2C_Init+0xd4>
 80041da:	68bb      	ldr	r3, [r7, #8]
 80041dc:	3301      	adds	r3, #1
 80041de:	e009      	b.n	80041f4 <HAL_I2C_Init+0xe8>
 80041e0:	68bb      	ldr	r3, [r7, #8]
 80041e2:	f44f 7296 	mov.w	r2, #300	@ 0x12c
 80041e6:	fb02 f303 	mul.w	r3, r2, r3
 80041ea:	4a69      	ldr	r2, [pc, #420]	@ (8004390 <HAL_I2C_Init+0x284>)
 80041ec:	fba2 2303 	umull	r2, r3, r2, r3
 80041f0:	099b      	lsrs	r3, r3, #6
 80041f2:	3301      	adds	r3, #1
 80041f4:	687a      	ldr	r2, [r7, #4]
 80041f6:	6812      	ldr	r2, [r2, #0]
 80041f8:	430b      	orrs	r3, r1
 80041fa:	6213      	str	r3, [r2, #32]

  /*---------------------------- I2Cx CCR Configuration ----------------------*/
  /* Configure I2Cx: Speed */
  MODIFY_REG(hi2c->Instance->CCR, (I2C_CCR_FS | I2C_CCR_DUTY | I2C_CCR_CCR), I2C_SPEED(pclk1, hi2c->Init.ClockSpeed, hi2c->Init.DutyCycle));
 80041fc:	687b      	ldr	r3, [r7, #4]
 80041fe:	681b      	ldr	r3, [r3, #0]
 8004200:	69db      	ldr	r3, [r3, #28]
 8004202:	f423 424f 	bic.w	r2, r3, #52992	@ 0xcf00
 8004206:	f022 02ff 	bic.w	r2, r2, #255	@ 0xff
 800420a:	687b      	ldr	r3, [r7, #4]
 800420c:	685b      	ldr	r3, [r3, #4]
 800420e:	495c      	ldr	r1, [pc, #368]	@ (8004380 <HAL_I2C_Init+0x274>)
 8004210:	428b      	cmp	r3, r1
 8004212:	d819      	bhi.n	8004248 <HAL_I2C_Init+0x13c>
 8004214:	68fb      	ldr	r3, [r7, #12]
 8004216:	1e59      	subs	r1, r3, #1
 8004218:	687b      	ldr	r3, [r7, #4]
 800421a:	685b      	ldr	r3, [r3, #4]
 800421c:	005b      	lsls	r3, r3, #1
 800421e:	fbb1 f3f3 	udiv	r3, r1, r3
 8004222:	1c59      	adds	r1, r3, #1
 8004224:	f640 73fc 	movw	r3, #4092	@ 0xffc
 8004228:	400b      	ands	r3, r1
 800422a:	2b00      	cmp	r3, #0
 800422c:	d00a      	beq.n	8004244 <HAL_I2C_Init+0x138>
 800422e:	68fb      	ldr	r3, [r7, #12]
 8004230:	1e59      	subs	r1, r3, #1
 8004232:	687b      	ldr	r3, [r7, #4]
 8004234:	685b      	ldr	r3, [r3, #4]
 8004236:	005b      	lsls	r3, r3, #1
 8004238:	fbb1 f3f3 	udiv	r3, r1, r3
 800423c:	3301      	adds	r3, #1
 800423e:	f3c3 030b 	ubfx	r3, r3, #0, #12
 8004242:	e051      	b.n	80042e8 <HAL_I2C_Init+0x1dc>
 8004244:	2304      	movs	r3, #4
 8004246:	e04f      	b.n	80042e8 <HAL_I2C_Init+0x1dc>
 8004248:	687b      	ldr	r3, [r7, #4]
 800424a:	689b      	ldr	r3, [r3, #8]
 800424c:	2b00      	cmp	r3, #0
 800424e:	d111      	bne.n	8004274 <HAL_I2C_Init+0x168>
 8004250:	68fb      	ldr	r3, [r7, #12]
 8004252:	1e58      	subs	r0, r3, #1
 8004254:	687b      	ldr	r3, [r7, #4]
 8004256:	6859      	ldr	r1, [r3, #4]
 8004258:	460b      	mov	r3, r1
 800425a:	005b      	lsls	r3, r3, #1
 800425c:	440b      	add	r3, r1
 800425e:	fbb0 f3f3 	udiv	r3, r0, r3
 8004262:	3301      	adds	r3, #1
 8004264:	f3c3 030b 	ubfx	r3, r3, #0, #12
 8004268:	2b00      	cmp	r3, #0
 800426a:	bf0c      	ite	eq
 800426c:	2301      	moveq	r3, #1
 800426e:	2300      	movne	r3, #0
 8004270:	b2db      	uxtb	r3, r3
 8004272:	e012      	b.n	800429a <HAL_I2C_Init+0x18e>
 8004274:	68fb      	ldr	r3, [r7, #12]
 8004276:	1e58      	subs	r0, r3, #1
 8004278:	687b      	ldr	r3, [r7, #4]
 800427a:	6859      	ldr	r1, [r3, #4]
 800427c:	460b      	mov	r3, r1
 800427e:	009b      	lsls	r3, r3, #2
 8004280:	440b      	add	r3, r1
 8004282:	0099      	lsls	r1, r3, #2
 8004284:	440b      	add	r3, r1
 8004286:	fbb0 f3f3 	udiv	r3, r0, r3
 800428a:	3301      	adds	r3, #1
 800428c:	f3c3 030b 	ubfx	r3, r3, #0, #12
 8004290:	2b00      	cmp	r3, #0
 8004292:	bf0c      	ite	eq
 8004294:	2301      	moveq	r3, #1
 8004296:	2300      	movne	r3, #0
 8004298:	b2db      	uxtb	r3, r3
 800429a:	2b00      	cmp	r3, #0
 800429c:	d001      	beq.n	80042a2 <HAL_I2C_Init+0x196>
 800429e:	2301      	movs	r3, #1
 80042a0:	e022      	b.n	80042e8 <HAL_I2C_Init+0x1dc>
 80042a2:	687b      	ldr	r3, [r7, #4]
 80042a4:	689b      	ldr	r3, [r3, #8]
 80042a6:	2b00      	cmp	r3, #0
 80042a8:	d10e      	bne.n	80042c8 <HAL_I2C_Init+0x1bc>
 80042aa:	68fb      	ldr	r3, [r7, #12]
 80042ac:	1e58      	subs	r0, r3, #1
 80042ae:	687b      	ldr	r3, [r7, #4]
 80042b0:	6859      	ldr	r1, [r3, #4]
 80042b2:	460b      	mov	r3, r1
 80042b4:	005b      	lsls	r3, r3, #1
 80042b6:	440b      	add	r3, r1
 80042b8:	fbb0 f3f3 	udiv	r3, r0, r3
 80042bc:	3301      	adds	r3, #1
 80042be:	f3c3 030b 	ubfx	r3, r3, #0, #12
 80042c2:	f443 4300 	orr.w	r3, r3, #32768	@ 0x8000
 80042c6:	e00f      	b.n	80042e8 <HAL_I2C_Init+0x1dc>
 80042c8:	68fb      	ldr	r3, [r7, #12]
 80042ca:	1e58      	subs	r0, r3, #1
 80042cc:	687b      	ldr	r3, [r7, #4]
 80042ce:	6859      	ldr	r1, [r3, #4]
 80042d0:	460b      	mov	r3, r1
 80042d2:	009b      	lsls	r3, r3, #2
 80042d4:	440b      	add	r3, r1
 80042d6:	0099      	lsls	r1, r3, #2
 80042d8:	440b      	add	r3, r1
 80042da:	fbb0 f3f3 	udiv	r3, r0, r3
 80042de:	3301      	adds	r3, #1
 80042e0:	f3c3 030b 	ubfx	r3, r3, #0, #12
 80042e4:	f443 4340 	orr.w	r3, r3, #49152	@ 0xc000
 80042e8:	6879      	ldr	r1, [r7, #4]
 80042ea:	6809      	ldr	r1, [r1, #0]
 80042ec:	4313      	orrs	r3, r2
 80042ee:	61cb      	str	r3, [r1, #28]

  /*---------------------------- I2Cx CR1 Configuration ----------------------*/
  /* Configure I2Cx: Generalcall and NoStretch mode */
  MODIFY_REG(hi2c->Instance->CR1, (I2C_CR1_ENGC | I2C_CR1_NOSTRETCH), (hi2c->Init.GeneralCallMode | hi2c->Init.NoStretchMode));
 80042f0:	687b      	ldr	r3, [r7, #4]
 80042f2:	681b      	ldr	r3, [r3, #0]
 80042f4:	681b      	ldr	r3, [r3, #0]
 80042f6:	f023 01c0 	bic.w	r1, r3, #192	@ 0xc0
 80042fa:	687b      	ldr	r3, [r7, #4]
 80042fc:	69da      	ldr	r2, [r3, #28]
 80042fe:	687b      	ldr	r3, [r7, #4]
 8004300:	6a1b      	ldr	r3, [r3, #32]
 8004302:	431a      	orrs	r2, r3
 8004304:	687b      	ldr	r3, [r7, #4]
 8004306:	681b      	ldr	r3, [r3, #0]
 8004308:	430a      	orrs	r2, r1
 800430a:	601a      	str	r2, [r3, #0]

  /*---------------------------- I2Cx OAR1 Configuration ---------------------*/
  /* Configure I2Cx: Own Address1 and addressing mode */
  MODIFY_REG(hi2c->Instance->OAR1, (I2C_OAR1_ADDMODE | I2C_OAR1_ADD8_9 | I2C_OAR1_ADD1_7 | I2C_OAR1_ADD0), (hi2c->Init.AddressingMode | hi2c->Init.OwnAddress1));
 800430c:	687b      	ldr	r3, [r7, #4]
 800430e:	681b      	ldr	r3, [r3, #0]
 8004310:	689b      	ldr	r3, [r3, #8]
 8004312:	f423 4303 	bic.w	r3, r3, #33536	@ 0x8300
 8004316:	f023 03ff 	bic.w	r3, r3, #255	@ 0xff
 800431a:	687a      	ldr	r2, [r7, #4]
 800431c:	6911      	ldr	r1, [r2, #16]
 800431e:	687a      	ldr	r2, [r7, #4]
 8004320:	68d2      	ldr	r2, [r2, #12]
 8004322:	4311      	orrs	r1, r2
 8004324:	687a      	ldr	r2, [r7, #4]
 8004326:	6812      	ldr	r2, [r2, #0]
 8004328:	430b      	orrs	r3, r1
 800432a:	6093      	str	r3, [r2, #8]

  /*---------------------------- I2Cx OAR2 Configuration ---------------------*/
  /* Configure I2Cx: Dual mode and Own Address2 */
  MODIFY_REG(hi2c->Instance->OAR2, (I2C_OAR2_ENDUAL | I2C_OAR2_ADD2), (hi2c->Init.DualAddressMode | hi2c->Init.OwnAddress2));
 800432c:	687b      	ldr	r3, [r7, #4]
 800432e:	681b      	ldr	r3, [r3, #0]
 8004330:	68db      	ldr	r3, [r3, #12]
 8004332:	f023 01ff 	bic.w	r1, r3, #255	@ 0xff
 8004336:	687b      	ldr	r3, [r7, #4]
 8004338:	695a      	ldr	r2, [r3, #20]
 800433a:	687b      	ldr	r3, [r7, #4]
 800433c:	699b      	ldr	r3, [r3, #24]
 800433e:	431a      	orrs	r2, r3
 8004340:	687b      	ldr	r3, [r7, #4]
 8004342:	681b      	ldr	r3, [r3, #0]
 8004344:	430a      	orrs	r2, r1
 8004346:	60da      	str	r2, [r3, #12]

  /* Enable the selected I2C peripheral */
  __HAL_I2C_ENABLE(hi2c);
 8004348:	687b      	ldr	r3, [r7, #4]
 800434a:	681b      	ldr	r3, [r3, #0]
 800434c:	681a      	ldr	r2, [r3, #0]
 800434e:	687b      	ldr	r3, [r7, #4]
 8004350:	681b      	ldr	r3, [r3, #0]
 8004352:	f042 0201 	orr.w	r2, r2, #1
 8004356:	601a      	str	r2, [r3, #0]

  hi2c->ErrorCode = HAL_I2C_ERROR_NONE;
 8004358:	687b      	ldr	r3, [r7, #4]
 800435a:	2200      	movs	r2, #0
 800435c:	641a      	str	r2, [r3, #64]	@ 0x40
  hi2c->State = HAL_I2C_STATE_READY;
 800435e:	687b      	ldr	r3, [r7, #4]
 8004360:	2220      	movs	r2, #32
 8004362:	f883 203d 	strb.w	r2, [r3, #61]	@ 0x3d
  hi2c->PreviousState = I2C_STATE_NONE;
 8004366:	687b      	ldr	r3, [r7, #4]
 8004368:	2200      	movs	r2, #0
 800436a:	631a      	str	r2, [r3, #48]	@ 0x30
  hi2c->Mode = HAL_I2C_MODE_NONE;
 800436c:	687b      	ldr	r3, [r7, #4]
 800436e:	2200      	movs	r2, #0
 8004370:	f883 203e 	strb.w	r2, [r3, #62]	@ 0x3e

  return HAL_OK;
 8004374:	2300      	movs	r3, #0
}
 8004376:	4618      	mov	r0, r3
 8004378:	3710      	adds	r7, #16
 800437a:	46bd      	mov	sp, r7
 800437c:	bd80      	pop	{r7, pc}
 800437e:	bf00      	nop
 8004380:	000186a0 	.word	0x000186a0
 8004384:	001e847f 	.word	0x001e847f
 8004388:	003d08ff 	.word	0x003d08ff
 800438c:	431bde83 	.word	0x431bde83
 8004390:	10624dd3 	.word	0x10624dd3

08004394 <HAL_I2C_Master_Transmit>:
  * @param  Size Amount of data to be sent
  * @param  Timeout Timeout duration
  * @retval HAL status
  */
HAL_StatusTypeDef HAL_I2C_Master_Transmit(I2C_HandleTypeDef *hi2c, uint16_t DevAddress, uint8_t *pData, uint16_t Size, uint32_t Timeout)
{
 8004394:	b580      	push	{r7, lr}
 8004396:	b088      	sub	sp, #32
 8004398:	af02      	add	r7, sp, #8
 800439a:	60f8      	str	r0, [r7, #12]
 800439c:	607a      	str	r2, [r7, #4]
 800439e:	461a      	mov	r2, r3
 80043a0:	460b      	mov	r3, r1
 80043a2:	817b      	strh	r3, [r7, #10]
 80043a4:	4613      	mov	r3, r2
 80043a6:	813b      	strh	r3, [r7, #8]
  /* Init tickstart for timeout management*/
  uint32_t tickstart = HAL_GetTick();
 80043a8:	f7fe fb48 	bl	8002a3c <HAL_GetTick>
 80043ac:	6178      	str	r0, [r7, #20]

  if (hi2c->State == HAL_I2C_STATE_READY)
 80043ae:	68fb      	ldr	r3, [r7, #12]
 80043b0:	f893 303d 	ldrb.w	r3, [r3, #61]	@ 0x3d
 80043b4:	b2db      	uxtb	r3, r3
 80043b6:	2b20      	cmp	r3, #32
 80043b8:	f040 80e0 	bne.w	800457c <HAL_I2C_Master_Transmit+0x1e8>
  {
    /* Wait until BUSY flag is reset */
    if (I2C_WaitOnFlagUntilTimeout(hi2c, I2C_FLAG_BUSY, SET, I2C_TIMEOUT_BUSY_FLAG, tickstart) != HAL_OK)
 80043bc:	697b      	ldr	r3, [r7, #20]
 80043be:	9300      	str	r3, [sp, #0]
 80043c0:	2319      	movs	r3, #25
 80043c2:	2201      	movs	r2, #1
 80043c4:	4970      	ldr	r1, [pc, #448]	@ (8004588 <HAL_I2C_Master_Transmit+0x1f4>)
 80043c6:	68f8      	ldr	r0, [r7, #12]
 80043c8:	f000 fc64 	bl	8004c94 <I2C_WaitOnFlagUntilTimeout>
 80043cc:	4603      	mov	r3, r0
 80043ce:	2b00      	cmp	r3, #0
 80043d0:	d001      	beq.n	80043d6 <HAL_I2C_Master_Transmit+0x42>
    {
      return HAL_BUSY;
 80043d2:	2302      	movs	r3, #2
 80043d4:	e0d3      	b.n	800457e <HAL_I2C_Master_Transmit+0x1ea>
    }

    /* Process Locked */
    __HAL_LOCK(hi2c);
 80043d6:	68fb      	ldr	r3, [r7, #12]
 80043d8:	f893 303c 	ldrb.w	r3, [r3, #60]	@ 0x3c
 80043dc:	2b01      	cmp	r3, #1
 80043de:	d101      	bne.n	80043e4 <HAL_I2C_Master_Transmit+0x50>
 80043e0:	2302      	movs	r3, #2
 80043e2:	e0cc      	b.n	800457e <HAL_I2C_Master_Transmit+0x1ea>
 80043e4:	68fb      	ldr	r3, [r7, #12]
 80043e6:	2201      	movs	r2, #1
 80043e8:	f883 203c 	strb.w	r2, [r3, #60]	@ 0x3c

    /* Check if the I2C is already enabled */
    if ((hi2c->Instance->CR1 & I2C_CR1_PE) != I2C_CR1_PE)
 80043ec:	68fb      	ldr	r3, [r7, #12]
 80043ee:	681b      	ldr	r3, [r3, #0]
 80043f0:	681b      	ldr	r3, [r3, #0]
 80043f2:	f003 0301 	and.w	r3, r3, #1
 80043f6:	2b01      	cmp	r3, #1
 80043f8:	d007      	beq.n	800440a <HAL_I2C_Master_Transmit+0x76>
    {
      /* Enable I2C peripheral */
      __HAL_I2C_ENABLE(hi2c);
 80043fa:	68fb      	ldr	r3, [r7, #12]
 80043fc:	681b      	ldr	r3, [r3, #0]
 80043fe:	681a      	ldr	r2, [r3, #0]
 8004400:	68fb      	ldr	r3, [r7, #12]
 8004402:	681b      	ldr	r3, [r3, #0]
 8004404:	f042 0201 	orr.w	r2, r2, #1
 8004408:	601a      	str	r2, [r3, #0]
    }

    /* Disable Pos */
    CLEAR_BIT(hi2c->Instance->CR1, I2C_CR1_POS);
 800440a:	68fb      	ldr	r3, [r7, #12]
 800440c:	681b      	ldr	r3, [r3, #0]
 800440e:	681a      	ldr	r2, [r3, #0]
 8004410:	68fb      	ldr	r3, [r7, #12]
 8004412:	681b      	ldr	r3, [r3, #0]
 8004414:	f422 6200 	bic.w	r2, r2, #2048	@ 0x800
 8004418:	601a      	str	r2, [r3, #0]

    hi2c->State       = HAL_I2C_STATE_BUSY_TX;
 800441a:	68fb      	ldr	r3, [r7, #12]
 800441c:	2221      	movs	r2, #33	@ 0x21
 800441e:	f883 203d 	strb.w	r2, [r3, #61]	@ 0x3d
    hi2c->Mode        = HAL_I2C_MODE_MASTER;
 8004422:	68fb      	ldr	r3, [r7, #12]
 8004424:	2210      	movs	r2, #16
 8004426:	f883 203e 	strb.w	r2, [r3, #62]	@ 0x3e
    hi2c->ErrorCode   = HAL_I2C_ERROR_NONE;
 800442a:	68fb      	ldr	r3, [r7, #12]
 800442c:	2200      	movs	r2, #0
 800442e:	641a      	str	r2, [r3, #64]	@ 0x40

    /* Prepare transfer parameters */
    hi2c->pBuffPtr    = pData;
 8004430:	68fb      	ldr	r3, [r7, #12]
 8004432:	687a      	ldr	r2, [r7, #4]
 8004434:	625a      	str	r2, [r3, #36]	@ 0x24
    hi2c->XferCount   = Size;
 8004436:	68fb      	ldr	r3, [r7, #12]
 8004438:	893a      	ldrh	r2, [r7, #8]
 800443a:	855a      	strh	r2, [r3, #42]	@ 0x2a
    hi2c->XferSize    = hi2c->XferCount;
 800443c:	68fb      	ldr	r3, [r7, #12]
 800443e:	8d5b      	ldrh	r3, [r3, #42]	@ 0x2a
 8004440:	b29a      	uxth	r2, r3
 8004442:	68fb      	ldr	r3, [r7, #12]
 8004444:	851a      	strh	r2, [r3, #40]	@ 0x28
    hi2c->XferOptions = I2C_NO_OPTION_FRAME;
 8004446:	68fb      	ldr	r3, [r7, #12]
 8004448:	4a50      	ldr	r2, [pc, #320]	@ (800458c <HAL_I2C_Master_Transmit+0x1f8>)
 800444a:	62da      	str	r2, [r3, #44]	@ 0x2c

    /* Send Slave Address */
    if (I2C_MasterRequestWrite(hi2c, DevAddress, Timeout, tickstart) != HAL_OK)
 800444c:	8979      	ldrh	r1, [r7, #10]
 800444e:	697b      	ldr	r3, [r7, #20]
 8004450:	6a3a      	ldr	r2, [r7, #32]
 8004452:	68f8      	ldr	r0, [r7, #12]
 8004454:	f000 face 	bl	80049f4 <I2C_MasterRequestWrite>
 8004458:	4603      	mov	r3, r0
 800445a:	2b00      	cmp	r3, #0
 800445c:	d001      	beq.n	8004462 <HAL_I2C_Master_Transmit+0xce>
    {
      return HAL_ERROR;
 800445e:	2301      	movs	r3, #1
 8004460:	e08d      	b.n	800457e <HAL_I2C_Master_Transmit+0x1ea>
    }

    /* Clear ADDR flag */
    __HAL_I2C_CLEAR_ADDRFLAG(hi2c);
 8004462:	2300      	movs	r3, #0
 8004464:	613b      	str	r3, [r7, #16]
 8004466:	68fb      	ldr	r3, [r7, #12]
 8004468:	681b      	ldr	r3, [r3, #0]
 800446a:	695b      	ldr	r3, [r3, #20]
 800446c:	613b      	str	r3, [r7, #16]
 800446e:	68fb      	ldr	r3, [r7, #12]
 8004470:	681b      	ldr	r3, [r3, #0]
 8004472:	699b      	ldr	r3, [r3, #24]
 8004474:	613b      	str	r3, [r7, #16]
 8004476:	693b      	ldr	r3, [r7, #16]

    while (hi2c->XferSize > 0U)
 8004478:	e066      	b.n	8004548 <HAL_I2C_Master_Transmit+0x1b4>
    {
      /* Wait until TXE flag is set */
      if (I2C_WaitOnTXEFlagUntilTimeout(hi2c, Timeout, tickstart) != HAL_OK)
 800447a:	697a      	ldr	r2, [r7, #20]
 800447c:	6a39      	ldr	r1, [r7, #32]
 800447e:	68f8      	ldr	r0, [r7, #12]
 8004480:	f000 fd22 	bl	8004ec8 <I2C_WaitOnTXEFlagUntilTimeout>
 8004484:	4603      	mov	r3, r0
 8004486:	2b00      	cmp	r3, #0
 8004488:	d00d      	beq.n	80044a6 <HAL_I2C_Master_Transmit+0x112>
      {
        if (hi2c->ErrorCode == HAL_I2C_ERROR_AF)
 800448a:	68fb      	ldr	r3, [r7, #12]
 800448c:	6c1b      	ldr	r3, [r3, #64]	@ 0x40
 800448e:	2b04      	cmp	r3, #4
 8004490:	d107      	bne.n	80044a2 <HAL_I2C_Master_Transmit+0x10e>
        {
          /* Generate Stop */
          SET_BIT(hi2c->Instance->CR1, I2C_CR1_STOP);
 8004492:	68fb      	ldr	r3, [r7, #12]
 8004494:	681b      	ldr	r3, [r3, #0]
 8004496:	681a      	ldr	r2, [r3, #0]
 8004498:	68fb      	ldr	r3, [r7, #12]
 800449a:	681b      	ldr	r3, [r3, #0]
 800449c:	f442 7200 	orr.w	r2, r2, #512	@ 0x200
 80044a0:	601a      	str	r2, [r3, #0]
        }
        return HAL_ERROR;
 80044a2:	2301      	movs	r3, #1
 80044a4:	e06b      	b.n	800457e <HAL_I2C_Master_Transmit+0x1ea>
      }

      /* Write data to DR */
      hi2c->Instance->DR = *hi2c->pBuffPtr;
 80044a6:	68fb      	ldr	r3, [r7, #12]
 80044a8:	6a5b      	ldr	r3, [r3, #36]	@ 0x24
 80044aa:	781a      	ldrb	r2, [r3, #0]
 80044ac:	68fb      	ldr	r3, [r7, #12]
 80044ae:	681b      	ldr	r3, [r3, #0]
 80044b0:	611a      	str	r2, [r3, #16]

      /* Increment Buffer pointer */
      hi2c->pBuffPtr++;
 80044b2:	68fb      	ldr	r3, [r7, #12]
 80044b4:	6a5b      	ldr	r3, [r3, #36]	@ 0x24
 80044b6:	1c5a      	adds	r2, r3, #1
 80044b8:	68fb      	ldr	r3, [r7, #12]
 80044ba:	625a      	str	r2, [r3, #36]	@ 0x24

      /* Update counter */
      hi2c->XferCount--;
 80044bc:	68fb      	ldr	r3, [r7, #12]
 80044be:	8d5b      	ldrh	r3, [r3, #42]	@ 0x2a
 80044c0:	b29b      	uxth	r3, r3
 80044c2:	3b01      	subs	r3, #1
 80044c4:	b29a      	uxth	r2, r3
 80044c6:	68fb      	ldr	r3, [r7, #12]
 80044c8:	855a      	strh	r2, [r3, #42]	@ 0x2a
      hi2c->XferSize--;
 80044ca:	68fb      	ldr	r3, [r7, #12]
 80044cc:	8d1b      	ldrh	r3, [r3, #40]	@ 0x28
 80044ce:	3b01      	subs	r3, #1
 80044d0:	b29a      	uxth	r2, r3
 80044d2:	68fb      	ldr	r3, [r7, #12]
 80044d4:	851a      	strh	r2, [r3, #40]	@ 0x28

      if ((__HAL_I2C_GET_FLAG(hi2c, I2C_FLAG_BTF) == SET) && (hi2c->XferSize != 0U))
 80044d6:	68fb      	ldr	r3, [r7, #12]
 80044d8:	681b      	ldr	r3, [r3, #0]
 80044da:	695b      	ldr	r3, [r3, #20]
 80044dc:	f003 0304 	and.w	r3, r3, #4
 80044e0:	2b04      	cmp	r3, #4
 80044e2:	d11b      	bne.n	800451c <HAL_I2C_Master_Transmit+0x188>
 80044e4:	68fb      	ldr	r3, [r7, #12]
 80044e6:	8d1b      	ldrh	r3, [r3, #40]	@ 0x28
 80044e8:	2b00      	cmp	r3, #0
 80044ea:	d017      	beq.n	800451c <HAL_I2C_Master_Transmit+0x188>
      {
        /* Write data to DR */
        hi2c->Instance->DR = *hi2c->pBuffPtr;
 80044ec:	68fb      	ldr	r3, [r7, #12]
 80044ee:	6a5b      	ldr	r3, [r3, #36]	@ 0x24
 80044f0:	781a      	ldrb	r2, [r3, #0]
 80044f2:	68fb      	ldr	r3, [r7, #12]
 80044f4:	681b      	ldr	r3, [r3, #0]
 80044f6:	611a      	str	r2, [r3, #16]

        /* Increment Buffer pointer */
        hi2c->pBuffPtr++;
 80044f8:	68fb      	ldr	r3, [r7, #12]
 80044fa:	6a5b      	ldr	r3, [r3, #36]	@ 0x24
 80044fc:	1c5a      	adds	r2, r3, #1
 80044fe:	68fb      	ldr	r3, [r7, #12]
 8004500:	625a      	str	r2, [r3, #36]	@ 0x24

        /* Update counter */
        hi2c->XferCount--;
 8004502:	68fb      	ldr	r3, [r7, #12]
 8004504:	8d5b      	ldrh	r3, [r3, #42]	@ 0x2a
 8004506:	b29b      	uxth	r3, r3
 8004508:	3b01      	subs	r3, #1
 800450a:	b29a      	uxth	r2, r3
 800450c:	68fb      	ldr	r3, [r7, #12]
 800450e:	855a      	strh	r2, [r3, #42]	@ 0x2a
        hi2c->XferSize--;
 8004510:	68fb      	ldr	r3, [r7, #12]
 8004512:	8d1b      	ldrh	r3, [r3, #40]	@ 0x28
 8004514:	3b01      	subs	r3, #1
 8004516:	b29a      	uxth	r2, r3
 8004518:	68fb      	ldr	r3, [r7, #12]
 800451a:	851a      	strh	r2, [r3, #40]	@ 0x28
      }

      /* Wait until BTF flag is set */
      if (I2C_WaitOnBTFFlagUntilTimeout(hi2c, Timeout, tickstart) != HAL_OK)
 800451c:	697a      	ldr	r2, [r7, #20]
 800451e:	6a39      	ldr	r1, [r7, #32]
 8004520:	68f8      	ldr	r0, [r7, #12]
 8004522:	f000 fd19 	bl	8004f58 <I2C_WaitOnBTFFlagUntilTimeout>
 8004526:	4603      	mov	r3, r0
 8004528:	2b00      	cmp	r3, #0
 800452a:	d00d      	beq.n	8004548 <HAL_I2C_Master_Transmit+0x1b4>
      {
        if (hi2c->ErrorCode == HAL_I2C_ERROR_AF)
 800452c:	68fb      	ldr	r3, [r7, #12]
 800452e:	6c1b      	ldr	r3, [r3, #64]	@ 0x40
 8004530:	2b04      	cmp	r3, #4
 8004532:	d107      	bne.n	8004544 <HAL_I2C_Master_Transmit+0x1b0>
        {
          /* Generate Stop */
          SET_BIT(hi2c->Instance->CR1, I2C_CR1_STOP);
 8004534:	68fb      	ldr	r3, [r7, #12]
 8004536:	681b      	ldr	r3, [r3, #0]
 8004538:	681a      	ldr	r2, [r3, #0]
 800453a:	68fb      	ldr	r3, [r7, #12]
 800453c:	681b      	ldr	r3, [r3, #0]
 800453e:	f442 7200 	orr.w	r2, r2, #512	@ 0x200
 8004542:	601a      	str	r2, [r3, #0]
        }
        return HAL_ERROR;
 8004544:	2301      	movs	r3, #1
 8004546:	e01a      	b.n	800457e <HAL_I2C_Master_Transmit+0x1ea>
    while (hi2c->XferSize > 0U)
 8004548:	68fb      	ldr	r3, [r7, #12]
 800454a:	8d1b      	ldrh	r3, [r3, #40]	@ 0x28
 800454c:	2b00      	cmp	r3, #0
 800454e:	d194      	bne.n	800447a <HAL_I2C_Master_Transmit+0xe6>
      }
    }

    /* Generate Stop */
    SET_BIT(hi2c->Instance->CR1, I2C_CR1_STOP);
 8004550:	68fb      	ldr	r3, [r7, #12]
 8004552:	681b      	ldr	r3, [r3, #0]
 8004554:	681a      	ldr	r2, [r3, #0]
 8004556:	68fb      	ldr	r3, [r7, #12]
 8004558:	681b      	ldr	r3, [r3, #0]
 800455a:	f442 7200 	orr.w	r2, r2, #512	@ 0x200
 800455e:	601a      	str	r2, [r3, #0]

    hi2c->State = HAL_I2C_STATE_READY;
 8004560:	68fb      	ldr	r3, [r7, #12]
 8004562:	2220      	movs	r2, #32
 8004564:	f883 203d 	strb.w	r2, [r3, #61]	@ 0x3d
    hi2c->Mode = HAL_I2C_MODE_NONE;
 8004568:	68fb      	ldr	r3, [r7, #12]
 800456a:	2200      	movs	r2, #0
 800456c:	f883 203e 	strb.w	r2, [r3, #62]	@ 0x3e

    /* Process Unlocked */
    __HAL_UNLOCK(hi2c);
 8004570:	68fb      	ldr	r3, [r7, #12]
 8004572:	2200      	movs	r2, #0
 8004574:	f883 203c 	strb.w	r2, [r3, #60]	@ 0x3c

    return HAL_OK;
 8004578:	2300      	movs	r3, #0
 800457a:	e000      	b.n	800457e <HAL_I2C_Master_Transmit+0x1ea>
  }
  else
  {
    return HAL_BUSY;
 800457c:	2302      	movs	r3, #2
  }
}
 800457e:	4618      	mov	r0, r3
 8004580:	3718      	adds	r7, #24
 8004582:	46bd      	mov	sp, r7
 8004584:	bd80      	pop	{r7, pc}
 8004586:	bf00      	nop
 8004588:	00100002 	.word	0x00100002
 800458c:	ffff0000 	.word	0xffff0000

08004590 <HAL_I2C_Master_Receive>:
  * @param  Size Amount of data to be sent
  * @param  Timeout Timeout duration
  * @retval HAL status
  */
HAL_StatusTypeDef HAL_I2C_Master_Receive(I2C_HandleTypeDef *hi2c, uint16_t DevAddress, uint8_t *pData, uint16_t Size, uint32_t Timeout)
{
 8004590:	b580      	push	{r7, lr}
 8004592:	b08c      	sub	sp, #48	@ 0x30
 8004594:	af02      	add	r7, sp, #8
 8004596:	60f8      	str	r0, [r7, #12]
 8004598:	607a      	str	r2, [r7, #4]
 800459a:	461a      	mov	r2, r3
 800459c:	460b      	mov	r3, r1
 800459e:	817b      	strh	r3, [r7, #10]
 80045a0:	4613      	mov	r3, r2
 80045a2:	813b      	strh	r3, [r7, #8]
  /* Init tickstart for timeout management*/
  uint32_t tickstart = HAL_GetTick();
 80045a4:	f7fe fa4a 	bl	8002a3c <HAL_GetTick>
 80045a8:	6278      	str	r0, [r7, #36]	@ 0x24

  if (hi2c->State == HAL_I2C_STATE_READY)
 80045aa:	68fb      	ldr	r3, [r7, #12]
 80045ac:	f893 303d 	ldrb.w	r3, [r3, #61]	@ 0x3d
 80045b0:	b2db      	uxtb	r3, r3
 80045b2:	2b20      	cmp	r3, #32
 80045b4:	f040 8217 	bne.w	80049e6 <HAL_I2C_Master_Receive+0x456>
  {
    /* Wait until BUSY flag is reset */
    if (I2C_WaitOnFlagUntilTimeout(hi2c, I2C_FLAG_BUSY, SET, I2C_TIMEOUT_BUSY_FLAG, tickstart) != HAL_OK)
 80045b8:	6a7b      	ldr	r3, [r7, #36]	@ 0x24
 80045ba:	9300      	str	r3, [sp, #0]
 80045bc:	2319      	movs	r3, #25
 80045be:	2201      	movs	r2, #1
 80045c0:	497c      	ldr	r1, [pc, #496]	@ (80047b4 <HAL_I2C_Master_Receive+0x224>)
 80045c2:	68f8      	ldr	r0, [r7, #12]
 80045c4:	f000 fb66 	bl	8004c94 <I2C_WaitOnFlagUntilTimeout>
 80045c8:	4603      	mov	r3, r0
 80045ca:	2b00      	cmp	r3, #0
 80045cc:	d001      	beq.n	80045d2 <HAL_I2C_Master_Receive+0x42>
    {
      return HAL_BUSY;
 80045ce:	2302      	movs	r3, #2
 80045d0:	e20a      	b.n	80049e8 <HAL_I2C_Master_Receive+0x458>
    }

    /* Process Locked */
    __HAL_LOCK(hi2c);
 80045d2:	68fb      	ldr	r3, [r7, #12]
 80045d4:	f893 303c 	ldrb.w	r3, [r3, #60]	@ 0x3c
 80045d8:	2b01      	cmp	r3, #1
 80045da:	d101      	bne.n	80045e0 <HAL_I2C_Master_Receive+0x50>
 80045dc:	2302      	movs	r3, #2
 80045de:	e203      	b.n	80049e8 <HAL_I2C_Master_Receive+0x458>
 80045e0:	68fb      	ldr	r3, [r7, #12]
 80045e2:	2201      	movs	r2, #1
 80045e4:	f883 203c 	strb.w	r2, [r3, #60]	@ 0x3c

    /* Check if the I2C is already enabled */
    if ((hi2c->Instance->CR1 & I2C_CR1_PE) != I2C_CR1_PE)
 80045e8:	68fb      	ldr	r3, [r7, #12]
 80045ea:	681b      	ldr	r3, [r3, #0]
 80045ec:	681b      	ldr	r3, [r3, #0]
 80045ee:	f003 0301 	and.w	r3, r3, #1
 80045f2:	2b01      	cmp	r3, #1
 80045f4:	d007      	beq.n	8004606 <HAL_I2C_Master_Receive+0x76>
    {
      /* Enable I2C peripheral */
      __HAL_I2C_ENABLE(hi2c);
 80045f6:	68fb      	ldr	r3, [r7, #12]
 80045f8:	681b      	ldr	r3, [r3, #0]
 80045fa:	681a      	ldr	r2, [r3, #0]
 80045fc:	68fb      	ldr	r3, [r7, #12]
 80045fe:	681b      	ldr	r3, [r3, #0]
 8004600:	f042 0201 	orr.w	r2, r2, #1
 8004604:	601a      	str	r2, [r3, #0]
    }

    /* Disable Pos */
    CLEAR_BIT(hi2c->Instance->CR1, I2C_CR1_POS);
 8004606:	68fb      	ldr	r3, [r7, #12]
 8004608:	681b      	ldr	r3, [r3, #0]
 800460a:	681a      	ldr	r2, [r3, #0]
 800460c:	68fb      	ldr	r3, [r7, #12]
 800460e:	681b      	ldr	r3, [r3, #0]
 8004610:	f422 6200 	bic.w	r2, r2, #2048	@ 0x800
 8004614:	601a      	str	r2, [r3, #0]

    hi2c->State       = HAL_I2C_STATE_BUSY_RX;
 8004616:	68fb      	ldr	r3, [r7, #12]
 8004618:	2222      	movs	r2, #34	@ 0x22
 800461a:	f883 203d 	strb.w	r2, [r3, #61]	@ 0x3d
    hi2c->Mode        = HAL_I2C_MODE_MASTER;
 800461e:	68fb      	ldr	r3, [r7, #12]
 8004620:	2210      	movs	r2, #16
 8004622:	f883 203e 	strb.w	r2, [r3, #62]	@ 0x3e
    hi2c->ErrorCode   = HAL_I2C_ERROR_NONE;
 8004626:	68fb      	ldr	r3, [r7, #12]
 8004628:	2200      	movs	r2, #0
 800462a:	641a      	str	r2, [r3, #64]	@ 0x40

    /* Prepare transfer parameters */
    hi2c->pBuffPtr    = pData;
 800462c:	68fb      	ldr	r3, [r7, #12]
 800462e:	687a      	ldr	r2, [r7, #4]
 8004630:	625a      	str	r2, [r3, #36]	@ 0x24
    hi2c->XferCount   = Size;
 8004632:	68fb      	ldr	r3, [r7, #12]
 8004634:	893a      	ldrh	r2, [r7, #8]
 8004636:	855a      	strh	r2, [r3, #42]	@ 0x2a
    hi2c->XferSize    = hi2c->XferCount;
 8004638:	68fb      	ldr	r3, [r7, #12]
 800463a:	8d5b      	ldrh	r3, [r3, #42]	@ 0x2a
 800463c:	b29a      	uxth	r2, r3
 800463e:	68fb      	ldr	r3, [r7, #12]
 8004640:	851a      	strh	r2, [r3, #40]	@ 0x28
    hi2c->XferOptions = I2C_NO_OPTION_FRAME;
 8004642:	68fb      	ldr	r3, [r7, #12]
 8004644:	4a5c      	ldr	r2, [pc, #368]	@ (80047b8 <HAL_I2C_Master_Receive+0x228>)
 8004646:	62da      	str	r2, [r3, #44]	@ 0x2c

    /* Send Slave Address */
    if (I2C_MasterRequestRead(hi2c, DevAddress, Timeout, tickstart) != HAL_OK)
 8004648:	8979      	ldrh	r1, [r7, #10]
 800464a:	6a7b      	ldr	r3, [r7, #36]	@ 0x24
 800464c:	6b3a      	ldr	r2, [r7, #48]	@ 0x30
 800464e:	68f8      	ldr	r0, [r7, #12]
 8004650:	f000 fa52 	bl	8004af8 <I2C_MasterRequestRead>
 8004654:	4603      	mov	r3, r0
 8004656:	2b00      	cmp	r3, #0
 8004658:	d001      	beq.n	800465e <HAL_I2C_Master_Receive+0xce>
    {
      return HAL_ERROR;
 800465a:	2301      	movs	r3, #1
 800465c:	e1c4      	b.n	80049e8 <HAL_I2C_Master_Receive+0x458>
    }

    if (hi2c->XferSize == 0U)
 800465e:	68fb      	ldr	r3, [r7, #12]
 8004660:	8d1b      	ldrh	r3, [r3, #40]	@ 0x28
 8004662:	2b00      	cmp	r3, #0
 8004664:	d113      	bne.n	800468e <HAL_I2C_Master_Receive+0xfe>
    {
      /* Clear ADDR flag */
      __HAL_I2C_CLEAR_ADDRFLAG(hi2c);
 8004666:	2300      	movs	r3, #0
 8004668:	623b      	str	r3, [r7, #32]
 800466a:	68fb      	ldr	r3, [r7, #12]
 800466c:	681b      	ldr	r3, [r3, #0]
 800466e:	695b      	ldr	r3, [r3, #20]
 8004670:	623b      	str	r3, [r7, #32]
 8004672:	68fb      	ldr	r3, [r7, #12]
 8004674:	681b      	ldr	r3, [r3, #0]
 8004676:	699b      	ldr	r3, [r3, #24]
 8004678:	623b      	str	r3, [r7, #32]
 800467a:	6a3b      	ldr	r3, [r7, #32]

      /* Generate Stop */
      SET_BIT(hi2c->Instance->CR1, I2C_CR1_STOP);
 800467c:	68fb      	ldr	r3, [r7, #12]
 800467e:	681b      	ldr	r3, [r3, #0]
 8004680:	681a      	ldr	r2, [r3, #0]
 8004682:	68fb      	ldr	r3, [r7, #12]
 8004684:	681b      	ldr	r3, [r3, #0]
 8004686:	f442 7200 	orr.w	r2, r2, #512	@ 0x200
 800468a:	601a      	str	r2, [r3, #0]
 800468c:	e198      	b.n	80049c0 <HAL_I2C_Master_Receive+0x430>
    }
    else if (hi2c->XferSize == 1U)
 800468e:	68fb      	ldr	r3, [r7, #12]
 8004690:	8d1b      	ldrh	r3, [r3, #40]	@ 0x28
 8004692:	2b01      	cmp	r3, #1
 8004694:	d11b      	bne.n	80046ce <HAL_I2C_Master_Receive+0x13e>
    {
      /* Disable Acknowledge */
      CLEAR_BIT(hi2c->Instance->CR1, I2C_CR1_ACK);
 8004696:	68fb      	ldr	r3, [r7, #12]
 8004698:	681b      	ldr	r3, [r3, #0]
 800469a:	681a      	ldr	r2, [r3, #0]
 800469c:	68fb      	ldr	r3, [r7, #12]
 800469e:	681b      	ldr	r3, [r3, #0]
 80046a0:	f422 6280 	bic.w	r2, r2, #1024	@ 0x400
 80046a4:	601a      	str	r2, [r3, #0]

      /* Clear ADDR flag */
      __HAL_I2C_CLEAR_ADDRFLAG(hi2c);
 80046a6:	2300      	movs	r3, #0
 80046a8:	61fb      	str	r3, [r7, #28]
 80046aa:	68fb      	ldr	r3, [r7, #12]
 80046ac:	681b      	ldr	r3, [r3, #0]
 80046ae:	695b      	ldr	r3, [r3, #20]
 80046b0:	61fb      	str	r3, [r7, #28]
 80046b2:	68fb      	ldr	r3, [r7, #12]
 80046b4:	681b      	ldr	r3, [r3, #0]
 80046b6:	699b      	ldr	r3, [r3, #24]
 80046b8:	61fb      	str	r3, [r7, #28]
 80046ba:	69fb      	ldr	r3, [r7, #28]

      /* Generate Stop */
      SET_BIT(hi2c->Instance->CR1, I2C_CR1_STOP);
 80046bc:	68fb      	ldr	r3, [r7, #12]
 80046be:	681b      	ldr	r3, [r3, #0]
 80046c0:	681a      	ldr	r2, [r3, #0]
 80046c2:	68fb      	ldr	r3, [r7, #12]
 80046c4:	681b      	ldr	r3, [r3, #0]
 80046c6:	f442 7200 	orr.w	r2, r2, #512	@ 0x200
 80046ca:	601a      	str	r2, [r3, #0]
 80046cc:	e178      	b.n	80049c0 <HAL_I2C_Master_Receive+0x430>
    }
    else if (hi2c->XferSize == 2U)
 80046ce:	68fb      	ldr	r3, [r7, #12]
 80046d0:	8d1b      	ldrh	r3, [r3, #40]	@ 0x28
 80046d2:	2b02      	cmp	r3, #2
 80046d4:	d11b      	bne.n	800470e <HAL_I2C_Master_Receive+0x17e>
    {
      /* Disable Acknowledge */
      CLEAR_BIT(hi2c->Instance->CR1, I2C_CR1_ACK);
 80046d6:	68fb      	ldr	r3, [r7, #12]
 80046d8:	681b      	ldr	r3, [r3, #0]
 80046da:	681a      	ldr	r2, [r3, #0]
 80046dc:	68fb      	ldr	r3, [r7, #12]
 80046de:	681b      	ldr	r3, [r3, #0]
 80046e0:	f422 6280 	bic.w	r2, r2, #1024	@ 0x400
 80046e4:	601a      	str	r2, [r3, #0]

      /* Enable Pos */
      SET_BIT(hi2c->Instance->CR1, I2C_CR1_POS);
 80046e6:	68fb      	ldr	r3, [r7, #12]
 80046e8:	681b      	ldr	r3, [r3, #0]
 80046ea:	681a      	ldr	r2, [r3, #0]
 80046ec:	68fb      	ldr	r3, [r7, #12]
 80046ee:	681b      	ldr	r3, [r3, #0]
 80046f0:	f442 6200 	orr.w	r2, r2, #2048	@ 0x800
 80046f4:	601a      	str	r2, [r3, #0]

      /* Clear ADDR flag */
      __HAL_I2C_CLEAR_ADDRFLAG(hi2c);
 80046f6:	2300      	movs	r3, #0
 80046f8:	61bb      	str	r3, [r7, #24]
 80046fa:	68fb      	ldr	r3, [r7, #12]
 80046fc:	681b      	ldr	r3, [r3, #0]
 80046fe:	695b      	ldr	r3, [r3, #20]
 8004700:	61bb      	str	r3, [r7, #24]
 8004702:	68fb      	ldr	r3, [r7, #12]
 8004704:	681b      	ldr	r3, [r3, #0]
 8004706:	699b      	ldr	r3, [r3, #24]
 8004708:	61bb      	str	r3, [r7, #24]
 800470a:	69bb      	ldr	r3, [r7, #24]
 800470c:	e158      	b.n	80049c0 <HAL_I2C_Master_Receive+0x430>
    }
    else
    {
      /* Enable Acknowledge */
      SET_BIT(hi2c->Instance->CR1, I2C_CR1_ACK);
 800470e:	68fb      	ldr	r3, [r7, #12]
 8004710:	681b      	ldr	r3, [r3, #0]
 8004712:	681a      	ldr	r2, [r3, #0]
 8004714:	68fb      	ldr	r3, [r7, #12]
 8004716:	681b      	ldr	r3, [r3, #0]
 8004718:	f442 6280 	orr.w	r2, r2, #1024	@ 0x400
 800471c:	601a      	str	r2, [r3, #0]

      /* Clear ADDR flag */
      __HAL_I2C_CLEAR_ADDRFLAG(hi2c);
 800471e:	2300      	movs	r3, #0
 8004720:	617b      	str	r3, [r7, #20]
 8004722:	68fb      	ldr	r3, [r7, #12]
 8004724:	681b      	ldr	r3, [r3, #0]
 8004726:	695b      	ldr	r3, [r3, #20]
 8004728:	617b      	str	r3, [r7, #20]
 800472a:	68fb      	ldr	r3, [r7, #12]
 800472c:	681b      	ldr	r3, [r3, #0]
 800472e:	699b      	ldr	r3, [r3, #24]
 8004730:	617b      	str	r3, [r7, #20]
 8004732:	697b      	ldr	r3, [r7, #20]
    }

    while (hi2c->XferSize > 0U)
 8004734:	e144      	b.n	80049c0 <HAL_I2C_Master_Receive+0x430>
    {
      if (hi2c->XferSize <= 3U)
 8004736:	68fb      	ldr	r3, [r7, #12]
 8004738:	8d1b      	ldrh	r3, [r3, #40]	@ 0x28
 800473a:	2b03      	cmp	r3, #3
 800473c:	f200 80f1 	bhi.w	8004922 <HAL_I2C_Master_Receive+0x392>
      {
        /* One byte */
        if (hi2c->XferSize == 1U)
 8004740:	68fb      	ldr	r3, [r7, #12]
 8004742:	8d1b      	ldrh	r3, [r3, #40]	@ 0x28
 8004744:	2b01      	cmp	r3, #1
 8004746:	d123      	bne.n	8004790 <HAL_I2C_Master_Receive+0x200>
        {
          /* Wait until RXNE flag is set */
          if (I2C_WaitOnRXNEFlagUntilTimeout(hi2c, Timeout, tickstart) != HAL_OK)
 8004748:	6a7a      	ldr	r2, [r7, #36]	@ 0x24
 800474a:	6b39      	ldr	r1, [r7, #48]	@ 0x30
 800474c:	68f8      	ldr	r0, [r7, #12]
 800474e:	f000 fc4b 	bl	8004fe8 <I2C_WaitOnRXNEFlagUntilTimeout>
 8004752:	4603      	mov	r3, r0
 8004754:	2b00      	cmp	r3, #0
 8004756:	d001      	beq.n	800475c <HAL_I2C_Master_Receive+0x1cc>
          {
            return HAL_ERROR;
 8004758:	2301      	movs	r3, #1
 800475a:	e145      	b.n	80049e8 <HAL_I2C_Master_Receive+0x458>
          }

          /* Read data from DR */
          *hi2c->pBuffPtr = (uint8_t)hi2c->Instance->DR;
 800475c:	68fb      	ldr	r3, [r7, #12]
 800475e:	681b      	ldr	r3, [r3, #0]
 8004760:	691a      	ldr	r2, [r3, #16]
 8004762:	68fb      	ldr	r3, [r7, #12]
 8004764:	6a5b      	ldr	r3, [r3, #36]	@ 0x24
 8004766:	b2d2      	uxtb	r2, r2
 8004768:	701a      	strb	r2, [r3, #0]

          /* Increment Buffer pointer */
          hi2c->pBuffPtr++;
 800476a:	68fb      	ldr	r3, [r7, #12]
 800476c:	6a5b      	ldr	r3, [r3, #36]	@ 0x24
 800476e:	1c5a      	adds	r2, r3, #1
 8004770:	68fb      	ldr	r3, [r7, #12]
 8004772:	625a      	str	r2, [r3, #36]	@ 0x24

          /* Update counter */
          hi2c->XferSize--;
 8004774:	68fb      	ldr	r3, [r7, #12]
 8004776:	8d1b      	ldrh	r3, [r3, #40]	@ 0x28
 8004778:	3b01      	subs	r3, #1
 800477a:	b29a      	uxth	r2, r3
 800477c:	68fb      	ldr	r3, [r7, #12]
 800477e:	851a      	strh	r2, [r3, #40]	@ 0x28
          hi2c->XferCount--;
 8004780:	68fb      	ldr	r3, [r7, #12]
 8004782:	8d5b      	ldrh	r3, [r3, #42]	@ 0x2a
 8004784:	b29b      	uxth	r3, r3
 8004786:	3b01      	subs	r3, #1
 8004788:	b29a      	uxth	r2, r3
 800478a:	68fb      	ldr	r3, [r7, #12]
 800478c:	855a      	strh	r2, [r3, #42]	@ 0x2a
 800478e:	e117      	b.n	80049c0 <HAL_I2C_Master_Receive+0x430>
        }
        /* Two bytes */
        else if (hi2c->XferSize == 2U)
 8004790:	68fb      	ldr	r3, [r7, #12]
 8004792:	8d1b      	ldrh	r3, [r3, #40]	@ 0x28
 8004794:	2b02      	cmp	r3, #2
 8004796:	d14e      	bne.n	8004836 <HAL_I2C_Master_Receive+0x2a6>
        {
          /* Wait until BTF flag is set */
          if (I2C_WaitOnFlagUntilTimeout(hi2c, I2C_FLAG_BTF, RESET, Timeout, tickstart) != HAL_OK)
 8004798:	6a7b      	ldr	r3, [r7, #36]	@ 0x24
 800479a:	9300      	str	r3, [sp, #0]
 800479c:	6b3b      	ldr	r3, [r7, #48]	@ 0x30
 800479e:	2200      	movs	r2, #0
 80047a0:	4906      	ldr	r1, [pc, #24]	@ (80047bc <HAL_I2C_Master_Receive+0x22c>)
 80047a2:	68f8      	ldr	r0, [r7, #12]
 80047a4:	f000 fa76 	bl	8004c94 <I2C_WaitOnFlagUntilTimeout>
 80047a8:	4603      	mov	r3, r0
 80047aa:	2b00      	cmp	r3, #0
 80047ac:	d008      	beq.n	80047c0 <HAL_I2C_Master_Receive+0x230>
          {
            return HAL_ERROR;
 80047ae:	2301      	movs	r3, #1
 80047b0:	e11a      	b.n	80049e8 <HAL_I2C_Master_Receive+0x458>
 80047b2:	bf00      	nop
 80047b4:	00100002 	.word	0x00100002
 80047b8:	ffff0000 	.word	0xffff0000
 80047bc:	00010004 	.word	0x00010004
          }

          /* Generate Stop */
          SET_BIT(hi2c->Instance->CR1, I2C_CR1_STOP);
 80047c0:	68fb      	ldr	r3, [r7, #12]
 80047c2:	681b      	ldr	r3, [r3, #0]
 80047c4:	681a      	ldr	r2, [r3, #0]
 80047c6:	68fb      	ldr	r3, [r7, #12]
 80047c8:	681b      	ldr	r3, [r3, #0]
 80047ca:	f442 7200 	orr.w	r2, r2, #512	@ 0x200
 80047ce:	601a      	str	r2, [r3, #0]

          /* Read data from DR */
          *hi2c->pBuffPtr = (uint8_t)hi2c->Instance->DR;
 80047d0:	68fb      	ldr	r3, [r7, #12]
 80047d2:	681b      	ldr	r3, [r3, #0]
 80047d4:	691a      	ldr	r2, [r3, #16]
 80047d6:	68fb      	ldr	r3, [r7, #12]
 80047d8:	6a5b      	ldr	r3, [r3, #36]	@ 0x24
 80047da:	b2d2      	uxtb	r2, r2
 80047dc:	701a      	strb	r2, [r3, #0]

          /* Increment Buffer pointer */
          hi2c->pBuffPtr++;
 80047de:	68fb      	ldr	r3, [r7, #12]
 80047e0:	6a5b      	ldr	r3, [r3, #36]	@ 0x24
 80047e2:	1c5a      	adds	r2, r3, #1
 80047e4:	68fb      	ldr	r3, [r7, #12]
 80047e6:	625a      	str	r2, [r3, #36]	@ 0x24

          /* Update counter */
          hi2c->XferSize--;
 80047e8:	68fb      	ldr	r3, [r7, #12]
 80047ea:	8d1b      	ldrh	r3, [r3, #40]	@ 0x28
 80047ec:	3b01      	subs	r3, #1
 80047ee:	b29a      	uxth	r2, r3
 80047f0:	68fb      	ldr	r3, [r7, #12]
 80047f2:	851a      	strh	r2, [r3, #40]	@ 0x28
          hi2c->XferCount--;
 80047f4:	68fb      	ldr	r3, [r7, #12]
 80047f6:	8d5b      	ldrh	r3, [r3, #42]	@ 0x2a
 80047f8:	b29b      	uxth	r3, r3
 80047fa:	3b01      	subs	r3, #1
 80047fc:	b29a      	uxth	r2, r3
 80047fe:	68fb      	ldr	r3, [r7, #12]
 8004800:	855a      	strh	r2, [r3, #42]	@ 0x2a

          /* Read data from DR */
          *hi2c->pBuffPtr = (uint8_t)hi2c->Instance->DR;
 8004802:	68fb      	ldr	r3, [r7, #12]
 8004804:	681b      	ldr	r3, [r3, #0]
 8004806:	691a      	ldr	r2, [r3, #16]
 8004808:	68fb      	ldr	r3, [r7, #12]
 800480a:	6a5b      	ldr	r3, [r3, #36]	@ 0x24
 800480c:	b2d2      	uxtb	r2, r2
 800480e:	701a      	strb	r2, [r3, #0]

          /* Increment Buffer pointer */
          hi2c->pBuffPtr++;
 8004810:	68fb      	ldr	r3, [r7, #12]
 8004812:	6a5b      	ldr	r3, [r3, #36]	@ 0x24
 8004814:	1c5a      	adds	r2, r3, #1
 8004816:	68fb      	ldr	r3, [r7, #12]
 8004818:	625a      	str	r2, [r3, #36]	@ 0x24

          /* Update counter */
          hi2c->XferSize--;
 800481a:	68fb      	ldr	r3, [r7, #12]
 800481c:	8d1b      	ldrh	r3, [r3, #40]	@ 0x28
 800481e:	3b01      	subs	r3, #1
 8004820:	b29a      	uxth	r2, r3
 8004822:	68fb      	ldr	r3, [r7, #12]
 8004824:	851a      	strh	r2, [r3, #40]	@ 0x28
          hi2c->XferCount--;
 8004826:	68fb      	ldr	r3, [r7, #12]
 8004828:	8d5b      	ldrh	r3, [r3, #42]	@ 0x2a
 800482a:	b29b      	uxth	r3, r3
 800482c:	3b01      	subs	r3, #1
 800482e:	b29a      	uxth	r2, r3
 8004830:	68fb      	ldr	r3, [r7, #12]
 8004832:	855a      	strh	r2, [r3, #42]	@ 0x2a
 8004834:	e0c4      	b.n	80049c0 <HAL_I2C_Master_Receive+0x430>
        }
        /* 3 Last bytes */
        else
        {
          /* Wait until BTF flag is set */
          if (I2C_WaitOnFlagUntilTimeout(hi2c, I2C_FLAG_BTF, RESET, Timeout, tickstart) != HAL_OK)
 8004836:	6a7b      	ldr	r3, [r7, #36]	@ 0x24
 8004838:	9300      	str	r3, [sp, #0]
 800483a:	6b3b      	ldr	r3, [r7, #48]	@ 0x30
 800483c:	2200      	movs	r2, #0
 800483e:	496c      	ldr	r1, [pc, #432]	@ (80049f0 <HAL_I2C_Master_Receive+0x460>)
 8004840:	68f8      	ldr	r0, [r7, #12]
 8004842:	f000 fa27 	bl	8004c94 <I2C_WaitOnFlagUntilTimeout>
 8004846:	4603      	mov	r3, r0
 8004848:	2b00      	cmp	r3, #0
 800484a:	d001      	beq.n	8004850 <HAL_I2C_Master_Receive+0x2c0>
          {
            return HAL_ERROR;
 800484c:	2301      	movs	r3, #1
 800484e:	e0cb      	b.n	80049e8 <HAL_I2C_Master_Receive+0x458>
          }

          /* Disable Acknowledge */
          CLEAR_BIT(hi2c->Instance->CR1, I2C_CR1_ACK);
 8004850:	68fb      	ldr	r3, [r7, #12]
 8004852:	681b      	ldr	r3, [r3, #0]
 8004854:	681a      	ldr	r2, [r3, #0]
 8004856:	68fb      	ldr	r3, [r7, #12]
 8004858:	681b      	ldr	r3, [r3, #0]
 800485a:	f422 6280 	bic.w	r2, r2, #1024	@ 0x400
 800485e:	601a      	str	r2, [r3, #0]

          /* Read data from DR */
          *hi2c->pBuffPtr = (uint8_t)hi2c->Instance->DR;
 8004860:	68fb      	ldr	r3, [r7, #12]
 8004862:	681b      	ldr	r3, [r3, #0]
 8004864:	691a      	ldr	r2, [r3, #16]
 8004866:	68fb      	ldr	r3, [r7, #12]
 8004868:	6a5b      	ldr	r3, [r3, #36]	@ 0x24
 800486a:	b2d2      	uxtb	r2, r2
 800486c:	701a      	strb	r2, [r3, #0]

          /* Increment Buffer pointer */
          hi2c->pBuffPtr++;
 800486e:	68fb      	ldr	r3, [r7, #12]
 8004870:	6a5b      	ldr	r3, [r3, #36]	@ 0x24
 8004872:	1c5a      	adds	r2, r3, #1
 8004874:	68fb      	ldr	r3, [r7, #12]
 8004876:	625a      	str	r2, [r3, #36]	@ 0x24

          /* Update counter */
          hi2c->XferSize--;
 8004878:	68fb      	ldr	r3, [r7, #12]
 800487a:	8d1b      	ldrh	r3, [r3, #40]	@ 0x28
 800487c:	3b01      	subs	r3, #1
 800487e:	b29a      	uxth	r2, r3
 8004880:	68fb      	ldr	r3, [r7, #12]
 8004882:	851a      	strh	r2, [r3, #40]	@ 0x28
          hi2c->XferCount--;
 8004884:	68fb      	ldr	r3, [r7, #12]
 8004886:	8d5b      	ldrh	r3, [r3, #42]	@ 0x2a
 8004888:	b29b      	uxth	r3, r3
 800488a:	3b01      	subs	r3, #1
 800488c:	b29a      	uxth	r2, r3
 800488e:	68fb      	ldr	r3, [r7, #12]
 8004890:	855a      	strh	r2, [r3, #42]	@ 0x2a

          /* Wait until BTF flag is set */
          if (I2C_WaitOnFlagUntilTimeout(hi2c, I2C_FLAG_BTF, RESET, Timeout, tickstart) != HAL_OK)
 8004892:	6a7b      	ldr	r3, [r7, #36]	@ 0x24
 8004894:	9300      	str	r3, [sp, #0]
 8004896:	6b3b      	ldr	r3, [r7, #48]	@ 0x30
 8004898:	2200      	movs	r2, #0
 800489a:	4955      	ldr	r1, [pc, #340]	@ (80049f0 <HAL_I2C_Master_Receive+0x460>)
 800489c:	68f8      	ldr	r0, [r7, #12]
 800489e:	f000 f9f9 	bl	8004c94 <I2C_WaitOnFlagUntilTimeout>
 80048a2:	4603      	mov	r3, r0
 80048a4:	2b00      	cmp	r3, #0
 80048a6:	d001      	beq.n	80048ac <HAL_I2C_Master_Receive+0x31c>
          {
            return HAL_ERROR;
 80048a8:	2301      	movs	r3, #1
 80048aa:	e09d      	b.n	80049e8 <HAL_I2C_Master_Receive+0x458>
          }

          /* Generate Stop */
          SET_BIT(hi2c->Instance->CR1, I2C_CR1_STOP);
 80048ac:	68fb      	ldr	r3, [r7, #12]
 80048ae:	681b      	ldr	r3, [r3, #0]
 80048b0:	681a      	ldr	r2, [r3, #0]
 80048b2:	68fb      	ldr	r3, [r7, #12]
 80048b4:	681b      	ldr	r3, [r3, #0]
 80048b6:	f442 7200 	orr.w	r2, r2, #512	@ 0x200
 80048ba:	601a      	str	r2, [r3, #0]

          /* Read data from DR */
          *hi2c->pBuffPtr = (uint8_t)hi2c->Instance->DR;
 80048bc:	68fb      	ldr	r3, [r7, #12]
 80048be:	681b      	ldr	r3, [r3, #0]
 80048c0:	691a      	ldr	r2, [r3, #16]
 80048c2:	68fb      	ldr	r3, [r7, #12]
 80048c4:	6a5b      	ldr	r3, [r3, #36]	@ 0x24
 80048c6:	b2d2      	uxtb	r2, r2
 80048c8:	701a      	strb	r2, [r3, #0]

          /* Increment Buffer pointer */
          hi2c->pBuffPtr++;
 80048ca:	68fb      	ldr	r3, [r7, #12]
 80048cc:	6a5b      	ldr	r3, [r3, #36]	@ 0x24
 80048ce:	1c5a      	adds	r2, r3, #1
 80048d0:	68fb      	ldr	r3, [r7, #12]
 80048d2:	625a      	str	r2, [r3, #36]	@ 0x24

          /* Update counter */
          hi2c->XferSize--;
 80048d4:	68fb      	ldr	r3, [r7, #12]
 80048d6:	8d1b      	ldrh	r3, [r3, #40]	@ 0x28
 80048d8:	3b01      	subs	r3, #1
 80048da:	b29a      	uxth	r2, r3
 80048dc:	68fb      	ldr	r3, [r7, #12]
 80048de:	851a      	strh	r2, [r3, #40]	@ 0x28
          hi2c->XferCount--;
 80048e0:	68fb      	ldr	r3, [r7, #12]
 80048e2:	8d5b      	ldrh	r3, [r3, #42]	@ 0x2a
 80048e4:	b29b      	uxth	r3, r3
 80048e6:	3b01      	subs	r3, #1
 80048e8:	b29a      	uxth	r2, r3
 80048ea:	68fb      	ldr	r3, [r7, #12]
 80048ec:	855a      	strh	r2, [r3, #42]	@ 0x2a

          /* Read data from DR */
          *hi2c->pBuffPtr = (uint8_t)hi2c->Instance->DR;
 80048ee:	68fb      	ldr	r3, [r7, #12]
 80048f0:	681b      	ldr	r3, [r3, #0]
 80048f2:	691a      	ldr	r2, [r3, #16]
 80048f4:	68fb      	ldr	r3, [r7, #12]
 80048f6:	6a5b      	ldr	r3, [r3, #36]	@ 0x24
 80048f8:	b2d2      	uxtb	r2, r2
 80048fa:	701a      	strb	r2, [r3, #0]

          /* Increment Buffer pointer */
          hi2c->pBuffPtr++;
 80048fc:	68fb      	ldr	r3, [r7, #12]
 80048fe:	6a5b      	ldr	r3, [r3, #36]	@ 0x24
 8004900:	1c5a      	adds	r2, r3, #1
 8004902:	68fb      	ldr	r3, [r7, #12]
 8004904:	625a      	str	r2, [r3, #36]	@ 0x24

          /* Update counter */
          hi2c->XferSize--;
 8004906:	68fb      	ldr	r3, [r7, #12]
 8004908:	8d1b      	ldrh	r3, [r3, #40]	@ 0x28
 800490a:	3b01      	subs	r3, #1
 800490c:	b29a      	uxth	r2, r3
 800490e:	68fb      	ldr	r3, [r7, #12]
 8004910:	851a      	strh	r2, [r3, #40]	@ 0x28
          hi2c->XferCount--;
 8004912:	68fb      	ldr	r3, [r7, #12]
 8004914:	8d5b      	ldrh	r3, [r3, #42]	@ 0x2a
 8004916:	b29b      	uxth	r3, r3
 8004918:	3b01      	subs	r3, #1
 800491a:	b29a      	uxth	r2, r3
 800491c:	68fb      	ldr	r3, [r7, #12]
 800491e:	855a      	strh	r2, [r3, #42]	@ 0x2a
 8004920:	e04e      	b.n	80049c0 <HAL_I2C_Master_Receive+0x430>
        }
      }
      else
      {
        /* Wait until RXNE flag is set */
        if (I2C_WaitOnRXNEFlagUntilTimeout(hi2c, Timeout, tickstart) != HAL_OK)
 8004922:	6a7a      	ldr	r2, [r7, #36]	@ 0x24
 8004924:	6b39      	ldr	r1, [r7, #48]	@ 0x30
 8004926:	68f8      	ldr	r0, [r7, #12]
 8004928:	f000 fb5e 	bl	8004fe8 <I2C_WaitOnRXNEFlagUntilTimeout>
 800492c:	4603      	mov	r3, r0
 800492e:	2b00      	cmp	r3, #0
 8004930:	d001      	beq.n	8004936 <HAL_I2C_Master_Receive+0x3a6>
        {
          return HAL_ERROR;
 8004932:	2301      	movs	r3, #1
 8004934:	e058      	b.n	80049e8 <HAL_I2C_Master_Receive+0x458>
        }

        /* Read data from DR */
        *hi2c->pBuffPtr = (uint8_t)hi2c->Instance->DR;
 8004936:	68fb      	ldr	r3, [r7, #12]
 8004938:	681b      	ldr	r3, [r3, #0]
 800493a:	691a      	ldr	r2, [r3, #16]
 800493c:	68fb      	ldr	r3, [r7, #12]
 800493e:	6a5b      	ldr	r3, [r3, #36]	@ 0x24
 8004940:	b2d2      	uxtb	r2, r2
 8004942:	701a      	strb	r2, [r3, #0]

        /* Increment Buffer pointer */
        hi2c->pBuffPtr++;
 8004944:	68fb      	ldr	r3, [r7, #12]
 8004946:	6a5b      	ldr	r3, [r3, #36]	@ 0x24
 8004948:	1c5a      	adds	r2, r3, #1
 800494a:	68fb      	ldr	r3, [r7, #12]
 800494c:	625a      	str	r2, [r3, #36]	@ 0x24

        /* Update counter */
        hi2c->XferSize--;
 800494e:	68fb      	ldr	r3, [r7, #12]
 8004950:	8d1b      	ldrh	r3, [r3, #40]	@ 0x28
 8004952:	3b01      	subs	r3, #1
 8004954:	b29a      	uxth	r2, r3
 8004956:	68fb      	ldr	r3, [r7, #12]
 8004958:	851a      	strh	r2, [r3, #40]	@ 0x28
        hi2c->XferCount--;
 800495a:	68fb      	ldr	r3, [r7, #12]
 800495c:	8d5b      	ldrh	r3, [r3, #42]	@ 0x2a
 800495e:	b29b      	uxth	r3, r3
 8004960:	3b01      	subs	r3, #1
 8004962:	b29a      	uxth	r2, r3
 8004964:	68fb      	ldr	r3, [r7, #12]
 8004966:	855a      	strh	r2, [r3, #42]	@ 0x2a

        if (__HAL_I2C_GET_FLAG(hi2c, I2C_FLAG_BTF) == SET)
 8004968:	68fb      	ldr	r3, [r7, #12]
 800496a:	681b      	ldr	r3, [r3, #0]
 800496c:	695b      	ldr	r3, [r3, #20]
 800496e:	f003 0304 	and.w	r3, r3, #4
 8004972:	2b04      	cmp	r3, #4
 8004974:	d124      	bne.n	80049c0 <HAL_I2C_Master_Receive+0x430>
        {

          if (hi2c->XferSize == 3U)
 8004976:	68fb      	ldr	r3, [r7, #12]
 8004978:	8d1b      	ldrh	r3, [r3, #40]	@ 0x28
 800497a:	2b03      	cmp	r3, #3
 800497c:	d107      	bne.n	800498e <HAL_I2C_Master_Receive+0x3fe>
          {
            /* Disable Acknowledge */
            CLEAR_BIT(hi2c->Instance->CR1, I2C_CR1_ACK);
 800497e:	68fb      	ldr	r3, [r7, #12]
 8004980:	681b      	ldr	r3, [r3, #0]
 8004982:	681a      	ldr	r2, [r3, #0]
 8004984:	68fb      	ldr	r3, [r7, #12]
 8004986:	681b      	ldr	r3, [r3, #0]
 8004988:	f422 6280 	bic.w	r2, r2, #1024	@ 0x400
 800498c:	601a      	str	r2, [r3, #0]
          }

          /* Read data from DR */
          *hi2c->pBuffPtr = (uint8_t)hi2c->Instance->DR;
 800498e:	68fb      	ldr	r3, [r7, #12]
 8004990:	681b      	ldr	r3, [r3, #0]
 8004992:	691a      	ldr	r2, [r3, #16]
 8004994:	68fb      	ldr	r3, [r7, #12]
 8004996:	6a5b      	ldr	r3, [r3, #36]	@ 0x24
 8004998:	b2d2      	uxtb	r2, r2
 800499a:	701a      	strb	r2, [r3, #0]

          /* Increment Buffer pointer */
          hi2c->pBuffPtr++;
 800499c:	68fb      	ldr	r3, [r7, #12]
 800499e:	6a5b      	ldr	r3, [r3, #36]	@ 0x24
 80049a0:	1c5a      	adds	r2, r3, #1
 80049a2:	68fb      	ldr	r3, [r7, #12]
 80049a4:	625a      	str	r2, [r3, #36]	@ 0x24

          /* Update counter */
          hi2c->XferSize--;
 80049a6:	68fb      	ldr	r3, [r7, #12]
 80049a8:	8d1b      	ldrh	r3, [r3, #40]	@ 0x28
 80049aa:	3b01      	subs	r3, #1
 80049ac:	b29a      	uxth	r2, r3
 80049ae:	68fb      	ldr	r3, [r7, #12]
 80049b0:	851a      	strh	r2, [r3, #40]	@ 0x28
          hi2c->XferCount--;
 80049b2:	68fb      	ldr	r3, [r7, #12]
 80049b4:	8d5b      	ldrh	r3, [r3, #42]	@ 0x2a
 80049b6:	b29b      	uxth	r3, r3
 80049b8:	3b01      	subs	r3, #1
 80049ba:	b29a      	uxth	r2, r3
 80049bc:	68fb      	ldr	r3, [r7, #12]
 80049be:	855a      	strh	r2, [r3, #42]	@ 0x2a
    while (hi2c->XferSize > 0U)
 80049c0:	68fb      	ldr	r3, [r7, #12]
 80049c2:	8d1b      	ldrh	r3, [r3, #40]	@ 0x28
 80049c4:	2b00      	cmp	r3, #0
 80049c6:	f47f aeb6 	bne.w	8004736 <HAL_I2C_Master_Receive+0x1a6>
        }
      }
    }

    hi2c->State = HAL_I2C_STATE_READY;
 80049ca:	68fb      	ldr	r3, [r7, #12]
 80049cc:	2220      	movs	r2, #32
 80049ce:	f883 203d 	strb.w	r2, [r3, #61]	@ 0x3d
    hi2c->Mode = HAL_I2C_MODE_NONE;
 80049d2:	68fb      	ldr	r3, [r7, #12]
 80049d4:	2200      	movs	r2, #0
 80049d6:	f883 203e 	strb.w	r2, [r3, #62]	@ 0x3e

    /* Process Unlocked */
    __HAL_UNLOCK(hi2c);
 80049da:	68fb      	ldr	r3, [r7, #12]
 80049dc:	2200      	movs	r2, #0
 80049de:	f883 203c 	strb.w	r2, [r3, #60]	@ 0x3c

    return HAL_OK;
 80049e2:	2300      	movs	r3, #0
 80049e4:	e000      	b.n	80049e8 <HAL_I2C_Master_Receive+0x458>
  }
  else
  {
    return HAL_BUSY;
 80049e6:	2302      	movs	r3, #2
  }
}
 80049e8:	4618      	mov	r0, r3
 80049ea:	3728      	adds	r7, #40	@ 0x28
 80049ec:	46bd      	mov	sp, r7
 80049ee:	bd80      	pop	{r7, pc}
 80049f0:	00010004 	.word	0x00010004

080049f4 <I2C_MasterRequestWrite>:
  * @param  Timeout Timeout duration
  * @param  Tickstart Tick start value
  * @retval HAL status
  */
static HAL_StatusTypeDef I2C_MasterRequestWrite(I2C_HandleTypeDef *hi2c, uint16_t DevAddress, uint32_t Timeout, uint32_t Tickstart)
{
 80049f4:	b580      	push	{r7, lr}
 80049f6:	b088      	sub	sp, #32
 80049f8:	af02      	add	r7, sp, #8
 80049fa:	60f8      	str	r0, [r7, #12]
 80049fc:	607a      	str	r2, [r7, #4]
 80049fe:	603b      	str	r3, [r7, #0]
 8004a00:	460b      	mov	r3, r1
 8004a02:	817b      	strh	r3, [r7, #10]
  /* Declaration of temporary variable to prevent undefined behavior of volatile usage */
  uint32_t CurrentXferOptions = hi2c->XferOptions;
 8004a04:	68fb      	ldr	r3, [r7, #12]
 8004a06:	6adb      	ldr	r3, [r3, #44]	@ 0x2c
 8004a08:	617b      	str	r3, [r7, #20]

  /* Generate Start condition if first transfer */
  if ((CurrentXferOptions == I2C_FIRST_AND_LAST_FRAME) || (CurrentXferOptions == I2C_FIRST_FRAME) || (CurrentXferOptions == I2C_NO_OPTION_FRAME))
 8004a0a:	697b      	ldr	r3, [r7, #20]
 8004a0c:	2b08      	cmp	r3, #8
 8004a0e:	d006      	beq.n	8004a1e <I2C_MasterRequestWrite+0x2a>
 8004a10:	697b      	ldr	r3, [r7, #20]
 8004a12:	2b01      	cmp	r3, #1
 8004a14:	d003      	beq.n	8004a1e <I2C_MasterRequestWrite+0x2a>
 8004a16:	697b      	ldr	r3, [r7, #20]
 8004a18:	f513 3f80 	cmn.w	r3, #65536	@ 0x10000
 8004a1c:	d108      	bne.n	8004a30 <I2C_MasterRequestWrite+0x3c>
  {
    /* Generate Start */
    SET_BIT(hi2c->Instance->CR1, I2C_CR1_START);
 8004a1e:	68fb      	ldr	r3, [r7, #12]
 8004a20:	681b      	ldr	r3, [r3, #0]
 8004a22:	681a      	ldr	r2, [r3, #0]
 8004a24:	68fb      	ldr	r3, [r7, #12]
 8004a26:	681b      	ldr	r3, [r3, #0]
 8004a28:	f442 7280 	orr.w	r2, r2, #256	@ 0x100
 8004a2c:	601a      	str	r2, [r3, #0]
 8004a2e:	e00b      	b.n	8004a48 <I2C_MasterRequestWrite+0x54>
  }
  else if (hi2c->PreviousState == I2C_STATE_MASTER_BUSY_RX)
 8004a30:	68fb      	ldr	r3, [r7, #12]
 8004a32:	6b1b      	ldr	r3, [r3, #48]	@ 0x30
 8004a34:	2b12      	cmp	r3, #18
 8004a36:	d107      	bne.n	8004a48 <I2C_MasterRequestWrite+0x54>
  {
    /* Generate ReStart */
    SET_BIT(hi2c->Instance->CR1, I2C_CR1_START);
 8004a38:	68fb      	ldr	r3, [r7, #12]
 8004a3a:	681b      	ldr	r3, [r3, #0]
 8004a3c:	681a      	ldr	r2, [r3, #0]
 8004a3e:	68fb      	ldr	r3, [r7, #12]
 8004a40:	681b      	ldr	r3, [r3, #0]
 8004a42:	f442 7280 	orr.w	r2, r2, #256	@ 0x100
 8004a46:	601a      	str	r2, [r3, #0]
  {
    /* Do nothing */
  }

  /* Wait until SB flag is set */
  if (I2C_WaitOnFlagUntilTimeout(hi2c, I2C_FLAG_SB, RESET, Timeout, Tickstart) != HAL_OK)
 8004a48:	683b      	ldr	r3, [r7, #0]
 8004a4a:	9300      	str	r3, [sp, #0]
 8004a4c:	687b      	ldr	r3, [r7, #4]
 8004a4e:	2200      	movs	r2, #0
 8004a50:	f04f 1101 	mov.w	r1, #65537	@ 0x10001
 8004a54:	68f8      	ldr	r0, [r7, #12]
 8004a56:	f000 f91d 	bl	8004c94 <I2C_WaitOnFlagUntilTimeout>
 8004a5a:	4603      	mov	r3, r0
 8004a5c:	2b00      	cmp	r3, #0
 8004a5e:	d00d      	beq.n	8004a7c <I2C_MasterRequestWrite+0x88>
  {
    if (READ_BIT(hi2c->Instance->CR1, I2C_CR1_START) == I2C_CR1_START)
 8004a60:	68fb      	ldr	r3, [r7, #12]
 8004a62:	681b      	ldr	r3, [r3, #0]
 8004a64:	681b      	ldr	r3, [r3, #0]
 8004a66:	f403 7380 	and.w	r3, r3, #256	@ 0x100
 8004a6a:	f5b3 7f80 	cmp.w	r3, #256	@ 0x100
 8004a6e:	d103      	bne.n	8004a78 <I2C_MasterRequestWrite+0x84>
    {
      hi2c->ErrorCode = HAL_I2C_WRONG_START;
 8004a70:	68fb      	ldr	r3, [r7, #12]
 8004a72:	f44f 7200 	mov.w	r2, #512	@ 0x200
 8004a76:	641a      	str	r2, [r3, #64]	@ 0x40
    }
    return HAL_TIMEOUT;
 8004a78:	2303      	movs	r3, #3
 8004a7a:	e035      	b.n	8004ae8 <I2C_MasterRequestWrite+0xf4>
  }

  if (hi2c->Init.AddressingMode == I2C_ADDRESSINGMODE_7BIT)
 8004a7c:	68fb      	ldr	r3, [r7, #12]
 8004a7e:	691b      	ldr	r3, [r3, #16]
 8004a80:	f5b3 4f80 	cmp.w	r3, #16384	@ 0x4000
 8004a84:	d108      	bne.n	8004a98 <I2C_MasterRequestWrite+0xa4>
  {
    /* Send slave address */
    hi2c->Instance->DR = I2C_7BIT_ADD_WRITE(DevAddress);
 8004a86:	897b      	ldrh	r3, [r7, #10]
 8004a88:	b2db      	uxtb	r3, r3
 8004a8a:	461a      	mov	r2, r3
 8004a8c:	68fb      	ldr	r3, [r7, #12]
 8004a8e:	681b      	ldr	r3, [r3, #0]
 8004a90:	f002 02fe 	and.w	r2, r2, #254	@ 0xfe
 8004a94:	611a      	str	r2, [r3, #16]
 8004a96:	e01b      	b.n	8004ad0 <I2C_MasterRequestWrite+0xdc>
  }
  else
  {
    /* Send header of slave address */
    hi2c->Instance->DR = I2C_10BIT_HEADER_WRITE(DevAddress);
 8004a98:	897b      	ldrh	r3, [r7, #10]
 8004a9a:	11db      	asrs	r3, r3, #7
 8004a9c:	b2db      	uxtb	r3, r3
 8004a9e:	f003 0306 	and.w	r3, r3, #6
 8004aa2:	b2db      	uxtb	r3, r3
 8004aa4:	f063 030f 	orn	r3, r3, #15
 8004aa8:	b2da      	uxtb	r2, r3
 8004aaa:	68fb      	ldr	r3, [r7, #12]
 8004aac:	681b      	ldr	r3, [r3, #0]
 8004aae:	611a      	str	r2, [r3, #16]

    /* Wait until ADD10 flag is set */
    if (I2C_WaitOnMasterAddressFlagUntilTimeout(hi2c, I2C_FLAG_ADD10, Timeout, Tickstart) != HAL_OK)
 8004ab0:	683b      	ldr	r3, [r7, #0]
 8004ab2:	687a      	ldr	r2, [r7, #4]
 8004ab4:	490e      	ldr	r1, [pc, #56]	@ (8004af0 <I2C_MasterRequestWrite+0xfc>)
 8004ab6:	68f8      	ldr	r0, [r7, #12]
 8004ab8:	f000 f966 	bl	8004d88 <I2C_WaitOnMasterAddressFlagUntilTimeout>
 8004abc:	4603      	mov	r3, r0
 8004abe:	2b00      	cmp	r3, #0
 8004ac0:	d001      	beq.n	8004ac6 <I2C_MasterRequestWrite+0xd2>
    {
      return HAL_ERROR;
 8004ac2:	2301      	movs	r3, #1
 8004ac4:	e010      	b.n	8004ae8 <I2C_MasterRequestWrite+0xf4>
    }

    /* Send slave address */
    hi2c->Instance->DR = I2C_10BIT_ADDRESS(DevAddress);
 8004ac6:	897b      	ldrh	r3, [r7, #10]
 8004ac8:	b2da      	uxtb	r2, r3
 8004aca:	68fb      	ldr	r3, [r7, #12]
 8004acc:	681b      	ldr	r3, [r3, #0]
 8004ace:	611a      	str	r2, [r3, #16]
  }

  /* Wait until ADDR flag is set */
  if (I2C_WaitOnMasterAddressFlagUntilTimeout(hi2c, I2C_FLAG_ADDR, Timeout, Tickstart) != HAL_OK)
 8004ad0:	683b      	ldr	r3, [r7, #0]
 8004ad2:	687a      	ldr	r2, [r7, #4]
 8004ad4:	4907      	ldr	r1, [pc, #28]	@ (8004af4 <I2C_MasterRequestWrite+0x100>)
 8004ad6:	68f8      	ldr	r0, [r7, #12]
 8004ad8:	f000 f956 	bl	8004d88 <I2C_WaitOnMasterAddressFlagUntilTimeout>
 8004adc:	4603      	mov	r3, r0
 8004ade:	2b00      	cmp	r3, #0
 8004ae0:	d001      	beq.n	8004ae6 <I2C_MasterRequestWrite+0xf2>
  {
    return HAL_ERROR;
 8004ae2:	2301      	movs	r3, #1
 8004ae4:	e000      	b.n	8004ae8 <I2C_MasterRequestWrite+0xf4>
  }

  return HAL_OK;
 8004ae6:	2300      	movs	r3, #0
}
 8004ae8:	4618      	mov	r0, r3
 8004aea:	3718      	adds	r7, #24
 8004aec:	46bd      	mov	sp, r7
 8004aee:	bd80      	pop	{r7, pc}
 8004af0:	00010008 	.word	0x00010008
 8004af4:	00010002 	.word	0x00010002

08004af8 <I2C_MasterRequestRead>:
  * @param  Timeout Timeout duration
  * @param  Tickstart Tick start value
  * @retval HAL status
  */
static HAL_StatusTypeDef I2C_MasterRequestRead(I2C_HandleTypeDef *hi2c, uint16_t DevAddress, uint32_t Timeout, uint32_t Tickstart)
{
 8004af8:	b580      	push	{r7, lr}
 8004afa:	b088      	sub	sp, #32
 8004afc:	af02      	add	r7, sp, #8
 8004afe:	60f8      	str	r0, [r7, #12]
 8004b00:	607a      	str	r2, [r7, #4]
 8004b02:	603b      	str	r3, [r7, #0]
 8004b04:	460b      	mov	r3, r1
 8004b06:	817b      	strh	r3, [r7, #10]
  /* Declaration of temporary variable to prevent undefined behavior of volatile usage */
  uint32_t CurrentXferOptions = hi2c->XferOptions;
 8004b08:	68fb      	ldr	r3, [r7, #12]
 8004b0a:	6adb      	ldr	r3, [r3, #44]	@ 0x2c
 8004b0c:	617b      	str	r3, [r7, #20]

  /* Enable Acknowledge */
  SET_BIT(hi2c->Instance->CR1, I2C_CR1_ACK);
 8004b0e:	68fb      	ldr	r3, [r7, #12]
 8004b10:	681b      	ldr	r3, [r3, #0]
 8004b12:	681a      	ldr	r2, [r3, #0]
 8004b14:	68fb      	ldr	r3, [r7, #12]
 8004b16:	681b      	ldr	r3, [r3, #0]
 8004b18:	f442 6280 	orr.w	r2, r2, #1024	@ 0x400
 8004b1c:	601a      	str	r2, [r3, #0]

  /* Generate Start condition if first transfer */
  if ((CurrentXferOptions == I2C_FIRST_AND_LAST_FRAME) || (CurrentXferOptions == I2C_FIRST_FRAME)  || (CurrentXferOptions == I2C_NO_OPTION_FRAME))
 8004b1e:	697b      	ldr	r3, [r7, #20]
 8004b20:	2b08      	cmp	r3, #8
 8004b22:	d006      	beq.n	8004b32 <I2C_MasterRequestRead+0x3a>
 8004b24:	697b      	ldr	r3, [r7, #20]
 8004b26:	2b01      	cmp	r3, #1
 8004b28:	d003      	beq.n	8004b32 <I2C_MasterRequestRead+0x3a>
 8004b2a:	697b      	ldr	r3, [r7, #20]
 8004b2c:	f513 3f80 	cmn.w	r3, #65536	@ 0x10000
 8004b30:	d108      	bne.n	8004b44 <I2C_MasterRequestRead+0x4c>
  {
    /* Generate Start */
    SET_BIT(hi2c->Instance->CR1, I2C_CR1_START);
 8004b32:	68fb      	ldr	r3, [r7, #12]
 8004b34:	681b      	ldr	r3, [r3, #0]
 8004b36:	681a      	ldr	r2, [r3, #0]
 8004b38:	68fb      	ldr	r3, [r7, #12]
 8004b3a:	681b      	ldr	r3, [r3, #0]
 8004b3c:	f442 7280 	orr.w	r2, r2, #256	@ 0x100
 8004b40:	601a      	str	r2, [r3, #0]
 8004b42:	e00b      	b.n	8004b5c <I2C_MasterRequestRead+0x64>
  }
  else if (hi2c->PreviousState == I2C_STATE_MASTER_BUSY_TX)
 8004b44:	68fb      	ldr	r3, [r7, #12]
 8004b46:	6b1b      	ldr	r3, [r3, #48]	@ 0x30
 8004b48:	2b11      	cmp	r3, #17
 8004b4a:	d107      	bne.n	8004b5c <I2C_MasterRequestRead+0x64>
  {
    /* Generate ReStart */
    SET_BIT(hi2c->Instance->CR1, I2C_CR1_START);
 8004b4c:	68fb      	ldr	r3, [r7, #12]
 8004b4e:	681b      	ldr	r3, [r3, #0]
 8004b50:	681a      	ldr	r2, [r3, #0]
 8004b52:	68fb      	ldr	r3, [r7, #12]
 8004b54:	681b      	ldr	r3, [r3, #0]
 8004b56:	f442 7280 	orr.w	r2, r2, #256	@ 0x100
 8004b5a:	601a      	str	r2, [r3, #0]
  {
    /* Do nothing */
  }

  /* Wait until SB flag is set */
  if (I2C_WaitOnFlagUntilTimeout(hi2c, I2C_FLAG_SB, RESET, Timeout, Tickstart) != HAL_OK)
 8004b5c:	683b      	ldr	r3, [r7, #0]
 8004b5e:	9300      	str	r3, [sp, #0]
 8004b60:	687b      	ldr	r3, [r7, #4]
 8004b62:	2200      	movs	r2, #0
 8004b64:	f04f 1101 	mov.w	r1, #65537	@ 0x10001
 8004b68:	68f8      	ldr	r0, [r7, #12]
 8004b6a:	f000 f893 	bl	8004c94 <I2C_WaitOnFlagUntilTimeout>
 8004b6e:	4603      	mov	r3, r0
 8004b70:	2b00      	cmp	r3, #0
 8004b72:	d00d      	beq.n	8004b90 <I2C_MasterRequestRead+0x98>
  {
    if (READ_BIT(hi2c->Instance->CR1, I2C_CR1_START) == I2C_CR1_START)
 8004b74:	68fb      	ldr	r3, [r7, #12]
 8004b76:	681b      	ldr	r3, [r3, #0]
 8004b78:	681b      	ldr	r3, [r3, #0]
 8004b7a:	f403 7380 	and.w	r3, r3, #256	@ 0x100
 8004b7e:	f5b3 7f80 	cmp.w	r3, #256	@ 0x100
 8004b82:	d103      	bne.n	8004b8c <I2C_MasterRequestRead+0x94>
    {
      hi2c->ErrorCode = HAL_I2C_WRONG_START;
 8004b84:	68fb      	ldr	r3, [r7, #12]
 8004b86:	f44f 7200 	mov.w	r2, #512	@ 0x200
 8004b8a:	641a      	str	r2, [r3, #64]	@ 0x40
    }
    return HAL_TIMEOUT;
 8004b8c:	2303      	movs	r3, #3
 8004b8e:	e079      	b.n	8004c84 <I2C_MasterRequestRead+0x18c>
  }

  if (hi2c->Init.AddressingMode == I2C_ADDRESSINGMODE_7BIT)
 8004b90:	68fb      	ldr	r3, [r7, #12]
 8004b92:	691b      	ldr	r3, [r3, #16]
 8004b94:	f5b3 4f80 	cmp.w	r3, #16384	@ 0x4000
 8004b98:	d108      	bne.n	8004bac <I2C_MasterRequestRead+0xb4>
  {
    /* Send slave address */
    hi2c->Instance->DR = I2C_7BIT_ADD_READ(DevAddress);
 8004b9a:	897b      	ldrh	r3, [r7, #10]
 8004b9c:	b2db      	uxtb	r3, r3
 8004b9e:	f043 0301 	orr.w	r3, r3, #1
 8004ba2:	b2da      	uxtb	r2, r3
 8004ba4:	68fb      	ldr	r3, [r7, #12]
 8004ba6:	681b      	ldr	r3, [r3, #0]
 8004ba8:	611a      	str	r2, [r3, #16]
 8004baa:	e05f      	b.n	8004c6c <I2C_MasterRequestRead+0x174>
  }
  else
  {
    /* Send header of slave address */
    hi2c->Instance->DR = I2C_10BIT_HEADER_WRITE(DevAddress);
 8004bac:	897b      	ldrh	r3, [r7, #10]
 8004bae:	11db      	asrs	r3, r3, #7
 8004bb0:	b2db      	uxtb	r3, r3
 8004bb2:	f003 0306 	and.w	r3, r3, #6
 8004bb6:	b2db      	uxtb	r3, r3
 8004bb8:	f063 030f 	orn	r3, r3, #15
 8004bbc:	b2da      	uxtb	r2, r3
 8004bbe:	68fb      	ldr	r3, [r7, #12]
 8004bc0:	681b      	ldr	r3, [r3, #0]
 8004bc2:	611a      	str	r2, [r3, #16]

    /* Wait until ADD10 flag is set */
    if (I2C_WaitOnMasterAddressFlagUntilTimeout(hi2c, I2C_FLAG_ADD10, Timeout, Tickstart) != HAL_OK)
 8004bc4:	683b      	ldr	r3, [r7, #0]
 8004bc6:	687a      	ldr	r2, [r7, #4]
 8004bc8:	4930      	ldr	r1, [pc, #192]	@ (8004c8c <I2C_MasterRequestRead+0x194>)
 8004bca:	68f8      	ldr	r0, [r7, #12]
 8004bcc:	f000 f8dc 	bl	8004d88 <I2C_WaitOnMasterAddressFlagUntilTimeout>
 8004bd0:	4603      	mov	r3, r0
 8004bd2:	2b00      	cmp	r3, #0
 8004bd4:	d001      	beq.n	8004bda <I2C_MasterRequestRead+0xe2>
    {
      return HAL_ERROR;
 8004bd6:	2301      	movs	r3, #1
 8004bd8:	e054      	b.n	8004c84 <I2C_MasterRequestRead+0x18c>
    }

    /* Send slave address */
    hi2c->Instance->DR = I2C_10BIT_ADDRESS(DevAddress);
 8004bda:	897b      	ldrh	r3, [r7, #10]
 8004bdc:	b2da      	uxtb	r2, r3
 8004bde:	68fb      	ldr	r3, [r7, #12]
 8004be0:	681b      	ldr	r3, [r3, #0]
 8004be2:	611a      	str	r2, [r3, #16]

    /* Wait until ADDR flag is set */
    if (I2C_WaitOnMasterAddressFlagUntilTimeout(hi2c, I2C_FLAG_ADDR, Timeout, Tickstart) != HAL_OK)
 8004be4:	683b      	ldr	r3, [r7, #0]
 8004be6:	687a      	ldr	r2, [r7, #4]
 8004be8:	4929      	ldr	r1, [pc, #164]	@ (8004c90 <I2C_MasterRequestRead+0x198>)
 8004bea:	68f8      	ldr	r0, [r7, #12]
 8004bec:	f000 f8cc 	bl	8004d88 <I2C_WaitOnMasterAddressFlagUntilTimeout>
 8004bf0:	4603      	mov	r3, r0
 8004bf2:	2b00      	cmp	r3, #0
 8004bf4:	d001      	beq.n	8004bfa <I2C_MasterRequestRead+0x102>
    {
      return HAL_ERROR;
 8004bf6:	2301      	movs	r3, #1
 8004bf8:	e044      	b.n	8004c84 <I2C_MasterRequestRead+0x18c>
    }

    /* Clear ADDR flag */
    __HAL_I2C_CLEAR_ADDRFLAG(hi2c);
 8004bfa:	2300      	movs	r3, #0
 8004bfc:	613b      	str	r3, [r7, #16]
 8004bfe:	68fb      	ldr	r3, [r7, #12]
 8004c00:	681b      	ldr	r3, [r3, #0]
 8004c02:	695b      	ldr	r3, [r3, #20]
 8004c04:	613b      	str	r3, [r7, #16]
 8004c06:	68fb      	ldr	r3, [r7, #12]
 8004c08:	681b      	ldr	r3, [r3, #0]
 8004c0a:	699b      	ldr	r3, [r3, #24]
 8004c0c:	613b      	str	r3, [r7, #16]
 8004c0e:	693b      	ldr	r3, [r7, #16]

    /* Generate Restart */
    SET_BIT(hi2c->Instance->CR1, I2C_CR1_START);
 8004c10:	68fb      	ldr	r3, [r7, #12]
 8004c12:	681b      	ldr	r3, [r3, #0]
 8004c14:	681a      	ldr	r2, [r3, #0]
 8004c16:	68fb      	ldr	r3, [r7, #12]
 8004c18:	681b      	ldr	r3, [r3, #0]
 8004c1a:	f442 7280 	orr.w	r2, r2, #256	@ 0x100
 8004c1e:	601a      	str	r2, [r3, #0]

    /* Wait until SB flag is set */
    if (I2C_WaitOnFlagUntilTimeout(hi2c, I2C_FLAG_SB, RESET, Timeout, Tickstart) != HAL_OK)
 8004c20:	683b      	ldr	r3, [r7, #0]
 8004c22:	9300      	str	r3, [sp, #0]
 8004c24:	687b      	ldr	r3, [r7, #4]
 8004c26:	2200      	movs	r2, #0
 8004c28:	f04f 1101 	mov.w	r1, #65537	@ 0x10001
 8004c2c:	68f8      	ldr	r0, [r7, #12]
 8004c2e:	f000 f831 	bl	8004c94 <I2C_WaitOnFlagUntilTimeout>
 8004c32:	4603      	mov	r3, r0
 8004c34:	2b00      	cmp	r3, #0
 8004c36:	d00d      	beq.n	8004c54 <I2C_MasterRequestRead+0x15c>
    {
      if (READ_BIT(hi2c->Instance->CR1, I2C_CR1_START) == I2C_CR1_START)
 8004c38:	68fb      	ldr	r3, [r7, #12]
 8004c3a:	681b      	ldr	r3, [r3, #0]
 8004c3c:	681b      	ldr	r3, [r3, #0]
 8004c3e:	f403 7380 	and.w	r3, r3, #256	@ 0x100
 8004c42:	f5b3 7f80 	cmp.w	r3, #256	@ 0x100
 8004c46:	d103      	bne.n	8004c50 <I2C_MasterRequestRead+0x158>
      {
        hi2c->ErrorCode = HAL_I2C_WRONG_START;
 8004c48:	68fb      	ldr	r3, [r7, #12]
 8004c4a:	f44f 7200 	mov.w	r2, #512	@ 0x200
 8004c4e:	641a      	str	r2, [r3, #64]	@ 0x40
      }
      return HAL_TIMEOUT;
 8004c50:	2303      	movs	r3, #3
 8004c52:	e017      	b.n	8004c84 <I2C_MasterRequestRead+0x18c>
    }

    /* Send header of slave address */
    hi2c->Instance->DR = I2C_10BIT_HEADER_READ(DevAddress);
 8004c54:	897b      	ldrh	r3, [r7, #10]
 8004c56:	11db      	asrs	r3, r3, #7
 8004c58:	b2db      	uxtb	r3, r3
 8004c5a:	f003 0306 	and.w	r3, r3, #6
 8004c5e:	b2db      	uxtb	r3, r3
 8004c60:	f063 030e 	orn	r3, r3, #14
 8004c64:	b2da      	uxtb	r2, r3
 8004c66:	68fb      	ldr	r3, [r7, #12]
 8004c68:	681b      	ldr	r3, [r3, #0]
 8004c6a:	611a      	str	r2, [r3, #16]
  }

  /* Wait until ADDR flag is set */
  if (I2C_WaitOnMasterAddressFlagUntilTimeout(hi2c, I2C_FLAG_ADDR, Timeout, Tickstart) != HAL_OK)
 8004c6c:	683b      	ldr	r3, [r7, #0]
 8004c6e:	687a      	ldr	r2, [r7, #4]
 8004c70:	4907      	ldr	r1, [pc, #28]	@ (8004c90 <I2C_MasterRequestRead+0x198>)
 8004c72:	68f8      	ldr	r0, [r7, #12]
 8004c74:	f000 f888 	bl	8004d88 <I2C_WaitOnMasterAddressFlagUntilTimeout>
 8004c78:	4603      	mov	r3, r0
 8004c7a:	2b00      	cmp	r3, #0
 8004c7c:	d001      	beq.n	8004c82 <I2C_MasterRequestRead+0x18a>
  {
    return HAL_ERROR;
 8004c7e:	2301      	movs	r3, #1
 8004c80:	e000      	b.n	8004c84 <I2C_MasterRequestRead+0x18c>
  }

  return HAL_OK;
 8004c82:	2300      	movs	r3, #0
}
 8004c84:	4618      	mov	r0, r3
 8004c86:	3718      	adds	r7, #24
 8004c88:	46bd      	mov	sp, r7
 8004c8a:	bd80      	pop	{r7, pc}
 8004c8c:	00010008 	.word	0x00010008
 8004c90:	00010002 	.word	0x00010002

08004c94 <I2C_WaitOnFlagUntilTimeout>:
  * @param  Timeout Timeout duration
  * @param  Tickstart Tick start value
  * @retval HAL status
  */
static HAL_StatusTypeDef I2C_WaitOnFlagUntilTimeout(I2C_HandleTypeDef *hi2c, uint32_t Flag, FlagStatus Status, uint32_t Timeout, uint32_t Tickstart)
{
 8004c94:	b580      	push	{r7, lr}
 8004c96:	b084      	sub	sp, #16
 8004c98:	af00      	add	r7, sp, #0
 8004c9a:	60f8      	str	r0, [r7, #12]
 8004c9c:	60b9      	str	r1, [r7, #8]
 8004c9e:	603b      	str	r3, [r7, #0]
 8004ca0:	4613      	mov	r3, r2
 8004ca2:	71fb      	strb	r3, [r7, #7]
  /* Wait until flag is set */
  while (__HAL_I2C_GET_FLAG(hi2c, Flag) == Status)
 8004ca4:	e048      	b.n	8004d38 <I2C_WaitOnFlagUntilTimeout+0xa4>
  {
    /* Check for the Timeout */
    if (Timeout != HAL_MAX_DELAY)
 8004ca6:	683b      	ldr	r3, [r7, #0]
 8004ca8:	f1b3 3fff 	cmp.w	r3, #4294967295
 8004cac:	d044      	beq.n	8004d38 <I2C_WaitOnFlagUntilTimeout+0xa4>
    {
      if (((HAL_GetTick() - Tickstart) > Timeout) || (Timeout == 0U))
 8004cae:	f7fd fec5 	bl	8002a3c <HAL_GetTick>
 8004cb2:	4602      	mov	r2, r0
 8004cb4:	69bb      	ldr	r3, [r7, #24]
 8004cb6:	1ad3      	subs	r3, r2, r3
 8004cb8:	683a      	ldr	r2, [r7, #0]
 8004cba:	429a      	cmp	r2, r3
 8004cbc:	d302      	bcc.n	8004cc4 <I2C_WaitOnFlagUntilTimeout+0x30>
 8004cbe:	683b      	ldr	r3, [r7, #0]
 8004cc0:	2b00      	cmp	r3, #0
 8004cc2:	d139      	bne.n	8004d38 <I2C_WaitOnFlagUntilTimeout+0xa4>
      {
        if ((__HAL_I2C_GET_FLAG(hi2c, Flag) == Status))
 8004cc4:	68bb      	ldr	r3, [r7, #8]
 8004cc6:	0c1b      	lsrs	r3, r3, #16
 8004cc8:	b2db      	uxtb	r3, r3
 8004cca:	2b01      	cmp	r3, #1
 8004ccc:	d10d      	bne.n	8004cea <I2C_WaitOnFlagUntilTimeout+0x56>
 8004cce:	68fb      	ldr	r3, [r7, #12]
 8004cd0:	681b      	ldr	r3, [r3, #0]
 8004cd2:	695b      	ldr	r3, [r3, #20]
 8004cd4:	43da      	mvns	r2, r3
 8004cd6:	68bb      	ldr	r3, [r7, #8]
 8004cd8:	4013      	ands	r3, r2
 8004cda:	b29b      	uxth	r3, r3
 8004cdc:	2b00      	cmp	r3, #0
 8004cde:	bf0c      	ite	eq
 8004ce0:	2301      	moveq	r3, #1
 8004ce2:	2300      	movne	r3, #0
 8004ce4:	b2db      	uxtb	r3, r3
 8004ce6:	461a      	mov	r2, r3
 8004ce8:	e00c      	b.n	8004d04 <I2C_WaitOnFlagUntilTimeout+0x70>
 8004cea:	68fb      	ldr	r3, [r7, #12]
 8004cec:	681b      	ldr	r3, [r3, #0]
 8004cee:	699b      	ldr	r3, [r3, #24]
 8004cf0:	43da      	mvns	r2, r3
 8004cf2:	68bb      	ldr	r3, [r7, #8]
 8004cf4:	4013      	ands	r3, r2
 8004cf6:	b29b      	uxth	r3, r3
 8004cf8:	2b00      	cmp	r3, #0
 8004cfa:	bf0c      	ite	eq
 8004cfc:	2301      	moveq	r3, #1
 8004cfe:	2300      	movne	r3, #0
 8004d00:	b2db      	uxtb	r3, r3
 8004d02:	461a      	mov	r2, r3
 8004d04:	79fb      	ldrb	r3, [r7, #7]
 8004d06:	429a      	cmp	r2, r3
 8004d08:	d116      	bne.n	8004d38 <I2C_WaitOnFlagUntilTimeout+0xa4>
        {
          hi2c->PreviousState     = I2C_STATE_NONE;
 8004d0a:	68fb      	ldr	r3, [r7, #12]
 8004d0c:	2200      	movs	r2, #0
 8004d0e:	631a      	str	r2, [r3, #48]	@ 0x30
          hi2c->State             = HAL_I2C_STATE_READY;
 8004d10:	68fb      	ldr	r3, [r7, #12]
 8004d12:	2220      	movs	r2, #32
 8004d14:	f883 203d 	strb.w	r2, [r3, #61]	@ 0x3d
          hi2c->Mode              = HAL_I2C_MODE_NONE;
 8004d18:	68fb      	ldr	r3, [r7, #12]
 8004d1a:	2200      	movs	r2, #0
 8004d1c:	f883 203e 	strb.w	r2, [r3, #62]	@ 0x3e
          hi2c->ErrorCode         |= HAL_I2C_ERROR_TIMEOUT;
 8004d20:	68fb      	ldr	r3, [r7, #12]
 8004d22:	6c1b      	ldr	r3, [r3, #64]	@ 0x40
 8004d24:	f043 0220 	orr.w	r2, r3, #32
 8004d28:	68fb      	ldr	r3, [r7, #12]
 8004d2a:	641a      	str	r2, [r3, #64]	@ 0x40

          /* Process Unlocked */
          __HAL_UNLOCK(hi2c);
 8004d2c:	68fb      	ldr	r3, [r7, #12]
 8004d2e:	2200      	movs	r2, #0
 8004d30:	f883 203c 	strb.w	r2, [r3, #60]	@ 0x3c

          return HAL_ERROR;
 8004d34:	2301      	movs	r3, #1
 8004d36:	e023      	b.n	8004d80 <I2C_WaitOnFlagUntilTimeout+0xec>
  while (__HAL_I2C_GET_FLAG(hi2c, Flag) == Status)
 8004d38:	68bb      	ldr	r3, [r7, #8]
 8004d3a:	0c1b      	lsrs	r3, r3, #16
 8004d3c:	b2db      	uxtb	r3, r3
 8004d3e:	2b01      	cmp	r3, #1
 8004d40:	d10d      	bne.n	8004d5e <I2C_WaitOnFlagUntilTimeout+0xca>
 8004d42:	68fb      	ldr	r3, [r7, #12]
 8004d44:	681b      	ldr	r3, [r3, #0]
 8004d46:	695b      	ldr	r3, [r3, #20]
 8004d48:	43da      	mvns	r2, r3
 8004d4a:	68bb      	ldr	r3, [r7, #8]
 8004d4c:	4013      	ands	r3, r2
 8004d4e:	b29b      	uxth	r3, r3
 8004d50:	2b00      	cmp	r3, #0
 8004d52:	bf0c      	ite	eq
 8004d54:	2301      	moveq	r3, #1
 8004d56:	2300      	movne	r3, #0
 8004d58:	b2db      	uxtb	r3, r3
 8004d5a:	461a      	mov	r2, r3
 8004d5c:	e00c      	b.n	8004d78 <I2C_WaitOnFlagUntilTimeout+0xe4>
 8004d5e:	68fb      	ldr	r3, [r7, #12]
 8004d60:	681b      	ldr	r3, [r3, #0]
 8004d62:	699b      	ldr	r3, [r3, #24]
 8004d64:	43da      	mvns	r2, r3
 8004d66:	68bb      	ldr	r3, [r7, #8]
 8004d68:	4013      	ands	r3, r2
 8004d6a:	b29b      	uxth	r3, r3
 8004d6c:	2b00      	cmp	r3, #0
 8004d6e:	bf0c      	ite	eq
 8004d70:	2301      	moveq	r3, #1
 8004d72:	2300      	movne	r3, #0
 8004d74:	b2db      	uxtb	r3, r3
 8004d76:	461a      	mov	r2, r3
 8004d78:	79fb      	ldrb	r3, [r7, #7]
 8004d7a:	429a      	cmp	r2, r3
 8004d7c:	d093      	beq.n	8004ca6 <I2C_WaitOnFlagUntilTimeout+0x12>
        }
      }
    }
  }
  return HAL_OK;
 8004d7e:	2300      	movs	r3, #0
}
 8004d80:	4618      	mov	r0, r3
 8004d82:	3710      	adds	r7, #16
 8004d84:	46bd      	mov	sp, r7
 8004d86:	bd80      	pop	{r7, pc}

08004d88 <I2C_WaitOnMasterAddressFlagUntilTimeout>:
  * @param  Timeout Timeout duration
  * @param  Tickstart Tick start value
  * @retval HAL status
  */
static HAL_StatusTypeDef I2C_WaitOnMasterAddressFlagUntilTimeout(I2C_HandleTypeDef *hi2c, uint32_t Flag, uint32_t Timeout, uint32_t Tickstart)
{
 8004d88:	b580      	push	{r7, lr}
 8004d8a:	b084      	sub	sp, #16
 8004d8c:	af00      	add	r7, sp, #0
 8004d8e:	60f8      	str	r0, [r7, #12]
 8004d90:	60b9      	str	r1, [r7, #8]
 8004d92:	607a      	str	r2, [r7, #4]
 8004d94:	603b      	str	r3, [r7, #0]
  while (__HAL_I2C_GET_FLAG(hi2c, Flag) == RESET)
 8004d96:	e071      	b.n	8004e7c <I2C_WaitOnMasterAddressFlagUntilTimeout+0xf4>
  {
    if (__HAL_I2C_GET_FLAG(hi2c, I2C_FLAG_AF) == SET)
 8004d98:	68fb      	ldr	r3, [r7, #12]
 8004d9a:	681b      	ldr	r3, [r3, #0]
 8004d9c:	695b      	ldr	r3, [r3, #20]
 8004d9e:	f403 6380 	and.w	r3, r3, #1024	@ 0x400
 8004da2:	f5b3 6f80 	cmp.w	r3, #1024	@ 0x400
 8004da6:	d123      	bne.n	8004df0 <I2C_WaitOnMasterAddressFlagUntilTimeout+0x68>
    {
      /* Generate Stop */
      SET_BIT(hi2c->Instance->CR1, I2C_CR1_STOP);
 8004da8:	68fb      	ldr	r3, [r7, #12]
 8004daa:	681b      	ldr	r3, [r3, #0]
 8004dac:	681a      	ldr	r2, [r3, #0]
 8004dae:	68fb      	ldr	r3, [r7, #12]
 8004db0:	681b      	ldr	r3, [r3, #0]
 8004db2:	f442 7200 	orr.w	r2, r2, #512	@ 0x200
 8004db6:	601a      	str	r2, [r3, #0]

      /* Clear AF Flag */
      __HAL_I2C_CLEAR_FLAG(hi2c, I2C_FLAG_AF);
 8004db8:	68fb      	ldr	r3, [r7, #12]
 8004dba:	681b      	ldr	r3, [r3, #0]
 8004dbc:	f46f 6280 	mvn.w	r2, #1024	@ 0x400
 8004dc0:	615a      	str	r2, [r3, #20]

      hi2c->PreviousState       = I2C_STATE_NONE;
 8004dc2:	68fb      	ldr	r3, [r7, #12]
 8004dc4:	2200      	movs	r2, #0
 8004dc6:	631a      	str	r2, [r3, #48]	@ 0x30
      hi2c->State               = HAL_I2C_STATE_READY;
 8004dc8:	68fb      	ldr	r3, [r7, #12]
 8004dca:	2220      	movs	r2, #32
 8004dcc:	f883 203d 	strb.w	r2, [r3, #61]	@ 0x3d
      hi2c->Mode                = HAL_I2C_MODE_NONE;
 8004dd0:	68fb      	ldr	r3, [r7, #12]
 8004dd2:	2200      	movs	r2, #0
 8004dd4:	f883 203e 	strb.w	r2, [r3, #62]	@ 0x3e
      hi2c->ErrorCode           |= HAL_I2C_ERROR_AF;
 8004dd8:	68fb      	ldr	r3, [r7, #12]
 8004dda:	6c1b      	ldr	r3, [r3, #64]	@ 0x40
 8004ddc:	f043 0204 	orr.w	r2, r3, #4
 8004de0:	68fb      	ldr	r3, [r7, #12]
 8004de2:	641a      	str	r2, [r3, #64]	@ 0x40

      /* Process Unlocked */
      __HAL_UNLOCK(hi2c);
 8004de4:	68fb      	ldr	r3, [r7, #12]
 8004de6:	2200      	movs	r2, #0
 8004de8:	f883 203c 	strb.w	r2, [r3, #60]	@ 0x3c

      return HAL_ERROR;
 8004dec:	2301      	movs	r3, #1
 8004dee:	e067      	b.n	8004ec0 <I2C_WaitOnMasterAddressFlagUntilTimeout+0x138>
    }

    /* Check for the Timeout */
    if (Timeout != HAL_MAX_DELAY)
 8004df0:	687b      	ldr	r3, [r7, #4]
 8004df2:	f1b3 3fff 	cmp.w	r3, #4294967295
 8004df6:	d041      	beq.n	8004e7c <I2C_WaitOnMasterAddressFlagUntilTimeout+0xf4>
    {
      if (((HAL_GetTick() - Tickstart) > Timeout) || (Timeout == 0U))
 8004df8:	f7fd fe20 	bl	8002a3c <HAL_GetTick>
 8004dfc:	4602      	mov	r2, r0
 8004dfe:	683b      	ldr	r3, [r7, #0]
 8004e00:	1ad3      	subs	r3, r2, r3
 8004e02:	687a      	ldr	r2, [r7, #4]
 8004e04:	429a      	cmp	r2, r3
 8004e06:	d302      	bcc.n	8004e0e <I2C_WaitOnMasterAddressFlagUntilTimeout+0x86>
 8004e08:	687b      	ldr	r3, [r7, #4]
 8004e0a:	2b00      	cmp	r3, #0
 8004e0c:	d136      	bne.n	8004e7c <I2C_WaitOnMasterAddressFlagUntilTimeout+0xf4>
      {
        if ((__HAL_I2C_GET_FLAG(hi2c, Flag) == RESET))
 8004e0e:	68bb      	ldr	r3, [r7, #8]
 8004e10:	0c1b      	lsrs	r3, r3, #16
 8004e12:	b2db      	uxtb	r3, r3
 8004e14:	2b01      	cmp	r3, #1
 8004e16:	d10c      	bne.n	8004e32 <I2C_WaitOnMasterAddressFlagUntilTimeout+0xaa>
 8004e18:	68fb      	ldr	r3, [r7, #12]
 8004e1a:	681b      	ldr	r3, [r3, #0]
 8004e1c:	695b      	ldr	r3, [r3, #20]
 8004e1e:	43da      	mvns	r2, r3
 8004e20:	68bb      	ldr	r3, [r7, #8]
 8004e22:	4013      	ands	r3, r2
 8004e24:	b29b      	uxth	r3, r3
 8004e26:	2b00      	cmp	r3, #0
 8004e28:	bf14      	ite	ne
 8004e2a:	2301      	movne	r3, #1
 8004e2c:	2300      	moveq	r3, #0
 8004e2e:	b2db      	uxtb	r3, r3
 8004e30:	e00b      	b.n	8004e4a <I2C_WaitOnMasterAddressFlagUntilTimeout+0xc2>
 8004e32:	68fb      	ldr	r3, [r7, #12]
 8004e34:	681b      	ldr	r3, [r3, #0]
 8004e36:	699b      	ldr	r3, [r3, #24]
 8004e38:	43da      	mvns	r2, r3
 8004e3a:	68bb      	ldr	r3, [r7, #8]
 8004e3c:	4013      	ands	r3, r2
 8004e3e:	b29b      	uxth	r3, r3
 8004e40:	2b00      	cmp	r3, #0
 8004e42:	bf14      	ite	ne
 8004e44:	2301      	movne	r3, #1
 8004e46:	2300      	moveq	r3, #0
 8004e48:	b2db      	uxtb	r3, r3
 8004e4a:	2b00      	cmp	r3, #0
 8004e4c:	d016      	beq.n	8004e7c <I2C_WaitOnMasterAddressFlagUntilTimeout+0xf4>
        {
          hi2c->PreviousState       = I2C_STATE_NONE;
 8004e4e:	68fb      	ldr	r3, [r7, #12]
 8004e50:	2200      	movs	r2, #0
 8004e52:	631a      	str	r2, [r3, #48]	@ 0x30
          hi2c->State               = HAL_I2C_STATE_READY;
 8004e54:	68fb      	ldr	r3, [r7, #12]
 8004e56:	2220      	movs	r2, #32
 8004e58:	f883 203d 	strb.w	r2, [r3, #61]	@ 0x3d
          hi2c->Mode                = HAL_I2C_MODE_NONE;
 8004e5c:	68fb      	ldr	r3, [r7, #12]
 8004e5e:	2200      	movs	r2, #0
 8004e60:	f883 203e 	strb.w	r2, [r3, #62]	@ 0x3e
          hi2c->ErrorCode           |= HAL_I2C_ERROR_TIMEOUT;
 8004e64:	68fb      	ldr	r3, [r7, #12]
 8004e66:	6c1b      	ldr	r3, [r3, #64]	@ 0x40
 8004e68:	f043 0220 	orr.w	r2, r3, #32
 8004e6c:	68fb      	ldr	r3, [r7, #12]
 8004e6e:	641a      	str	r2, [r3, #64]	@ 0x40

          /* Process Unlocked */
          __HAL_UNLOCK(hi2c);
 8004e70:	68fb      	ldr	r3, [r7, #12]
 8004e72:	2200      	movs	r2, #0
 8004e74:	f883 203c 	strb.w	r2, [r3, #60]	@ 0x3c

          return HAL_ERROR;
 8004e78:	2301      	movs	r3, #1
 8004e7a:	e021      	b.n	8004ec0 <I2C_WaitOnMasterAddressFlagUntilTimeout+0x138>
  while (__HAL_I2C_GET_FLAG(hi2c, Flag) == RESET)
 8004e7c:	68bb      	ldr	r3, [r7, #8]
 8004e7e:	0c1b      	lsrs	r3, r3, #16
 8004e80:	b2db      	uxtb	r3, r3
 8004e82:	2b01      	cmp	r3, #1
 8004e84:	d10c      	bne.n	8004ea0 <I2C_WaitOnMasterAddressFlagUntilTimeout+0x118>
 8004e86:	68fb      	ldr	r3, [r7, #12]
 8004e88:	681b      	ldr	r3, [r3, #0]
 8004e8a:	695b      	ldr	r3, [r3, #20]
 8004e8c:	43da      	mvns	r2, r3
 8004e8e:	68bb      	ldr	r3, [r7, #8]
 8004e90:	4013      	ands	r3, r2
 8004e92:	b29b      	uxth	r3, r3
 8004e94:	2b00      	cmp	r3, #0
 8004e96:	bf14      	ite	ne
 8004e98:	2301      	movne	r3, #1
 8004e9a:	2300      	moveq	r3, #0
 8004e9c:	b2db      	uxtb	r3, r3
 8004e9e:	e00b      	b.n	8004eb8 <I2C_WaitOnMasterAddressFlagUntilTimeout+0x130>
 8004ea0:	68fb      	ldr	r3, [r7, #12]
 8004ea2:	681b      	ldr	r3, [r3, #0]
 8004ea4:	699b      	ldr	r3, [r3, #24]
 8004ea6:	43da      	mvns	r2, r3
 8004ea8:	68bb      	ldr	r3, [r7, #8]
 8004eaa:	4013      	ands	r3, r2
 8004eac:	b29b      	uxth	r3, r3
 8004eae:	2b00      	cmp	r3, #0
 8004eb0:	bf14      	ite	ne
 8004eb2:	2301      	movne	r3, #1
 8004eb4:	2300      	moveq	r3, #0
 8004eb6:	b2db      	uxtb	r3, r3
 8004eb8:	2b00      	cmp	r3, #0
 8004eba:	f47f af6d 	bne.w	8004d98 <I2C_WaitOnMasterAddressFlagUntilTimeout+0x10>
        }
      }
    }
  }
  return HAL_OK;
 8004ebe:	2300      	movs	r3, #0
}
 8004ec0:	4618      	mov	r0, r3
 8004ec2:	3710      	adds	r7, #16
 8004ec4:	46bd      	mov	sp, r7
 8004ec6:	bd80      	pop	{r7, pc}

08004ec8 <I2C_WaitOnTXEFlagUntilTimeout>:
  * @param  Timeout Timeout duration
  * @param  Tickstart Tick start value
  * @retval HAL status
  */
static HAL_StatusTypeDef I2C_WaitOnTXEFlagUntilTimeout(I2C_HandleTypeDef *hi2c, uint32_t Timeout, uint32_t Tickstart)
{
 8004ec8:	b580      	push	{r7, lr}
 8004eca:	b084      	sub	sp, #16
 8004ecc:	af00      	add	r7, sp, #0
 8004ece:	60f8      	str	r0, [r7, #12]
 8004ed0:	60b9      	str	r1, [r7, #8]
 8004ed2:	607a      	str	r2, [r7, #4]
  while (__HAL_I2C_GET_FLAG(hi2c, I2C_FLAG_TXE) == RESET)
 8004ed4:	e034      	b.n	8004f40 <I2C_WaitOnTXEFlagUntilTimeout+0x78>
  {
    /* Check if a NACK is detected */
    if (I2C_IsAcknowledgeFailed(hi2c) != HAL_OK)
 8004ed6:	68f8      	ldr	r0, [r7, #12]
 8004ed8:	f000 f8e3 	bl	80050a2 <I2C_IsAcknowledgeFailed>
 8004edc:	4603      	mov	r3, r0
 8004ede:	2b00      	cmp	r3, #0
 8004ee0:	d001      	beq.n	8004ee6 <I2C_WaitOnTXEFlagUntilTimeout+0x1e>
    {
      return HAL_ERROR;
 8004ee2:	2301      	movs	r3, #1
 8004ee4:	e034      	b.n	8004f50 <I2C_WaitOnTXEFlagUntilTimeout+0x88>
    }

    /* Check for the Timeout */
    if (Timeout != HAL_MAX_DELAY)
 8004ee6:	68bb      	ldr	r3, [r7, #8]
 8004ee8:	f1b3 3fff 	cmp.w	r3, #4294967295
 8004eec:	d028      	beq.n	8004f40 <I2C_WaitOnTXEFlagUntilTimeout+0x78>
    {
      if (((HAL_GetTick() - Tickstart) > Timeout) || (Timeout == 0U))
 8004eee:	f7fd fda5 	bl	8002a3c <HAL_GetTick>
 8004ef2:	4602      	mov	r2, r0
 8004ef4:	687b      	ldr	r3, [r7, #4]
 8004ef6:	1ad3      	subs	r3, r2, r3
 8004ef8:	68ba      	ldr	r2, [r7, #8]
 8004efa:	429a      	cmp	r2, r3
 8004efc:	d302      	bcc.n	8004f04 <I2C_WaitOnTXEFlagUntilTimeout+0x3c>
 8004efe:	68bb      	ldr	r3, [r7, #8]
 8004f00:	2b00      	cmp	r3, #0
 8004f02:	d11d      	bne.n	8004f40 <I2C_WaitOnTXEFlagUntilTimeout+0x78>
      {
        if ((__HAL_I2C_GET_FLAG(hi2c, I2C_FLAG_TXE) == RESET))
 8004f04:	68fb      	ldr	r3, [r7, #12]
 8004f06:	681b      	ldr	r3, [r3, #0]
 8004f08:	695b      	ldr	r3, [r3, #20]
 8004f0a:	f003 0380 	and.w	r3, r3, #128	@ 0x80
 8004f0e:	2b80      	cmp	r3, #128	@ 0x80
 8004f10:	d016      	beq.n	8004f40 <I2C_WaitOnTXEFlagUntilTimeout+0x78>
        {
          hi2c->PreviousState       = I2C_STATE_NONE;
 8004f12:	68fb      	ldr	r3, [r7, #12]
 8004f14:	2200      	movs	r2, #0
 8004f16:	631a      	str	r2, [r3, #48]	@ 0x30
          hi2c->State               = HAL_I2C_STATE_READY;
 8004f18:	68fb      	ldr	r3, [r7, #12]
 8004f1a:	2220      	movs	r2, #32
 8004f1c:	f883 203d 	strb.w	r2, [r3, #61]	@ 0x3d
          hi2c->Mode                = HAL_I2C_MODE_NONE;
 8004f20:	68fb      	ldr	r3, [r7, #12]
 8004f22:	2200      	movs	r2, #0
 8004f24:	f883 203e 	strb.w	r2, [r3, #62]	@ 0x3e
          hi2c->ErrorCode           |= HAL_I2C_ERROR_TIMEOUT;
 8004f28:	68fb      	ldr	r3, [r7, #12]
 8004f2a:	6c1b      	ldr	r3, [r3, #64]	@ 0x40
 8004f2c:	f043 0220 	orr.w	r2, r3, #32
 8004f30:	68fb      	ldr	r3, [r7, #12]
 8004f32:	641a      	str	r2, [r3, #64]	@ 0x40

          /* Process Unlocked */
          __HAL_UNLOCK(hi2c);
 8004f34:	68fb      	ldr	r3, [r7, #12]
 8004f36:	2200      	movs	r2, #0
 8004f38:	f883 203c 	strb.w	r2, [r3, #60]	@ 0x3c

          return HAL_ERROR;
 8004f3c:	2301      	movs	r3, #1
 8004f3e:	e007      	b.n	8004f50 <I2C_WaitOnTXEFlagUntilTimeout+0x88>
  while (__HAL_I2C_GET_FLAG(hi2c, I2C_FLAG_TXE) == RESET)
 8004f40:	68fb      	ldr	r3, [r7, #12]
 8004f42:	681b      	ldr	r3, [r3, #0]
 8004f44:	695b      	ldr	r3, [r3, #20]
 8004f46:	f003 0380 	and.w	r3, r3, #128	@ 0x80
 8004f4a:	2b80      	cmp	r3, #128	@ 0x80
 8004f4c:	d1c3      	bne.n	8004ed6 <I2C_WaitOnTXEFlagUntilTimeout+0xe>
        }
      }
    }
  }
  return HAL_OK;
 8004f4e:	2300      	movs	r3, #0
}
 8004f50:	4618      	mov	r0, r3
 8004f52:	3710      	adds	r7, #16
 8004f54:	46bd      	mov	sp, r7
 8004f56:	bd80      	pop	{r7, pc}

08004f58 <I2C_WaitOnBTFFlagUntilTimeout>:
  * @param  Timeout Timeout duration
  * @param  Tickstart Tick start value
  * @retval HAL status
  */
static HAL_StatusTypeDef I2C_WaitOnBTFFlagUntilTimeout(I2C_HandleTypeDef *hi2c, uint32_t Timeout, uint32_t Tickstart)
{
 8004f58:	b580      	push	{r7, lr}
 8004f5a:	b084      	sub	sp, #16
 8004f5c:	af00      	add	r7, sp, #0
 8004f5e:	60f8      	str	r0, [r7, #12]
 8004f60:	60b9      	str	r1, [r7, #8]
 8004f62:	607a      	str	r2, [r7, #4]
  while (__HAL_I2C_GET_FLAG(hi2c, I2C_FLAG_BTF) == RESET)
 8004f64:	e034      	b.n	8004fd0 <I2C_WaitOnBTFFlagUntilTimeout+0x78>
  {
    /* Check if a NACK is detected */
    if (I2C_IsAcknowledgeFailed(hi2c) != HAL_OK)
 8004f66:	68f8      	ldr	r0, [r7, #12]
 8004f68:	f000 f89b 	bl	80050a2 <I2C_IsAcknowledgeFailed>
 8004f6c:	4603      	mov	r3, r0
 8004f6e:	2b00      	cmp	r3, #0
 8004f70:	d001      	beq.n	8004f76 <I2C_WaitOnBTFFlagUntilTimeout+0x1e>
    {
      return HAL_ERROR;
 8004f72:	2301      	movs	r3, #1
 8004f74:	e034      	b.n	8004fe0 <I2C_WaitOnBTFFlagUntilTimeout+0x88>
    }

    /* Check for the Timeout */
    if (Timeout != HAL_MAX_DELAY)
 8004f76:	68bb      	ldr	r3, [r7, #8]
 8004f78:	f1b3 3fff 	cmp.w	r3, #4294967295
 8004f7c:	d028      	beq.n	8004fd0 <I2C_WaitOnBTFFlagUntilTimeout+0x78>
    {
      if (((HAL_GetTick() - Tickstart) > Timeout) || (Timeout == 0U))
 8004f7e:	f7fd fd5d 	bl	8002a3c <HAL_GetTick>
 8004f82:	4602      	mov	r2, r0
 8004f84:	687b      	ldr	r3, [r7, #4]
 8004f86:	1ad3      	subs	r3, r2, r3
 8004f88:	68ba      	ldr	r2, [r7, #8]
 8004f8a:	429a      	cmp	r2, r3
 8004f8c:	d302      	bcc.n	8004f94 <I2C_WaitOnBTFFlagUntilTimeout+0x3c>
 8004f8e:	68bb      	ldr	r3, [r7, #8]
 8004f90:	2b00      	cmp	r3, #0
 8004f92:	d11d      	bne.n	8004fd0 <I2C_WaitOnBTFFlagUntilTimeout+0x78>
      {
        if ((__HAL_I2C_GET_FLAG(hi2c, I2C_FLAG_BTF) == RESET))
 8004f94:	68fb      	ldr	r3, [r7, #12]
 8004f96:	681b      	ldr	r3, [r3, #0]
 8004f98:	695b      	ldr	r3, [r3, #20]
 8004f9a:	f003 0304 	and.w	r3, r3, #4
 8004f9e:	2b04      	cmp	r3, #4
 8004fa0:	d016      	beq.n	8004fd0 <I2C_WaitOnBTFFlagUntilTimeout+0x78>
        {
          hi2c->PreviousState       = I2C_STATE_NONE;
 8004fa2:	68fb      	ldr	r3, [r7, #12]
 8004fa4:	2200      	movs	r2, #0
 8004fa6:	631a      	str	r2, [r3, #48]	@ 0x30
          hi2c->State               = HAL_I2C_STATE_READY;
 8004fa8:	68fb      	ldr	r3, [r7, #12]
 8004faa:	2220      	movs	r2, #32
 8004fac:	f883 203d 	strb.w	r2, [r3, #61]	@ 0x3d
          hi2c->Mode                = HAL_I2C_MODE_NONE;
 8004fb0:	68fb      	ldr	r3, [r7, #12]
 8004fb2:	2200      	movs	r2, #0
 8004fb4:	f883 203e 	strb.w	r2, [r3, #62]	@ 0x3e
          hi2c->ErrorCode           |= HAL_I2C_ERROR_TIMEOUT;
 8004fb8:	68fb      	ldr	r3, [r7, #12]
 8004fba:	6c1b      	ldr	r3, [r3, #64]	@ 0x40
 8004fbc:	f043 0220 	orr.w	r2, r3, #32
 8004fc0:	68fb      	ldr	r3, [r7, #12]
 8004fc2:	641a      	str	r2, [r3, #64]	@ 0x40

          /* Process Unlocked */
          __HAL_UNLOCK(hi2c);
 8004fc4:	68fb      	ldr	r3, [r7, #12]
 8004fc6:	2200      	movs	r2, #0
 8004fc8:	f883 203c 	strb.w	r2, [r3, #60]	@ 0x3c

          return HAL_ERROR;
 8004fcc:	2301      	movs	r3, #1
 8004fce:	e007      	b.n	8004fe0 <I2C_WaitOnBTFFlagUntilTimeout+0x88>
  while (__HAL_I2C_GET_FLAG(hi2c, I2C_FLAG_BTF) == RESET)
 8004fd0:	68fb      	ldr	r3, [r7, #12]
 8004fd2:	681b      	ldr	r3, [r3, #0]
 8004fd4:	695b      	ldr	r3, [r3, #20]
 8004fd6:	f003 0304 	and.w	r3, r3, #4
 8004fda:	2b04      	cmp	r3, #4
 8004fdc:	d1c3      	bne.n	8004f66 <I2C_WaitOnBTFFlagUntilTimeout+0xe>
        }
      }
    }
  }
  return HAL_OK;
 8004fde:	2300      	movs	r3, #0
}
 8004fe0:	4618      	mov	r0, r3
 8004fe2:	3710      	adds	r7, #16
 8004fe4:	46bd      	mov	sp, r7
 8004fe6:	bd80      	pop	{r7, pc}

08004fe8 <I2C_WaitOnRXNEFlagUntilTimeout>:
  * @param  Timeout Timeout duration
  * @param  Tickstart Tick start value
  * @retval HAL status
  */
static HAL_StatusTypeDef I2C_WaitOnRXNEFlagUntilTimeout(I2C_HandleTypeDef *hi2c, uint32_t Timeout, uint32_t Tickstart)
{
 8004fe8:	b580      	push	{r7, lr}
 8004fea:	b084      	sub	sp, #16
 8004fec:	af00      	add	r7, sp, #0
 8004fee:	60f8      	str	r0, [r7, #12]
 8004ff0:	60b9      	str	r1, [r7, #8]
 8004ff2:	607a      	str	r2, [r7, #4]

  while (__HAL_I2C_GET_FLAG(hi2c, I2C_FLAG_RXNE) == RESET)
 8004ff4:	e049      	b.n	800508a <I2C_WaitOnRXNEFlagUntilTimeout+0xa2>
  {
    /* Check if a STOPF is detected */
    if (__HAL_I2C_GET_FLAG(hi2c, I2C_FLAG_STOPF) == SET)
 8004ff6:	68fb      	ldr	r3, [r7, #12]
 8004ff8:	681b      	ldr	r3, [r3, #0]
 8004ffa:	695b      	ldr	r3, [r3, #20]
 8004ffc:	f003 0310 	and.w	r3, r3, #16
 8005000:	2b10      	cmp	r3, #16
 8005002:	d119      	bne.n	8005038 <I2C_WaitOnRXNEFlagUntilTimeout+0x50>
    {
      /* Clear STOP Flag */
      __HAL_I2C_CLEAR_FLAG(hi2c, I2C_FLAG_STOPF);
 8005004:	68fb      	ldr	r3, [r7, #12]
 8005006:	681b      	ldr	r3, [r3, #0]
 8005008:	f06f 0210 	mvn.w	r2, #16
 800500c:	615a      	str	r2, [r3, #20]

      hi2c->PreviousState       = I2C_STATE_NONE;
 800500e:	68fb      	ldr	r3, [r7, #12]
 8005010:	2200      	movs	r2, #0
 8005012:	631a      	str	r2, [r3, #48]	@ 0x30
      hi2c->State               = HAL_I2C_STATE_READY;
 8005014:	68fb      	ldr	r3, [r7, #12]
 8005016:	2220      	movs	r2, #32
 8005018:	f883 203d 	strb.w	r2, [r3, #61]	@ 0x3d
      hi2c->Mode                = HAL_I2C_MODE_NONE;
 800501c:	68fb      	ldr	r3, [r7, #12]
 800501e:	2200      	movs	r2, #0
 8005020:	f883 203e 	strb.w	r2, [r3, #62]	@ 0x3e
      hi2c->ErrorCode           |= HAL_I2C_ERROR_NONE;
 8005024:	68fb      	ldr	r3, [r7, #12]
 8005026:	6c1a      	ldr	r2, [r3, #64]	@ 0x40
 8005028:	68fb      	ldr	r3, [r7, #12]
 800502a:	641a      	str	r2, [r3, #64]	@ 0x40

      /* Process Unlocked */
      __HAL_UNLOCK(hi2c);
 800502c:	68fb      	ldr	r3, [r7, #12]
 800502e:	2200      	movs	r2, #0
 8005030:	f883 203c 	strb.w	r2, [r3, #60]	@ 0x3c

      return HAL_ERROR;
 8005034:	2301      	movs	r3, #1
 8005036:	e030      	b.n	800509a <I2C_WaitOnRXNEFlagUntilTimeout+0xb2>
    }

    /* Check for the Timeout */
    if (((HAL_GetTick() - Tickstart) > Timeout) || (Timeout == 0U))
 8005038:	f7fd fd00 	bl	8002a3c <HAL_GetTick>
 800503c:	4602      	mov	r2, r0
 800503e:	687b      	ldr	r3, [r7, #4]
 8005040:	1ad3      	subs	r3, r2, r3
 8005042:	68ba      	ldr	r2, [r7, #8]
 8005044:	429a      	cmp	r2, r3
 8005046:	d302      	bcc.n	800504e <I2C_WaitOnRXNEFlagUntilTimeout+0x66>
 8005048:	68bb      	ldr	r3, [r7, #8]
 800504a:	2b00      	cmp	r3, #0
 800504c:	d11d      	bne.n	800508a <I2C_WaitOnRXNEFlagUntilTimeout+0xa2>
    {
      if ((__HAL_I2C_GET_FLAG(hi2c, I2C_FLAG_RXNE) == RESET))
 800504e:	68fb      	ldr	r3, [r7, #12]
 8005050:	681b      	ldr	r3, [r3, #0]
 8005052:	695b      	ldr	r3, [r3, #20]
 8005054:	f003 0340 	and.w	r3, r3, #64	@ 0x40
 8005058:	2b40      	cmp	r3, #64	@ 0x40
 800505a:	d016      	beq.n	800508a <I2C_WaitOnRXNEFlagUntilTimeout+0xa2>
      {
        hi2c->PreviousState       = I2C_STATE_NONE;
 800505c:	68fb      	ldr	r3, [r7, #12]
 800505e:	2200      	movs	r2, #0
 8005060:	631a      	str	r2, [r3, #48]	@ 0x30
        hi2c->State               = HAL_I2C_STATE_READY;
 8005062:	68fb      	ldr	r3, [r7, #12]
 8005064:	2220      	movs	r2, #32
 8005066:	f883 203d 	strb.w	r2, [r3, #61]	@ 0x3d
        hi2c->Mode                = HAL_I2C_MODE_NONE;
 800506a:	68fb      	ldr	r3, [r7, #12]
 800506c:	2200      	movs	r2, #0
 800506e:	f883 203e 	strb.w	r2, [r3, #62]	@ 0x3e
        hi2c->ErrorCode           |= HAL_I2C_ERROR_TIMEOUT;
 8005072:	68fb      	ldr	r3, [r7, #12]
 8005074:	6c1b      	ldr	r3, [r3, #64]	@ 0x40
 8005076:	f043 0220 	orr.w	r2, r3, #32
 800507a:	68fb      	ldr	r3, [r7, #12]
 800507c:	641a      	str	r2, [r3, #64]	@ 0x40

        /* Process Unlocked */
        __HAL_UNLOCK(hi2c);
 800507e:	68fb      	ldr	r3, [r7, #12]
 8005080:	2200      	movs	r2, #0
 8005082:	f883 203c 	strb.w	r2, [r3, #60]	@ 0x3c

        return HAL_ERROR;
 8005086:	2301      	movs	r3, #1
 8005088:	e007      	b.n	800509a <I2C_WaitOnRXNEFlagUntilTimeout+0xb2>
  while (__HAL_I2C_GET_FLAG(hi2c, I2C_FLAG_RXNE) == RESET)
 800508a:	68fb      	ldr	r3, [r7, #12]
 800508c:	681b      	ldr	r3, [r3, #0]
 800508e:	695b      	ldr	r3, [r3, #20]
 8005090:	f003 0340 	and.w	r3, r3, #64	@ 0x40
 8005094:	2b40      	cmp	r3, #64	@ 0x40
 8005096:	d1ae      	bne.n	8004ff6 <I2C_WaitOnRXNEFlagUntilTimeout+0xe>
      }
    }
  }
  return HAL_OK;
 8005098:	2300      	movs	r3, #0
}
 800509a:	4618      	mov	r0, r3
 800509c:	3710      	adds	r7, #16
 800509e:	46bd      	mov	sp, r7
 80050a0:	bd80      	pop	{r7, pc}

080050a2 <I2C_IsAcknowledgeFailed>:
  * @param  hi2c Pointer to a I2C_HandleTypeDef structure that contains
  *                the configuration information for the specified I2C.
  * @retval HAL status
  */
static HAL_StatusTypeDef I2C_IsAcknowledgeFailed(I2C_HandleTypeDef *hi2c)
{
 80050a2:	b480      	push	{r7}
 80050a4:	b083      	sub	sp, #12
 80050a6:	af00      	add	r7, sp, #0
 80050a8:	6078      	str	r0, [r7, #4]
  if (__HAL_I2C_GET_FLAG(hi2c, I2C_FLAG_AF) == SET)
 80050aa:	687b      	ldr	r3, [r7, #4]
 80050ac:	681b      	ldr	r3, [r3, #0]
 80050ae:	695b      	ldr	r3, [r3, #20]
 80050b0:	f403 6380 	and.w	r3, r3, #1024	@ 0x400
 80050b4:	f5b3 6f80 	cmp.w	r3, #1024	@ 0x400
 80050b8:	d11b      	bne.n	80050f2 <I2C_IsAcknowledgeFailed+0x50>
  {
    /* Clear NACKF Flag */
    __HAL_I2C_CLEAR_FLAG(hi2c, I2C_FLAG_AF);
 80050ba:	687b      	ldr	r3, [r7, #4]
 80050bc:	681b      	ldr	r3, [r3, #0]
 80050be:	f46f 6280 	mvn.w	r2, #1024	@ 0x400
 80050c2:	615a      	str	r2, [r3, #20]

    hi2c->PreviousState       = I2C_STATE_NONE;
 80050c4:	687b      	ldr	r3, [r7, #4]
 80050c6:	2200      	movs	r2, #0
 80050c8:	631a      	str	r2, [r3, #48]	@ 0x30
    hi2c->State               = HAL_I2C_STATE_READY;
 80050ca:	687b      	ldr	r3, [r7, #4]
 80050cc:	2220      	movs	r2, #32
 80050ce:	f883 203d 	strb.w	r2, [r3, #61]	@ 0x3d
    hi2c->Mode                = HAL_I2C_MODE_NONE;
 80050d2:	687b      	ldr	r3, [r7, #4]
 80050d4:	2200      	movs	r2, #0
 80050d6:	f883 203e 	strb.w	r2, [r3, #62]	@ 0x3e
    hi2c->ErrorCode           |= HAL_I2C_ERROR_AF;
 80050da:	687b      	ldr	r3, [r7, #4]
 80050dc:	6c1b      	ldr	r3, [r3, #64]	@ 0x40
 80050de:	f043 0204 	orr.w	r2, r3, #4
 80050e2:	687b      	ldr	r3, [r7, #4]
 80050e4:	641a      	str	r2, [r3, #64]	@ 0x40

    /* Process Unlocked */
    __HAL_UNLOCK(hi2c);
 80050e6:	687b      	ldr	r3, [r7, #4]
 80050e8:	2200      	movs	r2, #0
 80050ea:	f883 203c 	strb.w	r2, [r3, #60]	@ 0x3c

    return HAL_ERROR;
 80050ee:	2301      	movs	r3, #1
 80050f0:	e000      	b.n	80050f4 <I2C_IsAcknowledgeFailed+0x52>
  }
  return HAL_OK;
 80050f2:	2300      	movs	r3, #0
}
 80050f4:	4618      	mov	r0, r3
 80050f6:	370c      	adds	r7, #12
 80050f8:	46bd      	mov	sp, r7
 80050fa:	f85d 7b04 	ldr.w	r7, [sp], #4
 80050fe:	4770      	bx	lr

08005100 <HAL_PWREx_EnableOverDrive>:
  *         During the Over-drive switch activation, no peripheral clocks should be enabled.   
  *         The peripheral clocks must be enabled once the Over-drive mode is activated.   
  * @retval HAL status
  */
HAL_StatusTypeDef HAL_PWREx_EnableOverDrive(void)
{
 8005100:	b580      	push	{r7, lr}
 8005102:	b082      	sub	sp, #8
 8005104:	af00      	add	r7, sp, #0
  uint32_t tickstart = 0U;
 8005106:	2300      	movs	r3, #0
 8005108:	607b      	str	r3, [r7, #4]

  __HAL_RCC_PWR_CLK_ENABLE();
 800510a:	2300      	movs	r3, #0
 800510c:	603b      	str	r3, [r7, #0]
 800510e:	4b20      	ldr	r3, [pc, #128]	@ (8005190 <HAL_PWREx_EnableOverDrive+0x90>)
 8005110:	6c1b      	ldr	r3, [r3, #64]	@ 0x40
 8005112:	4a1f      	ldr	r2, [pc, #124]	@ (8005190 <HAL_PWREx_EnableOverDrive+0x90>)
 8005114:	f043 5380 	orr.w	r3, r3, #268435456	@ 0x10000000
 8005118:	6413      	str	r3, [r2, #64]	@ 0x40
 800511a:	4b1d      	ldr	r3, [pc, #116]	@ (8005190 <HAL_PWREx_EnableOverDrive+0x90>)
 800511c:	6c1b      	ldr	r3, [r3, #64]	@ 0x40
 800511e:	f003 5380 	and.w	r3, r3, #268435456	@ 0x10000000
 8005122:	603b      	str	r3, [r7, #0]
 8005124:	683b      	ldr	r3, [r7, #0]
  
  /* Enable the Over-drive to extend the clock frequency to 180 Mhz */
  __HAL_PWR_OVERDRIVE_ENABLE();
 8005126:	4b1b      	ldr	r3, [pc, #108]	@ (8005194 <HAL_PWREx_EnableOverDrive+0x94>)
 8005128:	2201      	movs	r2, #1
 800512a:	601a      	str	r2, [r3, #0]

  /* Get tick */
  tickstart = HAL_GetTick();
 800512c:	f7fd fc86 	bl	8002a3c <HAL_GetTick>
 8005130:	6078      	str	r0, [r7, #4]

  while(!__HAL_PWR_GET_FLAG(PWR_FLAG_ODRDY))
 8005132:	e009      	b.n	8005148 <HAL_PWREx_EnableOverDrive+0x48>
  {
    if((HAL_GetTick() - tickstart) > PWR_OVERDRIVE_TIMEOUT_VALUE)
 8005134:	f7fd fc82 	bl	8002a3c <HAL_GetTick>
 8005138:	4602      	mov	r2, r0
 800513a:	687b      	ldr	r3, [r7, #4]
 800513c:	1ad3      	subs	r3, r2, r3
 800513e:	f5b3 7f7a 	cmp.w	r3, #1000	@ 0x3e8
 8005142:	d901      	bls.n	8005148 <HAL_PWREx_EnableOverDrive+0x48>
    {
      return HAL_TIMEOUT;
 8005144:	2303      	movs	r3, #3
 8005146:	e01f      	b.n	8005188 <HAL_PWREx_EnableOverDrive+0x88>
  while(!__HAL_PWR_GET_FLAG(PWR_FLAG_ODRDY))
 8005148:	4b13      	ldr	r3, [pc, #76]	@ (8005198 <HAL_PWREx_EnableOverDrive+0x98>)
 800514a:	685b      	ldr	r3, [r3, #4]
 800514c:	f403 3380 	and.w	r3, r3, #65536	@ 0x10000
 8005150:	f5b3 3f80 	cmp.w	r3, #65536	@ 0x10000
 8005154:	d1ee      	bne.n	8005134 <HAL_PWREx_EnableOverDrive+0x34>
    }
  }
  
  /* Enable the Over-drive switch */
  __HAL_PWR_OVERDRIVESWITCHING_ENABLE();
 8005156:	4b11      	ldr	r3, [pc, #68]	@ (800519c <HAL_PWREx_EnableOverDrive+0x9c>)
 8005158:	2201      	movs	r2, #1
 800515a:	601a      	str	r2, [r3, #0]

  /* Get tick */
  tickstart = HAL_GetTick();
 800515c:	f7fd fc6e 	bl	8002a3c <HAL_GetTick>
 8005160:	6078      	str	r0, [r7, #4]

  while(!__HAL_PWR_GET_FLAG(PWR_FLAG_ODSWRDY))
 8005162:	e009      	b.n	8005178 <HAL_PWREx_EnableOverDrive+0x78>
  {
    if((HAL_GetTick() - tickstart ) > PWR_OVERDRIVE_TIMEOUT_VALUE)
 8005164:	f7fd fc6a 	bl	8002a3c <HAL_GetTick>
 8005168:	4602      	mov	r2, r0
 800516a:	687b      	ldr	r3, [r7, #4]
 800516c:	1ad3      	subs	r3, r2, r3
 800516e:	f5b3 7f7a 	cmp.w	r3, #1000	@ 0x3e8
 8005172:	d901      	bls.n	8005178 <HAL_PWREx_EnableOverDrive+0x78>
    {
      return HAL_TIMEOUT;
 8005174:	2303      	movs	r3, #3
 8005176:	e007      	b.n	8005188 <HAL_PWREx_EnableOverDrive+0x88>
  while(!__HAL_PWR_GET_FLAG(PWR_FLAG_ODSWRDY))
 8005178:	4b07      	ldr	r3, [pc, #28]	@ (8005198 <HAL_PWREx_EnableOverDrive+0x98>)
 800517a:	685b      	ldr	r3, [r3, #4]
 800517c:	f403 3300 	and.w	r3, r3, #131072	@ 0x20000
 8005180:	f5b3 3f00 	cmp.w	r3, #131072	@ 0x20000
 8005184:	d1ee      	bne.n	8005164 <HAL_PWREx_EnableOverDrive+0x64>
    }
  } 
  return HAL_OK;
 8005186:	2300      	movs	r3, #0
}
 8005188:	4618      	mov	r0, r3
 800518a:	3708      	adds	r7, #8
 800518c:	46bd      	mov	sp, r7
 800518e:	bd80      	pop	{r7, pc}
 8005190:	40023800 	.word	0x40023800
 8005194:	420e0040 	.word	0x420e0040
 8005198:	40007000 	.word	0x40007000
 800519c:	420e0044 	.word	0x420e0044

080051a0 <HAL_RCC_ClockConfig>:
  *         HPRE[3:0] bits to ensure that HCLK not exceed the maximum allowed frequency
  *         (for more details refer to section above "Initialization/de-initialization functions")
  * @retval None
  */
HAL_StatusTypeDef HAL_RCC_ClockConfig(RCC_ClkInitTypeDef  *RCC_ClkInitStruct, uint32_t FLatency)
{
 80051a0:	b580      	push	{r7, lr}
 80051a2:	b084      	sub	sp, #16
 80051a4:	af00      	add	r7, sp, #0
 80051a6:	6078      	str	r0, [r7, #4]
 80051a8:	6039      	str	r1, [r7, #0]
  uint32_t tickstart;

  /* Check Null pointer */
  if (RCC_ClkInitStruct == NULL)
 80051aa:	687b      	ldr	r3, [r7, #4]
 80051ac:	2b00      	cmp	r3, #0
 80051ae:	d101      	bne.n	80051b4 <HAL_RCC_ClockConfig+0x14>
  {
    return HAL_ERROR;
 80051b0:	2301      	movs	r3, #1
 80051b2:	e0cc      	b.n	800534e <HAL_RCC_ClockConfig+0x1ae>
  /* To correctly read data from FLASH memory, the number of wait states (LATENCY)
    must be correctly programmed according to the frequency of the CPU clock
    (HCLK) and the supply voltage of the device. */

  /* Increasing the number of wait states because of higher CPU frequency */
  if (FLatency > __HAL_FLASH_GET_LATENCY())
 80051b4:	4b68      	ldr	r3, [pc, #416]	@ (8005358 <HAL_RCC_ClockConfig+0x1b8>)
 80051b6:	681b      	ldr	r3, [r3, #0]
 80051b8:	f003 030f 	and.w	r3, r3, #15
 80051bc:	683a      	ldr	r2, [r7, #0]
 80051be:	429a      	cmp	r2, r3
 80051c0:	d90c      	bls.n	80051dc <HAL_RCC_ClockConfig+0x3c>
  {
    /* Program the new number of wait states to the LATENCY bits in the FLASH_ACR register */
    __HAL_FLASH_SET_LATENCY(FLatency);
 80051c2:	4b65      	ldr	r3, [pc, #404]	@ (8005358 <HAL_RCC_ClockConfig+0x1b8>)
 80051c4:	683a      	ldr	r2, [r7, #0]
 80051c6:	b2d2      	uxtb	r2, r2
 80051c8:	701a      	strb	r2, [r3, #0]

    /* Check that the new number of wait states is taken into account to access the Flash
    memory by reading the FLASH_ACR register */
    if (__HAL_FLASH_GET_LATENCY() != FLatency)
 80051ca:	4b63      	ldr	r3, [pc, #396]	@ (8005358 <HAL_RCC_ClockConfig+0x1b8>)
 80051cc:	681b      	ldr	r3, [r3, #0]
 80051ce:	f003 030f 	and.w	r3, r3, #15
 80051d2:	683a      	ldr	r2, [r7, #0]
 80051d4:	429a      	cmp	r2, r3
 80051d6:	d001      	beq.n	80051dc <HAL_RCC_ClockConfig+0x3c>
    {
      return HAL_ERROR;
 80051d8:	2301      	movs	r3, #1
 80051da:	e0b8      	b.n	800534e <HAL_RCC_ClockConfig+0x1ae>
    }
  }

  /*-------------------------- HCLK Configuration --------------------------*/
  if (((RCC_ClkInitStruct->ClockType) & RCC_CLOCKTYPE_HCLK) == RCC_CLOCKTYPE_HCLK)
 80051dc:	687b      	ldr	r3, [r7, #4]
 80051de:	681b      	ldr	r3, [r3, #0]
 80051e0:	f003 0302 	and.w	r3, r3, #2
 80051e4:	2b00      	cmp	r3, #0
 80051e6:	d020      	beq.n	800522a <HAL_RCC_ClockConfig+0x8a>
  {
    /* Set the highest APBx dividers in order to ensure that we do not go through
       a non-spec phase whatever we decrease or increase HCLK. */
    if (((RCC_ClkInitStruct->ClockType) & RCC_CLOCKTYPE_PCLK1) == RCC_CLOCKTYPE_PCLK1)
 80051e8:	687b      	ldr	r3, [r7, #4]
 80051ea:	681b      	ldr	r3, [r3, #0]
 80051ec:	f003 0304 	and.w	r3, r3, #4
 80051f0:	2b00      	cmp	r3, #0
 80051f2:	d005      	beq.n	8005200 <HAL_RCC_ClockConfig+0x60>
    {
      MODIFY_REG(RCC->CFGR, RCC_CFGR_PPRE1, RCC_HCLK_DIV16);
 80051f4:	4b59      	ldr	r3, [pc, #356]	@ (800535c <HAL_RCC_ClockConfig+0x1bc>)
 80051f6:	689b      	ldr	r3, [r3, #8]
 80051f8:	4a58      	ldr	r2, [pc, #352]	@ (800535c <HAL_RCC_ClockConfig+0x1bc>)
 80051fa:	f443 53e0 	orr.w	r3, r3, #7168	@ 0x1c00
 80051fe:	6093      	str	r3, [r2, #8]
    }

    if (((RCC_ClkInitStruct->ClockType) & RCC_CLOCKTYPE_PCLK2) == RCC_CLOCKTYPE_PCLK2)
 8005200:	687b      	ldr	r3, [r7, #4]
 8005202:	681b      	ldr	r3, [r3, #0]
 8005204:	f003 0308 	and.w	r3, r3, #8
 8005208:	2b00      	cmp	r3, #0
 800520a:	d005      	beq.n	8005218 <HAL_RCC_ClockConfig+0x78>
    {
      MODIFY_REG(RCC->CFGR, RCC_CFGR_PPRE2, (RCC_HCLK_DIV16 << 3));
 800520c:	4b53      	ldr	r3, [pc, #332]	@ (800535c <HAL_RCC_ClockConfig+0x1bc>)
 800520e:	689b      	ldr	r3, [r3, #8]
 8005210:	4a52      	ldr	r2, [pc, #328]	@ (800535c <HAL_RCC_ClockConfig+0x1bc>)
 8005212:	f443 4360 	orr.w	r3, r3, #57344	@ 0xe000
 8005216:	6093      	str	r3, [r2, #8]
    }

    assert_param(IS_RCC_HCLK(RCC_ClkInitStruct->AHBCLKDivider));
    MODIFY_REG(RCC->CFGR, RCC_CFGR_HPRE, RCC_ClkInitStruct->AHBCLKDivider);
 8005218:	4b50      	ldr	r3, [pc, #320]	@ (800535c <HAL_RCC_ClockConfig+0x1bc>)
 800521a:	689b      	ldr	r3, [r3, #8]
 800521c:	f023 02f0 	bic.w	r2, r3, #240	@ 0xf0
 8005220:	687b      	ldr	r3, [r7, #4]
 8005222:	689b      	ldr	r3, [r3, #8]
 8005224:	494d      	ldr	r1, [pc, #308]	@ (800535c <HAL_RCC_ClockConfig+0x1bc>)
 8005226:	4313      	orrs	r3, r2
 8005228:	608b      	str	r3, [r1, #8]
  }

  /*------------------------- SYSCLK Configuration ---------------------------*/
  if (((RCC_ClkInitStruct->ClockType) & RCC_CLOCKTYPE_SYSCLK) == RCC_CLOCKTYPE_SYSCLK)
 800522a:	687b      	ldr	r3, [r7, #4]
 800522c:	681b      	ldr	r3, [r3, #0]
 800522e:	f003 0301 	and.w	r3, r3, #1
 8005232:	2b00      	cmp	r3, #0
 8005234:	d044      	beq.n	80052c0 <HAL_RCC_ClockConfig+0x120>
  {
    assert_param(IS_RCC_SYSCLKSOURCE(RCC_ClkInitStruct->SYSCLKSource));

    /* HSE is selected as System Clock Source */
    if (RCC_ClkInitStruct->SYSCLKSource == RCC_SYSCLKSOURCE_HSE)
 8005236:	687b      	ldr	r3, [r7, #4]
 8005238:	685b      	ldr	r3, [r3, #4]
 800523a:	2b01      	cmp	r3, #1
 800523c:	d107      	bne.n	800524e <HAL_RCC_ClockConfig+0xae>
    {
      /* Check the HSE ready flag */
      if (__HAL_RCC_GET_FLAG(RCC_FLAG_HSERDY) == RESET)
 800523e:	4b47      	ldr	r3, [pc, #284]	@ (800535c <HAL_RCC_ClockConfig+0x1bc>)
 8005240:	681b      	ldr	r3, [r3, #0]
 8005242:	f403 3300 	and.w	r3, r3, #131072	@ 0x20000
 8005246:	2b00      	cmp	r3, #0
 8005248:	d119      	bne.n	800527e <HAL_RCC_ClockConfig+0xde>
      {
        return HAL_ERROR;
 800524a:	2301      	movs	r3, #1
 800524c:	e07f      	b.n	800534e <HAL_RCC_ClockConfig+0x1ae>
      }
    }
    /* PLL is selected as System Clock Source */
    else if ((RCC_ClkInitStruct->SYSCLKSource == RCC_SYSCLKSOURCE_PLLCLK)   ||
 800524e:	687b      	ldr	r3, [r7, #4]
 8005250:	685b      	ldr	r3, [r3, #4]
 8005252:	2b02      	cmp	r3, #2
 8005254:	d003      	beq.n	800525e <HAL_RCC_ClockConfig+0xbe>
             (RCC_ClkInitStruct->SYSCLKSource == RCC_SYSCLKSOURCE_PLLRCLK))
 8005256:	687b      	ldr	r3, [r7, #4]
 8005258:	685b      	ldr	r3, [r3, #4]
    else if ((RCC_ClkInitStruct->SYSCLKSource == RCC_SYSCLKSOURCE_PLLCLK)   ||
 800525a:	2b03      	cmp	r3, #3
 800525c:	d107      	bne.n	800526e <HAL_RCC_ClockConfig+0xce>
    {
      /* Check the PLL ready flag */
      if (__HAL_RCC_GET_FLAG(RCC_FLAG_PLLRDY) == RESET)
 800525e:	4b3f      	ldr	r3, [pc, #252]	@ (800535c <HAL_RCC_ClockConfig+0x1bc>)
 8005260:	681b      	ldr	r3, [r3, #0]
 8005262:	f003 7300 	and.w	r3, r3, #33554432	@ 0x2000000
 8005266:	2b00      	cmp	r3, #0
 8005268:	d109      	bne.n	800527e <HAL_RCC_ClockConfig+0xde>
      {
        return HAL_ERROR;
 800526a:	2301      	movs	r3, #1
 800526c:	e06f      	b.n	800534e <HAL_RCC_ClockConfig+0x1ae>
    }
    /* HSI is selected as System Clock Source */
    else
    {
      /* Check the HSI ready flag */
      if (__HAL_RCC_GET_FLAG(RCC_FLAG_HSIRDY) == RESET)
 800526e:	4b3b      	ldr	r3, [pc, #236]	@ (800535c <HAL_RCC_ClockConfig+0x1bc>)
 8005270:	681b      	ldr	r3, [r3, #0]
 8005272:	f003 0302 	and.w	r3, r3, #2
 8005276:	2b00      	cmp	r3, #0
 8005278:	d101      	bne.n	800527e <HAL_RCC_ClockConfig+0xde>
      {
        return HAL_ERROR;
 800527a:	2301      	movs	r3, #1
 800527c:	e067      	b.n	800534e <HAL_RCC_ClockConfig+0x1ae>
      }
    }

    __HAL_RCC_SYSCLK_CONFIG(RCC_ClkInitStruct->SYSCLKSource);
 800527e:	4b37      	ldr	r3, [pc, #220]	@ (800535c <HAL_RCC_ClockConfig+0x1bc>)
 8005280:	689b      	ldr	r3, [r3, #8]
 8005282:	f023 0203 	bic.w	r2, r3, #3
 8005286:	687b      	ldr	r3, [r7, #4]
 8005288:	685b      	ldr	r3, [r3, #4]
 800528a:	4934      	ldr	r1, [pc, #208]	@ (800535c <HAL_RCC_ClockConfig+0x1bc>)
 800528c:	4313      	orrs	r3, r2
 800528e:	608b      	str	r3, [r1, #8]

    /* Get Start Tick */
    tickstart = HAL_GetTick();
 8005290:	f7fd fbd4 	bl	8002a3c <HAL_GetTick>
 8005294:	60f8      	str	r0, [r7, #12]

    while (__HAL_RCC_GET_SYSCLK_SOURCE() != (RCC_ClkInitStruct->SYSCLKSource << RCC_CFGR_SWS_Pos))
 8005296:	e00a      	b.n	80052ae <HAL_RCC_ClockConfig+0x10e>
    {
      if ((HAL_GetTick() - tickstart) > CLOCKSWITCH_TIMEOUT_VALUE)
 8005298:	f7fd fbd0 	bl	8002a3c <HAL_GetTick>
 800529c:	4602      	mov	r2, r0
 800529e:	68fb      	ldr	r3, [r7, #12]
 80052a0:	1ad3      	subs	r3, r2, r3
 80052a2:	f241 3288 	movw	r2, #5000	@ 0x1388
 80052a6:	4293      	cmp	r3, r2
 80052a8:	d901      	bls.n	80052ae <HAL_RCC_ClockConfig+0x10e>
      {
        return HAL_TIMEOUT;
 80052aa:	2303      	movs	r3, #3
 80052ac:	e04f      	b.n	800534e <HAL_RCC_ClockConfig+0x1ae>
    while (__HAL_RCC_GET_SYSCLK_SOURCE() != (RCC_ClkInitStruct->SYSCLKSource << RCC_CFGR_SWS_Pos))
 80052ae:	4b2b      	ldr	r3, [pc, #172]	@ (800535c <HAL_RCC_ClockConfig+0x1bc>)
 80052b0:	689b      	ldr	r3, [r3, #8]
 80052b2:	f003 020c 	and.w	r2, r3, #12
 80052b6:	687b      	ldr	r3, [r7, #4]
 80052b8:	685b      	ldr	r3, [r3, #4]
 80052ba:	009b      	lsls	r3, r3, #2
 80052bc:	429a      	cmp	r2, r3
 80052be:	d1eb      	bne.n	8005298 <HAL_RCC_ClockConfig+0xf8>
      }
    }
  }

  /* Decreasing the number of wait states because of lower CPU frequency */
  if (FLatency < __HAL_FLASH_GET_LATENCY())
 80052c0:	4b25      	ldr	r3, [pc, #148]	@ (8005358 <HAL_RCC_ClockConfig+0x1b8>)
 80052c2:	681b      	ldr	r3, [r3, #0]
 80052c4:	f003 030f 	and.w	r3, r3, #15
 80052c8:	683a      	ldr	r2, [r7, #0]
 80052ca:	429a      	cmp	r2, r3
 80052cc:	d20c      	bcs.n	80052e8 <HAL_RCC_ClockConfig+0x148>
  {
    /* Program the new number of wait states to the LATENCY bits in the FLASH_ACR register */
    __HAL_FLASH_SET_LATENCY(FLatency);
 80052ce:	4b22      	ldr	r3, [pc, #136]	@ (8005358 <HAL_RCC_ClockConfig+0x1b8>)
 80052d0:	683a      	ldr	r2, [r7, #0]
 80052d2:	b2d2      	uxtb	r2, r2
 80052d4:	701a      	strb	r2, [r3, #0]

    /* Check that the new number of wait states is taken into account to access the Flash
    memory by reading the FLASH_ACR register */
    if (__HAL_FLASH_GET_LATENCY() != FLatency)
 80052d6:	4b20      	ldr	r3, [pc, #128]	@ (8005358 <HAL_RCC_ClockConfig+0x1b8>)
 80052d8:	681b      	ldr	r3, [r3, #0]
 80052da:	f003 030f 	and.w	r3, r3, #15
 80052de:	683a      	ldr	r2, [r7, #0]
 80052e0:	429a      	cmp	r2, r3
 80052e2:	d001      	beq.n	80052e8 <HAL_RCC_ClockConfig+0x148>
    {
      return HAL_ERROR;
 80052e4:	2301      	movs	r3, #1
 80052e6:	e032      	b.n	800534e <HAL_RCC_ClockConfig+0x1ae>
    }
  }

  /*-------------------------- PCLK1 Configuration ---------------------------*/
  if (((RCC_ClkInitStruct->ClockType) & RCC_CLOCKTYPE_PCLK1) == RCC_CLOCKTYPE_PCLK1)
 80052e8:	687b      	ldr	r3, [r7, #4]
 80052ea:	681b      	ldr	r3, [r3, #0]
 80052ec:	f003 0304 	and.w	r3, r3, #4
 80052f0:	2b00      	cmp	r3, #0
 80052f2:	d008      	beq.n	8005306 <HAL_RCC_ClockConfig+0x166>
  {
    assert_param(IS_RCC_PCLK(RCC_ClkInitStruct->APB1CLKDivider));
    MODIFY_REG(RCC->CFGR, RCC_CFGR_PPRE1, RCC_ClkInitStruct->APB1CLKDivider);
 80052f4:	4b19      	ldr	r3, [pc, #100]	@ (800535c <HAL_RCC_ClockConfig+0x1bc>)
 80052f6:	689b      	ldr	r3, [r3, #8]
 80052f8:	f423 52e0 	bic.w	r2, r3, #7168	@ 0x1c00
 80052fc:	687b      	ldr	r3, [r7, #4]
 80052fe:	68db      	ldr	r3, [r3, #12]
 8005300:	4916      	ldr	r1, [pc, #88]	@ (800535c <HAL_RCC_ClockConfig+0x1bc>)
 8005302:	4313      	orrs	r3, r2
 8005304:	608b      	str	r3, [r1, #8]
  }

  /*-------------------------- PCLK2 Configuration ---------------------------*/
  if (((RCC_ClkInitStruct->ClockType) & RCC_CLOCKTYPE_PCLK2) == RCC_CLOCKTYPE_PCLK2)
 8005306:	687b      	ldr	r3, [r7, #4]
 8005308:	681b      	ldr	r3, [r3, #0]
 800530a:	f003 0308 	and.w	r3, r3, #8
 800530e:	2b00      	cmp	r3, #0
 8005310:	d009      	beq.n	8005326 <HAL_RCC_ClockConfig+0x186>
  {
    assert_param(IS_RCC_PCLK(RCC_ClkInitStruct->APB2CLKDivider));
    MODIFY_REG(RCC->CFGR, RCC_CFGR_PPRE2, ((RCC_ClkInitStruct->APB2CLKDivider) << 3U));
 8005312:	4b12      	ldr	r3, [pc, #72]	@ (800535c <HAL_RCC_ClockConfig+0x1bc>)
 8005314:	689b      	ldr	r3, [r3, #8]
 8005316:	f423 4260 	bic.w	r2, r3, #57344	@ 0xe000
 800531a:	687b      	ldr	r3, [r7, #4]
 800531c:	691b      	ldr	r3, [r3, #16]
 800531e:	00db      	lsls	r3, r3, #3
 8005320:	490e      	ldr	r1, [pc, #56]	@ (800535c <HAL_RCC_ClockConfig+0x1bc>)
 8005322:	4313      	orrs	r3, r2
 8005324:	608b      	str	r3, [r1, #8]
  }

  /* Update the SystemCoreClock global variable */
  SystemCoreClock = HAL_RCC_GetSysClockFreq() >> AHBPrescTable[(RCC->CFGR & RCC_CFGR_HPRE) >> RCC_CFGR_HPRE_Pos];
 8005326:	f000 f841 	bl	80053ac <HAL_RCC_GetSysClockFreq>
 800532a:	4602      	mov	r2, r0
 800532c:	4b0b      	ldr	r3, [pc, #44]	@ (800535c <HAL_RCC_ClockConfig+0x1bc>)
 800532e:	689b      	ldr	r3, [r3, #8]
 8005330:	091b      	lsrs	r3, r3, #4
 8005332:	f003 030f 	and.w	r3, r3, #15
 8005336:	490a      	ldr	r1, [pc, #40]	@ (8005360 <HAL_RCC_ClockConfig+0x1c0>)
 8005338:	5ccb      	ldrb	r3, [r1, r3]
 800533a:	fa22 f303 	lsr.w	r3, r2, r3
 800533e:	4a09      	ldr	r2, [pc, #36]	@ (8005364 <HAL_RCC_ClockConfig+0x1c4>)
 8005340:	6013      	str	r3, [r2, #0]

  /* Configure the source of time base considering new system clocks settings */
  HAL_InitTick(uwTickPrio);
 8005342:	4b09      	ldr	r3, [pc, #36]	@ (8005368 <HAL_RCC_ClockConfig+0x1c8>)
 8005344:	681b      	ldr	r3, [r3, #0]
 8005346:	4618      	mov	r0, r3
 8005348:	f7fd fb34 	bl	80029b4 <HAL_InitTick>

  return HAL_OK;
 800534c:	2300      	movs	r3, #0
}
 800534e:	4618      	mov	r0, r3
 8005350:	3710      	adds	r7, #16
 8005352:	46bd      	mov	sp, r7
 8005354:	bd80      	pop	{r7, pc}
 8005356:	bf00      	nop
 8005358:	40023c00 	.word	0x40023c00
 800535c:	40023800 	.word	0x40023800
 8005360:	08027f58 	.word	0x08027f58
 8005364:	20000014 	.word	0x20000014
 8005368:	20000020 	.word	0x20000020

0800536c <HAL_RCC_GetHCLKFreq>:
  * @note   The SystemCoreClock CMSIS variable is used to store System Clock Frequency
  *         and updated within this function
  * @retval HCLK frequency
  */
uint32_t HAL_RCC_GetHCLKFreq(void)
{
 800536c:	b480      	push	{r7}
 800536e:	af00      	add	r7, sp, #0
  return SystemCoreClock;
 8005370:	4b03      	ldr	r3, [pc, #12]	@ (8005380 <HAL_RCC_GetHCLKFreq+0x14>)
 8005372:	681b      	ldr	r3, [r3, #0]
}
 8005374:	4618      	mov	r0, r3
 8005376:	46bd      	mov	sp, r7
 8005378:	f85d 7b04 	ldr.w	r7, [sp], #4
 800537c:	4770      	bx	lr
 800537e:	bf00      	nop
 8005380:	20000014 	.word	0x20000014

08005384 <HAL_RCC_GetPCLK1Freq>:
  * @note   Each time PCLK1 changes, this function must be called to update the
  *         right PCLK1 value. Otherwise, any configuration based on this function will be incorrect.
  * @retval PCLK1 frequency
  */
uint32_t HAL_RCC_GetPCLK1Freq(void)
{
 8005384:	b580      	push	{r7, lr}
 8005386:	af00      	add	r7, sp, #0
  /* Get HCLK source and Compute PCLK1 frequency ---------------------------*/
  return (HAL_RCC_GetHCLKFreq() >> APBPrescTable[(RCC->CFGR & RCC_CFGR_PPRE1) >> RCC_CFGR_PPRE1_Pos]);
 8005388:	f7ff fff0 	bl	800536c <HAL_RCC_GetHCLKFreq>
 800538c:	4602      	mov	r2, r0
 800538e:	4b05      	ldr	r3, [pc, #20]	@ (80053a4 <HAL_RCC_GetPCLK1Freq+0x20>)
 8005390:	689b      	ldr	r3, [r3, #8]
 8005392:	0a9b      	lsrs	r3, r3, #10
 8005394:	f003 0307 	and.w	r3, r3, #7
 8005398:	4903      	ldr	r1, [pc, #12]	@ (80053a8 <HAL_RCC_GetPCLK1Freq+0x24>)
 800539a:	5ccb      	ldrb	r3, [r1, r3]
 800539c:	fa22 f303 	lsr.w	r3, r2, r3
}
 80053a0:	4618      	mov	r0, r3
 80053a2:	bd80      	pop	{r7, pc}
 80053a4:	40023800 	.word	0x40023800
 80053a8:	08027f68 	.word	0x08027f68

080053ac <HAL_RCC_GetSysClockFreq>:
  *
  *
  * @retval SYSCLK frequency
  */
uint32_t HAL_RCC_GetSysClockFreq(void)
{
 80053ac:	e92d 4fb0 	stmdb	sp!, {r4, r5, r7, r8, r9, sl, fp, lr}
 80053b0:	b0ae      	sub	sp, #184	@ 0xb8
 80053b2:	af00      	add	r7, sp, #0
  uint32_t pllm = 0U;
 80053b4:	2300      	movs	r3, #0
 80053b6:	f8c7 30ac 	str.w	r3, [r7, #172]	@ 0xac
  uint32_t pllvco = 0U;
 80053ba:	2300      	movs	r3, #0
 80053bc:	f8c7 30b4 	str.w	r3, [r7, #180]	@ 0xb4
  uint32_t pllp = 0U;
 80053c0:	2300      	movs	r3, #0
 80053c2:	f8c7 30a8 	str.w	r3, [r7, #168]	@ 0xa8
  uint32_t pllr = 0U;
 80053c6:	2300      	movs	r3, #0
 80053c8:	f8c7 30a4 	str.w	r3, [r7, #164]	@ 0xa4
  uint32_t sysclockfreq = 0U;
 80053cc:	2300      	movs	r3, #0
 80053ce:	f8c7 30b0 	str.w	r3, [r7, #176]	@ 0xb0

  /* Get SYSCLK source -------------------------------------------------------*/
  switch (RCC->CFGR & RCC_CFGR_SWS)
 80053d2:	4bcb      	ldr	r3, [pc, #812]	@ (8005700 <HAL_RCC_GetSysClockFreq+0x354>)
 80053d4:	689b      	ldr	r3, [r3, #8]
 80053d6:	f003 030c 	and.w	r3, r3, #12
 80053da:	2b0c      	cmp	r3, #12
 80053dc:	f200 8206 	bhi.w	80057ec <HAL_RCC_GetSysClockFreq+0x440>
 80053e0:	a201      	add	r2, pc, #4	@ (adr r2, 80053e8 <HAL_RCC_GetSysClockFreq+0x3c>)
 80053e2:	f852 f023 	ldr.w	pc, [r2, r3, lsl #2]
 80053e6:	bf00      	nop
 80053e8:	0800541d 	.word	0x0800541d
 80053ec:	080057ed 	.word	0x080057ed
 80053f0:	080057ed 	.word	0x080057ed
 80053f4:	080057ed 	.word	0x080057ed
 80053f8:	08005425 	.word	0x08005425
 80053fc:	080057ed 	.word	0x080057ed
 8005400:	080057ed 	.word	0x080057ed
 8005404:	080057ed 	.word	0x080057ed
 8005408:	0800542d 	.word	0x0800542d
 800540c:	080057ed 	.word	0x080057ed
 8005410:	080057ed 	.word	0x080057ed
 8005414:	080057ed 	.word	0x080057ed
 8005418:	0800561d 	.word	0x0800561d
  {
    case RCC_CFGR_SWS_HSI:  /* HSI used as system clock source */
    {
      sysclockfreq = HSI_VALUE;
 800541c:	4bb9      	ldr	r3, [pc, #740]	@ (8005704 <HAL_RCC_GetSysClockFreq+0x358>)
 800541e:	f8c7 30b0 	str.w	r3, [r7, #176]	@ 0xb0
      break;
 8005422:	e1e7      	b.n	80057f4 <HAL_RCC_GetSysClockFreq+0x448>
    }
    case RCC_CFGR_SWS_HSE:  /* HSE used as system clock  source */
    {
      sysclockfreq = HSE_VALUE;
 8005424:	4bb8      	ldr	r3, [pc, #736]	@ (8005708 <HAL_RCC_GetSysClockFreq+0x35c>)
 8005426:	f8c7 30b0 	str.w	r3, [r7, #176]	@ 0xb0
      break;
 800542a:	e1e3      	b.n	80057f4 <HAL_RCC_GetSysClockFreq+0x448>
    }
    case RCC_CFGR_SWS_PLL:  /* PLL/PLLP used as system clock  source */
    {
      /* PLL_VCO = (HSE_VALUE or HSI_VALUE / PLLM) * PLLN
      SYSCLK = PLL_VCO / PLLP */
      pllm = RCC->PLLCFGR & RCC_PLLCFGR_PLLM;
 800542c:	4bb4      	ldr	r3, [pc, #720]	@ (8005700 <HAL_RCC_GetSysClockFreq+0x354>)
 800542e:	685b      	ldr	r3, [r3, #4]
 8005430:	f003 033f 	and.w	r3, r3, #63	@ 0x3f
 8005434:	f8c7 30ac 	str.w	r3, [r7, #172]	@ 0xac
      if (__HAL_RCC_GET_PLL_OSCSOURCE() != RCC_PLLSOURCE_HSI)
 8005438:	4bb1      	ldr	r3, [pc, #708]	@ (8005700 <HAL_RCC_GetSysClockFreq+0x354>)
 800543a:	685b      	ldr	r3, [r3, #4]
 800543c:	f403 0380 	and.w	r3, r3, #4194304	@ 0x400000
 8005440:	2b00      	cmp	r3, #0
 8005442:	d071      	beq.n	8005528 <HAL_RCC_GetSysClockFreq+0x17c>
      {
        /* HSE used as PLL clock source */
        pllvco = (uint32_t)((((uint64_t) HSE_VALUE * ((uint64_t)((RCC->PLLCFGR & RCC_PLLCFGR_PLLN) >> RCC_PLLCFGR_PLLN_Pos)))) / (uint64_t)pllm);
 8005444:	4bae      	ldr	r3, [pc, #696]	@ (8005700 <HAL_RCC_GetSysClockFreq+0x354>)
 8005446:	685b      	ldr	r3, [r3, #4]
 8005448:	099b      	lsrs	r3, r3, #6
 800544a:	2200      	movs	r2, #0
 800544c:	f8c7 3098 	str.w	r3, [r7, #152]	@ 0x98
 8005450:	f8c7 209c 	str.w	r2, [r7, #156]	@ 0x9c
 8005454:	f8d7 3098 	ldr.w	r3, [r7, #152]	@ 0x98
 8005458:	f3c3 0308 	ubfx	r3, r3, #0, #9
 800545c:	f8c7 3090 	str.w	r3, [r7, #144]	@ 0x90
 8005460:	2300      	movs	r3, #0
 8005462:	f8c7 3094 	str.w	r3, [r7, #148]	@ 0x94
 8005466:	e9d7 4524 	ldrd	r4, r5, [r7, #144]	@ 0x90
 800546a:	4622      	mov	r2, r4
 800546c:	462b      	mov	r3, r5
 800546e:	f04f 0000 	mov.w	r0, #0
 8005472:	f04f 0100 	mov.w	r1, #0
 8005476:	0159      	lsls	r1, r3, #5
 8005478:	ea41 61d2 	orr.w	r1, r1, r2, lsr #27
 800547c:	0150      	lsls	r0, r2, #5
 800547e:	4602      	mov	r2, r0
 8005480:	460b      	mov	r3, r1
 8005482:	4621      	mov	r1, r4
 8005484:	1a51      	subs	r1, r2, r1
 8005486:	6439      	str	r1, [r7, #64]	@ 0x40
 8005488:	4629      	mov	r1, r5
 800548a:	eb63 0301 	sbc.w	r3, r3, r1
 800548e:	647b      	str	r3, [r7, #68]	@ 0x44
 8005490:	f04f 0200 	mov.w	r2, #0
 8005494:	f04f 0300 	mov.w	r3, #0
 8005498:	e9d7 8910 	ldrd	r8, r9, [r7, #64]	@ 0x40
 800549c:	4649      	mov	r1, r9
 800549e:	018b      	lsls	r3, r1, #6
 80054a0:	4641      	mov	r1, r8
 80054a2:	ea43 6391 	orr.w	r3, r3, r1, lsr #26
 80054a6:	4641      	mov	r1, r8
 80054a8:	018a      	lsls	r2, r1, #6
 80054aa:	4641      	mov	r1, r8
 80054ac:	1a51      	subs	r1, r2, r1
 80054ae:	63b9      	str	r1, [r7, #56]	@ 0x38
 80054b0:	4649      	mov	r1, r9
 80054b2:	eb63 0301 	sbc.w	r3, r3, r1
 80054b6:	63fb      	str	r3, [r7, #60]	@ 0x3c
 80054b8:	f04f 0200 	mov.w	r2, #0
 80054bc:	f04f 0300 	mov.w	r3, #0
 80054c0:	e9d7 890e 	ldrd	r8, r9, [r7, #56]	@ 0x38
 80054c4:	4649      	mov	r1, r9
 80054c6:	00cb      	lsls	r3, r1, #3
 80054c8:	4641      	mov	r1, r8
 80054ca:	ea43 7351 	orr.w	r3, r3, r1, lsr #29
 80054ce:	4641      	mov	r1, r8
 80054d0:	00ca      	lsls	r2, r1, #3
 80054d2:	4610      	mov	r0, r2
 80054d4:	4619      	mov	r1, r3
 80054d6:	4603      	mov	r3, r0
 80054d8:	4622      	mov	r2, r4
 80054da:	189b      	adds	r3, r3, r2
 80054dc:	633b      	str	r3, [r7, #48]	@ 0x30
 80054de:	462b      	mov	r3, r5
 80054e0:	460a      	mov	r2, r1
 80054e2:	eb42 0303 	adc.w	r3, r2, r3
 80054e6:	637b      	str	r3, [r7, #52]	@ 0x34
 80054e8:	f04f 0200 	mov.w	r2, #0
 80054ec:	f04f 0300 	mov.w	r3, #0
 80054f0:	e9d7 450c 	ldrd	r4, r5, [r7, #48]	@ 0x30
 80054f4:	4629      	mov	r1, r5
 80054f6:	024b      	lsls	r3, r1, #9
 80054f8:	4621      	mov	r1, r4
 80054fa:	ea43 53d1 	orr.w	r3, r3, r1, lsr #23
 80054fe:	4621      	mov	r1, r4
 8005500:	024a      	lsls	r2, r1, #9
 8005502:	4610      	mov	r0, r2
 8005504:	4619      	mov	r1, r3
 8005506:	f8d7 30ac 	ldr.w	r3, [r7, #172]	@ 0xac
 800550a:	2200      	movs	r2, #0
 800550c:	f8c7 3088 	str.w	r3, [r7, #136]	@ 0x88
 8005510:	f8c7 208c 	str.w	r2, [r7, #140]	@ 0x8c
 8005514:	e9d7 2322 	ldrd	r2, r3, [r7, #136]	@ 0x88
 8005518:	f7fb fb70 	bl	8000bfc <__aeabi_uldivmod>
 800551c:	4602      	mov	r2, r0
 800551e:	460b      	mov	r3, r1
 8005520:	4613      	mov	r3, r2
 8005522:	f8c7 30b4 	str.w	r3, [r7, #180]	@ 0xb4
 8005526:	e067      	b.n	80055f8 <HAL_RCC_GetSysClockFreq+0x24c>
      }
      else
      {
        /* HSI used as PLL clock source */
        pllvco = (uint32_t)((((uint64_t) HSI_VALUE * ((uint64_t)((RCC->PLLCFGR & RCC_PLLCFGR_PLLN) >> RCC_PLLCFGR_PLLN_Pos)))) / (uint64_t)pllm);
 8005528:	4b75      	ldr	r3, [pc, #468]	@ (8005700 <HAL_RCC_GetSysClockFreq+0x354>)
 800552a:	685b      	ldr	r3, [r3, #4]
 800552c:	099b      	lsrs	r3, r3, #6
 800552e:	2200      	movs	r2, #0
 8005530:	f8c7 3080 	str.w	r3, [r7, #128]	@ 0x80
 8005534:	f8c7 2084 	str.w	r2, [r7, #132]	@ 0x84
 8005538:	f8d7 3080 	ldr.w	r3, [r7, #128]	@ 0x80
 800553c:	f3c3 0308 	ubfx	r3, r3, #0, #9
 8005540:	67bb      	str	r3, [r7, #120]	@ 0x78
 8005542:	2300      	movs	r3, #0
 8005544:	67fb      	str	r3, [r7, #124]	@ 0x7c
 8005546:	e9d7 451e 	ldrd	r4, r5, [r7, #120]	@ 0x78
 800554a:	4622      	mov	r2, r4
 800554c:	462b      	mov	r3, r5
 800554e:	f04f 0000 	mov.w	r0, #0
 8005552:	f04f 0100 	mov.w	r1, #0
 8005556:	0159      	lsls	r1, r3, #5
 8005558:	ea41 61d2 	orr.w	r1, r1, r2, lsr #27
 800555c:	0150      	lsls	r0, r2, #5
 800555e:	4602      	mov	r2, r0
 8005560:	460b      	mov	r3, r1
 8005562:	4621      	mov	r1, r4
 8005564:	1a51      	subs	r1, r2, r1
 8005566:	62b9      	str	r1, [r7, #40]	@ 0x28
 8005568:	4629      	mov	r1, r5
 800556a:	eb63 0301 	sbc.w	r3, r3, r1
 800556e:	62fb      	str	r3, [r7, #44]	@ 0x2c
 8005570:	f04f 0200 	mov.w	r2, #0
 8005574:	f04f 0300 	mov.w	r3, #0
 8005578:	e9d7 890a 	ldrd	r8, r9, [r7, #40]	@ 0x28
 800557c:	4649      	mov	r1, r9
 800557e:	018b      	lsls	r3, r1, #6
 8005580:	4641      	mov	r1, r8
 8005582:	ea43 6391 	orr.w	r3, r3, r1, lsr #26
 8005586:	4641      	mov	r1, r8
 8005588:	018a      	lsls	r2, r1, #6
 800558a:	4641      	mov	r1, r8
 800558c:	ebb2 0a01 	subs.w	sl, r2, r1
 8005590:	4649      	mov	r1, r9
 8005592:	eb63 0b01 	sbc.w	fp, r3, r1
 8005596:	f04f 0200 	mov.w	r2, #0
 800559a:	f04f 0300 	mov.w	r3, #0
 800559e:	ea4f 03cb 	mov.w	r3, fp, lsl #3
 80055a2:	ea43 735a 	orr.w	r3, r3, sl, lsr #29
 80055a6:	ea4f 02ca 	mov.w	r2, sl, lsl #3
 80055aa:	4692      	mov	sl, r2
 80055ac:	469b      	mov	fp, r3
 80055ae:	4623      	mov	r3, r4
 80055b0:	eb1a 0303 	adds.w	r3, sl, r3
 80055b4:	623b      	str	r3, [r7, #32]
 80055b6:	462b      	mov	r3, r5
 80055b8:	eb4b 0303 	adc.w	r3, fp, r3
 80055bc:	627b      	str	r3, [r7, #36]	@ 0x24
 80055be:	f04f 0200 	mov.w	r2, #0
 80055c2:	f04f 0300 	mov.w	r3, #0
 80055c6:	e9d7 4508 	ldrd	r4, r5, [r7, #32]
 80055ca:	4629      	mov	r1, r5
 80055cc:	028b      	lsls	r3, r1, #10
 80055ce:	4621      	mov	r1, r4
 80055d0:	ea43 5391 	orr.w	r3, r3, r1, lsr #22
 80055d4:	4621      	mov	r1, r4
 80055d6:	028a      	lsls	r2, r1, #10
 80055d8:	4610      	mov	r0, r2
 80055da:	4619      	mov	r1, r3
 80055dc:	f8d7 30ac 	ldr.w	r3, [r7, #172]	@ 0xac
 80055e0:	2200      	movs	r2, #0
 80055e2:	673b      	str	r3, [r7, #112]	@ 0x70
 80055e4:	677a      	str	r2, [r7, #116]	@ 0x74
 80055e6:	e9d7 231c 	ldrd	r2, r3, [r7, #112]	@ 0x70
 80055ea:	f7fb fb07 	bl	8000bfc <__aeabi_uldivmod>
 80055ee:	4602      	mov	r2, r0
 80055f0:	460b      	mov	r3, r1
 80055f2:	4613      	mov	r3, r2
 80055f4:	f8c7 30b4 	str.w	r3, [r7, #180]	@ 0xb4
      }
      pllp = ((((RCC->PLLCFGR & RCC_PLLCFGR_PLLP) >> RCC_PLLCFGR_PLLP_Pos) + 1U) * 2U);
 80055f8:	4b41      	ldr	r3, [pc, #260]	@ (8005700 <HAL_RCC_GetSysClockFreq+0x354>)
 80055fa:	685b      	ldr	r3, [r3, #4]
 80055fc:	0c1b      	lsrs	r3, r3, #16
 80055fe:	f003 0303 	and.w	r3, r3, #3
 8005602:	3301      	adds	r3, #1
 8005604:	005b      	lsls	r3, r3, #1
 8005606:	f8c7 30a8 	str.w	r3, [r7, #168]	@ 0xa8

      sysclockfreq = pllvco / pllp;
 800560a:	f8d7 20b4 	ldr.w	r2, [r7, #180]	@ 0xb4
 800560e:	f8d7 30a8 	ldr.w	r3, [r7, #168]	@ 0xa8
 8005612:	fbb2 f3f3 	udiv	r3, r2, r3
 8005616:	f8c7 30b0 	str.w	r3, [r7, #176]	@ 0xb0
      break;
 800561a:	e0eb      	b.n	80057f4 <HAL_RCC_GetSysClockFreq+0x448>
    }
    case RCC_CFGR_SWS_PLLR:  /* PLL/PLLR used as system clock  source */
    {
      /* PLL_VCO = (HSE_VALUE or HSI_VALUE / PLLM) * PLLN
      SYSCLK = PLL_VCO / PLLR */
      pllm = RCC->PLLCFGR & RCC_PLLCFGR_PLLM;
 800561c:	4b38      	ldr	r3, [pc, #224]	@ (8005700 <HAL_RCC_GetSysClockFreq+0x354>)
 800561e:	685b      	ldr	r3, [r3, #4]
 8005620:	f003 033f 	and.w	r3, r3, #63	@ 0x3f
 8005624:	f8c7 30ac 	str.w	r3, [r7, #172]	@ 0xac
      if (__HAL_RCC_GET_PLL_OSCSOURCE() != RCC_PLLSOURCE_HSI)
 8005628:	4b35      	ldr	r3, [pc, #212]	@ (8005700 <HAL_RCC_GetSysClockFreq+0x354>)
 800562a:	685b      	ldr	r3, [r3, #4]
 800562c:	f403 0380 	and.w	r3, r3, #4194304	@ 0x400000
 8005630:	2b00      	cmp	r3, #0
 8005632:	d06b      	beq.n	800570c <HAL_RCC_GetSysClockFreq+0x360>
      {
        /* HSE used as PLL clock source */
        pllvco = (uint32_t)((((uint64_t) HSE_VALUE * ((uint64_t)((RCC->PLLCFGR & RCC_PLLCFGR_PLLN) >> RCC_PLLCFGR_PLLN_Pos)))) / (uint64_t)pllm);
 8005634:	4b32      	ldr	r3, [pc, #200]	@ (8005700 <HAL_RCC_GetSysClockFreq+0x354>)
 8005636:	685b      	ldr	r3, [r3, #4]
 8005638:	099b      	lsrs	r3, r3, #6
 800563a:	2200      	movs	r2, #0
 800563c:	66bb      	str	r3, [r7, #104]	@ 0x68
 800563e:	66fa      	str	r2, [r7, #108]	@ 0x6c
 8005640:	6ebb      	ldr	r3, [r7, #104]	@ 0x68
 8005642:	f3c3 0308 	ubfx	r3, r3, #0, #9
 8005646:	663b      	str	r3, [r7, #96]	@ 0x60
 8005648:	2300      	movs	r3, #0
 800564a:	667b      	str	r3, [r7, #100]	@ 0x64
 800564c:	e9d7 4518 	ldrd	r4, r5, [r7, #96]	@ 0x60
 8005650:	4622      	mov	r2, r4
 8005652:	462b      	mov	r3, r5
 8005654:	f04f 0000 	mov.w	r0, #0
 8005658:	f04f 0100 	mov.w	r1, #0
 800565c:	0159      	lsls	r1, r3, #5
 800565e:	ea41 61d2 	orr.w	r1, r1, r2, lsr #27
 8005662:	0150      	lsls	r0, r2, #5
 8005664:	4602      	mov	r2, r0
 8005666:	460b      	mov	r3, r1
 8005668:	4621      	mov	r1, r4
 800566a:	1a51      	subs	r1, r2, r1
 800566c:	61b9      	str	r1, [r7, #24]
 800566e:	4629      	mov	r1, r5
 8005670:	eb63 0301 	sbc.w	r3, r3, r1
 8005674:	61fb      	str	r3, [r7, #28]
 8005676:	f04f 0200 	mov.w	r2, #0
 800567a:	f04f 0300 	mov.w	r3, #0
 800567e:	e9d7 ab06 	ldrd	sl, fp, [r7, #24]
 8005682:	4659      	mov	r1, fp
 8005684:	018b      	lsls	r3, r1, #6
 8005686:	4651      	mov	r1, sl
 8005688:	ea43 6391 	orr.w	r3, r3, r1, lsr #26
 800568c:	4651      	mov	r1, sl
 800568e:	018a      	lsls	r2, r1, #6
 8005690:	4651      	mov	r1, sl
 8005692:	ebb2 0801 	subs.w	r8, r2, r1
 8005696:	4659      	mov	r1, fp
 8005698:	eb63 0901 	sbc.w	r9, r3, r1
 800569c:	f04f 0200 	mov.w	r2, #0
 80056a0:	f04f 0300 	mov.w	r3, #0
 80056a4:	ea4f 03c9 	mov.w	r3, r9, lsl #3
 80056a8:	ea43 7358 	orr.w	r3, r3, r8, lsr #29
 80056ac:	ea4f 02c8 	mov.w	r2, r8, lsl #3
 80056b0:	4690      	mov	r8, r2
 80056b2:	4699      	mov	r9, r3
 80056b4:	4623      	mov	r3, r4
 80056b6:	eb18 0303 	adds.w	r3, r8, r3
 80056ba:	613b      	str	r3, [r7, #16]
 80056bc:	462b      	mov	r3, r5
 80056be:	eb49 0303 	adc.w	r3, r9, r3
 80056c2:	617b      	str	r3, [r7, #20]
 80056c4:	f04f 0200 	mov.w	r2, #0
 80056c8:	f04f 0300 	mov.w	r3, #0
 80056cc:	e9d7 4504 	ldrd	r4, r5, [r7, #16]
 80056d0:	4629      	mov	r1, r5
 80056d2:	024b      	lsls	r3, r1, #9
 80056d4:	4621      	mov	r1, r4
 80056d6:	ea43 53d1 	orr.w	r3, r3, r1, lsr #23
 80056da:	4621      	mov	r1, r4
 80056dc:	024a      	lsls	r2, r1, #9
 80056de:	4610      	mov	r0, r2
 80056e0:	4619      	mov	r1, r3
 80056e2:	f8d7 30ac 	ldr.w	r3, [r7, #172]	@ 0xac
 80056e6:	2200      	movs	r2, #0
 80056e8:	65bb      	str	r3, [r7, #88]	@ 0x58
 80056ea:	65fa      	str	r2, [r7, #92]	@ 0x5c
 80056ec:	e9d7 2316 	ldrd	r2, r3, [r7, #88]	@ 0x58
 80056f0:	f7fb fa84 	bl	8000bfc <__aeabi_uldivmod>
 80056f4:	4602      	mov	r2, r0
 80056f6:	460b      	mov	r3, r1
 80056f8:	4613      	mov	r3, r2
 80056fa:	f8c7 30b4 	str.w	r3, [r7, #180]	@ 0xb4
 80056fe:	e065      	b.n	80057cc <HAL_RCC_GetSysClockFreq+0x420>
 8005700:	40023800 	.word	0x40023800
 8005704:	00f42400 	.word	0x00f42400
 8005708:	007a1200 	.word	0x007a1200
      }
      else
      {
        /* HSI used as PLL clock source */
        pllvco = (uint32_t)((((uint64_t) HSI_VALUE * ((uint64_t)((RCC->PLLCFGR & RCC_PLLCFGR_PLLN) >> RCC_PLLCFGR_PLLN_Pos)))) / (uint64_t)pllm);
 800570c:	4b3d      	ldr	r3, [pc, #244]	@ (8005804 <HAL_RCC_GetSysClockFreq+0x458>)
 800570e:	685b      	ldr	r3, [r3, #4]
 8005710:	099b      	lsrs	r3, r3, #6
 8005712:	2200      	movs	r2, #0
 8005714:	4618      	mov	r0, r3
 8005716:	4611      	mov	r1, r2
 8005718:	f3c0 0308 	ubfx	r3, r0, #0, #9
 800571c:	653b      	str	r3, [r7, #80]	@ 0x50
 800571e:	2300      	movs	r3, #0
 8005720:	657b      	str	r3, [r7, #84]	@ 0x54
 8005722:	e9d7 8914 	ldrd	r8, r9, [r7, #80]	@ 0x50
 8005726:	4642      	mov	r2, r8
 8005728:	464b      	mov	r3, r9
 800572a:	f04f 0000 	mov.w	r0, #0
 800572e:	f04f 0100 	mov.w	r1, #0
 8005732:	0159      	lsls	r1, r3, #5
 8005734:	ea41 61d2 	orr.w	r1, r1, r2, lsr #27
 8005738:	0150      	lsls	r0, r2, #5
 800573a:	4602      	mov	r2, r0
 800573c:	460b      	mov	r3, r1
 800573e:	4641      	mov	r1, r8
 8005740:	1a51      	subs	r1, r2, r1
 8005742:	60b9      	str	r1, [r7, #8]
 8005744:	4649      	mov	r1, r9
 8005746:	eb63 0301 	sbc.w	r3, r3, r1
 800574a:	60fb      	str	r3, [r7, #12]
 800574c:	f04f 0200 	mov.w	r2, #0
 8005750:	f04f 0300 	mov.w	r3, #0
 8005754:	e9d7 ab02 	ldrd	sl, fp, [r7, #8]
 8005758:	4659      	mov	r1, fp
 800575a:	018b      	lsls	r3, r1, #6
 800575c:	4651      	mov	r1, sl
 800575e:	ea43 6391 	orr.w	r3, r3, r1, lsr #26
 8005762:	4651      	mov	r1, sl
 8005764:	018a      	lsls	r2, r1, #6
 8005766:	4651      	mov	r1, sl
 8005768:	1a54      	subs	r4, r2, r1
 800576a:	4659      	mov	r1, fp
 800576c:	eb63 0501 	sbc.w	r5, r3, r1
 8005770:	f04f 0200 	mov.w	r2, #0
 8005774:	f04f 0300 	mov.w	r3, #0
 8005778:	00eb      	lsls	r3, r5, #3
 800577a:	ea43 7354 	orr.w	r3, r3, r4, lsr #29
 800577e:	00e2      	lsls	r2, r4, #3
 8005780:	4614      	mov	r4, r2
 8005782:	461d      	mov	r5, r3
 8005784:	4643      	mov	r3, r8
 8005786:	18e3      	adds	r3, r4, r3
 8005788:	603b      	str	r3, [r7, #0]
 800578a:	464b      	mov	r3, r9
 800578c:	eb45 0303 	adc.w	r3, r5, r3
 8005790:	607b      	str	r3, [r7, #4]
 8005792:	f04f 0200 	mov.w	r2, #0
 8005796:	f04f 0300 	mov.w	r3, #0
 800579a:	e9d7 4500 	ldrd	r4, r5, [r7]
 800579e:	4629      	mov	r1, r5
 80057a0:	028b      	lsls	r3, r1, #10
 80057a2:	4621      	mov	r1, r4
 80057a4:	ea43 5391 	orr.w	r3, r3, r1, lsr #22
 80057a8:	4621      	mov	r1, r4
 80057aa:	028a      	lsls	r2, r1, #10
 80057ac:	4610      	mov	r0, r2
 80057ae:	4619      	mov	r1, r3
 80057b0:	f8d7 30ac 	ldr.w	r3, [r7, #172]	@ 0xac
 80057b4:	2200      	movs	r2, #0
 80057b6:	64bb      	str	r3, [r7, #72]	@ 0x48
 80057b8:	64fa      	str	r2, [r7, #76]	@ 0x4c
 80057ba:	e9d7 2312 	ldrd	r2, r3, [r7, #72]	@ 0x48
 80057be:	f7fb fa1d 	bl	8000bfc <__aeabi_uldivmod>
 80057c2:	4602      	mov	r2, r0
 80057c4:	460b      	mov	r3, r1
 80057c6:	4613      	mov	r3, r2
 80057c8:	f8c7 30b4 	str.w	r3, [r7, #180]	@ 0xb4
      }
      pllr = ((RCC->PLLCFGR & RCC_PLLCFGR_PLLR) >> RCC_PLLCFGR_PLLR_Pos);
 80057cc:	4b0d      	ldr	r3, [pc, #52]	@ (8005804 <HAL_RCC_GetSysClockFreq+0x458>)
 80057ce:	685b      	ldr	r3, [r3, #4]
 80057d0:	0f1b      	lsrs	r3, r3, #28
 80057d2:	f003 0307 	and.w	r3, r3, #7
 80057d6:	f8c7 30a4 	str.w	r3, [r7, #164]	@ 0xa4

      sysclockfreq = pllvco / pllr;
 80057da:	f8d7 20b4 	ldr.w	r2, [r7, #180]	@ 0xb4
 80057de:	f8d7 30a4 	ldr.w	r3, [r7, #164]	@ 0xa4
 80057e2:	fbb2 f3f3 	udiv	r3, r2, r3
 80057e6:	f8c7 30b0 	str.w	r3, [r7, #176]	@ 0xb0
      break;
 80057ea:	e003      	b.n	80057f4 <HAL_RCC_GetSysClockFreq+0x448>
    }
    default:
    {
      sysclockfreq = HSI_VALUE;
 80057ec:	4b06      	ldr	r3, [pc, #24]	@ (8005808 <HAL_RCC_GetSysClockFreq+0x45c>)
 80057ee:	f8c7 30b0 	str.w	r3, [r7, #176]	@ 0xb0
      break;
 80057f2:	bf00      	nop
    }
  }
  return sysclockfreq;
 80057f4:	f8d7 30b0 	ldr.w	r3, [r7, #176]	@ 0xb0
}
 80057f8:	4618      	mov	r0, r3
 80057fa:	37b8      	adds	r7, #184	@ 0xb8
 80057fc:	46bd      	mov	sp, r7
 80057fe:	e8bd 8fb0 	ldmia.w	sp!, {r4, r5, r7, r8, r9, sl, fp, pc}
 8005802:	bf00      	nop
 8005804:	40023800 	.word	0x40023800
 8005808:	00f42400 	.word	0x00f42400

0800580c <HAL_RCC_OscConfig>:
  * @note   This function add the PLL/PLLR factor management during PLL configuration this feature
  *         is only available in STM32F410xx/STM32F446xx/STM32F469xx/STM32F479xx/STM32F412Zx/STM32F412Vx/STM32F412Rx/STM32F412Cx devices
  * @retval HAL status
  */
HAL_StatusTypeDef HAL_RCC_OscConfig(RCC_OscInitTypeDef  *RCC_OscInitStruct)
{
 800580c:	b580      	push	{r7, lr}
 800580e:	b086      	sub	sp, #24
 8005810:	af00      	add	r7, sp, #0
 8005812:	6078      	str	r0, [r7, #4]
  uint32_t tickstart;
  uint32_t pll_config;

  /* Check Null pointer */
  if (RCC_OscInitStruct == NULL)
 8005814:	687b      	ldr	r3, [r7, #4]
 8005816:	2b00      	cmp	r3, #0
 8005818:	d101      	bne.n	800581e <HAL_RCC_OscConfig+0x12>
  {
    return HAL_ERROR;
 800581a:	2301      	movs	r3, #1
 800581c:	e28d      	b.n	8005d3a <HAL_RCC_OscConfig+0x52e>
  }

  /* Check the parameters */
  assert_param(IS_RCC_OSCILLATORTYPE(RCC_OscInitStruct->OscillatorType));
  /*------------------------------- HSE Configuration ------------------------*/
  if (((RCC_OscInitStruct->OscillatorType) & RCC_OSCILLATORTYPE_HSE) == RCC_OSCILLATORTYPE_HSE)
 800581e:	687b      	ldr	r3, [r7, #4]
 8005820:	681b      	ldr	r3, [r3, #0]
 8005822:	f003 0301 	and.w	r3, r3, #1
 8005826:	2b00      	cmp	r3, #0
 8005828:	f000 8083 	beq.w	8005932 <HAL_RCC_OscConfig+0x126>
  {
    /* Check the parameters */
    assert_param(IS_RCC_HSE(RCC_OscInitStruct->HSEState));
    /* When the HSE is used as system clock or clock source for PLL in these cases HSE will not disabled */
#if defined(STM32F446xx)
    if ((__HAL_RCC_GET_SYSCLK_SOURCE() == RCC_CFGR_SWS_HSE)
 800582c:	4b94      	ldr	r3, [pc, #592]	@ (8005a80 <HAL_RCC_OscConfig+0x274>)
 800582e:	689b      	ldr	r3, [r3, #8]
 8005830:	f003 030c 	and.w	r3, r3, #12
 8005834:	2b04      	cmp	r3, #4
 8005836:	d019      	beq.n	800586c <HAL_RCC_OscConfig+0x60>
        || \
        ((__HAL_RCC_GET_SYSCLK_SOURCE() == RCC_CFGR_SWS_PLL) && ((RCC->PLLCFGR & RCC_PLLCFGR_PLLSRC) == RCC_PLLCFGR_PLLSRC_HSE)) || \
 8005838:	4b91      	ldr	r3, [pc, #580]	@ (8005a80 <HAL_RCC_OscConfig+0x274>)
 800583a:	689b      	ldr	r3, [r3, #8]
 800583c:	f003 030c 	and.w	r3, r3, #12
        || \
 8005840:	2b08      	cmp	r3, #8
 8005842:	d106      	bne.n	8005852 <HAL_RCC_OscConfig+0x46>
        ((__HAL_RCC_GET_SYSCLK_SOURCE() == RCC_CFGR_SWS_PLL) && ((RCC->PLLCFGR & RCC_PLLCFGR_PLLSRC) == RCC_PLLCFGR_PLLSRC_HSE)) || \
 8005844:	4b8e      	ldr	r3, [pc, #568]	@ (8005a80 <HAL_RCC_OscConfig+0x274>)
 8005846:	685b      	ldr	r3, [r3, #4]
 8005848:	f403 0380 	and.w	r3, r3, #4194304	@ 0x400000
 800584c:	f5b3 0f80 	cmp.w	r3, #4194304	@ 0x400000
 8005850:	d00c      	beq.n	800586c <HAL_RCC_OscConfig+0x60>
        ((__HAL_RCC_GET_SYSCLK_SOURCE() == RCC_CFGR_SWS_PLLR) && ((RCC->PLLCFGR & RCC_PLLCFGR_PLLSRC) == RCC_PLLCFGR_PLLSRC_HSE)))
 8005852:	4b8b      	ldr	r3, [pc, #556]	@ (8005a80 <HAL_RCC_OscConfig+0x274>)
 8005854:	689b      	ldr	r3, [r3, #8]
 8005856:	f003 030c 	and.w	r3, r3, #12
        ((__HAL_RCC_GET_SYSCLK_SOURCE() == RCC_CFGR_SWS_PLL) && ((RCC->PLLCFGR & RCC_PLLCFGR_PLLSRC) == RCC_PLLCFGR_PLLSRC_HSE)) || \
 800585a:	2b0c      	cmp	r3, #12
 800585c:	d112      	bne.n	8005884 <HAL_RCC_OscConfig+0x78>
        ((__HAL_RCC_GET_SYSCLK_SOURCE() == RCC_CFGR_SWS_PLLR) && ((RCC->PLLCFGR & RCC_PLLCFGR_PLLSRC) == RCC_PLLCFGR_PLLSRC_HSE)))
 800585e:	4b88      	ldr	r3, [pc, #544]	@ (8005a80 <HAL_RCC_OscConfig+0x274>)
 8005860:	685b      	ldr	r3, [r3, #4]
 8005862:	f403 0380 	and.w	r3, r3, #4194304	@ 0x400000
 8005866:	f5b3 0f80 	cmp.w	r3, #4194304	@ 0x400000
 800586a:	d10b      	bne.n	8005884 <HAL_RCC_OscConfig+0x78>
    if ((__HAL_RCC_GET_SYSCLK_SOURCE() == RCC_CFGR_SWS_HSE)
        || \
        ((__HAL_RCC_GET_SYSCLK_SOURCE() == RCC_CFGR_SWS_PLL) && ((RCC->PLLCFGR & RCC_PLLCFGR_PLLSRC) == RCC_PLLCFGR_PLLSRC_HSE)))
#endif /* STM32F446xx */
    {
      if ((__HAL_RCC_GET_FLAG(RCC_FLAG_HSERDY) != RESET) && (RCC_OscInitStruct->HSEState == RCC_HSE_OFF))
 800586c:	4b84      	ldr	r3, [pc, #528]	@ (8005a80 <HAL_RCC_OscConfig+0x274>)
 800586e:	681b      	ldr	r3, [r3, #0]
 8005870:	f403 3300 	and.w	r3, r3, #131072	@ 0x20000
 8005874:	2b00      	cmp	r3, #0
 8005876:	d05b      	beq.n	8005930 <HAL_RCC_OscConfig+0x124>
 8005878:	687b      	ldr	r3, [r7, #4]
 800587a:	685b      	ldr	r3, [r3, #4]
 800587c:	2b00      	cmp	r3, #0
 800587e:	d157      	bne.n	8005930 <HAL_RCC_OscConfig+0x124>
      {
        return HAL_ERROR;
 8005880:	2301      	movs	r3, #1
 8005882:	e25a      	b.n	8005d3a <HAL_RCC_OscConfig+0x52e>
      }
    }
    else
    {
      /* Set the new HSE configuration ---------------------------------------*/
      __HAL_RCC_HSE_CONFIG(RCC_OscInitStruct->HSEState);
 8005884:	687b      	ldr	r3, [r7, #4]
 8005886:	685b      	ldr	r3, [r3, #4]
 8005888:	f5b3 3f80 	cmp.w	r3, #65536	@ 0x10000
 800588c:	d106      	bne.n	800589c <HAL_RCC_OscConfig+0x90>
 800588e:	4b7c      	ldr	r3, [pc, #496]	@ (8005a80 <HAL_RCC_OscConfig+0x274>)
 8005890:	681b      	ldr	r3, [r3, #0]
 8005892:	4a7b      	ldr	r2, [pc, #492]	@ (8005a80 <HAL_RCC_OscConfig+0x274>)
 8005894:	f443 3380 	orr.w	r3, r3, #65536	@ 0x10000
 8005898:	6013      	str	r3, [r2, #0]
 800589a:	e01d      	b.n	80058d8 <HAL_RCC_OscConfig+0xcc>
 800589c:	687b      	ldr	r3, [r7, #4]
 800589e:	685b      	ldr	r3, [r3, #4]
 80058a0:	f5b3 2fa0 	cmp.w	r3, #327680	@ 0x50000
 80058a4:	d10c      	bne.n	80058c0 <HAL_RCC_OscConfig+0xb4>
 80058a6:	4b76      	ldr	r3, [pc, #472]	@ (8005a80 <HAL_RCC_OscConfig+0x274>)
 80058a8:	681b      	ldr	r3, [r3, #0]
 80058aa:	4a75      	ldr	r2, [pc, #468]	@ (8005a80 <HAL_RCC_OscConfig+0x274>)
 80058ac:	f443 2380 	orr.w	r3, r3, #262144	@ 0x40000
 80058b0:	6013      	str	r3, [r2, #0]
 80058b2:	4b73      	ldr	r3, [pc, #460]	@ (8005a80 <HAL_RCC_OscConfig+0x274>)
 80058b4:	681b      	ldr	r3, [r3, #0]
 80058b6:	4a72      	ldr	r2, [pc, #456]	@ (8005a80 <HAL_RCC_OscConfig+0x274>)
 80058b8:	f443 3380 	orr.w	r3, r3, #65536	@ 0x10000
 80058bc:	6013      	str	r3, [r2, #0]
 80058be:	e00b      	b.n	80058d8 <HAL_RCC_OscConfig+0xcc>
 80058c0:	4b6f      	ldr	r3, [pc, #444]	@ (8005a80 <HAL_RCC_OscConfig+0x274>)
 80058c2:	681b      	ldr	r3, [r3, #0]
 80058c4:	4a6e      	ldr	r2, [pc, #440]	@ (8005a80 <HAL_RCC_OscConfig+0x274>)
 80058c6:	f423 3380 	bic.w	r3, r3, #65536	@ 0x10000
 80058ca:	6013      	str	r3, [r2, #0]
 80058cc:	4b6c      	ldr	r3, [pc, #432]	@ (8005a80 <HAL_RCC_OscConfig+0x274>)
 80058ce:	681b      	ldr	r3, [r3, #0]
 80058d0:	4a6b      	ldr	r2, [pc, #428]	@ (8005a80 <HAL_RCC_OscConfig+0x274>)
 80058d2:	f423 2380 	bic.w	r3, r3, #262144	@ 0x40000
 80058d6:	6013      	str	r3, [r2, #0]

      /* Check the HSE State */
      if ((RCC_OscInitStruct->HSEState) != RCC_HSE_OFF)
 80058d8:	687b      	ldr	r3, [r7, #4]
 80058da:	685b      	ldr	r3, [r3, #4]
 80058dc:	2b00      	cmp	r3, #0
 80058de:	d013      	beq.n	8005908 <HAL_RCC_OscConfig+0xfc>
      {
        /* Get Start Tick*/
        tickstart = HAL_GetTick();
 80058e0:	f7fd f8ac 	bl	8002a3c <HAL_GetTick>
 80058e4:	6138      	str	r0, [r7, #16]

        /* Wait till HSE is ready */
        while (__HAL_RCC_GET_FLAG(RCC_FLAG_HSERDY) == RESET)
 80058e6:	e008      	b.n	80058fa <HAL_RCC_OscConfig+0xee>
        {
          if ((HAL_GetTick() - tickstart) > HSE_TIMEOUT_VALUE)
 80058e8:	f7fd f8a8 	bl	8002a3c <HAL_GetTick>
 80058ec:	4602      	mov	r2, r0
 80058ee:	693b      	ldr	r3, [r7, #16]
 80058f0:	1ad3      	subs	r3, r2, r3
 80058f2:	2b64      	cmp	r3, #100	@ 0x64
 80058f4:	d901      	bls.n	80058fa <HAL_RCC_OscConfig+0xee>
          {
            return HAL_TIMEOUT;
 80058f6:	2303      	movs	r3, #3
 80058f8:	e21f      	b.n	8005d3a <HAL_RCC_OscConfig+0x52e>
        while (__HAL_RCC_GET_FLAG(RCC_FLAG_HSERDY) == RESET)
 80058fa:	4b61      	ldr	r3, [pc, #388]	@ (8005a80 <HAL_RCC_OscConfig+0x274>)
 80058fc:	681b      	ldr	r3, [r3, #0]
 80058fe:	f403 3300 	and.w	r3, r3, #131072	@ 0x20000
 8005902:	2b00      	cmp	r3, #0
 8005904:	d0f0      	beq.n	80058e8 <HAL_RCC_OscConfig+0xdc>
 8005906:	e014      	b.n	8005932 <HAL_RCC_OscConfig+0x126>
        }
      }
      else
      {
        /* Get Start Tick*/
        tickstart = HAL_GetTick();
 8005908:	f7fd f898 	bl	8002a3c <HAL_GetTick>
 800590c:	6138      	str	r0, [r7, #16]

        /* Wait till HSE is bypassed or disabled */
        while (__HAL_RCC_GET_FLAG(RCC_FLAG_HSERDY) != RESET)
 800590e:	e008      	b.n	8005922 <HAL_RCC_OscConfig+0x116>
        {
          if ((HAL_GetTick() - tickstart) > HSE_TIMEOUT_VALUE)
 8005910:	f7fd f894 	bl	8002a3c <HAL_GetTick>
 8005914:	4602      	mov	r2, r0
 8005916:	693b      	ldr	r3, [r7, #16]
 8005918:	1ad3      	subs	r3, r2, r3
 800591a:	2b64      	cmp	r3, #100	@ 0x64
 800591c:	d901      	bls.n	8005922 <HAL_RCC_OscConfig+0x116>
          {
            return HAL_TIMEOUT;
 800591e:	2303      	movs	r3, #3
 8005920:	e20b      	b.n	8005d3a <HAL_RCC_OscConfig+0x52e>
        while (__HAL_RCC_GET_FLAG(RCC_FLAG_HSERDY) != RESET)
 8005922:	4b57      	ldr	r3, [pc, #348]	@ (8005a80 <HAL_RCC_OscConfig+0x274>)
 8005924:	681b      	ldr	r3, [r3, #0]
 8005926:	f403 3300 	and.w	r3, r3, #131072	@ 0x20000
 800592a:	2b00      	cmp	r3, #0
 800592c:	d1f0      	bne.n	8005910 <HAL_RCC_OscConfig+0x104>
 800592e:	e000      	b.n	8005932 <HAL_RCC_OscConfig+0x126>
      if ((__HAL_RCC_GET_FLAG(RCC_FLAG_HSERDY) != RESET) && (RCC_OscInitStruct->HSEState == RCC_HSE_OFF))
 8005930:	bf00      	nop
        }
      }
    }
  }
  /*----------------------------- HSI Configuration --------------------------*/
  if (((RCC_OscInitStruct->OscillatorType) & RCC_OSCILLATORTYPE_HSI) == RCC_OSCILLATORTYPE_HSI)
 8005932:	687b      	ldr	r3, [r7, #4]
 8005934:	681b      	ldr	r3, [r3, #0]
 8005936:	f003 0302 	and.w	r3, r3, #2
 800593a:	2b00      	cmp	r3, #0
 800593c:	d06f      	beq.n	8005a1e <HAL_RCC_OscConfig+0x212>
    assert_param(IS_RCC_HSI(RCC_OscInitStruct->HSIState));
    assert_param(IS_RCC_CALIBRATION_VALUE(RCC_OscInitStruct->HSICalibrationValue));

    /* Check if HSI is used as system clock or as PLL source when PLL is selected as system clock */
#if defined(STM32F446xx)
    if ((__HAL_RCC_GET_SYSCLK_SOURCE() == RCC_CFGR_SWS_HSI)
 800593e:	4b50      	ldr	r3, [pc, #320]	@ (8005a80 <HAL_RCC_OscConfig+0x274>)
 8005940:	689b      	ldr	r3, [r3, #8]
 8005942:	f003 030c 	and.w	r3, r3, #12
 8005946:	2b00      	cmp	r3, #0
 8005948:	d017      	beq.n	800597a <HAL_RCC_OscConfig+0x16e>
        || \
        ((__HAL_RCC_GET_SYSCLK_SOURCE() == RCC_CFGR_SWS_PLL) && ((RCC->PLLCFGR & RCC_PLLCFGR_PLLSRC) == RCC_PLLCFGR_PLLSRC_HSI)) || \
 800594a:	4b4d      	ldr	r3, [pc, #308]	@ (8005a80 <HAL_RCC_OscConfig+0x274>)
 800594c:	689b      	ldr	r3, [r3, #8]
 800594e:	f003 030c 	and.w	r3, r3, #12
        || \
 8005952:	2b08      	cmp	r3, #8
 8005954:	d105      	bne.n	8005962 <HAL_RCC_OscConfig+0x156>
        ((__HAL_RCC_GET_SYSCLK_SOURCE() == RCC_CFGR_SWS_PLL) && ((RCC->PLLCFGR & RCC_PLLCFGR_PLLSRC) == RCC_PLLCFGR_PLLSRC_HSI)) || \
 8005956:	4b4a      	ldr	r3, [pc, #296]	@ (8005a80 <HAL_RCC_OscConfig+0x274>)
 8005958:	685b      	ldr	r3, [r3, #4]
 800595a:	f403 0380 	and.w	r3, r3, #4194304	@ 0x400000
 800595e:	2b00      	cmp	r3, #0
 8005960:	d00b      	beq.n	800597a <HAL_RCC_OscConfig+0x16e>
        ((__HAL_RCC_GET_SYSCLK_SOURCE() == RCC_CFGR_SWS_PLLR) && ((RCC->PLLCFGR & RCC_PLLCFGR_PLLSRC) == RCC_PLLCFGR_PLLSRC_HSI)))
 8005962:	4b47      	ldr	r3, [pc, #284]	@ (8005a80 <HAL_RCC_OscConfig+0x274>)
 8005964:	689b      	ldr	r3, [r3, #8]
 8005966:	f003 030c 	and.w	r3, r3, #12
        ((__HAL_RCC_GET_SYSCLK_SOURCE() == RCC_CFGR_SWS_PLL) && ((RCC->PLLCFGR & RCC_PLLCFGR_PLLSRC) == RCC_PLLCFGR_PLLSRC_HSI)) || \
 800596a:	2b0c      	cmp	r3, #12
 800596c:	d11c      	bne.n	80059a8 <HAL_RCC_OscConfig+0x19c>
        ((__HAL_RCC_GET_SYSCLK_SOURCE() == RCC_CFGR_SWS_PLLR) && ((RCC->PLLCFGR & RCC_PLLCFGR_PLLSRC) == RCC_PLLCFGR_PLLSRC_HSI)))
 800596e:	4b44      	ldr	r3, [pc, #272]	@ (8005a80 <HAL_RCC_OscConfig+0x274>)
 8005970:	685b      	ldr	r3, [r3, #4]
 8005972:	f403 0380 	and.w	r3, r3, #4194304	@ 0x400000
 8005976:	2b00      	cmp	r3, #0
 8005978:	d116      	bne.n	80059a8 <HAL_RCC_OscConfig+0x19c>
        || \
        ((__HAL_RCC_GET_SYSCLK_SOURCE() == RCC_CFGR_SWS_PLL) && ((RCC->PLLCFGR & RCC_PLLCFGR_PLLSRC) == RCC_PLLCFGR_PLLSRC_HSI)))
#endif /* STM32F446xx */
    {
      /* When HSI is used as system clock it will not disabled */
      if ((__HAL_RCC_GET_FLAG(RCC_FLAG_HSIRDY) != RESET) && (RCC_OscInitStruct->HSIState != RCC_HSI_ON))
 800597a:	4b41      	ldr	r3, [pc, #260]	@ (8005a80 <HAL_RCC_OscConfig+0x274>)
 800597c:	681b      	ldr	r3, [r3, #0]
 800597e:	f003 0302 	and.w	r3, r3, #2
 8005982:	2b00      	cmp	r3, #0
 8005984:	d005      	beq.n	8005992 <HAL_RCC_OscConfig+0x186>
 8005986:	687b      	ldr	r3, [r7, #4]
 8005988:	68db      	ldr	r3, [r3, #12]
 800598a:	2b01      	cmp	r3, #1
 800598c:	d001      	beq.n	8005992 <HAL_RCC_OscConfig+0x186>
      {
        return HAL_ERROR;
 800598e:	2301      	movs	r3, #1
 8005990:	e1d3      	b.n	8005d3a <HAL_RCC_OscConfig+0x52e>
      }
      /* Otherwise, just the calibration is allowed */
      else
      {
        /* Adjusts the Internal High Speed oscillator (HSI) calibration value.*/
        __HAL_RCC_HSI_CALIBRATIONVALUE_ADJUST(RCC_OscInitStruct->HSICalibrationValue);
 8005992:	4b3b      	ldr	r3, [pc, #236]	@ (8005a80 <HAL_RCC_OscConfig+0x274>)
 8005994:	681b      	ldr	r3, [r3, #0]
 8005996:	f023 02f8 	bic.w	r2, r3, #248	@ 0xf8
 800599a:	687b      	ldr	r3, [r7, #4]
 800599c:	691b      	ldr	r3, [r3, #16]
 800599e:	00db      	lsls	r3, r3, #3
 80059a0:	4937      	ldr	r1, [pc, #220]	@ (8005a80 <HAL_RCC_OscConfig+0x274>)
 80059a2:	4313      	orrs	r3, r2
 80059a4:	600b      	str	r3, [r1, #0]
      if ((__HAL_RCC_GET_FLAG(RCC_FLAG_HSIRDY) != RESET) && (RCC_OscInitStruct->HSIState != RCC_HSI_ON))
 80059a6:	e03a      	b.n	8005a1e <HAL_RCC_OscConfig+0x212>
      }
    }
    else
    {
      /* Check the HSI State */
      if ((RCC_OscInitStruct->HSIState) != RCC_HSI_OFF)
 80059a8:	687b      	ldr	r3, [r7, #4]
 80059aa:	68db      	ldr	r3, [r3, #12]
 80059ac:	2b00      	cmp	r3, #0
 80059ae:	d020      	beq.n	80059f2 <HAL_RCC_OscConfig+0x1e6>
      {
        /* Enable the Internal High Speed oscillator (HSI). */
        __HAL_RCC_HSI_ENABLE();
 80059b0:	4b34      	ldr	r3, [pc, #208]	@ (8005a84 <HAL_RCC_OscConfig+0x278>)
 80059b2:	2201      	movs	r2, #1
 80059b4:	601a      	str	r2, [r3, #0]

        /* Get Start Tick*/
        tickstart = HAL_GetTick();
 80059b6:	f7fd f841 	bl	8002a3c <HAL_GetTick>
 80059ba:	6138      	str	r0, [r7, #16]

        /* Wait till HSI is ready */
        while (__HAL_RCC_GET_FLAG(RCC_FLAG_HSIRDY) == RESET)
 80059bc:	e008      	b.n	80059d0 <HAL_RCC_OscConfig+0x1c4>
        {
          if ((HAL_GetTick() - tickstart) > HSI_TIMEOUT_VALUE)
 80059be:	f7fd f83d 	bl	8002a3c <HAL_GetTick>
 80059c2:	4602      	mov	r2, r0
 80059c4:	693b      	ldr	r3, [r7, #16]
 80059c6:	1ad3      	subs	r3, r2, r3
 80059c8:	2b02      	cmp	r3, #2
 80059ca:	d901      	bls.n	80059d0 <HAL_RCC_OscConfig+0x1c4>
          {
            return HAL_TIMEOUT;
 80059cc:	2303      	movs	r3, #3
 80059ce:	e1b4      	b.n	8005d3a <HAL_RCC_OscConfig+0x52e>
        while (__HAL_RCC_GET_FLAG(RCC_FLAG_HSIRDY) == RESET)
 80059d0:	4b2b      	ldr	r3, [pc, #172]	@ (8005a80 <HAL_RCC_OscConfig+0x274>)
 80059d2:	681b      	ldr	r3, [r3, #0]
 80059d4:	f003 0302 	and.w	r3, r3, #2
 80059d8:	2b00      	cmp	r3, #0
 80059da:	d0f0      	beq.n	80059be <HAL_RCC_OscConfig+0x1b2>
          }
        }

        /* Adjusts the Internal High Speed oscillator (HSI) calibration value.*/
        __HAL_RCC_HSI_CALIBRATIONVALUE_ADJUST(RCC_OscInitStruct->HSICalibrationValue);
 80059dc:	4b28      	ldr	r3, [pc, #160]	@ (8005a80 <HAL_RCC_OscConfig+0x274>)
 80059de:	681b      	ldr	r3, [r3, #0]
 80059e0:	f023 02f8 	bic.w	r2, r3, #248	@ 0xf8
 80059e4:	687b      	ldr	r3, [r7, #4]
 80059e6:	691b      	ldr	r3, [r3, #16]
 80059e8:	00db      	lsls	r3, r3, #3
 80059ea:	4925      	ldr	r1, [pc, #148]	@ (8005a80 <HAL_RCC_OscConfig+0x274>)
 80059ec:	4313      	orrs	r3, r2
 80059ee:	600b      	str	r3, [r1, #0]
 80059f0:	e015      	b.n	8005a1e <HAL_RCC_OscConfig+0x212>
      }
      else
      {
        /* Disable the Internal High Speed oscillator (HSI). */
        __HAL_RCC_HSI_DISABLE();
 80059f2:	4b24      	ldr	r3, [pc, #144]	@ (8005a84 <HAL_RCC_OscConfig+0x278>)
 80059f4:	2200      	movs	r2, #0
 80059f6:	601a      	str	r2, [r3, #0]

        /* Get Start Tick*/
        tickstart = HAL_GetTick();
 80059f8:	f7fd f820 	bl	8002a3c <HAL_GetTick>
 80059fc:	6138      	str	r0, [r7, #16]

        /* Wait till HSI is ready */
        while (__HAL_RCC_GET_FLAG(RCC_FLAG_HSIRDY) != RESET)
 80059fe:	e008      	b.n	8005a12 <HAL_RCC_OscConfig+0x206>
        {
          if ((HAL_GetTick() - tickstart) > HSI_TIMEOUT_VALUE)
 8005a00:	f7fd f81c 	bl	8002a3c <HAL_GetTick>
 8005a04:	4602      	mov	r2, r0
 8005a06:	693b      	ldr	r3, [r7, #16]
 8005a08:	1ad3      	subs	r3, r2, r3
 8005a0a:	2b02      	cmp	r3, #2
 8005a0c:	d901      	bls.n	8005a12 <HAL_RCC_OscConfig+0x206>
          {
            return HAL_TIMEOUT;
 8005a0e:	2303      	movs	r3, #3
 8005a10:	e193      	b.n	8005d3a <HAL_RCC_OscConfig+0x52e>
        while (__HAL_RCC_GET_FLAG(RCC_FLAG_HSIRDY) != RESET)
 8005a12:	4b1b      	ldr	r3, [pc, #108]	@ (8005a80 <HAL_RCC_OscConfig+0x274>)
 8005a14:	681b      	ldr	r3, [r3, #0]
 8005a16:	f003 0302 	and.w	r3, r3, #2
 8005a1a:	2b00      	cmp	r3, #0
 8005a1c:	d1f0      	bne.n	8005a00 <HAL_RCC_OscConfig+0x1f4>
        }
      }
    }
  }
  /*------------------------------ LSI Configuration -------------------------*/
  if (((RCC_OscInitStruct->OscillatorType) & RCC_OSCILLATORTYPE_LSI) == RCC_OSCILLATORTYPE_LSI)
 8005a1e:	687b      	ldr	r3, [r7, #4]
 8005a20:	681b      	ldr	r3, [r3, #0]
 8005a22:	f003 0308 	and.w	r3, r3, #8
 8005a26:	2b00      	cmp	r3, #0
 8005a28:	d036      	beq.n	8005a98 <HAL_RCC_OscConfig+0x28c>
  {
    /* Check the parameters */
    assert_param(IS_RCC_LSI(RCC_OscInitStruct->LSIState));

    /* Check the LSI State */
    if ((RCC_OscInitStruct->LSIState) != RCC_LSI_OFF)
 8005a2a:	687b      	ldr	r3, [r7, #4]
 8005a2c:	695b      	ldr	r3, [r3, #20]
 8005a2e:	2b00      	cmp	r3, #0
 8005a30:	d016      	beq.n	8005a60 <HAL_RCC_OscConfig+0x254>
    {
      /* Enable the Internal Low Speed oscillator (LSI). */
      __HAL_RCC_LSI_ENABLE();
 8005a32:	4b15      	ldr	r3, [pc, #84]	@ (8005a88 <HAL_RCC_OscConfig+0x27c>)
 8005a34:	2201      	movs	r2, #1
 8005a36:	601a      	str	r2, [r3, #0]

      /* Get Start Tick*/
      tickstart = HAL_GetTick();
 8005a38:	f7fd f800 	bl	8002a3c <HAL_GetTick>
 8005a3c:	6138      	str	r0, [r7, #16]

      /* Wait till LSI is ready */
      while (__HAL_RCC_GET_FLAG(RCC_FLAG_LSIRDY) == RESET)
 8005a3e:	e008      	b.n	8005a52 <HAL_RCC_OscConfig+0x246>
      {
        if ((HAL_GetTick() - tickstart) > LSI_TIMEOUT_VALUE)
 8005a40:	f7fc fffc 	bl	8002a3c <HAL_GetTick>
 8005a44:	4602      	mov	r2, r0
 8005a46:	693b      	ldr	r3, [r7, #16]
 8005a48:	1ad3      	subs	r3, r2, r3
 8005a4a:	2b02      	cmp	r3, #2
 8005a4c:	d901      	bls.n	8005a52 <HAL_RCC_OscConfig+0x246>
        {
          return HAL_TIMEOUT;
 8005a4e:	2303      	movs	r3, #3
 8005a50:	e173      	b.n	8005d3a <HAL_RCC_OscConfig+0x52e>
      while (__HAL_RCC_GET_FLAG(RCC_FLAG_LSIRDY) == RESET)
 8005a52:	4b0b      	ldr	r3, [pc, #44]	@ (8005a80 <HAL_RCC_OscConfig+0x274>)
 8005a54:	6f5b      	ldr	r3, [r3, #116]	@ 0x74
 8005a56:	f003 0302 	and.w	r3, r3, #2
 8005a5a:	2b00      	cmp	r3, #0
 8005a5c:	d0f0      	beq.n	8005a40 <HAL_RCC_OscConfig+0x234>
 8005a5e:	e01b      	b.n	8005a98 <HAL_RCC_OscConfig+0x28c>
      }
    }
    else
    {
      /* Disable the Internal Low Speed oscillator (LSI). */
      __HAL_RCC_LSI_DISABLE();
 8005a60:	4b09      	ldr	r3, [pc, #36]	@ (8005a88 <HAL_RCC_OscConfig+0x27c>)
 8005a62:	2200      	movs	r2, #0
 8005a64:	601a      	str	r2, [r3, #0]

      /* Get Start Tick*/
      tickstart = HAL_GetTick();
 8005a66:	f7fc ffe9 	bl	8002a3c <HAL_GetTick>
 8005a6a:	6138      	str	r0, [r7, #16]

      /* Wait till LSI is ready */
      while (__HAL_RCC_GET_FLAG(RCC_FLAG_LSIRDY) != RESET)
 8005a6c:	e00e      	b.n	8005a8c <HAL_RCC_OscConfig+0x280>
      {
        if ((HAL_GetTick() - tickstart) > LSI_TIMEOUT_VALUE)
 8005a6e:	f7fc ffe5 	bl	8002a3c <HAL_GetTick>
 8005a72:	4602      	mov	r2, r0
 8005a74:	693b      	ldr	r3, [r7, #16]
 8005a76:	1ad3      	subs	r3, r2, r3
 8005a78:	2b02      	cmp	r3, #2
 8005a7a:	d907      	bls.n	8005a8c <HAL_RCC_OscConfig+0x280>
        {
          return HAL_TIMEOUT;
 8005a7c:	2303      	movs	r3, #3
 8005a7e:	e15c      	b.n	8005d3a <HAL_RCC_OscConfig+0x52e>
 8005a80:	40023800 	.word	0x40023800
 8005a84:	42470000 	.word	0x42470000
 8005a88:	42470e80 	.word	0x42470e80
      while (__HAL_RCC_GET_FLAG(RCC_FLAG_LSIRDY) != RESET)
 8005a8c:	4b8a      	ldr	r3, [pc, #552]	@ (8005cb8 <HAL_RCC_OscConfig+0x4ac>)
 8005a8e:	6f5b      	ldr	r3, [r3, #116]	@ 0x74
 8005a90:	f003 0302 	and.w	r3, r3, #2
 8005a94:	2b00      	cmp	r3, #0
 8005a96:	d1ea      	bne.n	8005a6e <HAL_RCC_OscConfig+0x262>
        }
      }
    }
  }
  /*------------------------------ LSE Configuration -------------------------*/
  if (((RCC_OscInitStruct->OscillatorType) & RCC_OSCILLATORTYPE_LSE) == RCC_OSCILLATORTYPE_LSE)
 8005a98:	687b      	ldr	r3, [r7, #4]
 8005a9a:	681b      	ldr	r3, [r3, #0]
 8005a9c:	f003 0304 	and.w	r3, r3, #4
 8005aa0:	2b00      	cmp	r3, #0
 8005aa2:	f000 8097 	beq.w	8005bd4 <HAL_RCC_OscConfig+0x3c8>
  {
    FlagStatus       pwrclkchanged = RESET;
 8005aa6:	2300      	movs	r3, #0
 8005aa8:	75fb      	strb	r3, [r7, #23]
    /* Check the parameters */
    assert_param(IS_RCC_LSE(RCC_OscInitStruct->LSEState));

    /* Update LSE configuration in Backup Domain control register    */
    /* Requires to enable write access to Backup Domain of necessary */
    if (__HAL_RCC_PWR_IS_CLK_DISABLED())
 8005aaa:	4b83      	ldr	r3, [pc, #524]	@ (8005cb8 <HAL_RCC_OscConfig+0x4ac>)
 8005aac:	6c1b      	ldr	r3, [r3, #64]	@ 0x40
 8005aae:	f003 5380 	and.w	r3, r3, #268435456	@ 0x10000000
 8005ab2:	2b00      	cmp	r3, #0
 8005ab4:	d10f      	bne.n	8005ad6 <HAL_RCC_OscConfig+0x2ca>
    {
      __HAL_RCC_PWR_CLK_ENABLE();
 8005ab6:	2300      	movs	r3, #0
 8005ab8:	60bb      	str	r3, [r7, #8]
 8005aba:	4b7f      	ldr	r3, [pc, #508]	@ (8005cb8 <HAL_RCC_OscConfig+0x4ac>)
 8005abc:	6c1b      	ldr	r3, [r3, #64]	@ 0x40
 8005abe:	4a7e      	ldr	r2, [pc, #504]	@ (8005cb8 <HAL_RCC_OscConfig+0x4ac>)
 8005ac0:	f043 5380 	orr.w	r3, r3, #268435456	@ 0x10000000
 8005ac4:	6413      	str	r3, [r2, #64]	@ 0x40
 8005ac6:	4b7c      	ldr	r3, [pc, #496]	@ (8005cb8 <HAL_RCC_OscConfig+0x4ac>)
 8005ac8:	6c1b      	ldr	r3, [r3, #64]	@ 0x40
 8005aca:	f003 5380 	and.w	r3, r3, #268435456	@ 0x10000000
 8005ace:	60bb      	str	r3, [r7, #8]
 8005ad0:	68bb      	ldr	r3, [r7, #8]
      pwrclkchanged = SET;
 8005ad2:	2301      	movs	r3, #1
 8005ad4:	75fb      	strb	r3, [r7, #23]
    }

    if (HAL_IS_BIT_CLR(PWR->CR, PWR_CR_DBP))
 8005ad6:	4b79      	ldr	r3, [pc, #484]	@ (8005cbc <HAL_RCC_OscConfig+0x4b0>)
 8005ad8:	681b      	ldr	r3, [r3, #0]
 8005ada:	f403 7380 	and.w	r3, r3, #256	@ 0x100
 8005ade:	2b00      	cmp	r3, #0
 8005ae0:	d118      	bne.n	8005b14 <HAL_RCC_OscConfig+0x308>
    {
      /* Enable write access to Backup domain */
      SET_BIT(PWR->CR, PWR_CR_DBP);
 8005ae2:	4b76      	ldr	r3, [pc, #472]	@ (8005cbc <HAL_RCC_OscConfig+0x4b0>)
 8005ae4:	681b      	ldr	r3, [r3, #0]
 8005ae6:	4a75      	ldr	r2, [pc, #468]	@ (8005cbc <HAL_RCC_OscConfig+0x4b0>)
 8005ae8:	f443 7380 	orr.w	r3, r3, #256	@ 0x100
 8005aec:	6013      	str	r3, [r2, #0]

      /* Wait for Backup domain Write protection disable */
      tickstart = HAL_GetTick();
 8005aee:	f7fc ffa5 	bl	8002a3c <HAL_GetTick>
 8005af2:	6138      	str	r0, [r7, #16]

      while (HAL_IS_BIT_CLR(PWR->CR, PWR_CR_DBP))
 8005af4:	e008      	b.n	8005b08 <HAL_RCC_OscConfig+0x2fc>
      {
        if ((HAL_GetTick() - tickstart) > RCC_DBP_TIMEOUT_VALUE)
 8005af6:	f7fc ffa1 	bl	8002a3c <HAL_GetTick>
 8005afa:	4602      	mov	r2, r0
 8005afc:	693b      	ldr	r3, [r7, #16]
 8005afe:	1ad3      	subs	r3, r2, r3
 8005b00:	2b02      	cmp	r3, #2
 8005b02:	d901      	bls.n	8005b08 <HAL_RCC_OscConfig+0x2fc>
        {
          return HAL_TIMEOUT;
 8005b04:	2303      	movs	r3, #3
 8005b06:	e118      	b.n	8005d3a <HAL_RCC_OscConfig+0x52e>
      while (HAL_IS_BIT_CLR(PWR->CR, PWR_CR_DBP))
 8005b08:	4b6c      	ldr	r3, [pc, #432]	@ (8005cbc <HAL_RCC_OscConfig+0x4b0>)
 8005b0a:	681b      	ldr	r3, [r3, #0]
 8005b0c:	f403 7380 	and.w	r3, r3, #256	@ 0x100
 8005b10:	2b00      	cmp	r3, #0
 8005b12:	d0f0      	beq.n	8005af6 <HAL_RCC_OscConfig+0x2ea>
        }
      }
    }

    /* Set the new LSE configuration -----------------------------------------*/
    __HAL_RCC_LSE_CONFIG(RCC_OscInitStruct->LSEState);
 8005b14:	687b      	ldr	r3, [r7, #4]
 8005b16:	689b      	ldr	r3, [r3, #8]
 8005b18:	2b01      	cmp	r3, #1
 8005b1a:	d106      	bne.n	8005b2a <HAL_RCC_OscConfig+0x31e>
 8005b1c:	4b66      	ldr	r3, [pc, #408]	@ (8005cb8 <HAL_RCC_OscConfig+0x4ac>)
 8005b1e:	6f1b      	ldr	r3, [r3, #112]	@ 0x70
 8005b20:	4a65      	ldr	r2, [pc, #404]	@ (8005cb8 <HAL_RCC_OscConfig+0x4ac>)
 8005b22:	f043 0301 	orr.w	r3, r3, #1
 8005b26:	6713      	str	r3, [r2, #112]	@ 0x70
 8005b28:	e01c      	b.n	8005b64 <HAL_RCC_OscConfig+0x358>
 8005b2a:	687b      	ldr	r3, [r7, #4]
 8005b2c:	689b      	ldr	r3, [r3, #8]
 8005b2e:	2b05      	cmp	r3, #5
 8005b30:	d10c      	bne.n	8005b4c <HAL_RCC_OscConfig+0x340>
 8005b32:	4b61      	ldr	r3, [pc, #388]	@ (8005cb8 <HAL_RCC_OscConfig+0x4ac>)
 8005b34:	6f1b      	ldr	r3, [r3, #112]	@ 0x70
 8005b36:	4a60      	ldr	r2, [pc, #384]	@ (8005cb8 <HAL_RCC_OscConfig+0x4ac>)
 8005b38:	f043 0304 	orr.w	r3, r3, #4
 8005b3c:	6713      	str	r3, [r2, #112]	@ 0x70
 8005b3e:	4b5e      	ldr	r3, [pc, #376]	@ (8005cb8 <HAL_RCC_OscConfig+0x4ac>)
 8005b40:	6f1b      	ldr	r3, [r3, #112]	@ 0x70
 8005b42:	4a5d      	ldr	r2, [pc, #372]	@ (8005cb8 <HAL_RCC_OscConfig+0x4ac>)
 8005b44:	f043 0301 	orr.w	r3, r3, #1
 8005b48:	6713      	str	r3, [r2, #112]	@ 0x70
 8005b4a:	e00b      	b.n	8005b64 <HAL_RCC_OscConfig+0x358>
 8005b4c:	4b5a      	ldr	r3, [pc, #360]	@ (8005cb8 <HAL_RCC_OscConfig+0x4ac>)
 8005b4e:	6f1b      	ldr	r3, [r3, #112]	@ 0x70
 8005b50:	4a59      	ldr	r2, [pc, #356]	@ (8005cb8 <HAL_RCC_OscConfig+0x4ac>)
 8005b52:	f023 0301 	bic.w	r3, r3, #1
 8005b56:	6713      	str	r3, [r2, #112]	@ 0x70
 8005b58:	4b57      	ldr	r3, [pc, #348]	@ (8005cb8 <HAL_RCC_OscConfig+0x4ac>)
 8005b5a:	6f1b      	ldr	r3, [r3, #112]	@ 0x70
 8005b5c:	4a56      	ldr	r2, [pc, #344]	@ (8005cb8 <HAL_RCC_OscConfig+0x4ac>)
 8005b5e:	f023 0304 	bic.w	r3, r3, #4
 8005b62:	6713      	str	r3, [r2, #112]	@ 0x70
    /* Check the LSE State */
    if ((RCC_OscInitStruct->LSEState) != RCC_LSE_OFF)
 8005b64:	687b      	ldr	r3, [r7, #4]
 8005b66:	689b      	ldr	r3, [r3, #8]
 8005b68:	2b00      	cmp	r3, #0
 8005b6a:	d015      	beq.n	8005b98 <HAL_RCC_OscConfig+0x38c>
    {
      /* Get Start Tick*/
      tickstart = HAL_GetTick();
 8005b6c:	f7fc ff66 	bl	8002a3c <HAL_GetTick>
 8005b70:	6138      	str	r0, [r7, #16]

      /* Wait till LSE is ready */
      while (__HAL_RCC_GET_FLAG(RCC_FLAG_LSERDY) == RESET)
 8005b72:	e00a      	b.n	8005b8a <HAL_RCC_OscConfig+0x37e>
      {
        if ((HAL_GetTick() - tickstart) > RCC_LSE_TIMEOUT_VALUE)
 8005b74:	f7fc ff62 	bl	8002a3c <HAL_GetTick>
 8005b78:	4602      	mov	r2, r0
 8005b7a:	693b      	ldr	r3, [r7, #16]
 8005b7c:	1ad3      	subs	r3, r2, r3
 8005b7e:	f241 3288 	movw	r2, #5000	@ 0x1388
 8005b82:	4293      	cmp	r3, r2
 8005b84:	d901      	bls.n	8005b8a <HAL_RCC_OscConfig+0x37e>
        {
          return HAL_TIMEOUT;
 8005b86:	2303      	movs	r3, #3
 8005b88:	e0d7      	b.n	8005d3a <HAL_RCC_OscConfig+0x52e>
      while (__HAL_RCC_GET_FLAG(RCC_FLAG_LSERDY) == RESET)
 8005b8a:	4b4b      	ldr	r3, [pc, #300]	@ (8005cb8 <HAL_RCC_OscConfig+0x4ac>)
 8005b8c:	6f1b      	ldr	r3, [r3, #112]	@ 0x70
 8005b8e:	f003 0302 	and.w	r3, r3, #2
 8005b92:	2b00      	cmp	r3, #0
 8005b94:	d0ee      	beq.n	8005b74 <HAL_RCC_OscConfig+0x368>
 8005b96:	e014      	b.n	8005bc2 <HAL_RCC_OscConfig+0x3b6>
      }
    }
    else
    {
      /* Get Start Tick*/
      tickstart = HAL_GetTick();
 8005b98:	f7fc ff50 	bl	8002a3c <HAL_GetTick>
 8005b9c:	6138      	str	r0, [r7, #16]

      /* Wait till LSE is ready */
      while (__HAL_RCC_GET_FLAG(RCC_FLAG_LSERDY) != RESET)
 8005b9e:	e00a      	b.n	8005bb6 <HAL_RCC_OscConfig+0x3aa>
      {
        if ((HAL_GetTick() - tickstart) > RCC_LSE_TIMEOUT_VALUE)
 8005ba0:	f7fc ff4c 	bl	8002a3c <HAL_GetTick>
 8005ba4:	4602      	mov	r2, r0
 8005ba6:	693b      	ldr	r3, [r7, #16]
 8005ba8:	1ad3      	subs	r3, r2, r3
 8005baa:	f241 3288 	movw	r2, #5000	@ 0x1388
 8005bae:	4293      	cmp	r3, r2
 8005bb0:	d901      	bls.n	8005bb6 <HAL_RCC_OscConfig+0x3aa>
        {
          return HAL_TIMEOUT;
 8005bb2:	2303      	movs	r3, #3
 8005bb4:	e0c1      	b.n	8005d3a <HAL_RCC_OscConfig+0x52e>
      while (__HAL_RCC_GET_FLAG(RCC_FLAG_LSERDY) != RESET)
 8005bb6:	4b40      	ldr	r3, [pc, #256]	@ (8005cb8 <HAL_RCC_OscConfig+0x4ac>)
 8005bb8:	6f1b      	ldr	r3, [r3, #112]	@ 0x70
 8005bba:	f003 0302 	and.w	r3, r3, #2
 8005bbe:	2b00      	cmp	r3, #0
 8005bc0:	d1ee      	bne.n	8005ba0 <HAL_RCC_OscConfig+0x394>
        }
      }
    }

    /* Restore clock configuration if changed */
    if (pwrclkchanged == SET)
 8005bc2:	7dfb      	ldrb	r3, [r7, #23]
 8005bc4:	2b01      	cmp	r3, #1
 8005bc6:	d105      	bne.n	8005bd4 <HAL_RCC_OscConfig+0x3c8>
    {
      __HAL_RCC_PWR_CLK_DISABLE();
 8005bc8:	4b3b      	ldr	r3, [pc, #236]	@ (8005cb8 <HAL_RCC_OscConfig+0x4ac>)
 8005bca:	6c1b      	ldr	r3, [r3, #64]	@ 0x40
 8005bcc:	4a3a      	ldr	r2, [pc, #232]	@ (8005cb8 <HAL_RCC_OscConfig+0x4ac>)
 8005bce:	f023 5380 	bic.w	r3, r3, #268435456	@ 0x10000000
 8005bd2:	6413      	str	r3, [r2, #64]	@ 0x40
    }
  }
  /*-------------------------------- PLL Configuration -----------------------*/
  /* Check the parameters */
  assert_param(IS_RCC_PLL(RCC_OscInitStruct->PLL.PLLState));
  if ((RCC_OscInitStruct->PLL.PLLState) != RCC_PLL_NONE)
 8005bd4:	687b      	ldr	r3, [r7, #4]
 8005bd6:	699b      	ldr	r3, [r3, #24]
 8005bd8:	2b00      	cmp	r3, #0
 8005bda:	f000 80ad 	beq.w	8005d38 <HAL_RCC_OscConfig+0x52c>
  {
    /* Check if the PLL is used as system clock or not */
    if (__HAL_RCC_GET_SYSCLK_SOURCE() != RCC_CFGR_SWS_PLL)
 8005bde:	4b36      	ldr	r3, [pc, #216]	@ (8005cb8 <HAL_RCC_OscConfig+0x4ac>)
 8005be0:	689b      	ldr	r3, [r3, #8]
 8005be2:	f003 030c 	and.w	r3, r3, #12
 8005be6:	2b08      	cmp	r3, #8
 8005be8:	d060      	beq.n	8005cac <HAL_RCC_OscConfig+0x4a0>
    {
      if ((RCC_OscInitStruct->PLL.PLLState) == RCC_PLL_ON)
 8005bea:	687b      	ldr	r3, [r7, #4]
 8005bec:	699b      	ldr	r3, [r3, #24]
 8005bee:	2b02      	cmp	r3, #2
 8005bf0:	d145      	bne.n	8005c7e <HAL_RCC_OscConfig+0x472>
        assert_param(IS_RCC_PLLP_VALUE(RCC_OscInitStruct->PLL.PLLP));
        assert_param(IS_RCC_PLLQ_VALUE(RCC_OscInitStruct->PLL.PLLQ));
        assert_param(IS_RCC_PLLR_VALUE(RCC_OscInitStruct->PLL.PLLR));

        /* Disable the main PLL. */
        __HAL_RCC_PLL_DISABLE();
 8005bf2:	4b33      	ldr	r3, [pc, #204]	@ (8005cc0 <HAL_RCC_OscConfig+0x4b4>)
 8005bf4:	2200      	movs	r2, #0
 8005bf6:	601a      	str	r2, [r3, #0]

        /* Get Start Tick*/
        tickstart = HAL_GetTick();
 8005bf8:	f7fc ff20 	bl	8002a3c <HAL_GetTick>
 8005bfc:	6138      	str	r0, [r7, #16]

        /* Wait till PLL is ready */
        while (__HAL_RCC_GET_FLAG(RCC_FLAG_PLLRDY) != RESET)
 8005bfe:	e008      	b.n	8005c12 <HAL_RCC_OscConfig+0x406>
        {
          if ((HAL_GetTick() - tickstart) > PLL_TIMEOUT_VALUE)
 8005c00:	f7fc ff1c 	bl	8002a3c <HAL_GetTick>
 8005c04:	4602      	mov	r2, r0
 8005c06:	693b      	ldr	r3, [r7, #16]
 8005c08:	1ad3      	subs	r3, r2, r3
 8005c0a:	2b02      	cmp	r3, #2
 8005c0c:	d901      	bls.n	8005c12 <HAL_RCC_OscConfig+0x406>
          {
            return HAL_TIMEOUT;
 8005c0e:	2303      	movs	r3, #3
 8005c10:	e093      	b.n	8005d3a <HAL_RCC_OscConfig+0x52e>
        while (__HAL_RCC_GET_FLAG(RCC_FLAG_PLLRDY) != RESET)
 8005c12:	4b29      	ldr	r3, [pc, #164]	@ (8005cb8 <HAL_RCC_OscConfig+0x4ac>)
 8005c14:	681b      	ldr	r3, [r3, #0]
 8005c16:	f003 7300 	and.w	r3, r3, #33554432	@ 0x2000000
 8005c1a:	2b00      	cmp	r3, #0
 8005c1c:	d1f0      	bne.n	8005c00 <HAL_RCC_OscConfig+0x3f4>
          }
        }

        /* Configure the main PLL clock source, multiplication and division factors. */
        WRITE_REG(RCC->PLLCFGR, (RCC_OscInitStruct->PLL.PLLSource                                            | \
 8005c1e:	687b      	ldr	r3, [r7, #4]
 8005c20:	69da      	ldr	r2, [r3, #28]
 8005c22:	687b      	ldr	r3, [r7, #4]
 8005c24:	6a1b      	ldr	r3, [r3, #32]
 8005c26:	431a      	orrs	r2, r3
 8005c28:	687b      	ldr	r3, [r7, #4]
 8005c2a:	6a5b      	ldr	r3, [r3, #36]	@ 0x24
 8005c2c:	019b      	lsls	r3, r3, #6
 8005c2e:	431a      	orrs	r2, r3
 8005c30:	687b      	ldr	r3, [r7, #4]
 8005c32:	6a9b      	ldr	r3, [r3, #40]	@ 0x28
 8005c34:	085b      	lsrs	r3, r3, #1
 8005c36:	3b01      	subs	r3, #1
 8005c38:	041b      	lsls	r3, r3, #16
 8005c3a:	431a      	orrs	r2, r3
 8005c3c:	687b      	ldr	r3, [r7, #4]
 8005c3e:	6adb      	ldr	r3, [r3, #44]	@ 0x2c
 8005c40:	061b      	lsls	r3, r3, #24
 8005c42:	431a      	orrs	r2, r3
 8005c44:	687b      	ldr	r3, [r7, #4]
 8005c46:	6b1b      	ldr	r3, [r3, #48]	@ 0x30
 8005c48:	071b      	lsls	r3, r3, #28
 8005c4a:	491b      	ldr	r1, [pc, #108]	@ (8005cb8 <HAL_RCC_OscConfig+0x4ac>)
 8005c4c:	4313      	orrs	r3, r2
 8005c4e:	604b      	str	r3, [r1, #4]
                                 (RCC_OscInitStruct->PLL.PLLN << RCC_PLLCFGR_PLLN_Pos)                       | \
                                 (((RCC_OscInitStruct->PLL.PLLP >> 1U) - 1U) << RCC_PLLCFGR_PLLP_Pos)        | \
                                 (RCC_OscInitStruct->PLL.PLLQ << RCC_PLLCFGR_PLLQ_Pos)                       | \
                                 (RCC_OscInitStruct->PLL.PLLR << RCC_PLLCFGR_PLLR_Pos)));
        /* Enable the main PLL. */
        __HAL_RCC_PLL_ENABLE();
 8005c50:	4b1b      	ldr	r3, [pc, #108]	@ (8005cc0 <HAL_RCC_OscConfig+0x4b4>)
 8005c52:	2201      	movs	r2, #1
 8005c54:	601a      	str	r2, [r3, #0]

        /* Get Start Tick*/
        tickstart = HAL_GetTick();
 8005c56:	f7fc fef1 	bl	8002a3c <HAL_GetTick>
 8005c5a:	6138      	str	r0, [r7, #16]

        /* Wait till PLL is ready */
        while (__HAL_RCC_GET_FLAG(RCC_FLAG_PLLRDY) == RESET)
 8005c5c:	e008      	b.n	8005c70 <HAL_RCC_OscConfig+0x464>
        {
          if ((HAL_GetTick() - tickstart) > PLL_TIMEOUT_VALUE)
 8005c5e:	f7fc feed 	bl	8002a3c <HAL_GetTick>
 8005c62:	4602      	mov	r2, r0
 8005c64:	693b      	ldr	r3, [r7, #16]
 8005c66:	1ad3      	subs	r3, r2, r3
 8005c68:	2b02      	cmp	r3, #2
 8005c6a:	d901      	bls.n	8005c70 <HAL_RCC_OscConfig+0x464>
          {
            return HAL_TIMEOUT;
 8005c6c:	2303      	movs	r3, #3
 8005c6e:	e064      	b.n	8005d3a <HAL_RCC_OscConfig+0x52e>
        while (__HAL_RCC_GET_FLAG(RCC_FLAG_PLLRDY) == RESET)
 8005c70:	4b11      	ldr	r3, [pc, #68]	@ (8005cb8 <HAL_RCC_OscConfig+0x4ac>)
 8005c72:	681b      	ldr	r3, [r3, #0]
 8005c74:	f003 7300 	and.w	r3, r3, #33554432	@ 0x2000000
 8005c78:	2b00      	cmp	r3, #0
 8005c7a:	d0f0      	beq.n	8005c5e <HAL_RCC_OscConfig+0x452>
 8005c7c:	e05c      	b.n	8005d38 <HAL_RCC_OscConfig+0x52c>
        }
      }
      else
      {
        /* Disable the main PLL. */
        __HAL_RCC_PLL_DISABLE();
 8005c7e:	4b10      	ldr	r3, [pc, #64]	@ (8005cc0 <HAL_RCC_OscConfig+0x4b4>)
 8005c80:	2200      	movs	r2, #0
 8005c82:	601a      	str	r2, [r3, #0]

        /* Get Start Tick*/
        tickstart = HAL_GetTick();
 8005c84:	f7fc feda 	bl	8002a3c <HAL_GetTick>
 8005c88:	6138      	str	r0, [r7, #16]

        /* Wait till PLL is ready */
        while (__HAL_RCC_GET_FLAG(RCC_FLAG_PLLRDY) != RESET)
 8005c8a:	e008      	b.n	8005c9e <HAL_RCC_OscConfig+0x492>
        {
          if ((HAL_GetTick() - tickstart) > PLL_TIMEOUT_VALUE)
 8005c8c:	f7fc fed6 	bl	8002a3c <HAL_GetTick>
 8005c90:	4602      	mov	r2, r0
 8005c92:	693b      	ldr	r3, [r7, #16]
 8005c94:	1ad3      	subs	r3, r2, r3
 8005c96:	2b02      	cmp	r3, #2
 8005c98:	d901      	bls.n	8005c9e <HAL_RCC_OscConfig+0x492>
          {
            return HAL_TIMEOUT;
 8005c9a:	2303      	movs	r3, #3
 8005c9c:	e04d      	b.n	8005d3a <HAL_RCC_OscConfig+0x52e>
        while (__HAL_RCC_GET_FLAG(RCC_FLAG_PLLRDY) != RESET)
 8005c9e:	4b06      	ldr	r3, [pc, #24]	@ (8005cb8 <HAL_RCC_OscConfig+0x4ac>)
 8005ca0:	681b      	ldr	r3, [r3, #0]
 8005ca2:	f003 7300 	and.w	r3, r3, #33554432	@ 0x2000000
 8005ca6:	2b00      	cmp	r3, #0
 8005ca8:	d1f0      	bne.n	8005c8c <HAL_RCC_OscConfig+0x480>
 8005caa:	e045      	b.n	8005d38 <HAL_RCC_OscConfig+0x52c>
      }
    }
    else
    {
      /* Check if there is a request to disable the PLL used as System clock source */
      if ((RCC_OscInitStruct->PLL.PLLState) == RCC_PLL_OFF)
 8005cac:	687b      	ldr	r3, [r7, #4]
 8005cae:	699b      	ldr	r3, [r3, #24]
 8005cb0:	2b01      	cmp	r3, #1
 8005cb2:	d107      	bne.n	8005cc4 <HAL_RCC_OscConfig+0x4b8>
      {
        return HAL_ERROR;
 8005cb4:	2301      	movs	r3, #1
 8005cb6:	e040      	b.n	8005d3a <HAL_RCC_OscConfig+0x52e>
 8005cb8:	40023800 	.word	0x40023800
 8005cbc:	40007000 	.word	0x40007000
 8005cc0:	42470060 	.word	0x42470060
      }
      else
      {
        /* Do not return HAL_ERROR if request repeats the current configuration */
        pll_config = RCC->PLLCFGR;
 8005cc4:	4b1f      	ldr	r3, [pc, #124]	@ (8005d44 <HAL_RCC_OscConfig+0x538>)
 8005cc6:	685b      	ldr	r3, [r3, #4]
 8005cc8:	60fb      	str	r3, [r7, #12]
#if defined (RCC_PLLCFGR_PLLR)
        if (((RCC_OscInitStruct->PLL.PLLState) == RCC_PLL_OFF) ||
 8005cca:	687b      	ldr	r3, [r7, #4]
 8005ccc:	699b      	ldr	r3, [r3, #24]
 8005cce:	2b01      	cmp	r3, #1
 8005cd0:	d030      	beq.n	8005d34 <HAL_RCC_OscConfig+0x528>
            (READ_BIT(pll_config, RCC_PLLCFGR_PLLSRC) != RCC_OscInitStruct->PLL.PLLSource) ||
 8005cd2:	68fb      	ldr	r3, [r7, #12]
 8005cd4:	f403 0280 	and.w	r2, r3, #4194304	@ 0x400000
 8005cd8:	687b      	ldr	r3, [r7, #4]
 8005cda:	69db      	ldr	r3, [r3, #28]
        if (((RCC_OscInitStruct->PLL.PLLState) == RCC_PLL_OFF) ||
 8005cdc:	429a      	cmp	r2, r3
 8005cde:	d129      	bne.n	8005d34 <HAL_RCC_OscConfig+0x528>
            (READ_BIT(pll_config, RCC_PLLCFGR_PLLM) != (RCC_OscInitStruct->PLL.PLLM) << RCC_PLLCFGR_PLLM_Pos) ||
 8005ce0:	68fb      	ldr	r3, [r7, #12]
 8005ce2:	f003 023f 	and.w	r2, r3, #63	@ 0x3f
 8005ce6:	687b      	ldr	r3, [r7, #4]
 8005ce8:	6a1b      	ldr	r3, [r3, #32]
            (READ_BIT(pll_config, RCC_PLLCFGR_PLLSRC) != RCC_OscInitStruct->PLL.PLLSource) ||
 8005cea:	429a      	cmp	r2, r3
 8005cec:	d122      	bne.n	8005d34 <HAL_RCC_OscConfig+0x528>
            (READ_BIT(pll_config, RCC_PLLCFGR_PLLN) != (RCC_OscInitStruct->PLL.PLLN) << RCC_PLLCFGR_PLLN_Pos) ||
 8005cee:	68fa      	ldr	r2, [r7, #12]
 8005cf0:	f647 73c0 	movw	r3, #32704	@ 0x7fc0
 8005cf4:	4013      	ands	r3, r2
 8005cf6:	687a      	ldr	r2, [r7, #4]
 8005cf8:	6a52      	ldr	r2, [r2, #36]	@ 0x24
 8005cfa:	0192      	lsls	r2, r2, #6
            (READ_BIT(pll_config, RCC_PLLCFGR_PLLM) != (RCC_OscInitStruct->PLL.PLLM) << RCC_PLLCFGR_PLLM_Pos) ||
 8005cfc:	4293      	cmp	r3, r2
 8005cfe:	d119      	bne.n	8005d34 <HAL_RCC_OscConfig+0x528>
            (READ_BIT(pll_config, RCC_PLLCFGR_PLLP) != (((RCC_OscInitStruct->PLL.PLLP >> 1U) - 1U)) << RCC_PLLCFGR_PLLP_Pos) ||
 8005d00:	68fb      	ldr	r3, [r7, #12]
 8005d02:	f403 3240 	and.w	r2, r3, #196608	@ 0x30000
 8005d06:	687b      	ldr	r3, [r7, #4]
 8005d08:	6a9b      	ldr	r3, [r3, #40]	@ 0x28
 8005d0a:	085b      	lsrs	r3, r3, #1
 8005d0c:	3b01      	subs	r3, #1
 8005d0e:	041b      	lsls	r3, r3, #16
            (READ_BIT(pll_config, RCC_PLLCFGR_PLLN) != (RCC_OscInitStruct->PLL.PLLN) << RCC_PLLCFGR_PLLN_Pos) ||
 8005d10:	429a      	cmp	r2, r3
 8005d12:	d10f      	bne.n	8005d34 <HAL_RCC_OscConfig+0x528>
            (READ_BIT(pll_config, RCC_PLLCFGR_PLLQ) != (RCC_OscInitStruct->PLL.PLLQ << RCC_PLLCFGR_PLLQ_Pos)) ||
 8005d14:	68fb      	ldr	r3, [r7, #12]
 8005d16:	f003 6270 	and.w	r2, r3, #251658240	@ 0xf000000
 8005d1a:	687b      	ldr	r3, [r7, #4]
 8005d1c:	6adb      	ldr	r3, [r3, #44]	@ 0x2c
 8005d1e:	061b      	lsls	r3, r3, #24
            (READ_BIT(pll_config, RCC_PLLCFGR_PLLP) != (((RCC_OscInitStruct->PLL.PLLP >> 1U) - 1U)) << RCC_PLLCFGR_PLLP_Pos) ||
 8005d20:	429a      	cmp	r2, r3
 8005d22:	d107      	bne.n	8005d34 <HAL_RCC_OscConfig+0x528>
            (READ_BIT(pll_config, RCC_PLLCFGR_PLLR) != (RCC_OscInitStruct->PLL.PLLR << RCC_PLLCFGR_PLLR_Pos)))
 8005d24:	68fb      	ldr	r3, [r7, #12]
 8005d26:	f003 42e0 	and.w	r2, r3, #1879048192	@ 0x70000000
 8005d2a:	687b      	ldr	r3, [r7, #4]
 8005d2c:	6b1b      	ldr	r3, [r3, #48]	@ 0x30
 8005d2e:	071b      	lsls	r3, r3, #28
            (READ_BIT(pll_config, RCC_PLLCFGR_PLLQ) != (RCC_OscInitStruct->PLL.PLLQ << RCC_PLLCFGR_PLLQ_Pos)) ||
 8005d30:	429a      	cmp	r2, r3
 8005d32:	d001      	beq.n	8005d38 <HAL_RCC_OscConfig+0x52c>
            (READ_BIT(pll_config, RCC_PLLCFGR_PLLN) != (RCC_OscInitStruct->PLL.PLLN) << RCC_PLLCFGR_PLLN_Pos) ||
            (READ_BIT(pll_config, RCC_PLLCFGR_PLLP) != (((RCC_OscInitStruct->PLL.PLLP >> 1U) - 1U)) << RCC_PLLCFGR_PLLP_Pos) ||
            (READ_BIT(pll_config, RCC_PLLCFGR_PLLQ) != (RCC_OscInitStruct->PLL.PLLQ << RCC_PLLCFGR_PLLQ_Pos)))
#endif /* RCC_PLLCFGR_PLLR */
        {
          return HAL_ERROR;
 8005d34:	2301      	movs	r3, #1
 8005d36:	e000      	b.n	8005d3a <HAL_RCC_OscConfig+0x52e>
        }
      }
    }
  }
  return HAL_OK;
 8005d38:	2300      	movs	r3, #0
}
 8005d3a:	4618      	mov	r0, r3
 8005d3c:	3718      	adds	r7, #24
 8005d3e:	46bd      	mov	sp, r7
 8005d40:	bd80      	pop	{r7, pc}
 8005d42:	bf00      	nop
 8005d44:	40023800 	.word	0x40023800

08005d48 <HAL_SPI_Init>:
  * @param  hspi pointer to a SPI_HandleTypeDef structure that contains
  *               the configuration information for SPI module.
  * @retval HAL status
  */
HAL_StatusTypeDef HAL_SPI_Init(SPI_HandleTypeDef *hspi)
{
 8005d48:	b580      	push	{r7, lr}
 8005d4a:	b082      	sub	sp, #8
 8005d4c:	af00      	add	r7, sp, #0
 8005d4e:	6078      	str	r0, [r7, #4]
  /* Check the SPI handle allocation */
  if (hspi == NULL)
 8005d50:	687b      	ldr	r3, [r7, #4]
 8005d52:	2b00      	cmp	r3, #0
 8005d54:	d101      	bne.n	8005d5a <HAL_SPI_Init+0x12>
  {
    return HAL_ERROR;
 8005d56:	2301      	movs	r3, #1
 8005d58:	e07b      	b.n	8005e52 <HAL_SPI_Init+0x10a>
  assert_param(IS_SPI_DATASIZE(hspi->Init.DataSize));
  assert_param(IS_SPI_NSS(hspi->Init.NSS));
  assert_param(IS_SPI_BAUDRATE_PRESCALER(hspi->Init.BaudRatePrescaler));
  assert_param(IS_SPI_FIRST_BIT(hspi->Init.FirstBit));
  assert_param(IS_SPI_TIMODE(hspi->Init.TIMode));
  if (hspi->Init.TIMode == SPI_TIMODE_DISABLE)
 8005d5a:	687b      	ldr	r3, [r7, #4]
 8005d5c:	6a5b      	ldr	r3, [r3, #36]	@ 0x24
 8005d5e:	2b00      	cmp	r3, #0
 8005d60:	d108      	bne.n	8005d74 <HAL_SPI_Init+0x2c>
  {
    assert_param(IS_SPI_CPOL(hspi->Init.CLKPolarity));
    assert_param(IS_SPI_CPHA(hspi->Init.CLKPhase));

    if (hspi->Init.Mode == SPI_MODE_MASTER)
 8005d62:	687b      	ldr	r3, [r7, #4]
 8005d64:	685b      	ldr	r3, [r3, #4]
 8005d66:	f5b3 7f82 	cmp.w	r3, #260	@ 0x104
 8005d6a:	d009      	beq.n	8005d80 <HAL_SPI_Init+0x38>
      assert_param(IS_SPI_BAUDRATE_PRESCALER(hspi->Init.BaudRatePrescaler));
    }
    else
    {
      /* Baudrate prescaler not use in Motoraola Slave mode. force to default value */
      hspi->Init.BaudRatePrescaler = SPI_BAUDRATEPRESCALER_2;
 8005d6c:	687b      	ldr	r3, [r7, #4]
 8005d6e:	2200      	movs	r2, #0
 8005d70:	61da      	str	r2, [r3, #28]
 8005d72:	e005      	b.n	8005d80 <HAL_SPI_Init+0x38>
  else
  {
    assert_param(IS_SPI_BAUDRATE_PRESCALER(hspi->Init.BaudRatePrescaler));

    /* Force polarity and phase to TI protocaol requirements */
    hspi->Init.CLKPolarity = SPI_POLARITY_LOW;
 8005d74:	687b      	ldr	r3, [r7, #4]
 8005d76:	2200      	movs	r2, #0
 8005d78:	611a      	str	r2, [r3, #16]
    hspi->Init.CLKPhase    = SPI_PHASE_1EDGE;
 8005d7a:	687b      	ldr	r3, [r7, #4]
 8005d7c:	2200      	movs	r2, #0
 8005d7e:	615a      	str	r2, [r3, #20]
  if (hspi->Init.CRCCalculation == SPI_CRCCALCULATION_ENABLE)
  {
    assert_param(IS_SPI_CRC_POLYNOMIAL(hspi->Init.CRCPolynomial));
  }
#else
  hspi->Init.CRCCalculation = SPI_CRCCALCULATION_DISABLE;
 8005d80:	687b      	ldr	r3, [r7, #4]
 8005d82:	2200      	movs	r2, #0
 8005d84:	629a      	str	r2, [r3, #40]	@ 0x28
#endif /* USE_SPI_CRC */

  if (hspi->State == HAL_SPI_STATE_RESET)
 8005d86:	687b      	ldr	r3, [r7, #4]
 8005d88:	f893 3051 	ldrb.w	r3, [r3, #81]	@ 0x51
 8005d8c:	b2db      	uxtb	r3, r3
 8005d8e:	2b00      	cmp	r3, #0
 8005d90:	d106      	bne.n	8005da0 <HAL_SPI_Init+0x58>
  {
    /* Allocate lock resource and initialize it */
    hspi->Lock = HAL_UNLOCKED;
 8005d92:	687b      	ldr	r3, [r7, #4]
 8005d94:	2200      	movs	r2, #0
 8005d96:	f883 2050 	strb.w	r2, [r3, #80]	@ 0x50

    /* Init the low level hardware : GPIO, CLOCK, NVIC... */
    hspi->MspInitCallback(hspi);
#else
    /* Init the low level hardware : GPIO, CLOCK, NVIC... */
    HAL_SPI_MspInit(hspi);
 8005d9a:	6878      	ldr	r0, [r7, #4]
 8005d9c:	f7fb fe88 	bl	8001ab0 <HAL_SPI_MspInit>
#endif /* USE_HAL_SPI_REGISTER_CALLBACKS */
  }

  hspi->State = HAL_SPI_STATE_BUSY;
 8005da0:	687b      	ldr	r3, [r7, #4]
 8005da2:	2202      	movs	r2, #2
 8005da4:	f883 2051 	strb.w	r2, [r3, #81]	@ 0x51

  /* Disable the selected SPI peripheral */
  __HAL_SPI_DISABLE(hspi);
 8005da8:	687b      	ldr	r3, [r7, #4]
 8005daa:	681b      	ldr	r3, [r3, #0]
 8005dac:	681a      	ldr	r2, [r3, #0]
 8005dae:	687b      	ldr	r3, [r7, #4]
 8005db0:	681b      	ldr	r3, [r3, #0]
 8005db2:	f022 0240 	bic.w	r2, r2, #64	@ 0x40
 8005db6:	601a      	str	r2, [r3, #0]

  /*----------------------- SPIx CR1 & CR2 Configuration ---------------------*/
  /* Configure : SPI Mode, Communication Mode, Data size, Clock polarity and phase, NSS management,
  Communication speed, First bit and CRC calculation state */
  WRITE_REG(hspi->Instance->CR1, ((hspi->Init.Mode & (SPI_CR1_MSTR | SPI_CR1_SSI)) |
 8005db8:	687b      	ldr	r3, [r7, #4]
 8005dba:	685b      	ldr	r3, [r3, #4]
 8005dbc:	f403 7282 	and.w	r2, r3, #260	@ 0x104
 8005dc0:	687b      	ldr	r3, [r7, #4]
 8005dc2:	689b      	ldr	r3, [r3, #8]
 8005dc4:	f403 4304 	and.w	r3, r3, #33792	@ 0x8400
 8005dc8:	431a      	orrs	r2, r3
 8005dca:	687b      	ldr	r3, [r7, #4]
 8005dcc:	68db      	ldr	r3, [r3, #12]
 8005dce:	f403 6300 	and.w	r3, r3, #2048	@ 0x800
 8005dd2:	431a      	orrs	r2, r3
 8005dd4:	687b      	ldr	r3, [r7, #4]
 8005dd6:	691b      	ldr	r3, [r3, #16]
 8005dd8:	f003 0302 	and.w	r3, r3, #2
 8005ddc:	431a      	orrs	r2, r3
 8005dde:	687b      	ldr	r3, [r7, #4]
 8005de0:	695b      	ldr	r3, [r3, #20]
 8005de2:	f003 0301 	and.w	r3, r3, #1
 8005de6:	431a      	orrs	r2, r3
 8005de8:	687b      	ldr	r3, [r7, #4]
 8005dea:	699b      	ldr	r3, [r3, #24]
 8005dec:	f403 7300 	and.w	r3, r3, #512	@ 0x200
 8005df0:	431a      	orrs	r2, r3
 8005df2:	687b      	ldr	r3, [r7, #4]
 8005df4:	69db      	ldr	r3, [r3, #28]
 8005df6:	f003 0338 	and.w	r3, r3, #56	@ 0x38
 8005dfa:	431a      	orrs	r2, r3
 8005dfc:	687b      	ldr	r3, [r7, #4]
 8005dfe:	6a1b      	ldr	r3, [r3, #32]
 8005e00:	f003 0380 	and.w	r3, r3, #128	@ 0x80
 8005e04:	ea42 0103 	orr.w	r1, r2, r3
 8005e08:	687b      	ldr	r3, [r7, #4]
 8005e0a:	6a9b      	ldr	r3, [r3, #40]	@ 0x28
 8005e0c:	f403 5200 	and.w	r2, r3, #8192	@ 0x2000
 8005e10:	687b      	ldr	r3, [r7, #4]
 8005e12:	681b      	ldr	r3, [r3, #0]
 8005e14:	430a      	orrs	r2, r1
 8005e16:	601a      	str	r2, [r3, #0]
                                  (hspi->Init.BaudRatePrescaler & SPI_CR1_BR_Msk) |
                                  (hspi->Init.FirstBit  & SPI_CR1_LSBFIRST) |
                                  (hspi->Init.CRCCalculation & SPI_CR1_CRCEN)));

  /* Configure : NSS management, TI Mode */
  WRITE_REG(hspi->Instance->CR2, (((hspi->Init.NSS >> 16U) & SPI_CR2_SSOE) | (hspi->Init.TIMode & SPI_CR2_FRF)));
 8005e18:	687b      	ldr	r3, [r7, #4]
 8005e1a:	699b      	ldr	r3, [r3, #24]
 8005e1c:	0c1b      	lsrs	r3, r3, #16
 8005e1e:	f003 0104 	and.w	r1, r3, #4
 8005e22:	687b      	ldr	r3, [r7, #4]
 8005e24:	6a5b      	ldr	r3, [r3, #36]	@ 0x24
 8005e26:	f003 0210 	and.w	r2, r3, #16
 8005e2a:	687b      	ldr	r3, [r7, #4]
 8005e2c:	681b      	ldr	r3, [r3, #0]
 8005e2e:	430a      	orrs	r2, r1
 8005e30:	605a      	str	r2, [r3, #4]
  }
#endif /* USE_SPI_CRC */

#if defined(SPI_I2SCFGR_I2SMOD)
  /* Activate the SPI mode (Make sure that I2SMOD bit in I2SCFGR register is reset) */
  CLEAR_BIT(hspi->Instance->I2SCFGR, SPI_I2SCFGR_I2SMOD);
 8005e32:	687b      	ldr	r3, [r7, #4]
 8005e34:	681b      	ldr	r3, [r3, #0]
 8005e36:	69da      	ldr	r2, [r3, #28]
 8005e38:	687b      	ldr	r3, [r7, #4]
 8005e3a:	681b      	ldr	r3, [r3, #0]
 8005e3c:	f422 6200 	bic.w	r2, r2, #2048	@ 0x800
 8005e40:	61da      	str	r2, [r3, #28]
#endif /* SPI_I2SCFGR_I2SMOD */

  hspi->ErrorCode = HAL_SPI_ERROR_NONE;
 8005e42:	687b      	ldr	r3, [r7, #4]
 8005e44:	2200      	movs	r2, #0
 8005e46:	655a      	str	r2, [r3, #84]	@ 0x54
  hspi->State     = HAL_SPI_STATE_READY;
 8005e48:	687b      	ldr	r3, [r7, #4]
 8005e4a:	2201      	movs	r2, #1
 8005e4c:	f883 2051 	strb.w	r2, [r3, #81]	@ 0x51

  return HAL_OK;
 8005e50:	2300      	movs	r3, #0
}
 8005e52:	4618      	mov	r0, r3
 8005e54:	3708      	adds	r7, #8
 8005e56:	46bd      	mov	sp, r7
 8005e58:	bd80      	pop	{r7, pc}

08005e5a <HAL_SPI_Transmit>:
  * @param  Size amount of data to be sent
  * @param  Timeout Timeout duration
  * @retval HAL status
  */
HAL_StatusTypeDef HAL_SPI_Transmit(SPI_HandleTypeDef *hspi, const uint8_t *pData, uint16_t Size, uint32_t Timeout)
{
 8005e5a:	b580      	push	{r7, lr}
 8005e5c:	b088      	sub	sp, #32
 8005e5e:	af00      	add	r7, sp, #0
 8005e60:	60f8      	str	r0, [r7, #12]
 8005e62:	60b9      	str	r1, [r7, #8]
 8005e64:	603b      	str	r3, [r7, #0]
 8005e66:	4613      	mov	r3, r2
 8005e68:	80fb      	strh	r3, [r7, #6]

  /* Check Direction parameter */
  assert_param(IS_SPI_DIRECTION_2LINES_OR_1LINE(hspi->Init.Direction));

  /* Init tickstart for timeout management*/
  tickstart = HAL_GetTick();
 8005e6a:	f7fc fde7 	bl	8002a3c <HAL_GetTick>
 8005e6e:	61f8      	str	r0, [r7, #28]
  initial_TxXferCount = Size;
 8005e70:	88fb      	ldrh	r3, [r7, #6]
 8005e72:	837b      	strh	r3, [r7, #26]

  if (hspi->State != HAL_SPI_STATE_READY)
 8005e74:	68fb      	ldr	r3, [r7, #12]
 8005e76:	f893 3051 	ldrb.w	r3, [r3, #81]	@ 0x51
 8005e7a:	b2db      	uxtb	r3, r3
 8005e7c:	2b01      	cmp	r3, #1
 8005e7e:	d001      	beq.n	8005e84 <HAL_SPI_Transmit+0x2a>
  {
    return HAL_BUSY;
 8005e80:	2302      	movs	r3, #2
 8005e82:	e12a      	b.n	80060da <HAL_SPI_Transmit+0x280>
  }

  if ((pData == NULL) || (Size == 0U))
 8005e84:	68bb      	ldr	r3, [r7, #8]
 8005e86:	2b00      	cmp	r3, #0
 8005e88:	d002      	beq.n	8005e90 <HAL_SPI_Transmit+0x36>
 8005e8a:	88fb      	ldrh	r3, [r7, #6]
 8005e8c:	2b00      	cmp	r3, #0
 8005e8e:	d101      	bne.n	8005e94 <HAL_SPI_Transmit+0x3a>
  {
    return HAL_ERROR;
 8005e90:	2301      	movs	r3, #1
 8005e92:	e122      	b.n	80060da <HAL_SPI_Transmit+0x280>
  }

  /* Process Locked */
  __HAL_LOCK(hspi);
 8005e94:	68fb      	ldr	r3, [r7, #12]
 8005e96:	f893 3050 	ldrb.w	r3, [r3, #80]	@ 0x50
 8005e9a:	2b01      	cmp	r3, #1
 8005e9c:	d101      	bne.n	8005ea2 <HAL_SPI_Transmit+0x48>
 8005e9e:	2302      	movs	r3, #2
 8005ea0:	e11b      	b.n	80060da <HAL_SPI_Transmit+0x280>
 8005ea2:	68fb      	ldr	r3, [r7, #12]
 8005ea4:	2201      	movs	r2, #1
 8005ea6:	f883 2050 	strb.w	r2, [r3, #80]	@ 0x50

  /* Set the transaction information */
  hspi->State       = HAL_SPI_STATE_BUSY_TX;
 8005eaa:	68fb      	ldr	r3, [r7, #12]
 8005eac:	2203      	movs	r2, #3
 8005eae:	f883 2051 	strb.w	r2, [r3, #81]	@ 0x51
  hspi->ErrorCode   = HAL_SPI_ERROR_NONE;
 8005eb2:	68fb      	ldr	r3, [r7, #12]
 8005eb4:	2200      	movs	r2, #0
 8005eb6:	655a      	str	r2, [r3, #84]	@ 0x54
  hspi->pTxBuffPtr  = (const uint8_t *)pData;
 8005eb8:	68fb      	ldr	r3, [r7, #12]
 8005eba:	68ba      	ldr	r2, [r7, #8]
 8005ebc:	631a      	str	r2, [r3, #48]	@ 0x30
  hspi->TxXferSize  = Size;
 8005ebe:	68fb      	ldr	r3, [r7, #12]
 8005ec0:	88fa      	ldrh	r2, [r7, #6]
 8005ec2:	869a      	strh	r2, [r3, #52]	@ 0x34
  hspi->TxXferCount = Size;
 8005ec4:	68fb      	ldr	r3, [r7, #12]
 8005ec6:	88fa      	ldrh	r2, [r7, #6]
 8005ec8:	86da      	strh	r2, [r3, #54]	@ 0x36

  /*Init field not used in handle to zero */
  hspi->pRxBuffPtr  = (uint8_t *)NULL;
 8005eca:	68fb      	ldr	r3, [r7, #12]
 8005ecc:	2200      	movs	r2, #0
 8005ece:	639a      	str	r2, [r3, #56]	@ 0x38
  hspi->RxXferSize  = 0U;
 8005ed0:	68fb      	ldr	r3, [r7, #12]
 8005ed2:	2200      	movs	r2, #0
 8005ed4:	879a      	strh	r2, [r3, #60]	@ 0x3c
  hspi->RxXferCount = 0U;
 8005ed6:	68fb      	ldr	r3, [r7, #12]
 8005ed8:	2200      	movs	r2, #0
 8005eda:	87da      	strh	r2, [r3, #62]	@ 0x3e
  hspi->TxISR       = NULL;
 8005edc:	68fb      	ldr	r3, [r7, #12]
 8005ede:	2200      	movs	r2, #0
 8005ee0:	645a      	str	r2, [r3, #68]	@ 0x44
  hspi->RxISR       = NULL;
 8005ee2:	68fb      	ldr	r3, [r7, #12]
 8005ee4:	2200      	movs	r2, #0
 8005ee6:	641a      	str	r2, [r3, #64]	@ 0x40

  /* Configure communication direction : 1Line */
  if (hspi->Init.Direction == SPI_DIRECTION_1LINE)
 8005ee8:	68fb      	ldr	r3, [r7, #12]
 8005eea:	689b      	ldr	r3, [r3, #8]
 8005eec:	f5b3 4f00 	cmp.w	r3, #32768	@ 0x8000
 8005ef0:	d10f      	bne.n	8005f12 <HAL_SPI_Transmit+0xb8>
  {
    /* Disable SPI Peripheral before set 1Line direction (BIDIOE bit) */
    __HAL_SPI_DISABLE(hspi);
 8005ef2:	68fb      	ldr	r3, [r7, #12]
 8005ef4:	681b      	ldr	r3, [r3, #0]
 8005ef6:	681a      	ldr	r2, [r3, #0]
 8005ef8:	68fb      	ldr	r3, [r7, #12]
 8005efa:	681b      	ldr	r3, [r3, #0]
 8005efc:	f022 0240 	bic.w	r2, r2, #64	@ 0x40
 8005f00:	601a      	str	r2, [r3, #0]
    SPI_1LINE_TX(hspi);
 8005f02:	68fb      	ldr	r3, [r7, #12]
 8005f04:	681b      	ldr	r3, [r3, #0]
 8005f06:	681a      	ldr	r2, [r3, #0]
 8005f08:	68fb      	ldr	r3, [r7, #12]
 8005f0a:	681b      	ldr	r3, [r3, #0]
 8005f0c:	f442 4280 	orr.w	r2, r2, #16384	@ 0x4000
 8005f10:	601a      	str	r2, [r3, #0]
    SPI_RESET_CRC(hspi);
  }
#endif /* USE_SPI_CRC */

  /* Check if the SPI is already enabled */
  if ((hspi->Instance->CR1 & SPI_CR1_SPE) != SPI_CR1_SPE)
 8005f12:	68fb      	ldr	r3, [r7, #12]
 8005f14:	681b      	ldr	r3, [r3, #0]
 8005f16:	681b      	ldr	r3, [r3, #0]
 8005f18:	f003 0340 	and.w	r3, r3, #64	@ 0x40
 8005f1c:	2b40      	cmp	r3, #64	@ 0x40
 8005f1e:	d007      	beq.n	8005f30 <HAL_SPI_Transmit+0xd6>
  {
    /* Enable SPI peripheral */
    __HAL_SPI_ENABLE(hspi);
 8005f20:	68fb      	ldr	r3, [r7, #12]
 8005f22:	681b      	ldr	r3, [r3, #0]
 8005f24:	681a      	ldr	r2, [r3, #0]
 8005f26:	68fb      	ldr	r3, [r7, #12]
 8005f28:	681b      	ldr	r3, [r3, #0]
 8005f2a:	f042 0240 	orr.w	r2, r2, #64	@ 0x40
 8005f2e:	601a      	str	r2, [r3, #0]
  }

  /* Transmit data in 16 Bit mode */
  if (hspi->Init.DataSize == SPI_DATASIZE_16BIT)
 8005f30:	68fb      	ldr	r3, [r7, #12]
 8005f32:	68db      	ldr	r3, [r3, #12]
 8005f34:	f5b3 6f00 	cmp.w	r3, #2048	@ 0x800
 8005f38:	d152      	bne.n	8005fe0 <HAL_SPI_Transmit+0x186>
  {
    if ((hspi->Init.Mode == SPI_MODE_SLAVE) || (initial_TxXferCount == 0x01U))
 8005f3a:	68fb      	ldr	r3, [r7, #12]
 8005f3c:	685b      	ldr	r3, [r3, #4]
 8005f3e:	2b00      	cmp	r3, #0
 8005f40:	d002      	beq.n	8005f48 <HAL_SPI_Transmit+0xee>
 8005f42:	8b7b      	ldrh	r3, [r7, #26]
 8005f44:	2b01      	cmp	r3, #1
 8005f46:	d145      	bne.n	8005fd4 <HAL_SPI_Transmit+0x17a>
    {
      hspi->Instance->DR = *((const uint16_t *)hspi->pTxBuffPtr);
 8005f48:	68fb      	ldr	r3, [r7, #12]
 8005f4a:	6b1b      	ldr	r3, [r3, #48]	@ 0x30
 8005f4c:	881a      	ldrh	r2, [r3, #0]
 8005f4e:	68fb      	ldr	r3, [r7, #12]
 8005f50:	681b      	ldr	r3, [r3, #0]
 8005f52:	60da      	str	r2, [r3, #12]
      hspi->pTxBuffPtr += sizeof(uint16_t);
 8005f54:	68fb      	ldr	r3, [r7, #12]
 8005f56:	6b1b      	ldr	r3, [r3, #48]	@ 0x30
 8005f58:	1c9a      	adds	r2, r3, #2
 8005f5a:	68fb      	ldr	r3, [r7, #12]
 8005f5c:	631a      	str	r2, [r3, #48]	@ 0x30
      hspi->TxXferCount--;
 8005f5e:	68fb      	ldr	r3, [r7, #12]
 8005f60:	8edb      	ldrh	r3, [r3, #54]	@ 0x36
 8005f62:	b29b      	uxth	r3, r3
 8005f64:	3b01      	subs	r3, #1
 8005f66:	b29a      	uxth	r2, r3
 8005f68:	68fb      	ldr	r3, [r7, #12]
 8005f6a:	86da      	strh	r2, [r3, #54]	@ 0x36
    }
    /* Transmit data in 16 Bit mode */
    while (hspi->TxXferCount > 0U)
 8005f6c:	e032      	b.n	8005fd4 <HAL_SPI_Transmit+0x17a>
    {
      /* Wait until TXE flag is set to send data */
      if (__HAL_SPI_GET_FLAG(hspi, SPI_FLAG_TXE))
 8005f6e:	68fb      	ldr	r3, [r7, #12]
 8005f70:	681b      	ldr	r3, [r3, #0]
 8005f72:	689b      	ldr	r3, [r3, #8]
 8005f74:	f003 0302 	and.w	r3, r3, #2
 8005f78:	2b02      	cmp	r3, #2
 8005f7a:	d112      	bne.n	8005fa2 <HAL_SPI_Transmit+0x148>
      {
        hspi->Instance->DR = *((const uint16_t *)hspi->pTxBuffPtr);
 8005f7c:	68fb      	ldr	r3, [r7, #12]
 8005f7e:	6b1b      	ldr	r3, [r3, #48]	@ 0x30
 8005f80:	881a      	ldrh	r2, [r3, #0]
 8005f82:	68fb      	ldr	r3, [r7, #12]
 8005f84:	681b      	ldr	r3, [r3, #0]
 8005f86:	60da      	str	r2, [r3, #12]
        hspi->pTxBuffPtr += sizeof(uint16_t);
 8005f88:	68fb      	ldr	r3, [r7, #12]
 8005f8a:	6b1b      	ldr	r3, [r3, #48]	@ 0x30
 8005f8c:	1c9a      	adds	r2, r3, #2
 8005f8e:	68fb      	ldr	r3, [r7, #12]
 8005f90:	631a      	str	r2, [r3, #48]	@ 0x30
        hspi->TxXferCount--;
 8005f92:	68fb      	ldr	r3, [r7, #12]
 8005f94:	8edb      	ldrh	r3, [r3, #54]	@ 0x36
 8005f96:	b29b      	uxth	r3, r3
 8005f98:	3b01      	subs	r3, #1
 8005f9a:	b29a      	uxth	r2, r3
 8005f9c:	68fb      	ldr	r3, [r7, #12]
 8005f9e:	86da      	strh	r2, [r3, #54]	@ 0x36
 8005fa0:	e018      	b.n	8005fd4 <HAL_SPI_Transmit+0x17a>
      }
      else
      {
        /* Timeout management */
        if ((((HAL_GetTick() - tickstart) >=  Timeout) && (Timeout != HAL_MAX_DELAY)) || (Timeout == 0U))
 8005fa2:	f7fc fd4b 	bl	8002a3c <HAL_GetTick>
 8005fa6:	4602      	mov	r2, r0
 8005fa8:	69fb      	ldr	r3, [r7, #28]
 8005faa:	1ad3      	subs	r3, r2, r3
 8005fac:	683a      	ldr	r2, [r7, #0]
 8005fae:	429a      	cmp	r2, r3
 8005fb0:	d803      	bhi.n	8005fba <HAL_SPI_Transmit+0x160>
 8005fb2:	683b      	ldr	r3, [r7, #0]
 8005fb4:	f1b3 3fff 	cmp.w	r3, #4294967295
 8005fb8:	d102      	bne.n	8005fc0 <HAL_SPI_Transmit+0x166>
 8005fba:	683b      	ldr	r3, [r7, #0]
 8005fbc:	2b00      	cmp	r3, #0
 8005fbe:	d109      	bne.n	8005fd4 <HAL_SPI_Transmit+0x17a>
        {
          hspi->State = HAL_SPI_STATE_READY;
 8005fc0:	68fb      	ldr	r3, [r7, #12]
 8005fc2:	2201      	movs	r2, #1
 8005fc4:	f883 2051 	strb.w	r2, [r3, #81]	@ 0x51
          __HAL_UNLOCK(hspi);
 8005fc8:	68fb      	ldr	r3, [r7, #12]
 8005fca:	2200      	movs	r2, #0
 8005fcc:	f883 2050 	strb.w	r2, [r3, #80]	@ 0x50
          return HAL_TIMEOUT;
 8005fd0:	2303      	movs	r3, #3
 8005fd2:	e082      	b.n	80060da <HAL_SPI_Transmit+0x280>
    while (hspi->TxXferCount > 0U)
 8005fd4:	68fb      	ldr	r3, [r7, #12]
 8005fd6:	8edb      	ldrh	r3, [r3, #54]	@ 0x36
 8005fd8:	b29b      	uxth	r3, r3
 8005fda:	2b00      	cmp	r3, #0
 8005fdc:	d1c7      	bne.n	8005f6e <HAL_SPI_Transmit+0x114>
 8005fde:	e053      	b.n	8006088 <HAL_SPI_Transmit+0x22e>
    }
  }
  /* Transmit data in 8 Bit mode */
  else
  {
    if ((hspi->Init.Mode == SPI_MODE_SLAVE) || (initial_TxXferCount == 0x01U))
 8005fe0:	68fb      	ldr	r3, [r7, #12]
 8005fe2:	685b      	ldr	r3, [r3, #4]
 8005fe4:	2b00      	cmp	r3, #0
 8005fe6:	d002      	beq.n	8005fee <HAL_SPI_Transmit+0x194>
 8005fe8:	8b7b      	ldrh	r3, [r7, #26]
 8005fea:	2b01      	cmp	r3, #1
 8005fec:	d147      	bne.n	800607e <HAL_SPI_Transmit+0x224>
    {
      *((__IO uint8_t *)&hspi->Instance->DR) = *((const uint8_t *)hspi->pTxBuffPtr);
 8005fee:	68fb      	ldr	r3, [r7, #12]
 8005ff0:	6b1a      	ldr	r2, [r3, #48]	@ 0x30
 8005ff2:	68fb      	ldr	r3, [r7, #12]
 8005ff4:	681b      	ldr	r3, [r3, #0]
 8005ff6:	330c      	adds	r3, #12
 8005ff8:	7812      	ldrb	r2, [r2, #0]
 8005ffa:	701a      	strb	r2, [r3, #0]
      hspi->pTxBuffPtr += sizeof(uint8_t);
 8005ffc:	68fb      	ldr	r3, [r7, #12]
 8005ffe:	6b1b      	ldr	r3, [r3, #48]	@ 0x30
 8006000:	1c5a      	adds	r2, r3, #1
 8006002:	68fb      	ldr	r3, [r7, #12]
 8006004:	631a      	str	r2, [r3, #48]	@ 0x30
      hspi->TxXferCount--;
 8006006:	68fb      	ldr	r3, [r7, #12]
 8006008:	8edb      	ldrh	r3, [r3, #54]	@ 0x36
 800600a:	b29b      	uxth	r3, r3
 800600c:	3b01      	subs	r3, #1
 800600e:	b29a      	uxth	r2, r3
 8006010:	68fb      	ldr	r3, [r7, #12]
 8006012:	86da      	strh	r2, [r3, #54]	@ 0x36
    }
    while (hspi->TxXferCount > 0U)
 8006014:	e033      	b.n	800607e <HAL_SPI_Transmit+0x224>
    {
      /* Wait until TXE flag is set to send data */
      if (__HAL_SPI_GET_FLAG(hspi, SPI_FLAG_TXE))
 8006016:	68fb      	ldr	r3, [r7, #12]
 8006018:	681b      	ldr	r3, [r3, #0]
 800601a:	689b      	ldr	r3, [r3, #8]
 800601c:	f003 0302 	and.w	r3, r3, #2
 8006020:	2b02      	cmp	r3, #2
 8006022:	d113      	bne.n	800604c <HAL_SPI_Transmit+0x1f2>
      {
        *((__IO uint8_t *)&hspi->Instance->DR) = *((const uint8_t *)hspi->pTxBuffPtr);
 8006024:	68fb      	ldr	r3, [r7, #12]
 8006026:	6b1a      	ldr	r2, [r3, #48]	@ 0x30
 8006028:	68fb      	ldr	r3, [r7, #12]
 800602a:	681b      	ldr	r3, [r3, #0]
 800602c:	330c      	adds	r3, #12
 800602e:	7812      	ldrb	r2, [r2, #0]
 8006030:	701a      	strb	r2, [r3, #0]
        hspi->pTxBuffPtr += sizeof(uint8_t);
 8006032:	68fb      	ldr	r3, [r7, #12]
 8006034:	6b1b      	ldr	r3, [r3, #48]	@ 0x30
 8006036:	1c5a      	adds	r2, r3, #1
 8006038:	68fb      	ldr	r3, [r7, #12]
 800603a:	631a      	str	r2, [r3, #48]	@ 0x30
        hspi->TxXferCount--;
 800603c:	68fb      	ldr	r3, [r7, #12]
 800603e:	8edb      	ldrh	r3, [r3, #54]	@ 0x36
 8006040:	b29b      	uxth	r3, r3
 8006042:	3b01      	subs	r3, #1
 8006044:	b29a      	uxth	r2, r3
 8006046:	68fb      	ldr	r3, [r7, #12]
 8006048:	86da      	strh	r2, [r3, #54]	@ 0x36
 800604a:	e018      	b.n	800607e <HAL_SPI_Transmit+0x224>
      }
      else
      {
        /* Timeout management */
        if ((((HAL_GetTick() - tickstart) >=  Timeout) && (Timeout != HAL_MAX_DELAY)) || (Timeout == 0U))
 800604c:	f7fc fcf6 	bl	8002a3c <HAL_GetTick>
 8006050:	4602      	mov	r2, r0
 8006052:	69fb      	ldr	r3, [r7, #28]
 8006054:	1ad3      	subs	r3, r2, r3
 8006056:	683a      	ldr	r2, [r7, #0]
 8006058:	429a      	cmp	r2, r3
 800605a:	d803      	bhi.n	8006064 <HAL_SPI_Transmit+0x20a>
 800605c:	683b      	ldr	r3, [r7, #0]
 800605e:	f1b3 3fff 	cmp.w	r3, #4294967295
 8006062:	d102      	bne.n	800606a <HAL_SPI_Transmit+0x210>
 8006064:	683b      	ldr	r3, [r7, #0]
 8006066:	2b00      	cmp	r3, #0
 8006068:	d109      	bne.n	800607e <HAL_SPI_Transmit+0x224>
        {
          hspi->State = HAL_SPI_STATE_READY;
 800606a:	68fb      	ldr	r3, [r7, #12]
 800606c:	2201      	movs	r2, #1
 800606e:	f883 2051 	strb.w	r2, [r3, #81]	@ 0x51
          __HAL_UNLOCK(hspi);
 8006072:	68fb      	ldr	r3, [r7, #12]
 8006074:	2200      	movs	r2, #0
 8006076:	f883 2050 	strb.w	r2, [r3, #80]	@ 0x50
          return HAL_TIMEOUT;
 800607a:	2303      	movs	r3, #3
 800607c:	e02d      	b.n	80060da <HAL_SPI_Transmit+0x280>
    while (hspi->TxXferCount > 0U)
 800607e:	68fb      	ldr	r3, [r7, #12]
 8006080:	8edb      	ldrh	r3, [r3, #54]	@ 0x36
 8006082:	b29b      	uxth	r3, r3
 8006084:	2b00      	cmp	r3, #0
 8006086:	d1c6      	bne.n	8006016 <HAL_SPI_Transmit+0x1bc>
    SET_BIT(hspi->Instance->CR1, SPI_CR1_CRCNEXT);
  }
#endif /* USE_SPI_CRC */

  /* Check the end of the transaction */
  if (SPI_EndRxTxTransaction(hspi, Timeout, tickstart) != HAL_OK)
 8006088:	69fa      	ldr	r2, [r7, #28]
 800608a:	6839      	ldr	r1, [r7, #0]
 800608c:	68f8      	ldr	r0, [r7, #12]
 800608e:	f000 fe1f 	bl	8006cd0 <SPI_EndRxTxTransaction>
 8006092:	4603      	mov	r3, r0
 8006094:	2b00      	cmp	r3, #0
 8006096:	d002      	beq.n	800609e <HAL_SPI_Transmit+0x244>
  {
    hspi->ErrorCode = HAL_SPI_ERROR_FLAG;
 8006098:	68fb      	ldr	r3, [r7, #12]
 800609a:	2220      	movs	r2, #32
 800609c:	655a      	str	r2, [r3, #84]	@ 0x54
  }

  /* Clear overrun flag in 2 Lines communication mode because received is not read */
  if (hspi->Init.Direction == SPI_DIRECTION_2LINES)
 800609e:	68fb      	ldr	r3, [r7, #12]
 80060a0:	689b      	ldr	r3, [r3, #8]
 80060a2:	2b00      	cmp	r3, #0
 80060a4:	d10a      	bne.n	80060bc <HAL_SPI_Transmit+0x262>
  {
    __HAL_SPI_CLEAR_OVRFLAG(hspi);
 80060a6:	2300      	movs	r3, #0
 80060a8:	617b      	str	r3, [r7, #20]
 80060aa:	68fb      	ldr	r3, [r7, #12]
 80060ac:	681b      	ldr	r3, [r3, #0]
 80060ae:	68db      	ldr	r3, [r3, #12]
 80060b0:	617b      	str	r3, [r7, #20]
 80060b2:	68fb      	ldr	r3, [r7, #12]
 80060b4:	681b      	ldr	r3, [r3, #0]
 80060b6:	689b      	ldr	r3, [r3, #8]
 80060b8:	617b      	str	r3, [r7, #20]
 80060ba:	697b      	ldr	r3, [r7, #20]
  }

  hspi->State = HAL_SPI_STATE_READY;
 80060bc:	68fb      	ldr	r3, [r7, #12]
 80060be:	2201      	movs	r2, #1
 80060c0:	f883 2051 	strb.w	r2, [r3, #81]	@ 0x51
  /* Process Unlocked */
  __HAL_UNLOCK(hspi);
 80060c4:	68fb      	ldr	r3, [r7, #12]
 80060c6:	2200      	movs	r2, #0
 80060c8:	f883 2050 	strb.w	r2, [r3, #80]	@ 0x50

  if (hspi->ErrorCode != HAL_SPI_ERROR_NONE)
 80060cc:	68fb      	ldr	r3, [r7, #12]
 80060ce:	6d5b      	ldr	r3, [r3, #84]	@ 0x54
 80060d0:	2b00      	cmp	r3, #0
 80060d2:	d001      	beq.n	80060d8 <HAL_SPI_Transmit+0x27e>
  {
    return HAL_ERROR;
 80060d4:	2301      	movs	r3, #1
 80060d6:	e000      	b.n	80060da <HAL_SPI_Transmit+0x280>
  }
  else
  {
    return HAL_OK;
 80060d8:	2300      	movs	r3, #0
  }
}
 80060da:	4618      	mov	r0, r3
 80060dc:	3720      	adds	r7, #32
 80060de:	46bd      	mov	sp, r7
 80060e0:	bd80      	pop	{r7, pc}

080060e2 <HAL_SPI_Receive>:
  * @param  Size amount of data to be received
  * @param  Timeout Timeout duration
  * @retval HAL status
  */
HAL_StatusTypeDef HAL_SPI_Receive(SPI_HandleTypeDef *hspi, uint8_t *pData, uint16_t Size, uint32_t Timeout)
{
 80060e2:	b580      	push	{r7, lr}
 80060e4:	b088      	sub	sp, #32
 80060e6:	af02      	add	r7, sp, #8
 80060e8:	60f8      	str	r0, [r7, #12]
 80060ea:	60b9      	str	r1, [r7, #8]
 80060ec:	603b      	str	r3, [r7, #0]
 80060ee:	4613      	mov	r3, r2
 80060f0:	80fb      	strh	r3, [r7, #6]
#if (USE_SPI_CRC != 0U)
  __IO uint32_t tmpreg = 0U;
#endif /* USE_SPI_CRC */
  uint32_t tickstart;

  if (hspi->State != HAL_SPI_STATE_READY)
 80060f2:	68fb      	ldr	r3, [r7, #12]
 80060f4:	f893 3051 	ldrb.w	r3, [r3, #81]	@ 0x51
 80060f8:	b2db      	uxtb	r3, r3
 80060fa:	2b01      	cmp	r3, #1
 80060fc:	d001      	beq.n	8006102 <HAL_SPI_Receive+0x20>
  {
    return HAL_BUSY;
 80060fe:	2302      	movs	r3, #2
 8006100:	e104      	b.n	800630c <HAL_SPI_Receive+0x22a>
  }

  if ((hspi->Init.Mode == SPI_MODE_MASTER) && (hspi->Init.Direction == SPI_DIRECTION_2LINES))
 8006102:	68fb      	ldr	r3, [r7, #12]
 8006104:	685b      	ldr	r3, [r3, #4]
 8006106:	f5b3 7f82 	cmp.w	r3, #260	@ 0x104
 800610a:	d112      	bne.n	8006132 <HAL_SPI_Receive+0x50>
 800610c:	68fb      	ldr	r3, [r7, #12]
 800610e:	689b      	ldr	r3, [r3, #8]
 8006110:	2b00      	cmp	r3, #0
 8006112:	d10e      	bne.n	8006132 <HAL_SPI_Receive+0x50>
  {
    hspi->State = HAL_SPI_STATE_BUSY_RX;
 8006114:	68fb      	ldr	r3, [r7, #12]
 8006116:	2204      	movs	r2, #4
 8006118:	f883 2051 	strb.w	r2, [r3, #81]	@ 0x51
    /* Call transmit-receive function to send Dummy data on Tx line and generate clock on CLK line */
    return HAL_SPI_TransmitReceive(hspi, pData, pData, Size, Timeout);
 800611c:	88fa      	ldrh	r2, [r7, #6]
 800611e:	683b      	ldr	r3, [r7, #0]
 8006120:	9300      	str	r3, [sp, #0]
 8006122:	4613      	mov	r3, r2
 8006124:	68ba      	ldr	r2, [r7, #8]
 8006126:	68b9      	ldr	r1, [r7, #8]
 8006128:	68f8      	ldr	r0, [r7, #12]
 800612a:	f000 f8f3 	bl	8006314 <HAL_SPI_TransmitReceive>
 800612e:	4603      	mov	r3, r0
 8006130:	e0ec      	b.n	800630c <HAL_SPI_Receive+0x22a>
  }

  /* Init tickstart for timeout management*/
  tickstart = HAL_GetTick();
 8006132:	f7fc fc83 	bl	8002a3c <HAL_GetTick>
 8006136:	6178      	str	r0, [r7, #20]

  if ((pData == NULL) || (Size == 0U))
 8006138:	68bb      	ldr	r3, [r7, #8]
 800613a:	2b00      	cmp	r3, #0
 800613c:	d002      	beq.n	8006144 <HAL_SPI_Receive+0x62>
 800613e:	88fb      	ldrh	r3, [r7, #6]
 8006140:	2b00      	cmp	r3, #0
 8006142:	d101      	bne.n	8006148 <HAL_SPI_Receive+0x66>
  {
    return HAL_ERROR;
 8006144:	2301      	movs	r3, #1
 8006146:	e0e1      	b.n	800630c <HAL_SPI_Receive+0x22a>
  }

  /* Process Locked */
  __HAL_LOCK(hspi);
 8006148:	68fb      	ldr	r3, [r7, #12]
 800614a:	f893 3050 	ldrb.w	r3, [r3, #80]	@ 0x50
 800614e:	2b01      	cmp	r3, #1
 8006150:	d101      	bne.n	8006156 <HAL_SPI_Receive+0x74>
 8006152:	2302      	movs	r3, #2
 8006154:	e0da      	b.n	800630c <HAL_SPI_Receive+0x22a>
 8006156:	68fb      	ldr	r3, [r7, #12]
 8006158:	2201      	movs	r2, #1
 800615a:	f883 2050 	strb.w	r2, [r3, #80]	@ 0x50

  /* Set the transaction information */
  hspi->State       = HAL_SPI_STATE_BUSY_RX;
 800615e:	68fb      	ldr	r3, [r7, #12]
 8006160:	2204      	movs	r2, #4
 8006162:	f883 2051 	strb.w	r2, [r3, #81]	@ 0x51
  hspi->ErrorCode   = HAL_SPI_ERROR_NONE;
 8006166:	68fb      	ldr	r3, [r7, #12]
 8006168:	2200      	movs	r2, #0
 800616a:	655a      	str	r2, [r3, #84]	@ 0x54
  hspi->pRxBuffPtr  = (uint8_t *)pData;
 800616c:	68fb      	ldr	r3, [r7, #12]
 800616e:	68ba      	ldr	r2, [r7, #8]
 8006170:	639a      	str	r2, [r3, #56]	@ 0x38
  hspi->RxXferSize  = Size;
 8006172:	68fb      	ldr	r3, [r7, #12]
 8006174:	88fa      	ldrh	r2, [r7, #6]
 8006176:	879a      	strh	r2, [r3, #60]	@ 0x3c
  hspi->RxXferCount = Size;
 8006178:	68fb      	ldr	r3, [r7, #12]
 800617a:	88fa      	ldrh	r2, [r7, #6]
 800617c:	87da      	strh	r2, [r3, #62]	@ 0x3e

  /*Init field not used in handle to zero */
  hspi->pTxBuffPtr  = (uint8_t *)NULL;
 800617e:	68fb      	ldr	r3, [r7, #12]
 8006180:	2200      	movs	r2, #0
 8006182:	631a      	str	r2, [r3, #48]	@ 0x30
  hspi->TxXferSize  = 0U;
 8006184:	68fb      	ldr	r3, [r7, #12]
 8006186:	2200      	movs	r2, #0
 8006188:	869a      	strh	r2, [r3, #52]	@ 0x34
  hspi->TxXferCount = 0U;
 800618a:	68fb      	ldr	r3, [r7, #12]
 800618c:	2200      	movs	r2, #0
 800618e:	86da      	strh	r2, [r3, #54]	@ 0x36
  hspi->RxISR       = NULL;
 8006190:	68fb      	ldr	r3, [r7, #12]
 8006192:	2200      	movs	r2, #0
 8006194:	641a      	str	r2, [r3, #64]	@ 0x40
  hspi->TxISR       = NULL;
 8006196:	68fb      	ldr	r3, [r7, #12]
 8006198:	2200      	movs	r2, #0
 800619a:	645a      	str	r2, [r3, #68]	@ 0x44
    hspi->RxXferCount--;
  }
#endif /* USE_SPI_CRC */

  /* Configure communication direction: 1Line */
  if (hspi->Init.Direction == SPI_DIRECTION_1LINE)
 800619c:	68fb      	ldr	r3, [r7, #12]
 800619e:	689b      	ldr	r3, [r3, #8]
 80061a0:	f5b3 4f00 	cmp.w	r3, #32768	@ 0x8000
 80061a4:	d10f      	bne.n	80061c6 <HAL_SPI_Receive+0xe4>
  {
    /* Disable SPI Peripheral before set 1Line direction (BIDIOE bit) */
    __HAL_SPI_DISABLE(hspi);
 80061a6:	68fb      	ldr	r3, [r7, #12]
 80061a8:	681b      	ldr	r3, [r3, #0]
 80061aa:	681a      	ldr	r2, [r3, #0]
 80061ac:	68fb      	ldr	r3, [r7, #12]
 80061ae:	681b      	ldr	r3, [r3, #0]
 80061b0:	f022 0240 	bic.w	r2, r2, #64	@ 0x40
 80061b4:	601a      	str	r2, [r3, #0]
    SPI_1LINE_RX(hspi);
 80061b6:	68fb      	ldr	r3, [r7, #12]
 80061b8:	681b      	ldr	r3, [r3, #0]
 80061ba:	681a      	ldr	r2, [r3, #0]
 80061bc:	68fb      	ldr	r3, [r7, #12]
 80061be:	681b      	ldr	r3, [r3, #0]
 80061c0:	f422 4280 	bic.w	r2, r2, #16384	@ 0x4000
 80061c4:	601a      	str	r2, [r3, #0]
  }

  /* Check if the SPI is already enabled */
  if ((hspi->Instance->CR1 & SPI_CR1_SPE) != SPI_CR1_SPE)
 80061c6:	68fb      	ldr	r3, [r7, #12]
 80061c8:	681b      	ldr	r3, [r3, #0]
 80061ca:	681b      	ldr	r3, [r3, #0]
 80061cc:	f003 0340 	and.w	r3, r3, #64	@ 0x40
 80061d0:	2b40      	cmp	r3, #64	@ 0x40
 80061d2:	d007      	beq.n	80061e4 <HAL_SPI_Receive+0x102>
  {
    /* Enable SPI peripheral */
    __HAL_SPI_ENABLE(hspi);
 80061d4:	68fb      	ldr	r3, [r7, #12]
 80061d6:	681b      	ldr	r3, [r3, #0]
 80061d8:	681a      	ldr	r2, [r3, #0]
 80061da:	68fb      	ldr	r3, [r7, #12]
 80061dc:	681b      	ldr	r3, [r3, #0]
 80061de:	f042 0240 	orr.w	r2, r2, #64	@ 0x40
 80061e2:	601a      	str	r2, [r3, #0]
  }

  /* Receive data in 8 Bit mode */
  if (hspi->Init.DataSize == SPI_DATASIZE_8BIT)
 80061e4:	68fb      	ldr	r3, [r7, #12]
 80061e6:	68db      	ldr	r3, [r3, #12]
 80061e8:	2b00      	cmp	r3, #0
 80061ea:	d170      	bne.n	80062ce <HAL_SPI_Receive+0x1ec>
  {
    /* Transfer loop */
    while (hspi->RxXferCount > 0U)
 80061ec:	e035      	b.n	800625a <HAL_SPI_Receive+0x178>
    {
      /* Check the RXNE flag */
      if (__HAL_SPI_GET_FLAG(hspi, SPI_FLAG_RXNE))
 80061ee:	68fb      	ldr	r3, [r7, #12]
 80061f0:	681b      	ldr	r3, [r3, #0]
 80061f2:	689b      	ldr	r3, [r3, #8]
 80061f4:	f003 0301 	and.w	r3, r3, #1
 80061f8:	2b01      	cmp	r3, #1
 80061fa:	d115      	bne.n	8006228 <HAL_SPI_Receive+0x146>
      {
        /* read the received data */
        (* (uint8_t *)hspi->pRxBuffPtr) = *(__IO uint8_t *)&hspi->Instance->DR;
 80061fc:	68fb      	ldr	r3, [r7, #12]
 80061fe:	681b      	ldr	r3, [r3, #0]
 8006200:	f103 020c 	add.w	r2, r3, #12
 8006204:	68fb      	ldr	r3, [r7, #12]
 8006206:	6b9b      	ldr	r3, [r3, #56]	@ 0x38
 8006208:	7812      	ldrb	r2, [r2, #0]
 800620a:	b2d2      	uxtb	r2, r2
 800620c:	701a      	strb	r2, [r3, #0]
        hspi->pRxBuffPtr += sizeof(uint8_t);
 800620e:	68fb      	ldr	r3, [r7, #12]
 8006210:	6b9b      	ldr	r3, [r3, #56]	@ 0x38
 8006212:	1c5a      	adds	r2, r3, #1
 8006214:	68fb      	ldr	r3, [r7, #12]
 8006216:	639a      	str	r2, [r3, #56]	@ 0x38
        hspi->RxXferCount--;
 8006218:	68fb      	ldr	r3, [r7, #12]
 800621a:	8fdb      	ldrh	r3, [r3, #62]	@ 0x3e
 800621c:	b29b      	uxth	r3, r3
 800621e:	3b01      	subs	r3, #1
 8006220:	b29a      	uxth	r2, r3
 8006222:	68fb      	ldr	r3, [r7, #12]
 8006224:	87da      	strh	r2, [r3, #62]	@ 0x3e
 8006226:	e018      	b.n	800625a <HAL_SPI_Receive+0x178>
      }
      else
      {
        /* Timeout management */
        if ((((HAL_GetTick() - tickstart) >=  Timeout) && (Timeout != HAL_MAX_DELAY)) || (Timeout == 0U))
 8006228:	f7fc fc08 	bl	8002a3c <HAL_GetTick>
 800622c:	4602      	mov	r2, r0
 800622e:	697b      	ldr	r3, [r7, #20]
 8006230:	1ad3      	subs	r3, r2, r3
 8006232:	683a      	ldr	r2, [r7, #0]
 8006234:	429a      	cmp	r2, r3
 8006236:	d803      	bhi.n	8006240 <HAL_SPI_Receive+0x15e>
 8006238:	683b      	ldr	r3, [r7, #0]
 800623a:	f1b3 3fff 	cmp.w	r3, #4294967295
 800623e:	d102      	bne.n	8006246 <HAL_SPI_Receive+0x164>
 8006240:	683b      	ldr	r3, [r7, #0]
 8006242:	2b00      	cmp	r3, #0
 8006244:	d109      	bne.n	800625a <HAL_SPI_Receive+0x178>
        {
          hspi->State = HAL_SPI_STATE_READY;
 8006246:	68fb      	ldr	r3, [r7, #12]
 8006248:	2201      	movs	r2, #1
 800624a:	f883 2051 	strb.w	r2, [r3, #81]	@ 0x51
          __HAL_UNLOCK(hspi);
 800624e:	68fb      	ldr	r3, [r7, #12]
 8006250:	2200      	movs	r2, #0
 8006252:	f883 2050 	strb.w	r2, [r3, #80]	@ 0x50
          return HAL_TIMEOUT;
 8006256:	2303      	movs	r3, #3
 8006258:	e058      	b.n	800630c <HAL_SPI_Receive+0x22a>
    while (hspi->RxXferCount > 0U)
 800625a:	68fb      	ldr	r3, [r7, #12]
 800625c:	8fdb      	ldrh	r3, [r3, #62]	@ 0x3e
 800625e:	b29b      	uxth	r3, r3
 8006260:	2b00      	cmp	r3, #0
 8006262:	d1c4      	bne.n	80061ee <HAL_SPI_Receive+0x10c>
 8006264:	e038      	b.n	80062d8 <HAL_SPI_Receive+0x1f6>
  {
    /* Transfer loop */
    while (hspi->RxXferCount > 0U)
    {
      /* Check the RXNE flag */
      if (__HAL_SPI_GET_FLAG(hspi, SPI_FLAG_RXNE))
 8006266:	68fb      	ldr	r3, [r7, #12]
 8006268:	681b      	ldr	r3, [r3, #0]
 800626a:	689b      	ldr	r3, [r3, #8]
 800626c:	f003 0301 	and.w	r3, r3, #1
 8006270:	2b01      	cmp	r3, #1
 8006272:	d113      	bne.n	800629c <HAL_SPI_Receive+0x1ba>
      {
        *((uint16_t *)hspi->pRxBuffPtr) = (uint16_t)hspi->Instance->DR;
 8006274:	68fb      	ldr	r3, [r7, #12]
 8006276:	681b      	ldr	r3, [r3, #0]
 8006278:	68da      	ldr	r2, [r3, #12]
 800627a:	68fb      	ldr	r3, [r7, #12]
 800627c:	6b9b      	ldr	r3, [r3, #56]	@ 0x38
 800627e:	b292      	uxth	r2, r2
 8006280:	801a      	strh	r2, [r3, #0]
        hspi->pRxBuffPtr += sizeof(uint16_t);
 8006282:	68fb      	ldr	r3, [r7, #12]
 8006284:	6b9b      	ldr	r3, [r3, #56]	@ 0x38
 8006286:	1c9a      	adds	r2, r3, #2
 8006288:	68fb      	ldr	r3, [r7, #12]
 800628a:	639a      	str	r2, [r3, #56]	@ 0x38
        hspi->RxXferCount--;
 800628c:	68fb      	ldr	r3, [r7, #12]
 800628e:	8fdb      	ldrh	r3, [r3, #62]	@ 0x3e
 8006290:	b29b      	uxth	r3, r3
 8006292:	3b01      	subs	r3, #1
 8006294:	b29a      	uxth	r2, r3
 8006296:	68fb      	ldr	r3, [r7, #12]
 8006298:	87da      	strh	r2, [r3, #62]	@ 0x3e
 800629a:	e018      	b.n	80062ce <HAL_SPI_Receive+0x1ec>
      }
      else
      {
        /* Timeout management */
        if ((((HAL_GetTick() - tickstart) >=  Timeout) && (Timeout != HAL_MAX_DELAY)) || (Timeout == 0U))
 800629c:	f7fc fbce 	bl	8002a3c <HAL_GetTick>
 80062a0:	4602      	mov	r2, r0
 80062a2:	697b      	ldr	r3, [r7, #20]
 80062a4:	1ad3      	subs	r3, r2, r3
 80062a6:	683a      	ldr	r2, [r7, #0]
 80062a8:	429a      	cmp	r2, r3
 80062aa:	d803      	bhi.n	80062b4 <HAL_SPI_Receive+0x1d2>
 80062ac:	683b      	ldr	r3, [r7, #0]
 80062ae:	f1b3 3fff 	cmp.w	r3, #4294967295
 80062b2:	d102      	bne.n	80062ba <HAL_SPI_Receive+0x1d8>
 80062b4:	683b      	ldr	r3, [r7, #0]
 80062b6:	2b00      	cmp	r3, #0
 80062b8:	d109      	bne.n	80062ce <HAL_SPI_Receive+0x1ec>
        {
          hspi->State = HAL_SPI_STATE_READY;
 80062ba:	68fb      	ldr	r3, [r7, #12]
 80062bc:	2201      	movs	r2, #1
 80062be:	f883 2051 	strb.w	r2, [r3, #81]	@ 0x51
          __HAL_UNLOCK(hspi);
 80062c2:	68fb      	ldr	r3, [r7, #12]
 80062c4:	2200      	movs	r2, #0
 80062c6:	f883 2050 	strb.w	r2, [r3, #80]	@ 0x50
          return HAL_TIMEOUT;
 80062ca:	2303      	movs	r3, #3
 80062cc:	e01e      	b.n	800630c <HAL_SPI_Receive+0x22a>
    while (hspi->RxXferCount > 0U)
 80062ce:	68fb      	ldr	r3, [r7, #12]
 80062d0:	8fdb      	ldrh	r3, [r3, #62]	@ 0x3e
 80062d2:	b29b      	uxth	r3, r3
 80062d4:	2b00      	cmp	r3, #0
 80062d6:	d1c6      	bne.n	8006266 <HAL_SPI_Receive+0x184>
    UNUSED(tmpreg);
  }
#endif /* USE_SPI_CRC */

  /* Check the end of the transaction */
  if (SPI_EndRxTransaction(hspi, Timeout, tickstart) != HAL_OK)
 80062d8:	697a      	ldr	r2, [r7, #20]
 80062da:	6839      	ldr	r1, [r7, #0]
 80062dc:	68f8      	ldr	r0, [r7, #12]
 80062de:	f000 fc91 	bl	8006c04 <SPI_EndRxTransaction>
 80062e2:	4603      	mov	r3, r0
 80062e4:	2b00      	cmp	r3, #0
 80062e6:	d002      	beq.n	80062ee <HAL_SPI_Receive+0x20c>
  {
    hspi->ErrorCode = HAL_SPI_ERROR_FLAG;
 80062e8:	68fb      	ldr	r3, [r7, #12]
 80062ea:	2220      	movs	r2, #32
 80062ec:	655a      	str	r2, [r3, #84]	@ 0x54
    SET_BIT(hspi->ErrorCode, HAL_SPI_ERROR_CRC);
    __HAL_SPI_CLEAR_CRCERRFLAG(hspi);
  }
#endif /* USE_SPI_CRC */

  hspi->State = HAL_SPI_STATE_READY;
 80062ee:	68fb      	ldr	r3, [r7, #12]
 80062f0:	2201      	movs	r2, #1
 80062f2:	f883 2051 	strb.w	r2, [r3, #81]	@ 0x51
  /* Unlock the process */
  __HAL_UNLOCK(hspi);
 80062f6:	68fb      	ldr	r3, [r7, #12]
 80062f8:	2200      	movs	r2, #0
 80062fa:	f883 2050 	strb.w	r2, [r3, #80]	@ 0x50
  if (hspi->ErrorCode != HAL_SPI_ERROR_NONE)
 80062fe:	68fb      	ldr	r3, [r7, #12]
 8006300:	6d5b      	ldr	r3, [r3, #84]	@ 0x54
 8006302:	2b00      	cmp	r3, #0
 8006304:	d001      	beq.n	800630a <HAL_SPI_Receive+0x228>
  {
    return HAL_ERROR;
 8006306:	2301      	movs	r3, #1
 8006308:	e000      	b.n	800630c <HAL_SPI_Receive+0x22a>
  }
  else
  {
    return HAL_OK;
 800630a:	2300      	movs	r3, #0
  }
}
 800630c:	4618      	mov	r0, r3
 800630e:	3718      	adds	r7, #24
 8006310:	46bd      	mov	sp, r7
 8006312:	bd80      	pop	{r7, pc}

08006314 <HAL_SPI_TransmitReceive>:
  * @param  Timeout Timeout duration
  * @retval HAL status
  */
HAL_StatusTypeDef HAL_SPI_TransmitReceive(SPI_HandleTypeDef *hspi, const uint8_t *pTxData, uint8_t *pRxData,
                                          uint16_t Size, uint32_t Timeout)
{
 8006314:	b580      	push	{r7, lr}
 8006316:	b08a      	sub	sp, #40	@ 0x28
 8006318:	af00      	add	r7, sp, #0
 800631a:	60f8      	str	r0, [r7, #12]
 800631c:	60b9      	str	r1, [r7, #8]
 800631e:	607a      	str	r2, [r7, #4]
 8006320:	807b      	strh	r3, [r7, #2]
#if (USE_SPI_CRC != 0U)
  __IO uint32_t tmpreg = 0U;
#endif /* USE_SPI_CRC */

  /* Variable used to alternate Rx and Tx during transfer */
  uint32_t             txallowed = 1U;
 8006322:	2301      	movs	r3, #1
 8006324:	627b      	str	r3, [r7, #36]	@ 0x24

  /* Check Direction parameter */
  assert_param(IS_SPI_DIRECTION_2LINES(hspi->Init.Direction));

  /* Init tickstart for timeout management*/
  tickstart = HAL_GetTick();
 8006326:	f7fc fb89 	bl	8002a3c <HAL_GetTick>
 800632a:	6238      	str	r0, [r7, #32]

  /* Init temporary variables */
  tmp_state           = hspi->State;
 800632c:	68fb      	ldr	r3, [r7, #12]
 800632e:	f893 3051 	ldrb.w	r3, [r3, #81]	@ 0x51
 8006332:	77fb      	strb	r3, [r7, #31]
  tmp_mode            = hspi->Init.Mode;
 8006334:	68fb      	ldr	r3, [r7, #12]
 8006336:	685b      	ldr	r3, [r3, #4]
 8006338:	61bb      	str	r3, [r7, #24]
  initial_TxXferCount = Size;
 800633a:	887b      	ldrh	r3, [r7, #2]
 800633c:	82fb      	strh	r3, [r7, #22]

  if (!((tmp_state == HAL_SPI_STATE_READY) || \
 800633e:	7ffb      	ldrb	r3, [r7, #31]
 8006340:	2b01      	cmp	r3, #1
 8006342:	d00c      	beq.n	800635e <HAL_SPI_TransmitReceive+0x4a>
 8006344:	69bb      	ldr	r3, [r7, #24]
 8006346:	f5b3 7f82 	cmp.w	r3, #260	@ 0x104
 800634a:	d106      	bne.n	800635a <HAL_SPI_TransmitReceive+0x46>
        ((tmp_mode == SPI_MODE_MASTER) && (hspi->Init.Direction == SPI_DIRECTION_2LINES) && (tmp_state == HAL_SPI_STATE_BUSY_RX))))
 800634c:	68fb      	ldr	r3, [r7, #12]
 800634e:	689b      	ldr	r3, [r3, #8]
 8006350:	2b00      	cmp	r3, #0
 8006352:	d102      	bne.n	800635a <HAL_SPI_TransmitReceive+0x46>
 8006354:	7ffb      	ldrb	r3, [r7, #31]
 8006356:	2b04      	cmp	r3, #4
 8006358:	d001      	beq.n	800635e <HAL_SPI_TransmitReceive+0x4a>
  {
    return HAL_BUSY;
 800635a:	2302      	movs	r3, #2
 800635c:	e17f      	b.n	800665e <HAL_SPI_TransmitReceive+0x34a>
  }

  if ((pTxData == NULL) || (pRxData == NULL) || (Size == 0U))
 800635e:	68bb      	ldr	r3, [r7, #8]
 8006360:	2b00      	cmp	r3, #0
 8006362:	d005      	beq.n	8006370 <HAL_SPI_TransmitReceive+0x5c>
 8006364:	687b      	ldr	r3, [r7, #4]
 8006366:	2b00      	cmp	r3, #0
 8006368:	d002      	beq.n	8006370 <HAL_SPI_TransmitReceive+0x5c>
 800636a:	887b      	ldrh	r3, [r7, #2]
 800636c:	2b00      	cmp	r3, #0
 800636e:	d101      	bne.n	8006374 <HAL_SPI_TransmitReceive+0x60>
  {
    return HAL_ERROR;
 8006370:	2301      	movs	r3, #1
 8006372:	e174      	b.n	800665e <HAL_SPI_TransmitReceive+0x34a>
  }

  /* Process Locked */
  __HAL_LOCK(hspi);
 8006374:	68fb      	ldr	r3, [r7, #12]
 8006376:	f893 3050 	ldrb.w	r3, [r3, #80]	@ 0x50
 800637a:	2b01      	cmp	r3, #1
 800637c:	d101      	bne.n	8006382 <HAL_SPI_TransmitReceive+0x6e>
 800637e:	2302      	movs	r3, #2
 8006380:	e16d      	b.n	800665e <HAL_SPI_TransmitReceive+0x34a>
 8006382:	68fb      	ldr	r3, [r7, #12]
 8006384:	2201      	movs	r2, #1
 8006386:	f883 2050 	strb.w	r2, [r3, #80]	@ 0x50

  /* Don't overwrite in case of HAL_SPI_STATE_BUSY_RX */
  if (hspi->State != HAL_SPI_STATE_BUSY_RX)
 800638a:	68fb      	ldr	r3, [r7, #12]
 800638c:	f893 3051 	ldrb.w	r3, [r3, #81]	@ 0x51
 8006390:	b2db      	uxtb	r3, r3
 8006392:	2b04      	cmp	r3, #4
 8006394:	d003      	beq.n	800639e <HAL_SPI_TransmitReceive+0x8a>
  {
    hspi->State = HAL_SPI_STATE_BUSY_TX_RX;
 8006396:	68fb      	ldr	r3, [r7, #12]
 8006398:	2205      	movs	r2, #5
 800639a:	f883 2051 	strb.w	r2, [r3, #81]	@ 0x51
  }

  /* Set the transaction information */
  hspi->ErrorCode   = HAL_SPI_ERROR_NONE;
 800639e:	68fb      	ldr	r3, [r7, #12]
 80063a0:	2200      	movs	r2, #0
 80063a2:	655a      	str	r2, [r3, #84]	@ 0x54
  hspi->pRxBuffPtr  = (uint8_t *)pRxData;
 80063a4:	68fb      	ldr	r3, [r7, #12]
 80063a6:	687a      	ldr	r2, [r7, #4]
 80063a8:	639a      	str	r2, [r3, #56]	@ 0x38
  hspi->RxXferCount = Size;
 80063aa:	68fb      	ldr	r3, [r7, #12]
 80063ac:	887a      	ldrh	r2, [r7, #2]
 80063ae:	87da      	strh	r2, [r3, #62]	@ 0x3e
  hspi->RxXferSize  = Size;
 80063b0:	68fb      	ldr	r3, [r7, #12]
 80063b2:	887a      	ldrh	r2, [r7, #2]
 80063b4:	879a      	strh	r2, [r3, #60]	@ 0x3c
  hspi->pTxBuffPtr  = (const uint8_t *)pTxData;
 80063b6:	68fb      	ldr	r3, [r7, #12]
 80063b8:	68ba      	ldr	r2, [r7, #8]
 80063ba:	631a      	str	r2, [r3, #48]	@ 0x30
  hspi->TxXferCount = Size;
 80063bc:	68fb      	ldr	r3, [r7, #12]
 80063be:	887a      	ldrh	r2, [r7, #2]
 80063c0:	86da      	strh	r2, [r3, #54]	@ 0x36
  hspi->TxXferSize  = Size;
 80063c2:	68fb      	ldr	r3, [r7, #12]
 80063c4:	887a      	ldrh	r2, [r7, #2]
 80063c6:	869a      	strh	r2, [r3, #52]	@ 0x34

  /*Init field not used in handle to zero */
  hspi->RxISR       = NULL;
 80063c8:	68fb      	ldr	r3, [r7, #12]
 80063ca:	2200      	movs	r2, #0
 80063cc:	641a      	str	r2, [r3, #64]	@ 0x40
  hspi->TxISR       = NULL;
 80063ce:	68fb      	ldr	r3, [r7, #12]
 80063d0:	2200      	movs	r2, #0
 80063d2:	645a      	str	r2, [r3, #68]	@ 0x44
    SPI_RESET_CRC(hspi);
  }
#endif /* USE_SPI_CRC */

  /* Check if the SPI is already enabled */
  if ((hspi->Instance->CR1 & SPI_CR1_SPE) != SPI_CR1_SPE)
 80063d4:	68fb      	ldr	r3, [r7, #12]
 80063d6:	681b      	ldr	r3, [r3, #0]
 80063d8:	681b      	ldr	r3, [r3, #0]
 80063da:	f003 0340 	and.w	r3, r3, #64	@ 0x40
 80063de:	2b40      	cmp	r3, #64	@ 0x40
 80063e0:	d007      	beq.n	80063f2 <HAL_SPI_TransmitReceive+0xde>
  {
    /* Enable SPI peripheral */
    __HAL_SPI_ENABLE(hspi);
 80063e2:	68fb      	ldr	r3, [r7, #12]
 80063e4:	681b      	ldr	r3, [r3, #0]
 80063e6:	681a      	ldr	r2, [r3, #0]
 80063e8:	68fb      	ldr	r3, [r7, #12]
 80063ea:	681b      	ldr	r3, [r3, #0]
 80063ec:	f042 0240 	orr.w	r2, r2, #64	@ 0x40
 80063f0:	601a      	str	r2, [r3, #0]
  }

  /* Transmit and Receive data in 16 Bit mode */
  if (hspi->Init.DataSize == SPI_DATASIZE_16BIT)
 80063f2:	68fb      	ldr	r3, [r7, #12]
 80063f4:	68db      	ldr	r3, [r3, #12]
 80063f6:	f5b3 6f00 	cmp.w	r3, #2048	@ 0x800
 80063fa:	d17e      	bne.n	80064fa <HAL_SPI_TransmitReceive+0x1e6>
  {
    if ((hspi->Init.Mode == SPI_MODE_SLAVE) || (initial_TxXferCount == 0x01U))
 80063fc:	68fb      	ldr	r3, [r7, #12]
 80063fe:	685b      	ldr	r3, [r3, #4]
 8006400:	2b00      	cmp	r3, #0
 8006402:	d002      	beq.n	800640a <HAL_SPI_TransmitReceive+0xf6>
 8006404:	8afb      	ldrh	r3, [r7, #22]
 8006406:	2b01      	cmp	r3, #1
 8006408:	d16c      	bne.n	80064e4 <HAL_SPI_TransmitReceive+0x1d0>
    {
      hspi->Instance->DR = *((const uint16_t *)hspi->pTxBuffPtr);
 800640a:	68fb      	ldr	r3, [r7, #12]
 800640c:	6b1b      	ldr	r3, [r3, #48]	@ 0x30
 800640e:	881a      	ldrh	r2, [r3, #0]
 8006410:	68fb      	ldr	r3, [r7, #12]
 8006412:	681b      	ldr	r3, [r3, #0]
 8006414:	60da      	str	r2, [r3, #12]
      hspi->pTxBuffPtr += sizeof(uint16_t);
 8006416:	68fb      	ldr	r3, [r7, #12]
 8006418:	6b1b      	ldr	r3, [r3, #48]	@ 0x30
 800641a:	1c9a      	adds	r2, r3, #2
 800641c:	68fb      	ldr	r3, [r7, #12]
 800641e:	631a      	str	r2, [r3, #48]	@ 0x30
      hspi->TxXferCount--;
 8006420:	68fb      	ldr	r3, [r7, #12]
 8006422:	8edb      	ldrh	r3, [r3, #54]	@ 0x36
 8006424:	b29b      	uxth	r3, r3
 8006426:	3b01      	subs	r3, #1
 8006428:	b29a      	uxth	r2, r3
 800642a:	68fb      	ldr	r3, [r7, #12]
 800642c:	86da      	strh	r2, [r3, #54]	@ 0x36
        SET_BIT(hspi->Instance->CR1, SPI_CR1_CRCNEXT);
      }
#endif /* USE_SPI_CRC */

    }
    while ((hspi->TxXferCount > 0U) || (hspi->RxXferCount > 0U))
 800642e:	e059      	b.n	80064e4 <HAL_SPI_TransmitReceive+0x1d0>
    {
      /* Check TXE flag */
      if ((__HAL_SPI_GET_FLAG(hspi, SPI_FLAG_TXE)) && (hspi->TxXferCount > 0U) && (txallowed == 1U))
 8006430:	68fb      	ldr	r3, [r7, #12]
 8006432:	681b      	ldr	r3, [r3, #0]
 8006434:	689b      	ldr	r3, [r3, #8]
 8006436:	f003 0302 	and.w	r3, r3, #2
 800643a:	2b02      	cmp	r3, #2
 800643c:	d11b      	bne.n	8006476 <HAL_SPI_TransmitReceive+0x162>
 800643e:	68fb      	ldr	r3, [r7, #12]
 8006440:	8edb      	ldrh	r3, [r3, #54]	@ 0x36
 8006442:	b29b      	uxth	r3, r3
 8006444:	2b00      	cmp	r3, #0
 8006446:	d016      	beq.n	8006476 <HAL_SPI_TransmitReceive+0x162>
 8006448:	6a7b      	ldr	r3, [r7, #36]	@ 0x24
 800644a:	2b01      	cmp	r3, #1
 800644c:	d113      	bne.n	8006476 <HAL_SPI_TransmitReceive+0x162>
      {
        hspi->Instance->DR = *((const uint16_t *)hspi->pTxBuffPtr);
 800644e:	68fb      	ldr	r3, [r7, #12]
 8006450:	6b1b      	ldr	r3, [r3, #48]	@ 0x30
 8006452:	881a      	ldrh	r2, [r3, #0]
 8006454:	68fb      	ldr	r3, [r7, #12]
 8006456:	681b      	ldr	r3, [r3, #0]
 8006458:	60da      	str	r2, [r3, #12]
        hspi->pTxBuffPtr += sizeof(uint16_t);
 800645a:	68fb      	ldr	r3, [r7, #12]
 800645c:	6b1b      	ldr	r3, [r3, #48]	@ 0x30
 800645e:	1c9a      	adds	r2, r3, #2
 8006460:	68fb      	ldr	r3, [r7, #12]
 8006462:	631a      	str	r2, [r3, #48]	@ 0x30
        hspi->TxXferCount--;
 8006464:	68fb      	ldr	r3, [r7, #12]
 8006466:	8edb      	ldrh	r3, [r3, #54]	@ 0x36
 8006468:	b29b      	uxth	r3, r3
 800646a:	3b01      	subs	r3, #1
 800646c:	b29a      	uxth	r2, r3
 800646e:	68fb      	ldr	r3, [r7, #12]
 8006470:	86da      	strh	r2, [r3, #54]	@ 0x36
        /* Next Data is a reception (Rx). Tx not allowed */
        txallowed = 0U;
 8006472:	2300      	movs	r3, #0
 8006474:	627b      	str	r3, [r7, #36]	@ 0x24
        }
#endif /* USE_SPI_CRC */
      }

      /* Check RXNE flag */
      if ((__HAL_SPI_GET_FLAG(hspi, SPI_FLAG_RXNE)) && (hspi->RxXferCount > 0U))
 8006476:	68fb      	ldr	r3, [r7, #12]
 8006478:	681b      	ldr	r3, [r3, #0]
 800647a:	689b      	ldr	r3, [r3, #8]
 800647c:	f003 0301 	and.w	r3, r3, #1
 8006480:	2b01      	cmp	r3, #1
 8006482:	d119      	bne.n	80064b8 <HAL_SPI_TransmitReceive+0x1a4>
 8006484:	68fb      	ldr	r3, [r7, #12]
 8006486:	8fdb      	ldrh	r3, [r3, #62]	@ 0x3e
 8006488:	b29b      	uxth	r3, r3
 800648a:	2b00      	cmp	r3, #0
 800648c:	d014      	beq.n	80064b8 <HAL_SPI_TransmitReceive+0x1a4>
      {
        *((uint16_t *)hspi->pRxBuffPtr) = (uint16_t)hspi->Instance->DR;
 800648e:	68fb      	ldr	r3, [r7, #12]
 8006490:	681b      	ldr	r3, [r3, #0]
 8006492:	68da      	ldr	r2, [r3, #12]
 8006494:	68fb      	ldr	r3, [r7, #12]
 8006496:	6b9b      	ldr	r3, [r3, #56]	@ 0x38
 8006498:	b292      	uxth	r2, r2
 800649a:	801a      	strh	r2, [r3, #0]
        hspi->pRxBuffPtr += sizeof(uint16_t);
 800649c:	68fb      	ldr	r3, [r7, #12]
 800649e:	6b9b      	ldr	r3, [r3, #56]	@ 0x38
 80064a0:	1c9a      	adds	r2, r3, #2
 80064a2:	68fb      	ldr	r3, [r7, #12]
 80064a4:	639a      	str	r2, [r3, #56]	@ 0x38
        hspi->RxXferCount--;
 80064a6:	68fb      	ldr	r3, [r7, #12]
 80064a8:	8fdb      	ldrh	r3, [r3, #62]	@ 0x3e
 80064aa:	b29b      	uxth	r3, r3
 80064ac:	3b01      	subs	r3, #1
 80064ae:	b29a      	uxth	r2, r3
 80064b0:	68fb      	ldr	r3, [r7, #12]
 80064b2:	87da      	strh	r2, [r3, #62]	@ 0x3e
        /* Next Data is a Transmission (Tx). Tx is allowed */
        txallowed = 1U;
 80064b4:	2301      	movs	r3, #1
 80064b6:	627b      	str	r3, [r7, #36]	@ 0x24
      }
      if (((HAL_GetTick() - tickstart) >=  Timeout) && (Timeout != HAL_MAX_DELAY))
 80064b8:	f7fc fac0 	bl	8002a3c <HAL_GetTick>
 80064bc:	4602      	mov	r2, r0
 80064be:	6a3b      	ldr	r3, [r7, #32]
 80064c0:	1ad3      	subs	r3, r2, r3
 80064c2:	6b3a      	ldr	r2, [r7, #48]	@ 0x30
 80064c4:	429a      	cmp	r2, r3
 80064c6:	d80d      	bhi.n	80064e4 <HAL_SPI_TransmitReceive+0x1d0>
 80064c8:	6b3b      	ldr	r3, [r7, #48]	@ 0x30
 80064ca:	f1b3 3fff 	cmp.w	r3, #4294967295
 80064ce:	d009      	beq.n	80064e4 <HAL_SPI_TransmitReceive+0x1d0>
      {
        hspi->State = HAL_SPI_STATE_READY;
 80064d0:	68fb      	ldr	r3, [r7, #12]
 80064d2:	2201      	movs	r2, #1
 80064d4:	f883 2051 	strb.w	r2, [r3, #81]	@ 0x51
        __HAL_UNLOCK(hspi);
 80064d8:	68fb      	ldr	r3, [r7, #12]
 80064da:	2200      	movs	r2, #0
 80064dc:	f883 2050 	strb.w	r2, [r3, #80]	@ 0x50
        return HAL_TIMEOUT;
 80064e0:	2303      	movs	r3, #3
 80064e2:	e0bc      	b.n	800665e <HAL_SPI_TransmitReceive+0x34a>
    while ((hspi->TxXferCount > 0U) || (hspi->RxXferCount > 0U))
 80064e4:	68fb      	ldr	r3, [r7, #12]
 80064e6:	8edb      	ldrh	r3, [r3, #54]	@ 0x36
 80064e8:	b29b      	uxth	r3, r3
 80064ea:	2b00      	cmp	r3, #0
 80064ec:	d1a0      	bne.n	8006430 <HAL_SPI_TransmitReceive+0x11c>
 80064ee:	68fb      	ldr	r3, [r7, #12]
 80064f0:	8fdb      	ldrh	r3, [r3, #62]	@ 0x3e
 80064f2:	b29b      	uxth	r3, r3
 80064f4:	2b00      	cmp	r3, #0
 80064f6:	d19b      	bne.n	8006430 <HAL_SPI_TransmitReceive+0x11c>
 80064f8:	e082      	b.n	8006600 <HAL_SPI_TransmitReceive+0x2ec>
    }
  }
  /* Transmit and Receive data in 8 Bit mode */
  else
  {
    if ((hspi->Init.Mode == SPI_MODE_SLAVE) || (initial_TxXferCount == 0x01U))
 80064fa:	68fb      	ldr	r3, [r7, #12]
 80064fc:	685b      	ldr	r3, [r3, #4]
 80064fe:	2b00      	cmp	r3, #0
 8006500:	d002      	beq.n	8006508 <HAL_SPI_TransmitReceive+0x1f4>
 8006502:	8afb      	ldrh	r3, [r7, #22]
 8006504:	2b01      	cmp	r3, #1
 8006506:	d171      	bne.n	80065ec <HAL_SPI_TransmitReceive+0x2d8>
    {
      *((__IO uint8_t *)&hspi->Instance->DR) = *((const uint8_t *)hspi->pTxBuffPtr);
 8006508:	68fb      	ldr	r3, [r7, #12]
 800650a:	6b1a      	ldr	r2, [r3, #48]	@ 0x30
 800650c:	68fb      	ldr	r3, [r7, #12]
 800650e:	681b      	ldr	r3, [r3, #0]
 8006510:	330c      	adds	r3, #12
 8006512:	7812      	ldrb	r2, [r2, #0]
 8006514:	701a      	strb	r2, [r3, #0]
      hspi->pTxBuffPtr += sizeof(uint8_t);
 8006516:	68fb      	ldr	r3, [r7, #12]
 8006518:	6b1b      	ldr	r3, [r3, #48]	@ 0x30
 800651a:	1c5a      	adds	r2, r3, #1
 800651c:	68fb      	ldr	r3, [r7, #12]
 800651e:	631a      	str	r2, [r3, #48]	@ 0x30
      hspi->TxXferCount--;
 8006520:	68fb      	ldr	r3, [r7, #12]
 8006522:	8edb      	ldrh	r3, [r3, #54]	@ 0x36
 8006524:	b29b      	uxth	r3, r3
 8006526:	3b01      	subs	r3, #1
 8006528:	b29a      	uxth	r2, r3
 800652a:	68fb      	ldr	r3, [r7, #12]
 800652c:	86da      	strh	r2, [r3, #54]	@ 0x36
      {
        SET_BIT(hspi->Instance->CR1, SPI_CR1_CRCNEXT);
      }
#endif /* USE_SPI_CRC */
    }
    while ((hspi->TxXferCount > 0U) || (hspi->RxXferCount > 0U))
 800652e:	e05d      	b.n	80065ec <HAL_SPI_TransmitReceive+0x2d8>
    {
      /* Check TXE flag */
      if ((__HAL_SPI_GET_FLAG(hspi, SPI_FLAG_TXE)) && (hspi->TxXferCount > 0U) && (txallowed == 1U))
 8006530:	68fb      	ldr	r3, [r7, #12]
 8006532:	681b      	ldr	r3, [r3, #0]
 8006534:	689b      	ldr	r3, [r3, #8]
 8006536:	f003 0302 	and.w	r3, r3, #2
 800653a:	2b02      	cmp	r3, #2
 800653c:	d11c      	bne.n	8006578 <HAL_SPI_TransmitReceive+0x264>
 800653e:	68fb      	ldr	r3, [r7, #12]
 8006540:	8edb      	ldrh	r3, [r3, #54]	@ 0x36
 8006542:	b29b      	uxth	r3, r3
 8006544:	2b00      	cmp	r3, #0
 8006546:	d017      	beq.n	8006578 <HAL_SPI_TransmitReceive+0x264>
 8006548:	6a7b      	ldr	r3, [r7, #36]	@ 0x24
 800654a:	2b01      	cmp	r3, #1
 800654c:	d114      	bne.n	8006578 <HAL_SPI_TransmitReceive+0x264>
      {
        *(__IO uint8_t *)&hspi->Instance->DR = *((const uint8_t *)hspi->pTxBuffPtr);
 800654e:	68fb      	ldr	r3, [r7, #12]
 8006550:	6b1a      	ldr	r2, [r3, #48]	@ 0x30
 8006552:	68fb      	ldr	r3, [r7, #12]
 8006554:	681b      	ldr	r3, [r3, #0]
 8006556:	330c      	adds	r3, #12
 8006558:	7812      	ldrb	r2, [r2, #0]
 800655a:	701a      	strb	r2, [r3, #0]
        hspi->pTxBuffPtr++;
 800655c:	68fb      	ldr	r3, [r7, #12]
 800655e:	6b1b      	ldr	r3, [r3, #48]	@ 0x30
 8006560:	1c5a      	adds	r2, r3, #1
 8006562:	68fb      	ldr	r3, [r7, #12]
 8006564:	631a      	str	r2, [r3, #48]	@ 0x30
        hspi->TxXferCount--;
 8006566:	68fb      	ldr	r3, [r7, #12]
 8006568:	8edb      	ldrh	r3, [r3, #54]	@ 0x36
 800656a:	b29b      	uxth	r3, r3
 800656c:	3b01      	subs	r3, #1
 800656e:	b29a      	uxth	r2, r3
 8006570:	68fb      	ldr	r3, [r7, #12]
 8006572:	86da      	strh	r2, [r3, #54]	@ 0x36
        /* Next Data is a reception (Rx). Tx not allowed */
        txallowed = 0U;
 8006574:	2300      	movs	r3, #0
 8006576:	627b      	str	r3, [r7, #36]	@ 0x24
        }
#endif /* USE_SPI_CRC */
      }

      /* Wait until RXNE flag is reset */
      if ((__HAL_SPI_GET_FLAG(hspi, SPI_FLAG_RXNE)) && (hspi->RxXferCount > 0U))
 8006578:	68fb      	ldr	r3, [r7, #12]
 800657a:	681b      	ldr	r3, [r3, #0]
 800657c:	689b      	ldr	r3, [r3, #8]
 800657e:	f003 0301 	and.w	r3, r3, #1
 8006582:	2b01      	cmp	r3, #1
 8006584:	d119      	bne.n	80065ba <HAL_SPI_TransmitReceive+0x2a6>
 8006586:	68fb      	ldr	r3, [r7, #12]
 8006588:	8fdb      	ldrh	r3, [r3, #62]	@ 0x3e
 800658a:	b29b      	uxth	r3, r3
 800658c:	2b00      	cmp	r3, #0
 800658e:	d014      	beq.n	80065ba <HAL_SPI_TransmitReceive+0x2a6>
      {
        (*(uint8_t *)hspi->pRxBuffPtr) = hspi->Instance->DR;
 8006590:	68fb      	ldr	r3, [r7, #12]
 8006592:	681b      	ldr	r3, [r3, #0]
 8006594:	68da      	ldr	r2, [r3, #12]
 8006596:	68fb      	ldr	r3, [r7, #12]
 8006598:	6b9b      	ldr	r3, [r3, #56]	@ 0x38
 800659a:	b2d2      	uxtb	r2, r2
 800659c:	701a      	strb	r2, [r3, #0]
        hspi->pRxBuffPtr++;
 800659e:	68fb      	ldr	r3, [r7, #12]
 80065a0:	6b9b      	ldr	r3, [r3, #56]	@ 0x38
 80065a2:	1c5a      	adds	r2, r3, #1
 80065a4:	68fb      	ldr	r3, [r7, #12]
 80065a6:	639a      	str	r2, [r3, #56]	@ 0x38
        hspi->RxXferCount--;
 80065a8:	68fb      	ldr	r3, [r7, #12]
 80065aa:	8fdb      	ldrh	r3, [r3, #62]	@ 0x3e
 80065ac:	b29b      	uxth	r3, r3
 80065ae:	3b01      	subs	r3, #1
 80065b0:	b29a      	uxth	r2, r3
 80065b2:	68fb      	ldr	r3, [r7, #12]
 80065b4:	87da      	strh	r2, [r3, #62]	@ 0x3e
        /* Next Data is a Transmission (Tx). Tx is allowed */
        txallowed = 1U;
 80065b6:	2301      	movs	r3, #1
 80065b8:	627b      	str	r3, [r7, #36]	@ 0x24
      }
      if ((((HAL_GetTick() - tickstart) >=  Timeout) && ((Timeout != HAL_MAX_DELAY))) || (Timeout == 0U))
 80065ba:	f7fc fa3f 	bl	8002a3c <HAL_GetTick>
 80065be:	4602      	mov	r2, r0
 80065c0:	6a3b      	ldr	r3, [r7, #32]
 80065c2:	1ad3      	subs	r3, r2, r3
 80065c4:	6b3a      	ldr	r2, [r7, #48]	@ 0x30
 80065c6:	429a      	cmp	r2, r3
 80065c8:	d803      	bhi.n	80065d2 <HAL_SPI_TransmitReceive+0x2be>
 80065ca:	6b3b      	ldr	r3, [r7, #48]	@ 0x30
 80065cc:	f1b3 3fff 	cmp.w	r3, #4294967295
 80065d0:	d102      	bne.n	80065d8 <HAL_SPI_TransmitReceive+0x2c4>
 80065d2:	6b3b      	ldr	r3, [r7, #48]	@ 0x30
 80065d4:	2b00      	cmp	r3, #0
 80065d6:	d109      	bne.n	80065ec <HAL_SPI_TransmitReceive+0x2d8>
      {
        hspi->State = HAL_SPI_STATE_READY;
 80065d8:	68fb      	ldr	r3, [r7, #12]
 80065da:	2201      	movs	r2, #1
 80065dc:	f883 2051 	strb.w	r2, [r3, #81]	@ 0x51
        __HAL_UNLOCK(hspi);
 80065e0:	68fb      	ldr	r3, [r7, #12]
 80065e2:	2200      	movs	r2, #0
 80065e4:	f883 2050 	strb.w	r2, [r3, #80]	@ 0x50
        return HAL_TIMEOUT;
 80065e8:	2303      	movs	r3, #3
 80065ea:	e038      	b.n	800665e <HAL_SPI_TransmitReceive+0x34a>
    while ((hspi->TxXferCount > 0U) || (hspi->RxXferCount > 0U))
 80065ec:	68fb      	ldr	r3, [r7, #12]
 80065ee:	8edb      	ldrh	r3, [r3, #54]	@ 0x36
 80065f0:	b29b      	uxth	r3, r3
 80065f2:	2b00      	cmp	r3, #0
 80065f4:	d19c      	bne.n	8006530 <HAL_SPI_TransmitReceive+0x21c>
 80065f6:	68fb      	ldr	r3, [r7, #12]
 80065f8:	8fdb      	ldrh	r3, [r3, #62]	@ 0x3e
 80065fa:	b29b      	uxth	r3, r3
 80065fc:	2b00      	cmp	r3, #0
 80065fe:	d197      	bne.n	8006530 <HAL_SPI_TransmitReceive+0x21c>
    return HAL_ERROR;
  }
#endif /* USE_SPI_CRC */

  /* Check the end of the transaction */
  if (SPI_EndRxTxTransaction(hspi, Timeout, tickstart) != HAL_OK)
 8006600:	6a3a      	ldr	r2, [r7, #32]
 8006602:	6b39      	ldr	r1, [r7, #48]	@ 0x30
 8006604:	68f8      	ldr	r0, [r7, #12]
 8006606:	f000 fb63 	bl	8006cd0 <SPI_EndRxTxTransaction>
 800660a:	4603      	mov	r3, r0
 800660c:	2b00      	cmp	r3, #0
 800660e:	d008      	beq.n	8006622 <HAL_SPI_TransmitReceive+0x30e>
  {
    hspi->ErrorCode = HAL_SPI_ERROR_FLAG;
 8006610:	68fb      	ldr	r3, [r7, #12]
 8006612:	2220      	movs	r2, #32
 8006614:	655a      	str	r2, [r3, #84]	@ 0x54
    __HAL_UNLOCK(hspi);
 8006616:	68fb      	ldr	r3, [r7, #12]
 8006618:	2200      	movs	r2, #0
 800661a:	f883 2050 	strb.w	r2, [r3, #80]	@ 0x50
    return HAL_ERROR;
 800661e:	2301      	movs	r3, #1
 8006620:	e01d      	b.n	800665e <HAL_SPI_TransmitReceive+0x34a>
  }

  /* Clear overrun flag in 2 Lines communication mode because received is not read */
  if (hspi->Init.Direction == SPI_DIRECTION_2LINES)
 8006622:	68fb      	ldr	r3, [r7, #12]
 8006624:	689b      	ldr	r3, [r3, #8]
 8006626:	2b00      	cmp	r3, #0
 8006628:	d10a      	bne.n	8006640 <HAL_SPI_TransmitReceive+0x32c>
  {
    __HAL_SPI_CLEAR_OVRFLAG(hspi);
 800662a:	2300      	movs	r3, #0
 800662c:	613b      	str	r3, [r7, #16]
 800662e:	68fb      	ldr	r3, [r7, #12]
 8006630:	681b      	ldr	r3, [r3, #0]
 8006632:	68db      	ldr	r3, [r3, #12]
 8006634:	613b      	str	r3, [r7, #16]
 8006636:	68fb      	ldr	r3, [r7, #12]
 8006638:	681b      	ldr	r3, [r3, #0]
 800663a:	689b      	ldr	r3, [r3, #8]
 800663c:	613b      	str	r3, [r7, #16]
 800663e:	693b      	ldr	r3, [r7, #16]
  }


  hspi->State = HAL_SPI_STATE_READY;
 8006640:	68fb      	ldr	r3, [r7, #12]
 8006642:	2201      	movs	r2, #1
 8006644:	f883 2051 	strb.w	r2, [r3, #81]	@ 0x51
  /* Unlock the process */
  __HAL_UNLOCK(hspi);
 8006648:	68fb      	ldr	r3, [r7, #12]
 800664a:	2200      	movs	r2, #0
 800664c:	f883 2050 	strb.w	r2, [r3, #80]	@ 0x50

  if (hspi->ErrorCode != HAL_SPI_ERROR_NONE)
 8006650:	68fb      	ldr	r3, [r7, #12]
 8006652:	6d5b      	ldr	r3, [r3, #84]	@ 0x54
 8006654:	2b00      	cmp	r3, #0
 8006656:	d001      	beq.n	800665c <HAL_SPI_TransmitReceive+0x348>
  {
    return HAL_ERROR;
 8006658:	2301      	movs	r3, #1
 800665a:	e000      	b.n	800665e <HAL_SPI_TransmitReceive+0x34a>
  }
  else
  {
    return HAL_OK;
 800665c:	2300      	movs	r3, #0
  }
}
 800665e:	4618      	mov	r0, r3
 8006660:	3728      	adds	r7, #40	@ 0x28
 8006662:	46bd      	mov	sp, r7
 8006664:	bd80      	pop	{r7, pc}
	...

08006668 <HAL_SPI_Transmit_DMA>:
  * @param  pData pointer to data buffer
  * @param  Size amount of data to be sent
  * @retval HAL status
  */
HAL_StatusTypeDef HAL_SPI_Transmit_DMA(SPI_HandleTypeDef *hspi, const uint8_t *pData, uint16_t Size)
{
 8006668:	b580      	push	{r7, lr}
 800666a:	b084      	sub	sp, #16
 800666c:	af00      	add	r7, sp, #0
 800666e:	60f8      	str	r0, [r7, #12]
 8006670:	60b9      	str	r1, [r7, #8]
 8006672:	4613      	mov	r3, r2
 8006674:	80fb      	strh	r3, [r7, #6]
  assert_param(IS_SPI_DMA_HANDLE(hspi->hdmatx));

  /* Check Direction parameter */
  assert_param(IS_SPI_DIRECTION_2LINES_OR_1LINE(hspi->Init.Direction));

  if (hspi->State != HAL_SPI_STATE_READY)
 8006676:	68fb      	ldr	r3, [r7, #12]
 8006678:	f893 3051 	ldrb.w	r3, [r3, #81]	@ 0x51
 800667c:	b2db      	uxtb	r3, r3
 800667e:	2b01      	cmp	r3, #1
 8006680:	d001      	beq.n	8006686 <HAL_SPI_Transmit_DMA+0x1e>
  {
    return HAL_BUSY;
 8006682:	2302      	movs	r3, #2
 8006684:	e097      	b.n	80067b6 <HAL_SPI_Transmit_DMA+0x14e>
  }

  if ((pData == NULL) || (Size == 0U))
 8006686:	68bb      	ldr	r3, [r7, #8]
 8006688:	2b00      	cmp	r3, #0
 800668a:	d002      	beq.n	8006692 <HAL_SPI_Transmit_DMA+0x2a>
 800668c:	88fb      	ldrh	r3, [r7, #6]
 800668e:	2b00      	cmp	r3, #0
 8006690:	d101      	bne.n	8006696 <HAL_SPI_Transmit_DMA+0x2e>
  {
    return HAL_ERROR;
 8006692:	2301      	movs	r3, #1
 8006694:	e08f      	b.n	80067b6 <HAL_SPI_Transmit_DMA+0x14e>
  }

  /* Process Locked */
  __HAL_LOCK(hspi);
 8006696:	68fb      	ldr	r3, [r7, #12]
 8006698:	f893 3050 	ldrb.w	r3, [r3, #80]	@ 0x50
 800669c:	2b01      	cmp	r3, #1
 800669e:	d101      	bne.n	80066a4 <HAL_SPI_Transmit_DMA+0x3c>
 80066a0:	2302      	movs	r3, #2
 80066a2:	e088      	b.n	80067b6 <HAL_SPI_Transmit_DMA+0x14e>
 80066a4:	68fb      	ldr	r3, [r7, #12]
 80066a6:	2201      	movs	r2, #1
 80066a8:	f883 2050 	strb.w	r2, [r3, #80]	@ 0x50

  /* Set the transaction information */
  hspi->State       = HAL_SPI_STATE_BUSY_TX;
 80066ac:	68fb      	ldr	r3, [r7, #12]
 80066ae:	2203      	movs	r2, #3
 80066b0:	f883 2051 	strb.w	r2, [r3, #81]	@ 0x51
  hspi->ErrorCode   = HAL_SPI_ERROR_NONE;
 80066b4:	68fb      	ldr	r3, [r7, #12]
 80066b6:	2200      	movs	r2, #0
 80066b8:	655a      	str	r2, [r3, #84]	@ 0x54
  hspi->pTxBuffPtr  = (const uint8_t *)pData;
 80066ba:	68fb      	ldr	r3, [r7, #12]
 80066bc:	68ba      	ldr	r2, [r7, #8]
 80066be:	631a      	str	r2, [r3, #48]	@ 0x30
  hspi->TxXferSize  = Size;
 80066c0:	68fb      	ldr	r3, [r7, #12]
 80066c2:	88fa      	ldrh	r2, [r7, #6]
 80066c4:	869a      	strh	r2, [r3, #52]	@ 0x34
  hspi->TxXferCount = Size;
 80066c6:	68fb      	ldr	r3, [r7, #12]
 80066c8:	88fa      	ldrh	r2, [r7, #6]
 80066ca:	86da      	strh	r2, [r3, #54]	@ 0x36

  /* Init field not used in handle to zero */
  hspi->pRxBuffPtr  = (uint8_t *)NULL;
 80066cc:	68fb      	ldr	r3, [r7, #12]
 80066ce:	2200      	movs	r2, #0
 80066d0:	639a      	str	r2, [r3, #56]	@ 0x38
  hspi->TxISR       = NULL;
 80066d2:	68fb      	ldr	r3, [r7, #12]
 80066d4:	2200      	movs	r2, #0
 80066d6:	645a      	str	r2, [r3, #68]	@ 0x44
  hspi->RxISR       = NULL;
 80066d8:	68fb      	ldr	r3, [r7, #12]
 80066da:	2200      	movs	r2, #0
 80066dc:	641a      	str	r2, [r3, #64]	@ 0x40
  hspi->RxXferSize  = 0U;
 80066de:	68fb      	ldr	r3, [r7, #12]
 80066e0:	2200      	movs	r2, #0
 80066e2:	879a      	strh	r2, [r3, #60]	@ 0x3c
  hspi->RxXferCount = 0U;
 80066e4:	68fb      	ldr	r3, [r7, #12]
 80066e6:	2200      	movs	r2, #0
 80066e8:	87da      	strh	r2, [r3, #62]	@ 0x3e

  /* Configure communication direction : 1Line */
  if (hspi->Init.Direction == SPI_DIRECTION_1LINE)
 80066ea:	68fb      	ldr	r3, [r7, #12]
 80066ec:	689b      	ldr	r3, [r3, #8]
 80066ee:	f5b3 4f00 	cmp.w	r3, #32768	@ 0x8000
 80066f2:	d10f      	bne.n	8006714 <HAL_SPI_Transmit_DMA+0xac>
  {
    /* Disable SPI Peripheral before set 1Line direction (BIDIOE bit) */
    __HAL_SPI_DISABLE(hspi);
 80066f4:	68fb      	ldr	r3, [r7, #12]
 80066f6:	681b      	ldr	r3, [r3, #0]
 80066f8:	681a      	ldr	r2, [r3, #0]
 80066fa:	68fb      	ldr	r3, [r7, #12]
 80066fc:	681b      	ldr	r3, [r3, #0]
 80066fe:	f022 0240 	bic.w	r2, r2, #64	@ 0x40
 8006702:	601a      	str	r2, [r3, #0]
    SPI_1LINE_TX(hspi);
 8006704:	68fb      	ldr	r3, [r7, #12]
 8006706:	681b      	ldr	r3, [r3, #0]
 8006708:	681a      	ldr	r2, [r3, #0]
 800670a:	68fb      	ldr	r3, [r7, #12]
 800670c:	681b      	ldr	r3, [r3, #0]
 800670e:	f442 4280 	orr.w	r2, r2, #16384	@ 0x4000
 8006712:	601a      	str	r2, [r3, #0]
    SPI_RESET_CRC(hspi);
  }
#endif /* USE_SPI_CRC */

  /* Set the SPI TxDMA Half transfer complete callback */
  hspi->hdmatx->XferHalfCpltCallback = SPI_DMAHalfTransmitCplt;
 8006714:	68fb      	ldr	r3, [r7, #12]
 8006716:	6c9b      	ldr	r3, [r3, #72]	@ 0x48
 8006718:	4a29      	ldr	r2, [pc, #164]	@ (80067c0 <HAL_SPI_Transmit_DMA+0x158>)
 800671a:	641a      	str	r2, [r3, #64]	@ 0x40

  /* Set the SPI TxDMA transfer complete callback */
  hspi->hdmatx->XferCpltCallback = SPI_DMATransmitCplt;
 800671c:	68fb      	ldr	r3, [r7, #12]
 800671e:	6c9b      	ldr	r3, [r3, #72]	@ 0x48
 8006720:	4a28      	ldr	r2, [pc, #160]	@ (80067c4 <HAL_SPI_Transmit_DMA+0x15c>)
 8006722:	63da      	str	r2, [r3, #60]	@ 0x3c

  /* Set the DMA error callback */
  hspi->hdmatx->XferErrorCallback = SPI_DMAError;
 8006724:	68fb      	ldr	r3, [r7, #12]
 8006726:	6c9b      	ldr	r3, [r3, #72]	@ 0x48
 8006728:	4a27      	ldr	r2, [pc, #156]	@ (80067c8 <HAL_SPI_Transmit_DMA+0x160>)
 800672a:	64da      	str	r2, [r3, #76]	@ 0x4c

  /* Set the DMA AbortCpltCallback */
  hspi->hdmatx->XferAbortCallback = NULL;
 800672c:	68fb      	ldr	r3, [r7, #12]
 800672e:	6c9b      	ldr	r3, [r3, #72]	@ 0x48
 8006730:	2200      	movs	r2, #0
 8006732:	651a      	str	r2, [r3, #80]	@ 0x50

  /* Enable the Tx DMA Stream/Channel */
  if (HAL_OK != HAL_DMA_Start_IT(hspi->hdmatx, (uint32_t)hspi->pTxBuffPtr, (uint32_t)&hspi->Instance->DR,
 8006734:	68fb      	ldr	r3, [r7, #12]
 8006736:	6c98      	ldr	r0, [r3, #72]	@ 0x48
 8006738:	68fb      	ldr	r3, [r7, #12]
 800673a:	6b1b      	ldr	r3, [r3, #48]	@ 0x30
 800673c:	4619      	mov	r1, r3
 800673e:	68fb      	ldr	r3, [r7, #12]
 8006740:	681b      	ldr	r3, [r3, #0]
 8006742:	330c      	adds	r3, #12
 8006744:	461a      	mov	r2, r3
                                 hspi->TxXferCount))
 8006746:	68fb      	ldr	r3, [r7, #12]
 8006748:	8edb      	ldrh	r3, [r3, #54]	@ 0x36
 800674a:	b29b      	uxth	r3, r3
  if (HAL_OK != HAL_DMA_Start_IT(hspi->hdmatx, (uint32_t)hspi->pTxBuffPtr, (uint32_t)&hspi->Instance->DR,
 800674c:	f7fd f802 	bl	8003754 <HAL_DMA_Start_IT>
 8006750:	4603      	mov	r3, r0
 8006752:	2b00      	cmp	r3, #0
 8006754:	d00b      	beq.n	800676e <HAL_SPI_Transmit_DMA+0x106>
  {
    /* Update SPI error code */
    SET_BIT(hspi->ErrorCode, HAL_SPI_ERROR_DMA);
 8006756:	68fb      	ldr	r3, [r7, #12]
 8006758:	6d5b      	ldr	r3, [r3, #84]	@ 0x54
 800675a:	f043 0210 	orr.w	r2, r3, #16
 800675e:	68fb      	ldr	r3, [r7, #12]
 8006760:	655a      	str	r2, [r3, #84]	@ 0x54
    /* Process Unlocked */
    __HAL_UNLOCK(hspi);
 8006762:	68fb      	ldr	r3, [r7, #12]
 8006764:	2200      	movs	r2, #0
 8006766:	f883 2050 	strb.w	r2, [r3, #80]	@ 0x50
    return HAL_ERROR;
 800676a:	2301      	movs	r3, #1
 800676c:	e023      	b.n	80067b6 <HAL_SPI_Transmit_DMA+0x14e>
  }

  /* Check if the SPI is already enabled */
  if ((hspi->Instance->CR1 & SPI_CR1_SPE) != SPI_CR1_SPE)
 800676e:	68fb      	ldr	r3, [r7, #12]
 8006770:	681b      	ldr	r3, [r3, #0]
 8006772:	681b      	ldr	r3, [r3, #0]
 8006774:	f003 0340 	and.w	r3, r3, #64	@ 0x40
 8006778:	2b40      	cmp	r3, #64	@ 0x40
 800677a:	d007      	beq.n	800678c <HAL_SPI_Transmit_DMA+0x124>
  {
    /* Enable SPI peripheral */
    __HAL_SPI_ENABLE(hspi);
 800677c:	68fb      	ldr	r3, [r7, #12]
 800677e:	681b      	ldr	r3, [r3, #0]
 8006780:	681a      	ldr	r2, [r3, #0]
 8006782:	68fb      	ldr	r3, [r7, #12]
 8006784:	681b      	ldr	r3, [r3, #0]
 8006786:	f042 0240 	orr.w	r2, r2, #64	@ 0x40
 800678a:	601a      	str	r2, [r3, #0]
  }

  /* Process Unlocked */
  __HAL_UNLOCK(hspi);
 800678c:	68fb      	ldr	r3, [r7, #12]
 800678e:	2200      	movs	r2, #0
 8006790:	f883 2050 	strb.w	r2, [r3, #80]	@ 0x50

  /* Enable the SPI Error Interrupt Bit */
  __HAL_SPI_ENABLE_IT(hspi, (SPI_IT_ERR));
 8006794:	68fb      	ldr	r3, [r7, #12]
 8006796:	681b      	ldr	r3, [r3, #0]
 8006798:	685a      	ldr	r2, [r3, #4]
 800679a:	68fb      	ldr	r3, [r7, #12]
 800679c:	681b      	ldr	r3, [r3, #0]
 800679e:	f042 0220 	orr.w	r2, r2, #32
 80067a2:	605a      	str	r2, [r3, #4]

  /* Enable Tx DMA Request */
  SET_BIT(hspi->Instance->CR2, SPI_CR2_TXDMAEN);
 80067a4:	68fb      	ldr	r3, [r7, #12]
 80067a6:	681b      	ldr	r3, [r3, #0]
 80067a8:	685a      	ldr	r2, [r3, #4]
 80067aa:	68fb      	ldr	r3, [r7, #12]
 80067ac:	681b      	ldr	r3, [r3, #0]
 80067ae:	f042 0202 	orr.w	r2, r2, #2
 80067b2:	605a      	str	r2, [r3, #4]

  return HAL_OK;
 80067b4:	2300      	movs	r3, #0
}
 80067b6:	4618      	mov	r0, r3
 80067b8:	3710      	adds	r7, #16
 80067ba:	46bd      	mov	sp, r7
 80067bc:	bd80      	pop	{r7, pc}
 80067be:	bf00      	nop
 80067c0:	08006a71 	.word	0x08006a71
 80067c4:	080069c9 	.word	0x080069c9
 80067c8:	08006a8d 	.word	0x08006a8d

080067cc <HAL_SPI_IRQHandler>:
  * @param  hspi pointer to a SPI_HandleTypeDef structure that contains
  *               the configuration information for the specified SPI module.
  * @retval None
  */
void HAL_SPI_IRQHandler(SPI_HandleTypeDef *hspi)
{
 80067cc:	b580      	push	{r7, lr}
 80067ce:	b088      	sub	sp, #32
 80067d0:	af00      	add	r7, sp, #0
 80067d2:	6078      	str	r0, [r7, #4]
  uint32_t itsource = hspi->Instance->CR2;
 80067d4:	687b      	ldr	r3, [r7, #4]
 80067d6:	681b      	ldr	r3, [r3, #0]
 80067d8:	685b      	ldr	r3, [r3, #4]
 80067da:	61fb      	str	r3, [r7, #28]
  uint32_t itflag   = hspi->Instance->SR;
 80067dc:	687b      	ldr	r3, [r7, #4]
 80067de:	681b      	ldr	r3, [r3, #0]
 80067e0:	689b      	ldr	r3, [r3, #8]
 80067e2:	61bb      	str	r3, [r7, #24]

  /* SPI in mode Receiver ----------------------------------------------------*/
  if ((SPI_CHECK_FLAG(itflag, SPI_FLAG_OVR) == RESET) &&
 80067e4:	69bb      	ldr	r3, [r7, #24]
 80067e6:	f003 0340 	and.w	r3, r3, #64	@ 0x40
 80067ea:	2b00      	cmp	r3, #0
 80067ec:	d10e      	bne.n	800680c <HAL_SPI_IRQHandler+0x40>
      (SPI_CHECK_FLAG(itflag, SPI_FLAG_RXNE) != RESET) && (SPI_CHECK_IT_SOURCE(itsource, SPI_IT_RXNE) != RESET))
 80067ee:	69bb      	ldr	r3, [r7, #24]
 80067f0:	f003 0301 	and.w	r3, r3, #1
  if ((SPI_CHECK_FLAG(itflag, SPI_FLAG_OVR) == RESET) &&
 80067f4:	2b00      	cmp	r3, #0
 80067f6:	d009      	beq.n	800680c <HAL_SPI_IRQHandler+0x40>
      (SPI_CHECK_FLAG(itflag, SPI_FLAG_RXNE) != RESET) && (SPI_CHECK_IT_SOURCE(itsource, SPI_IT_RXNE) != RESET))
 80067f8:	69fb      	ldr	r3, [r7, #28]
 80067fa:	f003 0340 	and.w	r3, r3, #64	@ 0x40
 80067fe:	2b00      	cmp	r3, #0
 8006800:	d004      	beq.n	800680c <HAL_SPI_IRQHandler+0x40>
  {
    hspi->RxISR(hspi);
 8006802:	687b      	ldr	r3, [r7, #4]
 8006804:	6c1b      	ldr	r3, [r3, #64]	@ 0x40
 8006806:	6878      	ldr	r0, [r7, #4]
 8006808:	4798      	blx	r3
    return;
 800680a:	e0ce      	b.n	80069aa <HAL_SPI_IRQHandler+0x1de>
  }

  /* SPI in mode Transmitter -------------------------------------------------*/
  if ((SPI_CHECK_FLAG(itflag, SPI_FLAG_TXE) != RESET) && (SPI_CHECK_IT_SOURCE(itsource, SPI_IT_TXE) != RESET))
 800680c:	69bb      	ldr	r3, [r7, #24]
 800680e:	f003 0302 	and.w	r3, r3, #2
 8006812:	2b00      	cmp	r3, #0
 8006814:	d009      	beq.n	800682a <HAL_SPI_IRQHandler+0x5e>
 8006816:	69fb      	ldr	r3, [r7, #28]
 8006818:	f003 0380 	and.w	r3, r3, #128	@ 0x80
 800681c:	2b00      	cmp	r3, #0
 800681e:	d004      	beq.n	800682a <HAL_SPI_IRQHandler+0x5e>
  {
    hspi->TxISR(hspi);
 8006820:	687b      	ldr	r3, [r7, #4]
 8006822:	6c5b      	ldr	r3, [r3, #68]	@ 0x44
 8006824:	6878      	ldr	r0, [r7, #4]
 8006826:	4798      	blx	r3
    return;
 8006828:	e0bf      	b.n	80069aa <HAL_SPI_IRQHandler+0x1de>
  }

  /* SPI in Error Treatment --------------------------------------------------*/
  if (((SPI_CHECK_FLAG(itflag, SPI_FLAG_MODF) != RESET) || (SPI_CHECK_FLAG(itflag, SPI_FLAG_OVR) != RESET)
 800682a:	69bb      	ldr	r3, [r7, #24]
 800682c:	f003 0320 	and.w	r3, r3, #32
 8006830:	2b00      	cmp	r3, #0
 8006832:	d10a      	bne.n	800684a <HAL_SPI_IRQHandler+0x7e>
 8006834:	69bb      	ldr	r3, [r7, #24]
 8006836:	f003 0340 	and.w	r3, r3, #64	@ 0x40
 800683a:	2b00      	cmp	r3, #0
 800683c:	d105      	bne.n	800684a <HAL_SPI_IRQHandler+0x7e>
       || (SPI_CHECK_FLAG(itflag, SPI_FLAG_FRE) != RESET)) && (SPI_CHECK_IT_SOURCE(itsource, SPI_IT_ERR) != RESET))
 800683e:	69bb      	ldr	r3, [r7, #24]
 8006840:	f403 7380 	and.w	r3, r3, #256	@ 0x100
 8006844:	2b00      	cmp	r3, #0
 8006846:	f000 80b0 	beq.w	80069aa <HAL_SPI_IRQHandler+0x1de>
 800684a:	69fb      	ldr	r3, [r7, #28]
 800684c:	f003 0320 	and.w	r3, r3, #32
 8006850:	2b00      	cmp	r3, #0
 8006852:	f000 80aa 	beq.w	80069aa <HAL_SPI_IRQHandler+0x1de>
  {
    /* SPI Overrun error interrupt occurred ----------------------------------*/
    if (SPI_CHECK_FLAG(itflag, SPI_FLAG_OVR) != RESET)
 8006856:	69bb      	ldr	r3, [r7, #24]
 8006858:	f003 0340 	and.w	r3, r3, #64	@ 0x40
 800685c:	2b00      	cmp	r3, #0
 800685e:	d023      	beq.n	80068a8 <HAL_SPI_IRQHandler+0xdc>
    {
      if (hspi->State != HAL_SPI_STATE_BUSY_TX)
 8006860:	687b      	ldr	r3, [r7, #4]
 8006862:	f893 3051 	ldrb.w	r3, [r3, #81]	@ 0x51
 8006866:	b2db      	uxtb	r3, r3
 8006868:	2b03      	cmp	r3, #3
 800686a:	d011      	beq.n	8006890 <HAL_SPI_IRQHandler+0xc4>
      {
        SET_BIT(hspi->ErrorCode, HAL_SPI_ERROR_OVR);
 800686c:	687b      	ldr	r3, [r7, #4]
 800686e:	6d5b      	ldr	r3, [r3, #84]	@ 0x54
 8006870:	f043 0204 	orr.w	r2, r3, #4
 8006874:	687b      	ldr	r3, [r7, #4]
 8006876:	655a      	str	r2, [r3, #84]	@ 0x54
        __HAL_SPI_CLEAR_OVRFLAG(hspi);
 8006878:	2300      	movs	r3, #0
 800687a:	617b      	str	r3, [r7, #20]
 800687c:	687b      	ldr	r3, [r7, #4]
 800687e:	681b      	ldr	r3, [r3, #0]
 8006880:	68db      	ldr	r3, [r3, #12]
 8006882:	617b      	str	r3, [r7, #20]
 8006884:	687b      	ldr	r3, [r7, #4]
 8006886:	681b      	ldr	r3, [r3, #0]
 8006888:	689b      	ldr	r3, [r3, #8]
 800688a:	617b      	str	r3, [r7, #20]
 800688c:	697b      	ldr	r3, [r7, #20]
 800688e:	e00b      	b.n	80068a8 <HAL_SPI_IRQHandler+0xdc>
      }
      else
      {
        __HAL_SPI_CLEAR_OVRFLAG(hspi);
 8006890:	2300      	movs	r3, #0
 8006892:	613b      	str	r3, [r7, #16]
 8006894:	687b      	ldr	r3, [r7, #4]
 8006896:	681b      	ldr	r3, [r3, #0]
 8006898:	68db      	ldr	r3, [r3, #12]
 800689a:	613b      	str	r3, [r7, #16]
 800689c:	687b      	ldr	r3, [r7, #4]
 800689e:	681b      	ldr	r3, [r3, #0]
 80068a0:	689b      	ldr	r3, [r3, #8]
 80068a2:	613b      	str	r3, [r7, #16]
 80068a4:	693b      	ldr	r3, [r7, #16]
        return;
 80068a6:	e080      	b.n	80069aa <HAL_SPI_IRQHandler+0x1de>
      }
    }

    /* SPI Mode Fault error interrupt occurred -------------------------------*/
    if (SPI_CHECK_FLAG(itflag, SPI_FLAG_MODF) != RESET)
 80068a8:	69bb      	ldr	r3, [r7, #24]
 80068aa:	f003 0320 	and.w	r3, r3, #32
 80068ae:	2b00      	cmp	r3, #0
 80068b0:	d014      	beq.n	80068dc <HAL_SPI_IRQHandler+0x110>
    {
      SET_BIT(hspi->ErrorCode, HAL_SPI_ERROR_MODF);
 80068b2:	687b      	ldr	r3, [r7, #4]
 80068b4:	6d5b      	ldr	r3, [r3, #84]	@ 0x54
 80068b6:	f043 0201 	orr.w	r2, r3, #1
 80068ba:	687b      	ldr	r3, [r7, #4]
 80068bc:	655a      	str	r2, [r3, #84]	@ 0x54
      __HAL_SPI_CLEAR_MODFFLAG(hspi);
 80068be:	2300      	movs	r3, #0
 80068c0:	60fb      	str	r3, [r7, #12]
 80068c2:	687b      	ldr	r3, [r7, #4]
 80068c4:	681b      	ldr	r3, [r3, #0]
 80068c6:	689b      	ldr	r3, [r3, #8]
 80068c8:	60fb      	str	r3, [r7, #12]
 80068ca:	687b      	ldr	r3, [r7, #4]
 80068cc:	681b      	ldr	r3, [r3, #0]
 80068ce:	681a      	ldr	r2, [r3, #0]
 80068d0:	687b      	ldr	r3, [r7, #4]
 80068d2:	681b      	ldr	r3, [r3, #0]
 80068d4:	f022 0240 	bic.w	r2, r2, #64	@ 0x40
 80068d8:	601a      	str	r2, [r3, #0]
 80068da:	68fb      	ldr	r3, [r7, #12]
    }

    /* SPI Frame error interrupt occurred ------------------------------------*/
    if (SPI_CHECK_FLAG(itflag, SPI_FLAG_FRE) != RESET)
 80068dc:	69bb      	ldr	r3, [r7, #24]
 80068de:	f403 7380 	and.w	r3, r3, #256	@ 0x100
 80068e2:	2b00      	cmp	r3, #0
 80068e4:	d00c      	beq.n	8006900 <HAL_SPI_IRQHandler+0x134>
    {
      SET_BIT(hspi->ErrorCode, HAL_SPI_ERROR_FRE);
 80068e6:	687b      	ldr	r3, [r7, #4]
 80068e8:	6d5b      	ldr	r3, [r3, #84]	@ 0x54
 80068ea:	f043 0208 	orr.w	r2, r3, #8
 80068ee:	687b      	ldr	r3, [r7, #4]
 80068f0:	655a      	str	r2, [r3, #84]	@ 0x54
      __HAL_SPI_CLEAR_FREFLAG(hspi);
 80068f2:	2300      	movs	r3, #0
 80068f4:	60bb      	str	r3, [r7, #8]
 80068f6:	687b      	ldr	r3, [r7, #4]
 80068f8:	681b      	ldr	r3, [r3, #0]
 80068fa:	689b      	ldr	r3, [r3, #8]
 80068fc:	60bb      	str	r3, [r7, #8]
 80068fe:	68bb      	ldr	r3, [r7, #8]
    }

    if (hspi->ErrorCode != HAL_SPI_ERROR_NONE)
 8006900:	687b      	ldr	r3, [r7, #4]
 8006902:	6d5b      	ldr	r3, [r3, #84]	@ 0x54
 8006904:	2b00      	cmp	r3, #0
 8006906:	d04f      	beq.n	80069a8 <HAL_SPI_IRQHandler+0x1dc>
    {
      /* Disable all interrupts */
      __HAL_SPI_DISABLE_IT(hspi, SPI_IT_RXNE | SPI_IT_TXE | SPI_IT_ERR);
 8006908:	687b      	ldr	r3, [r7, #4]
 800690a:	681b      	ldr	r3, [r3, #0]
 800690c:	685a      	ldr	r2, [r3, #4]
 800690e:	687b      	ldr	r3, [r7, #4]
 8006910:	681b      	ldr	r3, [r3, #0]
 8006912:	f022 02e0 	bic.w	r2, r2, #224	@ 0xe0
 8006916:	605a      	str	r2, [r3, #4]

      hspi->State = HAL_SPI_STATE_READY;
 8006918:	687b      	ldr	r3, [r7, #4]
 800691a:	2201      	movs	r2, #1
 800691c:	f883 2051 	strb.w	r2, [r3, #81]	@ 0x51
      /* Disable the SPI DMA requests if enabled */
      if ((HAL_IS_BIT_SET(itsource, SPI_CR2_TXDMAEN)) || (HAL_IS_BIT_SET(itsource, SPI_CR2_RXDMAEN)))
 8006920:	69fb      	ldr	r3, [r7, #28]
 8006922:	f003 0302 	and.w	r3, r3, #2
 8006926:	2b00      	cmp	r3, #0
 8006928:	d104      	bne.n	8006934 <HAL_SPI_IRQHandler+0x168>
 800692a:	69fb      	ldr	r3, [r7, #28]
 800692c:	f003 0301 	and.w	r3, r3, #1
 8006930:	2b00      	cmp	r3, #0
 8006932:	d034      	beq.n	800699e <HAL_SPI_IRQHandler+0x1d2>
      {
        CLEAR_BIT(hspi->Instance->CR2, (SPI_CR2_TXDMAEN | SPI_CR2_RXDMAEN));
 8006934:	687b      	ldr	r3, [r7, #4]
 8006936:	681b      	ldr	r3, [r3, #0]
 8006938:	685a      	ldr	r2, [r3, #4]
 800693a:	687b      	ldr	r3, [r7, #4]
 800693c:	681b      	ldr	r3, [r3, #0]
 800693e:	f022 0203 	bic.w	r2, r2, #3
 8006942:	605a      	str	r2, [r3, #4]

        /* Abort the SPI DMA Rx channel */
        if (hspi->hdmarx != NULL)
 8006944:	687b      	ldr	r3, [r7, #4]
 8006946:	6cdb      	ldr	r3, [r3, #76]	@ 0x4c
 8006948:	2b00      	cmp	r3, #0
 800694a:	d011      	beq.n	8006970 <HAL_SPI_IRQHandler+0x1a4>
        {
          /* Set the SPI DMA Abort callback :
          will lead to call HAL_SPI_ErrorCallback() at end of DMA abort procedure */
          hspi->hdmarx->XferAbortCallback = SPI_DMAAbortOnError;
 800694c:	687b      	ldr	r3, [r7, #4]
 800694e:	6cdb      	ldr	r3, [r3, #76]	@ 0x4c
 8006950:	4a17      	ldr	r2, [pc, #92]	@ (80069b0 <HAL_SPI_IRQHandler+0x1e4>)
 8006952:	651a      	str	r2, [r3, #80]	@ 0x50
          if (HAL_OK != HAL_DMA_Abort_IT(hspi->hdmarx))
 8006954:	687b      	ldr	r3, [r7, #4]
 8006956:	6cdb      	ldr	r3, [r3, #76]	@ 0x4c
 8006958:	4618      	mov	r0, r3
 800695a:	f7fc ff53 	bl	8003804 <HAL_DMA_Abort_IT>
 800695e:	4603      	mov	r3, r0
 8006960:	2b00      	cmp	r3, #0
 8006962:	d005      	beq.n	8006970 <HAL_SPI_IRQHandler+0x1a4>
          {
            SET_BIT(hspi->ErrorCode, HAL_SPI_ERROR_ABORT);
 8006964:	687b      	ldr	r3, [r7, #4]
 8006966:	6d5b      	ldr	r3, [r3, #84]	@ 0x54
 8006968:	f043 0240 	orr.w	r2, r3, #64	@ 0x40
 800696c:	687b      	ldr	r3, [r7, #4]
 800696e:	655a      	str	r2, [r3, #84]	@ 0x54
          }
        }
        /* Abort the SPI DMA Tx channel */
        if (hspi->hdmatx != NULL)
 8006970:	687b      	ldr	r3, [r7, #4]
 8006972:	6c9b      	ldr	r3, [r3, #72]	@ 0x48
 8006974:	2b00      	cmp	r3, #0
 8006976:	d016      	beq.n	80069a6 <HAL_SPI_IRQHandler+0x1da>
        {
          /* Set the SPI DMA Abort callback :
          will lead to call HAL_SPI_ErrorCallback() at end of DMA abort procedure */
          hspi->hdmatx->XferAbortCallback = SPI_DMAAbortOnError;
 8006978:	687b      	ldr	r3, [r7, #4]
 800697a:	6c9b      	ldr	r3, [r3, #72]	@ 0x48
 800697c:	4a0c      	ldr	r2, [pc, #48]	@ (80069b0 <HAL_SPI_IRQHandler+0x1e4>)
 800697e:	651a      	str	r2, [r3, #80]	@ 0x50
          if (HAL_OK != HAL_DMA_Abort_IT(hspi->hdmatx))
 8006980:	687b      	ldr	r3, [r7, #4]
 8006982:	6c9b      	ldr	r3, [r3, #72]	@ 0x48
 8006984:	4618      	mov	r0, r3
 8006986:	f7fc ff3d 	bl	8003804 <HAL_DMA_Abort_IT>
 800698a:	4603      	mov	r3, r0
 800698c:	2b00      	cmp	r3, #0
 800698e:	d00a      	beq.n	80069a6 <HAL_SPI_IRQHandler+0x1da>
          {
            SET_BIT(hspi->ErrorCode, HAL_SPI_ERROR_ABORT);
 8006990:	687b      	ldr	r3, [r7, #4]
 8006992:	6d5b      	ldr	r3, [r3, #84]	@ 0x54
 8006994:	f043 0240 	orr.w	r2, r3, #64	@ 0x40
 8006998:	687b      	ldr	r3, [r7, #4]
 800699a:	655a      	str	r2, [r3, #84]	@ 0x54
        if (hspi->hdmatx != NULL)
 800699c:	e003      	b.n	80069a6 <HAL_SPI_IRQHandler+0x1da>
      {
        /* Call user error callback */
#if (USE_HAL_SPI_REGISTER_CALLBACKS == 1U)
        hspi->ErrorCallback(hspi);
#else
        HAL_SPI_ErrorCallback(hspi);
 800699e:	6878      	ldr	r0, [r7, #4]
 80069a0:	f7fb fce6 	bl	8002370 <HAL_SPI_ErrorCallback>
#endif /* USE_HAL_SPI_REGISTER_CALLBACKS */
      }
    }
    return;
 80069a4:	e000      	b.n	80069a8 <HAL_SPI_IRQHandler+0x1dc>
        if (hspi->hdmatx != NULL)
 80069a6:	bf00      	nop
    return;
 80069a8:	bf00      	nop
  }
}
 80069aa:	3720      	adds	r7, #32
 80069ac:	46bd      	mov	sp, r7
 80069ae:	bd80      	pop	{r7, pc}
 80069b0:	08006acd 	.word	0x08006acd

080069b4 <HAL_SPI_TxHalfCpltCallback>:
  * @param  hspi pointer to a SPI_HandleTypeDef structure that contains
  *               the configuration information for SPI module.
  * @retval None
  */
__weak void HAL_SPI_TxHalfCpltCallback(SPI_HandleTypeDef *hspi)
{
 80069b4:	b480      	push	{r7}
 80069b6:	b083      	sub	sp, #12
 80069b8:	af00      	add	r7, sp, #0
 80069ba:	6078      	str	r0, [r7, #4]
  UNUSED(hspi);

  /* NOTE : This function should not be modified, when the callback is needed,
            the HAL_SPI_TxHalfCpltCallback should be implemented in the user file
   */
}
 80069bc:	bf00      	nop
 80069be:	370c      	adds	r7, #12
 80069c0:	46bd      	mov	sp, r7
 80069c2:	f85d 7b04 	ldr.w	r7, [sp], #4
 80069c6:	4770      	bx	lr

080069c8 <SPI_DMATransmitCplt>:
  * @param  hdma pointer to a DMA_HandleTypeDef structure that contains
  *               the configuration information for the specified DMA module.
  * @retval None
  */
static void SPI_DMATransmitCplt(DMA_HandleTypeDef *hdma)
{
 80069c8:	b580      	push	{r7, lr}
 80069ca:	b086      	sub	sp, #24
 80069cc:	af00      	add	r7, sp, #0
 80069ce:	6078      	str	r0, [r7, #4]
  SPI_HandleTypeDef *hspi = (SPI_HandleTypeDef *)(((DMA_HandleTypeDef *)hdma)->Parent); /* Derogation MISRAC2012-Rule-11.5 */
 80069d0:	687b      	ldr	r3, [r7, #4]
 80069d2:	6b9b      	ldr	r3, [r3, #56]	@ 0x38
 80069d4:	617b      	str	r3, [r7, #20]
  uint32_t tickstart;

  /* Init tickstart for timeout management*/
  tickstart = HAL_GetTick();
 80069d6:	f7fc f831 	bl	8002a3c <HAL_GetTick>
 80069da:	6138      	str	r0, [r7, #16]

  /* DMA Normal Mode */
  if ((hdma->Instance->CR & DMA_SxCR_CIRC) != DMA_SxCR_CIRC)
 80069dc:	687b      	ldr	r3, [r7, #4]
 80069de:	681b      	ldr	r3, [r3, #0]
 80069e0:	681b      	ldr	r3, [r3, #0]
 80069e2:	f403 7380 	and.w	r3, r3, #256	@ 0x100
 80069e6:	f5b3 7f80 	cmp.w	r3, #256	@ 0x100
 80069ea:	d03b      	beq.n	8006a64 <SPI_DMATransmitCplt+0x9c>
  {
    /* Disable ERR interrupt */
    __HAL_SPI_DISABLE_IT(hspi, SPI_IT_ERR);
 80069ec:	697b      	ldr	r3, [r7, #20]
 80069ee:	681b      	ldr	r3, [r3, #0]
 80069f0:	685a      	ldr	r2, [r3, #4]
 80069f2:	697b      	ldr	r3, [r7, #20]
 80069f4:	681b      	ldr	r3, [r3, #0]
 80069f6:	f022 0220 	bic.w	r2, r2, #32
 80069fa:	605a      	str	r2, [r3, #4]

    /* Disable Tx DMA Request */
    CLEAR_BIT(hspi->Instance->CR2, SPI_CR2_TXDMAEN);
 80069fc:	697b      	ldr	r3, [r7, #20]
 80069fe:	681b      	ldr	r3, [r3, #0]
 8006a00:	685a      	ldr	r2, [r3, #4]
 8006a02:	697b      	ldr	r3, [r7, #20]
 8006a04:	681b      	ldr	r3, [r3, #0]
 8006a06:	f022 0202 	bic.w	r2, r2, #2
 8006a0a:	605a      	str	r2, [r3, #4]

    /* Check the end of the transaction */
    if (SPI_EndRxTxTransaction(hspi, SPI_DEFAULT_TIMEOUT, tickstart) != HAL_OK)
 8006a0c:	693a      	ldr	r2, [r7, #16]
 8006a0e:	2164      	movs	r1, #100	@ 0x64
 8006a10:	6978      	ldr	r0, [r7, #20]
 8006a12:	f000 f95d 	bl	8006cd0 <SPI_EndRxTxTransaction>
 8006a16:	4603      	mov	r3, r0
 8006a18:	2b00      	cmp	r3, #0
 8006a1a:	d005      	beq.n	8006a28 <SPI_DMATransmitCplt+0x60>
    {
      SET_BIT(hspi->ErrorCode, HAL_SPI_ERROR_FLAG);
 8006a1c:	697b      	ldr	r3, [r7, #20]
 8006a1e:	6d5b      	ldr	r3, [r3, #84]	@ 0x54
 8006a20:	f043 0220 	orr.w	r2, r3, #32
 8006a24:	697b      	ldr	r3, [r7, #20]
 8006a26:	655a      	str	r2, [r3, #84]	@ 0x54
    }

    /* Clear overrun flag in 2 Lines communication mode because received data is not read */
    if (hspi->Init.Direction == SPI_DIRECTION_2LINES)
 8006a28:	697b      	ldr	r3, [r7, #20]
 8006a2a:	689b      	ldr	r3, [r3, #8]
 8006a2c:	2b00      	cmp	r3, #0
 8006a2e:	d10a      	bne.n	8006a46 <SPI_DMATransmitCplt+0x7e>
    {
      __HAL_SPI_CLEAR_OVRFLAG(hspi);
 8006a30:	2300      	movs	r3, #0
 8006a32:	60fb      	str	r3, [r7, #12]
 8006a34:	697b      	ldr	r3, [r7, #20]
 8006a36:	681b      	ldr	r3, [r3, #0]
 8006a38:	68db      	ldr	r3, [r3, #12]
 8006a3a:	60fb      	str	r3, [r7, #12]
 8006a3c:	697b      	ldr	r3, [r7, #20]
 8006a3e:	681b      	ldr	r3, [r3, #0]
 8006a40:	689b      	ldr	r3, [r3, #8]
 8006a42:	60fb      	str	r3, [r7, #12]
 8006a44:	68fb      	ldr	r3, [r7, #12]
    }

    hspi->TxXferCount = 0U;
 8006a46:	697b      	ldr	r3, [r7, #20]
 8006a48:	2200      	movs	r2, #0
 8006a4a:	86da      	strh	r2, [r3, #54]	@ 0x36
    hspi->State = HAL_SPI_STATE_READY;
 8006a4c:	697b      	ldr	r3, [r7, #20]
 8006a4e:	2201      	movs	r2, #1
 8006a50:	f883 2051 	strb.w	r2, [r3, #81]	@ 0x51

    if (hspi->ErrorCode != HAL_SPI_ERROR_NONE)
 8006a54:	697b      	ldr	r3, [r7, #20]
 8006a56:	6d5b      	ldr	r3, [r3, #84]	@ 0x54
 8006a58:	2b00      	cmp	r3, #0
 8006a5a:	d003      	beq.n	8006a64 <SPI_DMATransmitCplt+0x9c>
    {
      /* Call user error callback */
#if (USE_HAL_SPI_REGISTER_CALLBACKS == 1U)
      hspi->ErrorCallback(hspi);
#else
      HAL_SPI_ErrorCallback(hspi);
 8006a5c:	6978      	ldr	r0, [r7, #20]
 8006a5e:	f7fb fc87 	bl	8002370 <HAL_SPI_ErrorCallback>
#endif /* USE_HAL_SPI_REGISTER_CALLBACKS */
      return;
 8006a62:	e002      	b.n	8006a6a <SPI_DMATransmitCplt+0xa2>
  }
  /* Call user Tx complete callback */
#if (USE_HAL_SPI_REGISTER_CALLBACKS == 1U)
  hspi->TxCpltCallback(hspi);
#else
  HAL_SPI_TxCpltCallback(hspi);
 8006a64:	6978      	ldr	r0, [r7, #20]
 8006a66:	f7fb fc99 	bl	800239c <HAL_SPI_TxCpltCallback>
#endif /* USE_HAL_SPI_REGISTER_CALLBACKS */
}
 8006a6a:	3718      	adds	r7, #24
 8006a6c:	46bd      	mov	sp, r7
 8006a6e:	bd80      	pop	{r7, pc}

08006a70 <SPI_DMAHalfTransmitCplt>:
  * @param  hdma pointer to a DMA_HandleTypeDef structure that contains
  *               the configuration information for the specified DMA module.
  * @retval None
  */
static void SPI_DMAHalfTransmitCplt(DMA_HandleTypeDef *hdma)
{
 8006a70:	b580      	push	{r7, lr}
 8006a72:	b084      	sub	sp, #16
 8006a74:	af00      	add	r7, sp, #0
 8006a76:	6078      	str	r0, [r7, #4]
  SPI_HandleTypeDef *hspi = (SPI_HandleTypeDef *)(((DMA_HandleTypeDef *)hdma)->Parent); /* Derogation MISRAC2012-Rule-11.5 */
 8006a78:	687b      	ldr	r3, [r7, #4]
 8006a7a:	6b9b      	ldr	r3, [r3, #56]	@ 0x38
 8006a7c:	60fb      	str	r3, [r7, #12]

  /* Call user Tx half complete callback */
#if (USE_HAL_SPI_REGISTER_CALLBACKS == 1U)
  hspi->TxHalfCpltCallback(hspi);
#else
  HAL_SPI_TxHalfCpltCallback(hspi);
 8006a7e:	68f8      	ldr	r0, [r7, #12]
 8006a80:	f7ff ff98 	bl	80069b4 <HAL_SPI_TxHalfCpltCallback>
#endif /* USE_HAL_SPI_REGISTER_CALLBACKS */
}
 8006a84:	bf00      	nop
 8006a86:	3710      	adds	r7, #16
 8006a88:	46bd      	mov	sp, r7
 8006a8a:	bd80      	pop	{r7, pc}

08006a8c <SPI_DMAError>:
  * @param  hdma pointer to a DMA_HandleTypeDef structure that contains
  *               the configuration information for the specified DMA module.
  * @retval None
  */
static void SPI_DMAError(DMA_HandleTypeDef *hdma)
{
 8006a8c:	b580      	push	{r7, lr}
 8006a8e:	b084      	sub	sp, #16
 8006a90:	af00      	add	r7, sp, #0
 8006a92:	6078      	str	r0, [r7, #4]
  SPI_HandleTypeDef *hspi = (SPI_HandleTypeDef *)(((DMA_HandleTypeDef *)hdma)->Parent); /* Derogation MISRAC2012-Rule-11.5 */
 8006a94:	687b      	ldr	r3, [r7, #4]
 8006a96:	6b9b      	ldr	r3, [r3, #56]	@ 0x38
 8006a98:	60fb      	str	r3, [r7, #12]

  /* Stop the disable DMA transfer on SPI side */
  CLEAR_BIT(hspi->Instance->CR2, SPI_CR2_TXDMAEN | SPI_CR2_RXDMAEN);
 8006a9a:	68fb      	ldr	r3, [r7, #12]
 8006a9c:	681b      	ldr	r3, [r3, #0]
 8006a9e:	685a      	ldr	r2, [r3, #4]
 8006aa0:	68fb      	ldr	r3, [r7, #12]
 8006aa2:	681b      	ldr	r3, [r3, #0]
 8006aa4:	f022 0203 	bic.w	r2, r2, #3
 8006aa8:	605a      	str	r2, [r3, #4]

  SET_BIT(hspi->ErrorCode, HAL_SPI_ERROR_DMA);
 8006aaa:	68fb      	ldr	r3, [r7, #12]
 8006aac:	6d5b      	ldr	r3, [r3, #84]	@ 0x54
 8006aae:	f043 0210 	orr.w	r2, r3, #16
 8006ab2:	68fb      	ldr	r3, [r7, #12]
 8006ab4:	655a      	str	r2, [r3, #84]	@ 0x54
  hspi->State = HAL_SPI_STATE_READY;
 8006ab6:	68fb      	ldr	r3, [r7, #12]
 8006ab8:	2201      	movs	r2, #1
 8006aba:	f883 2051 	strb.w	r2, [r3, #81]	@ 0x51
  /* Call user error callback */
#if (USE_HAL_SPI_REGISTER_CALLBACKS == 1U)
  hspi->ErrorCallback(hspi);
#else
  HAL_SPI_ErrorCallback(hspi);
 8006abe:	68f8      	ldr	r0, [r7, #12]
 8006ac0:	f7fb fc56 	bl	8002370 <HAL_SPI_ErrorCallback>
#endif /* USE_HAL_SPI_REGISTER_CALLBACKS */
}
 8006ac4:	bf00      	nop
 8006ac6:	3710      	adds	r7, #16
 8006ac8:	46bd      	mov	sp, r7
 8006aca:	bd80      	pop	{r7, pc}

08006acc <SPI_DMAAbortOnError>:
  *         (To be called at end of DMA Abort procedure following error occurrence).
  * @param  hdma DMA handle.
  * @retval None
  */
static void SPI_DMAAbortOnError(DMA_HandleTypeDef *hdma)
{
 8006acc:	b580      	push	{r7, lr}
 8006ace:	b084      	sub	sp, #16
 8006ad0:	af00      	add	r7, sp, #0
 8006ad2:	6078      	str	r0, [r7, #4]
  SPI_HandleTypeDef *hspi = (SPI_HandleTypeDef *)(((DMA_HandleTypeDef *)hdma)->Parent); /* Derogation MISRAC2012-Rule-11.5 */
 8006ad4:	687b      	ldr	r3, [r7, #4]
 8006ad6:	6b9b      	ldr	r3, [r3, #56]	@ 0x38
 8006ad8:	60fb      	str	r3, [r7, #12]
  hspi->RxXferCount = 0U;
 8006ada:	68fb      	ldr	r3, [r7, #12]
 8006adc:	2200      	movs	r2, #0
 8006ade:	87da      	strh	r2, [r3, #62]	@ 0x3e
  hspi->TxXferCount = 0U;
 8006ae0:	68fb      	ldr	r3, [r7, #12]
 8006ae2:	2200      	movs	r2, #0
 8006ae4:	86da      	strh	r2, [r3, #54]	@ 0x36

  /* Call user error callback */
#if (USE_HAL_SPI_REGISTER_CALLBACKS == 1U)
  hspi->ErrorCallback(hspi);
#else
  HAL_SPI_ErrorCallback(hspi);
 8006ae6:	68f8      	ldr	r0, [r7, #12]
 8006ae8:	f7fb fc42 	bl	8002370 <HAL_SPI_ErrorCallback>
#endif /* USE_HAL_SPI_REGISTER_CALLBACKS */
}
 8006aec:	bf00      	nop
 8006aee:	3710      	adds	r7, #16
 8006af0:	46bd      	mov	sp, r7
 8006af2:	bd80      	pop	{r7, pc}

08006af4 <SPI_WaitFlagStateUntilTimeout>:
  * @param  Tickstart tick start value
  * @retval HAL status
  */
static HAL_StatusTypeDef SPI_WaitFlagStateUntilTimeout(SPI_HandleTypeDef *hspi, uint32_t Flag, FlagStatus State,
                                                       uint32_t Timeout, uint32_t Tickstart)
{
 8006af4:	b580      	push	{r7, lr}
 8006af6:	b088      	sub	sp, #32
 8006af8:	af00      	add	r7, sp, #0
 8006afa:	60f8      	str	r0, [r7, #12]
 8006afc:	60b9      	str	r1, [r7, #8]
 8006afe:	603b      	str	r3, [r7, #0]
 8006b00:	4613      	mov	r3, r2
 8006b02:	71fb      	strb	r3, [r7, #7]
  __IO uint32_t count;
  uint32_t tmp_timeout;
  uint32_t tmp_tickstart;

  /* Adjust Timeout value  in case of end of transfer */
  tmp_timeout   = Timeout - (HAL_GetTick() - Tickstart);
 8006b04:	f7fb ff9a 	bl	8002a3c <HAL_GetTick>
 8006b08:	4602      	mov	r2, r0
 8006b0a:	6abb      	ldr	r3, [r7, #40]	@ 0x28
 8006b0c:	1a9b      	subs	r3, r3, r2
 8006b0e:	683a      	ldr	r2, [r7, #0]
 8006b10:	4413      	add	r3, r2
 8006b12:	61fb      	str	r3, [r7, #28]
  tmp_tickstart = HAL_GetTick();
 8006b14:	f7fb ff92 	bl	8002a3c <HAL_GetTick>
 8006b18:	61b8      	str	r0, [r7, #24]

  /* Calculate Timeout based on a software loop to avoid blocking issue if Systick is disabled */
  count = tmp_timeout * ((SystemCoreClock * 32U) >> 20U);
 8006b1a:	4b39      	ldr	r3, [pc, #228]	@ (8006c00 <SPI_WaitFlagStateUntilTimeout+0x10c>)
 8006b1c:	681b      	ldr	r3, [r3, #0]
 8006b1e:	015b      	lsls	r3, r3, #5
 8006b20:	0d1b      	lsrs	r3, r3, #20
 8006b22:	69fa      	ldr	r2, [r7, #28]
 8006b24:	fb02 f303 	mul.w	r3, r2, r3
 8006b28:	617b      	str	r3, [r7, #20]

  while ((__HAL_SPI_GET_FLAG(hspi, Flag) ? SET : RESET) != State)
 8006b2a:	e054      	b.n	8006bd6 <SPI_WaitFlagStateUntilTimeout+0xe2>
  {
    if (Timeout != HAL_MAX_DELAY)
 8006b2c:	683b      	ldr	r3, [r7, #0]
 8006b2e:	f1b3 3fff 	cmp.w	r3, #4294967295
 8006b32:	d050      	beq.n	8006bd6 <SPI_WaitFlagStateUntilTimeout+0xe2>
    {
      if (((HAL_GetTick() - tmp_tickstart) >= tmp_timeout) || (tmp_timeout == 0U))
 8006b34:	f7fb ff82 	bl	8002a3c <HAL_GetTick>
 8006b38:	4602      	mov	r2, r0
 8006b3a:	69bb      	ldr	r3, [r7, #24]
 8006b3c:	1ad3      	subs	r3, r2, r3
 8006b3e:	69fa      	ldr	r2, [r7, #28]
 8006b40:	429a      	cmp	r2, r3
 8006b42:	d902      	bls.n	8006b4a <SPI_WaitFlagStateUntilTimeout+0x56>
 8006b44:	69fb      	ldr	r3, [r7, #28]
 8006b46:	2b00      	cmp	r3, #0
 8006b48:	d13d      	bne.n	8006bc6 <SPI_WaitFlagStateUntilTimeout+0xd2>
        /* Disable the SPI and reset the CRC: the CRC value should be cleared
           on both master and slave sides in order to resynchronize the master
           and slave for their respective CRC calculation */

        /* Disable TXE, RXNE and ERR interrupts for the interrupt process */
        __HAL_SPI_DISABLE_IT(hspi, (SPI_IT_TXE | SPI_IT_RXNE | SPI_IT_ERR));
 8006b4a:	68fb      	ldr	r3, [r7, #12]
 8006b4c:	681b      	ldr	r3, [r3, #0]
 8006b4e:	685a      	ldr	r2, [r3, #4]
 8006b50:	68fb      	ldr	r3, [r7, #12]
 8006b52:	681b      	ldr	r3, [r3, #0]
 8006b54:	f022 02e0 	bic.w	r2, r2, #224	@ 0xe0
 8006b58:	605a      	str	r2, [r3, #4]

        if ((hspi->Init.Mode == SPI_MODE_MASTER) && ((hspi->Init.Direction == SPI_DIRECTION_1LINE)
 8006b5a:	68fb      	ldr	r3, [r7, #12]
 8006b5c:	685b      	ldr	r3, [r3, #4]
 8006b5e:	f5b3 7f82 	cmp.w	r3, #260	@ 0x104
 8006b62:	d111      	bne.n	8006b88 <SPI_WaitFlagStateUntilTimeout+0x94>
 8006b64:	68fb      	ldr	r3, [r7, #12]
 8006b66:	689b      	ldr	r3, [r3, #8]
 8006b68:	f5b3 4f00 	cmp.w	r3, #32768	@ 0x8000
 8006b6c:	d004      	beq.n	8006b78 <SPI_WaitFlagStateUntilTimeout+0x84>
                                                     || (hspi->Init.Direction == SPI_DIRECTION_2LINES_RXONLY)))
 8006b6e:	68fb      	ldr	r3, [r7, #12]
 8006b70:	689b      	ldr	r3, [r3, #8]
 8006b72:	f5b3 6f80 	cmp.w	r3, #1024	@ 0x400
 8006b76:	d107      	bne.n	8006b88 <SPI_WaitFlagStateUntilTimeout+0x94>
        {
          /* Disable SPI peripheral */
          __HAL_SPI_DISABLE(hspi);
 8006b78:	68fb      	ldr	r3, [r7, #12]
 8006b7a:	681b      	ldr	r3, [r3, #0]
 8006b7c:	681a      	ldr	r2, [r3, #0]
 8006b7e:	68fb      	ldr	r3, [r7, #12]
 8006b80:	681b      	ldr	r3, [r3, #0]
 8006b82:	f022 0240 	bic.w	r2, r2, #64	@ 0x40
 8006b86:	601a      	str	r2, [r3, #0]
        }

        /* Reset CRC Calculation */
        if (hspi->Init.CRCCalculation == SPI_CRCCALCULATION_ENABLE)
 8006b88:	68fb      	ldr	r3, [r7, #12]
 8006b8a:	6a9b      	ldr	r3, [r3, #40]	@ 0x28
 8006b8c:	f5b3 5f00 	cmp.w	r3, #8192	@ 0x2000
 8006b90:	d10f      	bne.n	8006bb2 <SPI_WaitFlagStateUntilTimeout+0xbe>
        {
          SPI_RESET_CRC(hspi);
 8006b92:	68fb      	ldr	r3, [r7, #12]
 8006b94:	681b      	ldr	r3, [r3, #0]
 8006b96:	681a      	ldr	r2, [r3, #0]
 8006b98:	68fb      	ldr	r3, [r7, #12]
 8006b9a:	681b      	ldr	r3, [r3, #0]
 8006b9c:	f422 5200 	bic.w	r2, r2, #8192	@ 0x2000
 8006ba0:	601a      	str	r2, [r3, #0]
 8006ba2:	68fb      	ldr	r3, [r7, #12]
 8006ba4:	681b      	ldr	r3, [r3, #0]
 8006ba6:	681a      	ldr	r2, [r3, #0]
 8006ba8:	68fb      	ldr	r3, [r7, #12]
 8006baa:	681b      	ldr	r3, [r3, #0]
 8006bac:	f442 5200 	orr.w	r2, r2, #8192	@ 0x2000
 8006bb0:	601a      	str	r2, [r3, #0]
        }

        hspi->State = HAL_SPI_STATE_READY;
 8006bb2:	68fb      	ldr	r3, [r7, #12]
 8006bb4:	2201      	movs	r2, #1
 8006bb6:	f883 2051 	strb.w	r2, [r3, #81]	@ 0x51

        /* Process Unlocked */
        __HAL_UNLOCK(hspi);
 8006bba:	68fb      	ldr	r3, [r7, #12]
 8006bbc:	2200      	movs	r2, #0
 8006bbe:	f883 2050 	strb.w	r2, [r3, #80]	@ 0x50

        return HAL_TIMEOUT;
 8006bc2:	2303      	movs	r3, #3
 8006bc4:	e017      	b.n	8006bf6 <SPI_WaitFlagStateUntilTimeout+0x102>
      }
      /* If Systick is disabled or not incremented, deactivate timeout to go in disable loop procedure */
      if (count == 0U)
 8006bc6:	697b      	ldr	r3, [r7, #20]
 8006bc8:	2b00      	cmp	r3, #0
 8006bca:	d101      	bne.n	8006bd0 <SPI_WaitFlagStateUntilTimeout+0xdc>
      {
        tmp_timeout = 0U;
 8006bcc:	2300      	movs	r3, #0
 8006bce:	61fb      	str	r3, [r7, #28]
      }
      count--;
 8006bd0:	697b      	ldr	r3, [r7, #20]
 8006bd2:	3b01      	subs	r3, #1
 8006bd4:	617b      	str	r3, [r7, #20]
  while ((__HAL_SPI_GET_FLAG(hspi, Flag) ? SET : RESET) != State)
 8006bd6:	68fb      	ldr	r3, [r7, #12]
 8006bd8:	681b      	ldr	r3, [r3, #0]
 8006bda:	689a      	ldr	r2, [r3, #8]
 8006bdc:	68bb      	ldr	r3, [r7, #8]
 8006bde:	4013      	ands	r3, r2
 8006be0:	68ba      	ldr	r2, [r7, #8]
 8006be2:	429a      	cmp	r2, r3
 8006be4:	bf0c      	ite	eq
 8006be6:	2301      	moveq	r3, #1
 8006be8:	2300      	movne	r3, #0
 8006bea:	b2db      	uxtb	r3, r3
 8006bec:	461a      	mov	r2, r3
 8006bee:	79fb      	ldrb	r3, [r7, #7]
 8006bf0:	429a      	cmp	r2, r3
 8006bf2:	d19b      	bne.n	8006b2c <SPI_WaitFlagStateUntilTimeout+0x38>
    }
  }

  return HAL_OK;
 8006bf4:	2300      	movs	r3, #0
}
 8006bf6:	4618      	mov	r0, r3
 8006bf8:	3720      	adds	r7, #32
 8006bfa:	46bd      	mov	sp, r7
 8006bfc:	bd80      	pop	{r7, pc}
 8006bfe:	bf00      	nop
 8006c00:	20000014 	.word	0x20000014

08006c04 <SPI_EndRxTransaction>:
  * @param  Timeout Timeout duration
  * @param  Tickstart tick start value
  * @retval HAL status
  */
static HAL_StatusTypeDef SPI_EndRxTransaction(SPI_HandleTypeDef *hspi,  uint32_t Timeout, uint32_t Tickstart)
{
 8006c04:	b580      	push	{r7, lr}
 8006c06:	b086      	sub	sp, #24
 8006c08:	af02      	add	r7, sp, #8
 8006c0a:	60f8      	str	r0, [r7, #12]
 8006c0c:	60b9      	str	r1, [r7, #8]
 8006c0e:	607a      	str	r2, [r7, #4]
  if ((hspi->Init.Mode == SPI_MODE_MASTER) && ((hspi->Init.Direction == SPI_DIRECTION_1LINE)
 8006c10:	68fb      	ldr	r3, [r7, #12]
 8006c12:	685b      	ldr	r3, [r3, #4]
 8006c14:	f5b3 7f82 	cmp.w	r3, #260	@ 0x104
 8006c18:	d111      	bne.n	8006c3e <SPI_EndRxTransaction+0x3a>
 8006c1a:	68fb      	ldr	r3, [r7, #12]
 8006c1c:	689b      	ldr	r3, [r3, #8]
 8006c1e:	f5b3 4f00 	cmp.w	r3, #32768	@ 0x8000
 8006c22:	d004      	beq.n	8006c2e <SPI_EndRxTransaction+0x2a>
                                               || (hspi->Init.Direction == SPI_DIRECTION_2LINES_RXONLY)))
 8006c24:	68fb      	ldr	r3, [r7, #12]
 8006c26:	689b      	ldr	r3, [r3, #8]
 8006c28:	f5b3 6f80 	cmp.w	r3, #1024	@ 0x400
 8006c2c:	d107      	bne.n	8006c3e <SPI_EndRxTransaction+0x3a>
  {
    /* Disable SPI peripheral */
    __HAL_SPI_DISABLE(hspi);
 8006c2e:	68fb      	ldr	r3, [r7, #12]
 8006c30:	681b      	ldr	r3, [r3, #0]
 8006c32:	681a      	ldr	r2, [r3, #0]
 8006c34:	68fb      	ldr	r3, [r7, #12]
 8006c36:	681b      	ldr	r3, [r3, #0]
 8006c38:	f022 0240 	bic.w	r2, r2, #64	@ 0x40
 8006c3c:	601a      	str	r2, [r3, #0]
  }

  /* Erratasheet: BSY bit may stay high at the end of a data transfer in Slave mode */
  if (hspi->Init.Mode == SPI_MODE_MASTER)
 8006c3e:	68fb      	ldr	r3, [r7, #12]
 8006c40:	685b      	ldr	r3, [r3, #4]
 8006c42:	f5b3 7f82 	cmp.w	r3, #260	@ 0x104
 8006c46:	d12a      	bne.n	8006c9e <SPI_EndRxTransaction+0x9a>
  {
    if (hspi->Init.Direction != SPI_DIRECTION_2LINES_RXONLY)
 8006c48:	68fb      	ldr	r3, [r7, #12]
 8006c4a:	689b      	ldr	r3, [r3, #8]
 8006c4c:	f5b3 6f80 	cmp.w	r3, #1024	@ 0x400
 8006c50:	d012      	beq.n	8006c78 <SPI_EndRxTransaction+0x74>
    {
      /* Control the BSY flag */
      if (SPI_WaitFlagStateUntilTimeout(hspi, SPI_FLAG_BSY, RESET, Timeout, Tickstart) != HAL_OK)
 8006c52:	687b      	ldr	r3, [r7, #4]
 8006c54:	9300      	str	r3, [sp, #0]
 8006c56:	68bb      	ldr	r3, [r7, #8]
 8006c58:	2200      	movs	r2, #0
 8006c5a:	2180      	movs	r1, #128	@ 0x80
 8006c5c:	68f8      	ldr	r0, [r7, #12]
 8006c5e:	f7ff ff49 	bl	8006af4 <SPI_WaitFlagStateUntilTimeout>
 8006c62:	4603      	mov	r3, r0
 8006c64:	2b00      	cmp	r3, #0
 8006c66:	d02d      	beq.n	8006cc4 <SPI_EndRxTransaction+0xc0>
      {
        SET_BIT(hspi->ErrorCode, HAL_SPI_ERROR_FLAG);
 8006c68:	68fb      	ldr	r3, [r7, #12]
 8006c6a:	6d5b      	ldr	r3, [r3, #84]	@ 0x54
 8006c6c:	f043 0220 	orr.w	r2, r3, #32
 8006c70:	68fb      	ldr	r3, [r7, #12]
 8006c72:	655a      	str	r2, [r3, #84]	@ 0x54
        return HAL_TIMEOUT;
 8006c74:	2303      	movs	r3, #3
 8006c76:	e026      	b.n	8006cc6 <SPI_EndRxTransaction+0xc2>
      }
    }
    else
    {
      /* Wait the RXNE reset */
      if (SPI_WaitFlagStateUntilTimeout(hspi, SPI_FLAG_RXNE, RESET, Timeout, Tickstart) != HAL_OK)
 8006c78:	687b      	ldr	r3, [r7, #4]
 8006c7a:	9300      	str	r3, [sp, #0]
 8006c7c:	68bb      	ldr	r3, [r7, #8]
 8006c7e:	2200      	movs	r2, #0
 8006c80:	2101      	movs	r1, #1
 8006c82:	68f8      	ldr	r0, [r7, #12]
 8006c84:	f7ff ff36 	bl	8006af4 <SPI_WaitFlagStateUntilTimeout>
 8006c88:	4603      	mov	r3, r0
 8006c8a:	2b00      	cmp	r3, #0
 8006c8c:	d01a      	beq.n	8006cc4 <SPI_EndRxTransaction+0xc0>
      {
        SET_BIT(hspi->ErrorCode, HAL_SPI_ERROR_FLAG);
 8006c8e:	68fb      	ldr	r3, [r7, #12]
 8006c90:	6d5b      	ldr	r3, [r3, #84]	@ 0x54
 8006c92:	f043 0220 	orr.w	r2, r3, #32
 8006c96:	68fb      	ldr	r3, [r7, #12]
 8006c98:	655a      	str	r2, [r3, #84]	@ 0x54
        return HAL_TIMEOUT;
 8006c9a:	2303      	movs	r3, #3
 8006c9c:	e013      	b.n	8006cc6 <SPI_EndRxTransaction+0xc2>
    }
  }
  else
  {
    /* Wait the RXNE reset */
    if (SPI_WaitFlagStateUntilTimeout(hspi, SPI_FLAG_RXNE, RESET, Timeout, Tickstart) != HAL_OK)
 8006c9e:	687b      	ldr	r3, [r7, #4]
 8006ca0:	9300      	str	r3, [sp, #0]
 8006ca2:	68bb      	ldr	r3, [r7, #8]
 8006ca4:	2200      	movs	r2, #0
 8006ca6:	2101      	movs	r1, #1
 8006ca8:	68f8      	ldr	r0, [r7, #12]
 8006caa:	f7ff ff23 	bl	8006af4 <SPI_WaitFlagStateUntilTimeout>
 8006cae:	4603      	mov	r3, r0
 8006cb0:	2b00      	cmp	r3, #0
 8006cb2:	d007      	beq.n	8006cc4 <SPI_EndRxTransaction+0xc0>
    {
      SET_BIT(hspi->ErrorCode, HAL_SPI_ERROR_FLAG);
 8006cb4:	68fb      	ldr	r3, [r7, #12]
 8006cb6:	6d5b      	ldr	r3, [r3, #84]	@ 0x54
 8006cb8:	f043 0220 	orr.w	r2, r3, #32
 8006cbc:	68fb      	ldr	r3, [r7, #12]
 8006cbe:	655a      	str	r2, [r3, #84]	@ 0x54
      return HAL_TIMEOUT;
 8006cc0:	2303      	movs	r3, #3
 8006cc2:	e000      	b.n	8006cc6 <SPI_EndRxTransaction+0xc2>
    }
  }
  return HAL_OK;
 8006cc4:	2300      	movs	r3, #0
}
 8006cc6:	4618      	mov	r0, r3
 8006cc8:	3710      	adds	r7, #16
 8006cca:	46bd      	mov	sp, r7
 8006ccc:	bd80      	pop	{r7, pc}
	...

08006cd0 <SPI_EndRxTxTransaction>:
  * @param  Timeout Timeout duration
  * @param  Tickstart tick start value
  * @retval HAL status
  */
static HAL_StatusTypeDef SPI_EndRxTxTransaction(SPI_HandleTypeDef *hspi, uint32_t Timeout, uint32_t Tickstart)
{
 8006cd0:	b580      	push	{r7, lr}
 8006cd2:	b088      	sub	sp, #32
 8006cd4:	af02      	add	r7, sp, #8
 8006cd6:	60f8      	str	r0, [r7, #12]
 8006cd8:	60b9      	str	r1, [r7, #8]
 8006cda:	607a      	str	r2, [r7, #4]
  /* Wait until TXE flag */
  if(SPI_WaitFlagStateUntilTimeout(hspi, SPI_FLAG_TXE, SET, Timeout, Tickstart) != HAL_OK)
 8006cdc:	687b      	ldr	r3, [r7, #4]
 8006cde:	9300      	str	r3, [sp, #0]
 8006ce0:	68bb      	ldr	r3, [r7, #8]
 8006ce2:	2201      	movs	r2, #1
 8006ce4:	2102      	movs	r1, #2
 8006ce6:	68f8      	ldr	r0, [r7, #12]
 8006ce8:	f7ff ff04 	bl	8006af4 <SPI_WaitFlagStateUntilTimeout>
 8006cec:	4603      	mov	r3, r0
 8006cee:	2b00      	cmp	r3, #0
 8006cf0:	d007      	beq.n	8006d02 <SPI_EndRxTxTransaction+0x32>
  {
    SET_BIT(hspi->ErrorCode, HAL_SPI_ERROR_FLAG);
 8006cf2:	68fb      	ldr	r3, [r7, #12]
 8006cf4:	6d5b      	ldr	r3, [r3, #84]	@ 0x54
 8006cf6:	f043 0220 	orr.w	r2, r3, #32
 8006cfa:	68fb      	ldr	r3, [r7, #12]
 8006cfc:	655a      	str	r2, [r3, #84]	@ 0x54
    return HAL_TIMEOUT;
 8006cfe:	2303      	movs	r3, #3
 8006d00:	e032      	b.n	8006d68 <SPI_EndRxTxTransaction+0x98>
  }

  /* Timeout in µs */
  __IO uint32_t count = SPI_BSY_FLAG_WORKAROUND_TIMEOUT * (SystemCoreClock / 24U / 1000000U);
 8006d02:	4b1b      	ldr	r3, [pc, #108]	@ (8006d70 <SPI_EndRxTxTransaction+0xa0>)
 8006d04:	681b      	ldr	r3, [r3, #0]
 8006d06:	4a1b      	ldr	r2, [pc, #108]	@ (8006d74 <SPI_EndRxTxTransaction+0xa4>)
 8006d08:	fba2 2303 	umull	r2, r3, r2, r3
 8006d0c:	0d5b      	lsrs	r3, r3, #21
 8006d0e:	f44f 727a 	mov.w	r2, #1000	@ 0x3e8
 8006d12:	fb02 f303 	mul.w	r3, r2, r3
 8006d16:	617b      	str	r3, [r7, #20]
  /* Erratasheet: BSY bit may stay high at the end of a data transfer in Slave mode */
  if (hspi->Init.Mode == SPI_MODE_MASTER)
 8006d18:	68fb      	ldr	r3, [r7, #12]
 8006d1a:	685b      	ldr	r3, [r3, #4]
 8006d1c:	f5b3 7f82 	cmp.w	r3, #260	@ 0x104
 8006d20:	d112      	bne.n	8006d48 <SPI_EndRxTxTransaction+0x78>
  {
    /* Control the BSY flag */
    if (SPI_WaitFlagStateUntilTimeout(hspi, SPI_FLAG_BSY, RESET, Timeout, Tickstart) != HAL_OK)
 8006d22:	687b      	ldr	r3, [r7, #4]
 8006d24:	9300      	str	r3, [sp, #0]
 8006d26:	68bb      	ldr	r3, [r7, #8]
 8006d28:	2200      	movs	r2, #0
 8006d2a:	2180      	movs	r1, #128	@ 0x80
 8006d2c:	68f8      	ldr	r0, [r7, #12]
 8006d2e:	f7ff fee1 	bl	8006af4 <SPI_WaitFlagStateUntilTimeout>
 8006d32:	4603      	mov	r3, r0
 8006d34:	2b00      	cmp	r3, #0
 8006d36:	d016      	beq.n	8006d66 <SPI_EndRxTxTransaction+0x96>
    {
      SET_BIT(hspi->ErrorCode, HAL_SPI_ERROR_FLAG);
 8006d38:	68fb      	ldr	r3, [r7, #12]
 8006d3a:	6d5b      	ldr	r3, [r3, #84]	@ 0x54
 8006d3c:	f043 0220 	orr.w	r2, r3, #32
 8006d40:	68fb      	ldr	r3, [r7, #12]
 8006d42:	655a      	str	r2, [r3, #84]	@ 0x54
      return HAL_TIMEOUT;
 8006d44:	2303      	movs	r3, #3
 8006d46:	e00f      	b.n	8006d68 <SPI_EndRxTxTransaction+0x98>
    * User have to calculate the timeout value to fit with the time of 1 byte transfer.
    * This time is directly link with the SPI clock from Master device.
    */
    do
    {
      if (count == 0U)
 8006d48:	697b      	ldr	r3, [r7, #20]
 8006d4a:	2b00      	cmp	r3, #0
 8006d4c:	d00a      	beq.n	8006d64 <SPI_EndRxTxTransaction+0x94>
      {
        break;
      }
      count--;
 8006d4e:	697b      	ldr	r3, [r7, #20]
 8006d50:	3b01      	subs	r3, #1
 8006d52:	617b      	str	r3, [r7, #20]
    } while (__HAL_SPI_GET_FLAG(hspi, SPI_FLAG_BSY) != RESET);
 8006d54:	68fb      	ldr	r3, [r7, #12]
 8006d56:	681b      	ldr	r3, [r3, #0]
 8006d58:	689b      	ldr	r3, [r3, #8]
 8006d5a:	f003 0380 	and.w	r3, r3, #128	@ 0x80
 8006d5e:	2b80      	cmp	r3, #128	@ 0x80
 8006d60:	d0f2      	beq.n	8006d48 <SPI_EndRxTxTransaction+0x78>
 8006d62:	e000      	b.n	8006d66 <SPI_EndRxTxTransaction+0x96>
        break;
 8006d64:	bf00      	nop
  }

  return HAL_OK;
 8006d66:	2300      	movs	r3, #0
}
 8006d68:	4618      	mov	r0, r3
 8006d6a:	3718      	adds	r7, #24
 8006d6c:	46bd      	mov	sp, r7
 8006d6e:	bd80      	pop	{r7, pc}
 8006d70:	20000014 	.word	0x20000014
 8006d74:	165e9f81 	.word	0x165e9f81

08006d78 <HAL_TIM_Base_Init>:
  *         Ex: call @ref HAL_TIM_Base_DeInit() before HAL_TIM_Base_Init()
  * @param  htim TIM Base handle
  * @retval HAL status
  */
HAL_StatusTypeDef HAL_TIM_Base_Init(TIM_HandleTypeDef *htim)
{
 8006d78:	b580      	push	{r7, lr}
 8006d7a:	b082      	sub	sp, #8
 8006d7c:	af00      	add	r7, sp, #0
 8006d7e:	6078      	str	r0, [r7, #4]
  /* Check the TIM handle allocation */
  if (htim == NULL)
 8006d80:	687b      	ldr	r3, [r7, #4]
 8006d82:	2b00      	cmp	r3, #0
 8006d84:	d101      	bne.n	8006d8a <HAL_TIM_Base_Init+0x12>
  {
    return HAL_ERROR;
 8006d86:	2301      	movs	r3, #1
 8006d88:	e041      	b.n	8006e0e <HAL_TIM_Base_Init+0x96>
  assert_param(IS_TIM_COUNTER_MODE(htim->Init.CounterMode));
  assert_param(IS_TIM_CLOCKDIVISION_DIV(htim->Init.ClockDivision));
  assert_param(IS_TIM_PERIOD(htim, htim->Init.Period));
  assert_param(IS_TIM_AUTORELOAD_PRELOAD(htim->Init.AutoReloadPreload));

  if (htim->State == HAL_TIM_STATE_RESET)
 8006d8a:	687b      	ldr	r3, [r7, #4]
 8006d8c:	f893 303d 	ldrb.w	r3, [r3, #61]	@ 0x3d
 8006d90:	b2db      	uxtb	r3, r3
 8006d92:	2b00      	cmp	r3, #0
 8006d94:	d106      	bne.n	8006da4 <HAL_TIM_Base_Init+0x2c>
  {
    /* Allocate lock resource and initialize it */
    htim->Lock = HAL_UNLOCKED;
 8006d96:	687b      	ldr	r3, [r7, #4]
 8006d98:	2200      	movs	r2, #0
 8006d9a:	f883 203c 	strb.w	r2, [r3, #60]	@ 0x3c
    }
    /* Init the low level hardware : GPIO, CLOCK, NVIC */
    htim->Base_MspInitCallback(htim);
#else
    /* Init the low level hardware : GPIO, CLOCK, NVIC */
    HAL_TIM_Base_MspInit(htim);
 8006d9e:	6878      	ldr	r0, [r7, #4]
 8006da0:	f7fa ff38 	bl	8001c14 <HAL_TIM_Base_MspInit>
#endif /* USE_HAL_TIM_REGISTER_CALLBACKS */
  }

  /* Set the TIM state */
  htim->State = HAL_TIM_STATE_BUSY;
 8006da4:	687b      	ldr	r3, [r7, #4]
 8006da6:	2202      	movs	r2, #2
 8006da8:	f883 203d 	strb.w	r2, [r3, #61]	@ 0x3d

  /* Set the Time Base configuration */
  TIM_Base_SetConfig(htim->Instance, &htim->Init);
 8006dac:	687b      	ldr	r3, [r7, #4]
 8006dae:	681a      	ldr	r2, [r3, #0]
 8006db0:	687b      	ldr	r3, [r7, #4]
 8006db2:	3304      	adds	r3, #4
 8006db4:	4619      	mov	r1, r3
 8006db6:	4610      	mov	r0, r2
 8006db8:	f000 fc62 	bl	8007680 <TIM_Base_SetConfig>

  /* Initialize the DMA burst operation state */
  htim->DMABurstState = HAL_DMA_BURST_STATE_READY;
 8006dbc:	687b      	ldr	r3, [r7, #4]
 8006dbe:	2201      	movs	r2, #1
 8006dc0:	f883 2046 	strb.w	r2, [r3, #70]	@ 0x46

  /* Initialize the TIM channels state */
  TIM_CHANNEL_STATE_SET_ALL(htim, HAL_TIM_CHANNEL_STATE_READY);
 8006dc4:	687b      	ldr	r3, [r7, #4]
 8006dc6:	2201      	movs	r2, #1
 8006dc8:	f883 203e 	strb.w	r2, [r3, #62]	@ 0x3e
 8006dcc:	687b      	ldr	r3, [r7, #4]
 8006dce:	2201      	movs	r2, #1
 8006dd0:	f883 203f 	strb.w	r2, [r3, #63]	@ 0x3f
 8006dd4:	687b      	ldr	r3, [r7, #4]
 8006dd6:	2201      	movs	r2, #1
 8006dd8:	f883 2040 	strb.w	r2, [r3, #64]	@ 0x40
 8006ddc:	687b      	ldr	r3, [r7, #4]
 8006dde:	2201      	movs	r2, #1
 8006de0:	f883 2041 	strb.w	r2, [r3, #65]	@ 0x41
  TIM_CHANNEL_N_STATE_SET_ALL(htim, HAL_TIM_CHANNEL_STATE_READY);
 8006de4:	687b      	ldr	r3, [r7, #4]
 8006de6:	2201      	movs	r2, #1
 8006de8:	f883 2042 	strb.w	r2, [r3, #66]	@ 0x42
 8006dec:	687b      	ldr	r3, [r7, #4]
 8006dee:	2201      	movs	r2, #1
 8006df0:	f883 2043 	strb.w	r2, [r3, #67]	@ 0x43
 8006df4:	687b      	ldr	r3, [r7, #4]
 8006df6:	2201      	movs	r2, #1
 8006df8:	f883 2044 	strb.w	r2, [r3, #68]	@ 0x44
 8006dfc:	687b      	ldr	r3, [r7, #4]
 8006dfe:	2201      	movs	r2, #1
 8006e00:	f883 2045 	strb.w	r2, [r3, #69]	@ 0x45

  /* Initialize the TIM state*/
  htim->State = HAL_TIM_STATE_READY;
 8006e04:	687b      	ldr	r3, [r7, #4]
 8006e06:	2201      	movs	r2, #1
 8006e08:	f883 203d 	strb.w	r2, [r3, #61]	@ 0x3d

  return HAL_OK;
 8006e0c:	2300      	movs	r3, #0
}
 8006e0e:	4618      	mov	r0, r3
 8006e10:	3708      	adds	r7, #8
 8006e12:	46bd      	mov	sp, r7
 8006e14:	bd80      	pop	{r7, pc}
	...

08006e18 <HAL_TIM_Base_Start_IT>:
  * @brief  Starts the TIM Base generation in interrupt mode.
  * @param  htim TIM Base handle
  * @retval HAL status
  */
HAL_StatusTypeDef HAL_TIM_Base_Start_IT(TIM_HandleTypeDef *htim)
{
 8006e18:	b480      	push	{r7}
 8006e1a:	b085      	sub	sp, #20
 8006e1c:	af00      	add	r7, sp, #0
 8006e1e:	6078      	str	r0, [r7, #4]

  /* Check the parameters */
  assert_param(IS_TIM_INSTANCE(htim->Instance));

  /* Check the TIM state */
  if (htim->State != HAL_TIM_STATE_READY)
 8006e20:	687b      	ldr	r3, [r7, #4]
 8006e22:	f893 303d 	ldrb.w	r3, [r3, #61]	@ 0x3d
 8006e26:	b2db      	uxtb	r3, r3
 8006e28:	2b01      	cmp	r3, #1
 8006e2a:	d001      	beq.n	8006e30 <HAL_TIM_Base_Start_IT+0x18>
  {
    return HAL_ERROR;
 8006e2c:	2301      	movs	r3, #1
 8006e2e:	e04e      	b.n	8006ece <HAL_TIM_Base_Start_IT+0xb6>
  }

  /* Set the TIM state */
  htim->State = HAL_TIM_STATE_BUSY;
 8006e30:	687b      	ldr	r3, [r7, #4]
 8006e32:	2202      	movs	r2, #2
 8006e34:	f883 203d 	strb.w	r2, [r3, #61]	@ 0x3d

  /* Enable the TIM Update interrupt */
  __HAL_TIM_ENABLE_IT(htim, TIM_IT_UPDATE);
 8006e38:	687b      	ldr	r3, [r7, #4]
 8006e3a:	681b      	ldr	r3, [r3, #0]
 8006e3c:	68da      	ldr	r2, [r3, #12]
 8006e3e:	687b      	ldr	r3, [r7, #4]
 8006e40:	681b      	ldr	r3, [r3, #0]
 8006e42:	f042 0201 	orr.w	r2, r2, #1
 8006e46:	60da      	str	r2, [r3, #12]

  /* Enable the Peripheral, except in trigger mode where enable is automatically done with trigger */
  if (IS_TIM_SLAVE_INSTANCE(htim->Instance))
 8006e48:	687b      	ldr	r3, [r7, #4]
 8006e4a:	681b      	ldr	r3, [r3, #0]
 8006e4c:	4a23      	ldr	r2, [pc, #140]	@ (8006edc <HAL_TIM_Base_Start_IT+0xc4>)
 8006e4e:	4293      	cmp	r3, r2
 8006e50:	d022      	beq.n	8006e98 <HAL_TIM_Base_Start_IT+0x80>
 8006e52:	687b      	ldr	r3, [r7, #4]
 8006e54:	681b      	ldr	r3, [r3, #0]
 8006e56:	f1b3 4f80 	cmp.w	r3, #1073741824	@ 0x40000000
 8006e5a:	d01d      	beq.n	8006e98 <HAL_TIM_Base_Start_IT+0x80>
 8006e5c:	687b      	ldr	r3, [r7, #4]
 8006e5e:	681b      	ldr	r3, [r3, #0]
 8006e60:	4a1f      	ldr	r2, [pc, #124]	@ (8006ee0 <HAL_TIM_Base_Start_IT+0xc8>)
 8006e62:	4293      	cmp	r3, r2
 8006e64:	d018      	beq.n	8006e98 <HAL_TIM_Base_Start_IT+0x80>
 8006e66:	687b      	ldr	r3, [r7, #4]
 8006e68:	681b      	ldr	r3, [r3, #0]
 8006e6a:	4a1e      	ldr	r2, [pc, #120]	@ (8006ee4 <HAL_TIM_Base_Start_IT+0xcc>)
 8006e6c:	4293      	cmp	r3, r2
 8006e6e:	d013      	beq.n	8006e98 <HAL_TIM_Base_Start_IT+0x80>
 8006e70:	687b      	ldr	r3, [r7, #4]
 8006e72:	681b      	ldr	r3, [r3, #0]
 8006e74:	4a1c      	ldr	r2, [pc, #112]	@ (8006ee8 <HAL_TIM_Base_Start_IT+0xd0>)
 8006e76:	4293      	cmp	r3, r2
 8006e78:	d00e      	beq.n	8006e98 <HAL_TIM_Base_Start_IT+0x80>
 8006e7a:	687b      	ldr	r3, [r7, #4]
 8006e7c:	681b      	ldr	r3, [r3, #0]
 8006e7e:	4a1b      	ldr	r2, [pc, #108]	@ (8006eec <HAL_TIM_Base_Start_IT+0xd4>)
 8006e80:	4293      	cmp	r3, r2
 8006e82:	d009      	beq.n	8006e98 <HAL_TIM_Base_Start_IT+0x80>
 8006e84:	687b      	ldr	r3, [r7, #4]
 8006e86:	681b      	ldr	r3, [r3, #0]
 8006e88:	4a19      	ldr	r2, [pc, #100]	@ (8006ef0 <HAL_TIM_Base_Start_IT+0xd8>)
 8006e8a:	4293      	cmp	r3, r2
 8006e8c:	d004      	beq.n	8006e98 <HAL_TIM_Base_Start_IT+0x80>
 8006e8e:	687b      	ldr	r3, [r7, #4]
 8006e90:	681b      	ldr	r3, [r3, #0]
 8006e92:	4a18      	ldr	r2, [pc, #96]	@ (8006ef4 <HAL_TIM_Base_Start_IT+0xdc>)
 8006e94:	4293      	cmp	r3, r2
 8006e96:	d111      	bne.n	8006ebc <HAL_TIM_Base_Start_IT+0xa4>
  {
    tmpsmcr = htim->Instance->SMCR & TIM_SMCR_SMS;
 8006e98:	687b      	ldr	r3, [r7, #4]
 8006e9a:	681b      	ldr	r3, [r3, #0]
 8006e9c:	689b      	ldr	r3, [r3, #8]
 8006e9e:	f003 0307 	and.w	r3, r3, #7
 8006ea2:	60fb      	str	r3, [r7, #12]
    if (!IS_TIM_SLAVEMODE_TRIGGER_ENABLED(tmpsmcr))
 8006ea4:	68fb      	ldr	r3, [r7, #12]
 8006ea6:	2b06      	cmp	r3, #6
 8006ea8:	d010      	beq.n	8006ecc <HAL_TIM_Base_Start_IT+0xb4>
    {
      __HAL_TIM_ENABLE(htim);
 8006eaa:	687b      	ldr	r3, [r7, #4]
 8006eac:	681b      	ldr	r3, [r3, #0]
 8006eae:	681a      	ldr	r2, [r3, #0]
 8006eb0:	687b      	ldr	r3, [r7, #4]
 8006eb2:	681b      	ldr	r3, [r3, #0]
 8006eb4:	f042 0201 	orr.w	r2, r2, #1
 8006eb8:	601a      	str	r2, [r3, #0]
    if (!IS_TIM_SLAVEMODE_TRIGGER_ENABLED(tmpsmcr))
 8006eba:	e007      	b.n	8006ecc <HAL_TIM_Base_Start_IT+0xb4>
    }
  }
  else
  {
    __HAL_TIM_ENABLE(htim);
 8006ebc:	687b      	ldr	r3, [r7, #4]
 8006ebe:	681b      	ldr	r3, [r3, #0]
 8006ec0:	681a      	ldr	r2, [r3, #0]
 8006ec2:	687b      	ldr	r3, [r7, #4]
 8006ec4:	681b      	ldr	r3, [r3, #0]
 8006ec6:	f042 0201 	orr.w	r2, r2, #1
 8006eca:	601a      	str	r2, [r3, #0]
  }

  /* Return function status */
  return HAL_OK;
 8006ecc:	2300      	movs	r3, #0
}
 8006ece:	4618      	mov	r0, r3
 8006ed0:	3714      	adds	r7, #20
 8006ed2:	46bd      	mov	sp, r7
 8006ed4:	f85d 7b04 	ldr.w	r7, [sp], #4
 8006ed8:	4770      	bx	lr
 8006eda:	bf00      	nop
 8006edc:	40010000 	.word	0x40010000
 8006ee0:	40000400 	.word	0x40000400
 8006ee4:	40000800 	.word	0x40000800
 8006ee8:	40000c00 	.word	0x40000c00
 8006eec:	40010400 	.word	0x40010400
 8006ef0:	40014000 	.word	0x40014000
 8006ef4:	40001800 	.word	0x40001800

08006ef8 <HAL_TIM_PWM_Init>:
  *         Ex: call @ref HAL_TIM_PWM_DeInit() before HAL_TIM_PWM_Init()
  * @param  htim TIM PWM handle
  * @retval HAL status
  */
HAL_StatusTypeDef HAL_TIM_PWM_Init(TIM_HandleTypeDef *htim)
{
 8006ef8:	b580      	push	{r7, lr}
 8006efa:	b082      	sub	sp, #8
 8006efc:	af00      	add	r7, sp, #0
 8006efe:	6078      	str	r0, [r7, #4]
  /* Check the TIM handle allocation */
  if (htim == NULL)
 8006f00:	687b      	ldr	r3, [r7, #4]
 8006f02:	2b00      	cmp	r3, #0
 8006f04:	d101      	bne.n	8006f0a <HAL_TIM_PWM_Init+0x12>
  {
    return HAL_ERROR;
 8006f06:	2301      	movs	r3, #1
 8006f08:	e041      	b.n	8006f8e <HAL_TIM_PWM_Init+0x96>
  assert_param(IS_TIM_COUNTER_MODE(htim->Init.CounterMode));
  assert_param(IS_TIM_CLOCKDIVISION_DIV(htim->Init.ClockDivision));
  assert_param(IS_TIM_PERIOD(htim, htim->Init.Period));
  assert_param(IS_TIM_AUTORELOAD_PRELOAD(htim->Init.AutoReloadPreload));

  if (htim->State == HAL_TIM_STATE_RESET)
 8006f0a:	687b      	ldr	r3, [r7, #4]
 8006f0c:	f893 303d 	ldrb.w	r3, [r3, #61]	@ 0x3d
 8006f10:	b2db      	uxtb	r3, r3
 8006f12:	2b00      	cmp	r3, #0
 8006f14:	d106      	bne.n	8006f24 <HAL_TIM_PWM_Init+0x2c>
  {
    /* Allocate lock resource and initialize it */
    htim->Lock = HAL_UNLOCKED;
 8006f16:	687b      	ldr	r3, [r7, #4]
 8006f18:	2200      	movs	r2, #0
 8006f1a:	f883 203c 	strb.w	r2, [r3, #60]	@ 0x3c
    }
    /* Init the low level hardware : GPIO, CLOCK, NVIC */
    htim->PWM_MspInitCallback(htim);
#else
    /* Init the low level hardware : GPIO, CLOCK, NVIC and DMA */
    HAL_TIM_PWM_MspInit(htim);
 8006f1e:	6878      	ldr	r0, [r7, #4]
 8006f20:	f000 f839 	bl	8006f96 <HAL_TIM_PWM_MspInit>
#endif /* USE_HAL_TIM_REGISTER_CALLBACKS */
  }

  /* Set the TIM state */
  htim->State = HAL_TIM_STATE_BUSY;
 8006f24:	687b      	ldr	r3, [r7, #4]
 8006f26:	2202      	movs	r2, #2
 8006f28:	f883 203d 	strb.w	r2, [r3, #61]	@ 0x3d

  /* Init the base time for the PWM */
  TIM_Base_SetConfig(htim->Instance, &htim->Init);
 8006f2c:	687b      	ldr	r3, [r7, #4]
 8006f2e:	681a      	ldr	r2, [r3, #0]
 8006f30:	687b      	ldr	r3, [r7, #4]
 8006f32:	3304      	adds	r3, #4
 8006f34:	4619      	mov	r1, r3
 8006f36:	4610      	mov	r0, r2
 8006f38:	f000 fba2 	bl	8007680 <TIM_Base_SetConfig>

  /* Initialize the DMA burst operation state */
  htim->DMABurstState = HAL_DMA_BURST_STATE_READY;
 8006f3c:	687b      	ldr	r3, [r7, #4]
 8006f3e:	2201      	movs	r2, #1
 8006f40:	f883 2046 	strb.w	r2, [r3, #70]	@ 0x46

  /* Initialize the TIM channels state */
  TIM_CHANNEL_STATE_SET_ALL(htim, HAL_TIM_CHANNEL_STATE_READY);
 8006f44:	687b      	ldr	r3, [r7, #4]
 8006f46:	2201      	movs	r2, #1
 8006f48:	f883 203e 	strb.w	r2, [r3, #62]	@ 0x3e
 8006f4c:	687b      	ldr	r3, [r7, #4]
 8006f4e:	2201      	movs	r2, #1
 8006f50:	f883 203f 	strb.w	r2, [r3, #63]	@ 0x3f
 8006f54:	687b      	ldr	r3, [r7, #4]
 8006f56:	2201      	movs	r2, #1
 8006f58:	f883 2040 	strb.w	r2, [r3, #64]	@ 0x40
 8006f5c:	687b      	ldr	r3, [r7, #4]
 8006f5e:	2201      	movs	r2, #1
 8006f60:	f883 2041 	strb.w	r2, [r3, #65]	@ 0x41
  TIM_CHANNEL_N_STATE_SET_ALL(htim, HAL_TIM_CHANNEL_STATE_READY);
 8006f64:	687b      	ldr	r3, [r7, #4]
 8006f66:	2201      	movs	r2, #1
 8006f68:	f883 2042 	strb.w	r2, [r3, #66]	@ 0x42
 8006f6c:	687b      	ldr	r3, [r7, #4]
 8006f6e:	2201      	movs	r2, #1
 8006f70:	f883 2043 	strb.w	r2, [r3, #67]	@ 0x43
 8006f74:	687b      	ldr	r3, [r7, #4]
 8006f76:	2201      	movs	r2, #1
 8006f78:	f883 2044 	strb.w	r2, [r3, #68]	@ 0x44
 8006f7c:	687b      	ldr	r3, [r7, #4]
 8006f7e:	2201      	movs	r2, #1
 8006f80:	f883 2045 	strb.w	r2, [r3, #69]	@ 0x45

  /* Initialize the TIM state*/
  htim->State = HAL_TIM_STATE_READY;
 8006f84:	687b      	ldr	r3, [r7, #4]
 8006f86:	2201      	movs	r2, #1
 8006f88:	f883 203d 	strb.w	r2, [r3, #61]	@ 0x3d

  return HAL_OK;
 8006f8c:	2300      	movs	r3, #0
}
 8006f8e:	4618      	mov	r0, r3
 8006f90:	3708      	adds	r7, #8
 8006f92:	46bd      	mov	sp, r7
 8006f94:	bd80      	pop	{r7, pc}

08006f96 <HAL_TIM_PWM_MspInit>:
  * @brief  Initializes the TIM PWM MSP.
  * @param  htim TIM PWM handle
  * @retval None
  */
__weak void HAL_TIM_PWM_MspInit(TIM_HandleTypeDef *htim)
{
 8006f96:	b480      	push	{r7}
 8006f98:	b083      	sub	sp, #12
 8006f9a:	af00      	add	r7, sp, #0
 8006f9c:	6078      	str	r0, [r7, #4]
  UNUSED(htim);

  /* NOTE : This function should not be modified, when the callback is needed,
            the HAL_TIM_PWM_MspInit could be implemented in the user file
   */
}
 8006f9e:	bf00      	nop
 8006fa0:	370c      	adds	r7, #12
 8006fa2:	46bd      	mov	sp, r7
 8006fa4:	f85d 7b04 	ldr.w	r7, [sp], #4
 8006fa8:	4770      	bx	lr
	...

08006fac <HAL_TIM_PWM_Start>:
  *            @arg TIM_CHANNEL_3: TIM Channel 3 selected
  *            @arg TIM_CHANNEL_4: TIM Channel 4 selected
  * @retval HAL status
  */
HAL_StatusTypeDef HAL_TIM_PWM_Start(TIM_HandleTypeDef *htim, uint32_t Channel)
{
 8006fac:	b580      	push	{r7, lr}
 8006fae:	b084      	sub	sp, #16
 8006fb0:	af00      	add	r7, sp, #0
 8006fb2:	6078      	str	r0, [r7, #4]
 8006fb4:	6039      	str	r1, [r7, #0]

  /* Check the parameters */
  assert_param(IS_TIM_CCX_INSTANCE(htim->Instance, Channel));

  /* Check the TIM channel state */
  if (TIM_CHANNEL_STATE_GET(htim, Channel) != HAL_TIM_CHANNEL_STATE_READY)
 8006fb6:	683b      	ldr	r3, [r7, #0]
 8006fb8:	2b00      	cmp	r3, #0
 8006fba:	d109      	bne.n	8006fd0 <HAL_TIM_PWM_Start+0x24>
 8006fbc:	687b      	ldr	r3, [r7, #4]
 8006fbe:	f893 303e 	ldrb.w	r3, [r3, #62]	@ 0x3e
 8006fc2:	b2db      	uxtb	r3, r3
 8006fc4:	2b01      	cmp	r3, #1
 8006fc6:	bf14      	ite	ne
 8006fc8:	2301      	movne	r3, #1
 8006fca:	2300      	moveq	r3, #0
 8006fcc:	b2db      	uxtb	r3, r3
 8006fce:	e022      	b.n	8007016 <HAL_TIM_PWM_Start+0x6a>
 8006fd0:	683b      	ldr	r3, [r7, #0]
 8006fd2:	2b04      	cmp	r3, #4
 8006fd4:	d109      	bne.n	8006fea <HAL_TIM_PWM_Start+0x3e>
 8006fd6:	687b      	ldr	r3, [r7, #4]
 8006fd8:	f893 303f 	ldrb.w	r3, [r3, #63]	@ 0x3f
 8006fdc:	b2db      	uxtb	r3, r3
 8006fde:	2b01      	cmp	r3, #1
 8006fe0:	bf14      	ite	ne
 8006fe2:	2301      	movne	r3, #1
 8006fe4:	2300      	moveq	r3, #0
 8006fe6:	b2db      	uxtb	r3, r3
 8006fe8:	e015      	b.n	8007016 <HAL_TIM_PWM_Start+0x6a>
 8006fea:	683b      	ldr	r3, [r7, #0]
 8006fec:	2b08      	cmp	r3, #8
 8006fee:	d109      	bne.n	8007004 <HAL_TIM_PWM_Start+0x58>
 8006ff0:	687b      	ldr	r3, [r7, #4]
 8006ff2:	f893 3040 	ldrb.w	r3, [r3, #64]	@ 0x40
 8006ff6:	b2db      	uxtb	r3, r3
 8006ff8:	2b01      	cmp	r3, #1
 8006ffa:	bf14      	ite	ne
 8006ffc:	2301      	movne	r3, #1
 8006ffe:	2300      	moveq	r3, #0
 8007000:	b2db      	uxtb	r3, r3
 8007002:	e008      	b.n	8007016 <HAL_TIM_PWM_Start+0x6a>
 8007004:	687b      	ldr	r3, [r7, #4]
 8007006:	f893 3041 	ldrb.w	r3, [r3, #65]	@ 0x41
 800700a:	b2db      	uxtb	r3, r3
 800700c:	2b01      	cmp	r3, #1
 800700e:	bf14      	ite	ne
 8007010:	2301      	movne	r3, #1
 8007012:	2300      	moveq	r3, #0
 8007014:	b2db      	uxtb	r3, r3
 8007016:	2b00      	cmp	r3, #0
 8007018:	d001      	beq.n	800701e <HAL_TIM_PWM_Start+0x72>
  {
    return HAL_ERROR;
 800701a:	2301      	movs	r3, #1
 800701c:	e07c      	b.n	8007118 <HAL_TIM_PWM_Start+0x16c>
  }

  /* Set the TIM channel state */
  TIM_CHANNEL_STATE_SET(htim, Channel, HAL_TIM_CHANNEL_STATE_BUSY);
 800701e:	683b      	ldr	r3, [r7, #0]
 8007020:	2b00      	cmp	r3, #0
 8007022:	d104      	bne.n	800702e <HAL_TIM_PWM_Start+0x82>
 8007024:	687b      	ldr	r3, [r7, #4]
 8007026:	2202      	movs	r2, #2
 8007028:	f883 203e 	strb.w	r2, [r3, #62]	@ 0x3e
 800702c:	e013      	b.n	8007056 <HAL_TIM_PWM_Start+0xaa>
 800702e:	683b      	ldr	r3, [r7, #0]
 8007030:	2b04      	cmp	r3, #4
 8007032:	d104      	bne.n	800703e <HAL_TIM_PWM_Start+0x92>
 8007034:	687b      	ldr	r3, [r7, #4]
 8007036:	2202      	movs	r2, #2
 8007038:	f883 203f 	strb.w	r2, [r3, #63]	@ 0x3f
 800703c:	e00b      	b.n	8007056 <HAL_TIM_PWM_Start+0xaa>
 800703e:	683b      	ldr	r3, [r7, #0]
 8007040:	2b08      	cmp	r3, #8
 8007042:	d104      	bne.n	800704e <HAL_TIM_PWM_Start+0xa2>
 8007044:	687b      	ldr	r3, [r7, #4]
 8007046:	2202      	movs	r2, #2
 8007048:	f883 2040 	strb.w	r2, [r3, #64]	@ 0x40
 800704c:	e003      	b.n	8007056 <HAL_TIM_PWM_Start+0xaa>
 800704e:	687b      	ldr	r3, [r7, #4]
 8007050:	2202      	movs	r2, #2
 8007052:	f883 2041 	strb.w	r2, [r3, #65]	@ 0x41

  /* Enable the Capture compare channel */
  TIM_CCxChannelCmd(htim->Instance, Channel, TIM_CCx_ENABLE);
 8007056:	687b      	ldr	r3, [r7, #4]
 8007058:	681b      	ldr	r3, [r3, #0]
 800705a:	2201      	movs	r2, #1
 800705c:	6839      	ldr	r1, [r7, #0]
 800705e:	4618      	mov	r0, r3
 8007060:	f000 fe04 	bl	8007c6c <TIM_CCxChannelCmd>

  if (IS_TIM_BREAK_INSTANCE(htim->Instance) != RESET)
 8007064:	687b      	ldr	r3, [r7, #4]
 8007066:	681b      	ldr	r3, [r3, #0]
 8007068:	4a2d      	ldr	r2, [pc, #180]	@ (8007120 <HAL_TIM_PWM_Start+0x174>)
 800706a:	4293      	cmp	r3, r2
 800706c:	d004      	beq.n	8007078 <HAL_TIM_PWM_Start+0xcc>
 800706e:	687b      	ldr	r3, [r7, #4]
 8007070:	681b      	ldr	r3, [r3, #0]
 8007072:	4a2c      	ldr	r2, [pc, #176]	@ (8007124 <HAL_TIM_PWM_Start+0x178>)
 8007074:	4293      	cmp	r3, r2
 8007076:	d101      	bne.n	800707c <HAL_TIM_PWM_Start+0xd0>
 8007078:	2301      	movs	r3, #1
 800707a:	e000      	b.n	800707e <HAL_TIM_PWM_Start+0xd2>
 800707c:	2300      	movs	r3, #0
 800707e:	2b00      	cmp	r3, #0
 8007080:	d007      	beq.n	8007092 <HAL_TIM_PWM_Start+0xe6>
  {
    /* Enable the main output */
    __HAL_TIM_MOE_ENABLE(htim);
 8007082:	687b      	ldr	r3, [r7, #4]
 8007084:	681b      	ldr	r3, [r3, #0]
 8007086:	6c5a      	ldr	r2, [r3, #68]	@ 0x44
 8007088:	687b      	ldr	r3, [r7, #4]
 800708a:	681b      	ldr	r3, [r3, #0]
 800708c:	f442 4200 	orr.w	r2, r2, #32768	@ 0x8000
 8007090:	645a      	str	r2, [r3, #68]	@ 0x44
  }

  /* Enable the Peripheral, except in trigger mode where enable is automatically done with trigger */
  if (IS_TIM_SLAVE_INSTANCE(htim->Instance))
 8007092:	687b      	ldr	r3, [r7, #4]
 8007094:	681b      	ldr	r3, [r3, #0]
 8007096:	4a22      	ldr	r2, [pc, #136]	@ (8007120 <HAL_TIM_PWM_Start+0x174>)
 8007098:	4293      	cmp	r3, r2
 800709a:	d022      	beq.n	80070e2 <HAL_TIM_PWM_Start+0x136>
 800709c:	687b      	ldr	r3, [r7, #4]
 800709e:	681b      	ldr	r3, [r3, #0]
 80070a0:	f1b3 4f80 	cmp.w	r3, #1073741824	@ 0x40000000
 80070a4:	d01d      	beq.n	80070e2 <HAL_TIM_PWM_Start+0x136>
 80070a6:	687b      	ldr	r3, [r7, #4]
 80070a8:	681b      	ldr	r3, [r3, #0]
 80070aa:	4a1f      	ldr	r2, [pc, #124]	@ (8007128 <HAL_TIM_PWM_Start+0x17c>)
 80070ac:	4293      	cmp	r3, r2
 80070ae:	d018      	beq.n	80070e2 <HAL_TIM_PWM_Start+0x136>
 80070b0:	687b      	ldr	r3, [r7, #4]
 80070b2:	681b      	ldr	r3, [r3, #0]
 80070b4:	4a1d      	ldr	r2, [pc, #116]	@ (800712c <HAL_TIM_PWM_Start+0x180>)
 80070b6:	4293      	cmp	r3, r2
 80070b8:	d013      	beq.n	80070e2 <HAL_TIM_PWM_Start+0x136>
 80070ba:	687b      	ldr	r3, [r7, #4]
 80070bc:	681b      	ldr	r3, [r3, #0]
 80070be:	4a1c      	ldr	r2, [pc, #112]	@ (8007130 <HAL_TIM_PWM_Start+0x184>)
 80070c0:	4293      	cmp	r3, r2
 80070c2:	d00e      	beq.n	80070e2 <HAL_TIM_PWM_Start+0x136>
 80070c4:	687b      	ldr	r3, [r7, #4]
 80070c6:	681b      	ldr	r3, [r3, #0]
 80070c8:	4a16      	ldr	r2, [pc, #88]	@ (8007124 <HAL_TIM_PWM_Start+0x178>)
 80070ca:	4293      	cmp	r3, r2
 80070cc:	d009      	beq.n	80070e2 <HAL_TIM_PWM_Start+0x136>
 80070ce:	687b      	ldr	r3, [r7, #4]
 80070d0:	681b      	ldr	r3, [r3, #0]
 80070d2:	4a18      	ldr	r2, [pc, #96]	@ (8007134 <HAL_TIM_PWM_Start+0x188>)
 80070d4:	4293      	cmp	r3, r2
 80070d6:	d004      	beq.n	80070e2 <HAL_TIM_PWM_Start+0x136>
 80070d8:	687b      	ldr	r3, [r7, #4]
 80070da:	681b      	ldr	r3, [r3, #0]
 80070dc:	4a16      	ldr	r2, [pc, #88]	@ (8007138 <HAL_TIM_PWM_Start+0x18c>)
 80070de:	4293      	cmp	r3, r2
 80070e0:	d111      	bne.n	8007106 <HAL_TIM_PWM_Start+0x15a>
  {
    tmpsmcr = htim->Instance->SMCR & TIM_SMCR_SMS;
 80070e2:	687b      	ldr	r3, [r7, #4]
 80070e4:	681b      	ldr	r3, [r3, #0]
 80070e6:	689b      	ldr	r3, [r3, #8]
 80070e8:	f003 0307 	and.w	r3, r3, #7
 80070ec:	60fb      	str	r3, [r7, #12]
    if (!IS_TIM_SLAVEMODE_TRIGGER_ENABLED(tmpsmcr))
 80070ee:	68fb      	ldr	r3, [r7, #12]
 80070f0:	2b06      	cmp	r3, #6
 80070f2:	d010      	beq.n	8007116 <HAL_TIM_PWM_Start+0x16a>
    {
      __HAL_TIM_ENABLE(htim);
 80070f4:	687b      	ldr	r3, [r7, #4]
 80070f6:	681b      	ldr	r3, [r3, #0]
 80070f8:	681a      	ldr	r2, [r3, #0]
 80070fa:	687b      	ldr	r3, [r7, #4]
 80070fc:	681b      	ldr	r3, [r3, #0]
 80070fe:	f042 0201 	orr.w	r2, r2, #1
 8007102:	601a      	str	r2, [r3, #0]
    if (!IS_TIM_SLAVEMODE_TRIGGER_ENABLED(tmpsmcr))
 8007104:	e007      	b.n	8007116 <HAL_TIM_PWM_Start+0x16a>
    }
  }
  else
  {
    __HAL_TIM_ENABLE(htim);
 8007106:	687b      	ldr	r3, [r7, #4]
 8007108:	681b      	ldr	r3, [r3, #0]
 800710a:	681a      	ldr	r2, [r3, #0]
 800710c:	687b      	ldr	r3, [r7, #4]
 800710e:	681b      	ldr	r3, [r3, #0]
 8007110:	f042 0201 	orr.w	r2, r2, #1
 8007114:	601a      	str	r2, [r3, #0]
  }

  /* Return function status */
  return HAL_OK;
 8007116:	2300      	movs	r3, #0
}
 8007118:	4618      	mov	r0, r3
 800711a:	3710      	adds	r7, #16
 800711c:	46bd      	mov	sp, r7
 800711e:	bd80      	pop	{r7, pc}
 8007120:	40010000 	.word	0x40010000
 8007124:	40010400 	.word	0x40010400
 8007128:	40000400 	.word	0x40000400
 800712c:	40000800 	.word	0x40000800
 8007130:	40000c00 	.word	0x40000c00
 8007134:	40014000 	.word	0x40014000
 8007138:	40001800 	.word	0x40001800

0800713c <HAL_TIM_IRQHandler>:
  * @brief  This function handles TIM interrupts requests.
  * @param  htim TIM  handle
  * @retval None
  */
void HAL_TIM_IRQHandler(TIM_HandleTypeDef *htim)
{
 800713c:	b580      	push	{r7, lr}
 800713e:	b084      	sub	sp, #16
 8007140:	af00      	add	r7, sp, #0
 8007142:	6078      	str	r0, [r7, #4]
  uint32_t itsource = htim->Instance->DIER;
 8007144:	687b      	ldr	r3, [r7, #4]
 8007146:	681b      	ldr	r3, [r3, #0]
 8007148:	68db      	ldr	r3, [r3, #12]
 800714a:	60fb      	str	r3, [r7, #12]
  uint32_t itflag   = htim->Instance->SR;
 800714c:	687b      	ldr	r3, [r7, #4]
 800714e:	681b      	ldr	r3, [r3, #0]
 8007150:	691b      	ldr	r3, [r3, #16]
 8007152:	60bb      	str	r3, [r7, #8]

  /* Capture compare 1 event */
  if ((itflag & (TIM_FLAG_CC1)) == (TIM_FLAG_CC1))
 8007154:	68bb      	ldr	r3, [r7, #8]
 8007156:	f003 0302 	and.w	r3, r3, #2
 800715a:	2b00      	cmp	r3, #0
 800715c:	d020      	beq.n	80071a0 <HAL_TIM_IRQHandler+0x64>
  {
    if ((itsource & (TIM_IT_CC1)) == (TIM_IT_CC1))
 800715e:	68fb      	ldr	r3, [r7, #12]
 8007160:	f003 0302 	and.w	r3, r3, #2
 8007164:	2b00      	cmp	r3, #0
 8007166:	d01b      	beq.n	80071a0 <HAL_TIM_IRQHandler+0x64>
    {
      {
        __HAL_TIM_CLEAR_FLAG(htim, TIM_FLAG_CC1);
 8007168:	687b      	ldr	r3, [r7, #4]
 800716a:	681b      	ldr	r3, [r3, #0]
 800716c:	f06f 0202 	mvn.w	r2, #2
 8007170:	611a      	str	r2, [r3, #16]
        htim->Channel = HAL_TIM_ACTIVE_CHANNEL_1;
 8007172:	687b      	ldr	r3, [r7, #4]
 8007174:	2201      	movs	r2, #1
 8007176:	771a      	strb	r2, [r3, #28]

        /* Input capture event */
        if ((htim->Instance->CCMR1 & TIM_CCMR1_CC1S) != 0x00U)
 8007178:	687b      	ldr	r3, [r7, #4]
 800717a:	681b      	ldr	r3, [r3, #0]
 800717c:	699b      	ldr	r3, [r3, #24]
 800717e:	f003 0303 	and.w	r3, r3, #3
 8007182:	2b00      	cmp	r3, #0
 8007184:	d003      	beq.n	800718e <HAL_TIM_IRQHandler+0x52>
        {
#if (USE_HAL_TIM_REGISTER_CALLBACKS == 1)
          htim->IC_CaptureCallback(htim);
#else
          HAL_TIM_IC_CaptureCallback(htim);
 8007186:	6878      	ldr	r0, [r7, #4]
 8007188:	f000 fa5b 	bl	8007642 <HAL_TIM_IC_CaptureCallback>
 800718c:	e005      	b.n	800719a <HAL_TIM_IRQHandler+0x5e>
        {
#if (USE_HAL_TIM_REGISTER_CALLBACKS == 1)
          htim->OC_DelayElapsedCallback(htim);
          htim->PWM_PulseFinishedCallback(htim);
#else
          HAL_TIM_OC_DelayElapsedCallback(htim);
 800718e:	6878      	ldr	r0, [r7, #4]
 8007190:	f000 fa4d 	bl	800762e <HAL_TIM_OC_DelayElapsedCallback>
          HAL_TIM_PWM_PulseFinishedCallback(htim);
 8007194:	6878      	ldr	r0, [r7, #4]
 8007196:	f000 fa5e 	bl	8007656 <HAL_TIM_PWM_PulseFinishedCallback>
#endif /* USE_HAL_TIM_REGISTER_CALLBACKS */
        }
        htim->Channel = HAL_TIM_ACTIVE_CHANNEL_CLEARED;
 800719a:	687b      	ldr	r3, [r7, #4]
 800719c:	2200      	movs	r2, #0
 800719e:	771a      	strb	r2, [r3, #28]
      }
    }
  }
  /* Capture compare 2 event */
  if ((itflag & (TIM_FLAG_CC2)) == (TIM_FLAG_CC2))
 80071a0:	68bb      	ldr	r3, [r7, #8]
 80071a2:	f003 0304 	and.w	r3, r3, #4
 80071a6:	2b00      	cmp	r3, #0
 80071a8:	d020      	beq.n	80071ec <HAL_TIM_IRQHandler+0xb0>
  {
    if ((itsource & (TIM_IT_CC2)) == (TIM_IT_CC2))
 80071aa:	68fb      	ldr	r3, [r7, #12]
 80071ac:	f003 0304 	and.w	r3, r3, #4
 80071b0:	2b00      	cmp	r3, #0
 80071b2:	d01b      	beq.n	80071ec <HAL_TIM_IRQHandler+0xb0>
    {
      __HAL_TIM_CLEAR_FLAG(htim, TIM_FLAG_CC2);
 80071b4:	687b      	ldr	r3, [r7, #4]
 80071b6:	681b      	ldr	r3, [r3, #0]
 80071b8:	f06f 0204 	mvn.w	r2, #4
 80071bc:	611a      	str	r2, [r3, #16]
      htim->Channel = HAL_TIM_ACTIVE_CHANNEL_2;
 80071be:	687b      	ldr	r3, [r7, #4]
 80071c0:	2202      	movs	r2, #2
 80071c2:	771a      	strb	r2, [r3, #28]
      /* Input capture event */
      if ((htim->Instance->CCMR1 & TIM_CCMR1_CC2S) != 0x00U)
 80071c4:	687b      	ldr	r3, [r7, #4]
 80071c6:	681b      	ldr	r3, [r3, #0]
 80071c8:	699b      	ldr	r3, [r3, #24]
 80071ca:	f403 7340 	and.w	r3, r3, #768	@ 0x300
 80071ce:	2b00      	cmp	r3, #0
 80071d0:	d003      	beq.n	80071da <HAL_TIM_IRQHandler+0x9e>
      {
#if (USE_HAL_TIM_REGISTER_CALLBACKS == 1)
        htim->IC_CaptureCallback(htim);
#else
        HAL_TIM_IC_CaptureCallback(htim);
 80071d2:	6878      	ldr	r0, [r7, #4]
 80071d4:	f000 fa35 	bl	8007642 <HAL_TIM_IC_CaptureCallback>
 80071d8:	e005      	b.n	80071e6 <HAL_TIM_IRQHandler+0xaa>
      {
#if (USE_HAL_TIM_REGISTER_CALLBACKS == 1)
        htim->OC_DelayElapsedCallback(htim);
        htim->PWM_PulseFinishedCallback(htim);
#else
        HAL_TIM_OC_DelayElapsedCallback(htim);
 80071da:	6878      	ldr	r0, [r7, #4]
 80071dc:	f000 fa27 	bl	800762e <HAL_TIM_OC_DelayElapsedCallback>
        HAL_TIM_PWM_PulseFinishedCallback(htim);
 80071e0:	6878      	ldr	r0, [r7, #4]
 80071e2:	f000 fa38 	bl	8007656 <HAL_TIM_PWM_PulseFinishedCallback>
#endif /* USE_HAL_TIM_REGISTER_CALLBACKS */
      }
      htim->Channel = HAL_TIM_ACTIVE_CHANNEL_CLEARED;
 80071e6:	687b      	ldr	r3, [r7, #4]
 80071e8:	2200      	movs	r2, #0
 80071ea:	771a      	strb	r2, [r3, #28]
    }
  }
  /* Capture compare 3 event */
  if ((itflag & (TIM_FLAG_CC3)) == (TIM_FLAG_CC3))
 80071ec:	68bb      	ldr	r3, [r7, #8]
 80071ee:	f003 0308 	and.w	r3, r3, #8
 80071f2:	2b00      	cmp	r3, #0
 80071f4:	d020      	beq.n	8007238 <HAL_TIM_IRQHandler+0xfc>
  {
    if ((itsource & (TIM_IT_CC3)) == (TIM_IT_CC3))
 80071f6:	68fb      	ldr	r3, [r7, #12]
 80071f8:	f003 0308 	and.w	r3, r3, #8
 80071fc:	2b00      	cmp	r3, #0
 80071fe:	d01b      	beq.n	8007238 <HAL_TIM_IRQHandler+0xfc>
    {
      __HAL_TIM_CLEAR_FLAG(htim, TIM_FLAG_CC3);
 8007200:	687b      	ldr	r3, [r7, #4]
 8007202:	681b      	ldr	r3, [r3, #0]
 8007204:	f06f 0208 	mvn.w	r2, #8
 8007208:	611a      	str	r2, [r3, #16]
      htim->Channel = HAL_TIM_ACTIVE_CHANNEL_3;
 800720a:	687b      	ldr	r3, [r7, #4]
 800720c:	2204      	movs	r2, #4
 800720e:	771a      	strb	r2, [r3, #28]
      /* Input capture event */
      if ((htim->Instance->CCMR2 & TIM_CCMR2_CC3S) != 0x00U)
 8007210:	687b      	ldr	r3, [r7, #4]
 8007212:	681b      	ldr	r3, [r3, #0]
 8007214:	69db      	ldr	r3, [r3, #28]
 8007216:	f003 0303 	and.w	r3, r3, #3
 800721a:	2b00      	cmp	r3, #0
 800721c:	d003      	beq.n	8007226 <HAL_TIM_IRQHandler+0xea>
      {
#if (USE_HAL_TIM_REGISTER_CALLBACKS == 1)
        htim->IC_CaptureCallback(htim);
#else
        HAL_TIM_IC_CaptureCallback(htim);
 800721e:	6878      	ldr	r0, [r7, #4]
 8007220:	f000 fa0f 	bl	8007642 <HAL_TIM_IC_CaptureCallback>
 8007224:	e005      	b.n	8007232 <HAL_TIM_IRQHandler+0xf6>
      {
#if (USE_HAL_TIM_REGISTER_CALLBACKS == 1)
        htim->OC_DelayElapsedCallback(htim);
        htim->PWM_PulseFinishedCallback(htim);
#else
        HAL_TIM_OC_DelayElapsedCallback(htim);
 8007226:	6878      	ldr	r0, [r7, #4]
 8007228:	f000 fa01 	bl	800762e <HAL_TIM_OC_DelayElapsedCallback>
        HAL_TIM_PWM_PulseFinishedCallback(htim);
 800722c:	6878      	ldr	r0, [r7, #4]
 800722e:	f000 fa12 	bl	8007656 <HAL_TIM_PWM_PulseFinishedCallback>
#endif /* USE_HAL_TIM_REGISTER_CALLBACKS */
      }
      htim->Channel = HAL_TIM_ACTIVE_CHANNEL_CLEARED;
 8007232:	687b      	ldr	r3, [r7, #4]
 8007234:	2200      	movs	r2, #0
 8007236:	771a      	strb	r2, [r3, #28]
    }
  }
  /* Capture compare 4 event */
  if ((itflag & (TIM_FLAG_CC4)) == (TIM_FLAG_CC4))
 8007238:	68bb      	ldr	r3, [r7, #8]
 800723a:	f003 0310 	and.w	r3, r3, #16
 800723e:	2b00      	cmp	r3, #0
 8007240:	d020      	beq.n	8007284 <HAL_TIM_IRQHandler+0x148>
  {
    if ((itsource & (TIM_IT_CC4)) == (TIM_IT_CC4))
 8007242:	68fb      	ldr	r3, [r7, #12]
 8007244:	f003 0310 	and.w	r3, r3, #16
 8007248:	2b00      	cmp	r3, #0
 800724a:	d01b      	beq.n	8007284 <HAL_TIM_IRQHandler+0x148>
    {
      __HAL_TIM_CLEAR_FLAG(htim, TIM_FLAG_CC4);
 800724c:	687b      	ldr	r3, [r7, #4]
 800724e:	681b      	ldr	r3, [r3, #0]
 8007250:	f06f 0210 	mvn.w	r2, #16
 8007254:	611a      	str	r2, [r3, #16]
      htim->Channel = HAL_TIM_ACTIVE_CHANNEL_4;
 8007256:	687b      	ldr	r3, [r7, #4]
 8007258:	2208      	movs	r2, #8
 800725a:	771a      	strb	r2, [r3, #28]
      /* Input capture event */
      if ((htim->Instance->CCMR2 & TIM_CCMR2_CC4S) != 0x00U)
 800725c:	687b      	ldr	r3, [r7, #4]
 800725e:	681b      	ldr	r3, [r3, #0]
 8007260:	69db      	ldr	r3, [r3, #28]
 8007262:	f403 7340 	and.w	r3, r3, #768	@ 0x300
 8007266:	2b00      	cmp	r3, #0
 8007268:	d003      	beq.n	8007272 <HAL_TIM_IRQHandler+0x136>
      {
#if (USE_HAL_TIM_REGISTER_CALLBACKS == 1)
        htim->IC_CaptureCallback(htim);
#else
        HAL_TIM_IC_CaptureCallback(htim);
 800726a:	6878      	ldr	r0, [r7, #4]
 800726c:	f000 f9e9 	bl	8007642 <HAL_TIM_IC_CaptureCallback>
 8007270:	e005      	b.n	800727e <HAL_TIM_IRQHandler+0x142>
      {
#if (USE_HAL_TIM_REGISTER_CALLBACKS == 1)
        htim->OC_DelayElapsedCallback(htim);
        htim->PWM_PulseFinishedCallback(htim);
#else
        HAL_TIM_OC_DelayElapsedCallback(htim);
 8007272:	6878      	ldr	r0, [r7, #4]
 8007274:	f000 f9db 	bl	800762e <HAL_TIM_OC_DelayElapsedCallback>
        HAL_TIM_PWM_PulseFinishedCallback(htim);
 8007278:	6878      	ldr	r0, [r7, #4]
 800727a:	f000 f9ec 	bl	8007656 <HAL_TIM_PWM_PulseFinishedCallback>
#endif /* USE_HAL_TIM_REGISTER_CALLBACKS */
      }
      htim->Channel = HAL_TIM_ACTIVE_CHANNEL_CLEARED;
 800727e:	687b      	ldr	r3, [r7, #4]
 8007280:	2200      	movs	r2, #0
 8007282:	771a      	strb	r2, [r3, #28]
    }
  }
  /* TIM Update event */
  if ((itflag & (TIM_FLAG_UPDATE)) == (TIM_FLAG_UPDATE))
 8007284:	68bb      	ldr	r3, [r7, #8]
 8007286:	f003 0301 	and.w	r3, r3, #1
 800728a:	2b00      	cmp	r3, #0
 800728c:	d00c      	beq.n	80072a8 <HAL_TIM_IRQHandler+0x16c>
  {
    if ((itsource & (TIM_IT_UPDATE)) == (TIM_IT_UPDATE))
 800728e:	68fb      	ldr	r3, [r7, #12]
 8007290:	f003 0301 	and.w	r3, r3, #1
 8007294:	2b00      	cmp	r3, #0
 8007296:	d007      	beq.n	80072a8 <HAL_TIM_IRQHandler+0x16c>
    {
      __HAL_TIM_CLEAR_FLAG(htim, TIM_FLAG_UPDATE);
 8007298:	687b      	ldr	r3, [r7, #4]
 800729a:	681b      	ldr	r3, [r3, #0]
 800729c:	f06f 0201 	mvn.w	r2, #1
 80072a0:	611a      	str	r2, [r3, #16]
#if (USE_HAL_TIM_REGISTER_CALLBACKS == 1)
      htim->PeriodElapsedCallback(htim);
#else
      HAL_TIM_PeriodElapsedCallback(htim);
 80072a2:	6878      	ldr	r0, [r7, #4]
 80072a4:	f7fa fa8e 	bl	80017c4 <HAL_TIM_PeriodElapsedCallback>
#endif /* USE_HAL_TIM_REGISTER_CALLBACKS */
    }
  }
  /* TIM Break input event */
  if ((itflag & (TIM_FLAG_BREAK)) == (TIM_FLAG_BREAK))
 80072a8:	68bb      	ldr	r3, [r7, #8]
 80072aa:	f003 0380 	and.w	r3, r3, #128	@ 0x80
 80072ae:	2b00      	cmp	r3, #0
 80072b0:	d00c      	beq.n	80072cc <HAL_TIM_IRQHandler+0x190>
  {
    if ((itsource & (TIM_IT_BREAK)) == (TIM_IT_BREAK))
 80072b2:	68fb      	ldr	r3, [r7, #12]
 80072b4:	f003 0380 	and.w	r3, r3, #128	@ 0x80
 80072b8:	2b00      	cmp	r3, #0
 80072ba:	d007      	beq.n	80072cc <HAL_TIM_IRQHandler+0x190>
    {
      __HAL_TIM_CLEAR_FLAG(htim, TIM_FLAG_BREAK);
 80072bc:	687b      	ldr	r3, [r7, #4]
 80072be:	681b      	ldr	r3, [r3, #0]
 80072c0:	f06f 0280 	mvn.w	r2, #128	@ 0x80
 80072c4:	611a      	str	r2, [r3, #16]
#if (USE_HAL_TIM_REGISTER_CALLBACKS == 1)
      htim->BreakCallback(htim);
#else
      HAL_TIMEx_BreakCallback(htim);
 80072c6:	6878      	ldr	r0, [r7, #4]
 80072c8:	f000 fd7c 	bl	8007dc4 <HAL_TIMEx_BreakCallback>
#endif /* USE_HAL_TIM_REGISTER_CALLBACKS */
    }
  }
  /* TIM Trigger detection event */
  if ((itflag & (TIM_FLAG_TRIGGER)) == (TIM_FLAG_TRIGGER))
 80072cc:	68bb      	ldr	r3, [r7, #8]
 80072ce:	f003 0340 	and.w	r3, r3, #64	@ 0x40
 80072d2:	2b00      	cmp	r3, #0
 80072d4:	d00c      	beq.n	80072f0 <HAL_TIM_IRQHandler+0x1b4>
  {
    if ((itsource & (TIM_IT_TRIGGER)) == (TIM_IT_TRIGGER))
 80072d6:	68fb      	ldr	r3, [r7, #12]
 80072d8:	f003 0340 	and.w	r3, r3, #64	@ 0x40
 80072dc:	2b00      	cmp	r3, #0
 80072de:	d007      	beq.n	80072f0 <HAL_TIM_IRQHandler+0x1b4>
    {
      __HAL_TIM_CLEAR_FLAG(htim, TIM_FLAG_TRIGGER);
 80072e0:	687b      	ldr	r3, [r7, #4]
 80072e2:	681b      	ldr	r3, [r3, #0]
 80072e4:	f06f 0240 	mvn.w	r2, #64	@ 0x40
 80072e8:	611a      	str	r2, [r3, #16]
#if (USE_HAL_TIM_REGISTER_CALLBACKS == 1)
      htim->TriggerCallback(htim);
#else
      HAL_TIM_TriggerCallback(htim);
 80072ea:	6878      	ldr	r0, [r7, #4]
 80072ec:	f000 f9bd 	bl	800766a <HAL_TIM_TriggerCallback>
#endif /* USE_HAL_TIM_REGISTER_CALLBACKS */
    }
  }
  /* TIM commutation event */
  if ((itflag & (TIM_FLAG_COM)) == (TIM_FLAG_COM))
 80072f0:	68bb      	ldr	r3, [r7, #8]
 80072f2:	f003 0320 	and.w	r3, r3, #32
 80072f6:	2b00      	cmp	r3, #0
 80072f8:	d00c      	beq.n	8007314 <HAL_TIM_IRQHandler+0x1d8>
  {
    if ((itsource & (TIM_IT_COM)) == (TIM_IT_COM))
 80072fa:	68fb      	ldr	r3, [r7, #12]
 80072fc:	f003 0320 	and.w	r3, r3, #32
 8007300:	2b00      	cmp	r3, #0
 8007302:	d007      	beq.n	8007314 <HAL_TIM_IRQHandler+0x1d8>
    {
      __HAL_TIM_CLEAR_FLAG(htim, TIM_FLAG_COM);
 8007304:	687b      	ldr	r3, [r7, #4]
 8007306:	681b      	ldr	r3, [r3, #0]
 8007308:	f06f 0220 	mvn.w	r2, #32
 800730c:	611a      	str	r2, [r3, #16]
#if (USE_HAL_TIM_REGISTER_CALLBACKS == 1)
      htim->CommutationCallback(htim);
#else
      HAL_TIMEx_CommutCallback(htim);
 800730e:	6878      	ldr	r0, [r7, #4]
 8007310:	f000 fd4e 	bl	8007db0 <HAL_TIMEx_CommutCallback>
#endif /* USE_HAL_TIM_REGISTER_CALLBACKS */
    }
  }
}
 8007314:	bf00      	nop
 8007316:	3710      	adds	r7, #16
 8007318:	46bd      	mov	sp, r7
 800731a:	bd80      	pop	{r7, pc}

0800731c <HAL_TIM_PWM_ConfigChannel>:
  * @retval HAL status
  */
HAL_StatusTypeDef HAL_TIM_PWM_ConfigChannel(TIM_HandleTypeDef *htim,
                                            const TIM_OC_InitTypeDef *sConfig,
                                            uint32_t Channel)
{
 800731c:	b580      	push	{r7, lr}
 800731e:	b086      	sub	sp, #24
 8007320:	af00      	add	r7, sp, #0
 8007322:	60f8      	str	r0, [r7, #12]
 8007324:	60b9      	str	r1, [r7, #8]
 8007326:	607a      	str	r2, [r7, #4]
  HAL_StatusTypeDef status = HAL_OK;
 8007328:	2300      	movs	r3, #0
 800732a:	75fb      	strb	r3, [r7, #23]
  assert_param(IS_TIM_PWM_MODE(sConfig->OCMode));
  assert_param(IS_TIM_OC_POLARITY(sConfig->OCPolarity));
  assert_param(IS_TIM_FAST_STATE(sConfig->OCFastMode));

  /* Process Locked */
  __HAL_LOCK(htim);
 800732c:	68fb      	ldr	r3, [r7, #12]
 800732e:	f893 303c 	ldrb.w	r3, [r3, #60]	@ 0x3c
 8007332:	2b01      	cmp	r3, #1
 8007334:	d101      	bne.n	800733a <HAL_TIM_PWM_ConfigChannel+0x1e>
 8007336:	2302      	movs	r3, #2
 8007338:	e0ae      	b.n	8007498 <HAL_TIM_PWM_ConfigChannel+0x17c>
 800733a:	68fb      	ldr	r3, [r7, #12]
 800733c:	2201      	movs	r2, #1
 800733e:	f883 203c 	strb.w	r2, [r3, #60]	@ 0x3c

  switch (Channel)
 8007342:	687b      	ldr	r3, [r7, #4]
 8007344:	2b0c      	cmp	r3, #12
 8007346:	f200 809f 	bhi.w	8007488 <HAL_TIM_PWM_ConfigChannel+0x16c>
 800734a:	a201      	add	r2, pc, #4	@ (adr r2, 8007350 <HAL_TIM_PWM_ConfigChannel+0x34>)
 800734c:	f852 f023 	ldr.w	pc, [r2, r3, lsl #2]
 8007350:	08007385 	.word	0x08007385
 8007354:	08007489 	.word	0x08007489
 8007358:	08007489 	.word	0x08007489
 800735c:	08007489 	.word	0x08007489
 8007360:	080073c5 	.word	0x080073c5
 8007364:	08007489 	.word	0x08007489
 8007368:	08007489 	.word	0x08007489
 800736c:	08007489 	.word	0x08007489
 8007370:	08007407 	.word	0x08007407
 8007374:	08007489 	.word	0x08007489
 8007378:	08007489 	.word	0x08007489
 800737c:	08007489 	.word	0x08007489
 8007380:	08007447 	.word	0x08007447
    {
      /* Check the parameters */
      assert_param(IS_TIM_CC1_INSTANCE(htim->Instance));

      /* Configure the Channel 1 in PWM mode */
      TIM_OC1_SetConfig(htim->Instance, sConfig);
 8007384:	68fb      	ldr	r3, [r7, #12]
 8007386:	681b      	ldr	r3, [r3, #0]
 8007388:	68b9      	ldr	r1, [r7, #8]
 800738a:	4618      	mov	r0, r3
 800738c:	f000 fa24 	bl	80077d8 <TIM_OC1_SetConfig>

      /* Set the Preload enable bit for channel1 */
      htim->Instance->CCMR1 |= TIM_CCMR1_OC1PE;
 8007390:	68fb      	ldr	r3, [r7, #12]
 8007392:	681b      	ldr	r3, [r3, #0]
 8007394:	699a      	ldr	r2, [r3, #24]
 8007396:	68fb      	ldr	r3, [r7, #12]
 8007398:	681b      	ldr	r3, [r3, #0]
 800739a:	f042 0208 	orr.w	r2, r2, #8
 800739e:	619a      	str	r2, [r3, #24]

      /* Configure the Output Fast mode */
      htim->Instance->CCMR1 &= ~TIM_CCMR1_OC1FE;
 80073a0:	68fb      	ldr	r3, [r7, #12]
 80073a2:	681b      	ldr	r3, [r3, #0]
 80073a4:	699a      	ldr	r2, [r3, #24]
 80073a6:	68fb      	ldr	r3, [r7, #12]
 80073a8:	681b      	ldr	r3, [r3, #0]
 80073aa:	f022 0204 	bic.w	r2, r2, #4
 80073ae:	619a      	str	r2, [r3, #24]
      htim->Instance->CCMR1 |= sConfig->OCFastMode;
 80073b0:	68fb      	ldr	r3, [r7, #12]
 80073b2:	681b      	ldr	r3, [r3, #0]
 80073b4:	6999      	ldr	r1, [r3, #24]
 80073b6:	68bb      	ldr	r3, [r7, #8]
 80073b8:	691a      	ldr	r2, [r3, #16]
 80073ba:	68fb      	ldr	r3, [r7, #12]
 80073bc:	681b      	ldr	r3, [r3, #0]
 80073be:	430a      	orrs	r2, r1
 80073c0:	619a      	str	r2, [r3, #24]
      break;
 80073c2:	e064      	b.n	800748e <HAL_TIM_PWM_ConfigChannel+0x172>
    {
      /* Check the parameters */
      assert_param(IS_TIM_CC2_INSTANCE(htim->Instance));

      /* Configure the Channel 2 in PWM mode */
      TIM_OC2_SetConfig(htim->Instance, sConfig);
 80073c4:	68fb      	ldr	r3, [r7, #12]
 80073c6:	681b      	ldr	r3, [r3, #0]
 80073c8:	68b9      	ldr	r1, [r7, #8]
 80073ca:	4618      	mov	r0, r3
 80073cc:	f000 fa74 	bl	80078b8 <TIM_OC2_SetConfig>

      /* Set the Preload enable bit for channel2 */
      htim->Instance->CCMR1 |= TIM_CCMR1_OC2PE;
 80073d0:	68fb      	ldr	r3, [r7, #12]
 80073d2:	681b      	ldr	r3, [r3, #0]
 80073d4:	699a      	ldr	r2, [r3, #24]
 80073d6:	68fb      	ldr	r3, [r7, #12]
 80073d8:	681b      	ldr	r3, [r3, #0]
 80073da:	f442 6200 	orr.w	r2, r2, #2048	@ 0x800
 80073de:	619a      	str	r2, [r3, #24]

      /* Configure the Output Fast mode */
      htim->Instance->CCMR1 &= ~TIM_CCMR1_OC2FE;
 80073e0:	68fb      	ldr	r3, [r7, #12]
 80073e2:	681b      	ldr	r3, [r3, #0]
 80073e4:	699a      	ldr	r2, [r3, #24]
 80073e6:	68fb      	ldr	r3, [r7, #12]
 80073e8:	681b      	ldr	r3, [r3, #0]
 80073ea:	f422 6280 	bic.w	r2, r2, #1024	@ 0x400
 80073ee:	619a      	str	r2, [r3, #24]
      htim->Instance->CCMR1 |= sConfig->OCFastMode << 8U;
 80073f0:	68fb      	ldr	r3, [r7, #12]
 80073f2:	681b      	ldr	r3, [r3, #0]
 80073f4:	6999      	ldr	r1, [r3, #24]
 80073f6:	68bb      	ldr	r3, [r7, #8]
 80073f8:	691b      	ldr	r3, [r3, #16]
 80073fa:	021a      	lsls	r2, r3, #8
 80073fc:	68fb      	ldr	r3, [r7, #12]
 80073fe:	681b      	ldr	r3, [r3, #0]
 8007400:	430a      	orrs	r2, r1
 8007402:	619a      	str	r2, [r3, #24]
      break;
 8007404:	e043      	b.n	800748e <HAL_TIM_PWM_ConfigChannel+0x172>
    {
      /* Check the parameters */
      assert_param(IS_TIM_CC3_INSTANCE(htim->Instance));

      /* Configure the Channel 3 in PWM mode */
      TIM_OC3_SetConfig(htim->Instance, sConfig);
 8007406:	68fb      	ldr	r3, [r7, #12]
 8007408:	681b      	ldr	r3, [r3, #0]
 800740a:	68b9      	ldr	r1, [r7, #8]
 800740c:	4618      	mov	r0, r3
 800740e:	f000 fac9 	bl	80079a4 <TIM_OC3_SetConfig>

      /* Set the Preload enable bit for channel3 */
      htim->Instance->CCMR2 |= TIM_CCMR2_OC3PE;
 8007412:	68fb      	ldr	r3, [r7, #12]
 8007414:	681b      	ldr	r3, [r3, #0]
 8007416:	69da      	ldr	r2, [r3, #28]
 8007418:	68fb      	ldr	r3, [r7, #12]
 800741a:	681b      	ldr	r3, [r3, #0]
 800741c:	f042 0208 	orr.w	r2, r2, #8
 8007420:	61da      	str	r2, [r3, #28]

      /* Configure the Output Fast mode */
      htim->Instance->CCMR2 &= ~TIM_CCMR2_OC3FE;
 8007422:	68fb      	ldr	r3, [r7, #12]
 8007424:	681b      	ldr	r3, [r3, #0]
 8007426:	69da      	ldr	r2, [r3, #28]
 8007428:	68fb      	ldr	r3, [r7, #12]
 800742a:	681b      	ldr	r3, [r3, #0]
 800742c:	f022 0204 	bic.w	r2, r2, #4
 8007430:	61da      	str	r2, [r3, #28]
      htim->Instance->CCMR2 |= sConfig->OCFastMode;
 8007432:	68fb      	ldr	r3, [r7, #12]
 8007434:	681b      	ldr	r3, [r3, #0]
 8007436:	69d9      	ldr	r1, [r3, #28]
 8007438:	68bb      	ldr	r3, [r7, #8]
 800743a:	691a      	ldr	r2, [r3, #16]
 800743c:	68fb      	ldr	r3, [r7, #12]
 800743e:	681b      	ldr	r3, [r3, #0]
 8007440:	430a      	orrs	r2, r1
 8007442:	61da      	str	r2, [r3, #28]
      break;
 8007444:	e023      	b.n	800748e <HAL_TIM_PWM_ConfigChannel+0x172>
    {
      /* Check the parameters */
      assert_param(IS_TIM_CC4_INSTANCE(htim->Instance));

      /* Configure the Channel 4 in PWM mode */
      TIM_OC4_SetConfig(htim->Instance, sConfig);
 8007446:	68fb      	ldr	r3, [r7, #12]
 8007448:	681b      	ldr	r3, [r3, #0]
 800744a:	68b9      	ldr	r1, [r7, #8]
 800744c:	4618      	mov	r0, r3
 800744e:	f000 fb1d 	bl	8007a8c <TIM_OC4_SetConfig>

      /* Set the Preload enable bit for channel4 */
      htim->Instance->CCMR2 |= TIM_CCMR2_OC4PE;
 8007452:	68fb      	ldr	r3, [r7, #12]
 8007454:	681b      	ldr	r3, [r3, #0]
 8007456:	69da      	ldr	r2, [r3, #28]
 8007458:	68fb      	ldr	r3, [r7, #12]
 800745a:	681b      	ldr	r3, [r3, #0]
 800745c:	f442 6200 	orr.w	r2, r2, #2048	@ 0x800
 8007460:	61da      	str	r2, [r3, #28]

      /* Configure the Output Fast mode */
      htim->Instance->CCMR2 &= ~TIM_CCMR2_OC4FE;
 8007462:	68fb      	ldr	r3, [r7, #12]
 8007464:	681b      	ldr	r3, [r3, #0]
 8007466:	69da      	ldr	r2, [r3, #28]
 8007468:	68fb      	ldr	r3, [r7, #12]
 800746a:	681b      	ldr	r3, [r3, #0]
 800746c:	f422 6280 	bic.w	r2, r2, #1024	@ 0x400
 8007470:	61da      	str	r2, [r3, #28]
      htim->Instance->CCMR2 |= sConfig->OCFastMode << 8U;
 8007472:	68fb      	ldr	r3, [r7, #12]
 8007474:	681b      	ldr	r3, [r3, #0]
 8007476:	69d9      	ldr	r1, [r3, #28]
 8007478:	68bb      	ldr	r3, [r7, #8]
 800747a:	691b      	ldr	r3, [r3, #16]
 800747c:	021a      	lsls	r2, r3, #8
 800747e:	68fb      	ldr	r3, [r7, #12]
 8007480:	681b      	ldr	r3, [r3, #0]
 8007482:	430a      	orrs	r2, r1
 8007484:	61da      	str	r2, [r3, #28]
      break;
 8007486:	e002      	b.n	800748e <HAL_TIM_PWM_ConfigChannel+0x172>
    }

    default:
      status = HAL_ERROR;
 8007488:	2301      	movs	r3, #1
 800748a:	75fb      	strb	r3, [r7, #23]
      break;
 800748c:	bf00      	nop
  }

  __HAL_UNLOCK(htim);
 800748e:	68fb      	ldr	r3, [r7, #12]
 8007490:	2200      	movs	r2, #0
 8007492:	f883 203c 	strb.w	r2, [r3, #60]	@ 0x3c

  return status;
 8007496:	7dfb      	ldrb	r3, [r7, #23]
}
 8007498:	4618      	mov	r0, r3
 800749a:	3718      	adds	r7, #24
 800749c:	46bd      	mov	sp, r7
 800749e:	bd80      	pop	{r7, pc}

080074a0 <HAL_TIM_ConfigClockSource>:
  * @param  sClockSourceConfig pointer to a TIM_ClockConfigTypeDef structure that
  *         contains the clock source information for the TIM peripheral.
  * @retval HAL status
  */
HAL_StatusTypeDef HAL_TIM_ConfigClockSource(TIM_HandleTypeDef *htim, const TIM_ClockConfigTypeDef *sClockSourceConfig)
{
 80074a0:	b580      	push	{r7, lr}
 80074a2:	b084      	sub	sp, #16
 80074a4:	af00      	add	r7, sp, #0
 80074a6:	6078      	str	r0, [r7, #4]
 80074a8:	6039      	str	r1, [r7, #0]
  HAL_StatusTypeDef status = HAL_OK;
 80074aa:	2300      	movs	r3, #0
 80074ac:	73fb      	strb	r3, [r7, #15]
  uint32_t tmpsmcr;

  /* Process Locked */
  __HAL_LOCK(htim);
 80074ae:	687b      	ldr	r3, [r7, #4]
 80074b0:	f893 303c 	ldrb.w	r3, [r3, #60]	@ 0x3c
 80074b4:	2b01      	cmp	r3, #1
 80074b6:	d101      	bne.n	80074bc <HAL_TIM_ConfigClockSource+0x1c>
 80074b8:	2302      	movs	r3, #2
 80074ba:	e0b4      	b.n	8007626 <HAL_TIM_ConfigClockSource+0x186>
 80074bc:	687b      	ldr	r3, [r7, #4]
 80074be:	2201      	movs	r2, #1
 80074c0:	f883 203c 	strb.w	r2, [r3, #60]	@ 0x3c

  htim->State = HAL_TIM_STATE_BUSY;
 80074c4:	687b      	ldr	r3, [r7, #4]
 80074c6:	2202      	movs	r2, #2
 80074c8:	f883 203d 	strb.w	r2, [r3, #61]	@ 0x3d

  /* Check the parameters */
  assert_param(IS_TIM_CLOCKSOURCE(sClockSourceConfig->ClockSource));

  /* Reset the SMS, TS, ECE, ETPS and ETRF bits */
  tmpsmcr = htim->Instance->SMCR;
 80074cc:	687b      	ldr	r3, [r7, #4]
 80074ce:	681b      	ldr	r3, [r3, #0]
 80074d0:	689b      	ldr	r3, [r3, #8]
 80074d2:	60bb      	str	r3, [r7, #8]
  tmpsmcr &= ~(TIM_SMCR_SMS | TIM_SMCR_TS);
 80074d4:	68bb      	ldr	r3, [r7, #8]
 80074d6:	f023 0377 	bic.w	r3, r3, #119	@ 0x77
 80074da:	60bb      	str	r3, [r7, #8]
  tmpsmcr &= ~(TIM_SMCR_ETF | TIM_SMCR_ETPS | TIM_SMCR_ECE | TIM_SMCR_ETP);
 80074dc:	68bb      	ldr	r3, [r7, #8]
 80074de:	f423 437f 	bic.w	r3, r3, #65280	@ 0xff00
 80074e2:	60bb      	str	r3, [r7, #8]
  htim->Instance->SMCR = tmpsmcr;
 80074e4:	687b      	ldr	r3, [r7, #4]
 80074e6:	681b      	ldr	r3, [r3, #0]
 80074e8:	68ba      	ldr	r2, [r7, #8]
 80074ea:	609a      	str	r2, [r3, #8]

  switch (sClockSourceConfig->ClockSource)
 80074ec:	683b      	ldr	r3, [r7, #0]
 80074ee:	681b      	ldr	r3, [r3, #0]
 80074f0:	f5b3 5f00 	cmp.w	r3, #8192	@ 0x2000
 80074f4:	d03e      	beq.n	8007574 <HAL_TIM_ConfigClockSource+0xd4>
 80074f6:	f5b3 5f00 	cmp.w	r3, #8192	@ 0x2000
 80074fa:	f200 8087 	bhi.w	800760c <HAL_TIM_ConfigClockSource+0x16c>
 80074fe:	f5b3 5f80 	cmp.w	r3, #4096	@ 0x1000
 8007502:	f000 8086 	beq.w	8007612 <HAL_TIM_ConfigClockSource+0x172>
 8007506:	f5b3 5f80 	cmp.w	r3, #4096	@ 0x1000
 800750a:	d87f      	bhi.n	800760c <HAL_TIM_ConfigClockSource+0x16c>
 800750c:	2b70      	cmp	r3, #112	@ 0x70
 800750e:	d01a      	beq.n	8007546 <HAL_TIM_ConfigClockSource+0xa6>
 8007510:	2b70      	cmp	r3, #112	@ 0x70
 8007512:	d87b      	bhi.n	800760c <HAL_TIM_ConfigClockSource+0x16c>
 8007514:	2b60      	cmp	r3, #96	@ 0x60
 8007516:	d050      	beq.n	80075ba <HAL_TIM_ConfigClockSource+0x11a>
 8007518:	2b60      	cmp	r3, #96	@ 0x60
 800751a:	d877      	bhi.n	800760c <HAL_TIM_ConfigClockSource+0x16c>
 800751c:	2b50      	cmp	r3, #80	@ 0x50
 800751e:	d03c      	beq.n	800759a <HAL_TIM_ConfigClockSource+0xfa>
 8007520:	2b50      	cmp	r3, #80	@ 0x50
 8007522:	d873      	bhi.n	800760c <HAL_TIM_ConfigClockSource+0x16c>
 8007524:	2b40      	cmp	r3, #64	@ 0x40
 8007526:	d058      	beq.n	80075da <HAL_TIM_ConfigClockSource+0x13a>
 8007528:	2b40      	cmp	r3, #64	@ 0x40
 800752a:	d86f      	bhi.n	800760c <HAL_TIM_ConfigClockSource+0x16c>
 800752c:	2b30      	cmp	r3, #48	@ 0x30
 800752e:	d064      	beq.n	80075fa <HAL_TIM_ConfigClockSource+0x15a>
 8007530:	2b30      	cmp	r3, #48	@ 0x30
 8007532:	d86b      	bhi.n	800760c <HAL_TIM_ConfigClockSource+0x16c>
 8007534:	2b20      	cmp	r3, #32
 8007536:	d060      	beq.n	80075fa <HAL_TIM_ConfigClockSource+0x15a>
 8007538:	2b20      	cmp	r3, #32
 800753a:	d867      	bhi.n	800760c <HAL_TIM_ConfigClockSource+0x16c>
 800753c:	2b00      	cmp	r3, #0
 800753e:	d05c      	beq.n	80075fa <HAL_TIM_ConfigClockSource+0x15a>
 8007540:	2b10      	cmp	r3, #16
 8007542:	d05a      	beq.n	80075fa <HAL_TIM_ConfigClockSource+0x15a>
 8007544:	e062      	b.n	800760c <HAL_TIM_ConfigClockSource+0x16c>
      assert_param(IS_TIM_CLOCKPRESCALER(sClockSourceConfig->ClockPrescaler));
      assert_param(IS_TIM_CLOCKPOLARITY(sClockSourceConfig->ClockPolarity));
      assert_param(IS_TIM_CLOCKFILTER(sClockSourceConfig->ClockFilter));

      /* Configure the ETR Clock source */
      TIM_ETR_SetConfig(htim->Instance,
 8007546:	687b      	ldr	r3, [r7, #4]
 8007548:	6818      	ldr	r0, [r3, #0]
                        sClockSourceConfig->ClockPrescaler,
 800754a:	683b      	ldr	r3, [r7, #0]
 800754c:	6899      	ldr	r1, [r3, #8]
                        sClockSourceConfig->ClockPolarity,
 800754e:	683b      	ldr	r3, [r7, #0]
 8007550:	685a      	ldr	r2, [r3, #4]
                        sClockSourceConfig->ClockFilter);
 8007552:	683b      	ldr	r3, [r7, #0]
 8007554:	68db      	ldr	r3, [r3, #12]
      TIM_ETR_SetConfig(htim->Instance,
 8007556:	f000 fb69 	bl	8007c2c <TIM_ETR_SetConfig>

      /* Select the External clock mode1 and the ETRF trigger */
      tmpsmcr = htim->Instance->SMCR;
 800755a:	687b      	ldr	r3, [r7, #4]
 800755c:	681b      	ldr	r3, [r3, #0]
 800755e:	689b      	ldr	r3, [r3, #8]
 8007560:	60bb      	str	r3, [r7, #8]
      tmpsmcr |= (TIM_SLAVEMODE_EXTERNAL1 | TIM_CLOCKSOURCE_ETRMODE1);
 8007562:	68bb      	ldr	r3, [r7, #8]
 8007564:	f043 0377 	orr.w	r3, r3, #119	@ 0x77
 8007568:	60bb      	str	r3, [r7, #8]
      /* Write to TIMx SMCR */
      htim->Instance->SMCR = tmpsmcr;
 800756a:	687b      	ldr	r3, [r7, #4]
 800756c:	681b      	ldr	r3, [r3, #0]
 800756e:	68ba      	ldr	r2, [r7, #8]
 8007570:	609a      	str	r2, [r3, #8]
      break;
 8007572:	e04f      	b.n	8007614 <HAL_TIM_ConfigClockSource+0x174>
      assert_param(IS_TIM_CLOCKPRESCALER(sClockSourceConfig->ClockPrescaler));
      assert_param(IS_TIM_CLOCKPOLARITY(sClockSourceConfig->ClockPolarity));
      assert_param(IS_TIM_CLOCKFILTER(sClockSourceConfig->ClockFilter));

      /* Configure the ETR Clock source */
      TIM_ETR_SetConfig(htim->Instance,
 8007574:	687b      	ldr	r3, [r7, #4]
 8007576:	6818      	ldr	r0, [r3, #0]
                        sClockSourceConfig->ClockPrescaler,
 8007578:	683b      	ldr	r3, [r7, #0]
 800757a:	6899      	ldr	r1, [r3, #8]
                        sClockSourceConfig->ClockPolarity,
 800757c:	683b      	ldr	r3, [r7, #0]
 800757e:	685a      	ldr	r2, [r3, #4]
                        sClockSourceConfig->ClockFilter);
 8007580:	683b      	ldr	r3, [r7, #0]
 8007582:	68db      	ldr	r3, [r3, #12]
      TIM_ETR_SetConfig(htim->Instance,
 8007584:	f000 fb52 	bl	8007c2c <TIM_ETR_SetConfig>
      /* Enable the External clock mode2 */
      htim->Instance->SMCR |= TIM_SMCR_ECE;
 8007588:	687b      	ldr	r3, [r7, #4]
 800758a:	681b      	ldr	r3, [r3, #0]
 800758c:	689a      	ldr	r2, [r3, #8]
 800758e:	687b      	ldr	r3, [r7, #4]
 8007590:	681b      	ldr	r3, [r3, #0]
 8007592:	f442 4280 	orr.w	r2, r2, #16384	@ 0x4000
 8007596:	609a      	str	r2, [r3, #8]
      break;
 8007598:	e03c      	b.n	8007614 <HAL_TIM_ConfigClockSource+0x174>

      /* Check TI1 input conditioning related parameters */
      assert_param(IS_TIM_CLOCKPOLARITY(sClockSourceConfig->ClockPolarity));
      assert_param(IS_TIM_CLOCKFILTER(sClockSourceConfig->ClockFilter));

      TIM_TI1_ConfigInputStage(htim->Instance,
 800759a:	687b      	ldr	r3, [r7, #4]
 800759c:	6818      	ldr	r0, [r3, #0]
                               sClockSourceConfig->ClockPolarity,
 800759e:	683b      	ldr	r3, [r7, #0]
 80075a0:	6859      	ldr	r1, [r3, #4]
                               sClockSourceConfig->ClockFilter);
 80075a2:	683b      	ldr	r3, [r7, #0]
 80075a4:	68db      	ldr	r3, [r3, #12]
      TIM_TI1_ConfigInputStage(htim->Instance,
 80075a6:	461a      	mov	r2, r3
 80075a8:	f000 fac6 	bl	8007b38 <TIM_TI1_ConfigInputStage>
      TIM_ITRx_SetConfig(htim->Instance, TIM_CLOCKSOURCE_TI1);
 80075ac:	687b      	ldr	r3, [r7, #4]
 80075ae:	681b      	ldr	r3, [r3, #0]
 80075b0:	2150      	movs	r1, #80	@ 0x50
 80075b2:	4618      	mov	r0, r3
 80075b4:	f000 fb1f 	bl	8007bf6 <TIM_ITRx_SetConfig>
      break;
 80075b8:	e02c      	b.n	8007614 <HAL_TIM_ConfigClockSource+0x174>

      /* Check TI2 input conditioning related parameters */
      assert_param(IS_TIM_CLOCKPOLARITY(sClockSourceConfig->ClockPolarity));
      assert_param(IS_TIM_CLOCKFILTER(sClockSourceConfig->ClockFilter));

      TIM_TI2_ConfigInputStage(htim->Instance,
 80075ba:	687b      	ldr	r3, [r7, #4]
 80075bc:	6818      	ldr	r0, [r3, #0]
                               sClockSourceConfig->ClockPolarity,
 80075be:	683b      	ldr	r3, [r7, #0]
 80075c0:	6859      	ldr	r1, [r3, #4]
                               sClockSourceConfig->ClockFilter);
 80075c2:	683b      	ldr	r3, [r7, #0]
 80075c4:	68db      	ldr	r3, [r3, #12]
      TIM_TI2_ConfigInputStage(htim->Instance,
 80075c6:	461a      	mov	r2, r3
 80075c8:	f000 fae5 	bl	8007b96 <TIM_TI2_ConfigInputStage>
      TIM_ITRx_SetConfig(htim->Instance, TIM_CLOCKSOURCE_TI2);
 80075cc:	687b      	ldr	r3, [r7, #4]
 80075ce:	681b      	ldr	r3, [r3, #0]
 80075d0:	2160      	movs	r1, #96	@ 0x60
 80075d2:	4618      	mov	r0, r3
 80075d4:	f000 fb0f 	bl	8007bf6 <TIM_ITRx_SetConfig>
      break;
 80075d8:	e01c      	b.n	8007614 <HAL_TIM_ConfigClockSource+0x174>

      /* Check TI1 input conditioning related parameters */
      assert_param(IS_TIM_CLOCKPOLARITY(sClockSourceConfig->ClockPolarity));
      assert_param(IS_TIM_CLOCKFILTER(sClockSourceConfig->ClockFilter));

      TIM_TI1_ConfigInputStage(htim->Instance,
 80075da:	687b      	ldr	r3, [r7, #4]
 80075dc:	6818      	ldr	r0, [r3, #0]
                               sClockSourceConfig->ClockPolarity,
 80075de:	683b      	ldr	r3, [r7, #0]
 80075e0:	6859      	ldr	r1, [r3, #4]
                               sClockSourceConfig->ClockFilter);
 80075e2:	683b      	ldr	r3, [r7, #0]
 80075e4:	68db      	ldr	r3, [r3, #12]
      TIM_TI1_ConfigInputStage(htim->Instance,
 80075e6:	461a      	mov	r2, r3
 80075e8:	f000 faa6 	bl	8007b38 <TIM_TI1_ConfigInputStage>
      TIM_ITRx_SetConfig(htim->Instance, TIM_CLOCKSOURCE_TI1ED);
 80075ec:	687b      	ldr	r3, [r7, #4]
 80075ee:	681b      	ldr	r3, [r3, #0]
 80075f0:	2140      	movs	r1, #64	@ 0x40
 80075f2:	4618      	mov	r0, r3
 80075f4:	f000 faff 	bl	8007bf6 <TIM_ITRx_SetConfig>
      break;
 80075f8:	e00c      	b.n	8007614 <HAL_TIM_ConfigClockSource+0x174>
    case TIM_CLOCKSOURCE_ITR3:
    {
      /* Check whether or not the timer instance supports internal trigger input */
      assert_param(IS_TIM_CLOCKSOURCE_ITRX_INSTANCE(htim->Instance));

      TIM_ITRx_SetConfig(htim->Instance, sClockSourceConfig->ClockSource);
 80075fa:	687b      	ldr	r3, [r7, #4]
 80075fc:	681a      	ldr	r2, [r3, #0]
 80075fe:	683b      	ldr	r3, [r7, #0]
 8007600:	681b      	ldr	r3, [r3, #0]
 8007602:	4619      	mov	r1, r3
 8007604:	4610      	mov	r0, r2
 8007606:	f000 faf6 	bl	8007bf6 <TIM_ITRx_SetConfig>
      break;
 800760a:	e003      	b.n	8007614 <HAL_TIM_ConfigClockSource+0x174>
    }

    default:
      status = HAL_ERROR;
 800760c:	2301      	movs	r3, #1
 800760e:	73fb      	strb	r3, [r7, #15]
      break;
 8007610:	e000      	b.n	8007614 <HAL_TIM_ConfigClockSource+0x174>
      break;
 8007612:	bf00      	nop
  }
  htim->State = HAL_TIM_STATE_READY;
 8007614:	687b      	ldr	r3, [r7, #4]
 8007616:	2201      	movs	r2, #1
 8007618:	f883 203d 	strb.w	r2, [r3, #61]	@ 0x3d

  __HAL_UNLOCK(htim);
 800761c:	687b      	ldr	r3, [r7, #4]
 800761e:	2200      	movs	r2, #0
 8007620:	f883 203c 	strb.w	r2, [r3, #60]	@ 0x3c

  return status;
 8007624:	7bfb      	ldrb	r3, [r7, #15]
}
 8007626:	4618      	mov	r0, r3
 8007628:	3710      	adds	r7, #16
 800762a:	46bd      	mov	sp, r7
 800762c:	bd80      	pop	{r7, pc}

0800762e <HAL_TIM_OC_DelayElapsedCallback>:
  * @brief  Output Compare callback in non-blocking mode
  * @param  htim TIM OC handle
  * @retval None
  */
__weak void HAL_TIM_OC_DelayElapsedCallback(TIM_HandleTypeDef *htim)
{
 800762e:	b480      	push	{r7}
 8007630:	b083      	sub	sp, #12
 8007632:	af00      	add	r7, sp, #0
 8007634:	6078      	str	r0, [r7, #4]
  UNUSED(htim);

  /* NOTE : This function should not be modified, when the callback is needed,
            the HAL_TIM_OC_DelayElapsedCallback could be implemented in the user file
   */
}
 8007636:	bf00      	nop
 8007638:	370c      	adds	r7, #12
 800763a:	46bd      	mov	sp, r7
 800763c:	f85d 7b04 	ldr.w	r7, [sp], #4
 8007640:	4770      	bx	lr

08007642 <HAL_TIM_IC_CaptureCallback>:
  * @brief  Input Capture callback in non-blocking mode
  * @param  htim TIM IC handle
  * @retval None
  */
__weak void HAL_TIM_IC_CaptureCallback(TIM_HandleTypeDef *htim)
{
 8007642:	b480      	push	{r7}
 8007644:	b083      	sub	sp, #12
 8007646:	af00      	add	r7, sp, #0
 8007648:	6078      	str	r0, [r7, #4]
  UNUSED(htim);

  /* NOTE : This function should not be modified, when the callback is needed,
            the HAL_TIM_IC_CaptureCallback could be implemented in the user file
   */
}
 800764a:	bf00      	nop
 800764c:	370c      	adds	r7, #12
 800764e:	46bd      	mov	sp, r7
 8007650:	f85d 7b04 	ldr.w	r7, [sp], #4
 8007654:	4770      	bx	lr

08007656 <HAL_TIM_PWM_PulseFinishedCallback>:
  * @brief  PWM Pulse finished callback in non-blocking mode
  * @param  htim TIM handle
  * @retval None
  */
__weak void HAL_TIM_PWM_PulseFinishedCallback(TIM_HandleTypeDef *htim)
{
 8007656:	b480      	push	{r7}
 8007658:	b083      	sub	sp, #12
 800765a:	af00      	add	r7, sp, #0
 800765c:	6078      	str	r0, [r7, #4]
  UNUSED(htim);

  /* NOTE : This function should not be modified, when the callback is needed,
            the HAL_TIM_PWM_PulseFinishedCallback could be implemented in the user file
   */
}
 800765e:	bf00      	nop
 8007660:	370c      	adds	r7, #12
 8007662:	46bd      	mov	sp, r7
 8007664:	f85d 7b04 	ldr.w	r7, [sp], #4
 8007668:	4770      	bx	lr

0800766a <HAL_TIM_TriggerCallback>:
  * @brief  Hall Trigger detection callback in non-blocking mode
  * @param  htim TIM handle
  * @retval None
  */
__weak void HAL_TIM_TriggerCallback(TIM_HandleTypeDef *htim)
{
 800766a:	b480      	push	{r7}
 800766c:	b083      	sub	sp, #12
 800766e:	af00      	add	r7, sp, #0
 8007670:	6078      	str	r0, [r7, #4]
  UNUSED(htim);

  /* NOTE : This function should not be modified, when the callback is needed,
            the HAL_TIM_TriggerCallback could be implemented in the user file
   */
}
 8007672:	bf00      	nop
 8007674:	370c      	adds	r7, #12
 8007676:	46bd      	mov	sp, r7
 8007678:	f85d 7b04 	ldr.w	r7, [sp], #4
 800767c:	4770      	bx	lr
	...

08007680 <TIM_Base_SetConfig>:
  * @param  TIMx TIM peripheral
  * @param  Structure TIM Base configuration structure
  * @retval None
  */
void TIM_Base_SetConfig(TIM_TypeDef *TIMx, const TIM_Base_InitTypeDef *Structure)
{
 8007680:	b480      	push	{r7}
 8007682:	b085      	sub	sp, #20
 8007684:	af00      	add	r7, sp, #0
 8007686:	6078      	str	r0, [r7, #4]
 8007688:	6039      	str	r1, [r7, #0]
  uint32_t tmpcr1;
  tmpcr1 = TIMx->CR1;
 800768a:	687b      	ldr	r3, [r7, #4]
 800768c:	681b      	ldr	r3, [r3, #0]
 800768e:	60fb      	str	r3, [r7, #12]

  /* Set TIM Time Base Unit parameters ---------------------------------------*/
  if (IS_TIM_COUNTER_MODE_SELECT_INSTANCE(TIMx))
 8007690:	687b      	ldr	r3, [r7, #4]
 8007692:	4a46      	ldr	r2, [pc, #280]	@ (80077ac <TIM_Base_SetConfig+0x12c>)
 8007694:	4293      	cmp	r3, r2
 8007696:	d013      	beq.n	80076c0 <TIM_Base_SetConfig+0x40>
 8007698:	687b      	ldr	r3, [r7, #4]
 800769a:	f1b3 4f80 	cmp.w	r3, #1073741824	@ 0x40000000
 800769e:	d00f      	beq.n	80076c0 <TIM_Base_SetConfig+0x40>
 80076a0:	687b      	ldr	r3, [r7, #4]
 80076a2:	4a43      	ldr	r2, [pc, #268]	@ (80077b0 <TIM_Base_SetConfig+0x130>)
 80076a4:	4293      	cmp	r3, r2
 80076a6:	d00b      	beq.n	80076c0 <TIM_Base_SetConfig+0x40>
 80076a8:	687b      	ldr	r3, [r7, #4]
 80076aa:	4a42      	ldr	r2, [pc, #264]	@ (80077b4 <TIM_Base_SetConfig+0x134>)
 80076ac:	4293      	cmp	r3, r2
 80076ae:	d007      	beq.n	80076c0 <TIM_Base_SetConfig+0x40>
 80076b0:	687b      	ldr	r3, [r7, #4]
 80076b2:	4a41      	ldr	r2, [pc, #260]	@ (80077b8 <TIM_Base_SetConfig+0x138>)
 80076b4:	4293      	cmp	r3, r2
 80076b6:	d003      	beq.n	80076c0 <TIM_Base_SetConfig+0x40>
 80076b8:	687b      	ldr	r3, [r7, #4]
 80076ba:	4a40      	ldr	r2, [pc, #256]	@ (80077bc <TIM_Base_SetConfig+0x13c>)
 80076bc:	4293      	cmp	r3, r2
 80076be:	d108      	bne.n	80076d2 <TIM_Base_SetConfig+0x52>
  {
    /* Select the Counter Mode */
    tmpcr1 &= ~(TIM_CR1_DIR | TIM_CR1_CMS);
 80076c0:	68fb      	ldr	r3, [r7, #12]
 80076c2:	f023 0370 	bic.w	r3, r3, #112	@ 0x70
 80076c6:	60fb      	str	r3, [r7, #12]
    tmpcr1 |= Structure->CounterMode;
 80076c8:	683b      	ldr	r3, [r7, #0]
 80076ca:	685b      	ldr	r3, [r3, #4]
 80076cc:	68fa      	ldr	r2, [r7, #12]
 80076ce:	4313      	orrs	r3, r2
 80076d0:	60fb      	str	r3, [r7, #12]
  }

  if (IS_TIM_CLOCK_DIVISION_INSTANCE(TIMx))
 80076d2:	687b      	ldr	r3, [r7, #4]
 80076d4:	4a35      	ldr	r2, [pc, #212]	@ (80077ac <TIM_Base_SetConfig+0x12c>)
 80076d6:	4293      	cmp	r3, r2
 80076d8:	d02b      	beq.n	8007732 <TIM_Base_SetConfig+0xb2>
 80076da:	687b      	ldr	r3, [r7, #4]
 80076dc:	f1b3 4f80 	cmp.w	r3, #1073741824	@ 0x40000000
 80076e0:	d027      	beq.n	8007732 <TIM_Base_SetConfig+0xb2>
 80076e2:	687b      	ldr	r3, [r7, #4]
 80076e4:	4a32      	ldr	r2, [pc, #200]	@ (80077b0 <TIM_Base_SetConfig+0x130>)
 80076e6:	4293      	cmp	r3, r2
 80076e8:	d023      	beq.n	8007732 <TIM_Base_SetConfig+0xb2>
 80076ea:	687b      	ldr	r3, [r7, #4]
 80076ec:	4a31      	ldr	r2, [pc, #196]	@ (80077b4 <TIM_Base_SetConfig+0x134>)
 80076ee:	4293      	cmp	r3, r2
 80076f0:	d01f      	beq.n	8007732 <TIM_Base_SetConfig+0xb2>
 80076f2:	687b      	ldr	r3, [r7, #4]
 80076f4:	4a30      	ldr	r2, [pc, #192]	@ (80077b8 <TIM_Base_SetConfig+0x138>)
 80076f6:	4293      	cmp	r3, r2
 80076f8:	d01b      	beq.n	8007732 <TIM_Base_SetConfig+0xb2>
 80076fa:	687b      	ldr	r3, [r7, #4]
 80076fc:	4a2f      	ldr	r2, [pc, #188]	@ (80077bc <TIM_Base_SetConfig+0x13c>)
 80076fe:	4293      	cmp	r3, r2
 8007700:	d017      	beq.n	8007732 <TIM_Base_SetConfig+0xb2>
 8007702:	687b      	ldr	r3, [r7, #4]
 8007704:	4a2e      	ldr	r2, [pc, #184]	@ (80077c0 <TIM_Base_SetConfig+0x140>)
 8007706:	4293      	cmp	r3, r2
 8007708:	d013      	beq.n	8007732 <TIM_Base_SetConfig+0xb2>
 800770a:	687b      	ldr	r3, [r7, #4]
 800770c:	4a2d      	ldr	r2, [pc, #180]	@ (80077c4 <TIM_Base_SetConfig+0x144>)
 800770e:	4293      	cmp	r3, r2
 8007710:	d00f      	beq.n	8007732 <TIM_Base_SetConfig+0xb2>
 8007712:	687b      	ldr	r3, [r7, #4]
 8007714:	4a2c      	ldr	r2, [pc, #176]	@ (80077c8 <TIM_Base_SetConfig+0x148>)
 8007716:	4293      	cmp	r3, r2
 8007718:	d00b      	beq.n	8007732 <TIM_Base_SetConfig+0xb2>
 800771a:	687b      	ldr	r3, [r7, #4]
 800771c:	4a2b      	ldr	r2, [pc, #172]	@ (80077cc <TIM_Base_SetConfig+0x14c>)
 800771e:	4293      	cmp	r3, r2
 8007720:	d007      	beq.n	8007732 <TIM_Base_SetConfig+0xb2>
 8007722:	687b      	ldr	r3, [r7, #4]
 8007724:	4a2a      	ldr	r2, [pc, #168]	@ (80077d0 <TIM_Base_SetConfig+0x150>)
 8007726:	4293      	cmp	r3, r2
 8007728:	d003      	beq.n	8007732 <TIM_Base_SetConfig+0xb2>
 800772a:	687b      	ldr	r3, [r7, #4]
 800772c:	4a29      	ldr	r2, [pc, #164]	@ (80077d4 <TIM_Base_SetConfig+0x154>)
 800772e:	4293      	cmp	r3, r2
 8007730:	d108      	bne.n	8007744 <TIM_Base_SetConfig+0xc4>
  {
    /* Set the clock division */
    tmpcr1 &= ~TIM_CR1_CKD;
 8007732:	68fb      	ldr	r3, [r7, #12]
 8007734:	f423 7340 	bic.w	r3, r3, #768	@ 0x300
 8007738:	60fb      	str	r3, [r7, #12]
    tmpcr1 |= (uint32_t)Structure->ClockDivision;
 800773a:	683b      	ldr	r3, [r7, #0]
 800773c:	68db      	ldr	r3, [r3, #12]
 800773e:	68fa      	ldr	r2, [r7, #12]
 8007740:	4313      	orrs	r3, r2
 8007742:	60fb      	str	r3, [r7, #12]
  }

  /* Set the auto-reload preload */
  MODIFY_REG(tmpcr1, TIM_CR1_ARPE, Structure->AutoReloadPreload);
 8007744:	68fb      	ldr	r3, [r7, #12]
 8007746:	f023 0280 	bic.w	r2, r3, #128	@ 0x80
 800774a:	683b      	ldr	r3, [r7, #0]
 800774c:	695b      	ldr	r3, [r3, #20]
 800774e:	4313      	orrs	r3, r2
 8007750:	60fb      	str	r3, [r7, #12]

  TIMx->CR1 = tmpcr1;
 8007752:	687b      	ldr	r3, [r7, #4]
 8007754:	68fa      	ldr	r2, [r7, #12]
 8007756:	601a      	str	r2, [r3, #0]

  /* Set the Autoreload value */
  TIMx->ARR = (uint32_t)Structure->Period ;
 8007758:	683b      	ldr	r3, [r7, #0]
 800775a:	689a      	ldr	r2, [r3, #8]
 800775c:	687b      	ldr	r3, [r7, #4]
 800775e:	62da      	str	r2, [r3, #44]	@ 0x2c

  /* Set the Prescaler value */
  TIMx->PSC = Structure->Prescaler;
 8007760:	683b      	ldr	r3, [r7, #0]
 8007762:	681a      	ldr	r2, [r3, #0]
 8007764:	687b      	ldr	r3, [r7, #4]
 8007766:	629a      	str	r2, [r3, #40]	@ 0x28

  if (IS_TIM_REPETITION_COUNTER_INSTANCE(TIMx))
 8007768:	687b      	ldr	r3, [r7, #4]
 800776a:	4a10      	ldr	r2, [pc, #64]	@ (80077ac <TIM_Base_SetConfig+0x12c>)
 800776c:	4293      	cmp	r3, r2
 800776e:	d003      	beq.n	8007778 <TIM_Base_SetConfig+0xf8>
 8007770:	687b      	ldr	r3, [r7, #4]
 8007772:	4a12      	ldr	r2, [pc, #72]	@ (80077bc <TIM_Base_SetConfig+0x13c>)
 8007774:	4293      	cmp	r3, r2
 8007776:	d103      	bne.n	8007780 <TIM_Base_SetConfig+0x100>
  {
    /* Set the Repetition Counter value */
    TIMx->RCR = Structure->RepetitionCounter;
 8007778:	683b      	ldr	r3, [r7, #0]
 800777a:	691a      	ldr	r2, [r3, #16]
 800777c:	687b      	ldr	r3, [r7, #4]
 800777e:	631a      	str	r2, [r3, #48]	@ 0x30
  }

  /* Generate an update event to reload the Prescaler
     and the repetition counter (only for advanced timer) value immediately */
  TIMx->EGR = TIM_EGR_UG;
 8007780:	687b      	ldr	r3, [r7, #4]
 8007782:	2201      	movs	r2, #1
 8007784:	615a      	str	r2, [r3, #20]

  /* Check if the update flag is set after the Update Generation, if so clear the UIF flag */
  if (HAL_IS_BIT_SET(TIMx->SR, TIM_FLAG_UPDATE))
 8007786:	687b      	ldr	r3, [r7, #4]
 8007788:	691b      	ldr	r3, [r3, #16]
 800778a:	f003 0301 	and.w	r3, r3, #1
 800778e:	2b01      	cmp	r3, #1
 8007790:	d105      	bne.n	800779e <TIM_Base_SetConfig+0x11e>
  {
    /* Clear the update flag */
    CLEAR_BIT(TIMx->SR, TIM_FLAG_UPDATE);
 8007792:	687b      	ldr	r3, [r7, #4]
 8007794:	691b      	ldr	r3, [r3, #16]
 8007796:	f023 0201 	bic.w	r2, r3, #1
 800779a:	687b      	ldr	r3, [r7, #4]
 800779c:	611a      	str	r2, [r3, #16]
  }
}
 800779e:	bf00      	nop
 80077a0:	3714      	adds	r7, #20
 80077a2:	46bd      	mov	sp, r7
 80077a4:	f85d 7b04 	ldr.w	r7, [sp], #4
 80077a8:	4770      	bx	lr
 80077aa:	bf00      	nop
 80077ac:	40010000 	.word	0x40010000
 80077b0:	40000400 	.word	0x40000400
 80077b4:	40000800 	.word	0x40000800
 80077b8:	40000c00 	.word	0x40000c00
 80077bc:	40010400 	.word	0x40010400
 80077c0:	40014000 	.word	0x40014000
 80077c4:	40014400 	.word	0x40014400
 80077c8:	40014800 	.word	0x40014800
 80077cc:	40001800 	.word	0x40001800
 80077d0:	40001c00 	.word	0x40001c00
 80077d4:	40002000 	.word	0x40002000

080077d8 <TIM_OC1_SetConfig>:
  * @param  TIMx to select the TIM peripheral
  * @param  OC_Config The output configuration structure
  * @retval None
  */
static void TIM_OC1_SetConfig(TIM_TypeDef *TIMx, const TIM_OC_InitTypeDef *OC_Config)
{
 80077d8:	b480      	push	{r7}
 80077da:	b087      	sub	sp, #28
 80077dc:	af00      	add	r7, sp, #0
 80077de:	6078      	str	r0, [r7, #4]
 80077e0:	6039      	str	r1, [r7, #0]
  uint32_t tmpccmrx;
  uint32_t tmpccer;
  uint32_t tmpcr2;

  /* Get the TIMx CCER register value */
  tmpccer = TIMx->CCER;
 80077e2:	687b      	ldr	r3, [r7, #4]
 80077e4:	6a1b      	ldr	r3, [r3, #32]
 80077e6:	617b      	str	r3, [r7, #20]

  /* Disable the Channel 1: Reset the CC1E Bit */
  TIMx->CCER &= ~TIM_CCER_CC1E;
 80077e8:	687b      	ldr	r3, [r7, #4]
 80077ea:	6a1b      	ldr	r3, [r3, #32]
 80077ec:	f023 0201 	bic.w	r2, r3, #1
 80077f0:	687b      	ldr	r3, [r7, #4]
 80077f2:	621a      	str	r2, [r3, #32]

  /* Get the TIMx CR2 register value */
  tmpcr2 =  TIMx->CR2;
 80077f4:	687b      	ldr	r3, [r7, #4]
 80077f6:	685b      	ldr	r3, [r3, #4]
 80077f8:	613b      	str	r3, [r7, #16]

  /* Get the TIMx CCMR1 register value */
  tmpccmrx = TIMx->CCMR1;
 80077fa:	687b      	ldr	r3, [r7, #4]
 80077fc:	699b      	ldr	r3, [r3, #24]
 80077fe:	60fb      	str	r3, [r7, #12]

  /* Reset the Output Compare Mode Bits */
  tmpccmrx &= ~TIM_CCMR1_OC1M;
 8007800:	68fb      	ldr	r3, [r7, #12]
 8007802:	f023 0370 	bic.w	r3, r3, #112	@ 0x70
 8007806:	60fb      	str	r3, [r7, #12]
  tmpccmrx &= ~TIM_CCMR1_CC1S;
 8007808:	68fb      	ldr	r3, [r7, #12]
 800780a:	f023 0303 	bic.w	r3, r3, #3
 800780e:	60fb      	str	r3, [r7, #12]
  /* Select the Output Compare Mode */
  tmpccmrx |= OC_Config->OCMode;
 8007810:	683b      	ldr	r3, [r7, #0]
 8007812:	681b      	ldr	r3, [r3, #0]
 8007814:	68fa      	ldr	r2, [r7, #12]
 8007816:	4313      	orrs	r3, r2
 8007818:	60fb      	str	r3, [r7, #12]

  /* Reset the Output Polarity level */
  tmpccer &= ~TIM_CCER_CC1P;
 800781a:	697b      	ldr	r3, [r7, #20]
 800781c:	f023 0302 	bic.w	r3, r3, #2
 8007820:	617b      	str	r3, [r7, #20]
  /* Set the Output Compare Polarity */
  tmpccer |= OC_Config->OCPolarity;
 8007822:	683b      	ldr	r3, [r7, #0]
 8007824:	689b      	ldr	r3, [r3, #8]
 8007826:	697a      	ldr	r2, [r7, #20]
 8007828:	4313      	orrs	r3, r2
 800782a:	617b      	str	r3, [r7, #20]

  if (IS_TIM_CCXN_INSTANCE(TIMx, TIM_CHANNEL_1))
 800782c:	687b      	ldr	r3, [r7, #4]
 800782e:	4a20      	ldr	r2, [pc, #128]	@ (80078b0 <TIM_OC1_SetConfig+0xd8>)
 8007830:	4293      	cmp	r3, r2
 8007832:	d003      	beq.n	800783c <TIM_OC1_SetConfig+0x64>
 8007834:	687b      	ldr	r3, [r7, #4]
 8007836:	4a1f      	ldr	r2, [pc, #124]	@ (80078b4 <TIM_OC1_SetConfig+0xdc>)
 8007838:	4293      	cmp	r3, r2
 800783a:	d10c      	bne.n	8007856 <TIM_OC1_SetConfig+0x7e>
  {
    /* Check parameters */
    assert_param(IS_TIM_OCN_POLARITY(OC_Config->OCNPolarity));

    /* Reset the Output N Polarity level */
    tmpccer &= ~TIM_CCER_CC1NP;
 800783c:	697b      	ldr	r3, [r7, #20]
 800783e:	f023 0308 	bic.w	r3, r3, #8
 8007842:	617b      	str	r3, [r7, #20]
    /* Set the Output N Polarity */
    tmpccer |= OC_Config->OCNPolarity;
 8007844:	683b      	ldr	r3, [r7, #0]
 8007846:	68db      	ldr	r3, [r3, #12]
 8007848:	697a      	ldr	r2, [r7, #20]
 800784a:	4313      	orrs	r3, r2
 800784c:	617b      	str	r3, [r7, #20]
    /* Reset the Output N State */
    tmpccer &= ~TIM_CCER_CC1NE;
 800784e:	697b      	ldr	r3, [r7, #20]
 8007850:	f023 0304 	bic.w	r3, r3, #4
 8007854:	617b      	str	r3, [r7, #20]
  }

  if (IS_TIM_BREAK_INSTANCE(TIMx))
 8007856:	687b      	ldr	r3, [r7, #4]
 8007858:	4a15      	ldr	r2, [pc, #84]	@ (80078b0 <TIM_OC1_SetConfig+0xd8>)
 800785a:	4293      	cmp	r3, r2
 800785c:	d003      	beq.n	8007866 <TIM_OC1_SetConfig+0x8e>
 800785e:	687b      	ldr	r3, [r7, #4]
 8007860:	4a14      	ldr	r2, [pc, #80]	@ (80078b4 <TIM_OC1_SetConfig+0xdc>)
 8007862:	4293      	cmp	r3, r2
 8007864:	d111      	bne.n	800788a <TIM_OC1_SetConfig+0xb2>
    /* Check parameters */
    assert_param(IS_TIM_OCNIDLE_STATE(OC_Config->OCNIdleState));
    assert_param(IS_TIM_OCIDLE_STATE(OC_Config->OCIdleState));

    /* Reset the Output Compare and Output Compare N IDLE State */
    tmpcr2 &= ~TIM_CR2_OIS1;
 8007866:	693b      	ldr	r3, [r7, #16]
 8007868:	f423 7380 	bic.w	r3, r3, #256	@ 0x100
 800786c:	613b      	str	r3, [r7, #16]
    tmpcr2 &= ~TIM_CR2_OIS1N;
 800786e:	693b      	ldr	r3, [r7, #16]
 8007870:	f423 7300 	bic.w	r3, r3, #512	@ 0x200
 8007874:	613b      	str	r3, [r7, #16]
    /* Set the Output Idle state */
    tmpcr2 |= OC_Config->OCIdleState;
 8007876:	683b      	ldr	r3, [r7, #0]
 8007878:	695b      	ldr	r3, [r3, #20]
 800787a:	693a      	ldr	r2, [r7, #16]
 800787c:	4313      	orrs	r3, r2
 800787e:	613b      	str	r3, [r7, #16]
    /* Set the Output N Idle state */
    tmpcr2 |= OC_Config->OCNIdleState;
 8007880:	683b      	ldr	r3, [r7, #0]
 8007882:	699b      	ldr	r3, [r3, #24]
 8007884:	693a      	ldr	r2, [r7, #16]
 8007886:	4313      	orrs	r3, r2
 8007888:	613b      	str	r3, [r7, #16]
  }

  /* Write to TIMx CR2 */
  TIMx->CR2 = tmpcr2;
 800788a:	687b      	ldr	r3, [r7, #4]
 800788c:	693a      	ldr	r2, [r7, #16]
 800788e:	605a      	str	r2, [r3, #4]

  /* Write to TIMx CCMR1 */
  TIMx->CCMR1 = tmpccmrx;
 8007890:	687b      	ldr	r3, [r7, #4]
 8007892:	68fa      	ldr	r2, [r7, #12]
 8007894:	619a      	str	r2, [r3, #24]

  /* Set the Capture Compare Register value */
  TIMx->CCR1 = OC_Config->Pulse;
 8007896:	683b      	ldr	r3, [r7, #0]
 8007898:	685a      	ldr	r2, [r3, #4]
 800789a:	687b      	ldr	r3, [r7, #4]
 800789c:	635a      	str	r2, [r3, #52]	@ 0x34

  /* Write to TIMx CCER */
  TIMx->CCER = tmpccer;
 800789e:	687b      	ldr	r3, [r7, #4]
 80078a0:	697a      	ldr	r2, [r7, #20]
 80078a2:	621a      	str	r2, [r3, #32]
}
 80078a4:	bf00      	nop
 80078a6:	371c      	adds	r7, #28
 80078a8:	46bd      	mov	sp, r7
 80078aa:	f85d 7b04 	ldr.w	r7, [sp], #4
 80078ae:	4770      	bx	lr
 80078b0:	40010000 	.word	0x40010000
 80078b4:	40010400 	.word	0x40010400

080078b8 <TIM_OC2_SetConfig>:
  * @param  TIMx to select the TIM peripheral
  * @param  OC_Config The output configuration structure
  * @retval None
  */
void TIM_OC2_SetConfig(TIM_TypeDef *TIMx, const TIM_OC_InitTypeDef *OC_Config)
{
 80078b8:	b480      	push	{r7}
 80078ba:	b087      	sub	sp, #28
 80078bc:	af00      	add	r7, sp, #0
 80078be:	6078      	str	r0, [r7, #4]
 80078c0:	6039      	str	r1, [r7, #0]
  uint32_t tmpccmrx;
  uint32_t tmpccer;
  uint32_t tmpcr2;

  /* Get the TIMx CCER register value */
  tmpccer = TIMx->CCER;
 80078c2:	687b      	ldr	r3, [r7, #4]
 80078c4:	6a1b      	ldr	r3, [r3, #32]
 80078c6:	617b      	str	r3, [r7, #20]

  /* Disable the Channel 2: Reset the CC2E Bit */
  TIMx->CCER &= ~TIM_CCER_CC2E;
 80078c8:	687b      	ldr	r3, [r7, #4]
 80078ca:	6a1b      	ldr	r3, [r3, #32]
 80078cc:	f023 0210 	bic.w	r2, r3, #16
 80078d0:	687b      	ldr	r3, [r7, #4]
 80078d2:	621a      	str	r2, [r3, #32]

  /* Get the TIMx CR2 register value */
  tmpcr2 =  TIMx->CR2;
 80078d4:	687b      	ldr	r3, [r7, #4]
 80078d6:	685b      	ldr	r3, [r3, #4]
 80078d8:	613b      	str	r3, [r7, #16]

  /* Get the TIMx CCMR1 register value */
  tmpccmrx = TIMx->CCMR1;
 80078da:	687b      	ldr	r3, [r7, #4]
 80078dc:	699b      	ldr	r3, [r3, #24]
 80078de:	60fb      	str	r3, [r7, #12]

  /* Reset the Output Compare mode and Capture/Compare selection Bits */
  tmpccmrx &= ~TIM_CCMR1_OC2M;
 80078e0:	68fb      	ldr	r3, [r7, #12]
 80078e2:	f423 43e0 	bic.w	r3, r3, #28672	@ 0x7000
 80078e6:	60fb      	str	r3, [r7, #12]
  tmpccmrx &= ~TIM_CCMR1_CC2S;
 80078e8:	68fb      	ldr	r3, [r7, #12]
 80078ea:	f423 7340 	bic.w	r3, r3, #768	@ 0x300
 80078ee:	60fb      	str	r3, [r7, #12]

  /* Select the Output Compare Mode */
  tmpccmrx |= (OC_Config->OCMode << 8U);
 80078f0:	683b      	ldr	r3, [r7, #0]
 80078f2:	681b      	ldr	r3, [r3, #0]
 80078f4:	021b      	lsls	r3, r3, #8
 80078f6:	68fa      	ldr	r2, [r7, #12]
 80078f8:	4313      	orrs	r3, r2
 80078fa:	60fb      	str	r3, [r7, #12]

  /* Reset the Output Polarity level */
  tmpccer &= ~TIM_CCER_CC2P;
 80078fc:	697b      	ldr	r3, [r7, #20]
 80078fe:	f023 0320 	bic.w	r3, r3, #32
 8007902:	617b      	str	r3, [r7, #20]
  /* Set the Output Compare Polarity */
  tmpccer |= (OC_Config->OCPolarity << 4U);
 8007904:	683b      	ldr	r3, [r7, #0]
 8007906:	689b      	ldr	r3, [r3, #8]
 8007908:	011b      	lsls	r3, r3, #4
 800790a:	697a      	ldr	r2, [r7, #20]
 800790c:	4313      	orrs	r3, r2
 800790e:	617b      	str	r3, [r7, #20]

  if (IS_TIM_CCXN_INSTANCE(TIMx, TIM_CHANNEL_2))
 8007910:	687b      	ldr	r3, [r7, #4]
 8007912:	4a22      	ldr	r2, [pc, #136]	@ (800799c <TIM_OC2_SetConfig+0xe4>)
 8007914:	4293      	cmp	r3, r2
 8007916:	d003      	beq.n	8007920 <TIM_OC2_SetConfig+0x68>
 8007918:	687b      	ldr	r3, [r7, #4]
 800791a:	4a21      	ldr	r2, [pc, #132]	@ (80079a0 <TIM_OC2_SetConfig+0xe8>)
 800791c:	4293      	cmp	r3, r2
 800791e:	d10d      	bne.n	800793c <TIM_OC2_SetConfig+0x84>
  {
    assert_param(IS_TIM_OCN_POLARITY(OC_Config->OCNPolarity));

    /* Reset the Output N Polarity level */
    tmpccer &= ~TIM_CCER_CC2NP;
 8007920:	697b      	ldr	r3, [r7, #20]
 8007922:	f023 0380 	bic.w	r3, r3, #128	@ 0x80
 8007926:	617b      	str	r3, [r7, #20]
    /* Set the Output N Polarity */
    tmpccer |= (OC_Config->OCNPolarity << 4U);
 8007928:	683b      	ldr	r3, [r7, #0]
 800792a:	68db      	ldr	r3, [r3, #12]
 800792c:	011b      	lsls	r3, r3, #4
 800792e:	697a      	ldr	r2, [r7, #20]
 8007930:	4313      	orrs	r3, r2
 8007932:	617b      	str	r3, [r7, #20]
    /* Reset the Output N State */
    tmpccer &= ~TIM_CCER_CC2NE;
 8007934:	697b      	ldr	r3, [r7, #20]
 8007936:	f023 0340 	bic.w	r3, r3, #64	@ 0x40
 800793a:	617b      	str	r3, [r7, #20]
  }

  if (IS_TIM_BREAK_INSTANCE(TIMx))
 800793c:	687b      	ldr	r3, [r7, #4]
 800793e:	4a17      	ldr	r2, [pc, #92]	@ (800799c <TIM_OC2_SetConfig+0xe4>)
 8007940:	4293      	cmp	r3, r2
 8007942:	d003      	beq.n	800794c <TIM_OC2_SetConfig+0x94>
 8007944:	687b      	ldr	r3, [r7, #4]
 8007946:	4a16      	ldr	r2, [pc, #88]	@ (80079a0 <TIM_OC2_SetConfig+0xe8>)
 8007948:	4293      	cmp	r3, r2
 800794a:	d113      	bne.n	8007974 <TIM_OC2_SetConfig+0xbc>
    /* Check parameters */
    assert_param(IS_TIM_OCNIDLE_STATE(OC_Config->OCNIdleState));
    assert_param(IS_TIM_OCIDLE_STATE(OC_Config->OCIdleState));

    /* Reset the Output Compare and Output Compare N IDLE State */
    tmpcr2 &= ~TIM_CR2_OIS2;
 800794c:	693b      	ldr	r3, [r7, #16]
 800794e:	f423 6380 	bic.w	r3, r3, #1024	@ 0x400
 8007952:	613b      	str	r3, [r7, #16]
    tmpcr2 &= ~TIM_CR2_OIS2N;
 8007954:	693b      	ldr	r3, [r7, #16]
 8007956:	f423 6300 	bic.w	r3, r3, #2048	@ 0x800
 800795a:	613b      	str	r3, [r7, #16]
    /* Set the Output Idle state */
    tmpcr2 |= (OC_Config->OCIdleState << 2U);
 800795c:	683b      	ldr	r3, [r7, #0]
 800795e:	695b      	ldr	r3, [r3, #20]
 8007960:	009b      	lsls	r3, r3, #2
 8007962:	693a      	ldr	r2, [r7, #16]
 8007964:	4313      	orrs	r3, r2
 8007966:	613b      	str	r3, [r7, #16]
    /* Set the Output N Idle state */
    tmpcr2 |= (OC_Config->OCNIdleState << 2U);
 8007968:	683b      	ldr	r3, [r7, #0]
 800796a:	699b      	ldr	r3, [r3, #24]
 800796c:	009b      	lsls	r3, r3, #2
 800796e:	693a      	ldr	r2, [r7, #16]
 8007970:	4313      	orrs	r3, r2
 8007972:	613b      	str	r3, [r7, #16]
  }

  /* Write to TIMx CR2 */
  TIMx->CR2 = tmpcr2;
 8007974:	687b      	ldr	r3, [r7, #4]
 8007976:	693a      	ldr	r2, [r7, #16]
 8007978:	605a      	str	r2, [r3, #4]

  /* Write to TIMx CCMR1 */
  TIMx->CCMR1 = tmpccmrx;
 800797a:	687b      	ldr	r3, [r7, #4]
 800797c:	68fa      	ldr	r2, [r7, #12]
 800797e:	619a      	str	r2, [r3, #24]

  /* Set the Capture Compare Register value */
  TIMx->CCR2 = OC_Config->Pulse;
 8007980:	683b      	ldr	r3, [r7, #0]
 8007982:	685a      	ldr	r2, [r3, #4]
 8007984:	687b      	ldr	r3, [r7, #4]
 8007986:	639a      	str	r2, [r3, #56]	@ 0x38

  /* Write to TIMx CCER */
  TIMx->CCER = tmpccer;
 8007988:	687b      	ldr	r3, [r7, #4]
 800798a:	697a      	ldr	r2, [r7, #20]
 800798c:	621a      	str	r2, [r3, #32]
}
 800798e:	bf00      	nop
 8007990:	371c      	adds	r7, #28
 8007992:	46bd      	mov	sp, r7
 8007994:	f85d 7b04 	ldr.w	r7, [sp], #4
 8007998:	4770      	bx	lr
 800799a:	bf00      	nop
 800799c:	40010000 	.word	0x40010000
 80079a0:	40010400 	.word	0x40010400

080079a4 <TIM_OC3_SetConfig>:
  * @param  TIMx to select the TIM peripheral
  * @param  OC_Config The output configuration structure
  * @retval None
  */
static void TIM_OC3_SetConfig(TIM_TypeDef *TIMx, const TIM_OC_InitTypeDef *OC_Config)
{
 80079a4:	b480      	push	{r7}
 80079a6:	b087      	sub	sp, #28
 80079a8:	af00      	add	r7, sp, #0
 80079aa:	6078      	str	r0, [r7, #4]
 80079ac:	6039      	str	r1, [r7, #0]
  uint32_t tmpccmrx;
  uint32_t tmpccer;
  uint32_t tmpcr2;

  /* Get the TIMx CCER register value */
  tmpccer = TIMx->CCER;
 80079ae:	687b      	ldr	r3, [r7, #4]
 80079b0:	6a1b      	ldr	r3, [r3, #32]
 80079b2:	617b      	str	r3, [r7, #20]

  /* Disable the Channel 3: Reset the CC2E Bit */
  TIMx->CCER &= ~TIM_CCER_CC3E;
 80079b4:	687b      	ldr	r3, [r7, #4]
 80079b6:	6a1b      	ldr	r3, [r3, #32]
 80079b8:	f423 7280 	bic.w	r2, r3, #256	@ 0x100
 80079bc:	687b      	ldr	r3, [r7, #4]
 80079be:	621a      	str	r2, [r3, #32]

  /* Get the TIMx CR2 register value */
  tmpcr2 =  TIMx->CR2;
 80079c0:	687b      	ldr	r3, [r7, #4]
 80079c2:	685b      	ldr	r3, [r3, #4]
 80079c4:	613b      	str	r3, [r7, #16]

  /* Get the TIMx CCMR2 register value */
  tmpccmrx = TIMx->CCMR2;
 80079c6:	687b      	ldr	r3, [r7, #4]
 80079c8:	69db      	ldr	r3, [r3, #28]
 80079ca:	60fb      	str	r3, [r7, #12]

  /* Reset the Output Compare mode and Capture/Compare selection Bits */
  tmpccmrx &= ~TIM_CCMR2_OC3M;
 80079cc:	68fb      	ldr	r3, [r7, #12]
 80079ce:	f023 0370 	bic.w	r3, r3, #112	@ 0x70
 80079d2:	60fb      	str	r3, [r7, #12]
  tmpccmrx &= ~TIM_CCMR2_CC3S;
 80079d4:	68fb      	ldr	r3, [r7, #12]
 80079d6:	f023 0303 	bic.w	r3, r3, #3
 80079da:	60fb      	str	r3, [r7, #12]
  /* Select the Output Compare Mode */
  tmpccmrx |= OC_Config->OCMode;
 80079dc:	683b      	ldr	r3, [r7, #0]
 80079de:	681b      	ldr	r3, [r3, #0]
 80079e0:	68fa      	ldr	r2, [r7, #12]
 80079e2:	4313      	orrs	r3, r2
 80079e4:	60fb      	str	r3, [r7, #12]

  /* Reset the Output Polarity level */
  tmpccer &= ~TIM_CCER_CC3P;
 80079e6:	697b      	ldr	r3, [r7, #20]
 80079e8:	f423 7300 	bic.w	r3, r3, #512	@ 0x200
 80079ec:	617b      	str	r3, [r7, #20]
  /* Set the Output Compare Polarity */
  tmpccer |= (OC_Config->OCPolarity << 8U);
 80079ee:	683b      	ldr	r3, [r7, #0]
 80079f0:	689b      	ldr	r3, [r3, #8]
 80079f2:	021b      	lsls	r3, r3, #8
 80079f4:	697a      	ldr	r2, [r7, #20]
 80079f6:	4313      	orrs	r3, r2
 80079f8:	617b      	str	r3, [r7, #20]

  if (IS_TIM_CCXN_INSTANCE(TIMx, TIM_CHANNEL_3))
 80079fa:	687b      	ldr	r3, [r7, #4]
 80079fc:	4a21      	ldr	r2, [pc, #132]	@ (8007a84 <TIM_OC3_SetConfig+0xe0>)
 80079fe:	4293      	cmp	r3, r2
 8007a00:	d003      	beq.n	8007a0a <TIM_OC3_SetConfig+0x66>
 8007a02:	687b      	ldr	r3, [r7, #4]
 8007a04:	4a20      	ldr	r2, [pc, #128]	@ (8007a88 <TIM_OC3_SetConfig+0xe4>)
 8007a06:	4293      	cmp	r3, r2
 8007a08:	d10d      	bne.n	8007a26 <TIM_OC3_SetConfig+0x82>
  {
    assert_param(IS_TIM_OCN_POLARITY(OC_Config->OCNPolarity));

    /* Reset the Output N Polarity level */
    tmpccer &= ~TIM_CCER_CC3NP;
 8007a0a:	697b      	ldr	r3, [r7, #20]
 8007a0c:	f423 6300 	bic.w	r3, r3, #2048	@ 0x800
 8007a10:	617b      	str	r3, [r7, #20]
    /* Set the Output N Polarity */
    tmpccer |= (OC_Config->OCNPolarity << 8U);
 8007a12:	683b      	ldr	r3, [r7, #0]
 8007a14:	68db      	ldr	r3, [r3, #12]
 8007a16:	021b      	lsls	r3, r3, #8
 8007a18:	697a      	ldr	r2, [r7, #20]
 8007a1a:	4313      	orrs	r3, r2
 8007a1c:	617b      	str	r3, [r7, #20]
    /* Reset the Output N State */
    tmpccer &= ~TIM_CCER_CC3NE;
 8007a1e:	697b      	ldr	r3, [r7, #20]
 8007a20:	f423 6380 	bic.w	r3, r3, #1024	@ 0x400
 8007a24:	617b      	str	r3, [r7, #20]
  }

  if (IS_TIM_BREAK_INSTANCE(TIMx))
 8007a26:	687b      	ldr	r3, [r7, #4]
 8007a28:	4a16      	ldr	r2, [pc, #88]	@ (8007a84 <TIM_OC3_SetConfig+0xe0>)
 8007a2a:	4293      	cmp	r3, r2
 8007a2c:	d003      	beq.n	8007a36 <TIM_OC3_SetConfig+0x92>
 8007a2e:	687b      	ldr	r3, [r7, #4]
 8007a30:	4a15      	ldr	r2, [pc, #84]	@ (8007a88 <TIM_OC3_SetConfig+0xe4>)
 8007a32:	4293      	cmp	r3, r2
 8007a34:	d113      	bne.n	8007a5e <TIM_OC3_SetConfig+0xba>
    /* Check parameters */
    assert_param(IS_TIM_OCNIDLE_STATE(OC_Config->OCNIdleState));
    assert_param(IS_TIM_OCIDLE_STATE(OC_Config->OCIdleState));

    /* Reset the Output Compare and Output Compare N IDLE State */
    tmpcr2 &= ~TIM_CR2_OIS3;
 8007a36:	693b      	ldr	r3, [r7, #16]
 8007a38:	f423 5380 	bic.w	r3, r3, #4096	@ 0x1000
 8007a3c:	613b      	str	r3, [r7, #16]
    tmpcr2 &= ~TIM_CR2_OIS3N;
 8007a3e:	693b      	ldr	r3, [r7, #16]
 8007a40:	f423 5300 	bic.w	r3, r3, #8192	@ 0x2000
 8007a44:	613b      	str	r3, [r7, #16]
    /* Set the Output Idle state */
    tmpcr2 |= (OC_Config->OCIdleState << 4U);
 8007a46:	683b      	ldr	r3, [r7, #0]
 8007a48:	695b      	ldr	r3, [r3, #20]
 8007a4a:	011b      	lsls	r3, r3, #4
 8007a4c:	693a      	ldr	r2, [r7, #16]
 8007a4e:	4313      	orrs	r3, r2
 8007a50:	613b      	str	r3, [r7, #16]
    /* Set the Output N Idle state */
    tmpcr2 |= (OC_Config->OCNIdleState << 4U);
 8007a52:	683b      	ldr	r3, [r7, #0]
 8007a54:	699b      	ldr	r3, [r3, #24]
 8007a56:	011b      	lsls	r3, r3, #4
 8007a58:	693a      	ldr	r2, [r7, #16]
 8007a5a:	4313      	orrs	r3, r2
 8007a5c:	613b      	str	r3, [r7, #16]
  }

  /* Write to TIMx CR2 */
  TIMx->CR2 = tmpcr2;
 8007a5e:	687b      	ldr	r3, [r7, #4]
 8007a60:	693a      	ldr	r2, [r7, #16]
 8007a62:	605a      	str	r2, [r3, #4]

  /* Write to TIMx CCMR2 */
  TIMx->CCMR2 = tmpccmrx;
 8007a64:	687b      	ldr	r3, [r7, #4]
 8007a66:	68fa      	ldr	r2, [r7, #12]
 8007a68:	61da      	str	r2, [r3, #28]

  /* Set the Capture Compare Register value */
  TIMx->CCR3 = OC_Config->Pulse;
 8007a6a:	683b      	ldr	r3, [r7, #0]
 8007a6c:	685a      	ldr	r2, [r3, #4]
 8007a6e:	687b      	ldr	r3, [r7, #4]
 8007a70:	63da      	str	r2, [r3, #60]	@ 0x3c

  /* Write to TIMx CCER */
  TIMx->CCER = tmpccer;
 8007a72:	687b      	ldr	r3, [r7, #4]
 8007a74:	697a      	ldr	r2, [r7, #20]
 8007a76:	621a      	str	r2, [r3, #32]
}
 8007a78:	bf00      	nop
 8007a7a:	371c      	adds	r7, #28
 8007a7c:	46bd      	mov	sp, r7
 8007a7e:	f85d 7b04 	ldr.w	r7, [sp], #4
 8007a82:	4770      	bx	lr
 8007a84:	40010000 	.word	0x40010000
 8007a88:	40010400 	.word	0x40010400

08007a8c <TIM_OC4_SetConfig>:
  * @param  TIMx to select the TIM peripheral
  * @param  OC_Config The output configuration structure
  * @retval None
  */
static void TIM_OC4_SetConfig(TIM_TypeDef *TIMx, const TIM_OC_InitTypeDef *OC_Config)
{
 8007a8c:	b480      	push	{r7}
 8007a8e:	b087      	sub	sp, #28
 8007a90:	af00      	add	r7, sp, #0
 8007a92:	6078      	str	r0, [r7, #4]
 8007a94:	6039      	str	r1, [r7, #0]
  uint32_t tmpccmrx;
  uint32_t tmpccer;
  uint32_t tmpcr2;

  /* Get the TIMx CCER register value */
  tmpccer = TIMx->CCER;
 8007a96:	687b      	ldr	r3, [r7, #4]
 8007a98:	6a1b      	ldr	r3, [r3, #32]
 8007a9a:	613b      	str	r3, [r7, #16]

  /* Disable the Channel 4: Reset the CC4E Bit */
  TIMx->CCER &= ~TIM_CCER_CC4E;
 8007a9c:	687b      	ldr	r3, [r7, #4]
 8007a9e:	6a1b      	ldr	r3, [r3, #32]
 8007aa0:	f423 5280 	bic.w	r2, r3, #4096	@ 0x1000
 8007aa4:	687b      	ldr	r3, [r7, #4]
 8007aa6:	621a      	str	r2, [r3, #32]

  /* Get the TIMx CR2 register value */
  tmpcr2 =  TIMx->CR2;
 8007aa8:	687b      	ldr	r3, [r7, #4]
 8007aaa:	685b      	ldr	r3, [r3, #4]
 8007aac:	617b      	str	r3, [r7, #20]

  /* Get the TIMx CCMR2 register value */
  tmpccmrx = TIMx->CCMR2;
 8007aae:	687b      	ldr	r3, [r7, #4]
 8007ab0:	69db      	ldr	r3, [r3, #28]
 8007ab2:	60fb      	str	r3, [r7, #12]

  /* Reset the Output Compare mode and Capture/Compare selection Bits */
  tmpccmrx &= ~TIM_CCMR2_OC4M;
 8007ab4:	68fb      	ldr	r3, [r7, #12]
 8007ab6:	f423 43e0 	bic.w	r3, r3, #28672	@ 0x7000
 8007aba:	60fb      	str	r3, [r7, #12]
  tmpccmrx &= ~TIM_CCMR2_CC4S;
 8007abc:	68fb      	ldr	r3, [r7, #12]
 8007abe:	f423 7340 	bic.w	r3, r3, #768	@ 0x300
 8007ac2:	60fb      	str	r3, [r7, #12]

  /* Select the Output Compare Mode */
  tmpccmrx |= (OC_Config->OCMode << 8U);
 8007ac4:	683b      	ldr	r3, [r7, #0]
 8007ac6:	681b      	ldr	r3, [r3, #0]
 8007ac8:	021b      	lsls	r3, r3, #8
 8007aca:	68fa      	ldr	r2, [r7, #12]
 8007acc:	4313      	orrs	r3, r2
 8007ace:	60fb      	str	r3, [r7, #12]

  /* Reset the Output Polarity level */
  tmpccer &= ~TIM_CCER_CC4P;
 8007ad0:	693b      	ldr	r3, [r7, #16]
 8007ad2:	f423 5300 	bic.w	r3, r3, #8192	@ 0x2000
 8007ad6:	613b      	str	r3, [r7, #16]
  /* Set the Output Compare Polarity */
  tmpccer |= (OC_Config->OCPolarity << 12U);
 8007ad8:	683b      	ldr	r3, [r7, #0]
 8007ada:	689b      	ldr	r3, [r3, #8]
 8007adc:	031b      	lsls	r3, r3, #12
 8007ade:	693a      	ldr	r2, [r7, #16]
 8007ae0:	4313      	orrs	r3, r2
 8007ae2:	613b      	str	r3, [r7, #16]

  if (IS_TIM_BREAK_INSTANCE(TIMx))
 8007ae4:	687b      	ldr	r3, [r7, #4]
 8007ae6:	4a12      	ldr	r2, [pc, #72]	@ (8007b30 <TIM_OC4_SetConfig+0xa4>)
 8007ae8:	4293      	cmp	r3, r2
 8007aea:	d003      	beq.n	8007af4 <TIM_OC4_SetConfig+0x68>
 8007aec:	687b      	ldr	r3, [r7, #4]
 8007aee:	4a11      	ldr	r2, [pc, #68]	@ (8007b34 <TIM_OC4_SetConfig+0xa8>)
 8007af0:	4293      	cmp	r3, r2
 8007af2:	d109      	bne.n	8007b08 <TIM_OC4_SetConfig+0x7c>
  {
    /* Check parameters */
    assert_param(IS_TIM_OCIDLE_STATE(OC_Config->OCIdleState));

    /* Reset the Output Compare IDLE State */
    tmpcr2 &= ~TIM_CR2_OIS4;
 8007af4:	697b      	ldr	r3, [r7, #20]
 8007af6:	f423 4380 	bic.w	r3, r3, #16384	@ 0x4000
 8007afa:	617b      	str	r3, [r7, #20]

    /* Set the Output Idle state */
    tmpcr2 |= (OC_Config->OCIdleState << 6U);
 8007afc:	683b      	ldr	r3, [r7, #0]
 8007afe:	695b      	ldr	r3, [r3, #20]
 8007b00:	019b      	lsls	r3, r3, #6
 8007b02:	697a      	ldr	r2, [r7, #20]
 8007b04:	4313      	orrs	r3, r2
 8007b06:	617b      	str	r3, [r7, #20]
  }

  /* Write to TIMx CR2 */
  TIMx->CR2 = tmpcr2;
 8007b08:	687b      	ldr	r3, [r7, #4]
 8007b0a:	697a      	ldr	r2, [r7, #20]
 8007b0c:	605a      	str	r2, [r3, #4]

  /* Write to TIMx CCMR2 */
  TIMx->CCMR2 = tmpccmrx;
 8007b0e:	687b      	ldr	r3, [r7, #4]
 8007b10:	68fa      	ldr	r2, [r7, #12]
 8007b12:	61da      	str	r2, [r3, #28]

  /* Set the Capture Compare Register value */
  TIMx->CCR4 = OC_Config->Pulse;
 8007b14:	683b      	ldr	r3, [r7, #0]
 8007b16:	685a      	ldr	r2, [r3, #4]
 8007b18:	687b      	ldr	r3, [r7, #4]
 8007b1a:	641a      	str	r2, [r3, #64]	@ 0x40

  /* Write to TIMx CCER */
  TIMx->CCER = tmpccer;
 8007b1c:	687b      	ldr	r3, [r7, #4]
 8007b1e:	693a      	ldr	r2, [r7, #16]
 8007b20:	621a      	str	r2, [r3, #32]
}
 8007b22:	bf00      	nop
 8007b24:	371c      	adds	r7, #28
 8007b26:	46bd      	mov	sp, r7
 8007b28:	f85d 7b04 	ldr.w	r7, [sp], #4
 8007b2c:	4770      	bx	lr
 8007b2e:	bf00      	nop
 8007b30:	40010000 	.word	0x40010000
 8007b34:	40010400 	.word	0x40010400

08007b38 <TIM_TI1_ConfigInputStage>:
  * @param  TIM_ICFilter Specifies the Input Capture Filter.
  *          This parameter must be a value between 0x00 and 0x0F.
  * @retval None
  */
static void TIM_TI1_ConfigInputStage(TIM_TypeDef *TIMx, uint32_t TIM_ICPolarity, uint32_t TIM_ICFilter)
{
 8007b38:	b480      	push	{r7}
 8007b3a:	b087      	sub	sp, #28
 8007b3c:	af00      	add	r7, sp, #0
 8007b3e:	60f8      	str	r0, [r7, #12]
 8007b40:	60b9      	str	r1, [r7, #8]
 8007b42:	607a      	str	r2, [r7, #4]
  uint32_t tmpccmr1;
  uint32_t tmpccer;

  /* Disable the Channel 1: Reset the CC1E Bit */
  tmpccer = TIMx->CCER;
 8007b44:	68fb      	ldr	r3, [r7, #12]
 8007b46:	6a1b      	ldr	r3, [r3, #32]
 8007b48:	617b      	str	r3, [r7, #20]
  TIMx->CCER &= ~TIM_CCER_CC1E;
 8007b4a:	68fb      	ldr	r3, [r7, #12]
 8007b4c:	6a1b      	ldr	r3, [r3, #32]
 8007b4e:	f023 0201 	bic.w	r2, r3, #1
 8007b52:	68fb      	ldr	r3, [r7, #12]
 8007b54:	621a      	str	r2, [r3, #32]
  tmpccmr1 = TIMx->CCMR1;
 8007b56:	68fb      	ldr	r3, [r7, #12]
 8007b58:	699b      	ldr	r3, [r3, #24]
 8007b5a:	613b      	str	r3, [r7, #16]

  /* Set the filter */
  tmpccmr1 &= ~TIM_CCMR1_IC1F;
 8007b5c:	693b      	ldr	r3, [r7, #16]
 8007b5e:	f023 03f0 	bic.w	r3, r3, #240	@ 0xf0
 8007b62:	613b      	str	r3, [r7, #16]
  tmpccmr1 |= (TIM_ICFilter << 4U);
 8007b64:	687b      	ldr	r3, [r7, #4]
 8007b66:	011b      	lsls	r3, r3, #4
 8007b68:	693a      	ldr	r2, [r7, #16]
 8007b6a:	4313      	orrs	r3, r2
 8007b6c:	613b      	str	r3, [r7, #16]

  /* Select the Polarity and set the CC1E Bit */
  tmpccer &= ~(TIM_CCER_CC1P | TIM_CCER_CC1NP);
 8007b6e:	697b      	ldr	r3, [r7, #20]
 8007b70:	f023 030a 	bic.w	r3, r3, #10
 8007b74:	617b      	str	r3, [r7, #20]
  tmpccer |= TIM_ICPolarity;
 8007b76:	697a      	ldr	r2, [r7, #20]
 8007b78:	68bb      	ldr	r3, [r7, #8]
 8007b7a:	4313      	orrs	r3, r2
 8007b7c:	617b      	str	r3, [r7, #20]

  /* Write to TIMx CCMR1 and CCER registers */
  TIMx->CCMR1 = tmpccmr1;
 8007b7e:	68fb      	ldr	r3, [r7, #12]
 8007b80:	693a      	ldr	r2, [r7, #16]
 8007b82:	619a      	str	r2, [r3, #24]
  TIMx->CCER = tmpccer;
 8007b84:	68fb      	ldr	r3, [r7, #12]
 8007b86:	697a      	ldr	r2, [r7, #20]
 8007b88:	621a      	str	r2, [r3, #32]
}
 8007b8a:	bf00      	nop
 8007b8c:	371c      	adds	r7, #28
 8007b8e:	46bd      	mov	sp, r7
 8007b90:	f85d 7b04 	ldr.w	r7, [sp], #4
 8007b94:	4770      	bx	lr

08007b96 <TIM_TI2_ConfigInputStage>:
  * @param  TIM_ICFilter Specifies the Input Capture Filter.
  *          This parameter must be a value between 0x00 and 0x0F.
  * @retval None
  */
static void TIM_TI2_ConfigInputStage(TIM_TypeDef *TIMx, uint32_t TIM_ICPolarity, uint32_t TIM_ICFilter)
{
 8007b96:	b480      	push	{r7}
 8007b98:	b087      	sub	sp, #28
 8007b9a:	af00      	add	r7, sp, #0
 8007b9c:	60f8      	str	r0, [r7, #12]
 8007b9e:	60b9      	str	r1, [r7, #8]
 8007ba0:	607a      	str	r2, [r7, #4]
  uint32_t tmpccmr1;
  uint32_t tmpccer;

  /* Disable the Channel 2: Reset the CC2E Bit */
  tmpccer = TIMx->CCER;
 8007ba2:	68fb      	ldr	r3, [r7, #12]
 8007ba4:	6a1b      	ldr	r3, [r3, #32]
 8007ba6:	617b      	str	r3, [r7, #20]
  TIMx->CCER &= ~TIM_CCER_CC2E;
 8007ba8:	68fb      	ldr	r3, [r7, #12]
 8007baa:	6a1b      	ldr	r3, [r3, #32]
 8007bac:	f023 0210 	bic.w	r2, r3, #16
 8007bb0:	68fb      	ldr	r3, [r7, #12]
 8007bb2:	621a      	str	r2, [r3, #32]
  tmpccmr1 = TIMx->CCMR1;
 8007bb4:	68fb      	ldr	r3, [r7, #12]
 8007bb6:	699b      	ldr	r3, [r3, #24]
 8007bb8:	613b      	str	r3, [r7, #16]

  /* Set the filter */
  tmpccmr1 &= ~TIM_CCMR1_IC2F;
 8007bba:	693b      	ldr	r3, [r7, #16]
 8007bbc:	f423 4370 	bic.w	r3, r3, #61440	@ 0xf000
 8007bc0:	613b      	str	r3, [r7, #16]
  tmpccmr1 |= (TIM_ICFilter << 12U);
 8007bc2:	687b      	ldr	r3, [r7, #4]
 8007bc4:	031b      	lsls	r3, r3, #12
 8007bc6:	693a      	ldr	r2, [r7, #16]
 8007bc8:	4313      	orrs	r3, r2
 8007bca:	613b      	str	r3, [r7, #16]

  /* Select the Polarity and set the CC2E Bit */
  tmpccer &= ~(TIM_CCER_CC2P | TIM_CCER_CC2NP);
 8007bcc:	697b      	ldr	r3, [r7, #20]
 8007bce:	f023 03a0 	bic.w	r3, r3, #160	@ 0xa0
 8007bd2:	617b      	str	r3, [r7, #20]
  tmpccer |= (TIM_ICPolarity << 4U);
 8007bd4:	68bb      	ldr	r3, [r7, #8]
 8007bd6:	011b      	lsls	r3, r3, #4
 8007bd8:	697a      	ldr	r2, [r7, #20]
 8007bda:	4313      	orrs	r3, r2
 8007bdc:	617b      	str	r3, [r7, #20]

  /* Write to TIMx CCMR1 and CCER registers */
  TIMx->CCMR1 = tmpccmr1 ;
 8007bde:	68fb      	ldr	r3, [r7, #12]
 8007be0:	693a      	ldr	r2, [r7, #16]
 8007be2:	619a      	str	r2, [r3, #24]
  TIMx->CCER = tmpccer;
 8007be4:	68fb      	ldr	r3, [r7, #12]
 8007be6:	697a      	ldr	r2, [r7, #20]
 8007be8:	621a      	str	r2, [r3, #32]
}
 8007bea:	bf00      	nop
 8007bec:	371c      	adds	r7, #28
 8007bee:	46bd      	mov	sp, r7
 8007bf0:	f85d 7b04 	ldr.w	r7, [sp], #4
 8007bf4:	4770      	bx	lr

08007bf6 <TIM_ITRx_SetConfig>:
  *            @arg TIM_TS_TI2FP2: Filtered Timer Input 2
  *            @arg TIM_TS_ETRF: External Trigger input
  * @retval None
  */
static void TIM_ITRx_SetConfig(TIM_TypeDef *TIMx, uint32_t InputTriggerSource)
{
 8007bf6:	b480      	push	{r7}
 8007bf8:	b085      	sub	sp, #20
 8007bfa:	af00      	add	r7, sp, #0
 8007bfc:	6078      	str	r0, [r7, #4]
 8007bfe:	6039      	str	r1, [r7, #0]
  uint32_t tmpsmcr;

  /* Get the TIMx SMCR register value */
  tmpsmcr = TIMx->SMCR;
 8007c00:	687b      	ldr	r3, [r7, #4]
 8007c02:	689b      	ldr	r3, [r3, #8]
 8007c04:	60fb      	str	r3, [r7, #12]
  /* Reset the TS Bits */
  tmpsmcr &= ~TIM_SMCR_TS;
 8007c06:	68fb      	ldr	r3, [r7, #12]
 8007c08:	f023 0370 	bic.w	r3, r3, #112	@ 0x70
 8007c0c:	60fb      	str	r3, [r7, #12]
  /* Set the Input Trigger source and the slave mode*/
  tmpsmcr |= (InputTriggerSource | TIM_SLAVEMODE_EXTERNAL1);
 8007c0e:	683a      	ldr	r2, [r7, #0]
 8007c10:	68fb      	ldr	r3, [r7, #12]
 8007c12:	4313      	orrs	r3, r2
 8007c14:	f043 0307 	orr.w	r3, r3, #7
 8007c18:	60fb      	str	r3, [r7, #12]
  /* Write to TIMx SMCR */
  TIMx->SMCR = tmpsmcr;
 8007c1a:	687b      	ldr	r3, [r7, #4]
 8007c1c:	68fa      	ldr	r2, [r7, #12]
 8007c1e:	609a      	str	r2, [r3, #8]
}
 8007c20:	bf00      	nop
 8007c22:	3714      	adds	r7, #20
 8007c24:	46bd      	mov	sp, r7
 8007c26:	f85d 7b04 	ldr.w	r7, [sp], #4
 8007c2a:	4770      	bx	lr

08007c2c <TIM_ETR_SetConfig>:
  *          This parameter must be a value between 0x00 and 0x0F
  * @retval None
  */
void TIM_ETR_SetConfig(TIM_TypeDef *TIMx, uint32_t TIM_ExtTRGPrescaler,
                       uint32_t TIM_ExtTRGPolarity, uint32_t ExtTRGFilter)
{
 8007c2c:	b480      	push	{r7}
 8007c2e:	b087      	sub	sp, #28
 8007c30:	af00      	add	r7, sp, #0
 8007c32:	60f8      	str	r0, [r7, #12]
 8007c34:	60b9      	str	r1, [r7, #8]
 8007c36:	607a      	str	r2, [r7, #4]
 8007c38:	603b      	str	r3, [r7, #0]
  uint32_t tmpsmcr;

  tmpsmcr = TIMx->SMCR;
 8007c3a:	68fb      	ldr	r3, [r7, #12]
 8007c3c:	689b      	ldr	r3, [r3, #8]
 8007c3e:	617b      	str	r3, [r7, #20]

  /* Reset the ETR Bits */
  tmpsmcr &= ~(TIM_SMCR_ETF | TIM_SMCR_ETPS | TIM_SMCR_ECE | TIM_SMCR_ETP);
 8007c40:	697b      	ldr	r3, [r7, #20]
 8007c42:	f423 437f 	bic.w	r3, r3, #65280	@ 0xff00
 8007c46:	617b      	str	r3, [r7, #20]

  /* Set the Prescaler, the Filter value and the Polarity */
  tmpsmcr |= (uint32_t)(TIM_ExtTRGPrescaler | (TIM_ExtTRGPolarity | (ExtTRGFilter << 8U)));
 8007c48:	683b      	ldr	r3, [r7, #0]
 8007c4a:	021a      	lsls	r2, r3, #8
 8007c4c:	687b      	ldr	r3, [r7, #4]
 8007c4e:	431a      	orrs	r2, r3
 8007c50:	68bb      	ldr	r3, [r7, #8]
 8007c52:	4313      	orrs	r3, r2
 8007c54:	697a      	ldr	r2, [r7, #20]
 8007c56:	4313      	orrs	r3, r2
 8007c58:	617b      	str	r3, [r7, #20]

  /* Write to TIMx SMCR */
  TIMx->SMCR = tmpsmcr;
 8007c5a:	68fb      	ldr	r3, [r7, #12]
 8007c5c:	697a      	ldr	r2, [r7, #20]
 8007c5e:	609a      	str	r2, [r3, #8]
}
 8007c60:	bf00      	nop
 8007c62:	371c      	adds	r7, #28
 8007c64:	46bd      	mov	sp, r7
 8007c66:	f85d 7b04 	ldr.w	r7, [sp], #4
 8007c6a:	4770      	bx	lr

08007c6c <TIM_CCxChannelCmd>:
  * @param  ChannelState specifies the TIM Channel CCxE bit new state.
  *          This parameter can be: TIM_CCx_ENABLE or TIM_CCx_DISABLE.
  * @retval None
  */
void TIM_CCxChannelCmd(TIM_TypeDef *TIMx, uint32_t Channel, uint32_t ChannelState)
{
 8007c6c:	b480      	push	{r7}
 8007c6e:	b087      	sub	sp, #28
 8007c70:	af00      	add	r7, sp, #0
 8007c72:	60f8      	str	r0, [r7, #12]
 8007c74:	60b9      	str	r1, [r7, #8]
 8007c76:	607a      	str	r2, [r7, #4]

  /* Check the parameters */
  assert_param(IS_TIM_CC1_INSTANCE(TIMx));
  assert_param(IS_TIM_CHANNELS(Channel));

  tmp = TIM_CCER_CC1E << (Channel & 0x1FU); /* 0x1FU = 31 bits max shift */
 8007c78:	68bb      	ldr	r3, [r7, #8]
 8007c7a:	f003 031f 	and.w	r3, r3, #31
 8007c7e:	2201      	movs	r2, #1
 8007c80:	fa02 f303 	lsl.w	r3, r2, r3
 8007c84:	617b      	str	r3, [r7, #20]

  /* Reset the CCxE Bit */
  TIMx->CCER &= ~tmp;
 8007c86:	68fb      	ldr	r3, [r7, #12]
 8007c88:	6a1a      	ldr	r2, [r3, #32]
 8007c8a:	697b      	ldr	r3, [r7, #20]
 8007c8c:	43db      	mvns	r3, r3
 8007c8e:	401a      	ands	r2, r3
 8007c90:	68fb      	ldr	r3, [r7, #12]
 8007c92:	621a      	str	r2, [r3, #32]

  /* Set or reset the CCxE Bit */
  TIMx->CCER |= (uint32_t)(ChannelState << (Channel & 0x1FU)); /* 0x1FU = 31 bits max shift */
 8007c94:	68fb      	ldr	r3, [r7, #12]
 8007c96:	6a1a      	ldr	r2, [r3, #32]
 8007c98:	68bb      	ldr	r3, [r7, #8]
 8007c9a:	f003 031f 	and.w	r3, r3, #31
 8007c9e:	6879      	ldr	r1, [r7, #4]
 8007ca0:	fa01 f303 	lsl.w	r3, r1, r3
 8007ca4:	431a      	orrs	r2, r3
 8007ca6:	68fb      	ldr	r3, [r7, #12]
 8007ca8:	621a      	str	r2, [r3, #32]
}
 8007caa:	bf00      	nop
 8007cac:	371c      	adds	r7, #28
 8007cae:	46bd      	mov	sp, r7
 8007cb0:	f85d 7b04 	ldr.w	r7, [sp], #4
 8007cb4:	4770      	bx	lr
	...

08007cb8 <HAL_TIMEx_MasterConfigSynchronization>:
  *         mode.
  * @retval HAL status
  */
HAL_StatusTypeDef HAL_TIMEx_MasterConfigSynchronization(TIM_HandleTypeDef *htim,
                                                        const TIM_MasterConfigTypeDef *sMasterConfig)
{
 8007cb8:	b480      	push	{r7}
 8007cba:	b085      	sub	sp, #20
 8007cbc:	af00      	add	r7, sp, #0
 8007cbe:	6078      	str	r0, [r7, #4]
 8007cc0:	6039      	str	r1, [r7, #0]
  assert_param(IS_TIM_MASTER_INSTANCE(htim->Instance));
  assert_param(IS_TIM_TRGO_SOURCE(sMasterConfig->MasterOutputTrigger));
  assert_param(IS_TIM_MSM_STATE(sMasterConfig->MasterSlaveMode));

  /* Check input state */
  __HAL_LOCK(htim);
 8007cc2:	687b      	ldr	r3, [r7, #4]
 8007cc4:	f893 303c 	ldrb.w	r3, [r3, #60]	@ 0x3c
 8007cc8:	2b01      	cmp	r3, #1
 8007cca:	d101      	bne.n	8007cd0 <HAL_TIMEx_MasterConfigSynchronization+0x18>
 8007ccc:	2302      	movs	r3, #2
 8007cce:	e05a      	b.n	8007d86 <HAL_TIMEx_MasterConfigSynchronization+0xce>
 8007cd0:	687b      	ldr	r3, [r7, #4]
 8007cd2:	2201      	movs	r2, #1
 8007cd4:	f883 203c 	strb.w	r2, [r3, #60]	@ 0x3c

  /* Change the handler state */
  htim->State = HAL_TIM_STATE_BUSY;
 8007cd8:	687b      	ldr	r3, [r7, #4]
 8007cda:	2202      	movs	r2, #2
 8007cdc:	f883 203d 	strb.w	r2, [r3, #61]	@ 0x3d

  /* Get the TIMx CR2 register value */
  tmpcr2 = htim->Instance->CR2;
 8007ce0:	687b      	ldr	r3, [r7, #4]
 8007ce2:	681b      	ldr	r3, [r3, #0]
 8007ce4:	685b      	ldr	r3, [r3, #4]
 8007ce6:	60fb      	str	r3, [r7, #12]

  /* Get the TIMx SMCR register value */
  tmpsmcr = htim->Instance->SMCR;
 8007ce8:	687b      	ldr	r3, [r7, #4]
 8007cea:	681b      	ldr	r3, [r3, #0]
 8007cec:	689b      	ldr	r3, [r3, #8]
 8007cee:	60bb      	str	r3, [r7, #8]

  /* Reset the MMS Bits */
  tmpcr2 &= ~TIM_CR2_MMS;
 8007cf0:	68fb      	ldr	r3, [r7, #12]
 8007cf2:	f023 0370 	bic.w	r3, r3, #112	@ 0x70
 8007cf6:	60fb      	str	r3, [r7, #12]
  /* Select the TRGO source */
  tmpcr2 |=  sMasterConfig->MasterOutputTrigger;
 8007cf8:	683b      	ldr	r3, [r7, #0]
 8007cfa:	681b      	ldr	r3, [r3, #0]
 8007cfc:	68fa      	ldr	r2, [r7, #12]
 8007cfe:	4313      	orrs	r3, r2
 8007d00:	60fb      	str	r3, [r7, #12]

  /* Update TIMx CR2 */
  htim->Instance->CR2 = tmpcr2;
 8007d02:	687b      	ldr	r3, [r7, #4]
 8007d04:	681b      	ldr	r3, [r3, #0]
 8007d06:	68fa      	ldr	r2, [r7, #12]
 8007d08:	605a      	str	r2, [r3, #4]

  if (IS_TIM_SLAVE_INSTANCE(htim->Instance))
 8007d0a:	687b      	ldr	r3, [r7, #4]
 8007d0c:	681b      	ldr	r3, [r3, #0]
 8007d0e:	4a21      	ldr	r2, [pc, #132]	@ (8007d94 <HAL_TIMEx_MasterConfigSynchronization+0xdc>)
 8007d10:	4293      	cmp	r3, r2
 8007d12:	d022      	beq.n	8007d5a <HAL_TIMEx_MasterConfigSynchronization+0xa2>
 8007d14:	687b      	ldr	r3, [r7, #4]
 8007d16:	681b      	ldr	r3, [r3, #0]
 8007d18:	f1b3 4f80 	cmp.w	r3, #1073741824	@ 0x40000000
 8007d1c:	d01d      	beq.n	8007d5a <HAL_TIMEx_MasterConfigSynchronization+0xa2>
 8007d1e:	687b      	ldr	r3, [r7, #4]
 8007d20:	681b      	ldr	r3, [r3, #0]
 8007d22:	4a1d      	ldr	r2, [pc, #116]	@ (8007d98 <HAL_TIMEx_MasterConfigSynchronization+0xe0>)
 8007d24:	4293      	cmp	r3, r2
 8007d26:	d018      	beq.n	8007d5a <HAL_TIMEx_MasterConfigSynchronization+0xa2>
 8007d28:	687b      	ldr	r3, [r7, #4]
 8007d2a:	681b      	ldr	r3, [r3, #0]
 8007d2c:	4a1b      	ldr	r2, [pc, #108]	@ (8007d9c <HAL_TIMEx_MasterConfigSynchronization+0xe4>)
 8007d2e:	4293      	cmp	r3, r2
 8007d30:	d013      	beq.n	8007d5a <HAL_TIMEx_MasterConfigSynchronization+0xa2>
 8007d32:	687b      	ldr	r3, [r7, #4]
 8007d34:	681b      	ldr	r3, [r3, #0]
 8007d36:	4a1a      	ldr	r2, [pc, #104]	@ (8007da0 <HAL_TIMEx_MasterConfigSynchronization+0xe8>)
 8007d38:	4293      	cmp	r3, r2
 8007d3a:	d00e      	beq.n	8007d5a <HAL_TIMEx_MasterConfigSynchronization+0xa2>
 8007d3c:	687b      	ldr	r3, [r7, #4]
 8007d3e:	681b      	ldr	r3, [r3, #0]
 8007d40:	4a18      	ldr	r2, [pc, #96]	@ (8007da4 <HAL_TIMEx_MasterConfigSynchronization+0xec>)
 8007d42:	4293      	cmp	r3, r2
 8007d44:	d009      	beq.n	8007d5a <HAL_TIMEx_MasterConfigSynchronization+0xa2>
 8007d46:	687b      	ldr	r3, [r7, #4]
 8007d48:	681b      	ldr	r3, [r3, #0]
 8007d4a:	4a17      	ldr	r2, [pc, #92]	@ (8007da8 <HAL_TIMEx_MasterConfigSynchronization+0xf0>)
 8007d4c:	4293      	cmp	r3, r2
 8007d4e:	d004      	beq.n	8007d5a <HAL_TIMEx_MasterConfigSynchronization+0xa2>
 8007d50:	687b      	ldr	r3, [r7, #4]
 8007d52:	681b      	ldr	r3, [r3, #0]
 8007d54:	4a15      	ldr	r2, [pc, #84]	@ (8007dac <HAL_TIMEx_MasterConfigSynchronization+0xf4>)
 8007d56:	4293      	cmp	r3, r2
 8007d58:	d10c      	bne.n	8007d74 <HAL_TIMEx_MasterConfigSynchronization+0xbc>
  {
    /* Reset the MSM Bit */
    tmpsmcr &= ~TIM_SMCR_MSM;
 8007d5a:	68bb      	ldr	r3, [r7, #8]
 8007d5c:	f023 0380 	bic.w	r3, r3, #128	@ 0x80
 8007d60:	60bb      	str	r3, [r7, #8]
    /* Set master mode */
    tmpsmcr |= sMasterConfig->MasterSlaveMode;
 8007d62:	683b      	ldr	r3, [r7, #0]
 8007d64:	685b      	ldr	r3, [r3, #4]
 8007d66:	68ba      	ldr	r2, [r7, #8]
 8007d68:	4313      	orrs	r3, r2
 8007d6a:	60bb      	str	r3, [r7, #8]

    /* Update TIMx SMCR */
    htim->Instance->SMCR = tmpsmcr;
 8007d6c:	687b      	ldr	r3, [r7, #4]
 8007d6e:	681b      	ldr	r3, [r3, #0]
 8007d70:	68ba      	ldr	r2, [r7, #8]
 8007d72:	609a      	str	r2, [r3, #8]
  }

  /* Change the htim state */
  htim->State = HAL_TIM_STATE_READY;
 8007d74:	687b      	ldr	r3, [r7, #4]
 8007d76:	2201      	movs	r2, #1
 8007d78:	f883 203d 	strb.w	r2, [r3, #61]	@ 0x3d

  __HAL_UNLOCK(htim);
 8007d7c:	687b      	ldr	r3, [r7, #4]
 8007d7e:	2200      	movs	r2, #0
 8007d80:	f883 203c 	strb.w	r2, [r3, #60]	@ 0x3c

  return HAL_OK;
 8007d84:	2300      	movs	r3, #0
}
 8007d86:	4618      	mov	r0, r3
 8007d88:	3714      	adds	r7, #20
 8007d8a:	46bd      	mov	sp, r7
 8007d8c:	f85d 7b04 	ldr.w	r7, [sp], #4
 8007d90:	4770      	bx	lr
 8007d92:	bf00      	nop
 8007d94:	40010000 	.word	0x40010000
 8007d98:	40000400 	.word	0x40000400
 8007d9c:	40000800 	.word	0x40000800
 8007da0:	40000c00 	.word	0x40000c00
 8007da4:	40010400 	.word	0x40010400
 8007da8:	40014000 	.word	0x40014000
 8007dac:	40001800 	.word	0x40001800

08007db0 <HAL_TIMEx_CommutCallback>:
  * @brief  Commutation callback in non-blocking mode
  * @param  htim TIM handle
  * @retval None
  */
__weak void HAL_TIMEx_CommutCallback(TIM_HandleTypeDef *htim)
{
 8007db0:	b480      	push	{r7}
 8007db2:	b083      	sub	sp, #12
 8007db4:	af00      	add	r7, sp, #0
 8007db6:	6078      	str	r0, [r7, #4]
  UNUSED(htim);

  /* NOTE : This function should not be modified, when the callback is needed,
            the HAL_TIMEx_CommutCallback could be implemented in the user file
   */
}
 8007db8:	bf00      	nop
 8007dba:	370c      	adds	r7, #12
 8007dbc:	46bd      	mov	sp, r7
 8007dbe:	f85d 7b04 	ldr.w	r7, [sp], #4
 8007dc2:	4770      	bx	lr

08007dc4 <HAL_TIMEx_BreakCallback>:
  * @brief  Break detection callback in non-blocking mode
  * @param  htim TIM handle
  * @retval None
  */
__weak void HAL_TIMEx_BreakCallback(TIM_HandleTypeDef *htim)
{
 8007dc4:	b480      	push	{r7}
 8007dc6:	b083      	sub	sp, #12
 8007dc8:	af00      	add	r7, sp, #0
 8007dca:	6078      	str	r0, [r7, #4]
  UNUSED(htim);

  /* NOTE : This function should not be modified, when the callback is needed,
            the HAL_TIMEx_BreakCallback could be implemented in the user file
   */
}
 8007dcc:	bf00      	nop
 8007dce:	370c      	adds	r7, #12
 8007dd0:	46bd      	mov	sp, r7
 8007dd2:	f85d 7b04 	ldr.w	r7, [sp], #4
 8007dd6:	4770      	bx	lr

08007dd8 <MX_TouchGFX_Init>:
 8007dd8:	b580      	push	{r7, lr}
 8007dda:	af00      	add	r7, sp, #0
 8007ddc:	f007 fbd6 	bl	800f58c <touchgfx_components_init>
 8007de0:	f007 fbaa 	bl	800f538 <touchgfx_init>
 8007de4:	bf00      	nop
 8007de6:	bd80      	pop	{r7, pc}

08007de8 <MX_TouchGFX_Process>:
 8007de8:	b580      	push	{r7, lr}
 8007dea:	af00      	add	r7, sp, #0
 8007dec:	f007 fbd6 	bl	800f59c <touchgfx_taskEntry>
 8007df0:	bf00      	nop
 8007df2:	bd80      	pop	{r7, pc}

08007df4 <_ZN8touchgfx12FontProviderD1Ev>:
     * @return The font with a font id of fontId.
     */
    virtual Font* getFont(FontId fontId) = 0;

    /** Finalizes an instance of the FontProvider class. */
    virtual ~FontProvider()
 8007df4:	b480      	push	{r7}
 8007df6:	b083      	sub	sp, #12
 8007df8:	af00      	add	r7, sp, #0
 8007dfa:	6078      	str	r0, [r7, #4]
    {
 8007dfc:	4a04      	ldr	r2, [pc, #16]	@ (8007e10 <_ZN8touchgfx12FontProviderD1Ev+0x1c>)
 8007dfe:	687b      	ldr	r3, [r7, #4]
 8007e00:	601a      	str	r2, [r3, #0]
    }
 8007e02:	687b      	ldr	r3, [r7, #4]
 8007e04:	4618      	mov	r0, r3
 8007e06:	370c      	adds	r7, #12
 8007e08:	46bd      	mov	sp, r7
 8007e0a:	f85d 7b04 	ldr.w	r7, [sp], #4
 8007e0e:	4770      	bx	lr
 8007e10:	08027f94 	.word	0x08027f94

08007e14 <_ZN8touchgfx12FontProviderD0Ev>:
    virtual ~FontProvider()
 8007e14:	b580      	push	{r7, lr}
 8007e16:	b082      	sub	sp, #8
 8007e18:	af00      	add	r7, sp, #0
 8007e1a:	6078      	str	r0, [r7, #4]
    }
 8007e1c:	6878      	ldr	r0, [r7, #4]
 8007e1e:	f7ff ffe9 	bl	8007df4 <_ZN8touchgfx12FontProviderD1Ev>
 8007e22:	2104      	movs	r1, #4
 8007e24:	6878      	ldr	r0, [r7, #4]
 8007e26:	f01d fe34 	bl	8025a92 <_ZdlPvj>
 8007e2a:	687b      	ldr	r3, [r7, #4]
 8007e2c:	4618      	mov	r0, r3
 8007e2e:	3708      	adds	r7, #8
 8007e30:	46bd      	mov	sp, r7
 8007e32:	bd80      	pop	{r7, pc}

08007e34 <_ZN23ApplicationFontProvider7getFontEt>:
#include <fonts/ApplicationFontProvider.hpp>
#include <fonts/GeneratedFont.hpp>
#include <texts/TypedTextDatabase.hpp>

touchgfx::Font* ApplicationFontProvider::getFont(touchgfx::FontId typography)
{
 8007e34:	b580      	push	{r7, lr}
 8007e36:	b082      	sub	sp, #8
 8007e38:	af00      	add	r7, sp, #0
 8007e3a:	6078      	str	r0, [r7, #4]
 8007e3c:	460b      	mov	r3, r1
 8007e3e:	807b      	strh	r3, [r7, #2]
    switch (typography)
 8007e40:	887b      	ldrh	r3, [r7, #2]
 8007e42:	2b00      	cmp	r3, #0
 8007e44:	d002      	beq.n	8007e4c <_ZN23ApplicationFontProvider7getFontEt+0x18>
 8007e46:	2b01      	cmp	r3, #1
 8007e48:	d005      	beq.n	8007e56 <_ZN23ApplicationFontProvider7getFontEt+0x22>
 8007e4a:	e009      	b.n	8007e60 <_ZN23ApplicationFontProvider7getFontEt+0x2c>
    {
    case Typography::DEFAULT:
        // Asap_Regular_80_4bpp
        return const_cast<touchgfx::Font*>(TypedTextDatabase::getFonts()[0]);
 8007e4c:	f005 fd30 	bl	800d8b0 <_ZN17TypedTextDatabase8getFontsEv>
 8007e50:	4603      	mov	r3, r0
 8007e52:	681b      	ldr	r3, [r3, #0]
 8007e54:	e005      	b.n	8007e62 <_ZN23ApplicationFontProvider7getFontEt+0x2e>
    case Typography::TYPOGRAPHY_00:
        // verdana_30_4bpp
        return const_cast<touchgfx::Font*>(TypedTextDatabase::getFonts()[1]);
 8007e56:	f005 fd2b 	bl	800d8b0 <_ZN17TypedTextDatabase8getFontsEv>
 8007e5a:	4603      	mov	r3, r0
 8007e5c:	685b      	ldr	r3, [r3, #4]
 8007e5e:	e000      	b.n	8007e62 <_ZN23ApplicationFontProvider7getFontEt+0x2e>
    default:
        return 0;
 8007e60:	2300      	movs	r3, #0
    }
}
 8007e62:	4618      	mov	r0, r3
 8007e64:	3708      	adds	r7, #8
 8007e66:	46bd      	mov	sp, r7
 8007e68:	bd80      	pop	{r7, pc}
	...

08007e6c <_ZN23ApplicationFontProviderD1Ev>:
    static const touchgfx::FontId DEFAULT = 0;       // Asap_Regular_80_4bpp
    static const touchgfx::FontId TYPOGRAPHY_00 = 1; // verdana_30_4bpp
    static const uint16_t NUMBER_OF_FONTS = 2;
};

class ApplicationFontProvider : public touchgfx::FontProvider
 8007e6c:	b580      	push	{r7, lr}
 8007e6e:	b082      	sub	sp, #8
 8007e70:	af00      	add	r7, sp, #0
 8007e72:	6078      	str	r0, [r7, #4]
 8007e74:	4a05      	ldr	r2, [pc, #20]	@ (8007e8c <_ZN23ApplicationFontProviderD1Ev+0x20>)
 8007e76:	687b      	ldr	r3, [r7, #4]
 8007e78:	601a      	str	r2, [r3, #0]
 8007e7a:	687b      	ldr	r3, [r7, #4]
 8007e7c:	4618      	mov	r0, r3
 8007e7e:	f7ff ffb9 	bl	8007df4 <_ZN8touchgfx12FontProviderD1Ev>
 8007e82:	687b      	ldr	r3, [r7, #4]
 8007e84:	4618      	mov	r0, r3
 8007e86:	3708      	adds	r7, #8
 8007e88:	46bd      	mov	sp, r7
 8007e8a:	bd80      	pop	{r7, pc}
 8007e8c:	08027f80 	.word	0x08027f80

08007e90 <_ZN23ApplicationFontProviderD0Ev>:
 8007e90:	b580      	push	{r7, lr}
 8007e92:	b082      	sub	sp, #8
 8007e94:	af00      	add	r7, sp, #0
 8007e96:	6078      	str	r0, [r7, #4]
 8007e98:	6878      	ldr	r0, [r7, #4]
 8007e9a:	f7ff ffe7 	bl	8007e6c <_ZN23ApplicationFontProviderD1Ev>
 8007e9e:	2104      	movs	r1, #4
 8007ea0:	6878      	ldr	r0, [r7, #4]
 8007ea2:	f01d fdf6 	bl	8025a92 <_ZdlPvj>
 8007ea6:	687b      	ldr	r3, [r7, #4]
 8007ea8:	4618      	mov	r0, r3
 8007eaa:	3708      	adds	r7, #8
 8007eac:	46bd      	mov	sp, r7
 8007eae:	bd80      	pop	{r7, pc}

08007eb0 <_ZN8touchgfx4FontD1Ev>:
 */
class Font
{
public:
    /** Finalizes an instance of the Font class. */
    virtual ~Font()
 8007eb0:	b480      	push	{r7}
 8007eb2:	b083      	sub	sp, #12
 8007eb4:	af00      	add	r7, sp, #0
 8007eb6:	6078      	str	r0, [r7, #4]
    {
 8007eb8:	4a04      	ldr	r2, [pc, #16]	@ (8007ecc <_ZN8touchgfx4FontD1Ev+0x1c>)
 8007eba:	687b      	ldr	r3, [r7, #4]
 8007ebc:	601a      	str	r2, [r3, #0]
    }
 8007ebe:	687b      	ldr	r3, [r7, #4]
 8007ec0:	4618      	mov	r0, r3
 8007ec2:	370c      	adds	r7, #12
 8007ec4:	46bd      	mov	sp, r7
 8007ec6:	f85d 7b04 	ldr.w	r7, [sp], #4
 8007eca:	4770      	bx	lr
 8007ecc:	0802876c 	.word	0x0802876c

08007ed0 <_ZN8touchgfx4FontD0Ev>:
    virtual ~Font()
 8007ed0:	b580      	push	{r7, lr}
 8007ed2:	b082      	sub	sp, #8
 8007ed4:	af00      	add	r7, sp, #0
 8007ed6:	6078      	str	r0, [r7, #4]
    }
 8007ed8:	6878      	ldr	r0, [r7, #4]
 8007eda:	f7ff ffe9 	bl	8007eb0 <_ZN8touchgfx4FontD1Ev>
 8007ede:	2114      	movs	r1, #20
 8007ee0:	6878      	ldr	r0, [r7, #4]
 8007ee2:	f01d fdd6 	bl	8025a92 <_ZdlPvj>
 8007ee6:	687b      	ldr	r3, [r7, #4]
 8007ee8:	4618      	mov	r0, r3
 8007eea:	3708      	adds	r7, #8
 8007eec:	46bd      	mov	sp, r7
 8007eee:	bd80      	pop	{r7, pc}

08007ef0 <_ZNK8touchgfx4Font8getGlyphEt>:
     *
     * @return A pointer to the glyph node or null if the glyph was not found.
     *
     * @see TextProvider::getNextLigature
     */
    virtual const GlyphNode* getGlyph(Unicode::UnicodeChar unicode) const
 8007ef0:	b590      	push	{r4, r7, lr}
 8007ef2:	b087      	sub	sp, #28
 8007ef4:	af00      	add	r7, sp, #0
 8007ef6:	6078      	str	r0, [r7, #4]
 8007ef8:	460b      	mov	r3, r1
 8007efa:	807b      	strh	r3, [r7, #2]
    {
        if (unicode == 0)
 8007efc:	887b      	ldrh	r3, [r7, #2]
 8007efe:	2b00      	cmp	r3, #0
 8007f00:	d101      	bne.n	8007f06 <_ZNK8touchgfx4Font8getGlyphEt+0x16>
        {
            return 0;
 8007f02:	2300      	movs	r3, #0
 8007f04:	e010      	b.n	8007f28 <_ZNK8touchgfx4Font8getGlyphEt+0x38>
        }
        const uint8_t* dummyPixelDataPointer = 0;
 8007f06:	2300      	movs	r3, #0
 8007f08:	613b      	str	r3, [r7, #16]
        uint8_t bitsPerPixelDummy = 0;
 8007f0a:	2300      	movs	r3, #0
 8007f0c:	73fb      	strb	r3, [r7, #15]
        const GlyphNode* glyph = getGlyph(unicode, dummyPixelDataPointer, bitsPerPixelDummy);
 8007f0e:	687b      	ldr	r3, [r7, #4]
 8007f10:	681b      	ldr	r3, [r3, #0]
 8007f12:	3308      	adds	r3, #8
 8007f14:	681c      	ldr	r4, [r3, #0]
 8007f16:	f107 030f 	add.w	r3, r7, #15
 8007f1a:	f107 0210 	add.w	r2, r7, #16
 8007f1e:	8879      	ldrh	r1, [r7, #2]
 8007f20:	6878      	ldr	r0, [r7, #4]
 8007f22:	47a0      	blx	r4
 8007f24:	6178      	str	r0, [r7, #20]
        return glyph;
 8007f26:	697b      	ldr	r3, [r7, #20]
    }
 8007f28:	4618      	mov	r0, r3
 8007f2a:	371c      	adds	r7, #28
 8007f2c:	46bd      	mov	sp, r7
 8007f2e:	bd90      	pop	{r4, r7, pc}

08007f30 <_ZNK8touchgfx4Font15getFallbackCharEv>:
     * used when no glyph is available for some character. If 0 (zero) is returned, there is
     * no default character.
     *
     * @return The default character for the typography in case no glyph is available.
     */
    virtual Unicode::UnicodeChar getFallbackChar() const
 8007f30:	b480      	push	{r7}
 8007f32:	b083      	sub	sp, #12
 8007f34:	af00      	add	r7, sp, #0
 8007f36:	6078      	str	r0, [r7, #4]
    {
        return fallbackCharacter;
 8007f38:	687b      	ldr	r3, [r7, #4]
 8007f3a:	89db      	ldrh	r3, [r3, #14]
    }
 8007f3c:	4618      	mov	r0, r3
 8007f3e:	370c      	adds	r7, #12
 8007f40:	46bd      	mov	sp, r7
 8007f42:	f85d 7b04 	ldr.w	r7, [sp], #4
 8007f46:	4770      	bx	lr

08007f48 <_ZNK8touchgfx4Font15getEllipsisCharEv>:
     *
     * @return The ellipsis character for the typography.
     *
     * @see TextArea::setWideTextAction
     */
    virtual Unicode::UnicodeChar getEllipsisChar() const
 8007f48:	b480      	push	{r7}
 8007f4a:	b083      	sub	sp, #12
 8007f4c:	af00      	add	r7, sp, #0
 8007f4e:	6078      	str	r0, [r7, #4]
    {
        return ellipsisCharacter;
 8007f50:	687b      	ldr	r3, [r7, #4]
 8007f52:	8a1b      	ldrh	r3, [r3, #16]
    }
 8007f54:	4618      	mov	r0, r3
 8007f56:	370c      	adds	r7, #12
 8007f58:	46bd      	mov	sp, r7
 8007f5a:	f85d 7b04 	ldr.w	r7, [sp], #4
 8007f5e:	4770      	bx	lr

08007f60 <_ZNK8touchgfx4Font11getBaselineEv>:
     * @return The baseline position.
     *
     * @note It is not sufficient to allocate text areas with this height. Use
     *       getHeight for this.
     */
    FORCE_INLINE_FUNCTION virtual uint16_t getBaseline() const
 8007f60:	b480      	push	{r7}
 8007f62:	b083      	sub	sp, #12
 8007f64:	af00      	add	r7, sp, #0
 8007f66:	6078      	str	r0, [r7, #4]
    {
        return baselineHeight;
 8007f68:	687b      	ldr	r3, [r7, #4]
 8007f6a:	88db      	ldrh	r3, [r3, #6]
    }
 8007f6c:	4618      	mov	r0, r3
 8007f6e:	370c      	adds	r7, #12
 8007f70:	46bd      	mov	sp, r7
 8007f72:	f85d 7b04 	ldr.w	r7, [sp], #4
 8007f76:	4770      	bx	lr

08007f78 <_ZNK8touchgfx4Font9getHeightEv>:
     * Returns the height of a font. The font may exceed the top by getPixelsAboveTop() or the
     * bottom by getPixelsBelowBottom.
     *
     * @return The font height.
     */
    FORCE_INLINE_FUNCTION virtual uint16_t getHeight() const
 8007f78:	b480      	push	{r7}
 8007f7a:	b083      	sub	sp, #12
 8007f7c:	af00      	add	r7, sp, #0
 8007f7e:	6078      	str	r0, [r7, #4]
    {
        return fontHeight;
 8007f80:	687b      	ldr	r3, [r7, #4]
 8007f82:	889b      	ldrh	r3, [r3, #4]
    }
 8007f84:	4618      	mov	r0, r3
 8007f86:	370c      	adds	r7, #12
 8007f88:	46bd      	mov	sp, r7
 8007f8a:	f85d 7b04 	ldr.w	r7, [sp], #4
 8007f8e:	4770      	bx	lr

08007f90 <_ZNK8touchgfx4Font15getBitsPerPixelEv>:
    /**
     * Gets bits per pixel for this font.
     *
     * @return The number of bits used per pixel in this font.
     */
    FORCE_INLINE_FUNCTION virtual uint8_t getBitsPerPixel() const
 8007f90:	b480      	push	{r7}
 8007f92:	b083      	sub	sp, #12
 8007f94:	af00      	add	r7, sp, #0
 8007f96:	6078      	str	r0, [r7, #4]
    {
        return bPerPixel;
 8007f98:	687b      	ldr	r3, [r7, #4]
 8007f9a:	7a9b      	ldrb	r3, [r3, #10]
 8007f9c:	f3c3 0306 	ubfx	r3, r3, #0, #7
 8007fa0:	b2db      	uxtb	r3, r3
    }
 8007fa2:	4618      	mov	r0, r3
 8007fa4:	370c      	adds	r7, #12
 8007fa6:	46bd      	mov	sp, r7
 8007fa8:	f85d 7b04 	ldr.w	r7, [sp], #4
 8007fac:	4770      	bx	lr

08007fae <_ZNK8touchgfx4Font15getByteAlignRowEv>:
    /**
     * Are the glyphs saved with each glyph row byte aligned?
     *
     * @return True if each glyph row is stored byte aligned, false otherwise.
     */
    FORCE_INLINE_FUNCTION virtual uint8_t getByteAlignRow() const
 8007fae:	b480      	push	{r7}
 8007fb0:	b083      	sub	sp, #12
 8007fb2:	af00      	add	r7, sp, #0
 8007fb4:	6078      	str	r0, [r7, #4]
    {
        return bAlignRow;
 8007fb6:	687b      	ldr	r3, [r7, #4]
 8007fb8:	7a9b      	ldrb	r3, [r3, #10]
 8007fba:	f3c3 13c0 	ubfx	r3, r3, #7, #1
 8007fbe:	b2db      	uxtb	r3, r3
    }
 8007fc0:	4618      	mov	r0, r3
 8007fc2:	370c      	adds	r7, #12
 8007fc4:	46bd      	mov	sp, r7
 8007fc6:	f85d 7b04 	ldr.w	r7, [sp], #4
 8007fca:	4770      	bx	lr

08007fcc <_ZNK8touchgfx4Font17isVectorBasedFontEv>:
    /**
     * Returns true if this Font is vector based. Default is false.
     *
     * @return True if this Font is vector based.
     */
    virtual bool isVectorBasedFont() const
 8007fcc:	b480      	push	{r7}
 8007fce:	b083      	sub	sp, #12
 8007fd0:	af00      	add	r7, sp, #0
 8007fd2:	6078      	str	r0, [r7, #4]
    {
        return false;
 8007fd4:	2300      	movs	r3, #0
    }
 8007fd6:	4618      	mov	r0, r3
 8007fd8:	370c      	adds	r7, #12
 8007fda:	46bd      	mov	sp, r7
 8007fdc:	f85d 7b04 	ldr.w	r7, [sp], #4
 8007fe0:	4770      	bx	lr

08007fe2 <_ZNK8touchgfx4Font14getScaleFactorEv>:
    /**
     * Returns the scale factor
     *
     * @return The scale factor
     */
    virtual float getScaleFactor() const
 8007fe2:	b480      	push	{r7}
 8007fe4:	b083      	sub	sp, #12
 8007fe6:	af00      	add	r7, sp, #0
 8007fe8:	6078      	str	r0, [r7, #4]
    {
        return 0;
 8007fea:	f04f 0300 	mov.w	r3, #0
 8007fee:	ee07 3a90 	vmov	s15, r3
    }
 8007ff2:	eeb0 0a67 	vmov.f32	s0, s15
 8007ff6:	370c      	adds	r7, #12
 8007ff8:	46bd      	mov	sp, r7
 8007ffa:	f85d 7b04 	ldr.w	r7, [sp], #4
 8007ffe:	4770      	bx	lr

08008000 <_ZN8touchgfx9ConstFontD1Ev>:
 *
 * @see Font
 *
 * @note Pure virtual class. Create an application-specific implementation of getPixelData().
 */
class ConstFont : public Font
 8008000:	b580      	push	{r7, lr}
 8008002:	b082      	sub	sp, #8
 8008004:	af00      	add	r7, sp, #0
 8008006:	6078      	str	r0, [r7, #4]
 8008008:	4a05      	ldr	r2, [pc, #20]	@ (8008020 <_ZN8touchgfx9ConstFontD1Ev+0x20>)
 800800a:	687b      	ldr	r3, [r7, #4]
 800800c:	601a      	str	r2, [r3, #0]
 800800e:	687b      	ldr	r3, [r7, #4]
 8008010:	4618      	mov	r0, r3
 8008012:	f7ff ff4d 	bl	8007eb0 <_ZN8touchgfx4FontD1Ev>
 8008016:	687b      	ldr	r3, [r7, #4]
 8008018:	4618      	mov	r0, r3
 800801a:	3708      	adds	r7, #8
 800801c:	46bd      	mov	sp, r7
 800801e:	bd80      	pop	{r7, pc}
 8008020:	080294f8 	.word	0x080294f8

08008024 <_ZN8touchgfx9ConstFontD0Ev>:
 8008024:	b580      	push	{r7, lr}
 8008026:	b082      	sub	sp, #8
 8008028:	af00      	add	r7, sp, #0
 800802a:	6078      	str	r0, [r7, #4]
 800802c:	6878      	ldr	r0, [r7, #4]
 800802e:	f7ff ffe7 	bl	8008000 <_ZN8touchgfx9ConstFontD1Ev>
 8008032:	211c      	movs	r1, #28
 8008034:	6878      	ldr	r0, [r7, #4]
 8008036:	f01d fd2c 	bl	8025a92 <_ZdlPvj>
 800803a:	687b      	ldr	r3, [r7, #4]
 800803c:	4618      	mov	r0, r3
 800803e:	3708      	adds	r7, #8
 8008040:	46bd      	mov	sp, r7
 8008042:	bd80      	pop	{r7, pc}

08008044 <_ZN8touchgfx13GeneratedFontD1Ev>:

#include <touchgfx/ConstFont.hpp>

namespace touchgfx
{
class GeneratedFont : public ConstFont
 8008044:	b580      	push	{r7, lr}
 8008046:	b082      	sub	sp, #8
 8008048:	af00      	add	r7, sp, #0
 800804a:	6078      	str	r0, [r7, #4]
 800804c:	4a05      	ldr	r2, [pc, #20]	@ (8008064 <_ZN8touchgfx13GeneratedFontD1Ev+0x20>)
 800804e:	687b      	ldr	r3, [r7, #4]
 8008050:	601a      	str	r2, [r3, #0]
 8008052:	687b      	ldr	r3, [r7, #4]
 8008054:	4618      	mov	r0, r3
 8008056:	f7ff ffd3 	bl	8008000 <_ZN8touchgfx9ConstFontD1Ev>
 800805a:	687b      	ldr	r3, [r7, #4]
 800805c:	4618      	mov	r0, r3
 800805e:	3708      	adds	r7, #8
 8008060:	46bd      	mov	sp, r7
 8008062:	bd80      	pop	{r7, pc}
 8008064:	08027fb8 	.word	0x08027fb8

08008068 <_ZN8touchgfx13GeneratedFontD0Ev>:
 8008068:	b580      	push	{r7, lr}
 800806a:	b082      	sub	sp, #8
 800806c:	af00      	add	r7, sp, #0
 800806e:	6078      	str	r0, [r7, #4]
 8008070:	6878      	ldr	r0, [r7, #4]
 8008072:	f7ff ffe7 	bl	8008044 <_ZN8touchgfx13GeneratedFontD1Ev>
 8008076:	212c      	movs	r1, #44	@ 0x2c
 8008078:	6878      	ldr	r0, [r7, #4]
 800807a:	f01d fd0a 	bl	8025a92 <_ZdlPvj>
 800807e:	687b      	ldr	r3, [r7, #4]
 8008080:	4618      	mov	r0, r3
 8008082:	3708      	adds	r7, #8
 8008084:	46bd      	mov	sp, r7
 8008086:	bd80      	pop	{r7, pc}

08008088 <_ZN8touchgfx9TypedTextD1Ev>:
        : typedTextId(id)
    {
    }

    /** Finalizes an instance of the TypedText class. */
    virtual ~TypedText()
 8008088:	b480      	push	{r7}
 800808a:	b083      	sub	sp, #12
 800808c:	af00      	add	r7, sp, #0
 800808e:	6078      	str	r0, [r7, #4]
    {
 8008090:	4a04      	ldr	r2, [pc, #16]	@ (80080a4 <_ZN8touchgfx9TypedTextD1Ev+0x1c>)
 8008092:	687b      	ldr	r3, [r7, #4]
 8008094:	601a      	str	r2, [r3, #0]
    }
 8008096:	687b      	ldr	r3, [r7, #4]
 8008098:	4618      	mov	r0, r3
 800809a:	370c      	adds	r7, #12
 800809c:	46bd      	mov	sp, r7
 800809e:	f85d 7b04 	ldr.w	r7, [sp], #4
 80080a2:	4770      	bx	lr
 80080a4:	08027fa8 	.word	0x08027fa8

080080a8 <_ZN8touchgfx9TypedTextD0Ev>:
    virtual ~TypedText()
 80080a8:	b580      	push	{r7, lr}
 80080aa:	b082      	sub	sp, #8
 80080ac:	af00      	add	r7, sp, #0
 80080ae:	6078      	str	r0, [r7, #4]
    }
 80080b0:	6878      	ldr	r0, [r7, #4]
 80080b2:	f7ff ffe9 	bl	8008088 <_ZN8touchgfx9TypedTextD1Ev>
 80080b6:	2108      	movs	r1, #8
 80080b8:	6878      	ldr	r0, [r7, #4]
 80080ba:	f01d fcea 	bl	8025a92 <_ZdlPvj>
 80080be:	687b      	ldr	r3, [r7, #4]
 80080c0:	4618      	mov	r0, r3
 80080c2:	3708      	adds	r7, #8
 80080c4:	46bd      	mov	sp, r7
 80080c6:	bd80      	pop	{r7, pc}

080080c8 <_ZNK8touchgfx13GeneratedFont12getGSUBTableEv>:

    virtual const uint8_t* getPixelData(const GlyphNode* glyph) const;

    virtual int8_t getKerning(Unicode::UnicodeChar prevChar, const GlyphNode* glyph) const;

    virtual const uint16_t* getGSUBTable() const
 80080c8:	b480      	push	{r7}
 80080ca:	b083      	sub	sp, #12
 80080cc:	af00      	add	r7, sp, #0
 80080ce:	6078      	str	r0, [r7, #4]
    {
        return gsubTable;
 80080d0:	687b      	ldr	r3, [r7, #4]
 80080d2:	6a5b      	ldr	r3, [r3, #36]	@ 0x24
    }
 80080d4:	4618      	mov	r0, r3
 80080d6:	370c      	adds	r7, #12
 80080d8:	46bd      	mov	sp, r7
 80080da:	f85d 7b04 	ldr.w	r7, [sp], #4
 80080de:	4770      	bx	lr

080080e0 <_ZNK8touchgfx13GeneratedFont23getContextualFormsTableEv>:

    virtual const FontContextualFormsTable* getContextualFormsTable() const
 80080e0:	b480      	push	{r7}
 80080e2:	b083      	sub	sp, #12
 80080e4:	af00      	add	r7, sp, #0
 80080e6:	6078      	str	r0, [r7, #4]
    {
        return arabicTable;
 80080e8:	687b      	ldr	r3, [r7, #4]
 80080ea:	6a9b      	ldr	r3, [r3, #40]	@ 0x28
    }
 80080ec:	4618      	mov	r0, r3
 80080ee:	370c      	adds	r7, #12
 80080f0:	46bd      	mov	sp, r7
 80080f2:	f85d 7b04 	ldr.w	r7, [sp], #4
 80080f6:	4770      	bx	lr

080080f8 <_ZN8touchgfx13GeneratedFontC1EPKNS_9GlyphNodeEttthhhhhhPKPKhPKNS_11KerningNodeEttPKtPKNS_24FontContextualFormsTableE>:
#include <fonts/GeneratedFont.hpp>
#include <math.h>

namespace touchgfx
{
GeneratedFont::GeneratedFont(const GlyphNode* glyphs, uint16_t numGlyphs, uint16_t height, uint16_t baseline, uint8_t pixAboveTop, uint8_t pixBelowBottom, uint8_t bitsPerPixel, uint8_t byteAlignRow, uint8_t maxLeft, uint8_t maxRight, const uint8_t* const* glyphDataInternalFlash, const KerningNode* kerningList, const Unicode::UnicodeChar fallbackChar, const Unicode::UnicodeChar ellipsisChar, const uint16_t* const gsubData, const FontContextualFormsTable* formsTable)
 80080f8:	b580      	push	{r7, lr}
 80080fa:	b08e      	sub	sp, #56	@ 0x38
 80080fc:	af0a      	add	r7, sp, #40	@ 0x28
 80080fe:	60f8      	str	r0, [r7, #12]
 8008100:	60b9      	str	r1, [r7, #8]
 8008102:	4611      	mov	r1, r2
 8008104:	461a      	mov	r2, r3
 8008106:	460b      	mov	r3, r1
 8008108:	80fb      	strh	r3, [r7, #6]
 800810a:	4613      	mov	r3, r2
 800810c:	80bb      	strh	r3, [r7, #4]
    : ConstFont(glyphs, numGlyphs, height, baseline, pixAboveTop, pixBelowBottom, bitsPerPixel, byteAlignRow, maxLeft, maxRight, fallbackChar, ellipsisChar),
      glyphData(glyphDataInternalFlash),
      kerningData(kerningList),
      gsubTable(gsubData),
      arabicTable(formsTable)
 800810e:	68f8      	ldr	r0, [r7, #12]
 8008110:	88b9      	ldrh	r1, [r7, #4]
 8008112:	88fa      	ldrh	r2, [r7, #6]
 8008114:	f8b7 3040 	ldrh.w	r3, [r7, #64]	@ 0x40
 8008118:	9308      	str	r3, [sp, #32]
 800811a:	8fbb      	ldrh	r3, [r7, #60]	@ 0x3c
 800811c:	9307      	str	r3, [sp, #28]
 800811e:	f897 3030 	ldrb.w	r3, [r7, #48]	@ 0x30
 8008122:	9306      	str	r3, [sp, #24]
 8008124:	f897 302c 	ldrb.w	r3, [r7, #44]	@ 0x2c
 8008128:	9305      	str	r3, [sp, #20]
 800812a:	f897 3028 	ldrb.w	r3, [r7, #40]	@ 0x28
 800812e:	9304      	str	r3, [sp, #16]
 8008130:	f897 3024 	ldrb.w	r3, [r7, #36]	@ 0x24
 8008134:	9303      	str	r3, [sp, #12]
 8008136:	f897 3020 	ldrb.w	r3, [r7, #32]
 800813a:	9302      	str	r3, [sp, #8]
 800813c:	7f3b      	ldrb	r3, [r7, #28]
 800813e:	9301      	str	r3, [sp, #4]
 8008140:	8b3b      	ldrh	r3, [r7, #24]
 8008142:	9300      	str	r3, [sp, #0]
 8008144:	460b      	mov	r3, r1
 8008146:	68b9      	ldr	r1, [r7, #8]
 8008148:	f00d f86e 	bl	8015228 <_ZN8touchgfx9ConstFontC1EPKNS_9GlyphNodeEttthhhhhhtt>
 800814c:	4a09      	ldr	r2, [pc, #36]	@ (8008174 <_ZN8touchgfx13GeneratedFontC1EPKNS_9GlyphNodeEttthhhhhhPKPKhPKNS_11KerningNodeEttPKtPKNS_24FontContextualFormsTableE+0x7c>)
 800814e:	68fb      	ldr	r3, [r7, #12]
 8008150:	601a      	str	r2, [r3, #0]
      glyphData(glyphDataInternalFlash),
 8008152:	68fb      	ldr	r3, [r7, #12]
 8008154:	6b7a      	ldr	r2, [r7, #52]	@ 0x34
 8008156:	61da      	str	r2, [r3, #28]
      kerningData(kerningList),
 8008158:	68fb      	ldr	r3, [r7, #12]
 800815a:	6bba      	ldr	r2, [r7, #56]	@ 0x38
 800815c:	621a      	str	r2, [r3, #32]
      gsubTable(gsubData),
 800815e:	68fb      	ldr	r3, [r7, #12]
 8008160:	6c7a      	ldr	r2, [r7, #68]	@ 0x44
 8008162:	625a      	str	r2, [r3, #36]	@ 0x24
      arabicTable(formsTable)
 8008164:	68fb      	ldr	r3, [r7, #12]
 8008166:	6cba      	ldr	r2, [r7, #72]	@ 0x48
 8008168:	629a      	str	r2, [r3, #40]	@ 0x28
{
}
 800816a:	68fb      	ldr	r3, [r7, #12]
 800816c:	4618      	mov	r0, r3
 800816e:	3710      	adds	r7, #16
 8008170:	46bd      	mov	sp, r7
 8008172:	bd80      	pop	{r7, pc}
 8008174:	08027fb8 	.word	0x08027fb8

08008178 <_ZNK8touchgfx13GeneratedFont12getPixelDataEPKNS_9GlyphNodeE>:

const uint8_t* GeneratedFont::getPixelData(const GlyphNode* glyph) const
{
 8008178:	b480      	push	{r7}
 800817a:	b085      	sub	sp, #20
 800817c:	af00      	add	r7, sp, #0
 800817e:	6078      	str	r0, [r7, #4]
 8008180:	6039      	str	r1, [r7, #0]
    const uint8_t* const* table = (const uint8_t* const*)glyphData;
 8008182:	687b      	ldr	r3, [r7, #4]
 8008184:	69db      	ldr	r3, [r3, #28]
 8008186:	60fb      	str	r3, [r7, #12]
    return &(table[glyph->unicode / 2048][glyph->dataOffset]);
 8008188:	683b      	ldr	r3, [r7, #0]
 800818a:	889b      	ldrh	r3, [r3, #4]
 800818c:	0adb      	lsrs	r3, r3, #11
 800818e:	b29b      	uxth	r3, r3
 8008190:	009b      	lsls	r3, r3, #2
 8008192:	68fa      	ldr	r2, [r7, #12]
 8008194:	4413      	add	r3, r2
 8008196:	681a      	ldr	r2, [r3, #0]
 8008198:	683b      	ldr	r3, [r7, #0]
 800819a:	681b      	ldr	r3, [r3, #0]
 800819c:	4413      	add	r3, r2
}
 800819e:	4618      	mov	r0, r3
 80081a0:	3714      	adds	r7, #20
 80081a2:	46bd      	mov	sp, r7
 80081a4:	f85d 7b04 	ldr.w	r7, [sp], #4
 80081a8:	4770      	bx	lr

080081aa <_ZNK8touchgfx13GeneratedFont10getKerningEtPKNS_9GlyphNodeE>:

int8_t GeneratedFont::getKerning(Unicode::UnicodeChar prevChar, const GlyphNode* glyph) const
{
 80081aa:	b480      	push	{r7}
 80081ac:	b089      	sub	sp, #36	@ 0x24
 80081ae:	af00      	add	r7, sp, #0
 80081b0:	60f8      	str	r0, [r7, #12]
 80081b2:	460b      	mov	r3, r1
 80081b4:	607a      	str	r2, [r7, #4]
 80081b6:	817b      	strh	r3, [r7, #10]
    if (!glyph || glyph->kerningTableSize == 0)
 80081b8:	687b      	ldr	r3, [r7, #4]
 80081ba:	2b00      	cmp	r3, #0
 80081bc:	d003      	beq.n	80081c6 <_ZNK8touchgfx13GeneratedFont10getKerningEtPKNS_9GlyphNodeE+0x1c>
 80081be:	687b      	ldr	r3, [r7, #4]
 80081c0:	7b1b      	ldrb	r3, [r3, #12]
 80081c2:	2b00      	cmp	r3, #0
 80081c4:	d101      	bne.n	80081ca <_ZNK8touchgfx13GeneratedFont10getKerningEtPKNS_9GlyphNodeE+0x20>
    {
        return 0;
 80081c6:	2300      	movs	r3, #0
 80081c8:	e031      	b.n	800822e <_ZNK8touchgfx13GeneratedFont10getKerningEtPKNS_9GlyphNodeE+0x84>
    }

    const KerningNode* kerndata = kerningData + glyph->kerningTablePos();
 80081ca:	68fb      	ldr	r3, [r7, #12]
 80081cc:	6a1a      	ldr	r2, [r3, #32]
 80081ce:	687b      	ldr	r3, [r7, #4]
 80081d0:	617b      	str	r3, [r7, #20]
        return ((flags & GLYPH_DATA_KERNINGTABLEPOS_BIT8_10) << 8) | _kerningTablePos;
 80081d2:	697b      	ldr	r3, [r7, #20]
 80081d4:	7b5b      	ldrb	r3, [r3, #13]
 80081d6:	021b      	lsls	r3, r3, #8
 80081d8:	b21b      	sxth	r3, r3
 80081da:	f403 63e0 	and.w	r3, r3, #1792	@ 0x700
 80081de:	b219      	sxth	r1, r3
 80081e0:	697b      	ldr	r3, [r7, #20]
 80081e2:	7adb      	ldrb	r3, [r3, #11]
 80081e4:	b21b      	sxth	r3, r3
 80081e6:	430b      	orrs	r3, r1
 80081e8:	b21b      	sxth	r3, r3
 80081ea:	b29b      	uxth	r3, r3
 80081ec:	009b      	lsls	r3, r3, #2
 80081ee:	4413      	add	r3, r2
 80081f0:	61fb      	str	r3, [r7, #28]
    for (uint16_t i = glyph->kerningTableSize; i > 0; i--, kerndata++)
 80081f2:	687b      	ldr	r3, [r7, #4]
 80081f4:	7b1b      	ldrb	r3, [r3, #12]
 80081f6:	837b      	strh	r3, [r7, #26]
 80081f8:	e013      	b.n	8008222 <_ZNK8touchgfx13GeneratedFont10getKerningEtPKNS_9GlyphNodeE+0x78>
    {
        if (prevChar == kerndata->unicodePrevChar)
 80081fa:	69fb      	ldr	r3, [r7, #28]
 80081fc:	881b      	ldrh	r3, [r3, #0]
 80081fe:	897a      	ldrh	r2, [r7, #10]
 8008200:	429a      	cmp	r2, r3
 8008202:	d103      	bne.n	800820c <_ZNK8touchgfx13GeneratedFont10getKerningEtPKNS_9GlyphNodeE+0x62>
        {
            return kerndata->distance;
 8008204:	69fb      	ldr	r3, [r7, #28]
 8008206:	f993 3002 	ldrsb.w	r3, [r3, #2]
 800820a:	e010      	b.n	800822e <_ZNK8touchgfx13GeneratedFont10getKerningEtPKNS_9GlyphNodeE+0x84>
        }
        if (prevChar < kerndata->unicodePrevChar)
 800820c:	69fb      	ldr	r3, [r7, #28]
 800820e:	881b      	ldrh	r3, [r3, #0]
 8008210:	897a      	ldrh	r2, [r7, #10]
 8008212:	429a      	cmp	r2, r3
 8008214:	d309      	bcc.n	800822a <_ZNK8touchgfx13GeneratedFont10getKerningEtPKNS_9GlyphNodeE+0x80>
    for (uint16_t i = glyph->kerningTableSize; i > 0; i--, kerndata++)
 8008216:	8b7b      	ldrh	r3, [r7, #26]
 8008218:	3b01      	subs	r3, #1
 800821a:	837b      	strh	r3, [r7, #26]
 800821c:	69fb      	ldr	r3, [r7, #28]
 800821e:	3304      	adds	r3, #4
 8008220:	61fb      	str	r3, [r7, #28]
 8008222:	8b7b      	ldrh	r3, [r7, #26]
 8008224:	2b00      	cmp	r3, #0
 8008226:	d1e8      	bne.n	80081fa <_ZNK8touchgfx13GeneratedFont10getKerningEtPKNS_9GlyphNodeE+0x50>
 8008228:	e000      	b.n	800822c <_ZNK8touchgfx13GeneratedFont10getKerningEtPKNS_9GlyphNodeE+0x82>
        {
            break;
 800822a:	bf00      	nop
        }
    }
    return 0;
 800822c:	2300      	movs	r3, #0
}
 800822e:	4618      	mov	r0, r3
 8008230:	3724      	adds	r7, #36	@ 0x24
 8008232:	46bd      	mov	sp, r7
 8008234:	f85d 7b04 	ldr.w	r7, [sp], #4
 8008238:	4770      	bx	lr
	...

0800823c <__tcf_0>:
KEEP extern const touchgfx::KerningNode kerning_Asap_Regular_80_4bpp[] FONT_KERNING_LOCATION_FLASH_ATTRIBUTE;
touchgfx::GeneratedFont& getFont_Asap_Regular_80_4bpp();

touchgfx::GeneratedFont& getFont_Asap_Regular_80_4bpp()
{
    static touchgfx::GeneratedFont Asap_Regular_80_4bpp(glyphs_Asap_Regular_80_4bpp, 10, 80, 80, 0, 0, 4, 1, 0, 0, unicodes_Asap_Regular_80_4bpp, kerning_Asap_Regular_80_4bpp, 0, 0, 0, 0);
 800823c:	b580      	push	{r7, lr}
 800823e:	af00      	add	r7, sp, #0
 8008240:	4801      	ldr	r0, [pc, #4]	@ (8008248 <__tcf_0+0xc>)
 8008242:	f7ff feff 	bl	8008044 <_ZN8touchgfx13GeneratedFontD1Ev>
 8008246:	bd80      	pop	{r7, pc}
 8008248:	2000065c 	.word	0x2000065c

0800824c <_Z28getFont_Asap_Regular_80_4bppv>:
{
 800824c:	b580      	push	{r7, lr}
 800824e:	b08e      	sub	sp, #56	@ 0x38
 8008250:	af0e      	add	r7, sp, #56	@ 0x38
    static touchgfx::GeneratedFont Asap_Regular_80_4bpp(glyphs_Asap_Regular_80_4bpp, 10, 80, 80, 0, 0, 4, 1, 0, 0, unicodes_Asap_Regular_80_4bpp, kerning_Asap_Regular_80_4bpp, 0, 0, 0, 0);
 8008252:	4b21      	ldr	r3, [pc, #132]	@ (80082d8 <_Z28getFont_Asap_Regular_80_4bppv+0x8c>)
 8008254:	681b      	ldr	r3, [r3, #0]
 8008256:	f3bf 8f5b 	dmb	ish
 800825a:	f003 0301 	and.w	r3, r3, #1
 800825e:	2b00      	cmp	r3, #0
 8008260:	bf0c      	ite	eq
 8008262:	2301      	moveq	r3, #1
 8008264:	2300      	movne	r3, #0
 8008266:	b2db      	uxtb	r3, r3
 8008268:	2b00      	cmp	r3, #0
 800826a:	d030      	beq.n	80082ce <_Z28getFont_Asap_Regular_80_4bppv+0x82>
 800826c:	481a      	ldr	r0, [pc, #104]	@ (80082d8 <_Z28getFont_Asap_Regular_80_4bppv+0x8c>)
 800826e:	f01d fc12 	bl	8025a96 <__cxa_guard_acquire>
 8008272:	4603      	mov	r3, r0
 8008274:	2b00      	cmp	r3, #0
 8008276:	bf14      	ite	ne
 8008278:	2301      	movne	r3, #1
 800827a:	2300      	moveq	r3, #0
 800827c:	b2db      	uxtb	r3, r3
 800827e:	2b00      	cmp	r3, #0
 8008280:	d025      	beq.n	80082ce <_Z28getFont_Asap_Regular_80_4bppv+0x82>
 8008282:	2300      	movs	r3, #0
 8008284:	930c      	str	r3, [sp, #48]	@ 0x30
 8008286:	2300      	movs	r3, #0
 8008288:	930b      	str	r3, [sp, #44]	@ 0x2c
 800828a:	2300      	movs	r3, #0
 800828c:	930a      	str	r3, [sp, #40]	@ 0x28
 800828e:	2300      	movs	r3, #0
 8008290:	9309      	str	r3, [sp, #36]	@ 0x24
 8008292:	4b12      	ldr	r3, [pc, #72]	@ (80082dc <_Z28getFont_Asap_Regular_80_4bppv+0x90>)
 8008294:	9308      	str	r3, [sp, #32]
 8008296:	4b12      	ldr	r3, [pc, #72]	@ (80082e0 <_Z28getFont_Asap_Regular_80_4bppv+0x94>)
 8008298:	9307      	str	r3, [sp, #28]
 800829a:	2300      	movs	r3, #0
 800829c:	9306      	str	r3, [sp, #24]
 800829e:	2300      	movs	r3, #0
 80082a0:	9305      	str	r3, [sp, #20]
 80082a2:	2301      	movs	r3, #1
 80082a4:	9304      	str	r3, [sp, #16]
 80082a6:	2304      	movs	r3, #4
 80082a8:	9303      	str	r3, [sp, #12]
 80082aa:	2300      	movs	r3, #0
 80082ac:	9302      	str	r3, [sp, #8]
 80082ae:	2300      	movs	r3, #0
 80082b0:	9301      	str	r3, [sp, #4]
 80082b2:	2350      	movs	r3, #80	@ 0x50
 80082b4:	9300      	str	r3, [sp, #0]
 80082b6:	2350      	movs	r3, #80	@ 0x50
 80082b8:	220a      	movs	r2, #10
 80082ba:	490a      	ldr	r1, [pc, #40]	@ (80082e4 <_Z28getFont_Asap_Regular_80_4bppv+0x98>)
 80082bc:	480a      	ldr	r0, [pc, #40]	@ (80082e8 <_Z28getFont_Asap_Regular_80_4bppv+0x9c>)
 80082be:	f7ff ff1b 	bl	80080f8 <_ZN8touchgfx13GeneratedFontC1EPKNS_9GlyphNodeEttthhhhhhPKPKhPKNS_11KerningNodeEttPKtPKNS_24FontContextualFormsTableE>
 80082c2:	480a      	ldr	r0, [pc, #40]	@ (80082ec <_Z28getFont_Asap_Regular_80_4bppv+0xa0>)
 80082c4:	f01d fcb2 	bl	8025c2c <atexit>
 80082c8:	4803      	ldr	r0, [pc, #12]	@ (80082d8 <_Z28getFont_Asap_Regular_80_4bppv+0x8c>)
 80082ca:	f01d fbf0 	bl	8025aae <__cxa_guard_release>
    return Asap_Regular_80_4bpp;
 80082ce:	4b06      	ldr	r3, [pc, #24]	@ (80082e8 <_Z28getFont_Asap_Regular_80_4bppv+0x9c>)
}
 80082d0:	4618      	mov	r0, r3
 80082d2:	46bd      	mov	sp, r7
 80082d4:	bd80      	pop	{r7, pc}
 80082d6:	bf00      	nop
 80082d8:	20000688 	.word	0x20000688
 80082dc:	080302c8 	.word	0x080302c8
 80082e0:	08030574 	.word	0x08030574
 80082e4:	0802fd08 	.word	0x0802fd08
 80082e8:	2000065c 	.word	0x2000065c
 80082ec:	0800823d 	.word	0x0800823d

080082f0 <__tcf_0>:
KEEP extern const touchgfx::KerningNode kerning_verdana_30_4bpp[] FONT_KERNING_LOCATION_FLASH_ATTRIBUTE;
touchgfx::GeneratedFont& getFont_verdana_30_4bpp();

touchgfx::GeneratedFont& getFont_verdana_30_4bpp()
{
    static touchgfx::GeneratedFont verdana_30_4bpp(glyphs_verdana_30_4bpp, 95, 36, 30, 0, 0, 4, 1, 1, 1, unicodes_verdana_30_4bpp, kerning_verdana_30_4bpp, 63, 0, 0, 0);
 80082f0:	b580      	push	{r7, lr}
 80082f2:	af00      	add	r7, sp, #0
 80082f4:	4801      	ldr	r0, [pc, #4]	@ (80082fc <__tcf_0+0xc>)
 80082f6:	f7ff fea5 	bl	8008044 <_ZN8touchgfx13GeneratedFontD1Ev>
 80082fa:	bd80      	pop	{r7, pc}
 80082fc:	2000068c 	.word	0x2000068c

08008300 <_Z23getFont_verdana_30_4bppv>:
{
 8008300:	b580      	push	{r7, lr}
 8008302:	b08e      	sub	sp, #56	@ 0x38
 8008304:	af0e      	add	r7, sp, #56	@ 0x38
    static touchgfx::GeneratedFont verdana_30_4bpp(glyphs_verdana_30_4bpp, 95, 36, 30, 0, 0, 4, 1, 1, 1, unicodes_verdana_30_4bpp, kerning_verdana_30_4bpp, 63, 0, 0, 0);
 8008306:	4b21      	ldr	r3, [pc, #132]	@ (800838c <_Z23getFont_verdana_30_4bppv+0x8c>)
 8008308:	681b      	ldr	r3, [r3, #0]
 800830a:	f3bf 8f5b 	dmb	ish
 800830e:	f003 0301 	and.w	r3, r3, #1
 8008312:	2b00      	cmp	r3, #0
 8008314:	bf0c      	ite	eq
 8008316:	2301      	moveq	r3, #1
 8008318:	2300      	movne	r3, #0
 800831a:	b2db      	uxtb	r3, r3
 800831c:	2b00      	cmp	r3, #0
 800831e:	d030      	beq.n	8008382 <_Z23getFont_verdana_30_4bppv+0x82>
 8008320:	481a      	ldr	r0, [pc, #104]	@ (800838c <_Z23getFont_verdana_30_4bppv+0x8c>)
 8008322:	f01d fbb8 	bl	8025a96 <__cxa_guard_acquire>
 8008326:	4603      	mov	r3, r0
 8008328:	2b00      	cmp	r3, #0
 800832a:	bf14      	ite	ne
 800832c:	2301      	movne	r3, #1
 800832e:	2300      	moveq	r3, #0
 8008330:	b2db      	uxtb	r3, r3
 8008332:	2b00      	cmp	r3, #0
 8008334:	d025      	beq.n	8008382 <_Z23getFont_verdana_30_4bppv+0x82>
 8008336:	2300      	movs	r3, #0
 8008338:	930c      	str	r3, [sp, #48]	@ 0x30
 800833a:	2300      	movs	r3, #0
 800833c:	930b      	str	r3, [sp, #44]	@ 0x2c
 800833e:	2300      	movs	r3, #0
 8008340:	930a      	str	r3, [sp, #40]	@ 0x28
 8008342:	233f      	movs	r3, #63	@ 0x3f
 8008344:	9309      	str	r3, [sp, #36]	@ 0x24
 8008346:	4b12      	ldr	r3, [pc, #72]	@ (8008390 <_Z23getFont_verdana_30_4bppv+0x90>)
 8008348:	9308      	str	r3, [sp, #32]
 800834a:	4b12      	ldr	r3, [pc, #72]	@ (8008394 <_Z23getFont_verdana_30_4bppv+0x94>)
 800834c:	9307      	str	r3, [sp, #28]
 800834e:	2301      	movs	r3, #1
 8008350:	9306      	str	r3, [sp, #24]
 8008352:	2301      	movs	r3, #1
 8008354:	9305      	str	r3, [sp, #20]
 8008356:	2301      	movs	r3, #1
 8008358:	9304      	str	r3, [sp, #16]
 800835a:	2304      	movs	r3, #4
 800835c:	9303      	str	r3, [sp, #12]
 800835e:	2300      	movs	r3, #0
 8008360:	9302      	str	r3, [sp, #8]
 8008362:	2300      	movs	r3, #0
 8008364:	9301      	str	r3, [sp, #4]
 8008366:	231e      	movs	r3, #30
 8008368:	9300      	str	r3, [sp, #0]
 800836a:	2324      	movs	r3, #36	@ 0x24
 800836c:	225f      	movs	r2, #95	@ 0x5f
 800836e:	490a      	ldr	r1, [pc, #40]	@ (8008398 <_Z23getFont_verdana_30_4bppv+0x98>)
 8008370:	480a      	ldr	r0, [pc, #40]	@ (800839c <_Z23getFont_verdana_30_4bppv+0x9c>)
 8008372:	f7ff fec1 	bl	80080f8 <_ZN8touchgfx13GeneratedFontC1EPKNS_9GlyphNodeEttthhhhhhPKPKhPKNS_11KerningNodeEttPKtPKNS_24FontContextualFormsTableE>
 8008376:	480a      	ldr	r0, [pc, #40]	@ (80083a0 <_Z23getFont_verdana_30_4bppv+0xa0>)
 8008378:	f01d fc58 	bl	8025c2c <atexit>
 800837c:	4803      	ldr	r0, [pc, #12]	@ (800838c <_Z23getFont_verdana_30_4bppv+0x8c>)
 800837e:	f01d fb96 	bl	8025aae <__cxa_guard_release>
    return verdana_30_4bpp;
 8008382:	4b06      	ldr	r3, [pc, #24]	@ (800839c <_Z23getFont_verdana_30_4bppv+0x9c>)
}
 8008384:	4618      	mov	r0, r3
 8008386:	46bd      	mov	sp, r7
 8008388:	bd80      	pop	{r7, pc}
 800838a:	bf00      	nop
 800838c:	200006b8 	.word	0x200006b8
 8008390:	080302cc 	.word	0x080302cc
 8008394:	08030578 	.word	0x08030578
 8008398:	0802fd94 	.word	0x0802fd94
 800839c:	2000068c 	.word	0x2000068c
 80083a0:	080082f1 	.word	0x080082f1

080083a4 <_ZnwjPv>:
#endif // __cpp_sized_deallocation
#endif // __cpp_aligned_new

// Default placement versions of operator new.
_GLIBCXX_NODISCARD inline void* operator new(std::size_t, void* __p) _GLIBCXX_USE_NOEXCEPT
{ return __p; }
 80083a4:	b480      	push	{r7}
 80083a6:	b083      	sub	sp, #12
 80083a8:	af00      	add	r7, sp, #0
 80083aa:	6078      	str	r0, [r7, #4]
 80083ac:	6039      	str	r1, [r7, #0]
 80083ae:	683b      	ldr	r3, [r7, #0]
 80083b0:	4618      	mov	r0, r3
 80083b2:	370c      	adds	r7, #12
 80083b4:	46bd      	mov	sp, r7
 80083b6:	f85d 7b04 	ldr.w	r7, [sp], #4
 80083ba:	4770      	bx	lr

080083bc <_ZN8touchgfx15UIEventListener16handleClickEventERKNS_10ClickEventE>:
     * This handler is invoked when a mouse click or display touch event has been detected
     * by the system.
     *
     * @param  event The event data.
     */
    virtual void handleClickEvent(const ClickEvent& event)
 80083bc:	b480      	push	{r7}
 80083be:	b083      	sub	sp, #12
 80083c0:	af00      	add	r7, sp, #0
 80083c2:	6078      	str	r0, [r7, #4]
 80083c4:	6039      	str	r1, [r7, #0]
    {
        (void)event; // Unused variable
    }
 80083c6:	bf00      	nop
 80083c8:	370c      	adds	r7, #12
 80083ca:	46bd      	mov	sp, r7
 80083cc:	f85d 7b04 	ldr.w	r7, [sp], #4
 80083d0:	4770      	bx	lr

080083d2 <_ZN8touchgfx15UIEventListener15handleDragEventERKNS_9DragEventE>:
    /**
     * This handler is invoked when a drag event has been detected by the system.
     *
     * @param  event The event data.
     */
    virtual void handleDragEvent(const DragEvent& event)
 80083d2:	b480      	push	{r7}
 80083d4:	b083      	sub	sp, #12
 80083d6:	af00      	add	r7, sp, #0
 80083d8:	6078      	str	r0, [r7, #4]
 80083da:	6039      	str	r1, [r7, #0]
    {
        (void)event; // Unused variable
    }
 80083dc:	bf00      	nop
 80083de:	370c      	adds	r7, #12
 80083e0:	46bd      	mov	sp, r7
 80083e2:	f85d 7b04 	ldr.w	r7, [sp], #4
 80083e6:	4770      	bx	lr

080083e8 <_ZN8touchgfx15UIEventListener18handleGestureEventERKNS_12GestureEventE>:
    /**
     * This handler is invoked when a gesture event has been detected by the system.
     *
     * @param  event The event data.
     */
    virtual void handleGestureEvent(const GestureEvent& event)
 80083e8:	b480      	push	{r7}
 80083ea:	b083      	sub	sp, #12
 80083ec:	af00      	add	r7, sp, #0
 80083ee:	6078      	str	r0, [r7, #4]
 80083f0:	6039      	str	r1, [r7, #0]
    {
        (void)event; // Unused variable
    }
 80083f2:	bf00      	nop
 80083f4:	370c      	adds	r7, #12
 80083f6:	46bd      	mov	sp, r7
 80083f8:	f85d 7b04 	ldr.w	r7, [sp], #4
 80083fc:	4770      	bx	lr

080083fe <_ZN8touchgfx15UIEventListener14handleKeyEventEh>:
    /**
     * This handler is invoked when a key (or button) event has been detected by the system.
     *
     * @param  c The key or button pressed.
     */
    virtual void handleKeyEvent(uint8_t c)
 80083fe:	b480      	push	{r7}
 8008400:	b083      	sub	sp, #12
 8008402:	af00      	add	r7, sp, #0
 8008404:	6078      	str	r0, [r7, #4]
 8008406:	460b      	mov	r3, r1
 8008408:	70fb      	strb	r3, [r7, #3]
    {
        (void)c; // Unused variable
    }
 800840a:	bf00      	nop
 800840c:	370c      	adds	r7, #12
 800840e:	46bd      	mov	sp, r7
 8008410:	f85d 7b04 	ldr.w	r7, [sp], #4
 8008414:	4770      	bx	lr

08008416 <_ZN8touchgfx15UIEventListener15handleTickEventEv>:

    /**
     * This handler is invoked when a system tick event has been generated. The system tick
     * period is configured in the HAL.
     */
    virtual void handleTickEvent()
 8008416:	b480      	push	{r7}
 8008418:	b083      	sub	sp, #12
 800841a:	af00      	add	r7, sp, #0
 800841c:	6078      	str	r0, [r7, #4]
    {
    }
 800841e:	bf00      	nop
 8008420:	370c      	adds	r7, #12
 8008422:	46bd      	mov	sp, r7
 8008424:	f85d 7b04 	ldr.w	r7, [sp], #4
 8008428:	4770      	bx	lr

0800842a <_ZN8touchgfx15UIEventListener29handlePendingScreenTransitionEv>:

    /** This handler is invoked when a change screen event is pending. */
    virtual void handlePendingScreenTransition()
 800842a:	b480      	push	{r7}
 800842c:	b083      	sub	sp, #12
 800842e:	af00      	add	r7, sp, #0
 8008430:	6078      	str	r0, [r7, #4]
    {
    }
 8008432:	bf00      	nop
 8008434:	370c      	adds	r7, #12
 8008436:	46bd      	mov	sp, r7
 8008438:	f85d 7b04 	ldr.w	r7, [sp], #4
 800843c:	4770      	bx	lr
	...

08008440 <_ZN8touchgfx15UIEventListenerD1Ev>:

    /** Finalizes an instance of the UIEventListener class. */
    virtual ~UIEventListener()
 8008440:	b480      	push	{r7}
 8008442:	b083      	sub	sp, #12
 8008444:	af00      	add	r7, sp, #0
 8008446:	6078      	str	r0, [r7, #4]
    {
 8008448:	4a04      	ldr	r2, [pc, #16]	@ (800845c <_ZN8touchgfx15UIEventListenerD1Ev+0x1c>)
 800844a:	687b      	ldr	r3, [r7, #4]
 800844c:	601a      	str	r2, [r3, #0]
    }
 800844e:	687b      	ldr	r3, [r7, #4]
 8008450:	4618      	mov	r0, r3
 8008452:	370c      	adds	r7, #12
 8008454:	46bd      	mov	sp, r7
 8008456:	f85d 7b04 	ldr.w	r7, [sp], #4
 800845a:	4770      	bx	lr
 800845c:	08028140 	.word	0x08028140

08008460 <_ZN8touchgfx15UIEventListenerD0Ev>:
    virtual ~UIEventListener()
 8008460:	b580      	push	{r7, lr}
 8008462:	b082      	sub	sp, #8
 8008464:	af00      	add	r7, sp, #0
 8008466:	6078      	str	r0, [r7, #4]
    }
 8008468:	6878      	ldr	r0, [r7, #4]
 800846a:	f7ff ffe9 	bl	8008440 <_ZN8touchgfx15UIEventListenerD1Ev>
 800846e:	2104      	movs	r1, #4
 8008470:	6878      	ldr	r0, [r7, #4]
 8008472:	f01d fb0e 	bl	8025a92 <_ZdlPvj>
 8008476:	687b      	ldr	r3, [r7, #4]
 8008478:	4618      	mov	r0, r3
 800847a:	3708      	adds	r7, #8
 800847c:	46bd      	mov	sp, r7
 800847e:	bd80      	pop	{r7, pc}

08008480 <_ZN8touchgfx11Application19changeToStartScreenEv>:
     * @note The application will not make a complete restart - if
     *       your Model contains data, this will not be reset, unless
     *       this is explicitly done in your
     *       FrontendApplication::changeToStartScreen().
     */
    virtual void changeToStartScreen()
 8008480:	b480      	push	{r7}
 8008482:	b083      	sub	sp, #12
 8008484:	af00      	add	r7, sp, #0
 8008486:	6078      	str	r0, [r7, #4]
    {
    }
 8008488:	bf00      	nop
 800848a:	370c      	adds	r7, #12
 800848c:	46bd      	mov	sp, r7
 800848e:	f85d 7b04 	ldr.w	r7, [sp], #4
 8008492:	4770      	bx	lr

08008494 <_ZN8touchgfx11Application15appSwitchScreenEh>:
     * means to switch screen from places that does not have access to a pointer to the new
     * screen. Base implementation is empty.
     *
     * @param screenId An id that maps to the desired screen.
     */
    virtual void appSwitchScreen(uint8_t screenId)
 8008494:	b480      	push	{r7}
 8008496:	b083      	sub	sp, #12
 8008498:	af00      	add	r7, sp, #0
 800849a:	6078      	str	r0, [r7, #4]
 800849c:	460b      	mov	r3, r1
 800849e:	70fb      	strb	r3, [r7, #3]
    {
        (void)screenId; // Unused variable
    }
 80084a0:	bf00      	nop
 80084a2:	370c      	adds	r7, #12
 80084a4:	46bd      	mov	sp, r7
 80084a6:	f85d 7b04 	ldr.w	r7, [sp], #4
 80084aa:	4770      	bx	lr

080084ac <_ZN8touchgfx11Application13requestRedrawERNS_4RectE>:
    /**
     * An application specific function for requesting redraw of given Rect.
     *
     * @param [in,out] rect The Rect that must be redrawn.
     */
    virtual void requestRedraw(Rect& rect)
 80084ac:	b480      	push	{r7}
 80084ae:	b083      	sub	sp, #12
 80084b0:	af00      	add	r7, sp, #0
 80084b2:	6078      	str	r0, [r7, #4]
 80084b4:	6039      	str	r1, [r7, #0]
    {
        redraw = rect;
 80084b6:	687b      	ldr	r3, [r7, #4]
 80084b8:	683a      	ldr	r2, [r7, #0]
 80084ba:	f503 7398 	add.w	r3, r3, #304	@ 0x130
 80084be:	6810      	ldr	r0, [r2, #0]
 80084c0:	6851      	ldr	r1, [r2, #4]
 80084c2:	c303      	stmia	r3!, {r0, r1}
    }
 80084c4:	bf00      	nop
 80084c6:	370c      	adds	r7, #12
 80084c8:	46bd      	mov	sp, r7
 80084ca:	f85d 7b04 	ldr.w	r7, [sp], #4
 80084ce:	4770      	bx	lr

080084d0 <_ZN8touchgfx11Application20clearAllTimerWidgetsEv>:
        timerWidgets.add(w);
    }

    /** Clears all currently registered timer widgets. */

    void clearAllTimerWidgets()
 80084d0:	b580      	push	{r7, lr}
 80084d2:	b082      	sub	sp, #8
 80084d4:	af00      	add	r7, sp, #0
 80084d6:	6078      	str	r0, [r7, #4]
    {
        timerWidgets.clear();
 80084d8:	687b      	ldr	r3, [r7, #4]
 80084da:	3304      	adds	r3, #4
 80084dc:	4618      	mov	r0, r3
 80084de:	f00b fda4 	bl	801402a <_ZN8touchgfx11Application12TimerWidgets5clearEv>
    }
 80084e2:	bf00      	nop
 80084e4:	3708      	adds	r7, #8
 80084e6:	46bd      	mov	sp, r7
 80084e8:	bd80      	pop	{r7, pc}
	...

080084ec <_ZN8touchgfx15GenericCallbackIvvvED1Ev>:
template <>
class GenericCallback<void>
{
public:
    /** Finalizes an instance of the GenericCallback<void> class. */
    virtual ~GenericCallback()
 80084ec:	b480      	push	{r7}
 80084ee:	b083      	sub	sp, #12
 80084f0:	af00      	add	r7, sp, #0
 80084f2:	6078      	str	r0, [r7, #4]
    {
 80084f4:	4a04      	ldr	r2, [pc, #16]	@ (8008508 <_ZN8touchgfx15GenericCallbackIvvvED1Ev+0x1c>)
 80084f6:	687b      	ldr	r3, [r7, #4]
 80084f8:	601a      	str	r2, [r3, #0]
    }
 80084fa:	687b      	ldr	r3, [r7, #4]
 80084fc:	4618      	mov	r0, r3
 80084fe:	370c      	adds	r7, #12
 8008500:	46bd      	mov	sp, r7
 8008502:	f85d 7b04 	ldr.w	r7, [sp], #4
 8008506:	4770      	bx	lr
 8008508:	08028128 	.word	0x08028128

0800850c <_ZN8touchgfx15GenericCallbackIvvvED0Ev>:
    virtual ~GenericCallback()
 800850c:	b580      	push	{r7, lr}
 800850e:	b082      	sub	sp, #8
 8008510:	af00      	add	r7, sp, #0
 8008512:	6078      	str	r0, [r7, #4]
    }
 8008514:	6878      	ldr	r0, [r7, #4]
 8008516:	f7ff ffe9 	bl	80084ec <_ZN8touchgfx15GenericCallbackIvvvED1Ev>
 800851a:	2104      	movs	r1, #4
 800851c:	6878      	ldr	r0, [r7, #4]
 800851e:	f01d fab8 	bl	8025a92 <_ZdlPvj>
 8008522:	687b      	ldr	r3, [r7, #4]
 8008524:	4618      	mov	r0, r3
 8008526:	3708      	adds	r7, #8
 8008528:	46bd      	mov	sp, r7
 800852a:	bd80      	pop	{r7, pc}

0800852c <_ZN8touchgfx3HAL11getInstanceEv>:
    /**
     * Gets the HAL instance.
     *
     * @return The HAL instance.
     */
    static HAL* getInstance()
 800852c:	b480      	push	{r7}
 800852e:	af00      	add	r7, sp, #0
    {
        return instance;
 8008530:	4b03      	ldr	r3, [pc, #12]	@ (8008540 <_ZN8touchgfx3HAL11getInstanceEv+0x14>)
 8008532:	681b      	ldr	r3, [r3, #0]
    }
 8008534:	4618      	mov	r0, r3
 8008536:	46bd      	mov	sp, r7
 8008538:	f85d 7b04 	ldr.w	r7, [sp], #4
 800853c:	4770      	bx	lr
 800853e:	bf00      	nop
 8008540:	20002fa8 	.word	0x20002fa8

08008544 <_ZN8touchgfx3HAL3lcdEv>:
    /**
     * Gets a reference to the LCD.
     *
     * @return A reference to the LCD.
     */
    static LCD& lcd()
 8008544:	b480      	push	{r7}
 8008546:	af00      	add	r7, sp, #0
    {
        if (instance->useAuxiliaryLCD && instance->auxiliaryLCD)
 8008548:	4b0b      	ldr	r3, [pc, #44]	@ (8008578 <_ZN8touchgfx3HAL3lcdEv+0x34>)
 800854a:	681b      	ldr	r3, [r3, #0]
 800854c:	f893 3058 	ldrb.w	r3, [r3, #88]	@ 0x58
 8008550:	2b00      	cmp	r3, #0
 8008552:	d008      	beq.n	8008566 <_ZN8touchgfx3HAL3lcdEv+0x22>
 8008554:	4b08      	ldr	r3, [pc, #32]	@ (8008578 <_ZN8touchgfx3HAL3lcdEv+0x34>)
 8008556:	681b      	ldr	r3, [r3, #0]
 8008558:	6cdb      	ldr	r3, [r3, #76]	@ 0x4c
 800855a:	2b00      	cmp	r3, #0
 800855c:	d003      	beq.n	8008566 <_ZN8touchgfx3HAL3lcdEv+0x22>
        {
            return *instance->auxiliaryLCD;
 800855e:	4b06      	ldr	r3, [pc, #24]	@ (8008578 <_ZN8touchgfx3HAL3lcdEv+0x34>)
 8008560:	681b      	ldr	r3, [r3, #0]
 8008562:	6cdb      	ldr	r3, [r3, #76]	@ 0x4c
 8008564:	e002      	b.n	800856c <_ZN8touchgfx3HAL3lcdEv+0x28>
        }
        return instance->lcdRef;
 8008566:	4b04      	ldr	r3, [pc, #16]	@ (8008578 <_ZN8touchgfx3HAL3lcdEv+0x34>)
 8008568:	681b      	ldr	r3, [r3, #0]
 800856a:	689b      	ldr	r3, [r3, #8]
    }
 800856c:	4618      	mov	r0, r3
 800856e:	46bd      	mov	sp, r7
 8008570:	f85d 7b04 	ldr.w	r7, [sp], #4
 8008574:	4770      	bx	lr
 8008576:	bf00      	nop
 8008578:	20002fa8 	.word	0x20002fa8

0800857c <_ZN8touchgfx10TransitionC1Ev>:
 */
class Transition
{
public:
    /** Initializes a new instance of the Transition class. */
    Transition()
 800857c:	b480      	push	{r7}
 800857e:	b083      	sub	sp, #12
 8008580:	af00      	add	r7, sp, #0
 8008582:	6078      	str	r0, [r7, #4]
        : screenContainer(0), done(false)
 8008584:	4a07      	ldr	r2, [pc, #28]	@ (80085a4 <_ZN8touchgfx10TransitionC1Ev+0x28>)
 8008586:	687b      	ldr	r3, [r7, #4]
 8008588:	601a      	str	r2, [r3, #0]
 800858a:	687b      	ldr	r3, [r7, #4]
 800858c:	2200      	movs	r2, #0
 800858e:	605a      	str	r2, [r3, #4]
 8008590:	687b      	ldr	r3, [r7, #4]
 8008592:	2200      	movs	r2, #0
 8008594:	721a      	strb	r2, [r3, #8]
    {
    }
 8008596:	687b      	ldr	r3, [r7, #4]
 8008598:	4618      	mov	r0, r3
 800859a:	370c      	adds	r7, #12
 800859c:	46bd      	mov	sp, r7
 800859e:	f85d 7b04 	ldr.w	r7, [sp], #4
 80085a2:	4770      	bx	lr
 80085a4:	08028104 	.word	0x08028104

080085a8 <_ZN8touchgfx10TransitionD1Ev>:

    /** Finalizes an instance of the Transition class. */
    virtual ~Transition()
 80085a8:	b480      	push	{r7}
 80085aa:	b083      	sub	sp, #12
 80085ac:	af00      	add	r7, sp, #0
 80085ae:	6078      	str	r0, [r7, #4]
    {
 80085b0:	4a04      	ldr	r2, [pc, #16]	@ (80085c4 <_ZN8touchgfx10TransitionD1Ev+0x1c>)
 80085b2:	687b      	ldr	r3, [r7, #4]
 80085b4:	601a      	str	r2, [r3, #0]
    }
 80085b6:	687b      	ldr	r3, [r7, #4]
 80085b8:	4618      	mov	r0, r3
 80085ba:	370c      	adds	r7, #12
 80085bc:	46bd      	mov	sp, r7
 80085be:	f85d 7b04 	ldr.w	r7, [sp], #4
 80085c2:	4770      	bx	lr
 80085c4:	08028104 	.word	0x08028104

080085c8 <_ZN8touchgfx10TransitionD0Ev>:
    virtual ~Transition()
 80085c8:	b580      	push	{r7, lr}
 80085ca:	b082      	sub	sp, #8
 80085cc:	af00      	add	r7, sp, #0
 80085ce:	6078      	str	r0, [r7, #4]
    }
 80085d0:	6878      	ldr	r0, [r7, #4]
 80085d2:	f7ff ffe9 	bl	80085a8 <_ZN8touchgfx10TransitionD1Ev>
 80085d6:	210c      	movs	r1, #12
 80085d8:	6878      	ldr	r0, [r7, #4]
 80085da:	f01d fa5a 	bl	8025a92 <_ZdlPvj>
 80085de:	687b      	ldr	r3, [r7, #4]
 80085e0:	4618      	mov	r0, r3
 80085e2:	3708      	adds	r7, #8
 80085e4:	46bd      	mov	sp, r7
 80085e6:	bd80      	pop	{r7, pc}

080085e8 <_ZN8touchgfx10Transition15handleTickEventEv>:

    /** Called for every tick when transitioning. */
    virtual void handleTickEvent()
 80085e8:	b480      	push	{r7}
 80085ea:	b083      	sub	sp, #12
 80085ec:	af00      	add	r7, sp, #0
 80085ee:	6078      	str	r0, [r7, #4]
    {
    }
 80085f0:	bf00      	nop
 80085f2:	370c      	adds	r7, #12
 80085f4:	46bd      	mov	sp, r7
 80085f6:	f85d 7b04 	ldr.w	r7, [sp], #4
 80085fa:	4770      	bx	lr

080085fc <_ZN8touchgfx10Transition8tearDownEv>:

    /**
     * Tears down the Animation. Called before the destructor is called, when the
     * application changes the transition.
     */
    virtual void tearDown()
 80085fc:	b480      	push	{r7}
 80085fe:	b083      	sub	sp, #12
 8008600:	af00      	add	r7, sp, #0
 8008602:	6078      	str	r0, [r7, #4]
    {
    }
 8008604:	bf00      	nop
 8008606:	370c      	adds	r7, #12
 8008608:	46bd      	mov	sp, r7
 800860a:	f85d 7b04 	ldr.w	r7, [sp], #4
 800860e:	4770      	bx	lr

08008610 <_ZN8touchgfx10Transition4initEv>:

    /**
     * Initializes the transition. Called after the constructor is called, when the
     * application changes the transition.
     */
    virtual void init()
 8008610:	b480      	push	{r7}
 8008612:	b083      	sub	sp, #12
 8008614:	af00      	add	r7, sp, #0
 8008616:	6078      	str	r0, [r7, #4]
    {
    }
 8008618:	bf00      	nop
 800861a:	370c      	adds	r7, #12
 800861c:	46bd      	mov	sp, r7
 800861e:	f85d 7b04 	ldr.w	r7, [sp], #4
 8008622:	4770      	bx	lr

08008624 <_ZN8touchgfx10Transition10invalidateEv>:
    /**
     * Invalidates the screen when starting the Transition. Default is
     * to invalidate the whole screen. Subclasses can do partial
     * invalidation.
     */
    virtual void invalidate()
 8008624:	b580      	push	{r7, lr}
 8008626:	b082      	sub	sp, #8
 8008628:	af00      	add	r7, sp, #0
 800862a:	6078      	str	r0, [r7, #4]
    {
        Application::getInstance()->invalidate();
 800862c:	f00b fcd8 	bl	8013fe0 <_ZN8touchgfx11Application11getInstanceEv>
 8008630:	4603      	mov	r3, r0
 8008632:	681a      	ldr	r2, [r3, #0]
 8008634:	323c      	adds	r2, #60	@ 0x3c
 8008636:	6812      	ldr	r2, [r2, #0]
 8008638:	4618      	mov	r0, r3
 800863a:	4790      	blx	r2
    }
 800863c:	bf00      	nop
 800863e:	3708      	adds	r7, #8
 8008640:	46bd      	mov	sp, r7
 8008642:	bd80      	pop	{r7, pc}

08008644 <_ZN8touchgfx10Transition18setScreenContainerERNS_9ContainerE>:
     * Sets the Screen Container. Is used by Screen to enable the transition to access the
     * Container.
     *
     * @param [in] cont The Container the transition should have access to.
     */
    virtual void setScreenContainer(Container& cont)
 8008644:	b480      	push	{r7}
 8008646:	b083      	sub	sp, #12
 8008648:	af00      	add	r7, sp, #0
 800864a:	6078      	str	r0, [r7, #4]
 800864c:	6039      	str	r1, [r7, #0]
    {
        screenContainer = &cont;
 800864e:	687b      	ldr	r3, [r7, #4]
 8008650:	683a      	ldr	r2, [r7, #0]
 8008652:	605a      	str	r2, [r3, #4]
    }
 8008654:	bf00      	nop
 8008656:	370c      	adds	r7, #12
 8008658:	46bd      	mov	sp, r7
 800865a:	f85d 7b04 	ldr.w	r7, [sp], #4
 800865e:	4770      	bx	lr

08008660 <_ZN8touchgfx11ApplicationD1Ev>:
class Application : public UIEventListener
 8008660:	b580      	push	{r7, lr}
 8008662:	b082      	sub	sp, #8
 8008664:	af00      	add	r7, sp, #0
 8008666:	6078      	str	r0, [r7, #4]
 8008668:	4a05      	ldr	r2, [pc, #20]	@ (8008680 <_ZN8touchgfx11ApplicationD1Ev+0x20>)
 800866a:	687b      	ldr	r3, [r7, #4]
 800866c:	601a      	str	r2, [r3, #0]
 800866e:	687b      	ldr	r3, [r7, #4]
 8008670:	4618      	mov	r0, r3
 8008672:	f7ff fee5 	bl	8008440 <_ZN8touchgfx15UIEventListenerD1Ev>
 8008676:	687b      	ldr	r3, [r7, #4]
 8008678:	4618      	mov	r0, r3
 800867a:	3708      	adds	r7, #8
 800867c:	46bd      	mov	sp, r7
 800867e:	bd80      	pop	{r7, pc}
 8008680:	0802943c 	.word	0x0802943c

08008684 <_ZN8touchgfx11ApplicationD0Ev>:
 8008684:	b580      	push	{r7, lr}
 8008686:	b082      	sub	sp, #8
 8008688:	af00      	add	r7, sp, #0
 800868a:	6078      	str	r0, [r7, #4]
 800868c:	6878      	ldr	r0, [r7, #4]
 800868e:	f7ff ffe7 	bl	8008660 <_ZN8touchgfx11ApplicationD1Ev>
 8008692:	f44f 719e 	mov.w	r1, #316	@ 0x13c
 8008696:	6878      	ldr	r0, [r7, #4]
 8008698:	f01d f9fb 	bl	8025a92 <_ZdlPvj>
 800869c:	687b      	ldr	r3, [r7, #4]
 800869e:	4618      	mov	r0, r3
 80086a0:	3708      	adds	r7, #8
 80086a2:	46bd      	mov	sp, r7
 80086a4:	bd80      	pop	{r7, pc}
	...

080086a8 <_ZN8touchgfx14MVPApplicationC1Ev>:
 */
class MVPApplication : public Application
{
public:
    /** Initializes a new instance of the MVPApplication class. */
    MVPApplication()
 80086a8:	b580      	push	{r7, lr}
 80086aa:	b082      	sub	sp, #8
 80086ac:	af00      	add	r7, sp, #0
 80086ae:	6078      	str	r0, [r7, #4]
        : currentPresenter(0),
          pendingScreenTransitionCallback(0)
 80086b0:	687b      	ldr	r3, [r7, #4]
 80086b2:	4618      	mov	r0, r3
 80086b4:	f00b fd56 	bl	8014164 <_ZN8touchgfx11ApplicationC1Ev>
 80086b8:	4a09      	ldr	r2, [pc, #36]	@ (80086e0 <_ZN8touchgfx14MVPApplicationC1Ev+0x38>)
 80086ba:	687b      	ldr	r3, [r7, #4]
 80086bc:	601a      	str	r2, [r3, #0]
        : currentPresenter(0),
 80086be:	687b      	ldr	r3, [r7, #4]
 80086c0:	2200      	movs	r2, #0
 80086c2:	f8c3 213c 	str.w	r2, [r3, #316]	@ 0x13c
          pendingScreenTransitionCallback(0)
 80086c6:	687b      	ldr	r3, [r7, #4]
 80086c8:	2200      	movs	r2, #0
 80086ca:	f8c3 2140 	str.w	r2, [r3, #320]	@ 0x140
    {
        instance = this;
 80086ce:	687b      	ldr	r3, [r7, #4]
 80086d0:	4a04      	ldr	r2, [pc, #16]	@ (80086e4 <_ZN8touchgfx14MVPApplicationC1Ev+0x3c>)
 80086d2:	6013      	str	r3, [r2, #0]
    }
 80086d4:	687b      	ldr	r3, [r7, #4]
 80086d6:	4618      	mov	r0, r3
 80086d8:	3708      	adds	r7, #8
 80086da:	46bd      	mov	sp, r7
 80086dc:	bd80      	pop	{r7, pc}
 80086de:	bf00      	nop
 80086e0:	080280b0 	.word	0x080280b0
 80086e4:	20002ff4 	.word	0x20002ff4

080086e8 <_ZN8touchgfx14MVPApplication29handlePendingScreenTransitionEv>:
    /**
     * Handles the pending screen transition.
     *
     * Delegates the work to evaluatePendingScreenTransition()
     */
    virtual void handlePendingScreenTransition()
 80086e8:	b580      	push	{r7, lr}
 80086ea:	b082      	sub	sp, #8
 80086ec:	af00      	add	r7, sp, #0
 80086ee:	6078      	str	r0, [r7, #4]
    {
        evaluatePendingScreenTransition();
 80086f0:	6878      	ldr	r0, [r7, #4]
 80086f2:	f000 f804 	bl	80086fe <_ZN8touchgfx14MVPApplication31evaluatePendingScreenTransitionEv>
    }
 80086f6:	bf00      	nop
 80086f8:	3708      	adds	r7, #8
 80086fa:	46bd      	mov	sp, r7
 80086fc:	bd80      	pop	{r7, pc}

080086fe <_ZN8touchgfx14MVPApplication31evaluatePendingScreenTransitionEv>:

    /**
     * Evaluates the pending Callback instances. If a callback is valid, it is executed and
     * a Screen transition is executed.
     */
    void evaluatePendingScreenTransition()
 80086fe:	b580      	push	{r7, lr}
 8008700:	b082      	sub	sp, #8
 8008702:	af00      	add	r7, sp, #0
 8008704:	6078      	str	r0, [r7, #4]
    {
        if (pendingScreenTransitionCallback && pendingScreenTransitionCallback->isValid())
 8008706:	687b      	ldr	r3, [r7, #4]
 8008708:	f8d3 3140 	ldr.w	r3, [r3, #320]	@ 0x140
 800870c:	2b00      	cmp	r3, #0
 800870e:	d00f      	beq.n	8008730 <_ZN8touchgfx14MVPApplication31evaluatePendingScreenTransitionEv+0x32>
 8008710:	687b      	ldr	r3, [r7, #4]
 8008712:	f8d3 2140 	ldr.w	r2, [r3, #320]	@ 0x140
 8008716:	687b      	ldr	r3, [r7, #4]
 8008718:	f8d3 3140 	ldr.w	r3, [r3, #320]	@ 0x140
 800871c:	681b      	ldr	r3, [r3, #0]
 800871e:	330c      	adds	r3, #12
 8008720:	681b      	ldr	r3, [r3, #0]
 8008722:	4610      	mov	r0, r2
 8008724:	4798      	blx	r3
 8008726:	4603      	mov	r3, r0
 8008728:	2b00      	cmp	r3, #0
 800872a:	d001      	beq.n	8008730 <_ZN8touchgfx14MVPApplication31evaluatePendingScreenTransitionEv+0x32>
 800872c:	2301      	movs	r3, #1
 800872e:	e000      	b.n	8008732 <_ZN8touchgfx14MVPApplication31evaluatePendingScreenTransitionEv+0x34>
 8008730:	2300      	movs	r3, #0
 8008732:	2b00      	cmp	r3, #0
 8008734:	d00e      	beq.n	8008754 <_ZN8touchgfx14MVPApplication31evaluatePendingScreenTransitionEv+0x56>
        {
            pendingScreenTransitionCallback->execute();
 8008736:	687b      	ldr	r3, [r7, #4]
 8008738:	f8d3 2140 	ldr.w	r2, [r3, #320]	@ 0x140
 800873c:	687b      	ldr	r3, [r7, #4]
 800873e:	f8d3 3140 	ldr.w	r3, [r3, #320]	@ 0x140
 8008742:	681b      	ldr	r3, [r3, #0]
 8008744:	3308      	adds	r3, #8
 8008746:	681b      	ldr	r3, [r3, #0]
 8008748:	4610      	mov	r0, r2
 800874a:	4798      	blx	r3
            pendingScreenTransitionCallback = 0;
 800874c:	687b      	ldr	r3, [r7, #4]
 800874e:	2200      	movs	r2, #0
 8008750:	f8c3 2140 	str.w	r2, [r3, #320]	@ 0x140
        }
    }
 8008754:	bf00      	nop
 8008756:	3708      	adds	r7, #8
 8008758:	46bd      	mov	sp, r7
 800875a:	bd80      	pop	{r7, pc}

0800875c <_ZN5Model4bindEP13ModelListener>:

    /**
     * Sets the modelListener to point to the currently active presenter. Called automatically
     * when switching screen.
     */
    void bind(ModelListener* listener)
 800875c:	b480      	push	{r7}
 800875e:	b083      	sub	sp, #12
 8008760:	af00      	add	r7, sp, #0
 8008762:	6078      	str	r0, [r7, #4]
 8008764:	6039      	str	r1, [r7, #0]
    {
        modelListener = listener;
 8008766:	687b      	ldr	r3, [r7, #4]
 8008768:	683a      	ldr	r2, [r7, #0]
 800876a:	601a      	str	r2, [r3, #0]
    }
 800876c:	bf00      	nop
 800876e:	370c      	adds	r7, #12
 8008770:	46bd      	mov	sp, r7
 8008772:	f85d 7b04 	ldr.w	r7, [sp], #4
 8008776:	4770      	bx	lr

08008778 <_ZN8touchgfx14MVPApplicationD1Ev>:
class MVPApplication : public Application
 8008778:	b580      	push	{r7, lr}
 800877a:	b082      	sub	sp, #8
 800877c:	af00      	add	r7, sp, #0
 800877e:	6078      	str	r0, [r7, #4]
 8008780:	4a05      	ldr	r2, [pc, #20]	@ (8008798 <_ZN8touchgfx14MVPApplicationD1Ev+0x20>)
 8008782:	687b      	ldr	r3, [r7, #4]
 8008784:	601a      	str	r2, [r3, #0]
 8008786:	687b      	ldr	r3, [r7, #4]
 8008788:	4618      	mov	r0, r3
 800878a:	f7ff ff69 	bl	8008660 <_ZN8touchgfx11ApplicationD1Ev>
 800878e:	687b      	ldr	r3, [r7, #4]
 8008790:	4618      	mov	r0, r3
 8008792:	3708      	adds	r7, #8
 8008794:	46bd      	mov	sp, r7
 8008796:	bd80      	pop	{r7, pc}
 8008798:	080280b0 	.word	0x080280b0

0800879c <_ZN8touchgfx14MVPApplicationD0Ev>:
 800879c:	b580      	push	{r7, lr}
 800879e:	b082      	sub	sp, #8
 80087a0:	af00      	add	r7, sp, #0
 80087a2:	6078      	str	r0, [r7, #4]
 80087a4:	6878      	ldr	r0, [r7, #4]
 80087a6:	f7ff ffe7 	bl	8008778 <_ZN8touchgfx14MVPApplicationD1Ev>
 80087aa:	f44f 71a2 	mov.w	r1, #324	@ 0x144
 80087ae:	6878      	ldr	r0, [r7, #4]
 80087b0:	f01d f96f 	bl	8025a92 <_ZdlPvj>
 80087b4:	687b      	ldr	r3, [r7, #4]
 80087b6:	4618      	mov	r0, r3
 80087b8:	3708      	adds	r7, #8
 80087ba:	46bd      	mov	sp, r7
 80087bc:	bd80      	pop	{r7, pc}
	...

080087c0 <_ZN23FrontendApplicationBaseD1Ev>:

class FrontendApplicationBase : public touchgfx::MVPApplication
{
public:
    FrontendApplicationBase(Model& m, FrontendHeap& heap);
    virtual ~FrontendApplicationBase() { }
 80087c0:	b580      	push	{r7, lr}
 80087c2:	b082      	sub	sp, #8
 80087c4:	af00      	add	r7, sp, #0
 80087c6:	6078      	str	r0, [r7, #4]
 80087c8:	4a08      	ldr	r2, [pc, #32]	@ (80087ec <_ZN23FrontendApplicationBaseD1Ev+0x2c>)
 80087ca:	687b      	ldr	r3, [r7, #4]
 80087cc:	601a      	str	r2, [r3, #0]
 80087ce:	687b      	ldr	r3, [r7, #4]
 80087d0:	f503 73a2 	add.w	r3, r3, #324	@ 0x144
 80087d4:	4618      	mov	r0, r3
 80087d6:	f000 ff8f 	bl	80096f8 <_ZN8touchgfx8CallbackI23FrontendApplicationBasevvvED1Ev>
 80087da:	687b      	ldr	r3, [r7, #4]
 80087dc:	4618      	mov	r0, r3
 80087de:	f7ff ffcb 	bl	8008778 <_ZN8touchgfx14MVPApplicationD1Ev>
 80087e2:	687b      	ldr	r3, [r7, #4]
 80087e4:	4618      	mov	r0, r3
 80087e6:	3708      	adds	r7, #8
 80087e8:	46bd      	mov	sp, r7
 80087ea:	bd80      	pop	{r7, pc}
 80087ec:	08028044 	.word	0x08028044

080087f0 <_ZN23FrontendApplicationBaseD0Ev>:
 80087f0:	b580      	push	{r7, lr}
 80087f2:	b082      	sub	sp, #8
 80087f4:	af00      	add	r7, sp, #0
 80087f6:	6078      	str	r0, [r7, #4]
 80087f8:	6878      	ldr	r0, [r7, #4]
 80087fa:	f7ff ffe1 	bl	80087c0 <_ZN23FrontendApplicationBaseD1Ev>
 80087fe:	f44f 71ae 	mov.w	r1, #348	@ 0x15c
 8008802:	6878      	ldr	r0, [r7, #4]
 8008804:	f01d f945 	bl	8025a92 <_ZdlPvj>
 8008808:	687b      	ldr	r3, [r7, #4]
 800880a:	4618      	mov	r0, r3
 800880c:	3708      	adds	r7, #8
 800880e:	46bd      	mov	sp, r7
 8008810:	bd80      	pop	{r7, pc}

08008812 <_ZN23FrontendApplicationBase19changeToStartScreenEv>:

    virtual void changeToStartScreen()
 8008812:	b580      	push	{r7, lr}
 8008814:	b082      	sub	sp, #8
 8008816:	af00      	add	r7, sp, #0
 8008818:	6078      	str	r0, [r7, #4]
    {
        gotoMainScreenNoTransition();
 800881a:	6878      	ldr	r0, [r7, #4]
 800881c:	f000 f95a 	bl	8008ad4 <_ZN23FrontendApplicationBase26gotoMainScreenNoTransitionEv>
    }
 8008820:	bf00      	nop
 8008822:	3708      	adds	r7, #8
 8008824:	46bd      	mov	sp, r7
 8008826:	bd80      	pop	{r7, pc}

08008828 <_ZN8touchgfx12NoTransition15handleTickEventEv>:
 */
class NoTransition : public Transition
{
public:
    /** Indicates that the transition is done after the first tick. */
    virtual void handleTickEvent()
 8008828:	b480      	push	{r7}
 800882a:	b083      	sub	sp, #12
 800882c:	af00      	add	r7, sp, #0
 800882e:	6078      	str	r0, [r7, #4]
    {
        done = true;
 8008830:	687b      	ldr	r3, [r7, #4]
 8008832:	2201      	movs	r2, #1
 8008834:	721a      	strb	r2, [r3, #8]
    }
 8008836:	bf00      	nop
 8008838:	370c      	adds	r7, #12
 800883a:	46bd      	mov	sp, r7
 800883c:	f85d 7b04 	ldr.w	r7, [sp], #4
 8008840:	4770      	bx	lr

08008842 <_ZN13ModelListener4bindEP5Model>:

    /**
     * Sets the model pointer to point to the Model object. Called automatically
     * when switching screen.
     */
    void bind(Model* m)
 8008842:	b480      	push	{r7}
 8008844:	b083      	sub	sp, #12
 8008846:	af00      	add	r7, sp, #0
 8008848:	6078      	str	r0, [r7, #4]
 800884a:	6039      	str	r1, [r7, #0]
    {
        model = m;
 800884c:	687b      	ldr	r3, [r7, #4]
 800884e:	683a      	ldr	r2, [r7, #0]
 8008850:	605a      	str	r2, [r3, #4]
    }
 8008852:	bf00      	nop
 8008854:	370c      	adds	r7, #12
 8008856:	46bd      	mov	sp, r7
 8008858:	f85d 7b04 	ldr.w	r7, [sp], #4
 800885c:	4770      	bx	lr
	...

08008860 <_ZN23FrontendApplicationBaseC1ER5ModelR12FrontendHeap>:
#include <gui/main_screen/MainView.hpp>
#include <gui/main_screen/MainPresenter.hpp>

using namespace touchgfx;

FrontendApplicationBase::FrontendApplicationBase(Model& m, FrontendHeap& heap)
 8008860:	b580      	push	{r7, lr}
 8008862:	b084      	sub	sp, #16
 8008864:	af00      	add	r7, sp, #0
 8008866:	60f8      	str	r0, [r7, #12]
 8008868:	60b9      	str	r1, [r7, #8]
 800886a:	607a      	str	r2, [r7, #4]
    : touchgfx::MVPApplication(),
      transitionCallback(),
      frontendHeap(heap),
      model(m)
 800886c:	68fb      	ldr	r3, [r7, #12]
 800886e:	4618      	mov	r0, r3
 8008870:	f7ff ff1a 	bl	80086a8 <_ZN8touchgfx14MVPApplicationC1Ev>
 8008874:	4a19      	ldr	r2, [pc, #100]	@ (80088dc <_ZN23FrontendApplicationBaseC1ER5ModelR12FrontendHeap+0x7c>)
 8008876:	68fb      	ldr	r3, [r7, #12]
 8008878:	601a      	str	r2, [r3, #0]
      transitionCallback(),
 800887a:	68fb      	ldr	r3, [r7, #12]
 800887c:	f503 73a2 	add.w	r3, r3, #324	@ 0x144
 8008880:	4618      	mov	r0, r3
 8008882:	f000 f97d 	bl	8008b80 <_ZN8touchgfx8CallbackI23FrontendApplicationBasevvvEC1Ev>
      frontendHeap(heap),
 8008886:	68fb      	ldr	r3, [r7, #12]
 8008888:	687a      	ldr	r2, [r7, #4]
 800888a:	f8c3 2154 	str.w	r2, [r3, #340]	@ 0x154
      model(m)
 800888e:	68fb      	ldr	r3, [r7, #12]
 8008890:	68ba      	ldr	r2, [r7, #8]
 8008892:	f8c3 2158 	str.w	r2, [r3, #344]	@ 0x158
{
    touchgfx::HAL::getInstance()->setDisplayOrientation(touchgfx::ORIENTATION_LANDSCAPE);
 8008896:	f7ff fe49 	bl	800852c <_ZN8touchgfx3HAL11getInstanceEv>
 800889a:	4603      	mov	r3, r0
 800889c:	681a      	ldr	r2, [r3, #0]
 800889e:	3208      	adds	r2, #8
 80088a0:	6812      	ldr	r2, [r2, #0]
 80088a2:	2100      	movs	r1, #0
 80088a4:	4618      	mov	r0, r3
 80088a6:	4790      	blx	r2
    touchgfx::Texts::setLanguage(GB);
 80088a8:	2000      	movs	r0, #0
 80088aa:	f004 ff89 	bl	800d7c0 <_ZN8touchgfx5Texts11setLanguageEt>
    reinterpret_cast<touchgfx::LCD16bpp&>(touchgfx::HAL::lcd()).enableTextureMapperAll();
 80088ae:	f7ff fe49 	bl	8008544 <_ZN8touchgfx3HAL3lcdEv>
 80088b2:	4603      	mov	r3, r0
 80088b4:	4618      	mov	r0, r3
 80088b6:	f015 fd54 	bl	801e362 <_ZN8touchgfx8LCD16bpp22enableTextureMapperAllEv>
    reinterpret_cast<touchgfx::LCD16bpp&>(touchgfx::HAL::lcd()).enableDecompressorL8_All();
 80088ba:	f7ff fe43 	bl	8008544 <_ZN8touchgfx3HAL3lcdEv>
 80088be:	4603      	mov	r3, r0
 80088c0:	4618      	mov	r0, r3
 80088c2:	f015 fdc9 	bl	801e458 <_ZN8touchgfx8LCD16bpp24enableDecompressorL8_AllEv>
    reinterpret_cast<touchgfx::LCD16bpp&>(touchgfx::HAL::lcd()).enableDecompressorRGB();
 80088c6:	f7ff fe3d 	bl	8008544 <_ZN8touchgfx3HAL3lcdEv>
 80088ca:	4603      	mov	r3, r0
 80088cc:	4618      	mov	r0, r3
 80088ce:	f015 fdcf 	bl	801e470 <_ZN8touchgfx8LCD16bpp21enableDecompressorRGBEv>
}
 80088d2:	68fb      	ldr	r3, [r7, #12]
 80088d4:	4618      	mov	r0, r3
 80088d6:	3710      	adds	r7, #16
 80088d8:	46bd      	mov	sp, r7
 80088da:	bd80      	pop	{r7, pc}
 80088dc:	08028044 	.word	0x08028044

080088e0 <_ZN8touchgfx15GenericCallbackIvvvEaSERKS1_>:
class GenericCallback<void>
 80088e0:	b480      	push	{r7}
 80088e2:	b083      	sub	sp, #12
 80088e4:	af00      	add	r7, sp, #0
 80088e6:	6078      	str	r0, [r7, #4]
 80088e8:	6039      	str	r1, [r7, #0]
 80088ea:	687b      	ldr	r3, [r7, #4]
 80088ec:	4618      	mov	r0, r3
 80088ee:	370c      	adds	r7, #12
 80088f0:	46bd      	mov	sp, r7
 80088f2:	f85d 7b04 	ldr.w	r7, [sp], #4
 80088f6:	4770      	bx	lr

080088f8 <_ZN8touchgfx8CallbackI23FrontendApplicationBasevvvEaSEOS2_>:
 *
 * @note The member function to call must return void. The function can have zero, one, two or
 *       three arguments of any type.
 */
template <class dest_type>
struct Callback<dest_type, void, void, void> : public GenericCallback<>
 80088f8:	b580      	push	{r7, lr}
 80088fa:	b082      	sub	sp, #8
 80088fc:	af00      	add	r7, sp, #0
 80088fe:	6078      	str	r0, [r7, #4]
 8008900:	6039      	str	r1, [r7, #0]
 8008902:	687b      	ldr	r3, [r7, #4]
 8008904:	683a      	ldr	r2, [r7, #0]
 8008906:	4611      	mov	r1, r2
 8008908:	4618      	mov	r0, r3
 800890a:	f7ff ffe9 	bl	80088e0 <_ZN8touchgfx15GenericCallbackIvvvEaSERKS1_>
 800890e:	683b      	ldr	r3, [r7, #0]
 8008910:	685a      	ldr	r2, [r3, #4]
 8008912:	687b      	ldr	r3, [r7, #4]
 8008914:	605a      	str	r2, [r3, #4]
 8008916:	687b      	ldr	r3, [r7, #4]
 8008918:	683a      	ldr	r2, [r7, #0]
 800891a:	3308      	adds	r3, #8
 800891c:	3208      	adds	r2, #8
 800891e:	e892 0003 	ldmia.w	r2, {r0, r1}
 8008922:	e883 0003 	stmia.w	r3, {r0, r1}
 8008926:	687b      	ldr	r3, [r7, #4]
 8008928:	4618      	mov	r0, r3
 800892a:	3708      	adds	r7, #8
 800892c:	46bd      	mov	sp, r7
 800892e:	bd80      	pop	{r7, pc}

08008930 <_ZN23FrontendApplicationBase37gotohumidity_screenScreenNoTransitionEv>:
 */

// humidity_screen

void FrontendApplicationBase::gotohumidity_screenScreenNoTransition()
{
 8008930:	b590      	push	{r4, r7, lr}
 8008932:	b089      	sub	sp, #36	@ 0x24
 8008934:	af00      	add	r7, sp, #0
 8008936:	6078      	str	r0, [r7, #4]
    transitionCallback = touchgfx::Callback<FrontendApplicationBase>(this, &FrontendApplicationBase::gotohumidity_screenScreenNoTransitionImpl);
 8008938:	687b      	ldr	r3, [r7, #4]
 800893a:	f503 74a2 	add.w	r4, r3, #324	@ 0x144
 800893e:	4b10      	ldr	r3, [pc, #64]	@ (8008980 <_ZN23FrontendApplicationBase37gotohumidity_screenScreenNoTransitionEv+0x50>)
 8008940:	61bb      	str	r3, [r7, #24]
 8008942:	2300      	movs	r3, #0
 8008944:	61fb      	str	r3, [r7, #28]
 8008946:	f107 0008 	add.w	r0, r7, #8
 800894a:	f107 0318 	add.w	r3, r7, #24
 800894e:	cb0c      	ldmia	r3, {r2, r3}
 8008950:	6879      	ldr	r1, [r7, #4]
 8008952:	f000 f931 	bl	8008bb8 <_ZN8touchgfx8CallbackI23FrontendApplicationBasevvvEC1EPS1_MS1_FvvE>
 8008956:	f107 0308 	add.w	r3, r7, #8
 800895a:	4619      	mov	r1, r3
 800895c:	4620      	mov	r0, r4
 800895e:	f7ff ffcb 	bl	80088f8 <_ZN8touchgfx8CallbackI23FrontendApplicationBasevvvEaSEOS2_>
 8008962:	f107 0308 	add.w	r3, r7, #8
 8008966:	4618      	mov	r0, r3
 8008968:	f000 fec6 	bl	80096f8 <_ZN8touchgfx8CallbackI23FrontendApplicationBasevvvED1Ev>
    pendingScreenTransitionCallback = &transitionCallback;
 800896c:	687b      	ldr	r3, [r7, #4]
 800896e:	f503 72a2 	add.w	r2, r3, #324	@ 0x144
 8008972:	687b      	ldr	r3, [r7, #4]
 8008974:	f8c3 2140 	str.w	r2, [r3, #320]	@ 0x140
}
 8008978:	bf00      	nop
 800897a:	3724      	adds	r7, #36	@ 0x24
 800897c:	46bd      	mov	sp, r7
 800897e:	bd90      	pop	{r4, r7, pc}
 8008980:	08008985 	.word	0x08008985

08008984 <_ZN23FrontendApplicationBase41gotohumidity_screenScreenNoTransitionImplEv>:

void FrontendApplicationBase::gotohumidity_screenScreenNoTransitionImpl()
{
 8008984:	b580      	push	{r7, lr}
 8008986:	b084      	sub	sp, #16
 8008988:	af02      	add	r7, sp, #8
 800898a:	6078      	str	r0, [r7, #4]
    touchgfx::makeTransition<humidity_screenView, humidity_screenPresenter, touchgfx::NoTransition, Model >(&currentScreen, &currentPresenter, frontendHeap, &currentTransition, &model);
 800898c:	687b      	ldr	r3, [r7, #4]
 800898e:	f503 719e 	add.w	r1, r3, #316	@ 0x13c
 8008992:	687b      	ldr	r3, [r7, #4]
 8008994:	f8d3 3154 	ldr.w	r3, [r3, #340]	@ 0x154
 8008998:	461a      	mov	r2, r3
 800899a:	687b      	ldr	r3, [r7, #4]
 800899c:	f8d3 3158 	ldr.w	r3, [r3, #344]	@ 0x158
 80089a0:	9300      	str	r3, [sp, #0]
 80089a2:	4b04      	ldr	r3, [pc, #16]	@ (80089b4 <_ZN23FrontendApplicationBase41gotohumidity_screenScreenNoTransitionImplEv+0x30>)
 80089a4:	4804      	ldr	r0, [pc, #16]	@ (80089b8 <_ZN23FrontendApplicationBase41gotohumidity_screenScreenNoTransitionImplEv+0x34>)
 80089a6:	f000 f939 	bl	8008c1c <_ZN8touchgfx14makeTransitionI19humidity_screenView24humidity_screenPresenterNS_12NoTransitionE5ModelEEPT0_PPNS_6ScreenEPPNS_9PresenterERNS_7MVPHeapEPPNS_10TransitionEPT2_>
}
 80089aa:	bf00      	nop
 80089ac:	3708      	adds	r7, #8
 80089ae:	46bd      	mov	sp, r7
 80089b0:	bd80      	pop	{r7, pc}
 80089b2:	bf00      	nop
 80089b4:	20002fe8 	.word	0x20002fe8
 80089b8:	20002fe4 	.word	0x20002fe4

080089bc <_ZN23FrontendApplicationBase40gototemperature_screenScreenNoTransitionEv>:

// temperature_screen

void FrontendApplicationBase::gototemperature_screenScreenNoTransition()
{
 80089bc:	b590      	push	{r4, r7, lr}
 80089be:	b089      	sub	sp, #36	@ 0x24
 80089c0:	af00      	add	r7, sp, #0
 80089c2:	6078      	str	r0, [r7, #4]
    transitionCallback = touchgfx::Callback<FrontendApplicationBase>(this, &FrontendApplicationBase::gototemperature_screenScreenNoTransitionImpl);
 80089c4:	687b      	ldr	r3, [r7, #4]
 80089c6:	f503 74a2 	add.w	r4, r3, #324	@ 0x144
 80089ca:	4b10      	ldr	r3, [pc, #64]	@ (8008a0c <_ZN23FrontendApplicationBase40gototemperature_screenScreenNoTransitionEv+0x50>)
 80089cc:	61bb      	str	r3, [r7, #24]
 80089ce:	2300      	movs	r3, #0
 80089d0:	61fb      	str	r3, [r7, #28]
 80089d2:	f107 0008 	add.w	r0, r7, #8
 80089d6:	f107 0318 	add.w	r3, r7, #24
 80089da:	cb0c      	ldmia	r3, {r2, r3}
 80089dc:	6879      	ldr	r1, [r7, #4]
 80089de:	f000 f8eb 	bl	8008bb8 <_ZN8touchgfx8CallbackI23FrontendApplicationBasevvvEC1EPS1_MS1_FvvE>
 80089e2:	f107 0308 	add.w	r3, r7, #8
 80089e6:	4619      	mov	r1, r3
 80089e8:	4620      	mov	r0, r4
 80089ea:	f7ff ff85 	bl	80088f8 <_ZN8touchgfx8CallbackI23FrontendApplicationBasevvvEaSEOS2_>
 80089ee:	f107 0308 	add.w	r3, r7, #8
 80089f2:	4618      	mov	r0, r3
 80089f4:	f000 fe80 	bl	80096f8 <_ZN8touchgfx8CallbackI23FrontendApplicationBasevvvED1Ev>
    pendingScreenTransitionCallback = &transitionCallback;
 80089f8:	687b      	ldr	r3, [r7, #4]
 80089fa:	f503 72a2 	add.w	r2, r3, #324	@ 0x144
 80089fe:	687b      	ldr	r3, [r7, #4]
 8008a00:	f8c3 2140 	str.w	r2, [r3, #320]	@ 0x140
}
 8008a04:	bf00      	nop
 8008a06:	3724      	adds	r7, #36	@ 0x24
 8008a08:	46bd      	mov	sp, r7
 8008a0a:	bd90      	pop	{r4, r7, pc}
 8008a0c:	08008a11 	.word	0x08008a11

08008a10 <_ZN23FrontendApplicationBase44gototemperature_screenScreenNoTransitionImplEv>:

void FrontendApplicationBase::gototemperature_screenScreenNoTransitionImpl()
{
 8008a10:	b580      	push	{r7, lr}
 8008a12:	b084      	sub	sp, #16
 8008a14:	af02      	add	r7, sp, #8
 8008a16:	6078      	str	r0, [r7, #4]
    touchgfx::makeTransition<temperature_screenView, temperature_screenPresenter, touchgfx::NoTransition, Model >(&currentScreen, &currentPresenter, frontendHeap, &currentTransition, &model);
 8008a18:	687b      	ldr	r3, [r7, #4]
 8008a1a:	f503 719e 	add.w	r1, r3, #316	@ 0x13c
 8008a1e:	687b      	ldr	r3, [r7, #4]
 8008a20:	f8d3 3154 	ldr.w	r3, [r3, #340]	@ 0x154
 8008a24:	461a      	mov	r2, r3
 8008a26:	687b      	ldr	r3, [r7, #4]
 8008a28:	f8d3 3158 	ldr.w	r3, [r3, #344]	@ 0x158
 8008a2c:	9300      	str	r3, [sp, #0]
 8008a2e:	4b04      	ldr	r3, [pc, #16]	@ (8008a40 <_ZN23FrontendApplicationBase44gototemperature_screenScreenNoTransitionImplEv+0x30>)
 8008a30:	4804      	ldr	r0, [pc, #16]	@ (8008a44 <_ZN23FrontendApplicationBase44gototemperature_screenScreenNoTransitionImplEv+0x34>)
 8008a32:	f000 fa0d 	bl	8008e50 <_ZN8touchgfx14makeTransitionI22temperature_screenView27temperature_screenPresenterNS_12NoTransitionE5ModelEEPT0_PPNS_6ScreenEPPNS_9PresenterERNS_7MVPHeapEPPNS_10TransitionEPT2_>
}
 8008a36:	bf00      	nop
 8008a38:	3708      	adds	r7, #8
 8008a3a:	46bd      	mov	sp, r7
 8008a3c:	bd80      	pop	{r7, pc}
 8008a3e:	bf00      	nop
 8008a40:	20002fe8 	.word	0x20002fe8
 8008a44:	20002fe4 	.word	0x20002fe4

08008a48 <_ZN23FrontendApplicationBase34gotolight_screenScreenNoTransitionEv>:

// light_screen

void FrontendApplicationBase::gotolight_screenScreenNoTransition()
{
 8008a48:	b590      	push	{r4, r7, lr}
 8008a4a:	b089      	sub	sp, #36	@ 0x24
 8008a4c:	af00      	add	r7, sp, #0
 8008a4e:	6078      	str	r0, [r7, #4]
    transitionCallback = touchgfx::Callback<FrontendApplicationBase>(this, &FrontendApplicationBase::gotolight_screenScreenNoTransitionImpl);
 8008a50:	687b      	ldr	r3, [r7, #4]
 8008a52:	f503 74a2 	add.w	r4, r3, #324	@ 0x144
 8008a56:	4b10      	ldr	r3, [pc, #64]	@ (8008a98 <_ZN23FrontendApplicationBase34gotolight_screenScreenNoTransitionEv+0x50>)
 8008a58:	61bb      	str	r3, [r7, #24]
 8008a5a:	2300      	movs	r3, #0
 8008a5c:	61fb      	str	r3, [r7, #28]
 8008a5e:	f107 0008 	add.w	r0, r7, #8
 8008a62:	f107 0318 	add.w	r3, r7, #24
 8008a66:	cb0c      	ldmia	r3, {r2, r3}
 8008a68:	6879      	ldr	r1, [r7, #4]
 8008a6a:	f000 f8a5 	bl	8008bb8 <_ZN8touchgfx8CallbackI23FrontendApplicationBasevvvEC1EPS1_MS1_FvvE>
 8008a6e:	f107 0308 	add.w	r3, r7, #8
 8008a72:	4619      	mov	r1, r3
 8008a74:	4620      	mov	r0, r4
 8008a76:	f7ff ff3f 	bl	80088f8 <_ZN8touchgfx8CallbackI23FrontendApplicationBasevvvEaSEOS2_>
 8008a7a:	f107 0308 	add.w	r3, r7, #8
 8008a7e:	4618      	mov	r0, r3
 8008a80:	f000 fe3a 	bl	80096f8 <_ZN8touchgfx8CallbackI23FrontendApplicationBasevvvED1Ev>
    pendingScreenTransitionCallback = &transitionCallback;
 8008a84:	687b      	ldr	r3, [r7, #4]
 8008a86:	f503 72a2 	add.w	r2, r3, #324	@ 0x144
 8008a8a:	687b      	ldr	r3, [r7, #4]
 8008a8c:	f8c3 2140 	str.w	r2, [r3, #320]	@ 0x140
}
 8008a90:	bf00      	nop
 8008a92:	3724      	adds	r7, #36	@ 0x24
 8008a94:	46bd      	mov	sp, r7
 8008a96:	bd90      	pop	{r4, r7, pc}
 8008a98:	08008a9d 	.word	0x08008a9d

08008a9c <_ZN23FrontendApplicationBase38gotolight_screenScreenNoTransitionImplEv>:

void FrontendApplicationBase::gotolight_screenScreenNoTransitionImpl()
{
 8008a9c:	b580      	push	{r7, lr}
 8008a9e:	b084      	sub	sp, #16
 8008aa0:	af02      	add	r7, sp, #8
 8008aa2:	6078      	str	r0, [r7, #4]
    touchgfx::makeTransition<light_screenView, light_screenPresenter, touchgfx::NoTransition, Model >(&currentScreen, &currentPresenter, frontendHeap, &currentTransition, &model);
 8008aa4:	687b      	ldr	r3, [r7, #4]
 8008aa6:	f503 719e 	add.w	r1, r3, #316	@ 0x13c
 8008aaa:	687b      	ldr	r3, [r7, #4]
 8008aac:	f8d3 3154 	ldr.w	r3, [r3, #340]	@ 0x154
 8008ab0:	461a      	mov	r2, r3
 8008ab2:	687b      	ldr	r3, [r7, #4]
 8008ab4:	f8d3 3158 	ldr.w	r3, [r3, #344]	@ 0x158
 8008ab8:	9300      	str	r3, [sp, #0]
 8008aba:	4b04      	ldr	r3, [pc, #16]	@ (8008acc <_ZN23FrontendApplicationBase38gotolight_screenScreenNoTransitionImplEv+0x30>)
 8008abc:	4804      	ldr	r0, [pc, #16]	@ (8008ad0 <_ZN23FrontendApplicationBase38gotolight_screenScreenNoTransitionImplEv+0x34>)
 8008abe:	f000 fae1 	bl	8009084 <_ZN8touchgfx14makeTransitionI16light_screenView21light_screenPresenterNS_12NoTransitionE5ModelEEPT0_PPNS_6ScreenEPPNS_9PresenterERNS_7MVPHeapEPPNS_10TransitionEPT2_>
}
 8008ac2:	bf00      	nop
 8008ac4:	3708      	adds	r7, #8
 8008ac6:	46bd      	mov	sp, r7
 8008ac8:	bd80      	pop	{r7, pc}
 8008aca:	bf00      	nop
 8008acc:	20002fe8 	.word	0x20002fe8
 8008ad0:	20002fe4 	.word	0x20002fe4

08008ad4 <_ZN23FrontendApplicationBase26gotoMainScreenNoTransitionEv>:

// Main

void FrontendApplicationBase::gotoMainScreenNoTransition()
{
 8008ad4:	b590      	push	{r4, r7, lr}
 8008ad6:	b089      	sub	sp, #36	@ 0x24
 8008ad8:	af00      	add	r7, sp, #0
 8008ada:	6078      	str	r0, [r7, #4]
    transitionCallback = touchgfx::Callback<FrontendApplicationBase>(this, &FrontendApplicationBase::gotoMainScreenNoTransitionImpl);
 8008adc:	687b      	ldr	r3, [r7, #4]
 8008ade:	f503 74a2 	add.w	r4, r3, #324	@ 0x144
 8008ae2:	4b10      	ldr	r3, [pc, #64]	@ (8008b24 <_ZN23FrontendApplicationBase26gotoMainScreenNoTransitionEv+0x50>)
 8008ae4:	61bb      	str	r3, [r7, #24]
 8008ae6:	2300      	movs	r3, #0
 8008ae8:	61fb      	str	r3, [r7, #28]
 8008aea:	f107 0008 	add.w	r0, r7, #8
 8008aee:	f107 0318 	add.w	r3, r7, #24
 8008af2:	cb0c      	ldmia	r3, {r2, r3}
 8008af4:	6879      	ldr	r1, [r7, #4]
 8008af6:	f000 f85f 	bl	8008bb8 <_ZN8touchgfx8CallbackI23FrontendApplicationBasevvvEC1EPS1_MS1_FvvE>
 8008afa:	f107 0308 	add.w	r3, r7, #8
 8008afe:	4619      	mov	r1, r3
 8008b00:	4620      	mov	r0, r4
 8008b02:	f7ff fef9 	bl	80088f8 <_ZN8touchgfx8CallbackI23FrontendApplicationBasevvvEaSEOS2_>
 8008b06:	f107 0308 	add.w	r3, r7, #8
 8008b0a:	4618      	mov	r0, r3
 8008b0c:	f000 fdf4 	bl	80096f8 <_ZN8touchgfx8CallbackI23FrontendApplicationBasevvvED1Ev>
    pendingScreenTransitionCallback = &transitionCallback;
 8008b10:	687b      	ldr	r3, [r7, #4]
 8008b12:	f503 72a2 	add.w	r2, r3, #324	@ 0x144
 8008b16:	687b      	ldr	r3, [r7, #4]
 8008b18:	f8c3 2140 	str.w	r2, [r3, #320]	@ 0x140
}
 8008b1c:	bf00      	nop
 8008b1e:	3724      	adds	r7, #36	@ 0x24
 8008b20:	46bd      	mov	sp, r7
 8008b22:	bd90      	pop	{r4, r7, pc}
 8008b24:	08008b29 	.word	0x08008b29

08008b28 <_ZN23FrontendApplicationBase30gotoMainScreenNoTransitionImplEv>:

void FrontendApplicationBase::gotoMainScreenNoTransitionImpl()
{
 8008b28:	b580      	push	{r7, lr}
 8008b2a:	b084      	sub	sp, #16
 8008b2c:	af02      	add	r7, sp, #8
 8008b2e:	6078      	str	r0, [r7, #4]
    touchgfx::makeTransition<MainView, MainPresenter, touchgfx::NoTransition, Model >(&currentScreen, &currentPresenter, frontendHeap, &currentTransition, &model);
 8008b30:	687b      	ldr	r3, [r7, #4]
 8008b32:	f503 719e 	add.w	r1, r3, #316	@ 0x13c
 8008b36:	687b      	ldr	r3, [r7, #4]
 8008b38:	f8d3 3154 	ldr.w	r3, [r3, #340]	@ 0x154
 8008b3c:	461a      	mov	r2, r3
 8008b3e:	687b      	ldr	r3, [r7, #4]
 8008b40:	f8d3 3158 	ldr.w	r3, [r3, #344]	@ 0x158
 8008b44:	9300      	str	r3, [sp, #0]
 8008b46:	4b04      	ldr	r3, [pc, #16]	@ (8008b58 <_ZN23FrontendApplicationBase30gotoMainScreenNoTransitionImplEv+0x30>)
 8008b48:	4804      	ldr	r0, [pc, #16]	@ (8008b5c <_ZN23FrontendApplicationBase30gotoMainScreenNoTransitionImplEv+0x34>)
 8008b4a:	f000 fbb5 	bl	80092b8 <_ZN8touchgfx14makeTransitionI8MainView13MainPresenterNS_12NoTransitionE5ModelEEPT0_PPNS_6ScreenEPPNS_9PresenterERNS_7MVPHeapEPPNS_10TransitionEPT2_>
}
 8008b4e:	bf00      	nop
 8008b50:	3708      	adds	r7, #8
 8008b52:	46bd      	mov	sp, r7
 8008b54:	bd80      	pop	{r7, pc}
 8008b56:	bf00      	nop
 8008b58:	20002fe8 	.word	0x20002fe8
 8008b5c:	20002fe4 	.word	0x20002fe4

08008b60 <_ZN8touchgfx15GenericCallbackIvvvEC1Ev>:
class GenericCallback<void>
 8008b60:	b480      	push	{r7}
 8008b62:	b083      	sub	sp, #12
 8008b64:	af00      	add	r7, sp, #0
 8008b66:	6078      	str	r0, [r7, #4]
 8008b68:	4a04      	ldr	r2, [pc, #16]	@ (8008b7c <_ZN8touchgfx15GenericCallbackIvvvEC1Ev+0x1c>)
 8008b6a:	687b      	ldr	r3, [r7, #4]
 8008b6c:	601a      	str	r2, [r3, #0]
 8008b6e:	687b      	ldr	r3, [r7, #4]
 8008b70:	4618      	mov	r0, r3
 8008b72:	370c      	adds	r7, #12
 8008b74:	46bd      	mov	sp, r7
 8008b76:	f85d 7b04 	ldr.w	r7, [sp], #4
 8008b7a:	4770      	bx	lr
 8008b7c:	08028128 	.word	0x08028128

08008b80 <_ZN8touchgfx8CallbackI23FrontendApplicationBasevvvEC1Ev>:
{
    /** Initializes a new instance of the Callback class. */
    Callback()
 8008b80:	b580      	push	{r7, lr}
 8008b82:	b082      	sub	sp, #8
 8008b84:	af00      	add	r7, sp, #0
 8008b86:	6078      	str	r0, [r7, #4]
        : pobject(0), pmemfun(0)
 8008b88:	687b      	ldr	r3, [r7, #4]
 8008b8a:	4618      	mov	r0, r3
 8008b8c:	f7ff ffe8 	bl	8008b60 <_ZN8touchgfx15GenericCallbackIvvvEC1Ev>
 8008b90:	4a08      	ldr	r2, [pc, #32]	@ (8008bb4 <_ZN8touchgfx8CallbackI23FrontendApplicationBasevvvEC1Ev+0x34>)
 8008b92:	687b      	ldr	r3, [r7, #4]
 8008b94:	601a      	str	r2, [r3, #0]
 8008b96:	687b      	ldr	r3, [r7, #4]
 8008b98:	2200      	movs	r2, #0
 8008b9a:	605a      	str	r2, [r3, #4]
 8008b9c:	687b      	ldr	r3, [r7, #4]
 8008b9e:	2200      	movs	r2, #0
 8008ba0:	609a      	str	r2, [r3, #8]
 8008ba2:	687b      	ldr	r3, [r7, #4]
 8008ba4:	2200      	movs	r2, #0
 8008ba6:	60da      	str	r2, [r3, #12]
    {
    }
 8008ba8:	687b      	ldr	r3, [r7, #4]
 8008baa:	4618      	mov	r0, r3
 8008bac:	3708      	adds	r7, #8
 8008bae:	46bd      	mov	sp, r7
 8008bb0:	bd80      	pop	{r7, pc}
 8008bb2:	bf00      	nop
 8008bb4:	08028098 	.word	0x08028098

08008bb8 <_ZN8touchgfx8CallbackI23FrontendApplicationBasevvvEC1EPS1_MS1_FvvE>:
     *
     * @param [in] pObject   Pointer to the object on which the function should be called.
     * @param [in] pmemfun_0 Address of member function. This is the version where function takes zero
     *                       arguments.
     */
    Callback(dest_type* pObject, void (dest_type::*pmemfun_0)())
 8008bb8:	b580      	push	{r7, lr}
 8008bba:	b084      	sub	sp, #16
 8008bbc:	af00      	add	r7, sp, #0
 8008bbe:	60f8      	str	r0, [r7, #12]
 8008bc0:	60b9      	str	r1, [r7, #8]
 8008bc2:	4639      	mov	r1, r7
 8008bc4:	e881 000c 	stmia.w	r1, {r2, r3}
        : pobject(pObject), pmemfun(pmemfun_0)
 8008bc8:	68fb      	ldr	r3, [r7, #12]
 8008bca:	4618      	mov	r0, r3
 8008bcc:	f7ff ffc8 	bl	8008b60 <_ZN8touchgfx15GenericCallbackIvvvEC1Ev>
 8008bd0:	4a08      	ldr	r2, [pc, #32]	@ (8008bf4 <_ZN8touchgfx8CallbackI23FrontendApplicationBasevvvEC1EPS1_MS1_FvvE+0x3c>)
 8008bd2:	68fb      	ldr	r3, [r7, #12]
 8008bd4:	601a      	str	r2, [r3, #0]
 8008bd6:	68fb      	ldr	r3, [r7, #12]
 8008bd8:	68ba      	ldr	r2, [r7, #8]
 8008bda:	605a      	str	r2, [r3, #4]
 8008bdc:	68fb      	ldr	r3, [r7, #12]
 8008bde:	3308      	adds	r3, #8
 8008be0:	463a      	mov	r2, r7
 8008be2:	e892 0003 	ldmia.w	r2, {r0, r1}
 8008be6:	e883 0003 	stmia.w	r3, {r0, r1}
    {
    }
 8008bea:	68fb      	ldr	r3, [r7, #12]
 8008bec:	4618      	mov	r0, r3
 8008bee:	3710      	adds	r7, #16
 8008bf0:	46bd      	mov	sp, r7
 8008bf2:	bd80      	pop	{r7, pc}
 8008bf4:	08028098 	.word	0x08028098

08008bf8 <_ZN8touchgfx12NoTransitionC1Ev>:
class NoTransition : public Transition
 8008bf8:	b580      	push	{r7, lr}
 8008bfa:	b082      	sub	sp, #8
 8008bfc:	af00      	add	r7, sp, #0
 8008bfe:	6078      	str	r0, [r7, #4]
 8008c00:	687b      	ldr	r3, [r7, #4]
 8008c02:	4618      	mov	r0, r3
 8008c04:	f7ff fcba 	bl	800857c <_ZN8touchgfx10TransitionC1Ev>
 8008c08:	4a03      	ldr	r2, [pc, #12]	@ (8008c18 <_ZN8touchgfx12NoTransitionC1Ev+0x20>)
 8008c0a:	687b      	ldr	r3, [r7, #4]
 8008c0c:	601a      	str	r2, [r3, #0]
 8008c0e:	687b      	ldr	r3, [r7, #4]
 8008c10:	4618      	mov	r0, r3
 8008c12:	3708      	adds	r7, #8
 8008c14:	46bd      	mov	sp, r7
 8008c16:	bd80      	pop	{r7, pc}
 8008c18:	08028020 	.word	0x08028020

08008c1c <_ZN8touchgfx14makeTransitionI19humidity_screenView24humidity_screenPresenterNS_12NoTransitionE5ModelEEPT0_PPNS_6ScreenEPPNS_9PresenterERNS_7MVPHeapEPPNS_10TransitionEPT2_>:
 *
 * @return Pointer to the new Presenter of the requested type. Incidentally it will be the same
 *         value as the old presenter due to memory reuse.
 */
template <class ScreenType, class PresenterType, class TransType, class ModelType>
PresenterType* makeTransition(Screen** currentScreen, Presenter** currentPresenter, MVPHeap& heap, Transition** currentTrans, ModelType* model)
 8008c1c:	b590      	push	{r4, r7, lr}
 8008c1e:	b08f      	sub	sp, #60	@ 0x3c
 8008c20:	af00      	add	r7, sp, #0
 8008c22:	60f8      	str	r0, [r7, #12]
 8008c24:	60b9      	str	r1, [r7, #8]
 8008c26:	607a      	str	r2, [r7, #4]
 8008c28:	603b      	str	r3, [r7, #0]
{
    assert(sizeof(ScreenType) <= heap.screenStorage.element_size() && "View allocation error: Check that all views are added to FrontendHeap::ViewTypes");
 8008c2a:	687b      	ldr	r3, [r7, #4]
 8008c2c:	689a      	ldr	r2, [r3, #8]
 8008c2e:	687b      	ldr	r3, [r7, #4]
 8008c30:	689b      	ldr	r3, [r3, #8]
 8008c32:	681b      	ldr	r3, [r3, #0]
 8008c34:	3320      	adds	r3, #32
 8008c36:	681b      	ldr	r3, [r3, #0]
 8008c38:	4610      	mov	r0, r2
 8008c3a:	4798      	blx	r3
 8008c3c:	4603      	mov	r3, r0
 8008c3e:	f5b3 7f09 	cmp.w	r3, #548	@ 0x224
 8008c42:	d205      	bcs.n	8008c50 <_ZN8touchgfx14makeTransitionI19humidity_screenView24humidity_screenPresenterNS_12NoTransitionE5ModelEEPT0_PPNS_6ScreenEPPNS_9PresenterERNS_7MVPHeapEPPNS_10TransitionEPT2_+0x34>
 8008c44:	4b7d      	ldr	r3, [pc, #500]	@ (8008e3c <_ZN8touchgfx14makeTransitionI19humidity_screenView24humidity_screenPresenterNS_12NoTransitionE5ModelEEPT0_PPNS_6ScreenEPPNS_9PresenterERNS_7MVPHeapEPPNS_10TransitionEPT2_+0x220>)
 8008c46:	4a7e      	ldr	r2, [pc, #504]	@ (8008e40 <_ZN8touchgfx14makeTransitionI19humidity_screenView24humidity_screenPresenterNS_12NoTransitionE5ModelEEPT0_PPNS_6ScreenEPPNS_9PresenterERNS_7MVPHeapEPPNS_10TransitionEPT2_+0x224>)
 8008c48:	21a3      	movs	r1, #163	@ 0xa3
 8008c4a:	487e      	ldr	r0, [pc, #504]	@ (8008e44 <_ZN8touchgfx14makeTransitionI19humidity_screenView24humidity_screenPresenterNS_12NoTransitionE5ModelEEPT0_PPNS_6ScreenEPPNS_9PresenterERNS_7MVPHeapEPPNS_10TransitionEPT2_+0x228>)
 8008c4c:	f01c ffd0 	bl	8025bf0 <__assert_func>
    assert(sizeof(PresenterType) <= heap.presenterStorage.element_size() && "Presenter allocation error: Check that all presenters are added to FrontendHeap::PresenterTypes");
 8008c50:	687b      	ldr	r3, [r7, #4]
 8008c52:	685a      	ldr	r2, [r3, #4]
 8008c54:	687b      	ldr	r3, [r7, #4]
 8008c56:	685b      	ldr	r3, [r3, #4]
 8008c58:	681b      	ldr	r3, [r3, #0]
 8008c5a:	3320      	adds	r3, #32
 8008c5c:	681b      	ldr	r3, [r3, #0]
 8008c5e:	4610      	mov	r0, r2
 8008c60:	4798      	blx	r3
 8008c62:	4603      	mov	r3, r0
 8008c64:	2b0f      	cmp	r3, #15
 8008c66:	d805      	bhi.n	8008c74 <_ZN8touchgfx14makeTransitionI19humidity_screenView24humidity_screenPresenterNS_12NoTransitionE5ModelEEPT0_PPNS_6ScreenEPPNS_9PresenterERNS_7MVPHeapEPPNS_10TransitionEPT2_+0x58>
 8008c68:	4b77      	ldr	r3, [pc, #476]	@ (8008e48 <_ZN8touchgfx14makeTransitionI19humidity_screenView24humidity_screenPresenterNS_12NoTransitionE5ModelEEPT0_PPNS_6ScreenEPPNS_9PresenterERNS_7MVPHeapEPPNS_10TransitionEPT2_+0x22c>)
 8008c6a:	4a75      	ldr	r2, [pc, #468]	@ (8008e40 <_ZN8touchgfx14makeTransitionI19humidity_screenView24humidity_screenPresenterNS_12NoTransitionE5ModelEEPT0_PPNS_6ScreenEPPNS_9PresenterERNS_7MVPHeapEPPNS_10TransitionEPT2_+0x224>)
 8008c6c:	21a4      	movs	r1, #164	@ 0xa4
 8008c6e:	4875      	ldr	r0, [pc, #468]	@ (8008e44 <_ZN8touchgfx14makeTransitionI19humidity_screenView24humidity_screenPresenterNS_12NoTransitionE5ModelEEPT0_PPNS_6ScreenEPPNS_9PresenterERNS_7MVPHeapEPPNS_10TransitionEPT2_+0x228>)
 8008c70:	f01c ffbe 	bl	8025bf0 <__assert_func>
    assert(sizeof(TransType) <= heap.transitionStorage.element_size() && "Transition allocation error: Check that all transitions are added to FrontendHeap::TransitionTypes");
 8008c74:	687b      	ldr	r3, [r7, #4]
 8008c76:	68da      	ldr	r2, [r3, #12]
 8008c78:	687b      	ldr	r3, [r7, #4]
 8008c7a:	68db      	ldr	r3, [r3, #12]
 8008c7c:	681b      	ldr	r3, [r3, #0]
 8008c7e:	3320      	adds	r3, #32
 8008c80:	681b      	ldr	r3, [r3, #0]
 8008c82:	4610      	mov	r0, r2
 8008c84:	4798      	blx	r3
 8008c86:	4603      	mov	r3, r0
 8008c88:	2b0b      	cmp	r3, #11
 8008c8a:	d805      	bhi.n	8008c98 <_ZN8touchgfx14makeTransitionI19humidity_screenView24humidity_screenPresenterNS_12NoTransitionE5ModelEEPT0_PPNS_6ScreenEPPNS_9PresenterERNS_7MVPHeapEPPNS_10TransitionEPT2_+0x7c>
 8008c8c:	4b6f      	ldr	r3, [pc, #444]	@ (8008e4c <_ZN8touchgfx14makeTransitionI19humidity_screenView24humidity_screenPresenterNS_12NoTransitionE5ModelEEPT0_PPNS_6ScreenEPPNS_9PresenterERNS_7MVPHeapEPPNS_10TransitionEPT2_+0x230>)
 8008c8e:	4a6c      	ldr	r2, [pc, #432]	@ (8008e40 <_ZN8touchgfx14makeTransitionI19humidity_screenView24humidity_screenPresenterNS_12NoTransitionE5ModelEEPT0_PPNS_6ScreenEPPNS_9PresenterERNS_7MVPHeapEPPNS_10TransitionEPT2_+0x224>)
 8008c90:	21a5      	movs	r1, #165	@ 0xa5
 8008c92:	486c      	ldr	r0, [pc, #432]	@ (8008e44 <_ZN8touchgfx14makeTransitionI19humidity_screenView24humidity_screenPresenterNS_12NoTransitionE5ModelEEPT0_PPNS_6ScreenEPPNS_9PresenterERNS_7MVPHeapEPPNS_10TransitionEPT2_+0x228>)
 8008c94:	f01c ffac 	bl	8025bf0 <__assert_func>
 8008c98:	68fb      	ldr	r3, [r7, #12]
 8008c9a:	62bb      	str	r3, [r7, #40]	@ 0x28
 8008c9c:	68bb      	ldr	r3, [r7, #8]
 8008c9e:	627b      	str	r3, [r7, #36]	@ 0x24
 8008ca0:	683b      	ldr	r3, [r7, #0]
 8008ca2:	623b      	str	r3, [r7, #32]
    Application::getInstance()->clearAllTimerWidgets();
 8008ca4:	f00b f99c 	bl	8013fe0 <_ZN8touchgfx11Application11getInstanceEv>
 8008ca8:	4603      	mov	r3, r0
 8008caa:	4618      	mov	r0, r3
 8008cac:	f7ff fc10 	bl	80084d0 <_ZN8touchgfx11Application20clearAllTimerWidgetsEv>
    if (*currentTrans)
 8008cb0:	6a3b      	ldr	r3, [r7, #32]
 8008cb2:	681b      	ldr	r3, [r3, #0]
 8008cb4:	2b00      	cmp	r3, #0
 8008cb6:	d008      	beq.n	8008cca <_ZN8touchgfx14makeTransitionI19humidity_screenView24humidity_screenPresenterNS_12NoTransitionE5ModelEEPT0_PPNS_6ScreenEPPNS_9PresenterERNS_7MVPHeapEPPNS_10TransitionEPT2_+0xae>
        (*currentTrans)->tearDown();
 8008cb8:	6a3b      	ldr	r3, [r7, #32]
 8008cba:	681a      	ldr	r2, [r3, #0]
 8008cbc:	6a3b      	ldr	r3, [r7, #32]
 8008cbe:	681b      	ldr	r3, [r3, #0]
 8008cc0:	681b      	ldr	r3, [r3, #0]
 8008cc2:	330c      	adds	r3, #12
 8008cc4:	681b      	ldr	r3, [r3, #0]
 8008cc6:	4610      	mov	r0, r2
 8008cc8:	4798      	blx	r3
    if (*currentTrans)
 8008cca:	6a3b      	ldr	r3, [r7, #32]
 8008ccc:	681b      	ldr	r3, [r3, #0]
 8008cce:	2b00      	cmp	r3, #0
 8008cd0:	d007      	beq.n	8008ce2 <_ZN8touchgfx14makeTransitionI19humidity_screenView24humidity_screenPresenterNS_12NoTransitionE5ModelEEPT0_PPNS_6ScreenEPPNS_9PresenterERNS_7MVPHeapEPPNS_10TransitionEPT2_+0xc6>
        (*currentTrans)->~Transition();
 8008cd2:	6a3b      	ldr	r3, [r7, #32]
 8008cd4:	681a      	ldr	r2, [r3, #0]
 8008cd6:	6a3b      	ldr	r3, [r7, #32]
 8008cd8:	681b      	ldr	r3, [r3, #0]
 8008cda:	681b      	ldr	r3, [r3, #0]
 8008cdc:	681b      	ldr	r3, [r3, #0]
 8008cde:	4610      	mov	r0, r2
 8008ce0:	4798      	blx	r3
    if (*currentScreen)
 8008ce2:	6abb      	ldr	r3, [r7, #40]	@ 0x28
 8008ce4:	681b      	ldr	r3, [r3, #0]
 8008ce6:	2b00      	cmp	r3, #0
 8008ce8:	d008      	beq.n	8008cfc <_ZN8touchgfx14makeTransitionI19humidity_screenView24humidity_screenPresenterNS_12NoTransitionE5ModelEEPT0_PPNS_6ScreenEPPNS_9PresenterERNS_7MVPHeapEPPNS_10TransitionEPT2_+0xe0>
        (*currentScreen)->tearDownScreen();
 8008cea:	6abb      	ldr	r3, [r7, #40]	@ 0x28
 8008cec:	681a      	ldr	r2, [r3, #0]
 8008cee:	6abb      	ldr	r3, [r7, #40]	@ 0x28
 8008cf0:	681b      	ldr	r3, [r3, #0]
 8008cf2:	681b      	ldr	r3, [r3, #0]
 8008cf4:	3314      	adds	r3, #20
 8008cf6:	681b      	ldr	r3, [r3, #0]
 8008cf8:	4610      	mov	r0, r2
 8008cfa:	4798      	blx	r3
    if (*currentPresenter)
 8008cfc:	6a7b      	ldr	r3, [r7, #36]	@ 0x24
 8008cfe:	681b      	ldr	r3, [r3, #0]
 8008d00:	2b00      	cmp	r3, #0
 8008d02:	d008      	beq.n	8008d16 <_ZN8touchgfx14makeTransitionI19humidity_screenView24humidity_screenPresenterNS_12NoTransitionE5ModelEEPT0_PPNS_6ScreenEPPNS_9PresenterERNS_7MVPHeapEPPNS_10TransitionEPT2_+0xfa>
        (*currentPresenter)->deactivate();
 8008d04:	6a7b      	ldr	r3, [r7, #36]	@ 0x24
 8008d06:	681a      	ldr	r2, [r3, #0]
 8008d08:	6a7b      	ldr	r3, [r7, #36]	@ 0x24
 8008d0a:	681b      	ldr	r3, [r3, #0]
 8008d0c:	681b      	ldr	r3, [r3, #0]
 8008d0e:	3304      	adds	r3, #4
 8008d10:	681b      	ldr	r3, [r3, #0]
 8008d12:	4610      	mov	r0, r2
 8008d14:	4798      	blx	r3
    if (*currentScreen)
 8008d16:	6abb      	ldr	r3, [r7, #40]	@ 0x28
 8008d18:	681b      	ldr	r3, [r3, #0]
 8008d1a:	2b00      	cmp	r3, #0
 8008d1c:	d007      	beq.n	8008d2e <_ZN8touchgfx14makeTransitionI19humidity_screenView24humidity_screenPresenterNS_12NoTransitionE5ModelEEPT0_PPNS_6ScreenEPPNS_9PresenterERNS_7MVPHeapEPPNS_10TransitionEPT2_+0x112>
        (*currentScreen)->~Screen();
 8008d1e:	6abb      	ldr	r3, [r7, #40]	@ 0x28
 8008d20:	681a      	ldr	r2, [r3, #0]
 8008d22:	6abb      	ldr	r3, [r7, #40]	@ 0x28
 8008d24:	681b      	ldr	r3, [r3, #0]
 8008d26:	681b      	ldr	r3, [r3, #0]
 8008d28:	681b      	ldr	r3, [r3, #0]
 8008d2a:	4610      	mov	r0, r2
 8008d2c:	4798      	blx	r3
    if (*currentPresenter)
 8008d2e:	6a7b      	ldr	r3, [r7, #36]	@ 0x24
 8008d30:	681b      	ldr	r3, [r3, #0]
 8008d32:	2b00      	cmp	r3, #0
 8008d34:	d008      	beq.n	8008d48 <_ZN8touchgfx14makeTransitionI19humidity_screenView24humidity_screenPresenterNS_12NoTransitionE5ModelEEPT0_PPNS_6ScreenEPPNS_9PresenterERNS_7MVPHeapEPPNS_10TransitionEPT2_+0x12c>
        (*currentPresenter)->~Presenter();
 8008d36:	6a7b      	ldr	r3, [r7, #36]	@ 0x24
 8008d38:	681a      	ldr	r2, [r3, #0]
 8008d3a:	6a7b      	ldr	r3, [r7, #36]	@ 0x24
 8008d3c:	681b      	ldr	r3, [r3, #0]
 8008d3e:	681b      	ldr	r3, [r3, #0]
 8008d40:	3308      	adds	r3, #8
 8008d42:	681b      	ldr	r3, [r3, #0]
 8008d44:	4610      	mov	r0, r2
 8008d46:	4798      	blx	r3
}
 8008d48:	bf00      	nop

    prepareTransition(currentScreen, currentPresenter, currentTrans);

    TransType* newTransition = new (&heap.transitionStorage.at<TransType>(0)) TransType;
 8008d4a:	687b      	ldr	r3, [r7, #4]
 8008d4c:	68db      	ldr	r3, [r3, #12]
 8008d4e:	2100      	movs	r1, #0
 8008d50:	4618      	mov	r0, r3
 8008d52:	f000 fbcb 	bl	80094ec <_ZN8touchgfx17AbstractPartition2atINS_12NoTransitionEEERT_t>
 8008d56:	4603      	mov	r3, r0
 8008d58:	4619      	mov	r1, r3
 8008d5a:	200c      	movs	r0, #12
 8008d5c:	f7ff fb22 	bl	80083a4 <_ZnwjPv>
 8008d60:	4604      	mov	r4, r0
 8008d62:	4620      	mov	r0, r4
 8008d64:	f7ff ff48 	bl	8008bf8 <_ZN8touchgfx12NoTransitionC1Ev>
 8008d68:	637c      	str	r4, [r7, #52]	@ 0x34
    ScreenType* newScreen = new (&heap.screenStorage.at<ScreenType>(0)) ScreenType;
 8008d6a:	687b      	ldr	r3, [r7, #4]
 8008d6c:	689b      	ldr	r3, [r3, #8]
 8008d6e:	2100      	movs	r1, #0
 8008d70:	4618      	mov	r0, r3
 8008d72:	f000 fbce 	bl	8009512 <_ZN8touchgfx17AbstractPartition2atI19humidity_screenViewEERT_t>
 8008d76:	4603      	mov	r3, r0
 8008d78:	4619      	mov	r1, r3
 8008d7a:	f44f 7009 	mov.w	r0, #548	@ 0x224
 8008d7e:	f7ff fb11 	bl	80083a4 <_ZnwjPv>
 8008d82:	4604      	mov	r4, r0
 8008d84:	4620      	mov	r0, r4
 8008d86:	f004 ff87 	bl	800dc98 <_ZN19humidity_screenViewC1Ev>
 8008d8a:	633c      	str	r4, [r7, #48]	@ 0x30
    PresenterType* newPresenter = new (&heap.presenterStorage.at<PresenterType>(0)) PresenterType(*newScreen);
 8008d8c:	687b      	ldr	r3, [r7, #4]
 8008d8e:	685b      	ldr	r3, [r3, #4]
 8008d90:	2100      	movs	r1, #0
 8008d92:	4618      	mov	r0, r3
 8008d94:	f000 fbd0 	bl	8009538 <_ZN8touchgfx17AbstractPartition2atI24humidity_screenPresenterEERT_t>
 8008d98:	4603      	mov	r3, r0
 8008d9a:	4619      	mov	r1, r3
 8008d9c:	2010      	movs	r0, #16
 8008d9e:	f7ff fb01 	bl	80083a4 <_ZnwjPv>
 8008da2:	4604      	mov	r4, r0
 8008da4:	6b39      	ldr	r1, [r7, #48]	@ 0x30
 8008da6:	4620      	mov	r0, r4
 8008da8:	f004 fef0 	bl	800db8c <_ZN24humidity_screenPresenterC1ER19humidity_screenView>
 8008dac:	62fc      	str	r4, [r7, #44]	@ 0x2c
    *currentTrans = newTransition;
 8008dae:	683b      	ldr	r3, [r7, #0]
 8008db0:	6b7a      	ldr	r2, [r7, #52]	@ 0x34
 8008db2:	601a      	str	r2, [r3, #0]
    *currentPresenter = newPresenter;
 8008db4:	68bb      	ldr	r3, [r7, #8]
 8008db6:	6afa      	ldr	r2, [r7, #44]	@ 0x2c
 8008db8:	601a      	str	r2, [r3, #0]
    *currentScreen = newScreen;
 8008dba:	68fb      	ldr	r3, [r7, #12]
 8008dbc:	6b3a      	ldr	r2, [r7, #48]	@ 0x30
 8008dbe:	601a      	str	r2, [r3, #0]
    model->bind(newPresenter);
 8008dc0:	6afb      	ldr	r3, [r7, #44]	@ 0x2c
 8008dc2:	2b00      	cmp	r3, #0
 8008dc4:	d002      	beq.n	8008dcc <_ZN8touchgfx14makeTransitionI19humidity_screenView24humidity_screenPresenterNS_12NoTransitionE5ModelEEPT0_PPNS_6ScreenEPPNS_9PresenterERNS_7MVPHeapEPPNS_10TransitionEPT2_+0x1b0>
 8008dc6:	6afb      	ldr	r3, [r7, #44]	@ 0x2c
 8008dc8:	3304      	adds	r3, #4
 8008dca:	e000      	b.n	8008dce <_ZN8touchgfx14makeTransitionI19humidity_screenView24humidity_screenPresenterNS_12NoTransitionE5ModelEEPT0_PPNS_6ScreenEPPNS_9PresenterERNS_7MVPHeapEPPNS_10TransitionEPT2_+0x1b2>
 8008dcc:	2300      	movs	r3, #0
 8008dce:	4619      	mov	r1, r3
 8008dd0:	6cb8      	ldr	r0, [r7, #72]	@ 0x48
 8008dd2:	f7ff fcc3 	bl	800875c <_ZN5Model4bindEP13ModelListener>
    newPresenter->bind(model);
 8008dd6:	6afb      	ldr	r3, [r7, #44]	@ 0x2c
 8008dd8:	3304      	adds	r3, #4
 8008dda:	6cb9      	ldr	r1, [r7, #72]	@ 0x48
 8008ddc:	4618      	mov	r0, r3
 8008dde:	f7ff fd30 	bl	8008842 <_ZN13ModelListener4bindEP5Model>
    newScreen->bind(*newPresenter);
 8008de2:	6b3b      	ldr	r3, [r7, #48]	@ 0x30
 8008de4:	6af9      	ldr	r1, [r7, #44]	@ 0x2c
 8008de6:	4618      	mov	r0, r3
 8008de8:	f000 fbb9 	bl	800955e <_ZN8touchgfx4ViewI24humidity_screenPresenterE4bindERS1_>
 8008dec:	6b3b      	ldr	r3, [r7, #48]	@ 0x30
 8008dee:	61fb      	str	r3, [r7, #28]
 8008df0:	6afb      	ldr	r3, [r7, #44]	@ 0x2c
 8008df2:	61bb      	str	r3, [r7, #24]
 8008df4:	6b7b      	ldr	r3, [r7, #52]	@ 0x34
 8008df6:	617b      	str	r3, [r7, #20]
    newScreen->setupScreen();
 8008df8:	69fb      	ldr	r3, [r7, #28]
 8008dfa:	681b      	ldr	r3, [r3, #0]
 8008dfc:	330c      	adds	r3, #12
 8008dfe:	681b      	ldr	r3, [r3, #0]
 8008e00:	69f8      	ldr	r0, [r7, #28]
 8008e02:	4798      	blx	r3
    newPresenter->activate();
 8008e04:	69bb      	ldr	r3, [r7, #24]
 8008e06:	681b      	ldr	r3, [r3, #0]
 8008e08:	681b      	ldr	r3, [r3, #0]
 8008e0a:	69b8      	ldr	r0, [r7, #24]
 8008e0c:	4798      	blx	r3
    newScreen->bindTransition(*newTransition);
 8008e0e:	6979      	ldr	r1, [r7, #20]
 8008e10:	69f8      	ldr	r0, [r7, #28]
 8008e12:	f00c fda7 	bl	8015964 <_ZN8touchgfx6Screen14bindTransitionERNS_10TransitionE>
    newTransition->init();
 8008e16:	697b      	ldr	r3, [r7, #20]
 8008e18:	681b      	ldr	r3, [r3, #0]
 8008e1a:	3310      	adds	r3, #16
 8008e1c:	681b      	ldr	r3, [r3, #0]
 8008e1e:	6978      	ldr	r0, [r7, #20]
 8008e20:	4798      	blx	r3
    newTransition->invalidate();
 8008e22:	697b      	ldr	r3, [r7, #20]
 8008e24:	681b      	ldr	r3, [r3, #0]
 8008e26:	3314      	adds	r3, #20
 8008e28:	681b      	ldr	r3, [r3, #0]
 8008e2a:	6978      	ldr	r0, [r7, #20]
 8008e2c:	4798      	blx	r3
}
 8008e2e:	bf00      	nop

    finalizeTransition((Screen*)newScreen, (Presenter*)newPresenter, (Transition*)newTransition);

    return newPresenter;
 8008e30:	6afb      	ldr	r3, [r7, #44]	@ 0x2c
}
 8008e32:	4618      	mov	r0, r3
 8008e34:	373c      	adds	r7, #60	@ 0x3c
 8008e36:	46bd      	mov	sp, r7
 8008e38:	bd90      	pop	{r4, r7, pc}
 8008e3a:	bf00      	nop
 8008e3c:	08026c50 	.word	0x08026c50
 8008e40:	08026ce0 	.word	0x08026ce0
 8008e44:	08026dc4 	.word	0x08026dc4
 8008e48:	08026e08 	.word	0x08026e08
 8008e4c:	08026eac 	.word	0x08026eac

08008e50 <_ZN8touchgfx14makeTransitionI22temperature_screenView27temperature_screenPresenterNS_12NoTransitionE5ModelEEPT0_PPNS_6ScreenEPPNS_9PresenterERNS_7MVPHeapEPPNS_10TransitionEPT2_>:
PresenterType* makeTransition(Screen** currentScreen, Presenter** currentPresenter, MVPHeap& heap, Transition** currentTrans, ModelType* model)
 8008e50:	b590      	push	{r4, r7, lr}
 8008e52:	b08f      	sub	sp, #60	@ 0x3c
 8008e54:	af00      	add	r7, sp, #0
 8008e56:	60f8      	str	r0, [r7, #12]
 8008e58:	60b9      	str	r1, [r7, #8]
 8008e5a:	607a      	str	r2, [r7, #4]
 8008e5c:	603b      	str	r3, [r7, #0]
    assert(sizeof(ScreenType) <= heap.screenStorage.element_size() && "View allocation error: Check that all views are added to FrontendHeap::ViewTypes");
 8008e5e:	687b      	ldr	r3, [r7, #4]
 8008e60:	689a      	ldr	r2, [r3, #8]
 8008e62:	687b      	ldr	r3, [r7, #4]
 8008e64:	689b      	ldr	r3, [r3, #8]
 8008e66:	681b      	ldr	r3, [r3, #0]
 8008e68:	3320      	adds	r3, #32
 8008e6a:	681b      	ldr	r3, [r3, #0]
 8008e6c:	4610      	mov	r0, r2
 8008e6e:	4798      	blx	r3
 8008e70:	4603      	mov	r3, r0
 8008e72:	f5b3 7f09 	cmp.w	r3, #548	@ 0x224
 8008e76:	d205      	bcs.n	8008e84 <_ZN8touchgfx14makeTransitionI22temperature_screenView27temperature_screenPresenterNS_12NoTransitionE5ModelEEPT0_PPNS_6ScreenEPPNS_9PresenterERNS_7MVPHeapEPPNS_10TransitionEPT2_+0x34>
 8008e78:	4b7d      	ldr	r3, [pc, #500]	@ (8009070 <_ZN8touchgfx14makeTransitionI22temperature_screenView27temperature_screenPresenterNS_12NoTransitionE5ModelEEPT0_PPNS_6ScreenEPPNS_9PresenterERNS_7MVPHeapEPPNS_10TransitionEPT2_+0x220>)
 8008e7a:	4a7e      	ldr	r2, [pc, #504]	@ (8009074 <_ZN8touchgfx14makeTransitionI22temperature_screenView27temperature_screenPresenterNS_12NoTransitionE5ModelEEPT0_PPNS_6ScreenEPPNS_9PresenterERNS_7MVPHeapEPPNS_10TransitionEPT2_+0x224>)
 8008e7c:	21a3      	movs	r1, #163	@ 0xa3
 8008e7e:	487e      	ldr	r0, [pc, #504]	@ (8009078 <_ZN8touchgfx14makeTransitionI22temperature_screenView27temperature_screenPresenterNS_12NoTransitionE5ModelEEPT0_PPNS_6ScreenEPPNS_9PresenterERNS_7MVPHeapEPPNS_10TransitionEPT2_+0x228>)
 8008e80:	f01c feb6 	bl	8025bf0 <__assert_func>
    assert(sizeof(PresenterType) <= heap.presenterStorage.element_size() && "Presenter allocation error: Check that all presenters are added to FrontendHeap::PresenterTypes");
 8008e84:	687b      	ldr	r3, [r7, #4]
 8008e86:	685a      	ldr	r2, [r3, #4]
 8008e88:	687b      	ldr	r3, [r7, #4]
 8008e8a:	685b      	ldr	r3, [r3, #4]
 8008e8c:	681b      	ldr	r3, [r3, #0]
 8008e8e:	3320      	adds	r3, #32
 8008e90:	681b      	ldr	r3, [r3, #0]
 8008e92:	4610      	mov	r0, r2
 8008e94:	4798      	blx	r3
 8008e96:	4603      	mov	r3, r0
 8008e98:	2b0f      	cmp	r3, #15
 8008e9a:	d805      	bhi.n	8008ea8 <_ZN8touchgfx14makeTransitionI22temperature_screenView27temperature_screenPresenterNS_12NoTransitionE5ModelEEPT0_PPNS_6ScreenEPPNS_9PresenterERNS_7MVPHeapEPPNS_10TransitionEPT2_+0x58>
 8008e9c:	4b77      	ldr	r3, [pc, #476]	@ (800907c <_ZN8touchgfx14makeTransitionI22temperature_screenView27temperature_screenPresenterNS_12NoTransitionE5ModelEEPT0_PPNS_6ScreenEPPNS_9PresenterERNS_7MVPHeapEPPNS_10TransitionEPT2_+0x22c>)
 8008e9e:	4a75      	ldr	r2, [pc, #468]	@ (8009074 <_ZN8touchgfx14makeTransitionI22temperature_screenView27temperature_screenPresenterNS_12NoTransitionE5ModelEEPT0_PPNS_6ScreenEPPNS_9PresenterERNS_7MVPHeapEPPNS_10TransitionEPT2_+0x224>)
 8008ea0:	21a4      	movs	r1, #164	@ 0xa4
 8008ea2:	4875      	ldr	r0, [pc, #468]	@ (8009078 <_ZN8touchgfx14makeTransitionI22temperature_screenView27temperature_screenPresenterNS_12NoTransitionE5ModelEEPT0_PPNS_6ScreenEPPNS_9PresenterERNS_7MVPHeapEPPNS_10TransitionEPT2_+0x228>)
 8008ea4:	f01c fea4 	bl	8025bf0 <__assert_func>
    assert(sizeof(TransType) <= heap.transitionStorage.element_size() && "Transition allocation error: Check that all transitions are added to FrontendHeap::TransitionTypes");
 8008ea8:	687b      	ldr	r3, [r7, #4]
 8008eaa:	68da      	ldr	r2, [r3, #12]
 8008eac:	687b      	ldr	r3, [r7, #4]
 8008eae:	68db      	ldr	r3, [r3, #12]
 8008eb0:	681b      	ldr	r3, [r3, #0]
 8008eb2:	3320      	adds	r3, #32
 8008eb4:	681b      	ldr	r3, [r3, #0]
 8008eb6:	4610      	mov	r0, r2
 8008eb8:	4798      	blx	r3
 8008eba:	4603      	mov	r3, r0
 8008ebc:	2b0b      	cmp	r3, #11
 8008ebe:	d805      	bhi.n	8008ecc <_ZN8touchgfx14makeTransitionI22temperature_screenView27temperature_screenPresenterNS_12NoTransitionE5ModelEEPT0_PPNS_6ScreenEPPNS_9PresenterERNS_7MVPHeapEPPNS_10TransitionEPT2_+0x7c>
 8008ec0:	4b6f      	ldr	r3, [pc, #444]	@ (8009080 <_ZN8touchgfx14makeTransitionI22temperature_screenView27temperature_screenPresenterNS_12NoTransitionE5ModelEEPT0_PPNS_6ScreenEPPNS_9PresenterERNS_7MVPHeapEPPNS_10TransitionEPT2_+0x230>)
 8008ec2:	4a6c      	ldr	r2, [pc, #432]	@ (8009074 <_ZN8touchgfx14makeTransitionI22temperature_screenView27temperature_screenPresenterNS_12NoTransitionE5ModelEEPT0_PPNS_6ScreenEPPNS_9PresenterERNS_7MVPHeapEPPNS_10TransitionEPT2_+0x224>)
 8008ec4:	21a5      	movs	r1, #165	@ 0xa5
 8008ec6:	486c      	ldr	r0, [pc, #432]	@ (8009078 <_ZN8touchgfx14makeTransitionI22temperature_screenView27temperature_screenPresenterNS_12NoTransitionE5ModelEEPT0_PPNS_6ScreenEPPNS_9PresenterERNS_7MVPHeapEPPNS_10TransitionEPT2_+0x228>)
 8008ec8:	f01c fe92 	bl	8025bf0 <__assert_func>
 8008ecc:	68fb      	ldr	r3, [r7, #12]
 8008ece:	62bb      	str	r3, [r7, #40]	@ 0x28
 8008ed0:	68bb      	ldr	r3, [r7, #8]
 8008ed2:	627b      	str	r3, [r7, #36]	@ 0x24
 8008ed4:	683b      	ldr	r3, [r7, #0]
 8008ed6:	623b      	str	r3, [r7, #32]
    Application::getInstance()->clearAllTimerWidgets();
 8008ed8:	f00b f882 	bl	8013fe0 <_ZN8touchgfx11Application11getInstanceEv>
 8008edc:	4603      	mov	r3, r0
 8008ede:	4618      	mov	r0, r3
 8008ee0:	f7ff faf6 	bl	80084d0 <_ZN8touchgfx11Application20clearAllTimerWidgetsEv>
    if (*currentTrans)
 8008ee4:	6a3b      	ldr	r3, [r7, #32]
 8008ee6:	681b      	ldr	r3, [r3, #0]
 8008ee8:	2b00      	cmp	r3, #0
 8008eea:	d008      	beq.n	8008efe <_ZN8touchgfx14makeTransitionI22temperature_screenView27temperature_screenPresenterNS_12NoTransitionE5ModelEEPT0_PPNS_6ScreenEPPNS_9PresenterERNS_7MVPHeapEPPNS_10TransitionEPT2_+0xae>
        (*currentTrans)->tearDown();
 8008eec:	6a3b      	ldr	r3, [r7, #32]
 8008eee:	681a      	ldr	r2, [r3, #0]
 8008ef0:	6a3b      	ldr	r3, [r7, #32]
 8008ef2:	681b      	ldr	r3, [r3, #0]
 8008ef4:	681b      	ldr	r3, [r3, #0]
 8008ef6:	330c      	adds	r3, #12
 8008ef8:	681b      	ldr	r3, [r3, #0]
 8008efa:	4610      	mov	r0, r2
 8008efc:	4798      	blx	r3
    if (*currentTrans)
 8008efe:	6a3b      	ldr	r3, [r7, #32]
 8008f00:	681b      	ldr	r3, [r3, #0]
 8008f02:	2b00      	cmp	r3, #0
 8008f04:	d007      	beq.n	8008f16 <_ZN8touchgfx14makeTransitionI22temperature_screenView27temperature_screenPresenterNS_12NoTransitionE5ModelEEPT0_PPNS_6ScreenEPPNS_9PresenterERNS_7MVPHeapEPPNS_10TransitionEPT2_+0xc6>
        (*currentTrans)->~Transition();
 8008f06:	6a3b      	ldr	r3, [r7, #32]
 8008f08:	681a      	ldr	r2, [r3, #0]
 8008f0a:	6a3b      	ldr	r3, [r7, #32]
 8008f0c:	681b      	ldr	r3, [r3, #0]
 8008f0e:	681b      	ldr	r3, [r3, #0]
 8008f10:	681b      	ldr	r3, [r3, #0]
 8008f12:	4610      	mov	r0, r2
 8008f14:	4798      	blx	r3
    if (*currentScreen)
 8008f16:	6abb      	ldr	r3, [r7, #40]	@ 0x28
 8008f18:	681b      	ldr	r3, [r3, #0]
 8008f1a:	2b00      	cmp	r3, #0
 8008f1c:	d008      	beq.n	8008f30 <_ZN8touchgfx14makeTransitionI22temperature_screenView27temperature_screenPresenterNS_12NoTransitionE5ModelEEPT0_PPNS_6ScreenEPPNS_9PresenterERNS_7MVPHeapEPPNS_10TransitionEPT2_+0xe0>
        (*currentScreen)->tearDownScreen();
 8008f1e:	6abb      	ldr	r3, [r7, #40]	@ 0x28
 8008f20:	681a      	ldr	r2, [r3, #0]
 8008f22:	6abb      	ldr	r3, [r7, #40]	@ 0x28
 8008f24:	681b      	ldr	r3, [r3, #0]
 8008f26:	681b      	ldr	r3, [r3, #0]
 8008f28:	3314      	adds	r3, #20
 8008f2a:	681b      	ldr	r3, [r3, #0]
 8008f2c:	4610      	mov	r0, r2
 8008f2e:	4798      	blx	r3
    if (*currentPresenter)
 8008f30:	6a7b      	ldr	r3, [r7, #36]	@ 0x24
 8008f32:	681b      	ldr	r3, [r3, #0]
 8008f34:	2b00      	cmp	r3, #0
 8008f36:	d008      	beq.n	8008f4a <_ZN8touchgfx14makeTransitionI22temperature_screenView27temperature_screenPresenterNS_12NoTransitionE5ModelEEPT0_PPNS_6ScreenEPPNS_9PresenterERNS_7MVPHeapEPPNS_10TransitionEPT2_+0xfa>
        (*currentPresenter)->deactivate();
 8008f38:	6a7b      	ldr	r3, [r7, #36]	@ 0x24
 8008f3a:	681a      	ldr	r2, [r3, #0]
 8008f3c:	6a7b      	ldr	r3, [r7, #36]	@ 0x24
 8008f3e:	681b      	ldr	r3, [r3, #0]
 8008f40:	681b      	ldr	r3, [r3, #0]
 8008f42:	3304      	adds	r3, #4
 8008f44:	681b      	ldr	r3, [r3, #0]
 8008f46:	4610      	mov	r0, r2
 8008f48:	4798      	blx	r3
    if (*currentScreen)
 8008f4a:	6abb      	ldr	r3, [r7, #40]	@ 0x28
 8008f4c:	681b      	ldr	r3, [r3, #0]
 8008f4e:	2b00      	cmp	r3, #0
 8008f50:	d007      	beq.n	8008f62 <_ZN8touchgfx14makeTransitionI22temperature_screenView27temperature_screenPresenterNS_12NoTransitionE5ModelEEPT0_PPNS_6ScreenEPPNS_9PresenterERNS_7MVPHeapEPPNS_10TransitionEPT2_+0x112>
        (*currentScreen)->~Screen();
 8008f52:	6abb      	ldr	r3, [r7, #40]	@ 0x28
 8008f54:	681a      	ldr	r2, [r3, #0]
 8008f56:	6abb      	ldr	r3, [r7, #40]	@ 0x28
 8008f58:	681b      	ldr	r3, [r3, #0]
 8008f5a:	681b      	ldr	r3, [r3, #0]
 8008f5c:	681b      	ldr	r3, [r3, #0]
 8008f5e:	4610      	mov	r0, r2
 8008f60:	4798      	blx	r3
    if (*currentPresenter)
 8008f62:	6a7b      	ldr	r3, [r7, #36]	@ 0x24
 8008f64:	681b      	ldr	r3, [r3, #0]
 8008f66:	2b00      	cmp	r3, #0
 8008f68:	d008      	beq.n	8008f7c <_ZN8touchgfx14makeTransitionI22temperature_screenView27temperature_screenPresenterNS_12NoTransitionE5ModelEEPT0_PPNS_6ScreenEPPNS_9PresenterERNS_7MVPHeapEPPNS_10TransitionEPT2_+0x12c>
        (*currentPresenter)->~Presenter();
 8008f6a:	6a7b      	ldr	r3, [r7, #36]	@ 0x24
 8008f6c:	681a      	ldr	r2, [r3, #0]
 8008f6e:	6a7b      	ldr	r3, [r7, #36]	@ 0x24
 8008f70:	681b      	ldr	r3, [r3, #0]
 8008f72:	681b      	ldr	r3, [r3, #0]
 8008f74:	3308      	adds	r3, #8
 8008f76:	681b      	ldr	r3, [r3, #0]
 8008f78:	4610      	mov	r0, r2
 8008f7a:	4798      	blx	r3
}
 8008f7c:	bf00      	nop
    TransType* newTransition = new (&heap.transitionStorage.at<TransType>(0)) TransType;
 8008f7e:	687b      	ldr	r3, [r7, #4]
 8008f80:	68db      	ldr	r3, [r3, #12]
 8008f82:	2100      	movs	r1, #0
 8008f84:	4618      	mov	r0, r3
 8008f86:	f000 fab1 	bl	80094ec <_ZN8touchgfx17AbstractPartition2atINS_12NoTransitionEEERT_t>
 8008f8a:	4603      	mov	r3, r0
 8008f8c:	4619      	mov	r1, r3
 8008f8e:	200c      	movs	r0, #12
 8008f90:	f7ff fa08 	bl	80083a4 <_ZnwjPv>
 8008f94:	4604      	mov	r4, r0
 8008f96:	4620      	mov	r0, r4
 8008f98:	f7ff fe2e 	bl	8008bf8 <_ZN8touchgfx12NoTransitionC1Ev>
 8008f9c:	637c      	str	r4, [r7, #52]	@ 0x34
    ScreenType* newScreen = new (&heap.screenStorage.at<ScreenType>(0)) ScreenType;
 8008f9e:	687b      	ldr	r3, [r7, #4]
 8008fa0:	689b      	ldr	r3, [r3, #8]
 8008fa2:	2100      	movs	r1, #0
 8008fa4:	4618      	mov	r0, r3
 8008fa6:	f000 fae8 	bl	800957a <_ZN8touchgfx17AbstractPartition2atI22temperature_screenViewEERT_t>
 8008faa:	4603      	mov	r3, r0
 8008fac:	4619      	mov	r1, r3
 8008fae:	f44f 7009 	mov.w	r0, #548	@ 0x224
 8008fb2:	f7ff f9f7 	bl	80083a4 <_ZnwjPv>
 8008fb6:	4604      	mov	r4, r0
 8008fb8:	4620      	mov	r0, r4
 8008fba:	f005 fab9 	bl	800e530 <_ZN22temperature_screenViewC1Ev>
 8008fbe:	633c      	str	r4, [r7, #48]	@ 0x30
    PresenterType* newPresenter = new (&heap.presenterStorage.at<PresenterType>(0)) PresenterType(*newScreen);
 8008fc0:	687b      	ldr	r3, [r7, #4]
 8008fc2:	685b      	ldr	r3, [r3, #4]
 8008fc4:	2100      	movs	r1, #0
 8008fc6:	4618      	mov	r0, r3
 8008fc8:	f000 faea 	bl	80095a0 <_ZN8touchgfx17AbstractPartition2atI27temperature_screenPresenterEERT_t>
 8008fcc:	4603      	mov	r3, r0
 8008fce:	4619      	mov	r1, r3
 8008fd0:	2010      	movs	r0, #16
 8008fd2:	f7ff f9e7 	bl	80083a4 <_ZnwjPv>
 8008fd6:	4604      	mov	r4, r0
 8008fd8:	6b39      	ldr	r1, [r7, #48]	@ 0x30
 8008fda:	4620      	mov	r0, r4
 8008fdc:	f005 fa36 	bl	800e44c <_ZN27temperature_screenPresenterC1ER22temperature_screenView>
 8008fe0:	62fc      	str	r4, [r7, #44]	@ 0x2c
    *currentTrans = newTransition;
 8008fe2:	683b      	ldr	r3, [r7, #0]
 8008fe4:	6b7a      	ldr	r2, [r7, #52]	@ 0x34
 8008fe6:	601a      	str	r2, [r3, #0]
    *currentPresenter = newPresenter;
 8008fe8:	68bb      	ldr	r3, [r7, #8]
 8008fea:	6afa      	ldr	r2, [r7, #44]	@ 0x2c
 8008fec:	601a      	str	r2, [r3, #0]
    *currentScreen = newScreen;
 8008fee:	68fb      	ldr	r3, [r7, #12]
 8008ff0:	6b3a      	ldr	r2, [r7, #48]	@ 0x30
 8008ff2:	601a      	str	r2, [r3, #0]
    model->bind(newPresenter);
 8008ff4:	6afb      	ldr	r3, [r7, #44]	@ 0x2c
 8008ff6:	2b00      	cmp	r3, #0
 8008ff8:	d002      	beq.n	8009000 <_ZN8touchgfx14makeTransitionI22temperature_screenView27temperature_screenPresenterNS_12NoTransitionE5ModelEEPT0_PPNS_6ScreenEPPNS_9PresenterERNS_7MVPHeapEPPNS_10TransitionEPT2_+0x1b0>
 8008ffa:	6afb      	ldr	r3, [r7, #44]	@ 0x2c
 8008ffc:	3304      	adds	r3, #4
 8008ffe:	e000      	b.n	8009002 <_ZN8touchgfx14makeTransitionI22temperature_screenView27temperature_screenPresenterNS_12NoTransitionE5ModelEEPT0_PPNS_6ScreenEPPNS_9PresenterERNS_7MVPHeapEPPNS_10TransitionEPT2_+0x1b2>
 8009000:	2300      	movs	r3, #0
 8009002:	4619      	mov	r1, r3
 8009004:	6cb8      	ldr	r0, [r7, #72]	@ 0x48
 8009006:	f7ff fba9 	bl	800875c <_ZN5Model4bindEP13ModelListener>
    newPresenter->bind(model);
 800900a:	6afb      	ldr	r3, [r7, #44]	@ 0x2c
 800900c:	3304      	adds	r3, #4
 800900e:	6cb9      	ldr	r1, [r7, #72]	@ 0x48
 8009010:	4618      	mov	r0, r3
 8009012:	f7ff fc16 	bl	8008842 <_ZN13ModelListener4bindEP5Model>
    newScreen->bind(*newPresenter);
 8009016:	6b3b      	ldr	r3, [r7, #48]	@ 0x30
 8009018:	6af9      	ldr	r1, [r7, #44]	@ 0x2c
 800901a:	4618      	mov	r0, r3
 800901c:	f000 fad3 	bl	80095c6 <_ZN8touchgfx4ViewI27temperature_screenPresenterE4bindERS1_>
 8009020:	6b3b      	ldr	r3, [r7, #48]	@ 0x30
 8009022:	61fb      	str	r3, [r7, #28]
 8009024:	6afb      	ldr	r3, [r7, #44]	@ 0x2c
 8009026:	61bb      	str	r3, [r7, #24]
 8009028:	6b7b      	ldr	r3, [r7, #52]	@ 0x34
 800902a:	617b      	str	r3, [r7, #20]
    newScreen->setupScreen();
 800902c:	69fb      	ldr	r3, [r7, #28]
 800902e:	681b      	ldr	r3, [r3, #0]
 8009030:	330c      	adds	r3, #12
 8009032:	681b      	ldr	r3, [r3, #0]
 8009034:	69f8      	ldr	r0, [r7, #28]
 8009036:	4798      	blx	r3
    newPresenter->activate();
 8009038:	69bb      	ldr	r3, [r7, #24]
 800903a:	681b      	ldr	r3, [r3, #0]
 800903c:	681b      	ldr	r3, [r3, #0]
 800903e:	69b8      	ldr	r0, [r7, #24]
 8009040:	4798      	blx	r3
    newScreen->bindTransition(*newTransition);
 8009042:	6979      	ldr	r1, [r7, #20]
 8009044:	69f8      	ldr	r0, [r7, #28]
 8009046:	f00c fc8d 	bl	8015964 <_ZN8touchgfx6Screen14bindTransitionERNS_10TransitionE>
    newTransition->init();
 800904a:	697b      	ldr	r3, [r7, #20]
 800904c:	681b      	ldr	r3, [r3, #0]
 800904e:	3310      	adds	r3, #16
 8009050:	681b      	ldr	r3, [r3, #0]
 8009052:	6978      	ldr	r0, [r7, #20]
 8009054:	4798      	blx	r3
    newTransition->invalidate();
 8009056:	697b      	ldr	r3, [r7, #20]
 8009058:	681b      	ldr	r3, [r3, #0]
 800905a:	3314      	adds	r3, #20
 800905c:	681b      	ldr	r3, [r3, #0]
 800905e:	6978      	ldr	r0, [r7, #20]
 8009060:	4798      	blx	r3
}
 8009062:	bf00      	nop
    return newPresenter;
 8009064:	6afb      	ldr	r3, [r7, #44]	@ 0x2c
}
 8009066:	4618      	mov	r0, r3
 8009068:	373c      	adds	r7, #60	@ 0x3c
 800906a:	46bd      	mov	sp, r7
 800906c:	bd90      	pop	{r4, r7, pc}
 800906e:	bf00      	nop
 8009070:	08026c50 	.word	0x08026c50
 8009074:	08026f50 	.word	0x08026f50
 8009078:	08026dc4 	.word	0x08026dc4
 800907c:	08026e08 	.word	0x08026e08
 8009080:	08026eac 	.word	0x08026eac

08009084 <_ZN8touchgfx14makeTransitionI16light_screenView21light_screenPresenterNS_12NoTransitionE5ModelEEPT0_PPNS_6ScreenEPPNS_9PresenterERNS_7MVPHeapEPPNS_10TransitionEPT2_>:
PresenterType* makeTransition(Screen** currentScreen, Presenter** currentPresenter, MVPHeap& heap, Transition** currentTrans, ModelType* model)
 8009084:	b590      	push	{r4, r7, lr}
 8009086:	b08f      	sub	sp, #60	@ 0x3c
 8009088:	af00      	add	r7, sp, #0
 800908a:	60f8      	str	r0, [r7, #12]
 800908c:	60b9      	str	r1, [r7, #8]
 800908e:	607a      	str	r2, [r7, #4]
 8009090:	603b      	str	r3, [r7, #0]
    assert(sizeof(ScreenType) <= heap.screenStorage.element_size() && "View allocation error: Check that all views are added to FrontendHeap::ViewTypes");
 8009092:	687b      	ldr	r3, [r7, #4]
 8009094:	689a      	ldr	r2, [r3, #8]
 8009096:	687b      	ldr	r3, [r7, #4]
 8009098:	689b      	ldr	r3, [r3, #8]
 800909a:	681b      	ldr	r3, [r3, #0]
 800909c:	3320      	adds	r3, #32
 800909e:	681b      	ldr	r3, [r3, #0]
 80090a0:	4610      	mov	r0, r2
 80090a2:	4798      	blx	r3
 80090a4:	4603      	mov	r3, r0
 80090a6:	f5b3 7f09 	cmp.w	r3, #548	@ 0x224
 80090aa:	d205      	bcs.n	80090b8 <_ZN8touchgfx14makeTransitionI16light_screenView21light_screenPresenterNS_12NoTransitionE5ModelEEPT0_PPNS_6ScreenEPPNS_9PresenterERNS_7MVPHeapEPPNS_10TransitionEPT2_+0x34>
 80090ac:	4b7d      	ldr	r3, [pc, #500]	@ (80092a4 <_ZN8touchgfx14makeTransitionI16light_screenView21light_screenPresenterNS_12NoTransitionE5ModelEEPT0_PPNS_6ScreenEPPNS_9PresenterERNS_7MVPHeapEPPNS_10TransitionEPT2_+0x220>)
 80090ae:	4a7e      	ldr	r2, [pc, #504]	@ (80092a8 <_ZN8touchgfx14makeTransitionI16light_screenView21light_screenPresenterNS_12NoTransitionE5ModelEEPT0_PPNS_6ScreenEPPNS_9PresenterERNS_7MVPHeapEPPNS_10TransitionEPT2_+0x224>)
 80090b0:	21a3      	movs	r1, #163	@ 0xa3
 80090b2:	487e      	ldr	r0, [pc, #504]	@ (80092ac <_ZN8touchgfx14makeTransitionI16light_screenView21light_screenPresenterNS_12NoTransitionE5ModelEEPT0_PPNS_6ScreenEPPNS_9PresenterERNS_7MVPHeapEPPNS_10TransitionEPT2_+0x228>)
 80090b4:	f01c fd9c 	bl	8025bf0 <__assert_func>
    assert(sizeof(PresenterType) <= heap.presenterStorage.element_size() && "Presenter allocation error: Check that all presenters are added to FrontendHeap::PresenterTypes");
 80090b8:	687b      	ldr	r3, [r7, #4]
 80090ba:	685a      	ldr	r2, [r3, #4]
 80090bc:	687b      	ldr	r3, [r7, #4]
 80090be:	685b      	ldr	r3, [r3, #4]
 80090c0:	681b      	ldr	r3, [r3, #0]
 80090c2:	3320      	adds	r3, #32
 80090c4:	681b      	ldr	r3, [r3, #0]
 80090c6:	4610      	mov	r0, r2
 80090c8:	4798      	blx	r3
 80090ca:	4603      	mov	r3, r0
 80090cc:	2b0f      	cmp	r3, #15
 80090ce:	d805      	bhi.n	80090dc <_ZN8touchgfx14makeTransitionI16light_screenView21light_screenPresenterNS_12NoTransitionE5ModelEEPT0_PPNS_6ScreenEPPNS_9PresenterERNS_7MVPHeapEPPNS_10TransitionEPT2_+0x58>
 80090d0:	4b77      	ldr	r3, [pc, #476]	@ (80092b0 <_ZN8touchgfx14makeTransitionI16light_screenView21light_screenPresenterNS_12NoTransitionE5ModelEEPT0_PPNS_6ScreenEPPNS_9PresenterERNS_7MVPHeapEPPNS_10TransitionEPT2_+0x22c>)
 80090d2:	4a75      	ldr	r2, [pc, #468]	@ (80092a8 <_ZN8touchgfx14makeTransitionI16light_screenView21light_screenPresenterNS_12NoTransitionE5ModelEEPT0_PPNS_6ScreenEPPNS_9PresenterERNS_7MVPHeapEPPNS_10TransitionEPT2_+0x224>)
 80090d4:	21a4      	movs	r1, #164	@ 0xa4
 80090d6:	4875      	ldr	r0, [pc, #468]	@ (80092ac <_ZN8touchgfx14makeTransitionI16light_screenView21light_screenPresenterNS_12NoTransitionE5ModelEEPT0_PPNS_6ScreenEPPNS_9PresenterERNS_7MVPHeapEPPNS_10TransitionEPT2_+0x228>)
 80090d8:	f01c fd8a 	bl	8025bf0 <__assert_func>
    assert(sizeof(TransType) <= heap.transitionStorage.element_size() && "Transition allocation error: Check that all transitions are added to FrontendHeap::TransitionTypes");
 80090dc:	687b      	ldr	r3, [r7, #4]
 80090de:	68da      	ldr	r2, [r3, #12]
 80090e0:	687b      	ldr	r3, [r7, #4]
 80090e2:	68db      	ldr	r3, [r3, #12]
 80090e4:	681b      	ldr	r3, [r3, #0]
 80090e6:	3320      	adds	r3, #32
 80090e8:	681b      	ldr	r3, [r3, #0]
 80090ea:	4610      	mov	r0, r2
 80090ec:	4798      	blx	r3
 80090ee:	4603      	mov	r3, r0
 80090f0:	2b0b      	cmp	r3, #11
 80090f2:	d805      	bhi.n	8009100 <_ZN8touchgfx14makeTransitionI16light_screenView21light_screenPresenterNS_12NoTransitionE5ModelEEPT0_PPNS_6ScreenEPPNS_9PresenterERNS_7MVPHeapEPPNS_10TransitionEPT2_+0x7c>
 80090f4:	4b6f      	ldr	r3, [pc, #444]	@ (80092b4 <_ZN8touchgfx14makeTransitionI16light_screenView21light_screenPresenterNS_12NoTransitionE5ModelEEPT0_PPNS_6ScreenEPPNS_9PresenterERNS_7MVPHeapEPPNS_10TransitionEPT2_+0x230>)
 80090f6:	4a6c      	ldr	r2, [pc, #432]	@ (80092a8 <_ZN8touchgfx14makeTransitionI16light_screenView21light_screenPresenterNS_12NoTransitionE5ModelEEPT0_PPNS_6ScreenEPPNS_9PresenterERNS_7MVPHeapEPPNS_10TransitionEPT2_+0x224>)
 80090f8:	21a5      	movs	r1, #165	@ 0xa5
 80090fa:	486c      	ldr	r0, [pc, #432]	@ (80092ac <_ZN8touchgfx14makeTransitionI16light_screenView21light_screenPresenterNS_12NoTransitionE5ModelEEPT0_PPNS_6ScreenEPPNS_9PresenterERNS_7MVPHeapEPPNS_10TransitionEPT2_+0x228>)
 80090fc:	f01c fd78 	bl	8025bf0 <__assert_func>
 8009100:	68fb      	ldr	r3, [r7, #12]
 8009102:	62bb      	str	r3, [r7, #40]	@ 0x28
 8009104:	68bb      	ldr	r3, [r7, #8]
 8009106:	627b      	str	r3, [r7, #36]	@ 0x24
 8009108:	683b      	ldr	r3, [r7, #0]
 800910a:	623b      	str	r3, [r7, #32]
    Application::getInstance()->clearAllTimerWidgets();
 800910c:	f00a ff68 	bl	8013fe0 <_ZN8touchgfx11Application11getInstanceEv>
 8009110:	4603      	mov	r3, r0
 8009112:	4618      	mov	r0, r3
 8009114:	f7ff f9dc 	bl	80084d0 <_ZN8touchgfx11Application20clearAllTimerWidgetsEv>
    if (*currentTrans)
 8009118:	6a3b      	ldr	r3, [r7, #32]
 800911a:	681b      	ldr	r3, [r3, #0]
 800911c:	2b00      	cmp	r3, #0
 800911e:	d008      	beq.n	8009132 <_ZN8touchgfx14makeTransitionI16light_screenView21light_screenPresenterNS_12NoTransitionE5ModelEEPT0_PPNS_6ScreenEPPNS_9PresenterERNS_7MVPHeapEPPNS_10TransitionEPT2_+0xae>
        (*currentTrans)->tearDown();
 8009120:	6a3b      	ldr	r3, [r7, #32]
 8009122:	681a      	ldr	r2, [r3, #0]
 8009124:	6a3b      	ldr	r3, [r7, #32]
 8009126:	681b      	ldr	r3, [r3, #0]
 8009128:	681b      	ldr	r3, [r3, #0]
 800912a:	330c      	adds	r3, #12
 800912c:	681b      	ldr	r3, [r3, #0]
 800912e:	4610      	mov	r0, r2
 8009130:	4798      	blx	r3
    if (*currentTrans)
 8009132:	6a3b      	ldr	r3, [r7, #32]
 8009134:	681b      	ldr	r3, [r3, #0]
 8009136:	2b00      	cmp	r3, #0
 8009138:	d007      	beq.n	800914a <_ZN8touchgfx14makeTransitionI16light_screenView21light_screenPresenterNS_12NoTransitionE5ModelEEPT0_PPNS_6ScreenEPPNS_9PresenterERNS_7MVPHeapEPPNS_10TransitionEPT2_+0xc6>
        (*currentTrans)->~Transition();
 800913a:	6a3b      	ldr	r3, [r7, #32]
 800913c:	681a      	ldr	r2, [r3, #0]
 800913e:	6a3b      	ldr	r3, [r7, #32]
 8009140:	681b      	ldr	r3, [r3, #0]
 8009142:	681b      	ldr	r3, [r3, #0]
 8009144:	681b      	ldr	r3, [r3, #0]
 8009146:	4610      	mov	r0, r2
 8009148:	4798      	blx	r3
    if (*currentScreen)
 800914a:	6abb      	ldr	r3, [r7, #40]	@ 0x28
 800914c:	681b      	ldr	r3, [r3, #0]
 800914e:	2b00      	cmp	r3, #0
 8009150:	d008      	beq.n	8009164 <_ZN8touchgfx14makeTransitionI16light_screenView21light_screenPresenterNS_12NoTransitionE5ModelEEPT0_PPNS_6ScreenEPPNS_9PresenterERNS_7MVPHeapEPPNS_10TransitionEPT2_+0xe0>
        (*currentScreen)->tearDownScreen();
 8009152:	6abb      	ldr	r3, [r7, #40]	@ 0x28
 8009154:	681a      	ldr	r2, [r3, #0]
 8009156:	6abb      	ldr	r3, [r7, #40]	@ 0x28
 8009158:	681b      	ldr	r3, [r3, #0]
 800915a:	681b      	ldr	r3, [r3, #0]
 800915c:	3314      	adds	r3, #20
 800915e:	681b      	ldr	r3, [r3, #0]
 8009160:	4610      	mov	r0, r2
 8009162:	4798      	blx	r3
    if (*currentPresenter)
 8009164:	6a7b      	ldr	r3, [r7, #36]	@ 0x24
 8009166:	681b      	ldr	r3, [r3, #0]
 8009168:	2b00      	cmp	r3, #0
 800916a:	d008      	beq.n	800917e <_ZN8touchgfx14makeTransitionI16light_screenView21light_screenPresenterNS_12NoTransitionE5ModelEEPT0_PPNS_6ScreenEPPNS_9PresenterERNS_7MVPHeapEPPNS_10TransitionEPT2_+0xfa>
        (*currentPresenter)->deactivate();
 800916c:	6a7b      	ldr	r3, [r7, #36]	@ 0x24
 800916e:	681a      	ldr	r2, [r3, #0]
 8009170:	6a7b      	ldr	r3, [r7, #36]	@ 0x24
 8009172:	681b      	ldr	r3, [r3, #0]
 8009174:	681b      	ldr	r3, [r3, #0]
 8009176:	3304      	adds	r3, #4
 8009178:	681b      	ldr	r3, [r3, #0]
 800917a:	4610      	mov	r0, r2
 800917c:	4798      	blx	r3
    if (*currentScreen)
 800917e:	6abb      	ldr	r3, [r7, #40]	@ 0x28
 8009180:	681b      	ldr	r3, [r3, #0]
 8009182:	2b00      	cmp	r3, #0
 8009184:	d007      	beq.n	8009196 <_ZN8touchgfx14makeTransitionI16light_screenView21light_screenPresenterNS_12NoTransitionE5ModelEEPT0_PPNS_6ScreenEPPNS_9PresenterERNS_7MVPHeapEPPNS_10TransitionEPT2_+0x112>
        (*currentScreen)->~Screen();
 8009186:	6abb      	ldr	r3, [r7, #40]	@ 0x28
 8009188:	681a      	ldr	r2, [r3, #0]
 800918a:	6abb      	ldr	r3, [r7, #40]	@ 0x28
 800918c:	681b      	ldr	r3, [r3, #0]
 800918e:	681b      	ldr	r3, [r3, #0]
 8009190:	681b      	ldr	r3, [r3, #0]
 8009192:	4610      	mov	r0, r2
 8009194:	4798      	blx	r3
    if (*currentPresenter)
 8009196:	6a7b      	ldr	r3, [r7, #36]	@ 0x24
 8009198:	681b      	ldr	r3, [r3, #0]
 800919a:	2b00      	cmp	r3, #0
 800919c:	d008      	beq.n	80091b0 <_ZN8touchgfx14makeTransitionI16light_screenView21light_screenPresenterNS_12NoTransitionE5ModelEEPT0_PPNS_6ScreenEPPNS_9PresenterERNS_7MVPHeapEPPNS_10TransitionEPT2_+0x12c>
        (*currentPresenter)->~Presenter();
 800919e:	6a7b      	ldr	r3, [r7, #36]	@ 0x24
 80091a0:	681a      	ldr	r2, [r3, #0]
 80091a2:	6a7b      	ldr	r3, [r7, #36]	@ 0x24
 80091a4:	681b      	ldr	r3, [r3, #0]
 80091a6:	681b      	ldr	r3, [r3, #0]
 80091a8:	3308      	adds	r3, #8
 80091aa:	681b      	ldr	r3, [r3, #0]
 80091ac:	4610      	mov	r0, r2
 80091ae:	4798      	blx	r3
}
 80091b0:	bf00      	nop
    TransType* newTransition = new (&heap.transitionStorage.at<TransType>(0)) TransType;
 80091b2:	687b      	ldr	r3, [r7, #4]
 80091b4:	68db      	ldr	r3, [r3, #12]
 80091b6:	2100      	movs	r1, #0
 80091b8:	4618      	mov	r0, r3
 80091ba:	f000 f997 	bl	80094ec <_ZN8touchgfx17AbstractPartition2atINS_12NoTransitionEEERT_t>
 80091be:	4603      	mov	r3, r0
 80091c0:	4619      	mov	r1, r3
 80091c2:	200c      	movs	r0, #12
 80091c4:	f7ff f8ee 	bl	80083a4 <_ZnwjPv>
 80091c8:	4604      	mov	r4, r0
 80091ca:	4620      	mov	r0, r4
 80091cc:	f7ff fd14 	bl	8008bf8 <_ZN8touchgfx12NoTransitionC1Ev>
 80091d0:	637c      	str	r4, [r7, #52]	@ 0x34
    ScreenType* newScreen = new (&heap.screenStorage.at<ScreenType>(0)) ScreenType;
 80091d2:	687b      	ldr	r3, [r7, #4]
 80091d4:	689b      	ldr	r3, [r3, #8]
 80091d6:	2100      	movs	r1, #0
 80091d8:	4618      	mov	r0, r3
 80091da:	f000 fa02 	bl	80095e2 <_ZN8touchgfx17AbstractPartition2atI16light_screenViewEERT_t>
 80091de:	4603      	mov	r3, r0
 80091e0:	4619      	mov	r1, r3
 80091e2:	f44f 7009 	mov.w	r0, #548	@ 0x224
 80091e6:	f7ff f8dd 	bl	80083a4 <_ZnwjPv>
 80091ea:	4604      	mov	r4, r0
 80091ec:	4620      	mov	r0, r4
 80091ee:	f004 fe69 	bl	800dec4 <_ZN16light_screenViewC1Ev>
 80091f2:	633c      	str	r4, [r7, #48]	@ 0x30
    PresenterType* newPresenter = new (&heap.presenterStorage.at<PresenterType>(0)) PresenterType(*newScreen);
 80091f4:	687b      	ldr	r3, [r7, #4]
 80091f6:	685b      	ldr	r3, [r3, #4]
 80091f8:	2100      	movs	r1, #0
 80091fa:	4618      	mov	r0, r3
 80091fc:	f000 fa04 	bl	8009608 <_ZN8touchgfx17AbstractPartition2atI21light_screenPresenterEERT_t>
 8009200:	4603      	mov	r3, r0
 8009202:	4619      	mov	r1, r3
 8009204:	2010      	movs	r0, #16
 8009206:	f7ff f8cd 	bl	80083a4 <_ZnwjPv>
 800920a:	4604      	mov	r4, r0
 800920c:	6b39      	ldr	r1, [r7, #48]	@ 0x30
 800920e:	4620      	mov	r0, r4
 8009210:	f004 fde8 	bl	800dde4 <_ZN21light_screenPresenterC1ER16light_screenView>
 8009214:	62fc      	str	r4, [r7, #44]	@ 0x2c
    *currentTrans = newTransition;
 8009216:	683b      	ldr	r3, [r7, #0]
 8009218:	6b7a      	ldr	r2, [r7, #52]	@ 0x34
 800921a:	601a      	str	r2, [r3, #0]
    *currentPresenter = newPresenter;
 800921c:	68bb      	ldr	r3, [r7, #8]
 800921e:	6afa      	ldr	r2, [r7, #44]	@ 0x2c
 8009220:	601a      	str	r2, [r3, #0]
    *currentScreen = newScreen;
 8009222:	68fb      	ldr	r3, [r7, #12]
 8009224:	6b3a      	ldr	r2, [r7, #48]	@ 0x30
 8009226:	601a      	str	r2, [r3, #0]
    model->bind(newPresenter);
 8009228:	6afb      	ldr	r3, [r7, #44]	@ 0x2c
 800922a:	2b00      	cmp	r3, #0
 800922c:	d002      	beq.n	8009234 <_ZN8touchgfx14makeTransitionI16light_screenView21light_screenPresenterNS_12NoTransitionE5ModelEEPT0_PPNS_6ScreenEPPNS_9PresenterERNS_7MVPHeapEPPNS_10TransitionEPT2_+0x1b0>
 800922e:	6afb      	ldr	r3, [r7, #44]	@ 0x2c
 8009230:	3304      	adds	r3, #4
 8009232:	e000      	b.n	8009236 <_ZN8touchgfx14makeTransitionI16light_screenView21light_screenPresenterNS_12NoTransitionE5ModelEEPT0_PPNS_6ScreenEPPNS_9PresenterERNS_7MVPHeapEPPNS_10TransitionEPT2_+0x1b2>
 8009234:	2300      	movs	r3, #0
 8009236:	4619      	mov	r1, r3
 8009238:	6cb8      	ldr	r0, [r7, #72]	@ 0x48
 800923a:	f7ff fa8f 	bl	800875c <_ZN5Model4bindEP13ModelListener>
    newPresenter->bind(model);
 800923e:	6afb      	ldr	r3, [r7, #44]	@ 0x2c
 8009240:	3304      	adds	r3, #4
 8009242:	6cb9      	ldr	r1, [r7, #72]	@ 0x48
 8009244:	4618      	mov	r0, r3
 8009246:	f7ff fafc 	bl	8008842 <_ZN13ModelListener4bindEP5Model>
    newScreen->bind(*newPresenter);
 800924a:	6b3b      	ldr	r3, [r7, #48]	@ 0x30
 800924c:	6af9      	ldr	r1, [r7, #44]	@ 0x2c
 800924e:	4618      	mov	r0, r3
 8009250:	f000 f9ed 	bl	800962e <_ZN8touchgfx4ViewI21light_screenPresenterE4bindERS1_>
 8009254:	6b3b      	ldr	r3, [r7, #48]	@ 0x30
 8009256:	61fb      	str	r3, [r7, #28]
 8009258:	6afb      	ldr	r3, [r7, #44]	@ 0x2c
 800925a:	61bb      	str	r3, [r7, #24]
 800925c:	6b7b      	ldr	r3, [r7, #52]	@ 0x34
 800925e:	617b      	str	r3, [r7, #20]
    newScreen->setupScreen();
 8009260:	69fb      	ldr	r3, [r7, #28]
 8009262:	681b      	ldr	r3, [r3, #0]
 8009264:	330c      	adds	r3, #12
 8009266:	681b      	ldr	r3, [r3, #0]
 8009268:	69f8      	ldr	r0, [r7, #28]
 800926a:	4798      	blx	r3
    newPresenter->activate();
 800926c:	69bb      	ldr	r3, [r7, #24]
 800926e:	681b      	ldr	r3, [r3, #0]
 8009270:	681b      	ldr	r3, [r3, #0]
 8009272:	69b8      	ldr	r0, [r7, #24]
 8009274:	4798      	blx	r3
    newScreen->bindTransition(*newTransition);
 8009276:	6979      	ldr	r1, [r7, #20]
 8009278:	69f8      	ldr	r0, [r7, #28]
 800927a:	f00c fb73 	bl	8015964 <_ZN8touchgfx6Screen14bindTransitionERNS_10TransitionE>
    newTransition->init();
 800927e:	697b      	ldr	r3, [r7, #20]
 8009280:	681b      	ldr	r3, [r3, #0]
 8009282:	3310      	adds	r3, #16
 8009284:	681b      	ldr	r3, [r3, #0]
 8009286:	6978      	ldr	r0, [r7, #20]
 8009288:	4798      	blx	r3
    newTransition->invalidate();
 800928a:	697b      	ldr	r3, [r7, #20]
 800928c:	681b      	ldr	r3, [r3, #0]
 800928e:	3314      	adds	r3, #20
 8009290:	681b      	ldr	r3, [r3, #0]
 8009292:	6978      	ldr	r0, [r7, #20]
 8009294:	4798      	blx	r3
}
 8009296:	bf00      	nop
    return newPresenter;
 8009298:	6afb      	ldr	r3, [r7, #44]	@ 0x2c
}
 800929a:	4618      	mov	r0, r3
 800929c:	373c      	adds	r7, #60	@ 0x3c
 800929e:	46bd      	mov	sp, r7
 80092a0:	bd90      	pop	{r4, r7, pc}
 80092a2:	bf00      	nop
 80092a4:	08026c50 	.word	0x08026c50
 80092a8:	08027038 	.word	0x08027038
 80092ac:	08026dc4 	.word	0x08026dc4
 80092b0:	08026e08 	.word	0x08026e08
 80092b4:	08026eac 	.word	0x08026eac

080092b8 <_ZN8touchgfx14makeTransitionI8MainView13MainPresenterNS_12NoTransitionE5ModelEEPT0_PPNS_6ScreenEPPNS_9PresenterERNS_7MVPHeapEPPNS_10TransitionEPT2_>:
PresenterType* makeTransition(Screen** currentScreen, Presenter** currentPresenter, MVPHeap& heap, Transition** currentTrans, ModelType* model)
 80092b8:	b590      	push	{r4, r7, lr}
 80092ba:	b08f      	sub	sp, #60	@ 0x3c
 80092bc:	af00      	add	r7, sp, #0
 80092be:	60f8      	str	r0, [r7, #12]
 80092c0:	60b9      	str	r1, [r7, #8]
 80092c2:	607a      	str	r2, [r7, #4]
 80092c4:	603b      	str	r3, [r7, #0]
    assert(sizeof(ScreenType) <= heap.screenStorage.element_size() && "View allocation error: Check that all views are added to FrontendHeap::ViewTypes");
 80092c6:	687b      	ldr	r3, [r7, #4]
 80092c8:	689a      	ldr	r2, [r3, #8]
 80092ca:	687b      	ldr	r3, [r7, #4]
 80092cc:	689b      	ldr	r3, [r3, #8]
 80092ce:	681b      	ldr	r3, [r3, #0]
 80092d0:	3320      	adds	r3, #32
 80092d2:	681b      	ldr	r3, [r3, #0]
 80092d4:	4610      	mov	r0, r2
 80092d6:	4798      	blx	r3
 80092d8:	4603      	mov	r3, r0
 80092da:	f5b3 7f76 	cmp.w	r3, #984	@ 0x3d8
 80092de:	d205      	bcs.n	80092ec <_ZN8touchgfx14makeTransitionI8MainView13MainPresenterNS_12NoTransitionE5ModelEEPT0_PPNS_6ScreenEPPNS_9PresenterERNS_7MVPHeapEPPNS_10TransitionEPT2_+0x34>
 80092e0:	4b7d      	ldr	r3, [pc, #500]	@ (80094d8 <_ZN8touchgfx14makeTransitionI8MainView13MainPresenterNS_12NoTransitionE5ModelEEPT0_PPNS_6ScreenEPPNS_9PresenterERNS_7MVPHeapEPPNS_10TransitionEPT2_+0x220>)
 80092e2:	4a7e      	ldr	r2, [pc, #504]	@ (80094dc <_ZN8touchgfx14makeTransitionI8MainView13MainPresenterNS_12NoTransitionE5ModelEEPT0_PPNS_6ScreenEPPNS_9PresenterERNS_7MVPHeapEPPNS_10TransitionEPT2_+0x224>)
 80092e4:	21a3      	movs	r1, #163	@ 0xa3
 80092e6:	487e      	ldr	r0, [pc, #504]	@ (80094e0 <_ZN8touchgfx14makeTransitionI8MainView13MainPresenterNS_12NoTransitionE5ModelEEPT0_PPNS_6ScreenEPPNS_9PresenterERNS_7MVPHeapEPPNS_10TransitionEPT2_+0x228>)
 80092e8:	f01c fc82 	bl	8025bf0 <__assert_func>
    assert(sizeof(PresenterType) <= heap.presenterStorage.element_size() && "Presenter allocation error: Check that all presenters are added to FrontendHeap::PresenterTypes");
 80092ec:	687b      	ldr	r3, [r7, #4]
 80092ee:	685a      	ldr	r2, [r3, #4]
 80092f0:	687b      	ldr	r3, [r7, #4]
 80092f2:	685b      	ldr	r3, [r3, #4]
 80092f4:	681b      	ldr	r3, [r3, #0]
 80092f6:	3320      	adds	r3, #32
 80092f8:	681b      	ldr	r3, [r3, #0]
 80092fa:	4610      	mov	r0, r2
 80092fc:	4798      	blx	r3
 80092fe:	4603      	mov	r3, r0
 8009300:	2b0f      	cmp	r3, #15
 8009302:	d805      	bhi.n	8009310 <_ZN8touchgfx14makeTransitionI8MainView13MainPresenterNS_12NoTransitionE5ModelEEPT0_PPNS_6ScreenEPPNS_9PresenterERNS_7MVPHeapEPPNS_10TransitionEPT2_+0x58>
 8009304:	4b77      	ldr	r3, [pc, #476]	@ (80094e4 <_ZN8touchgfx14makeTransitionI8MainView13MainPresenterNS_12NoTransitionE5ModelEEPT0_PPNS_6ScreenEPPNS_9PresenterERNS_7MVPHeapEPPNS_10TransitionEPT2_+0x22c>)
 8009306:	4a75      	ldr	r2, [pc, #468]	@ (80094dc <_ZN8touchgfx14makeTransitionI8MainView13MainPresenterNS_12NoTransitionE5ModelEEPT0_PPNS_6ScreenEPPNS_9PresenterERNS_7MVPHeapEPPNS_10TransitionEPT2_+0x224>)
 8009308:	21a4      	movs	r1, #164	@ 0xa4
 800930a:	4875      	ldr	r0, [pc, #468]	@ (80094e0 <_ZN8touchgfx14makeTransitionI8MainView13MainPresenterNS_12NoTransitionE5ModelEEPT0_PPNS_6ScreenEPPNS_9PresenterERNS_7MVPHeapEPPNS_10TransitionEPT2_+0x228>)
 800930c:	f01c fc70 	bl	8025bf0 <__assert_func>
    assert(sizeof(TransType) <= heap.transitionStorage.element_size() && "Transition allocation error: Check that all transitions are added to FrontendHeap::TransitionTypes");
 8009310:	687b      	ldr	r3, [r7, #4]
 8009312:	68da      	ldr	r2, [r3, #12]
 8009314:	687b      	ldr	r3, [r7, #4]
 8009316:	68db      	ldr	r3, [r3, #12]
 8009318:	681b      	ldr	r3, [r3, #0]
 800931a:	3320      	adds	r3, #32
 800931c:	681b      	ldr	r3, [r3, #0]
 800931e:	4610      	mov	r0, r2
 8009320:	4798      	blx	r3
 8009322:	4603      	mov	r3, r0
 8009324:	2b0b      	cmp	r3, #11
 8009326:	d805      	bhi.n	8009334 <_ZN8touchgfx14makeTransitionI8MainView13MainPresenterNS_12NoTransitionE5ModelEEPT0_PPNS_6ScreenEPPNS_9PresenterERNS_7MVPHeapEPPNS_10TransitionEPT2_+0x7c>
 8009328:	4b6f      	ldr	r3, [pc, #444]	@ (80094e8 <_ZN8touchgfx14makeTransitionI8MainView13MainPresenterNS_12NoTransitionE5ModelEEPT0_PPNS_6ScreenEPPNS_9PresenterERNS_7MVPHeapEPPNS_10TransitionEPT2_+0x230>)
 800932a:	4a6c      	ldr	r2, [pc, #432]	@ (80094dc <_ZN8touchgfx14makeTransitionI8MainView13MainPresenterNS_12NoTransitionE5ModelEEPT0_PPNS_6ScreenEPPNS_9PresenterERNS_7MVPHeapEPPNS_10TransitionEPT2_+0x224>)
 800932c:	21a5      	movs	r1, #165	@ 0xa5
 800932e:	486c      	ldr	r0, [pc, #432]	@ (80094e0 <_ZN8touchgfx14makeTransitionI8MainView13MainPresenterNS_12NoTransitionE5ModelEEPT0_PPNS_6ScreenEPPNS_9PresenterERNS_7MVPHeapEPPNS_10TransitionEPT2_+0x228>)
 8009330:	f01c fc5e 	bl	8025bf0 <__assert_func>
 8009334:	68fb      	ldr	r3, [r7, #12]
 8009336:	62bb      	str	r3, [r7, #40]	@ 0x28
 8009338:	68bb      	ldr	r3, [r7, #8]
 800933a:	627b      	str	r3, [r7, #36]	@ 0x24
 800933c:	683b      	ldr	r3, [r7, #0]
 800933e:	623b      	str	r3, [r7, #32]
    Application::getInstance()->clearAllTimerWidgets();
 8009340:	f00a fe4e 	bl	8013fe0 <_ZN8touchgfx11Application11getInstanceEv>
 8009344:	4603      	mov	r3, r0
 8009346:	4618      	mov	r0, r3
 8009348:	f7ff f8c2 	bl	80084d0 <_ZN8touchgfx11Application20clearAllTimerWidgetsEv>
    if (*currentTrans)
 800934c:	6a3b      	ldr	r3, [r7, #32]
 800934e:	681b      	ldr	r3, [r3, #0]
 8009350:	2b00      	cmp	r3, #0
 8009352:	d008      	beq.n	8009366 <_ZN8touchgfx14makeTransitionI8MainView13MainPresenterNS_12NoTransitionE5ModelEEPT0_PPNS_6ScreenEPPNS_9PresenterERNS_7MVPHeapEPPNS_10TransitionEPT2_+0xae>
        (*currentTrans)->tearDown();
 8009354:	6a3b      	ldr	r3, [r7, #32]
 8009356:	681a      	ldr	r2, [r3, #0]
 8009358:	6a3b      	ldr	r3, [r7, #32]
 800935a:	681b      	ldr	r3, [r3, #0]
 800935c:	681b      	ldr	r3, [r3, #0]
 800935e:	330c      	adds	r3, #12
 8009360:	681b      	ldr	r3, [r3, #0]
 8009362:	4610      	mov	r0, r2
 8009364:	4798      	blx	r3
    if (*currentTrans)
 8009366:	6a3b      	ldr	r3, [r7, #32]
 8009368:	681b      	ldr	r3, [r3, #0]
 800936a:	2b00      	cmp	r3, #0
 800936c:	d007      	beq.n	800937e <_ZN8touchgfx14makeTransitionI8MainView13MainPresenterNS_12NoTransitionE5ModelEEPT0_PPNS_6ScreenEPPNS_9PresenterERNS_7MVPHeapEPPNS_10TransitionEPT2_+0xc6>
        (*currentTrans)->~Transition();
 800936e:	6a3b      	ldr	r3, [r7, #32]
 8009370:	681a      	ldr	r2, [r3, #0]
 8009372:	6a3b      	ldr	r3, [r7, #32]
 8009374:	681b      	ldr	r3, [r3, #0]
 8009376:	681b      	ldr	r3, [r3, #0]
 8009378:	681b      	ldr	r3, [r3, #0]
 800937a:	4610      	mov	r0, r2
 800937c:	4798      	blx	r3
    if (*currentScreen)
 800937e:	6abb      	ldr	r3, [r7, #40]	@ 0x28
 8009380:	681b      	ldr	r3, [r3, #0]
 8009382:	2b00      	cmp	r3, #0
 8009384:	d008      	beq.n	8009398 <_ZN8touchgfx14makeTransitionI8MainView13MainPresenterNS_12NoTransitionE5ModelEEPT0_PPNS_6ScreenEPPNS_9PresenterERNS_7MVPHeapEPPNS_10TransitionEPT2_+0xe0>
        (*currentScreen)->tearDownScreen();
 8009386:	6abb      	ldr	r3, [r7, #40]	@ 0x28
 8009388:	681a      	ldr	r2, [r3, #0]
 800938a:	6abb      	ldr	r3, [r7, #40]	@ 0x28
 800938c:	681b      	ldr	r3, [r3, #0]
 800938e:	681b      	ldr	r3, [r3, #0]
 8009390:	3314      	adds	r3, #20
 8009392:	681b      	ldr	r3, [r3, #0]
 8009394:	4610      	mov	r0, r2
 8009396:	4798      	blx	r3
    if (*currentPresenter)
 8009398:	6a7b      	ldr	r3, [r7, #36]	@ 0x24
 800939a:	681b      	ldr	r3, [r3, #0]
 800939c:	2b00      	cmp	r3, #0
 800939e:	d008      	beq.n	80093b2 <_ZN8touchgfx14makeTransitionI8MainView13MainPresenterNS_12NoTransitionE5ModelEEPT0_PPNS_6ScreenEPPNS_9PresenterERNS_7MVPHeapEPPNS_10TransitionEPT2_+0xfa>
        (*currentPresenter)->deactivate();
 80093a0:	6a7b      	ldr	r3, [r7, #36]	@ 0x24
 80093a2:	681a      	ldr	r2, [r3, #0]
 80093a4:	6a7b      	ldr	r3, [r7, #36]	@ 0x24
 80093a6:	681b      	ldr	r3, [r3, #0]
 80093a8:	681b      	ldr	r3, [r3, #0]
 80093aa:	3304      	adds	r3, #4
 80093ac:	681b      	ldr	r3, [r3, #0]
 80093ae:	4610      	mov	r0, r2
 80093b0:	4798      	blx	r3
    if (*currentScreen)
 80093b2:	6abb      	ldr	r3, [r7, #40]	@ 0x28
 80093b4:	681b      	ldr	r3, [r3, #0]
 80093b6:	2b00      	cmp	r3, #0
 80093b8:	d007      	beq.n	80093ca <_ZN8touchgfx14makeTransitionI8MainView13MainPresenterNS_12NoTransitionE5ModelEEPT0_PPNS_6ScreenEPPNS_9PresenterERNS_7MVPHeapEPPNS_10TransitionEPT2_+0x112>
        (*currentScreen)->~Screen();
 80093ba:	6abb      	ldr	r3, [r7, #40]	@ 0x28
 80093bc:	681a      	ldr	r2, [r3, #0]
 80093be:	6abb      	ldr	r3, [r7, #40]	@ 0x28
 80093c0:	681b      	ldr	r3, [r3, #0]
 80093c2:	681b      	ldr	r3, [r3, #0]
 80093c4:	681b      	ldr	r3, [r3, #0]
 80093c6:	4610      	mov	r0, r2
 80093c8:	4798      	blx	r3
    if (*currentPresenter)
 80093ca:	6a7b      	ldr	r3, [r7, #36]	@ 0x24
 80093cc:	681b      	ldr	r3, [r3, #0]
 80093ce:	2b00      	cmp	r3, #0
 80093d0:	d008      	beq.n	80093e4 <_ZN8touchgfx14makeTransitionI8MainView13MainPresenterNS_12NoTransitionE5ModelEEPT0_PPNS_6ScreenEPPNS_9PresenterERNS_7MVPHeapEPPNS_10TransitionEPT2_+0x12c>
        (*currentPresenter)->~Presenter();
 80093d2:	6a7b      	ldr	r3, [r7, #36]	@ 0x24
 80093d4:	681a      	ldr	r2, [r3, #0]
 80093d6:	6a7b      	ldr	r3, [r7, #36]	@ 0x24
 80093d8:	681b      	ldr	r3, [r3, #0]
 80093da:	681b      	ldr	r3, [r3, #0]
 80093dc:	3308      	adds	r3, #8
 80093de:	681b      	ldr	r3, [r3, #0]
 80093e0:	4610      	mov	r0, r2
 80093e2:	4798      	blx	r3
}
 80093e4:	bf00      	nop
    TransType* newTransition = new (&heap.transitionStorage.at<TransType>(0)) TransType;
 80093e6:	687b      	ldr	r3, [r7, #4]
 80093e8:	68db      	ldr	r3, [r3, #12]
 80093ea:	2100      	movs	r1, #0
 80093ec:	4618      	mov	r0, r3
 80093ee:	f000 f87d 	bl	80094ec <_ZN8touchgfx17AbstractPartition2atINS_12NoTransitionEEERT_t>
 80093f2:	4603      	mov	r3, r0
 80093f4:	4619      	mov	r1, r3
 80093f6:	200c      	movs	r0, #12
 80093f8:	f7fe ffd4 	bl	80083a4 <_ZnwjPv>
 80093fc:	4604      	mov	r4, r0
 80093fe:	4620      	mov	r0, r4
 8009400:	f7ff fbfa 	bl	8008bf8 <_ZN8touchgfx12NoTransitionC1Ev>
 8009404:	637c      	str	r4, [r7, #52]	@ 0x34
    ScreenType* newScreen = new (&heap.screenStorage.at<ScreenType>(0)) ScreenType;
 8009406:	687b      	ldr	r3, [r7, #4]
 8009408:	689b      	ldr	r3, [r3, #8]
 800940a:	2100      	movs	r1, #0
 800940c:	4618      	mov	r0, r3
 800940e:	f000 f91c 	bl	800964a <_ZN8touchgfx17AbstractPartition2atI8MainViewEERT_t>
 8009412:	4603      	mov	r3, r0
 8009414:	4619      	mov	r1, r3
 8009416:	f44f 7076 	mov.w	r0, #984	@ 0x3d8
 800941a:	f7fe ffc3 	bl	80083a4 <_ZnwjPv>
 800941e:	4604      	mov	r4, r0
 8009420:	4620      	mov	r0, r4
 8009422:	f004 fe93 	bl	800e14c <_ZN8MainViewC1Ev>
 8009426:	633c      	str	r4, [r7, #48]	@ 0x30
    PresenterType* newPresenter = new (&heap.presenterStorage.at<PresenterType>(0)) PresenterType(*newScreen);
 8009428:	687b      	ldr	r3, [r7, #4]
 800942a:	685b      	ldr	r3, [r3, #4]
 800942c:	2100      	movs	r1, #0
 800942e:	4618      	mov	r0, r3
 8009430:	f000 f91e 	bl	8009670 <_ZN8touchgfx17AbstractPartition2atI13MainPresenterEERT_t>
 8009434:	4603      	mov	r3, r0
 8009436:	4619      	mov	r1, r3
 8009438:	2010      	movs	r0, #16
 800943a:	f7fe ffb3 	bl	80083a4 <_ZnwjPv>
 800943e:	4604      	mov	r4, r0
 8009440:	6b39      	ldr	r1, [r7, #48]	@ 0x30
 8009442:	4620      	mov	r0, r4
 8009444:	f004 fde0 	bl	800e008 <_ZN13MainPresenterC1ER8MainView>
 8009448:	62fc      	str	r4, [r7, #44]	@ 0x2c
    *currentTrans = newTransition;
 800944a:	683b      	ldr	r3, [r7, #0]
 800944c:	6b7a      	ldr	r2, [r7, #52]	@ 0x34
 800944e:	601a      	str	r2, [r3, #0]
    *currentPresenter = newPresenter;
 8009450:	68bb      	ldr	r3, [r7, #8]
 8009452:	6afa      	ldr	r2, [r7, #44]	@ 0x2c
 8009454:	601a      	str	r2, [r3, #0]
    *currentScreen = newScreen;
 8009456:	68fb      	ldr	r3, [r7, #12]
 8009458:	6b3a      	ldr	r2, [r7, #48]	@ 0x30
 800945a:	601a      	str	r2, [r3, #0]
    model->bind(newPresenter);
 800945c:	6afb      	ldr	r3, [r7, #44]	@ 0x2c
 800945e:	2b00      	cmp	r3, #0
 8009460:	d002      	beq.n	8009468 <_ZN8touchgfx14makeTransitionI8MainView13MainPresenterNS_12NoTransitionE5ModelEEPT0_PPNS_6ScreenEPPNS_9PresenterERNS_7MVPHeapEPPNS_10TransitionEPT2_+0x1b0>
 8009462:	6afb      	ldr	r3, [r7, #44]	@ 0x2c
 8009464:	3304      	adds	r3, #4
 8009466:	e000      	b.n	800946a <_ZN8touchgfx14makeTransitionI8MainView13MainPresenterNS_12NoTransitionE5ModelEEPT0_PPNS_6ScreenEPPNS_9PresenterERNS_7MVPHeapEPPNS_10TransitionEPT2_+0x1b2>
 8009468:	2300      	movs	r3, #0
 800946a:	4619      	mov	r1, r3
 800946c:	6cb8      	ldr	r0, [r7, #72]	@ 0x48
 800946e:	f7ff f975 	bl	800875c <_ZN5Model4bindEP13ModelListener>
    newPresenter->bind(model);
 8009472:	6afb      	ldr	r3, [r7, #44]	@ 0x2c
 8009474:	3304      	adds	r3, #4
 8009476:	6cb9      	ldr	r1, [r7, #72]	@ 0x48
 8009478:	4618      	mov	r0, r3
 800947a:	f7ff f9e2 	bl	8008842 <_ZN13ModelListener4bindEP5Model>
    newScreen->bind(*newPresenter);
 800947e:	6b3b      	ldr	r3, [r7, #48]	@ 0x30
 8009480:	6af9      	ldr	r1, [r7, #44]	@ 0x2c
 8009482:	4618      	mov	r0, r3
 8009484:	f000 f907 	bl	8009696 <_ZN8touchgfx4ViewI13MainPresenterE4bindERS1_>
 8009488:	6b3b      	ldr	r3, [r7, #48]	@ 0x30
 800948a:	61fb      	str	r3, [r7, #28]
 800948c:	6afb      	ldr	r3, [r7, #44]	@ 0x2c
 800948e:	61bb      	str	r3, [r7, #24]
 8009490:	6b7b      	ldr	r3, [r7, #52]	@ 0x34
 8009492:	617b      	str	r3, [r7, #20]
    newScreen->setupScreen();
 8009494:	69fb      	ldr	r3, [r7, #28]
 8009496:	681b      	ldr	r3, [r3, #0]
 8009498:	330c      	adds	r3, #12
 800949a:	681b      	ldr	r3, [r3, #0]
 800949c:	69f8      	ldr	r0, [r7, #28]
 800949e:	4798      	blx	r3
    newPresenter->activate();
 80094a0:	69bb      	ldr	r3, [r7, #24]
 80094a2:	681b      	ldr	r3, [r3, #0]
 80094a4:	681b      	ldr	r3, [r3, #0]
 80094a6:	69b8      	ldr	r0, [r7, #24]
 80094a8:	4798      	blx	r3
    newScreen->bindTransition(*newTransition);
 80094aa:	6979      	ldr	r1, [r7, #20]
 80094ac:	69f8      	ldr	r0, [r7, #28]
 80094ae:	f00c fa59 	bl	8015964 <_ZN8touchgfx6Screen14bindTransitionERNS_10TransitionE>
    newTransition->init();
 80094b2:	697b      	ldr	r3, [r7, #20]
 80094b4:	681b      	ldr	r3, [r3, #0]
 80094b6:	3310      	adds	r3, #16
 80094b8:	681b      	ldr	r3, [r3, #0]
 80094ba:	6978      	ldr	r0, [r7, #20]
 80094bc:	4798      	blx	r3
    newTransition->invalidate();
 80094be:	697b      	ldr	r3, [r7, #20]
 80094c0:	681b      	ldr	r3, [r3, #0]
 80094c2:	3314      	adds	r3, #20
 80094c4:	681b      	ldr	r3, [r3, #0]
 80094c6:	6978      	ldr	r0, [r7, #20]
 80094c8:	4798      	blx	r3
}
 80094ca:	bf00      	nop
    return newPresenter;
 80094cc:	6afb      	ldr	r3, [r7, #44]	@ 0x2c
}
 80094ce:	4618      	mov	r0, r3
 80094d0:	373c      	adds	r7, #60	@ 0x3c
 80094d2:	46bd      	mov	sp, r7
 80094d4:	bd90      	pop	{r4, r7, pc}
 80094d6:	bf00      	nop
 80094d8:	08026c50 	.word	0x08026c50
 80094dc:	08027114 	.word	0x08027114
 80094e0:	08026dc4 	.word	0x08026dc4
 80094e4:	08026e08 	.word	0x08026e08
 80094e8:	08026eac 	.word	0x08026eac

080094ec <_ZN8touchgfx17AbstractPartition2atINS_12NoTransitionEEERT_t>:
     * @param  index The index into the Partition storage where the returned object is located.
     *
     * @return A typed reference to the object at the specified index.
     */
    template <typename T>
    T& at(const uint16_t index)
 80094ec:	b580      	push	{r7, lr}
 80094ee:	b082      	sub	sp, #8
 80094f0:	af00      	add	r7, sp, #0
 80094f2:	6078      	str	r0, [r7, #4]
 80094f4:	460b      	mov	r3, r1
 80094f6:	807b      	strh	r3, [r7, #2]
    {
        return *static_cast<T*>(element(index));
 80094f8:	687b      	ldr	r3, [r7, #4]
 80094fa:	681b      	ldr	r3, [r3, #0]
 80094fc:	3324      	adds	r3, #36	@ 0x24
 80094fe:	681b      	ldr	r3, [r3, #0]
 8009500:	887a      	ldrh	r2, [r7, #2]
 8009502:	4611      	mov	r1, r2
 8009504:	6878      	ldr	r0, [r7, #4]
 8009506:	4798      	blx	r3
 8009508:	4603      	mov	r3, r0
    }
 800950a:	4618      	mov	r0, r3
 800950c:	3708      	adds	r7, #8
 800950e:	46bd      	mov	sp, r7
 8009510:	bd80      	pop	{r7, pc}

08009512 <_ZN8touchgfx17AbstractPartition2atI19humidity_screenViewEERT_t>:
    T& at(const uint16_t index)
 8009512:	b580      	push	{r7, lr}
 8009514:	b082      	sub	sp, #8
 8009516:	af00      	add	r7, sp, #0
 8009518:	6078      	str	r0, [r7, #4]
 800951a:	460b      	mov	r3, r1
 800951c:	807b      	strh	r3, [r7, #2]
        return *static_cast<T*>(element(index));
 800951e:	687b      	ldr	r3, [r7, #4]
 8009520:	681b      	ldr	r3, [r3, #0]
 8009522:	3324      	adds	r3, #36	@ 0x24
 8009524:	681b      	ldr	r3, [r3, #0]
 8009526:	887a      	ldrh	r2, [r7, #2]
 8009528:	4611      	mov	r1, r2
 800952a:	6878      	ldr	r0, [r7, #4]
 800952c:	4798      	blx	r3
 800952e:	4603      	mov	r3, r0
    }
 8009530:	4618      	mov	r0, r3
 8009532:	3708      	adds	r7, #8
 8009534:	46bd      	mov	sp, r7
 8009536:	bd80      	pop	{r7, pc}

08009538 <_ZN8touchgfx17AbstractPartition2atI24humidity_screenPresenterEERT_t>:
    T& at(const uint16_t index)
 8009538:	b580      	push	{r7, lr}
 800953a:	b082      	sub	sp, #8
 800953c:	af00      	add	r7, sp, #0
 800953e:	6078      	str	r0, [r7, #4]
 8009540:	460b      	mov	r3, r1
 8009542:	807b      	strh	r3, [r7, #2]
        return *static_cast<T*>(element(index));
 8009544:	687b      	ldr	r3, [r7, #4]
 8009546:	681b      	ldr	r3, [r3, #0]
 8009548:	3324      	adds	r3, #36	@ 0x24
 800954a:	681b      	ldr	r3, [r3, #0]
 800954c:	887a      	ldrh	r2, [r7, #2]
 800954e:	4611      	mov	r1, r2
 8009550:	6878      	ldr	r0, [r7, #4]
 8009552:	4798      	blx	r3
 8009554:	4603      	mov	r3, r0
    }
 8009556:	4618      	mov	r0, r3
 8009558:	3708      	adds	r7, #8
 800955a:	46bd      	mov	sp, r7
 800955c:	bd80      	pop	{r7, pc}

0800955e <_ZN8touchgfx4ViewI24humidity_screenPresenterE4bindERS1_>:
     * Binds an instance of a specific Presenter type (subclass) to the View instance. This function
     * is called automatically when a new presenter/view pair is activated.
     *
     * @param [in] newPresenter The specific Presenter to be associated with the View.
     */
    void bind(T& newPresenter)
 800955e:	b480      	push	{r7}
 8009560:	b083      	sub	sp, #12
 8009562:	af00      	add	r7, sp, #0
 8009564:	6078      	str	r0, [r7, #4]
 8009566:	6039      	str	r1, [r7, #0]
    {
        presenter = &newPresenter;
 8009568:	687b      	ldr	r3, [r7, #4]
 800956a:	683a      	ldr	r2, [r7, #0]
 800956c:	63da      	str	r2, [r3, #60]	@ 0x3c
    }
 800956e:	bf00      	nop
 8009570:	370c      	adds	r7, #12
 8009572:	46bd      	mov	sp, r7
 8009574:	f85d 7b04 	ldr.w	r7, [sp], #4
 8009578:	4770      	bx	lr

0800957a <_ZN8touchgfx17AbstractPartition2atI22temperature_screenViewEERT_t>:
    T& at(const uint16_t index)
 800957a:	b580      	push	{r7, lr}
 800957c:	b082      	sub	sp, #8
 800957e:	af00      	add	r7, sp, #0
 8009580:	6078      	str	r0, [r7, #4]
 8009582:	460b      	mov	r3, r1
 8009584:	807b      	strh	r3, [r7, #2]
        return *static_cast<T*>(element(index));
 8009586:	687b      	ldr	r3, [r7, #4]
 8009588:	681b      	ldr	r3, [r3, #0]
 800958a:	3324      	adds	r3, #36	@ 0x24
 800958c:	681b      	ldr	r3, [r3, #0]
 800958e:	887a      	ldrh	r2, [r7, #2]
 8009590:	4611      	mov	r1, r2
 8009592:	6878      	ldr	r0, [r7, #4]
 8009594:	4798      	blx	r3
 8009596:	4603      	mov	r3, r0
    }
 8009598:	4618      	mov	r0, r3
 800959a:	3708      	adds	r7, #8
 800959c:	46bd      	mov	sp, r7
 800959e:	bd80      	pop	{r7, pc}

080095a0 <_ZN8touchgfx17AbstractPartition2atI27temperature_screenPresenterEERT_t>:
    T& at(const uint16_t index)
 80095a0:	b580      	push	{r7, lr}
 80095a2:	b082      	sub	sp, #8
 80095a4:	af00      	add	r7, sp, #0
 80095a6:	6078      	str	r0, [r7, #4]
 80095a8:	460b      	mov	r3, r1
 80095aa:	807b      	strh	r3, [r7, #2]
        return *static_cast<T*>(element(index));
 80095ac:	687b      	ldr	r3, [r7, #4]
 80095ae:	681b      	ldr	r3, [r3, #0]
 80095b0:	3324      	adds	r3, #36	@ 0x24
 80095b2:	681b      	ldr	r3, [r3, #0]
 80095b4:	887a      	ldrh	r2, [r7, #2]
 80095b6:	4611      	mov	r1, r2
 80095b8:	6878      	ldr	r0, [r7, #4]
 80095ba:	4798      	blx	r3
 80095bc:	4603      	mov	r3, r0
    }
 80095be:	4618      	mov	r0, r3
 80095c0:	3708      	adds	r7, #8
 80095c2:	46bd      	mov	sp, r7
 80095c4:	bd80      	pop	{r7, pc}

080095c6 <_ZN8touchgfx4ViewI27temperature_screenPresenterE4bindERS1_>:
    void bind(T& newPresenter)
 80095c6:	b480      	push	{r7}
 80095c8:	b083      	sub	sp, #12
 80095ca:	af00      	add	r7, sp, #0
 80095cc:	6078      	str	r0, [r7, #4]
 80095ce:	6039      	str	r1, [r7, #0]
        presenter = &newPresenter;
 80095d0:	687b      	ldr	r3, [r7, #4]
 80095d2:	683a      	ldr	r2, [r7, #0]
 80095d4:	63da      	str	r2, [r3, #60]	@ 0x3c
    }
 80095d6:	bf00      	nop
 80095d8:	370c      	adds	r7, #12
 80095da:	46bd      	mov	sp, r7
 80095dc:	f85d 7b04 	ldr.w	r7, [sp], #4
 80095e0:	4770      	bx	lr

080095e2 <_ZN8touchgfx17AbstractPartition2atI16light_screenViewEERT_t>:
    T& at(const uint16_t index)
 80095e2:	b580      	push	{r7, lr}
 80095e4:	b082      	sub	sp, #8
 80095e6:	af00      	add	r7, sp, #0
 80095e8:	6078      	str	r0, [r7, #4]
 80095ea:	460b      	mov	r3, r1
 80095ec:	807b      	strh	r3, [r7, #2]
        return *static_cast<T*>(element(index));
 80095ee:	687b      	ldr	r3, [r7, #4]
 80095f0:	681b      	ldr	r3, [r3, #0]
 80095f2:	3324      	adds	r3, #36	@ 0x24
 80095f4:	681b      	ldr	r3, [r3, #0]
 80095f6:	887a      	ldrh	r2, [r7, #2]
 80095f8:	4611      	mov	r1, r2
 80095fa:	6878      	ldr	r0, [r7, #4]
 80095fc:	4798      	blx	r3
 80095fe:	4603      	mov	r3, r0
    }
 8009600:	4618      	mov	r0, r3
 8009602:	3708      	adds	r7, #8
 8009604:	46bd      	mov	sp, r7
 8009606:	bd80      	pop	{r7, pc}

08009608 <_ZN8touchgfx17AbstractPartition2atI21light_screenPresenterEERT_t>:
    T& at(const uint16_t index)
 8009608:	b580      	push	{r7, lr}
 800960a:	b082      	sub	sp, #8
 800960c:	af00      	add	r7, sp, #0
 800960e:	6078      	str	r0, [r7, #4]
 8009610:	460b      	mov	r3, r1
 8009612:	807b      	strh	r3, [r7, #2]
        return *static_cast<T*>(element(index));
 8009614:	687b      	ldr	r3, [r7, #4]
 8009616:	681b      	ldr	r3, [r3, #0]
 8009618:	3324      	adds	r3, #36	@ 0x24
 800961a:	681b      	ldr	r3, [r3, #0]
 800961c:	887a      	ldrh	r2, [r7, #2]
 800961e:	4611      	mov	r1, r2
 8009620:	6878      	ldr	r0, [r7, #4]
 8009622:	4798      	blx	r3
 8009624:	4603      	mov	r3, r0
    }
 8009626:	4618      	mov	r0, r3
 8009628:	3708      	adds	r7, #8
 800962a:	46bd      	mov	sp, r7
 800962c:	bd80      	pop	{r7, pc}

0800962e <_ZN8touchgfx4ViewI21light_screenPresenterE4bindERS1_>:
    void bind(T& newPresenter)
 800962e:	b480      	push	{r7}
 8009630:	b083      	sub	sp, #12
 8009632:	af00      	add	r7, sp, #0
 8009634:	6078      	str	r0, [r7, #4]
 8009636:	6039      	str	r1, [r7, #0]
        presenter = &newPresenter;
 8009638:	687b      	ldr	r3, [r7, #4]
 800963a:	683a      	ldr	r2, [r7, #0]
 800963c:	63da      	str	r2, [r3, #60]	@ 0x3c
    }
 800963e:	bf00      	nop
 8009640:	370c      	adds	r7, #12
 8009642:	46bd      	mov	sp, r7
 8009644:	f85d 7b04 	ldr.w	r7, [sp], #4
 8009648:	4770      	bx	lr

0800964a <_ZN8touchgfx17AbstractPartition2atI8MainViewEERT_t>:
    T& at(const uint16_t index)
 800964a:	b580      	push	{r7, lr}
 800964c:	b082      	sub	sp, #8
 800964e:	af00      	add	r7, sp, #0
 8009650:	6078      	str	r0, [r7, #4]
 8009652:	460b      	mov	r3, r1
 8009654:	807b      	strh	r3, [r7, #2]
        return *static_cast<T*>(element(index));
 8009656:	687b      	ldr	r3, [r7, #4]
 8009658:	681b      	ldr	r3, [r3, #0]
 800965a:	3324      	adds	r3, #36	@ 0x24
 800965c:	681b      	ldr	r3, [r3, #0]
 800965e:	887a      	ldrh	r2, [r7, #2]
 8009660:	4611      	mov	r1, r2
 8009662:	6878      	ldr	r0, [r7, #4]
 8009664:	4798      	blx	r3
 8009666:	4603      	mov	r3, r0
    }
 8009668:	4618      	mov	r0, r3
 800966a:	3708      	adds	r7, #8
 800966c:	46bd      	mov	sp, r7
 800966e:	bd80      	pop	{r7, pc}

08009670 <_ZN8touchgfx17AbstractPartition2atI13MainPresenterEERT_t>:
    T& at(const uint16_t index)
 8009670:	b580      	push	{r7, lr}
 8009672:	b082      	sub	sp, #8
 8009674:	af00      	add	r7, sp, #0
 8009676:	6078      	str	r0, [r7, #4]
 8009678:	460b      	mov	r3, r1
 800967a:	807b      	strh	r3, [r7, #2]
        return *static_cast<T*>(element(index));
 800967c:	687b      	ldr	r3, [r7, #4]
 800967e:	681b      	ldr	r3, [r3, #0]
 8009680:	3324      	adds	r3, #36	@ 0x24
 8009682:	681b      	ldr	r3, [r3, #0]
 8009684:	887a      	ldrh	r2, [r7, #2]
 8009686:	4611      	mov	r1, r2
 8009688:	6878      	ldr	r0, [r7, #4]
 800968a:	4798      	blx	r3
 800968c:	4603      	mov	r3, r0
    }
 800968e:	4618      	mov	r0, r3
 8009690:	3708      	adds	r7, #8
 8009692:	46bd      	mov	sp, r7
 8009694:	bd80      	pop	{r7, pc}

08009696 <_ZN8touchgfx4ViewI13MainPresenterE4bindERS1_>:
    void bind(T& newPresenter)
 8009696:	b480      	push	{r7}
 8009698:	b083      	sub	sp, #12
 800969a:	af00      	add	r7, sp, #0
 800969c:	6078      	str	r0, [r7, #4]
 800969e:	6039      	str	r1, [r7, #0]
        presenter = &newPresenter;
 80096a0:	687b      	ldr	r3, [r7, #4]
 80096a2:	683a      	ldr	r2, [r7, #0]
 80096a4:	63da      	str	r2, [r3, #60]	@ 0x3c
    }
 80096a6:	bf00      	nop
 80096a8:	370c      	adds	r7, #12
 80096aa:	46bd      	mov	sp, r7
 80096ac:	f85d 7b04 	ldr.w	r7, [sp], #4
 80096b0:	4770      	bx	lr
	...

080096b4 <_ZN8touchgfx12NoTransitionD1Ev>:
 80096b4:	b580      	push	{r7, lr}
 80096b6:	b082      	sub	sp, #8
 80096b8:	af00      	add	r7, sp, #0
 80096ba:	6078      	str	r0, [r7, #4]
 80096bc:	4a05      	ldr	r2, [pc, #20]	@ (80096d4 <_ZN8touchgfx12NoTransitionD1Ev+0x20>)
 80096be:	687b      	ldr	r3, [r7, #4]
 80096c0:	601a      	str	r2, [r3, #0]
 80096c2:	687b      	ldr	r3, [r7, #4]
 80096c4:	4618      	mov	r0, r3
 80096c6:	f7fe ff6f 	bl	80085a8 <_ZN8touchgfx10TransitionD1Ev>
 80096ca:	687b      	ldr	r3, [r7, #4]
 80096cc:	4618      	mov	r0, r3
 80096ce:	3708      	adds	r7, #8
 80096d0:	46bd      	mov	sp, r7
 80096d2:	bd80      	pop	{r7, pc}
 80096d4:	08028020 	.word	0x08028020

080096d8 <_ZN8touchgfx12NoTransitionD0Ev>:
 80096d8:	b580      	push	{r7, lr}
 80096da:	b082      	sub	sp, #8
 80096dc:	af00      	add	r7, sp, #0
 80096de:	6078      	str	r0, [r7, #4]
 80096e0:	6878      	ldr	r0, [r7, #4]
 80096e2:	f7ff ffe7 	bl	80096b4 <_ZN8touchgfx12NoTransitionD1Ev>
 80096e6:	210c      	movs	r1, #12
 80096e8:	6878      	ldr	r0, [r7, #4]
 80096ea:	f01c f9d2 	bl	8025a92 <_ZdlPvj>
 80096ee:	687b      	ldr	r3, [r7, #4]
 80096f0:	4618      	mov	r0, r3
 80096f2:	3708      	adds	r7, #8
 80096f4:	46bd      	mov	sp, r7
 80096f6:	bd80      	pop	{r7, pc}

080096f8 <_ZN8touchgfx8CallbackI23FrontendApplicationBasevvvED1Ev>:
struct Callback<dest_type, void, void, void> : public GenericCallback<>
 80096f8:	b580      	push	{r7, lr}
 80096fa:	b082      	sub	sp, #8
 80096fc:	af00      	add	r7, sp, #0
 80096fe:	6078      	str	r0, [r7, #4]
 8009700:	4a05      	ldr	r2, [pc, #20]	@ (8009718 <_ZN8touchgfx8CallbackI23FrontendApplicationBasevvvED1Ev+0x20>)
 8009702:	687b      	ldr	r3, [r7, #4]
 8009704:	601a      	str	r2, [r3, #0]
 8009706:	687b      	ldr	r3, [r7, #4]
 8009708:	4618      	mov	r0, r3
 800970a:	f7fe feef 	bl	80084ec <_ZN8touchgfx15GenericCallbackIvvvED1Ev>
 800970e:	687b      	ldr	r3, [r7, #4]
 8009710:	4618      	mov	r0, r3
 8009712:	3708      	adds	r7, #8
 8009714:	46bd      	mov	sp, r7
 8009716:	bd80      	pop	{r7, pc}
 8009718:	08028098 	.word	0x08028098

0800971c <_ZN8touchgfx8CallbackI23FrontendApplicationBasevvvED0Ev>:
 800971c:	b580      	push	{r7, lr}
 800971e:	b082      	sub	sp, #8
 8009720:	af00      	add	r7, sp, #0
 8009722:	6078      	str	r0, [r7, #4]
 8009724:	6878      	ldr	r0, [r7, #4]
 8009726:	f7ff ffe7 	bl	80096f8 <_ZN8touchgfx8CallbackI23FrontendApplicationBasevvvED1Ev>
 800972a:	2110      	movs	r1, #16
 800972c:	6878      	ldr	r0, [r7, #4]
 800972e:	f01c f9b0 	bl	8025a92 <_ZdlPvj>
 8009732:	687b      	ldr	r3, [r7, #4]
 8009734:	4618      	mov	r0, r3
 8009736:	3708      	adds	r7, #8
 8009738:	46bd      	mov	sp, r7
 800973a:	bd80      	pop	{r7, pc}

0800973c <_ZN8touchgfx8CallbackI23FrontendApplicationBasevvvE7executeEv>:

    /**
     * Calls the member function. Do not call execute unless isValid() returns true (ie. a
     * pointer to the object and the function has been set).
     */
    virtual void execute()
 800973c:	b580      	push	{r7, lr}
 800973e:	b082      	sub	sp, #8
 8009740:	af00      	add	r7, sp, #0
 8009742:	6078      	str	r0, [r7, #4]
    {
        (pobject->*pmemfun)();
 8009744:	687b      	ldr	r3, [r7, #4]
 8009746:	685b      	ldr	r3, [r3, #4]
 8009748:	687a      	ldr	r2, [r7, #4]
 800974a:	68d2      	ldr	r2, [r2, #12]
 800974c:	1052      	asrs	r2, r2, #1
 800974e:	1899      	adds	r1, r3, r2
 8009750:	687b      	ldr	r3, [r7, #4]
 8009752:	68db      	ldr	r3, [r3, #12]
 8009754:	f003 0301 	and.w	r3, r3, #1
 8009758:	2b00      	cmp	r3, #0
 800975a:	d102      	bne.n	8009762 <_ZN8touchgfx8CallbackI23FrontendApplicationBasevvvE7executeEv+0x26>
 800975c:	687b      	ldr	r3, [r7, #4]
 800975e:	689b      	ldr	r3, [r3, #8]
 8009760:	e00a      	b.n	8009778 <_ZN8touchgfx8CallbackI23FrontendApplicationBasevvvE7executeEv+0x3c>
 8009762:	687b      	ldr	r3, [r7, #4]
 8009764:	685b      	ldr	r3, [r3, #4]
 8009766:	687a      	ldr	r2, [r7, #4]
 8009768:	68d2      	ldr	r2, [r2, #12]
 800976a:	1052      	asrs	r2, r2, #1
 800976c:	4413      	add	r3, r2
 800976e:	681b      	ldr	r3, [r3, #0]
 8009770:	687a      	ldr	r2, [r7, #4]
 8009772:	6892      	ldr	r2, [r2, #8]
 8009774:	4413      	add	r3, r2
 8009776:	681b      	ldr	r3, [r3, #0]
 8009778:	4608      	mov	r0, r1
 800977a:	4798      	blx	r3
    }
 800977c:	bf00      	nop
 800977e:	3708      	adds	r7, #8
 8009780:	46bd      	mov	sp, r7
 8009782:	bd80      	pop	{r7, pc}

08009784 <_ZNK8touchgfx8CallbackI23FrontendApplicationBasevvvE7isValidEv>:
    /**
     * Function to check whether the Callback has been initialized with values.
     *
     * @return true If the callback is valid (i.e. safe to call execute).
     */
    virtual bool isValid() const
 8009784:	b480      	push	{r7}
 8009786:	b083      	sub	sp, #12
 8009788:	af00      	add	r7, sp, #0
 800978a:	6078      	str	r0, [r7, #4]
    {
        return (pobject != 0) && (pmemfun != 0);
 800978c:	687b      	ldr	r3, [r7, #4]
 800978e:	685b      	ldr	r3, [r3, #4]
 8009790:	2b00      	cmp	r3, #0
 8009792:	d010      	beq.n	80097b6 <_ZNK8touchgfx8CallbackI23FrontendApplicationBasevvvE7isValidEv+0x32>
 8009794:	687b      	ldr	r3, [r7, #4]
 8009796:	689b      	ldr	r3, [r3, #8]
 8009798:	2b00      	cmp	r3, #0
 800979a:	d107      	bne.n	80097ac <_ZNK8touchgfx8CallbackI23FrontendApplicationBasevvvE7isValidEv+0x28>
 800979c:	687b      	ldr	r3, [r7, #4]
 800979e:	68db      	ldr	r3, [r3, #12]
 80097a0:	f003 0301 	and.w	r3, r3, #1
 80097a4:	2b00      	cmp	r3, #0
 80097a6:	d101      	bne.n	80097ac <_ZNK8touchgfx8CallbackI23FrontendApplicationBasevvvE7isValidEv+0x28>
 80097a8:	2301      	movs	r3, #1
 80097aa:	e000      	b.n	80097ae <_ZNK8touchgfx8CallbackI23FrontendApplicationBasevvvE7isValidEv+0x2a>
 80097ac:	2300      	movs	r3, #0
 80097ae:	2b01      	cmp	r3, #1
 80097b0:	d001      	beq.n	80097b6 <_ZNK8touchgfx8CallbackI23FrontendApplicationBasevvvE7isValidEv+0x32>
 80097b2:	2301      	movs	r3, #1
 80097b4:	e000      	b.n	80097b8 <_ZNK8touchgfx8CallbackI23FrontendApplicationBasevvvE7isValidEv+0x34>
 80097b6:	2300      	movs	r3, #0
    }
 80097b8:	4618      	mov	r0, r3
 80097ba:	370c      	adds	r7, #12
 80097bc:	46bd      	mov	sp, r7
 80097be:	f85d 7b04 	ldr.w	r7, [sp], #4
 80097c2:	4770      	bx	lr

080097c4 <_ZN8touchgfx9colortypeC1Ev>:
 * extract a 24/32-bit color from this type, use the getColor32 function.
 */
struct colortype
{
    /** Default constructor. Creates a black (0) color. */
    colortype()
 80097c4:	b480      	push	{r7}
 80097c6:	b083      	sub	sp, #12
 80097c8:	af00      	add	r7, sp, #0
 80097ca:	6078      	str	r0, [r7, #4]
        : color(0)
 80097cc:	687b      	ldr	r3, [r7, #4]
 80097ce:	2200      	movs	r2, #0
 80097d0:	601a      	str	r2, [r3, #0]
    {
    }
 80097d2:	687b      	ldr	r3, [r7, #4]
 80097d4:	4618      	mov	r0, r3
 80097d6:	370c      	adds	r7, #12
 80097d8:	46bd      	mov	sp, r7
 80097da:	f85d 7b04 	ldr.w	r7, [sp], #4
 80097de:	4770      	bx	lr

080097e0 <_ZN8touchgfx9colortypeC1Em>:
     *
     * @param  col The color.
     *
     * @see Color::getColorFromRGB
     */
    colortype(uint32_t col)
 80097e0:	b480      	push	{r7}
 80097e2:	b083      	sub	sp, #12
 80097e4:	af00      	add	r7, sp, #0
 80097e6:	6078      	str	r0, [r7, #4]
 80097e8:	6039      	str	r1, [r7, #0]
        : color(col)
 80097ea:	687b      	ldr	r3, [r7, #4]
 80097ec:	683a      	ldr	r2, [r7, #0]
 80097ee:	601a      	str	r2, [r3, #0]
    {
    }
 80097f0:	687b      	ldr	r3, [r7, #4]
 80097f2:	4618      	mov	r0, r3
 80097f4:	370c      	adds	r7, #12
 80097f6:	46bd      	mov	sp, r7
 80097f8:	f85d 7b04 	ldr.w	r7, [sp], #4
 80097fc:	4770      	bx	lr

080097fe <_ZN8touchgfx4RectC1Ev>:
/** Class representing a Rectangle with a few convenient methods. */
class Rect
{
public:
    /** Default constructor. Resulting in an empty Rect with coordinates 0,0. */
    Rect()
 80097fe:	b480      	push	{r7}
 8009800:	b083      	sub	sp, #12
 8009802:	af00      	add	r7, sp, #0
 8009804:	6078      	str	r0, [r7, #4]
        : x(0), y(0), width(0), height(0)
 8009806:	687b      	ldr	r3, [r7, #4]
 8009808:	2200      	movs	r2, #0
 800980a:	801a      	strh	r2, [r3, #0]
 800980c:	687b      	ldr	r3, [r7, #4]
 800980e:	2200      	movs	r2, #0
 8009810:	805a      	strh	r2, [r3, #2]
 8009812:	687b      	ldr	r3, [r7, #4]
 8009814:	2200      	movs	r2, #0
 8009816:	809a      	strh	r2, [r3, #4]
 8009818:	687b      	ldr	r3, [r7, #4]
 800981a:	2200      	movs	r2, #0
 800981c:	80da      	strh	r2, [r3, #6]
    {
    }
 800981e:	687b      	ldr	r3, [r7, #4]
 8009820:	4618      	mov	r0, r3
 8009822:	370c      	adds	r7, #12
 8009824:	46bd      	mov	sp, r7
 8009826:	f85d 7b04 	ldr.w	r7, [sp], #4
 800982a:	4770      	bx	lr

0800982c <_ZN8touchgfx4RectC1Essss>:
     * @param  rectX      The x coordinate.
     * @param  rectY      The y coordinate.
     * @param  rectWidth  The width.
     * @param  rectHeight The height.
     */
    Rect(int16_t rectX, int16_t rectY, int16_t rectWidth, int16_t rectHeight)
 800982c:	b480      	push	{r7}
 800982e:	b085      	sub	sp, #20
 8009830:	af00      	add	r7, sp, #0
 8009832:	60f8      	str	r0, [r7, #12]
 8009834:	4608      	mov	r0, r1
 8009836:	4611      	mov	r1, r2
 8009838:	461a      	mov	r2, r3
 800983a:	4603      	mov	r3, r0
 800983c:	817b      	strh	r3, [r7, #10]
 800983e:	460b      	mov	r3, r1
 8009840:	813b      	strh	r3, [r7, #8]
 8009842:	4613      	mov	r3, r2
 8009844:	80fb      	strh	r3, [r7, #6]
        : x(rectX), y(rectY), width(rectWidth), height(rectHeight)
 8009846:	68fb      	ldr	r3, [r7, #12]
 8009848:	897a      	ldrh	r2, [r7, #10]
 800984a:	801a      	strh	r2, [r3, #0]
 800984c:	68fb      	ldr	r3, [r7, #12]
 800984e:	893a      	ldrh	r2, [r7, #8]
 8009850:	805a      	strh	r2, [r3, #2]
 8009852:	68fb      	ldr	r3, [r7, #12]
 8009854:	88fa      	ldrh	r2, [r7, #6]
 8009856:	809a      	strh	r2, [r3, #4]
 8009858:	68fb      	ldr	r3, [r7, #12]
 800985a:	8b3a      	ldrh	r2, [r7, #24]
 800985c:	80da      	strh	r2, [r3, #6]
    {
    }
 800985e:	68fb      	ldr	r3, [r7, #12]
 8009860:	4618      	mov	r0, r3
 8009862:	3714      	adds	r7, #20
 8009864:	46bd      	mov	sp, r7
 8009866:	f85d 7b04 	ldr.w	r7, [sp], #4
 800986a:	4770      	bx	lr

0800986c <_ZN8touchgfx6BitmapC1Et>:
     * Creates and binds a Bitmap instance to the corresponding entry in the BitmapData
     * array.
     *
     * @param  id (Optional) The unique bitmap identifier.
     */
    Bitmap(const BitmapId id = BITMAP_INVALID)
 800986c:	b480      	push	{r7}
 800986e:	b083      	sub	sp, #12
 8009870:	af00      	add	r7, sp, #0
 8009872:	6078      	str	r0, [r7, #4]
 8009874:	460b      	mov	r3, r1
 8009876:	807b      	strh	r3, [r7, #2]
        : bitmapId(id)
 8009878:	687b      	ldr	r3, [r7, #4]
 800987a:	887a      	ldrh	r2, [r7, #2]
 800987c:	801a      	strh	r2, [r3, #0]
    {
    }
 800987e:	687b      	ldr	r3, [r7, #4]
 8009880:	4618      	mov	r0, r3
 8009882:	370c      	adds	r7, #12
 8009884:	46bd      	mov	sp, r7
 8009886:	f85d 7b04 	ldr.w	r7, [sp], #4
 800988a:	4770      	bx	lr

0800988c <_ZNK8touchgfx10ClickEvent7getTypeEv>:
    /**
     * Gets the click type of this event.
     *
     * @return The click type of this event.
     */
    ClickEventType getType() const
 800988c:	b480      	push	{r7}
 800988e:	b083      	sub	sp, #12
 8009890:	af00      	add	r7, sp, #0
 8009892:	6078      	str	r0, [r7, #4]
    {
        return clickEventType;
 8009894:	687b      	ldr	r3, [r7, #4]
 8009896:	791b      	ldrb	r3, [r3, #4]
    }
 8009898:	4618      	mov	r0, r3
 800989a:	370c      	adds	r7, #12
 800989c:	46bd      	mov	sp, r7
 800989e:	f85d 7b04 	ldr.w	r7, [sp], #4
 80098a2:	4770      	bx	lr

080098a4 <_ZN8touchgfx8DrawableC1Ev>:
 */
class Drawable
{
public:
    /** Initializes a new instance of the Drawable class. */
    Drawable()
 80098a4:	b580      	push	{r7, lr}
 80098a6:	b082      	sub	sp, #8
 80098a8:	af00      	add	r7, sp, #0
 80098aa:	6078      	str	r0, [r7, #4]
          nextSibling(0),
          nextDrawChainElement(0),
          cachedAbsX(0),
          cachedAbsY(0),
          touchable(false),
          visible(true)
 80098ac:	4a14      	ldr	r2, [pc, #80]	@ (8009900 <_ZN8touchgfx8DrawableC1Ev+0x5c>)
 80098ae:	687b      	ldr	r3, [r7, #4]
 80098b0:	601a      	str	r2, [r3, #0]
        : rect(),
 80098b2:	687b      	ldr	r3, [r7, #4]
 80098b4:	3304      	adds	r3, #4
 80098b6:	4618      	mov	r0, r3
 80098b8:	f7ff ffa1 	bl	80097fe <_ZN8touchgfx4RectC1Ev>
          cachedVisibleRect(),
 80098bc:	687b      	ldr	r3, [r7, #4]
 80098be:	330c      	adds	r3, #12
 80098c0:	4618      	mov	r0, r3
 80098c2:	f7ff ff9c 	bl	80097fe <_ZN8touchgfx4RectC1Ev>
          parent(0),
 80098c6:	687b      	ldr	r3, [r7, #4]
 80098c8:	2200      	movs	r2, #0
 80098ca:	615a      	str	r2, [r3, #20]
          nextSibling(0),
 80098cc:	687b      	ldr	r3, [r7, #4]
 80098ce:	2200      	movs	r2, #0
 80098d0:	619a      	str	r2, [r3, #24]
          nextDrawChainElement(0),
 80098d2:	687b      	ldr	r3, [r7, #4]
 80098d4:	2200      	movs	r2, #0
 80098d6:	61da      	str	r2, [r3, #28]
          cachedAbsX(0),
 80098d8:	687b      	ldr	r3, [r7, #4]
 80098da:	2200      	movs	r2, #0
 80098dc:	841a      	strh	r2, [r3, #32]
          cachedAbsY(0),
 80098de:	687b      	ldr	r3, [r7, #4]
 80098e0:	2200      	movs	r2, #0
 80098e2:	845a      	strh	r2, [r3, #34]	@ 0x22
          touchable(false),
 80098e4:	687b      	ldr	r3, [r7, #4]
 80098e6:	2200      	movs	r2, #0
 80098e8:	f883 2024 	strb.w	r2, [r3, #36]	@ 0x24
          visible(true)
 80098ec:	687b      	ldr	r3, [r7, #4]
 80098ee:	2201      	movs	r2, #1
 80098f0:	f883 2025 	strb.w	r2, [r3, #37]	@ 0x25
    {
    }
 80098f4:	687b      	ldr	r3, [r7, #4]
 80098f6:	4618      	mov	r0, r3
 80098f8:	3708      	adds	r7, #8
 80098fa:	46bd      	mov	sp, r7
 80098fc:	bd80      	pop	{r7, pc}
 80098fe:	bf00      	nop
 8009900:	08029490 	.word	0x08029490

08009904 <_ZN8touchgfx8DrawableD1Ev>:

    /** Finalizes an instance of the Drawable class. */
    virtual ~Drawable()
 8009904:	b480      	push	{r7}
 8009906:	b083      	sub	sp, #12
 8009908:	af00      	add	r7, sp, #0
 800990a:	6078      	str	r0, [r7, #4]
    {
 800990c:	4a04      	ldr	r2, [pc, #16]	@ (8009920 <_ZN8touchgfx8DrawableD1Ev+0x1c>)
 800990e:	687b      	ldr	r3, [r7, #4]
 8009910:	601a      	str	r2, [r3, #0]
    }
 8009912:	687b      	ldr	r3, [r7, #4]
 8009914:	4618      	mov	r0, r3
 8009916:	370c      	adds	r7, #12
 8009918:	46bd      	mov	sp, r7
 800991a:	f85d 7b04 	ldr.w	r7, [sp], #4
 800991e:	4770      	bx	lr
 8009920:	08029490 	.word	0x08029490

08009924 <_ZN8touchgfx8DrawableD0Ev>:
    virtual ~Drawable()
 8009924:	b580      	push	{r7, lr}
 8009926:	b082      	sub	sp, #8
 8009928:	af00      	add	r7, sp, #0
 800992a:	6078      	str	r0, [r7, #4]
    }
 800992c:	6878      	ldr	r0, [r7, #4]
 800992e:	f7ff ffe9 	bl	8009904 <_ZN8touchgfx8DrawableD1Ev>
 8009932:	2128      	movs	r1, #40	@ 0x28
 8009934:	6878      	ldr	r0, [r7, #4]
 8009936:	f01c f8ac 	bl	8025a92 <_ZdlPvj>
 800993a:	687b      	ldr	r3, [r7, #4]
 800993c:	4618      	mov	r0, r3
 800993e:	3708      	adds	r7, #8
 8009940:	46bd      	mov	sp, r7
 8009942:	bd80      	pop	{r7, pc}

08009944 <_ZNK8touchgfx8Drawable17invalidateContentEv>:
     * Tell the framework that the contents of the Drawable needs to be redrawn. If the Drawable is
     * invisible, nothing happens. Subclasses of Drawable are encouraged to implement this function
     * and invalidate as little as possible, i.e. the smallest rectangle covering the visual element(s)
     * drawn by the widget.
     */
    virtual void invalidateContent() const
 8009944:	b580      	push	{r7, lr}
 8009946:	b082      	sub	sp, #8
 8009948:	af00      	add	r7, sp, #0
 800994a:	6078      	str	r0, [r7, #4]
    {
        // Consider checking if *this is in the draw chain
        if (visible)
 800994c:	687b      	ldr	r3, [r7, #4]
 800994e:	f893 3025 	ldrb.w	r3, [r3, #37]	@ 0x25
 8009952:	2b00      	cmp	r3, #0
 8009954:	d005      	beq.n	8009962 <_ZNK8touchgfx8Drawable17invalidateContentEv+0x1e>
        {
            invalidate();
 8009956:	687b      	ldr	r3, [r7, #4]
 8009958:	681b      	ldr	r3, [r3, #0]
 800995a:	3314      	adds	r3, #20
 800995c:	681b      	ldr	r3, [r3, #0]
 800995e:	6878      	ldr	r0, [r7, #4]
 8009960:	4798      	blx	r3
        }
    }
 8009962:	bf00      	nop
 8009964:	3708      	adds	r7, #8
 8009966:	46bd      	mov	sp, r7
 8009968:	bd80      	pop	{r7, pc}

0800996a <_ZN8touchgfx8Drawable13getFirstChildEv>:
     * Function for obtaining the first child of this drawable if any.
     *
     * @return A pointer on the first child drawable if any.
     * @see Container::getFirstChild
     */
    virtual Drawable* getFirstChild()
 800996a:	b480      	push	{r7}
 800996c:	b083      	sub	sp, #12
 800996e:	af00      	add	r7, sp, #0
 8009970:	6078      	str	r0, [r7, #4]
    {
        return 0;
 8009972:	2300      	movs	r3, #0
    }
 8009974:	4618      	mov	r0, r3
 8009976:	370c      	adds	r7, #12
 8009978:	46bd      	mov	sp, r7
 800997a:	f85d 7b04 	ldr.w	r7, [sp], #4
 800997e:	4770      	bx	lr

08009980 <_ZN8touchgfx8Drawable11setPositionEssss>:
     *
     * @note For most Drawable widgets, changing this does normally not automatically yield a redraw.
     *
     * @see setXY,setWidthHeight,setPosition(const Drawable&)
     */
    void setPosition(int16_t x, int16_t y, int16_t width, int16_t height)
 8009980:	b580      	push	{r7, lr}
 8009982:	b084      	sub	sp, #16
 8009984:	af00      	add	r7, sp, #0
 8009986:	60f8      	str	r0, [r7, #12]
 8009988:	4608      	mov	r0, r1
 800998a:	4611      	mov	r1, r2
 800998c:	461a      	mov	r2, r3
 800998e:	4603      	mov	r3, r0
 8009990:	817b      	strh	r3, [r7, #10]
 8009992:	460b      	mov	r3, r1
 8009994:	813b      	strh	r3, [r7, #8]
 8009996:	4613      	mov	r3, r2
 8009998:	80fb      	strh	r3, [r7, #6]
    {
        setXY(x, y);
 800999a:	f9b7 2008 	ldrsh.w	r2, [r7, #8]
 800999e:	f9b7 300a 	ldrsh.w	r3, [r7, #10]
 80099a2:	4619      	mov	r1, r3
 80099a4:	68f8      	ldr	r0, [r7, #12]
 80099a6:	f000 f82a 	bl	80099fe <_ZN8touchgfx8Drawable5setXYEss>
        setWidthHeight(width, height);
 80099aa:	f9b7 2018 	ldrsh.w	r2, [r7, #24]
 80099ae:	f9b7 3006 	ldrsh.w	r3, [r7, #6]
 80099b2:	4619      	mov	r1, r3
 80099b4:	68f8      	ldr	r0, [r7, #12]
 80099b6:	f000 f87e 	bl	8009ab6 <_ZN8touchgfx8Drawable14setWidthHeightEss>
    }
 80099ba:	bf00      	nop
 80099bc:	3710      	adds	r7, #16
 80099be:	46bd      	mov	sp, r7
 80099c0:	bd80      	pop	{r7, pc}

080099c2 <_ZN8touchgfx8Drawable4setXEs>:
     *
     * @param  x The new x value, relative to the parent. A negative value is allowed.
     *
     * @note For most Drawable widgets, changing this does normally not automatically yield a redraw.
     */
    virtual void setX(int16_t x)
 80099c2:	b480      	push	{r7}
 80099c4:	b083      	sub	sp, #12
 80099c6:	af00      	add	r7, sp, #0
 80099c8:	6078      	str	r0, [r7, #4]
 80099ca:	460b      	mov	r3, r1
 80099cc:	807b      	strh	r3, [r7, #2]
    {
        rect.x = x;
 80099ce:	687b      	ldr	r3, [r7, #4]
 80099d0:	887a      	ldrh	r2, [r7, #2]
 80099d2:	809a      	strh	r2, [r3, #4]
    }
 80099d4:	bf00      	nop
 80099d6:	370c      	adds	r7, #12
 80099d8:	46bd      	mov	sp, r7
 80099da:	f85d 7b04 	ldr.w	r7, [sp], #4
 80099de:	4770      	bx	lr

080099e0 <_ZN8touchgfx8Drawable4setYEs>:
     *
     * @param  y The new y value, relative to the parent. A negative value is allowed.
     *
     * @note For most Drawable widgets, changing this does normally not automatically yield a redraw.
     */
    virtual void setY(int16_t y)
 80099e0:	b480      	push	{r7}
 80099e2:	b083      	sub	sp, #12
 80099e4:	af00      	add	r7, sp, #0
 80099e6:	6078      	str	r0, [r7, #4]
 80099e8:	460b      	mov	r3, r1
 80099ea:	807b      	strh	r3, [r7, #2]
    {
        rect.y = y;
 80099ec:	687b      	ldr	r3, [r7, #4]
 80099ee:	887a      	ldrh	r2, [r7, #2]
 80099f0:	80da      	strh	r2, [r3, #6]
    }
 80099f2:	bf00      	nop
 80099f4:	370c      	adds	r7, #12
 80099f6:	46bd      	mov	sp, r7
 80099f8:	f85d 7b04 	ldr.w	r7, [sp], #4
 80099fc:	4770      	bx	lr

080099fe <_ZN8touchgfx8Drawable5setXYEss>:
     *
     * @see moveTo
     *
     * @note For most Drawable widgets, changing this does normally not automatically yield a redraw.
     */
    void setXY(int16_t x, int16_t y)
 80099fe:	b580      	push	{r7, lr}
 8009a00:	b082      	sub	sp, #8
 8009a02:	af00      	add	r7, sp, #0
 8009a04:	6078      	str	r0, [r7, #4]
 8009a06:	460b      	mov	r3, r1
 8009a08:	807b      	strh	r3, [r7, #2]
 8009a0a:	4613      	mov	r3, r2
 8009a0c:	803b      	strh	r3, [r7, #0]
    {
        setX(x);
 8009a0e:	687b      	ldr	r3, [r7, #4]
 8009a10:	681b      	ldr	r3, [r3, #0]
 8009a12:	3330      	adds	r3, #48	@ 0x30
 8009a14:	681b      	ldr	r3, [r3, #0]
 8009a16:	f9b7 2002 	ldrsh.w	r2, [r7, #2]
 8009a1a:	4611      	mov	r1, r2
 8009a1c:	6878      	ldr	r0, [r7, #4]
 8009a1e:	4798      	blx	r3
        setY(y);
 8009a20:	687b      	ldr	r3, [r7, #4]
 8009a22:	681b      	ldr	r3, [r3, #0]
 8009a24:	3334      	adds	r3, #52	@ 0x34
 8009a26:	681b      	ldr	r3, [r3, #0]
 8009a28:	f9b7 2000 	ldrsh.w	r2, [r7]
 8009a2c:	4611      	mov	r1, r2
 8009a2e:	6878      	ldr	r0, [r7, #4]
 8009a30:	4798      	blx	r3
    }
 8009a32:	bf00      	nop
 8009a34:	3708      	adds	r7, #8
 8009a36:	46bd      	mov	sp, r7
 8009a38:	bd80      	pop	{r7, pc}

08009a3a <_ZN8touchgfx8Drawable8setWidthEs>:
     *
     * @param  width The new width.
     *
     * @note For most Drawable widgets, changing this does normally not automatically yield a redraw.
     */
    virtual void setWidth(int16_t width)
 8009a3a:	b480      	push	{r7}
 8009a3c:	b083      	sub	sp, #12
 8009a3e:	af00      	add	r7, sp, #0
 8009a40:	6078      	str	r0, [r7, #4]
 8009a42:	460b      	mov	r3, r1
 8009a44:	807b      	strh	r3, [r7, #2]
    {
        rect.width = width;
 8009a46:	687b      	ldr	r3, [r7, #4]
 8009a48:	887a      	ldrh	r2, [r7, #2]
 8009a4a:	811a      	strh	r2, [r3, #8]
    }
 8009a4c:	bf00      	nop
 8009a4e:	370c      	adds	r7, #12
 8009a50:	46bd      	mov	sp, r7
 8009a52:	f85d 7b04 	ldr.w	r7, [sp], #4
 8009a56:	4770      	bx	lr

08009a58 <_ZN8touchgfx8Drawable9setHeightEs>:
     *
     * @param  height The new height.
     *
     * @note For most Drawable widgets, changing this does normally not automatically yield a redraw.
     */
    virtual void setHeight(int16_t height)
 8009a58:	b480      	push	{r7}
 8009a5a:	b083      	sub	sp, #12
 8009a5c:	af00      	add	r7, sp, #0
 8009a5e:	6078      	str	r0, [r7, #4]
 8009a60:	460b      	mov	r3, r1
 8009a62:	807b      	strh	r3, [r7, #2]
    {
        rect.height = height;
 8009a64:	687b      	ldr	r3, [r7, #4]
 8009a66:	887a      	ldrh	r2, [r7, #2]
 8009a68:	815a      	strh	r2, [r3, #10]
    }
 8009a6a:	bf00      	nop
 8009a6c:	370c      	adds	r7, #12
 8009a6e:	46bd      	mov	sp, r7
 8009a70:	f85d 7b04 	ldr.w	r7, [sp], #4
 8009a74:	4770      	bx	lr

08009a76 <_ZN8touchgfx8Drawable20childGeometryChangedEv>:
    /**
     * This function can be called on parent nodes to signal that the size or position of
     * one or more of its children has changed. Currently only used in ScrollableContainer
     * to redraw scrollbars when the size of the scrolling contents changes.
     */
    virtual void childGeometryChanged()
 8009a76:	b480      	push	{r7}
 8009a78:	b083      	sub	sp, #12
 8009a7a:	af00      	add	r7, sp, #0
 8009a7c:	6078      	str	r0, [r7, #4]
    {
    }
 8009a7e:	bf00      	nop
 8009a80:	370c      	adds	r7, #12
 8009a82:	46bd      	mov	sp, r7
 8009a84:	f85d 7b04 	ldr.w	r7, [sp], #4
 8009a88:	4770      	bx	lr

08009a8a <_ZN8touchgfx8Drawable16handleClickEventERKNS_10ClickEventE>:
     * ignores the event. The event is only received if the Drawable is touchable and
     * visible.
     *
     * @param  event The ClickEvent received from the HAL.
     */
    virtual void handleClickEvent(const ClickEvent& event)
 8009a8a:	b480      	push	{r7}
 8009a8c:	b083      	sub	sp, #12
 8009a8e:	af00      	add	r7, sp, #0
 8009a90:	6078      	str	r0, [r7, #4]
 8009a92:	6039      	str	r1, [r7, #0]
    {
        (void)event; // Unused variable
    }
 8009a94:	bf00      	nop
 8009a96:	370c      	adds	r7, #12
 8009a98:	46bd      	mov	sp, r7
 8009a9a:	f85d 7b04 	ldr.w	r7, [sp], #4
 8009a9e:	4770      	bx	lr

08009aa0 <_ZN8touchgfx8Drawable18handleGestureEventERKNS_12GestureEventE>:
     * ignores the event. The event is only received if the Drawable is touchable and
     * visible.
     *
     * @param  event The GestureEvent received from the HAL.
     */
    virtual void handleGestureEvent(const GestureEvent& event)
 8009aa0:	b480      	push	{r7}
 8009aa2:	b083      	sub	sp, #12
 8009aa4:	af00      	add	r7, sp, #0
 8009aa6:	6078      	str	r0, [r7, #4]
 8009aa8:	6039      	str	r1, [r7, #0]
    {
        (void)event; // Unused variable
    }
 8009aaa:	bf00      	nop
 8009aac:	370c      	adds	r7, #12
 8009aae:	46bd      	mov	sp, r7
 8009ab0:	f85d 7b04 	ldr.w	r7, [sp], #4
 8009ab4:	4770      	bx	lr

08009ab6 <_ZN8touchgfx8Drawable14setWidthHeightEss>:
     * coordinates).
     *
     * @param  width  The width.
     * @param  height The height.
     */
    void setWidthHeight(int16_t width, int16_t height)
 8009ab6:	b580      	push	{r7, lr}
 8009ab8:	b082      	sub	sp, #8
 8009aba:	af00      	add	r7, sp, #0
 8009abc:	6078      	str	r0, [r7, #4]
 8009abe:	460b      	mov	r3, r1
 8009ac0:	807b      	strh	r3, [r7, #2]
 8009ac2:	4613      	mov	r3, r2
 8009ac4:	803b      	strh	r3, [r7, #0]
    {
        setWidth(width);
 8009ac6:	687b      	ldr	r3, [r7, #4]
 8009ac8:	681b      	ldr	r3, [r3, #0]
 8009aca:	3338      	adds	r3, #56	@ 0x38
 8009acc:	681b      	ldr	r3, [r3, #0]
 8009ace:	f9b7 2002 	ldrsh.w	r2, [r7, #2]
 8009ad2:	4611      	mov	r1, r2
 8009ad4:	6878      	ldr	r0, [r7, #4]
 8009ad6:	4798      	blx	r3
        setHeight(height);
 8009ad8:	687b      	ldr	r3, [r7, #4]
 8009ada:	681b      	ldr	r3, [r3, #0]
 8009adc:	333c      	adds	r3, #60	@ 0x3c
 8009ade:	681b      	ldr	r3, [r3, #0]
 8009ae0:	f9b7 2000 	ldrsh.w	r2, [r7]
 8009ae4:	4611      	mov	r1, r2
 8009ae6:	6878      	ldr	r0, [r7, #4]
 8009ae8:	4798      	blx	r3
    }
 8009aea:	bf00      	nop
 8009aec:	3708      	adds	r7, #8
 8009aee:	46bd      	mov	sp, r7
 8009af0:	bd80      	pop	{r7, pc}

08009af2 <_ZN8touchgfx8Drawable15handleDragEventERKNS_9DragEventE>:
     * ignores the event. The event is only received if the drawable is touchable and
     * visible.
     *
     * @param  event The DragEvent received from the HAL.
     */
    virtual void handleDragEvent(const DragEvent& event)
 8009af2:	b480      	push	{r7}
 8009af4:	b083      	sub	sp, #12
 8009af6:	af00      	add	r7, sp, #0
 8009af8:	6078      	str	r0, [r7, #4]
 8009afa:	6039      	str	r1, [r7, #0]
    {
        (void)event; // Unused variable
    }
 8009afc:	bf00      	nop
 8009afe:	370c      	adds	r7, #12
 8009b00:	46bd      	mov	sp, r7
 8009b02:	f85d 7b04 	ldr.w	r7, [sp], #4
 8009b06:	4770      	bx	lr

08009b08 <_ZN8touchgfx8Drawable15handleTickEventEv>:
     * Called periodically by the framework if the Drawable instance has subscribed to timer
     * ticks.
     *
     * @see Application::registerTimerWidget
     */
    virtual void handleTickEvent()
 8009b08:	b480      	push	{r7}
 8009b0a:	b083      	sub	sp, #12
 8009b0c:	af00      	add	r7, sp, #0
 8009b0e:	6078      	str	r0, [r7, #4]
    {
    }
 8009b10:	bf00      	nop
 8009b12:	370c      	adds	r7, #12
 8009b14:	46bd      	mov	sp, r7
 8009b16:	f85d 7b04 	ldr.w	r7, [sp], #4
 8009b1a:	4770      	bx	lr

08009b1c <_ZN8touchgfx8Drawable12setTouchableEb>:
    /**
     * Controls whether this Drawable receives touch events or not.
     *
     * @param  touch If true it will receive touch events, if false it will not.
     */
    void setTouchable(bool touch)
 8009b1c:	b480      	push	{r7}
 8009b1e:	b083      	sub	sp, #12
 8009b20:	af00      	add	r7, sp, #0
 8009b22:	6078      	str	r0, [r7, #4]
 8009b24:	460b      	mov	r3, r1
 8009b26:	70fb      	strb	r3, [r7, #3]
    {
        touchable = touch;
 8009b28:	687b      	ldr	r3, [r7, #4]
 8009b2a:	78fa      	ldrb	r2, [r7, #3]
 8009b2c:	f883 2024 	strb.w	r2, [r3, #36]	@ 0x24
    }
 8009b30:	bf00      	nop
 8009b32:	370c      	adds	r7, #12
 8009b34:	46bd      	mov	sp, r7
 8009b36:	f85d 7b04 	ldr.w	r7, [sp], #4
 8009b3a:	4770      	bx	lr

08009b3c <_ZNK8touchgfx8Drawable9isVisibleEv>:
     *
     * @return true if the Drawable is visible.
     *
     * @see setVisible
     */
    bool isVisible() const
 8009b3c:	b480      	push	{r7}
 8009b3e:	b083      	sub	sp, #12
 8009b40:	af00      	add	r7, sp, #0
 8009b42:	6078      	str	r0, [r7, #4]
    {
        return visible;
 8009b44:	687b      	ldr	r3, [r7, #4]
 8009b46:	f893 3025 	ldrb.w	r3, [r3, #37]	@ 0x25
    }
 8009b4a:	4618      	mov	r0, r3
 8009b4c:	370c      	adds	r7, #12
 8009b4e:	46bd      	mov	sp, r7
 8009b50:	f85d 7b04 	ldr.w	r7, [sp], #4
 8009b54:	4770      	bx	lr

08009b56 <_ZNK8touchgfx8Drawable11isTouchableEv>:
     *
     * @return True if touch events are received.
     *
     * @see setTouchable
     */
    bool isTouchable() const
 8009b56:	b480      	push	{r7}
 8009b58:	b083      	sub	sp, #12
 8009b5a:	af00      	add	r7, sp, #0
 8009b5c:	6078      	str	r0, [r7, #4]
    {
        return touchable;
 8009b5e:	687b      	ldr	r3, [r7, #4]
 8009b60:	f893 3024 	ldrb.w	r3, [r3, #36]	@ 0x24
    }
 8009b64:	4618      	mov	r0, r3
 8009b66:	370c      	adds	r7, #12
 8009b68:	46bd      	mov	sp, r7
 8009b6a:	f85d 7b04 	ldr.w	r7, [sp], #4
 8009b6e:	4770      	bx	lr

08009b70 <_ZN8touchgfx8Drawable6moveToEss>:
     *
     * @see moveRelative, setXY
     *
     * @note Will redraw the appropriate areas of the screen.
     */
    virtual void moveTo(int16_t x, int16_t y)
 8009b70:	b580      	push	{r7, lr}
 8009b72:	b082      	sub	sp, #8
 8009b74:	af00      	add	r7, sp, #0
 8009b76:	6078      	str	r0, [r7, #4]
 8009b78:	460b      	mov	r3, r1
 8009b7a:	807b      	strh	r3, [r7, #2]
 8009b7c:	4613      	mov	r3, r2
 8009b7e:	803b      	strh	r3, [r7, #0]
    {
        moveRelative(x - rect.x, y - rect.y);
 8009b80:	687b      	ldr	r3, [r7, #4]
 8009b82:	681b      	ldr	r3, [r3, #0]
 8009b84:	3354      	adds	r3, #84	@ 0x54
 8009b86:	681b      	ldr	r3, [r3, #0]
 8009b88:	8879      	ldrh	r1, [r7, #2]
 8009b8a:	687a      	ldr	r2, [r7, #4]
 8009b8c:	f9b2 2004 	ldrsh.w	r2, [r2, #4]
 8009b90:	b292      	uxth	r2, r2
 8009b92:	1a8a      	subs	r2, r1, r2
 8009b94:	b292      	uxth	r2, r2
 8009b96:	b210      	sxth	r0, r2
 8009b98:	8839      	ldrh	r1, [r7, #0]
 8009b9a:	687a      	ldr	r2, [r7, #4]
 8009b9c:	f9b2 2006 	ldrsh.w	r2, [r2, #6]
 8009ba0:	b292      	uxth	r2, r2
 8009ba2:	1a8a      	subs	r2, r1, r2
 8009ba4:	b292      	uxth	r2, r2
 8009ba6:	b212      	sxth	r2, r2
 8009ba8:	4601      	mov	r1, r0
 8009baa:	6878      	ldr	r0, [r7, #4]
 8009bac:	4798      	blx	r3
    }
 8009bae:	bf00      	nop
 8009bb0:	3708      	adds	r7, #8
 8009bb2:	46bd      	mov	sp, r7
 8009bb4:	bd80      	pop	{r7, pc}

08009bb6 <_ZN8touchgfx8Drawable19resetDrawChainCacheEv>:
     *
     * Reset cached coordinate data.
     *
     * @note For TouchGFX internal use only.
     */
    void resetDrawChainCache()
 8009bb6:	b480      	push	{r7}
 8009bb8:	b083      	sub	sp, #12
 8009bba:	af00      	add	r7, sp, #0
 8009bbc:	6078      	str	r0, [r7, #4]
    {
        // Resetting the cached indicators
        cachedVisibleRect.x = UNCACHED_INDICATOR;
 8009bbe:	687b      	ldr	r3, [r7, #4]
 8009bc0:	f64f 72ff 	movw	r2, #65535	@ 0xffff
 8009bc4:	819a      	strh	r2, [r3, #12]
        cachedAbsX = UNCACHED_INDICATOR;
 8009bc6:	687b      	ldr	r3, [r7, #4]
 8009bc8:	f64f 72ff 	movw	r2, #65535	@ 0xffff
 8009bcc:	841a      	strh	r2, [r3, #32]
        cachedAbsY = UNCACHED_INDICATOR;
 8009bce:	687b      	ldr	r3, [r7, #4]
 8009bd0:	f64f 72ff 	movw	r2, #65535	@ 0xffff
 8009bd4:	845a      	strh	r2, [r3, #34]	@ 0x22
    }
 8009bd6:	bf00      	nop
 8009bd8:	370c      	adds	r7, #12
 8009bda:	46bd      	mov	sp, r7
 8009bdc:	f85d 7b04 	ldr.w	r7, [sp], #4
 8009be0:	4770      	bx	lr

08009be2 <_ZN8touchgfx8Drawable14setupDrawChainERKNS_4RectEPPS0_>:
     * @param          invalidatedArea     Include drawables that intersect with this area only.
     * @param [in,out] nextPreviousElement Modifiable element in linked list.
     *
     * @note For TouchGFX internal use only.
     */
    virtual void setupDrawChain(const Rect& invalidatedArea, Drawable** nextPreviousElement)
 8009be2:	b580      	push	{r7, lr}
 8009be4:	b084      	sub	sp, #16
 8009be6:	af00      	add	r7, sp, #0
 8009be8:	60f8      	str	r0, [r7, #12]
 8009bea:	60b9      	str	r1, [r7, #8]
 8009bec:	607a      	str	r2, [r7, #4]
    {
        (void)invalidatedArea; // Unused variable
        resetDrawChainCache();
 8009bee:	68f8      	ldr	r0, [r7, #12]
 8009bf0:	f7ff ffe1 	bl	8009bb6 <_ZN8touchgfx8Drawable19resetDrawChainCacheEv>
        nextDrawChainElement = *nextPreviousElement;
 8009bf4:	687b      	ldr	r3, [r7, #4]
 8009bf6:	681a      	ldr	r2, [r3, #0]
 8009bf8:	68fb      	ldr	r3, [r7, #12]
 8009bfa:	61da      	str	r2, [r3, #28]
        *nextPreviousElement = this;
 8009bfc:	687b      	ldr	r3, [r7, #4]
 8009bfe:	68fa      	ldr	r2, [r7, #12]
 8009c00:	601a      	str	r2, [r3, #0]
    }
 8009c02:	bf00      	nop
 8009c04:	3710      	adds	r7, #16
 8009c06:	46bd      	mov	sp, r7
 8009c08:	bd80      	pop	{r7, pc}

08009c0a <_ZN8touchgfx6Widget12getLastChildEssPPNS_8DrawableE>:
     * Since a Widget is only one Drawable, Widget::getLastChild simply yields itself as
     * result, but only if the Widget isVisible and isTouchable.
     *
     * @param [out] last Result, the address of the actual instance of the Widget.
     */
    virtual void getLastChild(int16_t /*x*/, int16_t /*y*/, Drawable** last)
 8009c0a:	b580      	push	{r7, lr}
 8009c0c:	b084      	sub	sp, #16
 8009c0e:	af00      	add	r7, sp, #0
 8009c10:	60f8      	str	r0, [r7, #12]
 8009c12:	607b      	str	r3, [r7, #4]
 8009c14:	460b      	mov	r3, r1
 8009c16:	817b      	strh	r3, [r7, #10]
 8009c18:	4613      	mov	r3, r2
 8009c1a:	813b      	strh	r3, [r7, #8]
    {
        if (isVisible() && isTouchable())
 8009c1c:	68fb      	ldr	r3, [r7, #12]
 8009c1e:	4618      	mov	r0, r3
 8009c20:	f7ff ff8c 	bl	8009b3c <_ZNK8touchgfx8Drawable9isVisibleEv>
 8009c24:	4603      	mov	r3, r0
 8009c26:	2b00      	cmp	r3, #0
 8009c28:	d008      	beq.n	8009c3c <_ZN8touchgfx6Widget12getLastChildEssPPNS_8DrawableE+0x32>
 8009c2a:	68fb      	ldr	r3, [r7, #12]
 8009c2c:	4618      	mov	r0, r3
 8009c2e:	f7ff ff92 	bl	8009b56 <_ZNK8touchgfx8Drawable11isTouchableEv>
 8009c32:	4603      	mov	r3, r0
 8009c34:	2b00      	cmp	r3, #0
 8009c36:	d001      	beq.n	8009c3c <_ZN8touchgfx6Widget12getLastChildEssPPNS_8DrawableE+0x32>
 8009c38:	2301      	movs	r3, #1
 8009c3a:	e000      	b.n	8009c3e <_ZN8touchgfx6Widget12getLastChildEssPPNS_8DrawableE+0x34>
 8009c3c:	2300      	movs	r3, #0
 8009c3e:	2b00      	cmp	r3, #0
 8009c40:	d002      	beq.n	8009c48 <_ZN8touchgfx6Widget12getLastChildEssPPNS_8DrawableE+0x3e>
        {
            *last = this;
 8009c42:	68fa      	ldr	r2, [r7, #12]
 8009c44:	687b      	ldr	r3, [r7, #4]
 8009c46:	601a      	str	r2, [r3, #0]
        }
    }
 8009c48:	bf00      	nop
 8009c4a:	3710      	adds	r7, #16
 8009c4c:	46bd      	mov	sp, r7
 8009c4e:	bd80      	pop	{r7, pc}

08009c50 <_ZN8touchgfx9ContainerC1Ev>:
 * @see Drawable
 */
class Container : public Drawable
{
public:
    Container()
 8009c50:	b580      	push	{r7, lr}
 8009c52:	b082      	sub	sp, #8
 8009c54:	af00      	add	r7, sp, #0
 8009c56:	6078      	str	r0, [r7, #4]
        : Drawable(),
          firstChild(0)
 8009c58:	687b      	ldr	r3, [r7, #4]
 8009c5a:	4618      	mov	r0, r3
 8009c5c:	f7ff fe22 	bl	80098a4 <_ZN8touchgfx8DrawableC1Ev>
 8009c60:	4a05      	ldr	r2, [pc, #20]	@ (8009c78 <_ZN8touchgfx9ContainerC1Ev+0x28>)
 8009c62:	687b      	ldr	r3, [r7, #4]
 8009c64:	601a      	str	r2, [r3, #0]
 8009c66:	687b      	ldr	r3, [r7, #4]
 8009c68:	2200      	movs	r2, #0
 8009c6a:	629a      	str	r2, [r3, #40]	@ 0x28
    {
    }
 8009c6c:	687b      	ldr	r3, [r7, #4]
 8009c6e:	4618      	mov	r0, r3
 8009c70:	3708      	adds	r7, #8
 8009c72:	46bd      	mov	sp, r7
 8009c74:	bd80      	pop	{r7, pc}
 8009c76:	bf00      	nop
 8009c78:	08028e3c 	.word	0x08028e3c

08009c7c <_ZN8touchgfx9Container13getFirstChildEv>:
     * @return Pointer to the first drawable added to this container. If nothing has been
     *         added return zero.
     *
     * @see getNextSibling
     */
    virtual Drawable* getFirstChild()
 8009c7c:	b480      	push	{r7}
 8009c7e:	b083      	sub	sp, #12
 8009c80:	af00      	add	r7, sp, #0
 8009c82:	6078      	str	r0, [r7, #4]
    {
        return firstChild;
 8009c84:	687b      	ldr	r3, [r7, #4]
 8009c86:	6a9b      	ldr	r3, [r3, #40]	@ 0x28
    }
 8009c88:	4618      	mov	r0, r3
 8009c8a:	370c      	adds	r7, #12
 8009c8c:	46bd      	mov	sp, r7
 8009c8e:	f85d 7b04 	ldr.w	r7, [sp], #4
 8009c92:	4770      	bx	lr

08009c94 <_ZN8touchgfx6ScreenD1Ev>:
public:
    /** Initializes a new instance of the Screen class. */
    Screen();

    /** Finalizes an instance of the Screen class. */
    virtual ~Screen()
 8009c94:	b580      	push	{r7, lr}
 8009c96:	b082      	sub	sp, #8
 8009c98:	af00      	add	r7, sp, #0
 8009c9a:	6078      	str	r0, [r7, #4]
    {
 8009c9c:	4a06      	ldr	r2, [pc, #24]	@ (8009cb8 <_ZN8touchgfx6ScreenD1Ev+0x24>)
 8009c9e:	687b      	ldr	r3, [r7, #4]
 8009ca0:	601a      	str	r2, [r3, #0]
    }
 8009ca2:	687b      	ldr	r3, [r7, #4]
 8009ca4:	3304      	adds	r3, #4
 8009ca6:	4618      	mov	r0, r3
 8009ca8:	f000 fa26 	bl	800a0f8 <_ZN8touchgfx9ContainerD1Ev>
 8009cac:	687b      	ldr	r3, [r7, #4]
 8009cae:	4618      	mov	r0, r3
 8009cb0:	3708      	adds	r7, #8
 8009cb2:	46bd      	mov	sp, r7
 8009cb4:	bd80      	pop	{r7, pc}
 8009cb6:	bf00      	nop
 8009cb8:	0802959c 	.word	0x0802959c

08009cbc <_ZN8touchgfx6ScreenD0Ev>:
    virtual ~Screen()
 8009cbc:	b580      	push	{r7, lr}
 8009cbe:	b082      	sub	sp, #8
 8009cc0:	af00      	add	r7, sp, #0
 8009cc2:	6078      	str	r0, [r7, #4]
    }
 8009cc4:	6878      	ldr	r0, [r7, #4]
 8009cc6:	f7ff ffe5 	bl	8009c94 <_ZN8touchgfx6ScreenD1Ev>
 8009cca:	213c      	movs	r1, #60	@ 0x3c
 8009ccc:	6878      	ldr	r0, [r7, #4]
 8009cce:	f01b fee0 	bl	8025a92 <_ZdlPvj>
 8009cd2:	687b      	ldr	r3, [r7, #4]
 8009cd4:	4618      	mov	r0, r3
 8009cd6:	3708      	adds	r7, #8
 8009cd8:	46bd      	mov	sp, r7
 8009cda:	bd80      	pop	{r7, pc}

08009cdc <_ZN8touchgfx6Screen11setupScreenEv>:
     * version does nothing, but place any screen specific initialization code in an
     * overridden version.
     *
     * @see Application::switchScreen
     */
    virtual void setupScreen()
 8009cdc:	b480      	push	{r7}
 8009cde:	b083      	sub	sp, #12
 8009ce0:	af00      	add	r7, sp, #0
 8009ce2:	6078      	str	r0, [r7, #4]
    {
    }
 8009ce4:	bf00      	nop
 8009ce6:	370c      	adds	r7, #12
 8009ce8:	46bd      	mov	sp, r7
 8009cea:	f85d 7b04 	ldr.w	r7, [sp], #4
 8009cee:	4770      	bx	lr

08009cf0 <_ZN8touchgfx6Screen15afterTransitionEv>:
     * version does nothing, but override to do screen specific initialization code that has
     * to be done after the transition to the screen.
     *
     * @see Application::handleTickEvent
     */
    virtual void afterTransition()
 8009cf0:	b480      	push	{r7}
 8009cf2:	b083      	sub	sp, #12
 8009cf4:	af00      	add	r7, sp, #0
 8009cf6:	6078      	str	r0, [r7, #4]
    {
    }
 8009cf8:	bf00      	nop
 8009cfa:	370c      	adds	r7, #12
 8009cfc:	46bd      	mov	sp, r7
 8009cfe:	f85d 7b04 	ldr.w	r7, [sp], #4
 8009d02:	4770      	bx	lr

08009d04 <_ZN8touchgfx6Screen14tearDownScreenEv>:
     * Base version does nothing, but place any screen specific cleanup code in an
     * overridden version.
     *
     * @see Application::switchScreen
     */
    virtual void tearDownScreen()
 8009d04:	b480      	push	{r7}
 8009d06:	b083      	sub	sp, #12
 8009d08:	af00      	add	r7, sp, #0
 8009d0a:	6078      	str	r0, [r7, #4]
    {
    }
 8009d0c:	bf00      	nop
 8009d0e:	370c      	adds	r7, #12
 8009d10:	46bd      	mov	sp, r7
 8009d12:	f85d 7b04 	ldr.w	r7, [sp], #4
 8009d16:	4770      	bx	lr

08009d18 <_ZN8touchgfx6Screen15handleTickEventEv>:

    /**
     * Called by the Application on the current screen with a frequency of
     * Application::TICK_INTERVAL_MS.
     */
    virtual void handleTickEvent()
 8009d18:	b480      	push	{r7}
 8009d1a:	b083      	sub	sp, #12
 8009d1c:	af00      	add	r7, sp, #0
 8009d1e:	6078      	str	r0, [r7, #4]
    {
    }
 8009d20:	bf00      	nop
 8009d22:	370c      	adds	r7, #12
 8009d24:	46bd      	mov	sp, r7
 8009d26:	f85d 7b04 	ldr.w	r7, [sp], #4
 8009d2a:	4770      	bx	lr

08009d2c <_ZN8touchgfx6Screen14handleKeyEventEh>:
     * Called by the Application on the reception of a "key", the meaning of which is
     * platform/application specific. Default implementation does nothing.
     *
     * @param  key The key to handle.
     */
    virtual void handleKeyEvent(uint8_t key)
 8009d2c:	b480      	push	{r7}
 8009d2e:	b083      	sub	sp, #12
 8009d30:	af00      	add	r7, sp, #0
 8009d32:	6078      	str	r0, [r7, #4]
 8009d34:	460b      	mov	r3, r1
 8009d36:	70fb      	strb	r3, [r7, #3]
    {
        (void)key; // Unused variable
    }
 8009d38:	bf00      	nop
 8009d3a:	370c      	adds	r7, #12
 8009d3c:	46bd      	mov	sp, r7
 8009d3e:	f85d 7b04 	ldr.w	r7, [sp], #4
 8009d42:	4770      	bx	lr

08009d44 <_ZN8touchgfx6Screen3addERNS_8DrawableE>:
     * @param [in] d The Drawable to add.
     *
     * @note Must not be called with a Drawable that was already added to the screen. If in doubt,
     *       call remove() first.
     */
    void add(Drawable& d)
 8009d44:	b580      	push	{r7, lr}
 8009d46:	b082      	sub	sp, #8
 8009d48:	af00      	add	r7, sp, #0
 8009d4a:	6078      	str	r0, [r7, #4]
 8009d4c:	6039      	str	r1, [r7, #0]
    {
        container.add(d);
 8009d4e:	687b      	ldr	r3, [r7, #4]
 8009d50:	3304      	adds	r3, #4
 8009d52:	6839      	ldr	r1, [r7, #0]
 8009d54:	4618      	mov	r0, r3
 8009d56:	f006 fc73 	bl	8010640 <_ZN8touchgfx9Container3addERNS_8DrawableE>
    }
 8009d5a:	bf00      	nop
 8009d5c:	3708      	adds	r7, #8
 8009d5e:	46bd      	mov	sp, r7
 8009d60:	bd80      	pop	{r7, pc}
	...

08009d64 <_ZN8touchgfx6WidgetC1Ev>:
class Widget : public Drawable
 8009d64:	b580      	push	{r7, lr}
 8009d66:	b082      	sub	sp, #8
 8009d68:	af00      	add	r7, sp, #0
 8009d6a:	6078      	str	r0, [r7, #4]
 8009d6c:	687b      	ldr	r3, [r7, #4]
 8009d6e:	4618      	mov	r0, r3
 8009d70:	f7ff fd98 	bl	80098a4 <_ZN8touchgfx8DrawableC1Ev>
 8009d74:	4a03      	ldr	r2, [pc, #12]	@ (8009d84 <_ZN8touchgfx6WidgetC1Ev+0x20>)
 8009d76:	687b      	ldr	r3, [r7, #4]
 8009d78:	601a      	str	r2, [r3, #0]
 8009d7a:	687b      	ldr	r3, [r7, #4]
 8009d7c:	4618      	mov	r0, r3
 8009d7e:	3708      	adds	r7, #8
 8009d80:	46bd      	mov	sp, r7
 8009d82:	bd80      	pop	{r7, pc}
 8009d84:	0802849c 	.word	0x0802849c

08009d88 <_ZN8touchgfx6WidgetD1Ev>:
 8009d88:	b580      	push	{r7, lr}
 8009d8a:	b082      	sub	sp, #8
 8009d8c:	af00      	add	r7, sp, #0
 8009d8e:	6078      	str	r0, [r7, #4]
 8009d90:	4a05      	ldr	r2, [pc, #20]	@ (8009da8 <_ZN8touchgfx6WidgetD1Ev+0x20>)
 8009d92:	687b      	ldr	r3, [r7, #4]
 8009d94:	601a      	str	r2, [r3, #0]
 8009d96:	687b      	ldr	r3, [r7, #4]
 8009d98:	4618      	mov	r0, r3
 8009d9a:	f7ff fdb3 	bl	8009904 <_ZN8touchgfx8DrawableD1Ev>
 8009d9e:	687b      	ldr	r3, [r7, #4]
 8009da0:	4618      	mov	r0, r3
 8009da2:	3708      	adds	r7, #8
 8009da4:	46bd      	mov	sp, r7
 8009da6:	bd80      	pop	{r7, pc}
 8009da8:	0802849c 	.word	0x0802849c

08009dac <_ZN8touchgfx6WidgetD0Ev>:
 8009dac:	b580      	push	{r7, lr}
 8009dae:	b082      	sub	sp, #8
 8009db0:	af00      	add	r7, sp, #0
 8009db2:	6078      	str	r0, [r7, #4]
 8009db4:	6878      	ldr	r0, [r7, #4]
 8009db6:	f7ff ffe7 	bl	8009d88 <_ZN8touchgfx6WidgetD1Ev>
 8009dba:	2128      	movs	r1, #40	@ 0x28
 8009dbc:	6878      	ldr	r0, [r7, #4]
 8009dbe:	f01b fe68 	bl	8025a92 <_ZdlPvj>
 8009dc2:	687b      	ldr	r3, [r7, #4]
 8009dc4:	4618      	mov	r0, r3
 8009dc6:	3708      	adds	r7, #8
 8009dc8:	46bd      	mov	sp, r7
 8009dca:	bd80      	pop	{r7, pc}

08009dcc <_ZN8touchgfx3BoxC1Ev>:
 */
class Box : public Widget
{
public:
    /** Construct a new Box with a default alpha value of 255 (solid) */
    Box()
 8009dcc:	b580      	push	{r7, lr}
 8009dce:	b082      	sub	sp, #8
 8009dd0:	af00      	add	r7, sp, #0
 8009dd2:	6078      	str	r0, [r7, #4]
        : Widget(), alpha(255), color(0)
 8009dd4:	687b      	ldr	r3, [r7, #4]
 8009dd6:	4618      	mov	r0, r3
 8009dd8:	2326      	movs	r3, #38	@ 0x26
 8009dda:	461a      	mov	r2, r3
 8009ddc:	2100      	movs	r1, #0
 8009dde:	f01c f90e 	bl	8025ffe <memset>
 8009de2:	687b      	ldr	r3, [r7, #4]
 8009de4:	4618      	mov	r0, r3
 8009de6:	f7ff ffbd 	bl	8009d64 <_ZN8touchgfx6WidgetC1Ev>
 8009dea:	4a09      	ldr	r2, [pc, #36]	@ (8009e10 <_ZN8touchgfx3BoxC1Ev+0x44>)
 8009dec:	687b      	ldr	r3, [r7, #4]
 8009dee:	601a      	str	r2, [r3, #0]
 8009df0:	687b      	ldr	r3, [r7, #4]
 8009df2:	22ff      	movs	r2, #255	@ 0xff
 8009df4:	f883 2026 	strb.w	r2, [r3, #38]	@ 0x26
 8009df8:	687b      	ldr	r3, [r7, #4]
 8009dfa:	3328      	adds	r3, #40	@ 0x28
 8009dfc:	2100      	movs	r1, #0
 8009dfe:	4618      	mov	r0, r3
 8009e00:	f7ff fcee 	bl	80097e0 <_ZN8touchgfx9colortypeC1Em>
    {
    }
 8009e04:	687b      	ldr	r3, [r7, #4]
 8009e06:	4618      	mov	r0, r3
 8009e08:	3708      	adds	r7, #8
 8009e0a:	46bd      	mov	sp, r7
 8009e0c:	bd80      	pop	{r7, pc}
 8009e0e:	bf00      	nop
 8009e10:	08029198 	.word	0x08029198

08009e14 <_ZN8touchgfx3Box8setColorENS_9colortypeE>:
     *
     * @param  newColor The color of the box.
     *
     * @see getColor, Color::getColorFromRGB
     */
    void setColor(colortype newColor)
 8009e14:	b480      	push	{r7}
 8009e16:	b083      	sub	sp, #12
 8009e18:	af00      	add	r7, sp, #0
 8009e1a:	6078      	str	r0, [r7, #4]
 8009e1c:	6039      	str	r1, [r7, #0]
    {
        color = newColor;
 8009e1e:	687b      	ldr	r3, [r7, #4]
 8009e20:	683a      	ldr	r2, [r7, #0]
 8009e22:	629a      	str	r2, [r3, #40]	@ 0x28
    }
 8009e24:	bf00      	nop
 8009e26:	370c      	adds	r7, #12
 8009e28:	46bd      	mov	sp, r7
 8009e2a:	f85d 7b04 	ldr.w	r7, [sp], #4
 8009e2e:	4770      	bx	lr

08009e30 <_ZN8touchgfx3Box8setAlphaEh>:
    }

    /**
     * @copydoc Image::setAlpha
     */
    void setAlpha(uint8_t newAlpha)
 8009e30:	b480      	push	{r7}
 8009e32:	b083      	sub	sp, #12
 8009e34:	af00      	add	r7, sp, #0
 8009e36:	6078      	str	r0, [r7, #4]
 8009e38:	460b      	mov	r3, r1
 8009e3a:	70fb      	strb	r3, [r7, #3]
    {
        alpha = newAlpha;
 8009e3c:	687b      	ldr	r3, [r7, #4]
 8009e3e:	78fa      	ldrb	r2, [r7, #3]
 8009e40:	f883 2026 	strb.w	r2, [r3, #38]	@ 0x26
    }
 8009e44:	bf00      	nop
 8009e46:	370c      	adds	r7, #12
 8009e48:	46bd      	mov	sp, r7
 8009e4a:	f85d 7b04 	ldr.w	r7, [sp], #4
 8009e4e:	4770      	bx	lr

08009e50 <_ZN8touchgfx9TypedTextC1Et>:
    TypedText(const TypedTextId id = TYPED_TEXT_INVALID)
 8009e50:	b480      	push	{r7}
 8009e52:	b083      	sub	sp, #12
 8009e54:	af00      	add	r7, sp, #0
 8009e56:	6078      	str	r0, [r7, #4]
 8009e58:	460b      	mov	r3, r1
 8009e5a:	807b      	strh	r3, [r7, #2]
        : typedTextId(id)
 8009e5c:	4a06      	ldr	r2, [pc, #24]	@ (8009e78 <_ZN8touchgfx9TypedTextC1Et+0x28>)
 8009e5e:	687b      	ldr	r3, [r7, #4]
 8009e60:	601a      	str	r2, [r3, #0]
 8009e62:	687b      	ldr	r3, [r7, #4]
 8009e64:	887a      	ldrh	r2, [r7, #2]
 8009e66:	809a      	strh	r2, [r3, #4]
    }
 8009e68:	687b      	ldr	r3, [r7, #4]
 8009e6a:	4618      	mov	r0, r3
 8009e6c:	370c      	adds	r7, #12
 8009e6e:	46bd      	mov	sp, r7
 8009e70:	f85d 7b04 	ldr.w	r7, [sp], #4
 8009e74:	4770      	bx	lr
 8009e76:	bf00      	nop
 8009e78:	08027fa8 	.word	0x08027fa8

08009e7c <_ZN8touchgfx8TextAreaC1Ev>:
 *       the pointer remains valid when drawing.
 */
class TextArea : public Widget
{
public:
    TextArea()
 8009e7c:	b580      	push	{r7, lr}
 8009e7e:	b082      	sub	sp, #8
 8009e80:	af00      	add	r7, sp, #0
 8009e82:	6078      	str	r0, [r7, #4]
        : Widget(), typedText(TYPED_TEXT_INVALID), color(0), linespace(0), alpha(255), indentation(0), rotation(TEXT_ROTATE_0), wideTextAction(WIDE_TEXT_NONE), boundingArea()
 8009e84:	687b      	ldr	r3, [r7, #4]
 8009e86:	4618      	mov	r0, r3
 8009e88:	2326      	movs	r3, #38	@ 0x26
 8009e8a:	461a      	mov	r2, r3
 8009e8c:	2100      	movs	r1, #0
 8009e8e:	f01c f8b6 	bl	8025ffe <memset>
 8009e92:	687b      	ldr	r3, [r7, #4]
 8009e94:	4618      	mov	r0, r3
 8009e96:	f7ff ff65 	bl	8009d64 <_ZN8touchgfx6WidgetC1Ev>
 8009e9a:	4a16      	ldr	r2, [pc, #88]	@ (8009ef4 <_ZN8touchgfx8TextAreaC1Ev+0x78>)
 8009e9c:	687b      	ldr	r3, [r7, #4]
 8009e9e:	601a      	str	r2, [r3, #0]
 8009ea0:	687b      	ldr	r3, [r7, #4]
 8009ea2:	3328      	adds	r3, #40	@ 0x28
 8009ea4:	f64f 71ff 	movw	r1, #65535	@ 0xffff
 8009ea8:	4618      	mov	r0, r3
 8009eaa:	f7ff ffd1 	bl	8009e50 <_ZN8touchgfx9TypedTextC1Et>
 8009eae:	687b      	ldr	r3, [r7, #4]
 8009eb0:	3330      	adds	r3, #48	@ 0x30
 8009eb2:	2100      	movs	r1, #0
 8009eb4:	4618      	mov	r0, r3
 8009eb6:	f7ff fc93 	bl	80097e0 <_ZN8touchgfx9colortypeC1Em>
 8009eba:	687b      	ldr	r3, [r7, #4]
 8009ebc:	2200      	movs	r2, #0
 8009ebe:	869a      	strh	r2, [r3, #52]	@ 0x34
 8009ec0:	687b      	ldr	r3, [r7, #4]
 8009ec2:	22ff      	movs	r2, #255	@ 0xff
 8009ec4:	f883 2036 	strb.w	r2, [r3, #54]	@ 0x36
 8009ec8:	687b      	ldr	r3, [r7, #4]
 8009eca:	2200      	movs	r2, #0
 8009ecc:	f883 2037 	strb.w	r2, [r3, #55]	@ 0x37
 8009ed0:	687b      	ldr	r3, [r7, #4]
 8009ed2:	2200      	movs	r2, #0
 8009ed4:	f883 2038 	strb.w	r2, [r3, #56]	@ 0x38
 8009ed8:	687b      	ldr	r3, [r7, #4]
 8009eda:	2200      	movs	r2, #0
 8009edc:	f883 2039 	strb.w	r2, [r3, #57]	@ 0x39
 8009ee0:	687b      	ldr	r3, [r7, #4]
 8009ee2:	333c      	adds	r3, #60	@ 0x3c
 8009ee4:	4618      	mov	r0, r3
 8009ee6:	f000 f8f0 	bl	800a0ca <_ZN8touchgfx8TextArea12BoundingAreaC1Ev>
    {
    }
 8009eea:	687b      	ldr	r3, [r7, #4]
 8009eec:	4618      	mov	r0, r3
 8009eee:	3708      	adds	r7, #8
 8009ef0:	46bd      	mov	sp, r7
 8009ef2:	bd80      	pop	{r7, pc}
 8009ef4:	08029108 	.word	0x08029108

08009ef8 <_ZN8touchgfx8TextArea8setWidthEs>:

    virtual void setWidth(int16_t width)
 8009ef8:	b590      	push	{r4, r7, lr}
 8009efa:	b087      	sub	sp, #28
 8009efc:	af00      	add	r7, sp, #0
 8009efe:	6178      	str	r0, [r7, #20]
 8009f00:	460b      	mov	r3, r1
 8009f02:	827b      	strh	r3, [r7, #18]
    {
        Widget::setWidth(width);
 8009f04:	697b      	ldr	r3, [r7, #20]
 8009f06:	f9b7 2012 	ldrsh.w	r2, [r7, #18]
 8009f0a:	4611      	mov	r1, r2
 8009f0c:	4618      	mov	r0, r3
 8009f0e:	f7ff fd94 	bl	8009a3a <_ZN8touchgfx8Drawable8setWidthEs>
        boundingArea = calculateBoundingArea();
 8009f12:	697b      	ldr	r3, [r7, #20]
 8009f14:	681b      	ldr	r3, [r3, #0]
 8009f16:	3384      	adds	r3, #132	@ 0x84
 8009f18:	681b      	ldr	r3, [r3, #0]
 8009f1a:	697c      	ldr	r4, [r7, #20]
 8009f1c:	463a      	mov	r2, r7
 8009f1e:	6979      	ldr	r1, [r7, #20]
 8009f20:	4610      	mov	r0, r2
 8009f22:	4798      	blx	r3
 8009f24:	f104 033c 	add.w	r3, r4, #60	@ 0x3c
 8009f28:	463a      	mov	r2, r7
 8009f2a:	ca07      	ldmia	r2, {r0, r1, r2}
 8009f2c:	e883 0007 	stmia.w	r3, {r0, r1, r2}
    }
 8009f30:	bf00      	nop
 8009f32:	371c      	adds	r7, #28
 8009f34:	46bd      	mov	sp, r7
 8009f36:	bd90      	pop	{r4, r7, pc}

08009f38 <_ZN8touchgfx8TextArea9setHeightEs>:

    virtual void setHeight(int16_t height)
 8009f38:	b590      	push	{r4, r7, lr}
 8009f3a:	b087      	sub	sp, #28
 8009f3c:	af00      	add	r7, sp, #0
 8009f3e:	6178      	str	r0, [r7, #20]
 8009f40:	460b      	mov	r3, r1
 8009f42:	827b      	strh	r3, [r7, #18]
    {
        Widget::setHeight(height);
 8009f44:	697b      	ldr	r3, [r7, #20]
 8009f46:	f9b7 2012 	ldrsh.w	r2, [r7, #18]
 8009f4a:	4611      	mov	r1, r2
 8009f4c:	4618      	mov	r0, r3
 8009f4e:	f7ff fd83 	bl	8009a58 <_ZN8touchgfx8Drawable9setHeightEs>
        boundingArea = calculateBoundingArea();
 8009f52:	697b      	ldr	r3, [r7, #20]
 8009f54:	681b      	ldr	r3, [r3, #0]
 8009f56:	3384      	adds	r3, #132	@ 0x84
 8009f58:	681b      	ldr	r3, [r3, #0]
 8009f5a:	697c      	ldr	r4, [r7, #20]
 8009f5c:	463a      	mov	r2, r7
 8009f5e:	6979      	ldr	r1, [r7, #20]
 8009f60:	4610      	mov	r0, r2
 8009f62:	4798      	blx	r3
 8009f64:	f104 033c 	add.w	r3, r4, #60	@ 0x3c
 8009f68:	463a      	mov	r2, r7
 8009f6a:	ca07      	ldmia	r2, {r0, r1, r2}
 8009f6c:	e883 0007 	stmia.w	r3, {r0, r1, r2}
    }
 8009f70:	bf00      	nop
 8009f72:	371c      	adds	r7, #28
 8009f74:	46bd      	mov	sp, r7
 8009f76:	bd90      	pop	{r4, r7, pc}

08009f78 <_ZNK8touchgfx8TextArea12getSolidRectEv>:

    virtual Rect getSolidRect() const
 8009f78:	b580      	push	{r7, lr}
 8009f7a:	b082      	sub	sp, #8
 8009f7c:	af00      	add	r7, sp, #0
 8009f7e:	6078      	str	r0, [r7, #4]
 8009f80:	6039      	str	r1, [r7, #0]
    {
        return Rect();
 8009f82:	6878      	ldr	r0, [r7, #4]
 8009f84:	f7ff fc3b 	bl	80097fe <_ZN8touchgfx4RectC1Ev>
    }
 8009f88:	6878      	ldr	r0, [r7, #4]
 8009f8a:	3708      	adds	r7, #8
 8009f8c:	46bd      	mov	sp, r7
 8009f8e:	bd80      	pop	{r7, pc}

08009f90 <_ZN8touchgfx8TextArea8setAlphaEh>:
    }

    /**
     * @copydoc Image::setAlpha
     */
    virtual void setAlpha(uint8_t newAlpha)
 8009f90:	b480      	push	{r7}
 8009f92:	b083      	sub	sp, #12
 8009f94:	af00      	add	r7, sp, #0
 8009f96:	6078      	str	r0, [r7, #4]
 8009f98:	460b      	mov	r3, r1
 8009f9a:	70fb      	strb	r3, [r7, #3]
    {
        alpha = newAlpha;
 8009f9c:	687b      	ldr	r3, [r7, #4]
 8009f9e:	78fa      	ldrb	r2, [r7, #3]
 8009fa0:	f883 2036 	strb.w	r2, [r3, #54]	@ 0x36
    }
 8009fa4:	bf00      	nop
 8009fa6:	370c      	adds	r7, #12
 8009fa8:	46bd      	mov	sp, r7
 8009faa:	f85d 7b04 	ldr.w	r7, [sp], #4
 8009fae:	4770      	bx	lr

08009fb0 <_ZN8touchgfx8TextArea12setBaselineYEs>:
     *
     * @param  baselineY The y coordinate of the baseline of the text.
     *
     * @note setTypedText() must be called prior to setting the baseline.
     */
    virtual void setBaselineY(int16_t baselineY)
 8009fb0:	b5f0      	push	{r4, r5, r6, r7, lr}
 8009fb2:	b085      	sub	sp, #20
 8009fb4:	af00      	add	r7, sp, #0
 8009fb6:	6078      	str	r0, [r7, #4]
 8009fb8:	460b      	mov	r3, r1
 8009fba:	807b      	strh	r3, [r7, #2]
    {
        setY(baselineY - getTypedText().getFont()->getBaseline());
 8009fbc:	687e      	ldr	r6, [r7, #4]
 8009fbe:	687b      	ldr	r3, [r7, #4]
 8009fc0:	681b      	ldr	r3, [r3, #0]
 8009fc2:	3334      	adds	r3, #52	@ 0x34
 8009fc4:	681c      	ldr	r4, [r3, #0]
 8009fc6:	887d      	ldrh	r5, [r7, #2]
 8009fc8:	6878      	ldr	r0, [r7, #4]
 8009fca:	f000 f867 	bl	800a09c <_ZNK8touchgfx8TextArea12getTypedTextEv>
 8009fce:	4603      	mov	r3, r0
 8009fd0:	60fb      	str	r3, [r7, #12]
     *
     * @return The font.
     */
    FORCE_INLINE_FUNCTION const Font* getFont() const
    {
        assert(typedTexts != 0 && "TypedText database has not been initialized.");
 8009fd2:	4b1c      	ldr	r3, [pc, #112]	@ (800a044 <_ZN8touchgfx8TextArea12setBaselineYEs+0x94>)
 8009fd4:	681b      	ldr	r3, [r3, #0]
 8009fd6:	2b00      	cmp	r3, #0
 8009fd8:	d105      	bne.n	8009fe6 <_ZN8touchgfx8TextArea12setBaselineYEs+0x36>
 8009fda:	4b1b      	ldr	r3, [pc, #108]	@ (800a048 <_ZN8touchgfx8TextArea12setBaselineYEs+0x98>)
 8009fdc:	4a1b      	ldr	r2, [pc, #108]	@ (800a04c <_ZN8touchgfx8TextArea12setBaselineYEs+0x9c>)
 8009fde:	216c      	movs	r1, #108	@ 0x6c
 8009fe0:	481b      	ldr	r0, [pc, #108]	@ (800a050 <_ZN8touchgfx8TextArea12setBaselineYEs+0xa0>)
 8009fe2:	f01b fe05 	bl	8025bf0 <__assert_func>
 8009fe6:	68fb      	ldr	r3, [r7, #12]
 8009fe8:	60bb      	str	r3, [r7, #8]
        return typedTextId < numberOfTypedTexts;
 8009fea:	68bb      	ldr	r3, [r7, #8]
 8009fec:	889a      	ldrh	r2, [r3, #4]
 8009fee:	4b19      	ldr	r3, [pc, #100]	@ (800a054 <_ZN8touchgfx8TextArea12setBaselineYEs+0xa4>)
 8009ff0:	881b      	ldrh	r3, [r3, #0]
 8009ff2:	429a      	cmp	r2, r3
 8009ff4:	bf34      	ite	cc
 8009ff6:	2301      	movcc	r3, #1
 8009ff8:	2300      	movcs	r3, #0
 8009ffa:	b2db      	uxtb	r3, r3
        assert(hasValidId() && "typedTextId larger than numberOfTypedTexts.");
 8009ffc:	2b00      	cmp	r3, #0
 8009ffe:	d105      	bne.n	800a00c <_ZN8touchgfx8TextArea12setBaselineYEs+0x5c>
 800a000:	4b15      	ldr	r3, [pc, #84]	@ (800a058 <_ZN8touchgfx8TextArea12setBaselineYEs+0xa8>)
 800a002:	4a12      	ldr	r2, [pc, #72]	@ (800a04c <_ZN8touchgfx8TextArea12setBaselineYEs+0x9c>)
 800a004:	216d      	movs	r1, #109	@ 0x6d
 800a006:	4812      	ldr	r0, [pc, #72]	@ (800a050 <_ZN8touchgfx8TextArea12setBaselineYEs+0xa0>)
 800a008:	f01b fdf2 	bl	8025bf0 <__assert_func>
        return fonts[typedTexts[typedTextId].fontIdx];
 800a00c:	4b13      	ldr	r3, [pc, #76]	@ (800a05c <_ZN8touchgfx8TextArea12setBaselineYEs+0xac>)
 800a00e:	681a      	ldr	r2, [r3, #0]
 800a010:	4b0c      	ldr	r3, [pc, #48]	@ (800a044 <_ZN8touchgfx8TextArea12setBaselineYEs+0x94>)
 800a012:	6819      	ldr	r1, [r3, #0]
 800a014:	68fb      	ldr	r3, [r7, #12]
 800a016:	889b      	ldrh	r3, [r3, #4]
 800a018:	005b      	lsls	r3, r3, #1
 800a01a:	440b      	add	r3, r1
 800a01c:	781b      	ldrb	r3, [r3, #0]
 800a01e:	009b      	lsls	r3, r3, #2
 800a020:	4413      	add	r3, r2
 800a022:	681b      	ldr	r3, [r3, #0]
 800a024:	681a      	ldr	r2, [r3, #0]
 800a026:	3230      	adds	r2, #48	@ 0x30
 800a028:	6812      	ldr	r2, [r2, #0]
 800a02a:	4618      	mov	r0, r3
 800a02c:	4790      	blx	r2
 800a02e:	4603      	mov	r3, r0
 800a030:	1aeb      	subs	r3, r5, r3
 800a032:	b29b      	uxth	r3, r3
 800a034:	b21b      	sxth	r3, r3
 800a036:	4619      	mov	r1, r3
 800a038:	4630      	mov	r0, r6
 800a03a:	47a0      	blx	r4
    }
 800a03c:	bf00      	nop
 800a03e:	3714      	adds	r7, #20
 800a040:	46bd      	mov	sp, r7
 800a042:	bdf0      	pop	{r4, r5, r6, r7, pc}
 800a044:	20002ff8 	.word	0x20002ff8
 800a048:	080271e0 	.word	0x080271e0
 800a04c:	08027224 	.word	0x08027224
 800a050:	08027260 	.word	0x08027260
 800a054:	20002ffc 	.word	0x20002ffc
 800a058:	080272a4 	.word	0x080272a4
 800a05c:	20003000 	.word	0x20003000

0800a060 <_ZN8touchgfx8TextArea13setXBaselineYEss>:
     * @param  x         The x coordinate of the TextArea.
     * @param  baselineY The y coordinate of the baseline of the text.
     *
     * @note setTypedText() must be called prior to setting the baseline.
     */
    virtual void setXBaselineY(int16_t x, int16_t baselineY)
 800a060:	b580      	push	{r7, lr}
 800a062:	b082      	sub	sp, #8
 800a064:	af00      	add	r7, sp, #0
 800a066:	6078      	str	r0, [r7, #4]
 800a068:	460b      	mov	r3, r1
 800a06a:	807b      	strh	r3, [r7, #2]
 800a06c:	4613      	mov	r3, r2
 800a06e:	803b      	strh	r3, [r7, #0]
    {
        setX(x);
 800a070:	687a      	ldr	r2, [r7, #4]
 800a072:	687b      	ldr	r3, [r7, #4]
 800a074:	681b      	ldr	r3, [r3, #0]
 800a076:	3330      	adds	r3, #48	@ 0x30
 800a078:	681b      	ldr	r3, [r3, #0]
 800a07a:	f9b7 1002 	ldrsh.w	r1, [r7, #2]
 800a07e:	4610      	mov	r0, r2
 800a080:	4798      	blx	r3
        setBaselineY(baselineY);
 800a082:	687b      	ldr	r3, [r7, #4]
 800a084:	681b      	ldr	r3, [r3, #0]
 800a086:	3364      	adds	r3, #100	@ 0x64
 800a088:	681b      	ldr	r3, [r3, #0]
 800a08a:	f9b7 2000 	ldrsh.w	r2, [r7]
 800a08e:	4611      	mov	r1, r2
 800a090:	6878      	ldr	r0, [r7, #4]
 800a092:	4798      	blx	r3
    }
 800a094:	bf00      	nop
 800a096:	3708      	adds	r7, #8
 800a098:	46bd      	mov	sp, r7
 800a09a:	bd80      	pop	{r7, pc}

0800a09c <_ZNK8touchgfx8TextArea12getTypedTextEv>:
    /**
     * Gets the TypedText of the text area.
     *
     * @return The currently used TypedText.
     */
    const TypedText& getTypedText() const
 800a09c:	b480      	push	{r7}
 800a09e:	b083      	sub	sp, #12
 800a0a0:	af00      	add	r7, sp, #0
 800a0a2:	6078      	str	r0, [r7, #4]
    {
        return typedText;
 800a0a4:	687b      	ldr	r3, [r7, #4]
 800a0a6:	3328      	adds	r3, #40	@ 0x28
    }
 800a0a8:	4618      	mov	r0, r3
 800a0aa:	370c      	adds	r7, #12
 800a0ac:	46bd      	mov	sp, r7
 800a0ae:	f85d 7b04 	ldr.w	r7, [sp], #4
 800a0b2:	4770      	bx	lr

0800a0b4 <_ZNK8touchgfx8TextArea12getWildcard2Ev>:
     *
     * @return A pointer to the second wildcard, if this text area has two wildcards, otherwise 0.
     *
     * @see TextAreaWithOneWildcard, TextAreaWithTwoWildcards
     */
    virtual const Unicode::UnicodeChar* getWildcard2() const
 800a0b4:	b480      	push	{r7}
 800a0b6:	b083      	sub	sp, #12
 800a0b8:	af00      	add	r7, sp, #0
 800a0ba:	6078      	str	r0, [r7, #4]
    {
        return 0;
 800a0bc:	2300      	movs	r3, #0
    }
 800a0be:	4618      	mov	r0, r3
 800a0c0:	370c      	adds	r7, #12
 800a0c2:	46bd      	mov	sp, r7
 800a0c4:	f85d 7b04 	ldr.w	r7, [sp], #4
 800a0c8:	4770      	bx	lr

0800a0ca <_ZN8touchgfx8TextArea12BoundingAreaC1Ev>:
        }

        /**
         * Initializes a new instance of the BoundingArea class which is invalid by default.
         */
        BoundingArea()
 800a0ca:	b580      	push	{r7, lr}
 800a0cc:	b084      	sub	sp, #16
 800a0ce:	af02      	add	r7, sp, #8
 800a0d0:	6078      	str	r0, [r7, #4]
            : rect(Rect(0, 0, -1, -1)), // Negative width and height means invalid rectangle
 800a0d2:	6878      	ldr	r0, [r7, #4]
 800a0d4:	f04f 33ff 	mov.w	r3, #4294967295
 800a0d8:	9300      	str	r3, [sp, #0]
 800a0da:	f04f 33ff 	mov.w	r3, #4294967295
 800a0de:	2200      	movs	r2, #0
 800a0e0:	2100      	movs	r1, #0
 800a0e2:	f7ff fba3 	bl	800982c <_ZN8touchgfx4RectC1Essss>
              text(0)
 800a0e6:	687b      	ldr	r3, [r7, #4]
 800a0e8:	2200      	movs	r2, #0
 800a0ea:	609a      	str	r2, [r3, #8]
        {
        }
 800a0ec:	687b      	ldr	r3, [r7, #4]
 800a0ee:	4618      	mov	r0, r3
 800a0f0:	3708      	adds	r7, #8
 800a0f2:	46bd      	mov	sp, r7
 800a0f4:	bd80      	pop	{r7, pc}
	...

0800a0f8 <_ZN8touchgfx9ContainerD1Ev>:
class Container : public Drawable
 800a0f8:	b580      	push	{r7, lr}
 800a0fa:	b082      	sub	sp, #8
 800a0fc:	af00      	add	r7, sp, #0
 800a0fe:	6078      	str	r0, [r7, #4]
 800a100:	4a05      	ldr	r2, [pc, #20]	@ (800a118 <_ZN8touchgfx9ContainerD1Ev+0x20>)
 800a102:	687b      	ldr	r3, [r7, #4]
 800a104:	601a      	str	r2, [r3, #0]
 800a106:	687b      	ldr	r3, [r7, #4]
 800a108:	4618      	mov	r0, r3
 800a10a:	f7ff fbfb 	bl	8009904 <_ZN8touchgfx8DrawableD1Ev>
 800a10e:	687b      	ldr	r3, [r7, #4]
 800a110:	4618      	mov	r0, r3
 800a112:	3708      	adds	r7, #8
 800a114:	46bd      	mov	sp, r7
 800a116:	bd80      	pop	{r7, pc}
 800a118:	08028e3c 	.word	0x08028e3c

0800a11c <_ZN8touchgfx9ContainerD0Ev>:
 800a11c:	b580      	push	{r7, lr}
 800a11e:	b082      	sub	sp, #8
 800a120:	af00      	add	r7, sp, #0
 800a122:	6078      	str	r0, [r7, #4]
 800a124:	6878      	ldr	r0, [r7, #4]
 800a126:	f7ff ffe7 	bl	800a0f8 <_ZN8touchgfx9ContainerD1Ev>
 800a12a:	212c      	movs	r1, #44	@ 0x2c
 800a12c:	6878      	ldr	r0, [r7, #4]
 800a12e:	f01b fcb0 	bl	8025a92 <_ZdlPvj>
 800a132:	687b      	ldr	r3, [r7, #4]
 800a134:	4618      	mov	r0, r3
 800a136:	3708      	adds	r7, #8
 800a138:	46bd      	mov	sp, r7
 800a13a:	bd80      	pop	{r7, pc}

0800a13c <_ZN8touchgfx23AbstractButtonContainerC1Ev>:
 * @see ClickButtonTrigger, RepeatButtonTrigger, ToggleButtonTrigger, TouchButtonTrigger
 */
class AbstractButtonContainer : public Container
{
public:
    AbstractButtonContainer()
 800a13c:	b580      	push	{r7, lr}
 800a13e:	b082      	sub	sp, #8
 800a140:	af00      	add	r7, sp, #0
 800a142:	6078      	str	r0, [r7, #4]
        : pressed(false), alpha(255), action(0)
 800a144:	687b      	ldr	r3, [r7, #4]
 800a146:	4618      	mov	r0, r3
 800a148:	f7ff fd82 	bl	8009c50 <_ZN8touchgfx9ContainerC1Ev>
 800a14c:	4a0b      	ldr	r2, [pc, #44]	@ (800a17c <_ZN8touchgfx23AbstractButtonContainerC1Ev+0x40>)
 800a14e:	687b      	ldr	r3, [r7, #4]
 800a150:	601a      	str	r2, [r3, #0]
 800a152:	687b      	ldr	r3, [r7, #4]
 800a154:	2200      	movs	r2, #0
 800a156:	f883 202c 	strb.w	r2, [r3, #44]	@ 0x2c
 800a15a:	687b      	ldr	r3, [r7, #4]
 800a15c:	22ff      	movs	r2, #255	@ 0xff
 800a15e:	f883 202d 	strb.w	r2, [r3, #45]	@ 0x2d
 800a162:	687b      	ldr	r3, [r7, #4]
 800a164:	2200      	movs	r2, #0
 800a166:	631a      	str	r2, [r3, #48]	@ 0x30
    {
        setTouchable(true);
 800a168:	687b      	ldr	r3, [r7, #4]
 800a16a:	2101      	movs	r1, #1
 800a16c:	4618      	mov	r0, r3
 800a16e:	f7ff fcd5 	bl	8009b1c <_ZN8touchgfx8Drawable12setTouchableEb>
    }
 800a172:	687b      	ldr	r3, [r7, #4]
 800a174:	4618      	mov	r0, r3
 800a176:	3708      	adds	r7, #8
 800a178:	46bd      	mov	sp, r7
 800a17a:	bd80      	pop	{r7, pc}
 800a17c:	08028400 	.word	0x08028400

0800a180 <_ZN8touchgfx23AbstractButtonContainer10setPressedEb>:
     *
     * @param  isPressed True if is pressed, false if not.
     *
     * @see getPressed, handlePressedUpdated
     */
    void setPressed(bool isPressed)
 800a180:	b580      	push	{r7, lr}
 800a182:	b082      	sub	sp, #8
 800a184:	af00      	add	r7, sp, #0
 800a186:	6078      	str	r0, [r7, #4]
 800a188:	460b      	mov	r3, r1
 800a18a:	70fb      	strb	r3, [r7, #3]
    {
        pressed = isPressed;
 800a18c:	687b      	ldr	r3, [r7, #4]
 800a18e:	78fa      	ldrb	r2, [r7, #3]
 800a190:	f883 202c 	strb.w	r2, [r3, #44]	@ 0x2c
        handlePressedUpdated();
 800a194:	687b      	ldr	r3, [r7, #4]
 800a196:	681b      	ldr	r3, [r3, #0]
 800a198:	338c      	adds	r3, #140	@ 0x8c
 800a19a:	681b      	ldr	r3, [r3, #0]
 800a19c:	6878      	ldr	r0, [r7, #4]
 800a19e:	4798      	blx	r3
    }
 800a1a0:	bf00      	nop
 800a1a2:	3708      	adds	r7, #8
 800a1a4:	46bd      	mov	sp, r7
 800a1a6:	bd80      	pop	{r7, pc}

0800a1a8 <_ZNK8touchgfx23AbstractButtonContainer10getPressedEv>:
     *
     * @return True if it succeeds, false if it fails.
     *
     * @see setPressed
     */
    bool getPressed() const
 800a1a8:	b480      	push	{r7}
 800a1aa:	b083      	sub	sp, #12
 800a1ac:	af00      	add	r7, sp, #0
 800a1ae:	6078      	str	r0, [r7, #4]
    {
        return pressed;
 800a1b0:	687b      	ldr	r3, [r7, #4]
 800a1b2:	f893 302c 	ldrb.w	r3, [r3, #44]	@ 0x2c
    }
 800a1b6:	4618      	mov	r0, r3
 800a1b8:	370c      	adds	r7, #12
 800a1ba:	46bd      	mov	sp, r7
 800a1bc:	f85d 7b04 	ldr.w	r7, [sp], #4
 800a1c0:	4770      	bx	lr

0800a1c2 <_ZNK8touchgfx23AbstractButtonContainer8getAlphaEv>:
        alpha = newAlpha;
        handleAlphaUpdated();
    }

    /** @copydoc Image::getAlpha() */
    uint8_t getAlpha() const
 800a1c2:	b480      	push	{r7}
 800a1c4:	b083      	sub	sp, #12
 800a1c6:	af00      	add	r7, sp, #0
 800a1c8:	6078      	str	r0, [r7, #4]
    {
        return alpha;
 800a1ca:	687b      	ldr	r3, [r7, #4]
 800a1cc:	f893 302d 	ldrb.w	r3, [r3, #45]	@ 0x2d
    }
 800a1d0:	4618      	mov	r0, r3
 800a1d2:	370c      	adds	r7, #12
 800a1d4:	46bd      	mov	sp, r7
 800a1d6:	f85d 7b04 	ldr.w	r7, [sp], #4
 800a1da:	4770      	bx	lr

0800a1dc <_ZN8touchgfx23AbstractButtonContainer9setActionERNS_15GenericCallbackIRKS0_vvEE>:
     *
     * @param  callback The callback.
     *
     * @see executeAction
     */
    void setAction(GenericCallback<const AbstractButtonContainer&>& callback)
 800a1dc:	b480      	push	{r7}
 800a1de:	b083      	sub	sp, #12
 800a1e0:	af00      	add	r7, sp, #0
 800a1e2:	6078      	str	r0, [r7, #4]
 800a1e4:	6039      	str	r1, [r7, #0]
    {
        action = &callback;
 800a1e6:	687b      	ldr	r3, [r7, #4]
 800a1e8:	683a      	ldr	r2, [r7, #0]
 800a1ea:	631a      	str	r2, [r3, #48]	@ 0x30
    }
 800a1ec:	bf00      	nop
 800a1ee:	370c      	adds	r7, #12
 800a1f0:	46bd      	mov	sp, r7
 800a1f2:	f85d 7b04 	ldr.w	r7, [sp], #4
 800a1f6:	4770      	bx	lr

0800a1f8 <_ZN8touchgfx23AbstractButtonContainer13executeActionEv>:
    /**
     * Executes the previously set action.
     *
     * @see setAction
     */
    virtual void executeAction()
 800a1f8:	b580      	push	{r7, lr}
 800a1fa:	b082      	sub	sp, #8
 800a1fc:	af00      	add	r7, sp, #0
 800a1fe:	6078      	str	r0, [r7, #4]
    {
        if (action && action->isValid())
 800a200:	687b      	ldr	r3, [r7, #4]
 800a202:	6b1b      	ldr	r3, [r3, #48]	@ 0x30
 800a204:	2b00      	cmp	r3, #0
 800a206:	d00d      	beq.n	800a224 <_ZN8touchgfx23AbstractButtonContainer13executeActionEv+0x2c>
 800a208:	687b      	ldr	r3, [r7, #4]
 800a20a:	6b1a      	ldr	r2, [r3, #48]	@ 0x30
 800a20c:	687b      	ldr	r3, [r7, #4]
 800a20e:	6b1b      	ldr	r3, [r3, #48]	@ 0x30
 800a210:	681b      	ldr	r3, [r3, #0]
 800a212:	330c      	adds	r3, #12
 800a214:	681b      	ldr	r3, [r3, #0]
 800a216:	4610      	mov	r0, r2
 800a218:	4798      	blx	r3
 800a21a:	4603      	mov	r3, r0
 800a21c:	2b00      	cmp	r3, #0
 800a21e:	d001      	beq.n	800a224 <_ZN8touchgfx23AbstractButtonContainer13executeActionEv+0x2c>
 800a220:	2301      	movs	r3, #1
 800a222:	e000      	b.n	800a226 <_ZN8touchgfx23AbstractButtonContainer13executeActionEv+0x2e>
 800a224:	2300      	movs	r3, #0
 800a226:	2b00      	cmp	r3, #0
 800a228:	d009      	beq.n	800a23e <_ZN8touchgfx23AbstractButtonContainer13executeActionEv+0x46>
        {
            action->execute(*this);
 800a22a:	687b      	ldr	r3, [r7, #4]
 800a22c:	6b1a      	ldr	r2, [r3, #48]	@ 0x30
 800a22e:	687b      	ldr	r3, [r7, #4]
 800a230:	6b1b      	ldr	r3, [r3, #48]	@ 0x30
 800a232:	681b      	ldr	r3, [r3, #0]
 800a234:	3308      	adds	r3, #8
 800a236:	681b      	ldr	r3, [r3, #0]
 800a238:	6879      	ldr	r1, [r7, #4]
 800a23a:	4610      	mov	r0, r2
 800a23c:	4798      	blx	r3
        }
    }
 800a23e:	bf00      	nop
 800a240:	3708      	adds	r7, #8
 800a242:	46bd      	mov	sp, r7
 800a244:	bd80      	pop	{r7, pc}

0800a246 <_ZN8touchgfx23AbstractButtonContainer20handlePressedUpdatedEv>:
    uint8_t alpha; ///< The current alpha value. 255 denotes solid, 0 denotes completely invisible.

    GenericCallback<const AbstractButtonContainer&>* action; ///< The action to be executed

    /** Handles what should happen when the pressed state is updated. */
    virtual void handlePressedUpdated()
 800a246:	b480      	push	{r7}
 800a248:	b083      	sub	sp, #12
 800a24a:	af00      	add	r7, sp, #0
 800a24c:	6078      	str	r0, [r7, #4]
    {
    }
 800a24e:	bf00      	nop
 800a250:	370c      	adds	r7, #12
 800a252:	46bd      	mov	sp, r7
 800a254:	f85d 7b04 	ldr.w	r7, [sp], #4
 800a258:	4770      	bx	lr

0800a25a <_ZN8touchgfx23AbstractButtonContainer18handleAlphaUpdatedEv>:

    /** Handles what should happen when the alpha is updated. */
    virtual void handleAlphaUpdated()
 800a25a:	b480      	push	{r7}
 800a25c:	b083      	sub	sp, #12
 800a25e:	af00      	add	r7, sp, #0
 800a260:	6078      	str	r0, [r7, #4]
    {
    }
 800a262:	bf00      	nop
 800a264:	370c      	adds	r7, #12
 800a266:	46bd      	mov	sp, r7
 800a268:	f85d 7b04 	ldr.w	r7, [sp], #4
 800a26c:	4770      	bx	lr
	...

0800a270 <_ZN8touchgfx3BoxD1Ev>:
class Box : public Widget
 800a270:	b580      	push	{r7, lr}
 800a272:	b082      	sub	sp, #8
 800a274:	af00      	add	r7, sp, #0
 800a276:	6078      	str	r0, [r7, #4]
 800a278:	4a05      	ldr	r2, [pc, #20]	@ (800a290 <_ZN8touchgfx3BoxD1Ev+0x20>)
 800a27a:	687b      	ldr	r3, [r7, #4]
 800a27c:	601a      	str	r2, [r3, #0]
 800a27e:	687b      	ldr	r3, [r7, #4]
 800a280:	4618      	mov	r0, r3
 800a282:	f7ff fd81 	bl	8009d88 <_ZN8touchgfx6WidgetD1Ev>
 800a286:	687b      	ldr	r3, [r7, #4]
 800a288:	4618      	mov	r0, r3
 800a28a:	3708      	adds	r7, #8
 800a28c:	46bd      	mov	sp, r7
 800a28e:	bd80      	pop	{r7, pc}
 800a290:	08029198 	.word	0x08029198

0800a294 <_ZN8touchgfx3BoxD0Ev>:
 800a294:	b580      	push	{r7, lr}
 800a296:	b082      	sub	sp, #8
 800a298:	af00      	add	r7, sp, #0
 800a29a:	6078      	str	r0, [r7, #4]
 800a29c:	6878      	ldr	r0, [r7, #4]
 800a29e:	f7ff ffe7 	bl	800a270 <_ZN8touchgfx3BoxD1Ev>
 800a2a2:	212c      	movs	r1, #44	@ 0x2c
 800a2a4:	6878      	ldr	r0, [r7, #4]
 800a2a6:	f01b fbf4 	bl	8025a92 <_ZdlPvj>
 800a2aa:	687b      	ldr	r3, [r7, #4]
 800a2ac:	4618      	mov	r0, r3
 800a2ae:	3708      	adds	r7, #8
 800a2b0:	46bd      	mov	sp, r7
 800a2b2:	bd80      	pop	{r7, pc}

0800a2b4 <_ZN8touchgfx13BoxWithBorderC1Ev>:
 * BoxWithBorder will function just like a Box.
 */
class BoxWithBorder : public Box
{
public:
    BoxWithBorder()
 800a2b4:	b580      	push	{r7, lr}
 800a2b6:	b082      	sub	sp, #8
 800a2b8:	af00      	add	r7, sp, #0
 800a2ba:	6078      	str	r0, [r7, #4]
        : Box(), borderColor(0), borderSize(0)
 800a2bc:	687b      	ldr	r3, [r7, #4]
 800a2be:	4618      	mov	r0, r3
 800a2c0:	f7ff fd84 	bl	8009dcc <_ZN8touchgfx3BoxC1Ev>
 800a2c4:	4a08      	ldr	r2, [pc, #32]	@ (800a2e8 <_ZN8touchgfx13BoxWithBorderC1Ev+0x34>)
 800a2c6:	687b      	ldr	r3, [r7, #4]
 800a2c8:	601a      	str	r2, [r3, #0]
 800a2ca:	687b      	ldr	r3, [r7, #4]
 800a2cc:	332c      	adds	r3, #44	@ 0x2c
 800a2ce:	2100      	movs	r1, #0
 800a2d0:	4618      	mov	r0, r3
 800a2d2:	f7ff fa85 	bl	80097e0 <_ZN8touchgfx9colortypeC1Em>
 800a2d6:	687b      	ldr	r3, [r7, #4]
 800a2d8:	2200      	movs	r2, #0
 800a2da:	861a      	strh	r2, [r3, #48]	@ 0x30
    {
    }
 800a2dc:	687b      	ldr	r3, [r7, #4]
 800a2de:	4618      	mov	r0, r3
 800a2e0:	3708      	adds	r7, #8
 800a2e2:	46bd      	mov	sp, r7
 800a2e4:	bd80      	pop	{r7, pc}
 800a2e6:	bf00      	nop
 800a2e8:	08029304 	.word	0x08029304

0800a2ec <_ZN8touchgfx13BoxWithBorder14setBorderColorENS_9colortypeE>:
     *
     * @param  colorBorder The color of the border.
     *
     * @see setColor, getBorderColor, Color::getColorFromRGB
     */
    void setBorderColor(colortype colorBorder)
 800a2ec:	b480      	push	{r7}
 800a2ee:	b083      	sub	sp, #12
 800a2f0:	af00      	add	r7, sp, #0
 800a2f2:	6078      	str	r0, [r7, #4]
 800a2f4:	6039      	str	r1, [r7, #0]
    {
        borderColor = colorBorder;
 800a2f6:	687b      	ldr	r3, [r7, #4]
 800a2f8:	683a      	ldr	r2, [r7, #0]
 800a2fa:	62da      	str	r2, [r3, #44]	@ 0x2c
    }
 800a2fc:	bf00      	nop
 800a2fe:	370c      	adds	r7, #12
 800a300:	46bd      	mov	sp, r7
 800a302:	f85d 7b04 	ldr.w	r7, [sp], #4
 800a306:	4770      	bx	lr

0800a308 <_ZN8touchgfx13BoxWithBorder13setBorderSizeEt>:
     *
     * @param  size The width of the border.
     *
     * @see getBorderSize
     */
    void setBorderSize(uint16_t size)
 800a308:	b480      	push	{r7}
 800a30a:	b083      	sub	sp, #12
 800a30c:	af00      	add	r7, sp, #0
 800a30e:	6078      	str	r0, [r7, #4]
 800a310:	460b      	mov	r3, r1
 800a312:	807b      	strh	r3, [r7, #2]
    {
        borderSize = size;
 800a314:	687b      	ldr	r3, [r7, #4]
 800a316:	887a      	ldrh	r2, [r7, #2]
 800a318:	861a      	strh	r2, [r3, #48]	@ 0x30
    }
 800a31a:	bf00      	nop
 800a31c:	370c      	adds	r7, #12
 800a31e:	46bd      	mov	sp, r7
 800a320:	f85d 7b04 	ldr.w	r7, [sp], #4
 800a324:	4770      	bx	lr

0800a326 <_ZN8touchgfx18ClickButtonTrigger16handleClickEventERKNS_10ClickEventE>:
     *
     * @param  event The click event.
     *
     * @see setAction, setPressed, getPressed
     */
    virtual void handleClickEvent(const ClickEvent& event)
 800a326:	b580      	push	{r7, lr}
 800a328:	b084      	sub	sp, #16
 800a32a:	af00      	add	r7, sp, #0
 800a32c:	6078      	str	r0, [r7, #4]
 800a32e:	6039      	str	r1, [r7, #0]
    {
        bool wasPressed = getPressed();
 800a330:	687b      	ldr	r3, [r7, #4]
 800a332:	4618      	mov	r0, r3
 800a334:	f7ff ff38 	bl	800a1a8 <_ZNK8touchgfx23AbstractButtonContainer10getPressedEv>
 800a338:	4603      	mov	r3, r0
 800a33a:	73fb      	strb	r3, [r7, #15]
        bool newPressedValue = (event.getType() == ClickEvent::PRESSED);
 800a33c:	6838      	ldr	r0, [r7, #0]
 800a33e:	f7ff faa5 	bl	800988c <_ZNK8touchgfx10ClickEvent7getTypeEv>
 800a342:	4603      	mov	r3, r0
 800a344:	2b00      	cmp	r3, #0
 800a346:	bf0c      	ite	eq
 800a348:	2301      	moveq	r3, #1
 800a34a:	2300      	movne	r3, #0
 800a34c:	73bb      	strb	r3, [r7, #14]
        if ((newPressedValue && !wasPressed) || (!newPressedValue && wasPressed))
 800a34e:	7bbb      	ldrb	r3, [r7, #14]
 800a350:	2b00      	cmp	r3, #0
 800a352:	d005      	beq.n	800a360 <_ZN8touchgfx18ClickButtonTrigger16handleClickEventERKNS_10ClickEventE+0x3a>
 800a354:	7bfb      	ldrb	r3, [r7, #15]
 800a356:	f083 0301 	eor.w	r3, r3, #1
 800a35a:	b2db      	uxtb	r3, r3
 800a35c:	2b00      	cmp	r3, #0
 800a35e:	d108      	bne.n	800a372 <_ZN8touchgfx18ClickButtonTrigger16handleClickEventERKNS_10ClickEventE+0x4c>
 800a360:	7bbb      	ldrb	r3, [r7, #14]
 800a362:	f083 0301 	eor.w	r3, r3, #1
 800a366:	b2db      	uxtb	r3, r3
 800a368:	2b00      	cmp	r3, #0
 800a36a:	d00f      	beq.n	800a38c <_ZN8touchgfx18ClickButtonTrigger16handleClickEventERKNS_10ClickEventE+0x66>
 800a36c:	7bfb      	ldrb	r3, [r7, #15]
 800a36e:	2b00      	cmp	r3, #0
 800a370:	d00c      	beq.n	800a38c <_ZN8touchgfx18ClickButtonTrigger16handleClickEventERKNS_10ClickEventE+0x66>
        {
            setPressed(newPressedValue);
 800a372:	687b      	ldr	r3, [r7, #4]
 800a374:	7bba      	ldrb	r2, [r7, #14]
 800a376:	4611      	mov	r1, r2
 800a378:	4618      	mov	r0, r3
 800a37a:	f7ff ff01 	bl	800a180 <_ZN8touchgfx23AbstractButtonContainer10setPressedEb>
            invalidate();
 800a37e:	687a      	ldr	r2, [r7, #4]
 800a380:	687b      	ldr	r3, [r7, #4]
 800a382:	681b      	ldr	r3, [r3, #0]
 800a384:	3314      	adds	r3, #20
 800a386:	681b      	ldr	r3, [r3, #0]
 800a388:	4610      	mov	r0, r2
 800a38a:	4798      	blx	r3
        }
        if (wasPressed && (event.getType() == ClickEvent::RELEASED))
 800a38c:	7bfb      	ldrb	r3, [r7, #15]
 800a38e:	2b00      	cmp	r3, #0
 800a390:	d007      	beq.n	800a3a2 <_ZN8touchgfx18ClickButtonTrigger16handleClickEventERKNS_10ClickEventE+0x7c>
 800a392:	6838      	ldr	r0, [r7, #0]
 800a394:	f7ff fa7a 	bl	800988c <_ZNK8touchgfx10ClickEvent7getTypeEv>
 800a398:	4603      	mov	r3, r0
 800a39a:	2b01      	cmp	r3, #1
 800a39c:	d101      	bne.n	800a3a2 <_ZN8touchgfx18ClickButtonTrigger16handleClickEventERKNS_10ClickEventE+0x7c>
 800a39e:	2301      	movs	r3, #1
 800a3a0:	e000      	b.n	800a3a4 <_ZN8touchgfx18ClickButtonTrigger16handleClickEventERKNS_10ClickEventE+0x7e>
 800a3a2:	2300      	movs	r3, #0
 800a3a4:	2b00      	cmp	r3, #0
 800a3a6:	d006      	beq.n	800a3b6 <_ZN8touchgfx18ClickButtonTrigger16handleClickEventERKNS_10ClickEventE+0x90>
        {
            executeAction();
 800a3a8:	687a      	ldr	r2, [r7, #4]
 800a3aa:	687b      	ldr	r3, [r7, #4]
 800a3ac:	681b      	ldr	r3, [r3, #0]
 800a3ae:	3388      	adds	r3, #136	@ 0x88
 800a3b0:	681b      	ldr	r3, [r3, #0]
 800a3b2:	4610      	mov	r0, r2
 800a3b4:	4798      	blx	r3
        }
    }
 800a3b6:	bf00      	nop
 800a3b8:	3710      	adds	r7, #16
 800a3ba:	46bd      	mov	sp, r7
 800a3bc:	bd80      	pop	{r7, pc}
	...

0800a3c0 <_ZN8touchgfx23AbstractButtonContainerD1Ev>:
class AbstractButtonContainer : public Container
 800a3c0:	b580      	push	{r7, lr}
 800a3c2:	b082      	sub	sp, #8
 800a3c4:	af00      	add	r7, sp, #0
 800a3c6:	6078      	str	r0, [r7, #4]
 800a3c8:	4a05      	ldr	r2, [pc, #20]	@ (800a3e0 <_ZN8touchgfx23AbstractButtonContainerD1Ev+0x20>)
 800a3ca:	687b      	ldr	r3, [r7, #4]
 800a3cc:	601a      	str	r2, [r3, #0]
 800a3ce:	687b      	ldr	r3, [r7, #4]
 800a3d0:	4618      	mov	r0, r3
 800a3d2:	f7ff fe91 	bl	800a0f8 <_ZN8touchgfx9ContainerD1Ev>
 800a3d6:	687b      	ldr	r3, [r7, #4]
 800a3d8:	4618      	mov	r0, r3
 800a3da:	3708      	adds	r7, #8
 800a3dc:	46bd      	mov	sp, r7
 800a3de:	bd80      	pop	{r7, pc}
 800a3e0:	08028400 	.word	0x08028400

0800a3e4 <_ZN8touchgfx23AbstractButtonContainerD0Ev>:
 800a3e4:	b580      	push	{r7, lr}
 800a3e6:	b082      	sub	sp, #8
 800a3e8:	af00      	add	r7, sp, #0
 800a3ea:	6078      	str	r0, [r7, #4]
 800a3ec:	6878      	ldr	r0, [r7, #4]
 800a3ee:	f7ff ffe7 	bl	800a3c0 <_ZN8touchgfx23AbstractButtonContainerD1Ev>
 800a3f2:	2134      	movs	r1, #52	@ 0x34
 800a3f4:	6878      	ldr	r0, [r7, #4]
 800a3f6:	f01b fb4c 	bl	8025a92 <_ZdlPvj>
 800a3fa:	687b      	ldr	r3, [r7, #4]
 800a3fc:	4618      	mov	r0, r3
 800a3fe:	3708      	adds	r7, #8
 800a400:	46bd      	mov	sp, r7
 800a402:	bd80      	pop	{r7, pc}

0800a404 <_ZN8touchgfx8TextAreaD1Ev>:
class TextArea : public Widget
 800a404:	b580      	push	{r7, lr}
 800a406:	b082      	sub	sp, #8
 800a408:	af00      	add	r7, sp, #0
 800a40a:	6078      	str	r0, [r7, #4]
 800a40c:	4a08      	ldr	r2, [pc, #32]	@ (800a430 <_ZN8touchgfx8TextAreaD1Ev+0x2c>)
 800a40e:	687b      	ldr	r3, [r7, #4]
 800a410:	601a      	str	r2, [r3, #0]
 800a412:	687b      	ldr	r3, [r7, #4]
 800a414:	3328      	adds	r3, #40	@ 0x28
 800a416:	4618      	mov	r0, r3
 800a418:	f7fd fe36 	bl	8008088 <_ZN8touchgfx9TypedTextD1Ev>
 800a41c:	687b      	ldr	r3, [r7, #4]
 800a41e:	4618      	mov	r0, r3
 800a420:	f7ff fcb2 	bl	8009d88 <_ZN8touchgfx6WidgetD1Ev>
 800a424:	687b      	ldr	r3, [r7, #4]
 800a426:	4618      	mov	r0, r3
 800a428:	3708      	adds	r7, #8
 800a42a:	46bd      	mov	sp, r7
 800a42c:	bd80      	pop	{r7, pc}
 800a42e:	bf00      	nop
 800a430:	08029108 	.word	0x08029108

0800a434 <_ZN8touchgfx8TextAreaD0Ev>:
 800a434:	b580      	push	{r7, lr}
 800a436:	b082      	sub	sp, #8
 800a438:	af00      	add	r7, sp, #0
 800a43a:	6078      	str	r0, [r7, #4]
 800a43c:	6878      	ldr	r0, [r7, #4]
 800a43e:	f7ff ffe1 	bl	800a404 <_ZN8touchgfx8TextAreaD1Ev>
 800a442:	2148      	movs	r1, #72	@ 0x48
 800a444:	6878      	ldr	r0, [r7, #4]
 800a446:	f01b fb24 	bl	8025a92 <_ZdlPvj>
 800a44a:	687b      	ldr	r3, [r7, #4]
 800a44c:	4618      	mov	r0, r3
 800a44e:	3708      	adds	r7, #8
 800a450:	46bd      	mov	sp, r7
 800a452:	bd80      	pop	{r7, pc}

0800a454 <_ZN8touchgfx24TextAreaWithWildcardBaseC1Ev>:
 *
 */
class TextAreaWithWildcardBase : public TextArea
{
public:
    TextAreaWithWildcardBase()
 800a454:	b580      	push	{r7, lr}
 800a456:	b082      	sub	sp, #8
 800a458:	af00      	add	r7, sp, #0
 800a45a:	6078      	str	r0, [r7, #4]
        : TextArea()
 800a45c:	687b      	ldr	r3, [r7, #4]
 800a45e:	4618      	mov	r0, r3
 800a460:	f7ff fd0c 	bl	8009e7c <_ZN8touchgfx8TextAreaC1Ev>
 800a464:	4a03      	ldr	r2, [pc, #12]	@ (800a474 <_ZN8touchgfx24TextAreaWithWildcardBaseC1Ev+0x20>)
 800a466:	687b      	ldr	r3, [r7, #4]
 800a468:	601a      	str	r2, [r3, #0]
    {
    }
 800a46a:	687b      	ldr	r3, [r7, #4]
 800a46c:	4618      	mov	r0, r3
 800a46e:	3708      	adds	r7, #8
 800a470:	46bd      	mov	sp, r7
 800a472:	bd80      	pop	{r7, pc}
 800a474:	08029274 	.word	0x08029274

0800a478 <_ZNK8touchgfx24TextAreaWithWildcardBase17invalidateContentEv>:

    virtual void draw(const Rect& area) const;

    virtual void invalidateContent() const
 800a478:	b580      	push	{r7, lr}
 800a47a:	b082      	sub	sp, #8
 800a47c:	af00      	add	r7, sp, #0
 800a47e:	6078      	str	r0, [r7, #4]
    {
        Widget::invalidateContent();
 800a480:	687b      	ldr	r3, [r7, #4]
 800a482:	4618      	mov	r0, r3
 800a484:	f7ff fa5e 	bl	8009944 <_ZNK8touchgfx8Drawable17invalidateContentEv>
    }
 800a488:	bf00      	nop
 800a48a:	3708      	adds	r7, #8
 800a48c:	46bd      	mov	sp, r7
 800a48e:	bd80      	pop	{r7, pc}

0800a490 <_ZNK8touchgfx24TextAreaWithWildcardBase21calculateBoundingAreaEv>:

protected:
    virtual TextArea::BoundingArea calculateBoundingArea() const
 800a490:	b580      	push	{r7, lr}
 800a492:	b082      	sub	sp, #8
 800a494:	af00      	add	r7, sp, #0
 800a496:	6078      	str	r0, [r7, #4]
 800a498:	6039      	str	r1, [r7, #0]
    {
        return TextArea::BoundingArea();
 800a49a:	6878      	ldr	r0, [r7, #4]
 800a49c:	f7ff fe15 	bl	800a0ca <_ZN8touchgfx8TextArea12BoundingAreaC1Ev>
    }
 800a4a0:	6878      	ldr	r0, [r7, #4]
 800a4a2:	3708      	adds	r7, #8
 800a4a4:	46bd      	mov	sp, r7
 800a4a6:	bd80      	pop	{r7, pc}

0800a4a8 <_ZN8touchgfx24TextAreaWithWildcardBaseD1Ev>:
class TextAreaWithWildcardBase : public TextArea
 800a4a8:	b580      	push	{r7, lr}
 800a4aa:	b082      	sub	sp, #8
 800a4ac:	af00      	add	r7, sp, #0
 800a4ae:	6078      	str	r0, [r7, #4]
 800a4b0:	4a05      	ldr	r2, [pc, #20]	@ (800a4c8 <_ZN8touchgfx24TextAreaWithWildcardBaseD1Ev+0x20>)
 800a4b2:	687b      	ldr	r3, [r7, #4]
 800a4b4:	601a      	str	r2, [r3, #0]
 800a4b6:	687b      	ldr	r3, [r7, #4]
 800a4b8:	4618      	mov	r0, r3
 800a4ba:	f7ff ffa3 	bl	800a404 <_ZN8touchgfx8TextAreaD1Ev>
 800a4be:	687b      	ldr	r3, [r7, #4]
 800a4c0:	4618      	mov	r0, r3
 800a4c2:	3708      	adds	r7, #8
 800a4c4:	46bd      	mov	sp, r7
 800a4c6:	bd80      	pop	{r7, pc}
 800a4c8:	08029274 	.word	0x08029274

0800a4cc <_ZN8touchgfx24TextAreaWithWildcardBaseD0Ev>:
 800a4cc:	b580      	push	{r7, lr}
 800a4ce:	b082      	sub	sp, #8
 800a4d0:	af00      	add	r7, sp, #0
 800a4d2:	6078      	str	r0, [r7, #4]
 800a4d4:	6878      	ldr	r0, [r7, #4]
 800a4d6:	f7ff ffe7 	bl	800a4a8 <_ZN8touchgfx24TextAreaWithWildcardBaseD1Ev>
 800a4da:	2148      	movs	r1, #72	@ 0x48
 800a4dc:	6878      	ldr	r0, [r7, #4]
 800a4de:	f01b fad8 	bl	8025a92 <_ZdlPvj>
 800a4e2:	687b      	ldr	r3, [r7, #4]
 800a4e4:	4618      	mov	r0, r3
 800a4e6:	3708      	adds	r7, #8
 800a4e8:	46bd      	mov	sp, r7
 800a4ea:	bd80      	pop	{r7, pc}

0800a4ec <_ZN8touchgfx23TextAreaWithOneWildcardC1Ev>:
 *       replaced by a wildcard text.
 */
class TextAreaWithOneWildcard : public TextAreaWithWildcardBase
{
public:
    TextAreaWithOneWildcard()
 800a4ec:	b580      	push	{r7, lr}
 800a4ee:	b082      	sub	sp, #8
 800a4f0:	af00      	add	r7, sp, #0
 800a4f2:	6078      	str	r0, [r7, #4]
        : TextAreaWithWildcardBase(), wc1(0)
 800a4f4:	687b      	ldr	r3, [r7, #4]
 800a4f6:	4618      	mov	r0, r3
 800a4f8:	f7ff ffac 	bl	800a454 <_ZN8touchgfx24TextAreaWithWildcardBaseC1Ev>
 800a4fc:	4a05      	ldr	r2, [pc, #20]	@ (800a514 <_ZN8touchgfx23TextAreaWithOneWildcardC1Ev+0x28>)
 800a4fe:	687b      	ldr	r3, [r7, #4]
 800a500:	601a      	str	r2, [r3, #0]
 800a502:	687b      	ldr	r3, [r7, #4]
 800a504:	2200      	movs	r2, #0
 800a506:	649a      	str	r2, [r3, #72]	@ 0x48
    {
    }
 800a508:	687b      	ldr	r3, [r7, #4]
 800a50a:	4618      	mov	r0, r3
 800a50c:	3708      	adds	r7, #8
 800a50e:	46bd      	mov	sp, r7
 800a510:	bd80      	pop	{r7, pc}
 800a512:	bf00      	nop
 800a514:	080282bc 	.word	0x080282bc

0800a518 <_ZN8touchgfx23TextAreaWithOneWildcard12setWildcard1EPKt>:
     * @param  value A pointer to the UnicodeChar to set the wildcard to.
     *
     * @note The pointer passed is saved, and must be accessible whenever TextAreaWithOneWildcard
     *       may need it.
     */
    void setWildcard1(const Unicode::UnicodeChar* value)
 800a518:	b480      	push	{r7}
 800a51a:	b083      	sub	sp, #12
 800a51c:	af00      	add	r7, sp, #0
 800a51e:	6078      	str	r0, [r7, #4]
 800a520:	6039      	str	r1, [r7, #0]
    {
        wc1 = value;
 800a522:	687b      	ldr	r3, [r7, #4]
 800a524:	683a      	ldr	r2, [r7, #0]
 800a526:	649a      	str	r2, [r3, #72]	@ 0x48
    }
 800a528:	bf00      	nop
 800a52a:	370c      	adds	r7, #12
 800a52c:	46bd      	mov	sp, r7
 800a52e:	f85d 7b04 	ldr.w	r7, [sp], #4
 800a532:	4770      	bx	lr

0800a534 <_ZNK8touchgfx23TextAreaWithOneWildcard12getWildcard1Ev>:

    virtual const Unicode::UnicodeChar* getWildcard1() const
 800a534:	b480      	push	{r7}
 800a536:	b083      	sub	sp, #12
 800a538:	af00      	add	r7, sp, #0
 800a53a:	6078      	str	r0, [r7, #4]
    {
        return wc1;
 800a53c:	687b      	ldr	r3, [r7, #4]
 800a53e:	6c9b      	ldr	r3, [r3, #72]	@ 0x48
    }
 800a540:	4618      	mov	r0, r3
 800a542:	370c      	adds	r7, #12
 800a544:	46bd      	mov	sp, r7
 800a546:	f85d 7b04 	ldr.w	r7, [sp], #4
 800a54a:	4770      	bx	lr

0800a54c <_ZN8touchgfx23TextAreaWithOneWildcard11setWildcardEPKt>:
     * @param  value A pointer to the UnicodeChar to set the wildcard to.
     *
     * @note The pointer passed is saved, and must be accessible whenever TextAreaWithOneWildcard
     *       may need it.
     */
    void setWildcard(const Unicode::UnicodeChar* value)
 800a54c:	b580      	push	{r7, lr}
 800a54e:	b082      	sub	sp, #8
 800a550:	af00      	add	r7, sp, #0
 800a552:	6078      	str	r0, [r7, #4]
 800a554:	6039      	str	r1, [r7, #0]
    {
        setWildcard1(value);
 800a556:	6839      	ldr	r1, [r7, #0]
 800a558:	6878      	ldr	r0, [r7, #4]
 800a55a:	f7ff ffdd 	bl	800a518 <_ZN8touchgfx23TextAreaWithOneWildcard12setWildcard1EPKt>
    }
 800a55e:	bf00      	nop
 800a560:	3708      	adds	r7, #8
 800a562:	46bd      	mov	sp, r7
 800a564:	bd80      	pop	{r7, pc}

0800a566 <_ZN8touchgfx14AbstractButton9setActionERNS_15GenericCallbackIRKS0_vvEE>:
     * @param  callback The callback to be executed. The callback will be executed with a
     *                  reference to the AbstractButton.
     *
     * @see GenericCallback, handleClickEvent, ClickEvent
     */
    void setAction(GenericCallback<const AbstractButton&>& callback)
 800a566:	b480      	push	{r7}
 800a568:	b083      	sub	sp, #12
 800a56a:	af00      	add	r7, sp, #0
 800a56c:	6078      	str	r0, [r7, #4]
 800a56e:	6039      	str	r1, [r7, #0]
    {
        action = &callback;
 800a570:	687b      	ldr	r3, [r7, #4]
 800a572:	683a      	ldr	r2, [r7, #0]
 800a574:	629a      	str	r2, [r3, #40]	@ 0x28
    }
 800a576:	bf00      	nop
 800a578:	370c      	adds	r7, #12
 800a57a:	46bd      	mov	sp, r7
 800a57c:	f85d 7b04 	ldr.w	r7, [sp], #4
 800a580:	4770      	bx	lr
	...

0800a584 <_ZN8touchgfx14AbstractButtonD1Ev>:
class AbstractButton : public Widget
 800a584:	b580      	push	{r7, lr}
 800a586:	b082      	sub	sp, #8
 800a588:	af00      	add	r7, sp, #0
 800a58a:	6078      	str	r0, [r7, #4]
 800a58c:	4a05      	ldr	r2, [pc, #20]	@ (800a5a4 <_ZN8touchgfx14AbstractButtonD1Ev+0x20>)
 800a58e:	687b      	ldr	r3, [r7, #4]
 800a590:	601a      	str	r2, [r3, #0]
 800a592:	687b      	ldr	r3, [r7, #4]
 800a594:	4618      	mov	r0, r3
 800a596:	f7ff fbf7 	bl	8009d88 <_ZN8touchgfx6WidgetD1Ev>
 800a59a:	687b      	ldr	r3, [r7, #4]
 800a59c:	4618      	mov	r0, r3
 800a59e:	3708      	adds	r7, #8
 800a5a0:	46bd      	mov	sp, r7
 800a5a2:	bd80      	pop	{r7, pc}
 800a5a4:	08029024 	.word	0x08029024

0800a5a8 <_ZN8touchgfx14AbstractButtonD0Ev>:
 800a5a8:	b580      	push	{r7, lr}
 800a5aa:	b082      	sub	sp, #8
 800a5ac:	af00      	add	r7, sp, #0
 800a5ae:	6078      	str	r0, [r7, #4]
 800a5b0:	6878      	ldr	r0, [r7, #4]
 800a5b2:	f7ff ffe7 	bl	800a584 <_ZN8touchgfx14AbstractButtonD1Ev>
 800a5b6:	2130      	movs	r1, #48	@ 0x30
 800a5b8:	6878      	ldr	r0, [r7, #4]
 800a5ba:	f01b fa6a 	bl	8025a92 <_ZdlPvj>
 800a5be:	687b      	ldr	r3, [r7, #4]
 800a5c0:	4618      	mov	r0, r3
 800a5c2:	3708      	adds	r7, #8
 800a5c4:	46bd      	mov	sp, r7
 800a5c6:	bd80      	pop	{r7, pc}

0800a5c8 <_ZN8touchgfx14ButtonWithIcon8setIconXEs>:
     *           allowed.
     *
     * @note The user code must call invalidate() in order to update the button on the display.
     * @note The value set is overwritten on a subsequent call to setBitmaps.
     */
    void setIconX(int16_t x)
 800a5c8:	b480      	push	{r7}
 800a5ca:	b083      	sub	sp, #12
 800a5cc:	af00      	add	r7, sp, #0
 800a5ce:	6078      	str	r0, [r7, #4]
 800a5d0:	460b      	mov	r3, r1
 800a5d2:	807b      	strh	r3, [r7, #2]
    {
        iconX = x;
 800a5d4:	687b      	ldr	r3, [r7, #4]
 800a5d6:	887a      	ldrh	r2, [r7, #2]
 800a5d8:	871a      	strh	r2, [r3, #56]	@ 0x38
    }
 800a5da:	bf00      	nop
 800a5dc:	370c      	adds	r7, #12
 800a5de:	46bd      	mov	sp, r7
 800a5e0:	f85d 7b04 	ldr.w	r7, [sp], #4
 800a5e4:	4770      	bx	lr

0800a5e6 <_ZN8touchgfx14ButtonWithIcon8setIconYEs>:
     *           allowed.
     *
     * @note The user code must call invalidate() in order to update the button on the display.
     * @note The value set is overwritten on a subsequent call to setBitmaps.
     */
    void setIconY(int16_t y)
 800a5e6:	b480      	push	{r7}
 800a5e8:	b083      	sub	sp, #12
 800a5ea:	af00      	add	r7, sp, #0
 800a5ec:	6078      	str	r0, [r7, #4]
 800a5ee:	460b      	mov	r3, r1
 800a5f0:	807b      	strh	r3, [r7, #2]
    {
        iconY = y;
 800a5f2:	687b      	ldr	r3, [r7, #4]
 800a5f4:	887a      	ldrh	r2, [r7, #2]
 800a5f6:	875a      	strh	r2, [r3, #58]	@ 0x3a
    }
 800a5f8:	bf00      	nop
 800a5fa:	370c      	adds	r7, #12
 800a5fc:	46bd      	mov	sp, r7
 800a5fe:	f85d 7b04 	ldr.w	r7, [sp], #4
 800a602:	4770      	bx	lr

0800a604 <_ZN8touchgfx14ButtonWithIcon9setIconXYEss>:
     *           allowed.
     *
     * @note The user code must call invalidate() in order to update the button on the display.
     * @note The values set are overwritten on a subsequent call to setBitmaps.
     */
    void setIconXY(int16_t x, int16_t y)
 800a604:	b580      	push	{r7, lr}
 800a606:	b082      	sub	sp, #8
 800a608:	af00      	add	r7, sp, #0
 800a60a:	6078      	str	r0, [r7, #4]
 800a60c:	460b      	mov	r3, r1
 800a60e:	807b      	strh	r3, [r7, #2]
 800a610:	4613      	mov	r3, r2
 800a612:	803b      	strh	r3, [r7, #0]
    {
        setIconX(x);
 800a614:	f9b7 3002 	ldrsh.w	r3, [r7, #2]
 800a618:	4619      	mov	r1, r3
 800a61a:	6878      	ldr	r0, [r7, #4]
 800a61c:	f7ff ffd4 	bl	800a5c8 <_ZN8touchgfx14ButtonWithIcon8setIconXEs>
        setIconY(y);
 800a620:	f9b7 3000 	ldrsh.w	r3, [r7]
 800a624:	4619      	mov	r1, r3
 800a626:	6878      	ldr	r0, [r7, #4]
 800a628:	f7ff ffdd 	bl	800a5e6 <_ZN8touchgfx14ButtonWithIcon8setIconYEs>
    }
 800a62c:	bf00      	nop
 800a62e:	3708      	adds	r7, #8
 800a630:	46bd      	mov	sp, r7
 800a632:	bd80      	pop	{r7, pc}

0800a634 <_ZN23humidity_screenViewBase8increaseEv>:
    virtual void setupScreen();

    /*
     * Virtual Action Handlers
     */
    virtual void increase()
 800a634:	b480      	push	{r7}
 800a636:	b083      	sub	sp, #12
 800a638:	af00      	add	r7, sp, #0
 800a63a:	6078      	str	r0, [r7, #4]
    {
        // Override and implement this function in humidity_screen
    }
 800a63c:	bf00      	nop
 800a63e:	370c      	adds	r7, #12
 800a640:	46bd      	mov	sp, r7
 800a642:	f85d 7b04 	ldr.w	r7, [sp], #4
 800a646:	4770      	bx	lr

0800a648 <_ZN23humidity_screenViewBase8decreaseEv>:
    virtual void decrease()
 800a648:	b480      	push	{r7}
 800a64a:	b083      	sub	sp, #12
 800a64c:	af00      	add	r7, sp, #0
 800a64e:	6078      	str	r0, [r7, #4]
    {
        // Override and implement this function in humidity_screen
    }
 800a650:	bf00      	nop
 800a652:	370c      	adds	r7, #12
 800a654:	46bd      	mov	sp, r7
 800a656:	f85d 7b04 	ldr.w	r7, [sp], #4
 800a65a:	4770      	bx	lr

0800a65c <_ZN23humidity_screenViewBase11applicationEv>:

protected:
    FrontendApplication& application() {
 800a65c:	b580      	push	{r7, lr}
 800a65e:	b082      	sub	sp, #8
 800a660:	af00      	add	r7, sp, #0
 800a662:	6078      	str	r0, [r7, #4]
        return *static_cast<FrontendApplication*>(touchgfx::Application::getInstance());
 800a664:	f009 fcbc 	bl	8013fe0 <_ZN8touchgfx11Application11getInstanceEv>
 800a668:	4603      	mov	r3, r0
    }
 800a66a:	4618      	mov	r0, r3
 800a66c:	3708      	adds	r7, #8
 800a66e:	46bd      	mov	sp, r7
 800a670:	bd80      	pop	{r7, pc}
	...

0800a674 <_ZN8touchgfx4ViewI24humidity_screenPresenterED1Ev>:
class View : public Screen
 800a674:	b580      	push	{r7, lr}
 800a676:	b082      	sub	sp, #8
 800a678:	af00      	add	r7, sp, #0
 800a67a:	6078      	str	r0, [r7, #4]
 800a67c:	4a05      	ldr	r2, [pc, #20]	@ (800a694 <_ZN8touchgfx4ViewI24humidity_screenPresenterED1Ev+0x20>)
 800a67e:	687b      	ldr	r3, [r7, #4]
 800a680:	601a      	str	r2, [r3, #0]
 800a682:	687b      	ldr	r3, [r7, #4]
 800a684:	4618      	mov	r0, r3
 800a686:	f7ff fb05 	bl	8009c94 <_ZN8touchgfx6ScreenD1Ev>
 800a68a:	687b      	ldr	r3, [r7, #4]
 800a68c:	4618      	mov	r0, r3
 800a68e:	3708      	adds	r7, #8
 800a690:	46bd      	mov	sp, r7
 800a692:	bd80      	pop	{r7, pc}
 800a694:	08028270 	.word	0x08028270

0800a698 <_ZN8touchgfx4ViewI24humidity_screenPresenterED0Ev>:
 800a698:	b580      	push	{r7, lr}
 800a69a:	b082      	sub	sp, #8
 800a69c:	af00      	add	r7, sp, #0
 800a69e:	6078      	str	r0, [r7, #4]
 800a6a0:	6878      	ldr	r0, [r7, #4]
 800a6a2:	f7ff ffe7 	bl	800a674 <_ZN8touchgfx4ViewI24humidity_screenPresenterED1Ev>
 800a6a6:	2140      	movs	r1, #64	@ 0x40
 800a6a8:	6878      	ldr	r0, [r7, #4]
 800a6aa:	f01b f9f2 	bl	8025a92 <_ZdlPvj>
 800a6ae:	687b      	ldr	r3, [r7, #4]
 800a6b0:	4618      	mov	r0, r3
 800a6b2:	3708      	adds	r7, #8
 800a6b4:	46bd      	mov	sp, r7
 800a6b6:	bd80      	pop	{r7, pc}

0800a6b8 <_ZN23humidity_screenViewBaseC1Ev>:
#include <gui_generated/humidity_screen_screen/humidity_screenViewBase.hpp>
#include <touchgfx/Color.hpp>
#include <texts/TextKeysAndLanguages.hpp>
#include <images/BitmapDatabase.hpp>

humidity_screenViewBase::humidity_screenViewBase() :
 800a6b8:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 800a6bc:	b0ae      	sub	sp, #184	@ 0xb8
 800a6be:	af02      	add	r7, sp, #8
 800a6c0:	6178      	str	r0, [r7, #20]
    flexButtonCallback(this, &humidity_screenViewBase::flexButtonCallbackHandler),
    buttonCallback(this, &humidity_screenViewBase::buttonCallbackHandler)
 800a6c2:	697b      	ldr	r3, [r7, #20]
 800a6c4:	4618      	mov	r0, r3
 800a6c6:	f000 fb37 	bl	800ad38 <_ZN8touchgfx4ViewI24humidity_screenPresenterEC1Ev>
 800a6ca:	4add      	ldr	r2, [pc, #884]	@ (800aa40 <_ZN23humidity_screenViewBaseC1Ev+0x388>)
 800a6cc:	697b      	ldr	r3, [r7, #20]
 800a6ce:	601a      	str	r2, [r3, #0]
 800a6d0:	697b      	ldr	r3, [r7, #20]
 800a6d2:	3340      	adds	r3, #64	@ 0x40
 800a6d4:	4618      	mov	r0, r3
 800a6d6:	f7ff fb79 	bl	8009dcc <_ZN8touchgfx3BoxC1Ev>
 800a6da:	697b      	ldr	r3, [r7, #20]
 800a6dc:	336c      	adds	r3, #108	@ 0x6c
 800a6de:	4618      	mov	r0, r3
 800a6e0:	f7ff fbcc 	bl	8009e7c <_ZN8touchgfx8TextAreaC1Ev>
 800a6e4:	697b      	ldr	r3, [r7, #20]
 800a6e6:	33b4      	adds	r3, #180	@ 0xb4
 800a6e8:	4618      	mov	r0, r3
 800a6ea:	f000 fb91 	bl	800ae10 <_ZN8touchgfx24BoxWithBorderButtonStyleINS_18ClickButtonTriggerEEC1Ev>
 800a6ee:	697b      	ldr	r3, [r7, #20]
 800a6f0:	f503 7396 	add.w	r3, r3, #300	@ 0x12c
 800a6f4:	4618      	mov	r0, r3
 800a6f6:	f7ff fef9 	bl	800a4ec <_ZN8touchgfx23TextAreaWithOneWildcardC1Ev>
 800a6fa:	697b      	ldr	r3, [r7, #20]
 800a6fc:	f503 73bc 	add.w	r3, r3, #376	@ 0x178
 800a700:	4618      	mov	r0, r3
 800a702:	f007 ff6b 	bl	80125dc <_ZN8touchgfx14ButtonWithIconC1Ev>
 800a706:	697b      	ldr	r3, [r7, #20]
 800a708:	f503 73da 	add.w	r3, r3, #436	@ 0x1b4
 800a70c:	4618      	mov	r0, r3
 800a70e:	f007 ff65 	bl	80125dc <_ZN8touchgfx14ButtonWithIconC1Ev>
    flexButtonCallback(this, &humidity_screenViewBase::flexButtonCallbackHandler),
 800a712:	697b      	ldr	r3, [r7, #20]
 800a714:	f503 7001 	add.w	r0, r3, #516	@ 0x204
 800a718:	4bca      	ldr	r3, [pc, #808]	@ (800aa44 <_ZN23humidity_screenViewBaseC1Ev+0x38c>)
 800a71a:	627b      	str	r3, [r7, #36]	@ 0x24
 800a71c:	2300      	movs	r3, #0
 800a71e:	62bb      	str	r3, [r7, #40]	@ 0x28
 800a720:	f107 0324 	add.w	r3, r7, #36	@ 0x24
 800a724:	cb0c      	ldmia	r3, {r2, r3}
 800a726:	6979      	ldr	r1, [r7, #20]
 800a728:	f000 fbc2 	bl	800aeb0 <_ZN8touchgfx8CallbackI23humidity_screenViewBaseRKNS_23AbstractButtonContainerEvvEC1EPS1_MS1_FvS4_E>
    buttonCallback(this, &humidity_screenViewBase::buttonCallbackHandler)
 800a72c:	697b      	ldr	r3, [r7, #20]
 800a72e:	f503 7005 	add.w	r0, r3, #532	@ 0x214
 800a732:	4bc5      	ldr	r3, [pc, #788]	@ (800aa48 <_ZN23humidity_screenViewBaseC1Ev+0x390>)
 800a734:	62fb      	str	r3, [r7, #44]	@ 0x2c
 800a736:	2300      	movs	r3, #0
 800a738:	633b      	str	r3, [r7, #48]	@ 0x30
 800a73a:	f107 032c 	add.w	r3, r7, #44	@ 0x2c
 800a73e:	cb0c      	ldmia	r3, {r2, r3}
 800a740:	6979      	ldr	r1, [r7, #20]
 800a742:	f000 fbe5 	bl	800af10 <_ZN8touchgfx8CallbackI23humidity_screenViewBaseRKNS_14AbstractButtonEvvEC1EPS1_MS1_FvS4_E>
{
    __background.setPosition(0, 0, 480, 320);
 800a746:	697b      	ldr	r3, [r7, #20]
 800a748:	f103 0040 	add.w	r0, r3, #64	@ 0x40
 800a74c:	f44f 73a0 	mov.w	r3, #320	@ 0x140
 800a750:	9300      	str	r3, [sp, #0]
 800a752:	f44f 73f0 	mov.w	r3, #480	@ 0x1e0
 800a756:	2200      	movs	r2, #0
 800a758:	2100      	movs	r1, #0
 800a75a:	f7ff f911 	bl	8009980 <_ZN8touchgfx8Drawable11setPositionEssss>
    __background.setColor(touchgfx::Color::getColorFromRGB(0, 0, 0));
 800a75e:	697b      	ldr	r3, [r7, #20]
 800a760:	f103 0440 	add.w	r4, r3, #64	@ 0x40
 800a764:	2300      	movs	r3, #0
 800a766:	f887 3084 	strb.w	r3, [r7, #132]	@ 0x84
 800a76a:	2300      	movs	r3, #0
 800a76c:	f887 3083 	strb.w	r3, [r7, #131]	@ 0x83
 800a770:	2300      	movs	r3, #0
 800a772:	f887 3082 	strb.w	r3, [r7, #130]	@ 0x82
     *
     * @return The color representation depending on LCD color format.
     */
    FORCE_INLINE_FUNCTION static colortype getColorFromRGB(uint8_t red, uint8_t green, uint8_t blue)
    {
        return 0xFF000000 | (red << 16) | (green << 8) | (blue);
 800a776:	f897 3084 	ldrb.w	r3, [r7, #132]	@ 0x84
 800a77a:	041a      	lsls	r2, r3, #16
 800a77c:	f897 3083 	ldrb.w	r3, [r7, #131]	@ 0x83
 800a780:	021b      	lsls	r3, r3, #8
 800a782:	431a      	orrs	r2, r3
 800a784:	f897 3082 	ldrb.w	r3, [r7, #130]	@ 0x82
 800a788:	4313      	orrs	r3, r2
 800a78a:	f043 427f 	orr.w	r2, r3, #4278190080	@ 0xff000000
 800a78e:	f107 037c 	add.w	r3, r7, #124	@ 0x7c
 800a792:	4611      	mov	r1, r2
 800a794:	4618      	mov	r0, r3
 800a796:	f7ff f823 	bl	80097e0 <_ZN8touchgfx9colortypeC1Em>
 800a79a:	6ffb      	ldr	r3, [r7, #124]	@ 0x7c
 800a79c:	4619      	mov	r1, r3
 800a79e:	4620      	mov	r0, r4
 800a7a0:	f7ff fb38 	bl	8009e14 <_ZN8touchgfx3Box8setColorENS_9colortypeE>
    add(__background);
 800a7a4:	697a      	ldr	r2, [r7, #20]
 800a7a6:	697b      	ldr	r3, [r7, #20]
 800a7a8:	3340      	adds	r3, #64	@ 0x40
 800a7aa:	4619      	mov	r1, r3
 800a7ac:	4610      	mov	r0, r2
 800a7ae:	f7ff fac9 	bl	8009d44 <_ZN8touchgfx6Screen3addERNS_8DrawableE>

    text.setPosition(87, 18, 306, 48);
 800a7b2:	697b      	ldr	r3, [r7, #20]
 800a7b4:	f103 006c 	add.w	r0, r3, #108	@ 0x6c
 800a7b8:	2330      	movs	r3, #48	@ 0x30
 800a7ba:	9300      	str	r3, [sp, #0]
 800a7bc:	f44f 7399 	mov.w	r3, #306	@ 0x132
 800a7c0:	2212      	movs	r2, #18
 800a7c2:	2157      	movs	r1, #87	@ 0x57
 800a7c4:	f7ff f8dc 	bl	8009980 <_ZN8touchgfx8Drawable11setPositionEssss>
    text.setColor(touchgfx::Color::getColorFromRGB(255, 255, 255));
 800a7c8:	697b      	ldr	r3, [r7, #20]
 800a7ca:	f103 046c 	add.w	r4, r3, #108	@ 0x6c
 800a7ce:	23ff      	movs	r3, #255	@ 0xff
 800a7d0:	f887 3087 	strb.w	r3, [r7, #135]	@ 0x87
 800a7d4:	23ff      	movs	r3, #255	@ 0xff
 800a7d6:	f887 3086 	strb.w	r3, [r7, #134]	@ 0x86
 800a7da:	23ff      	movs	r3, #255	@ 0xff
 800a7dc:	f887 3085 	strb.w	r3, [r7, #133]	@ 0x85
 800a7e0:	f897 3087 	ldrb.w	r3, [r7, #135]	@ 0x87
 800a7e4:	041a      	lsls	r2, r3, #16
 800a7e6:	f897 3086 	ldrb.w	r3, [r7, #134]	@ 0x86
 800a7ea:	021b      	lsls	r3, r3, #8
 800a7ec:	431a      	orrs	r2, r3
 800a7ee:	f897 3085 	ldrb.w	r3, [r7, #133]	@ 0x85
 800a7f2:	4313      	orrs	r3, r2
 800a7f4:	f043 427f 	orr.w	r2, r3, #4278190080	@ 0xff000000
 800a7f8:	f107 0378 	add.w	r3, r7, #120	@ 0x78
 800a7fc:	4611      	mov	r1, r2
 800a7fe:	4618      	mov	r0, r3
 800a800:	f7fe ffee 	bl	80097e0 <_ZN8touchgfx9colortypeC1Em>
 800a804:	6fbb      	ldr	r3, [r7, #120]	@ 0x78
 800a806:	f8c7 4088 	str.w	r4, [r7, #136]	@ 0x88
 800a80a:	623b      	str	r3, [r7, #32]
        color = newColor;
 800a80c:	f8d7 3088 	ldr.w	r3, [r7, #136]	@ 0x88
 800a810:	6a3a      	ldr	r2, [r7, #32]
 800a812:	631a      	str	r2, [r3, #48]	@ 0x30
    }
 800a814:	bf00      	nop
    text.setLinespacing(0);
 800a816:	697b      	ldr	r3, [r7, #20]
 800a818:	336c      	adds	r3, #108	@ 0x6c
 800a81a:	f8c7 3090 	str.w	r3, [r7, #144]	@ 0x90
 800a81e:	2300      	movs	r3, #0
 800a820:	f8a7 308e 	strh.w	r3, [r7, #142]	@ 0x8e
        linespace = space;
 800a824:	f8d7 3090 	ldr.w	r3, [r7, #144]	@ 0x90
 800a828:	f8b7 208e 	ldrh.w	r2, [r7, #142]	@ 0x8e
 800a82c:	869a      	strh	r2, [r3, #52]	@ 0x34
        boundingArea = calculateBoundingArea();
 800a82e:	f8d7 3090 	ldr.w	r3, [r7, #144]	@ 0x90
 800a832:	681b      	ldr	r3, [r3, #0]
 800a834:	3384      	adds	r3, #132	@ 0x84
 800a836:	681b      	ldr	r3, [r3, #0]
 800a838:	f8d7 4090 	ldr.w	r4, [r7, #144]	@ 0x90
 800a83c:	463a      	mov	r2, r7
 800a83e:	f8d7 1090 	ldr.w	r1, [r7, #144]	@ 0x90
 800a842:	4610      	mov	r0, r2
 800a844:	4798      	blx	r3
 800a846:	f104 033c 	add.w	r3, r4, #60	@ 0x3c
 800a84a:	463a      	mov	r2, r7
 800a84c:	ca07      	ldmia	r2, {r0, r1, r2}
 800a84e:	e883 0007 	stmia.w	r3, {r0, r1, r2}
    }
 800a852:	bf00      	nop
    text.setTypedText(touchgfx::TypedText(T___SINGLEUSE_GXOO));
 800a854:	697b      	ldr	r3, [r7, #20]
 800a856:	f103 046c 	add.w	r4, r3, #108	@ 0x6c
 800a85a:	f107 0334 	add.w	r3, r7, #52	@ 0x34
 800a85e:	2102      	movs	r1, #2
 800a860:	4618      	mov	r0, r3
 800a862:	f7ff faf5 	bl	8009e50 <_ZN8touchgfx9TypedTextC1Et>
 800a866:	f107 0334 	add.w	r3, r7, #52	@ 0x34
 800a86a:	4619      	mov	r1, r3
 800a86c:	4620      	mov	r0, r4
 800a86e:	f007 fc29 	bl	80120c4 <_ZN8touchgfx8TextArea12setTypedTextERKNS_9TypedTextE>
 800a872:	f107 0334 	add.w	r3, r7, #52	@ 0x34
 800a876:	4618      	mov	r0, r3
 800a878:	f7fd fc06 	bl	8008088 <_ZN8touchgfx9TypedTextD1Ev>
    add(text);
 800a87c:	697a      	ldr	r2, [r7, #20]
 800a87e:	697b      	ldr	r3, [r7, #20]
 800a880:	336c      	adds	r3, #108	@ 0x6c
 800a882:	4619      	mov	r1, r3
 800a884:	4610      	mov	r0, r2
 800a886:	f7ff fa5d 	bl	8009d44 <_ZN8touchgfx6Screen3addERNS_8DrawableE>

    flexButton1.setBoxWithBorderPosition(0, 0, 50, 50);
 800a88a:	697b      	ldr	r3, [r7, #20]
 800a88c:	f103 00b4 	add.w	r0, r3, #180	@ 0xb4
 800a890:	2332      	movs	r3, #50	@ 0x32
 800a892:	9300      	str	r3, [sp, #0]
 800a894:	2332      	movs	r3, #50	@ 0x32
 800a896:	2200      	movs	r2, #0
 800a898:	2100      	movs	r1, #0
 800a89a:	f000 fb59 	bl	800af50 <_ZN8touchgfx24BoxWithBorderButtonStyleINS_18ClickButtonTriggerEE24setBoxWithBorderPositionEssss>
    flexButton1.setBorderSize(5);
 800a89e:	697b      	ldr	r3, [r7, #20]
 800a8a0:	33b4      	adds	r3, #180	@ 0xb4
 800a8a2:	2105      	movs	r1, #5
 800a8a4:	4618      	mov	r0, r3
 800a8a6:	f000 fb73 	bl	800af90 <_ZN8touchgfx24BoxWithBorderButtonStyleINS_18ClickButtonTriggerEE13setBorderSizeEh>
    flexButton1.setBoxWithBorderColors(touchgfx::Color::getColorFromRGB(0, 102, 153), touchgfx::Color::getColorFromRGB(0, 153, 204), touchgfx::Color::getColorFromRGB(0, 51, 102), touchgfx::Color::getColorFromRGB(51, 102, 153));
 800a8aa:	697b      	ldr	r3, [r7, #20]
 800a8ac:	f103 04b4 	add.w	r4, r3, #180	@ 0xb4
 800a8b0:	2300      	movs	r3, #0
 800a8b2:	f887 3097 	strb.w	r3, [r7, #151]	@ 0x97
 800a8b6:	2366      	movs	r3, #102	@ 0x66
 800a8b8:	f887 3096 	strb.w	r3, [r7, #150]	@ 0x96
 800a8bc:	2399      	movs	r3, #153	@ 0x99
 800a8be:	f887 3095 	strb.w	r3, [r7, #149]	@ 0x95
 800a8c2:	f897 3097 	ldrb.w	r3, [r7, #151]	@ 0x97
 800a8c6:	041a      	lsls	r2, r3, #16
 800a8c8:	f897 3096 	ldrb.w	r3, [r7, #150]	@ 0x96
 800a8cc:	021b      	lsls	r3, r3, #8
 800a8ce:	431a      	orrs	r2, r3
 800a8d0:	f897 3095 	ldrb.w	r3, [r7, #149]	@ 0x95
 800a8d4:	4313      	orrs	r3, r2
 800a8d6:	f043 427f 	orr.w	r2, r3, #4278190080	@ 0xff000000
 800a8da:	f107 0374 	add.w	r3, r7, #116	@ 0x74
 800a8de:	4611      	mov	r1, r2
 800a8e0:	4618      	mov	r0, r3
 800a8e2:	f7fe ff7d 	bl	80097e0 <_ZN8touchgfx9colortypeC1Em>
 800a8e6:	6f7b      	ldr	r3, [r7, #116]	@ 0x74
 800a8e8:	461d      	mov	r5, r3
 800a8ea:	2300      	movs	r3, #0
 800a8ec:	f887 309a 	strb.w	r3, [r7, #154]	@ 0x9a
 800a8f0:	2399      	movs	r3, #153	@ 0x99
 800a8f2:	f887 3099 	strb.w	r3, [r7, #153]	@ 0x99
 800a8f6:	23cc      	movs	r3, #204	@ 0xcc
 800a8f8:	f887 3098 	strb.w	r3, [r7, #152]	@ 0x98
 800a8fc:	f897 309a 	ldrb.w	r3, [r7, #154]	@ 0x9a
 800a900:	041a      	lsls	r2, r3, #16
 800a902:	f897 3099 	ldrb.w	r3, [r7, #153]	@ 0x99
 800a906:	021b      	lsls	r3, r3, #8
 800a908:	431a      	orrs	r2, r3
 800a90a:	f897 3098 	ldrb.w	r3, [r7, #152]	@ 0x98
 800a90e:	4313      	orrs	r3, r2
 800a910:	f043 427f 	orr.w	r2, r3, #4278190080	@ 0xff000000
 800a914:	f107 0370 	add.w	r3, r7, #112	@ 0x70
 800a918:	4611      	mov	r1, r2
 800a91a:	4618      	mov	r0, r3
 800a91c:	f7fe ff60 	bl	80097e0 <_ZN8touchgfx9colortypeC1Em>
 800a920:	6f3b      	ldr	r3, [r7, #112]	@ 0x70
 800a922:	461e      	mov	r6, r3
 800a924:	2300      	movs	r3, #0
 800a926:	f887 309d 	strb.w	r3, [r7, #157]	@ 0x9d
 800a92a:	2333      	movs	r3, #51	@ 0x33
 800a92c:	f887 309c 	strb.w	r3, [r7, #156]	@ 0x9c
 800a930:	2366      	movs	r3, #102	@ 0x66
 800a932:	f887 309b 	strb.w	r3, [r7, #155]	@ 0x9b
 800a936:	f897 309d 	ldrb.w	r3, [r7, #157]	@ 0x9d
 800a93a:	041a      	lsls	r2, r3, #16
 800a93c:	f897 309c 	ldrb.w	r3, [r7, #156]	@ 0x9c
 800a940:	021b      	lsls	r3, r3, #8
 800a942:	431a      	orrs	r2, r3
 800a944:	f897 309b 	ldrb.w	r3, [r7, #155]	@ 0x9b
 800a948:	4313      	orrs	r3, r2
 800a94a:	f043 427f 	orr.w	r2, r3, #4278190080	@ 0xff000000
 800a94e:	f107 036c 	add.w	r3, r7, #108	@ 0x6c
 800a952:	4611      	mov	r1, r2
 800a954:	4618      	mov	r0, r3
 800a956:	f7fe ff43 	bl	80097e0 <_ZN8touchgfx9colortypeC1Em>
 800a95a:	6efb      	ldr	r3, [r7, #108]	@ 0x6c
 800a95c:	4698      	mov	r8, r3
 800a95e:	2333      	movs	r3, #51	@ 0x33
 800a960:	f887 30a0 	strb.w	r3, [r7, #160]	@ 0xa0
 800a964:	2366      	movs	r3, #102	@ 0x66
 800a966:	f887 309f 	strb.w	r3, [r7, #159]	@ 0x9f
 800a96a:	2399      	movs	r3, #153	@ 0x99
 800a96c:	f887 309e 	strb.w	r3, [r7, #158]	@ 0x9e
 800a970:	f897 30a0 	ldrb.w	r3, [r7, #160]	@ 0xa0
 800a974:	041a      	lsls	r2, r3, #16
 800a976:	f897 309f 	ldrb.w	r3, [r7, #159]	@ 0x9f
 800a97a:	021b      	lsls	r3, r3, #8
 800a97c:	431a      	orrs	r2, r3
 800a97e:	f897 309e 	ldrb.w	r3, [r7, #158]	@ 0x9e
 800a982:	4313      	orrs	r3, r2
 800a984:	f043 427f 	orr.w	r2, r3, #4278190080	@ 0xff000000
 800a988:	f107 0368 	add.w	r3, r7, #104	@ 0x68
 800a98c:	4611      	mov	r1, r2
 800a98e:	4618      	mov	r0, r3
 800a990:	f7fe ff26 	bl	80097e0 <_ZN8touchgfx9colortypeC1Em>
 800a994:	6ebb      	ldr	r3, [r7, #104]	@ 0x68
 800a996:	9300      	str	r3, [sp, #0]
 800a998:	4643      	mov	r3, r8
 800a99a:	4632      	mov	r2, r6
 800a99c:	4629      	mov	r1, r5
 800a99e:	4620      	mov	r0, r4
 800a9a0:	f000 fb08 	bl	800afb4 <_ZN8touchgfx24BoxWithBorderButtonStyleINS_18ClickButtonTriggerEE22setBoxWithBorderColorsENS_9colortypeES3_S3_S3_>
    flexButton1.setAction(flexButtonCallback);
 800a9a4:	697b      	ldr	r3, [r7, #20]
 800a9a6:	f103 02b4 	add.w	r2, r3, #180	@ 0xb4
 800a9aa:	697b      	ldr	r3, [r7, #20]
 800a9ac:	f503 7301 	add.w	r3, r3, #516	@ 0x204
 800a9b0:	4619      	mov	r1, r3
 800a9b2:	4610      	mov	r0, r2
 800a9b4:	f7ff fc12 	bl	800a1dc <_ZN8touchgfx23AbstractButtonContainer9setActionERNS_15GenericCallbackIRKS0_vvEE>
    flexButton1.setPosition(393, 245, 50, 50);
 800a9b8:	697b      	ldr	r3, [r7, #20]
 800a9ba:	f103 00b4 	add.w	r0, r3, #180	@ 0xb4
 800a9be:	2332      	movs	r3, #50	@ 0x32
 800a9c0:	9300      	str	r3, [sp, #0]
 800a9c2:	2332      	movs	r3, #50	@ 0x32
 800a9c4:	22f5      	movs	r2, #245	@ 0xf5
 800a9c6:	f240 1189 	movw	r1, #393	@ 0x189
 800a9ca:	f7fe ffd9 	bl	8009980 <_ZN8touchgfx8Drawable11setPositionEssss>
    add(flexButton1);
 800a9ce:	697a      	ldr	r2, [r7, #20]
 800a9d0:	697b      	ldr	r3, [r7, #20]
 800a9d2:	33b4      	adds	r3, #180	@ 0xb4
 800a9d4:	4619      	mov	r1, r3
 800a9d6:	4610      	mov	r0, r2
 800a9d8:	f7ff f9b4 	bl	8009d44 <_ZN8touchgfx6Screen3addERNS_8DrawableE>

    humVal.setPosition(131, 140, 200, 40);
 800a9dc:	697b      	ldr	r3, [r7, #20]
 800a9de:	f503 7096 	add.w	r0, r3, #300	@ 0x12c
 800a9e2:	2328      	movs	r3, #40	@ 0x28
 800a9e4:	9300      	str	r3, [sp, #0]
 800a9e6:	23c8      	movs	r3, #200	@ 0xc8
 800a9e8:	228c      	movs	r2, #140	@ 0x8c
 800a9ea:	2183      	movs	r1, #131	@ 0x83
 800a9ec:	f7fe ffc8 	bl	8009980 <_ZN8touchgfx8Drawable11setPositionEssss>
    humVal.setColor(touchgfx::Color::getColorFromRGB(255, 255, 255));
 800a9f0:	697b      	ldr	r3, [r7, #20]
 800a9f2:	f503 7496 	add.w	r4, r3, #300	@ 0x12c
 800a9f6:	23ff      	movs	r3, #255	@ 0xff
 800a9f8:	f887 30a3 	strb.w	r3, [r7, #163]	@ 0xa3
 800a9fc:	23ff      	movs	r3, #255	@ 0xff
 800a9fe:	f887 30a2 	strb.w	r3, [r7, #162]	@ 0xa2
 800aa02:	23ff      	movs	r3, #255	@ 0xff
 800aa04:	f887 30a1 	strb.w	r3, [r7, #161]	@ 0xa1
 800aa08:	f897 30a3 	ldrb.w	r3, [r7, #163]	@ 0xa3
 800aa0c:	041a      	lsls	r2, r3, #16
 800aa0e:	f897 30a2 	ldrb.w	r3, [r7, #162]	@ 0xa2
 800aa12:	021b      	lsls	r3, r3, #8
 800aa14:	431a      	orrs	r2, r3
 800aa16:	f897 30a1 	ldrb.w	r3, [r7, #161]	@ 0xa1
 800aa1a:	4313      	orrs	r3, r2
 800aa1c:	f043 427f 	orr.w	r2, r3, #4278190080	@ 0xff000000
 800aa20:	f107 0364 	add.w	r3, r7, #100	@ 0x64
 800aa24:	4611      	mov	r1, r2
 800aa26:	4618      	mov	r0, r3
 800aa28:	f7fe feda 	bl	80097e0 <_ZN8touchgfx9colortypeC1Em>
 800aa2c:	6e7b      	ldr	r3, [r7, #100]	@ 0x64
 800aa2e:	f8c7 40a4 	str.w	r4, [r7, #164]	@ 0xa4
 800aa32:	61fb      	str	r3, [r7, #28]
        color = newColor;
 800aa34:	f8d7 30a4 	ldr.w	r3, [r7, #164]	@ 0xa4
 800aa38:	69fa      	ldr	r2, [r7, #28]
 800aa3a:	631a      	str	r2, [r3, #48]	@ 0x30
    }
 800aa3c:	bf00      	nop
 800aa3e:	e005      	b.n	800aa4c <_ZN23humidity_screenViewBaseC1Ev+0x394>
 800aa40:	08028168 	.word	0x08028168
 800aa44:	0800accb 	.word	0x0800accb
 800aa48:	0800acf5 	.word	0x0800acf5
    humVal.setLinespacing(0);
 800aa4c:	697b      	ldr	r3, [r7, #20]
 800aa4e:	f503 7396 	add.w	r3, r3, #300	@ 0x12c
 800aa52:	f8c7 30ac 	str.w	r3, [r7, #172]	@ 0xac
 800aa56:	2300      	movs	r3, #0
 800aa58:	f8a7 30aa 	strh.w	r3, [r7, #170]	@ 0xaa
        linespace = space;
 800aa5c:	f8d7 30ac 	ldr.w	r3, [r7, #172]	@ 0xac
 800aa60:	f8b7 20aa 	ldrh.w	r2, [r7, #170]	@ 0xaa
 800aa64:	869a      	strh	r2, [r3, #52]	@ 0x34
        boundingArea = calculateBoundingArea();
 800aa66:	f8d7 30ac 	ldr.w	r3, [r7, #172]	@ 0xac
 800aa6a:	681b      	ldr	r3, [r3, #0]
 800aa6c:	3384      	adds	r3, #132	@ 0x84
 800aa6e:	681b      	ldr	r3, [r3, #0]
 800aa70:	f8d7 40ac 	ldr.w	r4, [r7, #172]	@ 0xac
 800aa74:	463a      	mov	r2, r7
 800aa76:	f8d7 10ac 	ldr.w	r1, [r7, #172]	@ 0xac
 800aa7a:	4610      	mov	r0, r2
 800aa7c:	4798      	blx	r3
 800aa7e:	f104 033c 	add.w	r3, r4, #60	@ 0x3c
 800aa82:	463a      	mov	r2, r7
 800aa84:	ca07      	ldmia	r2, {r0, r1, r2}
 800aa86:	e883 0007 	stmia.w	r3, {r0, r1, r2}
    }
 800aa8a:	bf00      	nop
    humValBuffer[0] = 0;
 800aa8c:	697b      	ldr	r3, [r7, #20]
 800aa8e:	2200      	movs	r2, #0
 800aa90:	f8a3 21f0 	strh.w	r2, [r3, #496]	@ 0x1f0
    humVal.setWildcard(humValBuffer);
 800aa94:	697b      	ldr	r3, [r7, #20]
 800aa96:	f503 7296 	add.w	r2, r3, #300	@ 0x12c
 800aa9a:	697b      	ldr	r3, [r7, #20]
 800aa9c:	f503 73f8 	add.w	r3, r3, #496	@ 0x1f0
 800aaa0:	4619      	mov	r1, r3
 800aaa2:	4610      	mov	r0, r2
 800aaa4:	f7ff fd52 	bl	800a54c <_ZN8touchgfx23TextAreaWithOneWildcard11setWildcardEPKt>
    humVal.setTypedText(touchgfx::TypedText(T___SINGLEUSE_BMB8));
 800aaa8:	697b      	ldr	r3, [r7, #20]
 800aaaa:	f503 7496 	add.w	r4, r3, #300	@ 0x12c
 800aaae:	f107 033c 	add.w	r3, r7, #60	@ 0x3c
 800aab2:	2101      	movs	r1, #1
 800aab4:	4618      	mov	r0, r3
 800aab6:	f7ff f9cb 	bl	8009e50 <_ZN8touchgfx9TypedTextC1Et>
 800aaba:	f107 033c 	add.w	r3, r7, #60	@ 0x3c
 800aabe:	4619      	mov	r1, r3
 800aac0:	4620      	mov	r0, r4
 800aac2:	f007 faff 	bl	80120c4 <_ZN8touchgfx8TextArea12setTypedTextERKNS_9TypedTextE>
 800aac6:	f107 033c 	add.w	r3, r7, #60	@ 0x3c
 800aaca:	4618      	mov	r0, r3
 800aacc:	f7fd fadc 	bl	8008088 <_ZN8touchgfx9TypedTextD1Ev>
    add(humVal);
 800aad0:	697a      	ldr	r2, [r7, #20]
 800aad2:	697b      	ldr	r3, [r7, #20]
 800aad4:	f503 7396 	add.w	r3, r3, #300	@ 0x12c
 800aad8:	4619      	mov	r1, r3
 800aada:	4610      	mov	r0, r2
 800aadc:	f7ff f932 	bl	8009d44 <_ZN8touchgfx6Screen3addERNS_8DrawableE>

    buttonWithIcon1.setXY(111, 72);
 800aae0:	697b      	ldr	r3, [r7, #20]
 800aae2:	f503 73bc 	add.w	r3, r3, #376	@ 0x178
 800aae6:	2248      	movs	r2, #72	@ 0x48
 800aae8:	216f      	movs	r1, #111	@ 0x6f
 800aaea:	4618      	mov	r0, r3
 800aaec:	f7fe ff87 	bl	80099fe <_ZN8touchgfx8Drawable5setXYEss>
    buttonWithIcon1.setBitmaps(touchgfx::Bitmap(BITMAP_ALTERNATE_THEME_IMAGES_WIDGETS_BUTTON_REGULAR_HEIGHT_50_MEDIUM_ROUNDED_NORMAL_ID), touchgfx::Bitmap(BITMAP_ALTERNATE_THEME_IMAGES_WIDGETS_BUTTON_REGULAR_HEIGHT_50_MEDIUM_ROUNDED_PRESSED_ID), touchgfx::Bitmap(BITMAP_ICON_THEME_IMAGES_NAVIGATION_ARROW_UPWARD_50_50_E8F6FB_SVG_ID), touchgfx::Bitmap(BITMAP_ICON_THEME_IMAGES_ACTION_DONE_50_50_E8F6FB_SVG_ID));
 800aaf0:	697b      	ldr	r3, [r7, #20]
 800aaf2:	f503 74bc 	add.w	r4, r3, #376	@ 0x178
 800aaf6:	f107 0344 	add.w	r3, r7, #68	@ 0x44
 800aafa:	2100      	movs	r1, #0
 800aafc:	4618      	mov	r0, r3
 800aafe:	f7fe feb5 	bl	800986c <_ZN8touchgfx6BitmapC1Et>
 800ab02:	f107 0348 	add.w	r3, r7, #72	@ 0x48
 800ab06:	2101      	movs	r1, #1
 800ab08:	4618      	mov	r0, r3
 800ab0a:	f7fe feaf 	bl	800986c <_ZN8touchgfx6BitmapC1Et>
 800ab0e:	f107 034c 	add.w	r3, r7, #76	@ 0x4c
 800ab12:	2106      	movs	r1, #6
 800ab14:	4618      	mov	r0, r3
 800ab16:	f7fe fea9 	bl	800986c <_ZN8touchgfx6BitmapC1Et>
 800ab1a:	f107 0350 	add.w	r3, r7, #80	@ 0x50
 800ab1e:	2104      	movs	r1, #4
 800ab20:	4618      	mov	r0, r3
 800ab22:	f7fe fea3 	bl	800986c <_ZN8touchgfx6BitmapC1Et>
 800ab26:	f107 004c 	add.w	r0, r7, #76	@ 0x4c
 800ab2a:	f107 0248 	add.w	r2, r7, #72	@ 0x48
 800ab2e:	f107 0144 	add.w	r1, r7, #68	@ 0x44
 800ab32:	f107 0350 	add.w	r3, r7, #80	@ 0x50
 800ab36:	9300      	str	r3, [sp, #0]
 800ab38:	4603      	mov	r3, r0
 800ab3a:	4620      	mov	r0, r4
 800ab3c:	f007 fcb8 	bl	80124b0 <_ZN8touchgfx14ButtonWithIcon10setBitmapsERKNS_6BitmapES3_S3_S3_>
    buttonWithIcon1.setIconXY(97, 0);
 800ab40:	697b      	ldr	r3, [r7, #20]
 800ab42:	f503 73bc 	add.w	r3, r3, #376	@ 0x178
 800ab46:	2200      	movs	r2, #0
 800ab48:	2161      	movs	r1, #97	@ 0x61
 800ab4a:	4618      	mov	r0, r3
 800ab4c:	f7ff fd5a 	bl	800a604 <_ZN8touchgfx14ButtonWithIcon9setIconXYEss>
    buttonWithIcon1.setAction(buttonCallback);
 800ab50:	697b      	ldr	r3, [r7, #20]
 800ab52:	f503 72bc 	add.w	r2, r3, #376	@ 0x178
 800ab56:	697b      	ldr	r3, [r7, #20]
 800ab58:	f503 7305 	add.w	r3, r3, #532	@ 0x214
 800ab5c:	4619      	mov	r1, r3
 800ab5e:	4610      	mov	r0, r2
 800ab60:	f7ff fd01 	bl	800a566 <_ZN8touchgfx14AbstractButton9setActionERNS_15GenericCallbackIRKS0_vvEE>
    add(buttonWithIcon1);
 800ab64:	697a      	ldr	r2, [r7, #20]
 800ab66:	697b      	ldr	r3, [r7, #20]
 800ab68:	f503 73bc 	add.w	r3, r3, #376	@ 0x178
 800ab6c:	4619      	mov	r1, r3
 800ab6e:	4610      	mov	r0, r2
 800ab70:	f7ff f8e8 	bl	8009d44 <_ZN8touchgfx6Screen3addERNS_8DrawableE>

    buttonWithIcon1_1.setXY(111, 195);
 800ab74:	697b      	ldr	r3, [r7, #20]
 800ab76:	f503 73da 	add.w	r3, r3, #436	@ 0x1b4
 800ab7a:	22c3      	movs	r2, #195	@ 0xc3
 800ab7c:	216f      	movs	r1, #111	@ 0x6f
 800ab7e:	4618      	mov	r0, r3
 800ab80:	f7fe ff3d 	bl	80099fe <_ZN8touchgfx8Drawable5setXYEss>
    buttonWithIcon1_1.setBitmaps(touchgfx::Bitmap(BITMAP_ALTERNATE_THEME_IMAGES_WIDGETS_BUTTON_REGULAR_HEIGHT_50_MEDIUM_ROUNDED_NORMAL_ID), touchgfx::Bitmap(BITMAP_ALTERNATE_THEME_IMAGES_WIDGETS_BUTTON_REGULAR_HEIGHT_50_MEDIUM_ROUNDED_PRESSED_ID), touchgfx::Bitmap(BITMAP_ICON_THEME_IMAGES_NAVIGATION_ARROW_DOWNWARD_50_50_E8F6FB_SVG_ID), touchgfx::Bitmap(BITMAP_ICON_THEME_IMAGES_ACTION_DONE_50_50_E8F6FB_SVG_ID));
 800ab84:	697b      	ldr	r3, [r7, #20]
 800ab86:	f503 74da 	add.w	r4, r3, #436	@ 0x1b4
 800ab8a:	f107 0354 	add.w	r3, r7, #84	@ 0x54
 800ab8e:	2100      	movs	r1, #0
 800ab90:	4618      	mov	r0, r3
 800ab92:	f7fe fe6b 	bl	800986c <_ZN8touchgfx6BitmapC1Et>
 800ab96:	f107 0358 	add.w	r3, r7, #88	@ 0x58
 800ab9a:	2101      	movs	r1, #1
 800ab9c:	4618      	mov	r0, r3
 800ab9e:	f7fe fe65 	bl	800986c <_ZN8touchgfx6BitmapC1Et>
 800aba2:	f107 035c 	add.w	r3, r7, #92	@ 0x5c
 800aba6:	2105      	movs	r1, #5
 800aba8:	4618      	mov	r0, r3
 800abaa:	f7fe fe5f 	bl	800986c <_ZN8touchgfx6BitmapC1Et>
 800abae:	f107 0360 	add.w	r3, r7, #96	@ 0x60
 800abb2:	2104      	movs	r1, #4
 800abb4:	4618      	mov	r0, r3
 800abb6:	f7fe fe59 	bl	800986c <_ZN8touchgfx6BitmapC1Et>
 800abba:	f107 005c 	add.w	r0, r7, #92	@ 0x5c
 800abbe:	f107 0258 	add.w	r2, r7, #88	@ 0x58
 800abc2:	f107 0154 	add.w	r1, r7, #84	@ 0x54
 800abc6:	f107 0360 	add.w	r3, r7, #96	@ 0x60
 800abca:	9300      	str	r3, [sp, #0]
 800abcc:	4603      	mov	r3, r0
 800abce:	4620      	mov	r0, r4
 800abd0:	f007 fc6e 	bl	80124b0 <_ZN8touchgfx14ButtonWithIcon10setBitmapsERKNS_6BitmapES3_S3_S3_>
    buttonWithIcon1_1.setIconXY(95, 0);
 800abd4:	697b      	ldr	r3, [r7, #20]
 800abd6:	f503 73da 	add.w	r3, r3, #436	@ 0x1b4
 800abda:	2200      	movs	r2, #0
 800abdc:	215f      	movs	r1, #95	@ 0x5f
 800abde:	4618      	mov	r0, r3
 800abe0:	f7ff fd10 	bl	800a604 <_ZN8touchgfx14ButtonWithIcon9setIconXYEss>
    buttonWithIcon1_1.setAction(buttonCallback);
 800abe4:	697b      	ldr	r3, [r7, #20]
 800abe6:	f503 72da 	add.w	r2, r3, #436	@ 0x1b4
 800abea:	697b      	ldr	r3, [r7, #20]
 800abec:	f503 7305 	add.w	r3, r3, #532	@ 0x214
 800abf0:	4619      	mov	r1, r3
 800abf2:	4610      	mov	r0, r2
 800abf4:	f7ff fcb7 	bl	800a566 <_ZN8touchgfx14AbstractButton9setActionERNS_15GenericCallbackIRKS0_vvEE>
    add(buttonWithIcon1_1);
 800abf8:	697a      	ldr	r2, [r7, #20]
 800abfa:	697b      	ldr	r3, [r7, #20]
 800abfc:	f503 73da 	add.w	r3, r3, #436	@ 0x1b4
 800ac00:	4619      	mov	r1, r3
 800ac02:	4610      	mov	r0, r2
 800ac04:	f7ff f89e 	bl	8009d44 <_ZN8touchgfx6Screen3addERNS_8DrawableE>
}
 800ac08:	697b      	ldr	r3, [r7, #20]
 800ac0a:	4618      	mov	r0, r3
 800ac0c:	37b0      	adds	r7, #176	@ 0xb0
 800ac0e:	46bd      	mov	sp, r7
 800ac10:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}

0800ac14 <_ZN23humidity_screenViewBaseD1Ev>:

humidity_screenViewBase::~humidity_screenViewBase()
 800ac14:	b580      	push	{r7, lr}
 800ac16:	b082      	sub	sp, #8
 800ac18:	af00      	add	r7, sp, #0
 800ac1a:	6078      	str	r0, [r7, #4]
 800ac1c:	4a1c      	ldr	r2, [pc, #112]	@ (800ac90 <_ZN23humidity_screenViewBaseD1Ev+0x7c>)
 800ac1e:	687b      	ldr	r3, [r7, #4]
 800ac20:	601a      	str	r2, [r3, #0]
{

}
 800ac22:	687b      	ldr	r3, [r7, #4]
 800ac24:	f503 7305 	add.w	r3, r3, #532	@ 0x214
 800ac28:	4618      	mov	r0, r3
 800ac2a:	f000 fa53 	bl	800b0d4 <_ZN8touchgfx8CallbackI23humidity_screenViewBaseRKNS_14AbstractButtonEvvED1Ev>
 800ac2e:	687b      	ldr	r3, [r7, #4]
 800ac30:	f503 7301 	add.w	r3, r3, #516	@ 0x204
 800ac34:	4618      	mov	r0, r3
 800ac36:	f000 fa6f 	bl	800b118 <_ZN8touchgfx8CallbackI23humidity_screenViewBaseRKNS_23AbstractButtonContainerEvvED1Ev>
 800ac3a:	687b      	ldr	r3, [r7, #4]
 800ac3c:	f503 73da 	add.w	r3, r3, #436	@ 0x1b4
 800ac40:	4618      	mov	r0, r3
 800ac42:	f000 faf7 	bl	800b234 <_ZN8touchgfx14ButtonWithIconD1Ev>
 800ac46:	687b      	ldr	r3, [r7, #4]
 800ac48:	f503 73bc 	add.w	r3, r3, #376	@ 0x178
 800ac4c:	4618      	mov	r0, r3
 800ac4e:	f000 faf1 	bl	800b234 <_ZN8touchgfx14ButtonWithIconD1Ev>
 800ac52:	687b      	ldr	r3, [r7, #4]
 800ac54:	f503 7396 	add.w	r3, r3, #300	@ 0x12c
 800ac58:	4618      	mov	r0, r3
 800ac5a:	f000 faa7 	bl	800b1ac <_ZN8touchgfx23TextAreaWithOneWildcardD1Ev>
 800ac5e:	687b      	ldr	r3, [r7, #4]
 800ac60:	33b4      	adds	r3, #180	@ 0xb4
 800ac62:	4618      	mov	r0, r3
 800ac64:	f000 fa7a 	bl	800b15c <_ZN8touchgfx24BoxWithBorderButtonStyleINS_18ClickButtonTriggerEED1Ev>
 800ac68:	687b      	ldr	r3, [r7, #4]
 800ac6a:	336c      	adds	r3, #108	@ 0x6c
 800ac6c:	4618      	mov	r0, r3
 800ac6e:	f7ff fbc9 	bl	800a404 <_ZN8touchgfx8TextAreaD1Ev>
 800ac72:	687b      	ldr	r3, [r7, #4]
 800ac74:	3340      	adds	r3, #64	@ 0x40
 800ac76:	4618      	mov	r0, r3
 800ac78:	f7ff fafa 	bl	800a270 <_ZN8touchgfx3BoxD1Ev>
 800ac7c:	687b      	ldr	r3, [r7, #4]
 800ac7e:	4618      	mov	r0, r3
 800ac80:	f7ff fcf8 	bl	800a674 <_ZN8touchgfx4ViewI24humidity_screenPresenterED1Ev>
 800ac84:	687b      	ldr	r3, [r7, #4]
 800ac86:	4618      	mov	r0, r3
 800ac88:	3708      	adds	r7, #8
 800ac8a:	46bd      	mov	sp, r7
 800ac8c:	bd80      	pop	{r7, pc}
 800ac8e:	bf00      	nop
 800ac90:	08028168 	.word	0x08028168

0800ac94 <_ZN23humidity_screenViewBaseD0Ev>:
humidity_screenViewBase::~humidity_screenViewBase()
 800ac94:	b580      	push	{r7, lr}
 800ac96:	b082      	sub	sp, #8
 800ac98:	af00      	add	r7, sp, #0
 800ac9a:	6078      	str	r0, [r7, #4]
}
 800ac9c:	6878      	ldr	r0, [r7, #4]
 800ac9e:	f7ff ffb9 	bl	800ac14 <_ZN23humidity_screenViewBaseD1Ev>
 800aca2:	f44f 7109 	mov.w	r1, #548	@ 0x224
 800aca6:	6878      	ldr	r0, [r7, #4]
 800aca8:	f01a fef3 	bl	8025a92 <_ZdlPvj>
 800acac:	687b      	ldr	r3, [r7, #4]
 800acae:	4618      	mov	r0, r3
 800acb0:	3708      	adds	r7, #8
 800acb2:	46bd      	mov	sp, r7
 800acb4:	bd80      	pop	{r7, pc}

0800acb6 <_ZN23humidity_screenViewBase11setupScreenEv>:

void humidity_screenViewBase::setupScreen()
{
 800acb6:	b480      	push	{r7}
 800acb8:	b083      	sub	sp, #12
 800acba:	af00      	add	r7, sp, #0
 800acbc:	6078      	str	r0, [r7, #4]

}
 800acbe:	bf00      	nop
 800acc0:	370c      	adds	r7, #12
 800acc2:	46bd      	mov	sp, r7
 800acc4:	f85d 7b04 	ldr.w	r7, [sp], #4
 800acc8:	4770      	bx	lr

0800acca <_ZN23humidity_screenViewBase25flexButtonCallbackHandlerERKN8touchgfx23AbstractButtonContainerE>:

void humidity_screenViewBase::flexButtonCallbackHandler(const touchgfx::AbstractButtonContainer& src)
{
 800acca:	b580      	push	{r7, lr}
 800accc:	b082      	sub	sp, #8
 800acce:	af00      	add	r7, sp, #0
 800acd0:	6078      	str	r0, [r7, #4]
 800acd2:	6039      	str	r1, [r7, #0]
    if (&src == &flexButton1)
 800acd4:	687b      	ldr	r3, [r7, #4]
 800acd6:	33b4      	adds	r3, #180	@ 0xb4
 800acd8:	683a      	ldr	r2, [r7, #0]
 800acda:	429a      	cmp	r2, r3
 800acdc:	d106      	bne.n	800acec <_ZN23humidity_screenViewBase25flexButtonCallbackHandlerERKN8touchgfx23AbstractButtonContainerE+0x22>
    {
        //Interaction2
        //When flexButton1 clicked change screen to Main
        //Go to Main with no screen transition
        application().gotoMainScreenNoTransition();
 800acde:	6878      	ldr	r0, [r7, #4]
 800ace0:	f7ff fcbc 	bl	800a65c <_ZN23humidity_screenViewBase11applicationEv>
 800ace4:	4603      	mov	r3, r0
 800ace6:	4618      	mov	r0, r3
 800ace8:	f7fd fef4 	bl	8008ad4 <_ZN23FrontendApplicationBase26gotoMainScreenNoTransitionEv>
    }
}
 800acec:	bf00      	nop
 800acee:	3708      	adds	r7, #8
 800acf0:	46bd      	mov	sp, r7
 800acf2:	bd80      	pop	{r7, pc}

0800acf4 <_ZN23humidity_screenViewBase21buttonCallbackHandlerERKN8touchgfx14AbstractButtonE>:

void humidity_screenViewBase::buttonCallbackHandler(const touchgfx::AbstractButton& src)
{
 800acf4:	b580      	push	{r7, lr}
 800acf6:	b082      	sub	sp, #8
 800acf8:	af00      	add	r7, sp, #0
 800acfa:	6078      	str	r0, [r7, #4]
 800acfc:	6039      	str	r1, [r7, #0]
    if (&src == &buttonWithIcon1)
 800acfe:	687b      	ldr	r3, [r7, #4]
 800ad00:	f503 73bc 	add.w	r3, r3, #376	@ 0x178
 800ad04:	683a      	ldr	r2, [r7, #0]
 800ad06:	429a      	cmp	r2, r3
 800ad08:	d105      	bne.n	800ad16 <_ZN23humidity_screenViewBase21buttonCallbackHandlerERKN8touchgfx14AbstractButtonE+0x22>
    {
        //Interaction3
        //When buttonWithIcon1 clicked call virtual function
        //Call increase
        increase();
 800ad0a:	687b      	ldr	r3, [r7, #4]
 800ad0c:	681b      	ldr	r3, [r3, #0]
 800ad0e:	332c      	adds	r3, #44	@ 0x2c
 800ad10:	681b      	ldr	r3, [r3, #0]
 800ad12:	6878      	ldr	r0, [r7, #4]
 800ad14:	4798      	blx	r3
    }
    if (&src == &buttonWithIcon1_1)
 800ad16:	687b      	ldr	r3, [r7, #4]
 800ad18:	f503 73da 	add.w	r3, r3, #436	@ 0x1b4
 800ad1c:	683a      	ldr	r2, [r7, #0]
 800ad1e:	429a      	cmp	r2, r3
 800ad20:	d105      	bne.n	800ad2e <_ZN23humidity_screenViewBase21buttonCallbackHandlerERKN8touchgfx14AbstractButtonE+0x3a>
    {
        //Interaction4
        //When buttonWithIcon1_1 clicked call virtual function
        //Call decrease
        decrease();
 800ad22:	687b      	ldr	r3, [r7, #4]
 800ad24:	681b      	ldr	r3, [r3, #0]
 800ad26:	3330      	adds	r3, #48	@ 0x30
 800ad28:	681b      	ldr	r3, [r3, #0]
 800ad2a:	6878      	ldr	r0, [r7, #4]
 800ad2c:	4798      	blx	r3
    }
}
 800ad2e:	bf00      	nop
 800ad30:	3708      	adds	r7, #8
 800ad32:	46bd      	mov	sp, r7
 800ad34:	bd80      	pop	{r7, pc}
	...

0800ad38 <_ZN8touchgfx4ViewI24humidity_screenPresenterEC1Ev>:
    View()
 800ad38:	b580      	push	{r7, lr}
 800ad3a:	b082      	sub	sp, #8
 800ad3c:	af00      	add	r7, sp, #0
 800ad3e:	6078      	str	r0, [r7, #4]
        : presenter(0)
 800ad40:	687b      	ldr	r3, [r7, #4]
 800ad42:	4618      	mov	r0, r3
 800ad44:	f00a fc62 	bl	801560c <_ZN8touchgfx6ScreenC1Ev>
 800ad48:	4a05      	ldr	r2, [pc, #20]	@ (800ad60 <_ZN8touchgfx4ViewI24humidity_screenPresenterEC1Ev+0x28>)
 800ad4a:	687b      	ldr	r3, [r7, #4]
 800ad4c:	601a      	str	r2, [r3, #0]
 800ad4e:	687b      	ldr	r3, [r7, #4]
 800ad50:	2200      	movs	r2, #0
 800ad52:	63da      	str	r2, [r3, #60]	@ 0x3c
    }
 800ad54:	687b      	ldr	r3, [r7, #4]
 800ad56:	4618      	mov	r0, r3
 800ad58:	3708      	adds	r7, #8
 800ad5a:	46bd      	mov	sp, r7
 800ad5c:	bd80      	pop	{r7, pc}
 800ad5e:	bf00      	nop
 800ad60:	08028270 	.word	0x08028270

0800ad64 <_ZN8touchgfx18ClickButtonTriggerC1Ev>:
class ClickButtonTrigger : public AbstractButtonContainer
 800ad64:	b580      	push	{r7, lr}
 800ad66:	b082      	sub	sp, #8
 800ad68:	af00      	add	r7, sp, #0
 800ad6a:	6078      	str	r0, [r7, #4]
 800ad6c:	687b      	ldr	r3, [r7, #4]
 800ad6e:	4618      	mov	r0, r3
 800ad70:	f7ff f9e4 	bl	800a13c <_ZN8touchgfx23AbstractButtonContainerC1Ev>
 800ad74:	4a03      	ldr	r2, [pc, #12]	@ (800ad84 <_ZN8touchgfx18ClickButtonTriggerC1Ev+0x20>)
 800ad76:	687b      	ldr	r3, [r7, #4]
 800ad78:	601a      	str	r2, [r3, #0]
 800ad7a:	687b      	ldr	r3, [r7, #4]
 800ad7c:	4618      	mov	r0, r3
 800ad7e:	3708      	adds	r7, #8
 800ad80:	46bd      	mov	sp, r7
 800ad82:	bd80      	pop	{r7, pc}
 800ad84:	0802834c 	.word	0x0802834c

0800ad88 <_ZN8touchgfx18ClickButtonTriggerD1Ev>:
 800ad88:	b580      	push	{r7, lr}
 800ad8a:	b082      	sub	sp, #8
 800ad8c:	af00      	add	r7, sp, #0
 800ad8e:	6078      	str	r0, [r7, #4]
 800ad90:	4a05      	ldr	r2, [pc, #20]	@ (800ada8 <_ZN8touchgfx18ClickButtonTriggerD1Ev+0x20>)
 800ad92:	687b      	ldr	r3, [r7, #4]
 800ad94:	601a      	str	r2, [r3, #0]
 800ad96:	687b      	ldr	r3, [r7, #4]
 800ad98:	4618      	mov	r0, r3
 800ad9a:	f7ff fb11 	bl	800a3c0 <_ZN8touchgfx23AbstractButtonContainerD1Ev>
 800ad9e:	687b      	ldr	r3, [r7, #4]
 800ada0:	4618      	mov	r0, r3
 800ada2:	3708      	adds	r7, #8
 800ada4:	46bd      	mov	sp, r7
 800ada6:	bd80      	pop	{r7, pc}
 800ada8:	0802834c 	.word	0x0802834c

0800adac <_ZN8touchgfx18ClickButtonTriggerD0Ev>:
 800adac:	b580      	push	{r7, lr}
 800adae:	b082      	sub	sp, #8
 800adb0:	af00      	add	r7, sp, #0
 800adb2:	6078      	str	r0, [r7, #4]
 800adb4:	6878      	ldr	r0, [r7, #4]
 800adb6:	f7ff ffe7 	bl	800ad88 <_ZN8touchgfx18ClickButtonTriggerD1Ev>
 800adba:	2134      	movs	r1, #52	@ 0x34
 800adbc:	6878      	ldr	r0, [r7, #4]
 800adbe:	f01a fe68 	bl	8025a92 <_ZdlPvj>
 800adc2:	687b      	ldr	r3, [r7, #4]
 800adc4:	4618      	mov	r0, r3
 800adc6:	3708      	adds	r7, #8
 800adc8:	46bd      	mov	sp, r7
 800adca:	bd80      	pop	{r7, pc}

0800adcc <_ZN8touchgfx13BoxWithBorderD1Ev>:
class BoxWithBorder : public Box
 800adcc:	b580      	push	{r7, lr}
 800adce:	b082      	sub	sp, #8
 800add0:	af00      	add	r7, sp, #0
 800add2:	6078      	str	r0, [r7, #4]
 800add4:	4a05      	ldr	r2, [pc, #20]	@ (800adec <_ZN8touchgfx13BoxWithBorderD1Ev+0x20>)
 800add6:	687b      	ldr	r3, [r7, #4]
 800add8:	601a      	str	r2, [r3, #0]
 800adda:	687b      	ldr	r3, [r7, #4]
 800addc:	4618      	mov	r0, r3
 800adde:	f7ff fa47 	bl	800a270 <_ZN8touchgfx3BoxD1Ev>
 800ade2:	687b      	ldr	r3, [r7, #4]
 800ade4:	4618      	mov	r0, r3
 800ade6:	3708      	adds	r7, #8
 800ade8:	46bd      	mov	sp, r7
 800adea:	bd80      	pop	{r7, pc}
 800adec:	08029304 	.word	0x08029304

0800adf0 <_ZN8touchgfx13BoxWithBorderD0Ev>:
 800adf0:	b580      	push	{r7, lr}
 800adf2:	b082      	sub	sp, #8
 800adf4:	af00      	add	r7, sp, #0
 800adf6:	6078      	str	r0, [r7, #4]
 800adf8:	6878      	ldr	r0, [r7, #4]
 800adfa:	f7ff ffe7 	bl	800adcc <_ZN8touchgfx13BoxWithBorderD1Ev>
 800adfe:	2134      	movs	r1, #52	@ 0x34
 800ae00:	6878      	ldr	r0, [r7, #4]
 800ae02:	f01a fe46 	bl	8025a92 <_ZdlPvj>
 800ae06:	687b      	ldr	r3, [r7, #4]
 800ae08:	4618      	mov	r0, r3
 800ae0a:	3708      	adds	r7, #8
 800ae0c:	46bd      	mov	sp, r7
 800ae0e:	bd80      	pop	{r7, pc}

0800ae10 <_ZN8touchgfx24BoxWithBorderButtonStyleINS_18ClickButtonTriggerEEC1Ev>:
 */
template <class T>
class BoxWithBorderButtonStyle : public T
{
public:
    BoxWithBorderButtonStyle()
 800ae10:	b580      	push	{r7, lr}
 800ae12:	b082      	sub	sp, #8
 800ae14:	af00      	add	r7, sp, #0
 800ae16:	6078      	str	r0, [r7, #4]
        : T(), up(), down()
 800ae18:	687b      	ldr	r3, [r7, #4]
 800ae1a:	4618      	mov	r0, r3
 800ae1c:	2334      	movs	r3, #52	@ 0x34
 800ae1e:	461a      	mov	r2, r3
 800ae20:	2100      	movs	r1, #0
 800ae22:	f01b f8ec 	bl	8025ffe <memset>
 800ae26:	687b      	ldr	r3, [r7, #4]
 800ae28:	4618      	mov	r0, r3
 800ae2a:	f7ff ff9b 	bl	800ad64 <_ZN8touchgfx18ClickButtonTriggerC1Ev>
 800ae2e:	4a17      	ldr	r2, [pc, #92]	@ (800ae8c <_ZN8touchgfx24BoxWithBorderButtonStyleINS_18ClickButtonTriggerEEC1Ev+0x7c>)
 800ae30:	687b      	ldr	r3, [r7, #4]
 800ae32:	601a      	str	r2, [r3, #0]
 800ae34:	687b      	ldr	r3, [r7, #4]
 800ae36:	3334      	adds	r3, #52	@ 0x34
 800ae38:	4618      	mov	r0, r3
 800ae3a:	f7ff fa3b 	bl	800a2b4 <_ZN8touchgfx13BoxWithBorderC1Ev>
 800ae3e:	687b      	ldr	r3, [r7, #4]
 800ae40:	3368      	adds	r3, #104	@ 0x68
 800ae42:	4618      	mov	r0, r3
 800ae44:	f7fe fcbe 	bl	80097c4 <_ZN8touchgfx9colortypeC1Ev>
 800ae48:	687b      	ldr	r3, [r7, #4]
 800ae4a:	336c      	adds	r3, #108	@ 0x6c
 800ae4c:	4618      	mov	r0, r3
 800ae4e:	f7fe fcb9 	bl	80097c4 <_ZN8touchgfx9colortypeC1Ev>
 800ae52:	687b      	ldr	r3, [r7, #4]
 800ae54:	3370      	adds	r3, #112	@ 0x70
 800ae56:	4618      	mov	r0, r3
 800ae58:	f7fe fcb4 	bl	80097c4 <_ZN8touchgfx9colortypeC1Ev>
 800ae5c:	687b      	ldr	r3, [r7, #4]
 800ae5e:	3374      	adds	r3, #116	@ 0x74
 800ae60:	4618      	mov	r0, r3
 800ae62:	f7fe fcaf 	bl	80097c4 <_ZN8touchgfx9colortypeC1Ev>
    {
        borderBox.setXY(0, 0);
 800ae66:	687b      	ldr	r3, [r7, #4]
 800ae68:	3334      	adds	r3, #52	@ 0x34
 800ae6a:	2200      	movs	r2, #0
 800ae6c:	2100      	movs	r1, #0
 800ae6e:	4618      	mov	r0, r3
 800ae70:	f7fe fdc5 	bl	80099fe <_ZN8touchgfx8Drawable5setXYEss>
        T::add(borderBox);
 800ae74:	687a      	ldr	r2, [r7, #4]
 800ae76:	687b      	ldr	r3, [r7, #4]
 800ae78:	3334      	adds	r3, #52	@ 0x34
 800ae7a:	4619      	mov	r1, r3
 800ae7c:	4610      	mov	r0, r2
 800ae7e:	f005 fbdf 	bl	8010640 <_ZN8touchgfx9Container3addERNS_8DrawableE>
    }
 800ae82:	687b      	ldr	r3, [r7, #4]
 800ae84:	4618      	mov	r0, r3
 800ae86:	3708      	adds	r7, #8
 800ae88:	46bd      	mov	sp, r7
 800ae8a:	bd80      	pop	{r7, pc}
 800ae8c:	080281d4 	.word	0x080281d4

0800ae90 <_ZN8touchgfx15GenericCallbackIRKNS_23AbstractButtonContainerEvvEC1Ev>:
class GenericCallback<T1, void, void>
 800ae90:	b480      	push	{r7}
 800ae92:	b083      	sub	sp, #12
 800ae94:	af00      	add	r7, sp, #0
 800ae96:	6078      	str	r0, [r7, #4]
 800ae98:	4a04      	ldr	r2, [pc, #16]	@ (800aeac <_ZN8touchgfx15GenericCallbackIRKNS_23AbstractButtonContainerEvvEC1Ev+0x1c>)
 800ae9a:	687b      	ldr	r3, [r7, #4]
 800ae9c:	601a      	str	r2, [r3, #0]
 800ae9e:	687b      	ldr	r3, [r7, #4]
 800aea0:	4618      	mov	r0, r3
 800aea2:	370c      	adds	r7, #12
 800aea4:	46bd      	mov	sp, r7
 800aea6:	f85d 7b04 	ldr.w	r7, [sp], #4
 800aeaa:	4770      	bx	lr
 800aeac:	080283e8 	.word	0x080283e8

0800aeb0 <_ZN8touchgfx8CallbackI23humidity_screenViewBaseRKNS_23AbstractButtonContainerEvvEC1EPS1_MS1_FvS4_E>:
    Callback(dest_type* pObject, void (dest_type::*pmemfun_1)(T1))
 800aeb0:	b580      	push	{r7, lr}
 800aeb2:	b084      	sub	sp, #16
 800aeb4:	af00      	add	r7, sp, #0
 800aeb6:	60f8      	str	r0, [r7, #12]
 800aeb8:	60b9      	str	r1, [r7, #8]
 800aeba:	4639      	mov	r1, r7
 800aebc:	e881 000c 	stmia.w	r1, {r2, r3}
        : pobject(pObject), pmemfun(pmemfun_1)
 800aec0:	68fb      	ldr	r3, [r7, #12]
 800aec2:	4618      	mov	r0, r3
 800aec4:	f7ff ffe4 	bl	800ae90 <_ZN8touchgfx15GenericCallbackIRKNS_23AbstractButtonContainerEvvEC1Ev>
 800aec8:	4a08      	ldr	r2, [pc, #32]	@ (800aeec <_ZN8touchgfx8CallbackI23humidity_screenViewBaseRKNS_23AbstractButtonContainerEvvEC1EPS1_MS1_FvS4_E+0x3c>)
 800aeca:	68fb      	ldr	r3, [r7, #12]
 800aecc:	601a      	str	r2, [r3, #0]
 800aece:	68fb      	ldr	r3, [r7, #12]
 800aed0:	68ba      	ldr	r2, [r7, #8]
 800aed2:	605a      	str	r2, [r3, #4]
 800aed4:	68fb      	ldr	r3, [r7, #12]
 800aed6:	3308      	adds	r3, #8
 800aed8:	463a      	mov	r2, r7
 800aeda:	e892 0003 	ldmia.w	r2, {r0, r1}
 800aede:	e883 0003 	stmia.w	r3, {r0, r1}
    }
 800aee2:	68fb      	ldr	r3, [r7, #12]
 800aee4:	4618      	mov	r0, r3
 800aee6:	3710      	adds	r7, #16
 800aee8:	46bd      	mov	sp, r7
 800aeea:	bd80      	pop	{r7, pc}
 800aeec:	080281bc 	.word	0x080281bc

0800aef0 <_ZN8touchgfx15GenericCallbackIRKNS_14AbstractButtonEvvEC1Ev>:
class GenericCallback<T1, void, void>
 800aef0:	b480      	push	{r7}
 800aef2:	b083      	sub	sp, #12
 800aef4:	af00      	add	r7, sp, #0
 800aef6:	6078      	str	r0, [r7, #4]
 800aef8:	4a04      	ldr	r2, [pc, #16]	@ (800af0c <_ZN8touchgfx15GenericCallbackIRKNS_14AbstractButtonEvvEC1Ev+0x1c>)
 800aefa:	687b      	ldr	r3, [r7, #4]
 800aefc:	601a      	str	r2, [r3, #0]
 800aefe:	687b      	ldr	r3, [r7, #4]
 800af00:	4618      	mov	r0, r3
 800af02:	370c      	adds	r7, #12
 800af04:	46bd      	mov	sp, r7
 800af06:	f85d 7b04 	ldr.w	r7, [sp], #4
 800af0a:	4770      	bx	lr
 800af0c:	080282a4 	.word	0x080282a4

0800af10 <_ZN8touchgfx8CallbackI23humidity_screenViewBaseRKNS_14AbstractButtonEvvEC1EPS1_MS1_FvS4_E>:
    Callback(dest_type* pObject, void (dest_type::*pmemfun_1)(T1))
 800af10:	b580      	push	{r7, lr}
 800af12:	b084      	sub	sp, #16
 800af14:	af00      	add	r7, sp, #0
 800af16:	60f8      	str	r0, [r7, #12]
 800af18:	60b9      	str	r1, [r7, #8]
 800af1a:	4639      	mov	r1, r7
 800af1c:	e881 000c 	stmia.w	r1, {r2, r3}
        : pobject(pObject), pmemfun(pmemfun_1)
 800af20:	68fb      	ldr	r3, [r7, #12]
 800af22:	4618      	mov	r0, r3
 800af24:	f7ff ffe4 	bl	800aef0 <_ZN8touchgfx15GenericCallbackIRKNS_14AbstractButtonEvvEC1Ev>
 800af28:	4a08      	ldr	r2, [pc, #32]	@ (800af4c <_ZN8touchgfx8CallbackI23humidity_screenViewBaseRKNS_14AbstractButtonEvvEC1EPS1_MS1_FvS4_E+0x3c>)
 800af2a:	68fb      	ldr	r3, [r7, #12]
 800af2c:	601a      	str	r2, [r3, #0]
 800af2e:	68fb      	ldr	r3, [r7, #12]
 800af30:	68ba      	ldr	r2, [r7, #8]
 800af32:	605a      	str	r2, [r3, #4]
 800af34:	68fb      	ldr	r3, [r7, #12]
 800af36:	3308      	adds	r3, #8
 800af38:	463a      	mov	r2, r7
 800af3a:	e892 0003 	ldmia.w	r2, {r0, r1}
 800af3e:	e883 0003 	stmia.w	r3, {r0, r1}
    }
 800af42:	68fb      	ldr	r3, [r7, #12]
 800af44:	4618      	mov	r0, r3
 800af46:	3710      	adds	r7, #16
 800af48:	46bd      	mov	sp, r7
 800af4a:	bd80      	pop	{r7, pc}
 800af4c:	080281a4 	.word	0x080281a4

0800af50 <_ZN8touchgfx24BoxWithBorderButtonStyleINS_18ClickButtonTriggerEE24setBoxWithBorderPositionEssss>:
     * @param  width  The width of this BoxWithBorderButtonStyle.
     * @param  height The height of this BoxWithBorderButtonStyle.
     *
     * @note Changing this does not automatically yield a redraw.
     */
    void setBoxWithBorderPosition(int16_t x, int16_t y, int16_t width, int16_t height)
 800af50:	b590      	push	{r4, r7, lr}
 800af52:	b087      	sub	sp, #28
 800af54:	af02      	add	r7, sp, #8
 800af56:	60f8      	str	r0, [r7, #12]
 800af58:	4608      	mov	r0, r1
 800af5a:	4611      	mov	r1, r2
 800af5c:	461a      	mov	r2, r3
 800af5e:	4603      	mov	r3, r0
 800af60:	817b      	strh	r3, [r7, #10]
 800af62:	460b      	mov	r3, r1
 800af64:	813b      	strh	r3, [r7, #8]
 800af66:	4613      	mov	r3, r2
 800af68:	80fb      	strh	r3, [r7, #6]
    {
        borderBox.setPosition(x, y, width, height);
 800af6a:	68fb      	ldr	r3, [r7, #12]
 800af6c:	f103 0034 	add.w	r0, r3, #52	@ 0x34
 800af70:	f9b7 4006 	ldrsh.w	r4, [r7, #6]
 800af74:	f9b7 2008 	ldrsh.w	r2, [r7, #8]
 800af78:	f9b7 100a 	ldrsh.w	r1, [r7, #10]
 800af7c:	f9b7 3020 	ldrsh.w	r3, [r7, #32]
 800af80:	9300      	str	r3, [sp, #0]
 800af82:	4623      	mov	r3, r4
 800af84:	f7fe fcfc 	bl	8009980 <_ZN8touchgfx8Drawable11setPositionEssss>
    }
 800af88:	bf00      	nop
 800af8a:	3714      	adds	r7, #20
 800af8c:	46bd      	mov	sp, r7
 800af8e:	bd90      	pop	{r4, r7, pc}

0800af90 <_ZN8touchgfx24BoxWithBorderButtonStyleINS_18ClickButtonTriggerEE13setBorderSizeEh>:
    /**
     * Sets border size.
     *
     * @param  size The size.
     */
    void setBorderSize(uint8_t size)
 800af90:	b580      	push	{r7, lr}
 800af92:	b082      	sub	sp, #8
 800af94:	af00      	add	r7, sp, #0
 800af96:	6078      	str	r0, [r7, #4]
 800af98:	460b      	mov	r3, r1
 800af9a:	70fb      	strb	r3, [r7, #3]
    {
        borderBox.setBorderSize(size);
 800af9c:	687b      	ldr	r3, [r7, #4]
 800af9e:	3334      	adds	r3, #52	@ 0x34
 800afa0:	78fa      	ldrb	r2, [r7, #3]
 800afa2:	b292      	uxth	r2, r2
 800afa4:	4611      	mov	r1, r2
 800afa6:	4618      	mov	r0, r3
 800afa8:	f7ff f9ae 	bl	800a308 <_ZN8touchgfx13BoxWithBorder13setBorderSizeEt>
    }
 800afac:	bf00      	nop
 800afae:	3708      	adds	r7, #8
 800afb0:	46bd      	mov	sp, r7
 800afb2:	bd80      	pop	{r7, pc}

0800afb4 <_ZN8touchgfx24BoxWithBorderButtonStyleINS_18ClickButtonTriggerEE22setBoxWithBorderColorsENS_9colortypeES3_S3_S3_>:
    void setBoxWithBorderColors(const colortype colorReleased, const colortype colorPressed, const colortype borderColorReleased, const colortype borderColorPressed)
 800afb4:	b580      	push	{r7, lr}
 800afb6:	b084      	sub	sp, #16
 800afb8:	af00      	add	r7, sp, #0
 800afba:	60f8      	str	r0, [r7, #12]
 800afbc:	60b9      	str	r1, [r7, #8]
 800afbe:	607a      	str	r2, [r7, #4]
 800afc0:	603b      	str	r3, [r7, #0]
        up = colorReleased;
 800afc2:	68fb      	ldr	r3, [r7, #12]
 800afc4:	68ba      	ldr	r2, [r7, #8]
 800afc6:	669a      	str	r2, [r3, #104]	@ 0x68
        down = colorPressed;
 800afc8:	68fb      	ldr	r3, [r7, #12]
 800afca:	687a      	ldr	r2, [r7, #4]
 800afcc:	66da      	str	r2, [r3, #108]	@ 0x6c
        borderUp = borderColorReleased;
 800afce:	68fb      	ldr	r3, [r7, #12]
 800afd0:	683a      	ldr	r2, [r7, #0]
 800afd2:	671a      	str	r2, [r3, #112]	@ 0x70
        borderDown = borderColorPressed;
 800afd4:	68fb      	ldr	r3, [r7, #12]
 800afd6:	69ba      	ldr	r2, [r7, #24]
 800afd8:	675a      	str	r2, [r3, #116]	@ 0x74
        handlePressedUpdated();
 800afda:	68fb      	ldr	r3, [r7, #12]
 800afdc:	681b      	ldr	r3, [r3, #0]
 800afde:	338c      	adds	r3, #140	@ 0x8c
 800afe0:	681b      	ldr	r3, [r3, #0]
 800afe2:	68f8      	ldr	r0, [r7, #12]
 800afe4:	4798      	blx	r3
    }
 800afe6:	bf00      	nop
 800afe8:	3710      	adds	r7, #16
 800afea:	46bd      	mov	sp, r7
 800afec:	bd80      	pop	{r7, pc}
	...

0800aff0 <_ZN8touchgfx15GenericCallbackIRKNS_23AbstractButtonContainerEvvED1Ev>:
    virtual ~GenericCallback()
 800aff0:	b480      	push	{r7}
 800aff2:	b083      	sub	sp, #12
 800aff4:	af00      	add	r7, sp, #0
 800aff6:	6078      	str	r0, [r7, #4]
    }
 800aff8:	4a04      	ldr	r2, [pc, #16]	@ (800b00c <_ZN8touchgfx15GenericCallbackIRKNS_23AbstractButtonContainerEvvED1Ev+0x1c>)
 800affa:	687b      	ldr	r3, [r7, #4]
 800affc:	601a      	str	r2, [r3, #0]
 800affe:	687b      	ldr	r3, [r7, #4]
 800b000:	4618      	mov	r0, r3
 800b002:	370c      	adds	r7, #12
 800b004:	46bd      	mov	sp, r7
 800b006:	f85d 7b04 	ldr.w	r7, [sp], #4
 800b00a:	4770      	bx	lr
 800b00c:	080283e8 	.word	0x080283e8

0800b010 <_ZN8touchgfx15GenericCallbackIRKNS_23AbstractButtonContainerEvvED0Ev>:
    virtual ~GenericCallback()
 800b010:	b580      	push	{r7, lr}
 800b012:	b082      	sub	sp, #8
 800b014:	af00      	add	r7, sp, #0
 800b016:	6078      	str	r0, [r7, #4]
    }
 800b018:	6878      	ldr	r0, [r7, #4]
 800b01a:	f7ff ffe9 	bl	800aff0 <_ZN8touchgfx15GenericCallbackIRKNS_23AbstractButtonContainerEvvED1Ev>
 800b01e:	2104      	movs	r1, #4
 800b020:	6878      	ldr	r0, [r7, #4]
 800b022:	f01a fd36 	bl	8025a92 <_ZdlPvj>
 800b026:	687b      	ldr	r3, [r7, #4]
 800b028:	4618      	mov	r0, r3
 800b02a:	3708      	adds	r7, #8
 800b02c:	46bd      	mov	sp, r7
 800b02e:	bd80      	pop	{r7, pc}

0800b030 <_ZN8touchgfx15GenericCallbackIRKNS_14AbstractButtonEvvED1Ev>:
    virtual ~GenericCallback()
 800b030:	b480      	push	{r7}
 800b032:	b083      	sub	sp, #12
 800b034:	af00      	add	r7, sp, #0
 800b036:	6078      	str	r0, [r7, #4]
    }
 800b038:	4a04      	ldr	r2, [pc, #16]	@ (800b04c <_ZN8touchgfx15GenericCallbackIRKNS_14AbstractButtonEvvED1Ev+0x1c>)
 800b03a:	687b      	ldr	r3, [r7, #4]
 800b03c:	601a      	str	r2, [r3, #0]
 800b03e:	687b      	ldr	r3, [r7, #4]
 800b040:	4618      	mov	r0, r3
 800b042:	370c      	adds	r7, #12
 800b044:	46bd      	mov	sp, r7
 800b046:	f85d 7b04 	ldr.w	r7, [sp], #4
 800b04a:	4770      	bx	lr
 800b04c:	080282a4 	.word	0x080282a4

0800b050 <_ZN8touchgfx15GenericCallbackIRKNS_14AbstractButtonEvvED0Ev>:
    virtual ~GenericCallback()
 800b050:	b580      	push	{r7, lr}
 800b052:	b082      	sub	sp, #8
 800b054:	af00      	add	r7, sp, #0
 800b056:	6078      	str	r0, [r7, #4]
    }
 800b058:	6878      	ldr	r0, [r7, #4]
 800b05a:	f7ff ffe9 	bl	800b030 <_ZN8touchgfx15GenericCallbackIRKNS_14AbstractButtonEvvED1Ev>
 800b05e:	2104      	movs	r1, #4
 800b060:	6878      	ldr	r0, [r7, #4]
 800b062:	f01a fd16 	bl	8025a92 <_ZdlPvj>
 800b066:	687b      	ldr	r3, [r7, #4]
 800b068:	4618      	mov	r0, r3
 800b06a:	3708      	adds	r7, #8
 800b06c:	46bd      	mov	sp, r7
 800b06e:	bd80      	pop	{r7, pc}

0800b070 <_ZN8touchgfx24BoxWithBorderButtonStyleINS_18ClickButtonTriggerEE20handlePressedUpdatedEv>:
    colortype down;          ///< The down
    colortype borderUp;      ///< The border up
    colortype borderDown;    ///< The border down

    /** @copydoc AbstractButtonContainer::handlePressedUpdated() */
    virtual void handlePressedUpdated()
 800b070:	b590      	push	{r4, r7, lr}
 800b072:	b083      	sub	sp, #12
 800b074:	af00      	add	r7, sp, #0
 800b076:	6078      	str	r0, [r7, #4]
    {
        borderBox.setColor(T::getPressed() ? down : up);
 800b078:	687b      	ldr	r3, [r7, #4]
 800b07a:	f103 0434 	add.w	r4, r3, #52	@ 0x34
 800b07e:	687b      	ldr	r3, [r7, #4]
 800b080:	4618      	mov	r0, r3
 800b082:	f7ff f891 	bl	800a1a8 <_ZNK8touchgfx23AbstractButtonContainer10getPressedEv>
 800b086:	4603      	mov	r3, r0
 800b088:	2b00      	cmp	r3, #0
 800b08a:	d002      	beq.n	800b092 <_ZN8touchgfx24BoxWithBorderButtonStyleINS_18ClickButtonTriggerEE20handlePressedUpdatedEv+0x22>
 800b08c:	687b      	ldr	r3, [r7, #4]
 800b08e:	336c      	adds	r3, #108	@ 0x6c
 800b090:	e001      	b.n	800b096 <_ZN8touchgfx24BoxWithBorderButtonStyleINS_18ClickButtonTriggerEE20handlePressedUpdatedEv+0x26>
 800b092:	687b      	ldr	r3, [r7, #4]
 800b094:	3368      	adds	r3, #104	@ 0x68
 800b096:	6819      	ldr	r1, [r3, #0]
 800b098:	4620      	mov	r0, r4
 800b09a:	f7fe febb 	bl	8009e14 <_ZN8touchgfx3Box8setColorENS_9colortypeE>
        borderBox.setBorderColor(T::getPressed() ? borderDown : borderUp);
 800b09e:	687b      	ldr	r3, [r7, #4]
 800b0a0:	f103 0434 	add.w	r4, r3, #52	@ 0x34
 800b0a4:	687b      	ldr	r3, [r7, #4]
 800b0a6:	4618      	mov	r0, r3
 800b0a8:	f7ff f87e 	bl	800a1a8 <_ZNK8touchgfx23AbstractButtonContainer10getPressedEv>
 800b0ac:	4603      	mov	r3, r0
 800b0ae:	2b00      	cmp	r3, #0
 800b0b0:	d002      	beq.n	800b0b8 <_ZN8touchgfx24BoxWithBorderButtonStyleINS_18ClickButtonTriggerEE20handlePressedUpdatedEv+0x48>
 800b0b2:	687b      	ldr	r3, [r7, #4]
 800b0b4:	3374      	adds	r3, #116	@ 0x74
 800b0b6:	e001      	b.n	800b0bc <_ZN8touchgfx24BoxWithBorderButtonStyleINS_18ClickButtonTriggerEE20handlePressedUpdatedEv+0x4c>
 800b0b8:	687b      	ldr	r3, [r7, #4]
 800b0ba:	3370      	adds	r3, #112	@ 0x70
 800b0bc:	6819      	ldr	r1, [r3, #0]
 800b0be:	4620      	mov	r0, r4
 800b0c0:	f7ff f914 	bl	800a2ec <_ZN8touchgfx13BoxWithBorder14setBorderColorENS_9colortypeE>
        T::handlePressedUpdated();
 800b0c4:	687b      	ldr	r3, [r7, #4]
 800b0c6:	4618      	mov	r0, r3
 800b0c8:	f7ff f8bd 	bl	800a246 <_ZN8touchgfx23AbstractButtonContainer20handlePressedUpdatedEv>
    }
 800b0cc:	bf00      	nop
 800b0ce:	370c      	adds	r7, #12
 800b0d0:	46bd      	mov	sp, r7
 800b0d2:	bd90      	pop	{r4, r7, pc}

0800b0d4 <_ZN8touchgfx8CallbackI23humidity_screenViewBaseRKNS_14AbstractButtonEvvED1Ev>:
struct Callback<dest_type, T1, void, void> : public GenericCallback<T1>
 800b0d4:	b580      	push	{r7, lr}
 800b0d6:	b082      	sub	sp, #8
 800b0d8:	af00      	add	r7, sp, #0
 800b0da:	6078      	str	r0, [r7, #4]
 800b0dc:	4a05      	ldr	r2, [pc, #20]	@ (800b0f4 <_ZN8touchgfx8CallbackI23humidity_screenViewBaseRKNS_14AbstractButtonEvvED1Ev+0x20>)
 800b0de:	687b      	ldr	r3, [r7, #4]
 800b0e0:	601a      	str	r2, [r3, #0]
 800b0e2:	687b      	ldr	r3, [r7, #4]
 800b0e4:	4618      	mov	r0, r3
 800b0e6:	f7ff ffa3 	bl	800b030 <_ZN8touchgfx15GenericCallbackIRKNS_14AbstractButtonEvvED1Ev>
 800b0ea:	687b      	ldr	r3, [r7, #4]
 800b0ec:	4618      	mov	r0, r3
 800b0ee:	3708      	adds	r7, #8
 800b0f0:	46bd      	mov	sp, r7
 800b0f2:	bd80      	pop	{r7, pc}
 800b0f4:	080281a4 	.word	0x080281a4

0800b0f8 <_ZN8touchgfx8CallbackI23humidity_screenViewBaseRKNS_14AbstractButtonEvvED0Ev>:
 800b0f8:	b580      	push	{r7, lr}
 800b0fa:	b082      	sub	sp, #8
 800b0fc:	af00      	add	r7, sp, #0
 800b0fe:	6078      	str	r0, [r7, #4]
 800b100:	6878      	ldr	r0, [r7, #4]
 800b102:	f7ff ffe7 	bl	800b0d4 <_ZN8touchgfx8CallbackI23humidity_screenViewBaseRKNS_14AbstractButtonEvvED1Ev>
 800b106:	2110      	movs	r1, #16
 800b108:	6878      	ldr	r0, [r7, #4]
 800b10a:	f01a fcc2 	bl	8025a92 <_ZdlPvj>
 800b10e:	687b      	ldr	r3, [r7, #4]
 800b110:	4618      	mov	r0, r3
 800b112:	3708      	adds	r7, #8
 800b114:	46bd      	mov	sp, r7
 800b116:	bd80      	pop	{r7, pc}

0800b118 <_ZN8touchgfx8CallbackI23humidity_screenViewBaseRKNS_23AbstractButtonContainerEvvED1Ev>:
 800b118:	b580      	push	{r7, lr}
 800b11a:	b082      	sub	sp, #8
 800b11c:	af00      	add	r7, sp, #0
 800b11e:	6078      	str	r0, [r7, #4]
 800b120:	4a05      	ldr	r2, [pc, #20]	@ (800b138 <_ZN8touchgfx8CallbackI23humidity_screenViewBaseRKNS_23AbstractButtonContainerEvvED1Ev+0x20>)
 800b122:	687b      	ldr	r3, [r7, #4]
 800b124:	601a      	str	r2, [r3, #0]
 800b126:	687b      	ldr	r3, [r7, #4]
 800b128:	4618      	mov	r0, r3
 800b12a:	f7ff ff61 	bl	800aff0 <_ZN8touchgfx15GenericCallbackIRKNS_23AbstractButtonContainerEvvED1Ev>
 800b12e:	687b      	ldr	r3, [r7, #4]
 800b130:	4618      	mov	r0, r3
 800b132:	3708      	adds	r7, #8
 800b134:	46bd      	mov	sp, r7
 800b136:	bd80      	pop	{r7, pc}
 800b138:	080281bc 	.word	0x080281bc

0800b13c <_ZN8touchgfx8CallbackI23humidity_screenViewBaseRKNS_23AbstractButtonContainerEvvED0Ev>:
 800b13c:	b580      	push	{r7, lr}
 800b13e:	b082      	sub	sp, #8
 800b140:	af00      	add	r7, sp, #0
 800b142:	6078      	str	r0, [r7, #4]
 800b144:	6878      	ldr	r0, [r7, #4]
 800b146:	f7ff ffe7 	bl	800b118 <_ZN8touchgfx8CallbackI23humidity_screenViewBaseRKNS_23AbstractButtonContainerEvvED1Ev>
 800b14a:	2110      	movs	r1, #16
 800b14c:	6878      	ldr	r0, [r7, #4]
 800b14e:	f01a fca0 	bl	8025a92 <_ZdlPvj>
 800b152:	687b      	ldr	r3, [r7, #4]
 800b154:	4618      	mov	r0, r3
 800b156:	3708      	adds	r7, #8
 800b158:	46bd      	mov	sp, r7
 800b15a:	bd80      	pop	{r7, pc}

0800b15c <_ZN8touchgfx24BoxWithBorderButtonStyleINS_18ClickButtonTriggerEED1Ev>:
class BoxWithBorderButtonStyle : public T
 800b15c:	b580      	push	{r7, lr}
 800b15e:	b082      	sub	sp, #8
 800b160:	af00      	add	r7, sp, #0
 800b162:	6078      	str	r0, [r7, #4]
 800b164:	4a08      	ldr	r2, [pc, #32]	@ (800b188 <_ZN8touchgfx24BoxWithBorderButtonStyleINS_18ClickButtonTriggerEED1Ev+0x2c>)
 800b166:	687b      	ldr	r3, [r7, #4]
 800b168:	601a      	str	r2, [r3, #0]
 800b16a:	687b      	ldr	r3, [r7, #4]
 800b16c:	3334      	adds	r3, #52	@ 0x34
 800b16e:	4618      	mov	r0, r3
 800b170:	f7ff fe2c 	bl	800adcc <_ZN8touchgfx13BoxWithBorderD1Ev>
 800b174:	687b      	ldr	r3, [r7, #4]
 800b176:	4618      	mov	r0, r3
 800b178:	f7ff fe06 	bl	800ad88 <_ZN8touchgfx18ClickButtonTriggerD1Ev>
 800b17c:	687b      	ldr	r3, [r7, #4]
 800b17e:	4618      	mov	r0, r3
 800b180:	3708      	adds	r7, #8
 800b182:	46bd      	mov	sp, r7
 800b184:	bd80      	pop	{r7, pc}
 800b186:	bf00      	nop
 800b188:	080281d4 	.word	0x080281d4

0800b18c <_ZN8touchgfx24BoxWithBorderButtonStyleINS_18ClickButtonTriggerEED0Ev>:
 800b18c:	b580      	push	{r7, lr}
 800b18e:	b082      	sub	sp, #8
 800b190:	af00      	add	r7, sp, #0
 800b192:	6078      	str	r0, [r7, #4]
 800b194:	6878      	ldr	r0, [r7, #4]
 800b196:	f7ff ffe1 	bl	800b15c <_ZN8touchgfx24BoxWithBorderButtonStyleINS_18ClickButtonTriggerEED1Ev>
 800b19a:	2178      	movs	r1, #120	@ 0x78
 800b19c:	6878      	ldr	r0, [r7, #4]
 800b19e:	f01a fc78 	bl	8025a92 <_ZdlPvj>
 800b1a2:	687b      	ldr	r3, [r7, #4]
 800b1a4:	4618      	mov	r0, r3
 800b1a6:	3708      	adds	r7, #8
 800b1a8:	46bd      	mov	sp, r7
 800b1aa:	bd80      	pop	{r7, pc}

0800b1ac <_ZN8touchgfx23TextAreaWithOneWildcardD1Ev>:
class TextAreaWithOneWildcard : public TextAreaWithWildcardBase
 800b1ac:	b580      	push	{r7, lr}
 800b1ae:	b082      	sub	sp, #8
 800b1b0:	af00      	add	r7, sp, #0
 800b1b2:	6078      	str	r0, [r7, #4]
 800b1b4:	4a05      	ldr	r2, [pc, #20]	@ (800b1cc <_ZN8touchgfx23TextAreaWithOneWildcardD1Ev+0x20>)
 800b1b6:	687b      	ldr	r3, [r7, #4]
 800b1b8:	601a      	str	r2, [r3, #0]
 800b1ba:	687b      	ldr	r3, [r7, #4]
 800b1bc:	4618      	mov	r0, r3
 800b1be:	f7ff f973 	bl	800a4a8 <_ZN8touchgfx24TextAreaWithWildcardBaseD1Ev>
 800b1c2:	687b      	ldr	r3, [r7, #4]
 800b1c4:	4618      	mov	r0, r3
 800b1c6:	3708      	adds	r7, #8
 800b1c8:	46bd      	mov	sp, r7
 800b1ca:	bd80      	pop	{r7, pc}
 800b1cc:	080282bc 	.word	0x080282bc

0800b1d0 <_ZN8touchgfx23TextAreaWithOneWildcardD0Ev>:
 800b1d0:	b580      	push	{r7, lr}
 800b1d2:	b082      	sub	sp, #8
 800b1d4:	af00      	add	r7, sp, #0
 800b1d6:	6078      	str	r0, [r7, #4]
 800b1d8:	6878      	ldr	r0, [r7, #4]
 800b1da:	f7ff ffe7 	bl	800b1ac <_ZN8touchgfx23TextAreaWithOneWildcardD1Ev>
 800b1de:	214c      	movs	r1, #76	@ 0x4c
 800b1e0:	6878      	ldr	r0, [r7, #4]
 800b1e2:	f01a fc56 	bl	8025a92 <_ZdlPvj>
 800b1e6:	687b      	ldr	r3, [r7, #4]
 800b1e8:	4618      	mov	r0, r3
 800b1ea:	3708      	adds	r7, #8
 800b1ec:	46bd      	mov	sp, r7
 800b1ee:	bd80      	pop	{r7, pc}

0800b1f0 <_ZN8touchgfx6ButtonD1Ev>:
{
/**
 * A button with two images. One image showing the unpressed button and one image showing the
 * pressed state.
 */
class Button : public AbstractButton
 800b1f0:	b580      	push	{r7, lr}
 800b1f2:	b082      	sub	sp, #8
 800b1f4:	af00      	add	r7, sp, #0
 800b1f6:	6078      	str	r0, [r7, #4]
 800b1f8:	4a05      	ldr	r2, [pc, #20]	@ (800b210 <_ZN8touchgfx6ButtonD1Ev+0x20>)
 800b1fa:	687b      	ldr	r3, [r7, #4]
 800b1fc:	601a      	str	r2, [r3, #0]
 800b1fe:	687b      	ldr	r3, [r7, #4]
 800b200:	4618      	mov	r0, r3
 800b202:	f7ff f9bf 	bl	800a584 <_ZN8touchgfx14AbstractButtonD1Ev>
 800b206:	687b      	ldr	r3, [r7, #4]
 800b208:	4618      	mov	r0, r3
 800b20a:	3708      	adds	r7, #8
 800b20c:	46bd      	mov	sp, r7
 800b20e:	bd80      	pop	{r7, pc}
 800b210:	08029200 	.word	0x08029200

0800b214 <_ZN8touchgfx6ButtonD0Ev>:
 800b214:	b580      	push	{r7, lr}
 800b216:	b082      	sub	sp, #8
 800b218:	af00      	add	r7, sp, #0
 800b21a:	6078      	str	r0, [r7, #4]
 800b21c:	6878      	ldr	r0, [r7, #4]
 800b21e:	f7ff ffe7 	bl	800b1f0 <_ZN8touchgfx6ButtonD1Ev>
 800b222:	2134      	movs	r1, #52	@ 0x34
 800b224:	6878      	ldr	r0, [r7, #4]
 800b226:	f01a fc34 	bl	8025a92 <_ZdlPvj>
 800b22a:	687b      	ldr	r3, [r7, #4]
 800b22c:	4618      	mov	r0, r3
 800b22e:	3708      	adds	r7, #8
 800b230:	46bd      	mov	sp, r7
 800b232:	bd80      	pop	{r7, pc}

0800b234 <_ZN8touchgfx14ButtonWithIconD1Ev>:
class ButtonWithIcon : public Button
 800b234:	b580      	push	{r7, lr}
 800b236:	b082      	sub	sp, #8
 800b238:	af00      	add	r7, sp, #0
 800b23a:	6078      	str	r0, [r7, #4]
 800b23c:	4a05      	ldr	r2, [pc, #20]	@ (800b254 <_ZN8touchgfx14ButtonWithIconD1Ev+0x20>)
 800b23e:	687b      	ldr	r3, [r7, #4]
 800b240:	601a      	str	r2, [r3, #0]
 800b242:	687b      	ldr	r3, [r7, #4]
 800b244:	4618      	mov	r0, r3
 800b246:	f7ff ffd3 	bl	800b1f0 <_ZN8touchgfx6ButtonD1Ev>
 800b24a:	687b      	ldr	r3, [r7, #4]
 800b24c:	4618      	mov	r0, r3
 800b24e:	3708      	adds	r7, #8
 800b250:	46bd      	mov	sp, r7
 800b252:	bd80      	pop	{r7, pc}
 800b254:	0802936c 	.word	0x0802936c

0800b258 <_ZN8touchgfx14ButtonWithIconD0Ev>:
 800b258:	b580      	push	{r7, lr}
 800b25a:	b082      	sub	sp, #8
 800b25c:	af00      	add	r7, sp, #0
 800b25e:	6078      	str	r0, [r7, #4]
 800b260:	6878      	ldr	r0, [r7, #4]
 800b262:	f7ff ffe7 	bl	800b234 <_ZN8touchgfx14ButtonWithIconD1Ev>
 800b266:	213c      	movs	r1, #60	@ 0x3c
 800b268:	6878      	ldr	r0, [r7, #4]
 800b26a:	f01a fc12 	bl	8025a92 <_ZdlPvj>
 800b26e:	687b      	ldr	r3, [r7, #4]
 800b270:	4618      	mov	r0, r3
 800b272:	3708      	adds	r7, #8
 800b274:	46bd      	mov	sp, r7
 800b276:	bd80      	pop	{r7, pc}

0800b278 <_ZN8touchgfx8CallbackI23humidity_screenViewBaseRKNS_14AbstractButtonEvvE7executeES4_>:
    virtual void execute(T1 t1)
 800b278:	b580      	push	{r7, lr}
 800b27a:	b082      	sub	sp, #8
 800b27c:	af00      	add	r7, sp, #0
 800b27e:	6078      	str	r0, [r7, #4]
 800b280:	6039      	str	r1, [r7, #0]
        (pobject->*pmemfun)(t1);
 800b282:	687b      	ldr	r3, [r7, #4]
 800b284:	685b      	ldr	r3, [r3, #4]
 800b286:	687a      	ldr	r2, [r7, #4]
 800b288:	68d2      	ldr	r2, [r2, #12]
 800b28a:	1052      	asrs	r2, r2, #1
 800b28c:	1898      	adds	r0, r3, r2
 800b28e:	687b      	ldr	r3, [r7, #4]
 800b290:	68db      	ldr	r3, [r3, #12]
 800b292:	f003 0301 	and.w	r3, r3, #1
 800b296:	2b00      	cmp	r3, #0
 800b298:	d102      	bne.n	800b2a0 <_ZN8touchgfx8CallbackI23humidity_screenViewBaseRKNS_14AbstractButtonEvvE7executeES4_+0x28>
 800b29a:	687b      	ldr	r3, [r7, #4]
 800b29c:	689b      	ldr	r3, [r3, #8]
 800b29e:	e00a      	b.n	800b2b6 <_ZN8touchgfx8CallbackI23humidity_screenViewBaseRKNS_14AbstractButtonEvvE7executeES4_+0x3e>
 800b2a0:	687b      	ldr	r3, [r7, #4]
 800b2a2:	685b      	ldr	r3, [r3, #4]
 800b2a4:	687a      	ldr	r2, [r7, #4]
 800b2a6:	68d2      	ldr	r2, [r2, #12]
 800b2a8:	1052      	asrs	r2, r2, #1
 800b2aa:	4413      	add	r3, r2
 800b2ac:	681b      	ldr	r3, [r3, #0]
 800b2ae:	687a      	ldr	r2, [r7, #4]
 800b2b0:	6892      	ldr	r2, [r2, #8]
 800b2b2:	4413      	add	r3, r2
 800b2b4:	681b      	ldr	r3, [r3, #0]
 800b2b6:	6839      	ldr	r1, [r7, #0]
 800b2b8:	4798      	blx	r3
    }
 800b2ba:	bf00      	nop
 800b2bc:	3708      	adds	r7, #8
 800b2be:	46bd      	mov	sp, r7
 800b2c0:	bd80      	pop	{r7, pc}

0800b2c2 <_ZNK8touchgfx8CallbackI23humidity_screenViewBaseRKNS_14AbstractButtonEvvE7isValidEv>:
    virtual bool isValid() const
 800b2c2:	b480      	push	{r7}
 800b2c4:	b083      	sub	sp, #12
 800b2c6:	af00      	add	r7, sp, #0
 800b2c8:	6078      	str	r0, [r7, #4]
        return (pobject != 0) && (pmemfun != 0);
 800b2ca:	687b      	ldr	r3, [r7, #4]
 800b2cc:	685b      	ldr	r3, [r3, #4]
 800b2ce:	2b00      	cmp	r3, #0
 800b2d0:	d010      	beq.n	800b2f4 <_ZNK8touchgfx8CallbackI23humidity_screenViewBaseRKNS_14AbstractButtonEvvE7isValidEv+0x32>
 800b2d2:	687b      	ldr	r3, [r7, #4]
 800b2d4:	689b      	ldr	r3, [r3, #8]
 800b2d6:	2b00      	cmp	r3, #0
 800b2d8:	d107      	bne.n	800b2ea <_ZNK8touchgfx8CallbackI23humidity_screenViewBaseRKNS_14AbstractButtonEvvE7isValidEv+0x28>
 800b2da:	687b      	ldr	r3, [r7, #4]
 800b2dc:	68db      	ldr	r3, [r3, #12]
 800b2de:	f003 0301 	and.w	r3, r3, #1
 800b2e2:	2b00      	cmp	r3, #0
 800b2e4:	d101      	bne.n	800b2ea <_ZNK8touchgfx8CallbackI23humidity_screenViewBaseRKNS_14AbstractButtonEvvE7isValidEv+0x28>
 800b2e6:	2301      	movs	r3, #1
 800b2e8:	e000      	b.n	800b2ec <_ZNK8touchgfx8CallbackI23humidity_screenViewBaseRKNS_14AbstractButtonEvvE7isValidEv+0x2a>
 800b2ea:	2300      	movs	r3, #0
 800b2ec:	2b01      	cmp	r3, #1
 800b2ee:	d001      	beq.n	800b2f4 <_ZNK8touchgfx8CallbackI23humidity_screenViewBaseRKNS_14AbstractButtonEvvE7isValidEv+0x32>
 800b2f0:	2301      	movs	r3, #1
 800b2f2:	e000      	b.n	800b2f6 <_ZNK8touchgfx8CallbackI23humidity_screenViewBaseRKNS_14AbstractButtonEvvE7isValidEv+0x34>
 800b2f4:	2300      	movs	r3, #0
    }
 800b2f6:	4618      	mov	r0, r3
 800b2f8:	370c      	adds	r7, #12
 800b2fa:	46bd      	mov	sp, r7
 800b2fc:	f85d 7b04 	ldr.w	r7, [sp], #4
 800b300:	4770      	bx	lr

0800b302 <_ZN8touchgfx8CallbackI23humidity_screenViewBaseRKNS_23AbstractButtonContainerEvvE7executeES4_>:
    virtual void execute(T1 t1)
 800b302:	b580      	push	{r7, lr}
 800b304:	b082      	sub	sp, #8
 800b306:	af00      	add	r7, sp, #0
 800b308:	6078      	str	r0, [r7, #4]
 800b30a:	6039      	str	r1, [r7, #0]
        (pobject->*pmemfun)(t1);
 800b30c:	687b      	ldr	r3, [r7, #4]
 800b30e:	685b      	ldr	r3, [r3, #4]
 800b310:	687a      	ldr	r2, [r7, #4]
 800b312:	68d2      	ldr	r2, [r2, #12]
 800b314:	1052      	asrs	r2, r2, #1
 800b316:	1898      	adds	r0, r3, r2
 800b318:	687b      	ldr	r3, [r7, #4]
 800b31a:	68db      	ldr	r3, [r3, #12]
 800b31c:	f003 0301 	and.w	r3, r3, #1
 800b320:	2b00      	cmp	r3, #0
 800b322:	d102      	bne.n	800b32a <_ZN8touchgfx8CallbackI23humidity_screenViewBaseRKNS_23AbstractButtonContainerEvvE7executeES4_+0x28>
 800b324:	687b      	ldr	r3, [r7, #4]
 800b326:	689b      	ldr	r3, [r3, #8]
 800b328:	e00a      	b.n	800b340 <_ZN8touchgfx8CallbackI23humidity_screenViewBaseRKNS_23AbstractButtonContainerEvvE7executeES4_+0x3e>
 800b32a:	687b      	ldr	r3, [r7, #4]
 800b32c:	685b      	ldr	r3, [r3, #4]
 800b32e:	687a      	ldr	r2, [r7, #4]
 800b330:	68d2      	ldr	r2, [r2, #12]
 800b332:	1052      	asrs	r2, r2, #1
 800b334:	4413      	add	r3, r2
 800b336:	681b      	ldr	r3, [r3, #0]
 800b338:	687a      	ldr	r2, [r7, #4]
 800b33a:	6892      	ldr	r2, [r2, #8]
 800b33c:	4413      	add	r3, r2
 800b33e:	681b      	ldr	r3, [r3, #0]
 800b340:	6839      	ldr	r1, [r7, #0]
 800b342:	4798      	blx	r3
    }
 800b344:	bf00      	nop
 800b346:	3708      	adds	r7, #8
 800b348:	46bd      	mov	sp, r7
 800b34a:	bd80      	pop	{r7, pc}

0800b34c <_ZNK8touchgfx8CallbackI23humidity_screenViewBaseRKNS_23AbstractButtonContainerEvvE7isValidEv>:
    virtual bool isValid() const
 800b34c:	b480      	push	{r7}
 800b34e:	b083      	sub	sp, #12
 800b350:	af00      	add	r7, sp, #0
 800b352:	6078      	str	r0, [r7, #4]
        return (pobject != 0) && (pmemfun != 0);
 800b354:	687b      	ldr	r3, [r7, #4]
 800b356:	685b      	ldr	r3, [r3, #4]
 800b358:	2b00      	cmp	r3, #0
 800b35a:	d010      	beq.n	800b37e <_ZNK8touchgfx8CallbackI23humidity_screenViewBaseRKNS_23AbstractButtonContainerEvvE7isValidEv+0x32>
 800b35c:	687b      	ldr	r3, [r7, #4]
 800b35e:	689b      	ldr	r3, [r3, #8]
 800b360:	2b00      	cmp	r3, #0
 800b362:	d107      	bne.n	800b374 <_ZNK8touchgfx8CallbackI23humidity_screenViewBaseRKNS_23AbstractButtonContainerEvvE7isValidEv+0x28>
 800b364:	687b      	ldr	r3, [r7, #4]
 800b366:	68db      	ldr	r3, [r3, #12]
 800b368:	f003 0301 	and.w	r3, r3, #1
 800b36c:	2b00      	cmp	r3, #0
 800b36e:	d101      	bne.n	800b374 <_ZNK8touchgfx8CallbackI23humidity_screenViewBaseRKNS_23AbstractButtonContainerEvvE7isValidEv+0x28>
 800b370:	2301      	movs	r3, #1
 800b372:	e000      	b.n	800b376 <_ZNK8touchgfx8CallbackI23humidity_screenViewBaseRKNS_23AbstractButtonContainerEvvE7isValidEv+0x2a>
 800b374:	2300      	movs	r3, #0
 800b376:	2b01      	cmp	r3, #1
 800b378:	d001      	beq.n	800b37e <_ZNK8touchgfx8CallbackI23humidity_screenViewBaseRKNS_23AbstractButtonContainerEvvE7isValidEv+0x32>
 800b37a:	2301      	movs	r3, #1
 800b37c:	e000      	b.n	800b380 <_ZNK8touchgfx8CallbackI23humidity_screenViewBaseRKNS_23AbstractButtonContainerEvvE7isValidEv+0x34>
 800b37e:	2300      	movs	r3, #0
    }
 800b380:	4618      	mov	r0, r3
 800b382:	370c      	adds	r7, #12
 800b384:	46bd      	mov	sp, r7
 800b386:	f85d 7b04 	ldr.w	r7, [sp], #4
 800b38a:	4770      	bx	lr

0800b38c <_ZN8touchgfx24BoxWithBorderButtonStyleINS_18ClickButtonTriggerEE18handleAlphaUpdatedEv>:

    /** @copydoc AbstractButtonContainer::handleAlphaUpdated() */
    virtual void handleAlphaUpdated()
 800b38c:	b590      	push	{r4, r7, lr}
 800b38e:	b083      	sub	sp, #12
 800b390:	af00      	add	r7, sp, #0
 800b392:	6078      	str	r0, [r7, #4]
    {
        borderBox.setAlpha(T::getAlpha());
 800b394:	687b      	ldr	r3, [r7, #4]
 800b396:	f103 0434 	add.w	r4, r3, #52	@ 0x34
 800b39a:	687b      	ldr	r3, [r7, #4]
 800b39c:	4618      	mov	r0, r3
 800b39e:	f7fe ff10 	bl	800a1c2 <_ZNK8touchgfx23AbstractButtonContainer8getAlphaEv>
 800b3a2:	4603      	mov	r3, r0
 800b3a4:	4619      	mov	r1, r3
 800b3a6:	4620      	mov	r0, r4
 800b3a8:	f7fe fd42 	bl	8009e30 <_ZN8touchgfx3Box8setAlphaEh>
        T::handleAlphaUpdated();
 800b3ac:	687b      	ldr	r3, [r7, #4]
 800b3ae:	4618      	mov	r0, r3
 800b3b0:	f7fe ff53 	bl	800a25a <_ZN8touchgfx23AbstractButtonContainer18handleAlphaUpdatedEv>
    }
 800b3b4:	bf00      	nop
 800b3b6:	370c      	adds	r7, #12
 800b3b8:	46bd      	mov	sp, r7
 800b3ba:	bd90      	pop	{r4, r7, pc}

0800b3bc <_ZN20light_screenViewBase8increaseEv>:
    virtual void setupScreen();

    /*
     * Virtual Action Handlers
     */
    virtual void increase()
 800b3bc:	b480      	push	{r7}
 800b3be:	b083      	sub	sp, #12
 800b3c0:	af00      	add	r7, sp, #0
 800b3c2:	6078      	str	r0, [r7, #4]
    {
        // Override and implement this function in light_screen
    }
 800b3c4:	bf00      	nop
 800b3c6:	370c      	adds	r7, #12
 800b3c8:	46bd      	mov	sp, r7
 800b3ca:	f85d 7b04 	ldr.w	r7, [sp], #4
 800b3ce:	4770      	bx	lr

0800b3d0 <_ZN20light_screenViewBase8decreaseEv>:
    virtual void decrease()
 800b3d0:	b480      	push	{r7}
 800b3d2:	b083      	sub	sp, #12
 800b3d4:	af00      	add	r7, sp, #0
 800b3d6:	6078      	str	r0, [r7, #4]
    {
        // Override and implement this function in light_screen
    }
 800b3d8:	bf00      	nop
 800b3da:	370c      	adds	r7, #12
 800b3dc:	46bd      	mov	sp, r7
 800b3de:	f85d 7b04 	ldr.w	r7, [sp], #4
 800b3e2:	4770      	bx	lr

0800b3e4 <_ZN20light_screenViewBase11applicationEv>:

protected:
    FrontendApplication& application() {
 800b3e4:	b580      	push	{r7, lr}
 800b3e6:	b082      	sub	sp, #8
 800b3e8:	af00      	add	r7, sp, #0
 800b3ea:	6078      	str	r0, [r7, #4]
        return *static_cast<FrontendApplication*>(touchgfx::Application::getInstance());
 800b3ec:	f008 fdf8 	bl	8013fe0 <_ZN8touchgfx11Application11getInstanceEv>
 800b3f0:	4603      	mov	r3, r0
    }
 800b3f2:	4618      	mov	r0, r3
 800b3f4:	3708      	adds	r7, #8
 800b3f6:	46bd      	mov	sp, r7
 800b3f8:	bd80      	pop	{r7, pc}
	...

0800b3fc <_ZN8touchgfx4ViewI21light_screenPresenterED1Ev>:
class View : public Screen
 800b3fc:	b580      	push	{r7, lr}
 800b3fe:	b082      	sub	sp, #8
 800b400:	af00      	add	r7, sp, #0
 800b402:	6078      	str	r0, [r7, #4]
 800b404:	4a05      	ldr	r2, [pc, #20]	@ (800b41c <_ZN8touchgfx4ViewI21light_screenPresenterED1Ev+0x20>)
 800b406:	687b      	ldr	r3, [r7, #4]
 800b408:	601a      	str	r2, [r3, #0]
 800b40a:	687b      	ldr	r3, [r7, #4]
 800b40c:	4618      	mov	r0, r3
 800b40e:	f7fe fc41 	bl	8009c94 <_ZN8touchgfx6ScreenD1Ev>
 800b412:	687b      	ldr	r3, [r7, #4]
 800b414:	4618      	mov	r0, r3
 800b416:	3708      	adds	r7, #8
 800b418:	46bd      	mov	sp, r7
 800b41a:	bd80      	pop	{r7, pc}
 800b41c:	08028570 	.word	0x08028570

0800b420 <_ZN8touchgfx4ViewI21light_screenPresenterED0Ev>:
 800b420:	b580      	push	{r7, lr}
 800b422:	b082      	sub	sp, #8
 800b424:	af00      	add	r7, sp, #0
 800b426:	6078      	str	r0, [r7, #4]
 800b428:	6878      	ldr	r0, [r7, #4]
 800b42a:	f7ff ffe7 	bl	800b3fc <_ZN8touchgfx4ViewI21light_screenPresenterED1Ev>
 800b42e:	2140      	movs	r1, #64	@ 0x40
 800b430:	6878      	ldr	r0, [r7, #4]
 800b432:	f01a fb2e 	bl	8025a92 <_ZdlPvj>
 800b436:	687b      	ldr	r3, [r7, #4]
 800b438:	4618      	mov	r0, r3
 800b43a:	3708      	adds	r7, #8
 800b43c:	46bd      	mov	sp, r7
 800b43e:	bd80      	pop	{r7, pc}

0800b440 <_ZN20light_screenViewBaseC1Ev>:
#include <gui_generated/light_screen_screen/light_screenViewBase.hpp>
#include <touchgfx/Color.hpp>
#include <texts/TextKeysAndLanguages.hpp>
#include <images/BitmapDatabase.hpp>

light_screenViewBase::light_screenViewBase() :
 800b440:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 800b444:	b0ae      	sub	sp, #184	@ 0xb8
 800b446:	af02      	add	r7, sp, #8
 800b448:	6178      	str	r0, [r7, #20]
    flexButtonCallback(this, &light_screenViewBase::flexButtonCallbackHandler),
    buttonCallback(this, &light_screenViewBase::buttonCallbackHandler)
 800b44a:	697b      	ldr	r3, [r7, #20]
 800b44c:	4618      	mov	r0, r3
 800b44e:	f000 fb37 	bl	800bac0 <_ZN8touchgfx4ViewI21light_screenPresenterEC1Ev>
 800b452:	4add      	ldr	r2, [pc, #884]	@ (800b7c8 <_ZN20light_screenViewBaseC1Ev+0x388>)
 800b454:	697b      	ldr	r3, [r7, #20]
 800b456:	601a      	str	r2, [r3, #0]
 800b458:	697b      	ldr	r3, [r7, #20]
 800b45a:	3340      	adds	r3, #64	@ 0x40
 800b45c:	4618      	mov	r0, r3
 800b45e:	f7fe fcb5 	bl	8009dcc <_ZN8touchgfx3BoxC1Ev>
 800b462:	697b      	ldr	r3, [r7, #20]
 800b464:	336c      	adds	r3, #108	@ 0x6c
 800b466:	4618      	mov	r0, r3
 800b468:	f7fe fd08 	bl	8009e7c <_ZN8touchgfx8TextAreaC1Ev>
 800b46c:	697b      	ldr	r3, [r7, #20]
 800b46e:	33b4      	adds	r3, #180	@ 0xb4
 800b470:	4618      	mov	r0, r3
 800b472:	f7ff fccd 	bl	800ae10 <_ZN8touchgfx24BoxWithBorderButtonStyleINS_18ClickButtonTriggerEEC1Ev>
 800b476:	697b      	ldr	r3, [r7, #20]
 800b478:	f503 7396 	add.w	r3, r3, #300	@ 0x12c
 800b47c:	4618      	mov	r0, r3
 800b47e:	f7ff f835 	bl	800a4ec <_ZN8touchgfx23TextAreaWithOneWildcardC1Ev>
 800b482:	697b      	ldr	r3, [r7, #20]
 800b484:	f503 73bc 	add.w	r3, r3, #376	@ 0x178
 800b488:	4618      	mov	r0, r3
 800b48a:	f007 f8a7 	bl	80125dc <_ZN8touchgfx14ButtonWithIconC1Ev>
 800b48e:	697b      	ldr	r3, [r7, #20]
 800b490:	f503 73da 	add.w	r3, r3, #436	@ 0x1b4
 800b494:	4618      	mov	r0, r3
 800b496:	f007 f8a1 	bl	80125dc <_ZN8touchgfx14ButtonWithIconC1Ev>
    flexButtonCallback(this, &light_screenViewBase::flexButtonCallbackHandler),
 800b49a:	697b      	ldr	r3, [r7, #20]
 800b49c:	f503 7001 	add.w	r0, r3, #516	@ 0x204
 800b4a0:	4bca      	ldr	r3, [pc, #808]	@ (800b7cc <_ZN20light_screenViewBaseC1Ev+0x38c>)
 800b4a2:	627b      	str	r3, [r7, #36]	@ 0x24
 800b4a4:	2300      	movs	r3, #0
 800b4a6:	62bb      	str	r3, [r7, #40]	@ 0x28
 800b4a8:	f107 0324 	add.w	r3, r7, #36	@ 0x24
 800b4ac:	cb0c      	ldmia	r3, {r2, r3}
 800b4ae:	6979      	ldr	r1, [r7, #20]
 800b4b0:	f000 fb1c 	bl	800baec <_ZN8touchgfx8CallbackI20light_screenViewBaseRKNS_23AbstractButtonContainerEvvEC1EPS1_MS1_FvS4_E>
    buttonCallback(this, &light_screenViewBase::buttonCallbackHandler)
 800b4b4:	697b      	ldr	r3, [r7, #20]
 800b4b6:	f503 7005 	add.w	r0, r3, #532	@ 0x214
 800b4ba:	4bc5      	ldr	r3, [pc, #788]	@ (800b7d0 <_ZN20light_screenViewBaseC1Ev+0x390>)
 800b4bc:	62fb      	str	r3, [r7, #44]	@ 0x2c
 800b4be:	2300      	movs	r3, #0
 800b4c0:	633b      	str	r3, [r7, #48]	@ 0x30
 800b4c2:	f107 032c 	add.w	r3, r7, #44	@ 0x2c
 800b4c6:	cb0c      	ldmia	r3, {r2, r3}
 800b4c8:	6979      	ldr	r1, [r7, #20]
 800b4ca:	f000 fb2f 	bl	800bb2c <_ZN8touchgfx8CallbackI20light_screenViewBaseRKNS_14AbstractButtonEvvEC1EPS1_MS1_FvS4_E>
{
    __background.setPosition(0, 0, 480, 320);
 800b4ce:	697b      	ldr	r3, [r7, #20]
 800b4d0:	f103 0040 	add.w	r0, r3, #64	@ 0x40
 800b4d4:	f44f 73a0 	mov.w	r3, #320	@ 0x140
 800b4d8:	9300      	str	r3, [sp, #0]
 800b4da:	f44f 73f0 	mov.w	r3, #480	@ 0x1e0
 800b4de:	2200      	movs	r2, #0
 800b4e0:	2100      	movs	r1, #0
 800b4e2:	f7fe fa4d 	bl	8009980 <_ZN8touchgfx8Drawable11setPositionEssss>
    __background.setColor(touchgfx::Color::getColorFromRGB(0, 0, 0));
 800b4e6:	697b      	ldr	r3, [r7, #20]
 800b4e8:	f103 0440 	add.w	r4, r3, #64	@ 0x40
 800b4ec:	2300      	movs	r3, #0
 800b4ee:	f887 3084 	strb.w	r3, [r7, #132]	@ 0x84
 800b4f2:	2300      	movs	r3, #0
 800b4f4:	f887 3083 	strb.w	r3, [r7, #131]	@ 0x83
 800b4f8:	2300      	movs	r3, #0
 800b4fa:	f887 3082 	strb.w	r3, [r7, #130]	@ 0x82
 800b4fe:	f897 3084 	ldrb.w	r3, [r7, #132]	@ 0x84
 800b502:	041a      	lsls	r2, r3, #16
 800b504:	f897 3083 	ldrb.w	r3, [r7, #131]	@ 0x83
 800b508:	021b      	lsls	r3, r3, #8
 800b50a:	431a      	orrs	r2, r3
 800b50c:	f897 3082 	ldrb.w	r3, [r7, #130]	@ 0x82
 800b510:	4313      	orrs	r3, r2
 800b512:	f043 427f 	orr.w	r2, r3, #4278190080	@ 0xff000000
 800b516:	f107 037c 	add.w	r3, r7, #124	@ 0x7c
 800b51a:	4611      	mov	r1, r2
 800b51c:	4618      	mov	r0, r3
 800b51e:	f7fe f95f 	bl	80097e0 <_ZN8touchgfx9colortypeC1Em>
 800b522:	6ffb      	ldr	r3, [r7, #124]	@ 0x7c
 800b524:	4619      	mov	r1, r3
 800b526:	4620      	mov	r0, r4
 800b528:	f7fe fc74 	bl	8009e14 <_ZN8touchgfx3Box8setColorENS_9colortypeE>
    add(__background);
 800b52c:	697a      	ldr	r2, [r7, #20]
 800b52e:	697b      	ldr	r3, [r7, #20]
 800b530:	3340      	adds	r3, #64	@ 0x40
 800b532:	4619      	mov	r1, r3
 800b534:	4610      	mov	r0, r2
 800b536:	f7fe fc05 	bl	8009d44 <_ZN8touchgfx6Screen3addERNS_8DrawableE>

    text.setPosition(87, 18, 306, 48);
 800b53a:	697b      	ldr	r3, [r7, #20]
 800b53c:	f103 006c 	add.w	r0, r3, #108	@ 0x6c
 800b540:	2330      	movs	r3, #48	@ 0x30
 800b542:	9300      	str	r3, [sp, #0]
 800b544:	f44f 7399 	mov.w	r3, #306	@ 0x132
 800b548:	2212      	movs	r2, #18
 800b54a:	2157      	movs	r1, #87	@ 0x57
 800b54c:	f7fe fa18 	bl	8009980 <_ZN8touchgfx8Drawable11setPositionEssss>
    text.setColor(touchgfx::Color::getColorFromRGB(255, 255, 255));
 800b550:	697b      	ldr	r3, [r7, #20]
 800b552:	f103 046c 	add.w	r4, r3, #108	@ 0x6c
 800b556:	23ff      	movs	r3, #255	@ 0xff
 800b558:	f887 3087 	strb.w	r3, [r7, #135]	@ 0x87
 800b55c:	23ff      	movs	r3, #255	@ 0xff
 800b55e:	f887 3086 	strb.w	r3, [r7, #134]	@ 0x86
 800b562:	23ff      	movs	r3, #255	@ 0xff
 800b564:	f887 3085 	strb.w	r3, [r7, #133]	@ 0x85
 800b568:	f897 3087 	ldrb.w	r3, [r7, #135]	@ 0x87
 800b56c:	041a      	lsls	r2, r3, #16
 800b56e:	f897 3086 	ldrb.w	r3, [r7, #134]	@ 0x86
 800b572:	021b      	lsls	r3, r3, #8
 800b574:	431a      	orrs	r2, r3
 800b576:	f897 3085 	ldrb.w	r3, [r7, #133]	@ 0x85
 800b57a:	4313      	orrs	r3, r2
 800b57c:	f043 427f 	orr.w	r2, r3, #4278190080	@ 0xff000000
 800b580:	f107 0378 	add.w	r3, r7, #120	@ 0x78
 800b584:	4611      	mov	r1, r2
 800b586:	4618      	mov	r0, r3
 800b588:	f7fe f92a 	bl	80097e0 <_ZN8touchgfx9colortypeC1Em>
 800b58c:	6fbb      	ldr	r3, [r7, #120]	@ 0x78
 800b58e:	f8c7 4088 	str.w	r4, [r7, #136]	@ 0x88
 800b592:	623b      	str	r3, [r7, #32]
        color = newColor;
 800b594:	f8d7 3088 	ldr.w	r3, [r7, #136]	@ 0x88
 800b598:	6a3a      	ldr	r2, [r7, #32]
 800b59a:	631a      	str	r2, [r3, #48]	@ 0x30
    }
 800b59c:	bf00      	nop
    text.setLinespacing(0);
 800b59e:	697b      	ldr	r3, [r7, #20]
 800b5a0:	336c      	adds	r3, #108	@ 0x6c
 800b5a2:	f8c7 3090 	str.w	r3, [r7, #144]	@ 0x90
 800b5a6:	2300      	movs	r3, #0
 800b5a8:	f8a7 308e 	strh.w	r3, [r7, #142]	@ 0x8e
        linespace = space;
 800b5ac:	f8d7 3090 	ldr.w	r3, [r7, #144]	@ 0x90
 800b5b0:	f8b7 208e 	ldrh.w	r2, [r7, #142]	@ 0x8e
 800b5b4:	869a      	strh	r2, [r3, #52]	@ 0x34
        boundingArea = calculateBoundingArea();
 800b5b6:	f8d7 3090 	ldr.w	r3, [r7, #144]	@ 0x90
 800b5ba:	681b      	ldr	r3, [r3, #0]
 800b5bc:	3384      	adds	r3, #132	@ 0x84
 800b5be:	681b      	ldr	r3, [r3, #0]
 800b5c0:	f8d7 4090 	ldr.w	r4, [r7, #144]	@ 0x90
 800b5c4:	463a      	mov	r2, r7
 800b5c6:	f8d7 1090 	ldr.w	r1, [r7, #144]	@ 0x90
 800b5ca:	4610      	mov	r0, r2
 800b5cc:	4798      	blx	r3
 800b5ce:	f104 033c 	add.w	r3, r4, #60	@ 0x3c
 800b5d2:	463a      	mov	r2, r7
 800b5d4:	ca07      	ldmia	r2, {r0, r1, r2}
 800b5d6:	e883 0007 	stmia.w	r3, {r0, r1, r2}
    }
 800b5da:	bf00      	nop
    text.setTypedText(touchgfx::TypedText(T___SINGLEUSE_MZWR));
 800b5dc:	697b      	ldr	r3, [r7, #20]
 800b5de:	f103 046c 	add.w	r4, r3, #108	@ 0x6c
 800b5e2:	f107 0334 	add.w	r3, r7, #52	@ 0x34
 800b5e6:	2106      	movs	r1, #6
 800b5e8:	4618      	mov	r0, r3
 800b5ea:	f7fe fc31 	bl	8009e50 <_ZN8touchgfx9TypedTextC1Et>
 800b5ee:	f107 0334 	add.w	r3, r7, #52	@ 0x34
 800b5f2:	4619      	mov	r1, r3
 800b5f4:	4620      	mov	r0, r4
 800b5f6:	f006 fd65 	bl	80120c4 <_ZN8touchgfx8TextArea12setTypedTextERKNS_9TypedTextE>
 800b5fa:	f107 0334 	add.w	r3, r7, #52	@ 0x34
 800b5fe:	4618      	mov	r0, r3
 800b600:	f7fc fd42 	bl	8008088 <_ZN8touchgfx9TypedTextD1Ev>
    add(text);
 800b604:	697a      	ldr	r2, [r7, #20]
 800b606:	697b      	ldr	r3, [r7, #20]
 800b608:	336c      	adds	r3, #108	@ 0x6c
 800b60a:	4619      	mov	r1, r3
 800b60c:	4610      	mov	r0, r2
 800b60e:	f7fe fb99 	bl	8009d44 <_ZN8touchgfx6Screen3addERNS_8DrawableE>

    flexButton1.setBoxWithBorderPosition(0, 0, 50, 50);
 800b612:	697b      	ldr	r3, [r7, #20]
 800b614:	f103 00b4 	add.w	r0, r3, #180	@ 0xb4
 800b618:	2332      	movs	r3, #50	@ 0x32
 800b61a:	9300      	str	r3, [sp, #0]
 800b61c:	2332      	movs	r3, #50	@ 0x32
 800b61e:	2200      	movs	r2, #0
 800b620:	2100      	movs	r1, #0
 800b622:	f7ff fc95 	bl	800af50 <_ZN8touchgfx24BoxWithBorderButtonStyleINS_18ClickButtonTriggerEE24setBoxWithBorderPositionEssss>
    flexButton1.setBorderSize(5);
 800b626:	697b      	ldr	r3, [r7, #20]
 800b628:	33b4      	adds	r3, #180	@ 0xb4
 800b62a:	2105      	movs	r1, #5
 800b62c:	4618      	mov	r0, r3
 800b62e:	f7ff fcaf 	bl	800af90 <_ZN8touchgfx24BoxWithBorderButtonStyleINS_18ClickButtonTriggerEE13setBorderSizeEh>
    flexButton1.setBoxWithBorderColors(touchgfx::Color::getColorFromRGB(0, 102, 153), touchgfx::Color::getColorFromRGB(0, 153, 204), touchgfx::Color::getColorFromRGB(0, 51, 102), touchgfx::Color::getColorFromRGB(51, 102, 153));
 800b632:	697b      	ldr	r3, [r7, #20]
 800b634:	f103 04b4 	add.w	r4, r3, #180	@ 0xb4
 800b638:	2300      	movs	r3, #0
 800b63a:	f887 3097 	strb.w	r3, [r7, #151]	@ 0x97
 800b63e:	2366      	movs	r3, #102	@ 0x66
 800b640:	f887 3096 	strb.w	r3, [r7, #150]	@ 0x96
 800b644:	2399      	movs	r3, #153	@ 0x99
 800b646:	f887 3095 	strb.w	r3, [r7, #149]	@ 0x95
 800b64a:	f897 3097 	ldrb.w	r3, [r7, #151]	@ 0x97
 800b64e:	041a      	lsls	r2, r3, #16
 800b650:	f897 3096 	ldrb.w	r3, [r7, #150]	@ 0x96
 800b654:	021b      	lsls	r3, r3, #8
 800b656:	431a      	orrs	r2, r3
 800b658:	f897 3095 	ldrb.w	r3, [r7, #149]	@ 0x95
 800b65c:	4313      	orrs	r3, r2
 800b65e:	f043 427f 	orr.w	r2, r3, #4278190080	@ 0xff000000
 800b662:	f107 0374 	add.w	r3, r7, #116	@ 0x74
 800b666:	4611      	mov	r1, r2
 800b668:	4618      	mov	r0, r3
 800b66a:	f7fe f8b9 	bl	80097e0 <_ZN8touchgfx9colortypeC1Em>
 800b66e:	6f7b      	ldr	r3, [r7, #116]	@ 0x74
 800b670:	461d      	mov	r5, r3
 800b672:	2300      	movs	r3, #0
 800b674:	f887 309a 	strb.w	r3, [r7, #154]	@ 0x9a
 800b678:	2399      	movs	r3, #153	@ 0x99
 800b67a:	f887 3099 	strb.w	r3, [r7, #153]	@ 0x99
 800b67e:	23cc      	movs	r3, #204	@ 0xcc
 800b680:	f887 3098 	strb.w	r3, [r7, #152]	@ 0x98
 800b684:	f897 309a 	ldrb.w	r3, [r7, #154]	@ 0x9a
 800b688:	041a      	lsls	r2, r3, #16
 800b68a:	f897 3099 	ldrb.w	r3, [r7, #153]	@ 0x99
 800b68e:	021b      	lsls	r3, r3, #8
 800b690:	431a      	orrs	r2, r3
 800b692:	f897 3098 	ldrb.w	r3, [r7, #152]	@ 0x98
 800b696:	4313      	orrs	r3, r2
 800b698:	f043 427f 	orr.w	r2, r3, #4278190080	@ 0xff000000
 800b69c:	f107 0370 	add.w	r3, r7, #112	@ 0x70
 800b6a0:	4611      	mov	r1, r2
 800b6a2:	4618      	mov	r0, r3
 800b6a4:	f7fe f89c 	bl	80097e0 <_ZN8touchgfx9colortypeC1Em>
 800b6a8:	6f3b      	ldr	r3, [r7, #112]	@ 0x70
 800b6aa:	461e      	mov	r6, r3
 800b6ac:	2300      	movs	r3, #0
 800b6ae:	f887 309d 	strb.w	r3, [r7, #157]	@ 0x9d
 800b6b2:	2333      	movs	r3, #51	@ 0x33
 800b6b4:	f887 309c 	strb.w	r3, [r7, #156]	@ 0x9c
 800b6b8:	2366      	movs	r3, #102	@ 0x66
 800b6ba:	f887 309b 	strb.w	r3, [r7, #155]	@ 0x9b
 800b6be:	f897 309d 	ldrb.w	r3, [r7, #157]	@ 0x9d
 800b6c2:	041a      	lsls	r2, r3, #16
 800b6c4:	f897 309c 	ldrb.w	r3, [r7, #156]	@ 0x9c
 800b6c8:	021b      	lsls	r3, r3, #8
 800b6ca:	431a      	orrs	r2, r3
 800b6cc:	f897 309b 	ldrb.w	r3, [r7, #155]	@ 0x9b
 800b6d0:	4313      	orrs	r3, r2
 800b6d2:	f043 427f 	orr.w	r2, r3, #4278190080	@ 0xff000000
 800b6d6:	f107 036c 	add.w	r3, r7, #108	@ 0x6c
 800b6da:	4611      	mov	r1, r2
 800b6dc:	4618      	mov	r0, r3
 800b6de:	f7fe f87f 	bl	80097e0 <_ZN8touchgfx9colortypeC1Em>
 800b6e2:	6efb      	ldr	r3, [r7, #108]	@ 0x6c
 800b6e4:	4698      	mov	r8, r3
 800b6e6:	2333      	movs	r3, #51	@ 0x33
 800b6e8:	f887 30a0 	strb.w	r3, [r7, #160]	@ 0xa0
 800b6ec:	2366      	movs	r3, #102	@ 0x66
 800b6ee:	f887 309f 	strb.w	r3, [r7, #159]	@ 0x9f
 800b6f2:	2399      	movs	r3, #153	@ 0x99
 800b6f4:	f887 309e 	strb.w	r3, [r7, #158]	@ 0x9e
 800b6f8:	f897 30a0 	ldrb.w	r3, [r7, #160]	@ 0xa0
 800b6fc:	041a      	lsls	r2, r3, #16
 800b6fe:	f897 309f 	ldrb.w	r3, [r7, #159]	@ 0x9f
 800b702:	021b      	lsls	r3, r3, #8
 800b704:	431a      	orrs	r2, r3
 800b706:	f897 309e 	ldrb.w	r3, [r7, #158]	@ 0x9e
 800b70a:	4313      	orrs	r3, r2
 800b70c:	f043 427f 	orr.w	r2, r3, #4278190080	@ 0xff000000
 800b710:	f107 0368 	add.w	r3, r7, #104	@ 0x68
 800b714:	4611      	mov	r1, r2
 800b716:	4618      	mov	r0, r3
 800b718:	f7fe f862 	bl	80097e0 <_ZN8touchgfx9colortypeC1Em>
 800b71c:	6ebb      	ldr	r3, [r7, #104]	@ 0x68
 800b71e:	9300      	str	r3, [sp, #0]
 800b720:	4643      	mov	r3, r8
 800b722:	4632      	mov	r2, r6
 800b724:	4629      	mov	r1, r5
 800b726:	4620      	mov	r0, r4
 800b728:	f7ff fc44 	bl	800afb4 <_ZN8touchgfx24BoxWithBorderButtonStyleINS_18ClickButtonTriggerEE22setBoxWithBorderColorsENS_9colortypeES3_S3_S3_>
    flexButton1.setAction(flexButtonCallback);
 800b72c:	697b      	ldr	r3, [r7, #20]
 800b72e:	f103 02b4 	add.w	r2, r3, #180	@ 0xb4
 800b732:	697b      	ldr	r3, [r7, #20]
 800b734:	f503 7301 	add.w	r3, r3, #516	@ 0x204
 800b738:	4619      	mov	r1, r3
 800b73a:	4610      	mov	r0, r2
 800b73c:	f7fe fd4e 	bl	800a1dc <_ZN8touchgfx23AbstractButtonContainer9setActionERNS_15GenericCallbackIRKS0_vvEE>
    flexButton1.setPosition(393, 245, 50, 50);
 800b740:	697b      	ldr	r3, [r7, #20]
 800b742:	f103 00b4 	add.w	r0, r3, #180	@ 0xb4
 800b746:	2332      	movs	r3, #50	@ 0x32
 800b748:	9300      	str	r3, [sp, #0]
 800b74a:	2332      	movs	r3, #50	@ 0x32
 800b74c:	22f5      	movs	r2, #245	@ 0xf5
 800b74e:	f240 1189 	movw	r1, #393	@ 0x189
 800b752:	f7fe f915 	bl	8009980 <_ZN8touchgfx8Drawable11setPositionEssss>
    add(flexButton1);
 800b756:	697a      	ldr	r2, [r7, #20]
 800b758:	697b      	ldr	r3, [r7, #20]
 800b75a:	33b4      	adds	r3, #180	@ 0xb4
 800b75c:	4619      	mov	r1, r3
 800b75e:	4610      	mov	r0, r2
 800b760:	f7fe faf0 	bl	8009d44 <_ZN8touchgfx6Screen3addERNS_8DrawableE>

    lightsVal.setPosition(131, 140, 200, 40);
 800b764:	697b      	ldr	r3, [r7, #20]
 800b766:	f503 7096 	add.w	r0, r3, #300	@ 0x12c
 800b76a:	2328      	movs	r3, #40	@ 0x28
 800b76c:	9300      	str	r3, [sp, #0]
 800b76e:	23c8      	movs	r3, #200	@ 0xc8
 800b770:	228c      	movs	r2, #140	@ 0x8c
 800b772:	2183      	movs	r1, #131	@ 0x83
 800b774:	f7fe f904 	bl	8009980 <_ZN8touchgfx8Drawable11setPositionEssss>
    lightsVal.setColor(touchgfx::Color::getColorFromRGB(255, 255, 255));
 800b778:	697b      	ldr	r3, [r7, #20]
 800b77a:	f503 7496 	add.w	r4, r3, #300	@ 0x12c
 800b77e:	23ff      	movs	r3, #255	@ 0xff
 800b780:	f887 30a3 	strb.w	r3, [r7, #163]	@ 0xa3
 800b784:	23ff      	movs	r3, #255	@ 0xff
 800b786:	f887 30a2 	strb.w	r3, [r7, #162]	@ 0xa2
 800b78a:	23ff      	movs	r3, #255	@ 0xff
 800b78c:	f887 30a1 	strb.w	r3, [r7, #161]	@ 0xa1
 800b790:	f897 30a3 	ldrb.w	r3, [r7, #163]	@ 0xa3
 800b794:	041a      	lsls	r2, r3, #16
 800b796:	f897 30a2 	ldrb.w	r3, [r7, #162]	@ 0xa2
 800b79a:	021b      	lsls	r3, r3, #8
 800b79c:	431a      	orrs	r2, r3
 800b79e:	f897 30a1 	ldrb.w	r3, [r7, #161]	@ 0xa1
 800b7a2:	4313      	orrs	r3, r2
 800b7a4:	f043 427f 	orr.w	r2, r3, #4278190080	@ 0xff000000
 800b7a8:	f107 0364 	add.w	r3, r7, #100	@ 0x64
 800b7ac:	4611      	mov	r1, r2
 800b7ae:	4618      	mov	r0, r3
 800b7b0:	f7fe f816 	bl	80097e0 <_ZN8touchgfx9colortypeC1Em>
 800b7b4:	6e7b      	ldr	r3, [r7, #100]	@ 0x64
 800b7b6:	f8c7 40a4 	str.w	r4, [r7, #164]	@ 0xa4
 800b7ba:	61fb      	str	r3, [r7, #28]
        color = newColor;
 800b7bc:	f8d7 30a4 	ldr.w	r3, [r7, #164]	@ 0xa4
 800b7c0:	69fa      	ldr	r2, [r7, #28]
 800b7c2:	631a      	str	r2, [r3, #48]	@ 0x30
    }
 800b7c4:	bf00      	nop
 800b7c6:	e005      	b.n	800b7d4 <_ZN20light_screenViewBaseC1Ev+0x394>
 800b7c8:	08028504 	.word	0x08028504
 800b7cc:	0800ba53 	.word	0x0800ba53
 800b7d0:	0800ba7d 	.word	0x0800ba7d
    lightsVal.setLinespacing(0);
 800b7d4:	697b      	ldr	r3, [r7, #20]
 800b7d6:	f503 7396 	add.w	r3, r3, #300	@ 0x12c
 800b7da:	f8c7 30ac 	str.w	r3, [r7, #172]	@ 0xac
 800b7de:	2300      	movs	r3, #0
 800b7e0:	f8a7 30aa 	strh.w	r3, [r7, #170]	@ 0xaa
        linespace = space;
 800b7e4:	f8d7 30ac 	ldr.w	r3, [r7, #172]	@ 0xac
 800b7e8:	f8b7 20aa 	ldrh.w	r2, [r7, #170]	@ 0xaa
 800b7ec:	869a      	strh	r2, [r3, #52]	@ 0x34
        boundingArea = calculateBoundingArea();
 800b7ee:	f8d7 30ac 	ldr.w	r3, [r7, #172]	@ 0xac
 800b7f2:	681b      	ldr	r3, [r3, #0]
 800b7f4:	3384      	adds	r3, #132	@ 0x84
 800b7f6:	681b      	ldr	r3, [r3, #0]
 800b7f8:	f8d7 40ac 	ldr.w	r4, [r7, #172]	@ 0xac
 800b7fc:	463a      	mov	r2, r7
 800b7fe:	f8d7 10ac 	ldr.w	r1, [r7, #172]	@ 0xac
 800b802:	4610      	mov	r0, r2
 800b804:	4798      	blx	r3
 800b806:	f104 033c 	add.w	r3, r4, #60	@ 0x3c
 800b80a:	463a      	mov	r2, r7
 800b80c:	ca07      	ldmia	r2, {r0, r1, r2}
 800b80e:	e883 0007 	stmia.w	r3, {r0, r1, r2}
    }
 800b812:	bf00      	nop
    lightsValBuffer[0] = 0;
 800b814:	697b      	ldr	r3, [r7, #20]
 800b816:	2200      	movs	r2, #0
 800b818:	f8a3 21f0 	strh.w	r2, [r3, #496]	@ 0x1f0
    lightsVal.setWildcard(lightsValBuffer);
 800b81c:	697b      	ldr	r3, [r7, #20]
 800b81e:	f503 7296 	add.w	r2, r3, #300	@ 0x12c
 800b822:	697b      	ldr	r3, [r7, #20]
 800b824:	f503 73f8 	add.w	r3, r3, #496	@ 0x1f0
 800b828:	4619      	mov	r1, r3
 800b82a:	4610      	mov	r0, r2
 800b82c:	f7fe fe8e 	bl	800a54c <_ZN8touchgfx23TextAreaWithOneWildcard11setWildcardEPKt>
    lightsVal.setTypedText(touchgfx::TypedText(T___SINGLEUSE_4NA0));
 800b830:	697b      	ldr	r3, [r7, #20]
 800b832:	f503 7496 	add.w	r4, r3, #300	@ 0x12c
 800b836:	f107 033c 	add.w	r3, r7, #60	@ 0x3c
 800b83a:	2105      	movs	r1, #5
 800b83c:	4618      	mov	r0, r3
 800b83e:	f7fe fb07 	bl	8009e50 <_ZN8touchgfx9TypedTextC1Et>
 800b842:	f107 033c 	add.w	r3, r7, #60	@ 0x3c
 800b846:	4619      	mov	r1, r3
 800b848:	4620      	mov	r0, r4
 800b84a:	f006 fc3b 	bl	80120c4 <_ZN8touchgfx8TextArea12setTypedTextERKNS_9TypedTextE>
 800b84e:	f107 033c 	add.w	r3, r7, #60	@ 0x3c
 800b852:	4618      	mov	r0, r3
 800b854:	f7fc fc18 	bl	8008088 <_ZN8touchgfx9TypedTextD1Ev>
    add(lightsVal);
 800b858:	697a      	ldr	r2, [r7, #20]
 800b85a:	697b      	ldr	r3, [r7, #20]
 800b85c:	f503 7396 	add.w	r3, r3, #300	@ 0x12c
 800b860:	4619      	mov	r1, r3
 800b862:	4610      	mov	r0, r2
 800b864:	f7fe fa6e 	bl	8009d44 <_ZN8touchgfx6Screen3addERNS_8DrawableE>

    buttonWithIcon1.setXY(111, 72);
 800b868:	697b      	ldr	r3, [r7, #20]
 800b86a:	f503 73bc 	add.w	r3, r3, #376	@ 0x178
 800b86e:	2248      	movs	r2, #72	@ 0x48
 800b870:	216f      	movs	r1, #111	@ 0x6f
 800b872:	4618      	mov	r0, r3
 800b874:	f7fe f8c3 	bl	80099fe <_ZN8touchgfx8Drawable5setXYEss>
    buttonWithIcon1.setBitmaps(touchgfx::Bitmap(BITMAP_ALTERNATE_THEME_IMAGES_WIDGETS_BUTTON_REGULAR_HEIGHT_50_MEDIUM_ROUNDED_NORMAL_ID), touchgfx::Bitmap(BITMAP_ALTERNATE_THEME_IMAGES_WIDGETS_BUTTON_REGULAR_HEIGHT_50_MEDIUM_ROUNDED_PRESSED_ID), touchgfx::Bitmap(BITMAP_ICON_THEME_IMAGES_NAVIGATION_ARROW_UPWARD_50_50_E8F6FB_SVG_ID), touchgfx::Bitmap(BITMAP_ICON_THEME_IMAGES_ACTION_DONE_50_50_E8F6FB_SVG_ID));
 800b878:	697b      	ldr	r3, [r7, #20]
 800b87a:	f503 74bc 	add.w	r4, r3, #376	@ 0x178
 800b87e:	f107 0344 	add.w	r3, r7, #68	@ 0x44
 800b882:	2100      	movs	r1, #0
 800b884:	4618      	mov	r0, r3
 800b886:	f7fd fff1 	bl	800986c <_ZN8touchgfx6BitmapC1Et>
 800b88a:	f107 0348 	add.w	r3, r7, #72	@ 0x48
 800b88e:	2101      	movs	r1, #1
 800b890:	4618      	mov	r0, r3
 800b892:	f7fd ffeb 	bl	800986c <_ZN8touchgfx6BitmapC1Et>
 800b896:	f107 034c 	add.w	r3, r7, #76	@ 0x4c
 800b89a:	2106      	movs	r1, #6
 800b89c:	4618      	mov	r0, r3
 800b89e:	f7fd ffe5 	bl	800986c <_ZN8touchgfx6BitmapC1Et>
 800b8a2:	f107 0350 	add.w	r3, r7, #80	@ 0x50
 800b8a6:	2104      	movs	r1, #4
 800b8a8:	4618      	mov	r0, r3
 800b8aa:	f7fd ffdf 	bl	800986c <_ZN8touchgfx6BitmapC1Et>
 800b8ae:	f107 004c 	add.w	r0, r7, #76	@ 0x4c
 800b8b2:	f107 0248 	add.w	r2, r7, #72	@ 0x48
 800b8b6:	f107 0144 	add.w	r1, r7, #68	@ 0x44
 800b8ba:	f107 0350 	add.w	r3, r7, #80	@ 0x50
 800b8be:	9300      	str	r3, [sp, #0]
 800b8c0:	4603      	mov	r3, r0
 800b8c2:	4620      	mov	r0, r4
 800b8c4:	f006 fdf4 	bl	80124b0 <_ZN8touchgfx14ButtonWithIcon10setBitmapsERKNS_6BitmapES3_S3_S3_>
    buttonWithIcon1.setIconXY(97, 0);
 800b8c8:	697b      	ldr	r3, [r7, #20]
 800b8ca:	f503 73bc 	add.w	r3, r3, #376	@ 0x178
 800b8ce:	2200      	movs	r2, #0
 800b8d0:	2161      	movs	r1, #97	@ 0x61
 800b8d2:	4618      	mov	r0, r3
 800b8d4:	f7fe fe96 	bl	800a604 <_ZN8touchgfx14ButtonWithIcon9setIconXYEss>
    buttonWithIcon1.setAction(buttonCallback);
 800b8d8:	697b      	ldr	r3, [r7, #20]
 800b8da:	f503 72bc 	add.w	r2, r3, #376	@ 0x178
 800b8de:	697b      	ldr	r3, [r7, #20]
 800b8e0:	f503 7305 	add.w	r3, r3, #532	@ 0x214
 800b8e4:	4619      	mov	r1, r3
 800b8e6:	4610      	mov	r0, r2
 800b8e8:	f7fe fe3d 	bl	800a566 <_ZN8touchgfx14AbstractButton9setActionERNS_15GenericCallbackIRKS0_vvEE>
    add(buttonWithIcon1);
 800b8ec:	697a      	ldr	r2, [r7, #20]
 800b8ee:	697b      	ldr	r3, [r7, #20]
 800b8f0:	f503 73bc 	add.w	r3, r3, #376	@ 0x178
 800b8f4:	4619      	mov	r1, r3
 800b8f6:	4610      	mov	r0, r2
 800b8f8:	f7fe fa24 	bl	8009d44 <_ZN8touchgfx6Screen3addERNS_8DrawableE>

    buttonWithIcon1_1.setXY(111, 195);
 800b8fc:	697b      	ldr	r3, [r7, #20]
 800b8fe:	f503 73da 	add.w	r3, r3, #436	@ 0x1b4
 800b902:	22c3      	movs	r2, #195	@ 0xc3
 800b904:	216f      	movs	r1, #111	@ 0x6f
 800b906:	4618      	mov	r0, r3
 800b908:	f7fe f879 	bl	80099fe <_ZN8touchgfx8Drawable5setXYEss>
    buttonWithIcon1_1.setBitmaps(touchgfx::Bitmap(BITMAP_ALTERNATE_THEME_IMAGES_WIDGETS_BUTTON_REGULAR_HEIGHT_50_MEDIUM_ROUNDED_NORMAL_ID), touchgfx::Bitmap(BITMAP_ALTERNATE_THEME_IMAGES_WIDGETS_BUTTON_REGULAR_HEIGHT_50_MEDIUM_ROUNDED_PRESSED_ID), touchgfx::Bitmap(BITMAP_ICON_THEME_IMAGES_NAVIGATION_ARROW_DOWNWARD_50_50_E8F6FB_SVG_ID), touchgfx::Bitmap(BITMAP_ICON_THEME_IMAGES_ACTION_DONE_50_50_E8F6FB_SVG_ID));
 800b90c:	697b      	ldr	r3, [r7, #20]
 800b90e:	f503 74da 	add.w	r4, r3, #436	@ 0x1b4
 800b912:	f107 0354 	add.w	r3, r7, #84	@ 0x54
 800b916:	2100      	movs	r1, #0
 800b918:	4618      	mov	r0, r3
 800b91a:	f7fd ffa7 	bl	800986c <_ZN8touchgfx6BitmapC1Et>
 800b91e:	f107 0358 	add.w	r3, r7, #88	@ 0x58
 800b922:	2101      	movs	r1, #1
 800b924:	4618      	mov	r0, r3
 800b926:	f7fd ffa1 	bl	800986c <_ZN8touchgfx6BitmapC1Et>
 800b92a:	f107 035c 	add.w	r3, r7, #92	@ 0x5c
 800b92e:	2105      	movs	r1, #5
 800b930:	4618      	mov	r0, r3
 800b932:	f7fd ff9b 	bl	800986c <_ZN8touchgfx6BitmapC1Et>
 800b936:	f107 0360 	add.w	r3, r7, #96	@ 0x60
 800b93a:	2104      	movs	r1, #4
 800b93c:	4618      	mov	r0, r3
 800b93e:	f7fd ff95 	bl	800986c <_ZN8touchgfx6BitmapC1Et>
 800b942:	f107 005c 	add.w	r0, r7, #92	@ 0x5c
 800b946:	f107 0258 	add.w	r2, r7, #88	@ 0x58
 800b94a:	f107 0154 	add.w	r1, r7, #84	@ 0x54
 800b94e:	f107 0360 	add.w	r3, r7, #96	@ 0x60
 800b952:	9300      	str	r3, [sp, #0]
 800b954:	4603      	mov	r3, r0
 800b956:	4620      	mov	r0, r4
 800b958:	f006 fdaa 	bl	80124b0 <_ZN8touchgfx14ButtonWithIcon10setBitmapsERKNS_6BitmapES3_S3_S3_>
    buttonWithIcon1_1.setIconXY(95, 0);
 800b95c:	697b      	ldr	r3, [r7, #20]
 800b95e:	f503 73da 	add.w	r3, r3, #436	@ 0x1b4
 800b962:	2200      	movs	r2, #0
 800b964:	215f      	movs	r1, #95	@ 0x5f
 800b966:	4618      	mov	r0, r3
 800b968:	f7fe fe4c 	bl	800a604 <_ZN8touchgfx14ButtonWithIcon9setIconXYEss>
    buttonWithIcon1_1.setAction(buttonCallback);
 800b96c:	697b      	ldr	r3, [r7, #20]
 800b96e:	f503 72da 	add.w	r2, r3, #436	@ 0x1b4
 800b972:	697b      	ldr	r3, [r7, #20]
 800b974:	f503 7305 	add.w	r3, r3, #532	@ 0x214
 800b978:	4619      	mov	r1, r3
 800b97a:	4610      	mov	r0, r2
 800b97c:	f7fe fdf3 	bl	800a566 <_ZN8touchgfx14AbstractButton9setActionERNS_15GenericCallbackIRKS0_vvEE>
    add(buttonWithIcon1_1);
 800b980:	697a      	ldr	r2, [r7, #20]
 800b982:	697b      	ldr	r3, [r7, #20]
 800b984:	f503 73da 	add.w	r3, r3, #436	@ 0x1b4
 800b988:	4619      	mov	r1, r3
 800b98a:	4610      	mov	r0, r2
 800b98c:	f7fe f9da 	bl	8009d44 <_ZN8touchgfx6Screen3addERNS_8DrawableE>
}
 800b990:	697b      	ldr	r3, [r7, #20]
 800b992:	4618      	mov	r0, r3
 800b994:	37b0      	adds	r7, #176	@ 0xb0
 800b996:	46bd      	mov	sp, r7
 800b998:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}

0800b99c <_ZN20light_screenViewBaseD1Ev>:

light_screenViewBase::~light_screenViewBase()
 800b99c:	b580      	push	{r7, lr}
 800b99e:	b082      	sub	sp, #8
 800b9a0:	af00      	add	r7, sp, #0
 800b9a2:	6078      	str	r0, [r7, #4]
 800b9a4:	4a1c      	ldr	r2, [pc, #112]	@ (800ba18 <_ZN20light_screenViewBaseD1Ev+0x7c>)
 800b9a6:	687b      	ldr	r3, [r7, #4]
 800b9a8:	601a      	str	r2, [r3, #0]
{

}
 800b9aa:	687b      	ldr	r3, [r7, #4]
 800b9ac:	f503 7305 	add.w	r3, r3, #532	@ 0x214
 800b9b0:	4618      	mov	r0, r3
 800b9b2:	f000 f8db 	bl	800bb6c <_ZN8touchgfx8CallbackI20light_screenViewBaseRKNS_14AbstractButtonEvvED1Ev>
 800b9b6:	687b      	ldr	r3, [r7, #4]
 800b9b8:	f503 7301 	add.w	r3, r3, #516	@ 0x204
 800b9bc:	4618      	mov	r0, r3
 800b9be:	f000 f8f7 	bl	800bbb0 <_ZN8touchgfx8CallbackI20light_screenViewBaseRKNS_23AbstractButtonContainerEvvED1Ev>
 800b9c2:	687b      	ldr	r3, [r7, #4]
 800b9c4:	f503 73da 	add.w	r3, r3, #436	@ 0x1b4
 800b9c8:	4618      	mov	r0, r3
 800b9ca:	f7ff fc33 	bl	800b234 <_ZN8touchgfx14ButtonWithIconD1Ev>
 800b9ce:	687b      	ldr	r3, [r7, #4]
 800b9d0:	f503 73bc 	add.w	r3, r3, #376	@ 0x178
 800b9d4:	4618      	mov	r0, r3
 800b9d6:	f7ff fc2d 	bl	800b234 <_ZN8touchgfx14ButtonWithIconD1Ev>
 800b9da:	687b      	ldr	r3, [r7, #4]
 800b9dc:	f503 7396 	add.w	r3, r3, #300	@ 0x12c
 800b9e0:	4618      	mov	r0, r3
 800b9e2:	f7ff fbe3 	bl	800b1ac <_ZN8touchgfx23TextAreaWithOneWildcardD1Ev>
 800b9e6:	687b      	ldr	r3, [r7, #4]
 800b9e8:	33b4      	adds	r3, #180	@ 0xb4
 800b9ea:	4618      	mov	r0, r3
 800b9ec:	f7ff fbb6 	bl	800b15c <_ZN8touchgfx24BoxWithBorderButtonStyleINS_18ClickButtonTriggerEED1Ev>
 800b9f0:	687b      	ldr	r3, [r7, #4]
 800b9f2:	336c      	adds	r3, #108	@ 0x6c
 800b9f4:	4618      	mov	r0, r3
 800b9f6:	f7fe fd05 	bl	800a404 <_ZN8touchgfx8TextAreaD1Ev>
 800b9fa:	687b      	ldr	r3, [r7, #4]
 800b9fc:	3340      	adds	r3, #64	@ 0x40
 800b9fe:	4618      	mov	r0, r3
 800ba00:	f7fe fc36 	bl	800a270 <_ZN8touchgfx3BoxD1Ev>
 800ba04:	687b      	ldr	r3, [r7, #4]
 800ba06:	4618      	mov	r0, r3
 800ba08:	f7ff fcf8 	bl	800b3fc <_ZN8touchgfx4ViewI21light_screenPresenterED1Ev>
 800ba0c:	687b      	ldr	r3, [r7, #4]
 800ba0e:	4618      	mov	r0, r3
 800ba10:	3708      	adds	r7, #8
 800ba12:	46bd      	mov	sp, r7
 800ba14:	bd80      	pop	{r7, pc}
 800ba16:	bf00      	nop
 800ba18:	08028504 	.word	0x08028504

0800ba1c <_ZN20light_screenViewBaseD0Ev>:
light_screenViewBase::~light_screenViewBase()
 800ba1c:	b580      	push	{r7, lr}
 800ba1e:	b082      	sub	sp, #8
 800ba20:	af00      	add	r7, sp, #0
 800ba22:	6078      	str	r0, [r7, #4]
}
 800ba24:	6878      	ldr	r0, [r7, #4]
 800ba26:	f7ff ffb9 	bl	800b99c <_ZN20light_screenViewBaseD1Ev>
 800ba2a:	f44f 7109 	mov.w	r1, #548	@ 0x224
 800ba2e:	6878      	ldr	r0, [r7, #4]
 800ba30:	f01a f82f 	bl	8025a92 <_ZdlPvj>
 800ba34:	687b      	ldr	r3, [r7, #4]
 800ba36:	4618      	mov	r0, r3
 800ba38:	3708      	adds	r7, #8
 800ba3a:	46bd      	mov	sp, r7
 800ba3c:	bd80      	pop	{r7, pc}

0800ba3e <_ZN20light_screenViewBase11setupScreenEv>:

void light_screenViewBase::setupScreen()
{
 800ba3e:	b480      	push	{r7}
 800ba40:	b083      	sub	sp, #12
 800ba42:	af00      	add	r7, sp, #0
 800ba44:	6078      	str	r0, [r7, #4]

}
 800ba46:	bf00      	nop
 800ba48:	370c      	adds	r7, #12
 800ba4a:	46bd      	mov	sp, r7
 800ba4c:	f85d 7b04 	ldr.w	r7, [sp], #4
 800ba50:	4770      	bx	lr

0800ba52 <_ZN20light_screenViewBase25flexButtonCallbackHandlerERKN8touchgfx23AbstractButtonContainerE>:

void light_screenViewBase::flexButtonCallbackHandler(const touchgfx::AbstractButtonContainer& src)
{
 800ba52:	b580      	push	{r7, lr}
 800ba54:	b082      	sub	sp, #8
 800ba56:	af00      	add	r7, sp, #0
 800ba58:	6078      	str	r0, [r7, #4]
 800ba5a:	6039      	str	r1, [r7, #0]
    if (&src == &flexButton1)
 800ba5c:	687b      	ldr	r3, [r7, #4]
 800ba5e:	33b4      	adds	r3, #180	@ 0xb4
 800ba60:	683a      	ldr	r2, [r7, #0]
 800ba62:	429a      	cmp	r2, r3
 800ba64:	d106      	bne.n	800ba74 <_ZN20light_screenViewBase25flexButtonCallbackHandlerERKN8touchgfx23AbstractButtonContainerE+0x22>
    {
        //Interaction2
        //When flexButton1 clicked change screen to Main
        //Go to Main with no screen transition
        application().gotoMainScreenNoTransition();
 800ba66:	6878      	ldr	r0, [r7, #4]
 800ba68:	f7ff fcbc 	bl	800b3e4 <_ZN20light_screenViewBase11applicationEv>
 800ba6c:	4603      	mov	r3, r0
 800ba6e:	4618      	mov	r0, r3
 800ba70:	f7fd f830 	bl	8008ad4 <_ZN23FrontendApplicationBase26gotoMainScreenNoTransitionEv>
    }
}
 800ba74:	bf00      	nop
 800ba76:	3708      	adds	r7, #8
 800ba78:	46bd      	mov	sp, r7
 800ba7a:	bd80      	pop	{r7, pc}

0800ba7c <_ZN20light_screenViewBase21buttonCallbackHandlerERKN8touchgfx14AbstractButtonE>:

void light_screenViewBase::buttonCallbackHandler(const touchgfx::AbstractButton& src)
{
 800ba7c:	b580      	push	{r7, lr}
 800ba7e:	b082      	sub	sp, #8
 800ba80:	af00      	add	r7, sp, #0
 800ba82:	6078      	str	r0, [r7, #4]
 800ba84:	6039      	str	r1, [r7, #0]
    if (&src == &buttonWithIcon1)
 800ba86:	687b      	ldr	r3, [r7, #4]
 800ba88:	f503 73bc 	add.w	r3, r3, #376	@ 0x178
 800ba8c:	683a      	ldr	r2, [r7, #0]
 800ba8e:	429a      	cmp	r2, r3
 800ba90:	d105      	bne.n	800ba9e <_ZN20light_screenViewBase21buttonCallbackHandlerERKN8touchgfx14AbstractButtonE+0x22>
    {
        //Interaction3
        //When buttonWithIcon1 clicked call virtual function
        //Call increase
        increase();
 800ba92:	687b      	ldr	r3, [r7, #4]
 800ba94:	681b      	ldr	r3, [r3, #0]
 800ba96:	332c      	adds	r3, #44	@ 0x2c
 800ba98:	681b      	ldr	r3, [r3, #0]
 800ba9a:	6878      	ldr	r0, [r7, #4]
 800ba9c:	4798      	blx	r3
    }
    if (&src == &buttonWithIcon1_1)
 800ba9e:	687b      	ldr	r3, [r7, #4]
 800baa0:	f503 73da 	add.w	r3, r3, #436	@ 0x1b4
 800baa4:	683a      	ldr	r2, [r7, #0]
 800baa6:	429a      	cmp	r2, r3
 800baa8:	d105      	bne.n	800bab6 <_ZN20light_screenViewBase21buttonCallbackHandlerERKN8touchgfx14AbstractButtonE+0x3a>
    {
        //Interaction4
        //When buttonWithIcon1_1 clicked call virtual function
        //Call decrease
        decrease();
 800baaa:	687b      	ldr	r3, [r7, #4]
 800baac:	681b      	ldr	r3, [r3, #0]
 800baae:	3330      	adds	r3, #48	@ 0x30
 800bab0:	681b      	ldr	r3, [r3, #0]
 800bab2:	6878      	ldr	r0, [r7, #4]
 800bab4:	4798      	blx	r3
    }
}
 800bab6:	bf00      	nop
 800bab8:	3708      	adds	r7, #8
 800baba:	46bd      	mov	sp, r7
 800babc:	bd80      	pop	{r7, pc}
	...

0800bac0 <_ZN8touchgfx4ViewI21light_screenPresenterEC1Ev>:
    View()
 800bac0:	b580      	push	{r7, lr}
 800bac2:	b082      	sub	sp, #8
 800bac4:	af00      	add	r7, sp, #0
 800bac6:	6078      	str	r0, [r7, #4]
        : presenter(0)
 800bac8:	687b      	ldr	r3, [r7, #4]
 800baca:	4618      	mov	r0, r3
 800bacc:	f009 fd9e 	bl	801560c <_ZN8touchgfx6ScreenC1Ev>
 800bad0:	4a05      	ldr	r2, [pc, #20]	@ (800bae8 <_ZN8touchgfx4ViewI21light_screenPresenterEC1Ev+0x28>)
 800bad2:	687b      	ldr	r3, [r7, #4]
 800bad4:	601a      	str	r2, [r3, #0]
 800bad6:	687b      	ldr	r3, [r7, #4]
 800bad8:	2200      	movs	r2, #0
 800bada:	63da      	str	r2, [r3, #60]	@ 0x3c
    }
 800badc:	687b      	ldr	r3, [r7, #4]
 800bade:	4618      	mov	r0, r3
 800bae0:	3708      	adds	r7, #8
 800bae2:	46bd      	mov	sp, r7
 800bae4:	bd80      	pop	{r7, pc}
 800bae6:	bf00      	nop
 800bae8:	08028570 	.word	0x08028570

0800baec <_ZN8touchgfx8CallbackI20light_screenViewBaseRKNS_23AbstractButtonContainerEvvEC1EPS1_MS1_FvS4_E>:
    Callback(dest_type* pObject, void (dest_type::*pmemfun_1)(T1))
 800baec:	b580      	push	{r7, lr}
 800baee:	b084      	sub	sp, #16
 800baf0:	af00      	add	r7, sp, #0
 800baf2:	60f8      	str	r0, [r7, #12]
 800baf4:	60b9      	str	r1, [r7, #8]
 800baf6:	4639      	mov	r1, r7
 800baf8:	e881 000c 	stmia.w	r1, {r2, r3}
        : pobject(pObject), pmemfun(pmemfun_1)
 800bafc:	68fb      	ldr	r3, [r7, #12]
 800bafe:	4618      	mov	r0, r3
 800bb00:	f7ff f9c6 	bl	800ae90 <_ZN8touchgfx15GenericCallbackIRKNS_23AbstractButtonContainerEvvEC1Ev>
 800bb04:	4a08      	ldr	r2, [pc, #32]	@ (800bb28 <_ZN8touchgfx8CallbackI20light_screenViewBaseRKNS_23AbstractButtonContainerEvvEC1EPS1_MS1_FvS4_E+0x3c>)
 800bb06:	68fb      	ldr	r3, [r7, #12]
 800bb08:	601a      	str	r2, [r3, #0]
 800bb0a:	68fb      	ldr	r3, [r7, #12]
 800bb0c:	68ba      	ldr	r2, [r7, #8]
 800bb0e:	605a      	str	r2, [r3, #4]
 800bb10:	68fb      	ldr	r3, [r7, #12]
 800bb12:	3308      	adds	r3, #8
 800bb14:	463a      	mov	r2, r7
 800bb16:	e892 0003 	ldmia.w	r2, {r0, r1}
 800bb1a:	e883 0003 	stmia.w	r3, {r0, r1}
    }
 800bb1e:	68fb      	ldr	r3, [r7, #12]
 800bb20:	4618      	mov	r0, r3
 800bb22:	3710      	adds	r7, #16
 800bb24:	46bd      	mov	sp, r7
 800bb26:	bd80      	pop	{r7, pc}
 800bb28:	08028558 	.word	0x08028558

0800bb2c <_ZN8touchgfx8CallbackI20light_screenViewBaseRKNS_14AbstractButtonEvvEC1EPS1_MS1_FvS4_E>:
    Callback(dest_type* pObject, void (dest_type::*pmemfun_1)(T1))
 800bb2c:	b580      	push	{r7, lr}
 800bb2e:	b084      	sub	sp, #16
 800bb30:	af00      	add	r7, sp, #0
 800bb32:	60f8      	str	r0, [r7, #12]
 800bb34:	60b9      	str	r1, [r7, #8]
 800bb36:	4639      	mov	r1, r7
 800bb38:	e881 000c 	stmia.w	r1, {r2, r3}
        : pobject(pObject), pmemfun(pmemfun_1)
 800bb3c:	68fb      	ldr	r3, [r7, #12]
 800bb3e:	4618      	mov	r0, r3
 800bb40:	f7ff f9d6 	bl	800aef0 <_ZN8touchgfx15GenericCallbackIRKNS_14AbstractButtonEvvEC1Ev>
 800bb44:	4a08      	ldr	r2, [pc, #32]	@ (800bb68 <_ZN8touchgfx8CallbackI20light_screenViewBaseRKNS_14AbstractButtonEvvEC1EPS1_MS1_FvS4_E+0x3c>)
 800bb46:	68fb      	ldr	r3, [r7, #12]
 800bb48:	601a      	str	r2, [r3, #0]
 800bb4a:	68fb      	ldr	r3, [r7, #12]
 800bb4c:	68ba      	ldr	r2, [r7, #8]
 800bb4e:	605a      	str	r2, [r3, #4]
 800bb50:	68fb      	ldr	r3, [r7, #12]
 800bb52:	3308      	adds	r3, #8
 800bb54:	463a      	mov	r2, r7
 800bb56:	e892 0003 	ldmia.w	r2, {r0, r1}
 800bb5a:	e883 0003 	stmia.w	r3, {r0, r1}
    }
 800bb5e:	68fb      	ldr	r3, [r7, #12]
 800bb60:	4618      	mov	r0, r3
 800bb62:	3710      	adds	r7, #16
 800bb64:	46bd      	mov	sp, r7
 800bb66:	bd80      	pop	{r7, pc}
 800bb68:	08028540 	.word	0x08028540

0800bb6c <_ZN8touchgfx8CallbackI20light_screenViewBaseRKNS_14AbstractButtonEvvED1Ev>:
struct Callback<dest_type, T1, void, void> : public GenericCallback<T1>
 800bb6c:	b580      	push	{r7, lr}
 800bb6e:	b082      	sub	sp, #8
 800bb70:	af00      	add	r7, sp, #0
 800bb72:	6078      	str	r0, [r7, #4]
 800bb74:	4a05      	ldr	r2, [pc, #20]	@ (800bb8c <_ZN8touchgfx8CallbackI20light_screenViewBaseRKNS_14AbstractButtonEvvED1Ev+0x20>)
 800bb76:	687b      	ldr	r3, [r7, #4]
 800bb78:	601a      	str	r2, [r3, #0]
 800bb7a:	687b      	ldr	r3, [r7, #4]
 800bb7c:	4618      	mov	r0, r3
 800bb7e:	f7ff fa57 	bl	800b030 <_ZN8touchgfx15GenericCallbackIRKNS_14AbstractButtonEvvED1Ev>
 800bb82:	687b      	ldr	r3, [r7, #4]
 800bb84:	4618      	mov	r0, r3
 800bb86:	3708      	adds	r7, #8
 800bb88:	46bd      	mov	sp, r7
 800bb8a:	bd80      	pop	{r7, pc}
 800bb8c:	08028540 	.word	0x08028540

0800bb90 <_ZN8touchgfx8CallbackI20light_screenViewBaseRKNS_14AbstractButtonEvvED0Ev>:
 800bb90:	b580      	push	{r7, lr}
 800bb92:	b082      	sub	sp, #8
 800bb94:	af00      	add	r7, sp, #0
 800bb96:	6078      	str	r0, [r7, #4]
 800bb98:	6878      	ldr	r0, [r7, #4]
 800bb9a:	f7ff ffe7 	bl	800bb6c <_ZN8touchgfx8CallbackI20light_screenViewBaseRKNS_14AbstractButtonEvvED1Ev>
 800bb9e:	2110      	movs	r1, #16
 800bba0:	6878      	ldr	r0, [r7, #4]
 800bba2:	f019 ff76 	bl	8025a92 <_ZdlPvj>
 800bba6:	687b      	ldr	r3, [r7, #4]
 800bba8:	4618      	mov	r0, r3
 800bbaa:	3708      	adds	r7, #8
 800bbac:	46bd      	mov	sp, r7
 800bbae:	bd80      	pop	{r7, pc}

0800bbb0 <_ZN8touchgfx8CallbackI20light_screenViewBaseRKNS_23AbstractButtonContainerEvvED1Ev>:
 800bbb0:	b580      	push	{r7, lr}
 800bbb2:	b082      	sub	sp, #8
 800bbb4:	af00      	add	r7, sp, #0
 800bbb6:	6078      	str	r0, [r7, #4]
 800bbb8:	4a05      	ldr	r2, [pc, #20]	@ (800bbd0 <_ZN8touchgfx8CallbackI20light_screenViewBaseRKNS_23AbstractButtonContainerEvvED1Ev+0x20>)
 800bbba:	687b      	ldr	r3, [r7, #4]
 800bbbc:	601a      	str	r2, [r3, #0]
 800bbbe:	687b      	ldr	r3, [r7, #4]
 800bbc0:	4618      	mov	r0, r3
 800bbc2:	f7ff fa15 	bl	800aff0 <_ZN8touchgfx15GenericCallbackIRKNS_23AbstractButtonContainerEvvED1Ev>
 800bbc6:	687b      	ldr	r3, [r7, #4]
 800bbc8:	4618      	mov	r0, r3
 800bbca:	3708      	adds	r7, #8
 800bbcc:	46bd      	mov	sp, r7
 800bbce:	bd80      	pop	{r7, pc}
 800bbd0:	08028558 	.word	0x08028558

0800bbd4 <_ZN8touchgfx8CallbackI20light_screenViewBaseRKNS_23AbstractButtonContainerEvvED0Ev>:
 800bbd4:	b580      	push	{r7, lr}
 800bbd6:	b082      	sub	sp, #8
 800bbd8:	af00      	add	r7, sp, #0
 800bbda:	6078      	str	r0, [r7, #4]
 800bbdc:	6878      	ldr	r0, [r7, #4]
 800bbde:	f7ff ffe7 	bl	800bbb0 <_ZN8touchgfx8CallbackI20light_screenViewBaseRKNS_23AbstractButtonContainerEvvED1Ev>
 800bbe2:	2110      	movs	r1, #16
 800bbe4:	6878      	ldr	r0, [r7, #4]
 800bbe6:	f019 ff54 	bl	8025a92 <_ZdlPvj>
 800bbea:	687b      	ldr	r3, [r7, #4]
 800bbec:	4618      	mov	r0, r3
 800bbee:	3708      	adds	r7, #8
 800bbf0:	46bd      	mov	sp, r7
 800bbf2:	bd80      	pop	{r7, pc}

0800bbf4 <_ZN8touchgfx8CallbackI20light_screenViewBaseRKNS_14AbstractButtonEvvE7executeES4_>:
    virtual void execute(T1 t1)
 800bbf4:	b580      	push	{r7, lr}
 800bbf6:	b082      	sub	sp, #8
 800bbf8:	af00      	add	r7, sp, #0
 800bbfa:	6078      	str	r0, [r7, #4]
 800bbfc:	6039      	str	r1, [r7, #0]
        (pobject->*pmemfun)(t1);
 800bbfe:	687b      	ldr	r3, [r7, #4]
 800bc00:	685b      	ldr	r3, [r3, #4]
 800bc02:	687a      	ldr	r2, [r7, #4]
 800bc04:	68d2      	ldr	r2, [r2, #12]
 800bc06:	1052      	asrs	r2, r2, #1
 800bc08:	1898      	adds	r0, r3, r2
 800bc0a:	687b      	ldr	r3, [r7, #4]
 800bc0c:	68db      	ldr	r3, [r3, #12]
 800bc0e:	f003 0301 	and.w	r3, r3, #1
 800bc12:	2b00      	cmp	r3, #0
 800bc14:	d102      	bne.n	800bc1c <_ZN8touchgfx8CallbackI20light_screenViewBaseRKNS_14AbstractButtonEvvE7executeES4_+0x28>
 800bc16:	687b      	ldr	r3, [r7, #4]
 800bc18:	689b      	ldr	r3, [r3, #8]
 800bc1a:	e00a      	b.n	800bc32 <_ZN8touchgfx8CallbackI20light_screenViewBaseRKNS_14AbstractButtonEvvE7executeES4_+0x3e>
 800bc1c:	687b      	ldr	r3, [r7, #4]
 800bc1e:	685b      	ldr	r3, [r3, #4]
 800bc20:	687a      	ldr	r2, [r7, #4]
 800bc22:	68d2      	ldr	r2, [r2, #12]
 800bc24:	1052      	asrs	r2, r2, #1
 800bc26:	4413      	add	r3, r2
 800bc28:	681b      	ldr	r3, [r3, #0]
 800bc2a:	687a      	ldr	r2, [r7, #4]
 800bc2c:	6892      	ldr	r2, [r2, #8]
 800bc2e:	4413      	add	r3, r2
 800bc30:	681b      	ldr	r3, [r3, #0]
 800bc32:	6839      	ldr	r1, [r7, #0]
 800bc34:	4798      	blx	r3
    }
 800bc36:	bf00      	nop
 800bc38:	3708      	adds	r7, #8
 800bc3a:	46bd      	mov	sp, r7
 800bc3c:	bd80      	pop	{r7, pc}

0800bc3e <_ZNK8touchgfx8CallbackI20light_screenViewBaseRKNS_14AbstractButtonEvvE7isValidEv>:
    virtual bool isValid() const
 800bc3e:	b480      	push	{r7}
 800bc40:	b083      	sub	sp, #12
 800bc42:	af00      	add	r7, sp, #0
 800bc44:	6078      	str	r0, [r7, #4]
        return (pobject != 0) && (pmemfun != 0);
 800bc46:	687b      	ldr	r3, [r7, #4]
 800bc48:	685b      	ldr	r3, [r3, #4]
 800bc4a:	2b00      	cmp	r3, #0
 800bc4c:	d010      	beq.n	800bc70 <_ZNK8touchgfx8CallbackI20light_screenViewBaseRKNS_14AbstractButtonEvvE7isValidEv+0x32>
 800bc4e:	687b      	ldr	r3, [r7, #4]
 800bc50:	689b      	ldr	r3, [r3, #8]
 800bc52:	2b00      	cmp	r3, #0
 800bc54:	d107      	bne.n	800bc66 <_ZNK8touchgfx8CallbackI20light_screenViewBaseRKNS_14AbstractButtonEvvE7isValidEv+0x28>
 800bc56:	687b      	ldr	r3, [r7, #4]
 800bc58:	68db      	ldr	r3, [r3, #12]
 800bc5a:	f003 0301 	and.w	r3, r3, #1
 800bc5e:	2b00      	cmp	r3, #0
 800bc60:	d101      	bne.n	800bc66 <_ZNK8touchgfx8CallbackI20light_screenViewBaseRKNS_14AbstractButtonEvvE7isValidEv+0x28>
 800bc62:	2301      	movs	r3, #1
 800bc64:	e000      	b.n	800bc68 <_ZNK8touchgfx8CallbackI20light_screenViewBaseRKNS_14AbstractButtonEvvE7isValidEv+0x2a>
 800bc66:	2300      	movs	r3, #0
 800bc68:	2b01      	cmp	r3, #1
 800bc6a:	d001      	beq.n	800bc70 <_ZNK8touchgfx8CallbackI20light_screenViewBaseRKNS_14AbstractButtonEvvE7isValidEv+0x32>
 800bc6c:	2301      	movs	r3, #1
 800bc6e:	e000      	b.n	800bc72 <_ZNK8touchgfx8CallbackI20light_screenViewBaseRKNS_14AbstractButtonEvvE7isValidEv+0x34>
 800bc70:	2300      	movs	r3, #0
    }
 800bc72:	4618      	mov	r0, r3
 800bc74:	370c      	adds	r7, #12
 800bc76:	46bd      	mov	sp, r7
 800bc78:	f85d 7b04 	ldr.w	r7, [sp], #4
 800bc7c:	4770      	bx	lr

0800bc7e <_ZN8touchgfx8CallbackI20light_screenViewBaseRKNS_23AbstractButtonContainerEvvE7executeES4_>:
    virtual void execute(T1 t1)
 800bc7e:	b580      	push	{r7, lr}
 800bc80:	b082      	sub	sp, #8
 800bc82:	af00      	add	r7, sp, #0
 800bc84:	6078      	str	r0, [r7, #4]
 800bc86:	6039      	str	r1, [r7, #0]
        (pobject->*pmemfun)(t1);
 800bc88:	687b      	ldr	r3, [r7, #4]
 800bc8a:	685b      	ldr	r3, [r3, #4]
 800bc8c:	687a      	ldr	r2, [r7, #4]
 800bc8e:	68d2      	ldr	r2, [r2, #12]
 800bc90:	1052      	asrs	r2, r2, #1
 800bc92:	1898      	adds	r0, r3, r2
 800bc94:	687b      	ldr	r3, [r7, #4]
 800bc96:	68db      	ldr	r3, [r3, #12]
 800bc98:	f003 0301 	and.w	r3, r3, #1
 800bc9c:	2b00      	cmp	r3, #0
 800bc9e:	d102      	bne.n	800bca6 <_ZN8touchgfx8CallbackI20light_screenViewBaseRKNS_23AbstractButtonContainerEvvE7executeES4_+0x28>
 800bca0:	687b      	ldr	r3, [r7, #4]
 800bca2:	689b      	ldr	r3, [r3, #8]
 800bca4:	e00a      	b.n	800bcbc <_ZN8touchgfx8CallbackI20light_screenViewBaseRKNS_23AbstractButtonContainerEvvE7executeES4_+0x3e>
 800bca6:	687b      	ldr	r3, [r7, #4]
 800bca8:	685b      	ldr	r3, [r3, #4]
 800bcaa:	687a      	ldr	r2, [r7, #4]
 800bcac:	68d2      	ldr	r2, [r2, #12]
 800bcae:	1052      	asrs	r2, r2, #1
 800bcb0:	4413      	add	r3, r2
 800bcb2:	681b      	ldr	r3, [r3, #0]
 800bcb4:	687a      	ldr	r2, [r7, #4]
 800bcb6:	6892      	ldr	r2, [r2, #8]
 800bcb8:	4413      	add	r3, r2
 800bcba:	681b      	ldr	r3, [r3, #0]
 800bcbc:	6839      	ldr	r1, [r7, #0]
 800bcbe:	4798      	blx	r3
    }
 800bcc0:	bf00      	nop
 800bcc2:	3708      	adds	r7, #8
 800bcc4:	46bd      	mov	sp, r7
 800bcc6:	bd80      	pop	{r7, pc}

0800bcc8 <_ZNK8touchgfx8CallbackI20light_screenViewBaseRKNS_23AbstractButtonContainerEvvE7isValidEv>:
    virtual bool isValid() const
 800bcc8:	b480      	push	{r7}
 800bcca:	b083      	sub	sp, #12
 800bccc:	af00      	add	r7, sp, #0
 800bcce:	6078      	str	r0, [r7, #4]
        return (pobject != 0) && (pmemfun != 0);
 800bcd0:	687b      	ldr	r3, [r7, #4]
 800bcd2:	685b      	ldr	r3, [r3, #4]
 800bcd4:	2b00      	cmp	r3, #0
 800bcd6:	d010      	beq.n	800bcfa <_ZNK8touchgfx8CallbackI20light_screenViewBaseRKNS_23AbstractButtonContainerEvvE7isValidEv+0x32>
 800bcd8:	687b      	ldr	r3, [r7, #4]
 800bcda:	689b      	ldr	r3, [r3, #8]
 800bcdc:	2b00      	cmp	r3, #0
 800bcde:	d107      	bne.n	800bcf0 <_ZNK8touchgfx8CallbackI20light_screenViewBaseRKNS_23AbstractButtonContainerEvvE7isValidEv+0x28>
 800bce0:	687b      	ldr	r3, [r7, #4]
 800bce2:	68db      	ldr	r3, [r3, #12]
 800bce4:	f003 0301 	and.w	r3, r3, #1
 800bce8:	2b00      	cmp	r3, #0
 800bcea:	d101      	bne.n	800bcf0 <_ZNK8touchgfx8CallbackI20light_screenViewBaseRKNS_23AbstractButtonContainerEvvE7isValidEv+0x28>
 800bcec:	2301      	movs	r3, #1
 800bcee:	e000      	b.n	800bcf2 <_ZNK8touchgfx8CallbackI20light_screenViewBaseRKNS_23AbstractButtonContainerEvvE7isValidEv+0x2a>
 800bcf0:	2300      	movs	r3, #0
 800bcf2:	2b01      	cmp	r3, #1
 800bcf4:	d001      	beq.n	800bcfa <_ZNK8touchgfx8CallbackI20light_screenViewBaseRKNS_23AbstractButtonContainerEvvE7isValidEv+0x32>
 800bcf6:	2301      	movs	r3, #1
 800bcf8:	e000      	b.n	800bcfc <_ZNK8touchgfx8CallbackI20light_screenViewBaseRKNS_23AbstractButtonContainerEvvE7isValidEv+0x34>
 800bcfa:	2300      	movs	r3, #0
    }
 800bcfc:	4618      	mov	r0, r3
 800bcfe:	370c      	adds	r7, #12
 800bd00:	46bd      	mov	sp, r7
 800bd02:	f85d 7b04 	ldr.w	r7, [sp], #4
 800bd06:	4770      	bx	lr

0800bd08 <_ZN8touchgfx14AbstractButtonC1Ev>:
    AbstractButton()
 800bd08:	b580      	push	{r7, lr}
 800bd0a:	b082      	sub	sp, #8
 800bd0c:	af00      	add	r7, sp, #0
 800bd0e:	6078      	str	r0, [r7, #4]
        : Widget(), action(), pressed(false)
 800bd10:	687b      	ldr	r3, [r7, #4]
 800bd12:	4618      	mov	r0, r3
 800bd14:	2326      	movs	r3, #38	@ 0x26
 800bd16:	461a      	mov	r2, r3
 800bd18:	2100      	movs	r1, #0
 800bd1a:	f01a f970 	bl	8025ffe <memset>
 800bd1e:	687b      	ldr	r3, [r7, #4]
 800bd20:	4618      	mov	r0, r3
 800bd22:	f7fe f81f 	bl	8009d64 <_ZN8touchgfx6WidgetC1Ev>
 800bd26:	4a0a      	ldr	r2, [pc, #40]	@ (800bd50 <_ZN8touchgfx14AbstractButtonC1Ev+0x48>)
 800bd28:	687b      	ldr	r3, [r7, #4]
 800bd2a:	601a      	str	r2, [r3, #0]
 800bd2c:	687b      	ldr	r3, [r7, #4]
 800bd2e:	2200      	movs	r2, #0
 800bd30:	629a      	str	r2, [r3, #40]	@ 0x28
 800bd32:	687b      	ldr	r3, [r7, #4]
 800bd34:	2200      	movs	r2, #0
 800bd36:	f883 202c 	strb.w	r2, [r3, #44]	@ 0x2c
        setTouchable(true);
 800bd3a:	687b      	ldr	r3, [r7, #4]
 800bd3c:	2101      	movs	r1, #1
 800bd3e:	4618      	mov	r0, r3
 800bd40:	f7fd feec 	bl	8009b1c <_ZN8touchgfx8Drawable12setTouchableEb>
    }
 800bd44:	687b      	ldr	r3, [r7, #4]
 800bd46:	4618      	mov	r0, r3
 800bd48:	3708      	adds	r7, #8
 800bd4a:	46bd      	mov	sp, r7
 800bd4c:	bd80      	pop	{r7, pc}
 800bd4e:	bf00      	nop
 800bd50:	08029024 	.word	0x08029024

0800bd54 <_ZN8touchgfx6ButtonC1Ev>:
{
public:
    Button()
 800bd54:	b580      	push	{r7, lr}
 800bd56:	b082      	sub	sp, #8
 800bd58:	af00      	add	r7, sp, #0
 800bd5a:	6078      	str	r0, [r7, #4]
        : AbstractButton(), up(), down(), alpha(255)
 800bd5c:	687b      	ldr	r3, [r7, #4]
 800bd5e:	4618      	mov	r0, r3
 800bd60:	f7ff ffd2 	bl	800bd08 <_ZN8touchgfx14AbstractButtonC1Ev>
 800bd64:	4a0c      	ldr	r2, [pc, #48]	@ (800bd98 <_ZN8touchgfx6ButtonC1Ev+0x44>)
 800bd66:	687b      	ldr	r3, [r7, #4]
 800bd68:	601a      	str	r2, [r3, #0]
 800bd6a:	687b      	ldr	r3, [r7, #4]
 800bd6c:	332e      	adds	r3, #46	@ 0x2e
 800bd6e:	f64f 71ff 	movw	r1, #65535	@ 0xffff
 800bd72:	4618      	mov	r0, r3
 800bd74:	f7fd fd7a 	bl	800986c <_ZN8touchgfx6BitmapC1Et>
 800bd78:	687b      	ldr	r3, [r7, #4]
 800bd7a:	3330      	adds	r3, #48	@ 0x30
 800bd7c:	f64f 71ff 	movw	r1, #65535	@ 0xffff
 800bd80:	4618      	mov	r0, r3
 800bd82:	f7fd fd73 	bl	800986c <_ZN8touchgfx6BitmapC1Et>
 800bd86:	687b      	ldr	r3, [r7, #4]
 800bd88:	22ff      	movs	r2, #255	@ 0xff
 800bd8a:	f883 2032 	strb.w	r2, [r3, #50]	@ 0x32
    {
    }
 800bd8e:	687b      	ldr	r3, [r7, #4]
 800bd90:	4618      	mov	r0, r3
 800bd92:	3708      	adds	r7, #8
 800bd94:	46bd      	mov	sp, r7
 800bd96:	bd80      	pop	{r7, pc}
 800bd98:	08029200 	.word	0x08029200

0800bd9c <_ZN8touchgfx12ToggleButton10setBitmapsERKNS_6BitmapES3_>:
 * when it is subsequently pressed, it will pop back out.
 */
class ToggleButton : public Button
{
public:
    virtual void setBitmaps(const Bitmap& bitmapReleased, const Bitmap& bitmapPressed)
 800bd9c:	b580      	push	{r7, lr}
 800bd9e:	b084      	sub	sp, #16
 800bda0:	af00      	add	r7, sp, #0
 800bda2:	60f8      	str	r0, [r7, #12]
 800bda4:	60b9      	str	r1, [r7, #8]
 800bda6:	607a      	str	r2, [r7, #4]
    {
        originalPressed = bitmapPressed;
 800bda8:	68fb      	ldr	r3, [r7, #12]
 800bdaa:	687a      	ldr	r2, [r7, #4]
 800bdac:	8812      	ldrh	r2, [r2, #0]
 800bdae:	869a      	strh	r2, [r3, #52]	@ 0x34
        Button::setBitmaps(bitmapReleased, bitmapPressed);
 800bdb0:	68fb      	ldr	r3, [r7, #12]
 800bdb2:	687a      	ldr	r2, [r7, #4]
 800bdb4:	68b9      	ldr	r1, [r7, #8]
 800bdb6:	4618      	mov	r0, r3
 800bdb8:	f006 f9d6 	bl	8012168 <_ZN8touchgfx6Button10setBitmapsERKNS_6BitmapES3_>
    }
 800bdbc:	bf00      	nop
 800bdbe:	3710      	adds	r7, #16
 800bdc0:	46bd      	mov	sp, r7
 800bdc2:	bd80      	pop	{r7, pc}

0800bdc4 <_ZN12MainViewBase12ToggleLightsEv>:
    virtual void setupScreen();

    /*
     * Virtual Action Handlers
     */
    virtual void ToggleLights()
 800bdc4:	b480      	push	{r7}
 800bdc6:	b083      	sub	sp, #12
 800bdc8:	af00      	add	r7, sp, #0
 800bdca:	6078      	str	r0, [r7, #4]
    {
        // Override and implement this function in Main
    }
 800bdcc:	bf00      	nop
 800bdce:	370c      	adds	r7, #12
 800bdd0:	46bd      	mov	sp, r7
 800bdd2:	f85d 7b04 	ldr.w	r7, [sp], #4
 800bdd6:	4770      	bx	lr

0800bdd8 <_ZN12MainViewBase11applicationEv>:

protected:
    FrontendApplication& application() {
 800bdd8:	b580      	push	{r7, lr}
 800bdda:	b082      	sub	sp, #8
 800bddc:	af00      	add	r7, sp, #0
 800bdde:	6078      	str	r0, [r7, #4]
        return *static_cast<FrontendApplication*>(touchgfx::Application::getInstance());
 800bde0:	f008 f8fe 	bl	8013fe0 <_ZN8touchgfx11Application11getInstanceEv>
 800bde4:	4603      	mov	r3, r0
    }
 800bde6:	4618      	mov	r0, r3
 800bde8:	3708      	adds	r7, #8
 800bdea:	46bd      	mov	sp, r7
 800bdec:	bd80      	pop	{r7, pc}
	...

0800bdf0 <_ZN8touchgfx4ViewI13MainPresenterED1Ev>:
class View : public Screen
 800bdf0:	b580      	push	{r7, lr}
 800bdf2:	b082      	sub	sp, #8
 800bdf4:	af00      	add	r7, sp, #0
 800bdf6:	6078      	str	r0, [r7, #4]
 800bdf8:	4a05      	ldr	r2, [pc, #20]	@ (800be10 <_ZN8touchgfx4ViewI13MainPresenterED1Ev+0x20>)
 800bdfa:	687b      	ldr	r3, [r7, #4]
 800bdfc:	601a      	str	r2, [r3, #0]
 800bdfe:	687b      	ldr	r3, [r7, #4]
 800be00:	4618      	mov	r0, r3
 800be02:	f7fd ff47 	bl	8009c94 <_ZN8touchgfx6ScreenD1Ev>
 800be06:	687b      	ldr	r3, [r7, #4]
 800be08:	4618      	mov	r0, r3
 800be0a:	3708      	adds	r7, #8
 800be0c:	46bd      	mov	sp, r7
 800be0e:	bd80      	pop	{r7, pc}
 800be10:	0802860c 	.word	0x0802860c

0800be14 <_ZN8touchgfx4ViewI13MainPresenterED0Ev>:
 800be14:	b580      	push	{r7, lr}
 800be16:	b082      	sub	sp, #8
 800be18:	af00      	add	r7, sp, #0
 800be1a:	6078      	str	r0, [r7, #4]
 800be1c:	6878      	ldr	r0, [r7, #4]
 800be1e:	f7ff ffe7 	bl	800bdf0 <_ZN8touchgfx4ViewI13MainPresenterED1Ev>
 800be22:	2140      	movs	r1, #64	@ 0x40
 800be24:	6878      	ldr	r0, [r7, #4]
 800be26:	f019 fe34 	bl	8025a92 <_ZdlPvj>
 800be2a:	687b      	ldr	r3, [r7, #4]
 800be2c:	4618      	mov	r0, r3
 800be2e:	3708      	adds	r7, #8
 800be30:	46bd      	mov	sp, r7
 800be32:	bd80      	pop	{r7, pc}

0800be34 <_ZN8touchgfx12ToggleButtonC1Ev>:
class ToggleButton : public Button
 800be34:	b580      	push	{r7, lr}
 800be36:	b082      	sub	sp, #8
 800be38:	af00      	add	r7, sp, #0
 800be3a:	6078      	str	r0, [r7, #4]
 800be3c:	687b      	ldr	r3, [r7, #4]
 800be3e:	4618      	mov	r0, r3
 800be40:	f7ff ff88 	bl	800bd54 <_ZN8touchgfx6ButtonC1Ev>
 800be44:	4a07      	ldr	r2, [pc, #28]	@ (800be64 <_ZN8touchgfx12ToggleButtonC1Ev+0x30>)
 800be46:	687b      	ldr	r3, [r7, #4]
 800be48:	601a      	str	r2, [r3, #0]
 800be4a:	687b      	ldr	r3, [r7, #4]
 800be4c:	3334      	adds	r3, #52	@ 0x34
 800be4e:	f64f 71ff 	movw	r1, #65535	@ 0xffff
 800be52:	4618      	mov	r0, r3
 800be54:	f7fd fd0a 	bl	800986c <_ZN8touchgfx6BitmapC1Et>
 800be58:	687b      	ldr	r3, [r7, #4]
 800be5a:	4618      	mov	r0, r3
 800be5c:	3708      	adds	r7, #8
 800be5e:	46bd      	mov	sp, r7
 800be60:	bd80      	pop	{r7, pc}
 800be62:	bf00      	nop
 800be64:	08029094 	.word	0x08029094

0800be68 <_ZN12MainViewBaseC1Ev>:
#include <gui_generated/main_screen/MainViewBase.hpp>
#include <touchgfx/Color.hpp>
#include <images/BitmapDatabase.hpp>
#include <texts/TextKeysAndLanguages.hpp>

MainViewBase::MainViewBase() :
 800be68:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 800be6c:	b0c6      	sub	sp, #280	@ 0x118
 800be6e:	af02      	add	r7, sp, #8
 800be70:	6178      	str	r0, [r7, #20]
    buttonCallback(this, &MainViewBase::buttonCallbackHandler),
    flexButtonCallback(this, &MainViewBase::flexButtonCallbackHandler)
 800be72:	697b      	ldr	r3, [r7, #20]
 800be74:	4618      	mov	r0, r3
 800be76:	f000 fd69 	bl	800c94c <_ZN8touchgfx4ViewI13MainPresenterEC1Ev>
 800be7a:	4ada      	ldr	r2, [pc, #872]	@ (800c1e4 <_ZN12MainViewBaseC1Ev+0x37c>)
 800be7c:	697b      	ldr	r3, [r7, #20]
 800be7e:	601a      	str	r2, [r3, #0]
 800be80:	697b      	ldr	r3, [r7, #20]
 800be82:	3340      	adds	r3, #64	@ 0x40
 800be84:	4618      	mov	r0, r3
 800be86:	f7fd ffa1 	bl	8009dcc <_ZN8touchgfx3BoxC1Ev>
 800be8a:	697b      	ldr	r3, [r7, #20]
 800be8c:	336c      	adds	r3, #108	@ 0x6c
 800be8e:	4618      	mov	r0, r3
 800be90:	f7ff ffd0 	bl	800be34 <_ZN8touchgfx12ToggleButtonC1Ev>
 800be94:	697b      	ldr	r3, [r7, #20]
 800be96:	33a4      	adds	r3, #164	@ 0xa4
 800be98:	4618      	mov	r0, r3
 800be9a:	f7fe fb27 	bl	800a4ec <_ZN8touchgfx23TextAreaWithOneWildcardC1Ev>
 800be9e:	697b      	ldr	r3, [r7, #20]
 800bea0:	33f0      	adds	r3, #240	@ 0xf0
 800bea2:	4618      	mov	r0, r3
 800bea4:	f7fe fb22 	bl	800a4ec <_ZN8touchgfx23TextAreaWithOneWildcardC1Ev>
 800bea8:	697b      	ldr	r3, [r7, #20]
 800beaa:	f503 739e 	add.w	r3, r3, #316	@ 0x13c
 800beae:	4618      	mov	r0, r3
 800beb0:	f7fe fb1c 	bl	800a4ec <_ZN8touchgfx23TextAreaWithOneWildcardC1Ev>
 800beb4:	697b      	ldr	r3, [r7, #20]
 800beb6:	f503 73c4 	add.w	r3, r3, #392	@ 0x188
 800beba:	4618      	mov	r0, r3
 800bebc:	f7fe fb16 	bl	800a4ec <_ZN8touchgfx23TextAreaWithOneWildcardC1Ev>
 800bec0:	697b      	ldr	r3, [r7, #20]
 800bec2:	f503 73ea 	add.w	r3, r3, #468	@ 0x1d4
 800bec6:	4618      	mov	r0, r3
 800bec8:	f7fe ffa2 	bl	800ae10 <_ZN8touchgfx24BoxWithBorderButtonStyleINS_18ClickButtonTriggerEEC1Ev>
 800becc:	697b      	ldr	r3, [r7, #20]
 800bece:	f503 7313 	add.w	r3, r3, #588	@ 0x24c
 800bed2:	4618      	mov	r0, r3
 800bed4:	f7fe ff9c 	bl	800ae10 <_ZN8touchgfx24BoxWithBorderButtonStyleINS_18ClickButtonTriggerEEC1Ev>
 800bed8:	697b      	ldr	r3, [r7, #20]
 800beda:	f503 7331 	add.w	r3, r3, #708	@ 0x2c4
 800bede:	4618      	mov	r0, r3
 800bee0:	f7fe ff96 	bl	800ae10 <_ZN8touchgfx24BoxWithBorderButtonStyleINS_18ClickButtonTriggerEEC1Ev>
    buttonCallback(this, &MainViewBase::buttonCallbackHandler),
 800bee4:	697b      	ldr	r3, [r7, #20]
 800bee6:	f503 706d 	add.w	r0, r3, #948	@ 0x3b4
 800beea:	4bbf      	ldr	r3, [pc, #764]	@ (800c1e8 <_ZN12MainViewBaseC1Ev+0x380>)
 800beec:	62fb      	str	r3, [r7, #44]	@ 0x2c
 800beee:	2300      	movs	r3, #0
 800bef0:	633b      	str	r3, [r7, #48]	@ 0x30
 800bef2:	f107 032c 	add.w	r3, r7, #44	@ 0x2c
 800bef6:	cb0c      	ldmia	r3, {r2, r3}
 800bef8:	6979      	ldr	r1, [r7, #20]
 800befa:	f000 fd3d 	bl	800c978 <_ZN8touchgfx8CallbackI12MainViewBaseRKNS_14AbstractButtonEvvEC1EPS1_MS1_FvS4_E>
    flexButtonCallback(this, &MainViewBase::flexButtonCallbackHandler)
 800befe:	697b      	ldr	r3, [r7, #20]
 800bf00:	f503 7071 	add.w	r0, r3, #964	@ 0x3c4
 800bf04:	4bb9      	ldr	r3, [pc, #740]	@ (800c1ec <_ZN12MainViewBaseC1Ev+0x384>)
 800bf06:	637b      	str	r3, [r7, #52]	@ 0x34
 800bf08:	2300      	movs	r3, #0
 800bf0a:	63bb      	str	r3, [r7, #56]	@ 0x38
 800bf0c:	f107 0334 	add.w	r3, r7, #52	@ 0x34
 800bf10:	cb0c      	ldmia	r3, {r2, r3}
 800bf12:	6979      	ldr	r1, [r7, #20]
 800bf14:	f000 fd50 	bl	800c9b8 <_ZN8touchgfx8CallbackI12MainViewBaseRKNS_23AbstractButtonContainerEvvEC1EPS1_MS1_FvS4_E>
{
    __background.setPosition(0, 0, 480, 320);
 800bf18:	697b      	ldr	r3, [r7, #20]
 800bf1a:	f103 0040 	add.w	r0, r3, #64	@ 0x40
 800bf1e:	f44f 73a0 	mov.w	r3, #320	@ 0x140
 800bf22:	9300      	str	r3, [sp, #0]
 800bf24:	f44f 73f0 	mov.w	r3, #480	@ 0x1e0
 800bf28:	2200      	movs	r2, #0
 800bf2a:	2100      	movs	r1, #0
 800bf2c:	f7fd fd28 	bl	8009980 <_ZN8touchgfx8Drawable11setPositionEssss>
    __background.setColor(touchgfx::Color::getColorFromRGB(0, 0, 0));
 800bf30:	697b      	ldr	r3, [r7, #20]
 800bf32:	f103 0440 	add.w	r4, r3, #64	@ 0x40
 800bf36:	2300      	movs	r3, #0
 800bf38:	f887 30ac 	strb.w	r3, [r7, #172]	@ 0xac
 800bf3c:	2300      	movs	r3, #0
 800bf3e:	f887 30ab 	strb.w	r3, [r7, #171]	@ 0xab
 800bf42:	2300      	movs	r3, #0
 800bf44:	f887 30aa 	strb.w	r3, [r7, #170]	@ 0xaa
 800bf48:	f897 30ac 	ldrb.w	r3, [r7, #172]	@ 0xac
 800bf4c:	041a      	lsls	r2, r3, #16
 800bf4e:	f897 30ab 	ldrb.w	r3, [r7, #171]	@ 0xab
 800bf52:	021b      	lsls	r3, r3, #8
 800bf54:	431a      	orrs	r2, r3
 800bf56:	f897 30aa 	ldrb.w	r3, [r7, #170]	@ 0xaa
 800bf5a:	4313      	orrs	r3, r2
 800bf5c:	f043 427f 	orr.w	r2, r3, #4278190080	@ 0xff000000
 800bf60:	f107 03a4 	add.w	r3, r7, #164	@ 0xa4
 800bf64:	4611      	mov	r1, r2
 800bf66:	4618      	mov	r0, r3
 800bf68:	f7fd fc3a 	bl	80097e0 <_ZN8touchgfx9colortypeC1Em>
 800bf6c:	f8d7 30a4 	ldr.w	r3, [r7, #164]	@ 0xa4
 800bf70:	4619      	mov	r1, r3
 800bf72:	4620      	mov	r0, r4
 800bf74:	f7fd ff4e 	bl	8009e14 <_ZN8touchgfx3Box8setColorENS_9colortypeE>
    add(__background);
 800bf78:	697a      	ldr	r2, [r7, #20]
 800bf7a:	697b      	ldr	r3, [r7, #20]
 800bf7c:	3340      	adds	r3, #64	@ 0x40
 800bf7e:	4619      	mov	r1, r3
 800bf80:	4610      	mov	r0, r2
 800bf82:	f7fd fedf 	bl	8009d44 <_ZN8touchgfx6Screen3addERNS_8DrawableE>

    toggleButton1.setXY(229, 236);
 800bf86:	697b      	ldr	r3, [r7, #20]
 800bf88:	336c      	adds	r3, #108	@ 0x6c
 800bf8a:	22ec      	movs	r2, #236	@ 0xec
 800bf8c:	21e5      	movs	r1, #229	@ 0xe5
 800bf8e:	4618      	mov	r0, r3
 800bf90:	f7fd fd35 	bl	80099fe <_ZN8touchgfx8Drawable5setXYEss>
    toggleButton1.setBitmaps(touchgfx::Bitmap(BITMAP_ALTERNATE_THEME_IMAGES_WIDGETS_TOGGLEBUTTON_LARGE_ROUNDED_ON_ACTION_ID), touchgfx::Bitmap(BITMAP_ALTERNATE_THEME_IMAGES_WIDGETS_TOGGLEBUTTON_LARGE_ROUNDED_OFF_NORMAL_ID));
 800bf94:	697b      	ldr	r3, [r7, #20]
 800bf96:	f103 046c 	add.w	r4, r3, #108	@ 0x6c
 800bf9a:	f107 033c 	add.w	r3, r7, #60	@ 0x3c
 800bf9e:	2103      	movs	r1, #3
 800bfa0:	4618      	mov	r0, r3
 800bfa2:	f7fd fc63 	bl	800986c <_ZN8touchgfx6BitmapC1Et>
 800bfa6:	f107 0340 	add.w	r3, r7, #64	@ 0x40
 800bfaa:	2102      	movs	r1, #2
 800bfac:	4618      	mov	r0, r3
 800bfae:	f7fd fc5d 	bl	800986c <_ZN8touchgfx6BitmapC1Et>
 800bfb2:	f107 0240 	add.w	r2, r7, #64	@ 0x40
 800bfb6:	f107 033c 	add.w	r3, r7, #60	@ 0x3c
 800bfba:	4619      	mov	r1, r3
 800bfbc:	4620      	mov	r0, r4
 800bfbe:	f7ff feed 	bl	800bd9c <_ZN8touchgfx12ToggleButton10setBitmapsERKNS_6BitmapES3_>
    toggleButton1.forceState(true);
 800bfc2:	697b      	ldr	r3, [r7, #20]
 800bfc4:	336c      	adds	r3, #108	@ 0x6c
 800bfc6:	2101      	movs	r1, #1
 800bfc8:	4618      	mov	r0, r3
 800bfca:	f005 fcfb 	bl	80119c4 <_ZN8touchgfx12ToggleButton10forceStateEb>
    toggleButton1.setAction(buttonCallback);
 800bfce:	697b      	ldr	r3, [r7, #20]
 800bfd0:	f103 026c 	add.w	r2, r3, #108	@ 0x6c
 800bfd4:	697b      	ldr	r3, [r7, #20]
 800bfd6:	f503 736d 	add.w	r3, r3, #948	@ 0x3b4
 800bfda:	4619      	mov	r1, r3
 800bfdc:	4610      	mov	r0, r2
 800bfde:	f7fe fac2 	bl	800a566 <_ZN8touchgfx14AbstractButton9setActionERNS_15GenericCallbackIRKS0_vvEE>
    add(toggleButton1);
 800bfe2:	697a      	ldr	r2, [r7, #20]
 800bfe4:	697b      	ldr	r3, [r7, #20]
 800bfe6:	336c      	adds	r3, #108	@ 0x6c
 800bfe8:	4619      	mov	r1, r3
 800bfea:	4610      	mov	r0, r2
 800bfec:	f7fd feaa 	bl	8009d44 <_ZN8touchgfx6Screen3addERNS_8DrawableE>

    HUMVAL.setPosition(9, 24, 282, 48);
 800bff0:	697b      	ldr	r3, [r7, #20]
 800bff2:	f103 00a4 	add.w	r0, r3, #164	@ 0xa4
 800bff6:	2330      	movs	r3, #48	@ 0x30
 800bff8:	9300      	str	r3, [sp, #0]
 800bffa:	f44f 738d 	mov.w	r3, #282	@ 0x11a
 800bffe:	2218      	movs	r2, #24
 800c000:	2109      	movs	r1, #9
 800c002:	f7fd fcbd 	bl	8009980 <_ZN8touchgfx8Drawable11setPositionEssss>
    HUMVAL.setColor(touchgfx::Color::getColorFromRGB(255, 255, 255));
 800c006:	697b      	ldr	r3, [r7, #20]
 800c008:	f103 04a4 	add.w	r4, r3, #164	@ 0xa4
 800c00c:	23ff      	movs	r3, #255	@ 0xff
 800c00e:	f887 30af 	strb.w	r3, [r7, #175]	@ 0xaf
 800c012:	23ff      	movs	r3, #255	@ 0xff
 800c014:	f887 30ae 	strb.w	r3, [r7, #174]	@ 0xae
 800c018:	23ff      	movs	r3, #255	@ 0xff
 800c01a:	f887 30ad 	strb.w	r3, [r7, #173]	@ 0xad
 800c01e:	f897 30af 	ldrb.w	r3, [r7, #175]	@ 0xaf
 800c022:	041a      	lsls	r2, r3, #16
 800c024:	f897 30ae 	ldrb.w	r3, [r7, #174]	@ 0xae
 800c028:	021b      	lsls	r3, r3, #8
 800c02a:	431a      	orrs	r2, r3
 800c02c:	f897 30ad 	ldrb.w	r3, [r7, #173]	@ 0xad
 800c030:	4313      	orrs	r3, r2
 800c032:	f043 427f 	orr.w	r2, r3, #4278190080	@ 0xff000000
 800c036:	f107 03a0 	add.w	r3, r7, #160	@ 0xa0
 800c03a:	4611      	mov	r1, r2
 800c03c:	4618      	mov	r0, r3
 800c03e:	f7fd fbcf 	bl	80097e0 <_ZN8touchgfx9colortypeC1Em>
 800c042:	f8d7 30a0 	ldr.w	r3, [r7, #160]	@ 0xa0
 800c046:	f8c7 40b0 	str.w	r4, [r7, #176]	@ 0xb0
 800c04a:	62bb      	str	r3, [r7, #40]	@ 0x28
        color = newColor;
 800c04c:	f8d7 30b0 	ldr.w	r3, [r7, #176]	@ 0xb0
 800c050:	6aba      	ldr	r2, [r7, #40]	@ 0x28
 800c052:	631a      	str	r2, [r3, #48]	@ 0x30
    }
 800c054:	bf00      	nop
    HUMVAL.setLinespacing(0);
 800c056:	697b      	ldr	r3, [r7, #20]
 800c058:	33a4      	adds	r3, #164	@ 0xa4
 800c05a:	f8c7 30b8 	str.w	r3, [r7, #184]	@ 0xb8
 800c05e:	2300      	movs	r3, #0
 800c060:	f8a7 30b6 	strh.w	r3, [r7, #182]	@ 0xb6
        linespace = space;
 800c064:	f8d7 30b8 	ldr.w	r3, [r7, #184]	@ 0xb8
 800c068:	f8b7 20b6 	ldrh.w	r2, [r7, #182]	@ 0xb6
 800c06c:	869a      	strh	r2, [r3, #52]	@ 0x34
        boundingArea = calculateBoundingArea();
 800c06e:	f8d7 30b8 	ldr.w	r3, [r7, #184]	@ 0xb8
 800c072:	681b      	ldr	r3, [r3, #0]
 800c074:	3384      	adds	r3, #132	@ 0x84
 800c076:	681b      	ldr	r3, [r3, #0]
 800c078:	f8d7 40b8 	ldr.w	r4, [r7, #184]	@ 0xb8
 800c07c:	463a      	mov	r2, r7
 800c07e:	f8d7 10b8 	ldr.w	r1, [r7, #184]	@ 0xb8
 800c082:	4610      	mov	r0, r2
 800c084:	4798      	blx	r3
 800c086:	f507 7388 	add.w	r3, r7, #272	@ 0x110
 800c08a:	f5a3 7288 	sub.w	r2, r3, #272	@ 0x110
 800c08e:	f104 033c 	add.w	r3, r4, #60	@ 0x3c
 800c092:	ca07      	ldmia	r2, {r0, r1, r2}
 800c094:	e883 0007 	stmia.w	r3, {r0, r1, r2}
    }
 800c098:	bf00      	nop
    HUMVALBuffer[0] = 0;
 800c09a:	697b      	ldr	r3, [r7, #20]
 800c09c:	2200      	movs	r2, #0
 800c09e:	f8a3 233c 	strh.w	r2, [r3, #828]	@ 0x33c
    HUMVAL.setWildcard(HUMVALBuffer);
 800c0a2:	697b      	ldr	r3, [r7, #20]
 800c0a4:	f103 02a4 	add.w	r2, r3, #164	@ 0xa4
 800c0a8:	697b      	ldr	r3, [r7, #20]
 800c0aa:	f503 734f 	add.w	r3, r3, #828	@ 0x33c
 800c0ae:	4619      	mov	r1, r3
 800c0b0:	4610      	mov	r0, r2
 800c0b2:	f7fe fa4b 	bl	800a54c <_ZN8touchgfx23TextAreaWithOneWildcard11setWildcardEPKt>
    HUMVAL.setTypedText(touchgfx::TypedText(T___SINGLEUSE_OPPC));
 800c0b6:	697b      	ldr	r3, [r7, #20]
 800c0b8:	f103 04a4 	add.w	r4, r3, #164	@ 0xa4
 800c0bc:	f107 0344 	add.w	r3, r7, #68	@ 0x44
 800c0c0:	210a      	movs	r1, #10
 800c0c2:	4618      	mov	r0, r3
 800c0c4:	f7fd fec4 	bl	8009e50 <_ZN8touchgfx9TypedTextC1Et>
 800c0c8:	f107 0344 	add.w	r3, r7, #68	@ 0x44
 800c0cc:	4619      	mov	r1, r3
 800c0ce:	4620      	mov	r0, r4
 800c0d0:	f005 fff8 	bl	80120c4 <_ZN8touchgfx8TextArea12setTypedTextERKNS_9TypedTextE>
 800c0d4:	f107 0344 	add.w	r3, r7, #68	@ 0x44
 800c0d8:	4618      	mov	r0, r3
 800c0da:	f7fb ffd5 	bl	8008088 <_ZN8touchgfx9TypedTextD1Ev>
    add(HUMVAL);
 800c0de:	697a      	ldr	r2, [r7, #20]
 800c0e0:	697b      	ldr	r3, [r7, #20]
 800c0e2:	33a4      	adds	r3, #164	@ 0xa4
 800c0e4:	4619      	mov	r1, r3
 800c0e6:	4610      	mov	r0, r2
 800c0e8:	f7fd fe2c 	bl	8009d44 <_ZN8touchgfx6Screen3addERNS_8DrawableE>

    TEMPVAL.setPosition(9, 79, 178, 46);
 800c0ec:	697b      	ldr	r3, [r7, #20]
 800c0ee:	f103 00f0 	add.w	r0, r3, #240	@ 0xf0
 800c0f2:	232e      	movs	r3, #46	@ 0x2e
 800c0f4:	9300      	str	r3, [sp, #0]
 800c0f6:	23b2      	movs	r3, #178	@ 0xb2
 800c0f8:	224f      	movs	r2, #79	@ 0x4f
 800c0fa:	2109      	movs	r1, #9
 800c0fc:	f7fd fc40 	bl	8009980 <_ZN8touchgfx8Drawable11setPositionEssss>
    TEMPVAL.setColor(touchgfx::Color::getColorFromRGB(255, 255, 255));
 800c100:	697b      	ldr	r3, [r7, #20]
 800c102:	f103 04f0 	add.w	r4, r3, #240	@ 0xf0
 800c106:	23ff      	movs	r3, #255	@ 0xff
 800c108:	f887 30bf 	strb.w	r3, [r7, #191]	@ 0xbf
 800c10c:	23ff      	movs	r3, #255	@ 0xff
 800c10e:	f887 30be 	strb.w	r3, [r7, #190]	@ 0xbe
 800c112:	23ff      	movs	r3, #255	@ 0xff
 800c114:	f887 30bd 	strb.w	r3, [r7, #189]	@ 0xbd
 800c118:	f897 30bf 	ldrb.w	r3, [r7, #191]	@ 0xbf
 800c11c:	041a      	lsls	r2, r3, #16
 800c11e:	f897 30be 	ldrb.w	r3, [r7, #190]	@ 0xbe
 800c122:	021b      	lsls	r3, r3, #8
 800c124:	431a      	orrs	r2, r3
 800c126:	f897 30bd 	ldrb.w	r3, [r7, #189]	@ 0xbd
 800c12a:	4313      	orrs	r3, r2
 800c12c:	f043 427f 	orr.w	r2, r3, #4278190080	@ 0xff000000
 800c130:	f107 039c 	add.w	r3, r7, #156	@ 0x9c
 800c134:	4611      	mov	r1, r2
 800c136:	4618      	mov	r0, r3
 800c138:	f7fd fb52 	bl	80097e0 <_ZN8touchgfx9colortypeC1Em>
 800c13c:	f8d7 309c 	ldr.w	r3, [r7, #156]	@ 0x9c
 800c140:	f8c7 40c0 	str.w	r4, [r7, #192]	@ 0xc0
 800c144:	627b      	str	r3, [r7, #36]	@ 0x24
        color = newColor;
 800c146:	f8d7 30c0 	ldr.w	r3, [r7, #192]	@ 0xc0
 800c14a:	6a7a      	ldr	r2, [r7, #36]	@ 0x24
 800c14c:	631a      	str	r2, [r3, #48]	@ 0x30
    }
 800c14e:	bf00      	nop
    TEMPVAL.setLinespacing(0);
 800c150:	697b      	ldr	r3, [r7, #20]
 800c152:	33f0      	adds	r3, #240	@ 0xf0
 800c154:	f8c7 30c8 	str.w	r3, [r7, #200]	@ 0xc8
 800c158:	2300      	movs	r3, #0
 800c15a:	f8a7 30c6 	strh.w	r3, [r7, #198]	@ 0xc6
        linespace = space;
 800c15e:	f8d7 30c8 	ldr.w	r3, [r7, #200]	@ 0xc8
 800c162:	f8b7 20c6 	ldrh.w	r2, [r7, #198]	@ 0xc6
 800c166:	869a      	strh	r2, [r3, #52]	@ 0x34
        boundingArea = calculateBoundingArea();
 800c168:	f8d7 30c8 	ldr.w	r3, [r7, #200]	@ 0xc8
 800c16c:	681b      	ldr	r3, [r3, #0]
 800c16e:	3384      	adds	r3, #132	@ 0x84
 800c170:	681b      	ldr	r3, [r3, #0]
 800c172:	f8d7 40c8 	ldr.w	r4, [r7, #200]	@ 0xc8
 800c176:	463a      	mov	r2, r7
 800c178:	f8d7 10c8 	ldr.w	r1, [r7, #200]	@ 0xc8
 800c17c:	4610      	mov	r0, r2
 800c17e:	4798      	blx	r3
 800c180:	f507 7388 	add.w	r3, r7, #272	@ 0x110
 800c184:	f5a3 7288 	sub.w	r2, r3, #272	@ 0x110
 800c188:	f104 033c 	add.w	r3, r4, #60	@ 0x3c
 800c18c:	ca07      	ldmia	r2, {r0, r1, r2}
 800c18e:	e883 0007 	stmia.w	r3, {r0, r1, r2}
    }
 800c192:	bf00      	nop
    TEMPVALBuffer[0] = 0;
 800c194:	697b      	ldr	r3, [r7, #20]
 800c196:	2200      	movs	r2, #0
 800c198:	f8a3 2364 	strh.w	r2, [r3, #868]	@ 0x364
    TEMPVAL.setWildcard(TEMPVALBuffer);
 800c19c:	697b      	ldr	r3, [r7, #20]
 800c19e:	f103 02f0 	add.w	r2, r3, #240	@ 0xf0
 800c1a2:	697b      	ldr	r3, [r7, #20]
 800c1a4:	f503 7359 	add.w	r3, r3, #868	@ 0x364
 800c1a8:	4619      	mov	r1, r3
 800c1aa:	4610      	mov	r0, r2
 800c1ac:	f7fe f9ce 	bl	800a54c <_ZN8touchgfx23TextAreaWithOneWildcard11setWildcardEPKt>
    TEMPVAL.setTypedText(touchgfx::TypedText(T___SINGLEUSE_0MT1));
 800c1b0:	697b      	ldr	r3, [r7, #20]
 800c1b2:	f103 04f0 	add.w	r4, r3, #240	@ 0xf0
 800c1b6:	f107 034c 	add.w	r3, r7, #76	@ 0x4c
 800c1ba:	2109      	movs	r1, #9
 800c1bc:	4618      	mov	r0, r3
 800c1be:	f7fd fe47 	bl	8009e50 <_ZN8touchgfx9TypedTextC1Et>
 800c1c2:	f107 034c 	add.w	r3, r7, #76	@ 0x4c
 800c1c6:	4619      	mov	r1, r3
 800c1c8:	4620      	mov	r0, r4
 800c1ca:	f005 ff7b 	bl	80120c4 <_ZN8touchgfx8TextArea12setTypedTextERKNS_9TypedTextE>
 800c1ce:	f107 034c 	add.w	r3, r7, #76	@ 0x4c
 800c1d2:	4618      	mov	r0, r3
 800c1d4:	f7fb ff58 	bl	8008088 <_ZN8touchgfx9TypedTextD1Ev>
    add(TEMPVAL);
 800c1d8:	697a      	ldr	r2, [r7, #20]
 800c1da:	697b      	ldr	r3, [r7, #20]
 800c1dc:	33f0      	adds	r3, #240	@ 0xf0
 800c1de:	4619      	mov	r1, r3
 800c1e0:	4610      	mov	r0, r2
 800c1e2:	e005      	b.n	800c1f0 <_ZN12MainViewBaseC1Ev+0x388>
 800c1e4:	080285a4 	.word	0x080285a4
 800c1e8:	0800c8c3 	.word	0x0800c8c3
 800c1ec:	0800c8eb 	.word	0x0800c8eb
 800c1f0:	f7fd fda8 	bl	8009d44 <_ZN8touchgfx6Screen3addERNS_8DrawableE>

    ADCVAL.setPosition(98, 183, 303, 43);
 800c1f4:	697b      	ldr	r3, [r7, #20]
 800c1f6:	f503 709e 	add.w	r0, r3, #316	@ 0x13c
 800c1fa:	232b      	movs	r3, #43	@ 0x2b
 800c1fc:	9300      	str	r3, [sp, #0]
 800c1fe:	f240 132f 	movw	r3, #303	@ 0x12f
 800c202:	22b7      	movs	r2, #183	@ 0xb7
 800c204:	2162      	movs	r1, #98	@ 0x62
 800c206:	f7fd fbbb 	bl	8009980 <_ZN8touchgfx8Drawable11setPositionEssss>
    ADCVAL.setColor(touchgfx::Color::getColorFromRGB(255, 255, 255));
 800c20a:	697b      	ldr	r3, [r7, #20]
 800c20c:	f503 749e 	add.w	r4, r3, #316	@ 0x13c
 800c210:	23ff      	movs	r3, #255	@ 0xff
 800c212:	f887 30cf 	strb.w	r3, [r7, #207]	@ 0xcf
 800c216:	23ff      	movs	r3, #255	@ 0xff
 800c218:	f887 30ce 	strb.w	r3, [r7, #206]	@ 0xce
 800c21c:	23ff      	movs	r3, #255	@ 0xff
 800c21e:	f887 30cd 	strb.w	r3, [r7, #205]	@ 0xcd
 800c222:	f897 30cf 	ldrb.w	r3, [r7, #207]	@ 0xcf
 800c226:	041a      	lsls	r2, r3, #16
 800c228:	f897 30ce 	ldrb.w	r3, [r7, #206]	@ 0xce
 800c22c:	021b      	lsls	r3, r3, #8
 800c22e:	431a      	orrs	r2, r3
 800c230:	f897 30cd 	ldrb.w	r3, [r7, #205]	@ 0xcd
 800c234:	4313      	orrs	r3, r2
 800c236:	f043 427f 	orr.w	r2, r3, #4278190080	@ 0xff000000
 800c23a:	f107 0398 	add.w	r3, r7, #152	@ 0x98
 800c23e:	4611      	mov	r1, r2
 800c240:	4618      	mov	r0, r3
 800c242:	f7fd facd 	bl	80097e0 <_ZN8touchgfx9colortypeC1Em>
 800c246:	f8d7 3098 	ldr.w	r3, [r7, #152]	@ 0x98
 800c24a:	f8c7 40d0 	str.w	r4, [r7, #208]	@ 0xd0
 800c24e:	623b      	str	r3, [r7, #32]
        color = newColor;
 800c250:	f8d7 30d0 	ldr.w	r3, [r7, #208]	@ 0xd0
 800c254:	6a3a      	ldr	r2, [r7, #32]
 800c256:	631a      	str	r2, [r3, #48]	@ 0x30
    }
 800c258:	bf00      	nop
    ADCVAL.setLinespacing(0);
 800c25a:	697b      	ldr	r3, [r7, #20]
 800c25c:	f503 739e 	add.w	r3, r3, #316	@ 0x13c
 800c260:	f8c7 30d8 	str.w	r3, [r7, #216]	@ 0xd8
 800c264:	2300      	movs	r3, #0
 800c266:	f8a7 30d6 	strh.w	r3, [r7, #214]	@ 0xd6
        linespace = space;
 800c26a:	f8d7 30d8 	ldr.w	r3, [r7, #216]	@ 0xd8
 800c26e:	f8b7 20d6 	ldrh.w	r2, [r7, #214]	@ 0xd6
 800c272:	869a      	strh	r2, [r3, #52]	@ 0x34
        boundingArea = calculateBoundingArea();
 800c274:	f8d7 30d8 	ldr.w	r3, [r7, #216]	@ 0xd8
 800c278:	681b      	ldr	r3, [r3, #0]
 800c27a:	3384      	adds	r3, #132	@ 0x84
 800c27c:	681b      	ldr	r3, [r3, #0]
 800c27e:	f8d7 40d8 	ldr.w	r4, [r7, #216]	@ 0xd8
 800c282:	463a      	mov	r2, r7
 800c284:	f8d7 10d8 	ldr.w	r1, [r7, #216]	@ 0xd8
 800c288:	4610      	mov	r0, r2
 800c28a:	4798      	blx	r3
 800c28c:	f507 7388 	add.w	r3, r7, #272	@ 0x110
 800c290:	f5a3 7288 	sub.w	r2, r3, #272	@ 0x110
 800c294:	f104 033c 	add.w	r3, r4, #60	@ 0x3c
 800c298:	ca07      	ldmia	r2, {r0, r1, r2}
 800c29a:	e883 0007 	stmia.w	r3, {r0, r1, r2}
    }
 800c29e:	bf00      	nop
    ADCVALBuffer[0] = 0;
 800c2a0:	697b      	ldr	r3, [r7, #20]
 800c2a2:	2200      	movs	r2, #0
 800c2a4:	f8a3 238c 	strh.w	r2, [r3, #908]	@ 0x38c
    ADCVAL.setWildcard(ADCVALBuffer);
 800c2a8:	697b      	ldr	r3, [r7, #20]
 800c2aa:	f503 729e 	add.w	r2, r3, #316	@ 0x13c
 800c2ae:	697b      	ldr	r3, [r7, #20]
 800c2b0:	f503 7363 	add.w	r3, r3, #908	@ 0x38c
 800c2b4:	4619      	mov	r1, r3
 800c2b6:	4610      	mov	r0, r2
 800c2b8:	f7fe f948 	bl	800a54c <_ZN8touchgfx23TextAreaWithOneWildcard11setWildcardEPKt>
    ADCVAL.setTypedText(touchgfx::TypedText(T___SINGLEUSE_JSQP));
 800c2bc:	697b      	ldr	r3, [r7, #20]
 800c2be:	f503 749e 	add.w	r4, r3, #316	@ 0x13c
 800c2c2:	f107 0354 	add.w	r3, r7, #84	@ 0x54
 800c2c6:	2108      	movs	r1, #8
 800c2c8:	4618      	mov	r0, r3
 800c2ca:	f7fd fdc1 	bl	8009e50 <_ZN8touchgfx9TypedTextC1Et>
 800c2ce:	f107 0354 	add.w	r3, r7, #84	@ 0x54
 800c2d2:	4619      	mov	r1, r3
 800c2d4:	4620      	mov	r0, r4
 800c2d6:	f005 fef5 	bl	80120c4 <_ZN8touchgfx8TextArea12setTypedTextERKNS_9TypedTextE>
 800c2da:	f107 0354 	add.w	r3, r7, #84	@ 0x54
 800c2de:	4618      	mov	r0, r3
 800c2e0:	f7fb fed2 	bl	8008088 <_ZN8touchgfx9TypedTextD1Ev>
    add(ADCVAL);
 800c2e4:	697a      	ldr	r2, [r7, #20]
 800c2e6:	697b      	ldr	r3, [r7, #20]
 800c2e8:	f503 739e 	add.w	r3, r3, #316	@ 0x13c
 800c2ec:	4619      	mov	r1, r3
 800c2ee:	4610      	mov	r0, r2
 800c2f0:	f7fd fd28 	bl	8009d44 <_ZN8touchgfx6Screen3addERNS_8DrawableE>

    textArea1.setXY(0, 135);
 800c2f4:	697b      	ldr	r3, [r7, #20]
 800c2f6:	f503 73c4 	add.w	r3, r3, #392	@ 0x188
 800c2fa:	2287      	movs	r2, #135	@ 0x87
 800c2fc:	2100      	movs	r1, #0
 800c2fe:	4618      	mov	r0, r3
 800c300:	f7fd fb7d 	bl	80099fe <_ZN8touchgfx8Drawable5setXYEss>
    textArea1.setColor(touchgfx::Color::getColorFromRGB(255, 255, 255));
 800c304:	697b      	ldr	r3, [r7, #20]
 800c306:	f503 74c4 	add.w	r4, r3, #392	@ 0x188
 800c30a:	23ff      	movs	r3, #255	@ 0xff
 800c30c:	f887 30df 	strb.w	r3, [r7, #223]	@ 0xdf
 800c310:	23ff      	movs	r3, #255	@ 0xff
 800c312:	f887 30de 	strb.w	r3, [r7, #222]	@ 0xde
 800c316:	23ff      	movs	r3, #255	@ 0xff
 800c318:	f887 30dd 	strb.w	r3, [r7, #221]	@ 0xdd
 800c31c:	f897 30df 	ldrb.w	r3, [r7, #223]	@ 0xdf
 800c320:	041a      	lsls	r2, r3, #16
 800c322:	f897 30de 	ldrb.w	r3, [r7, #222]	@ 0xde
 800c326:	021b      	lsls	r3, r3, #8
 800c328:	431a      	orrs	r2, r3
 800c32a:	f897 30dd 	ldrb.w	r3, [r7, #221]	@ 0xdd
 800c32e:	4313      	orrs	r3, r2
 800c330:	f043 427f 	orr.w	r2, r3, #4278190080	@ 0xff000000
 800c334:	f107 0394 	add.w	r3, r7, #148	@ 0x94
 800c338:	4611      	mov	r1, r2
 800c33a:	4618      	mov	r0, r3
 800c33c:	f7fd fa50 	bl	80097e0 <_ZN8touchgfx9colortypeC1Em>
 800c340:	f8d7 3094 	ldr.w	r3, [r7, #148]	@ 0x94
 800c344:	f8c7 40e0 	str.w	r4, [r7, #224]	@ 0xe0
 800c348:	61fb      	str	r3, [r7, #28]
        color = newColor;
 800c34a:	f8d7 30e0 	ldr.w	r3, [r7, #224]	@ 0xe0
 800c34e:	69fa      	ldr	r2, [r7, #28]
 800c350:	631a      	str	r2, [r3, #48]	@ 0x30
    }
 800c352:	bf00      	nop
    textArea1.setLinespacing(0);
 800c354:	697b      	ldr	r3, [r7, #20]
 800c356:	f503 73c4 	add.w	r3, r3, #392	@ 0x188
 800c35a:	f8c7 30e8 	str.w	r3, [r7, #232]	@ 0xe8
 800c35e:	2300      	movs	r3, #0
 800c360:	f8a7 30e6 	strh.w	r3, [r7, #230]	@ 0xe6
        linespace = space;
 800c364:	f8d7 30e8 	ldr.w	r3, [r7, #232]	@ 0xe8
 800c368:	f8b7 20e6 	ldrh.w	r2, [r7, #230]	@ 0xe6
 800c36c:	869a      	strh	r2, [r3, #52]	@ 0x34
        boundingArea = calculateBoundingArea();
 800c36e:	f8d7 30e8 	ldr.w	r3, [r7, #232]	@ 0xe8
 800c372:	681b      	ldr	r3, [r3, #0]
 800c374:	3384      	adds	r3, #132	@ 0x84
 800c376:	681b      	ldr	r3, [r3, #0]
 800c378:	f8d7 40e8 	ldr.w	r4, [r7, #232]	@ 0xe8
 800c37c:	463a      	mov	r2, r7
 800c37e:	f8d7 10e8 	ldr.w	r1, [r7, #232]	@ 0xe8
 800c382:	4610      	mov	r0, r2
 800c384:	4798      	blx	r3
 800c386:	f507 7388 	add.w	r3, r7, #272	@ 0x110
 800c38a:	f5a3 7288 	sub.w	r2, r3, #272	@ 0x110
 800c38e:	f104 033c 	add.w	r3, r4, #60	@ 0x3c
 800c392:	ca07      	ldmia	r2, {r0, r1, r2}
 800c394:	e883 0007 	stmia.w	r3, {r0, r1, r2}
    }
 800c398:	bf00      	nop
    textArea1.setTypedText(touchgfx::TypedText(T___SINGLEUSE_E175));
 800c39a:	697b      	ldr	r3, [r7, #20]
 800c39c:	f503 74c4 	add.w	r4, r3, #392	@ 0x188
 800c3a0:	f107 035c 	add.w	r3, r7, #92	@ 0x5c
 800c3a4:	2107      	movs	r1, #7
 800c3a6:	4618      	mov	r0, r3
 800c3a8:	f7fd fd52 	bl	8009e50 <_ZN8touchgfx9TypedTextC1Et>
 800c3ac:	f107 035c 	add.w	r3, r7, #92	@ 0x5c
 800c3b0:	4619      	mov	r1, r3
 800c3b2:	4620      	mov	r0, r4
 800c3b4:	f005 fe86 	bl	80120c4 <_ZN8touchgfx8TextArea12setTypedTextERKNS_9TypedTextE>
 800c3b8:	f107 035c 	add.w	r3, r7, #92	@ 0x5c
 800c3bc:	4618      	mov	r0, r3
 800c3be:	f7fb fe63 	bl	8008088 <_ZN8touchgfx9TypedTextD1Ev>
    add(textArea1);
 800c3c2:	697a      	ldr	r2, [r7, #20]
 800c3c4:	697b      	ldr	r3, [r7, #20]
 800c3c6:	f503 73c4 	add.w	r3, r3, #392	@ 0x188
 800c3ca:	4619      	mov	r1, r3
 800c3cc:	4610      	mov	r0, r2
 800c3ce:	f7fd fcb9 	bl	8009d44 <_ZN8touchgfx6Screen3addERNS_8DrawableE>

    flexButton1.setBoxWithBorderPosition(0, 0, 50, 50);
 800c3d2:	697b      	ldr	r3, [r7, #20]
 800c3d4:	f503 70ea 	add.w	r0, r3, #468	@ 0x1d4
 800c3d8:	2332      	movs	r3, #50	@ 0x32
 800c3da:	9300      	str	r3, [sp, #0]
 800c3dc:	2332      	movs	r3, #50	@ 0x32
 800c3de:	2200      	movs	r2, #0
 800c3e0:	2100      	movs	r1, #0
 800c3e2:	f7fe fdb5 	bl	800af50 <_ZN8touchgfx24BoxWithBorderButtonStyleINS_18ClickButtonTriggerEE24setBoxWithBorderPositionEssss>
    flexButton1.setBorderSize(5);
 800c3e6:	697b      	ldr	r3, [r7, #20]
 800c3e8:	f503 73ea 	add.w	r3, r3, #468	@ 0x1d4
 800c3ec:	2105      	movs	r1, #5
 800c3ee:	4618      	mov	r0, r3
 800c3f0:	f7fe fdce 	bl	800af90 <_ZN8touchgfx24BoxWithBorderButtonStyleINS_18ClickButtonTriggerEE13setBorderSizeEh>
    flexButton1.setBoxWithBorderColors(touchgfx::Color::getColorFromRGB(0, 102, 153), touchgfx::Color::getColorFromRGB(0, 153, 204), touchgfx::Color::getColorFromRGB(0, 51, 102), touchgfx::Color::getColorFromRGB(51, 102, 153));
 800c3f4:	697b      	ldr	r3, [r7, #20]
 800c3f6:	f503 74ea 	add.w	r4, r3, #468	@ 0x1d4
 800c3fa:	2300      	movs	r3, #0
 800c3fc:	f887 30ee 	strb.w	r3, [r7, #238]	@ 0xee
 800c400:	2366      	movs	r3, #102	@ 0x66
 800c402:	f887 30ed 	strb.w	r3, [r7, #237]	@ 0xed
 800c406:	2399      	movs	r3, #153	@ 0x99
 800c408:	f887 30ec 	strb.w	r3, [r7, #236]	@ 0xec
 800c40c:	f897 30ee 	ldrb.w	r3, [r7, #238]	@ 0xee
 800c410:	041a      	lsls	r2, r3, #16
 800c412:	f897 30ed 	ldrb.w	r3, [r7, #237]	@ 0xed
 800c416:	021b      	lsls	r3, r3, #8
 800c418:	431a      	orrs	r2, r3
 800c41a:	f897 30ec 	ldrb.w	r3, [r7, #236]	@ 0xec
 800c41e:	4313      	orrs	r3, r2
 800c420:	f043 427f 	orr.w	r2, r3, #4278190080	@ 0xff000000
 800c424:	f107 0390 	add.w	r3, r7, #144	@ 0x90
 800c428:	4611      	mov	r1, r2
 800c42a:	4618      	mov	r0, r3
 800c42c:	f7fd f9d8 	bl	80097e0 <_ZN8touchgfx9colortypeC1Em>
 800c430:	f8d7 3090 	ldr.w	r3, [r7, #144]	@ 0x90
 800c434:	461d      	mov	r5, r3
 800c436:	2300      	movs	r3, #0
 800c438:	f887 30f1 	strb.w	r3, [r7, #241]	@ 0xf1
 800c43c:	2399      	movs	r3, #153	@ 0x99
 800c43e:	f887 30f0 	strb.w	r3, [r7, #240]	@ 0xf0
 800c442:	23cc      	movs	r3, #204	@ 0xcc
 800c444:	f887 30ef 	strb.w	r3, [r7, #239]	@ 0xef
 800c448:	f897 30f1 	ldrb.w	r3, [r7, #241]	@ 0xf1
 800c44c:	041a      	lsls	r2, r3, #16
 800c44e:	f897 30f0 	ldrb.w	r3, [r7, #240]	@ 0xf0
 800c452:	021b      	lsls	r3, r3, #8
 800c454:	431a      	orrs	r2, r3
 800c456:	f897 30ef 	ldrb.w	r3, [r7, #239]	@ 0xef
 800c45a:	4313      	orrs	r3, r2
 800c45c:	f043 427f 	orr.w	r2, r3, #4278190080	@ 0xff000000
 800c460:	f107 038c 	add.w	r3, r7, #140	@ 0x8c
 800c464:	4611      	mov	r1, r2
 800c466:	4618      	mov	r0, r3
 800c468:	f7fd f9ba 	bl	80097e0 <_ZN8touchgfx9colortypeC1Em>
 800c46c:	f8d7 308c 	ldr.w	r3, [r7, #140]	@ 0x8c
 800c470:	461e      	mov	r6, r3
 800c472:	2300      	movs	r3, #0
 800c474:	f887 30f4 	strb.w	r3, [r7, #244]	@ 0xf4
 800c478:	2333      	movs	r3, #51	@ 0x33
 800c47a:	f887 30f3 	strb.w	r3, [r7, #243]	@ 0xf3
 800c47e:	2366      	movs	r3, #102	@ 0x66
 800c480:	f887 30f2 	strb.w	r3, [r7, #242]	@ 0xf2
 800c484:	f897 30f4 	ldrb.w	r3, [r7, #244]	@ 0xf4
 800c488:	041a      	lsls	r2, r3, #16
 800c48a:	f897 30f3 	ldrb.w	r3, [r7, #243]	@ 0xf3
 800c48e:	021b      	lsls	r3, r3, #8
 800c490:	431a      	orrs	r2, r3
 800c492:	f897 30f2 	ldrb.w	r3, [r7, #242]	@ 0xf2
 800c496:	4313      	orrs	r3, r2
 800c498:	f043 427f 	orr.w	r2, r3, #4278190080	@ 0xff000000
 800c49c:	f107 0388 	add.w	r3, r7, #136	@ 0x88
 800c4a0:	4611      	mov	r1, r2
 800c4a2:	4618      	mov	r0, r3
 800c4a4:	f7fd f99c 	bl	80097e0 <_ZN8touchgfx9colortypeC1Em>
 800c4a8:	f8d7 3088 	ldr.w	r3, [r7, #136]	@ 0x88
 800c4ac:	4698      	mov	r8, r3
 800c4ae:	2333      	movs	r3, #51	@ 0x33
 800c4b0:	f887 30f7 	strb.w	r3, [r7, #247]	@ 0xf7
 800c4b4:	2366      	movs	r3, #102	@ 0x66
 800c4b6:	f887 30f6 	strb.w	r3, [r7, #246]	@ 0xf6
 800c4ba:	2399      	movs	r3, #153	@ 0x99
 800c4bc:	f887 30f5 	strb.w	r3, [r7, #245]	@ 0xf5
 800c4c0:	f897 30f7 	ldrb.w	r3, [r7, #247]	@ 0xf7
 800c4c4:	041a      	lsls	r2, r3, #16
 800c4c6:	f897 30f6 	ldrb.w	r3, [r7, #246]	@ 0xf6
 800c4ca:	021b      	lsls	r3, r3, #8
 800c4cc:	431a      	orrs	r2, r3
 800c4ce:	f897 30f5 	ldrb.w	r3, [r7, #245]	@ 0xf5
 800c4d2:	4313      	orrs	r3, r2
 800c4d4:	f043 427f 	orr.w	r2, r3, #4278190080	@ 0xff000000
 800c4d8:	f107 0384 	add.w	r3, r7, #132	@ 0x84
 800c4dc:	4611      	mov	r1, r2
 800c4de:	4618      	mov	r0, r3
 800c4e0:	f7fd f97e 	bl	80097e0 <_ZN8touchgfx9colortypeC1Em>
 800c4e4:	f8d7 3084 	ldr.w	r3, [r7, #132]	@ 0x84
 800c4e8:	9300      	str	r3, [sp, #0]
 800c4ea:	4643      	mov	r3, r8
 800c4ec:	4632      	mov	r2, r6
 800c4ee:	4629      	mov	r1, r5
 800c4f0:	4620      	mov	r0, r4
 800c4f2:	f7fe fd5f 	bl	800afb4 <_ZN8touchgfx24BoxWithBorderButtonStyleINS_18ClickButtonTriggerEE22setBoxWithBorderColorsENS_9colortypeES3_S3_S3_>
    flexButton1.setAction(flexButtonCallback);
 800c4f6:	697b      	ldr	r3, [r7, #20]
 800c4f8:	f503 72ea 	add.w	r2, r3, #468	@ 0x1d4
 800c4fc:	697b      	ldr	r3, [r7, #20]
 800c4fe:	f503 7371 	add.w	r3, r3, #964	@ 0x3c4
 800c502:	4619      	mov	r1, r3
 800c504:	4610      	mov	r0, r2
 800c506:	f7fd fe69 	bl	800a1dc <_ZN8touchgfx23AbstractButtonContainer9setActionERNS_15GenericCallbackIRKS0_vvEE>
    flexButton1.setPosition(401, 13, 50, 50);
 800c50a:	697b      	ldr	r3, [r7, #20]
 800c50c:	f503 70ea 	add.w	r0, r3, #468	@ 0x1d4
 800c510:	2332      	movs	r3, #50	@ 0x32
 800c512:	9300      	str	r3, [sp, #0]
 800c514:	2332      	movs	r3, #50	@ 0x32
 800c516:	220d      	movs	r2, #13
 800c518:	f240 1191 	movw	r1, #401	@ 0x191
 800c51c:	f7fd fa30 	bl	8009980 <_ZN8touchgfx8Drawable11setPositionEssss>
    add(flexButton1);
 800c520:	697a      	ldr	r2, [r7, #20]
 800c522:	697b      	ldr	r3, [r7, #20]
 800c524:	f503 73ea 	add.w	r3, r3, #468	@ 0x1d4
 800c528:	4619      	mov	r1, r3
 800c52a:	4610      	mov	r0, r2
 800c52c:	f7fd fc0a 	bl	8009d44 <_ZN8touchgfx6Screen3addERNS_8DrawableE>

    flexButton1_1.setBoxWithBorderPosition(0, 0, 50, 50);
 800c530:	697b      	ldr	r3, [r7, #20]
 800c532:	f503 7013 	add.w	r0, r3, #588	@ 0x24c
 800c536:	2332      	movs	r3, #50	@ 0x32
 800c538:	9300      	str	r3, [sp, #0]
 800c53a:	2332      	movs	r3, #50	@ 0x32
 800c53c:	2200      	movs	r2, #0
 800c53e:	2100      	movs	r1, #0
 800c540:	f7fe fd06 	bl	800af50 <_ZN8touchgfx24BoxWithBorderButtonStyleINS_18ClickButtonTriggerEE24setBoxWithBorderPositionEssss>
    flexButton1_1.setBorderSize(5);
 800c544:	697b      	ldr	r3, [r7, #20]
 800c546:	f503 7313 	add.w	r3, r3, #588	@ 0x24c
 800c54a:	2105      	movs	r1, #5
 800c54c:	4618      	mov	r0, r3
 800c54e:	f7fe fd1f 	bl	800af90 <_ZN8touchgfx24BoxWithBorderButtonStyleINS_18ClickButtonTriggerEE13setBorderSizeEh>
    flexButton1_1.setBoxWithBorderColors(touchgfx::Color::getColorFromRGB(0, 102, 153), touchgfx::Color::getColorFromRGB(0, 153, 204), touchgfx::Color::getColorFromRGB(0, 51, 102), touchgfx::Color::getColorFromRGB(51, 102, 153));
 800c552:	697b      	ldr	r3, [r7, #20]
 800c554:	f503 7413 	add.w	r4, r3, #588	@ 0x24c
 800c558:	2300      	movs	r3, #0
 800c55a:	f887 30fa 	strb.w	r3, [r7, #250]	@ 0xfa
 800c55e:	2366      	movs	r3, #102	@ 0x66
 800c560:	f887 30f9 	strb.w	r3, [r7, #249]	@ 0xf9
 800c564:	2399      	movs	r3, #153	@ 0x99
 800c566:	f887 30f8 	strb.w	r3, [r7, #248]	@ 0xf8
 800c56a:	f897 30fa 	ldrb.w	r3, [r7, #250]	@ 0xfa
 800c56e:	041a      	lsls	r2, r3, #16
 800c570:	f897 30f9 	ldrb.w	r3, [r7, #249]	@ 0xf9
 800c574:	021b      	lsls	r3, r3, #8
 800c576:	431a      	orrs	r2, r3
 800c578:	f897 30f8 	ldrb.w	r3, [r7, #248]	@ 0xf8
 800c57c:	4313      	orrs	r3, r2
 800c57e:	f043 427f 	orr.w	r2, r3, #4278190080	@ 0xff000000
 800c582:	f107 0380 	add.w	r3, r7, #128	@ 0x80
 800c586:	4611      	mov	r1, r2
 800c588:	4618      	mov	r0, r3
 800c58a:	f7fd f929 	bl	80097e0 <_ZN8touchgfx9colortypeC1Em>
 800c58e:	f8d7 3080 	ldr.w	r3, [r7, #128]	@ 0x80
 800c592:	461d      	mov	r5, r3
 800c594:	2300      	movs	r3, #0
 800c596:	f887 30fd 	strb.w	r3, [r7, #253]	@ 0xfd
 800c59a:	2399      	movs	r3, #153	@ 0x99
 800c59c:	f887 30fc 	strb.w	r3, [r7, #252]	@ 0xfc
 800c5a0:	23cc      	movs	r3, #204	@ 0xcc
 800c5a2:	f887 30fb 	strb.w	r3, [r7, #251]	@ 0xfb
 800c5a6:	f897 30fd 	ldrb.w	r3, [r7, #253]	@ 0xfd
 800c5aa:	041a      	lsls	r2, r3, #16
 800c5ac:	f897 30fc 	ldrb.w	r3, [r7, #252]	@ 0xfc
 800c5b0:	021b      	lsls	r3, r3, #8
 800c5b2:	431a      	orrs	r2, r3
 800c5b4:	f897 30fb 	ldrb.w	r3, [r7, #251]	@ 0xfb
 800c5b8:	4313      	orrs	r3, r2
 800c5ba:	f043 427f 	orr.w	r2, r3, #4278190080	@ 0xff000000
 800c5be:	f107 037c 	add.w	r3, r7, #124	@ 0x7c
 800c5c2:	4611      	mov	r1, r2
 800c5c4:	4618      	mov	r0, r3
 800c5c6:	f7fd f90b 	bl	80097e0 <_ZN8touchgfx9colortypeC1Em>
 800c5ca:	6ffb      	ldr	r3, [r7, #124]	@ 0x7c
 800c5cc:	461e      	mov	r6, r3
 800c5ce:	2300      	movs	r3, #0
 800c5d0:	f887 3100 	strb.w	r3, [r7, #256]	@ 0x100
 800c5d4:	2333      	movs	r3, #51	@ 0x33
 800c5d6:	f887 30ff 	strb.w	r3, [r7, #255]	@ 0xff
 800c5da:	2366      	movs	r3, #102	@ 0x66
 800c5dc:	f887 30fe 	strb.w	r3, [r7, #254]	@ 0xfe
 800c5e0:	f897 3100 	ldrb.w	r3, [r7, #256]	@ 0x100
 800c5e4:	041a      	lsls	r2, r3, #16
 800c5e6:	f897 30ff 	ldrb.w	r3, [r7, #255]	@ 0xff
 800c5ea:	021b      	lsls	r3, r3, #8
 800c5ec:	431a      	orrs	r2, r3
 800c5ee:	f897 30fe 	ldrb.w	r3, [r7, #254]	@ 0xfe
 800c5f2:	4313      	orrs	r3, r2
 800c5f4:	f043 427f 	orr.w	r2, r3, #4278190080	@ 0xff000000
 800c5f8:	f107 0378 	add.w	r3, r7, #120	@ 0x78
 800c5fc:	4611      	mov	r1, r2
 800c5fe:	4618      	mov	r0, r3
 800c600:	f7fd f8ee 	bl	80097e0 <_ZN8touchgfx9colortypeC1Em>
 800c604:	6fbb      	ldr	r3, [r7, #120]	@ 0x78
 800c606:	4698      	mov	r8, r3
 800c608:	2333      	movs	r3, #51	@ 0x33
 800c60a:	f887 3103 	strb.w	r3, [r7, #259]	@ 0x103
 800c60e:	2366      	movs	r3, #102	@ 0x66
 800c610:	f887 3102 	strb.w	r3, [r7, #258]	@ 0x102
 800c614:	2399      	movs	r3, #153	@ 0x99
 800c616:	f887 3101 	strb.w	r3, [r7, #257]	@ 0x101
 800c61a:	f897 3103 	ldrb.w	r3, [r7, #259]	@ 0x103
 800c61e:	041a      	lsls	r2, r3, #16
 800c620:	f897 3102 	ldrb.w	r3, [r7, #258]	@ 0x102
 800c624:	021b      	lsls	r3, r3, #8
 800c626:	431a      	orrs	r2, r3
 800c628:	f897 3101 	ldrb.w	r3, [r7, #257]	@ 0x101
 800c62c:	4313      	orrs	r3, r2
 800c62e:	f043 427f 	orr.w	r2, r3, #4278190080	@ 0xff000000
 800c632:	f107 0374 	add.w	r3, r7, #116	@ 0x74
 800c636:	4611      	mov	r1, r2
 800c638:	4618      	mov	r0, r3
 800c63a:	f7fd f8d1 	bl	80097e0 <_ZN8touchgfx9colortypeC1Em>
 800c63e:	6f7b      	ldr	r3, [r7, #116]	@ 0x74
 800c640:	9300      	str	r3, [sp, #0]
 800c642:	4643      	mov	r3, r8
 800c644:	4632      	mov	r2, r6
 800c646:	4629      	mov	r1, r5
 800c648:	4620      	mov	r0, r4
 800c64a:	f7fe fcb3 	bl	800afb4 <_ZN8touchgfx24BoxWithBorderButtonStyleINS_18ClickButtonTriggerEE22setBoxWithBorderColorsENS_9colortypeES3_S3_S3_>
    flexButton1_1.setAction(flexButtonCallback);
 800c64e:	697b      	ldr	r3, [r7, #20]
 800c650:	f503 7213 	add.w	r2, r3, #588	@ 0x24c
 800c654:	697b      	ldr	r3, [r7, #20]
 800c656:	f503 7371 	add.w	r3, r3, #964	@ 0x3c4
 800c65a:	4619      	mov	r1, r3
 800c65c:	4610      	mov	r0, r2
 800c65e:	f7fd fdbd 	bl	800a1dc <_ZN8touchgfx23AbstractButtonContainer9setActionERNS_15GenericCallbackIRKS0_vvEE>
    flexButton1_1.setPosition(401, 72, 50, 50);
 800c662:	697b      	ldr	r3, [r7, #20]
 800c664:	f503 7013 	add.w	r0, r3, #588	@ 0x24c
 800c668:	2332      	movs	r3, #50	@ 0x32
 800c66a:	9300      	str	r3, [sp, #0]
 800c66c:	2332      	movs	r3, #50	@ 0x32
 800c66e:	2248      	movs	r2, #72	@ 0x48
 800c670:	f240 1191 	movw	r1, #401	@ 0x191
 800c674:	f7fd f984 	bl	8009980 <_ZN8touchgfx8Drawable11setPositionEssss>
    add(flexButton1_1);
 800c678:	697a      	ldr	r2, [r7, #20]
 800c67a:	697b      	ldr	r3, [r7, #20]
 800c67c:	f503 7313 	add.w	r3, r3, #588	@ 0x24c
 800c680:	4619      	mov	r1, r3
 800c682:	4610      	mov	r0, r2
 800c684:	f7fd fb5e 	bl	8009d44 <_ZN8touchgfx6Screen3addERNS_8DrawableE>

    flexButton1_2.setBoxWithBorderPosition(0, 0, 50, 50);
 800c688:	697b      	ldr	r3, [r7, #20]
 800c68a:	f503 7031 	add.w	r0, r3, #708	@ 0x2c4
 800c68e:	2332      	movs	r3, #50	@ 0x32
 800c690:	9300      	str	r3, [sp, #0]
 800c692:	2332      	movs	r3, #50	@ 0x32
 800c694:	2200      	movs	r2, #0
 800c696:	2100      	movs	r1, #0
 800c698:	f7fe fc5a 	bl	800af50 <_ZN8touchgfx24BoxWithBorderButtonStyleINS_18ClickButtonTriggerEE24setBoxWithBorderPositionEssss>
    flexButton1_2.setBorderSize(5);
 800c69c:	697b      	ldr	r3, [r7, #20]
 800c69e:	f503 7331 	add.w	r3, r3, #708	@ 0x2c4
 800c6a2:	2105      	movs	r1, #5
 800c6a4:	4618      	mov	r0, r3
 800c6a6:	f7fe fc73 	bl	800af90 <_ZN8touchgfx24BoxWithBorderButtonStyleINS_18ClickButtonTriggerEE13setBorderSizeEh>
    flexButton1_2.setBoxWithBorderColors(touchgfx::Color::getColorFromRGB(0, 102, 153), touchgfx::Color::getColorFromRGB(0, 153, 204), touchgfx::Color::getColorFromRGB(0, 51, 102), touchgfx::Color::getColorFromRGB(51, 102, 153));
 800c6aa:	697b      	ldr	r3, [r7, #20]
 800c6ac:	f503 7431 	add.w	r4, r3, #708	@ 0x2c4
 800c6b0:	2300      	movs	r3, #0
 800c6b2:	f887 3106 	strb.w	r3, [r7, #262]	@ 0x106
 800c6b6:	2366      	movs	r3, #102	@ 0x66
 800c6b8:	f887 3105 	strb.w	r3, [r7, #261]	@ 0x105
 800c6bc:	2399      	movs	r3, #153	@ 0x99
 800c6be:	f887 3104 	strb.w	r3, [r7, #260]	@ 0x104
 800c6c2:	f897 3106 	ldrb.w	r3, [r7, #262]	@ 0x106
 800c6c6:	041a      	lsls	r2, r3, #16
 800c6c8:	f897 3105 	ldrb.w	r3, [r7, #261]	@ 0x105
 800c6cc:	021b      	lsls	r3, r3, #8
 800c6ce:	431a      	orrs	r2, r3
 800c6d0:	f897 3104 	ldrb.w	r3, [r7, #260]	@ 0x104
 800c6d4:	4313      	orrs	r3, r2
 800c6d6:	f043 427f 	orr.w	r2, r3, #4278190080	@ 0xff000000
 800c6da:	f107 0370 	add.w	r3, r7, #112	@ 0x70
 800c6de:	4611      	mov	r1, r2
 800c6e0:	4618      	mov	r0, r3
 800c6e2:	f7fd f87d 	bl	80097e0 <_ZN8touchgfx9colortypeC1Em>
 800c6e6:	6f3b      	ldr	r3, [r7, #112]	@ 0x70
 800c6e8:	461d      	mov	r5, r3
 800c6ea:	2300      	movs	r3, #0
 800c6ec:	f887 3109 	strb.w	r3, [r7, #265]	@ 0x109
 800c6f0:	2399      	movs	r3, #153	@ 0x99
 800c6f2:	f887 3108 	strb.w	r3, [r7, #264]	@ 0x108
 800c6f6:	23cc      	movs	r3, #204	@ 0xcc
 800c6f8:	f887 3107 	strb.w	r3, [r7, #263]	@ 0x107
 800c6fc:	f897 3109 	ldrb.w	r3, [r7, #265]	@ 0x109
 800c700:	041a      	lsls	r2, r3, #16
 800c702:	f897 3108 	ldrb.w	r3, [r7, #264]	@ 0x108
 800c706:	021b      	lsls	r3, r3, #8
 800c708:	431a      	orrs	r2, r3
 800c70a:	f897 3107 	ldrb.w	r3, [r7, #263]	@ 0x107
 800c70e:	4313      	orrs	r3, r2
 800c710:	f043 427f 	orr.w	r2, r3, #4278190080	@ 0xff000000
 800c714:	f107 036c 	add.w	r3, r7, #108	@ 0x6c
 800c718:	4611      	mov	r1, r2
 800c71a:	4618      	mov	r0, r3
 800c71c:	f7fd f860 	bl	80097e0 <_ZN8touchgfx9colortypeC1Em>
 800c720:	6efb      	ldr	r3, [r7, #108]	@ 0x6c
 800c722:	461e      	mov	r6, r3
 800c724:	2300      	movs	r3, #0
 800c726:	f887 310c 	strb.w	r3, [r7, #268]	@ 0x10c
 800c72a:	2333      	movs	r3, #51	@ 0x33
 800c72c:	f887 310b 	strb.w	r3, [r7, #267]	@ 0x10b
 800c730:	2366      	movs	r3, #102	@ 0x66
 800c732:	f887 310a 	strb.w	r3, [r7, #266]	@ 0x10a
 800c736:	f897 310c 	ldrb.w	r3, [r7, #268]	@ 0x10c
 800c73a:	041a      	lsls	r2, r3, #16
 800c73c:	f897 310b 	ldrb.w	r3, [r7, #267]	@ 0x10b
 800c740:	021b      	lsls	r3, r3, #8
 800c742:	431a      	orrs	r2, r3
 800c744:	f897 310a 	ldrb.w	r3, [r7, #266]	@ 0x10a
 800c748:	4313      	orrs	r3, r2
 800c74a:	f043 427f 	orr.w	r2, r3, #4278190080	@ 0xff000000
 800c74e:	f107 0368 	add.w	r3, r7, #104	@ 0x68
 800c752:	4611      	mov	r1, r2
 800c754:	4618      	mov	r0, r3
 800c756:	f7fd f843 	bl	80097e0 <_ZN8touchgfx9colortypeC1Em>
 800c75a:	6ebb      	ldr	r3, [r7, #104]	@ 0x68
 800c75c:	4698      	mov	r8, r3
 800c75e:	2333      	movs	r3, #51	@ 0x33
 800c760:	f887 310f 	strb.w	r3, [r7, #271]	@ 0x10f
 800c764:	2366      	movs	r3, #102	@ 0x66
 800c766:	f887 310e 	strb.w	r3, [r7, #270]	@ 0x10e
 800c76a:	2399      	movs	r3, #153	@ 0x99
 800c76c:	f887 310d 	strb.w	r3, [r7, #269]	@ 0x10d
 800c770:	f897 310f 	ldrb.w	r3, [r7, #271]	@ 0x10f
 800c774:	041a      	lsls	r2, r3, #16
 800c776:	f897 310e 	ldrb.w	r3, [r7, #270]	@ 0x10e
 800c77a:	021b      	lsls	r3, r3, #8
 800c77c:	431a      	orrs	r2, r3
 800c77e:	f897 310d 	ldrb.w	r3, [r7, #269]	@ 0x10d
 800c782:	4313      	orrs	r3, r2
 800c784:	f043 427f 	orr.w	r2, r3, #4278190080	@ 0xff000000
 800c788:	f107 0364 	add.w	r3, r7, #100	@ 0x64
 800c78c:	4611      	mov	r1, r2
 800c78e:	4618      	mov	r0, r3
 800c790:	f7fd f826 	bl	80097e0 <_ZN8touchgfx9colortypeC1Em>
 800c794:	6e7b      	ldr	r3, [r7, #100]	@ 0x64
 800c796:	9300      	str	r3, [sp, #0]
 800c798:	4643      	mov	r3, r8
 800c79a:	4632      	mov	r2, r6
 800c79c:	4629      	mov	r1, r5
 800c79e:	4620      	mov	r0, r4
 800c7a0:	f7fe fc08 	bl	800afb4 <_ZN8touchgfx24BoxWithBorderButtonStyleINS_18ClickButtonTriggerEE22setBoxWithBorderColorsENS_9colortypeES3_S3_S3_>
    flexButton1_2.setAction(flexButtonCallback);
 800c7a4:	697b      	ldr	r3, [r7, #20]
 800c7a6:	f503 7231 	add.w	r2, r3, #708	@ 0x2c4
 800c7aa:	697b      	ldr	r3, [r7, #20]
 800c7ac:	f503 7371 	add.w	r3, r3, #964	@ 0x3c4
 800c7b0:	4619      	mov	r1, r3
 800c7b2:	4610      	mov	r0, r2
 800c7b4:	f7fd fd12 	bl	800a1dc <_ZN8touchgfx23AbstractButtonContainer9setActionERNS_15GenericCallbackIRKS0_vvEE>
    flexButton1_2.setPosition(401, 127, 50, 50);
 800c7b8:	697b      	ldr	r3, [r7, #20]
 800c7ba:	f503 7031 	add.w	r0, r3, #708	@ 0x2c4
 800c7be:	2332      	movs	r3, #50	@ 0x32
 800c7c0:	9300      	str	r3, [sp, #0]
 800c7c2:	2332      	movs	r3, #50	@ 0x32
 800c7c4:	227f      	movs	r2, #127	@ 0x7f
 800c7c6:	f240 1191 	movw	r1, #401	@ 0x191
 800c7ca:	f7fd f8d9 	bl	8009980 <_ZN8touchgfx8Drawable11setPositionEssss>
    add(flexButton1_2);
 800c7ce:	697a      	ldr	r2, [r7, #20]
 800c7d0:	697b      	ldr	r3, [r7, #20]
 800c7d2:	f503 7331 	add.w	r3, r3, #708	@ 0x2c4
 800c7d6:	4619      	mov	r1, r3
 800c7d8:	4610      	mov	r0, r2
 800c7da:	f7fd fab3 	bl	8009d44 <_ZN8touchgfx6Screen3addERNS_8DrawableE>
}
 800c7de:	697b      	ldr	r3, [r7, #20]
 800c7e0:	4618      	mov	r0, r3
 800c7e2:	f507 7788 	add.w	r7, r7, #272	@ 0x110
 800c7e6:	46bd      	mov	sp, r7
 800c7e8:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}

0800c7ec <_ZN12MainViewBaseD1Ev>:

MainViewBase::~MainViewBase()
 800c7ec:	b580      	push	{r7, lr}
 800c7ee:	b082      	sub	sp, #8
 800c7f0:	af00      	add	r7, sp, #0
 800c7f2:	6078      	str	r0, [r7, #4]
 800c7f4:	4a24      	ldr	r2, [pc, #144]	@ (800c888 <_ZN12MainViewBaseD1Ev+0x9c>)
 800c7f6:	687b      	ldr	r3, [r7, #4]
 800c7f8:	601a      	str	r2, [r3, #0]
{

}
 800c7fa:	687b      	ldr	r3, [r7, #4]
 800c7fc:	f503 7371 	add.w	r3, r3, #964	@ 0x3c4
 800c800:	4618      	mov	r0, r3
 800c802:	f000 f8f9 	bl	800c9f8 <_ZN8touchgfx8CallbackI12MainViewBaseRKNS_23AbstractButtonContainerEvvED1Ev>
 800c806:	687b      	ldr	r3, [r7, #4]
 800c808:	f503 736d 	add.w	r3, r3, #948	@ 0x3b4
 800c80c:	4618      	mov	r0, r3
 800c80e:	f000 f915 	bl	800ca3c <_ZN8touchgfx8CallbackI12MainViewBaseRKNS_14AbstractButtonEvvED1Ev>
 800c812:	687b      	ldr	r3, [r7, #4]
 800c814:	f503 7331 	add.w	r3, r3, #708	@ 0x2c4
 800c818:	4618      	mov	r0, r3
 800c81a:	f7fe fc9f 	bl	800b15c <_ZN8touchgfx24BoxWithBorderButtonStyleINS_18ClickButtonTriggerEED1Ev>
 800c81e:	687b      	ldr	r3, [r7, #4]
 800c820:	f503 7313 	add.w	r3, r3, #588	@ 0x24c
 800c824:	4618      	mov	r0, r3
 800c826:	f7fe fc99 	bl	800b15c <_ZN8touchgfx24BoxWithBorderButtonStyleINS_18ClickButtonTriggerEED1Ev>
 800c82a:	687b      	ldr	r3, [r7, #4]
 800c82c:	f503 73ea 	add.w	r3, r3, #468	@ 0x1d4
 800c830:	4618      	mov	r0, r3
 800c832:	f7fe fc93 	bl	800b15c <_ZN8touchgfx24BoxWithBorderButtonStyleINS_18ClickButtonTriggerEED1Ev>
 800c836:	687b      	ldr	r3, [r7, #4]
 800c838:	f503 73c4 	add.w	r3, r3, #392	@ 0x188
 800c83c:	4618      	mov	r0, r3
 800c83e:	f7fe fcb5 	bl	800b1ac <_ZN8touchgfx23TextAreaWithOneWildcardD1Ev>
 800c842:	687b      	ldr	r3, [r7, #4]
 800c844:	f503 739e 	add.w	r3, r3, #316	@ 0x13c
 800c848:	4618      	mov	r0, r3
 800c84a:	f7fe fcaf 	bl	800b1ac <_ZN8touchgfx23TextAreaWithOneWildcardD1Ev>
 800c84e:	687b      	ldr	r3, [r7, #4]
 800c850:	33f0      	adds	r3, #240	@ 0xf0
 800c852:	4618      	mov	r0, r3
 800c854:	f7fe fcaa 	bl	800b1ac <_ZN8touchgfx23TextAreaWithOneWildcardD1Ev>
 800c858:	687b      	ldr	r3, [r7, #4]
 800c85a:	33a4      	adds	r3, #164	@ 0xa4
 800c85c:	4618      	mov	r0, r3
 800c85e:	f7fe fca5 	bl	800b1ac <_ZN8touchgfx23TextAreaWithOneWildcardD1Ev>
 800c862:	687b      	ldr	r3, [r7, #4]
 800c864:	336c      	adds	r3, #108	@ 0x6c
 800c866:	4618      	mov	r0, r3
 800c868:	f000 f90a 	bl	800ca80 <_ZN8touchgfx12ToggleButtonD1Ev>
 800c86c:	687b      	ldr	r3, [r7, #4]
 800c86e:	3340      	adds	r3, #64	@ 0x40
 800c870:	4618      	mov	r0, r3
 800c872:	f7fd fcfd 	bl	800a270 <_ZN8touchgfx3BoxD1Ev>
 800c876:	687b      	ldr	r3, [r7, #4]
 800c878:	4618      	mov	r0, r3
 800c87a:	f7ff fab9 	bl	800bdf0 <_ZN8touchgfx4ViewI13MainPresenterED1Ev>
 800c87e:	687b      	ldr	r3, [r7, #4]
 800c880:	4618      	mov	r0, r3
 800c882:	3708      	adds	r7, #8
 800c884:	46bd      	mov	sp, r7
 800c886:	bd80      	pop	{r7, pc}
 800c888:	080285a4 	.word	0x080285a4

0800c88c <_ZN12MainViewBaseD0Ev>:
MainViewBase::~MainViewBase()
 800c88c:	b580      	push	{r7, lr}
 800c88e:	b082      	sub	sp, #8
 800c890:	af00      	add	r7, sp, #0
 800c892:	6078      	str	r0, [r7, #4]
}
 800c894:	6878      	ldr	r0, [r7, #4]
 800c896:	f7ff ffa9 	bl	800c7ec <_ZN12MainViewBaseD1Ev>
 800c89a:	f44f 7175 	mov.w	r1, #980	@ 0x3d4
 800c89e:	6878      	ldr	r0, [r7, #4]
 800c8a0:	f019 f8f7 	bl	8025a92 <_ZdlPvj>
 800c8a4:	687b      	ldr	r3, [r7, #4]
 800c8a6:	4618      	mov	r0, r3
 800c8a8:	3708      	adds	r7, #8
 800c8aa:	46bd      	mov	sp, r7
 800c8ac:	bd80      	pop	{r7, pc}

0800c8ae <_ZN12MainViewBase11setupScreenEv>:

void MainViewBase::setupScreen()
{
 800c8ae:	b480      	push	{r7}
 800c8b0:	b083      	sub	sp, #12
 800c8b2:	af00      	add	r7, sp, #0
 800c8b4:	6078      	str	r0, [r7, #4]

}
 800c8b6:	bf00      	nop
 800c8b8:	370c      	adds	r7, #12
 800c8ba:	46bd      	mov	sp, r7
 800c8bc:	f85d 7b04 	ldr.w	r7, [sp], #4
 800c8c0:	4770      	bx	lr

0800c8c2 <_ZN12MainViewBase21buttonCallbackHandlerERKN8touchgfx14AbstractButtonE>:

void MainViewBase::buttonCallbackHandler(const touchgfx::AbstractButton& src)
{
 800c8c2:	b580      	push	{r7, lr}
 800c8c4:	b082      	sub	sp, #8
 800c8c6:	af00      	add	r7, sp, #0
 800c8c8:	6078      	str	r0, [r7, #4]
 800c8ca:	6039      	str	r1, [r7, #0]
    if (&src == &toggleButton1)
 800c8cc:	687b      	ldr	r3, [r7, #4]
 800c8ce:	336c      	adds	r3, #108	@ 0x6c
 800c8d0:	683a      	ldr	r2, [r7, #0]
 800c8d2:	429a      	cmp	r2, r3
 800c8d4:	d105      	bne.n	800c8e2 <_ZN12MainViewBase21buttonCallbackHandlerERKN8touchgfx14AbstractButtonE+0x20>
    {
        //Interaction1
        //When toggleButton1 clicked call virtual function
        //Call ToggleLights
        ToggleLights();
 800c8d6:	687b      	ldr	r3, [r7, #4]
 800c8d8:	681b      	ldr	r3, [r3, #0]
 800c8da:	332c      	adds	r3, #44	@ 0x2c
 800c8dc:	681b      	ldr	r3, [r3, #0]
 800c8de:	6878      	ldr	r0, [r7, #4]
 800c8e0:	4798      	blx	r3
    }
}
 800c8e2:	bf00      	nop
 800c8e4:	3708      	adds	r7, #8
 800c8e6:	46bd      	mov	sp, r7
 800c8e8:	bd80      	pop	{r7, pc}

0800c8ea <_ZN12MainViewBase25flexButtonCallbackHandlerERKN8touchgfx23AbstractButtonContainerE>:

void MainViewBase::flexButtonCallbackHandler(const touchgfx::AbstractButtonContainer& src)
{
 800c8ea:	b580      	push	{r7, lr}
 800c8ec:	b082      	sub	sp, #8
 800c8ee:	af00      	add	r7, sp, #0
 800c8f0:	6078      	str	r0, [r7, #4]
 800c8f2:	6039      	str	r1, [r7, #0]
    if (&src == &flexButton1)
 800c8f4:	687b      	ldr	r3, [r7, #4]
 800c8f6:	f503 73ea 	add.w	r3, r3, #468	@ 0x1d4
 800c8fa:	683a      	ldr	r2, [r7, #0]
 800c8fc:	429a      	cmp	r2, r3
 800c8fe:	d106      	bne.n	800c90e <_ZN12MainViewBase25flexButtonCallbackHandlerERKN8touchgfx23AbstractButtonContainerE+0x24>
    {
        //Interaction2
        //When flexButton1 clicked change screen to humidity_screen
        //Go to humidity_screen with no screen transition
        application().gotohumidity_screenScreenNoTransition();
 800c900:	6878      	ldr	r0, [r7, #4]
 800c902:	f7ff fa69 	bl	800bdd8 <_ZN12MainViewBase11applicationEv>
 800c906:	4603      	mov	r3, r0
 800c908:	4618      	mov	r0, r3
 800c90a:	f7fc f811 	bl	8008930 <_ZN23FrontendApplicationBase37gotohumidity_screenScreenNoTransitionEv>
    }
    if (&src == &flexButton1_1)
 800c90e:	687b      	ldr	r3, [r7, #4]
 800c910:	f503 7313 	add.w	r3, r3, #588	@ 0x24c
 800c914:	683a      	ldr	r2, [r7, #0]
 800c916:	429a      	cmp	r2, r3
 800c918:	d106      	bne.n	800c928 <_ZN12MainViewBase25flexButtonCallbackHandlerERKN8touchgfx23AbstractButtonContainerE+0x3e>
    {
        //Interaction3
        //When flexButton1_1 clicked change screen to temperature_screen
        //Go to temperature_screen with no screen transition
        application().gototemperature_screenScreenNoTransition();
 800c91a:	6878      	ldr	r0, [r7, #4]
 800c91c:	f7ff fa5c 	bl	800bdd8 <_ZN12MainViewBase11applicationEv>
 800c920:	4603      	mov	r3, r0
 800c922:	4618      	mov	r0, r3
 800c924:	f7fc f84a 	bl	80089bc <_ZN23FrontendApplicationBase40gototemperature_screenScreenNoTransitionEv>
    }
    if (&src == &flexButton1_2)
 800c928:	687b      	ldr	r3, [r7, #4]
 800c92a:	f503 7331 	add.w	r3, r3, #708	@ 0x2c4
 800c92e:	683a      	ldr	r2, [r7, #0]
 800c930:	429a      	cmp	r2, r3
 800c932:	d106      	bne.n	800c942 <_ZN12MainViewBase25flexButtonCallbackHandlerERKN8touchgfx23AbstractButtonContainerE+0x58>
    {
        //Interaction4
        //When flexButton1_2 clicked change screen to light_screen
        //Go to light_screen with no screen transition
        application().gotolight_screenScreenNoTransition();
 800c934:	6878      	ldr	r0, [r7, #4]
 800c936:	f7ff fa4f 	bl	800bdd8 <_ZN12MainViewBase11applicationEv>
 800c93a:	4603      	mov	r3, r0
 800c93c:	4618      	mov	r0, r3
 800c93e:	f7fc f883 	bl	8008a48 <_ZN23FrontendApplicationBase34gotolight_screenScreenNoTransitionEv>
    }
}
 800c942:	bf00      	nop
 800c944:	3708      	adds	r7, #8
 800c946:	46bd      	mov	sp, r7
 800c948:	bd80      	pop	{r7, pc}
	...

0800c94c <_ZN8touchgfx4ViewI13MainPresenterEC1Ev>:
    View()
 800c94c:	b580      	push	{r7, lr}
 800c94e:	b082      	sub	sp, #8
 800c950:	af00      	add	r7, sp, #0
 800c952:	6078      	str	r0, [r7, #4]
        : presenter(0)
 800c954:	687b      	ldr	r3, [r7, #4]
 800c956:	4618      	mov	r0, r3
 800c958:	f008 fe58 	bl	801560c <_ZN8touchgfx6ScreenC1Ev>
 800c95c:	4a05      	ldr	r2, [pc, #20]	@ (800c974 <_ZN8touchgfx4ViewI13MainPresenterEC1Ev+0x28>)
 800c95e:	687b      	ldr	r3, [r7, #4]
 800c960:	601a      	str	r2, [r3, #0]
 800c962:	687b      	ldr	r3, [r7, #4]
 800c964:	2200      	movs	r2, #0
 800c966:	63da      	str	r2, [r3, #60]	@ 0x3c
    }
 800c968:	687b      	ldr	r3, [r7, #4]
 800c96a:	4618      	mov	r0, r3
 800c96c:	3708      	adds	r7, #8
 800c96e:	46bd      	mov	sp, r7
 800c970:	bd80      	pop	{r7, pc}
 800c972:	bf00      	nop
 800c974:	0802860c 	.word	0x0802860c

0800c978 <_ZN8touchgfx8CallbackI12MainViewBaseRKNS_14AbstractButtonEvvEC1EPS1_MS1_FvS4_E>:
    Callback(dest_type* pObject, void (dest_type::*pmemfun_1)(T1))
 800c978:	b580      	push	{r7, lr}
 800c97a:	b084      	sub	sp, #16
 800c97c:	af00      	add	r7, sp, #0
 800c97e:	60f8      	str	r0, [r7, #12]
 800c980:	60b9      	str	r1, [r7, #8]
 800c982:	4639      	mov	r1, r7
 800c984:	e881 000c 	stmia.w	r1, {r2, r3}
        : pobject(pObject), pmemfun(pmemfun_1)
 800c988:	68fb      	ldr	r3, [r7, #12]
 800c98a:	4618      	mov	r0, r3
 800c98c:	f7fe fab0 	bl	800aef0 <_ZN8touchgfx15GenericCallbackIRKNS_14AbstractButtonEvvEC1Ev>
 800c990:	4a08      	ldr	r2, [pc, #32]	@ (800c9b4 <_ZN8touchgfx8CallbackI12MainViewBaseRKNS_14AbstractButtonEvvEC1EPS1_MS1_FvS4_E+0x3c>)
 800c992:	68fb      	ldr	r3, [r7, #12]
 800c994:	601a      	str	r2, [r3, #0]
 800c996:	68fb      	ldr	r3, [r7, #12]
 800c998:	68ba      	ldr	r2, [r7, #8]
 800c99a:	605a      	str	r2, [r3, #4]
 800c99c:	68fb      	ldr	r3, [r7, #12]
 800c99e:	3308      	adds	r3, #8
 800c9a0:	463a      	mov	r2, r7
 800c9a2:	e892 0003 	ldmia.w	r2, {r0, r1}
 800c9a6:	e883 0003 	stmia.w	r3, {r0, r1}
    }
 800c9aa:	68fb      	ldr	r3, [r7, #12]
 800c9ac:	4618      	mov	r0, r3
 800c9ae:	3710      	adds	r7, #16
 800c9b0:	46bd      	mov	sp, r7
 800c9b2:	bd80      	pop	{r7, pc}
 800c9b4:	080285f4 	.word	0x080285f4

0800c9b8 <_ZN8touchgfx8CallbackI12MainViewBaseRKNS_23AbstractButtonContainerEvvEC1EPS1_MS1_FvS4_E>:
    Callback(dest_type* pObject, void (dest_type::*pmemfun_1)(T1))
 800c9b8:	b580      	push	{r7, lr}
 800c9ba:	b084      	sub	sp, #16
 800c9bc:	af00      	add	r7, sp, #0
 800c9be:	60f8      	str	r0, [r7, #12]
 800c9c0:	60b9      	str	r1, [r7, #8]
 800c9c2:	4639      	mov	r1, r7
 800c9c4:	e881 000c 	stmia.w	r1, {r2, r3}
        : pobject(pObject), pmemfun(pmemfun_1)
 800c9c8:	68fb      	ldr	r3, [r7, #12]
 800c9ca:	4618      	mov	r0, r3
 800c9cc:	f7fe fa60 	bl	800ae90 <_ZN8touchgfx15GenericCallbackIRKNS_23AbstractButtonContainerEvvEC1Ev>
 800c9d0:	4a08      	ldr	r2, [pc, #32]	@ (800c9f4 <_ZN8touchgfx8CallbackI12MainViewBaseRKNS_23AbstractButtonContainerEvvEC1EPS1_MS1_FvS4_E+0x3c>)
 800c9d2:	68fb      	ldr	r3, [r7, #12]
 800c9d4:	601a      	str	r2, [r3, #0]
 800c9d6:	68fb      	ldr	r3, [r7, #12]
 800c9d8:	68ba      	ldr	r2, [r7, #8]
 800c9da:	605a      	str	r2, [r3, #4]
 800c9dc:	68fb      	ldr	r3, [r7, #12]
 800c9de:	3308      	adds	r3, #8
 800c9e0:	463a      	mov	r2, r7
 800c9e2:	e892 0003 	ldmia.w	r2, {r0, r1}
 800c9e6:	e883 0003 	stmia.w	r3, {r0, r1}
    }
 800c9ea:	68fb      	ldr	r3, [r7, #12]
 800c9ec:	4618      	mov	r0, r3
 800c9ee:	3710      	adds	r7, #16
 800c9f0:	46bd      	mov	sp, r7
 800c9f2:	bd80      	pop	{r7, pc}
 800c9f4:	080285dc 	.word	0x080285dc

0800c9f8 <_ZN8touchgfx8CallbackI12MainViewBaseRKNS_23AbstractButtonContainerEvvED1Ev>:
struct Callback<dest_type, T1, void, void> : public GenericCallback<T1>
 800c9f8:	b580      	push	{r7, lr}
 800c9fa:	b082      	sub	sp, #8
 800c9fc:	af00      	add	r7, sp, #0
 800c9fe:	6078      	str	r0, [r7, #4]
 800ca00:	4a05      	ldr	r2, [pc, #20]	@ (800ca18 <_ZN8touchgfx8CallbackI12MainViewBaseRKNS_23AbstractButtonContainerEvvED1Ev+0x20>)
 800ca02:	687b      	ldr	r3, [r7, #4]
 800ca04:	601a      	str	r2, [r3, #0]
 800ca06:	687b      	ldr	r3, [r7, #4]
 800ca08:	4618      	mov	r0, r3
 800ca0a:	f7fe faf1 	bl	800aff0 <_ZN8touchgfx15GenericCallbackIRKNS_23AbstractButtonContainerEvvED1Ev>
 800ca0e:	687b      	ldr	r3, [r7, #4]
 800ca10:	4618      	mov	r0, r3
 800ca12:	3708      	adds	r7, #8
 800ca14:	46bd      	mov	sp, r7
 800ca16:	bd80      	pop	{r7, pc}
 800ca18:	080285dc 	.word	0x080285dc

0800ca1c <_ZN8touchgfx8CallbackI12MainViewBaseRKNS_23AbstractButtonContainerEvvED0Ev>:
 800ca1c:	b580      	push	{r7, lr}
 800ca1e:	b082      	sub	sp, #8
 800ca20:	af00      	add	r7, sp, #0
 800ca22:	6078      	str	r0, [r7, #4]
 800ca24:	6878      	ldr	r0, [r7, #4]
 800ca26:	f7ff ffe7 	bl	800c9f8 <_ZN8touchgfx8CallbackI12MainViewBaseRKNS_23AbstractButtonContainerEvvED1Ev>
 800ca2a:	2110      	movs	r1, #16
 800ca2c:	6878      	ldr	r0, [r7, #4]
 800ca2e:	f019 f830 	bl	8025a92 <_ZdlPvj>
 800ca32:	687b      	ldr	r3, [r7, #4]
 800ca34:	4618      	mov	r0, r3
 800ca36:	3708      	adds	r7, #8
 800ca38:	46bd      	mov	sp, r7
 800ca3a:	bd80      	pop	{r7, pc}

0800ca3c <_ZN8touchgfx8CallbackI12MainViewBaseRKNS_14AbstractButtonEvvED1Ev>:
 800ca3c:	b580      	push	{r7, lr}
 800ca3e:	b082      	sub	sp, #8
 800ca40:	af00      	add	r7, sp, #0
 800ca42:	6078      	str	r0, [r7, #4]
 800ca44:	4a05      	ldr	r2, [pc, #20]	@ (800ca5c <_ZN8touchgfx8CallbackI12MainViewBaseRKNS_14AbstractButtonEvvED1Ev+0x20>)
 800ca46:	687b      	ldr	r3, [r7, #4]
 800ca48:	601a      	str	r2, [r3, #0]
 800ca4a:	687b      	ldr	r3, [r7, #4]
 800ca4c:	4618      	mov	r0, r3
 800ca4e:	f7fe faef 	bl	800b030 <_ZN8touchgfx15GenericCallbackIRKNS_14AbstractButtonEvvED1Ev>
 800ca52:	687b      	ldr	r3, [r7, #4]
 800ca54:	4618      	mov	r0, r3
 800ca56:	3708      	adds	r7, #8
 800ca58:	46bd      	mov	sp, r7
 800ca5a:	bd80      	pop	{r7, pc}
 800ca5c:	080285f4 	.word	0x080285f4

0800ca60 <_ZN8touchgfx8CallbackI12MainViewBaseRKNS_14AbstractButtonEvvED0Ev>:
 800ca60:	b580      	push	{r7, lr}
 800ca62:	b082      	sub	sp, #8
 800ca64:	af00      	add	r7, sp, #0
 800ca66:	6078      	str	r0, [r7, #4]
 800ca68:	6878      	ldr	r0, [r7, #4]
 800ca6a:	f7ff ffe7 	bl	800ca3c <_ZN8touchgfx8CallbackI12MainViewBaseRKNS_14AbstractButtonEvvED1Ev>
 800ca6e:	2110      	movs	r1, #16
 800ca70:	6878      	ldr	r0, [r7, #4]
 800ca72:	f019 f80e 	bl	8025a92 <_ZdlPvj>
 800ca76:	687b      	ldr	r3, [r7, #4]
 800ca78:	4618      	mov	r0, r3
 800ca7a:	3708      	adds	r7, #8
 800ca7c:	46bd      	mov	sp, r7
 800ca7e:	bd80      	pop	{r7, pc}

0800ca80 <_ZN8touchgfx12ToggleButtonD1Ev>:
 800ca80:	b580      	push	{r7, lr}
 800ca82:	b082      	sub	sp, #8
 800ca84:	af00      	add	r7, sp, #0
 800ca86:	6078      	str	r0, [r7, #4]
 800ca88:	4a05      	ldr	r2, [pc, #20]	@ (800caa0 <_ZN8touchgfx12ToggleButtonD1Ev+0x20>)
 800ca8a:	687b      	ldr	r3, [r7, #4]
 800ca8c:	601a      	str	r2, [r3, #0]
 800ca8e:	687b      	ldr	r3, [r7, #4]
 800ca90:	4618      	mov	r0, r3
 800ca92:	f7fe fbad 	bl	800b1f0 <_ZN8touchgfx6ButtonD1Ev>
 800ca96:	687b      	ldr	r3, [r7, #4]
 800ca98:	4618      	mov	r0, r3
 800ca9a:	3708      	adds	r7, #8
 800ca9c:	46bd      	mov	sp, r7
 800ca9e:	bd80      	pop	{r7, pc}
 800caa0:	08029094 	.word	0x08029094

0800caa4 <_ZN8touchgfx12ToggleButtonD0Ev>:
 800caa4:	b580      	push	{r7, lr}
 800caa6:	b082      	sub	sp, #8
 800caa8:	af00      	add	r7, sp, #0
 800caaa:	6078      	str	r0, [r7, #4]
 800caac:	6878      	ldr	r0, [r7, #4]
 800caae:	f7ff ffe7 	bl	800ca80 <_ZN8touchgfx12ToggleButtonD1Ev>
 800cab2:	2138      	movs	r1, #56	@ 0x38
 800cab4:	6878      	ldr	r0, [r7, #4]
 800cab6:	f018 ffec 	bl	8025a92 <_ZdlPvj>
 800caba:	687b      	ldr	r3, [r7, #4]
 800cabc:	4618      	mov	r0, r3
 800cabe:	3708      	adds	r7, #8
 800cac0:	46bd      	mov	sp, r7
 800cac2:	bd80      	pop	{r7, pc}

0800cac4 <_ZN8touchgfx8CallbackI12MainViewBaseRKNS_23AbstractButtonContainerEvvE7executeES4_>:
    virtual void execute(T1 t1)
 800cac4:	b580      	push	{r7, lr}
 800cac6:	b082      	sub	sp, #8
 800cac8:	af00      	add	r7, sp, #0
 800caca:	6078      	str	r0, [r7, #4]
 800cacc:	6039      	str	r1, [r7, #0]
        (pobject->*pmemfun)(t1);
 800cace:	687b      	ldr	r3, [r7, #4]
 800cad0:	685b      	ldr	r3, [r3, #4]
 800cad2:	687a      	ldr	r2, [r7, #4]
 800cad4:	68d2      	ldr	r2, [r2, #12]
 800cad6:	1052      	asrs	r2, r2, #1
 800cad8:	1898      	adds	r0, r3, r2
 800cada:	687b      	ldr	r3, [r7, #4]
 800cadc:	68db      	ldr	r3, [r3, #12]
 800cade:	f003 0301 	and.w	r3, r3, #1
 800cae2:	2b00      	cmp	r3, #0
 800cae4:	d102      	bne.n	800caec <_ZN8touchgfx8CallbackI12MainViewBaseRKNS_23AbstractButtonContainerEvvE7executeES4_+0x28>
 800cae6:	687b      	ldr	r3, [r7, #4]
 800cae8:	689b      	ldr	r3, [r3, #8]
 800caea:	e00a      	b.n	800cb02 <_ZN8touchgfx8CallbackI12MainViewBaseRKNS_23AbstractButtonContainerEvvE7executeES4_+0x3e>
 800caec:	687b      	ldr	r3, [r7, #4]
 800caee:	685b      	ldr	r3, [r3, #4]
 800caf0:	687a      	ldr	r2, [r7, #4]
 800caf2:	68d2      	ldr	r2, [r2, #12]
 800caf4:	1052      	asrs	r2, r2, #1
 800caf6:	4413      	add	r3, r2
 800caf8:	681b      	ldr	r3, [r3, #0]
 800cafa:	687a      	ldr	r2, [r7, #4]
 800cafc:	6892      	ldr	r2, [r2, #8]
 800cafe:	4413      	add	r3, r2
 800cb00:	681b      	ldr	r3, [r3, #0]
 800cb02:	6839      	ldr	r1, [r7, #0]
 800cb04:	4798      	blx	r3
    }
 800cb06:	bf00      	nop
 800cb08:	3708      	adds	r7, #8
 800cb0a:	46bd      	mov	sp, r7
 800cb0c:	bd80      	pop	{r7, pc}

0800cb0e <_ZNK8touchgfx8CallbackI12MainViewBaseRKNS_23AbstractButtonContainerEvvE7isValidEv>:
    virtual bool isValid() const
 800cb0e:	b480      	push	{r7}
 800cb10:	b083      	sub	sp, #12
 800cb12:	af00      	add	r7, sp, #0
 800cb14:	6078      	str	r0, [r7, #4]
        return (pobject != 0) && (pmemfun != 0);
 800cb16:	687b      	ldr	r3, [r7, #4]
 800cb18:	685b      	ldr	r3, [r3, #4]
 800cb1a:	2b00      	cmp	r3, #0
 800cb1c:	d010      	beq.n	800cb40 <_ZNK8touchgfx8CallbackI12MainViewBaseRKNS_23AbstractButtonContainerEvvE7isValidEv+0x32>
 800cb1e:	687b      	ldr	r3, [r7, #4]
 800cb20:	689b      	ldr	r3, [r3, #8]
 800cb22:	2b00      	cmp	r3, #0
 800cb24:	d107      	bne.n	800cb36 <_ZNK8touchgfx8CallbackI12MainViewBaseRKNS_23AbstractButtonContainerEvvE7isValidEv+0x28>
 800cb26:	687b      	ldr	r3, [r7, #4]
 800cb28:	68db      	ldr	r3, [r3, #12]
 800cb2a:	f003 0301 	and.w	r3, r3, #1
 800cb2e:	2b00      	cmp	r3, #0
 800cb30:	d101      	bne.n	800cb36 <_ZNK8touchgfx8CallbackI12MainViewBaseRKNS_23AbstractButtonContainerEvvE7isValidEv+0x28>
 800cb32:	2301      	movs	r3, #1
 800cb34:	e000      	b.n	800cb38 <_ZNK8touchgfx8CallbackI12MainViewBaseRKNS_23AbstractButtonContainerEvvE7isValidEv+0x2a>
 800cb36:	2300      	movs	r3, #0
 800cb38:	2b01      	cmp	r3, #1
 800cb3a:	d001      	beq.n	800cb40 <_ZNK8touchgfx8CallbackI12MainViewBaseRKNS_23AbstractButtonContainerEvvE7isValidEv+0x32>
 800cb3c:	2301      	movs	r3, #1
 800cb3e:	e000      	b.n	800cb42 <_ZNK8touchgfx8CallbackI12MainViewBaseRKNS_23AbstractButtonContainerEvvE7isValidEv+0x34>
 800cb40:	2300      	movs	r3, #0
    }
 800cb42:	4618      	mov	r0, r3
 800cb44:	370c      	adds	r7, #12
 800cb46:	46bd      	mov	sp, r7
 800cb48:	f85d 7b04 	ldr.w	r7, [sp], #4
 800cb4c:	4770      	bx	lr

0800cb4e <_ZN8touchgfx8CallbackI12MainViewBaseRKNS_14AbstractButtonEvvE7executeES4_>:
    virtual void execute(T1 t1)
 800cb4e:	b580      	push	{r7, lr}
 800cb50:	b082      	sub	sp, #8
 800cb52:	af00      	add	r7, sp, #0
 800cb54:	6078      	str	r0, [r7, #4]
 800cb56:	6039      	str	r1, [r7, #0]
        (pobject->*pmemfun)(t1);
 800cb58:	687b      	ldr	r3, [r7, #4]
 800cb5a:	685b      	ldr	r3, [r3, #4]
 800cb5c:	687a      	ldr	r2, [r7, #4]
 800cb5e:	68d2      	ldr	r2, [r2, #12]
 800cb60:	1052      	asrs	r2, r2, #1
 800cb62:	1898      	adds	r0, r3, r2
 800cb64:	687b      	ldr	r3, [r7, #4]
 800cb66:	68db      	ldr	r3, [r3, #12]
 800cb68:	f003 0301 	and.w	r3, r3, #1
 800cb6c:	2b00      	cmp	r3, #0
 800cb6e:	d102      	bne.n	800cb76 <_ZN8touchgfx8CallbackI12MainViewBaseRKNS_14AbstractButtonEvvE7executeES4_+0x28>
 800cb70:	687b      	ldr	r3, [r7, #4]
 800cb72:	689b      	ldr	r3, [r3, #8]
 800cb74:	e00a      	b.n	800cb8c <_ZN8touchgfx8CallbackI12MainViewBaseRKNS_14AbstractButtonEvvE7executeES4_+0x3e>
 800cb76:	687b      	ldr	r3, [r7, #4]
 800cb78:	685b      	ldr	r3, [r3, #4]
 800cb7a:	687a      	ldr	r2, [r7, #4]
 800cb7c:	68d2      	ldr	r2, [r2, #12]
 800cb7e:	1052      	asrs	r2, r2, #1
 800cb80:	4413      	add	r3, r2
 800cb82:	681b      	ldr	r3, [r3, #0]
 800cb84:	687a      	ldr	r2, [r7, #4]
 800cb86:	6892      	ldr	r2, [r2, #8]
 800cb88:	4413      	add	r3, r2
 800cb8a:	681b      	ldr	r3, [r3, #0]
 800cb8c:	6839      	ldr	r1, [r7, #0]
 800cb8e:	4798      	blx	r3
    }
 800cb90:	bf00      	nop
 800cb92:	3708      	adds	r7, #8
 800cb94:	46bd      	mov	sp, r7
 800cb96:	bd80      	pop	{r7, pc}

0800cb98 <_ZNK8touchgfx8CallbackI12MainViewBaseRKNS_14AbstractButtonEvvE7isValidEv>:
    virtual bool isValid() const
 800cb98:	b480      	push	{r7}
 800cb9a:	b083      	sub	sp, #12
 800cb9c:	af00      	add	r7, sp, #0
 800cb9e:	6078      	str	r0, [r7, #4]
        return (pobject != 0) && (pmemfun != 0);
 800cba0:	687b      	ldr	r3, [r7, #4]
 800cba2:	685b      	ldr	r3, [r3, #4]
 800cba4:	2b00      	cmp	r3, #0
 800cba6:	d010      	beq.n	800cbca <_ZNK8touchgfx8CallbackI12MainViewBaseRKNS_14AbstractButtonEvvE7isValidEv+0x32>
 800cba8:	687b      	ldr	r3, [r7, #4]
 800cbaa:	689b      	ldr	r3, [r3, #8]
 800cbac:	2b00      	cmp	r3, #0
 800cbae:	d107      	bne.n	800cbc0 <_ZNK8touchgfx8CallbackI12MainViewBaseRKNS_14AbstractButtonEvvE7isValidEv+0x28>
 800cbb0:	687b      	ldr	r3, [r7, #4]
 800cbb2:	68db      	ldr	r3, [r3, #12]
 800cbb4:	f003 0301 	and.w	r3, r3, #1
 800cbb8:	2b00      	cmp	r3, #0
 800cbba:	d101      	bne.n	800cbc0 <_ZNK8touchgfx8CallbackI12MainViewBaseRKNS_14AbstractButtonEvvE7isValidEv+0x28>
 800cbbc:	2301      	movs	r3, #1
 800cbbe:	e000      	b.n	800cbc2 <_ZNK8touchgfx8CallbackI12MainViewBaseRKNS_14AbstractButtonEvvE7isValidEv+0x2a>
 800cbc0:	2300      	movs	r3, #0
 800cbc2:	2b01      	cmp	r3, #1
 800cbc4:	d001      	beq.n	800cbca <_ZNK8touchgfx8CallbackI12MainViewBaseRKNS_14AbstractButtonEvvE7isValidEv+0x32>
 800cbc6:	2301      	movs	r3, #1
 800cbc8:	e000      	b.n	800cbcc <_ZNK8touchgfx8CallbackI12MainViewBaseRKNS_14AbstractButtonEvvE7isValidEv+0x34>
 800cbca:	2300      	movs	r3, #0
    }
 800cbcc:	4618      	mov	r0, r3
 800cbce:	370c      	adds	r7, #12
 800cbd0:	46bd      	mov	sp, r7
 800cbd2:	f85d 7b04 	ldr.w	r7, [sp], #4
 800cbd6:	4770      	bx	lr

0800cbd8 <_ZN26temperature_screenViewBase8increaseEv>:
    virtual void setupScreen();

    /*
     * Virtual Action Handlers
     */
    virtual void increase()
 800cbd8:	b480      	push	{r7}
 800cbda:	b083      	sub	sp, #12
 800cbdc:	af00      	add	r7, sp, #0
 800cbde:	6078      	str	r0, [r7, #4]
    {
        // Override and implement this function in temperature_screen
    }
 800cbe0:	bf00      	nop
 800cbe2:	370c      	adds	r7, #12
 800cbe4:	46bd      	mov	sp, r7
 800cbe6:	f85d 7b04 	ldr.w	r7, [sp], #4
 800cbea:	4770      	bx	lr

0800cbec <_ZN26temperature_screenViewBase8decreaseEv>:
    virtual void decrease()
 800cbec:	b480      	push	{r7}
 800cbee:	b083      	sub	sp, #12
 800cbf0:	af00      	add	r7, sp, #0
 800cbf2:	6078      	str	r0, [r7, #4]
    {
        // Override and implement this function in temperature_screen
    }
 800cbf4:	bf00      	nop
 800cbf6:	370c      	adds	r7, #12
 800cbf8:	46bd      	mov	sp, r7
 800cbfa:	f85d 7b04 	ldr.w	r7, [sp], #4
 800cbfe:	4770      	bx	lr

0800cc00 <_ZN26temperature_screenViewBase11applicationEv>:

protected:
    FrontendApplication& application() {
 800cc00:	b580      	push	{r7, lr}
 800cc02:	b082      	sub	sp, #8
 800cc04:	af00      	add	r7, sp, #0
 800cc06:	6078      	str	r0, [r7, #4]
        return *static_cast<FrontendApplication*>(touchgfx::Application::getInstance());
 800cc08:	f007 f9ea 	bl	8013fe0 <_ZN8touchgfx11Application11getInstanceEv>
 800cc0c:	4603      	mov	r3, r0
    }
 800cc0e:	4618      	mov	r0, r3
 800cc10:	3708      	adds	r7, #8
 800cc12:	46bd      	mov	sp, r7
 800cc14:	bd80      	pop	{r7, pc}
	...

0800cc18 <_ZN8touchgfx4ViewI27temperature_screenPresenterED1Ev>:
class View : public Screen
 800cc18:	b580      	push	{r7, lr}
 800cc1a:	b082      	sub	sp, #8
 800cc1c:	af00      	add	r7, sp, #0
 800cc1e:	6078      	str	r0, [r7, #4]
 800cc20:	4a05      	ldr	r2, [pc, #20]	@ (800cc38 <_ZN8touchgfx4ViewI27temperature_screenPresenterED1Ev+0x20>)
 800cc22:	687b      	ldr	r3, [r7, #4]
 800cc24:	601a      	str	r2, [r3, #0]
 800cc26:	687b      	ldr	r3, [r7, #4]
 800cc28:	4618      	mov	r0, r3
 800cc2a:	f7fd f833 	bl	8009c94 <_ZN8touchgfx6ScreenD1Ev>
 800cc2e:	687b      	ldr	r3, [r7, #4]
 800cc30:	4618      	mov	r0, r3
 800cc32:	3708      	adds	r7, #8
 800cc34:	46bd      	mov	sp, r7
 800cc36:	bd80      	pop	{r7, pc}
 800cc38:	080286ac 	.word	0x080286ac

0800cc3c <_ZN8touchgfx4ViewI27temperature_screenPresenterED0Ev>:
 800cc3c:	b580      	push	{r7, lr}
 800cc3e:	b082      	sub	sp, #8
 800cc40:	af00      	add	r7, sp, #0
 800cc42:	6078      	str	r0, [r7, #4]
 800cc44:	6878      	ldr	r0, [r7, #4]
 800cc46:	f7ff ffe7 	bl	800cc18 <_ZN8touchgfx4ViewI27temperature_screenPresenterED1Ev>
 800cc4a:	2140      	movs	r1, #64	@ 0x40
 800cc4c:	6878      	ldr	r0, [r7, #4]
 800cc4e:	f018 ff20 	bl	8025a92 <_ZdlPvj>
 800cc52:	687b      	ldr	r3, [r7, #4]
 800cc54:	4618      	mov	r0, r3
 800cc56:	3708      	adds	r7, #8
 800cc58:	46bd      	mov	sp, r7
 800cc5a:	bd80      	pop	{r7, pc}

0800cc5c <_ZN26temperature_screenViewBaseC1Ev>:
#include <gui_generated/temperature_screen_screen/temperature_screenViewBase.hpp>
#include <touchgfx/Color.hpp>
#include <texts/TextKeysAndLanguages.hpp>
#include <images/BitmapDatabase.hpp>

temperature_screenViewBase::temperature_screenViewBase() :
 800cc5c:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 800cc60:	b0ae      	sub	sp, #184	@ 0xb8
 800cc62:	af02      	add	r7, sp, #8
 800cc64:	6178      	str	r0, [r7, #20]
    flexButtonCallback(this, &temperature_screenViewBase::flexButtonCallbackHandler),
    buttonCallback(this, &temperature_screenViewBase::buttonCallbackHandler)
 800cc66:	697b      	ldr	r3, [r7, #20]
 800cc68:	4618      	mov	r0, r3
 800cc6a:	f000 fb37 	bl	800d2dc <_ZN8touchgfx4ViewI27temperature_screenPresenterEC1Ev>
 800cc6e:	4add      	ldr	r2, [pc, #884]	@ (800cfe4 <_ZN26temperature_screenViewBaseC1Ev+0x388>)
 800cc70:	697b      	ldr	r3, [r7, #20]
 800cc72:	601a      	str	r2, [r3, #0]
 800cc74:	697b      	ldr	r3, [r7, #20]
 800cc76:	3340      	adds	r3, #64	@ 0x40
 800cc78:	4618      	mov	r0, r3
 800cc7a:	f7fd f8a7 	bl	8009dcc <_ZN8touchgfx3BoxC1Ev>
 800cc7e:	697b      	ldr	r3, [r7, #20]
 800cc80:	336c      	adds	r3, #108	@ 0x6c
 800cc82:	4618      	mov	r0, r3
 800cc84:	f7fd f8fa 	bl	8009e7c <_ZN8touchgfx8TextAreaC1Ev>
 800cc88:	697b      	ldr	r3, [r7, #20]
 800cc8a:	33b4      	adds	r3, #180	@ 0xb4
 800cc8c:	4618      	mov	r0, r3
 800cc8e:	f7fe f8bf 	bl	800ae10 <_ZN8touchgfx24BoxWithBorderButtonStyleINS_18ClickButtonTriggerEEC1Ev>
 800cc92:	697b      	ldr	r3, [r7, #20]
 800cc94:	f503 7396 	add.w	r3, r3, #300	@ 0x12c
 800cc98:	4618      	mov	r0, r3
 800cc9a:	f7fd fc27 	bl	800a4ec <_ZN8touchgfx23TextAreaWithOneWildcardC1Ev>
 800cc9e:	697b      	ldr	r3, [r7, #20]
 800cca0:	f503 73bc 	add.w	r3, r3, #376	@ 0x178
 800cca4:	4618      	mov	r0, r3
 800cca6:	f005 fc99 	bl	80125dc <_ZN8touchgfx14ButtonWithIconC1Ev>
 800ccaa:	697b      	ldr	r3, [r7, #20]
 800ccac:	f503 73da 	add.w	r3, r3, #436	@ 0x1b4
 800ccb0:	4618      	mov	r0, r3
 800ccb2:	f005 fc93 	bl	80125dc <_ZN8touchgfx14ButtonWithIconC1Ev>
    flexButtonCallback(this, &temperature_screenViewBase::flexButtonCallbackHandler),
 800ccb6:	697b      	ldr	r3, [r7, #20]
 800ccb8:	f503 7001 	add.w	r0, r3, #516	@ 0x204
 800ccbc:	4bca      	ldr	r3, [pc, #808]	@ (800cfe8 <_ZN26temperature_screenViewBaseC1Ev+0x38c>)
 800ccbe:	627b      	str	r3, [r7, #36]	@ 0x24
 800ccc0:	2300      	movs	r3, #0
 800ccc2:	62bb      	str	r3, [r7, #40]	@ 0x28
 800ccc4:	f107 0324 	add.w	r3, r7, #36	@ 0x24
 800ccc8:	cb0c      	ldmia	r3, {r2, r3}
 800ccca:	6979      	ldr	r1, [r7, #20]
 800cccc:	f000 fb1c 	bl	800d308 <_ZN8touchgfx8CallbackI26temperature_screenViewBaseRKNS_23AbstractButtonContainerEvvEC1EPS1_MS1_FvS4_E>
    buttonCallback(this, &temperature_screenViewBase::buttonCallbackHandler)
 800ccd0:	697b      	ldr	r3, [r7, #20]
 800ccd2:	f503 7005 	add.w	r0, r3, #532	@ 0x214
 800ccd6:	4bc5      	ldr	r3, [pc, #788]	@ (800cfec <_ZN26temperature_screenViewBaseC1Ev+0x390>)
 800ccd8:	62fb      	str	r3, [r7, #44]	@ 0x2c
 800ccda:	2300      	movs	r3, #0
 800ccdc:	633b      	str	r3, [r7, #48]	@ 0x30
 800ccde:	f107 032c 	add.w	r3, r7, #44	@ 0x2c
 800cce2:	cb0c      	ldmia	r3, {r2, r3}
 800cce4:	6979      	ldr	r1, [r7, #20]
 800cce6:	f000 fb2f 	bl	800d348 <_ZN8touchgfx8CallbackI26temperature_screenViewBaseRKNS_14AbstractButtonEvvEC1EPS1_MS1_FvS4_E>
{
    __background.setPosition(0, 0, 480, 320);
 800ccea:	697b      	ldr	r3, [r7, #20]
 800ccec:	f103 0040 	add.w	r0, r3, #64	@ 0x40
 800ccf0:	f44f 73a0 	mov.w	r3, #320	@ 0x140
 800ccf4:	9300      	str	r3, [sp, #0]
 800ccf6:	f44f 73f0 	mov.w	r3, #480	@ 0x1e0
 800ccfa:	2200      	movs	r2, #0
 800ccfc:	2100      	movs	r1, #0
 800ccfe:	f7fc fe3f 	bl	8009980 <_ZN8touchgfx8Drawable11setPositionEssss>
    __background.setColor(touchgfx::Color::getColorFromRGB(0, 0, 0));
 800cd02:	697b      	ldr	r3, [r7, #20]
 800cd04:	f103 0440 	add.w	r4, r3, #64	@ 0x40
 800cd08:	2300      	movs	r3, #0
 800cd0a:	f887 3084 	strb.w	r3, [r7, #132]	@ 0x84
 800cd0e:	2300      	movs	r3, #0
 800cd10:	f887 3083 	strb.w	r3, [r7, #131]	@ 0x83
 800cd14:	2300      	movs	r3, #0
 800cd16:	f887 3082 	strb.w	r3, [r7, #130]	@ 0x82
 800cd1a:	f897 3084 	ldrb.w	r3, [r7, #132]	@ 0x84
 800cd1e:	041a      	lsls	r2, r3, #16
 800cd20:	f897 3083 	ldrb.w	r3, [r7, #131]	@ 0x83
 800cd24:	021b      	lsls	r3, r3, #8
 800cd26:	431a      	orrs	r2, r3
 800cd28:	f897 3082 	ldrb.w	r3, [r7, #130]	@ 0x82
 800cd2c:	4313      	orrs	r3, r2
 800cd2e:	f043 427f 	orr.w	r2, r3, #4278190080	@ 0xff000000
 800cd32:	f107 037c 	add.w	r3, r7, #124	@ 0x7c
 800cd36:	4611      	mov	r1, r2
 800cd38:	4618      	mov	r0, r3
 800cd3a:	f7fc fd51 	bl	80097e0 <_ZN8touchgfx9colortypeC1Em>
 800cd3e:	6ffb      	ldr	r3, [r7, #124]	@ 0x7c
 800cd40:	4619      	mov	r1, r3
 800cd42:	4620      	mov	r0, r4
 800cd44:	f7fd f866 	bl	8009e14 <_ZN8touchgfx3Box8setColorENS_9colortypeE>
    add(__background);
 800cd48:	697a      	ldr	r2, [r7, #20]
 800cd4a:	697b      	ldr	r3, [r7, #20]
 800cd4c:	3340      	adds	r3, #64	@ 0x40
 800cd4e:	4619      	mov	r1, r3
 800cd50:	4610      	mov	r0, r2
 800cd52:	f7fc fff7 	bl	8009d44 <_ZN8touchgfx6Screen3addERNS_8DrawableE>

    textarea.setPosition(87, 18, 306, 48);
 800cd56:	697b      	ldr	r3, [r7, #20]
 800cd58:	f103 006c 	add.w	r0, r3, #108	@ 0x6c
 800cd5c:	2330      	movs	r3, #48	@ 0x30
 800cd5e:	9300      	str	r3, [sp, #0]
 800cd60:	f44f 7399 	mov.w	r3, #306	@ 0x132
 800cd64:	2212      	movs	r2, #18
 800cd66:	2157      	movs	r1, #87	@ 0x57
 800cd68:	f7fc fe0a 	bl	8009980 <_ZN8touchgfx8Drawable11setPositionEssss>
    textarea.setColor(touchgfx::Color::getColorFromRGB(255, 255, 255));
 800cd6c:	697b      	ldr	r3, [r7, #20]
 800cd6e:	f103 046c 	add.w	r4, r3, #108	@ 0x6c
 800cd72:	23ff      	movs	r3, #255	@ 0xff
 800cd74:	f887 3087 	strb.w	r3, [r7, #135]	@ 0x87
 800cd78:	23ff      	movs	r3, #255	@ 0xff
 800cd7a:	f887 3086 	strb.w	r3, [r7, #134]	@ 0x86
 800cd7e:	23ff      	movs	r3, #255	@ 0xff
 800cd80:	f887 3085 	strb.w	r3, [r7, #133]	@ 0x85
 800cd84:	f897 3087 	ldrb.w	r3, [r7, #135]	@ 0x87
 800cd88:	041a      	lsls	r2, r3, #16
 800cd8a:	f897 3086 	ldrb.w	r3, [r7, #134]	@ 0x86
 800cd8e:	021b      	lsls	r3, r3, #8
 800cd90:	431a      	orrs	r2, r3
 800cd92:	f897 3085 	ldrb.w	r3, [r7, #133]	@ 0x85
 800cd96:	4313      	orrs	r3, r2
 800cd98:	f043 427f 	orr.w	r2, r3, #4278190080	@ 0xff000000
 800cd9c:	f107 0378 	add.w	r3, r7, #120	@ 0x78
 800cda0:	4611      	mov	r1, r2
 800cda2:	4618      	mov	r0, r3
 800cda4:	f7fc fd1c 	bl	80097e0 <_ZN8touchgfx9colortypeC1Em>
 800cda8:	6fbb      	ldr	r3, [r7, #120]	@ 0x78
 800cdaa:	f8c7 4088 	str.w	r4, [r7, #136]	@ 0x88
 800cdae:	623b      	str	r3, [r7, #32]
        color = newColor;
 800cdb0:	f8d7 3088 	ldr.w	r3, [r7, #136]	@ 0x88
 800cdb4:	6a3a      	ldr	r2, [r7, #32]
 800cdb6:	631a      	str	r2, [r3, #48]	@ 0x30
    }
 800cdb8:	bf00      	nop
    textarea.setLinespacing(0);
 800cdba:	697b      	ldr	r3, [r7, #20]
 800cdbc:	336c      	adds	r3, #108	@ 0x6c
 800cdbe:	f8c7 3090 	str.w	r3, [r7, #144]	@ 0x90
 800cdc2:	2300      	movs	r3, #0
 800cdc4:	f8a7 308e 	strh.w	r3, [r7, #142]	@ 0x8e
        linespace = space;
 800cdc8:	f8d7 3090 	ldr.w	r3, [r7, #144]	@ 0x90
 800cdcc:	f8b7 208e 	ldrh.w	r2, [r7, #142]	@ 0x8e
 800cdd0:	869a      	strh	r2, [r3, #52]	@ 0x34
        boundingArea = calculateBoundingArea();
 800cdd2:	f8d7 3090 	ldr.w	r3, [r7, #144]	@ 0x90
 800cdd6:	681b      	ldr	r3, [r3, #0]
 800cdd8:	3384      	adds	r3, #132	@ 0x84
 800cdda:	681b      	ldr	r3, [r3, #0]
 800cddc:	f8d7 4090 	ldr.w	r4, [r7, #144]	@ 0x90
 800cde0:	463a      	mov	r2, r7
 800cde2:	f8d7 1090 	ldr.w	r1, [r7, #144]	@ 0x90
 800cde6:	4610      	mov	r0, r2
 800cde8:	4798      	blx	r3
 800cdea:	f104 033c 	add.w	r3, r4, #60	@ 0x3c
 800cdee:	463a      	mov	r2, r7
 800cdf0:	ca07      	ldmia	r2, {r0, r1, r2}
 800cdf2:	e883 0007 	stmia.w	r3, {r0, r1, r2}
    }
 800cdf6:	bf00      	nop
    textarea.setTypedText(touchgfx::TypedText(T___SINGLEUSE_Z66R));
 800cdf8:	697b      	ldr	r3, [r7, #20]
 800cdfa:	f103 046c 	add.w	r4, r3, #108	@ 0x6c
 800cdfe:	f107 0334 	add.w	r3, r7, #52	@ 0x34
 800ce02:	2104      	movs	r1, #4
 800ce04:	4618      	mov	r0, r3
 800ce06:	f7fd f823 	bl	8009e50 <_ZN8touchgfx9TypedTextC1Et>
 800ce0a:	f107 0334 	add.w	r3, r7, #52	@ 0x34
 800ce0e:	4619      	mov	r1, r3
 800ce10:	4620      	mov	r0, r4
 800ce12:	f005 f957 	bl	80120c4 <_ZN8touchgfx8TextArea12setTypedTextERKNS_9TypedTextE>
 800ce16:	f107 0334 	add.w	r3, r7, #52	@ 0x34
 800ce1a:	4618      	mov	r0, r3
 800ce1c:	f7fb f934 	bl	8008088 <_ZN8touchgfx9TypedTextD1Ev>
    add(textarea);
 800ce20:	697a      	ldr	r2, [r7, #20]
 800ce22:	697b      	ldr	r3, [r7, #20]
 800ce24:	336c      	adds	r3, #108	@ 0x6c
 800ce26:	4619      	mov	r1, r3
 800ce28:	4610      	mov	r0, r2
 800ce2a:	f7fc ff8b 	bl	8009d44 <_ZN8touchgfx6Screen3addERNS_8DrawableE>

    flexButton1.setBoxWithBorderPosition(0, 0, 50, 50);
 800ce2e:	697b      	ldr	r3, [r7, #20]
 800ce30:	f103 00b4 	add.w	r0, r3, #180	@ 0xb4
 800ce34:	2332      	movs	r3, #50	@ 0x32
 800ce36:	9300      	str	r3, [sp, #0]
 800ce38:	2332      	movs	r3, #50	@ 0x32
 800ce3a:	2200      	movs	r2, #0
 800ce3c:	2100      	movs	r1, #0
 800ce3e:	f7fe f887 	bl	800af50 <_ZN8touchgfx24BoxWithBorderButtonStyleINS_18ClickButtonTriggerEE24setBoxWithBorderPositionEssss>
    flexButton1.setBorderSize(5);
 800ce42:	697b      	ldr	r3, [r7, #20]
 800ce44:	33b4      	adds	r3, #180	@ 0xb4
 800ce46:	2105      	movs	r1, #5
 800ce48:	4618      	mov	r0, r3
 800ce4a:	f7fe f8a1 	bl	800af90 <_ZN8touchgfx24BoxWithBorderButtonStyleINS_18ClickButtonTriggerEE13setBorderSizeEh>
    flexButton1.setBoxWithBorderColors(touchgfx::Color::getColorFromRGB(0, 102, 153), touchgfx::Color::getColorFromRGB(0, 153, 204), touchgfx::Color::getColorFromRGB(0, 51, 102), touchgfx::Color::getColorFromRGB(51, 102, 153));
 800ce4e:	697b      	ldr	r3, [r7, #20]
 800ce50:	f103 04b4 	add.w	r4, r3, #180	@ 0xb4
 800ce54:	2300      	movs	r3, #0
 800ce56:	f887 3097 	strb.w	r3, [r7, #151]	@ 0x97
 800ce5a:	2366      	movs	r3, #102	@ 0x66
 800ce5c:	f887 3096 	strb.w	r3, [r7, #150]	@ 0x96
 800ce60:	2399      	movs	r3, #153	@ 0x99
 800ce62:	f887 3095 	strb.w	r3, [r7, #149]	@ 0x95
 800ce66:	f897 3097 	ldrb.w	r3, [r7, #151]	@ 0x97
 800ce6a:	041a      	lsls	r2, r3, #16
 800ce6c:	f897 3096 	ldrb.w	r3, [r7, #150]	@ 0x96
 800ce70:	021b      	lsls	r3, r3, #8
 800ce72:	431a      	orrs	r2, r3
 800ce74:	f897 3095 	ldrb.w	r3, [r7, #149]	@ 0x95
 800ce78:	4313      	orrs	r3, r2
 800ce7a:	f043 427f 	orr.w	r2, r3, #4278190080	@ 0xff000000
 800ce7e:	f107 0374 	add.w	r3, r7, #116	@ 0x74
 800ce82:	4611      	mov	r1, r2
 800ce84:	4618      	mov	r0, r3
 800ce86:	f7fc fcab 	bl	80097e0 <_ZN8touchgfx9colortypeC1Em>
 800ce8a:	6f7b      	ldr	r3, [r7, #116]	@ 0x74
 800ce8c:	461d      	mov	r5, r3
 800ce8e:	2300      	movs	r3, #0
 800ce90:	f887 309a 	strb.w	r3, [r7, #154]	@ 0x9a
 800ce94:	2399      	movs	r3, #153	@ 0x99
 800ce96:	f887 3099 	strb.w	r3, [r7, #153]	@ 0x99
 800ce9a:	23cc      	movs	r3, #204	@ 0xcc
 800ce9c:	f887 3098 	strb.w	r3, [r7, #152]	@ 0x98
 800cea0:	f897 309a 	ldrb.w	r3, [r7, #154]	@ 0x9a
 800cea4:	041a      	lsls	r2, r3, #16
 800cea6:	f897 3099 	ldrb.w	r3, [r7, #153]	@ 0x99
 800ceaa:	021b      	lsls	r3, r3, #8
 800ceac:	431a      	orrs	r2, r3
 800ceae:	f897 3098 	ldrb.w	r3, [r7, #152]	@ 0x98
 800ceb2:	4313      	orrs	r3, r2
 800ceb4:	f043 427f 	orr.w	r2, r3, #4278190080	@ 0xff000000
 800ceb8:	f107 0370 	add.w	r3, r7, #112	@ 0x70
 800cebc:	4611      	mov	r1, r2
 800cebe:	4618      	mov	r0, r3
 800cec0:	f7fc fc8e 	bl	80097e0 <_ZN8touchgfx9colortypeC1Em>
 800cec4:	6f3b      	ldr	r3, [r7, #112]	@ 0x70
 800cec6:	461e      	mov	r6, r3
 800cec8:	2300      	movs	r3, #0
 800ceca:	f887 309d 	strb.w	r3, [r7, #157]	@ 0x9d
 800cece:	2333      	movs	r3, #51	@ 0x33
 800ced0:	f887 309c 	strb.w	r3, [r7, #156]	@ 0x9c
 800ced4:	2366      	movs	r3, #102	@ 0x66
 800ced6:	f887 309b 	strb.w	r3, [r7, #155]	@ 0x9b
 800ceda:	f897 309d 	ldrb.w	r3, [r7, #157]	@ 0x9d
 800cede:	041a      	lsls	r2, r3, #16
 800cee0:	f897 309c 	ldrb.w	r3, [r7, #156]	@ 0x9c
 800cee4:	021b      	lsls	r3, r3, #8
 800cee6:	431a      	orrs	r2, r3
 800cee8:	f897 309b 	ldrb.w	r3, [r7, #155]	@ 0x9b
 800ceec:	4313      	orrs	r3, r2
 800ceee:	f043 427f 	orr.w	r2, r3, #4278190080	@ 0xff000000
 800cef2:	f107 036c 	add.w	r3, r7, #108	@ 0x6c
 800cef6:	4611      	mov	r1, r2
 800cef8:	4618      	mov	r0, r3
 800cefa:	f7fc fc71 	bl	80097e0 <_ZN8touchgfx9colortypeC1Em>
 800cefe:	6efb      	ldr	r3, [r7, #108]	@ 0x6c
 800cf00:	4698      	mov	r8, r3
 800cf02:	2333      	movs	r3, #51	@ 0x33
 800cf04:	f887 30a0 	strb.w	r3, [r7, #160]	@ 0xa0
 800cf08:	2366      	movs	r3, #102	@ 0x66
 800cf0a:	f887 309f 	strb.w	r3, [r7, #159]	@ 0x9f
 800cf0e:	2399      	movs	r3, #153	@ 0x99
 800cf10:	f887 309e 	strb.w	r3, [r7, #158]	@ 0x9e
 800cf14:	f897 30a0 	ldrb.w	r3, [r7, #160]	@ 0xa0
 800cf18:	041a      	lsls	r2, r3, #16
 800cf1a:	f897 309f 	ldrb.w	r3, [r7, #159]	@ 0x9f
 800cf1e:	021b      	lsls	r3, r3, #8
 800cf20:	431a      	orrs	r2, r3
 800cf22:	f897 309e 	ldrb.w	r3, [r7, #158]	@ 0x9e
 800cf26:	4313      	orrs	r3, r2
 800cf28:	f043 427f 	orr.w	r2, r3, #4278190080	@ 0xff000000
 800cf2c:	f107 0368 	add.w	r3, r7, #104	@ 0x68
 800cf30:	4611      	mov	r1, r2
 800cf32:	4618      	mov	r0, r3
 800cf34:	f7fc fc54 	bl	80097e0 <_ZN8touchgfx9colortypeC1Em>
 800cf38:	6ebb      	ldr	r3, [r7, #104]	@ 0x68
 800cf3a:	9300      	str	r3, [sp, #0]
 800cf3c:	4643      	mov	r3, r8
 800cf3e:	4632      	mov	r2, r6
 800cf40:	4629      	mov	r1, r5
 800cf42:	4620      	mov	r0, r4
 800cf44:	f7fe f836 	bl	800afb4 <_ZN8touchgfx24BoxWithBorderButtonStyleINS_18ClickButtonTriggerEE22setBoxWithBorderColorsENS_9colortypeES3_S3_S3_>
    flexButton1.setAction(flexButtonCallback);
 800cf48:	697b      	ldr	r3, [r7, #20]
 800cf4a:	f103 02b4 	add.w	r2, r3, #180	@ 0xb4
 800cf4e:	697b      	ldr	r3, [r7, #20]
 800cf50:	f503 7301 	add.w	r3, r3, #516	@ 0x204
 800cf54:	4619      	mov	r1, r3
 800cf56:	4610      	mov	r0, r2
 800cf58:	f7fd f940 	bl	800a1dc <_ZN8touchgfx23AbstractButtonContainer9setActionERNS_15GenericCallbackIRKS0_vvEE>
    flexButton1.setPosition(393, 245, 50, 50);
 800cf5c:	697b      	ldr	r3, [r7, #20]
 800cf5e:	f103 00b4 	add.w	r0, r3, #180	@ 0xb4
 800cf62:	2332      	movs	r3, #50	@ 0x32
 800cf64:	9300      	str	r3, [sp, #0]
 800cf66:	2332      	movs	r3, #50	@ 0x32
 800cf68:	22f5      	movs	r2, #245	@ 0xf5
 800cf6a:	f240 1189 	movw	r1, #393	@ 0x189
 800cf6e:	f7fc fd07 	bl	8009980 <_ZN8touchgfx8Drawable11setPositionEssss>
    add(flexButton1);
 800cf72:	697a      	ldr	r2, [r7, #20]
 800cf74:	697b      	ldr	r3, [r7, #20]
 800cf76:	33b4      	adds	r3, #180	@ 0xb4
 800cf78:	4619      	mov	r1, r3
 800cf7a:	4610      	mov	r0, r2
 800cf7c:	f7fc fee2 	bl	8009d44 <_ZN8touchgfx6Screen3addERNS_8DrawableE>

    tempVal.setPosition(140, 140, 200, 40);
 800cf80:	697b      	ldr	r3, [r7, #20]
 800cf82:	f503 7096 	add.w	r0, r3, #300	@ 0x12c
 800cf86:	2328      	movs	r3, #40	@ 0x28
 800cf88:	9300      	str	r3, [sp, #0]
 800cf8a:	23c8      	movs	r3, #200	@ 0xc8
 800cf8c:	228c      	movs	r2, #140	@ 0x8c
 800cf8e:	218c      	movs	r1, #140	@ 0x8c
 800cf90:	f7fc fcf6 	bl	8009980 <_ZN8touchgfx8Drawable11setPositionEssss>
    tempVal.setColor(touchgfx::Color::getColorFromRGB(255, 255, 255));
 800cf94:	697b      	ldr	r3, [r7, #20]
 800cf96:	f503 7496 	add.w	r4, r3, #300	@ 0x12c
 800cf9a:	23ff      	movs	r3, #255	@ 0xff
 800cf9c:	f887 30a3 	strb.w	r3, [r7, #163]	@ 0xa3
 800cfa0:	23ff      	movs	r3, #255	@ 0xff
 800cfa2:	f887 30a2 	strb.w	r3, [r7, #162]	@ 0xa2
 800cfa6:	23ff      	movs	r3, #255	@ 0xff
 800cfa8:	f887 30a1 	strb.w	r3, [r7, #161]	@ 0xa1
 800cfac:	f897 30a3 	ldrb.w	r3, [r7, #163]	@ 0xa3
 800cfb0:	041a      	lsls	r2, r3, #16
 800cfb2:	f897 30a2 	ldrb.w	r3, [r7, #162]	@ 0xa2
 800cfb6:	021b      	lsls	r3, r3, #8
 800cfb8:	431a      	orrs	r2, r3
 800cfba:	f897 30a1 	ldrb.w	r3, [r7, #161]	@ 0xa1
 800cfbe:	4313      	orrs	r3, r2
 800cfc0:	f043 427f 	orr.w	r2, r3, #4278190080	@ 0xff000000
 800cfc4:	f107 0364 	add.w	r3, r7, #100	@ 0x64
 800cfc8:	4611      	mov	r1, r2
 800cfca:	4618      	mov	r0, r3
 800cfcc:	f7fc fc08 	bl	80097e0 <_ZN8touchgfx9colortypeC1Em>
 800cfd0:	6e7b      	ldr	r3, [r7, #100]	@ 0x64
 800cfd2:	f8c7 40a4 	str.w	r4, [r7, #164]	@ 0xa4
 800cfd6:	61fb      	str	r3, [r7, #28]
        color = newColor;
 800cfd8:	f8d7 30a4 	ldr.w	r3, [r7, #164]	@ 0xa4
 800cfdc:	69fa      	ldr	r2, [r7, #28]
 800cfde:	631a      	str	r2, [r3, #48]	@ 0x30
    }
 800cfe0:	bf00      	nop
 800cfe2:	e005      	b.n	800cff0 <_ZN26temperature_screenViewBaseC1Ev+0x394>
 800cfe4:	08028640 	.word	0x08028640
 800cfe8:	0800d26f 	.word	0x0800d26f
 800cfec:	0800d299 	.word	0x0800d299
    tempVal.setLinespacing(0);
 800cff0:	697b      	ldr	r3, [r7, #20]
 800cff2:	f503 7396 	add.w	r3, r3, #300	@ 0x12c
 800cff6:	f8c7 30ac 	str.w	r3, [r7, #172]	@ 0xac
 800cffa:	2300      	movs	r3, #0
 800cffc:	f8a7 30aa 	strh.w	r3, [r7, #170]	@ 0xaa
        linespace = space;
 800d000:	f8d7 30ac 	ldr.w	r3, [r7, #172]	@ 0xac
 800d004:	f8b7 20aa 	ldrh.w	r2, [r7, #170]	@ 0xaa
 800d008:	869a      	strh	r2, [r3, #52]	@ 0x34
        boundingArea = calculateBoundingArea();
 800d00a:	f8d7 30ac 	ldr.w	r3, [r7, #172]	@ 0xac
 800d00e:	681b      	ldr	r3, [r3, #0]
 800d010:	3384      	adds	r3, #132	@ 0x84
 800d012:	681b      	ldr	r3, [r3, #0]
 800d014:	f8d7 40ac 	ldr.w	r4, [r7, #172]	@ 0xac
 800d018:	463a      	mov	r2, r7
 800d01a:	f8d7 10ac 	ldr.w	r1, [r7, #172]	@ 0xac
 800d01e:	4610      	mov	r0, r2
 800d020:	4798      	blx	r3
 800d022:	f104 033c 	add.w	r3, r4, #60	@ 0x3c
 800d026:	463a      	mov	r2, r7
 800d028:	ca07      	ldmia	r2, {r0, r1, r2}
 800d02a:	e883 0007 	stmia.w	r3, {r0, r1, r2}
    }
 800d02e:	bf00      	nop
    tempValBuffer[0] = 0;
 800d030:	697b      	ldr	r3, [r7, #20]
 800d032:	2200      	movs	r2, #0
 800d034:	f8a3 21f0 	strh.w	r2, [r3, #496]	@ 0x1f0
    tempVal.setWildcard(tempValBuffer);
 800d038:	697b      	ldr	r3, [r7, #20]
 800d03a:	f503 7296 	add.w	r2, r3, #300	@ 0x12c
 800d03e:	697b      	ldr	r3, [r7, #20]
 800d040:	f503 73f8 	add.w	r3, r3, #496	@ 0x1f0
 800d044:	4619      	mov	r1, r3
 800d046:	4610      	mov	r0, r2
 800d048:	f7fd fa80 	bl	800a54c <_ZN8touchgfx23TextAreaWithOneWildcard11setWildcardEPKt>
    tempVal.setTypedText(touchgfx::TypedText(T___SINGLEUSE_VVL5));
 800d04c:	697b      	ldr	r3, [r7, #20]
 800d04e:	f503 7496 	add.w	r4, r3, #300	@ 0x12c
 800d052:	f107 033c 	add.w	r3, r7, #60	@ 0x3c
 800d056:	2103      	movs	r1, #3
 800d058:	4618      	mov	r0, r3
 800d05a:	f7fc fef9 	bl	8009e50 <_ZN8touchgfx9TypedTextC1Et>
 800d05e:	f107 033c 	add.w	r3, r7, #60	@ 0x3c
 800d062:	4619      	mov	r1, r3
 800d064:	4620      	mov	r0, r4
 800d066:	f005 f82d 	bl	80120c4 <_ZN8touchgfx8TextArea12setTypedTextERKNS_9TypedTextE>
 800d06a:	f107 033c 	add.w	r3, r7, #60	@ 0x3c
 800d06e:	4618      	mov	r0, r3
 800d070:	f7fb f80a 	bl	8008088 <_ZN8touchgfx9TypedTextD1Ev>
    add(tempVal);
 800d074:	697a      	ldr	r2, [r7, #20]
 800d076:	697b      	ldr	r3, [r7, #20]
 800d078:	f503 7396 	add.w	r3, r3, #300	@ 0x12c
 800d07c:	4619      	mov	r1, r3
 800d07e:	4610      	mov	r0, r2
 800d080:	f7fc fe60 	bl	8009d44 <_ZN8touchgfx6Screen3addERNS_8DrawableE>

    buttonWithIcon1.setXY(111, 72);
 800d084:	697b      	ldr	r3, [r7, #20]
 800d086:	f503 73bc 	add.w	r3, r3, #376	@ 0x178
 800d08a:	2248      	movs	r2, #72	@ 0x48
 800d08c:	216f      	movs	r1, #111	@ 0x6f
 800d08e:	4618      	mov	r0, r3
 800d090:	f7fc fcb5 	bl	80099fe <_ZN8touchgfx8Drawable5setXYEss>
    buttonWithIcon1.setBitmaps(touchgfx::Bitmap(BITMAP_ALTERNATE_THEME_IMAGES_WIDGETS_BUTTON_REGULAR_HEIGHT_50_MEDIUM_ROUNDED_NORMAL_ID), touchgfx::Bitmap(BITMAP_ALTERNATE_THEME_IMAGES_WIDGETS_BUTTON_REGULAR_HEIGHT_50_MEDIUM_ROUNDED_PRESSED_ID), touchgfx::Bitmap(BITMAP_ICON_THEME_IMAGES_NAVIGATION_ARROW_UPWARD_50_50_E8F6FB_SVG_ID), touchgfx::Bitmap(BITMAP_ICON_THEME_IMAGES_ACTION_DONE_50_50_E8F6FB_SVG_ID));
 800d094:	697b      	ldr	r3, [r7, #20]
 800d096:	f503 74bc 	add.w	r4, r3, #376	@ 0x178
 800d09a:	f107 0344 	add.w	r3, r7, #68	@ 0x44
 800d09e:	2100      	movs	r1, #0
 800d0a0:	4618      	mov	r0, r3
 800d0a2:	f7fc fbe3 	bl	800986c <_ZN8touchgfx6BitmapC1Et>
 800d0a6:	f107 0348 	add.w	r3, r7, #72	@ 0x48
 800d0aa:	2101      	movs	r1, #1
 800d0ac:	4618      	mov	r0, r3
 800d0ae:	f7fc fbdd 	bl	800986c <_ZN8touchgfx6BitmapC1Et>
 800d0b2:	f107 034c 	add.w	r3, r7, #76	@ 0x4c
 800d0b6:	2106      	movs	r1, #6
 800d0b8:	4618      	mov	r0, r3
 800d0ba:	f7fc fbd7 	bl	800986c <_ZN8touchgfx6BitmapC1Et>
 800d0be:	f107 0350 	add.w	r3, r7, #80	@ 0x50
 800d0c2:	2104      	movs	r1, #4
 800d0c4:	4618      	mov	r0, r3
 800d0c6:	f7fc fbd1 	bl	800986c <_ZN8touchgfx6BitmapC1Et>
 800d0ca:	f107 004c 	add.w	r0, r7, #76	@ 0x4c
 800d0ce:	f107 0248 	add.w	r2, r7, #72	@ 0x48
 800d0d2:	f107 0144 	add.w	r1, r7, #68	@ 0x44
 800d0d6:	f107 0350 	add.w	r3, r7, #80	@ 0x50
 800d0da:	9300      	str	r3, [sp, #0]
 800d0dc:	4603      	mov	r3, r0
 800d0de:	4620      	mov	r0, r4
 800d0e0:	f005 f9e6 	bl	80124b0 <_ZN8touchgfx14ButtonWithIcon10setBitmapsERKNS_6BitmapES3_S3_S3_>
    buttonWithIcon1.setIconXY(97, 0);
 800d0e4:	697b      	ldr	r3, [r7, #20]
 800d0e6:	f503 73bc 	add.w	r3, r3, #376	@ 0x178
 800d0ea:	2200      	movs	r2, #0
 800d0ec:	2161      	movs	r1, #97	@ 0x61
 800d0ee:	4618      	mov	r0, r3
 800d0f0:	f7fd fa88 	bl	800a604 <_ZN8touchgfx14ButtonWithIcon9setIconXYEss>
    buttonWithIcon1.setAction(buttonCallback);
 800d0f4:	697b      	ldr	r3, [r7, #20]
 800d0f6:	f503 72bc 	add.w	r2, r3, #376	@ 0x178
 800d0fa:	697b      	ldr	r3, [r7, #20]
 800d0fc:	f503 7305 	add.w	r3, r3, #532	@ 0x214
 800d100:	4619      	mov	r1, r3
 800d102:	4610      	mov	r0, r2
 800d104:	f7fd fa2f 	bl	800a566 <_ZN8touchgfx14AbstractButton9setActionERNS_15GenericCallbackIRKS0_vvEE>
    add(buttonWithIcon1);
 800d108:	697a      	ldr	r2, [r7, #20]
 800d10a:	697b      	ldr	r3, [r7, #20]
 800d10c:	f503 73bc 	add.w	r3, r3, #376	@ 0x178
 800d110:	4619      	mov	r1, r3
 800d112:	4610      	mov	r0, r2
 800d114:	f7fc fe16 	bl	8009d44 <_ZN8touchgfx6Screen3addERNS_8DrawableE>

    buttonWithIcon1_1.setXY(111, 195);
 800d118:	697b      	ldr	r3, [r7, #20]
 800d11a:	f503 73da 	add.w	r3, r3, #436	@ 0x1b4
 800d11e:	22c3      	movs	r2, #195	@ 0xc3
 800d120:	216f      	movs	r1, #111	@ 0x6f
 800d122:	4618      	mov	r0, r3
 800d124:	f7fc fc6b 	bl	80099fe <_ZN8touchgfx8Drawable5setXYEss>
    buttonWithIcon1_1.setBitmaps(touchgfx::Bitmap(BITMAP_ALTERNATE_THEME_IMAGES_WIDGETS_BUTTON_REGULAR_HEIGHT_50_MEDIUM_ROUNDED_NORMAL_ID), touchgfx::Bitmap(BITMAP_ALTERNATE_THEME_IMAGES_WIDGETS_BUTTON_REGULAR_HEIGHT_50_MEDIUM_ROUNDED_PRESSED_ID), touchgfx::Bitmap(BITMAP_ICON_THEME_IMAGES_NAVIGATION_ARROW_DOWNWARD_50_50_E8F6FB_SVG_ID), touchgfx::Bitmap(BITMAP_ICON_THEME_IMAGES_ACTION_DONE_50_50_E8F6FB_SVG_ID));
 800d128:	697b      	ldr	r3, [r7, #20]
 800d12a:	f503 74da 	add.w	r4, r3, #436	@ 0x1b4
 800d12e:	f107 0354 	add.w	r3, r7, #84	@ 0x54
 800d132:	2100      	movs	r1, #0
 800d134:	4618      	mov	r0, r3
 800d136:	f7fc fb99 	bl	800986c <_ZN8touchgfx6BitmapC1Et>
 800d13a:	f107 0358 	add.w	r3, r7, #88	@ 0x58
 800d13e:	2101      	movs	r1, #1
 800d140:	4618      	mov	r0, r3
 800d142:	f7fc fb93 	bl	800986c <_ZN8touchgfx6BitmapC1Et>
 800d146:	f107 035c 	add.w	r3, r7, #92	@ 0x5c
 800d14a:	2105      	movs	r1, #5
 800d14c:	4618      	mov	r0, r3
 800d14e:	f7fc fb8d 	bl	800986c <_ZN8touchgfx6BitmapC1Et>
 800d152:	f107 0360 	add.w	r3, r7, #96	@ 0x60
 800d156:	2104      	movs	r1, #4
 800d158:	4618      	mov	r0, r3
 800d15a:	f7fc fb87 	bl	800986c <_ZN8touchgfx6BitmapC1Et>
 800d15e:	f107 005c 	add.w	r0, r7, #92	@ 0x5c
 800d162:	f107 0258 	add.w	r2, r7, #88	@ 0x58
 800d166:	f107 0154 	add.w	r1, r7, #84	@ 0x54
 800d16a:	f107 0360 	add.w	r3, r7, #96	@ 0x60
 800d16e:	9300      	str	r3, [sp, #0]
 800d170:	4603      	mov	r3, r0
 800d172:	4620      	mov	r0, r4
 800d174:	f005 f99c 	bl	80124b0 <_ZN8touchgfx14ButtonWithIcon10setBitmapsERKNS_6BitmapES3_S3_S3_>
    buttonWithIcon1_1.setIconXY(95, 0);
 800d178:	697b      	ldr	r3, [r7, #20]
 800d17a:	f503 73da 	add.w	r3, r3, #436	@ 0x1b4
 800d17e:	2200      	movs	r2, #0
 800d180:	215f      	movs	r1, #95	@ 0x5f
 800d182:	4618      	mov	r0, r3
 800d184:	f7fd fa3e 	bl	800a604 <_ZN8touchgfx14ButtonWithIcon9setIconXYEss>
    buttonWithIcon1_1.setAction(buttonCallback);
 800d188:	697b      	ldr	r3, [r7, #20]
 800d18a:	f503 72da 	add.w	r2, r3, #436	@ 0x1b4
 800d18e:	697b      	ldr	r3, [r7, #20]
 800d190:	f503 7305 	add.w	r3, r3, #532	@ 0x214
 800d194:	4619      	mov	r1, r3
 800d196:	4610      	mov	r0, r2
 800d198:	f7fd f9e5 	bl	800a566 <_ZN8touchgfx14AbstractButton9setActionERNS_15GenericCallbackIRKS0_vvEE>
    add(buttonWithIcon1_1);
 800d19c:	697a      	ldr	r2, [r7, #20]
 800d19e:	697b      	ldr	r3, [r7, #20]
 800d1a0:	f503 73da 	add.w	r3, r3, #436	@ 0x1b4
 800d1a4:	4619      	mov	r1, r3
 800d1a6:	4610      	mov	r0, r2
 800d1a8:	f7fc fdcc 	bl	8009d44 <_ZN8touchgfx6Screen3addERNS_8DrawableE>
}
 800d1ac:	697b      	ldr	r3, [r7, #20]
 800d1ae:	4618      	mov	r0, r3
 800d1b0:	37b0      	adds	r7, #176	@ 0xb0
 800d1b2:	46bd      	mov	sp, r7
 800d1b4:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}

0800d1b8 <_ZN26temperature_screenViewBaseD1Ev>:

temperature_screenViewBase::~temperature_screenViewBase()
 800d1b8:	b580      	push	{r7, lr}
 800d1ba:	b082      	sub	sp, #8
 800d1bc:	af00      	add	r7, sp, #0
 800d1be:	6078      	str	r0, [r7, #4]
 800d1c0:	4a1c      	ldr	r2, [pc, #112]	@ (800d234 <_ZN26temperature_screenViewBaseD1Ev+0x7c>)
 800d1c2:	687b      	ldr	r3, [r7, #4]
 800d1c4:	601a      	str	r2, [r3, #0]
{

}
 800d1c6:	687b      	ldr	r3, [r7, #4]
 800d1c8:	f503 7305 	add.w	r3, r3, #532	@ 0x214
 800d1cc:	4618      	mov	r0, r3
 800d1ce:	f000 f8db 	bl	800d388 <_ZN8touchgfx8CallbackI26temperature_screenViewBaseRKNS_14AbstractButtonEvvED1Ev>
 800d1d2:	687b      	ldr	r3, [r7, #4]
 800d1d4:	f503 7301 	add.w	r3, r3, #516	@ 0x204
 800d1d8:	4618      	mov	r0, r3
 800d1da:	f000 f8f7 	bl	800d3cc <_ZN8touchgfx8CallbackI26temperature_screenViewBaseRKNS_23AbstractButtonContainerEvvED1Ev>
 800d1de:	687b      	ldr	r3, [r7, #4]
 800d1e0:	f503 73da 	add.w	r3, r3, #436	@ 0x1b4
 800d1e4:	4618      	mov	r0, r3
 800d1e6:	f7fe f825 	bl	800b234 <_ZN8touchgfx14ButtonWithIconD1Ev>
 800d1ea:	687b      	ldr	r3, [r7, #4]
 800d1ec:	f503 73bc 	add.w	r3, r3, #376	@ 0x178
 800d1f0:	4618      	mov	r0, r3
 800d1f2:	f7fe f81f 	bl	800b234 <_ZN8touchgfx14ButtonWithIconD1Ev>
 800d1f6:	687b      	ldr	r3, [r7, #4]
 800d1f8:	f503 7396 	add.w	r3, r3, #300	@ 0x12c
 800d1fc:	4618      	mov	r0, r3
 800d1fe:	f7fd ffd5 	bl	800b1ac <_ZN8touchgfx23TextAreaWithOneWildcardD1Ev>
 800d202:	687b      	ldr	r3, [r7, #4]
 800d204:	33b4      	adds	r3, #180	@ 0xb4
 800d206:	4618      	mov	r0, r3
 800d208:	f7fd ffa8 	bl	800b15c <_ZN8touchgfx24BoxWithBorderButtonStyleINS_18ClickButtonTriggerEED1Ev>
 800d20c:	687b      	ldr	r3, [r7, #4]
 800d20e:	336c      	adds	r3, #108	@ 0x6c
 800d210:	4618      	mov	r0, r3
 800d212:	f7fd f8f7 	bl	800a404 <_ZN8touchgfx8TextAreaD1Ev>
 800d216:	687b      	ldr	r3, [r7, #4]
 800d218:	3340      	adds	r3, #64	@ 0x40
 800d21a:	4618      	mov	r0, r3
 800d21c:	f7fd f828 	bl	800a270 <_ZN8touchgfx3BoxD1Ev>
 800d220:	687b      	ldr	r3, [r7, #4]
 800d222:	4618      	mov	r0, r3
 800d224:	f7ff fcf8 	bl	800cc18 <_ZN8touchgfx4ViewI27temperature_screenPresenterED1Ev>
 800d228:	687b      	ldr	r3, [r7, #4]
 800d22a:	4618      	mov	r0, r3
 800d22c:	3708      	adds	r7, #8
 800d22e:	46bd      	mov	sp, r7
 800d230:	bd80      	pop	{r7, pc}
 800d232:	bf00      	nop
 800d234:	08028640 	.word	0x08028640

0800d238 <_ZN26temperature_screenViewBaseD0Ev>:
temperature_screenViewBase::~temperature_screenViewBase()
 800d238:	b580      	push	{r7, lr}
 800d23a:	b082      	sub	sp, #8
 800d23c:	af00      	add	r7, sp, #0
 800d23e:	6078      	str	r0, [r7, #4]
}
 800d240:	6878      	ldr	r0, [r7, #4]
 800d242:	f7ff ffb9 	bl	800d1b8 <_ZN26temperature_screenViewBaseD1Ev>
 800d246:	f44f 7109 	mov.w	r1, #548	@ 0x224
 800d24a:	6878      	ldr	r0, [r7, #4]
 800d24c:	f018 fc21 	bl	8025a92 <_ZdlPvj>
 800d250:	687b      	ldr	r3, [r7, #4]
 800d252:	4618      	mov	r0, r3
 800d254:	3708      	adds	r7, #8
 800d256:	46bd      	mov	sp, r7
 800d258:	bd80      	pop	{r7, pc}

0800d25a <_ZN26temperature_screenViewBase11setupScreenEv>:

void temperature_screenViewBase::setupScreen()
{
 800d25a:	b480      	push	{r7}
 800d25c:	b083      	sub	sp, #12
 800d25e:	af00      	add	r7, sp, #0
 800d260:	6078      	str	r0, [r7, #4]

}
 800d262:	bf00      	nop
 800d264:	370c      	adds	r7, #12
 800d266:	46bd      	mov	sp, r7
 800d268:	f85d 7b04 	ldr.w	r7, [sp], #4
 800d26c:	4770      	bx	lr

0800d26e <_ZN26temperature_screenViewBase25flexButtonCallbackHandlerERKN8touchgfx23AbstractButtonContainerE>:

void temperature_screenViewBase::flexButtonCallbackHandler(const touchgfx::AbstractButtonContainer& src)
{
 800d26e:	b580      	push	{r7, lr}
 800d270:	b082      	sub	sp, #8
 800d272:	af00      	add	r7, sp, #0
 800d274:	6078      	str	r0, [r7, #4]
 800d276:	6039      	str	r1, [r7, #0]
    if (&src == &flexButton1)
 800d278:	687b      	ldr	r3, [r7, #4]
 800d27a:	33b4      	adds	r3, #180	@ 0xb4
 800d27c:	683a      	ldr	r2, [r7, #0]
 800d27e:	429a      	cmp	r2, r3
 800d280:	d106      	bne.n	800d290 <_ZN26temperature_screenViewBase25flexButtonCallbackHandlerERKN8touchgfx23AbstractButtonContainerE+0x22>
    {
        //Interaction2
        //When flexButton1 clicked change screen to Main
        //Go to Main with no screen transition
        application().gotoMainScreenNoTransition();
 800d282:	6878      	ldr	r0, [r7, #4]
 800d284:	f7ff fcbc 	bl	800cc00 <_ZN26temperature_screenViewBase11applicationEv>
 800d288:	4603      	mov	r3, r0
 800d28a:	4618      	mov	r0, r3
 800d28c:	f7fb fc22 	bl	8008ad4 <_ZN23FrontendApplicationBase26gotoMainScreenNoTransitionEv>
    }
}
 800d290:	bf00      	nop
 800d292:	3708      	adds	r7, #8
 800d294:	46bd      	mov	sp, r7
 800d296:	bd80      	pop	{r7, pc}

0800d298 <_ZN26temperature_screenViewBase21buttonCallbackHandlerERKN8touchgfx14AbstractButtonE>:

void temperature_screenViewBase::buttonCallbackHandler(const touchgfx::AbstractButton& src)
{
 800d298:	b580      	push	{r7, lr}
 800d29a:	b082      	sub	sp, #8
 800d29c:	af00      	add	r7, sp, #0
 800d29e:	6078      	str	r0, [r7, #4]
 800d2a0:	6039      	str	r1, [r7, #0]
    if (&src == &buttonWithIcon1)
 800d2a2:	687b      	ldr	r3, [r7, #4]
 800d2a4:	f503 73bc 	add.w	r3, r3, #376	@ 0x178
 800d2a8:	683a      	ldr	r2, [r7, #0]
 800d2aa:	429a      	cmp	r2, r3
 800d2ac:	d105      	bne.n	800d2ba <_ZN26temperature_screenViewBase21buttonCallbackHandlerERKN8touchgfx14AbstractButtonE+0x22>
    {
        //Interaction3
        //When buttonWithIcon1 clicked call virtual function
        //Call increase
        increase();
 800d2ae:	687b      	ldr	r3, [r7, #4]
 800d2b0:	681b      	ldr	r3, [r3, #0]
 800d2b2:	332c      	adds	r3, #44	@ 0x2c
 800d2b4:	681b      	ldr	r3, [r3, #0]
 800d2b6:	6878      	ldr	r0, [r7, #4]
 800d2b8:	4798      	blx	r3
    }
    if (&src == &buttonWithIcon1_1)
 800d2ba:	687b      	ldr	r3, [r7, #4]
 800d2bc:	f503 73da 	add.w	r3, r3, #436	@ 0x1b4
 800d2c0:	683a      	ldr	r2, [r7, #0]
 800d2c2:	429a      	cmp	r2, r3
 800d2c4:	d105      	bne.n	800d2d2 <_ZN26temperature_screenViewBase21buttonCallbackHandlerERKN8touchgfx14AbstractButtonE+0x3a>
    {
        //Interaction4
        //When buttonWithIcon1_1 clicked call virtual function
        //Call decrease
        decrease();
 800d2c6:	687b      	ldr	r3, [r7, #4]
 800d2c8:	681b      	ldr	r3, [r3, #0]
 800d2ca:	3330      	adds	r3, #48	@ 0x30
 800d2cc:	681b      	ldr	r3, [r3, #0]
 800d2ce:	6878      	ldr	r0, [r7, #4]
 800d2d0:	4798      	blx	r3
    }
}
 800d2d2:	bf00      	nop
 800d2d4:	3708      	adds	r7, #8
 800d2d6:	46bd      	mov	sp, r7
 800d2d8:	bd80      	pop	{r7, pc}
	...

0800d2dc <_ZN8touchgfx4ViewI27temperature_screenPresenterEC1Ev>:
    View()
 800d2dc:	b580      	push	{r7, lr}
 800d2de:	b082      	sub	sp, #8
 800d2e0:	af00      	add	r7, sp, #0
 800d2e2:	6078      	str	r0, [r7, #4]
        : presenter(0)
 800d2e4:	687b      	ldr	r3, [r7, #4]
 800d2e6:	4618      	mov	r0, r3
 800d2e8:	f008 f990 	bl	801560c <_ZN8touchgfx6ScreenC1Ev>
 800d2ec:	4a05      	ldr	r2, [pc, #20]	@ (800d304 <_ZN8touchgfx4ViewI27temperature_screenPresenterEC1Ev+0x28>)
 800d2ee:	687b      	ldr	r3, [r7, #4]
 800d2f0:	601a      	str	r2, [r3, #0]
 800d2f2:	687b      	ldr	r3, [r7, #4]
 800d2f4:	2200      	movs	r2, #0
 800d2f6:	63da      	str	r2, [r3, #60]	@ 0x3c
    }
 800d2f8:	687b      	ldr	r3, [r7, #4]
 800d2fa:	4618      	mov	r0, r3
 800d2fc:	3708      	adds	r7, #8
 800d2fe:	46bd      	mov	sp, r7
 800d300:	bd80      	pop	{r7, pc}
 800d302:	bf00      	nop
 800d304:	080286ac 	.word	0x080286ac

0800d308 <_ZN8touchgfx8CallbackI26temperature_screenViewBaseRKNS_23AbstractButtonContainerEvvEC1EPS1_MS1_FvS4_E>:
    Callback(dest_type* pObject, void (dest_type::*pmemfun_1)(T1))
 800d308:	b580      	push	{r7, lr}
 800d30a:	b084      	sub	sp, #16
 800d30c:	af00      	add	r7, sp, #0
 800d30e:	60f8      	str	r0, [r7, #12]
 800d310:	60b9      	str	r1, [r7, #8]
 800d312:	4639      	mov	r1, r7
 800d314:	e881 000c 	stmia.w	r1, {r2, r3}
        : pobject(pObject), pmemfun(pmemfun_1)
 800d318:	68fb      	ldr	r3, [r7, #12]
 800d31a:	4618      	mov	r0, r3
 800d31c:	f7fd fdb8 	bl	800ae90 <_ZN8touchgfx15GenericCallbackIRKNS_23AbstractButtonContainerEvvEC1Ev>
 800d320:	4a08      	ldr	r2, [pc, #32]	@ (800d344 <_ZN8touchgfx8CallbackI26temperature_screenViewBaseRKNS_23AbstractButtonContainerEvvEC1EPS1_MS1_FvS4_E+0x3c>)
 800d322:	68fb      	ldr	r3, [r7, #12]
 800d324:	601a      	str	r2, [r3, #0]
 800d326:	68fb      	ldr	r3, [r7, #12]
 800d328:	68ba      	ldr	r2, [r7, #8]
 800d32a:	605a      	str	r2, [r3, #4]
 800d32c:	68fb      	ldr	r3, [r7, #12]
 800d32e:	3308      	adds	r3, #8
 800d330:	463a      	mov	r2, r7
 800d332:	e892 0003 	ldmia.w	r2, {r0, r1}
 800d336:	e883 0003 	stmia.w	r3, {r0, r1}
    }
 800d33a:	68fb      	ldr	r3, [r7, #12]
 800d33c:	4618      	mov	r0, r3
 800d33e:	3710      	adds	r7, #16
 800d340:	46bd      	mov	sp, r7
 800d342:	bd80      	pop	{r7, pc}
 800d344:	08028694 	.word	0x08028694

0800d348 <_ZN8touchgfx8CallbackI26temperature_screenViewBaseRKNS_14AbstractButtonEvvEC1EPS1_MS1_FvS4_E>:
    Callback(dest_type* pObject, void (dest_type::*pmemfun_1)(T1))
 800d348:	b580      	push	{r7, lr}
 800d34a:	b084      	sub	sp, #16
 800d34c:	af00      	add	r7, sp, #0
 800d34e:	60f8      	str	r0, [r7, #12]
 800d350:	60b9      	str	r1, [r7, #8]
 800d352:	4639      	mov	r1, r7
 800d354:	e881 000c 	stmia.w	r1, {r2, r3}
        : pobject(pObject), pmemfun(pmemfun_1)
 800d358:	68fb      	ldr	r3, [r7, #12]
 800d35a:	4618      	mov	r0, r3
 800d35c:	f7fd fdc8 	bl	800aef0 <_ZN8touchgfx15GenericCallbackIRKNS_14AbstractButtonEvvEC1Ev>
 800d360:	4a08      	ldr	r2, [pc, #32]	@ (800d384 <_ZN8touchgfx8CallbackI26temperature_screenViewBaseRKNS_14AbstractButtonEvvEC1EPS1_MS1_FvS4_E+0x3c>)
 800d362:	68fb      	ldr	r3, [r7, #12]
 800d364:	601a      	str	r2, [r3, #0]
 800d366:	68fb      	ldr	r3, [r7, #12]
 800d368:	68ba      	ldr	r2, [r7, #8]
 800d36a:	605a      	str	r2, [r3, #4]
 800d36c:	68fb      	ldr	r3, [r7, #12]
 800d36e:	3308      	adds	r3, #8
 800d370:	463a      	mov	r2, r7
 800d372:	e892 0003 	ldmia.w	r2, {r0, r1}
 800d376:	e883 0003 	stmia.w	r3, {r0, r1}
    }
 800d37a:	68fb      	ldr	r3, [r7, #12]
 800d37c:	4618      	mov	r0, r3
 800d37e:	3710      	adds	r7, #16
 800d380:	46bd      	mov	sp, r7
 800d382:	bd80      	pop	{r7, pc}
 800d384:	0802867c 	.word	0x0802867c

0800d388 <_ZN8touchgfx8CallbackI26temperature_screenViewBaseRKNS_14AbstractButtonEvvED1Ev>:
struct Callback<dest_type, T1, void, void> : public GenericCallback<T1>
 800d388:	b580      	push	{r7, lr}
 800d38a:	b082      	sub	sp, #8
 800d38c:	af00      	add	r7, sp, #0
 800d38e:	6078      	str	r0, [r7, #4]
 800d390:	4a05      	ldr	r2, [pc, #20]	@ (800d3a8 <_ZN8touchgfx8CallbackI26temperature_screenViewBaseRKNS_14AbstractButtonEvvED1Ev+0x20>)
 800d392:	687b      	ldr	r3, [r7, #4]
 800d394:	601a      	str	r2, [r3, #0]
 800d396:	687b      	ldr	r3, [r7, #4]
 800d398:	4618      	mov	r0, r3
 800d39a:	f7fd fe49 	bl	800b030 <_ZN8touchgfx15GenericCallbackIRKNS_14AbstractButtonEvvED1Ev>
 800d39e:	687b      	ldr	r3, [r7, #4]
 800d3a0:	4618      	mov	r0, r3
 800d3a2:	3708      	adds	r7, #8
 800d3a4:	46bd      	mov	sp, r7
 800d3a6:	bd80      	pop	{r7, pc}
 800d3a8:	0802867c 	.word	0x0802867c

0800d3ac <_ZN8touchgfx8CallbackI26temperature_screenViewBaseRKNS_14AbstractButtonEvvED0Ev>:
 800d3ac:	b580      	push	{r7, lr}
 800d3ae:	b082      	sub	sp, #8
 800d3b0:	af00      	add	r7, sp, #0
 800d3b2:	6078      	str	r0, [r7, #4]
 800d3b4:	6878      	ldr	r0, [r7, #4]
 800d3b6:	f7ff ffe7 	bl	800d388 <_ZN8touchgfx8CallbackI26temperature_screenViewBaseRKNS_14AbstractButtonEvvED1Ev>
 800d3ba:	2110      	movs	r1, #16
 800d3bc:	6878      	ldr	r0, [r7, #4]
 800d3be:	f018 fb68 	bl	8025a92 <_ZdlPvj>
 800d3c2:	687b      	ldr	r3, [r7, #4]
 800d3c4:	4618      	mov	r0, r3
 800d3c6:	3708      	adds	r7, #8
 800d3c8:	46bd      	mov	sp, r7
 800d3ca:	bd80      	pop	{r7, pc}

0800d3cc <_ZN8touchgfx8CallbackI26temperature_screenViewBaseRKNS_23AbstractButtonContainerEvvED1Ev>:
 800d3cc:	b580      	push	{r7, lr}
 800d3ce:	b082      	sub	sp, #8
 800d3d0:	af00      	add	r7, sp, #0
 800d3d2:	6078      	str	r0, [r7, #4]
 800d3d4:	4a05      	ldr	r2, [pc, #20]	@ (800d3ec <_ZN8touchgfx8CallbackI26temperature_screenViewBaseRKNS_23AbstractButtonContainerEvvED1Ev+0x20>)
 800d3d6:	687b      	ldr	r3, [r7, #4]
 800d3d8:	601a      	str	r2, [r3, #0]
 800d3da:	687b      	ldr	r3, [r7, #4]
 800d3dc:	4618      	mov	r0, r3
 800d3de:	f7fd fe07 	bl	800aff0 <_ZN8touchgfx15GenericCallbackIRKNS_23AbstractButtonContainerEvvED1Ev>
 800d3e2:	687b      	ldr	r3, [r7, #4]
 800d3e4:	4618      	mov	r0, r3
 800d3e6:	3708      	adds	r7, #8
 800d3e8:	46bd      	mov	sp, r7
 800d3ea:	bd80      	pop	{r7, pc}
 800d3ec:	08028694 	.word	0x08028694

0800d3f0 <_ZN8touchgfx8CallbackI26temperature_screenViewBaseRKNS_23AbstractButtonContainerEvvED0Ev>:
 800d3f0:	b580      	push	{r7, lr}
 800d3f2:	b082      	sub	sp, #8
 800d3f4:	af00      	add	r7, sp, #0
 800d3f6:	6078      	str	r0, [r7, #4]
 800d3f8:	6878      	ldr	r0, [r7, #4]
 800d3fa:	f7ff ffe7 	bl	800d3cc <_ZN8touchgfx8CallbackI26temperature_screenViewBaseRKNS_23AbstractButtonContainerEvvED1Ev>
 800d3fe:	2110      	movs	r1, #16
 800d400:	6878      	ldr	r0, [r7, #4]
 800d402:	f018 fb46 	bl	8025a92 <_ZdlPvj>
 800d406:	687b      	ldr	r3, [r7, #4]
 800d408:	4618      	mov	r0, r3
 800d40a:	3708      	adds	r7, #8
 800d40c:	46bd      	mov	sp, r7
 800d40e:	bd80      	pop	{r7, pc}

0800d410 <_ZN8touchgfx8CallbackI26temperature_screenViewBaseRKNS_14AbstractButtonEvvE7executeES4_>:
    virtual void execute(T1 t1)
 800d410:	b580      	push	{r7, lr}
 800d412:	b082      	sub	sp, #8
 800d414:	af00      	add	r7, sp, #0
 800d416:	6078      	str	r0, [r7, #4]
 800d418:	6039      	str	r1, [r7, #0]
        (pobject->*pmemfun)(t1);
 800d41a:	687b      	ldr	r3, [r7, #4]
 800d41c:	685b      	ldr	r3, [r3, #4]
 800d41e:	687a      	ldr	r2, [r7, #4]
 800d420:	68d2      	ldr	r2, [r2, #12]
 800d422:	1052      	asrs	r2, r2, #1
 800d424:	1898      	adds	r0, r3, r2
 800d426:	687b      	ldr	r3, [r7, #4]
 800d428:	68db      	ldr	r3, [r3, #12]
 800d42a:	f003 0301 	and.w	r3, r3, #1
 800d42e:	2b00      	cmp	r3, #0
 800d430:	d102      	bne.n	800d438 <_ZN8touchgfx8CallbackI26temperature_screenViewBaseRKNS_14AbstractButtonEvvE7executeES4_+0x28>
 800d432:	687b      	ldr	r3, [r7, #4]
 800d434:	689b      	ldr	r3, [r3, #8]
 800d436:	e00a      	b.n	800d44e <_ZN8touchgfx8CallbackI26temperature_screenViewBaseRKNS_14AbstractButtonEvvE7executeES4_+0x3e>
 800d438:	687b      	ldr	r3, [r7, #4]
 800d43a:	685b      	ldr	r3, [r3, #4]
 800d43c:	687a      	ldr	r2, [r7, #4]
 800d43e:	68d2      	ldr	r2, [r2, #12]
 800d440:	1052      	asrs	r2, r2, #1
 800d442:	4413      	add	r3, r2
 800d444:	681b      	ldr	r3, [r3, #0]
 800d446:	687a      	ldr	r2, [r7, #4]
 800d448:	6892      	ldr	r2, [r2, #8]
 800d44a:	4413      	add	r3, r2
 800d44c:	681b      	ldr	r3, [r3, #0]
 800d44e:	6839      	ldr	r1, [r7, #0]
 800d450:	4798      	blx	r3
    }
 800d452:	bf00      	nop
 800d454:	3708      	adds	r7, #8
 800d456:	46bd      	mov	sp, r7
 800d458:	bd80      	pop	{r7, pc}

0800d45a <_ZNK8touchgfx8CallbackI26temperature_screenViewBaseRKNS_14AbstractButtonEvvE7isValidEv>:
    virtual bool isValid() const
 800d45a:	b480      	push	{r7}
 800d45c:	b083      	sub	sp, #12
 800d45e:	af00      	add	r7, sp, #0
 800d460:	6078      	str	r0, [r7, #4]
        return (pobject != 0) && (pmemfun != 0);
 800d462:	687b      	ldr	r3, [r7, #4]
 800d464:	685b      	ldr	r3, [r3, #4]
 800d466:	2b00      	cmp	r3, #0
 800d468:	d010      	beq.n	800d48c <_ZNK8touchgfx8CallbackI26temperature_screenViewBaseRKNS_14AbstractButtonEvvE7isValidEv+0x32>
 800d46a:	687b      	ldr	r3, [r7, #4]
 800d46c:	689b      	ldr	r3, [r3, #8]
 800d46e:	2b00      	cmp	r3, #0
 800d470:	d107      	bne.n	800d482 <_ZNK8touchgfx8CallbackI26temperature_screenViewBaseRKNS_14AbstractButtonEvvE7isValidEv+0x28>
 800d472:	687b      	ldr	r3, [r7, #4]
 800d474:	68db      	ldr	r3, [r3, #12]
 800d476:	f003 0301 	and.w	r3, r3, #1
 800d47a:	2b00      	cmp	r3, #0
 800d47c:	d101      	bne.n	800d482 <_ZNK8touchgfx8CallbackI26temperature_screenViewBaseRKNS_14AbstractButtonEvvE7isValidEv+0x28>
 800d47e:	2301      	movs	r3, #1
 800d480:	e000      	b.n	800d484 <_ZNK8touchgfx8CallbackI26temperature_screenViewBaseRKNS_14AbstractButtonEvvE7isValidEv+0x2a>
 800d482:	2300      	movs	r3, #0
 800d484:	2b01      	cmp	r3, #1
 800d486:	d001      	beq.n	800d48c <_ZNK8touchgfx8CallbackI26temperature_screenViewBaseRKNS_14AbstractButtonEvvE7isValidEv+0x32>
 800d488:	2301      	movs	r3, #1
 800d48a:	e000      	b.n	800d48e <_ZNK8touchgfx8CallbackI26temperature_screenViewBaseRKNS_14AbstractButtonEvvE7isValidEv+0x34>
 800d48c:	2300      	movs	r3, #0
    }
 800d48e:	4618      	mov	r0, r3
 800d490:	370c      	adds	r7, #12
 800d492:	46bd      	mov	sp, r7
 800d494:	f85d 7b04 	ldr.w	r7, [sp], #4
 800d498:	4770      	bx	lr

0800d49a <_ZN8touchgfx8CallbackI26temperature_screenViewBaseRKNS_23AbstractButtonContainerEvvE7executeES4_>:
    virtual void execute(T1 t1)
 800d49a:	b580      	push	{r7, lr}
 800d49c:	b082      	sub	sp, #8
 800d49e:	af00      	add	r7, sp, #0
 800d4a0:	6078      	str	r0, [r7, #4]
 800d4a2:	6039      	str	r1, [r7, #0]
        (pobject->*pmemfun)(t1);
 800d4a4:	687b      	ldr	r3, [r7, #4]
 800d4a6:	685b      	ldr	r3, [r3, #4]
 800d4a8:	687a      	ldr	r2, [r7, #4]
 800d4aa:	68d2      	ldr	r2, [r2, #12]
 800d4ac:	1052      	asrs	r2, r2, #1
 800d4ae:	1898      	adds	r0, r3, r2
 800d4b0:	687b      	ldr	r3, [r7, #4]
 800d4b2:	68db      	ldr	r3, [r3, #12]
 800d4b4:	f003 0301 	and.w	r3, r3, #1
 800d4b8:	2b00      	cmp	r3, #0
 800d4ba:	d102      	bne.n	800d4c2 <_ZN8touchgfx8CallbackI26temperature_screenViewBaseRKNS_23AbstractButtonContainerEvvE7executeES4_+0x28>
 800d4bc:	687b      	ldr	r3, [r7, #4]
 800d4be:	689b      	ldr	r3, [r3, #8]
 800d4c0:	e00a      	b.n	800d4d8 <_ZN8touchgfx8CallbackI26temperature_screenViewBaseRKNS_23AbstractButtonContainerEvvE7executeES4_+0x3e>
 800d4c2:	687b      	ldr	r3, [r7, #4]
 800d4c4:	685b      	ldr	r3, [r3, #4]
 800d4c6:	687a      	ldr	r2, [r7, #4]
 800d4c8:	68d2      	ldr	r2, [r2, #12]
 800d4ca:	1052      	asrs	r2, r2, #1
 800d4cc:	4413      	add	r3, r2
 800d4ce:	681b      	ldr	r3, [r3, #0]
 800d4d0:	687a      	ldr	r2, [r7, #4]
 800d4d2:	6892      	ldr	r2, [r2, #8]
 800d4d4:	4413      	add	r3, r2
 800d4d6:	681b      	ldr	r3, [r3, #0]
 800d4d8:	6839      	ldr	r1, [r7, #0]
 800d4da:	4798      	blx	r3
    }
 800d4dc:	bf00      	nop
 800d4de:	3708      	adds	r7, #8
 800d4e0:	46bd      	mov	sp, r7
 800d4e2:	bd80      	pop	{r7, pc}

0800d4e4 <_ZNK8touchgfx8CallbackI26temperature_screenViewBaseRKNS_23AbstractButtonContainerEvvE7isValidEv>:
    virtual bool isValid() const
 800d4e4:	b480      	push	{r7}
 800d4e6:	b083      	sub	sp, #12
 800d4e8:	af00      	add	r7, sp, #0
 800d4ea:	6078      	str	r0, [r7, #4]
        return (pobject != 0) && (pmemfun != 0);
 800d4ec:	687b      	ldr	r3, [r7, #4]
 800d4ee:	685b      	ldr	r3, [r3, #4]
 800d4f0:	2b00      	cmp	r3, #0
 800d4f2:	d010      	beq.n	800d516 <_ZNK8touchgfx8CallbackI26temperature_screenViewBaseRKNS_23AbstractButtonContainerEvvE7isValidEv+0x32>
 800d4f4:	687b      	ldr	r3, [r7, #4]
 800d4f6:	689b      	ldr	r3, [r3, #8]
 800d4f8:	2b00      	cmp	r3, #0
 800d4fa:	d107      	bne.n	800d50c <_ZNK8touchgfx8CallbackI26temperature_screenViewBaseRKNS_23AbstractButtonContainerEvvE7isValidEv+0x28>
 800d4fc:	687b      	ldr	r3, [r7, #4]
 800d4fe:	68db      	ldr	r3, [r3, #12]
 800d500:	f003 0301 	and.w	r3, r3, #1
 800d504:	2b00      	cmp	r3, #0
 800d506:	d101      	bne.n	800d50c <_ZNK8touchgfx8CallbackI26temperature_screenViewBaseRKNS_23AbstractButtonContainerEvvE7isValidEv+0x28>
 800d508:	2301      	movs	r3, #1
 800d50a:	e000      	b.n	800d50e <_ZNK8touchgfx8CallbackI26temperature_screenViewBaseRKNS_23AbstractButtonContainerEvvE7isValidEv+0x2a>
 800d50c:	2300      	movs	r3, #0
 800d50e:	2b01      	cmp	r3, #1
 800d510:	d001      	beq.n	800d516 <_ZNK8touchgfx8CallbackI26temperature_screenViewBaseRKNS_23AbstractButtonContainerEvvE7isValidEv+0x32>
 800d512:	2301      	movs	r3, #1
 800d514:	e000      	b.n	800d518 <_ZNK8touchgfx8CallbackI26temperature_screenViewBaseRKNS_23AbstractButtonContainerEvvE7isValidEv+0x34>
 800d516:	2300      	movs	r3, #0
    }
 800d518:	4618      	mov	r0, r3
 800d51a:	370c      	adds	r7, #12
 800d51c:	46bd      	mov	sp, r7
 800d51e:	f85d 7b04 	ldr.w	r7, [sp], #4
 800d522:	4770      	bx	lr

0800d524 <_ZN14BitmapDatabase11getInstanceEv>:
};

namespace BitmapDatabase
{
const touchgfx::Bitmap::BitmapData* getInstance()
{
 800d524:	b480      	push	{r7}
 800d526:	af00      	add	r7, sp, #0
    return bitmap_database;
 800d528:	4b02      	ldr	r3, [pc, #8]	@ (800d534 <_ZN14BitmapDatabase11getInstanceEv+0x10>)
}
 800d52a:	4618      	mov	r0, r3
 800d52c:	46bd      	mov	sp, r7
 800d52e:	f85d 7b04 	ldr.w	r7, [sp], #4
 800d532:	4770      	bx	lr
 800d534:	080286d8 	.word	0x080286d8

0800d538 <_ZN14BitmapDatabase15getInstanceSizeEv>:

uint16_t getInstanceSize()
{
 800d538:	b480      	push	{r7}
 800d53a:	af00      	add	r7, sp, #0
    return (uint16_t)(sizeof(bitmap_database) / sizeof(touchgfx::Bitmap::BitmapData));
 800d53c:	2307      	movs	r3, #7
}
 800d53e:	4618      	mov	r0, r3
 800d540:	46bd      	mov	sp, r7
 800d542:	f85d 7b04 	ldr.w	r7, [sp], #4
 800d546:	4770      	bx	lr

0800d548 <_ZNK8touchgfx4Font10getKerningEtPKNS_9GlyphNodeE>:
    virtual int8_t getKerning(Unicode::UnicodeChar prevChar, const GlyphNode* glyph) const
 800d548:	b480      	push	{r7}
 800d54a:	b085      	sub	sp, #20
 800d54c:	af00      	add	r7, sp, #0
 800d54e:	60f8      	str	r0, [r7, #12]
 800d550:	460b      	mov	r3, r1
 800d552:	607a      	str	r2, [r7, #4]
 800d554:	817b      	strh	r3, [r7, #10]
        return 0;
 800d556:	2300      	movs	r3, #0
    }
 800d558:	4618      	mov	r0, r3
 800d55a:	3714      	adds	r7, #20
 800d55c:	46bd      	mov	sp, r7
 800d55e:	f85d 7b04 	ldr.w	r7, [sp], #4
 800d562:	4770      	bx	lr

0800d564 <_ZNK8touchgfx4Font12getGSUBTableEv>:
    virtual const uint16_t* getGSUBTable() const
 800d564:	b480      	push	{r7}
 800d566:	b083      	sub	sp, #12
 800d568:	af00      	add	r7, sp, #0
 800d56a:	6078      	str	r0, [r7, #4]
        return 0;
 800d56c:	2300      	movs	r3, #0
    }
 800d56e:	4618      	mov	r0, r3
 800d570:	370c      	adds	r7, #12
 800d572:	46bd      	mov	sp, r7
 800d574:	f85d 7b04 	ldr.w	r7, [sp], #4
 800d578:	4770      	bx	lr

0800d57a <_ZNK8touchgfx4Font23getContextualFormsTableEv>:
    virtual const FontContextualFormsTable* getContextualFormsTable() const
 800d57a:	b480      	push	{r7}
 800d57c:	b083      	sub	sp, #12
 800d57e:	af00      	add	r7, sp, #0
 800d580:	6078      	str	r0, [r7, #4]
        return 0;
 800d582:	2300      	movs	r3, #0
    }
 800d584:	4618      	mov	r0, r3
 800d586:	370c      	adds	r7, #12
 800d588:	46bd      	mov	sp, r7
 800d58a:	f85d 7b04 	ldr.w	r7, [sp], #4
 800d58e:	4770      	bx	lr

0800d590 <_ZN8touchgfx9TypedText25registerTypedTextDatabaseEPKNS0_13TypedTextDataEPKPKNS_4FontEt>:
     *
     * @param  data A reference to the TypedTextData storage array.
     * @param  f    The fonts associated with the array.
     * @param  n    The number of typed texts in the array.
     */
    static void registerTypedTextDatabase(const TypedTextData* data, const Font* const* f, const uint16_t n)
 800d590:	b480      	push	{r7}
 800d592:	b085      	sub	sp, #20
 800d594:	af00      	add	r7, sp, #0
 800d596:	60f8      	str	r0, [r7, #12]
 800d598:	60b9      	str	r1, [r7, #8]
 800d59a:	4613      	mov	r3, r2
 800d59c:	80fb      	strh	r3, [r7, #6]
    {
        typedTexts = data;
 800d59e:	4a07      	ldr	r2, [pc, #28]	@ (800d5bc <_ZN8touchgfx9TypedText25registerTypedTextDatabaseEPKNS0_13TypedTextDataEPKPKNS_4FontEt+0x2c>)
 800d5a0:	68fb      	ldr	r3, [r7, #12]
 800d5a2:	6013      	str	r3, [r2, #0]
        fonts = f;
 800d5a4:	4a06      	ldr	r2, [pc, #24]	@ (800d5c0 <_ZN8touchgfx9TypedText25registerTypedTextDatabaseEPKNS0_13TypedTextDataEPKPKNS_4FontEt+0x30>)
 800d5a6:	68bb      	ldr	r3, [r7, #8]
 800d5a8:	6013      	str	r3, [r2, #0]
        numberOfTypedTexts = n;
 800d5aa:	4a06      	ldr	r2, [pc, #24]	@ (800d5c4 <_ZN8touchgfx9TypedText25registerTypedTextDatabaseEPKNS0_13TypedTextDataEPKPKNS_4FontEt+0x34>)
 800d5ac:	88fb      	ldrh	r3, [r7, #6]
 800d5ae:	8013      	strh	r3, [r2, #0]
    }
 800d5b0:	bf00      	nop
 800d5b2:	3714      	adds	r7, #20
 800d5b4:	46bd      	mov	sp, r7
 800d5b6:	f85d 7b04 	ldr.w	r7, [sp], #4
 800d5ba:	4770      	bx	lr
 800d5bc:	20002ff8 	.word	0x20002ff8
 800d5c0:	20003000 	.word	0x20003000
 800d5c4:	20002ffc 	.word	0x20002ffc

0800d5c8 <_ZNK8touchgfx4Font14getStringWidthEPKtz>:
#include <touchgfx/hal/HAL.hpp>
#include <touchgfx/lcd/LCD.hpp>
#include <texts/TypedTextDatabase.hpp>

uint16_t touchgfx::Font::getStringWidth(const touchgfx::Unicode::UnicodeChar* text, ...) const
{
 800d5c8:	b40e      	push	{r1, r2, r3}
 800d5ca:	b580      	push	{r7, lr}
 800d5cc:	b085      	sub	sp, #20
 800d5ce:	af00      	add	r7, sp, #0
 800d5d0:	6078      	str	r0, [r7, #4]
    va_list pArg;
    va_start(pArg, text);
 800d5d2:	f107 0320 	add.w	r3, r7, #32
 800d5d6:	60bb      	str	r3, [r7, #8]
    uint16_t width = getStringWidthLTR(TEXT_DIRECTION_LTR, text, pArg);
 800d5d8:	68bb      	ldr	r3, [r7, #8]
 800d5da:	69fa      	ldr	r2, [r7, #28]
 800d5dc:	2100      	movs	r1, #0
 800d5de:	6878      	ldr	r0, [r7, #4]
 800d5e0:	f007 fc4a 	bl	8014e78 <_ZNK8touchgfx4Font17getStringWidthLTREhPKtSt9__va_list>
 800d5e4:	4603      	mov	r3, r0
 800d5e6:	81fb      	strh	r3, [r7, #14]
    va_end(pArg);
    return width;
 800d5e8:	89fb      	ldrh	r3, [r7, #14]
}
 800d5ea:	4618      	mov	r0, r3
 800d5ec:	3714      	adds	r7, #20
 800d5ee:	46bd      	mov	sp, r7
 800d5f0:	e8bd 4080 	ldmia.w	sp!, {r7, lr}
 800d5f4:	b003      	add	sp, #12
 800d5f6:	4770      	bx	lr

0800d5f8 <_ZNK8touchgfx4Font14getStringWidthEhPKtz>:

uint16_t touchgfx::Font::getStringWidth(touchgfx::TextDirection textDirection, const touchgfx::Unicode::UnicodeChar* text, ...) const
{
 800d5f8:	b40c      	push	{r2, r3}
 800d5fa:	b580      	push	{r7, lr}
 800d5fc:	b084      	sub	sp, #16
 800d5fe:	af00      	add	r7, sp, #0
 800d600:	6078      	str	r0, [r7, #4]
 800d602:	460b      	mov	r3, r1
 800d604:	70fb      	strb	r3, [r7, #3]
    va_list pArg;
    va_start(pArg, text);
 800d606:	f107 031c 	add.w	r3, r7, #28
 800d60a:	60bb      	str	r3, [r7, #8]
    uint16_t width = getStringWidthLTR(textDirection, text, pArg);
 800d60c:	78f9      	ldrb	r1, [r7, #3]
 800d60e:	68bb      	ldr	r3, [r7, #8]
 800d610:	69ba      	ldr	r2, [r7, #24]
 800d612:	6878      	ldr	r0, [r7, #4]
 800d614:	f007 fc30 	bl	8014e78 <_ZNK8touchgfx4Font17getStringWidthLTREhPKtSt9__va_list>
 800d618:	4603      	mov	r3, r0
 800d61a:	81fb      	strh	r3, [r7, #14]
    va_end(pArg);
    return width;
 800d61c:	89fb      	ldrh	r3, [r7, #14]
}
 800d61e:	4618      	mov	r0, r3
 800d620:	3710      	adds	r7, #16
 800d622:	46bd      	mov	sp, r7
 800d624:	e8bd 4080 	ldmia.w	sp!, {r7, lr}
 800d628:	b002      	add	sp, #8
 800d62a:	4770      	bx	lr

0800d62c <_ZN8touchgfx12TextProvider15getNextLigatureEh>:

touchgfx::Unicode::UnicodeChar touchgfx::TextProvider::getNextLigature(TextDirection direction)
{
 800d62c:	b580      	push	{r7, lr}
 800d62e:	b08a      	sub	sp, #40	@ 0x28
 800d630:	af00      	add	r7, sp, #0
 800d632:	6078      	str	r0, [r7, #4]
 800d634:	460b      	mov	r3, r1
 800d636:	70fb      	strb	r3, [r7, #3]
    if (fontGsubTable && nextCharacters.peekChar())
 800d638:	687b      	ldr	r3, [r7, #4]
 800d63a:	6c5b      	ldr	r3, [r3, #68]	@ 0x44
 800d63c:	2b00      	cmp	r3, #0
 800d63e:	d016      	beq.n	800d66e <_ZN8touchgfx12TextProvider15getNextLigatureEh+0x42>
 800d640:	687b      	ldr	r3, [r7, #4]
 800d642:	3322      	adds	r3, #34	@ 0x22
 800d644:	627b      	str	r3, [r7, #36]	@ 0x24
            return used == size;
        }

        FORCE_INLINE_FUNCTION Unicode::UnicodeChar peekChar()
        {
            assert(used > 0);
 800d646:	6a7b      	ldr	r3, [r7, #36]	@ 0x24
 800d648:	8adb      	ldrh	r3, [r3, #22]
 800d64a:	2b00      	cmp	r3, #0
 800d64c:	d105      	bne.n	800d65a <_ZN8touchgfx12TextProvider15getNextLigatureEh+0x2e>
 800d64e:	4b43      	ldr	r3, [pc, #268]	@ (800d75c <_ZN8touchgfx12TextProvider15getNextLigatureEh+0x130>)
 800d650:	4a43      	ldr	r2, [pc, #268]	@ (800d760 <_ZN8touchgfx12TextProvider15getNextLigatureEh+0x134>)
 800d652:	21c5      	movs	r1, #197	@ 0xc5
 800d654:	4843      	ldr	r0, [pc, #268]	@ (800d764 <_ZN8touchgfx12TextProvider15getNextLigatureEh+0x138>)
 800d656:	f018 facb 	bl	8025bf0 <__assert_func>
            return buffer[pos];
 800d65a:	6a7b      	ldr	r3, [r7, #36]	@ 0x24
 800d65c:	8a9b      	ldrh	r3, [r3, #20]
 800d65e:	461a      	mov	r2, r3
 800d660:	6a7b      	ldr	r3, [r7, #36]	@ 0x24
 800d662:	f833 3012 	ldrh.w	r3, [r3, r2, lsl #1]
 800d666:	2b00      	cmp	r3, #0
 800d668:	d001      	beq.n	800d66e <_ZN8touchgfx12TextProvider15getNextLigatureEh+0x42>
 800d66a:	2301      	movs	r3, #1
 800d66c:	e000      	b.n	800d670 <_ZN8touchgfx12TextProvider15getNextLigatureEh+0x44>
 800d66e:	2300      	movs	r3, #0
 800d670:	2b00      	cmp	r3, #0
 800d672:	d06a      	beq.n	800d74a <_ZN8touchgfx12TextProvider15getNextLigatureEh+0x11e>
    {
        substituteGlyphs();
 800d674:	6878      	ldr	r0, [r7, #4]
 800d676:	f008 fece 	bl	8016416 <_ZN8touchgfx12TextProvider16substituteGlyphsEv>
        if (nextCharacters.peekChar(1) == 0x093F) // Hindi I-matra
 800d67a:	687b      	ldr	r3, [r7, #4]
 800d67c:	3322      	adds	r3, #34	@ 0x22
 800d67e:	623b      	str	r3, [r7, #32]
 800d680:	2301      	movs	r3, #1
 800d682:	83fb      	strh	r3, [r7, #30]
        }

        FORCE_INLINE_FUNCTION Unicode::UnicodeChar peekChar(uint16_t offset)
        {
            assert(offset < used);
 800d684:	6a3b      	ldr	r3, [r7, #32]
 800d686:	8adb      	ldrh	r3, [r3, #22]
 800d688:	8bfa      	ldrh	r2, [r7, #30]
 800d68a:	429a      	cmp	r2, r3
 800d68c:	d305      	bcc.n	800d69a <_ZN8touchgfx12TextProvider15getNextLigatureEh+0x6e>
 800d68e:	4b36      	ldr	r3, [pc, #216]	@ (800d768 <_ZN8touchgfx12TextProvider15getNextLigatureEh+0x13c>)
 800d690:	4a36      	ldr	r2, [pc, #216]	@ (800d76c <_ZN8touchgfx12TextProvider15getNextLigatureEh+0x140>)
 800d692:	21cb      	movs	r1, #203	@ 0xcb
 800d694:	4833      	ldr	r0, [pc, #204]	@ (800d764 <_ZN8touchgfx12TextProvider15getNextLigatureEh+0x138>)
 800d696:	f018 faab 	bl	8025bf0 <__assert_func>
            const uint16_t index = pos + offset;
 800d69a:	6a3b      	ldr	r3, [r7, #32]
 800d69c:	8a9a      	ldrh	r2, [r3, #20]
 800d69e:	8bfb      	ldrh	r3, [r7, #30]
 800d6a0:	4413      	add	r3, r2
 800d6a2:	83bb      	strh	r3, [r7, #28]
            return buffer[index < size ? index : index - size];
 800d6a4:	8bbb      	ldrh	r3, [r7, #28]
 800d6a6:	2b09      	cmp	r3, #9
 800d6a8:	d801      	bhi.n	800d6ae <_ZN8touchgfx12TextProvider15getNextLigatureEh+0x82>
 800d6aa:	8bbb      	ldrh	r3, [r7, #28]
 800d6ac:	e001      	b.n	800d6b2 <_ZN8touchgfx12TextProvider15getNextLigatureEh+0x86>
 800d6ae:	8bbb      	ldrh	r3, [r7, #28]
 800d6b0:	3b0a      	subs	r3, #10
 800d6b2:	6a3a      	ldr	r2, [r7, #32]
 800d6b4:	f832 3013 	ldrh.w	r3, [r2, r3, lsl #1]
 800d6b8:	f640 123f 	movw	r2, #2367	@ 0x93f
 800d6bc:	4293      	cmp	r3, r2
 800d6be:	bf0c      	ite	eq
 800d6c0:	2301      	moveq	r3, #1
 800d6c2:	2300      	movne	r3, #0
 800d6c4:	b2db      	uxtb	r3, r3
 800d6c6:	2b00      	cmp	r3, #0
 800d6c8:	d03f      	beq.n	800d74a <_ZN8touchgfx12TextProvider15getNextLigatureEh+0x11e>
        {
            nextCharacters.replaceAt1(nextCharacters.peekChar());
 800d6ca:	687b      	ldr	r3, [r7, #4]
 800d6cc:	3322      	adds	r3, #34	@ 0x22
 800d6ce:	687a      	ldr	r2, [r7, #4]
 800d6d0:	3222      	adds	r2, #34	@ 0x22
 800d6d2:	60ba      	str	r2, [r7, #8]
            assert(used > 0);
 800d6d4:	68ba      	ldr	r2, [r7, #8]
 800d6d6:	8ad2      	ldrh	r2, [r2, #22]
 800d6d8:	2a00      	cmp	r2, #0
 800d6da:	d105      	bne.n	800d6e8 <_ZN8touchgfx12TextProvider15getNextLigatureEh+0xbc>
 800d6dc:	4b1f      	ldr	r3, [pc, #124]	@ (800d75c <_ZN8touchgfx12TextProvider15getNextLigatureEh+0x130>)
 800d6de:	4a20      	ldr	r2, [pc, #128]	@ (800d760 <_ZN8touchgfx12TextProvider15getNextLigatureEh+0x134>)
 800d6e0:	21c5      	movs	r1, #197	@ 0xc5
 800d6e2:	4820      	ldr	r0, [pc, #128]	@ (800d764 <_ZN8touchgfx12TextProvider15getNextLigatureEh+0x138>)
 800d6e4:	f018 fa84 	bl	8025bf0 <__assert_func>
            return buffer[pos];
 800d6e8:	68ba      	ldr	r2, [r7, #8]
 800d6ea:	8a92      	ldrh	r2, [r2, #20]
 800d6ec:	4611      	mov	r1, r2
 800d6ee:	68ba      	ldr	r2, [r7, #8]
 800d6f0:	f832 2011 	ldrh.w	r2, [r2, r1, lsl #1]
 800d6f4:	613b      	str	r3, [r7, #16]
 800d6f6:	4613      	mov	r3, r2
 800d6f8:	81fb      	strh	r3, [r7, #14]
            buffer[pos] = newChar;
        }

        FORCE_INLINE_FUNCTION void replaceAt1(Unicode::UnicodeChar newChar)
        {
            assert(used > 1);
 800d6fa:	693b      	ldr	r3, [r7, #16]
 800d6fc:	8adb      	ldrh	r3, [r3, #22]
 800d6fe:	2b01      	cmp	r3, #1
 800d700:	d806      	bhi.n	800d710 <_ZN8touchgfx12TextProvider15getNextLigatureEh+0xe4>
 800d702:	4b1b      	ldr	r3, [pc, #108]	@ (800d770 <_ZN8touchgfx12TextProvider15getNextLigatureEh+0x144>)
 800d704:	4a1b      	ldr	r2, [pc, #108]	@ (800d774 <_ZN8touchgfx12TextProvider15getNextLigatureEh+0x148>)
 800d706:	f44f 718e 	mov.w	r1, #284	@ 0x11c
 800d70a:	4816      	ldr	r0, [pc, #88]	@ (800d764 <_ZN8touchgfx12TextProvider15getNextLigatureEh+0x138>)
 800d70c:	f018 fa70 	bl	8025bf0 <__assert_func>
            const uint16_t index = pos + 1;
 800d710:	693b      	ldr	r3, [r7, #16]
 800d712:	8a9b      	ldrh	r3, [r3, #20]
 800d714:	3301      	adds	r3, #1
 800d716:	81bb      	strh	r3, [r7, #12]
            buffer[index < size ? index : 0] = newChar;
 800d718:	89bb      	ldrh	r3, [r7, #12]
 800d71a:	2b09      	cmp	r3, #9
 800d71c:	d801      	bhi.n	800d722 <_ZN8touchgfx12TextProvider15getNextLigatureEh+0xf6>
 800d71e:	89bb      	ldrh	r3, [r7, #12]
 800d720:	e000      	b.n	800d724 <_ZN8touchgfx12TextProvider15getNextLigatureEh+0xf8>
 800d722:	2300      	movs	r3, #0
 800d724:	693a      	ldr	r2, [r7, #16]
 800d726:	89f9      	ldrh	r1, [r7, #14]
 800d728:	f822 1013 	strh.w	r1, [r2, r3, lsl #1]
        }
 800d72c:	bf00      	nop
            nextCharacters.replaceAt0(0x093F);
 800d72e:	687b      	ldr	r3, [r7, #4]
 800d730:	3322      	adds	r3, #34	@ 0x22
 800d732:	61bb      	str	r3, [r7, #24]
 800d734:	f640 133f 	movw	r3, #2367	@ 0x93f
 800d738:	82fb      	strh	r3, [r7, #22]
            buffer[pos] = newChar;
 800d73a:	69bb      	ldr	r3, [r7, #24]
 800d73c:	8a9b      	ldrh	r3, [r3, #20]
 800d73e:	4619      	mov	r1, r3
 800d740:	69bb      	ldr	r3, [r7, #24]
 800d742:	8afa      	ldrh	r2, [r7, #22]
 800d744:	f823 2011 	strh.w	r2, [r3, r1, lsl #1]
        }
 800d748:	bf00      	nop
        }
    }
    return getNextChar();
 800d74a:	6878      	ldr	r0, [r7, #4]
 800d74c:	f008 fd66 	bl	801621c <_ZN8touchgfx12TextProvider11getNextCharEv>
 800d750:	4603      	mov	r3, r0
}
 800d752:	4618      	mov	r0, r3
 800d754:	3728      	adds	r7, #40	@ 0x28
 800d756:	46bd      	mov	sp, r7
 800d758:	bd80      	pop	{r7, pc}
 800d75a:	bf00      	nop
 800d75c:	080272e4 	.word	0x080272e4
 800d760:	080272f0 	.word	0x080272f0
 800d764:	0802739c 	.word	0x0802739c
 800d768:	080273e4 	.word	0x080273e4
 800d76c:	080273f4 	.word	0x080273f4
 800d770:	080274c8 	.word	0x080274c8
 800d774:	080274d4 	.word	0x080274d4

0800d778 <_ZN8touchgfx12TextProvider18initializeInternalEv>:

void touchgfx::TextProvider::initializeInternal()
{
 800d778:	b580      	push	{r7, lr}
 800d77a:	b082      	sub	sp, #8
 800d77c:	af00      	add	r7, sp, #0
 800d77e:	6078      	str	r0, [r7, #4]
    fillInputBuffer();
 800d780:	6878      	ldr	r0, [r7, #4]
 800d782:	f008 fd12 	bl	80161aa <_ZN8touchgfx12TextProvider15fillInputBufferEv>
}
 800d786:	bf00      	nop
 800d788:	3708      	adds	r7, #8
 800d78a:	46bd      	mov	sp, r7
 800d78c:	bd80      	pop	{r7, pc}

0800d78e <_ZN8touchgfx3LCD10drawStringENS_4RectERKS1_RKNS0_13StringVisualsEPKtz>:

void touchgfx::LCD::drawString(touchgfx::Rect widgetArea, const touchgfx::Rect& invalidatedArea, const touchgfx::LCD::StringVisuals& stringVisuals, const touchgfx::Unicode::UnicodeChar* format, ...)
{
 800d78e:	b580      	push	{r7, lr}
 800d790:	b088      	sub	sp, #32
 800d792:	af02      	add	r7, sp, #8
 800d794:	60f8      	str	r0, [r7, #12]
 800d796:	1d38      	adds	r0, r7, #4
 800d798:	e880 0006 	stmia.w	r0, {r1, r2}
 800d79c:	603b      	str	r3, [r7, #0]
    va_list pArg;
    va_start(pArg, format);
 800d79e:	f107 0328 	add.w	r3, r7, #40	@ 0x28
 800d7a2:	617b      	str	r3, [r7, #20]
    drawStringLTR(widgetArea, invalidatedArea, stringVisuals, format, pArg);
 800d7a4:	1d39      	adds	r1, r7, #4
 800d7a6:	697b      	ldr	r3, [r7, #20]
 800d7a8:	9301      	str	r3, [sp, #4]
 800d7aa:	6a7b      	ldr	r3, [r7, #36]	@ 0x24
 800d7ac:	9300      	str	r3, [sp, #0]
 800d7ae:	6a3b      	ldr	r3, [r7, #32]
 800d7b0:	683a      	ldr	r2, [r7, #0]
 800d7b2:	68f8      	ldr	r0, [r7, #12]
 800d7b4:	f005 ffbc 	bl	8013730 <_ZN8touchgfx3LCD13drawStringLTRERKNS_4RectES3_RKNS0_13StringVisualsEPKtSt9__va_list>
    va_end(pArg);
}
 800d7b8:	bf00      	nop
 800d7ba:	3718      	adds	r7, #24
 800d7bc:	46bd      	mov	sp, r7
 800d7be:	bd80      	pop	{r7, pc}

0800d7c0 <_ZN8touchgfx5Texts11setLanguageEt>:
touchgfx::LanguageId touchgfx::Texts::currentLanguage = static_cast<touchgfx::LanguageId>(0);
static const touchgfx::Unicode::UnicodeChar* currentLanguagePtr = 0;
static const uint32_t* currentLanguageIndices = 0;

void touchgfx::Texts::setLanguage(touchgfx::LanguageId id)
{
 800d7c0:	b590      	push	{r4, r7, lr}
 800d7c2:	b085      	sub	sp, #20
 800d7c4:	af00      	add	r7, sp, #0
 800d7c6:	4603      	mov	r3, r0
 800d7c8:	80fb      	strh	r3, [r7, #6]
    const touchgfx::TypedText::TypedTextData* currentLanguageTypedText = 0;
 800d7ca:	2300      	movs	r3, #0
 800d7cc:	60fb      	str	r3, [r7, #12]
    if (id < 1)
 800d7ce:	88fb      	ldrh	r3, [r7, #6]
 800d7d0:	2b00      	cmp	r3, #0
 800d7d2:	d127      	bne.n	800d824 <_ZN8touchgfx5Texts11setLanguageEt+0x64>
    {
        if (languagesArray[id] != 0)
 800d7d4:	88fb      	ldrh	r3, [r7, #6]
 800d7d6:	4a1e      	ldr	r2, [pc, #120]	@ (800d850 <_ZN8touchgfx5Texts11setLanguageEt+0x90>)
 800d7d8:	f852 3023 	ldr.w	r3, [r2, r3, lsl #2]
 800d7dc:	2b00      	cmp	r3, #0
 800d7de:	d016      	beq.n	800d80e <_ZN8touchgfx5Texts11setLanguageEt+0x4e>
        {
            // Dynamic translation is added
            const TranslationHeader* translation = languagesArray[id];
 800d7e0:	88fb      	ldrh	r3, [r7, #6]
 800d7e2:	4a1b      	ldr	r2, [pc, #108]	@ (800d850 <_ZN8touchgfx5Texts11setLanguageEt+0x90>)
 800d7e4:	f852 3023 	ldr.w	r3, [r2, r3, lsl #2]
 800d7e8:	60bb      	str	r3, [r7, #8]
            currentLanguagePtr = (const touchgfx::Unicode::UnicodeChar*)(((const uint8_t*)translation) + translation->offset_to_texts);
 800d7ea:	68bb      	ldr	r3, [r7, #8]
 800d7ec:	681b      	ldr	r3, [r3, #0]
 800d7ee:	68ba      	ldr	r2, [r7, #8]
 800d7f0:	4413      	add	r3, r2
 800d7f2:	4a18      	ldr	r2, [pc, #96]	@ (800d854 <_ZN8touchgfx5Texts11setLanguageEt+0x94>)
 800d7f4:	6013      	str	r3, [r2, #0]
            currentLanguageIndices = (const uint32_t*)(((const uint8_t*)translation) + translation->offset_to_indices);
 800d7f6:	68bb      	ldr	r3, [r7, #8]
 800d7f8:	685b      	ldr	r3, [r3, #4]
 800d7fa:	68ba      	ldr	r2, [r7, #8]
 800d7fc:	4413      	add	r3, r2
 800d7fe:	4a16      	ldr	r2, [pc, #88]	@ (800d858 <_ZN8touchgfx5Texts11setLanguageEt+0x98>)
 800d800:	6013      	str	r3, [r2, #0]
            currentLanguageTypedText = (const touchgfx::TypedText::TypedTextData*)(((const uint8_t*)translation) + translation->offset_to_typedtext);
 800d802:	68bb      	ldr	r3, [r7, #8]
 800d804:	689b      	ldr	r3, [r3, #8]
 800d806:	68ba      	ldr	r2, [r7, #8]
 800d808:	4413      	add	r3, r2
 800d80a:	60fb      	str	r3, [r7, #12]
 800d80c:	e00a      	b.n	800d824 <_ZN8touchgfx5Texts11setLanguageEt+0x64>
        }
        else
        {
            // Compiled and linked in languages
            currentLanguagePtr = texts_all_languages;
 800d80e:	4b11      	ldr	r3, [pc, #68]	@ (800d854 <_ZN8touchgfx5Texts11setLanguageEt+0x94>)
 800d810:	4a12      	ldr	r2, [pc, #72]	@ (800d85c <_ZN8touchgfx5Texts11setLanguageEt+0x9c>)
 800d812:	601a      	str	r2, [r3, #0]
            currentLanguageIndices = staticLanguageIndices[id];
 800d814:	4a12      	ldr	r2, [pc, #72]	@ (800d860 <_ZN8touchgfx5Texts11setLanguageEt+0xa0>)
 800d816:	4b10      	ldr	r3, [pc, #64]	@ (800d858 <_ZN8touchgfx5Texts11setLanguageEt+0x98>)
 800d818:	601a      	str	r2, [r3, #0]
            currentLanguageTypedText = typedTextDatabaseArray[id];
 800d81a:	88fb      	ldrh	r3, [r7, #6]
 800d81c:	4a11      	ldr	r2, [pc, #68]	@ (800d864 <_ZN8touchgfx5Texts11setLanguageEt+0xa4>)
 800d81e:	f852 3023 	ldr.w	r3, [r2, r3, lsl #2]
 800d822:	60fb      	str	r3, [r7, #12]
        }
    }

    if (currentLanguageTypedText)
 800d824:	68fb      	ldr	r3, [r7, #12]
 800d826:	2b00      	cmp	r3, #0
 800d828:	d00d      	beq.n	800d846 <_ZN8touchgfx5Texts11setLanguageEt+0x86>
    {
        currentLanguage = id;
 800d82a:	4a0f      	ldr	r2, [pc, #60]	@ (800d868 <_ZN8touchgfx5Texts11setLanguageEt+0xa8>)
 800d82c:	88fb      	ldrh	r3, [r7, #6]
 800d82e:	8013      	strh	r3, [r2, #0]
        touchgfx::TypedText::registerTypedTextDatabase(currentLanguageTypedText,
                                                       TypedTextDatabase::getFonts(), TypedTextDatabase::getInstanceSize());
 800d830:	f000 f83e 	bl	800d8b0 <_ZN17TypedTextDatabase8getFontsEv>
 800d834:	4604      	mov	r4, r0
        touchgfx::TypedText::registerTypedTextDatabase(currentLanguageTypedText,
 800d836:	f000 f833 	bl	800d8a0 <_ZN17TypedTextDatabase15getInstanceSizeEv>
 800d83a:	4603      	mov	r3, r0
 800d83c:	461a      	mov	r2, r3
 800d83e:	4621      	mov	r1, r4
 800d840:	68f8      	ldr	r0, [r7, #12]
 800d842:	f7ff fea5 	bl	800d590 <_ZN8touchgfx9TypedText25registerTypedTextDatabaseEPKNS0_13TypedTextDataEPKPKNS_4FontEt>
    }
}
 800d846:	bf00      	nop
 800d848:	3714      	adds	r7, #20
 800d84a:	46bd      	mov	sp, r7
 800d84c:	bd90      	pop	{r4, r7, pc}
 800d84e:	bf00      	nop
 800d850:	200006bc 	.word	0x200006bc
 800d854:	200006c4 	.word	0x200006c4
 800d858:	200006c8 	.word	0x200006c8
 800d85c:	0805ffd8 	.word	0x0805ffd8
 800d860:	0805ffac 	.word	0x0805ffac
 800d864:	080600c8 	.word	0x080600c8
 800d868:	200006c0 	.word	0x200006c0

0800d86c <_ZNK8touchgfx5Texts7getTextEt>:
{
    languagesArray[id] = (const TranslationHeader*)translation;
}

const touchgfx::Unicode::UnicodeChar* touchgfx::Texts::getText(TypedTextId id) const
{
 800d86c:	b480      	push	{r7}
 800d86e:	b083      	sub	sp, #12
 800d870:	af00      	add	r7, sp, #0
 800d872:	6078      	str	r0, [r7, #4]
 800d874:	460b      	mov	r3, r1
 800d876:	807b      	strh	r3, [r7, #2]
    return &currentLanguagePtr[currentLanguageIndices[id]];
 800d878:	4b07      	ldr	r3, [pc, #28]	@ (800d898 <_ZNK8touchgfx5Texts7getTextEt+0x2c>)
 800d87a:	681a      	ldr	r2, [r3, #0]
 800d87c:	4b07      	ldr	r3, [pc, #28]	@ (800d89c <_ZNK8touchgfx5Texts7getTextEt+0x30>)
 800d87e:	6819      	ldr	r1, [r3, #0]
 800d880:	887b      	ldrh	r3, [r7, #2]
 800d882:	009b      	lsls	r3, r3, #2
 800d884:	440b      	add	r3, r1
 800d886:	681b      	ldr	r3, [r3, #0]
 800d888:	005b      	lsls	r3, r3, #1
 800d88a:	4413      	add	r3, r2
}
 800d88c:	4618      	mov	r0, r3
 800d88e:	370c      	adds	r7, #12
 800d890:	46bd      	mov	sp, r7
 800d892:	f85d 7b04 	ldr.w	r7, [sp], #4
 800d896:	4770      	bx	lr
 800d898:	200006c4 	.word	0x200006c4
 800d89c:	200006c8 	.word	0x200006c8

0800d8a0 <_ZN17TypedTextDatabase15getInstanceSizeEv>:
{
    return typedTextDatabaseArray[id];
}

uint16_t getInstanceSize()
{
 800d8a0:	b480      	push	{r7}
 800d8a2:	af00      	add	r7, sp, #0
    return sizeof(typedText_database_DEFAULT) / sizeof(touchgfx::TypedText::TypedTextData);
 800d8a4:	230b      	movs	r3, #11
}
 800d8a6:	4618      	mov	r0, r3
 800d8a8:	46bd      	mov	sp, r7
 800d8aa:	f85d 7b04 	ldr.w	r7, [sp], #4
 800d8ae:	4770      	bx	lr

0800d8b0 <_ZN17TypedTextDatabase8getFontsEv>:

const touchgfx::Font** getFonts()
{
 800d8b0:	b480      	push	{r7}
 800d8b2:	af00      	add	r7, sp, #0
    return touchgfx_fonts;
 800d8b4:	4b02      	ldr	r3, [pc, #8]	@ (800d8c0 <_ZN17TypedTextDatabase8getFontsEv+0x10>)
}
 800d8b6:	4618      	mov	r0, r3
 800d8b8:	46bd      	mov	sp, r7
 800d8ba:	f85d 7b04 	ldr.w	r7, [sp], #4
 800d8be:	4770      	bx	lr
 800d8c0:	200006cc 	.word	0x200006cc

0800d8c4 <_Z41__static_initialization_and_destruction_0ii>:
    case 1:
        touchgfx_fonts[1] = &(getFont_verdana_30_4bpp());
        break;
    }
}
} // namespace TypedTextDatabase
 800d8c4:	b580      	push	{r7, lr}
 800d8c6:	b082      	sub	sp, #8
 800d8c8:	af00      	add	r7, sp, #0
 800d8ca:	6078      	str	r0, [r7, #4]
 800d8cc:	6039      	str	r1, [r7, #0]
 800d8ce:	687b      	ldr	r3, [r7, #4]
 800d8d0:	2b01      	cmp	r3, #1
 800d8d2:	d10e      	bne.n	800d8f2 <_Z41__static_initialization_and_destruction_0ii+0x2e>
 800d8d4:	683b      	ldr	r3, [r7, #0]
 800d8d6:	f64f 72ff 	movw	r2, #65535	@ 0xffff
 800d8da:	4293      	cmp	r3, r2
 800d8dc:	d109      	bne.n	800d8f2 <_Z41__static_initialization_and_destruction_0ii+0x2e>
    &(getFont_Asap_Regular_80_4bpp()),
 800d8de:	f7fa fcb5 	bl	800824c <_Z28getFont_Asap_Regular_80_4bppv>
 800d8e2:	4603      	mov	r3, r0
};
 800d8e4:	4a05      	ldr	r2, [pc, #20]	@ (800d8fc <_Z41__static_initialization_and_destruction_0ii+0x38>)
 800d8e6:	6013      	str	r3, [r2, #0]
    &(getFont_verdana_30_4bpp())
 800d8e8:	f7fa fd0a 	bl	8008300 <_Z23getFont_verdana_30_4bppv>
 800d8ec:	4603      	mov	r3, r0
};
 800d8ee:	4a03      	ldr	r2, [pc, #12]	@ (800d8fc <_Z41__static_initialization_and_destruction_0ii+0x38>)
 800d8f0:	6053      	str	r3, [r2, #4]
} // namespace TypedTextDatabase
 800d8f2:	bf00      	nop
 800d8f4:	3708      	adds	r7, #8
 800d8f6:	46bd      	mov	sp, r7
 800d8f8:	bd80      	pop	{r7, pc}
 800d8fa:	bf00      	nop
 800d8fc:	200006cc 	.word	0x200006cc

0800d900 <_GLOBAL__sub_I_touchgfx_fonts>:
 800d900:	b580      	push	{r7, lr}
 800d902:	af00      	add	r7, sp, #0
 800d904:	f64f 71ff 	movw	r1, #65535	@ 0xffff
 800d908:	2001      	movs	r0, #1
 800d90a:	f7ff ffdb 	bl	800d8c4 <_Z41__static_initialization_and_destruction_0ii>
 800d90e:	bd80      	pop	{r7, pc}

0800d910 <_ZN19FrontendApplicationD1Ev>:

class FrontendApplication : public FrontendApplicationBase
{
public:
    FrontendApplication(Model& m, FrontendHeap& heap);
    virtual ~FrontendApplication() { }
 800d910:	b580      	push	{r7, lr}
 800d912:	b082      	sub	sp, #8
 800d914:	af00      	add	r7, sp, #0
 800d916:	6078      	str	r0, [r7, #4]
 800d918:	4a05      	ldr	r2, [pc, #20]	@ (800d930 <_ZN19FrontendApplicationD1Ev+0x20>)
 800d91a:	687b      	ldr	r3, [r7, #4]
 800d91c:	601a      	str	r2, [r3, #0]
 800d91e:	687b      	ldr	r3, [r7, #4]
 800d920:	4618      	mov	r0, r3
 800d922:	f7fa ff4d 	bl	80087c0 <_ZN23FrontendApplicationBaseD1Ev>
 800d926:	687b      	ldr	r3, [r7, #4]
 800d928:	4618      	mov	r0, r3
 800d92a:	3708      	adds	r7, #8
 800d92c:	46bd      	mov	sp, r7
 800d92e:	bd80      	pop	{r7, pc}
 800d930:	080287d0 	.word	0x080287d0

0800d934 <_ZN19FrontendApplicationD0Ev>:
 800d934:	b580      	push	{r7, lr}
 800d936:	b082      	sub	sp, #8
 800d938:	af00      	add	r7, sp, #0
 800d93a:	6078      	str	r0, [r7, #4]
 800d93c:	6878      	ldr	r0, [r7, #4]
 800d93e:	f7ff ffe7 	bl	800d910 <_ZN19FrontendApplicationD1Ev>
 800d942:	f44f 71ae 	mov.w	r1, #348	@ 0x15c
 800d946:	6878      	ldr	r0, [r7, #4]
 800d948:	f018 f8a3 	bl	8025a92 <_ZdlPvj>
 800d94c:	687b      	ldr	r3, [r7, #4]
 800d94e:	4618      	mov	r0, r3
 800d950:	3708      	adds	r7, #8
 800d952:	46bd      	mov	sp, r7
 800d954:	bd80      	pop	{r7, pc}

0800d956 <_ZN19FrontendApplication15handleTickEventEv>:

    virtual void handleTickEvent()
 800d956:	b580      	push	{r7, lr}
 800d958:	b082      	sub	sp, #8
 800d95a:	af00      	add	r7, sp, #0
 800d95c:	6078      	str	r0, [r7, #4]
    {
        model.tick();
 800d95e:	687b      	ldr	r3, [r7, #4]
 800d960:	f8d3 3158 	ldr.w	r3, [r3, #344]	@ 0x158
 800d964:	4618      	mov	r0, r3
 800d966:	f000 fcd3 	bl	800e310 <_ZN5Model4tickEv>
        FrontendApplicationBase::handleTickEvent();
 800d96a:	687b      	ldr	r3, [r7, #4]
 800d96c:	4618      	mov	r0, r3
 800d96e:	f006 fbb9 	bl	80140e4 <_ZN8touchgfx11Application15handleTickEventEv>
    }
 800d972:	bf00      	nop
 800d974:	3708      	adds	r7, #8
 800d976:	46bd      	mov	sp, r7
 800d978:	bd80      	pop	{r7, pc}
	...

0800d97c <_ZN19FrontendApplicationC1ER5ModelR12FrontendHeap>:
#include <gui/common/FrontendApplication.hpp>

FrontendApplication::FrontendApplication(Model& m, FrontendHeap& heap)
 800d97c:	b580      	push	{r7, lr}
 800d97e:	b084      	sub	sp, #16
 800d980:	af00      	add	r7, sp, #0
 800d982:	60f8      	str	r0, [r7, #12]
 800d984:	60b9      	str	r1, [r7, #8]
 800d986:	607a      	str	r2, [r7, #4]
    : FrontendApplicationBase(m, heap)
 800d988:	68fb      	ldr	r3, [r7, #12]
 800d98a:	687a      	ldr	r2, [r7, #4]
 800d98c:	68b9      	ldr	r1, [r7, #8]
 800d98e:	4618      	mov	r0, r3
 800d990:	f7fa ff66 	bl	8008860 <_ZN23FrontendApplicationBaseC1ER5ModelR12FrontendHeap>
 800d994:	4a03      	ldr	r2, [pc, #12]	@ (800d9a4 <_ZN19FrontendApplicationC1ER5ModelR12FrontendHeap+0x28>)
 800d996:	68fb      	ldr	r3, [r7, #12]
 800d998:	601a      	str	r2, [r3, #0]
{
}
 800d99a:	68fb      	ldr	r3, [r7, #12]
 800d99c:	4618      	mov	r0, r3
 800d99e:	3710      	adds	r7, #16
 800d9a0:	46bd      	mov	sp, r7
 800d9a2:	bd80      	pop	{r7, pc}
 800d9a4:	080287d0 	.word	0x080287d0

0800d9a8 <_ZN8touchgfx9Presenter8activateEv>:
     * Place initialization code for the Presenter here.
     *
     * The activate function is called automatically when a screen transition causes this
     * Presenter to become active. Place initialization code for the Presenter here.
     */
    virtual void activate()
 800d9a8:	b480      	push	{r7}
 800d9aa:	b083      	sub	sp, #12
 800d9ac:	af00      	add	r7, sp, #0
 800d9ae:	6078      	str	r0, [r7, #4]
    {
    }
 800d9b0:	bf00      	nop
 800d9b2:	370c      	adds	r7, #12
 800d9b4:	46bd      	mov	sp, r7
 800d9b6:	f85d 7b04 	ldr.w	r7, [sp], #4
 800d9ba:	4770      	bx	lr

0800d9bc <_ZN8touchgfx9Presenter10deactivateEv>:
     * Place cleanup code for the Presenter here.
     *
     * The deactivate function is called automatically when a screen transition causes this
     * Presenter to become inactive. Place cleanup code for the Presenter here.
     */
    virtual void deactivate()
 800d9bc:	b480      	push	{r7}
 800d9be:	b083      	sub	sp, #12
 800d9c0:	af00      	add	r7, sp, #0
 800d9c2:	6078      	str	r0, [r7, #4]
    {
    }
 800d9c4:	bf00      	nop
 800d9c6:	370c      	adds	r7, #12
 800d9c8:	46bd      	mov	sp, r7
 800d9ca:	f85d 7b04 	ldr.w	r7, [sp], #4
 800d9ce:	4770      	bx	lr

0800d9d0 <_ZN8touchgfx9PresenterD1Ev>:

    /** Finalizes an instance of the Presenter class. */
    virtual ~Presenter()
 800d9d0:	b480      	push	{r7}
 800d9d2:	b083      	sub	sp, #12
 800d9d4:	af00      	add	r7, sp, #0
 800d9d6:	6078      	str	r0, [r7, #4]
    {
 800d9d8:	4a04      	ldr	r2, [pc, #16]	@ (800d9ec <_ZN8touchgfx9PresenterD1Ev+0x1c>)
 800d9da:	687b      	ldr	r3, [r7, #4]
 800d9dc:	601a      	str	r2, [r3, #0]
    }
 800d9de:	687b      	ldr	r3, [r7, #4]
 800d9e0:	4618      	mov	r0, r3
 800d9e2:	370c      	adds	r7, #12
 800d9e4:	46bd      	mov	sp, r7
 800d9e6:	f85d 7b04 	ldr.w	r7, [sp], #4
 800d9ea:	4770      	bx	lr
 800d9ec:	08028890 	.word	0x08028890

0800d9f0 <_ZN8touchgfx9PresenterD0Ev>:
    virtual ~Presenter()
 800d9f0:	b580      	push	{r7, lr}
 800d9f2:	b082      	sub	sp, #8
 800d9f4:	af00      	add	r7, sp, #0
 800d9f6:	6078      	str	r0, [r7, #4]
    }
 800d9f8:	6878      	ldr	r0, [r7, #4]
 800d9fa:	f7ff ffe9 	bl	800d9d0 <_ZN8touchgfx9PresenterD1Ev>
 800d9fe:	2104      	movs	r1, #4
 800da00:	6878      	ldr	r0, [r7, #4]
 800da02:	f018 f846 	bl	8025a92 <_ZdlPvj>
 800da06:	687b      	ldr	r3, [r7, #4]
 800da08:	4618      	mov	r0, r3
 800da0a:	3708      	adds	r7, #8
 800da0c:	46bd      	mov	sp, r7
 800da0e:	bd80      	pop	{r7, pc}

0800da10 <_ZN8touchgfx9PresenterC1Ev>:

protected:
    /** Initializes a new instance of the Presenter class. */
    Presenter()
 800da10:	b480      	push	{r7}
 800da12:	b083      	sub	sp, #12
 800da14:	af00      	add	r7, sp, #0
 800da16:	6078      	str	r0, [r7, #4]
    {
 800da18:	4a04      	ldr	r2, [pc, #16]	@ (800da2c <_ZN8touchgfx9PresenterC1Ev+0x1c>)
 800da1a:	687b      	ldr	r3, [r7, #4]
 800da1c:	601a      	str	r2, [r3, #0]
    }
 800da1e:	687b      	ldr	r3, [r7, #4]
 800da20:	4618      	mov	r0, r3
 800da22:	370c      	adds	r7, #12
 800da24:	46bd      	mov	sp, r7
 800da26:	f85d 7b04 	ldr.w	r7, [sp], #4
 800da2a:	4770      	bx	lr
 800da2c:	08028890 	.word	0x08028890

0800da30 <_ZN13ModelListenerC1Ev>:
    ModelListener() : model(0) {}
 800da30:	b480      	push	{r7}
 800da32:	b083      	sub	sp, #12
 800da34:	af00      	add	r7, sp, #0
 800da36:	6078      	str	r0, [r7, #4]
 800da38:	4a06      	ldr	r2, [pc, #24]	@ (800da54 <_ZN13ModelListenerC1Ev+0x24>)
 800da3a:	687b      	ldr	r3, [r7, #4]
 800da3c:	601a      	str	r2, [r3, #0]
 800da3e:	687b      	ldr	r3, [r7, #4]
 800da40:	2200      	movs	r2, #0
 800da42:	605a      	str	r2, [r3, #4]
 800da44:	687b      	ldr	r3, [r7, #4]
 800da46:	4618      	mov	r0, r3
 800da48:	370c      	adds	r7, #12
 800da4a:	46bd      	mov	sp, r7
 800da4c:	f85d 7b04 	ldr.w	r7, [sp], #4
 800da50:	4770      	bx	lr
 800da52:	bf00      	nop
 800da54:	08028868 	.word	0x08028868

0800da58 <_ZN13ModelListenerD1Ev>:
    virtual ~ModelListener() {}
 800da58:	b480      	push	{r7}
 800da5a:	b083      	sub	sp, #12
 800da5c:	af00      	add	r7, sp, #0
 800da5e:	6078      	str	r0, [r7, #4]
 800da60:	4a04      	ldr	r2, [pc, #16]	@ (800da74 <_ZN13ModelListenerD1Ev+0x1c>)
 800da62:	687b      	ldr	r3, [r7, #4]
 800da64:	601a      	str	r2, [r3, #0]
 800da66:	687b      	ldr	r3, [r7, #4]
 800da68:	4618      	mov	r0, r3
 800da6a:	370c      	adds	r7, #12
 800da6c:	46bd      	mov	sp, r7
 800da6e:	f85d 7b04 	ldr.w	r7, [sp], #4
 800da72:	4770      	bx	lr
 800da74:	08028868 	.word	0x08028868

0800da78 <_ZN13ModelListenerD0Ev>:
 800da78:	b580      	push	{r7, lr}
 800da7a:	b082      	sub	sp, #8
 800da7c:	af00      	add	r7, sp, #0
 800da7e:	6078      	str	r0, [r7, #4]
 800da80:	6878      	ldr	r0, [r7, #4]
 800da82:	f7ff ffe9 	bl	800da58 <_ZN13ModelListenerD1Ev>
 800da86:	2108      	movs	r1, #8
 800da88:	6878      	ldr	r0, [r7, #4]
 800da8a:	f018 f802 	bl	8025a92 <_ZdlPvj>
 800da8e:	687b      	ldr	r3, [r7, #4]
 800da90:	4618      	mov	r0, r3
 800da92:	3708      	adds	r7, #8
 800da94:	46bd      	mov	sp, r7
 800da96:	bd80      	pop	{r7, pc}

0800da98 <_ZN13ModelListener16notifyADCChangedEm>:


    virtual void notifyADCChanged(uint32_t newVal) {}
 800da98:	b480      	push	{r7}
 800da9a:	b083      	sub	sp, #12
 800da9c:	af00      	add	r7, sp, #0
 800da9e:	6078      	str	r0, [r7, #4]
 800daa0:	6039      	str	r1, [r7, #0]
 800daa2:	bf00      	nop
 800daa4:	370c      	adds	r7, #12
 800daa6:	46bd      	mov	sp, r7
 800daa8:	f85d 7b04 	ldr.w	r7, [sp], #4
 800daac:	4770      	bx	lr

0800daae <_ZN13ModelListener24notifyTemperatureChangedEf>:
    virtual void notifyTemperatureChanged(float newTemp) {}
 800daae:	b480      	push	{r7}
 800dab0:	b083      	sub	sp, #12
 800dab2:	af00      	add	r7, sp, #0
 800dab4:	6078      	str	r0, [r7, #4]
 800dab6:	ed87 0a00 	vstr	s0, [r7]
 800daba:	bf00      	nop
 800dabc:	370c      	adds	r7, #12
 800dabe:	46bd      	mov	sp, r7
 800dac0:	f85d 7b04 	ldr.w	r7, [sp], #4
 800dac4:	4770      	bx	lr

0800dac6 <_ZN13ModelListener21notifyHumidityChangedEf>:
    virtual void notifyHumidityChanged(float newHumidity) {}
 800dac6:	b480      	push	{r7}
 800dac8:	b083      	sub	sp, #12
 800daca:	af00      	add	r7, sp, #0
 800dacc:	6078      	str	r0, [r7, #4]
 800dace:	ed87 0a00 	vstr	s0, [r7]
 800dad2:	bf00      	nop
 800dad4:	370c      	adds	r7, #12
 800dad6:	46bd      	mov	sp, r7
 800dad8:	f85d 7b04 	ldr.w	r7, [sp], #4
 800dadc:	4770      	bx	lr

0800dade <_ZN13ModelListener29notifyHumiditySetPointChangedEf>:
    virtual void notifyHumiditySetPointChanged(float setPoint) {}
 800dade:	b480      	push	{r7}
 800dae0:	b083      	sub	sp, #12
 800dae2:	af00      	add	r7, sp, #0
 800dae4:	6078      	str	r0, [r7, #4]
 800dae6:	ed87 0a00 	vstr	s0, [r7]
 800daea:	bf00      	nop
 800daec:	370c      	adds	r7, #12
 800daee:	46bd      	mov	sp, r7
 800daf0:	f85d 7b04 	ldr.w	r7, [sp], #4
 800daf4:	4770      	bx	lr

0800daf6 <_ZN13ModelListener32notifyTemperatureSetPointChangedEf>:
    virtual void notifyTemperatureSetPointChanged(float setPoint) {}
 800daf6:	b480      	push	{r7}
 800daf8:	b083      	sub	sp, #12
 800dafa:	af00      	add	r7, sp, #0
 800dafc:	6078      	str	r0, [r7, #4]
 800dafe:	ed87 0a00 	vstr	s0, [r7]
 800db02:	bf00      	nop
 800db04:	370c      	adds	r7, #12
 800db06:	46bd      	mov	sp, r7
 800db08:	f85d 7b04 	ldr.w	r7, [sp], #4
 800db0c:	4770      	bx	lr

0800db0e <_ZN13ModelListener27notifyLightsSetPointChangedEi>:
    virtual void notifyLightsSetPointChanged(int setPoint) {}
 800db0e:	b480      	push	{r7}
 800db10:	b083      	sub	sp, #12
 800db12:	af00      	add	r7, sp, #0
 800db14:	6078      	str	r0, [r7, #4]
 800db16:	6039      	str	r1, [r7, #0]
 800db18:	bf00      	nop
 800db1a:	370c      	adds	r7, #12
 800db1c:	46bd      	mov	sp, r7
 800db1e:	f85d 7b04 	ldr.w	r7, [sp], #4
 800db22:	4770      	bx	lr

0800db24 <_ZN24humidity_screenPresenterD1Ev>:
     * The deactivate function is called automatically when this screen is "switched out"
     * (ie. made inactive). Teardown functionality can be placed here.
     */
    virtual void deactivate();

    virtual ~humidity_screenPresenter() {}
 800db24:	b580      	push	{r7, lr}
 800db26:	b082      	sub	sp, #8
 800db28:	af00      	add	r7, sp, #0
 800db2a:	6078      	str	r0, [r7, #4]
 800db2c:	4a09      	ldr	r2, [pc, #36]	@ (800db54 <_ZN24humidity_screenPresenterD1Ev+0x30>)
 800db2e:	687b      	ldr	r3, [r7, #4]
 800db30:	601a      	str	r2, [r3, #0]
 800db32:	4a09      	ldr	r2, [pc, #36]	@ (800db58 <_ZN24humidity_screenPresenterD1Ev+0x34>)
 800db34:	687b      	ldr	r3, [r7, #4]
 800db36:	605a      	str	r2, [r3, #4]
 800db38:	687b      	ldr	r3, [r7, #4]
 800db3a:	3304      	adds	r3, #4
 800db3c:	4618      	mov	r0, r3
 800db3e:	f7ff ff8b 	bl	800da58 <_ZN13ModelListenerD1Ev>
 800db42:	687b      	ldr	r3, [r7, #4]
 800db44:	4618      	mov	r0, r3
 800db46:	f7ff ff43 	bl	800d9d0 <_ZN8touchgfx9PresenterD1Ev>
 800db4a:	687b      	ldr	r3, [r7, #4]
 800db4c:	4618      	mov	r0, r3
 800db4e:	3708      	adds	r7, #8
 800db50:	46bd      	mov	sp, r7
 800db52:	bd80      	pop	{r7, pc}
 800db54:	08028824 	.word	0x08028824
 800db58:	08028840 	.word	0x08028840

0800db5c <_ZThn4_N24humidity_screenPresenterD1Ev>:
 800db5c:	f1a0 0004 	sub.w	r0, r0, #4
 800db60:	e7e0      	b.n	800db24 <_ZN24humidity_screenPresenterD1Ev>
 800db62:	bf00      	nop

0800db64 <_ZN24humidity_screenPresenterD0Ev>:
 800db64:	b580      	push	{r7, lr}
 800db66:	b082      	sub	sp, #8
 800db68:	af00      	add	r7, sp, #0
 800db6a:	6078      	str	r0, [r7, #4]
 800db6c:	6878      	ldr	r0, [r7, #4]
 800db6e:	f7ff ffd9 	bl	800db24 <_ZN24humidity_screenPresenterD1Ev>
 800db72:	2110      	movs	r1, #16
 800db74:	6878      	ldr	r0, [r7, #4]
 800db76:	f017 ff8c 	bl	8025a92 <_ZdlPvj>
 800db7a:	687b      	ldr	r3, [r7, #4]
 800db7c:	4618      	mov	r0, r3
 800db7e:	3708      	adds	r7, #8
 800db80:	46bd      	mov	sp, r7
 800db82:	bd80      	pop	{r7, pc}

0800db84 <_ZThn4_N24humidity_screenPresenterD0Ev>:
 800db84:	f1a0 0004 	sub.w	r0, r0, #4
 800db88:	e7ec      	b.n	800db64 <_ZN24humidity_screenPresenterD0Ev>
	...

0800db8c <_ZN24humidity_screenPresenterC1ER19humidity_screenView>:
#include <gui/humidity_screen_screen/humidity_screenView.hpp>
#include <gui/humidity_screen_screen/humidity_screenPresenter.hpp>

humidity_screenPresenter::humidity_screenPresenter(humidity_screenView& v)
 800db8c:	b580      	push	{r7, lr}
 800db8e:	b082      	sub	sp, #8
 800db90:	af00      	add	r7, sp, #0
 800db92:	6078      	str	r0, [r7, #4]
 800db94:	6039      	str	r1, [r7, #0]
    : view(v)
 800db96:	687b      	ldr	r3, [r7, #4]
 800db98:	4618      	mov	r0, r3
 800db9a:	f7ff ff39 	bl	800da10 <_ZN8touchgfx9PresenterC1Ev>
 800db9e:	687b      	ldr	r3, [r7, #4]
 800dba0:	3304      	adds	r3, #4
 800dba2:	4618      	mov	r0, r3
 800dba4:	f7ff ff44 	bl	800da30 <_ZN13ModelListenerC1Ev>
 800dba8:	4a06      	ldr	r2, [pc, #24]	@ (800dbc4 <_ZN24humidity_screenPresenterC1ER19humidity_screenView+0x38>)
 800dbaa:	687b      	ldr	r3, [r7, #4]
 800dbac:	601a      	str	r2, [r3, #0]
 800dbae:	4a06      	ldr	r2, [pc, #24]	@ (800dbc8 <_ZN24humidity_screenPresenterC1ER19humidity_screenView+0x3c>)
 800dbb0:	687b      	ldr	r3, [r7, #4]
 800dbb2:	605a      	str	r2, [r3, #4]
 800dbb4:	687b      	ldr	r3, [r7, #4]
 800dbb6:	683a      	ldr	r2, [r7, #0]
 800dbb8:	60da      	str	r2, [r3, #12]
{

}
 800dbba:	687b      	ldr	r3, [r7, #4]
 800dbbc:	4618      	mov	r0, r3
 800dbbe:	3708      	adds	r7, #8
 800dbc0:	46bd      	mov	sp, r7
 800dbc2:	bd80      	pop	{r7, pc}
 800dbc4:	08028824 	.word	0x08028824
 800dbc8:	08028840 	.word	0x08028840

0800dbcc <_ZN24humidity_screenPresenter8activateEv>:

void humidity_screenPresenter::activate()
{
 800dbcc:	b480      	push	{r7}
 800dbce:	b083      	sub	sp, #12
 800dbd0:	af00      	add	r7, sp, #0
 800dbd2:	6078      	str	r0, [r7, #4]

}
 800dbd4:	bf00      	nop
 800dbd6:	370c      	adds	r7, #12
 800dbd8:	46bd      	mov	sp, r7
 800dbda:	f85d 7b04 	ldr.w	r7, [sp], #4
 800dbde:	4770      	bx	lr

0800dbe0 <_ZN24humidity_screenPresenter10deactivateEv>:

void humidity_screenPresenter::deactivate()
{
 800dbe0:	b480      	push	{r7}
 800dbe2:	b083      	sub	sp, #12
 800dbe4:	af00      	add	r7, sp, #0
 800dbe6:	6078      	str	r0, [r7, #4]

}
 800dbe8:	bf00      	nop
 800dbea:	370c      	adds	r7, #12
 800dbec:	46bd      	mov	sp, r7
 800dbee:	f85d 7b04 	ldr.w	r7, [sp], #4
 800dbf2:	4770      	bx	lr

0800dbf4 <_ZN24humidity_screenPresenter29notifyHumiditySetPointChangedEf>:

void humidity_screenPresenter::notifyHumiditySetPointChanged(float setPoint){
 800dbf4:	b580      	push	{r7, lr}
 800dbf6:	b082      	sub	sp, #8
 800dbf8:	af00      	add	r7, sp, #0
 800dbfa:	6078      	str	r0, [r7, #4]
 800dbfc:	ed87 0a00 	vstr	s0, [r7]
	view.setHumidity(setPoint);
 800dc00:	687b      	ldr	r3, [r7, #4]
 800dc02:	68da      	ldr	r2, [r3, #12]
 800dc04:	687b      	ldr	r3, [r7, #4]
 800dc06:	68db      	ldr	r3, [r3, #12]
 800dc08:	681b      	ldr	r3, [r3, #0]
 800dc0a:	3334      	adds	r3, #52	@ 0x34
 800dc0c:	681b      	ldr	r3, [r3, #0]
 800dc0e:	ed97 0a00 	vldr	s0, [r7]
 800dc12:	4610      	mov	r0, r2
 800dc14:	4798      	blx	r3
}
 800dc16:	bf00      	nop
 800dc18:	3708      	adds	r7, #8
 800dc1a:	46bd      	mov	sp, r7
 800dc1c:	bd80      	pop	{r7, pc}

0800dc1e <_ZThn4_N24humidity_screenPresenter29notifyHumiditySetPointChangedEf>:

    virtual void notifyHumiditySetPointChanged(float setPoint);
 800dc1e:	f1a0 0004 	sub.w	r0, r0, #4
 800dc22:	f7ff bfe7 	b.w	800dbf4 <_ZN24humidity_screenPresenter29notifyHumiditySetPointChangedEf>

0800dc26 <_ZN8touchgfx7Unicode13snprintfFloatEPttPKcf>:
     * @return pointer to the first element in the buffer where the formatted string is
     *         placed.
     *
     * @see snprintf, snprintfFloats
     */
    static UnicodeChar* snprintfFloat(UnicodeChar* dst, uint16_t dstSize, const char* format, const float value)
 800dc26:	b580      	push	{r7, lr}
 800dc28:	b084      	sub	sp, #16
 800dc2a:	af00      	add	r7, sp, #0
 800dc2c:	60f8      	str	r0, [r7, #12]
 800dc2e:	460b      	mov	r3, r1
 800dc30:	607a      	str	r2, [r7, #4]
 800dc32:	ed87 0a00 	vstr	s0, [r7]
 800dc36:	817b      	strh	r3, [r7, #10]
    {
        return snprintfFloats(dst, dstSize, format, &value);
 800dc38:	463b      	mov	r3, r7
 800dc3a:	8979      	ldrh	r1, [r7, #10]
 800dc3c:	687a      	ldr	r2, [r7, #4]
 800dc3e:	68f8      	ldr	r0, [r7, #12]
 800dc40:	f009 fb9e 	bl	8017380 <_ZN8touchgfx7Unicode14snprintfFloatsEPttPKcPKf>
 800dc44:	4603      	mov	r3, r0
    }
 800dc46:	4618      	mov	r0, r3
 800dc48:	3710      	adds	r7, #16
 800dc4a:	46bd      	mov	sp, r7
 800dc4c:	bd80      	pop	{r7, pc}
	...

0800dc50 <_ZN19humidity_screenViewD1Ev>:

class humidity_screenView : public humidity_screenViewBase
{
public:
    humidity_screenView();
    virtual ~humidity_screenView() {}
 800dc50:	b580      	push	{r7, lr}
 800dc52:	b082      	sub	sp, #8
 800dc54:	af00      	add	r7, sp, #0
 800dc56:	6078      	str	r0, [r7, #4]
 800dc58:	4a05      	ldr	r2, [pc, #20]	@ (800dc70 <_ZN19humidity_screenViewD1Ev+0x20>)
 800dc5a:	687b      	ldr	r3, [r7, #4]
 800dc5c:	601a      	str	r2, [r3, #0]
 800dc5e:	687b      	ldr	r3, [r7, #4]
 800dc60:	4618      	mov	r0, r3
 800dc62:	f7fc ffd7 	bl	800ac14 <_ZN23humidity_screenViewBaseD1Ev>
 800dc66:	687b      	ldr	r3, [r7, #4]
 800dc68:	4618      	mov	r0, r3
 800dc6a:	3708      	adds	r7, #8
 800dc6c:	46bd      	mov	sp, r7
 800dc6e:	bd80      	pop	{r7, pc}
 800dc70:	080288a8 	.word	0x080288a8

0800dc74 <_ZN19humidity_screenViewD0Ev>:
 800dc74:	b580      	push	{r7, lr}
 800dc76:	b082      	sub	sp, #8
 800dc78:	af00      	add	r7, sp, #0
 800dc7a:	6078      	str	r0, [r7, #4]
 800dc7c:	6878      	ldr	r0, [r7, #4]
 800dc7e:	f7ff ffe7 	bl	800dc50 <_ZN19humidity_screenViewD1Ev>
 800dc82:	f44f 7109 	mov.w	r1, #548	@ 0x224
 800dc86:	6878      	ldr	r0, [r7, #4]
 800dc88:	f017 ff03 	bl	8025a92 <_ZdlPvj>
 800dc8c:	687b      	ldr	r3, [r7, #4]
 800dc8e:	4618      	mov	r0, r3
 800dc90:	3708      	adds	r7, #8
 800dc92:	46bd      	mov	sp, r7
 800dc94:	bd80      	pop	{r7, pc}
	...

0800dc98 <_ZN19humidity_screenViewC1Ev>:
#include <gui/humidity_screen_screen/humidity_screenView.hpp>

humidity_screenView::humidity_screenView()
 800dc98:	b580      	push	{r7, lr}
 800dc9a:	b082      	sub	sp, #8
 800dc9c:	af00      	add	r7, sp, #0
 800dc9e:	6078      	str	r0, [r7, #4]
 800dca0:	687b      	ldr	r3, [r7, #4]
 800dca2:	4618      	mov	r0, r3
 800dca4:	f7fc fd08 	bl	800a6b8 <_ZN23humidity_screenViewBaseC1Ev>
 800dca8:	4a03      	ldr	r2, [pc, #12]	@ (800dcb8 <_ZN19humidity_screenViewC1Ev+0x20>)
 800dcaa:	687b      	ldr	r3, [r7, #4]
 800dcac:	601a      	str	r2, [r3, #0]
{

}
 800dcae:	687b      	ldr	r3, [r7, #4]
 800dcb0:	4618      	mov	r0, r3
 800dcb2:	3708      	adds	r7, #8
 800dcb4:	46bd      	mov	sp, r7
 800dcb6:	bd80      	pop	{r7, pc}
 800dcb8:	080288a8 	.word	0x080288a8

0800dcbc <_ZN19humidity_screenView11setupScreenEv>:

void humidity_screenView::setupScreen()
{
 800dcbc:	b580      	push	{r7, lr}
 800dcbe:	b082      	sub	sp, #8
 800dcc0:	af00      	add	r7, sp, #0
 800dcc2:	6078      	str	r0, [r7, #4]
    humidity_screenViewBase::setupScreen();
 800dcc4:	687b      	ldr	r3, [r7, #4]
 800dcc6:	4618      	mov	r0, r3
 800dcc8:	f7fc fff5 	bl	800acb6 <_ZN23humidity_screenViewBase11setupScreenEv>
}
 800dccc:	bf00      	nop
 800dcce:	3708      	adds	r7, #8
 800dcd0:	46bd      	mov	sp, r7
 800dcd2:	bd80      	pop	{r7, pc}

0800dcd4 <_ZN19humidity_screenView14tearDownScreenEv>:

void humidity_screenView::tearDownScreen()
{
 800dcd4:	b580      	push	{r7, lr}
 800dcd6:	b082      	sub	sp, #8
 800dcd8:	af00      	add	r7, sp, #0
 800dcda:	6078      	str	r0, [r7, #4]
    humidity_screenViewBase::tearDownScreen();
 800dcdc:	687b      	ldr	r3, [r7, #4]
 800dcde:	4618      	mov	r0, r3
 800dce0:	f7fc f810 	bl	8009d04 <_ZN8touchgfx6Screen14tearDownScreenEv>
}
 800dce4:	bf00      	nop
 800dce6:	3708      	adds	r7, #8
 800dce8:	46bd      	mov	sp, r7
 800dcea:	bd80      	pop	{r7, pc}

0800dcec <_ZN19humidity_screenView11setHumidityEf>:

void humidity_screenView::setHumidity(float newVal){
 800dcec:	b580      	push	{r7, lr}
 800dcee:	b082      	sub	sp, #8
 800dcf0:	af00      	add	r7, sp, #0
 800dcf2:	6078      	str	r0, [r7, #4]
 800dcf4:	ed87 0a00 	vstr	s0, [r7]
	Unicode::snprintfFloat(humValBuffer, HUMVAL_SIZE, "%.1f", newVal);
 800dcf8:	687b      	ldr	r3, [r7, #4]
 800dcfa:	f503 73f8 	add.w	r3, r3, #496	@ 0x1f0
 800dcfe:	ed97 0a00 	vldr	s0, [r7]
 800dd02:	4a07      	ldr	r2, [pc, #28]	@ (800dd20 <_ZN19humidity_screenView11setHumidityEf+0x34>)
 800dd04:	210a      	movs	r1, #10
 800dd06:	4618      	mov	r0, r3
 800dd08:	f7ff ff8d 	bl	800dc26 <_ZN8touchgfx7Unicode13snprintfFloatEPttPKcf>
	humVal.invalidate();
 800dd0c:	687b      	ldr	r3, [r7, #4]
 800dd0e:	f503 7396 	add.w	r3, r3, #300	@ 0x12c
 800dd12:	4618      	mov	r0, r3
 800dd14:	f007 f9da 	bl	80150cc <_ZNK8touchgfx8Drawable10invalidateEv>
}
 800dd18:	bf00      	nop
 800dd1a:	3708      	adds	r7, #8
 800dd1c:	46bd      	mov	sp, r7
 800dd1e:	bd80      	pop	{r7, pc}
 800dd20:	08027588 	.word	0x08027588

0800dd24 <_ZN19humidity_screenView8increaseEv>:

void humidity_screenView::increase()
{
 800dd24:	b480      	push	{r7}
 800dd26:	b083      	sub	sp, #12
 800dd28:	af00      	add	r7, sp, #0
 800dd2a:	6078      	str	r0, [r7, #4]
	humidity_set_point = humidity_set_point + 5;
 800dd2c:	4b07      	ldr	r3, [pc, #28]	@ (800dd4c <_ZN19humidity_screenView8increaseEv+0x28>)
 800dd2e:	edd3 7a00 	vldr	s15, [r3]
 800dd32:	eeb1 7a04 	vmov.f32	s14, #20	@ 0x40a00000  5.0
 800dd36:	ee77 7a87 	vadd.f32	s15, s15, s14
 800dd3a:	4b04      	ldr	r3, [pc, #16]	@ (800dd4c <_ZN19humidity_screenView8increaseEv+0x28>)
 800dd3c:	edc3 7a00 	vstr	s15, [r3]
}
 800dd40:	bf00      	nop
 800dd42:	370c      	adds	r7, #12
 800dd44:	46bd      	mov	sp, r7
 800dd46:	f85d 7b04 	ldr.w	r7, [sp], #4
 800dd4a:	4770      	bx	lr
 800dd4c:	20000008 	.word	0x20000008

0800dd50 <_ZN19humidity_screenView8decreaseEv>:

void humidity_screenView::decrease()
{
 800dd50:	b480      	push	{r7}
 800dd52:	b083      	sub	sp, #12
 800dd54:	af00      	add	r7, sp, #0
 800dd56:	6078      	str	r0, [r7, #4]
	humidity_set_point = humidity_set_point - 5;
 800dd58:	4b07      	ldr	r3, [pc, #28]	@ (800dd78 <_ZN19humidity_screenView8decreaseEv+0x28>)
 800dd5a:	edd3 7a00 	vldr	s15, [r3]
 800dd5e:	eeb1 7a04 	vmov.f32	s14, #20	@ 0x40a00000  5.0
 800dd62:	ee77 7ac7 	vsub.f32	s15, s15, s14
 800dd66:	4b04      	ldr	r3, [pc, #16]	@ (800dd78 <_ZN19humidity_screenView8decreaseEv+0x28>)
 800dd68:	edc3 7a00 	vstr	s15, [r3]
}
 800dd6c:	bf00      	nop
 800dd6e:	370c      	adds	r7, #12
 800dd70:	46bd      	mov	sp, r7
 800dd72:	f85d 7b04 	ldr.w	r7, [sp], #4
 800dd76:	4770      	bx	lr
 800dd78:	20000008 	.word	0x20000008

0800dd7c <_ZN21light_screenPresenterD1Ev>:
     * The deactivate function is called automatically when this screen is "switched out"
     * (ie. made inactive). Teardown functionality can be placed here.
     */
    virtual void deactivate();

    virtual ~light_screenPresenter() {}
 800dd7c:	b580      	push	{r7, lr}
 800dd7e:	b082      	sub	sp, #8
 800dd80:	af00      	add	r7, sp, #0
 800dd82:	6078      	str	r0, [r7, #4]
 800dd84:	4a09      	ldr	r2, [pc, #36]	@ (800ddac <_ZN21light_screenPresenterD1Ev+0x30>)
 800dd86:	687b      	ldr	r3, [r7, #4]
 800dd88:	601a      	str	r2, [r3, #0]
 800dd8a:	4a09      	ldr	r2, [pc, #36]	@ (800ddb0 <_ZN21light_screenPresenterD1Ev+0x34>)
 800dd8c:	687b      	ldr	r3, [r7, #4]
 800dd8e:	605a      	str	r2, [r3, #4]
 800dd90:	687b      	ldr	r3, [r7, #4]
 800dd92:	3304      	adds	r3, #4
 800dd94:	4618      	mov	r0, r3
 800dd96:	f7ff fe5f 	bl	800da58 <_ZN13ModelListenerD1Ev>
 800dd9a:	687b      	ldr	r3, [r7, #4]
 800dd9c:	4618      	mov	r0, r3
 800dd9e:	f7ff fe17 	bl	800d9d0 <_ZN8touchgfx9PresenterD1Ev>
 800dda2:	687b      	ldr	r3, [r7, #4]
 800dda4:	4618      	mov	r0, r3
 800dda6:	3708      	adds	r7, #8
 800dda8:	46bd      	mov	sp, r7
 800ddaa:	bd80      	pop	{r7, pc}
 800ddac:	080288e8 	.word	0x080288e8
 800ddb0:	08028904 	.word	0x08028904

0800ddb4 <_ZThn4_N21light_screenPresenterD1Ev>:
 800ddb4:	f1a0 0004 	sub.w	r0, r0, #4
 800ddb8:	e7e0      	b.n	800dd7c <_ZN21light_screenPresenterD1Ev>
 800ddba:	bf00      	nop

0800ddbc <_ZN21light_screenPresenterD0Ev>:
 800ddbc:	b580      	push	{r7, lr}
 800ddbe:	b082      	sub	sp, #8
 800ddc0:	af00      	add	r7, sp, #0
 800ddc2:	6078      	str	r0, [r7, #4]
 800ddc4:	6878      	ldr	r0, [r7, #4]
 800ddc6:	f7ff ffd9 	bl	800dd7c <_ZN21light_screenPresenterD1Ev>
 800ddca:	2110      	movs	r1, #16
 800ddcc:	6878      	ldr	r0, [r7, #4]
 800ddce:	f017 fe60 	bl	8025a92 <_ZdlPvj>
 800ddd2:	687b      	ldr	r3, [r7, #4]
 800ddd4:	4618      	mov	r0, r3
 800ddd6:	3708      	adds	r7, #8
 800ddd8:	46bd      	mov	sp, r7
 800ddda:	bd80      	pop	{r7, pc}

0800dddc <_ZThn4_N21light_screenPresenterD0Ev>:
 800dddc:	f1a0 0004 	sub.w	r0, r0, #4
 800dde0:	e7ec      	b.n	800ddbc <_ZN21light_screenPresenterD0Ev>
	...

0800dde4 <_ZN21light_screenPresenterC1ER16light_screenView>:
#include <gui/light_screen_screen/light_screenView.hpp>
#include <gui/light_screen_screen/light_screenPresenter.hpp>

light_screenPresenter::light_screenPresenter(light_screenView& v)
 800dde4:	b580      	push	{r7, lr}
 800dde6:	b082      	sub	sp, #8
 800dde8:	af00      	add	r7, sp, #0
 800ddea:	6078      	str	r0, [r7, #4]
 800ddec:	6039      	str	r1, [r7, #0]
    : view(v)
 800ddee:	687b      	ldr	r3, [r7, #4]
 800ddf0:	4618      	mov	r0, r3
 800ddf2:	f7ff fe0d 	bl	800da10 <_ZN8touchgfx9PresenterC1Ev>
 800ddf6:	687b      	ldr	r3, [r7, #4]
 800ddf8:	3304      	adds	r3, #4
 800ddfa:	4618      	mov	r0, r3
 800ddfc:	f7ff fe18 	bl	800da30 <_ZN13ModelListenerC1Ev>
 800de00:	4a06      	ldr	r2, [pc, #24]	@ (800de1c <_ZN21light_screenPresenterC1ER16light_screenView+0x38>)
 800de02:	687b      	ldr	r3, [r7, #4]
 800de04:	601a      	str	r2, [r3, #0]
 800de06:	4a06      	ldr	r2, [pc, #24]	@ (800de20 <_ZN21light_screenPresenterC1ER16light_screenView+0x3c>)
 800de08:	687b      	ldr	r3, [r7, #4]
 800de0a:	605a      	str	r2, [r3, #4]
 800de0c:	687b      	ldr	r3, [r7, #4]
 800de0e:	683a      	ldr	r2, [r7, #0]
 800de10:	60da      	str	r2, [r3, #12]
{

}
 800de12:	687b      	ldr	r3, [r7, #4]
 800de14:	4618      	mov	r0, r3
 800de16:	3708      	adds	r7, #8
 800de18:	46bd      	mov	sp, r7
 800de1a:	bd80      	pop	{r7, pc}
 800de1c:	080288e8 	.word	0x080288e8
 800de20:	08028904 	.word	0x08028904

0800de24 <_ZN21light_screenPresenter8activateEv>:

void light_screenPresenter::activate()
{
 800de24:	b480      	push	{r7}
 800de26:	b083      	sub	sp, #12
 800de28:	af00      	add	r7, sp, #0
 800de2a:	6078      	str	r0, [r7, #4]

}
 800de2c:	bf00      	nop
 800de2e:	370c      	adds	r7, #12
 800de30:	46bd      	mov	sp, r7
 800de32:	f85d 7b04 	ldr.w	r7, [sp], #4
 800de36:	4770      	bx	lr

0800de38 <_ZN21light_screenPresenter10deactivateEv>:

void light_screenPresenter::deactivate()
{
 800de38:	b480      	push	{r7}
 800de3a:	b083      	sub	sp, #12
 800de3c:	af00      	add	r7, sp, #0
 800de3e:	6078      	str	r0, [r7, #4]

}
 800de40:	bf00      	nop
 800de42:	370c      	adds	r7, #12
 800de44:	46bd      	mov	sp, r7
 800de46:	f85d 7b04 	ldr.w	r7, [sp], #4
 800de4a:	4770      	bx	lr

0800de4c <_ZN21light_screenPresenter27notifyLightsSetPointChangedEi>:

void light_screenPresenter::notifyLightsSetPointChanged(int setPoint)
{
 800de4c:	b580      	push	{r7, lr}
 800de4e:	b082      	sub	sp, #8
 800de50:	af00      	add	r7, sp, #0
 800de52:	6078      	str	r0, [r7, #4]
 800de54:	6039      	str	r1, [r7, #0]
	view.setLights(setPoint);
 800de56:	687b      	ldr	r3, [r7, #4]
 800de58:	68da      	ldr	r2, [r3, #12]
 800de5a:	687b      	ldr	r3, [r7, #4]
 800de5c:	68db      	ldr	r3, [r3, #12]
 800de5e:	681b      	ldr	r3, [r3, #0]
 800de60:	3334      	adds	r3, #52	@ 0x34
 800de62:	681b      	ldr	r3, [r3, #0]
 800de64:	6839      	ldr	r1, [r7, #0]
 800de66:	4610      	mov	r0, r2
 800de68:	4798      	blx	r3
}
 800de6a:	bf00      	nop
 800de6c:	3708      	adds	r7, #8
 800de6e:	46bd      	mov	sp, r7
 800de70:	bd80      	pop	{r7, pc}

0800de72 <_ZThn4_N21light_screenPresenter27notifyLightsSetPointChangedEi>:

    virtual void notifyLightsSetPointChanged(int setPoint);
 800de72:	f1a0 0004 	sub.w	r0, r0, #4
 800de76:	f7ff bfe9 	b.w	800de4c <_ZN21light_screenPresenter27notifyLightsSetPointChangedEi>
	...

0800de7c <_ZN16light_screenViewD1Ev>:

class light_screenView : public light_screenViewBase
{
public:
    light_screenView();
    virtual ~light_screenView() {}
 800de7c:	b580      	push	{r7, lr}
 800de7e:	b082      	sub	sp, #8
 800de80:	af00      	add	r7, sp, #0
 800de82:	6078      	str	r0, [r7, #4]
 800de84:	4a05      	ldr	r2, [pc, #20]	@ (800de9c <_ZN16light_screenViewD1Ev+0x20>)
 800de86:	687b      	ldr	r3, [r7, #4]
 800de88:	601a      	str	r2, [r3, #0]
 800de8a:	687b      	ldr	r3, [r7, #4]
 800de8c:	4618      	mov	r0, r3
 800de8e:	f7fd fd85 	bl	800b99c <_ZN20light_screenViewBaseD1Ev>
 800de92:	687b      	ldr	r3, [r7, #4]
 800de94:	4618      	mov	r0, r3
 800de96:	3708      	adds	r7, #8
 800de98:	46bd      	mov	sp, r7
 800de9a:	bd80      	pop	{r7, pc}
 800de9c:	0802892c 	.word	0x0802892c

0800dea0 <_ZN16light_screenViewD0Ev>:
 800dea0:	b580      	push	{r7, lr}
 800dea2:	b082      	sub	sp, #8
 800dea4:	af00      	add	r7, sp, #0
 800dea6:	6078      	str	r0, [r7, #4]
 800dea8:	6878      	ldr	r0, [r7, #4]
 800deaa:	f7ff ffe7 	bl	800de7c <_ZN16light_screenViewD1Ev>
 800deae:	f44f 7109 	mov.w	r1, #548	@ 0x224
 800deb2:	6878      	ldr	r0, [r7, #4]
 800deb4:	f017 fded 	bl	8025a92 <_ZdlPvj>
 800deb8:	687b      	ldr	r3, [r7, #4]
 800deba:	4618      	mov	r0, r3
 800debc:	3708      	adds	r7, #8
 800debe:	46bd      	mov	sp, r7
 800dec0:	bd80      	pop	{r7, pc}
	...

0800dec4 <_ZN16light_screenViewC1Ev>:
#include <gui/light_screen_screen/light_screenView.hpp>

light_screenView::light_screenView()
 800dec4:	b580      	push	{r7, lr}
 800dec6:	b082      	sub	sp, #8
 800dec8:	af00      	add	r7, sp, #0
 800deca:	6078      	str	r0, [r7, #4]
 800decc:	687b      	ldr	r3, [r7, #4]
 800dece:	4618      	mov	r0, r3
 800ded0:	f7fd fab6 	bl	800b440 <_ZN20light_screenViewBaseC1Ev>
 800ded4:	4a03      	ldr	r2, [pc, #12]	@ (800dee4 <_ZN16light_screenViewC1Ev+0x20>)
 800ded6:	687b      	ldr	r3, [r7, #4]
 800ded8:	601a      	str	r2, [r3, #0]
{

}
 800deda:	687b      	ldr	r3, [r7, #4]
 800dedc:	4618      	mov	r0, r3
 800dede:	3708      	adds	r7, #8
 800dee0:	46bd      	mov	sp, r7
 800dee2:	bd80      	pop	{r7, pc}
 800dee4:	0802892c 	.word	0x0802892c

0800dee8 <_ZN16light_screenView11setupScreenEv>:

void light_screenView::setupScreen()
{
 800dee8:	b580      	push	{r7, lr}
 800deea:	b082      	sub	sp, #8
 800deec:	af00      	add	r7, sp, #0
 800deee:	6078      	str	r0, [r7, #4]
    light_screenViewBase::setupScreen();
 800def0:	687b      	ldr	r3, [r7, #4]
 800def2:	4618      	mov	r0, r3
 800def4:	f7fd fda3 	bl	800ba3e <_ZN20light_screenViewBase11setupScreenEv>
}
 800def8:	bf00      	nop
 800defa:	3708      	adds	r7, #8
 800defc:	46bd      	mov	sp, r7
 800defe:	bd80      	pop	{r7, pc}

0800df00 <_ZN16light_screenView14tearDownScreenEv>:

void light_screenView::tearDownScreen()
{
 800df00:	b580      	push	{r7, lr}
 800df02:	b082      	sub	sp, #8
 800df04:	af00      	add	r7, sp, #0
 800df06:	6078      	str	r0, [r7, #4]
    light_screenViewBase::tearDownScreen();
 800df08:	687b      	ldr	r3, [r7, #4]
 800df0a:	4618      	mov	r0, r3
 800df0c:	f7fb fefa 	bl	8009d04 <_ZN8touchgfx6Screen14tearDownScreenEv>
}
 800df10:	bf00      	nop
 800df12:	3708      	adds	r7, #8
 800df14:	46bd      	mov	sp, r7
 800df16:	bd80      	pop	{r7, pc}

0800df18 <_ZN16light_screenView9setLightsEi>:

void light_screenView::setLights(int newVal){
 800df18:	b580      	push	{r7, lr}
 800df1a:	b082      	sub	sp, #8
 800df1c:	af00      	add	r7, sp, #0
 800df1e:	6078      	str	r0, [r7, #4]
 800df20:	6039      	str	r1, [r7, #0]
	Unicode::snprintfFloat(lightsValBuffer, LIGHTSVAL_SIZE, "%.0f", newVal);
 800df22:	687b      	ldr	r3, [r7, #4]
 800df24:	f503 73f8 	add.w	r3, r3, #496	@ 0x1f0
 800df28:	683a      	ldr	r2, [r7, #0]
 800df2a:	ee07 2a90 	vmov	s15, r2
 800df2e:	eef8 7ae7 	vcvt.f32.s32	s15, s15
 800df32:	eeb0 0a67 	vmov.f32	s0, s15
 800df36:	4a07      	ldr	r2, [pc, #28]	@ (800df54 <_ZN16light_screenView9setLightsEi+0x3c>)
 800df38:	210a      	movs	r1, #10
 800df3a:	4618      	mov	r0, r3
 800df3c:	f7ff fe73 	bl	800dc26 <_ZN8touchgfx7Unicode13snprintfFloatEPttPKcf>
	lightsVal.invalidate();
 800df40:	687b      	ldr	r3, [r7, #4]
 800df42:	f503 7396 	add.w	r3, r3, #300	@ 0x12c
 800df46:	4618      	mov	r0, r3
 800df48:	f007 f8c0 	bl	80150cc <_ZNK8touchgfx8Drawable10invalidateEv>
}
 800df4c:	bf00      	nop
 800df4e:	3708      	adds	r7, #8
 800df50:	46bd      	mov	sp, r7
 800df52:	bd80      	pop	{r7, pc}
 800df54:	08027590 	.word	0x08027590

0800df58 <_ZN16light_screenView8increaseEv>:

void light_screenView::increase()
{
 800df58:	b480      	push	{r7}
 800df5a:	b083      	sub	sp, #12
 800df5c:	af00      	add	r7, sp, #0
 800df5e:	6078      	str	r0, [r7, #4]
	lights_set_point++;
 800df60:	4b05      	ldr	r3, [pc, #20]	@ (800df78 <_ZN16light_screenView8increaseEv+0x20>)
 800df62:	681b      	ldr	r3, [r3, #0]
 800df64:	3301      	adds	r3, #1
 800df66:	4a04      	ldr	r2, [pc, #16]	@ (800df78 <_ZN16light_screenView8increaseEv+0x20>)
 800df68:	6013      	str	r3, [r2, #0]
}
 800df6a:	bf00      	nop
 800df6c:	370c      	adds	r7, #12
 800df6e:	46bd      	mov	sp, r7
 800df70:	f85d 7b04 	ldr.w	r7, [sp], #4
 800df74:	4770      	bx	lr
 800df76:	bf00      	nop
 800df78:	2000000c 	.word	0x2000000c

0800df7c <_ZN16light_screenView8decreaseEv>:

void light_screenView::decrease()
{
 800df7c:	b480      	push	{r7}
 800df7e:	b083      	sub	sp, #12
 800df80:	af00      	add	r7, sp, #0
 800df82:	6078      	str	r0, [r7, #4]
	lights_set_point--;
 800df84:	4b05      	ldr	r3, [pc, #20]	@ (800df9c <_ZN16light_screenView8decreaseEv+0x20>)
 800df86:	681b      	ldr	r3, [r3, #0]
 800df88:	3b01      	subs	r3, #1
 800df8a:	4a04      	ldr	r2, [pc, #16]	@ (800df9c <_ZN16light_screenView8decreaseEv+0x20>)
 800df8c:	6013      	str	r3, [r2, #0]
}
 800df8e:	bf00      	nop
 800df90:	370c      	adds	r7, #12
 800df92:	46bd      	mov	sp, r7
 800df94:	f85d 7b04 	ldr.w	r7, [sp], #4
 800df98:	4770      	bx	lr
 800df9a:	bf00      	nop
 800df9c:	2000000c 	.word	0x2000000c

0800dfa0 <_ZN13MainPresenterD1Ev>:
     * The deactivate function is called automatically when this screen is "switched out"
     * (ie. made inactive). Teardown functionality can be placed here.
     */
    virtual void deactivate();

    virtual ~MainPresenter() {};
 800dfa0:	b580      	push	{r7, lr}
 800dfa2:	b082      	sub	sp, #8
 800dfa4:	af00      	add	r7, sp, #0
 800dfa6:	6078      	str	r0, [r7, #4]
 800dfa8:	4a09      	ldr	r2, [pc, #36]	@ (800dfd0 <_ZN13MainPresenterD1Ev+0x30>)
 800dfaa:	687b      	ldr	r3, [r7, #4]
 800dfac:	601a      	str	r2, [r3, #0]
 800dfae:	4a09      	ldr	r2, [pc, #36]	@ (800dfd4 <_ZN13MainPresenterD1Ev+0x34>)
 800dfb0:	687b      	ldr	r3, [r7, #4]
 800dfb2:	605a      	str	r2, [r3, #4]
 800dfb4:	687b      	ldr	r3, [r7, #4]
 800dfb6:	3304      	adds	r3, #4
 800dfb8:	4618      	mov	r0, r3
 800dfba:	f7ff fd4d 	bl	800da58 <_ZN13ModelListenerD1Ev>
 800dfbe:	687b      	ldr	r3, [r7, #4]
 800dfc0:	4618      	mov	r0, r3
 800dfc2:	f7ff fd05 	bl	800d9d0 <_ZN8touchgfx9PresenterD1Ev>
 800dfc6:	687b      	ldr	r3, [r7, #4]
 800dfc8:	4618      	mov	r0, r3
 800dfca:	3708      	adds	r7, #8
 800dfcc:	46bd      	mov	sp, r7
 800dfce:	bd80      	pop	{r7, pc}
 800dfd0:	0802896c 	.word	0x0802896c
 800dfd4:	08028990 	.word	0x08028990

0800dfd8 <_ZThn4_N13MainPresenterD1Ev>:
 800dfd8:	f1a0 0004 	sub.w	r0, r0, #4
 800dfdc:	e7e0      	b.n	800dfa0 <_ZN13MainPresenterD1Ev>
 800dfde:	bf00      	nop

0800dfe0 <_ZN13MainPresenterD0Ev>:
 800dfe0:	b580      	push	{r7, lr}
 800dfe2:	b082      	sub	sp, #8
 800dfe4:	af00      	add	r7, sp, #0
 800dfe6:	6078      	str	r0, [r7, #4]
 800dfe8:	6878      	ldr	r0, [r7, #4]
 800dfea:	f7ff ffd9 	bl	800dfa0 <_ZN13MainPresenterD1Ev>
 800dfee:	2110      	movs	r1, #16
 800dff0:	6878      	ldr	r0, [r7, #4]
 800dff2:	f017 fd4e 	bl	8025a92 <_ZdlPvj>
 800dff6:	687b      	ldr	r3, [r7, #4]
 800dff8:	4618      	mov	r0, r3
 800dffa:	3708      	adds	r7, #8
 800dffc:	46bd      	mov	sp, r7
 800dffe:	bd80      	pop	{r7, pc}

0800e000 <_ZThn4_N13MainPresenterD0Ev>:
 800e000:	f1a0 0004 	sub.w	r0, r0, #4
 800e004:	e7ec      	b.n	800dfe0 <_ZN13MainPresenterD0Ev>
	...

0800e008 <_ZN13MainPresenterC1ER8MainView>:
#include <gui/main_screen/MainView.hpp>
#include <gui/main_screen/MainPresenter.hpp>

MainPresenter::MainPresenter(MainView& v)
 800e008:	b580      	push	{r7, lr}
 800e00a:	b082      	sub	sp, #8
 800e00c:	af00      	add	r7, sp, #0
 800e00e:	6078      	str	r0, [r7, #4]
 800e010:	6039      	str	r1, [r7, #0]
    : view(v)
 800e012:	687b      	ldr	r3, [r7, #4]
 800e014:	4618      	mov	r0, r3
 800e016:	f7ff fcfb 	bl	800da10 <_ZN8touchgfx9PresenterC1Ev>
 800e01a:	687b      	ldr	r3, [r7, #4]
 800e01c:	3304      	adds	r3, #4
 800e01e:	4618      	mov	r0, r3
 800e020:	f7ff fd06 	bl	800da30 <_ZN13ModelListenerC1Ev>
 800e024:	4a06      	ldr	r2, [pc, #24]	@ (800e040 <_ZN13MainPresenterC1ER8MainView+0x38>)
 800e026:	687b      	ldr	r3, [r7, #4]
 800e028:	601a      	str	r2, [r3, #0]
 800e02a:	4a06      	ldr	r2, [pc, #24]	@ (800e044 <_ZN13MainPresenterC1ER8MainView+0x3c>)
 800e02c:	687b      	ldr	r3, [r7, #4]
 800e02e:	605a      	str	r2, [r3, #4]
 800e030:	687b      	ldr	r3, [r7, #4]
 800e032:	683a      	ldr	r2, [r7, #0]
 800e034:	60da      	str	r2, [r3, #12]
{
}
 800e036:	687b      	ldr	r3, [r7, #4]
 800e038:	4618      	mov	r0, r3
 800e03a:	3708      	adds	r7, #8
 800e03c:	46bd      	mov	sp, r7
 800e03e:	bd80      	pop	{r7, pc}
 800e040:	0802896c 	.word	0x0802896c
 800e044:	08028990 	.word	0x08028990

0800e048 <_ZN13MainPresenter8activateEv>:

void MainPresenter::activate()
{
 800e048:	b480      	push	{r7}
 800e04a:	b083      	sub	sp, #12
 800e04c:	af00      	add	r7, sp, #0
 800e04e:	6078      	str	r0, [r7, #4]
}
 800e050:	bf00      	nop
 800e052:	370c      	adds	r7, #12
 800e054:	46bd      	mov	sp, r7
 800e056:	f85d 7b04 	ldr.w	r7, [sp], #4
 800e05a:	4770      	bx	lr

0800e05c <_ZN13MainPresenter10deactivateEv>:

void MainPresenter::deactivate()
{
 800e05c:	b480      	push	{r7}
 800e05e:	b083      	sub	sp, #12
 800e060:	af00      	add	r7, sp, #0
 800e062:	6078      	str	r0, [r7, #4]
}
 800e064:	bf00      	nop
 800e066:	370c      	adds	r7, #12
 800e068:	46bd      	mov	sp, r7
 800e06a:	f85d 7b04 	ldr.w	r7, [sp], #4
 800e06e:	4770      	bx	lr

0800e070 <_ZN13MainPresenter16notifyADCChangedEm>:


void MainPresenter::notifyADCChanged(uint32_t newVal){
 800e070:	b580      	push	{r7, lr}
 800e072:	b082      	sub	sp, #8
 800e074:	af00      	add	r7, sp, #0
 800e076:	6078      	str	r0, [r7, #4]
 800e078:	6039      	str	r1, [r7, #0]
	view.setVal(newVal);
 800e07a:	687b      	ldr	r3, [r7, #4]
 800e07c:	68da      	ldr	r2, [r3, #12]
 800e07e:	687b      	ldr	r3, [r7, #4]
 800e080:	68db      	ldr	r3, [r3, #12]
 800e082:	681b      	ldr	r3, [r3, #0]
 800e084:	3338      	adds	r3, #56	@ 0x38
 800e086:	681b      	ldr	r3, [r3, #0]
 800e088:	6839      	ldr	r1, [r7, #0]
 800e08a:	4610      	mov	r0, r2
 800e08c:	4798      	blx	r3
}
 800e08e:	bf00      	nop
 800e090:	3708      	adds	r7, #8
 800e092:	46bd      	mov	sp, r7
 800e094:	bd80      	pop	{r7, pc}

0800e096 <_ZThn4_N13MainPresenter16notifyADCChangedEm>:

    virtual void notifyADCChanged(uint32_t newVal);
 800e096:	f1a0 0004 	sub.w	r0, r0, #4
 800e09a:	f7ff bfe9 	b.w	800e070 <_ZN13MainPresenter16notifyADCChangedEm>

0800e09e <_ZN13MainPresenter24notifyTemperatureChangedEf>:

void MainPresenter::notifyTemperatureChanged(float newTemp){
 800e09e:	b580      	push	{r7, lr}
 800e0a0:	b082      	sub	sp, #8
 800e0a2:	af00      	add	r7, sp, #0
 800e0a4:	6078      	str	r0, [r7, #4]
 800e0a6:	ed87 0a00 	vstr	s0, [r7]
	view.setTemperature(newTemp);
 800e0aa:	687b      	ldr	r3, [r7, #4]
 800e0ac:	68da      	ldr	r2, [r3, #12]
 800e0ae:	687b      	ldr	r3, [r7, #4]
 800e0b0:	68db      	ldr	r3, [r3, #12]
 800e0b2:	681b      	ldr	r3, [r3, #0]
 800e0b4:	3340      	adds	r3, #64	@ 0x40
 800e0b6:	681b      	ldr	r3, [r3, #0]
 800e0b8:	ed97 0a00 	vldr	s0, [r7]
 800e0bc:	4610      	mov	r0, r2
 800e0be:	4798      	blx	r3

}
 800e0c0:	bf00      	nop
 800e0c2:	3708      	adds	r7, #8
 800e0c4:	46bd      	mov	sp, r7
 800e0c6:	bd80      	pop	{r7, pc}

0800e0c8 <_ZThn4_N13MainPresenter24notifyTemperatureChangedEf>:
    virtual void notifyTemperatureChanged(float newTemp);
 800e0c8:	f1a0 0004 	sub.w	r0, r0, #4
 800e0cc:	f7ff bfe7 	b.w	800e09e <_ZN13MainPresenter24notifyTemperatureChangedEf>

0800e0d0 <_ZN13MainPresenter21notifyHumidityChangedEf>:

void MainPresenter::notifyHumidityChanged(float newHumidity){
 800e0d0:	b580      	push	{r7, lr}
 800e0d2:	b082      	sub	sp, #8
 800e0d4:	af00      	add	r7, sp, #0
 800e0d6:	6078      	str	r0, [r7, #4]
 800e0d8:	ed87 0a00 	vstr	s0, [r7]
	view.setHumidity(newHumidity);
 800e0dc:	687b      	ldr	r3, [r7, #4]
 800e0de:	68da      	ldr	r2, [r3, #12]
 800e0e0:	687b      	ldr	r3, [r7, #4]
 800e0e2:	68db      	ldr	r3, [r3, #12]
 800e0e4:	681b      	ldr	r3, [r3, #0]
 800e0e6:	333c      	adds	r3, #60	@ 0x3c
 800e0e8:	681b      	ldr	r3, [r3, #0]
 800e0ea:	ed97 0a00 	vldr	s0, [r7]
 800e0ee:	4610      	mov	r0, r2
 800e0f0:	4798      	blx	r3
}
 800e0f2:	bf00      	nop
 800e0f4:	3708      	adds	r7, #8
 800e0f6:	46bd      	mov	sp, r7
 800e0f8:	bd80      	pop	{r7, pc}

0800e0fa <_ZThn4_N13MainPresenter21notifyHumidityChangedEf>:
    virtual void notifyHumidityChanged(float newHumidity);
 800e0fa:	f1a0 0004 	sub.w	r0, r0, #4
 800e0fe:	f7ff bfe7 	b.w	800e0d0 <_ZN13MainPresenter21notifyHumidityChangedEf>
	...

0800e104 <_ZN8MainViewD1Ev>:

class MainView : public MainViewBase
{
public:
    MainView();
    ~MainView() {};
 800e104:	b580      	push	{r7, lr}
 800e106:	b082      	sub	sp, #8
 800e108:	af00      	add	r7, sp, #0
 800e10a:	6078      	str	r0, [r7, #4]
 800e10c:	4a05      	ldr	r2, [pc, #20]	@ (800e124 <_ZN8MainViewD1Ev+0x20>)
 800e10e:	687b      	ldr	r3, [r7, #4]
 800e110:	601a      	str	r2, [r3, #0]
 800e112:	687b      	ldr	r3, [r7, #4]
 800e114:	4618      	mov	r0, r3
 800e116:	f7fe fb69 	bl	800c7ec <_ZN12MainViewBaseD1Ev>
 800e11a:	687b      	ldr	r3, [r7, #4]
 800e11c:	4618      	mov	r0, r3
 800e11e:	3708      	adds	r7, #8
 800e120:	46bd      	mov	sp, r7
 800e122:	bd80      	pop	{r7, pc}
 800e124:	080289b8 	.word	0x080289b8

0800e128 <_ZN8MainViewD0Ev>:
 800e128:	b580      	push	{r7, lr}
 800e12a:	b082      	sub	sp, #8
 800e12c:	af00      	add	r7, sp, #0
 800e12e:	6078      	str	r0, [r7, #4]
 800e130:	6878      	ldr	r0, [r7, #4]
 800e132:	f7ff ffe7 	bl	800e104 <_ZN8MainViewD1Ev>
 800e136:	f44f 7176 	mov.w	r1, #984	@ 0x3d8
 800e13a:	6878      	ldr	r0, [r7, #4]
 800e13c:	f017 fca9 	bl	8025a92 <_ZdlPvj>
 800e140:	687b      	ldr	r3, [r7, #4]
 800e142:	4618      	mov	r0, r3
 800e144:	3708      	adds	r7, #8
 800e146:	46bd      	mov	sp, r7
 800e148:	bd80      	pop	{r7, pc}
	...

0800e14c <_ZN8MainViewC1Ev>:

const uint8_t UPPER_LIMIT = 42;
const uint8_t LOWER_LIMIT = 0;


MainView::MainView() : count(0) {}
 800e14c:	b580      	push	{r7, lr}
 800e14e:	b082      	sub	sp, #8
 800e150:	af00      	add	r7, sp, #0
 800e152:	6078      	str	r0, [r7, #4]
 800e154:	687b      	ldr	r3, [r7, #4]
 800e156:	4618      	mov	r0, r3
 800e158:	f7fd fe86 	bl	800be68 <_ZN12MainViewBaseC1Ev>
 800e15c:	4a05      	ldr	r2, [pc, #20]	@ (800e174 <_ZN8MainViewC1Ev+0x28>)
 800e15e:	687b      	ldr	r3, [r7, #4]
 800e160:	601a      	str	r2, [r3, #0]
 800e162:	687b      	ldr	r3, [r7, #4]
 800e164:	2200      	movs	r2, #0
 800e166:	f883 23d4 	strb.w	r2, [r3, #980]	@ 0x3d4
 800e16a:	687b      	ldr	r3, [r7, #4]
 800e16c:	4618      	mov	r0, r3
 800e16e:	3708      	adds	r7, #8
 800e170:	46bd      	mov	sp, r7
 800e172:	bd80      	pop	{r7, pc}
 800e174:	080289b8 	.word	0x080289b8

0800e178 <_ZN8MainView11setupScreenEv>:

void MainView::setupScreen()
{
 800e178:	b580      	push	{r7, lr}
 800e17a:	b082      	sub	sp, #8
 800e17c:	af00      	add	r7, sp, #0
 800e17e:	6078      	str	r0, [r7, #4]
    updateGFXElements();
 800e180:	6878      	ldr	r0, [r7, #4]
 800e182:	f000 f85b 	bl	800e23c <_ZN8MainView17updateGFXElementsEv>
    MainViewBase::setupScreen();
 800e186:	687b      	ldr	r3, [r7, #4]
 800e188:	4618      	mov	r0, r3
 800e18a:	f7fe fb90 	bl	800c8ae <_ZN12MainViewBase11setupScreenEv>

}
 800e18e:	bf00      	nop
 800e190:	3708      	adds	r7, #8
 800e192:	46bd      	mov	sp, r7
 800e194:	bd80      	pop	{r7, pc}

0800e196 <_ZN8MainView13increaseValueEv>:

void MainView::increaseValue()
{
 800e196:	b580      	push	{r7, lr}
 800e198:	b082      	sub	sp, #8
 800e19a:	af00      	add	r7, sp, #0
 800e19c:	6078      	str	r0, [r7, #4]
    count = (count++ > UPPER_LIMIT) ? UPPER_LIMIT : count;
 800e19e:	687b      	ldr	r3, [r7, #4]
 800e1a0:	f893 33d4 	ldrb.w	r3, [r3, #980]	@ 0x3d4
 800e1a4:	1c5a      	adds	r2, r3, #1
 800e1a6:	b2d1      	uxtb	r1, r2
 800e1a8:	687a      	ldr	r2, [r7, #4]
 800e1aa:	f882 13d4 	strb.w	r1, [r2, #980]	@ 0x3d4
 800e1ae:	2b2a      	cmp	r3, #42	@ 0x2a
 800e1b0:	d804      	bhi.n	800e1bc <_ZN8MainView13increaseValueEv+0x26>
 800e1b2:	687b      	ldr	r3, [r7, #4]
 800e1b4:	f503 7375 	add.w	r3, r3, #980	@ 0x3d4
 800e1b8:	781a      	ldrb	r2, [r3, #0]
 800e1ba:	e000      	b.n	800e1be <_ZN8MainView13increaseValueEv+0x28>
 800e1bc:	222a      	movs	r2, #42	@ 0x2a
 800e1be:	687b      	ldr	r3, [r7, #4]
 800e1c0:	f883 23d4 	strb.w	r2, [r3, #980]	@ 0x3d4
    updateGFXElements();
 800e1c4:	6878      	ldr	r0, [r7, #4]
 800e1c6:	f000 f839 	bl	800e23c <_ZN8MainView17updateGFXElementsEv>
}
 800e1ca:	bf00      	nop
 800e1cc:	3708      	adds	r7, #8
 800e1ce:	46bd      	mov	sp, r7
 800e1d0:	bd80      	pop	{r7, pc}

0800e1d2 <_ZN8MainView13decreaseValueEv>:

void MainView::decreaseValue()
{
 800e1d2:	b580      	push	{r7, lr}
 800e1d4:	b082      	sub	sp, #8
 800e1d6:	af00      	add	r7, sp, #0
 800e1d8:	6078      	str	r0, [r7, #4]
    count = (count-- <= LOWER_LIMIT) ? LOWER_LIMIT : count;
 800e1da:	687b      	ldr	r3, [r7, #4]
 800e1dc:	f893 33d4 	ldrb.w	r3, [r3, #980]	@ 0x3d4
 800e1e0:	1e5a      	subs	r2, r3, #1
 800e1e2:	b2d1      	uxtb	r1, r2
 800e1e4:	687a      	ldr	r2, [r7, #4]
 800e1e6:	f882 13d4 	strb.w	r1, [r2, #980]	@ 0x3d4
 800e1ea:	2b00      	cmp	r3, #0
 800e1ec:	d004      	beq.n	800e1f8 <_ZN8MainView13decreaseValueEv+0x26>
 800e1ee:	687b      	ldr	r3, [r7, #4]
 800e1f0:	f503 7375 	add.w	r3, r3, #980	@ 0x3d4
 800e1f4:	781a      	ldrb	r2, [r3, #0]
 800e1f6:	e000      	b.n	800e1fa <_ZN8MainView13decreaseValueEv+0x28>
 800e1f8:	2200      	movs	r2, #0
 800e1fa:	687b      	ldr	r3, [r7, #4]
 800e1fc:	f883 23d4 	strb.w	r2, [r3, #980]	@ 0x3d4
    updateGFXElements();
 800e200:	6878      	ldr	r0, [r7, #4]
 800e202:	f000 f81b 	bl	800e23c <_ZN8MainView17updateGFXElementsEv>
}
 800e206:	bf00      	nop
 800e208:	3708      	adds	r7, #8
 800e20a:	46bd      	mov	sp, r7
 800e20c:	bd80      	pop	{r7, pc}
	...

0800e210 <_ZN8MainView12ToggleLightsEv>:

void MainView::ToggleLights(){
 800e210:	b580      	push	{r7, lr}
 800e212:	b082      	sub	sp, #8
 800e214:	af00      	add	r7, sp, #0
 800e216:	6078      	str	r0, [r7, #4]
	//HAL_GPIO_TogglePin(GPIOB, GPIO_PIN_8);
	HAL_GPIO_TogglePin(PUMP1_EN_GPIO_Port, PUMP1_EN_Pin);
 800e218:	f44f 5180 	mov.w	r1, #4096	@ 0x1000
 800e21c:	4805      	ldr	r0, [pc, #20]	@ (800e234 <_ZN8MainView12ToggleLightsEv+0x24>)
 800e21e:	f7f5 ff42 	bl	80040a6 <HAL_GPIO_TogglePin>
	HAL_GPIO_TogglePin(PUMP2_EN_GPIO_Port, PUMP2_EN_Pin);
 800e222:	2140      	movs	r1, #64	@ 0x40
 800e224:	4804      	ldr	r0, [pc, #16]	@ (800e238 <_ZN8MainView12ToggleLightsEv+0x28>)
 800e226:	f7f5 ff3e 	bl	80040a6 <HAL_GPIO_TogglePin>


}
 800e22a:	bf00      	nop
 800e22c:	3708      	adds	r7, #8
 800e22e:	46bd      	mov	sp, r7
 800e230:	bd80      	pop	{r7, pc}
 800e232:	bf00      	nop
 800e234:	40020400 	.word	0x40020400
 800e238:	40020800 	.word	0x40020800

0800e23c <_ZN8MainView17updateGFXElementsEv>:
void MainView::updateGFXElements()
{
 800e23c:	b480      	push	{r7}
 800e23e:	b083      	sub	sp, #12
 800e240:	af00      	add	r7, sp, #0
 800e242:	6078      	str	r0, [r7, #4]
//    }
//    // Invalidate all GFX area, which will result in it being redrawn in next tick.
//    countTxt.invalidate();
//    buttonUp.invalidate();
//    buttonDown.invalidate();
}
 800e244:	bf00      	nop
 800e246:	370c      	adds	r7, #12
 800e248:	46bd      	mov	sp, r7
 800e24a:	f85d 7b04 	ldr.w	r7, [sp], #4
 800e24e:	4770      	bx	lr

0800e250 <_ZN8MainView6setValEm>:

void MainView::setVal(uint32_t val){
 800e250:	b580      	push	{r7, lr}
 800e252:	b082      	sub	sp, #8
 800e254:	af00      	add	r7, sp, #0
 800e256:	6078      	str	r0, [r7, #4]
 800e258:	6039      	str	r1, [r7, #0]

	Unicode::snprintf(ADCVALBuffer, ADCVAL_SIZE, "%d", val);
 800e25a:	687b      	ldr	r3, [r7, #4]
 800e25c:	f503 7063 	add.w	r0, r3, #908	@ 0x38c
 800e260:	683b      	ldr	r3, [r7, #0]
 800e262:	4a07      	ldr	r2, [pc, #28]	@ (800e280 <_ZN8MainView6setValEm+0x30>)
 800e264:	2114      	movs	r1, #20
 800e266:	f008 fe8b 	bl	8016f80 <_ZN8touchgfx7Unicode8snprintfEPttPKcz>
	ADCVAL.invalidate();
 800e26a:	687b      	ldr	r3, [r7, #4]
 800e26c:	f503 739e 	add.w	r3, r3, #316	@ 0x13c
 800e270:	4618      	mov	r0, r3
 800e272:	f006 ff2b 	bl	80150cc <_ZNK8touchgfx8Drawable10invalidateEv>
}
 800e276:	bf00      	nop
 800e278:	3708      	adds	r7, #8
 800e27a:	46bd      	mov	sp, r7
 800e27c:	bd80      	pop	{r7, pc}
 800e27e:	bf00      	nop
 800e280:	08027598 	.word	0x08027598

0800e284 <_ZN8MainView14setTemperatureEf>:

void MainView::setTemperature(float temp){
 800e284:	b580      	push	{r7, lr}
 800e286:	b082      	sub	sp, #8
 800e288:	af00      	add	r7, sp, #0
 800e28a:	6078      	str	r0, [r7, #4]
 800e28c:	ed87 0a00 	vstr	s0, [r7]
	Unicode::snprintfFloat(TEMPVALBuffer, TEMPVAL_SIZE, "%.1f", temp);
 800e290:	687b      	ldr	r3, [r7, #4]
 800e292:	f503 7359 	add.w	r3, r3, #868	@ 0x364
 800e296:	ed97 0a00 	vldr	s0, [r7]
 800e29a:	4a07      	ldr	r2, [pc, #28]	@ (800e2b8 <_ZN8MainView14setTemperatureEf+0x34>)
 800e29c:	2114      	movs	r1, #20
 800e29e:	4618      	mov	r0, r3
 800e2a0:	f7ff fcc1 	bl	800dc26 <_ZN8touchgfx7Unicode13snprintfFloatEPttPKcf>
	TEMPVAL.invalidate();
 800e2a4:	687b      	ldr	r3, [r7, #4]
 800e2a6:	33f0      	adds	r3, #240	@ 0xf0
 800e2a8:	4618      	mov	r0, r3
 800e2aa:	f006 ff0f 	bl	80150cc <_ZNK8touchgfx8Drawable10invalidateEv>

}
 800e2ae:	bf00      	nop
 800e2b0:	3708      	adds	r7, #8
 800e2b2:	46bd      	mov	sp, r7
 800e2b4:	bd80      	pop	{r7, pc}
 800e2b6:	bf00      	nop
 800e2b8:	0802759c 	.word	0x0802759c

0800e2bc <_ZN8MainView11setHumidityEf>:

void MainView::setHumidity(float humidity){
 800e2bc:	b580      	push	{r7, lr}
 800e2be:	b082      	sub	sp, #8
 800e2c0:	af00      	add	r7, sp, #0
 800e2c2:	6078      	str	r0, [r7, #4]
 800e2c4:	ed87 0a00 	vstr	s0, [r7]
	Unicode::snprintfFloat(HUMVALBuffer, HUMVAL_SIZE, "%.1f", humidity);
 800e2c8:	687b      	ldr	r3, [r7, #4]
 800e2ca:	f503 734f 	add.w	r3, r3, #828	@ 0x33c
 800e2ce:	ed97 0a00 	vldr	s0, [r7]
 800e2d2:	4a07      	ldr	r2, [pc, #28]	@ (800e2f0 <_ZN8MainView11setHumidityEf+0x34>)
 800e2d4:	2114      	movs	r1, #20
 800e2d6:	4618      	mov	r0, r3
 800e2d8:	f7ff fca5 	bl	800dc26 <_ZN8touchgfx7Unicode13snprintfFloatEPttPKcf>
	HUMVAL.invalidate();
 800e2dc:	687b      	ldr	r3, [r7, #4]
 800e2de:	33a4      	adds	r3, #164	@ 0xa4
 800e2e0:	4618      	mov	r0, r3
 800e2e2:	f006 fef3 	bl	80150cc <_ZNK8touchgfx8Drawable10invalidateEv>


}
 800e2e6:	bf00      	nop
 800e2e8:	3708      	adds	r7, #8
 800e2ea:	46bd      	mov	sp, r7
 800e2ec:	bd80      	pop	{r7, pc}
 800e2ee:	bf00      	nop
 800e2f0:	0802759c 	.word	0x0802759c

0800e2f4 <_ZN5ModelC1Ev>:
#include <gui/model/Model.hpp>
#include <gui/model/ModelListener.hpp>
#include "main.h"

Model::Model() : modelListener(0)
 800e2f4:	b480      	push	{r7}
 800e2f6:	b083      	sub	sp, #12
 800e2f8:	af00      	add	r7, sp, #0
 800e2fa:	6078      	str	r0, [r7, #4]
 800e2fc:	687b      	ldr	r3, [r7, #4]
 800e2fe:	2200      	movs	r2, #0
 800e300:	601a      	str	r2, [r3, #0]
{
}
 800e302:	687b      	ldr	r3, [r7, #4]
 800e304:	4618      	mov	r0, r3
 800e306:	370c      	adds	r7, #12
 800e308:	46bd      	mov	sp, r7
 800e30a:	f85d 7b04 	ldr.w	r7, [sp], #4
 800e30e:	4770      	bx	lr

0800e310 <_ZN5Model4tickEv>:

void Model::tick()
{
 800e310:	b580      	push	{r7, lr}
 800e312:	b088      	sub	sp, #32
 800e314:	af00      	add	r7, sp, #0
 800e316:	6078      	str	r0, [r7, #4]

	float humidity = hum;
 800e318:	4b2c      	ldr	r3, [pc, #176]	@ (800e3cc <_ZN5Model4tickEv+0xbc>)
 800e31a:	681b      	ldr	r3, [r3, #0]
 800e31c:	61fb      	str	r3, [r7, #28]
	float temperature = temp;
 800e31e:	4b2c      	ldr	r3, [pc, #176]	@ (800e3d0 <_ZN5Model4tickEv+0xc0>)
 800e320:	681b      	ldr	r3, [r3, #0]
 800e322:	61bb      	str	r3, [r7, #24]
	//uint32_t val = htim4.Instance->CCR2;
	uint32_t val = value_adc;
 800e324:	4b2b      	ldr	r3, [pc, #172]	@ (800e3d4 <_ZN5Model4tickEv+0xc4>)
 800e326:	681b      	ldr	r3, [r3, #0]
 800e328:	617b      	str	r3, [r7, #20]
	float temp_set = temp_set_point;
 800e32a:	4b2b      	ldr	r3, [pc, #172]	@ (800e3d8 <_ZN5Model4tickEv+0xc8>)
 800e32c:	681b      	ldr	r3, [r3, #0]
 800e32e:	613b      	str	r3, [r7, #16]
	float humidity_set = humidity_set_point;
 800e330:	4b2a      	ldr	r3, [pc, #168]	@ (800e3dc <_ZN5Model4tickEv+0xcc>)
 800e332:	681b      	ldr	r3, [r3, #0]
 800e334:	60fb      	str	r3, [r7, #12]
	int lights_set = lights_set_point;
 800e336:	4b2a      	ldr	r3, [pc, #168]	@ (800e3e0 <_ZN5Model4tickEv+0xd0>)
 800e338:	681b      	ldr	r3, [r3, #0]
 800e33a:	60bb      	str	r3, [r7, #8]



	if (modelListener != 0) {
 800e33c:	687b      	ldr	r3, [r7, #4]
 800e33e:	681b      	ldr	r3, [r3, #0]
 800e340:	2b00      	cmp	r3, #0
 800e342:	d03f      	beq.n	800e3c4 <_ZN5Model4tickEv+0xb4>
		modelListener -> notifyADCChanged(val);
 800e344:	687b      	ldr	r3, [r7, #4]
 800e346:	681a      	ldr	r2, [r3, #0]
 800e348:	687b      	ldr	r3, [r7, #4]
 800e34a:	681b      	ldr	r3, [r3, #0]
 800e34c:	681b      	ldr	r3, [r3, #0]
 800e34e:	3308      	adds	r3, #8
 800e350:	681b      	ldr	r3, [r3, #0]
 800e352:	6979      	ldr	r1, [r7, #20]
 800e354:	4610      	mov	r0, r2
 800e356:	4798      	blx	r3
		modelListener -> notifyTemperatureChanged(temperature);
 800e358:	687b      	ldr	r3, [r7, #4]
 800e35a:	681a      	ldr	r2, [r3, #0]
 800e35c:	687b      	ldr	r3, [r7, #4]
 800e35e:	681b      	ldr	r3, [r3, #0]
 800e360:	681b      	ldr	r3, [r3, #0]
 800e362:	330c      	adds	r3, #12
 800e364:	681b      	ldr	r3, [r3, #0]
 800e366:	ed97 0a06 	vldr	s0, [r7, #24]
 800e36a:	4610      	mov	r0, r2
 800e36c:	4798      	blx	r3
		modelListener -> notifyHumidityChanged(humidity);
 800e36e:	687b      	ldr	r3, [r7, #4]
 800e370:	681a      	ldr	r2, [r3, #0]
 800e372:	687b      	ldr	r3, [r7, #4]
 800e374:	681b      	ldr	r3, [r3, #0]
 800e376:	681b      	ldr	r3, [r3, #0]
 800e378:	3310      	adds	r3, #16
 800e37a:	681b      	ldr	r3, [r3, #0]
 800e37c:	ed97 0a07 	vldr	s0, [r7, #28]
 800e380:	4610      	mov	r0, r2
 800e382:	4798      	blx	r3
		modelListener -> notifyHumiditySetPointChanged(humidity_set);
 800e384:	687b      	ldr	r3, [r7, #4]
 800e386:	681a      	ldr	r2, [r3, #0]
 800e388:	687b      	ldr	r3, [r7, #4]
 800e38a:	681b      	ldr	r3, [r3, #0]
 800e38c:	681b      	ldr	r3, [r3, #0]
 800e38e:	3314      	adds	r3, #20
 800e390:	681b      	ldr	r3, [r3, #0]
 800e392:	ed97 0a03 	vldr	s0, [r7, #12]
 800e396:	4610      	mov	r0, r2
 800e398:	4798      	blx	r3
		modelListener -> notifyTemperatureSetPointChanged(temp_set);
 800e39a:	687b      	ldr	r3, [r7, #4]
 800e39c:	681a      	ldr	r2, [r3, #0]
 800e39e:	687b      	ldr	r3, [r7, #4]
 800e3a0:	681b      	ldr	r3, [r3, #0]
 800e3a2:	681b      	ldr	r3, [r3, #0]
 800e3a4:	3318      	adds	r3, #24
 800e3a6:	681b      	ldr	r3, [r3, #0]
 800e3a8:	ed97 0a04 	vldr	s0, [r7, #16]
 800e3ac:	4610      	mov	r0, r2
 800e3ae:	4798      	blx	r3
		modelListener -> notifyLightsSetPointChanged(lights_set);
 800e3b0:	687b      	ldr	r3, [r7, #4]
 800e3b2:	681a      	ldr	r2, [r3, #0]
 800e3b4:	687b      	ldr	r3, [r7, #4]
 800e3b6:	681b      	ldr	r3, [r3, #0]
 800e3b8:	681b      	ldr	r3, [r3, #0]
 800e3ba:	331c      	adds	r3, #28
 800e3bc:	681b      	ldr	r3, [r3, #0]
 800e3be:	68b9      	ldr	r1, [r7, #8]
 800e3c0:	4610      	mov	r0, r2
 800e3c2:	4798      	blx	r3
	}

//    virtual void notifyHumiditySetPointChanged(float setPoint) {}
//    virtual void notifyTemperatureSetPointChanged(float setPoint) {}
//    virtual void notifyLightsSetPointChanged(float setPoint) {}
}
 800e3c4:	bf00      	nop
 800e3c6:	3720      	adds	r7, #32
 800e3c8:	46bd      	mov	sp, r7
 800e3ca:	bd80      	pop	{r7, pc}
 800e3cc:	2000062c 	.word	0x2000062c
 800e3d0:	20000628 	.word	0x20000628
 800e3d4:	20000624 	.word	0x20000624
 800e3d8:	20000004 	.word	0x20000004
 800e3dc:	20000008 	.word	0x20000008
 800e3e0:	2000000c 	.word	0x2000000c

0800e3e4 <_ZN27temperature_screenPresenterD1Ev>:
     * The deactivate function is called automatically when this screen is "switched out"
     * (ie. made inactive). Teardown functionality can be placed here.
     */
    virtual void deactivate();

    virtual ~temperature_screenPresenter() {}
 800e3e4:	b580      	push	{r7, lr}
 800e3e6:	b082      	sub	sp, #8
 800e3e8:	af00      	add	r7, sp, #0
 800e3ea:	6078      	str	r0, [r7, #4]
 800e3ec:	4a09      	ldr	r2, [pc, #36]	@ (800e414 <_ZN27temperature_screenPresenterD1Ev+0x30>)
 800e3ee:	687b      	ldr	r3, [r7, #4]
 800e3f0:	601a      	str	r2, [r3, #0]
 800e3f2:	4a09      	ldr	r2, [pc, #36]	@ (800e418 <_ZN27temperature_screenPresenterD1Ev+0x34>)
 800e3f4:	687b      	ldr	r3, [r7, #4]
 800e3f6:	605a      	str	r2, [r3, #4]
 800e3f8:	687b      	ldr	r3, [r7, #4]
 800e3fa:	3304      	adds	r3, #4
 800e3fc:	4618      	mov	r0, r3
 800e3fe:	f7ff fb2b 	bl	800da58 <_ZN13ModelListenerD1Ev>
 800e402:	687b      	ldr	r3, [r7, #4]
 800e404:	4618      	mov	r0, r3
 800e406:	f7ff fae3 	bl	800d9d0 <_ZN8touchgfx9PresenterD1Ev>
 800e40a:	687b      	ldr	r3, [r7, #4]
 800e40c:	4618      	mov	r0, r3
 800e40e:	3708      	adds	r7, #8
 800e410:	46bd      	mov	sp, r7
 800e412:	bd80      	pop	{r7, pc}
 800e414:	08028a04 	.word	0x08028a04
 800e418:	08028a20 	.word	0x08028a20

0800e41c <_ZThn4_N27temperature_screenPresenterD1Ev>:
 800e41c:	f1a0 0004 	sub.w	r0, r0, #4
 800e420:	e7e0      	b.n	800e3e4 <_ZN27temperature_screenPresenterD1Ev>
 800e422:	bf00      	nop

0800e424 <_ZN27temperature_screenPresenterD0Ev>:
 800e424:	b580      	push	{r7, lr}
 800e426:	b082      	sub	sp, #8
 800e428:	af00      	add	r7, sp, #0
 800e42a:	6078      	str	r0, [r7, #4]
 800e42c:	6878      	ldr	r0, [r7, #4]
 800e42e:	f7ff ffd9 	bl	800e3e4 <_ZN27temperature_screenPresenterD1Ev>
 800e432:	2110      	movs	r1, #16
 800e434:	6878      	ldr	r0, [r7, #4]
 800e436:	f017 fb2c 	bl	8025a92 <_ZdlPvj>
 800e43a:	687b      	ldr	r3, [r7, #4]
 800e43c:	4618      	mov	r0, r3
 800e43e:	3708      	adds	r7, #8
 800e440:	46bd      	mov	sp, r7
 800e442:	bd80      	pop	{r7, pc}

0800e444 <_ZThn4_N27temperature_screenPresenterD0Ev>:
 800e444:	f1a0 0004 	sub.w	r0, r0, #4
 800e448:	e7ec      	b.n	800e424 <_ZN27temperature_screenPresenterD0Ev>
	...

0800e44c <_ZN27temperature_screenPresenterC1ER22temperature_screenView>:
#include <gui/temperature_screen_screen/temperature_screenView.hpp>
#include <gui/temperature_screen_screen/temperature_screenPresenter.hpp>

temperature_screenPresenter::temperature_screenPresenter(temperature_screenView& v)
 800e44c:	b580      	push	{r7, lr}
 800e44e:	b082      	sub	sp, #8
 800e450:	af00      	add	r7, sp, #0
 800e452:	6078      	str	r0, [r7, #4]
 800e454:	6039      	str	r1, [r7, #0]
    : view(v)
 800e456:	687b      	ldr	r3, [r7, #4]
 800e458:	4618      	mov	r0, r3
 800e45a:	f7ff fad9 	bl	800da10 <_ZN8touchgfx9PresenterC1Ev>
 800e45e:	687b      	ldr	r3, [r7, #4]
 800e460:	3304      	adds	r3, #4
 800e462:	4618      	mov	r0, r3
 800e464:	f7ff fae4 	bl	800da30 <_ZN13ModelListenerC1Ev>
 800e468:	4a06      	ldr	r2, [pc, #24]	@ (800e484 <_ZN27temperature_screenPresenterC1ER22temperature_screenView+0x38>)
 800e46a:	687b      	ldr	r3, [r7, #4]
 800e46c:	601a      	str	r2, [r3, #0]
 800e46e:	4a06      	ldr	r2, [pc, #24]	@ (800e488 <_ZN27temperature_screenPresenterC1ER22temperature_screenView+0x3c>)
 800e470:	687b      	ldr	r3, [r7, #4]
 800e472:	605a      	str	r2, [r3, #4]
 800e474:	687b      	ldr	r3, [r7, #4]
 800e476:	683a      	ldr	r2, [r7, #0]
 800e478:	60da      	str	r2, [r3, #12]
{

}
 800e47a:	687b      	ldr	r3, [r7, #4]
 800e47c:	4618      	mov	r0, r3
 800e47e:	3708      	adds	r7, #8
 800e480:	46bd      	mov	sp, r7
 800e482:	bd80      	pop	{r7, pc}
 800e484:	08028a04 	.word	0x08028a04
 800e488:	08028a20 	.word	0x08028a20

0800e48c <_ZN27temperature_screenPresenter8activateEv>:

void temperature_screenPresenter::activate()
{
 800e48c:	b480      	push	{r7}
 800e48e:	b083      	sub	sp, #12
 800e490:	af00      	add	r7, sp, #0
 800e492:	6078      	str	r0, [r7, #4]

}
 800e494:	bf00      	nop
 800e496:	370c      	adds	r7, #12
 800e498:	46bd      	mov	sp, r7
 800e49a:	f85d 7b04 	ldr.w	r7, [sp], #4
 800e49e:	4770      	bx	lr

0800e4a0 <_ZN27temperature_screenPresenter10deactivateEv>:

void temperature_screenPresenter::deactivate()
{
 800e4a0:	b480      	push	{r7}
 800e4a2:	b083      	sub	sp, #12
 800e4a4:	af00      	add	r7, sp, #0
 800e4a6:	6078      	str	r0, [r7, #4]

}
 800e4a8:	bf00      	nop
 800e4aa:	370c      	adds	r7, #12
 800e4ac:	46bd      	mov	sp, r7
 800e4ae:	f85d 7b04 	ldr.w	r7, [sp], #4
 800e4b2:	4770      	bx	lr

0800e4b4 <_ZN27temperature_screenPresenter32notifyTemperatureSetPointChangedEf>:

void temperature_screenPresenter::notifyTemperatureSetPointChanged(float setPoint)
{
 800e4b4:	b580      	push	{r7, lr}
 800e4b6:	b082      	sub	sp, #8
 800e4b8:	af00      	add	r7, sp, #0
 800e4ba:	6078      	str	r0, [r7, #4]
 800e4bc:	ed87 0a00 	vstr	s0, [r7]
	view.setTemperature(setPoint);
 800e4c0:	687b      	ldr	r3, [r7, #4]
 800e4c2:	68da      	ldr	r2, [r3, #12]
 800e4c4:	687b      	ldr	r3, [r7, #4]
 800e4c6:	68db      	ldr	r3, [r3, #12]
 800e4c8:	681b      	ldr	r3, [r3, #0]
 800e4ca:	3334      	adds	r3, #52	@ 0x34
 800e4cc:	681b      	ldr	r3, [r3, #0]
 800e4ce:	ed97 0a00 	vldr	s0, [r7]
 800e4d2:	4610      	mov	r0, r2
 800e4d4:	4798      	blx	r3
}
 800e4d6:	bf00      	nop
 800e4d8:	3708      	adds	r7, #8
 800e4da:	46bd      	mov	sp, r7
 800e4dc:	bd80      	pop	{r7, pc}

0800e4de <_ZThn4_N27temperature_screenPresenter32notifyTemperatureSetPointChangedEf>:

    virtual void notifyTemperatureSetPointChanged(float setPoint);
 800e4de:	f1a0 0004 	sub.w	r0, r0, #4
 800e4e2:	f7ff bfe7 	b.w	800e4b4 <_ZN27temperature_screenPresenter32notifyTemperatureSetPointChangedEf>
	...

0800e4e8 <_ZN22temperature_screenViewD1Ev>:

class temperature_screenView : public temperature_screenViewBase
{
public:
    temperature_screenView();
    virtual ~temperature_screenView() {}
 800e4e8:	b580      	push	{r7, lr}
 800e4ea:	b082      	sub	sp, #8
 800e4ec:	af00      	add	r7, sp, #0
 800e4ee:	6078      	str	r0, [r7, #4]
 800e4f0:	4a05      	ldr	r2, [pc, #20]	@ (800e508 <_ZN22temperature_screenViewD1Ev+0x20>)
 800e4f2:	687b      	ldr	r3, [r7, #4]
 800e4f4:	601a      	str	r2, [r3, #0]
 800e4f6:	687b      	ldr	r3, [r7, #4]
 800e4f8:	4618      	mov	r0, r3
 800e4fa:	f7fe fe5d 	bl	800d1b8 <_ZN26temperature_screenViewBaseD1Ev>
 800e4fe:	687b      	ldr	r3, [r7, #4]
 800e500:	4618      	mov	r0, r3
 800e502:	3708      	adds	r7, #8
 800e504:	46bd      	mov	sp, r7
 800e506:	bd80      	pop	{r7, pc}
 800e508:	08028a48 	.word	0x08028a48

0800e50c <_ZN22temperature_screenViewD0Ev>:
 800e50c:	b580      	push	{r7, lr}
 800e50e:	b082      	sub	sp, #8
 800e510:	af00      	add	r7, sp, #0
 800e512:	6078      	str	r0, [r7, #4]
 800e514:	6878      	ldr	r0, [r7, #4]
 800e516:	f7ff ffe7 	bl	800e4e8 <_ZN22temperature_screenViewD1Ev>
 800e51a:	f44f 7109 	mov.w	r1, #548	@ 0x224
 800e51e:	6878      	ldr	r0, [r7, #4]
 800e520:	f017 fab7 	bl	8025a92 <_ZdlPvj>
 800e524:	687b      	ldr	r3, [r7, #4]
 800e526:	4618      	mov	r0, r3
 800e528:	3708      	adds	r7, #8
 800e52a:	46bd      	mov	sp, r7
 800e52c:	bd80      	pop	{r7, pc}
	...

0800e530 <_ZN22temperature_screenViewC1Ev>:
#include <gui/temperature_screen_screen/temperature_screenView.hpp>

temperature_screenView::temperature_screenView()
 800e530:	b580      	push	{r7, lr}
 800e532:	b082      	sub	sp, #8
 800e534:	af00      	add	r7, sp, #0
 800e536:	6078      	str	r0, [r7, #4]
 800e538:	687b      	ldr	r3, [r7, #4]
 800e53a:	4618      	mov	r0, r3
 800e53c:	f7fe fb8e 	bl	800cc5c <_ZN26temperature_screenViewBaseC1Ev>
 800e540:	4a03      	ldr	r2, [pc, #12]	@ (800e550 <_ZN22temperature_screenViewC1Ev+0x20>)
 800e542:	687b      	ldr	r3, [r7, #4]
 800e544:	601a      	str	r2, [r3, #0]
{

}
 800e546:	687b      	ldr	r3, [r7, #4]
 800e548:	4618      	mov	r0, r3
 800e54a:	3708      	adds	r7, #8
 800e54c:	46bd      	mov	sp, r7
 800e54e:	bd80      	pop	{r7, pc}
 800e550:	08028a48 	.word	0x08028a48

0800e554 <_ZN22temperature_screenView11setupScreenEv>:

void temperature_screenView::setupScreen()
{
 800e554:	b580      	push	{r7, lr}
 800e556:	b082      	sub	sp, #8
 800e558:	af00      	add	r7, sp, #0
 800e55a:	6078      	str	r0, [r7, #4]
    temperature_screenViewBase::setupScreen();
 800e55c:	687b      	ldr	r3, [r7, #4]
 800e55e:	4618      	mov	r0, r3
 800e560:	f7fe fe7b 	bl	800d25a <_ZN26temperature_screenViewBase11setupScreenEv>
}
 800e564:	bf00      	nop
 800e566:	3708      	adds	r7, #8
 800e568:	46bd      	mov	sp, r7
 800e56a:	bd80      	pop	{r7, pc}

0800e56c <_ZN22temperature_screenView14tearDownScreenEv>:

void temperature_screenView::tearDownScreen()
{
 800e56c:	b580      	push	{r7, lr}
 800e56e:	b082      	sub	sp, #8
 800e570:	af00      	add	r7, sp, #0
 800e572:	6078      	str	r0, [r7, #4]
    temperature_screenViewBase::tearDownScreen();
 800e574:	687b      	ldr	r3, [r7, #4]
 800e576:	4618      	mov	r0, r3
 800e578:	f7fb fbc4 	bl	8009d04 <_ZN8touchgfx6Screen14tearDownScreenEv>
}
 800e57c:	bf00      	nop
 800e57e:	3708      	adds	r7, #8
 800e580:	46bd      	mov	sp, r7
 800e582:	bd80      	pop	{r7, pc}

0800e584 <_ZN22temperature_screenView14setTemperatureEf>:


void temperature_screenView::setTemperature(float newVal){
 800e584:	b580      	push	{r7, lr}
 800e586:	b082      	sub	sp, #8
 800e588:	af00      	add	r7, sp, #0
 800e58a:	6078      	str	r0, [r7, #4]
 800e58c:	ed87 0a00 	vstr	s0, [r7]
	Unicode::snprintfFloat(tempValBuffer, TEMPVAL_SIZE, "%.1f", newVal);
 800e590:	687b      	ldr	r3, [r7, #4]
 800e592:	f503 73f8 	add.w	r3, r3, #496	@ 0x1f0
 800e596:	ed97 0a00 	vldr	s0, [r7]
 800e59a:	4a07      	ldr	r2, [pc, #28]	@ (800e5b8 <_ZN22temperature_screenView14setTemperatureEf+0x34>)
 800e59c:	210a      	movs	r1, #10
 800e59e:	4618      	mov	r0, r3
 800e5a0:	f7ff fb41 	bl	800dc26 <_ZN8touchgfx7Unicode13snprintfFloatEPttPKcf>
	tempVal.invalidate();
 800e5a4:	687b      	ldr	r3, [r7, #4]
 800e5a6:	f503 7396 	add.w	r3, r3, #300	@ 0x12c
 800e5aa:	4618      	mov	r0, r3
 800e5ac:	f006 fd8e 	bl	80150cc <_ZNK8touchgfx8Drawable10invalidateEv>

}
 800e5b0:	bf00      	nop
 800e5b2:	3708      	adds	r7, #8
 800e5b4:	46bd      	mov	sp, r7
 800e5b6:	bd80      	pop	{r7, pc}
 800e5b8:	080275a4 	.word	0x080275a4

0800e5bc <_ZN22temperature_screenView8increaseEv>:

void temperature_screenView::increase()
{
 800e5bc:	b480      	push	{r7}
 800e5be:	b083      	sub	sp, #12
 800e5c0:	af00      	add	r7, sp, #0
 800e5c2:	6078      	str	r0, [r7, #4]
	temp_set_point = temp_set_point + 5;
 800e5c4:	4b07      	ldr	r3, [pc, #28]	@ (800e5e4 <_ZN22temperature_screenView8increaseEv+0x28>)
 800e5c6:	edd3 7a00 	vldr	s15, [r3]
 800e5ca:	eeb1 7a04 	vmov.f32	s14, #20	@ 0x40a00000  5.0
 800e5ce:	ee77 7a87 	vadd.f32	s15, s15, s14
 800e5d2:	4b04      	ldr	r3, [pc, #16]	@ (800e5e4 <_ZN22temperature_screenView8increaseEv+0x28>)
 800e5d4:	edc3 7a00 	vstr	s15, [r3]
}
 800e5d8:	bf00      	nop
 800e5da:	370c      	adds	r7, #12
 800e5dc:	46bd      	mov	sp, r7
 800e5de:	f85d 7b04 	ldr.w	r7, [sp], #4
 800e5e2:	4770      	bx	lr
 800e5e4:	20000004 	.word	0x20000004

0800e5e8 <_ZN22temperature_screenView8decreaseEv>:

void temperature_screenView::decrease()
{
 800e5e8:	b480      	push	{r7}
 800e5ea:	b083      	sub	sp, #12
 800e5ec:	af00      	add	r7, sp, #0
 800e5ee:	6078      	str	r0, [r7, #4]
	temp_set_point = temp_set_point - 5;
 800e5f0:	4b07      	ldr	r3, [pc, #28]	@ (800e610 <_ZN22temperature_screenView8decreaseEv+0x28>)
 800e5f2:	edd3 7a00 	vldr	s15, [r3]
 800e5f6:	eeb1 7a04 	vmov.f32	s14, #20	@ 0x40a00000  5.0
 800e5fa:	ee77 7ac7 	vsub.f32	s15, s15, s14
 800e5fe:	4b04      	ldr	r3, [pc, #16]	@ (800e610 <_ZN22temperature_screenView8decreaseEv+0x28>)
 800e600:	edc3 7a00 	vstr	s15, [r3]
}
 800e604:	bf00      	nop
 800e606:	370c      	adds	r7, #12
 800e608:	46bd      	mov	sp, r7
 800e60a:	f85d 7b04 	ldr.w	r7, [sp], #4
 800e60e:	4770      	bx	lr
 800e610:	20000004 	.word	0x20000004

0800e614 <_ZN8touchgfx15TouchControllerD1Ev>:
/** Basic Touch Controller interface. */
class TouchController
{
public:
    /** Finalizes an instance of the TouchController class. */
    virtual ~TouchController()
 800e614:	b480      	push	{r7}
 800e616:	b083      	sub	sp, #12
 800e618:	af00      	add	r7, sp, #0
 800e61a:	6078      	str	r0, [r7, #4]
    {
 800e61c:	4a04      	ldr	r2, [pc, #16]	@ (800e630 <_ZN8touchgfx15TouchControllerD1Ev+0x1c>)
 800e61e:	687b      	ldr	r3, [r7, #4]
 800e620:	601a      	str	r2, [r3, #0]
    }
 800e622:	687b      	ldr	r3, [r7, #4]
 800e624:	4618      	mov	r0, r3
 800e626:	370c      	adds	r7, #12
 800e628:	46bd      	mov	sp, r7
 800e62a:	f85d 7b04 	ldr.w	r7, [sp], #4
 800e62e:	4770      	bx	lr
 800e630:	08028aa0 	.word	0x08028aa0

0800e634 <_ZN8touchgfx15TouchControllerD0Ev>:
    virtual ~TouchController()
 800e634:	b580      	push	{r7, lr}
 800e636:	b082      	sub	sp, #8
 800e638:	af00      	add	r7, sp, #0
 800e63a:	6078      	str	r0, [r7, #4]
    }
 800e63c:	6878      	ldr	r0, [r7, #4]
 800e63e:	f7ff ffe9 	bl	800e614 <_ZN8touchgfx15TouchControllerD1Ev>
 800e642:	2104      	movs	r1, #4
 800e644:	6878      	ldr	r0, [r7, #4]
 800e646:	f017 fa24 	bl	8025a92 <_ZdlPvj>
 800e64a:	687b      	ldr	r3, [r7, #4]
 800e64c:	4618      	mov	r0, r3
 800e64e:	3708      	adds	r7, #8
 800e650:	46bd      	mov	sp, r7
 800e652:	bd80      	pop	{r7, pc}

0800e654 <_ZN20STM32TouchController4initEv>:

#include <STM32TouchController.hpp>
#include "main.h"

void STM32TouchController::init()
{
 800e654:	b480      	push	{r7}
 800e656:	b083      	sub	sp, #12
 800e658:	af00      	add	r7, sp, #0
 800e65a:	6078      	str	r0, [r7, #4]
    /**
     * Initialize touch controller and driver
     *
     */
}
 800e65c:	bf00      	nop
 800e65e:	370c      	adds	r7, #12
 800e660:	46bd      	mov	sp, r7
 800e662:	f85d 7b04 	ldr.w	r7, [sp], #4
 800e666:	4770      	bx	lr

0800e668 <_ZN20STM32TouchController11sampleTouchERlS0_>:

bool STM32TouchController::sampleTouch(int32_t& x, int32_t& y)
{
 800e668:	b580      	push	{r7, lr}
 800e66a:	b084      	sub	sp, #16
 800e66c:	af00      	add	r7, sp, #0
 800e66e:	60f8      	str	r0, [r7, #12]
 800e670:	60b9      	str	r1, [r7, #8]
 800e672:	607a      	str	r2, [r7, #4]
     * This function is called by the TouchGFX framework.
     * By default sampleTouch is called every tick, this can be adjusted by HAL::setTouchSampleRate(int8_t);
     *
     */

	return((bool) Touch_TouchGFXSampleTouch(&x,&y));
 800e674:	6879      	ldr	r1, [r7, #4]
 800e676:	68b8      	ldr	r0, [r7, #8]
 800e678:	f7f4 f8ce 	bl	8002818 <Touch_TouchGFXSampleTouch>
 800e67c:	4603      	mov	r3, r0
 800e67e:	2b00      	cmp	r3, #0
 800e680:	bf14      	ite	ne
 800e682:	2301      	movne	r3, #1
 800e684:	2300      	moveq	r3, #0
 800e686:	b2db      	uxtb	r3, r3
}
 800e688:	4618      	mov	r0, r3
 800e68a:	3710      	adds	r7, #16
 800e68c:	46bd      	mov	sp, r7
 800e68e:	bd80      	pop	{r7, pc}

0800e690 <_ZN20STM32TouchControllerD1Ev>:
 * @brief This class specializes TouchController Interface.
 *
 * @sa touchgfx::TouchController
 */

class STM32TouchController : public touchgfx::TouchController
 800e690:	b580      	push	{r7, lr}
 800e692:	b082      	sub	sp, #8
 800e694:	af00      	add	r7, sp, #0
 800e696:	6078      	str	r0, [r7, #4]
 800e698:	4a05      	ldr	r2, [pc, #20]	@ (800e6b0 <_ZN20STM32TouchControllerD1Ev+0x20>)
 800e69a:	687b      	ldr	r3, [r7, #4]
 800e69c:	601a      	str	r2, [r3, #0]
 800e69e:	687b      	ldr	r3, [r7, #4]
 800e6a0:	4618      	mov	r0, r3
 800e6a2:	f7ff ffb7 	bl	800e614 <_ZN8touchgfx15TouchControllerD1Ev>
 800e6a6:	687b      	ldr	r3, [r7, #4]
 800e6a8:	4618      	mov	r0, r3
 800e6aa:	3708      	adds	r7, #8
 800e6ac:	46bd      	mov	sp, r7
 800e6ae:	bd80      	pop	{r7, pc}
 800e6b0:	08028a88 	.word	0x08028a88

0800e6b4 <_ZN20STM32TouchControllerD0Ev>:
 800e6b4:	b580      	push	{r7, lr}
 800e6b6:	b082      	sub	sp, #8
 800e6b8:	af00      	add	r7, sp, #0
 800e6ba:	6078      	str	r0, [r7, #4]
 800e6bc:	6878      	ldr	r0, [r7, #4]
 800e6be:	f7ff ffe7 	bl	800e690 <_ZN20STM32TouchControllerD1Ev>
 800e6c2:	2104      	movs	r1, #4
 800e6c4:	6878      	ldr	r0, [r7, #4]
 800e6c6:	f017 f9e4 	bl	8025a92 <_ZdlPvj>
 800e6ca:	687b      	ldr	r3, [r7, #4]
 800e6cc:	4618      	mov	r0, r3
 800e6ce:	3708      	adds	r7, #8
 800e6d0:	46bd      	mov	sp, r7
 800e6d2:	bd80      	pop	{r7, pc}

0800e6d4 <_ZN8touchgfx4GPIO4initEv>:

/*
 * Perform configuration of IO pins.
 */
void GPIO::init()
{
 800e6d4:	b480      	push	{r7}
 800e6d6:	af00      	add	r7, sp, #0

}
 800e6d8:	bf00      	nop
 800e6da:	46bd      	mov	sp, r7
 800e6dc:	f85d 7b04 	ldr.w	r7, [sp], #4
 800e6e0:	4770      	bx	lr
	...

0800e6e4 <_ZN8touchgfx4GPIO3setENS0_7GPIO_IDE>:

/*
 * Sets a pin high.
 */
void GPIO::set(GPIO_ID id)
{
 800e6e4:	b480      	push	{r7}
 800e6e6:	b083      	sub	sp, #12
 800e6e8:	af00      	add	r7, sp, #0
 800e6ea:	4603      	mov	r3, r0
 800e6ec:	71fb      	strb	r3, [r7, #7]
    switch (id)
 800e6ee:	79fb      	ldrb	r3, [r7, #7]
 800e6f0:	2b03      	cmp	r3, #3
 800e6f2:	d80c      	bhi.n	800e70e <_ZN8touchgfx4GPIO3setENS0_7GPIO_IDE+0x2a>
 800e6f4:	a201      	add	r2, pc, #4	@ (adr r2, 800e6fc <_ZN8touchgfx4GPIO3setENS0_7GPIO_IDE+0x18>)
 800e6f6:	f852 f023 	ldr.w	pc, [r2, r3, lsl #2]
 800e6fa:	bf00      	nop
 800e6fc:	0800e70d 	.word	0x0800e70d
 800e700:	0800e70d 	.word	0x0800e70d
 800e704:	0800e70d 	.word	0x0800e70d
 800e708:	0800e70d 	.word	0x0800e70d
    {
    case GPIO::VSYNC_FREQ:
#if defined(VSYNC_FREQ_GPIO_Port) && defined(VSYNC_FREQ_Pin)
        HAL_GPIO_WritePin(VSYNC_FREQ_GPIO_Port, VSYNC_FREQ_Pin, GPIO_PIN_SET);
#endif
        break;
 800e70c:	bf00      	nop
#if defined(MCU_ACTIVE_GPIO_Port) && defined(MCU_ACTIVE_Pin)
        HAL_GPIO_WritePin(MCU_ACTIVE_GPIO_Port, MCU_ACTIVE_Pin, GPIO_PIN_SET);
#endif
        break;
    }
}
 800e70e:	bf00      	nop
 800e710:	370c      	adds	r7, #12
 800e712:	46bd      	mov	sp, r7
 800e714:	f85d 7b04 	ldr.w	r7, [sp], #4
 800e718:	4770      	bx	lr
 800e71a:	bf00      	nop

0800e71c <_ZN8touchgfx4GPIO5clearENS0_7GPIO_IDE>:

/*
 * Sets a pin low.
 */
void GPIO::clear(GPIO_ID id)
{
 800e71c:	b480      	push	{r7}
 800e71e:	b083      	sub	sp, #12
 800e720:	af00      	add	r7, sp, #0
 800e722:	4603      	mov	r3, r0
 800e724:	71fb      	strb	r3, [r7, #7]
    switch (id)
 800e726:	79fb      	ldrb	r3, [r7, #7]
 800e728:	2b03      	cmp	r3, #3
 800e72a:	d80c      	bhi.n	800e746 <_ZN8touchgfx4GPIO5clearENS0_7GPIO_IDE+0x2a>
 800e72c:	a201      	add	r2, pc, #4	@ (adr r2, 800e734 <_ZN8touchgfx4GPIO5clearENS0_7GPIO_IDE+0x18>)
 800e72e:	f852 f023 	ldr.w	pc, [r2, r3, lsl #2]
 800e732:	bf00      	nop
 800e734:	0800e745 	.word	0x0800e745
 800e738:	0800e745 	.word	0x0800e745
 800e73c:	0800e745 	.word	0x0800e745
 800e740:	0800e745 	.word	0x0800e745
    {
    case GPIO::VSYNC_FREQ:
#if defined(VSYNC_FREQ_GPIO_Port) && defined(VSYNC_FREQ_Pin)
        HAL_GPIO_WritePin(VSYNC_FREQ_GPIO_Port, VSYNC_FREQ_Pin, GPIO_PIN_RESET);
#endif
        break;
 800e744:	bf00      	nop
#if defined(MCU_ACTIVE_GPIO_Port) && defined(MCU_ACTIVE_Pin)
        HAL_GPIO_WritePin(MCU_ACTIVE_GPIO_Port, MCU_ACTIVE_Pin, GPIO_PIN_RESET);
#endif
        break;
    }
}
 800e746:	bf00      	nop
 800e748:	370c      	adds	r7, #12
 800e74a:	46bd      	mov	sp, r7
 800e74c:	f85d 7b04 	ldr.w	r7, [sp], #4
 800e750:	4770      	bx	lr
 800e752:	bf00      	nop

0800e754 <_ZN8touchgfx4GPIO6toggleENS0_7GPIO_IDE>:

/*
 * Toggles a pin.
 */
void GPIO::toggle(GPIO_ID id)
{
 800e754:	b480      	push	{r7}
 800e756:	b083      	sub	sp, #12
 800e758:	af00      	add	r7, sp, #0
 800e75a:	4603      	mov	r3, r0
 800e75c:	71fb      	strb	r3, [r7, #7]
    switch (id)
 800e75e:	79fb      	ldrb	r3, [r7, #7]
 800e760:	2b03      	cmp	r3, #3
 800e762:	d80c      	bhi.n	800e77e <_ZN8touchgfx4GPIO6toggleENS0_7GPIO_IDE+0x2a>
 800e764:	a201      	add	r2, pc, #4	@ (adr r2, 800e76c <_ZN8touchgfx4GPIO6toggleENS0_7GPIO_IDE+0x18>)
 800e766:	f852 f023 	ldr.w	pc, [r2, r3, lsl #2]
 800e76a:	bf00      	nop
 800e76c:	0800e77d 	.word	0x0800e77d
 800e770:	0800e77d 	.word	0x0800e77d
 800e774:	0800e77d 	.word	0x0800e77d
 800e778:	0800e77d 	.word	0x0800e77d
    {
    case GPIO::VSYNC_FREQ:
#if defined(VSYNC_FREQ_GPIO_Port) && defined(VSYNC_FREQ_Pin)
        HAL_GPIO_TogglePin(VSYNC_FREQ_GPIO_Port, VSYNC_FREQ_Pin);
#endif
        break;
 800e77c:	bf00      	nop
#if defined(MCU_ACTIVE_GPIO_Port) && defined(MCU_ACTIVE_Pin)
        HAL_GPIO_TogglePin(MCU_ACTIVE_GPIO_Port, MCU_ACTIVE_Pin);
#endif
        break;
    }
}
 800e77e:	bf00      	nop
 800e780:	370c      	adds	r7, #12
 800e782:	46bd      	mov	sp, r7
 800e784:	f85d 7b04 	ldr.w	r7, [sp], #4
 800e788:	4770      	bx	lr
 800e78a:	bf00      	nop

0800e78c <_ZN8touchgfx3HALD1Ev>:
 800e78c:	b480      	push	{r7}
 800e78e:	b083      	sub	sp, #12
 800e790:	af00      	add	r7, sp, #0
 800e792:	6078      	str	r0, [r7, #4]
 800e794:	4a04      	ldr	r2, [pc, #16]	@ (800e7a8 <_ZN8touchgfx3HALD1Ev+0x1c>)
 800e796:	687b      	ldr	r3, [r7, #4]
 800e798:	601a      	str	r2, [r3, #0]
 800e79a:	687b      	ldr	r3, [r7, #4]
 800e79c:	4618      	mov	r0, r3
 800e79e:	370c      	adds	r7, #12
 800e7a0:	46bd      	mov	sp, r7
 800e7a2:	f85d 7b04 	ldr.w	r7, [sp], #4
 800e7a6:	4770      	bx	lr
 800e7a8:	08028ed8 	.word	0x08028ed8

0800e7ac <_ZN8touchgfx3HALD0Ev>:
 800e7ac:	b580      	push	{r7, lr}
 800e7ae:	b082      	sub	sp, #8
 800e7b0:	af00      	add	r7, sp, #0
 800e7b2:	6078      	str	r0, [r7, #4]
 800e7b4:	6878      	ldr	r0, [r7, #4]
 800e7b6:	f7ff ffe9 	bl	800e78c <_ZN8touchgfx3HALD1Ev>
 800e7ba:	217c      	movs	r1, #124	@ 0x7c
 800e7bc:	6878      	ldr	r0, [r7, #4]
 800e7be:	f017 f968 	bl	8025a92 <_ZdlPvj>
 800e7c2:	687b      	ldr	r3, [r7, #4]
 800e7c4:	4618      	mov	r0, r3
 800e7c6:	3708      	adds	r7, #8
 800e7c8:	46bd      	mov	sp, r7
 800e7ca:	bd80      	pop	{r7, pc}

0800e7cc <_ZN8touchgfx3HAL21setDisplayOrientationENS_18DisplayOrientationE>:
 800e7cc:	b480      	push	{r7}
 800e7ce:	b083      	sub	sp, #12
 800e7d0:	af00      	add	r7, sp, #0
 800e7d2:	6078      	str	r0, [r7, #4]
 800e7d4:	460b      	mov	r3, r1
 800e7d6:	70fb      	strb	r3, [r7, #3]
 800e7d8:	687b      	ldr	r3, [r7, #4]
 800e7da:	78fa      	ldrb	r2, [r7, #3]
 800e7dc:	f883 2078 	strb.w	r2, [r3, #120]	@ 0x78
 800e7e0:	687b      	ldr	r3, [r7, #4]
 800e7e2:	2201      	movs	r2, #1
 800e7e4:	f883 2079 	strb.w	r2, [r3, #121]	@ 0x79
 800e7e8:	bf00      	nop
 800e7ea:	370c      	adds	r7, #12
 800e7ec:	46bd      	mov	sp, r7
 800e7ee:	f85d 7b04 	ldr.w	r7, [sp], #4
 800e7f2:	4770      	bx	lr

0800e7f4 <_ZN8touchgfx3HAL18setFrameBufferSizeEtt>:
 800e7f4:	b580      	push	{r7, lr}
 800e7f6:	b082      	sub	sp, #8
 800e7f8:	af00      	add	r7, sp, #0
 800e7fa:	6078      	str	r0, [r7, #4]
 800e7fc:	460b      	mov	r3, r1
 800e7fe:	807b      	strh	r3, [r7, #2]
 800e800:	4613      	mov	r3, r2
 800e802:	803b      	strh	r3, [r7, #0]
 800e804:	4b0c      	ldr	r3, [pc, #48]	@ (800e838 <_ZN8touchgfx3HAL18setFrameBufferSizeEtt+0x44>)
 800e806:	881b      	ldrh	r3, [r3, #0]
 800e808:	887a      	ldrh	r2, [r7, #2]
 800e80a:	429a      	cmp	r2, r3
 800e80c:	d304      	bcc.n	800e818 <_ZN8touchgfx3HAL18setFrameBufferSizeEtt+0x24>
 800e80e:	4b0b      	ldr	r3, [pc, #44]	@ (800e83c <_ZN8touchgfx3HAL18setFrameBufferSizeEtt+0x48>)
 800e810:	881b      	ldrh	r3, [r3, #0]
 800e812:	883a      	ldrh	r2, [r7, #0]
 800e814:	429a      	cmp	r2, r3
 800e816:	d205      	bcs.n	800e824 <_ZN8touchgfx3HAL18setFrameBufferSizeEtt+0x30>
 800e818:	4b09      	ldr	r3, [pc, #36]	@ (800e840 <_ZN8touchgfx3HAL18setFrameBufferSizeEtt+0x4c>)
 800e81a:	4a0a      	ldr	r2, [pc, #40]	@ (800e844 <_ZN8touchgfx3HAL18setFrameBufferSizeEtt+0x50>)
 800e81c:	219e      	movs	r1, #158	@ 0x9e
 800e81e:	480a      	ldr	r0, [pc, #40]	@ (800e848 <_ZN8touchgfx3HAL18setFrameBufferSizeEtt+0x54>)
 800e820:	f017 f9e6 	bl	8025bf0 <__assert_func>
 800e824:	4a09      	ldr	r2, [pc, #36]	@ (800e84c <_ZN8touchgfx3HAL18setFrameBufferSizeEtt+0x58>)
 800e826:	887b      	ldrh	r3, [r7, #2]
 800e828:	8013      	strh	r3, [r2, #0]
 800e82a:	4a09      	ldr	r2, [pc, #36]	@ (800e850 <_ZN8touchgfx3HAL18setFrameBufferSizeEtt+0x5c>)
 800e82c:	883b      	ldrh	r3, [r7, #0]
 800e82e:	8013      	strh	r3, [r2, #0]
 800e830:	bf00      	nop
 800e832:	3708      	adds	r7, #8
 800e834:	46bd      	mov	sp, r7
 800e836:	bd80      	pop	{r7, pc}
 800e838:	20002f9c 	.word	0x20002f9c
 800e83c:	20002f9e 	.word	0x20002f9e
 800e840:	080275ac 	.word	0x080275ac
 800e844:	08027610 	.word	0x08027610
 800e848:	08027654 	.word	0x08027654
 800e84c:	20002fa2 	.word	0x20002fa2
 800e850:	20002fa4 	.word	0x20002fa4

0800e854 <_ZN8touchgfx3HAL11getBlitCapsEv>:
 800e854:	b580      	push	{r7, lr}
 800e856:	b082      	sub	sp, #8
 800e858:	af00      	add	r7, sp, #0
 800e85a:	6078      	str	r0, [r7, #4]
 800e85c:	687b      	ldr	r3, [r7, #4]
 800e85e:	f893 307a 	ldrb.w	r3, [r3, #122]	@ 0x7a
 800e862:	2b00      	cmp	r3, #0
 800e864:	d009      	beq.n	800e87a <_ZN8touchgfx3HAL11getBlitCapsEv+0x26>
 800e866:	687b      	ldr	r3, [r7, #4]
 800e868:	685a      	ldr	r2, [r3, #4]
 800e86a:	687b      	ldr	r3, [r7, #4]
 800e86c:	685b      	ldr	r3, [r3, #4]
 800e86e:	681b      	ldr	r3, [r3, #0]
 800e870:	681b      	ldr	r3, [r3, #0]
 800e872:	4610      	mov	r0, r2
 800e874:	4798      	blx	r3
 800e876:	4603      	mov	r3, r0
 800e878:	e000      	b.n	800e87c <_ZN8touchgfx3HAL11getBlitCapsEv+0x28>
 800e87a:	2300      	movs	r3, #0
 800e87c:	4618      	mov	r0, r3
 800e87e:	3708      	adds	r7, #8
 800e880:	46bd      	mov	sp, r7
 800e882:	bd80      	pop	{r7, pc}

0800e884 <_ZN8touchgfx3HAL15backPorchExitedEv>:
 800e884:	b580      	push	{r7, lr}
 800e886:	b082      	sub	sp, #8
 800e888:	af00      	add	r7, sp, #0
 800e88a:	6078      	str	r0, [r7, #4]
 800e88c:	6878      	ldr	r0, [r7, #4]
 800e88e:	f002 ff07 	bl	80116a0 <_ZN8touchgfx3HAL16swapFrameBuffersEv>
 800e892:	687b      	ldr	r3, [r7, #4]
 800e894:	681b      	ldr	r3, [r3, #0]
 800e896:	33ac      	adds	r3, #172	@ 0xac
 800e898:	681b      	ldr	r3, [r3, #0]
 800e89a:	6878      	ldr	r0, [r7, #4]
 800e89c:	4798      	blx	r3
 800e89e:	bf00      	nop
 800e8a0:	3708      	adds	r7, #8
 800e8a2:	46bd      	mov	sp, r7
 800e8a4:	bd80      	pop	{r7, pc}

0800e8a6 <_ZN8touchgfx3HAL9sampleKeyERh>:
 800e8a6:	b480      	push	{r7}
 800e8a8:	b083      	sub	sp, #12
 800e8aa:	af00      	add	r7, sp, #0
 800e8ac:	6078      	str	r0, [r7, #4]
 800e8ae:	6039      	str	r1, [r7, #0]
 800e8b0:	2300      	movs	r3, #0
 800e8b2:	4618      	mov	r0, r3
 800e8b4:	370c      	adds	r7, #12
 800e8b6:	46bd      	mov	sp, r7
 800e8b8:	f85d 7b04 	ldr.w	r7, [sp], #4
 800e8bc:	4770      	bx	lr
	...

0800e8c0 <_ZN8touchgfx3HAL28setFrameBufferStartAddressesEPvS1_S1_>:
 800e8c0:	b580      	push	{r7, lr}
 800e8c2:	b084      	sub	sp, #16
 800e8c4:	af00      	add	r7, sp, #0
 800e8c6:	60f8      	str	r0, [r7, #12]
 800e8c8:	60b9      	str	r1, [r7, #8]
 800e8ca:	607a      	str	r2, [r7, #4]
 800e8cc:	603b      	str	r3, [r7, #0]
 800e8ce:	68bb      	ldr	r3, [r7, #8]
 800e8d0:	2b00      	cmp	r3, #0
 800e8d2:	d106      	bne.n	800e8e2 <_ZN8touchgfx3HAL28setFrameBufferStartAddressesEPvS1_S1_+0x22>
 800e8d4:	4b0f      	ldr	r3, [pc, #60]	@ (800e914 <_ZN8touchgfx3HAL28setFrameBufferStartAddressesEPvS1_S1_+0x54>)
 800e8d6:	4a10      	ldr	r2, [pc, #64]	@ (800e918 <_ZN8touchgfx3HAL28setFrameBufferStartAddressesEPvS1_S1_+0x58>)
 800e8d8:	f240 21d2 	movw	r1, #722	@ 0x2d2
 800e8dc:	480f      	ldr	r0, [pc, #60]	@ (800e91c <_ZN8touchgfx3HAL28setFrameBufferStartAddressesEPvS1_S1_+0x5c>)
 800e8de:	f017 f987 	bl	8025bf0 <__assert_func>
 800e8e2:	68fb      	ldr	r3, [r7, #12]
 800e8e4:	68ba      	ldr	r2, [r7, #8]
 800e8e6:	63da      	str	r2, [r3, #60]	@ 0x3c
 800e8e8:	68fb      	ldr	r3, [r7, #12]
 800e8ea:	687a      	ldr	r2, [r7, #4]
 800e8ec:	641a      	str	r2, [r3, #64]	@ 0x40
 800e8ee:	687b      	ldr	r3, [r7, #4]
 800e8f0:	2b00      	cmp	r3, #0
 800e8f2:	bf14      	ite	ne
 800e8f4:	2301      	movne	r3, #1
 800e8f6:	2300      	moveq	r3, #0
 800e8f8:	b2da      	uxtb	r2, r3
 800e8fa:	4b09      	ldr	r3, [pc, #36]	@ (800e920 <_ZN8touchgfx3HAL28setFrameBufferStartAddressesEPvS1_S1_+0x60>)
 800e8fc:	701a      	strb	r2, [r3, #0]
 800e8fe:	68fb      	ldr	r3, [r7, #12]
 800e900:	681b      	ldr	r3, [r3, #0]
 800e902:	338c      	adds	r3, #140	@ 0x8c
 800e904:	681b      	ldr	r3, [r3, #0]
 800e906:	6839      	ldr	r1, [r7, #0]
 800e908:	68f8      	ldr	r0, [r7, #12]
 800e90a:	4798      	blx	r3
 800e90c:	bf00      	nop
 800e90e:	3710      	adds	r7, #16
 800e910:	46bd      	mov	sp, r7
 800e912:	bd80      	pop	{r7, pc}
 800e914:	08027698 	.word	0x08027698
 800e918:	080276d0 	.word	0x080276d0
 800e91c:	08027654 	.word	0x08027654
 800e920:	20002fa6 	.word	0x20002fa6

0800e924 <_ZN8touchgfx3HAL19setAnimationStorageEPv>:
 800e924:	b480      	push	{r7}
 800e926:	b083      	sub	sp, #12
 800e928:	af00      	add	r7, sp, #0
 800e92a:	6078      	str	r0, [r7, #4]
 800e92c:	6039      	str	r1, [r7, #0]
 800e92e:	687b      	ldr	r3, [r7, #4]
 800e930:	683a      	ldr	r2, [r7, #0]
 800e932:	645a      	str	r2, [r3, #68]	@ 0x44
 800e934:	683b      	ldr	r3, [r7, #0]
 800e936:	2b00      	cmp	r3, #0
 800e938:	bf14      	ite	ne
 800e93a:	2301      	movne	r3, #1
 800e93c:	2300      	moveq	r3, #0
 800e93e:	b2da      	uxtb	r2, r3
 800e940:	4b03      	ldr	r3, [pc, #12]	@ (800e950 <_ZN8touchgfx3HAL19setAnimationStorageEPv+0x2c>)
 800e942:	701a      	strb	r2, [r3, #0]
 800e944:	bf00      	nop
 800e946:	370c      	adds	r7, #12
 800e948:	46bd      	mov	sp, r7
 800e94a:	f85d 7b04 	ldr.w	r7, [sp], #4
 800e94e:	4770      	bx	lr
 800e950:	20002fa7 	.word	0x20002fa7

0800e954 <_ZNK8touchgfx3HAL18getFlashDataReaderEv>:
 800e954:	b480      	push	{r7}
 800e956:	b083      	sub	sp, #12
 800e958:	af00      	add	r7, sp, #0
 800e95a:	6078      	str	r0, [r7, #4]
 800e95c:	2300      	movs	r3, #0
 800e95e:	4618      	mov	r0, r3
 800e960:	370c      	adds	r7, #12
 800e962:	46bd      	mov	sp, r7
 800e964:	f85d 7b04 	ldr.w	r7, [sp], #4
 800e968:	4770      	bx	lr

0800e96a <_ZN8touchgfx3HAL9taskDelayEt>:
 800e96a:	b580      	push	{r7, lr}
 800e96c:	b082      	sub	sp, #8
 800e96e:	af00      	add	r7, sp, #0
 800e970:	6078      	str	r0, [r7, #4]
 800e972:	460b      	mov	r3, r1
 800e974:	807b      	strh	r3, [r7, #2]
 800e976:	687b      	ldr	r3, [r7, #4]
 800e978:	6b9b      	ldr	r3, [r3, #56]	@ 0x38
 800e97a:	2b00      	cmp	r3, #0
 800e97c:	d004      	beq.n	800e988 <_ZN8touchgfx3HAL9taskDelayEt+0x1e>
 800e97e:	687b      	ldr	r3, [r7, #4]
 800e980:	6b9b      	ldr	r3, [r3, #56]	@ 0x38
 800e982:	887a      	ldrh	r2, [r7, #2]
 800e984:	4610      	mov	r0, r2
 800e986:	4798      	blx	r3
 800e988:	bf00      	nop
 800e98a:	3708      	adds	r7, #8
 800e98c:	46bd      	mov	sp, r7
 800e98e:	bd80      	pop	{r7, pc}

0800e990 <_ZN8touchgfx3HAL17getTFTCurrentLineEv>:
 800e990:	b480      	push	{r7}
 800e992:	b083      	sub	sp, #12
 800e994:	af00      	add	r7, sp, #0
 800e996:	6078      	str	r0, [r7, #4]
 800e998:	f64f 73ff 	movw	r3, #65535	@ 0xffff
 800e99c:	4618      	mov	r0, r3
 800e99e:	370c      	adds	r7, #12
 800e9a0:	46bd      	mov	sp, r7
 800e9a2:	f85d 7b04 	ldr.w	r7, [sp], #4
 800e9a6:	4770      	bx	lr

0800e9a8 <_ZN8touchgfx3HAL10getDMATypeEv>:
 800e9a8:	b580      	push	{r7, lr}
 800e9aa:	b082      	sub	sp, #8
 800e9ac:	af00      	add	r7, sp, #0
 800e9ae:	6078      	str	r0, [r7, #4]
 800e9b0:	687b      	ldr	r3, [r7, #4]
 800e9b2:	685a      	ldr	r2, [r3, #4]
 800e9b4:	687b      	ldr	r3, [r7, #4]
 800e9b6:	685b      	ldr	r3, [r3, #4]
 800e9b8:	681b      	ldr	r3, [r3, #0]
 800e9ba:	3318      	adds	r3, #24
 800e9bc:	681b      	ldr	r3, [r3, #0]
 800e9be:	4610      	mov	r0, r2
 800e9c0:	4798      	blx	r3
 800e9c2:	4603      	mov	r3, r0
 800e9c4:	4618      	mov	r0, r3
 800e9c6:	3708      	adds	r7, #8
 800e9c8:	46bd      	mov	sp, r7
 800e9ca:	bd80      	pop	{r7, pc}

0800e9cc <_ZN8touchgfx3HAL31performDisplayOrientationChangeEv>:
 800e9cc:	b480      	push	{r7}
 800e9ce:	b085      	sub	sp, #20
 800e9d0:	af00      	add	r7, sp, #0
 800e9d2:	6078      	str	r0, [r7, #4]
 800e9d4:	687b      	ldr	r3, [r7, #4]
 800e9d6:	f893 2078 	ldrb.w	r2, [r3, #120]	@ 0x78
 800e9da:	687b      	ldr	r3, [r7, #4]
 800e9dc:	f893 3034 	ldrb.w	r3, [r3, #52]	@ 0x34
 800e9e0:	429a      	cmp	r2, r3
 800e9e2:	d011      	beq.n	800ea08 <_ZN8touchgfx3HAL31performDisplayOrientationChangeEv+0x3c>
 800e9e4:	4b14      	ldr	r3, [pc, #80]	@ (800ea38 <_ZN8touchgfx3HAL31performDisplayOrientationChangeEv+0x6c>)
 800e9e6:	781b      	ldrb	r3, [r3, #0]
 800e9e8:	2b00      	cmp	r3, #0
 800e9ea:	d11e      	bne.n	800ea2a <_ZN8touchgfx3HAL31performDisplayOrientationChangeEv+0x5e>
 800e9ec:	4b13      	ldr	r3, [pc, #76]	@ (800ea3c <_ZN8touchgfx3HAL31performDisplayOrientationChangeEv+0x70>)
 800e9ee:	881b      	ldrh	r3, [r3, #0]
 800e9f0:	81bb      	strh	r3, [r7, #12]
 800e9f2:	4b13      	ldr	r3, [pc, #76]	@ (800ea40 <_ZN8touchgfx3HAL31performDisplayOrientationChangeEv+0x74>)
 800e9f4:	881a      	ldrh	r2, [r3, #0]
 800e9f6:	4b11      	ldr	r3, [pc, #68]	@ (800ea3c <_ZN8touchgfx3HAL31performDisplayOrientationChangeEv+0x70>)
 800e9f8:	801a      	strh	r2, [r3, #0]
 800e9fa:	4a11      	ldr	r2, [pc, #68]	@ (800ea40 <_ZN8touchgfx3HAL31performDisplayOrientationChangeEv+0x74>)
 800e9fc:	89bb      	ldrh	r3, [r7, #12]
 800e9fe:	8013      	strh	r3, [r2, #0]
 800ea00:	4b0d      	ldr	r3, [pc, #52]	@ (800ea38 <_ZN8touchgfx3HAL31performDisplayOrientationChangeEv+0x6c>)
 800ea02:	2201      	movs	r2, #1
 800ea04:	701a      	strb	r2, [r3, #0]
 800ea06:	e010      	b.n	800ea2a <_ZN8touchgfx3HAL31performDisplayOrientationChangeEv+0x5e>
 800ea08:	4b0b      	ldr	r3, [pc, #44]	@ (800ea38 <_ZN8touchgfx3HAL31performDisplayOrientationChangeEv+0x6c>)
 800ea0a:	781b      	ldrb	r3, [r3, #0]
 800ea0c:	2b00      	cmp	r3, #0
 800ea0e:	d00c      	beq.n	800ea2a <_ZN8touchgfx3HAL31performDisplayOrientationChangeEv+0x5e>
 800ea10:	4b0a      	ldr	r3, [pc, #40]	@ (800ea3c <_ZN8touchgfx3HAL31performDisplayOrientationChangeEv+0x70>)
 800ea12:	881b      	ldrh	r3, [r3, #0]
 800ea14:	81fb      	strh	r3, [r7, #14]
 800ea16:	4b0a      	ldr	r3, [pc, #40]	@ (800ea40 <_ZN8touchgfx3HAL31performDisplayOrientationChangeEv+0x74>)
 800ea18:	881a      	ldrh	r2, [r3, #0]
 800ea1a:	4b08      	ldr	r3, [pc, #32]	@ (800ea3c <_ZN8touchgfx3HAL31performDisplayOrientationChangeEv+0x70>)
 800ea1c:	801a      	strh	r2, [r3, #0]
 800ea1e:	4a08      	ldr	r2, [pc, #32]	@ (800ea40 <_ZN8touchgfx3HAL31performDisplayOrientationChangeEv+0x74>)
 800ea20:	89fb      	ldrh	r3, [r7, #14]
 800ea22:	8013      	strh	r3, [r2, #0]
 800ea24:	4b04      	ldr	r3, [pc, #16]	@ (800ea38 <_ZN8touchgfx3HAL31performDisplayOrientationChangeEv+0x6c>)
 800ea26:	2200      	movs	r2, #0
 800ea28:	701a      	strb	r2, [r3, #0]
 800ea2a:	bf00      	nop
 800ea2c:	3714      	adds	r7, #20
 800ea2e:	46bd      	mov	sp, r7
 800ea30:	f85d 7b04 	ldr.w	r7, [sp], #4
 800ea34:	4770      	bx	lr
 800ea36:	bf00      	nop
 800ea38:	20002fa0 	.word	0x20002fa0
 800ea3c:	20002f9e 	.word	0x20002f9e
 800ea40:	20002f9c 	.word	0x20002f9c

0800ea44 <_ZN8touchgfx3HAL15InvalidateCacheEv>:
 800ea44:	b480      	push	{r7}
 800ea46:	b083      	sub	sp, #12
 800ea48:	af00      	add	r7, sp, #0
 800ea4a:	6078      	str	r0, [r7, #4]
 800ea4c:	bf00      	nop
 800ea4e:	370c      	adds	r7, #12
 800ea50:	46bd      	mov	sp, r7
 800ea52:	f85d 7b04 	ldr.w	r7, [sp], #4
 800ea56:	4770      	bx	lr

0800ea58 <_ZN8touchgfx3HAL10FlushCacheEv>:
 800ea58:	b480      	push	{r7}
 800ea5a:	b083      	sub	sp, #12
 800ea5c:	af00      	add	r7, sp, #0
 800ea5e:	6078      	str	r0, [r7, #4]
 800ea60:	bf00      	nop
 800ea62:	370c      	adds	r7, #12
 800ea64:	46bd      	mov	sp, r7
 800ea66:	f85d 7b04 	ldr.w	r7, [sp], #4
 800ea6a:	4770      	bx	lr

0800ea6c <_ZN20TouchGFXGeneratedHAL16flushFrameBufferEv>:
 800ea6c:	b580      	push	{r7, lr}
 800ea6e:	b082      	sub	sp, #8
 800ea70:	af00      	add	r7, sp, #0
 800ea72:	6078      	str	r0, [r7, #4]
 800ea74:	687b      	ldr	r3, [r7, #4]
 800ea76:	4618      	mov	r0, r3
 800ea78:	f002 f870 	bl	8010b5c <_ZN8touchgfx3HAL16flushFrameBufferEv>
 800ea7c:	bf00      	nop
 800ea7e:	3708      	adds	r7, #8
 800ea80:	46bd      	mov	sp, r7
 800ea82:	bd80      	pop	{r7, pc}

0800ea84 <_ZN20TouchGFXGeneratedHALD1Ev>:
 800ea84:	b580      	push	{r7, lr}
 800ea86:	b082      	sub	sp, #8
 800ea88:	af00      	add	r7, sp, #0
 800ea8a:	6078      	str	r0, [r7, #4]
 800ea8c:	4a05      	ldr	r2, [pc, #20]	@ (800eaa4 <_ZN20TouchGFXGeneratedHALD1Ev+0x20>)
 800ea8e:	687b      	ldr	r3, [r7, #4]
 800ea90:	601a      	str	r2, [r3, #0]
 800ea92:	687b      	ldr	r3, [r7, #4]
 800ea94:	4618      	mov	r0, r3
 800ea96:	f7ff fe79 	bl	800e78c <_ZN8touchgfx3HALD1Ev>
 800ea9a:	687b      	ldr	r3, [r7, #4]
 800ea9c:	4618      	mov	r0, r3
 800ea9e:	3708      	adds	r7, #8
 800eaa0:	46bd      	mov	sp, r7
 800eaa2:	bd80      	pop	{r7, pc}
 800eaa4:	08028d04 	.word	0x08028d04

0800eaa8 <_ZN20TouchGFXGeneratedHALD0Ev>:
 800eaa8:	b580      	push	{r7, lr}
 800eaaa:	b082      	sub	sp, #8
 800eaac:	af00      	add	r7, sp, #0
 800eaae:	6078      	str	r0, [r7, #4]
 800eab0:	6878      	ldr	r0, [r7, #4]
 800eab2:	f7ff ffe7 	bl	800ea84 <_ZN20TouchGFXGeneratedHALD1Ev>
 800eab6:	217c      	movs	r1, #124	@ 0x7c
 800eab8:	6878      	ldr	r0, [r7, #4]
 800eaba:	f016 ffea 	bl	8025a92 <_ZdlPvj>
 800eabe:	687b      	ldr	r3, [r7, #4]
 800eac0:	4618      	mov	r0, r3
 800eac2:	3708      	adds	r7, #8
 800eac4:	46bd      	mov	sp, r7
 800eac6:	bd80      	pop	{r7, pc}

0800eac8 <_ZN11TouchGFXHAL16flushFrameBufferEv>:
 800eac8:	b580      	push	{r7, lr}
 800eaca:	b082      	sub	sp, #8
 800eacc:	af00      	add	r7, sp, #0
 800eace:	6078      	str	r0, [r7, #4]
 800ead0:	687b      	ldr	r3, [r7, #4]
 800ead2:	4618      	mov	r0, r3
 800ead4:	f7ff ffca 	bl	800ea6c <_ZN20TouchGFXGeneratedHAL16flushFrameBufferEv>
 800ead8:	bf00      	nop
 800eada:	3708      	adds	r7, #8
 800eadc:	46bd      	mov	sp, r7
 800eade:	bd80      	pop	{r7, pc}

0800eae0 <_ZN11TouchGFXHAL10initializeEv>:
 800eae0:	b580      	push	{r7, lr}
 800eae2:	b082      	sub	sp, #8
 800eae4:	af00      	add	r7, sp, #0
 800eae6:	6078      	str	r0, [r7, #4]
 800eae8:	687b      	ldr	r3, [r7, #4]
 800eaea:	4618      	mov	r0, r3
 800eaec:	f001 f9aa 	bl	800fe44 <_ZN20TouchGFXGeneratedHAL10initializeEv>
 800eaf0:	bf00      	nop
 800eaf2:	3708      	adds	r7, #8
 800eaf4:	46bd      	mov	sp, r7
 800eaf6:	bd80      	pop	{r7, pc}

0800eaf8 <_ZNK11TouchGFXHAL17getTFTFrameBufferEv>:
 800eaf8:	b580      	push	{r7, lr}
 800eafa:	b082      	sub	sp, #8
 800eafc:	af00      	add	r7, sp, #0
 800eafe:	6078      	str	r0, [r7, #4]
 800eb00:	687b      	ldr	r3, [r7, #4]
 800eb02:	4618      	mov	r0, r3
 800eb04:	f001 fa1c 	bl	800ff40 <_ZNK20TouchGFXGeneratedHAL17getTFTFrameBufferEv>
 800eb08:	4603      	mov	r3, r0
 800eb0a:	4618      	mov	r0, r3
 800eb0c:	3708      	adds	r7, #8
 800eb0e:	46bd      	mov	sp, r7
 800eb10:	bd80      	pop	{r7, pc}

0800eb12 <_ZN11TouchGFXHAL17setTFTFrameBufferEPt>:
 800eb12:	b580      	push	{r7, lr}
 800eb14:	b082      	sub	sp, #8
 800eb16:	af00      	add	r7, sp, #0
 800eb18:	6078      	str	r0, [r7, #4]
 800eb1a:	6039      	str	r1, [r7, #0]
 800eb1c:	687b      	ldr	r3, [r7, #4]
 800eb1e:	6839      	ldr	r1, [r7, #0]
 800eb20:	4618      	mov	r0, r3
 800eb22:	f001 fa18 	bl	800ff56 <_ZN20TouchGFXGeneratedHAL17setTFTFrameBufferEPt>
 800eb26:	bf00      	nop
 800eb28:	3708      	adds	r7, #8
 800eb2a:	46bd      	mov	sp, r7
 800eb2c:	bd80      	pop	{r7, pc}

0800eb2e <_ZN11TouchGFXHAL16flushFrameBufferERKN8touchgfx4RectE>:
 800eb2e:	b580      	push	{r7, lr}
 800eb30:	b082      	sub	sp, #8
 800eb32:	af00      	add	r7, sp, #0
 800eb34:	6078      	str	r0, [r7, #4]
 800eb36:	6039      	str	r1, [r7, #0]
 800eb38:	687b      	ldr	r3, [r7, #4]
 800eb3a:	6839      	ldr	r1, [r7, #0]
 800eb3c:	4618      	mov	r0, r3
 800eb3e:	f001 fa15 	bl	800ff6c <_ZN20TouchGFXGeneratedHAL16flushFrameBufferERKN8touchgfx4RectE>
 800eb42:	bf00      	nop
 800eb44:	3708      	adds	r7, #8
 800eb46:	46bd      	mov	sp, r7
 800eb48:	bd80      	pop	{r7, pc}

0800eb4a <_ZN11TouchGFXHAL9blockCopyEPvPKvm>:
 800eb4a:	b580      	push	{r7, lr}
 800eb4c:	b084      	sub	sp, #16
 800eb4e:	af00      	add	r7, sp, #0
 800eb50:	60f8      	str	r0, [r7, #12]
 800eb52:	60b9      	str	r1, [r7, #8]
 800eb54:	607a      	str	r2, [r7, #4]
 800eb56:	603b      	str	r3, [r7, #0]
 800eb58:	68f8      	ldr	r0, [r7, #12]
 800eb5a:	683b      	ldr	r3, [r7, #0]
 800eb5c:	687a      	ldr	r2, [r7, #4]
 800eb5e:	68b9      	ldr	r1, [r7, #8]
 800eb60:	f001 fa47 	bl	800fff2 <_ZN20TouchGFXGeneratedHAL9blockCopyEPvPKvm>
 800eb64:	4603      	mov	r3, r0
 800eb66:	4618      	mov	r0, r3
 800eb68:	3710      	adds	r7, #16
 800eb6a:	46bd      	mov	sp, r7
 800eb6c:	bd80      	pop	{r7, pc}

0800eb6e <_ZN11TouchGFXHAL19configureInterruptsEv>:
 800eb6e:	b580      	push	{r7, lr}
 800eb70:	b082      	sub	sp, #8
 800eb72:	af00      	add	r7, sp, #0
 800eb74:	6078      	str	r0, [r7, #4]
 800eb76:	687b      	ldr	r3, [r7, #4]
 800eb78:	4618      	mov	r0, r3
 800eb7a:	f001 f993 	bl	800fea4 <_ZN20TouchGFXGeneratedHAL19configureInterruptsEv>
 800eb7e:	bf00      	nop
 800eb80:	3708      	adds	r7, #8
 800eb82:	46bd      	mov	sp, r7
 800eb84:	bd80      	pop	{r7, pc}

0800eb86 <_ZN11TouchGFXHAL16enableInterruptsEv>:
 800eb86:	b580      	push	{r7, lr}
 800eb88:	b082      	sub	sp, #8
 800eb8a:	af00      	add	r7, sp, #0
 800eb8c:	6078      	str	r0, [r7, #4]
 800eb8e:	687b      	ldr	r3, [r7, #4]
 800eb90:	4618      	mov	r0, r3
 800eb92:	f001 f991 	bl	800feb8 <_ZN20TouchGFXGeneratedHAL16enableInterruptsEv>
 800eb96:	bf00      	nop
 800eb98:	3708      	adds	r7, #8
 800eb9a:	46bd      	mov	sp, r7
 800eb9c:	bd80      	pop	{r7, pc}

0800eb9e <_ZN11TouchGFXHAL17disableInterruptsEv>:
 800eb9e:	b580      	push	{r7, lr}
 800eba0:	b082      	sub	sp, #8
 800eba2:	af00      	add	r7, sp, #0
 800eba4:	6078      	str	r0, [r7, #4]
 800eba6:	687b      	ldr	r3, [r7, #4]
 800eba8:	4618      	mov	r0, r3
 800ebaa:	f001 f98f 	bl	800fecc <_ZN20TouchGFXGeneratedHAL17disableInterruptsEv>
 800ebae:	bf00      	nop
 800ebb0:	3708      	adds	r7, #8
 800ebb2:	46bd      	mov	sp, r7
 800ebb4:	bd80      	pop	{r7, pc}

0800ebb6 <_ZN11TouchGFXHAL28enableLCDControllerInterruptEv>:
 800ebb6:	b580      	push	{r7, lr}
 800ebb8:	b082      	sub	sp, #8
 800ebba:	af00      	add	r7, sp, #0
 800ebbc:	6078      	str	r0, [r7, #4]
 800ebbe:	687b      	ldr	r3, [r7, #4]
 800ebc0:	4618      	mov	r0, r3
 800ebc2:	f001 f98d 	bl	800fee0 <_ZN20TouchGFXGeneratedHAL28enableLCDControllerInterruptEv>
 800ebc6:	bf00      	nop
 800ebc8:	3708      	adds	r7, #8
 800ebca:	46bd      	mov	sp, r7
 800ebcc:	bd80      	pop	{r7, pc}

0800ebce <_ZN11TouchGFXHAL10beginFrameEv>:
 800ebce:	b580      	push	{r7, lr}
 800ebd0:	b082      	sub	sp, #8
 800ebd2:	af00      	add	r7, sp, #0
 800ebd4:	6078      	str	r0, [r7, #4]
 800ebd6:	687b      	ldr	r3, [r7, #4]
 800ebd8:	4618      	mov	r0, r3
 800ebda:	f001 f98b 	bl	800fef4 <_ZN20TouchGFXGeneratedHAL10beginFrameEv>
 800ebde:	4603      	mov	r3, r0
 800ebe0:	4618      	mov	r0, r3
 800ebe2:	3708      	adds	r7, #8
 800ebe4:	46bd      	mov	sp, r7
 800ebe6:	bd80      	pop	{r7, pc}

0800ebe8 <_ZN11TouchGFXHAL8endFrameEv>:
 800ebe8:	b580      	push	{r7, lr}
 800ebea:	b082      	sub	sp, #8
 800ebec:	af00      	add	r7, sp, #0
 800ebee:	6078      	str	r0, [r7, #4]
 800ebf0:	687b      	ldr	r3, [r7, #4]
 800ebf2:	4618      	mov	r0, r3
 800ebf4:	f001 f98b 	bl	800ff0e <_ZN20TouchGFXGeneratedHAL8endFrameEv>
 800ebf8:	bf00      	nop
 800ebfa:	3708      	adds	r7, #8
 800ebfc:	46bd      	mov	sp, r7
 800ebfe:	bd80      	pop	{r7, pc}

0800ec00 <_ZN11TouchGFXHALD1Ev>:
 800ec00:	b580      	push	{r7, lr}
 800ec02:	b082      	sub	sp, #8
 800ec04:	af00      	add	r7, sp, #0
 800ec06:	6078      	str	r0, [r7, #4]
 800ec08:	4a05      	ldr	r2, [pc, #20]	@ (800ec20 <_ZN11TouchGFXHALD1Ev+0x20>)
 800ec0a:	687b      	ldr	r3, [r7, #4]
 800ec0c:	601a      	str	r2, [r3, #0]
 800ec0e:	687b      	ldr	r3, [r7, #4]
 800ec10:	4618      	mov	r0, r3
 800ec12:	f7ff ff37 	bl	800ea84 <_ZN20TouchGFXGeneratedHALD1Ev>
 800ec16:	687b      	ldr	r3, [r7, #4]
 800ec18:	4618      	mov	r0, r3
 800ec1a:	3708      	adds	r7, #8
 800ec1c:	46bd      	mov	sp, r7
 800ec1e:	bd80      	pop	{r7, pc}
 800ec20:	08028ab8 	.word	0x08028ab8

0800ec24 <_ZN11TouchGFXHALD0Ev>:
 800ec24:	b580      	push	{r7, lr}
 800ec26:	b082      	sub	sp, #8
 800ec28:	af00      	add	r7, sp, #0
 800ec2a:	6078      	str	r0, [r7, #4]
 800ec2c:	6878      	ldr	r0, [r7, #4]
 800ec2e:	f7ff ffe7 	bl	800ec00 <_ZN11TouchGFXHALD1Ev>
 800ec32:	217c      	movs	r1, #124	@ 0x7c
 800ec34:	6878      	ldr	r0, [r7, #4]
 800ec36:	f016 ff2c 	bl	8025a92 <_ZdlPvj>
 800ec3a:	687b      	ldr	r3, [r7, #4]
 800ec3c:	4618      	mov	r0, r3
 800ec3e:	3708      	adds	r7, #8
 800ec40:	46bd      	mov	sp, r7
 800ec42:	bd80      	pop	{r7, pc}

0800ec44 <_ZN8touchgfx10OSWrappers10initializeEv>:

/*
 * Initialize frame buffer semaphore and queue/mutex for VSYNC signal.
 */
void OSWrappers::initialize()
{
 800ec44:	b480      	push	{r7}
 800ec46:	af00      	add	r7, sp, #0
    fb_sem = 0;
 800ec48:	4b05      	ldr	r3, [pc, #20]	@ (800ec60 <_ZN8touchgfx10OSWrappers10initializeEv+0x1c>)
 800ec4a:	2200      	movs	r2, #0
 800ec4c:	601a      	str	r2, [r3, #0]
    vsync_sem = 0;
 800ec4e:	4b05      	ldr	r3, [pc, #20]	@ (800ec64 <_ZN8touchgfx10OSWrappers10initializeEv+0x20>)
 800ec50:	2200      	movs	r2, #0
 800ec52:	601a      	str	r2, [r3, #0]
}
 800ec54:	bf00      	nop
 800ec56:	46bd      	mov	sp, r7
 800ec58:	f85d 7b04 	ldr.w	r7, [sp], #4
 800ec5c:	4770      	bx	lr
 800ec5e:	bf00      	nop
 800ec60:	200006d4 	.word	0x200006d4
 800ec64:	200006d8 	.word	0x200006d8

0800ec68 <_ZN8touchgfx10OSWrappers24takeFrameBufferSemaphoreEv>:

/*
 * Take the frame buffer semaphore. Blocks until semaphore is available.
 */
void OSWrappers::takeFrameBufferSemaphore()
{
 800ec68:	b480      	push	{r7}
 800ec6a:	af00      	add	r7, sp, #0
    while (fb_sem);
 800ec6c:	bf00      	nop
 800ec6e:	4b08      	ldr	r3, [pc, #32]	@ (800ec90 <_ZN8touchgfx10OSWrappers24takeFrameBufferSemaphoreEv+0x28>)
 800ec70:	681b      	ldr	r3, [r3, #0]
 800ec72:	2b00      	cmp	r3, #0
 800ec74:	bf14      	ite	ne
 800ec76:	2301      	movne	r3, #1
 800ec78:	2300      	moveq	r3, #0
 800ec7a:	b2db      	uxtb	r3, r3
 800ec7c:	2b00      	cmp	r3, #0
 800ec7e:	d1f6      	bne.n	800ec6e <_ZN8touchgfx10OSWrappers24takeFrameBufferSemaphoreEv+0x6>
    fb_sem = 1;
 800ec80:	4b03      	ldr	r3, [pc, #12]	@ (800ec90 <_ZN8touchgfx10OSWrappers24takeFrameBufferSemaphoreEv+0x28>)
 800ec82:	2201      	movs	r2, #1
 800ec84:	601a      	str	r2, [r3, #0]
}
 800ec86:	bf00      	nop
 800ec88:	46bd      	mov	sp, r7
 800ec8a:	f85d 7b04 	ldr.w	r7, [sp], #4
 800ec8e:	4770      	bx	lr
 800ec90:	200006d4 	.word	0x200006d4

0800ec94 <_ZN8touchgfx10OSWrappers24giveFrameBufferSemaphoreEv>:

/*
 * Release the frame buffer semaphore.
 */
void OSWrappers::giveFrameBufferSemaphore()
{
 800ec94:	b480      	push	{r7}
 800ec96:	af00      	add	r7, sp, #0
    fb_sem = 0;
 800ec98:	4b03      	ldr	r3, [pc, #12]	@ (800eca8 <_ZN8touchgfx10OSWrappers24giveFrameBufferSemaphoreEv+0x14>)
 800ec9a:	2200      	movs	r2, #0
 800ec9c:	601a      	str	r2, [r3, #0]
}
 800ec9e:	bf00      	nop
 800eca0:	46bd      	mov	sp, r7
 800eca2:	f85d 7b04 	ldr.w	r7, [sp], #4
 800eca6:	4770      	bx	lr
 800eca8:	200006d4 	.word	0x200006d4

0800ecac <_ZN8touchgfx10OSWrappers27tryTakeFrameBufferSemaphoreEv>:
 *
 * Note must return immediately! This function does not care who has the taken the semaphore,
 * it only serves to make sure that the semaphore is taken by someone.
 */
void OSWrappers::tryTakeFrameBufferSemaphore()
{
 800ecac:	b480      	push	{r7}
 800ecae:	af00      	add	r7, sp, #0
    fb_sem = 1;
 800ecb0:	4b03      	ldr	r3, [pc, #12]	@ (800ecc0 <_ZN8touchgfx10OSWrappers27tryTakeFrameBufferSemaphoreEv+0x14>)
 800ecb2:	2201      	movs	r2, #1
 800ecb4:	601a      	str	r2, [r3, #0]
}
 800ecb6:	bf00      	nop
 800ecb8:	46bd      	mov	sp, r7
 800ecba:	f85d 7b04 	ldr.w	r7, [sp], #4
 800ecbe:	4770      	bx	lr
 800ecc0:	200006d4 	.word	0x200006d4

0800ecc4 <_ZN8touchgfx10OSWrappers31giveFrameBufferSemaphoreFromISREv>:
 *
 * Release the frame buffer semaphore in a way that is safe in interrupt context.
 * Called from ISR.
 */
void OSWrappers::giveFrameBufferSemaphoreFromISR()
{
 800ecc4:	b480      	push	{r7}
 800ecc6:	af00      	add	r7, sp, #0
    fb_sem = 0;
 800ecc8:	4b03      	ldr	r3, [pc, #12]	@ (800ecd8 <_ZN8touchgfx10OSWrappers31giveFrameBufferSemaphoreFromISREv+0x14>)
 800ecca:	2200      	movs	r2, #0
 800eccc:	601a      	str	r2, [r3, #0]
}
 800ecce:	bf00      	nop
 800ecd0:	46bd      	mov	sp, r7
 800ecd2:	f85d 7b04 	ldr.w	r7, [sp], #4
 800ecd6:	4770      	bx	lr
 800ecd8:	200006d4 	.word	0x200006d4

0800ecdc <_ZN8touchgfx10OSWrappers11signalVSyncEv>:
 *
 * Note This function is called from an ISR, and should (depending on OS) trigger a
 * scheduling.
 */
void OSWrappers::signalVSync()
{
 800ecdc:	b480      	push	{r7}
 800ecde:	af00      	add	r7, sp, #0
    vsync_sem = 1;
 800ece0:	4b03      	ldr	r3, [pc, #12]	@ (800ecf0 <_ZN8touchgfx10OSWrappers11signalVSyncEv+0x14>)
 800ece2:	2201      	movs	r2, #1
 800ece4:	601a      	str	r2, [r3, #0]
}
 800ece6:	bf00      	nop
 800ece8:	46bd      	mov	sp, r7
 800ecea:	f85d 7b04 	ldr.w	r7, [sp], #4
 800ecee:	4770      	bx	lr
 800ecf0:	200006d8 	.word	0x200006d8

0800ecf4 <_ZN8touchgfx10OSWrappers19signalRenderingDoneEv>:
/*
  * Signal that the rendering of the frame has completed. Used by
  * some systems to avoid using any previous vsync.
  */
void OSWrappers::signalRenderingDone()
{
 800ecf4:	b480      	push	{r7}
 800ecf6:	af00      	add	r7, sp, #0
    vsync_sem = 0;
 800ecf8:	4b03      	ldr	r3, [pc, #12]	@ (800ed08 <_ZN8touchgfx10OSWrappers19signalRenderingDoneEv+0x14>)
 800ecfa:	2200      	movs	r2, #0
 800ecfc:	601a      	str	r2, [r3, #0]
}
 800ecfe:	bf00      	nop
 800ed00:	46bd      	mov	sp, r7
 800ed02:	f85d 7b04 	ldr.w	r7, [sp], #4
 800ed06:	4770      	bx	lr
 800ed08:	200006d8 	.word	0x200006d8

0800ed0c <_ZN8touchgfx10OSWrappers16isVSyncAvailableEv>:
 * @note signalRenderingDone is typically used together with this function.
 *
 * @return True if VSync occurred.
 */
bool OSWrappers::isVSyncAvailable()
{
 800ed0c:	b480      	push	{r7}
 800ed0e:	af00      	add	r7, sp, #0
    return vsync_sem;
 800ed10:	4b05      	ldr	r3, [pc, #20]	@ (800ed28 <_ZN8touchgfx10OSWrappers16isVSyncAvailableEv+0x1c>)
 800ed12:	681b      	ldr	r3, [r3, #0]
 800ed14:	2b00      	cmp	r3, #0
 800ed16:	bf14      	ite	ne
 800ed18:	2301      	movne	r3, #1
 800ed1a:	2300      	moveq	r3, #0
 800ed1c:	b2db      	uxtb	r3, r3
}
 800ed1e:	4618      	mov	r0, r3
 800ed20:	46bd      	mov	sp, r7
 800ed22:	f85d 7b04 	ldr.w	r7, [sp], #4
 800ed26:	4770      	bx	lr
 800ed28:	200006d8 	.word	0x200006d8

0800ed2c <_ZN8touchgfx10OSWrappers12waitForVSyncEv>:
/*
 * This function check if a VSYNC has occured.
 * If VSYNC has occured, signal TouchGFX to start a rendering
 */
void OSWrappers::waitForVSync()
{
 800ed2c:	b580      	push	{r7, lr}
 800ed2e:	af00      	add	r7, sp, #0
    if (vsync_sem)
 800ed30:	4b0a      	ldr	r3, [pc, #40]	@ (800ed5c <_ZN8touchgfx10OSWrappers12waitForVSyncEv+0x30>)
 800ed32:	681b      	ldr	r3, [r3, #0]
 800ed34:	2b00      	cmp	r3, #0
 800ed36:	bf14      	ite	ne
 800ed38:	2301      	movne	r3, #1
 800ed3a:	2300      	moveq	r3, #0
 800ed3c:	b2db      	uxtb	r3, r3
 800ed3e:	2b00      	cmp	r3, #0
 800ed40:	d00a      	beq.n	800ed58 <_ZN8touchgfx10OSWrappers12waitForVSyncEv+0x2c>
    {
        vsync_sem = 0;
 800ed42:	4b06      	ldr	r3, [pc, #24]	@ (800ed5c <_ZN8touchgfx10OSWrappers12waitForVSyncEv+0x30>)
 800ed44:	2200      	movs	r2, #0
 800ed46:	601a      	str	r2, [r3, #0]
        HAL::getInstance()->backPorchExited();
 800ed48:	f7f9 fbf0 	bl	800852c <_ZN8touchgfx3HAL11getInstanceEv>
 800ed4c:	4603      	mov	r3, r0
 800ed4e:	681a      	ldr	r2, [r3, #0]
 800ed50:	3270      	adds	r2, #112	@ 0x70
 800ed52:	6812      	ldr	r2, [r2, #0]
 800ed54:	4618      	mov	r0, r3
 800ed56:	4790      	blx	r2
    }
}
 800ed58:	bf00      	nop
 800ed5a:	bd80      	pop	{r7, pc}
 800ed5c:	200006d8 	.word	0x200006d8

0800ed60 <_ZN8touchgfx9DMA_QueueD1Ev>:
 800ed60:	b480      	push	{r7}
 800ed62:	b083      	sub	sp, #12
 800ed64:	af00      	add	r7, sp, #0
 800ed66:	6078      	str	r0, [r7, #4]
 800ed68:	4a04      	ldr	r2, [pc, #16]	@ (800ed7c <_ZN8touchgfx9DMA_QueueD1Ev+0x1c>)
 800ed6a:	687b      	ldr	r3, [r7, #4]
 800ed6c:	601a      	str	r2, [r3, #0]
 800ed6e:	687b      	ldr	r3, [r7, #4]
 800ed70:	4618      	mov	r0, r3
 800ed72:	370c      	adds	r7, #12
 800ed74:	46bd      	mov	sp, r7
 800ed76:	f85d 7b04 	ldr.w	r7, [sp], #4
 800ed7a:	4770      	bx	lr
 800ed7c:	08028be0 	.word	0x08028be0

0800ed80 <_ZN8touchgfx9DMA_QueueD0Ev>:
 800ed80:	b580      	push	{r7, lr}
 800ed82:	b082      	sub	sp, #8
 800ed84:	af00      	add	r7, sp, #0
 800ed86:	6078      	str	r0, [r7, #4]
 800ed88:	6878      	ldr	r0, [r7, #4]
 800ed8a:	f7ff ffe9 	bl	800ed60 <_ZN8touchgfx9DMA_QueueD1Ev>
 800ed8e:	2104      	movs	r1, #4
 800ed90:	6878      	ldr	r0, [r7, #4]
 800ed92:	f016 fe7e 	bl	8025a92 <_ZdlPvj>
 800ed96:	687b      	ldr	r3, [r7, #4]
 800ed98:	4618      	mov	r0, r3
 800ed9a:	3708      	adds	r7, #8
 800ed9c:	46bd      	mov	sp, r7
 800ed9e:	bd80      	pop	{r7, pc}

0800eda0 <_ZN8touchgfx13DMA_Interface10initializeEv>:
 800eda0:	b480      	push	{r7}
 800eda2:	b083      	sub	sp, #12
 800eda4:	af00      	add	r7, sp, #0
 800eda6:	6078      	str	r0, [r7, #4]
 800eda8:	bf00      	nop
 800edaa:	370c      	adds	r7, #12
 800edac:	46bd      	mov	sp, r7
 800edae:	f85d 7b04 	ldr.w	r7, [sp], #4
 800edb2:	4770      	bx	lr

0800edb4 <_ZN8touchgfx13DMA_Interface10getDMATypeEv>:
 800edb4:	b480      	push	{r7}
 800edb6:	b083      	sub	sp, #12
 800edb8:	af00      	add	r7, sp, #0
 800edba:	6078      	str	r0, [r7, #4]
 800edbc:	2300      	movs	r3, #0
 800edbe:	4618      	mov	r0, r3
 800edc0:	370c      	adds	r7, #12
 800edc2:	46bd      	mov	sp, r7
 800edc4:	f85d 7b04 	ldr.w	r7, [sp], #4
 800edc8:	4770      	bx	lr
	...

0800edcc <_ZN8touchgfx13DMA_InterfaceD1Ev>:
 800edcc:	b480      	push	{r7}
 800edce:	b083      	sub	sp, #12
 800edd0:	af00      	add	r7, sp, #0
 800edd2:	6078      	str	r0, [r7, #4]
 800edd4:	4a04      	ldr	r2, [pc, #16]	@ (800ede8 <_ZN8touchgfx13DMA_InterfaceD1Ev+0x1c>)
 800edd6:	687b      	ldr	r3, [r7, #4]
 800edd8:	601a      	str	r2, [r3, #0]
 800edda:	687b      	ldr	r3, [r7, #4]
 800eddc:	4618      	mov	r0, r3
 800edde:	370c      	adds	r7, #12
 800ede0:	46bd      	mov	sp, r7
 800ede2:	f85d 7b04 	ldr.w	r7, [sp], #4
 800ede6:	4770      	bx	lr
 800ede8:	08028fb0 	.word	0x08028fb0

0800edec <_ZN8touchgfx13DMA_InterfaceD0Ev>:
 800edec:	b580      	push	{r7, lr}
 800edee:	b082      	sub	sp, #8
 800edf0:	af00      	add	r7, sp, #0
 800edf2:	6078      	str	r0, [r7, #4]
 800edf4:	6878      	ldr	r0, [r7, #4]
 800edf6:	f7ff ffe9 	bl	800edcc <_ZN8touchgfx13DMA_InterfaceD1Ev>
 800edfa:	210c      	movs	r1, #12
 800edfc:	6878      	ldr	r0, [r7, #4]
 800edfe:	f016 fe48 	bl	8025a92 <_ZdlPvj>
 800ee02:	687b      	ldr	r3, [r7, #4]
 800ee04:	4618      	mov	r0, r3
 800ee06:	3708      	adds	r7, #8
 800ee08:	46bd      	mov	sp, r7
 800ee0a:	bd80      	pop	{r7, pc}

0800ee0c <_ZN8touchgfx13DMA_InterfaceC1ERNS_9DMA_QueueE>:
 800ee0c:	b480      	push	{r7}
 800ee0e:	b083      	sub	sp, #12
 800ee10:	af00      	add	r7, sp, #0
 800ee12:	6078      	str	r0, [r7, #4]
 800ee14:	6039      	str	r1, [r7, #0]
 800ee16:	4a09      	ldr	r2, [pc, #36]	@ (800ee3c <_ZN8touchgfx13DMA_InterfaceC1ERNS_9DMA_QueueE+0x30>)
 800ee18:	687b      	ldr	r3, [r7, #4]
 800ee1a:	601a      	str	r2, [r3, #0]
 800ee1c:	687b      	ldr	r3, [r7, #4]
 800ee1e:	683a      	ldr	r2, [r7, #0]
 800ee20:	605a      	str	r2, [r3, #4]
 800ee22:	687b      	ldr	r3, [r7, #4]
 800ee24:	2200      	movs	r2, #0
 800ee26:	721a      	strb	r2, [r3, #8]
 800ee28:	687b      	ldr	r3, [r7, #4]
 800ee2a:	2200      	movs	r2, #0
 800ee2c:	725a      	strb	r2, [r3, #9]
 800ee2e:	687b      	ldr	r3, [r7, #4]
 800ee30:	4618      	mov	r0, r3
 800ee32:	370c      	adds	r7, #12
 800ee34:	46bd      	mov	sp, r7
 800ee36:	f85d 7b04 	ldr.w	r7, [sp], #4
 800ee3a:	4770      	bx	lr
 800ee3c:	08028fb0 	.word	0x08028fb0

0800ee40 <_ZN8STM32DMA18signalDMAInterruptEv>:
 800ee40:	b480      	push	{r7}
 800ee42:	b083      	sub	sp, #12
 800ee44:	af00      	add	r7, sp, #0
 800ee46:	6078      	str	r0, [r7, #4]
 800ee48:	bf00      	nop
 800ee4a:	370c      	adds	r7, #12
 800ee4c:	46bd      	mov	sp, r7
 800ee4e:	f85d 7b04 	ldr.w	r7, [sp], #4
 800ee52:	4770      	bx	lr

0800ee54 <_ZN8STM32DMA5flushEv>:
 800ee54:	b480      	push	{r7}
 800ee56:	b083      	sub	sp, #12
 800ee58:	af00      	add	r7, sp, #0
 800ee5a:	6078      	str	r0, [r7, #4]
 800ee5c:	bf00      	nop
 800ee5e:	370c      	adds	r7, #12
 800ee60:	46bd      	mov	sp, r7
 800ee62:	f85d 7b04 	ldr.w	r7, [sp], #4
 800ee66:	4770      	bx	lr

0800ee68 <_ZN8touchgfx6BlitOpC1Ev>:
 800ee68:	b580      	push	{r7, lr}
 800ee6a:	b082      	sub	sp, #8
 800ee6c:	af00      	add	r7, sp, #0
 800ee6e:	6078      	str	r0, [r7, #4]
 800ee70:	687b      	ldr	r3, [r7, #4]
 800ee72:	330c      	adds	r3, #12
 800ee74:	4618      	mov	r0, r3
 800ee76:	f7fa fca5 	bl	80097c4 <_ZN8touchgfx9colortypeC1Ev>
 800ee7a:	687b      	ldr	r3, [r7, #4]
 800ee7c:	4618      	mov	r0, r3
 800ee7e:	3708      	adds	r7, #8
 800ee80:	46bd      	mov	sp, r7
 800ee82:	bd80      	pop	{r7, pc}

0800ee84 <_ZN8STM32DMAC1Ev>:
 800ee84:	b580      	push	{r7, lr}
 800ee86:	b082      	sub	sp, #8
 800ee88:	af00      	add	r7, sp, #0
 800ee8a:	6078      	str	r0, [r7, #4]
 800ee8c:	687a      	ldr	r2, [r7, #4]
 800ee8e:	687b      	ldr	r3, [r7, #4]
 800ee90:	330c      	adds	r3, #12
 800ee92:	4619      	mov	r1, r3
 800ee94:	4610      	mov	r0, r2
 800ee96:	f7ff ffb9 	bl	800ee0c <_ZN8touchgfx13DMA_InterfaceC1ERNS_9DMA_QueueE>
 800ee9a:	4a0b      	ldr	r2, [pc, #44]	@ (800eec8 <_ZN8STM32DMAC1Ev+0x44>)
 800ee9c:	687b      	ldr	r3, [r7, #4]
 800ee9e:	601a      	str	r2, [r3, #0]
 800eea0:	687b      	ldr	r3, [r7, #4]
 800eea2:	f103 000c 	add.w	r0, r3, #12
 800eea6:	687b      	ldr	r3, [r7, #4]
 800eea8:	3320      	adds	r3, #32
 800eeaa:	2201      	movs	r2, #1
 800eeac:	4619      	mov	r1, r3
 800eeae:	f002 fd31 	bl	8011914 <_ZN8touchgfx17LockFreeDMA_QueueC1EPNS_6BlitOpEi>
 800eeb2:	687b      	ldr	r3, [r7, #4]
 800eeb4:	3320      	adds	r3, #32
 800eeb6:	4618      	mov	r0, r3
 800eeb8:	f7ff ffd6 	bl	800ee68 <_ZN8touchgfx6BlitOpC1Ev>
 800eebc:	687b      	ldr	r3, [r7, #4]
 800eebe:	4618      	mov	r0, r3
 800eec0:	3708      	adds	r7, #8
 800eec2:	46bd      	mov	sp, r7
 800eec4:	bd80      	pop	{r7, pc}
 800eec6:	bf00      	nop
 800eec8:	08028b90 	.word	0x08028b90

0800eecc <_ZN8STM32DMA11getBlitCapsEv>:
 800eecc:	b480      	push	{r7}
 800eece:	b083      	sub	sp, #12
 800eed0:	af00      	add	r7, sp, #0
 800eed2:	6078      	str	r0, [r7, #4]
 800eed4:	2300      	movs	r3, #0
 800eed6:	4618      	mov	r0, r3
 800eed8:	370c      	adds	r7, #12
 800eeda:	46bd      	mov	sp, r7
 800eedc:	f85d 7b04 	ldr.w	r7, [sp], #4
 800eee0:	4770      	bx	lr
	...

0800eee4 <_ZN8STM32DMA13setupDataCopyERKN8touchgfx6BlitOpE>:
 800eee4:	b580      	push	{r7, lr}
 800eee6:	b082      	sub	sp, #8
 800eee8:	af00      	add	r7, sp, #0
 800eeea:	6078      	str	r0, [r7, #4]
 800eeec:	6039      	str	r1, [r7, #0]
 800eeee:	4b03      	ldr	r3, [pc, #12]	@ (800eefc <_ZN8STM32DMA13setupDataCopyERKN8touchgfx6BlitOpE+0x18>)
 800eef0:	4a03      	ldr	r2, [pc, #12]	@ (800ef00 <_ZN8STM32DMA13setupDataCopyERKN8touchgfx6BlitOpE+0x1c>)
 800eef2:	2122      	movs	r1, #34	@ 0x22
 800eef4:	4803      	ldr	r0, [pc, #12]	@ (800ef04 <_ZN8STM32DMA13setupDataCopyERKN8touchgfx6BlitOpE+0x20>)
 800eef6:	f016 fe7b 	bl	8025bf0 <__assert_func>
 800eefa:	bf00      	nop
 800eefc:	08027720 	.word	0x08027720
 800ef00:	08027744 	.word	0x08027744
 800ef04:	08027784 	.word	0x08027784

0800ef08 <_ZN8STM32DMA13setupDataFillERKN8touchgfx6BlitOpE>:
 800ef08:	b580      	push	{r7, lr}
 800ef0a:	b082      	sub	sp, #8
 800ef0c:	af00      	add	r7, sp, #0
 800ef0e:	6078      	str	r0, [r7, #4]
 800ef10:	6039      	str	r1, [r7, #0]
 800ef12:	4b03      	ldr	r3, [pc, #12]	@ (800ef20 <_ZN8STM32DMA13setupDataFillERKN8touchgfx6BlitOpE+0x18>)
 800ef14:	4a03      	ldr	r2, [pc, #12]	@ (800ef24 <_ZN8STM32DMA13setupDataFillERKN8touchgfx6BlitOpE+0x1c>)
 800ef16:	2127      	movs	r1, #39	@ 0x27
 800ef18:	4803      	ldr	r0, [pc, #12]	@ (800ef28 <_ZN8STM32DMA13setupDataFillERKN8touchgfx6BlitOpE+0x20>)
 800ef1a:	f016 fe69 	bl	8025bf0 <__assert_func>
 800ef1e:	bf00      	nop
 800ef20:	08027720 	.word	0x08027720
 800ef24:	080277b0 	.word	0x080277b0
 800ef28:	08027784 	.word	0x08027784

0800ef2c <_ZN8STM32DMAD1Ev>:
 800ef2c:	b580      	push	{r7, lr}
 800ef2e:	b082      	sub	sp, #8
 800ef30:	af00      	add	r7, sp, #0
 800ef32:	6078      	str	r0, [r7, #4]
 800ef34:	4a08      	ldr	r2, [pc, #32]	@ (800ef58 <_ZN8STM32DMAD1Ev+0x2c>)
 800ef36:	687b      	ldr	r3, [r7, #4]
 800ef38:	601a      	str	r2, [r3, #0]
 800ef3a:	687b      	ldr	r3, [r7, #4]
 800ef3c:	330c      	adds	r3, #12
 800ef3e:	4618      	mov	r0, r3
 800ef40:	f000 f81c 	bl	800ef7c <_ZN8touchgfx17LockFreeDMA_QueueD1Ev>
 800ef44:	687b      	ldr	r3, [r7, #4]
 800ef46:	4618      	mov	r0, r3
 800ef48:	f7ff ff40 	bl	800edcc <_ZN8touchgfx13DMA_InterfaceD1Ev>
 800ef4c:	687b      	ldr	r3, [r7, #4]
 800ef4e:	4618      	mov	r0, r3
 800ef50:	3708      	adds	r7, #8
 800ef52:	46bd      	mov	sp, r7
 800ef54:	bd80      	pop	{r7, pc}
 800ef56:	bf00      	nop
 800ef58:	08028b90 	.word	0x08028b90

0800ef5c <_ZN8STM32DMAD0Ev>:
 800ef5c:	b580      	push	{r7, lr}
 800ef5e:	b082      	sub	sp, #8
 800ef60:	af00      	add	r7, sp, #0
 800ef62:	6078      	str	r0, [r7, #4]
 800ef64:	6878      	ldr	r0, [r7, #4]
 800ef66:	f7ff ffe1 	bl	800ef2c <_ZN8STM32DMAD1Ev>
 800ef6a:	2144      	movs	r1, #68	@ 0x44
 800ef6c:	6878      	ldr	r0, [r7, #4]
 800ef6e:	f016 fd90 	bl	8025a92 <_ZdlPvj>
 800ef72:	687b      	ldr	r3, [r7, #4]
 800ef74:	4618      	mov	r0, r3
 800ef76:	3708      	adds	r7, #8
 800ef78:	46bd      	mov	sp, r7
 800ef7a:	bd80      	pop	{r7, pc}

0800ef7c <_ZN8touchgfx17LockFreeDMA_QueueD1Ev>:
 800ef7c:	b580      	push	{r7, lr}
 800ef7e:	b082      	sub	sp, #8
 800ef80:	af00      	add	r7, sp, #0
 800ef82:	6078      	str	r0, [r7, #4]
 800ef84:	4a05      	ldr	r2, [pc, #20]	@ (800ef9c <_ZN8touchgfx17LockFreeDMA_QueueD1Ev+0x20>)
 800ef86:	687b      	ldr	r3, [r7, #4]
 800ef88:	601a      	str	r2, [r3, #0]
 800ef8a:	687b      	ldr	r3, [r7, #4]
 800ef8c:	4618      	mov	r0, r3
 800ef8e:	f7ff fee7 	bl	800ed60 <_ZN8touchgfx9DMA_QueueD1Ev>
 800ef92:	687b      	ldr	r3, [r7, #4]
 800ef94:	4618      	mov	r0, r3
 800ef96:	3708      	adds	r7, #8
 800ef98:	46bd      	mov	sp, r7
 800ef9a:	bd80      	pop	{r7, pc}
 800ef9c:	08029000 	.word	0x08029000

0800efa0 <_ZN8touchgfx17LockFreeDMA_QueueD0Ev>:
 800efa0:	b580      	push	{r7, lr}
 800efa2:	b082      	sub	sp, #8
 800efa4:	af00      	add	r7, sp, #0
 800efa6:	6078      	str	r0, [r7, #4]
 800efa8:	6878      	ldr	r0, [r7, #4]
 800efaa:	f7ff ffe7 	bl	800ef7c <_ZN8touchgfx17LockFreeDMA_QueueD1Ev>
 800efae:	2114      	movs	r1, #20
 800efb0:	6878      	ldr	r0, [r7, #4]
 800efb2:	f016 fd6e 	bl	8025a92 <_ZdlPvj>
 800efb6:	687b      	ldr	r3, [r7, #4]
 800efb8:	4618      	mov	r0, r3
 800efba:	3708      	adds	r7, #8
 800efbc:	46bd      	mov	sp, r7
 800efbe:	bd80      	pop	{r7, pc}

0800efc0 <_ZN8touchgfx9TypedText13registerTextsEPKNS_5TextsE>:
     * Registers an array of texts. This function is called automatically from
     * touchgfx_generic_init(). Should not be called under normal circumstances.
     *
     * @param  t The array of texts.
     */
    static void registerTexts(const Texts* t)
 800efc0:	b480      	push	{r7}
 800efc2:	b083      	sub	sp, #12
 800efc4:	af00      	add	r7, sp, #0
 800efc6:	6078      	str	r0, [r7, #4]
    {
        texts = t;
 800efc8:	4a04      	ldr	r2, [pc, #16]	@ (800efdc <_ZN8touchgfx9TypedText13registerTextsEPKNS_5TextsE+0x1c>)
 800efca:	687b      	ldr	r3, [r7, #4]
 800efcc:	6013      	str	r3, [r2, #0]
    }
 800efce:	bf00      	nop
 800efd0:	370c      	adds	r7, #12
 800efd2:	46bd      	mov	sp, r7
 800efd4:	f85d 7b04 	ldr.w	r7, [sp], #4
 800efd8:	4770      	bx	lr
 800efda:	bf00      	nop
 800efdc:	20003004 	.word	0x20003004

0800efe0 <_ZN8touchgfx7MVPHeapC1ERNS_17AbstractPartitionES2_S2_RNS_14MVPApplicationE>:
     * @param [in] scr  A memory partition containing enough memory to hold the largest view.
     * @param [in] tra  A memory partition containing enough memory to hold the largest
     *                  transition.
     * @param [in] app  A reference to the MVPApplication instance.
     */
    MVPHeap(AbstractPartition& pres,
 800efe0:	b480      	push	{r7}
 800efe2:	b085      	sub	sp, #20
 800efe4:	af00      	add	r7, sp, #0
 800efe6:	60f8      	str	r0, [r7, #12]
 800efe8:	60b9      	str	r1, [r7, #8]
 800efea:	607a      	str	r2, [r7, #4]
 800efec:	603b      	str	r3, [r7, #0]
            AbstractPartition& tra,
            MVPApplication& app)
        : presenterStorage(pres),
          screenStorage(scr),
          transitionStorage(tra),
          frontendApplication(app)
 800efee:	4a0b      	ldr	r2, [pc, #44]	@ (800f01c <_ZN8touchgfx7MVPHeapC1ERNS_17AbstractPartitionES2_S2_RNS_14MVPApplicationE+0x3c>)
 800eff0:	68fb      	ldr	r3, [r7, #12]
 800eff2:	601a      	str	r2, [r3, #0]
        : presenterStorage(pres),
 800eff4:	68fb      	ldr	r3, [r7, #12]
 800eff6:	68ba      	ldr	r2, [r7, #8]
 800eff8:	605a      	str	r2, [r3, #4]
          screenStorage(scr),
 800effa:	68fb      	ldr	r3, [r7, #12]
 800effc:	687a      	ldr	r2, [r7, #4]
 800effe:	609a      	str	r2, [r3, #8]
          transitionStorage(tra),
 800f000:	68fb      	ldr	r3, [r7, #12]
 800f002:	683a      	ldr	r2, [r7, #0]
 800f004:	60da      	str	r2, [r3, #12]
          frontendApplication(app)
 800f006:	68fb      	ldr	r3, [r7, #12]
 800f008:	69ba      	ldr	r2, [r7, #24]
 800f00a:	611a      	str	r2, [r3, #16]
    {
    }
 800f00c:	68fb      	ldr	r3, [r7, #12]
 800f00e:	4618      	mov	r0, r3
 800f010:	3714      	adds	r7, #20
 800f012:	46bd      	mov	sp, r7
 800f014:	f85d 7b04 	ldr.w	r7, [sp], #4
 800f018:	4770      	bx	lr
 800f01a:	bf00      	nop
 800f01c:	08028cc8 	.word	0x08028cc8

0800f020 <_ZN8touchgfx7MVPHeapD1Ev>:

    /** Finalizes an instance of the MVPHeap class. */
    virtual ~MVPHeap()
 800f020:	b480      	push	{r7}
 800f022:	b083      	sub	sp, #12
 800f024:	af00      	add	r7, sp, #0
 800f026:	6078      	str	r0, [r7, #4]
    {
 800f028:	4a04      	ldr	r2, [pc, #16]	@ (800f03c <_ZN8touchgfx7MVPHeapD1Ev+0x1c>)
 800f02a:	687b      	ldr	r3, [r7, #4]
 800f02c:	601a      	str	r2, [r3, #0]
    }
 800f02e:	687b      	ldr	r3, [r7, #4]
 800f030:	4618      	mov	r0, r3
 800f032:	370c      	adds	r7, #12
 800f034:	46bd      	mov	sp, r7
 800f036:	f85d 7b04 	ldr.w	r7, [sp], #4
 800f03a:	4770      	bx	lr
 800f03c:	08028cc8 	.word	0x08028cc8

0800f040 <_ZN8touchgfx7MVPHeapD0Ev>:
    virtual ~MVPHeap()
 800f040:	b580      	push	{r7, lr}
 800f042:	b082      	sub	sp, #8
 800f044:	af00      	add	r7, sp, #0
 800f046:	6078      	str	r0, [r7, #4]
    }
 800f048:	6878      	ldr	r0, [r7, #4]
 800f04a:	f7ff ffe9 	bl	800f020 <_ZN8touchgfx7MVPHeapD1Ev>
 800f04e:	2114      	movs	r1, #20
 800f050:	6878      	ldr	r0, [r7, #4]
 800f052:	f016 fd1e 	bl	8025a92 <_ZdlPvj>
 800f056:	687b      	ldr	r3, [r7, #4]
 800f058:	4618      	mov	r0, r3
 800f05a:	3708      	adds	r7, #8
 800f05c:	46bd      	mov	sp, r7
 800f05e:	bd80      	pop	{r7, pc}

0800f060 <_ZN8touchgfx3LCDD1Ev>:
        : textureMapperClass(0), vectorFontRenderer(0)
    {
    }

    /** Finalizes an instance of the LCD class. */
    virtual ~LCD()
 800f060:	b480      	push	{r7}
 800f062:	b083      	sub	sp, #12
 800f064:	af00      	add	r7, sp, #0
 800f066:	6078      	str	r0, [r7, #4]
    {
 800f068:	4a04      	ldr	r2, [pc, #16]	@ (800f07c <_ZN8touchgfx3LCDD1Ev+0x1c>)
 800f06a:	687b      	ldr	r3, [r7, #4]
 800f06c:	601a      	str	r2, [r3, #0]
    }
 800f06e:	687b      	ldr	r3, [r7, #4]
 800f070:	4618      	mov	r0, r3
 800f072:	370c      	adds	r7, #12
 800f074:	46bd      	mov	sp, r7
 800f076:	f85d 7b04 	ldr.w	r7, [sp], #4
 800f07a:	4770      	bx	lr
 800f07c:	080293e4 	.word	0x080293e4

0800f080 <_ZN8touchgfx3LCDD0Ev>:
    virtual ~LCD()
 800f080:	b580      	push	{r7, lr}
 800f082:	b082      	sub	sp, #8
 800f084:	af00      	add	r7, sp, #0
 800f086:	6078      	str	r0, [r7, #4]
    }
 800f088:	6878      	ldr	r0, [r7, #4]
 800f08a:	f7ff ffe9 	bl	800f060 <_ZN8touchgfx3LCDD1Ev>
 800f08e:	210c      	movs	r1, #12
 800f090:	6878      	ldr	r0, [r7, #4]
 800f092:	f016 fcfe 	bl	8025a92 <_ZdlPvj>
 800f096:	687b      	ldr	r3, [r7, #4]
 800f098:	4618      	mov	r0, r3
 800f09a:	3708      	adds	r7, #8
 800f09c:	46bd      	mov	sp, r7
 800f09e:	bd80      	pop	{r7, pc}

0800f0a0 <_ZN8touchgfx8Gestures9DragStateC1Ev>:
    static const uint8_t MIN_VELOCITY_AT_RELEASE_BEFORE_SWIPE = 3;

    /** Defines the state of a drag. */
    struct DragState
    {
        DragState()
 800f0a0:	b480      	push	{r7}
 800f0a2:	b083      	sub	sp, #12
 800f0a4:	af00      	add	r7, sp, #0
 800f0a6:	6078      	str	r0, [r7, #4]
            : startX(0),
 800f0a8:	687b      	ldr	r3, [r7, #4]
 800f0aa:	2200      	movs	r2, #0
 800f0ac:	801a      	strh	r2, [r3, #0]
              startY(0),
 800f0ae:	687b      	ldr	r3, [r7, #4]
 800f0b0:	2200      	movs	r2, #0
 800f0b2:	805a      	strh	r2, [r3, #2]
              downX(0),
 800f0b4:	687b      	ldr	r3, [r7, #4]
 800f0b6:	2200      	movs	r2, #0
 800f0b8:	809a      	strh	r2, [r3, #4]
              downY(0),
 800f0ba:	687b      	ldr	r3, [r7, #4]
 800f0bc:	2200      	movs	r2, #0
 800f0be:	80da      	strh	r2, [r3, #6]
              tickCount(0),
 800f0c0:	687b      	ldr	r3, [r7, #4]
 800f0c2:	2200      	movs	r2, #0
 800f0c4:	811a      	strh	r2, [r3, #8]
              velocityX(0),
 800f0c6:	687b      	ldr	r3, [r7, #4]
 800f0c8:	2200      	movs	r2, #0
 800f0ca:	815a      	strh	r2, [r3, #10]
              velocityY(0),
 800f0cc:	687b      	ldr	r3, [r7, #4]
 800f0ce:	2200      	movs	r2, #0
 800f0d0:	819a      	strh	r2, [r3, #12]
              inProgress(false)
 800f0d2:	687b      	ldr	r3, [r7, #4]
 800f0d4:	2200      	movs	r2, #0
 800f0d6:	739a      	strb	r2, [r3, #14]
        {
        }
 800f0d8:	687b      	ldr	r3, [r7, #4]
 800f0da:	4618      	mov	r0, r3
 800f0dc:	370c      	adds	r7, #12
 800f0de:	46bd      	mov	sp, r7
 800f0e0:	f85d 7b04 	ldr.w	r7, [sp], #4
 800f0e4:	4770      	bx	lr

0800f0e6 <_ZN8touchgfx8GesturesC1Ev>:
        bool inProgress;    ///< Whether a drag is in progress or not
    };

public:
    /** Default constructor. Does nothing. */
    Gestures()
 800f0e6:	b580      	push	{r7, lr}
 800f0e8:	b082      	sub	sp, #8
 800f0ea:	af00      	add	r7, sp, #0
 800f0ec:	6078      	str	r0, [r7, #4]
        : drag(), listener(0), dragThresholdValue(0)
 800f0ee:	687b      	ldr	r3, [r7, #4]
 800f0f0:	4618      	mov	r0, r3
 800f0f2:	f7ff ffd5 	bl	800f0a0 <_ZN8touchgfx8Gestures9DragStateC1Ev>
 800f0f6:	687b      	ldr	r3, [r7, #4]
 800f0f8:	2200      	movs	r2, #0
 800f0fa:	611a      	str	r2, [r3, #16]
 800f0fc:	687b      	ldr	r3, [r7, #4]
 800f0fe:	2200      	movs	r2, #0
 800f100:	829a      	strh	r2, [r3, #20]
    {
    }
 800f102:	687b      	ldr	r3, [r7, #4]
 800f104:	4618      	mov	r0, r3
 800f106:	3708      	adds	r7, #8
 800f108:	46bd      	mov	sp, r7
 800f10a:	bd80      	pop	{r7, pc}

0800f10c <_ZN8touchgfx3HALC1ERNS_13DMA_InterfaceERNS_3LCDERNS_15TouchControllerEtt>:
    HAL(DMA_Interface& dmaInterface, LCD& display, TouchController& touchCtrl, uint16_t width, uint16_t height)
 800f10c:	b580      	push	{r7, lr}
 800f10e:	b084      	sub	sp, #16
 800f110:	af00      	add	r7, sp, #0
 800f112:	60f8      	str	r0, [r7, #12]
 800f114:	60b9      	str	r1, [r7, #8]
 800f116:	607a      	str	r2, [r7, #4]
 800f118:	603b      	str	r3, [r7, #0]
          lastRenderMethod(HARDWARE)
 800f11a:	4a55      	ldr	r2, [pc, #340]	@ (800f270 <_ZN8touchgfx3HALC1ERNS_13DMA_InterfaceERNS_3LCDERNS_15TouchControllerEtt+0x164>)
 800f11c:	68fb      	ldr	r3, [r7, #12]
 800f11e:	601a      	str	r2, [r3, #0]
        : dma(dmaInterface),
 800f120:	68fb      	ldr	r3, [r7, #12]
 800f122:	68ba      	ldr	r2, [r7, #8]
 800f124:	605a      	str	r2, [r3, #4]
          lcdRef(display),
 800f126:	68fb      	ldr	r3, [r7, #12]
 800f128:	687a      	ldr	r2, [r7, #4]
 800f12a:	609a      	str	r2, [r3, #8]
          touchController(touchCtrl),
 800f12c:	68fb      	ldr	r3, [r7, #12]
 800f12e:	683a      	ldr	r2, [r7, #0]
 800f130:	60da      	str	r2, [r3, #12]
          mcuInstrumentation(0),
 800f132:	68fb      	ldr	r3, [r7, #12]
 800f134:	2200      	movs	r2, #0
 800f136:	611a      	str	r2, [r3, #16]
          buttonController(0),
 800f138:	68fb      	ldr	r3, [r7, #12]
 800f13a:	2200      	movs	r2, #0
 800f13c:	615a      	str	r2, [r3, #20]
          frameBufferAllocator(0),
 800f13e:	68fb      	ldr	r3, [r7, #12]
 800f140:	2200      	movs	r2, #0
 800f142:	619a      	str	r2, [r3, #24]
          gestures(),
 800f144:	68fb      	ldr	r3, [r7, #12]
 800f146:	331c      	adds	r3, #28
 800f148:	4618      	mov	r0, r3
 800f14a:	f7ff ffcc 	bl	800f0e6 <_ZN8touchgfx8GesturesC1Ev>
          nativeDisplayOrientation(ORIENTATION_LANDSCAPE),
 800f14e:	68fb      	ldr	r3, [r7, #12]
 800f150:	2200      	movs	r2, #0
 800f152:	f883 2034 	strb.w	r2, [r3, #52]	@ 0x34
          taskDelayFunc(0),
 800f156:	68fb      	ldr	r3, [r7, #12]
 800f158:	2200      	movs	r2, #0
 800f15a:	639a      	str	r2, [r3, #56]	@ 0x38
          frameBuffer0(0),
 800f15c:	68fb      	ldr	r3, [r7, #12]
 800f15e:	2200      	movs	r2, #0
 800f160:	63da      	str	r2, [r3, #60]	@ 0x3c
          frameBuffer1(0),
 800f162:	68fb      	ldr	r3, [r7, #12]
 800f164:	2200      	movs	r2, #0
 800f166:	641a      	str	r2, [r3, #64]	@ 0x40
          frameBuffer2(0),
 800f168:	68fb      	ldr	r3, [r7, #12]
 800f16a:	2200      	movs	r2, #0
 800f16c:	645a      	str	r2, [r3, #68]	@ 0x44
          refreshStrategy(REFRESH_STRATEGY_DEFAULT),
 800f16e:	68fb      	ldr	r3, [r7, #12]
 800f170:	2200      	movs	r2, #0
 800f172:	f883 2048 	strb.w	r2, [r3, #72]	@ 0x48
          fingerSize(1),
 800f176:	68fb      	ldr	r3, [r7, #12]
 800f178:	2201      	movs	r2, #1
 800f17a:	f883 2049 	strb.w	r2, [r3, #73]	@ 0x49
          lockDMAToPorch(false),
 800f17e:	68fb      	ldr	r3, [r7, #12]
 800f180:	2200      	movs	r2, #0
 800f182:	f883 204a 	strb.w	r2, [r3, #74]	@ 0x4a
          frameBufferUpdatedThisFrame(false),
 800f186:	68fb      	ldr	r3, [r7, #12]
 800f188:	2200      	movs	r2, #0
 800f18a:	f883 204b 	strb.w	r2, [r3, #75]	@ 0x4b
          auxiliaryLCD(0),
 800f18e:	68fb      	ldr	r3, [r7, #12]
 800f190:	2200      	movs	r2, #0
 800f192:	64da      	str	r2, [r3, #76]	@ 0x4c
          partialFrameBufferRect(),
 800f194:	68fb      	ldr	r3, [r7, #12]
 800f196:	3350      	adds	r3, #80	@ 0x50
 800f198:	4618      	mov	r0, r3
 800f19a:	f7fa fb30 	bl	80097fe <_ZN8touchgfx4RectC1Ev>
          useAuxiliaryLCD(false),
 800f19e:	68fb      	ldr	r3, [r7, #12]
 800f1a0:	2200      	movs	r2, #0
 800f1a2:	f883 2058 	strb.w	r2, [r3, #88]	@ 0x58
          listener(0),
 800f1a6:	68fb      	ldr	r3, [r7, #12]
 800f1a8:	2200      	movs	r2, #0
 800f1aa:	65da      	str	r2, [r3, #92]	@ 0x5c
          lastX(0),
 800f1ac:	68fb      	ldr	r3, [r7, #12]
 800f1ae:	2200      	movs	r2, #0
 800f1b0:	661a      	str	r2, [r3, #96]	@ 0x60
          lastY(0),
 800f1b2:	68fb      	ldr	r3, [r7, #12]
 800f1b4:	2200      	movs	r2, #0
 800f1b6:	665a      	str	r2, [r3, #100]	@ 0x64
          touchSampleRate(1),
 800f1b8:	68fb      	ldr	r3, [r7, #12]
 800f1ba:	2201      	movs	r2, #1
 800f1bc:	f883 2068 	strb.w	r2, [r3, #104]	@ 0x68
          mcuLoadPct(0),
 800f1c0:	68fb      	ldr	r3, [r7, #12]
 800f1c2:	2200      	movs	r2, #0
 800f1c4:	f883 2069 	strb.w	r2, [r3, #105]	@ 0x69
          vSyncCnt(0),
 800f1c8:	68fb      	ldr	r3, [r7, #12]
 800f1ca:	2200      	movs	r2, #0
 800f1cc:	f883 206a 	strb.w	r2, [r3, #106]	@ 0x6a
          vSyncForFrame(1),
 800f1d0:	68fb      	ldr	r3, [r7, #12]
 800f1d2:	2201      	movs	r2, #1
 800f1d4:	f883 206b 	strb.w	r2, [r3, #107]	@ 0x6b
          vSyncCompensationEnabled(false),
 800f1d8:	68fb      	ldr	r3, [r7, #12]
 800f1da:	2200      	movs	r2, #0
 800f1dc:	f883 206c 	strb.w	r2, [r3, #108]	@ 0x6c
          clientDirty(false),
 800f1e0:	68fb      	ldr	r3, [r7, #12]
 800f1e2:	2200      	movs	r2, #0
 800f1e4:	f883 206d 	strb.w	r2, [r3, #109]	@ 0x6d
          swapRequested(false),
 800f1e8:	68fb      	ldr	r3, [r7, #12]
 800f1ea:	2200      	movs	r2, #0
 800f1ec:	f883 206e 	strb.w	r2, [r3, #110]	@ 0x6e
          lastTouched(false),
 800f1f0:	68fb      	ldr	r3, [r7, #12]
 800f1f2:	2200      	movs	r2, #0
 800f1f4:	f883 206f 	strb.w	r2, [r3, #111]	@ 0x6f
          updateMCULoad(0),
 800f1f8:	68fb      	ldr	r3, [r7, #12]
 800f1fa:	2200      	movs	r2, #0
 800f1fc:	f883 2070 	strb.w	r2, [r3, #112]	@ 0x70
          cc_begin(0),
 800f200:	68fb      	ldr	r3, [r7, #12]
 800f202:	2200      	movs	r2, #0
 800f204:	675a      	str	r2, [r3, #116]	@ 0x74
          requestedOrientation(ORIENTATION_LANDSCAPE),
 800f206:	68fb      	ldr	r3, [r7, #12]
 800f208:	2200      	movs	r2, #0
 800f20a:	f883 2078 	strb.w	r2, [r3, #120]	@ 0x78
          displayOrientationChangeRequested(false),
 800f20e:	68fb      	ldr	r3, [r7, #12]
 800f210:	2200      	movs	r2, #0
 800f212:	f883 2079 	strb.w	r2, [r3, #121]	@ 0x79
          useDMAAcceleration(true),
 800f216:	68fb      	ldr	r3, [r7, #12]
 800f218:	2201      	movs	r2, #1
 800f21a:	f883 207a 	strb.w	r2, [r3, #122]	@ 0x7a
          lastRenderMethod(HARDWARE)
 800f21e:	68fb      	ldr	r3, [r7, #12]
 800f220:	2201      	movs	r2, #1
 800f222:	f883 207b 	strb.w	r2, [r3, #123]	@ 0x7b
        instance = this;
 800f226:	4a13      	ldr	r2, [pc, #76]	@ (800f274 <_ZN8touchgfx3HALC1ERNS_13DMA_InterfaceERNS_3LCDERNS_15TouchControllerEtt+0x168>)
 800f228:	68fb      	ldr	r3, [r7, #12]
 800f22a:	6013      	str	r3, [r2, #0]
        FRAME_BUFFER_WIDTH = DISPLAY_WIDTH = width;
 800f22c:	4a12      	ldr	r2, [pc, #72]	@ (800f278 <_ZN8touchgfx3HALC1ERNS_13DMA_InterfaceERNS_3LCDERNS_15TouchControllerEtt+0x16c>)
 800f22e:	8b3b      	ldrh	r3, [r7, #24]
 800f230:	8013      	strh	r3, [r2, #0]
 800f232:	4b11      	ldr	r3, [pc, #68]	@ (800f278 <_ZN8touchgfx3HALC1ERNS_13DMA_InterfaceERNS_3LCDERNS_15TouchControllerEtt+0x16c>)
 800f234:	881a      	ldrh	r2, [r3, #0]
 800f236:	4b11      	ldr	r3, [pc, #68]	@ (800f27c <_ZN8touchgfx3HALC1ERNS_13DMA_InterfaceERNS_3LCDERNS_15TouchControllerEtt+0x170>)
 800f238:	801a      	strh	r2, [r3, #0]
        FRAME_BUFFER_HEIGHT = DISPLAY_HEIGHT = height;
 800f23a:	4a11      	ldr	r2, [pc, #68]	@ (800f280 <_ZN8touchgfx3HALC1ERNS_13DMA_InterfaceERNS_3LCDERNS_15TouchControllerEtt+0x174>)
 800f23c:	8bbb      	ldrh	r3, [r7, #28]
 800f23e:	8013      	strh	r3, [r2, #0]
 800f240:	4b0f      	ldr	r3, [pc, #60]	@ (800f280 <_ZN8touchgfx3HALC1ERNS_13DMA_InterfaceERNS_3LCDERNS_15TouchControllerEtt+0x174>)
 800f242:	881a      	ldrh	r2, [r3, #0]
 800f244:	4b0f      	ldr	r3, [pc, #60]	@ (800f284 <_ZN8touchgfx3HALC1ERNS_13DMA_InterfaceERNS_3LCDERNS_15TouchControllerEtt+0x178>)
 800f246:	801a      	strh	r2, [r3, #0]
        DISPLAY_ROTATION = rotate0;
 800f248:	4b0f      	ldr	r3, [pc, #60]	@ (800f288 <_ZN8touchgfx3HALC1ERNS_13DMA_InterfaceERNS_3LCDERNS_15TouchControllerEtt+0x17c>)
 800f24a:	2200      	movs	r2, #0
 800f24c:	701a      	strb	r2, [r3, #0]
        nativeDisplayOrientation = ((width >= height) ? ORIENTATION_LANDSCAPE : ORIENTATION_PORTRAIT);
 800f24e:	8b3a      	ldrh	r2, [r7, #24]
 800f250:	8bbb      	ldrh	r3, [r7, #28]
 800f252:	429a      	cmp	r2, r3
 800f254:	bf34      	ite	cc
 800f256:	2301      	movcc	r3, #1
 800f258:	2300      	movcs	r3, #0
 800f25a:	b2db      	uxtb	r3, r3
 800f25c:	461a      	mov	r2, r3
 800f25e:	68fb      	ldr	r3, [r7, #12]
 800f260:	f883 2034 	strb.w	r2, [r3, #52]	@ 0x34
    }
 800f264:	68fb      	ldr	r3, [r7, #12]
 800f266:	4618      	mov	r0, r3
 800f268:	3710      	adds	r7, #16
 800f26a:	46bd      	mov	sp, r7
 800f26c:	bd80      	pop	{r7, pc}
 800f26e:	bf00      	nop
 800f270:	08028ed8 	.word	0x08028ed8
 800f274:	20002fa8 	.word	0x20002fa8
 800f278:	20002f9c 	.word	0x20002f9c
 800f27c:	20002fa2 	.word	0x20002fa2
 800f280:	20002f9e 	.word	0x20002f9e
 800f284:	20002fa4 	.word	0x20002fa4
 800f288:	20002fa0 	.word	0x20002fa0

0800f28c <_ZN16FrontendHeapBase15gotoStartScreenER19FrontendApplication>:
    /**
     * Determine (compile time) the Transition type of largest size.
     */
    typedef touchgfx::meta::select_type_maxsize< GeneratedTransitionTypes >::type MaxGeneratedTransitionType;

    virtual void gotoStartScreen(FrontendApplication& app)
 800f28c:	b580      	push	{r7, lr}
 800f28e:	b082      	sub	sp, #8
 800f290:	af00      	add	r7, sp, #0
 800f292:	6078      	str	r0, [r7, #4]
 800f294:	6039      	str	r1, [r7, #0]
    {
        app.gotoMainScreenNoTransition();
 800f296:	683b      	ldr	r3, [r7, #0]
 800f298:	4618      	mov	r0, r3
 800f29a:	f7f9 fc1b 	bl	8008ad4 <_ZN23FrontendApplicationBase26gotoMainScreenNoTransitionEv>
    }
 800f29e:	bf00      	nop
 800f2a0:	3708      	adds	r7, #8
 800f2a2:	46bd      	mov	sp, r7
 800f2a4:	bd80      	pop	{r7, pc}
	...

0800f2a8 <_ZN16FrontendHeapBaseC1ERN8touchgfx17AbstractPartitionES2_S2_R19FrontendApplication>:
protected:
    FrontendHeapBase(touchgfx::AbstractPartition& presenters, touchgfx::AbstractPartition& views, touchgfx::AbstractPartition& transitions, FrontendApplication& app)
 800f2a8:	b580      	push	{r7, lr}
 800f2aa:	b086      	sub	sp, #24
 800f2ac:	af02      	add	r7, sp, #8
 800f2ae:	60f8      	str	r0, [r7, #12]
 800f2b0:	60b9      	str	r1, [r7, #8]
 800f2b2:	607a      	str	r2, [r7, #4]
 800f2b4:	603b      	str	r3, [r7, #0]
        : MVPHeap(presenters, views, transitions, app)
 800f2b6:	68f8      	ldr	r0, [r7, #12]
 800f2b8:	69bb      	ldr	r3, [r7, #24]
 800f2ba:	9300      	str	r3, [sp, #0]
 800f2bc:	683b      	ldr	r3, [r7, #0]
 800f2be:	687a      	ldr	r2, [r7, #4]
 800f2c0:	68b9      	ldr	r1, [r7, #8]
 800f2c2:	f7ff fe8d 	bl	800efe0 <_ZN8touchgfx7MVPHeapC1ERNS_17AbstractPartitionES2_S2_RNS_14MVPApplicationE>
 800f2c6:	4a04      	ldr	r2, [pc, #16]	@ (800f2d8 <_ZN16FrontendHeapBaseC1ERN8touchgfx17AbstractPartitionES2_S2_R19FrontendApplication+0x30>)
 800f2c8:	68fb      	ldr	r3, [r7, #12]
 800f2ca:	601a      	str	r2, [r3, #0]
    {

    }
 800f2cc:	68fb      	ldr	r3, [r7, #12]
 800f2ce:	4618      	mov	r0, r3
 800f2d0:	3710      	adds	r7, #16
 800f2d2:	46bd      	mov	sp, r7
 800f2d4:	bd80      	pop	{r7, pc}
 800f2d6:	bf00      	nop
 800f2d8:	08028cb4 	.word	0x08028cb4

0800f2dc <__tcf_0>:
            > > CombinedTransitionTypes;
    typedef meta::select_type_maxsize< CombinedTransitionTypes >::type MaxTransitionType;

    static FrontendHeap& getInstance()
    {
        static FrontendHeap instance;
 800f2dc:	b580      	push	{r7, lr}
 800f2de:	af00      	add	r7, sp, #0
 800f2e0:	4801      	ldr	r0, [pc, #4]	@ (800f2e8 <__tcf_0+0xc>)
 800f2e2:	f000 f969 	bl	800f5b8 <_ZN12FrontendHeapD1Ev>
 800f2e6:	bd80      	pop	{r7, pc}
 800f2e8:	200006dc 	.word	0x200006dc

0800f2ec <_ZN12FrontendHeap11getInstanceEv>:
    static FrontendHeap& getInstance()
 800f2ec:	b580      	push	{r7, lr}
 800f2ee:	af00      	add	r7, sp, #0
        static FrontendHeap instance;
 800f2f0:	4b11      	ldr	r3, [pc, #68]	@ (800f338 <_ZN12FrontendHeap11getInstanceEv+0x4c>)
 800f2f2:	681b      	ldr	r3, [r3, #0]
 800f2f4:	f3bf 8f5b 	dmb	ish
 800f2f8:	f003 0301 	and.w	r3, r3, #1
 800f2fc:	2b00      	cmp	r3, #0
 800f2fe:	bf0c      	ite	eq
 800f300:	2301      	moveq	r3, #1
 800f302:	2300      	movne	r3, #0
 800f304:	b2db      	uxtb	r3, r3
 800f306:	2b00      	cmp	r3, #0
 800f308:	d013      	beq.n	800f332 <_ZN12FrontendHeap11getInstanceEv+0x46>
 800f30a:	480b      	ldr	r0, [pc, #44]	@ (800f338 <_ZN12FrontendHeap11getInstanceEv+0x4c>)
 800f30c:	f016 fbc3 	bl	8025a96 <__cxa_guard_acquire>
 800f310:	4603      	mov	r3, r0
 800f312:	2b00      	cmp	r3, #0
 800f314:	bf14      	ite	ne
 800f316:	2301      	movne	r3, #1
 800f318:	2300      	moveq	r3, #0
 800f31a:	b2db      	uxtb	r3, r3
 800f31c:	2b00      	cmp	r3, #0
 800f31e:	d008      	beq.n	800f332 <_ZN12FrontendHeap11getInstanceEv+0x46>
 800f320:	4806      	ldr	r0, [pc, #24]	@ (800f33c <_ZN12FrontendHeap11getInstanceEv+0x50>)
 800f322:	f000 f867 	bl	800f3f4 <_ZN12FrontendHeapC1Ev>
 800f326:	4806      	ldr	r0, [pc, #24]	@ (800f340 <_ZN12FrontendHeap11getInstanceEv+0x54>)
 800f328:	f016 fc80 	bl	8025c2c <atexit>
 800f32c:	4802      	ldr	r0, [pc, #8]	@ (800f338 <_ZN12FrontendHeap11getInstanceEv+0x4c>)
 800f32e:	f016 fbbe 	bl	8025aae <__cxa_guard_release>
        return instance;
 800f332:	4b02      	ldr	r3, [pc, #8]	@ (800f33c <_ZN12FrontendHeap11getInstanceEv+0x50>)
    }
 800f334:	4618      	mov	r0, r3
 800f336:	bd80      	pop	{r7, pc}
 800f338:	20000c5c 	.word	0x20000c5c
 800f33c:	200006dc 	.word	0x200006dc
 800f340:	0800f2dd 	.word	0x0800f2dd

0800f344 <_ZN16FrontendHeapBaseD1Ev>:
class FrontendHeapBase : public touchgfx::MVPHeap
 800f344:	b580      	push	{r7, lr}
 800f346:	b082      	sub	sp, #8
 800f348:	af00      	add	r7, sp, #0
 800f34a:	6078      	str	r0, [r7, #4]
 800f34c:	4a05      	ldr	r2, [pc, #20]	@ (800f364 <_ZN16FrontendHeapBaseD1Ev+0x20>)
 800f34e:	687b      	ldr	r3, [r7, #4]
 800f350:	601a      	str	r2, [r3, #0]
 800f352:	687b      	ldr	r3, [r7, #4]
 800f354:	4618      	mov	r0, r3
 800f356:	f7ff fe63 	bl	800f020 <_ZN8touchgfx7MVPHeapD1Ev>
 800f35a:	687b      	ldr	r3, [r7, #4]
 800f35c:	4618      	mov	r0, r3
 800f35e:	3708      	adds	r7, #8
 800f360:	46bd      	mov	sp, r7
 800f362:	bd80      	pop	{r7, pc}
 800f364:	08028cb4 	.word	0x08028cb4

0800f368 <_ZN16FrontendHeapBaseD0Ev>:
 800f368:	b580      	push	{r7, lr}
 800f36a:	b082      	sub	sp, #8
 800f36c:	af00      	add	r7, sp, #0
 800f36e:	6078      	str	r0, [r7, #4]
 800f370:	6878      	ldr	r0, [r7, #4]
 800f372:	f7ff ffe7 	bl	800f344 <_ZN16FrontendHeapBaseD1Ev>
 800f376:	2114      	movs	r1, #20
 800f378:	6878      	ldr	r0, [r7, #4]
 800f37a:	f016 fb8a 	bl	8025a92 <_ZdlPvj>
 800f37e:	687b      	ldr	r3, [r7, #4]
 800f380:	4618      	mov	r0, r3
 800f382:	3708      	adds	r7, #8
 800f384:	46bd      	mov	sp, r7
 800f386:	bd80      	pop	{r7, pc}

0800f388 <_ZN8touchgfx9PartitionINS_4meta8TypeListI13MainPresenterNS2_INS1_3NilES4_EEEELt1EEC1Ev>:
 * @tparam NUMBER_OF_ELEMENTS Type of the number of elements.
 *
 * @see AbstractPartition
 */
template <typename ListOfTypes, uint16_t NUMBER_OF_ELEMENTS>
class Partition : public AbstractPartition
 800f388:	b580      	push	{r7, lr}
 800f38a:	b082      	sub	sp, #8
 800f38c:	af00      	add	r7, sp, #0
 800f38e:	6078      	str	r0, [r7, #4]
 800f390:	687b      	ldr	r3, [r7, #4]
 800f392:	4618      	mov	r0, r3
 800f394:	f001 f942 	bl	801061c <_ZN8touchgfx17AbstractPartitionC1Ev>
 800f398:	4a03      	ldr	r2, [pc, #12]	@ (800f3a8 <_ZN8touchgfx9PartitionINS_4meta8TypeListI13MainPresenterNS2_INS1_3NilES4_EEEELt1EEC1Ev+0x20>)
 800f39a:	687b      	ldr	r3, [r7, #4]
 800f39c:	601a      	str	r2, [r3, #0]
 800f39e:	687b      	ldr	r3, [r7, #4]
 800f3a0:	4618      	mov	r0, r3
 800f3a2:	3708      	adds	r7, #8
 800f3a4:	46bd      	mov	sp, r7
 800f3a6:	bd80      	pop	{r7, pc}
 800f3a8:	08028c80 	.word	0x08028c80

0800f3ac <_ZN8touchgfx9PartitionINS_4meta8TypeListI8MainViewNS2_INS1_3NilES4_EEEELt1EEC1Ev>:
 800f3ac:	b580      	push	{r7, lr}
 800f3ae:	b082      	sub	sp, #8
 800f3b0:	af00      	add	r7, sp, #0
 800f3b2:	6078      	str	r0, [r7, #4]
 800f3b4:	687b      	ldr	r3, [r7, #4]
 800f3b6:	4618      	mov	r0, r3
 800f3b8:	f001 f930 	bl	801061c <_ZN8touchgfx17AbstractPartitionC1Ev>
 800f3bc:	4a03      	ldr	r2, [pc, #12]	@ (800f3cc <_ZN8touchgfx9PartitionINS_4meta8TypeListI8MainViewNS2_INS1_3NilES4_EEEELt1EEC1Ev+0x20>)
 800f3be:	687b      	ldr	r3, [r7, #4]
 800f3c0:	601a      	str	r2, [r3, #0]
 800f3c2:	687b      	ldr	r3, [r7, #4]
 800f3c4:	4618      	mov	r0, r3
 800f3c6:	3708      	adds	r7, #8
 800f3c8:	46bd      	mov	sp, r7
 800f3ca:	bd80      	pop	{r7, pc}
 800f3cc:	08028c4c 	.word	0x08028c4c

0800f3d0 <_ZN8touchgfx9PartitionINS_4meta8TypeListINS_12NoTransitionENS2_INS1_3NilES4_EEEELt1EEC1Ev>:
 800f3d0:	b580      	push	{r7, lr}
 800f3d2:	b082      	sub	sp, #8
 800f3d4:	af00      	add	r7, sp, #0
 800f3d6:	6078      	str	r0, [r7, #4]
 800f3d8:	687b      	ldr	r3, [r7, #4]
 800f3da:	4618      	mov	r0, r3
 800f3dc:	f001 f91e 	bl	801061c <_ZN8touchgfx17AbstractPartitionC1Ev>
 800f3e0:	4a03      	ldr	r2, [pc, #12]	@ (800f3f0 <_ZN8touchgfx9PartitionINS_4meta8TypeListINS_12NoTransitionENS2_INS1_3NilES4_EEEELt1EEC1Ev+0x20>)
 800f3e2:	687b      	ldr	r3, [r7, #4]
 800f3e4:	601a      	str	r2, [r3, #0]
 800f3e6:	687b      	ldr	r3, [r7, #4]
 800f3e8:	4618      	mov	r0, r3
 800f3ea:	3708      	adds	r7, #8
 800f3ec:	46bd      	mov	sp, r7
 800f3ee:	bd80      	pop	{r7, pc}
 800f3f0:	08028c18 	.word	0x08028c18

0800f3f4 <_ZN12FrontendHeapC1Ev>:
    Partition< CombinedTransitionTypes, 1 > transitions;
    FrontendApplication app;
    Model model;

private:
    FrontendHeap() : FrontendHeapBase(presenters, views, transitions, app),
 800f3f4:	b590      	push	{r4, r7, lr}
 800f3f6:	b085      	sub	sp, #20
 800f3f8:	af02      	add	r7, sp, #8
 800f3fa:	6078      	str	r0, [r7, #4]
        app(model, *this)
 800f3fc:	6878      	ldr	r0, [r7, #4]
 800f3fe:	687b      	ldr	r3, [r7, #4]
 800f400:	f103 0114 	add.w	r1, r3, #20
 800f404:	687b      	ldr	r3, [r7, #4]
 800f406:	f103 022c 	add.w	r2, r3, #44	@ 0x2c
 800f40a:	687b      	ldr	r3, [r7, #4]
 800f40c:	f203 440c 	addw	r4, r3, #1036	@ 0x40c
    FrontendHeap() : FrontendHeapBase(presenters, views, transitions, app),
 800f410:	687b      	ldr	r3, [r7, #4]
 800f412:	f503 6384 	add.w	r3, r3, #1056	@ 0x420
        app(model, *this)
 800f416:	9300      	str	r3, [sp, #0]
 800f418:	4623      	mov	r3, r4
 800f41a:	f7ff ff45 	bl	800f2a8 <_ZN16FrontendHeapBaseC1ERN8touchgfx17AbstractPartitionES2_S2_R19FrontendApplication>
 800f41e:	4a18      	ldr	r2, [pc, #96]	@ (800f480 <_ZN12FrontendHeapC1Ev+0x8c>)
 800f420:	687b      	ldr	r3, [r7, #4]
 800f422:	601a      	str	r2, [r3, #0]
 800f424:	687b      	ldr	r3, [r7, #4]
 800f426:	3314      	adds	r3, #20
 800f428:	4618      	mov	r0, r3
 800f42a:	f7ff ffad 	bl	800f388 <_ZN8touchgfx9PartitionINS_4meta8TypeListI13MainPresenterNS2_INS1_3NilES4_EEEELt1EEC1Ev>
 800f42e:	687b      	ldr	r3, [r7, #4]
 800f430:	332c      	adds	r3, #44	@ 0x2c
 800f432:	4618      	mov	r0, r3
 800f434:	f7ff ffba 	bl	800f3ac <_ZN8touchgfx9PartitionINS_4meta8TypeListI8MainViewNS2_INS1_3NilES4_EEEELt1EEC1Ev>
 800f438:	687b      	ldr	r3, [r7, #4]
 800f43a:	f203 430c 	addw	r3, r3, #1036	@ 0x40c
 800f43e:	4618      	mov	r0, r3
 800f440:	f7ff ffc6 	bl	800f3d0 <_ZN8touchgfx9PartitionINS_4meta8TypeListINS_12NoTransitionENS2_INS1_3NilES4_EEEELt1EEC1Ev>
 800f444:	687b      	ldr	r3, [r7, #4]
 800f446:	f503 6084 	add.w	r0, r3, #1056	@ 0x420
 800f44a:	687b      	ldr	r3, [r7, #4]
 800f44c:	f203 537c 	addw	r3, r3, #1404	@ 0x57c
 800f450:	687a      	ldr	r2, [r7, #4]
 800f452:	4619      	mov	r1, r3
 800f454:	f7fe fa92 	bl	800d97c <_ZN19FrontendApplicationC1ER5ModelR12FrontendHeap>
 800f458:	687b      	ldr	r3, [r7, #4]
 800f45a:	f203 537c 	addw	r3, r3, #1404	@ 0x57c
 800f45e:	4618      	mov	r0, r3
 800f460:	f7fe ff48 	bl	800e2f4 <_ZN5ModelC1Ev>
    {
        gotoStartScreen(app);
 800f464:	687a      	ldr	r2, [r7, #4]
 800f466:	687b      	ldr	r3, [r7, #4]
 800f468:	f503 6384 	add.w	r3, r3, #1056	@ 0x420
 800f46c:	4619      	mov	r1, r3
 800f46e:	4610      	mov	r0, r2
 800f470:	f7ff ff0c 	bl	800f28c <_ZN16FrontendHeapBase15gotoStartScreenER19FrontendApplication>
    }
 800f474:	687b      	ldr	r3, [r7, #4]
 800f476:	4618      	mov	r0, r3
 800f478:	370c      	adds	r7, #12
 800f47a:	46bd      	mov	sp, r7
 800f47c:	bd90      	pop	{r4, r7, pc}
 800f47e:	bf00      	nop
 800f480:	08028c04 	.word	0x08028c04

0800f484 <_ZN20TouchGFXGeneratedHALC1ERN8touchgfx13DMA_InterfaceERNS0_3LCDERNS0_15TouchControllerEtt>:
     * @param [in,out] display Reference to LCD interface.
     * @param [in,out] tc      Reference to Touch Controller driver.
     * @param width            Width of the display.
     * @param height           Height of the display.
     */
    TouchGFXGeneratedHAL(touchgfx::DMA_Interface& dma, touchgfx::LCD& display, touchgfx::TouchController& tc, uint16_t width, uint16_t height) :
 800f484:	b580      	push	{r7, lr}
 800f486:	b086      	sub	sp, #24
 800f488:	af02      	add	r7, sp, #8
 800f48a:	60f8      	str	r0, [r7, #12]
 800f48c:	60b9      	str	r1, [r7, #8]
 800f48e:	607a      	str	r2, [r7, #4]
 800f490:	603b      	str	r3, [r7, #0]
        touchgfx::HAL(dma, display, tc, width, height)
 800f492:	68f8      	ldr	r0, [r7, #12]
 800f494:	8bbb      	ldrh	r3, [r7, #28]
 800f496:	9301      	str	r3, [sp, #4]
 800f498:	8b3b      	ldrh	r3, [r7, #24]
 800f49a:	9300      	str	r3, [sp, #0]
 800f49c:	683b      	ldr	r3, [r7, #0]
 800f49e:	687a      	ldr	r2, [r7, #4]
 800f4a0:	68b9      	ldr	r1, [r7, #8]
 800f4a2:	f7ff fe33 	bl	800f10c <_ZN8touchgfx3HALC1ERNS_13DMA_InterfaceERNS_3LCDERNS_15TouchControllerEtt>
 800f4a6:	4a04      	ldr	r2, [pc, #16]	@ (800f4b8 <_ZN20TouchGFXGeneratedHALC1ERN8touchgfx13DMA_InterfaceERNS0_3LCDERNS0_15TouchControllerEtt+0x34>)
 800f4a8:	68fb      	ldr	r3, [r7, #12]
 800f4aa:	601a      	str	r2, [r3, #0]
    {
    }
 800f4ac:	68fb      	ldr	r3, [r7, #12]
 800f4ae:	4618      	mov	r0, r3
 800f4b0:	3710      	adds	r7, #16
 800f4b2:	46bd      	mov	sp, r7
 800f4b4:	bd80      	pop	{r7, pc}
 800f4b6:	bf00      	nop
 800f4b8:	08028d04 	.word	0x08028d04

0800f4bc <_ZN11TouchGFXHALC1ERN8touchgfx13DMA_InterfaceERNS0_3LCDERNS0_15TouchControllerEtt>:
     * @param [in,out] display Reference to LCD interface.
     * @param [in,out] tc      Reference to Touch Controller driver.
     * @param width            Width of the display.
     * @param height           Height of the display.
     */
    TouchGFXHAL(touchgfx::DMA_Interface& dma, touchgfx::LCD& display, touchgfx::TouchController& tc, uint16_t width, uint16_t height) : TouchGFXGeneratedHAL(dma, display, tc, width, height)
 800f4bc:	b580      	push	{r7, lr}
 800f4be:	b086      	sub	sp, #24
 800f4c0:	af02      	add	r7, sp, #8
 800f4c2:	60f8      	str	r0, [r7, #12]
 800f4c4:	60b9      	str	r1, [r7, #8]
 800f4c6:	607a      	str	r2, [r7, #4]
 800f4c8:	603b      	str	r3, [r7, #0]
 800f4ca:	68f8      	ldr	r0, [r7, #12]
 800f4cc:	8bbb      	ldrh	r3, [r7, #28]
 800f4ce:	9301      	str	r3, [sp, #4]
 800f4d0:	8b3b      	ldrh	r3, [r7, #24]
 800f4d2:	9300      	str	r3, [sp, #0]
 800f4d4:	683b      	ldr	r3, [r7, #0]
 800f4d6:	687a      	ldr	r2, [r7, #4]
 800f4d8:	68b9      	ldr	r1, [r7, #8]
 800f4da:	f7ff ffd3 	bl	800f484 <_ZN20TouchGFXGeneratedHALC1ERN8touchgfx13DMA_InterfaceERNS0_3LCDERNS0_15TouchControllerEtt>
 800f4de:	4a04      	ldr	r2, [pc, #16]	@ (800f4f0 <_ZN11TouchGFXHALC1ERN8touchgfx13DMA_InterfaceERNS0_3LCDERNS0_15TouchControllerEtt+0x34>)
 800f4e0:	68fb      	ldr	r3, [r7, #12]
 800f4e2:	601a      	str	r2, [r3, #0]
    {
    }
 800f4e4:	68fb      	ldr	r3, [r7, #12]
 800f4e6:	4618      	mov	r0, r3
 800f4e8:	3710      	adds	r7, #16
 800f4ea:	46bd      	mov	sp, r7
 800f4ec:	bd80      	pop	{r7, pc}
 800f4ee:	bf00      	nop
 800f4f0:	08028ab8 	.word	0x08028ab8

0800f4f4 <_ZN8touchgfx15TouchControllerC1Ev>:
class TouchController
 800f4f4:	b480      	push	{r7}
 800f4f6:	b083      	sub	sp, #12
 800f4f8:	af00      	add	r7, sp, #0
 800f4fa:	6078      	str	r0, [r7, #4]
 800f4fc:	4a04      	ldr	r2, [pc, #16]	@ (800f510 <_ZN8touchgfx15TouchControllerC1Ev+0x1c>)
 800f4fe:	687b      	ldr	r3, [r7, #4]
 800f500:	601a      	str	r2, [r3, #0]
 800f502:	687b      	ldr	r3, [r7, #4]
 800f504:	4618      	mov	r0, r3
 800f506:	370c      	adds	r7, #12
 800f508:	46bd      	mov	sp, r7
 800f50a:	f85d 7b04 	ldr.w	r7, [sp], #4
 800f50e:	4770      	bx	lr
 800f510:	08028aa0 	.word	0x08028aa0

0800f514 <_ZN20STM32TouchControllerC1Ev>:
{
public:

    STM32TouchController() {}
 800f514:	b580      	push	{r7, lr}
 800f516:	b082      	sub	sp, #8
 800f518:	af00      	add	r7, sp, #0
 800f51a:	6078      	str	r0, [r7, #4]
 800f51c:	687b      	ldr	r3, [r7, #4]
 800f51e:	4618      	mov	r0, r3
 800f520:	f7ff ffe8 	bl	800f4f4 <_ZN8touchgfx15TouchControllerC1Ev>
 800f524:	4a03      	ldr	r2, [pc, #12]	@ (800f534 <_ZN20STM32TouchControllerC1Ev+0x20>)
 800f526:	687b      	ldr	r3, [r7, #4]
 800f528:	601a      	str	r2, [r3, #0]
 800f52a:	687b      	ldr	r3, [r7, #4]
 800f52c:	4618      	mov	r0, r3
 800f52e:	3708      	adds	r7, #8
 800f530:	46bd      	mov	sp, r7
 800f532:	bd80      	pop	{r7, pc}
 800f534:	08028a88 	.word	0x08028a88

0800f538 <touchgfx_init>:
static ApplicationFontProvider fontProvider;
static Texts texts;
static TouchGFXHAL hal(dma, display, tc, 320, 480);

void touchgfx_init()
{
 800f538:	b590      	push	{r4, r7, lr}
 800f53a:	b085      	sub	sp, #20
 800f53c:	af02      	add	r7, sp, #8
    Bitmap::registerBitmapDatabase(BitmapDatabase::getInstance(), BitmapDatabase::getInstanceSize());
 800f53e:	f7fd fff1 	bl	800d524 <_ZN14BitmapDatabase11getInstanceEv>
 800f542:	4604      	mov	r4, r0
 800f544:	f7fd fff8 	bl	800d538 <_ZN14BitmapDatabase15getInstanceSizeEv>
 800f548:	4603      	mov	r3, r0
 800f54a:	4619      	mov	r1, r3
 800f54c:	2300      	movs	r3, #0
 800f54e:	9300      	str	r3, [sp, #0]
 800f550:	2300      	movs	r3, #0
 800f552:	2200      	movs	r2, #0
 800f554:	4620      	mov	r0, r4
 800f556:	f007 ffb5 	bl	80174c4 <_ZN8touchgfx6Bitmap22registerBitmapDatabaseEPKNS0_10BitmapDataEtPtmm>
    TypedText::registerTexts(&texts);
 800f55a:	4809      	ldr	r0, [pc, #36]	@ (800f580 <touchgfx_init+0x48>)
 800f55c:	f7ff fd30 	bl	800efc0 <_ZN8touchgfx9TypedText13registerTextsEPKNS_5TextsE>
    Texts::setLanguage(0);
 800f560:	2000      	movs	r0, #0
 800f562:	f7fe f92d 	bl	800d7c0 <_ZN8touchgfx5Texts11setLanguageEt>

    FontManager::setFontProvider(&fontProvider);
 800f566:	4807      	ldr	r0, [pc, #28]	@ (800f584 <touchgfx_init+0x4c>)
 800f568:	f007 ff14 	bl	8017394 <_ZN8touchgfx11FontManager15setFontProviderEPNS_12FontProviderE>

    FrontendHeap& heap = FrontendHeap::getInstance();
 800f56c:	f7ff febe 	bl	800f2ec <_ZN12FrontendHeap11getInstanceEv>
 800f570:	6078      	str	r0, [r7, #4]
    (void)heap;

    /*
     * Initialize TouchGFX
     */
    hal.initialize();
 800f572:	4805      	ldr	r0, [pc, #20]	@ (800f588 <touchgfx_init+0x50>)
 800f574:	f7ff fab4 	bl	800eae0 <_ZN11TouchGFXHAL10initializeEv>
}
 800f578:	bf00      	nop
 800f57a:	370c      	adds	r7, #12
 800f57c:	46bd      	mov	sp, r7
 800f57e:	bd90      	pop	{r4, r7, pc}
 800f580:	20000d34 	.word	0x20000d34
 800f584:	20000028 	.word	0x20000028
 800f588:	20000d38 	.word	0x20000d38

0800f58c <touchgfx_components_init>:

void touchgfx_components_init()
{
 800f58c:	b480      	push	{r7}
 800f58e:	af00      	add	r7, sp, #0
}
 800f590:	bf00      	nop
 800f592:	46bd      	mov	sp, r7
 800f594:	f85d 7b04 	ldr.w	r7, [sp], #4
 800f598:	4770      	bx	lr
	...

0800f59c <touchgfx_taskEntry>:

void touchgfx_taskEntry()
{
 800f59c:	b580      	push	{r7, lr}
 800f59e:	af00      	add	r7, sp, #0
    /*
     * Main event loop will check for VSYNC signal, and then process next frame.
     *
     * Note This function returns immediately if there is no VSYNC signal.
     */
    if (OSWrappers::isVSyncAvailable())
 800f5a0:	f7ff fbb4 	bl	800ed0c <_ZN8touchgfx10OSWrappers16isVSyncAvailableEv>
 800f5a4:	4603      	mov	r3, r0
 800f5a6:	2b00      	cmp	r3, #0
 800f5a8:	d002      	beq.n	800f5b0 <touchgfx_taskEntry+0x14>
    {
        hal.backPorchExited();
 800f5aa:	4802      	ldr	r0, [pc, #8]	@ (800f5b4 <touchgfx_taskEntry+0x18>)
 800f5ac:	f7ff f96a 	bl	800e884 <_ZN8touchgfx3HAL15backPorchExitedEv>
    }
}
 800f5b0:	bf00      	nop
 800f5b2:	bd80      	pop	{r7, pc}
 800f5b4:	20000d38 	.word	0x20000d38

0800f5b8 <_ZN12FrontendHeapD1Ev>:
class FrontendHeap : public FrontendHeapBase
 800f5b8:	b580      	push	{r7, lr}
 800f5ba:	b082      	sub	sp, #8
 800f5bc:	af00      	add	r7, sp, #0
 800f5be:	6078      	str	r0, [r7, #4]
 800f5c0:	4a10      	ldr	r2, [pc, #64]	@ (800f604 <_ZN12FrontendHeapD1Ev+0x4c>)
 800f5c2:	687b      	ldr	r3, [r7, #4]
 800f5c4:	601a      	str	r2, [r3, #0]
 800f5c6:	687b      	ldr	r3, [r7, #4]
 800f5c8:	f503 6384 	add.w	r3, r3, #1056	@ 0x420
 800f5cc:	4618      	mov	r0, r3
 800f5ce:	f7fe f99f 	bl	800d910 <_ZN19FrontendApplicationD1Ev>
 800f5d2:	687b      	ldr	r3, [r7, #4]
 800f5d4:	f203 430c 	addw	r3, r3, #1036	@ 0x40c
 800f5d8:	4618      	mov	r0, r3
 800f5da:	f000 f827 	bl	800f62c <_ZN8touchgfx9PartitionINS_4meta8TypeListINS_12NoTransitionENS2_INS1_3NilES4_EEEELt1EED1Ev>
 800f5de:	687b      	ldr	r3, [r7, #4]
 800f5e0:	332c      	adds	r3, #44	@ 0x2c
 800f5e2:	4618      	mov	r0, r3
 800f5e4:	f000 f844 	bl	800f670 <_ZN8touchgfx9PartitionINS_4meta8TypeListI8MainViewNS2_INS1_3NilES4_EEEELt1EED1Ev>
 800f5e8:	687b      	ldr	r3, [r7, #4]
 800f5ea:	3314      	adds	r3, #20
 800f5ec:	4618      	mov	r0, r3
 800f5ee:	f000 f863 	bl	800f6b8 <_ZN8touchgfx9PartitionINS_4meta8TypeListI13MainPresenterNS2_INS1_3NilES4_EEEELt1EED1Ev>
 800f5f2:	687b      	ldr	r3, [r7, #4]
 800f5f4:	4618      	mov	r0, r3
 800f5f6:	f7ff fea5 	bl	800f344 <_ZN16FrontendHeapBaseD1Ev>
 800f5fa:	687b      	ldr	r3, [r7, #4]
 800f5fc:	4618      	mov	r0, r3
 800f5fe:	3708      	adds	r7, #8
 800f600:	46bd      	mov	sp, r7
 800f602:	bd80      	pop	{r7, pc}
 800f604:	08028c04 	.word	0x08028c04

0800f608 <_ZN12FrontendHeapD0Ev>:
 800f608:	b580      	push	{r7, lr}
 800f60a:	b082      	sub	sp, #8
 800f60c:	af00      	add	r7, sp, #0
 800f60e:	6078      	str	r0, [r7, #4]
 800f610:	6878      	ldr	r0, [r7, #4]
 800f612:	f7ff ffd1 	bl	800f5b8 <_ZN12FrontendHeapD1Ev>
 800f616:	f44f 61b0 	mov.w	r1, #1408	@ 0x580
 800f61a:	6878      	ldr	r0, [r7, #4]
 800f61c:	f016 fa39 	bl	8025a92 <_ZdlPvj>
 800f620:	687b      	ldr	r3, [r7, #4]
 800f622:	4618      	mov	r0, r3
 800f624:	3708      	adds	r7, #8
 800f626:	46bd      	mov	sp, r7
 800f628:	bd80      	pop	{r7, pc}
	...

0800f62c <_ZN8touchgfx9PartitionINS_4meta8TypeListINS_12NoTransitionENS2_INS1_3NilES4_EEEELt1EED1Ev>:
 800f62c:	b580      	push	{r7, lr}
 800f62e:	b082      	sub	sp, #8
 800f630:	af00      	add	r7, sp, #0
 800f632:	6078      	str	r0, [r7, #4]
 800f634:	4a05      	ldr	r2, [pc, #20]	@ (800f64c <_ZN8touchgfx9PartitionINS_4meta8TypeListINS_12NoTransitionENS2_INS1_3NilES4_EEEELt1EED1Ev+0x20>)
 800f636:	687b      	ldr	r3, [r7, #4]
 800f638:	601a      	str	r2, [r3, #0]
 800f63a:	687b      	ldr	r3, [r7, #4]
 800f63c:	4618      	mov	r0, r3
 800f63e:	f000 ffec 	bl	801061a <_ZN8touchgfx17AbstractPartitionD1Ev>
 800f642:	687b      	ldr	r3, [r7, #4]
 800f644:	4618      	mov	r0, r3
 800f646:	3708      	adds	r7, #8
 800f648:	46bd      	mov	sp, r7
 800f64a:	bd80      	pop	{r7, pc}
 800f64c:	08028c18 	.word	0x08028c18

0800f650 <_ZN8touchgfx9PartitionINS_4meta8TypeListINS_12NoTransitionENS2_INS1_3NilES4_EEEELt1EED0Ev>:
 800f650:	b580      	push	{r7, lr}
 800f652:	b082      	sub	sp, #8
 800f654:	af00      	add	r7, sp, #0
 800f656:	6078      	str	r0, [r7, #4]
 800f658:	6878      	ldr	r0, [r7, #4]
 800f65a:	f7ff ffe7 	bl	800f62c <_ZN8touchgfx9PartitionINS_4meta8TypeListINS_12NoTransitionENS2_INS1_3NilES4_EEEELt1EED1Ev>
 800f65e:	2114      	movs	r1, #20
 800f660:	6878      	ldr	r0, [r7, #4]
 800f662:	f016 fa16 	bl	8025a92 <_ZdlPvj>
 800f666:	687b      	ldr	r3, [r7, #4]
 800f668:	4618      	mov	r0, r3
 800f66a:	3708      	adds	r7, #8
 800f66c:	46bd      	mov	sp, r7
 800f66e:	bd80      	pop	{r7, pc}

0800f670 <_ZN8touchgfx9PartitionINS_4meta8TypeListI8MainViewNS2_INS1_3NilES4_EEEELt1EED1Ev>:
 800f670:	b580      	push	{r7, lr}
 800f672:	b082      	sub	sp, #8
 800f674:	af00      	add	r7, sp, #0
 800f676:	6078      	str	r0, [r7, #4]
 800f678:	4a05      	ldr	r2, [pc, #20]	@ (800f690 <_ZN8touchgfx9PartitionINS_4meta8TypeListI8MainViewNS2_INS1_3NilES4_EEEELt1EED1Ev+0x20>)
 800f67a:	687b      	ldr	r3, [r7, #4]
 800f67c:	601a      	str	r2, [r3, #0]
 800f67e:	687b      	ldr	r3, [r7, #4]
 800f680:	4618      	mov	r0, r3
 800f682:	f000 ffca 	bl	801061a <_ZN8touchgfx17AbstractPartitionD1Ev>
 800f686:	687b      	ldr	r3, [r7, #4]
 800f688:	4618      	mov	r0, r3
 800f68a:	3708      	adds	r7, #8
 800f68c:	46bd      	mov	sp, r7
 800f68e:	bd80      	pop	{r7, pc}
 800f690:	08028c4c 	.word	0x08028c4c

0800f694 <_ZN8touchgfx9PartitionINS_4meta8TypeListI8MainViewNS2_INS1_3NilES4_EEEELt1EED0Ev>:
 800f694:	b580      	push	{r7, lr}
 800f696:	b082      	sub	sp, #8
 800f698:	af00      	add	r7, sp, #0
 800f69a:	6078      	str	r0, [r7, #4]
 800f69c:	6878      	ldr	r0, [r7, #4]
 800f69e:	f7ff ffe7 	bl	800f670 <_ZN8touchgfx9PartitionINS_4meta8TypeListI8MainViewNS2_INS1_3NilES4_EEEELt1EED1Ev>
 800f6a2:	f44f 7178 	mov.w	r1, #992	@ 0x3e0
 800f6a6:	6878      	ldr	r0, [r7, #4]
 800f6a8:	f016 f9f3 	bl	8025a92 <_ZdlPvj>
 800f6ac:	687b      	ldr	r3, [r7, #4]
 800f6ae:	4618      	mov	r0, r3
 800f6b0:	3708      	adds	r7, #8
 800f6b2:	46bd      	mov	sp, r7
 800f6b4:	bd80      	pop	{r7, pc}
	...

0800f6b8 <_ZN8touchgfx9PartitionINS_4meta8TypeListI13MainPresenterNS2_INS1_3NilES4_EEEELt1EED1Ev>:
 800f6b8:	b580      	push	{r7, lr}
 800f6ba:	b082      	sub	sp, #8
 800f6bc:	af00      	add	r7, sp, #0
 800f6be:	6078      	str	r0, [r7, #4]
 800f6c0:	4a05      	ldr	r2, [pc, #20]	@ (800f6d8 <_ZN8touchgfx9PartitionINS_4meta8TypeListI13MainPresenterNS2_INS1_3NilES4_EEEELt1EED1Ev+0x20>)
 800f6c2:	687b      	ldr	r3, [r7, #4]
 800f6c4:	601a      	str	r2, [r3, #0]
 800f6c6:	687b      	ldr	r3, [r7, #4]
 800f6c8:	4618      	mov	r0, r3
 800f6ca:	f000 ffa6 	bl	801061a <_ZN8touchgfx17AbstractPartitionD1Ev>
 800f6ce:	687b      	ldr	r3, [r7, #4]
 800f6d0:	4618      	mov	r0, r3
 800f6d2:	3708      	adds	r7, #8
 800f6d4:	46bd      	mov	sp, r7
 800f6d6:	bd80      	pop	{r7, pc}
 800f6d8:	08028c80 	.word	0x08028c80

0800f6dc <_ZN8touchgfx9PartitionINS_4meta8TypeListI13MainPresenterNS2_INS1_3NilES4_EEEELt1EED0Ev>:
 800f6dc:	b580      	push	{r7, lr}
 800f6de:	b082      	sub	sp, #8
 800f6e0:	af00      	add	r7, sp, #0
 800f6e2:	6078      	str	r0, [r7, #4]
 800f6e4:	6878      	ldr	r0, [r7, #4]
 800f6e6:	f7ff ffe7 	bl	800f6b8 <_ZN8touchgfx9PartitionINS_4meta8TypeListI13MainPresenterNS2_INS1_3NilES4_EEEELt1EED1Ev>
 800f6ea:	2118      	movs	r1, #24
 800f6ec:	6878      	ldr	r0, [r7, #4]
 800f6ee:	f016 f9d0 	bl	8025a92 <_ZdlPvj>
 800f6f2:	687b      	ldr	r3, [r7, #4]
 800f6f4:	4618      	mov	r0, r3
 800f6f6:	3708      	adds	r7, #8
 800f6f8:	46bd      	mov	sp, r7
 800f6fa:	bd80      	pop	{r7, pc}

0800f6fc <_ZN8touchgfx8LCD16bppD1Ev>:
 *
 * @see LCD
 *
 * @note All coordinates are expected to be in absolute coordinates!
 */
class LCD16bpp : public LCD
 800f6fc:	b580      	push	{r7, lr}
 800f6fe:	b082      	sub	sp, #8
 800f700:	af00      	add	r7, sp, #0
 800f702:	6078      	str	r0, [r7, #4]
 800f704:	4a05      	ldr	r2, [pc, #20]	@ (800f71c <_ZN8touchgfx8LCD16bppD1Ev+0x20>)
 800f706:	687b      	ldr	r3, [r7, #4]
 800f708:	601a      	str	r2, [r3, #0]
 800f70a:	687b      	ldr	r3, [r7, #4]
 800f70c:	4618      	mov	r0, r3
 800f70e:	f7ff fca7 	bl	800f060 <_ZN8touchgfx3LCDD1Ev>
 800f712:	687b      	ldr	r3, [r7, #4]
 800f714:	4618      	mov	r0, r3
 800f716:	3708      	adds	r7, #8
 800f718:	46bd      	mov	sp, r7
 800f71a:	bd80      	pop	{r7, pc}
 800f71c:	0802986c 	.word	0x0802986c

0800f720 <_ZN8touchgfx8LCD16bppD0Ev>:
 800f720:	b580      	push	{r7, lr}
 800f722:	b082      	sub	sp, #8
 800f724:	af00      	add	r7, sp, #0
 800f726:	6078      	str	r0, [r7, #4]
 800f728:	6878      	ldr	r0, [r7, #4]
 800f72a:	f7ff ffe7 	bl	800f6fc <_ZN8touchgfx8LCD16bppD1Ev>
 800f72e:	218c      	movs	r1, #140	@ 0x8c
 800f730:	6878      	ldr	r0, [r7, #4]
 800f732:	f016 f9ae 	bl	8025a92 <_ZdlPvj>
 800f736:	687b      	ldr	r3, [r7, #4]
 800f738:	4618      	mov	r0, r3
 800f73a:	3708      	adds	r7, #8
 800f73c:	46bd      	mov	sp, r7
 800f73e:	bd80      	pop	{r7, pc}

0800f740 <_Z41__static_initialization_and_destruction_0ii>:
 800f740:	b580      	push	{r7, lr}
 800f742:	b084      	sub	sp, #16
 800f744:	af02      	add	r7, sp, #8
 800f746:	6078      	str	r0, [r7, #4]
 800f748:	6039      	str	r1, [r7, #0]
 800f74a:	687b      	ldr	r3, [r7, #4]
 800f74c:	2b01      	cmp	r3, #1
 800f74e:	d119      	bne.n	800f784 <_Z41__static_initialization_and_destruction_0ii+0x44>
 800f750:	683b      	ldr	r3, [r7, #0]
 800f752:	f64f 72ff 	movw	r2, #65535	@ 0xffff
 800f756:	4293      	cmp	r3, r2
 800f758:	d114      	bne.n	800f784 <_Z41__static_initialization_and_destruction_0ii+0x44>
static STM32TouchController tc;
 800f75a:	4818      	ldr	r0, [pc, #96]	@ (800f7bc <_Z41__static_initialization_and_destruction_0ii+0x7c>)
 800f75c:	f7ff feda 	bl	800f514 <_ZN20STM32TouchControllerC1Ev>
static STM32DMA dma;
 800f760:	4817      	ldr	r0, [pc, #92]	@ (800f7c0 <_Z41__static_initialization_and_destruction_0ii+0x80>)
 800f762:	f7ff fb8f 	bl	800ee84 <_ZN8STM32DMAC1Ev>
static LCD16bpp display;
 800f766:	4817      	ldr	r0, [pc, #92]	@ (800f7c4 <_Z41__static_initialization_and_destruction_0ii+0x84>)
 800f768:	f00c ffa8 	bl	801c6bc <_ZN8touchgfx8LCD16bppC1Ev>
static TouchGFXHAL hal(dma, display, tc, 320, 480);
 800f76c:	f44f 73f0 	mov.w	r3, #480	@ 0x1e0
 800f770:	9301      	str	r3, [sp, #4]
 800f772:	f44f 73a0 	mov.w	r3, #320	@ 0x140
 800f776:	9300      	str	r3, [sp, #0]
 800f778:	4b10      	ldr	r3, [pc, #64]	@ (800f7bc <_Z41__static_initialization_and_destruction_0ii+0x7c>)
 800f77a:	4a12      	ldr	r2, [pc, #72]	@ (800f7c4 <_Z41__static_initialization_and_destruction_0ii+0x84>)
 800f77c:	4910      	ldr	r1, [pc, #64]	@ (800f7c0 <_Z41__static_initialization_and_destruction_0ii+0x80>)
 800f77e:	4812      	ldr	r0, [pc, #72]	@ (800f7c8 <_Z41__static_initialization_and_destruction_0ii+0x88>)
 800f780:	f7ff fe9c 	bl	800f4bc <_ZN11TouchGFXHALC1ERN8touchgfx13DMA_InterfaceERNS0_3LCDERNS0_15TouchControllerEtt>
 800f784:	687b      	ldr	r3, [r7, #4]
 800f786:	2b00      	cmp	r3, #0
 800f788:	d113      	bne.n	800f7b2 <_Z41__static_initialization_and_destruction_0ii+0x72>
 800f78a:	683b      	ldr	r3, [r7, #0]
 800f78c:	f64f 72ff 	movw	r2, #65535	@ 0xffff
 800f790:	4293      	cmp	r3, r2
 800f792:	d10e      	bne.n	800f7b2 <_Z41__static_initialization_and_destruction_0ii+0x72>
 800f794:	480c      	ldr	r0, [pc, #48]	@ (800f7c8 <_Z41__static_initialization_and_destruction_0ii+0x88>)
 800f796:	f7ff fa33 	bl	800ec00 <_ZN11TouchGFXHALD1Ev>
static ApplicationFontProvider fontProvider;
 800f79a:	480c      	ldr	r0, [pc, #48]	@ (800f7cc <_Z41__static_initialization_and_destruction_0ii+0x8c>)
 800f79c:	f7f8 fb66 	bl	8007e6c <_ZN23ApplicationFontProviderD1Ev>
static LCD16bpp display;
 800f7a0:	4808      	ldr	r0, [pc, #32]	@ (800f7c4 <_Z41__static_initialization_and_destruction_0ii+0x84>)
 800f7a2:	f7ff ffab 	bl	800f6fc <_ZN8touchgfx8LCD16bppD1Ev>
static STM32DMA dma;
 800f7a6:	4806      	ldr	r0, [pc, #24]	@ (800f7c0 <_Z41__static_initialization_and_destruction_0ii+0x80>)
 800f7a8:	f7ff fbc0 	bl	800ef2c <_ZN8STM32DMAD1Ev>
static STM32TouchController tc;
 800f7ac:	4803      	ldr	r0, [pc, #12]	@ (800f7bc <_Z41__static_initialization_and_destruction_0ii+0x7c>)
 800f7ae:	f7fe ff6f 	bl	800e690 <_ZN20STM32TouchControllerD1Ev>
}
 800f7b2:	bf00      	nop
 800f7b4:	3708      	adds	r7, #8
 800f7b6:	46bd      	mov	sp, r7
 800f7b8:	bd80      	pop	{r7, pc}
 800f7ba:	bf00      	nop
 800f7bc:	20000c60 	.word	0x20000c60
 800f7c0:	20000c64 	.word	0x20000c64
 800f7c4:	20000ca8 	.word	0x20000ca8
 800f7c8:	20000d38 	.word	0x20000d38
 800f7cc:	20000028 	.word	0x20000028

0800f7d0 <_ZNK8touchgfx9PartitionINS_4meta8TypeListINS_12NoTransitionENS2_INS1_3NilES4_EEEELt1EE8capacityEv>:
    {
        INTS_PR_ELEMENT = (sizeof(typename meta::select_type_maxsize<SupportedTypesList>::type) + sizeof(int) - 1) / sizeof(int),
        SIZE_OF_ELEMENT = INTS_PR_ELEMENT * sizeof(int)
    };

    virtual uint16_t capacity() const
 800f7d0:	b480      	push	{r7}
 800f7d2:	b083      	sub	sp, #12
 800f7d4:	af00      	add	r7, sp, #0
 800f7d6:	6078      	str	r0, [r7, #4]
    {
        return NUMBER_OF_ELEMENTS;
 800f7d8:	2301      	movs	r3, #1
    }
 800f7da:	4618      	mov	r0, r3
 800f7dc:	370c      	adds	r7, #12
 800f7de:	46bd      	mov	sp, r7
 800f7e0:	f85d 7b04 	ldr.w	r7, [sp], #4
 800f7e4:	4770      	bx	lr

0800f7e6 <_ZN8touchgfx9PartitionINS_4meta8TypeListINS_12NoTransitionENS2_INS1_3NilES4_EEEELt1EE12element_sizeEv>:

    virtual uint32_t element_size()
 800f7e6:	b480      	push	{r7}
 800f7e8:	b083      	sub	sp, #12
 800f7ea:	af00      	add	r7, sp, #0
 800f7ec:	6078      	str	r0, [r7, #4]
    {
        return sizeof(stBlocks[0]);
 800f7ee:	230c      	movs	r3, #12
    }
 800f7f0:	4618      	mov	r0, r3
 800f7f2:	370c      	adds	r7, #12
 800f7f4:	46bd      	mov	sp, r7
 800f7f6:	f85d 7b04 	ldr.w	r7, [sp], #4
 800f7fa:	4770      	bx	lr

0800f7fc <_ZN8touchgfx9PartitionINS_4meta8TypeListINS_12NoTransitionENS2_INS1_3NilES4_EEEELt1EE7elementEt>:

protected:
    virtual void* element(uint16_t index)
 800f7fc:	b480      	push	{r7}
 800f7fe:	b083      	sub	sp, #12
 800f800:	af00      	add	r7, sp, #0
 800f802:	6078      	str	r0, [r7, #4]
 800f804:	460b      	mov	r3, r1
 800f806:	807b      	strh	r3, [r7, #2]
    {
        return &stBlocks[index];
 800f808:	887a      	ldrh	r2, [r7, #2]
 800f80a:	4613      	mov	r3, r2
 800f80c:	005b      	lsls	r3, r3, #1
 800f80e:	4413      	add	r3, r2
 800f810:	009b      	lsls	r3, r3, #2
 800f812:	3308      	adds	r3, #8
 800f814:	687a      	ldr	r2, [r7, #4]
 800f816:	4413      	add	r3, r2
    }
 800f818:	4618      	mov	r0, r3
 800f81a:	370c      	adds	r7, #12
 800f81c:	46bd      	mov	sp, r7
 800f81e:	f85d 7b04 	ldr.w	r7, [sp], #4
 800f822:	4770      	bx	lr

0800f824 <_ZNK8touchgfx9PartitionINS_4meta8TypeListINS_12NoTransitionENS2_INS1_3NilES4_EEEELt1EE7elementEt>:

    virtual const void* element(uint16_t index) const
 800f824:	b480      	push	{r7}
 800f826:	b083      	sub	sp, #12
 800f828:	af00      	add	r7, sp, #0
 800f82a:	6078      	str	r0, [r7, #4]
 800f82c:	460b      	mov	r3, r1
 800f82e:	807b      	strh	r3, [r7, #2]
    {
        return &stBlocks[index];
 800f830:	887a      	ldrh	r2, [r7, #2]
 800f832:	4613      	mov	r3, r2
 800f834:	005b      	lsls	r3, r3, #1
 800f836:	4413      	add	r3, r2
 800f838:	009b      	lsls	r3, r3, #2
 800f83a:	3308      	adds	r3, #8
 800f83c:	687a      	ldr	r2, [r7, #4]
 800f83e:	4413      	add	r3, r2
    }
 800f840:	4618      	mov	r0, r3
 800f842:	370c      	adds	r7, #12
 800f844:	46bd      	mov	sp, r7
 800f846:	f85d 7b04 	ldr.w	r7, [sp], #4
 800f84a:	4770      	bx	lr

0800f84c <_ZNK8touchgfx9PartitionINS_4meta8TypeListI8MainViewNS2_INS1_3NilES4_EEEELt1EE8capacityEv>:
    virtual uint16_t capacity() const
 800f84c:	b480      	push	{r7}
 800f84e:	b083      	sub	sp, #12
 800f850:	af00      	add	r7, sp, #0
 800f852:	6078      	str	r0, [r7, #4]
        return NUMBER_OF_ELEMENTS;
 800f854:	2301      	movs	r3, #1
    }
 800f856:	4618      	mov	r0, r3
 800f858:	370c      	adds	r7, #12
 800f85a:	46bd      	mov	sp, r7
 800f85c:	f85d 7b04 	ldr.w	r7, [sp], #4
 800f860:	4770      	bx	lr

0800f862 <_ZN8touchgfx9PartitionINS_4meta8TypeListI8MainViewNS2_INS1_3NilES4_EEEELt1EE12element_sizeEv>:
    virtual uint32_t element_size()
 800f862:	b480      	push	{r7}
 800f864:	b083      	sub	sp, #12
 800f866:	af00      	add	r7, sp, #0
 800f868:	6078      	str	r0, [r7, #4]
        return sizeof(stBlocks[0]);
 800f86a:	f44f 7376 	mov.w	r3, #984	@ 0x3d8
    }
 800f86e:	4618      	mov	r0, r3
 800f870:	370c      	adds	r7, #12
 800f872:	46bd      	mov	sp, r7
 800f874:	f85d 7b04 	ldr.w	r7, [sp], #4
 800f878:	4770      	bx	lr

0800f87a <_ZN8touchgfx9PartitionINS_4meta8TypeListI8MainViewNS2_INS1_3NilES4_EEEELt1EE7elementEt>:
    virtual void* element(uint16_t index)
 800f87a:	b480      	push	{r7}
 800f87c:	b083      	sub	sp, #12
 800f87e:	af00      	add	r7, sp, #0
 800f880:	6078      	str	r0, [r7, #4]
 800f882:	460b      	mov	r3, r1
 800f884:	807b      	strh	r3, [r7, #2]
        return &stBlocks[index];
 800f886:	887b      	ldrh	r3, [r7, #2]
 800f888:	f44f 7276 	mov.w	r2, #984	@ 0x3d8
 800f88c:	fb02 f303 	mul.w	r3, r2, r3
 800f890:	3308      	adds	r3, #8
 800f892:	687a      	ldr	r2, [r7, #4]
 800f894:	4413      	add	r3, r2
    }
 800f896:	4618      	mov	r0, r3
 800f898:	370c      	adds	r7, #12
 800f89a:	46bd      	mov	sp, r7
 800f89c:	f85d 7b04 	ldr.w	r7, [sp], #4
 800f8a0:	4770      	bx	lr

0800f8a2 <_ZNK8touchgfx9PartitionINS_4meta8TypeListI8MainViewNS2_INS1_3NilES4_EEEELt1EE7elementEt>:
    virtual const void* element(uint16_t index) const
 800f8a2:	b480      	push	{r7}
 800f8a4:	b083      	sub	sp, #12
 800f8a6:	af00      	add	r7, sp, #0
 800f8a8:	6078      	str	r0, [r7, #4]
 800f8aa:	460b      	mov	r3, r1
 800f8ac:	807b      	strh	r3, [r7, #2]
        return &stBlocks[index];
 800f8ae:	887b      	ldrh	r3, [r7, #2]
 800f8b0:	f44f 7276 	mov.w	r2, #984	@ 0x3d8
 800f8b4:	fb02 f303 	mul.w	r3, r2, r3
 800f8b8:	3308      	adds	r3, #8
 800f8ba:	687a      	ldr	r2, [r7, #4]
 800f8bc:	4413      	add	r3, r2
    }
 800f8be:	4618      	mov	r0, r3
 800f8c0:	370c      	adds	r7, #12
 800f8c2:	46bd      	mov	sp, r7
 800f8c4:	f85d 7b04 	ldr.w	r7, [sp], #4
 800f8c8:	4770      	bx	lr

0800f8ca <_ZNK8touchgfx9PartitionINS_4meta8TypeListI13MainPresenterNS2_INS1_3NilES4_EEEELt1EE8capacityEv>:
    virtual uint16_t capacity() const
 800f8ca:	b480      	push	{r7}
 800f8cc:	b083      	sub	sp, #12
 800f8ce:	af00      	add	r7, sp, #0
 800f8d0:	6078      	str	r0, [r7, #4]
        return NUMBER_OF_ELEMENTS;
 800f8d2:	2301      	movs	r3, #1
    }
 800f8d4:	4618      	mov	r0, r3
 800f8d6:	370c      	adds	r7, #12
 800f8d8:	46bd      	mov	sp, r7
 800f8da:	f85d 7b04 	ldr.w	r7, [sp], #4
 800f8de:	4770      	bx	lr

0800f8e0 <_ZN8touchgfx9PartitionINS_4meta8TypeListI13MainPresenterNS2_INS1_3NilES4_EEEELt1EE12element_sizeEv>:
    virtual uint32_t element_size()
 800f8e0:	b480      	push	{r7}
 800f8e2:	b083      	sub	sp, #12
 800f8e4:	af00      	add	r7, sp, #0
 800f8e6:	6078      	str	r0, [r7, #4]
        return sizeof(stBlocks[0]);
 800f8e8:	2310      	movs	r3, #16
    }
 800f8ea:	4618      	mov	r0, r3
 800f8ec:	370c      	adds	r7, #12
 800f8ee:	46bd      	mov	sp, r7
 800f8f0:	f85d 7b04 	ldr.w	r7, [sp], #4
 800f8f4:	4770      	bx	lr

0800f8f6 <_ZN8touchgfx9PartitionINS_4meta8TypeListI13MainPresenterNS2_INS1_3NilES4_EEEELt1EE7elementEt>:
    virtual void* element(uint16_t index)
 800f8f6:	b480      	push	{r7}
 800f8f8:	b083      	sub	sp, #12
 800f8fa:	af00      	add	r7, sp, #0
 800f8fc:	6078      	str	r0, [r7, #4]
 800f8fe:	460b      	mov	r3, r1
 800f900:	807b      	strh	r3, [r7, #2]
        return &stBlocks[index];
 800f902:	887b      	ldrh	r3, [r7, #2]
 800f904:	011b      	lsls	r3, r3, #4
 800f906:	3308      	adds	r3, #8
 800f908:	687a      	ldr	r2, [r7, #4]
 800f90a:	4413      	add	r3, r2
    }
 800f90c:	4618      	mov	r0, r3
 800f90e:	370c      	adds	r7, #12
 800f910:	46bd      	mov	sp, r7
 800f912:	f85d 7b04 	ldr.w	r7, [sp], #4
 800f916:	4770      	bx	lr

0800f918 <_ZNK8touchgfx9PartitionINS_4meta8TypeListI13MainPresenterNS2_INS1_3NilES4_EEEELt1EE7elementEt>:
    virtual const void* element(uint16_t index) const
 800f918:	b480      	push	{r7}
 800f91a:	b083      	sub	sp, #12
 800f91c:	af00      	add	r7, sp, #0
 800f91e:	6078      	str	r0, [r7, #4]
 800f920:	460b      	mov	r3, r1
 800f922:	807b      	strh	r3, [r7, #2]
        return &stBlocks[index];
 800f924:	887b      	ldrh	r3, [r7, #2]
 800f926:	011b      	lsls	r3, r3, #4
 800f928:	3308      	adds	r3, #8
 800f92a:	687a      	ldr	r2, [r7, #4]
 800f92c:	4413      	add	r3, r2
    }
 800f92e:	4618      	mov	r0, r3
 800f930:	370c      	adds	r7, #12
 800f932:	46bd      	mov	sp, r7
 800f934:	f85d 7b04 	ldr.w	r7, [sp], #4
 800f938:	4770      	bx	lr

0800f93a <_GLOBAL__sub_I_touchgfx_init>:
 800f93a:	b580      	push	{r7, lr}
 800f93c:	af00      	add	r7, sp, #0
 800f93e:	f64f 71ff 	movw	r1, #65535	@ 0xffff
 800f942:	2001      	movs	r0, #1
 800f944:	f7ff fefc 	bl	800f740 <_Z41__static_initialization_and_destruction_0ii>
 800f948:	bd80      	pop	{r7, pc}

0800f94a <_GLOBAL__sub_D_touchgfx_init>:
 800f94a:	b580      	push	{r7, lr}
 800f94c:	af00      	add	r7, sp, #0
 800f94e:	f64f 71ff 	movw	r1, #65535	@ 0xffff
 800f952:	2000      	movs	r0, #0
 800f954:	f7ff fef4 	bl	800f740 <_Z41__static_initialization_and_destruction_0ii>
 800f958:	bd80      	pop	{r7, pc}

0800f95a <_ZNK8touchgfx9colortypecvmEv>:
    operator uint32_t() const
 800f95a:	b480      	push	{r7}
 800f95c:	b083      	sub	sp, #12
 800f95e:	af00      	add	r7, sp, #0
 800f960:	6078      	str	r0, [r7, #4]
        return color;
 800f962:	687b      	ldr	r3, [r7, #4]
 800f964:	681b      	ldr	r3, [r3, #0]
    }
 800f966:	4618      	mov	r0, r3
 800f968:	370c      	adds	r7, #12
 800f96a:	46bd      	mov	sp, r7
 800f96c:	f85d 7b04 	ldr.w	r7, [sp], #4
 800f970:	4770      	bx	lr
	...

0800f974 <_ZN8touchgfx20FrameBufferAllocatorD1Ev>:
     * transferred and ready to reuse.
     */
    virtual void freeBlockAfterTransfer() = 0;

    /** Finalizes an instance of the FrameBufferAllocator class. */
    virtual ~FrameBufferAllocator()
 800f974:	b480      	push	{r7}
 800f976:	b083      	sub	sp, #12
 800f978:	af00      	add	r7, sp, #0
 800f97a:	6078      	str	r0, [r7, #4]
    {
 800f97c:	4a04      	ldr	r2, [pc, #16]	@ (800f990 <_ZN8touchgfx20FrameBufferAllocatorD1Ev+0x1c>)
 800f97e:	687b      	ldr	r3, [r7, #4]
 800f980:	601a      	str	r2, [r3, #0]
    }
 800f982:	687b      	ldr	r3, [r7, #4]
 800f984:	4618      	mov	r0, r3
 800f986:	370c      	adds	r7, #12
 800f988:	46bd      	mov	sp, r7
 800f98a:	f85d 7b04 	ldr.w	r7, [sp], #4
 800f98e:	4770      	bx	lr
 800f990:	08028ddc 	.word	0x08028ddc

0800f994 <_ZN8touchgfx20FrameBufferAllocatorD0Ev>:
    virtual ~FrameBufferAllocator()
 800f994:	b580      	push	{r7, lr}
 800f996:	b082      	sub	sp, #8
 800f998:	af00      	add	r7, sp, #0
 800f99a:	6078      	str	r0, [r7, #4]
    }
 800f99c:	6878      	ldr	r0, [r7, #4]
 800f99e:	f7ff ffe9 	bl	800f974 <_ZN8touchgfx20FrameBufferAllocatorD1Ev>
 800f9a2:	2104      	movs	r1, #4
 800f9a4:	6878      	ldr	r0, [r7, #4]
 800f9a6:	f016 f874 	bl	8025a92 <_ZdlPvj>
 800f9aa:	687b      	ldr	r3, [r7, #4]
 800f9ac:	4618      	mov	r0, r3
 800f9ae:	3708      	adds	r7, #8
 800f9b0:	46bd      	mov	sp, r7
 800f9b2:	bd80      	pop	{r7, pc}

0800f9b4 <_ZN8touchgfx3HAL5vSyncEv>:
    /**
     * Called by the VSync interrupt.
     *
     * Called by the VSync interrupt for counting of LCD refreshes.
     */
    void vSync()
 800f9b4:	b480      	push	{r7}
 800f9b6:	b083      	sub	sp, #12
 800f9b8:	af00      	add	r7, sp, #0
 800f9ba:	6078      	str	r0, [r7, #4]
    {
        vSyncCnt++;
 800f9bc:	687b      	ldr	r3, [r7, #4]
 800f9be:	f893 306a 	ldrb.w	r3, [r3, #106]	@ 0x6a
 800f9c2:	3301      	adds	r3, #1
 800f9c4:	b2da      	uxtb	r2, r3
 800f9c6:	687b      	ldr	r3, [r7, #4]
 800f9c8:	f883 206a 	strb.w	r2, [r3, #106]	@ 0x6a
    }
 800f9cc:	bf00      	nop
 800f9ce:	370c      	adds	r7, #12
 800f9d0:	46bd      	mov	sp, r7
 800f9d2:	f85d 7b04 	ldr.w	r7, [sp], #4
 800f9d6:	4770      	bx	lr

0800f9d8 <_ZN8touchgfx3HAL23setFrameBufferAllocatorEPNS_20FrameBufferAllocatorE>:
     * Sets a framebuffer allocator. The framebuffer allocator is only used in partial
     * framebuffer mode.
     *
     * @param [in] allocator pointer to a framebuffer allocator object.
     */
    void setFrameBufferAllocator(FrameBufferAllocator* allocator)
 800f9d8:	b480      	push	{r7}
 800f9da:	b083      	sub	sp, #12
 800f9dc:	af00      	add	r7, sp, #0
 800f9de:	6078      	str	r0, [r7, #4]
 800f9e0:	6039      	str	r1, [r7, #0]
    {
        frameBufferAllocator = allocator;
 800f9e2:	687b      	ldr	r3, [r7, #4]
 800f9e4:	683a      	ldr	r2, [r7, #0]
 800f9e6:	619a      	str	r2, [r3, #24]
    }
 800f9e8:	bf00      	nop
 800f9ea:	370c      	adds	r7, #12
 800f9ec:	46bd      	mov	sp, r7
 800f9ee:	f85d 7b04 	ldr.w	r7, [sp], #4
 800f9f2:	4770      	bx	lr

0800f9f4 <_ZN8touchgfx3HAL23getFrameBufferAllocatorEv>:
    /**
     * Gets the framebuffer allocator.
     *
     * @return The framebuffer allocator.
     */
    FrameBufferAllocator* getFrameBufferAllocator()
 800f9f4:	b480      	push	{r7}
 800f9f6:	b083      	sub	sp, #12
 800f9f8:	af00      	add	r7, sp, #0
 800f9fa:	6078      	str	r0, [r7, #4]
    {
        return frameBufferAllocator;
 800f9fc:	687b      	ldr	r3, [r7, #4]
 800f9fe:	699b      	ldr	r3, [r3, #24]
    }
 800fa00:	4618      	mov	r0, r3
 800fa02:	370c      	adds	r7, #12
 800fa04:	46bd      	mov	sp, r7
 800fa06:	f85d 7b04 	ldr.w	r7, [sp], #4
 800fa0a:	4770      	bx	lr

0800fa0c <_ZN8touchgfx3HAL23setFrameRefreshStrategyENS0_20FrameRefreshStrategyE>:
     *
     * @param  s The desired strategy to use.
     *
     * @return true if the desired strategy will be used, false otherwise.
     */
    bool setFrameRefreshStrategy(FrameRefreshStrategy s)
 800fa0c:	b580      	push	{r7, lr}
 800fa0e:	b082      	sub	sp, #8
 800fa10:	af00      	add	r7, sp, #0
 800fa12:	6078      	str	r0, [r7, #4]
 800fa14:	460b      	mov	r3, r1
 800fa16:	70fb      	strb	r3, [r7, #3]
    {
        if (s == REFRESH_STRATEGY_DEFAULT || s == REFRESH_STRATEGY_PARTIAL_FRAMEBUFFER)
 800fa18:	78fb      	ldrb	r3, [r7, #3]
 800fa1a:	2b00      	cmp	r3, #0
 800fa1c:	d002      	beq.n	800fa24 <_ZN8touchgfx3HAL23setFrameRefreshStrategyENS0_20FrameRefreshStrategyE+0x18>
 800fa1e:	78fb      	ldrb	r3, [r7, #3]
 800fa20:	2b02      	cmp	r3, #2
 800fa22:	d105      	bne.n	800fa30 <_ZN8touchgfx3HAL23setFrameRefreshStrategyENS0_20FrameRefreshStrategyE+0x24>
        {
            refreshStrategy = s;
 800fa24:	687b      	ldr	r3, [r7, #4]
 800fa26:	78fa      	ldrb	r2, [r7, #3]
 800fa28:	f883 2048 	strb.w	r2, [r3, #72]	@ 0x48
            return true;
 800fa2c:	2301      	movs	r3, #1
 800fa2e:	e027      	b.n	800fa80 <_ZN8touchgfx3HAL23setFrameRefreshStrategyENS0_20FrameRefreshStrategyE+0x74>
        }
        if (s == REFRESH_STRATEGY_OPTIM_SINGLE_BUFFER_TFT_CTRL)
 800fa30:	78fb      	ldrb	r3, [r7, #3]
 800fa32:	2b01      	cmp	r3, #1
 800fa34:	d123      	bne.n	800fa7e <_ZN8touchgfx3HAL23setFrameRefreshStrategyENS0_20FrameRefreshStrategyE+0x72>
        {
            // Perform sanity checks. This strategy requires
            //   - task delay function
            //   - a TFT controller (+ an impl of getTFTCurrentLine())
            //   - single buffering
            if (taskDelayFunc != 0 && getTFTCurrentLine() != 0xFFFF && !USE_DOUBLE_BUFFERING)
 800fa36:	687b      	ldr	r3, [r7, #4]
 800fa38:	6b9b      	ldr	r3, [r3, #56]	@ 0x38
 800fa3a:	2b00      	cmp	r3, #0
 800fa3c:	d014      	beq.n	800fa68 <_ZN8touchgfx3HAL23setFrameRefreshStrategyENS0_20FrameRefreshStrategyE+0x5c>
 800fa3e:	687b      	ldr	r3, [r7, #4]
 800fa40:	681b      	ldr	r3, [r3, #0]
 800fa42:	339c      	adds	r3, #156	@ 0x9c
 800fa44:	681b      	ldr	r3, [r3, #0]
 800fa46:	6878      	ldr	r0, [r7, #4]
 800fa48:	4798      	blx	r3
 800fa4a:	4603      	mov	r3, r0
 800fa4c:	461a      	mov	r2, r3
 800fa4e:	f64f 73ff 	movw	r3, #65535	@ 0xffff
 800fa52:	429a      	cmp	r2, r3
 800fa54:	d008      	beq.n	800fa68 <_ZN8touchgfx3HAL23setFrameRefreshStrategyENS0_20FrameRefreshStrategyE+0x5c>
 800fa56:	4b0c      	ldr	r3, [pc, #48]	@ (800fa88 <_ZN8touchgfx3HAL23setFrameRefreshStrategyENS0_20FrameRefreshStrategyE+0x7c>)
 800fa58:	781b      	ldrb	r3, [r3, #0]
 800fa5a:	f083 0301 	eor.w	r3, r3, #1
 800fa5e:	b2db      	uxtb	r3, r3
 800fa60:	2b00      	cmp	r3, #0
 800fa62:	d001      	beq.n	800fa68 <_ZN8touchgfx3HAL23setFrameRefreshStrategyENS0_20FrameRefreshStrategyE+0x5c>
 800fa64:	2301      	movs	r3, #1
 800fa66:	e000      	b.n	800fa6a <_ZN8touchgfx3HAL23setFrameRefreshStrategyENS0_20FrameRefreshStrategyE+0x5e>
 800fa68:	2300      	movs	r3, #0
 800fa6a:	2b00      	cmp	r3, #0
 800fa6c:	d005      	beq.n	800fa7a <_ZN8touchgfx3HAL23setFrameRefreshStrategyENS0_20FrameRefreshStrategyE+0x6e>
            {
                refreshStrategy = s;
 800fa6e:	687b      	ldr	r3, [r7, #4]
 800fa70:	78fa      	ldrb	r2, [r7, #3]
 800fa72:	f883 2048 	strb.w	r2, [r3, #72]	@ 0x48
                return true;
 800fa76:	2301      	movs	r3, #1
 800fa78:	e002      	b.n	800fa80 <_ZN8touchgfx3HAL23setFrameRefreshStrategyENS0_20FrameRefreshStrategyE+0x74>
            }
            return false;
 800fa7a:	2300      	movs	r3, #0
 800fa7c:	e000      	b.n	800fa80 <_ZN8touchgfx3HAL23setFrameRefreshStrategyENS0_20FrameRefreshStrategyE+0x74>
        }
        // Unknown strategy
        return false;
 800fa7e:	2300      	movs	r3, #0
    }
 800fa80:	4618      	mov	r0, r3
 800fa82:	3708      	adds	r7, #8
 800fa84:	46bd      	mov	sp, r7
 800fa86:	bd80      	pop	{r7, pc}
 800fa88:	20002fa6 	.word	0x20002fa6

0800fa8c <_ZN8touchgfx5paint8tearDownEv>:
{
    blendL8CLUT = data;
}

void tearDown()
{
 800fa8c:	b480      	push	{r7}
 800fa8e:	af00      	add	r7, sp, #0
}
 800fa90:	bf00      	nop
 800fa92:	46bd      	mov	sp, r7
 800fa94:	f85d 7b04 	ldr.w	r7, [sp], #4
 800fa98:	4770      	bx	lr

0800fa9a <_ZN8touchgfx5paint9flushLineEPmi>:

void flushLine(uint32_t* addr, int sizebytes)
{
 800fa9a:	b480      	push	{r7}
 800fa9c:	b083      	sub	sp, #12
 800fa9e:	af00      	add	r7, sp, #0
 800faa0:	6078      	str	r0, [r7, #4]
 800faa2:	6039      	str	r1, [r7, #0]
}
 800faa4:	bf00      	nop
 800faa6:	370c      	adds	r7, #12
 800faa8:	46bd      	mov	sp, r7
 800faaa:	f85d 7b04 	ldr.w	r7, [sp], #4
 800faae:	4770      	bx	lr

0800fab0 <_ZN8touchgfx5paint6rgb56514lineFromRGB565EPtPKtjh>:
        } while (++framebuffer < lineEnd);
    }
}

void lineFromRGB565(uint16_t* const ptr, const uint16_t* const data, const unsigned count, const uint8_t alpha)
{
 800fab0:	b480      	push	{r7}
 800fab2:	b08d      	sub	sp, #52	@ 0x34
 800fab4:	af00      	add	r7, sp, #0
 800fab6:	60f8      	str	r0, [r7, #12]
 800fab8:	60b9      	str	r1, [r7, #8]
 800faba:	607a      	str	r2, [r7, #4]
 800fabc:	70fb      	strb	r3, [r7, #3]
    uint16_t* framebuffer = ptr;
 800fabe:	68fb      	ldr	r3, [r7, #12]
 800fac0:	62fb      	str	r3, [r7, #44]	@ 0x2c
    const uint16_t* bitmapPointer = data;
 800fac2:	68bb      	ldr	r3, [r7, #8]
 800fac4:	62bb      	str	r3, [r7, #40]	@ 0x28
    const uint16_t* const chunkend = framebuffer + count;
 800fac6:	687b      	ldr	r3, [r7, #4]
 800fac8:	005b      	lsls	r3, r3, #1
 800faca:	6afa      	ldr	r2, [r7, #44]	@ 0x2c
 800facc:	4413      	add	r3, r2
 800face:	627b      	str	r3, [r7, #36]	@ 0x24

    if (alpha == 0xFF)
 800fad0:	78fb      	ldrb	r3, [r7, #3]
 800fad2:	2bff      	cmp	r3, #255	@ 0xff
 800fad4:	d112      	bne.n	800fafc <_ZN8touchgfx5paint6rgb56514lineFromRGB565EPtPKtjh+0x4c>
    {
        do
        {
            *framebuffer = *bitmapPointer++;
 800fad6:	6abb      	ldr	r3, [r7, #40]	@ 0x28
 800fad8:	1c9a      	adds	r2, r3, #2
 800fada:	62ba      	str	r2, [r7, #40]	@ 0x28
 800fadc:	881a      	ldrh	r2, [r3, #0]
 800fade:	6afb      	ldr	r3, [r7, #44]	@ 0x2c
 800fae0:	801a      	strh	r2, [r3, #0]
        } while (++framebuffer < chunkend);
 800fae2:	6afb      	ldr	r3, [r7, #44]	@ 0x2c
 800fae4:	3302      	adds	r3, #2
 800fae6:	62fb      	str	r3, [r7, #44]	@ 0x2c
 800fae8:	6afa      	ldr	r2, [r7, #44]	@ 0x2c
 800faea:	6a7b      	ldr	r3, [r7, #36]	@ 0x24
 800faec:	429a      	cmp	r2, r3
 800faee:	bf34      	ite	cc
 800faf0:	2301      	movcc	r3, #1
 800faf2:	2300      	movcs	r3, #0
 800faf4:	b2db      	uxtb	r3, r3
 800faf6:	2b00      	cmp	r3, #0
 800faf8:	d1ed      	bne.n	800fad6 <_ZN8touchgfx5paint6rgb56514lineFromRGB565EPtPKtjh+0x26>
        do
        {
            *framebuffer = alphaBlend(*bitmapPointer++, *framebuffer, alpha);
        } while (++framebuffer < chunkend);
    }
}
 800fafa:	e079      	b.n	800fbf0 <_ZN8touchgfx5paint6rgb56514lineFromRGB565EPtPKtjh+0x140>
            *framebuffer = alphaBlend(*bitmapPointer++, *framebuffer, alpha);
 800fafc:	6abb      	ldr	r3, [r7, #40]	@ 0x28
 800fafe:	1c9a      	adds	r2, r3, #2
 800fb00:	62ba      	str	r2, [r7, #40]	@ 0x28
 800fb02:	881a      	ldrh	r2, [r3, #0]
 800fb04:	6afb      	ldr	r3, [r7, #44]	@ 0x2c
 800fb06:	881b      	ldrh	r3, [r3, #0]
 800fb08:	847a      	strh	r2, [r7, #34]	@ 0x22
 800fb0a:	843b      	strh	r3, [r7, #32]
 800fb0c:	78fb      	ldrb	r3, [r7, #3]
 800fb0e:	77fb      	strb	r3, [r7, #31]
    return alphaBlend(newpix & RMASK, newpix & GMASK, newpix & BMASK, bufpix, alpha);
 800fb10:	8c7b      	ldrh	r3, [r7, #34]	@ 0x22
 800fb12:	f423 63ff 	bic.w	r3, r3, #2040	@ 0x7f8
 800fb16:	f023 0307 	bic.w	r3, r3, #7
 800fb1a:	b299      	uxth	r1, r3
 800fb1c:	8c7b      	ldrh	r3, [r7, #34]	@ 0x22
 800fb1e:	f403 63fc 	and.w	r3, r3, #2016	@ 0x7e0
 800fb22:	b29a      	uxth	r2, r3
 800fb24:	8c7b      	ldrh	r3, [r7, #34]	@ 0x22
 800fb26:	f003 031f 	and.w	r3, r3, #31
 800fb2a:	b29b      	uxth	r3, r3
 800fb2c:	83b9      	strh	r1, [r7, #28]
 800fb2e:	837a      	strh	r2, [r7, #26]
 800fb30:	833b      	strh	r3, [r7, #24]
 800fb32:	8c3b      	ldrh	r3, [r7, #32]
 800fb34:	82fb      	strh	r3, [r7, #22]
 800fb36:	7ffb      	ldrb	r3, [r7, #31]
 800fb38:	757b      	strb	r3, [r7, #21]
    const uint8_t ialpha = 0xFF - alpha;
 800fb3a:	7d7b      	ldrb	r3, [r7, #21]
 800fb3c:	43db      	mvns	r3, r3
 800fb3e:	753b      	strb	r3, [r7, #20]
    return (((R * alpha + (bufpix & RMASK) * ialpha) / 255) & RMASK) |
 800fb40:	8bbb      	ldrh	r3, [r7, #28]
 800fb42:	7d7a      	ldrb	r2, [r7, #21]
 800fb44:	fb03 f202 	mul.w	r2, r3, r2
 800fb48:	8afb      	ldrh	r3, [r7, #22]
 800fb4a:	f403 4378 	and.w	r3, r3, #63488	@ 0xf800
 800fb4e:	7d39      	ldrb	r1, [r7, #20]
 800fb50:	fb01 f303 	mul.w	r3, r1, r3
 800fb54:	4413      	add	r3, r2
 800fb56:	4a29      	ldr	r2, [pc, #164]	@ (800fbfc <_ZN8touchgfx5paint6rgb56514lineFromRGB565EPtPKtjh+0x14c>)
 800fb58:	fb82 1203 	smull	r1, r2, r2, r3
 800fb5c:	441a      	add	r2, r3
 800fb5e:	11d2      	asrs	r2, r2, #7
 800fb60:	17db      	asrs	r3, r3, #31
 800fb62:	1ad3      	subs	r3, r2, r3
 800fb64:	b21b      	sxth	r3, r3
 800fb66:	f423 63ff 	bic.w	r3, r3, #2040	@ 0x7f8
 800fb6a:	f023 0307 	bic.w	r3, r3, #7
 800fb6e:	b21a      	sxth	r2, r3
           (((G * alpha + (bufpix & GMASK) * ialpha) / 255) & GMASK) |
 800fb70:	8b7b      	ldrh	r3, [r7, #26]
 800fb72:	7d79      	ldrb	r1, [r7, #21]
 800fb74:	fb03 f101 	mul.w	r1, r3, r1
 800fb78:	8afb      	ldrh	r3, [r7, #22]
 800fb7a:	f403 63fc 	and.w	r3, r3, #2016	@ 0x7e0
 800fb7e:	7d38      	ldrb	r0, [r7, #20]
 800fb80:	fb00 f303 	mul.w	r3, r0, r3
 800fb84:	440b      	add	r3, r1
 800fb86:	491d      	ldr	r1, [pc, #116]	@ (800fbfc <_ZN8touchgfx5paint6rgb56514lineFromRGB565EPtPKtjh+0x14c>)
 800fb88:	fb81 0103 	smull	r0, r1, r1, r3
 800fb8c:	4419      	add	r1, r3
 800fb8e:	11c9      	asrs	r1, r1, #7
 800fb90:	17db      	asrs	r3, r3, #31
 800fb92:	1acb      	subs	r3, r1, r3
 800fb94:	b21b      	sxth	r3, r3
 800fb96:	f403 63fc 	and.w	r3, r3, #2016	@ 0x7e0
 800fb9a:	b21b      	sxth	r3, r3
    return (((R * alpha + (bufpix & RMASK) * ialpha) / 255) & RMASK) |
 800fb9c:	4313      	orrs	r3, r2
 800fb9e:	b21a      	sxth	r2, r3
           (((B * alpha + (bufpix & BMASK) * ialpha) / 255) & BMASK);
 800fba0:	8b3b      	ldrh	r3, [r7, #24]
 800fba2:	7d79      	ldrb	r1, [r7, #21]
 800fba4:	fb03 f101 	mul.w	r1, r3, r1
 800fba8:	8afb      	ldrh	r3, [r7, #22]
 800fbaa:	f003 031f 	and.w	r3, r3, #31
 800fbae:	7d38      	ldrb	r0, [r7, #20]
 800fbb0:	fb00 f303 	mul.w	r3, r0, r3
 800fbb4:	440b      	add	r3, r1
 800fbb6:	4911      	ldr	r1, [pc, #68]	@ (800fbfc <_ZN8touchgfx5paint6rgb56514lineFromRGB565EPtPKtjh+0x14c>)
 800fbb8:	fb81 0103 	smull	r0, r1, r1, r3
 800fbbc:	4419      	add	r1, r3
 800fbbe:	11c9      	asrs	r1, r1, #7
 800fbc0:	17db      	asrs	r3, r3, #31
 800fbc2:	1acb      	subs	r3, r1, r3
 800fbc4:	b21b      	sxth	r3, r3
 800fbc6:	f003 031f 	and.w	r3, r3, #31
 800fbca:	b21b      	sxth	r3, r3
           (((G * alpha + (bufpix & GMASK) * ialpha) / 255) & GMASK) |
 800fbcc:	4313      	orrs	r3, r2
 800fbce:	b21b      	sxth	r3, r3
           (((B * alpha + (bufpix & BMASK) * ialpha) / 255) & BMASK);
 800fbd0:	b29a      	uxth	r2, r3
    return alphaBlend(newpix & RMASK, newpix & GMASK, newpix & BMASK, bufpix, alpha);
 800fbd2:	bf00      	nop
            *framebuffer = alphaBlend(*bitmapPointer++, *framebuffer, alpha);
 800fbd4:	6afb      	ldr	r3, [r7, #44]	@ 0x2c
 800fbd6:	801a      	strh	r2, [r3, #0]
        } while (++framebuffer < chunkend);
 800fbd8:	6afb      	ldr	r3, [r7, #44]	@ 0x2c
 800fbda:	3302      	adds	r3, #2
 800fbdc:	62fb      	str	r3, [r7, #44]	@ 0x2c
 800fbde:	6afa      	ldr	r2, [r7, #44]	@ 0x2c
 800fbe0:	6a7b      	ldr	r3, [r7, #36]	@ 0x24
 800fbe2:	429a      	cmp	r2, r3
 800fbe4:	bf34      	ite	cc
 800fbe6:	2301      	movcc	r3, #1
 800fbe8:	2300      	movcs	r3, #0
 800fbea:	b2db      	uxtb	r3, r3
 800fbec:	2b00      	cmp	r3, #0
 800fbee:	d185      	bne.n	800fafc <_ZN8touchgfx5paint6rgb56514lineFromRGB565EPtPKtjh+0x4c>
}
 800fbf0:	bf00      	nop
 800fbf2:	3734      	adds	r7, #52	@ 0x34
 800fbf4:	46bd      	mov	sp, r7
 800fbf6:	f85d 7b04 	ldr.w	r7, [sp], #4
 800fbfa:	4770      	bx	lr
 800fbfc:	80808081 	.word	0x80808081

0800fc00 <_ZN8touchgfx5paint6rgb56516lineFromARGB8888EPtPKmjh>:

void lineFromARGB8888(uint16_t* const ptr, const uint32_t* const data, const unsigned count, const uint8_t alpha)
{
 800fc00:	b590      	push	{r4, r7, lr}
 800fc02:	b093      	sub	sp, #76	@ 0x4c
 800fc04:	af00      	add	r7, sp, #0
 800fc06:	60f8      	str	r0, [r7, #12]
 800fc08:	60b9      	str	r1, [r7, #8]
 800fc0a:	607a      	str	r2, [r7, #4]
 800fc0c:	70fb      	strb	r3, [r7, #3]
    uint16_t* framebuffer = ptr;
 800fc0e:	68fb      	ldr	r3, [r7, #12]
 800fc10:	647b      	str	r3, [r7, #68]	@ 0x44
    const uint32_t* bitmapPointer = data;
 800fc12:	68bb      	ldr	r3, [r7, #8]
 800fc14:	643b      	str	r3, [r7, #64]	@ 0x40
    const uint16_t* const chunkend = framebuffer + count;
 800fc16:	687b      	ldr	r3, [r7, #4]
 800fc18:	005b      	lsls	r3, r3, #1
 800fc1a:	6c7a      	ldr	r2, [r7, #68]	@ 0x44
 800fc1c:	4413      	add	r3, r2
 800fc1e:	63fb      	str	r3, [r7, #60]	@ 0x3c
    do
    {
        const uint8_t srcAlpha = (*bitmapPointer) >> 24;
 800fc20:	6c3b      	ldr	r3, [r7, #64]	@ 0x40
 800fc22:	681b      	ldr	r3, [r3, #0]
 800fc24:	0e1b      	lsrs	r3, r3, #24
 800fc26:	f887 303b 	strb.w	r3, [r7, #59]	@ 0x3b
        const uint8_t a = LCD::div255(alpha * srcAlpha);
 800fc2a:	78fb      	ldrb	r3, [r7, #3]
 800fc2c:	b29a      	uxth	r2, r3
 800fc2e:	f897 303b 	ldrb.w	r3, [r7, #59]	@ 0x3b
 800fc32:	b29b      	uxth	r3, r3
 800fc34:	fb12 f303 	smulbb	r3, r2, r3
 800fc38:	b29b      	uxth	r3, r3
 800fc3a:	867b      	strh	r3, [r7, #50]	@ 0x32
     *
     * @return The result of a division by 255.
     */
    FORCE_INLINE_FUNCTION static uint8_t div255(uint16_t num)
    {
        return (num + 1 + (num >> 8)) >> 8;
 800fc3c:	8e7b      	ldrh	r3, [r7, #50]	@ 0x32
 800fc3e:	3301      	adds	r3, #1
 800fc40:	8e7a      	ldrh	r2, [r7, #50]	@ 0x32
 800fc42:	0a12      	lsrs	r2, r2, #8
 800fc44:	b292      	uxth	r2, r2
 800fc46:	4413      	add	r3, r2
 800fc48:	121b      	asrs	r3, r3, #8
 800fc4a:	b2db      	uxtb	r3, r3
 800fc4c:	f887 303a 	strb.w	r3, [r7, #58]	@ 0x3a
        if (a == 0xFF)
 800fc50:	f897 303a 	ldrb.w	r3, [r7, #58]	@ 0x3a
 800fc54:	2bff      	cmp	r3, #255	@ 0xff
 800fc56:	d133      	bne.n	800fcc0 <_ZN8touchgfx5paint6rgb56516lineFromARGB8888EPtPKmjh+0xc0>
        {
            *framebuffer = getNativeColor(*bitmapPointer);
 800fc58:	6c3b      	ldr	r3, [r7, #64]	@ 0x40
 800fc5a:	681a      	ldr	r2, [r3, #0]
 800fc5c:	f107 0318 	add.w	r3, r7, #24
 800fc60:	4611      	mov	r1, r2
 800fc62:	4618      	mov	r0, r3
 800fc64:	f7f9 fdbc 	bl	80097e0 <_ZN8touchgfx9colortypeC1Em>
 800fc68:	69bb      	ldr	r3, [r7, #24]
 800fc6a:	617b      	str	r3, [r7, #20]
    return ((color >> 8) & 0xF800) | ((color >> 5) & 0x07E0) | ((color >> 3) & 0x001F);
 800fc6c:	f107 0314 	add.w	r3, r7, #20
 800fc70:	4618      	mov	r0, r3
 800fc72:	f7ff fe72 	bl	800f95a <_ZNK8touchgfx9colortypecvmEv>
 800fc76:	4603      	mov	r3, r0
 800fc78:	0a1b      	lsrs	r3, r3, #8
 800fc7a:	b29b      	uxth	r3, r3
 800fc7c:	f423 63ff 	bic.w	r3, r3, #2040	@ 0x7f8
 800fc80:	f023 0307 	bic.w	r3, r3, #7
 800fc84:	b29c      	uxth	r4, r3
 800fc86:	f107 0314 	add.w	r3, r7, #20
 800fc8a:	4618      	mov	r0, r3
 800fc8c:	f7ff fe65 	bl	800f95a <_ZNK8touchgfx9colortypecvmEv>
 800fc90:	4603      	mov	r3, r0
 800fc92:	095b      	lsrs	r3, r3, #5
 800fc94:	b29b      	uxth	r3, r3
 800fc96:	f403 63fc 	and.w	r3, r3, #2016	@ 0x7e0
 800fc9a:	b29b      	uxth	r3, r3
 800fc9c:	4323      	orrs	r3, r4
 800fc9e:	b29c      	uxth	r4, r3
 800fca0:	f107 0314 	add.w	r3, r7, #20
 800fca4:	4618      	mov	r0, r3
 800fca6:	f7ff fe58 	bl	800f95a <_ZNK8touchgfx9colortypecvmEv>
 800fcaa:	4603      	mov	r3, r0
 800fcac:	08db      	lsrs	r3, r3, #3
 800fcae:	b29b      	uxth	r3, r3
 800fcb0:	f003 031f 	and.w	r3, r3, #31
 800fcb4:	b29b      	uxth	r3, r3
 800fcb6:	4323      	orrs	r3, r4
 800fcb8:	b29a      	uxth	r2, r3
            *framebuffer = getNativeColor(*bitmapPointer);
 800fcba:	6c7b      	ldr	r3, [r7, #68]	@ 0x44
 800fcbc:	801a      	strh	r2, [r3, #0]
 800fcbe:	e0a9      	b.n	800fe14 <_ZN8touchgfx5paint6rgb56516lineFromARGB8888EPtPKmjh+0x214>
        }
        else if (a)
 800fcc0:	f897 303a 	ldrb.w	r3, [r7, #58]	@ 0x3a
 800fcc4:	2b00      	cmp	r3, #0
 800fcc6:	f000 80a5 	beq.w	800fe14 <_ZN8touchgfx5paint6rgb56516lineFromARGB8888EPtPKmjh+0x214>
        {
            const uint32_t newpix = *bitmapPointer;
 800fcca:	6c3b      	ldr	r3, [r7, #64]	@ 0x40
 800fccc:	681b      	ldr	r3, [r3, #0]
 800fcce:	637b      	str	r3, [r7, #52]	@ 0x34
            *framebuffer = alphaBlend24bit((newpix >> 16), (newpix >> 8), (newpix), *framebuffer, a);
 800fcd0:	6b7b      	ldr	r3, [r7, #52]	@ 0x34
 800fcd2:	0c1b      	lsrs	r3, r3, #16
 800fcd4:	b2d8      	uxtb	r0, r3
 800fcd6:	6b7b      	ldr	r3, [r7, #52]	@ 0x34
 800fcd8:	0a1b      	lsrs	r3, r3, #8
 800fcda:	b2d9      	uxtb	r1, r3
 800fcdc:	6b7b      	ldr	r3, [r7, #52]	@ 0x34
 800fcde:	b2da      	uxtb	r2, r3
 800fce0:	6c7b      	ldr	r3, [r7, #68]	@ 0x44
 800fce2:	881b      	ldrh	r3, [r3, #0]
 800fce4:	f887 0031 	strb.w	r0, [r7, #49]	@ 0x31
 800fce8:	f887 1030 	strb.w	r1, [r7, #48]	@ 0x30
 800fcec:	f887 202f 	strb.w	r2, [r7, #47]	@ 0x2f
 800fcf0:	85bb      	strh	r3, [r7, #44]	@ 0x2c
 800fcf2:	f897 303a 	ldrb.w	r3, [r7, #58]	@ 0x3a
 800fcf6:	f887 302b 	strb.w	r3, [r7, #43]	@ 0x2b
    const uint8_t ialpha = 0xFF - alpha;
 800fcfa:	f897 302b 	ldrb.w	r3, [r7, #43]	@ 0x2b
 800fcfe:	43db      	mvns	r3, r3
 800fd00:	f887 302a 	strb.w	r3, [r7, #42]	@ 0x2a
 800fd04:	8dbb      	ldrh	r3, [r7, #44]	@ 0x2c
 800fd06:	853b      	strh	r3, [r7, #40]	@ 0x28
     *
     * @return The red part of the color (0 to 255).
     */
    FORCE_INLINE_FUNCTION static uint8_t getRedFromRGB565(uint16_t color)
    {
        const uint8_t red = (color >> 8) & 0xF8;
 800fd08:	8d3b      	ldrh	r3, [r7, #40]	@ 0x28
 800fd0a:	0a1b      	lsrs	r3, r3, #8
 800fd0c:	b29b      	uxth	r3, r3
 800fd0e:	b2db      	uxtb	r3, r3
 800fd10:	f023 0307 	bic.w	r3, r3, #7
 800fd14:	f887 3027 	strb.w	r3, [r7, #39]	@ 0x27
        return red | (red >> 5);
 800fd18:	f897 3027 	ldrb.w	r3, [r7, #39]	@ 0x27
 800fd1c:	095b      	lsrs	r3, r3, #5
 800fd1e:	b2da      	uxtb	r2, r3
 800fd20:	f897 3027 	ldrb.w	r3, [r7, #39]	@ 0x27
 800fd24:	4313      	orrs	r3, r2
 800fd26:	b2db      	uxtb	r3, r3
    const uint8_t fbred = Color::getRedFromRGB565(bufpix);
 800fd28:	f887 3026 	strb.w	r3, [r7, #38]	@ 0x26
 800fd2c:	8dbb      	ldrh	r3, [r7, #44]	@ 0x2c
 800fd2e:	84bb      	strh	r3, [r7, #36]	@ 0x24
     *
     * @return The green part of the color (0 to 255).
     */
    FORCE_INLINE_FUNCTION static uint8_t getGreenFromRGB565(uint16_t color)
    {
        const uint8_t green = (color >> 3) & 0xFC;
 800fd30:	8cbb      	ldrh	r3, [r7, #36]	@ 0x24
 800fd32:	08db      	lsrs	r3, r3, #3
 800fd34:	b29b      	uxth	r3, r3
 800fd36:	b2db      	uxtb	r3, r3
 800fd38:	f023 0303 	bic.w	r3, r3, #3
 800fd3c:	f887 3023 	strb.w	r3, [r7, #35]	@ 0x23
        return green | (green >> 6);
 800fd40:	f897 3023 	ldrb.w	r3, [r7, #35]	@ 0x23
 800fd44:	099b      	lsrs	r3, r3, #6
 800fd46:	b2da      	uxtb	r2, r3
 800fd48:	f897 3023 	ldrb.w	r3, [r7, #35]	@ 0x23
 800fd4c:	4313      	orrs	r3, r2
 800fd4e:	b2db      	uxtb	r3, r3
    const uint8_t fbgreen = Color::getGreenFromRGB565(bufpix);
 800fd50:	f887 3022 	strb.w	r3, [r7, #34]	@ 0x22
 800fd54:	8dbb      	ldrh	r3, [r7, #44]	@ 0x2c
 800fd56:	843b      	strh	r3, [r7, #32]
     *
     * @return The blue part of the color (0 to 255).
     */
    FORCE_INLINE_FUNCTION static uint8_t getBlueFromRGB565(uint16_t color)
    {
        const uint8_t blue = color << 3;
 800fd58:	8c3b      	ldrh	r3, [r7, #32]
 800fd5a:	b2db      	uxtb	r3, r3
 800fd5c:	00db      	lsls	r3, r3, #3
 800fd5e:	77fb      	strb	r3, [r7, #31]
        return blue | (blue >> 5);
 800fd60:	7ffb      	ldrb	r3, [r7, #31]
 800fd62:	095b      	lsrs	r3, r3, #5
 800fd64:	b2da      	uxtb	r2, r3
 800fd66:	7ffb      	ldrb	r3, [r7, #31]
 800fd68:	4313      	orrs	r3, r2
 800fd6a:	b2db      	uxtb	r3, r3
    const uint8_t fbblue = Color::getBlueFromRGB565(bufpix);
 800fd6c:	77bb      	strb	r3, [r7, #30]
    return ((((R * alpha + fbred * ialpha) / 255) << 8) & RMASK) |
 800fd6e:	f897 3031 	ldrb.w	r3, [r7, #49]	@ 0x31
 800fd72:	f897 202b 	ldrb.w	r2, [r7, #43]	@ 0x2b
 800fd76:	fb03 f202 	mul.w	r2, r3, r2
 800fd7a:	f897 3026 	ldrb.w	r3, [r7, #38]	@ 0x26
 800fd7e:	f897 102a 	ldrb.w	r1, [r7, #42]	@ 0x2a
 800fd82:	fb01 f303 	mul.w	r3, r1, r3
 800fd86:	4413      	add	r3, r2
 800fd88:	4a2d      	ldr	r2, [pc, #180]	@ (800fe40 <_ZN8touchgfx5paint6rgb56516lineFromARGB8888EPtPKmjh+0x240>)
 800fd8a:	fb82 1203 	smull	r1, r2, r2, r3
 800fd8e:	441a      	add	r2, r3
 800fd90:	11d2      	asrs	r2, r2, #7
 800fd92:	17db      	asrs	r3, r3, #31
 800fd94:	1ad3      	subs	r3, r2, r3
 800fd96:	021b      	lsls	r3, r3, #8
 800fd98:	b21b      	sxth	r3, r3
 800fd9a:	f423 63ff 	bic.w	r3, r3, #2040	@ 0x7f8
 800fd9e:	f023 0307 	bic.w	r3, r3, #7
 800fda2:	b21a      	sxth	r2, r3
           ((((G * alpha + fbgreen * ialpha) / 255) << 3) & GMASK) |
 800fda4:	f897 3030 	ldrb.w	r3, [r7, #48]	@ 0x30
 800fda8:	f897 102b 	ldrb.w	r1, [r7, #43]	@ 0x2b
 800fdac:	fb03 f101 	mul.w	r1, r3, r1
 800fdb0:	f897 3022 	ldrb.w	r3, [r7, #34]	@ 0x22
 800fdb4:	f897 002a 	ldrb.w	r0, [r7, #42]	@ 0x2a
 800fdb8:	fb00 f303 	mul.w	r3, r0, r3
 800fdbc:	440b      	add	r3, r1
 800fdbe:	4920      	ldr	r1, [pc, #128]	@ (800fe40 <_ZN8touchgfx5paint6rgb56516lineFromARGB8888EPtPKmjh+0x240>)
 800fdc0:	fb81 0103 	smull	r0, r1, r1, r3
 800fdc4:	4419      	add	r1, r3
 800fdc6:	11c9      	asrs	r1, r1, #7
 800fdc8:	17db      	asrs	r3, r3, #31
 800fdca:	1acb      	subs	r3, r1, r3
 800fdcc:	00db      	lsls	r3, r3, #3
 800fdce:	b21b      	sxth	r3, r3
 800fdd0:	f403 63fc 	and.w	r3, r3, #2016	@ 0x7e0
 800fdd4:	b21b      	sxth	r3, r3
    return ((((R * alpha + fbred * ialpha) / 255) << 8) & RMASK) |
 800fdd6:	4313      	orrs	r3, r2
 800fdd8:	b21a      	sxth	r2, r3
           ((((B * alpha + fbblue * ialpha) / 255) >> 3) & BMASK);
 800fdda:	f897 302f 	ldrb.w	r3, [r7, #47]	@ 0x2f
 800fdde:	f897 102b 	ldrb.w	r1, [r7, #43]	@ 0x2b
 800fde2:	fb03 f101 	mul.w	r1, r3, r1
 800fde6:	7fbb      	ldrb	r3, [r7, #30]
 800fde8:	f897 002a 	ldrb.w	r0, [r7, #42]	@ 0x2a
 800fdec:	fb00 f303 	mul.w	r3, r0, r3
 800fdf0:	440b      	add	r3, r1
 800fdf2:	4913      	ldr	r1, [pc, #76]	@ (800fe40 <_ZN8touchgfx5paint6rgb56516lineFromARGB8888EPtPKmjh+0x240>)
 800fdf4:	fb81 0103 	smull	r0, r1, r1, r3
 800fdf8:	4419      	add	r1, r3
 800fdfa:	11c9      	asrs	r1, r1, #7
 800fdfc:	17db      	asrs	r3, r3, #31
 800fdfe:	1acb      	subs	r3, r1, r3
 800fe00:	10db      	asrs	r3, r3, #3
 800fe02:	b21b      	sxth	r3, r3
 800fe04:	f003 031f 	and.w	r3, r3, #31
 800fe08:	b21b      	sxth	r3, r3
           ((((G * alpha + fbgreen * ialpha) / 255) << 3) & GMASK) |
 800fe0a:	4313      	orrs	r3, r2
 800fe0c:	b21b      	sxth	r3, r3
           ((((B * alpha + fbblue * ialpha) / 255) >> 3) & BMASK);
 800fe0e:	b29a      	uxth	r2, r3
            *framebuffer = alphaBlend24bit((newpix >> 16), (newpix >> 8), (newpix), *framebuffer, a);
 800fe10:	6c7b      	ldr	r3, [r7, #68]	@ 0x44
 800fe12:	801a      	strh	r2, [r3, #0]
        }
        bitmapPointer++;
 800fe14:	6c3b      	ldr	r3, [r7, #64]	@ 0x40
 800fe16:	3304      	adds	r3, #4
 800fe18:	643b      	str	r3, [r7, #64]	@ 0x40
    } while (++framebuffer < chunkend);
 800fe1a:	6c7b      	ldr	r3, [r7, #68]	@ 0x44
 800fe1c:	3302      	adds	r3, #2
 800fe1e:	647b      	str	r3, [r7, #68]	@ 0x44
 800fe20:	6c7a      	ldr	r2, [r7, #68]	@ 0x44
 800fe22:	6bfb      	ldr	r3, [r7, #60]	@ 0x3c
 800fe24:	429a      	cmp	r2, r3
 800fe26:	bf34      	ite	cc
 800fe28:	2301      	movcc	r3, #1
 800fe2a:	2300      	movcs	r3, #0
 800fe2c:	b2db      	uxtb	r3, r3
 800fe2e:	2b00      	cmp	r3, #0
 800fe30:	f47f aef6 	bne.w	800fc20 <_ZN8touchgfx5paint6rgb56516lineFromARGB8888EPtPKmjh+0x20>
}
 800fe34:	bf00      	nop
 800fe36:	bf00      	nop
 800fe38:	374c      	adds	r7, #76	@ 0x4c
 800fe3a:	46bd      	mov	sp, r7
 800fe3c:	bd90      	pop	{r4, r7, pc}
 800fe3e:	bf00      	nop
 800fe40:	80808081 	.word	0x80808081

0800fe44 <_ZN20TouchGFXGeneratedHAL10initializeEv>:
       3, /* number of blocks */
       2 /* bytes per pixel */
       > blockAllocator;

void TouchGFXGeneratedHAL::initialize()
{
 800fe44:	b5b0      	push	{r4, r5, r7, lr}
 800fe46:	b082      	sub	sp, #8
 800fe48:	af00      	add	r7, sp, #0
 800fe4a:	6078      	str	r0, [r7, #4]
    HAL::initialize();
 800fe4c:	687b      	ldr	r3, [r7, #4]
 800fe4e:	4618      	mov	r0, r3
 800fe50:	f000 fed9 	bl	8010c06 <_ZN8touchgfx3HAL10initializeEv>
    registerEventListener(*(Application::getInstance()));
 800fe54:	687d      	ldr	r5, [r7, #4]
 800fe56:	687b      	ldr	r3, [r7, #4]
 800fe58:	681b      	ldr	r3, [r3, #0]
 800fe5a:	3364      	adds	r3, #100	@ 0x64
 800fe5c:	681c      	ldr	r4, [r3, #0]
 800fe5e:	f004 f8bf 	bl	8013fe0 <_ZN8touchgfx11Application11getInstanceEv>
 800fe62:	4603      	mov	r3, r0
 800fe64:	4619      	mov	r1, r3
 800fe66:	4628      	mov	r0, r5
 800fe68:	47a0      	blx	r4
    enableLCDControllerInterrupt();
 800fe6a:	687b      	ldr	r3, [r7, #4]
 800fe6c:	681b      	ldr	r3, [r3, #0]
 800fe6e:	3380      	adds	r3, #128	@ 0x80
 800fe70:	681b      	ldr	r3, [r3, #0]
 800fe72:	6878      	ldr	r0, [r7, #4]
 800fe74:	4798      	blx	r3
    enableInterrupts();
 800fe76:	687b      	ldr	r3, [r7, #4]
 800fe78:	681b      	ldr	r3, [r3, #0]
 800fe7a:	3378      	adds	r3, #120	@ 0x78
 800fe7c:	681b      	ldr	r3, [r3, #0]
 800fe7e:	6878      	ldr	r0, [r7, #4]
 800fe80:	4798      	blx	r3
    // Partial framebuffer strategy
    setFrameBufferAllocator(&blockAllocator);
 800fe82:	687b      	ldr	r3, [r7, #4]
 800fe84:	4906      	ldr	r1, [pc, #24]	@ (800fea0 <_ZN20TouchGFXGeneratedHAL10initializeEv+0x5c>)
 800fe86:	4618      	mov	r0, r3
 800fe88:	f7ff fda6 	bl	800f9d8 <_ZN8touchgfx3HAL23setFrameBufferAllocatorEPNS_20FrameBufferAllocatorE>
    setFrameRefreshStrategy(HAL::REFRESH_STRATEGY_PARTIAL_FRAMEBUFFER);
 800fe8c:	687b      	ldr	r3, [r7, #4]
 800fe8e:	2102      	movs	r1, #2
 800fe90:	4618      	mov	r0, r3
 800fe92:	f7ff fdbb 	bl	800fa0c <_ZN8touchgfx3HAL23setFrameRefreshStrategyENS0_20FrameRefreshStrategyE>
}
 800fe96:	bf00      	nop
 800fe98:	3708      	adds	r7, #8
 800fe9a:	46bd      	mov	sp, r7
 800fe9c:	bdb0      	pop	{r4, r5, r7, pc}
 800fe9e:	bf00      	nop
 800fea0:	20000db4 	.word	0x20000db4

0800fea4 <_ZN20TouchGFXGeneratedHAL19configureInterruptsEv>:

void TouchGFXGeneratedHAL::configureInterrupts()
{
 800fea4:	b480      	push	{r7}
 800fea6:	b083      	sub	sp, #12
 800fea8:	af00      	add	r7, sp, #0
 800feaa:	6078      	str	r0, [r7, #4]
}
 800feac:	bf00      	nop
 800feae:	370c      	adds	r7, #12
 800feb0:	46bd      	mov	sp, r7
 800feb2:	f85d 7b04 	ldr.w	r7, [sp], #4
 800feb6:	4770      	bx	lr

0800feb8 <_ZN20TouchGFXGeneratedHAL16enableInterruptsEv>:

void TouchGFXGeneratedHAL::enableInterrupts()
{
 800feb8:	b480      	push	{r7}
 800feba:	b083      	sub	sp, #12
 800febc:	af00      	add	r7, sp, #0
 800febe:	6078      	str	r0, [r7, #4]
}
 800fec0:	bf00      	nop
 800fec2:	370c      	adds	r7, #12
 800fec4:	46bd      	mov	sp, r7
 800fec6:	f85d 7b04 	ldr.w	r7, [sp], #4
 800feca:	4770      	bx	lr

0800fecc <_ZN20TouchGFXGeneratedHAL17disableInterruptsEv>:

void TouchGFXGeneratedHAL::disableInterrupts()
{
 800fecc:	b480      	push	{r7}
 800fece:	b083      	sub	sp, #12
 800fed0:	af00      	add	r7, sp, #0
 800fed2:	6078      	str	r0, [r7, #4]
}
 800fed4:	bf00      	nop
 800fed6:	370c      	adds	r7, #12
 800fed8:	46bd      	mov	sp, r7
 800feda:	f85d 7b04 	ldr.w	r7, [sp], #4
 800fede:	4770      	bx	lr

0800fee0 <_ZN20TouchGFXGeneratedHAL28enableLCDControllerInterruptEv>:

void TouchGFXGeneratedHAL::enableLCDControllerInterrupt()
{
 800fee0:	b480      	push	{r7}
 800fee2:	b083      	sub	sp, #12
 800fee4:	af00      	add	r7, sp, #0
 800fee6:	6078      	str	r0, [r7, #4]
}
 800fee8:	bf00      	nop
 800feea:	370c      	adds	r7, #12
 800feec:	46bd      	mov	sp, r7
 800feee:	f85d 7b04 	ldr.w	r7, [sp], #4
 800fef2:	4770      	bx	lr

0800fef4 <_ZN20TouchGFXGeneratedHAL10beginFrameEv>:

bool TouchGFXGeneratedHAL::beginFrame()
{
 800fef4:	b580      	push	{r7, lr}
 800fef6:	b082      	sub	sp, #8
 800fef8:	af00      	add	r7, sp, #0
 800fefa:	6078      	str	r0, [r7, #4]
    return HAL::beginFrame();
 800fefc:	687b      	ldr	r3, [r7, #4]
 800fefe:	4618      	mov	r0, r3
 800ff00:	f000 fe68 	bl	8010bd4 <_ZN8touchgfx3HAL10beginFrameEv>
 800ff04:	4603      	mov	r3, r0
}
 800ff06:	4618      	mov	r0, r3
 800ff08:	3708      	adds	r7, #8
 800ff0a:	46bd      	mov	sp, r7
 800ff0c:	bd80      	pop	{r7, pc}

0800ff0e <_ZN20TouchGFXGeneratedHAL8endFrameEv>:

void TouchGFXGeneratedHAL::endFrame()
{
 800ff0e:	b580      	push	{r7, lr}
 800ff10:	b082      	sub	sp, #8
 800ff12:	af00      	add	r7, sp, #0
 800ff14:	6078      	str	r0, [r7, #4]
    // We must guard the next frame until we're done transferring all blocks over our display interface
    // through either a semaphore if user is running an OS or a simple variable if not
    // Wait until all blocks have been transmitted
    while (touchgfxDisplayDriverTransmitActive()){}
 800ff16:	bf00      	nop
 800ff18:	f7f2 fa84 	bl	8002424 <touchgfxDisplayDriverTransmitActive>
 800ff1c:	4603      	mov	r3, r0
 800ff1e:	2b00      	cmp	r3, #0
 800ff20:	bf14      	ite	ne
 800ff22:	2301      	movne	r3, #1
 800ff24:	2300      	moveq	r3, #0
 800ff26:	b2db      	uxtb	r3, r3
 800ff28:	2b00      	cmp	r3, #0
 800ff2a:	d1f5      	bne.n	800ff18 <_ZN20TouchGFXGeneratedHAL8endFrameEv+0xa>

    HAL::endFrame();
 800ff2c:	687b      	ldr	r3, [r7, #4]
 800ff2e:	4618      	mov	r0, r3
 800ff30:	f000 fe5c 	bl	8010bec <_ZN8touchgfx3HAL8endFrameEv>
    touchgfx::OSWrappers::signalRenderingDone();
 800ff34:	f7fe fede 	bl	800ecf4 <_ZN8touchgfx10OSWrappers19signalRenderingDoneEv>
}
 800ff38:	bf00      	nop
 800ff3a:	3708      	adds	r7, #8
 800ff3c:	46bd      	mov	sp, r7
 800ff3e:	bd80      	pop	{r7, pc}

0800ff40 <_ZNK20TouchGFXGeneratedHAL17getTFTFrameBufferEv>:
    fbPtr += rect.y * lcd().framebufferStride() + rect.x * 2;
    return fbPtr;
}

uint16_t* TouchGFXGeneratedHAL::getTFTFrameBuffer() const
{
 800ff40:	b480      	push	{r7}
 800ff42:	b083      	sub	sp, #12
 800ff44:	af00      	add	r7, sp, #0
 800ff46:	6078      	str	r0, [r7, #4]
    //getTFTFrameBuffer() not used for selected Frame Buffer Strategy
    return 0;
 800ff48:	2300      	movs	r3, #0
}
 800ff4a:	4618      	mov	r0, r3
 800ff4c:	370c      	adds	r7, #12
 800ff4e:	46bd      	mov	sp, r7
 800ff50:	f85d 7b04 	ldr.w	r7, [sp], #4
 800ff54:	4770      	bx	lr

0800ff56 <_ZN20TouchGFXGeneratedHAL17setTFTFrameBufferEPt>:

void TouchGFXGeneratedHAL::setTFTFrameBuffer(uint16_t* adr)
{
 800ff56:	b480      	push	{r7}
 800ff58:	b083      	sub	sp, #12
 800ff5a:	af00      	add	r7, sp, #0
 800ff5c:	6078      	str	r0, [r7, #4]
 800ff5e:	6039      	str	r1, [r7, #0]
    //setTFTFrameBuffer() not used for selected display interface
}
 800ff60:	bf00      	nop
 800ff62:	370c      	adds	r7, #12
 800ff64:	46bd      	mov	sp, r7
 800ff66:	f85d 7b04 	ldr.w	r7, [sp], #4
 800ff6a:	4770      	bx	lr

0800ff6c <_ZN20TouchGFXGeneratedHAL16flushFrameBufferERKN8touchgfx4RectE>:

void TouchGFXGeneratedHAL::flushFrameBuffer(const touchgfx::Rect& rect)
{
 800ff6c:	b580      	push	{r7, lr}
 800ff6e:	b088      	sub	sp, #32
 800ff70:	af02      	add	r7, sp, #8
 800ff72:	6078      	str	r0, [r7, #4]
 800ff74:	6039      	str	r1, [r7, #0]
    HAL::flushFrameBuffer(rect);
 800ff76:	687b      	ldr	r3, [r7, #4]
 800ff78:	6839      	ldr	r1, [r7, #0]
 800ff7a:	4618      	mov	r0, r3
 800ff7c:	f000 fdf4 	bl	8010b68 <_ZN8touchgfx3HAL16flushFrameBufferERKNS_4RectE>
    // Once flushFrameBuffer() is called by the framework a block is already for transfer
    // Mark it ready for transfer and transmit it if user defined method isTransmittingData() does not return false
    // If data is not being transmitted, transfer the data with user defined method transmitFrameBufferBlock().
    frameBufferAllocator->markBlockReadyForTransfer();
 800ff80:	687b      	ldr	r3, [r7, #4]
 800ff82:	699a      	ldr	r2, [r3, #24]
 800ff84:	687b      	ldr	r3, [r7, #4]
 800ff86:	699b      	ldr	r3, [r3, #24]
 800ff88:	681b      	ldr	r3, [r3, #0]
 800ff8a:	3304      	adds	r3, #4
 800ff8c:	681b      	ldr	r3, [r3, #0]
 800ff8e:	4610      	mov	r0, r2
 800ff90:	4798      	blx	r3
    if (!touchgfxDisplayDriverTransmitActive())
 800ff92:	f7f2 fa47 	bl	8002424 <touchgfxDisplayDriverTransmitActive>
 800ff96:	4603      	mov	r3, r0
 800ff98:	2b00      	cmp	r3, #0
 800ff9a:	bf0c      	ite	eq
 800ff9c:	2301      	moveq	r3, #1
 800ff9e:	2300      	movne	r3, #0
 800ffa0:	b2db      	uxtb	r3, r3
 800ffa2:	2b00      	cmp	r3, #0
 800ffa4:	d021      	beq.n	800ffea <_ZN20TouchGFXGeneratedHAL16flushFrameBufferERKN8touchgfx4RectE+0x7e>
    {
        touchgfx::Rect r;
 800ffa6:	f107 030c 	add.w	r3, r7, #12
 800ffaa:	4618      	mov	r0, r3
 800ffac:	f7f9 fc27 	bl	80097fe <_ZN8touchgfx4RectC1Ev>
        // Get pointer to block buffer and coordinates of the rect
        const uint8_t* pixels = frameBufferAllocator->getBlockForTransfer(r);
 800ffb0:	687b      	ldr	r3, [r7, #4]
 800ffb2:	699a      	ldr	r2, [r3, #24]
 800ffb4:	687b      	ldr	r3, [r7, #4]
 800ffb6:	699b      	ldr	r3, [r3, #24]
 800ffb8:	681b      	ldr	r3, [r3, #0]
 800ffba:	330c      	adds	r3, #12
 800ffbc:	681b      	ldr	r3, [r3, #0]
 800ffbe:	f107 010c 	add.w	r1, r7, #12
 800ffc2:	4610      	mov	r0, r2
 800ffc4:	4798      	blx	r3
 800ffc6:	6178      	str	r0, [r7, #20]
        // Start transmission of the block
        touchgfxDisplayDriverTransmitBlock((uint8_t*)pixels, r.x, r.y, r.width, r.height);
 800ffc8:	f9b7 300c 	ldrsh.w	r3, [r7, #12]
 800ffcc:	b299      	uxth	r1, r3
 800ffce:	f9b7 300e 	ldrsh.w	r3, [r7, #14]
 800ffd2:	b29a      	uxth	r2, r3
 800ffd4:	f9b7 3010 	ldrsh.w	r3, [r7, #16]
 800ffd8:	b298      	uxth	r0, r3
 800ffda:	f9b7 3012 	ldrsh.w	r3, [r7, #18]
 800ffde:	b29b      	uxth	r3, r3
 800ffe0:	9300      	str	r3, [sp, #0]
 800ffe2:	4603      	mov	r3, r0
 800ffe4:	6978      	ldr	r0, [r7, #20]
 800ffe6:	f7f2 fa2f 	bl	8002448 <touchgfxDisplayDriverTransmitBlock>
    }
}
 800ffea:	bf00      	nop
 800ffec:	3718      	adds	r7, #24
 800ffee:	46bd      	mov	sp, r7
 800fff0:	bd80      	pop	{r7, pc}

0800fff2 <_ZN20TouchGFXGeneratedHAL9blockCopyEPvPKvm>:

bool TouchGFXGeneratedHAL::blockCopy(void* RESTRICT dest, const void* RESTRICT src, uint32_t numBytes)
{
 800fff2:	b580      	push	{r7, lr}
 800fff4:	b084      	sub	sp, #16
 800fff6:	af00      	add	r7, sp, #0
 800fff8:	60f8      	str	r0, [r7, #12]
 800fffa:	60b9      	str	r1, [r7, #8]
 800fffc:	607a      	str	r2, [r7, #4]
 800fffe:	603b      	str	r3, [r7, #0]
    return HAL::blockCopy(dest, src, numBytes);
 8010000:	68f8      	ldr	r0, [r7, #12]
 8010002:	683b      	ldr	r3, [r7, #0]
 8010004:	687a      	ldr	r2, [r7, #4]
 8010006:	68b9      	ldr	r1, [r7, #8]
 8010008:	f000 ff1f 	bl	8010e4a <_ZN8touchgfx3HAL9blockCopyEPvPKvm>
 801000c:	4603      	mov	r3, r0
}
 801000e:	4618      	mov	r0, r3
 8010010:	3710      	adds	r7, #16
 8010012:	46bd      	mov	sp, r7
 8010014:	bd80      	pop	{r7, pc}

08010016 <_ZN8touchgfx34FrameBufferAllocatorWaitOnTransferEv>:
/**
 * This function is called by FrameBufferAllocator if no block is
 * available.
 */
void FrameBufferAllocatorWaitOnTransfer()
{
 8010016:	b480      	push	{r7}
 8010018:	af00      	add	r7, sp, #0
    /* NOTE: This function should not be modified, when the fuction is needed,
     *       FrameBufferAllocatorWaitOnTransfer should be implemented in the user file
     */
}
 801001a:	bf00      	nop
 801001c:	46bd      	mov	sp, r7
 801001e:	f85d 7b04 	ldr.w	r7, [sp], #4
 8010022:	4770      	bx	lr

08010024 <_ZN8touchgfx36FrameBufferAllocatorSignalBlockDrawnEv>:
 * Called by FrameBufferAllocator when a block is drawn and
 * therefore ready for transfer. The LCD driver should use this
 * method to start a transfer.
 */
void FrameBufferAllocatorSignalBlockDrawn()
{
 8010024:	b480      	push	{r7}
 8010026:	af00      	add	r7, sp, #0
    /* NOTE: This function should not be modified, when the fuction is needed,
     *       FrameBufferAllocatorSignalBlockDrawn should be implemented in the user file
     */
}
 8010028:	bf00      	nop
 801002a:	46bd      	mov	sp, r7
 801002c:	f85d 7b04 	ldr.w	r7, [sp], #4
 8010030:	4770      	bx	lr

08010032 <_ZN8touchgfx16startNewTransferEv>:

// A user must call touchgfx::startNewTransfer(); once transmitFrameBufferBlock() has successfully sent a block.
void startNewTransfer()
{
 8010032:	b580      	push	{r7, lr}
 8010034:	b086      	sub	sp, #24
 8010036:	af02      	add	r7, sp, #8
    FrameBufferAllocator* fba = HAL::getInstance()->getFrameBufferAllocator();
 8010038:	f7f8 fa78 	bl	800852c <_ZN8touchgfx3HAL11getInstanceEv>
 801003c:	4603      	mov	r3, r0
 801003e:	4618      	mov	r0, r3
 8010040:	f7ff fcd8 	bl	800f9f4 <_ZN8touchgfx3HAL23getFrameBufferAllocatorEv>
 8010044:	60f8      	str	r0, [r7, #12]

    // Free the previous transmitted block, marking it ready for rendering
    fba->freeBlockAfterTransfer();
 8010046:	68fb      	ldr	r3, [r7, #12]
 8010048:	681b      	ldr	r3, [r3, #0]
 801004a:	3318      	adds	r3, #24
 801004c:	681b      	ldr	r3, [r3, #0]
 801004e:	68f8      	ldr	r0, [r7, #12]
 8010050:	4798      	blx	r3
    if (fba->hasBlockReadyForTransfer())
 8010052:	68fb      	ldr	r3, [r7, #12]
 8010054:	681b      	ldr	r3, [r3, #0]
 8010056:	3308      	adds	r3, #8
 8010058:	681b      	ldr	r3, [r3, #0]
 801005a:	68f8      	ldr	r0, [r7, #12]
 801005c:	4798      	blx	r3
 801005e:	4603      	mov	r3, r0
 8010060:	2b00      	cmp	r3, #0
 8010062:	d01d      	beq.n	80100a0 <_ZN8touchgfx16startNewTransferEv+0x6e>
    {
        touchgfx::Rect r;
 8010064:	463b      	mov	r3, r7
 8010066:	4618      	mov	r0, r3
 8010068:	f7f9 fbc9 	bl	80097fe <_ZN8touchgfx4RectC1Ev>
        // Get pointer to block buffer and coordinates of the rect
        const uint8_t* pixels = fba->getBlockForTransfer(r);
 801006c:	68fb      	ldr	r3, [r7, #12]
 801006e:	681b      	ldr	r3, [r3, #0]
 8010070:	330c      	adds	r3, #12
 8010072:	681b      	ldr	r3, [r3, #0]
 8010074:	463a      	mov	r2, r7
 8010076:	4611      	mov	r1, r2
 8010078:	68f8      	ldr	r0, [r7, #12]
 801007a:	4798      	blx	r3
 801007c:	60b8      	str	r0, [r7, #8]
        // Start transmission of the block
        touchgfxDisplayDriverTransmitBlock((uint8_t*)pixels, r.x, r.y, r.width, r.height);
 801007e:	f9b7 3000 	ldrsh.w	r3, [r7]
 8010082:	b299      	uxth	r1, r3
 8010084:	f9b7 3002 	ldrsh.w	r3, [r7, #2]
 8010088:	b29a      	uxth	r2, r3
 801008a:	f9b7 3004 	ldrsh.w	r3, [r7, #4]
 801008e:	b298      	uxth	r0, r3
 8010090:	f9b7 3006 	ldrsh.w	r3, [r7, #6]
 8010094:	b29b      	uxth	r3, r3
 8010096:	9300      	str	r3, [sp, #0]
 8010098:	4603      	mov	r3, r0
 801009a:	68b8      	ldr	r0, [r7, #8]
 801009c:	f7f2 f9d4 	bl	8002448 <touchgfxDisplayDriverTransmitBlock>
    }
}
 80100a0:	bf00      	nop
 80100a2:	3710      	adds	r7, #16
 80100a4:	46bd      	mov	sp, r7
 80100a6:	bd80      	pop	{r7, pc}

080100a8 <DisplayDriver_TransferCompleteCallback>:

extern "C"
void DisplayDriver_TransferCompleteCallback()
{
 80100a8:	b580      	push	{r7, lr}
 80100aa:	af00      	add	r7, sp, #0
    // After completed transmission start new transfer if blocks are ready.
    touchgfx::startNewTransfer();
 80100ac:	f7ff ffc1 	bl	8010032 <_ZN8touchgfx16startNewTransferEv>
}
 80100b0:	bf00      	nop
 80100b2:	bd80      	pop	{r7, pc}

080100b4 <touchgfxSignalVSync>:
}

extern "C"
void touchgfxSignalVSync(void)
{
 80100b4:	b580      	push	{r7, lr}
 80100b6:	af00      	add	r7, sp, #0
    /* VSync has occurred, increment TouchGFX engine vsync counter */
    touchgfx::HAL::getInstance()->vSync();
 80100b8:	f7f8 fa38 	bl	800852c <_ZN8touchgfx3HAL11getInstanceEv>
 80100bc:	4603      	mov	r3, r0
 80100be:	4618      	mov	r0, r3
 80100c0:	f7ff fc78 	bl	800f9b4 <_ZN8touchgfx3HAL5vSyncEv>

    /* VSync has occurred, signal TouchGFX engine */
    touchgfx::OSWrappers::signalVSync();
 80100c4:	f7fe fe0a 	bl	800ecdc <_ZN8touchgfx10OSWrappers11signalVSyncEv>
}
 80100c8:	bf00      	nop
 80100ca:	bd80      	pop	{r7, pc}

080100cc <_ZN8touchgfx20FrameBufferAllocatorC1Ev>:
class FrameBufferAllocator
 80100cc:	b480      	push	{r7}
 80100ce:	b083      	sub	sp, #12
 80100d0:	af00      	add	r7, sp, #0
 80100d2:	6078      	str	r0, [r7, #4]
 80100d4:	4a04      	ldr	r2, [pc, #16]	@ (80100e8 <_ZN8touchgfx20FrameBufferAllocatorC1Ev+0x1c>)
 80100d6:	687b      	ldr	r3, [r7, #4]
 80100d8:	601a      	str	r2, [r3, #0]
 80100da:	687b      	ldr	r3, [r7, #4]
 80100dc:	4618      	mov	r0, r3
 80100de:	370c      	adds	r7, #12
 80100e0:	46bd      	mov	sp, r7
 80100e2:	f85d 7b04 	ldr.w	r7, [sp], #4
 80100e6:	4770      	bx	lr
 80100e8:	08028ddc 	.word	0x08028ddc

080100ec <_ZN8touchgfx18ManyBlockAllocatorILm2880ELm3ELm2EEC1Ev>:
 */
template <uint32_t block_size, uint32_t blocks, uint32_t bytes_pr_pixel>
class ManyBlockAllocator : public FrameBufferAllocator
{
public:
    ManyBlockAllocator()
 80100ec:	b5b0      	push	{r4, r5, r7, lr}
 80100ee:	b084      	sub	sp, #16
 80100f0:	af00      	add	r7, sp, #0
 80100f2:	6078      	str	r0, [r7, #4]
    {
 80100f4:	687b      	ldr	r3, [r7, #4]
 80100f6:	4618      	mov	r0, r3
 80100f8:	f7ff ffe8 	bl	80100cc <_ZN8touchgfx20FrameBufferAllocatorC1Ev>
 80100fc:	4a1a      	ldr	r2, [pc, #104]	@ (8010168 <_ZN8touchgfx18ManyBlockAllocatorILm2880ELm3ELm2EEC1Ev+0x7c>)
 80100fe:	687b      	ldr	r3, [r7, #4]
 8010100:	601a      	str	r2, [r3, #0]
 8010102:	687b      	ldr	r3, [r7, #4]
 8010104:	f503 5307 	add.w	r3, r3, #8640	@ 0x21c0
 8010108:	3308      	adds	r3, #8
 801010a:	2402      	movs	r4, #2
 801010c:	461d      	mov	r5, r3
 801010e:	e004      	b.n	801011a <_ZN8touchgfx18ManyBlockAllocatorILm2880ELm3ELm2EEC1Ev+0x2e>
 8010110:	4628      	mov	r0, r5
 8010112:	f7f9 fb74 	bl	80097fe <_ZN8touchgfx4RectC1Ev>
 8010116:	3c01      	subs	r4, #1
 8010118:	3508      	adds	r5, #8
 801011a:	2c00      	cmp	r4, #0
 801011c:	daf8      	bge.n	8010110 <_ZN8touchgfx18ManyBlockAllocatorILm2880ELm3ELm2EEC1Ev+0x24>
        sendingBlock = -1;
 801011e:	687b      	ldr	r3, [r7, #4]
 8010120:	f503 5300 	add.w	r3, r3, #8192	@ 0x2000
 8010124:	461a      	mov	r2, r3
 8010126:	f04f 33ff 	mov.w	r3, #4294967295
 801012a:	f8c2 31e0 	str.w	r3, [r2, #480]	@ 0x1e0
        drawingBlock = -1;
 801012e:	687b      	ldr	r3, [r7, #4]
 8010130:	f503 5300 	add.w	r3, r3, #8192	@ 0x2000
 8010134:	461a      	mov	r2, r3
 8010136:	f04f 33ff 	mov.w	r3, #4294967295
 801013a:	f8c2 31e4 	str.w	r3, [r2, #484]	@ 0x1e4
        for (uint32_t i = 0; i < blocks; i++)
 801013e:	2300      	movs	r3, #0
 8010140:	60fb      	str	r3, [r7, #12]
 8010142:	e008      	b.n	8010156 <_ZN8touchgfx18ManyBlockAllocatorILm2880ELm3ELm2EEC1Ev+0x6a>
        {
            state[i] = EMPTY;
 8010144:	687a      	ldr	r2, [r7, #4]
 8010146:	68fb      	ldr	r3, [r7, #12]
 8010148:	4413      	add	r3, r2
 801014a:	3304      	adds	r3, #4
 801014c:	2200      	movs	r2, #0
 801014e:	701a      	strb	r2, [r3, #0]
        for (uint32_t i = 0; i < blocks; i++)
 8010150:	68fb      	ldr	r3, [r7, #12]
 8010152:	3301      	adds	r3, #1
 8010154:	60fb      	str	r3, [r7, #12]
 8010156:	68fb      	ldr	r3, [r7, #12]
 8010158:	2b02      	cmp	r3, #2
 801015a:	d9f3      	bls.n	8010144 <_ZN8touchgfx18ManyBlockAllocatorILm2880ELm3ELm2EEC1Ev+0x58>
        }
    }
 801015c:	687b      	ldr	r3, [r7, #4]
 801015e:	4618      	mov	r0, r3
 8010160:	3710      	adds	r7, #16
 8010162:	46bd      	mov	sp, r7
 8010164:	bdb0      	pop	{r4, r5, r7, pc}
 8010166:	bf00      	nop
 8010168:	08028cd8 	.word	0x08028cd8

0801016c <_ZN8touchgfx18ManyBlockAllocatorILm2880ELm3ELm2EED1Ev>:
class ManyBlockAllocator : public FrameBufferAllocator
 801016c:	b580      	push	{r7, lr}
 801016e:	b082      	sub	sp, #8
 8010170:	af00      	add	r7, sp, #0
 8010172:	6078      	str	r0, [r7, #4]
 8010174:	4a05      	ldr	r2, [pc, #20]	@ (801018c <_ZN8touchgfx18ManyBlockAllocatorILm2880ELm3ELm2EED1Ev+0x20>)
 8010176:	687b      	ldr	r3, [r7, #4]
 8010178:	601a      	str	r2, [r3, #0]
 801017a:	687b      	ldr	r3, [r7, #4]
 801017c:	4618      	mov	r0, r3
 801017e:	f7ff fbf9 	bl	800f974 <_ZN8touchgfx20FrameBufferAllocatorD1Ev>
 8010182:	687b      	ldr	r3, [r7, #4]
 8010184:	4618      	mov	r0, r3
 8010186:	3708      	adds	r7, #8
 8010188:	46bd      	mov	sp, r7
 801018a:	bd80      	pop	{r7, pc}
 801018c:	08028cd8 	.word	0x08028cd8

08010190 <_ZN8touchgfx18ManyBlockAllocatorILm2880ELm3ELm2EED0Ev>:
 8010190:	b580      	push	{r7, lr}
 8010192:	b082      	sub	sp, #8
 8010194:	af00      	add	r7, sp, #0
 8010196:	6078      	str	r0, [r7, #4]
 8010198:	6878      	ldr	r0, [r7, #4]
 801019a:	f7ff ffe7 	bl	801016c <_ZN8touchgfx18ManyBlockAllocatorILm2880ELm3ELm2EED1Ev>
 801019e:	f242 11e8 	movw	r1, #8680	@ 0x21e8
 80101a2:	6878      	ldr	r0, [r7, #4]
 80101a4:	f015 fc75 	bl	8025a92 <_ZdlPvj>
 80101a8:	687b      	ldr	r3, [r7, #4]
 80101aa:	4618      	mov	r0, r3
 80101ac:	3708      	adds	r7, #8
 80101ae:	46bd      	mov	sp, r7
 80101b0:	bd80      	pop	{r7, pc}
	...

080101b4 <_Z41__static_initialization_and_destruction_0ii>:
 80101b4:	b580      	push	{r7, lr}
 80101b6:	b082      	sub	sp, #8
 80101b8:	af00      	add	r7, sp, #0
 80101ba:	6078      	str	r0, [r7, #4]
 80101bc:	6039      	str	r1, [r7, #0]
 80101be:	687b      	ldr	r3, [r7, #4]
 80101c0:	2b01      	cmp	r3, #1
 80101c2:	d107      	bne.n	80101d4 <_Z41__static_initialization_and_destruction_0ii+0x20>
 80101c4:	683b      	ldr	r3, [r7, #0]
 80101c6:	f64f 72ff 	movw	r2, #65535	@ 0xffff
 80101ca:	4293      	cmp	r3, r2
 80101cc:	d102      	bne.n	80101d4 <_Z41__static_initialization_and_destruction_0ii+0x20>
       > blockAllocator;
 80101ce:	4809      	ldr	r0, [pc, #36]	@ (80101f4 <_Z41__static_initialization_and_destruction_0ii+0x40>)
 80101d0:	f7ff ff8c 	bl	80100ec <_ZN8touchgfx18ManyBlockAllocatorILm2880ELm3ELm2EEC1Ev>
 80101d4:	687b      	ldr	r3, [r7, #4]
 80101d6:	2b00      	cmp	r3, #0
 80101d8:	d107      	bne.n	80101ea <_Z41__static_initialization_and_destruction_0ii+0x36>
 80101da:	683b      	ldr	r3, [r7, #0]
 80101dc:	f64f 72ff 	movw	r2, #65535	@ 0xffff
 80101e0:	4293      	cmp	r3, r2
 80101e2:	d102      	bne.n	80101ea <_Z41__static_initialization_and_destruction_0ii+0x36>
 80101e4:	4803      	ldr	r0, [pc, #12]	@ (80101f4 <_Z41__static_initialization_and_destruction_0ii+0x40>)
 80101e6:	f7ff ffc1 	bl	801016c <_ZN8touchgfx18ManyBlockAllocatorILm2880ELm3ELm2EED1Ev>
}
 80101ea:	bf00      	nop
 80101ec:	3708      	adds	r7, #8
 80101ee:	46bd      	mov	sp, r7
 80101f0:	bd80      	pop	{r7, pc}
 80101f2:	bf00      	nop
 80101f4:	20000db4 	.word	0x20000db4

080101f8 <_ZN8touchgfx18ManyBlockAllocatorILm2880ELm3ELm2EE13allocateBlockEttttPPh>:
     * @param          height The height of the block.
     * @param [in,out] block  Pointer to pointer to return the block address in.
     *
     * @return The height of the allocated block.
     */
    virtual uint16_t allocateBlock(const uint16_t x, const uint16_t y, const uint16_t width, const uint16_t height, uint8_t** block)
 80101f8:	b580      	push	{r7, lr}
 80101fa:	b086      	sub	sp, #24
 80101fc:	af00      	add	r7, sp, #0
 80101fe:	60f8      	str	r0, [r7, #12]
 8010200:	4608      	mov	r0, r1
 8010202:	4611      	mov	r1, r2
 8010204:	461a      	mov	r2, r3
 8010206:	4603      	mov	r3, r0
 8010208:	817b      	strh	r3, [r7, #10]
 801020a:	460b      	mov	r3, r1
 801020c:	813b      	strh	r3, [r7, #8]
 801020e:	4613      	mov	r3, r2
 8010210:	80fb      	strh	r3, [r7, #6]
    {
        drawingBlock++;
 8010212:	68fb      	ldr	r3, [r7, #12]
 8010214:	f503 5300 	add.w	r3, r3, #8192	@ 0x2000
 8010218:	f8d3 31e4 	ldr.w	r3, [r3, #484]	@ 0x1e4
 801021c:	3301      	adds	r3, #1
 801021e:	68fa      	ldr	r2, [r7, #12]
 8010220:	f502 5200 	add.w	r2, r2, #8192	@ 0x2000
 8010224:	f8c2 31e4 	str.w	r3, [r2, #484]	@ 0x1e4
        if (drawingBlock == blocks)
 8010228:	68fb      	ldr	r3, [r7, #12]
 801022a:	f503 5300 	add.w	r3, r3, #8192	@ 0x2000
 801022e:	f8d3 31e4 	ldr.w	r3, [r3, #484]	@ 0x1e4
 8010232:	2b03      	cmp	r3, #3
 8010234:	d109      	bne.n	801024a <_ZN8touchgfx18ManyBlockAllocatorILm2880ELm3ELm2EE13allocateBlockEttttPPh+0x52>
        {
            drawingBlock = 0;
 8010236:	68fb      	ldr	r3, [r7, #12]
 8010238:	f503 5300 	add.w	r3, r3, #8192	@ 0x2000
 801023c:	461a      	mov	r2, r3
 801023e:	2300      	movs	r3, #0
 8010240:	f8c2 31e4 	str.w	r3, [r2, #484]	@ 0x1e4
        }
        while (state[drawingBlock] != EMPTY)
 8010244:	e001      	b.n	801024a <_ZN8touchgfx18ManyBlockAllocatorILm2880ELm3ELm2EE13allocateBlockEttttPPh+0x52>
        {
            FrameBufferAllocatorWaitOnTransfer();
 8010246:	f7ff fee6 	bl	8010016 <_ZN8touchgfx34FrameBufferAllocatorWaitOnTransferEv>
        while (state[drawingBlock] != EMPTY)
 801024a:	68fb      	ldr	r3, [r7, #12]
 801024c:	f503 5300 	add.w	r3, r3, #8192	@ 0x2000
 8010250:	f8d3 31e4 	ldr.w	r3, [r3, #484]	@ 0x1e4
 8010254:	68fa      	ldr	r2, [r7, #12]
 8010256:	4413      	add	r3, r2
 8010258:	791b      	ldrb	r3, [r3, #4]
 801025a:	b2db      	uxtb	r3, r3
 801025c:	2b00      	cmp	r3, #0
 801025e:	bf14      	ite	ne
 8010260:	2301      	movne	r3, #1
 8010262:	2300      	moveq	r3, #0
 8010264:	b2db      	uxtb	r3, r3
 8010266:	2b00      	cmp	r3, #0
 8010268:	d1ed      	bne.n	8010246 <_ZN8touchgfx18ManyBlockAllocatorILm2880ELm3ELm2EE13allocateBlockEttttPPh+0x4e>
        }
        assert(state[drawingBlock] == EMPTY);
 801026a:	68fb      	ldr	r3, [r7, #12]
 801026c:	f503 5300 	add.w	r3, r3, #8192	@ 0x2000
 8010270:	f8d3 31e4 	ldr.w	r3, [r3, #484]	@ 0x1e4
 8010274:	68fa      	ldr	r2, [r7, #12]
 8010276:	4413      	add	r3, r2
 8010278:	791b      	ldrb	r3, [r3, #4]
 801027a:	b2db      	uxtb	r3, r3
 801027c:	2b00      	cmp	r3, #0
 801027e:	d005      	beq.n	801028c <_ZN8touchgfx18ManyBlockAllocatorILm2880ELm3ELm2EE13allocateBlockEttttPPh+0x94>
 8010280:	4b38      	ldr	r3, [pc, #224]	@ (8010364 <_ZN8touchgfx18ManyBlockAllocatorILm2880ELm3ELm2EE13allocateBlockEttttPPh+0x16c>)
 8010282:	4a39      	ldr	r2, [pc, #228]	@ (8010368 <_ZN8touchgfx18ManyBlockAllocatorILm2880ELm3ELm2EE13allocateBlockEttttPPh+0x170>)
 8010284:	21aa      	movs	r1, #170	@ 0xaa
 8010286:	4839      	ldr	r0, [pc, #228]	@ (801036c <_ZN8touchgfx18ManyBlockAllocatorILm2880ELm3ELm2EE13allocateBlockEttttPPh+0x174>)
 8010288:	f015 fcb2 	bl	8025bf0 <__assert_func>
        state[drawingBlock] = ALLOCATED;
 801028c:	68fb      	ldr	r3, [r7, #12]
 801028e:	f503 5300 	add.w	r3, r3, #8192	@ 0x2000
 8010292:	f8d3 31e4 	ldr.w	r3, [r3, #484]	@ 0x1e4
 8010296:	68fa      	ldr	r2, [r7, #12]
 8010298:	4413      	add	r3, r2
 801029a:	2201      	movs	r2, #1
 801029c:	711a      	strb	r2, [r3, #4]
        const int32_t stride = width * bytes_pr_pixel;
 801029e:	88fb      	ldrh	r3, [r7, #6]
 80102a0:	005b      	lsls	r3, r3, #1
 80102a2:	617b      	str	r3, [r7, #20]
        const int32_t lines = block_size / stride;
 80102a4:	697b      	ldr	r3, [r7, #20]
 80102a6:	f44f 6234 	mov.w	r2, #2880	@ 0xb40
 80102aa:	fbb2 f3f3 	udiv	r3, r2, r3
 80102ae:	613b      	str	r3, [r7, #16]
        *block = (uint8_t*)&memory[drawingBlock][0];
 80102b0:	68fb      	ldr	r3, [r7, #12]
 80102b2:	f503 5300 	add.w	r3, r3, #8192	@ 0x2000
 80102b6:	f8d3 31e4 	ldr.w	r3, [r3, #484]	@ 0x1e4
 80102ba:	f44f 6234 	mov.w	r2, #2880	@ 0xb40
 80102be:	fb02 f303 	mul.w	r3, r2, r3
 80102c2:	3308      	adds	r3, #8
 80102c4:	68fa      	ldr	r2, [r7, #12]
 80102c6:	441a      	add	r2, r3
 80102c8:	6a7b      	ldr	r3, [r7, #36]	@ 0x24
 80102ca:	601a      	str	r2, [r3, #0]
        blockRect[drawingBlock].x = x;
 80102cc:	68fb      	ldr	r3, [r7, #12]
 80102ce:	f503 5300 	add.w	r3, r3, #8192	@ 0x2000
 80102d2:	f8d3 21e4 	ldr.w	r2, [r3, #484]	@ 0x1e4
 80102d6:	f9b7 100a 	ldrsh.w	r1, [r7, #10]
 80102da:	68fb      	ldr	r3, [r7, #12]
 80102dc:	f202 4239 	addw	r2, r2, #1081	@ 0x439
 80102e0:	f823 1032 	strh.w	r1, [r3, r2, lsl #3]
        blockRect[drawingBlock].y = y;
 80102e4:	68fb      	ldr	r3, [r7, #12]
 80102e6:	f503 5300 	add.w	r3, r3, #8192	@ 0x2000
 80102ea:	f8d3 31e4 	ldr.w	r3, [r3, #484]	@ 0x1e4
 80102ee:	f9b7 1008 	ldrsh.w	r1, [r7, #8]
 80102f2:	68fa      	ldr	r2, [r7, #12]
 80102f4:	f203 4339 	addw	r3, r3, #1081	@ 0x439
 80102f8:	00db      	lsls	r3, r3, #3
 80102fa:	4413      	add	r3, r2
 80102fc:	460a      	mov	r2, r1
 80102fe:	805a      	strh	r2, [r3, #2]
        blockRect[drawingBlock].width = width;
 8010300:	68fb      	ldr	r3, [r7, #12]
 8010302:	f503 5300 	add.w	r3, r3, #8192	@ 0x2000
 8010306:	f8d3 31e4 	ldr.w	r3, [r3, #484]	@ 0x1e4
 801030a:	f9b7 1006 	ldrsh.w	r1, [r7, #6]
 801030e:	68fa      	ldr	r2, [r7, #12]
 8010310:	f203 4339 	addw	r3, r3, #1081	@ 0x439
 8010314:	00db      	lsls	r3, r3, #3
 8010316:	4413      	add	r3, r2
 8010318:	460a      	mov	r2, r1
 801031a:	809a      	strh	r2, [r3, #4]
        blockRect[drawingBlock].height = MIN(height, lines);
 801031c:	8c3a      	ldrh	r2, [r7, #32]
 801031e:	693b      	ldr	r3, [r7, #16]
 8010320:	429a      	cmp	r2, r3
 8010322:	bfa8      	it	ge
 8010324:	461a      	movge	r2, r3
 8010326:	68fb      	ldr	r3, [r7, #12]
 8010328:	f503 5300 	add.w	r3, r3, #8192	@ 0x2000
 801032c:	f8d3 31e4 	ldr.w	r3, [r3, #484]	@ 0x1e4
 8010330:	b211      	sxth	r1, r2
 8010332:	68fa      	ldr	r2, [r7, #12]
 8010334:	f203 4339 	addw	r3, r3, #1081	@ 0x439
 8010338:	00db      	lsls	r3, r3, #3
 801033a:	4413      	add	r3, r2
 801033c:	460a      	mov	r2, r1
 801033e:	80da      	strh	r2, [r3, #6]
        return blockRect[drawingBlock].height;
 8010340:	68fb      	ldr	r3, [r7, #12]
 8010342:	f503 5300 	add.w	r3, r3, #8192	@ 0x2000
 8010346:	f8d3 31e4 	ldr.w	r3, [r3, #484]	@ 0x1e4
 801034a:	68fa      	ldr	r2, [r7, #12]
 801034c:	f203 4339 	addw	r3, r3, #1081	@ 0x439
 8010350:	00db      	lsls	r3, r3, #3
 8010352:	4413      	add	r3, r2
 8010354:	f9b3 3006 	ldrsh.w	r3, [r3, #6]
 8010358:	b29b      	uxth	r3, r3
    }
 801035a:	4618      	mov	r0, r3
 801035c:	3718      	adds	r7, #24
 801035e:	46bd      	mov	sp, r7
 8010360:	bd80      	pop	{r7, pc}
 8010362:	bf00      	nop
 8010364:	08027964 	.word	0x08027964
 8010368:	08027984 	.word	0x08027984
 801036c:	08027ab8 	.word	0x08027ab8

08010370 <_ZN8touchgfx18ManyBlockAllocatorILm2880ELm3ELm2EE25markBlockReadyForTransferEv>:

    /** Marks a previously allocated block as ready to be transferred to the LCD. */
    virtual void markBlockReadyForTransfer()
 8010370:	b580      	push	{r7, lr}
 8010372:	b082      	sub	sp, #8
 8010374:	af00      	add	r7, sp, #0
 8010376:	6078      	str	r0, [r7, #4]
    {
        assert(state[drawingBlock] == ALLOCATED);
 8010378:	687b      	ldr	r3, [r7, #4]
 801037a:	f503 5300 	add.w	r3, r3, #8192	@ 0x2000
 801037e:	f8d3 31e4 	ldr.w	r3, [r3, #484]	@ 0x1e4
 8010382:	687a      	ldr	r2, [r7, #4]
 8010384:	4413      	add	r3, r2
 8010386:	791b      	ldrb	r3, [r3, #4]
 8010388:	b2db      	uxtb	r3, r3
 801038a:	2b01      	cmp	r3, #1
 801038c:	d005      	beq.n	801039a <_ZN8touchgfx18ManyBlockAllocatorILm2880ELm3ELm2EE25markBlockReadyForTransferEv+0x2a>
 801038e:	4b0a      	ldr	r3, [pc, #40]	@ (80103b8 <_ZN8touchgfx18ManyBlockAllocatorILm2880ELm3ELm2EE25markBlockReadyForTransferEv+0x48>)
 8010390:	4a0a      	ldr	r2, [pc, #40]	@ (80103bc <_ZN8touchgfx18ManyBlockAllocatorILm2880ELm3ELm2EE25markBlockReadyForTransferEv+0x4c>)
 8010392:	21b9      	movs	r1, #185	@ 0xb9
 8010394:	480a      	ldr	r0, [pc, #40]	@ (80103c0 <_ZN8touchgfx18ManyBlockAllocatorILm2880ELm3ELm2EE25markBlockReadyForTransferEv+0x50>)
 8010396:	f015 fc2b 	bl	8025bf0 <__assert_func>
        state[drawingBlock] = DRAWN;
 801039a:	687b      	ldr	r3, [r7, #4]
 801039c:	f503 5300 	add.w	r3, r3, #8192	@ 0x2000
 80103a0:	f8d3 31e4 	ldr.w	r3, [r3, #484]	@ 0x1e4
 80103a4:	687a      	ldr	r2, [r7, #4]
 80103a6:	4413      	add	r3, r2
 80103a8:	2202      	movs	r2, #2
 80103aa:	711a      	strb	r2, [r3, #4]
        FrameBufferAllocatorSignalBlockDrawn();
 80103ac:	f7ff fe3a 	bl	8010024 <_ZN8touchgfx36FrameBufferAllocatorSignalBlockDrawnEv>
    }
 80103b0:	bf00      	nop
 80103b2:	3708      	adds	r7, #8
 80103b4:	46bd      	mov	sp, r7
 80103b6:	bd80      	pop	{r7, pc}
 80103b8:	08027b0c 	.word	0x08027b0c
 80103bc:	08027b30 	.word	0x08027b30
 80103c0:	08027ab8 	.word	0x08027ab8

080103c4 <_ZN8touchgfx18ManyBlockAllocatorILm2880ELm3ELm2EE24hasBlockReadyForTransferEv>:
    /**
     * Check if a block is ready for transfer to the LCD.
     *
     * @return True if a block is ready for transfer.
     */
    virtual bool hasBlockReadyForTransfer()
 80103c4:	b480      	push	{r7}
 80103c6:	b085      	sub	sp, #20
 80103c8:	af00      	add	r7, sp, #0
 80103ca:	6078      	str	r0, [r7, #4]
    {
        for (uint32_t i = 0; i < blocks; i++)
 80103cc:	2300      	movs	r3, #0
 80103ce:	60fb      	str	r3, [r7, #12]
 80103d0:	e011      	b.n	80103f6 <_ZN8touchgfx18ManyBlockAllocatorILm2880ELm3ELm2EE24hasBlockReadyForTransferEv+0x32>
        {
            if (state[i] == DRAWN)
 80103d2:	687a      	ldr	r2, [r7, #4]
 80103d4:	68fb      	ldr	r3, [r7, #12]
 80103d6:	4413      	add	r3, r2
 80103d8:	3304      	adds	r3, #4
 80103da:	781b      	ldrb	r3, [r3, #0]
 80103dc:	b2db      	uxtb	r3, r3
 80103de:	2b02      	cmp	r3, #2
 80103e0:	bf0c      	ite	eq
 80103e2:	2301      	moveq	r3, #1
 80103e4:	2300      	movne	r3, #0
 80103e6:	b2db      	uxtb	r3, r3
 80103e8:	2b00      	cmp	r3, #0
 80103ea:	d001      	beq.n	80103f0 <_ZN8touchgfx18ManyBlockAllocatorILm2880ELm3ELm2EE24hasBlockReadyForTransferEv+0x2c>
            {
                return true;
 80103ec:	2301      	movs	r3, #1
 80103ee:	e006      	b.n	80103fe <_ZN8touchgfx18ManyBlockAllocatorILm2880ELm3ELm2EE24hasBlockReadyForTransferEv+0x3a>
        for (uint32_t i = 0; i < blocks; i++)
 80103f0:	68fb      	ldr	r3, [r7, #12]
 80103f2:	3301      	adds	r3, #1
 80103f4:	60fb      	str	r3, [r7, #12]
 80103f6:	68fb      	ldr	r3, [r7, #12]
 80103f8:	2b02      	cmp	r3, #2
 80103fa:	d9ea      	bls.n	80103d2 <_ZN8touchgfx18ManyBlockAllocatorILm2880ELm3ELm2EE24hasBlockReadyForTransferEv+0xe>
            }
        }
        return false;
 80103fc:	2300      	movs	r3, #0
    }
 80103fe:	4618      	mov	r0, r3
 8010400:	3714      	adds	r7, #20
 8010402:	46bd      	mov	sp, r7
 8010404:	f85d 7b04 	ldr.w	r7, [sp], #4
 8010408:	4770      	bx	lr
	...

0801040c <_ZN8touchgfx18ManyBlockAllocatorILm2880ELm3ELm2EE19getBlockForTransferERNS_4RectE>:
     *
     * @param [in,out] rect Reference to rect to write block x, y, width, and height.
     *
     * @return Returns the address of the block ready for transfer.
     */
    virtual const uint8_t* getBlockForTransfer(Rect& rect)
 801040c:	b580      	push	{r7, lr}
 801040e:	b082      	sub	sp, #8
 8010410:	af00      	add	r7, sp, #0
 8010412:	6078      	str	r0, [r7, #4]
 8010414:	6039      	str	r1, [r7, #0]
    {
        sendingBlock++;
 8010416:	687b      	ldr	r3, [r7, #4]
 8010418:	f503 5300 	add.w	r3, r3, #8192	@ 0x2000
 801041c:	f8d3 31e0 	ldr.w	r3, [r3, #480]	@ 0x1e0
 8010420:	3301      	adds	r3, #1
 8010422:	687a      	ldr	r2, [r7, #4]
 8010424:	f502 5200 	add.w	r2, r2, #8192	@ 0x2000
 8010428:	f8c2 31e0 	str.w	r3, [r2, #480]	@ 0x1e0
        if (sendingBlock == blocks)
 801042c:	687b      	ldr	r3, [r7, #4]
 801042e:	f503 5300 	add.w	r3, r3, #8192	@ 0x2000
 8010432:	f8d3 31e0 	ldr.w	r3, [r3, #480]	@ 0x1e0
 8010436:	2b03      	cmp	r3, #3
 8010438:	d106      	bne.n	8010448 <_ZN8touchgfx18ManyBlockAllocatorILm2880ELm3ELm2EE19getBlockForTransferERNS_4RectE+0x3c>
        {
            sendingBlock = 0;
 801043a:	687b      	ldr	r3, [r7, #4]
 801043c:	f503 5300 	add.w	r3, r3, #8192	@ 0x2000
 8010440:	461a      	mov	r2, r3
 8010442:	2300      	movs	r3, #0
 8010444:	f8c2 31e0 	str.w	r3, [r2, #480]	@ 0x1e0
        }
        assert(state[sendingBlock] == DRAWN);
 8010448:	687b      	ldr	r3, [r7, #4]
 801044a:	f503 5300 	add.w	r3, r3, #8192	@ 0x2000
 801044e:	f8d3 31e0 	ldr.w	r3, [r3, #480]	@ 0x1e0
 8010452:	687a      	ldr	r2, [r7, #4]
 8010454:	4413      	add	r3, r2
 8010456:	791b      	ldrb	r3, [r3, #4]
 8010458:	b2db      	uxtb	r3, r3
 801045a:	2b02      	cmp	r3, #2
 801045c:	d005      	beq.n	801046a <_ZN8touchgfx18ManyBlockAllocatorILm2880ELm3ELm2EE19getBlockForTransferERNS_4RectE+0x5e>
 801045e:	4b16      	ldr	r3, [pc, #88]	@ (80104b8 <_ZN8touchgfx18ManyBlockAllocatorILm2880ELm3ELm2EE19getBlockForTransferERNS_4RectE+0xac>)
 8010460:	4a16      	ldr	r2, [pc, #88]	@ (80104bc <_ZN8touchgfx18ManyBlockAllocatorILm2880ELm3ELm2EE19getBlockForTransferERNS_4RectE+0xb0>)
 8010462:	21dd      	movs	r1, #221	@ 0xdd
 8010464:	4816      	ldr	r0, [pc, #88]	@ (80104c0 <_ZN8touchgfx18ManyBlockAllocatorILm2880ELm3ELm2EE19getBlockForTransferERNS_4RectE+0xb4>)
 8010466:	f015 fbc3 	bl	8025bf0 <__assert_func>
        rect = blockRect[sendingBlock];
 801046a:	687b      	ldr	r3, [r7, #4]
 801046c:	f503 5300 	add.w	r3, r3, #8192	@ 0x2000
 8010470:	f8d3 31e0 	ldr.w	r3, [r3, #480]	@ 0x1e0
 8010474:	683a      	ldr	r2, [r7, #0]
 8010476:	6879      	ldr	r1, [r7, #4]
 8010478:	f203 4339 	addw	r3, r3, #1081	@ 0x439
 801047c:	00db      	lsls	r3, r3, #3
 801047e:	440b      	add	r3, r1
 8010480:	cb03      	ldmia	r3!, {r0, r1}
 8010482:	6010      	str	r0, [r2, #0]
 8010484:	6051      	str	r1, [r2, #4]
        state[sendingBlock] = SENDING;
 8010486:	687b      	ldr	r3, [r7, #4]
 8010488:	f503 5300 	add.w	r3, r3, #8192	@ 0x2000
 801048c:	f8d3 31e0 	ldr.w	r3, [r3, #480]	@ 0x1e0
 8010490:	687a      	ldr	r2, [r7, #4]
 8010492:	4413      	add	r3, r2
 8010494:	2203      	movs	r2, #3
 8010496:	711a      	strb	r2, [r3, #4]
        return (const uint8_t*)&memory[sendingBlock][0];
 8010498:	687b      	ldr	r3, [r7, #4]
 801049a:	f503 5300 	add.w	r3, r3, #8192	@ 0x2000
 801049e:	f8d3 31e0 	ldr.w	r3, [r3, #480]	@ 0x1e0
 80104a2:	f44f 6234 	mov.w	r2, #2880	@ 0xb40
 80104a6:	fb02 f303 	mul.w	r3, r2, r3
 80104aa:	3308      	adds	r3, #8
 80104ac:	687a      	ldr	r2, [r7, #4]
 80104ae:	4413      	add	r3, r2
    }
 80104b0:	4618      	mov	r0, r3
 80104b2:	3708      	adds	r7, #8
 80104b4:	46bd      	mov	sp, r7
 80104b6:	bd80      	pop	{r7, pc}
 80104b8:	08027c04 	.word	0x08027c04
 80104bc:	08027c24 	.word	0x08027c24
 80104c0:	08027ab8 	.word	0x08027ab8

080104c4 <_ZN8touchgfx18ManyBlockAllocatorILm2880ELm3ELm2EE20peekBlockForTransferEv>:

    virtual const Rect& peekBlockForTransfer()
 80104c4:	b580      	push	{r7, lr}
 80104c6:	b084      	sub	sp, #16
 80104c8:	af00      	add	r7, sp, #0
 80104ca:	6078      	str	r0, [r7, #4]
    {
        int nextSendingBlock = sendingBlock + 1;
 80104cc:	687b      	ldr	r3, [r7, #4]
 80104ce:	f503 5300 	add.w	r3, r3, #8192	@ 0x2000
 80104d2:	f8d3 31e0 	ldr.w	r3, [r3, #480]	@ 0x1e0
 80104d6:	3301      	adds	r3, #1
 80104d8:	60fb      	str	r3, [r7, #12]
        if (nextSendingBlock == blocks)
 80104da:	68fb      	ldr	r3, [r7, #12]
 80104dc:	2b03      	cmp	r3, #3
 80104de:	d101      	bne.n	80104e4 <_ZN8touchgfx18ManyBlockAllocatorILm2880ELm3ELm2EE20peekBlockForTransferEv+0x20>
        {
            nextSendingBlock = 0;
 80104e0:	2300      	movs	r3, #0
 80104e2:	60fb      	str	r3, [r7, #12]
        }
        assert(state[nextSendingBlock] == DRAWN);
 80104e4:	687a      	ldr	r2, [r7, #4]
 80104e6:	68fb      	ldr	r3, [r7, #12]
 80104e8:	4413      	add	r3, r2
 80104ea:	3304      	adds	r3, #4
 80104ec:	781b      	ldrb	r3, [r3, #0]
 80104ee:	b2db      	uxtb	r3, r3
 80104f0:	2b02      	cmp	r3, #2
 80104f2:	d005      	beq.n	8010500 <_ZN8touchgfx18ManyBlockAllocatorILm2880ELm3ELm2EE20peekBlockForTransferEv+0x3c>
 80104f4:	4b07      	ldr	r3, [pc, #28]	@ (8010514 <_ZN8touchgfx18ManyBlockAllocatorILm2880ELm3ELm2EE20peekBlockForTransferEv+0x50>)
 80104f6:	4a08      	ldr	r2, [pc, #32]	@ (8010518 <_ZN8touchgfx18ManyBlockAllocatorILm2880ELm3ELm2EE20peekBlockForTransferEv+0x54>)
 80104f8:	21ea      	movs	r1, #234	@ 0xea
 80104fa:	4808      	ldr	r0, [pc, #32]	@ (801051c <_ZN8touchgfx18ManyBlockAllocatorILm2880ELm3ELm2EE20peekBlockForTransferEv+0x58>)
 80104fc:	f015 fb78 	bl	8025bf0 <__assert_func>
        return blockRect[nextSendingBlock];
 8010500:	68fb      	ldr	r3, [r7, #12]
 8010502:	f203 4339 	addw	r3, r3, #1081	@ 0x439
 8010506:	00db      	lsls	r3, r3, #3
 8010508:	687a      	ldr	r2, [r7, #4]
 801050a:	4413      	add	r3, r2
    }
 801050c:	4618      	mov	r0, r3
 801050e:	3710      	adds	r7, #16
 8010510:	46bd      	mov	sp, r7
 8010512:	bd80      	pop	{r7, pc}
 8010514:	08027d24 	.word	0x08027d24
 8010518:	08027d48 	.word	0x08027d48
 801051c:	08027ab8 	.word	0x08027ab8

08010520 <_ZN8touchgfx18ManyBlockAllocatorILm2880ELm3ELm2EE13hasEmptyBlockEv>:

    virtual bool hasEmptyBlock()
 8010520:	b480      	push	{r7}
 8010522:	b085      	sub	sp, #20
 8010524:	af00      	add	r7, sp, #0
 8010526:	6078      	str	r0, [r7, #4]
    {
        int nextDrawingBlock = drawingBlock + 1;
 8010528:	687b      	ldr	r3, [r7, #4]
 801052a:	f503 5300 	add.w	r3, r3, #8192	@ 0x2000
 801052e:	f8d3 31e4 	ldr.w	r3, [r3, #484]	@ 0x1e4
 8010532:	3301      	adds	r3, #1
 8010534:	60fb      	str	r3, [r7, #12]
        if (nextDrawingBlock == blocks)
 8010536:	68fb      	ldr	r3, [r7, #12]
 8010538:	2b03      	cmp	r3, #3
 801053a:	d101      	bne.n	8010540 <_ZN8touchgfx18ManyBlockAllocatorILm2880ELm3ELm2EE13hasEmptyBlockEv+0x20>
        {
            nextDrawingBlock = 0;
 801053c:	2300      	movs	r3, #0
 801053e:	60fb      	str	r3, [r7, #12]
        }
        return (state[nextDrawingBlock] == EMPTY);
 8010540:	687a      	ldr	r2, [r7, #4]
 8010542:	68fb      	ldr	r3, [r7, #12]
 8010544:	4413      	add	r3, r2
 8010546:	3304      	adds	r3, #4
 8010548:	781b      	ldrb	r3, [r3, #0]
 801054a:	b2db      	uxtb	r3, r3
 801054c:	2b00      	cmp	r3, #0
 801054e:	bf0c      	ite	eq
 8010550:	2301      	moveq	r3, #1
 8010552:	2300      	movne	r3, #0
 8010554:	b2db      	uxtb	r3, r3
    }
 8010556:	4618      	mov	r0, r3
 8010558:	3714      	adds	r7, #20
 801055a:	46bd      	mov	sp, r7
 801055c:	f85d 7b04 	ldr.w	r7, [sp], #4
 8010560:	4770      	bx	lr
	...

08010564 <_ZN8touchgfx18ManyBlockAllocatorILm2880ELm3ELm2EE22freeBlockAfterTransferEv>:
    /**
     * Free a block after transfer to the LCD.
     *
     * Marks a previously allocated block as transferred and ready to reuse.
     */
    virtual void freeBlockAfterTransfer()
 8010564:	b580      	push	{r7, lr}
 8010566:	b082      	sub	sp, #8
 8010568:	af00      	add	r7, sp, #0
 801056a:	6078      	str	r0, [r7, #4]
    {
        assert(state[sendingBlock] == SENDING);
 801056c:	687b      	ldr	r3, [r7, #4]
 801056e:	f503 5300 	add.w	r3, r3, #8192	@ 0x2000
 8010572:	f8d3 31e0 	ldr.w	r3, [r3, #480]	@ 0x1e0
 8010576:	687a      	ldr	r2, [r7, #4]
 8010578:	4413      	add	r3, r2
 801057a:	791b      	ldrb	r3, [r3, #4]
 801057c:	b2db      	uxtb	r3, r3
 801057e:	2b03      	cmp	r3, #3
 8010580:	d005      	beq.n	801058e <_ZN8touchgfx18ManyBlockAllocatorILm2880ELm3ELm2EE22freeBlockAfterTransferEv+0x2a>
 8010582:	4b09      	ldr	r3, [pc, #36]	@ (80105a8 <_ZN8touchgfx18ManyBlockAllocatorILm2880ELm3ELm2EE22freeBlockAfterTransferEv+0x44>)
 8010584:	4a09      	ldr	r2, [pc, #36]	@ (80105ac <_ZN8touchgfx18ManyBlockAllocatorILm2880ELm3ELm2EE22freeBlockAfterTransferEv+0x48>)
 8010586:	21ff      	movs	r1, #255	@ 0xff
 8010588:	4809      	ldr	r0, [pc, #36]	@ (80105b0 <_ZN8touchgfx18ManyBlockAllocatorILm2880ELm3ELm2EE22freeBlockAfterTransferEv+0x4c>)
 801058a:	f015 fb31 	bl	8025bf0 <__assert_func>
        state[sendingBlock] = EMPTY;
 801058e:	687b      	ldr	r3, [r7, #4]
 8010590:	f503 5300 	add.w	r3, r3, #8192	@ 0x2000
 8010594:	f8d3 31e0 	ldr.w	r3, [r3, #480]	@ 0x1e0
 8010598:	687a      	ldr	r2, [r7, #4]
 801059a:	4413      	add	r3, r2
 801059c:	2200      	movs	r2, #0
 801059e:	711a      	strb	r2, [r3, #4]
    }
 80105a0:	bf00      	nop
 80105a2:	3708      	adds	r7, #8
 80105a4:	46bd      	mov	sp, r7
 80105a6:	bd80      	pop	{r7, pc}
 80105a8:	08027e28 	.word	0x08027e28
 80105ac:	08027e48 	.word	0x08027e48
 80105b0:	08027ab8 	.word	0x08027ab8

080105b4 <_GLOBAL__sub_I__ZN8touchgfx5paint12setL8PaletteEPKh>:
 80105b4:	b580      	push	{r7, lr}
 80105b6:	af00      	add	r7, sp, #0
 80105b8:	f64f 71ff 	movw	r1, #65535	@ 0xffff
 80105bc:	2001      	movs	r0, #1
 80105be:	f7ff fdf9 	bl	80101b4 <_Z41__static_initialization_and_destruction_0ii>
 80105c2:	bd80      	pop	{r7, pc}

080105c4 <_GLOBAL__sub_D__ZN8touchgfx5paint12setL8PaletteEPKh>:
 80105c4:	b580      	push	{r7, lr}
 80105c6:	af00      	add	r7, sp, #0
 80105c8:	f64f 71ff 	movw	r1, #65535	@ 0xffff
 80105cc:	2000      	movs	r0, #0
 80105ce:	f7ff fdf1 	bl	80101b4 <_Z41__static_initialization_and_destruction_0ii>
 80105d2:	bd80      	pop	{r7, pc}

080105d4 <_ZNK8touchgfx17AbstractPartition18getAllocationCountEv>:
 80105d4:	8880      	ldrh	r0, [r0, #4]
 80105d6:	4770      	bx	lr

080105d8 <_ZN8touchgfx17AbstractPartition7indexOfEPKv>:
 80105d8:	b570      	push	{r4, r5, r6, lr}
 80105da:	6803      	ldr	r3, [r0, #0]
 80105dc:	4605      	mov	r5, r0
 80105de:	460c      	mov	r4, r1
 80105e0:	6a5b      	ldr	r3, [r3, #36]	@ 0x24
 80105e2:	2100      	movs	r1, #0
 80105e4:	4798      	blx	r3
 80105e6:	682b      	ldr	r3, [r5, #0]
 80105e8:	4606      	mov	r6, r0
 80105ea:	6a1b      	ldr	r3, [r3, #32]
 80105ec:	4628      	mov	r0, r5
 80105ee:	4798      	blx	r3
 80105f0:	1ba4      	subs	r4, r4, r6
 80105f2:	b2a4      	uxth	r4, r4
 80105f4:	fbb4 f0f0 	udiv	r0, r4, r0
 80105f8:	bd70      	pop	{r4, r5, r6, pc}

080105fa <_ZN8touchgfx17AbstractPartition5clearEv>:
 80105fa:	2300      	movs	r3, #0
 80105fc:	8083      	strh	r3, [r0, #4]
 80105fe:	4770      	bx	lr

08010600 <_ZN8touchgfx17AbstractPartition8allocateEt>:
 8010600:	b510      	push	{r4, lr}
 8010602:	6803      	ldr	r3, [r0, #0]
 8010604:	8881      	ldrh	r1, [r0, #4]
 8010606:	6a5b      	ldr	r3, [r3, #36]	@ 0x24
 8010608:	4604      	mov	r4, r0
 801060a:	4798      	blx	r3
 801060c:	88a3      	ldrh	r3, [r4, #4]
 801060e:	3301      	adds	r3, #1
 8010610:	80a3      	strh	r3, [r4, #4]
 8010612:	bd10      	pop	{r4, pc}

08010614 <_ZN8touchgfx17AbstractPartition10allocateAtEtt>:
 8010614:	6803      	ldr	r3, [r0, #0]
 8010616:	6a5b      	ldr	r3, [r3, #36]	@ 0x24
 8010618:	4718      	bx	r3

0801061a <_ZN8touchgfx17AbstractPartitionD1Ev>:
 801061a:	4770      	bx	lr

0801061c <_ZN8touchgfx17AbstractPartitionC1Ev>:
 801061c:	4a02      	ldr	r2, [pc, #8]	@ (8010628 <_ZN8touchgfx17AbstractPartitionC1Ev+0xc>)
 801061e:	6002      	str	r2, [r0, #0]
 8010620:	2200      	movs	r2, #0
 8010622:	8082      	strh	r2, [r0, #4]
 8010624:	4770      	bx	lr
 8010626:	bf00      	nop
 8010628:	08028e08 	.word	0x08028e08

0801062c <_ZN8touchgfx9Container8containsERKNS_8DrawableE>:
 801062c:	6a83      	ldr	r3, [r0, #40]	@ 0x28
 801062e:	2000      	movs	r0, #0
 8010630:	b12b      	cbz	r3, 801063e <_ZN8touchgfx9Container8containsERKNS_8DrawableE+0x12>
 8010632:	b920      	cbnz	r0, 801063e <_ZN8touchgfx9Container8containsERKNS_8DrawableE+0x12>
 8010634:	1a5a      	subs	r2, r3, r1
 8010636:	4250      	negs	r0, r2
 8010638:	4150      	adcs	r0, r2
 801063a:	699b      	ldr	r3, [r3, #24]
 801063c:	e7f8      	b.n	8010630 <_ZN8touchgfx9Container8containsERKNS_8DrawableE+0x4>
 801063e:	4770      	bx	lr

08010640 <_ZN8touchgfx9Container3addERNS_8DrawableE>:
 8010640:	2300      	movs	r3, #0
 8010642:	6148      	str	r0, [r1, #20]
 8010644:	618b      	str	r3, [r1, #24]
 8010646:	6a83      	ldr	r3, [r0, #40]	@ 0x28
 8010648:	b913      	cbnz	r3, 8010650 <_ZN8touchgfx9Container3addERNS_8DrawableE+0x10>
 801064a:	6281      	str	r1, [r0, #40]	@ 0x28
 801064c:	4770      	bx	lr
 801064e:	4613      	mov	r3, r2
 8010650:	699a      	ldr	r2, [r3, #24]
 8010652:	2a00      	cmp	r2, #0
 8010654:	d1fb      	bne.n	801064e <_ZN8touchgfx9Container3addERNS_8DrawableE+0xe>
 8010656:	6199      	str	r1, [r3, #24]
 8010658:	4770      	bx	lr

0801065a <_ZN8touchgfx9Container9removeAllEv>:
 801065a:	2200      	movs	r2, #0
 801065c:	6a83      	ldr	r3, [r0, #40]	@ 0x28
 801065e:	b123      	cbz	r3, 801066a <_ZN8touchgfx9Container9removeAllEv+0x10>
 8010660:	6999      	ldr	r1, [r3, #24]
 8010662:	6281      	str	r1, [r0, #40]	@ 0x28
 8010664:	e9c3 2205 	strd	r2, r2, [r3, #20]
 8010668:	e7f8      	b.n	801065c <_ZN8touchgfx9Container9removeAllEv+0x2>
 801066a:	4770      	bx	lr

0801066c <_ZN8touchgfx9Container6unlinkEv>:
 801066c:	2300      	movs	r3, #0
 801066e:	6283      	str	r3, [r0, #40]	@ 0x28
 8010670:	4770      	bx	lr

08010672 <_ZNK8touchgfx9Container12getSolidRectEv>:
 8010672:	2200      	movs	r2, #0
 8010674:	8002      	strh	r2, [r0, #0]
 8010676:	8042      	strh	r2, [r0, #2]
 8010678:	8082      	strh	r2, [r0, #4]
 801067a:	80c2      	strh	r2, [r0, #6]
 801067c:	4770      	bx	lr

0801067e <_ZN8touchgfx9Container20moveChildrenRelativeEss>:
 801067e:	b570      	push	{r4, r5, r6, lr}
 8010680:	6a84      	ldr	r4, [r0, #40]	@ 0x28
 8010682:	460d      	mov	r5, r1
 8010684:	4616      	mov	r6, r2
 8010686:	b13c      	cbz	r4, 8010698 <_ZN8touchgfx9Container20moveChildrenRelativeEss+0x1a>
 8010688:	6823      	ldr	r3, [r4, #0]
 801068a:	4620      	mov	r0, r4
 801068c:	6d5b      	ldr	r3, [r3, #84]	@ 0x54
 801068e:	4632      	mov	r2, r6
 8010690:	4629      	mov	r1, r5
 8010692:	4798      	blx	r3
 8010694:	69a4      	ldr	r4, [r4, #24]
 8010696:	e7f6      	b.n	8010686 <_ZN8touchgfx9Container20moveChildrenRelativeEss+0x8>
 8010698:	bd70      	pop	{r4, r5, r6, pc}

0801069a <_ZN8touchgfx9Container12forEachChildEPNS_15GenericCallbackIRNS_8DrawableEvvEE>:
 801069a:	b538      	push	{r3, r4, r5, lr}
 801069c:	6a84      	ldr	r4, [r0, #40]	@ 0x28
 801069e:	460d      	mov	r5, r1
 80106a0:	b134      	cbz	r4, 80106b0 <_ZN8touchgfx9Container12forEachChildEPNS_15GenericCallbackIRNS_8DrawableEvvEE+0x16>
 80106a2:	682b      	ldr	r3, [r5, #0]
 80106a4:	4621      	mov	r1, r4
 80106a6:	689b      	ldr	r3, [r3, #8]
 80106a8:	4628      	mov	r0, r5
 80106aa:	4798      	blx	r3
 80106ac:	69a4      	ldr	r4, [r4, #24]
 80106ae:	e7f7      	b.n	80106a0 <_ZN8touchgfx9Container12forEachChildEPNS_15GenericCallbackIRNS_8DrawableEvvEE+0x6>
 80106b0:	bd38      	pop	{r3, r4, r5, pc}

080106b2 <_ZN8touchgfx9Container6removeERNS_8DrawableE>:
 80106b2:	6a83      	ldr	r3, [r0, #40]	@ 0x28
 80106b4:	b19b      	cbz	r3, 80106de <_ZN8touchgfx9Container6removeERNS_8DrawableE+0x2c>
 80106b6:	428b      	cmp	r3, r1
 80106b8:	d109      	bne.n	80106ce <_ZN8touchgfx9Container6removeERNS_8DrawableE+0x1c>
 80106ba:	699a      	ldr	r2, [r3, #24]
 80106bc:	2100      	movs	r1, #0
 80106be:	6159      	str	r1, [r3, #20]
 80106c0:	6282      	str	r2, [r0, #40]	@ 0x28
 80106c2:	b902      	cbnz	r2, 80106c6 <_ZN8touchgfx9Container6removeERNS_8DrawableE+0x14>
 80106c4:	4770      	bx	lr
 80106c6:	6199      	str	r1, [r3, #24]
 80106c8:	4770      	bx	lr
 80106ca:	4613      	mov	r3, r2
 80106cc:	b13a      	cbz	r2, 80106de <_ZN8touchgfx9Container6removeERNS_8DrawableE+0x2c>
 80106ce:	699a      	ldr	r2, [r3, #24]
 80106d0:	428a      	cmp	r2, r1
 80106d2:	d1fa      	bne.n	80106ca <_ZN8touchgfx9Container6removeERNS_8DrawableE+0x18>
 80106d4:	698a      	ldr	r2, [r1, #24]
 80106d6:	619a      	str	r2, [r3, #24]
 80106d8:	2300      	movs	r3, #0
 80106da:	e9c1 3305 	strd	r3, r3, [r1, #20]
 80106de:	4770      	bx	lr

080106e0 <_ZN8touchgfx9Container6insertEPNS_8DrawableERS1_>:
 80106e0:	b410      	push	{r4}
 80106e2:	6a83      	ldr	r3, [r0, #40]	@ 0x28
 80106e4:	4604      	mov	r4, r0
 80106e6:	b92b      	cbnz	r3, 80106f4 <_ZN8touchgfx9Container6insertEPNS_8DrawableERS1_+0x14>
 80106e8:	6803      	ldr	r3, [r0, #0]
 80106ea:	f85d 4b04 	ldr.w	r4, [sp], #4
 80106ee:	6e1b      	ldr	r3, [r3, #96]	@ 0x60
 80106f0:	4611      	mov	r1, r2
 80106f2:	4718      	bx	r3
 80106f4:	b941      	cbnz	r1, 8010708 <_ZN8touchgfx9Container6insertEPNS_8DrawableERS1_+0x28>
 80106f6:	6193      	str	r3, [r2, #24]
 80106f8:	6282      	str	r2, [r0, #40]	@ 0x28
 80106fa:	6154      	str	r4, [r2, #20]
 80106fc:	f85d 4b04 	ldr.w	r4, [sp], #4
 8010700:	4770      	bx	lr
 8010702:	4603      	mov	r3, r0
 8010704:	2800      	cmp	r0, #0
 8010706:	d0f9      	beq.n	80106fc <_ZN8touchgfx9Container6insertEPNS_8DrawableERS1_+0x1c>
 8010708:	4299      	cmp	r1, r3
 801070a:	6998      	ldr	r0, [r3, #24]
 801070c:	d1f9      	bne.n	8010702 <_ZN8touchgfx9Container6insertEPNS_8DrawableERS1_+0x22>
 801070e:	6190      	str	r0, [r2, #24]
 8010710:	618a      	str	r2, [r1, #24]
 8010712:	e7f2      	b.n	80106fa <_ZN8touchgfx9Container6insertEPNS_8DrawableERS1_+0x1a>

08010714 <_ZN8touchgfx9Container12getLastChildEssPPNS_8DrawableE>:
 8010714:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 8010718:	461f      	mov	r7, r3
 801071a:	f890 3024 	ldrb.w	r3, [r0, #36]	@ 0x24
 801071e:	460d      	mov	r5, r1
 8010720:	4616      	mov	r6, r2
 8010722:	b103      	cbz	r3, 8010726 <_ZN8touchgfx9Container12getLastChildEssPPNS_8DrawableE+0x12>
 8010724:	6038      	str	r0, [r7, #0]
 8010726:	6a84      	ldr	r4, [r0, #40]	@ 0x28
 8010728:	b314      	cbz	r4, 8010770 <_ZN8touchgfx9Container12getLastChildEssPPNS_8DrawableE+0x5c>
 801072a:	f894 3025 	ldrb.w	r3, [r4, #37]	@ 0x25
 801072e:	b1eb      	cbz	r3, 801076c <_ZN8touchgfx9Container12getLastChildEssPPNS_8DrawableE+0x58>
 8010730:	f9b4 1004 	ldrsh.w	r1, [r4, #4]
 8010734:	428d      	cmp	r5, r1
 8010736:	db19      	blt.n	801076c <_ZN8touchgfx9Container12getLastChildEssPPNS_8DrawableE+0x58>
 8010738:	8923      	ldrh	r3, [r4, #8]
 801073a:	b289      	uxth	r1, r1
 801073c:	440b      	add	r3, r1
 801073e:	b21b      	sxth	r3, r3
 8010740:	429d      	cmp	r5, r3
 8010742:	da13      	bge.n	801076c <_ZN8touchgfx9Container12getLastChildEssPPNS_8DrawableE+0x58>
 8010744:	f9b4 2006 	ldrsh.w	r2, [r4, #6]
 8010748:	4296      	cmp	r6, r2
 801074a:	db0f      	blt.n	801076c <_ZN8touchgfx9Container12getLastChildEssPPNS_8DrawableE+0x58>
 801074c:	8963      	ldrh	r3, [r4, #10]
 801074e:	b292      	uxth	r2, r2
 8010750:	4413      	add	r3, r2
 8010752:	b21b      	sxth	r3, r3
 8010754:	429e      	cmp	r6, r3
 8010756:	da09      	bge.n	801076c <_ZN8touchgfx9Container12getLastChildEssPPNS_8DrawableE+0x58>
 8010758:	6823      	ldr	r3, [r4, #0]
 801075a:	1ab2      	subs	r2, r6, r2
 801075c:	1a69      	subs	r1, r5, r1
 801075e:	f8d3 8024 	ldr.w	r8, [r3, #36]	@ 0x24
 8010762:	b212      	sxth	r2, r2
 8010764:	463b      	mov	r3, r7
 8010766:	b209      	sxth	r1, r1
 8010768:	4620      	mov	r0, r4
 801076a:	47c0      	blx	r8
 801076c:	69a4      	ldr	r4, [r4, #24]
 801076e:	e7db      	b.n	8010728 <_ZN8touchgfx9Container12getLastChildEssPPNS_8DrawableE+0x14>
 8010770:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}

08010774 <_ZN8touchgfx9Container16getLastChildNearEssPPNS_8DrawableEPsS4_>:
 8010774:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8010778:	4c6e      	ldr	r4, [pc, #440]	@ (8010934 <_ZN8touchgfx9Container16getLastChildNearEssPPNS_8DrawableEPsS4_+0x1c0>)
 801077a:	b0a1      	sub	sp, #132	@ 0x84
 801077c:	6824      	ldr	r4, [r4, #0]
 801077e:	9d2a      	ldr	r5, [sp, #168]	@ 0xa8
 8010780:	f894 9049 	ldrb.w	r9, [r4, #73]	@ 0x49
 8010784:	9303      	str	r3, [sp, #12]
 8010786:	2400      	movs	r4, #0
 8010788:	802c      	strh	r4, [r5, #0]
 801078a:	9d2b      	ldr	r5, [sp, #172]	@ 0xac
 801078c:	802c      	strh	r4, [r5, #0]
 801078e:	601c      	str	r4, [r3, #0]
 8010790:	4606      	mov	r6, r0
 8010792:	e9cd 1201 	strd	r1, r2, [sp, #4]
 8010796:	f7ff ffbd 	bl	8010714 <_ZN8touchgfx9Container12getLastChildEssPPNS_8DrawableE>
 801079a:	f1b9 0f03 	cmp.w	r9, #3
 801079e:	f340 80c2 	ble.w	8010926 <_ZN8touchgfx9Container16getLastChildNearEssPPNS_8DrawableEPsS4_+0x1b2>
 80107a2:	4631      	mov	r1, r6
 80107a4:	a80c      	add	r0, sp, #48	@ 0x30
 80107a6:	f004 fd2d 	bl	8015204 <_ZNK8touchgfx8Drawable15getAbsoluteRectEv>
 80107aa:	f9bd 3030 	ldrsh.w	r3, [sp, #48]	@ 0x30
 80107ae:	9306      	str	r3, [sp, #24]
 80107b0:	f9bd 3032 	ldrsh.w	r3, [sp, #50]	@ 0x32
 80107b4:	9307      	str	r3, [sp, #28]
 80107b6:	9b03      	ldr	r3, [sp, #12]
 80107b8:	f8d3 a000 	ldr.w	sl, [r3]
 80107bc:	f1ba 0f00 	cmp.w	sl, #0
 80107c0:	f000 80b4 	beq.w	801092c <_ZN8touchgfx9Container16getLastChildNearEssPPNS_8DrawableEPsS4_+0x1b8>
 80107c4:	4651      	mov	r1, sl
 80107c6:	a810      	add	r0, sp, #64	@ 0x40
 80107c8:	f004 fd1c 	bl	8015204 <_ZNK8touchgfx8Drawable15getAbsoluteRectEv>
 80107cc:	9b01      	ldr	r3, [sp, #4]
 80107ce:	9a06      	ldr	r2, [sp, #24]
 80107d0:	f9bd 1044 	ldrsh.w	r1, [sp, #68]	@ 0x44
 80107d4:	189d      	adds	r5, r3, r2
 80107d6:	f9bd 3040 	ldrsh.w	r3, [sp, #64]	@ 0x40
 80107da:	9a07      	ldr	r2, [sp, #28]
 80107dc:	2002      	movs	r0, #2
 80107de:	fb91 f1f0 	sdiv	r1, r1, r0
 80107e2:	4419      	add	r1, r3
 80107e4:	1a6d      	subs	r5, r5, r1
 80107e6:	9b02      	ldr	r3, [sp, #8]
 80107e8:	f9bd 1042 	ldrsh.w	r1, [sp, #66]	@ 0x42
 80107ec:	4413      	add	r3, r2
 80107ee:	f9bd 2046 	ldrsh.w	r2, [sp, #70]	@ 0x46
 80107f2:	fb92 f2f0 	sdiv	r2, r2, r0
 80107f6:	440a      	add	r2, r1
 80107f8:	1a9b      	subs	r3, r3, r2
 80107fa:	435b      	muls	r3, r3
 80107fc:	fb05 3505 	mla	r5, r5, r5, r3
 8010800:	4f4d      	ldr	r7, [pc, #308]	@ (8010938 <_ZN8touchgfx9Container16getLastChildNearEssPPNS_8DrawableEPsS4_+0x1c4>)
 8010802:	cf0f      	ldmia	r7!, {r0, r1, r2, r3}
 8010804:	ac10      	add	r4, sp, #64	@ 0x40
 8010806:	c40f      	stmia	r4!, {r0, r1, r2, r3}
 8010808:	cf0f      	ldmia	r7!, {r0, r1, r2, r3}
 801080a:	c40f      	stmia	r4!, {r0, r1, r2, r3}
 801080c:	cf0f      	ldmia	r7!, {r0, r1, r2, r3}
 801080e:	c40f      	stmia	r4!, {r0, r1, r2, r3}
 8010810:	e897 000f 	ldmia.w	r7, {r0, r1, r2, r3}
 8010814:	f1b9 0f0c 	cmp.w	r9, #12
 8010818:	e884 000f 	stmia.w	r4, {r0, r1, r2, r3}
 801081c:	f04f 0303 	mov.w	r3, #3
 8010820:	bfc8      	it	gt
 8010822:	4698      	movgt	r8, r3
 8010824:	f8cd 9000 	str.w	r9, [sp]
 8010828:	f04f 0400 	mov.w	r4, #0
 801082c:	bfdc      	itt	le
 801082e:	f109 32ff 	addle.w	r2, r9, #4294967295
 8010832:	fb92 f8f3 	sdivle	r8, r2, r3
 8010836:	1c63      	adds	r3, r4, #1
 8010838:	aa10      	add	r2, sp, #64	@ 0x40
 801083a:	f004 0401 	and.w	r4, r4, #1
 801083e:	9308      	str	r3, [sp, #32]
 8010840:	eb02 1444 	add.w	r4, r2, r4, lsl #5
 8010844:	9b00      	ldr	r3, [sp, #0]
 8010846:	fb93 f3f8 	sdiv	r3, r3, r8
 801084a:	b29b      	uxth	r3, r3
 801084c:	3404      	adds	r4, #4
 801084e:	f04f 0b00 	mov.w	fp, #0
 8010852:	9304      	str	r3, [sp, #16]
 8010854:	9a04      	ldr	r2, [sp, #16]
 8010856:	f854 3c04 	ldr.w	r3, [r4, #-4]
 801085a:	fb13 f302 	smulbb	r3, r3, r2
 801085e:	9a01      	ldr	r2, [sp, #4]
 8010860:	b29b      	uxth	r3, r3
 8010862:	1899      	adds	r1, r3, r2
 8010864:	9305      	str	r3, [sp, #20]
 8010866:	f9b6 3004 	ldrsh.w	r3, [r6, #4]
 801086a:	b209      	sxth	r1, r1
 801086c:	4299      	cmp	r1, r3
 801086e:	db4d      	blt.n	801090c <_ZN8touchgfx9Container16getLastChildNearEssPPNS_8DrawableEPsS4_+0x198>
 8010870:	8932      	ldrh	r2, [r6, #8]
 8010872:	4413      	add	r3, r2
 8010874:	b21b      	sxth	r3, r3
 8010876:	4299      	cmp	r1, r3
 8010878:	da48      	bge.n	801090c <_ZN8touchgfx9Container16getLastChildNearEssPPNS_8DrawableEPsS4_+0x198>
 801087a:	9b04      	ldr	r3, [sp, #16]
 801087c:	6827      	ldr	r7, [r4, #0]
 801087e:	fb17 f703 	smulbb	r7, r7, r3
 8010882:	9b02      	ldr	r3, [sp, #8]
 8010884:	b2bf      	uxth	r7, r7
 8010886:	18fa      	adds	r2, r7, r3
 8010888:	f9b6 3006 	ldrsh.w	r3, [r6, #6]
 801088c:	b212      	sxth	r2, r2
 801088e:	429a      	cmp	r2, r3
 8010890:	db3c      	blt.n	801090c <_ZN8touchgfx9Container16getLastChildNearEssPPNS_8DrawableEPsS4_+0x198>
 8010892:	8970      	ldrh	r0, [r6, #10]
 8010894:	4403      	add	r3, r0
 8010896:	b21b      	sxth	r3, r3
 8010898:	429a      	cmp	r2, r3
 801089a:	da37      	bge.n	801090c <_ZN8touchgfx9Container16getLastChildNearEssPPNS_8DrawableEPsS4_+0x198>
 801089c:	2300      	movs	r3, #0
 801089e:	930b      	str	r3, [sp, #44]	@ 0x2c
 80108a0:	4630      	mov	r0, r6
 80108a2:	ab0b      	add	r3, sp, #44	@ 0x2c
 80108a4:	f7ff ff36 	bl	8010714 <_ZN8touchgfx9Container12getLastChildEssPPNS_8DrawableE>
 80108a8:	9a0b      	ldr	r2, [sp, #44]	@ 0x2c
 80108aa:	b37a      	cbz	r2, 801090c <_ZN8touchgfx9Container16getLastChildNearEssPPNS_8DrawableEPsS4_+0x198>
 80108ac:	4552      	cmp	r2, sl
 80108ae:	d02d      	beq.n	801090c <_ZN8touchgfx9Container16getLastChildNearEssPPNS_8DrawableEPsS4_+0x198>
 80108b0:	4611      	mov	r1, r2
 80108b2:	a80e      	add	r0, sp, #56	@ 0x38
 80108b4:	9209      	str	r2, [sp, #36]	@ 0x24
 80108b6:	f004 fca5 	bl	8015204 <_ZNK8touchgfx8Drawable15getAbsoluteRectEv>
 80108ba:	9a06      	ldr	r2, [sp, #24]
 80108bc:	f9bd 0038 	ldrsh.w	r0, [sp, #56]	@ 0x38
 80108c0:	9b01      	ldr	r3, [sp, #4]
 80108c2:	f9bd 103c 	ldrsh.w	r1, [sp, #60]	@ 0x3c
 80108c6:	f9bd c03e 	ldrsh.w	ip, [sp, #62]	@ 0x3e
 80108ca:	4413      	add	r3, r2
 80108cc:	f04f 0e02 	mov.w	lr, #2
 80108d0:	fb91 f1fe 	sdiv	r1, r1, lr
 80108d4:	4401      	add	r1, r0
 80108d6:	1a58      	subs	r0, r3, r1
 80108d8:	9a07      	ldr	r2, [sp, #28]
 80108da:	9b02      	ldr	r3, [sp, #8]
 80108dc:	f9bd 103a 	ldrsh.w	r1, [sp, #58]	@ 0x3a
 80108e0:	fb9c fcfe 	sdiv	ip, ip, lr
 80108e4:	4413      	add	r3, r2
 80108e6:	448c      	add	ip, r1
 80108e8:	eba3 030c 	sub.w	r3, r3, ip
 80108ec:	435b      	muls	r3, r3
 80108ee:	fb00 3300 	mla	r3, r0, r0, r3
 80108f2:	42ab      	cmp	r3, r5
 80108f4:	9a09      	ldr	r2, [sp, #36]	@ 0x24
 80108f6:	d208      	bcs.n	801090a <_ZN8touchgfx9Container16getLastChildNearEssPPNS_8DrawableEPsS4_+0x196>
 80108f8:	9803      	ldr	r0, [sp, #12]
 80108fa:	990b      	ldr	r1, [sp, #44]	@ 0x2c
 80108fc:	6001      	str	r1, [r0, #0]
 80108fe:	992a      	ldr	r1, [sp, #168]	@ 0xa8
 8010900:	9805      	ldr	r0, [sp, #20]
 8010902:	8008      	strh	r0, [r1, #0]
 8010904:	992b      	ldr	r1, [sp, #172]	@ 0xac
 8010906:	461d      	mov	r5, r3
 8010908:	800f      	strh	r7, [r1, #0]
 801090a:	4692      	mov	sl, r2
 801090c:	f10b 0b01 	add.w	fp, fp, #1
 8010910:	f1bb 0f04 	cmp.w	fp, #4
 8010914:	f104 0408 	add.w	r4, r4, #8
 8010918:	d19c      	bne.n	8010854 <_ZN8touchgfx9Container16getLastChildNearEssPPNS_8DrawableEPsS4_+0xe0>
 801091a:	9b00      	ldr	r3, [sp, #0]
 801091c:	9c08      	ldr	r4, [sp, #32]
 801091e:	444b      	add	r3, r9
 8010920:	4544      	cmp	r4, r8
 8010922:	9300      	str	r3, [sp, #0]
 8010924:	d187      	bne.n	8010836 <_ZN8touchgfx9Container16getLastChildNearEssPPNS_8DrawableEPsS4_+0xc2>
 8010926:	b021      	add	sp, #132	@ 0x84
 8010928:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 801092c:	f04f 35ff 	mov.w	r5, #4294967295
 8010930:	e766      	b.n	8010800 <_ZN8touchgfx9Container16getLastChildNearEssPPNS_8DrawableEPsS4_+0x8c>
 8010932:	bf00      	nop
 8010934:	20002fa8 	.word	0x20002fa8
 8010938:	08027f18 	.word	0x08027f18

0801093c <_ZN8touchgfx4RectaNERKS0_>:
 801093c:	e92d 43f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, lr}
 8010940:	f9b1 7000 	ldrsh.w	r7, [r1]
 8010944:	888c      	ldrh	r4, [r1, #4]
 8010946:	f9b0 9000 	ldrsh.w	r9, [r0]
 801094a:	443c      	add	r4, r7
 801094c:	b2a4      	uxth	r4, r4
 801094e:	fa0f f884 	sxth.w	r8, r4
 8010952:	45c1      	cmp	r9, r8
 8010954:	da2f      	bge.n	80109b6 <_ZN8touchgfx4RectaNERKS0_+0x7a>
 8010956:	8882      	ldrh	r2, [r0, #4]
 8010958:	444a      	add	r2, r9
 801095a:	b292      	uxth	r2, r2
 801095c:	fa0f fe82 	sxth.w	lr, r2
 8010960:	4577      	cmp	r7, lr
 8010962:	da28      	bge.n	80109b6 <_ZN8touchgfx4RectaNERKS0_+0x7a>
 8010964:	f9b1 5002 	ldrsh.w	r5, [r1, #2]
 8010968:	88cb      	ldrh	r3, [r1, #6]
 801096a:	f9b0 6002 	ldrsh.w	r6, [r0, #2]
 801096e:	442b      	add	r3, r5
 8010970:	b21b      	sxth	r3, r3
 8010972:	429e      	cmp	r6, r3
 8010974:	da1f      	bge.n	80109b6 <_ZN8touchgfx4RectaNERKS0_+0x7a>
 8010976:	88c3      	ldrh	r3, [r0, #6]
 8010978:	4433      	add	r3, r6
 801097a:	b29b      	uxth	r3, r3
 801097c:	fa0f fc83 	sxth.w	ip, r3
 8010980:	4565      	cmp	r5, ip
 8010982:	da18      	bge.n	80109b6 <_ZN8touchgfx4RectaNERKS0_+0x7a>
 8010984:	454f      	cmp	r7, r9
 8010986:	bfb8      	it	lt
 8010988:	464f      	movlt	r7, r9
 801098a:	42b5      	cmp	r5, r6
 801098c:	bfb8      	it	lt
 801098e:	4635      	movlt	r5, r6
 8010990:	45f0      	cmp	r8, lr
 8010992:	bfd8      	it	le
 8010994:	4622      	movle	r2, r4
 8010996:	1bd2      	subs	r2, r2, r7
 8010998:	8082      	strh	r2, [r0, #4]
 801099a:	884a      	ldrh	r2, [r1, #2]
 801099c:	88c9      	ldrh	r1, [r1, #6]
 801099e:	8007      	strh	r7, [r0, #0]
 80109a0:	440a      	add	r2, r1
 80109a2:	b292      	uxth	r2, r2
 80109a4:	b211      	sxth	r1, r2
 80109a6:	458c      	cmp	ip, r1
 80109a8:	bfa8      	it	ge
 80109aa:	4613      	movge	r3, r2
 80109ac:	1b5b      	subs	r3, r3, r5
 80109ae:	80c3      	strh	r3, [r0, #6]
 80109b0:	8045      	strh	r5, [r0, #2]
 80109b2:	e8bd 83f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, pc}
 80109b6:	2300      	movs	r3, #0
 80109b8:	8003      	strh	r3, [r0, #0]
 80109ba:	8043      	strh	r3, [r0, #2]
 80109bc:	8083      	strh	r3, [r0, #4]
 80109be:	80c3      	strh	r3, [r0, #6]
 80109c0:	e7f7      	b.n	80109b2 <_ZN8touchgfx4RectaNERKS0_+0x76>

080109c2 <_ZNK8touchgfx4Rect7isEmptyEv>:
 80109c2:	f9b0 3004 	ldrsh.w	r3, [r0, #4]
 80109c6:	2b00      	cmp	r3, #0
 80109c8:	dd06      	ble.n	80109d8 <_ZNK8touchgfx4Rect7isEmptyEv+0x16>
 80109ca:	f9b0 0006 	ldrsh.w	r0, [r0, #6]
 80109ce:	2800      	cmp	r0, #0
 80109d0:	bfcc      	ite	gt
 80109d2:	2000      	movgt	r0, #0
 80109d4:	2001      	movle	r0, #1
 80109d6:	4770      	bx	lr
 80109d8:	2001      	movs	r0, #1
 80109da:	4770      	bx	lr

080109dc <_ZNK8touchgfx9Container16getContainedAreaEv>:
 80109dc:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 80109e0:	2300      	movs	r3, #0
 80109e2:	6a8d      	ldr	r5, [r1, #40]	@ 0x28
 80109e4:	8003      	strh	r3, [r0, #0]
 80109e6:	4604      	mov	r4, r0
 80109e8:	8043      	strh	r3, [r0, #2]
 80109ea:	8083      	strh	r3, [r0, #4]
 80109ec:	80c3      	strh	r3, [r0, #6]
 80109ee:	2d00      	cmp	r5, #0
 80109f0:	d040      	beq.n	8010a74 <_ZNK8touchgfx9Container16getContainedAreaEv+0x98>
 80109f2:	1d28      	adds	r0, r5, #4
 80109f4:	f7ff ffe5 	bl	80109c2 <_ZNK8touchgfx4Rect7isEmptyEv>
 80109f8:	b988      	cbnz	r0, 8010a1e <_ZNK8touchgfx9Container16getContainedAreaEv+0x42>
 80109fa:	4620      	mov	r0, r4
 80109fc:	f7ff ffe1 	bl	80109c2 <_ZNK8touchgfx4Rect7isEmptyEv>
 8010a00:	f9b5 2004 	ldrsh.w	r2, [r5, #4]
 8010a04:	f9b5 3006 	ldrsh.w	r3, [r5, #6]
 8010a08:	f9b5 e008 	ldrsh.w	lr, [r5, #8]
 8010a0c:	f9b5 c00a 	ldrsh.w	ip, [r5, #10]
 8010a10:	b138      	cbz	r0, 8010a22 <_ZNK8touchgfx9Container16getContainedAreaEv+0x46>
 8010a12:	8022      	strh	r2, [r4, #0]
 8010a14:	8063      	strh	r3, [r4, #2]
 8010a16:	f8a4 e004 	strh.w	lr, [r4, #4]
 8010a1a:	f8a4 c006 	strh.w	ip, [r4, #6]
 8010a1e:	69ad      	ldr	r5, [r5, #24]
 8010a20:	e7e5      	b.n	80109ee <_ZNK8touchgfx9Container16getContainedAreaEv+0x12>
 8010a22:	f9b4 0000 	ldrsh.w	r0, [r4]
 8010a26:	f9b4 1002 	ldrsh.w	r1, [r4, #2]
 8010a2a:	f8b4 8004 	ldrh.w	r8, [r4, #4]
 8010a2e:	4290      	cmp	r0, r2
 8010a30:	4607      	mov	r7, r0
 8010a32:	bfa8      	it	ge
 8010a34:	4617      	movge	r7, r2
 8010a36:	4472      	add	r2, lr
 8010a38:	f8b4 e006 	ldrh.w	lr, [r4, #6]
 8010a3c:	8027      	strh	r7, [r4, #0]
 8010a3e:	4299      	cmp	r1, r3
 8010a40:	460e      	mov	r6, r1
 8010a42:	4440      	add	r0, r8
 8010a44:	bfa8      	it	ge
 8010a46:	461e      	movge	r6, r3
 8010a48:	4471      	add	r1, lr
 8010a4a:	4463      	add	r3, ip
 8010a4c:	b200      	sxth	r0, r0
 8010a4e:	b212      	sxth	r2, r2
 8010a50:	b209      	sxth	r1, r1
 8010a52:	b21b      	sxth	r3, r3
 8010a54:	4290      	cmp	r0, r2
 8010a56:	bfac      	ite	ge
 8010a58:	ebc7 0200 	rsbge	r2, r7, r0
 8010a5c:	ebc7 0202 	rsblt	r2, r7, r2
 8010a60:	4299      	cmp	r1, r3
 8010a62:	bfac      	ite	ge
 8010a64:	ebc6 0301 	rsbge	r3, r6, r1
 8010a68:	ebc6 0303 	rsblt	r3, r6, r3
 8010a6c:	8066      	strh	r6, [r4, #2]
 8010a6e:	80a2      	strh	r2, [r4, #4]
 8010a70:	80e3      	strh	r3, [r4, #6]
 8010a72:	e7d4      	b.n	8010a1e <_ZNK8touchgfx9Container16getContainedAreaEv+0x42>
 8010a74:	4620      	mov	r0, r4
 8010a76:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}

08010a7a <_ZNK8touchgfx9Container4drawERKNS_4RectE>:
 8010a7a:	e92d 41f3 	stmdb	sp!, {r0, r1, r4, r5, r6, r7, r8, lr}
 8010a7e:	f890 3025 	ldrb.w	r3, [r0, #37]	@ 0x25
 8010a82:	b383      	cbz	r3, 8010ae6 <_ZNK8touchgfx9Container4drawERKNS_4RectE+0x6c>
 8010a84:	6a84      	ldr	r4, [r0, #40]	@ 0x28
 8010a86:	b374      	cbz	r4, 8010ae6 <_ZNK8touchgfx9Container4drawERKNS_4RectE+0x6c>
 8010a88:	f9b1 5000 	ldrsh.w	r5, [r1]
 8010a8c:	f9b1 6002 	ldrsh.w	r6, [r1, #2]
 8010a90:	f9b1 7004 	ldrsh.w	r7, [r1, #4]
 8010a94:	f9b1 8006 	ldrsh.w	r8, [r1, #6]
 8010a98:	f894 3025 	ldrb.w	r3, [r4, #37]	@ 0x25
 8010a9c:	b303      	cbz	r3, 8010ae0 <_ZNK8touchgfx9Container4drawERKNS_4RectE+0x66>
 8010a9e:	4668      	mov	r0, sp
 8010aa0:	1d21      	adds	r1, r4, #4
 8010aa2:	f8ad 5000 	strh.w	r5, [sp]
 8010aa6:	f8ad 6002 	strh.w	r6, [sp, #2]
 8010aaa:	f8ad 7004 	strh.w	r7, [sp, #4]
 8010aae:	f8ad 8006 	strh.w	r8, [sp, #6]
 8010ab2:	f7ff ff43 	bl	801093c <_ZN8touchgfx4RectaNERKS0_>
 8010ab6:	4668      	mov	r0, sp
 8010ab8:	f7ff ff83 	bl	80109c2 <_ZNK8touchgfx4Rect7isEmptyEv>
 8010abc:	b980      	cbnz	r0, 8010ae0 <_ZNK8touchgfx9Container4drawERKNS_4RectE+0x66>
 8010abe:	f8bd 3000 	ldrh.w	r3, [sp]
 8010ac2:	88a2      	ldrh	r2, [r4, #4]
 8010ac4:	1a9b      	subs	r3, r3, r2
 8010ac6:	f8ad 3000 	strh.w	r3, [sp]
 8010aca:	88e2      	ldrh	r2, [r4, #6]
 8010acc:	f8bd 3002 	ldrh.w	r3, [sp, #2]
 8010ad0:	1a9b      	subs	r3, r3, r2
 8010ad2:	f8ad 3002 	strh.w	r3, [sp, #2]
 8010ad6:	6823      	ldr	r3, [r4, #0]
 8010ad8:	4669      	mov	r1, sp
 8010ada:	689b      	ldr	r3, [r3, #8]
 8010adc:	4620      	mov	r0, r4
 8010ade:	4798      	blx	r3
 8010ae0:	69a4      	ldr	r4, [r4, #24]
 8010ae2:	2c00      	cmp	r4, #0
 8010ae4:	d1d8      	bne.n	8010a98 <_ZNK8touchgfx9Container4drawERKNS_4RectE+0x1e>
 8010ae6:	b002      	add	sp, #8
 8010ae8:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}

08010aec <_ZN8touchgfx9Container14setupDrawChainERKNS_4RectEPPNS_8DrawableE>:
 8010aec:	b573      	push	{r0, r1, r4, r5, r6, lr}
 8010aee:	f890 3025 	ldrb.w	r3, [r0, #37]	@ 0x25
 8010af2:	460d      	mov	r5, r1
 8010af4:	4616      	mov	r6, r2
 8010af6:	b323      	cbz	r3, 8010b42 <_ZN8touchgfx9Container14setupDrawChainERKNS_4RectEPPNS_8DrawableE+0x56>
 8010af8:	6a84      	ldr	r4, [r0, #40]	@ 0x28
 8010afa:	b314      	cbz	r4, 8010b42 <_ZN8touchgfx9Container14setupDrawChainERKNS_4RectEPPNS_8DrawableE+0x56>
 8010afc:	f894 3025 	ldrb.w	r3, [r4, #37]	@ 0x25
 8010b00:	b1eb      	cbz	r3, 8010b3e <_ZN8touchgfx9Container14setupDrawChainERKNS_4RectEPPNS_8DrawableE+0x52>
 8010b02:	6828      	ldr	r0, [r5, #0]
 8010b04:	6869      	ldr	r1, [r5, #4]
 8010b06:	466b      	mov	r3, sp
 8010b08:	c303      	stmia	r3!, {r0, r1}
 8010b0a:	4668      	mov	r0, sp
 8010b0c:	1d21      	adds	r1, r4, #4
 8010b0e:	f7ff ff15 	bl	801093c <_ZN8touchgfx4RectaNERKS0_>
 8010b12:	4668      	mov	r0, sp
 8010b14:	f7ff ff55 	bl	80109c2 <_ZNK8touchgfx4Rect7isEmptyEv>
 8010b18:	b988      	cbnz	r0, 8010b3e <_ZN8touchgfx9Container14setupDrawChainERKNS_4RectEPPNS_8DrawableE+0x52>
 8010b1a:	f8bd 3000 	ldrh.w	r3, [sp]
 8010b1e:	88a2      	ldrh	r2, [r4, #4]
 8010b20:	1a9b      	subs	r3, r3, r2
 8010b22:	f8ad 3000 	strh.w	r3, [sp]
 8010b26:	88e2      	ldrh	r2, [r4, #6]
 8010b28:	f8bd 3002 	ldrh.w	r3, [sp, #2]
 8010b2c:	1a9b      	subs	r3, r3, r2
 8010b2e:	f8ad 3002 	strh.w	r3, [sp, #2]
 8010b32:	6823      	ldr	r3, [r4, #0]
 8010b34:	4632      	mov	r2, r6
 8010b36:	6ddb      	ldr	r3, [r3, #92]	@ 0x5c
 8010b38:	4669      	mov	r1, sp
 8010b3a:	4620      	mov	r0, r4
 8010b3c:	4798      	blx	r3
 8010b3e:	69a4      	ldr	r4, [r4, #24]
 8010b40:	e7db      	b.n	8010afa <_ZN8touchgfx9Container14setupDrawChainERKNS_4RectEPPNS_8DrawableE+0xe>
 8010b42:	b002      	add	sp, #8
 8010b44:	bd70      	pop	{r4, r5, r6, pc}

08010b46 <_ZN8touchgfx3HAL27drawDrawableInDynamicBitmapERNS_8DrawableEt>:
 8010b46:	b513      	push	{r0, r1, r4, lr}
 8010b48:	6803      	ldr	r3, [r0, #0]
 8010b4a:	f8d3 40a8 	ldr.w	r4, [r3, #168]	@ 0xa8
 8010b4e:	2300      	movs	r3, #0
 8010b50:	e9cd 3300 	strd	r3, r3, [sp]
 8010b54:	466b      	mov	r3, sp
 8010b56:	47a0      	blx	r4
 8010b58:	b002      	add	sp, #8
 8010b5a:	bd10      	pop	{r4, pc}

08010b5c <_ZN8touchgfx3HAL16flushFrameBufferEv>:
 8010b5c:	2301      	movs	r3, #1
 8010b5e:	f880 304b 	strb.w	r3, [r0, #75]	@ 0x4b
 8010b62:	f880 306d 	strb.w	r3, [r0, #109]	@ 0x6d
 8010b66:	4770      	bx	lr

08010b68 <_ZN8touchgfx3HAL16flushFrameBufferERKNS_4RectE>:
 8010b68:	2301      	movs	r3, #1
 8010b6a:	f880 304b 	strb.w	r3, [r0, #75]	@ 0x4b
 8010b6e:	f880 306d 	strb.w	r3, [r0, #109]	@ 0x6d
 8010b72:	4770      	bx	lr

08010b74 <_ZN8touchgfx3HAL17allowDMATransfersEv>:
 8010b74:	6843      	ldr	r3, [r0, #4]
 8010b76:	2201      	movs	r2, #1
 8010b78:	725a      	strb	r2, [r3, #9]
 8010b7a:	6840      	ldr	r0, [r0, #4]
 8010b7c:	6803      	ldr	r3, [r0, #0]
 8010b7e:	691b      	ldr	r3, [r3, #16]
 8010b80:	4718      	bx	r3

08010b82 <_ZN8touchgfx3HAL8flushDMAEv>:
 8010b82:	6840      	ldr	r0, [r0, #4]
 8010b84:	6803      	ldr	r3, [r0, #0]
 8010b86:	689b      	ldr	r3, [r3, #8]
 8010b88:	4718      	bx	r3

08010b8a <_ZN8touchgfx3HAL8blitCopyEPKtttttthbtNS_6Bitmap12BitmapFormatES4_b>:
 8010b8a:	b530      	push	{r4, r5, lr}
 8010b8c:	b08b      	sub	sp, #44	@ 0x2c
 8010b8e:	6804      	ldr	r4, [r0, #0]
 8010b90:	f89d 5058 	ldrb.w	r5, [sp, #88]	@ 0x58
 8010b94:	9509      	str	r5, [sp, #36]	@ 0x24
 8010b96:	f89d 5054 	ldrb.w	r5, [sp, #84]	@ 0x54
 8010b9a:	9508      	str	r5, [sp, #32]
 8010b9c:	f89d 5050 	ldrb.w	r5, [sp, #80]	@ 0x50
 8010ba0:	9507      	str	r5, [sp, #28]
 8010ba2:	f8bd 504c 	ldrh.w	r5, [sp, #76]	@ 0x4c
 8010ba6:	9506      	str	r5, [sp, #24]
 8010ba8:	f89d 5048 	ldrb.w	r5, [sp, #72]	@ 0x48
 8010bac:	9505      	str	r5, [sp, #20]
 8010bae:	f89d 5044 	ldrb.w	r5, [sp, #68]	@ 0x44
 8010bb2:	9504      	str	r5, [sp, #16]
 8010bb4:	f8bd 5040 	ldrh.w	r5, [sp, #64]	@ 0x40
 8010bb8:	9503      	str	r5, [sp, #12]
 8010bba:	f8bd 503c 	ldrh.w	r5, [sp, #60]	@ 0x3c
 8010bbe:	9502      	str	r5, [sp, #8]
 8010bc0:	f8bd 5038 	ldrh.w	r5, [sp, #56]	@ 0x38
 8010bc4:	e9cd 3500 	strd	r3, r5, [sp]
 8010bc8:	4613      	mov	r3, r2
 8010bca:	6be4      	ldr	r4, [r4, #60]	@ 0x3c
 8010bcc:	2200      	movs	r2, #0
 8010bce:	47a0      	blx	r4
 8010bd0:	b00b      	add	sp, #44	@ 0x2c
 8010bd2:	bd30      	pop	{r4, r5, pc}

08010bd4 <_ZN8touchgfx3HAL10beginFrameEv>:
 8010bd4:	4b04      	ldr	r3, [pc, #16]	@ (8010be8 <_ZN8touchgfx3HAL10beginFrameEv+0x14>)
 8010bd6:	781b      	ldrb	r3, [r3, #0]
 8010bd8:	b123      	cbz	r3, 8010be4 <_ZN8touchgfx3HAL10beginFrameEv+0x10>
 8010bda:	f890 006e 	ldrb.w	r0, [r0, #110]	@ 0x6e
 8010bde:	f080 0001 	eor.w	r0, r0, #1
 8010be2:	4770      	bx	lr
 8010be4:	2001      	movs	r0, #1
 8010be6:	4770      	bx	lr
 8010be8:	20002fa6 	.word	0x20002fa6

08010bec <_ZN8touchgfx3HAL8endFrameEv>:
 8010bec:	b510      	push	{r4, lr}
 8010bee:	4604      	mov	r4, r0
 8010bf0:	6840      	ldr	r0, [r0, #4]
 8010bf2:	6803      	ldr	r3, [r0, #0]
 8010bf4:	689b      	ldr	r3, [r3, #8]
 8010bf6:	4798      	blx	r3
 8010bf8:	f894 306d 	ldrb.w	r3, [r4, #109]	@ 0x6d
 8010bfc:	b113      	cbz	r3, 8010c04 <_ZN8touchgfx3HAL8endFrameEv+0x18>
 8010bfe:	2301      	movs	r3, #1
 8010c00:	f884 306e 	strb.w	r3, [r4, #110]	@ 0x6e
 8010c04:	bd10      	pop	{r4, pc}

08010c06 <_ZN8touchgfx3HAL10initializeEv>:
 8010c06:	b510      	push	{r4, lr}
 8010c08:	4604      	mov	r4, r0
 8010c0a:	f7fe f81b 	bl	800ec44 <_ZN8touchgfx10OSWrappers10initializeEv>
 8010c0e:	f7fd fd61 	bl	800e6d4 <_ZN8touchgfx4GPIO4initEv>
 8010c12:	6860      	ldr	r0, [r4, #4]
 8010c14:	6803      	ldr	r3, [r0, #0]
 8010c16:	68db      	ldr	r3, [r3, #12]
 8010c18:	4798      	blx	r3
 8010c1a:	68e0      	ldr	r0, [r4, #12]
 8010c1c:	6803      	ldr	r3, [r0, #0]
 8010c1e:	689b      	ldr	r3, [r3, #8]
 8010c20:	4798      	blx	r3
 8010c22:	6823      	ldr	r3, [r4, #0]
 8010c24:	4620      	mov	r0, r4
 8010c26:	6f5b      	ldr	r3, [r3, #116]	@ 0x74
 8010c28:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
 8010c2c:	4718      	bx	r3

08010c2e <_ZN8touchgfx3HAL9taskEntryEv>:
 8010c2e:	b508      	push	{r3, lr}
 8010c30:	6803      	ldr	r3, [r0, #0]
 8010c32:	4604      	mov	r4, r0
 8010c34:	f8d3 3080 	ldr.w	r3, [r3, #128]	@ 0x80
 8010c38:	4798      	blx	r3
 8010c3a:	6823      	ldr	r3, [r4, #0]
 8010c3c:	6f9b      	ldr	r3, [r3, #120]	@ 0x78
 8010c3e:	4620      	mov	r0, r4
 8010c40:	4798      	blx	r3
 8010c42:	f7fe f873 	bl	800ed2c <_ZN8touchgfx10OSWrappers12waitForVSyncEv>
 8010c46:	6823      	ldr	r3, [r4, #0]
 8010c48:	6f1b      	ldr	r3, [r3, #112]	@ 0x70
 8010c4a:	e7f8      	b.n	8010c3e <_ZN8touchgfx3HAL9taskEntryEv+0x10>

08010c4c <_ZN8touchgfx3HAL4tickEv>:
 8010c4c:	b57f      	push	{r0, r1, r2, r3, r4, r5, r6, lr}
 8010c4e:	6803      	ldr	r3, [r0, #0]
 8010c50:	4d5b      	ldr	r5, [pc, #364]	@ (8010dc0 <_ZN8touchgfx3HAL4tickEv+0x174>)
 8010c52:	f8d3 30b0 	ldr.w	r3, [r3, #176]	@ 0xb0
 8010c56:	4604      	mov	r4, r0
 8010c58:	4798      	blx	r3
 8010c5a:	2800      	cmp	r0, #0
 8010c5c:	f000 8095 	beq.w	8010d8a <_ZN8touchgfx3HAL4tickEv+0x13e>
 8010c60:	2001      	movs	r0, #1
 8010c62:	f7fd fd3f 	bl	800e6e4 <_ZN8touchgfx4GPIO3setENS0_7GPIO_IDE>
 8010c66:	f894 306a 	ldrb.w	r3, [r4, #106]	@ 0x6a
 8010c6a:	f884 306b 	strb.w	r3, [r4, #107]	@ 0x6b
 8010c6e:	f894 3079 	ldrb.w	r3, [r4, #121]	@ 0x79
 8010c72:	2600      	movs	r6, #0
 8010c74:	f884 606a 	strb.w	r6, [r4, #106]	@ 0x6a
 8010c78:	f884 604b 	strb.w	r6, [r4, #75]	@ 0x4b
 8010c7c:	b133      	cbz	r3, 8010c8c <_ZN8touchgfx3HAL4tickEv+0x40>
 8010c7e:	6823      	ldr	r3, [r4, #0]
 8010c80:	4620      	mov	r0, r4
 8010c82:	f8d3 30c4 	ldr.w	r3, [r3, #196]	@ 0xc4
 8010c86:	4798      	blx	r3
 8010c88:	f884 6079 	strb.w	r6, [r4, #121]	@ 0x79
 8010c8c:	f894 304a 	ldrb.w	r3, [r4, #74]	@ 0x4a
 8010c90:	6862      	ldr	r2, [r4, #4]
 8010c92:	f083 0301 	eor.w	r3, r3, #1
 8010c96:	7253      	strb	r3, [r2, #9]
 8010c98:	2601      	movs	r6, #1
 8010c9a:	702e      	strb	r6, [r5, #0]
 8010c9c:	f003 f9a0 	bl	8013fe0 <_ZN8touchgfx11Application11getInstanceEv>
 8010ca0:	6803      	ldr	r3, [r0, #0]
 8010ca2:	6b5b      	ldr	r3, [r3, #52]	@ 0x34
 8010ca4:	4798      	blx	r3
 8010ca6:	f894 306b 	ldrb.w	r3, [r4, #107]	@ 0x6b
 8010caa:	b90b      	cbnz	r3, 8010cb0 <_ZN8touchgfx3HAL4tickEv+0x64>
 8010cac:	f884 606b 	strb.w	r6, [r4, #107]	@ 0x6b
 8010cb0:	f003 f996 	bl	8013fe0 <_ZN8touchgfx11Application11getInstanceEv>
 8010cb4:	6803      	ldr	r3, [r0, #0]
 8010cb6:	695b      	ldr	r3, [r3, #20]
 8010cb8:	4798      	blx	r3
 8010cba:	6de0      	ldr	r0, [r4, #92]	@ 0x5c
 8010cbc:	6803      	ldr	r3, [r0, #0]
 8010cbe:	691b      	ldr	r3, [r3, #16]
 8010cc0:	4798      	blx	r3
 8010cc2:	f894 306b 	ldrb.w	r3, [r4, #107]	@ 0x6b
 8010cc6:	f894 206c 	ldrb.w	r2, [r4, #108]	@ 0x6c
 8010cca:	3b01      	subs	r3, #1
 8010ccc:	b2db      	uxtb	r3, r3
 8010cce:	f884 306b 	strb.w	r3, [r4, #107]	@ 0x6b
 8010cd2:	b10a      	cbz	r2, 8010cd8 <_ZN8touchgfx3HAL4tickEv+0x8c>
 8010cd4:	2b00      	cmp	r3, #0
 8010cd6:	d1eb      	bne.n	8010cb0 <_ZN8touchgfx3HAL4tickEv+0x64>
 8010cd8:	4a3a      	ldr	r2, [pc, #232]	@ (8010dc4 <_ZN8touchgfx3HAL4tickEv+0x178>)
 8010cda:	f994 1068 	ldrsb.w	r1, [r4, #104]	@ 0x68
 8010cde:	7813      	ldrb	r3, [r2, #0]
 8010ce0:	3301      	adds	r3, #1
 8010ce2:	b25b      	sxtb	r3, r3
 8010ce4:	4299      	cmp	r1, r3
 8010ce6:	7013      	strb	r3, [r2, #0]
 8010ce8:	dc10      	bgt.n	8010d0c <_ZN8touchgfx3HAL4tickEv+0xc0>
 8010cea:	68e0      	ldr	r0, [r4, #12]
 8010cec:	2300      	movs	r3, #0
 8010cee:	7013      	strb	r3, [r2, #0]
 8010cf0:	6803      	ldr	r3, [r0, #0]
 8010cf2:	aa03      	add	r2, sp, #12
 8010cf4:	68db      	ldr	r3, [r3, #12]
 8010cf6:	a902      	add	r1, sp, #8
 8010cf8:	4798      	blx	r3
 8010cfa:	6823      	ldr	r3, [r4, #0]
 8010cfc:	2800      	cmp	r0, #0
 8010cfe:	d050      	beq.n	8010da2 <_ZN8touchgfx3HAL4tickEv+0x156>
 8010d00:	f8d3 30bc 	ldr.w	r3, [r3, #188]	@ 0xbc
 8010d04:	e9dd 1202 	ldrd	r1, r2, [sp, #8]
 8010d08:	4620      	mov	r0, r4
 8010d0a:	4798      	blx	r3
 8010d0c:	6960      	ldr	r0, [r4, #20]
 8010d0e:	2300      	movs	r3, #0
 8010d10:	f88d 3007 	strb.w	r3, [sp, #7]
 8010d14:	b158      	cbz	r0, 8010d2e <_ZN8touchgfx3HAL4tickEv+0xe2>
 8010d16:	6803      	ldr	r3, [r0, #0]
 8010d18:	f10d 0107 	add.w	r1, sp, #7
 8010d1c:	68db      	ldr	r3, [r3, #12]
 8010d1e:	4798      	blx	r3
 8010d20:	b128      	cbz	r0, 8010d2e <_ZN8touchgfx3HAL4tickEv+0xe2>
 8010d22:	6de0      	ldr	r0, [r4, #92]	@ 0x5c
 8010d24:	f89d 1007 	ldrb.w	r1, [sp, #7]
 8010d28:	6803      	ldr	r3, [r0, #0]
 8010d2a:	68db      	ldr	r3, [r3, #12]
 8010d2c:	4798      	blx	r3
 8010d2e:	f104 001c 	add.w	r0, r4, #28
 8010d32:	f014 fdf9 	bl	8025928 <_ZN8touchgfx8Gestures4tickEv>
 8010d36:	f894 3070 	ldrb.w	r3, [r4, #112]	@ 0x70
 8010d3a:	b30b      	cbz	r3, 8010d80 <_ZN8touchgfx3HAL4tickEv+0x134>
 8010d3c:	6920      	ldr	r0, [r4, #16]
 8010d3e:	6803      	ldr	r3, [r0, #0]
 8010d40:	691b      	ldr	r3, [r3, #16]
 8010d42:	4798      	blx	r3
 8010d44:	6f63      	ldr	r3, [r4, #116]	@ 0x74
 8010d46:	4606      	mov	r6, r0
 8010d48:	b903      	cbnz	r3, 8010d4c <_ZN8touchgfx3HAL4tickEv+0x100>
 8010d4a:	6760      	str	r0, [r4, #116]	@ 0x74
 8010d4c:	6f63      	ldr	r3, [r4, #116]	@ 0x74
 8010d4e:	4a1e      	ldr	r2, [pc, #120]	@ (8010dc8 <_ZN8touchgfx3HAL4tickEv+0x17c>)
 8010d50:	1af3      	subs	r3, r6, r3
 8010d52:	4293      	cmp	r3, r2
 8010d54:	d914      	bls.n	8010d80 <_ZN8touchgfx3HAL4tickEv+0x134>
 8010d56:	6920      	ldr	r0, [r4, #16]
 8010d58:	6803      	ldr	r3, [r0, #0]
 8010d5a:	699b      	ldr	r3, [r3, #24]
 8010d5c:	4798      	blx	r3
 8010d5e:	6f63      	ldr	r3, [r4, #116]	@ 0x74
 8010d60:	2264      	movs	r2, #100	@ 0x64
 8010d62:	1af3      	subs	r3, r6, r3
 8010d64:	fbb3 f3f2 	udiv	r3, r3, r2
 8010d68:	fbb0 f0f3 	udiv	r0, r0, r3
 8010d6c:	2800      	cmp	r0, #0
 8010d6e:	dc1d      	bgt.n	8010dac <_ZN8touchgfx3HAL4tickEv+0x160>
 8010d70:	f884 2069 	strb.w	r2, [r4, #105]	@ 0x69
 8010d74:	6920      	ldr	r0, [r4, #16]
 8010d76:	6803      	ldr	r3, [r0, #0]
 8010d78:	2100      	movs	r1, #0
 8010d7a:	69db      	ldr	r3, [r3, #28]
 8010d7c:	4798      	blx	r3
 8010d7e:	6766      	str	r6, [r4, #116]	@ 0x74
 8010d80:	f003 f92e 	bl	8013fe0 <_ZN8touchgfx11Application11getInstanceEv>
 8010d84:	6803      	ldr	r3, [r0, #0]
 8010d86:	6b9b      	ldr	r3, [r3, #56]	@ 0x38
 8010d88:	4798      	blx	r3
 8010d8a:	6823      	ldr	r3, [r4, #0]
 8010d8c:	4620      	mov	r0, r4
 8010d8e:	f8d3 30b4 	ldr.w	r3, [r3, #180]	@ 0xb4
 8010d92:	4798      	blx	r3
 8010d94:	2001      	movs	r0, #1
 8010d96:	f7fd fcc1 	bl	800e71c <_ZN8touchgfx4GPIO5clearENS0_7GPIO_IDE>
 8010d9a:	2300      	movs	r3, #0
 8010d9c:	702b      	strb	r3, [r5, #0]
 8010d9e:	b004      	add	sp, #16
 8010da0:	bd70      	pop	{r4, r5, r6, pc}
 8010da2:	f8d3 30c0 	ldr.w	r3, [r3, #192]	@ 0xc0
 8010da6:	4620      	mov	r0, r4
 8010da8:	4798      	blx	r3
 8010daa:	e7af      	b.n	8010d0c <_ZN8touchgfx3HAL4tickEv+0xc0>
 8010dac:	2863      	cmp	r0, #99	@ 0x63
 8010dae:	bfcb      	itete	gt
 8010db0:	2300      	movgt	r3, #0
 8010db2:	f1c0 0064 	rsble	r0, r0, #100	@ 0x64
 8010db6:	f884 3069 	strbgt.w	r3, [r4, #105]	@ 0x69
 8010dba:	f884 0069 	strble.w	r0, [r4, #105]	@ 0x69
 8010dbe:	e7d9      	b.n	8010d74 <_ZN8touchgfx3HAL4tickEv+0x128>
 8010dc0:	20002fac 	.word	0x20002fac
 8010dc4:	20002fad 	.word	0x20002fad
 8010dc8:	05f5e100 	.word	0x05f5e100

08010dcc <_ZN8touchgfx3HAL17unlockFrameBufferEv>:
 8010dcc:	b510      	push	{r4, lr}
 8010dce:	4604      	mov	r4, r0
 8010dd0:	f7fd ff60 	bl	800ec94 <_ZN8touchgfx10OSWrappers24giveFrameBufferSemaphoreEv>
 8010dd4:	6863      	ldr	r3, [r4, #4]
 8010dd6:	2200      	movs	r2, #0
 8010dd8:	729a      	strb	r2, [r3, #10]
 8010dda:	bd10      	pop	{r4, pc}

08010ddc <_ZN8touchgfx3HAL21registerEventListenerERNS_15UIEventListenerE>:
 8010ddc:	65c1      	str	r1, [r0, #92]	@ 0x5c
 8010dde:	301c      	adds	r0, #28
 8010de0:	f014 bda0 	b.w	8025924 <_ZN8touchgfx8Gestures21registerEventListenerERNS_15UIEventListenerE>

08010de4 <_ZN8touchgfx3HAL5touchEll>:
 8010de4:	b530      	push	{r4, r5, lr}
 8010de6:	b087      	sub	sp, #28
 8010de8:	4604      	mov	r4, r0
 8010dea:	a804      	add	r0, sp, #16
 8010dec:	e9cd 1204 	strd	r1, r2, [sp, #16]
 8010df0:	f002 fee8 	bl	8013bc4 <_ZN8touchgfx16TouchCalibration14translatePointERNS_5PointE>
 8010df4:	9b04      	ldr	r3, [sp, #16]
 8010df6:	f8ad 300c 	strh.w	r3, [sp, #12]
 8010dfa:	a906      	add	r1, sp, #24
 8010dfc:	9b05      	ldr	r3, [sp, #20]
 8010dfe:	f821 3d0a 	strh.w	r3, [r1, #-10]!
 8010e02:	a803      	add	r0, sp, #12
 8010e04:	f002 ff30 	bl	8013c68 <_ZN8touchgfx21DisplayTransformation29transformFrameBufferToDisplayERsS1_>
 8010e08:	f894 106f 	ldrb.w	r1, [r4, #111]	@ 0x6f
 8010e0c:	f8bd 200c 	ldrh.w	r2, [sp, #12]
 8010e10:	f8bd 300e 	ldrh.w	r3, [sp, #14]
 8010e14:	f104 001c 	add.w	r0, r4, #28
 8010e18:	b189      	cbz	r1, 8010e3e <_ZN8touchgfx3HAL5touchEll+0x5a>
 8010e1a:	f8b4 5064 	ldrh.w	r5, [r4, #100]	@ 0x64
 8010e1e:	9300      	str	r3, [sp, #0]
 8010e20:	f8b4 1060 	ldrh.w	r1, [r4, #96]	@ 0x60
 8010e24:	4613      	mov	r3, r2
 8010e26:	462a      	mov	r2, r5
 8010e28:	f014 fd8c 	bl	8025944 <_ZN8touchgfx8Gestures17registerDragEventEtttt>
 8010e2c:	b128      	cbz	r0, 8010e3a <_ZN8touchgfx3HAL5touchEll+0x56>
 8010e2e:	f9bd 300c 	ldrsh.w	r3, [sp, #12]
 8010e32:	6623      	str	r3, [r4, #96]	@ 0x60
 8010e34:	f9bd 300e 	ldrsh.w	r3, [sp, #14]
 8010e38:	6663      	str	r3, [r4, #100]	@ 0x64
 8010e3a:	b007      	add	sp, #28
 8010e3c:	bd30      	pop	{r4, r5, pc}
 8010e3e:	f014 fdc1 	bl	80259c4 <_ZN8touchgfx8Gestures18registerClickEventENS_10ClickEvent14ClickEventTypeEtt>
 8010e42:	2301      	movs	r3, #1
 8010e44:	f884 306f 	strb.w	r3, [r4, #111]	@ 0x6f
 8010e48:	e7f1      	b.n	8010e2e <_ZN8touchgfx3HAL5touchEll+0x4a>

08010e4a <_ZN8touchgfx3HAL9blockCopyEPvPKvm>:
 8010e4a:	b510      	push	{r4, lr}
 8010e4c:	2b00      	cmp	r3, #0
 8010e4e:	d046      	beq.n	8010ede <_ZN8touchgfx3HAL9blockCopyEPvPKvm+0x94>
 8010e50:	ea81 0002 	eor.w	r0, r1, r2
 8010e54:	07c4      	lsls	r4, r0, #31
 8010e56:	d508      	bpl.n	8010e6a <_ZN8touchgfx3HAL9blockCopyEPvPKvm+0x20>
 8010e58:	440b      	add	r3, r1
 8010e5a:	3a01      	subs	r2, #1
 8010e5c:	428b      	cmp	r3, r1
 8010e5e:	d93e      	bls.n	8010ede <_ZN8touchgfx3HAL9blockCopyEPvPKvm+0x94>
 8010e60:	f812 0f01 	ldrb.w	r0, [r2, #1]!
 8010e64:	f801 0b01 	strb.w	r0, [r1], #1
 8010e68:	e7f8      	b.n	8010e5c <_ZN8touchgfx3HAL9blockCopyEPvPKvm+0x12>
 8010e6a:	07d0      	lsls	r0, r2, #31
 8010e6c:	bf42      	ittt	mi
 8010e6e:	f812 0b01 	ldrbmi.w	r0, [r2], #1
 8010e72:	f801 0b01 	strbmi.w	r0, [r1], #1
 8010e76:	f103 33ff 	addmi.w	r3, r3, #4294967295
 8010e7a:	2b01      	cmp	r3, #1
 8010e7c:	d911      	bls.n	8010ea2 <_ZN8touchgfx3HAL9blockCopyEPvPKvm+0x58>
 8010e7e:	ea81 0402 	eor.w	r4, r1, r2
 8010e82:	07a4      	lsls	r4, r4, #30
 8010e84:	4610      	mov	r0, r2
 8010e86:	d022      	beq.n	8010ece <_ZN8touchgfx3HAL9blockCopyEPvPKvm+0x84>
 8010e88:	f023 0401 	bic.w	r4, r3, #1
 8010e8c:	440c      	add	r4, r1
 8010e8e:	428c      	cmp	r4, r1
 8010e90:	4602      	mov	r2, r0
 8010e92:	d904      	bls.n	8010e9e <_ZN8touchgfx3HAL9blockCopyEPvPKvm+0x54>
 8010e94:	8812      	ldrh	r2, [r2, #0]
 8010e96:	f821 2b02 	strh.w	r2, [r1], #2
 8010e9a:	3002      	adds	r0, #2
 8010e9c:	e7f7      	b.n	8010e8e <_ZN8touchgfx3HAL9blockCopyEPvPKvm+0x44>
 8010e9e:	f003 0301 	and.w	r3, r3, #1
 8010ea2:	f023 0003 	bic.w	r0, r3, #3
 8010ea6:	4408      	add	r0, r1
 8010ea8:	4288      	cmp	r0, r1
 8010eaa:	4614      	mov	r4, r2
 8010eac:	d904      	bls.n	8010eb8 <_ZN8touchgfx3HAL9blockCopyEPvPKvm+0x6e>
 8010eae:	6824      	ldr	r4, [r4, #0]
 8010eb0:	f841 4b04 	str.w	r4, [r1], #4
 8010eb4:	3204      	adds	r2, #4
 8010eb6:	e7f7      	b.n	8010ea8 <_ZN8touchgfx3HAL9blockCopyEPvPKvm+0x5e>
 8010eb8:	f003 0303 	and.w	r3, r3, #3
 8010ebc:	440b      	add	r3, r1
 8010ebe:	3a01      	subs	r2, #1
 8010ec0:	428b      	cmp	r3, r1
 8010ec2:	d90c      	bls.n	8010ede <_ZN8touchgfx3HAL9blockCopyEPvPKvm+0x94>
 8010ec4:	f812 0f01 	ldrb.w	r0, [r2, #1]!
 8010ec8:	f801 0b01 	strb.w	r0, [r1], #1
 8010ecc:	e7f8      	b.n	8010ec0 <_ZN8touchgfx3HAL9blockCopyEPvPKvm+0x76>
 8010ece:	0790      	lsls	r0, r2, #30
 8010ed0:	d0e7      	beq.n	8010ea2 <_ZN8touchgfx3HAL9blockCopyEPvPKvm+0x58>
 8010ed2:	f832 0b02 	ldrh.w	r0, [r2], #2
 8010ed6:	f821 0b02 	strh.w	r0, [r1], #2
 8010eda:	3b02      	subs	r3, #2
 8010edc:	e7e1      	b.n	8010ea2 <_ZN8touchgfx3HAL9blockCopyEPvPKvm+0x58>
 8010ede:	2001      	movs	r0, #1
 8010ee0:	bd10      	pop	{r4, pc}

08010ee2 <_ZN8touchgfx3HAL7noTouchEv>:
 8010ee2:	b510      	push	{r4, lr}
 8010ee4:	f890 306f 	ldrb.w	r3, [r0, #111]	@ 0x6f
 8010ee8:	4604      	mov	r4, r0
 8010eea:	b153      	cbz	r3, 8010f02 <_ZN8touchgfx3HAL7noTouchEv+0x20>
 8010eec:	f8b0 3064 	ldrh.w	r3, [r0, #100]	@ 0x64
 8010ef0:	f8b0 2060 	ldrh.w	r2, [r0, #96]	@ 0x60
 8010ef4:	2101      	movs	r1, #1
 8010ef6:	301c      	adds	r0, #28
 8010ef8:	f014 fd64 	bl	80259c4 <_ZN8touchgfx8Gestures18registerClickEventENS_10ClickEvent14ClickEventTypeEtt>
 8010efc:	2300      	movs	r3, #0
 8010efe:	f884 306f 	strb.w	r3, [r4, #111]	@ 0x6f
 8010f02:	bd10      	pop	{r4, pc}

08010f04 <_ZN8touchgfx3HAL27configurePartialFrameBufferEtttt>:
 8010f04:	e92d 43f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, lr}
 8010f08:	b085      	sub	sp, #20
 8010f0a:	ad04      	add	r5, sp, #16
 8010f0c:	4604      	mov	r4, r0
 8010f0e:	2000      	movs	r0, #0
 8010f10:	f845 0d04 	str.w	r0, [r5, #-4]!
 8010f14:	69a0      	ldr	r0, [r4, #24]
 8010f16:	6806      	ldr	r6, [r0, #0]
 8010f18:	9501      	str	r5, [sp, #4]
 8010f1a:	f8bd 5030 	ldrh.w	r5, [sp, #48]	@ 0x30
 8010f1e:	9500      	str	r5, [sp, #0]
 8010f20:	6835      	ldr	r5, [r6, #0]
 8010f22:	4699      	mov	r9, r3
 8010f24:	460f      	mov	r7, r1
 8010f26:	4690      	mov	r8, r2
 8010f28:	47a8      	blx	r5
 8010f2a:	4d10      	ldr	r5, [pc, #64]	@ (8010f6c <_ZN8touchgfx3HAL27configurePartialFrameBufferEtttt+0x68>)
 8010f2c:	4606      	mov	r6, r0
 8010f2e:	f8a5 9000 	strh.w	r9, [r5]
 8010f32:	f7f7 fb07 	bl	8008544 <_ZN8touchgfx3HAL3lcdEv>
 8010f36:	6803      	ldr	r3, [r0, #0]
 8010f38:	6adb      	ldr	r3, [r3, #44]	@ 0x2c
 8010f3a:	4798      	blx	r3
 8010f3c:	b128      	cbz	r0, 8010f4a <_ZN8touchgfx3HAL27configurePartialFrameBufferEtttt+0x46>
 8010f3e:	2801      	cmp	r0, #1
 8010f40:	d00b      	beq.n	8010f5a <_ZN8touchgfx3HAL27configurePartialFrameBufferEtttt+0x56>
 8010f42:	4630      	mov	r0, r6
 8010f44:	b005      	add	sp, #20
 8010f46:	e8bd 83f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, pc}
 8010f4a:	882b      	ldrh	r3, [r5, #0]
 8010f4c:	fb08 7203 	mla	r2, r8, r3, r7
 8010f50:	9b03      	ldr	r3, [sp, #12]
 8010f52:	eba3 0342 	sub.w	r3, r3, r2, lsl #1
 8010f56:	63e3      	str	r3, [r4, #60]	@ 0x3c
 8010f58:	e7f3      	b.n	8010f42 <_ZN8touchgfx3HAL27configurePartialFrameBufferEtttt+0x3e>
 8010f5a:	882a      	ldrh	r2, [r5, #0]
 8010f5c:	9b03      	ldr	r3, [sp, #12]
 8010f5e:	fb08 7202 	mla	r2, r8, r2, r7
 8010f62:	eb02 0242 	add.w	r2, r2, r2, lsl #1
 8010f66:	1a9a      	subs	r2, r3, r2
 8010f68:	63e2      	str	r2, [r4, #60]	@ 0x3c
 8010f6a:	e7ea      	b.n	8010f42 <_ZN8touchgfx3HAL27configurePartialFrameBufferEtttt+0x3e>
 8010f6c:	20002fa2 	.word	0x20002fa2

08010f70 <_ZN8touchgfx3HAL8blitCopyEPKtttttthbb>:
 8010f70:	b5f0      	push	{r4, r5, r6, r7, lr}
 8010f72:	b08b      	sub	sp, #44	@ 0x2c
 8010f74:	4617      	mov	r7, r2
 8010f76:	4604      	mov	r4, r0
 8010f78:	460e      	mov	r6, r1
 8010f7a:	461d      	mov	r5, r3
 8010f7c:	f7f7 fae2 	bl	8008544 <_ZN8touchgfx3HAL3lcdEv>
 8010f80:	6803      	ldr	r3, [r0, #0]
 8010f82:	6adb      	ldr	r3, [r3, #44]	@ 0x2c
 8010f84:	4798      	blx	r3
 8010f86:	f89d 3054 	ldrb.w	r3, [sp, #84]	@ 0x54
 8010f8a:	9007      	str	r0, [sp, #28]
 8010f8c:	e9cd 0308 	strd	r0, r3, [sp, #32]
 8010f90:	4b0d      	ldr	r3, [pc, #52]	@ (8010fc8 <_ZN8touchgfx3HAL8blitCopyEPKtttttthbb+0x58>)
 8010f92:	6822      	ldr	r2, [r4, #0]
 8010f94:	881b      	ldrh	r3, [r3, #0]
 8010f96:	9306      	str	r3, [sp, #24]
 8010f98:	f89d 3050 	ldrb.w	r3, [sp, #80]	@ 0x50
 8010f9c:	9305      	str	r3, [sp, #20]
 8010f9e:	f89d 304c 	ldrb.w	r3, [sp, #76]	@ 0x4c
 8010fa2:	9304      	str	r3, [sp, #16]
 8010fa4:	f8bd 3048 	ldrh.w	r3, [sp, #72]	@ 0x48
 8010fa8:	9303      	str	r3, [sp, #12]
 8010faa:	f8bd 3044 	ldrh.w	r3, [sp, #68]	@ 0x44
 8010fae:	9302      	str	r3, [sp, #8]
 8010fb0:	f8bd 3040 	ldrh.w	r3, [sp, #64]	@ 0x40
 8010fb4:	e9cd 5300 	strd	r5, r3, [sp]
 8010fb8:	4631      	mov	r1, r6
 8010fba:	6bd5      	ldr	r5, [r2, #60]	@ 0x3c
 8010fbc:	463b      	mov	r3, r7
 8010fbe:	2200      	movs	r2, #0
 8010fc0:	4620      	mov	r0, r4
 8010fc2:	47a8      	blx	r5
 8010fc4:	b00b      	add	sp, #44	@ 0x2c
 8010fc6:	bdf0      	pop	{r4, r5, r6, r7, pc}
 8010fc8:	20002fa2 	.word	0x20002fa2

08010fcc <_ZN8touchgfx3HAL16blitCopyARGB8888EPKtttttthb>:
 8010fcc:	e92d 43f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, lr}
 8010fd0:	4698      	mov	r8, r3
 8010fd2:	6803      	ldr	r3, [r0, #0]
 8010fd4:	6bdd      	ldr	r5, [r3, #60]	@ 0x3c
 8010fd6:	4b15      	ldr	r3, [pc, #84]	@ (801102c <_ZN8touchgfx3HAL16blitCopyARGB8888EPKtttttthb+0x60>)
 8010fd8:	b08b      	sub	sp, #44	@ 0x2c
 8010fda:	4617      	mov	r7, r2
 8010fdc:	f8b3 9000 	ldrh.w	r9, [r3]
 8010fe0:	460e      	mov	r6, r1
 8010fe2:	4604      	mov	r4, r0
 8010fe4:	f7f7 faae 	bl	8008544 <_ZN8touchgfx3HAL3lcdEv>
 8010fe8:	6803      	ldr	r3, [r0, #0]
 8010fea:	6adb      	ldr	r3, [r3, #44]	@ 0x2c
 8010fec:	4798      	blx	r3
 8010fee:	f89d 3058 	ldrb.w	r3, [sp, #88]	@ 0x58
 8010ff2:	e9cd 0308 	strd	r0, r3, [sp, #32]
 8010ff6:	2302      	movs	r3, #2
 8010ff8:	e9cd 9306 	strd	r9, r3, [sp, #24]
 8010ffc:	2301      	movs	r3, #1
 8010ffe:	9305      	str	r3, [sp, #20]
 8011000:	f89d 3054 	ldrb.w	r3, [sp, #84]	@ 0x54
 8011004:	9304      	str	r3, [sp, #16]
 8011006:	f8bd 3050 	ldrh.w	r3, [sp, #80]	@ 0x50
 801100a:	9303      	str	r3, [sp, #12]
 801100c:	f8bd 304c 	ldrh.w	r3, [sp, #76]	@ 0x4c
 8011010:	9302      	str	r3, [sp, #8]
 8011012:	f8bd 3048 	ldrh.w	r3, [sp, #72]	@ 0x48
 8011016:	2200      	movs	r2, #0
 8011018:	e9cd 8300 	strd	r8, r3, [sp]
 801101c:	4631      	mov	r1, r6
 801101e:	463b      	mov	r3, r7
 8011020:	4620      	mov	r0, r4
 8011022:	47a8      	blx	r5
 8011024:	b00b      	add	sp, #44	@ 0x2c
 8011026:	e8bd 83f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, pc}
 801102a:	bf00      	nop
 801102c:	20002fa2 	.word	0x20002fa2

08011030 <_ZN8touchgfx3HAL8blitFillENS_9colortypeEtttthb>:
 8011030:	e92d 43f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, lr}
 8011034:	4698      	mov	r8, r3
 8011036:	6803      	ldr	r3, [r0, #0]
 8011038:	6d9d      	ldr	r5, [r3, #88]	@ 0x58
 801103a:	4b11      	ldr	r3, [pc, #68]	@ (8011080 <_ZN8touchgfx3HAL8blitFillENS_9colortypeEtttthb+0x50>)
 801103c:	b087      	sub	sp, #28
 801103e:	f8b3 9000 	ldrh.w	r9, [r3]
 8011042:	460e      	mov	r6, r1
 8011044:	4617      	mov	r7, r2
 8011046:	4604      	mov	r4, r0
 8011048:	f7f7 fa7c 	bl	8008544 <_ZN8touchgfx3HAL3lcdEv>
 801104c:	6803      	ldr	r3, [r0, #0]
 801104e:	6adb      	ldr	r3, [r3, #44]	@ 0x2c
 8011050:	4798      	blx	r3
 8011052:	f89d 3044 	ldrb.w	r3, [sp, #68]	@ 0x44
 8011056:	f8cd 900c 	str.w	r9, [sp, #12]
 801105a:	e9cd 0304 	strd	r0, r3, [sp, #16]
 801105e:	f89d 3040 	ldrb.w	r3, [sp, #64]	@ 0x40
 8011062:	9302      	str	r3, [sp, #8]
 8011064:	f8bd 303c 	ldrh.w	r3, [sp, #60]	@ 0x3c
 8011068:	9301      	str	r3, [sp, #4]
 801106a:	f8bd 3038 	ldrh.w	r3, [sp, #56]	@ 0x38
 801106e:	9300      	str	r3, [sp, #0]
 8011070:	463a      	mov	r2, r7
 8011072:	4643      	mov	r3, r8
 8011074:	4631      	mov	r1, r6
 8011076:	4620      	mov	r0, r4
 8011078:	47a8      	blx	r5
 801107a:	b007      	add	sp, #28
 801107c:	e8bd 83f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, pc}
 8011080:	20002fa2 	.word	0x20002fa2

08011084 <_ZN8touchgfx3HAL27drawDrawableInDynamicBitmapERNS_8DrawableEtRKNS_4RectE>:
 8011084:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8011088:	4604      	mov	r4, r0
 801108a:	b08f      	sub	sp, #60	@ 0x3c
 801108c:	4610      	mov	r0, r2
 801108e:	460d      	mov	r5, r1
 8011090:	4691      	mov	r9, r2
 8011092:	461e      	mov	r6, r3
 8011094:	f006 f996 	bl	80173c4 <_ZN8touchgfx6Bitmap23dynamicBitmapGetAddressEt>
 8011098:	2800      	cmp	r0, #0
 801109a:	f000 809d 	beq.w	80111d8 <_ZN8touchgfx3HAL27drawDrawableInDynamicBitmapERNS_8DrawableEtRKNS_4RectE+0x154>
 801109e:	6823      	ldr	r3, [r4, #0]
 80110a0:	f8df b198 	ldr.w	fp, [pc, #408]	@ 801123c <_ZN8touchgfx3HAL27drawDrawableInDynamicBitmapERNS_8DrawableEtRKNS_4RectE+0x1b8>
 80110a4:	6a9b      	ldr	r3, [r3, #40]	@ 0x28
 80110a6:	f8df a198 	ldr.w	sl, [pc, #408]	@ 8011240 <_ZN8touchgfx3HAL27drawDrawableInDynamicBitmapERNS_8DrawableEtRKNS_4RectE+0x1bc>
 80110aa:	4f61      	ldr	r7, [pc, #388]	@ (8011230 <_ZN8touchgfx3HAL27drawDrawableInDynamicBitmapERNS_8DrawableEtRKNS_4RectE+0x1ac>)
 80110ac:	4620      	mov	r0, r4
 80110ae:	4798      	blx	r3
 80110b0:	6823      	ldr	r3, [r4, #0]
 80110b2:	4620      	mov	r0, r4
 80110b4:	6adb      	ldr	r3, [r3, #44]	@ 0x2c
 80110b6:	4798      	blx	r3
 80110b8:	f8bb 3000 	ldrh.w	r3, [fp]
 80110bc:	9301      	str	r3, [sp, #4]
 80110be:	f10d 0838 	add.w	r8, sp, #56	@ 0x38
 80110c2:	f8ba 3000 	ldrh.w	r3, [sl]
 80110c6:	9302      	str	r3, [sp, #8]
 80110c8:	883b      	ldrh	r3, [r7, #0]
 80110ca:	f828 9d1c 	strh.w	r9, [r8, #-28]!
 80110ce:	9303      	str	r3, [sp, #12]
 80110d0:	4b58      	ldr	r3, [pc, #352]	@ (8011234 <_ZN8touchgfx3HAL27drawDrawableInDynamicBitmapERNS_8DrawableEtRKNS_4RectE+0x1b0>)
 80110d2:	9305      	str	r3, [sp, #20]
 80110d4:	881a      	ldrh	r2, [r3, #0]
 80110d6:	9204      	str	r2, [sp, #16]
 80110d8:	4640      	mov	r0, r8
 80110da:	f006 fa07 	bl	80174ec <_ZNK8touchgfx6Bitmap8getWidthEv>
 80110de:	8038      	strh	r0, [r7, #0]
 80110e0:	4640      	mov	r0, r8
 80110e2:	f006 fa37 	bl	8017554 <_ZNK8touchgfx6Bitmap9getHeightEv>
 80110e6:	9b05      	ldr	r3, [sp, #20]
 80110e8:	b280      	uxth	r0, r0
 80110ea:	8018      	strh	r0, [r3, #0]
 80110ec:	4b52      	ldr	r3, [pc, #328]	@ (8011238 <_ZN8touchgfx3HAL27drawDrawableInDynamicBitmapERNS_8DrawableEtRKNS_4RectE+0x1b4>)
 80110ee:	781b      	ldrb	r3, [r3, #0]
 80110f0:	2b00      	cmp	r3, #0
 80110f2:	d174      	bne.n	80111de <_ZN8touchgfx3HAL27drawDrawableInDynamicBitmapERNS_8DrawableEtRKNS_4RectE+0x15a>
 80110f4:	883b      	ldrh	r3, [r7, #0]
 80110f6:	f8ab 3000 	strh.w	r3, [fp]
 80110fa:	f8aa 0000 	strh.w	r0, [sl]
 80110fe:	4648      	mov	r0, r9
 8011100:	e9d4 870f 	ldrd	r8, r7, [r4, #60]	@ 0x3c
 8011104:	f006 f95e 	bl	80173c4 <_ZN8touchgfx6Bitmap23dynamicBitmapGetAddressEt>
 8011108:	e9c4 000f 	strd	r0, r0, [r4, #60]	@ 0x3c
 801110c:	2200      	movs	r2, #0
 801110e:	4611      	mov	r1, r2
 8011110:	4628      	mov	r0, r5
 8011112:	f9b5 9004 	ldrsh.w	r9, [r5, #4]
 8011116:	f9b5 a006 	ldrsh.w	sl, [r5, #6]
 801111a:	f7f8 fc70 	bl	80099fe <_ZN8touchgfx8Drawable5setXYEss>
 801111e:	2301      	movs	r3, #1
 8011120:	f895 b025 	ldrb.w	fp, [r5, #37]	@ 0x25
 8011124:	f885 3025 	strb.w	r3, [r5, #37]	@ 0x25
 8011128:	f9b6 3004 	ldrsh.w	r3, [r6, #4]
 801112c:	2b00      	cmp	r3, #0
 801112e:	dd5c      	ble.n	80111ea <_ZN8touchgfx3HAL27drawDrawableInDynamicBitmapERNS_8DrawableEtRKNS_4RectE+0x166>
 8011130:	f9b6 3006 	ldrsh.w	r3, [r6, #6]
 8011134:	2b00      	cmp	r3, #0
 8011136:	dd58      	ble.n	80111ea <_ZN8touchgfx3HAL27drawDrawableInDynamicBitmapERNS_8DrawableEtRKNS_4RectE+0x166>
 8011138:	462a      	mov	r2, r5
 801113a:	ab0a      	add	r3, sp, #40	@ 0x28
 801113c:	f852 0f04 	ldr.w	r0, [r2, #4]!
 8011140:	6851      	ldr	r1, [r2, #4]
 8011142:	c303      	stmia	r3!, {r0, r1}
 8011144:	4631      	mov	r1, r6
 8011146:	a80a      	add	r0, sp, #40	@ 0x28
 8011148:	f7ff fbf8 	bl	801093c <_ZN8touchgfx4RectaNERKS0_>
 801114c:	4b38      	ldr	r3, [pc, #224]	@ (8011230 <_ZN8touchgfx3HAL27drawDrawableInDynamicBitmapERNS_8DrawableEtRKNS_4RectE+0x1ac>)
 801114e:	f9b3 2000 	ldrsh.w	r2, [r3]
 8011152:	f8ad 2034 	strh.w	r2, [sp, #52]	@ 0x34
 8011156:	2100      	movs	r1, #0
 8011158:	aa0a      	add	r2, sp, #40	@ 0x28
 801115a:	4b36      	ldr	r3, [pc, #216]	@ (8011234 <_ZN8touchgfx3HAL27drawDrawableInDynamicBitmapERNS_8DrawableEtRKNS_4RectE+0x1b0>)
 801115c:	910c      	str	r1, [sp, #48]	@ 0x30
 801115e:	e892 0003 	ldmia.w	r2, {r0, r1}
 8011162:	f9b3 3000 	ldrsh.w	r3, [r3]
 8011166:	f8ad 3036 	strh.w	r3, [sp, #54]	@ 0x36
 801116a:	ab08      	add	r3, sp, #32
 801116c:	e883 0003 	stmia.w	r3, {r0, r1}
 8011170:	4618      	mov	r0, r3
 8011172:	a90c      	add	r1, sp, #48	@ 0x30
 8011174:	f7ff fbe2 	bl	801093c <_ZN8touchgfx4RectaNERKS0_>
 8011178:	6ce3      	ldr	r3, [r4, #76]	@ 0x4c
 801117a:	2b00      	cmp	r3, #0
 801117c:	d13c      	bne.n	80111f8 <_ZN8touchgfx3HAL27drawDrawableInDynamicBitmapERNS_8DrawableEtRKNS_4RectE+0x174>
 801117e:	2000      	movs	r0, #0
 8011180:	f884 0058 	strb.w	r0, [r4, #88]	@ 0x58
 8011184:	2600      	movs	r6, #0
 8011186:	682a      	ldr	r2, [r5, #0]
 8011188:	696b      	ldr	r3, [r5, #20]
 801118a:	616e      	str	r6, [r5, #20]
 801118c:	9305      	str	r3, [sp, #20]
 801118e:	6892      	ldr	r2, [r2, #8]
 8011190:	a908      	add	r1, sp, #32
 8011192:	4628      	mov	r0, r5
 8011194:	4790      	blx	r2
 8011196:	9b05      	ldr	r3, [sp, #20]
 8011198:	616b      	str	r3, [r5, #20]
 801119a:	4652      	mov	r2, sl
 801119c:	f884 6058 	strb.w	r6, [r4, #88]	@ 0x58
 80111a0:	4649      	mov	r1, r9
 80111a2:	4628      	mov	r0, r5
 80111a4:	f885 b025 	strb.w	fp, [r5, #37]	@ 0x25
 80111a8:	f7f8 fc29 	bl	80099fe <_ZN8touchgfx8Drawable5setXYEss>
 80111ac:	4b23      	ldr	r3, [pc, #140]	@ (801123c <_ZN8touchgfx3HAL27drawDrawableInDynamicBitmapERNS_8DrawableEtRKNS_4RectE+0x1b8>)
 80111ae:	9a01      	ldr	r2, [sp, #4]
 80111b0:	801a      	strh	r2, [r3, #0]
 80111b2:	4b23      	ldr	r3, [pc, #140]	@ (8011240 <_ZN8touchgfx3HAL27drawDrawableInDynamicBitmapERNS_8DrawableEtRKNS_4RectE+0x1bc>)
 80111b4:	9a02      	ldr	r2, [sp, #8]
 80111b6:	801a      	strh	r2, [r3, #0]
 80111b8:	4b1d      	ldr	r3, [pc, #116]	@ (8011230 <_ZN8touchgfx3HAL27drawDrawableInDynamicBitmapERNS_8DrawableEtRKNS_4RectE+0x1ac>)
 80111ba:	9a03      	ldr	r2, [sp, #12]
 80111bc:	801a      	strh	r2, [r3, #0]
 80111be:	4b1d      	ldr	r3, [pc, #116]	@ (8011234 <_ZN8touchgfx3HAL27drawDrawableInDynamicBitmapERNS_8DrawableEtRKNS_4RectE+0x1b0>)
 80111c0:	9a04      	ldr	r2, [sp, #16]
 80111c2:	801a      	strh	r2, [r3, #0]
 80111c4:	e9c4 870f 	strd	r8, r7, [r4, #60]	@ 0x3c
 80111c8:	6823      	ldr	r3, [r4, #0]
 80111ca:	4620      	mov	r0, r4
 80111cc:	6a9b      	ldr	r3, [r3, #40]	@ 0x28
 80111ce:	4798      	blx	r3
 80111d0:	6823      	ldr	r3, [r4, #0]
 80111d2:	4620      	mov	r0, r4
 80111d4:	6adb      	ldr	r3, [r3, #44]	@ 0x2c
 80111d6:	4798      	blx	r3
 80111d8:	b00f      	add	sp, #60	@ 0x3c
 80111da:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 80111de:	883b      	ldrh	r3, [r7, #0]
 80111e0:	f8ab 0000 	strh.w	r0, [fp]
 80111e4:	f8aa 3000 	strh.w	r3, [sl]
 80111e8:	e789      	b.n	80110fe <_ZN8touchgfx3HAL27drawDrawableInDynamicBitmapERNS_8DrawableEtRKNS_4RectE+0x7a>
 80111ea:	462a      	mov	r2, r5
 80111ec:	ab0a      	add	r3, sp, #40	@ 0x28
 80111ee:	f852 0f04 	ldr.w	r0, [r2, #4]!
 80111f2:	6851      	ldr	r1, [r2, #4]
 80111f4:	c303      	stmia	r3!, {r0, r1}
 80111f6:	e7a9      	b.n	801114c <_ZN8touchgfx3HAL27drawDrawableInDynamicBitmapERNS_8DrawableEtRKNS_4RectE+0xc8>
 80111f8:	a807      	add	r0, sp, #28
 80111fa:	f006 faed 	bl	80177d8 <_ZNK8touchgfx6Bitmap9getFormatEv>
 80111fe:	4606      	mov	r6, r0
 8011200:	6ce0      	ldr	r0, [r4, #76]	@ 0x4c
 8011202:	6803      	ldr	r3, [r0, #0]
 8011204:	6adb      	ldr	r3, [r3, #44]	@ 0x2c
 8011206:	4798      	blx	r3
 8011208:	4286      	cmp	r6, r0
 801120a:	d1b8      	bne.n	801117e <_ZN8touchgfx3HAL27drawDrawableInDynamicBitmapERNS_8DrawableEtRKNS_4RectE+0xfa>
 801120c:	f7f7 f99a 	bl	8008544 <_ZN8touchgfx3HAL3lcdEv>
 8011210:	6803      	ldr	r3, [r0, #0]
 8011212:	4606      	mov	r6, r0
 8011214:	6b5b      	ldr	r3, [r3, #52]	@ 0x34
 8011216:	9305      	str	r3, [sp, #20]
 8011218:	a807      	add	r0, sp, #28
 801121a:	f006 fadd 	bl	80177d8 <_ZNK8touchgfx6Bitmap9getFormatEv>
 801121e:	9b05      	ldr	r3, [sp, #20]
 8011220:	4601      	mov	r1, r0
 8011222:	4630      	mov	r0, r6
 8011224:	4798      	blx	r3
 8011226:	f080 0001 	eor.w	r0, r0, #1
 801122a:	b2c0      	uxtb	r0, r0
 801122c:	e7a8      	b.n	8011180 <_ZN8touchgfx3HAL27drawDrawableInDynamicBitmapERNS_8DrawableEtRKNS_4RectE+0xfc>
 801122e:	bf00      	nop
 8011230:	20002f9c 	.word	0x20002f9c
 8011234:	20002f9e 	.word	0x20002f9e
 8011238:	20002fa0 	.word	0x20002fa0
 801123c:	20002fa2 	.word	0x20002fa2
 8011240:	20002fa4 	.word	0x20002fa4

08011244 <_ZN8touchgfx3HAL20getClientFrameBufferEv>:
 8011244:	b510      	push	{r4, lr}
 8011246:	4b07      	ldr	r3, [pc, #28]	@ (8011264 <_ZN8touchgfx3HAL20getClientFrameBufferEv+0x20>)
 8011248:	781b      	ldrb	r3, [r3, #0]
 801124a:	4604      	mov	r4, r0
 801124c:	b13b      	cbz	r3, 801125e <_ZN8touchgfx3HAL20getClientFrameBufferEv+0x1a>
 801124e:	6803      	ldr	r3, [r0, #0]
 8011250:	6b1b      	ldr	r3, [r3, #48]	@ 0x30
 8011252:	4798      	blx	r3
 8011254:	6be3      	ldr	r3, [r4, #60]	@ 0x3c
 8011256:	4283      	cmp	r3, r0
 8011258:	d101      	bne.n	801125e <_ZN8touchgfx3HAL20getClientFrameBufferEv+0x1a>
 801125a:	6c20      	ldr	r0, [r4, #64]	@ 0x40
 801125c:	bd10      	pop	{r4, pc}
 801125e:	6be0      	ldr	r0, [r4, #60]	@ 0x3c
 8011260:	e7fc      	b.n	801125c <_ZN8touchgfx3HAL20getClientFrameBufferEv+0x18>
 8011262:	bf00      	nop
 8011264:	20002fa6 	.word	0x20002fa6

08011268 <_ZN8touchgfx3HAL12blitCopyWordEPKttttttt>:
 8011268:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 801126c:	b08a      	sub	sp, #40	@ 0x28
 801126e:	461d      	mov	r5, r3
 8011270:	f44f 6380 	mov.w	r3, #1024	@ 0x400
 8011274:	e9cd 3101 	strd	r3, r1, [sp, #4]
 8011278:	f8bd 3040 	ldrh.w	r3, [sp, #64]	@ 0x40
 801127c:	f8ad 3018 	strh.w	r3, [sp, #24]
 8011280:	f8bd 3044 	ldrh.w	r3, [sp, #68]	@ 0x44
 8011284:	f8ad 301a 	strh.w	r3, [sp, #26]
 8011288:	2400      	movs	r4, #0
 801128a:	f8bd 3048 	ldrh.w	r3, [sp, #72]	@ 0x48
 801128e:	f8bd 604c 	ldrh.w	r6, [sp, #76]	@ 0x4c
 8011292:	f8ad 301c 	strh.w	r3, [sp, #28]
 8011296:	4690      	mov	r8, r2
 8011298:	4607      	mov	r7, r0
 801129a:	9404      	str	r4, [sp, #16]
 801129c:	f88d 4020 	strb.w	r4, [sp, #32]
 80112a0:	f7ff ffd0 	bl	8011244 <_ZN8touchgfx3HAL20getClientFrameBufferEv>
 80112a4:	fb06 8505 	mla	r5, r6, r5, r8
 80112a8:	eb00 0545 	add.w	r5, r0, r5, lsl #1
 80112ac:	6878      	ldr	r0, [r7, #4]
 80112ae:	9505      	str	r5, [sp, #20]
 80112b0:	f8ad 601e 	strh.w	r6, [sp, #30]
 80112b4:	f88d 4022 	strb.w	r4, [sp, #34]	@ 0x22
 80112b8:	f88d 4021 	strb.w	r4, [sp, #33]	@ 0x21
 80112bc:	f88d 4023 	strb.w	r4, [sp, #35]	@ 0x23
 80112c0:	f88d 4024 	strb.w	r4, [sp, #36]	@ 0x24
 80112c4:	6803      	ldr	r3, [r0, #0]
 80112c6:	a901      	add	r1, sp, #4
 80112c8:	685b      	ldr	r3, [r3, #4]
 80112ca:	4798      	blx	r3
 80112cc:	b00a      	add	sp, #40	@ 0x28
 80112ce:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}

080112d2 <_ZN8touchgfx3HAL12blitFillWordEtttttt>:
 80112d2:	e92d 43f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, lr}
 80112d6:	b08b      	sub	sp, #44	@ 0x2c
 80112d8:	2400      	movs	r4, #0
 80112da:	461d      	mov	r5, r3
 80112dc:	f44f 6300 	mov.w	r3, #2048	@ 0x800
 80112e0:	4688      	mov	r8, r1
 80112e2:	4691      	mov	r9, r2
 80112e4:	f8bd 6050 	ldrh.w	r6, [sp, #80]	@ 0x50
 80112e8:	9404      	str	r4, [sp, #16]
 80112ea:	4607      	mov	r7, r0
 80112ec:	e9cd 3401 	strd	r3, r4, [sp, #4]
 80112f0:	f7ff ffa8 	bl	8011244 <_ZN8touchgfx3HAL20getClientFrameBufferEv>
 80112f4:	fb06 9505 	mla	r5, r6, r5, r9
 80112f8:	f8bd 3048 	ldrh.w	r3, [sp, #72]	@ 0x48
 80112fc:	f8ad 3018 	strh.w	r3, [sp, #24]
 8011300:	eb00 0545 	add.w	r5, r0, r5, lsl #1
 8011304:	f8bd 304c 	ldrh.w	r3, [sp, #76]	@ 0x4c
 8011308:	6878      	ldr	r0, [r7, #4]
 801130a:	9505      	str	r5, [sp, #20]
 801130c:	f8ad 301a 	strh.w	r3, [sp, #26]
 8011310:	f8ad 401c 	strh.w	r4, [sp, #28]
 8011314:	f8ad 601e 	strh.w	r6, [sp, #30]
 8011318:	f8cd 8010 	str.w	r8, [sp, #16]
 801131c:	f8ad 4020 	strh.w	r4, [sp, #32]
 8011320:	f88d 4022 	strb.w	r4, [sp, #34]	@ 0x22
 8011324:	f88d 4023 	strb.w	r4, [sp, #35]	@ 0x23
 8011328:	f88d 4024 	strb.w	r4, [sp, #36]	@ 0x24
 801132c:	6803      	ldr	r3, [r0, #0]
 801132e:	a901      	add	r1, sp, #4
 8011330:	685b      	ldr	r3, [r3, #4]
 8011332:	4798      	blx	r3
 8011334:	b00b      	add	sp, #44	@ 0x2c
 8011336:	e8bd 83f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, pc}
	...

0801133c <_ZN8touchgfx3HAL8blitCopyEPKtPKhttttthbtNS_6Bitmap12BitmapFormatES6_b>:
 801133c:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 8011340:	b08a      	sub	sp, #40	@ 0x28
 8011342:	4698      	mov	r8, r3
 8011344:	f89d 505c 	ldrb.w	r5, [sp, #92]	@ 0x5c
 8011348:	f89d c054 	ldrb.w	ip, [sp, #84]	@ 0x54
 801134c:	f8bd 7058 	ldrh.w	r7, [sp, #88]	@ 0x58
 8011350:	f89d 4060 	ldrb.w	r4, [sp, #96]	@ 0x60
 8011354:	2300      	movs	r3, #0
 8011356:	2d0b      	cmp	r5, #11
 8011358:	4606      	mov	r6, r0
 801135a:	9304      	str	r3, [sp, #16]
 801135c:	f89d 0050 	ldrb.w	r0, [sp, #80]	@ 0x50
 8011360:	d138      	bne.n	80113d4 <_ZN8touchgfx3HAL8blitCopyEPKtPKhttttthbtNS_6Bitmap12BitmapFormatES6_b+0x98>
 8011362:	2380      	movs	r3, #128	@ 0x80
 8011364:	e9cd 3101 	strd	r3, r1, [sp, #4]
 8011368:	f8bd 3044 	ldrh.w	r3, [sp, #68]	@ 0x44
 801136c:	f8ad 3018 	strh.w	r3, [sp, #24]
 8011370:	f8bd 3048 	ldrh.w	r3, [sp, #72]	@ 0x48
 8011374:	f8ad 301a 	strh.w	r3, [sp, #26]
 8011378:	f88d 0020 	strb.w	r0, [sp, #32]
 801137c:	f8bd 304c 	ldrh.w	r3, [sp, #76]	@ 0x4c
 8011380:	f8ad 301c 	strh.w	r3, [sp, #28]
 8011384:	4630      	mov	r0, r6
 8011386:	9203      	str	r2, [sp, #12]
 8011388:	f7ff ff5c 	bl	8011244 <_ZN8touchgfx3HAL20getClientFrameBufferEv>
 801138c:	2c0b      	cmp	r4, #11
 801138e:	bf98      	it	ls
 8011390:	4b1b      	ldrls	r3, [pc, #108]	@ (8011400 <_ZN8touchgfx3HAL8blitCopyEPKtPKhttttthbtNS_6Bitmap12BitmapFormatES6_b+0xc4>)
 8011392:	f8bd 2040 	ldrh.w	r2, [sp, #64]	@ 0x40
 8011396:	bf98      	it	ls
 8011398:	5d19      	ldrbls	r1, [r3, r4]
 801139a:	f8ad 701e 	strh.w	r7, [sp, #30]
 801139e:	bf88      	it	hi
 80113a0:	2100      	movhi	r1, #0
 80113a2:	fb02 8307 	mla	r3, r2, r7, r8
 80113a6:	10c9      	asrs	r1, r1, #3
 80113a8:	fb01 0003 	mla	r0, r1, r3, r0
 80113ac:	f89d 3064 	ldrb.w	r3, [sp, #100]	@ 0x64
 80113b0:	9005      	str	r0, [sp, #20]
 80113b2:	f88d 3023 	strb.w	r3, [sp, #35]	@ 0x23
 80113b6:	6870      	ldr	r0, [r6, #4]
 80113b8:	f88d 5021 	strb.w	r5, [sp, #33]	@ 0x21
 80113bc:	2300      	movs	r3, #0
 80113be:	f88d 4022 	strb.w	r4, [sp, #34]	@ 0x22
 80113c2:	f88d 3024 	strb.w	r3, [sp, #36]	@ 0x24
 80113c6:	6803      	ldr	r3, [r0, #0]
 80113c8:	a901      	add	r1, sp, #4
 80113ca:	685b      	ldr	r3, [r3, #4]
 80113cc:	4798      	blx	r3
 80113ce:	b00a      	add	sp, #40	@ 0x28
 80113d0:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
 80113d4:	2d02      	cmp	r5, #2
 80113d6:	d109      	bne.n	80113ec <_ZN8touchgfx3HAL8blitCopyEPKtPKhttttthbtNS_6Bitmap12BitmapFormatES6_b+0xb0>
 80113d8:	28ff      	cmp	r0, #255	@ 0xff
 80113da:	d105      	bne.n	80113e8 <_ZN8touchgfx3HAL8blitCopyEPKtPKhttttthbtNS_6Bitmap12BitmapFormatES6_b+0xac>
 80113dc:	f1bc 0f00 	cmp.w	ip, #0
 80113e0:	bf14      	ite	ne
 80113e2:	2340      	movne	r3, #64	@ 0x40
 80113e4:	2320      	moveq	r3, #32
 80113e6:	e7bd      	b.n	8011364 <_ZN8touchgfx3HAL8blitCopyEPKtPKhttttthbtNS_6Bitmap12BitmapFormatES6_b+0x28>
 80113e8:	2340      	movs	r3, #64	@ 0x40
 80113ea:	e7bb      	b.n	8011364 <_ZN8touchgfx3HAL8blitCopyEPKtPKhttttthbtNS_6Bitmap12BitmapFormatES6_b+0x28>
 80113ec:	28ff      	cmp	r0, #255	@ 0xff
 80113ee:	d105      	bne.n	80113fc <_ZN8touchgfx3HAL8blitCopyEPKtPKhttttthbtNS_6Bitmap12BitmapFormatES6_b+0xc0>
 80113f0:	f1bc 0f00 	cmp.w	ip, #0
 80113f4:	bf14      	ite	ne
 80113f6:	2304      	movne	r3, #4
 80113f8:	2301      	moveq	r3, #1
 80113fa:	e7b3      	b.n	8011364 <_ZN8touchgfx3HAL8blitCopyEPKtPKhttttthbtNS_6Bitmap12BitmapFormatES6_b+0x28>
 80113fc:	2304      	movs	r3, #4
 80113fe:	e7b1      	b.n	8011364 <_ZN8touchgfx3HAL8blitCopyEPKtPKhttttthbtNS_6Bitmap12BitmapFormatES6_b+0x28>
 8011400:	08028ec4 	.word	0x08028ec4

08011404 <_ZN8touchgfx3HAL8blitFillENS_9colortypeEtttthtNS_6Bitmap12BitmapFormatEb>:
 8011404:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8011408:	b08b      	sub	sp, #44	@ 0x2c
 801140a:	461d      	mov	r5, r3
 801140c:	f89d 9058 	ldrb.w	r9, [sp, #88]	@ 0x58
 8011410:	f89d 6060 	ldrb.w	r6, [sp, #96]	@ 0x60
 8011414:	f8bd a05c 	ldrh.w	sl, [sp, #92]	@ 0x5c
 8011418:	f1b9 0fff 	cmp.w	r9, #255	@ 0xff
 801141c:	bf14      	ite	ne
 801141e:	2308      	movne	r3, #8
 8011420:	2302      	moveq	r3, #2
 8011422:	2400      	movs	r4, #0
 8011424:	e9cd 3401 	strd	r3, r4, [sp, #4]
 8011428:	4688      	mov	r8, r1
 801142a:	4693      	mov	fp, r2
 801142c:	9404      	str	r4, [sp, #16]
 801142e:	4607      	mov	r7, r0
 8011430:	f7ff ff08 	bl	8011244 <_ZN8touchgfx3HAL20getClientFrameBufferEv>
 8011434:	2e0b      	cmp	r6, #11
 8011436:	bf98      	it	ls
 8011438:	4b15      	ldrls	r3, [pc, #84]	@ (8011490 <_ZN8touchgfx3HAL8blitFillENS_9colortypeEtttthtNS_6Bitmap12BitmapFormatEb+0x8c>)
 801143a:	f89d 2064 	ldrb.w	r2, [sp, #100]	@ 0x64
 801143e:	bf98      	it	ls
 8011440:	5d9c      	ldrbls	r4, [r3, r6]
 8011442:	f8bd 3050 	ldrh.w	r3, [sp, #80]	@ 0x50
 8011446:	f8ad 3018 	strh.w	r3, [sp, #24]
 801144a:	fb05 b50a 	mla	r5, r5, sl, fp
 801144e:	f8bd 3054 	ldrh.w	r3, [sp, #84]	@ 0x54
 8011452:	f8ad 301a 	strh.w	r3, [sp, #26]
 8011456:	10e4      	asrs	r4, r4, #3
 8011458:	fb04 0405 	mla	r4, r4, r5, r0
 801145c:	2300      	movs	r3, #0
 801145e:	6878      	ldr	r0, [r7, #4]
 8011460:	9405      	str	r4, [sp, #20]
 8011462:	f8ad 301c 	strh.w	r3, [sp, #28]
 8011466:	f8ad a01e 	strh.w	sl, [sp, #30]
 801146a:	f8cd 8010 	str.w	r8, [sp, #16]
 801146e:	f88d 9020 	strb.w	r9, [sp, #32]
 8011472:	f88d 2023 	strb.w	r2, [sp, #35]	@ 0x23
 8011476:	f88d 3024 	strb.w	r3, [sp, #36]	@ 0x24
 801147a:	f88d 6021 	strb.w	r6, [sp, #33]	@ 0x21
 801147e:	f88d 6022 	strb.w	r6, [sp, #34]	@ 0x22
 8011482:	6803      	ldr	r3, [r0, #0]
 8011484:	a901      	add	r1, sp, #4
 8011486:	685b      	ldr	r3, [r3, #4]
 8011488:	4798      	blx	r3
 801148a:	b00b      	add	sp, #44	@ 0x2c
 801148c:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 8011490:	08028ec4 	.word	0x08028ec4

08011494 <_ZNK8touchgfx3HAL13getDstAddressEttPt>:
 8011494:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 8011498:	461e      	mov	r6, r3
 801149a:	4b0a      	ldr	r3, [pc, #40]	@ (80114c4 <_ZNK8touchgfx3HAL13getDstAddressEttPt+0x30>)
 801149c:	460f      	mov	r7, r1
 801149e:	881d      	ldrh	r5, [r3, #0]
 80114a0:	4690      	mov	r8, r2
 80114a2:	f7f7 f84f 	bl	8008544 <_ZN8touchgfx3HAL3lcdEv>
 80114a6:	6803      	ldr	r3, [r0, #0]
 80114a8:	6adb      	ldr	r3, [r3, #44]	@ 0x2c
 80114aa:	4798      	blx	r3
 80114ac:	280b      	cmp	r0, #11
 80114ae:	bf9a      	itte	ls
 80114b0:	4b05      	ldrls	r3, [pc, #20]	@ (80114c8 <_ZNK8touchgfx3HAL13getDstAddressEttPt+0x34>)
 80114b2:	5c1c      	ldrbls	r4, [r3, r0]
 80114b4:	2400      	movhi	r4, #0
 80114b6:	fb08 7005 	mla	r0, r8, r5, r7
 80114ba:	10e4      	asrs	r4, r4, #3
 80114bc:	fb04 6000 	mla	r0, r4, r0, r6
 80114c0:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
 80114c4:	20002fa2 	.word	0x20002fa2
 80114c8:	08028ec4 	.word	0x08028ec4

080114cc <_ZN8touchgfx3HAL13blitCopyGlyphEPKhtttttNS_9colortypeEhNS_14BlitOperationsEb>:
 80114cc:	b5f0      	push	{r4, r5, r6, r7, lr}
 80114ce:	b08b      	sub	sp, #44	@ 0x2c
 80114d0:	461f      	mov	r7, r3
 80114d2:	f8bd 3054 	ldrh.w	r3, [sp, #84]	@ 0x54
 80114d6:	e9cd 3101 	strd	r3, r1, [sp, #4]
 80114da:	f8bd 3040 	ldrh.w	r3, [sp, #64]	@ 0x40
 80114de:	f8ad 3018 	strh.w	r3, [sp, #24]
 80114e2:	f8bd 3044 	ldrh.w	r3, [sp, #68]	@ 0x44
 80114e6:	f8ad 301a 	strh.w	r3, [sp, #26]
 80114ea:	f8bd 3048 	ldrh.w	r3, [sp, #72]	@ 0x48
 80114ee:	f8ad 301c 	strh.w	r3, [sp, #28]
 80114f2:	2500      	movs	r5, #0
 80114f4:	f89d 3050 	ldrb.w	r3, [sp, #80]	@ 0x50
 80114f8:	f88d 3020 	strb.w	r3, [sp, #32]
 80114fc:	4604      	mov	r4, r0
 80114fe:	4616      	mov	r6, r2
 8011500:	9504      	str	r5, [sp, #16]
 8011502:	f7ff fe9f 	bl	8011244 <_ZN8touchgfx3HAL20getClientFrameBufferEv>
 8011506:	463a      	mov	r2, r7
 8011508:	4631      	mov	r1, r6
 801150a:	4603      	mov	r3, r0
 801150c:	4620      	mov	r0, r4
 801150e:	f7ff ffc1 	bl	8011494 <_ZNK8touchgfx3HAL13getDstAddressEttPt>
 8011512:	4b0e      	ldr	r3, [pc, #56]	@ (801154c <_ZN8touchgfx3HAL13blitCopyGlyphEPKhtttttNS_9colortypeEhNS_14BlitOperationsEb+0x80>)
 8011514:	9005      	str	r0, [sp, #20]
 8011516:	881b      	ldrh	r3, [r3, #0]
 8011518:	f8ad 301e 	strh.w	r3, [sp, #30]
 801151c:	f7f7 f812 	bl	8008544 <_ZN8touchgfx3HAL3lcdEv>
 8011520:	6803      	ldr	r3, [r0, #0]
 8011522:	6adb      	ldr	r3, [r3, #44]	@ 0x2c
 8011524:	4798      	blx	r3
 8011526:	9b13      	ldr	r3, [sp, #76]	@ 0x4c
 8011528:	f88d 0022 	strb.w	r0, [sp, #34]	@ 0x22
 801152c:	f88d 0021 	strb.w	r0, [sp, #33]	@ 0x21
 8011530:	9304      	str	r3, [sp, #16]
 8011532:	6860      	ldr	r0, [r4, #4]
 8011534:	f89d 3058 	ldrb.w	r3, [sp, #88]	@ 0x58
 8011538:	f88d 3023 	strb.w	r3, [sp, #35]	@ 0x23
 801153c:	f88d 5024 	strb.w	r5, [sp, #36]	@ 0x24
 8011540:	6803      	ldr	r3, [r0, #0]
 8011542:	a901      	add	r1, sp, #4
 8011544:	685b      	ldr	r3, [r3, #4]
 8011546:	4798      	blx	r3
 8011548:	b00b      	add	sp, #44	@ 0x2c
 801154a:	bdf0      	pop	{r4, r5, r6, r7, pc}
 801154c:	20002fa2 	.word	0x20002fa2

08011550 <_ZN8touchgfx3HAL20copyFBRegionToMemoryENS_4RectE>:
 8011550:	b5f0      	push	{r4, r5, r6, r7, lr}
 8011552:	b08d      	sub	sp, #52	@ 0x34
 8011554:	466b      	mov	r3, sp
 8011556:	e883 0006 	stmia.w	r3, {r1, r2}
 801155a:	2300      	movs	r3, #0
 801155c:	9306      	str	r3, [sp, #24]
 801155e:	6803      	ldr	r3, [r0, #0]
 8011560:	f8bd 6000 	ldrh.w	r6, [sp]
 8011564:	6b1b      	ldr	r3, [r3, #48]	@ 0x30
 8011566:	f8bd 7002 	ldrh.w	r7, [sp, #2]
 801156a:	2501      	movs	r5, #1
 801156c:	9503      	str	r5, [sp, #12]
 801156e:	4604      	mov	r4, r0
 8011570:	4798      	blx	r3
 8011572:	463a      	mov	r2, r7
 8011574:	4631      	mov	r1, r6
 8011576:	4603      	mov	r3, r0
 8011578:	4620      	mov	r0, r4
 801157a:	f7ff ff8b 	bl	8011494 <_ZNK8touchgfx3HAL13getDstAddressEttPt>
 801157e:	6c63      	ldr	r3, [r4, #68]	@ 0x44
 8011580:	9307      	str	r3, [sp, #28]
 8011582:	f8bd 3004 	ldrh.w	r3, [sp, #4]
 8011586:	f8ad 3020 	strh.w	r3, [sp, #32]
 801158a:	f8bd 3006 	ldrh.w	r3, [sp, #6]
 801158e:	f8ad 3022 	strh.w	r3, [sp, #34]	@ 0x22
 8011592:	4b0f      	ldr	r3, [pc, #60]	@ (80115d0 <_ZN8touchgfx3HAL20copyFBRegionToMemoryENS_4RectE+0x80>)
 8011594:	9004      	str	r0, [sp, #16]
 8011596:	881b      	ldrh	r3, [r3, #0]
 8011598:	f8ad 3024 	strh.w	r3, [sp, #36]	@ 0x24
 801159c:	f8ad 3026 	strh.w	r3, [sp, #38]	@ 0x26
 80115a0:	f7f6 ffd0 	bl	8008544 <_ZN8touchgfx3HAL3lcdEv>
 80115a4:	6803      	ldr	r3, [r0, #0]
 80115a6:	6adb      	ldr	r3, [r3, #44]	@ 0x2c
 80115a8:	4798      	blx	r3
 80115aa:	23ff      	movs	r3, #255	@ 0xff
 80115ac:	f88d 0029 	strb.w	r0, [sp, #41]	@ 0x29
 80115b0:	f88d 002a 	strb.w	r0, [sp, #42]	@ 0x2a
 80115b4:	6860      	ldr	r0, [r4, #4]
 80115b6:	f88d 3028 	strb.w	r3, [sp, #40]	@ 0x28
 80115ba:	f88d 502b 	strb.w	r5, [sp, #43]	@ 0x2b
 80115be:	f88d 502c 	strb.w	r5, [sp, #44]	@ 0x2c
 80115c2:	6803      	ldr	r3, [r0, #0]
 80115c4:	a903      	add	r1, sp, #12
 80115c6:	685b      	ldr	r3, [r3, #4]
 80115c8:	4798      	blx	r3
 80115ca:	6c60      	ldr	r0, [r4, #68]	@ 0x44
 80115cc:	b00d      	add	sp, #52	@ 0x34
 80115ce:	bdf0      	pop	{r4, r5, r6, r7, pc}
 80115d0:	20002fa2 	.word	0x20002fa2

080115d4 <_ZN8touchgfx3HAL20copyFBRegionToMemoryENS_4RectEPtm>:
 80115d4:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 80115d8:	b08c      	sub	sp, #48	@ 0x30
 80115da:	461e      	mov	r6, r3
 80115dc:	466d      	mov	r5, sp
 80115de:	2300      	movs	r3, #0
 80115e0:	e885 0006 	stmia.w	r5, {r1, r2}
 80115e4:	9306      	str	r3, [sp, #24]
 80115e6:	6803      	ldr	r3, [r0, #0]
 80115e8:	f8bd 7000 	ldrh.w	r7, [sp]
 80115ec:	6b1b      	ldr	r3, [r3, #48]	@ 0x30
 80115ee:	f8bd 8002 	ldrh.w	r8, [sp, #2]
 80115f2:	2501      	movs	r5, #1
 80115f4:	9503      	str	r5, [sp, #12]
 80115f6:	4604      	mov	r4, r0
 80115f8:	4798      	blx	r3
 80115fa:	4642      	mov	r2, r8
 80115fc:	4639      	mov	r1, r7
 80115fe:	4603      	mov	r3, r0
 8011600:	4620      	mov	r0, r4
 8011602:	f7ff ff47 	bl	8011494 <_ZNK8touchgfx3HAL13getDstAddressEttPt>
 8011606:	f8bd 3004 	ldrh.w	r3, [sp, #4]
 801160a:	f8ad 3020 	strh.w	r3, [sp, #32]
 801160e:	f8bd 3006 	ldrh.w	r3, [sp, #6]
 8011612:	f8ad 3022 	strh.w	r3, [sp, #34]	@ 0x22
 8011616:	4b11      	ldr	r3, [pc, #68]	@ (801165c <_ZN8touchgfx3HAL20copyFBRegionToMemoryENS_4RectEPtm+0x88>)
 8011618:	9004      	str	r0, [sp, #16]
 801161a:	881b      	ldrh	r3, [r3, #0]
 801161c:	f8ad 3024 	strh.w	r3, [sp, #36]	@ 0x24
 8011620:	9b12      	ldr	r3, [sp, #72]	@ 0x48
 8011622:	f8ad 3026 	strh.w	r3, [sp, #38]	@ 0x26
 8011626:	9607      	str	r6, [sp, #28]
 8011628:	f7f6 ff8c 	bl	8008544 <_ZN8touchgfx3HAL3lcdEv>
 801162c:	6803      	ldr	r3, [r0, #0]
 801162e:	6adb      	ldr	r3, [r3, #44]	@ 0x2c
 8011630:	4798      	blx	r3
 8011632:	23ff      	movs	r3, #255	@ 0xff
 8011634:	f88d 0029 	strb.w	r0, [sp, #41]	@ 0x29
 8011638:	f88d 002a 	strb.w	r0, [sp, #42]	@ 0x2a
 801163c:	6860      	ldr	r0, [r4, #4]
 801163e:	f88d 3028 	strb.w	r3, [sp, #40]	@ 0x28
 8011642:	f88d 502b 	strb.w	r5, [sp, #43]	@ 0x2b
 8011646:	f88d 502c 	strb.w	r5, [sp, #44]	@ 0x2c
 801164a:	6803      	ldr	r3, [r0, #0]
 801164c:	a903      	add	r1, sp, #12
 801164e:	685b      	ldr	r3, [r3, #4]
 8011650:	4798      	blx	r3
 8011652:	4630      	mov	r0, r6
 8011654:	b00c      	add	sp, #48	@ 0x30
 8011656:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
 801165a:	bf00      	nop
 801165c:	20002fa2 	.word	0x20002fa2

08011660 <_ZN8touchgfx3HAL25copyFromTFTToClientBufferENS_4RectE>:
 8011660:	b5f0      	push	{r4, r5, r6, r7, lr}
 8011662:	b085      	sub	sp, #20
 8011664:	ac02      	add	r4, sp, #8
 8011666:	e884 0006 	stmia.w	r4, {r1, r2}
 801166a:	4605      	mov	r5, r0
 801166c:	f8bd 6008 	ldrh.w	r6, [sp, #8]
 8011670:	f8bd 700a 	ldrh.w	r7, [sp, #10]
 8011674:	f7ff fde6 	bl	8011244 <_ZN8touchgfx3HAL20getClientFrameBufferEv>
 8011678:	463a      	mov	r2, r7
 801167a:	4603      	mov	r3, r0
 801167c:	4631      	mov	r1, r6
 801167e:	4628      	mov	r0, r5
 8011680:	f7ff ff08 	bl	8011494 <_ZNK8touchgfx3HAL13getDstAddressEttPt>
 8011684:	4a05      	ldr	r2, [pc, #20]	@ (801169c <_ZN8touchgfx3HAL25copyFromTFTToClientBufferENS_4RectE+0x3c>)
 8011686:	682b      	ldr	r3, [r5, #0]
 8011688:	8812      	ldrh	r2, [r2, #0]
 801168a:	9200      	str	r2, [sp, #0]
 801168c:	6ede      	ldr	r6, [r3, #108]	@ 0x6c
 801168e:	e894 0006 	ldmia.w	r4, {r1, r2}
 8011692:	4603      	mov	r3, r0
 8011694:	4628      	mov	r0, r5
 8011696:	47b0      	blx	r6
 8011698:	b005      	add	sp, #20
 801169a:	bdf0      	pop	{r4, r5, r6, r7, pc}
 801169c:	20002fa2 	.word	0x20002fa2

080116a0 <_ZN8touchgfx3HAL16swapFrameBuffersEv>:
 80116a0:	b570      	push	{r4, r5, r6, lr}
 80116a2:	f890 306e 	ldrb.w	r3, [r0, #110]	@ 0x6e
 80116a6:	4604      	mov	r4, r0
 80116a8:	b19b      	cbz	r3, 80116d2 <_ZN8touchgfx3HAL16swapFrameBuffersEv+0x32>
 80116aa:	2002      	movs	r0, #2
 80116ac:	f7fd f852 	bl	800e754 <_ZN8touchgfx4GPIO6toggleENS0_7GPIO_IDE>
 80116b0:	2300      	movs	r3, #0
 80116b2:	f884 306e 	strb.w	r3, [r4, #110]	@ 0x6e
 80116b6:	f884 306d 	strb.w	r3, [r4, #109]	@ 0x6d
 80116ba:	6823      	ldr	r3, [r4, #0]
 80116bc:	4620      	mov	r0, r4
 80116be:	f8d3 50b8 	ldr.w	r5, [r3, #184]	@ 0xb8
 80116c2:	f7ff fdbf 	bl	8011244 <_ZN8touchgfx3HAL20getClientFrameBufferEv>
 80116c6:	462b      	mov	r3, r5
 80116c8:	4601      	mov	r1, r0
 80116ca:	4620      	mov	r0, r4
 80116cc:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
 80116d0:	4718      	bx	r3
 80116d2:	bd70      	pop	{r4, r5, r6, pc}

080116d4 <_ZN8touchgfx3HAL18setRenderingMethodENS0_15RenderingMethodE>:
 80116d4:	b538      	push	{r3, r4, r5, lr}
 80116d6:	f890 307b 	ldrb.w	r3, [r0, #123]	@ 0x7b
 80116da:	428b      	cmp	r3, r1
 80116dc:	4604      	mov	r4, r0
 80116de:	460d      	mov	r5, r1
 80116e0:	d006      	beq.n	80116f0 <_ZN8touchgfx3HAL18setRenderingMethodENS0_15RenderingMethodE+0x1c>
 80116e2:	6803      	ldr	r3, [r0, #0]
 80116e4:	b929      	cbnz	r1, 80116f2 <_ZN8touchgfx3HAL18setRenderingMethodENS0_15RenderingMethodE+0x1e>
 80116e6:	f8d3 30c8 	ldr.w	r3, [r3, #200]	@ 0xc8
 80116ea:	4798      	blx	r3
 80116ec:	f884 507b 	strb.w	r5, [r4, #123]	@ 0x7b
 80116f0:	bd38      	pop	{r3, r4, r5, pc}
 80116f2:	f8d3 30cc 	ldr.w	r3, [r3, #204]	@ 0xcc
 80116f6:	e7f8      	b.n	80116ea <_ZN8touchgfx3HAL18setRenderingMethodENS0_15RenderingMethodE+0x16>

080116f8 <_ZN8touchgfx3HAL15lockFrameBufferEv>:
 80116f8:	b510      	push	{r4, lr}
 80116fa:	4b0d      	ldr	r3, [pc, #52]	@ (8011730 <_ZN8touchgfx3HAL15lockFrameBufferEv+0x38>)
 80116fc:	781b      	ldrb	r3, [r3, #0]
 80116fe:	4604      	mov	r4, r0
 8011700:	b95b      	cbnz	r3, 801171a <_ZN8touchgfx3HAL15lockFrameBufferEv+0x22>
 8011702:	f890 3048 	ldrb.w	r3, [r0, #72]	@ 0x48
 8011706:	2b02      	cmp	r3, #2
 8011708:	d007      	beq.n	801171a <_ZN8touchgfx3HAL15lockFrameBufferEv+0x22>
 801170a:	6840      	ldr	r0, [r0, #4]
 801170c:	f000 f90e 	bl	801192c <_ZN8touchgfx13DMA_Interface15isDmaQueueEmptyEv>
 8011710:	b118      	cbz	r0, 801171a <_ZN8touchgfx3HAL15lockFrameBufferEv+0x22>
 8011712:	6862      	ldr	r2, [r4, #4]
 8011714:	7a53      	ldrb	r3, [r2, #9]
 8011716:	2b00      	cmp	r3, #0
 8011718:	d0fc      	beq.n	8011714 <_ZN8touchgfx3HAL15lockFrameBufferEv+0x1c>
 801171a:	f7fd faa5 	bl	800ec68 <_ZN8touchgfx10OSWrappers24takeFrameBufferSemaphoreEv>
 801171e:	4620      	mov	r0, r4
 8011720:	2100      	movs	r1, #0
 8011722:	f7ff ffd7 	bl	80116d4 <_ZN8touchgfx3HAL18setRenderingMethodENS0_15RenderingMethodE>
 8011726:	4620      	mov	r0, r4
 8011728:	f7ff fd8c 	bl	8011244 <_ZN8touchgfx3HAL20getClientFrameBufferEv>
 801172c:	bd10      	pop	{r4, pc}
 801172e:	bf00      	nop
 8011730:	20002fa6 	.word	0x20002fa6

08011734 <_ZN8touchgfx13DMA_Interface5flushEv>:
 8011734:	6803      	ldr	r3, [r0, #0]
 8011736:	6c5b      	ldr	r3, [r3, #68]	@ 0x44
 8011738:	4718      	bx	r3

0801173a <_ZN8touchgfx17LockFreeDMA_Queue7isEmptyEv>:
 801173a:	e9d0 2003 	ldrd	r2, r0, [r0, #12]
 801173e:	1a13      	subs	r3, r2, r0
 8011740:	4258      	negs	r0, r3
 8011742:	4158      	adcs	r0, r3
 8011744:	4770      	bx	lr

08011746 <_ZN8touchgfx17LockFreeDMA_Queue6isFullEv>:
 8011746:	e9d0 2303 	ldrd	r2, r3, [r0, #12]
 801174a:	1a9b      	subs	r3, r3, r2
 801174c:	2b00      	cmp	r3, #0
 801174e:	bfdc      	itt	le
 8011750:	6882      	ldrle	r2, [r0, #8]
 8011752:	189b      	addle	r3, r3, r2
 8011754:	2b01      	cmp	r3, #1
 8011756:	bfcc      	ite	gt
 8011758:	2000      	movgt	r0, #0
 801175a:	2001      	movle	r0, #1
 801175c:	4770      	bx	lr

0801175e <_ZN8touchgfx17LockFreeDMA_Queue5firstEv>:
 801175e:	6902      	ldr	r2, [r0, #16]
 8011760:	6843      	ldr	r3, [r0, #4]
 8011762:	2024      	movs	r0, #36	@ 0x24
 8011764:	fb00 3002 	mla	r0, r0, r2, r3
 8011768:	4770      	bx	lr

0801176a <_ZN8touchgfx13DMA_Interface13seedExecutionEv>:
 801176a:	6803      	ldr	r3, [r0, #0]
 801176c:	691b      	ldr	r3, [r3, #16]
 801176e:	4718      	bx	r3

08011770 <_ZN8touchgfx13DMA_Interface7executeEv>:
 8011770:	b570      	push	{r4, r5, r6, lr}
 8011772:	2301      	movs	r3, #1
 8011774:	7203      	strb	r3, [r0, #8]
 8011776:	4604      	mov	r4, r0
 8011778:	6840      	ldr	r0, [r0, #4]
 801177a:	6803      	ldr	r3, [r0, #0]
 801177c:	699b      	ldr	r3, [r3, #24]
 801177e:	4798      	blx	r3
 8011780:	6803      	ldr	r3, [r0, #0]
 8011782:	2b40      	cmp	r3, #64	@ 0x40
 8011784:	4605      	mov	r5, r0
 8011786:	d00c      	beq.n	80117a2 <_ZN8touchgfx13DMA_Interface7executeEv+0x32>
 8011788:	d810      	bhi.n	80117ac <_ZN8touchgfx13DMA_Interface7executeEv+0x3c>
 801178a:	2b04      	cmp	r3, #4
 801178c:	d01d      	beq.n	80117ca <_ZN8touchgfx13DMA_Interface7executeEv+0x5a>
 801178e:	d804      	bhi.n	801179a <_ZN8touchgfx13DMA_Interface7executeEv+0x2a>
 8011790:	2b01      	cmp	r3, #1
 8011792:	d006      	beq.n	80117a2 <_ZN8touchgfx13DMA_Interface7executeEv+0x32>
 8011794:	2b02      	cmp	r3, #2
 8011796:	d02c      	beq.n	80117f2 <_ZN8touchgfx13DMA_Interface7executeEv+0x82>
 8011798:	bd70      	pop	{r4, r5, r6, pc}
 801179a:	2b08      	cmp	r3, #8
 801179c:	d01d      	beq.n	80117da <_ZN8touchgfx13DMA_Interface7executeEv+0x6a>
 801179e:	2b20      	cmp	r3, #32
 80117a0:	d1fa      	bne.n	8011798 <_ZN8touchgfx13DMA_Interface7executeEv+0x28>
 80117a2:	6823      	ldr	r3, [r4, #0]
 80117a4:	4620      	mov	r0, r4
 80117a6:	6bdb      	ldr	r3, [r3, #60]	@ 0x3c
 80117a8:	4798      	blx	r3
 80117aa:	e013      	b.n	80117d4 <_ZN8touchgfx13DMA_Interface7executeEv+0x64>
 80117ac:	f5b3 7f00 	cmp.w	r3, #512	@ 0x200
 80117b0:	d0f7      	beq.n	80117a2 <_ZN8touchgfx13DMA_Interface7executeEv+0x32>
 80117b2:	d804      	bhi.n	80117be <_ZN8touchgfx13DMA_Interface7executeEv+0x4e>
 80117b4:	2b80      	cmp	r3, #128	@ 0x80
 80117b6:	d0f4      	beq.n	80117a2 <_ZN8touchgfx13DMA_Interface7executeEv+0x32>
 80117b8:	f5b3 7f80 	cmp.w	r3, #256	@ 0x100
 80117bc:	e7f0      	b.n	80117a0 <_ZN8touchgfx13DMA_Interface7executeEv+0x30>
 80117be:	f5b3 6f80 	cmp.w	r3, #1024	@ 0x400
 80117c2:	d0ee      	beq.n	80117a2 <_ZN8touchgfx13DMA_Interface7executeEv+0x32>
 80117c4:	f5b3 6f00 	cmp.w	r3, #2048	@ 0x800
 80117c8:	e7e5      	b.n	8011796 <_ZN8touchgfx13DMA_Interface7executeEv+0x26>
 80117ca:	6823      	ldr	r3, [r4, #0]
 80117cc:	7f01      	ldrb	r1, [r0, #28]
 80117ce:	6b9b      	ldr	r3, [r3, #56]	@ 0x38
 80117d0:	4620      	mov	r0, r4
 80117d2:	4798      	blx	r3
 80117d4:	6823      	ldr	r3, [r4, #0]
 80117d6:	6b1b      	ldr	r3, [r3, #48]	@ 0x30
 80117d8:	e006      	b.n	80117e8 <_ZN8touchgfx13DMA_Interface7executeEv+0x78>
 80117da:	6823      	ldr	r3, [r4, #0]
 80117dc:	7f01      	ldrb	r1, [r0, #28]
 80117de:	6b9b      	ldr	r3, [r3, #56]	@ 0x38
 80117e0:	4620      	mov	r0, r4
 80117e2:	4798      	blx	r3
 80117e4:	6823      	ldr	r3, [r4, #0]
 80117e6:	6b5b      	ldr	r3, [r3, #52]	@ 0x34
 80117e8:	4629      	mov	r1, r5
 80117ea:	4620      	mov	r0, r4
 80117ec:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
 80117f0:	4718      	bx	r3
 80117f2:	6823      	ldr	r3, [r4, #0]
 80117f4:	4620      	mov	r0, r4
 80117f6:	6bdb      	ldr	r3, [r3, #60]	@ 0x3c
 80117f8:	4798      	blx	r3
 80117fa:	e7f3      	b.n	80117e4 <_ZN8touchgfx13DMA_Interface7executeEv+0x74>

080117fc <_ZN8touchgfx13DMA_Interface11enableAlphaEh>:
 80117fc:	4770      	bx	lr

080117fe <_ZN8touchgfx13DMA_Interface12disableAlphaEv>:
 80117fe:	4770      	bx	lr

08011800 <_ZN8touchgfx17LockFreeDMA_Queue10pushCopyOfERKNS_6BlitOpE>:
 8011800:	e9d0 3203 	ldrd	r3, r2, [r0, #12]
 8011804:	1ad2      	subs	r2, r2, r3
 8011806:	2a00      	cmp	r2, #0
 8011808:	b510      	push	{r4, lr}
 801180a:	bfdc      	itt	le
 801180c:	6884      	ldrle	r4, [r0, #8]
 801180e:	1912      	addle	r2, r2, r4
 8011810:	2a01      	cmp	r2, #1
 8011812:	dd16      	ble.n	8011842 <_ZN8touchgfx17LockFreeDMA_Queue10pushCopyOfERKNS_6BlitOpE+0x42>
 8011814:	6842      	ldr	r2, [r0, #4]
 8011816:	2424      	movs	r4, #36	@ 0x24
 8011818:	fb04 2303 	mla	r3, r4, r3, r2
 801181c:	f101 0220 	add.w	r2, r1, #32
 8011820:	f851 4b04 	ldr.w	r4, [r1], #4
 8011824:	f843 4b04 	str.w	r4, [r3], #4
 8011828:	4291      	cmp	r1, r2
 801182a:	d1f9      	bne.n	8011820 <_ZN8touchgfx17LockFreeDMA_Queue10pushCopyOfERKNS_6BlitOpE+0x20>
 801182c:	780a      	ldrb	r2, [r1, #0]
 801182e:	701a      	strb	r2, [r3, #0]
 8011830:	68c3      	ldr	r3, [r0, #12]
 8011832:	6882      	ldr	r2, [r0, #8]
 8011834:	f3bf 8f5b 	dmb	ish
 8011838:	3301      	adds	r3, #1
 801183a:	429a      	cmp	r2, r3
 801183c:	bfd8      	it	le
 801183e:	1a9b      	suble	r3, r3, r2
 8011840:	60c3      	str	r3, [r0, #12]
 8011842:	bd10      	pop	{r4, pc}

08011844 <_ZN8touchgfx17LockFreeDMA_Queue3popEv>:
 8011844:	6903      	ldr	r3, [r0, #16]
 8011846:	6882      	ldr	r2, [r0, #8]
 8011848:	f3bf 8f5b 	dmb	ish
 801184c:	3301      	adds	r3, #1
 801184e:	429a      	cmp	r2, r3
 8011850:	bfd8      	it	le
 8011852:	1a9b      	suble	r3, r3, r2
 8011854:	6103      	str	r3, [r0, #16]
 8011856:	4770      	bx	lr

08011858 <_ZN8touchgfx13DMA_Interface10addToQueueERKNS_6BlitOpE>:
 8011858:	b570      	push	{r4, r5, r6, lr}
 801185a:	4604      	mov	r4, r0
 801185c:	460e      	mov	r6, r1
 801185e:	6860      	ldr	r0, [r4, #4]
 8011860:	6803      	ldr	r3, [r0, #0]
 8011862:	685b      	ldr	r3, [r3, #4]
 8011864:	4798      	blx	r3
 8011866:	2800      	cmp	r0, #0
 8011868:	d1f9      	bne.n	801185e <_ZN8touchgfx13DMA_Interface10addToQueueERKNS_6BlitOpE+0x6>
 801186a:	4d0d      	ldr	r5, [pc, #52]	@ (80118a0 <_ZN8touchgfx13DMA_Interface10addToQueueERKNS_6BlitOpE+0x48>)
 801186c:	6828      	ldr	r0, [r5, #0]
 801186e:	6803      	ldr	r3, [r0, #0]
 8011870:	6fdb      	ldr	r3, [r3, #124]	@ 0x7c
 8011872:	4798      	blx	r3
 8011874:	f7fd fa1a 	bl	800ecac <_ZN8touchgfx10OSWrappers27tryTakeFrameBufferSemaphoreEv>
 8011878:	6828      	ldr	r0, [r5, #0]
 801187a:	2101      	movs	r1, #1
 801187c:	f7ff ff2a 	bl	80116d4 <_ZN8touchgfx3HAL18setRenderingMethodENS0_15RenderingMethodE>
 8011880:	6860      	ldr	r0, [r4, #4]
 8011882:	6803      	ldr	r3, [r0, #0]
 8011884:	4631      	mov	r1, r6
 8011886:	689b      	ldr	r3, [r3, #8]
 8011888:	4798      	blx	r3
 801188a:	6823      	ldr	r3, [r4, #0]
 801188c:	4620      	mov	r0, r4
 801188e:	6adb      	ldr	r3, [r3, #44]	@ 0x2c
 8011890:	4798      	blx	r3
 8011892:	6828      	ldr	r0, [r5, #0]
 8011894:	6803      	ldr	r3, [r0, #0]
 8011896:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
 801189a:	6f9b      	ldr	r3, [r3, #120]	@ 0x78
 801189c:	4718      	bx	r3
 801189e:	bf00      	nop
 80118a0:	20002fa8 	.word	0x20002fa8

080118a4 <_ZN8touchgfx13DMA_Interface27waitForFrameBufferSemaphoreEv>:
 80118a4:	b508      	push	{r3, lr}
 80118a6:	f7fd f9df 	bl	800ec68 <_ZN8touchgfx10OSWrappers24takeFrameBufferSemaphoreEv>
 80118aa:	e8bd 4008 	ldmia.w	sp!, {r3, lr}
 80118ae:	f7fd b9f1 	b.w	800ec94 <_ZN8touchgfx10OSWrappers24giveFrameBufferSemaphoreEv>

080118b2 <_ZN8touchgfx13DMA_Interface5startEv>:
 80118b2:	b510      	push	{r4, lr}
 80118b4:	4604      	mov	r4, r0
 80118b6:	6840      	ldr	r0, [r0, #4]
 80118b8:	6803      	ldr	r3, [r0, #0]
 80118ba:	681b      	ldr	r3, [r3, #0]
 80118bc:	4798      	blx	r3
 80118be:	b948      	cbnz	r0, 80118d4 <_ZN8touchgfx13DMA_Interface5startEv+0x22>
 80118c0:	7a63      	ldrb	r3, [r4, #9]
 80118c2:	b13b      	cbz	r3, 80118d4 <_ZN8touchgfx13DMA_Interface5startEv+0x22>
 80118c4:	7a23      	ldrb	r3, [r4, #8]
 80118c6:	b92b      	cbnz	r3, 80118d4 <_ZN8touchgfx13DMA_Interface5startEv+0x22>
 80118c8:	6823      	ldr	r3, [r4, #0]
 80118ca:	4620      	mov	r0, r4
 80118cc:	6a5b      	ldr	r3, [r3, #36]	@ 0x24
 80118ce:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
 80118d2:	4718      	bx	r3
 80118d4:	bd10      	pop	{r4, pc}

080118d6 <_ZN8touchgfx13DMA_Interface16executeCompletedEv>:
 80118d6:	b570      	push	{r4, r5, r6, lr}
 80118d8:	4604      	mov	r4, r0
 80118da:	6840      	ldr	r0, [r0, #4]
 80118dc:	6803      	ldr	r3, [r0, #0]
 80118de:	681b      	ldr	r3, [r3, #0]
 80118e0:	4798      	blx	r3
 80118e2:	4605      	mov	r5, r0
 80118e4:	b930      	cbnz	r0, 80118f4 <_ZN8touchgfx13DMA_Interface16executeCompletedEv+0x1e>
 80118e6:	7a23      	ldrb	r3, [r4, #8]
 80118e8:	b123      	cbz	r3, 80118f4 <_ZN8touchgfx13DMA_Interface16executeCompletedEv+0x1e>
 80118ea:	6860      	ldr	r0, [r4, #4]
 80118ec:	6803      	ldr	r3, [r0, #0]
 80118ee:	695b      	ldr	r3, [r3, #20]
 80118f0:	4798      	blx	r3
 80118f2:	7225      	strb	r5, [r4, #8]
 80118f4:	6860      	ldr	r0, [r4, #4]
 80118f6:	6803      	ldr	r3, [r0, #0]
 80118f8:	681b      	ldr	r3, [r3, #0]
 80118fa:	4798      	blx	r3
 80118fc:	b928      	cbnz	r0, 801190a <_ZN8touchgfx13DMA_Interface16executeCompletedEv+0x34>
 80118fe:	6823      	ldr	r3, [r4, #0]
 8011900:	4620      	mov	r0, r4
 8011902:	6a5b      	ldr	r3, [r3, #36]	@ 0x24
 8011904:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
 8011908:	4718      	bx	r3
 801190a:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
 801190e:	f7fd b9d9 	b.w	800ecc4 <_ZN8touchgfx10OSWrappers31giveFrameBufferSemaphoreFromISREv>
	...

08011914 <_ZN8touchgfx17LockFreeDMA_QueueC1EPNS_6BlitOpEi>:
 8011914:	b510      	push	{r4, lr}
 8011916:	4c04      	ldr	r4, [pc, #16]	@ (8011928 <_ZN8touchgfx17LockFreeDMA_QueueC1EPNS_6BlitOpEi+0x14>)
 8011918:	6082      	str	r2, [r0, #8]
 801191a:	2200      	movs	r2, #0
 801191c:	e9c0 4100 	strd	r4, r1, [r0]
 8011920:	e9c0 2203 	strd	r2, r2, [r0, #12]
 8011924:	bd10      	pop	{r4, pc}
 8011926:	bf00      	nop
 8011928:	08029000 	.word	0x08029000

0801192c <_ZN8touchgfx13DMA_Interface15isDmaQueueEmptyEv>:
 801192c:	6840      	ldr	r0, [r0, #4]
 801192e:	6803      	ldr	r3, [r0, #0]
 8011930:	681b      	ldr	r3, [r3, #0]
 8011932:	4718      	bx	r3

08011934 <_ZNK8touchgfx14AbstractButton15getPressedStateEv>:
 8011934:	f890 002c 	ldrb.w	r0, [r0, #44]	@ 0x2c
 8011938:	4770      	bx	lr

0801193a <_ZN8touchgfx14AbstractButton13executeActionEv>:
 801193a:	b510      	push	{r4, lr}
 801193c:	4604      	mov	r4, r0
 801193e:	6a80      	ldr	r0, [r0, #40]	@ 0x28
 8011940:	b150      	cbz	r0, 8011958 <_ZN8touchgfx14AbstractButton13executeActionEv+0x1e>
 8011942:	6803      	ldr	r3, [r0, #0]
 8011944:	68db      	ldr	r3, [r3, #12]
 8011946:	4798      	blx	r3
 8011948:	b130      	cbz	r0, 8011958 <_ZN8touchgfx14AbstractButton13executeActionEv+0x1e>
 801194a:	6aa0      	ldr	r0, [r4, #40]	@ 0x28
 801194c:	6803      	ldr	r3, [r0, #0]
 801194e:	4621      	mov	r1, r4
 8011950:	689b      	ldr	r3, [r3, #8]
 8011952:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
 8011956:	4718      	bx	r3
 8011958:	bd10      	pop	{r4, pc}

0801195a <_ZN8touchgfx14AbstractButton16handleClickEventERKNS_10ClickEventE>:
 801195a:	b570      	push	{r4, r5, r6, lr}
 801195c:	790b      	ldrb	r3, [r1, #4]
 801195e:	f890 502c 	ldrb.w	r5, [r0, #44]	@ 0x2c
 8011962:	2b00      	cmp	r3, #0
 8011964:	bf0c      	ite	eq
 8011966:	2301      	moveq	r3, #1
 8011968:	2300      	movne	r3, #0
 801196a:	4604      	mov	r4, r0
 801196c:	460e      	mov	r6, r1
 801196e:	f880 302c 	strb.w	r3, [r0, #44]	@ 0x2c
 8011972:	d109      	bne.n	8011988 <_ZN8touchgfx14AbstractButton16handleClickEventERKNS_10ClickEventE+0x2e>
 8011974:	b14d      	cbz	r5, 801198a <_ZN8touchgfx14AbstractButton16handleClickEventERKNS_10ClickEventE+0x30>
 8011976:	7933      	ldrb	r3, [r6, #4]
 8011978:	2b01      	cmp	r3, #1
 801197a:	d10c      	bne.n	8011996 <_ZN8touchgfx14AbstractButton16handleClickEventERKNS_10ClickEventE+0x3c>
 801197c:	6823      	ldr	r3, [r4, #0]
 801197e:	4620      	mov	r0, r4
 8011980:	6e1b      	ldr	r3, [r3, #96]	@ 0x60
 8011982:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
 8011986:	4718      	bx	r3
 8011988:	b12d      	cbz	r5, 8011996 <_ZN8touchgfx14AbstractButton16handleClickEventERKNS_10ClickEventE+0x3c>
 801198a:	6823      	ldr	r3, [r4, #0]
 801198c:	4620      	mov	r0, r4
 801198e:	695b      	ldr	r3, [r3, #20]
 8011990:	4798      	blx	r3
 8011992:	2d00      	cmp	r5, #0
 8011994:	d1ef      	bne.n	8011976 <_ZN8touchgfx14AbstractButton16handleClickEventERKNS_10ClickEventE+0x1c>
 8011996:	bd70      	pop	{r4, r5, r6, pc}

08011998 <_ZN8touchgfx12ToggleButton16handleClickEventERKNS_10ClickEventE>:
 8011998:	f890 302c 	ldrb.w	r3, [r0, #44]	@ 0x2c
 801199c:	b133      	cbz	r3, 80119ac <_ZN8touchgfx12ToggleButton16handleClickEventERKNS_10ClickEventE+0x14>
 801199e:	790b      	ldrb	r3, [r1, #4]
 80119a0:	2b01      	cmp	r3, #1
 80119a2:	bf01      	itttt	eq
 80119a4:	8dc3      	ldrheq	r3, [r0, #46]	@ 0x2e
 80119a6:	8e02      	ldrheq	r2, [r0, #48]	@ 0x30
 80119a8:	85c2      	strheq	r2, [r0, #46]	@ 0x2e
 80119aa:	8603      	strheq	r3, [r0, #48]	@ 0x30
 80119ac:	f7ff bfd5 	b.w	801195a <_ZN8touchgfx14AbstractButton16handleClickEventERKNS_10ClickEventE>

080119b0 <_ZNK8touchgfx6Button17invalidateContentEv>:
 80119b0:	f890 2032 	ldrb.w	r2, [r0, #50]	@ 0x32
 80119b4:	b12a      	cbz	r2, 80119c2 <_ZNK8touchgfx6Button17invalidateContentEv+0x12>
 80119b6:	f890 2025 	ldrb.w	r2, [r0, #37]	@ 0x25
 80119ba:	b112      	cbz	r2, 80119c2 <_ZNK8touchgfx6Button17invalidateContentEv+0x12>
 80119bc:	6803      	ldr	r3, [r0, #0]
 80119be:	695b      	ldr	r3, [r3, #20]
 80119c0:	4718      	bx	r3
 80119c2:	4770      	bx	lr

080119c4 <_ZN8touchgfx12ToggleButton10forceStateEb>:
 80119c4:	8e83      	ldrh	r3, [r0, #52]	@ 0x34
 80119c6:	b129      	cbz	r1, 80119d4 <_ZN8touchgfx12ToggleButton10forceStateEb+0x10>
 80119c8:	8dc2      	ldrh	r2, [r0, #46]	@ 0x2e
 80119ca:	429a      	cmp	r2, r3
 80119cc:	d007      	beq.n	80119de <_ZN8touchgfx12ToggleButton10forceStateEb+0x1a>
 80119ce:	8602      	strh	r2, [r0, #48]	@ 0x30
 80119d0:	85c3      	strh	r3, [r0, #46]	@ 0x2e
 80119d2:	4770      	bx	lr
 80119d4:	8e02      	ldrh	r2, [r0, #48]	@ 0x30
 80119d6:	429a      	cmp	r2, r3
 80119d8:	bf1c      	itt	ne
 80119da:	85c2      	strhne	r2, [r0, #46]	@ 0x2e
 80119dc:	8603      	strhne	r3, [r0, #48]	@ 0x30
 80119de:	4770      	bx	lr

080119e0 <_ZNK8touchgfx8TextArea12getWildcard1Ev>:
 80119e0:	2000      	movs	r0, #0
 80119e2:	4770      	bx	lr

080119e4 <_ZNK8touchgfx8TextArea12getAlignmentEv>:
 80119e4:	4b07      	ldr	r3, [pc, #28]	@ (8011a04 <_ZNK8touchgfx8TextArea12getAlignmentEv+0x20>)
 80119e6:	8d82      	ldrh	r2, [r0, #44]	@ 0x2c
 80119e8:	881b      	ldrh	r3, [r3, #0]
 80119ea:	4293      	cmp	r3, r2
 80119ec:	bf81      	itttt	hi
 80119ee:	4b06      	ldrhi	r3, [pc, #24]	@ (8011a08 <_ZNK8touchgfx8TextArea12getAlignmentEv+0x24>)
 80119f0:	681b      	ldrhi	r3, [r3, #0]
 80119f2:	eb03 0342 	addhi.w	r3, r3, r2, lsl #1
 80119f6:	7858      	ldrbhi	r0, [r3, #1]
 80119f8:	bf8c      	ite	hi
 80119fa:	f000 0003 	andhi.w	r0, r0, #3
 80119fe:	2000      	movls	r0, #0
 8011a00:	4770      	bx	lr
 8011a02:	bf00      	nop
 8011a04:	20002ffc 	.word	0x20002ffc
 8011a08:	20002ff8 	.word	0x20002ff8

08011a0c <_ZNK8touchgfx8TextArea13getTextHeightEv>:
 8011a0c:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 8011a10:	4b10      	ldr	r3, [pc, #64]	@ (8011a54 <_ZNK8touchgfx8TextArea13getTextHeightEv+0x48>)
 8011a12:	8d81      	ldrh	r1, [r0, #44]	@ 0x2c
 8011a14:	881b      	ldrh	r3, [r3, #0]
 8011a16:	428b      	cmp	r3, r1
 8011a18:	4604      	mov	r4, r0
 8011a1a:	d918      	bls.n	8011a4e <_ZNK8touchgfx8TextArea13getTextHeightEv+0x42>
 8011a1c:	6803      	ldr	r3, [r0, #0]
 8011a1e:	6f9d      	ldr	r5, [r3, #120]	@ 0x78
 8011a20:	4b0d      	ldr	r3, [pc, #52]	@ (8011a58 <_ZNK8touchgfx8TextArea13getTextHeightEv+0x4c>)
 8011a22:	6818      	ldr	r0, [r3, #0]
 8011a24:	f7fb ff22 	bl	800d86c <_ZNK8touchgfx5Texts7getTextEt>
 8011a28:	6823      	ldr	r3, [r4, #0]
 8011a2a:	4606      	mov	r6, r0
 8011a2c:	6fdb      	ldr	r3, [r3, #124]	@ 0x7c
 8011a2e:	4620      	mov	r0, r4
 8011a30:	4798      	blx	r3
 8011a32:	6823      	ldr	r3, [r4, #0]
 8011a34:	4607      	mov	r7, r0
 8011a36:	f8d3 3080 	ldr.w	r3, [r3, #128]	@ 0x80
 8011a3a:	4620      	mov	r0, r4
 8011a3c:	4798      	blx	r3
 8011a3e:	463a      	mov	r2, r7
 8011a40:	4603      	mov	r3, r0
 8011a42:	4631      	mov	r1, r6
 8011a44:	4620      	mov	r0, r4
 8011a46:	46ac      	mov	ip, r5
 8011a48:	e8bd 41f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, lr}
 8011a4c:	4760      	bx	ip
 8011a4e:	2000      	movs	r0, #0
 8011a50:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
 8011a54:	20002ffc 	.word	0x20002ffc
 8011a58:	20003004 	.word	0x20003004

08011a5c <_ZNK8touchgfx8TextArea12getTextWidthEv>:
 8011a5c:	e92d 43f7 	stmdb	sp!, {r0, r1, r2, r4, r5, r6, r7, r8, r9, lr}
 8011a60:	4b17      	ldr	r3, [pc, #92]	@ (8011ac0 <_ZNK8touchgfx8TextArea12getTextWidthEv+0x64>)
 8011a62:	8d81      	ldrh	r1, [r0, #44]	@ 0x2c
 8011a64:	881b      	ldrh	r3, [r3, #0]
 8011a66:	428b      	cmp	r3, r1
 8011a68:	4604      	mov	r4, r0
 8011a6a:	d926      	bls.n	8011aba <_ZNK8touchgfx8TextArea12getTextWidthEv+0x5e>
 8011a6c:	4b15      	ldr	r3, [pc, #84]	@ (8011ac4 <_ZNK8touchgfx8TextArea12getTextWidthEv+0x68>)
 8011a6e:	681b      	ldr	r3, [r3, #0]
 8011a70:	eb03 0241 	add.w	r2, r3, r1, lsl #1
 8011a74:	f813 0011 	ldrb.w	r0, [r3, r1, lsl #1]
 8011a78:	4b13      	ldr	r3, [pc, #76]	@ (8011ac8 <_ZNK8touchgfx8TextArea12getTextWidthEv+0x6c>)
 8011a7a:	7855      	ldrb	r5, [r2, #1]
 8011a7c:	681b      	ldr	r3, [r3, #0]
 8011a7e:	f853 6020 	ldr.w	r6, [r3, r0, lsl #2]
 8011a82:	6833      	ldr	r3, [r6, #0]
 8011a84:	69df      	ldr	r7, [r3, #28]
 8011a86:	4b11      	ldr	r3, [pc, #68]	@ (8011acc <_ZNK8touchgfx8TextArea12getTextWidthEv+0x70>)
 8011a88:	6818      	ldr	r0, [r3, #0]
 8011a8a:	f7fb feef 	bl	800d86c <_ZNK8touchgfx5Texts7getTextEt>
 8011a8e:	6823      	ldr	r3, [r4, #0]
 8011a90:	4680      	mov	r8, r0
 8011a92:	6fdb      	ldr	r3, [r3, #124]	@ 0x7c
 8011a94:	4620      	mov	r0, r4
 8011a96:	4798      	blx	r3
 8011a98:	6823      	ldr	r3, [r4, #0]
 8011a9a:	4681      	mov	r9, r0
 8011a9c:	f8d3 3080 	ldr.w	r3, [r3, #128]	@ 0x80
 8011aa0:	4620      	mov	r0, r4
 8011aa2:	4798      	blx	r3
 8011aa4:	f3c5 0581 	ubfx	r5, r5, #2, #2
 8011aa8:	9000      	str	r0, [sp, #0]
 8011aaa:	464b      	mov	r3, r9
 8011aac:	4642      	mov	r2, r8
 8011aae:	4629      	mov	r1, r5
 8011ab0:	4630      	mov	r0, r6
 8011ab2:	47b8      	blx	r7
 8011ab4:	b003      	add	sp, #12
 8011ab6:	e8bd 83f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, pc}
 8011aba:	2000      	movs	r0, #0
 8011abc:	e7fa      	b.n	8011ab4 <_ZNK8touchgfx8TextArea12getTextWidthEv+0x58>
 8011abe:	bf00      	nop
 8011ac0:	20002ffc 	.word	0x20002ffc
 8011ac4:	20002ff8 	.word	0x20002ff8
 8011ac8:	20003000 	.word	0x20003000
 8011acc:	20003004 	.word	0x20003004

08011ad0 <_ZNK8touchgfx8TextArea19calculateTextHeightEPKtz>:
 8011ad0:	b40e      	push	{r1, r2, r3}
 8011ad2:	e92d 47f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
 8011ad6:	4b2f      	ldr	r3, [pc, #188]	@ (8011b94 <_ZNK8touchgfx8TextArea19calculateTextHeightEPKtz+0xc4>)
 8011ad8:	881a      	ldrh	r2, [r3, #0]
 8011ada:	8d83      	ldrh	r3, [r0, #44]	@ 0x2c
 8011adc:	429a      	cmp	r2, r3
 8011ade:	b09d      	sub	sp, #116	@ 0x74
 8011ae0:	4604      	mov	r4, r0
 8011ae2:	d954      	bls.n	8011b8e <_ZNK8touchgfx8TextArea19calculateTextHeightEPKtz+0xbe>
 8011ae4:	f8df 90b0 	ldr.w	r9, [pc, #176]	@ 8011b98 <_ZNK8touchgfx8TextArea19calculateTextHeightEPKtz+0xc8>
 8011ae8:	f8df 80b0 	ldr.w	r8, [pc, #176]	@ 8011b9c <_ZNK8touchgfx8TextArea19calculateTextHeightEPKtz+0xcc>
 8011aec:	aa26      	add	r2, sp, #152	@ 0x98
 8011aee:	9202      	str	r2, [sp, #8]
 8011af0:	f8d9 2000 	ldr.w	r2, [r9]
 8011af4:	f812 2013 	ldrb.w	r2, [r2, r3, lsl #1]
 8011af8:	f8d8 3000 	ldr.w	r3, [r8]
 8011afc:	f853 5022 	ldr.w	r5, [r3, r2, lsl #2]
 8011b00:	682b      	ldr	r3, [r5, #0]
 8011b02:	4628      	mov	r0, r5
 8011b04:	6b9b      	ldr	r3, [r3, #56]	@ 0x38
 8011b06:	4798      	blx	r3
 8011b08:	b207      	sxth	r7, r0
 8011b0a:	4606      	mov	r6, r0
 8011b0c:	a803      	add	r0, sp, #12
 8011b0e:	f003 ff2f 	bl	8015970 <_ZN8touchgfx12TextProviderC1Ev>
 8011b12:	682b      	ldr	r3, [r5, #0]
 8011b14:	4628      	mov	r0, r5
 8011b16:	6cdb      	ldr	r3, [r3, #76]	@ 0x4c
 8011b18:	4798      	blx	r3
 8011b1a:	682b      	ldr	r3, [r5, #0]
 8011b1c:	4682      	mov	sl, r0
 8011b1e:	6d1b      	ldr	r3, [r3, #80]	@ 0x50
 8011b20:	4628      	mov	r0, r5
 8011b22:	4798      	blx	r3
 8011b24:	4653      	mov	r3, sl
 8011b26:	9000      	str	r0, [sp, #0]
 8011b28:	9a02      	ldr	r2, [sp, #8]
 8011b2a:	9925      	ldr	r1, [sp, #148]	@ 0x94
 8011b2c:	a803      	add	r0, sp, #12
 8011b2e:	f003 ff7a 	bl	8015a26 <_ZN8touchgfx12TextProvider10initializeEPKtSt9__va_listS2_PKNS_24FontContextualFormsTableE>
 8011b32:	8da2      	ldrh	r2, [r4, #44]	@ 0x2c
 8011b34:	f8d9 3000 	ldr.w	r3, [r9]
 8011b38:	f894 c037 	ldrb.w	ip, [r4, #55]	@ 0x37
 8011b3c:	8925      	ldrh	r5, [r4, #8]
 8011b3e:	f813 0012 	ldrb.w	r0, [r3, r2, lsl #1]
 8011b42:	eb03 0142 	add.w	r1, r3, r2, lsl #1
 8011b46:	eba5 050c 	sub.w	r5, r5, ip
 8011b4a:	784a      	ldrb	r2, [r1, #1]
 8011b4c:	f8d8 3000 	ldr.w	r3, [r8]
 8011b50:	f894 1039 	ldrb.w	r1, [r4, #57]	@ 0x39
 8011b54:	b22d      	sxth	r5, r5
 8011b56:	9500      	str	r5, [sp, #0]
 8011b58:	f853 3020 	ldr.w	r3, [r3, r0, lsl #2]
 8011b5c:	f3c2 0281 	ubfx	r2, r2, #2, #2
 8011b60:	a803      	add	r0, sp, #12
 8011b62:	f001 fdb5 	bl	80136d0 <_ZN8touchgfx3LCD11getNumLinesERNS_12TextProviderENS_14WideTextActionEhPKNS_4FontEs>
 8011b66:	f9b4 2034 	ldrsh.w	r2, [r4, #52]	@ 0x34
 8011b6a:	18b9      	adds	r1, r7, r2
 8011b6c:	2900      	cmp	r1, #0
 8011b6e:	b203      	sxth	r3, r0
 8011b70:	dd0b      	ble.n	8011b8a <_ZNK8touchgfx8TextArea19calculateTextHeightEPKtz+0xba>
 8011b72:	3b01      	subs	r3, #1
 8011b74:	fb13 f302 	smulbb	r3, r3, r2
 8011b78:	fb16 3300 	smlabb	r3, r6, r0, r3
 8011b7c:	b21f      	sxth	r7, r3
 8011b7e:	4638      	mov	r0, r7
 8011b80:	b01d      	add	sp, #116	@ 0x74
 8011b82:	e8bd 47f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
 8011b86:	b003      	add	sp, #12
 8011b88:	4770      	bx	lr
 8011b8a:	2b00      	cmp	r3, #0
 8011b8c:	dcf7      	bgt.n	8011b7e <_ZNK8touchgfx8TextArea19calculateTextHeightEPKtz+0xae>
 8011b8e:	2700      	movs	r7, #0
 8011b90:	e7f5      	b.n	8011b7e <_ZNK8touchgfx8TextArea19calculateTextHeightEPKtz+0xae>
 8011b92:	bf00      	nop
 8011b94:	20002ffc 	.word	0x20002ffc
 8011b98:	20002ff8 	.word	0x20002ff8
 8011b9c:	20003000 	.word	0x20003000

08011ba0 <_ZNK8touchgfx8TextArea21calculateBoundingAreaEv>:
 8011ba0:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8011ba4:	4bbc      	ldr	r3, [pc, #752]	@ (8011e98 <_ZNK8touchgfx8TextArea21calculateBoundingAreaEv+0x2f8>)
 8011ba6:	460c      	mov	r4, r1
 8011ba8:	881b      	ldrh	r3, [r3, #0]
 8011baa:	8d89      	ldrh	r1, [r1, #44]	@ 0x2c
 8011bac:	428b      	cmp	r3, r1
 8011bae:	b0a9      	sub	sp, #164	@ 0xa4
 8011bb0:	4680      	mov	r8, r0
 8011bb2:	d809      	bhi.n	8011bc8 <_ZNK8touchgfx8TextArea21calculateBoundingAreaEv+0x28>
 8011bb4:	2300      	movs	r3, #0
 8011bb6:	f04f 32ff 	mov.w	r2, #4294967295
 8011bba:	e9c0 3200 	strd	r3, r2, [r0]
 8011bbe:	6083      	str	r3, [r0, #8]
 8011bc0:	4640      	mov	r0, r8
 8011bc2:	b029      	add	sp, #164	@ 0xa4
 8011bc4:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 8011bc8:	4eb4      	ldr	r6, [pc, #720]	@ (8011e9c <_ZNK8touchgfx8TextArea21calculateBoundingAreaEv+0x2fc>)
 8011bca:	6833      	ldr	r3, [r6, #0]
 8011bcc:	f813 2011 	ldrb.w	r2, [r3, r1, lsl #1]
 8011bd0:	4bb3      	ldr	r3, [pc, #716]	@ (8011ea0 <_ZNK8touchgfx8TextArea21calculateBoundingAreaEv+0x300>)
 8011bd2:	681b      	ldr	r3, [r3, #0]
 8011bd4:	f853 5022 	ldr.w	r5, [r3, r2, lsl #2]
 8011bd8:	4bb2      	ldr	r3, [pc, #712]	@ (8011ea4 <_ZNK8touchgfx8TextArea21calculateBoundingAreaEv+0x304>)
 8011bda:	6818      	ldr	r0, [r3, #0]
 8011bdc:	f7fb fe46 	bl	800d86c <_ZNK8touchgfx5Texts7getTextEt>
 8011be0:	682b      	ldr	r3, [r5, #0]
 8011be2:	4681      	mov	r9, r0
 8011be4:	6b9b      	ldr	r3, [r3, #56]	@ 0x38
 8011be6:	4628      	mov	r0, r5
 8011be8:	4798      	blx	r3
 8011bea:	8ea7      	ldrh	r7, [r4, #52]	@ 0x34
 8011bec:	b203      	sxth	r3, r0
 8011bee:	4407      	add	r7, r0
 8011bf0:	9304      	str	r3, [sp, #16]
 8011bf2:	b2bb      	uxth	r3, r7
 8011bf4:	9303      	str	r3, [sp, #12]
 8011bf6:	f894 3039 	ldrb.w	r3, [r4, #57]	@ 0x39
 8011bfa:	4682      	mov	sl, r0
 8011bfc:	a80f      	add	r0, sp, #60	@ 0x3c
 8011bfe:	2b00      	cmp	r3, #0
 8011c00:	f040 80a6 	bne.w	8011d50 <_ZNK8touchgfx8TextArea21calculateBoundingAreaEv+0x1b0>
 8011c04:	f003 feb4 	bl	8015970 <_ZN8touchgfx12TextProviderC1Ev>
 8011c08:	682b      	ldr	r3, [r5, #0]
 8011c0a:	4628      	mov	r0, r5
 8011c0c:	6cdb      	ldr	r3, [r3, #76]	@ 0x4c
 8011c0e:	4798      	blx	r3
 8011c10:	682b      	ldr	r3, [r5, #0]
 8011c12:	4606      	mov	r6, r0
 8011c14:	6d1b      	ldr	r3, [r3, #80]	@ 0x50
 8011c16:	4628      	mov	r0, r5
 8011c18:	4798      	blx	r3
 8011c1a:	6823      	ldr	r3, [r4, #0]
 8011c1c:	4607      	mov	r7, r0
 8011c1e:	6fdb      	ldr	r3, [r3, #124]	@ 0x7c
 8011c20:	4620      	mov	r0, r4
 8011c22:	4798      	blx	r3
 8011c24:	6823      	ldr	r3, [r4, #0]
 8011c26:	4683      	mov	fp, r0
 8011c28:	f8d3 3080 	ldr.w	r3, [r3, #128]	@ 0x80
 8011c2c:	4620      	mov	r0, r4
 8011c2e:	4798      	blx	r3
 8011c30:	463b      	mov	r3, r7
 8011c32:	e9cd b000 	strd	fp, r0, [sp]
 8011c36:	4649      	mov	r1, r9
 8011c38:	4632      	mov	r2, r6
 8011c3a:	a80f      	add	r0, sp, #60	@ 0x3c
 8011c3c:	f003 ff08 	bl	8015a50 <_ZN8touchgfx12TextProvider10initializeEPKtS2_PKNS_24FontContextualFormsTableEz>
 8011c40:	f894 3038 	ldrb.w	r3, [r4, #56]	@ 0x38
 8011c44:	f8df b254 	ldr.w	fp, [pc, #596]	@ 8011e9c <_ZNK8touchgfx8TextArea21calculateBoundingAreaEv+0x2fc>
 8011c48:	f013 0ffd 	tst.w	r3, #253	@ 0xfd
 8011c4c:	f04f 0600 	mov.w	r6, #0
 8011c50:	bf0c      	ite	eq
 8011c52:	f9b4 900a 	ldrsheq.w	r9, [r4, #10]
 8011c56:	f9b4 9008 	ldrshne.w	r9, [r4, #8]
 8011c5a:	4637      	mov	r7, r6
 8011c5c:	8da2      	ldrh	r2, [r4, #44]	@ 0x2c
 8011c5e:	f8db 3000 	ldr.w	r3, [fp]
 8011c62:	eb03 0342 	add.w	r3, r3, r2, lsl #1
 8011c66:	4629      	mov	r1, r5
 8011c68:	785b      	ldrb	r3, [r3, #1]
 8011c6a:	f647 72ff 	movw	r2, #32767	@ 0x7fff
 8011c6e:	f3c3 0381 	ubfx	r3, r3, #2, #2
 8011c72:	a80f      	add	r0, sp, #60	@ 0x3c
 8011c74:	f001 fa33 	bl	80130de <_ZN8touchgfx3LCD11stringWidthERNS_12TextProviderERKNS_4FontEih>
 8011c78:	9b03      	ldr	r3, [sp, #12]
 8011c7a:	4286      	cmp	r6, r0
 8011c7c:	bfb8      	it	lt
 8011c7e:	4606      	movlt	r6, r0
 8011c80:	3701      	adds	r7, #1
 8011c82:	eba9 0903 	sub.w	r9, r9, r3
 8011c86:	a80f      	add	r0, sp, #60	@ 0x3c
 8011c88:	b236      	sxth	r6, r6
 8011c8a:	b2bf      	uxth	r7, r7
 8011c8c:	fa0f f989 	sxth.w	r9, r9
 8011c90:	f003 fe95 	bl	80159be <_ZN8touchgfx12TextProvider11endOfStringEv>
 8011c94:	b918      	cbnz	r0, 8011c9e <_ZNK8touchgfx8TextArea21calculateBoundingAreaEv+0xfe>
 8011c96:	7a2b      	ldrb	r3, [r5, #8]
 8011c98:	444b      	add	r3, r9
 8011c9a:	2b00      	cmp	r3, #0
 8011c9c:	dcde      	bgt.n	8011c5c <_ZNK8touchgfx8TextArea21calculateBoundingAreaEv+0xbc>
 8011c9e:	9b03      	ldr	r3, [sp, #12]
 8011ca0:	9a04      	ldr	r2, [sp, #16]
 8011ca2:	f895 9009 	ldrb.w	r9, [r5, #9]
 8011ca6:	fb13 f707 	smulbb	r7, r3, r7
 8011caa:	8ea3      	ldrh	r3, [r4, #52]	@ 0x34
 8011cac:	1aff      	subs	r7, r7, r3
 8011cae:	b2bf      	uxth	r7, r7
 8011cb0:	b23b      	sxth	r3, r7
 8011cb2:	429a      	cmp	r2, r3
 8011cb4:	bfa8      	it	ge
 8011cb6:	4657      	movge	r7, sl
 8011cb8:	f894 3038 	ldrb.w	r3, [r4, #56]	@ 0x38
 8011cbc:	f013 0ffd 	tst.w	r3, #253	@ 0xfd
 8011cc0:	6823      	ldr	r3, [r4, #0]
 8011cc2:	bf08      	it	eq
 8011cc4:	f9b4 a008 	ldrsheq.w	sl, [r4, #8]
 8011cc8:	6edb      	ldr	r3, [r3, #108]	@ 0x6c
 8011cca:	bf18      	it	ne
 8011ccc:	f9b4 a00a 	ldrshne.w	sl, [r4, #10]
 8011cd0:	4620      	mov	r0, r4
 8011cd2:	4798      	blx	r3
 8011cd4:	444f      	add	r7, r9
 8011cd6:	fa1f f987 	uxth.w	r9, r7
 8011cda:	2801      	cmp	r0, #1
 8011cdc:	fa0f f789 	sxth.w	r7, r9
 8011ce0:	b2b3      	uxth	r3, r6
 8011ce2:	f000 80e1 	beq.w	8011ea8 <_ZNK8touchgfx8TextArea21calculateBoundingAreaEv+0x308>
 8011ce6:	2802      	cmp	r0, #2
 8011ce8:	f894 6037 	ldrb.w	r6, [r4, #55]	@ 0x37
 8011cec:	f000 80e2 	beq.w	8011eb4 <_ZNK8touchgfx8TextArea21calculateBoundingAreaEv+0x314>
 8011cf0:	7aea      	ldrb	r2, [r5, #11]
 8011cf2:	7b2d      	ldrb	r5, [r5, #12]
 8011cf4:	b236      	sxth	r6, r6
 8011cf6:	1ab6      	subs	r6, r6, r2
 8011cf8:	442a      	add	r2, r5
 8011cfa:	4413      	add	r3, r2
 8011cfc:	f894 2038 	ldrb.w	r2, [r4, #56]	@ 0x38
 8011d00:	fa1f fa86 	uxth.w	sl, r6
 8011d04:	b29b      	uxth	r3, r3
 8011d06:	2a02      	cmp	r2, #2
 8011d08:	fa0f fb8a 	sxth.w	fp, sl
 8011d0c:	b21e      	sxth	r6, r3
 8011d0e:	f000 80d5 	beq.w	8011ebc <_ZNK8touchgfx8TextArea21calculateBoundingAreaEv+0x31c>
 8011d12:	2a03      	cmp	r2, #3
 8011d14:	f000 80dd 	beq.w	8011ed2 <_ZNK8touchgfx8TextArea21calculateBoundingAreaEv+0x332>
 8011d18:	2a01      	cmp	r2, #1
 8011d1a:	f040 80e5 	bne.w	8011ee8 <_ZNK8touchgfx8TextArea21calculateBoundingAreaEv+0x348>
 8011d1e:	8925      	ldrh	r5, [r4, #8]
 8011d20:	4633      	mov	r3, r6
 8011d22:	eba5 0909 	sub.w	r9, r5, r9
 8011d26:	463e      	mov	r6, r7
 8011d28:	465d      	mov	r5, fp
 8011d2a:	461f      	mov	r7, r3
 8011d2c:	fa0f fb89 	sxth.w	fp, r9
 8011d30:	4b5c      	ldr	r3, [pc, #368]	@ (8011ea4 <_ZNK8touchgfx8TextArea21calculateBoundingAreaEv+0x304>)
 8011d32:	8da1      	ldrh	r1, [r4, #44]	@ 0x2c
 8011d34:	6818      	ldr	r0, [r3, #0]
 8011d36:	f7fb fd99 	bl	800d86c <_ZNK8touchgfx5Texts7getTextEt>
 8011d3a:	f8a8 b000 	strh.w	fp, [r8]
 8011d3e:	f8a8 5002 	strh.w	r5, [r8, #2]
 8011d42:	f8a8 6004 	strh.w	r6, [r8, #4]
 8011d46:	f8a8 7006 	strh.w	r7, [r8, #6]
 8011d4a:	f8c8 0008 	str.w	r0, [r8, #8]
 8011d4e:	e737      	b.n	8011bc0 <_ZNK8touchgfx8TextArea21calculateBoundingAreaEv+0x20>
 8011d50:	f003 fe0e 	bl	8015970 <_ZN8touchgfx12TextProviderC1Ev>
 8011d54:	682b      	ldr	r3, [r5, #0]
 8011d56:	4628      	mov	r0, r5
 8011d58:	6cdb      	ldr	r3, [r3, #76]	@ 0x4c
 8011d5a:	4798      	blx	r3
 8011d5c:	682b      	ldr	r3, [r5, #0]
 8011d5e:	4607      	mov	r7, r0
 8011d60:	6d1b      	ldr	r3, [r3, #80]	@ 0x50
 8011d62:	4628      	mov	r0, r5
 8011d64:	4798      	blx	r3
 8011d66:	6823      	ldr	r3, [r4, #0]
 8011d68:	4683      	mov	fp, r0
 8011d6a:	6fdb      	ldr	r3, [r3, #124]	@ 0x7c
 8011d6c:	4620      	mov	r0, r4
 8011d6e:	4798      	blx	r3
 8011d70:	6822      	ldr	r2, [r4, #0]
 8011d72:	9005      	str	r0, [sp, #20]
 8011d74:	f8d2 2080 	ldr.w	r2, [r2, #128]	@ 0x80
 8011d78:	4620      	mov	r0, r4
 8011d7a:	4790      	blx	r2
 8011d7c:	9b05      	ldr	r3, [sp, #20]
 8011d7e:	9001      	str	r0, [sp, #4]
 8011d80:	463a      	mov	r2, r7
 8011d82:	4649      	mov	r1, r9
 8011d84:	9300      	str	r3, [sp, #0]
 8011d86:	a80f      	add	r0, sp, #60	@ 0x3c
 8011d88:	465b      	mov	r3, fp
 8011d8a:	f003 fe61 	bl	8015a50 <_ZN8touchgfx12TextProvider10initializeEPKtS2_PKNS_24FontContextualFormsTableEz>
 8011d8e:	f894 3038 	ldrb.w	r3, [r4, #56]	@ 0x38
 8011d92:	f9b4 9008 	ldrsh.w	r9, [r4, #8]
 8011d96:	8da1      	ldrh	r1, [r4, #44]	@ 0x2c
 8011d98:	f894 0039 	ldrb.w	r0, [r4, #57]	@ 0x39
 8011d9c:	f013 0ffd 	tst.w	r3, #253	@ 0xfd
 8011da0:	f9b4 300a 	ldrsh.w	r3, [r4, #10]
 8011da4:	bf0a      	itet	eq
 8011da6:	464a      	moveq	r2, r9
 8011da8:	461a      	movne	r2, r3
 8011daa:	4699      	moveq	r9, r3
 8011dac:	f894 3037 	ldrb.w	r3, [r4, #55]	@ 0x37
 8011db0:	1ad2      	subs	r2, r2, r3
 8011db2:	6833      	ldr	r3, [r6, #0]
 8011db4:	f9b4 6034 	ldrsh.w	r6, [r4, #52]	@ 0x34
 8011db8:	eb03 0341 	add.w	r3, r3, r1, lsl #1
 8011dbc:	af0f      	add	r7, sp, #60	@ 0x3c
 8011dbe:	7859      	ldrb	r1, [r3, #1]
 8011dc0:	9707      	str	r7, [sp, #28]
 8011dc2:	2300      	movs	r3, #0
 8011dc4:	f3c1 0181 	ubfx	r1, r1, #2, #2
 8011dc8:	f8ad 3018 	strh.w	r3, [sp, #24]
 8011dcc:	f88d 1020 	strb.w	r1, [sp, #32]
 8011dd0:	f88d 0021 	strb.w	r0, [sp, #33]	@ 0x21
 8011dd4:	9509      	str	r5, [sp, #36]	@ 0x24
 8011dd6:	f8ad 2028 	strh.w	r2, [sp, #40]	@ 0x28
 8011dda:	f8ad 902a 	strh.w	r9, [sp, #42]	@ 0x2a
 8011dde:	f8ad 602c 	strh.w	r6, [sp, #44]	@ 0x2c
 8011de2:	f8ad 302e 	strh.w	r3, [sp, #46]	@ 0x2e
 8011de6:	f8ad 3030 	strh.w	r3, [sp, #48]	@ 0x30
 8011dea:	f8ad 3032 	strh.w	r3, [sp, #50]	@ 0x32
 8011dee:	f8ad 3034 	strh.w	r3, [sp, #52]	@ 0x34
 8011df2:	f8ad 3036 	strh.w	r3, [sp, #54]	@ 0x36
 8011df6:	f8ad 3038 	strh.w	r3, [sp, #56]	@ 0x38
 8011dfa:	f88d 303a 	strb.w	r3, [sp, #58]	@ 0x3a
 8011dfe:	b350      	cbz	r0, 8011e56 <_ZNK8touchgfx8TextArea21calculateBoundingAreaEv+0x2b6>
 8011e00:	682b      	ldr	r3, [r5, #0]
 8011e02:	4628      	mov	r0, r5
 8011e04:	695b      	ldr	r3, [r3, #20]
 8011e06:	4798      	blx	r3
 8011e08:	4607      	mov	r7, r0
 8011e0a:	b320      	cbz	r0, 8011e56 <_ZNK8touchgfx8TextArea21calculateBoundingAreaEv+0x2b6>
 8011e0c:	9809      	ldr	r0, [sp, #36]	@ 0x24
 8011e0e:	6803      	ldr	r3, [r0, #0]
 8011e10:	4639      	mov	r1, r7
 8011e12:	68db      	ldr	r3, [r3, #12]
 8011e14:	4798      	blx	r3
 8011e16:	4606      	mov	r6, r0
 8011e18:	b1e8      	cbz	r0, 8011e56 <_ZNK8touchgfx8TextArea21calculateBoundingAreaEv+0x2b6>
 8011e1a:	7b43      	ldrb	r3, [r0, #13]
 8011e1c:	7a82      	ldrb	r2, [r0, #10]
 8011e1e:	005b      	lsls	r3, r3, #1
 8011e20:	f403 7380 	and.w	r3, r3, #256	@ 0x100
 8011e24:	4313      	orrs	r3, r2
 8011e26:	f8ad 3038 	strh.w	r3, [sp, #56]	@ 0x38
 8011e2a:	f89d 3021 	ldrb.w	r3, [sp, #33]	@ 0x21
 8011e2e:	2b06      	cmp	r3, #6
 8011e30:	d111      	bne.n	8011e56 <_ZNK8touchgfx8TextArea21calculateBoundingAreaEv+0x2b6>
 8011e32:	9809      	ldr	r0, [sp, #36]	@ 0x24
 8011e34:	6803      	ldr	r3, [r0, #0]
 8011e36:	4632      	mov	r2, r6
 8011e38:	6c5b      	ldr	r3, [r3, #68]	@ 0x44
 8011e3a:	4639      	mov	r1, r7
 8011e3c:	4798      	blx	r3
 8011e3e:	7b73      	ldrb	r3, [r6, #13]
 8011e40:	005b      	lsls	r3, r3, #1
 8011e42:	f403 7280 	and.w	r2, r3, #256	@ 0x100
 8011e46:	7ab3      	ldrb	r3, [r6, #10]
 8011e48:	4313      	orrs	r3, r2
 8011e4a:	4418      	add	r0, r3
 8011e4c:	f8bd 3038 	ldrh.w	r3, [sp, #56]	@ 0x38
 8011e50:	4418      	add	r0, r3
 8011e52:	f8ad 0038 	strh.w	r0, [sp, #56]	@ 0x38
 8011e56:	2600      	movs	r6, #0
 8011e58:	4637      	mov	r7, r6
 8011e5a:	a806      	add	r0, sp, #24
 8011e5c:	f001 fb34 	bl	80134c8 <_ZN8touchgfx3LCD22WideTextInternalStruct23scanStringLengthForLineEv>
 8011e60:	f8bd 0036 	ldrh.w	r0, [sp, #54]	@ 0x36
 8011e64:	9b03      	ldr	r3, [sp, #12]
 8011e66:	4286      	cmp	r6, r0
 8011e68:	eba9 0903 	sub.w	r9, r9, r3
 8011e6c:	f8bd 3018 	ldrh.w	r3, [sp, #24]
 8011e70:	bfb8      	it	lt
 8011e72:	4606      	movlt	r6, r0
 8011e74:	3701      	adds	r7, #1
 8011e76:	b236      	sxth	r6, r6
 8011e78:	b2bf      	uxth	r7, r7
 8011e7a:	fa0f f989 	sxth.w	r9, r9
 8011e7e:	2b00      	cmp	r3, #0
 8011e80:	f43f af0d 	beq.w	8011c9e <_ZNK8touchgfx8TextArea21calculateBoundingAreaEv+0xfe>
 8011e84:	f89d 303a 	ldrb.w	r3, [sp, #58]	@ 0x3a
 8011e88:	2b00      	cmp	r3, #0
 8011e8a:	f47f af08 	bne.w	8011c9e <_ZNK8touchgfx8TextArea21calculateBoundingAreaEv+0xfe>
 8011e8e:	7a2b      	ldrb	r3, [r5, #8]
 8011e90:	444b      	add	r3, r9
 8011e92:	2b00      	cmp	r3, #0
 8011e94:	dce1      	bgt.n	8011e5a <_ZNK8touchgfx8TextArea21calculateBoundingAreaEv+0x2ba>
 8011e96:	e702      	b.n	8011c9e <_ZNK8touchgfx8TextArea21calculateBoundingAreaEv+0xfe>
 8011e98:	20002ffc 	.word	0x20002ffc
 8011e9c:	20002ff8 	.word	0x20002ff8
 8011ea0:	20003000 	.word	0x20003000
 8011ea4:	20003004 	.word	0x20003004
 8011ea8:	ebaa 0606 	sub.w	r6, sl, r6
 8011eac:	2002      	movs	r0, #2
 8011eae:	fb96 f6f0 	sdiv	r6, r6, r0
 8011eb2:	e71d      	b.n	8011cf0 <_ZNK8touchgfx8TextArea21calculateBoundingAreaEv+0x150>
 8011eb4:	441e      	add	r6, r3
 8011eb6:	ebaa 0606 	sub.w	r6, sl, r6
 8011eba:	e719      	b.n	8011cf0 <_ZNK8touchgfx8TextArea21calculateBoundingAreaEv+0x150>
 8011ebc:	8925      	ldrh	r5, [r4, #8]
 8011ebe:	1aed      	subs	r5, r5, r3
 8011ec0:	eba5 050a 	sub.w	r5, r5, sl
 8011ec4:	fa0f fb85 	sxth.w	fp, r5
 8011ec8:	8965      	ldrh	r5, [r4, #10]
 8011eca:	eba5 0509 	sub.w	r5, r5, r9
 8011ece:	b22d      	sxth	r5, r5
 8011ed0:	e72e      	b.n	8011d30 <_ZNK8touchgfx8TextArea21calculateBoundingAreaEv+0x190>
 8011ed2:	8965      	ldrh	r5, [r4, #10]
 8011ed4:	1aed      	subs	r5, r5, r3
 8011ed6:	eba5 050a 	sub.w	r5, r5, sl
 8011eda:	4633      	mov	r3, r6
 8011edc:	b22d      	sxth	r5, r5
 8011ede:	463e      	mov	r6, r7
 8011ee0:	f04f 0b00 	mov.w	fp, #0
 8011ee4:	461f      	mov	r7, r3
 8011ee6:	e723      	b.n	8011d30 <_ZNK8touchgfx8TextArea21calculateBoundingAreaEv+0x190>
 8011ee8:	2500      	movs	r5, #0
 8011eea:	e721      	b.n	8011d30 <_ZNK8touchgfx8TextArea21calculateBoundingAreaEv+0x190>

08011eec <_ZNK8touchgfx8TextArea17invalidateContentEv>:
 8011eec:	b513      	push	{r0, r1, r4, lr}
 8011eee:	f890 3036 	ldrb.w	r3, [r0, #54]	@ 0x36
 8011ef2:	4604      	mov	r4, r0
 8011ef4:	b1fb      	cbz	r3, 8011f36 <_ZNK8touchgfx8TextArea17invalidateContentEv+0x4a>
 8011ef6:	4b16      	ldr	r3, [pc, #88]	@ (8011f50 <_ZNK8touchgfx8TextArea17invalidateContentEv+0x64>)
 8011ef8:	8d81      	ldrh	r1, [r0, #44]	@ 0x2c
 8011efa:	881b      	ldrh	r3, [r3, #0]
 8011efc:	428b      	cmp	r3, r1
 8011efe:	d91a      	bls.n	8011f36 <_ZNK8touchgfx8TextArea17invalidateContentEv+0x4a>
 8011f00:	f9b0 3008 	ldrsh.w	r3, [r0, #8]
 8011f04:	2b00      	cmp	r3, #0
 8011f06:	dd16      	ble.n	8011f36 <_ZNK8touchgfx8TextArea17invalidateContentEv+0x4a>
 8011f08:	f9b0 300a 	ldrsh.w	r3, [r0, #10]
 8011f0c:	2b00      	cmp	r3, #0
 8011f0e:	dd12      	ble.n	8011f36 <_ZNK8touchgfx8TextArea17invalidateContentEv+0x4a>
 8011f10:	4b10      	ldr	r3, [pc, #64]	@ (8011f54 <_ZNK8touchgfx8TextArea17invalidateContentEv+0x68>)
 8011f12:	6818      	ldr	r0, [r3, #0]
 8011f14:	f7fb fcaa 	bl	800d86c <_ZNK8touchgfx5Texts7getTextEt>
 8011f18:	f9b4 3042 	ldrsh.w	r3, [r4, #66]	@ 0x42
 8011f1c:	6822      	ldr	r2, [r4, #0]
 8011f1e:	2b00      	cmp	r3, #0
 8011f20:	db06      	blt.n	8011f30 <_ZNK8touchgfx8TextArea17invalidateContentEv+0x44>
 8011f22:	f9b4 3040 	ldrsh.w	r3, [r4, #64]	@ 0x40
 8011f26:	2b00      	cmp	r3, #0
 8011f28:	db02      	blt.n	8011f30 <_ZNK8touchgfx8TextArea17invalidateContentEv+0x44>
 8011f2a:	6c63      	ldr	r3, [r4, #68]	@ 0x44
 8011f2c:	4298      	cmp	r0, r3
 8011f2e:	d004      	beq.n	8011f3a <_ZNK8touchgfx8TextArea17invalidateContentEv+0x4e>
 8011f30:	6953      	ldr	r3, [r2, #20]
 8011f32:	4620      	mov	r0, r4
 8011f34:	4798      	blx	r3
 8011f36:	b002      	add	sp, #8
 8011f38:	bd10      	pop	{r4, pc}
 8011f3a:	f104 013c 	add.w	r1, r4, #60	@ 0x3c
 8011f3e:	c903      	ldmia	r1, {r0, r1}
 8011f40:	466b      	mov	r3, sp
 8011f42:	e883 0003 	stmia.w	r3, {r0, r1}
 8011f46:	6912      	ldr	r2, [r2, #16]
 8011f48:	4619      	mov	r1, r3
 8011f4a:	4620      	mov	r0, r4
 8011f4c:	4790      	blx	r2
 8011f4e:	e7f2      	b.n	8011f36 <_ZNK8touchgfx8TextArea17invalidateContentEv+0x4a>
 8011f50:	20002ffc 	.word	0x20002ffc
 8011f54:	20003004 	.word	0x20003004

08011f58 <_ZNK8touchgfx8TextArea4drawERKNS_4RectE>:
 8011f58:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 8011f5c:	4b44      	ldr	r3, [pc, #272]	@ (8012070 <_ZNK8touchgfx8TextArea4drawERKNS_4RectE+0x118>)
 8011f5e:	8d82      	ldrh	r2, [r0, #44]	@ 0x2c
 8011f60:	881b      	ldrh	r3, [r3, #0]
 8011f62:	4293      	cmp	r3, r2
 8011f64:	b08e      	sub	sp, #56	@ 0x38
 8011f66:	4604      	mov	r4, r0
 8011f68:	d97e      	bls.n	8012068 <_ZNK8touchgfx8TextArea4drawERKNS_4RectE+0x110>
 8011f6a:	6808      	ldr	r0, [r1, #0]
 8011f6c:	4d41      	ldr	r5, [pc, #260]	@ (8012074 <_ZNK8touchgfx8TextArea4drawERKNS_4RectE+0x11c>)
 8011f6e:	6849      	ldr	r1, [r1, #4]
 8011f70:	ab05      	add	r3, sp, #20
 8011f72:	c303      	stmia	r3!, {r0, r1}
 8011f74:	4611      	mov	r1, r2
 8011f76:	6828      	ldr	r0, [r5, #0]
 8011f78:	f7fb fc78 	bl	800d86c <_ZNK8touchgfx5Texts7getTextEt>
 8011f7c:	f9b4 3042 	ldrsh.w	r3, [r4, #66]	@ 0x42
 8011f80:	2b00      	cmp	r3, #0
 8011f82:	db11      	blt.n	8011fa8 <_ZNK8touchgfx8TextArea4drawERKNS_4RectE+0x50>
 8011f84:	f9b4 3040 	ldrsh.w	r3, [r4, #64]	@ 0x40
 8011f88:	2b00      	cmp	r3, #0
 8011f8a:	db0d      	blt.n	8011fa8 <_ZNK8touchgfx8TextArea4drawERKNS_4RectE+0x50>
 8011f8c:	6c63      	ldr	r3, [r4, #68]	@ 0x44
 8011f8e:	4298      	cmp	r0, r3
 8011f90:	d10a      	bne.n	8011fa8 <_ZNK8touchgfx8TextArea4drawERKNS_4RectE+0x50>
 8011f92:	f104 023c 	add.w	r2, r4, #60	@ 0x3c
 8011f96:	e892 0003 	ldmia.w	r2, {r0, r1}
 8011f9a:	ab09      	add	r3, sp, #36	@ 0x24
 8011f9c:	e883 0003 	stmia.w	r3, {r0, r1}
 8011fa0:	4619      	mov	r1, r3
 8011fa2:	a805      	add	r0, sp, #20
 8011fa4:	f7fe fcca 	bl	801093c <_ZN8touchgfx4RectaNERKS0_>
 8011fa8:	f9bd 3018 	ldrsh.w	r3, [sp, #24]
 8011fac:	2b00      	cmp	r3, #0
 8011fae:	dd5b      	ble.n	8012068 <_ZNK8touchgfx8TextArea4drawERKNS_4RectE+0x110>
 8011fb0:	f9bd 301a 	ldrsh.w	r3, [sp, #26]
 8011fb4:	2b00      	cmp	r3, #0
 8011fb6:	dd57      	ble.n	8012068 <_ZNK8touchgfx8TextArea4drawERKNS_4RectE+0x110>
 8011fb8:	4f2f      	ldr	r7, [pc, #188]	@ (8012078 <_ZNK8touchgfx8TextArea4drawERKNS_4RectE+0x120>)
 8011fba:	8da2      	ldrh	r2, [r4, #44]	@ 0x2c
 8011fbc:	683b      	ldr	r3, [r7, #0]
 8011fbe:	f813 2012 	ldrb.w	r2, [r3, r2, lsl #1]
 8011fc2:	4b2e      	ldr	r3, [pc, #184]	@ (801207c <_ZNK8touchgfx8TextArea4drawERKNS_4RectE+0x124>)
 8011fc4:	681b      	ldr	r3, [r3, #0]
 8011fc6:	f853 6022 	ldr.w	r6, [r3, r2, lsl #2]
 8011fca:	2e00      	cmp	r6, #0
 8011fcc:	d04c      	beq.n	8012068 <_ZNK8touchgfx8TextArea4drawERKNS_4RectE+0x110>
 8011fce:	6823      	ldr	r3, [r4, #0]
 8011fd0:	f894 8036 	ldrb.w	r8, [r4, #54]	@ 0x36
 8011fd4:	6edb      	ldr	r3, [r3, #108]	@ 0x6c
 8011fd6:	4620      	mov	r0, r4
 8011fd8:	4798      	blx	r3
 8011fda:	8da2      	ldrh	r2, [r4, #44]	@ 0x2c
 8011fdc:	683b      	ldr	r3, [r7, #0]
 8011fde:	f9b4 c034 	ldrsh.w	ip, [r4, #52]	@ 0x34
 8011fe2:	f894 e038 	ldrb.w	lr, [r4, #56]	@ 0x38
 8011fe6:	f894 7037 	ldrb.w	r7, [r4, #55]	@ 0x37
 8011fea:	6b21      	ldr	r1, [r4, #48]	@ 0x30
 8011fec:	eb03 0342 	add.w	r3, r3, r2, lsl #1
 8011ff0:	f894 2039 	ldrb.w	r2, [r4, #57]	@ 0x39
 8011ff4:	785b      	ldrb	r3, [r3, #1]
 8011ff6:	9609      	str	r6, [sp, #36]	@ 0x24
 8011ff8:	f3c3 0381 	ubfx	r3, r3, #2, #2
 8011ffc:	f88d 3029 	strb.w	r3, [sp, #41]	@ 0x29
 8012000:	4b1f      	ldr	r3, [pc, #124]	@ (8012080 <_ZNK8touchgfx8TextArea4drawERKNS_4RectE+0x128>)
 8012002:	f88d 0028 	strb.w	r0, [sp, #40]	@ 0x28
 8012006:	681b      	ldr	r3, [r3, #0]
 8012008:	f88d e02a 	strb.w	lr, [sp, #42]	@ 0x2a
 801200c:	910b      	str	r1, [sp, #44]	@ 0x2c
 801200e:	f8ad c030 	strh.w	ip, [sp, #48]	@ 0x30
 8012012:	f88d 8032 	strb.w	r8, [sp, #50]	@ 0x32
 8012016:	f88d 7033 	strb.w	r7, [sp, #51]	@ 0x33
 801201a:	f88d 2034 	strb.w	r2, [sp, #52]	@ 0x34
 801201e:	f893 2058 	ldrb.w	r2, [r3, #88]	@ 0x58
 8012022:	b10a      	cbz	r2, 8012028 <_ZNK8touchgfx8TextArea4drawERKNS_4RectE+0xd0>
 8012024:	6cde      	ldr	r6, [r3, #76]	@ 0x4c
 8012026:	b906      	cbnz	r6, 801202a <_ZNK8touchgfx8TextArea4drawERKNS_4RectE+0xd2>
 8012028:	689e      	ldr	r6, [r3, #8]
 801202a:	af07      	add	r7, sp, #28
 801202c:	4621      	mov	r1, r4
 801202e:	4638      	mov	r0, r7
 8012030:	f003 f8e8 	bl	8015204 <_ZNK8touchgfx8Drawable15getAbsoluteRectEv>
 8012034:	8da1      	ldrh	r1, [r4, #44]	@ 0x2c
 8012036:	6828      	ldr	r0, [r5, #0]
 8012038:	f7fb fc18 	bl	800d86c <_ZNK8touchgfx5Texts7getTextEt>
 801203c:	6823      	ldr	r3, [r4, #0]
 801203e:	4605      	mov	r5, r0
 8012040:	6fdb      	ldr	r3, [r3, #124]	@ 0x7c
 8012042:	4620      	mov	r0, r4
 8012044:	4798      	blx	r3
 8012046:	6823      	ldr	r3, [r4, #0]
 8012048:	4680      	mov	r8, r0
 801204a:	f8d3 3080 	ldr.w	r3, [r3, #128]	@ 0x80
 801204e:	4620      	mov	r0, r4
 8012050:	4798      	blx	r3
 8012052:	e9cd 8002 	strd	r8, r0, [sp, #8]
 8012056:	ab09      	add	r3, sp, #36	@ 0x24
 8012058:	9300      	str	r3, [sp, #0]
 801205a:	9501      	str	r5, [sp, #4]
 801205c:	ab05      	add	r3, sp, #20
 801205e:	e897 0006 	ldmia.w	r7, {r1, r2}
 8012062:	4630      	mov	r0, r6
 8012064:	f7fb fb93 	bl	800d78e <_ZN8touchgfx3LCD10drawStringENS_4RectERKS1_RKNS0_13StringVisualsEPKtz>
 8012068:	b00e      	add	sp, #56	@ 0x38
 801206a:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
 801206e:	bf00      	nop
 8012070:	20002ffc 	.word	0x20002ffc
 8012074:	20003004 	.word	0x20003004
 8012078:	20002ff8 	.word	0x20002ff8
 801207c:	20003000 	.word	0x20003000
 8012080:	20002fa8 	.word	0x20002fa8

08012084 <_ZN8touchgfx8TextArea19resizeToCurrentTextEv>:
 8012084:	b538      	push	{r3, r4, r5, lr}
 8012086:	4b0e      	ldr	r3, [pc, #56]	@ (80120c0 <_ZN8touchgfx8TextArea19resizeToCurrentTextEv+0x3c>)
 8012088:	8d82      	ldrh	r2, [r0, #44]	@ 0x2c
 801208a:	881b      	ldrh	r3, [r3, #0]
 801208c:	429a      	cmp	r2, r3
 801208e:	4604      	mov	r4, r0
 8012090:	d214      	bcs.n	80120bc <_ZN8touchgfx8TextArea19resizeToCurrentTextEv+0x38>
 8012092:	6803      	ldr	r3, [r0, #0]
 8012094:	6f5b      	ldr	r3, [r3, #116]	@ 0x74
 8012096:	4798      	blx	r3
 8012098:	6823      	ldr	r3, [r4, #0]
 801209a:	4605      	mov	r5, r0
 801209c:	6f1b      	ldr	r3, [r3, #112]	@ 0x70
 801209e:	4620      	mov	r0, r4
 80120a0:	4798      	blx	r3
 80120a2:	f894 3038 	ldrb.w	r3, [r4, #56]	@ 0x38
 80120a6:	b22d      	sxth	r5, r5
 80120a8:	f013 0ffd 	tst.w	r3, #253	@ 0xfd
 80120ac:	4601      	mov	r1, r0
 80120ae:	bf06      	itte	eq
 80120b0:	4602      	moveq	r2, r0
 80120b2:	4629      	moveq	r1, r5
 80120b4:	462a      	movne	r2, r5
 80120b6:	4620      	mov	r0, r4
 80120b8:	f7f7 fcfd 	bl	8009ab6 <_ZN8touchgfx8Drawable14setWidthHeightEss>
 80120bc:	bd38      	pop	{r3, r4, r5, pc}
 80120be:	bf00      	nop
 80120c0:	20002ffc 	.word	0x20002ffc

080120c4 <_ZN8touchgfx8TextArea12setTypedTextERKNS_9TypedTextE>:
 80120c4:	b530      	push	{r4, r5, lr}
 80120c6:	888b      	ldrh	r3, [r1, #4]
 80120c8:	8583      	strh	r3, [r0, #44]	@ 0x2c
 80120ca:	f9b0 3008 	ldrsh.w	r3, [r0, #8]
 80120ce:	b085      	sub	sp, #20
 80120d0:	4604      	mov	r4, r0
 80120d2:	b923      	cbnz	r3, 80120de <_ZN8touchgfx8TextArea12setTypedTextERKNS_9TypedTextE+0x1a>
 80120d4:	f9b0 300a 	ldrsh.w	r3, [r0, #10]
 80120d8:	b90b      	cbnz	r3, 80120de <_ZN8touchgfx8TextArea12setTypedTextERKNS_9TypedTextE+0x1a>
 80120da:	f7ff ffd3 	bl	8012084 <_ZN8touchgfx8TextArea19resizeToCurrentTextEv>
 80120de:	6823      	ldr	r3, [r4, #0]
 80120e0:	466d      	mov	r5, sp
 80120e2:	4621      	mov	r1, r4
 80120e4:	4628      	mov	r0, r5
 80120e6:	f8d3 3084 	ldr.w	r3, [r3, #132]	@ 0x84
 80120ea:	4798      	blx	r3
 80120ec:	e895 0007 	ldmia.w	r5, {r0, r1, r2}
 80120f0:	343c      	adds	r4, #60	@ 0x3c
 80120f2:	e884 0007 	stmia.w	r4, {r0, r1, r2}
 80120f6:	b005      	add	sp, #20
 80120f8:	bd30      	pop	{r4, r5, pc}

080120fa <_ZNK8touchgfx3Box12getSolidRectEv>:
 80120fa:	2300      	movs	r3, #0
 80120fc:	8083      	strh	r3, [r0, #4]
 80120fe:	80c3      	strh	r3, [r0, #6]
 8012100:	8003      	strh	r3, [r0, #0]
 8012102:	8043      	strh	r3, [r0, #2]
 8012104:	f891 3026 	ldrb.w	r3, [r1, #38]	@ 0x26
 8012108:	2bff      	cmp	r3, #255	@ 0xff
 801210a:	bf01      	itttt	eq
 801210c:	890b      	ldrheq	r3, [r1, #8]
 801210e:	8083      	strheq	r3, [r0, #4]
 8012110:	894b      	ldrheq	r3, [r1, #10]
 8012112:	80c3      	strheq	r3, [r0, #6]
 8012114:	4770      	bx	lr
	...

08012118 <_ZNK8touchgfx3Box4drawERKNS_4RectE>:
 8012118:	b537      	push	{r0, r1, r2, r4, r5, lr}
 801211a:	4604      	mov	r4, r0
 801211c:	6808      	ldr	r0, [r1, #0]
 801211e:	6849      	ldr	r1, [r1, #4]
 8012120:	466b      	mov	r3, sp
 8012122:	c303      	stmia	r3!, {r0, r1}
 8012124:	6823      	ldr	r3, [r4, #0]
 8012126:	4669      	mov	r1, sp
 8012128:	6adb      	ldr	r3, [r3, #44]	@ 0x2c
 801212a:	4620      	mov	r0, r4
 801212c:	4798      	blx	r3
 801212e:	4b08      	ldr	r3, [pc, #32]	@ (8012150 <_ZNK8touchgfx3Box4drawERKNS_4RectE+0x38>)
 8012130:	681b      	ldr	r3, [r3, #0]
 8012132:	f893 2058 	ldrb.w	r2, [r3, #88]	@ 0x58
 8012136:	b10a      	cbz	r2, 801213c <_ZNK8touchgfx3Box4drawERKNS_4RectE+0x24>
 8012138:	6cd8      	ldr	r0, [r3, #76]	@ 0x4c
 801213a:	b900      	cbnz	r0, 801213e <_ZNK8touchgfx3Box4drawERKNS_4RectE+0x26>
 801213c:	6898      	ldr	r0, [r3, #8]
 801213e:	6803      	ldr	r3, [r0, #0]
 8012140:	6aa2      	ldr	r2, [r4, #40]	@ 0x28
 8012142:	6a1d      	ldr	r5, [r3, #32]
 8012144:	f894 3026 	ldrb.w	r3, [r4, #38]	@ 0x26
 8012148:	4669      	mov	r1, sp
 801214a:	47a8      	blx	r5
 801214c:	b003      	add	sp, #12
 801214e:	bd30      	pop	{r4, r5, pc}
 8012150:	20002fa8 	.word	0x20002fa8

08012154 <_ZNK8touchgfx3Box17invalidateContentEv>:
 8012154:	f890 2026 	ldrb.w	r2, [r0, #38]	@ 0x26
 8012158:	b12a      	cbz	r2, 8012166 <_ZNK8touchgfx3Box17invalidateContentEv+0x12>
 801215a:	f890 2025 	ldrb.w	r2, [r0, #37]	@ 0x25
 801215e:	b112      	cbz	r2, 8012166 <_ZNK8touchgfx3Box17invalidateContentEv+0x12>
 8012160:	6803      	ldr	r3, [r0, #0]
 8012162:	695b      	ldr	r3, [r3, #20]
 8012164:	4718      	bx	r3
 8012166:	4770      	bx	lr

08012168 <_ZN8touchgfx6Button10setBitmapsERKNS_6BitmapES3_>:
 8012168:	b570      	push	{r4, r5, r6, lr}
 801216a:	880b      	ldrh	r3, [r1, #0]
 801216c:	85c3      	strh	r3, [r0, #46]	@ 0x2e
 801216e:	4605      	mov	r5, r0
 8012170:	8813      	ldrh	r3, [r2, #0]
 8012172:	f825 3f30 	strh.w	r3, [r5, #48]!
 8012176:	4604      	mov	r4, r0
 8012178:	4628      	mov	r0, r5
 801217a:	f005 f9b7 	bl	80174ec <_ZNK8touchgfx6Bitmap8getWidthEv>
 801217e:	4606      	mov	r6, r0
 8012180:	4628      	mov	r0, r5
 8012182:	f005 f9e7 	bl	8017554 <_ZNK8touchgfx6Bitmap9getHeightEv>
 8012186:	6823      	ldr	r3, [r4, #0]
 8012188:	4605      	mov	r5, r0
 801218a:	4631      	mov	r1, r6
 801218c:	4620      	mov	r0, r4
 801218e:	6b9b      	ldr	r3, [r3, #56]	@ 0x38
 8012190:	4798      	blx	r3
 8012192:	6823      	ldr	r3, [r4, #0]
 8012194:	4629      	mov	r1, r5
 8012196:	4620      	mov	r0, r4
 8012198:	6bdb      	ldr	r3, [r3, #60]	@ 0x3c
 801219a:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
 801219e:	4718      	bx	r3

080121a0 <_ZNK8touchgfx6Button12getSolidRectEv>:
 80121a0:	b510      	push	{r4, lr}
 80121a2:	f891 3032 	ldrb.w	r3, [r1, #50]	@ 0x32
 80121a6:	2bff      	cmp	r3, #255	@ 0xff
 80121a8:	4604      	mov	r4, r0
 80121aa:	d006      	beq.n	80121ba <_ZNK8touchgfx6Button12getSolidRectEv+0x1a>
 80121ac:	2300      	movs	r3, #0
 80121ae:	8003      	strh	r3, [r0, #0]
 80121b0:	8043      	strh	r3, [r0, #2]
 80121b2:	8083      	strh	r3, [r0, #4]
 80121b4:	80c3      	strh	r3, [r0, #6]
 80121b6:	4620      	mov	r0, r4
 80121b8:	bd10      	pop	{r4, pc}
 80121ba:	f891 302c 	ldrb.w	r3, [r1, #44]	@ 0x2c
 80121be:	b11b      	cbz	r3, 80121c8 <_ZNK8touchgfx6Button12getSolidRectEv+0x28>
 80121c0:	3130      	adds	r1, #48	@ 0x30
 80121c2:	f005 f9fb 	bl	80175bc <_ZNK8touchgfx6Bitmap12getSolidRectEv>
 80121c6:	e7f6      	b.n	80121b6 <_ZNK8touchgfx6Button12getSolidRectEv+0x16>
 80121c8:	312e      	adds	r1, #46	@ 0x2e
 80121ca:	e7fa      	b.n	80121c2 <_ZNK8touchgfx6Button12getSolidRectEv+0x22>

080121cc <_ZNK8touchgfx6Button4drawERKNS_4RectE>:
 80121cc:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 80121d0:	f890 302c 	ldrb.w	r3, [r0, #44]	@ 0x2c
 80121d4:	b08a      	sub	sp, #40	@ 0x28
 80121d6:	4604      	mov	r4, r0
 80121d8:	4688      	mov	r8, r1
 80121da:	2b00      	cmp	r3, #0
 80121dc:	d066      	beq.n	80122ac <_ZNK8touchgfx6Button4drawERKNS_4RectE+0xe0>
 80121de:	8e03      	ldrh	r3, [r0, #48]	@ 0x30
 80121e0:	f8ad 3014 	strh.w	r3, [sp, #20]
 80121e4:	a805      	add	r0, sp, #20
 80121e6:	f005 f981 	bl	80174ec <_ZNK8touchgfx6Bitmap8getWidthEv>
 80121ea:	4607      	mov	r7, r0
 80121ec:	a805      	add	r0, sp, #20
 80121ee:	f005 f9b1 	bl	8017554 <_ZNK8touchgfx6Bitmap9getHeightEv>
 80121f2:	f9b8 6000 	ldrsh.w	r6, [r8]
 80121f6:	f8b8 2004 	ldrh.w	r2, [r8, #4]
 80121fa:	4432      	add	r2, r6
 80121fc:	b292      	uxth	r2, r2
 80121fe:	2300      	movs	r3, #0
 8012200:	fa0f fc82 	sxth.w	ip, r2
 8012204:	459c      	cmp	ip, r3
 8012206:	9306      	str	r3, [sp, #24]
 8012208:	dd52      	ble.n	80122b0 <_ZNK8touchgfx6Button4drawERKNS_4RectE+0xe4>
 801220a:	42b7      	cmp	r7, r6
 801220c:	dd50      	ble.n	80122b0 <_ZNK8touchgfx6Button4drawERKNS_4RectE+0xe4>
 801220e:	f9b8 5002 	ldrsh.w	r5, [r8, #2]
 8012212:	f8b8 3006 	ldrh.w	r3, [r8, #6]
 8012216:	442b      	add	r3, r5
 8012218:	b29b      	uxth	r3, r3
 801221a:	b219      	sxth	r1, r3
 801221c:	2900      	cmp	r1, #0
 801221e:	dd47      	ble.n	80122b0 <_ZNK8touchgfx6Button4drawERKNS_4RectE+0xe4>
 8012220:	42a8      	cmp	r0, r5
 8012222:	dd45      	ble.n	80122b0 <_ZNK8touchgfx6Button4drawERKNS_4RectE+0xe4>
 8012224:	4567      	cmp	r7, ip
 8012226:	bfb8      	it	lt
 8012228:	b2ba      	uxthlt	r2, r7
 801222a:	4288      	cmp	r0, r1
 801222c:	ea26 76e6 	bic.w	r6, r6, r6, asr #31
 8012230:	ea25 75e5 	bic.w	r5, r5, r5, asr #31
 8012234:	bfb8      	it	lt
 8012236:	b283      	uxthlt	r3, r0
 8012238:	1b92      	subs	r2, r2, r6
 801223a:	1b5b      	subs	r3, r3, r5
 801223c:	f8ad 201c 	strh.w	r2, [sp, #28]
 8012240:	f8ad 301e 	strh.w	r3, [sp, #30]
 8012244:	f8ad 6018 	strh.w	r6, [sp, #24]
 8012248:	f8ad 501a 	strh.w	r5, [sp, #26]
 801224c:	f8bd 2014 	ldrh.w	r2, [sp, #20]
 8012250:	f64f 73ff 	movw	r3, #65535	@ 0xffff
 8012254:	429a      	cmp	r2, r3
 8012256:	d026      	beq.n	80122a6 <_ZNK8touchgfx6Button4drawERKNS_4RectE+0xda>
 8012258:	f9bd 301c 	ldrsh.w	r3, [sp, #28]
 801225c:	2b00      	cmp	r3, #0
 801225e:	dd22      	ble.n	80122a6 <_ZNK8touchgfx6Button4drawERKNS_4RectE+0xda>
 8012260:	f9bd 301e 	ldrsh.w	r3, [sp, #30]
 8012264:	2b00      	cmp	r3, #0
 8012266:	dd1e      	ble.n	80122a6 <_ZNK8touchgfx6Button4drawERKNS_4RectE+0xda>
 8012268:	2300      	movs	r3, #0
 801226a:	e9cd 3308 	strd	r3, r3, [sp, #32]
 801226e:	6823      	ldr	r3, [r4, #0]
 8012270:	a908      	add	r1, sp, #32
 8012272:	6adb      	ldr	r3, [r3, #44]	@ 0x2c
 8012274:	4620      	mov	r0, r4
 8012276:	4798      	blx	r3
 8012278:	4b0f      	ldr	r3, [pc, #60]	@ (80122b8 <_ZNK8touchgfx6Button4drawERKNS_4RectE+0xec>)
 801227a:	681b      	ldr	r3, [r3, #0]
 801227c:	f893 2058 	ldrb.w	r2, [r3, #88]	@ 0x58
 8012280:	b10a      	cbz	r2, 8012286 <_ZNK8touchgfx6Button4drawERKNS_4RectE+0xba>
 8012282:	6cd8      	ldr	r0, [r3, #76]	@ 0x4c
 8012284:	b900      	cbnz	r0, 8012288 <_ZNK8touchgfx6Button4drawERKNS_4RectE+0xbc>
 8012286:	6898      	ldr	r0, [r3, #8]
 8012288:	6801      	ldr	r1, [r0, #0]
 801228a:	f9bd 3022 	ldrsh.w	r3, [sp, #34]	@ 0x22
 801228e:	f9bd 2020 	ldrsh.w	r2, [sp, #32]
 8012292:	2501      	movs	r5, #1
 8012294:	9502      	str	r5, [sp, #8]
 8012296:	f894 4032 	ldrb.w	r4, [r4, #50]	@ 0x32
 801229a:	9401      	str	r4, [sp, #4]
 801229c:	ac06      	add	r4, sp, #24
 801229e:	9400      	str	r4, [sp, #0]
 80122a0:	688c      	ldr	r4, [r1, #8]
 80122a2:	a905      	add	r1, sp, #20
 80122a4:	47a0      	blx	r4
 80122a6:	b00a      	add	sp, #40	@ 0x28
 80122a8:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
 80122ac:	8dc3      	ldrh	r3, [r0, #46]	@ 0x2e
 80122ae:	e797      	b.n	80121e0 <_ZNK8touchgfx6Button4drawERKNS_4RectE+0x14>
 80122b0:	2300      	movs	r3, #0
 80122b2:	9307      	str	r3, [sp, #28]
 80122b4:	e7ca      	b.n	801224c <_ZNK8touchgfx6Button4drawERKNS_4RectE+0x80>
 80122b6:	bf00      	nop
 80122b8:	20002fa8 	.word	0x20002fa8

080122bc <_ZNK8touchgfx24TextAreaWithWildcardBase4drawERKNS_4RectE>:
 80122bc:	e92d 43f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, lr}
 80122c0:	4b2f      	ldr	r3, [pc, #188]	@ (8012380 <_ZNK8touchgfx24TextAreaWithWildcardBase4drawERKNS_4RectE+0xc4>)
 80122c2:	8d82      	ldrh	r2, [r0, #44]	@ 0x2c
 80122c4:	881b      	ldrh	r3, [r3, #0]
 80122c6:	4293      	cmp	r3, r2
 80122c8:	b08d      	sub	sp, #52	@ 0x34
 80122ca:	4604      	mov	r4, r0
 80122cc:	460f      	mov	r7, r1
 80122ce:	d954      	bls.n	801237a <_ZNK8touchgfx24TextAreaWithWildcardBase4drawERKNS_4RectE+0xbe>
 80122d0:	4b2c      	ldr	r3, [pc, #176]	@ (8012384 <_ZNK8touchgfx24TextAreaWithWildcardBase4drawERKNS_4RectE+0xc8>)
 80122d2:	6819      	ldr	r1, [r3, #0]
 80122d4:	eb01 0342 	add.w	r3, r1, r2, lsl #1
 80122d8:	f811 1012 	ldrb.w	r1, [r1, r2, lsl #1]
 80122dc:	4a2a      	ldr	r2, [pc, #168]	@ (8012388 <_ZNK8touchgfx24TextAreaWithWildcardBase4drawERKNS_4RectE+0xcc>)
 80122de:	6812      	ldr	r2, [r2, #0]
 80122e0:	f852 1021 	ldr.w	r1, [r2, r1, lsl #2]
 80122e4:	2900      	cmp	r1, #0
 80122e6:	d048      	beq.n	801237a <_ZNK8touchgfx24TextAreaWithWildcardBase4drawERKNS_4RectE+0xbe>
 80122e8:	785a      	ldrb	r2, [r3, #1]
 80122ea:	f894 3039 	ldrb.w	r3, [r4, #57]	@ 0x39
 80122ee:	f88d 302c 	strb.w	r3, [sp, #44]	@ 0x2c
 80122f2:	4b26      	ldr	r3, [pc, #152]	@ (801238c <_ZNK8touchgfx24TextAreaWithWildcardBase4drawERKNS_4RectE+0xd0>)
 80122f4:	f890 5036 	ldrb.w	r5, [r0, #54]	@ 0x36
 80122f8:	f9b0 c034 	ldrsh.w	ip, [r0, #52]	@ 0x34
 80122fc:	f890 e038 	ldrb.w	lr, [r0, #56]	@ 0x38
 8012300:	6b26      	ldr	r6, [r4, #48]	@ 0x30
 8012302:	f890 0037 	ldrb.w	r0, [r0, #55]	@ 0x37
 8012306:	9107      	str	r1, [sp, #28]
 8012308:	f3c2 0801 	ubfx	r8, r2, #0, #2
 801230c:	f3c2 0281 	ubfx	r2, r2, #2, #2
 8012310:	f88d 2021 	strb.w	r2, [sp, #33]	@ 0x21
 8012314:	681a      	ldr	r2, [r3, #0]
 8012316:	f88d 8020 	strb.w	r8, [sp, #32]
 801231a:	f892 3058 	ldrb.w	r3, [r2, #88]	@ 0x58
 801231e:	f88d e022 	strb.w	lr, [sp, #34]	@ 0x22
 8012322:	9609      	str	r6, [sp, #36]	@ 0x24
 8012324:	f8ad c028 	strh.w	ip, [sp, #40]	@ 0x28
 8012328:	f88d 502a 	strb.w	r5, [sp, #42]	@ 0x2a
 801232c:	f88d 002b 	strb.w	r0, [sp, #43]	@ 0x2b
 8012330:	b10b      	cbz	r3, 8012336 <_ZNK8touchgfx24TextAreaWithWildcardBase4drawERKNS_4RectE+0x7a>
 8012332:	6cd5      	ldr	r5, [r2, #76]	@ 0x4c
 8012334:	b905      	cbnz	r5, 8012338 <_ZNK8touchgfx24TextAreaWithWildcardBase4drawERKNS_4RectE+0x7c>
 8012336:	6895      	ldr	r5, [r2, #8]
 8012338:	ae05      	add	r6, sp, #20
 801233a:	4621      	mov	r1, r4
 801233c:	4630      	mov	r0, r6
 801233e:	f002 ff61 	bl	8015204 <_ZNK8touchgfx8Drawable15getAbsoluteRectEv>
 8012342:	4b13      	ldr	r3, [pc, #76]	@ (8012390 <_ZNK8touchgfx24TextAreaWithWildcardBase4drawERKNS_4RectE+0xd4>)
 8012344:	8da1      	ldrh	r1, [r4, #44]	@ 0x2c
 8012346:	6818      	ldr	r0, [r3, #0]
 8012348:	f7fb fa90 	bl	800d86c <_ZNK8touchgfx5Texts7getTextEt>
 801234c:	6823      	ldr	r3, [r4, #0]
 801234e:	4680      	mov	r8, r0
 8012350:	6fdb      	ldr	r3, [r3, #124]	@ 0x7c
 8012352:	4620      	mov	r0, r4
 8012354:	4798      	blx	r3
 8012356:	6823      	ldr	r3, [r4, #0]
 8012358:	4681      	mov	r9, r0
 801235a:	f8d3 3080 	ldr.w	r3, [r3, #128]	@ 0x80
 801235e:	4620      	mov	r0, r4
 8012360:	4798      	blx	r3
 8012362:	e9cd 9002 	strd	r9, r0, [sp, #8]
 8012366:	ab07      	add	r3, sp, #28
 8012368:	9300      	str	r3, [sp, #0]
 801236a:	f8cd 8004 	str.w	r8, [sp, #4]
 801236e:	463b      	mov	r3, r7
 8012370:	e896 0006 	ldmia.w	r6, {r1, r2}
 8012374:	4628      	mov	r0, r5
 8012376:	f7fb fa0a 	bl	800d78e <_ZN8touchgfx3LCD10drawStringENS_4RectERKS1_RKNS0_13StringVisualsEPKtz>
 801237a:	b00d      	add	sp, #52	@ 0x34
 801237c:	e8bd 83f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, pc}
 8012380:	20002ffc 	.word	0x20002ffc
 8012384:	20002ff8 	.word	0x20002ff8
 8012388:	20003000 	.word	0x20003000
 801238c:	20002fa8 	.word	0x20002fa8
 8012390:	20003004 	.word	0x20003004

08012394 <_ZNK8touchgfx13BoxWithBorder4drawERKNS_4RectE>:
 8012394:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 8012398:	4604      	mov	r4, r0
 801239a:	8e03      	ldrh	r3, [r0, #48]	@ 0x30
 801239c:	8962      	ldrh	r2, [r4, #10]
 801239e:	b218      	sxth	r0, r3
 80123a0:	460e      	mov	r6, r1
 80123a2:	005b      	lsls	r3, r3, #1
 80123a4:	8921      	ldrh	r1, [r4, #8]
 80123a6:	b29b      	uxth	r3, r3
 80123a8:	1ac9      	subs	r1, r1, r3
 80123aa:	b08e      	sub	sp, #56	@ 0x38
 80123ac:	b209      	sxth	r1, r1
 80123ae:	1ad3      	subs	r3, r2, r3
 80123b0:	b21b      	sxth	r3, r3
 80123b2:	2900      	cmp	r1, #0
 80123b4:	f8ad 0000 	strh.w	r0, [sp]
 80123b8:	f8ad 0002 	strh.w	r0, [sp, #2]
 80123bc:	f8ad 1004 	strh.w	r1, [sp, #4]
 80123c0:	f8ad 3006 	strh.w	r3, [sp, #6]
 80123c4:	dd5e      	ble.n	8012484 <_ZNK8touchgfx13BoxWithBorder4drawERKNS_4RectE+0xf0>
 80123c6:	2b00      	cmp	r3, #0
 80123c8:	dd5c      	ble.n	8012484 <_ZNK8touchgfx13BoxWithBorder4drawERKNS_4RectE+0xf0>
 80123ca:	6830      	ldr	r0, [r6, #0]
 80123cc:	6871      	ldr	r1, [r6, #4]
 80123ce:	ab02      	add	r3, sp, #8
 80123d0:	c303      	stmia	r3!, {r0, r1}
 80123d2:	4669      	mov	r1, sp
 80123d4:	a802      	add	r0, sp, #8
 80123d6:	f7fe fab1 	bl	801093c <_ZN8touchgfx4RectaNERKS0_>
 80123da:	4620      	mov	r0, r4
 80123dc:	a902      	add	r1, sp, #8
 80123de:	f7ff fe9b 	bl	8012118 <_ZNK8touchgfx3Box4drawERKNS_4RectE>
 80123e2:	8e20      	ldrh	r0, [r4, #48]	@ 0x30
 80123e4:	2800      	cmp	r0, #0
 80123e6:	d05f      	beq.n	80124a8 <_ZNK8touchgfx13BoxWithBorder4drawERKNS_4RectE+0x114>
 80123e8:	8963      	ldrh	r3, [r4, #10]
 80123ea:	f9b4 1008 	ldrsh.w	r1, [r4, #8]
 80123ee:	f8ad 101c 	strh.w	r1, [sp, #28]
 80123f2:	1a1f      	subs	r7, r3, r0
 80123f4:	eba3 0340 	sub.w	r3, r3, r0, lsl #1
 80123f8:	b202      	sxth	r2, r0
 80123fa:	2500      	movs	r5, #0
 80123fc:	b21b      	sxth	r3, r3
 80123fe:	f8ad 1024 	strh.w	r1, [sp, #36]	@ 0x24
 8012402:	1a09      	subs	r1, r1, r0
 8012404:	f8ad 7022 	strh.w	r7, [sp, #34]	@ 0x22
 8012408:	9506      	str	r5, [sp, #24]
 801240a:	f8ad 201e 	strh.w	r2, [sp, #30]
 801240e:	f8ad 5020 	strh.w	r5, [sp, #32]
 8012412:	f8ad 2026 	strh.w	r2, [sp, #38]	@ 0x26
 8012416:	f8ad 5028 	strh.w	r5, [sp, #40]	@ 0x28
 801241a:	f8ad 202a 	strh.w	r2, [sp, #42]	@ 0x2a
 801241e:	f8ad 202c 	strh.w	r2, [sp, #44]	@ 0x2c
 8012422:	f8ad 302e 	strh.w	r3, [sp, #46]	@ 0x2e
 8012426:	f8ad 1030 	strh.w	r1, [sp, #48]	@ 0x30
 801242a:	f8ad 2032 	strh.w	r2, [sp, #50]	@ 0x32
 801242e:	f8ad 2034 	strh.w	r2, [sp, #52]	@ 0x34
 8012432:	f8ad 3036 	strh.w	r3, [sp, #54]	@ 0x36
 8012436:	af04      	add	r7, sp, #16
 8012438:	ab06      	add	r3, sp, #24
 801243a:	eb03 03c5 	add.w	r3, r3, r5, lsl #3
 801243e:	e893 0003 	ldmia.w	r3, {r0, r1}
 8012442:	e887 0003 	stmia.w	r7, {r0, r1}
 8012446:	4631      	mov	r1, r6
 8012448:	4638      	mov	r0, r7
 801244a:	f7fe fa77 	bl	801093c <_ZN8touchgfx4RectaNERKS0_>
 801244e:	f9bd 3014 	ldrsh.w	r3, [sp, #20]
 8012452:	2b00      	cmp	r3, #0
 8012454:	dd12      	ble.n	801247c <_ZNK8touchgfx13BoxWithBorder4drawERKNS_4RectE+0xe8>
 8012456:	f9bd 3016 	ldrsh.w	r3, [sp, #22]
 801245a:	2b00      	cmp	r3, #0
 801245c:	dd0e      	ble.n	801247c <_ZNK8touchgfx13BoxWithBorder4drawERKNS_4RectE+0xe8>
 801245e:	6823      	ldr	r3, [r4, #0]
 8012460:	4639      	mov	r1, r7
 8012462:	6adb      	ldr	r3, [r3, #44]	@ 0x2c
 8012464:	4620      	mov	r0, r4
 8012466:	4798      	blx	r3
 8012468:	f7f6 f86c 	bl	8008544 <_ZN8touchgfx3HAL3lcdEv>
 801246c:	6803      	ldr	r3, [r0, #0]
 801246e:	6ae2      	ldr	r2, [r4, #44]	@ 0x2c
 8012470:	f8d3 8020 	ldr.w	r8, [r3, #32]
 8012474:	f894 3026 	ldrb.w	r3, [r4, #38]	@ 0x26
 8012478:	4639      	mov	r1, r7
 801247a:	47c0      	blx	r8
 801247c:	3501      	adds	r5, #1
 801247e:	2d04      	cmp	r5, #4
 8012480:	d1da      	bne.n	8012438 <_ZNK8touchgfx13BoxWithBorder4drawERKNS_4RectE+0xa4>
 8012482:	e011      	b.n	80124a8 <_ZNK8touchgfx13BoxWithBorder4drawERKNS_4RectE+0x114>
 8012484:	6830      	ldr	r0, [r6, #0]
 8012486:	6871      	ldr	r1, [r6, #4]
 8012488:	ab06      	add	r3, sp, #24
 801248a:	c303      	stmia	r3!, {r0, r1}
 801248c:	6823      	ldr	r3, [r4, #0]
 801248e:	a906      	add	r1, sp, #24
 8012490:	6adb      	ldr	r3, [r3, #44]	@ 0x2c
 8012492:	4620      	mov	r0, r4
 8012494:	4798      	blx	r3
 8012496:	f7f6 f855 	bl	8008544 <_ZN8touchgfx3HAL3lcdEv>
 801249a:	6803      	ldr	r3, [r0, #0]
 801249c:	6ae2      	ldr	r2, [r4, #44]	@ 0x2c
 801249e:	6a1d      	ldr	r5, [r3, #32]
 80124a0:	f894 3026 	ldrb.w	r3, [r4, #38]	@ 0x26
 80124a4:	a906      	add	r1, sp, #24
 80124a6:	47a8      	blx	r5
 80124a8:	b00e      	add	sp, #56	@ 0x38
 80124aa:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}

080124ae <_ZN8touchgfx14ButtonWithIcon10setBitmapsERKNS_6BitmapES3_>:
 80124ae:	4770      	bx	lr

080124b0 <_ZN8touchgfx14ButtonWithIcon10setBitmapsERKNS_6BitmapES3_S3_S3_>:
 80124b0:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 80124b4:	461c      	mov	r4, r3
 80124b6:	4606      	mov	r6, r0
 80124b8:	9f06      	ldr	r7, [sp, #24]
 80124ba:	f7ff fe55 	bl	8012168 <_ZN8touchgfx6Button10setBitmapsERKNS_6BitmapES3_>
 80124be:	8823      	ldrh	r3, [r4, #0]
 80124c0:	86b3      	strh	r3, [r6, #52]	@ 0x34
 80124c2:	883b      	ldrh	r3, [r7, #0]
 80124c4:	86f3      	strh	r3, [r6, #54]	@ 0x36
 80124c6:	4638      	mov	r0, r7
 80124c8:	f9b6 5008 	ldrsh.w	r5, [r6, #8]
 80124cc:	f005 f80e 	bl	80174ec <_ZNK8touchgfx6Bitmap8getWidthEv>
 80124d0:	f04f 0802 	mov.w	r8, #2
 80124d4:	fb95 f5f8 	sdiv	r5, r5, r8
 80124d8:	b2ad      	uxth	r5, r5
 80124da:	fb90 f0f8 	sdiv	r0, r0, r8
 80124de:	1a2d      	subs	r5, r5, r0
 80124e0:	8735      	strh	r5, [r6, #56]	@ 0x38
 80124e2:	4638      	mov	r0, r7
 80124e4:	f9b6 400a 	ldrsh.w	r4, [r6, #10]
 80124e8:	fb94 f4f8 	sdiv	r4, r4, r8
 80124ec:	f005 f832 	bl	8017554 <_ZNK8touchgfx6Bitmap9getHeightEv>
 80124f0:	b2a4      	uxth	r4, r4
 80124f2:	fb90 f0f8 	sdiv	r0, r0, r8
 80124f6:	1a24      	subs	r4, r4, r0
 80124f8:	8774      	strh	r4, [r6, #58]	@ 0x3a
 80124fa:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
	...

08012500 <_ZNK8touchgfx14ButtonWithIcon4drawERKNS_4RectE>:
 8012500:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 8012504:	4604      	mov	r4, r0
 8012506:	b08c      	sub	sp, #48	@ 0x30
 8012508:	460d      	mov	r5, r1
 801250a:	f7ff fe5f 	bl	80121cc <_ZNK8touchgfx6Button4drawERKNS_4RectE>
 801250e:	f894 302c 	ldrb.w	r3, [r4, #44]	@ 0x2c
 8012512:	2b00      	cmp	r3, #0
 8012514:	d05d      	beq.n	80125d2 <_ZNK8touchgfx14ButtonWithIcon4drawERKNS_4RectE+0xd2>
 8012516:	8ee3      	ldrh	r3, [r4, #54]	@ 0x36
 8012518:	f8ad 3014 	strh.w	r3, [sp, #20]
 801251c:	a805      	add	r0, sp, #20
 801251e:	f9b4 8038 	ldrsh.w	r8, [r4, #56]	@ 0x38
 8012522:	f9b4 703a 	ldrsh.w	r7, [r4, #58]	@ 0x3a
 8012526:	f004 ffe1 	bl	80174ec <_ZNK8touchgfx6Bitmap8getWidthEv>
 801252a:	4606      	mov	r6, r0
 801252c:	a805      	add	r0, sp, #20
 801252e:	f005 f811 	bl	8017554 <_ZNK8touchgfx6Bitmap9getHeightEv>
 8012532:	6869      	ldr	r1, [r5, #4]
 8012534:	f8ad 001e 	strh.w	r0, [sp, #30]
 8012538:	6828      	ldr	r0, [r5, #0]
 801253a:	f8ad 8018 	strh.w	r8, [sp, #24]
 801253e:	ab08      	add	r3, sp, #32
 8012540:	ad08      	add	r5, sp, #32
 8012542:	c303      	stmia	r3!, {r0, r1}
 8012544:	a906      	add	r1, sp, #24
 8012546:	4628      	mov	r0, r5
 8012548:	f8ad 701a 	strh.w	r7, [sp, #26]
 801254c:	f8ad 601c 	strh.w	r6, [sp, #28]
 8012550:	f7fe f9f4 	bl	801093c <_ZN8touchgfx4RectaNERKS0_>
 8012554:	f8bd 2014 	ldrh.w	r2, [sp, #20]
 8012558:	f64f 73ff 	movw	r3, #65535	@ 0xffff
 801255c:	429a      	cmp	r2, r3
 801255e:	d035      	beq.n	80125cc <_ZNK8touchgfx14ButtonWithIcon4drawERKNS_4RectE+0xcc>
 8012560:	f9bd 3024 	ldrsh.w	r3, [sp, #36]	@ 0x24
 8012564:	2b00      	cmp	r3, #0
 8012566:	dd31      	ble.n	80125cc <_ZNK8touchgfx14ButtonWithIcon4drawERKNS_4RectE+0xcc>
 8012568:	f9bd 3026 	ldrsh.w	r3, [sp, #38]	@ 0x26
 801256c:	2b00      	cmp	r3, #0
 801256e:	dd2d      	ble.n	80125cc <_ZNK8touchgfx14ButtonWithIcon4drawERKNS_4RectE+0xcc>
 8012570:	2300      	movs	r3, #0
 8012572:	e9cd 330a 	strd	r3, r3, [sp, #40]	@ 0x28
 8012576:	6823      	ldr	r3, [r4, #0]
 8012578:	a90a      	add	r1, sp, #40	@ 0x28
 801257a:	6adb      	ldr	r3, [r3, #44]	@ 0x2c
 801257c:	4620      	mov	r0, r4
 801257e:	4798      	blx	r3
 8012580:	f8bd 3020 	ldrh.w	r3, [sp, #32]
 8012584:	8f22      	ldrh	r2, [r4, #56]	@ 0x38
 8012586:	f8bd 1022 	ldrh.w	r1, [sp, #34]	@ 0x22
 801258a:	1a9b      	subs	r3, r3, r2
 801258c:	f8ad 3020 	strh.w	r3, [sp, #32]
 8012590:	8f63      	ldrh	r3, [r4, #58]	@ 0x3a
 8012592:	1ac9      	subs	r1, r1, r3
 8012594:	f8ad 1022 	strh.w	r1, [sp, #34]	@ 0x22
 8012598:	490f      	ldr	r1, [pc, #60]	@ (80125d8 <_ZNK8touchgfx14ButtonWithIcon4drawERKNS_4RectE+0xd8>)
 801259a:	6809      	ldr	r1, [r1, #0]
 801259c:	f891 0058 	ldrb.w	r0, [r1, #88]	@ 0x58
 80125a0:	b108      	cbz	r0, 80125a6 <_ZNK8touchgfx14ButtonWithIcon4drawERKNS_4RectE+0xa6>
 80125a2:	6cc8      	ldr	r0, [r1, #76]	@ 0x4c
 80125a4:	b900      	cbnz	r0, 80125a8 <_ZNK8touchgfx14ButtonWithIcon4drawERKNS_4RectE+0xa8>
 80125a6:	6888      	ldr	r0, [r1, #8]
 80125a8:	f8bd 102a 	ldrh.w	r1, [sp, #42]	@ 0x2a
 80125ac:	440b      	add	r3, r1
 80125ae:	f8bd 1028 	ldrh.w	r1, [sp, #40]	@ 0x28
 80125b2:	2601      	movs	r6, #1
 80125b4:	440a      	add	r2, r1
 80125b6:	6801      	ldr	r1, [r0, #0]
 80125b8:	9602      	str	r6, [sp, #8]
 80125ba:	f894 4032 	ldrb.w	r4, [r4, #50]	@ 0x32
 80125be:	e9cd 5400 	strd	r5, r4, [sp]
 80125c2:	b21b      	sxth	r3, r3
 80125c4:	688c      	ldr	r4, [r1, #8]
 80125c6:	b212      	sxth	r2, r2
 80125c8:	a905      	add	r1, sp, #20
 80125ca:	47a0      	blx	r4
 80125cc:	b00c      	add	sp, #48	@ 0x30
 80125ce:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
 80125d2:	8ea3      	ldrh	r3, [r4, #52]	@ 0x34
 80125d4:	e7a0      	b.n	8012518 <_ZNK8touchgfx14ButtonWithIcon4drawERKNS_4RectE+0x18>
 80125d6:	bf00      	nop
 80125d8:	20002fa8 	.word	0x20002fa8

080125dc <_ZN8touchgfx14ButtonWithIconC1Ev>:
 80125dc:	b510      	push	{r4, lr}
 80125de:	2101      	movs	r1, #1
 80125e0:	2200      	movs	r2, #0
 80125e2:	f880 1025 	strb.w	r1, [r0, #37]	@ 0x25
 80125e6:	f880 1024 	strb.w	r1, [r0, #36]	@ 0x24
 80125ea:	4c0e      	ldr	r4, [pc, #56]	@ (8012624 <_ZN8touchgfx14ButtonWithIconC1Ev+0x48>)
 80125ec:	8082      	strh	r2, [r0, #4]
 80125ee:	f64f 71ff 	movw	r1, #65535	@ 0xffff
 80125f2:	80c2      	strh	r2, [r0, #6]
 80125f4:	8102      	strh	r2, [r0, #8]
 80125f6:	8142      	strh	r2, [r0, #10]
 80125f8:	8182      	strh	r2, [r0, #12]
 80125fa:	81c2      	strh	r2, [r0, #14]
 80125fc:	8202      	strh	r2, [r0, #16]
 80125fe:	8242      	strh	r2, [r0, #18]
 8012600:	e9c0 2205 	strd	r2, r2, [r0, #20]
 8012604:	61c2      	str	r2, [r0, #28]
 8012606:	8402      	strh	r2, [r0, #32]
 8012608:	8442      	strh	r2, [r0, #34]	@ 0x22
 801260a:	6282      	str	r2, [r0, #40]	@ 0x28
 801260c:	f880 202c 	strb.w	r2, [r0, #44]	@ 0x2c
 8012610:	85c1      	strh	r1, [r0, #46]	@ 0x2e
 8012612:	8601      	strh	r1, [r0, #48]	@ 0x30
 8012614:	f880 1032 	strb.w	r1, [r0, #50]	@ 0x32
 8012618:	6004      	str	r4, [r0, #0]
 801261a:	8681      	strh	r1, [r0, #52]	@ 0x34
 801261c:	86c1      	strh	r1, [r0, #54]	@ 0x36
 801261e:	8702      	strh	r2, [r0, #56]	@ 0x38
 8012620:	8742      	strh	r2, [r0, #58]	@ 0x3a
 8012622:	bd10      	pop	{r4, pc}
 8012624:	0802936c 	.word	0x0802936c

08012628 <_ZN8touchgfx3LCD27supportDynamicBitmapDrawingENS_6Bitmap12BitmapFormatE>:
 8012628:	b510      	push	{r4, lr}
 801262a:	6803      	ldr	r3, [r0, #0]
 801262c:	6adb      	ldr	r3, [r3, #44]	@ 0x2c
 801262e:	460c      	mov	r4, r1
 8012630:	4798      	blx	r3
 8012632:	1b03      	subs	r3, r0, r4
 8012634:	4258      	negs	r0, r3
 8012636:	4158      	adcs	r0, r3
 8012638:	bd10      	pop	{r4, pc}
	...

0801263c <_ZN8touchgfx3LCD15setDefaultColorENS_9colortypeE>:
 801263c:	4b01      	ldr	r3, [pc, #4]	@ (8012644 <_ZN8touchgfx3LCD15setDefaultColorENS_9colortypeE+0x8>)
 801263e:	6019      	str	r1, [r3, #0]
 8012640:	4770      	bx	lr
 8012642:	bf00      	nop
 8012644:	20002fb0 	.word	0x20002fb0

08012648 <_ZN8touchgfx3LCD18drawTextureMapQuadERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht>:
 8012648:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 801264c:	4696      	mov	lr, r2
 801264e:	4605      	mov	r5, r0
 8012650:	4614      	mov	r4, r2
 8012652:	460e      	mov	r6, r1
 8012654:	461f      	mov	r7, r3
 8012656:	e8be 000f 	ldmia.w	lr!, {r0, r1, r2, r3}
 801265a:	b097      	sub	sp, #92	@ 0x5c
 801265c:	f10d 0c1c 	add.w	ip, sp, #28
 8012660:	e8ac 000f 	stmia.w	ip!, {r0, r1, r2, r3}
 8012664:	f8de 3000 	ldr.w	r3, [lr]
 8012668:	f8cc 3000 	str.w	r3, [ip]
 801266c:	f104 0e14 	add.w	lr, r4, #20
 8012670:	e8be 000f 	ldmia.w	lr!, {r0, r1, r2, r3}
 8012674:	f10d 0c30 	add.w	ip, sp, #48	@ 0x30
 8012678:	e8ac 000f 	stmia.w	ip!, {r0, r1, r2, r3}
 801267c:	f8de 3000 	ldr.w	r3, [lr]
 8012680:	f8cc 3000 	str.w	r3, [ip]
 8012684:	f104 0e28 	add.w	lr, r4, #40	@ 0x28
 8012688:	e8be 000f 	ldmia.w	lr!, {r0, r1, r2, r3}
 801268c:	f10d 0c44 	add.w	ip, sp, #68	@ 0x44
 8012690:	e8ac 000f 	stmia.w	ip!, {r0, r1, r2, r3}
 8012694:	f89d 908c 	ldrb.w	r9, [sp, #140]	@ 0x8c
 8012698:	f8bd a090 	ldrh.w	sl, [sp, #144]	@ 0x90
 801269c:	f8bd 8088 	ldrh.w	r8, [sp, #136]	@ 0x88
 80126a0:	f8de 3000 	ldr.w	r3, [lr]
 80126a4:	f8cc 3000 	str.w	r3, [ip]
 80126a8:	9a21      	ldr	r2, [sp, #132]	@ 0x84
 80126aa:	682b      	ldr	r3, [r5, #0]
 80126ac:	9201      	str	r2, [sp, #4]
 80126ae:	e9cd 9a03 	strd	r9, sl, [sp, #12]
 80126b2:	9a20      	ldr	r2, [sp, #128]	@ 0x80
 80126b4:	9200      	str	r2, [sp, #0]
 80126b6:	f8cd 8008 	str.w	r8, [sp, #8]
 80126ba:	f8d3 b03c 	ldr.w	fp, [r3, #60]	@ 0x3c
 80126be:	aa07      	add	r2, sp, #28
 80126c0:	463b      	mov	r3, r7
 80126c2:	4631      	mov	r1, r6
 80126c4:	4628      	mov	r0, r5
 80126c6:	47d8      	blx	fp
 80126c8:	46a6      	mov	lr, r4
 80126ca:	e8be 000f 	ldmia.w	lr!, {r0, r1, r2, r3}
 80126ce:	f10d 0c1c 	add.w	ip, sp, #28
 80126d2:	e8ac 000f 	stmia.w	ip!, {r0, r1, r2, r3}
 80126d6:	f8de 3000 	ldr.w	r3, [lr]
 80126da:	f8cc 3000 	str.w	r3, [ip]
 80126de:	f104 0e28 	add.w	lr, r4, #40	@ 0x28
 80126e2:	e8be 000f 	ldmia.w	lr!, {r0, r1, r2, r3}
 80126e6:	f10d 0c30 	add.w	ip, sp, #48	@ 0x30
 80126ea:	e8ac 000f 	stmia.w	ip!, {r0, r1, r2, r3}
 80126ee:	343c      	adds	r4, #60	@ 0x3c
 80126f0:	f8de 3000 	ldr.w	r3, [lr]
 80126f4:	f8cc 3000 	str.w	r3, [ip]
 80126f8:	cc0f      	ldmia	r4!, {r0, r1, r2, r3}
 80126fa:	f10d 0c44 	add.w	ip, sp, #68	@ 0x44
 80126fe:	e8ac 000f 	stmia.w	ip!, {r0, r1, r2, r3}
 8012702:	6823      	ldr	r3, [r4, #0]
 8012704:	f8cc 3000 	str.w	r3, [ip]
 8012708:	682b      	ldr	r3, [r5, #0]
 801270a:	e9cd 9a03 	strd	r9, sl, [sp, #12]
 801270e:	9a21      	ldr	r2, [sp, #132]	@ 0x84
 8012710:	9201      	str	r2, [sp, #4]
 8012712:	9a20      	ldr	r2, [sp, #128]	@ 0x80
 8012714:	9200      	str	r2, [sp, #0]
 8012716:	f8cd 8008 	str.w	r8, [sp, #8]
 801271a:	6bdc      	ldr	r4, [r3, #60]	@ 0x3c
 801271c:	aa07      	add	r2, sp, #28
 801271e:	463b      	mov	r3, r7
 8012720:	4631      	mov	r1, r6
 8012722:	4628      	mov	r0, r5
 8012724:	47a0      	blx	r4
 8012726:	b017      	add	sp, #92	@ 0x5c
 8012728:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}

0801272c <_ZN8touchgfx3LCD28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth>:
 801272c:	2000      	movs	r0, #0
 801272e:	4770      	bx	lr

08012730 <_ZN8touchgfx3LCD22drawTextureMapScanLineERKNS_14DrawingSurfaceERKNS_9GradientsEPKNS_4EdgeES9_RKNS_14TextureSurfaceERKNS_4RectESF_tht>:
 8012730:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8012734:	b08d      	sub	sp, #52	@ 0x34
 8012736:	4688      	mov	r8, r1
 8012738:	9916      	ldr	r1, [sp, #88]	@ 0x58
 801273a:	f8d3 c000 	ldr.w	ip, [r3]
 801273e:	680f      	ldr	r7, [r1, #0]
 8012740:	f8bd 4070 	ldrh.w	r4, [sp, #112]	@ 0x70
 8012744:	ed92 4a09 	vldr	s8, [r2, #36]	@ 0x24
 8012748:	edd2 4a0b 	vldr	s9, [r2, #44]	@ 0x2c
 801274c:	edd3 6a07 	vldr	s13, [r3, #28]
 8012750:	9918      	ldr	r1, [sp, #96]	@ 0x60
 8012752:	f8dd a064 	ldr.w	sl, [sp, #100]	@ 0x64
 8012756:	f9b1 9000 	ldrsh.w	r9, [r1]
 801275a:	f9ba 1000 	ldrsh.w	r1, [sl]
 801275e:	edd3 1a0a 	vldr	s3, [r3, #40]	@ 0x28
 8012762:	ed93 2a0d 	vldr	s4, [r3, #52]	@ 0x34
 8012766:	eba7 070c 	sub.w	r7, r7, ip
 801276a:	42bc      	cmp	r4, r7
 801276c:	bfa8      	it	ge
 801276e:	463c      	movge	r4, r7
 8012770:	ee07 4a90 	vmov	s15, r4
 8012774:	eeb8 5ae7 	vcvt.f32.s32	s10, s15
 8012778:	edd2 7a0d 	vldr	s15, [r2, #52]	@ 0x34
 801277c:	ee25 4a04 	vmul.f32	s8, s10, s8
 8012780:	ee65 4a24 	vmul.f32	s9, s10, s9
 8012784:	ee25 5a27 	vmul.f32	s10, s10, s15
 8012788:	eef7 7a00 	vmov.f32	s15, #112	@ 0x3f800000  1.0
 801278c:	ee87 7aa6 	vdiv.f32	s14, s15, s13
 8012790:	eb09 0e0c 	add.w	lr, r9, ip
 8012794:	4571      	cmp	r1, lr
 8012796:	ee71 0aa4 	vadd.f32	s1, s3, s9
 801279a:	ee32 1a05 	vadd.f32	s2, s4, s10
 801279e:	ee36 0a84 	vadd.f32	s0, s13, s8
 80127a2:	ee61 1a87 	vmul.f32	s3, s3, s14
 80127a6:	ee22 2a07 	vmul.f32	s4, s4, s14
 80127aa:	f340 808d 	ble.w	80128c8 <_ZN8touchgfx3LCD22drawTextureMapScanLineERKNS_14DrawingSurfaceERKNS_9GradientsEPKNS_4EdgeES9_RKNS_14TextureSurfaceERKNS_4RectESF_tht+0x198>
 80127ae:	eba1 060e 	sub.w	r6, r1, lr
 80127b2:	fb96 f5f4 	sdiv	r5, r6, r4
 80127b6:	ee07 5a10 	vmov	s14, r5
 80127ba:	eeb8 7ac7 	vcvt.f32.s32	s14, s14
 80127be:	2d00      	cmp	r5, #0
 80127c0:	fb04 6615 	mls	r6, r4, r5, r6
 80127c4:	eea7 0a04 	vfma.f32	s0, s14, s8
 80127c8:	eee7 0a24 	vfma.f32	s1, s14, s9
 80127cc:	eea7 1a05 	vfma.f32	s2, s14, s10
 80127d0:	dd13      	ble.n	80127fa <_ZN8touchgfx3LCD22drawTextureMapScanLineERKNS_14DrawingSurfaceERKNS_9GradientsEPKNS_4EdgeES9_RKNS_14TextureSurfaceERKNS_4RectESF_tht+0xca>
 80127d2:	ee70 6a44 	vsub.f32	s13, s0, s8
 80127d6:	ee70 1ae4 	vsub.f32	s3, s1, s9
 80127da:	eef5 6a40 	vcmp.f32	s13, #0.0
 80127de:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 80127e2:	bf18      	it	ne
 80127e4:	ee87 7aa6 	vdivne.f32	s14, s15, s13
 80127e8:	ee31 2a45 	vsub.f32	s4, s2, s10
 80127ec:	bf08      	it	eq
 80127ee:	eeb0 7a67 	vmoveq.f32	s14, s15
 80127f2:	ee61 1a87 	vmul.f32	s3, s3, s14
 80127f6:	ee22 2a07 	vmul.f32	s4, s4, s14
 80127fa:	fb05 f204 	mul.w	r2, r5, r4
 80127fe:	1abf      	subs	r7, r7, r2
 8012800:	4494      	add	ip, r2
 8012802:	f8ba 2004 	ldrh.w	r2, [sl, #4]
 8012806:	4411      	add	r1, r2
 8012808:	eb09 020c 	add.w	r2, r9, ip
 801280c:	443a      	add	r2, r7
 801280e:	b209      	sxth	r1, r1
 8012810:	428a      	cmp	r2, r1
 8012812:	bfc4      	itt	gt
 8012814:	eba1 0209 	subgt.w	r2, r1, r9
 8012818:	eba2 070c 	subgt.w	r7, r2, ip
 801281c:	2f00      	cmp	r7, #0
 801281e:	dd50      	ble.n	80128c2 <_ZN8touchgfx3LCD22drawTextureMapScanLineERKNS_14DrawingSurfaceERKNS_9GradientsEPKNS_4EdgeES9_RKNS_14TextureSurfaceERKNS_4RectESF_tht+0x192>
 8012820:	fb97 f1f4 	sdiv	r1, r7, r4
 8012824:	fb04 7211 	mls	r2, r4, r1, r7
 8012828:	b90a      	cbnz	r2, 801282e <_ZN8touchgfx3LCD22drawTextureMapScanLineERKNS_14DrawingSurfaceERKNS_9GradientsEPKNS_4EdgeES9_RKNS_14TextureSurfaceERKNS_4RectESF_tht+0xfe>
 801282a:	3901      	subs	r1, #1
 801282c:	4622      	mov	r2, r4
 801282e:	eec7 3a80 	vdiv.f32	s7, s15, s0
 8012832:	6840      	ldr	r0, [r0, #4]
 8012834:	900b      	str	r0, [sp, #44]	@ 0x2c
 8012836:	f8d0 a000 	ldr.w	sl, [r0]
 801283a:	9817      	ldr	r0, [sp, #92]	@ 0x5c
 801283c:	9008      	str	r0, [sp, #32]
 801283e:	f89d b06c 	ldrb.w	fp, [sp, #108]	@ 0x6c
 8012842:	9818      	ldr	r0, [sp, #96]	@ 0x60
 8012844:	f8cd b024 	str.w	fp, [sp, #36]	@ 0x24
 8012848:	f9b0 b002 	ldrsh.w	fp, [r0, #2]
 801284c:	695b      	ldr	r3, [r3, #20]
 801284e:	980b      	ldr	r0, [sp, #44]	@ 0x2c
 8012850:	445b      	add	r3, fp
 8012852:	eef0 6a42 	vmov.f32	s13, s4
 8012856:	ee60 2aa3 	vmul.f32	s5, s1, s7
 801285a:	ee21 3a23 	vmul.f32	s6, s2, s7
 801285e:	ee72 7ae1 	vsub.f32	s15, s5, s3
 8012862:	eefe 6ac8 	vcvt.s32.f32	s13, s13, #16
 8012866:	eefe 7ac8 	vcvt.s32.f32	s15, s15, #16
 801286a:	9307      	str	r3, [sp, #28]
 801286c:	ee17 7a90 	vmov	r7, s15
 8012870:	ee73 7a42 	vsub.f32	s15, s6, s4
 8012874:	eeb0 7a61 	vmov.f32	s14, s3
 8012878:	eefe 7ac8 	vcvt.s32.f32	s15, s15, #16
 801287c:	ee16 3a90 	vmov	r3, s13
 8012880:	fb97 f7f4 	sdiv	r7, r7, r4
 8012884:	ee17 ca90 	vmov	ip, s15
 8012888:	eebe 7ac8 	vcvt.s32.f32	s14, s14, #16
 801288c:	fb9c fcf4 	sdiv	ip, ip, r4
 8012890:	fb0c 3306 	mla	r3, ip, r6, r3
 8012894:	9302      	str	r3, [sp, #8]
 8012896:	ee17 3a10 	vmov	r3, s14
 801289a:	44b6      	add	lr, r6
 801289c:	fb04 e505 	mla	r5, r4, r5, lr
 80128a0:	e9cd 7c03 	strd	r7, ip, [sp, #12]
 80128a4:	fb07 3706 	mla	r7, r7, r6, r3
 80128a8:	e9cd 8505 	strd	r8, r5, [sp, #20]
 80128ac:	e9cd 4700 	strd	r4, r7, [sp]
 80128b0:	2900      	cmp	r1, #0
 80128b2:	bfcc      	ite	gt
 80128b4:	46a1      	movgt	r9, r4
 80128b6:	4691      	movle	r9, r2
 80128b8:	eba9 0306 	sub.w	r3, r9, r6
 80128bc:	f8da 4008 	ldr.w	r4, [sl, #8]
 80128c0:	47a0      	blx	r4
 80128c2:	b00d      	add	sp, #52	@ 0x34
 80128c4:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 80128c8:	2500      	movs	r5, #0
 80128ca:	462e      	mov	r6, r5
 80128cc:	e799      	b.n	8012802 <_ZN8touchgfx3LCD22drawTextureMapScanLineERKNS_14DrawingSurfaceERKNS_9GradientsEPKNS_4EdgeES9_RKNS_14TextureSurfaceERKNS_4RectESF_tht+0xd2>
	...

080128d0 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht>:
 80128d0:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 80128d4:	b0db      	sub	sp, #364	@ 0x16c
 80128d6:	461d      	mov	r5, r3
 80128d8:	f8bd 3198 	ldrh.w	r3, [sp, #408]	@ 0x198
 80128dc:	930a      	str	r3, [sp, #40]	@ 0x28
 80128de:	f89d 319c 	ldrb.w	r3, [sp, #412]	@ 0x19c
 80128e2:	930b      	str	r3, [sp, #44]	@ 0x2c
 80128e4:	f8bd 31a0 	ldrh.w	r3, [sp, #416]	@ 0x1a0
 80128e8:	9310      	str	r3, [sp, #64]	@ 0x40
 80128ea:	6803      	ldr	r3, [r0, #0]
 80128ec:	910f      	str	r1, [sp, #60]	@ 0x3c
 80128ee:	6c5f      	ldr	r7, [r3, #68]	@ 0x44
 80128f0:	9009      	str	r0, [sp, #36]	@ 0x24
 80128f2:	4614      	mov	r4, r2
 80128f4:	4629      	mov	r1, r5
 80128f6:	e9dd 230a 	ldrd	r2, r3, [sp, #40]	@ 0x28
 80128fa:	f8dd b194 	ldr.w	fp, [sp, #404]	@ 0x194
 80128fe:	47b8      	blx	r7
 8012900:	9b09      	ldr	r3, [sp, #36]	@ 0x24
 8012902:	6058      	str	r0, [r3, #4]
 8012904:	2800      	cmp	r0, #0
 8012906:	f000 83a1 	beq.w	801304c <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x77c>
 801290a:	682b      	ldr	r3, [r5, #0]
 801290c:	9314      	str	r3, [sp, #80]	@ 0x50
 801290e:	686b      	ldr	r3, [r5, #4]
 8012910:	9315      	str	r3, [sp, #84]	@ 0x54
 8012912:	4bc4      	ldr	r3, [pc, #784]	@ (8012c24 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x354>)
 8012914:	ed94 7a02 	vldr	s14, [r4, #8]
 8012918:	7819      	ldrb	r1, [r3, #0]
 801291a:	e9d5 2302 	ldrd	r2, r3, [r5, #8]
 801291e:	eef2 7a04 	vmov.f32	s15, #36	@ 0x41200000  10.0
 8012922:	2900      	cmp	r1, #0
 8012924:	eeb4 7ae7 	vcmpe.f32	s14, s15
 8012928:	bf16      	itet	ne
 801292a:	4619      	movne	r1, r3
 801292c:	4611      	moveq	r1, r2
 801292e:	4613      	movne	r3, r2
 8012930:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 8012934:	9116      	str	r1, [sp, #88]	@ 0x58
 8012936:	e9cd 3217 	strd	r3, r2, [sp, #92]	@ 0x5c
 801293a:	f240 8387 	bls.w	801304c <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x77c>
 801293e:	ed94 7a07 	vldr	s14, [r4, #28]
 8012942:	eeb4 7ae7 	vcmpe.f32	s14, s15
 8012946:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 801294a:	f240 837f 	bls.w	801304c <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x77c>
 801294e:	ed94 7a0c 	vldr	s14, [r4, #48]	@ 0x30
 8012952:	eeb4 7ae7 	vcmpe.f32	s14, s15
 8012956:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 801295a:	f240 8377 	bls.w	801304c <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x77c>
 801295e:	6822      	ldr	r2, [r4, #0]
 8012960:	4bb1      	ldr	r3, [pc, #708]	@ (8012c28 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x358>)
 8012962:	429a      	cmp	r2, r3
 8012964:	f2c0 8372 	blt.w	801304c <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x77c>
 8012968:	49b0      	ldr	r1, [pc, #704]	@ (8012c2c <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x35c>)
 801296a:	6963      	ldr	r3, [r4, #20]
 801296c:	428a      	cmp	r2, r1
 801296e:	f300 836d 	bgt.w	801304c <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x77c>
 8012972:	f503 331c 	add.w	r3, r3, #159744	@ 0x27000
 8012976:	48ae      	ldr	r0, [pc, #696]	@ (8012c30 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x360>)
 8012978:	33ff      	adds	r3, #255	@ 0xff
 801297a:	4283      	cmp	r3, r0
 801297c:	f200 8366 	bhi.w	801304c <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x77c>
 8012980:	6aa3      	ldr	r3, [r4, #40]	@ 0x28
 8012982:	4dac      	ldr	r5, [pc, #688]	@ (8012c34 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x364>)
 8012984:	f503 331c 	add.w	r3, r3, #159744	@ 0x27000
 8012988:	33ff      	adds	r3, #255	@ 0xff
 801298a:	42ab      	cmp	r3, r5
 801298c:	f200 835e 	bhi.w	801304c <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x77c>
 8012990:	6862      	ldr	r2, [r4, #4]
 8012992:	f502 331c 	add.w	r3, r2, #159744	@ 0x27000
 8012996:	33ff      	adds	r3, #255	@ 0xff
 8012998:	4283      	cmp	r3, r0
 801299a:	f200 8357 	bhi.w	801304c <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x77c>
 801299e:	69a1      	ldr	r1, [r4, #24]
 80129a0:	f501 331c 	add.w	r3, r1, #159744	@ 0x27000
 80129a4:	33ff      	adds	r3, #255	@ 0xff
 80129a6:	4283      	cmp	r3, r0
 80129a8:	f200 8350 	bhi.w	801304c <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x77c>
 80129ac:	6ae3      	ldr	r3, [r4, #44]	@ 0x2c
 80129ae:	f503 301c 	add.w	r0, r3, #159744	@ 0x27000
 80129b2:	30ff      	adds	r0, #255	@ 0xff
 80129b4:	42a8      	cmp	r0, r5
 80129b6:	f200 8349 	bhi.w	801304c <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x77c>
 80129ba:	428a      	cmp	r2, r1
 80129bc:	f280 8110 	bge.w	8012be0 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x310>
 80129c0:	429a      	cmp	r2, r3
 80129c2:	f300 8119 	bgt.w	8012bf8 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x328>
 80129c6:	4299      	cmp	r1, r3
 80129c8:	f280 811d 	bge.w	8012c06 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x336>
 80129cc:	2502      	movs	r5, #2
 80129ce:	2701      	movs	r7, #1
 80129d0:	46a9      	mov	r9, r5
 80129d2:	46b8      	mov	r8, r7
 80129d4:	f04f 0a00 	mov.w	sl, #0
 80129d8:	4621      	mov	r1, r4
 80129da:	a849      	add	r0, sp, #292	@ 0x124
 80129dc:	f003 fd3a 	bl	8016454 <_ZN8touchgfx9GradientsC1EPKNS_7Point3DE>
 80129e0:	4622      	mov	r2, r4
 80129e2:	4653      	mov	r3, sl
 80129e4:	a949      	add	r1, sp, #292	@ 0x124
 80129e6:	f8cd 9000 	str.w	r9, [sp]
 80129ea:	a819      	add	r0, sp, #100	@ 0x64
 80129ec:	f003 fe62 	bl	80166b4 <_ZN8touchgfx4EdgeC1ERKNS_9GradientsEPKNS_7Point3DEii>
 80129f0:	4622      	mov	r2, r4
 80129f2:	4653      	mov	r3, sl
 80129f4:	a949      	add	r1, sp, #292	@ 0x124
 80129f6:	f8cd 8000 	str.w	r8, [sp]
 80129fa:	a829      	add	r0, sp, #164	@ 0xa4
 80129fc:	f003 fe5a 	bl	80166b4 <_ZN8touchgfx4EdgeC1ERKNS_9GradientsEPKNS_7Point3DEii>
 8012a00:	4643      	mov	r3, r8
 8012a02:	4622      	mov	r2, r4
 8012a04:	a949      	add	r1, sp, #292	@ 0x124
 8012a06:	f8cd 9000 	str.w	r9, [sp]
 8012a0a:	a839      	add	r0, sp, #228	@ 0xe4
 8012a0c:	f003 fe52 	bl	80166b4 <_ZN8touchgfx4EdgeC1ERKNS_9GradientsEPKNS_7Point3DEii>
 8012a10:	42af      	cmp	r7, r5
 8012a12:	bfb5      	itete	lt
 8012a14:	2300      	movlt	r3, #0
 8012a16:	2301      	movge	r3, #1
 8012a18:	930e      	strlt	r3, [sp, #56]	@ 0x38
 8012a1a:	930e      	strge	r3, [sp, #56]	@ 0x38
 8012a1c:	9b0f      	ldr	r3, [sp, #60]	@ 0x3c
 8012a1e:	e893 0003 	ldmia.w	r3, {r0, r1}
 8012a22:	af12      	add	r7, sp, #72	@ 0x48
 8012a24:	bfb9      	ittee	lt
 8012a26:	ad29      	addlt	r5, sp, #164	@ 0xa4
 8012a28:	ac19      	addlt	r4, sp, #100	@ 0x64
 8012a2a:	ad19      	addge	r5, sp, #100	@ 0x64
 8012a2c:	ac29      	addge	r4, sp, #164	@ 0xa4
 8012a2e:	e887 0003 	stmia.w	r7, {r0, r1}
 8012a32:	b928      	cbnz	r0, 8012a40 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x170>
 8012a34:	4b80      	ldr	r3, [pc, #512]	@ (8012c38 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x368>)
 8012a36:	6818      	ldr	r0, [r3, #0]
 8012a38:	6803      	ldr	r3, [r0, #0]
 8012a3a:	6a9b      	ldr	r3, [r3, #40]	@ 0x28
 8012a3c:	4798      	blx	r3
 8012a3e:	6038      	str	r0, [r7, #0]
 8012a40:	9b64      	ldr	r3, [sp, #400]	@ 0x190
 8012a42:	f8bb 0006 	ldrh.w	r0, [fp, #6]
 8012a46:	f9b3 3002 	ldrsh.w	r3, [r3, #2]
 8012a4a:	930c      	str	r3, [sp, #48]	@ 0x30
 8012a4c:	990c      	ldr	r1, [sp, #48]	@ 0x30
 8012a4e:	6963      	ldr	r3, [r4, #20]
 8012a50:	9a2f      	ldr	r2, [sp, #188]	@ 0xbc
 8012a52:	440b      	add	r3, r1
 8012a54:	f9bb 1002 	ldrsh.w	r1, [fp, #2]
 8012a58:	4408      	add	r0, r1
 8012a5a:	b200      	sxth	r0, r0
 8012a5c:	4283      	cmp	r3, r0
 8012a5e:	900d      	str	r0, [sp, #52]	@ 0x34
 8012a60:	f280 80dd 	bge.w	8012c1e <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x34e>
 8012a64:	428b      	cmp	r3, r1
 8012a66:	da08      	bge.n	8012a7a <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x1aa>
 8012a68:	2a00      	cmp	r2, #0
 8012a6a:	dd06      	ble.n	8012a7a <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x1aa>
 8012a6c:	1acb      	subs	r3, r1, r3
 8012a6e:	429a      	cmp	r2, r3
 8012a70:	f2c0 80e4 	blt.w	8012c3c <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x36c>
 8012a74:	2b00      	cmp	r3, #0
 8012a76:	f300 80e2 	bgt.w	8012c3e <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x36e>
 8012a7a:	6967      	ldr	r7, [r4, #20]
 8012a7c:	9b0c      	ldr	r3, [sp, #48]	@ 0x30
 8012a7e:	443b      	add	r3, r7
 8012a80:	461f      	mov	r7, r3
 8012a82:	9b0d      	ldr	r3, [sp, #52]	@ 0x34
 8012a84:	1bdf      	subs	r7, r3, r7
 8012a86:	4297      	cmp	r7, r2
 8012a88:	bfa8      	it	ge
 8012a8a:	4617      	movge	r7, r2
 8012a8c:	f10d 0850 	add.w	r8, sp, #80	@ 0x50
 8012a90:	2f00      	cmp	r7, #0
 8012a92:	f340 8166 	ble.w	8012d62 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x492>
 8012a96:	9b64      	ldr	r3, [sp, #400]	@ 0x190
 8012a98:	6829      	ldr	r1, [r5, #0]
 8012a9a:	f9b3 2000 	ldrsh.w	r2, [r3]
 8012a9e:	f9bb 3000 	ldrsh.w	r3, [fp]
 8012aa2:	6820      	ldr	r0, [r4, #0]
 8012aa4:	4411      	add	r1, r2
 8012aa6:	4299      	cmp	r1, r3
 8012aa8:	dd1a      	ble.n	8012ae0 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x210>
 8012aaa:	f8bb 1004 	ldrh.w	r1, [fp, #4]
 8012aae:	440b      	add	r3, r1
 8012ab0:	4402      	add	r2, r0
 8012ab2:	b21b      	sxth	r3, r3
 8012ab4:	429a      	cmp	r2, r3
 8012ab6:	dc13      	bgt.n	8012ae0 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x210>
 8012ab8:	9b09      	ldr	r3, [sp, #36]	@ 0x24
 8012aba:	9a10      	ldr	r2, [sp, #64]	@ 0x40
 8012abc:	681b      	ldr	r3, [r3, #0]
 8012abe:	9206      	str	r2, [sp, #24]
 8012ac0:	9a0b      	ldr	r2, [sp, #44]	@ 0x2c
 8012ac2:	9205      	str	r2, [sp, #20]
 8012ac4:	9a0a      	ldr	r2, [sp, #40]	@ 0x28
 8012ac6:	9500      	str	r5, [sp, #0]
 8012ac8:	e9cd b203 	strd	fp, r2, [sp, #12]
 8012acc:	9a64      	ldr	r2, [sp, #400]	@ 0x190
 8012ace:	9809      	ldr	r0, [sp, #36]	@ 0x24
 8012ad0:	e9cd 8201 	strd	r8, r2, [sp, #4]
 8012ad4:	a912      	add	r1, sp, #72	@ 0x48
 8012ad6:	f8d3 9048 	ldr.w	r9, [r3, #72]	@ 0x48
 8012ada:	aa49      	add	r2, sp, #292	@ 0x124
 8012adc:	4623      	mov	r3, r4
 8012ade:	47c8      	blx	r9
 8012ae0:	e9d4 2300 	ldrd	r2, r3, [r4]
 8012ae4:	441a      	add	r2, r3
 8012ae6:	6963      	ldr	r3, [r4, #20]
 8012ae8:	ed94 7a0a 	vldr	s14, [r4, #40]	@ 0x28
 8012aec:	edd4 7a0b 	vldr	s15, [r4, #44]	@ 0x2c
 8012af0:	edd4 6a0e 	vldr	s13, [r4, #56]	@ 0x38
 8012af4:	68a1      	ldr	r1, [r4, #8]
 8012af6:	ed94 6a08 	vldr	s12, [r4, #32]
 8012afa:	6022      	str	r2, [r4, #0]
 8012afc:	3301      	adds	r3, #1
 8012afe:	6163      	str	r3, [r4, #20]
 8012b00:	69a3      	ldr	r3, [r4, #24]
 8012b02:	ee37 7a27 	vadd.f32	s14, s14, s15
 8012b06:	3b01      	subs	r3, #1
 8012b08:	edd4 7a0d 	vldr	s15, [r4, #52]	@ 0x34
 8012b0c:	61a3      	str	r3, [r4, #24]
 8012b0e:	6923      	ldr	r3, [r4, #16]
 8012b10:	ed84 7a0a 	vstr	s14, [r4, #40]	@ 0x28
 8012b14:	ee77 7aa6 	vadd.f32	s15, s15, s13
 8012b18:	edd4 6a07 	vldr	s13, [r4, #28]
 8012b1c:	edc4 7a0d 	vstr	s15, [r4, #52]	@ 0x34
 8012b20:	440b      	add	r3, r1
 8012b22:	68e1      	ldr	r1, [r4, #12]
 8012b24:	6123      	str	r3, [r4, #16]
 8012b26:	ee76 6a86 	vadd.f32	s13, s13, s12
 8012b2a:	428b      	cmp	r3, r1
 8012b2c:	edc4 6a07 	vstr	s13, [r4, #28]
 8012b30:	db15      	blt.n	8012b5e <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x28e>
 8012b32:	ed94 6a09 	vldr	s12, [r4, #36]	@ 0x24
 8012b36:	ee76 6a26 	vadd.f32	s13, s12, s13
 8012b3a:	3201      	adds	r2, #1
 8012b3c:	edc4 6a07 	vstr	s13, [r4, #28]
 8012b40:	edd4 6a0c 	vldr	s13, [r4, #48]	@ 0x30
 8012b44:	6022      	str	r2, [r4, #0]
 8012b46:	ee36 7a87 	vadd.f32	s14, s13, s14
 8012b4a:	1a5b      	subs	r3, r3, r1
 8012b4c:	ed84 7a0a 	vstr	s14, [r4, #40]	@ 0x28
 8012b50:	ed94 7a0f 	vldr	s14, [r4, #60]	@ 0x3c
 8012b54:	6123      	str	r3, [r4, #16]
 8012b56:	ee77 7a27 	vadd.f32	s15, s14, s15
 8012b5a:	edc4 7a0d 	vstr	s15, [r4, #52]	@ 0x34
 8012b5e:	e9d5 2300 	ldrd	r2, r3, [r5]
 8012b62:	441a      	add	r2, r3
 8012b64:	696b      	ldr	r3, [r5, #20]
 8012b66:	ed95 7a0a 	vldr	s14, [r5, #40]	@ 0x28
 8012b6a:	edd5 7a0b 	vldr	s15, [r5, #44]	@ 0x2c
 8012b6e:	edd5 6a0e 	vldr	s13, [r5, #56]	@ 0x38
 8012b72:	68a9      	ldr	r1, [r5, #8]
 8012b74:	ed95 6a08 	vldr	s12, [r5, #32]
 8012b78:	602a      	str	r2, [r5, #0]
 8012b7a:	3301      	adds	r3, #1
 8012b7c:	616b      	str	r3, [r5, #20]
 8012b7e:	69ab      	ldr	r3, [r5, #24]
 8012b80:	ee37 7a27 	vadd.f32	s14, s14, s15
 8012b84:	3b01      	subs	r3, #1
 8012b86:	edd5 7a0d 	vldr	s15, [r5, #52]	@ 0x34
 8012b8a:	61ab      	str	r3, [r5, #24]
 8012b8c:	692b      	ldr	r3, [r5, #16]
 8012b8e:	ed85 7a0a 	vstr	s14, [r5, #40]	@ 0x28
 8012b92:	ee77 7aa6 	vadd.f32	s15, s15, s13
 8012b96:	edd5 6a07 	vldr	s13, [r5, #28]
 8012b9a:	edc5 7a0d 	vstr	s15, [r5, #52]	@ 0x34
 8012b9e:	440b      	add	r3, r1
 8012ba0:	68e9      	ldr	r1, [r5, #12]
 8012ba2:	612b      	str	r3, [r5, #16]
 8012ba4:	ee76 6a86 	vadd.f32	s13, s13, s12
 8012ba8:	428b      	cmp	r3, r1
 8012baa:	edc5 6a07 	vstr	s13, [r5, #28]
 8012bae:	db15      	blt.n	8012bdc <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x30c>
 8012bb0:	ed95 6a09 	vldr	s12, [r5, #36]	@ 0x24
 8012bb4:	ee76 6a26 	vadd.f32	s13, s12, s13
 8012bb8:	3201      	adds	r2, #1
 8012bba:	edc5 6a07 	vstr	s13, [r5, #28]
 8012bbe:	edd5 6a0c 	vldr	s13, [r5, #48]	@ 0x30
 8012bc2:	602a      	str	r2, [r5, #0]
 8012bc4:	ee36 7a87 	vadd.f32	s14, s13, s14
 8012bc8:	1a5b      	subs	r3, r3, r1
 8012bca:	ed85 7a0a 	vstr	s14, [r5, #40]	@ 0x28
 8012bce:	ed95 7a0f 	vldr	s14, [r5, #60]	@ 0x3c
 8012bd2:	612b      	str	r3, [r5, #16]
 8012bd4:	ee77 7a27 	vadd.f32	s15, s14, s15
 8012bd8:	edc5 7a0d 	vstr	s15, [r5, #52]	@ 0x34
 8012bdc:	3f01      	subs	r7, #1
 8012bde:	e757      	b.n	8012a90 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x1c0>
 8012be0:	4299      	cmp	r1, r3
 8012be2:	dc13      	bgt.n	8012c0c <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x33c>
 8012be4:	429a      	cmp	r2, r3
 8012be6:	da14      	bge.n	8012c12 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x342>
 8012be8:	2502      	movs	r5, #2
 8012bea:	2703      	movs	r7, #3
 8012bec:	46a9      	mov	r9, r5
 8012bee:	f04f 0800 	mov.w	r8, #0
 8012bf2:	f04f 0a01 	mov.w	sl, #1
 8012bf6:	e6ef      	b.n	80129d8 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x108>
 8012bf8:	2501      	movs	r5, #1
 8012bfa:	2700      	movs	r7, #0
 8012bfc:	46a9      	mov	r9, r5
 8012bfe:	46b8      	mov	r8, r7
 8012c00:	f04f 0a02 	mov.w	sl, #2
 8012c04:	e6e8      	b.n	80129d8 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x108>
 8012c06:	2501      	movs	r5, #1
 8012c08:	2702      	movs	r7, #2
 8012c0a:	e6e1      	b.n	80129d0 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x100>
 8012c0c:	2500      	movs	r5, #0
 8012c0e:	2701      	movs	r7, #1
 8012c10:	e7f4      	b.n	8012bfc <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x32c>
 8012c12:	2702      	movs	r7, #2
 8012c14:	2503      	movs	r5, #3
 8012c16:	f04f 0900 	mov.w	r9, #0
 8012c1a:	46b8      	mov	r8, r7
 8012c1c:	e7e9      	b.n	8012bf2 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x322>
 8012c1e:	4613      	mov	r3, r2
 8012c20:	e728      	b.n	8012a74 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x1a4>
 8012c22:	bf00      	nop
 8012c24:	20002fa0 	.word	0x20002fa0
 8012c28:	fffd8f01 	.word	0xfffd8f01
 8012c2c:	00027100 	.word	0x00027100
 8012c30:	0004e1ff 	.word	0x0004e1ff
 8012c34:	0004e1fe 	.word	0x0004e1fe
 8012c38:	20002fa8 	.word	0x20002fa8
 8012c3c:	4613      	mov	r3, r2
 8012c3e:	992b      	ldr	r1, [sp, #172]	@ 0xac
 8012c40:	9111      	str	r1, [sp, #68]	@ 0x44
 8012c42:	e9dd 0a29 	ldrd	r0, sl, [sp, #164]	@ 0xa4
 8012c46:	e9dd 812c 	ldrd	r8, r1, [sp, #176]	@ 0xb0
 8012c4a:	9f2e      	ldr	r7, [sp, #184]	@ 0xb8
 8012c4c:	eddd 4a34 	vldr	s9, [sp, #208]	@ 0xd0
 8012c50:	ed9d 7a33 	vldr	s14, [sp, #204]	@ 0xcc
 8012c54:	ed9d 4a37 	vldr	s8, [sp, #220]	@ 0xdc
 8012c58:	eddd 7a36 	vldr	s15, [sp, #216]	@ 0xd8
 8012c5c:	eddd 3a31 	vldr	s7, [sp, #196]	@ 0xc4
 8012c60:	eddd 6a30 	vldr	s13, [sp, #192]	@ 0xc0
 8012c64:	ed9d 5a32 	vldr	s10, [sp, #200]	@ 0xc8
 8012c68:	eddd 5a35 	vldr	s11, [sp, #212]	@ 0xd4
 8012c6c:	ed9d 6a38 	vldr	s12, [sp, #224]	@ 0xe0
 8012c70:	469e      	mov	lr, r3
 8012c72:	469c      	mov	ip, r3
 8012c74:	f04f 0900 	mov.w	r9, #0
 8012c78:	f1bc 0f00 	cmp.w	ip, #0
 8012c7c:	d147      	bne.n	8012d0e <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x43e>
 8012c7e:	eb03 0c07 	add.w	ip, r3, r7
 8012c82:	1ad7      	subs	r7, r2, r3
 8012c84:	f1b9 0f00 	cmp.w	r9, #0
 8012c88:	d009      	beq.n	8012c9e <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x3ce>
 8012c8a:	e9cd c72e 	strd	ip, r7, [sp, #184]	@ 0xb8
 8012c8e:	9029      	str	r0, [sp, #164]	@ 0xa4
 8012c90:	ed8d 7a33 	vstr	s14, [sp, #204]	@ 0xcc
 8012c94:	edcd 7a36 	vstr	s15, [sp, #216]	@ 0xd8
 8012c98:	edcd 6a30 	vstr	s13, [sp, #192]	@ 0xc0
 8012c9c:	912d      	str	r1, [sp, #180]	@ 0xb4
 8012c9e:	991b      	ldr	r1, [sp, #108]	@ 0x6c
 8012ca0:	9111      	str	r1, [sp, #68]	@ 0x44
 8012ca2:	e9dd 0a19 	ldrd	r0, sl, [sp, #100]	@ 0x64
 8012ca6:	e9dd c71e 	ldrd	ip, r7, [sp, #120]	@ 0x78
 8012caa:	e9dd 911c 	ldrd	r9, r1, [sp, #112]	@ 0x70
 8012cae:	eddd 4a24 	vldr	s9, [sp, #144]	@ 0x90
 8012cb2:	eddd 6a23 	vldr	s13, [sp, #140]	@ 0x8c
 8012cb6:	ed9d 4a27 	vldr	s8, [sp, #156]	@ 0x9c
 8012cba:	ed9d 7a26 	vldr	s14, [sp, #152]	@ 0x98
 8012cbe:	eddd 3a21 	vldr	s7, [sp, #132]	@ 0x84
 8012cc2:	eddd 7a20 	vldr	s15, [sp, #128]	@ 0x80
 8012cc6:	ed9d 5a22 	vldr	s10, [sp, #136]	@ 0x88
 8012cca:	eddd 5a25 	vldr	s11, [sp, #148]	@ 0x94
 8012cce:	ed9d 6a28 	vldr	s12, [sp, #160]	@ 0xa0
 8012cd2:	f04f 0800 	mov.w	r8, #0
 8012cd6:	f1be 0f00 	cmp.w	lr, #0
 8012cda:	d031      	beq.n	8012d40 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x470>
 8012cdc:	9e11      	ldr	r6, [sp, #68]	@ 0x44
 8012cde:	4431      	add	r1, r6
 8012ce0:	4549      	cmp	r1, r9
 8012ce2:	4450      	add	r0, sl
 8012ce4:	ee76 6aa4 	vadd.f32	s13, s13, s9
 8012ce8:	ee37 7a04 	vadd.f32	s14, s14, s8
 8012cec:	ee77 7aa3 	vadd.f32	s15, s15, s7
 8012cf0:	db08      	blt.n	8012d04 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x434>
 8012cf2:	ee77 7a85 	vadd.f32	s15, s15, s10
 8012cf6:	ee76 6aa5 	vadd.f32	s13, s13, s11
 8012cfa:	ee37 7a06 	vadd.f32	s14, s14, s12
 8012cfe:	3001      	adds	r0, #1
 8012d00:	eba1 0109 	sub.w	r1, r1, r9
 8012d04:	f10e 3eff 	add.w	lr, lr, #4294967295
 8012d08:	f04f 0801 	mov.w	r8, #1
 8012d0c:	e7e3      	b.n	8012cd6 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x406>
 8012d0e:	9e11      	ldr	r6, [sp, #68]	@ 0x44
 8012d10:	4431      	add	r1, r6
 8012d12:	4541      	cmp	r1, r8
 8012d14:	4450      	add	r0, sl
 8012d16:	ee37 7a24 	vadd.f32	s14, s14, s9
 8012d1a:	ee77 7a84 	vadd.f32	s15, s15, s8
 8012d1e:	ee76 6aa3 	vadd.f32	s13, s13, s7
 8012d22:	db08      	blt.n	8012d36 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x466>
 8012d24:	ee76 6a85 	vadd.f32	s13, s13, s10
 8012d28:	ee37 7a25 	vadd.f32	s14, s14, s11
 8012d2c:	ee77 7a86 	vadd.f32	s15, s15, s12
 8012d30:	3001      	adds	r0, #1
 8012d32:	eba1 0108 	sub.w	r1, r1, r8
 8012d36:	f10c 3cff 	add.w	ip, ip, #4294967295
 8012d3a:	f04f 0901 	mov.w	r9, #1
 8012d3e:	e79b      	b.n	8012c78 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x3a8>
 8012d40:	449c      	add	ip, r3
 8012d42:	1aff      	subs	r7, r7, r3
 8012d44:	f1b8 0f00 	cmp.w	r8, #0
 8012d48:	d009      	beq.n	8012d5e <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x48e>
 8012d4a:	e9cd c71e 	strd	ip, r7, [sp, #120]	@ 0x78
 8012d4e:	9019      	str	r0, [sp, #100]	@ 0x64
 8012d50:	edcd 6a23 	vstr	s13, [sp, #140]	@ 0x8c
 8012d54:	ed8d 7a26 	vstr	s14, [sp, #152]	@ 0x98
 8012d58:	edcd 7a20 	vstr	s15, [sp, #128]	@ 0x80
 8012d5c:	911d      	str	r1, [sp, #116]	@ 0x74
 8012d5e:	1ad2      	subs	r2, r2, r3
 8012d60:	e68b      	b.n	8012a7a <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x1aa>
 8012d62:	9b0e      	ldr	r3, [sp, #56]	@ 0x38
 8012d64:	9a3f      	ldr	r2, [sp, #252]	@ 0xfc
 8012d66:	2b00      	cmp	r3, #0
 8012d68:	f000 80d1 	beq.w	8012f0e <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x63e>
 8012d6c:	ad19      	add	r5, sp, #100	@ 0x64
 8012d6e:	ac39      	add	r4, sp, #228	@ 0xe4
 8012d70:	9b64      	ldr	r3, [sp, #400]	@ 0x190
 8012d72:	f8bb 0006 	ldrh.w	r0, [fp, #6]
 8012d76:	f9b3 3002 	ldrsh.w	r3, [r3, #2]
 8012d7a:	930c      	str	r3, [sp, #48]	@ 0x30
 8012d7c:	990c      	ldr	r1, [sp, #48]	@ 0x30
 8012d7e:	6963      	ldr	r3, [r4, #20]
 8012d80:	440b      	add	r3, r1
 8012d82:	f9bb 1002 	ldrsh.w	r1, [fp, #2]
 8012d86:	4408      	add	r0, r1
 8012d88:	b200      	sxth	r0, r0
 8012d8a:	4283      	cmp	r3, r0
 8012d8c:	900d      	str	r0, [sp, #52]	@ 0x34
 8012d8e:	f280 80c1 	bge.w	8012f14 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x644>
 8012d92:	428b      	cmp	r3, r1
 8012d94:	da08      	bge.n	8012da8 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x4d8>
 8012d96:	2a00      	cmp	r2, #0
 8012d98:	dd06      	ble.n	8012da8 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x4d8>
 8012d9a:	1acb      	subs	r3, r1, r3
 8012d9c:	429a      	cmp	r2, r3
 8012d9e:	f2c0 80bb 	blt.w	8012f18 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x648>
 8012da2:	2b00      	cmp	r3, #0
 8012da4:	f300 80b9 	bgt.w	8012f1a <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x64a>
 8012da8:	6967      	ldr	r7, [r4, #20]
 8012daa:	9b0c      	ldr	r3, [sp, #48]	@ 0x30
 8012dac:	443b      	add	r3, r7
 8012dae:	461f      	mov	r7, r3
 8012db0:	9b0d      	ldr	r3, [sp, #52]	@ 0x34
 8012db2:	1bdf      	subs	r7, r3, r7
 8012db4:	4297      	cmp	r7, r2
 8012db6:	bfa8      	it	ge
 8012db8:	4617      	movge	r7, r2
 8012dba:	f10d 0850 	add.w	r8, sp, #80	@ 0x50
 8012dbe:	2f00      	cmp	r7, #0
 8012dc0:	f340 813c 	ble.w	801303c <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x76c>
 8012dc4:	9b64      	ldr	r3, [sp, #400]	@ 0x190
 8012dc6:	6829      	ldr	r1, [r5, #0]
 8012dc8:	f9b3 2000 	ldrsh.w	r2, [r3]
 8012dcc:	f9bb 3000 	ldrsh.w	r3, [fp]
 8012dd0:	6820      	ldr	r0, [r4, #0]
 8012dd2:	4411      	add	r1, r2
 8012dd4:	4299      	cmp	r1, r3
 8012dd6:	dd1a      	ble.n	8012e0e <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x53e>
 8012dd8:	f8bb 1004 	ldrh.w	r1, [fp, #4]
 8012ddc:	440b      	add	r3, r1
 8012dde:	4402      	add	r2, r0
 8012de0:	b21b      	sxth	r3, r3
 8012de2:	429a      	cmp	r2, r3
 8012de4:	dc13      	bgt.n	8012e0e <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x53e>
 8012de6:	9b09      	ldr	r3, [sp, #36]	@ 0x24
 8012de8:	9a10      	ldr	r2, [sp, #64]	@ 0x40
 8012dea:	681b      	ldr	r3, [r3, #0]
 8012dec:	9206      	str	r2, [sp, #24]
 8012dee:	9a0b      	ldr	r2, [sp, #44]	@ 0x2c
 8012df0:	9205      	str	r2, [sp, #20]
 8012df2:	9a0a      	ldr	r2, [sp, #40]	@ 0x28
 8012df4:	9500      	str	r5, [sp, #0]
 8012df6:	e9cd b203 	strd	fp, r2, [sp, #12]
 8012dfa:	9a64      	ldr	r2, [sp, #400]	@ 0x190
 8012dfc:	9809      	ldr	r0, [sp, #36]	@ 0x24
 8012dfe:	e9cd 8201 	strd	r8, r2, [sp, #4]
 8012e02:	a912      	add	r1, sp, #72	@ 0x48
 8012e04:	f8d3 9048 	ldr.w	r9, [r3, #72]	@ 0x48
 8012e08:	aa49      	add	r2, sp, #292	@ 0x124
 8012e0a:	4623      	mov	r3, r4
 8012e0c:	47c8      	blx	r9
 8012e0e:	e9d4 2300 	ldrd	r2, r3, [r4]
 8012e12:	441a      	add	r2, r3
 8012e14:	6963      	ldr	r3, [r4, #20]
 8012e16:	ed94 7a0a 	vldr	s14, [r4, #40]	@ 0x28
 8012e1a:	edd4 7a0b 	vldr	s15, [r4, #44]	@ 0x2c
 8012e1e:	edd4 6a0e 	vldr	s13, [r4, #56]	@ 0x38
 8012e22:	68a1      	ldr	r1, [r4, #8]
 8012e24:	ed94 6a08 	vldr	s12, [r4, #32]
 8012e28:	6022      	str	r2, [r4, #0]
 8012e2a:	3301      	adds	r3, #1
 8012e2c:	6163      	str	r3, [r4, #20]
 8012e2e:	69a3      	ldr	r3, [r4, #24]
 8012e30:	ee37 7a27 	vadd.f32	s14, s14, s15
 8012e34:	3b01      	subs	r3, #1
 8012e36:	edd4 7a0d 	vldr	s15, [r4, #52]	@ 0x34
 8012e3a:	61a3      	str	r3, [r4, #24]
 8012e3c:	6923      	ldr	r3, [r4, #16]
 8012e3e:	ed84 7a0a 	vstr	s14, [r4, #40]	@ 0x28
 8012e42:	ee77 7aa6 	vadd.f32	s15, s15, s13
 8012e46:	edd4 6a07 	vldr	s13, [r4, #28]
 8012e4a:	edc4 7a0d 	vstr	s15, [r4, #52]	@ 0x34
 8012e4e:	440b      	add	r3, r1
 8012e50:	68e1      	ldr	r1, [r4, #12]
 8012e52:	6123      	str	r3, [r4, #16]
 8012e54:	ee76 6a86 	vadd.f32	s13, s13, s12
 8012e58:	428b      	cmp	r3, r1
 8012e5a:	edc4 6a07 	vstr	s13, [r4, #28]
 8012e5e:	db15      	blt.n	8012e8c <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x5bc>
 8012e60:	ed94 6a09 	vldr	s12, [r4, #36]	@ 0x24
 8012e64:	ee76 6a26 	vadd.f32	s13, s12, s13
 8012e68:	3201      	adds	r2, #1
 8012e6a:	edc4 6a07 	vstr	s13, [r4, #28]
 8012e6e:	edd4 6a0c 	vldr	s13, [r4, #48]	@ 0x30
 8012e72:	6022      	str	r2, [r4, #0]
 8012e74:	ee36 7a87 	vadd.f32	s14, s13, s14
 8012e78:	1a5b      	subs	r3, r3, r1
 8012e7a:	ed84 7a0a 	vstr	s14, [r4, #40]	@ 0x28
 8012e7e:	ed94 7a0f 	vldr	s14, [r4, #60]	@ 0x3c
 8012e82:	6123      	str	r3, [r4, #16]
 8012e84:	ee77 7a27 	vadd.f32	s15, s14, s15
 8012e88:	edc4 7a0d 	vstr	s15, [r4, #52]	@ 0x34
 8012e8c:	e9d5 2300 	ldrd	r2, r3, [r5]
 8012e90:	441a      	add	r2, r3
 8012e92:	696b      	ldr	r3, [r5, #20]
 8012e94:	ed95 7a0a 	vldr	s14, [r5, #40]	@ 0x28
 8012e98:	edd5 7a0b 	vldr	s15, [r5, #44]	@ 0x2c
 8012e9c:	edd5 6a0e 	vldr	s13, [r5, #56]	@ 0x38
 8012ea0:	68a9      	ldr	r1, [r5, #8]
 8012ea2:	ed95 6a08 	vldr	s12, [r5, #32]
 8012ea6:	602a      	str	r2, [r5, #0]
 8012ea8:	3301      	adds	r3, #1
 8012eaa:	616b      	str	r3, [r5, #20]
 8012eac:	69ab      	ldr	r3, [r5, #24]
 8012eae:	ee37 7a27 	vadd.f32	s14, s14, s15
 8012eb2:	3b01      	subs	r3, #1
 8012eb4:	edd5 7a0d 	vldr	s15, [r5, #52]	@ 0x34
 8012eb8:	61ab      	str	r3, [r5, #24]
 8012eba:	692b      	ldr	r3, [r5, #16]
 8012ebc:	ed85 7a0a 	vstr	s14, [r5, #40]	@ 0x28
 8012ec0:	ee77 7aa6 	vadd.f32	s15, s15, s13
 8012ec4:	edd5 6a07 	vldr	s13, [r5, #28]
 8012ec8:	edc5 7a0d 	vstr	s15, [r5, #52]	@ 0x34
 8012ecc:	440b      	add	r3, r1
 8012ece:	68e9      	ldr	r1, [r5, #12]
 8012ed0:	612b      	str	r3, [r5, #16]
 8012ed2:	ee76 6a86 	vadd.f32	s13, s13, s12
 8012ed6:	428b      	cmp	r3, r1
 8012ed8:	edc5 6a07 	vstr	s13, [r5, #28]
 8012edc:	db15      	blt.n	8012f0a <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x63a>
 8012ede:	ed95 6a09 	vldr	s12, [r5, #36]	@ 0x24
 8012ee2:	ee76 6a26 	vadd.f32	s13, s12, s13
 8012ee6:	3201      	adds	r2, #1
 8012ee8:	edc5 6a07 	vstr	s13, [r5, #28]
 8012eec:	edd5 6a0c 	vldr	s13, [r5, #48]	@ 0x30
 8012ef0:	602a      	str	r2, [r5, #0]
 8012ef2:	ee36 7a87 	vadd.f32	s14, s13, s14
 8012ef6:	1a5b      	subs	r3, r3, r1
 8012ef8:	ed85 7a0a 	vstr	s14, [r5, #40]	@ 0x28
 8012efc:	ed95 7a0f 	vldr	s14, [r5, #60]	@ 0x3c
 8012f00:	612b      	str	r3, [r5, #16]
 8012f02:	ee77 7a27 	vadd.f32	s15, s14, s15
 8012f06:	edc5 7a0d 	vstr	s15, [r5, #52]	@ 0x34
 8012f0a:	3f01      	subs	r7, #1
 8012f0c:	e757      	b.n	8012dbe <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x4ee>
 8012f0e:	ad39      	add	r5, sp, #228	@ 0xe4
 8012f10:	ac19      	add	r4, sp, #100	@ 0x64
 8012f12:	e72d      	b.n	8012d70 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x4a0>
 8012f14:	4613      	mov	r3, r2
 8012f16:	e744      	b.n	8012da2 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x4d2>
 8012f18:	4613      	mov	r3, r2
 8012f1a:	e9dd 0a39 	ldrd	r0, sl, [sp, #228]	@ 0xe4
 8012f1e:	9e3b      	ldr	r6, [sp, #236]	@ 0xec
 8012f20:	f8dd c0f8 	ldr.w	ip, [sp, #248]	@ 0xf8
 8012f24:	ed9d 7a43 	vldr	s14, [sp, #268]	@ 0x10c
 8012f28:	eddd 4a44 	vldr	s9, [sp, #272]	@ 0x110
 8012f2c:	eddd 7a46 	vldr	s15, [sp, #280]	@ 0x118
 8012f30:	ed9d 4a47 	vldr	s8, [sp, #284]	@ 0x11c
 8012f34:	eddd 6a40 	vldr	s13, [sp, #256]	@ 0x100
 8012f38:	eddd 3a41 	vldr	s7, [sp, #260]	@ 0x104
 8012f3c:	993d      	ldr	r1, [sp, #244]	@ 0xf4
 8012f3e:	f8dd 80f0 	ldr.w	r8, [sp, #240]	@ 0xf0
 8012f42:	ed9d 5a42 	vldr	s10, [sp, #264]	@ 0x108
 8012f46:	eddd 5a45 	vldr	s11, [sp, #276]	@ 0x114
 8012f4a:	ed9d 6a48 	vldr	s12, [sp, #288]	@ 0x120
 8012f4e:	960e      	str	r6, [sp, #56]	@ 0x38
 8012f50:	469e      	mov	lr, r3
 8012f52:	461f      	mov	r7, r3
 8012f54:	f04f 0900 	mov.w	r9, #0
 8012f58:	2f00      	cmp	r7, #0
 8012f5a:	d146      	bne.n	8012fea <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x71a>
 8012f5c:	449c      	add	ip, r3
 8012f5e:	1ad7      	subs	r7, r2, r3
 8012f60:	f1b9 0f00 	cmp.w	r9, #0
 8012f64:	d009      	beq.n	8012f7a <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x6aa>
 8012f66:	e9cd c73e 	strd	ip, r7, [sp, #248]	@ 0xf8
 8012f6a:	9039      	str	r0, [sp, #228]	@ 0xe4
 8012f6c:	913d      	str	r1, [sp, #244]	@ 0xf4
 8012f6e:	edcd 6a40 	vstr	s13, [sp, #256]	@ 0x100
 8012f72:	ed8d 7a43 	vstr	s14, [sp, #268]	@ 0x10c
 8012f76:	edcd 7a46 	vstr	s15, [sp, #280]	@ 0x118
 8012f7a:	991b      	ldr	r1, [sp, #108]	@ 0x6c
 8012f7c:	910e      	str	r1, [sp, #56]	@ 0x38
 8012f7e:	e9dd 0a19 	ldrd	r0, sl, [sp, #100]	@ 0x64
 8012f82:	e9dd c71e 	ldrd	ip, r7, [sp, #120]	@ 0x78
 8012f86:	e9dd 911c 	ldrd	r9, r1, [sp, #112]	@ 0x70
 8012f8a:	eddd 4a24 	vldr	s9, [sp, #144]	@ 0x90
 8012f8e:	eddd 6a23 	vldr	s13, [sp, #140]	@ 0x8c
 8012f92:	ed9d 4a27 	vldr	s8, [sp, #156]	@ 0x9c
 8012f96:	ed9d 7a26 	vldr	s14, [sp, #152]	@ 0x98
 8012f9a:	eddd 3a21 	vldr	s7, [sp, #132]	@ 0x84
 8012f9e:	eddd 7a20 	vldr	s15, [sp, #128]	@ 0x80
 8012fa2:	ed9d 5a22 	vldr	s10, [sp, #136]	@ 0x88
 8012fa6:	eddd 5a25 	vldr	s11, [sp, #148]	@ 0x94
 8012faa:	ed9d 6a28 	vldr	s12, [sp, #160]	@ 0xa0
 8012fae:	f04f 0800 	mov.w	r8, #0
 8012fb2:	f1be 0f00 	cmp.w	lr, #0
 8012fb6:	d030      	beq.n	801301a <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x74a>
 8012fb8:	9e0e      	ldr	r6, [sp, #56]	@ 0x38
 8012fba:	4431      	add	r1, r6
 8012fbc:	4549      	cmp	r1, r9
 8012fbe:	4450      	add	r0, sl
 8012fc0:	ee76 6aa4 	vadd.f32	s13, s13, s9
 8012fc4:	ee37 7a04 	vadd.f32	s14, s14, s8
 8012fc8:	ee77 7aa3 	vadd.f32	s15, s15, s7
 8012fcc:	db08      	blt.n	8012fe0 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x710>
 8012fce:	ee77 7a85 	vadd.f32	s15, s15, s10
 8012fd2:	ee76 6aa5 	vadd.f32	s13, s13, s11
 8012fd6:	ee37 7a06 	vadd.f32	s14, s14, s12
 8012fda:	3001      	adds	r0, #1
 8012fdc:	eba1 0109 	sub.w	r1, r1, r9
 8012fe0:	f10e 3eff 	add.w	lr, lr, #4294967295
 8012fe4:	f04f 0801 	mov.w	r8, #1
 8012fe8:	e7e3      	b.n	8012fb2 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x6e2>
 8012fea:	9e0e      	ldr	r6, [sp, #56]	@ 0x38
 8012fec:	4431      	add	r1, r6
 8012fee:	4541      	cmp	r1, r8
 8012ff0:	4450      	add	r0, sl
 8012ff2:	ee37 7a24 	vadd.f32	s14, s14, s9
 8012ff6:	ee77 7a84 	vadd.f32	s15, s15, s8
 8012ffa:	ee76 6aa3 	vadd.f32	s13, s13, s7
 8012ffe:	db08      	blt.n	8013012 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x742>
 8013000:	ee76 6a85 	vadd.f32	s13, s13, s10
 8013004:	ee37 7a25 	vadd.f32	s14, s14, s11
 8013008:	ee77 7a86 	vadd.f32	s15, s15, s12
 801300c:	3001      	adds	r0, #1
 801300e:	eba1 0108 	sub.w	r1, r1, r8
 8013012:	3f01      	subs	r7, #1
 8013014:	f04f 0901 	mov.w	r9, #1
 8013018:	e79e      	b.n	8012f58 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x688>
 801301a:	449c      	add	ip, r3
 801301c:	1aff      	subs	r7, r7, r3
 801301e:	f1b8 0f00 	cmp.w	r8, #0
 8013022:	d009      	beq.n	8013038 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x768>
 8013024:	e9cd c71e 	strd	ip, r7, [sp, #120]	@ 0x78
 8013028:	9019      	str	r0, [sp, #100]	@ 0x64
 801302a:	edcd 6a23 	vstr	s13, [sp, #140]	@ 0x8c
 801302e:	ed8d 7a26 	vstr	s14, [sp, #152]	@ 0x98
 8013032:	edcd 7a20 	vstr	s15, [sp, #128]	@ 0x80
 8013036:	911d      	str	r1, [sp, #116]	@ 0x74
 8013038:	1ad2      	subs	r2, r2, r3
 801303a:	e6b5      	b.n	8012da8 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x4d8>
 801303c:	9b0f      	ldr	r3, [sp, #60]	@ 0x3c
 801303e:	681b      	ldr	r3, [r3, #0]
 8013040:	b923      	cbnz	r3, 801304c <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x77c>
 8013042:	4b04      	ldr	r3, [pc, #16]	@ (8013054 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x784>)
 8013044:	6818      	ldr	r0, [r3, #0]
 8013046:	6803      	ldr	r3, [r0, #0]
 8013048:	6adb      	ldr	r3, [r3, #44]	@ 0x2c
 801304a:	4798      	blx	r3
 801304c:	b05b      	add	sp, #364	@ 0x16c
 801304e:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 8013052:	bf00      	nop
 8013054:	20002fa8 	.word	0x20002fa8

08013058 <_ZN8touchgfx3LCD22WideTextInternalStructC1ERNS_12TextProviderEtthPKNS_4FontEsNS_14WideTextActionE>:
 8013058:	b570      	push	{r4, r5, r6, lr}
 801305a:	4604      	mov	r4, r0
 801305c:	f89d 601c 	ldrb.w	r6, [sp, #28]
 8013060:	9805      	ldr	r0, [sp, #20]
 8013062:	6061      	str	r1, [r4, #4]
 8013064:	2500      	movs	r5, #0
 8013066:	f89d 1010 	ldrb.w	r1, [sp, #16]
 801306a:	8263      	strh	r3, [r4, #18]
 801306c:	f9bd 3018 	ldrsh.w	r3, [sp, #24]
 8013070:	8025      	strh	r5, [r4, #0]
 8013072:	7221      	strb	r1, [r4, #8]
 8013074:	7266      	strb	r6, [r4, #9]
 8013076:	60e0      	str	r0, [r4, #12]
 8013078:	8222      	strh	r2, [r4, #16]
 801307a:	82a3      	strh	r3, [r4, #20]
 801307c:	82e5      	strh	r5, [r4, #22]
 801307e:	8325      	strh	r5, [r4, #24]
 8013080:	8365      	strh	r5, [r4, #26]
 8013082:	83a5      	strh	r5, [r4, #28]
 8013084:	83e5      	strh	r5, [r4, #30]
 8013086:	8425      	strh	r5, [r4, #32]
 8013088:	f884 5022 	strb.w	r5, [r4, #34]	@ 0x22
 801308c:	b32e      	cbz	r6, 80130da <_ZN8touchgfx3LCD22WideTextInternalStructC1ERNS_12TextProviderEtthPKNS_4FontEsNS_14WideTextActionE+0x82>
 801308e:	6803      	ldr	r3, [r0, #0]
 8013090:	695b      	ldr	r3, [r3, #20]
 8013092:	4798      	blx	r3
 8013094:	4606      	mov	r6, r0
 8013096:	b300      	cbz	r0, 80130da <_ZN8touchgfx3LCD22WideTextInternalStructC1ERNS_12TextProviderEtthPKNS_4FontEsNS_14WideTextActionE+0x82>
 8013098:	68e0      	ldr	r0, [r4, #12]
 801309a:	6803      	ldr	r3, [r0, #0]
 801309c:	4631      	mov	r1, r6
 801309e:	68db      	ldr	r3, [r3, #12]
 80130a0:	4798      	blx	r3
 80130a2:	4605      	mov	r5, r0
 80130a4:	b1c8      	cbz	r0, 80130da <_ZN8touchgfx3LCD22WideTextInternalStructC1ERNS_12TextProviderEtthPKNS_4FontEsNS_14WideTextActionE+0x82>
 80130a6:	7b43      	ldrb	r3, [r0, #13]
 80130a8:	7a82      	ldrb	r2, [r0, #10]
 80130aa:	005b      	lsls	r3, r3, #1
 80130ac:	f403 7380 	and.w	r3, r3, #256	@ 0x100
 80130b0:	4313      	orrs	r3, r2
 80130b2:	8423      	strh	r3, [r4, #32]
 80130b4:	7a63      	ldrb	r3, [r4, #9]
 80130b6:	2b06      	cmp	r3, #6
 80130b8:	d10f      	bne.n	80130da <_ZN8touchgfx3LCD22WideTextInternalStructC1ERNS_12TextProviderEtthPKNS_4FontEsNS_14WideTextActionE+0x82>
 80130ba:	68e0      	ldr	r0, [r4, #12]
 80130bc:	6803      	ldr	r3, [r0, #0]
 80130be:	462a      	mov	r2, r5
 80130c0:	6c5b      	ldr	r3, [r3, #68]	@ 0x44
 80130c2:	4631      	mov	r1, r6
 80130c4:	4798      	blx	r3
 80130c6:	7b6b      	ldrb	r3, [r5, #13]
 80130c8:	005b      	lsls	r3, r3, #1
 80130ca:	f403 7280 	and.w	r2, r3, #256	@ 0x100
 80130ce:	7aab      	ldrb	r3, [r5, #10]
 80130d0:	4313      	orrs	r3, r2
 80130d2:	4418      	add	r0, r3
 80130d4:	8c23      	ldrh	r3, [r4, #32]
 80130d6:	4418      	add	r0, r3
 80130d8:	8420      	strh	r0, [r4, #32]
 80130da:	4620      	mov	r0, r4
 80130dc:	bd70      	pop	{r4, r5, r6, pc}

080130de <_ZN8touchgfx3LCD11stringWidthERNS_12TextProviderERKNS_4FontEih>:
 80130de:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 80130e2:	2400      	movs	r4, #0
 80130e4:	b085      	sub	sp, #20
 80130e6:	4681      	mov	r9, r0
 80130e8:	4688      	mov	r8, r1
 80130ea:	4692      	mov	sl, r2
 80130ec:	469b      	mov	fp, r3
 80130ee:	4627      	mov	r7, r4
 80130f0:	4625      	mov	r5, r4
 80130f2:	4626      	mov	r6, r4
 80130f4:	4554      	cmp	r4, sl
 80130f6:	da2a      	bge.n	801314e <_ZN8touchgfx3LCD11stringWidthERNS_12TextProviderERKNS_4FontEih+0x70>
 80130f8:	2300      	movs	r3, #0
 80130fa:	9303      	str	r3, [sp, #12]
 80130fc:	f64f 63ff 	movw	r3, #65279	@ 0xfeff
 8013100:	429d      	cmp	r5, r3
 8013102:	d004      	beq.n	801310e <_ZN8touchgfx3LCD11stringWidthERNS_12TextProviderERKNS_4FontEih+0x30>
 8013104:	f242 030b 	movw	r3, #8203	@ 0x200b
 8013108:	429d      	cmp	r5, r3
 801310a:	bf18      	it	ne
 801310c:	462f      	movne	r7, r5
 801310e:	ab03      	add	r3, sp, #12
 8013110:	4642      	mov	r2, r8
 8013112:	4659      	mov	r1, fp
 8013114:	4648      	mov	r0, r9
 8013116:	f002 ffb3 	bl	8016080 <_ZN8touchgfx12TextProvider15getNextLigatureEhPKNS_4FontERPKNS_9GlyphNodeE>
 801311a:	4605      	mov	r5, r0
 801311c:	b1b8      	cbz	r0, 801314e <_ZN8touchgfx3LCD11stringWidthERNS_12TextProviderERKNS_4FontEih+0x70>
 801311e:	280a      	cmp	r0, #10
 8013120:	d015      	beq.n	801314e <_ZN8touchgfx3LCD11stringWidthERNS_12TextProviderERKNS_4FontEih+0x70>
 8013122:	9a03      	ldr	r2, [sp, #12]
 8013124:	b18a      	cbz	r2, 801314a <_ZN8touchgfx3LCD11stringWidthERNS_12TextProviderERKNS_4FontEih+0x6c>
 8013126:	7b50      	ldrb	r0, [r2, #13]
 8013128:	7a93      	ldrb	r3, [r2, #10]
 801312a:	8895      	ldrh	r5, [r2, #4]
 801312c:	0040      	lsls	r0, r0, #1
 801312e:	f400 7080 	and.w	r0, r0, #256	@ 0x100
 8013132:	4303      	orrs	r3, r0
 8013134:	9301      	str	r3, [sp, #4]
 8013136:	f8d8 3000 	ldr.w	r3, [r8]
 801313a:	4639      	mov	r1, r7
 801313c:	6c5b      	ldr	r3, [r3, #68]	@ 0x44
 801313e:	4640      	mov	r0, r8
 8013140:	4798      	blx	r3
 8013142:	9b01      	ldr	r3, [sp, #4]
 8013144:	4418      	add	r0, r3
 8013146:	4406      	add	r6, r0
 8013148:	b2b6      	uxth	r6, r6
 801314a:	3401      	adds	r4, #1
 801314c:	e7d2      	b.n	80130f4 <_ZN8touchgfx3LCD11stringWidthERNS_12TextProviderERKNS_4FontEih+0x16>
 801314e:	4630      	mov	r0, r6
 8013150:	b005      	add	sp, #20
 8013152:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}

08013156 <_ZN8touchgfx3LCD10rotateRectERNS_4RectERKS1_NS_12TextRotationE>:
 8013156:	2a02      	cmp	r2, #2
 8013158:	b530      	push	{r4, r5, lr}
 801315a:	d011      	beq.n	8013180 <_ZN8touchgfx3LCD10rotateRectERNS_4RectERKS1_NS_12TextRotationE+0x2a>
 801315c:	2a03      	cmp	r2, #3
 801315e:	d01c      	beq.n	801319a <_ZN8touchgfx3LCD10rotateRectERNS_4RectERKS1_NS_12TextRotationE+0x44>
 8013160:	2a01      	cmp	r2, #1
 8013162:	d10c      	bne.n	801317e <_ZN8touchgfx3LCD10rotateRectERNS_4RectERKS1_NS_12TextRotationE+0x28>
 8013164:	888b      	ldrh	r3, [r1, #4]
 8013166:	8801      	ldrh	r1, [r0, #0]
 8013168:	f9b0 2004 	ldrsh.w	r2, [r0, #4]
 801316c:	8844      	ldrh	r4, [r0, #2]
 801316e:	8004      	strh	r4, [r0, #0]
 8013170:	1a5b      	subs	r3, r3, r1
 8013172:	1a9b      	subs	r3, r3, r2
 8013174:	f9b0 1006 	ldrsh.w	r1, [r0, #6]
 8013178:	8043      	strh	r3, [r0, #2]
 801317a:	8081      	strh	r1, [r0, #4]
 801317c:	80c2      	strh	r2, [r0, #6]
 801317e:	bd30      	pop	{r4, r5, pc}
 8013180:	88cb      	ldrh	r3, [r1, #6]
 8013182:	8842      	ldrh	r2, [r0, #2]
 8013184:	1a9b      	subs	r3, r3, r2
 8013186:	88c2      	ldrh	r2, [r0, #6]
 8013188:	1a9b      	subs	r3, r3, r2
 801318a:	888a      	ldrh	r2, [r1, #4]
 801318c:	8801      	ldrh	r1, [r0, #0]
 801318e:	8043      	strh	r3, [r0, #2]
 8013190:	1a52      	subs	r2, r2, r1
 8013192:	8881      	ldrh	r1, [r0, #4]
 8013194:	1a52      	subs	r2, r2, r1
 8013196:	8002      	strh	r2, [r0, #0]
 8013198:	e7f1      	b.n	801317e <_ZN8touchgfx3LCD10rotateRectERNS_4RectERKS1_NS_12TextRotationE+0x28>
 801319a:	88cb      	ldrh	r3, [r1, #6]
 801319c:	8841      	ldrh	r1, [r0, #2]
 801319e:	f9b0 2006 	ldrsh.w	r2, [r0, #6]
 80131a2:	f9b0 5000 	ldrsh.w	r5, [r0]
 80131a6:	f9b0 4004 	ldrsh.w	r4, [r0, #4]
 80131aa:	8045      	strh	r5, [r0, #2]
 80131ac:	1a5b      	subs	r3, r3, r1
 80131ae:	1a9b      	subs	r3, r3, r2
 80131b0:	8003      	strh	r3, [r0, #0]
 80131b2:	8082      	strh	r2, [r0, #4]
 80131b4:	80c4      	strh	r4, [r0, #6]
 80131b6:	e7e2      	b.n	801317e <_ZN8touchgfx3LCD10rotateRectERNS_4RectERKS1_NS_12TextRotationE+0x28>

080131b8 <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEssRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib>:
 80131b8:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 80131bc:	b09f      	sub	sp, #124	@ 0x7c
 80131be:	920f      	str	r2, [sp, #60]	@ 0x3c
 80131c0:	9312      	str	r3, [sp, #72]	@ 0x48
 80131c2:	9a29      	ldr	r2, [sp, #164]	@ 0xa4
 80131c4:	9b29      	ldr	r3, [sp, #164]	@ 0xa4
 80131c6:	9d2a      	ldr	r5, [sp, #168]	@ 0xa8
 80131c8:	8812      	ldrh	r2, [r2, #0]
 80131ca:	889b      	ldrh	r3, [r3, #4]
 80131cc:	900e      	str	r0, [sp, #56]	@ 0x38
 80131ce:	4413      	add	r3, r2
 80131d0:	6828      	ldr	r0, [r5, #0]
 80131d2:	9117      	str	r1, [sp, #92]	@ 0x5c
 80131d4:	b21b      	sxth	r3, r3
 80131d6:	9311      	str	r3, [sp, #68]	@ 0x44
 80131d8:	6803      	ldr	r3, [r0, #0]
 80131da:	f89d b0ac 	ldrb.w	fp, [sp, #172]	@ 0xac
 80131de:	6d5b      	ldr	r3, [r3, #84]	@ 0x54
 80131e0:	f89d 40b8 	ldrb.w	r4, [sp, #184]	@ 0xb8
 80131e4:	4798      	blx	r3
 80131e6:	682b      	ldr	r3, [r5, #0]
 80131e8:	9013      	str	r0, [sp, #76]	@ 0x4c
 80131ea:	7b1a      	ldrb	r2, [r3, #12]
 80131ec:	7adb      	ldrb	r3, [r3, #11]
 80131ee:	9215      	str	r2, [sp, #84]	@ 0x54
 80131f0:	9316      	str	r3, [sp, #88]	@ 0x58
 80131f2:	f9bd 60a0 	ldrsh.w	r6, [sp, #160]	@ 0xa0
 80131f6:	2c00      	cmp	r4, #0
 80131f8:	d067      	beq.n	80132ca <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEssRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0x112>
 80131fa:	7c2b      	ldrb	r3, [r5, #16]
 80131fc:	9a2d      	ldr	r2, [sp, #180]	@ 0xb4
 80131fe:	2b06      	cmp	r3, #6
 8013200:	bf14      	ite	ne
 8013202:	2301      	movne	r3, #1
 8013204:	2302      	moveq	r3, #2
 8013206:	4413      	add	r3, r2
 8013208:	f04f 0900 	mov.w	r9, #0
 801320c:	9310      	str	r3, [sp, #64]	@ 0x40
 801320e:	f8cd 9034 	str.w	r9, [sp, #52]	@ 0x34
 8013212:	464c      	mov	r4, r9
 8013214:	f8cd 9030 	str.w	r9, [sp, #48]	@ 0x30
 8013218:	9b0d      	ldr	r3, [sp, #52]	@ 0x34
 801321a:	9a10      	ldr	r2, [sp, #64]	@ 0x40
 801321c:	4293      	cmp	r3, r2
 801321e:	f280 808b 	bge.w	8013338 <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEssRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0x180>
 8013222:	2300      	movs	r3, #0
 8013224:	e9cd 331c 	strd	r3, r3, [sp, #112]	@ 0x70
 8013228:	f88d 306f 	strb.w	r3, [sp, #111]	@ 0x6f
 801322c:	f64f 63ff 	movw	r3, #65279	@ 0xfeff
 8013230:	429c      	cmp	r4, r3
 8013232:	d006      	beq.n	8013242 <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEssRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0x8a>
 8013234:	9b0c      	ldr	r3, [sp, #48]	@ 0x30
 8013236:	f242 020b 	movw	r2, #8203	@ 0x200b
 801323a:	4294      	cmp	r4, r2
 801323c:	bf18      	it	ne
 801323e:	4623      	movne	r3, r4
 8013240:	930c      	str	r3, [sp, #48]	@ 0x30
 8013242:	9b0d      	ldr	r3, [sp, #52]	@ 0x34
 8013244:	992d      	ldr	r1, [sp, #180]	@ 0xb4
 8013246:	682a      	ldr	r2, [r5, #0]
 8013248:	428b      	cmp	r3, r1
 801324a:	db40      	blt.n	80132ce <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEssRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0x116>
 801324c:	6813      	ldr	r3, [r2, #0]
 801324e:	4610      	mov	r0, r2
 8013250:	695b      	ldr	r3, [r3, #20]
 8013252:	4798      	blx	r3
 8013254:	4604      	mov	r4, r0
 8013256:	6828      	ldr	r0, [r5, #0]
 8013258:	6803      	ldr	r3, [r0, #0]
 801325a:	aa1d      	add	r2, sp, #116	@ 0x74
 801325c:	689f      	ldr	r7, [r3, #8]
 801325e:	4621      	mov	r1, r4
 8013260:	f10d 036f 	add.w	r3, sp, #111	@ 0x6f
 8013264:	47b8      	blx	r7
 8013266:	901c      	str	r0, [sp, #112]	@ 0x70
 8013268:	f64f 63ff 	movw	r3, #65279	@ 0xfeff
 801326c:	429c      	cmp	r4, r3
 801326e:	f000 80ea 	beq.w	8013446 <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEssRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0x28e>
 8013272:	f242 030b 	movw	r3, #8203	@ 0x200b
 8013276:	429c      	cmp	r4, r3
 8013278:	f000 80e5 	beq.w	8013446 <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEssRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0x28e>
 801327c:	2c00      	cmp	r4, #0
 801327e:	f000 810c 	beq.w	801349a <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEssRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0x2e2>
 8013282:	2c0a      	cmp	r4, #10
 8013284:	d05e      	beq.n	8013344 <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEssRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0x18c>
 8013286:	9a1c      	ldr	r2, [sp, #112]	@ 0x70
 8013288:	b36a      	cbz	r2, 80132e6 <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEssRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0x12e>
 801328a:	8894      	ldrh	r4, [r2, #4]
 801328c:	f1bb 0f00 	cmp.w	fp, #0
 8013290:	d03a      	beq.n	8013308 <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEssRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0x150>
 8013292:	f892 900d 	ldrb.w	r9, [r2, #13]
 8013296:	ea4f 0949 	mov.w	r9, r9, lsl #1
 801329a:	f409 7380 	and.w	r3, r9, #256	@ 0x100
 801329e:	f892 900a 	ldrb.w	r9, [r2, #10]
 80132a2:	f1bb 0f01 	cmp.w	fp, #1
 80132a6:	ea49 0903 	orr.w	r9, r9, r3
 80132aa:	d133      	bne.n	8013314 <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEssRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0x15c>
 80132ac:	9b0c      	ldr	r3, [sp, #48]	@ 0x30
 80132ae:	eba6 0609 	sub.w	r6, r6, r9
 80132b2:	2b00      	cmp	r3, #0
 80132b4:	d14d      	bne.n	8013352 <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEssRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0x19a>
 80132b6:	9a15      	ldr	r2, [sp, #84]	@ 0x54
 80132b8:	eb09 0306 	add.w	r3, r9, r6
 80132bc:	4413      	add	r3, r2
 80132be:	9a29      	ldr	r2, [sp, #164]	@ 0xa4
 80132c0:	f9b2 2000 	ldrsh.w	r2, [r2]
 80132c4:	4293      	cmp	r3, r2
 80132c6:	da4e      	bge.n	8013366 <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEssRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0x1ae>
 80132c8:	e036      	b.n	8013338 <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEssRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0x180>
 80132ca:	9b2d      	ldr	r3, [sp, #180]	@ 0xb4
 80132cc:	e79c      	b.n	8013208 <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEssRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0x50>
 80132ce:	f10d 036f 	add.w	r3, sp, #111	@ 0x6f
 80132d2:	9301      	str	r3, [sp, #4]
 80132d4:	ab1d      	add	r3, sp, #116	@ 0x74
 80132d6:	9300      	str	r3, [sp, #0]
 80132d8:	4659      	mov	r1, fp
 80132da:	ab1c      	add	r3, sp, #112	@ 0x70
 80132dc:	982c      	ldr	r0, [sp, #176]	@ 0xb0
 80132de:	f002 ff18 	bl	8016112 <_ZN8touchgfx12TextProvider15getNextLigatureEhPKNS_4FontERPKNS_9GlyphNodeERPKhRh>
 80132e2:	4604      	mov	r4, r0
 80132e4:	e7c0      	b.n	8013268 <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEssRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0xb0>
 80132e6:	6828      	ldr	r0, [r5, #0]
 80132e8:	6803      	ldr	r3, [r0, #0]
 80132ea:	691b      	ldr	r3, [r3, #16]
 80132ec:	4798      	blx	r3
 80132ee:	f64f 63ff 	movw	r3, #65279	@ 0xfeff
 80132f2:	4298      	cmp	r0, r3
 80132f4:	f000 80a7 	beq.w	8013446 <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEssRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0x28e>
 80132f8:	f242 030b 	movw	r3, #8203	@ 0x200b
 80132fc:	4298      	cmp	r0, r3
 80132fe:	f000 80a2 	beq.w	8013446 <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEssRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0x28e>
 8013302:	f1bb 0f00 	cmp.w	fp, #0
 8013306:	d100      	bne.n	801330a <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEssRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0x152>
 8013308:	444e      	add	r6, r9
 801330a:	9a1c      	ldr	r2, [sp, #112]	@ 0x70
 801330c:	2a00      	cmp	r2, #0
 801330e:	d1c0      	bne.n	8013292 <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEssRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0xda>
 8013310:	4691      	mov	r9, r2
 8013312:	e098      	b.n	8013446 <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEssRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0x28e>
 8013314:	9b0c      	ldr	r3, [sp, #48]	@ 0x30
 8013316:	2b00      	cmp	r3, #0
 8013318:	f000 80c1 	beq.w	801349e <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEssRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0x2e6>
 801331c:	f1bb 0f00 	cmp.w	fp, #0
 8013320:	d117      	bne.n	8013352 <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEssRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0x19a>
 8013322:	6828      	ldr	r0, [r5, #0]
 8013324:	990c      	ldr	r1, [sp, #48]	@ 0x30
 8013326:	6803      	ldr	r3, [r0, #0]
 8013328:	6c5b      	ldr	r3, [r3, #68]	@ 0x44
 801332a:	4798      	blx	r3
 801332c:	4406      	add	r6, r0
 801332e:	9b16      	ldr	r3, [sp, #88]	@ 0x58
 8013330:	9a11      	ldr	r2, [sp, #68]	@ 0x44
 8013332:	1af3      	subs	r3, r6, r3
 8013334:	4293      	cmp	r3, r2
 8013336:	dd16      	ble.n	8013366 <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEssRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0x1ae>
 8013338:	2c00      	cmp	r4, #0
 801333a:	f000 80ae 	beq.w	801349a <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEssRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0x2e2>
 801333e:	2c0a      	cmp	r4, #10
 8013340:	f040 809c 	bne.w	801347c <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEssRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0x2c4>
 8013344:	240a      	movs	r4, #10
 8013346:	fab4 f084 	clz	r0, r4
 801334a:	0940      	lsrs	r0, r0, #5
 801334c:	b01f      	add	sp, #124	@ 0x7c
 801334e:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 8013352:	6828      	ldr	r0, [r5, #0]
 8013354:	990c      	ldr	r1, [sp, #48]	@ 0x30
 8013356:	6803      	ldr	r3, [r0, #0]
 8013358:	6c5b      	ldr	r3, [r3, #68]	@ 0x44
 801335a:	4798      	blx	r3
 801335c:	f1bb 0f01 	cmp.w	fp, #1
 8013360:	eba6 0600 	sub.w	r6, r6, r0
 8013364:	d0a7      	beq.n	80132b6 <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEssRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0xfe>
 8013366:	981c      	ldr	r0, [sp, #112]	@ 0x70
 8013368:	9b29      	ldr	r3, [sp, #164]	@ 0xa4
 801336a:	f990 1009 	ldrsb.w	r1, [r0, #9]
 801336e:	f9b3 8000 	ldrsh.w	r8, [r3]
 8013372:	7b43      	ldrb	r3, [r0, #13]
 8013374:	015b      	lsls	r3, r3, #5
 8013376:	f403 7280 	and.w	r2, r3, #256	@ 0x100
 801337a:	7983      	ldrb	r3, [r0, #6]
 801337c:	4431      	add	r1, r6
 801337e:	4313      	orrs	r3, r2
 8013380:	440b      	add	r3, r1
 8013382:	4543      	cmp	r3, r8
 8013384:	db5f      	blt.n	8013446 <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEssRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0x28e>
 8013386:	9b11      	ldr	r3, [sp, #68]	@ 0x44
 8013388:	4299      	cmp	r1, r3
 801338a:	da5c      	bge.n	8013446 <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEssRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0x28e>
 801338c:	6828      	ldr	r0, [r5, #0]
 801338e:	6803      	ldr	r3, [r0, #0]
 8013390:	45b0      	cmp	r8, r6
 8013392:	bfc8      	it	gt
 8013394:	eba8 0806 	subgt.w	r8, r8, r6
 8013398:	6b1b      	ldr	r3, [r3, #48]	@ 0x30
 801339a:	bfcc      	ite	gt
 801339c:	fa1f f888 	uxthgt.w	r8, r8
 80133a0:	f04f 0800 	movle.w	r8, #0
 80133a4:	4798      	blx	r3
 80133a6:	9a1c      	ldr	r2, [sp, #112]	@ 0x70
 80133a8:	7b53      	ldrb	r3, [r2, #13]
 80133aa:	00d9      	lsls	r1, r3, #3
 80133ac:	f401 7780 	and.w	r7, r1, #256	@ 0x100
 80133b0:	7a11      	ldrb	r1, [r2, #8]
 80133b2:	4339      	orrs	r1, r7
 80133b4:	065f      	lsls	r7, r3, #25
 80133b6:	9f12      	ldr	r7, [sp, #72]	@ 0x48
 80133b8:	bf44      	itt	mi
 80133ba:	f5a1 7100 	submi.w	r1, r1, #512	@ 0x200
 80133be:	b209      	sxthmi	r1, r1
 80133c0:	19c7      	adds	r7, r0, r7
 80133c2:	1a7f      	subs	r7, r7, r1
 80133c4:	9929      	ldr	r1, [sp, #164]	@ 0xa4
 80133c6:	b2bf      	uxth	r7, r7
 80133c8:	f9b1 1002 	ldrsh.w	r1, [r1, #2]
 80133cc:	fa0f fa87 	sxth.w	sl, r7
 80133d0:	4551      	cmp	r1, sl
 80133d2:	dd3c      	ble.n	801344e <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEssRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0x296>
 80133d4:	011b      	lsls	r3, r3, #4
 80133d6:	79d0      	ldrb	r0, [r2, #7]
 80133d8:	f403 7380 	and.w	r3, r3, #256	@ 0x100
 80133dc:	4303      	orrs	r3, r0
 80133de:	449a      	add	sl, r3
 80133e0:	4551      	cmp	r1, sl
 80133e2:	dc30      	bgt.n	8013446 <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEssRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0x28e>
 80133e4:	1bcf      	subs	r7, r1, r7
 80133e6:	b23f      	sxth	r7, r7
 80133e8:	468a      	mov	sl, r1
 80133ea:	9219      	str	r2, [sp, #100]	@ 0x64
 80133ec:	9a13      	ldr	r2, [sp, #76]	@ 0x4c
 80133ee:	9b1d      	ldr	r3, [sp, #116]	@ 0x74
 80133f0:	6828      	ldr	r0, [r5, #0]
 80133f2:	2a00      	cmp	r2, #0
 80133f4:	d12d      	bne.n	8013452 <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEssRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0x29a>
 80133f6:	9318      	str	r3, [sp, #96]	@ 0x60
 80133f8:	9b0e      	ldr	r3, [sp, #56]	@ 0x38
 80133fa:	6819      	ldr	r1, [r3, #0]
 80133fc:	6ccb      	ldr	r3, [r1, #76]	@ 0x4c
 80133fe:	6801      	ldr	r1, [r0, #0]
 8013400:	9314      	str	r3, [sp, #80]	@ 0x50
 8013402:	6c09      	ldr	r1, [r1, #64]	@ 0x40
 8013404:	4788      	blx	r1
 8013406:	79a9      	ldrb	r1, [r5, #6]
 8013408:	910b      	str	r1, [sp, #44]	@ 0x2c
 801340a:	7ba9      	ldrb	r1, [r5, #14]
 801340c:	910a      	str	r1, [sp, #40]	@ 0x28
 801340e:	f89d 106f 	ldrb.w	r1, [sp, #111]	@ 0x6f
 8013412:	9109      	str	r1, [sp, #36]	@ 0x24
 8013414:	68a9      	ldr	r1, [r5, #8]
 8013416:	9b18      	ldr	r3, [sp, #96]	@ 0x60
 8013418:	9306      	str	r3, [sp, #24]
 801341a:	b2bf      	uxth	r7, r7
 801341c:	e9cd 8702 	strd	r8, r7, [sp, #8]
 8013420:	9b29      	ldr	r3, [sp, #164]	@ 0xa4
 8013422:	9304      	str	r3, [sp, #16]
 8013424:	44b0      	add	r8, r6
 8013426:	e9cd 0107 	strd	r0, r1, [sp, #28]
 801342a:	fa0f f388 	sxth.w	r3, r8
 801342e:	9300      	str	r3, [sp, #0]
 8013430:	9a19      	ldr	r2, [sp, #100]	@ 0x64
 8013432:	9b0f      	ldr	r3, [sp, #60]	@ 0x3c
 8013434:	9205      	str	r2, [sp, #20]
 8013436:	f8cd a004 	str.w	sl, [sp, #4]
 801343a:	681a      	ldr	r2, [r3, #0]
 801343c:	9917      	ldr	r1, [sp, #92]	@ 0x5c
 801343e:	685b      	ldr	r3, [r3, #4]
 8013440:	980e      	ldr	r0, [sp, #56]	@ 0x38
 8013442:	9f14      	ldr	r7, [sp, #80]	@ 0x50
 8013444:	47b8      	blx	r7
 8013446:	9b0d      	ldr	r3, [sp, #52]	@ 0x34
 8013448:	3301      	adds	r3, #1
 801344a:	930d      	str	r3, [sp, #52]	@ 0x34
 801344c:	e6e4      	b.n	8013218 <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEssRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0x60>
 801344e:	2700      	movs	r7, #0
 8013450:	e7cb      	b.n	80133ea <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEssRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0x232>
 8013452:	9a0e      	ldr	r2, [sp, #56]	@ 0x38
 8013454:	f8d2 c008 	ldr.w	ip, [r2, #8]
 8013458:	9a12      	ldr	r2, [sp, #72]	@ 0x48
 801345a:	f8dc 1000 	ldr.w	r1, [ip]
 801345e:	e9cd 6204 	strd	r6, r2, [sp, #16]
 8013462:	79aa      	ldrb	r2, [r5, #6]
 8013464:	9203      	str	r2, [sp, #12]
 8013466:	7baa      	ldrb	r2, [r5, #14]
 8013468:	9202      	str	r2, [sp, #8]
 801346a:	68aa      	ldr	r2, [r5, #8]
 801346c:	e9cd 0200 	strd	r0, r2, [sp]
 8013470:	9a29      	ldr	r2, [sp, #164]	@ 0xa4
 8013472:	688f      	ldr	r7, [r1, #8]
 8013474:	990f      	ldr	r1, [sp, #60]	@ 0x3c
 8013476:	4660      	mov	r0, ip
 8013478:	47b8      	blx	r7
 801347a:	e7e4      	b.n	8013446 <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEssRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0x28e>
 801347c:	9d0d      	ldr	r5, [sp, #52]	@ 0x34
 801347e:	9b2d      	ldr	r3, [sp, #180]	@ 0xb4
 8013480:	3501      	adds	r5, #1
 8013482:	429d      	cmp	r5, r3
 8013484:	f6bf af5f 	bge.w	8013346 <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEssRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0x18e>
 8013488:	4659      	mov	r1, fp
 801348a:	982c      	ldr	r0, [sp, #176]	@ 0xb0
 801348c:	f7fa f8ce 	bl	800d62c <_ZN8touchgfx12TextProvider15getNextLigatureEh>
 8013490:	4604      	mov	r4, r0
 8013492:	b110      	cbz	r0, 801349a <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEssRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0x2e2>
 8013494:	280a      	cmp	r0, #10
 8013496:	d1f2      	bne.n	801347e <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEssRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0x2c6>
 8013498:	e754      	b.n	8013344 <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEssRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0x18c>
 801349a:	2400      	movs	r4, #0
 801349c:	e753      	b.n	8013346 <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEssRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0x18e>
 801349e:	f1bb 0f00 	cmp.w	fp, #0
 80134a2:	f43f af44 	beq.w	801332e <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEssRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0x176>
 80134a6:	e75e      	b.n	8013366 <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEssRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0x1ae>

080134a8 <_ZN8touchgfx3LCD22WideTextInternalStruct7addWordEttt>:
 80134a8:	b530      	push	{r4, r5, lr}
 80134aa:	8ac4      	ldrh	r4, [r0, #22]
 80134ac:	8b45      	ldrh	r5, [r0, #26]
 80134ae:	8343      	strh	r3, [r0, #26]
 80134b0:	442c      	add	r4, r5
 80134b2:	1ae4      	subs	r4, r4, r3
 80134b4:	82c4      	strh	r4, [r0, #22]
 80134b6:	8b83      	ldrh	r3, [r0, #28]
 80134b8:	8b04      	ldrh	r4, [r0, #24]
 80134ba:	4422      	add	r2, r4
 80134bc:	440c      	add	r4, r1
 80134be:	1a59      	subs	r1, r3, r1
 80134c0:	83c2      	strh	r2, [r0, #30]
 80134c2:	8304      	strh	r4, [r0, #24]
 80134c4:	8381      	strh	r1, [r0, #28]
 80134c6:	bd30      	pop	{r4, r5, pc}

080134c8 <_ZN8touchgfx3LCD22WideTextInternalStruct23scanStringLengthForLineEv>:
 80134c8:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 80134cc:	4604      	mov	r4, r0
 80134ce:	8a47      	ldrh	r7, [r0, #18]
 80134d0:	68c0      	ldr	r0, [r0, #12]
 80134d2:	6803      	ldr	r3, [r0, #0]
 80134d4:	b085      	sub	sp, #20
 80134d6:	6b9b      	ldr	r3, [r3, #56]	@ 0x38
 80134d8:	4798      	blx	r3
 80134da:	f9b4 6014 	ldrsh.w	r6, [r4, #20]
 80134de:	7a63      	ldrb	r3, [r4, #9]
 80134e0:	eb06 0640 	add.w	r6, r6, r0, lsl #1
 80134e4:	42b7      	cmp	r7, r6
 80134e6:	f103 33ff 	add.w	r3, r3, #4294967295
 80134ea:	bfac      	ite	ge
 80134ec:	f04f 0900 	movge.w	r9, #0
 80134f0:	f04f 0901 	movlt.w	r9, #1
 80134f4:	2b05      	cmp	r3, #5
 80134f6:	d804      	bhi.n	8013502 <_ZN8touchgfx3LCD22WideTextInternalStruct23scanStringLengthForLineEv+0x3a>
 80134f8:	e8df f003 	tbb	[pc, r3]
 80134fc:	470e0854 	.word	0x470e0854
 8013500:	4c4c      	.short	0x4c4c
 8013502:	2500      	movs	r5, #0
 8013504:	46a9      	mov	r9, r5
 8013506:	462e      	mov	r6, r5
 8013508:	462f      	mov	r7, r5
 801350a:	e00d      	b.n	8013528 <_ZN8touchgfx3LCD22WideTextInternalStruct23scanStringLengthForLineEv+0x60>
 801350c:	42b7      	cmp	r7, r6
 801350e:	bfb4      	ite	lt
 8013510:	2600      	movlt	r6, #0
 8013512:	2601      	movge	r6, #1
 8013514:	2500      	movs	r5, #0
 8013516:	e7f7      	b.n	8013508 <_ZN8touchgfx3LCD22WideTextInternalStruct23scanStringLengthForLineEv+0x40>
 8013518:	42b7      	cmp	r7, r6
 801351a:	464d      	mov	r5, r9
 801351c:	f04f 0900 	mov.w	r9, #0
 8013520:	bfb4      	ite	lt
 8013522:	2600      	movlt	r6, #0
 8013524:	2601      	movge	r6, #1
 8013526:	464f      	mov	r7, r9
 8013528:	f04f 0800 	mov.w	r8, #0
 801352c:	f8a4 8016 	strh.w	r8, [r4, #22]
 8013530:	f8a4 8018 	strh.w	r8, [r4, #24]
 8013534:	f8cd 8004 	str.w	r8, [sp, #4]
 8013538:	2300      	movs	r3, #0
 801353a:	9303      	str	r3, [sp, #12]
 801353c:	8823      	ldrh	r3, [r4, #0]
 801353e:	2b20      	cmp	r3, #32
 8013540:	d034      	beq.n	80135ac <_ZN8touchgfx3LCD22WideTextInternalStruct23scanStringLengthForLineEv+0xe4>
 8013542:	f242 010b 	movw	r1, #8203	@ 0x200b
 8013546:	1a5a      	subs	r2, r3, r1
 8013548:	f1d2 0a00 	rsbs	sl, r2, #0
 801354c:	eb4a 0a02 	adc.w	sl, sl, r2
 8013550:	f64f 62ff 	movw	r2, #65279	@ 0xfeff
 8013554:	4293      	cmp	r3, r2
 8013556:	d009      	beq.n	801356c <_ZN8touchgfx3LCD22WideTextInternalStruct23scanStringLengthForLineEv+0xa4>
 8013558:	428b      	cmp	r3, r1
 801355a:	9a01      	ldr	r2, [sp, #4]
 801355c:	bf18      	it	ne
 801355e:	461a      	movne	r2, r3
 8013560:	9201      	str	r2, [sp, #4]
 8013562:	bf0c      	ite	eq
 8013564:	f04f 0a01 	moveq.w	sl, #1
 8013568:	f04f 0a00 	movne.w	sl, #0
 801356c:	ab03      	add	r3, sp, #12
 801356e:	68e2      	ldr	r2, [r4, #12]
 8013570:	7a21      	ldrb	r1, [r4, #8]
 8013572:	6860      	ldr	r0, [r4, #4]
 8013574:	f002 fd84 	bl	8016080 <_ZN8touchgfx12TextProvider15getNextLigatureEhPKNS_4FontERPKNS_9GlyphNodeE>
 8013578:	8020      	strh	r0, [r4, #0]
 801357a:	b9d8      	cbnz	r0, 80135b4 <_ZN8touchgfx3LCD22WideTextInternalStruct23scanStringLengthForLineEv+0xec>
 801357c:	8ba2      	ldrh	r2, [r4, #28]
 801357e:	2300      	movs	r3, #0
 8013580:	4611      	mov	r1, r2
 8013582:	4620      	mov	r0, r4
 8013584:	f7ff ff90 	bl	80134a8 <_ZN8touchgfx3LCD22WideTextInternalStruct7addWordEttt>
 8013588:	e06e      	b.n	8013668 <_ZN8touchgfx3LCD22WideTextInternalStruct23scanStringLengthForLineEv+0x1a0>
 801358a:	2500      	movs	r5, #0
 801358c:	46a9      	mov	r9, r5
 801358e:	462e      	mov	r6, r5
 8013590:	2701      	movs	r7, #1
 8013592:	e7c9      	b.n	8013528 <_ZN8touchgfx3LCD22WideTextInternalStruct23scanStringLengthForLineEv+0x60>
 8013594:	42b7      	cmp	r7, r6
 8013596:	f04f 0500 	mov.w	r5, #0
 801359a:	bfb4      	ite	lt
 801359c:	2700      	movlt	r7, #0
 801359e:	2701      	movge	r7, #1
 80135a0:	462e      	mov	r6, r5
 80135a2:	e7c1      	b.n	8013528 <_ZN8touchgfx3LCD22WideTextInternalStruct23scanStringLengthForLineEv+0x60>
 80135a4:	2500      	movs	r5, #0
 80135a6:	46a9      	mov	r9, r5
 80135a8:	2601      	movs	r6, #1
 80135aa:	e7ad      	b.n	8013508 <_ZN8touchgfx3LCD22WideTextInternalStruct23scanStringLengthForLineEv+0x40>
 80135ac:	9301      	str	r3, [sp, #4]
 80135ae:	f04f 0a01 	mov.w	sl, #1
 80135b2:	e7db      	b.n	801356c <_ZN8touchgfx3LCD22WideTextInternalStruct23scanStringLengthForLineEv+0xa4>
 80135b4:	8b63      	ldrh	r3, [r4, #26]
 80135b6:	280a      	cmp	r0, #10
 80135b8:	f103 0301 	add.w	r3, r3, #1
 80135bc:	8363      	strh	r3, [r4, #26]
 80135be:	d0dd      	beq.n	801357c <_ZN8touchgfx3LCD22WideTextInternalStruct23scanStringLengthForLineEv+0xb4>
 80135c0:	9a03      	ldr	r2, [sp, #12]
 80135c2:	bb62      	cbnz	r2, 801361e <_ZN8touchgfx3LCD22WideTextInternalStruct23scanStringLengthForLineEv+0x156>
 80135c4:	f64f 63ff 	movw	r3, #65279	@ 0xfeff
 80135c8:	4298      	cmp	r0, r3
 80135ca:	d003      	beq.n	80135d4 <_ZN8touchgfx3LCD22WideTextInternalStruct23scanStringLengthForLineEv+0x10c>
 80135cc:	f242 030b 	movw	r3, #8203	@ 0x200b
 80135d0:	4298      	cmp	r0, r3
 80135d2:	d1b1      	bne.n	8013538 <_ZN8touchgfx3LCD22WideTextInternalStruct23scanStringLengthForLineEv+0x70>
 80135d4:	8823      	ldrh	r3, [r4, #0]
 80135d6:	8ba1      	ldrh	r1, [r4, #28]
 80135d8:	2b20      	cmp	r3, #32
 80135da:	d003      	beq.n	80135e4 <_ZN8touchgfx3LCD22WideTextInternalStruct23scanStringLengthForLineEv+0x11c>
 80135dc:	f242 000b 	movw	r0, #8203	@ 0x200b
 80135e0:	4283      	cmp	r3, r0
 80135e2:	d131      	bne.n	8013648 <_ZN8touchgfx3LCD22WideTextInternalStruct23scanStringLengthForLineEv+0x180>
 80135e4:	f1ba 0f00 	cmp.w	sl, #0
 80135e8:	bf0a      	itet	eq
 80135ea:	4688      	moveq	r8, r1
 80135ec:	4650      	movne	r0, sl
 80135ee:	2001      	moveq	r0, #1
 80135f0:	440a      	add	r2, r1
 80135f2:	8b23      	ldrh	r3, [r4, #24]
 80135f4:	f8b4 c010 	ldrh.w	ip, [r4, #16]
 80135f8:	b292      	uxth	r2, r2
 80135fa:	83a2      	strh	r2, [r4, #28]
 80135fc:	4413      	add	r3, r2
 80135fe:	f1b9 0f00 	cmp.w	r9, #0
 8013602:	d102      	bne.n	801360a <_ZN8touchgfx3LCD22WideTextInternalStruct23scanStringLengthForLineEv+0x142>
 8013604:	2d00      	cmp	r5, #0
 8013606:	d042      	beq.n	801368e <_ZN8touchgfx3LCD22WideTextInternalStruct23scanStringLengthForLineEv+0x1c6>
 8013608:	b300      	cbz	r0, 801364c <_ZN8touchgfx3LCD22WideTextInternalStruct23scanStringLengthForLineEv+0x184>
 801360a:	8c21      	ldrh	r1, [r4, #32]
 801360c:	4419      	add	r1, r3
 801360e:	458c      	cmp	ip, r1
 8013610:	da37      	bge.n	8013682 <_ZN8touchgfx3LCD22WideTextInternalStruct23scanStringLengthForLineEv+0x1ba>
 8013612:	8ae1      	ldrh	r1, [r4, #22]
 8013614:	2900      	cmp	r1, #0
 8013616:	d034      	beq.n	8013682 <_ZN8touchgfx3LCD22WideTextInternalStruct23scanStringLengthForLineEv+0x1ba>
 8013618:	4563      	cmp	r3, ip
 801361a:	dd8d      	ble.n	8013538 <_ZN8touchgfx3LCD22WideTextInternalStruct23scanStringLengthForLineEv+0x70>
 801361c:	e01d      	b.n	801365a <_ZN8touchgfx3LCD22WideTextInternalStruct23scanStringLengthForLineEv+0x192>
 801361e:	8893      	ldrh	r3, [r2, #4]
 8013620:	8023      	strh	r3, [r4, #0]
 8013622:	f892 b00d 	ldrb.w	fp, [r2, #13]
 8013626:	9901      	ldr	r1, [sp, #4]
 8013628:	ea4f 0b4b 	mov.w	fp, fp, lsl #1
 801362c:	f40b 7080 	and.w	r0, fp, #256	@ 0x100
 8013630:	f892 b00a 	ldrb.w	fp, [r2, #10]
 8013634:	ea4b 0b00 	orr.w	fp, fp, r0
 8013638:	68e0      	ldr	r0, [r4, #12]
 801363a:	6803      	ldr	r3, [r0, #0]
 801363c:	6c5b      	ldr	r3, [r3, #68]	@ 0x44
 801363e:	4798      	blx	r3
 8013640:	eb0b 0200 	add.w	r2, fp, r0
 8013644:	b292      	uxth	r2, r2
 8013646:	e7c5      	b.n	80135d4 <_ZN8touchgfx3LCD22WideTextInternalStruct23scanStringLengthForLineEv+0x10c>
 8013648:	2000      	movs	r0, #0
 801364a:	e7d1      	b.n	80135f0 <_ZN8touchgfx3LCD22WideTextInternalStruct23scanStringLengthForLineEv+0x128>
 801364c:	4563      	cmp	r3, ip
 801364e:	f77f af73 	ble.w	8013538 <_ZN8touchgfx3LCD22WideTextInternalStruct23scanStringLengthForLineEv+0x70>
 8013652:	8ae3      	ldrh	r3, [r4, #22]
 8013654:	2b00      	cmp	r3, #0
 8013656:	f43f af6f 	beq.w	8013538 <_ZN8touchgfx3LCD22WideTextInternalStruct23scanStringLengthForLineEv+0x70>
 801365a:	2301      	movs	r3, #1
 801365c:	f884 3022 	strb.w	r3, [r4, #34]	@ 0x22
 8013660:	8c22      	ldrh	r2, [r4, #32]
 8013662:	8be3      	ldrh	r3, [r4, #30]
 8013664:	4413      	add	r3, r2
 8013666:	83e3      	strh	r3, [r4, #30]
 8013668:	68e0      	ldr	r0, [r4, #12]
 801366a:	6803      	ldr	r3, [r0, #0]
 801366c:	6b9b      	ldr	r3, [r3, #56]	@ 0x38
 801366e:	4798      	blx	r3
 8013670:	f9b4 3014 	ldrsh.w	r3, [r4, #20]
 8013674:	4418      	add	r0, r3
 8013676:	8a63      	ldrh	r3, [r4, #18]
 8013678:	1a18      	subs	r0, r3, r0
 801367a:	8260      	strh	r0, [r4, #18]
 801367c:	b005      	add	sp, #20
 801367e:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 8013682:	2300      	movs	r3, #0
 8013684:	4611      	mov	r1, r2
 8013686:	4620      	mov	r0, r4
 8013688:	f7ff ff0e 	bl	80134a8 <_ZN8touchgfx3LCD22WideTextInternalStruct7addWordEttt>
 801368c:	e754      	b.n	8013538 <_ZN8touchgfx3LCD22WideTextInternalStruct23scanStringLengthForLineEv+0x70>
 801368e:	4563      	cmp	r3, ip
 8013690:	dd14      	ble.n	80136bc <_ZN8touchgfx3LCD22WideTextInternalStruct23scanStringLengthForLineEv+0x1f4>
 8013692:	b117      	cbz	r7, 801369a <_ZN8touchgfx3LCD22WideTextInternalStruct23scanStringLengthForLineEv+0x1d2>
 8013694:	2301      	movs	r3, #1
 8013696:	460a      	mov	r2, r1
 8013698:	e772      	b.n	8013580 <_ZN8touchgfx3LCD22WideTextInternalStruct23scanStringLengthForLineEv+0xb8>
 801369a:	2e00      	cmp	r6, #0
 801369c:	f43f af4c 	beq.w	8013538 <_ZN8touchgfx3LCD22WideTextInternalStruct23scanStringLengthForLineEv+0x70>
 80136a0:	2800      	cmp	r0, #0
 80136a2:	f47f af49 	bne.w	8013538 <_ZN8touchgfx3LCD22WideTextInternalStruct23scanStringLengthForLineEv+0x70>
 80136a6:	f1ba 0f00 	cmp.w	sl, #0
 80136aa:	d002      	beq.n	80136b2 <_ZN8touchgfx3LCD22WideTextInternalStruct23scanStringLengthForLineEv+0x1ea>
 80136ac:	2301      	movs	r3, #1
 80136ae:	4642      	mov	r2, r8
 80136b0:	e767      	b.n	8013582 <_ZN8touchgfx3LCD22WideTextInternalStruct23scanStringLengthForLineEv+0xba>
 80136b2:	8ae3      	ldrh	r3, [r4, #22]
 80136b4:	2b00      	cmp	r3, #0
 80136b6:	f43f af3f 	beq.w	8013538 <_ZN8touchgfx3LCD22WideTextInternalStruct23scanStringLengthForLineEv+0x70>
 80136ba:	e7d5      	b.n	8013668 <_ZN8touchgfx3LCD22WideTextInternalStruct23scanStringLengthForLineEv+0x1a0>
 80136bc:	2800      	cmp	r0, #0
 80136be:	f47f af3b 	bne.w	8013538 <_ZN8touchgfx3LCD22WideTextInternalStruct23scanStringLengthForLineEv+0x70>
 80136c2:	f1ba 0f00 	cmp.w	sl, #0
 80136c6:	f43f af37 	beq.w	8013538 <_ZN8touchgfx3LCD22WideTextInternalStruct23scanStringLengthForLineEv+0x70>
 80136ca:	2301      	movs	r3, #1
 80136cc:	4642      	mov	r2, r8
 80136ce:	e7da      	b.n	8013686 <_ZN8touchgfx3LCD22WideTextInternalStruct23scanStringLengthForLineEv+0x1be>

080136d0 <_ZN8touchgfx3LCD11getNumLinesERNS_12TextProviderENS_14WideTextActionEhPKNS_4FontEs>:
 80136d0:	b5f0      	push	{r4, r5, r6, r7, lr}
 80136d2:	4605      	mov	r5, r0
 80136d4:	b08f      	sub	sp, #60	@ 0x3c
 80136d6:	4617      	mov	r7, r2
 80136d8:	461c      	mov	r4, r3
 80136da:	460e      	mov	r6, r1
 80136dc:	b1d1      	cbz	r1, 8013714 <_ZN8touchgfx3LCD11getNumLinesERNS_12TextProviderENS_14WideTextActionEhPKNS_4FontEs+0x44>
 80136de:	681b      	ldr	r3, [r3, #0]
 80136e0:	4620      	mov	r0, r4
 80136e2:	6b9b      	ldr	r3, [r3, #56]	@ 0x38
 80136e4:	4798      	blx	r3
 80136e6:	4240      	negs	r0, r0
 80136e8:	b200      	sxth	r0, r0
 80136ea:	e9cd 4001 	strd	r4, r0, [sp, #4]
 80136ee:	9603      	str	r6, [sp, #12]
 80136f0:	9700      	str	r7, [sp, #0]
 80136f2:	f64f 73ff 	movw	r3, #65535	@ 0xffff
 80136f6:	f8bd 2050 	ldrh.w	r2, [sp, #80]	@ 0x50
 80136fa:	4629      	mov	r1, r5
 80136fc:	a805      	add	r0, sp, #20
 80136fe:	f7ff fcab 	bl	8013058 <_ZN8touchgfx3LCD22WideTextInternalStructC1ERNS_12TextProviderEtthPKNS_4FontEsNS_14WideTextActionE>
 8013702:	2401      	movs	r4, #1
 8013704:	a805      	add	r0, sp, #20
 8013706:	f7ff fedf 	bl	80134c8 <_ZN8touchgfx3LCD22WideTextInternalStruct23scanStringLengthForLineEv>
 801370a:	f8bd 3014 	ldrh.w	r3, [sp, #20]
 801370e:	b163      	cbz	r3, 801372a <_ZN8touchgfx3LCD11getNumLinesERNS_12TextProviderENS_14WideTextActionEhPKNS_4FontEs+0x5a>
 8013710:	3401      	adds	r4, #1
 8013712:	e7f7      	b.n	8013704 <_ZN8touchgfx3LCD11getNumLinesERNS_12TextProviderENS_14WideTextActionEhPKNS_4FontEs+0x34>
 8013714:	f002 fd82 	bl	801621c <_ZN8touchgfx12TextProvider11getNextCharEv>
 8013718:	2401      	movs	r4, #1
 801371a:	280a      	cmp	r0, #10
 801371c:	4628      	mov	r0, r5
 801371e:	bf08      	it	eq
 8013720:	3401      	addeq	r4, #1
 8013722:	f002 fd7b 	bl	801621c <_ZN8touchgfx12TextProvider11getNextCharEv>
 8013726:	2800      	cmp	r0, #0
 8013728:	d1f7      	bne.n	801371a <_ZN8touchgfx3LCD11getNumLinesERNS_12TextProviderENS_14WideTextActionEhPKNS_4FontEs+0x4a>
 801372a:	b2a0      	uxth	r0, r4
 801372c:	b00f      	add	sp, #60	@ 0x3c
 801372e:	bdf0      	pop	{r4, r5, r6, r7, pc}

08013730 <_ZN8touchgfx3LCD13drawStringLTRERKNS_4RectES3_RKNS0_13StringVisualsEPKtSt9__va_list>:
 8013730:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8013734:	b0e3      	sub	sp, #396	@ 0x18c
 8013736:	461c      	mov	r4, r3
 8013738:	9b6c      	ldr	r3, [sp, #432]	@ 0x1b0
 801373a:	4683      	mov	fp, r0
 801373c:	4688      	mov	r8, r1
 801373e:	2b00      	cmp	r3, #0
 8013740:	f000 8112 	beq.w	8013968 <_ZN8touchgfx3LCD13drawStringLTRERKNS_4RectES3_RKNS0_13StringVisualsEPKtSt9__va_list+0x238>
 8013744:	6823      	ldr	r3, [r4, #0]
 8013746:	2b00      	cmp	r3, #0
 8013748:	f000 810e 	beq.w	8013968 <_ZN8touchgfx3LCD13drawStringLTRERKNS_4RectES3_RKNS0_13StringVisualsEPKtSt9__va_list+0x238>
 801374c:	7ba3      	ldrb	r3, [r4, #14]
 801374e:	2b00      	cmp	r3, #0
 8013750:	f000 810a 	beq.w	8013968 <_ZN8touchgfx3LCD13drawStringLTRERKNS_4RectES3_RKNS0_13StringVisualsEPKtSt9__va_list+0x238>
 8013754:	6810      	ldr	r0, [r2, #0]
 8013756:	6851      	ldr	r1, [r2, #4]
 8013758:	f9b8 2004 	ldrsh.w	r2, [r8, #4]
 801375c:	f8ad 2034 	strh.w	r2, [sp, #52]	@ 0x34
 8013760:	ad0a      	add	r5, sp, #40	@ 0x28
 8013762:	462b      	mov	r3, r5
 8013764:	c303      	stmia	r3!, {r0, r1}
 8013766:	2100      	movs	r1, #0
 8013768:	f9b8 3006 	ldrsh.w	r3, [r8, #6]
 801376c:	910c      	str	r1, [sp, #48]	@ 0x30
 801376e:	79a2      	ldrb	r2, [r4, #6]
 8013770:	f8ad 3036 	strh.w	r3, [sp, #54]	@ 0x36
 8013774:	a90c      	add	r1, sp, #48	@ 0x30
 8013776:	4628      	mov	r0, r5
 8013778:	f7ff fced 	bl	8013156 <_ZN8touchgfx3LCD10rotateRectERNS_4RectERKS1_NS_12TextRotationE>
 801377c:	a90c      	add	r1, sp, #48	@ 0x30
 801377e:	4608      	mov	r0, r1
 8013780:	79a2      	ldrb	r2, [r4, #6]
 8013782:	f7ff fce8 	bl	8013156 <_ZN8touchgfx3LCD10rotateRectERNS_4RectERKS1_NS_12TextRotationE>
 8013786:	a817      	add	r0, sp, #92	@ 0x5c
 8013788:	f002 f8f2 	bl	8015970 <_ZN8touchgfx12TextProviderC1Ev>
 801378c:	6820      	ldr	r0, [r4, #0]
 801378e:	6803      	ldr	r3, [r0, #0]
 8013790:	6cdb      	ldr	r3, [r3, #76]	@ 0x4c
 8013792:	4798      	blx	r3
 8013794:	4606      	mov	r6, r0
 8013796:	6820      	ldr	r0, [r4, #0]
 8013798:	6803      	ldr	r3, [r0, #0]
 801379a:	6d1b      	ldr	r3, [r3, #80]	@ 0x50
 801379c:	4798      	blx	r3
 801379e:	4633      	mov	r3, r6
 80137a0:	9a6d      	ldr	r2, [sp, #436]	@ 0x1b4
 80137a2:	996c      	ldr	r1, [sp, #432]	@ 0x1b0
 80137a4:	9000      	str	r0, [sp, #0]
 80137a6:	a817      	add	r0, sp, #92	@ 0x5c
 80137a8:	f002 f93d 	bl	8015a26 <_ZN8touchgfx12TextProvider10initializeEPKtSt9__va_listS2_PKNS_24FontContextualFormsTableE>
 80137ac:	6820      	ldr	r0, [r4, #0]
 80137ae:	f894 a004 	ldrb.w	sl, [r4, #4]
 80137b2:	6803      	ldr	r3, [r0, #0]
 80137b4:	6b9b      	ldr	r3, [r3, #56]	@ 0x38
 80137b6:	4798      	blx	r3
 80137b8:	f9b4 600c 	ldrsh.w	r6, [r4, #12]
 80137bc:	6823      	ldr	r3, [r4, #0]
 80137be:	4607      	mov	r7, r0
 80137c0:	4406      	add	r6, r0
 80137c2:	a830      	add	r0, sp, #192	@ 0xc0
 80137c4:	f893 9009 	ldrb.w	r9, [r3, #9]
 80137c8:	f002 f8d2 	bl	8015970 <_ZN8touchgfx12TextProviderC1Ev>
 80137cc:	7c23      	ldrb	r3, [r4, #16]
 80137ce:	b17b      	cbz	r3, 80137f0 <_ZN8touchgfx3LCD13drawStringLTRERKNS_4RectES3_RKNS0_13StringVisualsEPKtSt9__va_list+0xc0>
 80137d0:	6820      	ldr	r0, [r4, #0]
 80137d2:	6803      	ldr	r3, [r0, #0]
 80137d4:	6cdb      	ldr	r3, [r3, #76]	@ 0x4c
 80137d6:	4798      	blx	r3
 80137d8:	9009      	str	r0, [sp, #36]	@ 0x24
 80137da:	6820      	ldr	r0, [r4, #0]
 80137dc:	6802      	ldr	r2, [r0, #0]
 80137de:	6d12      	ldr	r2, [r2, #80]	@ 0x50
 80137e0:	4790      	blx	r2
 80137e2:	9b09      	ldr	r3, [sp, #36]	@ 0x24
 80137e4:	9000      	str	r0, [sp, #0]
 80137e6:	9a6d      	ldr	r2, [sp, #436]	@ 0x1b4
 80137e8:	996c      	ldr	r1, [sp, #432]	@ 0x1b0
 80137ea:	a830      	add	r0, sp, #192	@ 0xc0
 80137ec:	f002 f91b 	bl	8015a26 <_ZN8touchgfx12TextProvider10initializeEPKtSt9__va_listS2_PKNS_24FontContextualFormsTableE>
 80137f0:	f8bd 1034 	ldrh.w	r1, [sp, #52]	@ 0x34
 80137f4:	7be2      	ldrb	r2, [r4, #15]
 80137f6:	f8bd 3036 	ldrh.w	r3, [sp, #54]	@ 0x36
 80137fa:	1a8a      	subs	r2, r1, r2
 80137fc:	7c21      	ldrb	r1, [r4, #16]
 80137fe:	9103      	str	r1, [sp, #12]
 8013800:	f9b4 100c 	ldrsh.w	r1, [r4, #12]
 8013804:	9102      	str	r1, [sp, #8]
 8013806:	6821      	ldr	r1, [r4, #0]
 8013808:	9101      	str	r1, [sp, #4]
 801380a:	7961      	ldrb	r1, [r4, #5]
 801380c:	9100      	str	r1, [sp, #0]
 801380e:	b292      	uxth	r2, r2
 8013810:	a930      	add	r1, sp, #192	@ 0xc0
 8013812:	a80e      	add	r0, sp, #56	@ 0x38
 8013814:	f7ff fc20 	bl	8013058 <_ZN8touchgfx3LCD22WideTextInternalStructC1ERNS_12TextProviderEtthPKNS_4FontEsNS_14WideTextActionE>
 8013818:	2e00      	cmp	r6, #0
 801381a:	dc5b      	bgt.n	80138d4 <_ZN8touchgfx3LCD13drawStringLTRERKNS_4RectES3_RKNS0_13StringVisualsEPKtSt9__va_list+0x1a4>
 801381c:	af17      	add	r7, sp, #92	@ 0x5c
 801381e:	f04f 0900 	mov.w	r9, #0
 8013822:	7c23      	ldrb	r3, [r4, #16]
 8013824:	2b00      	cmp	r3, #0
 8013826:	f000 80b1 	beq.w	801398c <_ZN8touchgfx3LCD13drawStringLTRERKNS_4RectES3_RKNS0_13StringVisualsEPKtSt9__va_list+0x25c>
 801382a:	a80e      	add	r0, sp, #56	@ 0x38
 801382c:	f7ff fe4c 	bl	80134c8 <_ZN8touchgfx3LCD22WideTextInternalStruct23scanStringLengthForLineEv>
 8013830:	f1ba 0f00 	cmp.w	sl, #0
 8013834:	f000 80a5 	beq.w	8013982 <_ZN8touchgfx3LCD13drawStringLTRERKNS_4RectES3_RKNS0_13StringVisualsEPKtSt9__va_list+0x252>
 8013838:	7c23      	ldrb	r3, [r4, #16]
 801383a:	9309      	str	r3, [sp, #36]	@ 0x24
 801383c:	2264      	movs	r2, #100	@ 0x64
 801383e:	4639      	mov	r1, r7
 8013840:	a849      	add	r0, sp, #292	@ 0x124
 8013842:	f012 fcac 	bl	802619e <memcpy>
 8013846:	9b09      	ldr	r3, [sp, #36]	@ 0x24
 8013848:	2b00      	cmp	r3, #0
 801384a:	f000 80a7 	beq.w	801399c <_ZN8touchgfx3LCD13drawStringLTRERKNS_4RectES3_RKNS0_13StringVisualsEPKtSt9__va_list+0x26c>
 801384e:	f9bd 3056 	ldrsh.w	r3, [sp, #86]	@ 0x56
 8013852:	7922      	ldrb	r2, [r4, #4]
 8013854:	2a01      	cmp	r2, #1
 8013856:	f040 808a 	bne.w	801396e <_ZN8touchgfx3LCD13drawStringLTRERKNS_4RectES3_RKNS0_13StringVisualsEPKtSt9__va_list+0x23e>
 801385a:	f9bd 0034 	ldrsh.w	r0, [sp, #52]	@ 0x34
 801385e:	1ac0      	subs	r0, r0, r3
 8013860:	2302      	movs	r3, #2
 8013862:	fb90 f0f3 	sdiv	r0, r0, r3
 8013866:	b200      	sxth	r0, r0
 8013868:	7c23      	ldrb	r3, [r4, #16]
 801386a:	2b00      	cmp	r3, #0
 801386c:	f000 808b 	beq.w	8013986 <_ZN8touchgfx3LCD13drawStringLTRERKNS_4RectES3_RKNS0_13StringVisualsEPKtSt9__va_list+0x256>
 8013870:	f8bd 204e 	ldrh.w	r2, [sp, #78]	@ 0x4e
 8013874:	f89d 105a 	ldrb.w	r1, [sp, #90]	@ 0x5a
 8013878:	f9bd 3032 	ldrsh.w	r3, [sp, #50]	@ 0x32
 801387c:	e9cd 2105 	strd	r2, r1, [sp, #20]
 8013880:	f8bd 2030 	ldrh.w	r2, [sp, #48]	@ 0x30
 8013884:	4410      	add	r0, r2
 8013886:	b200      	sxth	r0, r0
 8013888:	9000      	str	r0, [sp, #0]
 801388a:	e9cd 9703 	strd	r9, r7, [sp, #12]
 801388e:	e9cd 5401 	strd	r5, r4, [sp, #4]
 8013892:	4642      	mov	r2, r8
 8013894:	2100      	movs	r1, #0
 8013896:	4658      	mov	r0, fp
 8013898:	f7ff fc8e 	bl	80131b8 <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEssRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib>
 801389c:	2800      	cmp	r0, #0
 801389e:	d163      	bne.n	8013968 <_ZN8touchgfx3LCD13drawStringLTRERKNS_4RectES3_RKNS0_13StringVisualsEPKtSt9__va_list+0x238>
 80138a0:	f8bd 3032 	ldrh.w	r3, [sp, #50]	@ 0x32
 80138a4:	f8bd 1036 	ldrh.w	r1, [sp, #54]	@ 0x36
 80138a8:	b2b2      	uxth	r2, r6
 80138aa:	4413      	add	r3, r2
 80138ac:	1a8a      	subs	r2, r1, r2
 80138ae:	f8ad 2036 	strh.w	r2, [sp, #54]	@ 0x36
 80138b2:	f89d 205a 	ldrb.w	r2, [sp, #90]	@ 0x5a
 80138b6:	b21b      	sxth	r3, r3
 80138b8:	f8ad 3032 	strh.w	r3, [sp, #50]	@ 0x32
 80138bc:	2a00      	cmp	r2, #0
 80138be:	d153      	bne.n	8013968 <_ZN8touchgfx3LCD13drawStringLTRERKNS_4RectES3_RKNS0_13StringVisualsEPKtSt9__va_list+0x238>
 80138c0:	6822      	ldr	r2, [r4, #0]
 80138c2:	8869      	ldrh	r1, [r5, #2]
 80138c4:	7a12      	ldrb	r2, [r2, #8]
 80138c6:	1a9b      	subs	r3, r3, r2
 80138c8:	88ea      	ldrh	r2, [r5, #6]
 80138ca:	440a      	add	r2, r1
 80138cc:	b212      	sxth	r2, r2
 80138ce:	4293      	cmp	r3, r2
 80138d0:	dda7      	ble.n	8013822 <_ZN8touchgfx3LCD13drawStringLTRERKNS_4RectES3_RKNS0_13StringVisualsEPKtSt9__va_list+0xf2>
 80138d2:	e049      	b.n	8013968 <_ZN8touchgfx3LCD13drawStringLTRERKNS_4RectES3_RKNS0_13StringVisualsEPKtSt9__va_list+0x238>
 80138d4:	7c23      	ldrb	r3, [r4, #16]
 80138d6:	444f      	add	r7, r9
 80138d8:	b1c3      	cbz	r3, 801390c <_ZN8touchgfx3LCD13drawStringLTRERKNS_4RectES3_RKNS0_13StringVisualsEPKtSt9__va_list+0x1dc>
 80138da:	f64f 79ff 	movw	r9, #65535	@ 0xffff
 80138de:	f9bd 3032 	ldrsh.w	r3, [sp, #50]	@ 0x32
 80138e2:	f9b5 2002 	ldrsh.w	r2, [r5, #2]
 80138e6:	443b      	add	r3, r7
 80138e8:	4293      	cmp	r3, r2
 80138ea:	da97      	bge.n	801381c <_ZN8touchgfx3LCD13drawStringLTRERKNS_4RectES3_RKNS0_13StringVisualsEPKtSt9__va_list+0xec>
 80138ec:	a80e      	add	r0, sp, #56	@ 0x38
 80138ee:	f7ff fdeb 	bl	80134c8 <_ZN8touchgfx3LCD22WideTextInternalStruct23scanStringLengthForLineEv>
 80138f2:	f8bd 304e 	ldrh.w	r3, [sp, #78]	@ 0x4e
 80138f6:	3b01      	subs	r3, #1
 80138f8:	b29b      	uxth	r3, r3
 80138fa:	454b      	cmp	r3, r9
 80138fc:	9309      	str	r3, [sp, #36]	@ 0x24
 80138fe:	d021      	beq.n	8013944 <_ZN8touchgfx3LCD13drawStringLTRERKNS_4RectES3_RKNS0_13StringVisualsEPKtSt9__va_list+0x214>
 8013900:	7961      	ldrb	r1, [r4, #5]
 8013902:	a817      	add	r0, sp, #92	@ 0x5c
 8013904:	f7f9 fe92 	bl	800d62c <_ZN8touchgfx12TextProvider15getNextLigatureEh>
 8013908:	9b09      	ldr	r3, [sp, #36]	@ 0x24
 801390a:	e7f4      	b.n	80138f6 <_ZN8touchgfx3LCD13drawStringLTRERKNS_4RectES3_RKNS0_13StringVisualsEPKtSt9__va_list+0x1c6>
 801390c:	fa1f f986 	uxth.w	r9, r6
 8013910:	f9bd 3032 	ldrsh.w	r3, [sp, #50]	@ 0x32
 8013914:	f9b5 2002 	ldrsh.w	r2, [r5, #2]
 8013918:	443b      	add	r3, r7
 801391a:	4293      	cmp	r3, r2
 801391c:	f6bf af7e 	bge.w	801381c <_ZN8touchgfx3LCD13drawStringLTRERKNS_4RectES3_RKNS0_13StringVisualsEPKtSt9__va_list+0xec>
 8013920:	a817      	add	r0, sp, #92	@ 0x5c
 8013922:	f002 fc7b 	bl	801621c <_ZN8touchgfx12TextProvider11getNextCharEv>
 8013926:	b1f8      	cbz	r0, 8013968 <_ZN8touchgfx3LCD13drawStringLTRERKNS_4RectES3_RKNS0_13StringVisualsEPKtSt9__va_list+0x238>
 8013928:	280a      	cmp	r0, #10
 801392a:	d1f1      	bne.n	8013910 <_ZN8touchgfx3LCD13drawStringLTRERKNS_4RectES3_RKNS0_13StringVisualsEPKtSt9__va_list+0x1e0>
 801392c:	f8bd 3032 	ldrh.w	r3, [sp, #50]	@ 0x32
 8013930:	444b      	add	r3, r9
 8013932:	f8ad 3032 	strh.w	r3, [sp, #50]	@ 0x32
 8013936:	f8bd 3036 	ldrh.w	r3, [sp, #54]	@ 0x36
 801393a:	eba3 0309 	sub.w	r3, r3, r9
 801393e:	f8ad 3036 	strh.w	r3, [sp, #54]	@ 0x36
 8013942:	e7e5      	b.n	8013910 <_ZN8touchgfx3LCD13drawStringLTRERKNS_4RectES3_RKNS0_13StringVisualsEPKtSt9__va_list+0x1e0>
 8013944:	f8bd 2032 	ldrh.w	r2, [sp, #50]	@ 0x32
 8013948:	b2b3      	uxth	r3, r6
 801394a:	441a      	add	r2, r3
 801394c:	f8ad 2032 	strh.w	r2, [sp, #50]	@ 0x32
 8013950:	f8bd 2036 	ldrh.w	r2, [sp, #54]	@ 0x36
 8013954:	1ad3      	subs	r3, r2, r3
 8013956:	f8ad 3036 	strh.w	r3, [sp, #54]	@ 0x36
 801395a:	f8bd 3038 	ldrh.w	r3, [sp, #56]	@ 0x38
 801395e:	b11b      	cbz	r3, 8013968 <_ZN8touchgfx3LCD13drawStringLTRERKNS_4RectES3_RKNS0_13StringVisualsEPKtSt9__va_list+0x238>
 8013960:	f89d 305a 	ldrb.w	r3, [sp, #90]	@ 0x5a
 8013964:	2b00      	cmp	r3, #0
 8013966:	d0ba      	beq.n	80138de <_ZN8touchgfx3LCD13drawStringLTRERKNS_4RectES3_RKNS0_13StringVisualsEPKtSt9__va_list+0x1ae>
 8013968:	b063      	add	sp, #396	@ 0x18c
 801396a:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 801396e:	2a02      	cmp	r2, #2
 8013970:	d105      	bne.n	801397e <_ZN8touchgfx3LCD13drawStringLTRERKNS_4RectES3_RKNS0_13StringVisualsEPKtSt9__va_list+0x24e>
 8013972:	7be2      	ldrb	r2, [r4, #15]
 8013974:	f8bd 0034 	ldrh.w	r0, [sp, #52]	@ 0x34
 8013978:	1a80      	subs	r0, r0, r2
 801397a:	1ac0      	subs	r0, r0, r3
 801397c:	e773      	b.n	8013866 <_ZN8touchgfx3LCD13drawStringLTRERKNS_4RectES3_RKNS0_13StringVisualsEPKtSt9__va_list+0x136>
 801397e:	2000      	movs	r0, #0
 8013980:	e772      	b.n	8013868 <_ZN8touchgfx3LCD13drawStringLTRERKNS_4RectES3_RKNS0_13StringVisualsEPKtSt9__va_list+0x138>
 8013982:	7be0      	ldrb	r0, [r4, #15]
 8013984:	e770      	b.n	8013868 <_ZN8touchgfx3LCD13drawStringLTRERKNS_4RectES3_RKNS0_13StringVisualsEPKtSt9__va_list+0x138>
 8013986:	f647 72ff 	movw	r2, #32767	@ 0x7fff
 801398a:	e773      	b.n	8013874 <_ZN8touchgfx3LCD13drawStringLTRERKNS_4RectES3_RKNS0_13StringVisualsEPKtSt9__va_list+0x144>
 801398c:	f1ba 0f00 	cmp.w	sl, #0
 8013990:	d0f7      	beq.n	8013982 <_ZN8touchgfx3LCD13drawStringLTRERKNS_4RectES3_RKNS0_13StringVisualsEPKtSt9__va_list+0x252>
 8013992:	2264      	movs	r2, #100	@ 0x64
 8013994:	4639      	mov	r1, r7
 8013996:	a849      	add	r0, sp, #292	@ 0x124
 8013998:	f012 fc01 	bl	802619e <memcpy>
 801399c:	2300      	movs	r3, #0
 801399e:	f647 72ff 	movw	r2, #32767	@ 0x7fff
 80139a2:	6821      	ldr	r1, [r4, #0]
 80139a4:	a849      	add	r0, sp, #292	@ 0x124
 80139a6:	f7ff fb9a 	bl	80130de <_ZN8touchgfx3LCD11stringWidthERNS_12TextProviderERKNS_4FontEih>
 80139aa:	b203      	sxth	r3, r0
 80139ac:	e751      	b.n	8013852 <_ZN8touchgfx3LCD13drawStringLTRERKNS_4RectES3_RKNS0_13StringVisualsEPKtSt9__va_list+0x122>

080139ae <_ZN8touchgfx3LCD5realXERKNS_4RectEssNS_12TextRotationE>:
 80139ae:	2b03      	cmp	r3, #3
 80139b0:	d818      	bhi.n	80139e4 <_ZN8touchgfx3LCD5realXERKNS_4RectEssNS_12TextRotationE+0x36>
 80139b2:	e8df f003 	tbb	[pc, r3]
 80139b6:	0602      	.short	0x0602
 80139b8:	130d      	.short	0x130d
 80139ba:	f9b0 2000 	ldrsh.w	r2, [r0]
 80139be:	1850      	adds	r0, r2, r1
 80139c0:	4770      	bx	lr
 80139c2:	8803      	ldrh	r3, [r0, #0]
 80139c4:	8880      	ldrh	r0, [r0, #4]
 80139c6:	4418      	add	r0, r3
 80139c8:	b200      	sxth	r0, r0
 80139ca:	1a80      	subs	r0, r0, r2
 80139cc:	3801      	subs	r0, #1
 80139ce:	4770      	bx	lr
 80139d0:	8803      	ldrh	r3, [r0, #0]
 80139d2:	8880      	ldrh	r0, [r0, #4]
 80139d4:	4418      	add	r0, r3
 80139d6:	b200      	sxth	r0, r0
 80139d8:	1a40      	subs	r0, r0, r1
 80139da:	e7f7      	b.n	80139cc <_ZN8touchgfx3LCD5realXERKNS_4RectEssNS_12TextRotationE+0x1e>
 80139dc:	f9b0 0000 	ldrsh.w	r0, [r0]
 80139e0:	4410      	add	r0, r2
 80139e2:	4770      	bx	lr
 80139e4:	2000      	movs	r0, #0
 80139e6:	4770      	bx	lr

080139e8 <_ZN8touchgfx3LCD5realYERKNS_4RectEssNS_12TextRotationE>:
 80139e8:	2b03      	cmp	r3, #3
 80139ea:	d817      	bhi.n	8013a1c <_ZN8touchgfx3LCD5realYERKNS_4RectEssNS_12TextRotationE+0x34>
 80139ec:	e8df f003 	tbb	[pc, r3]
 80139f0:	10090602 	.word	0x10090602
 80139f4:	f9b0 1002 	ldrsh.w	r1, [r0, #2]
 80139f8:	1850      	adds	r0, r2, r1
 80139fa:	4770      	bx	lr
 80139fc:	f9b0 2002 	ldrsh.w	r2, [r0, #2]
 8013a00:	e7fa      	b.n	80139f8 <_ZN8touchgfx3LCD5realYERKNS_4RectEssNS_12TextRotationE+0x10>
 8013a02:	8843      	ldrh	r3, [r0, #2]
 8013a04:	88c0      	ldrh	r0, [r0, #6]
 8013a06:	4418      	add	r0, r3
 8013a08:	b200      	sxth	r0, r0
 8013a0a:	1a80      	subs	r0, r0, r2
 8013a0c:	3801      	subs	r0, #1
 8013a0e:	4770      	bx	lr
 8013a10:	8843      	ldrh	r3, [r0, #2]
 8013a12:	88c0      	ldrh	r0, [r0, #6]
 8013a14:	4418      	add	r0, r3
 8013a16:	b200      	sxth	r0, r0
 8013a18:	1a40      	subs	r0, r0, r1
 8013a1a:	e7f7      	b.n	8013a0c <_ZN8touchgfx3LCD5realYERKNS_4RectEssNS_12TextRotationE+0x24>
 8013a1c:	2000      	movs	r0, #0
 8013a1e:	4770      	bx	lr

08013a20 <_GLOBAL__sub_I__ZN8touchgfx3LCD12defaultColorE>:
 8013a20:	4b01      	ldr	r3, [pc, #4]	@ (8013a28 <_GLOBAL__sub_I__ZN8touchgfx3LCD12defaultColorE+0x8>)
 8013a22:	2200      	movs	r2, #0
 8013a24:	601a      	str	r2, [r3, #0]
 8013a26:	4770      	bx	lr
 8013a28:	20002fb0 	.word	0x20002fb0

08013a2c <_ZN8touchgfx16TouchCalibration4clzuEm>:
 8013a2c:	4603      	mov	r3, r0
 8013a2e:	b1c8      	cbz	r0, 8013a64 <_ZN8touchgfx16TouchCalibration4clzuEm+0x38>
 8013a30:	0c02      	lsrs	r2, r0, #16
 8013a32:	0412      	lsls	r2, r2, #16
 8013a34:	b9a2      	cbnz	r2, 8013a60 <_ZN8touchgfx16TouchCalibration4clzuEm+0x34>
 8013a36:	0403      	lsls	r3, r0, #16
 8013a38:	2010      	movs	r0, #16
 8013a3a:	f013 4f7f 	tst.w	r3, #4278190080	@ 0xff000000
 8013a3e:	bf04      	itt	eq
 8013a40:	021b      	lsleq	r3, r3, #8
 8013a42:	3008      	addeq	r0, #8
 8013a44:	f013 4f70 	tst.w	r3, #4026531840	@ 0xf0000000
 8013a48:	bf04      	itt	eq
 8013a4a:	011b      	lsleq	r3, r3, #4
 8013a4c:	3004      	addeq	r0, #4
 8013a4e:	f013 4f40 	tst.w	r3, #3221225472	@ 0xc0000000
 8013a52:	bf04      	itt	eq
 8013a54:	009b      	lsleq	r3, r3, #2
 8013a56:	3002      	addeq	r0, #2
 8013a58:	2b00      	cmp	r3, #0
 8013a5a:	db04      	blt.n	8013a66 <_ZN8touchgfx16TouchCalibration4clzuEm+0x3a>
 8013a5c:	3001      	adds	r0, #1
 8013a5e:	4770      	bx	lr
 8013a60:	2000      	movs	r0, #0
 8013a62:	e7ea      	b.n	8013a3a <_ZN8touchgfx16TouchCalibration4clzuEm+0xe>
 8013a64:	2020      	movs	r0, #32
 8013a66:	4770      	bx	lr

08013a68 <_ZN8touchgfx16TouchCalibration7muldivuEmmmmmRm>:
 8013a68:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8013a6c:	b087      	sub	sp, #28
 8013a6e:	460d      	mov	r5, r1
 8013a70:	4616      	mov	r6, r2
 8013a72:	4698      	mov	r8, r3
 8013a74:	e9dd 4710 	ldrd	r4, r7, [sp, #64]	@ 0x40
 8013a78:	4601      	mov	r1, r0
 8013a7a:	b120      	cbz	r0, 8013a86 <_ZN8touchgfx16TouchCalibration7muldivuEmmmmmRm+0x1e>
 8013a7c:	b11a      	cbz	r2, 8013a86 <_ZN8touchgfx16TouchCalibration7muldivuEmmmmmRm+0x1e>
 8013a7e:	2d1f      	cmp	r5, #31
 8013a80:	d801      	bhi.n	8013a86 <_ZN8touchgfx16TouchCalibration7muldivuEmmmmmRm+0x1e>
 8013a82:	2b1f      	cmp	r3, #31
 8013a84:	d904      	bls.n	8013a90 <_ZN8touchgfx16TouchCalibration7muldivuEmmmmmRm+0x28>
 8013a86:	2000      	movs	r0, #0
 8013a88:	6038      	str	r0, [r7, #0]
 8013a8a:	b007      	add	sp, #28
 8013a8c:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 8013a90:	b97d      	cbnz	r5, 8013ab2 <_ZN8touchgfx16TouchCalibration7muldivuEmmmmmRm+0x4a>
 8013a92:	b143      	cbz	r3, 8013aa6 <_ZN8touchgfx16TouchCalibration7muldivuEmmmmmRm+0x3e>
 8013a94:	4602      	mov	r2, r0
 8013a96:	e9cd 4700 	strd	r4, r7, [sp]
 8013a9a:	462b      	mov	r3, r5
 8013a9c:	4641      	mov	r1, r8
 8013a9e:	4630      	mov	r0, r6
 8013aa0:	f7ff ffe2 	bl	8013a68 <_ZN8touchgfx16TouchCalibration7muldivuEmmmmmRm>
 8013aa4:	e7f1      	b.n	8013a8a <_ZN8touchgfx16TouchCalibration7muldivuEmmmmmRm+0x22>
 8013aa6:	f04f 33ff 	mov.w	r3, #4294967295
 8013aaa:	603b      	str	r3, [r7, #0]
 8013aac:	f06f 4000 	mvn.w	r0, #2147483648	@ 0x80000000
 8013ab0:	e7eb      	b.n	8013a8a <_ZN8touchgfx16TouchCalibration7muldivuEmmmmmRm+0x22>
 8013ab2:	fa32 fa05 	lsrs.w	sl, r2, r5
 8013ab6:	d106      	bne.n	8013ac6 <_ZN8touchgfx16TouchCalibration7muldivuEmmmmmRm+0x5e>
 8013ab8:	4346      	muls	r6, r0
 8013aba:	fbb6 f0f4 	udiv	r0, r6, r4
 8013abe:	fb04 6610 	mls	r6, r4, r0, r6
 8013ac2:	603e      	str	r6, [r7, #0]
 8013ac4:	e7e1      	b.n	8013a8a <_ZN8touchgfx16TouchCalibration7muldivuEmmmmmRm+0x22>
 8013ac6:	2201      	movs	r2, #1
 8013ac8:	40aa      	lsls	r2, r5
 8013aca:	3a01      	subs	r2, #1
 8013acc:	4016      	ands	r6, r2
 8013ace:	fa00 fb05 	lsl.w	fp, r0, r5
 8013ad2:	4630      	mov	r0, r6
 8013ad4:	fbbb f9f4 	udiv	r9, fp, r4
 8013ad8:	fb0a f309 	mul.w	r3, sl, r9
 8013adc:	9303      	str	r3, [sp, #12]
 8013ade:	f7ff ffa5 	bl	8013a2c <_ZN8touchgfx16TouchCalibration4clzuEm>
 8013ae2:	462b      	mov	r3, r5
 8013ae4:	460a      	mov	r2, r1
 8013ae6:	e9cd 4700 	strd	r4, r7, [sp]
 8013aea:	4601      	mov	r1, r0
 8013aec:	4630      	mov	r0, r6
 8013aee:	f7ff ffbb 	bl	8013a68 <_ZN8touchgfx16TouchCalibration7muldivuEmmmmmRm>
 8013af2:	fb04 b919 	mls	r9, r4, r9, fp
 8013af6:	4606      	mov	r6, r0
 8013af8:	4648      	mov	r0, r9
 8013afa:	eb05 0108 	add.w	r1, r5, r8
 8013afe:	f7ff ff95 	bl	8013a2c <_ZN8touchgfx16TouchCalibration4clzuEm>
 8013b02:	ab05      	add	r3, sp, #20
 8013b04:	e9cd 4300 	strd	r4, r3, [sp]
 8013b08:	464a      	mov	r2, r9
 8013b0a:	4603      	mov	r3, r0
 8013b0c:	4650      	mov	r0, sl
 8013b0e:	f7ff ffab 	bl	8013a68 <_ZN8touchgfx16TouchCalibration7muldivuEmmmmmRm>
 8013b12:	6839      	ldr	r1, [r7, #0]
 8013b14:	9a05      	ldr	r2, [sp, #20]
 8013b16:	9b03      	ldr	r3, [sp, #12]
 8013b18:	4411      	add	r1, r2
 8013b1a:	fbb1 f2f4 	udiv	r2, r1, r4
 8013b1e:	18d3      	adds	r3, r2, r3
 8013b20:	441e      	add	r6, r3
 8013b22:	fb04 1412 	mls	r4, r4, r2, r1
 8013b26:	4430      	add	r0, r6
 8013b28:	603c      	str	r4, [r7, #0]
 8013b2a:	e7ae      	b.n	8013a8a <_ZN8touchgfx16TouchCalibration7muldivuEmmmmmRm+0x22>

08013b2c <_ZN8touchgfx16TouchCalibration6muldivEllllRl>:
 8013b2c:	e92d 43f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, lr}
 8013b30:	b085      	sub	sp, #20
 8013b32:	f1b0 0900 	subs.w	r9, r0, #0
 8013b36:	9c0c      	ldr	r4, [sp, #48]	@ 0x30
 8013b38:	461d      	mov	r5, r3
 8013b3a:	bfbf      	itttt	lt
 8013b3c:	6823      	ldrlt	r3, [r4, #0]
 8013b3e:	425b      	neglt	r3, r3
 8013b40:	f1c9 0900 	rsblt	r9, r9, #0
 8013b44:	6023      	strlt	r3, [r4, #0]
 8013b46:	bfb4      	ite	lt
 8013b48:	f04f 36ff 	movlt.w	r6, #4294967295
 8013b4c:	2601      	movge	r6, #1
 8013b4e:	2a00      	cmp	r2, #0
 8013b50:	4617      	mov	r7, r2
 8013b52:	da04      	bge.n	8013b5e <_ZN8touchgfx16TouchCalibration6muldivEllllRl+0x32>
 8013b54:	6823      	ldr	r3, [r4, #0]
 8013b56:	425b      	negs	r3, r3
 8013b58:	4257      	negs	r7, r2
 8013b5a:	4276      	negs	r6, r6
 8013b5c:	6023      	str	r3, [r4, #0]
 8013b5e:	2d00      	cmp	r5, #0
 8013b60:	4638      	mov	r0, r7
 8013b62:	bfba      	itte	lt
 8013b64:	426d      	neglt	r5, r5
 8013b66:	f04f 38ff 	movlt.w	r8, #4294967295
 8013b6a:	f04f 0801 	movge.w	r8, #1
 8013b6e:	f7ff ff5d 	bl	8013a2c <_ZN8touchgfx16TouchCalibration4clzuEm>
 8013b72:	ab03      	add	r3, sp, #12
 8013b74:	e9cd 5300 	strd	r5, r3, [sp]
 8013b78:	463a      	mov	r2, r7
 8013b7a:	4603      	mov	r3, r0
 8013b7c:	4648      	mov	r0, r9
 8013b7e:	f7ff ff73 	bl	8013a68 <_ZN8touchgfx16TouchCalibration7muldivuEmmmmmRm>
 8013b82:	6823      	ldr	r3, [r4, #0]
 8013b84:	9a03      	ldr	r2, [sp, #12]
 8013b86:	4546      	cmp	r6, r8
 8013b88:	441a      	add	r2, r3
 8013b8a:	fb92 f3f5 	sdiv	r3, r2, r5
 8013b8e:	4418      	add	r0, r3
 8013b90:	bf18      	it	ne
 8013b92:	4240      	negne	r0, r0
 8013b94:	fb05 2313 	mls	r3, r5, r3, r2
 8013b98:	1c72      	adds	r2, r6, #1
 8013b9a:	6023      	str	r3, [r4, #0]
 8013b9c:	d105      	bne.n	8013baa <_ZN8touchgfx16TouchCalibration6muldivEllllRl+0x7e>
 8013b9e:	2b00      	cmp	r3, #0
 8013ba0:	f1c3 0200 	rsb	r2, r3, #0
 8013ba4:	db0b      	blt.n	8013bbe <_ZN8touchgfx16TouchCalibration6muldivEllllRl+0x92>
 8013ba6:	6022      	str	r2, [r4, #0]
 8013ba8:	e006      	b.n	8013bb8 <_ZN8touchgfx16TouchCalibration6muldivEllllRl+0x8c>
 8013baa:	2e01      	cmp	r6, #1
 8013bac:	d104      	bne.n	8013bb8 <_ZN8touchgfx16TouchCalibration6muldivEllllRl+0x8c>
 8013bae:	2b00      	cmp	r3, #0
 8013bb0:	da02      	bge.n	8013bb8 <_ZN8touchgfx16TouchCalibration6muldivEllllRl+0x8c>
 8013bb2:	442b      	add	r3, r5
 8013bb4:	3801      	subs	r0, #1
 8013bb6:	6023      	str	r3, [r4, #0]
 8013bb8:	b005      	add	sp, #20
 8013bba:	e8bd 83f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, pc}
 8013bbe:	3801      	subs	r0, #1
 8013bc0:	1b52      	subs	r2, r2, r5
 8013bc2:	e7f0      	b.n	8013ba6 <_ZN8touchgfx16TouchCalibration6muldivEllllRl+0x7a>

08013bc4 <_ZN8touchgfx16TouchCalibration14translatePointERNS_5PointE>:
 8013bc4:	e92d 41ff 	stmdb	sp!, {r0, r1, r2, r3, r4, r5, r6, r7, r8, lr}
 8013bc8:	4c1c      	ldr	r4, [pc, #112]	@ (8013c3c <_ZN8touchgfx16TouchCalibration14translatePointERNS_5PointE+0x78>)
 8013bca:	6807      	ldr	r7, [r0, #0]
 8013bcc:	69a3      	ldr	r3, [r4, #24]
 8013bce:	4605      	mov	r5, r0
 8013bd0:	b92b      	cbnz	r3, 8013bde <_ZN8touchgfx16TouchCalibration14translatePointERNS_5PointE+0x1a>
 8013bd2:	6840      	ldr	r0, [r0, #4]
 8013bd4:	e9c5 7000 	strd	r7, r0, [r5]
 8013bd8:	b004      	add	sp, #16
 8013bda:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
 8013bde:	68a2      	ldr	r2, [r4, #8]
 8013be0:	6820      	ldr	r0, [r4, #0]
 8013be2:	ae04      	add	r6, sp, #16
 8013be4:	f04f 0802 	mov.w	r8, #2
 8013be8:	fb93 f1f8 	sdiv	r1, r3, r8
 8013bec:	440a      	add	r2, r1
 8013bee:	f846 2d04 	str.w	r2, [r6, #-4]!
 8013bf2:	69e1      	ldr	r1, [r4, #28]
 8013bf4:	9600      	str	r6, [sp, #0]
 8013bf6:	463a      	mov	r2, r7
 8013bf8:	f7ff ff98 	bl	8013b2c <_ZN8touchgfx16TouchCalibration6muldivEllllRl>
 8013bfc:	69a3      	ldr	r3, [r4, #24]
 8013bfe:	686a      	ldr	r2, [r5, #4]
 8013c00:	6a21      	ldr	r1, [r4, #32]
 8013c02:	9600      	str	r6, [sp, #0]
 8013c04:	4607      	mov	r7, r0
 8013c06:	6860      	ldr	r0, [r4, #4]
 8013c08:	f7ff ff90 	bl	8013b2c <_ZN8touchgfx16TouchCalibration6muldivEllllRl>
 8013c0c:	6962      	ldr	r2, [r4, #20]
 8013c0e:	69a3      	ldr	r3, [r4, #24]
 8013c10:	fb93 f8f8 	sdiv	r8, r3, r8
 8013c14:	4442      	add	r2, r8
 8013c16:	9203      	str	r2, [sp, #12]
 8013c18:	6a61      	ldr	r1, [r4, #36]	@ 0x24
 8013c1a:	682a      	ldr	r2, [r5, #0]
 8013c1c:	9600      	str	r6, [sp, #0]
 8013c1e:	4407      	add	r7, r0
 8013c20:	68e0      	ldr	r0, [r4, #12]
 8013c22:	f7ff ff83 	bl	8013b2c <_ZN8touchgfx16TouchCalibration6muldivEllllRl>
 8013c26:	9600      	str	r6, [sp, #0]
 8013c28:	4680      	mov	r8, r0
 8013c2a:	69a3      	ldr	r3, [r4, #24]
 8013c2c:	686a      	ldr	r2, [r5, #4]
 8013c2e:	6aa1      	ldr	r1, [r4, #40]	@ 0x28
 8013c30:	6920      	ldr	r0, [r4, #16]
 8013c32:	f7ff ff7b 	bl	8013b2c <_ZN8touchgfx16TouchCalibration6muldivEllllRl>
 8013c36:	4440      	add	r0, r8
 8013c38:	e7cc      	b.n	8013bd4 <_ZN8touchgfx16TouchCalibration14translatePointERNS_5PointE+0x10>
 8013c3a:	bf00      	nop
 8013c3c:	20002fb4 	.word	0x20002fb4

08013c40 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERsS1_>:
 8013c40:	4b07      	ldr	r3, [pc, #28]	@ (8013c60 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERsS1_+0x20>)
 8013c42:	781b      	ldrb	r3, [r3, #0]
 8013c44:	2b01      	cmp	r3, #1
 8013c46:	d109      	bne.n	8013c5c <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERsS1_+0x1c>
 8013c48:	f9b1 3000 	ldrsh.w	r3, [r1]
 8013c4c:	f9b0 2000 	ldrsh.w	r2, [r0]
 8013c50:	8003      	strh	r3, [r0, #0]
 8013c52:	4b04      	ldr	r3, [pc, #16]	@ (8013c64 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERsS1_+0x24>)
 8013c54:	881b      	ldrh	r3, [r3, #0]
 8013c56:	3b01      	subs	r3, #1
 8013c58:	1a9b      	subs	r3, r3, r2
 8013c5a:	800b      	strh	r3, [r1, #0]
 8013c5c:	4770      	bx	lr
 8013c5e:	bf00      	nop
 8013c60:	20002fa0 	.word	0x20002fa0
 8013c64:	20002f9c 	.word	0x20002f9c

08013c68 <_ZN8touchgfx21DisplayTransformation29transformFrameBufferToDisplayERsS1_>:
 8013c68:	b510      	push	{r4, lr}
 8013c6a:	4b07      	ldr	r3, [pc, #28]	@ (8013c88 <_ZN8touchgfx21DisplayTransformation29transformFrameBufferToDisplayERsS1_+0x20>)
 8013c6c:	781b      	ldrb	r3, [r3, #0]
 8013c6e:	2b01      	cmp	r3, #1
 8013c70:	d108      	bne.n	8013c84 <_ZN8touchgfx21DisplayTransformation29transformFrameBufferToDisplayERsS1_+0x1c>
 8013c72:	4b06      	ldr	r3, [pc, #24]	@ (8013c8c <_ZN8touchgfx21DisplayTransformation29transformFrameBufferToDisplayERsS1_+0x24>)
 8013c74:	880c      	ldrh	r4, [r1, #0]
 8013c76:	881b      	ldrh	r3, [r3, #0]
 8013c78:	f9b0 2000 	ldrsh.w	r2, [r0]
 8013c7c:	3b01      	subs	r3, #1
 8013c7e:	1b1b      	subs	r3, r3, r4
 8013c80:	8003      	strh	r3, [r0, #0]
 8013c82:	800a      	strh	r2, [r1, #0]
 8013c84:	bd10      	pop	{r4, pc}
 8013c86:	bf00      	nop
 8013c88:	20002fa0 	.word	0x20002fa0
 8013c8c:	20002f9c 	.word	0x20002f9c

08013c90 <_ZN8touchgfx21DisplayTransformation29transformFrameBufferToDisplayERNS_4RectE>:
 8013c90:	b510      	push	{r4, lr}
 8013c92:	4b0a      	ldr	r3, [pc, #40]	@ (8013cbc <_ZN8touchgfx21DisplayTransformation29transformFrameBufferToDisplayERNS_4RectE+0x2c>)
 8013c94:	781b      	ldrb	r3, [r3, #0]
 8013c96:	2b01      	cmp	r3, #1
 8013c98:	d10e      	bne.n	8013cb8 <_ZN8touchgfx21DisplayTransformation29transformFrameBufferToDisplayERNS_4RectE+0x28>
 8013c9a:	f9b0 1006 	ldrsh.w	r1, [r0, #6]
 8013c9e:	8843      	ldrh	r3, [r0, #2]
 8013ca0:	f9b0 4000 	ldrsh.w	r4, [r0]
 8013ca4:	8044      	strh	r4, [r0, #2]
 8013ca6:	18ca      	adds	r2, r1, r3
 8013ca8:	4b05      	ldr	r3, [pc, #20]	@ (8013cc0 <_ZN8touchgfx21DisplayTransformation29transformFrameBufferToDisplayERNS_4RectE+0x30>)
 8013caa:	881b      	ldrh	r3, [r3, #0]
 8013cac:	1a9b      	subs	r3, r3, r2
 8013cae:	8003      	strh	r3, [r0, #0]
 8013cb0:	f9b0 3004 	ldrsh.w	r3, [r0, #4]
 8013cb4:	80c3      	strh	r3, [r0, #6]
 8013cb6:	8081      	strh	r1, [r0, #4]
 8013cb8:	bd10      	pop	{r4, pc}
 8013cba:	bf00      	nop
 8013cbc:	20002fa0 	.word	0x20002fa0
 8013cc0:	20002f9c 	.word	0x20002f9c

08013cc4 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectE>:
 8013cc4:	4b08      	ldr	r3, [pc, #32]	@ (8013ce8 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectE+0x24>)
 8013cc6:	781b      	ldrb	r3, [r3, #0]
 8013cc8:	2b01      	cmp	r3, #1
 8013cca:	d10c      	bne.n	8013ce6 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectE+0x22>
 8013ccc:	8803      	ldrh	r3, [r0, #0]
 8013cce:	f9b0 1004 	ldrsh.w	r1, [r0, #4]
 8013cd2:	8842      	ldrh	r2, [r0, #2]
 8013cd4:	8002      	strh	r2, [r0, #0]
 8013cd6:	185a      	adds	r2, r3, r1
 8013cd8:	4b04      	ldr	r3, [pc, #16]	@ (8013cec <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectE+0x28>)
 8013cda:	881b      	ldrh	r3, [r3, #0]
 8013cdc:	1a9b      	subs	r3, r3, r2
 8013cde:	8043      	strh	r3, [r0, #2]
 8013ce0:	88c3      	ldrh	r3, [r0, #6]
 8013ce2:	8083      	strh	r3, [r0, #4]
 8013ce4:	80c1      	strh	r1, [r0, #6]
 8013ce6:	4770      	bx	lr
 8013ce8:	20002fa0 	.word	0x20002fa0
 8013cec:	20002f9c 	.word	0x20002f9c

08013cf0 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERsS1_RKNS_4RectE>:
 8013cf0:	b510      	push	{r4, lr}
 8013cf2:	4b07      	ldr	r3, [pc, #28]	@ (8013d10 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERsS1_RKNS_4RectE+0x20>)
 8013cf4:	781b      	ldrb	r3, [r3, #0]
 8013cf6:	2b01      	cmp	r3, #1
 8013cf8:	d108      	bne.n	8013d0c <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERsS1_RKNS_4RectE+0x1c>
 8013cfa:	f9b1 3000 	ldrsh.w	r3, [r1]
 8013cfe:	f9b0 4000 	ldrsh.w	r4, [r0]
 8013d02:	8003      	strh	r3, [r0, #0]
 8013d04:	8893      	ldrh	r3, [r2, #4]
 8013d06:	3b01      	subs	r3, #1
 8013d08:	1b1b      	subs	r3, r3, r4
 8013d0a:	800b      	strh	r3, [r1, #0]
 8013d0c:	bd10      	pop	{r4, pc}
 8013d0e:	bf00      	nop
 8013d10:	20002fa0 	.word	0x20002fa0

08013d14 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectERKS1_>:
 8013d14:	b510      	push	{r4, lr}
 8013d16:	4b0a      	ldr	r3, [pc, #40]	@ (8013d40 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectERKS1_+0x2c>)
 8013d18:	781b      	ldrb	r3, [r3, #0]
 8013d1a:	2b01      	cmp	r3, #1
 8013d1c:	460a      	mov	r2, r1
 8013d1e:	d10d      	bne.n	8013d3c <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectERKS1_+0x28>
 8013d20:	8881      	ldrh	r1, [r0, #4]
 8013d22:	8803      	ldrh	r3, [r0, #0]
 8013d24:	440b      	add	r3, r1
 8013d26:	4601      	mov	r1, r0
 8013d28:	3b01      	subs	r3, #1
 8013d2a:	f821 3b02 	strh.w	r3, [r1], #2
 8013d2e:	f7ff ffdf 	bl	8013cf0 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERsS1_RKNS_4RectE>
 8013d32:	f9b0 3004 	ldrsh.w	r3, [r0, #4]
 8013d36:	88c2      	ldrh	r2, [r0, #6]
 8013d38:	8082      	strh	r2, [r0, #4]
 8013d3a:	80c3      	strh	r3, [r0, #6]
 8013d3c:	bd10      	pop	{r4, pc}
 8013d3e:	bf00      	nop
 8013d40:	20002fa0 	.word	0x20002fa0

08013d44 <_ZN8touchgfx11Application13requestRedrawEv>:
 8013d44:	4b06      	ldr	r3, [pc, #24]	@ (8013d60 <_ZN8touchgfx11Application13requestRedrawEv+0x1c>)
 8013d46:	f9b3 2000 	ldrsh.w	r2, [r3]
 8013d4a:	4b06      	ldr	r3, [pc, #24]	@ (8013d64 <_ZN8touchgfx11Application13requestRedrawEv+0x20>)
 8013d4c:	f8a0 2134 	strh.w	r2, [r0, #308]	@ 0x134
 8013d50:	f9b3 3000 	ldrsh.w	r3, [r3]
 8013d54:	f8a0 3136 	strh.w	r3, [r0, #310]	@ 0x136
 8013d58:	2100      	movs	r1, #0
 8013d5a:	f8c0 1130 	str.w	r1, [r0, #304]	@ 0x130
 8013d5e:	4770      	bx	lr
 8013d60:	20002f9c 	.word	0x20002f9c
 8013d64:	20002f9e 	.word	0x20002f9e

08013d68 <_ZN8touchgfx11Application16handleClickEventERKNS_10ClickEventE>:
 8013d68:	4b03      	ldr	r3, [pc, #12]	@ (8013d78 <_ZN8touchgfx11Application16handleClickEventERKNS_10ClickEventE+0x10>)
 8013d6a:	6818      	ldr	r0, [r3, #0]
 8013d6c:	b110      	cbz	r0, 8013d74 <_ZN8touchgfx11Application16handleClickEventERKNS_10ClickEventE+0xc>
 8013d6e:	6803      	ldr	r3, [r0, #0]
 8013d70:	699b      	ldr	r3, [r3, #24]
 8013d72:	4718      	bx	r3
 8013d74:	4770      	bx	lr
 8013d76:	bf00      	nop
 8013d78:	20002fe4 	.word	0x20002fe4

08013d7c <_ZN8touchgfx11Application29handlePendingScreenTransitionEv>:
 8013d7c:	4770      	bx	lr
	...

08013d80 <_ZN8touchgfx11Application4drawEv>:
 8013d80:	b507      	push	{r0, r1, r2, lr}
 8013d82:	4b09      	ldr	r3, [pc, #36]	@ (8013da8 <_ZN8touchgfx11Application4drawEv+0x28>)
 8013d84:	f9b3 2000 	ldrsh.w	r2, [r3]
 8013d88:	4b08      	ldr	r3, [pc, #32]	@ (8013dac <_ZN8touchgfx11Application4drawEv+0x2c>)
 8013d8a:	f8ad 2004 	strh.w	r2, [sp, #4]
 8013d8e:	f9b3 3000 	ldrsh.w	r3, [r3]
 8013d92:	f8ad 3006 	strh.w	r3, [sp, #6]
 8013d96:	6803      	ldr	r3, [r0, #0]
 8013d98:	2100      	movs	r1, #0
 8013d9a:	9100      	str	r1, [sp, #0]
 8013d9c:	6c9b      	ldr	r3, [r3, #72]	@ 0x48
 8013d9e:	4669      	mov	r1, sp
 8013da0:	4798      	blx	r3
 8013da2:	b003      	add	sp, #12
 8013da4:	f85d fb04 	ldr.w	pc, [sp], #4
 8013da8:	20002f9c 	.word	0x20002f9c
 8013dac:	20002f9e 	.word	0x20002f9e

08013db0 <_ZN8touchgfx11Application10invalidateEv>:
 8013db0:	4b09      	ldr	r3, [pc, #36]	@ (8013dd8 <_ZN8touchgfx11Application10invalidateEv+0x28>)
 8013db2:	f9b3 2000 	ldrsh.w	r2, [r3]
 8013db6:	4b09      	ldr	r3, [pc, #36]	@ (8013ddc <_ZN8touchgfx11Application10invalidateEv+0x2c>)
 8013db8:	b082      	sub	sp, #8
 8013dba:	f9b3 3000 	ldrsh.w	r3, [r3]
 8013dbe:	f8ad 2004 	strh.w	r2, [sp, #4]
 8013dc2:	2100      	movs	r1, #0
 8013dc4:	f8ad 3006 	strh.w	r3, [sp, #6]
 8013dc8:	9100      	str	r1, [sp, #0]
 8013dca:	6803      	ldr	r3, [r0, #0]
 8013dcc:	aa02      	add	r2, sp, #8
 8013dce:	e912 0006 	ldmdb	r2, {r1, r2}
 8013dd2:	6c1b      	ldr	r3, [r3, #64]	@ 0x40
 8013dd4:	b002      	add	sp, #8
 8013dd6:	4718      	bx	r3
 8013dd8:	20002f9c 	.word	0x20002f9c
 8013ddc:	20002f9e 	.word	0x20002f9e

08013de0 <_ZN8touchgfx11Application15handleDragEventERKNS_9DragEventE>:
 8013de0:	4b03      	ldr	r3, [pc, #12]	@ (8013df0 <_ZN8touchgfx11Application15handleDragEventERKNS_9DragEventE+0x10>)
 8013de2:	6818      	ldr	r0, [r3, #0]
 8013de4:	b110      	cbz	r0, 8013dec <_ZN8touchgfx11Application15handleDragEventERKNS_9DragEventE+0xc>
 8013de6:	6803      	ldr	r3, [r0, #0]
 8013de8:	69db      	ldr	r3, [r3, #28]
 8013dea:	4718      	bx	r3
 8013dec:	4770      	bx	lr
 8013dee:	bf00      	nop
 8013df0:	20002fe4 	.word	0x20002fe4

08013df4 <_ZN8touchgfx11Application18handleGestureEventERKNS_12GestureEventE>:
 8013df4:	4b03      	ldr	r3, [pc, #12]	@ (8013e04 <_ZN8touchgfx11Application18handleGestureEventERKNS_12GestureEventE+0x10>)
 8013df6:	6818      	ldr	r0, [r3, #0]
 8013df8:	b110      	cbz	r0, 8013e00 <_ZN8touchgfx11Application18handleGestureEventERKNS_12GestureEventE+0xc>
 8013dfa:	6803      	ldr	r3, [r0, #0]
 8013dfc:	6a1b      	ldr	r3, [r3, #32]
 8013dfe:	4718      	bx	r3
 8013e00:	4770      	bx	lr
 8013e02:	bf00      	nop
 8013e04:	20002fe4 	.word	0x20002fe4

08013e08 <_ZN8touchgfx11Application16clearCachedAreasEv>:
 8013e08:	2300      	movs	r3, #0
 8013e0a:	f8a0 30ec 	strh.w	r3, [r0, #236]	@ 0xec
 8013e0e:	4770      	bx	lr

08013e10 <_ZN8touchgfx11Application14handleKeyEventEh>:
 8013e10:	4b03      	ldr	r3, [pc, #12]	@ (8013e20 <_ZN8touchgfx11Application14handleKeyEventEh+0x10>)
 8013e12:	6818      	ldr	r0, [r3, #0]
 8013e14:	b110      	cbz	r0, 8013e1c <_ZN8touchgfx11Application14handleKeyEventEh+0xc>
 8013e16:	6803      	ldr	r3, [r0, #0]
 8013e18:	6a9b      	ldr	r3, [r3, #40]	@ 0x28
 8013e1a:	4718      	bx	r3
 8013e1c:	4770      	bx	lr
 8013e1e:	bf00      	nop
 8013e20:	20002fe4 	.word	0x20002fe4

08013e24 <_ZNK8touchgfx4Rect9intersectERKS0_>:
 8013e24:	b510      	push	{r4, lr}
 8013e26:	f9b1 4000 	ldrsh.w	r4, [r1]
 8013e2a:	888a      	ldrh	r2, [r1, #4]
 8013e2c:	f9b0 3000 	ldrsh.w	r3, [r0]
 8013e30:	4422      	add	r2, r4
 8013e32:	b212      	sxth	r2, r2
 8013e34:	4293      	cmp	r3, r2
 8013e36:	da15      	bge.n	8013e64 <_ZNK8touchgfx4Rect9intersectERKS0_+0x40>
 8013e38:	8882      	ldrh	r2, [r0, #4]
 8013e3a:	4413      	add	r3, r2
 8013e3c:	b21b      	sxth	r3, r3
 8013e3e:	429c      	cmp	r4, r3
 8013e40:	da10      	bge.n	8013e64 <_ZNK8touchgfx4Rect9intersectERKS0_+0x40>
 8013e42:	f9b1 3002 	ldrsh.w	r3, [r1, #2]
 8013e46:	88c9      	ldrh	r1, [r1, #6]
 8013e48:	f9b0 2002 	ldrsh.w	r2, [r0, #2]
 8013e4c:	4419      	add	r1, r3
 8013e4e:	b209      	sxth	r1, r1
 8013e50:	428a      	cmp	r2, r1
 8013e52:	da07      	bge.n	8013e64 <_ZNK8touchgfx4Rect9intersectERKS0_+0x40>
 8013e54:	88c0      	ldrh	r0, [r0, #6]
 8013e56:	4410      	add	r0, r2
 8013e58:	b200      	sxth	r0, r0
 8013e5a:	4283      	cmp	r3, r0
 8013e5c:	bfac      	ite	ge
 8013e5e:	2000      	movge	r0, #0
 8013e60:	2001      	movlt	r0, #1
 8013e62:	bd10      	pop	{r4, pc}
 8013e64:	2000      	movs	r0, #0
 8013e66:	e7fc      	b.n	8013e62 <_ZNK8touchgfx4Rect9intersectERKS0_+0x3e>

08013e68 <_ZN8touchgfx4Rect10restrictToEss>:
 8013e68:	f9b0 3000 	ldrsh.w	r3, [r0]
 8013e6c:	2b00      	cmp	r3, #0
 8013e6e:	b510      	push	{r4, lr}
 8013e70:	da04      	bge.n	8013e7c <_ZN8touchgfx4Rect10restrictToEss+0x14>
 8013e72:	8884      	ldrh	r4, [r0, #4]
 8013e74:	4423      	add	r3, r4
 8013e76:	8083      	strh	r3, [r0, #4]
 8013e78:	2300      	movs	r3, #0
 8013e7a:	8003      	strh	r3, [r0, #0]
 8013e7c:	f9b0 4000 	ldrsh.w	r4, [r0]
 8013e80:	f9b0 3004 	ldrsh.w	r3, [r0, #4]
 8013e84:	1b09      	subs	r1, r1, r4
 8013e86:	428b      	cmp	r3, r1
 8013e88:	f9b0 3002 	ldrsh.w	r3, [r0, #2]
 8013e8c:	bfc8      	it	gt
 8013e8e:	8081      	strhgt	r1, [r0, #4]
 8013e90:	2b00      	cmp	r3, #0
 8013e92:	da04      	bge.n	8013e9e <_ZN8touchgfx4Rect10restrictToEss+0x36>
 8013e94:	88c1      	ldrh	r1, [r0, #6]
 8013e96:	440b      	add	r3, r1
 8013e98:	80c3      	strh	r3, [r0, #6]
 8013e9a:	2300      	movs	r3, #0
 8013e9c:	8043      	strh	r3, [r0, #2]
 8013e9e:	f9b0 1002 	ldrsh.w	r1, [r0, #2]
 8013ea2:	f9b0 3006 	ldrsh.w	r3, [r0, #6]
 8013ea6:	1a52      	subs	r2, r2, r1
 8013ea8:	4293      	cmp	r3, r2
 8013eaa:	bfc8      	it	gt
 8013eac:	80c2      	strhgt	r2, [r0, #6]
 8013eae:	bd10      	pop	{r4, pc}

08013eb0 <_ZN8touchgfx11Application4drawERNS_4RectE>:
 8013eb0:	b510      	push	{r4, lr}
 8013eb2:	4b10      	ldr	r3, [pc, #64]	@ (8013ef4 <_ZN8touchgfx11Application4drawERNS_4RectE+0x44>)
 8013eb4:	f9b3 2000 	ldrsh.w	r2, [r3]
 8013eb8:	4b0f      	ldr	r3, [pc, #60]	@ (8013ef8 <_ZN8touchgfx11Application4drawERNS_4RectE+0x48>)
 8013eba:	460c      	mov	r4, r1
 8013ebc:	4620      	mov	r0, r4
 8013ebe:	f9b3 1000 	ldrsh.w	r1, [r3]
 8013ec2:	f7ff ffd1 	bl	8013e68 <_ZN8touchgfx4Rect10restrictToEss>
 8013ec6:	4b0d      	ldr	r3, [pc, #52]	@ (8013efc <_ZN8touchgfx11Application4drawERNS_4RectE+0x4c>)
 8013ec8:	6818      	ldr	r0, [r3, #0]
 8013eca:	b190      	cbz	r0, 8013ef2 <_ZN8touchgfx11Application4drawERNS_4RectE+0x42>
 8013ecc:	6803      	ldr	r3, [r0, #0]
 8013ece:	4621      	mov	r1, r4
 8013ed0:	689b      	ldr	r3, [r3, #8]
 8013ed2:	4798      	blx	r3
 8013ed4:	4b0a      	ldr	r3, [pc, #40]	@ (8013f00 <_ZN8touchgfx11Application4drawERNS_4RectE+0x50>)
 8013ed6:	6818      	ldr	r0, [r3, #0]
 8013ed8:	b118      	cbz	r0, 8013ee2 <_ZN8touchgfx11Application4drawERNS_4RectE+0x32>
 8013eda:	6803      	ldr	r3, [r0, #0]
 8013edc:	4621      	mov	r1, r4
 8013ede:	689b      	ldr	r3, [r3, #8]
 8013ee0:	4798      	blx	r3
 8013ee2:	4b08      	ldr	r3, [pc, #32]	@ (8013f04 <_ZN8touchgfx11Application4drawERNS_4RectE+0x54>)
 8013ee4:	6818      	ldr	r0, [r3, #0]
 8013ee6:	6803      	ldr	r3, [r0, #0]
 8013ee8:	4621      	mov	r1, r4
 8013eea:	69db      	ldr	r3, [r3, #28]
 8013eec:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
 8013ef0:	4718      	bx	r3
 8013ef2:	bd10      	pop	{r4, pc}
 8013ef4:	20002f9e 	.word	0x20002f9e
 8013ef8:	20002f9c 	.word	0x20002f9c
 8013efc:	20002fe4 	.word	0x20002fe4
 8013f00:	20002fe0 	.word	0x20002fe0
 8013f04:	20002fa8 	.word	0x20002fa8

08013f08 <_ZNK8touchgfx4Rect8includesERKS0_>:
 8013f08:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 8013f0a:	4606      	mov	r6, r0
 8013f0c:	4608      	mov	r0, r1
 8013f0e:	460f      	mov	r7, r1
 8013f10:	f7fc fd57 	bl	80109c2 <_ZNK8touchgfx4Rect7isEmptyEv>
 8013f14:	b9e8      	cbnz	r0, 8013f52 <_ZNK8touchgfx4Rect8includesERKS0_+0x4a>
 8013f16:	f9b7 5000 	ldrsh.w	r5, [r7]
 8013f1a:	f9b6 4000 	ldrsh.w	r4, [r6]
 8013f1e:	42a5      	cmp	r5, r4
 8013f20:	db17      	blt.n	8013f52 <_ZNK8touchgfx4Rect8includesERKS0_+0x4a>
 8013f22:	f9b7 2002 	ldrsh.w	r2, [r7, #2]
 8013f26:	f9b6 3002 	ldrsh.w	r3, [r6, #2]
 8013f2a:	429a      	cmp	r2, r3
 8013f2c:	db11      	blt.n	8013f52 <_ZNK8touchgfx4Rect8includesERKS0_+0x4a>
 8013f2e:	88b9      	ldrh	r1, [r7, #4]
 8013f30:	440d      	add	r5, r1
 8013f32:	88b1      	ldrh	r1, [r6, #4]
 8013f34:	440c      	add	r4, r1
 8013f36:	b22d      	sxth	r5, r5
 8013f38:	b224      	sxth	r4, r4
 8013f3a:	42a5      	cmp	r5, r4
 8013f3c:	dc09      	bgt.n	8013f52 <_ZNK8touchgfx4Rect8includesERKS0_+0x4a>
 8013f3e:	88f8      	ldrh	r0, [r7, #6]
 8013f40:	4410      	add	r0, r2
 8013f42:	88f2      	ldrh	r2, [r6, #6]
 8013f44:	4413      	add	r3, r2
 8013f46:	b200      	sxth	r0, r0
 8013f48:	b21b      	sxth	r3, r3
 8013f4a:	4298      	cmp	r0, r3
 8013f4c:	bfcc      	ite	gt
 8013f4e:	2000      	movgt	r0, #0
 8013f50:	2001      	movle	r0, #1
 8013f52:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}

08013f54 <_ZN8touchgfx4Rect11expandToFitERKS0_>:
 8013f54:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 8013f56:	4604      	mov	r4, r0
 8013f58:	4608      	mov	r0, r1
 8013f5a:	460d      	mov	r5, r1
 8013f5c:	f7fc fd31 	bl	80109c2 <_ZNK8touchgfx4Rect7isEmptyEv>
 8013f60:	b978      	cbnz	r0, 8013f82 <_ZN8touchgfx4Rect11expandToFitERKS0_+0x2e>
 8013f62:	4620      	mov	r0, r4
 8013f64:	f7fc fd2d 	bl	80109c2 <_ZNK8touchgfx4Rect7isEmptyEv>
 8013f68:	f9b5 6000 	ldrsh.w	r6, [r5]
 8013f6c:	b150      	cbz	r0, 8013f84 <_ZN8touchgfx4Rect11expandToFitERKS0_+0x30>
 8013f6e:	8026      	strh	r6, [r4, #0]
 8013f70:	f9b5 3002 	ldrsh.w	r3, [r5, #2]
 8013f74:	8063      	strh	r3, [r4, #2]
 8013f76:	f9b5 3004 	ldrsh.w	r3, [r5, #4]
 8013f7a:	80a3      	strh	r3, [r4, #4]
 8013f7c:	f9b5 3006 	ldrsh.w	r3, [r5, #6]
 8013f80:	80e3      	strh	r3, [r4, #6]
 8013f82:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
 8013f84:	f9b4 1000 	ldrsh.w	r1, [r4]
 8013f88:	f9b5 2002 	ldrsh.w	r2, [r5, #2]
 8013f8c:	f9b4 3002 	ldrsh.w	r3, [r4, #2]
 8013f90:	f8b5 c004 	ldrh.w	ip, [r5, #4]
 8013f94:	88ed      	ldrh	r5, [r5, #6]
 8013f96:	42b1      	cmp	r1, r6
 8013f98:	460f      	mov	r7, r1
 8013f9a:	bfa8      	it	ge
 8013f9c:	4637      	movge	r7, r6
 8013f9e:	4293      	cmp	r3, r2
 8013fa0:	4618      	mov	r0, r3
 8013fa2:	4466      	add	r6, ip
 8013fa4:	bfa8      	it	ge
 8013fa6:	4610      	movge	r0, r2
 8013fa8:	f8b4 c004 	ldrh.w	ip, [r4, #4]
 8013fac:	8027      	strh	r7, [r4, #0]
 8013fae:	442a      	add	r2, r5
 8013fb0:	88e5      	ldrh	r5, [r4, #6]
 8013fb2:	8060      	strh	r0, [r4, #2]
 8013fb4:	4461      	add	r1, ip
 8013fb6:	442b      	add	r3, r5
 8013fb8:	b236      	sxth	r6, r6
 8013fba:	b209      	sxth	r1, r1
 8013fbc:	b212      	sxth	r2, r2
 8013fbe:	b21b      	sxth	r3, r3
 8013fc0:	428e      	cmp	r6, r1
 8013fc2:	bfac      	ite	ge
 8013fc4:	ebc7 0106 	rsbge	r1, r7, r6
 8013fc8:	ebc7 0101 	rsblt	r1, r7, r1
 8013fcc:	429a      	cmp	r2, r3
 8013fce:	bfac      	ite	ge
 8013fd0:	ebc0 0202 	rsbge	r2, r0, r2
 8013fd4:	ebc0 0203 	rsblt	r2, r0, r3
 8013fd8:	80a1      	strh	r1, [r4, #4]
 8013fda:	80e2      	strh	r2, [r4, #6]
 8013fdc:	e7d1      	b.n	8013f82 <_ZN8touchgfx4Rect11expandToFitERKS0_+0x2e>
	...

08013fe0 <_ZN8touchgfx11Application11getInstanceEv>:
 8013fe0:	4b01      	ldr	r3, [pc, #4]	@ (8013fe8 <_ZN8touchgfx11Application11getInstanceEv+0x8>)
 8013fe2:	6818      	ldr	r0, [r3, #0]
 8013fe4:	4770      	bx	lr
 8013fe6:	bf00      	nop
 8013fe8:	20002ff4 	.word	0x20002ff4

08013fec <_ZN8touchgfx11Application12TimerWidgets10tickActiveEv>:
 8013fec:	b510      	push	{r4, lr}
 8013fee:	2300      	movs	r3, #0
 8013ff0:	f8a0 30a4 	strh.w	r3, [r0, #164]	@ 0xa4
 8013ff4:	f8b0 3080 	ldrh.w	r3, [r0, #128]	@ 0x80
 8013ff8:	f8a0 30a6 	strh.w	r3, [r0, #166]	@ 0xa6
 8013ffc:	4604      	mov	r4, r0
 8013ffe:	f8b4 30a4 	ldrh.w	r3, [r4, #164]	@ 0xa4
 8014002:	f8b4 20a6 	ldrh.w	r2, [r4, #166]	@ 0xa6
 8014006:	429a      	cmp	r2, r3
 8014008:	d90e      	bls.n	8014028 <_ZN8touchgfx11Application12TimerWidgets10tickActiveEv+0x3c>
 801400a:	18e2      	adds	r2, r4, r3
 801400c:	f892 2084 	ldrb.w	r2, [r2, #132]	@ 0x84
 8014010:	b122      	cbz	r2, 801401c <_ZN8touchgfx11Application12TimerWidgets10tickActiveEv+0x30>
 8014012:	f854 0023 	ldr.w	r0, [r4, r3, lsl #2]
 8014016:	6803      	ldr	r3, [r0, #0]
 8014018:	6d1b      	ldr	r3, [r3, #80]	@ 0x50
 801401a:	4798      	blx	r3
 801401c:	f8b4 30a4 	ldrh.w	r3, [r4, #164]	@ 0xa4
 8014020:	3301      	adds	r3, #1
 8014022:	f8a4 30a4 	strh.w	r3, [r4, #164]	@ 0xa4
 8014026:	e7ea      	b.n	8013ffe <_ZN8touchgfx11Application12TimerWidgets10tickActiveEv+0x12>
 8014028:	bd10      	pop	{r4, pc}

0801402a <_ZN8touchgfx11Application12TimerWidgets5clearEv>:
 801402a:	2300      	movs	r3, #0
 801402c:	f8a0 3080 	strh.w	r3, [r0, #128]	@ 0x80
 8014030:	f100 0284 	add.w	r2, r0, #132	@ 0x84
 8014034:	30a4      	adds	r0, #164	@ 0xa4
 8014036:	f802 3b01 	strb.w	r3, [r2], #1
 801403a:	4282      	cmp	r2, r0
 801403c:	d1fb      	bne.n	8014036 <_ZN8touchgfx11Application12TimerWidgets5clearEv+0xc>
 801403e:	4770      	bx	lr

08014040 <_ZN8touchgfx11Application12switchScreenEPNS_6ScreenE>:
 8014040:	b570      	push	{r4, r5, r6, lr}
 8014042:	4c0b      	ldr	r4, [pc, #44]	@ (8014070 <_ZN8touchgfx11Application12switchScreenEPNS_6ScreenE+0x30>)
 8014044:	4605      	mov	r5, r0
 8014046:	6820      	ldr	r0, [r4, #0]
 8014048:	460e      	mov	r6, r1
 801404a:	b110      	cbz	r0, 8014052 <_ZN8touchgfx11Application12switchScreenEPNS_6ScreenE+0x12>
 801404c:	6803      	ldr	r3, [r0, #0]
 801404e:	695b      	ldr	r3, [r3, #20]
 8014050:	4798      	blx	r3
 8014052:	1d28      	adds	r0, r5, #4
 8014054:	f7ff ffe9 	bl	801402a <_ZN8touchgfx11Application12TimerWidgets5clearEv>
 8014058:	6026      	str	r6, [r4, #0]
 801405a:	6833      	ldr	r3, [r6, #0]
 801405c:	4630      	mov	r0, r6
 801405e:	68db      	ldr	r3, [r3, #12]
 8014060:	4798      	blx	r3
 8014062:	682b      	ldr	r3, [r5, #0]
 8014064:	4628      	mov	r0, r5
 8014066:	6c5b      	ldr	r3, [r3, #68]	@ 0x44
 8014068:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
 801406c:	4718      	bx	r3
 801406e:	bf00      	nop
 8014070:	20002fe4 	.word	0x20002fe4

08014074 <_ZN8touchgfx11Application12TimerWidgets7compactEv>:
 8014074:	2300      	movs	r3, #0
 8014076:	f8b0 c080 	ldrh.w	ip, [r0, #128]	@ 0x80
 801407a:	f8b0 10a4 	ldrh.w	r1, [r0, #164]	@ 0xa4
 801407e:	b5f0      	push	{r4, r5, r6, r7, lr}
 8014080:	461a      	mov	r2, r3
 8014082:	461c      	mov	r4, r3
 8014084:	461d      	mov	r5, r3
 8014086:	459c      	cmp	ip, r3
 8014088:	dd1a      	ble.n	80140c0 <_ZN8touchgfx11Application12TimerWidgets7compactEv+0x4c>
 801408a:	18c6      	adds	r6, r0, r3
 801408c:	f896 6084 	ldrb.w	r6, [r6, #132]	@ 0x84
 8014090:	b16e      	cbz	r6, 80140ae <_ZN8touchgfx11Application12TimerWidgets7compactEv+0x3a>
 8014092:	429a      	cmp	r2, r3
 8014094:	d008      	beq.n	80140a8 <_ZN8touchgfx11Application12TimerWidgets7compactEv+0x34>
 8014096:	fa1f fe82 	uxth.w	lr, r2
 801409a:	f850 7023 	ldr.w	r7, [r0, r3, lsl #2]
 801409e:	f840 702e 	str.w	r7, [r0, lr, lsl #2]
 80140a2:	1887      	adds	r7, r0, r2
 80140a4:	f887 6084 	strb.w	r6, [r7, #132]	@ 0x84
 80140a8:	3201      	adds	r2, #1
 80140aa:	3301      	adds	r3, #1
 80140ac:	e7eb      	b.n	8014086 <_ZN8touchgfx11Application12TimerWidgets7compactEv+0x12>
 80140ae:	f8b0 60a6 	ldrh.w	r6, [r0, #166]	@ 0xa6
 80140b2:	4299      	cmp	r1, r3
 80140b4:	bfa8      	it	ge
 80140b6:	3501      	addge	r5, #1
 80140b8:	429e      	cmp	r6, r3
 80140ba:	bfc8      	it	gt
 80140bc:	3401      	addgt	r4, #1
 80140be:	e7f4      	b.n	80140aa <_ZN8touchgfx11Application12TimerWidgets7compactEv+0x36>
 80140c0:	f8b0 30a6 	ldrh.w	r3, [r0, #166]	@ 0xa6
 80140c4:	1b49      	subs	r1, r1, r5
 80140c6:	1b1b      	subs	r3, r3, r4
 80140c8:	f8a0 10a4 	strh.w	r1, [r0, #164]	@ 0xa4
 80140cc:	f8a0 30a6 	strh.w	r3, [r0, #166]	@ 0xa6
 80140d0:	f8b0 3080 	ldrh.w	r3, [r0, #128]	@ 0x80
 80140d4:	4293      	cmp	r3, r2
 80140d6:	dd03      	ble.n	80140e0 <_ZN8touchgfx11Application12TimerWidgets7compactEv+0x6c>
 80140d8:	3b01      	subs	r3, #1
 80140da:	f8a0 3080 	strh.w	r3, [r0, #128]	@ 0x80
 80140de:	e7f7      	b.n	80140d0 <_ZN8touchgfx11Application12TimerWidgets7compactEv+0x5c>
 80140e0:	bdf0      	pop	{r4, r5, r6, r7, pc}
	...

080140e4 <_ZN8touchgfx11Application15handleTickEventEv>:
 80140e4:	b570      	push	{r4, r5, r6, lr}
 80140e6:	4d16      	ldr	r5, [pc, #88]	@ (8014140 <_ZN8touchgfx11Application15handleTickEventEv+0x5c>)
 80140e8:	4604      	mov	r4, r0
 80140ea:	6828      	ldr	r0, [r5, #0]
 80140ec:	b140      	cbz	r0, 8014100 <_ZN8touchgfx11Application15handleTickEventEv+0x1c>
 80140ee:	7a03      	ldrb	r3, [r0, #8]
 80140f0:	b933      	cbnz	r3, 8014100 <_ZN8touchgfx11Application15handleTickEventEv+0x1c>
 80140f2:	f884 3138 	strb.w	r3, [r4, #312]	@ 0x138
 80140f6:	6803      	ldr	r3, [r0, #0]
 80140f8:	689b      	ldr	r3, [r3, #8]
 80140fa:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
 80140fe:	4718      	bx	r3
 8014100:	f894 3138 	ldrb.w	r3, [r4, #312]	@ 0x138
 8014104:	4e0f      	ldr	r6, [pc, #60]	@ (8014144 <_ZN8touchgfx11Application15handleTickEventEv+0x60>)
 8014106:	b973      	cbnz	r3, 8014126 <_ZN8touchgfx11Application15handleTickEventEv+0x42>
 8014108:	b168      	cbz	r0, 8014126 <_ZN8touchgfx11Application15handleTickEventEv+0x42>
 801410a:	7a03      	ldrb	r3, [r0, #8]
 801410c:	b15b      	cbz	r3, 8014126 <_ZN8touchgfx11Application15handleTickEventEv+0x42>
 801410e:	6830      	ldr	r0, [r6, #0]
 8014110:	b110      	cbz	r0, 8014118 <_ZN8touchgfx11Application15handleTickEventEv+0x34>
 8014112:	6803      	ldr	r3, [r0, #0]
 8014114:	691b      	ldr	r3, [r3, #16]
 8014116:	4798      	blx	r3
 8014118:	6828      	ldr	r0, [r5, #0]
 801411a:	6803      	ldr	r3, [r0, #0]
 801411c:	68db      	ldr	r3, [r3, #12]
 801411e:	4798      	blx	r3
 8014120:	2301      	movs	r3, #1
 8014122:	f884 3138 	strb.w	r3, [r4, #312]	@ 0x138
 8014126:	3404      	adds	r4, #4
 8014128:	4620      	mov	r0, r4
 801412a:	f7ff ff5f 	bl	8013fec <_ZN8touchgfx11Application12TimerWidgets10tickActiveEv>
 801412e:	4620      	mov	r0, r4
 8014130:	f7ff ffa0 	bl	8014074 <_ZN8touchgfx11Application12TimerWidgets7compactEv>
 8014134:	6830      	ldr	r0, [r6, #0]
 8014136:	b110      	cbz	r0, 801413e <_ZN8touchgfx11Application15handleTickEventEv+0x5a>
 8014138:	6803      	ldr	r3, [r0, #0]
 801413a:	6a5b      	ldr	r3, [r3, #36]	@ 0x24
 801413c:	e7dd      	b.n	80140fa <_ZN8touchgfx11Application15handleTickEventEv+0x16>
 801413e:	bd70      	pop	{r4, r5, r6, pc}
 8014140:	20002fe8 	.word	0x20002fe8
 8014144:	20002fe4 	.word	0x20002fe4

08014148 <_ZN8touchgfx6VectorINS_4RectELt8EEC1Ev>:
 8014148:	4603      	mov	r3, r0
 801414a:	f100 0140 	add.w	r1, r0, #64	@ 0x40
 801414e:	2200      	movs	r2, #0
 8014150:	801a      	strh	r2, [r3, #0]
 8014152:	805a      	strh	r2, [r3, #2]
 8014154:	809a      	strh	r2, [r3, #4]
 8014156:	80da      	strh	r2, [r3, #6]
 8014158:	3308      	adds	r3, #8
 801415a:	428b      	cmp	r3, r1
 801415c:	d1f8      	bne.n	8014150 <_ZN8touchgfx6VectorINS_4RectELt8EEC1Ev+0x8>
 801415e:	f8a0 2040 	strh.w	r2, [r0, #64]	@ 0x40
 8014162:	4770      	bx	lr

08014164 <_ZN8touchgfx11ApplicationC1Ev>:
 8014164:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 8014166:	4606      	mov	r6, r0
 8014168:	4b1c      	ldr	r3, [pc, #112]	@ (80141dc <_ZN8touchgfx11ApplicationC1Ev+0x78>)
 801416a:	f846 3b04 	str.w	r3, [r6], #4
 801416e:	4604      	mov	r4, r0
 8014170:	2500      	movs	r5, #0
 8014172:	22a8      	movs	r2, #168	@ 0xa8
 8014174:	2100      	movs	r1, #0
 8014176:	4630      	mov	r0, r6
 8014178:	f011 ff41 	bl	8025ffe <memset>
 801417c:	f8a4 5084 	strh.w	r5, [r4, #132]	@ 0x84
 8014180:	f104 00ac 	add.w	r0, r4, #172	@ 0xac
 8014184:	f7ff ffe0 	bl	8014148 <_ZN8touchgfx6VectorINS_4RectELt8EEC1Ev>
 8014188:	f104 00ee 	add.w	r0, r4, #238	@ 0xee
 801418c:	f7ff ffdc 	bl	8014148 <_ZN8touchgfx6VectorINS_4RectELt8EEC1Ev>
 8014190:	f8a4 5130 	strh.w	r5, [r4, #304]	@ 0x130
 8014194:	f8a4 5132 	strh.w	r5, [r4, #306]	@ 0x132
 8014198:	f8a4 5134 	strh.w	r5, [r4, #308]	@ 0x134
 801419c:	f8a4 5136 	strh.w	r5, [r4, #310]	@ 0x136
 80141a0:	f884 5138 	strb.w	r5, [r4, #312]	@ 0x138
 80141a4:	490e      	ldr	r1, [pc, #56]	@ (80141e0 <_ZN8touchgfx11ApplicationC1Ev+0x7c>)
 80141a6:	480f      	ldr	r0, [pc, #60]	@ (80141e4 <_ZN8touchgfx11ApplicationC1Ev+0x80>)
 80141a8:	4f0f      	ldr	r7, [pc, #60]	@ (80141e8 <_ZN8touchgfx11ApplicationC1Ev+0x84>)
 80141aa:	f011 fb49 	bl	8025840 <CRC_Lock>
 80141ae:	4b0f      	ldr	r3, [pc, #60]	@ (80141ec <_ZN8touchgfx11ApplicationC1Ev+0x88>)
 80141b0:	b158      	cbz	r0, 80141ca <_ZN8touchgfx11ApplicationC1Ev+0x66>
 80141b2:	801d      	strh	r5, [r3, #0]
 80141b4:	4a0e      	ldr	r2, [pc, #56]	@ (80141f0 <_ZN8touchgfx11ApplicationC1Ev+0x8c>)
 80141b6:	2300      	movs	r3, #0
 80141b8:	6013      	str	r3, [r2, #0]
 80141ba:	4a0e      	ldr	r2, [pc, #56]	@ (80141f4 <_ZN8touchgfx11ApplicationC1Ev+0x90>)
 80141bc:	603b      	str	r3, [r7, #0]
 80141be:	4630      	mov	r0, r6
 80141c0:	6013      	str	r3, [r2, #0]
 80141c2:	f7ff ff32 	bl	801402a <_ZN8touchgfx11Application12TimerWidgets5clearEv>
 80141c6:	4620      	mov	r0, r4
 80141c8:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
 80141ca:	f44f 6280 	mov.w	r2, #1024	@ 0x400
 80141ce:	2002      	movs	r0, #2
 80141d0:	801a      	strh	r2, [r3, #0]
 80141d2:	6038      	str	r0, [r7, #0]
 80141d4:	f001 fa52 	bl	801567c <_ZN8touchgfx6Screen4drawEv>
 80141d8:	e7ec      	b.n	80141b4 <_ZN8touchgfx11ApplicationC1Ev+0x50>
 80141da:	bf00      	nop
 80141dc:	0802943c 	.word	0x0802943c
 80141e0:	b5e8b5cd 	.word	0xb5e8b5cd
 80141e4:	f407a5c2 	.word	0xf407a5c2
 80141e8:	20002fe4 	.word	0x20002fe4
 80141ec:	2000002c 	.word	0x2000002c
 80141f0:	20002ff4 	.word	0x20002ff4
 80141f4:	20002fe8 	.word	0x20002fe8

080141f8 <_ZN8touchgfx6VectorINS_4RectELt8EE13quickRemoveAtEt>:
 80141f8:	f8b0 3040 	ldrh.w	r3, [r0, #64]	@ 0x40
 80141fc:	3b01      	subs	r3, #1
 80141fe:	b29b      	uxth	r3, r3
 8014200:	428b      	cmp	r3, r1
 8014202:	b510      	push	{r4, lr}
 8014204:	f8a0 3040 	strh.w	r3, [r0, #64]	@ 0x40
 8014208:	d908      	bls.n	801421c <_ZN8touchgfx6VectorINS_4RectELt8EE13quickRemoveAtEt+0x24>
 801420a:	eb00 03c3 	add.w	r3, r0, r3, lsl #3
 801420e:	eb00 04c1 	add.w	r4, r0, r1, lsl #3
 8014212:	681a      	ldr	r2, [r3, #0]
 8014214:	f840 2031 	str.w	r2, [r0, r1, lsl #3]
 8014218:	685a      	ldr	r2, [r3, #4]
 801421a:	6062      	str	r2, [r4, #4]
 801421c:	bd10      	pop	{r4, pc}
	...

08014220 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE>:
 8014220:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8014224:	4b8f      	ldr	r3, [pc, #572]	@ (8014464 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x244>)
 8014226:	b08f      	sub	sp, #60	@ 0x3c
 8014228:	ac0a      	add	r4, sp, #40	@ 0x28
 801422a:	e884 0006 	stmia.w	r4, {r1, r2}
 801422e:	f9b3 2000 	ldrsh.w	r2, [r3]
 8014232:	4b8d      	ldr	r3, [pc, #564]	@ (8014468 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x248>)
 8014234:	4683      	mov	fp, r0
 8014236:	f9b3 1000 	ldrsh.w	r1, [r3]
 801423a:	4620      	mov	r0, r4
 801423c:	f7ff fe14 	bl	8013e68 <_ZN8touchgfx4Rect10restrictToEss>
 8014240:	4620      	mov	r0, r4
 8014242:	f7fc fbbe 	bl	80109c2 <_ZNK8touchgfx4Rect7isEmptyEv>
 8014246:	2800      	cmp	r0, #0
 8014248:	d16a      	bne.n	8014320 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x100>
 801424a:	9403      	str	r4, [sp, #12]
 801424c:	f8bb 40ec 	ldrh.w	r4, [fp, #236]	@ 0xec
 8014250:	f10b 03ac 	add.w	r3, fp, #172	@ 0xac
 8014254:	eb0b 05c4 	add.w	r5, fp, r4, lsl #3
 8014258:	35a4      	adds	r5, #164	@ 0xa4
 801425a:	9301      	str	r3, [sp, #4]
 801425c:	b15c      	cbz	r4, 8014276 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x56>
 801425e:	4629      	mov	r1, r5
 8014260:	9803      	ldr	r0, [sp, #12]
 8014262:	f7ff fe51 	bl	8013f08 <_ZNK8touchgfx4Rect8includesERKS0_>
 8014266:	3c01      	subs	r4, #1
 8014268:	b118      	cbz	r0, 8014272 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x52>
 801426a:	b2a1      	uxth	r1, r4
 801426c:	9801      	ldr	r0, [sp, #4]
 801426e:	f7ff ffc3 	bl	80141f8 <_ZN8touchgfx6VectorINS_4RectELt8EE13quickRemoveAtEt>
 8014272:	3d08      	subs	r5, #8
 8014274:	e7f2      	b.n	801425c <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x3c>
 8014276:	f8bb a0ec 	ldrh.w	sl, [fp, #236]	@ 0xec
 801427a:	f8cd a010 	str.w	sl, [sp, #16]
 801427e:	f10a 33ff 	add.w	r3, sl, #4294967295
 8014282:	9302      	str	r3, [sp, #8]
 8014284:	ea4f 03ca 	mov.w	r3, sl, lsl #3
 8014288:	f103 04a4 	add.w	r4, r3, #164	@ 0xa4
 801428c:	9306      	str	r3, [sp, #24]
 801428e:	445c      	add	r4, fp
 8014290:	2500      	movs	r5, #0
 8014292:	4626      	mov	r6, r4
 8014294:	f8cd a014 	str.w	sl, [sp, #20]
 8014298:	462f      	mov	r7, r5
 801429a:	9b05      	ldr	r3, [sp, #20]
 801429c:	2b00      	cmp	r3, #0
 801429e:	d073      	beq.n	8014388 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x168>
 80142a0:	9903      	ldr	r1, [sp, #12]
 80142a2:	4630      	mov	r0, r6
 80142a4:	f7ff fdbe 	bl	8013e24 <_ZNK8touchgfx4Rect9intersectERKS0_>
 80142a8:	b350      	cbz	r0, 8014300 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0xe0>
 80142aa:	f9bd e028 	ldrsh.w	lr, [sp, #40]	@ 0x28
 80142ae:	f9b6 c000 	ldrsh.w	ip, [r6]
 80142b2:	f9bd 802a 	ldrsh.w	r8, [sp, #42]	@ 0x2a
 80142b6:	f9b6 9002 	ldrsh.w	r9, [r6, #2]
 80142ba:	45e6      	cmp	lr, ip
 80142bc:	db33      	blt.n	8014326 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x106>
 80142be:	f8bd 202c 	ldrh.w	r2, [sp, #44]	@ 0x2c
 80142c2:	88b3      	ldrh	r3, [r6, #4]
 80142c4:	4472      	add	r2, lr
 80142c6:	4463      	add	r3, ip
 80142c8:	b212      	sxth	r2, r2
 80142ca:	b21b      	sxth	r3, r3
 80142cc:	429a      	cmp	r2, r3
 80142ce:	dc2a      	bgt.n	8014326 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x106>
 80142d0:	88f3      	ldrh	r3, [r6, #6]
 80142d2:	f8bd 102e 	ldrh.w	r1, [sp, #46]	@ 0x2e
 80142d6:	fa1f f289 	uxth.w	r2, r9
 80142da:	4413      	add	r3, r2
 80142dc:	b29b      	uxth	r3, r3
 80142de:	45c8      	cmp	r8, r9
 80142e0:	fa1f fc88 	uxth.w	ip, r8
 80142e4:	fa0f fe83 	sxth.w	lr, r3
 80142e8:	db0f      	blt.n	801430a <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0xea>
 80142ea:	eba3 030c 	sub.w	r3, r3, ip
 80142ee:	1ac9      	subs	r1, r1, r3
 80142f0:	b209      	sxth	r1, r1
 80142f2:	2900      	cmp	r1, #0
 80142f4:	f8ad 102e 	strh.w	r1, [sp, #46]	@ 0x2e
 80142f8:	dd12      	ble.n	8014320 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x100>
 80142fa:	f8ad e02a 	strh.w	lr, [sp, #42]	@ 0x2a
 80142fe:	4605      	mov	r5, r0
 8014300:	9b05      	ldr	r3, [sp, #20]
 8014302:	3b01      	subs	r3, #1
 8014304:	9305      	str	r3, [sp, #20]
 8014306:	3e08      	subs	r6, #8
 8014308:	e7c7      	b.n	801429a <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x7a>
 801430a:	4461      	add	r1, ip
 801430c:	b209      	sxth	r1, r1
 801430e:	4571      	cmp	r1, lr
 8014310:	dc38      	bgt.n	8014384 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x164>
 8014312:	eba2 020c 	sub.w	r2, r2, ip
 8014316:	b212      	sxth	r2, r2
 8014318:	f8ad 202e 	strh.w	r2, [sp, #46]	@ 0x2e
 801431c:	2a00      	cmp	r2, #0
 801431e:	dcee      	bgt.n	80142fe <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0xde>
 8014320:	b00f      	add	sp, #60	@ 0x3c
 8014322:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 8014326:	45c8      	cmp	r8, r9
 8014328:	db2c      	blt.n	8014384 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x164>
 801432a:	88f3      	ldrh	r3, [r6, #6]
 801432c:	4499      	add	r9, r3
 801432e:	f8bd 302e 	ldrh.w	r3, [sp, #46]	@ 0x2e
 8014332:	4498      	add	r8, r3
 8014334:	fa0f f989 	sxth.w	r9, r9
 8014338:	fa0f f888 	sxth.w	r8, r8
 801433c:	45c1      	cmp	r9, r8
 801433e:	db21      	blt.n	8014384 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x164>
 8014340:	88b3      	ldrh	r3, [r6, #4]
 8014342:	f8bd 102c 	ldrh.w	r1, [sp, #44]	@ 0x2c
 8014346:	fa1f f28c 	uxth.w	r2, ip
 801434a:	4413      	add	r3, r2
 801434c:	b29b      	uxth	r3, r3
 801434e:	45e6      	cmp	lr, ip
 8014350:	fa1f f88e 	uxth.w	r8, lr
 8014354:	fa0f f983 	sxth.w	r9, r3
 8014358:	db0a      	blt.n	8014370 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x150>
 801435a:	eba3 0308 	sub.w	r3, r3, r8
 801435e:	1ac9      	subs	r1, r1, r3
 8014360:	b209      	sxth	r1, r1
 8014362:	2900      	cmp	r1, #0
 8014364:	f8ad 102c 	strh.w	r1, [sp, #44]	@ 0x2c
 8014368:	ddda      	ble.n	8014320 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x100>
 801436a:	f8ad 9028 	strh.w	r9, [sp, #40]	@ 0x28
 801436e:	e7c6      	b.n	80142fe <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0xde>
 8014370:	4441      	add	r1, r8
 8014372:	b209      	sxth	r1, r1
 8014374:	4549      	cmp	r1, r9
 8014376:	dc05      	bgt.n	8014384 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x164>
 8014378:	eba2 0208 	sub.w	r2, r2, r8
 801437c:	b212      	sxth	r2, r2
 801437e:	f8ad 202c 	strh.w	r2, [sp, #44]	@ 0x2c
 8014382:	e7cb      	b.n	801431c <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0xfc>
 8014384:	4607      	mov	r7, r0
 8014386:	e7bb      	b.n	8014300 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0xe0>
 8014388:	2d00      	cmp	r5, #0
 801438a:	d181      	bne.n	8014290 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x70>
 801438c:	2f00      	cmp	r7, #0
 801438e:	f000 81dd 	beq.w	801474c <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x52c>
 8014392:	f9bd 6028 	ldrsh.w	r6, [sp, #40]	@ 0x28
 8014396:	f9bd 702a 	ldrsh.w	r7, [sp, #42]	@ 0x2a
 801439a:	f8bd a02e 	ldrh.w	sl, [sp, #46]	@ 0x2e
 801439e:	b2b3      	uxth	r3, r6
 80143a0:	9305      	str	r3, [sp, #20]
 80143a2:	9a05      	ldr	r2, [sp, #20]
 80143a4:	f8bd 302c 	ldrh.w	r3, [sp, #44]	@ 0x2c
 80143a8:	4413      	add	r3, r2
 80143aa:	b2ba      	uxth	r2, r7
 80143ac:	4492      	add	sl, r2
 80143ae:	b29b      	uxth	r3, r3
 80143b0:	fa1f fa8a 	uxth.w	sl, sl
 80143b4:	fa0f f883 	sxth.w	r8, r3
 80143b8:	fa0f f98a 	sxth.w	r9, sl
 80143bc:	e9cd 2307 	strd	r2, r3, [sp, #28]
 80143c0:	9b04      	ldr	r3, [sp, #16]
 80143c2:	2b00      	cmp	r3, #0
 80143c4:	d052      	beq.n	801446c <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x24c>
 80143c6:	9903      	ldr	r1, [sp, #12]
 80143c8:	4620      	mov	r0, r4
 80143ca:	f7ff fd2b 	bl	8013e24 <_ZNK8touchgfx4Rect9intersectERKS0_>
 80143ce:	e9dd 2307 	ldrd	r2, r3, [sp, #28]
 80143d2:	b1c0      	cbz	r0, 8014406 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x1e6>
 80143d4:	f9b4 e000 	ldrsh.w	lr, [r4]
 80143d8:	f9b4 1002 	ldrsh.w	r1, [r4, #2]
 80143dc:	4576      	cmp	r6, lr
 80143de:	dc22      	bgt.n	8014426 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x206>
 80143e0:	f8b4 c004 	ldrh.w	ip, [r4, #4]
 80143e4:	44f4      	add	ip, lr
 80143e6:	fa0f fc8c 	sxth.w	ip, ip
 80143ea:	45e0      	cmp	r8, ip
 80143ec:	db1b      	blt.n	8014426 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x206>
 80143ee:	428f      	cmp	r7, r1
 80143f0:	fa1f fc81 	uxth.w	ip, r1
 80143f4:	88e1      	ldrh	r1, [r4, #6]
 80143f6:	dc0d      	bgt.n	8014414 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x1f4>
 80143f8:	ebaa 0c0c 	sub.w	ip, sl, ip
 80143fc:	eba1 010c 	sub.w	r1, r1, ip
 8014400:	f8a4 9002 	strh.w	r9, [r4, #2]
 8014404:	80e1      	strh	r1, [r4, #6]
 8014406:	4628      	mov	r0, r5
 8014408:	9904      	ldr	r1, [sp, #16]
 801440a:	3901      	subs	r1, #1
 801440c:	9104      	str	r1, [sp, #16]
 801440e:	3c08      	subs	r4, #8
 8014410:	4605      	mov	r5, r0
 8014412:	e7d3      	b.n	80143bc <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x19c>
 8014414:	4461      	add	r1, ip
 8014416:	b209      	sxth	r1, r1
 8014418:	4549      	cmp	r1, r9
 801441a:	dcf5      	bgt.n	8014408 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x1e8>
 801441c:	eba2 0c0c 	sub.w	ip, r2, ip
 8014420:	f8a4 c006 	strh.w	ip, [r4, #6]
 8014424:	e7ef      	b.n	8014406 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x1e6>
 8014426:	428f      	cmp	r7, r1
 8014428:	dcee      	bgt.n	8014408 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x1e8>
 801442a:	f8b4 c006 	ldrh.w	ip, [r4, #6]
 801442e:	4461      	add	r1, ip
 8014430:	b209      	sxth	r1, r1
 8014432:	4589      	cmp	r9, r1
 8014434:	dbe8      	blt.n	8014408 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x1e8>
 8014436:	4576      	cmp	r6, lr
 8014438:	fa1f fc8e 	uxth.w	ip, lr
 801443c:	88a1      	ldrh	r1, [r4, #4]
 801443e:	dc07      	bgt.n	8014450 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x230>
 8014440:	eba3 0c0c 	sub.w	ip, r3, ip
 8014444:	eba1 010c 	sub.w	r1, r1, ip
 8014448:	f8a4 8000 	strh.w	r8, [r4]
 801444c:	80a1      	strh	r1, [r4, #4]
 801444e:	e7da      	b.n	8014406 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x1e6>
 8014450:	4461      	add	r1, ip
 8014452:	b209      	sxth	r1, r1
 8014454:	4588      	cmp	r8, r1
 8014456:	dbd7      	blt.n	8014408 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x1e8>
 8014458:	9905      	ldr	r1, [sp, #20]
 801445a:	eba1 0c0c 	sub.w	ip, r1, ip
 801445e:	f8a4 c004 	strh.w	ip, [r4, #4]
 8014462:	e7d0      	b.n	8014406 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x1e6>
 8014464:	20002f9e 	.word	0x20002f9e
 8014468:	20002f9c 	.word	0x20002f9c
 801446c:	2d00      	cmp	r5, #0
 801446e:	f000 816d 	beq.w	801474c <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x52c>
 8014472:	9b06      	ldr	r3, [sp, #24]
 8014474:	445b      	add	r3, fp
 8014476:	461c      	mov	r4, r3
 8014478:	9b02      	ldr	r3, [sp, #8]
 801447a:	3301      	adds	r3, #1
 801447c:	f000 8166 	beq.w	801474c <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x52c>
 8014480:	f104 05a4 	add.w	r5, r4, #164	@ 0xa4
 8014484:	4629      	mov	r1, r5
 8014486:	9803      	ldr	r0, [sp, #12]
 8014488:	f7ff fd3e 	bl	8013f08 <_ZNK8touchgfx4Rect8includesERKS0_>
 801448c:	b120      	cbz	r0, 8014498 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x278>
 801448e:	f8bd 1008 	ldrh.w	r1, [sp, #8]
 8014492:	9801      	ldr	r0, [sp, #4]
 8014494:	f7ff feb0 	bl	80141f8 <_ZN8touchgfx6VectorINS_4RectELt8EE13quickRemoveAtEt>
 8014498:	9903      	ldr	r1, [sp, #12]
 801449a:	4628      	mov	r0, r5
 801449c:	f7ff fcc2 	bl	8013e24 <_ZNK8touchgfx4Rect9intersectERKS0_>
 80144a0:	2800      	cmp	r0, #0
 80144a2:	f000 809c 	beq.w	80145de <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x3be>
 80144a6:	f9b4 90a4 	ldrsh.w	r9, [r4, #164]	@ 0xa4
 80144aa:	f9b4 30a8 	ldrsh.w	r3, [r4, #168]	@ 0xa8
 80144ae:	f9bd 0028 	ldrsh.w	r0, [sp, #40]	@ 0x28
 80144b2:	9309      	str	r3, [sp, #36]	@ 0x24
 80144b4:	fa1f f189 	uxth.w	r1, r9
 80144b8:	eb01 0c03 	add.w	ip, r1, r3
 80144bc:	fa1f fa8c 	uxth.w	sl, ip
 80144c0:	f8bd c02c 	ldrh.w	ip, [sp, #44]	@ 0x2c
 80144c4:	f9bd e02a 	ldrsh.w	lr, [sp, #42]	@ 0x2a
 80144c8:	f9b4 20a6 	ldrsh.w	r2, [r4, #166]	@ 0xa6
 80144cc:	b283      	uxth	r3, r0
 80144ce:	eb03 050c 	add.w	r5, r3, ip
 80144d2:	b2ad      	uxth	r5, r5
 80144d4:	9505      	str	r5, [sp, #20]
 80144d6:	f9bd 5014 	ldrsh.w	r5, [sp, #20]
 80144da:	9504      	str	r5, [sp, #16]
 80144dc:	4548      	cmp	r0, r9
 80144de:	f8bb 50ec 	ldrh.w	r5, [fp, #236]	@ 0xec
 80144e2:	f340 8099 	ble.w	8014618 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x3f8>
 80144e6:	1a5b      	subs	r3, r3, r1
 80144e8:	b29b      	uxth	r3, r3
 80144ea:	4596      	cmp	lr, r2
 80144ec:	fa0f f08a 	sxth.w	r0, sl
 80144f0:	b21e      	sxth	r6, r3
 80144f2:	dd2e      	ble.n	8014552 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x332>
 80144f4:	9f02      	ldr	r7, [sp, #8]
 80144f6:	f8bd 402e 	ldrh.w	r4, [sp, #46]	@ 0x2e
 80144fa:	eb0b 08c7 	add.w	r8, fp, r7, lsl #3
 80144fe:	9f04      	ldr	r7, [sp, #16]
 8014500:	1a3f      	subs	r7, r7, r0
 8014502:	f8b8 00b2 	ldrh.w	r0, [r8, #178]	@ 0xb2
 8014506:	fa1f fe8e 	uxth.w	lr, lr
 801450a:	b292      	uxth	r2, r2
 801450c:	ebae 0102 	sub.w	r1, lr, r2
 8014510:	44a6      	add	lr, r4
 8014512:	4402      	add	r2, r0
 8014514:	b289      	uxth	r1, r1
 8014516:	fa0f fe8e 	sxth.w	lr, lr
 801451a:	b212      	sxth	r2, r2
 801451c:	b20d      	sxth	r5, r1
 801451e:	ebae 0202 	sub.w	r2, lr, r2
 8014522:	436f      	muls	r7, r5
 8014524:	4372      	muls	r2, r6
 8014526:	4297      	cmp	r7, r2
 8014528:	db09      	blt.n	801453e <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x31e>
 801452a:	f8b8 20ac 	ldrh.w	r2, [r8, #172]	@ 0xac
 801452e:	f8a8 50b2 	strh.w	r5, [r8, #178]	@ 0xb2
 8014532:	f8ad 2028 	strh.w	r2, [sp, #40]	@ 0x28
 8014536:	449c      	add	ip, r3
 8014538:	f8ad c02c 	strh.w	ip, [sp, #44]	@ 0x2c
 801453c:	e686      	b.n	801424c <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x2c>
 801453e:	4421      	add	r1, r4
 8014540:	f8b8 30ae 	ldrh.w	r3, [r8, #174]	@ 0xae
 8014544:	f8a8 60b0 	strh.w	r6, [r8, #176]	@ 0xb0
 8014548:	f8ad 102e 	strh.w	r1, [sp, #46]	@ 0x2e
 801454c:	f8ad 302a 	strh.w	r3, [sp, #42]	@ 0x2a
 8014550:	e67c      	b.n	801424c <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x2c>
 8014552:	9f04      	ldr	r7, [sp, #16]
 8014554:	42b8      	cmp	r0, r7
 8014556:	da27      	bge.n	80145a8 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x388>
 8014558:	9902      	ldr	r1, [sp, #8]
 801455a:	f8bd 502e 	ldrh.w	r5, [sp, #46]	@ 0x2e
 801455e:	eb0b 04c1 	add.w	r4, fp, r1, lsl #3
 8014562:	eb05 010e 	add.w	r1, r5, lr
 8014566:	fa1f f881 	uxth.w	r8, r1
 801456a:	f8b4 10b2 	ldrh.w	r1, [r4, #178]	@ 0xb2
 801456e:	4411      	add	r1, r2
 8014570:	eba1 0108 	sub.w	r1, r1, r8
 8014574:	b289      	uxth	r1, r1
 8014576:	fa0f f988 	sxth.w	r9, r8
 801457a:	eba2 020e 	sub.w	r2, r2, lr
 801457e:	fa0f f881 	sxth.w	r8, r1
 8014582:	1a3f      	subs	r7, r7, r0
 8014584:	4372      	muls	r2, r6
 8014586:	fb08 f707 	mul.w	r7, r8, r7
 801458a:	42ba      	cmp	r2, r7
 801458c:	dc06      	bgt.n	801459c <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x37c>
 801458e:	f8a4 90ae 	strh.w	r9, [r4, #174]	@ 0xae
 8014592:	f8a4 80b2 	strh.w	r8, [r4, #178]	@ 0xb2
 8014596:	f8b4 20ac 	ldrh.w	r2, [r4, #172]	@ 0xac
 801459a:	e7ca      	b.n	8014532 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x312>
 801459c:	f8a4 60b0 	strh.w	r6, [r4, #176]	@ 0xb0
 80145a0:	4429      	add	r1, r5
 80145a2:	f8ad 102e 	strh.w	r1, [sp, #46]	@ 0x2e
 80145a6:	e651      	b.n	801424c <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x2c>
 80145a8:	9805      	ldr	r0, [sp, #20]
 80145aa:	ebaa 0000 	sub.w	r0, sl, r0
 80145ae:	b280      	uxth	r0, r0
 80145b0:	2d06      	cmp	r5, #6
 80145b2:	fa0f fe80 	sxth.w	lr, r0
 80145b6:	d817      	bhi.n	80145e8 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x3c8>
 80145b8:	9b04      	ldr	r3, [sp, #16]
 80145ba:	f8a4 30a4 	strh.w	r3, [r4, #164]	@ 0xa4
 80145be:	1c6b      	adds	r3, r5, #1
 80145c0:	f9b4 10aa 	ldrsh.w	r1, [r4, #170]	@ 0xaa
 80145c4:	f8a4 e0a8 	strh.w	lr, [r4, #168]	@ 0xa8
 80145c8:	f8ab 30ec 	strh.w	r3, [fp, #236]	@ 0xec
 80145cc:	9b01      	ldr	r3, [sp, #4]
 80145ce:	9801      	ldr	r0, [sp, #4]
 80145d0:	eb03 03c5 	add.w	r3, r3, r5, lsl #3
 80145d4:	f820 9035 	strh.w	r9, [r0, r5, lsl #3]
 80145d8:	805a      	strh	r2, [r3, #2]
 80145da:	809e      	strh	r6, [r3, #4]
 80145dc:	80d9      	strh	r1, [r3, #6]
 80145de:	9b02      	ldr	r3, [sp, #8]
 80145e0:	3b01      	subs	r3, #1
 80145e2:	9302      	str	r3, [sp, #8]
 80145e4:	3c08      	subs	r4, #8
 80145e6:	e747      	b.n	8014478 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x258>
 80145e8:	9a02      	ldr	r2, [sp, #8]
 80145ea:	45b6      	cmp	lr, r6
 80145ec:	ea4f 02c2 	mov.w	r2, r2, lsl #3
 80145f0:	db0d      	blt.n	801460e <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x3ee>
 80145f2:	449c      	add	ip, r3
 80145f4:	fa1f fc8c 	uxth.w	ip, ip
 80145f8:	445a      	add	r2, fp
 80145fa:	f8ad c02c 	strh.w	ip, [sp, #44]	@ 0x2c
 80145fe:	448c      	add	ip, r1
 8014600:	f8ad 9028 	strh.w	r9, [sp, #40]	@ 0x28
 8014604:	f8a2 c0ac 	strh.w	ip, [r2, #172]	@ 0xac
 8014608:	f8a2 e0b0 	strh.w	lr, [r2, #176]	@ 0xb0
 801460c:	e61e      	b.n	801424c <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x2c>
 801460e:	445a      	add	r2, fp
 8014610:	4484      	add	ip, r0
 8014612:	f8a2 60b0 	strh.w	r6, [r2, #176]	@ 0xb0
 8014616:	e78f      	b.n	8014538 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x318>
 8014618:	f8bd 602e 	ldrh.w	r6, [sp, #46]	@ 0x2e
 801461c:	fa1f f18e 	uxth.w	r1, lr
 8014620:	eb01 0806 	add.w	r8, r1, r6
 8014624:	b293      	uxth	r3, r2
 8014626:	fa1f f888 	uxth.w	r8, r8
 801462a:	9306      	str	r3, [sp, #24]
 801462c:	fa0f f388 	sxth.w	r3, r8
 8014630:	9307      	str	r3, [sp, #28]
 8014632:	9f06      	ldr	r7, [sp, #24]
 8014634:	f8b4 30aa 	ldrh.w	r3, [r4, #170]	@ 0xaa
 8014638:	443b      	add	r3, r7
 801463a:	b29b      	uxth	r3, r3
 801463c:	4596      	cmp	lr, r2
 801463e:	9308      	str	r3, [sp, #32]
 8014640:	da24      	bge.n	801468c <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x46c>
 8014642:	9905      	ldr	r1, [sp, #20]
 8014644:	eba3 0308 	sub.w	r3, r3, r8
 8014648:	ebaa 0401 	sub.w	r4, sl, r1
 801464c:	b2a4      	uxth	r4, r4
 801464e:	b29b      	uxth	r3, r3
 8014650:	b225      	sxth	r5, r4
 8014652:	b219      	sxth	r1, r3
 8014654:	eba2 020e 	sub.w	r2, r2, lr
 8014658:	eba9 0000 	sub.w	r0, r9, r0
 801465c:	436a      	muls	r2, r5
 801465e:	4348      	muls	r0, r1
 8014660:	4282      	cmp	r2, r0
 8014662:	9a02      	ldr	r2, [sp, #8]
 8014664:	ea4f 02c2 	mov.w	r2, r2, lsl #3
 8014668:	445a      	add	r2, fp
 801466a:	dc06      	bgt.n	801467a <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x45a>
 801466c:	9b07      	ldr	r3, [sp, #28]
 801466e:	f8a2 10b2 	strh.w	r1, [r2, #178]	@ 0xb2
 8014672:	f8a2 30ae 	strh.w	r3, [r2, #174]	@ 0xae
 8014676:	44a4      	add	ip, r4
 8014678:	e75e      	b.n	8014538 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x318>
 801467a:	9904      	ldr	r1, [sp, #16]
 801467c:	f8a2 50b0 	strh.w	r5, [r2, #176]	@ 0xb0
 8014680:	f8a2 10ac 	strh.w	r1, [r2, #172]	@ 0xac
 8014684:	4433      	add	r3, r6
 8014686:	f8ad 302e 	strh.w	r3, [sp, #46]	@ 0x2e
 801468a:	e5df      	b.n	801424c <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x2c>
 801468c:	9f06      	ldr	r7, [sp, #24]
 801468e:	9b04      	ldr	r3, [sp, #16]
 8014690:	1bc9      	subs	r1, r1, r7
 8014692:	fa0f f78a 	sxth.w	r7, sl
 8014696:	b289      	uxth	r1, r1
 8014698:	429f      	cmp	r7, r3
 801469a:	fa0f fe81 	sxth.w	lr, r1
 801469e:	dd23      	ble.n	80146e8 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x4c8>
 80146a0:	9a05      	ldr	r2, [sp, #20]
 80146a2:	f9bd 3020 	ldrsh.w	r3, [sp, #32]
 80146a6:	9d07      	ldr	r5, [sp, #28]
 80146a8:	ebaa 0202 	sub.w	r2, sl, r2
 80146ac:	b292      	uxth	r2, r2
 80146ae:	eba5 0a03 	sub.w	sl, r5, r3
 80146b2:	b214      	sxth	r4, r2
 80146b4:	eba9 0000 	sub.w	r0, r9, r0
 80146b8:	9b02      	ldr	r3, [sp, #8]
 80146ba:	fb0e f000 	mul.w	r0, lr, r0
 80146be:	fb04 fa0a 	mul.w	sl, r4, sl
 80146c2:	00db      	lsls	r3, r3, #3
 80146c4:	4550      	cmp	r0, sl
 80146c6:	445b      	add	r3, fp
 80146c8:	db03      	blt.n	80146d2 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x4b2>
 80146ca:	f8a3 e0b2 	strh.w	lr, [r3, #178]	@ 0xb2
 80146ce:	4494      	add	ip, r2
 80146d0:	e732      	b.n	8014538 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x318>
 80146d2:	9a04      	ldr	r2, [sp, #16]
 80146d4:	f8a3 20ac 	strh.w	r2, [r3, #172]	@ 0xac
 80146d8:	f8a3 40b0 	strh.w	r4, [r3, #176]	@ 0xb0
 80146dc:	f8b3 30ae 	ldrh.w	r3, [r3, #174]	@ 0xae
 80146e0:	f8ad 302a 	strh.w	r3, [sp, #42]	@ 0x2a
 80146e4:	4431      	add	r1, r6
 80146e6:	e75c      	b.n	80145a2 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x382>
 80146e8:	9b08      	ldr	r3, [sp, #32]
 80146ea:	eba3 0308 	sub.w	r3, r3, r8
 80146ee:	b29b      	uxth	r3, r3
 80146f0:	2d06      	cmp	r5, #6
 80146f2:	b218      	sxth	r0, r3
 80146f4:	d813      	bhi.n	801471e <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x4fe>
 80146f6:	9b07      	ldr	r3, [sp, #28]
 80146f8:	f8a4 30a6 	strh.w	r3, [r4, #166]	@ 0xa6
 80146fc:	1c6b      	adds	r3, r5, #1
 80146fe:	f8a4 00aa 	strh.w	r0, [r4, #170]	@ 0xaa
 8014702:	f8ab 30ec 	strh.w	r3, [fp, #236]	@ 0xec
 8014706:	9b01      	ldr	r3, [sp, #4]
 8014708:	9901      	ldr	r1, [sp, #4]
 801470a:	eb03 03c5 	add.w	r3, r3, r5, lsl #3
 801470e:	f821 9035 	strh.w	r9, [r1, r5, lsl #3]
 8014712:	805a      	strh	r2, [r3, #2]
 8014714:	9a09      	ldr	r2, [sp, #36]	@ 0x24
 8014716:	809a      	strh	r2, [r3, #4]
 8014718:	f8a3 e006 	strh.w	lr, [r3, #6]
 801471c:	e75f      	b.n	80145de <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x3be>
 801471e:	9c02      	ldr	r4, [sp, #8]
 8014720:	4570      	cmp	r0, lr
 8014722:	ea4f 04c4 	mov.w	r4, r4, lsl #3
 8014726:	db0d      	blt.n	8014744 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x524>
 8014728:	4431      	add	r1, r6
 801472a:	9b06      	ldr	r3, [sp, #24]
 801472c:	f8ad 202a 	strh.w	r2, [sp, #42]	@ 0x2a
 8014730:	b289      	uxth	r1, r1
 8014732:	445c      	add	r4, fp
 8014734:	f8ad 102e 	strh.w	r1, [sp, #46]	@ 0x2e
 8014738:	4419      	add	r1, r3
 801473a:	f8a4 10ae 	strh.w	r1, [r4, #174]	@ 0xae
 801473e:	f8a4 00b2 	strh.w	r0, [r4, #178]	@ 0xb2
 8014742:	e583      	b.n	801424c <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x2c>
 8014744:	445c      	add	r4, fp
 8014746:	f8a4 e0b2 	strh.w	lr, [r4, #178]	@ 0xb2
 801474a:	e79b      	b.n	8014684 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x464>
 801474c:	f8bb 40ec 	ldrh.w	r4, [fp, #236]	@ 0xec
 8014750:	1e65      	subs	r5, r4, #1
 8014752:	b2ad      	uxth	r5, r5
 8014754:	eb0b 04c4 	add.w	r4, fp, r4, lsl #3
 8014758:	f64f 76ff 	movw	r6, #65535	@ 0xffff
 801475c:	42b5      	cmp	r5, r6
 801475e:	d044      	beq.n	80147ea <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x5ca>
 8014760:	f9bd 202a 	ldrsh.w	r2, [sp, #42]	@ 0x2a
 8014764:	f9b4 00a6 	ldrsh.w	r0, [r4, #166]	@ 0xa6
 8014768:	f9bd 1028 	ldrsh.w	r1, [sp, #40]	@ 0x28
 801476c:	f9b4 70a4 	ldrsh.w	r7, [r4, #164]	@ 0xa4
 8014770:	4282      	cmp	r2, r0
 8014772:	d11f      	bne.n	80147b4 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x594>
 8014774:	f9bd c02e 	ldrsh.w	ip, [sp, #46]	@ 0x2e
 8014778:	f9b4 30aa 	ldrsh.w	r3, [r4, #170]	@ 0xaa
 801477c:	459c      	cmp	ip, r3
 801477e:	d119      	bne.n	80147b4 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x594>
 8014780:	f8b4 30a8 	ldrh.w	r3, [r4, #168]	@ 0xa8
 8014784:	f8bd 202c 	ldrh.w	r2, [sp, #44]	@ 0x2c
 8014788:	19d8      	adds	r0, r3, r7
 801478a:	b200      	sxth	r0, r0
 801478c:	4288      	cmp	r0, r1
 801478e:	d109      	bne.n	80147a4 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x584>
 8014790:	f8ad 7028 	strh.w	r7, [sp, #40]	@ 0x28
 8014794:	4413      	add	r3, r2
 8014796:	f8ad 302c 	strh.w	r3, [sp, #44]	@ 0x2c
 801479a:	4629      	mov	r1, r5
 801479c:	9801      	ldr	r0, [sp, #4]
 801479e:	f7ff fd2b 	bl	80141f8 <_ZN8touchgfx6VectorINS_4RectELt8EE13quickRemoveAtEt>
 80147a2:	e003      	b.n	80147ac <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x58c>
 80147a4:	4411      	add	r1, r2
 80147a6:	b209      	sxth	r1, r1
 80147a8:	42b9      	cmp	r1, r7
 80147aa:	d0f3      	beq.n	8014794 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x574>
 80147ac:	3d01      	subs	r5, #1
 80147ae:	b2ad      	uxth	r5, r5
 80147b0:	3c08      	subs	r4, #8
 80147b2:	e7d3      	b.n	801475c <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x53c>
 80147b4:	42b9      	cmp	r1, r7
 80147b6:	d1f9      	bne.n	80147ac <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x58c>
 80147b8:	f9bd 102c 	ldrsh.w	r1, [sp, #44]	@ 0x2c
 80147bc:	f9b4 30a8 	ldrsh.w	r3, [r4, #168]	@ 0xa8
 80147c0:	4299      	cmp	r1, r3
 80147c2:	d1f3      	bne.n	80147ac <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x58c>
 80147c4:	f8b4 30aa 	ldrh.w	r3, [r4, #170]	@ 0xaa
 80147c8:	f8bd 102e 	ldrh.w	r1, [sp, #46]	@ 0x2e
 80147cc:	181f      	adds	r7, r3, r0
 80147ce:	b23f      	sxth	r7, r7
 80147d0:	42ba      	cmp	r2, r7
 80147d2:	d105      	bne.n	80147e0 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x5c0>
 80147d4:	f8ad 002a 	strh.w	r0, [sp, #42]	@ 0x2a
 80147d8:	440b      	add	r3, r1
 80147da:	f8ad 302e 	strh.w	r3, [sp, #46]	@ 0x2e
 80147de:	e7dc      	b.n	801479a <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x57a>
 80147e0:	440a      	add	r2, r1
 80147e2:	b212      	sxth	r2, r2
 80147e4:	4290      	cmp	r0, r2
 80147e6:	d1e1      	bne.n	80147ac <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x58c>
 80147e8:	e7f6      	b.n	80147d8 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x5b8>
 80147ea:	f8bb 60ec 	ldrh.w	r6, [fp, #236]	@ 0xec
 80147ee:	2e07      	cmp	r6, #7
 80147f0:	ea4f 04c6 	mov.w	r4, r6, lsl #3
 80147f4:	d812      	bhi.n	801481c <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x5fc>
 80147f6:	1c75      	adds	r5, r6, #1
 80147f8:	f8ab 50ec 	strh.w	r5, [fp, #236]	@ 0xec
 80147fc:	9d01      	ldr	r5, [sp, #4]
 80147fe:	f9bd 0028 	ldrsh.w	r0, [sp, #40]	@ 0x28
 8014802:	f9bd 102a 	ldrsh.w	r1, [sp, #42]	@ 0x2a
 8014806:	f9bd 202c 	ldrsh.w	r2, [sp, #44]	@ 0x2c
 801480a:	f9bd 302e 	ldrsh.w	r3, [sp, #46]	@ 0x2e
 801480e:	f825 0036 	strh.w	r0, [r5, r6, lsl #3]
 8014812:	442c      	add	r4, r5
 8014814:	8061      	strh	r1, [r4, #2]
 8014816:	80a2      	strh	r2, [r4, #4]
 8014818:	80e3      	strh	r3, [r4, #6]
 801481a:	e581      	b.n	8014320 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x100>
 801481c:	f10b 03ac 	add.w	r3, fp, #172	@ 0xac
 8014820:	3e01      	subs	r6, #1
 8014822:	445c      	add	r4, fp
 8014824:	f06f 4a00 	mvn.w	sl, #2147483648	@ 0x80000000
 8014828:	f04f 37ff 	mov.w	r7, #4294967295
 801482c:	2500      	movs	r5, #0
 801482e:	9305      	str	r3, [sp, #20]
 8014830:	f9b4 30a8 	ldrsh.w	r3, [r4, #168]	@ 0xa8
 8014834:	9302      	str	r3, [sp, #8]
 8014836:	1e72      	subs	r2, r6, #1
 8014838:	f9b4 30aa 	ldrsh.w	r3, [r4, #170]	@ 0xaa
 801483c:	9304      	str	r3, [sp, #16]
 801483e:	4691      	mov	r9, r2
 8014840:	f104 03a4 	add.w	r3, r4, #164	@ 0xa4
 8014844:	f1b9 3fff 	cmp.w	r9, #4294967295
 8014848:	bf14      	ite	ne
 801484a:	9905      	ldrne	r1, [sp, #20]
 801484c:	f8dd e00c 	ldreq.w	lr, [sp, #12]
 8014850:	6818      	ldr	r0, [r3, #0]
 8014852:	9207      	str	r2, [sp, #28]
 8014854:	bf18      	it	ne
 8014856:	eb01 0ec9 	addne.w	lr, r1, r9, lsl #3
 801485a:	f10d 0c30 	add.w	ip, sp, #48	@ 0x30
 801485e:	f8be 1006 	ldrh.w	r1, [lr, #6]
 8014862:	f8be 8004 	ldrh.w	r8, [lr, #4]
 8014866:	9306      	str	r3, [sp, #24]
 8014868:	fb18 f801 	smulbb	r8, r8, r1
 801486c:	6859      	ldr	r1, [r3, #4]
 801486e:	e8ac 0003 	stmia.w	ip!, {r0, r1}
 8014872:	4671      	mov	r1, lr
 8014874:	a80c      	add	r0, sp, #48	@ 0x30
 8014876:	f7ff fb6d 	bl	8013f54 <_ZN8touchgfx4Rect11expandToFitERKS0_>
 801487a:	f8bd 1036 	ldrh.w	r1, [sp, #54]	@ 0x36
 801487e:	f8bd 0034 	ldrh.w	r0, [sp, #52]	@ 0x34
 8014882:	9b04      	ldr	r3, [sp, #16]
 8014884:	9a02      	ldr	r2, [sp, #8]
 8014886:	fb10 f001 	smulbb	r0, r0, r1
 801488a:	fb02 8803 	mla	r8, r2, r3, r8
 801488e:	eba0 0108 	sub.w	r1, r0, r8
 8014892:	f04f 0c08 	mov.w	ip, #8
 8014896:	fb90 f0fc 	sdiv	r0, r0, ip
 801489a:	4288      	cmp	r0, r1
 801489c:	dc20      	bgt.n	80148e0 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x6c0>
 801489e:	4551      	cmp	r1, sl
 80148a0:	e9dd 3206 	ldrd	r3, r2, [sp, #24]
 80148a4:	da03      	bge.n	80148ae <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x68e>
 80148a6:	b1d9      	cbz	r1, 80148e0 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x6c0>
 80148a8:	468a      	mov	sl, r1
 80148aa:	464f      	mov	r7, r9
 80148ac:	4635      	mov	r5, r6
 80148ae:	f109 39ff 	add.w	r9, r9, #4294967295
 80148b2:	f119 0f02 	cmn.w	r9, #2
 80148b6:	d1c5      	bne.n	8014844 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x624>
 80148b8:	4616      	mov	r6, r2
 80148ba:	3201      	adds	r2, #1
 80148bc:	f1a4 0408 	sub.w	r4, r4, #8
 80148c0:	d1b6      	bne.n	8014830 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x610>
 80148c2:	9b01      	ldr	r3, [sp, #4]
 80148c4:	b2ac      	uxth	r4, r5
 80148c6:	00ed      	lsls	r5, r5, #3
 80148c8:	1958      	adds	r0, r3, r5
 80148ca:	1c7b      	adds	r3, r7, #1
 80148cc:	d10b      	bne.n	80148e6 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x6c6>
 80148ce:	4601      	mov	r1, r0
 80148d0:	9803      	ldr	r0, [sp, #12]
 80148d2:	f7ff fb3f 	bl	8013f54 <_ZN8touchgfx4Rect11expandToFitERKS0_>
 80148d6:	4621      	mov	r1, r4
 80148d8:	9801      	ldr	r0, [sp, #4]
 80148da:	f7ff fc8d 	bl	80141f8 <_ZN8touchgfx6VectorINS_4RectELt8EE13quickRemoveAtEt>
 80148de:	e4b5      	b.n	801424c <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x2c>
 80148e0:	464f      	mov	r7, r9
 80148e2:	4635      	mov	r5, r6
 80148e4:	e7ed      	b.n	80148c2 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x6a2>
 80148e6:	9b01      	ldr	r3, [sp, #4]
 80148e8:	00ff      	lsls	r7, r7, #3
 80148ea:	19d9      	adds	r1, r3, r7
 80148ec:	f7ff fb32 	bl	8013f54 <_ZN8touchgfx4Rect11expandToFitERKS0_>
 80148f0:	9b03      	ldr	r3, [sp, #12]
 80148f2:	cb03      	ldmia	r3!, {r0, r1}
 80148f4:	445f      	add	r7, fp
 80148f6:	445d      	add	r5, fp
 80148f8:	f8c7 00ac 	str.w	r0, [r7, #172]	@ 0xac
 80148fc:	f8c7 10b0 	str.w	r1, [r7, #176]	@ 0xb0
 8014900:	f855 0fac 	ldr.w	r0, [r5, #172]!
 8014904:	9b03      	ldr	r3, [sp, #12]
 8014906:	6869      	ldr	r1, [r5, #4]
 8014908:	c303      	stmia	r3!, {r0, r1}
 801490a:	e7e4      	b.n	80148d6 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x6b6>

0801490c <_ZN8touchgfx11Application15drawCachedAreasEv>:
 801490c:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8014910:	f500 7698 	add.w	r6, r0, #304	@ 0x130
 8014914:	b09b      	sub	sp, #108	@ 0x6c
 8014916:	4604      	mov	r4, r0
 8014918:	4630      	mov	r0, r6
 801491a:	f7fc f852 	bl	80109c2 <_ZNK8touchgfx4Rect7isEmptyEv>
 801491e:	4605      	mov	r5, r0
 8014920:	b948      	cbnz	r0, 8014936 <_ZN8touchgfx11Application15drawCachedAreasEv+0x2a>
 8014922:	6823      	ldr	r3, [r4, #0]
 8014924:	e896 0006 	ldmia.w	r6, {r1, r2}
 8014928:	6c1b      	ldr	r3, [r3, #64]	@ 0x40
 801492a:	4620      	mov	r0, r4
 801492c:	4798      	blx	r3
 801492e:	f8c4 5130 	str.w	r5, [r4, #304]	@ 0x130
 8014932:	f8c4 5134 	str.w	r5, [r4, #308]	@ 0x134
 8014936:	4bc6      	ldr	r3, [pc, #792]	@ (8014c50 <_ZN8touchgfx11Application15drawCachedAreasEv+0x344>)
 8014938:	681b      	ldr	r3, [r3, #0]
 801493a:	2b00      	cmp	r3, #0
 801493c:	d03f      	beq.n	80149be <_ZN8touchgfx11Application15drawCachedAreasEv+0xb2>
 801493e:	4dc5      	ldr	r5, [pc, #788]	@ (8014c54 <_ZN8touchgfx11Application15drawCachedAreasEv+0x348>)
 8014940:	4628      	mov	r0, r5
 8014942:	f7fc f83e 	bl	80109c2 <_ZNK8touchgfx4Rect7isEmptyEv>
 8014946:	4606      	mov	r6, r0
 8014948:	2800      	cmp	r0, #0
 801494a:	d138      	bne.n	80149be <_ZN8touchgfx11Application15drawCachedAreasEv+0xb2>
 801494c:	4628      	mov	r0, r5
 801494e:	f7ff f99f 	bl	8013c90 <_ZN8touchgfx21DisplayTransformation29transformFrameBufferToDisplayERNS_4RectE>
 8014952:	6823      	ldr	r3, [r4, #0]
 8014954:	6829      	ldr	r1, [r5, #0]
 8014956:	6c1b      	ldr	r3, [r3, #64]	@ 0x40
 8014958:	686a      	ldr	r2, [r5, #4]
 801495a:	4620      	mov	r0, r4
 801495c:	4798      	blx	r3
 801495e:	802e      	strh	r6, [r5, #0]
 8014960:	806e      	strh	r6, [r5, #2]
 8014962:	80ae      	strh	r6, [r5, #4]
 8014964:	80ee      	strh	r6, [r5, #6]
 8014966:	f10d 0824 	add.w	r8, sp, #36	@ 0x24
 801496a:	4dbb      	ldr	r5, [pc, #748]	@ (8014c58 <_ZN8touchgfx11Application15drawCachedAreasEv+0x34c>)
 801496c:	4640      	mov	r0, r8
 801496e:	f7ff fbeb 	bl	8014148 <_ZN8touchgfx6VectorINS_4RectELt8EEC1Ev>
 8014972:	882e      	ldrh	r6, [r5, #0]
 8014974:	f8b4 70ec 	ldrh.w	r7, [r4, #236]	@ 0xec
 8014978:	4633      	mov	r3, r6
 801497a:	f104 00ac 	add.w	r0, r4, #172	@ 0xac
 801497e:	42bb      	cmp	r3, r7
 8014980:	d224      	bcs.n	80149cc <_ZN8touchgfx11Application15drawCachedAreasEv+0xc0>
 8014982:	f8bd 1064 	ldrh.w	r1, [sp, #100]	@ 0x64
 8014986:	2907      	cmp	r1, #7
 8014988:	d816      	bhi.n	80149b8 <_ZN8touchgfx11Application15drawCachedAreasEv+0xac>
 801498a:	eb00 02c3 	add.w	r2, r0, r3, lsl #3
 801498e:	f930 9033 	ldrsh.w	r9, [r0, r3, lsl #3]
 8014992:	f9b2 a002 	ldrsh.w	sl, [r2, #2]
 8014996:	f9b2 e004 	ldrsh.w	lr, [r2, #4]
 801499a:	f9b2 c006 	ldrsh.w	ip, [r2, #6]
 801499e:	1c4a      	adds	r2, r1, #1
 80149a0:	f8ad 2064 	strh.w	r2, [sp, #100]	@ 0x64
 80149a4:	eb08 02c1 	add.w	r2, r8, r1, lsl #3
 80149a8:	f828 9031 	strh.w	r9, [r8, r1, lsl #3]
 80149ac:	f8a2 a002 	strh.w	sl, [r2, #2]
 80149b0:	f8a2 e004 	strh.w	lr, [r2, #4]
 80149b4:	f8a2 c006 	strh.w	ip, [r2, #6]
 80149b8:	3301      	adds	r3, #1
 80149ba:	b29b      	uxth	r3, r3
 80149bc:	e7df      	b.n	801497e <_ZN8touchgfx11Application15drawCachedAreasEv+0x72>
 80149be:	f8b4 30ec 	ldrh.w	r3, [r4, #236]	@ 0xec
 80149c2:	2b00      	cmp	r3, #0
 80149c4:	d1cf      	bne.n	8014966 <_ZN8touchgfx11Application15drawCachedAreasEv+0x5a>
 80149c6:	b01b      	add	sp, #108	@ 0x6c
 80149c8:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 80149cc:	f8b4 312e 	ldrh.w	r3, [r4, #302]	@ 0x12e
 80149d0:	42b3      	cmp	r3, r6
 80149d2:	d90c      	bls.n	80149ee <_ZN8touchgfx11Application15drawCachedAreasEv+0xe2>
 80149d4:	eb04 03c6 	add.w	r3, r4, r6, lsl #3
 80149d8:	6822      	ldr	r2, [r4, #0]
 80149da:	f8d3 10ee 	ldr.w	r1, [r3, #238]	@ 0xee
 80149de:	6c17      	ldr	r7, [r2, #64]	@ 0x40
 80149e0:	f8d3 20f2 	ldr.w	r2, [r3, #242]	@ 0xf2
 80149e4:	4620      	mov	r0, r4
 80149e6:	3601      	adds	r6, #1
 80149e8:	47b8      	blx	r7
 80149ea:	b2b6      	uxth	r6, r6
 80149ec:	e7ee      	b.n	80149cc <_ZN8touchgfx11Application15drawCachedAreasEv+0xc0>
 80149ee:	4a9b      	ldr	r2, [pc, #620]	@ (8014c5c <_ZN8touchgfx11Application15drawCachedAreasEv+0x350>)
 80149f0:	6813      	ldr	r3, [r2, #0]
 80149f2:	f893 3048 	ldrb.w	r3, [r3, #72]	@ 0x48
 80149f6:	2b01      	cmp	r3, #1
 80149f8:	4691      	mov	r9, r2
 80149fa:	f040 80e2 	bne.w	8014bc2 <_ZN8touchgfx11Application15drawCachedAreasEv+0x2b6>
 80149fe:	8829      	ldrh	r1, [r5, #0]
 8014a00:	f8b4 70ec 	ldrh.w	r7, [r4, #236]	@ 0xec
 8014a04:	eb04 03c1 	add.w	r3, r4, r1, lsl #3
 8014a08:	33ae      	adds	r3, #174	@ 0xae
 8014a0a:	2600      	movs	r6, #0
 8014a0c:	428f      	cmp	r7, r1
 8014a0e:	f103 0308 	add.w	r3, r3, #8
 8014a12:	dd0a      	ble.n	8014a2a <_ZN8touchgfx11Application15drawCachedAreasEv+0x11e>
 8014a14:	f833 2c04 	ldrh.w	r2, [r3, #-4]
 8014a18:	f833 0c08 	ldrh.w	r0, [r3, #-8]
 8014a1c:	4402      	add	r2, r0
 8014a1e:	b212      	sxth	r2, r2
 8014a20:	4296      	cmp	r6, r2
 8014a22:	bfb8      	it	lt
 8014a24:	4616      	movlt	r6, r2
 8014a26:	3101      	adds	r1, #1
 8014a28:	e7f0      	b.n	8014a0c <_ZN8touchgfx11Application15drawCachedAreasEv+0x100>
 8014a2a:	4b8d      	ldr	r3, [pc, #564]	@ (8014c60 <_ZN8touchgfx11Application15drawCachedAreasEv+0x354>)
 8014a2c:	f8df 922c 	ldr.w	r9, [pc, #556]	@ 8014c5c <_ZN8touchgfx11Application15drawCachedAreasEv+0x350>
 8014a30:	881b      	ldrh	r3, [r3, #0]
 8014a32:	2b0f      	cmp	r3, #15
 8014a34:	bf88      	it	hi
 8014a36:	ea4f 0bd3 	movhi.w	fp, r3, lsr #3
 8014a3a:	f04f 0300 	mov.w	r3, #0
 8014a3e:	e9cd 3305 	strd	r3, r3, [sp, #20]
 8014a42:	bf98      	it	ls
 8014a44:	f04f 0b01 	movls.w	fp, #1
 8014a48:	f8bd 7016 	ldrh.w	r7, [sp, #22]
 8014a4c:	f8bd 001a 	ldrh.w	r0, [sp, #26]
 8014a50:	4b82      	ldr	r3, [pc, #520]	@ (8014c5c <_ZN8touchgfx11Application15drawCachedAreasEv+0x350>)
 8014a52:	4438      	add	r0, r7
 8014a54:	b207      	sxth	r7, r0
 8014a56:	6818      	ldr	r0, [r3, #0]
 8014a58:	42b7      	cmp	r7, r6
 8014a5a:	6803      	ldr	r3, [r0, #0]
 8014a5c:	f280 8083 	bge.w	8014b66 <_ZN8touchgfx11Application15drawCachedAreasEv+0x25a>
 8014a60:	f8d3 309c 	ldr.w	r3, [r3, #156]	@ 0x9c
 8014a64:	4798      	blx	r3
 8014a66:	eb07 030b 	add.w	r3, r7, fp
 8014a6a:	4298      	cmp	r0, r3
 8014a6c:	da07      	bge.n	8014a7e <_ZN8touchgfx11Application15drawCachedAreasEv+0x172>
 8014a6e:	42b0      	cmp	r0, r6
 8014a70:	da05      	bge.n	8014a7e <_ZN8touchgfx11Application15drawCachedAreasEv+0x172>
 8014a72:	4287      	cmp	r7, r0
 8014a74:	dd6c      	ble.n	8014b50 <_ZN8touchgfx11Application15drawCachedAreasEv+0x244>
 8014a76:	2f00      	cmp	r7, #0
 8014a78:	dd6a      	ble.n	8014b50 <_ZN8touchgfx11Application15drawCachedAreasEv+0x244>
 8014a7a:	4630      	mov	r0, r6
 8014a7c:	e004      	b.n	8014a88 <_ZN8touchgfx11Application15drawCachedAreasEv+0x17c>
 8014a7e:	4287      	cmp	r7, r0
 8014a80:	dcfb      	bgt.n	8014a7a <_ZN8touchgfx11Application15drawCachedAreasEv+0x16e>
 8014a82:	42b0      	cmp	r0, r6
 8014a84:	bfa8      	it	ge
 8014a86:	4630      	movge	r0, r6
 8014a88:	4b76      	ldr	r3, [pc, #472]	@ (8014c64 <_ZN8touchgfx11Application15drawCachedAreasEv+0x358>)
 8014a8a:	f8ad 7016 	strh.w	r7, [sp, #22]
 8014a8e:	1bc0      	subs	r0, r0, r7
 8014a90:	f9b3 3000 	ldrsh.w	r3, [r3]
 8014a94:	882f      	ldrh	r7, [r5, #0]
 8014a96:	f8ad 3018 	strh.w	r3, [sp, #24]
 8014a9a:	2200      	movs	r2, #0
 8014a9c:	f8ad 2014 	strh.w	r2, [sp, #20]
 8014aa0:	f8ad 001a 	strh.w	r0, [sp, #26]
 8014aa4:	f8b4 30ec 	ldrh.w	r3, [r4, #236]	@ 0xec
 8014aa8:	42bb      	cmp	r3, r7
 8014aaa:	d9cd      	bls.n	8014a48 <_ZN8touchgfx11Application15drawCachedAreasEv+0x13c>
 8014aac:	eb04 02c7 	add.w	r2, r4, r7, lsl #3
 8014ab0:	ab07      	add	r3, sp, #28
 8014ab2:	f852 0fac 	ldr.w	r0, [r2, #172]!
 8014ab6:	6851      	ldr	r1, [r2, #4]
 8014ab8:	c303      	stmia	r3!, {r0, r1}
 8014aba:	a905      	add	r1, sp, #20
 8014abc:	a807      	add	r0, sp, #28
 8014abe:	f7ff f9b1 	bl	8013e24 <_ZNK8touchgfx4Rect9intersectERKS0_>
 8014ac2:	2800      	cmp	r0, #0
 8014ac4:	d04c      	beq.n	8014b60 <_ZN8touchgfx11Application15drawCachedAreasEv+0x254>
 8014ac6:	f9bd 001c 	ldrsh.w	r0, [sp, #28]
 8014aca:	f9bd 2014 	ldrsh.w	r2, [sp, #20]
 8014ace:	f8bd a020 	ldrh.w	sl, [sp, #32]
 8014ad2:	f9bd 101e 	ldrsh.w	r1, [sp, #30]
 8014ad6:	f9bd 3016 	ldrsh.w	r3, [sp, #22]
 8014ada:	9302      	str	r3, [sp, #8]
 8014adc:	4686      	mov	lr, r0
 8014ade:	4290      	cmp	r0, r2
 8014ae0:	4450      	add	r0, sl
 8014ae2:	f8bd a018 	ldrh.w	sl, [sp, #24]
 8014ae6:	bfb8      	it	lt
 8014ae8:	4696      	movlt	lr, r2
 8014aea:	4452      	add	r2, sl
 8014aec:	4299      	cmp	r1, r3
 8014aee:	b280      	uxth	r0, r0
 8014af0:	b292      	uxth	r2, r2
 8014af2:	468c      	mov	ip, r1
 8014af4:	fa0f fa82 	sxth.w	sl, r2
 8014af8:	bfb8      	it	lt
 8014afa:	469c      	movlt	ip, r3
 8014afc:	b203      	sxth	r3, r0
 8014afe:	4553      	cmp	r3, sl
 8014b00:	bfb8      	it	lt
 8014b02:	4602      	movlt	r2, r0
 8014b04:	eba2 020e 	sub.w	r2, r2, lr
 8014b08:	f8ad 2020 	strh.w	r2, [sp, #32]
 8014b0c:	f8bd 2022 	ldrh.w	r2, [sp, #34]	@ 0x22
 8014b10:	9b02      	ldr	r3, [sp, #8]
 8014b12:	f8ad e01c 	strh.w	lr, [sp, #28]
 8014b16:	4411      	add	r1, r2
 8014b18:	f8bd 201a 	ldrh.w	r2, [sp, #26]
 8014b1c:	f8ad c01e 	strh.w	ip, [sp, #30]
 8014b20:	4413      	add	r3, r2
 8014b22:	b289      	uxth	r1, r1
 8014b24:	b29b      	uxth	r3, r3
 8014b26:	b208      	sxth	r0, r1
 8014b28:	b21a      	sxth	r2, r3
 8014b2a:	4290      	cmp	r0, r2
 8014b2c:	bfb8      	it	lt
 8014b2e:	460b      	movlt	r3, r1
 8014b30:	eba3 030c 	sub.w	r3, r3, ip
 8014b34:	f8ad 3022 	strh.w	r3, [sp, #34]	@ 0x22
 8014b38:	a807      	add	r0, sp, #28
 8014b3a:	f7fb ff42 	bl	80109c2 <_ZNK8touchgfx4Rect7isEmptyEv>
 8014b3e:	b920      	cbnz	r0, 8014b4a <_ZN8touchgfx11Application15drawCachedAreasEv+0x23e>
 8014b40:	6823      	ldr	r3, [r4, #0]
 8014b42:	a907      	add	r1, sp, #28
 8014b44:	6c9b      	ldr	r3, [r3, #72]	@ 0x48
 8014b46:	4620      	mov	r0, r4
 8014b48:	4798      	blx	r3
 8014b4a:	3701      	adds	r7, #1
 8014b4c:	b2bf      	uxth	r7, r7
 8014b4e:	e7a9      	b.n	8014aa4 <_ZN8touchgfx11Application15drawCachedAreasEv+0x198>
 8014b50:	f8d9 0000 	ldr.w	r0, [r9]
 8014b54:	6803      	ldr	r3, [r0, #0]
 8014b56:	2101      	movs	r1, #1
 8014b58:	f8d3 3098 	ldr.w	r3, [r3, #152]	@ 0x98
 8014b5c:	4798      	blx	r3
 8014b5e:	e773      	b.n	8014a48 <_ZN8touchgfx11Application15drawCachedAreasEv+0x13c>
 8014b60:	e9cd 0007 	strd	r0, r0, [sp, #28]
 8014b64:	e7e8      	b.n	8014b38 <_ZN8touchgfx11Application15drawCachedAreasEv+0x22c>
 8014b66:	6a5b      	ldr	r3, [r3, #36]	@ 0x24
 8014b68:	4798      	blx	r3
 8014b6a:	4b3f      	ldr	r3, [pc, #252]	@ (8014c68 <_ZN8touchgfx11Application15drawCachedAreasEv+0x35c>)
 8014b6c:	781b      	ldrb	r3, [r3, #0]
 8014b6e:	2b00      	cmp	r3, #0
 8014b70:	f43f af29 	beq.w	80149c6 <_ZN8touchgfx11Application15drawCachedAreasEv+0xba>
 8014b74:	2300      	movs	r3, #0
 8014b76:	f8a4 312e 	strh.w	r3, [r4, #302]	@ 0x12e
 8014b7a:	882b      	ldrh	r3, [r5, #0]
 8014b7c:	f8bd 5064 	ldrh.w	r5, [sp, #100]	@ 0x64
 8014b80:	f104 00ee 	add.w	r0, r4, #238	@ 0xee
 8014b84:	42ab      	cmp	r3, r5
 8014b86:	f4bf af1e 	bcs.w	80149c6 <_ZN8touchgfx11Application15drawCachedAreasEv+0xba>
 8014b8a:	f8b4 112e 	ldrh.w	r1, [r4, #302]	@ 0x12e
 8014b8e:	2907      	cmp	r1, #7
 8014b90:	d814      	bhi.n	8014bbc <_ZN8touchgfx11Application15drawCachedAreasEv+0x2b0>
 8014b92:	eb08 02c3 	add.w	r2, r8, r3, lsl #3
 8014b96:	f938 e033 	ldrsh.w	lr, [r8, r3, lsl #3]
 8014b9a:	f9b2 c002 	ldrsh.w	ip, [r2, #2]
 8014b9e:	f9b2 7004 	ldrsh.w	r7, [r2, #4]
 8014ba2:	f9b2 6006 	ldrsh.w	r6, [r2, #6]
 8014ba6:	1c4a      	adds	r2, r1, #1
 8014ba8:	f8a4 212e 	strh.w	r2, [r4, #302]	@ 0x12e
 8014bac:	eb00 02c1 	add.w	r2, r0, r1, lsl #3
 8014bb0:	f820 e031 	strh.w	lr, [r0, r1, lsl #3]
 8014bb4:	f8a2 c002 	strh.w	ip, [r2, #2]
 8014bb8:	8097      	strh	r7, [r2, #4]
 8014bba:	80d6      	strh	r6, [r2, #6]
 8014bbc:	3301      	adds	r3, #1
 8014bbe:	b29b      	uxth	r3, r3
 8014bc0:	e7e0      	b.n	8014b84 <_ZN8touchgfx11Application15drawCachedAreasEv+0x278>
 8014bc2:	2b02      	cmp	r3, #2
 8014bc4:	f040 8133 	bne.w	8014e2e <_ZN8touchgfx11Application15drawCachedAreasEv+0x522>
 8014bc8:	4b28      	ldr	r3, [pc, #160]	@ (8014c6c <_ZN8touchgfx11Application15drawCachedAreasEv+0x360>)
 8014bca:	781b      	ldrb	r3, [r3, #0]
 8014bcc:	2b01      	cmp	r3, #1
 8014bce:	f104 0aac 	add.w	sl, r4, #172	@ 0xac
 8014bd2:	f000 8098 	beq.w	8014d06 <_ZN8touchgfx11Application15drawCachedAreasEv+0x3fa>
 8014bd6:	882a      	ldrh	r2, [r5, #0]
 8014bd8:	f8b4 10ec 	ldrh.w	r1, [r4, #236]	@ 0xec
 8014bdc:	3201      	adds	r2, #1
 8014bde:	b292      	uxth	r2, r2
 8014be0:	2900      	cmp	r1, #0
 8014be2:	d0c2      	beq.n	8014b6a <_ZN8touchgfx11Application15drawCachedAreasEv+0x25e>
 8014be4:	f8b4 60ae 	ldrh.w	r6, [r4, #174]	@ 0xae
 8014be8:	f8b4 30b2 	ldrh.w	r3, [r4, #178]	@ 0xb2
 8014bec:	441e      	add	r6, r3
 8014bee:	b236      	sxth	r6, r6
 8014bf0:	4694      	mov	ip, r2
 8014bf2:	f04f 0900 	mov.w	r9, #0
 8014bf6:	fa1f f38c 	uxth.w	r3, ip
 8014bfa:	4299      	cmp	r1, r3
 8014bfc:	ea4f 07c9 	mov.w	r7, r9, lsl #3
 8014c00:	f240 80bf 	bls.w	8014d82 <_ZN8touchgfx11Application15drawCachedAreasEv+0x476>
 8014c04:	4427      	add	r7, r4
 8014c06:	eb04 0ecc 	add.w	lr, r4, ip, lsl #3
 8014c0a:	f9b7 30ae 	ldrsh.w	r3, [r7, #174]	@ 0xae
 8014c0e:	f9be 00ae 	ldrsh.w	r0, [lr, #174]	@ 0xae
 8014c12:	4283      	cmp	r3, r0
 8014c14:	f340 80a1 	ble.w	8014d5a <_ZN8touchgfx11Application15drawCachedAreasEv+0x44e>
 8014c18:	f8be 60b2 	ldrh.w	r6, [lr, #178]	@ 0xb2
 8014c1c:	4406      	add	r6, r0
 8014c1e:	b236      	sxth	r6, r6
 8014c20:	429e      	cmp	r6, r3
 8014c22:	bfa8      	it	ge
 8014c24:	461e      	movge	r6, r3
 8014c26:	46e1      	mov	r9, ip
 8014c28:	f10c 0c01 	add.w	ip, ip, #1
 8014c2c:	e7e3      	b.n	8014bf6 <_ZN8touchgfx11Application15drawCachedAreasEv+0x2ea>
 8014c2e:	d10a      	bne.n	8014c46 <_ZN8touchgfx11Application15drawCachedAreasEv+0x33a>
 8014c30:	f9b6 00b2 	ldrsh.w	r0, [r6, #178]	@ 0xb2
 8014c34:	f9be 10b2 	ldrsh.w	r1, [lr, #178]	@ 0xb2
 8014c38:	4562      	cmp	r2, ip
 8014c3a:	bfb8      	it	lt
 8014c3c:	4662      	movlt	r2, ip
 8014c3e:	4288      	cmp	r0, r1
 8014c40:	bfb8      	it	lt
 8014c42:	461f      	movlt	r7, r3
 8014c44:	e087      	b.n	8014d56 <_ZN8touchgfx11Application15drawCachedAreasEv+0x44a>
 8014c46:	428a      	cmp	r2, r1
 8014c48:	bfb8      	it	lt
 8014c4a:	460a      	movlt	r2, r1
 8014c4c:	e083      	b.n	8014d56 <_ZN8touchgfx11Application15drawCachedAreasEv+0x44a>
 8014c4e:	bf00      	nop
 8014c50:	20002fe0 	.word	0x20002fe0
 8014c54:	20002fec 	.word	0x20002fec
 8014c58:	2000002c 	.word	0x2000002c
 8014c5c:	20002fa8 	.word	0x20002fa8
 8014c60:	20002f9e 	.word	0x20002f9e
 8014c64:	20002f9c 	.word	0x20002f9c
 8014c68:	20002fa6 	.word	0x20002fa6
 8014c6c:	20002fa0 	.word	0x20002fa0
 8014c70:	19a1      	adds	r1, r4, r6
 8014c72:	ab07      	add	r3, sp, #28
 8014c74:	f851 0fac 	ldr.w	r0, [r1, #172]!
 8014c78:	6849      	ldr	r1, [r1, #4]
 8014c7a:	c303      	stmia	r3!, {r0, r1}
 8014c7c:	f9bd 3020 	ldrsh.w	r3, [sp, #32]
 8014c80:	f8bd 101c 	ldrh.w	r1, [sp, #28]
 8014c84:	2b13      	cmp	r3, #19
 8014c86:	bfd8      	it	le
 8014c88:	f9bd 201c 	ldrshle.w	r2, [sp, #28]
 8014c8c:	f8ad 201c 	strh.w	r2, [sp, #28]
 8014c90:	440b      	add	r3, r1
 8014c92:	1a9b      	subs	r3, r3, r2
 8014c94:	a807      	add	r0, sp, #28
 8014c96:	f8ad 3020 	strh.w	r3, [sp, #32]
 8014c9a:	f7ff f813 	bl	8013cc4 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectE>
 8014c9e:	a807      	add	r0, sp, #28
 8014ca0:	f7fb fe8f 	bl	80109c2 <_ZNK8touchgfx4Rect7isEmptyEv>
 8014ca4:	bb78      	cbnz	r0, 8014d06 <_ZN8touchgfx11Application15drawCachedAreasEv+0x3fa>
 8014ca6:	f9bd c022 	ldrsh.w	ip, [sp, #34]	@ 0x22
 8014caa:	f8d9 0000 	ldr.w	r0, [r9]
 8014cae:	f8bd 3020 	ldrh.w	r3, [sp, #32]
 8014cb2:	f8d0 e000 	ldr.w	lr, [r0]
 8014cb6:	f8bd 201e 	ldrh.w	r2, [sp, #30]
 8014cba:	f8bd 101c 	ldrh.w	r1, [sp, #28]
 8014cbe:	f1bc 0f14 	cmp.w	ip, #20
 8014cc2:	bfa8      	it	ge
 8014cc4:	f04f 0c14 	movge.w	ip, #20
 8014cc8:	fa1f fc8c 	uxth.w	ip, ip
 8014ccc:	f8cd c000 	str.w	ip, [sp]
 8014cd0:	f8de b090 	ldr.w	fp, [lr, #144]	@ 0x90
 8014cd4:	47d8      	blx	fp
 8014cd6:	4683      	mov	fp, r0
 8014cd8:	f8ad 0022 	strh.w	r0, [sp, #34]	@ 0x22
 8014cdc:	a807      	add	r0, sp, #28
 8014cde:	f7fe ffd7 	bl	8013c90 <_ZN8touchgfx21DisplayTransformation29transformFrameBufferToDisplayERNS_4RectE>
 8014ce2:	6823      	ldr	r3, [r4, #0]
 8014ce4:	4426      	add	r6, r4
 8014ce6:	4620      	mov	r0, r4
 8014ce8:	6c9b      	ldr	r3, [r3, #72]	@ 0x48
 8014cea:	a907      	add	r1, sp, #28
 8014cec:	4798      	blx	r3
 8014cee:	f8b6 00b0 	ldrh.w	r0, [r6, #176]	@ 0xb0
 8014cf2:	eba0 000b 	sub.w	r0, r0, fp
 8014cf6:	b200      	sxth	r0, r0
 8014cf8:	f8a6 00b0 	strh.w	r0, [r6, #176]	@ 0xb0
 8014cfc:	b918      	cbnz	r0, 8014d06 <_ZN8touchgfx11Application15drawCachedAreasEv+0x3fa>
 8014cfe:	b2b9      	uxth	r1, r7
 8014d00:	4650      	mov	r0, sl
 8014d02:	f7ff fa79 	bl	80141f8 <_ZN8touchgfx6VectorINS_4RectELt8EE13quickRemoveAtEt>
 8014d06:	f8b4 b0ec 	ldrh.w	fp, [r4, #236]	@ 0xec
 8014d0a:	f1bb 0f00 	cmp.w	fp, #0
 8014d0e:	f43f af2c 	beq.w	8014b6a <_ZN8touchgfx11Application15drawCachedAreasEv+0x25e>
 8014d12:	882b      	ldrh	r3, [r5, #0]
 8014d14:	f9b4 20ac 	ldrsh.w	r2, [r4, #172]	@ 0xac
 8014d18:	3301      	adds	r3, #1
 8014d1a:	b29b      	uxth	r3, r3
 8014d1c:	2700      	movs	r7, #0
 8014d1e:	b299      	uxth	r1, r3
 8014d20:	458b      	cmp	fp, r1
 8014d22:	ea4f 06c7 	mov.w	r6, r7, lsl #3
 8014d26:	d9a3      	bls.n	8014c70 <_ZN8touchgfx11Application15drawCachedAreasEv+0x364>
 8014d28:	4426      	add	r6, r4
 8014d2a:	eb04 0ec3 	add.w	lr, r4, r3, lsl #3
 8014d2e:	f8b6 10ac 	ldrh.w	r1, [r6, #172]	@ 0xac
 8014d32:	f8b6 00b0 	ldrh.w	r0, [r6, #176]	@ 0xb0
 8014d36:	f9be c0ac 	ldrsh.w	ip, [lr, #172]	@ 0xac
 8014d3a:	4408      	add	r0, r1
 8014d3c:	f8be 10b0 	ldrh.w	r1, [lr, #176]	@ 0xb0
 8014d40:	4461      	add	r1, ip
 8014d42:	b200      	sxth	r0, r0
 8014d44:	b209      	sxth	r1, r1
 8014d46:	4288      	cmp	r0, r1
 8014d48:	f6bf af71 	bge.w	8014c2e <_ZN8touchgfx11Application15drawCachedAreasEv+0x322>
 8014d4c:	4584      	cmp	ip, r0
 8014d4e:	4662      	mov	r2, ip
 8014d50:	461f      	mov	r7, r3
 8014d52:	bfb8      	it	lt
 8014d54:	4602      	movlt	r2, r0
 8014d56:	3301      	adds	r3, #1
 8014d58:	e7e1      	b.n	8014d1e <_ZN8touchgfx11Application15drawCachedAreasEv+0x412>
 8014d5a:	d10e      	bne.n	8014d7a <_ZN8touchgfx11Application15drawCachedAreasEv+0x46e>
 8014d5c:	f9be 00b0 	ldrsh.w	r0, [lr, #176]	@ 0xb0
 8014d60:	f8be e0b2 	ldrh.w	lr, [lr, #178]	@ 0xb2
 8014d64:	f9b7 70b0 	ldrsh.w	r7, [r7, #176]	@ 0xb0
 8014d68:	4473      	add	r3, lr
 8014d6a:	b21b      	sxth	r3, r3
 8014d6c:	429e      	cmp	r6, r3
 8014d6e:	bfa8      	it	ge
 8014d70:	461e      	movge	r6, r3
 8014d72:	4287      	cmp	r7, r0
 8014d74:	bfb8      	it	lt
 8014d76:	46e1      	movlt	r9, ip
 8014d78:	e756      	b.n	8014c28 <_ZN8touchgfx11Application15drawCachedAreasEv+0x31c>
 8014d7a:	4286      	cmp	r6, r0
 8014d7c:	bfa8      	it	ge
 8014d7e:	4606      	movge	r6, r0
 8014d80:	e752      	b.n	8014c28 <_ZN8touchgfx11Application15drawCachedAreasEv+0x31c>
 8014d82:	eb0a 0007 	add.w	r0, sl, r7
 8014d86:	4427      	add	r7, r4
 8014d88:	e9cd 2102 	strd	r2, r1, [sp, #8]
 8014d8c:	f9b7 b0b2 	ldrsh.w	fp, [r7, #178]	@ 0xb2
 8014d90:	f1bb 0f13 	cmp.w	fp, #19
 8014d94:	bfde      	ittt	le
 8014d96:	f8b7 60ae 	ldrhle.w	r6, [r7, #174]	@ 0xae
 8014d9a:	445e      	addle	r6, fp
 8014d9c:	b236      	sxthle	r6, r6
 8014d9e:	f7fb fe10 	bl	80109c2 <_ZNK8touchgfx4Rect7isEmptyEv>
 8014da2:	e9dd 2102 	ldrd	r2, r1, [sp, #8]
 8014da6:	2800      	cmp	r0, #0
 8014da8:	f47f af1a 	bne.w	8014be0 <_ZN8touchgfx11Application15drawCachedAreasEv+0x2d4>
 8014dac:	f9b7 20ae 	ldrsh.w	r2, [r7, #174]	@ 0xae
 8014db0:	f8ad 0022 	strh.w	r0, [sp, #34]	@ 0x22
 8014db4:	482a      	ldr	r0, [pc, #168]	@ (8014e60 <_ZN8touchgfx11Application15drawCachedAreasEv+0x554>)
 8014db6:	f9b7 10ac 	ldrsh.w	r1, [r7, #172]	@ 0xac
 8014dba:	f9b7 30b0 	ldrsh.w	r3, [r7, #176]	@ 0xb0
 8014dbe:	6800      	ldr	r0, [r0, #0]
 8014dc0:	f8ad 101c 	strh.w	r1, [sp, #28]
 8014dc4:	1ab6      	subs	r6, r6, r2
 8014dc6:	2e14      	cmp	r6, #20
 8014dc8:	f8ad 201e 	strh.w	r2, [sp, #30]
 8014dcc:	f8ad 3020 	strh.w	r3, [sp, #32]
 8014dd0:	bfa8      	it	ge
 8014dd2:	2614      	movge	r6, #20
 8014dd4:	f8d0 c000 	ldr.w	ip, [r0]
 8014dd8:	b2b6      	uxth	r6, r6
 8014dda:	fa1f fb8b 	uxth.w	fp, fp
 8014dde:	455e      	cmp	r6, fp
 8014de0:	bf94      	ite	ls
 8014de2:	9600      	strls	r6, [sp, #0]
 8014de4:	f8cd b000 	strhi.w	fp, [sp]
 8014de8:	b292      	uxth	r2, r2
 8014dea:	f8dc 6090 	ldr.w	r6, [ip, #144]	@ 0x90
 8014dee:	b29b      	uxth	r3, r3
 8014df0:	b289      	uxth	r1, r1
 8014df2:	47b0      	blx	r6
 8014df4:	6823      	ldr	r3, [r4, #0]
 8014df6:	f8ad 0022 	strh.w	r0, [sp, #34]	@ 0x22
 8014dfa:	6c9b      	ldr	r3, [r3, #72]	@ 0x48
 8014dfc:	a907      	add	r1, sp, #28
 8014dfe:	4620      	mov	r0, r4
 8014e00:	4798      	blx	r3
 8014e02:	f8bd 1022 	ldrh.w	r1, [sp, #34]	@ 0x22
 8014e06:	f8b7 30b2 	ldrh.w	r3, [r7, #178]	@ 0xb2
 8014e0a:	f8b7 20ae 	ldrh.w	r2, [r7, #174]	@ 0xae
 8014e0e:	1a5b      	subs	r3, r3, r1
 8014e10:	440a      	add	r2, r1
 8014e12:	b21b      	sxth	r3, r3
 8014e14:	f8a7 20ae 	strh.w	r2, [r7, #174]	@ 0xae
 8014e18:	f8a7 30b2 	strh.w	r3, [r7, #178]	@ 0xb2
 8014e1c:	2b00      	cmp	r3, #0
 8014e1e:	f47f aeda 	bne.w	8014bd6 <_ZN8touchgfx11Application15drawCachedAreasEv+0x2ca>
 8014e22:	fa1f f189 	uxth.w	r1, r9
 8014e26:	4650      	mov	r0, sl
 8014e28:	f7ff f9e6 	bl	80141f8 <_ZN8touchgfx6VectorINS_4RectELt8EE13quickRemoveAtEt>
 8014e2c:	e6d3      	b.n	8014bd6 <_ZN8touchgfx11Application15drawCachedAreasEv+0x2ca>
 8014e2e:	882e      	ldrh	r6, [r5, #0]
 8014e30:	f8b4 30ec 	ldrh.w	r3, [r4, #236]	@ 0xec
 8014e34:	42b3      	cmp	r3, r6
 8014e36:	f67f ae98 	bls.w	8014b6a <_ZN8touchgfx11Application15drawCachedAreasEv+0x25e>
 8014e3a:	eb04 02c6 	add.w	r2, r4, r6, lsl #3
 8014e3e:	ab07      	add	r3, sp, #28
 8014e40:	f852 0fac 	ldr.w	r0, [r2, #172]!
 8014e44:	6851      	ldr	r1, [r2, #4]
 8014e46:	c303      	stmia	r3!, {r0, r1}
 8014e48:	a807      	add	r0, sp, #28
 8014e4a:	f7fb fdba 	bl	80109c2 <_ZNK8touchgfx4Rect7isEmptyEv>
 8014e4e:	b920      	cbnz	r0, 8014e5a <_ZN8touchgfx11Application15drawCachedAreasEv+0x54e>
 8014e50:	6823      	ldr	r3, [r4, #0]
 8014e52:	a907      	add	r1, sp, #28
 8014e54:	6c9b      	ldr	r3, [r3, #72]	@ 0x48
 8014e56:	4620      	mov	r0, r4
 8014e58:	4798      	blx	r3
 8014e5a:	3601      	adds	r6, #1
 8014e5c:	b2b6      	uxth	r6, r6
 8014e5e:	e7e7      	b.n	8014e30 <_ZN8touchgfx11Application15drawCachedAreasEv+0x524>
 8014e60:	20002fa8 	.word	0x20002fa8

08014e64 <_GLOBAL__sub_I__ZN8touchgfx11Application8instanceE>:
 8014e64:	4b03      	ldr	r3, [pc, #12]	@ (8014e74 <_GLOBAL__sub_I__ZN8touchgfx11Application8instanceE+0x10>)
 8014e66:	2200      	movs	r2, #0
 8014e68:	801a      	strh	r2, [r3, #0]
 8014e6a:	805a      	strh	r2, [r3, #2]
 8014e6c:	809a      	strh	r2, [r3, #4]
 8014e6e:	80da      	strh	r2, [r3, #6]
 8014e70:	4770      	bx	lr
 8014e72:	bf00      	nop
 8014e74:	20002fec 	.word	0x20002fec

08014e78 <_ZNK8touchgfx4Font17getStringWidthLTREhPKtSt9__va_list>:
 8014e78:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8014e7c:	4606      	mov	r6, r0
 8014e7e:	b09d      	sub	sp, #116	@ 0x74
 8014e80:	a803      	add	r0, sp, #12
 8014e82:	4614      	mov	r4, r2
 8014e84:	468a      	mov	sl, r1
 8014e86:	461d      	mov	r5, r3
 8014e88:	f000 fd72 	bl	8015970 <_ZN8touchgfx12TextProviderC1Ev>
 8014e8c:	6833      	ldr	r3, [r6, #0]
 8014e8e:	4630      	mov	r0, r6
 8014e90:	6cdb      	ldr	r3, [r3, #76]	@ 0x4c
 8014e92:	4798      	blx	r3
 8014e94:	6833      	ldr	r3, [r6, #0]
 8014e96:	4607      	mov	r7, r0
 8014e98:	6d1b      	ldr	r3, [r3, #80]	@ 0x50
 8014e9a:	4630      	mov	r0, r6
 8014e9c:	4798      	blx	r3
 8014e9e:	462a      	mov	r2, r5
 8014ea0:	9000      	str	r0, [sp, #0]
 8014ea2:	4621      	mov	r1, r4
 8014ea4:	463b      	mov	r3, r7
 8014ea6:	a803      	add	r0, sp, #12
 8014ea8:	f000 fdbd 	bl	8015a26 <_ZN8touchgfx12TextProvider10initializeEPKtSt9__va_listS2_PKNS_24FontContextualFormsTableE>
 8014eac:	2500      	movs	r5, #0
 8014eae:	462c      	mov	r4, r5
 8014eb0:	46a9      	mov	r9, r5
 8014eb2:	46a8      	mov	r8, r5
 8014eb4:	f242 0b0b 	movw	fp, #8203	@ 0x200b
 8014eb8:	2300      	movs	r3, #0
 8014eba:	9302      	str	r3, [sp, #8]
 8014ebc:	f64f 63ff 	movw	r3, #65279	@ 0xfeff
 8014ec0:	429c      	cmp	r4, r3
 8014ec2:	d002      	beq.n	8014eca <_ZNK8touchgfx4Font17getStringWidthLTREhPKtSt9__va_list+0x52>
 8014ec4:	455c      	cmp	r4, fp
 8014ec6:	bf18      	it	ne
 8014ec8:	4625      	movne	r5, r4
 8014eca:	ab02      	add	r3, sp, #8
 8014ecc:	4632      	mov	r2, r6
 8014ece:	4651      	mov	r1, sl
 8014ed0:	a803      	add	r0, sp, #12
 8014ed2:	f001 f8d5 	bl	8016080 <_ZN8touchgfx12TextProvider15getNextLigatureEhPKNS_4FontERPKNS_9GlyphNodeE>
 8014ed6:	4604      	mov	r4, r0
 8014ed8:	b108      	cbz	r0, 8014ede <_ZNK8touchgfx4Font17getStringWidthLTREhPKtSt9__va_list+0x66>
 8014eda:	280a      	cmp	r0, #10
 8014edc:	d10a      	bne.n	8014ef4 <_ZNK8touchgfx4Font17getStringWidthLTREhPKtSt9__va_list+0x7c>
 8014ede:	45c1      	cmp	r9, r8
 8014ee0:	bf38      	it	cc
 8014ee2:	46c1      	movcc	r9, r8
 8014ee4:	f04f 0800 	mov.w	r8, #0
 8014ee8:	2c00      	cmp	r4, #0
 8014eea:	d1e5      	bne.n	8014eb8 <_ZNK8touchgfx4Font17getStringWidthLTREhPKtSt9__va_list+0x40>
 8014eec:	4648      	mov	r0, r9
 8014eee:	b01d      	add	sp, #116	@ 0x74
 8014ef0:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 8014ef4:	9a02      	ldr	r2, [sp, #8]
 8014ef6:	2a00      	cmp	r2, #0
 8014ef8:	d0de      	beq.n	8014eb8 <_ZNK8touchgfx4Font17getStringWidthLTREhPKtSt9__va_list+0x40>
 8014efa:	7b57      	ldrb	r7, [r2, #13]
 8014efc:	6833      	ldr	r3, [r6, #0]
 8014efe:	8894      	ldrh	r4, [r2, #4]
 8014f00:	6c5b      	ldr	r3, [r3, #68]	@ 0x44
 8014f02:	007f      	lsls	r7, r7, #1
 8014f04:	f407 7080 	and.w	r0, r7, #256	@ 0x100
 8014f08:	7a97      	ldrb	r7, [r2, #10]
 8014f0a:	4629      	mov	r1, r5
 8014f0c:	4307      	orrs	r7, r0
 8014f0e:	4630      	mov	r0, r6
 8014f10:	4798      	blx	r3
 8014f12:	4438      	add	r0, r7
 8014f14:	4480      	add	r8, r0
 8014f16:	fa1f f888 	uxth.w	r8, r8
 8014f1a:	e7e5      	b.n	8014ee8 <_ZNK8touchgfx4Font17getStringWidthLTREhPKtSt9__va_list+0x70>

08014f1c <_ZNK8touchgfx4Font12getCharWidthEt>:
 8014f1c:	b508      	push	{r3, lr}
 8014f1e:	6803      	ldr	r3, [r0, #0]
 8014f20:	68db      	ldr	r3, [r3, #12]
 8014f22:	4798      	blx	r3
 8014f24:	b128      	cbz	r0, 8014f32 <_ZNK8touchgfx4Font12getCharWidthEt+0x16>
 8014f26:	7b43      	ldrb	r3, [r0, #13]
 8014f28:	7a80      	ldrb	r0, [r0, #10]
 8014f2a:	005b      	lsls	r3, r3, #1
 8014f2c:	f403 7380 	and.w	r3, r3, #256	@ 0x100
 8014f30:	4318      	orrs	r0, r3
 8014f32:	bd08      	pop	{r3, pc}

08014f34 <_ZNK8touchgfx4Font16getMaxTextHeightEPKtz>:
 8014f34:	b40e      	push	{r1, r2, r3}
 8014f36:	b5f0      	push	{r4, r5, r6, r7, lr}
 8014f38:	b09e      	sub	sp, #120	@ 0x78
 8014f3a:	ab23      	add	r3, sp, #140	@ 0x8c
 8014f3c:	4605      	mov	r5, r0
 8014f3e:	f853 4b04 	ldr.w	r4, [r3], #4
 8014f42:	9303      	str	r3, [sp, #12]
 8014f44:	a805      	add	r0, sp, #20
 8014f46:	f000 fd13 	bl	8015970 <_ZN8touchgfx12TextProviderC1Ev>
 8014f4a:	682b      	ldr	r3, [r5, #0]
 8014f4c:	4628      	mov	r0, r5
 8014f4e:	6cdb      	ldr	r3, [r3, #76]	@ 0x4c
 8014f50:	4798      	blx	r3
 8014f52:	682b      	ldr	r3, [r5, #0]
 8014f54:	4606      	mov	r6, r0
 8014f56:	6d1b      	ldr	r3, [r3, #80]	@ 0x50
 8014f58:	4628      	mov	r0, r5
 8014f5a:	4798      	blx	r3
 8014f5c:	4633      	mov	r3, r6
 8014f5e:	ae1e      	add	r6, sp, #120	@ 0x78
 8014f60:	4621      	mov	r1, r4
 8014f62:	9000      	str	r0, [sp, #0]
 8014f64:	9a03      	ldr	r2, [sp, #12]
 8014f66:	2400      	movs	r4, #0
 8014f68:	a805      	add	r0, sp, #20
 8014f6a:	f000 fd5c 	bl	8015a26 <_ZN8touchgfx12TextProvider10initializeEPKtSt9__va_listS2_PKNS_24FontContextualFormsTableE>
 8014f6e:	f846 4d68 	str.w	r4, [r6, #-104]!
 8014f72:	462a      	mov	r2, r5
 8014f74:	4633      	mov	r3, r6
 8014f76:	4621      	mov	r1, r4
 8014f78:	a805      	add	r0, sp, #20
 8014f7a:	f001 f881 	bl	8016080 <_ZN8touchgfx12TextProvider15getNextLigatureEhPKNS_4FontERPKNS_9GlyphNodeE>
 8014f7e:	b1f0      	cbz	r0, 8014fbe <_ZNK8touchgfx4Font16getMaxTextHeightEPKtz+0x8a>
 8014f80:	280a      	cmp	r0, #10
 8014f82:	d018      	beq.n	8014fb6 <_ZNK8touchgfx4Font16getMaxTextHeightEPKtz+0x82>
 8014f84:	9f04      	ldr	r7, [sp, #16]
 8014f86:	b1b7      	cbz	r7, 8014fb6 <_ZNK8touchgfx4Font16getMaxTextHeightEPKtz+0x82>
 8014f88:	7b78      	ldrb	r0, [r7, #13]
 8014f8a:	7a3b      	ldrb	r3, [r7, #8]
 8014f8c:	88ea      	ldrh	r2, [r5, #6]
 8014f8e:	00c1      	lsls	r1, r0, #3
 8014f90:	f401 7180 	and.w	r1, r1, #256	@ 0x100
 8014f94:	4319      	orrs	r1, r3
 8014f96:	0643      	lsls	r3, r0, #25
 8014f98:	bf44      	itt	mi
 8014f9a:	f5a1 7300 	submi.w	r3, r1, #512	@ 0x200
 8014f9e:	b219      	sxthmi	r1, r3
 8014fa0:	0100      	lsls	r0, r0, #4
 8014fa2:	79fb      	ldrb	r3, [r7, #7]
 8014fa4:	f400 7080 	and.w	r0, r0, #256	@ 0x100
 8014fa8:	4303      	orrs	r3, r0
 8014faa:	4413      	add	r3, r2
 8014fac:	1a5b      	subs	r3, r3, r1
 8014fae:	b21b      	sxth	r3, r3
 8014fb0:	429c      	cmp	r4, r3
 8014fb2:	bfb8      	it	lt
 8014fb4:	461c      	movlt	r4, r3
 8014fb6:	4633      	mov	r3, r6
 8014fb8:	462a      	mov	r2, r5
 8014fba:	2100      	movs	r1, #0
 8014fbc:	e7dc      	b.n	8014f78 <_ZNK8touchgfx4Font16getMaxTextHeightEPKtz+0x44>
 8014fbe:	b2a0      	uxth	r0, r4
 8014fc0:	b01e      	add	sp, #120	@ 0x78
 8014fc2:	e8bd 40f0 	ldmia.w	sp!, {r4, r5, r6, r7, lr}
 8014fc6:	b003      	add	sp, #12
 8014fc8:	4770      	bx	lr

08014fca <_ZNK8touchgfx4Font20getMinimumTextHeightEv>:
 8014fca:	7a43      	ldrb	r3, [r0, #9]
 8014fcc:	8880      	ldrh	r0, [r0, #4]
 8014fce:	4418      	add	r0, r3
 8014fd0:	b280      	uxth	r0, r0
 8014fd2:	4770      	bx	lr

08014fd4 <_ZNK8touchgfx4Font13getFontHeightEv>:
 8014fd4:	6803      	ldr	r3, [r0, #0]
 8014fd6:	6b1b      	ldr	r3, [r3, #48]	@ 0x30
 8014fd8:	4718      	bx	r3

08014fda <_ZNK8touchgfx4Font16getNumberOfLinesEPKtz>:
 8014fda:	b40e      	push	{r1, r2, r3}
 8014fdc:	b570      	push	{r4, r5, r6, lr}
 8014fde:	b09d      	sub	sp, #116	@ 0x74
 8014fe0:	ab21      	add	r3, sp, #132	@ 0x84
 8014fe2:	4604      	mov	r4, r0
 8014fe4:	f853 5b04 	ldr.w	r5, [r3], #4
 8014fe8:	9302      	str	r3, [sp, #8]
 8014fea:	a803      	add	r0, sp, #12
 8014fec:	f000 fcc0 	bl	8015970 <_ZN8touchgfx12TextProviderC1Ev>
 8014ff0:	6823      	ldr	r3, [r4, #0]
 8014ff2:	4620      	mov	r0, r4
 8014ff4:	6cdb      	ldr	r3, [r3, #76]	@ 0x4c
 8014ff6:	4798      	blx	r3
 8014ff8:	6823      	ldr	r3, [r4, #0]
 8014ffa:	4606      	mov	r6, r0
 8014ffc:	6d1b      	ldr	r3, [r3, #80]	@ 0x50
 8014ffe:	4620      	mov	r0, r4
 8015000:	4798      	blx	r3
 8015002:	4633      	mov	r3, r6
 8015004:	9000      	str	r0, [sp, #0]
 8015006:	9a02      	ldr	r2, [sp, #8]
 8015008:	4629      	mov	r1, r5
 801500a:	a803      	add	r0, sp, #12
 801500c:	f000 fd0b 	bl	8015a26 <_ZN8touchgfx12TextProvider10initializeEPKtSt9__va_listS2_PKNS_24FontContextualFormsTableE>
 8015010:	a803      	add	r0, sp, #12
 8015012:	f001 f903 	bl	801621c <_ZN8touchgfx12TextProvider11getNextCharEv>
 8015016:	2401      	movs	r4, #1
 8015018:	b2a3      	uxth	r3, r4
 801501a:	b140      	cbz	r0, 801502e <_ZNK8touchgfx4Font16getNumberOfLinesEPKtz+0x54>
 801501c:	280a      	cmp	r0, #10
 801501e:	bf08      	it	eq
 8015020:	3301      	addeq	r3, #1
 8015022:	a803      	add	r0, sp, #12
 8015024:	bf08      	it	eq
 8015026:	b21c      	sxtheq	r4, r3
 8015028:	f001 f8f8 	bl	801621c <_ZN8touchgfx12TextProvider11getNextCharEv>
 801502c:	e7f4      	b.n	8015018 <_ZNK8touchgfx4Font16getNumberOfLinesEPKtz+0x3e>
 801502e:	4618      	mov	r0, r3
 8015030:	b01d      	add	sp, #116	@ 0x74
 8015032:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
 8015036:	b003      	add	sp, #12
 8015038:	4770      	bx	lr

0801503a <_ZNK8touchgfx4Font15getSpacingAboveEPKtz>:
 801503a:	b40e      	push	{r1, r2, r3}
 801503c:	b5f0      	push	{r4, r5, r6, r7, lr}
 801503e:	b09e      	sub	sp, #120	@ 0x78
 8015040:	ab23      	add	r3, sp, #140	@ 0x8c
 8015042:	4604      	mov	r4, r0
 8015044:	f853 5b04 	ldr.w	r5, [r3], #4
 8015048:	9303      	str	r3, [sp, #12]
 801504a:	a805      	add	r0, sp, #20
 801504c:	f000 fc90 	bl	8015970 <_ZN8touchgfx12TextProviderC1Ev>
 8015050:	6823      	ldr	r3, [r4, #0]
 8015052:	4620      	mov	r0, r4
 8015054:	6cdb      	ldr	r3, [r3, #76]	@ 0x4c
 8015056:	4798      	blx	r3
 8015058:	6823      	ldr	r3, [r4, #0]
 801505a:	4606      	mov	r6, r0
 801505c:	6d1b      	ldr	r3, [r3, #80]	@ 0x50
 801505e:	4620      	mov	r0, r4
 8015060:	4798      	blx	r3
 8015062:	4633      	mov	r3, r6
 8015064:	4629      	mov	r1, r5
 8015066:	9000      	str	r0, [sp, #0]
 8015068:	9a03      	ldr	r2, [sp, #12]
 801506a:	a805      	add	r0, sp, #20
 801506c:	ad1e      	add	r5, sp, #120	@ 0x78
 801506e:	f000 fcda 	bl	8015a26 <_ZN8touchgfx12TextProvider10initializeEPKtSt9__va_listS2_PKNS_24FontContextualFormsTableE>
 8015072:	2100      	movs	r1, #0
 8015074:	f845 1d68 	str.w	r1, [r5, #-104]!
 8015078:	4622      	mov	r2, r4
 801507a:	462b      	mov	r3, r5
 801507c:	a805      	add	r0, sp, #20
 801507e:	f000 ffff 	bl	8016080 <_ZN8touchgfx12TextProvider15getNextLigatureEhPKNS_4FontERPKNS_9GlyphNodeE>
 8015082:	f647 76ff 	movw	r6, #32767	@ 0x7fff
 8015086:	b1d8      	cbz	r0, 80150c0 <_ZNK8touchgfx4Font15getSpacingAboveEPKtz+0x86>
 8015088:	280a      	cmp	r0, #10
 801508a:	d012      	beq.n	80150b2 <_ZNK8touchgfx4Font15getSpacingAboveEPKtz+0x78>
 801508c:	9804      	ldr	r0, [sp, #16]
 801508e:	b180      	cbz	r0, 80150b2 <_ZNK8touchgfx4Font15getSpacingAboveEPKtz+0x78>
 8015090:	7b47      	ldrb	r7, [r0, #13]
 8015092:	88e2      	ldrh	r2, [r4, #6]
 8015094:	00fb      	lsls	r3, r7, #3
 8015096:	f403 7180 	and.w	r1, r3, #256	@ 0x100
 801509a:	7a03      	ldrb	r3, [r0, #8]
 801509c:	430b      	orrs	r3, r1
 801509e:	0679      	lsls	r1, r7, #25
 80150a0:	bf44      	itt	mi
 80150a2:	f5a3 7300 	submi.w	r3, r3, #512	@ 0x200
 80150a6:	b21b      	sxthmi	r3, r3
 80150a8:	1ad3      	subs	r3, r2, r3
 80150aa:	b21b      	sxth	r3, r3
 80150ac:	429e      	cmp	r6, r3
 80150ae:	bfa8      	it	ge
 80150b0:	461e      	movge	r6, r3
 80150b2:	462b      	mov	r3, r5
 80150b4:	4622      	mov	r2, r4
 80150b6:	2100      	movs	r1, #0
 80150b8:	a805      	add	r0, sp, #20
 80150ba:	f000 ffe1 	bl	8016080 <_ZN8touchgfx12TextProvider15getNextLigatureEhPKNS_4FontERPKNS_9GlyphNodeE>
 80150be:	e7e2      	b.n	8015086 <_ZNK8touchgfx4Font15getSpacingAboveEPKtz+0x4c>
 80150c0:	4630      	mov	r0, r6
 80150c2:	b01e      	add	sp, #120	@ 0x78
 80150c4:	e8bd 40f0 	ldmia.w	sp!, {r4, r5, r6, r7, lr}
 80150c8:	b003      	add	sp, #12
 80150ca:	4770      	bx	lr

080150cc <_ZNK8touchgfx8Drawable10invalidateEv>:
 80150cc:	b513      	push	{r0, r1, r4, lr}
 80150ce:	6803      	ldr	r3, [r0, #0]
 80150d0:	f9b0 1008 	ldrsh.w	r1, [r0, #8]
 80150d4:	f9b0 200a 	ldrsh.w	r2, [r0, #10]
 80150d8:	f8ad 1004 	strh.w	r1, [sp, #4]
 80150dc:	2400      	movs	r4, #0
 80150de:	9400      	str	r4, [sp, #0]
 80150e0:	f8ad 2006 	strh.w	r2, [sp, #6]
 80150e4:	691b      	ldr	r3, [r3, #16]
 80150e6:	4669      	mov	r1, sp
 80150e8:	4798      	blx	r3
 80150ea:	b002      	add	sp, #8
 80150ec:	bd10      	pop	{r4, pc}

080150ee <_ZN8touchgfx8Drawable20getSolidRectAbsoluteEv>:
 80150ee:	b538      	push	{r3, r4, r5, lr}
 80150f0:	680b      	ldr	r3, [r1, #0]
 80150f2:	460c      	mov	r4, r1
 80150f4:	68db      	ldr	r3, [r3, #12]
 80150f6:	4605      	mov	r5, r0
 80150f8:	4798      	blx	r3
 80150fa:	6823      	ldr	r3, [r4, #0]
 80150fc:	4620      	mov	r0, r4
 80150fe:	6adb      	ldr	r3, [r3, #44]	@ 0x2c
 8015100:	4629      	mov	r1, r5
 8015102:	4798      	blx	r3
 8015104:	4628      	mov	r0, r5
 8015106:	bd38      	pop	{r3, r4, r5, pc}

08015108 <_ZNK8touchgfx8Drawable23translateRectToAbsoluteERNS_4RectE>:
 8015108:	b410      	push	{r4}
 801510a:	880a      	ldrh	r2, [r1, #0]
 801510c:	8884      	ldrh	r4, [r0, #4]
 801510e:	4422      	add	r2, r4
 8015110:	800a      	strh	r2, [r1, #0]
 8015112:	88c4      	ldrh	r4, [r0, #6]
 8015114:	884a      	ldrh	r2, [r1, #2]
 8015116:	4422      	add	r2, r4
 8015118:	804a      	strh	r2, [r1, #2]
 801511a:	6940      	ldr	r0, [r0, #20]
 801511c:	b120      	cbz	r0, 8015128 <_ZNK8touchgfx8Drawable23translateRectToAbsoluteERNS_4RectE+0x20>
 801511e:	6803      	ldr	r3, [r0, #0]
 8015120:	f85d 4b04 	ldr.w	r4, [sp], #4
 8015124:	6adb      	ldr	r3, [r3, #44]	@ 0x2c
 8015126:	4718      	bx	r3
 8015128:	f85d 4b04 	ldr.w	r4, [sp], #4
 801512c:	4770      	bx	lr

0801512e <_ZNK8touchgfx8Drawable14getVisibleRectERNS_4RectE>:
 801512e:	b570      	push	{r4, r5, r6, lr}
 8015130:	8882      	ldrh	r2, [r0, #4]
 8015132:	880b      	ldrh	r3, [r1, #0]
 8015134:	4413      	add	r3, r2
 8015136:	800b      	strh	r3, [r1, #0]
 8015138:	88c2      	ldrh	r2, [r0, #6]
 801513a:	884b      	ldrh	r3, [r1, #2]
 801513c:	460c      	mov	r4, r1
 801513e:	4413      	add	r3, r2
 8015140:	804b      	strh	r3, [r1, #2]
 8015142:	4605      	mov	r5, r0
 8015144:	1d01      	adds	r1, r0, #4
 8015146:	4620      	mov	r0, r4
 8015148:	f7fb fbf8 	bl	801093c <_ZN8touchgfx4RectaNERKS0_>
 801514c:	f9b4 3004 	ldrsh.w	r3, [r4, #4]
 8015150:	2b00      	cmp	r3, #0
 8015152:	dd0b      	ble.n	801516c <_ZNK8touchgfx8Drawable14getVisibleRectERNS_4RectE+0x3e>
 8015154:	f9b4 3006 	ldrsh.w	r3, [r4, #6]
 8015158:	2b00      	cmp	r3, #0
 801515a:	dd07      	ble.n	801516c <_ZNK8touchgfx8Drawable14getVisibleRectERNS_4RectE+0x3e>
 801515c:	6968      	ldr	r0, [r5, #20]
 801515e:	b128      	cbz	r0, 801516c <_ZNK8touchgfx8Drawable14getVisibleRectERNS_4RectE+0x3e>
 8015160:	6803      	ldr	r3, [r0, #0]
 8015162:	4621      	mov	r1, r4
 8015164:	6a9b      	ldr	r3, [r3, #40]	@ 0x28
 8015166:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
 801516a:	4718      	bx	r3
 801516c:	bd70      	pop	{r4, r5, r6, pc}
	...

08015170 <_ZNK8touchgfx8Drawable14invalidateRectERNS_4RectE>:
 8015170:	b570      	push	{r4, r5, r6, lr}
 8015172:	8882      	ldrh	r2, [r0, #4]
 8015174:	880b      	ldrh	r3, [r1, #0]
 8015176:	4413      	add	r3, r2
 8015178:	800b      	strh	r3, [r1, #0]
 801517a:	88c2      	ldrh	r2, [r0, #6]
 801517c:	884b      	ldrh	r3, [r1, #2]
 801517e:	460c      	mov	r4, r1
 8015180:	4413      	add	r3, r2
 8015182:	804b      	strh	r3, [r1, #2]
 8015184:	4605      	mov	r5, r0
 8015186:	1d01      	adds	r1, r0, #4
 8015188:	4620      	mov	r0, r4
 801518a:	f7fb fbd7 	bl	801093c <_ZN8touchgfx4RectaNERKS0_>
 801518e:	f9b4 3004 	ldrsh.w	r3, [r4, #4]
 8015192:	2b00      	cmp	r3, #0
 8015194:	dd19      	ble.n	80151ca <_ZNK8touchgfx8Drawable14invalidateRectERNS_4RectE+0x5a>
 8015196:	f9b4 3006 	ldrsh.w	r3, [r4, #6]
 801519a:	2b00      	cmp	r3, #0
 801519c:	dd15      	ble.n	80151ca <_ZNK8touchgfx8Drawable14invalidateRectERNS_4RectE+0x5a>
 801519e:	6968      	ldr	r0, [r5, #20]
 80151a0:	b128      	cbz	r0, 80151ae <_ZNK8touchgfx8Drawable14invalidateRectERNS_4RectE+0x3e>
 80151a2:	6803      	ldr	r3, [r0, #0]
 80151a4:	4621      	mov	r1, r4
 80151a6:	691b      	ldr	r3, [r3, #16]
 80151a8:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
 80151ac:	4718      	bx	r3
 80151ae:	4b07      	ldr	r3, [pc, #28]	@ (80151cc <_ZNK8touchgfx8Drawable14invalidateRectERNS_4RectE+0x5c>)
 80151b0:	681b      	ldr	r3, [r3, #0]
 80151b2:	3304      	adds	r3, #4
 80151b4:	429d      	cmp	r5, r3
 80151b6:	d108      	bne.n	80151ca <_ZNK8touchgfx8Drawable14invalidateRectERNS_4RectE+0x5a>
 80151b8:	f7fe ff12 	bl	8013fe0 <_ZN8touchgfx11Application11getInstanceEv>
 80151bc:	6803      	ldr	r3, [r0, #0]
 80151be:	6821      	ldr	r1, [r4, #0]
 80151c0:	6862      	ldr	r2, [r4, #4]
 80151c2:	6c1b      	ldr	r3, [r3, #64]	@ 0x40
 80151c4:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
 80151c8:	4718      	bx	r3
 80151ca:	bd70      	pop	{r4, r5, r6, pc}
 80151cc:	20002fe4 	.word	0x20002fe4

080151d0 <_ZN8touchgfx8Drawable12moveRelativeEss>:
 80151d0:	b570      	push	{r4, r5, r6, lr}
 80151d2:	4604      	mov	r4, r0
 80151d4:	4616      	mov	r6, r2
 80151d6:	460d      	mov	r5, r1
 80151d8:	b901      	cbnz	r1, 80151dc <_ZN8touchgfx8Drawable12moveRelativeEss+0xc>
 80151da:	b192      	cbz	r2, 8015202 <_ZN8touchgfx8Drawable12moveRelativeEss+0x32>
 80151dc:	6823      	ldr	r3, [r4, #0]
 80151de:	4620      	mov	r0, r4
 80151e0:	699b      	ldr	r3, [r3, #24]
 80151e2:	4798      	blx	r3
 80151e4:	88e2      	ldrh	r2, [r4, #6]
 80151e6:	88a1      	ldrh	r1, [r4, #4]
 80151e8:	4432      	add	r2, r6
 80151ea:	4429      	add	r1, r5
 80151ec:	4620      	mov	r0, r4
 80151ee:	b212      	sxth	r2, r2
 80151f0:	b209      	sxth	r1, r1
 80151f2:	f7f4 fc04 	bl	80099fe <_ZN8touchgfx8Drawable5setXYEss>
 80151f6:	6823      	ldr	r3, [r4, #0]
 80151f8:	4620      	mov	r0, r4
 80151fa:	699b      	ldr	r3, [r3, #24]
 80151fc:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
 8015200:	4718      	bx	r3
 8015202:	bd70      	pop	{r4, r5, r6, pc}

08015204 <_ZNK8touchgfx8Drawable15getAbsoluteRectEv>:
 8015204:	b510      	push	{r4, lr}
 8015206:	4604      	mov	r4, r0
 8015208:	4608      	mov	r0, r1
 801520a:	2300      	movs	r3, #0
 801520c:	8023      	strh	r3, [r4, #0]
 801520e:	8063      	strh	r3, [r4, #2]
 8015210:	6803      	ldr	r3, [r0, #0]
 8015212:	f9b0 200a 	ldrsh.w	r2, [r0, #10]
 8015216:	f9b1 1008 	ldrsh.w	r1, [r1, #8]
 801521a:	80a1      	strh	r1, [r4, #4]
 801521c:	80e2      	strh	r2, [r4, #6]
 801521e:	6adb      	ldr	r3, [r3, #44]	@ 0x2c
 8015220:	4621      	mov	r1, r4
 8015222:	4798      	blx	r3
 8015224:	4620      	mov	r0, r4
 8015226:	bd10      	pop	{r4, pc}

08015228 <_ZN8touchgfx9ConstFontC1EPKNS_9GlyphNodeEttthhhhhhtt>:
 8015228:	b530      	push	{r4, r5, lr}
 801522a:	8083      	strh	r3, [r0, #4]
 801522c:	f8bd 300c 	ldrh.w	r3, [sp, #12]
 8015230:	80c3      	strh	r3, [r0, #6]
 8015232:	f89d 3010 	ldrb.w	r3, [sp, #16]
 8015236:	7203      	strb	r3, [r0, #8]
 8015238:	f89d 3014 	ldrb.w	r3, [sp, #20]
 801523c:	f89d 5018 	ldrb.w	r5, [sp, #24]
 8015240:	7243      	strb	r3, [r0, #9]
 8015242:	7a83      	ldrb	r3, [r0, #10]
 8015244:	6141      	str	r1, [r0, #20]
 8015246:	f365 0306 	bfi	r3, r5, #0, #7
 801524a:	f89d 501c 	ldrb.w	r5, [sp, #28]
 801524e:	8302      	strh	r2, [r0, #24]
 8015250:	f365 13c7 	bfi	r3, r5, #7, #1
 8015254:	7283      	strb	r3, [r0, #10]
 8015256:	f89d 3020 	ldrb.w	r3, [sp, #32]
 801525a:	72c3      	strb	r3, [r0, #11]
 801525c:	f89d 3024 	ldrb.w	r3, [sp, #36]	@ 0x24
 8015260:	7303      	strb	r3, [r0, #12]
 8015262:	f8bd 3028 	ldrh.w	r3, [sp, #40]	@ 0x28
 8015266:	81c3      	strh	r3, [r0, #14]
 8015268:	f8bd 302c 	ldrh.w	r3, [sp, #44]	@ 0x2c
 801526c:	8203      	strh	r3, [r0, #16]
 801526e:	4b01      	ldr	r3, [pc, #4]	@ (8015274 <_ZN8touchgfx9ConstFontC1EPKNS_9GlyphNodeEttthhhhhhtt+0x4c>)
 8015270:	6003      	str	r3, [r0, #0]
 8015272:	bd30      	pop	{r4, r5, pc}
 8015274:	080294f8 	.word	0x080294f8

08015278 <_ZNK8touchgfx9ConstFont4findEt>:
 8015278:	b5f0      	push	{r4, r5, r6, r7, lr}
 801527a:	6944      	ldr	r4, [r0, #20]
 801527c:	b3bc      	cbz	r4, 80152ee <_ZNK8touchgfx9ConstFont4findEt+0x76>
 801527e:	88a3      	ldrh	r3, [r4, #4]
 8015280:	8b02      	ldrh	r2, [r0, #24]
 8015282:	1acb      	subs	r3, r1, r3
 8015284:	f102 32ff 	add.w	r2, r2, #4294967295
 8015288:	d431      	bmi.n	80152ee <_ZNK8touchgfx9ConstFont4findEt+0x76>
 801528a:	4293      	cmp	r3, r2
 801528c:	dd0c      	ble.n	80152a8 <_ZNK8touchgfx9ConstFont4findEt+0x30>
 801528e:	230e      	movs	r3, #14
 8015290:	fb03 4302 	mla	r3, r3, r2, r4
 8015294:	889b      	ldrh	r3, [r3, #4]
 8015296:	1a5b      	subs	r3, r3, r1
 8015298:	1ad3      	subs	r3, r2, r3
 801529a:	429a      	cmp	r2, r3
 801529c:	db27      	blt.n	80152ee <_ZNK8touchgfx9ConstFont4findEt+0x76>
 801529e:	2b00      	cmp	r3, #0
 80152a0:	bfbc      	itt	lt
 80152a2:	2302      	movlt	r3, #2
 80152a4:	fb92 f3f3 	sdivlt	r3, r2, r3
 80152a8:	2500      	movs	r5, #0
 80152aa:	260e      	movs	r6, #14
 80152ac:	4295      	cmp	r5, r2
 80152ae:	dc1e      	bgt.n	80152ee <_ZNK8touchgfx9ConstFont4findEt+0x76>
 80152b0:	fb06 4003 	mla	r0, r6, r3, r4
 80152b4:	8887      	ldrh	r7, [r0, #4]
 80152b6:	42b9      	cmp	r1, r7
 80152b8:	d01a      	beq.n	80152f0 <_ZNK8touchgfx9ConstFont4findEt+0x78>
 80152ba:	d20d      	bcs.n	80152d8 <_ZNK8touchgfx9ConstFont4findEt+0x60>
 80152bc:	1e5a      	subs	r2, r3, #1
 80152be:	4295      	cmp	r5, r2
 80152c0:	dc15      	bgt.n	80152ee <_ZNK8touchgfx9ConstFont4findEt+0x76>
 80152c2:	f830 3c0a 	ldrh.w	r3, [r0, #-10]
 80152c6:	1a5b      	subs	r3, r3, r1
 80152c8:	1ad3      	subs	r3, r2, r3
 80152ca:	429a      	cmp	r2, r3
 80152cc:	db0f      	blt.n	80152ee <_ZNK8touchgfx9ConstFont4findEt+0x76>
 80152ce:	429d      	cmp	r5, r3
 80152d0:	ddec      	ble.n	80152ac <_ZNK8touchgfx9ConstFont4findEt+0x34>
 80152d2:	1953      	adds	r3, r2, r5
 80152d4:	105b      	asrs	r3, r3, #1
 80152d6:	e7e9      	b.n	80152ac <_ZNK8touchgfx9ConstFont4findEt+0x34>
 80152d8:	1c5d      	adds	r5, r3, #1
 80152da:	42aa      	cmp	r2, r5
 80152dc:	db07      	blt.n	80152ee <_ZNK8touchgfx9ConstFont4findEt+0x76>
 80152de:	8a43      	ldrh	r3, [r0, #18]
 80152e0:	1acb      	subs	r3, r1, r3
 80152e2:	442b      	add	r3, r5
 80152e4:	429d      	cmp	r5, r3
 80152e6:	dc02      	bgt.n	80152ee <_ZNK8touchgfx9ConstFont4findEt+0x76>
 80152e8:	429a      	cmp	r2, r3
 80152ea:	dadf      	bge.n	80152ac <_ZNK8touchgfx9ConstFont4findEt+0x34>
 80152ec:	e7f1      	b.n	80152d2 <_ZNK8touchgfx9ConstFont4findEt+0x5a>
 80152ee:	2000      	movs	r0, #0
 80152f0:	bdf0      	pop	{r4, r5, r6, r7, pc}

080152f2 <_ZNK8touchgfx9ConstFont8getGlyphEtRPKhRh>:
 80152f2:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 80152f4:	4604      	mov	r4, r0
 80152f6:	4617      	mov	r7, r2
 80152f8:	461e      	mov	r6, r3
 80152fa:	b911      	cbnz	r1, 8015302 <_ZNK8touchgfx9ConstFont8getGlyphEtRPKhRh+0x10>
 80152fc:	2500      	movs	r5, #0
 80152fe:	4628      	mov	r0, r5
 8015300:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
 8015302:	290a      	cmp	r1, #10
 8015304:	d0fa      	beq.n	80152fc <_ZNK8touchgfx9ConstFont8getGlyphEtRPKhRh+0xa>
 8015306:	f64f 62ff 	movw	r2, #65279	@ 0xfeff
 801530a:	4291      	cmp	r1, r2
 801530c:	d0f6      	beq.n	80152fc <_ZNK8touchgfx9ConstFont8getGlyphEtRPKhRh+0xa>
 801530e:	f242 020b 	movw	r2, #8203	@ 0x200b
 8015312:	4291      	cmp	r1, r2
 8015314:	d0f2      	beq.n	80152fc <_ZNK8touchgfx9ConstFont8getGlyphEtRPKhRh+0xa>
 8015316:	f7ff ffaf 	bl	8015278 <_ZNK8touchgfx9ConstFont4findEt>
 801531a:	4605      	mov	r5, r0
 801531c:	b950      	cbnz	r0, 8015334 <_ZNK8touchgfx9ConstFont8getGlyphEtRPKhRh+0x42>
 801531e:	6823      	ldr	r3, [r4, #0]
 8015320:	4620      	mov	r0, r4
 8015322:	691b      	ldr	r3, [r3, #16]
 8015324:	4798      	blx	r3
 8015326:	4601      	mov	r1, r0
 8015328:	4620      	mov	r0, r4
 801532a:	f7ff ffa5 	bl	8015278 <_ZNK8touchgfx9ConstFont4findEt>
 801532e:	4605      	mov	r5, r0
 8015330:	2800      	cmp	r0, #0
 8015332:	d0e3      	beq.n	80152fc <_ZNK8touchgfx9ConstFont8getGlyphEtRPKhRh+0xa>
 8015334:	6823      	ldr	r3, [r4, #0]
 8015336:	4629      	mov	r1, r5
 8015338:	6ddb      	ldr	r3, [r3, #92]	@ 0x5c
 801533a:	4620      	mov	r0, r4
 801533c:	4798      	blx	r3
 801533e:	6038      	str	r0, [r7, #0]
 8015340:	6823      	ldr	r3, [r4, #0]
 8015342:	4620      	mov	r0, r4
 8015344:	6bdb      	ldr	r3, [r3, #60]	@ 0x3c
 8015346:	4798      	blx	r3
 8015348:	7030      	strb	r0, [r6, #0]
 801534a:	e7d8      	b.n	80152fe <_ZNK8touchgfx9ConstFont8getGlyphEtRPKhRh+0xc>

0801534c <_ZNK8touchgfx10ClickEvent12getEventTypeEv>:
 801534c:	2000      	movs	r0, #0
 801534e:	4770      	bx	lr

08015350 <_ZNK8touchgfx9DragEvent12getEventTypeEv>:
 8015350:	2001      	movs	r0, #1
 8015352:	4770      	bx	lr

08015354 <_ZNK8touchgfx12GestureEvent12getEventTypeEv>:
 8015354:	2002      	movs	r0, #2
 8015356:	4770      	bx	lr

08015358 <_ZN8touchgfx12GestureEventD1Ev>:
 8015358:	4770      	bx	lr

0801535a <_ZN8touchgfx9DragEventD1Ev>:
 801535a:	4770      	bx	lr

0801535c <_ZN8touchgfx10ClickEventD1Ev>:
 801535c:	4770      	bx	lr

0801535e <_ZN8touchgfx10ClickEventD0Ev>:
 801535e:	b510      	push	{r4, lr}
 8015360:	210c      	movs	r1, #12
 8015362:	4604      	mov	r4, r0
 8015364:	f010 fb95 	bl	8025a92 <_ZdlPvj>
 8015368:	4620      	mov	r0, r4
 801536a:	bd10      	pop	{r4, pc}

0801536c <_ZN8touchgfx9DragEventD0Ev>:
 801536c:	b510      	push	{r4, lr}
 801536e:	2110      	movs	r1, #16
 8015370:	4604      	mov	r4, r0
 8015372:	f010 fb8e 	bl	8025a92 <_ZdlPvj>
 8015376:	4620      	mov	r0, r4
 8015378:	bd10      	pop	{r4, pc}

0801537a <_ZN8touchgfx12GestureEventD0Ev>:
 801537a:	b510      	push	{r4, lr}
 801537c:	210c      	movs	r1, #12
 801537e:	4604      	mov	r4, r0
 8015380:	f010 fb87 	bl	8025a92 <_ZdlPvj>
 8015384:	4620      	mov	r0, r4
 8015386:	bd10      	pop	{r4, pc}

08015388 <_ZN8touchgfx6Screen18handleGestureEventERKNS_12GestureEventE>:
 8015388:	b530      	push	{r4, r5, lr}
 801538a:	460d      	mov	r5, r1
 801538c:	6b01      	ldr	r1, [r0, #48]	@ 0x30
 801538e:	b087      	sub	sp, #28
 8015390:	4604      	mov	r4, r0
 8015392:	b301      	cbz	r1, 80153d6 <_ZN8touchgfx6Screen18handleGestureEventERKNS_12GestureEventE+0x4e>
 8015394:	a801      	add	r0, sp, #4
 8015396:	f7ff ff35 	bl	8015204 <_ZNK8touchgfx8Drawable15getAbsoluteRectEv>
 801539a:	892a      	ldrh	r2, [r5, #8]
 801539c:	f8bd 3004 	ldrh.w	r3, [sp, #4]
 80153a0:	7928      	ldrb	r0, [r5, #4]
 80153a2:	f9b5 1006 	ldrsh.w	r1, [r5, #6]
 80153a6:	f88d 0010 	strb.w	r0, [sp, #16]
 80153aa:	1ad2      	subs	r2, r2, r3
 80153ac:	8ea3      	ldrh	r3, [r4, #52]	@ 0x34
 80153ae:	6b20      	ldr	r0, [r4, #48]	@ 0x30
 80153b0:	f8ad 1012 	strh.w	r1, [sp, #18]
 80153b4:	441a      	add	r2, r3
 80153b6:	896b      	ldrh	r3, [r5, #10]
 80153b8:	f8bd 5006 	ldrh.w	r5, [sp, #6]
 80153bc:	f8ad 2014 	strh.w	r2, [sp, #20]
 80153c0:	1b5b      	subs	r3, r3, r5
 80153c2:	8ee5      	ldrh	r5, [r4, #54]	@ 0x36
 80153c4:	442b      	add	r3, r5
 80153c6:	4d05      	ldr	r5, [pc, #20]	@ (80153dc <_ZN8touchgfx6Screen18handleGestureEventERKNS_12GestureEventE+0x54>)
 80153c8:	9503      	str	r5, [sp, #12]
 80153ca:	f8ad 3016 	strh.w	r3, [sp, #22]
 80153ce:	6803      	ldr	r3, [r0, #0]
 80153d0:	a903      	add	r1, sp, #12
 80153d2:	6c9b      	ldr	r3, [r3, #72]	@ 0x48
 80153d4:	4798      	blx	r3
 80153d6:	b007      	add	sp, #28
 80153d8:	bd30      	pop	{r4, r5, pc}
 80153da:	bf00      	nop
 80153dc:	08029588 	.word	0x08029588

080153e0 <_ZN8touchgfx6Screen16handleClickEventERKNS_10ClickEventE>:
 80153e0:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 80153e4:	6b03      	ldr	r3, [r0, #48]	@ 0x30
 80153e6:	b08a      	sub	sp, #40	@ 0x28
 80153e8:	4604      	mov	r4, r0
 80153ea:	460d      	mov	r5, r1
 80153ec:	b113      	cbz	r3, 80153f4 <_ZN8touchgfx6Screen16handleClickEventERKNS_10ClickEventE+0x14>
 80153ee:	790b      	ldrb	r3, [r1, #4]
 80153f0:	2b00      	cmp	r3, #0
 80153f2:	d044      	beq.n	801547e <_ZN8touchgfx6Screen16handleClickEventERKNS_10ClickEventE+0x9e>
 80153f4:	f104 0804 	add.w	r8, r4, #4
 80153f8:	4641      	mov	r1, r8
 80153fa:	a803      	add	r0, sp, #12
 80153fc:	f7ff ff02 	bl	8015204 <_ZNK8touchgfx8Drawable15getAbsoluteRectEv>
 8015400:	792b      	ldrb	r3, [r5, #4]
 8015402:	f9bd 700c 	ldrsh.w	r7, [sp, #12]
 8015406:	f9bd 600e 	ldrsh.w	r6, [sp, #14]
 801540a:	b983      	cbnz	r3, 801542e <_ZN8touchgfx6Screen16handleClickEventERKNS_10ClickEventE+0x4e>
 801540c:	892a      	ldrh	r2, [r5, #8]
 801540e:	88e9      	ldrh	r1, [r5, #6]
 8015410:	f104 0336 	add.w	r3, r4, #54	@ 0x36
 8015414:	1b92      	subs	r2, r2, r6
 8015416:	1bc9      	subs	r1, r1, r7
 8015418:	9301      	str	r3, [sp, #4]
 801541a:	f104 0334 	add.w	r3, r4, #52	@ 0x34
 801541e:	9300      	str	r3, [sp, #0]
 8015420:	b212      	sxth	r2, r2
 8015422:	f104 0330 	add.w	r3, r4, #48	@ 0x30
 8015426:	b209      	sxth	r1, r1
 8015428:	4640      	mov	r0, r8
 801542a:	f7fb f9a3 	bl	8010774 <_ZN8touchgfx9Container16getLastChildNearEssPPNS_8DrawableEPsS4_>
 801542e:	6b21      	ldr	r1, [r4, #48]	@ 0x30
 8015430:	b329      	cbz	r1, 801547e <_ZN8touchgfx6Screen16handleClickEventERKNS_10ClickEventE+0x9e>
 8015432:	a805      	add	r0, sp, #20
 8015434:	f7ff fee6 	bl	8015204 <_ZNK8touchgfx8Drawable15getAbsoluteRectEv>
 8015438:	f8bd 2014 	ldrh.w	r2, [sp, #20]
 801543c:	792b      	ldrb	r3, [r5, #4]
 801543e:	6b20      	ldr	r0, [r4, #48]	@ 0x30
 8015440:	f88d 3020 	strb.w	r3, [sp, #32]
 8015444:	1abf      	subs	r7, r7, r2
 8015446:	88ea      	ldrh	r2, [r5, #6]
 8015448:	4417      	add	r7, r2
 801544a:	8ea2      	ldrh	r2, [r4, #52]	@ 0x34
 801544c:	4417      	add	r7, r2
 801544e:	f8bd 2016 	ldrh.w	r2, [sp, #22]
 8015452:	f8ad 7022 	strh.w	r7, [sp, #34]	@ 0x22
 8015456:	1ab6      	subs	r6, r6, r2
 8015458:	892a      	ldrh	r2, [r5, #8]
 801545a:	4416      	add	r6, r2
 801545c:	8ee2      	ldrh	r2, [r4, #54]	@ 0x36
 801545e:	4416      	add	r6, r2
 8015460:	f8ad 6024 	strh.w	r6, [sp, #36]	@ 0x24
 8015464:	4a07      	ldr	r2, [pc, #28]	@ (8015484 <_ZN8touchgfx6Screen16handleClickEventERKNS_10ClickEventE+0xa4>)
 8015466:	9207      	str	r2, [sp, #28]
 8015468:	2600      	movs	r6, #0
 801546a:	f8ad 6026 	strh.w	r6, [sp, #38]	@ 0x26
 801546e:	6803      	ldr	r3, [r0, #0]
 8015470:	a907      	add	r1, sp, #28
 8015472:	6c5b      	ldr	r3, [r3, #68]	@ 0x44
 8015474:	4798      	blx	r3
 8015476:	792b      	ldrb	r3, [r5, #4]
 8015478:	b10b      	cbz	r3, 801547e <_ZN8touchgfx6Screen16handleClickEventERKNS_10ClickEventE+0x9e>
 801547a:	e9c4 660c 	strd	r6, r6, [r4, #48]	@ 0x30
 801547e:	b00a      	add	sp, #40	@ 0x28
 8015480:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
 8015484:	08029560 	.word	0x08029560

08015488 <_ZN8touchgfx6Screen15handleDragEventERKNS_9DragEventE>:
 8015488:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 801548c:	460c      	mov	r4, r1
 801548e:	6b01      	ldr	r1, [r0, #48]	@ 0x30
 8015490:	b088      	sub	sp, #32
 8015492:	4605      	mov	r5, r0
 8015494:	2900      	cmp	r1, #0
 8015496:	d06d      	beq.n	8015574 <_ZN8touchgfx6Screen15handleDragEventERKNS_9DragEventE+0xec>
 8015498:	4668      	mov	r0, sp
 801549a:	f7ff feb3 	bl	8015204 <_ZNK8touchgfx8Drawable15getAbsoluteRectEv>
 801549e:	8ea9      	ldrh	r1, [r5, #52]	@ 0x34
 80154a0:	88e3      	ldrh	r3, [r4, #6]
 80154a2:	f9bd 8000 	ldrsh.w	r8, [sp]
 80154a6:	f9bd 7002 	ldrsh.w	r7, [sp, #2]
 80154aa:	440b      	add	r3, r1
 80154ac:	b21b      	sxth	r3, r3
 80154ae:	4543      	cmp	r3, r8
 80154b0:	db31      	blt.n	8015516 <_ZN8touchgfx6Screen15handleDragEventERKNS_9DragEventE+0x8e>
 80154b2:	f8bd c004 	ldrh.w	ip, [sp, #4]
 80154b6:	44c4      	add	ip, r8
 80154b8:	fa0f fc8c 	sxth.w	ip, ip
 80154bc:	4563      	cmp	r3, ip
 80154be:	da2a      	bge.n	8015516 <_ZN8touchgfx6Screen15handleDragEventERKNS_9DragEventE+0x8e>
 80154c0:	8eea      	ldrh	r2, [r5, #54]	@ 0x36
 80154c2:	8926      	ldrh	r6, [r4, #8]
 80154c4:	4416      	add	r6, r2
 80154c6:	b236      	sxth	r6, r6
 80154c8:	42be      	cmp	r6, r7
 80154ca:	db24      	blt.n	8015516 <_ZN8touchgfx6Screen15handleDragEventERKNS_9DragEventE+0x8e>
 80154cc:	f8bd 0006 	ldrh.w	r0, [sp, #6]
 80154d0:	4438      	add	r0, r7
 80154d2:	b200      	sxth	r0, r0
 80154d4:	4286      	cmp	r6, r0
 80154d6:	da1e      	bge.n	8015516 <_ZN8touchgfx6Screen15handleDragEventERKNS_9DragEventE+0x8e>
 80154d8:	8963      	ldrh	r3, [r4, #10]
 80154da:	4419      	add	r1, r3
 80154dc:	b209      	sxth	r1, r1
 80154de:	4541      	cmp	r1, r8
 80154e0:	db08      	blt.n	80154f4 <_ZN8touchgfx6Screen15handleDragEventERKNS_9DragEventE+0x6c>
 80154e2:	4561      	cmp	r1, ip
 80154e4:	da06      	bge.n	80154f4 <_ZN8touchgfx6Screen15handleDragEventERKNS_9DragEventE+0x6c>
 80154e6:	89a3      	ldrh	r3, [r4, #12]
 80154e8:	441a      	add	r2, r3
 80154ea:	b212      	sxth	r2, r2
 80154ec:	42ba      	cmp	r2, r7
 80154ee:	db01      	blt.n	80154f4 <_ZN8touchgfx6Screen15handleDragEventERKNS_9DragEventE+0x6c>
 80154f0:	4282      	cmp	r2, r0
 80154f2:	db10      	blt.n	8015516 <_ZN8touchgfx6Screen15handleDragEventERKNS_9DragEventE+0x8e>
 80154f4:	4b21      	ldr	r3, [pc, #132]	@ (801557c <_ZN8touchgfx6Screen15handleDragEventERKNS_9DragEventE+0xf4>)
 80154f6:	9304      	str	r3, [sp, #16]
 80154f8:	2302      	movs	r3, #2
 80154fa:	f88d 3014 	strb.w	r3, [sp, #20]
 80154fe:	6b28      	ldr	r0, [r5, #48]	@ 0x30
 8015500:	2300      	movs	r3, #0
 8015502:	f8ad 3016 	strh.w	r3, [sp, #22]
 8015506:	f8ad 3018 	strh.w	r3, [sp, #24]
 801550a:	f8ad 301a 	strh.w	r3, [sp, #26]
 801550e:	6803      	ldr	r3, [r0, #0]
 8015510:	a904      	add	r1, sp, #16
 8015512:	6c5b      	ldr	r3, [r3, #68]	@ 0x44
 8015514:	4798      	blx	r3
 8015516:	1d29      	adds	r1, r5, #4
 8015518:	a802      	add	r0, sp, #8
 801551a:	f7ff fe73 	bl	8015204 <_ZNK8touchgfx8Drawable15getAbsoluteRectEv>
 801551e:	f8bd 3008 	ldrh.w	r3, [sp, #8]
 8015522:	88e0      	ldrh	r0, [r4, #6]
 8015524:	7921      	ldrb	r1, [r4, #4]
 8015526:	f8b5 c034 	ldrh.w	ip, [r5, #52]	@ 0x34
 801552a:	8922      	ldrh	r2, [r4, #8]
 801552c:	8eee      	ldrh	r6, [r5, #54]	@ 0x36
 801552e:	f88d 1014 	strb.w	r1, [sp, #20]
 8015532:	eba3 0808 	sub.w	r8, r3, r8
 8015536:	f8bd 300a 	ldrh.w	r3, [sp, #10]
 801553a:	1bdf      	subs	r7, r3, r7
 801553c:	b2bb      	uxth	r3, r7
 801553e:	fa1f f888 	uxth.w	r8, r8
 8015542:	8967      	ldrh	r7, [r4, #10]
 8015544:	89a4      	ldrh	r4, [r4, #12]
 8015546:	4440      	add	r0, r8
 8015548:	4460      	add	r0, ip
 801554a:	441a      	add	r2, r3
 801554c:	44b8      	add	r8, r7
 801554e:	4423      	add	r3, r4
 8015550:	f8ad 0016 	strh.w	r0, [sp, #22]
 8015554:	4433      	add	r3, r6
 8015556:	4432      	add	r2, r6
 8015558:	44e0      	add	r8, ip
 801555a:	4c09      	ldr	r4, [pc, #36]	@ (8015580 <_ZN8touchgfx6Screen15handleDragEventERKNS_9DragEventE+0xf8>)
 801555c:	6b28      	ldr	r0, [r5, #48]	@ 0x30
 801555e:	9404      	str	r4, [sp, #16]
 8015560:	f8ad 2018 	strh.w	r2, [sp, #24]
 8015564:	f8ad 801a 	strh.w	r8, [sp, #26]
 8015568:	f8ad 301c 	strh.w	r3, [sp, #28]
 801556c:	6803      	ldr	r3, [r0, #0]
 801556e:	a904      	add	r1, sp, #16
 8015570:	6cdb      	ldr	r3, [r3, #76]	@ 0x4c
 8015572:	4798      	blx	r3
 8015574:	b008      	add	sp, #32
 8015576:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
 801557a:	bf00      	nop
 801557c:	08029560 	.word	0x08029560
 8015580:	08029574 	.word	0x08029574

08015584 <_ZN8touchgfx8Drawable20getCachedVisibleRectEv>:
 8015584:	b537      	push	{r0, r1, r2, r4, r5, lr}
 8015586:	4604      	mov	r4, r0
 8015588:	f934 2f0c 	ldrsh.w	r2, [r4, #12]!
 801558c:	3201      	adds	r2, #1
 801558e:	d112      	bne.n	80155b6 <_ZN8touchgfx8Drawable20getCachedVisibleRectEv+0x32>
 8015590:	6803      	ldr	r3, [r0, #0]
 8015592:	f9b0 1008 	ldrsh.w	r1, [r0, #8]
 8015596:	f9b0 200a 	ldrsh.w	r2, [r0, #10]
 801559a:	f8ad 1004 	strh.w	r1, [sp, #4]
 801559e:	2500      	movs	r5, #0
 80155a0:	9500      	str	r5, [sp, #0]
 80155a2:	466d      	mov	r5, sp
 80155a4:	4629      	mov	r1, r5
 80155a6:	f8ad 2006 	strh.w	r2, [sp, #6]
 80155aa:	6a9b      	ldr	r3, [r3, #40]	@ 0x28
 80155ac:	4798      	blx	r3
 80155ae:	e895 0003 	ldmia.w	r5, {r0, r1}
 80155b2:	e884 0003 	stmia.w	r4, {r0, r1}
 80155b6:	4620      	mov	r0, r4
 80155b8:	b003      	add	sp, #12
 80155ba:	bd30      	pop	{r4, r5, pc}

080155bc <_ZN8touchgfx8Drawable13getCachedAbsXEv>:
 80155bc:	b513      	push	{r0, r1, r4, lr}
 80155be:	f9b0 3020 	ldrsh.w	r3, [r0, #32]
 80155c2:	3301      	adds	r3, #1
 80155c4:	4604      	mov	r4, r0
 80155c6:	d109      	bne.n	80155dc <_ZN8touchgfx8Drawable13getCachedAbsXEv+0x20>
 80155c8:	4601      	mov	r1, r0
 80155ca:	4668      	mov	r0, sp
 80155cc:	f7ff fe1a 	bl	8015204 <_ZNK8touchgfx8Drawable15getAbsoluteRectEv>
 80155d0:	f8bd 3000 	ldrh.w	r3, [sp]
 80155d4:	8423      	strh	r3, [r4, #32]
 80155d6:	f8bd 3002 	ldrh.w	r3, [sp, #2]
 80155da:	8463      	strh	r3, [r4, #34]	@ 0x22
 80155dc:	f9b4 0020 	ldrsh.w	r0, [r4, #32]
 80155e0:	b002      	add	sp, #8
 80155e2:	bd10      	pop	{r4, pc}

080155e4 <_ZN8touchgfx8Drawable13getCachedAbsYEv>:
 80155e4:	b513      	push	{r0, r1, r4, lr}
 80155e6:	f9b0 3022 	ldrsh.w	r3, [r0, #34]	@ 0x22
 80155ea:	3301      	adds	r3, #1
 80155ec:	4604      	mov	r4, r0
 80155ee:	d109      	bne.n	8015604 <_ZN8touchgfx8Drawable13getCachedAbsYEv+0x20>
 80155f0:	4601      	mov	r1, r0
 80155f2:	4668      	mov	r0, sp
 80155f4:	f7ff fe06 	bl	8015204 <_ZNK8touchgfx8Drawable15getAbsoluteRectEv>
 80155f8:	f8bd 3000 	ldrh.w	r3, [sp]
 80155fc:	8423      	strh	r3, [r4, #32]
 80155fe:	f8bd 3002 	ldrh.w	r3, [sp, #2]
 8015602:	8463      	strh	r3, [r4, #34]	@ 0x22
 8015604:	f9b4 0022 	ldrsh.w	r0, [r4, #34]	@ 0x22
 8015608:	b002      	add	sp, #8
 801560a:	bd10      	pop	{r4, pc}

0801560c <_ZN8touchgfx6ScreenC1Ev>:
 801560c:	b570      	push	{r4, r5, r6, lr}
 801560e:	4605      	mov	r5, r0
 8015610:	4b16      	ldr	r3, [pc, #88]	@ (801566c <_ZN8touchgfx6ScreenC1Ev+0x60>)
 8015612:	f845 3b04 	str.w	r3, [r5], #4
 8015616:	2300      	movs	r3, #0
 8015618:	8103      	strh	r3, [r0, #8]
 801561a:	8143      	strh	r3, [r0, #10]
 801561c:	8183      	strh	r3, [r0, #12]
 801561e:	81c3      	strh	r3, [r0, #14]
 8015620:	8203      	strh	r3, [r0, #16]
 8015622:	8243      	strh	r3, [r0, #18]
 8015624:	8283      	strh	r3, [r0, #20]
 8015626:	82c3      	strh	r3, [r0, #22]
 8015628:	e9c0 3306 	strd	r3, r3, [r0, #24]
 801562c:	6203      	str	r3, [r0, #32]
 801562e:	8483      	strh	r3, [r0, #36]	@ 0x24
 8015630:	84c3      	strh	r3, [r0, #38]	@ 0x26
 8015632:	f880 3028 	strb.w	r3, [r0, #40]	@ 0x28
 8015636:	4a0e      	ldr	r2, [pc, #56]	@ (8015670 <_ZN8touchgfx6ScreenC1Ev+0x64>)
 8015638:	6343      	str	r3, [r0, #52]	@ 0x34
 801563a:	e9c0 330b 	strd	r3, r3, [r0, #44]	@ 0x2c
 801563e:	4b0d      	ldr	r3, [pc, #52]	@ (8015674 <_ZN8touchgfx6ScreenC1Ev+0x68>)
 8015640:	6042      	str	r2, [r0, #4]
 8015642:	f9b3 6000 	ldrsh.w	r6, [r3]
 8015646:	6b93      	ldr	r3, [r2, #56]	@ 0x38
 8015648:	4a0b      	ldr	r2, [pc, #44]	@ (8015678 <_ZN8touchgfx6ScreenC1Ev+0x6c>)
 801564a:	4604      	mov	r4, r0
 801564c:	2101      	movs	r1, #1
 801564e:	f880 1029 	strb.w	r1, [r0, #41]	@ 0x29
 8015652:	f880 1038 	strb.w	r1, [r0, #56]	@ 0x38
 8015656:	f9b2 1000 	ldrsh.w	r1, [r2]
 801565a:	4628      	mov	r0, r5
 801565c:	4798      	blx	r3
 801565e:	6863      	ldr	r3, [r4, #4]
 8015660:	4628      	mov	r0, r5
 8015662:	6bdb      	ldr	r3, [r3, #60]	@ 0x3c
 8015664:	4631      	mov	r1, r6
 8015666:	4798      	blx	r3
 8015668:	4620      	mov	r0, r4
 801566a:	bd70      	pop	{r4, r5, r6, pc}
 801566c:	0802959c 	.word	0x0802959c
 8015670:	08028e3c 	.word	0x08028e3c
 8015674:	20002f9e 	.word	0x20002f9e
 8015678:	20002f9c 	.word	0x20002f9c

0801567c <_ZN8touchgfx6Screen4drawEv>:
 801567c:	b507      	push	{r0, r1, r2, lr}
 801567e:	4b09      	ldr	r3, [pc, #36]	@ (80156a4 <_ZN8touchgfx6Screen4drawEv+0x28>)
 8015680:	f9b3 2000 	ldrsh.w	r2, [r3]
 8015684:	4b08      	ldr	r3, [pc, #32]	@ (80156a8 <_ZN8touchgfx6Screen4drawEv+0x2c>)
 8015686:	f8ad 2004 	strh.w	r2, [sp, #4]
 801568a:	f9b3 3000 	ldrsh.w	r3, [r3]
 801568e:	f8ad 3006 	strh.w	r3, [sp, #6]
 8015692:	6803      	ldr	r3, [r0, #0]
 8015694:	2100      	movs	r1, #0
 8015696:	9100      	str	r1, [sp, #0]
 8015698:	689b      	ldr	r3, [r3, #8]
 801569a:	4669      	mov	r1, sp
 801569c:	4798      	blx	r3
 801569e:	b003      	add	sp, #12
 80156a0:	f85d fb04 	ldr.w	pc, [sp], #4
 80156a4:	20002f9c 	.word	0x20002f9c
 80156a8:	20002f9e 	.word	0x20002f9e

080156ac <_ZN8touchgfx6Screen5JSMOCERKNS_4RectEPNS_8DrawableE>:
 80156ac:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 80156b0:	f9b1 3004 	ldrsh.w	r3, [r1, #4]
 80156b4:	2b00      	cmp	r3, #0
 80156b6:	b089      	sub	sp, #36	@ 0x24
 80156b8:	4680      	mov	r8, r0
 80156ba:	460c      	mov	r4, r1
 80156bc:	4615      	mov	r5, r2
 80156be:	dd0e      	ble.n	80156de <_ZN8touchgfx6Screen5JSMOCERKNS_4RectEPNS_8DrawableE+0x32>
 80156c0:	f9b1 3006 	ldrsh.w	r3, [r1, #6]
 80156c4:	2b00      	cmp	r3, #0
 80156c6:	dd0a      	ble.n	80156de <_ZN8touchgfx6Screen5JSMOCERKNS_4RectEPNS_8DrawableE+0x32>
 80156c8:	4628      	mov	r0, r5
 80156ca:	f7ff ff5b 	bl	8015584 <_ZN8touchgfx8Drawable20getCachedVisibleRectEv>
 80156ce:	4621      	mov	r1, r4
 80156d0:	f7fe fba8 	bl	8013e24 <_ZNK8touchgfx4Rect9intersectERKS0_>
 80156d4:	69eb      	ldr	r3, [r5, #28]
 80156d6:	b928      	cbnz	r0, 80156e4 <_ZN8touchgfx6Screen5JSMOCERKNS_4RectEPNS_8DrawableE+0x38>
 80156d8:	461d      	mov	r5, r3
 80156da:	2b00      	cmp	r3, #0
 80156dc:	d1f4      	bne.n	80156c8 <_ZN8touchgfx6Screen5JSMOCERKNS_4RectEPNS_8DrawableE+0x1c>
 80156de:	b009      	add	sp, #36	@ 0x24
 80156e0:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 80156e4:	ae04      	add	r6, sp, #16
 80156e6:	2b00      	cmp	r3, #0
 80156e8:	f000 80b5 	beq.w	8015856 <_ZN8touchgfx6Screen5JSMOCERKNS_4RectEPNS_8DrawableE+0x1aa>
 80156ec:	682b      	ldr	r3, [r5, #0]
 80156ee:	4629      	mov	r1, r5
 80156f0:	68db      	ldr	r3, [r3, #12]
 80156f2:	a802      	add	r0, sp, #8
 80156f4:	4798      	blx	r3
 80156f6:	4628      	mov	r0, r5
 80156f8:	f7ff ff60 	bl	80155bc <_ZN8touchgfx8Drawable13getCachedAbsXEv>
 80156fc:	f8bd 7008 	ldrh.w	r7, [sp, #8]
 8015700:	4407      	add	r7, r0
 8015702:	4628      	mov	r0, r5
 8015704:	f7ff ff6e 	bl	80155e4 <_ZN8touchgfx8Drawable13getCachedAbsYEv>
 8015708:	f8bd 300a 	ldrh.w	r3, [sp, #10]
 801570c:	f9bd 200c 	ldrsh.w	r2, [sp, #12]
 8015710:	f8ad 2014 	strh.w	r2, [sp, #20]
 8015714:	4418      	add	r0, r3
 8015716:	4621      	mov	r1, r4
 8015718:	f9bd 300e 	ldrsh.w	r3, [sp, #14]
 801571c:	f8ad 0012 	strh.w	r0, [sp, #18]
 8015720:	b23f      	sxth	r7, r7
 8015722:	4630      	mov	r0, r6
 8015724:	f8ad 3016 	strh.w	r3, [sp, #22]
 8015728:	f8ad 7010 	strh.w	r7, [sp, #16]
 801572c:	f7fb f906 	bl	801093c <_ZN8touchgfx4RectaNERKS0_>
 8015730:	4628      	mov	r0, r5
 8015732:	f7ff ff27 	bl	8015584 <_ZN8touchgfx8Drawable20getCachedVisibleRectEv>
 8015736:	4602      	mov	r2, r0
 8015738:	e896 0003 	ldmia.w	r6, {r0, r1}
 801573c:	ab06      	add	r3, sp, #24
 801573e:	e883 0003 	stmia.w	r3, {r0, r1}
 8015742:	4611      	mov	r1, r2
 8015744:	4618      	mov	r0, r3
 8015746:	f7fb f8f9 	bl	801093c <_ZN8touchgfx4RectaNERKS0_>
 801574a:	f9bd 3018 	ldrsh.w	r3, [sp, #24]
 801574e:	f9b4 1000 	ldrsh.w	r1, [r4]
 8015752:	f9bd a01a 	ldrsh.w	sl, [sp, #26]
 8015756:	f9bd b01c 	ldrsh.w	fp, [sp, #28]
 801575a:	f9bd 901e 	ldrsh.w	r9, [sp, #30]
 801575e:	4299      	cmp	r1, r3
 8015760:	d10b      	bne.n	801577a <_ZN8touchgfx6Screen5JSMOCERKNS_4RectEPNS_8DrawableE+0xce>
 8015762:	f9b4 2002 	ldrsh.w	r2, [r4, #2]
 8015766:	4552      	cmp	r2, sl
 8015768:	d107      	bne.n	801577a <_ZN8touchgfx6Screen5JSMOCERKNS_4RectEPNS_8DrawableE+0xce>
 801576a:	f9b4 2004 	ldrsh.w	r2, [r4, #4]
 801576e:	455a      	cmp	r2, fp
 8015770:	d103      	bne.n	801577a <_ZN8touchgfx6Screen5JSMOCERKNS_4RectEPNS_8DrawableE+0xce>
 8015772:	f9b4 2006 	ldrsh.w	r2, [r4, #6]
 8015776:	454a      	cmp	r2, r9
 8015778:	d06d      	beq.n	8015856 <_ZN8touchgfx6Screen5JSMOCERKNS_4RectEPNS_8DrawableE+0x1aa>
 801577a:	f1bb 0f00 	cmp.w	fp, #0
 801577e:	dd65      	ble.n	801584c <_ZN8touchgfx6Screen5JSMOCERKNS_4RectEPNS_8DrawableE+0x1a0>
 8015780:	f1b9 0f00 	cmp.w	r9, #0
 8015784:	dd62      	ble.n	801584c <_ZN8touchgfx6Screen5JSMOCERKNS_4RectEPNS_8DrawableE+0x1a0>
 8015786:	f9b4 2002 	ldrsh.w	r2, [r4, #2]
 801578a:	fa1f f08a 	uxth.w	r0, sl
 801578e:	4552      	cmp	r2, sl
 8015790:	9000      	str	r0, [sp, #0]
 8015792:	da12      	bge.n	80157ba <_ZN8touchgfx6Screen5JSMOCERKNS_4RectEPNS_8DrawableE+0x10e>
 8015794:	9301      	str	r3, [sp, #4]
 8015796:	9b00      	ldr	r3, [sp, #0]
 8015798:	f9b4 0004 	ldrsh.w	r0, [r4, #4]
 801579c:	f8ad 2012 	strh.w	r2, [sp, #18]
 80157a0:	1a9a      	subs	r2, r3, r2
 80157a2:	f8ad 1010 	strh.w	r1, [sp, #16]
 80157a6:	f8ad 0014 	strh.w	r0, [sp, #20]
 80157aa:	f8ad 2016 	strh.w	r2, [sp, #22]
 80157ae:	69ea      	ldr	r2, [r5, #28]
 80157b0:	4631      	mov	r1, r6
 80157b2:	4640      	mov	r0, r8
 80157b4:	f7ff ff7a 	bl	80156ac <_ZN8touchgfx6Screen5JSMOCERKNS_4RectEPNS_8DrawableE>
 80157b8:	9b01      	ldr	r3, [sp, #4]
 80157ba:	f9b4 2000 	ldrsh.w	r2, [r4]
 80157be:	429a      	cmp	r2, r3
 80157c0:	b29f      	uxth	r7, r3
 80157c2:	da0d      	bge.n	80157e0 <_ZN8touchgfx6Screen5JSMOCERKNS_4RectEPNS_8DrawableE+0x134>
 80157c4:	f8ad 2010 	strh.w	r2, [sp, #16]
 80157c8:	1aba      	subs	r2, r7, r2
 80157ca:	f8ad a012 	strh.w	sl, [sp, #18]
 80157ce:	f8ad 2014 	strh.w	r2, [sp, #20]
 80157d2:	f8ad 9016 	strh.w	r9, [sp, #22]
 80157d6:	69ea      	ldr	r2, [r5, #28]
 80157d8:	4631      	mov	r1, r6
 80157da:	4640      	mov	r0, r8
 80157dc:	f7ff ff66 	bl	80156ac <_ZN8touchgfx6Screen5JSMOCERKNS_4RectEPNS_8DrawableE>
 80157e0:	8822      	ldrh	r2, [r4, #0]
 80157e2:	88a3      	ldrh	r3, [r4, #4]
 80157e4:	445f      	add	r7, fp
 80157e6:	4413      	add	r3, r2
 80157e8:	b29b      	uxth	r3, r3
 80157ea:	b2bf      	uxth	r7, r7
 80157ec:	b23a      	sxth	r2, r7
 80157ee:	b219      	sxth	r1, r3
 80157f0:	4291      	cmp	r1, r2
 80157f2:	dd0d      	ble.n	8015810 <_ZN8touchgfx6Screen5JSMOCERKNS_4RectEPNS_8DrawableE+0x164>
 80157f4:	1bdb      	subs	r3, r3, r7
 80157f6:	f8ad 2010 	strh.w	r2, [sp, #16]
 80157fa:	f8ad a012 	strh.w	sl, [sp, #18]
 80157fe:	f8ad 3014 	strh.w	r3, [sp, #20]
 8015802:	f8ad 9016 	strh.w	r9, [sp, #22]
 8015806:	69ea      	ldr	r2, [r5, #28]
 8015808:	4631      	mov	r1, r6
 801580a:	4640      	mov	r0, r8
 801580c:	f7ff ff4e 	bl	80156ac <_ZN8touchgfx6Screen5JSMOCERKNS_4RectEPNS_8DrawableE>
 8015810:	88e2      	ldrh	r2, [r4, #6]
 8015812:	8863      	ldrh	r3, [r4, #2]
 8015814:	4413      	add	r3, r2
 8015816:	9a00      	ldr	r2, [sp, #0]
 8015818:	444a      	add	r2, r9
 801581a:	b29b      	uxth	r3, r3
 801581c:	fa1f f982 	uxth.w	r9, r2
 8015820:	fa0f f289 	sxth.w	r2, r9
 8015824:	b219      	sxth	r1, r3
 8015826:	428a      	cmp	r2, r1
 8015828:	da15      	bge.n	8015856 <_ZN8touchgfx6Screen5JSMOCERKNS_4RectEPNS_8DrawableE+0x1aa>
 801582a:	f9b4 1004 	ldrsh.w	r1, [r4, #4]
 801582e:	f9b4 0000 	ldrsh.w	r0, [r4]
 8015832:	f8ad 1014 	strh.w	r1, [sp, #20]
 8015836:	eba3 0309 	sub.w	r3, r3, r9
 801583a:	f8ad 0010 	strh.w	r0, [sp, #16]
 801583e:	f8ad 2012 	strh.w	r2, [sp, #18]
 8015842:	f8ad 3016 	strh.w	r3, [sp, #22]
 8015846:	69ea      	ldr	r2, [r5, #28]
 8015848:	4631      	mov	r1, r6
 801584a:	e001      	b.n	8015850 <_ZN8touchgfx6Screen5JSMOCERKNS_4RectEPNS_8DrawableE+0x1a4>
 801584c:	69ea      	ldr	r2, [r5, #28]
 801584e:	4621      	mov	r1, r4
 8015850:	4640      	mov	r0, r8
 8015852:	f7ff ff2b 	bl	80156ac <_ZN8touchgfx6Screen5JSMOCERKNS_4RectEPNS_8DrawableE>
 8015856:	4628      	mov	r0, r5
 8015858:	f7ff fe94 	bl	8015584 <_ZN8touchgfx8Drawable20getCachedVisibleRectEv>
 801585c:	6861      	ldr	r1, [r4, #4]
 801585e:	4602      	mov	r2, r0
 8015860:	6820      	ldr	r0, [r4, #0]
 8015862:	4633      	mov	r3, r6
 8015864:	c303      	stmia	r3!, {r0, r1}
 8015866:	4611      	mov	r1, r2
 8015868:	4630      	mov	r0, r6
 801586a:	f7fb f867 	bl	801093c <_ZN8touchgfx4RectaNERKS0_>
 801586e:	f9bd 3014 	ldrsh.w	r3, [sp, #20]
 8015872:	2b00      	cmp	r3, #0
 8015874:	f77f af33 	ble.w	80156de <_ZN8touchgfx6Screen5JSMOCERKNS_4RectEPNS_8DrawableE+0x32>
 8015878:	f9bd 3016 	ldrsh.w	r3, [sp, #22]
 801587c:	2b00      	cmp	r3, #0
 801587e:	f77f af2e 	ble.w	80156de <_ZN8touchgfx6Screen5JSMOCERKNS_4RectEPNS_8DrawableE+0x32>
 8015882:	4628      	mov	r0, r5
 8015884:	f7ff fe9a 	bl	80155bc <_ZN8touchgfx8Drawable13getCachedAbsXEv>
 8015888:	f8bd 3010 	ldrh.w	r3, [sp, #16]
 801588c:	1a18      	subs	r0, r3, r0
 801588e:	f8ad 0010 	strh.w	r0, [sp, #16]
 8015892:	4628      	mov	r0, r5
 8015894:	f7ff fea6 	bl	80155e4 <_ZN8touchgfx8Drawable13getCachedAbsYEv>
 8015898:	f8bd 3012 	ldrh.w	r3, [sp, #18]
 801589c:	1a18      	subs	r0, r3, r0
 801589e:	f8ad 0012 	strh.w	r0, [sp, #18]
 80158a2:	682b      	ldr	r3, [r5, #0]
 80158a4:	4631      	mov	r1, r6
 80158a6:	689b      	ldr	r3, [r3, #8]
 80158a8:	4628      	mov	r0, r5
 80158aa:	4798      	blx	r3
 80158ac:	e717      	b.n	80156de <_ZN8touchgfx6Screen5JSMOCERKNS_4RectEPNS_8DrawableE+0x32>

080158ae <_ZN8touchgfx6Screen9startSMOCERKNS_4RectE>:
 80158ae:	b570      	push	{r4, r5, r6, lr}
 80158b0:	460c      	mov	r4, r1
 80158b2:	b086      	sub	sp, #24
 80158b4:	1d06      	adds	r6, r0, #4
 80158b6:	2300      	movs	r3, #0
 80158b8:	4631      	mov	r1, r6
 80158ba:	4605      	mov	r5, r0
 80158bc:	a802      	add	r0, sp, #8
 80158be:	9301      	str	r3, [sp, #4]
 80158c0:	f7ff fca0 	bl	8015204 <_ZNK8touchgfx8Drawable15getAbsoluteRectEv>
 80158c4:	f8bd 3008 	ldrh.w	r3, [sp, #8]
 80158c8:	8822      	ldrh	r2, [r4, #0]
 80158ca:	f8bd 100a 	ldrh.w	r1, [sp, #10]
 80158ce:	f9b4 0004 	ldrsh.w	r0, [r4, #4]
 80158d2:	f8ad 0014 	strh.w	r0, [sp, #20]
 80158d6:	1ad2      	subs	r2, r2, r3
 80158d8:	8863      	ldrh	r3, [r4, #2]
 80158da:	f8ad 2010 	strh.w	r2, [sp, #16]
 80158de:	1a5b      	subs	r3, r3, r1
 80158e0:	f9b4 1006 	ldrsh.w	r1, [r4, #6]
 80158e4:	f8ad 1016 	strh.w	r1, [sp, #22]
 80158e8:	aa01      	add	r2, sp, #4
 80158ea:	a904      	add	r1, sp, #16
 80158ec:	4630      	mov	r0, r6
 80158ee:	f8ad 3012 	strh.w	r3, [sp, #18]
 80158f2:	f7fb f8fb 	bl	8010aec <_ZN8touchgfx9Container14setupDrawChainERKNS_4RectEPPNS_8DrawableE>
 80158f6:	9a01      	ldr	r2, [sp, #4]
 80158f8:	b11a      	cbz	r2, 8015902 <_ZN8touchgfx6Screen9startSMOCERKNS_4RectE+0x54>
 80158fa:	4621      	mov	r1, r4
 80158fc:	4628      	mov	r0, r5
 80158fe:	f7ff fed5 	bl	80156ac <_ZN8touchgfx6Screen5JSMOCERKNS_4RectEPNS_8DrawableE>
 8015902:	b006      	add	sp, #24
 8015904:	bd70      	pop	{r4, r5, r6, pc}

08015906 <_ZN8touchgfx6Screen4drawERNS_4RectE>:
 8015906:	b530      	push	{r4, r5, lr}
 8015908:	4602      	mov	r2, r0
 801590a:	4604      	mov	r4, r0
 801590c:	f852 0f08 	ldr.w	r0, [r2, #8]!
 8015910:	b085      	sub	sp, #20
 8015912:	460d      	mov	r5, r1
 8015914:	6851      	ldr	r1, [r2, #4]
 8015916:	466b      	mov	r3, sp
 8015918:	c303      	stmia	r3!, {r0, r1}
 801591a:	4629      	mov	r1, r5
 801591c:	4668      	mov	r0, sp
 801591e:	f7fb f80d 	bl	801093c <_ZN8touchgfx4RectaNERKS0_>
 8015922:	f894 3038 	ldrb.w	r3, [r4, #56]	@ 0x38
 8015926:	b12b      	cbz	r3, 8015934 <_ZN8touchgfx6Screen4drawERNS_4RectE+0x2e>
 8015928:	4669      	mov	r1, sp
 801592a:	4620      	mov	r0, r4
 801592c:	f7ff ffbf 	bl	80158ae <_ZN8touchgfx6Screen9startSMOCERKNS_4RectE>
 8015930:	b005      	add	sp, #20
 8015932:	bd30      	pop	{r4, r5, pc}
 8015934:	3404      	adds	r4, #4
 8015936:	4621      	mov	r1, r4
 8015938:	a802      	add	r0, sp, #8
 801593a:	f7ff fc63 	bl	8015204 <_ZNK8touchgfx8Drawable15getAbsoluteRectEv>
 801593e:	f8bd 3000 	ldrh.w	r3, [sp]
 8015942:	f8bd 2008 	ldrh.w	r2, [sp, #8]
 8015946:	1a9b      	subs	r3, r3, r2
 8015948:	f8ad 3000 	strh.w	r3, [sp]
 801594c:	f8bd 200a 	ldrh.w	r2, [sp, #10]
 8015950:	f8bd 3002 	ldrh.w	r3, [sp, #2]
 8015954:	4669      	mov	r1, sp
 8015956:	1a9b      	subs	r3, r3, r2
 8015958:	4620      	mov	r0, r4
 801595a:	f8ad 3002 	strh.w	r3, [sp, #2]
 801595e:	f7fb f88c 	bl	8010a7a <_ZNK8touchgfx9Container4drawERKNS_4RectE>
 8015962:	e7e5      	b.n	8015930 <_ZN8touchgfx6Screen4drawERNS_4RectE+0x2a>

08015964 <_ZN8touchgfx6Screen14bindTransitionERNS_10TransitionE>:
 8015964:	680a      	ldr	r2, [r1, #0]
 8015966:	460b      	mov	r3, r1
 8015968:	6992      	ldr	r2, [r2, #24]
 801596a:	1d01      	adds	r1, r0, #4
 801596c:	4618      	mov	r0, r3
 801596e:	4710      	bx	r2

08015970 <_ZN8touchgfx12TextProviderC1Ev>:
 8015970:	b538      	push	{r3, r4, r5, lr}
 8015972:	2500      	movs	r5, #0
 8015974:	2302      	movs	r3, #2
 8015976:	4604      	mov	r4, r0
 8015978:	e9c0 5500 	strd	r5, r5, [r0]
 801597c:	7403      	strb	r3, [r0, #16]
 801597e:	6145      	str	r5, [r0, #20]
 8015980:	7605      	strb	r5, [r0, #24]
 8015982:	83c5      	strh	r5, [r0, #30]
 8015984:	8405      	strh	r5, [r0, #32]
 8015986:	86c5      	strh	r5, [r0, #54]	@ 0x36
 8015988:	8705      	strh	r5, [r0, #56]	@ 0x38
 801598a:	87c5      	strh	r5, [r0, #62]	@ 0x3e
 801598c:	f8a0 5040 	strh.w	r5, [r0, #64]	@ 0x40
 8015990:	e9c0 5511 	strd	r5, r5, [r0, #68]	@ 0x44
 8015994:	220e      	movs	r2, #14
 8015996:	4629      	mov	r1, r5
 8015998:	304c      	adds	r0, #76	@ 0x4c
 801599a:	f010 fb30 	bl	8025ffe <memset>
 801599e:	2301      	movs	r3, #1
 80159a0:	4620      	mov	r0, r4
 80159a2:	f8a4 505a 	strh.w	r5, [r4, #90]	@ 0x5a
 80159a6:	f8a4 505c 	strh.w	r5, [r4, #92]	@ 0x5c
 80159aa:	f8a4 505e 	strh.w	r5, [r4, #94]	@ 0x5e
 80159ae:	f884 3060 	strb.w	r3, [r4, #96]	@ 0x60
 80159b2:	f884 5061 	strb.w	r5, [r4, #97]	@ 0x61
 80159b6:	f7f7 fedf 	bl	800d778 <_ZN8touchgfx12TextProvider18initializeInternalEv>
 80159ba:	4620      	mov	r0, r4
 80159bc:	bd38      	pop	{r3, r4, r5, pc}

080159be <_ZN8touchgfx12TextProvider11endOfStringEv>:
 80159be:	8ec3      	ldrh	r3, [r0, #54]	@ 0x36
 80159c0:	eb00 0043 	add.w	r0, r0, r3, lsl #1
 80159c4:	8c40      	ldrh	r0, [r0, #34]	@ 0x22
 80159c6:	fab0 f080 	clz	r0, r0
 80159ca:	0940      	lsrs	r0, r0, #5
 80159cc:	4770      	bx	lr

080159ce <_ZN8touchgfx12TextProvider19getNextCharInternalEv>:
 80159ce:	b530      	push	{r4, r5, lr}
 80159d0:	2500      	movs	r5, #0
 80159d2:	2401      	movs	r4, #1
 80159d4:	6843      	ldr	r3, [r0, #4]
 80159d6:	b913      	cbnz	r3, 80159de <_ZN8touchgfx12TextProvider19getNextCharInternalEv+0x10>
 80159d8:	6803      	ldr	r3, [r0, #0]
 80159da:	b313      	cbz	r3, 8015a22 <_ZN8touchgfx12TextProvider19getNextCharInternalEv+0x54>
 80159dc:	6043      	str	r3, [r0, #4]
 80159de:	7e03      	ldrb	r3, [r0, #24]
 80159e0:	b143      	cbz	r3, 80159f4 <_ZN8touchgfx12TextProvider19getNextCharInternalEv+0x26>
 80159e2:	6943      	ldr	r3, [r0, #20]
 80159e4:	b12b      	cbz	r3, 80159f2 <_ZN8touchgfx12TextProvider19getNextCharInternalEv+0x24>
 80159e6:	881a      	ldrh	r2, [r3, #0]
 80159e8:	b11a      	cbz	r2, 80159f2 <_ZN8touchgfx12TextProvider19getNextCharInternalEv+0x24>
 80159ea:	1c9a      	adds	r2, r3, #2
 80159ec:	6142      	str	r2, [r0, #20]
 80159ee:	8818      	ldrh	r0, [r3, #0]
 80159f0:	bd30      	pop	{r4, r5, pc}
 80159f2:	7605      	strb	r5, [r0, #24]
 80159f4:	6843      	ldr	r3, [r0, #4]
 80159f6:	8819      	ldrh	r1, [r3, #0]
 80159f8:	b199      	cbz	r1, 8015a22 <_ZN8touchgfx12TextProvider19getNextCharInternalEv+0x54>
 80159fa:	1c9a      	adds	r2, r3, #2
 80159fc:	2902      	cmp	r1, #2
 80159fe:	6042      	str	r2, [r0, #4]
 8015a00:	d1f5      	bne.n	80159ee <_ZN8touchgfx12TextProvider19getNextCharInternalEv+0x20>
 8015a02:	7c03      	ldrb	r3, [r0, #16]
 8015a04:	2b01      	cmp	r3, #1
 8015a06:	d8e5      	bhi.n	80159d4 <_ZN8touchgfx12TextProvider19getNextCharInternalEv+0x6>
 8015a08:	1c5a      	adds	r2, r3, #1
 8015a0a:	3302      	adds	r3, #2
 8015a0c:	7402      	strb	r2, [r0, #16]
 8015a0e:	f850 3023 	ldr.w	r3, [r0, r3, lsl #2]
 8015a12:	6143      	str	r3, [r0, #20]
 8015a14:	2b00      	cmp	r3, #0
 8015a16:	d0dd      	beq.n	80159d4 <_ZN8touchgfx12TextProvider19getNextCharInternalEv+0x6>
 8015a18:	881b      	ldrh	r3, [r3, #0]
 8015a1a:	2b00      	cmp	r3, #0
 8015a1c:	d0da      	beq.n	80159d4 <_ZN8touchgfx12TextProvider19getNextCharInternalEv+0x6>
 8015a1e:	7604      	strb	r4, [r0, #24]
 8015a20:	e7d8      	b.n	80159d4 <_ZN8touchgfx12TextProvider19getNextCharInternalEv+0x6>
 8015a22:	2000      	movs	r0, #0
 8015a24:	e7e4      	b.n	80159f0 <_ZN8touchgfx12TextProvider19getNextCharInternalEv+0x22>

08015a26 <_ZN8touchgfx12TextProvider10initializeEPKtSt9__va_listS2_PKNS_24FontContextualFormsTableE>:
 8015a26:	b430      	push	{r4, r5}
 8015a28:	6001      	str	r1, [r0, #0]
 8015a2a:	2100      	movs	r1, #0
 8015a2c:	6041      	str	r1, [r0, #4]
 8015a2e:	6815      	ldr	r5, [r2, #0]
 8015a30:	6085      	str	r5, [r0, #8]
 8015a32:	6852      	ldr	r2, [r2, #4]
 8015a34:	6443      	str	r3, [r0, #68]	@ 0x44
 8015a36:	9b02      	ldr	r3, [sp, #8]
 8015a38:	60c2      	str	r2, [r0, #12]
 8015a3a:	7401      	strb	r1, [r0, #16]
 8015a3c:	6141      	str	r1, [r0, #20]
 8015a3e:	7601      	strb	r1, [r0, #24]
 8015a40:	8701      	strh	r1, [r0, #56]	@ 0x38
 8015a42:	8401      	strh	r1, [r0, #32]
 8015a44:	f8a0 1040 	strh.w	r1, [r0, #64]	@ 0x40
 8015a48:	6483      	str	r3, [r0, #72]	@ 0x48
 8015a4a:	bc30      	pop	{r4, r5}
 8015a4c:	f7f7 be94 	b.w	800d778 <_ZN8touchgfx12TextProvider18initializeInternalEv>

08015a50 <_ZN8touchgfx12TextProvider10initializeEPKtS2_PKNS_24FontContextualFormsTableEz>:
 8015a50:	b408      	push	{r3}
 8015a52:	b510      	push	{r4, lr}
 8015a54:	b085      	sub	sp, #20
 8015a56:	ac07      	add	r4, sp, #28
 8015a58:	f854 3b04 	ldr.w	r3, [r4], #4
 8015a5c:	9300      	str	r3, [sp, #0]
 8015a5e:	4613      	mov	r3, r2
 8015a60:	4622      	mov	r2, r4
 8015a62:	9403      	str	r4, [sp, #12]
 8015a64:	f7ff ffdf 	bl	8015a26 <_ZN8touchgfx12TextProvider10initializeEPKtSt9__va_listS2_PKNS_24FontContextualFormsTableE>
 8015a68:	b005      	add	sp, #20
 8015a6a:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
 8015a6e:	b001      	add	sp, #4
 8015a70:	4770      	bx	lr

08015a72 <_ZN8touchgfx12TextProvider16adjustHindiGlyphEPKNS_9GlyphNodeE>:
 8015a72:	b5f0      	push	{r4, r5, r6, r7, lr}
 8015a74:	4605      	mov	r5, r0
 8015a76:	4608      	mov	r0, r1
 8015a78:	b1e9      	cbz	r1, 8015ab6 <_ZN8touchgfx12TextProvider16adjustHindiGlyphEPKNS_9GlyphNodeE+0x44>
 8015a7a:	f105 044c 	add.w	r4, r5, #76	@ 0x4c
 8015a7e:	460b      	mov	r3, r1
 8015a80:	f101 0708 	add.w	r7, r1, #8
 8015a84:	4622      	mov	r2, r4
 8015a86:	6818      	ldr	r0, [r3, #0]
 8015a88:	6859      	ldr	r1, [r3, #4]
 8015a8a:	4626      	mov	r6, r4
 8015a8c:	c603      	stmia	r6!, {r0, r1}
 8015a8e:	3308      	adds	r3, #8
 8015a90:	42bb      	cmp	r3, r7
 8015a92:	4634      	mov	r4, r6
 8015a94:	d1f7      	bne.n	8015a86 <_ZN8touchgfx12TextProvider16adjustHindiGlyphEPKNS_9GlyphNodeE+0x14>
 8015a96:	6818      	ldr	r0, [r3, #0]
 8015a98:	6030      	str	r0, [r6, #0]
 8015a9a:	889b      	ldrh	r3, [r3, #4]
 8015a9c:	80b3      	strh	r3, [r6, #4]
 8015a9e:	f895 3059 	ldrb.w	r3, [r5, #89]	@ 0x59
 8015aa2:	015b      	lsls	r3, r3, #5
 8015aa4:	f403 7180 	and.w	r1, r3, #256	@ 0x100
 8015aa8:	f895 3052 	ldrb.w	r3, [r5, #82]	@ 0x52
 8015aac:	430b      	orrs	r3, r1
 8015aae:	425b      	negs	r3, r3
 8015ab0:	f885 3055 	strb.w	r3, [r5, #85]	@ 0x55
 8015ab4:	4610      	mov	r0, r2
 8015ab6:	bdf0      	pop	{r4, r5, r6, r7, pc}

08015ab8 <_ZNK8touchgfx12TextProvider15thaiLookupGlyphEPKNS_9GlyphNodeEPKNS_4FontEt>:
 8015ab8:	b538      	push	{r3, r4, r5, lr}
 8015aba:	460c      	mov	r4, r1
 8015abc:	6811      	ldr	r1, [r2, #0]
 8015abe:	4610      	mov	r0, r2
 8015ac0:	68cd      	ldr	r5, [r1, #12]
 8015ac2:	4619      	mov	r1, r3
 8015ac4:	47a8      	blx	r5
 8015ac6:	2800      	cmp	r0, #0
 8015ac8:	bf08      	it	eq
 8015aca:	4620      	moveq	r0, r4
 8015acc:	bd38      	pop	{r3, r4, r5, pc}
	...

08015ad0 <_ZN8touchgfx12TextProvider15adjustThaiGlyphEPKNS_4FontEPKNS_9GlyphNodeE>:
 8015ad0:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 8015ad4:	468c      	mov	ip, r1
 8015ad6:	4605      	mov	r5, r0
 8015ad8:	4614      	mov	r4, r2
 8015ada:	b942      	cbnz	r2, 8015aee <_ZN8touchgfx12TextProvider15adjustThaiGlyphEPKNS_4FontEPKNS_9GlyphNodeE+0x1e>
 8015adc:	f8a5 205a 	strh.w	r2, [r5, #90]	@ 0x5a
 8015ae0:	f8a5 205c 	strh.w	r2, [r5, #92]	@ 0x5c
 8015ae4:	f8a5 205e 	strh.w	r2, [r5, #94]	@ 0x5e
 8015ae8:	4620      	mov	r0, r4
 8015aea:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
 8015aee:	7b50      	ldrb	r0, [r2, #13]
 8015af0:	8893      	ldrh	r3, [r2, #4]
 8015af2:	0106      	lsls	r6, r0, #4
 8015af4:	f406 7280 	and.w	r2, r6, #256	@ 0x100
 8015af8:	79e6      	ldrb	r6, [r4, #7]
 8015afa:	f46f 6163 	mvn.w	r1, #3632	@ 0xe30
 8015afe:	4316      	orrs	r6, r2
 8015b00:	185a      	adds	r2, r3, r1
 8015b02:	b291      	uxth	r1, r2
 8015b04:	291d      	cmp	r1, #29
 8015b06:	b2b7      	uxth	r7, r6
 8015b08:	d87e      	bhi.n	8015c08 <_ZN8touchgfx12TextProvider15adjustThaiGlyphEPKNS_4FontEPKNS_9GlyphNodeE+0x138>
 8015b0a:	2201      	movs	r2, #1
 8015b0c:	408a      	lsls	r2, r1
 8015b0e:	498a      	ldr	r1, [pc, #552]	@ (8015d38 <_ZN8touchgfx12TextProvider15adjustThaiGlyphEPKNS_4FontEPKNS_9GlyphNodeE+0x268>)
 8015b10:	420a      	tst	r2, r1
 8015b12:	ea4f 06e6 	mov.w	r6, r6, asr #3
 8015b16:	d12d      	bne.n	8015b74 <_ZN8touchgfx12TextProvider15adjustThaiGlyphEPKNS_4FontEPKNS_9GlyphNodeE+0xa4>
 8015b18:	f412 7f60 	tst.w	r2, #896	@ 0x380
 8015b1c:	d074      	beq.n	8015c08 <_ZN8touchgfx12TextProvider15adjustThaiGlyphEPKNS_4FontEPKNS_9GlyphNodeE+0x138>
 8015b1e:	f105 024c 	add.w	r2, r5, #76	@ 0x4c
 8015b22:	4623      	mov	r3, r4
 8015b24:	f104 0e08 	add.w	lr, r4, #8
 8015b28:	4614      	mov	r4, r2
 8015b2a:	6818      	ldr	r0, [r3, #0]
 8015b2c:	6859      	ldr	r1, [r3, #4]
 8015b2e:	4694      	mov	ip, r2
 8015b30:	e8ac 0003 	stmia.w	ip!, {r0, r1}
 8015b34:	3308      	adds	r3, #8
 8015b36:	4573      	cmp	r3, lr
 8015b38:	4662      	mov	r2, ip
 8015b3a:	d1f6      	bne.n	8015b2a <_ZN8touchgfx12TextProvider15adjustThaiGlyphEPKNS_4FontEPKNS_9GlyphNodeE+0x5a>
 8015b3c:	6818      	ldr	r0, [r3, #0]
 8015b3e:	f8cc 0000 	str.w	r0, [ip]
 8015b42:	889b      	ldrh	r3, [r3, #4]
 8015b44:	f8ac 3004 	strh.w	r3, [ip, #4]
 8015b48:	f8b5 105c 	ldrh.w	r1, [r5, #92]	@ 0x5c
 8015b4c:	f895 0059 	ldrb.w	r0, [r5, #89]	@ 0x59
 8015b50:	b2b3      	uxth	r3, r6
 8015b52:	1aca      	subs	r2, r1, r3
 8015b54:	b292      	uxth	r2, r2
 8015b56:	f885 2054 	strb.w	r2, [r5, #84]	@ 0x54
 8015b5a:	10d2      	asrs	r2, r2, #3
 8015b5c:	f020 0060 	bic.w	r0, r0, #96	@ 0x60
 8015b60:	f002 0260 	and.w	r2, r2, #96	@ 0x60
 8015b64:	4302      	orrs	r2, r0
 8015b66:	1bcf      	subs	r7, r1, r7
 8015b68:	f885 2059 	strb.w	r2, [r5, #89]	@ 0x59
 8015b6c:	1afb      	subs	r3, r7, r3
 8015b6e:	f8a5 305c 	strh.w	r3, [r5, #92]	@ 0x5c
 8015b72:	e7b9      	b.n	8015ae8 <_ZN8touchgfx12TextProvider15adjustThaiGlyphEPKNS_4FontEPKNS_9GlyphNodeE+0x18>
 8015b74:	f105 024c 	add.w	r2, r5, #76	@ 0x4c
 8015b78:	4623      	mov	r3, r4
 8015b7a:	f104 0808 	add.w	r8, r4, #8
 8015b7e:	4614      	mov	r4, r2
 8015b80:	6818      	ldr	r0, [r3, #0]
 8015b82:	6859      	ldr	r1, [r3, #4]
 8015b84:	4696      	mov	lr, r2
 8015b86:	e8ae 0003 	stmia.w	lr!, {r0, r1}
 8015b8a:	3308      	adds	r3, #8
 8015b8c:	4543      	cmp	r3, r8
 8015b8e:	4672      	mov	r2, lr
 8015b90:	d1f6      	bne.n	8015b80 <_ZN8touchgfx12TextProvider15adjustThaiGlyphEPKNS_4FontEPKNS_9GlyphNodeE+0xb0>
 8015b92:	6818      	ldr	r0, [r3, #0]
 8015b94:	f8ce 0000 	str.w	r0, [lr]
 8015b98:	889b      	ldrh	r3, [r3, #4]
 8015b9a:	f8ae 3004 	strh.w	r3, [lr, #4]
 8015b9e:	8eeb      	ldrh	r3, [r5, #54]	@ 0x36
 8015ba0:	eb05 0343 	add.w	r3, r5, r3, lsl #1
 8015ba4:	8c59      	ldrh	r1, [r3, #34]	@ 0x22
 8015ba6:	f640 6333 	movw	r3, #3635	@ 0xe33
 8015baa:	4299      	cmp	r1, r3
 8015bac:	d111      	bne.n	8015bd2 <_ZN8touchgfx12TextProvider15adjustThaiGlyphEPKNS_4FontEPKNS_9GlyphNodeE+0x102>
 8015bae:	f8dc 3000 	ldr.w	r3, [ip]
 8015bb2:	4660      	mov	r0, ip
 8015bb4:	68db      	ldr	r3, [r3, #12]
 8015bb6:	4798      	blx	r3
 8015bb8:	7b41      	ldrb	r1, [r0, #13]
 8015bba:	00cb      	lsls	r3, r1, #3
 8015bbc:	f403 7280 	and.w	r2, r3, #256	@ 0x100
 8015bc0:	7a03      	ldrb	r3, [r0, #8]
 8015bc2:	4313      	orrs	r3, r2
 8015bc4:	064a      	lsls	r2, r1, #25
 8015bc6:	bf44      	itt	mi
 8015bc8:	f5a3 7300 	submi.w	r3, r3, #512	@ 0x200
 8015bcc:	b21b      	sxthmi	r3, r3
 8015bce:	f8a5 305a 	strh.w	r3, [r5, #90]	@ 0x5a
 8015bd2:	f8b5 305a 	ldrh.w	r3, [r5, #90]	@ 0x5a
 8015bd6:	f895 2059 	ldrb.w	r2, [r5, #89]	@ 0x59
 8015bda:	443b      	add	r3, r7
 8015bdc:	4433      	add	r3, r6
 8015bde:	b29b      	uxth	r3, r3
 8015be0:	f8a5 305a 	strh.w	r3, [r5, #90]	@ 0x5a
 8015be4:	f885 3054 	strb.w	r3, [r5, #84]	@ 0x54
 8015be8:	10db      	asrs	r3, r3, #3
 8015bea:	f022 0260 	bic.w	r2, r2, #96	@ 0x60
 8015bee:	f003 0360 	and.w	r3, r3, #96	@ 0x60
 8015bf2:	4313      	orrs	r3, r2
 8015bf4:	f885 3059 	strb.w	r3, [r5, #89]	@ 0x59
 8015bf8:	f895 205e 	ldrb.w	r2, [r5, #94]	@ 0x5e
 8015bfc:	f895 3055 	ldrb.w	r3, [r5, #85]	@ 0x55
 8015c00:	1a9b      	subs	r3, r3, r2
 8015c02:	f885 3055 	strb.w	r3, [r5, #85]	@ 0x55
 8015c06:	e76f      	b.n	8015ae8 <_ZN8touchgfx12TextProvider15adjustThaiGlyphEPKNS_4FontEPKNS_9GlyphNodeE+0x18>
 8015c08:	f023 0204 	bic.w	r2, r3, #4
 8015c0c:	f640 611b 	movw	r1, #3611	@ 0xe1b
 8015c10:	428a      	cmp	r2, r1
 8015c12:	d003      	beq.n	8015c1c <_ZN8touchgfx12TextProvider15adjustThaiGlyphEPKNS_4FontEPKNS_9GlyphNodeE+0x14c>
 8015c14:	f640 621d 	movw	r2, #3613	@ 0xe1d
 8015c18:	4293      	cmp	r3, r2
 8015c1a:	d137      	bne.n	8015c8c <_ZN8touchgfx12TextProvider15adjustThaiGlyphEPKNS_4FontEPKNS_9GlyphNodeE+0x1bc>
 8015c1c:	f105 064c 	add.w	r6, r5, #76	@ 0x4c
 8015c20:	4622      	mov	r2, r4
 8015c22:	f104 0808 	add.w	r8, r4, #8
 8015c26:	4634      	mov	r4, r6
 8015c28:	6810      	ldr	r0, [r2, #0]
 8015c2a:	6851      	ldr	r1, [r2, #4]
 8015c2c:	46b6      	mov	lr, r6
 8015c2e:	e8ae 0003 	stmia.w	lr!, {r0, r1}
 8015c32:	3208      	adds	r2, #8
 8015c34:	4542      	cmp	r2, r8
 8015c36:	4676      	mov	r6, lr
 8015c38:	d1f6      	bne.n	8015c28 <_ZN8touchgfx12TextProvider15adjustThaiGlyphEPKNS_4FontEPKNS_9GlyphNodeE+0x158>
 8015c3a:	6810      	ldr	r0, [r2, #0]
 8015c3c:	f8ce 0000 	str.w	r0, [lr]
 8015c40:	8892      	ldrh	r2, [r2, #4]
 8015c42:	f8ae 2004 	strh.w	r2, [lr, #4]
 8015c46:	3b01      	subs	r3, #1
 8015c48:	b29b      	uxth	r3, r3
 8015c4a:	4662      	mov	r2, ip
 8015c4c:	4621      	mov	r1, r4
 8015c4e:	4628      	mov	r0, r5
 8015c50:	f7ff ff32 	bl	8015ab8 <_ZNK8touchgfx12TextProvider15thaiLookupGlyphEPKNS_9GlyphNodeEPKNS_4FontEt>
 8015c54:	7b41      	ldrb	r1, [r0, #13]
 8015c56:	00cb      	lsls	r3, r1, #3
 8015c58:	f403 7280 	and.w	r2, r3, #256	@ 0x100
 8015c5c:	7a03      	ldrb	r3, [r0, #8]
 8015c5e:	0648      	lsls	r0, r1, #25
 8015c60:	ea43 0302 	orr.w	r3, r3, r2
 8015c64:	bf44      	itt	mi
 8015c66:	f5a3 7300 	submi.w	r3, r3, #512	@ 0x200
 8015c6a:	b21b      	sxthmi	r3, r3
 8015c6c:	f8a5 305a 	strh.w	r3, [r5, #90]	@ 0x5a
 8015c70:	f895 3059 	ldrb.w	r3, [r5, #89]	@ 0x59
 8015c74:	f895 2056 	ldrb.w	r2, [r5, #86]	@ 0x56
 8015c78:	005b      	lsls	r3, r3, #1
 8015c7a:	f403 7380 	and.w	r3, r3, #256	@ 0x100
 8015c7e:	4313      	orrs	r3, r2
 8015c80:	115a      	asrs	r2, r3, #5
 8015c82:	eb02 0393 	add.w	r3, r2, r3, lsr #2
 8015c86:	f8a5 305e 	strh.w	r3, [r5, #94]	@ 0x5e
 8015c8a:	e046      	b.n	8015d1a <_ZN8touchgfx12TextProvider15adjustThaiGlyphEPKNS_4FontEPKNS_9GlyphNodeE+0x24a>
 8015c8c:	00c2      	lsls	r2, r0, #3
 8015c8e:	f402 7180 	and.w	r1, r2, #256	@ 0x100
 8015c92:	7a22      	ldrb	r2, [r4, #8]
 8015c94:	430a      	orrs	r2, r1
 8015c96:	0641      	lsls	r1, r0, #25
 8015c98:	bf44      	itt	mi
 8015c9a:	f5a2 7200 	submi.w	r2, r2, #512	@ 0x200
 8015c9e:	b212      	sxthmi	r2, r2
 8015ca0:	f8a5 205a 	strh.w	r2, [r5, #90]	@ 0x5a
 8015ca4:	f640 6109 	movw	r1, #3593	@ 0xe09
 8015ca8:	f023 0210 	bic.w	r2, r3, #16
 8015cac:	428a      	cmp	r2, r1
 8015cae:	d003      	beq.n	8015cb8 <_ZN8touchgfx12TextProvider15adjustThaiGlyphEPKNS_4FontEPKNS_9GlyphNodeE+0x1e8>
 8015cb0:	f640 6213 	movw	r2, #3603	@ 0xe13
 8015cb4:	4293      	cmp	r3, r2
 8015cb6:	d13d      	bne.n	8015d34 <_ZN8touchgfx12TextProvider15adjustThaiGlyphEPKNS_4FontEPKNS_9GlyphNodeE+0x264>
 8015cb8:	f105 024c 	add.w	r2, r5, #76	@ 0x4c
 8015cbc:	f104 0808 	add.w	r8, r4, #8
 8015cc0:	4696      	mov	lr, r2
 8015cc2:	6820      	ldr	r0, [r4, #0]
 8015cc4:	6861      	ldr	r1, [r4, #4]
 8015cc6:	4616      	mov	r6, r2
 8015cc8:	c603      	stmia	r6!, {r0, r1}
 8015cca:	3408      	adds	r4, #8
 8015ccc:	4544      	cmp	r4, r8
 8015cce:	4632      	mov	r2, r6
 8015cd0:	d1f7      	bne.n	8015cc2 <_ZN8touchgfx12TextProvider15adjustThaiGlyphEPKNS_4FontEPKNS_9GlyphNodeE+0x1f2>
 8015cd2:	6820      	ldr	r0, [r4, #0]
 8015cd4:	6030      	str	r0, [r6, #0]
 8015cd6:	88a1      	ldrh	r1, [r4, #4]
 8015cd8:	80b1      	strh	r1, [r6, #4]
 8015cda:	f895 6059 	ldrb.w	r6, [r5, #89]	@ 0x59
 8015cde:	0076      	lsls	r6, r6, #1
 8015ce0:	f406 7280 	and.w	r2, r6, #256	@ 0x100
 8015ce4:	f895 6056 	ldrb.w	r6, [r5, #86]	@ 0x56
 8015ce8:	4316      	orrs	r6, r2
 8015cea:	f640 6213 	movw	r2, #3603	@ 0xe13
 8015cee:	4293      	cmp	r3, r2
 8015cf0:	bf1a      	itte	ne
 8015cf2:	f103 33ff 	addne.w	r3, r3, #4294967295
 8015cf6:	b29b      	uxthne	r3, r3
 8015cf8:	f640 630c 	movweq	r3, #3596	@ 0xe0c
 8015cfc:	4662      	mov	r2, ip
 8015cfe:	4671      	mov	r1, lr
 8015d00:	4628      	mov	r0, r5
 8015d02:	4674      	mov	r4, lr
 8015d04:	f7ff fed8 	bl	8015ab8 <_ZNK8touchgfx12TextProvider15thaiLookupGlyphEPKNS_9GlyphNodeEPKNS_4FontEt>
 8015d08:	7b43      	ldrb	r3, [r0, #13]
 8015d0a:	7a82      	ldrb	r2, [r0, #10]
 8015d0c:	005b      	lsls	r3, r3, #1
 8015d0e:	f403 7380 	and.w	r3, r3, #256	@ 0x100
 8015d12:	4313      	orrs	r3, r2
 8015d14:	1af6      	subs	r6, r6, r3
 8015d16:	f8a5 605e 	strh.w	r6, [r5, #94]	@ 0x5e
 8015d1a:	7b61      	ldrb	r1, [r4, #13]
 8015d1c:	00cb      	lsls	r3, r1, #3
 8015d1e:	f403 7280 	and.w	r2, r3, #256	@ 0x100
 8015d22:	7a23      	ldrb	r3, [r4, #8]
 8015d24:	4313      	orrs	r3, r2
 8015d26:	064a      	lsls	r2, r1, #25
 8015d28:	bf44      	itt	mi
 8015d2a:	f5a3 7300 	submi.w	r3, r3, #512	@ 0x200
 8015d2e:	b21b      	sxthmi	r3, r3
 8015d30:	1bdb      	subs	r3, r3, r7
 8015d32:	e71c      	b.n	8015b6e <_ZN8touchgfx12TextProvider15adjustThaiGlyphEPKNS_4FontEPKNS_9GlyphNodeE+0x9e>
 8015d34:	2300      	movs	r3, #0
 8015d36:	e7a6      	b.n	8015c86 <_ZN8touchgfx12TextProvider15adjustThaiGlyphEPKNS_4FontEPKNS_9GlyphNodeE+0x1b6>
 8015d38:	3fc00079 	.word	0x3fc00079

08015d3c <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt>:
 8015d3c:	e92d 43f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, lr}
 8015d40:	4604      	mov	r4, r0
 8015d42:	b942      	cbnz	r2, 8015d56 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x1a>
 8015d44:	f44f 4300 	mov.w	r3, #32768	@ 0x8000
 8015d48:	f8a0 305a 	strh.w	r3, [r0, #90]	@ 0x5a
 8015d4c:	f8a0 305c 	strh.w	r3, [r0, #92]	@ 0x5c
 8015d50:	f8a4 305e 	strh.w	r3, [r4, #94]	@ 0x5e
 8015d54:	e047      	b.n	8015de6 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0xaa>
 8015d56:	7b51      	ldrb	r1, [r2, #13]
 8015d58:	8893      	ldrh	r3, [r2, #4]
 8015d5a:	010d      	lsls	r5, r1, #4
 8015d5c:	f405 7080 	and.w	r0, r5, #256	@ 0x100
 8015d60:	79d5      	ldrb	r5, [r2, #7]
 8015d62:	4305      	orrs	r5, r0
 8015d64:	2d04      	cmp	r5, #4
 8015d66:	bfcc      	ite	gt
 8015d68:	ea4f 0e95 	movgt.w	lr, r5, lsr #2
 8015d6c:	f04f 0e01 	movle.w	lr, #1
 8015d70:	f5b3 6fdd 	cmp.w	r3, #1768	@ 0x6e8
 8015d74:	f200 80ab 	bhi.w	8015ece <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x192>
 8015d78:	f240 60e7 	movw	r0, #1767	@ 0x6e7
 8015d7c:	4283      	cmp	r3, r0
 8015d7e:	d216      	bcs.n	8015dae <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x72>
 8015d80:	f240 605b 	movw	r0, #1627	@ 0x65b
 8015d84:	4283      	cmp	r3, r0
 8015d86:	d859      	bhi.n	8015e3c <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x100>
 8015d88:	f240 6057 	movw	r0, #1623	@ 0x657
 8015d8c:	4283      	cmp	r3, r0
 8015d8e:	d20e      	bcs.n	8015dae <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x72>
 8015d90:	f5b3 6fca 	cmp.w	r3, #1616	@ 0x650
 8015d94:	d24a      	bcs.n	8015e2c <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0xf0>
 8015d96:	f240 604e 	movw	r0, #1614	@ 0x64e
 8015d9a:	4283      	cmp	r3, r0
 8015d9c:	d207      	bcs.n	8015dae <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x72>
 8015d9e:	f240 601a 	movw	r0, #1562	@ 0x61a
 8015da2:	4283      	cmp	r3, r0
 8015da4:	d02a      	beq.n	8015dfc <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0xc0>
 8015da6:	d821      	bhi.n	8015dec <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0xb0>
 8015da8:	f5b3 6fc2 	cmp.w	r3, #1552	@ 0x610
 8015dac:	d35b      	bcc.n	8015e66 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x12a>
 8015dae:	f9b4 305a 	ldrsh.w	r3, [r4, #90]	@ 0x5a
 8015db2:	f513 4f00 	cmn.w	r3, #32768	@ 0x8000
 8015db6:	f040 80d0 	bne.w	8015f5a <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x21e>
 8015dba:	f9b4 005c 	ldrsh.w	r0, [r4, #92]	@ 0x5c
 8015dbe:	f510 4f00 	cmn.w	r0, #32768	@ 0x8000
 8015dc2:	f040 80ca 	bne.w	8015f5a <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x21e>
 8015dc6:	00cb      	lsls	r3, r1, #3
 8015dc8:	f403 7080 	and.w	r0, r3, #256	@ 0x100
 8015dcc:	7a13      	ldrb	r3, [r2, #8]
 8015dce:	0649      	lsls	r1, r1, #25
 8015dd0:	ea43 0300 	orr.w	r3, r3, r0
 8015dd4:	bf44      	itt	mi
 8015dd6:	f5a3 7300 	submi.w	r3, r3, #512	@ 0x200
 8015dda:	b21b      	sxthmi	r3, r3
 8015ddc:	f8a4 305a 	strh.w	r3, [r4, #90]	@ 0x5a
 8015de0:	1b5d      	subs	r5, r3, r5
 8015de2:	f8a4 505c 	strh.w	r5, [r4, #92]	@ 0x5c
 8015de6:	4610      	mov	r0, r2
 8015de8:	e8bd 83f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, pc}
 8015dec:	f240 604b 	movw	r0, #1611	@ 0x64b
 8015df0:	4283      	cmp	r3, r0
 8015df2:	d338      	bcc.n	8015e66 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x12a>
 8015df4:	f240 604c 	movw	r0, #1612	@ 0x64c
 8015df8:	4283      	cmp	r3, r0
 8015dfa:	d9d8      	bls.n	8015dae <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x72>
 8015dfc:	f9b4 005a 	ldrsh.w	r0, [r4, #90]	@ 0x5a
 8015e00:	f9b4 305c 	ldrsh.w	r3, [r4, #92]	@ 0x5c
 8015e04:	f510 4f00 	cmn.w	r0, #32768	@ 0x8000
 8015e08:	f040 80f2 	bne.w	8015ff0 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x2b4>
 8015e0c:	f513 4f00 	cmn.w	r3, #32768	@ 0x8000
 8015e10:	f040 80ee 	bne.w	8015ff0 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x2b4>
 8015e14:	00cb      	lsls	r3, r1, #3
 8015e16:	f403 7080 	and.w	r0, r3, #256	@ 0x100
 8015e1a:	7a13      	ldrb	r3, [r2, #8]
 8015e1c:	064e      	lsls	r6, r1, #25
 8015e1e:	ea43 0300 	orr.w	r3, r3, r0
 8015e22:	bf44      	itt	mi
 8015e24:	f5a3 7300 	submi.w	r3, r3, #512	@ 0x200
 8015e28:	b21b      	sxthmi	r3, r3
 8015e2a:	e7d9      	b.n	8015de0 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0xa4>
 8015e2c:	f240 6054 	movw	r0, #1620	@ 0x654
 8015e30:	4283      	cmp	r3, r0
 8015e32:	d8e3      	bhi.n	8015dfc <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0xc0>
 8015e34:	f5b3 6fca 	cmp.w	r3, #1616	@ 0x650
 8015e38:	d9e0      	bls.n	8015dfc <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0xc0>
 8015e3a:	e7b8      	b.n	8015dae <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x72>
 8015e3c:	f240 6074 	movw	r0, #1652	@ 0x674
 8015e40:	4283      	cmp	r3, r0
 8015e42:	d0b4      	beq.n	8015dae <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x72>
 8015e44:	d82d      	bhi.n	8015ea2 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x166>
 8015e46:	f240 605e 	movw	r0, #1630	@ 0x65e
 8015e4a:	4283      	cmp	r3, r0
 8015e4c:	d804      	bhi.n	8015e58 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x11c>
 8015e4e:	f240 605d 	movw	r0, #1629	@ 0x65d
 8015e52:	4283      	cmp	r3, r0
 8015e54:	d3d2      	bcc.n	8015dfc <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0xc0>
 8015e56:	e7aa      	b.n	8015dae <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x72>
 8015e58:	f240 605f 	movw	r0, #1631	@ 0x65f
 8015e5c:	4283      	cmp	r3, r0
 8015e5e:	d0cd      	beq.n	8015dfc <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0xc0>
 8015e60:	f5b3 6fce 	cmp.w	r3, #1648	@ 0x670
 8015e64:	d0a3      	beq.n	8015dae <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x72>
 8015e66:	00cb      	lsls	r3, r1, #3
 8015e68:	f403 7080 	and.w	r0, r3, #256	@ 0x100
 8015e6c:	7a13      	ldrb	r3, [r2, #8]
 8015e6e:	0649      	lsls	r1, r1, #25
 8015e70:	ea43 0300 	orr.w	r3, r3, r0
 8015e74:	bf44      	itt	mi
 8015e76:	f5a3 7300 	submi.w	r3, r3, #512	@ 0x200
 8015e7a:	b21b      	sxthmi	r3, r3
 8015e7c:	1b5d      	subs	r5, r3, r5
 8015e7e:	f8a4 305a 	strh.w	r3, [r4, #90]	@ 0x5a
 8015e82:	f8a4 505c 	strh.w	r5, [r4, #92]	@ 0x5c
 8015e86:	7b53      	ldrb	r3, [r2, #13]
 8015e88:	015b      	lsls	r3, r3, #5
 8015e8a:	f403 7180 	and.w	r1, r3, #256	@ 0x100
 8015e8e:	7993      	ldrb	r3, [r2, #6]
 8015e90:	430b      	orrs	r3, r1
 8015e92:	005b      	lsls	r3, r3, #1
 8015e94:	2105      	movs	r1, #5
 8015e96:	fb93 f3f1 	sdiv	r3, r3, r1
 8015e9a:	f992 1009 	ldrsb.w	r1, [r2, #9]
 8015e9e:	440b      	add	r3, r1
 8015ea0:	e756      	b.n	8015d50 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x14>
 8015ea2:	f240 60e2 	movw	r0, #1762	@ 0x6e2
 8015ea6:	4283      	cmp	r3, r0
 8015ea8:	d809      	bhi.n	8015ebe <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x182>
 8015eaa:	f240 60df 	movw	r0, #1759	@ 0x6df
 8015eae:	4283      	cmp	r3, r0
 8015eb0:	f4bf af7d 	bcs.w	8015dae <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x72>
 8015eb4:	f2a3 63d6 	subw	r3, r3, #1750	@ 0x6d6
 8015eb8:	2b05      	cmp	r3, #5
 8015eba:	d8d4      	bhi.n	8015e66 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x12a>
 8015ebc:	e777      	b.n	8015dae <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x72>
 8015ebe:	f240 60e3 	movw	r0, #1763	@ 0x6e3
 8015ec2:	4283      	cmp	r3, r0
 8015ec4:	d09a      	beq.n	8015dfc <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0xc0>
 8015ec6:	f240 60e4 	movw	r0, #1764	@ 0x6e4
 8015eca:	4283      	cmp	r3, r0
 8015ecc:	e7ca      	b.n	8015e64 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x128>
 8015ece:	f5b3 6f0f 	cmp.w	r3, #2288	@ 0x8f0
 8015ed2:	d22b      	bcs.n	8015f2c <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x1f0>
 8015ed4:	f640 00ed 	movw	r0, #2285	@ 0x8ed
 8015ed8:	4283      	cmp	r3, r0
 8015eda:	d28f      	bcs.n	8015dfc <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0xc0>
 8015edc:	f640 00e5 	movw	r0, #2277	@ 0x8e5
 8015ee0:	4283      	cmp	r3, r0
 8015ee2:	d816      	bhi.n	8015f12 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x1d6>
 8015ee4:	f640 00e4 	movw	r0, #2276	@ 0x8e4
 8015ee8:	4283      	cmp	r3, r0
 8015eea:	f4bf af60 	bcs.w	8015dae <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x72>
 8015eee:	f240 60ec 	movw	r0, #1772	@ 0x6ec
 8015ef2:	4283      	cmp	r3, r0
 8015ef4:	d80a      	bhi.n	8015f0c <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x1d0>
 8015ef6:	f240 60eb 	movw	r0, #1771	@ 0x6eb
 8015efa:	4283      	cmp	r3, r0
 8015efc:	f4bf af57 	bcs.w	8015dae <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x72>
 8015f00:	f240 60ea 	movw	r0, #1770	@ 0x6ea
 8015f04:	4283      	cmp	r3, r0
 8015f06:	f43f af79 	beq.w	8015dfc <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0xc0>
 8015f0a:	e7ac      	b.n	8015e66 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x12a>
 8015f0c:	f240 60ed 	movw	r0, #1773	@ 0x6ed
 8015f10:	e7f8      	b.n	8015f04 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x1c8>
 8015f12:	f640 00e8 	movw	r0, #2280	@ 0x8e8
 8015f16:	4283      	cmp	r3, r0
 8015f18:	d802      	bhi.n	8015f20 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x1e4>
 8015f1a:	f640 00e7 	movw	r0, #2279	@ 0x8e7
 8015f1e:	e798      	b.n	8015e52 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x116>
 8015f20:	f640 00e9 	movw	r0, #2281	@ 0x8e9
 8015f24:	4283      	cmp	r3, r0
 8015f26:	f47f af42 	bne.w	8015dae <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x72>
 8015f2a:	e767      	b.n	8015dfc <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0xc0>
 8015f2c:	f640 00f6 	movw	r0, #2294	@ 0x8f6
 8015f30:	4283      	cmp	r3, r0
 8015f32:	f43f af63 	beq.w	8015dfc <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0xc0>
 8015f36:	d802      	bhi.n	8015f3e <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x202>
 8015f38:	f640 00f2 	movw	r0, #2290	@ 0x8f2
 8015f3c:	e7f2      	b.n	8015f24 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x1e8>
 8015f3e:	f640 00fa 	movw	r0, #2298	@ 0x8fa
 8015f42:	4283      	cmp	r3, r0
 8015f44:	d805      	bhi.n	8015f52 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x216>
 8015f46:	f640 00f9 	movw	r0, #2297	@ 0x8f9
 8015f4a:	4283      	cmp	r3, r0
 8015f4c:	f4ff af2f 	bcc.w	8015dae <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x72>
 8015f50:	e754      	b.n	8015dfc <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0xc0>
 8015f52:	f640 00fe 	movw	r0, #2302	@ 0x8fe
 8015f56:	4283      	cmp	r3, r0
 8015f58:	e7af      	b.n	8015eba <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x17e>
 8015f5a:	f104 0c4c 	add.w	ip, r4, #76	@ 0x4c
 8015f5e:	4617      	mov	r7, r2
 8015f60:	f102 0808 	add.w	r8, r2, #8
 8015f64:	4666      	mov	r6, ip
 8015f66:	6838      	ldr	r0, [r7, #0]
 8015f68:	6879      	ldr	r1, [r7, #4]
 8015f6a:	46e6      	mov	lr, ip
 8015f6c:	e8ae 0003 	stmia.w	lr!, {r0, r1}
 8015f70:	3708      	adds	r7, #8
 8015f72:	4547      	cmp	r7, r8
 8015f74:	46f4      	mov	ip, lr
 8015f76:	d1f6      	bne.n	8015f66 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x22a>
 8015f78:	6838      	ldr	r0, [r7, #0]
 8015f7a:	f8ce 0000 	str.w	r0, [lr]
 8015f7e:	88b9      	ldrh	r1, [r7, #4]
 8015f80:	f8ae 1004 	strh.w	r1, [lr, #4]
 8015f84:	f9b4 005e 	ldrsh.w	r0, [r4, #94]	@ 0x5e
 8015f88:	f510 4f00 	cmn.w	r0, #32768	@ 0x8000
 8015f8c:	d009      	beq.n	8015fa2 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x266>
 8015f8e:	7b51      	ldrb	r1, [r2, #13]
 8015f90:	7992      	ldrb	r2, [r2, #6]
 8015f92:	0149      	lsls	r1, r1, #5
 8015f94:	f401 7180 	and.w	r1, r1, #256	@ 0x100
 8015f98:	4311      	orrs	r1, r2
 8015f9a:	eba0 0051 	sub.w	r0, r0, r1, lsr #1
 8015f9e:	f884 0055 	strb.w	r0, [r4, #85]	@ 0x55
 8015fa2:	f513 4f00 	cmn.w	r3, #32768	@ 0x8000
 8015fa6:	b2ad      	uxth	r5, r5
 8015fa8:	d00d      	beq.n	8015fc6 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x28a>
 8015faa:	442b      	add	r3, r5
 8015fac:	b29b      	uxth	r3, r3
 8015fae:	f894 2059 	ldrb.w	r2, [r4, #89]	@ 0x59
 8015fb2:	f884 3054 	strb.w	r3, [r4, #84]	@ 0x54
 8015fb6:	10db      	asrs	r3, r3, #3
 8015fb8:	f022 0260 	bic.w	r2, r2, #96	@ 0x60
 8015fbc:	f003 0360 	and.w	r3, r3, #96	@ 0x60
 8015fc0:	4313      	orrs	r3, r2
 8015fc2:	f884 3059 	strb.w	r3, [r4, #89]	@ 0x59
 8015fc6:	f894 1059 	ldrb.w	r1, [r4, #89]	@ 0x59
 8015fca:	00cb      	lsls	r3, r1, #3
 8015fcc:	f403 7280 	and.w	r2, r3, #256	@ 0x100
 8015fd0:	f894 3054 	ldrb.w	r3, [r4, #84]	@ 0x54
 8015fd4:	064f      	lsls	r7, r1, #25
 8015fd6:	ea43 0302 	orr.w	r3, r3, r2
 8015fda:	bf44      	itt	mi
 8015fdc:	f5a3 7300 	submi.w	r3, r3, #512	@ 0x200
 8015fe0:	b21b      	sxthmi	r3, r3
 8015fe2:	f8a4 305a 	strh.w	r3, [r4, #90]	@ 0x5a
 8015fe6:	1b5b      	subs	r3, r3, r5
 8015fe8:	f8a4 305c 	strh.w	r3, [r4, #92]	@ 0x5c
 8015fec:	4632      	mov	r2, r6
 8015fee:	e6fa      	b.n	8015de6 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0xaa>
 8015ff0:	f104 0c4c 	add.w	ip, r4, #76	@ 0x4c
 8015ff4:	4617      	mov	r7, r2
 8015ff6:	f102 0908 	add.w	r9, r2, #8
 8015ffa:	4666      	mov	r6, ip
 8015ffc:	6838      	ldr	r0, [r7, #0]
 8015ffe:	6879      	ldr	r1, [r7, #4]
 8016000:	46e0      	mov	r8, ip
 8016002:	e8a8 0003 	stmia.w	r8!, {r0, r1}
 8016006:	3708      	adds	r7, #8
 8016008:	454f      	cmp	r7, r9
 801600a:	46c4      	mov	ip, r8
 801600c:	d1f6      	bne.n	8015ffc <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x2c0>
 801600e:	6838      	ldr	r0, [r7, #0]
 8016010:	f8c8 0000 	str.w	r0, [r8]
 8016014:	88b9      	ldrh	r1, [r7, #4]
 8016016:	f8a8 1004 	strh.w	r1, [r8, #4]
 801601a:	f9b4 005e 	ldrsh.w	r0, [r4, #94]	@ 0x5e
 801601e:	f510 4f00 	cmn.w	r0, #32768	@ 0x8000
 8016022:	d009      	beq.n	8016038 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x2fc>
 8016024:	7b51      	ldrb	r1, [r2, #13]
 8016026:	7992      	ldrb	r2, [r2, #6]
 8016028:	0149      	lsls	r1, r1, #5
 801602a:	f401 7180 	and.w	r1, r1, #256	@ 0x100
 801602e:	4311      	orrs	r1, r2
 8016030:	eba0 0051 	sub.w	r0, r0, r1, lsr #1
 8016034:	f884 0055 	strb.w	r0, [r4, #85]	@ 0x55
 8016038:	f513 4f00 	cmn.w	r3, #32768	@ 0x8000
 801603c:	d00e      	beq.n	801605c <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x320>
 801603e:	eba3 030e 	sub.w	r3, r3, lr
 8016042:	f894 2059 	ldrb.w	r2, [r4, #89]	@ 0x59
 8016046:	b29b      	uxth	r3, r3
 8016048:	f884 3054 	strb.w	r3, [r4, #84]	@ 0x54
 801604c:	10db      	asrs	r3, r3, #3
 801604e:	f003 0360 	and.w	r3, r3, #96	@ 0x60
 8016052:	f022 0260 	bic.w	r2, r2, #96	@ 0x60
 8016056:	4313      	orrs	r3, r2
 8016058:	f884 3059 	strb.w	r3, [r4, #89]	@ 0x59
 801605c:	f894 1059 	ldrb.w	r1, [r4, #89]	@ 0x59
 8016060:	00cb      	lsls	r3, r1, #3
 8016062:	f403 7280 	and.w	r2, r3, #256	@ 0x100
 8016066:	f894 3054 	ldrb.w	r3, [r4, #84]	@ 0x54
 801606a:	0648      	lsls	r0, r1, #25
 801606c:	ea43 0302 	orr.w	r3, r3, r2
 8016070:	bf44      	itt	mi
 8016072:	f5a3 7300 	submi.w	r3, r3, #512	@ 0x200
 8016076:	b21b      	sxthmi	r3, r3
 8016078:	1b5d      	subs	r5, r3, r5
 801607a:	f8a4 505c 	strh.w	r5, [r4, #92]	@ 0x5c
 801607e:	e7b5      	b.n	8015fec <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x2b0>

08016080 <_ZN8touchgfx12TextProvider15getNextLigatureEhPKNS_4FontERPKNS_9GlyphNodeE>:
 8016080:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 8016084:	461e      	mov	r6, r3
 8016086:	8ec3      	ldrh	r3, [r0, #54]	@ 0x36
 8016088:	eb00 0343 	add.w	r3, r0, r3, lsl #1
 801608c:	4604      	mov	r4, r0
 801608e:	4617      	mov	r7, r2
 8016090:	f8b3 8022 	ldrh.w	r8, [r3, #34]	@ 0x22
 8016094:	f7f7 faca 	bl	800d62c <_ZN8touchgfx12TextProvider15getNextLigatureEh>
 8016098:	4605      	mov	r5, r0
 801609a:	b918      	cbnz	r0, 80160a4 <_ZN8touchgfx12TextProvider15getNextLigatureEhPKNS_4FontERPKNS_9GlyphNodeE+0x24>
 801609c:	6030      	str	r0, [r6, #0]
 801609e:	4628      	mov	r0, r5
 80160a0:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
 80160a4:	683b      	ldr	r3, [r7, #0]
 80160a6:	4601      	mov	r1, r0
 80160a8:	68db      	ldr	r3, [r3, #12]
 80160aa:	4638      	mov	r0, r7
 80160ac:	4798      	blx	r3
 80160ae:	f5a8 63c0 	sub.w	r3, r8, #1536	@ 0x600
 80160b2:	f5b3 7f40 	cmp.w	r3, #768	@ 0x300
 80160b6:	4602      	mov	r2, r0
 80160b8:	6030      	str	r0, [r6, #0]
 80160ba:	d213      	bcs.n	80160e4 <_ZN8touchgfx12TextProvider15getNextLigatureEhPKNS_4FontERPKNS_9GlyphNodeE+0x64>
 80160bc:	4643      	mov	r3, r8
 80160be:	4639      	mov	r1, r7
 80160c0:	4620      	mov	r0, r4
 80160c2:	f7ff fe3b 	bl	8015d3c <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt>
 80160c6:	6030      	str	r0, [r6, #0]
 80160c8:	6833      	ldr	r3, [r6, #0]
 80160ca:	b143      	cbz	r3, 80160de <_ZN8touchgfx12TextProvider15getNextLigatureEhPKNS_4FontERPKNS_9GlyphNodeE+0x5e>
 80160cc:	7b5a      	ldrb	r2, [r3, #13]
 80160ce:	7a9b      	ldrb	r3, [r3, #10]
 80160d0:	0052      	lsls	r2, r2, #1
 80160d2:	f402 7280 	and.w	r2, r2, #256	@ 0x100
 80160d6:	4313      	orrs	r3, r2
 80160d8:	bf0c      	ite	eq
 80160da:	2301      	moveq	r3, #1
 80160dc:	2300      	movne	r3, #0
 80160de:	f884 3061 	strb.w	r3, [r4, #97]	@ 0x61
 80160e2:	e7dc      	b.n	801609e <_ZN8touchgfx12TextProvider15getNextLigatureEhPKNS_4FontERPKNS_9GlyphNodeE+0x1e>
 80160e4:	f5a5 6360 	sub.w	r3, r5, #3584	@ 0xe00
 80160e8:	b29b      	uxth	r3, r3
 80160ea:	2b7f      	cmp	r3, #127	@ 0x7f
 80160ec:	d804      	bhi.n	80160f8 <_ZN8touchgfx12TextProvider15getNextLigatureEhPKNS_4FontERPKNS_9GlyphNodeE+0x78>
 80160ee:	4639      	mov	r1, r7
 80160f0:	4620      	mov	r0, r4
 80160f2:	f7ff fced 	bl	8015ad0 <_ZN8touchgfx12TextProvider15adjustThaiGlyphEPKNS_4FontEPKNS_9GlyphNodeE>
 80160f6:	e7e6      	b.n	80160c6 <_ZN8touchgfx12TextProvider15getNextLigatureEhPKNS_4FontERPKNS_9GlyphNodeE+0x46>
 80160f8:	f894 3061 	ldrb.w	r3, [r4, #97]	@ 0x61
 80160fc:	2b00      	cmp	r3, #0
 80160fe:	d0e3      	beq.n	80160c8 <_ZN8touchgfx12TextProvider15getNextLigatureEhPKNS_4FontERPKNS_9GlyphNodeE+0x48>
 8016100:	f640 1302 	movw	r3, #2306	@ 0x902
 8016104:	429d      	cmp	r5, r3
 8016106:	d1df      	bne.n	80160c8 <_ZN8touchgfx12TextProvider15getNextLigatureEhPKNS_4FontERPKNS_9GlyphNodeE+0x48>
 8016108:	4601      	mov	r1, r0
 801610a:	4620      	mov	r0, r4
 801610c:	f7ff fcb1 	bl	8015a72 <_ZN8touchgfx12TextProvider16adjustHindiGlyphEPKNS_9GlyphNodeE>
 8016110:	e7d9      	b.n	80160c6 <_ZN8touchgfx12TextProvider15getNextLigatureEhPKNS_4FontERPKNS_9GlyphNodeE+0x46>

08016112 <_ZN8touchgfx12TextProvider15getNextLigatureEhPKNS_4FontERPKNS_9GlyphNodeERPKhRh>:
 8016112:	e92d 43f8 	stmdb	sp!, {r3, r4, r5, r6, r7, r8, r9, lr}
 8016116:	461e      	mov	r6, r3
 8016118:	8ec3      	ldrh	r3, [r0, #54]	@ 0x36
 801611a:	eb00 0343 	add.w	r3, r0, r3, lsl #1
 801611e:	4604      	mov	r4, r0
 8016120:	4617      	mov	r7, r2
 8016122:	f8b3 8022 	ldrh.w	r8, [r3, #34]	@ 0x22
 8016126:	f7f7 fa81 	bl	800d62c <_ZN8touchgfx12TextProvider15getNextLigatureEh>
 801612a:	4605      	mov	r5, r0
 801612c:	b918      	cbnz	r0, 8016136 <_ZN8touchgfx12TextProvider15getNextLigatureEhPKNS_4FontERPKNS_9GlyphNodeERPKhRh+0x24>
 801612e:	6030      	str	r0, [r6, #0]
 8016130:	4628      	mov	r0, r5
 8016132:	e8bd 83f8 	ldmia.w	sp!, {r3, r4, r5, r6, r7, r8, r9, pc}
 8016136:	683b      	ldr	r3, [r7, #0]
 8016138:	4601      	mov	r1, r0
 801613a:	f8d3 9008 	ldr.w	r9, [r3, #8]
 801613e:	4638      	mov	r0, r7
 8016140:	e9dd 2308 	ldrd	r2, r3, [sp, #32]
 8016144:	47c8      	blx	r9
 8016146:	f5a8 63c0 	sub.w	r3, r8, #1536	@ 0x600
 801614a:	f5b3 7f40 	cmp.w	r3, #768	@ 0x300
 801614e:	4602      	mov	r2, r0
 8016150:	6030      	str	r0, [r6, #0]
 8016152:	d213      	bcs.n	801617c <_ZN8touchgfx12TextProvider15getNextLigatureEhPKNS_4FontERPKNS_9GlyphNodeERPKhRh+0x6a>
 8016154:	4643      	mov	r3, r8
 8016156:	4639      	mov	r1, r7
 8016158:	4620      	mov	r0, r4
 801615a:	f7ff fdef 	bl	8015d3c <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt>
 801615e:	6030      	str	r0, [r6, #0]
 8016160:	6833      	ldr	r3, [r6, #0]
 8016162:	b143      	cbz	r3, 8016176 <_ZN8touchgfx12TextProvider15getNextLigatureEhPKNS_4FontERPKNS_9GlyphNodeERPKhRh+0x64>
 8016164:	7b5a      	ldrb	r2, [r3, #13]
 8016166:	7a9b      	ldrb	r3, [r3, #10]
 8016168:	0052      	lsls	r2, r2, #1
 801616a:	f402 7280 	and.w	r2, r2, #256	@ 0x100
 801616e:	4313      	orrs	r3, r2
 8016170:	bf0c      	ite	eq
 8016172:	2301      	moveq	r3, #1
 8016174:	2300      	movne	r3, #0
 8016176:	f884 3061 	strb.w	r3, [r4, #97]	@ 0x61
 801617a:	e7d9      	b.n	8016130 <_ZN8touchgfx12TextProvider15getNextLigatureEhPKNS_4FontERPKNS_9GlyphNodeERPKhRh+0x1e>
 801617c:	f5a5 6360 	sub.w	r3, r5, #3584	@ 0xe00
 8016180:	b29b      	uxth	r3, r3
 8016182:	2b7f      	cmp	r3, #127	@ 0x7f
 8016184:	d804      	bhi.n	8016190 <_ZN8touchgfx12TextProvider15getNextLigatureEhPKNS_4FontERPKNS_9GlyphNodeERPKhRh+0x7e>
 8016186:	4639      	mov	r1, r7
 8016188:	4620      	mov	r0, r4
 801618a:	f7ff fca1 	bl	8015ad0 <_ZN8touchgfx12TextProvider15adjustThaiGlyphEPKNS_4FontEPKNS_9GlyphNodeE>
 801618e:	e7e6      	b.n	801615e <_ZN8touchgfx12TextProvider15getNextLigatureEhPKNS_4FontERPKNS_9GlyphNodeERPKhRh+0x4c>
 8016190:	f894 3061 	ldrb.w	r3, [r4, #97]	@ 0x61
 8016194:	2b00      	cmp	r3, #0
 8016196:	d0e3      	beq.n	8016160 <_ZN8touchgfx12TextProvider15getNextLigatureEhPKNS_4FontERPKNS_9GlyphNodeERPKhRh+0x4e>
 8016198:	f640 1302 	movw	r3, #2306	@ 0x902
 801619c:	429d      	cmp	r5, r3
 801619e:	d1df      	bne.n	8016160 <_ZN8touchgfx12TextProvider15getNextLigatureEhPKNS_4FontERPKNS_9GlyphNodeERPKhRh+0x4e>
 80161a0:	4601      	mov	r1, r0
 80161a2:	4620      	mov	r0, r4
 80161a4:	f7ff fc65 	bl	8015a72 <_ZN8touchgfx12TextProvider16adjustHindiGlyphEPKNS_9GlyphNodeE>
 80161a8:	e7d9      	b.n	801615e <_ZN8touchgfx12TextProvider15getNextLigatureEhPKNS_4FontERPKNS_9GlyphNodeERPKhRh+0x4c>

080161aa <_ZN8touchgfx12TextProvider15fillInputBufferEv>:
 80161aa:	b510      	push	{r4, lr}
 80161ac:	4604      	mov	r4, r0
 80161ae:	f8b4 1040 	ldrh.w	r1, [r4, #64]	@ 0x40
 80161b2:	8f23      	ldrh	r3, [r4, #56]	@ 0x38
 80161b4:	b1f1      	cbz	r1, 80161f4 <_ZN8touchgfx12TextProvider15fillInputBufferEv+0x4a>
 80161b6:	2b0a      	cmp	r3, #10
 80161b8:	d02f      	beq.n	801621a <_ZN8touchgfx12TextProvider15fillInputBufferEv+0x70>
 80161ba:	8fe2      	ldrh	r2, [r4, #62]	@ 0x3e
 80161bc:	eb04 0042 	add.w	r0, r4, r2, lsl #1
 80161c0:	3901      	subs	r1, #1
 80161c2:	8f40      	ldrh	r0, [r0, #58]	@ 0x3a
 80161c4:	f8a4 1040 	strh.w	r1, [r4, #64]	@ 0x40
 80161c8:	1c51      	adds	r1, r2, #1
 80161ca:	b289      	uxth	r1, r1
 80161cc:	2901      	cmp	r1, #1
 80161ce:	bf84      	itt	hi
 80161d0:	f102 32ff 	addhi.w	r2, r2, #4294967295
 80161d4:	87e2      	strhhi	r2, [r4, #62]	@ 0x3e
 80161d6:	f103 0201 	add.w	r2, r3, #1
 80161da:	8722      	strh	r2, [r4, #56]	@ 0x38
 80161dc:	8ee2      	ldrh	r2, [r4, #54]	@ 0x36
 80161de:	bf98      	it	ls
 80161e0:	87e1      	strhls	r1, [r4, #62]	@ 0x3e
 80161e2:	4413      	add	r3, r2
 80161e4:	b29b      	uxth	r3, r3
 80161e6:	2b09      	cmp	r3, #9
 80161e8:	bf88      	it	hi
 80161ea:	3b0a      	subhi	r3, #10
 80161ec:	eb04 0343 	add.w	r3, r4, r3, lsl #1
 80161f0:	8458      	strh	r0, [r3, #34]	@ 0x22
 80161f2:	e7dc      	b.n	80161ae <_ZN8touchgfx12TextProvider15fillInputBufferEv+0x4>
 80161f4:	8f23      	ldrh	r3, [r4, #56]	@ 0x38
 80161f6:	2b0a      	cmp	r3, #10
 80161f8:	d00f      	beq.n	801621a <_ZN8touchgfx12TextProvider15fillInputBufferEv+0x70>
 80161fa:	4620      	mov	r0, r4
 80161fc:	f7ff fbe7 	bl	80159ce <_ZN8touchgfx12TextProvider19getNextCharInternalEv>
 8016200:	8f23      	ldrh	r3, [r4, #56]	@ 0x38
 8016202:	1c5a      	adds	r2, r3, #1
 8016204:	8722      	strh	r2, [r4, #56]	@ 0x38
 8016206:	8ee2      	ldrh	r2, [r4, #54]	@ 0x36
 8016208:	4413      	add	r3, r2
 801620a:	b29b      	uxth	r3, r3
 801620c:	2b09      	cmp	r3, #9
 801620e:	bf88      	it	hi
 8016210:	3b0a      	subhi	r3, #10
 8016212:	eb04 0343 	add.w	r3, r4, r3, lsl #1
 8016216:	8458      	strh	r0, [r3, #34]	@ 0x22
 8016218:	e7ec      	b.n	80161f4 <_ZN8touchgfx12TextProvider15fillInputBufferEv+0x4a>
 801621a:	bd10      	pop	{r4, pc}

0801621c <_ZN8touchgfx12TextProvider11getNextCharEv>:
 801621c:	b538      	push	{r3, r4, r5, lr}
 801621e:	8ec3      	ldrh	r3, [r0, #54]	@ 0x36
 8016220:	eb00 0243 	add.w	r2, r0, r3, lsl #1
 8016224:	4604      	mov	r4, r0
 8016226:	8c55      	ldrh	r5, [r2, #34]	@ 0x22
 8016228:	8f02      	ldrh	r2, [r0, #56]	@ 0x38
 801622a:	3a01      	subs	r2, #1
 801622c:	8702      	strh	r2, [r0, #56]	@ 0x38
 801622e:	1c5a      	adds	r2, r3, #1
 8016230:	b292      	uxth	r2, r2
 8016232:	2a09      	cmp	r2, #9
 8016234:	bf86      	itte	hi
 8016236:	3b09      	subhi	r3, #9
 8016238:	86c3      	strhhi	r3, [r0, #54]	@ 0x36
 801623a:	86c2      	strhls	r2, [r0, #54]	@ 0x36
 801623c:	f7ff ffb5 	bl	80161aa <_ZN8touchgfx12TextProvider15fillInputBufferEv>
 8016240:	8c23      	ldrh	r3, [r4, #32]
 8016242:	2b01      	cmp	r3, #1
 8016244:	bf9c      	itt	ls
 8016246:	3301      	addls	r3, #1
 8016248:	8423      	strhls	r3, [r4, #32]
 801624a:	8be3      	ldrh	r3, [r4, #30]
 801624c:	b90b      	cbnz	r3, 8016252 <_ZN8touchgfx12TextProvider11getNextCharEv+0x36>
 801624e:	2302      	movs	r3, #2
 8016250:	83e3      	strh	r3, [r4, #30]
 8016252:	8be3      	ldrh	r3, [r4, #30]
 8016254:	3b01      	subs	r3, #1
 8016256:	b29b      	uxth	r3, r3
 8016258:	83e3      	strh	r3, [r4, #30]
 801625a:	eb04 0443 	add.w	r4, r4, r3, lsl #1
 801625e:	4628      	mov	r0, r5
 8016260:	8365      	strh	r5, [r4, #26]
 8016262:	bd38      	pop	{r3, r4, r5, pc}

08016264 <_ZN8touchgfx12TextProvider22replaceInputCharactersEttPKt>:
 8016264:	428a      	cmp	r2, r1
 8016266:	e92d 47f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
 801626a:	8ec7      	ldrh	r7, [r0, #54]	@ 0x36
 801626c:	d931      	bls.n	80162d2 <_ZN8touchgfx12TextProvider22replaceInputCharactersEttPKt+0x6e>
 801626e:	8f05      	ldrh	r5, [r0, #56]	@ 0x38
 8016270:	f8b0 8040 	ldrh.w	r8, [r0, #64]	@ 0x40
 8016274:	f8b0 c03e 	ldrh.w	ip, [r0, #62]	@ 0x3e
 8016278:	19ee      	adds	r6, r5, r7
 801627a:	1a54      	subs	r4, r2, r1
 801627c:	3e01      	subs	r6, #1
 801627e:	fa1f fe84 	uxth.w	lr, r4
 8016282:	b2b4      	uxth	r4, r6
 8016284:	eba4 090e 	sub.w	r9, r4, lr
 8016288:	fa1f f989 	uxth.w	r9, r9
 801628c:	2c09      	cmp	r4, #9
 801628e:	4626      	mov	r6, r4
 8016290:	bf88      	it	hi
 8016292:	f1a4 060a 	subhi.w	r6, r4, #10
 8016296:	f1bc 0f00 	cmp.w	ip, #0
 801629a:	bf08      	it	eq
 801629c:	f04f 0c02 	moveq.w	ip, #2
 80162a0:	eb00 0646 	add.w	r6, r0, r6, lsl #1
 80162a4:	f10c 3cff 	add.w	ip, ip, #4294967295
 80162a8:	fa1f fc8c 	uxth.w	ip, ip
 80162ac:	3c01      	subs	r4, #1
 80162ae:	f8b6 a022 	ldrh.w	sl, [r6, #34]	@ 0x22
 80162b2:	b2a4      	uxth	r4, r4
 80162b4:	eb00 064c 	add.w	r6, r0, ip, lsl #1
 80162b8:	454c      	cmp	r4, r9
 80162ba:	f8a6 a03a 	strh.w	sl, [r6, #58]	@ 0x3a
 80162be:	d1e5      	bne.n	801628c <_ZN8touchgfx12TextProvider22replaceInputCharactersEttPKt+0x28>
 80162c0:	eba5 050e 	sub.w	r5, r5, lr
 80162c4:	eb0e 0408 	add.w	r4, lr, r8
 80162c8:	8705      	strh	r5, [r0, #56]	@ 0x38
 80162ca:	f8a0 4040 	strh.w	r4, [r0, #64]	@ 0x40
 80162ce:	f8a0 c03e 	strh.w	ip, [r0, #62]	@ 0x3e
 80162d2:	8f04      	ldrh	r4, [r0, #56]	@ 0x38
 80162d4:	1a64      	subs	r4, r4, r1
 80162d6:	4439      	add	r1, r7
 80162d8:	b289      	uxth	r1, r1
 80162da:	2909      	cmp	r1, #9
 80162dc:	bf88      	it	hi
 80162de:	390a      	subhi	r1, #10
 80162e0:	8704      	strh	r4, [r0, #56]	@ 0x38
 80162e2:	86c1      	strh	r1, [r0, #54]	@ 0x36
 80162e4:	250a      	movs	r5, #10
 80162e6:	b18a      	cbz	r2, 801630c <_ZN8touchgfx12TextProvider22replaceInputCharactersEttPKt+0xa8>
 80162e8:	8f01      	ldrh	r1, [r0, #56]	@ 0x38
 80162ea:	3a01      	subs	r2, #1
 80162ec:	b292      	uxth	r2, r2
 80162ee:	3101      	adds	r1, #1
 80162f0:	f833 4012 	ldrh.w	r4, [r3, r2, lsl #1]
 80162f4:	8701      	strh	r1, [r0, #56]	@ 0x38
 80162f6:	8ec1      	ldrh	r1, [r0, #54]	@ 0x36
 80162f8:	b901      	cbnz	r1, 80162fc <_ZN8touchgfx12TextProvider22replaceInputCharactersEttPKt+0x98>
 80162fa:	86c5      	strh	r5, [r0, #54]	@ 0x36
 80162fc:	8ec1      	ldrh	r1, [r0, #54]	@ 0x36
 80162fe:	3901      	subs	r1, #1
 8016300:	b289      	uxth	r1, r1
 8016302:	86c1      	strh	r1, [r0, #54]	@ 0x36
 8016304:	eb00 0141 	add.w	r1, r0, r1, lsl #1
 8016308:	844c      	strh	r4, [r1, #34]	@ 0x22
 801630a:	e7ec      	b.n	80162e6 <_ZN8touchgfx12TextProvider22replaceInputCharactersEttPKt+0x82>
 801630c:	e8bd 47f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
 8016310:	f7ff bf4b 	b.w	80161aa <_ZN8touchgfx12TextProvider15fillInputBufferEv>

08016314 <_ZN8touchgfx12TextProvider13gsubRuleMatchEPKtttt>:
 8016314:	b570      	push	{r4, r5, r6, lr}
 8016316:	2500      	movs	r5, #0
 8016318:	4295      	cmp	r5, r2
 801631a:	d011      	beq.n	8016340 <_ZN8touchgfx12TextProvider13gsubRuleMatchEPKtttt+0x2c>
 801631c:	8bc4      	ldrh	r4, [r0, #30]
 801631e:	f831 6b02 	ldrh.w	r6, [r1], #2
 8016322:	4414      	add	r4, r2
 8016324:	3c01      	subs	r4, #1
 8016326:	1b64      	subs	r4, r4, r5
 8016328:	b2a4      	uxth	r4, r4
 801632a:	2c01      	cmp	r4, #1
 801632c:	bf88      	it	hi
 801632e:	3c02      	subhi	r4, #2
 8016330:	eb00 0444 	add.w	r4, r0, r4, lsl #1
 8016334:	8b64      	ldrh	r4, [r4, #26]
 8016336:	42b4      	cmp	r4, r6
 8016338:	d117      	bne.n	801636a <_ZN8touchgfx12TextProvider13gsubRuleMatchEPKtttt+0x56>
 801633a:	3501      	adds	r5, #1
 801633c:	b2ad      	uxth	r5, r5
 801633e:	e7eb      	b.n	8016318 <_ZN8touchgfx12TextProvider13gsubRuleMatchEPKtttt+0x4>
 8016340:	f8bd 2010 	ldrh.w	r2, [sp, #16]
 8016344:	2400      	movs	r4, #0
 8016346:	4413      	add	r3, r2
 8016348:	b2a2      	uxth	r2, r4
 801634a:	429a      	cmp	r2, r3
 801634c:	da0f      	bge.n	801636e <_ZN8touchgfx12TextProvider13gsubRuleMatchEPKtttt+0x5a>
 801634e:	8ec6      	ldrh	r6, [r0, #54]	@ 0x36
 8016350:	f831 5014 	ldrh.w	r5, [r1, r4, lsl #1]
 8016354:	4432      	add	r2, r6
 8016356:	b292      	uxth	r2, r2
 8016358:	2a09      	cmp	r2, #9
 801635a:	bf88      	it	hi
 801635c:	3a0a      	subhi	r2, #10
 801635e:	eb00 0242 	add.w	r2, r0, r2, lsl #1
 8016362:	3401      	adds	r4, #1
 8016364:	8c52      	ldrh	r2, [r2, #34]	@ 0x22
 8016366:	42aa      	cmp	r2, r5
 8016368:	d0ee      	beq.n	8016348 <_ZN8touchgfx12TextProvider13gsubRuleMatchEPKtttt+0x34>
 801636a:	2000      	movs	r0, #0
 801636c:	bd70      	pop	{r4, r5, r6, pc}
 801636e:	2001      	movs	r0, #1
 8016370:	e7fc      	b.n	801636c <_ZN8touchgfx12TextProvider13gsubRuleMatchEPKtttt+0x58>

08016372 <_ZN8touchgfx12TextProvider14applyGsubRulesEPKtt>:
 8016372:	e92d 4ff7 	stmdb	sp!, {r0, r1, r2, r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8016376:	4605      	mov	r5, r0
 8016378:	4616      	mov	r6, r2
 801637a:	1c8c      	adds	r4, r1, #2
 801637c:	8809      	ldrh	r1, [r1, #0]
 801637e:	ea4f 3a11 	mov.w	sl, r1, lsr #12
 8016382:	f834 301a 	ldrh.w	r3, [r4, sl, lsl #1]
 8016386:	42b3      	cmp	r3, r6
 8016388:	d124      	bne.n	80163d4 <_ZN8touchgfx12TextProvider14applyGsubRulesEPKtt+0x62>
 801638a:	f3c1 2903 	ubfx	r9, r1, #8, #4
 801638e:	f3c1 1803 	ubfx	r8, r1, #4, #4
 8016392:	f001 070f 	and.w	r7, r1, #15
 8016396:	f8cd 8000 	str.w	r8, [sp]
 801639a:	464b      	mov	r3, r9
 801639c:	4652      	mov	r2, sl
 801639e:	4621      	mov	r1, r4
 80163a0:	4628      	mov	r0, r5
 80163a2:	f7ff ffb7 	bl	8016314 <_ZN8touchgfx12TextProvider13gsubRuleMatchEPKtttt>
 80163a6:	4683      	mov	fp, r0
 80163a8:	b168      	cbz	r0, 80163c6 <_ZN8touchgfx12TextProvider14applyGsubRulesEPKtt+0x54>
 80163aa:	eb0a 0109 	add.w	r1, sl, r9
 80163ae:	4441      	add	r1, r8
 80163b0:	eb04 0341 	add.w	r3, r4, r1, lsl #1
 80163b4:	463a      	mov	r2, r7
 80163b6:	4649      	mov	r1, r9
 80163b8:	4628      	mov	r0, r5
 80163ba:	f7ff ff53 	bl	8016264 <_ZN8touchgfx12TextProvider22replaceInputCharactersEttPKt>
 80163be:	4658      	mov	r0, fp
 80163c0:	b003      	add	sp, #12
 80163c2:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 80163c6:	eb07 010a 	add.w	r1, r7, sl
 80163ca:	4449      	add	r1, r9
 80163cc:	4441      	add	r1, r8
 80163ce:	eb04 0141 	add.w	r1, r4, r1, lsl #1
 80163d2:	e7d2      	b.n	801637a <_ZN8touchgfx12TextProvider14applyGsubRulesEPKtt+0x8>
 80163d4:	f04f 0b00 	mov.w	fp, #0
 80163d8:	e7f1      	b.n	80163be <_ZN8touchgfx12TextProvider14applyGsubRulesEPKtt+0x4c>

080163da <_ZNK8touchgfx12TextProvider21gsubTableBinarySearchEtPKtt>:
 80163da:	b570      	push	{r4, r5, r6, lr}
 80163dc:	8810      	ldrh	r0, [r2, #0]
 80163de:	4298      	cmp	r0, r3
 80163e0:	d817      	bhi.n	8016412 <_ZNK8touchgfx12TextProvider21gsubTableBinarySearchEtPKtt+0x38>
 80163e2:	1e48      	subs	r0, r1, #1
 80163e4:	f832 0020 	ldrh.w	r0, [r2, r0, lsl #2]
 80163e8:	4298      	cmp	r0, r3
 80163ea:	d312      	bcc.n	8016412 <_ZNK8touchgfx12TextProvider21gsubTableBinarySearchEtPKtt+0x38>
 80163ec:	2400      	movs	r4, #0
 80163ee:	428c      	cmp	r4, r1
 80163f0:	d20f      	bcs.n	8016412 <_ZNK8touchgfx12TextProvider21gsubTableBinarySearchEtPKtt+0x38>
 80163f2:	1860      	adds	r0, r4, r1
 80163f4:	1040      	asrs	r0, r0, #1
 80163f6:	0085      	lsls	r5, r0, #2
 80163f8:	f832 6020 	ldrh.w	r6, [r2, r0, lsl #2]
 80163fc:	42b3      	cmp	r3, r6
 80163fe:	d902      	bls.n	8016406 <_ZNK8touchgfx12TextProvider21gsubTableBinarySearchEtPKtt+0x2c>
 8016400:	3001      	adds	r0, #1
 8016402:	b284      	uxth	r4, r0
 8016404:	e7f3      	b.n	80163ee <_ZNK8touchgfx12TextProvider21gsubTableBinarySearchEtPKtt+0x14>
 8016406:	d201      	bcs.n	801640c <_ZNK8touchgfx12TextProvider21gsubTableBinarySearchEtPKtt+0x32>
 8016408:	b281      	uxth	r1, r0
 801640a:	e7f0      	b.n	80163ee <_ZNK8touchgfx12TextProvider21gsubTableBinarySearchEtPKtt+0x14>
 801640c:	442a      	add	r2, r5
 801640e:	8850      	ldrh	r0, [r2, #2]
 8016410:	bd70      	pop	{r4, r5, r6, pc}
 8016412:	2000      	movs	r0, #0
 8016414:	e7fc      	b.n	8016410 <_ZNK8touchgfx12TextProvider21gsubTableBinarySearchEtPKtt+0x36>

08016416 <_ZN8touchgfx12TextProvider16substituteGlyphsEv>:
 8016416:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 801641a:	6c45      	ldr	r5, [r0, #68]	@ 0x44
 801641c:	886f      	ldrh	r7, [r5, #2]
 801641e:	4604      	mov	r4, r0
 8016420:	087f      	lsrs	r7, r7, #1
 8016422:	260b      	movs	r6, #11
 8016424:	3e01      	subs	r6, #1
 8016426:	d013      	beq.n	8016450 <_ZN8touchgfx12TextProvider16substituteGlyphsEv+0x3a>
 8016428:	8ee3      	ldrh	r3, [r4, #54]	@ 0x36
 801642a:	eb04 0343 	add.w	r3, r4, r3, lsl #1
 801642e:	462a      	mov	r2, r5
 8016430:	f8b3 8022 	ldrh.w	r8, [r3, #34]	@ 0x22
 8016434:	4639      	mov	r1, r7
 8016436:	4643      	mov	r3, r8
 8016438:	4620      	mov	r0, r4
 801643a:	f7ff ffce 	bl	80163da <_ZNK8touchgfx12TextProvider21gsubTableBinarySearchEtPKtt>
 801643e:	b138      	cbz	r0, 8016450 <_ZN8touchgfx12TextProvider16substituteGlyphsEv+0x3a>
 8016440:	eb05 0140 	add.w	r1, r5, r0, lsl #1
 8016444:	4642      	mov	r2, r8
 8016446:	4620      	mov	r0, r4
 8016448:	f7ff ff93 	bl	8016372 <_ZN8touchgfx12TextProvider14applyGsubRulesEPKtt>
 801644c:	2800      	cmp	r0, #0
 801644e:	d1e9      	bne.n	8016424 <_ZN8touchgfx12TextProvider16substituteGlyphsEv+0xe>
 8016450:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}

08016454 <_ZN8touchgfx9GradientsC1EPKNS_7Point3DE>:
 8016454:	b570      	push	{r4, r5, r6, lr}
 8016456:	694a      	ldr	r2, [r1, #20]
 8016458:	6a8d      	ldr	r5, [r1, #40]	@ 0x28
 801645a:	684b      	ldr	r3, [r1, #4]
 801645c:	6ace      	ldr	r6, [r1, #44]	@ 0x2c
 801645e:	1b54      	subs	r4, r2, r5
 8016460:	f000 8106 	beq.w	8016670 <_ZN8touchgfx9GradientsC1EPKNS_7Point3DE+0x21c>
 8016464:	1b9b      	subs	r3, r3, r6
 8016466:	d003      	beq.n	8016470 <_ZN8touchgfx9GradientsC1EPKNS_7Point3DE+0x1c>
 8016468:	4363      	muls	r3, r4
 801646a:	2210      	movs	r2, #16
 801646c:	fb93 f3f2 	sdiv	r3, r3, r2
 8016470:	680c      	ldr	r4, [r1, #0]
 8016472:	698a      	ldr	r2, [r1, #24]
 8016474:	1b65      	subs	r5, r4, r5
 8016476:	f000 80fd 	beq.w	8016674 <_ZN8touchgfx9GradientsC1EPKNS_7Point3DE+0x220>
 801647a:	1b92      	subs	r2, r2, r6
 801647c:	d003      	beq.n	8016486 <_ZN8touchgfx9GradientsC1EPKNS_7Point3DE+0x32>
 801647e:	436a      	muls	r2, r5
 8016480:	2410      	movs	r4, #16
 8016482:	fb92 f2f4 	sdiv	r2, r2, r4
 8016486:	1a9b      	subs	r3, r3, r2
 8016488:	ee07 3a90 	vmov	s15, r3
 801648c:	ed9f 4a88 	vldr	s8, [pc, #544]	@ 80166b0 <_ZN8touchgfx9GradientsC1EPKNS_7Point3DE+0x25c>
 8016490:	eef8 7ae7 	vcvt.f32.s32	s15, s15
 8016494:	eeb7 7a00 	vmov.f32	s14, #112	@ 0x3f800000  1.0
 8016498:	ee67 7a84 	vmul.f32	s15, s15, s8
 801649c:	460a      	mov	r2, r1
 801649e:	ee87 3a27 	vdiv.f32	s6, s14, s15
 80164a2:	4603      	mov	r3, r0
 80164a4:	f100 040c 	add.w	r4, r0, #12
 80164a8:	eeb1 6a43 	vneg.f32	s12, s6
 80164ac:	edd2 7a02 	vldr	s15, [r2, #8]
 80164b0:	eec7 6a27 	vdiv.f32	s13, s14, s15
 80164b4:	3214      	adds	r2, #20
 80164b6:	ece3 6a01 	vstmia	r3!, {s13}
 80164ba:	ed52 7a02 	vldr	s15, [r2, #-8]
 80164be:	ee67 7aa6 	vmul.f32	s15, s15, s13
 80164c2:	429c      	cmp	r4, r3
 80164c4:	edc3 7a02 	vstr	s15, [r3, #8]
 80164c8:	ed52 7a01 	vldr	s15, [r2, #-4]
 80164cc:	ee67 7aa6 	vmul.f32	s15, s15, s13
 80164d0:	edc3 7a05 	vstr	s15, [r3, #20]
 80164d4:	d1ea      	bne.n	80164ac <_ZN8touchgfx9GradientsC1EPKNS_7Point3DE+0x58>
 80164d6:	6aca      	ldr	r2, [r1, #44]	@ 0x2c
 80164d8:	698b      	ldr	r3, [r1, #24]
 80164da:	edd0 4a02 	vldr	s9, [r0, #8]
 80164de:	edd0 3a00 	vldr	s7, [r0]
 80164e2:	edd0 6a01 	vldr	s13, [r0, #4]
 80164e6:	ed90 5a05 	vldr	s10, [r0, #20]
 80164ea:	ed90 2a03 	vldr	s4, [r0, #12]
 80164ee:	edd0 5a04 	vldr	s11, [r0, #16]
 80164f2:	ed90 1a07 	vldr	s2, [r0, #28]
 80164f6:	edd0 2a06 	vldr	s5, [r0, #24]
 80164fa:	1a9b      	subs	r3, r3, r2
 80164fc:	ee07 3a90 	vmov	s15, r3
 8016500:	684b      	ldr	r3, [r1, #4]
 8016502:	1a9b      	subs	r3, r3, r2
 8016504:	ee07 3a10 	vmov	s14, r3
 8016508:	eef8 7ae7 	vcvt.f32.s32	s15, s15
 801650c:	ee76 6ae4 	vsub.f32	s13, s13, s9
 8016510:	ee67 7a84 	vmul.f32	s15, s15, s8
 8016514:	ee73 4ae4 	vsub.f32	s9, s7, s9
 8016518:	eeb8 7ac7 	vcvt.f32.s32	s14, s14
 801651c:	ee64 7ae7 	vnmul.f32	s15, s9, s15
 8016520:	ee27 7a04 	vmul.f32	s14, s14, s8
 8016524:	ee75 5ac5 	vsub.f32	s11, s11, s10
 8016528:	eee6 7a87 	vfma.f32	s15, s13, s14
 801652c:	ee32 5a45 	vsub.f32	s10, s4, s10
 8016530:	ee67 7a83 	vmul.f32	s15, s15, s6
 8016534:	edc0 7a09 	vstr	s15, [r0, #36]	@ 0x24
 8016538:	6a8c      	ldr	r4, [r1, #40]	@ 0x28
 801653a:	694a      	ldr	r2, [r1, #20]
 801653c:	1b13      	subs	r3, r2, r4
 801653e:	ee07 3a10 	vmov	s14, r3
 8016542:	eeb8 7ac7 	vcvt.f32.s32	s14, s14
 8016546:	680b      	ldr	r3, [r1, #0]
 8016548:	ee27 7a04 	vmul.f32	s14, s14, s8
 801654c:	1b1b      	subs	r3, r3, r4
 801654e:	ee64 4ac7 	vnmul.f32	s9, s9, s14
 8016552:	ee07 3a10 	vmov	s14, r3
 8016556:	eeb8 7ac7 	vcvt.f32.s32	s14, s14
 801655a:	ee27 7a04 	vmul.f32	s14, s14, s8
 801655e:	eee6 4a87 	vfma.f32	s9, s13, s14
 8016562:	ee64 4a86 	vmul.f32	s9, s9, s12
 8016566:	edc0 4a0a 	vstr	s9, [r0, #40]	@ 0x28
 801656a:	6aca      	ldr	r2, [r1, #44]	@ 0x2c
 801656c:	698b      	ldr	r3, [r1, #24]
 801656e:	1a9b      	subs	r3, r3, r2
 8016570:	ee06 3a90 	vmov	s13, r3
 8016574:	684b      	ldr	r3, [r1, #4]
 8016576:	1a9b      	subs	r3, r3, r2
 8016578:	ee07 3a10 	vmov	s14, r3
 801657c:	eef8 6ae6 	vcvt.f32.s32	s13, s13
 8016580:	eeb8 7ac7 	vcvt.f32.s32	s14, s14
 8016584:	ee66 6a84 	vmul.f32	s13, s13, s8
 8016588:	ee27 7a04 	vmul.f32	s14, s14, s8
 801658c:	ee65 6a66 	vnmul.f32	s13, s10, s13
 8016590:	eee5 6a87 	vfma.f32	s13, s11, s14
 8016594:	ee66 6a83 	vmul.f32	s13, s13, s6
 8016598:	edc0 6a0b 	vstr	s13, [r0, #44]	@ 0x2c
 801659c:	6a8c      	ldr	r4, [r1, #40]	@ 0x28
 801659e:	694a      	ldr	r2, [r1, #20]
 80165a0:	1b13      	subs	r3, r2, r4
 80165a2:	ee07 3a10 	vmov	s14, r3
 80165a6:	eeb8 7ac7 	vcvt.f32.s32	s14, s14
 80165aa:	680b      	ldr	r3, [r1, #0]
 80165ac:	ee27 7a04 	vmul.f32	s14, s14, s8
 80165b0:	1b1b      	subs	r3, r3, r4
 80165b2:	ee25 5a47 	vnmul.f32	s10, s10, s14
 80165b6:	ee07 3a10 	vmov	s14, r3
 80165ba:	eeb8 7ac7 	vcvt.f32.s32	s14, s14
 80165be:	ee27 7a04 	vmul.f32	s14, s14, s8
 80165c2:	eea5 5a87 	vfma.f32	s10, s11, s14
 80165c6:	edd0 5a08 	vldr	s11, [r0, #32]
 80165ca:	ee25 5a06 	vmul.f32	s10, s10, s12
 80165ce:	ee31 1a65 	vsub.f32	s2, s2, s11
 80165d2:	ed80 5a0c 	vstr	s10, [r0, #48]	@ 0x30
 80165d6:	6aca      	ldr	r2, [r1, #44]	@ 0x2c
 80165d8:	698b      	ldr	r3, [r1, #24]
 80165da:	1a9b      	subs	r3, r3, r2
 80165dc:	ee07 3a10 	vmov	s14, r3
 80165e0:	684b      	ldr	r3, [r1, #4]
 80165e2:	1a9b      	subs	r3, r3, r2
 80165e4:	ee01 3a90 	vmov	s3, r3
 80165e8:	eeb8 7ac7 	vcvt.f32.s32	s14, s14
 80165ec:	ee72 5ae5 	vsub.f32	s11, s5, s11
 80165f0:	ee27 7a04 	vmul.f32	s14, s14, s8
 80165f4:	eef8 1ae1 	vcvt.f32.s32	s3, s3
 80165f8:	ee25 7ac7 	vnmul.f32	s14, s11, s14
 80165fc:	ee61 1a84 	vmul.f32	s3, s3, s8
 8016600:	eea1 7a21 	vfma.f32	s14, s2, s3
 8016604:	ee27 7a03 	vmul.f32	s14, s14, s6
 8016608:	ed80 7a0d 	vstr	s14, [r0, #52]	@ 0x34
 801660c:	6a8c      	ldr	r4, [r1, #40]	@ 0x28
 801660e:	694a      	ldr	r2, [r1, #20]
 8016610:	1b13      	subs	r3, r2, r4
 8016612:	ee03 3a10 	vmov	s6, r3
 8016616:	eeb8 3ac3 	vcvt.f32.s32	s6, s6
 801661a:	680b      	ldr	r3, [r1, #0]
 801661c:	ee23 3a04 	vmul.f32	s6, s6, s8
 8016620:	1b1b      	subs	r3, r3, r4
 8016622:	ee65 5ac3 	vnmul.f32	s11, s11, s6
 8016626:	ee03 3a10 	vmov	s6, r3
 801662a:	eeb8 3ac3 	vcvt.f32.s32	s6, s6
 801662e:	ee23 4a04 	vmul.f32	s8, s6, s8
 8016632:	eee1 5a04 	vfma.f32	s11, s2, s8
 8016636:	ee25 6a86 	vmul.f32	s12, s11, s12
 801663a:	ee62 5a67 	vnmul.f32	s11, s4, s15
 801663e:	ed80 6a0e 	vstr	s12, [r0, #56]	@ 0x38
 8016642:	eee3 5aa6 	vfma.f32	s11, s7, s13
 8016646:	eef5 5ac0 	vcmpe.f32	s11, #0.0
 801664a:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 801664e:	dd13      	ble.n	8016678 <_ZN8touchgfx9GradientsC1EPKNS_7Point3DE+0x224>
 8016650:	f44f 4300 	mov.w	r3, #32768	@ 0x8000
 8016654:	ee62 7ae7 	vnmul.f32	s15, s5, s15
 8016658:	63c3      	str	r3, [r0, #60]	@ 0x3c
 801665a:	eee3 7a87 	vfma.f32	s15, s7, s14
 801665e:	eef5 7ac0 	vcmpe.f32	s15, #0.0
 8016662:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 8016666:	dd15      	ble.n	8016694 <_ZN8touchgfx9GradientsC1EPKNS_7Point3DE+0x240>
 8016668:	f44f 4300 	mov.w	r3, #32768	@ 0x8000
 801666c:	6403      	str	r3, [r0, #64]	@ 0x40
 801666e:	bd70      	pop	{r4, r5, r6, pc}
 8016670:	4623      	mov	r3, r4
 8016672:	e6fd      	b.n	8016470 <_ZN8touchgfx9GradientsC1EPKNS_7Point3DE+0x1c>
 8016674:	462a      	mov	r2, r5
 8016676:	e706      	b.n	8016486 <_ZN8touchgfx9GradientsC1EPKNS_7Point3DE+0x32>
 8016678:	d502      	bpl.n	8016680 <_ZN8touchgfx9GradientsC1EPKNS_7Point3DE+0x22c>
 801667a:	f647 73ff 	movw	r3, #32767	@ 0x7fff
 801667e:	e7e9      	b.n	8016654 <_ZN8touchgfx9GradientsC1EPKNS_7Point3DE+0x200>
 8016680:	ee22 2a64 	vnmul.f32	s4, s4, s9
 8016684:	eea3 2a85 	vfma.f32	s4, s7, s10
 8016688:	eeb5 2ac0 	vcmpe.f32	s4, #0.0
 801668c:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 8016690:	dade      	bge.n	8016650 <_ZN8touchgfx9GradientsC1EPKNS_7Point3DE+0x1fc>
 8016692:	e7f2      	b.n	801667a <_ZN8touchgfx9GradientsC1EPKNS_7Point3DE+0x226>
 8016694:	d502      	bpl.n	801669c <_ZN8touchgfx9GradientsC1EPKNS_7Point3DE+0x248>
 8016696:	f647 73ff 	movw	r3, #32767	@ 0x7fff
 801669a:	e7e7      	b.n	801666c <_ZN8touchgfx9GradientsC1EPKNS_7Point3DE+0x218>
 801669c:	ee62 4ae4 	vnmul.f32	s9, s5, s9
 80166a0:	eee3 4a86 	vfma.f32	s9, s7, s12
 80166a4:	eef5 4ac0 	vcmpe.f32	s9, #0.0
 80166a8:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 80166ac:	dadc      	bge.n	8016668 <_ZN8touchgfx9GradientsC1EPKNS_7Point3DE+0x214>
 80166ae:	e7f2      	b.n	8016696 <_ZN8touchgfx9GradientsC1EPKNS_7Point3DE+0x242>
 80166b0:	3d800000 	.word	0x3d800000

080166b4 <_ZN8touchgfx4EdgeC1ERKNS_9GradientsEPKNS_7Point3DEii>:
 80166b4:	e92d 47f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
 80166b8:	2714      	movs	r7, #20
 80166ba:	435f      	muls	r7, r3
 80166bc:	eb02 0c07 	add.w	ip, r2, r7
 80166c0:	f8dc 5004 	ldr.w	r5, [ip, #4]
 80166c4:	f115 0e0f 	adds.w	lr, r5, #15
 80166c8:	f100 80a2 	bmi.w	8016810 <_ZN8touchgfx4EdgeC1ERKNS_9GradientsEPKNS_7Point3DEii+0x15c>
 80166cc:	ea4f 1e2e 	mov.w	lr, lr, asr #4
 80166d0:	9c08      	ldr	r4, [sp, #32]
 80166d2:	f8c0 e014 	str.w	lr, [r0, #20]
 80166d6:	2614      	movs	r6, #20
 80166d8:	4366      	muls	r6, r4
 80166da:	eb02 0806 	add.w	r8, r2, r6
 80166de:	f8d8 5004 	ldr.w	r5, [r8, #4]
 80166e2:	f115 040f 	adds.w	r4, r5, #15
 80166e6:	f100 809f 	bmi.w	8016828 <_ZN8touchgfx4EdgeC1ERKNS_9GradientsEPKNS_7Point3DEii+0x174>
 80166ea:	1124      	asrs	r4, r4, #4
 80166ec:	eba4 040e 	sub.w	r4, r4, lr
 80166f0:	6184      	str	r4, [r0, #24]
 80166f2:	2c00      	cmp	r4, #0
 80166f4:	f000 808a 	beq.w	801680c <_ZN8touchgfx4EdgeC1ERKNS_9GradientsEPKNS_7Point3DEii+0x158>
 80166f8:	f8dc 9004 	ldr.w	r9, [ip, #4]
 80166fc:	f8d8 4004 	ldr.w	r4, [r8, #4]
 8016700:	5995      	ldr	r5, [r2, r6]
 8016702:	eba4 0809 	sub.w	r8, r4, r9
 8016706:	59d4      	ldr	r4, [r2, r7]
 8016708:	eba5 0a04 	sub.w	sl, r5, r4
 801670c:	ea4f 150a 	mov.w	r5, sl, lsl #4
 8016710:	fb0e fe05 	mul.w	lr, lr, r5
 8016714:	fb0a ee19 	mls	lr, sl, r9, lr
 8016718:	fb08 e404 	mla	r4, r8, r4, lr
 801671c:	ea4f 1608 	mov.w	r6, r8, lsl #4
 8016720:	3c01      	subs	r4, #1
 8016722:	19a4      	adds	r4, r4, r6
 8016724:	f100 808c 	bmi.w	8016840 <_ZN8touchgfx4EdgeC1ERKNS_9GradientsEPKNS_7Point3DEii+0x18c>
 8016728:	fb94 fef6 	sdiv	lr, r4, r6
 801672c:	f8c0 e000 	str.w	lr, [r0]
 8016730:	fb06 441e 	mls	r4, r6, lr, r4
 8016734:	6104      	str	r4, [r0, #16]
 8016736:	2d00      	cmp	r5, #0
 8016738:	f2c0 8095 	blt.w	8016866 <_ZN8touchgfx4EdgeC1ERKNS_9GradientsEPKNS_7Point3DEii+0x1b2>
 801673c:	fb95 f4f6 	sdiv	r4, r5, r6
 8016740:	6044      	str	r4, [r0, #4]
 8016742:	fb06 5514 	mls	r5, r6, r4, r5
 8016746:	6085      	str	r5, [r0, #8]
 8016748:	60c6      	str	r6, [r0, #12]
 801674a:	f8dc 4004 	ldr.w	r4, [ip, #4]
 801674e:	6945      	ldr	r5, [r0, #20]
 8016750:	59d2      	ldr	r2, [r2, r7]
 8016752:	eddf 6a4d 	vldr	s13, [pc, #308]	@ 8016888 <_ZN8touchgfx4EdgeC1ERKNS_9GradientsEPKNS_7Point3DEii+0x1d4>
 8016756:	ed91 6a0a 	vldr	s12, [r1, #40]	@ 0x28
 801675a:	ebc4 1405 	rsb	r4, r4, r5, lsl #4
 801675e:	ee07 4a10 	vmov	s14, r4
 8016762:	6804      	ldr	r4, [r0, #0]
 8016764:	ebc2 1204 	rsb	r2, r2, r4, lsl #4
 8016768:	ee07 2a90 	vmov	s15, r2
 801676c:	eeb8 7ac7 	vcvt.f32.s32	s14, s14
 8016770:	eef8 7ae7 	vcvt.f32.s32	s15, s15
 8016774:	eb01 0383 	add.w	r3, r1, r3, lsl #2
 8016778:	ee27 7a26 	vmul.f32	s14, s14, s13
 801677c:	ee67 7aa6 	vmul.f32	s15, s15, s13
 8016780:	edd3 6a00 	vldr	s13, [r3]
 8016784:	eee6 6a07 	vfma.f32	s13, s12, s14
 8016788:	ed91 6a09 	vldr	s12, [r1, #36]	@ 0x24
 801678c:	eee6 6a27 	vfma.f32	s13, s12, s15
 8016790:	edc0 6a07 	vstr	s13, [r0, #28]
 8016794:	edd0 6a01 	vldr	s13, [r0, #4]
 8016798:	edd1 5a09 	vldr	s11, [r1, #36]	@ 0x24
 801679c:	ed91 6a0a 	vldr	s12, [r1, #40]	@ 0x28
 80167a0:	eef8 6ae6 	vcvt.f32.s32	s13, s13
 80167a4:	eea6 6aa5 	vfma.f32	s12, s13, s11
 80167a8:	ed80 6a08 	vstr	s12, [r0, #32]
 80167ac:	6a4a      	ldr	r2, [r1, #36]	@ 0x24
 80167ae:	6242      	str	r2, [r0, #36]	@ 0x24
 80167b0:	edd1 5a0c 	vldr	s11, [r1, #48]	@ 0x30
 80167b4:	ed93 6a03 	vldr	s12, [r3, #12]
 80167b8:	eea5 6a87 	vfma.f32	s12, s11, s14
 80167bc:	edd1 5a0b 	vldr	s11, [r1, #44]	@ 0x2c
 80167c0:	eea5 6aa7 	vfma.f32	s12, s11, s15
 80167c4:	ed80 6a0a 	vstr	s12, [r0, #40]	@ 0x28
 80167c8:	edd1 5a0b 	vldr	s11, [r1, #44]	@ 0x2c
 80167cc:	ed91 6a0c 	vldr	s12, [r1, #48]	@ 0x30
 80167d0:	eea6 6aa5 	vfma.f32	s12, s13, s11
 80167d4:	ed80 6a0b 	vstr	s12, [r0, #44]	@ 0x2c
 80167d8:	6aca      	ldr	r2, [r1, #44]	@ 0x2c
 80167da:	6302      	str	r2, [r0, #48]	@ 0x30
 80167dc:	ed93 6a06 	vldr	s12, [r3, #24]
 80167e0:	edd1 5a0e 	vldr	s11, [r1, #56]	@ 0x38
 80167e4:	eea5 6a87 	vfma.f32	s12, s11, s14
 80167e8:	eeb0 7a46 	vmov.f32	s14, s12
 80167ec:	ed91 6a0d 	vldr	s12, [r1, #52]	@ 0x34
 80167f0:	eea6 7a27 	vfma.f32	s14, s12, s15
 80167f4:	ed80 7a0d 	vstr	s14, [r0, #52]	@ 0x34
 80167f8:	ed91 7a0d 	vldr	s14, [r1, #52]	@ 0x34
 80167fc:	edd1 7a0e 	vldr	s15, [r1, #56]	@ 0x38
 8016800:	eee6 7a87 	vfma.f32	s15, s13, s14
 8016804:	edc0 7a0e 	vstr	s15, [r0, #56]	@ 0x38
 8016808:	6b4b      	ldr	r3, [r1, #52]	@ 0x34
 801680a:	63c3      	str	r3, [r0, #60]	@ 0x3c
 801680c:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
 8016810:	f1c5 0501 	rsb	r5, r5, #1
 8016814:	f015 050f 	ands.w	r5, r5, #15
 8016818:	bf18      	it	ne
 801681a:	2501      	movne	r5, #1
 801681c:	2410      	movs	r4, #16
 801681e:	fb9e fef4 	sdiv	lr, lr, r4
 8016822:	ebae 0e05 	sub.w	lr, lr, r5
 8016826:	e753      	b.n	80166d0 <_ZN8touchgfx4EdgeC1ERKNS_9GradientsEPKNS_7Point3DEii+0x1c>
 8016828:	f1c5 0501 	rsb	r5, r5, #1
 801682c:	f015 050f 	ands.w	r5, r5, #15
 8016830:	bf18      	it	ne
 8016832:	2501      	movne	r5, #1
 8016834:	f04f 0910 	mov.w	r9, #16
 8016838:	fb94 f4f9 	sdiv	r4, r4, r9
 801683c:	1b64      	subs	r4, r4, r5
 801683e:	e755      	b.n	80166ec <_ZN8touchgfx4EdgeC1ERKNS_9GradientsEPKNS_7Point3DEii+0x38>
 8016840:	4264      	negs	r4, r4
 8016842:	fb94 fef6 	sdiv	lr, r4, r6
 8016846:	f1ce 0800 	rsb	r8, lr, #0
 801684a:	fb06 441e 	mls	r4, r6, lr, r4
 801684e:	f8c0 8000 	str.w	r8, [r0]
 8016852:	6104      	str	r4, [r0, #16]
 8016854:	2c00      	cmp	r4, #0
 8016856:	f43f af6e 	beq.w	8016736 <_ZN8touchgfx4EdgeC1ERKNS_9GradientsEPKNS_7Point3DEii+0x82>
 801685a:	ea6f 0e0e 	mvn.w	lr, lr
 801685e:	f8c0 e000 	str.w	lr, [r0]
 8016862:	1b34      	subs	r4, r6, r4
 8016864:	e766      	b.n	8016734 <_ZN8touchgfx4EdgeC1ERKNS_9GradientsEPKNS_7Point3DEii+0x80>
 8016866:	426d      	negs	r5, r5
 8016868:	fb95 f4f6 	sdiv	r4, r5, r6
 801686c:	f1c4 0e00 	rsb	lr, r4, #0
 8016870:	fb06 5514 	mls	r5, r6, r4, r5
 8016874:	f8c0 e004 	str.w	lr, [r0, #4]
 8016878:	6085      	str	r5, [r0, #8]
 801687a:	2d00      	cmp	r5, #0
 801687c:	f43f af64 	beq.w	8016748 <_ZN8touchgfx4EdgeC1ERKNS_9GradientsEPKNS_7Point3DEii+0x94>
 8016880:	43e4      	mvns	r4, r4
 8016882:	6044      	str	r4, [r0, #4]
 8016884:	1b75      	subs	r5, r6, r5
 8016886:	e75e      	b.n	8016746 <_ZN8touchgfx4EdgeC1ERKNS_9GradientsEPKNS_7Point3DEii+0x92>
 8016888:	3d800000 	.word	0x3d800000

0801688c <_ZN8touchgfx7Unicode6strlenEPKt>:
 801688c:	4602      	mov	r2, r0
 801688e:	b148      	cbz	r0, 80168a4 <_ZN8touchgfx7Unicode6strlenEPKt+0x18>
 8016890:	2300      	movs	r3, #0
 8016892:	b298      	uxth	r0, r3
 8016894:	3301      	adds	r3, #1
 8016896:	eb02 0143 	add.w	r1, r2, r3, lsl #1
 801689a:	f831 1c02 	ldrh.w	r1, [r1, #-2]
 801689e:	2900      	cmp	r1, #0
 80168a0:	d1f7      	bne.n	8016892 <_ZN8touchgfx7Unicode6strlenEPKt+0x6>
 80168a2:	4770      	bx	lr
 80168a4:	4770      	bx	lr

080168a6 <_ZN8touchgfx7Unicode7strncpyEPtPKct>:
 80168a6:	b530      	push	{r4, r5, lr}
 80168a8:	4604      	mov	r4, r0
 80168aa:	b159      	cbz	r1, 80168c4 <_ZN8touchgfx7Unicode7strncpyEPtPKct+0x1e>
 80168ac:	b148      	cbz	r0, 80168c2 <_ZN8touchgfx7Unicode7strncpyEPtPKct+0x1c>
 80168ae:	2300      	movs	r3, #0
 80168b0:	b298      	uxth	r0, r3
 80168b2:	4282      	cmp	r2, r0
 80168b4:	d905      	bls.n	80168c2 <_ZN8touchgfx7Unicode7strncpyEPtPKct+0x1c>
 80168b6:	5ccd      	ldrb	r5, [r1, r3]
 80168b8:	f824 5013 	strh.w	r5, [r4, r3, lsl #1]
 80168bc:	3301      	adds	r3, #1
 80168be:	2d00      	cmp	r5, #0
 80168c0:	d1f6      	bne.n	80168b0 <_ZN8touchgfx7Unicode7strncpyEPtPKct+0xa>
 80168c2:	bd30      	pop	{r4, r5, pc}
 80168c4:	4608      	mov	r0, r1
 80168c6:	e7fc      	b.n	80168c2 <_ZN8touchgfx7Unicode7strncpyEPtPKct+0x1c>

080168c8 <_ZN8touchgfx7Unicode4itoaElPtti.part.2>:
 80168c8:	b5f0      	push	{r4, r5, r6, r7, lr}
 80168ca:	b08b      	sub	sp, #44	@ 0x2c
 80168cc:	468c      	mov	ip, r1
 80168ce:	2100      	movs	r1, #0
 80168d0:	f88d 1024 	strb.w	r1, [sp, #36]	@ 0x24
 80168d4:	4604      	mov	r4, r0
 80168d6:	261f      	movs	r6, #31
 80168d8:	af01      	add	r7, sp, #4
 80168da:	fb94 fef3 	sdiv	lr, r4, r3
 80168de:	fb03 441e 	mls	r4, r3, lr, r4
 80168e2:	ea84 75e4 	eor.w	r5, r4, r4, asr #31
 80168e6:	eba5 75e4 	sub.w	r5, r5, r4, asr #31
 80168ea:	b2ec      	uxtb	r4, r5
 80168ec:	2d09      	cmp	r5, #9
 80168ee:	bfd4      	ite	le
 80168f0:	3430      	addle	r4, #48	@ 0x30
 80168f2:	3457      	addgt	r4, #87	@ 0x57
 80168f4:	b2e4      	uxtb	r4, r4
 80168f6:	55bc      	strb	r4, [r7, r6]
 80168f8:	4674      	mov	r4, lr
 80168fa:	1e71      	subs	r1, r6, #1
 80168fc:	b974      	cbnz	r4, 801691c <_ZN8touchgfx7Unicode4itoaElPtti.part.2+0x54>
 80168fe:	2800      	cmp	r0, #0
 8016900:	da05      	bge.n	801690e <_ZN8touchgfx7Unicode4itoaElPtti.part.2+0x46>
 8016902:	ab0a      	add	r3, sp, #40	@ 0x28
 8016904:	4419      	add	r1, r3
 8016906:	232d      	movs	r3, #45	@ 0x2d
 8016908:	f801 3c24 	strb.w	r3, [r1, #-36]
 801690c:	1eb1      	subs	r1, r6, #2
 801690e:	3101      	adds	r1, #1
 8016910:	4439      	add	r1, r7
 8016912:	4660      	mov	r0, ip
 8016914:	f7ff ffc7 	bl	80168a6 <_ZN8touchgfx7Unicode7strncpyEPtPKct>
 8016918:	b00b      	add	sp, #44	@ 0x2c
 801691a:	bdf0      	pop	{r4, r5, r6, r7, pc}
 801691c:	460e      	mov	r6, r1
 801691e:	e7dc      	b.n	80168da <_ZN8touchgfx7Unicode4itoaElPtti.part.2+0x12>

08016920 <_ZN8touchgfx7Unicode4utoaEmPtti.part.3>:
 8016920:	b5f0      	push	{r4, r5, r6, r7, lr}
 8016922:	b08b      	sub	sp, #44	@ 0x2c
 8016924:	468c      	mov	ip, r1
 8016926:	2100      	movs	r1, #0
 8016928:	f88d 1024 	strb.w	r1, [sp, #36]	@ 0x24
 801692c:	ae01      	add	r6, sp, #4
 801692e:	211f      	movs	r1, #31
 8016930:	fbb0 f7f3 	udiv	r7, r0, r3
 8016934:	fb03 0517 	mls	r5, r3, r7, r0
 8016938:	b2ec      	uxtb	r4, r5
 801693a:	2d09      	cmp	r5, #9
 801693c:	bfd4      	ite	le
 801693e:	3430      	addle	r4, #48	@ 0x30
 8016940:	3457      	addgt	r4, #87	@ 0x57
 8016942:	b2e4      	uxtb	r4, r4
 8016944:	558c      	strb	r4, [r1, r6]
 8016946:	4638      	mov	r0, r7
 8016948:	1e4c      	subs	r4, r1, #1
 801694a:	b92f      	cbnz	r7, 8016958 <_ZN8touchgfx7Unicode4utoaEmPtti.part.3+0x38>
 801694c:	4431      	add	r1, r6
 801694e:	4660      	mov	r0, ip
 8016950:	f7ff ffa9 	bl	80168a6 <_ZN8touchgfx7Unicode7strncpyEPtPKct>
 8016954:	b00b      	add	sp, #44	@ 0x2c
 8016956:	bdf0      	pop	{r4, r5, r6, r7, pc}
 8016958:	4621      	mov	r1, r4
 801695a:	e7e9      	b.n	8016930 <_ZN8touchgfx7Unicode4utoaEmPtti.part.3+0x10>

0801695c <_ZN8touchgfx7Unicode4itoaElPtti>:
 801695c:	b410      	push	{r4}
 801695e:	b131      	cbz	r1, 801696e <_ZN8touchgfx7Unicode4itoaElPtti+0x12>
 8016960:	1e9c      	subs	r4, r3, #2
 8016962:	2c22      	cmp	r4, #34	@ 0x22
 8016964:	d803      	bhi.n	801696e <_ZN8touchgfx7Unicode4itoaElPtti+0x12>
 8016966:	f85d 4b04 	ldr.w	r4, [sp], #4
 801696a:	f7ff bfad 	b.w	80168c8 <_ZN8touchgfx7Unicode4itoaElPtti.part.2>
 801696e:	f85d 4b04 	ldr.w	r4, [sp], #4
 8016972:	4770      	bx	lr

08016974 <_ZN8touchgfx7Unicode13composeStringERPKtttbbibibRitPt>:
 8016974:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8016978:	4691      	mov	r9, r2
 801697a:	b085      	sub	sp, #20
 801697c:	6802      	ldr	r2, [r0, #0]
 801697e:	9201      	str	r2, [sp, #4]
 8016980:	4688      	mov	r8, r1
 8016982:	4683      	mov	fp, r0
 8016984:	f89d 1040 	ldrb.w	r1, [sp, #64]	@ 0x40
 8016988:	9103      	str	r1, [sp, #12]
 801698a:	4610      	mov	r0, r2
 801698c:	461c      	mov	r4, r3
 801698e:	f89d 3048 	ldrb.w	r3, [sp, #72]	@ 0x48
 8016992:	9302      	str	r3, [sp, #8]
 8016994:	f7ff ff7a 	bl	801688c <_ZN8touchgfx7Unicode6strlenEPKt>
 8016998:	f1b8 0f00 	cmp.w	r8, #0
 801699c:	bf0c      	ite	eq
 801699e:	4684      	moveq	ip, r0
 80169a0:	f100 0c01 	addne.w	ip, r0, #1
 80169a4:	f1b9 0f69 	cmp.w	r9, #105	@ 0x69
 80169a8:	f89d 6038 	ldrb.w	r6, [sp, #56]	@ 0x38
 80169ac:	9f0f      	ldr	r7, [sp, #60]	@ 0x3c
 80169ae:	9d13      	ldr	r5, [sp, #76]	@ 0x4c
 80169b0:	f8dd a054 	ldr.w	sl, [sp, #84]	@ 0x54
 80169b4:	9903      	ldr	r1, [sp, #12]
 80169b6:	fa1f fc8c 	uxth.w	ip, ip
 80169ba:	e9dd 2301 	ldrd	r2, r3, [sp, #4]
 80169be:	d041      	beq.n	8016a44 <_ZN8touchgfx7Unicode13composeStringERPKtttbbibibRitPt+0xd0>
 80169c0:	d834      	bhi.n	8016a2c <_ZN8touchgfx7Unicode13composeStringERPKtttbbibibRitPt+0xb8>
 80169c2:	f1b9 0f63 	cmp.w	r9, #99	@ 0x63
 80169c6:	d059      	beq.n	8016a7c <_ZN8touchgfx7Unicode13composeStringERPKtttbbibibRitPt+0x108>
 80169c8:	f1b9 0f64 	cmp.w	r9, #100	@ 0x64
 80169cc:	d03a      	beq.n	8016a44 <_ZN8touchgfx7Unicode13composeStringERPKtttbbibibRitPt+0xd0>
 80169ce:	f1b9 0f58 	cmp.w	r9, #88	@ 0x58
 80169d2:	d034      	beq.n	8016a3e <_ZN8touchgfx7Unicode13composeStringERPKtttbbibibRitPt+0xca>
 80169d4:	2400      	movs	r4, #0
 80169d6:	f8bd 2050 	ldrh.w	r2, [sp, #80]	@ 0x50
 80169da:	3a01      	subs	r2, #1
 80169dc:	b169      	cbz	r1, 80169fa <_ZN8touchgfx7Unicode13composeStringERPKtttbbibibRitPt+0x86>
 80169de:	9911      	ldr	r1, [sp, #68]	@ 0x44
 80169e0:	458c      	cmp	ip, r1
 80169e2:	da09      	bge.n	80169f8 <_ZN8touchgfx7Unicode13composeStringERPKtttbbibibRitPt+0x84>
 80169e4:	eba1 010c 	sub.w	r1, r1, ip
 80169e8:	b289      	uxth	r1, r1
 80169ea:	b933      	cbnz	r3, 80169fa <_ZN8touchgfx7Unicode13composeStringERPKtttbbibibRitPt+0x86>
 80169ec:	2e00      	cmp	r6, #0
 80169ee:	d051      	beq.n	8016a94 <_ZN8touchgfx7Unicode13composeStringERPKtttbbibibRitPt+0x120>
 80169f0:	2800      	cmp	r0, #0
 80169f2:	d04f      	beq.n	8016a94 <_ZN8touchgfx7Unicode13composeStringERPKtttbbibibRitPt+0x120>
 80169f4:	440c      	add	r4, r1
 80169f6:	b2a4      	uxth	r4, r4
 80169f8:	2100      	movs	r1, #0
 80169fa:	682b      	ldr	r3, [r5, #0]
 80169fc:	4293      	cmp	r3, r2
 80169fe:	da07      	bge.n	8016a10 <_ZN8touchgfx7Unicode13composeStringERPKtttbbibibRitPt+0x9c>
 8016a00:	f1b8 0f00 	cmp.w	r8, #0
 8016a04:	d004      	beq.n	8016a10 <_ZN8touchgfx7Unicode13composeStringERPKtttbbibibRitPt+0x9c>
 8016a06:	f82a 8013 	strh.w	r8, [sl, r3, lsl #1]
 8016a0a:	682b      	ldr	r3, [r5, #0]
 8016a0c:	3301      	adds	r3, #1
 8016a0e:	602b      	str	r3, [r5, #0]
 8016a10:	2730      	movs	r7, #48	@ 0x30
 8016a12:	2c00      	cmp	r4, #0
 8016a14:	d04e      	beq.n	8016ab4 <_ZN8touchgfx7Unicode13composeStringERPKtttbbibibRitPt+0x140>
 8016a16:	682e      	ldr	r6, [r5, #0]
 8016a18:	3c01      	subs	r4, #1
 8016a1a:	42b2      	cmp	r2, r6
 8016a1c:	b2a4      	uxth	r4, r4
 8016a1e:	dd49      	ble.n	8016ab4 <_ZN8touchgfx7Unicode13composeStringERPKtttbbibibRitPt+0x140>
 8016a20:	f82a 7016 	strh.w	r7, [sl, r6, lsl #1]
 8016a24:	682b      	ldr	r3, [r5, #0]
 8016a26:	3301      	adds	r3, #1
 8016a28:	602b      	str	r3, [r5, #0]
 8016a2a:	e7f2      	b.n	8016a12 <_ZN8touchgfx7Unicode13composeStringERPKtttbbibibRitPt+0x9e>
 8016a2c:	f1b9 0f73 	cmp.w	r9, #115	@ 0x73
 8016a30:	d01d      	beq.n	8016a6e <_ZN8touchgfx7Unicode13composeStringERPKtttbbibibRitPt+0xfa>
 8016a32:	f1b9 0f78 	cmp.w	r9, #120	@ 0x78
 8016a36:	d002      	beq.n	8016a3e <_ZN8touchgfx7Unicode13composeStringERPKtttbbibibRitPt+0xca>
 8016a38:	f1b9 0f6f 	cmp.w	r9, #111	@ 0x6f
 8016a3c:	e7c9      	b.n	80169d2 <_ZN8touchgfx7Unicode13composeStringERPKtttbbibibRitPt+0x5e>
 8016a3e:	4684      	mov	ip, r0
 8016a40:	f04f 0800 	mov.w	r8, #0
 8016a44:	2c00      	cmp	r4, #0
 8016a46:	d0c6      	beq.n	80169d6 <_ZN8touchgfx7Unicode13composeStringERPKtttbbibibRitPt+0x62>
 8016a48:	b947      	cbnz	r7, 8016a5c <_ZN8touchgfx7Unicode13composeStringERPKtttbbibibRitPt+0xe8>
 8016a4a:	2801      	cmp	r0, #1
 8016a4c:	d106      	bne.n	8016a5c <_ZN8touchgfx7Unicode13composeStringERPKtttbbibibRitPt+0xe8>
 8016a4e:	8814      	ldrh	r4, [r2, #0]
 8016a50:	2c30      	cmp	r4, #48	@ 0x30
 8016a52:	bf02      	ittt	eq
 8016a54:	3202      	addeq	r2, #2
 8016a56:	f8cb 2000 	streq.w	r2, [fp]
 8016a5a:	4638      	moveq	r0, r7
 8016a5c:	45bc      	cmp	ip, r7
 8016a5e:	da14      	bge.n	8016a8a <_ZN8touchgfx7Unicode13composeStringERPKtttbbibibRitPt+0x116>
 8016a60:	b2bf      	uxth	r7, r7
 8016a62:	eba7 040c 	sub.w	r4, r7, ip
 8016a66:	b2a4      	uxth	r4, r4
 8016a68:	46bc      	mov	ip, r7
 8016a6a:	2600      	movs	r6, #0
 8016a6c:	e7b3      	b.n	80169d6 <_ZN8touchgfx7Unicode13composeStringERPKtttbbibibRitPt+0x62>
 8016a6e:	4684      	mov	ip, r0
 8016a70:	b16c      	cbz	r4, 8016a8e <_ZN8touchgfx7Unicode13composeStringERPKtttbbibibRitPt+0x11a>
 8016a72:	42b8      	cmp	r0, r7
 8016a74:	dd00      	ble.n	8016a78 <_ZN8touchgfx7Unicode13composeStringERPKtttbbibibRitPt+0x104>
 8016a76:	b2b8      	uxth	r0, r7
 8016a78:	2400      	movs	r4, #0
 8016a7a:	e003      	b.n	8016a84 <_ZN8touchgfx7Unicode13composeStringERPKtttbbibibRitPt+0x110>
 8016a7c:	f04f 0c01 	mov.w	ip, #1
 8016a80:	2400      	movs	r4, #0
 8016a82:	4660      	mov	r0, ip
 8016a84:	4626      	mov	r6, r4
 8016a86:	46a0      	mov	r8, r4
 8016a88:	e7a5      	b.n	80169d6 <_ZN8touchgfx7Unicode13composeStringERPKtttbbibibRitPt+0x62>
 8016a8a:	2400      	movs	r4, #0
 8016a8c:	e7ed      	b.n	8016a6a <_ZN8touchgfx7Unicode13composeStringERPKtttbbibibRitPt+0xf6>
 8016a8e:	4626      	mov	r6, r4
 8016a90:	46a0      	mov	r8, r4
 8016a92:	e7a0      	b.n	80169d6 <_ZN8touchgfx7Unicode13composeStringERPKtttbbibibRitPt+0x62>
 8016a94:	2900      	cmp	r1, #0
 8016a96:	d0b0      	beq.n	80169fa <_ZN8touchgfx7Unicode13composeStringERPKtttbbibibRitPt+0x86>
 8016a98:	2720      	movs	r7, #32
 8016a9a:	682e      	ldr	r6, [r5, #0]
 8016a9c:	2900      	cmp	r1, #0
 8016a9e:	d0ac      	beq.n	80169fa <_ZN8touchgfx7Unicode13composeStringERPKtttbbibibRitPt+0x86>
 8016aa0:	3901      	subs	r1, #1
 8016aa2:	4296      	cmp	r6, r2
 8016aa4:	b289      	uxth	r1, r1
 8016aa6:	daa7      	bge.n	80169f8 <_ZN8touchgfx7Unicode13composeStringERPKtttbbibibRitPt+0x84>
 8016aa8:	f82a 7016 	strh.w	r7, [sl, r6, lsl #1]
 8016aac:	682b      	ldr	r3, [r5, #0]
 8016aae:	3301      	adds	r3, #1
 8016ab0:	602b      	str	r3, [r5, #0]
 8016ab2:	e7f2      	b.n	8016a9a <_ZN8touchgfx7Unicode13composeStringERPKtttbbibibRitPt+0x126>
 8016ab4:	b188      	cbz	r0, 8016ada <_ZN8touchgfx7Unicode13composeStringERPKtttbbibibRitPt+0x166>
 8016ab6:	682b      	ldr	r3, [r5, #0]
 8016ab8:	3801      	subs	r0, #1
 8016aba:	429a      	cmp	r2, r3
 8016abc:	b280      	uxth	r0, r0
 8016abe:	dd0c      	ble.n	8016ada <_ZN8touchgfx7Unicode13composeStringERPKtttbbibibRitPt+0x166>
 8016ac0:	f8db 3000 	ldr.w	r3, [fp]
 8016ac4:	1c9c      	adds	r4, r3, #2
 8016ac6:	f8cb 4000 	str.w	r4, [fp]
 8016aca:	881c      	ldrh	r4, [r3, #0]
 8016acc:	682b      	ldr	r3, [r5, #0]
 8016ace:	f82a 4013 	strh.w	r4, [sl, r3, lsl #1]
 8016ad2:	682b      	ldr	r3, [r5, #0]
 8016ad4:	3301      	adds	r3, #1
 8016ad6:	602b      	str	r3, [r5, #0]
 8016ad8:	e7ec      	b.n	8016ab4 <_ZN8touchgfx7Unicode13composeStringERPKtttbbibibRitPt+0x140>
 8016ada:	2620      	movs	r6, #32
 8016adc:	b151      	cbz	r1, 8016af4 <_ZN8touchgfx7Unicode13composeStringERPKtttbbibibRitPt+0x180>
 8016ade:	6828      	ldr	r0, [r5, #0]
 8016ae0:	3901      	subs	r1, #1
 8016ae2:	4282      	cmp	r2, r0
 8016ae4:	b289      	uxth	r1, r1
 8016ae6:	dd05      	ble.n	8016af4 <_ZN8touchgfx7Unicode13composeStringERPKtttbbibibRitPt+0x180>
 8016ae8:	f82a 6010 	strh.w	r6, [sl, r0, lsl #1]
 8016aec:	682b      	ldr	r3, [r5, #0]
 8016aee:	3301      	adds	r3, #1
 8016af0:	602b      	str	r3, [r5, #0]
 8016af2:	e7f3      	b.n	8016adc <_ZN8touchgfx7Unicode13composeStringERPKtttbbibibRitPt+0x168>
 8016af4:	b005      	add	sp, #20
 8016af6:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}

08016afa <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_>:
 8016afa:	e92d 43f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, lr}
 8016afe:	e9dd 8c07 	ldrd	r8, ip, [sp, #28]
 8016b02:	e9dd e609 	ldrd	lr, r6, [sp, #36]	@ 0x24
 8016b06:	e9dd 750b 	ldrd	r7, r5, [sp, #44]	@ 0x2c
 8016b0a:	2400      	movs	r4, #0
 8016b0c:	8014      	strh	r4, [r2, #0]
 8016b0e:	701c      	strb	r4, [r3, #0]
 8016b10:	f888 4000 	strb.w	r4, [r8]
 8016b14:	f88c 4000 	strb.w	r4, [ip]
 8016b18:	f88e 4000 	strb.w	r4, [lr]
 8016b1c:	703c      	strb	r4, [r7, #0]
 8016b1e:	6804      	ldr	r4, [r0, #0]
 8016b20:	b1a4      	cbz	r4, 8016b4c <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0x52>
 8016b22:	8824      	ldrh	r4, [r4, #0]
 8016b24:	f04f 0901 	mov.w	r9, #1
 8016b28:	b314      	cbz	r4, 8016b70 <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0x76>
 8016b2a:	2c2b      	cmp	r4, #43	@ 0x2b
 8016b2c:	d001      	beq.n	8016b32 <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0x38>
 8016b2e:	2c20      	cmp	r4, #32
 8016b30:	d110      	bne.n	8016b54 <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0x5a>
 8016b32:	8014      	strh	r4, [r2, #0]
 8016b34:	6804      	ldr	r4, [r0, #0]
 8016b36:	b10c      	cbz	r4, 8016b3c <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0x42>
 8016b38:	3402      	adds	r4, #2
 8016b3a:	6004      	str	r4, [r0, #0]
 8016b3c:	680c      	ldr	r4, [r1, #0]
 8016b3e:	b10c      	cbz	r4, 8016b44 <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0x4a>
 8016b40:	3401      	adds	r4, #1
 8016b42:	600c      	str	r4, [r1, #0]
 8016b44:	6804      	ldr	r4, [r0, #0]
 8016b46:	b17c      	cbz	r4, 8016b68 <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0x6e>
 8016b48:	8824      	ldrh	r4, [r4, #0]
 8016b4a:	e7ed      	b.n	8016b28 <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0x2e>
 8016b4c:	680c      	ldr	r4, [r1, #0]
 8016b4e:	b17c      	cbz	r4, 8016b70 <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0x76>
 8016b50:	7824      	ldrb	r4, [r4, #0]
 8016b52:	e7e7      	b.n	8016b24 <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0x2a>
 8016b54:	2c2d      	cmp	r4, #45	@ 0x2d
 8016b56:	d102      	bne.n	8016b5e <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0x64>
 8016b58:	f883 9000 	strb.w	r9, [r3]
 8016b5c:	e7ea      	b.n	8016b34 <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0x3a>
 8016b5e:	2c23      	cmp	r4, #35	@ 0x23
 8016b60:	d107      	bne.n	8016b72 <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0x78>
 8016b62:	f888 9000 	strb.w	r9, [r8]
 8016b66:	e7e5      	b.n	8016b34 <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0x3a>
 8016b68:	680c      	ldr	r4, [r1, #0]
 8016b6a:	b10c      	cbz	r4, 8016b70 <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0x76>
 8016b6c:	7824      	ldrb	r4, [r4, #0]
 8016b6e:	e7db      	b.n	8016b28 <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0x2e>
 8016b70:	2400      	movs	r4, #0
 8016b72:	f1a4 0330 	sub.w	r3, r4, #48	@ 0x30
 8016b76:	2b09      	cmp	r3, #9
 8016b78:	d901      	bls.n	8016b7e <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0x84>
 8016b7a:	2c2a      	cmp	r4, #42	@ 0x2a
 8016b7c:	d122      	bne.n	8016bc4 <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0xca>
 8016b7e:	2301      	movs	r3, #1
 8016b80:	2c30      	cmp	r4, #48	@ 0x30
 8016b82:	f88e 3000 	strb.w	r3, [lr]
 8016b86:	d10d      	bne.n	8016ba4 <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0xaa>
 8016b88:	f88c 3000 	strb.w	r3, [ip]
 8016b8c:	6803      	ldr	r3, [r0, #0]
 8016b8e:	b10b      	cbz	r3, 8016b94 <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0x9a>
 8016b90:	3302      	adds	r3, #2
 8016b92:	6003      	str	r3, [r0, #0]
 8016b94:	680b      	ldr	r3, [r1, #0]
 8016b96:	b10b      	cbz	r3, 8016b9c <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0xa2>
 8016b98:	3301      	adds	r3, #1
 8016b9a:	600b      	str	r3, [r1, #0]
 8016b9c:	6803      	ldr	r3, [r0, #0]
 8016b9e:	2b00      	cmp	r3, #0
 8016ba0:	d02f      	beq.n	8016c02 <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0x108>
 8016ba2:	881c      	ldrh	r4, [r3, #0]
 8016ba4:	2c2a      	cmp	r4, #42	@ 0x2a
 8016ba6:	d135      	bne.n	8016c14 <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0x11a>
 8016ba8:	f04f 33ff 	mov.w	r3, #4294967295
 8016bac:	6033      	str	r3, [r6, #0]
 8016bae:	6803      	ldr	r3, [r0, #0]
 8016bb0:	b10b      	cbz	r3, 8016bb6 <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0xbc>
 8016bb2:	3302      	adds	r3, #2
 8016bb4:	6003      	str	r3, [r0, #0]
 8016bb6:	680b      	ldr	r3, [r1, #0]
 8016bb8:	b10b      	cbz	r3, 8016bbe <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0xc4>
 8016bba:	3301      	adds	r3, #1
 8016bbc:	600b      	str	r3, [r1, #0]
 8016bbe:	6803      	ldr	r3, [r0, #0]
 8016bc0:	b31b      	cbz	r3, 8016c0a <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0x110>
 8016bc2:	881c      	ldrh	r4, [r3, #0]
 8016bc4:	2c2e      	cmp	r4, #46	@ 0x2e
 8016bc6:	d11a      	bne.n	8016bfe <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0x104>
 8016bc8:	2301      	movs	r3, #1
 8016bca:	703b      	strb	r3, [r7, #0]
 8016bcc:	6803      	ldr	r3, [r0, #0]
 8016bce:	b10b      	cbz	r3, 8016bd4 <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0xda>
 8016bd0:	3302      	adds	r3, #2
 8016bd2:	6003      	str	r3, [r0, #0]
 8016bd4:	680b      	ldr	r3, [r1, #0]
 8016bd6:	b10b      	cbz	r3, 8016bdc <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0xe2>
 8016bd8:	3301      	adds	r3, #1
 8016bda:	600b      	str	r3, [r1, #0]
 8016bdc:	6803      	ldr	r3, [r0, #0]
 8016bde:	2b00      	cmp	r3, #0
 8016be0:	d036      	beq.n	8016c50 <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0x156>
 8016be2:	881b      	ldrh	r3, [r3, #0]
 8016be4:	2b2a      	cmp	r3, #42	@ 0x2a
 8016be6:	d137      	bne.n	8016c58 <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0x15e>
 8016be8:	f04f 33ff 	mov.w	r3, #4294967295
 8016bec:	602b      	str	r3, [r5, #0]
 8016bee:	6803      	ldr	r3, [r0, #0]
 8016bf0:	b10b      	cbz	r3, 8016bf6 <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0xfc>
 8016bf2:	3302      	adds	r3, #2
 8016bf4:	6003      	str	r3, [r0, #0]
 8016bf6:	680b      	ldr	r3, [r1, #0]
 8016bf8:	b10b      	cbz	r3, 8016bfe <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0x104>
 8016bfa:	3301      	adds	r3, #1
 8016bfc:	600b      	str	r3, [r1, #0]
 8016bfe:	e8bd 83f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, pc}
 8016c02:	680c      	ldr	r4, [r1, #0]
 8016c04:	b134      	cbz	r4, 8016c14 <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0x11a>
 8016c06:	7824      	ldrb	r4, [r4, #0]
 8016c08:	e7cc      	b.n	8016ba4 <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0xaa>
 8016c0a:	680b      	ldr	r3, [r1, #0]
 8016c0c:	2b00      	cmp	r3, #0
 8016c0e:	d0f6      	beq.n	8016bfe <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0x104>
 8016c10:	781c      	ldrb	r4, [r3, #0]
 8016c12:	e7d7      	b.n	8016bc4 <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0xca>
 8016c14:	2300      	movs	r3, #0
 8016c16:	6033      	str	r3, [r6, #0]
 8016c18:	220a      	movs	r2, #10
 8016c1a:	f1a4 0c30 	sub.w	ip, r4, #48	@ 0x30
 8016c1e:	fa1f f38c 	uxth.w	r3, ip
 8016c22:	2b09      	cmp	r3, #9
 8016c24:	d8ce      	bhi.n	8016bc4 <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0xca>
 8016c26:	6833      	ldr	r3, [r6, #0]
 8016c28:	fb02 c303 	mla	r3, r2, r3, ip
 8016c2c:	6033      	str	r3, [r6, #0]
 8016c2e:	6803      	ldr	r3, [r0, #0]
 8016c30:	b10b      	cbz	r3, 8016c36 <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0x13c>
 8016c32:	3302      	adds	r3, #2
 8016c34:	6003      	str	r3, [r0, #0]
 8016c36:	680b      	ldr	r3, [r1, #0]
 8016c38:	b10b      	cbz	r3, 8016c3e <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0x144>
 8016c3a:	3301      	adds	r3, #1
 8016c3c:	600b      	str	r3, [r1, #0]
 8016c3e:	6803      	ldr	r3, [r0, #0]
 8016c40:	b10b      	cbz	r3, 8016c46 <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0x14c>
 8016c42:	881c      	ldrh	r4, [r3, #0]
 8016c44:	e7e9      	b.n	8016c1a <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0x120>
 8016c46:	680c      	ldr	r4, [r1, #0]
 8016c48:	2c00      	cmp	r4, #0
 8016c4a:	d0e6      	beq.n	8016c1a <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0x120>
 8016c4c:	7824      	ldrb	r4, [r4, #0]
 8016c4e:	e7e4      	b.n	8016c1a <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0x120>
 8016c50:	680b      	ldr	r3, [r1, #0]
 8016c52:	b10b      	cbz	r3, 8016c58 <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0x15e>
 8016c54:	781b      	ldrb	r3, [r3, #0]
 8016c56:	e7c5      	b.n	8016be4 <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0xea>
 8016c58:	2200      	movs	r2, #0
 8016c5a:	602a      	str	r2, [r5, #0]
 8016c5c:	240a      	movs	r4, #10
 8016c5e:	3b30      	subs	r3, #48	@ 0x30
 8016c60:	b29e      	uxth	r6, r3
 8016c62:	2e09      	cmp	r6, #9
 8016c64:	682a      	ldr	r2, [r5, #0]
 8016c66:	d813      	bhi.n	8016c90 <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0x196>
 8016c68:	fb04 3302 	mla	r3, r4, r2, r3
 8016c6c:	602b      	str	r3, [r5, #0]
 8016c6e:	6803      	ldr	r3, [r0, #0]
 8016c70:	b10b      	cbz	r3, 8016c76 <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0x17c>
 8016c72:	3302      	adds	r3, #2
 8016c74:	6003      	str	r3, [r0, #0]
 8016c76:	680b      	ldr	r3, [r1, #0]
 8016c78:	b10b      	cbz	r3, 8016c7e <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0x184>
 8016c7a:	3301      	adds	r3, #1
 8016c7c:	600b      	str	r3, [r1, #0]
 8016c7e:	6803      	ldr	r3, [r0, #0]
 8016c80:	b10b      	cbz	r3, 8016c86 <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0x18c>
 8016c82:	881b      	ldrh	r3, [r3, #0]
 8016c84:	e7eb      	b.n	8016c5e <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0x164>
 8016c86:	680b      	ldr	r3, [r1, #0]
 8016c88:	2b00      	cmp	r3, #0
 8016c8a:	d0e8      	beq.n	8016c5e <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0x164>
 8016c8c:	781b      	ldrb	r3, [r3, #0]
 8016c8e:	e7e6      	b.n	8016c5e <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0x164>
 8016c90:	2a06      	cmp	r2, #6
 8016c92:	bfa8      	it	ge
 8016c94:	2206      	movge	r2, #6
 8016c96:	602a      	str	r2, [r5, #0]
 8016c98:	e7b1      	b.n	8016bfe <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0x104>

08016c9a <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list>:
 8016c9a:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8016c9e:	b0a3      	sub	sp, #140	@ 0x8c
 8016ca0:	2600      	movs	r6, #0
 8016ca2:	f10d 0944 	add.w	r9, sp, #68	@ 0x44
 8016ca6:	4607      	mov	r7, r0
 8016ca8:	4688      	mov	r8, r1
 8016caa:	e9cd 3208 	strd	r3, r2, [sp, #32]
 8016cae:	4631      	mov	r1, r6
 8016cb0:	2242      	movs	r2, #66	@ 0x42
 8016cb2:	4648      	mov	r0, r9
 8016cb4:	9c2c      	ldr	r4, [sp, #176]	@ 0xb0
 8016cb6:	960d      	str	r6, [sp, #52]	@ 0x34
 8016cb8:	f00f f9a1 	bl	8025ffe <memset>
 8016cbc:	b15f      	cbz	r7, 8016cd6 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x3c>
 8016cbe:	f108 3aff 	add.w	sl, r8, #4294967295
 8016cc2:	9a09      	ldr	r2, [sp, #36]	@ 0x24
 8016cc4:	9b0d      	ldr	r3, [sp, #52]	@ 0x34
 8016cc6:	b152      	cbz	r2, 8016cde <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x44>
 8016cc8:	8812      	ldrh	r2, [r2, #0]
 8016cca:	b10a      	cbz	r2, 8016cd0 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x36>
 8016ccc:	459a      	cmp	sl, r3
 8016cce:	dc2e      	bgt.n	8016d2e <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x94>
 8016cd0:	2200      	movs	r2, #0
 8016cd2:	f827 2013 	strh.w	r2, [r7, r3, lsl #1]
 8016cd6:	4638      	mov	r0, r7
 8016cd8:	b023      	add	sp, #140	@ 0x8c
 8016cda:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 8016cde:	9a08      	ldr	r2, [sp, #32]
 8016ce0:	2a00      	cmp	r2, #0
 8016ce2:	d0f5      	beq.n	8016cd0 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x36>
 8016ce4:	7812      	ldrb	r2, [r2, #0]
 8016ce6:	e7f0      	b.n	8016cca <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x30>
 8016ce8:	2d00      	cmp	r5, #0
 8016cea:	d0ea      	beq.n	8016cc2 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x28>
 8016cec:	782a      	ldrb	r2, [r5, #0]
 8016cee:	b142      	cbz	r2, 8016d02 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x68>
 8016cf0:	2a25      	cmp	r2, #37	@ 0x25
 8016cf2:	d001      	beq.n	8016cf8 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x5e>
 8016cf4:	459a      	cmp	sl, r3
 8016cf6:	dc08      	bgt.n	8016d0a <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x70>
 8016cf8:	f1bb 0f00 	cmp.w	fp, #0
 8016cfc:	d121      	bne.n	8016d42 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0xa8>
 8016cfe:	2d00      	cmp	r5, #0
 8016d00:	d0df      	beq.n	8016cc2 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x28>
 8016d02:	782a      	ldrb	r2, [r5, #0]
 8016d04:	f04f 0b00 	mov.w	fp, #0
 8016d08:	e01d      	b.n	8016d46 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0xac>
 8016d0a:	f1bb 0f00 	cmp.w	fp, #0
 8016d0e:	d078      	beq.n	8016e02 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x168>
 8016d10:	f8bb 2000 	ldrh.w	r2, [fp]
 8016d14:	f827 2013 	strh.w	r2, [r7, r3, lsl #1]
 8016d18:	f1bb 0f00 	cmp.w	fp, #0
 8016d1c:	d002      	beq.n	8016d24 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x8a>
 8016d1e:	f10b 0202 	add.w	r2, fp, #2
 8016d22:	9209      	str	r2, [sp, #36]	@ 0x24
 8016d24:	b10d      	cbz	r5, 8016d2a <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x90>
 8016d26:	3501      	adds	r5, #1
 8016d28:	9508      	str	r5, [sp, #32]
 8016d2a:	3301      	adds	r3, #1
 8016d2c:	930d      	str	r3, [sp, #52]	@ 0x34
 8016d2e:	e9dd 5b08 	ldrd	r5, fp, [sp, #32]
 8016d32:	9b0d      	ldr	r3, [sp, #52]	@ 0x34
 8016d34:	f1bb 0f00 	cmp.w	fp, #0
 8016d38:	d0d6      	beq.n	8016ce8 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x4e>
 8016d3a:	f8bb 2000 	ldrh.w	r2, [fp]
 8016d3e:	2a00      	cmp	r2, #0
 8016d40:	d1d6      	bne.n	8016cf0 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x56>
 8016d42:	f8bb 2000 	ldrh.w	r2, [fp]
 8016d46:	2a00      	cmp	r2, #0
 8016d48:	d0bb      	beq.n	8016cc2 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x28>
 8016d4a:	459a      	cmp	sl, r3
 8016d4c:	ddb9      	ble.n	8016cc2 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x28>
 8016d4e:	f8ad 6032 	strh.w	r6, [sp, #50]	@ 0x32
 8016d52:	f88d 602d 	strb.w	r6, [sp, #45]	@ 0x2d
 8016d56:	f88d 602e 	strb.w	r6, [sp, #46]	@ 0x2e
 8016d5a:	f88d 602f 	strb.w	r6, [sp, #47]	@ 0x2f
 8016d5e:	f88d 6030 	strb.w	r6, [sp, #48]	@ 0x30
 8016d62:	960e      	str	r6, [sp, #56]	@ 0x38
 8016d64:	f88d 6031 	strb.w	r6, [sp, #49]	@ 0x31
 8016d68:	960f      	str	r6, [sp, #60]	@ 0x3c
 8016d6a:	f1bb 0f00 	cmp.w	fp, #0
 8016d6e:	d002      	beq.n	8016d76 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0xdc>
 8016d70:	f10b 0302 	add.w	r3, fp, #2
 8016d74:	9309      	str	r3, [sp, #36]	@ 0x24
 8016d76:	b10d      	cbz	r5, 8016d7c <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0xe2>
 8016d78:	1c6b      	adds	r3, r5, #1
 8016d7a:	9308      	str	r3, [sp, #32]
 8016d7c:	ab0f      	add	r3, sp, #60	@ 0x3c
 8016d7e:	9305      	str	r3, [sp, #20]
 8016d80:	f10d 0331 	add.w	r3, sp, #49	@ 0x31
 8016d84:	9304      	str	r3, [sp, #16]
 8016d86:	ab0e      	add	r3, sp, #56	@ 0x38
 8016d88:	9303      	str	r3, [sp, #12]
 8016d8a:	ab0c      	add	r3, sp, #48	@ 0x30
 8016d8c:	9302      	str	r3, [sp, #8]
 8016d8e:	f10d 032f 	add.w	r3, sp, #47	@ 0x2f
 8016d92:	9301      	str	r3, [sp, #4]
 8016d94:	f10d 032e 	add.w	r3, sp, #46	@ 0x2e
 8016d98:	9300      	str	r3, [sp, #0]
 8016d9a:	f10d 0232 	add.w	r2, sp, #50	@ 0x32
 8016d9e:	f10d 032d 	add.w	r3, sp, #45	@ 0x2d
 8016da2:	a908      	add	r1, sp, #32
 8016da4:	a809      	add	r0, sp, #36	@ 0x24
 8016da6:	f7ff fea8 	bl	8016afa <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_>
 8016daa:	9b0e      	ldr	r3, [sp, #56]	@ 0x38
 8016dac:	2b00      	cmp	r3, #0
 8016dae:	bfbe      	ittt	lt
 8016db0:	6823      	ldrlt	r3, [r4, #0]
 8016db2:	ea23 73e3 	biclt.w	r3, r3, r3, asr #31
 8016db6:	930e      	strlt	r3, [sp, #56]	@ 0x38
 8016db8:	9b0f      	ldr	r3, [sp, #60]	@ 0x3c
 8016dba:	bfb8      	it	lt
 8016dbc:	3404      	addlt	r4, #4
 8016dbe:	2b00      	cmp	r3, #0
 8016dc0:	bfb8      	it	lt
 8016dc2:	6823      	ldrlt	r3, [r4, #0]
 8016dc4:	e9dd 2108 	ldrd	r2, r1, [sp, #32]
 8016dc8:	bfbe      	ittt	lt
 8016dca:	ea23 73e3 	biclt.w	r3, r3, r3, asr #31
 8016dce:	930f      	strlt	r3, [sp, #60]	@ 0x3c
 8016dd0:	3404      	addlt	r4, #4
 8016dd2:	b1d9      	cbz	r1, 8016e0c <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x172>
 8016dd4:	880b      	ldrh	r3, [r1, #0]
 8016dd6:	2b69      	cmp	r3, #105	@ 0x69
 8016dd8:	d01f      	beq.n	8016e1a <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x180>
 8016dda:	d82f      	bhi.n	8016e3c <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x1a2>
 8016ddc:	2b58      	cmp	r3, #88	@ 0x58
 8016dde:	d01c      	beq.n	8016e1a <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x180>
 8016de0:	d818      	bhi.n	8016e14 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x17a>
 8016de2:	2b25      	cmp	r3, #37	@ 0x25
 8016de4:	d034      	beq.n	8016e50 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x1b6>
 8016de6:	e9cd 5b08 	strd	r5, fp, [sp, #32]
 8016dea:	9b0d      	ldr	r3, [sp, #52]	@ 0x34
 8016dec:	f1bb 0f00 	cmp.w	fp, #0
 8016df0:	f000 80b8 	beq.w	8016f64 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x2ca>
 8016df4:	f8bb 5000 	ldrh.w	r5, [fp]
 8016df8:	f827 5013 	strh.w	r5, [r7, r3, lsl #1]
 8016dfc:	3301      	adds	r3, #1
 8016dfe:	930d      	str	r3, [sp, #52]	@ 0x34
 8016e00:	e029      	b.n	8016e56 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x1bc>
 8016e02:	b10d      	cbz	r5, 8016e08 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x16e>
 8016e04:	782a      	ldrb	r2, [r5, #0]
 8016e06:	e785      	b.n	8016d14 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x7a>
 8016e08:	462a      	mov	r2, r5
 8016e0a:	e783      	b.n	8016d14 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x7a>
 8016e0c:	2a00      	cmp	r2, #0
 8016e0e:	d0ea      	beq.n	8016de6 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x14c>
 8016e10:	7813      	ldrb	r3, [r2, #0]
 8016e12:	e7e0      	b.n	8016dd6 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x13c>
 8016e14:	3b63      	subs	r3, #99	@ 0x63
 8016e16:	2b01      	cmp	r3, #1
 8016e18:	d8e5      	bhi.n	8016de6 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x14c>
 8016e1a:	f8cd 9040 	str.w	r9, [sp, #64]	@ 0x40
 8016e1e:	b329      	cbz	r1, 8016e6c <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x1d2>
 8016e20:	880b      	ldrh	r3, [r1, #0]
 8016e22:	2b69      	cmp	r3, #105	@ 0x69
 8016e24:	d063      	beq.n	8016eee <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x254>
 8016e26:	d825      	bhi.n	8016e74 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x1da>
 8016e28:	2b63      	cmp	r3, #99	@ 0x63
 8016e2a:	d038      	beq.n	8016e9e <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x204>
 8016e2c:	2b64      	cmp	r3, #100	@ 0x64
 8016e2e:	d05e      	beq.n	8016eee <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x254>
 8016e30:	2b58      	cmp	r3, #88	@ 0x58
 8016e32:	d07b      	beq.n	8016f2c <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x292>
 8016e34:	f8ad 6044 	strh.w	r6, [sp, #68]	@ 0x44
 8016e38:	4625      	mov	r5, r4
 8016e3a:	e036      	b.n	8016eaa <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x210>
 8016e3c:	2b73      	cmp	r3, #115	@ 0x73
 8016e3e:	d0ec      	beq.n	8016e1a <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x180>
 8016e40:	d802      	bhi.n	8016e48 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x1ae>
 8016e42:	2b6f      	cmp	r3, #111	@ 0x6f
 8016e44:	d1cf      	bne.n	8016de6 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x14c>
 8016e46:	e7e8      	b.n	8016e1a <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x180>
 8016e48:	2b75      	cmp	r3, #117	@ 0x75
 8016e4a:	d0e6      	beq.n	8016e1a <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x180>
 8016e4c:	2b78      	cmp	r3, #120	@ 0x78
 8016e4e:	e7f9      	b.n	8016e44 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x1aa>
 8016e50:	9a0d      	ldr	r2, [sp, #52]	@ 0x34
 8016e52:	f827 3012 	strh.w	r3, [r7, r2, lsl #1]
 8016e56:	9b09      	ldr	r3, [sp, #36]	@ 0x24
 8016e58:	b10b      	cbz	r3, 8016e5e <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x1c4>
 8016e5a:	3302      	adds	r3, #2
 8016e5c:	9309      	str	r3, [sp, #36]	@ 0x24
 8016e5e:	9b08      	ldr	r3, [sp, #32]
 8016e60:	2b00      	cmp	r3, #0
 8016e62:	f43f af2e 	beq.w	8016cc2 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x28>
 8016e66:	3301      	adds	r3, #1
 8016e68:	9308      	str	r3, [sp, #32]
 8016e6a:	e72a      	b.n	8016cc2 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x28>
 8016e6c:	2a00      	cmp	r2, #0
 8016e6e:	d0e1      	beq.n	8016e34 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x19a>
 8016e70:	7813      	ldrb	r3, [r2, #0]
 8016e72:	e7d6      	b.n	8016e22 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x188>
 8016e74:	2b73      	cmp	r3, #115	@ 0x73
 8016e76:	d036      	beq.n	8016ee6 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x24c>
 8016e78:	d807      	bhi.n	8016e8a <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x1f0>
 8016e7a:	2b6f      	cmp	r3, #111	@ 0x6f
 8016e7c:	d1da      	bne.n	8016e34 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x19a>
 8016e7e:	9a0d      	ldr	r2, [sp, #52]	@ 0x34
 8016e80:	1d25      	adds	r5, r4, #4
 8016e82:	eba8 0202 	sub.w	r2, r8, r2
 8016e86:	2308      	movs	r3, #8
 8016e88:	e04a      	b.n	8016f20 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x286>
 8016e8a:	2b75      	cmp	r3, #117	@ 0x75
 8016e8c:	d043      	beq.n	8016f16 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x27c>
 8016e8e:	2b78      	cmp	r3, #120	@ 0x78
 8016e90:	d1d0      	bne.n	8016e34 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x19a>
 8016e92:	9a0d      	ldr	r2, [sp, #52]	@ 0x34
 8016e94:	1d25      	adds	r5, r4, #4
 8016e96:	eba8 0202 	sub.w	r2, r8, r2
 8016e9a:	2310      	movs	r3, #16
 8016e9c:	e040      	b.n	8016f20 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x286>
 8016e9e:	6823      	ldr	r3, [r4, #0]
 8016ea0:	f8ad 3044 	strh.w	r3, [sp, #68]	@ 0x44
 8016ea4:	1d25      	adds	r5, r4, #4
 8016ea6:	f8ad 6046 	strh.w	r6, [sp, #70]	@ 0x46
 8016eaa:	9b09      	ldr	r3, [sp, #36]	@ 0x24
 8016eac:	f8bd 1032 	ldrh.w	r1, [sp, #50]	@ 0x32
 8016eb0:	2b00      	cmp	r3, #0
 8016eb2:	d052      	beq.n	8016f5a <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x2c0>
 8016eb4:	881a      	ldrh	r2, [r3, #0]
 8016eb6:	f89d 3031 	ldrb.w	r3, [sp, #49]	@ 0x31
 8016eba:	a80d      	add	r0, sp, #52	@ 0x34
 8016ebc:	9005      	str	r0, [sp, #20]
 8016ebe:	f89d 002d 	ldrb.w	r0, [sp, #45]	@ 0x2d
 8016ec2:	9004      	str	r0, [sp, #16]
 8016ec4:	980e      	ldr	r0, [sp, #56]	@ 0x38
 8016ec6:	9003      	str	r0, [sp, #12]
 8016ec8:	f89d 0030 	ldrb.w	r0, [sp, #48]	@ 0x30
 8016ecc:	9002      	str	r0, [sp, #8]
 8016ece:	980f      	ldr	r0, [sp, #60]	@ 0x3c
 8016ed0:	9001      	str	r0, [sp, #4]
 8016ed2:	f89d 002f 	ldrb.w	r0, [sp, #47]	@ 0x2f
 8016ed6:	9000      	str	r0, [sp, #0]
 8016ed8:	e9cd 8706 	strd	r8, r7, [sp, #24]
 8016edc:	a810      	add	r0, sp, #64	@ 0x40
 8016ede:	f7ff fd49 	bl	8016974 <_ZN8touchgfx7Unicode13composeStringERPKtttbbibibRitPt>
 8016ee2:	462c      	mov	r4, r5
 8016ee4:	e7b7      	b.n	8016e56 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x1bc>
 8016ee6:	6823      	ldr	r3, [r4, #0]
 8016ee8:	1d25      	adds	r5, r4, #4
 8016eea:	9310      	str	r3, [sp, #64]	@ 0x40
 8016eec:	e7dd      	b.n	8016eaa <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x210>
 8016eee:	9a0d      	ldr	r2, [sp, #52]	@ 0x34
 8016ef0:	6820      	ldr	r0, [r4, #0]
 8016ef2:	eba8 0202 	sub.w	r2, r8, r2
 8016ef6:	230a      	movs	r3, #10
 8016ef8:	b292      	uxth	r2, r2
 8016efa:	4649      	mov	r1, r9
 8016efc:	f7ff fce4 	bl	80168c8 <_ZN8touchgfx7Unicode4itoaElPtti.part.2>
 8016f00:	f8bd 3044 	ldrh.w	r3, [sp, #68]	@ 0x44
 8016f04:	2b2d      	cmp	r3, #45	@ 0x2d
 8016f06:	f104 0504 	add.w	r5, r4, #4
 8016f0a:	d1ce      	bne.n	8016eaa <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x210>
 8016f0c:	f8ad 3032 	strh.w	r3, [sp, #50]	@ 0x32
 8016f10:	9b10      	ldr	r3, [sp, #64]	@ 0x40
 8016f12:	3302      	adds	r3, #2
 8016f14:	e7e9      	b.n	8016eea <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x250>
 8016f16:	9a0d      	ldr	r2, [sp, #52]	@ 0x34
 8016f18:	1d25      	adds	r5, r4, #4
 8016f1a:	eba8 0202 	sub.w	r2, r8, r2
 8016f1e:	230a      	movs	r3, #10
 8016f20:	b292      	uxth	r2, r2
 8016f22:	4649      	mov	r1, r9
 8016f24:	6820      	ldr	r0, [r4, #0]
 8016f26:	f7ff fcfb 	bl	8016920 <_ZN8touchgfx7Unicode4utoaEmPtti.part.3>
 8016f2a:	e7be      	b.n	8016eaa <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x210>
 8016f2c:	9a0d      	ldr	r2, [sp, #52]	@ 0x34
 8016f2e:	6820      	ldr	r0, [r4, #0]
 8016f30:	eba8 0202 	sub.w	r2, r8, r2
 8016f34:	b292      	uxth	r2, r2
 8016f36:	2310      	movs	r3, #16
 8016f38:	4649      	mov	r1, r9
 8016f3a:	f7ff fcf1 	bl	8016920 <_ZN8touchgfx7Unicode4utoaEmPtti.part.3>
 8016f3e:	1d25      	adds	r5, r4, #4
 8016f40:	f10d 0242 	add.w	r2, sp, #66	@ 0x42
 8016f44:	f832 3f02 	ldrh.w	r3, [r2, #2]!
 8016f48:	2b00      	cmp	r3, #0
 8016f4a:	d0ae      	beq.n	8016eaa <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x210>
 8016f4c:	f1a3 0161 	sub.w	r1, r3, #97	@ 0x61
 8016f50:	2919      	cmp	r1, #25
 8016f52:	d8f7      	bhi.n	8016f44 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x2aa>
 8016f54:	3b20      	subs	r3, #32
 8016f56:	8013      	strh	r3, [r2, #0]
 8016f58:	e7f4      	b.n	8016f44 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x2aa>
 8016f5a:	9a08      	ldr	r2, [sp, #32]
 8016f5c:	2a00      	cmp	r2, #0
 8016f5e:	d0aa      	beq.n	8016eb6 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x21c>
 8016f60:	7812      	ldrb	r2, [r2, #0]
 8016f62:	e7a8      	b.n	8016eb6 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x21c>
 8016f64:	2d00      	cmp	r5, #0
 8016f66:	f43f af47 	beq.w	8016df8 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x15e>
 8016f6a:	782d      	ldrb	r5, [r5, #0]
 8016f6c:	e744      	b.n	8016df8 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x15e>

08016f6e <_ZN8touchgfx7Unicode9vsnprintfEPttPKcSt9__va_list>:
 8016f6e:	b507      	push	{r0, r1, r2, lr}
 8016f70:	9300      	str	r3, [sp, #0]
 8016f72:	4613      	mov	r3, r2
 8016f74:	2200      	movs	r2, #0
 8016f76:	f7ff fe90 	bl	8016c9a <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list>
 8016f7a:	b003      	add	sp, #12
 8016f7c:	f85d fb04 	ldr.w	pc, [sp], #4

08016f80 <_ZN8touchgfx7Unicode8snprintfEPttPKcz>:
 8016f80:	b40c      	push	{r2, r3}
 8016f82:	b507      	push	{r0, r1, r2, lr}
 8016f84:	ab04      	add	r3, sp, #16
 8016f86:	f853 2b04 	ldr.w	r2, [r3], #4
 8016f8a:	9301      	str	r3, [sp, #4]
 8016f8c:	f7ff ffef 	bl	8016f6e <_ZN8touchgfx7Unicode9vsnprintfEPttPKcSt9__va_list>
 8016f90:	b003      	add	sp, #12
 8016f92:	f85d eb04 	ldr.w	lr, [sp], #4
 8016f96:	b002      	add	sp, #8
 8016f98:	4770      	bx	lr
	...

08016f9c <_ZN8touchgfx7Unicode14snprintfFloatsEPttPKtPKcPKf>:
 8016f9c:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8016fa0:	b0c5      	sub	sp, #276	@ 0x114
 8016fa2:	2400      	movs	r4, #0
 8016fa4:	af11      	add	r7, sp, #68	@ 0x44
 8016fa6:	4606      	mov	r6, r0
 8016fa8:	468a      	mov	sl, r1
 8016faa:	e9cd 3208 	strd	r3, r2, [sp, #32]
 8016fae:	4621      	mov	r1, r4
 8016fb0:	22c8      	movs	r2, #200	@ 0xc8
 8016fb2:	4638      	mov	r0, r7
 8016fb4:	f8dd b138 	ldr.w	fp, [sp, #312]	@ 0x138
 8016fb8:	940d      	str	r4, [sp, #52]	@ 0x34
 8016fba:	f00f f820 	bl	8025ffe <memset>
 8016fbe:	b16e      	cbz	r6, 8016fdc <_ZN8touchgfx7Unicode14snprintfFloatsEPttPKtPKcPKf+0x40>
 8016fc0:	ed9f 5aa8 	vldr	s10, [pc, #672]	@ 8017264 <_ZN8touchgfx7Unicode14snprintfFloatsEPttPKtPKcPKf+0x2c8>
 8016fc4:	9a09      	ldr	r2, [sp, #36]	@ 0x24
 8016fc6:	9b0d      	ldr	r3, [sp, #52]	@ 0x34
 8016fc8:	b162      	cbz	r2, 8016fe4 <_ZN8touchgfx7Unicode14snprintfFloatsEPttPKtPKcPKf+0x48>
 8016fca:	8812      	ldrh	r2, [r2, #0]
 8016fcc:	b11a      	cbz	r2, 8016fd6 <_ZN8touchgfx7Unicode14snprintfFloatsEPttPKtPKcPKf+0x3a>
 8016fce:	f10a 31ff 	add.w	r1, sl, #4294967295
 8016fd2:	4299      	cmp	r1, r3
 8016fd4:	dc2e      	bgt.n	8017034 <_ZN8touchgfx7Unicode14snprintfFloatsEPttPKtPKcPKf+0x98>
 8016fd6:	2200      	movs	r2, #0
 8016fd8:	f826 2013 	strh.w	r2, [r6, r3, lsl #1]
 8016fdc:	4630      	mov	r0, r6
 8016fde:	b045      	add	sp, #276	@ 0x114
 8016fe0:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 8016fe4:	9a08      	ldr	r2, [sp, #32]
 8016fe6:	2a00      	cmp	r2, #0
 8016fe8:	d0f5      	beq.n	8016fd6 <_ZN8touchgfx7Unicode14snprintfFloatsEPttPKtPKcPKf+0x3a>
 8016fea:	7812      	ldrb	r2, [r2, #0]
 8016fec:	e7ee      	b.n	8016fcc <_ZN8touchgfx7Unicode14snprintfFloatsEPttPKtPKcPKf+0x30>
 8016fee:	2d00      	cmp	r5, #0
 8016ff0:	d0e8      	beq.n	8016fc4 <_ZN8touchgfx7Unicode14snprintfFloatsEPttPKtPKcPKf+0x28>
 8016ff2:	782a      	ldrb	r2, [r5, #0]
 8016ff4:	b142      	cbz	r2, 8017008 <_ZN8touchgfx7Unicode14snprintfFloatsEPttPKtPKcPKf+0x6c>
 8016ff6:	2a25      	cmp	r2, #37	@ 0x25
 8016ff8:	d001      	beq.n	8016ffe <_ZN8touchgfx7Unicode14snprintfFloatsEPttPKtPKcPKf+0x62>
 8016ffa:	4299      	cmp	r1, r3
 8016ffc:	dc08      	bgt.n	8017010 <_ZN8touchgfx7Unicode14snprintfFloatsEPttPKtPKcPKf+0x74>
 8016ffe:	f1b8 0f00 	cmp.w	r8, #0
 8017002:	d121      	bne.n	8017048 <_ZN8touchgfx7Unicode14snprintfFloatsEPttPKtPKcPKf+0xac>
 8017004:	2d00      	cmp	r5, #0
 8017006:	d0dd      	beq.n	8016fc4 <_ZN8touchgfx7Unicode14snprintfFloatsEPttPKtPKcPKf+0x28>
 8017008:	782a      	ldrb	r2, [r5, #0]
 801700a:	f04f 0800 	mov.w	r8, #0
 801700e:	e01d      	b.n	801704c <_ZN8touchgfx7Unicode14snprintfFloatsEPttPKtPKcPKf+0xb0>
 8017010:	f1b8 0f00 	cmp.w	r8, #0
 8017014:	d07f      	beq.n	8017116 <_ZN8touchgfx7Unicode14snprintfFloatsEPttPKtPKcPKf+0x17a>
 8017016:	f8b8 2000 	ldrh.w	r2, [r8]
 801701a:	f826 2013 	strh.w	r2, [r6, r3, lsl #1]
 801701e:	f1b8 0f00 	cmp.w	r8, #0
 8017022:	d002      	beq.n	801702a <_ZN8touchgfx7Unicode14snprintfFloatsEPttPKtPKcPKf+0x8e>
 8017024:	f108 0202 	add.w	r2, r8, #2
 8017028:	9209      	str	r2, [sp, #36]	@ 0x24
 801702a:	b10d      	cbz	r5, 8017030 <_ZN8touchgfx7Unicode14snprintfFloatsEPttPKtPKcPKf+0x94>
 801702c:	3501      	adds	r5, #1
 801702e:	9508      	str	r5, [sp, #32]
 8017030:	3301      	adds	r3, #1
 8017032:	930d      	str	r3, [sp, #52]	@ 0x34
 8017034:	e9dd 5808 	ldrd	r5, r8, [sp, #32]
 8017038:	9b0d      	ldr	r3, [sp, #52]	@ 0x34
 801703a:	f1b8 0f00 	cmp.w	r8, #0
 801703e:	d0d6      	beq.n	8016fee <_ZN8touchgfx7Unicode14snprintfFloatsEPttPKtPKcPKf+0x52>
 8017040:	f8b8 2000 	ldrh.w	r2, [r8]
 8017044:	2a00      	cmp	r2, #0
 8017046:	d1d6      	bne.n	8016ff6 <_ZN8touchgfx7Unicode14snprintfFloatsEPttPKtPKcPKf+0x5a>
 8017048:	f8b8 2000 	ldrh.w	r2, [r8]
 801704c:	2a00      	cmp	r2, #0
 801704e:	d0b9      	beq.n	8016fc4 <_ZN8touchgfx7Unicode14snprintfFloatsEPttPKtPKcPKf+0x28>
 8017050:	4299      	cmp	r1, r3
 8017052:	ddb7      	ble.n	8016fc4 <_ZN8touchgfx7Unicode14snprintfFloatsEPttPKtPKcPKf+0x28>
 8017054:	2300      	movs	r3, #0
 8017056:	f8ad 3032 	strh.w	r3, [sp, #50]	@ 0x32
 801705a:	f88d 302d 	strb.w	r3, [sp, #45]	@ 0x2d
 801705e:	f88d 302e 	strb.w	r3, [sp, #46]	@ 0x2e
 8017062:	f88d 302f 	strb.w	r3, [sp, #47]	@ 0x2f
 8017066:	f88d 3030 	strb.w	r3, [sp, #48]	@ 0x30
 801706a:	930e      	str	r3, [sp, #56]	@ 0x38
 801706c:	f88d 3031 	strb.w	r3, [sp, #49]	@ 0x31
 8017070:	930f      	str	r3, [sp, #60]	@ 0x3c
 8017072:	f1b8 0f00 	cmp.w	r8, #0
 8017076:	d002      	beq.n	801707e <_ZN8touchgfx7Unicode14snprintfFloatsEPttPKtPKcPKf+0xe2>
 8017078:	f108 0302 	add.w	r3, r8, #2
 801707c:	9309      	str	r3, [sp, #36]	@ 0x24
 801707e:	b10d      	cbz	r5, 8017084 <_ZN8touchgfx7Unicode14snprintfFloatsEPttPKtPKcPKf+0xe8>
 8017080:	1c6b      	adds	r3, r5, #1
 8017082:	9308      	str	r3, [sp, #32]
 8017084:	ab0f      	add	r3, sp, #60	@ 0x3c
 8017086:	9305      	str	r3, [sp, #20]
 8017088:	f10d 0331 	add.w	r3, sp, #49	@ 0x31
 801708c:	9304      	str	r3, [sp, #16]
 801708e:	ab0e      	add	r3, sp, #56	@ 0x38
 8017090:	9303      	str	r3, [sp, #12]
 8017092:	ab0c      	add	r3, sp, #48	@ 0x30
 8017094:	9302      	str	r3, [sp, #8]
 8017096:	f10d 032f 	add.w	r3, sp, #47	@ 0x2f
 801709a:	9301      	str	r3, [sp, #4]
 801709c:	f10d 032e 	add.w	r3, sp, #46	@ 0x2e
 80170a0:	9300      	str	r3, [sp, #0]
 80170a2:	f10d 0232 	add.w	r2, sp, #50	@ 0x32
 80170a6:	f10d 032d 	add.w	r3, sp, #45	@ 0x2d
 80170aa:	a908      	add	r1, sp, #32
 80170ac:	a809      	add	r0, sp, #36	@ 0x24
 80170ae:	f7ff fd24 	bl	8016afa <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_>
 80170b2:	9b0e      	ldr	r3, [sp, #56]	@ 0x38
 80170b4:	2b00      	cmp	r3, #0
 80170b6:	da0b      	bge.n	80170d0 <_ZN8touchgfx7Unicode14snprintfFloatsEPttPKtPKcPKf+0x134>
 80170b8:	eb0b 0384 	add.w	r3, fp, r4, lsl #2
 80170bc:	edd3 7a00 	vldr	s15, [r3]
 80170c0:	eefd 7ae7 	vcvt.s32.f32	s15, s15
 80170c4:	3401      	adds	r4, #1
 80170c6:	ee17 3a90 	vmov	r3, s15
 80170ca:	ea23 73e3 	bic.w	r3, r3, r3, asr #31
 80170ce:	930e      	str	r3, [sp, #56]	@ 0x38
 80170d0:	9b0f      	ldr	r3, [sp, #60]	@ 0x3c
 80170d2:	2b00      	cmp	r3, #0
 80170d4:	da0b      	bge.n	80170ee <_ZN8touchgfx7Unicode14snprintfFloatsEPttPKtPKcPKf+0x152>
 80170d6:	eb0b 0384 	add.w	r3, fp, r4, lsl #2
 80170da:	edd3 7a00 	vldr	s15, [r3]
 80170de:	eefd 7ae7 	vcvt.s32.f32	s15, s15
 80170e2:	3401      	adds	r4, #1
 80170e4:	ee17 3a90 	vmov	r3, s15
 80170e8:	ea23 73e3 	bic.w	r3, r3, r3, asr #31
 80170ec:	930f      	str	r3, [sp, #60]	@ 0x3c
 80170ee:	9b09      	ldr	r3, [sp, #36]	@ 0x24
 80170f0:	b1b3      	cbz	r3, 8017120 <_ZN8touchgfx7Unicode14snprintfFloatsEPttPKtPKcPKf+0x184>
 80170f2:	881a      	ldrh	r2, [r3, #0]
 80170f4:	2a25      	cmp	r2, #37	@ 0x25
 80170f6:	d018      	beq.n	801712a <_ZN8touchgfx7Unicode14snprintfFloatsEPttPKtPKcPKf+0x18e>
 80170f8:	2a66      	cmp	r2, #102	@ 0x66
 80170fa:	d01c      	beq.n	8017136 <_ZN8touchgfx7Unicode14snprintfFloatsEPttPKtPKcPKf+0x19a>
 80170fc:	e9cd 5808 	strd	r5, r8, [sp, #32]
 8017100:	9b0d      	ldr	r3, [sp, #52]	@ 0x34
 8017102:	f1b8 0f00 	cmp.w	r8, #0
 8017106:	f000 8136 	beq.w	8017376 <_ZN8touchgfx7Unicode14snprintfFloatsEPttPKtPKcPKf+0x3da>
 801710a:	f8b8 5000 	ldrh.w	r5, [r8]
 801710e:	f826 5013 	strh.w	r5, [r6, r3, lsl #1]
 8017112:	3301      	adds	r3, #1
 8017114:	e00d      	b.n	8017132 <_ZN8touchgfx7Unicode14snprintfFloatsEPttPKtPKcPKf+0x196>
 8017116:	b10d      	cbz	r5, 801711c <_ZN8touchgfx7Unicode14snprintfFloatsEPttPKtPKcPKf+0x180>
 8017118:	782a      	ldrb	r2, [r5, #0]
 801711a:	e77e      	b.n	801701a <_ZN8touchgfx7Unicode14snprintfFloatsEPttPKtPKcPKf+0x7e>
 801711c:	462a      	mov	r2, r5
 801711e:	e77c      	b.n	801701a <_ZN8touchgfx7Unicode14snprintfFloatsEPttPKtPKcPKf+0x7e>
 8017120:	9b08      	ldr	r3, [sp, #32]
 8017122:	2b00      	cmp	r3, #0
 8017124:	d0ea      	beq.n	80170fc <_ZN8touchgfx7Unicode14snprintfFloatsEPttPKtPKcPKf+0x160>
 8017126:	781a      	ldrb	r2, [r3, #0]
 8017128:	e7e4      	b.n	80170f4 <_ZN8touchgfx7Unicode14snprintfFloatsEPttPKtPKcPKf+0x158>
 801712a:	9b0d      	ldr	r3, [sp, #52]	@ 0x34
 801712c:	f826 2013 	strh.w	r2, [r6, r3, lsl #1]
 8017130:	3302      	adds	r3, #2
 8017132:	930d      	str	r3, [sp, #52]	@ 0x34
 8017134:	e041      	b.n	80171ba <_ZN8touchgfx7Unicode14snprintfFloatsEPttPKtPKcPKf+0x21e>
 8017136:	eb0b 0384 	add.w	r3, fp, r4, lsl #2
 801713a:	edd3 7a00 	vldr	s15, [r3]
 801713e:	f89d 3031 	ldrb.w	r3, [sp, #49]	@ 0x31
 8017142:	9710      	str	r7, [sp, #64]	@ 0x40
 8017144:	3401      	adds	r4, #1
 8017146:	b923      	cbnz	r3, 8017152 <_ZN8touchgfx7Unicode14snprintfFloatsEPttPKtPKcPKf+0x1b6>
 8017148:	2301      	movs	r3, #1
 801714a:	f88d 3031 	strb.w	r3, [sp, #49]	@ 0x31
 801714e:	2306      	movs	r3, #6
 8017150:	930f      	str	r3, [sp, #60]	@ 0x3c
 8017152:	eef5 7ac0 	vcmpe.f32	s15, #0.0
 8017156:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 801715a:	bf48      	it	mi
 801715c:	eef1 7a67 	vnegmi.f32	s15, s15
 8017160:	eeb0 7ae7 	vabs.f32	s14, s15
 8017164:	bf48      	it	mi
 8017166:	232d      	movmi	r3, #45	@ 0x2d
 8017168:	eeb4 7a45 	vcmp.f32	s14, s10
 801716c:	bf48      	it	mi
 801716e:	f8ad 3032 	strhmi.w	r3, [sp, #50]	@ 0x32
 8017172:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 8017176:	dd2b      	ble.n	80171d0 <_ZN8touchgfx7Unicode14snprintfFloatsEPttPKtPKcPKf+0x234>
 8017178:	4b3b      	ldr	r3, [pc, #236]	@ (8017268 <_ZN8touchgfx7Unicode14snprintfFloatsEPttPKtPKcPKf+0x2cc>)
 801717a:	9311      	str	r3, [sp, #68]	@ 0x44
 801717c:	2366      	movs	r3, #102	@ 0x66
 801717e:	9312      	str	r3, [sp, #72]	@ 0x48
 8017180:	9b09      	ldr	r3, [sp, #36]	@ 0x24
 8017182:	f8bd 1032 	ldrh.w	r1, [sp, #50]	@ 0x32
 8017186:	2b00      	cmp	r3, #0
 8017188:	f000 80ef 	beq.w	801736a <_ZN8touchgfx7Unicode14snprintfFloatsEPttPKtPKcPKf+0x3ce>
 801718c:	881a      	ldrh	r2, [r3, #0]
 801718e:	f89d 3031 	ldrb.w	r3, [sp, #49]	@ 0x31
 8017192:	a80d      	add	r0, sp, #52	@ 0x34
 8017194:	9005      	str	r0, [sp, #20]
 8017196:	f89d 002d 	ldrb.w	r0, [sp, #45]	@ 0x2d
 801719a:	9004      	str	r0, [sp, #16]
 801719c:	980e      	ldr	r0, [sp, #56]	@ 0x38
 801719e:	9003      	str	r0, [sp, #12]
 80171a0:	f89d 0030 	ldrb.w	r0, [sp, #48]	@ 0x30
 80171a4:	9002      	str	r0, [sp, #8]
 80171a6:	980f      	ldr	r0, [sp, #60]	@ 0x3c
 80171a8:	9001      	str	r0, [sp, #4]
 80171aa:	f89d 002f 	ldrb.w	r0, [sp, #47]	@ 0x2f
 80171ae:	9000      	str	r0, [sp, #0]
 80171b0:	e9cd a606 	strd	sl, r6, [sp, #24]
 80171b4:	a810      	add	r0, sp, #64	@ 0x40
 80171b6:	f7ff fbdd 	bl	8016974 <_ZN8touchgfx7Unicode13composeStringERPKtttbbibibRitPt>
 80171ba:	9b09      	ldr	r3, [sp, #36]	@ 0x24
 80171bc:	b10b      	cbz	r3, 80171c2 <_ZN8touchgfx7Unicode14snprintfFloatsEPttPKtPKcPKf+0x226>
 80171be:	3302      	adds	r3, #2
 80171c0:	9309      	str	r3, [sp, #36]	@ 0x24
 80171c2:	9b08      	ldr	r3, [sp, #32]
 80171c4:	2b00      	cmp	r3, #0
 80171c6:	f43f aefd 	beq.w	8016fc4 <_ZN8touchgfx7Unicode14snprintfFloatsEPttPKtPKcPKf+0x28>
 80171ca:	3301      	adds	r3, #1
 80171cc:	9308      	str	r3, [sp, #32]
 80171ce:	e6f9      	b.n	8016fc4 <_ZN8touchgfx7Unicode14snprintfFloatsEPttPKtPKcPKf+0x28>
 80171d0:	eef4 7a67 	vcmp.f32	s15, s15
 80171d4:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 80171d8:	d63a      	bvs.n	8017250 <_ZN8touchgfx7Unicode14snprintfFloatsEPttPKtPKcPKf+0x2b4>
 80171da:	f10d 0846 	add.w	r8, sp, #70	@ 0x46
 80171de:	eeb2 7a04 	vmov.f32	s14, #36	@ 0x41200000  10.0
 80171e2:	f8cd 8040 	str.w	r8, [sp, #64]	@ 0x40
 80171e6:	eeb0 6a67 	vmov.f32	s12, s15
 80171ea:	eef7 6a00 	vmov.f32	s13, #112	@ 0x3f800000  1.0
 80171ee:	eef0 5a47 	vmov.f32	s11, s14
 80171f2:	eeb4 6ac7 	vcmpe.f32	s12, s14
 80171f6:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 80171fa:	da2d      	bge.n	8017258 <_ZN8touchgfx7Unicode14snprintfFloatsEPttPKtPKcPKf+0x2bc>
 80171fc:	9a0d      	ldr	r2, [sp, #52]	@ 0x34
 80171fe:	eeb6 6a00 	vmov.f32	s12, #96	@ 0x3f000000  0.5
 8017202:	2100      	movs	r1, #0
 8017204:	eef0 4a46 	vmov.f32	s9, s12
 8017208:	ebaa 0202 	sub.w	r2, sl, r2
 801720c:	eef4 6ac6 	vcmpe.f32	s13, s12
 8017210:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 8017214:	b28b      	uxth	r3, r1
 8017216:	db2c      	blt.n	8017272 <_ZN8touchgfx7Unicode14snprintfFloatsEPttPKtPKcPKf+0x2d6>
 8017218:	1a50      	subs	r0, r2, r1
 801721a:	2800      	cmp	r0, #0
 801721c:	dd29      	ble.n	8017272 <_ZN8touchgfx7Unicode14snprintfFloatsEPttPKtPKcPKf+0x2d6>
 801721e:	3101      	adds	r1, #1
 8017220:	2964      	cmp	r1, #100	@ 0x64
 8017222:	d025      	beq.n	8017270 <_ZN8touchgfx7Unicode14snprintfFloatsEPttPKtPKcPKf+0x2d4>
 8017224:	ee87 7aa6 	vdiv.f32	s14, s15, s13
 8017228:	eebd 7ac7 	vcvt.s32.f32	s14, s14
 801722c:	ee17 3a10 	vmov	r3, s14
 8017230:	2b09      	cmp	r3, #9
 8017232:	bfa8      	it	ge
 8017234:	2309      	movge	r3, #9
 8017236:	ee07 3a10 	vmov	s14, r3
 801723a:	eeb8 7ac7 	vcvt.f32.s32	s14, s14
 801723e:	f103 0030 	add.w	r0, r3, #48	@ 0x30
 8017242:	eee7 7a66 	vfms.f32	s15, s14, s13
 8017246:	f827 0011 	strh.w	r0, [r7, r1, lsl #1]
 801724a:	eec6 6aa5 	vdiv.f32	s13, s13, s11
 801724e:	e7dd      	b.n	801720c <_ZN8touchgfx7Unicode14snprintfFloatsEPttPKtPKcPKf+0x270>
 8017250:	4b06      	ldr	r3, [pc, #24]	@ (801726c <_ZN8touchgfx7Unicode14snprintfFloatsEPttPKtPKcPKf+0x2d0>)
 8017252:	9311      	str	r3, [sp, #68]	@ 0x44
 8017254:	236e      	movs	r3, #110	@ 0x6e
 8017256:	e792      	b.n	801717e <_ZN8touchgfx7Unicode14snprintfFloatsEPttPKtPKcPKf+0x1e2>
 8017258:	ee66 6a87 	vmul.f32	s13, s13, s14
 801725c:	ee86 6a07 	vdiv.f32	s12, s12, s14
 8017260:	e7c7      	b.n	80171f2 <_ZN8touchgfx7Unicode14snprintfFloatsEPttPKtPKcPKf+0x256>
 8017262:	bf00      	nop
 8017264:	7f7fffff 	.word	0x7f7fffff
 8017268:	006e0069 	.word	0x006e0069
 801726c:	0061006e 	.word	0x0061006e
 8017270:	2363      	movs	r3, #99	@ 0x63
 8017272:	2a63      	cmp	r2, #99	@ 0x63
 8017274:	bfd4      	ite	le
 8017276:	ebc3 0202 	rsble	r2, r3, r2
 801727a:	f1c3 0263 	rsbgt	r2, r3, #99	@ 0x63
 801727e:	2a00      	cmp	r2, #0
 8017280:	f103 0501 	add.w	r5, r3, #1
 8017284:	dd57      	ble.n	8017336 <_ZN8touchgfx7Unicode14snprintfFloatsEPttPKtPKcPKf+0x39a>
 8017286:	990f      	ldr	r1, [sp, #60]	@ 0x3c
 8017288:	2900      	cmp	r1, #0
 801728a:	dd2b      	ble.n	80172e4 <_ZN8touchgfx7Unicode14snprintfFloatsEPttPKtPKcPKf+0x348>
 801728c:	f04f 0901 	mov.w	r9, #1
 8017290:	230a      	movs	r3, #10
 8017292:	f111 31ff 	adds.w	r1, r1, #4294967295
 8017296:	d30c      	bcc.n	80172b2 <_ZN8touchgfx7Unicode14snprintfFloatsEPttPKtPKcPKf+0x316>
 8017298:	ee67 7aa5 	vmul.f32	s15, s15, s11
 801729c:	eebd 7ae7 	vcvt.s32.f32	s14, s15
 80172a0:	ee17 0a10 	vmov	r0, s14
 80172a4:	eeb8 7ac7 	vcvt.f32.s32	s14, s14
 80172a8:	fb03 0909 	mla	r9, r3, r9, r0
 80172ac:	ee77 7ac7 	vsub.f32	s15, s15, s14
 80172b0:	e7ef      	b.n	8017292 <_ZN8touchgfx7Unicode14snprintfFloatsEPttPKtPKcPKf+0x2f6>
 80172b2:	910f      	str	r1, [sp, #60]	@ 0x3c
 80172b4:	230a      	movs	r3, #10
 80172b6:	b292      	uxth	r2, r2
 80172b8:	eb07 0145 	add.w	r1, r7, r5, lsl #1
 80172bc:	4648      	mov	r0, r9
 80172be:	f7ff fb4d 	bl	801695c <_ZN8touchgfx7Unicode4itoaElPtti>
 80172c2:	f1b9 0f01 	cmp.w	r9, #1
 80172c6:	dc0b      	bgt.n	80172e0 <_ZN8touchgfx7Unicode14snprintfFloatsEPttPKtPKcPKf+0x344>
 80172c8:	f89d 302e 	ldrb.w	r3, [sp, #46]	@ 0x2e
 80172cc:	2b00      	cmp	r3, #0
 80172ce:	bf0c      	ite	eq
 80172d0:	2300      	moveq	r3, #0
 80172d2:	232e      	movne	r3, #46	@ 0x2e
 80172d4:	aa44      	add	r2, sp, #272	@ 0x110
 80172d6:	eb02 0545 	add.w	r5, r2, r5, lsl #1
 80172da:	f825 3ccc 	strh.w	r3, [r5, #-204]
 80172de:	e015      	b.n	801730c <_ZN8touchgfx7Unicode14snprintfFloatsEPttPKtPKcPKf+0x370>
 80172e0:	232e      	movs	r3, #46	@ 0x2e
 80172e2:	e7f7      	b.n	80172d4 <_ZN8touchgfx7Unicode14snprintfFloatsEPttPKtPKcPKf+0x338>
 80172e4:	2a01      	cmp	r2, #1
 80172e6:	d026      	beq.n	8017336 <_ZN8touchgfx7Unicode14snprintfFloatsEPttPKtPKcPKf+0x39a>
 80172e8:	2b63      	cmp	r3, #99	@ 0x63
 80172ea:	d024      	beq.n	8017336 <_ZN8touchgfx7Unicode14snprintfFloatsEPttPKtPKcPKf+0x39a>
 80172ec:	f89d 202e 	ldrb.w	r2, [sp, #46]	@ 0x2e
 80172f0:	b30a      	cbz	r2, 8017336 <_ZN8touchgfx7Unicode14snprintfFloatsEPttPKtPKcPKf+0x39a>
 80172f2:	aa44      	add	r2, sp, #272	@ 0x110
 80172f4:	eb02 0545 	add.w	r5, r2, r5, lsl #1
 80172f8:	222e      	movs	r2, #46	@ 0x2e
 80172fa:	f825 2ccc 	strh.w	r2, [r5, #-204]
 80172fe:	3302      	adds	r3, #2
 8017300:	aa44      	add	r2, sp, #272	@ 0x110
 8017302:	eb02 0343 	add.w	r3, r2, r3, lsl #1
 8017306:	2200      	movs	r2, #0
 8017308:	f823 2ccc 	strh.w	r2, [r3, #-204]
 801730c:	eef4 7ae4 	vcmpe.f32	s15, s9
 8017310:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 8017314:	f6ff af34 	blt.w	8017180 <_ZN8touchgfx7Unicode14snprintfFloatsEPttPKtPKcPKf+0x1e4>
 8017318:	2300      	movs	r3, #0
 801731a:	f838 2b02 	ldrh.w	r2, [r8], #2
 801731e:	1c59      	adds	r1, r3, #1
 8017320:	b972      	cbnz	r2, 8017340 <_ZN8touchgfx7Unicode14snprintfFloatsEPttPKtPKcPKf+0x3a4>
 8017322:	b29b      	uxth	r3, r3
 8017324:	2130      	movs	r1, #48	@ 0x30
 8017326:	b96b      	cbnz	r3, 8017344 <_ZN8touchgfx7Unicode14snprintfFloatsEPttPKtPKcPKf+0x3a8>
 8017328:	2331      	movs	r3, #49	@ 0x31
 801732a:	f8ad 3044 	strh.w	r3, [sp, #68]	@ 0x44
 801732e:	9b10      	ldr	r3, [sp, #64]	@ 0x40
 8017330:	3b02      	subs	r3, #2
 8017332:	9310      	str	r3, [sp, #64]	@ 0x40
 8017334:	e724      	b.n	8017180 <_ZN8touchgfx7Unicode14snprintfFloatsEPttPKtPKcPKf+0x1e4>
 8017336:	ab44      	add	r3, sp, #272	@ 0x110
 8017338:	eb03 0545 	add.w	r5, r3, r5, lsl #1
 801733c:	2300      	movs	r3, #0
 801733e:	e7cc      	b.n	80172da <_ZN8touchgfx7Unicode14snprintfFloatsEPttPKtPKcPKf+0x33e>
 8017340:	460b      	mov	r3, r1
 8017342:	e7ea      	b.n	801731a <_ZN8touchgfx7Unicode14snprintfFloatsEPttPKtPKcPKf+0x37e>
 8017344:	f837 2013 	ldrh.w	r2, [r7, r3, lsl #1]
 8017348:	f1a2 0030 	sub.w	r0, r2, #48	@ 0x30
 801734c:	2808      	cmp	r0, #8
 801734e:	d806      	bhi.n	801735e <_ZN8touchgfx7Unicode14snprintfFloatsEPttPKtPKcPKf+0x3c2>
 8017350:	a944      	add	r1, sp, #272	@ 0x110
 8017352:	eb01 0343 	add.w	r3, r1, r3, lsl #1
 8017356:	3201      	adds	r2, #1
 8017358:	f823 2ccc 	strh.w	r2, [r3, #-204]
 801735c:	e710      	b.n	8017180 <_ZN8touchgfx7Unicode14snprintfFloatsEPttPKtPKcPKf+0x1e4>
 801735e:	2a39      	cmp	r2, #57	@ 0x39
 8017360:	bf08      	it	eq
 8017362:	f827 1013 	strheq.w	r1, [r7, r3, lsl #1]
 8017366:	3b01      	subs	r3, #1
 8017368:	e7dd      	b.n	8017326 <_ZN8touchgfx7Unicode14snprintfFloatsEPttPKtPKcPKf+0x38a>
 801736a:	9a08      	ldr	r2, [sp, #32]
 801736c:	2a00      	cmp	r2, #0
 801736e:	f43f af0e 	beq.w	801718e <_ZN8touchgfx7Unicode14snprintfFloatsEPttPKtPKcPKf+0x1f2>
 8017372:	7812      	ldrb	r2, [r2, #0]
 8017374:	e70b      	b.n	801718e <_ZN8touchgfx7Unicode14snprintfFloatsEPttPKtPKcPKf+0x1f2>
 8017376:	2d00      	cmp	r5, #0
 8017378:	f43f aec9 	beq.w	801710e <_ZN8touchgfx7Unicode14snprintfFloatsEPttPKtPKcPKf+0x172>
 801737c:	782d      	ldrb	r5, [r5, #0]
 801737e:	e6c6      	b.n	801710e <_ZN8touchgfx7Unicode14snprintfFloatsEPttPKtPKcPKf+0x172>

08017380 <_ZN8touchgfx7Unicode14snprintfFloatsEPttPKcPKf>:
 8017380:	b507      	push	{r0, r1, r2, lr}
 8017382:	9300      	str	r3, [sp, #0]
 8017384:	4613      	mov	r3, r2
 8017386:	2200      	movs	r2, #0
 8017388:	f7ff fe08 	bl	8016f9c <_ZN8touchgfx7Unicode14snprintfFloatsEPttPKtPKcPKf>
 801738c:	b003      	add	sp, #12
 801738e:	f85d fb04 	ldr.w	pc, [sp], #4
	...

08017394 <_ZN8touchgfx11FontManager15setFontProviderEPNS_12FontProviderE>:
 8017394:	4b01      	ldr	r3, [pc, #4]	@ (801739c <_ZN8touchgfx11FontManager15setFontProviderEPNS_12FontProviderE+0x8>)
 8017396:	6018      	str	r0, [r3, #0]
 8017398:	4770      	bx	lr
 801739a:	bf00      	nop
 801739c:	20003008 	.word	0x20003008

080173a0 <_ZN8touchgfx6Bitmap15isDynamicBitmapEt>:
 80173a0:	4b06      	ldr	r3, [pc, #24]	@ (80173bc <_ZN8touchgfx6Bitmap15isDynamicBitmapEt+0x1c>)
 80173a2:	881a      	ldrh	r2, [r3, #0]
 80173a4:	4282      	cmp	r2, r0
 80173a6:	d807      	bhi.n	80173b8 <_ZN8touchgfx6Bitmap15isDynamicBitmapEt+0x18>
 80173a8:	4b05      	ldr	r3, [pc, #20]	@ (80173c0 <_ZN8touchgfx6Bitmap15isDynamicBitmapEt+0x20>)
 80173aa:	881b      	ldrh	r3, [r3, #0]
 80173ac:	4413      	add	r3, r2
 80173ae:	4298      	cmp	r0, r3
 80173b0:	bfac      	ite	ge
 80173b2:	2000      	movge	r0, #0
 80173b4:	2001      	movlt	r0, #1
 80173b6:	4770      	bx	lr
 80173b8:	2000      	movs	r0, #0
 80173ba:	4770      	bx	lr
 80173bc:	20003028 	.word	0x20003028
 80173c0:	2000302c 	.word	0x2000302c

080173c4 <_ZN8touchgfx6Bitmap23dynamicBitmapGetAddressEt>:
 80173c4:	b508      	push	{r3, lr}
 80173c6:	4601      	mov	r1, r0
 80173c8:	f7ff ffea 	bl	80173a0 <_ZN8touchgfx6Bitmap15isDynamicBitmapEt>
 80173cc:	b118      	cbz	r0, 80173d6 <_ZN8touchgfx6Bitmap23dynamicBitmapGetAddressEt+0x12>
 80173ce:	4b02      	ldr	r3, [pc, #8]	@ (80173d8 <_ZN8touchgfx6Bitmap23dynamicBitmapGetAddressEt+0x14>)
 80173d0:	681b      	ldr	r3, [r3, #0]
 80173d2:	f853 0021 	ldr.w	r0, [r3, r1, lsl #2]
 80173d6:	bd08      	pop	{r3, pc}
 80173d8:	2000300c 	.word	0x2000300c

080173dc <_ZN8touchgfx6Bitmap10clearCacheEv>:
 80173dc:	b5f0      	push	{r4, r5, r6, r7, lr}
 80173de:	4c24      	ldr	r4, [pc, #144]	@ (8017470 <_ZN8touchgfx6Bitmap10clearCacheEv+0x94>)
 80173e0:	6823      	ldr	r3, [r4, #0]
 80173e2:	2b00      	cmp	r3, #0
 80173e4:	d042      	beq.n	801746c <_ZN8touchgfx6Bitmap10clearCacheEv+0x90>
 80173e6:	4a23      	ldr	r2, [pc, #140]	@ (8017474 <_ZN8touchgfx6Bitmap10clearCacheEv+0x98>)
 80173e8:	4d23      	ldr	r5, [pc, #140]	@ (8017478 <_ZN8touchgfx6Bitmap10clearCacheEv+0x9c>)
 80173ea:	8811      	ldrh	r1, [r2, #0]
 80173ec:	f8b5 c000 	ldrh.w	ip, [r5]
 80173f0:	4822      	ldr	r0, [pc, #136]	@ (801747c <_ZN8touchgfx6Bitmap10clearCacheEv+0xa0>)
 80173f2:	4461      	add	r1, ip
 80173f4:	1c4a      	adds	r2, r1, #1
 80173f6:	f022 0201 	bic.w	r2, r2, #1
 80173fa:	008f      	lsls	r7, r1, #2
 80173fc:	0412      	lsls	r2, r2, #16
 80173fe:	19de      	adds	r6, r3, r7
 8017400:	0c12      	lsrs	r2, r2, #16
 8017402:	eb07 0742 	add.w	r7, r7, r2, lsl #1
 8017406:	6006      	str	r6, [r0, #0]
 8017408:	4e1d      	ldr	r6, [pc, #116]	@ (8017480 <_ZN8touchgfx6Bitmap10clearCacheEv+0xa4>)
 801740a:	19da      	adds	r2, r3, r7
 801740c:	6032      	str	r2, [r6, #0]
 801740e:	220e      	movs	r2, #14
 8017410:	fb02 f20c 	mul.w	r2, r2, ip
 8017414:	3203      	adds	r2, #3
 8017416:	f022 0203 	bic.w	r2, r2, #3
 801741a:	443a      	add	r2, r7
 801741c:	4f19      	ldr	r7, [pc, #100]	@ (8017484 <_ZN8touchgfx6Bitmap10clearCacheEv+0xa8>)
 801741e:	4413      	add	r3, r2
 8017420:	603b      	str	r3, [r7, #0]
 8017422:	4f19      	ldr	r7, [pc, #100]	@ (8017488 <_ZN8touchgfx6Bitmap10clearCacheEv+0xac>)
 8017424:	2300      	movs	r3, #0
 8017426:	803b      	strh	r3, [r7, #0]
 8017428:	4f18      	ldr	r7, [pc, #96]	@ (801748c <_ZN8touchgfx6Bitmap10clearCacheEv+0xb0>)
 801742a:	683f      	ldr	r7, [r7, #0]
 801742c:	1aba      	subs	r2, r7, r2
 801742e:	4f18      	ldr	r7, [pc, #96]	@ (8017490 <_ZN8touchgfx6Bitmap10clearCacheEv+0xb4>)
 8017430:	603a      	str	r2, [r7, #0]
 8017432:	4a18      	ldr	r2, [pc, #96]	@ (8017494 <_ZN8touchgfx6Bitmap10clearCacheEv+0xb8>)
 8017434:	469c      	mov	ip, r3
 8017436:	8013      	strh	r3, [r2, #0]
 8017438:	f64f 77ff 	movw	r7, #65535	@ 0xffff
 801743c:	428b      	cmp	r3, r1
 801743e:	d10d      	bne.n	801745c <_ZN8touchgfx6Bitmap10clearCacheEv+0x80>
 8017440:	882d      	ldrh	r5, [r5, #0]
 8017442:	6830      	ldr	r0, [r6, #0]
 8017444:	2300      	movs	r3, #0
 8017446:	240e      	movs	r4, #14
 8017448:	429d      	cmp	r5, r3
 801744a:	d90f      	bls.n	801746c <_ZN8touchgfx6Bitmap10clearCacheEv+0x90>
 801744c:	fb04 0203 	mla	r2, r4, r3, r0
 8017450:	3301      	adds	r3, #1
 8017452:	7b11      	ldrb	r1, [r2, #12]
 8017454:	f36f 1145 	bfc	r1, #5, #1
 8017458:	7311      	strb	r1, [r2, #12]
 801745a:	e7f5      	b.n	8017448 <_ZN8touchgfx6Bitmap10clearCacheEv+0x6c>
 801745c:	6822      	ldr	r2, [r4, #0]
 801745e:	f842 c023 	str.w	ip, [r2, r3, lsl #2]
 8017462:	6802      	ldr	r2, [r0, #0]
 8017464:	f822 7013 	strh.w	r7, [r2, r3, lsl #1]
 8017468:	3301      	adds	r3, #1
 801746a:	e7e7      	b.n	801743c <_ZN8touchgfx6Bitmap10clearCacheEv+0x60>
 801746c:	bdf0      	pop	{r4, r5, r6, r7, pc}
 801746e:	bf00      	nop
 8017470:	2000300c 	.word	0x2000300c
 8017474:	20003028 	.word	0x20003028
 8017478:	2000302c 	.word	0x2000302c
 801747c:	20003020 	.word	0x20003020
 8017480:	20003010 	.word	0x20003010
 8017484:	20003018 	.word	0x20003018
 8017488:	2000302a 	.word	0x2000302a
 801748c:	20003014 	.word	0x20003014
 8017490:	20003024 	.word	0x20003024
 8017494:	2000301c 	.word	0x2000301c

08017498 <_ZN8touchgfx6Bitmap8setCacheEPtmm>:
 8017498:	4b06      	ldr	r3, [pc, #24]	@ (80174b4 <_ZN8touchgfx6Bitmap8setCacheEPtmm+0x1c>)
 801749a:	681b      	ldr	r3, [r3, #0]
 801749c:	b943      	cbnz	r3, 80174b0 <_ZN8touchgfx6Bitmap8setCacheEPtmm+0x18>
 801749e:	b139      	cbz	r1, 80174b0 <_ZN8touchgfx6Bitmap8setCacheEPtmm+0x18>
 80174a0:	4b05      	ldr	r3, [pc, #20]	@ (80174b8 <_ZN8touchgfx6Bitmap8setCacheEPtmm+0x20>)
 80174a2:	801a      	strh	r2, [r3, #0]
 80174a4:	4b05      	ldr	r3, [pc, #20]	@ (80174bc <_ZN8touchgfx6Bitmap8setCacheEPtmm+0x24>)
 80174a6:	6019      	str	r1, [r3, #0]
 80174a8:	4b05      	ldr	r3, [pc, #20]	@ (80174c0 <_ZN8touchgfx6Bitmap8setCacheEPtmm+0x28>)
 80174aa:	6018      	str	r0, [r3, #0]
 80174ac:	f7ff bf96 	b.w	80173dc <_ZN8touchgfx6Bitmap10clearCacheEv>
 80174b0:	4770      	bx	lr
 80174b2:	bf00      	nop
 80174b4:	20003018 	.word	0x20003018
 80174b8:	2000302c 	.word	0x2000302c
 80174bc:	20003014 	.word	0x20003014
 80174c0:	2000300c 	.word	0x2000300c

080174c4 <_ZN8touchgfx6Bitmap22registerBitmapDatabaseEPKNS0_10BitmapDataEtPtmm>:
 80174c4:	b470      	push	{r4, r5, r6}
 80174c6:	4c07      	ldr	r4, [pc, #28]	@ (80174e4 <_ZN8touchgfx6Bitmap22registerBitmapDatabaseEPKNS0_10BitmapDataEtPtmm+0x20>)
 80174c8:	6826      	ldr	r6, [r4, #0]
 80174ca:	4605      	mov	r5, r0
 80174cc:	4610      	mov	r0, r2
 80174ce:	9a03      	ldr	r2, [sp, #12]
 80174d0:	b936      	cbnz	r6, 80174e0 <_ZN8touchgfx6Bitmap22registerBitmapDatabaseEPKNS0_10BitmapDataEtPtmm+0x1c>
 80174d2:	6025      	str	r5, [r4, #0]
 80174d4:	4c04      	ldr	r4, [pc, #16]	@ (80174e8 <_ZN8touchgfx6Bitmap22registerBitmapDatabaseEPKNS0_10BitmapDataEtPtmm+0x24>)
 80174d6:	8021      	strh	r1, [r4, #0]
 80174d8:	bc70      	pop	{r4, r5, r6}
 80174da:	4619      	mov	r1, r3
 80174dc:	f7ff bfdc 	b.w	8017498 <_ZN8touchgfx6Bitmap8setCacheEPtmm>
 80174e0:	bc70      	pop	{r4, r5, r6}
 80174e2:	4770      	bx	lr
 80174e4:	20003030 	.word	0x20003030
 80174e8:	20003028 	.word	0x20003028

080174ec <_ZNK8touchgfx6Bitmap8getWidthEv>:
 80174ec:	4a12      	ldr	r2, [pc, #72]	@ (8017538 <_ZNK8touchgfx6Bitmap8getWidthEv+0x4c>)
 80174ee:	8803      	ldrh	r3, [r0, #0]
 80174f0:	8812      	ldrh	r2, [r2, #0]
 80174f2:	4293      	cmp	r3, r2
 80174f4:	d207      	bcs.n	8017506 <_ZNK8touchgfx6Bitmap8getWidthEv+0x1a>
 80174f6:	4a11      	ldr	r2, [pc, #68]	@ (801753c <_ZNK8touchgfx6Bitmap8getWidthEv+0x50>)
 80174f8:	6812      	ldr	r2, [r2, #0]
 80174fa:	2114      	movs	r1, #20
 80174fc:	fb01 2303 	mla	r3, r1, r3, r2
 8017500:	f9b3 0008 	ldrsh.w	r0, [r3, #8]
 8017504:	4770      	bx	lr
 8017506:	490e      	ldr	r1, [pc, #56]	@ (8017540 <_ZNK8touchgfx6Bitmap8getWidthEv+0x54>)
 8017508:	8809      	ldrh	r1, [r1, #0]
 801750a:	4411      	add	r1, r2
 801750c:	428b      	cmp	r3, r1
 801750e:	da04      	bge.n	801751a <_ZNK8touchgfx6Bitmap8getWidthEv+0x2e>
 8017510:	1a9b      	subs	r3, r3, r2
 8017512:	4a0c      	ldr	r2, [pc, #48]	@ (8017544 <_ZNK8touchgfx6Bitmap8getWidthEv+0x58>)
 8017514:	210e      	movs	r1, #14
 8017516:	6812      	ldr	r2, [r2, #0]
 8017518:	e7f0      	b.n	80174fc <_ZNK8touchgfx6Bitmap8getWidthEv+0x10>
 801751a:	f64f 72fe 	movw	r2, #65534	@ 0xfffe
 801751e:	4293      	cmp	r3, r2
 8017520:	d108      	bne.n	8017534 <_ZNK8touchgfx6Bitmap8getWidthEv+0x48>
 8017522:	4b09      	ldr	r3, [pc, #36]	@ (8017548 <_ZNK8touchgfx6Bitmap8getWidthEv+0x5c>)
 8017524:	781b      	ldrb	r3, [r3, #0]
 8017526:	b91b      	cbnz	r3, 8017530 <_ZNK8touchgfx6Bitmap8getWidthEv+0x44>
 8017528:	4b08      	ldr	r3, [pc, #32]	@ (801754c <_ZNK8touchgfx6Bitmap8getWidthEv+0x60>)
 801752a:	f9b3 0000 	ldrsh.w	r0, [r3]
 801752e:	4770      	bx	lr
 8017530:	4b07      	ldr	r3, [pc, #28]	@ (8017550 <_ZNK8touchgfx6Bitmap8getWidthEv+0x64>)
 8017532:	e7fa      	b.n	801752a <_ZNK8touchgfx6Bitmap8getWidthEv+0x3e>
 8017534:	2000      	movs	r0, #0
 8017536:	4770      	bx	lr
 8017538:	20003028 	.word	0x20003028
 801753c:	20003030 	.word	0x20003030
 8017540:	2000302c 	.word	0x2000302c
 8017544:	20003010 	.word	0x20003010
 8017548:	20002fa0 	.word	0x20002fa0
 801754c:	20002fa2 	.word	0x20002fa2
 8017550:	20002fa4 	.word	0x20002fa4

08017554 <_ZNK8touchgfx6Bitmap9getHeightEv>:
 8017554:	4a12      	ldr	r2, [pc, #72]	@ (80175a0 <_ZNK8touchgfx6Bitmap9getHeightEv+0x4c>)
 8017556:	8803      	ldrh	r3, [r0, #0]
 8017558:	8812      	ldrh	r2, [r2, #0]
 801755a:	4293      	cmp	r3, r2
 801755c:	d207      	bcs.n	801756e <_ZNK8touchgfx6Bitmap9getHeightEv+0x1a>
 801755e:	4a11      	ldr	r2, [pc, #68]	@ (80175a4 <_ZNK8touchgfx6Bitmap9getHeightEv+0x50>)
 8017560:	6812      	ldr	r2, [r2, #0]
 8017562:	2114      	movs	r1, #20
 8017564:	fb01 2303 	mla	r3, r1, r3, r2
 8017568:	f9b3 000a 	ldrsh.w	r0, [r3, #10]
 801756c:	4770      	bx	lr
 801756e:	490e      	ldr	r1, [pc, #56]	@ (80175a8 <_ZNK8touchgfx6Bitmap9getHeightEv+0x54>)
 8017570:	8809      	ldrh	r1, [r1, #0]
 8017572:	4411      	add	r1, r2
 8017574:	428b      	cmp	r3, r1
 8017576:	da04      	bge.n	8017582 <_ZNK8touchgfx6Bitmap9getHeightEv+0x2e>
 8017578:	1a9b      	subs	r3, r3, r2
 801757a:	4a0c      	ldr	r2, [pc, #48]	@ (80175ac <_ZNK8touchgfx6Bitmap9getHeightEv+0x58>)
 801757c:	210e      	movs	r1, #14
 801757e:	6812      	ldr	r2, [r2, #0]
 8017580:	e7f0      	b.n	8017564 <_ZNK8touchgfx6Bitmap9getHeightEv+0x10>
 8017582:	f64f 72fe 	movw	r2, #65534	@ 0xfffe
 8017586:	4293      	cmp	r3, r2
 8017588:	d108      	bne.n	801759c <_ZNK8touchgfx6Bitmap9getHeightEv+0x48>
 801758a:	4b09      	ldr	r3, [pc, #36]	@ (80175b0 <_ZNK8touchgfx6Bitmap9getHeightEv+0x5c>)
 801758c:	781b      	ldrb	r3, [r3, #0]
 801758e:	b91b      	cbnz	r3, 8017598 <_ZNK8touchgfx6Bitmap9getHeightEv+0x44>
 8017590:	4b08      	ldr	r3, [pc, #32]	@ (80175b4 <_ZNK8touchgfx6Bitmap9getHeightEv+0x60>)
 8017592:	f9b3 0000 	ldrsh.w	r0, [r3]
 8017596:	4770      	bx	lr
 8017598:	4b07      	ldr	r3, [pc, #28]	@ (80175b8 <_ZNK8touchgfx6Bitmap9getHeightEv+0x64>)
 801759a:	e7fa      	b.n	8017592 <_ZNK8touchgfx6Bitmap9getHeightEv+0x3e>
 801759c:	2000      	movs	r0, #0
 801759e:	4770      	bx	lr
 80175a0:	20003028 	.word	0x20003028
 80175a4:	20003030 	.word	0x20003030
 80175a8:	2000302c 	.word	0x2000302c
 80175ac:	20003010 	.word	0x20003010
 80175b0:	20002fa0 	.word	0x20002fa0
 80175b4:	20002fa4 	.word	0x20002fa4
 80175b8:	20002fa2 	.word	0x20002fa2

080175bc <_ZNK8touchgfx6Bitmap12getSolidRectEv>:
 80175bc:	b530      	push	{r4, r5, lr}
 80175be:	4a22      	ldr	r2, [pc, #136]	@ (8017648 <_ZNK8touchgfx6Bitmap12getSolidRectEv+0x8c>)
 80175c0:	880b      	ldrh	r3, [r1, #0]
 80175c2:	8812      	ldrh	r2, [r2, #0]
 80175c4:	4293      	cmp	r3, r2
 80175c6:	d213      	bcs.n	80175f0 <_ZNK8touchgfx6Bitmap12getSolidRectEv+0x34>
 80175c8:	4a20      	ldr	r2, [pc, #128]	@ (801764c <_ZNK8touchgfx6Bitmap12getSolidRectEv+0x90>)
 80175ca:	6812      	ldr	r2, [r2, #0]
 80175cc:	2114      	movs	r1, #20
 80175ce:	fb01 2303 	mla	r3, r1, r3, r2
 80175d2:	8a1a      	ldrh	r2, [r3, #16]
 80175d4:	f9b3 400c 	ldrsh.w	r4, [r3, #12]
 80175d8:	f9b3 100e 	ldrsh.w	r1, [r3, #14]
 80175dc:	8a5b      	ldrh	r3, [r3, #18]
 80175de:	8004      	strh	r4, [r0, #0]
 80175e0:	f3c2 020c 	ubfx	r2, r2, #0, #13
 80175e4:	f3c3 030c 	ubfx	r3, r3, #0, #13
 80175e8:	8041      	strh	r1, [r0, #2]
 80175ea:	8082      	strh	r2, [r0, #4]
 80175ec:	80c3      	strh	r3, [r0, #6]
 80175ee:	e024      	b.n	801763a <_ZNK8touchgfx6Bitmap12getSolidRectEv+0x7e>
 80175f0:	4917      	ldr	r1, [pc, #92]	@ (8017650 <_ZNK8touchgfx6Bitmap12getSolidRectEv+0x94>)
 80175f2:	8809      	ldrh	r1, [r1, #0]
 80175f4:	4411      	add	r1, r2
 80175f6:	428b      	cmp	r3, r1
 80175f8:	da10      	bge.n	801761c <_ZNK8touchgfx6Bitmap12getSolidRectEv+0x60>
 80175fa:	1a9b      	subs	r3, r3, r2
 80175fc:	220e      	movs	r2, #14
 80175fe:	4353      	muls	r3, r2
 8017600:	4a14      	ldr	r2, [pc, #80]	@ (8017654 <_ZNK8touchgfx6Bitmap12getSolidRectEv+0x98>)
 8017602:	6811      	ldr	r1, [r2, #0]
 8017604:	18ca      	adds	r2, r1, r3
 8017606:	5ecd      	ldrsh	r5, [r1, r3]
 8017608:	f9b2 4002 	ldrsh.w	r4, [r2, #2]
 801760c:	f9b2 1004 	ldrsh.w	r1, [r2, #4]
 8017610:	f9b2 3006 	ldrsh.w	r3, [r2, #6]
 8017614:	8005      	strh	r5, [r0, #0]
 8017616:	8044      	strh	r4, [r0, #2]
 8017618:	8081      	strh	r1, [r0, #4]
 801761a:	e7e7      	b.n	80175ec <_ZNK8touchgfx6Bitmap12getSolidRectEv+0x30>
 801761c:	f64f 72fe 	movw	r2, #65534	@ 0xfffe
 8017620:	4293      	cmp	r3, r2
 8017622:	d10b      	bne.n	801763c <_ZNK8touchgfx6Bitmap12getSolidRectEv+0x80>
 8017624:	4b0c      	ldr	r3, [pc, #48]	@ (8017658 <_ZNK8touchgfx6Bitmap12getSolidRectEv+0x9c>)
 8017626:	f9b3 1000 	ldrsh.w	r1, [r3]
 801762a:	4b0c      	ldr	r3, [pc, #48]	@ (801765c <_ZNK8touchgfx6Bitmap12getSolidRectEv+0xa0>)
 801762c:	8081      	strh	r1, [r0, #4]
 801762e:	f9b3 2000 	ldrsh.w	r2, [r3]
 8017632:	80c2      	strh	r2, [r0, #6]
 8017634:	2300      	movs	r3, #0
 8017636:	8003      	strh	r3, [r0, #0]
 8017638:	8043      	strh	r3, [r0, #2]
 801763a:	bd30      	pop	{r4, r5, pc}
 801763c:	2300      	movs	r3, #0
 801763e:	8003      	strh	r3, [r0, #0]
 8017640:	8043      	strh	r3, [r0, #2]
 8017642:	8083      	strh	r3, [r0, #4]
 8017644:	e7d2      	b.n	80175ec <_ZNK8touchgfx6Bitmap12getSolidRectEv+0x30>
 8017646:	bf00      	nop
 8017648:	20003028 	.word	0x20003028
 801764c:	20003030 	.word	0x20003030
 8017650:	2000302c 	.word	0x2000302c
 8017654:	20003010 	.word	0x20003010
 8017658:	20002f9c 	.word	0x20002f9c
 801765c:	20002f9e 	.word	0x20002f9e

08017660 <_ZNK8touchgfx6Bitmap20hasTransparentPixelsEv>:
 8017660:	4a17      	ldr	r2, [pc, #92]	@ (80176c0 <_ZNK8touchgfx6Bitmap20hasTransparentPixelsEv+0x60>)
 8017662:	8803      	ldrh	r3, [r0, #0]
 8017664:	8812      	ldrh	r2, [r2, #0]
 8017666:	4293      	cmp	r3, r2
 8017668:	d213      	bcs.n	8017692 <_ZNK8touchgfx6Bitmap20hasTransparentPixelsEv+0x32>
 801766a:	4a16      	ldr	r2, [pc, #88]	@ (80176c4 <_ZNK8touchgfx6Bitmap20hasTransparentPixelsEv+0x64>)
 801766c:	6812      	ldr	r2, [r2, #0]
 801766e:	2114      	movs	r1, #20
 8017670:	fb01 2303 	mla	r3, r1, r3, r2
 8017674:	8a1a      	ldrh	r2, [r3, #16]
 8017676:	8919      	ldrh	r1, [r3, #8]
 8017678:	f3c2 020c 	ubfx	r2, r2, #0, #13
 801767c:	428a      	cmp	r2, r1
 801767e:	db1d      	blt.n	80176bc <_ZNK8touchgfx6Bitmap20hasTransparentPixelsEv+0x5c>
 8017680:	8a58      	ldrh	r0, [r3, #18]
 8017682:	f3c0 000c 	ubfx	r0, r0, #0, #13
 8017686:	895b      	ldrh	r3, [r3, #10]
 8017688:	4298      	cmp	r0, r3
 801768a:	bfac      	ite	ge
 801768c:	2000      	movge	r0, #0
 801768e:	2001      	movlt	r0, #1
 8017690:	4770      	bx	lr
 8017692:	490d      	ldr	r1, [pc, #52]	@ (80176c8 <_ZNK8touchgfx6Bitmap20hasTransparentPixelsEv+0x68>)
 8017694:	8809      	ldrh	r1, [r1, #0]
 8017696:	4411      	add	r1, r2
 8017698:	428b      	cmp	r3, r1
 801769a:	da0d      	bge.n	80176b8 <_ZNK8touchgfx6Bitmap20hasTransparentPixelsEv+0x58>
 801769c:	1a9b      	subs	r3, r3, r2
 801769e:	4a0b      	ldr	r2, [pc, #44]	@ (80176cc <_ZNK8touchgfx6Bitmap20hasTransparentPixelsEv+0x6c>)
 80176a0:	6812      	ldr	r2, [r2, #0]
 80176a2:	210e      	movs	r1, #14
 80176a4:	fb01 2303 	mla	r3, r1, r3, r2
 80176a8:	f9b3 1004 	ldrsh.w	r1, [r3, #4]
 80176ac:	891a      	ldrh	r2, [r3, #8]
 80176ae:	4291      	cmp	r1, r2
 80176b0:	db04      	blt.n	80176bc <_ZNK8touchgfx6Bitmap20hasTransparentPixelsEv+0x5c>
 80176b2:	f9b3 0006 	ldrsh.w	r0, [r3, #6]
 80176b6:	e7e6      	b.n	8017686 <_ZNK8touchgfx6Bitmap20hasTransparentPixelsEv+0x26>
 80176b8:	2000      	movs	r0, #0
 80176ba:	4770      	bx	lr
 80176bc:	2001      	movs	r0, #1
 80176be:	4770      	bx	lr
 80176c0:	20003028 	.word	0x20003028
 80176c4:	20003030 	.word	0x20003030
 80176c8:	2000302c 	.word	0x2000302c
 80176cc:	20003010 	.word	0x20003010

080176d0 <_ZNK8touchgfx6Bitmap7getDataEv>:
 80176d0:	4a12      	ldr	r2, [pc, #72]	@ (801771c <_ZNK8touchgfx6Bitmap7getDataEv+0x4c>)
 80176d2:	8803      	ldrh	r3, [r0, #0]
 80176d4:	8811      	ldrh	r1, [r2, #0]
 80176d6:	428b      	cmp	r3, r1
 80176d8:	d20b      	bcs.n	80176f2 <_ZNK8touchgfx6Bitmap7getDataEv+0x22>
 80176da:	4a11      	ldr	r2, [pc, #68]	@ (8017720 <_ZNK8touchgfx6Bitmap7getDataEv+0x50>)
 80176dc:	6812      	ldr	r2, [r2, #0]
 80176de:	b112      	cbz	r2, 80176e6 <_ZNK8touchgfx6Bitmap7getDataEv+0x16>
 80176e0:	f852 0023 	ldr.w	r0, [r2, r3, lsl #2]
 80176e4:	b9c0      	cbnz	r0, 8017718 <_ZNK8touchgfx6Bitmap7getDataEv+0x48>
 80176e6:	4a0f      	ldr	r2, [pc, #60]	@ (8017724 <_ZNK8touchgfx6Bitmap7getDataEv+0x54>)
 80176e8:	6811      	ldr	r1, [r2, #0]
 80176ea:	2214      	movs	r2, #20
 80176ec:	4353      	muls	r3, r2
 80176ee:	58c8      	ldr	r0, [r1, r3]
 80176f0:	4770      	bx	lr
 80176f2:	4a0d      	ldr	r2, [pc, #52]	@ (8017728 <_ZNK8touchgfx6Bitmap7getDataEv+0x58>)
 80176f4:	8812      	ldrh	r2, [r2, #0]
 80176f6:	440a      	add	r2, r1
 80176f8:	4293      	cmp	r3, r2
 80176fa:	da04      	bge.n	8017706 <_ZNK8touchgfx6Bitmap7getDataEv+0x36>
 80176fc:	4a08      	ldr	r2, [pc, #32]	@ (8017720 <_ZNK8touchgfx6Bitmap7getDataEv+0x50>)
 80176fe:	6812      	ldr	r2, [r2, #0]
 8017700:	f852 0023 	ldr.w	r0, [r2, r3, lsl #2]
 8017704:	4770      	bx	lr
 8017706:	f64f 72fe 	movw	r2, #65534	@ 0xfffe
 801770a:	4293      	cmp	r3, r2
 801770c:	d103      	bne.n	8017716 <_ZNK8touchgfx6Bitmap7getDataEv+0x46>
 801770e:	4b07      	ldr	r3, [pc, #28]	@ (801772c <_ZNK8touchgfx6Bitmap7getDataEv+0x5c>)
 8017710:	681b      	ldr	r3, [r3, #0]
 8017712:	6c58      	ldr	r0, [r3, #68]	@ 0x44
 8017714:	4770      	bx	lr
 8017716:	2000      	movs	r0, #0
 8017718:	4770      	bx	lr
 801771a:	bf00      	nop
 801771c:	20003028 	.word	0x20003028
 8017720:	2000300c 	.word	0x2000300c
 8017724:	20003030 	.word	0x20003030
 8017728:	2000302c 	.word	0x2000302c
 801772c:	20002fa8 	.word	0x20002fa8

08017730 <_ZNK8touchgfx6Bitmap12getExtraDataEv>:
 8017730:	4b24      	ldr	r3, [pc, #144]	@ (80177c4 <_ZNK8touchgfx6Bitmap12getExtraDataEv+0x94>)
 8017732:	8802      	ldrh	r2, [r0, #0]
 8017734:	8818      	ldrh	r0, [r3, #0]
 8017736:	4282      	cmp	r2, r0
 8017738:	d221      	bcs.n	801777e <_ZNK8touchgfx6Bitmap12getExtraDataEv+0x4e>
 801773a:	4b23      	ldr	r3, [pc, #140]	@ (80177c8 <_ZNK8touchgfx6Bitmap12getExtraDataEv+0x98>)
 801773c:	6819      	ldr	r1, [r3, #0]
 801773e:	2314      	movs	r3, #20
 8017740:	fb03 1302 	mla	r3, r3, r2, r1
 8017744:	6858      	ldr	r0, [r3, #4]
 8017746:	2800      	cmp	r0, #0
 8017748:	d03a      	beq.n	80177c0 <_ZNK8touchgfx6Bitmap12getExtraDataEv+0x90>
 801774a:	4920      	ldr	r1, [pc, #128]	@ (80177cc <_ZNK8touchgfx6Bitmap12getExtraDataEv+0x9c>)
 801774c:	6809      	ldr	r1, [r1, #0]
 801774e:	2900      	cmp	r1, #0
 8017750:	d036      	beq.n	80177c0 <_ZNK8touchgfx6Bitmap12getExtraDataEv+0x90>
 8017752:	f851 1022 	ldr.w	r1, [r1, r2, lsl #2]
 8017756:	2900      	cmp	r1, #0
 8017758:	d032      	beq.n	80177c0 <_ZNK8touchgfx6Bitmap12getExtraDataEv+0x90>
 801775a:	891a      	ldrh	r2, [r3, #8]
 801775c:	8958      	ldrh	r0, [r3, #10]
 801775e:	4350      	muls	r0, r2
 8017760:	7c5a      	ldrb	r2, [r3, #17]
 8017762:	7cdb      	ldrb	r3, [r3, #19]
 8017764:	0952      	lsrs	r2, r2, #5
 8017766:	f3c3 1342 	ubfx	r3, r3, #5, #3
 801776a:	ea43 03c2 	orr.w	r3, r3, r2, lsl #3
 801776e:	2b0b      	cmp	r3, #11
 8017770:	bf18      	it	ne
 8017772:	0040      	lslne	r0, r0, #1
 8017774:	3003      	adds	r0, #3
 8017776:	f020 0003 	bic.w	r0, r0, #3
 801777a:	4408      	add	r0, r1
 801777c:	4770      	bx	lr
 801777e:	4b14      	ldr	r3, [pc, #80]	@ (80177d0 <_ZNK8touchgfx6Bitmap12getExtraDataEv+0xa0>)
 8017780:	881b      	ldrh	r3, [r3, #0]
 8017782:	4403      	add	r3, r0
 8017784:	429a      	cmp	r2, r3
 8017786:	da1a      	bge.n	80177be <_ZNK8touchgfx6Bitmap12getExtraDataEv+0x8e>
 8017788:	4b12      	ldr	r3, [pc, #72]	@ (80177d4 <_ZNK8touchgfx6Bitmap12getExtraDataEv+0xa4>)
 801778a:	681b      	ldr	r3, [r3, #0]
 801778c:	1a10      	subs	r0, r2, r0
 801778e:	210e      	movs	r1, #14
 8017790:	fb01 3000 	mla	r0, r1, r0, r3
 8017794:	7b03      	ldrb	r3, [r0, #12]
 8017796:	f003 031f 	and.w	r3, r3, #31
 801779a:	2b0b      	cmp	r3, #11
 801779c:	d10b      	bne.n	80177b6 <_ZNK8touchgfx6Bitmap12getExtraDataEv+0x86>
 801779e:	8903      	ldrh	r3, [r0, #8]
 80177a0:	8940      	ldrh	r0, [r0, #10]
 80177a2:	4358      	muls	r0, r3
 80177a4:	4b09      	ldr	r3, [pc, #36]	@ (80177cc <_ZNK8touchgfx6Bitmap12getExtraDataEv+0x9c>)
 80177a6:	6819      	ldr	r1, [r3, #0]
 80177a8:	3003      	adds	r0, #3
 80177aa:	f020 0303 	bic.w	r3, r0, #3
 80177ae:	f851 0022 	ldr.w	r0, [r1, r2, lsl #2]
 80177b2:	4418      	add	r0, r3
 80177b4:	4770      	bx	lr
 80177b6:	2b0d      	cmp	r3, #13
 80177b8:	d101      	bne.n	80177be <_ZNK8touchgfx6Bitmap12getExtraDataEv+0x8e>
 80177ba:	300d      	adds	r0, #13
 80177bc:	4770      	bx	lr
 80177be:	2000      	movs	r0, #0
 80177c0:	4770      	bx	lr
 80177c2:	bf00      	nop
 80177c4:	20003028 	.word	0x20003028
 80177c8:	20003030 	.word	0x20003030
 80177cc:	2000300c 	.word	0x2000300c
 80177d0:	2000302c 	.word	0x2000302c
 80177d4:	20003010 	.word	0x20003010

080177d8 <_ZNK8touchgfx6Bitmap9getFormatEv>:
 80177d8:	b510      	push	{r4, lr}
 80177da:	4b1f      	ldr	r3, [pc, #124]	@ (8017858 <_ZNK8touchgfx6Bitmap9getFormatEv+0x80>)
 80177dc:	8802      	ldrh	r2, [r0, #0]
 80177de:	881b      	ldrh	r3, [r3, #0]
 80177e0:	429a      	cmp	r2, r3
 80177e2:	d21a      	bcs.n	801781a <_ZNK8touchgfx6Bitmap9getFormatEv+0x42>
 80177e4:	4b1d      	ldr	r3, [pc, #116]	@ (801785c <_ZNK8touchgfx6Bitmap9getFormatEv+0x84>)
 80177e6:	681b      	ldr	r3, [r3, #0]
 80177e8:	2114      	movs	r1, #20
 80177ea:	fb01 3102 	mla	r1, r1, r2, r3
 80177ee:	7c4b      	ldrb	r3, [r1, #17]
 80177f0:	0958      	lsrs	r0, r3, #5
 80177f2:	7ccb      	ldrb	r3, [r1, #19]
 80177f4:	491a      	ldr	r1, [pc, #104]	@ (8017860 <_ZNK8touchgfx6Bitmap9getFormatEv+0x88>)
 80177f6:	f3c3 1342 	ubfx	r3, r3, #5, #3
 80177fa:	6809      	ldr	r1, [r1, #0]
 80177fc:	ea43 03c0 	orr.w	r3, r3, r0, lsl #3
 8017800:	b2d8      	uxtb	r0, r3
 8017802:	b149      	cbz	r1, 8017818 <_ZNK8touchgfx6Bitmap9getFormatEv+0x40>
 8017804:	f851 2022 	ldr.w	r2, [r1, r2, lsl #2]
 8017808:	b132      	cbz	r2, 8017818 <_ZNK8touchgfx6Bitmap9getFormatEv+0x40>
 801780a:	2b0e      	cmp	r3, #14
 801780c:	d021      	beq.n	8017852 <_ZNK8touchgfx6Bitmap9getFormatEv+0x7a>
 801780e:	280f      	cmp	r0, #15
 8017810:	d01d      	beq.n	801784e <_ZNK8touchgfx6Bitmap9getFormatEv+0x76>
 8017812:	2810      	cmp	r0, #16
 8017814:	bf08      	it	eq
 8017816:	2002      	moveq	r0, #2
 8017818:	bd10      	pop	{r4, pc}
 801781a:	4912      	ldr	r1, [pc, #72]	@ (8017864 <_ZNK8touchgfx6Bitmap9getFormatEv+0x8c>)
 801781c:	8809      	ldrh	r1, [r1, #0]
 801781e:	4419      	add	r1, r3
 8017820:	428a      	cmp	r2, r1
 8017822:	da09      	bge.n	8017838 <_ZNK8touchgfx6Bitmap9getFormatEv+0x60>
 8017824:	1ad3      	subs	r3, r2, r3
 8017826:	4a10      	ldr	r2, [pc, #64]	@ (8017868 <_ZNK8touchgfx6Bitmap9getFormatEv+0x90>)
 8017828:	6812      	ldr	r2, [r2, #0]
 801782a:	210e      	movs	r1, #14
 801782c:	fb01 2303 	mla	r3, r1, r3, r2
 8017830:	7b18      	ldrb	r0, [r3, #12]
 8017832:	f000 001f 	and.w	r0, r0, #31
 8017836:	e7ef      	b.n	8017818 <_ZNK8touchgfx6Bitmap9getFormatEv+0x40>
 8017838:	f64f 73fe 	movw	r3, #65534	@ 0xfffe
 801783c:	429a      	cmp	r2, r3
 801783e:	d108      	bne.n	8017852 <_ZNK8touchgfx6Bitmap9getFormatEv+0x7a>
 8017840:	f7f0 fe80 	bl	8008544 <_ZN8touchgfx3HAL3lcdEv>
 8017844:	6803      	ldr	r3, [r0, #0]
 8017846:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
 801784a:	6adb      	ldr	r3, [r3, #44]	@ 0x2c
 801784c:	4718      	bx	r3
 801784e:	2001      	movs	r0, #1
 8017850:	e7e2      	b.n	8017818 <_ZNK8touchgfx6Bitmap9getFormatEv+0x40>
 8017852:	2000      	movs	r0, #0
 8017854:	e7e0      	b.n	8017818 <_ZNK8touchgfx6Bitmap9getFormatEv+0x40>
 8017856:	bf00      	nop
 8017858:	20003028 	.word	0x20003028
 801785c:	20003030 	.word	0x20003030
 8017860:	2000300c 	.word	0x2000300c
 8017864:	2000302c 	.word	0x2000302c
 8017868:	20003010 	.word	0x20003010

0801786c <_ZNK8touchgfx8LCD16bpp8bitDepthEv>:
 801786c:	2010      	movs	r0, #16
 801786e:	4770      	bx	lr

08017870 <_ZNK8touchgfx8LCD16bpp17framebufferFormatEv>:
 8017870:	2000      	movs	r0, #0
 8017872:	4770      	bx	lr

08017874 <_ZNK8touchgfx8LCD16bpp17framebufferStrideEv>:
 8017874:	4b02      	ldr	r3, [pc, #8]	@ (8017880 <_ZNK8touchgfx8LCD16bpp17framebufferStrideEv+0xc>)
 8017876:	8818      	ldrh	r0, [r3, #0]
 8017878:	0040      	lsls	r0, r0, #1
 801787a:	b280      	uxth	r0, r0
 801787c:	4770      	bx	lr
 801787e:	bf00      	nop
 8017880:	20002fa2 	.word	0x20002fa2

08017884 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth>:
 8017884:	2bff      	cmp	r3, #255	@ 0xff
 8017886:	d05e      	beq.n	8017946 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0xc2>
 8017888:	2a0b      	cmp	r2, #11
 801788a:	d058      	beq.n	801793e <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0xba>
 801788c:	d80e      	bhi.n	80178ac <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x28>
 801788e:	2a03      	cmp	r2, #3
 8017890:	d04d      	beq.n	801792e <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0xaa>
 8017892:	d804      	bhi.n	801789e <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x1a>
 8017894:	2a01      	cmp	r2, #1
 8017896:	d04c      	beq.n	8017932 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0xae>
 8017898:	d94d      	bls.n	8017936 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0xb2>
 801789a:	6bc3      	ldr	r3, [r0, #60]	@ 0x3c
 801789c:	e031      	b.n	8017902 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x7e>
 801789e:	2a09      	cmp	r2, #9
 80178a0:	d04d      	beq.n	801793e <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0xba>
 80178a2:	d84a      	bhi.n	801793a <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0xb6>
 80178a4:	2a08      	cmp	r2, #8
 80178a6:	d048      	beq.n	801793a <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0xb6>
 80178a8:	2300      	movs	r3, #0
 80178aa:	e02a      	b.n	8017902 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x7e>
 80178ac:	2a2f      	cmp	r2, #47	@ 0x2f
 80178ae:	d02c      	beq.n	801790a <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x86>
 80178b0:	d811      	bhi.n	80178d6 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x52>
 80178b2:	2a2d      	cmp	r2, #45	@ 0x2d
 80178b4:	d018      	beq.n	80178e8 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x64>
 80178b6:	d831      	bhi.n	801791c <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x98>
 80178b8:	2a2c      	cmp	r2, #44	@ 0x2c
 80178ba:	d1f5      	bne.n	80178a8 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x24>
 80178bc:	684a      	ldr	r2, [r1, #4]
 80178be:	7813      	ldrb	r3, [r2, #0]
 80178c0:	7852      	ldrb	r2, [r2, #1]
 80178c2:	2a00      	cmp	r2, #0
 80178c4:	d1f0      	bne.n	80178a8 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x24>
 80178c6:	2b01      	cmp	r3, #1
 80178c8:	d01d      	beq.n	8017906 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x82>
 80178ca:	2b00      	cmp	r3, #0
 80178cc:	d02d      	beq.n	801792a <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0xa6>
 80178ce:	2b02      	cmp	r3, #2
 80178d0:	d1ea      	bne.n	80178a8 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x24>
 80178d2:	68c3      	ldr	r3, [r0, #12]
 80178d4:	e015      	b.n	8017902 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x7e>
 80178d6:	2a31      	cmp	r2, #49	@ 0x31
 80178d8:	d004      	beq.n	80178e4 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x60>
 80178da:	d332      	bcc.n	8017942 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0xbe>
 80178dc:	2a32      	cmp	r2, #50	@ 0x32
 80178de:	d030      	beq.n	8017942 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0xbe>
 80178e0:	2a33      	cmp	r2, #51	@ 0x33
 80178e2:	d1e1      	bne.n	80178a8 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x24>
 80178e4:	6f43      	ldr	r3, [r0, #116]	@ 0x74
 80178e6:	e00c      	b.n	8017902 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x7e>
 80178e8:	684a      	ldr	r2, [r1, #4]
 80178ea:	7813      	ldrb	r3, [r2, #0]
 80178ec:	7852      	ldrb	r2, [r2, #1]
 80178ee:	2a00      	cmp	r2, #0
 80178f0:	d1da      	bne.n	80178a8 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x24>
 80178f2:	2b01      	cmp	r3, #1
 80178f4:	d004      	beq.n	8017900 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x7c>
 80178f6:	d30f      	bcc.n	8017918 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x94>
 80178f8:	2b02      	cmp	r3, #2
 80178fa:	d1d5      	bne.n	80178a8 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x24>
 80178fc:	6943      	ldr	r3, [r0, #20]
 80178fe:	e000      	b.n	8017902 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x7e>
 8017900:	6a43      	ldr	r3, [r0, #36]	@ 0x24
 8017902:	4618      	mov	r0, r3
 8017904:	4770      	bx	lr
 8017906:	69c3      	ldr	r3, [r0, #28]
 8017908:	e7fb      	b.n	8017902 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x7e>
 801790a:	684b      	ldr	r3, [r1, #4]
 801790c:	781a      	ldrb	r2, [r3, #0]
 801790e:	785b      	ldrb	r3, [r3, #1]
 8017910:	2b00      	cmp	r3, #0
 8017912:	d1c9      	bne.n	80178a8 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x24>
 8017914:	2a00      	cmp	r2, #0
 8017916:	d1f4      	bne.n	8017902 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x7e>
 8017918:	6b43      	ldr	r3, [r0, #52]	@ 0x34
 801791a:	e7f2      	b.n	8017902 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x7e>
 801791c:	684b      	ldr	r3, [r1, #4]
 801791e:	781a      	ldrb	r2, [r3, #0]
 8017920:	785b      	ldrb	r3, [r3, #1]
 8017922:	2b00      	cmp	r3, #0
 8017924:	d1c0      	bne.n	80178a8 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x24>
 8017926:	2a00      	cmp	r2, #0
 8017928:	d1eb      	bne.n	8017902 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x7e>
 801792a:	6ac3      	ldr	r3, [r0, #44]	@ 0x2c
 801792c:	e7e9      	b.n	8017902 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x7e>
 801792e:	6cc3      	ldr	r3, [r0, #76]	@ 0x4c
 8017930:	e7e7      	b.n	8017902 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x7e>
 8017932:	6d43      	ldr	r3, [r0, #84]	@ 0x54
 8017934:	e7e5      	b.n	8017902 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x7e>
 8017936:	6c43      	ldr	r3, [r0, #68]	@ 0x44
 8017938:	e7e3      	b.n	8017902 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x7e>
 801793a:	6dc3      	ldr	r3, [r0, #92]	@ 0x5c
 801793c:	e7e1      	b.n	8017902 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x7e>
 801793e:	6e43      	ldr	r3, [r0, #100]	@ 0x64
 8017940:	e7df      	b.n	8017902 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x7e>
 8017942:	6ec3      	ldr	r3, [r0, #108]	@ 0x6c
 8017944:	e7dd      	b.n	8017902 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x7e>
 8017946:	2a0b      	cmp	r2, #11
 8017948:	d059      	beq.n	80179fe <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x17a>
 801794a:	d80e      	bhi.n	801796a <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0xe6>
 801794c:	2a03      	cmp	r2, #3
 801794e:	d050      	beq.n	80179f2 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x16e>
 8017950:	d804      	bhi.n	801795c <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0xd8>
 8017952:	2a01      	cmp	r2, #1
 8017954:	d04f      	beq.n	80179f6 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x172>
 8017956:	d950      	bls.n	80179fa <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x176>
 8017958:	6c03      	ldr	r3, [r0, #64]	@ 0x40
 801795a:	e7d2      	b.n	8017902 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x7e>
 801795c:	2a09      	cmp	r2, #9
 801795e:	d04e      	beq.n	80179fe <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x17a>
 8017960:	d801      	bhi.n	8017966 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0xe2>
 8017962:	2a08      	cmp	r2, #8
 8017964:	d1a0      	bne.n	80178a8 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x24>
 8017966:	6e03      	ldr	r3, [r0, #96]	@ 0x60
 8017968:	e7cb      	b.n	8017902 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x7e>
 801796a:	2a2f      	cmp	r2, #47	@ 0x2f
 801796c:	d02d      	beq.n	80179ca <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x146>
 801796e:	d811      	bhi.n	8017994 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x110>
 8017970:	2a2d      	cmp	r2, #45	@ 0x2d
 8017972:	d018      	beq.n	80179a6 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x122>
 8017974:	d833      	bhi.n	80179de <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x15a>
 8017976:	2a2c      	cmp	r2, #44	@ 0x2c
 8017978:	d196      	bne.n	80178a8 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x24>
 801797a:	684a      	ldr	r2, [r1, #4]
 801797c:	7813      	ldrb	r3, [r2, #0]
 801797e:	7852      	ldrb	r2, [r2, #1]
 8017980:	2a00      	cmp	r2, #0
 8017982:	d191      	bne.n	80178a8 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x24>
 8017984:	2b01      	cmp	r3, #1
 8017986:	d01e      	beq.n	80179c6 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x142>
 8017988:	2b00      	cmp	r3, #0
 801798a:	d030      	beq.n	80179ee <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x16a>
 801798c:	2b02      	cmp	r3, #2
 801798e:	d18b      	bne.n	80178a8 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x24>
 8017990:	6903      	ldr	r3, [r0, #16]
 8017992:	e7b6      	b.n	8017902 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x7e>
 8017994:	2a31      	cmp	r2, #49	@ 0x31
 8017996:	d004      	beq.n	80179a2 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x11e>
 8017998:	d333      	bcc.n	8017a02 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x17e>
 801799a:	2a32      	cmp	r2, #50	@ 0x32
 801799c:	d031      	beq.n	8017a02 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x17e>
 801799e:	2a33      	cmp	r2, #51	@ 0x33
 80179a0:	d182      	bne.n	80178a8 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x24>
 80179a2:	6f83      	ldr	r3, [r0, #120]	@ 0x78
 80179a4:	e7ad      	b.n	8017902 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x7e>
 80179a6:	684a      	ldr	r2, [r1, #4]
 80179a8:	7813      	ldrb	r3, [r2, #0]
 80179aa:	7852      	ldrb	r2, [r2, #1]
 80179ac:	2a00      	cmp	r2, #0
 80179ae:	f47f af7b 	bne.w	80178a8 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x24>
 80179b2:	2b01      	cmp	r3, #1
 80179b4:	d005      	beq.n	80179c2 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x13e>
 80179b6:	d310      	bcc.n	80179da <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x156>
 80179b8:	2b02      	cmp	r3, #2
 80179ba:	f47f af75 	bne.w	80178a8 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x24>
 80179be:	6983      	ldr	r3, [r0, #24]
 80179c0:	e79f      	b.n	8017902 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x7e>
 80179c2:	6a83      	ldr	r3, [r0, #40]	@ 0x28
 80179c4:	e79d      	b.n	8017902 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x7e>
 80179c6:	6a03      	ldr	r3, [r0, #32]
 80179c8:	e79b      	b.n	8017902 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x7e>
 80179ca:	684b      	ldr	r3, [r1, #4]
 80179cc:	781a      	ldrb	r2, [r3, #0]
 80179ce:	785b      	ldrb	r3, [r3, #1]
 80179d0:	2b00      	cmp	r3, #0
 80179d2:	f47f af69 	bne.w	80178a8 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x24>
 80179d6:	2a00      	cmp	r2, #0
 80179d8:	d193      	bne.n	8017902 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x7e>
 80179da:	6b83      	ldr	r3, [r0, #56]	@ 0x38
 80179dc:	e791      	b.n	8017902 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x7e>
 80179de:	684b      	ldr	r3, [r1, #4]
 80179e0:	781a      	ldrb	r2, [r3, #0]
 80179e2:	785b      	ldrb	r3, [r3, #1]
 80179e4:	2b00      	cmp	r3, #0
 80179e6:	f47f af5f 	bne.w	80178a8 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x24>
 80179ea:	2a00      	cmp	r2, #0
 80179ec:	d189      	bne.n	8017902 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x7e>
 80179ee:	6b03      	ldr	r3, [r0, #48]	@ 0x30
 80179f0:	e787      	b.n	8017902 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x7e>
 80179f2:	6d03      	ldr	r3, [r0, #80]	@ 0x50
 80179f4:	e785      	b.n	8017902 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x7e>
 80179f6:	6d83      	ldr	r3, [r0, #88]	@ 0x58
 80179f8:	e783      	b.n	8017902 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x7e>
 80179fa:	6c83      	ldr	r3, [r0, #72]	@ 0x48
 80179fc:	e781      	b.n	8017902 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x7e>
 80179fe:	6e83      	ldr	r3, [r0, #104]	@ 0x68
 8017a00:	e77f      	b.n	8017902 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x7e>
 8017a02:	6f03      	ldr	r3, [r0, #112]	@ 0x70
 8017a04:	e77d      	b.n	8017902 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x7e>

08017a06 <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff>:
 8017a06:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8017a0a:	b087      	sub	sp, #28
 8017a0c:	9815      	ldr	r0, [sp, #84]	@ 0x54
 8017a0e:	9205      	str	r2, [sp, #20]
 8017a10:	f89d 2064 	ldrb.w	r2, [sp, #100]	@ 0x64
 8017a14:	9202      	str	r2, [sp, #8]
 8017a16:	e9dd 2416 	ldrd	r2, r4, [sp, #88]	@ 0x58
 8017a1a:	9101      	str	r1, [sp, #4]
 8017a1c:	6841      	ldr	r1, [r0, #4]
 8017a1e:	f8dd e060 	ldr.w	lr, [sp, #96]	@ 0x60
 8017a22:	fb01 2404 	mla	r4, r1, r4, r2
 8017a26:	6802      	ldr	r2, [r0, #0]
 8017a28:	eb02 0444 	add.w	r4, r2, r4, lsl #1
 8017a2c:	f8de 2000 	ldr.w	r2, [lr]
 8017a30:	9203      	str	r2, [sp, #12]
 8017a32:	f8de 2004 	ldr.w	r2, [lr, #4]
 8017a36:	3204      	adds	r2, #4
 8017a38:	9204      	str	r2, [sp, #16]
 8017a3a:	9a02      	ldr	r2, [sp, #8]
 8017a3c:	43d6      	mvns	r6, r2
 8017a3e:	b2f6      	uxtb	r6, r6
 8017a40:	9a01      	ldr	r2, [sp, #4]
 8017a42:	2a00      	cmp	r2, #0
 8017a44:	dc03      	bgt.n	8017a4e <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x48>
 8017a46:	9a05      	ldr	r2, [sp, #20]
 8017a48:	2a00      	cmp	r2, #0
 8017a4a:	f340 8129 	ble.w	8017ca0 <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x29a>
 8017a4e:	9a11      	ldr	r2, [sp, #68]	@ 0x44
 8017a50:	f9be c008 	ldrsh.w	ip, [lr, #8]
 8017a54:	f9be 700c 	ldrsh.w	r7, [lr, #12]
 8017a58:	f502 4100 	add.w	r1, r2, #32768	@ 0x8000
 8017a5c:	9a12      	ldr	r2, [sp, #72]	@ 0x48
 8017a5e:	f502 4200 	add.w	r2, r2, #32768	@ 0x8000
 8017a62:	2b00      	cmp	r3, #0
 8017a64:	dd0e      	ble.n	8017a84 <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x7e>
 8017a66:	1408      	asrs	r0, r1, #16
 8017a68:	d405      	bmi.n	8017a76 <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x70>
 8017a6a:	4560      	cmp	r0, ip
 8017a6c:	da03      	bge.n	8017a76 <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x70>
 8017a6e:	1410      	asrs	r0, r2, #16
 8017a70:	d401      	bmi.n	8017a76 <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x70>
 8017a72:	42b8      	cmp	r0, r7
 8017a74:	db07      	blt.n	8017a86 <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x80>
 8017a76:	9813      	ldr	r0, [sp, #76]	@ 0x4c
 8017a78:	4401      	add	r1, r0
 8017a7a:	9814      	ldr	r0, [sp, #80]	@ 0x50
 8017a7c:	3b01      	subs	r3, #1
 8017a7e:	4402      	add	r2, r0
 8017a80:	3402      	adds	r4, #2
 8017a82:	e7ee      	b.n	8017a62 <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x5c>
 8017a84:	d071      	beq.n	8017b6a <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x164>
 8017a86:	9d13      	ldr	r5, [sp, #76]	@ 0x4c
 8017a88:	1e58      	subs	r0, r3, #1
 8017a8a:	fb05 1500 	mla	r5, r5, r0, r1
 8017a8e:	142d      	asrs	r5, r5, #16
 8017a90:	d45f      	bmi.n	8017b52 <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x14c>
 8017a92:	4565      	cmp	r5, ip
 8017a94:	da5d      	bge.n	8017b52 <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x14c>
 8017a96:	9d14      	ldr	r5, [sp, #80]	@ 0x50
 8017a98:	fb05 2000 	mla	r0, r5, r0, r2
 8017a9c:	1400      	asrs	r0, r0, #16
 8017a9e:	d458      	bmi.n	8017b52 <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x14c>
 8017aa0:	42b8      	cmp	r0, r7
 8017aa2:	da56      	bge.n	8017b52 <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x14c>
 8017aa4:	f8bd b008 	ldrh.w	fp, [sp, #8]
 8017aa8:	4699      	mov	r9, r3
 8017aaa:	46a2      	mov	sl, r4
 8017aac:	f1b9 0f00 	cmp.w	r9, #0
 8017ab0:	dd57      	ble.n	8017b62 <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x15c>
 8017ab2:	f9be 7008 	ldrsh.w	r7, [lr, #8]
 8017ab6:	9803      	ldr	r0, [sp, #12]
 8017ab8:	ea4f 4c22 	mov.w	ip, r2, asr #16
 8017abc:	140d      	asrs	r5, r1, #16
 8017abe:	fb07 000c 	mla	r0, r7, ip, r0
 8017ac2:	f109 39ff 	add.w	r9, r9, #4294967295
 8017ac6:	5d40      	ldrb	r0, [r0, r5]
 8017ac8:	9d04      	ldr	r5, [sp, #16]
 8017aca:	f835 0010 	ldrh.w	r0, [r5, r0, lsl #1]
 8017ace:	f8ba 5000 	ldrh.w	r5, [sl]
 8017ad2:	122f      	asrs	r7, r5, #8
 8017ad4:	ea4f 2c20 	mov.w	ip, r0, asr #8
 8017ad8:	f007 07f8 	and.w	r7, r7, #248	@ 0xf8
 8017adc:	fb17 f706 	smulbb	r7, r7, r6
 8017ae0:	ea4f 08e5 	mov.w	r8, r5, asr #3
 8017ae4:	f00c 0cf8 	and.w	ip, ip, #248	@ 0xf8
 8017ae8:	00ed      	lsls	r5, r5, #3
 8017aea:	fb0c 7c0b 	mla	ip, ip, fp, r7
 8017aee:	f008 08fc 	and.w	r8, r8, #252	@ 0xfc
 8017af2:	10c7      	asrs	r7, r0, #3
 8017af4:	b2ed      	uxtb	r5, r5
 8017af6:	00c0      	lsls	r0, r0, #3
 8017af8:	fb18 f806 	smulbb	r8, r8, r6
 8017afc:	fb15 f506 	smulbb	r5, r5, r6
 8017b00:	f007 07fc 	and.w	r7, r7, #252	@ 0xfc
 8017b04:	b2c0      	uxtb	r0, r0
 8017b06:	fa1f fc8c 	uxth.w	ip, ip
 8017b0a:	fb07 870b 	mla	r7, r7, fp, r8
 8017b0e:	fb00 500b 	mla	r0, r0, fp, r5
 8017b12:	b280      	uxth	r0, r0
 8017b14:	b2bf      	uxth	r7, r7
 8017b16:	f10c 0501 	add.w	r5, ip, #1
 8017b1a:	eb05 2c1c 	add.w	ip, r5, ip, lsr #8
 8017b1e:	f107 0801 	add.w	r8, r7, #1
 8017b22:	1c45      	adds	r5, r0, #1
 8017b24:	eb05 2510 	add.w	r5, r5, r0, lsr #8
 8017b28:	eb08 2817 	add.w	r8, r8, r7, lsr #8
 8017b2c:	9813      	ldr	r0, [sp, #76]	@ 0x4c
 8017b2e:	f40c 4c78 	and.w	ip, ip, #63488	@ 0xf800
 8017b32:	f3c5 25c4 	ubfx	r5, r5, #11, #5
 8017b36:	ea4f 1858 	mov.w	r8, r8, lsr #5
 8017b3a:	ea45 0c0c 	orr.w	ip, r5, ip
 8017b3e:	f408 68fc 	and.w	r8, r8, #2016	@ 0x7e0
 8017b42:	4401      	add	r1, r0
 8017b44:	9814      	ldr	r0, [sp, #80]	@ 0x50
 8017b46:	ea4c 0c08 	orr.w	ip, ip, r8
 8017b4a:	f82a cb02 	strh.w	ip, [sl], #2
 8017b4e:	4402      	add	r2, r0
 8017b50:	e7ac      	b.n	8017aac <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xa6>
 8017b52:	f8bd a008 	ldrh.w	sl, [sp, #8]
 8017b56:	f04f 0800 	mov.w	r8, #0
 8017b5a:	eb03 0008 	add.w	r0, r3, r8
 8017b5e:	2800      	cmp	r0, #0
 8017b60:	dc41      	bgt.n	8017be6 <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1e0>
 8017b62:	ea23 73e3 	bic.w	r3, r3, r3, asr #31
 8017b66:	eb04 0443 	add.w	r4, r4, r3, lsl #1
 8017b6a:	9b01      	ldr	r3, [sp, #4]
 8017b6c:	2b00      	cmp	r3, #0
 8017b6e:	f340 8097 	ble.w	8017ca0 <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x29a>
 8017b72:	ee30 0a04 	vadd.f32	s0, s0, s8
 8017b76:	eeb7 7a00 	vmov.f32	s14, #112	@ 0x3f800000  1.0
 8017b7a:	eec7 7a00 	vdiv.f32	s15, s14, s0
 8017b7e:	9b10      	ldr	r3, [sp, #64]	@ 0x40
 8017b80:	ee70 0aa4 	vadd.f32	s1, s1, s9
 8017b84:	ee31 1a05 	vadd.f32	s2, s2, s10
 8017b88:	ee20 7aa7 	vmul.f32	s14, s1, s15
 8017b8c:	eef0 6a62 	vmov.f32	s13, s5
 8017b90:	ee61 7a27 	vmul.f32	s15, s2, s15
 8017b94:	eefe 6ac8 	vcvt.s32.f32	s13, s13, #16
 8017b98:	ee77 2a62 	vsub.f32	s5, s14, s5
 8017b9c:	edcd 6a11 	vstr	s13, [sp, #68]	@ 0x44
 8017ba0:	eefe 2ac8 	vcvt.s32.f32	s5, s5, #16
 8017ba4:	eef0 6a43 	vmov.f32	s13, s6
 8017ba8:	ee37 3ac3 	vsub.f32	s6, s15, s6
 8017bac:	ee12 2a90 	vmov	r2, s5
 8017bb0:	eebe 3ac8 	vcvt.s32.f32	s6, s6, #16
 8017bb4:	fb92 f3f3 	sdiv	r3, r2, r3
 8017bb8:	ee13 2a10 	vmov	r2, s6
 8017bbc:	9313      	str	r3, [sp, #76]	@ 0x4c
 8017bbe:	9b10      	ldr	r3, [sp, #64]	@ 0x40
 8017bc0:	fb92 f3f3 	sdiv	r3, r2, r3
 8017bc4:	9314      	str	r3, [sp, #80]	@ 0x50
 8017bc6:	9b01      	ldr	r3, [sp, #4]
 8017bc8:	9a05      	ldr	r2, [sp, #20]
 8017bca:	eefe 6ac8 	vcvt.s32.f32	s13, s13, #16
 8017bce:	3b01      	subs	r3, #1
 8017bd0:	9301      	str	r3, [sp, #4]
 8017bd2:	edcd 6a12 	vstr	s13, [sp, #72]	@ 0x48
 8017bd6:	9b10      	ldr	r3, [sp, #64]	@ 0x40
 8017bd8:	eeb0 3a67 	vmov.f32	s6, s15
 8017bdc:	bf08      	it	eq
 8017bde:	4613      	moveq	r3, r2
 8017be0:	eef0 2a47 	vmov.f32	s5, s14
 8017be4:	e72c      	b.n	8017a40 <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3a>
 8017be6:	140f      	asrs	r7, r1, #16
 8017be8:	d453      	bmi.n	8017c92 <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x28c>
 8017bea:	f8de 5008 	ldr.w	r5, [lr, #8]
 8017bee:	42bd      	cmp	r5, r7
 8017bf0:	dd4f      	ble.n	8017c92 <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x28c>
 8017bf2:	ea5f 4c22 	movs.w	ip, r2, asr #16
 8017bf6:	d44c      	bmi.n	8017c92 <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x28c>
 8017bf8:	f8de 000c 	ldr.w	r0, [lr, #12]
 8017bfc:	4560      	cmp	r0, ip
 8017bfe:	dd48      	ble.n	8017c92 <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x28c>
 8017c00:	9803      	ldr	r0, [sp, #12]
 8017c02:	b22d      	sxth	r5, r5
 8017c04:	fb0c 0505 	mla	r5, ip, r5, r0
 8017c08:	5de8      	ldrb	r0, [r5, r7]
 8017c0a:	9d04      	ldr	r5, [sp, #16]
 8017c0c:	f835 0010 	ldrh.w	r0, [r5, r0, lsl #1]
 8017c10:	f06f 0501 	mvn.w	r5, #1
 8017c14:	fb05 fb08 	mul.w	fp, r5, r8
 8017c18:	ea4f 2c20 	mov.w	ip, r0, asr #8
 8017c1c:	f834 500b 	ldrh.w	r5, [r4, fp]
 8017c20:	122f      	asrs	r7, r5, #8
 8017c22:	f007 07f8 	and.w	r7, r7, #248	@ 0xf8
 8017c26:	fb17 f706 	smulbb	r7, r7, r6
 8017c2a:	ea4f 09e5 	mov.w	r9, r5, asr #3
 8017c2e:	f00c 0cf8 	and.w	ip, ip, #248	@ 0xf8
 8017c32:	00ed      	lsls	r5, r5, #3
 8017c34:	fb0c 7c0a 	mla	ip, ip, sl, r7
 8017c38:	f009 09fc 	and.w	r9, r9, #252	@ 0xfc
 8017c3c:	10c7      	asrs	r7, r0, #3
 8017c3e:	b2ed      	uxtb	r5, r5
 8017c40:	00c0      	lsls	r0, r0, #3
 8017c42:	fb19 f906 	smulbb	r9, r9, r6
 8017c46:	fb15 f506 	smulbb	r5, r5, r6
 8017c4a:	f007 07fc 	and.w	r7, r7, #252	@ 0xfc
 8017c4e:	b2c0      	uxtb	r0, r0
 8017c50:	fa1f fc8c 	uxth.w	ip, ip
 8017c54:	fb07 970a 	mla	r7, r7, sl, r9
 8017c58:	fb00 500a 	mla	r0, r0, sl, r5
 8017c5c:	b2bf      	uxth	r7, r7
 8017c5e:	b280      	uxth	r0, r0
 8017c60:	f10c 0501 	add.w	r5, ip, #1
 8017c64:	eb05 2c1c 	add.w	ip, r5, ip, lsr #8
 8017c68:	f107 0901 	add.w	r9, r7, #1
 8017c6c:	1c45      	adds	r5, r0, #1
 8017c6e:	eb05 2510 	add.w	r5, r5, r0, lsr #8
 8017c72:	eb09 2917 	add.w	r9, r9, r7, lsr #8
 8017c76:	f40c 4c78 	and.w	ip, ip, #63488	@ 0xf800
 8017c7a:	f3c5 25c4 	ubfx	r5, r5, #11, #5
 8017c7e:	ea4f 1959 	mov.w	r9, r9, lsr #5
 8017c82:	ea45 0c0c 	orr.w	ip, r5, ip
 8017c86:	f409 69fc 	and.w	r9, r9, #2016	@ 0x7e0
 8017c8a:	ea4c 0c09 	orr.w	ip, ip, r9
 8017c8e:	f824 c00b 	strh.w	ip, [r4, fp]
 8017c92:	9813      	ldr	r0, [sp, #76]	@ 0x4c
 8017c94:	4401      	add	r1, r0
 8017c96:	9814      	ldr	r0, [sp, #80]	@ 0x50
 8017c98:	f108 38ff 	add.w	r8, r8, #4294967295
 8017c9c:	4402      	add	r2, r0
 8017c9e:	e75c      	b.n	8017b5a <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x154>
 8017ca0:	b007      	add	sp, #28
 8017ca2:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}

08017ca6 <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff>:
 8017ca6:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8017caa:	b085      	sub	sp, #20
 8017cac:	4693      	mov	fp, r2
 8017cae:	9e13      	ldr	r6, [sp, #76]	@ 0x4c
 8017cb0:	9d16      	ldr	r5, [sp, #88]	@ 0x58
 8017cb2:	6870      	ldr	r0, [r6, #4]
 8017cb4:	9100      	str	r1, [sp, #0]
 8017cb6:	e9dd 2414 	ldrd	r2, r4, [sp, #80]	@ 0x50
 8017cba:	fb00 2404 	mla	r4, r0, r4, r2
 8017cbe:	6832      	ldr	r2, [r6, #0]
 8017cc0:	eb02 0444 	add.w	r4, r2, r4, lsl #1
 8017cc4:	682a      	ldr	r2, [r5, #0]
 8017cc6:	9201      	str	r2, [sp, #4]
 8017cc8:	686a      	ldr	r2, [r5, #4]
 8017cca:	e9dd ec11 	ldrd	lr, ip, [sp, #68]	@ 0x44
 8017cce:	3204      	adds	r2, #4
 8017cd0:	9202      	str	r2, [sp, #8]
 8017cd2:	eef7 6a00 	vmov.f32	s13, #112	@ 0x3f800000  1.0
 8017cd6:	9a00      	ldr	r2, [sp, #0]
 8017cd8:	2a00      	cmp	r2, #0
 8017cda:	dc03      	bgt.n	8017ce4 <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3e>
 8017cdc:	f1bb 0f00 	cmp.w	fp, #0
 8017ce0:	f340 80a0 	ble.w	8017e24 <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x17e>
 8017ce4:	9a0f      	ldr	r2, [sp, #60]	@ 0x3c
 8017ce6:	f9b5 9008 	ldrsh.w	r9, [r5, #8]
 8017cea:	f9b5 800c 	ldrsh.w	r8, [r5, #12]
 8017cee:	f502 4000 	add.w	r0, r2, #32768	@ 0x8000
 8017cf2:	9a10      	ldr	r2, [sp, #64]	@ 0x40
 8017cf4:	f502 4200 	add.w	r2, r2, #32768	@ 0x8000
 8017cf8:	2b00      	cmp	r3, #0
 8017cfa:	dd0c      	ble.n	8017d16 <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x70>
 8017cfc:	1406      	asrs	r6, r0, #16
 8017cfe:	d405      	bmi.n	8017d0c <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x66>
 8017d00:	454e      	cmp	r6, r9
 8017d02:	da03      	bge.n	8017d0c <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x66>
 8017d04:	1416      	asrs	r6, r2, #16
 8017d06:	d401      	bmi.n	8017d0c <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x66>
 8017d08:	4546      	cmp	r6, r8
 8017d0a:	db05      	blt.n	8017d18 <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x72>
 8017d0c:	4470      	add	r0, lr
 8017d0e:	4462      	add	r2, ip
 8017d10:	3b01      	subs	r3, #1
 8017d12:	3402      	adds	r4, #2
 8017d14:	e7f0      	b.n	8017cf8 <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x52>
 8017d16:	d00f      	beq.n	8017d38 <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x92>
 8017d18:	1e5e      	subs	r6, r3, #1
 8017d1a:	fb0e 0706 	mla	r7, lr, r6, r0
 8017d1e:	143f      	asrs	r7, r7, #16
 8017d20:	d541      	bpl.n	8017da6 <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x100>
 8017d22:	eb04 0643 	add.w	r6, r4, r3, lsl #1
 8017d26:	4698      	mov	r8, r3
 8017d28:	9603      	str	r6, [sp, #12]
 8017d2a:	f1b8 0f00 	cmp.w	r8, #0
 8017d2e:	dc59      	bgt.n	8017de4 <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x13e>
 8017d30:	ea23 73e3 	bic.w	r3, r3, r3, asr #31
 8017d34:	eb04 0443 	add.w	r4, r4, r3, lsl #1
 8017d38:	9b00      	ldr	r3, [sp, #0]
 8017d3a:	2b00      	cmp	r3, #0
 8017d3c:	dd72      	ble.n	8017e24 <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x17e>
 8017d3e:	ee30 0a04 	vadd.f32	s0, s0, s8
 8017d42:	ee70 0aa4 	vadd.f32	s1, s1, s9
 8017d46:	eec6 7a80 	vdiv.f32	s15, s13, s0
 8017d4a:	9b0e      	ldr	r3, [sp, #56]	@ 0x38
 8017d4c:	ee31 1a05 	vadd.f32	s2, s2, s10
 8017d50:	ee20 7aa7 	vmul.f32	s14, s1, s15
 8017d54:	eeb0 6a62 	vmov.f32	s12, s5
 8017d58:	ee61 7a27 	vmul.f32	s15, s2, s15
 8017d5c:	eebe 6ac8 	vcvt.s32.f32	s12, s12, #16
 8017d60:	ee77 2a62 	vsub.f32	s5, s14, s5
 8017d64:	ed8d 6a0f 	vstr	s12, [sp, #60]	@ 0x3c
 8017d68:	eefe 2ac8 	vcvt.s32.f32	s5, s5, #16
 8017d6c:	eeb0 6a43 	vmov.f32	s12, s6
 8017d70:	ee37 3ac3 	vsub.f32	s6, s15, s6
 8017d74:	ee12 2a90 	vmov	r2, s5
 8017d78:	eebe 3ac8 	vcvt.s32.f32	s6, s6, #16
 8017d7c:	fb92 fef3 	sdiv	lr, r2, r3
 8017d80:	ee13 2a10 	vmov	r2, s6
 8017d84:	fb92 fcf3 	sdiv	ip, r2, r3
 8017d88:	9b00      	ldr	r3, [sp, #0]
 8017d8a:	eebe 6ac8 	vcvt.s32.f32	s12, s12, #16
 8017d8e:	3b01      	subs	r3, #1
 8017d90:	9300      	str	r3, [sp, #0]
 8017d92:	ed8d 6a10 	vstr	s12, [sp, #64]	@ 0x40
 8017d96:	9b0e      	ldr	r3, [sp, #56]	@ 0x38
 8017d98:	eeb0 3a67 	vmov.f32	s6, s15
 8017d9c:	bf08      	it	eq
 8017d9e:	465b      	moveq	r3, fp
 8017da0:	eef0 2a47 	vmov.f32	s5, s14
 8017da4:	e797      	b.n	8017cd6 <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x30>
 8017da6:	454f      	cmp	r7, r9
 8017da8:	dabb      	bge.n	8017d22 <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x7c>
 8017daa:	fb0c 2606 	mla	r6, ip, r6, r2
 8017dae:	1436      	asrs	r6, r6, #16
 8017db0:	d4b7      	bmi.n	8017d22 <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x7c>
 8017db2:	4546      	cmp	r6, r8
 8017db4:	dab5      	bge.n	8017d22 <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x7c>
 8017db6:	461e      	mov	r6, r3
 8017db8:	46a0      	mov	r8, r4
 8017dba:	2e00      	cmp	r6, #0
 8017dbc:	ddb8      	ble.n	8017d30 <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x8a>
 8017dbe:	f9b5 a008 	ldrsh.w	sl, [r5, #8]
 8017dc2:	9901      	ldr	r1, [sp, #4]
 8017dc4:	1417      	asrs	r7, r2, #16
 8017dc6:	ea4f 4920 	mov.w	r9, r0, asr #16
 8017dca:	fb0a 1707 	mla	r7, sl, r7, r1
 8017dce:	9902      	ldr	r1, [sp, #8]
 8017dd0:	f817 7009 	ldrb.w	r7, [r7, r9]
 8017dd4:	f831 7017 	ldrh.w	r7, [r1, r7, lsl #1]
 8017dd8:	f828 7b02 	strh.w	r7, [r8], #2
 8017ddc:	4470      	add	r0, lr
 8017dde:	4462      	add	r2, ip
 8017de0:	3e01      	subs	r6, #1
 8017de2:	e7ea      	b.n	8017dba <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x114>
 8017de4:	ea5f 4920 	movs.w	r9, r0, asr #16
 8017de8:	d417      	bmi.n	8017e1a <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x174>
 8017dea:	68ae      	ldr	r6, [r5, #8]
 8017dec:	454e      	cmp	r6, r9
 8017dee:	dd14      	ble.n	8017e1a <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x174>
 8017df0:	ea5f 4a22 	movs.w	sl, r2, asr #16
 8017df4:	d411      	bmi.n	8017e1a <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x174>
 8017df6:	68ef      	ldr	r7, [r5, #12]
 8017df8:	4557      	cmp	r7, sl
 8017dfa:	dd0e      	ble.n	8017e1a <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x174>
 8017dfc:	9f01      	ldr	r7, [sp, #4]
 8017dfe:	b236      	sxth	r6, r6
 8017e00:	fb0a 7606 	mla	r6, sl, r6, r7
 8017e04:	9f02      	ldr	r7, [sp, #8]
 8017e06:	f816 6009 	ldrb.w	r6, [r6, r9]
 8017e0a:	f06f 0101 	mvn.w	r1, #1
 8017e0e:	f837 7016 	ldrh.w	r7, [r7, r6, lsl #1]
 8017e12:	fb01 f608 	mul.w	r6, r1, r8
 8017e16:	9903      	ldr	r1, [sp, #12]
 8017e18:	538f      	strh	r7, [r1, r6]
 8017e1a:	4470      	add	r0, lr
 8017e1c:	4462      	add	r2, ip
 8017e1e:	f108 38ff 	add.w	r8, r8, #4294967295
 8017e22:	e782      	b.n	8017d2a <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x84>
 8017e24:	b005      	add	sp, #20
 8017e26:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}

08017e2a <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB888_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff>:
 8017e2a:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8017e2e:	b087      	sub	sp, #28
 8017e30:	9c15      	ldr	r4, [sp, #84]	@ 0x54
 8017e32:	9205      	str	r2, [sp, #20]
 8017e34:	f89d 2064 	ldrb.w	r2, [sp, #100]	@ 0x64
 8017e38:	9203      	str	r2, [sp, #12]
 8017e3a:	e9dd 2016 	ldrd	r2, r0, [sp, #88]	@ 0x58
 8017e3e:	9102      	str	r1, [sp, #8]
 8017e40:	6861      	ldr	r1, [r4, #4]
 8017e42:	f8dd c060 	ldr.w	ip, [sp, #96]	@ 0x60
 8017e46:	fb01 2000 	mla	r0, r1, r0, r2
 8017e4a:	6822      	ldr	r2, [r4, #0]
 8017e4c:	eb02 0240 	add.w	r2, r2, r0, lsl #1
 8017e50:	9200      	str	r2, [sp, #0]
 8017e52:	f8dc 2000 	ldr.w	r2, [ip]
 8017e56:	9204      	str	r2, [sp, #16]
 8017e58:	f8dc 2004 	ldr.w	r2, [ip, #4]
 8017e5c:	3204      	adds	r2, #4
 8017e5e:	9201      	str	r2, [sp, #4]
 8017e60:	9a03      	ldr	r2, [sp, #12]
 8017e62:	43d5      	mvns	r5, r2
 8017e64:	b2ed      	uxtb	r5, r5
 8017e66:	9a02      	ldr	r2, [sp, #8]
 8017e68:	2a00      	cmp	r2, #0
 8017e6a:	dc03      	bgt.n	8017e74 <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB888_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x4a>
 8017e6c:	9a05      	ldr	r2, [sp, #20]
 8017e6e:	2a00      	cmp	r2, #0
 8017e70:	f340 812c 	ble.w	80180cc <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB888_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2a2>
 8017e74:	9a11      	ldr	r2, [sp, #68]	@ 0x44
 8017e76:	f9bc e008 	ldrsh.w	lr, [ip, #8]
 8017e7a:	f9bc 700c 	ldrsh.w	r7, [ip, #12]
 8017e7e:	f502 4100 	add.w	r1, r2, #32768	@ 0x8000
 8017e82:	9a12      	ldr	r2, [sp, #72]	@ 0x48
 8017e84:	f502 4200 	add.w	r2, r2, #32768	@ 0x8000
 8017e88:	2b00      	cmp	r3, #0
 8017e8a:	dd10      	ble.n	8017eae <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB888_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x84>
 8017e8c:	140c      	asrs	r4, r1, #16
 8017e8e:	d405      	bmi.n	8017e9c <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB888_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x72>
 8017e90:	4574      	cmp	r4, lr
 8017e92:	da03      	bge.n	8017e9c <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB888_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x72>
 8017e94:	1414      	asrs	r4, r2, #16
 8017e96:	d401      	bmi.n	8017e9c <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB888_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x72>
 8017e98:	42bc      	cmp	r4, r7
 8017e9a:	db09      	blt.n	8017eb0 <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB888_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x86>
 8017e9c:	9c13      	ldr	r4, [sp, #76]	@ 0x4c
 8017e9e:	9800      	ldr	r0, [sp, #0]
 8017ea0:	4421      	add	r1, r4
 8017ea2:	9c14      	ldr	r4, [sp, #80]	@ 0x50
 8017ea4:	3002      	adds	r0, #2
 8017ea6:	4422      	add	r2, r4
 8017ea8:	3b01      	subs	r3, #1
 8017eaa:	9000      	str	r0, [sp, #0]
 8017eac:	e7ec      	b.n	8017e88 <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB888_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x5e>
 8017eae:	d071      	beq.n	8017f94 <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB888_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x16a>
 8017eb0:	9e13      	ldr	r6, [sp, #76]	@ 0x4c
 8017eb2:	1e5c      	subs	r4, r3, #1
 8017eb4:	fb06 1604 	mla	r6, r6, r4, r1
 8017eb8:	1436      	asrs	r6, r6, #16
 8017eba:	d45d      	bmi.n	8017f78 <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB888_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x14e>
 8017ebc:	4576      	cmp	r6, lr
 8017ebe:	da5b      	bge.n	8017f78 <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB888_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x14e>
 8017ec0:	9e14      	ldr	r6, [sp, #80]	@ 0x50
 8017ec2:	fb06 2404 	mla	r4, r6, r4, r2
 8017ec6:	1424      	asrs	r4, r4, #16
 8017ec8:	d456      	bmi.n	8017f78 <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB888_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x14e>
 8017eca:	42bc      	cmp	r4, r7
 8017ecc:	da54      	bge.n	8017f78 <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB888_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x14e>
 8017ece:	f8dd 9000 	ldr.w	r9, [sp]
 8017ed2:	f8bd a00c 	ldrh.w	sl, [sp, #12]
 8017ed6:	4698      	mov	r8, r3
 8017ed8:	f1b8 0f00 	cmp.w	r8, #0
 8017edc:	dd54      	ble.n	8017f88 <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB888_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x15e>
 8017ede:	f9bc 7008 	ldrsh.w	r7, [ip, #8]
 8017ee2:	9804      	ldr	r0, [sp, #16]
 8017ee4:	1414      	asrs	r4, r2, #16
 8017ee6:	fb07 0404 	mla	r4, r7, r4, r0
 8017eea:	140e      	asrs	r6, r1, #16
 8017eec:	9801      	ldr	r0, [sp, #4]
 8017eee:	f814 e006 	ldrb.w	lr, [r4, r6]
 8017ef2:	f8b9 4000 	ldrh.w	r4, [r9]
 8017ef6:	eb0e 0e4e 	add.w	lr, lr, lr, lsl #1
 8017efa:	eb00 0b0e 	add.w	fp, r0, lr
 8017efe:	1227      	asrs	r7, r4, #8
 8017f00:	f89b 6002 	ldrb.w	r6, [fp, #2]
 8017f04:	f89b b001 	ldrb.w	fp, [fp, #1]
 8017f08:	f810 e00e 	ldrb.w	lr, [r0, lr]
 8017f0c:	9813      	ldr	r0, [sp, #76]	@ 0x4c
 8017f0e:	fb16 f60a 	smulbb	r6, r6, sl
 8017f12:	f007 07f8 	and.w	r7, r7, #248	@ 0xf8
 8017f16:	fb07 6705 	mla	r7, r7, r5, r6
 8017f1a:	10e6      	asrs	r6, r4, #3
 8017f1c:	00e4      	lsls	r4, r4, #3
 8017f1e:	b2e4      	uxtb	r4, r4
 8017f20:	fb1b fb0a 	smulbb	fp, fp, sl
 8017f24:	fb14 f405 	smulbb	r4, r4, r5
 8017f28:	f006 06fc 	and.w	r6, r6, #252	@ 0xfc
 8017f2c:	b2bf      	uxth	r7, r7
 8017f2e:	fb06 b605 	mla	r6, r6, r5, fp
 8017f32:	fb0e 4e0a 	mla	lr, lr, sl, r4
 8017f36:	b2b6      	uxth	r6, r6
 8017f38:	fa1f fe8e 	uxth.w	lr, lr
 8017f3c:	1c7c      	adds	r4, r7, #1
 8017f3e:	eb04 2717 	add.w	r7, r4, r7, lsr #8
 8017f42:	f106 0b01 	add.w	fp, r6, #1
 8017f46:	f10e 0401 	add.w	r4, lr, #1
 8017f4a:	eb04 241e 	add.w	r4, r4, lr, lsr #8
 8017f4e:	eb0b 2b16 	add.w	fp, fp, r6, lsr #8
 8017f52:	f407 4778 	and.w	r7, r7, #63488	@ 0xf800
 8017f56:	f3c4 24c4 	ubfx	r4, r4, #11, #5
 8017f5a:	ea4f 1b5b 	mov.w	fp, fp, lsr #5
 8017f5e:	4327      	orrs	r7, r4
 8017f60:	f40b 6bfc 	and.w	fp, fp, #2016	@ 0x7e0
 8017f64:	4401      	add	r1, r0
 8017f66:	9814      	ldr	r0, [sp, #80]	@ 0x50
 8017f68:	ea47 070b 	orr.w	r7, r7, fp
 8017f6c:	f829 7b02 	strh.w	r7, [r9], #2
 8017f70:	4402      	add	r2, r0
 8017f72:	f108 38ff 	add.w	r8, r8, #4294967295
 8017f76:	e7af      	b.n	8017ed8 <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB888_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xae>
 8017f78:	f8bd 900c 	ldrh.w	r9, [sp, #12]
 8017f7c:	f04f 0e00 	mov.w	lr, #0
 8017f80:	eb03 040e 	add.w	r4, r3, lr
 8017f84:	2c00      	cmp	r4, #0
 8017f86:	dc43      	bgt.n	8018010 <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB888_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1e6>
 8017f88:	9a00      	ldr	r2, [sp, #0]
 8017f8a:	ea23 73e3 	bic.w	r3, r3, r3, asr #31
 8017f8e:	eb02 0343 	add.w	r3, r2, r3, lsl #1
 8017f92:	9300      	str	r3, [sp, #0]
 8017f94:	9b02      	ldr	r3, [sp, #8]
 8017f96:	2b00      	cmp	r3, #0
 8017f98:	f340 8098 	ble.w	80180cc <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB888_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2a2>
 8017f9c:	ee30 0a04 	vadd.f32	s0, s0, s8
 8017fa0:	eeb7 7a00 	vmov.f32	s14, #112	@ 0x3f800000  1.0
 8017fa4:	eec7 7a00 	vdiv.f32	s15, s14, s0
 8017fa8:	9b10      	ldr	r3, [sp, #64]	@ 0x40
 8017faa:	ee70 0aa4 	vadd.f32	s1, s1, s9
 8017fae:	ee31 1a05 	vadd.f32	s2, s2, s10
 8017fb2:	ee20 7aa7 	vmul.f32	s14, s1, s15
 8017fb6:	eef0 6a62 	vmov.f32	s13, s5
 8017fba:	ee61 7a27 	vmul.f32	s15, s2, s15
 8017fbe:	eefe 6ac8 	vcvt.s32.f32	s13, s13, #16
 8017fc2:	ee77 2a62 	vsub.f32	s5, s14, s5
 8017fc6:	edcd 6a11 	vstr	s13, [sp, #68]	@ 0x44
 8017fca:	eefe 2ac8 	vcvt.s32.f32	s5, s5, #16
 8017fce:	eef0 6a43 	vmov.f32	s13, s6
 8017fd2:	ee37 3ac3 	vsub.f32	s6, s15, s6
 8017fd6:	ee12 2a90 	vmov	r2, s5
 8017fda:	eebe 3ac8 	vcvt.s32.f32	s6, s6, #16
 8017fde:	fb92 f3f3 	sdiv	r3, r2, r3
 8017fe2:	ee13 2a10 	vmov	r2, s6
 8017fe6:	9313      	str	r3, [sp, #76]	@ 0x4c
 8017fe8:	9b10      	ldr	r3, [sp, #64]	@ 0x40
 8017fea:	fb92 f3f3 	sdiv	r3, r2, r3
 8017fee:	9314      	str	r3, [sp, #80]	@ 0x50
 8017ff0:	9b02      	ldr	r3, [sp, #8]
 8017ff2:	9a05      	ldr	r2, [sp, #20]
 8017ff4:	eefe 6ac8 	vcvt.s32.f32	s13, s13, #16
 8017ff8:	3b01      	subs	r3, #1
 8017ffa:	9302      	str	r3, [sp, #8]
 8017ffc:	edcd 6a12 	vstr	s13, [sp, #72]	@ 0x48
 8018000:	9b10      	ldr	r3, [sp, #64]	@ 0x40
 8018002:	eeb0 3a67 	vmov.f32	s6, s15
 8018006:	bf08      	it	eq
 8018008:	4613      	moveq	r3, r2
 801800a:	eef0 2a47 	vmov.f32	s5, s14
 801800e:	e72a      	b.n	8017e66 <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB888_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3c>
 8018010:	140f      	asrs	r7, r1, #16
 8018012:	d454      	bmi.n	80180be <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB888_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x294>
 8018014:	f8dc 6008 	ldr.w	r6, [ip, #8]
 8018018:	42be      	cmp	r6, r7
 801801a:	dd50      	ble.n	80180be <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB888_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x294>
 801801c:	ea5f 4822 	movs.w	r8, r2, asr #16
 8018020:	d44d      	bmi.n	80180be <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB888_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x294>
 8018022:	f8dc 400c 	ldr.w	r4, [ip, #12]
 8018026:	4544      	cmp	r4, r8
 8018028:	dd49      	ble.n	80180be <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB888_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x294>
 801802a:	9c04      	ldr	r4, [sp, #16]
 801802c:	b236      	sxth	r6, r6
 801802e:	fb08 4606 	mla	r6, r8, r6, r4
 8018032:	f06f 0001 	mvn.w	r0, #1
 8018036:	f816 8007 	ldrb.w	r8, [r6, r7]
 801803a:	9c01      	ldr	r4, [sp, #4]
 801803c:	fb00 fa0e 	mul.w	sl, r0, lr
 8018040:	eb08 0848 	add.w	r8, r8, r8, lsl #1
 8018044:	9800      	ldr	r0, [sp, #0]
 8018046:	eb04 0b08 	add.w	fp, r4, r8
 801804a:	f830 400a 	ldrh.w	r4, [r0, sl]
 801804e:	f89b 6002 	ldrb.w	r6, [fp, #2]
 8018052:	9801      	ldr	r0, [sp, #4]
 8018054:	f89b b001 	ldrb.w	fp, [fp, #1]
 8018058:	f810 8008 	ldrb.w	r8, [r0, r8]
 801805c:	9800      	ldr	r0, [sp, #0]
 801805e:	1227      	asrs	r7, r4, #8
 8018060:	fb16 f609 	smulbb	r6, r6, r9
 8018064:	f007 07f8 	and.w	r7, r7, #248	@ 0xf8
 8018068:	fb07 6705 	mla	r7, r7, r5, r6
 801806c:	10e6      	asrs	r6, r4, #3
 801806e:	00e4      	lsls	r4, r4, #3
 8018070:	b2e4      	uxtb	r4, r4
 8018072:	fb1b fb09 	smulbb	fp, fp, r9
 8018076:	fb14 f405 	smulbb	r4, r4, r5
 801807a:	f006 06fc 	and.w	r6, r6, #252	@ 0xfc
 801807e:	b2bf      	uxth	r7, r7
 8018080:	fb06 b605 	mla	r6, r6, r5, fp
 8018084:	fb08 4809 	mla	r8, r8, r9, r4
 8018088:	b2b6      	uxth	r6, r6
 801808a:	fa1f f888 	uxth.w	r8, r8
 801808e:	1c7c      	adds	r4, r7, #1
 8018090:	eb04 2717 	add.w	r7, r4, r7, lsr #8
 8018094:	f106 0b01 	add.w	fp, r6, #1
 8018098:	f108 0401 	add.w	r4, r8, #1
 801809c:	eb04 2418 	add.w	r4, r4, r8, lsr #8
 80180a0:	eb0b 2b16 	add.w	fp, fp, r6, lsr #8
 80180a4:	f407 4778 	and.w	r7, r7, #63488	@ 0xf800
 80180a8:	f3c4 24c4 	ubfx	r4, r4, #11, #5
 80180ac:	ea4f 1b5b 	mov.w	fp, fp, lsr #5
 80180b0:	4327      	orrs	r7, r4
 80180b2:	f40b 6bfc 	and.w	fp, fp, #2016	@ 0x7e0
 80180b6:	ea47 070b 	orr.w	r7, r7, fp
 80180ba:	f820 700a 	strh.w	r7, [r0, sl]
 80180be:	9813      	ldr	r0, [sp, #76]	@ 0x4c
 80180c0:	4401      	add	r1, r0
 80180c2:	9814      	ldr	r0, [sp, #80]	@ 0x50
 80180c4:	f10e 3eff 	add.w	lr, lr, #4294967295
 80180c8:	4402      	add	r2, r0
 80180ca:	e759      	b.n	8017f80 <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB888_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x156>
 80180cc:	b007      	add	sp, #28
 80180ce:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
	...

080180d4 <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB888_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff>:
 80180d4:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 80180d8:	b085      	sub	sp, #20
 80180da:	eef7 6a00 	vmov.f32	s13, #112	@ 0x3f800000  1.0
 80180de:	9e13      	ldr	r6, [sp, #76]	@ 0x4c
 80180e0:	9203      	str	r2, [sp, #12]
 80180e2:	e9dd 2414 	ldrd	r2, r4, [sp, #80]	@ 0x50
 80180e6:	6870      	ldr	r0, [r6, #4]
 80180e8:	9d16      	ldr	r5, [sp, #88]	@ 0x58
 80180ea:	f8dd c044 	ldr.w	ip, [sp, #68]	@ 0x44
 80180ee:	686f      	ldr	r7, [r5, #4]
 80180f0:	9101      	str	r1, [sp, #4]
 80180f2:	fb00 2404 	mla	r4, r0, r4, r2
 80180f6:	6832      	ldr	r2, [r6, #0]
 80180f8:	eb02 0444 	add.w	r4, r2, r4, lsl #1
 80180fc:	682a      	ldr	r2, [r5, #0]
 80180fe:	9202      	str	r2, [sp, #8]
 8018100:	3704      	adds	r7, #4
 8018102:	9a01      	ldr	r2, [sp, #4]
 8018104:	2a00      	cmp	r2, #0
 8018106:	dc03      	bgt.n	8018110 <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB888_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3c>
 8018108:	9a03      	ldr	r2, [sp, #12]
 801810a:	2a00      	cmp	r2, #0
 801810c:	f340 80cc 	ble.w	80182a8 <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB888_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1d4>
 8018110:	9a0f      	ldr	r2, [sp, #60]	@ 0x3c
 8018112:	f9b5 9008 	ldrsh.w	r9, [r5, #8]
 8018116:	f9b5 800c 	ldrsh.w	r8, [r5, #12]
 801811a:	f502 4000 	add.w	r0, r2, #32768	@ 0x8000
 801811e:	9a10      	ldr	r2, [sp, #64]	@ 0x40
 8018120:	f502 4200 	add.w	r2, r2, #32768	@ 0x8000
 8018124:	2b00      	cmp	r3, #0
 8018126:	dd0d      	ble.n	8018144 <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB888_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x70>
 8018128:	1406      	asrs	r6, r0, #16
 801812a:	d405      	bmi.n	8018138 <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB888_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x64>
 801812c:	454e      	cmp	r6, r9
 801812e:	da03      	bge.n	8018138 <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB888_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x64>
 8018130:	1416      	asrs	r6, r2, #16
 8018132:	d401      	bmi.n	8018138 <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB888_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x64>
 8018134:	4546      	cmp	r6, r8
 8018136:	db06      	blt.n	8018146 <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB888_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x72>
 8018138:	9e12      	ldr	r6, [sp, #72]	@ 0x48
 801813a:	4460      	add	r0, ip
 801813c:	4432      	add	r2, r6
 801813e:	3b01      	subs	r3, #1
 8018140:	3402      	adds	r4, #2
 8018142:	e7ef      	b.n	8018124 <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB888_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x50>
 8018144:	d00f      	beq.n	8018166 <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB888_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x92>
 8018146:	1e5e      	subs	r6, r3, #1
 8018148:	fb0c 0e06 	mla	lr, ip, r6, r0
 801814c:	ea5f 4e2e 	movs.w	lr, lr, asr #16
 8018150:	d543      	bpl.n	80181da <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB888_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x106>
 8018152:	4698      	mov	r8, r3
 8018154:	eb04 0a43 	add.w	sl, r4, r3, lsl #1
 8018158:	f1b8 0f00 	cmp.w	r8, #0
 801815c:	dc71      	bgt.n	8018242 <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB888_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x16e>
 801815e:	ea23 73e3 	bic.w	r3, r3, r3, asr #31
 8018162:	eb04 0443 	add.w	r4, r4, r3, lsl #1
 8018166:	9b01      	ldr	r3, [sp, #4]
 8018168:	2b00      	cmp	r3, #0
 801816a:	f340 809d 	ble.w	80182a8 <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB888_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1d4>
 801816e:	ee30 0a04 	vadd.f32	s0, s0, s8
 8018172:	ee70 0aa4 	vadd.f32	s1, s1, s9
 8018176:	eec6 7a80 	vdiv.f32	s15, s13, s0
 801817a:	9b0e      	ldr	r3, [sp, #56]	@ 0x38
 801817c:	ee31 1a05 	vadd.f32	s2, s2, s10
 8018180:	ee20 7aa7 	vmul.f32	s14, s1, s15
 8018184:	eeb0 6a62 	vmov.f32	s12, s5
 8018188:	ee61 7a27 	vmul.f32	s15, s2, s15
 801818c:	eebe 6ac8 	vcvt.s32.f32	s12, s12, #16
 8018190:	ee77 2a62 	vsub.f32	s5, s14, s5
 8018194:	ed8d 6a0f 	vstr	s12, [sp, #60]	@ 0x3c
 8018198:	eefe 2ac8 	vcvt.s32.f32	s5, s5, #16
 801819c:	eeb0 6a43 	vmov.f32	s12, s6
 80181a0:	ee37 3ac3 	vsub.f32	s6, s15, s6
 80181a4:	ee12 2a90 	vmov	r2, s5
 80181a8:	eebe 3ac8 	vcvt.s32.f32	s6, s6, #16
 80181ac:	fb92 fcf3 	sdiv	ip, r2, r3
 80181b0:	ee13 2a10 	vmov	r2, s6
 80181b4:	fb92 f3f3 	sdiv	r3, r2, r3
 80181b8:	9312      	str	r3, [sp, #72]	@ 0x48
 80181ba:	9b01      	ldr	r3, [sp, #4]
 80181bc:	9a03      	ldr	r2, [sp, #12]
 80181be:	eebe 6ac8 	vcvt.s32.f32	s12, s12, #16
 80181c2:	3b01      	subs	r3, #1
 80181c4:	9301      	str	r3, [sp, #4]
 80181c6:	ed8d 6a10 	vstr	s12, [sp, #64]	@ 0x40
 80181ca:	9b0e      	ldr	r3, [sp, #56]	@ 0x38
 80181cc:	eeb0 3a67 	vmov.f32	s6, s15
 80181d0:	bf08      	it	eq
 80181d2:	4613      	moveq	r3, r2
 80181d4:	eef0 2a47 	vmov.f32	s5, s14
 80181d8:	e793      	b.n	8018102 <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB888_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2e>
 80181da:	45ce      	cmp	lr, r9
 80181dc:	dab9      	bge.n	8018152 <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB888_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x7e>
 80181de:	9912      	ldr	r1, [sp, #72]	@ 0x48
 80181e0:	fb01 2606 	mla	r6, r1, r6, r2
 80181e4:	1436      	asrs	r6, r6, #16
 80181e6:	d4b4      	bmi.n	8018152 <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB888_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x7e>
 80181e8:	4546      	cmp	r6, r8
 80181ea:	dab2      	bge.n	8018152 <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB888_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x7e>
 80181ec:	4698      	mov	r8, r3
 80181ee:	46a2      	mov	sl, r4
 80181f0:	f1b8 0f00 	cmp.w	r8, #0
 80181f4:	ddb3      	ble.n	801815e <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB888_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x8a>
 80181f6:	f9b5 9008 	ldrsh.w	r9, [r5, #8]
 80181fa:	9902      	ldr	r1, [sp, #8]
 80181fc:	1416      	asrs	r6, r2, #16
 80181fe:	fb09 1606 	mla	r6, r9, r6, r1
 8018202:	ea4f 4e20 	mov.w	lr, r0, asr #16
 8018206:	492a      	ldr	r1, [pc, #168]	@ (80182b0 <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB888_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1dc>)
 8018208:	f816 e00e 	ldrb.w	lr, [r6, lr]
 801820c:	eb0e 0e4e 	add.w	lr, lr, lr, lsl #1
 8018210:	eb07 0b0e 	add.w	fp, r7, lr
 8018214:	4460      	add	r0, ip
 8018216:	f89b 6001 	ldrb.w	r6, [fp, #1]
 801821a:	f89b 9002 	ldrb.w	r9, [fp, #2]
 801821e:	00f6      	lsls	r6, r6, #3
 8018220:	ea01 2909 	and.w	r9, r1, r9, lsl #8
 8018224:	f406 66fc 	and.w	r6, r6, #2016	@ 0x7e0
 8018228:	ea49 0606 	orr.w	r6, r9, r6
 801822c:	f817 900e 	ldrb.w	r9, [r7, lr]
 8018230:	9912      	ldr	r1, [sp, #72]	@ 0x48
 8018232:	ea46 06d9 	orr.w	r6, r6, r9, lsr #3
 8018236:	f82a 6b02 	strh.w	r6, [sl], #2
 801823a:	440a      	add	r2, r1
 801823c:	f108 38ff 	add.w	r8, r8, #4294967295
 8018240:	e7d6      	b.n	80181f0 <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB888_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x11c>
 8018242:	ea5f 4920 	movs.w	r9, r0, asr #16
 8018246:	d429      	bmi.n	801829c <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB888_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1c8>
 8018248:	68ae      	ldr	r6, [r5, #8]
 801824a:	454e      	cmp	r6, r9
 801824c:	dd26      	ble.n	801829c <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB888_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1c8>
 801824e:	ea5f 4b22 	movs.w	fp, r2, asr #16
 8018252:	d423      	bmi.n	801829c <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB888_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1c8>
 8018254:	68e9      	ldr	r1, [r5, #12]
 8018256:	4559      	cmp	r1, fp
 8018258:	dd20      	ble.n	801829c <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB888_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1c8>
 801825a:	9902      	ldr	r1, [sp, #8]
 801825c:	fa0f fe86 	sxth.w	lr, r6
 8018260:	fb0b 1e0e 	mla	lr, fp, lr, r1
 8018264:	f06f 0101 	mvn.w	r1, #1
 8018268:	f81e e009 	ldrb.w	lr, [lr, r9]
 801826c:	eb0e 0e4e 	add.w	lr, lr, lr, lsl #1
 8018270:	eb07 060e 	add.w	r6, r7, lr
 8018274:	fb01 f908 	mul.w	r9, r1, r8
 8018278:	f896 b002 	ldrb.w	fp, [r6, #2]
 801827c:	7876      	ldrb	r6, [r6, #1]
 801827e:	f2a1 71fe 	subw	r1, r1, #2046	@ 0x7fe
 8018282:	00f6      	lsls	r6, r6, #3
 8018284:	ea01 2b0b 	and.w	fp, r1, fp, lsl #8
 8018288:	f406 66fc 	and.w	r6, r6, #2016	@ 0x7e0
 801828c:	ea4b 0606 	orr.w	r6, fp, r6
 8018290:	f817 b00e 	ldrb.w	fp, [r7, lr]
 8018294:	ea46 06db 	orr.w	r6, r6, fp, lsr #3
 8018298:	f82a 6009 	strh.w	r6, [sl, r9]
 801829c:	9912      	ldr	r1, [sp, #72]	@ 0x48
 801829e:	4460      	add	r0, ip
 80182a0:	440a      	add	r2, r1
 80182a2:	f108 38ff 	add.w	r8, r8, #4294967295
 80182a6:	e757      	b.n	8018158 <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB888_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x84>
 80182a8:	b005      	add	sp, #20
 80182aa:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 80182ae:	bf00      	nop
 80182b0:	fffff800 	.word	0xfffff800

080182b4 <_ZN8touchgfx8LCD16bpp54TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff>:
 80182b4:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 80182b8:	b087      	sub	sp, #28
 80182ba:	468b      	mov	fp, r1
 80182bc:	9815      	ldr	r0, [sp, #84]	@ 0x54
 80182be:	9204      	str	r2, [sp, #16]
 80182c0:	f89d 2064 	ldrb.w	r2, [sp, #100]	@ 0x64
 80182c4:	9205      	str	r2, [sp, #20]
 80182c6:	e9dd 2416 	ldrd	r2, r4, [sp, #88]	@ 0x58
 80182ca:	6841      	ldr	r1, [r0, #4]
 80182cc:	f8dd c060 	ldr.w	ip, [sp, #96]	@ 0x60
 80182d0:	fb01 2404 	mla	r4, r1, r4, r2
 80182d4:	6802      	ldr	r2, [r0, #0]
 80182d6:	eb02 0444 	add.w	r4, r2, r4, lsl #1
 80182da:	f8dc 2000 	ldr.w	r2, [ip]
 80182de:	9201      	str	r2, [sp, #4]
 80182e0:	f8dc 2004 	ldr.w	r2, [ip, #4]
 80182e4:	3204      	adds	r2, #4
 80182e6:	9202      	str	r2, [sp, #8]
 80182e8:	eef7 6a00 	vmov.f32	s13, #112	@ 0x3f800000  1.0
 80182ec:	f1bb 0f00 	cmp.w	fp, #0
 80182f0:	dc03      	bgt.n	80182fa <_ZN8touchgfx8LCD16bpp54TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x46>
 80182f2:	9a04      	ldr	r2, [sp, #16]
 80182f4:	2a00      	cmp	r2, #0
 80182f6:	f340 8138 	ble.w	801856a <_ZN8touchgfx8LCD16bpp54TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2b6>
 80182fa:	9a11      	ldr	r2, [sp, #68]	@ 0x44
 80182fc:	f9bc 7008 	ldrsh.w	r7, [ip, #8]
 8018300:	f9bc 600c 	ldrsh.w	r6, [ip, #12]
 8018304:	f502 4000 	add.w	r0, r2, #32768	@ 0x8000
 8018308:	9a12      	ldr	r2, [sp, #72]	@ 0x48
 801830a:	f502 4100 	add.w	r1, r2, #32768	@ 0x8000
 801830e:	2b00      	cmp	r3, #0
 8018310:	dd0e      	ble.n	8018330 <_ZN8touchgfx8LCD16bpp54TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x7c>
 8018312:	1402      	asrs	r2, r0, #16
 8018314:	d405      	bmi.n	8018322 <_ZN8touchgfx8LCD16bpp54TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x6e>
 8018316:	42ba      	cmp	r2, r7
 8018318:	da03      	bge.n	8018322 <_ZN8touchgfx8LCD16bpp54TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x6e>
 801831a:	140a      	asrs	r2, r1, #16
 801831c:	d401      	bmi.n	8018322 <_ZN8touchgfx8LCD16bpp54TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x6e>
 801831e:	42b2      	cmp	r2, r6
 8018320:	db07      	blt.n	8018332 <_ZN8touchgfx8LCD16bpp54TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x7e>
 8018322:	9a13      	ldr	r2, [sp, #76]	@ 0x4c
 8018324:	4410      	add	r0, r2
 8018326:	9a14      	ldr	r2, [sp, #80]	@ 0x50
 8018328:	3b01      	subs	r3, #1
 801832a:	4411      	add	r1, r2
 801832c:	3402      	adds	r4, #2
 801832e:	e7ee      	b.n	801830e <_ZN8touchgfx8LCD16bpp54TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x5a>
 8018330:	d019      	beq.n	8018366 <_ZN8touchgfx8LCD16bpp54TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xb2>
 8018332:	9d13      	ldr	r5, [sp, #76]	@ 0x4c
 8018334:	1e5a      	subs	r2, r3, #1
 8018336:	fb05 0502 	mla	r5, r5, r2, r0
 801833a:	142d      	asrs	r5, r5, #16
 801833c:	d409      	bmi.n	8018352 <_ZN8touchgfx8LCD16bpp54TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x9e>
 801833e:	42bd      	cmp	r5, r7
 8018340:	da07      	bge.n	8018352 <_ZN8touchgfx8LCD16bpp54TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x9e>
 8018342:	9d14      	ldr	r5, [sp, #80]	@ 0x50
 8018344:	fb05 1202 	mla	r2, r5, r2, r1
 8018348:	1412      	asrs	r2, r2, #16
 801834a:	d402      	bmi.n	8018352 <_ZN8touchgfx8LCD16bpp54TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x9e>
 801834c:	42b2      	cmp	r2, r6
 801834e:	f2c0 80ac 	blt.w	80184aa <_ZN8touchgfx8LCD16bpp54TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1f6>
 8018352:	f04f 0e00 	mov.w	lr, #0
 8018356:	eb03 020e 	add.w	r2, r3, lr
 801835a:	2a00      	cmp	r2, #0
 801835c:	dc3e      	bgt.n	80183dc <_ZN8touchgfx8LCD16bpp54TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x128>
 801835e:	ea23 73e3 	bic.w	r3, r3, r3, asr #31
 8018362:	eb04 0443 	add.w	r4, r4, r3, lsl #1
 8018366:	f1bb 0f00 	cmp.w	fp, #0
 801836a:	f340 80fe 	ble.w	801856a <_ZN8touchgfx8LCD16bpp54TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2b6>
 801836e:	ee30 0a04 	vadd.f32	s0, s0, s8
 8018372:	ee70 0aa4 	vadd.f32	s1, s1, s9
 8018376:	eec6 7a80 	vdiv.f32	s15, s13, s0
 801837a:	9b10      	ldr	r3, [sp, #64]	@ 0x40
 801837c:	f1bb 0b01 	subs.w	fp, fp, #1
 8018380:	ee31 1a05 	vadd.f32	s2, s2, s10
 8018384:	ee20 7aa7 	vmul.f32	s14, s1, s15
 8018388:	eeb0 6a62 	vmov.f32	s12, s5
 801838c:	ee61 7a27 	vmul.f32	s15, s2, s15
 8018390:	eebe 6ac8 	vcvt.s32.f32	s12, s12, #16
 8018394:	ee77 2a62 	vsub.f32	s5, s14, s5
 8018398:	ed8d 6a11 	vstr	s12, [sp, #68]	@ 0x44
 801839c:	eefe 2ac8 	vcvt.s32.f32	s5, s5, #16
 80183a0:	eeb0 6a43 	vmov.f32	s12, s6
 80183a4:	ee37 3ac3 	vsub.f32	s6, s15, s6
 80183a8:	ee12 2a90 	vmov	r2, s5
 80183ac:	eebe 3ac8 	vcvt.s32.f32	s6, s6, #16
 80183b0:	fb92 f3f3 	sdiv	r3, r2, r3
 80183b4:	ee13 2a10 	vmov	r2, s6
 80183b8:	eebe 6ac8 	vcvt.s32.f32	s12, s12, #16
 80183bc:	9313      	str	r3, [sp, #76]	@ 0x4c
 80183be:	9b10      	ldr	r3, [sp, #64]	@ 0x40
 80183c0:	fb92 f3f3 	sdiv	r3, r2, r3
 80183c4:	9a04      	ldr	r2, [sp, #16]
 80183c6:	9314      	str	r3, [sp, #80]	@ 0x50
 80183c8:	ed8d 6a12 	vstr	s12, [sp, #72]	@ 0x48
 80183cc:	9b10      	ldr	r3, [sp, #64]	@ 0x40
 80183ce:	eeb0 3a67 	vmov.f32	s6, s15
 80183d2:	bf08      	it	eq
 80183d4:	4613      	moveq	r3, r2
 80183d6:	eef0 2a47 	vmov.f32	s5, s14
 80183da:	e787      	b.n	80182ec <_ZN8touchgfx8LCD16bpp54TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x38>
 80183dc:	1406      	asrs	r6, r0, #16
 80183de:	d45d      	bmi.n	801849c <_ZN8touchgfx8LCD16bpp54TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1e8>
 80183e0:	f8dc 5008 	ldr.w	r5, [ip, #8]
 80183e4:	42b5      	cmp	r5, r6
 80183e6:	dd59      	ble.n	801849c <_ZN8touchgfx8LCD16bpp54TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1e8>
 80183e8:	140f      	asrs	r7, r1, #16
 80183ea:	d457      	bmi.n	801849c <_ZN8touchgfx8LCD16bpp54TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1e8>
 80183ec:	f8dc 200c 	ldr.w	r2, [ip, #12]
 80183f0:	42ba      	cmp	r2, r7
 80183f2:	dd53      	ble.n	801849c <_ZN8touchgfx8LCD16bpp54TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1e8>
 80183f4:	9a01      	ldr	r2, [sp, #4]
 80183f6:	b22d      	sxth	r5, r5
 80183f8:	fb07 2505 	mla	r5, r7, r5, r2
 80183fc:	5daa      	ldrb	r2, [r5, r6]
 80183fe:	9d02      	ldr	r5, [sp, #8]
 8018400:	f855 5022 	ldr.w	r5, [r5, r2, lsl #2]
 8018404:	0e2e      	lsrs	r6, r5, #24
 8018406:	d049      	beq.n	801849c <_ZN8touchgfx8LCD16bpp54TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1e8>
 8018408:	f06f 0201 	mvn.w	r2, #1
 801840c:	fb02 f20e 	mul.w	r2, r2, lr
 8018410:	9203      	str	r2, [sp, #12]
 8018412:	f834 8002 	ldrh.w	r8, [r4, r2]
 8018416:	9a05      	ldr	r2, [sp, #20]
 8018418:	4356      	muls	r6, r2
 801841a:	1c72      	adds	r2, r6, #1
 801841c:	eb02 2226 	add.w	r2, r2, r6, asr #8
 8018420:	1212      	asrs	r2, r2, #8
 8018422:	fa1f f982 	uxth.w	r9, r2
 8018426:	ea4f 2728 	mov.w	r7, r8, asr #8
 801842a:	f3c5 4607 	ubfx	r6, r5, #16, #8
 801842e:	43d2      	mvns	r2, r2
 8018430:	b2d2      	uxtb	r2, r2
 8018432:	fb16 f609 	smulbb	r6, r6, r9
 8018436:	f007 07f8 	and.w	r7, r7, #248	@ 0xf8
 801843a:	fb07 6702 	mla	r7, r7, r2, r6
 801843e:	f3c5 2a07 	ubfx	sl, r5, #8, #8
 8018442:	ea4f 06e8 	mov.w	r6, r8, asr #3
 8018446:	b2ed      	uxtb	r5, r5
 8018448:	ea4f 08c8 	mov.w	r8, r8, lsl #3
 801844c:	fa5f f888 	uxtb.w	r8, r8
 8018450:	fb15 f509 	smulbb	r5, r5, r9
 8018454:	fb08 5502 	mla	r5, r8, r2, r5
 8018458:	b2bf      	uxth	r7, r7
 801845a:	fb1a fa09 	smulbb	sl, sl, r9
 801845e:	b2ad      	uxth	r5, r5
 8018460:	f006 06fc 	and.w	r6, r6, #252	@ 0xfc
 8018464:	fb06 a602 	mla	r6, r6, r2, sl
 8018468:	1c7a      	adds	r2, r7, #1
 801846a:	f105 0a01 	add.w	sl, r5, #1
 801846e:	eb02 2717 	add.w	r7, r2, r7, lsr #8
 8018472:	eb0a 2a15 	add.w	sl, sl, r5, lsr #8
 8018476:	b2b6      	uxth	r6, r6
 8018478:	f3ca 2ac4 	ubfx	sl, sl, #11, #5
 801847c:	f407 4778 	and.w	r7, r7, #63488	@ 0xf800
 8018480:	ea4a 0707 	orr.w	r7, sl, r7
 8018484:	f106 0a01 	add.w	sl, r6, #1
 8018488:	eb0a 2a16 	add.w	sl, sl, r6, lsr #8
 801848c:	ea4f 1a5a 	mov.w	sl, sl, lsr #5
 8018490:	f40a 6afc 	and.w	sl, sl, #2016	@ 0x7e0
 8018494:	9a03      	ldr	r2, [sp, #12]
 8018496:	ea47 070a 	orr.w	r7, r7, sl
 801849a:	52a7      	strh	r7, [r4, r2]
 801849c:	9a13      	ldr	r2, [sp, #76]	@ 0x4c
 801849e:	4410      	add	r0, r2
 80184a0:	9a14      	ldr	r2, [sp, #80]	@ 0x50
 80184a2:	f10e 3eff 	add.w	lr, lr, #4294967295
 80184a6:	4411      	add	r1, r2
 80184a8:	e755      	b.n	8018356 <_ZN8touchgfx8LCD16bpp54TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xa2>
 80184aa:	f04f 0800 	mov.w	r8, #0
 80184ae:	eba3 0208 	sub.w	r2, r3, r8
 80184b2:	2a00      	cmp	r2, #0
 80184b4:	f77f af53 	ble.w	801835e <_ZN8touchgfx8LCD16bpp54TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xaa>
 80184b8:	f9bc 6008 	ldrsh.w	r6, [ip, #8]
 80184bc:	9f01      	ldr	r7, [sp, #4]
 80184be:	140a      	asrs	r2, r1, #16
 80184c0:	1405      	asrs	r5, r0, #16
 80184c2:	fb06 7202 	mla	r2, r6, r2, r7
 80184c6:	5d52      	ldrb	r2, [r2, r5]
 80184c8:	9d02      	ldr	r5, [sp, #8]
 80184ca:	f855 5022 	ldr.w	r5, [r5, r2, lsl #2]
 80184ce:	0e2e      	lsrs	r6, r5, #24
 80184d0:	d044      	beq.n	801855c <_ZN8touchgfx8LCD16bpp54TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2a8>
 80184d2:	9a05      	ldr	r2, [sp, #20]
 80184d4:	f834 e018 	ldrh.w	lr, [r4, r8, lsl #1]
 80184d8:	4356      	muls	r6, r2
 80184da:	1c72      	adds	r2, r6, #1
 80184dc:	eb02 2226 	add.w	r2, r2, r6, asr #8
 80184e0:	1212      	asrs	r2, r2, #8
 80184e2:	fa1f f982 	uxth.w	r9, r2
 80184e6:	ea4f 272e 	mov.w	r7, lr, asr #8
 80184ea:	f3c5 4607 	ubfx	r6, r5, #16, #8
 80184ee:	43d2      	mvns	r2, r2
 80184f0:	b2d2      	uxtb	r2, r2
 80184f2:	fb16 f609 	smulbb	r6, r6, r9
 80184f6:	f007 07f8 	and.w	r7, r7, #248	@ 0xf8
 80184fa:	fb07 6702 	mla	r7, r7, r2, r6
 80184fe:	f3c5 2a07 	ubfx	sl, r5, #8, #8
 8018502:	ea4f 06ee 	mov.w	r6, lr, asr #3
 8018506:	b2ed      	uxtb	r5, r5
 8018508:	ea4f 0ece 	mov.w	lr, lr, lsl #3
 801850c:	fa5f fe8e 	uxtb.w	lr, lr
 8018510:	fb15 f509 	smulbb	r5, r5, r9
 8018514:	fb0e 5502 	mla	r5, lr, r2, r5
 8018518:	b2bf      	uxth	r7, r7
 801851a:	fb1a fa09 	smulbb	sl, sl, r9
 801851e:	b2ad      	uxth	r5, r5
 8018520:	f006 06fc 	and.w	r6, r6, #252	@ 0xfc
 8018524:	fb06 a602 	mla	r6, r6, r2, sl
 8018528:	1c7a      	adds	r2, r7, #1
 801852a:	f105 0a01 	add.w	sl, r5, #1
 801852e:	eb02 2717 	add.w	r7, r2, r7, lsr #8
 8018532:	eb0a 2a15 	add.w	sl, sl, r5, lsr #8
 8018536:	b2b6      	uxth	r6, r6
 8018538:	f3ca 2ac4 	ubfx	sl, sl, #11, #5
 801853c:	f407 4778 	and.w	r7, r7, #63488	@ 0xf800
 8018540:	ea4a 0707 	orr.w	r7, sl, r7
 8018544:	f106 0a01 	add.w	sl, r6, #1
 8018548:	eb0a 2a16 	add.w	sl, sl, r6, lsr #8
 801854c:	ea4f 1a5a 	mov.w	sl, sl, lsr #5
 8018550:	f40a 6afc 	and.w	sl, sl, #2016	@ 0x7e0
 8018554:	ea47 070a 	orr.w	r7, r7, sl
 8018558:	f824 7018 	strh.w	r7, [r4, r8, lsl #1]
 801855c:	9a13      	ldr	r2, [sp, #76]	@ 0x4c
 801855e:	4410      	add	r0, r2
 8018560:	9a14      	ldr	r2, [sp, #80]	@ 0x50
 8018562:	f108 0801 	add.w	r8, r8, #1
 8018566:	4411      	add	r1, r2
 8018568:	e7a1      	b.n	80184ae <_ZN8touchgfx8LCD16bpp54TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1fa>
 801856a:	b007      	add	sp, #28
 801856c:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}

08018570 <_ZN8touchgfx8LCD16bpp56TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff>:
 8018570:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8018574:	b085      	sub	sp, #20
 8018576:	468b      	mov	fp, r1
 8018578:	9813      	ldr	r0, [sp, #76]	@ 0x4c
 801857a:	9203      	str	r2, [sp, #12]
 801857c:	e9dd 2414 	ldrd	r2, r4, [sp, #80]	@ 0x50
 8018580:	6841      	ldr	r1, [r0, #4]
 8018582:	f8dd e058 	ldr.w	lr, [sp, #88]	@ 0x58
 8018586:	fb01 2404 	mla	r4, r1, r4, r2
 801858a:	6802      	ldr	r2, [r0, #0]
 801858c:	eb02 0444 	add.w	r4, r2, r4, lsl #1
 8018590:	f8de 2000 	ldr.w	r2, [lr]
 8018594:	9200      	str	r2, [sp, #0]
 8018596:	f8de 2004 	ldr.w	r2, [lr, #4]
 801859a:	3204      	adds	r2, #4
 801859c:	9201      	str	r2, [sp, #4]
 801859e:	eef7 6a00 	vmov.f32	s13, #112	@ 0x3f800000  1.0
 80185a2:	f1bb 0f00 	cmp.w	fp, #0
 80185a6:	dc03      	bgt.n	80185b0 <_ZN8touchgfx8LCD16bpp56TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x40>
 80185a8:	9a03      	ldr	r2, [sp, #12]
 80185aa:	2a00      	cmp	r2, #0
 80185ac:	f340 8153 	ble.w	8018856 <_ZN8touchgfx8LCD16bpp56TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2e6>
 80185b0:	9a0f      	ldr	r2, [sp, #60]	@ 0x3c
 80185b2:	f9be 7008 	ldrsh.w	r7, [lr, #8]
 80185b6:	f9be 600c 	ldrsh.w	r6, [lr, #12]
 80185ba:	f502 4100 	add.w	r1, r2, #32768	@ 0x8000
 80185be:	9a10      	ldr	r2, [sp, #64]	@ 0x40
 80185c0:	f502 4200 	add.w	r2, r2, #32768	@ 0x8000
 80185c4:	2b00      	cmp	r3, #0
 80185c6:	dd0e      	ble.n	80185e6 <_ZN8touchgfx8LCD16bpp56TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x76>
 80185c8:	1408      	asrs	r0, r1, #16
 80185ca:	d405      	bmi.n	80185d8 <_ZN8touchgfx8LCD16bpp56TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x68>
 80185cc:	42b8      	cmp	r0, r7
 80185ce:	da03      	bge.n	80185d8 <_ZN8touchgfx8LCD16bpp56TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x68>
 80185d0:	1410      	asrs	r0, r2, #16
 80185d2:	d401      	bmi.n	80185d8 <_ZN8touchgfx8LCD16bpp56TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x68>
 80185d4:	42b0      	cmp	r0, r6
 80185d6:	db07      	blt.n	80185e8 <_ZN8touchgfx8LCD16bpp56TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x78>
 80185d8:	9811      	ldr	r0, [sp, #68]	@ 0x44
 80185da:	4401      	add	r1, r0
 80185dc:	9812      	ldr	r0, [sp, #72]	@ 0x48
 80185de:	3b01      	subs	r3, #1
 80185e0:	4402      	add	r2, r0
 80185e2:	3402      	adds	r4, #2
 80185e4:	e7ee      	b.n	80185c4 <_ZN8touchgfx8LCD16bpp56TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x54>
 80185e6:	d017      	beq.n	8018618 <_ZN8touchgfx8LCD16bpp56TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xa8>
 80185e8:	9d11      	ldr	r5, [sp, #68]	@ 0x44
 80185ea:	1e58      	subs	r0, r3, #1
 80185ec:	fb05 1500 	mla	r5, r5, r0, r1
 80185f0:	142d      	asrs	r5, r5, #16
 80185f2:	d409      	bmi.n	8018608 <_ZN8touchgfx8LCD16bpp56TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x98>
 80185f4:	42bd      	cmp	r5, r7
 80185f6:	da07      	bge.n	8018608 <_ZN8touchgfx8LCD16bpp56TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x98>
 80185f8:	9d12      	ldr	r5, [sp, #72]	@ 0x48
 80185fa:	fb05 2000 	mla	r0, r5, r0, r2
 80185fe:	1400      	asrs	r0, r0, #16
 8018600:	d402      	bmi.n	8018608 <_ZN8touchgfx8LCD16bpp56TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x98>
 8018602:	42b0      	cmp	r0, r6
 8018604:	f2c0 80bc 	blt.w	8018780 <_ZN8touchgfx8LCD16bpp56TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x210>
 8018608:	2600      	movs	r6, #0
 801860a:	1998      	adds	r0, r3, r6
 801860c:	2800      	cmp	r0, #0
 801860e:	dc3e      	bgt.n	801868e <_ZN8touchgfx8LCD16bpp56TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x11e>
 8018610:	ea23 73e3 	bic.w	r3, r3, r3, asr #31
 8018614:	eb04 0443 	add.w	r4, r4, r3, lsl #1
 8018618:	f1bb 0f00 	cmp.w	fp, #0
 801861c:	f340 811b 	ble.w	8018856 <_ZN8touchgfx8LCD16bpp56TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2e6>
 8018620:	ee30 0a04 	vadd.f32	s0, s0, s8
 8018624:	ee70 0aa4 	vadd.f32	s1, s1, s9
 8018628:	eec6 7a80 	vdiv.f32	s15, s13, s0
 801862c:	9b0e      	ldr	r3, [sp, #56]	@ 0x38
 801862e:	f1bb 0b01 	subs.w	fp, fp, #1
 8018632:	ee31 1a05 	vadd.f32	s2, s2, s10
 8018636:	ee20 7aa7 	vmul.f32	s14, s1, s15
 801863a:	eeb0 6a62 	vmov.f32	s12, s5
 801863e:	ee61 7a27 	vmul.f32	s15, s2, s15
 8018642:	eebe 6ac8 	vcvt.s32.f32	s12, s12, #16
 8018646:	ee77 2a62 	vsub.f32	s5, s14, s5
 801864a:	ed8d 6a0f 	vstr	s12, [sp, #60]	@ 0x3c
 801864e:	eefe 2ac8 	vcvt.s32.f32	s5, s5, #16
 8018652:	eeb0 6a43 	vmov.f32	s12, s6
 8018656:	ee37 3ac3 	vsub.f32	s6, s15, s6
 801865a:	ee12 2a90 	vmov	r2, s5
 801865e:	eebe 3ac8 	vcvt.s32.f32	s6, s6, #16
 8018662:	fb92 f3f3 	sdiv	r3, r2, r3
 8018666:	ee13 2a10 	vmov	r2, s6
 801866a:	eebe 6ac8 	vcvt.s32.f32	s12, s12, #16
 801866e:	9311      	str	r3, [sp, #68]	@ 0x44
 8018670:	9b0e      	ldr	r3, [sp, #56]	@ 0x38
 8018672:	fb92 f3f3 	sdiv	r3, r2, r3
 8018676:	9a03      	ldr	r2, [sp, #12]
 8018678:	9312      	str	r3, [sp, #72]	@ 0x48
 801867a:	ed8d 6a10 	vstr	s12, [sp, #64]	@ 0x40
 801867e:	9b0e      	ldr	r3, [sp, #56]	@ 0x38
 8018680:	eeb0 3a67 	vmov.f32	s6, s15
 8018684:	bf08      	it	eq
 8018686:	4613      	moveq	r3, r2
 8018688:	eef0 2a47 	vmov.f32	s5, s14
 801868c:	e789      	b.n	80185a2 <_ZN8touchgfx8LCD16bpp56TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x32>
 801868e:	140f      	asrs	r7, r1, #16
 8018690:	d426      	bmi.n	80186e0 <_ZN8touchgfx8LCD16bpp56TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x170>
 8018692:	f8de 5008 	ldr.w	r5, [lr, #8]
 8018696:	42bd      	cmp	r5, r7
 8018698:	dd22      	ble.n	80186e0 <_ZN8touchgfx8LCD16bpp56TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x170>
 801869a:	ea5f 4c22 	movs.w	ip, r2, asr #16
 801869e:	d41f      	bmi.n	80186e0 <_ZN8touchgfx8LCD16bpp56TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x170>
 80186a0:	f8de 000c 	ldr.w	r0, [lr, #12]
 80186a4:	4560      	cmp	r0, ip
 80186a6:	dd1b      	ble.n	80186e0 <_ZN8touchgfx8LCD16bpp56TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x170>
 80186a8:	9800      	ldr	r0, [sp, #0]
 80186aa:	b22d      	sxth	r5, r5
 80186ac:	fb0c 0505 	mla	r5, ip, r5, r0
 80186b0:	5de8      	ldrb	r0, [r5, r7]
 80186b2:	9d01      	ldr	r5, [sp, #4]
 80186b4:	f855 0020 	ldr.w	r0, [r5, r0, lsl #2]
 80186b8:	0e07      	lsrs	r7, r0, #24
 80186ba:	2fff      	cmp	r7, #255	@ 0xff
 80186bc:	d116      	bne.n	80186ec <_ZN8touchgfx8LCD16bpp56TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x17c>
 80186be:	f06f 0501 	mvn.w	r5, #1
 80186c2:	fb05 f706 	mul.w	r7, r5, r6
 80186c6:	f2a5 75fe 	subw	r5, r5, #2046	@ 0x7fe
 80186ca:	ea05 2c10 	and.w	ip, r5, r0, lsr #8
 80186ce:	0945      	lsrs	r5, r0, #5
 80186d0:	f405 65fc 	and.w	r5, r5, #2016	@ 0x7e0
 80186d4:	ea4c 0505 	orr.w	r5, ip, r5
 80186d8:	f3c0 00c4 	ubfx	r0, r0, #3, #5
 80186dc:	4305      	orrs	r5, r0
 80186de:	53e5      	strh	r5, [r4, r7]
 80186e0:	9811      	ldr	r0, [sp, #68]	@ 0x44
 80186e2:	4401      	add	r1, r0
 80186e4:	9812      	ldr	r0, [sp, #72]	@ 0x48
 80186e6:	3e01      	subs	r6, #1
 80186e8:	4402      	add	r2, r0
 80186ea:	e78e      	b.n	801860a <_ZN8touchgfx8LCD16bpp56TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x9a>
 80186ec:	b2fd      	uxtb	r5, r7
 80186ee:	2f00      	cmp	r7, #0
 80186f0:	d0f6      	beq.n	80186e0 <_ZN8touchgfx8LCD16bpp56TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x170>
 80186f2:	f06f 0701 	mvn.w	r7, #1
 80186f6:	4377      	muls	r7, r6
 80186f8:	fa1f f985 	uxth.w	r9, r5
 80186fc:	f834 8007 	ldrh.w	r8, [r4, r7]
 8018700:	9702      	str	r7, [sp, #8]
 8018702:	ea4f 2c28 	mov.w	ip, r8, asr #8
 8018706:	f3c0 4707 	ubfx	r7, r0, #16, #8
 801870a:	43ed      	mvns	r5, r5
 801870c:	b2ed      	uxtb	r5, r5
 801870e:	fb17 f709 	smulbb	r7, r7, r9
 8018712:	f00c 0cf8 	and.w	ip, ip, #248	@ 0xf8
 8018716:	fb0c 7c05 	mla	ip, ip, r5, r7
 801871a:	f3c0 2a07 	ubfx	sl, r0, #8, #8
 801871e:	ea4f 07e8 	mov.w	r7, r8, asr #3
 8018722:	b2c0      	uxtb	r0, r0
 8018724:	ea4f 08c8 	mov.w	r8, r8, lsl #3
 8018728:	fa5f f888 	uxtb.w	r8, r8
 801872c:	fb10 f009 	smulbb	r0, r0, r9
 8018730:	fb08 0005 	mla	r0, r8, r5, r0
 8018734:	b280      	uxth	r0, r0
 8018736:	fa1f fc8c 	uxth.w	ip, ip
 801873a:	fb1a fa09 	smulbb	sl, sl, r9
 801873e:	f007 07fc 	and.w	r7, r7, #252	@ 0xfc
 8018742:	fb07 a705 	mla	r7, r7, r5, sl
 8018746:	f100 0a01 	add.w	sl, r0, #1
 801874a:	f10c 0501 	add.w	r5, ip, #1
 801874e:	eb0a 2a10 	add.w	sl, sl, r0, lsr #8
 8018752:	eb05 2c1c 	add.w	ip, r5, ip, lsr #8
 8018756:	b2bf      	uxth	r7, r7
 8018758:	f3ca 2ac4 	ubfx	sl, sl, #11, #5
 801875c:	f40c 4c78 	and.w	ip, ip, #63488	@ 0xf800
 8018760:	ea4a 0c0c 	orr.w	ip, sl, ip
 8018764:	f107 0a01 	add.w	sl, r7, #1
 8018768:	eb0a 2a17 	add.w	sl, sl, r7, lsr #8
 801876c:	ea4f 1a5a 	mov.w	sl, sl, lsr #5
 8018770:	f40a 6afc 	and.w	sl, sl, #2016	@ 0x7e0
 8018774:	9802      	ldr	r0, [sp, #8]
 8018776:	ea4c 0c0a 	orr.w	ip, ip, sl
 801877a:	f824 c000 	strh.w	ip, [r4, r0]
 801877e:	e7af      	b.n	80186e0 <_ZN8touchgfx8LCD16bpp56TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x170>
 8018780:	f04f 0800 	mov.w	r8, #0
 8018784:	eba3 0008 	sub.w	r0, r3, r8
 8018788:	2800      	cmp	r0, #0
 801878a:	f77f af41 	ble.w	8018610 <_ZN8touchgfx8LCD16bpp56TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xa0>
 801878e:	f9be 6008 	ldrsh.w	r6, [lr, #8]
 8018792:	9f00      	ldr	r7, [sp, #0]
 8018794:	1410      	asrs	r0, r2, #16
 8018796:	140d      	asrs	r5, r1, #16
 8018798:	fb06 7000 	mla	r0, r6, r0, r7
 801879c:	5d40      	ldrb	r0, [r0, r5]
 801879e:	9d01      	ldr	r5, [sp, #4]
 80187a0:	f855 5020 	ldr.w	r5, [r5, r0, lsl #2]
 80187a4:	0e2e      	lsrs	r6, r5, #24
 80187a6:	2eff      	cmp	r6, #255	@ 0xff
 80187a8:	d112      	bne.n	80187d0 <_ZN8touchgfx8LCD16bpp56TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x260>
 80187aa:	482c      	ldr	r0, [pc, #176]	@ (801885c <_ZN8touchgfx8LCD16bpp56TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2ec>)
 80187ac:	ea00 2615 	and.w	r6, r0, r5, lsr #8
 80187b0:	0968      	lsrs	r0, r5, #5
 80187b2:	f400 60fc 	and.w	r0, r0, #2016	@ 0x7e0
 80187b6:	4330      	orrs	r0, r6
 80187b8:	f3c5 05c4 	ubfx	r5, r5, #3, #5
 80187bc:	4328      	orrs	r0, r5
 80187be:	f824 0018 	strh.w	r0, [r4, r8, lsl #1]
 80187c2:	9811      	ldr	r0, [sp, #68]	@ 0x44
 80187c4:	4401      	add	r1, r0
 80187c6:	9812      	ldr	r0, [sp, #72]	@ 0x48
 80187c8:	f108 0801 	add.w	r8, r8, #1
 80187cc:	4402      	add	r2, r0
 80187ce:	e7d9      	b.n	8018784 <_ZN8touchgfx8LCD16bpp56TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x214>
 80187d0:	b2f0      	uxtb	r0, r6
 80187d2:	2e00      	cmp	r6, #0
 80187d4:	d0f5      	beq.n	80187c2 <_ZN8touchgfx8LCD16bpp56TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x252>
 80187d6:	f834 c018 	ldrh.w	ip, [r4, r8, lsl #1]
 80187da:	fa1f f980 	uxth.w	r9, r0
 80187de:	ea4f 272c 	mov.w	r7, ip, asr #8
 80187e2:	f3c5 4607 	ubfx	r6, r5, #16, #8
 80187e6:	43c0      	mvns	r0, r0
 80187e8:	b2c0      	uxtb	r0, r0
 80187ea:	fb16 f609 	smulbb	r6, r6, r9
 80187ee:	f007 07f8 	and.w	r7, r7, #248	@ 0xf8
 80187f2:	fb07 6700 	mla	r7, r7, r0, r6
 80187f6:	f3c5 2a07 	ubfx	sl, r5, #8, #8
 80187fa:	ea4f 06ec 	mov.w	r6, ip, asr #3
 80187fe:	b2ed      	uxtb	r5, r5
 8018800:	ea4f 0ccc 	mov.w	ip, ip, lsl #3
 8018804:	fa5f fc8c 	uxtb.w	ip, ip
 8018808:	fb15 f509 	smulbb	r5, r5, r9
 801880c:	fb0c 5500 	mla	r5, ip, r0, r5
 8018810:	b2bf      	uxth	r7, r7
 8018812:	fb1a fa09 	smulbb	sl, sl, r9
 8018816:	b2ad      	uxth	r5, r5
 8018818:	f006 06fc 	and.w	r6, r6, #252	@ 0xfc
 801881c:	fb06 a600 	mla	r6, r6, r0, sl
 8018820:	1c78      	adds	r0, r7, #1
 8018822:	f105 0a01 	add.w	sl, r5, #1
 8018826:	eb00 2717 	add.w	r7, r0, r7, lsr #8
 801882a:	eb0a 2a15 	add.w	sl, sl, r5, lsr #8
 801882e:	b2b6      	uxth	r6, r6
 8018830:	f3ca 2ac4 	ubfx	sl, sl, #11, #5
 8018834:	f407 4778 	and.w	r7, r7, #63488	@ 0xf800
 8018838:	ea4a 0707 	orr.w	r7, sl, r7
 801883c:	f106 0a01 	add.w	sl, r6, #1
 8018840:	eb0a 2a16 	add.w	sl, sl, r6, lsr #8
 8018844:	ea4f 1a5a 	mov.w	sl, sl, lsr #5
 8018848:	f40a 6afc 	and.w	sl, sl, #2016	@ 0x7e0
 801884c:	ea47 070a 	orr.w	r7, r7, sl
 8018850:	f824 7018 	strh.w	r7, [r4, r8, lsl #1]
 8018854:	e7b5      	b.n	80187c2 <_ZN8touchgfx8LCD16bpp56TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x252>
 8018856:	b005      	add	sp, #20
 8018858:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 801885c:	fffff800 	.word	0xfffff800

08018860 <_ZN8touchgfx8LCD16bpp49TextureMapper_RGB565_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff>:
 8018860:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8018864:	b087      	sub	sp, #28
 8018866:	468b      	mov	fp, r1
 8018868:	9c15      	ldr	r4, [sp, #84]	@ 0x54
 801886a:	9204      	str	r2, [sp, #16]
 801886c:	f89d 2064 	ldrb.w	r2, [sp, #100]	@ 0x64
 8018870:	9205      	str	r2, [sp, #20]
 8018872:	e9dd 2016 	ldrd	r2, r0, [sp, #88]	@ 0x58
 8018876:	6861      	ldr	r1, [r4, #4]
 8018878:	f8dd e060 	ldr.w	lr, [sp, #96]	@ 0x60
 801887c:	fb01 2000 	mla	r0, r1, r0, r2
 8018880:	6822      	ldr	r2, [r4, #0]
 8018882:	eb02 0040 	add.w	r0, r2, r0, lsl #1
 8018886:	f8de 2000 	ldr.w	r2, [lr]
 801888a:	9201      	str	r2, [sp, #4]
 801888c:	f8de 2004 	ldr.w	r2, [lr, #4]
 8018890:	9202      	str	r2, [sp, #8]
 8018892:	eef7 6a00 	vmov.f32	s13, #112	@ 0x3f800000  1.0
 8018896:	f1bb 0f00 	cmp.w	fp, #0
 801889a:	dc03      	bgt.n	80188a4 <_ZN8touchgfx8LCD16bpp49TextureMapper_RGB565_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x44>
 801889c:	9a04      	ldr	r2, [sp, #16]
 801889e:	2a00      	cmp	r2, #0
 80188a0:	f340 8142 	ble.w	8018b28 <_ZN8touchgfx8LCD16bpp49TextureMapper_RGB565_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2c8>
 80188a4:	9a11      	ldr	r2, [sp, #68]	@ 0x44
 80188a6:	f9be 7008 	ldrsh.w	r7, [lr, #8]
 80188aa:	f9be 600c 	ldrsh.w	r6, [lr, #12]
 80188ae:	f502 4100 	add.w	r1, r2, #32768	@ 0x8000
 80188b2:	9a12      	ldr	r2, [sp, #72]	@ 0x48
 80188b4:	f502 4200 	add.w	r2, r2, #32768	@ 0x8000
 80188b8:	2b00      	cmp	r3, #0
 80188ba:	dd0e      	ble.n	80188da <_ZN8touchgfx8LCD16bpp49TextureMapper_RGB565_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x7a>
 80188bc:	140c      	asrs	r4, r1, #16
 80188be:	d405      	bmi.n	80188cc <_ZN8touchgfx8LCD16bpp49TextureMapper_RGB565_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x6c>
 80188c0:	42bc      	cmp	r4, r7
 80188c2:	da03      	bge.n	80188cc <_ZN8touchgfx8LCD16bpp49TextureMapper_RGB565_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x6c>
 80188c4:	1414      	asrs	r4, r2, #16
 80188c6:	d401      	bmi.n	80188cc <_ZN8touchgfx8LCD16bpp49TextureMapper_RGB565_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x6c>
 80188c8:	42b4      	cmp	r4, r6
 80188ca:	db07      	blt.n	80188dc <_ZN8touchgfx8LCD16bpp49TextureMapper_RGB565_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x7c>
 80188cc:	9c13      	ldr	r4, [sp, #76]	@ 0x4c
 80188ce:	4421      	add	r1, r4
 80188d0:	9c14      	ldr	r4, [sp, #80]	@ 0x50
 80188d2:	3b01      	subs	r3, #1
 80188d4:	4422      	add	r2, r4
 80188d6:	3002      	adds	r0, #2
 80188d8:	e7ee      	b.n	80188b8 <_ZN8touchgfx8LCD16bpp49TextureMapper_RGB565_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x58>
 80188da:	d019      	beq.n	8018910 <_ZN8touchgfx8LCD16bpp49TextureMapper_RGB565_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xb0>
 80188dc:	9d13      	ldr	r5, [sp, #76]	@ 0x4c
 80188de:	1e5c      	subs	r4, r3, #1
 80188e0:	fb05 1504 	mla	r5, r5, r4, r1
 80188e4:	142d      	asrs	r5, r5, #16
 80188e6:	d409      	bmi.n	80188fc <_ZN8touchgfx8LCD16bpp49TextureMapper_RGB565_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x9c>
 80188e8:	42bd      	cmp	r5, r7
 80188ea:	da07      	bge.n	80188fc <_ZN8touchgfx8LCD16bpp49TextureMapper_RGB565_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x9c>
 80188ec:	9d14      	ldr	r5, [sp, #80]	@ 0x50
 80188ee:	fb05 2404 	mla	r4, r5, r4, r2
 80188f2:	1424      	asrs	r4, r4, #16
 80188f4:	d402      	bmi.n	80188fc <_ZN8touchgfx8LCD16bpp49TextureMapper_RGB565_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x9c>
 80188f6:	42b4      	cmp	r4, r6
 80188f8:	f2c0 80b1 	blt.w	8018a5e <_ZN8touchgfx8LCD16bpp49TextureMapper_RGB565_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1fe>
 80188fc:	f04f 0800 	mov.w	r8, #0
 8018900:	eb03 0408 	add.w	r4, r3, r8
 8018904:	2c00      	cmp	r4, #0
 8018906:	dc3e      	bgt.n	8018986 <_ZN8touchgfx8LCD16bpp49TextureMapper_RGB565_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x126>
 8018908:	ea23 73e3 	bic.w	r3, r3, r3, asr #31
 801890c:	eb00 0043 	add.w	r0, r0, r3, lsl #1
 8018910:	f1bb 0f00 	cmp.w	fp, #0
 8018914:	f340 8108 	ble.w	8018b28 <_ZN8touchgfx8LCD16bpp49TextureMapper_RGB565_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2c8>
 8018918:	ee30 0a04 	vadd.f32	s0, s0, s8
 801891c:	ee70 0aa4 	vadd.f32	s1, s1, s9
 8018920:	eec6 7a80 	vdiv.f32	s15, s13, s0
 8018924:	9b10      	ldr	r3, [sp, #64]	@ 0x40
 8018926:	f1bb 0b01 	subs.w	fp, fp, #1
 801892a:	ee31 1a05 	vadd.f32	s2, s2, s10
 801892e:	ee20 7aa7 	vmul.f32	s14, s1, s15
 8018932:	eeb0 6a62 	vmov.f32	s12, s5
 8018936:	ee61 7a27 	vmul.f32	s15, s2, s15
 801893a:	eebe 6ac8 	vcvt.s32.f32	s12, s12, #16
 801893e:	ee77 2a62 	vsub.f32	s5, s14, s5
 8018942:	ed8d 6a11 	vstr	s12, [sp, #68]	@ 0x44
 8018946:	eefe 2ac8 	vcvt.s32.f32	s5, s5, #16
 801894a:	eeb0 6a43 	vmov.f32	s12, s6
 801894e:	ee37 3ac3 	vsub.f32	s6, s15, s6
 8018952:	ee12 2a90 	vmov	r2, s5
 8018956:	eebe 3ac8 	vcvt.s32.f32	s6, s6, #16
 801895a:	fb92 f3f3 	sdiv	r3, r2, r3
 801895e:	ee13 2a10 	vmov	r2, s6
 8018962:	eebe 6ac8 	vcvt.s32.f32	s12, s12, #16
 8018966:	9313      	str	r3, [sp, #76]	@ 0x4c
 8018968:	9b10      	ldr	r3, [sp, #64]	@ 0x40
 801896a:	fb92 f3f3 	sdiv	r3, r2, r3
 801896e:	9a04      	ldr	r2, [sp, #16]
 8018970:	9314      	str	r3, [sp, #80]	@ 0x50
 8018972:	ed8d 6a12 	vstr	s12, [sp, #72]	@ 0x48
 8018976:	9b10      	ldr	r3, [sp, #64]	@ 0x40
 8018978:	eeb0 3a67 	vmov.f32	s6, s15
 801897c:	bf08      	it	eq
 801897e:	4613      	moveq	r3, r2
 8018980:	eef0 2a47 	vmov.f32	s5, s14
 8018984:	e787      	b.n	8018896 <_ZN8touchgfx8LCD16bpp49TextureMapper_RGB565_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x36>
 8018986:	140e      	asrs	r6, r1, #16
 8018988:	d462      	bmi.n	8018a50 <_ZN8touchgfx8LCD16bpp49TextureMapper_RGB565_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1f0>
 801898a:	f8de 5008 	ldr.w	r5, [lr, #8]
 801898e:	42b5      	cmp	r5, r6
 8018990:	dd5e      	ble.n	8018a50 <_ZN8touchgfx8LCD16bpp49TextureMapper_RGB565_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1f0>
 8018992:	1417      	asrs	r7, r2, #16
 8018994:	d45c      	bmi.n	8018a50 <_ZN8touchgfx8LCD16bpp49TextureMapper_RGB565_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1f0>
 8018996:	f8de 400c 	ldr.w	r4, [lr, #12]
 801899a:	42bc      	cmp	r4, r7
 801899c:	dd58      	ble.n	8018a50 <_ZN8touchgfx8LCD16bpp49TextureMapper_RGB565_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1f0>
 801899e:	b22d      	sxth	r5, r5
 80189a0:	fb07 6505 	mla	r5, r7, r5, r6
 80189a4:	9c02      	ldr	r4, [sp, #8]
 80189a6:	5d66      	ldrb	r6, [r4, r5]
 80189a8:	2e00      	cmp	r6, #0
 80189aa:	d051      	beq.n	8018a50 <_ZN8touchgfx8LCD16bpp49TextureMapper_RGB565_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1f0>
 80189ac:	9c01      	ldr	r4, [sp, #4]
 80189ae:	f834 9015 	ldrh.w	r9, [r4, r5, lsl #1]
 80189b2:	f06f 0401 	mvn.w	r4, #1
 80189b6:	fb04 f408 	mul.w	r4, r4, r8
 80189ba:	9403      	str	r4, [sp, #12]
 80189bc:	5b05      	ldrh	r5, [r0, r4]
 80189be:	9c05      	ldr	r4, [sp, #20]
 80189c0:	4366      	muls	r6, r4
 80189c2:	1c74      	adds	r4, r6, #1
 80189c4:	eb04 2416 	add.w	r4, r4, r6, lsr #8
 80189c8:	1224      	asrs	r4, r4, #8
 80189ca:	b2a7      	uxth	r7, r4
 80189cc:	122e      	asrs	r6, r5, #8
 80189ce:	43e4      	mvns	r4, r4
 80189d0:	b2e4      	uxtb	r4, r4
 80189d2:	ea4f 2c29 	mov.w	ip, r9, asr #8
 80189d6:	f006 06f8 	and.w	r6, r6, #248	@ 0xf8
 80189da:	fb16 f604 	smulbb	r6, r6, r4
 80189de:	ea4f 0ae5 	mov.w	sl, r5, asr #3
 80189e2:	f00c 0cf8 	and.w	ip, ip, #248	@ 0xf8
 80189e6:	00ed      	lsls	r5, r5, #3
 80189e8:	fb0c 6c07 	mla	ip, ip, r7, r6
 80189ec:	b2ed      	uxtb	r5, r5
 80189ee:	ea4f 06e9 	mov.w	r6, r9, asr #3
 80189f2:	ea4f 09c9 	mov.w	r9, r9, lsl #3
 80189f6:	fb15 f504 	smulbb	r5, r5, r4
 80189fa:	fa5f f989 	uxtb.w	r9, r9
 80189fe:	f00a 0afc 	and.w	sl, sl, #252	@ 0xfc
 8018a02:	fb09 5507 	mla	r5, r9, r7, r5
 8018a06:	fb1a fa04 	smulbb	sl, sl, r4
 8018a0a:	fa1f fc8c 	uxth.w	ip, ip
 8018a0e:	b2ad      	uxth	r5, r5
 8018a10:	f006 06fc 	and.w	r6, r6, #252	@ 0xfc
 8018a14:	fb06 a607 	mla	r6, r6, r7, sl
 8018a18:	f10c 0401 	add.w	r4, ip, #1
 8018a1c:	f105 0a01 	add.w	sl, r5, #1
 8018a20:	eb04 2c1c 	add.w	ip, r4, ip, lsr #8
 8018a24:	eb0a 2a15 	add.w	sl, sl, r5, lsr #8
 8018a28:	b2b6      	uxth	r6, r6
 8018a2a:	f3ca 2ac4 	ubfx	sl, sl, #11, #5
 8018a2e:	f40c 4c78 	and.w	ip, ip, #63488	@ 0xf800
 8018a32:	ea4a 0c0c 	orr.w	ip, sl, ip
 8018a36:	f106 0a01 	add.w	sl, r6, #1
 8018a3a:	eb0a 2a16 	add.w	sl, sl, r6, lsr #8
 8018a3e:	ea4f 1a5a 	mov.w	sl, sl, lsr #5
 8018a42:	f40a 6afc 	and.w	sl, sl, #2016	@ 0x7e0
 8018a46:	9c03      	ldr	r4, [sp, #12]
 8018a48:	ea4c 0c0a 	orr.w	ip, ip, sl
 8018a4c:	f820 c004 	strh.w	ip, [r0, r4]
 8018a50:	9c13      	ldr	r4, [sp, #76]	@ 0x4c
 8018a52:	4421      	add	r1, r4
 8018a54:	9c14      	ldr	r4, [sp, #80]	@ 0x50
 8018a56:	f108 38ff 	add.w	r8, r8, #4294967295
 8018a5a:	4422      	add	r2, r4
 8018a5c:	e750      	b.n	8018900 <_ZN8touchgfx8LCD16bpp49TextureMapper_RGB565_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xa0>
 8018a5e:	f04f 0900 	mov.w	r9, #0
 8018a62:	eba3 0409 	sub.w	r4, r3, r9
 8018a66:	2c00      	cmp	r4, #0
 8018a68:	f77f af4e 	ble.w	8018908 <_ZN8touchgfx8LCD16bpp49TextureMapper_RGB565_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xa8>
 8018a6c:	f9be 6008 	ldrsh.w	r6, [lr, #8]
 8018a70:	140d      	asrs	r5, r1, #16
 8018a72:	1414      	asrs	r4, r2, #16
 8018a74:	fb06 5404 	mla	r4, r6, r4, r5
 8018a78:	9d02      	ldr	r5, [sp, #8]
 8018a7a:	5d2e      	ldrb	r6, [r5, r4]
 8018a7c:	2e00      	cmp	r6, #0
 8018a7e:	d04c      	beq.n	8018b1a <_ZN8touchgfx8LCD16bpp49TextureMapper_RGB565_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2ba>
 8018a80:	9d01      	ldr	r5, [sp, #4]
 8018a82:	f835 8014 	ldrh.w	r8, [r5, r4, lsl #1]
 8018a86:	9c05      	ldr	r4, [sp, #20]
 8018a88:	f830 5019 	ldrh.w	r5, [r0, r9, lsl #1]
 8018a8c:	4366      	muls	r6, r4
 8018a8e:	1c74      	adds	r4, r6, #1
 8018a90:	eb04 2416 	add.w	r4, r4, r6, lsr #8
 8018a94:	1224      	asrs	r4, r4, #8
 8018a96:	b2a7      	uxth	r7, r4
 8018a98:	122e      	asrs	r6, r5, #8
 8018a9a:	43e4      	mvns	r4, r4
 8018a9c:	b2e4      	uxtb	r4, r4
 8018a9e:	ea4f 2c28 	mov.w	ip, r8, asr #8
 8018aa2:	f006 06f8 	and.w	r6, r6, #248	@ 0xf8
 8018aa6:	fb16 f604 	smulbb	r6, r6, r4
 8018aaa:	ea4f 0ae5 	mov.w	sl, r5, asr #3
 8018aae:	f00c 0cf8 	and.w	ip, ip, #248	@ 0xf8
 8018ab2:	00ed      	lsls	r5, r5, #3
 8018ab4:	fb0c 6c07 	mla	ip, ip, r7, r6
 8018ab8:	b2ed      	uxtb	r5, r5
 8018aba:	ea4f 06e8 	mov.w	r6, r8, asr #3
 8018abe:	ea4f 08c8 	mov.w	r8, r8, lsl #3
 8018ac2:	fb15 f504 	smulbb	r5, r5, r4
 8018ac6:	fa5f f888 	uxtb.w	r8, r8
 8018aca:	f00a 0afc 	and.w	sl, sl, #252	@ 0xfc
 8018ace:	fb08 5507 	mla	r5, r8, r7, r5
 8018ad2:	fb1a fa04 	smulbb	sl, sl, r4
 8018ad6:	fa1f fc8c 	uxth.w	ip, ip
 8018ada:	b2ad      	uxth	r5, r5
 8018adc:	f006 06fc 	and.w	r6, r6, #252	@ 0xfc
 8018ae0:	fb06 a607 	mla	r6, r6, r7, sl
 8018ae4:	f10c 0401 	add.w	r4, ip, #1
 8018ae8:	f105 0a01 	add.w	sl, r5, #1
 8018aec:	eb04 2c1c 	add.w	ip, r4, ip, lsr #8
 8018af0:	eb0a 2a15 	add.w	sl, sl, r5, lsr #8
 8018af4:	b2b6      	uxth	r6, r6
 8018af6:	f3ca 2ac4 	ubfx	sl, sl, #11, #5
 8018afa:	f40c 4c78 	and.w	ip, ip, #63488	@ 0xf800
 8018afe:	ea4a 0c0c 	orr.w	ip, sl, ip
 8018b02:	f106 0a01 	add.w	sl, r6, #1
 8018b06:	eb0a 2a16 	add.w	sl, sl, r6, lsr #8
 8018b0a:	ea4f 1a5a 	mov.w	sl, sl, lsr #5
 8018b0e:	f40a 6afc 	and.w	sl, sl, #2016	@ 0x7e0
 8018b12:	ea4c 0c0a 	orr.w	ip, ip, sl
 8018b16:	f820 c019 	strh.w	ip, [r0, r9, lsl #1]
 8018b1a:	9c13      	ldr	r4, [sp, #76]	@ 0x4c
 8018b1c:	4421      	add	r1, r4
 8018b1e:	9c14      	ldr	r4, [sp, #80]	@ 0x50
 8018b20:	f109 0901 	add.w	r9, r9, #1
 8018b24:	4422      	add	r2, r4
 8018b26:	e79c      	b.n	8018a62 <_ZN8touchgfx8LCD16bpp49TextureMapper_RGB565_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x202>
 8018b28:	b007      	add	sp, #28
 8018b2a:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}

08018b2e <_ZN8touchgfx8LCD16bpp51TextureMapper_RGB565_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff>:
 8018b2e:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8018b32:	b085      	sub	sp, #20
 8018b34:	468b      	mov	fp, r1
 8018b36:	9c13      	ldr	r4, [sp, #76]	@ 0x4c
 8018b38:	9203      	str	r2, [sp, #12]
 8018b3a:	e9dd 2014 	ldrd	r2, r0, [sp, #80]	@ 0x50
 8018b3e:	6861      	ldr	r1, [r4, #4]
 8018b40:	f8dd 8058 	ldr.w	r8, [sp, #88]	@ 0x58
 8018b44:	fb01 2000 	mla	r0, r1, r0, r2
 8018b48:	6822      	ldr	r2, [r4, #0]
 8018b4a:	eb02 0040 	add.w	r0, r2, r0, lsl #1
 8018b4e:	f8d8 2000 	ldr.w	r2, [r8]
 8018b52:	9200      	str	r2, [sp, #0]
 8018b54:	f8d8 2004 	ldr.w	r2, [r8, #4]
 8018b58:	9201      	str	r2, [sp, #4]
 8018b5a:	eef7 6a00 	vmov.f32	s13, #112	@ 0x3f800000  1.0
 8018b5e:	f1bb 0f00 	cmp.w	fp, #0
 8018b62:	dc03      	bgt.n	8018b6c <_ZN8touchgfx8LCD16bpp51TextureMapper_RGB565_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3e>
 8018b64:	9a03      	ldr	r2, [sp, #12]
 8018b66:	2a00      	cmp	r2, #0
 8018b68:	f340 8146 	ble.w	8018df8 <_ZN8touchgfx8LCD16bpp51TextureMapper_RGB565_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2ca>
 8018b6c:	9a0f      	ldr	r2, [sp, #60]	@ 0x3c
 8018b6e:	f9b8 7008 	ldrsh.w	r7, [r8, #8]
 8018b72:	f9b8 600c 	ldrsh.w	r6, [r8, #12]
 8018b76:	f502 4100 	add.w	r1, r2, #32768	@ 0x8000
 8018b7a:	9a10      	ldr	r2, [sp, #64]	@ 0x40
 8018b7c:	f502 4200 	add.w	r2, r2, #32768	@ 0x8000
 8018b80:	2b00      	cmp	r3, #0
 8018b82:	dd0e      	ble.n	8018ba2 <_ZN8touchgfx8LCD16bpp51TextureMapper_RGB565_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x74>
 8018b84:	140c      	asrs	r4, r1, #16
 8018b86:	d405      	bmi.n	8018b94 <_ZN8touchgfx8LCD16bpp51TextureMapper_RGB565_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x66>
 8018b88:	42bc      	cmp	r4, r7
 8018b8a:	da03      	bge.n	8018b94 <_ZN8touchgfx8LCD16bpp51TextureMapper_RGB565_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x66>
 8018b8c:	1414      	asrs	r4, r2, #16
 8018b8e:	d401      	bmi.n	8018b94 <_ZN8touchgfx8LCD16bpp51TextureMapper_RGB565_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x66>
 8018b90:	42b4      	cmp	r4, r6
 8018b92:	db07      	blt.n	8018ba4 <_ZN8touchgfx8LCD16bpp51TextureMapper_RGB565_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x76>
 8018b94:	9c11      	ldr	r4, [sp, #68]	@ 0x44
 8018b96:	4421      	add	r1, r4
 8018b98:	9c12      	ldr	r4, [sp, #72]	@ 0x48
 8018b9a:	3b01      	subs	r3, #1
 8018b9c:	4422      	add	r2, r4
 8018b9e:	3002      	adds	r0, #2
 8018ba0:	e7ee      	b.n	8018b80 <_ZN8touchgfx8LCD16bpp51TextureMapper_RGB565_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x52>
 8018ba2:	d017      	beq.n	8018bd4 <_ZN8touchgfx8LCD16bpp51TextureMapper_RGB565_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xa6>
 8018ba4:	9d11      	ldr	r5, [sp, #68]	@ 0x44
 8018ba6:	1e5c      	subs	r4, r3, #1
 8018ba8:	fb05 1504 	mla	r5, r5, r4, r1
 8018bac:	142d      	asrs	r5, r5, #16
 8018bae:	d409      	bmi.n	8018bc4 <_ZN8touchgfx8LCD16bpp51TextureMapper_RGB565_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x96>
 8018bb0:	42bd      	cmp	r5, r7
 8018bb2:	da07      	bge.n	8018bc4 <_ZN8touchgfx8LCD16bpp51TextureMapper_RGB565_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x96>
 8018bb4:	9d12      	ldr	r5, [sp, #72]	@ 0x48
 8018bb6:	fb05 2404 	mla	r4, r5, r4, r2
 8018bba:	1424      	asrs	r4, r4, #16
 8018bbc:	d402      	bmi.n	8018bc4 <_ZN8touchgfx8LCD16bpp51TextureMapper_RGB565_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x96>
 8018bbe:	42b4      	cmp	r4, r6
 8018bc0:	f2c0 80b3 	blt.w	8018d2a <_ZN8touchgfx8LCD16bpp51TextureMapper_RGB565_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1fc>
 8018bc4:	2600      	movs	r6, #0
 8018bc6:	199c      	adds	r4, r3, r6
 8018bc8:	2c00      	cmp	r4, #0
 8018bca:	dc3e      	bgt.n	8018c4a <_ZN8touchgfx8LCD16bpp51TextureMapper_RGB565_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x11c>
 8018bcc:	ea23 73e3 	bic.w	r3, r3, r3, asr #31
 8018bd0:	eb00 0043 	add.w	r0, r0, r3, lsl #1
 8018bd4:	f1bb 0f00 	cmp.w	fp, #0
 8018bd8:	f340 810e 	ble.w	8018df8 <_ZN8touchgfx8LCD16bpp51TextureMapper_RGB565_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2ca>
 8018bdc:	ee30 0a04 	vadd.f32	s0, s0, s8
 8018be0:	ee70 0aa4 	vadd.f32	s1, s1, s9
 8018be4:	eec6 7a80 	vdiv.f32	s15, s13, s0
 8018be8:	9b0e      	ldr	r3, [sp, #56]	@ 0x38
 8018bea:	f1bb 0b01 	subs.w	fp, fp, #1
 8018bee:	ee31 1a05 	vadd.f32	s2, s2, s10
 8018bf2:	ee20 7aa7 	vmul.f32	s14, s1, s15
 8018bf6:	eeb0 6a62 	vmov.f32	s12, s5
 8018bfa:	ee61 7a27 	vmul.f32	s15, s2, s15
 8018bfe:	eebe 6ac8 	vcvt.s32.f32	s12, s12, #16
 8018c02:	ee77 2a62 	vsub.f32	s5, s14, s5
 8018c06:	ed8d 6a0f 	vstr	s12, [sp, #60]	@ 0x3c
 8018c0a:	eefe 2ac8 	vcvt.s32.f32	s5, s5, #16
 8018c0e:	eeb0 6a43 	vmov.f32	s12, s6
 8018c12:	ee37 3ac3 	vsub.f32	s6, s15, s6
 8018c16:	ee12 2a90 	vmov	r2, s5
 8018c1a:	eebe 3ac8 	vcvt.s32.f32	s6, s6, #16
 8018c1e:	fb92 f3f3 	sdiv	r3, r2, r3
 8018c22:	ee13 2a10 	vmov	r2, s6
 8018c26:	eebe 6ac8 	vcvt.s32.f32	s12, s12, #16
 8018c2a:	9311      	str	r3, [sp, #68]	@ 0x44
 8018c2c:	9b0e      	ldr	r3, [sp, #56]	@ 0x38
 8018c2e:	fb92 f3f3 	sdiv	r3, r2, r3
 8018c32:	9a03      	ldr	r2, [sp, #12]
 8018c34:	9312      	str	r3, [sp, #72]	@ 0x48
 8018c36:	ed8d 6a10 	vstr	s12, [sp, #64]	@ 0x40
 8018c3a:	9b0e      	ldr	r3, [sp, #56]	@ 0x38
 8018c3c:	eeb0 3a67 	vmov.f32	s6, s15
 8018c40:	bf08      	it	eq
 8018c42:	4613      	moveq	r3, r2
 8018c44:	eef0 2a47 	vmov.f32	s5, s14
 8018c48:	e789      	b.n	8018b5e <_ZN8touchgfx8LCD16bpp51TextureMapper_RGB565_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x30>
 8018c4a:	140f      	asrs	r7, r1, #16
 8018c4c:	d418      	bmi.n	8018c80 <_ZN8touchgfx8LCD16bpp51TextureMapper_RGB565_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x152>
 8018c4e:	f8d8 5008 	ldr.w	r5, [r8, #8]
 8018c52:	42bd      	cmp	r5, r7
 8018c54:	dd14      	ble.n	8018c80 <_ZN8touchgfx8LCD16bpp51TextureMapper_RGB565_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x152>
 8018c56:	ea5f 4c22 	movs.w	ip, r2, asr #16
 8018c5a:	d411      	bmi.n	8018c80 <_ZN8touchgfx8LCD16bpp51TextureMapper_RGB565_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x152>
 8018c5c:	f8d8 400c 	ldr.w	r4, [r8, #12]
 8018c60:	4564      	cmp	r4, ip
 8018c62:	dd0d      	ble.n	8018c80 <_ZN8touchgfx8LCD16bpp51TextureMapper_RGB565_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x152>
 8018c64:	b22d      	sxth	r5, r5
 8018c66:	fb0c 7505 	mla	r5, ip, r5, r7
 8018c6a:	9c01      	ldr	r4, [sp, #4]
 8018c6c:	5d64      	ldrb	r4, [r4, r5]
 8018c6e:	2cff      	cmp	r4, #255	@ 0xff
 8018c70:	d10c      	bne.n	8018c8c <_ZN8touchgfx8LCD16bpp51TextureMapper_RGB565_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x15e>
 8018c72:	9c00      	ldr	r4, [sp, #0]
 8018c74:	f834 5015 	ldrh.w	r5, [r4, r5, lsl #1]
 8018c78:	f06f 0401 	mvn.w	r4, #1
 8018c7c:	4374      	muls	r4, r6
 8018c7e:	5305      	strh	r5, [r0, r4]
 8018c80:	9c11      	ldr	r4, [sp, #68]	@ 0x44
 8018c82:	4421      	add	r1, r4
 8018c84:	9c12      	ldr	r4, [sp, #72]	@ 0x48
 8018c86:	3e01      	subs	r6, #1
 8018c88:	4422      	add	r2, r4
 8018c8a:	e79c      	b.n	8018bc6 <_ZN8touchgfx8LCD16bpp51TextureMapper_RGB565_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x98>
 8018c8c:	2c00      	cmp	r4, #0
 8018c8e:	d0f7      	beq.n	8018c80 <_ZN8touchgfx8LCD16bpp51TextureMapper_RGB565_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x152>
 8018c90:	9f00      	ldr	r7, [sp, #0]
 8018c92:	f837 9015 	ldrh.w	r9, [r7, r5, lsl #1]
 8018c96:	f06f 0501 	mvn.w	r5, #1
 8018c9a:	4375      	muls	r5, r6
 8018c9c:	9502      	str	r5, [sp, #8]
 8018c9e:	5b45      	ldrh	r5, [r0, r5]
 8018ca0:	fa1f fc84 	uxth.w	ip, r4
 8018ca4:	122f      	asrs	r7, r5, #8
 8018ca6:	43e4      	mvns	r4, r4
 8018ca8:	b2e4      	uxtb	r4, r4
 8018caa:	ea4f 2e29 	mov.w	lr, r9, asr #8
 8018cae:	f007 07f8 	and.w	r7, r7, #248	@ 0xf8
 8018cb2:	fb17 f704 	smulbb	r7, r7, r4
 8018cb6:	ea4f 0ae5 	mov.w	sl, r5, asr #3
 8018cba:	f00e 0ef8 	and.w	lr, lr, #248	@ 0xf8
 8018cbe:	00ed      	lsls	r5, r5, #3
 8018cc0:	fb0e 7e0c 	mla	lr, lr, ip, r7
 8018cc4:	b2ed      	uxtb	r5, r5
 8018cc6:	ea4f 07e9 	mov.w	r7, r9, asr #3
 8018cca:	ea4f 09c9 	mov.w	r9, r9, lsl #3
 8018cce:	fb15 f504 	smulbb	r5, r5, r4
 8018cd2:	fa5f f989 	uxtb.w	r9, r9
 8018cd6:	f00a 0afc 	and.w	sl, sl, #252	@ 0xfc
 8018cda:	fb09 550c 	mla	r5, r9, ip, r5
 8018cde:	fb1a fa04 	smulbb	sl, sl, r4
 8018ce2:	fa1f fe8e 	uxth.w	lr, lr
 8018ce6:	b2ad      	uxth	r5, r5
 8018ce8:	f007 07fc 	and.w	r7, r7, #252	@ 0xfc
 8018cec:	fb07 a70c 	mla	r7, r7, ip, sl
 8018cf0:	f10e 0401 	add.w	r4, lr, #1
 8018cf4:	f105 0a01 	add.w	sl, r5, #1
 8018cf8:	eb04 2e1e 	add.w	lr, r4, lr, lsr #8
 8018cfc:	eb0a 2a15 	add.w	sl, sl, r5, lsr #8
 8018d00:	b2bf      	uxth	r7, r7
 8018d02:	f3ca 2ac4 	ubfx	sl, sl, #11, #5
 8018d06:	f40e 4e78 	and.w	lr, lr, #63488	@ 0xf800
 8018d0a:	ea4a 0e0e 	orr.w	lr, sl, lr
 8018d0e:	f107 0a01 	add.w	sl, r7, #1
 8018d12:	eb0a 2a17 	add.w	sl, sl, r7, lsr #8
 8018d16:	ea4f 1a5a 	mov.w	sl, sl, lsr #5
 8018d1a:	f40a 6afc 	and.w	sl, sl, #2016	@ 0x7e0
 8018d1e:	9c02      	ldr	r4, [sp, #8]
 8018d20:	ea4e 0e0a 	orr.w	lr, lr, sl
 8018d24:	f820 e004 	strh.w	lr, [r0, r4]
 8018d28:	e7aa      	b.n	8018c80 <_ZN8touchgfx8LCD16bpp51TextureMapper_RGB565_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x152>
 8018d2a:	f04f 0900 	mov.w	r9, #0
 8018d2e:	eba3 0409 	sub.w	r4, r3, r9
 8018d32:	2c00      	cmp	r4, #0
 8018d34:	f77f af4a 	ble.w	8018bcc <_ZN8touchgfx8LCD16bpp51TextureMapper_RGB565_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x9e>
 8018d38:	f9b8 6008 	ldrsh.w	r6, [r8, #8]
 8018d3c:	1414      	asrs	r4, r2, #16
 8018d3e:	140d      	asrs	r5, r1, #16
 8018d40:	fb06 5504 	mla	r5, r6, r4, r5
 8018d44:	9c01      	ldr	r4, [sp, #4]
 8018d46:	5d64      	ldrb	r4, [r4, r5]
 8018d48:	2cff      	cmp	r4, #255	@ 0xff
 8018d4a:	d10b      	bne.n	8018d64 <_ZN8touchgfx8LCD16bpp51TextureMapper_RGB565_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x236>
 8018d4c:	9c00      	ldr	r4, [sp, #0]
 8018d4e:	f834 4015 	ldrh.w	r4, [r4, r5, lsl #1]
 8018d52:	f820 4019 	strh.w	r4, [r0, r9, lsl #1]
 8018d56:	9c11      	ldr	r4, [sp, #68]	@ 0x44
 8018d58:	4421      	add	r1, r4
 8018d5a:	9c12      	ldr	r4, [sp, #72]	@ 0x48
 8018d5c:	f109 0901 	add.w	r9, r9, #1
 8018d60:	4422      	add	r2, r4
 8018d62:	e7e4      	b.n	8018d2e <_ZN8touchgfx8LCD16bpp51TextureMapper_RGB565_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x200>
 8018d64:	2c00      	cmp	r4, #0
 8018d66:	d0f6      	beq.n	8018d56 <_ZN8touchgfx8LCD16bpp51TextureMapper_RGB565_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x228>
 8018d68:	9e00      	ldr	r6, [sp, #0]
 8018d6a:	f836 e015 	ldrh.w	lr, [r6, r5, lsl #1]
 8018d6e:	f830 5019 	ldrh.w	r5, [r0, r9, lsl #1]
 8018d72:	b2a7      	uxth	r7, r4
 8018d74:	122e      	asrs	r6, r5, #8
 8018d76:	43e4      	mvns	r4, r4
 8018d78:	b2e4      	uxtb	r4, r4
 8018d7a:	ea4f 2c2e 	mov.w	ip, lr, asr #8
 8018d7e:	f006 06f8 	and.w	r6, r6, #248	@ 0xf8
 8018d82:	fb16 f604 	smulbb	r6, r6, r4
 8018d86:	ea4f 0ae5 	mov.w	sl, r5, asr #3
 8018d8a:	f00c 0cf8 	and.w	ip, ip, #248	@ 0xf8
 8018d8e:	00ed      	lsls	r5, r5, #3
 8018d90:	fb0c 6c07 	mla	ip, ip, r7, r6
 8018d94:	b2ed      	uxtb	r5, r5
 8018d96:	ea4f 06ee 	mov.w	r6, lr, asr #3
 8018d9a:	ea4f 0ece 	mov.w	lr, lr, lsl #3
 8018d9e:	fb15 f504 	smulbb	r5, r5, r4
 8018da2:	fa5f fe8e 	uxtb.w	lr, lr
 8018da6:	f00a 0afc 	and.w	sl, sl, #252	@ 0xfc
 8018daa:	fb0e 5507 	mla	r5, lr, r7, r5
 8018dae:	fb1a fa04 	smulbb	sl, sl, r4
 8018db2:	fa1f fc8c 	uxth.w	ip, ip
 8018db6:	b2ad      	uxth	r5, r5
 8018db8:	f006 06fc 	and.w	r6, r6, #252	@ 0xfc
 8018dbc:	fb06 a607 	mla	r6, r6, r7, sl
 8018dc0:	f10c 0401 	add.w	r4, ip, #1
 8018dc4:	f105 0a01 	add.w	sl, r5, #1
 8018dc8:	eb04 2c1c 	add.w	ip, r4, ip, lsr #8
 8018dcc:	eb0a 2a15 	add.w	sl, sl, r5, lsr #8
 8018dd0:	b2b6      	uxth	r6, r6
 8018dd2:	f3ca 2ac4 	ubfx	sl, sl, #11, #5
 8018dd6:	f40c 4c78 	and.w	ip, ip, #63488	@ 0xf800
 8018dda:	ea4a 0c0c 	orr.w	ip, sl, ip
 8018dde:	f106 0a01 	add.w	sl, r6, #1
 8018de2:	eb0a 2a16 	add.w	sl, sl, r6, lsr #8
 8018de6:	ea4f 1a5a 	mov.w	sl, sl, lsr #5
 8018dea:	f40a 6afc 	and.w	sl, sl, #2016	@ 0x7e0
 8018dee:	ea4c 0c0a 	orr.w	ip, ip, sl
 8018df2:	f820 c019 	strh.w	ip, [r0, r9, lsl #1]
 8018df6:	e7ae      	b.n	8018d56 <_ZN8touchgfx8LCD16bpp51TextureMapper_RGB565_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x228>
 8018df8:	b005      	add	sp, #20
 8018dfa:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}

08018dfe <_ZN8touchgfx8LCD16bpp46TextureMapper_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff>:
 8018dfe:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8018e02:	b085      	sub	sp, #20
 8018e04:	9813      	ldr	r0, [sp, #76]	@ 0x4c
 8018e06:	9203      	str	r2, [sp, #12]
 8018e08:	f89d 205c 	ldrb.w	r2, [sp, #92]	@ 0x5c
 8018e0c:	9201      	str	r2, [sp, #4]
 8018e0e:	e9dd 2414 	ldrd	r2, r4, [sp, #80]	@ 0x50
 8018e12:	9100      	str	r1, [sp, #0]
 8018e14:	6841      	ldr	r1, [r0, #4]
 8018e16:	f8dd e058 	ldr.w	lr, [sp, #88]	@ 0x58
 8018e1a:	fb01 2404 	mla	r4, r1, r4, r2
 8018e1e:	6802      	ldr	r2, [r0, #0]
 8018e20:	eb02 0444 	add.w	r4, r2, r4, lsl #1
 8018e24:	f8de 2000 	ldr.w	r2, [lr]
 8018e28:	9202      	str	r2, [sp, #8]
 8018e2a:	9a01      	ldr	r2, [sp, #4]
 8018e2c:	43d6      	mvns	r6, r2
 8018e2e:	b2f6      	uxtb	r6, r6
 8018e30:	9a00      	ldr	r2, [sp, #0]
 8018e32:	2a00      	cmp	r2, #0
 8018e34:	dc03      	bgt.n	8018e3e <_ZN8touchgfx8LCD16bpp46TextureMapper_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x40>
 8018e36:	9a03      	ldr	r2, [sp, #12]
 8018e38:	2a00      	cmp	r2, #0
 8018e3a:	f340 8124 	ble.w	8019086 <_ZN8touchgfx8LCD16bpp46TextureMapper_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x288>
 8018e3e:	9a0f      	ldr	r2, [sp, #60]	@ 0x3c
 8018e40:	f9be c008 	ldrsh.w	ip, [lr, #8]
 8018e44:	f9be 700c 	ldrsh.w	r7, [lr, #12]
 8018e48:	f502 4100 	add.w	r1, r2, #32768	@ 0x8000
 8018e4c:	9a10      	ldr	r2, [sp, #64]	@ 0x40
 8018e4e:	f502 4200 	add.w	r2, r2, #32768	@ 0x8000
 8018e52:	2b00      	cmp	r3, #0
 8018e54:	dd0e      	ble.n	8018e74 <_ZN8touchgfx8LCD16bpp46TextureMapper_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x76>
 8018e56:	1408      	asrs	r0, r1, #16
 8018e58:	d405      	bmi.n	8018e66 <_ZN8touchgfx8LCD16bpp46TextureMapper_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x68>
 8018e5a:	4560      	cmp	r0, ip
 8018e5c:	da03      	bge.n	8018e66 <_ZN8touchgfx8LCD16bpp46TextureMapper_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x68>
 8018e5e:	1410      	asrs	r0, r2, #16
 8018e60:	d401      	bmi.n	8018e66 <_ZN8touchgfx8LCD16bpp46TextureMapper_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x68>
 8018e62:	42b8      	cmp	r0, r7
 8018e64:	db07      	blt.n	8018e76 <_ZN8touchgfx8LCD16bpp46TextureMapper_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x78>
 8018e66:	9811      	ldr	r0, [sp, #68]	@ 0x44
 8018e68:	4401      	add	r1, r0
 8018e6a:	9812      	ldr	r0, [sp, #72]	@ 0x48
 8018e6c:	3b01      	subs	r3, #1
 8018e6e:	4402      	add	r2, r0
 8018e70:	3402      	adds	r4, #2
 8018e72:	e7ee      	b.n	8018e52 <_ZN8touchgfx8LCD16bpp46TextureMapper_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x54>
 8018e74:	d06e      	beq.n	8018f54 <_ZN8touchgfx8LCD16bpp46TextureMapper_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x156>
 8018e76:	9d11      	ldr	r5, [sp, #68]	@ 0x44
 8018e78:	1e58      	subs	r0, r3, #1
 8018e7a:	fb05 1500 	mla	r5, r5, r0, r1
 8018e7e:	142d      	asrs	r5, r5, #16
 8018e80:	d45c      	bmi.n	8018f3c <_ZN8touchgfx8LCD16bpp46TextureMapper_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x13e>
 8018e82:	4565      	cmp	r5, ip
 8018e84:	da5a      	bge.n	8018f3c <_ZN8touchgfx8LCD16bpp46TextureMapper_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x13e>
 8018e86:	9d12      	ldr	r5, [sp, #72]	@ 0x48
 8018e88:	fb05 2000 	mla	r0, r5, r0, r2
 8018e8c:	1400      	asrs	r0, r0, #16
 8018e8e:	d455      	bmi.n	8018f3c <_ZN8touchgfx8LCD16bpp46TextureMapper_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x13e>
 8018e90:	42b8      	cmp	r0, r7
 8018e92:	da53      	bge.n	8018f3c <_ZN8touchgfx8LCD16bpp46TextureMapper_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x13e>
 8018e94:	f8bd b004 	ldrh.w	fp, [sp, #4]
 8018e98:	4699      	mov	r9, r3
 8018e9a:	46a2      	mov	sl, r4
 8018e9c:	f1b9 0f00 	cmp.w	r9, #0
 8018ea0:	dd54      	ble.n	8018f4c <_ZN8touchgfx8LCD16bpp46TextureMapper_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x14e>
 8018ea2:	f9be 7008 	ldrsh.w	r7, [lr, #8]
 8018ea6:	140d      	asrs	r5, r1, #16
 8018ea8:	1410      	asrs	r0, r2, #16
 8018eaa:	fb07 5000 	mla	r0, r7, r0, r5
 8018eae:	9d02      	ldr	r5, [sp, #8]
 8018eb0:	f835 0010 	ldrh.w	r0, [r5, r0, lsl #1]
 8018eb4:	f8ba 5000 	ldrh.w	r5, [sl]
 8018eb8:	122f      	asrs	r7, r5, #8
 8018eba:	ea4f 2c20 	mov.w	ip, r0, asr #8
 8018ebe:	f007 07f8 	and.w	r7, r7, #248	@ 0xf8
 8018ec2:	fb17 f706 	smulbb	r7, r7, r6
 8018ec6:	ea4f 08e5 	mov.w	r8, r5, asr #3
 8018eca:	f00c 0cf8 	and.w	ip, ip, #248	@ 0xf8
 8018ece:	00ed      	lsls	r5, r5, #3
 8018ed0:	fb0c 7c0b 	mla	ip, ip, fp, r7
 8018ed4:	f008 08fc 	and.w	r8, r8, #252	@ 0xfc
 8018ed8:	10c7      	asrs	r7, r0, #3
 8018eda:	b2ed      	uxtb	r5, r5
 8018edc:	00c0      	lsls	r0, r0, #3
 8018ede:	fb18 f806 	smulbb	r8, r8, r6
 8018ee2:	fb15 f506 	smulbb	r5, r5, r6
 8018ee6:	f007 07fc 	and.w	r7, r7, #252	@ 0xfc
 8018eea:	b2c0      	uxtb	r0, r0
 8018eec:	fa1f fc8c 	uxth.w	ip, ip
 8018ef0:	fb07 870b 	mla	r7, r7, fp, r8
 8018ef4:	fb00 500b 	mla	r0, r0, fp, r5
 8018ef8:	b280      	uxth	r0, r0
 8018efa:	b2bf      	uxth	r7, r7
 8018efc:	f10c 0501 	add.w	r5, ip, #1
 8018f00:	eb05 2c1c 	add.w	ip, r5, ip, lsr #8
 8018f04:	f107 0801 	add.w	r8, r7, #1
 8018f08:	1c45      	adds	r5, r0, #1
 8018f0a:	eb05 2510 	add.w	r5, r5, r0, lsr #8
 8018f0e:	eb08 2817 	add.w	r8, r8, r7, lsr #8
 8018f12:	9811      	ldr	r0, [sp, #68]	@ 0x44
 8018f14:	f40c 4c78 	and.w	ip, ip, #63488	@ 0xf800
 8018f18:	f3c5 25c4 	ubfx	r5, r5, #11, #5
 8018f1c:	ea4f 1858 	mov.w	r8, r8, lsr #5
 8018f20:	ea45 0c0c 	orr.w	ip, r5, ip
 8018f24:	f408 68fc 	and.w	r8, r8, #2016	@ 0x7e0
 8018f28:	4401      	add	r1, r0
 8018f2a:	9812      	ldr	r0, [sp, #72]	@ 0x48
 8018f2c:	ea4c 0c08 	orr.w	ip, ip, r8
 8018f30:	f82a cb02 	strh.w	ip, [sl], #2
 8018f34:	4402      	add	r2, r0
 8018f36:	f109 39ff 	add.w	r9, r9, #4294967295
 8018f3a:	e7af      	b.n	8018e9c <_ZN8touchgfx8LCD16bpp46TextureMapper_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x9e>
 8018f3c:	f8bd a004 	ldrh.w	sl, [sp, #4]
 8018f40:	f04f 0800 	mov.w	r8, #0
 8018f44:	eb03 0008 	add.w	r0, r3, r8
 8018f48:	2800      	cmp	r0, #0
 8018f4a:	dc41      	bgt.n	8018fd0 <_ZN8touchgfx8LCD16bpp46TextureMapper_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1d2>
 8018f4c:	ea23 73e3 	bic.w	r3, r3, r3, asr #31
 8018f50:	eb04 0443 	add.w	r4, r4, r3, lsl #1
 8018f54:	9b00      	ldr	r3, [sp, #0]
 8018f56:	2b00      	cmp	r3, #0
 8018f58:	f340 8095 	ble.w	8019086 <_ZN8touchgfx8LCD16bpp46TextureMapper_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x288>
 8018f5c:	ee30 0a04 	vadd.f32	s0, s0, s8
 8018f60:	eeb7 7a00 	vmov.f32	s14, #112	@ 0x3f800000  1.0
 8018f64:	eec7 7a00 	vdiv.f32	s15, s14, s0
 8018f68:	9b0e      	ldr	r3, [sp, #56]	@ 0x38
 8018f6a:	ee70 0aa4 	vadd.f32	s1, s1, s9
 8018f6e:	ee31 1a05 	vadd.f32	s2, s2, s10
 8018f72:	ee20 7aa7 	vmul.f32	s14, s1, s15
 8018f76:	eef0 6a62 	vmov.f32	s13, s5
 8018f7a:	ee61 7a27 	vmul.f32	s15, s2, s15
 8018f7e:	eefe 6ac8 	vcvt.s32.f32	s13, s13, #16
 8018f82:	ee77 2a62 	vsub.f32	s5, s14, s5
 8018f86:	edcd 6a0f 	vstr	s13, [sp, #60]	@ 0x3c
 8018f8a:	eefe 2ac8 	vcvt.s32.f32	s5, s5, #16
 8018f8e:	eef0 6a43 	vmov.f32	s13, s6
 8018f92:	ee37 3ac3 	vsub.f32	s6, s15, s6
 8018f96:	ee12 2a90 	vmov	r2, s5
 8018f9a:	eebe 3ac8 	vcvt.s32.f32	s6, s6, #16
 8018f9e:	fb92 f3f3 	sdiv	r3, r2, r3
 8018fa2:	ee13 2a10 	vmov	r2, s6
 8018fa6:	9311      	str	r3, [sp, #68]	@ 0x44
 8018fa8:	9b0e      	ldr	r3, [sp, #56]	@ 0x38
 8018faa:	fb92 f3f3 	sdiv	r3, r2, r3
 8018fae:	9312      	str	r3, [sp, #72]	@ 0x48
 8018fb0:	9b00      	ldr	r3, [sp, #0]
 8018fb2:	9a03      	ldr	r2, [sp, #12]
 8018fb4:	eefe 6ac8 	vcvt.s32.f32	s13, s13, #16
 8018fb8:	3b01      	subs	r3, #1
 8018fba:	9300      	str	r3, [sp, #0]
 8018fbc:	edcd 6a10 	vstr	s13, [sp, #64]	@ 0x40
 8018fc0:	9b0e      	ldr	r3, [sp, #56]	@ 0x38
 8018fc2:	eeb0 3a67 	vmov.f32	s6, s15
 8018fc6:	bf08      	it	eq
 8018fc8:	4613      	moveq	r3, r2
 8018fca:	eef0 2a47 	vmov.f32	s5, s14
 8018fce:	e72f      	b.n	8018e30 <_ZN8touchgfx8LCD16bpp46TextureMapper_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x32>
 8018fd0:	140f      	asrs	r7, r1, #16
 8018fd2:	d451      	bmi.n	8019078 <_ZN8touchgfx8LCD16bpp46TextureMapper_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x27a>
 8018fd4:	f8de 5008 	ldr.w	r5, [lr, #8]
 8018fd8:	42bd      	cmp	r5, r7
 8018fda:	dd4d      	ble.n	8019078 <_ZN8touchgfx8LCD16bpp46TextureMapper_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x27a>
 8018fdc:	ea5f 4c22 	movs.w	ip, r2, asr #16
 8018fe0:	d44a      	bmi.n	8019078 <_ZN8touchgfx8LCD16bpp46TextureMapper_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x27a>
 8018fe2:	f8de 000c 	ldr.w	r0, [lr, #12]
 8018fe6:	4560      	cmp	r0, ip
 8018fe8:	dd46      	ble.n	8019078 <_ZN8touchgfx8LCD16bpp46TextureMapper_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x27a>
 8018fea:	b22d      	sxth	r5, r5
 8018fec:	fb0c 7505 	mla	r5, ip, r5, r7
 8018ff0:	9802      	ldr	r0, [sp, #8]
 8018ff2:	f830 0015 	ldrh.w	r0, [r0, r5, lsl #1]
 8018ff6:	f06f 0501 	mvn.w	r5, #1
 8018ffa:	fb05 fb08 	mul.w	fp, r5, r8
 8018ffe:	ea4f 2c20 	mov.w	ip, r0, asr #8
 8019002:	f834 500b 	ldrh.w	r5, [r4, fp]
 8019006:	122f      	asrs	r7, r5, #8
 8019008:	f007 07f8 	and.w	r7, r7, #248	@ 0xf8
 801900c:	fb17 f706 	smulbb	r7, r7, r6
 8019010:	ea4f 09e5 	mov.w	r9, r5, asr #3
 8019014:	f00c 0cf8 	and.w	ip, ip, #248	@ 0xf8
 8019018:	00ed      	lsls	r5, r5, #3
 801901a:	fb0c 7c0a 	mla	ip, ip, sl, r7
 801901e:	f009 09fc 	and.w	r9, r9, #252	@ 0xfc
 8019022:	10c7      	asrs	r7, r0, #3
 8019024:	b2ed      	uxtb	r5, r5
 8019026:	00c0      	lsls	r0, r0, #3
 8019028:	fb19 f906 	smulbb	r9, r9, r6
 801902c:	fb15 f506 	smulbb	r5, r5, r6
 8019030:	f007 07fc 	and.w	r7, r7, #252	@ 0xfc
 8019034:	b2c0      	uxtb	r0, r0
 8019036:	fa1f fc8c 	uxth.w	ip, ip
 801903a:	fb07 970a 	mla	r7, r7, sl, r9
 801903e:	fb00 500a 	mla	r0, r0, sl, r5
 8019042:	b2bf      	uxth	r7, r7
 8019044:	b280      	uxth	r0, r0
 8019046:	f10c 0501 	add.w	r5, ip, #1
 801904a:	eb05 2c1c 	add.w	ip, r5, ip, lsr #8
 801904e:	f107 0901 	add.w	r9, r7, #1
 8019052:	1c45      	adds	r5, r0, #1
 8019054:	eb05 2510 	add.w	r5, r5, r0, lsr #8
 8019058:	eb09 2917 	add.w	r9, r9, r7, lsr #8
 801905c:	f40c 4c78 	and.w	ip, ip, #63488	@ 0xf800
 8019060:	f3c5 25c4 	ubfx	r5, r5, #11, #5
 8019064:	ea4f 1959 	mov.w	r9, r9, lsr #5
 8019068:	ea45 0c0c 	orr.w	ip, r5, ip
 801906c:	f409 69fc 	and.w	r9, r9, #2016	@ 0x7e0
 8019070:	ea4c 0c09 	orr.w	ip, ip, r9
 8019074:	f824 c00b 	strh.w	ip, [r4, fp]
 8019078:	9811      	ldr	r0, [sp, #68]	@ 0x44
 801907a:	4401      	add	r1, r0
 801907c:	9812      	ldr	r0, [sp, #72]	@ 0x48
 801907e:	f108 38ff 	add.w	r8, r8, #4294967295
 8019082:	4402      	add	r2, r0
 8019084:	e75e      	b.n	8018f44 <_ZN8touchgfx8LCD16bpp46TextureMapper_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x146>
 8019086:	b005      	add	sp, #20
 8019088:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}

0801908c <_ZN8touchgfx8LCD16bpp48TextureMapper_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff>:
 801908c:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8019090:	b085      	sub	sp, #20
 8019092:	4693      	mov	fp, r2
 8019094:	9e13      	ldr	r6, [sp, #76]	@ 0x4c
 8019096:	9d16      	ldr	r5, [sp, #88]	@ 0x58
 8019098:	6870      	ldr	r0, [r6, #4]
 801909a:	9101      	str	r1, [sp, #4]
 801909c:	e9dd 2414 	ldrd	r2, r4, [sp, #80]	@ 0x50
 80190a0:	fb00 2404 	mla	r4, r0, r4, r2
 80190a4:	6832      	ldr	r2, [r6, #0]
 80190a6:	e9dd ec11 	ldrd	lr, ip, [sp, #68]	@ 0x44
 80190aa:	eb02 0444 	add.w	r4, r2, r4, lsl #1
 80190ae:	682a      	ldr	r2, [r5, #0]
 80190b0:	9202      	str	r2, [sp, #8]
 80190b2:	eef7 6a00 	vmov.f32	s13, #112	@ 0x3f800000  1.0
 80190b6:	9a01      	ldr	r2, [sp, #4]
 80190b8:	2a00      	cmp	r2, #0
 80190ba:	dc03      	bgt.n	80190c4 <_ZN8touchgfx8LCD16bpp48TextureMapper_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x38>
 80190bc:	f1bb 0f00 	cmp.w	fp, #0
 80190c0:	f340 809a 	ble.w	80191f8 <_ZN8touchgfx8LCD16bpp48TextureMapper_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x16c>
 80190c4:	9a0f      	ldr	r2, [sp, #60]	@ 0x3c
 80190c6:	f9b5 9008 	ldrsh.w	r9, [r5, #8]
 80190ca:	f9b5 800c 	ldrsh.w	r8, [r5, #12]
 80190ce:	f502 4000 	add.w	r0, r2, #32768	@ 0x8000
 80190d2:	9a10      	ldr	r2, [sp, #64]	@ 0x40
 80190d4:	f502 4200 	add.w	r2, r2, #32768	@ 0x8000
 80190d8:	2b00      	cmp	r3, #0
 80190da:	dd0c      	ble.n	80190f6 <_ZN8touchgfx8LCD16bpp48TextureMapper_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x6a>
 80190dc:	1406      	asrs	r6, r0, #16
 80190de:	d405      	bmi.n	80190ec <_ZN8touchgfx8LCD16bpp48TextureMapper_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x60>
 80190e0:	454e      	cmp	r6, r9
 80190e2:	da03      	bge.n	80190ec <_ZN8touchgfx8LCD16bpp48TextureMapper_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x60>
 80190e4:	1416      	asrs	r6, r2, #16
 80190e6:	d401      	bmi.n	80190ec <_ZN8touchgfx8LCD16bpp48TextureMapper_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x60>
 80190e8:	4546      	cmp	r6, r8
 80190ea:	db05      	blt.n	80190f8 <_ZN8touchgfx8LCD16bpp48TextureMapper_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x6c>
 80190ec:	4470      	add	r0, lr
 80190ee:	4462      	add	r2, ip
 80190f0:	3b01      	subs	r3, #1
 80190f2:	3402      	adds	r4, #2
 80190f4:	e7f0      	b.n	80190d8 <_ZN8touchgfx8LCD16bpp48TextureMapper_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x4c>
 80190f6:	d00f      	beq.n	8019118 <_ZN8touchgfx8LCD16bpp48TextureMapper_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x8c>
 80190f8:	1e5e      	subs	r6, r3, #1
 80190fa:	fb0e 0706 	mla	r7, lr, r6, r0
 80190fe:	143f      	asrs	r7, r7, #16
 8019100:	d541      	bpl.n	8019186 <_ZN8touchgfx8LCD16bpp48TextureMapper_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xfa>
 8019102:	eb04 0643 	add.w	r6, r4, r3, lsl #1
 8019106:	4698      	mov	r8, r3
 8019108:	9603      	str	r6, [sp, #12]
 801910a:	f1b8 0f00 	cmp.w	r8, #0
 801910e:	dc56      	bgt.n	80191be <_ZN8touchgfx8LCD16bpp48TextureMapper_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x132>
 8019110:	ea23 73e3 	bic.w	r3, r3, r3, asr #31
 8019114:	eb04 0443 	add.w	r4, r4, r3, lsl #1
 8019118:	9b01      	ldr	r3, [sp, #4]
 801911a:	2b00      	cmp	r3, #0
 801911c:	dd6c      	ble.n	80191f8 <_ZN8touchgfx8LCD16bpp48TextureMapper_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x16c>
 801911e:	ee30 0a04 	vadd.f32	s0, s0, s8
 8019122:	ee70 0aa4 	vadd.f32	s1, s1, s9
 8019126:	eec6 7a80 	vdiv.f32	s15, s13, s0
 801912a:	9b0e      	ldr	r3, [sp, #56]	@ 0x38
 801912c:	ee31 1a05 	vadd.f32	s2, s2, s10
 8019130:	ee20 7aa7 	vmul.f32	s14, s1, s15
 8019134:	eeb0 6a62 	vmov.f32	s12, s5
 8019138:	ee61 7a27 	vmul.f32	s15, s2, s15
 801913c:	eebe 6ac8 	vcvt.s32.f32	s12, s12, #16
 8019140:	ee77 2a62 	vsub.f32	s5, s14, s5
 8019144:	ed8d 6a0f 	vstr	s12, [sp, #60]	@ 0x3c
 8019148:	eefe 2ac8 	vcvt.s32.f32	s5, s5, #16
 801914c:	eeb0 6a43 	vmov.f32	s12, s6
 8019150:	ee37 3ac3 	vsub.f32	s6, s15, s6
 8019154:	ee12 2a90 	vmov	r2, s5
 8019158:	eebe 3ac8 	vcvt.s32.f32	s6, s6, #16
 801915c:	fb92 fef3 	sdiv	lr, r2, r3
 8019160:	ee13 2a10 	vmov	r2, s6
 8019164:	fb92 fcf3 	sdiv	ip, r2, r3
 8019168:	9b01      	ldr	r3, [sp, #4]
 801916a:	eebe 6ac8 	vcvt.s32.f32	s12, s12, #16
 801916e:	3b01      	subs	r3, #1
 8019170:	9301      	str	r3, [sp, #4]
 8019172:	ed8d 6a10 	vstr	s12, [sp, #64]	@ 0x40
 8019176:	9b0e      	ldr	r3, [sp, #56]	@ 0x38
 8019178:	eeb0 3a67 	vmov.f32	s6, s15
 801917c:	bf08      	it	eq
 801917e:	465b      	moveq	r3, fp
 8019180:	eef0 2a47 	vmov.f32	s5, s14
 8019184:	e797      	b.n	80190b6 <_ZN8touchgfx8LCD16bpp48TextureMapper_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2a>
 8019186:	454f      	cmp	r7, r9
 8019188:	dabb      	bge.n	8019102 <_ZN8touchgfx8LCD16bpp48TextureMapper_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x76>
 801918a:	fb0c 2606 	mla	r6, ip, r6, r2
 801918e:	1436      	asrs	r6, r6, #16
 8019190:	d4b7      	bmi.n	8019102 <_ZN8touchgfx8LCD16bpp48TextureMapper_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x76>
 8019192:	4546      	cmp	r6, r8
 8019194:	dab5      	bge.n	8019102 <_ZN8touchgfx8LCD16bpp48TextureMapper_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x76>
 8019196:	461e      	mov	r6, r3
 8019198:	46a0      	mov	r8, r4
 801919a:	2e00      	cmp	r6, #0
 801919c:	ddb8      	ble.n	8019110 <_ZN8touchgfx8LCD16bpp48TextureMapper_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x84>
 801919e:	f9b5 a008 	ldrsh.w	sl, [r5, #8]
 80191a2:	9902      	ldr	r1, [sp, #8]
 80191a4:	1417      	asrs	r7, r2, #16
 80191a6:	ea4f 4920 	mov.w	r9, r0, asr #16
 80191aa:	fb0a 9707 	mla	r7, sl, r7, r9
 80191ae:	4470      	add	r0, lr
 80191b0:	f831 7017 	ldrh.w	r7, [r1, r7, lsl #1]
 80191b4:	f828 7b02 	strh.w	r7, [r8], #2
 80191b8:	4462      	add	r2, ip
 80191ba:	3e01      	subs	r6, #1
 80191bc:	e7ed      	b.n	801919a <_ZN8touchgfx8LCD16bpp48TextureMapper_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x10e>
 80191be:	ea5f 4920 	movs.w	r9, r0, asr #16
 80191c2:	d414      	bmi.n	80191ee <_ZN8touchgfx8LCD16bpp48TextureMapper_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x162>
 80191c4:	68ae      	ldr	r6, [r5, #8]
 80191c6:	454e      	cmp	r6, r9
 80191c8:	dd11      	ble.n	80191ee <_ZN8touchgfx8LCD16bpp48TextureMapper_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x162>
 80191ca:	ea5f 4a22 	movs.w	sl, r2, asr #16
 80191ce:	d40e      	bmi.n	80191ee <_ZN8touchgfx8LCD16bpp48TextureMapper_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x162>
 80191d0:	68ef      	ldr	r7, [r5, #12]
 80191d2:	4557      	cmp	r7, sl
 80191d4:	dd0b      	ble.n	80191ee <_ZN8touchgfx8LCD16bpp48TextureMapper_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x162>
 80191d6:	b236      	sxth	r6, r6
 80191d8:	fb0a 9606 	mla	r6, sl, r6, r9
 80191dc:	9f02      	ldr	r7, [sp, #8]
 80191de:	f06f 0101 	mvn.w	r1, #1
 80191e2:	f837 7016 	ldrh.w	r7, [r7, r6, lsl #1]
 80191e6:	fb01 f608 	mul.w	r6, r1, r8
 80191ea:	9903      	ldr	r1, [sp, #12]
 80191ec:	538f      	strh	r7, [r1, r6]
 80191ee:	4470      	add	r0, lr
 80191f0:	4462      	add	r2, ip
 80191f2:	f108 38ff 	add.w	r8, r8, #4294967295
 80191f6:	e788      	b.n	801910a <_ZN8touchgfx8LCD16bpp48TextureMapper_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x7e>
 80191f8:	b005      	add	sp, #20
 80191fa:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}

080191fe <_ZN8touchgfx8LCD16bpp51TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff>:
 80191fe:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8019202:	b087      	sub	sp, #28
 8019204:	468b      	mov	fp, r1
 8019206:	9815      	ldr	r0, [sp, #84]	@ 0x54
 8019208:	9203      	str	r2, [sp, #12]
 801920a:	f89d 2064 	ldrb.w	r2, [sp, #100]	@ 0x64
 801920e:	9204      	str	r2, [sp, #16]
 8019210:	e9dd 2516 	ldrd	r2, r5, [sp, #88]	@ 0x58
 8019214:	6841      	ldr	r1, [r0, #4]
 8019216:	f8dd 9060 	ldr.w	r9, [sp, #96]	@ 0x60
 801921a:	fb01 2505 	mla	r5, r1, r5, r2
 801921e:	6802      	ldr	r2, [r0, #0]
 8019220:	eb02 0545 	add.w	r5, r2, r5, lsl #1
 8019224:	f8d9 2000 	ldr.w	r2, [r9]
 8019228:	9201      	str	r2, [sp, #4]
 801922a:	eef7 6a00 	vmov.f32	s13, #112	@ 0x3f800000  1.0
 801922e:	f1bb 0f00 	cmp.w	fp, #0
 8019232:	dc03      	bgt.n	801923c <_ZN8touchgfx8LCD16bpp51TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3e>
 8019234:	9a03      	ldr	r2, [sp, #12]
 8019236:	2a00      	cmp	r2, #0
 8019238:	f340 8159 	ble.w	80194ee <_ZN8touchgfx8LCD16bpp51TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2f0>
 801923c:	9a11      	ldr	r2, [sp, #68]	@ 0x44
 801923e:	f9b9 7008 	ldrsh.w	r7, [r9, #8]
 8019242:	f9b9 600c 	ldrsh.w	r6, [r9, #12]
 8019246:	f502 4000 	add.w	r0, r2, #32768	@ 0x8000
 801924a:	9a12      	ldr	r2, [sp, #72]	@ 0x48
 801924c:	f502 4100 	add.w	r1, r2, #32768	@ 0x8000
 8019250:	2b00      	cmp	r3, #0
 8019252:	dd0e      	ble.n	8019272 <_ZN8touchgfx8LCD16bpp51TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x74>
 8019254:	1402      	asrs	r2, r0, #16
 8019256:	d405      	bmi.n	8019264 <_ZN8touchgfx8LCD16bpp51TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x66>
 8019258:	42ba      	cmp	r2, r7
 801925a:	da03      	bge.n	8019264 <_ZN8touchgfx8LCD16bpp51TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x66>
 801925c:	140a      	asrs	r2, r1, #16
 801925e:	d401      	bmi.n	8019264 <_ZN8touchgfx8LCD16bpp51TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x66>
 8019260:	42b2      	cmp	r2, r6
 8019262:	db07      	blt.n	8019274 <_ZN8touchgfx8LCD16bpp51TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x76>
 8019264:	9a13      	ldr	r2, [sp, #76]	@ 0x4c
 8019266:	4410      	add	r0, r2
 8019268:	9a14      	ldr	r2, [sp, #80]	@ 0x50
 801926a:	3b01      	subs	r3, #1
 801926c:	4411      	add	r1, r2
 801926e:	3502      	adds	r5, #2
 8019270:	e7ee      	b.n	8019250 <_ZN8touchgfx8LCD16bpp51TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x52>
 8019272:	d017      	beq.n	80192a4 <_ZN8touchgfx8LCD16bpp51TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xa6>
 8019274:	9c13      	ldr	r4, [sp, #76]	@ 0x4c
 8019276:	1e5a      	subs	r2, r3, #1
 8019278:	fb04 0402 	mla	r4, r4, r2, r0
 801927c:	1424      	asrs	r4, r4, #16
 801927e:	d409      	bmi.n	8019294 <_ZN8touchgfx8LCD16bpp51TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x96>
 8019280:	42bc      	cmp	r4, r7
 8019282:	da07      	bge.n	8019294 <_ZN8touchgfx8LCD16bpp51TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x96>
 8019284:	9c14      	ldr	r4, [sp, #80]	@ 0x50
 8019286:	fb04 1202 	mla	r2, r4, r2, r1
 801928a:	1412      	asrs	r2, r2, #16
 801928c:	d402      	bmi.n	8019294 <_ZN8touchgfx8LCD16bpp51TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x96>
 801928e:	42b2      	cmp	r2, r6
 8019290:	f2c0 80bf 	blt.w	8019412 <_ZN8touchgfx8LCD16bpp51TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x214>
 8019294:	2700      	movs	r7, #0
 8019296:	19da      	adds	r2, r3, r7
 8019298:	2a00      	cmp	r2, #0
 801929a:	dc3e      	bgt.n	801931a <_ZN8touchgfx8LCD16bpp51TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x11c>
 801929c:	ea23 73e3 	bic.w	r3, r3, r3, asr #31
 80192a0:	eb05 0543 	add.w	r5, r5, r3, lsl #1
 80192a4:	f1bb 0f00 	cmp.w	fp, #0
 80192a8:	f340 8121 	ble.w	80194ee <_ZN8touchgfx8LCD16bpp51TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2f0>
 80192ac:	ee30 0a04 	vadd.f32	s0, s0, s8
 80192b0:	ee70 0aa4 	vadd.f32	s1, s1, s9
 80192b4:	eec6 7a80 	vdiv.f32	s15, s13, s0
 80192b8:	9b10      	ldr	r3, [sp, #64]	@ 0x40
 80192ba:	f1bb 0b01 	subs.w	fp, fp, #1
 80192be:	ee31 1a05 	vadd.f32	s2, s2, s10
 80192c2:	ee20 7aa7 	vmul.f32	s14, s1, s15
 80192c6:	eeb0 6a62 	vmov.f32	s12, s5
 80192ca:	ee61 7a27 	vmul.f32	s15, s2, s15
 80192ce:	eebe 6ac8 	vcvt.s32.f32	s12, s12, #16
 80192d2:	ee77 2a62 	vsub.f32	s5, s14, s5
 80192d6:	ed8d 6a11 	vstr	s12, [sp, #68]	@ 0x44
 80192da:	eefe 2ac8 	vcvt.s32.f32	s5, s5, #16
 80192de:	eeb0 6a43 	vmov.f32	s12, s6
 80192e2:	ee37 3ac3 	vsub.f32	s6, s15, s6
 80192e6:	ee12 2a90 	vmov	r2, s5
 80192ea:	eebe 3ac8 	vcvt.s32.f32	s6, s6, #16
 80192ee:	fb92 f3f3 	sdiv	r3, r2, r3
 80192f2:	ee13 2a10 	vmov	r2, s6
 80192f6:	eebe 6ac8 	vcvt.s32.f32	s12, s12, #16
 80192fa:	9313      	str	r3, [sp, #76]	@ 0x4c
 80192fc:	9b10      	ldr	r3, [sp, #64]	@ 0x40
 80192fe:	fb92 f3f3 	sdiv	r3, r2, r3
 8019302:	9a03      	ldr	r2, [sp, #12]
 8019304:	9314      	str	r3, [sp, #80]	@ 0x50
 8019306:	ed8d 6a12 	vstr	s12, [sp, #72]	@ 0x48
 801930a:	9b10      	ldr	r3, [sp, #64]	@ 0x40
 801930c:	eeb0 3a67 	vmov.f32	s6, s15
 8019310:	bf08      	it	eq
 8019312:	4613      	moveq	r3, r2
 8019314:	eef0 2a47 	vmov.f32	s5, s14
 8019318:	e789      	b.n	801922e <_ZN8touchgfx8LCD16bpp51TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x30>
 801931a:	1406      	asrs	r6, r0, #16
 801931c:	d42d      	bmi.n	801937a <_ZN8touchgfx8LCD16bpp51TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x17c>
 801931e:	f8d9 4008 	ldr.w	r4, [r9, #8]
 8019322:	42b4      	cmp	r4, r6
 8019324:	dd29      	ble.n	801937a <_ZN8touchgfx8LCD16bpp51TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x17c>
 8019326:	ea5f 4c21 	movs.w	ip, r1, asr #16
 801932a:	d426      	bmi.n	801937a <_ZN8touchgfx8LCD16bpp51TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x17c>
 801932c:	f8d9 200c 	ldr.w	r2, [r9, #12]
 8019330:	4562      	cmp	r2, ip
 8019332:	dd22      	ble.n	801937a <_ZN8touchgfx8LCD16bpp51TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x17c>
 8019334:	b224      	sxth	r4, r4
 8019336:	9a01      	ldr	r2, [sp, #4]
 8019338:	fb0c 6404 	mla	r4, ip, r4, r6
 801933c:	f852 4024 	ldr.w	r4, [r2, r4, lsl #2]
 8019340:	0e22      	lsrs	r2, r4, #24
 8019342:	d01a      	beq.n	801937a <_ZN8touchgfx8LCD16bpp51TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x17c>
 8019344:	9e04      	ldr	r6, [sp, #16]
 8019346:	4372      	muls	r2, r6
 8019348:	1c56      	adds	r6, r2, #1
 801934a:	eb06 2222 	add.w	r2, r6, r2, asr #8
 801934e:	1212      	asrs	r2, r2, #8
 8019350:	0a26      	lsrs	r6, r4, #8
 8019352:	2aff      	cmp	r2, #255	@ 0xff
 8019354:	9605      	str	r6, [sp, #20]
 8019356:	d116      	bne.n	8019386 <_ZN8touchgfx8LCD16bpp51TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x188>
 8019358:	f06f 0201 	mvn.w	r2, #1
 801935c:	fb02 fc07 	mul.w	ip, r2, r7
 8019360:	f426 66ff 	bic.w	r6, r6, #2040	@ 0x7f8
 8019364:	0962      	lsrs	r2, r4, #5
 8019366:	f402 62fc 	and.w	r2, r2, #2016	@ 0x7e0
 801936a:	f026 0607 	bic.w	r6, r6, #7
 801936e:	4316      	orrs	r6, r2
 8019370:	f3c4 04c4 	ubfx	r4, r4, #3, #5
 8019374:	4326      	orrs	r6, r4
 8019376:	f825 600c 	strh.w	r6, [r5, ip]
 801937a:	9a13      	ldr	r2, [sp, #76]	@ 0x4c
 801937c:	4410      	add	r0, r2
 801937e:	9a14      	ldr	r2, [sp, #80]	@ 0x50
 8019380:	3f01      	subs	r7, #1
 8019382:	4411      	add	r1, r2
 8019384:	e787      	b.n	8019296 <_ZN8touchgfx8LCD16bpp51TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x98>
 8019386:	f06f 0601 	mvn.w	r6, #1
 801938a:	437e      	muls	r6, r7
 801938c:	fa1f fa82 	uxth.w	sl, r2
 8019390:	f835 8006 	ldrh.w	r8, [r5, r6]
 8019394:	9602      	str	r6, [sp, #8]
 8019396:	ea4f 2e28 	mov.w	lr, r8, asr #8
 801939a:	f3c4 4c07 	ubfx	ip, r4, #16, #8
 801939e:	43d2      	mvns	r2, r2
 80193a0:	b2d2      	uxtb	r2, r2
 80193a2:	fb1c fc0a 	smulbb	ip, ip, sl
 80193a6:	f00e 0ef8 	and.w	lr, lr, #248	@ 0xf8
 80193aa:	fb0e ce02 	mla	lr, lr, r2, ip
 80193ae:	b2e4      	uxtb	r4, r4
 80193b0:	ea4f 0ce8 	mov.w	ip, r8, asr #3
 80193b4:	ea4f 08c8 	mov.w	r8, r8, lsl #3
 80193b8:	f89d 6014 	ldrb.w	r6, [sp, #20]
 80193bc:	fa5f f888 	uxtb.w	r8, r8
 80193c0:	fb14 f40a 	smulbb	r4, r4, sl
 80193c4:	fb08 4402 	mla	r4, r8, r2, r4
 80193c8:	fa1f fe8e 	uxth.w	lr, lr
 80193cc:	fb16 f60a 	smulbb	r6, r6, sl
 80193d0:	b2a4      	uxth	r4, r4
 80193d2:	f00c 0cfc 	and.w	ip, ip, #252	@ 0xfc
 80193d6:	fb0c 6c02 	mla	ip, ip, r2, r6
 80193da:	f10e 0201 	add.w	r2, lr, #1
 80193de:	1c66      	adds	r6, r4, #1
 80193e0:	eb02 2e1e 	add.w	lr, r2, lr, lsr #8
 80193e4:	eb06 2614 	add.w	r6, r6, r4, lsr #8
 80193e8:	fa1f fc8c 	uxth.w	ip, ip
 80193ec:	f3c6 26c4 	ubfx	r6, r6, #11, #5
 80193f0:	f40e 4e78 	and.w	lr, lr, #63488	@ 0xf800
 80193f4:	ea46 0e0e 	orr.w	lr, r6, lr
 80193f8:	f10c 0601 	add.w	r6, ip, #1
 80193fc:	eb06 261c 	add.w	r6, r6, ip, lsr #8
 8019400:	0976      	lsrs	r6, r6, #5
 8019402:	f406 66fc 	and.w	r6, r6, #2016	@ 0x7e0
 8019406:	9a02      	ldr	r2, [sp, #8]
 8019408:	ea4e 0e06 	orr.w	lr, lr, r6
 801940c:	f825 e002 	strh.w	lr, [r5, r2]
 8019410:	e7b3      	b.n	801937a <_ZN8touchgfx8LCD16bpp51TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x17c>
 8019412:	f04f 0800 	mov.w	r8, #0
 8019416:	eba3 0208 	sub.w	r2, r3, r8
 801941a:	2a00      	cmp	r2, #0
 801941c:	f77f af3e 	ble.w	801929c <_ZN8touchgfx8LCD16bpp51TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x9e>
 8019420:	f9b9 6008 	ldrsh.w	r6, [r9, #8]
 8019424:	1404      	asrs	r4, r0, #16
 8019426:	140a      	asrs	r2, r1, #16
 8019428:	fb06 4202 	mla	r2, r6, r2, r4
 801942c:	9c01      	ldr	r4, [sp, #4]
 801942e:	f854 4022 	ldr.w	r4, [r4, r2, lsl #2]
 8019432:	0e22      	lsrs	r2, r4, #24
 8019434:	d016      	beq.n	8019464 <_ZN8touchgfx8LCD16bpp51TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x266>
 8019436:	9e04      	ldr	r6, [sp, #16]
 8019438:	4372      	muls	r2, r6
 801943a:	1c56      	adds	r6, r2, #1
 801943c:	eb06 2222 	add.w	r2, r6, r2, asr #8
 8019440:	1212      	asrs	r2, r2, #8
 8019442:	2aff      	cmp	r2, #255	@ 0xff
 8019444:	ea4f 2614 	mov.w	r6, r4, lsr #8
 8019448:	d113      	bne.n	8019472 <_ZN8touchgfx8LCD16bpp51TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x274>
 801944a:	0962      	lsrs	r2, r4, #5
 801944c:	f426 66ff 	bic.w	r6, r6, #2040	@ 0x7f8
 8019450:	f402 62fc 	and.w	r2, r2, #2016	@ 0x7e0
 8019454:	f026 0607 	bic.w	r6, r6, #7
 8019458:	4316      	orrs	r6, r2
 801945a:	f3c4 04c4 	ubfx	r4, r4, #3, #5
 801945e:	4326      	orrs	r6, r4
 8019460:	f825 6018 	strh.w	r6, [r5, r8, lsl #1]
 8019464:	9a13      	ldr	r2, [sp, #76]	@ 0x4c
 8019466:	4410      	add	r0, r2
 8019468:	9a14      	ldr	r2, [sp, #80]	@ 0x50
 801946a:	f108 0801 	add.w	r8, r8, #1
 801946e:	4411      	add	r1, r2
 8019470:	e7d1      	b.n	8019416 <_ZN8touchgfx8LCD16bpp51TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x218>
 8019472:	f835 e018 	ldrh.w	lr, [r5, r8, lsl #1]
 8019476:	fa1f fa82 	uxth.w	sl, r2
 801947a:	ea4f 2c2e 	mov.w	ip, lr, asr #8
 801947e:	f3c4 4707 	ubfx	r7, r4, #16, #8
 8019482:	43d2      	mvns	r2, r2
 8019484:	b2d2      	uxtb	r2, r2
 8019486:	fb17 f70a 	smulbb	r7, r7, sl
 801948a:	f00c 0cf8 	and.w	ip, ip, #248	@ 0xf8
 801948e:	fb0c 7c02 	mla	ip, ip, r2, r7
 8019492:	b2e4      	uxtb	r4, r4
 8019494:	ea4f 07ee 	mov.w	r7, lr, asr #3
 8019498:	ea4f 0ece 	mov.w	lr, lr, lsl #3
 801949c:	fa5f fe8e 	uxtb.w	lr, lr
 80194a0:	fb14 f40a 	smulbb	r4, r4, sl
 80194a4:	fb0e 4402 	mla	r4, lr, r2, r4
 80194a8:	b2f6      	uxtb	r6, r6
 80194aa:	fa1f fc8c 	uxth.w	ip, ip
 80194ae:	fb16 f60a 	smulbb	r6, r6, sl
 80194b2:	b2a4      	uxth	r4, r4
 80194b4:	f007 07fc 	and.w	r7, r7, #252	@ 0xfc
 80194b8:	fb07 6702 	mla	r7, r7, r2, r6
 80194bc:	f10c 0201 	add.w	r2, ip, #1
 80194c0:	1c66      	adds	r6, r4, #1
 80194c2:	eb02 2c1c 	add.w	ip, r2, ip, lsr #8
 80194c6:	eb06 2614 	add.w	r6, r6, r4, lsr #8
 80194ca:	b2bf      	uxth	r7, r7
 80194cc:	f3c6 26c4 	ubfx	r6, r6, #11, #5
 80194d0:	f40c 4c78 	and.w	ip, ip, #63488	@ 0xf800
 80194d4:	ea46 0c0c 	orr.w	ip, r6, ip
 80194d8:	1c7e      	adds	r6, r7, #1
 80194da:	eb06 2617 	add.w	r6, r6, r7, lsr #8
 80194de:	0976      	lsrs	r6, r6, #5
 80194e0:	f406 66fc 	and.w	r6, r6, #2016	@ 0x7e0
 80194e4:	ea4c 0c06 	orr.w	ip, ip, r6
 80194e8:	f825 c018 	strh.w	ip, [r5, r8, lsl #1]
 80194ec:	e7ba      	b.n	8019464 <_ZN8touchgfx8LCD16bpp51TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x266>
 80194ee:	b007      	add	sp, #28
 80194f0:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}

080194f4 <_ZN8touchgfx8LCD16bpp53TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff>:
 80194f4:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 80194f8:	b085      	sub	sp, #20
 80194fa:	468b      	mov	fp, r1
 80194fc:	9813      	ldr	r0, [sp, #76]	@ 0x4c
 80194fe:	9203      	str	r2, [sp, #12]
 8019500:	e9dd 2414 	ldrd	r2, r4, [sp, #80]	@ 0x50
 8019504:	6841      	ldr	r1, [r0, #4]
 8019506:	f8dd 8058 	ldr.w	r8, [sp, #88]	@ 0x58
 801950a:	fb01 2404 	mla	r4, r1, r4, r2
 801950e:	6802      	ldr	r2, [r0, #0]
 8019510:	eb02 0444 	add.w	r4, r2, r4, lsl #1
 8019514:	f8d8 2000 	ldr.w	r2, [r8]
 8019518:	9201      	str	r2, [sp, #4]
 801951a:	eef7 6a00 	vmov.f32	s13, #112	@ 0x3f800000  1.0
 801951e:	f1bb 0f00 	cmp.w	fp, #0
 8019522:	dc03      	bgt.n	801952c <_ZN8touchgfx8LCD16bpp53TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x38>
 8019524:	9a03      	ldr	r2, [sp, #12]
 8019526:	2a00      	cmp	r2, #0
 8019528:	f340 814f 	ble.w	80197ca <_ZN8touchgfx8LCD16bpp53TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2d6>
 801952c:	9a0f      	ldr	r2, [sp, #60]	@ 0x3c
 801952e:	f9b8 7008 	ldrsh.w	r7, [r8, #8]
 8019532:	f9b8 600c 	ldrsh.w	r6, [r8, #12]
 8019536:	f502 4100 	add.w	r1, r2, #32768	@ 0x8000
 801953a:	9a10      	ldr	r2, [sp, #64]	@ 0x40
 801953c:	f502 4200 	add.w	r2, r2, #32768	@ 0x8000
 8019540:	2b00      	cmp	r3, #0
 8019542:	dd0e      	ble.n	8019562 <_ZN8touchgfx8LCD16bpp53TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x6e>
 8019544:	1408      	asrs	r0, r1, #16
 8019546:	d405      	bmi.n	8019554 <_ZN8touchgfx8LCD16bpp53TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x60>
 8019548:	42b8      	cmp	r0, r7
 801954a:	da03      	bge.n	8019554 <_ZN8touchgfx8LCD16bpp53TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x60>
 801954c:	1410      	asrs	r0, r2, #16
 801954e:	d401      	bmi.n	8019554 <_ZN8touchgfx8LCD16bpp53TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x60>
 8019550:	42b0      	cmp	r0, r6
 8019552:	db07      	blt.n	8019564 <_ZN8touchgfx8LCD16bpp53TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x70>
 8019554:	9811      	ldr	r0, [sp, #68]	@ 0x44
 8019556:	4401      	add	r1, r0
 8019558:	9812      	ldr	r0, [sp, #72]	@ 0x48
 801955a:	3b01      	subs	r3, #1
 801955c:	4402      	add	r2, r0
 801955e:	3402      	adds	r4, #2
 8019560:	e7ee      	b.n	8019540 <_ZN8touchgfx8LCD16bpp53TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x4c>
 8019562:	d017      	beq.n	8019594 <_ZN8touchgfx8LCD16bpp53TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xa0>
 8019564:	9d11      	ldr	r5, [sp, #68]	@ 0x44
 8019566:	1e58      	subs	r0, r3, #1
 8019568:	fb05 1500 	mla	r5, r5, r0, r1
 801956c:	142d      	asrs	r5, r5, #16
 801956e:	d409      	bmi.n	8019584 <_ZN8touchgfx8LCD16bpp53TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x90>
 8019570:	42bd      	cmp	r5, r7
 8019572:	da07      	bge.n	8019584 <_ZN8touchgfx8LCD16bpp53TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x90>
 8019574:	9d12      	ldr	r5, [sp, #72]	@ 0x48
 8019576:	fb05 2000 	mla	r0, r5, r0, r2
 801957a:	1400      	asrs	r0, r0, #16
 801957c:	d402      	bmi.n	8019584 <_ZN8touchgfx8LCD16bpp53TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x90>
 801957e:	42b0      	cmp	r0, r6
 8019580:	f2c0 80ba 	blt.w	80196f8 <_ZN8touchgfx8LCD16bpp53TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x204>
 8019584:	2600      	movs	r6, #0
 8019586:	1998      	adds	r0, r3, r6
 8019588:	2800      	cmp	r0, #0
 801958a:	dc3e      	bgt.n	801960a <_ZN8touchgfx8LCD16bpp53TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x116>
 801958c:	ea23 73e3 	bic.w	r3, r3, r3, asr #31
 8019590:	eb04 0443 	add.w	r4, r4, r3, lsl #1
 8019594:	f1bb 0f00 	cmp.w	fp, #0
 8019598:	f340 8117 	ble.w	80197ca <_ZN8touchgfx8LCD16bpp53TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2d6>
 801959c:	ee30 0a04 	vadd.f32	s0, s0, s8
 80195a0:	ee70 0aa4 	vadd.f32	s1, s1, s9
 80195a4:	eec6 7a80 	vdiv.f32	s15, s13, s0
 80195a8:	9b0e      	ldr	r3, [sp, #56]	@ 0x38
 80195aa:	f1bb 0b01 	subs.w	fp, fp, #1
 80195ae:	ee31 1a05 	vadd.f32	s2, s2, s10
 80195b2:	ee20 7aa7 	vmul.f32	s14, s1, s15
 80195b6:	eeb0 6a62 	vmov.f32	s12, s5
 80195ba:	ee61 7a27 	vmul.f32	s15, s2, s15
 80195be:	eebe 6ac8 	vcvt.s32.f32	s12, s12, #16
 80195c2:	ee77 2a62 	vsub.f32	s5, s14, s5
 80195c6:	ed8d 6a0f 	vstr	s12, [sp, #60]	@ 0x3c
 80195ca:	eefe 2ac8 	vcvt.s32.f32	s5, s5, #16
 80195ce:	eeb0 6a43 	vmov.f32	s12, s6
 80195d2:	ee37 3ac3 	vsub.f32	s6, s15, s6
 80195d6:	ee12 2a90 	vmov	r2, s5
 80195da:	eebe 3ac8 	vcvt.s32.f32	s6, s6, #16
 80195de:	fb92 f3f3 	sdiv	r3, r2, r3
 80195e2:	ee13 2a10 	vmov	r2, s6
 80195e6:	eebe 6ac8 	vcvt.s32.f32	s12, s12, #16
 80195ea:	9311      	str	r3, [sp, #68]	@ 0x44
 80195ec:	9b0e      	ldr	r3, [sp, #56]	@ 0x38
 80195ee:	fb92 f3f3 	sdiv	r3, r2, r3
 80195f2:	9a03      	ldr	r2, [sp, #12]
 80195f4:	9312      	str	r3, [sp, #72]	@ 0x48
 80195f6:	ed8d 6a10 	vstr	s12, [sp, #64]	@ 0x40
 80195fa:	9b0e      	ldr	r3, [sp, #56]	@ 0x38
 80195fc:	eeb0 3a67 	vmov.f32	s6, s15
 8019600:	bf08      	it	eq
 8019602:	4613      	moveq	r3, r2
 8019604:	eef0 2a47 	vmov.f32	s5, s14
 8019608:	e789      	b.n	801951e <_ZN8touchgfx8LCD16bpp53TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2a>
 801960a:	140f      	asrs	r7, r1, #16
 801960c:	d424      	bmi.n	8019658 <_ZN8touchgfx8LCD16bpp53TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x164>
 801960e:	f8d8 5008 	ldr.w	r5, [r8, #8]
 8019612:	42bd      	cmp	r5, r7
 8019614:	dd20      	ble.n	8019658 <_ZN8touchgfx8LCD16bpp53TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x164>
 8019616:	ea5f 4c22 	movs.w	ip, r2, asr #16
 801961a:	d41d      	bmi.n	8019658 <_ZN8touchgfx8LCD16bpp53TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x164>
 801961c:	f8d8 000c 	ldr.w	r0, [r8, #12]
 8019620:	4560      	cmp	r0, ip
 8019622:	dd19      	ble.n	8019658 <_ZN8touchgfx8LCD16bpp53TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x164>
 8019624:	b22d      	sxth	r5, r5
 8019626:	fb0c 7505 	mla	r5, ip, r5, r7
 801962a:	9801      	ldr	r0, [sp, #4]
 801962c:	f850 0025 	ldr.w	r0, [r0, r5, lsl #2]
 8019630:	0e07      	lsrs	r7, r0, #24
 8019632:	2fff      	cmp	r7, #255	@ 0xff
 8019634:	d116      	bne.n	8019664 <_ZN8touchgfx8LCD16bpp53TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x170>
 8019636:	f06f 0501 	mvn.w	r5, #1
 801963a:	fb05 f706 	mul.w	r7, r5, r6
 801963e:	f2a5 75fe 	subw	r5, r5, #2046	@ 0x7fe
 8019642:	ea05 2c10 	and.w	ip, r5, r0, lsr #8
 8019646:	0945      	lsrs	r5, r0, #5
 8019648:	f405 65fc 	and.w	r5, r5, #2016	@ 0x7e0
 801964c:	ea4c 0505 	orr.w	r5, ip, r5
 8019650:	f3c0 00c4 	ubfx	r0, r0, #3, #5
 8019654:	4305      	orrs	r5, r0
 8019656:	53e5      	strh	r5, [r4, r7]
 8019658:	9811      	ldr	r0, [sp, #68]	@ 0x44
 801965a:	4401      	add	r1, r0
 801965c:	9812      	ldr	r0, [sp, #72]	@ 0x48
 801965e:	3e01      	subs	r6, #1
 8019660:	4402      	add	r2, r0
 8019662:	e790      	b.n	8019586 <_ZN8touchgfx8LCD16bpp53TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x92>
 8019664:	b2fd      	uxtb	r5, r7
 8019666:	2f00      	cmp	r7, #0
 8019668:	d0f6      	beq.n	8019658 <_ZN8touchgfx8LCD16bpp53TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x164>
 801966a:	f06f 0701 	mvn.w	r7, #1
 801966e:	4377      	muls	r7, r6
 8019670:	fa1f f985 	uxth.w	r9, r5
 8019674:	f834 e007 	ldrh.w	lr, [r4, r7]
 8019678:	9702      	str	r7, [sp, #8]
 801967a:	ea4f 2c2e 	mov.w	ip, lr, asr #8
 801967e:	f3c0 4707 	ubfx	r7, r0, #16, #8
 8019682:	43ed      	mvns	r5, r5
 8019684:	b2ed      	uxtb	r5, r5
 8019686:	fb17 f709 	smulbb	r7, r7, r9
 801968a:	f00c 0cf8 	and.w	ip, ip, #248	@ 0xf8
 801968e:	fb0c 7c05 	mla	ip, ip, r5, r7
 8019692:	f3c0 2a07 	ubfx	sl, r0, #8, #8
 8019696:	ea4f 07ee 	mov.w	r7, lr, asr #3
 801969a:	b2c0      	uxtb	r0, r0
 801969c:	ea4f 0ece 	mov.w	lr, lr, lsl #3
 80196a0:	fa5f fe8e 	uxtb.w	lr, lr
 80196a4:	fb10 f009 	smulbb	r0, r0, r9
 80196a8:	fb0e 0005 	mla	r0, lr, r5, r0
 80196ac:	b280      	uxth	r0, r0
 80196ae:	fa1f fc8c 	uxth.w	ip, ip
 80196b2:	fb1a fa09 	smulbb	sl, sl, r9
 80196b6:	f007 07fc 	and.w	r7, r7, #252	@ 0xfc
 80196ba:	fb07 a705 	mla	r7, r7, r5, sl
 80196be:	f100 0a01 	add.w	sl, r0, #1
 80196c2:	f10c 0501 	add.w	r5, ip, #1
 80196c6:	eb0a 2a10 	add.w	sl, sl, r0, lsr #8
 80196ca:	eb05 2c1c 	add.w	ip, r5, ip, lsr #8
 80196ce:	b2bf      	uxth	r7, r7
 80196d0:	f3ca 2ac4 	ubfx	sl, sl, #11, #5
 80196d4:	f40c 4c78 	and.w	ip, ip, #63488	@ 0xf800
 80196d8:	ea4a 0c0c 	orr.w	ip, sl, ip
 80196dc:	f107 0a01 	add.w	sl, r7, #1
 80196e0:	eb0a 2a17 	add.w	sl, sl, r7, lsr #8
 80196e4:	ea4f 1a5a 	mov.w	sl, sl, lsr #5
 80196e8:	f40a 6afc 	and.w	sl, sl, #2016	@ 0x7e0
 80196ec:	9802      	ldr	r0, [sp, #8]
 80196ee:	ea4c 0c0a 	orr.w	ip, ip, sl
 80196f2:	f824 c000 	strh.w	ip, [r4, r0]
 80196f6:	e7af      	b.n	8019658 <_ZN8touchgfx8LCD16bpp53TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x164>
 80196f8:	f04f 0e00 	mov.w	lr, #0
 80196fc:	eba3 000e 	sub.w	r0, r3, lr
 8019700:	2800      	cmp	r0, #0
 8019702:	f77f af43 	ble.w	801958c <_ZN8touchgfx8LCD16bpp53TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x98>
 8019706:	f9b8 6008 	ldrsh.w	r6, [r8, #8]
 801970a:	140d      	asrs	r5, r1, #16
 801970c:	1410      	asrs	r0, r2, #16
 801970e:	fb06 5000 	mla	r0, r6, r0, r5
 8019712:	9d01      	ldr	r5, [sp, #4]
 8019714:	f855 5020 	ldr.w	r5, [r5, r0, lsl #2]
 8019718:	0e2e      	lsrs	r6, r5, #24
 801971a:	2eff      	cmp	r6, #255	@ 0xff
 801971c:	d112      	bne.n	8019744 <_ZN8touchgfx8LCD16bpp53TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x250>
 801971e:	482c      	ldr	r0, [pc, #176]	@ (80197d0 <_ZN8touchgfx8LCD16bpp53TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2dc>)
 8019720:	ea00 2615 	and.w	r6, r0, r5, lsr #8
 8019724:	0968      	lsrs	r0, r5, #5
 8019726:	f400 60fc 	and.w	r0, r0, #2016	@ 0x7e0
 801972a:	4330      	orrs	r0, r6
 801972c:	f3c5 05c4 	ubfx	r5, r5, #3, #5
 8019730:	4328      	orrs	r0, r5
 8019732:	f824 001e 	strh.w	r0, [r4, lr, lsl #1]
 8019736:	9811      	ldr	r0, [sp, #68]	@ 0x44
 8019738:	4401      	add	r1, r0
 801973a:	9812      	ldr	r0, [sp, #72]	@ 0x48
 801973c:	f10e 0e01 	add.w	lr, lr, #1
 8019740:	4402      	add	r2, r0
 8019742:	e7db      	b.n	80196fc <_ZN8touchgfx8LCD16bpp53TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x208>
 8019744:	b2f0      	uxtb	r0, r6
 8019746:	2e00      	cmp	r6, #0
 8019748:	d0f5      	beq.n	8019736 <_ZN8touchgfx8LCD16bpp53TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x242>
 801974a:	f834 c01e 	ldrh.w	ip, [r4, lr, lsl #1]
 801974e:	fa1f f980 	uxth.w	r9, r0
 8019752:	ea4f 272c 	mov.w	r7, ip, asr #8
 8019756:	f3c5 4607 	ubfx	r6, r5, #16, #8
 801975a:	43c0      	mvns	r0, r0
 801975c:	b2c0      	uxtb	r0, r0
 801975e:	fb16 f609 	smulbb	r6, r6, r9
 8019762:	f007 07f8 	and.w	r7, r7, #248	@ 0xf8
 8019766:	fb07 6700 	mla	r7, r7, r0, r6
 801976a:	f3c5 2a07 	ubfx	sl, r5, #8, #8
 801976e:	ea4f 06ec 	mov.w	r6, ip, asr #3
 8019772:	b2ed      	uxtb	r5, r5
 8019774:	ea4f 0ccc 	mov.w	ip, ip, lsl #3
 8019778:	fa5f fc8c 	uxtb.w	ip, ip
 801977c:	fb15 f509 	smulbb	r5, r5, r9
 8019780:	fb0c 5500 	mla	r5, ip, r0, r5
 8019784:	b2bf      	uxth	r7, r7
 8019786:	fb1a fa09 	smulbb	sl, sl, r9
 801978a:	b2ad      	uxth	r5, r5
 801978c:	f006 06fc 	and.w	r6, r6, #252	@ 0xfc
 8019790:	fb06 a600 	mla	r6, r6, r0, sl
 8019794:	1c78      	adds	r0, r7, #1
 8019796:	f105 0a01 	add.w	sl, r5, #1
 801979a:	eb00 2717 	add.w	r7, r0, r7, lsr #8
 801979e:	eb0a 2a15 	add.w	sl, sl, r5, lsr #8
 80197a2:	b2b6      	uxth	r6, r6
 80197a4:	f3ca 2ac4 	ubfx	sl, sl, #11, #5
 80197a8:	f407 4778 	and.w	r7, r7, #63488	@ 0xf800
 80197ac:	ea4a 0707 	orr.w	r7, sl, r7
 80197b0:	f106 0a01 	add.w	sl, r6, #1
 80197b4:	eb0a 2a16 	add.w	sl, sl, r6, lsr #8
 80197b8:	ea4f 1a5a 	mov.w	sl, sl, lsr #5
 80197bc:	f40a 6afc 	and.w	sl, sl, #2016	@ 0x7e0
 80197c0:	ea47 070a 	orr.w	r7, r7, sl
 80197c4:	f824 701e 	strh.w	r7, [r4, lr, lsl #1]
 80197c8:	e7b5      	b.n	8019736 <_ZN8touchgfx8LCD16bpp53TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x242>
 80197ca:	b005      	add	sp, #20
 80197cc:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 80197d0:	fffff800 	.word	0xfffff800

080197d4 <_ZN8touchgfx8LCD16bpp35TextureMapper_A4_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff>:
 80197d4:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 80197d8:	b087      	sub	sp, #28
 80197da:	468b      	mov	fp, r1
 80197dc:	9815      	ldr	r0, [sp, #84]	@ 0x54
 80197de:	9203      	str	r2, [sp, #12]
 80197e0:	f89d 2064 	ldrb.w	r2, [sp, #100]	@ 0x64
 80197e4:	9204      	str	r2, [sp, #16]
 80197e6:	e9dd 2416 	ldrd	r2, r4, [sp, #88]	@ 0x58
 80197ea:	6841      	ldr	r1, [r0, #4]
 80197ec:	f8dd 9060 	ldr.w	r9, [sp, #96]	@ 0x60
 80197f0:	fb01 2404 	mla	r4, r1, r4, r2
 80197f4:	6802      	ldr	r2, [r0, #0]
 80197f6:	eb02 0444 	add.w	r4, r2, r4, lsl #1
 80197fa:	f8d9 2008 	ldr.w	r2, [r9, #8]
 80197fe:	3201      	adds	r2, #1
 8019800:	f022 0201 	bic.w	r2, r2, #1
 8019804:	9200      	str	r2, [sp, #0]
 8019806:	f8d9 2000 	ldr.w	r2, [r9]
 801980a:	9201      	str	r2, [sp, #4]
 801980c:	eef7 6a00 	vmov.f32	s13, #112	@ 0x3f800000  1.0
 8019810:	f1bb 0f00 	cmp.w	fp, #0
 8019814:	dc03      	bgt.n	801981e <_ZN8touchgfx8LCD16bpp35TextureMapper_A4_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x4a>
 8019816:	9a03      	ldr	r2, [sp, #12]
 8019818:	2a00      	cmp	r2, #0
 801981a:	f340 8169 	ble.w	8019af0 <_ZN8touchgfx8LCD16bpp35TextureMapper_A4_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x31c>
 801981e:	9a11      	ldr	r2, [sp, #68]	@ 0x44
 8019820:	f9b9 7008 	ldrsh.w	r7, [r9, #8]
 8019824:	f9b9 600c 	ldrsh.w	r6, [r9, #12]
 8019828:	f502 4000 	add.w	r0, r2, #32768	@ 0x8000
 801982c:	9a12      	ldr	r2, [sp, #72]	@ 0x48
 801982e:	f502 4100 	add.w	r1, r2, #32768	@ 0x8000
 8019832:	2b00      	cmp	r3, #0
 8019834:	dd0e      	ble.n	8019854 <_ZN8touchgfx8LCD16bpp35TextureMapper_A4_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x80>
 8019836:	1402      	asrs	r2, r0, #16
 8019838:	d405      	bmi.n	8019846 <_ZN8touchgfx8LCD16bpp35TextureMapper_A4_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x72>
 801983a:	42ba      	cmp	r2, r7
 801983c:	da03      	bge.n	8019846 <_ZN8touchgfx8LCD16bpp35TextureMapper_A4_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x72>
 801983e:	140a      	asrs	r2, r1, #16
 8019840:	d401      	bmi.n	8019846 <_ZN8touchgfx8LCD16bpp35TextureMapper_A4_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x72>
 8019842:	42b2      	cmp	r2, r6
 8019844:	db07      	blt.n	8019856 <_ZN8touchgfx8LCD16bpp35TextureMapper_A4_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x82>
 8019846:	9a13      	ldr	r2, [sp, #76]	@ 0x4c
 8019848:	4410      	add	r0, r2
 801984a:	9a14      	ldr	r2, [sp, #80]	@ 0x50
 801984c:	3b01      	subs	r3, #1
 801984e:	4411      	add	r1, r2
 8019850:	3402      	adds	r4, #2
 8019852:	e7ee      	b.n	8019832 <_ZN8touchgfx8LCD16bpp35TextureMapper_A4_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x5e>
 8019854:	d017      	beq.n	8019886 <_ZN8touchgfx8LCD16bpp35TextureMapper_A4_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xb2>
 8019856:	9d13      	ldr	r5, [sp, #76]	@ 0x4c
 8019858:	1e5a      	subs	r2, r3, #1
 801985a:	fb05 0502 	mla	r5, r5, r2, r0
 801985e:	142d      	asrs	r5, r5, #16
 8019860:	d409      	bmi.n	8019876 <_ZN8touchgfx8LCD16bpp35TextureMapper_A4_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xa2>
 8019862:	42bd      	cmp	r5, r7
 8019864:	da07      	bge.n	8019876 <_ZN8touchgfx8LCD16bpp35TextureMapper_A4_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xa2>
 8019866:	9d14      	ldr	r5, [sp, #80]	@ 0x50
 8019868:	fb05 1202 	mla	r2, r5, r2, r1
 801986c:	1412      	asrs	r2, r2, #16
 801986e:	d402      	bmi.n	8019876 <_ZN8touchgfx8LCD16bpp35TextureMapper_A4_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xa2>
 8019870:	42b2      	cmp	r2, r6
 8019872:	f2c0 80c7 	blt.w	8019a04 <_ZN8touchgfx8LCD16bpp35TextureMapper_A4_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x230>
 8019876:	2700      	movs	r7, #0
 8019878:	19da      	adds	r2, r3, r7
 801987a:	2a00      	cmp	r2, #0
 801987c:	dc3e      	bgt.n	80198fc <_ZN8touchgfx8LCD16bpp35TextureMapper_A4_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x128>
 801987e:	ea23 73e3 	bic.w	r3, r3, r3, asr #31
 8019882:	eb04 0443 	add.w	r4, r4, r3, lsl #1
 8019886:	f1bb 0f00 	cmp.w	fp, #0
 801988a:	f340 8131 	ble.w	8019af0 <_ZN8touchgfx8LCD16bpp35TextureMapper_A4_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x31c>
 801988e:	ee30 0a04 	vadd.f32	s0, s0, s8
 8019892:	ee70 0aa4 	vadd.f32	s1, s1, s9
 8019896:	eec6 7a80 	vdiv.f32	s15, s13, s0
 801989a:	9b10      	ldr	r3, [sp, #64]	@ 0x40
 801989c:	f1bb 0b01 	subs.w	fp, fp, #1
 80198a0:	ee31 1a05 	vadd.f32	s2, s2, s10
 80198a4:	ee20 7aa7 	vmul.f32	s14, s1, s15
 80198a8:	eeb0 6a62 	vmov.f32	s12, s5
 80198ac:	ee61 7a27 	vmul.f32	s15, s2, s15
 80198b0:	eebe 6ac8 	vcvt.s32.f32	s12, s12, #16
 80198b4:	ee77 2a62 	vsub.f32	s5, s14, s5
 80198b8:	ed8d 6a11 	vstr	s12, [sp, #68]	@ 0x44
 80198bc:	eefe 2ac8 	vcvt.s32.f32	s5, s5, #16
 80198c0:	eeb0 6a43 	vmov.f32	s12, s6
 80198c4:	ee37 3ac3 	vsub.f32	s6, s15, s6
 80198c8:	ee12 2a90 	vmov	r2, s5
 80198cc:	eebe 3ac8 	vcvt.s32.f32	s6, s6, #16
 80198d0:	fb92 f3f3 	sdiv	r3, r2, r3
 80198d4:	ee13 2a10 	vmov	r2, s6
 80198d8:	eebe 6ac8 	vcvt.s32.f32	s12, s12, #16
 80198dc:	9313      	str	r3, [sp, #76]	@ 0x4c
 80198de:	9b10      	ldr	r3, [sp, #64]	@ 0x40
 80198e0:	fb92 f3f3 	sdiv	r3, r2, r3
 80198e4:	9a03      	ldr	r2, [sp, #12]
 80198e6:	9314      	str	r3, [sp, #80]	@ 0x50
 80198e8:	ed8d 6a12 	vstr	s12, [sp, #72]	@ 0x48
 80198ec:	9b10      	ldr	r3, [sp, #64]	@ 0x40
 80198ee:	eeb0 3a67 	vmov.f32	s6, s15
 80198f2:	bf08      	it	eq
 80198f4:	4613      	moveq	r3, r2
 80198f6:	eef0 2a47 	vmov.f32	s5, s14
 80198fa:	e789      	b.n	8019810 <_ZN8touchgfx8LCD16bpp35TextureMapper_A4_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3c>
 80198fc:	1405      	asrs	r5, r0, #16
 80198fe:	d435      	bmi.n	801996c <_ZN8touchgfx8LCD16bpp35TextureMapper_A4_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x198>
 8019900:	f8d9 2008 	ldr.w	r2, [r9, #8]
 8019904:	42aa      	cmp	r2, r5
 8019906:	dd31      	ble.n	801996c <_ZN8touchgfx8LCD16bpp35TextureMapper_A4_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x198>
 8019908:	140e      	asrs	r6, r1, #16
 801990a:	d42f      	bmi.n	801996c <_ZN8touchgfx8LCD16bpp35TextureMapper_A4_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x198>
 801990c:	f8d9 200c 	ldr.w	r2, [r9, #12]
 8019910:	42b2      	cmp	r2, r6
 8019912:	dd2b      	ble.n	801996c <_ZN8touchgfx8LCD16bpp35TextureMapper_A4_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x198>
 8019914:	9a00      	ldr	r2, [sp, #0]
 8019916:	fb06 5502 	mla	r5, r6, r2, r5
 801991a:	086a      	lsrs	r2, r5, #1
 801991c:	9e01      	ldr	r6, [sp, #4]
 801991e:	5cb2      	ldrb	r2, [r6, r2]
 8019920:	07ee      	lsls	r6, r5, #31
 8019922:	bf54      	ite	pl
 8019924:	f002 020f 	andpl.w	r2, r2, #15
 8019928:	1112      	asrmi	r2, r2, #4
 801992a:	eb02 1202 	add.w	r2, r2, r2, lsl #4
 801992e:	b2d2      	uxtb	r2, r2
 8019930:	b1e2      	cbz	r2, 801996c <_ZN8touchgfx8LCD16bpp35TextureMapper_A4_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x198>
 8019932:	9d04      	ldr	r5, [sp, #16]
 8019934:	436a      	muls	r2, r5
 8019936:	1c55      	adds	r5, r2, #1
 8019938:	eb05 2222 	add.w	r2, r5, r2, asr #8
 801993c:	4d6e      	ldr	r5, [pc, #440]	@ (8019af8 <_ZN8touchgfx8LCD16bpp35TextureMapper_A4_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x324>)
 801993e:	682d      	ldr	r5, [r5, #0]
 8019940:	1212      	asrs	r2, r2, #8
 8019942:	0a2e      	lsrs	r6, r5, #8
 8019944:	2aff      	cmp	r2, #255	@ 0xff
 8019946:	9605      	str	r6, [sp, #20]
 8019948:	d116      	bne.n	8019978 <_ZN8touchgfx8LCD16bpp35TextureMapper_A4_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1a4>
 801994a:	f06f 0201 	mvn.w	r2, #1
 801994e:	fb02 fc07 	mul.w	ip, r2, r7
 8019952:	f426 66ff 	bic.w	r6, r6, #2040	@ 0x7f8
 8019956:	096a      	lsrs	r2, r5, #5
 8019958:	f402 62fc 	and.w	r2, r2, #2016	@ 0x7e0
 801995c:	f026 0607 	bic.w	r6, r6, #7
 8019960:	4316      	orrs	r6, r2
 8019962:	f3c5 05c4 	ubfx	r5, r5, #3, #5
 8019966:	432e      	orrs	r6, r5
 8019968:	f824 600c 	strh.w	r6, [r4, ip]
 801996c:	9a13      	ldr	r2, [sp, #76]	@ 0x4c
 801996e:	4410      	add	r0, r2
 8019970:	9a14      	ldr	r2, [sp, #80]	@ 0x50
 8019972:	3f01      	subs	r7, #1
 8019974:	4411      	add	r1, r2
 8019976:	e77f      	b.n	8019878 <_ZN8touchgfx8LCD16bpp35TextureMapper_A4_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xa4>
 8019978:	f06f 0601 	mvn.w	r6, #1
 801997c:	437e      	muls	r6, r7
 801997e:	fa1f fa82 	uxth.w	sl, r2
 8019982:	f834 8006 	ldrh.w	r8, [r4, r6]
 8019986:	9602      	str	r6, [sp, #8]
 8019988:	ea4f 2e28 	mov.w	lr, r8, asr #8
 801998c:	f3c5 4c07 	ubfx	ip, r5, #16, #8
 8019990:	43d2      	mvns	r2, r2
 8019992:	b2d2      	uxtb	r2, r2
 8019994:	fb1c fc0a 	smulbb	ip, ip, sl
 8019998:	f00e 0ef8 	and.w	lr, lr, #248	@ 0xf8
 801999c:	fb0e ce02 	mla	lr, lr, r2, ip
 80199a0:	b2ed      	uxtb	r5, r5
 80199a2:	ea4f 0ce8 	mov.w	ip, r8, asr #3
 80199a6:	ea4f 08c8 	mov.w	r8, r8, lsl #3
 80199aa:	f89d 6014 	ldrb.w	r6, [sp, #20]
 80199ae:	fa5f f888 	uxtb.w	r8, r8
 80199b2:	fb15 f50a 	smulbb	r5, r5, sl
 80199b6:	fb08 5502 	mla	r5, r8, r2, r5
 80199ba:	fa1f fe8e 	uxth.w	lr, lr
 80199be:	fb16 f60a 	smulbb	r6, r6, sl
 80199c2:	b2ad      	uxth	r5, r5
 80199c4:	f00c 0cfc 	and.w	ip, ip, #252	@ 0xfc
 80199c8:	fb0c 6c02 	mla	ip, ip, r2, r6
 80199cc:	f10e 0201 	add.w	r2, lr, #1
 80199d0:	1c6e      	adds	r6, r5, #1
 80199d2:	eb02 2e1e 	add.w	lr, r2, lr, lsr #8
 80199d6:	eb06 2615 	add.w	r6, r6, r5, lsr #8
 80199da:	fa1f fc8c 	uxth.w	ip, ip
 80199de:	f3c6 26c4 	ubfx	r6, r6, #11, #5
 80199e2:	f40e 4e78 	and.w	lr, lr, #63488	@ 0xf800
 80199e6:	ea46 0e0e 	orr.w	lr, r6, lr
 80199ea:	f10c 0601 	add.w	r6, ip, #1
 80199ee:	eb06 261c 	add.w	r6, r6, ip, lsr #8
 80199f2:	0976      	lsrs	r6, r6, #5
 80199f4:	f406 66fc 	and.w	r6, r6, #2016	@ 0x7e0
 80199f8:	9a02      	ldr	r2, [sp, #8]
 80199fa:	ea4e 0e06 	orr.w	lr, lr, r6
 80199fe:	f824 e002 	strh.w	lr, [r4, r2]
 8019a02:	e7b3      	b.n	801996c <_ZN8touchgfx8LCD16bpp35TextureMapper_A4_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x198>
 8019a04:	f04f 0800 	mov.w	r8, #0
 8019a08:	eba3 0208 	sub.w	r2, r3, r8
 8019a0c:	2a00      	cmp	r2, #0
 8019a0e:	f77f af36 	ble.w	801987e <_ZN8touchgfx8LCD16bpp35TextureMapper_A4_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xaa>
 8019a12:	9e00      	ldr	r6, [sp, #0]
 8019a14:	1402      	asrs	r2, r0, #16
 8019a16:	140d      	asrs	r5, r1, #16
 8019a18:	fb06 2505 	mla	r5, r6, r5, r2
 8019a1c:	086a      	lsrs	r2, r5, #1
 8019a1e:	9e01      	ldr	r6, [sp, #4]
 8019a20:	5cb2      	ldrb	r2, [r6, r2]
 8019a22:	07ed      	lsls	r5, r5, #31
 8019a24:	bf54      	ite	pl
 8019a26:	f002 020f 	andpl.w	r2, r2, #15
 8019a2a:	1112      	asrmi	r2, r2, #4
 8019a2c:	eb02 1202 	add.w	r2, r2, r2, lsl #4
 8019a30:	b2d2      	uxtb	r2, r2
 8019a32:	b1c2      	cbz	r2, 8019a66 <_ZN8touchgfx8LCD16bpp35TextureMapper_A4_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x292>
 8019a34:	9d04      	ldr	r5, [sp, #16]
 8019a36:	436a      	muls	r2, r5
 8019a38:	1c55      	adds	r5, r2, #1
 8019a3a:	eb05 2222 	add.w	r2, r5, r2, asr #8
 8019a3e:	4d2e      	ldr	r5, [pc, #184]	@ (8019af8 <_ZN8touchgfx8LCD16bpp35TextureMapper_A4_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x324>)
 8019a40:	1212      	asrs	r2, r2, #8
 8019a42:	682e      	ldr	r6, [r5, #0]
 8019a44:	2aff      	cmp	r2, #255	@ 0xff
 8019a46:	ea4f 2516 	mov.w	r5, r6, lsr #8
 8019a4a:	d113      	bne.n	8019a74 <_ZN8touchgfx8LCD16bpp35TextureMapper_A4_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2a0>
 8019a4c:	0972      	lsrs	r2, r6, #5
 8019a4e:	f425 65ff 	bic.w	r5, r5, #2040	@ 0x7f8
 8019a52:	f402 62fc 	and.w	r2, r2, #2016	@ 0x7e0
 8019a56:	f025 0507 	bic.w	r5, r5, #7
 8019a5a:	4315      	orrs	r5, r2
 8019a5c:	f3c6 06c4 	ubfx	r6, r6, #3, #5
 8019a60:	4335      	orrs	r5, r6
 8019a62:	f824 5018 	strh.w	r5, [r4, r8, lsl #1]
 8019a66:	9a13      	ldr	r2, [sp, #76]	@ 0x4c
 8019a68:	4410      	add	r0, r2
 8019a6a:	9a14      	ldr	r2, [sp, #80]	@ 0x50
 8019a6c:	f108 0801 	add.w	r8, r8, #1
 8019a70:	4411      	add	r1, r2
 8019a72:	e7c9      	b.n	8019a08 <_ZN8touchgfx8LCD16bpp35TextureMapper_A4_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x234>
 8019a74:	f834 e018 	ldrh.w	lr, [r4, r8, lsl #1]
 8019a78:	fa1f fa82 	uxth.w	sl, r2
 8019a7c:	ea4f 2c2e 	mov.w	ip, lr, asr #8
 8019a80:	f3c6 4707 	ubfx	r7, r6, #16, #8
 8019a84:	43d2      	mvns	r2, r2
 8019a86:	b2d2      	uxtb	r2, r2
 8019a88:	fb17 f70a 	smulbb	r7, r7, sl
 8019a8c:	f00c 0cf8 	and.w	ip, ip, #248	@ 0xf8
 8019a90:	fb0c 7c02 	mla	ip, ip, r2, r7
 8019a94:	b2f6      	uxtb	r6, r6
 8019a96:	ea4f 07ee 	mov.w	r7, lr, asr #3
 8019a9a:	ea4f 0ece 	mov.w	lr, lr, lsl #3
 8019a9e:	fa5f fe8e 	uxtb.w	lr, lr
 8019aa2:	fb16 f60a 	smulbb	r6, r6, sl
 8019aa6:	fb0e 6602 	mla	r6, lr, r2, r6
 8019aaa:	b2ed      	uxtb	r5, r5
 8019aac:	fa1f fc8c 	uxth.w	ip, ip
 8019ab0:	fb15 f50a 	smulbb	r5, r5, sl
 8019ab4:	b2b6      	uxth	r6, r6
 8019ab6:	f007 07fc 	and.w	r7, r7, #252	@ 0xfc
 8019aba:	fb07 5702 	mla	r7, r7, r2, r5
 8019abe:	f10c 0201 	add.w	r2, ip, #1
 8019ac2:	1c75      	adds	r5, r6, #1
 8019ac4:	eb02 2c1c 	add.w	ip, r2, ip, lsr #8
 8019ac8:	eb05 2516 	add.w	r5, r5, r6, lsr #8
 8019acc:	b2bf      	uxth	r7, r7
 8019ace:	f3c5 25c4 	ubfx	r5, r5, #11, #5
 8019ad2:	f40c 4c78 	and.w	ip, ip, #63488	@ 0xf800
 8019ad6:	ea45 0c0c 	orr.w	ip, r5, ip
 8019ada:	1c7d      	adds	r5, r7, #1
 8019adc:	eb05 2517 	add.w	r5, r5, r7, lsr #8
 8019ae0:	096d      	lsrs	r5, r5, #5
 8019ae2:	f405 65fc 	and.w	r5, r5, #2016	@ 0x7e0
 8019ae6:	ea4c 0c05 	orr.w	ip, ip, r5
 8019aea:	f824 c018 	strh.w	ip, [r4, r8, lsl #1]
 8019aee:	e7ba      	b.n	8019a66 <_ZN8touchgfx8LCD16bpp35TextureMapper_A4_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x292>
 8019af0:	b007      	add	sp, #28
 8019af2:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 8019af6:	bf00      	nop
 8019af8:	20002fb0 	.word	0x20002fb0

08019afc <_ZN8touchgfx8LCD16bpp37TextureMapper_A4_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff>:
 8019afc:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8019b00:	b087      	sub	sp, #28
 8019b02:	f8df 830c 	ldr.w	r8, [pc, #780]	@ 8019e10 <_ZN8touchgfx8LCD16bpp37TextureMapper_A4_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x314>
 8019b06:	9815      	ldr	r0, [sp, #84]	@ 0x54
 8019b08:	9205      	str	r2, [sp, #20]
 8019b0a:	e9dd 2416 	ldrd	r2, r4, [sp, #88]	@ 0x58
 8019b0e:	9101      	str	r1, [sp, #4]
 8019b10:	6841      	ldr	r1, [r0, #4]
 8019b12:	f8dd b060 	ldr.w	fp, [sp, #96]	@ 0x60
 8019b16:	fb01 2404 	mla	r4, r1, r4, r2
 8019b1a:	6802      	ldr	r2, [r0, #0]
 8019b1c:	eb02 0444 	add.w	r4, r2, r4, lsl #1
 8019b20:	f8db 2008 	ldr.w	r2, [fp, #8]
 8019b24:	3201      	adds	r2, #1
 8019b26:	f022 0201 	bic.w	r2, r2, #1
 8019b2a:	9202      	str	r2, [sp, #8]
 8019b2c:	f8db 2000 	ldr.w	r2, [fp]
 8019b30:	9203      	str	r2, [sp, #12]
 8019b32:	eef7 6a00 	vmov.f32	s13, #112	@ 0x3f800000  1.0
 8019b36:	9a01      	ldr	r2, [sp, #4]
 8019b38:	2a00      	cmp	r2, #0
 8019b3a:	dc03      	bgt.n	8019b44 <_ZN8touchgfx8LCD16bpp37TextureMapper_A4_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x48>
 8019b3c:	9a05      	ldr	r2, [sp, #20]
 8019b3e:	2a00      	cmp	r2, #0
 8019b40:	f340 8162 	ble.w	8019e08 <_ZN8touchgfx8LCD16bpp37TextureMapper_A4_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x30c>
 8019b44:	9a11      	ldr	r2, [sp, #68]	@ 0x44
 8019b46:	f9bb 7008 	ldrsh.w	r7, [fp, #8]
 8019b4a:	f9bb 600c 	ldrsh.w	r6, [fp, #12]
 8019b4e:	f502 4000 	add.w	r0, r2, #32768	@ 0x8000
 8019b52:	9a12      	ldr	r2, [sp, #72]	@ 0x48
 8019b54:	f502 4100 	add.w	r1, r2, #32768	@ 0x8000
 8019b58:	2b00      	cmp	r3, #0
 8019b5a:	dd0e      	ble.n	8019b7a <_ZN8touchgfx8LCD16bpp37TextureMapper_A4_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x7e>
 8019b5c:	1402      	asrs	r2, r0, #16
 8019b5e:	d405      	bmi.n	8019b6c <_ZN8touchgfx8LCD16bpp37TextureMapper_A4_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x70>
 8019b60:	42ba      	cmp	r2, r7
 8019b62:	da03      	bge.n	8019b6c <_ZN8touchgfx8LCD16bpp37TextureMapper_A4_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x70>
 8019b64:	140a      	asrs	r2, r1, #16
 8019b66:	d401      	bmi.n	8019b6c <_ZN8touchgfx8LCD16bpp37TextureMapper_A4_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x70>
 8019b68:	42b2      	cmp	r2, r6
 8019b6a:	db07      	blt.n	8019b7c <_ZN8touchgfx8LCD16bpp37TextureMapper_A4_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x80>
 8019b6c:	9a13      	ldr	r2, [sp, #76]	@ 0x4c
 8019b6e:	4410      	add	r0, r2
 8019b70:	9a14      	ldr	r2, [sp, #80]	@ 0x50
 8019b72:	3b01      	subs	r3, #1
 8019b74:	4411      	add	r1, r2
 8019b76:	3402      	adds	r4, #2
 8019b78:	e7ee      	b.n	8019b58 <_ZN8touchgfx8LCD16bpp37TextureMapper_A4_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x5c>
 8019b7a:	d017      	beq.n	8019bac <_ZN8touchgfx8LCD16bpp37TextureMapper_A4_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xb0>
 8019b7c:	9d13      	ldr	r5, [sp, #76]	@ 0x4c
 8019b7e:	1e5a      	subs	r2, r3, #1
 8019b80:	fb05 0502 	mla	r5, r5, r2, r0
 8019b84:	142d      	asrs	r5, r5, #16
 8019b86:	d409      	bmi.n	8019b9c <_ZN8touchgfx8LCD16bpp37TextureMapper_A4_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xa0>
 8019b88:	42bd      	cmp	r5, r7
 8019b8a:	da07      	bge.n	8019b9c <_ZN8touchgfx8LCD16bpp37TextureMapper_A4_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xa0>
 8019b8c:	9d14      	ldr	r5, [sp, #80]	@ 0x50
 8019b8e:	fb05 1202 	mla	r2, r5, r2, r1
 8019b92:	1412      	asrs	r2, r2, #16
 8019b94:	d402      	bmi.n	8019b9c <_ZN8touchgfx8LCD16bpp37TextureMapper_A4_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xa0>
 8019b96:	42b2      	cmp	r2, r6
 8019b98:	f2c0 80c3 	blt.w	8019d22 <_ZN8touchgfx8LCD16bpp37TextureMapper_A4_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x226>
 8019b9c:	2500      	movs	r5, #0
 8019b9e:	195a      	adds	r2, r3, r5
 8019ba0:	2a00      	cmp	r2, #0
 8019ba2:	dc3f      	bgt.n	8019c24 <_ZN8touchgfx8LCD16bpp37TextureMapper_A4_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x128>
 8019ba4:	ea23 73e3 	bic.w	r3, r3, r3, asr #31
 8019ba8:	eb04 0443 	add.w	r4, r4, r3, lsl #1
 8019bac:	9b01      	ldr	r3, [sp, #4]
 8019bae:	2b00      	cmp	r3, #0
 8019bb0:	f340 812a 	ble.w	8019e08 <_ZN8touchgfx8LCD16bpp37TextureMapper_A4_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x30c>
 8019bb4:	ee30 0a04 	vadd.f32	s0, s0, s8
 8019bb8:	ee70 0aa4 	vadd.f32	s1, s1, s9
 8019bbc:	eec6 7a80 	vdiv.f32	s15, s13, s0
 8019bc0:	9b10      	ldr	r3, [sp, #64]	@ 0x40
 8019bc2:	ee31 1a05 	vadd.f32	s2, s2, s10
 8019bc6:	ee20 7aa7 	vmul.f32	s14, s1, s15
 8019bca:	eeb0 6a62 	vmov.f32	s12, s5
 8019bce:	ee61 7a27 	vmul.f32	s15, s2, s15
 8019bd2:	eebe 6ac8 	vcvt.s32.f32	s12, s12, #16
 8019bd6:	ee77 2a62 	vsub.f32	s5, s14, s5
 8019bda:	ed8d 6a11 	vstr	s12, [sp, #68]	@ 0x44
 8019bde:	eefe 2ac8 	vcvt.s32.f32	s5, s5, #16
 8019be2:	eeb0 6a43 	vmov.f32	s12, s6
 8019be6:	ee37 3ac3 	vsub.f32	s6, s15, s6
 8019bea:	ee12 2a90 	vmov	r2, s5
 8019bee:	eebe 3ac8 	vcvt.s32.f32	s6, s6, #16
 8019bf2:	fb92 f3f3 	sdiv	r3, r2, r3
 8019bf6:	ee13 2a10 	vmov	r2, s6
 8019bfa:	9313      	str	r3, [sp, #76]	@ 0x4c
 8019bfc:	9b10      	ldr	r3, [sp, #64]	@ 0x40
 8019bfe:	fb92 f3f3 	sdiv	r3, r2, r3
 8019c02:	9314      	str	r3, [sp, #80]	@ 0x50
 8019c04:	9b01      	ldr	r3, [sp, #4]
 8019c06:	9a05      	ldr	r2, [sp, #20]
 8019c08:	eebe 6ac8 	vcvt.s32.f32	s12, s12, #16
 8019c0c:	3b01      	subs	r3, #1
 8019c0e:	9301      	str	r3, [sp, #4]
 8019c10:	ed8d 6a12 	vstr	s12, [sp, #72]	@ 0x48
 8019c14:	9b10      	ldr	r3, [sp, #64]	@ 0x40
 8019c16:	eeb0 3a67 	vmov.f32	s6, s15
 8019c1a:	bf08      	it	eq
 8019c1c:	4613      	moveq	r3, r2
 8019c1e:	eef0 2a47 	vmov.f32	s5, s14
 8019c22:	e788      	b.n	8019b36 <_ZN8touchgfx8LCD16bpp37TextureMapper_A4_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3a>
 8019c24:	1406      	asrs	r6, r0, #16
 8019c26:	d42c      	bmi.n	8019c82 <_ZN8touchgfx8LCD16bpp37TextureMapper_A4_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x186>
 8019c28:	f8db 2008 	ldr.w	r2, [fp, #8]
 8019c2c:	42b2      	cmp	r2, r6
 8019c2e:	dd28      	ble.n	8019c82 <_ZN8touchgfx8LCD16bpp37TextureMapper_A4_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x186>
 8019c30:	140f      	asrs	r7, r1, #16
 8019c32:	d426      	bmi.n	8019c82 <_ZN8touchgfx8LCD16bpp37TextureMapper_A4_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x186>
 8019c34:	f8db 200c 	ldr.w	r2, [fp, #12]
 8019c38:	42ba      	cmp	r2, r7
 8019c3a:	dd22      	ble.n	8019c82 <_ZN8touchgfx8LCD16bpp37TextureMapper_A4_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x186>
 8019c3c:	9a02      	ldr	r2, [sp, #8]
 8019c3e:	fb07 6602 	mla	r6, r7, r2, r6
 8019c42:	0872      	lsrs	r2, r6, #1
 8019c44:	9f03      	ldr	r7, [sp, #12]
 8019c46:	5cba      	ldrb	r2, [r7, r2]
 8019c48:	07f6      	lsls	r6, r6, #31
 8019c4a:	bf54      	ite	pl
 8019c4c:	f002 020f 	andpl.w	r2, r2, #15
 8019c50:	1112      	asrmi	r2, r2, #4
 8019c52:	eb02 1202 	add.w	r2, r2, r2, lsl #4
 8019c56:	b2d2      	uxtb	r2, r2
 8019c58:	2aff      	cmp	r2, #255	@ 0xff
 8019c5a:	d118      	bne.n	8019c8e <_ZN8touchgfx8LCD16bpp37TextureMapper_A4_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x192>
 8019c5c:	f8d8 2000 	ldr.w	r2, [r8]
 8019c60:	f06f 0601 	mvn.w	r6, #1
 8019c64:	fb06 f705 	mul.w	r7, r6, r5
 8019c68:	f2a6 76fe 	subw	r6, r6, #2046	@ 0x7fe
 8019c6c:	ea06 2c12 	and.w	ip, r6, r2, lsr #8
 8019c70:	0956      	lsrs	r6, r2, #5
 8019c72:	f406 66fc 	and.w	r6, r6, #2016	@ 0x7e0
 8019c76:	ea4c 0606 	orr.w	r6, ip, r6
 8019c7a:	f3c2 02c4 	ubfx	r2, r2, #3, #5
 8019c7e:	4316      	orrs	r6, r2
 8019c80:	53e6      	strh	r6, [r4, r7]
 8019c82:	9a13      	ldr	r2, [sp, #76]	@ 0x4c
 8019c84:	4410      	add	r0, r2
 8019c86:	9a14      	ldr	r2, [sp, #80]	@ 0x50
 8019c88:	3d01      	subs	r5, #1
 8019c8a:	4411      	add	r1, r2
 8019c8c:	e787      	b.n	8019b9e <_ZN8touchgfx8LCD16bpp37TextureMapper_A4_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xa2>
 8019c8e:	2a00      	cmp	r2, #0
 8019c90:	d0f7      	beq.n	8019c82 <_ZN8touchgfx8LCD16bpp37TextureMapper_A4_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x186>
 8019c92:	f06f 0601 	mvn.w	r6, #1
 8019c96:	436e      	muls	r6, r5
 8019c98:	f8d8 c000 	ldr.w	ip, [r8]
 8019c9c:	f834 e006 	ldrh.w	lr, [r4, r6]
 8019ca0:	9604      	str	r6, [sp, #16]
 8019ca2:	fa1f f982 	uxth.w	r9, r2
 8019ca6:	ea4f 272e 	mov.w	r7, lr, asr #8
 8019caa:	f3cc 4607 	ubfx	r6, ip, #16, #8
 8019cae:	43d2      	mvns	r2, r2
 8019cb0:	b2d2      	uxtb	r2, r2
 8019cb2:	fb16 f609 	smulbb	r6, r6, r9
 8019cb6:	f007 07f8 	and.w	r7, r7, #248	@ 0xf8
 8019cba:	fb07 6702 	mla	r7, r7, r2, r6
 8019cbe:	f3cc 2a07 	ubfx	sl, ip, #8, #8
 8019cc2:	ea4f 06ee 	mov.w	r6, lr, asr #3
 8019cc6:	fa5f fc8c 	uxtb.w	ip, ip
 8019cca:	ea4f 0ece 	mov.w	lr, lr, lsl #3
 8019cce:	fa5f fe8e 	uxtb.w	lr, lr
 8019cd2:	fb1c fc09 	smulbb	ip, ip, r9
 8019cd6:	fb0e cc02 	mla	ip, lr, r2, ip
 8019cda:	b2bf      	uxth	r7, r7
 8019cdc:	fb1a fa09 	smulbb	sl, sl, r9
 8019ce0:	fa1f fc8c 	uxth.w	ip, ip
 8019ce4:	f006 06fc 	and.w	r6, r6, #252	@ 0xfc
 8019ce8:	fb06 a602 	mla	r6, r6, r2, sl
 8019cec:	1c7a      	adds	r2, r7, #1
 8019cee:	f10c 0a01 	add.w	sl, ip, #1
 8019cf2:	eb02 2717 	add.w	r7, r2, r7, lsr #8
 8019cf6:	eb0a 2a1c 	add.w	sl, sl, ip, lsr #8
 8019cfa:	b2b6      	uxth	r6, r6
 8019cfc:	f3ca 2ac4 	ubfx	sl, sl, #11, #5
 8019d00:	f407 4778 	and.w	r7, r7, #63488	@ 0xf800
 8019d04:	ea4a 0707 	orr.w	r7, sl, r7
 8019d08:	f106 0a01 	add.w	sl, r6, #1
 8019d0c:	eb0a 2a16 	add.w	sl, sl, r6, lsr #8
 8019d10:	ea4f 1a5a 	mov.w	sl, sl, lsr #5
 8019d14:	f40a 6afc 	and.w	sl, sl, #2016	@ 0x7e0
 8019d18:	9a04      	ldr	r2, [sp, #16]
 8019d1a:	ea47 070a 	orr.w	r7, r7, sl
 8019d1e:	52a7      	strh	r7, [r4, r2]
 8019d20:	e7af      	b.n	8019c82 <_ZN8touchgfx8LCD16bpp37TextureMapper_A4_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x186>
 8019d22:	f04f 0e00 	mov.w	lr, #0
 8019d26:	eba3 020e 	sub.w	r2, r3, lr
 8019d2a:	2a00      	cmp	r2, #0
 8019d2c:	f77f af3a 	ble.w	8019ba4 <_ZN8touchgfx8LCD16bpp37TextureMapper_A4_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xa8>
 8019d30:	9e02      	ldr	r6, [sp, #8]
 8019d32:	1402      	asrs	r2, r0, #16
 8019d34:	140d      	asrs	r5, r1, #16
 8019d36:	fb06 2505 	mla	r5, r6, r5, r2
 8019d3a:	086a      	lsrs	r2, r5, #1
 8019d3c:	9e03      	ldr	r6, [sp, #12]
 8019d3e:	5cb2      	ldrb	r2, [r6, r2]
 8019d40:	07ed      	lsls	r5, r5, #31
 8019d42:	bf54      	ite	pl
 8019d44:	f002 020f 	andpl.w	r2, r2, #15
 8019d48:	1112      	asrmi	r2, r2, #4
 8019d4a:	eb02 1202 	add.w	r2, r2, r2, lsl #4
 8019d4e:	b2d2      	uxtb	r2, r2
 8019d50:	2aff      	cmp	r2, #255	@ 0xff
 8019d52:	d115      	bne.n	8019d80 <_ZN8touchgfx8LCD16bpp37TextureMapper_A4_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x284>
 8019d54:	f8d8 5000 	ldr.w	r5, [r8]
 8019d58:	f6a2 02ff 	subw	r2, r2, #2303	@ 0x8ff
 8019d5c:	ea02 2615 	and.w	r6, r2, r5, lsr #8
 8019d60:	096a      	lsrs	r2, r5, #5
 8019d62:	f402 62fc 	and.w	r2, r2, #2016	@ 0x7e0
 8019d66:	4332      	orrs	r2, r6
 8019d68:	f3c5 05c4 	ubfx	r5, r5, #3, #5
 8019d6c:	432a      	orrs	r2, r5
 8019d6e:	f824 201e 	strh.w	r2, [r4, lr, lsl #1]
 8019d72:	9a13      	ldr	r2, [sp, #76]	@ 0x4c
 8019d74:	4410      	add	r0, r2
 8019d76:	9a14      	ldr	r2, [sp, #80]	@ 0x50
 8019d78:	f10e 0e01 	add.w	lr, lr, #1
 8019d7c:	4411      	add	r1, r2
 8019d7e:	e7d2      	b.n	8019d26 <_ZN8touchgfx8LCD16bpp37TextureMapper_A4_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x22a>
 8019d80:	2a00      	cmp	r2, #0
 8019d82:	d0f6      	beq.n	8019d72 <_ZN8touchgfx8LCD16bpp37TextureMapper_A4_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x276>
 8019d84:	f8d8 7000 	ldr.w	r7, [r8]
 8019d88:	f834 c01e 	ldrh.w	ip, [r4, lr, lsl #1]
 8019d8c:	fa1f f982 	uxth.w	r9, r2
 8019d90:	ea4f 262c 	mov.w	r6, ip, asr #8
 8019d94:	f3c7 4507 	ubfx	r5, r7, #16, #8
 8019d98:	43d2      	mvns	r2, r2
 8019d9a:	b2d2      	uxtb	r2, r2
 8019d9c:	fb15 f509 	smulbb	r5, r5, r9
 8019da0:	f006 06f8 	and.w	r6, r6, #248	@ 0xf8
 8019da4:	fb06 5602 	mla	r6, r6, r2, r5
 8019da8:	f3c7 2a07 	ubfx	sl, r7, #8, #8
 8019dac:	ea4f 05ec 	mov.w	r5, ip, asr #3
 8019db0:	b2ff      	uxtb	r7, r7
 8019db2:	ea4f 0ccc 	mov.w	ip, ip, lsl #3
 8019db6:	fa5f fc8c 	uxtb.w	ip, ip
 8019dba:	fb17 f709 	smulbb	r7, r7, r9
 8019dbe:	fb0c 7702 	mla	r7, ip, r2, r7
 8019dc2:	b2b6      	uxth	r6, r6
 8019dc4:	fb1a fa09 	smulbb	sl, sl, r9
 8019dc8:	b2bf      	uxth	r7, r7
 8019dca:	f005 05fc 	and.w	r5, r5, #252	@ 0xfc
 8019dce:	fb05 a502 	mla	r5, r5, r2, sl
 8019dd2:	1c72      	adds	r2, r6, #1
 8019dd4:	f107 0a01 	add.w	sl, r7, #1
 8019dd8:	eb02 2616 	add.w	r6, r2, r6, lsr #8
 8019ddc:	eb0a 2a17 	add.w	sl, sl, r7, lsr #8
 8019de0:	b2ad      	uxth	r5, r5
 8019de2:	f3ca 2ac4 	ubfx	sl, sl, #11, #5
 8019de6:	f406 4678 	and.w	r6, r6, #63488	@ 0xf800
 8019dea:	ea4a 0606 	orr.w	r6, sl, r6
 8019dee:	f105 0a01 	add.w	sl, r5, #1
 8019df2:	eb0a 2a15 	add.w	sl, sl, r5, lsr #8
 8019df6:	ea4f 1a5a 	mov.w	sl, sl, lsr #5
 8019dfa:	f40a 6afc 	and.w	sl, sl, #2016	@ 0x7e0
 8019dfe:	ea46 060a 	orr.w	r6, r6, sl
 8019e02:	f824 601e 	strh.w	r6, [r4, lr, lsl #1]
 8019e06:	e7b4      	b.n	8019d72 <_ZN8touchgfx8LCD16bpp37TextureMapper_A4_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x276>
 8019e08:	b007      	add	sp, #28
 8019e0a:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 8019e0e:	bf00      	nop
 8019e10:	20002fb0 	.word	0x20002fb0

08019e14 <_ZN8touchgfx8LCD16bpp19DecompressorRGB_QOID1Ev>:
 8019e14:	4770      	bx	lr

08019e16 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW9D1Ev>:
 8019e16:	4770      	bx	lr

08019e18 <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLED1Ev>:
 8019e18:	4770      	bx	lr

08019e1a <_ZN8touchgfx8LCD16bpp17DecompressorL8_L4D1Ev>:
 8019e1a:	4770      	bx	lr

08019e1c <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGAD1Ev>:
 8019e1c:	4770      	bx	lr

08019e1e <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GAD1Ev>:
 8019e1e:	4770      	bx	lr

08019e20 <_ZN8touchgfx8LCD16bpp37TextureMapper_A4_NearestNeighbor_NoGAD1Ev>:
 8019e20:	4770      	bx	lr

08019e22 <_ZN8touchgfx8LCD16bpp35TextureMapper_A4_NearestNeighbor_GAD1Ev>:
 8019e22:	4770      	bx	lr

08019e24 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGAD1Ev>:
 8019e24:	4770      	bx	lr

08019e26 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GAD1Ev>:
 8019e26:	4770      	bx	lr

08019e28 <_ZN8touchgfx8LCD16bpp53TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_NoGAD1Ev>:
 8019e28:	4770      	bx	lr

08019e2a <_ZN8touchgfx8LCD16bpp51TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_GAD1Ev>:
 8019e2a:	4770      	bx	lr

08019e2c <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGAD1Ev>:
 8019e2c:	4770      	bx	lr

08019e2e <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GAD1Ev>:
 8019e2e:	4770      	bx	lr

08019e30 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGAD1Ev>:
 8019e30:	4770      	bx	lr

08019e32 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GAD1Ev>:
 8019e32:	4770      	bx	lr

08019e34 <_ZN8touchgfx8LCD16bpp48TextureMapper_RGB565_Opaque_NearestNeighbor_NoGAD1Ev>:
 8019e34:	4770      	bx	lr

08019e36 <_ZN8touchgfx8LCD16bpp46TextureMapper_RGB565_Opaque_NearestNeighbor_GAD1Ev>:
 8019e36:	4770      	bx	lr

08019e38 <_ZN8touchgfx8LCD16bpp51TextureMapper_RGB565_NonOpaque_NearestNeighbor_NoGAD1Ev>:
 8019e38:	4770      	bx	lr

08019e3a <_ZN8touchgfx8LCD16bpp49TextureMapper_RGB565_NonOpaque_NearestNeighbor_GAD1Ev>:
 8019e3a:	4770      	bx	lr

08019e3c <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGAD1Ev>:
 8019e3c:	4770      	bx	lr

08019e3e <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GAD1Ev>:
 8019e3e:	4770      	bx	lr

08019e40 <_ZN8touchgfx8LCD16bpp56TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGAD1Ev>:
 8019e40:	4770      	bx	lr

08019e42 <_ZN8touchgfx8LCD16bpp54TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_GAD1Ev>:
 8019e42:	4770      	bx	lr

08019e44 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGAD1Ev>:
 8019e44:	4770      	bx	lr

08019e46 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GAD1Ev>:
 8019e46:	4770      	bx	lr

08019e48 <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB888_Opaque_NearestNeighbor_NoGAD1Ev>:
 8019e48:	4770      	bx	lr

08019e4a <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB888_Opaque_NearestNeighbor_GAD1Ev>:
 8019e4a:	4770      	bx	lr

08019e4c <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGAD1Ev>:
 8019e4c:	4770      	bx	lr

08019e4e <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GAD1Ev>:
 8019e4e:	4770      	bx	lr

08019e50 <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB565_Opaque_NearestNeighbor_NoGAD1Ev>:
 8019e50:	4770      	bx	lr

08019e52 <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB565_Opaque_NearestNeighbor_GAD1Ev>:
 8019e52:	4770      	bx	lr

08019e54 <_ZN8touchgfx8LCD16bpp29copyFrameBufferRegionToMemoryERKNS_4RectES3_t>:
 8019e54:	e92d 47f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
 8019e58:	b088      	sub	sp, #32
 8019e5a:	ac08      	add	r4, sp, #32
 8019e5c:	4606      	mov	r6, r0
 8019e5e:	f824 3d0c 	strh.w	r3, [r4, #-12]!
 8019e62:	4620      	mov	r0, r4
 8019e64:	4688      	mov	r8, r1
 8019e66:	4691      	mov	r9, r2
 8019e68:	f7fd fc32 	bl	80176d0 <_ZNK8touchgfx6Bitmap7getDataEv>
 8019e6c:	6833      	ldr	r3, [r6, #0]
 8019e6e:	4605      	mov	r5, r0
 8019e70:	4620      	mov	r0, r4
 8019e72:	699f      	ldr	r7, [r3, #24]
 8019e74:	f7fd fb3a 	bl	80174ec <_ZNK8touchgfx6Bitmap8getWidthEv>
 8019e78:	4682      	mov	sl, r0
 8019e7a:	4620      	mov	r0, r4
 8019e7c:	f7fd fb6a 	bl	8017554 <_ZNK8touchgfx6Bitmap9getHeightEv>
 8019e80:	9500      	str	r5, [sp, #0]
 8019e82:	e9cd a001 	strd	sl, r0, [sp, #4]
 8019e86:	464b      	mov	r3, r9
 8019e88:	a806      	add	r0, sp, #24
 8019e8a:	4642      	mov	r2, r8
 8019e8c:	4631      	mov	r1, r6
 8019e8e:	47b8      	blx	r7
 8019e90:	4628      	mov	r0, r5
 8019e92:	b008      	add	sp, #32
 8019e94:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}

08019e98 <_ZN8touchgfx8LCD16bpp29copyAreaFromTFTToClientBufferERKNS_4RectE>:
 8019e98:	e92d 47ff 	stmdb	sp!, {r0, r1, r2, r3, r4, r5, r6, r7, r8, r9, sl, lr}
 8019e9c:	2300      	movs	r3, #0
 8019e9e:	9300      	str	r3, [sp, #0]
 8019ea0:	4b3d      	ldr	r3, [pc, #244]	@ (8019f98 <_ZN8touchgfx8LCD16bpp29copyAreaFromTFTToClientBufferERKNS_4RectE+0x100>)
 8019ea2:	781b      	ldrb	r3, [r3, #0]
 8019ea4:	2b00      	cmp	r3, #0
 8019ea6:	d137      	bne.n	8019f18 <_ZN8touchgfx8LCD16bpp29copyAreaFromTFTToClientBufferERKNS_4RectE+0x80>
 8019ea8:	4a3c      	ldr	r2, [pc, #240]	@ (8019f9c <_ZN8touchgfx8LCD16bpp29copyAreaFromTFTToClientBufferERKNS_4RectE+0x104>)
 8019eaa:	f9b2 2000 	ldrsh.w	r2, [r2]
 8019eae:	f8ad 2004 	strh.w	r2, [sp, #4]
 8019eb2:	2b00      	cmp	r3, #0
 8019eb4:	d132      	bne.n	8019f1c <_ZN8touchgfx8LCD16bpp29copyAreaFromTFTToClientBufferERKNS_4RectE+0x84>
 8019eb6:	4b3a      	ldr	r3, [pc, #232]	@ (8019fa0 <_ZN8touchgfx8LCD16bpp29copyAreaFromTFTToClientBufferERKNS_4RectE+0x108>)
 8019eb8:	f9b3 3000 	ldrsh.w	r3, [r3]
 8019ebc:	6808      	ldr	r0, [r1, #0]
 8019ebe:	6849      	ldr	r1, [r1, #4]
 8019ec0:	f8ad 3006 	strh.w	r3, [sp, #6]
 8019ec4:	ac02      	add	r4, sp, #8
 8019ec6:	ab02      	add	r3, sp, #8
 8019ec8:	c303      	stmia	r3!, {r0, r1}
 8019eca:	4669      	mov	r1, sp
 8019ecc:	4620      	mov	r0, r4
 8019ece:	f7f9 ff21 	bl	8013d14 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectERKS1_>
 8019ed2:	4668      	mov	r0, sp
 8019ed4:	f7f9 fef6 	bl	8013cc4 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectE>
 8019ed8:	f8bd 3008 	ldrh.w	r3, [sp, #8]
 8019edc:	f8bd 2000 	ldrh.w	r2, [sp]
 8019ee0:	4d30      	ldr	r5, [pc, #192]	@ (8019fa4 <_ZN8touchgfx8LCD16bpp29copyAreaFromTFTToClientBufferERKNS_4RectE+0x10c>)
 8019ee2:	4413      	add	r3, r2
 8019ee4:	f8ad 3008 	strh.w	r3, [sp, #8]
 8019ee8:	f8bd 2002 	ldrh.w	r2, [sp, #2]
 8019eec:	f8bd 300a 	ldrh.w	r3, [sp, #10]
 8019ef0:	6828      	ldr	r0, [r5, #0]
 8019ef2:	4413      	add	r3, r2
 8019ef4:	f8ad 300a 	strh.w	r3, [sp, #10]
 8019ef8:	6803      	ldr	r3, [r0, #0]
 8019efa:	6b9b      	ldr	r3, [r3, #56]	@ 0x38
 8019efc:	4798      	blx	r3
 8019efe:	f010 0f01 	tst.w	r0, #1
 8019f02:	462f      	mov	r7, r5
 8019f04:	d00c      	beq.n	8019f20 <_ZN8touchgfx8LCD16bpp29copyAreaFromTFTToClientBufferERKNS_4RectE+0x88>
 8019f06:	6828      	ldr	r0, [r5, #0]
 8019f08:	6803      	ldr	r3, [r0, #0]
 8019f0a:	e894 0006 	ldmia.w	r4, {r1, r2}
 8019f0e:	6ddb      	ldr	r3, [r3, #92]	@ 0x5c
 8019f10:	4798      	blx	r3
 8019f12:	b004      	add	sp, #16
 8019f14:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
 8019f18:	4a21      	ldr	r2, [pc, #132]	@ (8019fa0 <_ZN8touchgfx8LCD16bpp29copyAreaFromTFTToClientBufferERKNS_4RectE+0x108>)
 8019f1a:	e7c6      	b.n	8019eaa <_ZN8touchgfx8LCD16bpp29copyAreaFromTFTToClientBufferERKNS_4RectE+0x12>
 8019f1c:	4b1f      	ldr	r3, [pc, #124]	@ (8019f9c <_ZN8touchgfx8LCD16bpp29copyAreaFromTFTToClientBufferERKNS_4RectE+0x104>)
 8019f1e:	e7cb      	b.n	8019eb8 <_ZN8touchgfx8LCD16bpp29copyAreaFromTFTToClientBufferERKNS_4RectE+0x20>
 8019f20:	6838      	ldr	r0, [r7, #0]
 8019f22:	f9bd 800c 	ldrsh.w	r8, [sp, #12]
 8019f26:	6803      	ldr	r3, [r0, #0]
 8019f28:	f9bd 500e 	ldrsh.w	r5, [sp, #14]
 8019f2c:	6b1b      	ldr	r3, [r3, #48]	@ 0x30
 8019f2e:	4798      	blx	r3
 8019f30:	f9bd 3008 	ldrsh.w	r3, [sp, #8]
 8019f34:	f8bd 200a 	ldrh.w	r2, [sp, #10]
 8019f38:	f8bd 6004 	ldrh.w	r6, [sp, #4]
 8019f3c:	fb16 3602 	smlabb	r6, r6, r2, r3
 8019f40:	eb00 0646 	add.w	r6, r0, r6, lsl #1
 8019f44:	6838      	ldr	r0, [r7, #0]
 8019f46:	6803      	ldr	r3, [r0, #0]
 8019f48:	6a9b      	ldr	r3, [r3, #40]	@ 0x28
 8019f4a:	4798      	blx	r3
 8019f4c:	4a13      	ldr	r2, [pc, #76]	@ (8019f9c <_ZN8touchgfx8LCD16bpp29copyAreaFromTFTToClientBufferERKNS_4RectE+0x104>)
 8019f4e:	f9bd 400a 	ldrsh.w	r4, [sp, #10]
 8019f52:	8813      	ldrh	r3, [r2, #0]
 8019f54:	f9bd 1008 	ldrsh.w	r1, [sp, #8]
 8019f58:	fb03 1404 	mla	r4, r3, r4, r1
 8019f5c:	eb00 0444 	add.w	r4, r0, r4, lsl #1
 8019f60:	435d      	muls	r5, r3
 8019f62:	eb04 0545 	add.w	r5, r4, r5, lsl #1
 8019f66:	ea4f 0848 	mov.w	r8, r8, lsl #1
 8019f6a:	4691      	mov	r9, r2
 8019f6c:	6838      	ldr	r0, [r7, #0]
 8019f6e:	42ac      	cmp	r4, r5
 8019f70:	6803      	ldr	r3, [r0, #0]
 8019f72:	d20e      	bcs.n	8019f92 <_ZN8touchgfx8LCD16bpp29copyAreaFromTFTToClientBufferERKNS_4RectE+0xfa>
 8019f74:	f8d3 a034 	ldr.w	sl, [r3, #52]	@ 0x34
 8019f78:	4632      	mov	r2, r6
 8019f7a:	4643      	mov	r3, r8
 8019f7c:	4621      	mov	r1, r4
 8019f7e:	47d0      	blx	sl
 8019f80:	f8b9 3000 	ldrh.w	r3, [r9]
 8019f84:	eb04 0443 	add.w	r4, r4, r3, lsl #1
 8019f88:	f9bd 3004 	ldrsh.w	r3, [sp, #4]
 8019f8c:	eb06 0643 	add.w	r6, r6, r3, lsl #1
 8019f90:	e7ec      	b.n	8019f6c <_ZN8touchgfx8LCD16bpp29copyAreaFromTFTToClientBufferERKNS_4RectE+0xd4>
 8019f92:	6adb      	ldr	r3, [r3, #44]	@ 0x2c
 8019f94:	4798      	blx	r3
 8019f96:	e7bc      	b.n	8019f12 <_ZN8touchgfx8LCD16bpp29copyAreaFromTFTToClientBufferERKNS_4RectE+0x7a>
 8019f98:	20002fa0 	.word	0x20002fa0
 8019f9c:	20002fa2 	.word	0x20002fa2
 8019fa0:	20002fa4 	.word	0x20002fa4
 8019fa4:	20002fa8 	.word	0x20002fa8

08019fa8 <_ZN8touchgfx8LCD16bpp8blitCopyEPKtRKNS_4RectES5_hb>:
 8019fa8:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8019fac:	b08b      	sub	sp, #44	@ 0x2c
 8019fae:	460f      	mov	r7, r1
 8019fb0:	f89d b050 	ldrb.w	fp, [sp, #80]	@ 0x50
 8019fb4:	f89d 4054 	ldrb.w	r4, [sp, #84]	@ 0x54
 8019fb8:	4616      	mov	r6, r2
 8019fba:	f1bb 0f00 	cmp.w	fp, #0
 8019fbe:	d04a      	beq.n	801a056 <_ZN8touchgfx8LCD16bpp8blitCopyEPKtRKNS_4RectES5_hb+0xae>
 8019fc0:	6810      	ldr	r0, [r2, #0]
 8019fc2:	6851      	ldr	r1, [r2, #4]
 8019fc4:	ad06      	add	r5, sp, #24
 8019fc6:	c503      	stmia	r5!, {r0, r1}
 8019fc8:	6818      	ldr	r0, [r3, #0]
 8019fca:	6859      	ldr	r1, [r3, #4]
 8019fcc:	ad08      	add	r5, sp, #32
 8019fce:	c503      	stmia	r5!, {r0, r1}
 8019fd0:	a806      	add	r0, sp, #24
 8019fd2:	f7f9 fe77 	bl	8013cc4 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectE>
 8019fd6:	4631      	mov	r1, r6
 8019fd8:	a808      	add	r0, sp, #32
 8019fda:	f7f9 fe9b 	bl	8013d14 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectERKS1_>
 8019fde:	f9bd 2020 	ldrsh.w	r2, [sp, #32]
 8019fe2:	f9bd 3022 	ldrsh.w	r3, [sp, #34]	@ 0x22
 8019fe6:	f8bd 601c 	ldrh.w	r6, [sp, #28]
 8019fea:	f9bd 8024 	ldrsh.w	r8, [sp, #36]	@ 0x24
 8019fee:	f9bd 5026 	ldrsh.w	r5, [sp, #38]	@ 0x26
 8019ff2:	fb16 2103 	smlabb	r1, r6, r3, r2
 8019ff6:	eb07 0641 	add.w	r6, r7, r1, lsl #1
 8019ffa:	f8bd 1018 	ldrh.w	r1, [sp, #24]
 8019ffe:	4f5f      	ldr	r7, [pc, #380]	@ (801a17c <_ZN8touchgfx8LCD16bpp8blitCopyEPKtRKNS_4RectES5_hb+0x1d4>)
 801a000:	440a      	add	r2, r1
 801a002:	f8ad 2020 	strh.w	r2, [sp, #32]
 801a006:	f8bd 201a 	ldrh.w	r2, [sp, #26]
 801a00a:	6838      	ldr	r0, [r7, #0]
 801a00c:	4413      	add	r3, r2
 801a00e:	f8ad 3022 	strh.w	r3, [sp, #34]	@ 0x22
 801a012:	6803      	ldr	r3, [r0, #0]
 801a014:	6b9b      	ldr	r3, [r3, #56]	@ 0x38
 801a016:	4798      	blx	r3
 801a018:	f1bb 0fff 	cmp.w	fp, #255	@ 0xff
 801a01c:	46b9      	mov	r9, r7
 801a01e:	d11d      	bne.n	801a05c <_ZN8touchgfx8LCD16bpp8blitCopyEPKtRKNS_4RectES5_hb+0xb4>
 801a020:	b9fc      	cbnz	r4, 801a062 <_ZN8touchgfx8LCD16bpp8blitCopyEPKtRKNS_4RectES5_hb+0xba>
 801a022:	f010 0f01 	tst.w	r0, #1
 801a026:	d01c      	beq.n	801a062 <_ZN8touchgfx8LCD16bpp8blitCopyEPKtRKNS_4RectES5_hb+0xba>
 801a028:	f8d9 0000 	ldr.w	r0, [r9]
 801a02c:	f8bd 3022 	ldrh.w	r3, [sp, #34]	@ 0x22
 801a030:	6801      	ldr	r1, [r0, #0]
 801a032:	f8cd b00c 	str.w	fp, [sp, #12]
 801a036:	2700      	movs	r7, #0
 801a038:	e9cd 4704 	strd	r4, r7, [sp, #16]
 801a03c:	f8bd 401c 	ldrh.w	r4, [sp, #28]
 801a040:	9402      	str	r4, [sp, #8]
 801a042:	b2ad      	uxth	r5, r5
 801a044:	fa1f f488 	uxth.w	r4, r8
 801a048:	9501      	str	r5, [sp, #4]
 801a04a:	9400      	str	r4, [sp, #0]
 801a04c:	6c4c      	ldr	r4, [r1, #68]	@ 0x44
 801a04e:	f8bd 2020 	ldrh.w	r2, [sp, #32]
 801a052:	4631      	mov	r1, r6
 801a054:	47a0      	blx	r4
 801a056:	b00b      	add	sp, #44	@ 0x2c
 801a058:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 801a05c:	f010 0f04 	tst.w	r0, #4
 801a060:	e7e1      	b.n	801a026 <_ZN8touchgfx8LCD16bpp8blitCopyEPKtRKNS_4RectES5_hb+0x7e>
 801a062:	f8d9 0000 	ldr.w	r0, [r9]
 801a066:	6803      	ldr	r3, [r0, #0]
 801a068:	6a9b      	ldr	r3, [r3, #40]	@ 0x28
 801a06a:	4798      	blx	r3
 801a06c:	4b44      	ldr	r3, [pc, #272]	@ (801a180 <_ZN8touchgfx8LCD16bpp8blitCopyEPKtRKNS_4RectES5_hb+0x1d8>)
 801a06e:	f9bd 4022 	ldrsh.w	r4, [sp, #34]	@ 0x22
 801a072:	881a      	ldrh	r2, [r3, #0]
 801a074:	f9bd 1020 	ldrsh.w	r1, [sp, #32]
 801a078:	f1bb 0fff 	cmp.w	fp, #255	@ 0xff
 801a07c:	fb02 1404 	mla	r4, r2, r4, r1
 801a080:	eb00 0444 	add.w	r4, r0, r4, lsl #1
 801a084:	469a      	mov	sl, r3
 801a086:	fb05 f502 	mul.w	r5, r5, r2
 801a08a:	ea4f 0748 	mov.w	r7, r8, lsl #1
 801a08e:	d059      	beq.n	801a144 <_ZN8touchgfx8LCD16bpp8blitCopyEPKtRKNS_4RectES5_hb+0x19c>
 801a090:	f1cb 09ff 	rsb	r9, fp, #255	@ 0xff
 801a094:	eb04 0545 	add.w	r5, r4, r5, lsl #1
 801a098:	fa1f f28b 	uxth.w	r2, fp
 801a09c:	fa1f f989 	uxth.w	r9, r9
 801a0a0:	469e      	mov	lr, r3
 801a0a2:	42ac      	cmp	r4, r5
 801a0a4:	d264      	bcs.n	801a170 <_ZN8touchgfx8LCD16bpp8blitCopyEPKtRKNS_4RectES5_hb+0x1c8>
 801a0a6:	eb04 0a07 	add.w	sl, r4, r7
 801a0aa:	4554      	cmp	r4, sl
 801a0ac:	d23d      	bcs.n	801a12a <_ZN8touchgfx8LCD16bpp8blitCopyEPKtRKNS_4RectES5_hb+0x182>
 801a0ae:	8821      	ldrh	r1, [r4, #0]
 801a0b0:	f836 3b02 	ldrh.w	r3, [r6], #2
 801a0b4:	1208      	asrs	r0, r1, #8
 801a0b6:	ea4f 2c23 	mov.w	ip, r3, asr #8
 801a0ba:	f000 00f8 	and.w	r0, r0, #248	@ 0xf8
 801a0be:	fb10 f009 	smulbb	r0, r0, r9
 801a0c2:	ea4f 0be1 	mov.w	fp, r1, asr #3
 801a0c6:	f00c 0cf8 	and.w	ip, ip, #248	@ 0xf8
 801a0ca:	00c9      	lsls	r1, r1, #3
 801a0cc:	fb0c 0c02 	mla	ip, ip, r2, r0
 801a0d0:	f00b 0bfc 	and.w	fp, fp, #252	@ 0xfc
 801a0d4:	10d8      	asrs	r0, r3, #3
 801a0d6:	b2c9      	uxtb	r1, r1
 801a0d8:	00db      	lsls	r3, r3, #3
 801a0da:	fa1f fc8c 	uxth.w	ip, ip
 801a0de:	fb1b fb09 	smulbb	fp, fp, r9
 801a0e2:	f000 00fc 	and.w	r0, r0, #252	@ 0xfc
 801a0e6:	b2db      	uxtb	r3, r3
 801a0e8:	fb11 f109 	smulbb	r1, r1, r9
 801a0ec:	fb00 b002 	mla	r0, r0, r2, fp
 801a0f0:	fb03 1302 	mla	r3, r3, r2, r1
 801a0f4:	f10c 0b01 	add.w	fp, ip, #1
 801a0f8:	b29b      	uxth	r3, r3
 801a0fa:	eb0b 2c1c 	add.w	ip, fp, ip, lsr #8
 801a0fe:	b280      	uxth	r0, r0
 801a100:	f40c 4b78 	and.w	fp, ip, #63488	@ 0xf800
 801a104:	f103 0c01 	add.w	ip, r3, #1
 801a108:	eb0c 2c13 	add.w	ip, ip, r3, lsr #8
 801a10c:	1c43      	adds	r3, r0, #1
 801a10e:	eb03 2010 	add.w	r0, r3, r0, lsr #8
 801a112:	f3cc 2cc4 	ubfx	ip, ip, #11, #5
 801a116:	0940      	lsrs	r0, r0, #5
 801a118:	ea4c 0c0b 	orr.w	ip, ip, fp
 801a11c:	f400 60fc 	and.w	r0, r0, #2016	@ 0x7e0
 801a120:	ea4c 0c00 	orr.w	ip, ip, r0
 801a124:	f824 cb02 	strh.w	ip, [r4], #2
 801a128:	e7bf      	b.n	801a0aa <_ZN8touchgfx8LCD16bpp8blitCopyEPKtRKNS_4RectES5_hb+0x102>
 801a12a:	f8be 3000 	ldrh.w	r3, [lr]
 801a12e:	eba3 0308 	sub.w	r3, r3, r8
 801a132:	eb04 0443 	add.w	r4, r4, r3, lsl #1
 801a136:	f9bd 301c 	ldrsh.w	r3, [sp, #28]
 801a13a:	eba3 0308 	sub.w	r3, r3, r8
 801a13e:	eb06 0643 	add.w	r6, r6, r3, lsl #1
 801a142:	e7ae      	b.n	801a0a2 <_ZN8touchgfx8LCD16bpp8blitCopyEPKtRKNS_4RectES5_hb+0xfa>
 801a144:	eb04 0545 	add.w	r5, r4, r5, lsl #1
 801a148:	f8d9 0000 	ldr.w	r0, [r9]
 801a14c:	42ac      	cmp	r4, r5
 801a14e:	6803      	ldr	r3, [r0, #0]
 801a150:	d20e      	bcs.n	801a170 <_ZN8touchgfx8LCD16bpp8blitCopyEPKtRKNS_4RectES5_hb+0x1c8>
 801a152:	f8d3 8034 	ldr.w	r8, [r3, #52]	@ 0x34
 801a156:	4632      	mov	r2, r6
 801a158:	463b      	mov	r3, r7
 801a15a:	4621      	mov	r1, r4
 801a15c:	47c0      	blx	r8
 801a15e:	f8ba 3000 	ldrh.w	r3, [sl]
 801a162:	eb04 0443 	add.w	r4, r4, r3, lsl #1
 801a166:	f9bd 301c 	ldrsh.w	r3, [sp, #28]
 801a16a:	eb06 0643 	add.w	r6, r6, r3, lsl #1
 801a16e:	e7eb      	b.n	801a148 <_ZN8touchgfx8LCD16bpp8blitCopyEPKtRKNS_4RectES5_hb+0x1a0>
 801a170:	4b02      	ldr	r3, [pc, #8]	@ (801a17c <_ZN8touchgfx8LCD16bpp8blitCopyEPKtRKNS_4RectES5_hb+0x1d4>)
 801a172:	6818      	ldr	r0, [r3, #0]
 801a174:	6803      	ldr	r3, [r0, #0]
 801a176:	6adb      	ldr	r3, [r3, #44]	@ 0x2c
 801a178:	4798      	blx	r3
 801a17a:	e76c      	b.n	801a056 <_ZN8touchgfx8LCD16bpp8blitCopyEPKtRKNS_4RectES5_hb+0xae>
 801a17c:	20002fa8 	.word	0x20002fa8
 801a180:	20002fa2 	.word	0x20002fa2

0801a184 <_ZN8touchgfx8LCD16bpp17DecompressorL8_L4D0Ev>:
 801a184:	b510      	push	{r4, lr}
 801a186:	2104      	movs	r1, #4
 801a188:	4604      	mov	r4, r0
 801a18a:	f00b fc82 	bl	8025a92 <_ZdlPvj>
 801a18e:	4620      	mov	r0, r4
 801a190:	bd10      	pop	{r4, pc}

0801a192 <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLED0Ev>:
 801a192:	b510      	push	{r4, lr}
 801a194:	2104      	movs	r1, #4
 801a196:	4604      	mov	r4, r0
 801a198:	f00b fc7b 	bl	8025a92 <_ZdlPvj>
 801a19c:	4620      	mov	r0, r4
 801a19e:	bd10      	pop	{r4, pc}

0801a1a0 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW9D0Ev>:
 801a1a0:	b510      	push	{r4, lr}
 801a1a2:	f640 0144 	movw	r1, #2116	@ 0x844
 801a1a6:	4604      	mov	r4, r0
 801a1a8:	f00b fc73 	bl	8025a92 <_ZdlPvj>
 801a1ac:	4620      	mov	r0, r4
 801a1ae:	bd10      	pop	{r4, pc}

0801a1b0 <_ZN8touchgfx8LCD16bpp19DecompressorRGB_QOID0Ev>:
 801a1b0:	b510      	push	{r4, lr}
 801a1b2:	f44f 7182 	mov.w	r1, #260	@ 0x104
 801a1b6:	4604      	mov	r4, r0
 801a1b8:	f00b fc6b 	bl	8025a92 <_ZdlPvj>
 801a1bc:	4620      	mov	r0, r4
 801a1be:	bd10      	pop	{r4, pc}

0801a1c0 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGAD0Ev>:
 801a1c0:	b510      	push	{r4, lr}
 801a1c2:	2104      	movs	r1, #4
 801a1c4:	4604      	mov	r4, r0
 801a1c6:	f00b fc64 	bl	8025a92 <_ZdlPvj>
 801a1ca:	4620      	mov	r0, r4
 801a1cc:	bd10      	pop	{r4, pc}

0801a1ce <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GAD0Ev>:
 801a1ce:	b510      	push	{r4, lr}
 801a1d0:	2104      	movs	r1, #4
 801a1d2:	4604      	mov	r4, r0
 801a1d4:	f00b fc5d 	bl	8025a92 <_ZdlPvj>
 801a1d8:	4620      	mov	r0, r4
 801a1da:	bd10      	pop	{r4, pc}

0801a1dc <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB565_Opaque_NearestNeighbor_NoGAD0Ev>:
 801a1dc:	b510      	push	{r4, lr}
 801a1de:	2104      	movs	r1, #4
 801a1e0:	4604      	mov	r4, r0
 801a1e2:	f00b fc56 	bl	8025a92 <_ZdlPvj>
 801a1e6:	4620      	mov	r0, r4
 801a1e8:	bd10      	pop	{r4, pc}

0801a1ea <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB565_Opaque_NearestNeighbor_GAD0Ev>:
 801a1ea:	b510      	push	{r4, lr}
 801a1ec:	2104      	movs	r1, #4
 801a1ee:	4604      	mov	r4, r0
 801a1f0:	f00b fc4f 	bl	8025a92 <_ZdlPvj>
 801a1f4:	4620      	mov	r0, r4
 801a1f6:	bd10      	pop	{r4, pc}

0801a1f8 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGAD0Ev>:
 801a1f8:	b510      	push	{r4, lr}
 801a1fa:	2104      	movs	r1, #4
 801a1fc:	4604      	mov	r4, r0
 801a1fe:	f00b fc48 	bl	8025a92 <_ZdlPvj>
 801a202:	4620      	mov	r0, r4
 801a204:	bd10      	pop	{r4, pc}

0801a206 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GAD0Ev>:
 801a206:	b510      	push	{r4, lr}
 801a208:	2104      	movs	r1, #4
 801a20a:	4604      	mov	r4, r0
 801a20c:	f00b fc41 	bl	8025a92 <_ZdlPvj>
 801a210:	4620      	mov	r0, r4
 801a212:	bd10      	pop	{r4, pc}

0801a214 <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB888_Opaque_NearestNeighbor_NoGAD0Ev>:
 801a214:	b510      	push	{r4, lr}
 801a216:	2104      	movs	r1, #4
 801a218:	4604      	mov	r4, r0
 801a21a:	f00b fc3a 	bl	8025a92 <_ZdlPvj>
 801a21e:	4620      	mov	r0, r4
 801a220:	bd10      	pop	{r4, pc}

0801a222 <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB888_Opaque_NearestNeighbor_GAD0Ev>:
 801a222:	b510      	push	{r4, lr}
 801a224:	2104      	movs	r1, #4
 801a226:	4604      	mov	r4, r0
 801a228:	f00b fc33 	bl	8025a92 <_ZdlPvj>
 801a22c:	4620      	mov	r0, r4
 801a22e:	bd10      	pop	{r4, pc}

0801a230 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGAD0Ev>:
 801a230:	b510      	push	{r4, lr}
 801a232:	2104      	movs	r1, #4
 801a234:	4604      	mov	r4, r0
 801a236:	f00b fc2c 	bl	8025a92 <_ZdlPvj>
 801a23a:	4620      	mov	r0, r4
 801a23c:	bd10      	pop	{r4, pc}

0801a23e <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GAD0Ev>:
 801a23e:	b510      	push	{r4, lr}
 801a240:	2104      	movs	r1, #4
 801a242:	4604      	mov	r4, r0
 801a244:	f00b fc25 	bl	8025a92 <_ZdlPvj>
 801a248:	4620      	mov	r0, r4
 801a24a:	bd10      	pop	{r4, pc}

0801a24c <_ZN8touchgfx8LCD16bpp56TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGAD0Ev>:
 801a24c:	b510      	push	{r4, lr}
 801a24e:	2104      	movs	r1, #4
 801a250:	4604      	mov	r4, r0
 801a252:	f00b fc1e 	bl	8025a92 <_ZdlPvj>
 801a256:	4620      	mov	r0, r4
 801a258:	bd10      	pop	{r4, pc}

0801a25a <_ZN8touchgfx8LCD16bpp54TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_GAD0Ev>:
 801a25a:	b510      	push	{r4, lr}
 801a25c:	2104      	movs	r1, #4
 801a25e:	4604      	mov	r4, r0
 801a260:	f00b fc17 	bl	8025a92 <_ZdlPvj>
 801a264:	4620      	mov	r0, r4
 801a266:	bd10      	pop	{r4, pc}

0801a268 <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGAD0Ev>:
 801a268:	b510      	push	{r4, lr}
 801a26a:	2104      	movs	r1, #4
 801a26c:	4604      	mov	r4, r0
 801a26e:	f00b fc10 	bl	8025a92 <_ZdlPvj>
 801a272:	4620      	mov	r0, r4
 801a274:	bd10      	pop	{r4, pc}

0801a276 <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GAD0Ev>:
 801a276:	b510      	push	{r4, lr}
 801a278:	2104      	movs	r1, #4
 801a27a:	4604      	mov	r4, r0
 801a27c:	f00b fc09 	bl	8025a92 <_ZdlPvj>
 801a280:	4620      	mov	r0, r4
 801a282:	bd10      	pop	{r4, pc}

0801a284 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGAD0Ev>:
 801a284:	b510      	push	{r4, lr}
 801a286:	2104      	movs	r1, #4
 801a288:	4604      	mov	r4, r0
 801a28a:	f00b fc02 	bl	8025a92 <_ZdlPvj>
 801a28e:	4620      	mov	r0, r4
 801a290:	bd10      	pop	{r4, pc}

0801a292 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GAD0Ev>:
 801a292:	b510      	push	{r4, lr}
 801a294:	2104      	movs	r1, #4
 801a296:	4604      	mov	r4, r0
 801a298:	f00b fbfb 	bl	8025a92 <_ZdlPvj>
 801a29c:	4620      	mov	r0, r4
 801a29e:	bd10      	pop	{r4, pc}

0801a2a0 <_ZN8touchgfx8LCD16bpp48TextureMapper_RGB565_Opaque_NearestNeighbor_NoGAD0Ev>:
 801a2a0:	b510      	push	{r4, lr}
 801a2a2:	2104      	movs	r1, #4
 801a2a4:	4604      	mov	r4, r0
 801a2a6:	f00b fbf4 	bl	8025a92 <_ZdlPvj>
 801a2aa:	4620      	mov	r0, r4
 801a2ac:	bd10      	pop	{r4, pc}

0801a2ae <_ZN8touchgfx8LCD16bpp46TextureMapper_RGB565_Opaque_NearestNeighbor_GAD0Ev>:
 801a2ae:	b510      	push	{r4, lr}
 801a2b0:	2104      	movs	r1, #4
 801a2b2:	4604      	mov	r4, r0
 801a2b4:	f00b fbed 	bl	8025a92 <_ZdlPvj>
 801a2b8:	4620      	mov	r0, r4
 801a2ba:	bd10      	pop	{r4, pc}

0801a2bc <_ZN8touchgfx8LCD16bpp51TextureMapper_RGB565_NonOpaque_NearestNeighbor_NoGAD0Ev>:
 801a2bc:	b510      	push	{r4, lr}
 801a2be:	2104      	movs	r1, #4
 801a2c0:	4604      	mov	r4, r0
 801a2c2:	f00b fbe6 	bl	8025a92 <_ZdlPvj>
 801a2c6:	4620      	mov	r0, r4
 801a2c8:	bd10      	pop	{r4, pc}

0801a2ca <_ZN8touchgfx8LCD16bpp49TextureMapper_RGB565_NonOpaque_NearestNeighbor_GAD0Ev>:
 801a2ca:	b510      	push	{r4, lr}
 801a2cc:	2104      	movs	r1, #4
 801a2ce:	4604      	mov	r4, r0
 801a2d0:	f00b fbdf 	bl	8025a92 <_ZdlPvj>
 801a2d4:	4620      	mov	r0, r4
 801a2d6:	bd10      	pop	{r4, pc}

0801a2d8 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGAD0Ev>:
 801a2d8:	b510      	push	{r4, lr}
 801a2da:	2104      	movs	r1, #4
 801a2dc:	4604      	mov	r4, r0
 801a2de:	f00b fbd8 	bl	8025a92 <_ZdlPvj>
 801a2e2:	4620      	mov	r0, r4
 801a2e4:	bd10      	pop	{r4, pc}

0801a2e6 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GAD0Ev>:
 801a2e6:	b510      	push	{r4, lr}
 801a2e8:	2104      	movs	r1, #4
 801a2ea:	4604      	mov	r4, r0
 801a2ec:	f00b fbd1 	bl	8025a92 <_ZdlPvj>
 801a2f0:	4620      	mov	r0, r4
 801a2f2:	bd10      	pop	{r4, pc}

0801a2f4 <_ZN8touchgfx8LCD16bpp53TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_NoGAD0Ev>:
 801a2f4:	b510      	push	{r4, lr}
 801a2f6:	2104      	movs	r1, #4
 801a2f8:	4604      	mov	r4, r0
 801a2fa:	f00b fbca 	bl	8025a92 <_ZdlPvj>
 801a2fe:	4620      	mov	r0, r4
 801a300:	bd10      	pop	{r4, pc}

0801a302 <_ZN8touchgfx8LCD16bpp51TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_GAD0Ev>:
 801a302:	b510      	push	{r4, lr}
 801a304:	2104      	movs	r1, #4
 801a306:	4604      	mov	r4, r0
 801a308:	f00b fbc3 	bl	8025a92 <_ZdlPvj>
 801a30c:	4620      	mov	r0, r4
 801a30e:	bd10      	pop	{r4, pc}

0801a310 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGAD0Ev>:
 801a310:	b510      	push	{r4, lr}
 801a312:	2104      	movs	r1, #4
 801a314:	4604      	mov	r4, r0
 801a316:	f00b fbbc 	bl	8025a92 <_ZdlPvj>
 801a31a:	4620      	mov	r0, r4
 801a31c:	bd10      	pop	{r4, pc}

0801a31e <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GAD0Ev>:
 801a31e:	b510      	push	{r4, lr}
 801a320:	2104      	movs	r1, #4
 801a322:	4604      	mov	r4, r0
 801a324:	f00b fbb5 	bl	8025a92 <_ZdlPvj>
 801a328:	4620      	mov	r0, r4
 801a32a:	bd10      	pop	{r4, pc}

0801a32c <_ZN8touchgfx8LCD16bpp37TextureMapper_A4_NearestNeighbor_NoGAD0Ev>:
 801a32c:	b510      	push	{r4, lr}
 801a32e:	2104      	movs	r1, #4
 801a330:	4604      	mov	r4, r0
 801a332:	f00b fbae 	bl	8025a92 <_ZdlPvj>
 801a336:	4620      	mov	r0, r4
 801a338:	bd10      	pop	{r4, pc}

0801a33a <_ZN8touchgfx8LCD16bpp35TextureMapper_A4_NearestNeighbor_GAD0Ev>:
 801a33a:	b510      	push	{r4, lr}
 801a33c:	2104      	movs	r1, #4
 801a33e:	4604      	mov	r4, r0
 801a340:	f00b fba7 	bl	8025a92 <_ZdlPvj>
 801a344:	4620      	mov	r0, r4
 801a346:	bd10      	pop	{r4, pc}

0801a348 <_ZN8touchgfx8LCD16bpp19DecompressorRGB_QOI16blitCopyARGB8888EPKhRKNS_4RectES6_h>:
 801a348:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 801a34c:	b08f      	sub	sp, #60	@ 0x3c
 801a34e:	4616      	mov	r6, r2
 801a350:	f89d 2060 	ldrb.w	r2, [sp, #96]	@ 0x60
 801a354:	9205      	str	r2, [sp, #20]
 801a356:	4682      	mov	sl, r0
 801a358:	460d      	mov	r5, r1
 801a35a:	2a00      	cmp	r2, #0
 801a35c:	f000 82b7 	beq.w	801a8ce <_ZN8touchgfx8LCD16bpp19DecompressorRGB_QOI16blitCopyARGB8888EPKhRKNS_4RectES6_h+0x586>
 801a360:	6830      	ldr	r0, [r6, #0]
 801a362:	6871      	ldr	r1, [r6, #4]
 801a364:	ac0a      	add	r4, sp, #40	@ 0x28
 801a366:	c403      	stmia	r4!, {r0, r1}
 801a368:	6818      	ldr	r0, [r3, #0]
 801a36a:	6859      	ldr	r1, [r3, #4]
 801a36c:	ac0c      	add	r4, sp, #48	@ 0x30
 801a36e:	c403      	stmia	r4!, {r0, r1}
 801a370:	a80a      	add	r0, sp, #40	@ 0x28
 801a372:	f7f9 fca7 	bl	8013cc4 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectE>
 801a376:	4631      	mov	r1, r6
 801a378:	a80c      	add	r0, sp, #48	@ 0x30
 801a37a:	f7f9 fccb 	bl	8013d14 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectERKS1_>
 801a37e:	f9bd 202c 	ldrsh.w	r2, [sp, #44]	@ 0x2c
 801a382:	f5b2 6f80 	cmp.w	r2, #1024	@ 0x400
 801a386:	bfd7      	itett	le
 801a388:	b293      	uxthle	r3, r2
 801a38a:	2301      	movgt	r3, #1
 801a38c:	f44f 6180 	movle.w	r1, #1024	@ 0x400
 801a390:	fb91 f3f3 	sdivle	r3, r1, r3
 801a394:	9300      	str	r3, [sp, #0]
 801a396:	f105 0308 	add.w	r3, r5, #8
 801a39a:	9900      	ldr	r1, [sp, #0]
 801a39c:	9306      	str	r3, [sp, #24]
 801a39e:	f9bd 302e 	ldrsh.w	r3, [sp, #46]	@ 0x2e
 801a3a2:	440b      	add	r3, r1
 801a3a4:	3b01      	subs	r3, #1
 801a3a6:	fb93 f3f1 	sdiv	r3, r3, r1
 801a3aa:	9906      	ldr	r1, [sp, #24]
 801a3ac:	3b01      	subs	r3, #1
 801a3ae:	b29b      	uxth	r3, r3
 801a3b0:	eb01 0383 	add.w	r3, r1, r3, lsl #2
 801a3b4:	9307      	str	r3, [sp, #28]
 801a3b6:	9900      	ldr	r1, [sp, #0]
 801a3b8:	f9bd 3032 	ldrsh.w	r3, [sp, #50]	@ 0x32
 801a3bc:	fb93 f0f1 	sdiv	r0, r3, r1
 801a3c0:	b284      	uxth	r4, r0
 801a3c2:	9402      	str	r4, [sp, #8]
 801a3c4:	9d02      	ldr	r5, [sp, #8]
 801a3c6:	9c00      	ldr	r4, [sp, #0]
 801a3c8:	f8bd 1030 	ldrh.w	r1, [sp, #48]	@ 0x30
 801a3cc:	fb05 3414 	mls	r4, r5, r4, r3
 801a3d0:	fb14 f402 	smulbb	r4, r4, r2
 801a3d4:	440c      	add	r4, r1
 801a3d6:	b2a4      	uxth	r4, r4
 801a3d8:	2d00      	cmp	r5, #0
 801a3da:	d06c      	beq.n	801a4b6 <_ZN8touchgfx8LCD16bpp19DecompressorRGB_QOI16blitCopyARGB8888EPKhRKNS_4RectES6_h+0x16e>
 801a3dc:	1e6a      	subs	r2, r5, #1
 801a3de:	9806      	ldr	r0, [sp, #24]
 801a3e0:	f850 6022 	ldr.w	r6, [r0, r2, lsl #2]
 801a3e4:	9a07      	ldr	r2, [sp, #28]
 801a3e6:	ba36      	rev	r6, r6
 801a3e8:	4416      	add	r6, r2
 801a3ea:	f8bd 2028 	ldrh.w	r2, [sp, #40]	@ 0x28
 801a3ee:	f9bd 5036 	ldrsh.w	r5, [sp, #54]	@ 0x36
 801a3f2:	f8df 9334 	ldr.w	r9, [pc, #820]	@ 801a728 <_ZN8touchgfx8LCD16bpp19DecompressorRGB_QOI16blitCopyARGB8888EPKhRKNS_4RectES6_h+0x3e0>
 801a3f6:	4411      	add	r1, r2
 801a3f8:	f8bd 202a 	ldrh.w	r2, [sp, #42]	@ 0x2a
 801a3fc:	f8ad 1030 	strh.w	r1, [sp, #48]	@ 0x30
 801a400:	4413      	add	r3, r2
 801a402:	f8ad 3032 	strh.w	r3, [sp, #50]	@ 0x32
 801a406:	f9bd 3034 	ldrsh.w	r3, [sp, #52]	@ 0x34
 801a40a:	9301      	str	r3, [sp, #4]
 801a40c:	4bc4      	ldr	r3, [pc, #784]	@ (801a720 <_ZN8touchgfx8LCD16bpp19DecompressorRGB_QOI16blitCopyARGB8888EPKhRKNS_4RectES6_h+0x3d8>)
 801a40e:	6818      	ldr	r0, [r3, #0]
 801a410:	6803      	ldr	r3, [r0, #0]
 801a412:	6a9b      	ldr	r3, [r3, #40]	@ 0x28
 801a414:	4798      	blx	r3
 801a416:	4bc3      	ldr	r3, [pc, #780]	@ (801a724 <_ZN8touchgfx8LCD16bpp19DecompressorRGB_QOI16blitCopyARGB8888EPKhRKNS_4RectES6_h+0x3dc>)
 801a418:	f9bd 2030 	ldrsh.w	r2, [sp, #48]	@ 0x30
 801a41c:	881b      	ldrh	r3, [r3, #0]
 801a41e:	f9bd 8032 	ldrsh.w	r8, [sp, #50]	@ 0x32
 801a422:	fb03 2808 	mla	r8, r3, r8, r2
 801a426:	eb00 0848 	add.w	r8, r0, r8, lsl #1
 801a42a:	436b      	muls	r3, r5
 801a42c:	eb08 0343 	add.w	r3, r8, r3, lsl #1
 801a430:	9309      	str	r3, [sp, #36]	@ 0x24
 801a432:	2500      	movs	r5, #0
 801a434:	f9bd 302c 	ldrsh.w	r3, [sp, #44]	@ 0x2c
 801a438:	fb94 f3f3 	sdiv	r3, r4, r3
 801a43c:	9304      	str	r3, [sp, #16]
 801a43e:	f10a 0304 	add.w	r3, sl, #4
 801a442:	f44f 7280 	mov.w	r2, #256	@ 0x100
 801a446:	4629      	mov	r1, r5
 801a448:	4618      	mov	r0, r3
 801a44a:	9308      	str	r3, [sp, #32]
 801a44c:	f00b fdd7 	bl	8025ffe <memset>
 801a450:	9b09      	ldr	r3, [sp, #36]	@ 0x24
 801a452:	4543      	cmp	r3, r8
 801a454:	f240 8236 	bls.w	801a8c4 <_ZN8touchgfx8LCD16bpp19DecompressorRGB_QOI16blitCopyARGB8888EPKhRKNS_4RectES6_h+0x57c>
 801a458:	2203      	movs	r2, #3
 801a45a:	2107      	movs	r1, #7
 801a45c:	200b      	movs	r0, #11
 801a45e:	2c00      	cmp	r4, #0
 801a460:	f000 8131 	beq.w	801a6c6 <_ZN8touchgfx8LCD16bpp19DecompressorRGB_QOI16blitCopyARGB8888EPKhRKNS_4RectES6_h+0x37e>
 801a464:	7833      	ldrb	r3, [r6, #0]
 801a466:	b2db      	uxtb	r3, r3
 801a468:	2bfe      	cmp	r3, #254	@ 0xfe
 801a46a:	d126      	bne.n	801a4ba <_ZN8touchgfx8LCD16bpp19DecompressorRGB_QOI16blitCopyARGB8888EPKhRKNS_4RectES6_h+0x172>
 801a46c:	f896 e001 	ldrb.w	lr, [r6, #1]
 801a470:	f896 c002 	ldrb.w	ip, [r6, #2]
 801a474:	f896 b003 	ldrb.w	fp, [r6, #3]
 801a478:	fa5f fe8e 	uxtb.w	lr, lr
 801a47c:	fa5f fc8c 	uxtb.w	ip, ip
 801a480:	f36e 0507 	bfi	r5, lr, #0, #8
 801a484:	f36c 250f 	bfi	r5, ip, #8, #8
 801a488:	fa5f fb8b 	uxtb.w	fp, fp
 801a48c:	eb0c 0c8c 	add.w	ip, ip, ip, lsl #2
 801a490:	f36b 4517 	bfi	r5, fp, #16, #8
 801a494:	fb12 cc0b 	smlabb	ip, r2, fp, ip
 801a498:	0e2b      	lsrs	r3, r5, #24
 801a49a:	fb11 cc0e 	smlabb	ip, r1, lr, ip
 801a49e:	fb10 c303 	smlabb	r3, r0, r3, ip
 801a4a2:	f003 033f 	and.w	r3, r3, #63	@ 0x3f
 801a4a6:	eb0a 0383 	add.w	r3, sl, r3, lsl #2
 801a4aa:	3c01      	subs	r4, #1
 801a4ac:	1d37      	adds	r7, r6, #4
 801a4ae:	b2a4      	uxth	r4, r4
 801a4b0:	605d      	str	r5, [r3, #4]
 801a4b2:	463e      	mov	r6, r7
 801a4b4:	e7d3      	b.n	801a45e <_ZN8touchgfx8LCD16bpp19DecompressorRGB_QOI16blitCopyARGB8888EPKhRKNS_4RectES6_h+0x116>
 801a4b6:	9e07      	ldr	r6, [sp, #28]
 801a4b8:	e797      	b.n	801a3ea <_ZN8touchgfx8LCD16bpp19DecompressorRGB_QOI16blitCopyARGB8888EPKhRKNS_4RectES6_h+0xa2>
 801a4ba:	2bff      	cmp	r3, #255	@ 0xff
 801a4bc:	d127      	bne.n	801a50e <_ZN8touchgfx8LCD16bpp19DecompressorRGB_QOI16blitCopyARGB8888EPKhRKNS_4RectES6_h+0x1c6>
 801a4be:	f896 c001 	ldrb.w	ip, [r6, #1]
 801a4c2:	78b3      	ldrb	r3, [r6, #2]
 801a4c4:	f896 e003 	ldrb.w	lr, [r6, #3]
 801a4c8:	f896 b004 	ldrb.w	fp, [r6, #4]
 801a4cc:	fa5f fc8c 	uxtb.w	ip, ip
 801a4d0:	b2db      	uxtb	r3, r3
 801a4d2:	f36c 0507 	bfi	r5, ip, #0, #8
 801a4d6:	f363 250f 	bfi	r5, r3, #8, #8
 801a4da:	fa5f fe8e 	uxtb.w	lr, lr
 801a4de:	eb03 0383 	add.w	r3, r3, r3, lsl #2
 801a4e2:	fb12 330e 	smlabb	r3, r2, lr, r3
 801a4e6:	fa5f fb8b 	uxtb.w	fp, fp
 801a4ea:	f36e 4517 	bfi	r5, lr, #16, #8
 801a4ee:	fb11 330c 	smlabb	r3, r1, ip, r3
 801a4f2:	f36b 651f 	bfi	r5, fp, #24, #8
 801a4f6:	fb10 3b0b 	smlabb	fp, r0, fp, r3
 801a4fa:	f00b 0b3f 	and.w	fp, fp, #63	@ 0x3f
 801a4fe:	eb0a 0b8b 	add.w	fp, sl, fp, lsl #2
 801a502:	3c01      	subs	r4, #1
 801a504:	1d77      	adds	r7, r6, #5
 801a506:	b2a4      	uxth	r4, r4
 801a508:	f8cb 5004 	str.w	r5, [fp, #4]
 801a50c:	e7d1      	b.n	801a4b2 <_ZN8touchgfx8LCD16bpp19DecompressorRGB_QOI16blitCopyARGB8888EPKhRKNS_4RectES6_h+0x16a>
 801a50e:	ea5f 1ca3 	movs.w	ip, r3, asr #6
 801a512:	f106 0701 	add.w	r7, r6, #1
 801a516:	d107      	bne.n	801a528 <_ZN8touchgfx8LCD16bpp19DecompressorRGB_QOI16blitCopyARGB8888EPKhRKNS_4RectES6_h+0x1e0>
 801a518:	f003 033f 	and.w	r3, r3, #63	@ 0x3f
 801a51c:	eb0a 0383 	add.w	r3, sl, r3, lsl #2
 801a520:	685d      	ldr	r5, [r3, #4]
 801a522:	3c01      	subs	r4, #1
 801a524:	b2a4      	uxth	r4, r4
 801a526:	e7c4      	b.n	801a4b2 <_ZN8touchgfx8LCD16bpp19DecompressorRGB_QOI16blitCopyARGB8888EPKhRKNS_4RectES6_h+0x16a>
 801a528:	f1bc 0f01 	cmp.w	ip, #1
 801a52c:	d12c      	bne.n	801a588 <_ZN8touchgfx8LCD16bpp19DecompressorRGB_QOI16blitCopyARGB8888EPKhRKNS_4RectES6_h+0x240>
 801a52e:	f003 0e03 	and.w	lr, r3, #3
 801a532:	f1ae 0e02 	sub.w	lr, lr, #2
 801a536:	eb05 0ece 	add.w	lr, r5, lr, lsl #3
 801a53a:	fa5f fe8e 	uxtb.w	lr, lr
 801a53e:	f003 0c0c 	and.w	ip, r3, #12
 801a542:	f36e 0507 	bfi	r5, lr, #0, #8
 801a546:	f1ac 0c08 	sub.w	ip, ip, #8
 801a54a:	eb0c 2c15 	add.w	ip, ip, r5, lsr #8
 801a54e:	f00c 0cff 	and.w	ip, ip, #255	@ 0xff
 801a552:	f36c 250f 	bfi	r5, ip, #8, #8
 801a556:	f3c3 1301 	ubfx	r3, r3, #4, #2
 801a55a:	f3c5 4607 	ubfx	r6, r5, #16, #8
 801a55e:	3b02      	subs	r3, #2
 801a560:	eb06 03c3 	add.w	r3, r6, r3, lsl #3
 801a564:	b2db      	uxtb	r3, r3
 801a566:	eb0c 0c8c 	add.w	ip, ip, ip, lsl #2
 801a56a:	f363 4517 	bfi	r5, r3, #16, #8
 801a56e:	fb12 cc03 	smlabb	ip, r2, r3, ip
 801a572:	0e2e      	lsrs	r6, r5, #24
 801a574:	fb11 cc0e 	smlabb	ip, r1, lr, ip
 801a578:	fb10 c606 	smlabb	r6, r0, r6, ip
 801a57c:	f006 063f 	and.w	r6, r6, #63	@ 0x3f
 801a580:	eb0a 0686 	add.w	r6, sl, r6, lsl #2
 801a584:	6075      	str	r5, [r6, #4]
 801a586:	e7cc      	b.n	801a522 <_ZN8touchgfx8LCD16bpp19DecompressorRGB_QOI16blitCopyARGB8888EPKhRKNS_4RectES6_h+0x1da>
 801a588:	f1bc 0f02 	cmp.w	ip, #2
 801a58c:	f003 033f 	and.w	r3, r3, #63	@ 0x3f
 801a590:	d12a      	bne.n	801a5e8 <_ZN8touchgfx8LCD16bpp19DecompressorRGB_QOI16blitCopyARGB8888EPKhRKNS_4RectES6_h+0x2a0>
 801a592:	1cb7      	adds	r7, r6, #2
 801a594:	7876      	ldrb	r6, [r6, #1]
 801a596:	b2f6      	uxtb	r6, r6
 801a598:	f006 0c0f 	and.w	ip, r6, #15
 801a59c:	3b20      	subs	r3, #32
 801a59e:	f1ac 0c08 	sub.w	ip, ip, #8
 801a5a2:	449c      	add	ip, r3
 801a5a4:	eb05 0ccc 	add.w	ip, r5, ip, lsl #3
 801a5a8:	fa5f fc8c 	uxtb.w	ip, ip
 801a5ac:	f36c 0507 	bfi	r5, ip, #0, #8
 801a5b0:	f3c5 2e07 	ubfx	lr, r5, #8, #8
 801a5b4:	eb0e 0e83 	add.w	lr, lr, r3, lsl #2
 801a5b8:	fa5f fe8e 	uxtb.w	lr, lr
 801a5bc:	1136      	asrs	r6, r6, #4
 801a5be:	f36e 250f 	bfi	r5, lr, #8, #8
 801a5c2:	3e08      	subs	r6, #8
 801a5c4:	4433      	add	r3, r6
 801a5c6:	f3c5 4607 	ubfx	r6, r5, #16, #8
 801a5ca:	eb06 03c3 	add.w	r3, r6, r3, lsl #3
 801a5ce:	b2db      	uxtb	r3, r3
 801a5d0:	eb0e 0e8e 	add.w	lr, lr, lr, lsl #2
 801a5d4:	f363 4517 	bfi	r5, r3, #16, #8
 801a5d8:	fb12 ee03 	smlabb	lr, r2, r3, lr
 801a5dc:	0e2e      	lsrs	r6, r5, #24
 801a5de:	fb11 ee0c 	smlabb	lr, r1, ip, lr
 801a5e2:	fb10 e606 	smlabb	r6, r0, r6, lr
 801a5e6:	e7c9      	b.n	801a57c <_ZN8touchgfx8LCD16bpp19DecompressorRGB_QOI16blitCopyARGB8888EPKhRKNS_4RectES6_h+0x234>
 801a5e8:	1c5e      	adds	r6, r3, #1
 801a5ea:	42a6      	cmp	r6, r4
 801a5ec:	dd4e      	ble.n	801a68c <_ZN8touchgfx8LCD16bpp19DecompressorRGB_QOI16blitCopyARGB8888EPKhRKNS_4RectES6_h+0x344>
 801a5ee:	1b36      	subs	r6, r6, r4
 801a5f0:	2e00      	cmp	r6, #0
 801a5f2:	dc4e      	bgt.n	801a692 <_ZN8touchgfx8LCD16bpp19DecompressorRGB_QOI16blitCopyARGB8888EPKhRKNS_4RectES6_h+0x34a>
 801a5f4:	f8dd b004 	ldr.w	fp, [sp, #4]
 801a5f8:	2400      	movs	r4, #0
 801a5fa:	f1bb 0f00 	cmp.w	fp, #0
 801a5fe:	f340 8122 	ble.w	801a846 <_ZN8touchgfx8LCD16bpp19DecompressorRGB_QOI16blitCopyARGB8888EPKhRKNS_4RectES6_h+0x4fe>
 801a602:	1c7b      	adds	r3, r7, #1
 801a604:	9303      	str	r3, [sp, #12]
 801a606:	783b      	ldrb	r3, [r7, #0]
 801a608:	b2db      	uxtb	r3, r3
 801a60a:	2bfe      	cmp	r3, #254	@ 0xfe
 801a60c:	d160      	bne.n	801a6d0 <_ZN8touchgfx8LCD16bpp19DecompressorRGB_QOI16blitCopyARGB8888EPKhRKNS_4RectES6_h+0x388>
 801a60e:	7879      	ldrb	r1, [r7, #1]
 801a610:	78ba      	ldrb	r2, [r7, #2]
 801a612:	78f8      	ldrb	r0, [r7, #3]
 801a614:	b2c9      	uxtb	r1, r1
 801a616:	f361 0507 	bfi	r5, r1, #0, #8
 801a61a:	b2d2      	uxtb	r2, r2
 801a61c:	1d3b      	adds	r3, r7, #4
 801a61e:	f362 250f 	bfi	r5, r2, #8, #8
 801a622:	b2c0      	uxtb	r0, r0
 801a624:	9303      	str	r3, [sp, #12]
 801a626:	eb02 0282 	add.w	r2, r2, r2, lsl #2
 801a62a:	2303      	movs	r3, #3
 801a62c:	fb13 2200 	smlabb	r2, r3, r0, r2
 801a630:	f360 4517 	bfi	r5, r0, #16, #8
 801a634:	2307      	movs	r3, #7
 801a636:	fb13 2101 	smlabb	r1, r3, r1, r2
 801a63a:	0e2e      	lsrs	r6, r5, #24
 801a63c:	230b      	movs	r3, #11
 801a63e:	fb13 1306 	smlabb	r3, r3, r6, r1
 801a642:	f003 033f 	and.w	r3, r3, #63	@ 0x3f
 801a646:	eb0a 0383 	add.w	r3, sl, r3, lsl #2
 801a64a:	605d      	str	r5, [r3, #4]
 801a64c:	2601      	movs	r6, #1
 801a64e:	4637      	mov	r7, r6
 801a650:	0e2b      	lsrs	r3, r5, #24
 801a652:	ebab 0b07 	sub.w	fp, fp, r7
 801a656:	eba6 0607 	sub.w	r6, r6, r7
 801a65a:	f040 80d3 	bne.w	801a804 <_ZN8touchgfx8LCD16bpp19DecompressorRGB_QOI16blitCopyARGB8888EPKhRKNS_4RectES6_h+0x4bc>
 801a65e:	b18c      	cbz	r4, 801a684 <_ZN8touchgfx8LCD16bpp19DecompressorRGB_QOI16blitCopyARGB8888EPKhRKNS_4RectES6_h+0x33c>
 801a660:	4648      	mov	r0, r9
 801a662:	00a1      	lsls	r1, r4, #2
 801a664:	f7f5 fa19 	bl	800fa9a <_ZN8touchgfx5paint9flushLineEPmi>
 801a668:	9b05      	ldr	r3, [sp, #20]
 801a66a:	4622      	mov	r2, r4
 801a66c:	4649      	mov	r1, r9
 801a66e:	4640      	mov	r0, r8
 801a670:	f7f5 fac6 	bl	800fc00 <_ZN8touchgfx5paint6rgb56516lineFromARGB8888EPtPKmjh>
 801a674:	4b2c      	ldr	r3, [pc, #176]	@ (801a728 <_ZN8touchgfx8LCD16bpp19DecompressorRGB_QOI16blitCopyARGB8888EPKhRKNS_4RectES6_h+0x3e0>)
 801a676:	4a2d      	ldr	r2, [pc, #180]	@ (801a72c <_ZN8touchgfx8LCD16bpp19DecompressorRGB_QOI16blitCopyARGB8888EPKhRKNS_4RectES6_h+0x3e4>)
 801a678:	4599      	cmp	r9, r3
 801a67a:	bf08      	it	eq
 801a67c:	4613      	moveq	r3, r2
 801a67e:	eb08 0844 	add.w	r8, r8, r4, lsl #1
 801a682:	4699      	mov	r9, r3
 801a684:	eb08 0847 	add.w	r8, r8, r7, lsl #1
 801a688:	2400      	movs	r4, #0
 801a68a:	e0da      	b.n	801a842 <_ZN8touchgfx8LCD16bpp19DecompressorRGB_QOI16blitCopyARGB8888EPKhRKNS_4RectES6_h+0x4fa>
 801a68c:	1ba6      	subs	r6, r4, r6
 801a68e:	b2b4      	uxth	r4, r6
 801a690:	e70f      	b.n	801a4b2 <_ZN8touchgfx8LCD16bpp19DecompressorRGB_QOI16blitCopyARGB8888EPKhRKNS_4RectES6_h+0x16a>
 801a692:	9b01      	ldr	r3, [sp, #4]
 801a694:	9a01      	ldr	r2, [sp, #4]
 801a696:	42b3      	cmp	r3, r6
 801a698:	bfa8      	it	ge
 801a69a:	4633      	movge	r3, r6
 801a69c:	0e2c      	lsrs	r4, r5, #24
 801a69e:	eba2 0b03 	sub.w	fp, r2, r3
 801a6a2:	eba6 0603 	sub.w	r6, r6, r3
 801a6a6:	d00b      	beq.n	801a6c0 <_ZN8touchgfx8LCD16bpp19DecompressorRGB_QOI16blitCopyARGB8888EPKhRKNS_4RectES6_h+0x378>
 801a6a8:	f1a9 0104 	sub.w	r1, r9, #4
 801a6ac:	461a      	mov	r2, r3
 801a6ae:	2a00      	cmp	r2, #0
 801a6b0:	dc02      	bgt.n	801a6b8 <_ZN8touchgfx8LCD16bpp19DecompressorRGB_QOI16blitCopyARGB8888EPKhRKNS_4RectES6_h+0x370>
 801a6b2:	ea23 74e3 	bic.w	r4, r3, r3, asr #31
 801a6b6:	e7a0      	b.n	801a5fa <_ZN8touchgfx8LCD16bpp19DecompressorRGB_QOI16blitCopyARGB8888EPKhRKNS_4RectES6_h+0x2b2>
 801a6b8:	f841 5f04 	str.w	r5, [r1, #4]!
 801a6bc:	3a01      	subs	r2, #1
 801a6be:	e7f6      	b.n	801a6ae <_ZN8touchgfx8LCD16bpp19DecompressorRGB_QOI16blitCopyARGB8888EPKhRKNS_4RectES6_h+0x366>
 801a6c0:	eb08 0843 	add.w	r8, r8, r3, lsl #1
 801a6c4:	e799      	b.n	801a5fa <_ZN8touchgfx8LCD16bpp19DecompressorRGB_QOI16blitCopyARGB8888EPKhRKNS_4RectES6_h+0x2b2>
 801a6c6:	4637      	mov	r7, r6
 801a6c8:	f8dd b004 	ldr.w	fp, [sp, #4]
 801a6cc:	4626      	mov	r6, r4
 801a6ce:	e794      	b.n	801a5fa <_ZN8touchgfx8LCD16bpp19DecompressorRGB_QOI16blitCopyARGB8888EPKhRKNS_4RectES6_h+0x2b2>
 801a6d0:	2bff      	cmp	r3, #255	@ 0xff
 801a6d2:	d11d      	bne.n	801a710 <_ZN8touchgfx8LCD16bpp19DecompressorRGB_QOI16blitCopyARGB8888EPKhRKNS_4RectES6_h+0x3c8>
 801a6d4:	7878      	ldrb	r0, [r7, #1]
 801a6d6:	78ba      	ldrb	r2, [r7, #2]
 801a6d8:	78fe      	ldrb	r6, [r7, #3]
 801a6da:	1d7b      	adds	r3, r7, #5
 801a6dc:	b2c0      	uxtb	r0, r0
 801a6de:	9303      	str	r3, [sp, #12]
 801a6e0:	793b      	ldrb	r3, [r7, #4]
 801a6e2:	f360 0507 	bfi	r5, r0, #0, #8
 801a6e6:	b2d2      	uxtb	r2, r2
 801a6e8:	b2d9      	uxtb	r1, r3
 801a6ea:	f362 250f 	bfi	r5, r2, #8, #8
 801a6ee:	b2f6      	uxtb	r6, r6
 801a6f0:	2303      	movs	r3, #3
 801a6f2:	eb02 0282 	add.w	r2, r2, r2, lsl #2
 801a6f6:	fb13 2206 	smlabb	r2, r3, r6, r2
 801a6fa:	2307      	movs	r3, #7
 801a6fc:	fb13 2000 	smlabb	r0, r3, r0, r2
 801a700:	f366 4517 	bfi	r5, r6, #16, #8
 801a704:	230b      	movs	r3, #11
 801a706:	f361 651f 	bfi	r5, r1, #24, #8
 801a70a:	fb13 0301 	smlabb	r3, r3, r1, r0
 801a70e:	e798      	b.n	801a642 <_ZN8touchgfx8LCD16bpp19DecompressorRGB_QOI16blitCopyARGB8888EPKhRKNS_4RectES6_h+0x2fa>
 801a710:	119e      	asrs	r6, r3, #6
 801a712:	d10d      	bne.n	801a730 <_ZN8touchgfx8LCD16bpp19DecompressorRGB_QOI16blitCopyARGB8888EPKhRKNS_4RectES6_h+0x3e8>
 801a714:	f003 033f 	and.w	r3, r3, #63	@ 0x3f
 801a718:	eb0a 0383 	add.w	r3, sl, r3, lsl #2
 801a71c:	685d      	ldr	r5, [r3, #4]
 801a71e:	e795      	b.n	801a64c <_ZN8touchgfx8LCD16bpp19DecompressorRGB_QOI16blitCopyARGB8888EPKhRKNS_4RectES6_h+0x304>
 801a720:	20002fa8 	.word	0x20002fa8
 801a724:	20002fa2 	.word	0x20002fa2
 801a728:	20000120 	.word	0x20000120
 801a72c:	20000220 	.word	0x20000220
 801a730:	2e01      	cmp	r6, #1
 801a732:	ea4f 6115 	mov.w	r1, r5, lsr #24
 801a736:	d12b      	bne.n	801a790 <_ZN8touchgfx8LCD16bpp19DecompressorRGB_QOI16blitCopyARGB8888EPKhRKNS_4RectES6_h+0x448>
 801a738:	f003 0003 	and.w	r0, r3, #3
 801a73c:	3802      	subs	r0, #2
 801a73e:	eb05 00c0 	add.w	r0, r5, r0, lsl #3
 801a742:	b2c0      	uxtb	r0, r0
 801a744:	f003 020c 	and.w	r2, r3, #12
 801a748:	f360 0507 	bfi	r5, r0, #0, #8
 801a74c:	3a08      	subs	r2, #8
 801a74e:	eb02 2215 	add.w	r2, r2, r5, lsr #8
 801a752:	f002 02ff 	and.w	r2, r2, #255	@ 0xff
 801a756:	f362 250f 	bfi	r5, r2, #8, #8
 801a75a:	f3c3 1301 	ubfx	r3, r3, #4, #2
 801a75e:	1e9f      	subs	r7, r3, #2
 801a760:	f3c5 4307 	ubfx	r3, r5, #16, #8
 801a764:	eb03 03c7 	add.w	r3, r3, r7, lsl #3
 801a768:	b2db      	uxtb	r3, r3
 801a76a:	2703      	movs	r7, #3
 801a76c:	eb02 0282 	add.w	r2, r2, r2, lsl #2
 801a770:	fb17 2203 	smlabb	r2, r7, r3, r2
 801a774:	2707      	movs	r7, #7
 801a776:	f363 4517 	bfi	r5, r3, #16, #8
 801a77a:	fb17 2000 	smlabb	r0, r7, r0, r2
 801a77e:	230b      	movs	r3, #11
 801a780:	fb13 0101 	smlabb	r1, r3, r1, r0
 801a784:	f001 013f 	and.w	r1, r1, #63	@ 0x3f
 801a788:	eb0a 0181 	add.w	r1, sl, r1, lsl #2
 801a78c:	604d      	str	r5, [r1, #4]
 801a78e:	e75e      	b.n	801a64e <_ZN8touchgfx8LCD16bpp19DecompressorRGB_QOI16blitCopyARGB8888EPKhRKNS_4RectES6_h+0x306>
 801a790:	2e02      	cmp	r6, #2
 801a792:	f003 033f 	and.w	r3, r3, #63	@ 0x3f
 801a796:	d12f      	bne.n	801a7f8 <_ZN8touchgfx8LCD16bpp19DecompressorRGB_QOI16blitCopyARGB8888EPKhRKNS_4RectES6_h+0x4b0>
 801a798:	7878      	ldrb	r0, [r7, #1]
 801a79a:	1cba      	adds	r2, r7, #2
 801a79c:	b2c0      	uxtb	r0, r0
 801a79e:	9203      	str	r2, [sp, #12]
 801a7a0:	f000 020f 	and.w	r2, r0, #15
 801a7a4:	3b20      	subs	r3, #32
 801a7a6:	3a08      	subs	r2, #8
 801a7a8:	441a      	add	r2, r3
 801a7aa:	eb05 02c2 	add.w	r2, r5, r2, lsl #3
 801a7ae:	b2d2      	uxtb	r2, r2
 801a7b0:	f362 0507 	bfi	r5, r2, #0, #8
 801a7b4:	f3c5 2607 	ubfx	r6, r5, #8, #8
 801a7b8:	eb06 0683 	add.w	r6, r6, r3, lsl #2
 801a7bc:	b2f6      	uxtb	r6, r6
 801a7be:	1100      	asrs	r0, r0, #4
 801a7c0:	f366 250f 	bfi	r5, r6, #8, #8
 801a7c4:	3808      	subs	r0, #8
 801a7c6:	4403      	add	r3, r0
 801a7c8:	f3c5 4007 	ubfx	r0, r5, #16, #8
 801a7cc:	eb00 03c3 	add.w	r3, r0, r3, lsl #3
 801a7d0:	b2db      	uxtb	r3, r3
 801a7d2:	2003      	movs	r0, #3
 801a7d4:	eb06 0686 	add.w	r6, r6, r6, lsl #2
 801a7d8:	fb10 6603 	smlabb	r6, r0, r3, r6
 801a7dc:	2007      	movs	r0, #7
 801a7de:	f363 4517 	bfi	r5, r3, #16, #8
 801a7e2:	fb10 6202 	smlabb	r2, r0, r2, r6
 801a7e6:	230b      	movs	r3, #11
 801a7e8:	fb13 2101 	smlabb	r1, r3, r1, r2
 801a7ec:	f001 013f 	and.w	r1, r1, #63	@ 0x3f
 801a7f0:	eb0a 0181 	add.w	r1, sl, r1, lsl #2
 801a7f4:	604d      	str	r5, [r1, #4]
 801a7f6:	e729      	b.n	801a64c <_ZN8touchgfx8LCD16bpp19DecompressorRGB_QOI16blitCopyARGB8888EPKhRKNS_4RectES6_h+0x304>
 801a7f8:	1c5e      	adds	r6, r3, #1
 801a7fa:	45b3      	cmp	fp, r6
 801a7fc:	465f      	mov	r7, fp
 801a7fe:	bfa8      	it	ge
 801a800:	4637      	movge	r7, r6
 801a802:	e725      	b.n	801a650 <_ZN8touchgfx8LCD16bpp19DecompressorRGB_QOI16blitCopyARGB8888EPKhRKNS_4RectES6_h+0x308>
 801a804:	193b      	adds	r3, r7, r4
 801a806:	2b40      	cmp	r3, #64	@ 0x40
 801a808:	dd13      	ble.n	801a832 <_ZN8touchgfx8LCD16bpp19DecompressorRGB_QOI16blitCopyARGB8888EPKhRKNS_4RectES6_h+0x4ea>
 801a80a:	4648      	mov	r0, r9
 801a80c:	00a1      	lsls	r1, r4, #2
 801a80e:	f7f5 f944 	bl	800fa9a <_ZN8touchgfx5paint9flushLineEPmi>
 801a812:	4649      	mov	r1, r9
 801a814:	9b05      	ldr	r3, [sp, #20]
 801a816:	4622      	mov	r2, r4
 801a818:	4640      	mov	r0, r8
 801a81a:	f7f5 f9f1 	bl	800fc00 <_ZN8touchgfx5paint6rgb56516lineFromARGB8888EPtPKmjh>
 801a81e:	4b2d      	ldr	r3, [pc, #180]	@ (801a8d4 <_ZN8touchgfx8LCD16bpp19DecompressorRGB_QOI16blitCopyARGB8888EPKhRKNS_4RectES6_h+0x58c>)
 801a820:	4599      	cmp	r9, r3
 801a822:	bf0c      	ite	eq
 801a824:	f8df 90b8 	ldreq.w	r9, [pc, #184]	@ 801a8e0 <_ZN8touchgfx8LCD16bpp19DecompressorRGB_QOI16blitCopyARGB8888EPKhRKNS_4RectES6_h+0x598>
 801a828:	f8df 90a8 	ldrne.w	r9, [pc, #168]	@ 801a8d4 <_ZN8touchgfx8LCD16bpp19DecompressorRGB_QOI16blitCopyARGB8888EPKhRKNS_4RectES6_h+0x58c>
 801a82c:	eb08 0844 	add.w	r8, r8, r4, lsl #1
 801a830:	2400      	movs	r4, #0
 801a832:	eb09 0284 	add.w	r2, r9, r4, lsl #2
 801a836:	463b      	mov	r3, r7
 801a838:	3b01      	subs	r3, #1
 801a83a:	f842 5b04 	str.w	r5, [r2], #4
 801a83e:	d1fb      	bne.n	801a838 <_ZN8touchgfx8LCD16bpp19DecompressorRGB_QOI16blitCopyARGB8888EPKhRKNS_4RectES6_h+0x4f0>
 801a840:	443c      	add	r4, r7
 801a842:	9f03      	ldr	r7, [sp, #12]
 801a844:	e6d9      	b.n	801a5fa <_ZN8touchgfx8LCD16bpp19DecompressorRGB_QOI16blitCopyARGB8888EPKhRKNS_4RectES6_h+0x2b2>
 801a846:	b15c      	cbz	r4, 801a860 <_ZN8touchgfx8LCD16bpp19DecompressorRGB_QOI16blitCopyARGB8888EPKhRKNS_4RectES6_h+0x518>
 801a848:	00a1      	lsls	r1, r4, #2
 801a84a:	4648      	mov	r0, r9
 801a84c:	f7f5 f925 	bl	800fa9a <_ZN8touchgfx5paint9flushLineEPmi>
 801a850:	4640      	mov	r0, r8
 801a852:	9b05      	ldr	r3, [sp, #20]
 801a854:	4622      	mov	r2, r4
 801a856:	4649      	mov	r1, r9
 801a858:	f7f5 f9d2 	bl	800fc00 <_ZN8touchgfx5paint6rgb56516lineFromARGB8888EPtPKmjh>
 801a85c:	eb08 0844 	add.w	r8, r8, r4, lsl #1
 801a860:	4b1d      	ldr	r3, [pc, #116]	@ (801a8d8 <_ZN8touchgfx8LCD16bpp19DecompressorRGB_QOI16blitCopyARGB8888EPKhRKNS_4RectES6_h+0x590>)
 801a862:	9a01      	ldr	r2, [sp, #4]
 801a864:	881b      	ldrh	r3, [r3, #0]
 801a866:	1a9b      	subs	r3, r3, r2
 801a868:	eb08 0843 	add.w	r8, r8, r3, lsl #1
 801a86c:	9b04      	ldr	r3, [sp, #16]
 801a86e:	3301      	adds	r3, #1
 801a870:	9304      	str	r3, [sp, #16]
 801a872:	9a04      	ldr	r2, [sp, #16]
 801a874:	9b00      	ldr	r3, [sp, #0]
 801a876:	4293      	cmp	r3, r2
 801a878:	d11d      	bne.n	801a8b6 <_ZN8touchgfx8LCD16bpp19DecompressorRGB_QOI16blitCopyARGB8888EPKhRKNS_4RectES6_h+0x56e>
 801a87a:	9b02      	ldr	r3, [sp, #8]
 801a87c:	9a02      	ldr	r2, [sp, #8]
 801a87e:	f8bd 4030 	ldrh.w	r4, [sp, #48]	@ 0x30
 801a882:	f8bd 6028 	ldrh.w	r6, [sp, #40]	@ 0x28
 801a886:	9808      	ldr	r0, [sp, #32]
 801a888:	f103 0b01 	add.w	fp, r3, #1
 801a88c:	9b06      	ldr	r3, [sp, #24]
 801a88e:	f853 7022 	ldr.w	r7, [r3, r2, lsl #2]
 801a892:	9b07      	ldr	r3, [sp, #28]
 801a894:	2500      	movs	r5, #0
 801a896:	ba3f      	rev	r7, r7
 801a898:	1ba4      	subs	r4, r4, r6
 801a89a:	f44f 7280 	mov.w	r2, #256	@ 0x100
 801a89e:	4629      	mov	r1, r5
 801a8a0:	441f      	add	r7, r3
 801a8a2:	b2a4      	uxth	r4, r4
 801a8a4:	f00b fbab 	bl	8025ffe <memset>
 801a8a8:	f8cd b008 	str.w	fp, [sp, #8]
 801a8ac:	9504      	str	r5, [sp, #16]
 801a8ae:	f7f5 f8ed 	bl	800fa8c <_ZN8touchgfx5paint8tearDownEv>
 801a8b2:	463e      	mov	r6, r7
 801a8b4:	e5cc      	b.n	801a450 <_ZN8touchgfx8LCD16bpp19DecompressorRGB_QOI16blitCopyARGB8888EPKhRKNS_4RectES6_h+0x108>
 801a8b6:	f8bd 402c 	ldrh.w	r4, [sp, #44]	@ 0x2c
 801a8ba:	9b01      	ldr	r3, [sp, #4]
 801a8bc:	1ae4      	subs	r4, r4, r3
 801a8be:	1ba4      	subs	r4, r4, r6
 801a8c0:	b2a4      	uxth	r4, r4
 801a8c2:	e7f4      	b.n	801a8ae <_ZN8touchgfx8LCD16bpp19DecompressorRGB_QOI16blitCopyARGB8888EPKhRKNS_4RectES6_h+0x566>
 801a8c4:	4b05      	ldr	r3, [pc, #20]	@ (801a8dc <_ZN8touchgfx8LCD16bpp19DecompressorRGB_QOI16blitCopyARGB8888EPKhRKNS_4RectES6_h+0x594>)
 801a8c6:	6818      	ldr	r0, [r3, #0]
 801a8c8:	6803      	ldr	r3, [r0, #0]
 801a8ca:	6adb      	ldr	r3, [r3, #44]	@ 0x2c
 801a8cc:	4798      	blx	r3
 801a8ce:	b00f      	add	sp, #60	@ 0x3c
 801a8d0:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 801a8d4:	20000120 	.word	0x20000120
 801a8d8:	20002fa2 	.word	0x20002fa2
 801a8dc:	20002fa8 	.word	0x20002fa8
 801a8e0:	20000220 	.word	0x20000220

0801a8e4 <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE14blitCopyRGB565EPKhS3_RKNS_4RectES6_h>:
 801a8e4:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 801a8e8:	b08f      	sub	sp, #60	@ 0x3c
 801a8ea:	461c      	mov	r4, r3
 801a8ec:	9205      	str	r2, [sp, #20]
 801a8ee:	f89d 2064 	ldrb.w	r2, [sp, #100]	@ 0x64
 801a8f2:	9100      	str	r1, [sp, #0]
 801a8f4:	9b18      	ldr	r3, [sp, #96]	@ 0x60
 801a8f6:	9201      	str	r2, [sp, #4]
 801a8f8:	2a00      	cmp	r2, #0
 801a8fa:	f000 8115 	beq.w	801ab28 <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE14blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x244>
 801a8fe:	6820      	ldr	r0, [r4, #0]
 801a900:	6861      	ldr	r1, [r4, #4]
 801a902:	aa0a      	add	r2, sp, #40	@ 0x28
 801a904:	c203      	stmia	r2!, {r0, r1}
 801a906:	6818      	ldr	r0, [r3, #0]
 801a908:	6859      	ldr	r1, [r3, #4]
 801a90a:	aa0c      	add	r2, sp, #48	@ 0x30
 801a90c:	c203      	stmia	r2!, {r0, r1}
 801a90e:	a80a      	add	r0, sp, #40	@ 0x28
 801a910:	f7f9 f9d8 	bl	8013cc4 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectE>
 801a914:	4621      	mov	r1, r4
 801a916:	a80c      	add	r0, sp, #48	@ 0x30
 801a918:	f7f9 f9fc 	bl	8013d14 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectERKS1_>
 801a91c:	f9bd 602c 	ldrsh.w	r6, [sp, #44]	@ 0x2c
 801a920:	f9bd 502e 	ldrsh.w	r5, [sp, #46]	@ 0x2e
 801a924:	f8bd 0030 	ldrh.w	r0, [sp, #48]	@ 0x30
 801a928:	f5b6 6f80 	cmp.w	r6, #1024	@ 0x400
 801a92c:	bfde      	ittt	le
 801a92e:	b2b3      	uxthle	r3, r6
 801a930:	f44f 6280 	movle.w	r2, #1024	@ 0x400
 801a934:	fb92 f3f3 	sdivle	r3, r2, r3
 801a938:	f9bd 2032 	ldrsh.w	r2, [sp, #50]	@ 0x32
 801a93c:	bfc8      	it	gt
 801a93e:	2301      	movgt	r3, #1
 801a940:	fb92 f1f3 	sdiv	r1, r2, r3
 801a944:	fa1f fc81 	uxth.w	ip, r1
 801a948:	fb0c 2413 	mls	r4, ip, r3, r2
 801a94c:	fb14 f406 	smulbb	r4, r4, r6
 801a950:	441d      	add	r5, r3
 801a952:	4404      	add	r4, r0
 801a954:	4661      	mov	r1, ip
 801a956:	3d01      	subs	r5, #1
 801a958:	b2a4      	uxth	r4, r4
 801a95a:	fb95 f5f3 	sdiv	r5, r5, r3
 801a95e:	b131      	cbz	r1, 801a96e <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE14blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x8a>
 801a960:	9b05      	ldr	r3, [sp, #20]
 801a962:	9900      	ldr	r1, [sp, #0]
 801a964:	f853 302c 	ldr.w	r3, [r3, ip, lsl #2]
 801a968:	ba1b      	rev	r3, r3
 801a96a:	4419      	add	r1, r3
 801a96c:	9100      	str	r1, [sp, #0]
 801a96e:	f8bd 3028 	ldrh.w	r3, [sp, #40]	@ 0x28
 801a972:	f9bd 8034 	ldrsh.w	r8, [sp, #52]	@ 0x34
 801a976:	f9bd 6036 	ldrsh.w	r6, [sp, #54]	@ 0x36
 801a97a:	4418      	add	r0, r3
 801a97c:	f8bd 302a 	ldrh.w	r3, [sp, #42]	@ 0x2a
 801a980:	f8ad 0030 	strh.w	r0, [sp, #48]	@ 0x30
 801a984:	441a      	add	r2, r3
 801a986:	4b6a      	ldr	r3, [pc, #424]	@ (801ab30 <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE14blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x24c>)
 801a988:	f8ad 2032 	strh.w	r2, [sp, #50]	@ 0x32
 801a98c:	6818      	ldr	r0, [r3, #0]
 801a98e:	6803      	ldr	r3, [r0, #0]
 801a990:	6a9b      	ldr	r3, [r3, #40]	@ 0x28
 801a992:	4798      	blx	r3
 801a994:	4967      	ldr	r1, [pc, #412]	@ (801ab34 <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE14blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x250>)
 801a996:	f9bd 2032 	ldrsh.w	r2, [sp, #50]	@ 0x32
 801a99a:	880b      	ldrh	r3, [r1, #0]
 801a99c:	f9bd c030 	ldrsh.w	ip, [sp, #48]	@ 0x30
 801a9a0:	9109      	str	r1, [sp, #36]	@ 0x24
 801a9a2:	fb03 c202 	mla	r2, r3, r2, ip
 801a9a6:	eb00 0042 	add.w	r0, r0, r2, lsl #1
 801a9aa:	4373      	muls	r3, r6
 801a9ac:	b2ad      	uxth	r5, r5
 801a9ae:	eb00 0343 	add.w	r3, r0, r3, lsl #1
 801a9b2:	00ad      	lsls	r5, r5, #2
 801a9b4:	9306      	str	r3, [sp, #24]
 801a9b6:	1d2b      	adds	r3, r5, #4
 801a9b8:	9307      	str	r3, [sp, #28]
 801a9ba:	9b01      	ldr	r3, [sp, #4]
 801a9bc:	f8bd 1004 	ldrh.w	r1, [sp, #4]
 801a9c0:	9103      	str	r1, [sp, #12]
 801a9c2:	f1c3 02ff 	rsb	r2, r3, #255	@ 0xff
 801a9c6:	2c00      	cmp	r4, #0
 801a9c8:	bf0c      	ite	eq
 801a9ca:	46c6      	moveq	lr, r8
 801a9cc:	f04f 0e00 	movne.w	lr, #0
 801a9d0:	2300      	movs	r3, #0
 801a9d2:	b292      	uxth	r2, r2
 801a9d4:	fa1f fe8e 	uxth.w	lr, lr
 801a9d8:	9302      	str	r3, [sp, #8]
 801a9da:	9204      	str	r2, [sp, #16]
 801a9dc:	9a06      	ldr	r2, [sp, #24]
 801a9de:	4282      	cmp	r2, r0
 801a9e0:	f240 809d 	bls.w	801ab1e <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE14blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x23a>
 801a9e4:	b963      	cbnz	r3, 801aa00 <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE14blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x11c>
 801a9e6:	9b00      	ldr	r3, [sp, #0]
 801a9e8:	781a      	ldrb	r2, [r3, #0]
 801a9ea:	0993      	lsrs	r3, r2, #6
 801a9ec:	f002 023f 	and.w	r2, r2, #63	@ 0x3f
 801a9f0:	9202      	str	r2, [sp, #8]
 801a9f2:	1e5a      	subs	r2, r3, #1
 801a9f4:	2a02      	cmp	r2, #2
 801a9f6:	d815      	bhi.n	801aa24 <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE14blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x140>
 801a9f8:	9a00      	ldr	r2, [sp, #0]
 801a9fa:	3201      	adds	r2, #1
 801a9fc:	9200      	str	r2, [sp, #0]
 801a9fe:	b29b      	uxth	r3, r3
 801aa00:	b1b4      	cbz	r4, 801aa30 <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE14blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x14c>
 801aa02:	429c      	cmp	r4, r3
 801aa04:	bf95      	itete	ls
 801aa06:	1b1c      	subls	r4, r3, r4
 801aa08:	1ae4      	subhi	r4, r4, r3
 801aa0a:	fa1f fa84 	uxthls.w	sl, r4
 801aa0e:	b2a4      	uxthhi	r4, r4
 801aa10:	bf87      	ittee	hi
 801aa12:	4671      	movhi	r1, lr
 801aa14:	f04f 0a00 	movhi.w	sl, #0
 801aa18:	fa1f f188 	uxthls.w	r1, r8
 801aa1c:	2400      	movls	r4, #0
 801aa1e:	4653      	mov	r3, sl
 801aa20:	468e      	mov	lr, r1
 801aa22:	e7db      	b.n	801a9dc <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE14blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0xf8>
 801aa24:	9a00      	ldr	r2, [sp, #0]
 801aa26:	9b00      	ldr	r3, [sp, #0]
 801aa28:	3202      	adds	r2, #2
 801aa2a:	785b      	ldrb	r3, [r3, #1]
 801aa2c:	9200      	str	r2, [sp, #0]
 801aa2e:	e7e7      	b.n	801aa00 <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE14blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x11c>
 801aa30:	2202      	movs	r2, #2
 801aa32:	4615      	mov	r5, r2
 801aa34:	9907      	ldr	r1, [sp, #28]
 801aa36:	9a02      	ldr	r2, [sp, #8]
 801aa38:	fb15 1202 	smlabb	r2, r5, r2, r1
 801aa3c:	9905      	ldr	r1, [sp, #20]
 801aa3e:	4573      	cmp	r3, lr
 801aa40:	f831 c002 	ldrh.w	ip, [r1, r2]
 801aa44:	9a01      	ldr	r2, [sp, #4]
 801aa46:	bf2b      	itete	cs
 801aa48:	eba3 0a0e 	subcs.w	sl, r3, lr
 801aa4c:	ebae 0103 	subcc.w	r1, lr, r3
 801aa50:	46f1      	movcs	r9, lr
 801aa52:	4699      	movcc	r9, r3
 801aa54:	bf27      	ittee	cs
 801aa56:	fa1f fa8a 	uxthcs.w	sl, sl
 801aa5a:	4621      	movcs	r1, r4
 801aa5c:	b289      	uxthcc	r1, r1
 801aa5e:	46a2      	movcc	sl, r4
 801aa60:	2aff      	cmp	r2, #255	@ 0xff
 801aa62:	ea4f 0949 	mov.w	r9, r9, lsl #1
 801aa66:	d105      	bne.n	801aa74 <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE14blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x190>
 801aa68:	4481      	add	r9, r0
 801aa6a:	4581      	cmp	r9, r0
 801aa6c:	d045      	beq.n	801aafa <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE14blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x216>
 801aa6e:	f820 cb02 	strh.w	ip, [r0], #2
 801aa72:	e7fa      	b.n	801aa6a <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE14blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x186>
 801aa74:	9d03      	ldr	r5, [sp, #12]
 801aa76:	ea4f 222c 	mov.w	r2, ip, asr #8
 801aa7a:	ea4f 0bec 	mov.w	fp, ip, asr #3
 801aa7e:	f002 02f8 	and.w	r2, r2, #248	@ 0xf8
 801aa82:	ea4f 0ccc 	mov.w	ip, ip, lsl #3
 801aa86:	436a      	muls	r2, r5
 801aa88:	f00b 0bfc 	and.w	fp, fp, #252	@ 0xfc
 801aa8c:	fa5f fc8c 	uxtb.w	ip, ip
 801aa90:	9208      	str	r2, [sp, #32]
 801aa92:	fb0b fb05 	mul.w	fp, fp, r5
 801aa96:	fb0c fc05 	mul.w	ip, ip, r5
 801aa9a:	4481      	add	r9, r0
 801aa9c:	4581      	cmp	r9, r0
 801aa9e:	d02c      	beq.n	801aafa <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE14blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x216>
 801aaa0:	8802      	ldrh	r2, [r0, #0]
 801aaa2:	9d04      	ldr	r5, [sp, #16]
 801aaa4:	9f04      	ldr	r7, [sp, #16]
 801aaa6:	1216      	asrs	r6, r2, #8
 801aaa8:	f006 06f8 	and.w	r6, r6, #248	@ 0xf8
 801aaac:	fb16 f605 	smulbb	r6, r6, r5
 801aab0:	9d08      	ldr	r5, [sp, #32]
 801aab2:	442e      	add	r6, r5
 801aab4:	10d5      	asrs	r5, r2, #3
 801aab6:	00d2      	lsls	r2, r2, #3
 801aab8:	b2d2      	uxtb	r2, r2
 801aaba:	fb12 f207 	smulbb	r2, r2, r7
 801aabe:	b2b6      	uxth	r6, r6
 801aac0:	f005 05fc 	and.w	r5, r5, #252	@ 0xfc
 801aac4:	4462      	add	r2, ip
 801aac6:	fb15 f507 	smulbb	r5, r5, r7
 801aaca:	b292      	uxth	r2, r2
 801aacc:	1c77      	adds	r7, r6, #1
 801aace:	eb07 2616 	add.w	r6, r7, r6, lsr #8
 801aad2:	1c57      	adds	r7, r2, #1
 801aad4:	445d      	add	r5, fp
 801aad6:	eb07 2212 	add.w	r2, r7, r2, lsr #8
 801aada:	b2ad      	uxth	r5, r5
 801aadc:	f3c2 22c4 	ubfx	r2, r2, #11, #5
 801aae0:	f406 4678 	and.w	r6, r6, #63488	@ 0xf800
 801aae4:	4316      	orrs	r6, r2
 801aae6:	1c6a      	adds	r2, r5, #1
 801aae8:	eb02 2515 	add.w	r5, r2, r5, lsr #8
 801aaec:	096d      	lsrs	r5, r5, #5
 801aaee:	f405 65fc 	and.w	r5, r5, #2016	@ 0x7e0
 801aaf2:	432e      	orrs	r6, r5
 801aaf4:	f820 6b02 	strh.w	r6, [r0], #2
 801aaf8:	e7d0      	b.n	801aa9c <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE14blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x1b8>
 801aafa:	4573      	cmp	r3, lr
 801aafc:	d38f      	bcc.n	801aa1e <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE14blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x13a>
 801aafe:	f8bd 402c 	ldrh.w	r4, [sp, #44]	@ 0x2c
 801ab02:	9b09      	ldr	r3, [sp, #36]	@ 0x24
 801ab04:	fa1f f188 	uxth.w	r1, r8
 801ab08:	1a64      	subs	r4, r4, r1
 801ab0a:	881b      	ldrh	r3, [r3, #0]
 801ab0c:	b2a4      	uxth	r4, r4
 801ab0e:	2c00      	cmp	r4, #0
 801ab10:	eba3 0308 	sub.w	r3, r3, r8
 801ab14:	bf18      	it	ne
 801ab16:	2100      	movne	r1, #0
 801ab18:	eb00 0043 	add.w	r0, r0, r3, lsl #1
 801ab1c:	e77f      	b.n	801aa1e <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE14blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x13a>
 801ab1e:	4b04      	ldr	r3, [pc, #16]	@ (801ab30 <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE14blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x24c>)
 801ab20:	6818      	ldr	r0, [r3, #0]
 801ab22:	6803      	ldr	r3, [r0, #0]
 801ab24:	6adb      	ldr	r3, [r3, #44]	@ 0x2c
 801ab26:	4798      	blx	r3
 801ab28:	b00f      	add	sp, #60	@ 0x3c
 801ab2a:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 801ab2e:	bf00      	nop
 801ab30:	20002fa8 	.word	0x20002fa8
 801ab34:	20002fa2 	.word	0x20002fa2

0801ab38 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB565EPKhS3_RKNS_4RectES6_h>:
 801ab38:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 801ab3c:	b09f      	sub	sp, #124	@ 0x7c
 801ab3e:	e9cd 1213 	strd	r1, r2, [sp, #76]	@ 0x4c
 801ab42:	f89d 20a4 	ldrb.w	r2, [sp, #164]	@ 0xa4
 801ab46:	9209      	str	r2, [sp, #36]	@ 0x24
 801ab48:	461d      	mov	r5, r3
 801ab4a:	4604      	mov	r4, r0
 801ab4c:	9b28      	ldr	r3, [sp, #160]	@ 0xa0
 801ab4e:	2a00      	cmp	r2, #0
 801ab50:	f000 81eb 	beq.w	801af2a <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x3f2>
 801ab54:	6828      	ldr	r0, [r5, #0]
 801ab56:	6869      	ldr	r1, [r5, #4]
 801ab58:	aa1a      	add	r2, sp, #104	@ 0x68
 801ab5a:	c203      	stmia	r2!, {r0, r1}
 801ab5c:	6818      	ldr	r0, [r3, #0]
 801ab5e:	6859      	ldr	r1, [r3, #4]
 801ab60:	aa1c      	add	r2, sp, #112	@ 0x70
 801ab62:	c203      	stmia	r2!, {r0, r1}
 801ab64:	a81a      	add	r0, sp, #104	@ 0x68
 801ab66:	f7f9 f8ad 	bl	8013cc4 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectE>
 801ab6a:	4629      	mov	r1, r5
 801ab6c:	a81c      	add	r0, sp, #112	@ 0x70
 801ab6e:	f7f9 f8d1 	bl	8013d14 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectERKS1_>
 801ab72:	f9bd 306c 	ldrsh.w	r3, [sp, #108]	@ 0x6c
 801ab76:	f9bd 806e 	ldrsh.w	r8, [sp, #110]	@ 0x6e
 801ab7a:	f9bd 6076 	ldrsh.w	r6, [sp, #118]	@ 0x76
 801ab7e:	f5b3 6f80 	cmp.w	r3, #1024	@ 0x400
 801ab82:	bfd7      	itett	le
 801ab84:	b29a      	uxthle	r2, r3
 801ab86:	2201      	movgt	r2, #1
 801ab88:	f44f 6180 	movle.w	r1, #1024	@ 0x400
 801ab8c:	fb91 f2f2 	sdivle	r2, r1, r2
 801ab90:	9202      	str	r2, [sp, #8]
 801ab92:	9802      	ldr	r0, [sp, #8]
 801ab94:	f9bd 2072 	ldrsh.w	r2, [sp, #114]	@ 0x72
 801ab98:	fb92 f0f0 	sdiv	r0, r2, r0
 801ab9c:	b280      	uxth	r0, r0
 801ab9e:	9010      	str	r0, [sp, #64]	@ 0x40
 801aba0:	9902      	ldr	r1, [sp, #8]
 801aba2:	9802      	ldr	r0, [sp, #8]
 801aba4:	9d10      	ldr	r5, [sp, #64]	@ 0x40
 801aba6:	4488      	add	r8, r1
 801aba8:	fb05 2510 	mls	r5, r5, r0, r2
 801abac:	fb15 f503 	smulbb	r5, r5, r3
 801abb0:	f108 38ff 	add.w	r8, r8, #4294967295
 801abb4:	f8bd 3068 	ldrh.w	r3, [sp, #104]	@ 0x68
 801abb8:	fb98 f8f1 	sdiv	r8, r8, r1
 801abbc:	f8bd 1070 	ldrh.w	r1, [sp, #112]	@ 0x70
 801abc0:	440d      	add	r5, r1
 801abc2:	4419      	add	r1, r3
 801abc4:	f8bd 306a 	ldrh.w	r3, [sp, #106]	@ 0x6a
 801abc8:	f8ad 1070 	strh.w	r1, [sp, #112]	@ 0x70
 801abcc:	441a      	add	r2, r3
 801abce:	f9bd 3074 	ldrsh.w	r3, [sp, #116]	@ 0x74
 801abd2:	9304      	str	r3, [sp, #16]
 801abd4:	4b95      	ldr	r3, [pc, #596]	@ (801ae2c <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x2f4>)
 801abd6:	f8ad 2072 	strh.w	r2, [sp, #114]	@ 0x72
 801abda:	6818      	ldr	r0, [r3, #0]
 801abdc:	6803      	ldr	r3, [r0, #0]
 801abde:	6a9b      	ldr	r3, [r3, #40]	@ 0x28
 801abe0:	4798      	blx	r3
 801abe2:	4b93      	ldr	r3, [pc, #588]	@ (801ae30 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x2f8>)
 801abe4:	f9bd 1072 	ldrsh.w	r1, [sp, #114]	@ 0x72
 801abe8:	881a      	ldrh	r2, [r3, #0]
 801abea:	f9bd 7070 	ldrsh.w	r7, [sp, #112]	@ 0x70
 801abee:	9318      	str	r3, [sp, #96]	@ 0x60
 801abf0:	fb02 7101 	mla	r1, r2, r1, r7
 801abf4:	eb00 0041 	add.w	r0, r0, r1, lsl #1
 801abf8:	4356      	muls	r6, r2
 801abfa:	eb00 0246 	add.w	r2, r0, r6, lsl #1
 801abfe:	f108 0801 	add.w	r8, r8, #1
 801ac02:	920a      	str	r2, [sp, #40]	@ 0x28
 801ac04:	9a14      	ldr	r2, [sp, #80]	@ 0x50
 801ac06:	f8bd 3024 	ldrh.w	r3, [sp, #36]	@ 0x24
 801ac0a:	930f      	str	r3, [sp, #60]	@ 0x3c
 801ac0c:	fa1f f888 	uxth.w	r8, r8
 801ac10:	eb02 0888 	add.w	r8, r2, r8, lsl #2
 801ac14:	f108 0204 	add.w	r2, r8, #4
 801ac18:	9211      	str	r2, [sp, #68]	@ 0x44
 801ac1a:	9a09      	ldr	r2, [sp, #36]	@ 0x24
 801ac1c:	4b85      	ldr	r3, [pc, #532]	@ (801ae34 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x2fc>)
 801ac1e:	f1c2 02ff 	rsb	r2, r2, #255	@ 0xff
 801ac22:	b2ad      	uxth	r5, r5
 801ac24:	9215      	str	r2, [sp, #84]	@ 0x54
 801ac26:	2d00      	cmp	r5, #0
 801ac28:	9a04      	ldr	r2, [sp, #16]
 801ac2a:	f04f 0100 	mov.w	r1, #0
 801ac2e:	bf18      	it	ne
 801ac30:	2200      	movne	r2, #0
 801ac32:	1b1b      	subs	r3, r3, r4
 801ac34:	b292      	uxth	r2, r2
 801ac36:	910d      	str	r1, [sp, #52]	@ 0x34
 801ac38:	9319      	str	r3, [sp, #100]	@ 0x64
 801ac3a:	9910      	ldr	r1, [sp, #64]	@ 0x40
 801ac3c:	9b0d      	ldr	r3, [sp, #52]	@ 0x34
 801ac3e:	fa11 f383 	uxtah	r3, r1, r3
 801ac42:	9914      	ldr	r1, [sp, #80]	@ 0x50
 801ac44:	eb01 0383 	add.w	r3, r1, r3, lsl #2
 801ac48:	3304      	adds	r3, #4
 801ac4a:	9306      	str	r3, [sp, #24]
 801ac4c:	9b0a      	ldr	r3, [sp, #40]	@ 0x28
 801ac4e:	4283      	cmp	r3, r0
 801ac50:	f240 8166 	bls.w	801af20 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x3e8>
 801ac54:	9902      	ldr	r1, [sp, #8]
 801ac56:	f8bd 306c 	ldrh.w	r3, [sp, #108]	@ 0x6c
 801ac5a:	fbb5 f3f3 	udiv	r3, r5, r3
 801ac5e:	1acb      	subs	r3, r1, r3
 801ac60:	b29b      	uxth	r3, r3
 801ac62:	9316      	str	r3, [sp, #88]	@ 0x58
 801ac64:	9b06      	ldr	r3, [sp, #24]
 801ac66:	9e06      	ldr	r6, [sp, #24]
 801ac68:	7859      	ldrb	r1, [r3, #1]
 801ac6a:	789b      	ldrb	r3, [r3, #2]
 801ac6c:	7836      	ldrb	r6, [r6, #0]
 801ac6e:	9612      	str	r6, [sp, #72]	@ 0x48
 801ac70:	021b      	lsls	r3, r3, #8
 801ac72:	ea43 4301 	orr.w	r3, r3, r1, lsl #16
 801ac76:	9906      	ldr	r1, [sp, #24]
 801ac78:	78c9      	ldrb	r1, [r1, #3]
 801ac7a:	430b      	orrs	r3, r1
 801ac7c:	9913      	ldr	r1, [sp, #76]	@ 0x4c
 801ac7e:	3601      	adds	r6, #1
 801ac80:	4419      	add	r1, r3
 801ac82:	9605      	str	r6, [sp, #20]
 801ac84:	1c4e      	adds	r6, r1, #1
 801ac86:	9603      	str	r6, [sp, #12]
 801ac88:	7849      	ldrb	r1, [r1, #1]
 801ac8a:	9e13      	ldr	r6, [sp, #76]	@ 0x4c
 801ac8c:	0209      	lsls	r1, r1, #8
 801ac8e:	5cf3      	ldrb	r3, [r6, r3]
 801ac90:	f401 71ff 	and.w	r1, r1, #510	@ 0x1fe
 801ac94:	4319      	orrs	r1, r3
 801ac96:	b28b      	uxth	r3, r1
 801ac98:	930c      	str	r3, [sp, #48]	@ 0x30
 801ac9a:	2300      	movs	r3, #0
 801ac9c:	f04f 0a01 	mov.w	sl, #1
 801aca0:	9307      	str	r3, [sp, #28]
 801aca2:	469c      	mov	ip, r3
 801aca4:	f8bd 3054 	ldrh.w	r3, [sp, #84]	@ 0x54
 801aca8:	f884 1804 	strb.w	r1, [r4, #2052]	@ 0x804
 801acac:	46d3      	mov	fp, sl
 801acae:	4657      	mov	r7, sl
 801acb0:	930e      	str	r3, [sp, #56]	@ 0x38
 801acb2:	2d00      	cmp	r5, #0
 801acb4:	d07e      	beq.n	801adb4 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x27c>
 801acb6:	42af      	cmp	r7, r5
 801acb8:	d26e      	bcs.n	801ad98 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x260>
 801acba:	9b0a      	ldr	r3, [sp, #40]	@ 0x28
 801acbc:	9201      	str	r2, [sp, #4]
 801acbe:	1bed      	subs	r5, r5, r7
 801acc0:	4283      	cmp	r3, r0
 801acc2:	b2ad      	uxth	r5, r5
 801acc4:	d802      	bhi.n	801accc <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x194>
 801acc6:	e073      	b.n	801adb0 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x278>
 801acc8:	2b00      	cmp	r3, #0
 801acca:	d15f      	bne.n	801ad8c <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x254>
 801accc:	9b03      	ldr	r3, [sp, #12]
 801acce:	785b      	ldrb	r3, [r3, #1]
 801acd0:	f1cb 0207 	rsb	r2, fp, #7
 801acd4:	4093      	lsls	r3, r2
 801acd6:	005b      	lsls	r3, r3, #1
 801acd8:	f403 72ff 	and.w	r2, r3, #510	@ 0x1fe
 801acdc:	9b03      	ldr	r3, [sp, #12]
 801acde:	781b      	ldrb	r3, [r3, #0]
 801ace0:	fa43 f30b 	asr.w	r3, r3, fp
 801ace4:	b2db      	uxtb	r3, r3
 801ace6:	4313      	orrs	r3, r2
 801ace8:	f10b 0201 	add.w	r2, fp, #1
 801acec:	fa5f fb82 	uxtb.w	fp, r2
 801acf0:	9a03      	ldr	r2, [sp, #12]
 801acf2:	f1bb 0f08 	cmp.w	fp, #8
 801acf6:	bf15      	itete	ne
 801acf8:	3201      	addne	r2, #1
 801acfa:	3202      	addeq	r2, #2
 801acfc:	9203      	strne	r2, [sp, #12]
 801acfe:	9203      	streq	r2, [sp, #12]
 801ad00:	9a12      	ldr	r2, [sp, #72]	@ 0x48
 801ad02:	b29f      	uxth	r7, r3
 801ad04:	bf08      	it	eq
 801ad06:	f04f 0b00 	moveq.w	fp, #0
 801ad0a:	42ba      	cmp	r2, r7
 801ad0c:	d309      	bcc.n	801ad22 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x1ea>
 801ad0e:	f884 3804 	strb.w	r3, [r4, #2052]	@ 0x804
 801ad12:	2301      	movs	r3, #1
 801ad14:	9a05      	ldr	r2, [sp, #20]
 801ad16:	f5b2 7f00 	cmp.w	r2, #512	@ 0x200
 801ad1a:	d30e      	bcc.n	801ad3a <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x202>
 801ad1c:	469a      	mov	sl, r3
 801ad1e:	2600      	movs	r6, #0
 801ad20:	e035      	b.n	801ad8e <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x256>
 801ad22:	9b05      	ldr	r3, [sp, #20]
 801ad24:	429f      	cmp	r7, r3
 801ad26:	d318      	bcc.n	801ad5a <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x222>
 801ad28:	eb04 030a 	add.w	r3, r4, sl
 801ad2c:	f894 2804 	ldrb.w	r2, [r4, #2052]	@ 0x804
 801ad30:	f883 2804 	strb.w	r2, [r3, #2052]	@ 0x804
 801ad34:	f10a 0301 	add.w	r3, sl, #1
 801ad38:	b29b      	uxth	r3, r3
 801ad3a:	9a05      	ldr	r2, [sp, #20]
 801ad3c:	f894 6804 	ldrb.w	r6, [r4, #2052]	@ 0x804
 801ad40:	990c      	ldr	r1, [sp, #48]	@ 0x30
 801ad42:	eb04 0282 	add.w	r2, r4, r2, lsl #2
 801ad46:	7116      	strb	r6, [r2, #4]
 801ad48:	f10a 0601 	add.w	r6, sl, #1
 801ad4c:	80d1      	strh	r1, [r2, #6]
 801ad4e:	7156      	strb	r6, [r2, #5]
 801ad50:	9a05      	ldr	r2, [sp, #20]
 801ad52:	3201      	adds	r2, #1
 801ad54:	b292      	uxth	r2, r2
 801ad56:	9205      	str	r2, [sp, #20]
 801ad58:	e7e0      	b.n	801ad1c <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x1e4>
 801ad5a:	eb04 0387 	add.w	r3, r4, r7, lsl #2
 801ad5e:	463a      	mov	r2, r7
 801ad60:	795b      	ldrb	r3, [r3, #5]
 801ad62:	f603 0604 	addw	r6, r3, #2052	@ 0x804
 801ad66:	4426      	add	r6, r4
 801ad68:	9919      	ldr	r1, [sp, #100]	@ 0x64
 801ad6a:	eb01 0c06 	add.w	ip, r1, r6
 801ad6e:	f1bc 0f00 	cmp.w	ip, #0
 801ad72:	dd07      	ble.n	801ad84 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x24c>
 801ad74:	eb04 0282 	add.w	r2, r4, r2, lsl #2
 801ad78:	f892 c004 	ldrb.w	ip, [r2, #4]
 801ad7c:	f806 cd01 	strb.w	ip, [r6, #-1]!
 801ad80:	88d2      	ldrh	r2, [r2, #6]
 801ad82:	e7f1      	b.n	801ad68 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x230>
 801ad84:	f884 2804 	strb.w	r2, [r4, #2052]	@ 0x804
 801ad88:	b29b      	uxth	r3, r3
 801ad8a:	e7c3      	b.n	801ad14 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x1dc>
 801ad8c:	9f0c      	ldr	r7, [sp, #48]	@ 0x30
 801ad8e:	970c      	str	r7, [sp, #48]	@ 0x30
 801ad90:	9a01      	ldr	r2, [sp, #4]
 801ad92:	46b4      	mov	ip, r6
 801ad94:	461f      	mov	r7, r3
 801ad96:	e78c      	b.n	801acb2 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x17a>
 801ad98:	1b7b      	subs	r3, r7, r5
 801ad9a:	f8bd 2010 	ldrh.w	r2, [sp, #16]
 801ad9e:	9201      	str	r2, [sp, #4]
 801ada0:	eb0c 0605 	add.w	r6, ip, r5
 801ada4:	b29b      	uxth	r3, r3
 801ada6:	b2b6      	uxth	r6, r6
 801ada8:	2500      	movs	r5, #0
 801adaa:	9a0a      	ldr	r2, [sp, #40]	@ 0x28
 801adac:	4282      	cmp	r2, r0
 801adae:	d88b      	bhi.n	801acc8 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x190>
 801adb0:	9a01      	ldr	r2, [sp, #4]
 801adb2:	e74b      	b.n	801ac4c <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x114>
 801adb4:	4297      	cmp	r7, r2
 801adb6:	d332      	bcc.n	801ae1e <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x2e6>
 801adb8:	1abb      	subs	r3, r7, r2
 801adba:	b29b      	uxth	r3, r3
 801adbc:	9208      	str	r2, [sp, #32]
 801adbe:	9501      	str	r5, [sp, #4]
 801adc0:	9909      	ldr	r1, [sp, #36]	@ 0x24
 801adc2:	29ff      	cmp	r1, #255	@ 0xff
 801adc4:	9908      	ldr	r1, [sp, #32]
 801adc6:	eb0c 0601 	add.w	r6, ip, r1
 801adca:	d135      	bne.n	801ae38 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x300>
 801adcc:	f1a0 0e02 	sub.w	lr, r0, #2
 801add0:	b2b6      	uxth	r6, r6
 801add2:	45b4      	cmp	ip, r6
 801add4:	f040 808c 	bne.w	801aef0 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x3b8>
 801add8:	9908      	ldr	r1, [sp, #32]
 801adda:	4297      	cmp	r7, r2
 801addc:	eb00 0041 	add.w	r0, r0, r1, lsl #1
 801ade0:	d3e2      	bcc.n	801ada8 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x270>
 801ade2:	9a18      	ldr	r2, [sp, #96]	@ 0x60
 801ade4:	9904      	ldr	r1, [sp, #16]
 801ade6:	8812      	ldrh	r2, [r2, #0]
 801ade8:	1a52      	subs	r2, r2, r1
 801adea:	eb00 0042 	add.w	r0, r0, r2, lsl #1
 801adee:	9a07      	ldr	r2, [sp, #28]
 801adf0:	9916      	ldr	r1, [sp, #88]	@ 0x58
 801adf2:	3201      	adds	r2, #1
 801adf4:	428a      	cmp	r2, r1
 801adf6:	9207      	str	r2, [sp, #28]
 801adf8:	f040 8087 	bne.w	801af0a <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x3d2>
 801adfc:	f8bd 5070 	ldrh.w	r5, [sp, #112]	@ 0x70
 801ae00:	f8bd 7068 	ldrh.w	r7, [sp, #104]	@ 0x68
 801ae04:	9b04      	ldr	r3, [sp, #16]
 801ae06:	1bed      	subs	r5, r5, r7
 801ae08:	b2ad      	uxth	r5, r5
 801ae0a:	2d00      	cmp	r5, #0
 801ae0c:	bf08      	it	eq
 801ae0e:	461a      	moveq	r2, r3
 801ae10:	9b0d      	ldr	r3, [sp, #52]	@ 0x34
 801ae12:	bf18      	it	ne
 801ae14:	2200      	movne	r2, #0
 801ae16:	3301      	adds	r3, #1
 801ae18:	930d      	str	r3, [sp, #52]	@ 0x34
 801ae1a:	b292      	uxth	r2, r2
 801ae1c:	e70d      	b.n	801ac3a <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x102>
 801ae1e:	1bd1      	subs	r1, r2, r7
 801ae20:	b28b      	uxth	r3, r1
 801ae22:	9301      	str	r3, [sp, #4]
 801ae24:	9708      	str	r7, [sp, #32]
 801ae26:	462b      	mov	r3, r5
 801ae28:	e7ca      	b.n	801adc0 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x288>
 801ae2a:	bf00      	nop
 801ae2c:	20002fa8 	.word	0x20002fa8
 801ae30:	20002fa2 	.word	0x20002fa2
 801ae34:	fffff7fb 	.word	0xfffff7fb
 801ae38:	b2b6      	uxth	r6, r6
 801ae3a:	900b      	str	r0, [sp, #44]	@ 0x2c
 801ae3c:	45b4      	cmp	ip, r6
 801ae3e:	d0cb      	beq.n	801add8 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x2a0>
 801ae40:	f10c 0101 	add.w	r1, ip, #1
 801ae44:	44a4      	add	ip, r4
 801ae46:	9117      	str	r1, [sp, #92]	@ 0x5c
 801ae48:	f89c 5804 	ldrb.w	r5, [ip, #2052]	@ 0x804
 801ae4c:	9911      	ldr	r1, [sp, #68]	@ 0x44
 801ae4e:	f831 5015 	ldrh.w	r5, [r1, r5, lsl #1]
 801ae52:	990b      	ldr	r1, [sp, #44]	@ 0x2c
 801ae54:	f8b1 c000 	ldrh.w	ip, [r1]
 801ae58:	990e      	ldr	r1, [sp, #56]	@ 0x38
 801ae5a:	ea4f 2e2c 	mov.w	lr, ip, asr #8
 801ae5e:	f00e 0ef8 	and.w	lr, lr, #248	@ 0xf8
 801ae62:	fb1e fe01 	smulbb	lr, lr, r1
 801ae66:	ea4f 2825 	mov.w	r8, r5, asr #8
 801ae6a:	990f      	ldr	r1, [sp, #60]	@ 0x3c
 801ae6c:	f008 08f8 	and.w	r8, r8, #248	@ 0xf8
 801ae70:	fb08 e801 	mla	r8, r8, r1, lr
 801ae74:	ea4f 09ec 	mov.w	r9, ip, asr #3
 801ae78:	990e      	ldr	r1, [sp, #56]	@ 0x38
 801ae7a:	f009 09fc 	and.w	r9, r9, #252	@ 0xfc
 801ae7e:	fb19 f901 	smulbb	r9, r9, r1
 801ae82:	ea4f 0ee5 	mov.w	lr, r5, asr #3
 801ae86:	990f      	ldr	r1, [sp, #60]	@ 0x3c
 801ae88:	f00e 0efc 	and.w	lr, lr, #252	@ 0xfc
 801ae8c:	fb0e 9e01 	mla	lr, lr, r1, r9
 801ae90:	ea4f 0ccc 	mov.w	ip, ip, lsl #3
 801ae94:	990e      	ldr	r1, [sp, #56]	@ 0x38
 801ae96:	fa5f fc8c 	uxtb.w	ip, ip
 801ae9a:	fb1c fc01 	smulbb	ip, ip, r1
 801ae9e:	00ed      	lsls	r5, r5, #3
 801aea0:	990f      	ldr	r1, [sp, #60]	@ 0x3c
 801aea2:	b2ed      	uxtb	r5, r5
 801aea4:	fb05 c501 	mla	r5, r5, r1, ip
 801aea8:	fa1f f888 	uxth.w	r8, r8
 801aeac:	fa1f fe8e 	uxth.w	lr, lr
 801aeb0:	b2ad      	uxth	r5, r5
 801aeb2:	f108 0c01 	add.w	ip, r8, #1
 801aeb6:	eb0c 2818 	add.w	r8, ip, r8, lsr #8
 801aeba:	f10e 0901 	add.w	r9, lr, #1
 801aebe:	f105 0c01 	add.w	ip, r5, #1
 801aec2:	eb0c 2c15 	add.w	ip, ip, r5, lsr #8
 801aec6:	eb09 291e 	add.w	r9, r9, lr, lsr #8
 801aeca:	f3cc 2cc4 	ubfx	ip, ip, #11, #5
 801aece:	f408 4878 	and.w	r8, r8, #63488	@ 0xf800
 801aed2:	ea4f 1959 	mov.w	r9, r9, lsr #5
 801aed6:	ea4c 0808 	orr.w	r8, ip, r8
 801aeda:	990b      	ldr	r1, [sp, #44]	@ 0x2c
 801aedc:	f8bd c05c 	ldrh.w	ip, [sp, #92]	@ 0x5c
 801aee0:	f409 69fc 	and.w	r9, r9, #2016	@ 0x7e0
 801aee4:	ea48 0809 	orr.w	r8, r8, r9
 801aee8:	f821 8b02 	strh.w	r8, [r1], #2
 801aeec:	910b      	str	r1, [sp, #44]	@ 0x2c
 801aeee:	e7a5      	b.n	801ae3c <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x304>
 801aef0:	f10c 0801 	add.w	r8, ip, #1
 801aef4:	44a4      	add	ip, r4
 801aef6:	9911      	ldr	r1, [sp, #68]	@ 0x44
 801aef8:	f89c 5804 	ldrb.w	r5, [ip, #2052]	@ 0x804
 801aefc:	f831 5015 	ldrh.w	r5, [r1, r5, lsl #1]
 801af00:	f82e 5f02 	strh.w	r5, [lr, #2]!
 801af04:	fa1f fc88 	uxth.w	ip, r8
 801af08:	e763      	b.n	801add2 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x29a>
 801af0a:	f8bd 2010 	ldrh.w	r2, [sp, #16]
 801af0e:	f8bd 506c 	ldrh.w	r5, [sp, #108]	@ 0x6c
 801af12:	1aad      	subs	r5, r5, r2
 801af14:	b2ad      	uxth	r5, r5
 801af16:	2d00      	cmp	r5, #0
 801af18:	bf18      	it	ne
 801af1a:	2200      	movne	r2, #0
 801af1c:	9201      	str	r2, [sp, #4]
 801af1e:	e744      	b.n	801adaa <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x272>
 801af20:	4b03      	ldr	r3, [pc, #12]	@ (801af30 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x3f8>)
 801af22:	6818      	ldr	r0, [r3, #0]
 801af24:	6803      	ldr	r3, [r0, #0]
 801af26:	6adb      	ldr	r3, [r3, #44]	@ 0x2c
 801af28:	4798      	blx	r3
 801af2a:	b01f      	add	sp, #124	@ 0x7c
 801af2c:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 801af30:	20002fa8 	.word	0x20002fa8

0801af34 <_ZN8touchgfx8LCD16bpp19DecompressorRGB_QOI14blitCopyRGB565EPKhRKNS_4RectES6_h>:
 801af34:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 801af38:	b093      	sub	sp, #76	@ 0x4c
 801af3a:	4616      	mov	r6, r2
 801af3c:	f89d 2070 	ldrb.w	r2, [sp, #112]	@ 0x70
 801af40:	9003      	str	r0, [sp, #12]
 801af42:	460d      	mov	r5, r1
 801af44:	9201      	str	r2, [sp, #4]
 801af46:	2a00      	cmp	r2, #0
 801af48:	f000 8304 	beq.w	801b554 <_ZN8touchgfx8LCD16bpp19DecompressorRGB_QOI14blitCopyRGB565EPKhRKNS_4RectES6_h+0x620>
 801af4c:	6830      	ldr	r0, [r6, #0]
 801af4e:	6871      	ldr	r1, [r6, #4]
 801af50:	ac0e      	add	r4, sp, #56	@ 0x38
 801af52:	c403      	stmia	r4!, {r0, r1}
 801af54:	6818      	ldr	r0, [r3, #0]
 801af56:	6859      	ldr	r1, [r3, #4]
 801af58:	ac10      	add	r4, sp, #64	@ 0x40
 801af5a:	c403      	stmia	r4!, {r0, r1}
 801af5c:	a80e      	add	r0, sp, #56	@ 0x38
 801af5e:	f7f8 feb1 	bl	8013cc4 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectE>
 801af62:	4631      	mov	r1, r6
 801af64:	a810      	add	r0, sp, #64	@ 0x40
 801af66:	f7f8 fed5 	bl	8013d14 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectERKS1_>
 801af6a:	f9bd 203c 	ldrsh.w	r2, [sp, #60]	@ 0x3c
 801af6e:	f5b2 6f80 	cmp.w	r2, #1024	@ 0x400
 801af72:	bfd7      	itett	le
 801af74:	b293      	uxthle	r3, r2
 801af76:	2301      	movgt	r3, #1
 801af78:	f44f 6180 	movle.w	r1, #1024	@ 0x400
 801af7c:	fb91 f3f3 	sdivle	r3, r1, r3
 801af80:	9304      	str	r3, [sp, #16]
 801af82:	f105 0308 	add.w	r3, r5, #8
 801af86:	9904      	ldr	r1, [sp, #16]
 801af88:	9308      	str	r3, [sp, #32]
 801af8a:	f9bd 303e 	ldrsh.w	r3, [sp, #62]	@ 0x3e
 801af8e:	440b      	add	r3, r1
 801af90:	3b01      	subs	r3, #1
 801af92:	fb93 f3f1 	sdiv	r3, r3, r1
 801af96:	9908      	ldr	r1, [sp, #32]
 801af98:	3b01      	subs	r3, #1
 801af9a:	b29b      	uxth	r3, r3
 801af9c:	eb01 0383 	add.w	r3, r1, r3, lsl #2
 801afa0:	9309      	str	r3, [sp, #36]	@ 0x24
 801afa2:	9904      	ldr	r1, [sp, #16]
 801afa4:	f9bd 3042 	ldrsh.w	r3, [sp, #66]	@ 0x42
 801afa8:	fb93 f0f1 	sdiv	r0, r3, r1
 801afac:	b284      	uxth	r4, r0
 801afae:	9405      	str	r4, [sp, #20]
 801afb0:	e9dd 4504 	ldrd	r4, r5, [sp, #16]
 801afb4:	f8bd 1040 	ldrh.w	r1, [sp, #64]	@ 0x40
 801afb8:	fb05 3914 	mls	r9, r5, r4, r3
 801afbc:	fb19 f902 	smulbb	r9, r9, r2
 801afc0:	4489      	add	r9, r1
 801afc2:	fa1f f989 	uxth.w	r9, r9
 801afc6:	2d00      	cmp	r5, #0
 801afc8:	d05d      	beq.n	801b086 <_ZN8touchgfx8LCD16bpp19DecompressorRGB_QOI14blitCopyRGB565EPKhRKNS_4RectES6_h+0x152>
 801afca:	1e6a      	subs	r2, r5, #1
 801afcc:	9808      	ldr	r0, [sp, #32]
 801afce:	f850 a022 	ldr.w	sl, [r0, r2, lsl #2]
 801afd2:	9a09      	ldr	r2, [sp, #36]	@ 0x24
 801afd4:	fa9a fa8a 	rev.w	sl, sl
 801afd8:	4492      	add	sl, r2
 801afda:	f8bd 2038 	ldrh.w	r2, [sp, #56]	@ 0x38
 801afde:	f9bd 5046 	ldrsh.w	r5, [sp, #70]	@ 0x46
 801afe2:	4411      	add	r1, r2
 801afe4:	f8bd 203a 	ldrh.w	r2, [sp, #58]	@ 0x3a
 801afe8:	f8ad 1040 	strh.w	r1, [sp, #64]	@ 0x40
 801afec:	4413      	add	r3, r2
 801afee:	f8ad 3042 	strh.w	r3, [sp, #66]	@ 0x42
 801aff2:	f9bd 3044 	ldrsh.w	r3, [sp, #68]	@ 0x44
 801aff6:	9302      	str	r3, [sp, #8]
 801aff8:	4bcb      	ldr	r3, [pc, #812]	@ (801b328 <_ZN8touchgfx8LCD16bpp19DecompressorRGB_QOI14blitCopyRGB565EPKhRKNS_4RectES6_h+0x3f4>)
 801affa:	6818      	ldr	r0, [r3, #0]
 801affc:	6803      	ldr	r3, [r0, #0]
 801affe:	6a9b      	ldr	r3, [r3, #40]	@ 0x28
 801b000:	4798      	blx	r3
 801b002:	4bca      	ldr	r3, [pc, #808]	@ (801b32c <_ZN8touchgfx8LCD16bpp19DecompressorRGB_QOI14blitCopyRGB565EPKhRKNS_4RectES6_h+0x3f8>)
 801b004:	f9bd 2040 	ldrsh.w	r2, [sp, #64]	@ 0x40
 801b008:	881b      	ldrh	r3, [r3, #0]
 801b00a:	f9bd 4042 	ldrsh.w	r4, [sp, #66]	@ 0x42
 801b00e:	fb03 2404 	mla	r4, r3, r4, r2
 801b012:	eb00 0444 	add.w	r4, r0, r4, lsl #1
 801b016:	436b      	muls	r3, r5
 801b018:	eb04 0343 	add.w	r3, r4, r3, lsl #1
 801b01c:	930d      	str	r3, [sp, #52]	@ 0x34
 801b01e:	f9bd 303c 	ldrsh.w	r3, [sp, #60]	@ 0x3c
 801b022:	fb99 f3f3 	sdiv	r3, r9, r3
 801b026:	9306      	str	r3, [sp, #24]
 801b028:	9b01      	ldr	r3, [sp, #4]
 801b02a:	43db      	mvns	r3, r3
 801b02c:	b2db      	uxtb	r3, r3
 801b02e:	930a      	str	r3, [sp, #40]	@ 0x28
 801b030:	9b03      	ldr	r3, [sp, #12]
 801b032:	3304      	adds	r3, #4
 801b034:	4618      	mov	r0, r3
 801b036:	2280      	movs	r2, #128	@ 0x80
 801b038:	2100      	movs	r1, #0
 801b03a:	930b      	str	r3, [sp, #44]	@ 0x2c
 801b03c:	f00a ffdf 	bl	8025ffe <memset>
 801b040:	4bbb      	ldr	r3, [pc, #748]	@ (801b330 <_ZN8touchgfx8LCD16bpp19DecompressorRGB_QOI14blitCopyRGB565EPKhRKNS_4RectES6_h+0x3fc>)
 801b042:	9300      	str	r3, [sp, #0]
 801b044:	2300      	movs	r3, #0
 801b046:	f04f 0600 	mov.w	r6, #0
 801b04a:	9307      	str	r3, [sp, #28]
 801b04c:	9b0d      	ldr	r3, [sp, #52]	@ 0x34
 801b04e:	42a3      	cmp	r3, r4
 801b050:	f240 827b 	bls.w	801b54a <_ZN8touchgfx8LCD16bpp19DecompressorRGB_QOI14blitCopyRGB565EPKhRKNS_4RectES6_h+0x616>
 801b054:	f04f 0e07 	mov.w	lr, #7
 801b058:	f1b9 0f00 	cmp.w	r9, #0
 801b05c:	f000 8159 	beq.w	801b312 <_ZN8touchgfx8LCD16bpp19DecompressorRGB_QOI14blitCopyRGB565EPKhRKNS_4RectES6_h+0x3de>
 801b060:	f89a 5000 	ldrb.w	r5, [sl]
 801b064:	b2ed      	uxtb	r5, r5
 801b066:	11aa      	asrs	r2, r5, #6
 801b068:	f10a 0701 	add.w	r7, sl, #1
 801b06c:	d10e      	bne.n	801b08c <_ZN8touchgfx8LCD16bpp19DecompressorRGB_QOI14blitCopyRGB565EPKhRKNS_4RectES6_h+0x158>
 801b06e:	9b03      	ldr	r3, [sp, #12]
 801b070:	f005 053f 	and.w	r5, r5, #63	@ 0x3f
 801b074:	eb03 0545 	add.w	r5, r3, r5, lsl #1
 801b078:	88ae      	ldrh	r6, [r5, #4]
 801b07a:	f109 39ff 	add.w	r9, r9, #4294967295
 801b07e:	fa1f f989 	uxth.w	r9, r9
 801b082:	46ba      	mov	sl, r7
 801b084:	e7e8      	b.n	801b058 <_ZN8touchgfx8LCD16bpp19DecompressorRGB_QOI14blitCopyRGB565EPKhRKNS_4RectES6_h+0x124>
 801b086:	f8dd a024 	ldr.w	sl, [sp, #36]	@ 0x24
 801b08a:	e7a6      	b.n	801afda <_ZN8touchgfx8LCD16bpp19DecompressorRGB_QOI14blitCopyRGB565EPKhRKNS_4RectES6_h+0xa6>
 801b08c:	2a01      	cmp	r2, #1
 801b08e:	d129      	bne.n	801b0e4 <_ZN8touchgfx8LCD16bpp19DecompressorRGB_QOI14blitCopyRGB565EPKhRKNS_4RectES6_h+0x1b0>
 801b090:	f3c6 0304 	ubfx	r3, r6, #0, #5
 801b094:	f005 0203 	and.w	r2, r5, #3
 801b098:	3b02      	subs	r3, #2
 801b09a:	4413      	add	r3, r2
 801b09c:	f003 031f 	and.w	r3, r3, #31
 801b0a0:	f3c5 0281 	ubfx	r2, r5, #2, #2
 801b0a4:	f363 0604 	bfi	r6, r3, #0, #5
 801b0a8:	3a02      	subs	r2, #2
 801b0aa:	eb02 1256 	add.w	r2, r2, r6, lsr #5
 801b0ae:	f002 023f 	and.w	r2, r2, #63	@ 0x3f
 801b0b2:	f3c5 1501 	ubfx	r5, r5, #4, #2
 801b0b6:	f362 164a 	bfi	r6, r2, #5, #6
 801b0ba:	3d02      	subs	r5, #2
 801b0bc:	eb05 25d6 	add.w	r5, r5, r6, lsr #11
 801b0c0:	f005 051f 	and.w	r5, r5, #31
 801b0c4:	eb02 0282 	add.w	r2, r2, r2, lsl #2
 801b0c8:	2103      	movs	r1, #3
 801b0ca:	fb11 2205 	smlabb	r2, r1, r5, r2
 801b0ce:	fb1e 2303 	smlabb	r3, lr, r3, r2
 801b0d2:	9a03      	ldr	r2, [sp, #12]
 801b0d4:	f003 033f 	and.w	r3, r3, #63	@ 0x3f
 801b0d8:	eb02 0343 	add.w	r3, r2, r3, lsl #1
 801b0dc:	f365 26cf 	bfi	r6, r5, #11, #5
 801b0e0:	809e      	strh	r6, [r3, #4]
 801b0e2:	e7ca      	b.n	801b07a <_ZN8touchgfx8LCD16bpp19DecompressorRGB_QOI14blitCopyRGB565EPKhRKNS_4RectES6_h+0x146>
 801b0e4:	f005 053f 	and.w	r5, r5, #63	@ 0x3f
 801b0e8:	2a02      	cmp	r2, #2
 801b0ea:	b2ab      	uxth	r3, r5
 801b0ec:	d136      	bne.n	801b15c <_ZN8touchgfx8LCD16bpp19DecompressorRGB_QOI14blitCopyRGB565EPKhRKNS_4RectES6_h+0x228>
 801b0ee:	2101      	movs	r1, #1
 801b0f0:	fb12 1205 	smlabb	r2, r2, r5, r1
 801b0f4:	4492      	add	sl, r2
 801b0f6:	463a      	mov	r2, r7
 801b0f8:	4552      	cmp	r2, sl
 801b0fa:	d01c      	beq.n	801b136 <_ZN8touchgfx8LCD16bpp19DecompressorRGB_QOI14blitCopyRGB565EPKhRKNS_4RectES6_h+0x202>
 801b0fc:	4694      	mov	ip, r2
 801b0fe:	f04f 0b03 	mov.w	fp, #3
 801b102:	f81c 1b02 	ldrb.w	r1, [ip], #2
 801b106:	7852      	ldrb	r2, [r2, #1]
 801b108:	ea41 2102 	orr.w	r1, r1, r2, lsl #8
 801b10c:	f3c1 1045 	ubfx	r0, r1, #5, #6
 801b110:	ea4f 28d1 	mov.w	r8, r1, lsr #11
 801b114:	eb00 0080 	add.w	r0, r0, r0, lsl #2
 801b118:	f001 021f 	and.w	r2, r1, #31
 801b11c:	fb1b 0008 	smlabb	r0, fp, r8, r0
 801b120:	fb1e 0002 	smlabb	r0, lr, r2, r0
 801b124:	9a03      	ldr	r2, [sp, #12]
 801b126:	f000 003f 	and.w	r0, r0, #63	@ 0x3f
 801b12a:	eb02 0040 	add.w	r0, r2, r0, lsl #1
 801b12e:	460e      	mov	r6, r1
 801b130:	8081      	strh	r1, [r0, #4]
 801b132:	4662      	mov	r2, ip
 801b134:	e7e0      	b.n	801b0f8 <_ZN8touchgfx8LCD16bpp19DecompressorRGB_QOI14blitCopyRGB565EPKhRKNS_4RectES6_h+0x1c4>
 801b136:	4599      	cmp	r9, r3
 801b138:	d20b      	bcs.n	801b152 <_ZN8touchgfx8LCD16bpp19DecompressorRGB_QOI14blitCopyRGB565EPKhRKNS_4RectES6_h+0x21e>
 801b13a:	eba5 0509 	sub.w	r5, r5, r9
 801b13e:	2d00      	cmp	r5, #0
 801b140:	eb07 0749 	add.w	r7, r7, r9, lsl #1
 801b144:	f300 8209 	bgt.w	801b55a <_ZN8touchgfx8LCD16bpp19DecompressorRGB_QOI14blitCopyRGB565EPKhRKNS_4RectES6_h+0x626>
 801b148:	f8dd 8008 	ldr.w	r8, [sp, #8]
 801b14c:	2301      	movs	r3, #1
 801b14e:	9307      	str	r3, [sp, #28]
 801b150:	e00c      	b.n	801b16c <_ZN8touchgfx8LCD16bpp19DecompressorRGB_QOI14blitCopyRGB565EPKhRKNS_4RectES6_h+0x238>
 801b152:	eb07 0745 	add.w	r7, r7, r5, lsl #1
 801b156:	eba9 0903 	sub.w	r9, r9, r3
 801b15a:	e790      	b.n	801b07e <_ZN8touchgfx8LCD16bpp19DecompressorRGB_QOI14blitCopyRGB565EPKhRKNS_4RectES6_h+0x14a>
 801b15c:	4599      	cmp	r9, r3
 801b15e:	d2fa      	bcs.n	801b156 <_ZN8touchgfx8LCD16bpp19DecompressorRGB_QOI14blitCopyRGB565EPKhRKNS_4RectES6_h+0x222>
 801b160:	eba5 0509 	sub.w	r5, r5, r9
 801b164:	2d00      	cmp	r5, #0
 801b166:	dc1d      	bgt.n	801b1a4 <_ZN8touchgfx8LCD16bpp19DecompressorRGB_QOI14blitCopyRGB565EPKhRKNS_4RectES6_h+0x270>
 801b168:	f8dd 8008 	ldr.w	r8, [sp, #8]
 801b16c:	f04f 0b00 	mov.w	fp, #0
 801b170:	f1b8 0f00 	cmp.w	r8, #0
 801b174:	f340 81a1 	ble.w	801b4ba <_ZN8touchgfx8LCD16bpp19DecompressorRGB_QOI14blitCopyRGB565EPKhRKNS_4RectES6_h+0x586>
 801b178:	783b      	ldrb	r3, [r7, #0]
 801b17a:	b2db      	uxtb	r3, r3
 801b17c:	119a      	asrs	r2, r3, #6
 801b17e:	f107 0a01 	add.w	sl, r7, #1
 801b182:	f040 80d7 	bne.w	801b334 <_ZN8touchgfx8LCD16bpp19DecompressorRGB_QOI14blitCopyRGB565EPKhRKNS_4RectES6_h+0x400>
 801b186:	9a03      	ldr	r2, [sp, #12]
 801b188:	f003 033f 	and.w	r3, r3, #63	@ 0x3f
 801b18c:	eb02 0343 	add.w	r3, r2, r3, lsl #1
 801b190:	889e      	ldrh	r6, [r3, #4]
 801b192:	9b01      	ldr	r3, [sp, #4]
 801b194:	2bff      	cmp	r3, #255	@ 0xff
 801b196:	f040 81e9 	bne.w	801b56c <_ZN8touchgfx8LCD16bpp19DecompressorRGB_QOI14blitCopyRGB565EPKhRKNS_4RectES6_h+0x638>
 801b19a:	8026      	strh	r6, [r4, #0]
 801b19c:	f108 38ff 	add.w	r8, r8, #4294967295
 801b1a0:	3402      	adds	r4, #2
 801b1a2:	e0be      	b.n	801b322 <_ZN8touchgfx8LCD16bpp19DecompressorRGB_QOI14blitCopyRGB565EPKhRKNS_4RectES6_h+0x3ee>
 801b1a4:	9b02      	ldr	r3, [sp, #8]
 801b1a6:	9a02      	ldr	r2, [sp, #8]
 801b1a8:	42ab      	cmp	r3, r5
 801b1aa:	bfa8      	it	ge
 801b1ac:	462b      	movge	r3, r5
 801b1ae:	eba2 0803 	sub.w	r8, r2, r3
 801b1b2:	9a07      	ldr	r2, [sp, #28]
 801b1b4:	1aed      	subs	r5, r5, r3
 801b1b6:	2a00      	cmp	r2, #0
 801b1b8:	d05a      	beq.n	801b270 <_ZN8touchgfx8LCD16bpp19DecompressorRGB_QOI14blitCopyRGB565EPKhRKNS_4RectES6_h+0x33c>
 801b1ba:	9a01      	ldr	r2, [sp, #4]
 801b1bc:	2aff      	cmp	r2, #255	@ 0xff
 801b1be:	eb04 0343 	add.w	r3, r4, r3, lsl #1
 801b1c2:	d049      	beq.n	801b258 <_ZN8touchgfx8LCD16bpp19DecompressorRGB_QOI14blitCopyRGB565EPKhRKNS_4RectES6_h+0x324>
 801b1c4:	f8bd e004 	ldrh.w	lr, [sp, #4]
 801b1c8:	f8bd 9028 	ldrh.w	r9, [sp, #40]	@ 0x28
 801b1cc:	42a3      	cmp	r3, r4
 801b1ce:	f240 80a5 	bls.w	801b31c <_ZN8touchgfx8LCD16bpp19DecompressorRGB_QOI14blitCopyRGB565EPKhRKNS_4RectES6_h+0x3e8>
 801b1d2:	46bc      	mov	ip, r7
 801b1d4:	8820      	ldrh	r0, [r4, #0]
 801b1d6:	f81c 2b02 	ldrb.w	r2, [ip], #2
 801b1da:	7879      	ldrb	r1, [r7, #1]
 801b1dc:	ea42 2201 	orr.w	r2, r2, r1, lsl #8
 801b1e0:	b212      	sxth	r2, r2
 801b1e2:	b291      	uxth	r1, r2
 801b1e4:	ea4f 2a20 	mov.w	sl, r0, asr #8
 801b1e8:	120f      	asrs	r7, r1, #8
 801b1ea:	f00a 0af8 	and.w	sl, sl, #248	@ 0xf8
 801b1ee:	fb1a fa09 	smulbb	sl, sl, r9
 801b1f2:	f007 07f8 	and.w	r7, r7, #248	@ 0xf8
 801b1f6:	fb07 a70e 	mla	r7, r7, lr, sl
 801b1fa:	ea4f 0ae0 	mov.w	sl, r0, asr #3
 801b1fe:	00c0      	lsls	r0, r0, #3
 801b200:	10c9      	asrs	r1, r1, #3
 801b202:	f00a 0afc 	and.w	sl, sl, #252	@ 0xfc
 801b206:	00d2      	lsls	r2, r2, #3
 801b208:	b2c0      	uxtb	r0, r0
 801b20a:	fb1a fa09 	smulbb	sl, sl, r9
 801b20e:	fb10 f009 	smulbb	r0, r0, r9
 801b212:	f001 01fc 	and.w	r1, r1, #252	@ 0xfc
 801b216:	b2d2      	uxtb	r2, r2
 801b218:	b2bf      	uxth	r7, r7
 801b21a:	fb01 a10e 	mla	r1, r1, lr, sl
 801b21e:	fb02 020e 	mla	r2, r2, lr, r0
 801b222:	b289      	uxth	r1, r1
 801b224:	b292      	uxth	r2, r2
 801b226:	1c78      	adds	r0, r7, #1
 801b228:	eb00 2717 	add.w	r7, r0, r7, lsr #8
 801b22c:	f101 0a01 	add.w	sl, r1, #1
 801b230:	1c50      	adds	r0, r2, #1
 801b232:	eb00 2012 	add.w	r0, r0, r2, lsr #8
 801b236:	eb0a 2a11 	add.w	sl, sl, r1, lsr #8
 801b23a:	f407 4778 	and.w	r7, r7, #63488	@ 0xf800
 801b23e:	f3c0 20c4 	ubfx	r0, r0, #11, #5
 801b242:	ea4f 1a5a 	mov.w	sl, sl, lsr #5
 801b246:	4307      	orrs	r7, r0
 801b248:	f40a 6afc 	and.w	sl, sl, #2016	@ 0x7e0
 801b24c:	ea47 070a 	orr.w	r7, r7, sl
 801b250:	f824 7b02 	strh.w	r7, [r4], #2
 801b254:	4667      	mov	r7, ip
 801b256:	e7b9      	b.n	801b1cc <_ZN8touchgfx8LCD16bpp19DecompressorRGB_QOI14blitCopyRGB565EPKhRKNS_4RectES6_h+0x298>
 801b258:	42a3      	cmp	r3, r4
 801b25a:	d95f      	bls.n	801b31c <_ZN8touchgfx8LCD16bpp19DecompressorRGB_QOI14blitCopyRGB565EPKhRKNS_4RectES6_h+0x3e8>
 801b25c:	463a      	mov	r2, r7
 801b25e:	f812 1b02 	ldrb.w	r1, [r2], #2
 801b262:	7878      	ldrb	r0, [r7, #1]
 801b264:	ea41 2100 	orr.w	r1, r1, r0, lsl #8
 801b268:	f824 1b02 	strh.w	r1, [r4], #2
 801b26c:	4617      	mov	r7, r2
 801b26e:	e7f3      	b.n	801b258 <_ZN8touchgfx8LCD16bpp19DecompressorRGB_QOI14blitCopyRGB565EPKhRKNS_4RectES6_h+0x324>
 801b270:	9901      	ldr	r1, [sp, #4]
 801b272:	29ff      	cmp	r1, #255	@ 0xff
 801b274:	eb04 0343 	add.w	r3, r4, r3, lsl #1
 801b278:	b2b2      	uxth	r2, r6
 801b27a:	d044      	beq.n	801b306 <_ZN8touchgfx8LCD16bpp19DecompressorRGB_QOI14blitCopyRGB565EPKhRKNS_4RectES6_h+0x3d2>
 801b27c:	f8bd 1004 	ldrh.w	r1, [sp, #4]
 801b280:	f8bd a028 	ldrh.w	sl, [sp, #40]	@ 0x28
 801b284:	ea4f 2922 	mov.w	r9, r2, asr #8
 801b288:	ea4f 0ee2 	mov.w	lr, r2, asr #3
 801b28c:	f009 09f8 	and.w	r9, r9, #248	@ 0xf8
 801b290:	f00e 0efc 	and.w	lr, lr, #252	@ 0xfc
 801b294:	4608      	mov	r0, r1
 801b296:	fb09 f901 	mul.w	r9, r9, r1
 801b29a:	fb0e fe01 	mul.w	lr, lr, r1
 801b29e:	00d1      	lsls	r1, r2, #3
 801b2a0:	b2c9      	uxtb	r1, r1
 801b2a2:	4341      	muls	r1, r0
 801b2a4:	429c      	cmp	r4, r3
 801b2a6:	f4bf af61 	bcs.w	801b16c <_ZN8touchgfx8LCD16bpp19DecompressorRGB_QOI14blitCopyRGB565EPKhRKNS_4RectES6_h+0x238>
 801b2aa:	8822      	ldrh	r2, [r4, #0]
 801b2ac:	1210      	asrs	r0, r2, #8
 801b2ae:	ea4f 0ce2 	mov.w	ip, r2, asr #3
 801b2b2:	f000 00f8 	and.w	r0, r0, #248	@ 0xf8
 801b2b6:	00d2      	lsls	r2, r2, #3
 801b2b8:	fb00 900a 	mla	r0, r0, sl, r9
 801b2bc:	b2d2      	uxtb	r2, r2
 801b2be:	b280      	uxth	r0, r0
 801b2c0:	f00c 0cfc 	and.w	ip, ip, #252	@ 0xfc
 801b2c4:	fb02 120a 	mla	r2, r2, sl, r1
 801b2c8:	b292      	uxth	r2, r2
 801b2ca:	f100 0b01 	add.w	fp, r0, #1
 801b2ce:	fb0c ec0a 	mla	ip, ip, sl, lr
 801b2d2:	fa1f fc8c 	uxth.w	ip, ip
 801b2d6:	eb0b 2b10 	add.w	fp, fp, r0, lsr #8
 801b2da:	1c50      	adds	r0, r2, #1
 801b2dc:	eb00 2012 	add.w	r0, r0, r2, lsr #8
 801b2e0:	f10c 0201 	add.w	r2, ip, #1
 801b2e4:	eb02 2c1c 	add.w	ip, r2, ip, lsr #8
 801b2e8:	f40b 4b78 	and.w	fp, fp, #63488	@ 0xf800
 801b2ec:	f3c0 20c4 	ubfx	r0, r0, #11, #5
 801b2f0:	ea4f 1c5c 	mov.w	ip, ip, lsr #5
 801b2f4:	ea40 0b0b 	orr.w	fp, r0, fp
 801b2f8:	f40c 6cfc 	and.w	ip, ip, #2016	@ 0x7e0
 801b2fc:	ea4b 0b0c 	orr.w	fp, fp, ip
 801b300:	f824 bb02 	strh.w	fp, [r4], #2
 801b304:	e7ce      	b.n	801b2a4 <_ZN8touchgfx8LCD16bpp19DecompressorRGB_QOI14blitCopyRGB565EPKhRKNS_4RectES6_h+0x370>
 801b306:	429c      	cmp	r4, r3
 801b308:	f4bf af30 	bcs.w	801b16c <_ZN8touchgfx8LCD16bpp19DecompressorRGB_QOI14blitCopyRGB565EPKhRKNS_4RectES6_h+0x238>
 801b30c:	f824 2b02 	strh.w	r2, [r4], #2
 801b310:	e7f9      	b.n	801b306 <_ZN8touchgfx8LCD16bpp19DecompressorRGB_QOI14blitCopyRGB565EPKhRKNS_4RectES6_h+0x3d2>
 801b312:	f8dd 8008 	ldr.w	r8, [sp, #8]
 801b316:	4657      	mov	r7, sl
 801b318:	464d      	mov	r5, r9
 801b31a:	e727      	b.n	801b16c <_ZN8touchgfx8LCD16bpp19DecompressorRGB_QOI14blitCopyRGB565EPKhRKNS_4RectES6_h+0x238>
 801b31c:	2300      	movs	r3, #0
 801b31e:	e716      	b.n	801b14e <_ZN8touchgfx8LCD16bpp19DecompressorRGB_QOI14blitCopyRGB565EPKhRKNS_4RectES6_h+0x21a>
 801b320:	44bb      	add	fp, r7
 801b322:	4657      	mov	r7, sl
 801b324:	e724      	b.n	801b170 <_ZN8touchgfx8LCD16bpp19DecompressorRGB_QOI14blitCopyRGB565EPKhRKNS_4RectES6_h+0x23c>
 801b326:	bf00      	nop
 801b328:	20002fa8 	.word	0x20002fa8
 801b32c:	20002fa2 	.word	0x20002fa2
 801b330:	20000120 	.word	0x20000120
 801b334:	2a01      	cmp	r2, #1
 801b336:	d12a      	bne.n	801b38e <_ZN8touchgfx8LCD16bpp19DecompressorRGB_QOI14blitCopyRGB565EPKhRKNS_4RectES6_h+0x45a>
 801b338:	f3c6 0104 	ubfx	r1, r6, #0, #5
 801b33c:	f003 0203 	and.w	r2, r3, #3
 801b340:	3902      	subs	r1, #2
 801b342:	4411      	add	r1, r2
 801b344:	f001 011f 	and.w	r1, r1, #31
 801b348:	f3c3 0081 	ubfx	r0, r3, #2, #2
 801b34c:	f361 0604 	bfi	r6, r1, #0, #5
 801b350:	3802      	subs	r0, #2
 801b352:	eb00 1056 	add.w	r0, r0, r6, lsr #5
 801b356:	f000 003f 	and.w	r0, r0, #63	@ 0x3f
 801b35a:	f3c3 1301 	ubfx	r3, r3, #4, #2
 801b35e:	f360 164a 	bfi	r6, r0, #5, #6
 801b362:	3b02      	subs	r3, #2
 801b364:	eb03 22d6 	add.w	r2, r3, r6, lsr #11
 801b368:	f002 031f 	and.w	r3, r2, #31
 801b36c:	eb00 0080 	add.w	r0, r0, r0, lsl #2
 801b370:	2203      	movs	r2, #3
 801b372:	f363 26cf 	bfi	r6, r3, #11, #5
 801b376:	fb12 0303 	smlabb	r3, r2, r3, r0
 801b37a:	2207      	movs	r2, #7
 801b37c:	fb12 3301 	smlabb	r3, r2, r1, r3
 801b380:	9a03      	ldr	r2, [sp, #12]
 801b382:	f003 033f 	and.w	r3, r3, #63	@ 0x3f
 801b386:	eb02 0343 	add.w	r3, r2, r3, lsl #1
 801b38a:	809e      	strh	r6, [r3, #4]
 801b38c:	e701      	b.n	801b192 <_ZN8touchgfx8LCD16bpp19DecompressorRGB_QOI14blitCopyRGB565EPKhRKNS_4RectES6_h+0x25e>
 801b38e:	f003 053f 	and.w	r5, r3, #63	@ 0x3f
 801b392:	45a8      	cmp	r8, r5
 801b394:	4647      	mov	r7, r8
 801b396:	bfa8      	it	ge
 801b398:	462f      	movge	r7, r5
 801b39a:	2a02      	cmp	r2, #2
 801b39c:	d154      	bne.n	801b448 <_ZN8touchgfx8LCD16bpp19DecompressorRGB_QOI14blitCopyRGB565EPKhRKNS_4RectES6_h+0x514>
 801b39e:	9b01      	ldr	r3, [sp, #4]
 801b3a0:	2bff      	cmp	r3, #255	@ 0xff
 801b3a2:	d01a      	beq.n	801b3da <_ZN8touchgfx8LCD16bpp19DecompressorRGB_QOI14blitCopyRGB565EPKhRKNS_4RectES6_h+0x4a6>
 801b3a4:	eb0b 0307 	add.w	r3, fp, r7
 801b3a8:	2b40      	cmp	r3, #64	@ 0x40
 801b3aa:	dd16      	ble.n	801b3da <_ZN8touchgfx8LCD16bpp19DecompressorRGB_QOI14blitCopyRGB565EPKhRKNS_4RectES6_h+0x4a6>
 801b3ac:	ea4f 094b 	mov.w	r9, fp, lsl #1
 801b3b0:	4649      	mov	r1, r9
 801b3b2:	9800      	ldr	r0, [sp, #0]
 801b3b4:	f7f4 fb71 	bl	800fa9a <_ZN8touchgfx5paint9flushLineEPmi>
 801b3b8:	465a      	mov	r2, fp
 801b3ba:	9b01      	ldr	r3, [sp, #4]
 801b3bc:	9900      	ldr	r1, [sp, #0]
 801b3be:	4620      	mov	r0, r4
 801b3c0:	f7f4 fb76 	bl	800fab0 <_ZN8touchgfx5paint6rgb56514lineFromRGB565EPtPKtjh>
 801b3c4:	9b00      	ldr	r3, [sp, #0]
 801b3c6:	461a      	mov	r2, r3
 801b3c8:	4b6c      	ldr	r3, [pc, #432]	@ (801b57c <_ZN8touchgfx8LCD16bpp19DecompressorRGB_QOI14blitCopyRGB565EPKhRKNS_4RectES6_h+0x648>)
 801b3ca:	429a      	cmp	r2, r3
 801b3cc:	bf0c      	ite	eq
 801b3ce:	4b6c      	ldreq	r3, [pc, #432]	@ (801b580 <_ZN8touchgfx8LCD16bpp19DecompressorRGB_QOI14blitCopyRGB565EPKhRKNS_4RectES6_h+0x64c>)
 801b3d0:	4b6a      	ldrne	r3, [pc, #424]	@ (801b57c <_ZN8touchgfx8LCD16bpp19DecompressorRGB_QOI14blitCopyRGB565EPKhRKNS_4RectES6_h+0x648>)
 801b3d2:	9300      	str	r3, [sp, #0]
 801b3d4:	444c      	add	r4, r9
 801b3d6:	f04f 0b00 	mov.w	fp, #0
 801b3da:	4652      	mov	r2, sl
 801b3dc:	2100      	movs	r1, #0
 801b3de:	42a9      	cmp	r1, r5
 801b3e0:	da2c      	bge.n	801b43c <_ZN8touchgfx8LCD16bpp19DecompressorRGB_QOI14blitCopyRGB565EPKhRKNS_4RectES6_h+0x508>
 801b3e2:	4694      	mov	ip, r2
 801b3e4:	f04f 0903 	mov.w	r9, #3
 801b3e8:	f81c 3b02 	ldrb.w	r3, [ip], #2
 801b3ec:	7852      	ldrb	r2, [r2, #1]
 801b3ee:	ea43 2302 	orr.w	r3, r3, r2, lsl #8
 801b3f2:	f3c3 1045 	ubfx	r0, r3, #5, #6
 801b3f6:	ea4f 2ed3 	mov.w	lr, r3, lsr #11
 801b3fa:	eb00 0080 	add.w	r0, r0, r0, lsl #2
 801b3fe:	f003 021f 	and.w	r2, r3, #31
 801b402:	fb19 000e 	smlabb	r0, r9, lr, r0
 801b406:	f04f 0e07 	mov.w	lr, #7
 801b40a:	fb1e 0002 	smlabb	r0, lr, r2, r0
 801b40e:	9a03      	ldr	r2, [sp, #12]
 801b410:	f000 003f 	and.w	r0, r0, #63	@ 0x3f
 801b414:	eb02 0040 	add.w	r0, r2, r0, lsl #1
 801b418:	42b9      	cmp	r1, r7
 801b41a:	461e      	mov	r6, r3
 801b41c:	8083      	strh	r3, [r0, #4]
 801b41e:	da0a      	bge.n	801b436 <_ZN8touchgfx8LCD16bpp19DecompressorRGB_QOI14blitCopyRGB565EPKhRKNS_4RectES6_h+0x502>
 801b420:	9a01      	ldr	r2, [sp, #4]
 801b422:	2aff      	cmp	r2, #255	@ 0xff
 801b424:	bf15      	itete	ne
 801b426:	9a00      	ldrne	r2, [sp, #0]
 801b428:	8023      	strheq	r3, [r4, #0]
 801b42a:	f822 301b 	strhne.w	r3, [r2, fp, lsl #1]
 801b42e:	3402      	addeq	r4, #2
 801b430:	bf18      	it	ne
 801b432:	f10b 0b01 	addne.w	fp, fp, #1
 801b436:	3101      	adds	r1, #1
 801b438:	4662      	mov	r2, ip
 801b43a:	e7d0      	b.n	801b3de <_ZN8touchgfx8LCD16bpp19DecompressorRGB_QOI14blitCopyRGB565EPKhRKNS_4RectES6_h+0x4aa>
 801b43c:	eb0a 0a45 	add.w	sl, sl, r5, lsl #1
 801b440:	eba8 0807 	sub.w	r8, r8, r7
 801b444:	1bed      	subs	r5, r5, r7
 801b446:	e76c      	b.n	801b322 <_ZN8touchgfx8LCD16bpp19DecompressorRGB_QOI14blitCopyRGB565EPKhRKNS_4RectES6_h+0x3ee>
 801b448:	9b01      	ldr	r3, [sp, #4]
 801b44a:	2bff      	cmp	r3, #255	@ 0xff
 801b44c:	eba8 0807 	sub.w	r8, r8, r7
 801b450:	eba5 0507 	sub.w	r5, r5, r7
 801b454:	fa1f f986 	uxth.w	r9, r6
 801b458:	d027      	beq.n	801b4aa <_ZN8touchgfx8LCD16bpp19DecompressorRGB_QOI14blitCopyRGB565EPKhRKNS_4RectES6_h+0x576>
 801b45a:	eb0b 0307 	add.w	r3, fp, r7
 801b45e:	2b40      	cmp	r3, #64	@ 0x40
 801b460:	dd18      	ble.n	801b494 <_ZN8touchgfx8LCD16bpp19DecompressorRGB_QOI14blitCopyRGB565EPKhRKNS_4RectES6_h+0x560>
 801b462:	ea4f 034b 	mov.w	r3, fp, lsl #1
 801b466:	4619      	mov	r1, r3
 801b468:	9800      	ldr	r0, [sp, #0]
 801b46a:	930c      	str	r3, [sp, #48]	@ 0x30
 801b46c:	f7f4 fb15 	bl	800fa9a <_ZN8touchgfx5paint9flushLineEPmi>
 801b470:	465a      	mov	r2, fp
 801b472:	9b01      	ldr	r3, [sp, #4]
 801b474:	9900      	ldr	r1, [sp, #0]
 801b476:	4620      	mov	r0, r4
 801b478:	f7f4 fb1a 	bl	800fab0 <_ZN8touchgfx5paint6rgb56514lineFromRGB565EPtPKtjh>
 801b47c:	9b0c      	ldr	r3, [sp, #48]	@ 0x30
 801b47e:	441c      	add	r4, r3
 801b480:	9b00      	ldr	r3, [sp, #0]
 801b482:	461a      	mov	r2, r3
 801b484:	4b3d      	ldr	r3, [pc, #244]	@ (801b57c <_ZN8touchgfx8LCD16bpp19DecompressorRGB_QOI14blitCopyRGB565EPKhRKNS_4RectES6_h+0x648>)
 801b486:	429a      	cmp	r2, r3
 801b488:	bf0c      	ite	eq
 801b48a:	4b3d      	ldreq	r3, [pc, #244]	@ (801b580 <_ZN8touchgfx8LCD16bpp19DecompressorRGB_QOI14blitCopyRGB565EPKhRKNS_4RectES6_h+0x64c>)
 801b48c:	4b3b      	ldrne	r3, [pc, #236]	@ (801b57c <_ZN8touchgfx8LCD16bpp19DecompressorRGB_QOI14blitCopyRGB565EPKhRKNS_4RectES6_h+0x648>)
 801b48e:	9300      	str	r3, [sp, #0]
 801b490:	f04f 0b00 	mov.w	fp, #0
 801b494:	9b00      	ldr	r3, [sp, #0]
 801b496:	eb03 024b 	add.w	r2, r3, fp, lsl #1
 801b49a:	463b      	mov	r3, r7
 801b49c:	2b00      	cmp	r3, #0
 801b49e:	f43f af3f 	beq.w	801b320 <_ZN8touchgfx8LCD16bpp19DecompressorRGB_QOI14blitCopyRGB565EPKhRKNS_4RectES6_h+0x3ec>
 801b4a2:	f822 9b02 	strh.w	r9, [r2], #2
 801b4a6:	3b01      	subs	r3, #1
 801b4a8:	e7f8      	b.n	801b49c <_ZN8touchgfx8LCD16bpp19DecompressorRGB_QOI14blitCopyRGB565EPKhRKNS_4RectES6_h+0x568>
 801b4aa:	eb04 0747 	add.w	r7, r4, r7, lsl #1
 801b4ae:	42a7      	cmp	r7, r4
 801b4b0:	f67f af37 	bls.w	801b322 <_ZN8touchgfx8LCD16bpp19DecompressorRGB_QOI14blitCopyRGB565EPKhRKNS_4RectES6_h+0x3ee>
 801b4b4:	f824 9b02 	strh.w	r9, [r4], #2
 801b4b8:	e7f9      	b.n	801b4ae <_ZN8touchgfx8LCD16bpp19DecompressorRGB_QOI14blitCopyRGB565EPKhRKNS_4RectES6_h+0x57a>
 801b4ba:	f1bb 0f00 	cmp.w	fp, #0
 801b4be:	d00c      	beq.n	801b4da <_ZN8touchgfx8LCD16bpp19DecompressorRGB_QOI14blitCopyRGB565EPKhRKNS_4RectES6_h+0x5a6>
 801b4c0:	ea4f 084b 	mov.w	r8, fp, lsl #1
 801b4c4:	4641      	mov	r1, r8
 801b4c6:	9800      	ldr	r0, [sp, #0]
 801b4c8:	f7f4 fae7 	bl	800fa9a <_ZN8touchgfx5paint9flushLineEPmi>
 801b4cc:	4620      	mov	r0, r4
 801b4ce:	9b01      	ldr	r3, [sp, #4]
 801b4d0:	9900      	ldr	r1, [sp, #0]
 801b4d2:	465a      	mov	r2, fp
 801b4d4:	f7f4 faec 	bl	800fab0 <_ZN8touchgfx5paint6rgb56514lineFromRGB565EPtPKtjh>
 801b4d8:	4444      	add	r4, r8
 801b4da:	4b2a      	ldr	r3, [pc, #168]	@ (801b584 <_ZN8touchgfx8LCD16bpp19DecompressorRGB_QOI14blitCopyRGB565EPKhRKNS_4RectES6_h+0x650>)
 801b4dc:	9a02      	ldr	r2, [sp, #8]
 801b4de:	881b      	ldrh	r3, [r3, #0]
 801b4e0:	1a9b      	subs	r3, r3, r2
 801b4e2:	eb04 0443 	add.w	r4, r4, r3, lsl #1
 801b4e6:	9b06      	ldr	r3, [sp, #24]
 801b4e8:	3301      	adds	r3, #1
 801b4ea:	9306      	str	r3, [sp, #24]
 801b4ec:	9a06      	ldr	r2, [sp, #24]
 801b4ee:	9b04      	ldr	r3, [sp, #16]
 801b4f0:	4293      	cmp	r3, r2
 801b4f2:	d120      	bne.n	801b536 <_ZN8touchgfx8LCD16bpp19DecompressorRGB_QOI14blitCopyRGB565EPKhRKNS_4RectES6_h+0x602>
 801b4f4:	9b05      	ldr	r3, [sp, #20]
 801b4f6:	9a05      	ldr	r2, [sp, #20]
 801b4f8:	f8bd 9040 	ldrh.w	r9, [sp, #64]	@ 0x40
 801b4fc:	f8bd 5038 	ldrh.w	r5, [sp, #56]	@ 0x38
 801b500:	980b      	ldr	r0, [sp, #44]	@ 0x2c
 801b502:	f103 0801 	add.w	r8, r3, #1
 801b506:	9b08      	ldr	r3, [sp, #32]
 801b508:	f853 7022 	ldr.w	r7, [r3, r2, lsl #2]
 801b50c:	9b09      	ldr	r3, [sp, #36]	@ 0x24
 801b50e:	ba3f      	rev	r7, r7
 801b510:	2280      	movs	r2, #128	@ 0x80
 801b512:	2100      	movs	r1, #0
 801b514:	441f      	add	r7, r3
 801b516:	eba9 0905 	sub.w	r9, r9, r5
 801b51a:	f00a fd70 	bl	8025ffe <memset>
 801b51e:	2300      	movs	r3, #0
 801b520:	fa1f f989 	uxth.w	r9, r9
 801b524:	f04f 0600 	mov.w	r6, #0
 801b528:	f8cd 8014 	str.w	r8, [sp, #20]
 801b52c:	9306      	str	r3, [sp, #24]
 801b52e:	f7f4 faad 	bl	800fa8c <_ZN8touchgfx5paint8tearDownEv>
 801b532:	46ba      	mov	sl, r7
 801b534:	e58a      	b.n	801b04c <_ZN8touchgfx8LCD16bpp19DecompressorRGB_QOI14blitCopyRGB565EPKhRKNS_4RectES6_h+0x118>
 801b536:	f8bd 903c 	ldrh.w	r9, [sp, #60]	@ 0x3c
 801b53a:	9b02      	ldr	r3, [sp, #8]
 801b53c:	eba9 0903 	sub.w	r9, r9, r3
 801b540:	eba9 0505 	sub.w	r5, r9, r5
 801b544:	fa1f f985 	uxth.w	r9, r5
 801b548:	e7f1      	b.n	801b52e <_ZN8touchgfx8LCD16bpp19DecompressorRGB_QOI14blitCopyRGB565EPKhRKNS_4RectES6_h+0x5fa>
 801b54a:	4b0f      	ldr	r3, [pc, #60]	@ (801b588 <_ZN8touchgfx8LCD16bpp19DecompressorRGB_QOI14blitCopyRGB565EPKhRKNS_4RectES6_h+0x654>)
 801b54c:	6818      	ldr	r0, [r3, #0]
 801b54e:	6803      	ldr	r3, [r0, #0]
 801b550:	6adb      	ldr	r3, [r3, #44]	@ 0x2c
 801b552:	4798      	blx	r3
 801b554:	b013      	add	sp, #76	@ 0x4c
 801b556:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 801b55a:	9b02      	ldr	r3, [sp, #8]
 801b55c:	9a02      	ldr	r2, [sp, #8]
 801b55e:	42ab      	cmp	r3, r5
 801b560:	bfa8      	it	ge
 801b562:	462b      	movge	r3, r5
 801b564:	eba2 0803 	sub.w	r8, r2, r3
 801b568:	1aed      	subs	r5, r5, r3
 801b56a:	e626      	b.n	801b1ba <_ZN8touchgfx8LCD16bpp19DecompressorRGB_QOI14blitCopyRGB565EPKhRKNS_4RectES6_h+0x286>
 801b56c:	f108 38ff 	add.w	r8, r8, #4294967295
 801b570:	fa1f f986 	uxth.w	r9, r6
 801b574:	2500      	movs	r5, #0
 801b576:	2701      	movs	r7, #1
 801b578:	e76f      	b.n	801b45a <_ZN8touchgfx8LCD16bpp19DecompressorRGB_QOI14blitCopyRGB565EPKhRKNS_4RectES6_h+0x526>
 801b57a:	bf00      	nop
 801b57c:	20000120 	.word	0x20000120
 801b580:	20000220 	.word	0x20000220
 801b584:	20002fa2 	.word	0x20002fa2
 801b588:	20002fa8 	.word	0x20002fa8

0801b58c <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE16blitCopyARGB8888EPKhS3_RKNS_4RectES6_h>:
 801b58c:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 801b590:	b08f      	sub	sp, #60	@ 0x3c
 801b592:	461c      	mov	r4, r3
 801b594:	9203      	str	r2, [sp, #12]
 801b596:	f89d 2064 	ldrb.w	r2, [sp, #100]	@ 0x64
 801b59a:	9b18      	ldr	r3, [sp, #96]	@ 0x60
 801b59c:	9202      	str	r2, [sp, #8]
 801b59e:	460f      	mov	r7, r1
 801b5a0:	2a00      	cmp	r2, #0
 801b5a2:	f000 8128 	beq.w	801b7f6 <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE16blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x26a>
 801b5a6:	6820      	ldr	r0, [r4, #0]
 801b5a8:	6861      	ldr	r1, [r4, #4]
 801b5aa:	aa0a      	add	r2, sp, #40	@ 0x28
 801b5ac:	c203      	stmia	r2!, {r0, r1}
 801b5ae:	6818      	ldr	r0, [r3, #0]
 801b5b0:	6859      	ldr	r1, [r3, #4]
 801b5b2:	aa0c      	add	r2, sp, #48	@ 0x30
 801b5b4:	c203      	stmia	r2!, {r0, r1}
 801b5b6:	a80a      	add	r0, sp, #40	@ 0x28
 801b5b8:	f7f8 fb84 	bl	8013cc4 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectE>
 801b5bc:	4621      	mov	r1, r4
 801b5be:	a80c      	add	r0, sp, #48	@ 0x30
 801b5c0:	f7f8 fba8 	bl	8013d14 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectERKS1_>
 801b5c4:	f9bd 602c 	ldrsh.w	r6, [sp, #44]	@ 0x2c
 801b5c8:	f9bd 502e 	ldrsh.w	r5, [sp, #46]	@ 0x2e
 801b5cc:	f8bd 0030 	ldrh.w	r0, [sp, #48]	@ 0x30
 801b5d0:	f5b6 6f80 	cmp.w	r6, #1024	@ 0x400
 801b5d4:	bfde      	ittt	le
 801b5d6:	b2b3      	uxthle	r3, r6
 801b5d8:	f44f 6280 	movle.w	r2, #1024	@ 0x400
 801b5dc:	fb92 f3f3 	sdivle	r3, r2, r3
 801b5e0:	f9bd 2032 	ldrsh.w	r2, [sp, #50]	@ 0x32
 801b5e4:	bfc8      	it	gt
 801b5e6:	2301      	movgt	r3, #1
 801b5e8:	fb92 f1f3 	sdiv	r1, r2, r3
 801b5ec:	fa1f fc81 	uxth.w	ip, r1
 801b5f0:	fb0c 2413 	mls	r4, ip, r3, r2
 801b5f4:	fb14 f406 	smulbb	r4, r4, r6
 801b5f8:	441d      	add	r5, r3
 801b5fa:	4404      	add	r4, r0
 801b5fc:	4661      	mov	r1, ip
 801b5fe:	3d01      	subs	r5, #1
 801b600:	b2a4      	uxth	r4, r4
 801b602:	fb95 f5f3 	sdiv	r5, r5, r3
 801b606:	b121      	cbz	r1, 801b612 <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE16blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x86>
 801b608:	9b03      	ldr	r3, [sp, #12]
 801b60a:	f853 302c 	ldr.w	r3, [r3, ip, lsl #2]
 801b60e:	ba1b      	rev	r3, r3
 801b610:	441f      	add	r7, r3
 801b612:	f8bd 3028 	ldrh.w	r3, [sp, #40]	@ 0x28
 801b616:	f9bd 9034 	ldrsh.w	r9, [sp, #52]	@ 0x34
 801b61a:	f9bd 6036 	ldrsh.w	r6, [sp, #54]	@ 0x36
 801b61e:	4418      	add	r0, r3
 801b620:	f8bd 302a 	ldrh.w	r3, [sp, #42]	@ 0x2a
 801b624:	f8ad 0030 	strh.w	r0, [sp, #48]	@ 0x30
 801b628:	441a      	add	r2, r3
 801b62a:	4b74      	ldr	r3, [pc, #464]	@ (801b7fc <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE16blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x270>)
 801b62c:	f8ad 2032 	strh.w	r2, [sp, #50]	@ 0x32
 801b630:	6818      	ldr	r0, [r3, #0]
 801b632:	6803      	ldr	r3, [r0, #0]
 801b634:	6a9b      	ldr	r3, [r3, #40]	@ 0x28
 801b636:	4798      	blx	r3
 801b638:	4a71      	ldr	r2, [pc, #452]	@ (801b800 <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE16blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x274>)
 801b63a:	f9bd 1032 	ldrsh.w	r1, [sp, #50]	@ 0x32
 801b63e:	8813      	ldrh	r3, [r2, #0]
 801b640:	f9bd c030 	ldrsh.w	ip, [sp, #48]	@ 0x30
 801b644:	9209      	str	r2, [sp, #36]	@ 0x24
 801b646:	fb03 c101 	mla	r1, r3, r1, ip
 801b64a:	eb00 0041 	add.w	r0, r0, r1, lsl #1
 801b64e:	4373      	muls	r3, r6
 801b650:	b2ad      	uxth	r5, r5
 801b652:	eb00 0343 	add.w	r3, r0, r3, lsl #1
 801b656:	00ad      	lsls	r5, r5, #2
 801b658:	2c00      	cmp	r4, #0
 801b65a:	9304      	str	r3, [sp, #16]
 801b65c:	f105 0304 	add.w	r3, r5, #4
 801b660:	9305      	str	r3, [sp, #20]
 801b662:	bf0c      	ite	eq
 801b664:	46c8      	moveq	r8, r9
 801b666:	f04f 0800 	movne.w	r8, #0
 801b66a:	2300      	movs	r3, #0
 801b66c:	fa1f f888 	uxth.w	r8, r8
 801b670:	9301      	str	r3, [sp, #4]
 801b672:	9a04      	ldr	r2, [sp, #16]
 801b674:	4282      	cmp	r2, r0
 801b676:	f240 80b9 	bls.w	801b7ec <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE16blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x260>
 801b67a:	b95b      	cbnz	r3, 801b694 <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE16blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x108>
 801b67c:	783a      	ldrb	r2, [r7, #0]
 801b67e:	0993      	lsrs	r3, r2, #6
 801b680:	f002 023f 	and.w	r2, r2, #63	@ 0x3f
 801b684:	9201      	str	r2, [sp, #4]
 801b686:	1e5a      	subs	r2, r3, #1
 801b688:	2a02      	cmp	r2, #2
 801b68a:	bf8d      	iteet	hi
 801b68c:	787b      	ldrbhi	r3, [r7, #1]
 801b68e:	3701      	addls	r7, #1
 801b690:	b29b      	uxthls	r3, r3
 801b692:	3702      	addhi	r7, #2
 801b694:	b184      	cbz	r4, 801b6b8 <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE16blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x12c>
 801b696:	429c      	cmp	r4, r3
 801b698:	bf95      	itete	ls
 801b69a:	1b1c      	subls	r4, r3, r4
 801b69c:	1ae4      	subhi	r4, r4, r3
 801b69e:	fa1f fa84 	uxthls.w	sl, r4
 801b6a2:	b2a4      	uxthhi	r4, r4
 801b6a4:	bf87      	ittee	hi
 801b6a6:	46c4      	movhi	ip, r8
 801b6a8:	f04f 0a00 	movhi.w	sl, #0
 801b6ac:	fa1f fc89 	uxthls.w	ip, r9
 801b6b0:	2400      	movls	r4, #0
 801b6b2:	4653      	mov	r3, sl
 801b6b4:	46e0      	mov	r8, ip
 801b6b6:	e7dc      	b.n	801b672 <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE16blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0xe6>
 801b6b8:	2204      	movs	r2, #4
 801b6ba:	4615      	mov	r5, r2
 801b6bc:	9905      	ldr	r1, [sp, #20]
 801b6be:	9a01      	ldr	r2, [sp, #4]
 801b6c0:	fb15 1202 	smlabb	r2, r5, r2, r1
 801b6c4:	9903      	ldr	r1, [sp, #12]
 801b6c6:	588a      	ldr	r2, [r1, r2]
 801b6c8:	4543      	cmp	r3, r8
 801b6ca:	bf27      	ittee	cs
 801b6cc:	eba3 0a08 	subcs.w	sl, r3, r8
 801b6d0:	46c6      	movcs	lr, r8
 801b6d2:	eba8 0c03 	subcc.w	ip, r8, r3
 801b6d6:	469e      	movcc	lr, r3
 801b6d8:	ea4f 6112 	mov.w	r1, r2, lsr #24
 801b6dc:	bf27      	ittee	cs
 801b6de:	fa1f fa8a 	uxthcs.w	sl, sl
 801b6e2:	46a4      	movcs	ip, r4
 801b6e4:	fa1f fc8c 	uxthcc.w	ip, ip
 801b6e8:	46a2      	movcc	sl, r4
 801b6ea:	ea4f 0e4e 	mov.w	lr, lr, lsl #1
 801b6ee:	2900      	cmp	r1, #0
 801b6f0:	d066      	beq.n	801b7c0 <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE16blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x234>
 801b6f2:	29ff      	cmp	r1, #255	@ 0xff
 801b6f4:	ea4f 2612 	mov.w	r6, r2, lsr #8
 801b6f8:	d114      	bne.n	801b724 <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE16blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x198>
 801b6fa:	9d02      	ldr	r5, [sp, #8]
 801b6fc:	2dff      	cmp	r5, #255	@ 0xff
 801b6fe:	d111      	bne.n	801b724 <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE16blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x198>
 801b700:	0951      	lsrs	r1, r2, #5
 801b702:	f426 66ff 	bic.w	r6, r6, #2040	@ 0x7f8
 801b706:	f401 61fc 	and.w	r1, r1, #2016	@ 0x7e0
 801b70a:	f026 0607 	bic.w	r6, r6, #7
 801b70e:	430e      	orrs	r6, r1
 801b710:	f3c2 02c4 	ubfx	r2, r2, #3, #5
 801b714:	4316      	orrs	r6, r2
 801b716:	b2b6      	uxth	r6, r6
 801b718:	4486      	add	lr, r0
 801b71a:	4586      	cmp	lr, r0
 801b71c:	d051      	beq.n	801b7c2 <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE16blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x236>
 801b71e:	f820 6b02 	strh.w	r6, [r0], #2
 801b722:	e7fa      	b.n	801b71a <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE16blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x18e>
 801b724:	9d02      	ldr	r5, [sp, #8]
 801b726:	4369      	muls	r1, r5
 801b728:	1c4d      	adds	r5, r1, #1
 801b72a:	eb05 2521 	add.w	r5, r5, r1, asr #8
 801b72e:	122d      	asrs	r5, r5, #8
 801b730:	ea6f 0b05 	mvn.w	fp, r5
 801b734:	f3c2 4107 	ubfx	r1, r2, #16, #8
 801b738:	b2ad      	uxth	r5, r5
 801b73a:	b2f6      	uxtb	r6, r6
 801b73c:	b2d2      	uxtb	r2, r2
 801b73e:	fb11 f105 	smulbb	r1, r1, r5
 801b742:	fb16 f605 	smulbb	r6, r6, r5
 801b746:	fb12 f205 	smulbb	r2, r2, r5
 801b74a:	b289      	uxth	r1, r1
 801b74c:	b2b6      	uxth	r6, r6
 801b74e:	b292      	uxth	r2, r2
 801b750:	9106      	str	r1, [sp, #24]
 801b752:	9607      	str	r6, [sp, #28]
 801b754:	9208      	str	r2, [sp, #32]
 801b756:	4486      	add	lr, r0
 801b758:	fa5f fb8b 	uxtb.w	fp, fp
 801b75c:	4586      	cmp	lr, r0
 801b75e:	d030      	beq.n	801b7c2 <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE16blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x236>
 801b760:	8802      	ldrh	r2, [r0, #0]
 801b762:	9906      	ldr	r1, [sp, #24]
 801b764:	1216      	asrs	r6, r2, #8
 801b766:	f006 06f8 	and.w	r6, r6, #248	@ 0xf8
 801b76a:	10d5      	asrs	r5, r2, #3
 801b76c:	ea46 1656 	orr.w	r6, r6, r6, lsr #5
 801b770:	fb06 160b 	mla	r6, r6, fp, r1
 801b774:	f005 05fc 	and.w	r5, r5, #252	@ 0xfc
 801b778:	9907      	ldr	r1, [sp, #28]
 801b77a:	00d2      	lsls	r2, r2, #3
 801b77c:	ea45 1595 	orr.w	r5, r5, r5, lsr #6
 801b780:	fb05 150b 	mla	r5, r5, fp, r1
 801b784:	b2d2      	uxtb	r2, r2
 801b786:	9908      	ldr	r1, [sp, #32]
 801b788:	ea42 1252 	orr.w	r2, r2, r2, lsr #5
 801b78c:	b2b6      	uxth	r6, r6
 801b78e:	fb02 120b 	mla	r2, r2, fp, r1
 801b792:	b292      	uxth	r2, r2
 801b794:	1c71      	adds	r1, r6, #1
 801b796:	eb01 2616 	add.w	r6, r1, r6, lsr #8
 801b79a:	1c51      	adds	r1, r2, #1
 801b79c:	eb01 2212 	add.w	r2, r1, r2, lsr #8
 801b7a0:	b2ad      	uxth	r5, r5
 801b7a2:	f3c2 22c4 	ubfx	r2, r2, #11, #5
 801b7a6:	f406 4678 	and.w	r6, r6, #63488	@ 0xf800
 801b7aa:	4316      	orrs	r6, r2
 801b7ac:	1c6a      	adds	r2, r5, #1
 801b7ae:	eb02 2515 	add.w	r5, r2, r5, lsr #8
 801b7b2:	096d      	lsrs	r5, r5, #5
 801b7b4:	f405 65fc 	and.w	r5, r5, #2016	@ 0x7e0
 801b7b8:	432e      	orrs	r6, r5
 801b7ba:	f820 6b02 	strh.w	r6, [r0], #2
 801b7be:	e7cd      	b.n	801b75c <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE16blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x1d0>
 801b7c0:	4470      	add	r0, lr
 801b7c2:	4543      	cmp	r3, r8
 801b7c4:	f4ff af75 	bcc.w	801b6b2 <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE16blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x126>
 801b7c8:	f8bd 402c 	ldrh.w	r4, [sp, #44]	@ 0x2c
 801b7cc:	9b09      	ldr	r3, [sp, #36]	@ 0x24
 801b7ce:	fa1f fc89 	uxth.w	ip, r9
 801b7d2:	eba4 040c 	sub.w	r4, r4, ip
 801b7d6:	881b      	ldrh	r3, [r3, #0]
 801b7d8:	b2a4      	uxth	r4, r4
 801b7da:	2c00      	cmp	r4, #0
 801b7dc:	eba3 0309 	sub.w	r3, r3, r9
 801b7e0:	bf18      	it	ne
 801b7e2:	f04f 0c00 	movne.w	ip, #0
 801b7e6:	eb00 0043 	add.w	r0, r0, r3, lsl #1
 801b7ea:	e762      	b.n	801b6b2 <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE16blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x126>
 801b7ec:	4b03      	ldr	r3, [pc, #12]	@ (801b7fc <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE16blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x270>)
 801b7ee:	6818      	ldr	r0, [r3, #0]
 801b7f0:	6803      	ldr	r3, [r0, #0]
 801b7f2:	6adb      	ldr	r3, [r3, #44]	@ 0x2c
 801b7f4:	4798      	blx	r3
 801b7f6:	b00f      	add	sp, #60	@ 0x3c
 801b7f8:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 801b7fc:	20002fa8 	.word	0x20002fa8
 801b800:	20002fa2 	.word	0x20002fa2

0801b804 <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE14blitCopyRGB888EPKhS3_RKNS_4RectES6_h>:
 801b804:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 801b808:	b093      	sub	sp, #76	@ 0x4c
 801b80a:	461c      	mov	r4, r3
 801b80c:	9205      	str	r2, [sp, #20]
 801b80e:	f89d 2074 	ldrb.w	r2, [sp, #116]	@ 0x74
 801b812:	9101      	str	r1, [sp, #4]
 801b814:	9b1c      	ldr	r3, [sp, #112]	@ 0x70
 801b816:	9202      	str	r2, [sp, #8]
 801b818:	2a00      	cmp	r2, #0
 801b81a:	f000 812c 	beq.w	801ba76 <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE14blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x272>
 801b81e:	6820      	ldr	r0, [r4, #0]
 801b820:	6861      	ldr	r1, [r4, #4]
 801b822:	aa0e      	add	r2, sp, #56	@ 0x38
 801b824:	c203      	stmia	r2!, {r0, r1}
 801b826:	6818      	ldr	r0, [r3, #0]
 801b828:	6859      	ldr	r1, [r3, #4]
 801b82a:	aa10      	add	r2, sp, #64	@ 0x40
 801b82c:	c203      	stmia	r2!, {r0, r1}
 801b82e:	a80e      	add	r0, sp, #56	@ 0x38
 801b830:	f7f8 fa48 	bl	8013cc4 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectE>
 801b834:	4621      	mov	r1, r4
 801b836:	a810      	add	r0, sp, #64	@ 0x40
 801b838:	f7f8 fa6c 	bl	8013d14 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectERKS1_>
 801b83c:	f9bd 603c 	ldrsh.w	r6, [sp, #60]	@ 0x3c
 801b840:	f9bd 503e 	ldrsh.w	r5, [sp, #62]	@ 0x3e
 801b844:	f8bd 0040 	ldrh.w	r0, [sp, #64]	@ 0x40
 801b848:	f5b6 6f80 	cmp.w	r6, #1024	@ 0x400
 801b84c:	bfde      	ittt	le
 801b84e:	b2b3      	uxthle	r3, r6
 801b850:	f44f 6280 	movle.w	r2, #1024	@ 0x400
 801b854:	fb92 f3f3 	sdivle	r3, r2, r3
 801b858:	f9bd 2042 	ldrsh.w	r2, [sp, #66]	@ 0x42
 801b85c:	bfc8      	it	gt
 801b85e:	2301      	movgt	r3, #1
 801b860:	fb92 f1f3 	sdiv	r1, r2, r3
 801b864:	fa1f fc81 	uxth.w	ip, r1
 801b868:	fb0c 2413 	mls	r4, ip, r3, r2
 801b86c:	fb14 f406 	smulbb	r4, r4, r6
 801b870:	441d      	add	r5, r3
 801b872:	4404      	add	r4, r0
 801b874:	4661      	mov	r1, ip
 801b876:	3d01      	subs	r5, #1
 801b878:	b2a4      	uxth	r4, r4
 801b87a:	fb95 f5f3 	sdiv	r5, r5, r3
 801b87e:	b131      	cbz	r1, 801b88e <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE14blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x8a>
 801b880:	9b05      	ldr	r3, [sp, #20]
 801b882:	9901      	ldr	r1, [sp, #4]
 801b884:	f853 302c 	ldr.w	r3, [r3, ip, lsl #2]
 801b888:	ba1b      	rev	r3, r3
 801b88a:	4419      	add	r1, r3
 801b88c:	9101      	str	r1, [sp, #4]
 801b88e:	f8bd 3038 	ldrh.w	r3, [sp, #56]	@ 0x38
 801b892:	f9bd b044 	ldrsh.w	fp, [sp, #68]	@ 0x44
 801b896:	f9bd 6046 	ldrsh.w	r6, [sp, #70]	@ 0x46
 801b89a:	4418      	add	r0, r3
 801b89c:	f8bd 303a 	ldrh.w	r3, [sp, #58]	@ 0x3a
 801b8a0:	f8ad 0040 	strh.w	r0, [sp, #64]	@ 0x40
 801b8a4:	441a      	add	r2, r3
 801b8a6:	4b75      	ldr	r3, [pc, #468]	@ (801ba7c <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE14blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x278>)
 801b8a8:	f8ad 2042 	strh.w	r2, [sp, #66]	@ 0x42
 801b8ac:	6818      	ldr	r0, [r3, #0]
 801b8ae:	6803      	ldr	r3, [r0, #0]
 801b8b0:	6a9b      	ldr	r3, [r3, #40]	@ 0x28
 801b8b2:	4798      	blx	r3
 801b8b4:	4972      	ldr	r1, [pc, #456]	@ (801ba80 <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE14blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x27c>)
 801b8b6:	f9bd c040 	ldrsh.w	ip, [sp, #64]	@ 0x40
 801b8ba:	880b      	ldrh	r3, [r1, #0]
 801b8bc:	f9bd 2042 	ldrsh.w	r2, [sp, #66]	@ 0x42
 801b8c0:	910d      	str	r1, [sp, #52]	@ 0x34
 801b8c2:	fb03 c202 	mla	r2, r3, r2, ip
 801b8c6:	eb00 0042 	add.w	r0, r0, r2, lsl #1
 801b8ca:	4373      	muls	r3, r6
 801b8cc:	b2ad      	uxth	r5, r5
 801b8ce:	eb00 0343 	add.w	r3, r0, r3, lsl #1
 801b8d2:	00ad      	lsls	r5, r5, #2
 801b8d4:	9308      	str	r3, [sp, #32]
 801b8d6:	1d2b      	adds	r3, r5, #4
 801b8d8:	9309      	str	r3, [sp, #36]	@ 0x24
 801b8da:	9b02      	ldr	r3, [sp, #8]
 801b8dc:	f8bd 1008 	ldrh.w	r1, [sp, #8]
 801b8e0:	9106      	str	r1, [sp, #24]
 801b8e2:	43da      	mvns	r2, r3
 801b8e4:	2c00      	cmp	r4, #0
 801b8e6:	bf0c      	ite	eq
 801b8e8:	46dc      	moveq	ip, fp
 801b8ea:	f04f 0c00 	movne.w	ip, #0
 801b8ee:	2300      	movs	r3, #0
 801b8f0:	b2d2      	uxtb	r2, r2
 801b8f2:	fa1f fc8c 	uxth.w	ip, ip
 801b8f6:	9303      	str	r3, [sp, #12]
 801b8f8:	9207      	str	r2, [sp, #28]
 801b8fa:	9a08      	ldr	r2, [sp, #32]
 801b8fc:	4282      	cmp	r2, r0
 801b8fe:	f240 80b5 	bls.w	801ba6c <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE14blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x268>
 801b902:	b963      	cbnz	r3, 801b91e <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE14blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x11a>
 801b904:	9b01      	ldr	r3, [sp, #4]
 801b906:	781a      	ldrb	r2, [r3, #0]
 801b908:	0993      	lsrs	r3, r2, #6
 801b90a:	f002 023f 	and.w	r2, r2, #63	@ 0x3f
 801b90e:	9203      	str	r2, [sp, #12]
 801b910:	1e5a      	subs	r2, r3, #1
 801b912:	2a02      	cmp	r2, #2
 801b914:	d815      	bhi.n	801b942 <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE14blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x13e>
 801b916:	9a01      	ldr	r2, [sp, #4]
 801b918:	3201      	adds	r2, #1
 801b91a:	9201      	str	r2, [sp, #4]
 801b91c:	b29b      	uxth	r3, r3
 801b91e:	b1b4      	cbz	r4, 801b94e <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE14blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x14a>
 801b920:	429c      	cmp	r4, r3
 801b922:	bf95      	itete	ls
 801b924:	1b1c      	subls	r4, r3, r4
 801b926:	1ae4      	subhi	r4, r4, r3
 801b928:	fa1f f884 	uxthls.w	r8, r4
 801b92c:	b2a4      	uxthhi	r4, r4
 801b92e:	bf87      	ittee	hi
 801b930:	4666      	movhi	r6, ip
 801b932:	f04f 0800 	movhi.w	r8, #0
 801b936:	fa1f f68b 	uxthls.w	r6, fp
 801b93a:	2400      	movls	r4, #0
 801b93c:	4643      	mov	r3, r8
 801b93e:	46b4      	mov	ip, r6
 801b940:	e7db      	b.n	801b8fa <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE14blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0xf6>
 801b942:	9a01      	ldr	r2, [sp, #4]
 801b944:	9b01      	ldr	r3, [sp, #4]
 801b946:	3202      	adds	r2, #2
 801b948:	785b      	ldrb	r3, [r3, #1]
 801b94a:	9201      	str	r2, [sp, #4]
 801b94c:	e7e7      	b.n	801b91e <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE14blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x11a>
 801b94e:	2203      	movs	r2, #3
 801b950:	4615      	mov	r5, r2
 801b952:	9909      	ldr	r1, [sp, #36]	@ 0x24
 801b954:	9a03      	ldr	r2, [sp, #12]
 801b956:	fb15 1202 	smlabb	r2, r5, r2, r1
 801b95a:	9905      	ldr	r1, [sp, #20]
 801b95c:	4563      	cmp	r3, ip
 801b95e:	eb01 0502 	add.w	r5, r1, r2
 801b962:	9902      	ldr	r1, [sp, #8]
 801b964:	bf29      	itett	cs
 801b966:	eba3 080c 	subcs.w	r8, r3, ip
 801b96a:	ebac 0603 	subcc.w	r6, ip, r3
 801b96e:	fa1f f888 	uxthcs.w	r8, r8
 801b972:	46e1      	movcs	r9, ip
 801b974:	bf2f      	iteee	cs
 801b976:	4626      	movcs	r6, r4
 801b978:	b2b6      	uxthcc	r6, r6
 801b97a:	4699      	movcc	r9, r3
 801b97c:	46a0      	movcc	r8, r4
 801b97e:	29ff      	cmp	r1, #255	@ 0xff
 801b980:	d04a      	beq.n	801ba18 <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE14blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x214>
 801b982:	9f06      	ldr	r7, [sp, #24]
 801b984:	78a9      	ldrb	r1, [r5, #2]
 801b986:	9004      	str	r0, [sp, #16]
 801b988:	4379      	muls	r1, r7
 801b98a:	910a      	str	r1, [sp, #40]	@ 0x28
 801b98c:	7869      	ldrb	r1, [r5, #1]
 801b98e:	4379      	muls	r1, r7
 801b990:	910b      	str	r1, [sp, #44]	@ 0x2c
 801b992:	9905      	ldr	r1, [sp, #20]
 801b994:	5c8a      	ldrb	r2, [r1, r2]
 801b996:	437a      	muls	r2, r7
 801b998:	920c      	str	r2, [sp, #48]	@ 0x30
 801b99a:	46ca      	mov	sl, r9
 801b99c:	f1ba 0f00 	cmp.w	sl, #0
 801b9a0:	d03d      	beq.n	801ba1e <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE14blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x21a>
 801b9a2:	9a04      	ldr	r2, [sp, #16]
 801b9a4:	9f07      	ldr	r7, [sp, #28]
 801b9a6:	8812      	ldrh	r2, [r2, #0]
 801b9a8:	1215      	asrs	r5, r2, #8
 801b9aa:	46be      	mov	lr, r7
 801b9ac:	f005 05f8 	and.w	r5, r5, #248	@ 0xf8
 801b9b0:	9f0a      	ldr	r7, [sp, #40]	@ 0x28
 801b9b2:	10d1      	asrs	r1, r2, #3
 801b9b4:	ea45 1555 	orr.w	r5, r5, r5, lsr #5
 801b9b8:	fb05 750e 	mla	r5, r5, lr, r7
 801b9bc:	f001 01fc 	and.w	r1, r1, #252	@ 0xfc
 801b9c0:	9f0b      	ldr	r7, [sp, #44]	@ 0x2c
 801b9c2:	00d2      	lsls	r2, r2, #3
 801b9c4:	ea41 1191 	orr.w	r1, r1, r1, lsr #6
 801b9c8:	fb01 710e 	mla	r1, r1, lr, r7
 801b9cc:	b2d2      	uxtb	r2, r2
 801b9ce:	9f0c      	ldr	r7, [sp, #48]	@ 0x30
 801b9d0:	ea42 1252 	orr.w	r2, r2, r2, lsr #5
 801b9d4:	b2ad      	uxth	r5, r5
 801b9d6:	fb02 720e 	mla	r2, r2, lr, r7
 801b9da:	b292      	uxth	r2, r2
 801b9dc:	f105 0e01 	add.w	lr, r5, #1
 801b9e0:	eb0e 2515 	add.w	r5, lr, r5, lsr #8
 801b9e4:	f102 0e01 	add.w	lr, r2, #1
 801b9e8:	eb0e 2212 	add.w	r2, lr, r2, lsr #8
 801b9ec:	b289      	uxth	r1, r1
 801b9ee:	f3c2 22c4 	ubfx	r2, r2, #11, #5
 801b9f2:	f405 4578 	and.w	r5, r5, #63488	@ 0xf800
 801b9f6:	4315      	orrs	r5, r2
 801b9f8:	1c4a      	adds	r2, r1, #1
 801b9fa:	eb02 2111 	add.w	r1, r2, r1, lsr #8
 801b9fe:	0949      	lsrs	r1, r1, #5
 801ba00:	9a04      	ldr	r2, [sp, #16]
 801ba02:	f401 61fc 	and.w	r1, r1, #2016	@ 0x7e0
 801ba06:	430d      	orrs	r5, r1
 801ba08:	f822 5b02 	strh.w	r5, [r2], #2
 801ba0c:	f10a 3aff 	add.w	sl, sl, #4294967295
 801ba10:	9204      	str	r2, [sp, #16]
 801ba12:	fa1f fa8a 	uxth.w	sl, sl
 801ba16:	e7c1      	b.n	801b99c <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE14blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x198>
 801ba18:	4649      	mov	r1, r9
 801ba1a:	4686      	mov	lr, r0
 801ba1c:	b999      	cbnz	r1, 801ba46 <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE14blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x242>
 801ba1e:	4563      	cmp	r3, ip
 801ba20:	eb00 0049 	add.w	r0, r0, r9, lsl #1
 801ba24:	d38a      	bcc.n	801b93c <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE14blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x138>
 801ba26:	f8bd 403c 	ldrh.w	r4, [sp, #60]	@ 0x3c
 801ba2a:	9b0d      	ldr	r3, [sp, #52]	@ 0x34
 801ba2c:	fa1f f68b 	uxth.w	r6, fp
 801ba30:	1ba4      	subs	r4, r4, r6
 801ba32:	881b      	ldrh	r3, [r3, #0]
 801ba34:	b2a4      	uxth	r4, r4
 801ba36:	2c00      	cmp	r4, #0
 801ba38:	eba3 030b 	sub.w	r3, r3, fp
 801ba3c:	bf18      	it	ne
 801ba3e:	2600      	movne	r6, #0
 801ba40:	eb00 0043 	add.w	r0, r0, r3, lsl #1
 801ba44:	e77a      	b.n	801b93c <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE14blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x138>
 801ba46:	78aa      	ldrb	r2, [r5, #2]
 801ba48:	4f0e      	ldr	r7, [pc, #56]	@ (801ba84 <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE14blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x280>)
 801ba4a:	ea07 2a02 	and.w	sl, r7, r2, lsl #8
 801ba4e:	786a      	ldrb	r2, [r5, #1]
 801ba50:	00d2      	lsls	r2, r2, #3
 801ba52:	f402 62fc 	and.w	r2, r2, #2016	@ 0x7e0
 801ba56:	ea4a 0202 	orr.w	r2, sl, r2
 801ba5a:	f895 a000 	ldrb.w	sl, [r5]
 801ba5e:	3901      	subs	r1, #1
 801ba60:	ea42 02da 	orr.w	r2, r2, sl, lsr #3
 801ba64:	f82e 2b02 	strh.w	r2, [lr], #2
 801ba68:	b289      	uxth	r1, r1
 801ba6a:	e7d7      	b.n	801ba1c <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE14blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x218>
 801ba6c:	4b03      	ldr	r3, [pc, #12]	@ (801ba7c <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE14blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x278>)
 801ba6e:	6818      	ldr	r0, [r3, #0]
 801ba70:	6803      	ldr	r3, [r0, #0]
 801ba72:	6adb      	ldr	r3, [r3, #44]	@ 0x2c
 801ba74:	4798      	blx	r3
 801ba76:	b013      	add	sp, #76	@ 0x4c
 801ba78:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 801ba7c:	20002fa8 	.word	0x20002fa8
 801ba80:	20002fa2 	.word	0x20002fa2
 801ba84:	fffff800 	.word	0xfffff800

0801ba88 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW916blitCopyARGB8888EPKhS3_RKNS_4RectES6_h>:
 801ba88:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 801ba8c:	b09d      	sub	sp, #116	@ 0x74
 801ba8e:	e9cd 1211 	strd	r1, r2, [sp, #68]	@ 0x44
 801ba92:	f89d 209c 	ldrb.w	r2, [sp, #156]	@ 0x9c
 801ba96:	920e      	str	r2, [sp, #56]	@ 0x38
 801ba98:	461c      	mov	r4, r3
 801ba9a:	4683      	mov	fp, r0
 801ba9c:	9b26      	ldr	r3, [sp, #152]	@ 0x98
 801ba9e:	2a00      	cmp	r2, #0
 801baa0:	f000 81e0 	beq.w	801be64 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW916blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x3dc>
 801baa4:	6820      	ldr	r0, [r4, #0]
 801baa6:	6861      	ldr	r1, [r4, #4]
 801baa8:	aa18      	add	r2, sp, #96	@ 0x60
 801baaa:	c203      	stmia	r2!, {r0, r1}
 801baac:	6818      	ldr	r0, [r3, #0]
 801baae:	6859      	ldr	r1, [r3, #4]
 801bab0:	aa1a      	add	r2, sp, #104	@ 0x68
 801bab2:	c203      	stmia	r2!, {r0, r1}
 801bab4:	a818      	add	r0, sp, #96	@ 0x60
 801bab6:	f7f8 f905 	bl	8013cc4 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectE>
 801baba:	4621      	mov	r1, r4
 801babc:	a81a      	add	r0, sp, #104	@ 0x68
 801babe:	f7f8 f929 	bl	8013d14 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectERKS1_>
 801bac2:	f9bd 3064 	ldrsh.w	r3, [sp, #100]	@ 0x64
 801bac6:	f9bd 4066 	ldrsh.w	r4, [sp, #102]	@ 0x66
 801baca:	f9bd 606e 	ldrsh.w	r6, [sp, #110]	@ 0x6e
 801bace:	f5b3 6f80 	cmp.w	r3, #1024	@ 0x400
 801bad2:	bfd7      	itett	le
 801bad4:	b29a      	uxthle	r2, r3
 801bad6:	2201      	movgt	r2, #1
 801bad8:	f44f 6180 	movle.w	r1, #1024	@ 0x400
 801badc:	fb91 f2f2 	sdivle	r2, r1, r2
 801bae0:	9202      	str	r2, [sp, #8]
 801bae2:	9802      	ldr	r0, [sp, #8]
 801bae4:	f9bd 206a 	ldrsh.w	r2, [sp, #106]	@ 0x6a
 801bae8:	fb92 f0f0 	sdiv	r0, r2, r0
 801baec:	b280      	uxth	r0, r0
 801baee:	900f      	str	r0, [sp, #60]	@ 0x3c
 801baf0:	9902      	ldr	r1, [sp, #8]
 801baf2:	9802      	ldr	r0, [sp, #8]
 801baf4:	9d0f      	ldr	r5, [sp, #60]	@ 0x3c
 801baf6:	440c      	add	r4, r1
 801baf8:	fb05 2510 	mls	r5, r5, r0, r2
 801bafc:	fb15 f503 	smulbb	r5, r5, r3
 801bb00:	3c01      	subs	r4, #1
 801bb02:	f8bd 3060 	ldrh.w	r3, [sp, #96]	@ 0x60
 801bb06:	fb94 f4f1 	sdiv	r4, r4, r1
 801bb0a:	f8bd 1068 	ldrh.w	r1, [sp, #104]	@ 0x68
 801bb0e:	440d      	add	r5, r1
 801bb10:	4419      	add	r1, r3
 801bb12:	f8bd 3062 	ldrh.w	r3, [sp, #98]	@ 0x62
 801bb16:	f8ad 1068 	strh.w	r1, [sp, #104]	@ 0x68
 801bb1a:	441a      	add	r2, r3
 801bb1c:	f9bd 306c 	ldrsh.w	r3, [sp, #108]	@ 0x6c
 801bb20:	9306      	str	r3, [sp, #24]
 801bb22:	4bb3      	ldr	r3, [pc, #716]	@ (801bdf0 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW916blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x368>)
 801bb24:	f8ad 206a 	strh.w	r2, [sp, #106]	@ 0x6a
 801bb28:	6818      	ldr	r0, [r3, #0]
 801bb2a:	6803      	ldr	r3, [r0, #0]
 801bb2c:	6a9b      	ldr	r3, [r3, #40]	@ 0x28
 801bb2e:	4798      	blx	r3
 801bb30:	4bb0      	ldr	r3, [pc, #704]	@ (801bdf4 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW916blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x36c>)
 801bb32:	f9bd 106a 	ldrsh.w	r1, [sp, #106]	@ 0x6a
 801bb36:	881a      	ldrh	r2, [r3, #0]
 801bb38:	f9bd 7068 	ldrsh.w	r7, [sp, #104]	@ 0x68
 801bb3c:	9316      	str	r3, [sp, #88]	@ 0x58
 801bb3e:	fb02 7101 	mla	r1, r2, r1, r7
 801bb42:	3401      	adds	r4, #1
 801bb44:	eb00 0841 	add.w	r8, r0, r1, lsl #1
 801bb48:	b2a4      	uxth	r4, r4
 801bb4a:	4356      	muls	r6, r2
 801bb4c:	eb08 0246 	add.w	r2, r8, r6, lsl #1
 801bb50:	00a4      	lsls	r4, r4, #2
 801bb52:	920a      	str	r2, [sp, #40]	@ 0x28
 801bb54:	1d22      	adds	r2, r4, #4
 801bb56:	b2ad      	uxth	r5, r5
 801bb58:	9213      	str	r2, [sp, #76]	@ 0x4c
 801bb5a:	4ba7      	ldr	r3, [pc, #668]	@ (801bdf8 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW916blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x370>)
 801bb5c:	9a06      	ldr	r2, [sp, #24]
 801bb5e:	2d00      	cmp	r5, #0
 801bb60:	bf0c      	ite	eq
 801bb62:	4611      	moveq	r1, r2
 801bb64:	2100      	movne	r1, #0
 801bb66:	2200      	movs	r2, #0
 801bb68:	eba3 030b 	sub.w	r3, r3, fp
 801bb6c:	b289      	uxth	r1, r1
 801bb6e:	920d      	str	r2, [sp, #52]	@ 0x34
 801bb70:	9317      	str	r3, [sp, #92]	@ 0x5c
 801bb72:	9a0f      	ldr	r2, [sp, #60]	@ 0x3c
 801bb74:	9b0d      	ldr	r3, [sp, #52]	@ 0x34
 801bb76:	fa12 f383 	uxtah	r3, r2, r3
 801bb7a:	9a12      	ldr	r2, [sp, #72]	@ 0x48
 801bb7c:	eb02 0383 	add.w	r3, r2, r3, lsl #2
 801bb80:	3304      	adds	r3, #4
 801bb82:	9308      	str	r3, [sp, #32]
 801bb84:	9b0a      	ldr	r3, [sp, #40]	@ 0x28
 801bb86:	4543      	cmp	r3, r8
 801bb88:	f240 8167 	bls.w	801be5a <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW916blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x3d2>
 801bb8c:	9a02      	ldr	r2, [sp, #8]
 801bb8e:	f8bd 3064 	ldrh.w	r3, [sp, #100]	@ 0x64
 801bb92:	fbb5 f3f3 	udiv	r3, r5, r3
 801bb96:	1ad3      	subs	r3, r2, r3
 801bb98:	b29b      	uxth	r3, r3
 801bb9a:	9314      	str	r3, [sp, #80]	@ 0x50
 801bb9c:	9b08      	ldr	r3, [sp, #32]
 801bb9e:	9808      	ldr	r0, [sp, #32]
 801bba0:	785a      	ldrb	r2, [r3, #1]
 801bba2:	789b      	ldrb	r3, [r3, #2]
 801bba4:	7800      	ldrb	r0, [r0, #0]
 801bba6:	9010      	str	r0, [sp, #64]	@ 0x40
 801bba8:	021b      	lsls	r3, r3, #8
 801bbaa:	ea43 4302 	orr.w	r3, r3, r2, lsl #16
 801bbae:	9a08      	ldr	r2, [sp, #32]
 801bbb0:	78d2      	ldrb	r2, [r2, #3]
 801bbb2:	4313      	orrs	r3, r2
 801bbb4:	9a11      	ldr	r2, [sp, #68]	@ 0x44
 801bbb6:	3001      	adds	r0, #1
 801bbb8:	441a      	add	r2, r3
 801bbba:	9007      	str	r0, [sp, #28]
 801bbbc:	1c50      	adds	r0, r2, #1
 801bbbe:	9005      	str	r0, [sp, #20]
 801bbc0:	7852      	ldrb	r2, [r2, #1]
 801bbc2:	9811      	ldr	r0, [sp, #68]	@ 0x44
 801bbc4:	0212      	lsls	r2, r2, #8
 801bbc6:	5cc3      	ldrb	r3, [r0, r3]
 801bbc8:	f402 72ff 	and.w	r2, r2, #510	@ 0x1fe
 801bbcc:	431a      	orrs	r2, r3
 801bbce:	b293      	uxth	r3, r2
 801bbd0:	930b      	str	r3, [sp, #44]	@ 0x2c
 801bbd2:	2300      	movs	r3, #0
 801bbd4:	9309      	str	r3, [sp, #36]	@ 0x24
 801bbd6:	2301      	movs	r3, #1
 801bbd8:	9301      	str	r3, [sp, #4]
 801bbda:	9304      	str	r3, [sp, #16]
 801bbdc:	2300      	movs	r3, #0
 801bbde:	f88b 2804 	strb.w	r2, [fp, #2052]	@ 0x804
 801bbe2:	9303      	str	r3, [sp, #12]
 801bbe4:	f04f 0e01 	mov.w	lr, #1
 801bbe8:	2d00      	cmp	r5, #0
 801bbea:	d07c      	beq.n	801bce6 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW916blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x25e>
 801bbec:	45ae      	cmp	lr, r5
 801bbee:	d26b      	bcs.n	801bcc8 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW916blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x240>
 801bbf0:	9b0a      	ldr	r3, [sp, #40]	@ 0x28
 801bbf2:	eba5 050e 	sub.w	r5, r5, lr
 801bbf6:	4543      	cmp	r3, r8
 801bbf8:	b2ad      	uxth	r5, r5
 801bbfa:	460c      	mov	r4, r1
 801bbfc:	d802      	bhi.n	801bc04 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW916blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x17c>
 801bbfe:	e070      	b.n	801bce2 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW916blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x25a>
 801bc00:	2b00      	cmp	r3, #0
 801bc02:	d15c      	bne.n	801bcbe <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW916blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x236>
 801bc04:	9b05      	ldr	r3, [sp, #20]
 801bc06:	9a04      	ldr	r2, [sp, #16]
 801bc08:	785b      	ldrb	r3, [r3, #1]
 801bc0a:	9904      	ldr	r1, [sp, #16]
 801bc0c:	f1c2 0207 	rsb	r2, r2, #7
 801bc10:	4093      	lsls	r3, r2
 801bc12:	005b      	lsls	r3, r3, #1
 801bc14:	f403 72ff 	and.w	r2, r3, #510	@ 0x1fe
 801bc18:	9b05      	ldr	r3, [sp, #20]
 801bc1a:	781b      	ldrb	r3, [r3, #0]
 801bc1c:	410b      	asrs	r3, r1
 801bc1e:	3101      	adds	r1, #1
 801bc20:	b2c9      	uxtb	r1, r1
 801bc22:	2908      	cmp	r1, #8
 801bc24:	9104      	str	r1, [sp, #16]
 801bc26:	9905      	ldr	r1, [sp, #20]
 801bc28:	bf0a      	itet	eq
 801bc2a:	3102      	addeq	r1, #2
 801bc2c:	3101      	addne	r1, #1
 801bc2e:	9105      	streq	r1, [sp, #20]
 801bc30:	b2db      	uxtb	r3, r3
 801bc32:	bf0a      	itet	eq
 801bc34:	2100      	moveq	r1, #0
 801bc36:	9105      	strne	r1, [sp, #20]
 801bc38:	9104      	streq	r1, [sp, #16]
 801bc3a:	4313      	orrs	r3, r2
 801bc3c:	9910      	ldr	r1, [sp, #64]	@ 0x40
 801bc3e:	b29a      	uxth	r2, r3
 801bc40:	4291      	cmp	r1, r2
 801bc42:	d30a      	bcc.n	801bc5a <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW916blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x1d2>
 801bc44:	f88b 3804 	strb.w	r3, [fp, #2052]	@ 0x804
 801bc48:	2301      	movs	r3, #1
 801bc4a:	9907      	ldr	r1, [sp, #28]
 801bc4c:	f5b1 7f00 	cmp.w	r1, #512	@ 0x200
 801bc50:	d30f      	bcc.n	801bc72 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW916blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x1ea>
 801bc52:	2100      	movs	r1, #0
 801bc54:	9301      	str	r3, [sp, #4]
 801bc56:	9103      	str	r1, [sp, #12]
 801bc58:	e032      	b.n	801bcc0 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW916blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x238>
 801bc5a:	9b07      	ldr	r3, [sp, #28]
 801bc5c:	429a      	cmp	r2, r3
 801bc5e:	d318      	bcc.n	801bc92 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW916blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x20a>
 801bc60:	9b01      	ldr	r3, [sp, #4]
 801bc62:	f89b 1804 	ldrb.w	r1, [fp, #2052]	@ 0x804
 801bc66:	445b      	add	r3, fp
 801bc68:	f883 1804 	strb.w	r1, [r3, #2052]	@ 0x804
 801bc6c:	9b01      	ldr	r3, [sp, #4]
 801bc6e:	3301      	adds	r3, #1
 801bc70:	b29b      	uxth	r3, r3
 801bc72:	9907      	ldr	r1, [sp, #28]
 801bc74:	f89b 0804 	ldrb.w	r0, [fp, #2052]	@ 0x804
 801bc78:	eb0b 0181 	add.w	r1, fp, r1, lsl #2
 801bc7c:	7108      	strb	r0, [r1, #4]
 801bc7e:	980b      	ldr	r0, [sp, #44]	@ 0x2c
 801bc80:	80c8      	strh	r0, [r1, #6]
 801bc82:	9801      	ldr	r0, [sp, #4]
 801bc84:	3001      	adds	r0, #1
 801bc86:	7148      	strb	r0, [r1, #5]
 801bc88:	9907      	ldr	r1, [sp, #28]
 801bc8a:	3101      	adds	r1, #1
 801bc8c:	b289      	uxth	r1, r1
 801bc8e:	9107      	str	r1, [sp, #28]
 801bc90:	e7df      	b.n	801bc52 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW916blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x1ca>
 801bc92:	eb0b 0382 	add.w	r3, fp, r2, lsl #2
 801bc96:	4611      	mov	r1, r2
 801bc98:	795b      	ldrb	r3, [r3, #5]
 801bc9a:	f603 0004 	addw	r0, r3, #2052	@ 0x804
 801bc9e:	4458      	add	r0, fp
 801bca0:	9e17      	ldr	r6, [sp, #92]	@ 0x5c
 801bca2:	4406      	add	r6, r0
 801bca4:	2e00      	cmp	r6, #0
 801bca6:	dd06      	ble.n	801bcb6 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW916blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x22e>
 801bca8:	eb0b 0181 	add.w	r1, fp, r1, lsl #2
 801bcac:	790e      	ldrb	r6, [r1, #4]
 801bcae:	f800 6d01 	strb.w	r6, [r0, #-1]!
 801bcb2:	88c9      	ldrh	r1, [r1, #6]
 801bcb4:	e7f4      	b.n	801bca0 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW916blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x218>
 801bcb6:	f88b 1804 	strb.w	r1, [fp, #2052]	@ 0x804
 801bcba:	b29b      	uxth	r3, r3
 801bcbc:	e7c5      	b.n	801bc4a <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW916blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x1c2>
 801bcbe:	9a0b      	ldr	r2, [sp, #44]	@ 0x2c
 801bcc0:	920b      	str	r2, [sp, #44]	@ 0x2c
 801bcc2:	4621      	mov	r1, r4
 801bcc4:	469e      	mov	lr, r3
 801bcc6:	e78f      	b.n	801bbe8 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW916blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x160>
 801bcc8:	9a03      	ldr	r2, [sp, #12]
 801bcca:	f8bd 4018 	ldrh.w	r4, [sp, #24]
 801bcce:	442a      	add	r2, r5
 801bcd0:	ebae 0305 	sub.w	r3, lr, r5
 801bcd4:	b292      	uxth	r2, r2
 801bcd6:	b29b      	uxth	r3, r3
 801bcd8:	9203      	str	r2, [sp, #12]
 801bcda:	2500      	movs	r5, #0
 801bcdc:	9a0a      	ldr	r2, [sp, #40]	@ 0x28
 801bcde:	4542      	cmp	r2, r8
 801bce0:	d88e      	bhi.n	801bc00 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW916blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x178>
 801bce2:	4621      	mov	r1, r4
 801bce4:	e74e      	b.n	801bb84 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW916blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0xfc>
 801bce6:	458e      	cmp	lr, r1
 801bce8:	bf29      	itett	cs
 801bcea:	ebae 0301 	subcs.w	r3, lr, r1
 801bcee:	eba1 040e 	subcc.w	r4, r1, lr
 801bcf2:	b29b      	uxthcs	r3, r3
 801bcf4:	910c      	strcs	r1, [sp, #48]	@ 0x30
 801bcf6:	bf2f      	iteee	cs
 801bcf8:	462c      	movcs	r4, r5
 801bcfa:	b2a4      	uxthcc	r4, r4
 801bcfc:	f8cd e030 	strcc.w	lr, [sp, #48]	@ 0x30
 801bd00:	462b      	movcc	r3, r5
 801bd02:	f04f 0900 	mov.w	r9, #0
 801bd06:	9a03      	ldr	r2, [sp, #12]
 801bd08:	980c      	ldr	r0, [sp, #48]	@ 0x30
 801bd0a:	444a      	add	r2, r9
 801bd0c:	4548      	cmp	r0, r9
 801bd0e:	b292      	uxth	r2, r2
 801bd10:	d074      	beq.n	801bdfc <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW916blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x374>
 801bd12:	445a      	add	r2, fp
 801bd14:	2004      	movs	r0, #4
 801bd16:	4605      	mov	r5, r0
 801bd18:	f892 2804 	ldrb.w	r2, [r2, #2052]	@ 0x804
 801bd1c:	9813      	ldr	r0, [sp, #76]	@ 0x4c
 801bd1e:	fb15 0202 	smlabb	r2, r5, r2, r0
 801bd22:	9812      	ldr	r0, [sp, #72]	@ 0x48
 801bd24:	5880      	ldr	r0, [r0, r2]
 801bd26:	ea5f 6a10 	movs.w	sl, r0, lsr #24
 801bd2a:	d014      	beq.n	801bd56 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW916blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x2ce>
 801bd2c:	f1ba 0fff 	cmp.w	sl, #255	@ 0xff
 801bd30:	ea4f 2510 	mov.w	r5, r0, lsr #8
 801bd34:	d112      	bne.n	801bd5c <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW916blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x2d4>
 801bd36:	9a0e      	ldr	r2, [sp, #56]	@ 0x38
 801bd38:	2aff      	cmp	r2, #255	@ 0xff
 801bd3a:	d10f      	bne.n	801bd5c <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW916blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x2d4>
 801bd3c:	0942      	lsrs	r2, r0, #5
 801bd3e:	f425 65ff 	bic.w	r5, r5, #2040	@ 0x7f8
 801bd42:	f402 62fc 	and.w	r2, r2, #2016	@ 0x7e0
 801bd46:	f025 0507 	bic.w	r5, r5, #7
 801bd4a:	4315      	orrs	r5, r2
 801bd4c:	f3c0 00c4 	ubfx	r0, r0, #3, #5
 801bd50:	4305      	orrs	r5, r0
 801bd52:	f828 5019 	strh.w	r5, [r8, r9, lsl #1]
 801bd56:	f109 0901 	add.w	r9, r9, #1
 801bd5a:	e7d4      	b.n	801bd06 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW916blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x27e>
 801bd5c:	f838 c019 	ldrh.w	ip, [r8, r9, lsl #1]
 801bd60:	ea4f 06ec 	mov.w	r6, ip, asr #3
 801bd64:	f006 02fc 	and.w	r2, r6, #252	@ 0xfc
 801bd68:	9215      	str	r2, [sp, #84]	@ 0x54
 801bd6a:	9a0e      	ldr	r2, [sp, #56]	@ 0x38
 801bd6c:	fb02 fa0a 	mul.w	sl, r2, sl
 801bd70:	f10a 0201 	add.w	r2, sl, #1
 801bd74:	eb02 222a 	add.w	r2, r2, sl, asr #8
 801bd78:	ea4f 272c 	mov.w	r7, ip, asr #8
 801bd7c:	1212      	asrs	r2, r2, #8
 801bd7e:	fa1f fa82 	uxth.w	sl, r2
 801bd82:	f3c0 4607 	ubfx	r6, r0, #16, #8
 801bd86:	f007 07f8 	and.w	r7, r7, #248	@ 0xf8
 801bd8a:	ea4f 0ccc 	mov.w	ip, ip, lsl #3
 801bd8e:	43d2      	mvns	r2, r2
 801bd90:	b2d2      	uxtb	r2, r2
 801bd92:	fb16 f60a 	smulbb	r6, r6, sl
 801bd96:	fa5f fc8c 	uxtb.w	ip, ip
 801bd9a:	ea47 1757 	orr.w	r7, r7, r7, lsr #5
 801bd9e:	b2c0      	uxtb	r0, r0
 801bda0:	fb07 6702 	mla	r7, r7, r2, r6
 801bda4:	ea4c 1c5c 	orr.w	ip, ip, ip, lsr #5
 801bda8:	9e15      	ldr	r6, [sp, #84]	@ 0x54
 801bdaa:	fb10 f00a 	smulbb	r0, r0, sl
 801bdae:	fb0c 0002 	mla	r0, ip, r2, r0
 801bdb2:	b2ed      	uxtb	r5, r5
 801bdb4:	b2bf      	uxth	r7, r7
 801bdb6:	fb15 f50a 	smulbb	r5, r5, sl
 801bdba:	b280      	uxth	r0, r0
 801bdbc:	ea46 1696 	orr.w	r6, r6, r6, lsr #6
 801bdc0:	fb06 5602 	mla	r6, r6, r2, r5
 801bdc4:	1c7a      	adds	r2, r7, #1
 801bdc6:	1c45      	adds	r5, r0, #1
 801bdc8:	eb02 2717 	add.w	r7, r2, r7, lsr #8
 801bdcc:	eb05 2510 	add.w	r5, r5, r0, lsr #8
 801bdd0:	b2b6      	uxth	r6, r6
 801bdd2:	f3c5 25c4 	ubfx	r5, r5, #11, #5
 801bdd6:	f407 4778 	and.w	r7, r7, #63488	@ 0xf800
 801bdda:	432f      	orrs	r7, r5
 801bddc:	1c75      	adds	r5, r6, #1
 801bdde:	eb05 2516 	add.w	r5, r5, r6, lsr #8
 801bde2:	096d      	lsrs	r5, r5, #5
 801bde4:	f405 65fc 	and.w	r5, r5, #2016	@ 0x7e0
 801bde8:	432f      	orrs	r7, r5
 801bdea:	f828 7019 	strh.w	r7, [r8, r9, lsl #1]
 801bdee:	e7b2      	b.n	801bd56 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW916blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x2ce>
 801bdf0:	20002fa8 	.word	0x20002fa8
 801bdf4:	20002fa2 	.word	0x20002fa2
 801bdf8:	fffff7fb 	.word	0xfffff7fb
 801bdfc:	9203      	str	r2, [sp, #12]
 801bdfe:	9a0c      	ldr	r2, [sp, #48]	@ 0x30
 801be00:	458e      	cmp	lr, r1
 801be02:	eb08 0842 	add.w	r8, r8, r2, lsl #1
 801be06:	f4ff af68 	bcc.w	801bcda <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW916blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x252>
 801be0a:	9a16      	ldr	r2, [sp, #88]	@ 0x58
 801be0c:	9906      	ldr	r1, [sp, #24]
 801be0e:	8812      	ldrh	r2, [r2, #0]
 801be10:	1a52      	subs	r2, r2, r1
 801be12:	eb08 0842 	add.w	r8, r8, r2, lsl #1
 801be16:	9a09      	ldr	r2, [sp, #36]	@ 0x24
 801be18:	9914      	ldr	r1, [sp, #80]	@ 0x50
 801be1a:	3201      	adds	r2, #1
 801be1c:	428a      	cmp	r2, r1
 801be1e:	9209      	str	r2, [sp, #36]	@ 0x24
 801be20:	d111      	bne.n	801be46 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW916blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x3be>
 801be22:	f8bd 5068 	ldrh.w	r5, [sp, #104]	@ 0x68
 801be26:	f8bd 9060 	ldrh.w	r9, [sp, #96]	@ 0x60
 801be2a:	9b06      	ldr	r3, [sp, #24]
 801be2c:	eba5 0509 	sub.w	r5, r5, r9
 801be30:	b2ad      	uxth	r5, r5
 801be32:	2d00      	cmp	r5, #0
 801be34:	bf08      	it	eq
 801be36:	4619      	moveq	r1, r3
 801be38:	9b0d      	ldr	r3, [sp, #52]	@ 0x34
 801be3a:	bf18      	it	ne
 801be3c:	2100      	movne	r1, #0
 801be3e:	3301      	adds	r3, #1
 801be40:	930d      	str	r3, [sp, #52]	@ 0x34
 801be42:	b289      	uxth	r1, r1
 801be44:	e695      	b.n	801bb72 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW916blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0xea>
 801be46:	f8bd 4018 	ldrh.w	r4, [sp, #24]
 801be4a:	f8bd 5064 	ldrh.w	r5, [sp, #100]	@ 0x64
 801be4e:	1b2d      	subs	r5, r5, r4
 801be50:	b2ad      	uxth	r5, r5
 801be52:	2d00      	cmp	r5, #0
 801be54:	bf18      	it	ne
 801be56:	2400      	movne	r4, #0
 801be58:	e740      	b.n	801bcdc <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW916blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x254>
 801be5a:	4b04      	ldr	r3, [pc, #16]	@ (801be6c <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW916blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x3e4>)
 801be5c:	6818      	ldr	r0, [r3, #0]
 801be5e:	6803      	ldr	r3, [r0, #0]
 801be60:	6adb      	ldr	r3, [r3, #44]	@ 0x2c
 801be62:	4798      	blx	r3
 801be64:	b01d      	add	sp, #116	@ 0x74
 801be66:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 801be6a:	bf00      	nop
 801be6c:	20002fa8 	.word	0x20002fa8

0801be70 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB888EPKhS3_RKNS_4RectES6_h>:
 801be70:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 801be74:	b09f      	sub	sp, #124	@ 0x7c
 801be76:	e9cd 1213 	strd	r1, r2, [sp, #76]	@ 0x4c
 801be7a:	f89d 20a4 	ldrb.w	r2, [sp, #164]	@ 0xa4
 801be7e:	920a      	str	r2, [sp, #40]	@ 0x28
 801be80:	461d      	mov	r5, r3
 801be82:	4604      	mov	r4, r0
 801be84:	9b28      	ldr	r3, [sp, #160]	@ 0xa0
 801be86:	2a00      	cmp	r2, #0
 801be88:	f000 81fa 	beq.w	801c280 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x410>
 801be8c:	6828      	ldr	r0, [r5, #0]
 801be8e:	6869      	ldr	r1, [r5, #4]
 801be90:	aa1a      	add	r2, sp, #104	@ 0x68
 801be92:	c203      	stmia	r2!, {r0, r1}
 801be94:	6818      	ldr	r0, [r3, #0]
 801be96:	6859      	ldr	r1, [r3, #4]
 801be98:	aa1c      	add	r2, sp, #112	@ 0x70
 801be9a:	c203      	stmia	r2!, {r0, r1}
 801be9c:	a81a      	add	r0, sp, #104	@ 0x68
 801be9e:	f7f7 ff11 	bl	8013cc4 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectE>
 801bea2:	4629      	mov	r1, r5
 801bea4:	a81c      	add	r0, sp, #112	@ 0x70
 801bea6:	f7f7 ff35 	bl	8013d14 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectERKS1_>
 801beaa:	f9bd 306c 	ldrsh.w	r3, [sp, #108]	@ 0x6c
 801beae:	f9bd 606e 	ldrsh.w	r6, [sp, #110]	@ 0x6e
 801beb2:	f9bd 7076 	ldrsh.w	r7, [sp, #118]	@ 0x76
 801beb6:	f5b3 6f80 	cmp.w	r3, #1024	@ 0x400
 801beba:	bfd7      	itett	le
 801bebc:	b29a      	uxthle	r2, r3
 801bebe:	2201      	movgt	r2, #1
 801bec0:	f44f 6180 	movle.w	r1, #1024	@ 0x400
 801bec4:	fb91 f2f2 	sdivle	r2, r1, r2
 801bec8:	9201      	str	r2, [sp, #4]
 801beca:	9801      	ldr	r0, [sp, #4]
 801becc:	f9bd 2072 	ldrsh.w	r2, [sp, #114]	@ 0x72
 801bed0:	fb92 f0f0 	sdiv	r0, r2, r0
 801bed4:	b280      	uxth	r0, r0
 801bed6:	9010      	str	r0, [sp, #64]	@ 0x40
 801bed8:	9901      	ldr	r1, [sp, #4]
 801beda:	9801      	ldr	r0, [sp, #4]
 801bedc:	9d10      	ldr	r5, [sp, #64]	@ 0x40
 801bede:	440e      	add	r6, r1
 801bee0:	fb05 2510 	mls	r5, r5, r0, r2
 801bee4:	fb15 f503 	smulbb	r5, r5, r3
 801bee8:	3e01      	subs	r6, #1
 801beea:	f8bd 3068 	ldrh.w	r3, [sp, #104]	@ 0x68
 801beee:	fb96 f6f1 	sdiv	r6, r6, r1
 801bef2:	f8bd 1070 	ldrh.w	r1, [sp, #112]	@ 0x70
 801bef6:	440d      	add	r5, r1
 801bef8:	4419      	add	r1, r3
 801befa:	f8bd 306a 	ldrh.w	r3, [sp, #106]	@ 0x6a
 801befe:	f8ad 1070 	strh.w	r1, [sp, #112]	@ 0x70
 801bf02:	441a      	add	r2, r3
 801bf04:	f9bd 3074 	ldrsh.w	r3, [sp, #116]	@ 0x74
 801bf08:	9304      	str	r3, [sp, #16]
 801bf0a:	4b96      	ldr	r3, [pc, #600]	@ (801c164 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x2f4>)
 801bf0c:	f8ad 2072 	strh.w	r2, [sp, #114]	@ 0x72
 801bf10:	6818      	ldr	r0, [r3, #0]
 801bf12:	6803      	ldr	r3, [r0, #0]
 801bf14:	6a9b      	ldr	r3, [r3, #40]	@ 0x28
 801bf16:	4798      	blx	r3
 801bf18:	4b93      	ldr	r3, [pc, #588]	@ (801c168 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x2f8>)
 801bf1a:	f9bd 1072 	ldrsh.w	r1, [sp, #114]	@ 0x72
 801bf1e:	881a      	ldrh	r2, [r3, #0]
 801bf20:	f9bd c070 	ldrsh.w	ip, [sp, #112]	@ 0x70
 801bf24:	9318      	str	r3, [sp, #96]	@ 0x60
 801bf26:	fb02 c101 	mla	r1, r2, r1, ip
 801bf2a:	eb00 0b41 	add.w	fp, r0, r1, lsl #1
 801bf2e:	4357      	muls	r7, r2
 801bf30:	eb0b 0247 	add.w	r2, fp, r7, lsl #1
 801bf34:	3601      	adds	r6, #1
 801bf36:	920b      	str	r2, [sp, #44]	@ 0x2c
 801bf38:	9a14      	ldr	r2, [sp, #80]	@ 0x50
 801bf3a:	4b8c      	ldr	r3, [pc, #560]	@ (801c16c <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x2fc>)
 801bf3c:	b2b6      	uxth	r6, r6
 801bf3e:	eb02 0686 	add.w	r6, r2, r6, lsl #2
 801bf42:	1d32      	adds	r2, r6, #4
 801bf44:	9206      	str	r2, [sp, #24]
 801bf46:	9a0a      	ldr	r2, [sp, #40]	@ 0x28
 801bf48:	43d2      	mvns	r2, r2
 801bf4a:	b2d2      	uxtb	r2, r2
 801bf4c:	b2ad      	uxth	r5, r5
 801bf4e:	9215      	str	r2, [sp, #84]	@ 0x54
 801bf50:	9a04      	ldr	r2, [sp, #16]
 801bf52:	2d00      	cmp	r5, #0
 801bf54:	bf0c      	ite	eq
 801bf56:	4611      	moveq	r1, r2
 801bf58:	2100      	movne	r1, #0
 801bf5a:	2200      	movs	r2, #0
 801bf5c:	1b1b      	subs	r3, r3, r4
 801bf5e:	b289      	uxth	r1, r1
 801bf60:	920d      	str	r2, [sp, #52]	@ 0x34
 801bf62:	9319      	str	r3, [sp, #100]	@ 0x64
 801bf64:	9a10      	ldr	r2, [sp, #64]	@ 0x40
 801bf66:	9b0d      	ldr	r3, [sp, #52]	@ 0x34
 801bf68:	fa12 f383 	uxtah	r3, r2, r3
 801bf6c:	9a14      	ldr	r2, [sp, #80]	@ 0x50
 801bf6e:	eb02 0383 	add.w	r3, r2, r3, lsl #2
 801bf72:	3304      	adds	r3, #4
 801bf74:	9307      	str	r3, [sp, #28]
 801bf76:	9b0b      	ldr	r3, [sp, #44]	@ 0x2c
 801bf78:	455b      	cmp	r3, fp
 801bf7a:	f240 817c 	bls.w	801c276 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x406>
 801bf7e:	9a01      	ldr	r2, [sp, #4]
 801bf80:	f8bd 306c 	ldrh.w	r3, [sp, #108]	@ 0x6c
 801bf84:	fbb5 f3f3 	udiv	r3, r5, r3
 801bf88:	1ad3      	subs	r3, r2, r3
 801bf8a:	b29b      	uxth	r3, r3
 801bf8c:	9316      	str	r3, [sp, #88]	@ 0x58
 801bf8e:	9b07      	ldr	r3, [sp, #28]
 801bf90:	9807      	ldr	r0, [sp, #28]
 801bf92:	785a      	ldrb	r2, [r3, #1]
 801bf94:	789b      	ldrb	r3, [r3, #2]
 801bf96:	7800      	ldrb	r0, [r0, #0]
 801bf98:	9011      	str	r0, [sp, #68]	@ 0x44
 801bf9a:	021b      	lsls	r3, r3, #8
 801bf9c:	ea43 4302 	orr.w	r3, r3, r2, lsl #16
 801bfa0:	9a07      	ldr	r2, [sp, #28]
 801bfa2:	78d2      	ldrb	r2, [r2, #3]
 801bfa4:	4313      	orrs	r3, r2
 801bfa6:	9a13      	ldr	r2, [sp, #76]	@ 0x4c
 801bfa8:	3001      	adds	r0, #1
 801bfaa:	441a      	add	r2, r3
 801bfac:	9005      	str	r0, [sp, #20]
 801bfae:	1c50      	adds	r0, r2, #1
 801bfb0:	9003      	str	r0, [sp, #12]
 801bfb2:	7852      	ldrb	r2, [r2, #1]
 801bfb4:	9813      	ldr	r0, [sp, #76]	@ 0x4c
 801bfb6:	0212      	lsls	r2, r2, #8
 801bfb8:	5cc3      	ldrb	r3, [r0, r3]
 801bfba:	f402 72ff 	and.w	r2, r2, #510	@ 0x1fe
 801bfbe:	431a      	orrs	r2, r3
 801bfc0:	b293      	uxth	r3, r2
 801bfc2:	930c      	str	r3, [sp, #48]	@ 0x30
 801bfc4:	2300      	movs	r3, #0
 801bfc6:	f884 2804 	strb.w	r2, [r4, #2052]	@ 0x804
 801bfca:	9308      	str	r3, [sp, #32]
 801bfcc:	461a      	mov	r2, r3
 801bfce:	f8bd 3028 	ldrh.w	r3, [sp, #40]	@ 0x28
 801bfd2:	930e      	str	r3, [sp, #56]	@ 0x38
 801bfd4:	f04f 0801 	mov.w	r8, #1
 801bfd8:	f8bd 3054 	ldrh.w	r3, [sp, #84]	@ 0x54
 801bfdc:	f8cd 8008 	str.w	r8, [sp, #8]
 801bfe0:	46c4      	mov	ip, r8
 801bfe2:	930f      	str	r3, [sp, #60]	@ 0x3c
 801bfe4:	2d00      	cmp	r5, #0
 801bfe6:	d07c      	beq.n	801c0e2 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x272>
 801bfe8:	45ac      	cmp	ip, r5
 801bfea:	d26c      	bcs.n	801c0c6 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x256>
 801bfec:	9b0b      	ldr	r3, [sp, #44]	@ 0x2c
 801bfee:	eba5 050c 	sub.w	r5, r5, ip
 801bff2:	455b      	cmp	r3, fp
 801bff4:	b2ad      	uxth	r5, r5
 801bff6:	4608      	mov	r0, r1
 801bff8:	d802      	bhi.n	801c000 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x190>
 801bffa:	e070      	b.n	801c0de <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x26e>
 801bffc:	2b00      	cmp	r3, #0
 801bffe:	d15c      	bne.n	801c0ba <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x24a>
 801c000:	9b03      	ldr	r3, [sp, #12]
 801c002:	9a02      	ldr	r2, [sp, #8]
 801c004:	785b      	ldrb	r3, [r3, #1]
 801c006:	9902      	ldr	r1, [sp, #8]
 801c008:	f1c2 0207 	rsb	r2, r2, #7
 801c00c:	4093      	lsls	r3, r2
 801c00e:	005b      	lsls	r3, r3, #1
 801c010:	f403 72ff 	and.w	r2, r3, #510	@ 0x1fe
 801c014:	9b03      	ldr	r3, [sp, #12]
 801c016:	781b      	ldrb	r3, [r3, #0]
 801c018:	410b      	asrs	r3, r1
 801c01a:	3101      	adds	r1, #1
 801c01c:	b2c9      	uxtb	r1, r1
 801c01e:	2908      	cmp	r1, #8
 801c020:	9102      	str	r1, [sp, #8]
 801c022:	9903      	ldr	r1, [sp, #12]
 801c024:	bf0a      	itet	eq
 801c026:	3102      	addeq	r1, #2
 801c028:	3101      	addne	r1, #1
 801c02a:	9103      	streq	r1, [sp, #12]
 801c02c:	b2db      	uxtb	r3, r3
 801c02e:	bf0a      	itet	eq
 801c030:	2100      	moveq	r1, #0
 801c032:	9103      	strne	r1, [sp, #12]
 801c034:	9102      	streq	r1, [sp, #8]
 801c036:	4313      	orrs	r3, r2
 801c038:	9911      	ldr	r1, [sp, #68]	@ 0x44
 801c03a:	b29a      	uxth	r2, r3
 801c03c:	4291      	cmp	r1, r2
 801c03e:	d30a      	bcc.n	801c056 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x1e6>
 801c040:	f884 3804 	strb.w	r3, [r4, #2052]	@ 0x804
 801c044:	2301      	movs	r3, #1
 801c046:	9905      	ldr	r1, [sp, #20]
 801c048:	f5b1 7f00 	cmp.w	r1, #512	@ 0x200
 801c04c:	d30f      	bcc.n	801c06e <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x1fe>
 801c04e:	2100      	movs	r1, #0
 801c050:	4698      	mov	r8, r3
 801c052:	9100      	str	r1, [sp, #0]
 801c054:	e032      	b.n	801c0bc <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x24c>
 801c056:	9b05      	ldr	r3, [sp, #20]
 801c058:	429a      	cmp	r2, r3
 801c05a:	d318      	bcc.n	801c08e <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x21e>
 801c05c:	eb04 0308 	add.w	r3, r4, r8
 801c060:	f894 1804 	ldrb.w	r1, [r4, #2052]	@ 0x804
 801c064:	f883 1804 	strb.w	r1, [r3, #2052]	@ 0x804
 801c068:	f108 0301 	add.w	r3, r8, #1
 801c06c:	b29b      	uxth	r3, r3
 801c06e:	9905      	ldr	r1, [sp, #20]
 801c070:	f894 6804 	ldrb.w	r6, [r4, #2052]	@ 0x804
 801c074:	eb04 0181 	add.w	r1, r4, r1, lsl #2
 801c078:	710e      	strb	r6, [r1, #4]
 801c07a:	9e0c      	ldr	r6, [sp, #48]	@ 0x30
 801c07c:	80ce      	strh	r6, [r1, #6]
 801c07e:	f108 0601 	add.w	r6, r8, #1
 801c082:	714e      	strb	r6, [r1, #5]
 801c084:	9905      	ldr	r1, [sp, #20]
 801c086:	3101      	adds	r1, #1
 801c088:	b289      	uxth	r1, r1
 801c08a:	9105      	str	r1, [sp, #20]
 801c08c:	e7df      	b.n	801c04e <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x1de>
 801c08e:	eb04 0382 	add.w	r3, r4, r2, lsl #2
 801c092:	4611      	mov	r1, r2
 801c094:	795b      	ldrb	r3, [r3, #5]
 801c096:	f603 0604 	addw	r6, r3, #2052	@ 0x804
 801c09a:	4426      	add	r6, r4
 801c09c:	9f19      	ldr	r7, [sp, #100]	@ 0x64
 801c09e:	4437      	add	r7, r6
 801c0a0:	2f00      	cmp	r7, #0
 801c0a2:	dd06      	ble.n	801c0b2 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x242>
 801c0a4:	eb04 0181 	add.w	r1, r4, r1, lsl #2
 801c0a8:	790f      	ldrb	r7, [r1, #4]
 801c0aa:	f806 7d01 	strb.w	r7, [r6, #-1]!
 801c0ae:	88c9      	ldrh	r1, [r1, #6]
 801c0b0:	e7f4      	b.n	801c09c <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x22c>
 801c0b2:	f884 1804 	strb.w	r1, [r4, #2052]	@ 0x804
 801c0b6:	b29b      	uxth	r3, r3
 801c0b8:	e7c5      	b.n	801c046 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x1d6>
 801c0ba:	9a0c      	ldr	r2, [sp, #48]	@ 0x30
 801c0bc:	920c      	str	r2, [sp, #48]	@ 0x30
 801c0be:	4601      	mov	r1, r0
 801c0c0:	9a00      	ldr	r2, [sp, #0]
 801c0c2:	469c      	mov	ip, r3
 801c0c4:	e78e      	b.n	801bfe4 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x174>
 801c0c6:	1957      	adds	r7, r2, r5
 801c0c8:	ebac 0305 	sub.w	r3, ip, r5
 801c0cc:	b2ba      	uxth	r2, r7
 801c0ce:	f8bd 0010 	ldrh.w	r0, [sp, #16]
 801c0d2:	9200      	str	r2, [sp, #0]
 801c0d4:	b29b      	uxth	r3, r3
 801c0d6:	2500      	movs	r5, #0
 801c0d8:	9a0b      	ldr	r2, [sp, #44]	@ 0x2c
 801c0da:	455a      	cmp	r2, fp
 801c0dc:	d88e      	bhi.n	801bffc <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x18c>
 801c0de:	4601      	mov	r1, r0
 801c0e0:	e749      	b.n	801bf76 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x106>
 801c0e2:	458c      	cmp	ip, r1
 801c0e4:	bf2c      	ite	cs
 801c0e6:	4628      	movcs	r0, r5
 801c0e8:	462b      	movcc	r3, r5
 801c0ea:	9d0a      	ldr	r5, [sp, #40]	@ 0x28
 801c0ec:	bf27      	ittee	cs
 801c0ee:	9109      	strcs	r1, [sp, #36]	@ 0x24
 801c0f0:	ebac 0301 	subcs.w	r3, ip, r1
 801c0f4:	eba1 000c 	subcc.w	r0, r1, ip
 801c0f8:	f8cd c024 	strcc.w	ip, [sp, #36]	@ 0x24
 801c0fc:	bf2c      	ite	cs
 801c0fe:	b29b      	uxthcs	r3, r3
 801c100:	b280      	uxthcc	r0, r0
 801c102:	2dff      	cmp	r5, #255	@ 0xff
 801c104:	9d09      	ldr	r5, [sp, #36]	@ 0x24
 801c106:	eb02 0705 	add.w	r7, r2, r5
 801c10a:	b2bd      	uxth	r5, r7
 801c10c:	9500      	str	r5, [sp, #0]
 801c10e:	d12f      	bne.n	801c170 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x300>
 801c110:	465e      	mov	r6, fp
 801c112:	9d00      	ldr	r5, [sp, #0]
 801c114:	42aa      	cmp	r2, r5
 801c116:	f040 8084 	bne.w	801c222 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x3b2>
 801c11a:	9a09      	ldr	r2, [sp, #36]	@ 0x24
 801c11c:	458c      	cmp	ip, r1
 801c11e:	eb0b 0b42 	add.w	fp, fp, r2, lsl #1
 801c122:	d3d8      	bcc.n	801c0d6 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x266>
 801c124:	9a18      	ldr	r2, [sp, #96]	@ 0x60
 801c126:	9904      	ldr	r1, [sp, #16]
 801c128:	8812      	ldrh	r2, [r2, #0]
 801c12a:	1a52      	subs	r2, r2, r1
 801c12c:	eb0b 0b42 	add.w	fp, fp, r2, lsl #1
 801c130:	9a08      	ldr	r2, [sp, #32]
 801c132:	9916      	ldr	r1, [sp, #88]	@ 0x58
 801c134:	3201      	adds	r2, #1
 801c136:	428a      	cmp	r2, r1
 801c138:	9208      	str	r2, [sp, #32]
 801c13a:	f040 8092 	bne.w	801c262 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x3f2>
 801c13e:	f8bd 5070 	ldrh.w	r5, [sp, #112]	@ 0x70
 801c142:	f8bd c068 	ldrh.w	ip, [sp, #104]	@ 0x68
 801c146:	9b04      	ldr	r3, [sp, #16]
 801c148:	eba5 050c 	sub.w	r5, r5, ip
 801c14c:	b2ad      	uxth	r5, r5
 801c14e:	2d00      	cmp	r5, #0
 801c150:	bf08      	it	eq
 801c152:	4619      	moveq	r1, r3
 801c154:	9b0d      	ldr	r3, [sp, #52]	@ 0x34
 801c156:	bf18      	it	ne
 801c158:	2100      	movne	r1, #0
 801c15a:	3301      	adds	r3, #1
 801c15c:	930d      	str	r3, [sp, #52]	@ 0x34
 801c15e:	b289      	uxth	r1, r1
 801c160:	e700      	b.n	801bf64 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0xf4>
 801c162:	bf00      	nop
 801c164:	20002fa8 	.word	0x20002fa8
 801c168:	20002fa2 	.word	0x20002fa2
 801c16c:	fffff7fb 	.word	0xfffff7fb
 801c170:	46d9      	mov	r9, fp
 801c172:	9d00      	ldr	r5, [sp, #0]
 801c174:	42aa      	cmp	r2, r5
 801c176:	d0d0      	beq.n	801c11a <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x2aa>
 801c178:	1c55      	adds	r5, r2, #1
 801c17a:	4422      	add	r2, r4
 801c17c:	9517      	str	r5, [sp, #92]	@ 0x5c
 801c17e:	f892 e804 	ldrb.w	lr, [r2, #2052]	@ 0x804
 801c182:	9a06      	ldr	r2, [sp, #24]
 801c184:	eb0e 0e4e 	add.w	lr, lr, lr, lsl #1
 801c188:	4472      	add	r2, lr
 801c18a:	9212      	str	r2, [sp, #72]	@ 0x48
 801c18c:	9f12      	ldr	r7, [sp, #72]	@ 0x48
 801c18e:	f8b9 2000 	ldrh.w	r2, [r9]
 801c192:	f897 a002 	ldrb.w	sl, [r7, #2]
 801c196:	9f0e      	ldr	r7, [sp, #56]	@ 0x38
 801c198:	1216      	asrs	r6, r2, #8
 801c19a:	fb1a fa07 	smulbb	sl, sl, r7
 801c19e:	f006 06f8 	and.w	r6, r6, #248	@ 0xf8
 801c1a2:	9f0f      	ldr	r7, [sp, #60]	@ 0x3c
 801c1a4:	ea46 1656 	orr.w	r6, r6, r6, lsr #5
 801c1a8:	fb06 a607 	mla	r6, r6, r7, sl
 801c1ac:	9f12      	ldr	r7, [sp, #72]	@ 0x48
 801c1ae:	f897 a001 	ldrb.w	sl, [r7, #1]
 801c1b2:	9f0e      	ldr	r7, [sp, #56]	@ 0x38
 801c1b4:	10d5      	asrs	r5, r2, #3
 801c1b6:	fb1a fa07 	smulbb	sl, sl, r7
 801c1ba:	f005 05fc 	and.w	r5, r5, #252	@ 0xfc
 801c1be:	9f0f      	ldr	r7, [sp, #60]	@ 0x3c
 801c1c0:	ea45 1595 	orr.w	r5, r5, r5, lsr #6
 801c1c4:	fb05 a507 	mla	r5, r5, r7, sl
 801c1c8:	9f06      	ldr	r7, [sp, #24]
 801c1ca:	f817 e00e 	ldrb.w	lr, [r7, lr]
 801c1ce:	9f0e      	ldr	r7, [sp, #56]	@ 0x38
 801c1d0:	00d2      	lsls	r2, r2, #3
 801c1d2:	fb1e fe07 	smulbb	lr, lr, r7
 801c1d6:	b2d2      	uxtb	r2, r2
 801c1d8:	9f0f      	ldr	r7, [sp, #60]	@ 0x3c
 801c1da:	ea42 1252 	orr.w	r2, r2, r2, lsr #5
 801c1de:	b2b6      	uxth	r6, r6
 801c1e0:	fb02 e207 	mla	r2, r2, r7, lr
 801c1e4:	b292      	uxth	r2, r2
 801c1e6:	b2ad      	uxth	r5, r5
 801c1e8:	f106 0a01 	add.w	sl, r6, #1
 801c1ec:	eb0a 2616 	add.w	r6, sl, r6, lsr #8
 801c1f0:	f102 0e01 	add.w	lr, r2, #1
 801c1f4:	f105 0a01 	add.w	sl, r5, #1
 801c1f8:	eb0e 2e12 	add.w	lr, lr, r2, lsr #8
 801c1fc:	eb0a 2a15 	add.w	sl, sl, r5, lsr #8
 801c200:	f406 4678 	and.w	r6, r6, #63488	@ 0xf800
 801c204:	f3ce 2ec4 	ubfx	lr, lr, #11, #5
 801c208:	ea4f 1a5a 	mov.w	sl, sl, lsr #5
 801c20c:	ea4e 0606 	orr.w	r6, lr, r6
 801c210:	f40a 6afc 	and.w	sl, sl, #2016	@ 0x7e0
 801c214:	ea46 060a 	orr.w	r6, r6, sl
 801c218:	f829 6b02 	strh.w	r6, [r9], #2
 801c21c:	f8bd 205c 	ldrh.w	r2, [sp, #92]	@ 0x5c
 801c220:	e7a7      	b.n	801c172 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x302>
 801c222:	f102 0e01 	add.w	lr, r2, #1
 801c226:	4422      	add	r2, r4
 801c228:	9f06      	ldr	r7, [sp, #24]
 801c22a:	f892 5804 	ldrb.w	r5, [r2, #2052]	@ 0x804
 801c22e:	9a06      	ldr	r2, [sp, #24]
 801c230:	eb05 0545 	add.w	r5, r5, r5, lsl #1
 801c234:	eb02 0a05 	add.w	sl, r2, r5
 801c238:	4a13      	ldr	r2, [pc, #76]	@ (801c288 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x418>)
 801c23a:	f89a 9002 	ldrb.w	r9, [sl, #2]
 801c23e:	ea02 2909 	and.w	r9, r2, r9, lsl #8
 801c242:	f89a 2001 	ldrb.w	r2, [sl, #1]
 801c246:	00d2      	lsls	r2, r2, #3
 801c248:	f402 62fc 	and.w	r2, r2, #2016	@ 0x7e0
 801c24c:	ea49 0202 	orr.w	r2, r9, r2
 801c250:	f817 9005 	ldrb.w	r9, [r7, r5]
 801c254:	ea42 02d9 	orr.w	r2, r2, r9, lsr #3
 801c258:	f826 2b02 	strh.w	r2, [r6], #2
 801c25c:	fa1f f28e 	uxth.w	r2, lr
 801c260:	e757      	b.n	801c112 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x2a2>
 801c262:	f8bd 0010 	ldrh.w	r0, [sp, #16]
 801c266:	f8bd 506c 	ldrh.w	r5, [sp, #108]	@ 0x6c
 801c26a:	1a2d      	subs	r5, r5, r0
 801c26c:	b2ad      	uxth	r5, r5
 801c26e:	2d00      	cmp	r5, #0
 801c270:	bf18      	it	ne
 801c272:	2000      	movne	r0, #0
 801c274:	e730      	b.n	801c0d8 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x268>
 801c276:	4b05      	ldr	r3, [pc, #20]	@ (801c28c <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x41c>)
 801c278:	6818      	ldr	r0, [r3, #0]
 801c27a:	6803      	ldr	r3, [r0, #0]
 801c27c:	6adb      	ldr	r3, [r3, #44]	@ 0x2c
 801c27e:	4798      	blx	r3
 801c280:	b01f      	add	sp, #124	@ 0x7c
 801c282:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 801c286:	bf00      	nop
 801c288:	fffff800 	.word	0xfffff800
 801c28c:	20002fa8 	.word	0x20002fa8

0801c290 <_ZN8touchgfx8LCD16bpp29copyFrameBufferRegionToMemoryERKNS_4RectES3_Phss>:
 801c290:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 801c294:	b091      	sub	sp, #68	@ 0x44
 801c296:	469b      	mov	fp, r3
 801c298:	f10d 0828 	add.w	r8, sp, #40	@ 0x28
 801c29c:	4616      	mov	r6, r2
 801c29e:	f9bd 906c 	ldrsh.w	r9, [sp, #108]	@ 0x6c
 801c2a2:	f9b3 2000 	ldrsh.w	r2, [r3]
 801c2a6:	f9bd 7070 	ldrsh.w	r7, [sp, #112]	@ 0x70
 801c2aa:	f9b3 3002 	ldrsh.w	r3, [r3, #2]
 801c2ae:	f8ad 2028 	strh.w	r2, [sp, #40]	@ 0x28
 801c2b2:	4604      	mov	r4, r0
 801c2b4:	460d      	mov	r5, r1
 801c2b6:	4640      	mov	r0, r8
 801c2b8:	4659      	mov	r1, fp
 801c2ba:	f8ad 302a 	strh.w	r3, [sp, #42]	@ 0x2a
 801c2be:	f8ad 902c 	strh.w	r9, [sp, #44]	@ 0x2c
 801c2c2:	f8ad 702e 	strh.w	r7, [sp, #46]	@ 0x2e
 801c2c6:	f7f4 fb39 	bl	801093c <_ZN8touchgfx4RectaNERKS0_>
 801c2ca:	4631      	mov	r1, r6
 801c2cc:	4640      	mov	r0, r8
 801c2ce:	f7f4 fb35 	bl	801093c <_ZN8touchgfx4RectaNERKS0_>
 801c2d2:	4b74      	ldr	r3, [pc, #464]	@ (801c4a4 <_ZN8touchgfx8LCD16bpp29copyFrameBufferRegionToMemoryERKNS_4RectES3_Phss+0x214>)
 801c2d4:	8818      	ldrh	r0, [r3, #0]
 801c2d6:	4b74      	ldr	r3, [pc, #464]	@ (801c4a8 <_ZN8touchgfx8LCD16bpp29copyFrameBufferRegionToMemoryERKNS_4RectES3_Phss+0x218>)
 801c2d8:	8819      	ldrh	r1, [r3, #0]
 801c2da:	f9bd 3028 	ldrsh.w	r3, [sp, #40]	@ 0x28
 801c2de:	2b00      	cmp	r3, #0
 801c2e0:	b202      	sxth	r2, r0
 801c2e2:	b20e      	sxth	r6, r1
 801c2e4:	da07      	bge.n	801c2f6 <_ZN8touchgfx8LCD16bpp29copyFrameBufferRegionToMemoryERKNS_4RectES3_Phss+0x66>
 801c2e6:	f8bd c02c 	ldrh.w	ip, [sp, #44]	@ 0x2c
 801c2ea:	4463      	add	r3, ip
 801c2ec:	f8ad 302c 	strh.w	r3, [sp, #44]	@ 0x2c
 801c2f0:	2300      	movs	r3, #0
 801c2f2:	f8ad 3028 	strh.w	r3, [sp, #40]	@ 0x28
 801c2f6:	f9bd 3028 	ldrsh.w	r3, [sp, #40]	@ 0x28
 801c2fa:	f9bd c02c 	ldrsh.w	ip, [sp, #44]	@ 0x2c
 801c2fe:	1ad2      	subs	r2, r2, r3
 801c300:	4594      	cmp	ip, r2
 801c302:	bfc4      	itt	gt
 801c304:	1ac2      	subgt	r2, r0, r3
 801c306:	f8ad 202c 	strhgt.w	r2, [sp, #44]	@ 0x2c
 801c30a:	f9bd 202a 	ldrsh.w	r2, [sp, #42]	@ 0x2a
 801c30e:	2a00      	cmp	r2, #0
 801c310:	da07      	bge.n	801c322 <_ZN8touchgfx8LCD16bpp29copyFrameBufferRegionToMemoryERKNS_4RectES3_Phss+0x92>
 801c312:	f8bd c02e 	ldrh.w	ip, [sp, #46]	@ 0x2e
 801c316:	4462      	add	r2, ip
 801c318:	f8ad 202e 	strh.w	r2, [sp, #46]	@ 0x2e
 801c31c:	2200      	movs	r2, #0
 801c31e:	f8ad 202a 	strh.w	r2, [sp, #42]	@ 0x2a
 801c322:	f9bd a02a 	ldrsh.w	sl, [sp, #42]	@ 0x2a
 801c326:	f9bd 202e 	ldrsh.w	r2, [sp, #46]	@ 0x2e
 801c32a:	eba6 060a 	sub.w	r6, r6, sl
 801c32e:	42b2      	cmp	r2, r6
 801c330:	bfc4      	itt	gt
 801c332:	eba1 020a 	subgt.w	r2, r1, sl
 801c336:	f8ad 202e 	strhgt.w	r2, [sp, #46]	@ 0x2e
 801c33a:	4a5c      	ldr	r2, [pc, #368]	@ (801c4ac <_ZN8touchgfx8LCD16bpp29copyFrameBufferRegionToMemoryERKNS_4RectES3_Phss+0x21c>)
 801c33c:	7812      	ldrb	r2, [r2, #0]
 801c33e:	b9a2      	cbnz	r2, 801c36a <_ZN8touchgfx8LCD16bpp29copyFrameBufferRegionToMemoryERKNS_4RectES3_Phss+0xda>
 801c340:	f9bd 602c 	ldrsh.w	r6, [sp, #44]	@ 0x2c
 801c344:	4286      	cmp	r6, r0
 801c346:	4640      	mov	r0, r8
 801c348:	9303      	str	r3, [sp, #12]
 801c34a:	bf14      	ite	ne
 801c34c:	2600      	movne	r6, #0
 801c34e:	2601      	moveq	r6, #1
 801c350:	f7f4 fb37 	bl	80109c2 <_ZNK8touchgfx4Rect7isEmptyEv>
 801c354:	9b03      	ldr	r3, [sp, #12]
 801c356:	b160      	cbz	r0, 801c372 <_ZN8touchgfx8LCD16bpp29copyFrameBufferRegionToMemoryERKNS_4RectES3_Phss+0xe2>
 801c358:	2300      	movs	r3, #0
 801c35a:	8023      	strh	r3, [r4, #0]
 801c35c:	8063      	strh	r3, [r4, #2]
 801c35e:	80a3      	strh	r3, [r4, #4]
 801c360:	4620      	mov	r0, r4
 801c362:	80e3      	strh	r3, [r4, #6]
 801c364:	b011      	add	sp, #68	@ 0x44
 801c366:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 801c36a:	f9bd 602e 	ldrsh.w	r6, [sp, #46]	@ 0x2e
 801c36e:	428e      	cmp	r6, r1
 801c370:	e7e9      	b.n	801c346 <_ZN8touchgfx8LCD16bpp29copyFrameBufferRegionToMemoryERKNS_4RectES3_Phss+0xb6>
 801c372:	f9bd 202c 	ldrsh.w	r2, [sp, #44]	@ 0x2c
 801c376:	9205      	str	r2, [sp, #20]
 801c378:	f9bd 202e 	ldrsh.w	r2, [sp, #46]	@ 0x2e
 801c37c:	9206      	str	r2, [sp, #24]
 801c37e:	f8bb 2000 	ldrh.w	r2, [fp]
 801c382:	900e      	str	r0, [sp, #56]	@ 0x38
 801c384:	1a9b      	subs	r3, r3, r2
 801c386:	b21b      	sxth	r3, r3
 801c388:	9303      	str	r3, [sp, #12]
 801c38a:	f8bb 3002 	ldrh.w	r3, [fp, #2]
 801c38e:	f8ad 903c 	strh.w	r9, [sp, #60]	@ 0x3c
 801c392:	ebaa 0a03 	sub.w	sl, sl, r3
 801c396:	fa0f f38a 	sxth.w	r3, sl
 801c39a:	9304      	str	r3, [sp, #16]
 801c39c:	9b03      	ldr	r3, [sp, #12]
 801c39e:	f8ad 3030 	strh.w	r3, [sp, #48]	@ 0x30
 801c3a2:	9b04      	ldr	r3, [sp, #16]
 801c3a4:	f8ad 3032 	strh.w	r3, [sp, #50]	@ 0x32
 801c3a8:	9b05      	ldr	r3, [sp, #20]
 801c3aa:	f8ad 3034 	strh.w	r3, [sp, #52]	@ 0x34
 801c3ae:	a90e      	add	r1, sp, #56	@ 0x38
 801c3b0:	9b06      	ldr	r3, [sp, #24]
 801c3b2:	f8ad 3036 	strh.w	r3, [sp, #54]	@ 0x36
 801c3b6:	a80c      	add	r0, sp, #48	@ 0x30
 801c3b8:	f8ad 703e 	strh.w	r7, [sp, #62]	@ 0x3e
 801c3bc:	f7f7 fcaa 	bl	8013d14 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectERKS1_>
 801c3c0:	4640      	mov	r0, r8
 801c3c2:	f7f7 fc7f 	bl	8013cc4 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectE>
 801c3c6:	a80e      	add	r0, sp, #56	@ 0x38
 801c3c8:	f7f7 fc7c 	bl	8013cc4 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectE>
 801c3cc:	4b38      	ldr	r3, [pc, #224]	@ (801c4b0 <_ZN8touchgfx8LCD16bpp29copyFrameBufferRegionToMemoryERKNS_4RectES3_Phss+0x220>)
 801c3ce:	f9bd a03c 	ldrsh.w	sl, [sp, #60]	@ 0x3c
 801c3d2:	881b      	ldrh	r3, [r3, #0]
 801c3d4:	9307      	str	r3, [sp, #28]
 801c3d6:	682b      	ldr	r3, [r5, #0]
 801c3d8:	f8df b0d8 	ldr.w	fp, [pc, #216]	@ 801c4b4 <_ZN8touchgfx8LCD16bpp29copyFrameBufferRegionToMemoryERKNS_4RectES3_Phss+0x224>
 801c3dc:	6b1b      	ldr	r3, [r3, #48]	@ 0x30
 801c3de:	4628      	mov	r0, r5
 801c3e0:	4798      	blx	r3
 801c3e2:	f8bd 5032 	ldrh.w	r5, [sp, #50]	@ 0x32
 801c3e6:	f9bd 3030 	ldrsh.w	r3, [sp, #48]	@ 0x30
 801c3ea:	4681      	mov	r9, r0
 801c3ec:	fb1a 3305 	smlabb	r3, sl, r5, r3
 801c3f0:	f8db 0000 	ldr.w	r0, [fp]
 801c3f4:	9d1a      	ldr	r5, [sp, #104]	@ 0x68
 801c3f6:	eb05 0543 	add.w	r5, r5, r3, lsl #1
 801c3fa:	6803      	ldr	r3, [r0, #0]
 801c3fc:	6b1b      	ldr	r3, [r3, #48]	@ 0x30
 801c3fe:	4798      	blx	r3
 801c400:	4607      	mov	r7, r0
 801c402:	f8db 0000 	ldr.w	r0, [fp]
 801c406:	f9bd 1028 	ldrsh.w	r1, [sp, #40]	@ 0x28
 801c40a:	6803      	ldr	r3, [r0, #0]
 801c40c:	f9bd 202a 	ldrsh.w	r2, [sp, #42]	@ 0x2a
 801c410:	9109      	str	r1, [sp, #36]	@ 0x24
 801c412:	9208      	str	r2, [sp, #32]
 801c414:	6b9b      	ldr	r3, [r3, #56]	@ 0x38
 801c416:	4798      	blx	r3
 801c418:	f010 0f01 	tst.w	r0, #1
 801c41c:	e9dd 2108 	ldrd	r2, r1, [sp, #32]
 801c420:	d012      	beq.n	801c448 <_ZN8touchgfx8LCD16bpp29copyFrameBufferRegionToMemoryERKNS_4RectES3_Phss+0x1b8>
 801c422:	f8db 0000 	ldr.w	r0, [fp]
 801c426:	f9bd 2034 	ldrsh.w	r2, [sp, #52]	@ 0x34
 801c42a:	6803      	ldr	r3, [r0, #0]
 801c42c:	9200      	str	r2, [sp, #0]
 801c42e:	6ede      	ldr	r6, [r3, #108]	@ 0x6c
 801c430:	e898 0006 	ldmia.w	r8, {r1, r2}
 801c434:	462b      	mov	r3, r5
 801c436:	47b0      	blx	r6
 801c438:	9b03      	ldr	r3, [sp, #12]
 801c43a:	8023      	strh	r3, [r4, #0]
 801c43c:	9b04      	ldr	r3, [sp, #16]
 801c43e:	8063      	strh	r3, [r4, #2]
 801c440:	9b05      	ldr	r3, [sp, #20]
 801c442:	80a3      	strh	r3, [r4, #4]
 801c444:	9b06      	ldr	r3, [sp, #24]
 801c446:	e78b      	b.n	801c360 <_ZN8touchgfx8LCD16bpp29copyFrameBufferRegionToMemoryERKNS_4RectES3_Phss+0xd0>
 801c448:	fb09 f202 	mul.w	r2, r9, r2
 801c44c:	eb02 0141 	add.w	r1, r2, r1, lsl #1
 801c450:	440f      	add	r7, r1
 801c452:	f9bd 3036 	ldrsh.w	r3, [sp, #54]	@ 0x36
 801c456:	b166      	cbz	r6, 801c472 <_ZN8touchgfx8LCD16bpp29copyFrameBufferRegionToMemoryERKNS_4RectES3_Phss+0x1e2>
 801c458:	9a07      	ldr	r2, [sp, #28]
 801c45a:	4592      	cmp	sl, r2
 801c45c:	d109      	bne.n	801c472 <_ZN8touchgfx8LCD16bpp29copyFrameBufferRegionToMemoryERKNS_4RectES3_Phss+0x1e2>
 801c45e:	f8db 0000 	ldr.w	r0, [fp]
 801c462:	6802      	ldr	r2, [r0, #0]
 801c464:	fb09 f303 	mul.w	r3, r9, r3
 801c468:	6b56      	ldr	r6, [r2, #52]	@ 0x34
 801c46a:	4629      	mov	r1, r5
 801c46c:	463a      	mov	r2, r7
 801c46e:	47b0      	blx	r6
 801c470:	e7e2      	b.n	801c438 <_ZN8touchgfx8LCD16bpp29copyFrameBufferRegionToMemoryERKNS_4RectES3_Phss+0x1a8>
 801c472:	fb0a f303 	mul.w	r3, sl, r3
 801c476:	f8df b03c 	ldr.w	fp, [pc, #60]	@ 801c4b4 <_ZN8touchgfx8LCD16bpp29copyFrameBufferRegionToMemoryERKNS_4RectES3_Phss+0x224>
 801c47a:	eb05 0843 	add.w	r8, r5, r3, lsl #1
 801c47e:	ea4f 064a 	mov.w	r6, sl, lsl #1
 801c482:	4545      	cmp	r5, r8
 801c484:	d2d8      	bcs.n	801c438 <_ZN8touchgfx8LCD16bpp29copyFrameBufferRegionToMemoryERKNS_4RectES3_Phss+0x1a8>
 801c486:	f8db 0000 	ldr.w	r0, [fp]
 801c48a:	f9bd 3034 	ldrsh.w	r3, [sp, #52]	@ 0x34
 801c48e:	6802      	ldr	r2, [r0, #0]
 801c490:	4629      	mov	r1, r5
 801c492:	f8d2 a034 	ldr.w	sl, [r2, #52]	@ 0x34
 801c496:	005b      	lsls	r3, r3, #1
 801c498:	463a      	mov	r2, r7
 801c49a:	47d0      	blx	sl
 801c49c:	444f      	add	r7, r9
 801c49e:	4435      	add	r5, r6
 801c4a0:	e7ef      	b.n	801c482 <_ZN8touchgfx8LCD16bpp29copyFrameBufferRegionToMemoryERKNS_4RectES3_Phss+0x1f2>
 801c4a2:	bf00      	nop
 801c4a4:	20002f9c 	.word	0x20002f9c
 801c4a8:	20002f9e 	.word	0x20002f9e
 801c4ac:	20002fa0 	.word	0x20002fa0
 801c4b0:	20002fa2 	.word	0x20002fa2
 801c4b4:	20002fa8 	.word	0x20002fa8

0801c4b8 <_ZN8touchgfx8LCD16bpp8fillRectERKNS_4RectENS_9colortypeEh>:
 801c4b8:	b5f0      	push	{r4, r5, r6, r7, lr}
 801c4ba:	4606      	mov	r6, r0
 801c4bc:	b087      	sub	sp, #28
 801c4be:	460c      	mov	r4, r1
 801c4c0:	4617      	mov	r7, r2
 801c4c2:	461d      	mov	r5, r3
 801c4c4:	b333      	cbz	r3, 801c514 <_ZN8touchgfx8LCD16bpp8fillRectERKNS_4RectENS_9colortypeEh+0x5c>
 801c4c6:	4608      	mov	r0, r1
 801c4c8:	f7f4 fa7b 	bl	80109c2 <_ZNK8touchgfx4Rect7isEmptyEv>
 801c4cc:	bb10      	cbnz	r0, 801c514 <_ZN8touchgfx8LCD16bpp8fillRectERKNS_4RectENS_9colortypeEh+0x5c>
 801c4ce:	6820      	ldr	r0, [r4, #0]
 801c4d0:	6861      	ldr	r1, [r4, #4]
 801c4d2:	4c1c      	ldr	r4, [pc, #112]	@ (801c544 <_ZN8touchgfx8LCD16bpp8fillRectERKNS_4RectENS_9colortypeEh+0x8c>)
 801c4d4:	ab04      	add	r3, sp, #16
 801c4d6:	c303      	stmia	r3!, {r0, r1}
 801c4d8:	a804      	add	r0, sp, #16
 801c4da:	f7f7 fbf3 	bl	8013cc4 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectE>
 801c4de:	6820      	ldr	r0, [r4, #0]
 801c4e0:	6803      	ldr	r3, [r0, #0]
 801c4e2:	6b9b      	ldr	r3, [r3, #56]	@ 0x38
 801c4e4:	4798      	blx	r3
 801c4e6:	2dff      	cmp	r5, #255	@ 0xff
 801c4e8:	d016      	beq.n	801c518 <_ZN8touchgfx8LCD16bpp8fillRectERKNS_4RectENS_9colortypeEh+0x60>
 801c4ea:	f010 0f08 	tst.w	r0, #8
 801c4ee:	6820      	ldr	r0, [r4, #0]
 801c4f0:	d015      	beq.n	801c51e <_ZN8touchgfx8LCD16bpp8fillRectERKNS_4RectENS_9colortypeEh+0x66>
 801c4f2:	2400      	movs	r4, #0
 801c4f4:	6801      	ldr	r1, [r0, #0]
 801c4f6:	f8bd 3012 	ldrh.w	r3, [sp, #18]
 801c4fa:	f8bd 2010 	ldrh.w	r2, [sp, #16]
 801c4fe:	e9cd 5402 	strd	r5, r4, [sp, #8]
 801c502:	f8bd 4016 	ldrh.w	r4, [sp, #22]
 801c506:	9401      	str	r4, [sp, #4]
 801c508:	f8bd 4014 	ldrh.w	r4, [sp, #20]
 801c50c:	9400      	str	r4, [sp, #0]
 801c50e:	6e0c      	ldr	r4, [r1, #96]	@ 0x60
 801c510:	4639      	mov	r1, r7
 801c512:	47a0      	blx	r4
 801c514:	b007      	add	sp, #28
 801c516:	bdf0      	pop	{r4, r5, r6, r7, pc}
 801c518:	f010 0f02 	tst.w	r0, #2
 801c51c:	e7e7      	b.n	801c4ee <_ZN8touchgfx8LCD16bpp8fillRectERKNS_4RectENS_9colortypeEh+0x36>
 801c51e:	6803      	ldr	r3, [r0, #0]
 801c520:	6a9b      	ldr	r3, [r3, #40]	@ 0x28
 801c522:	4798      	blx	r3
 801c524:	4b08      	ldr	r3, [pc, #32]	@ (801c548 <_ZN8touchgfx8LCD16bpp8fillRectERKNS_4RectENS_9colortypeEh+0x90>)
 801c526:	881a      	ldrh	r2, [r3, #0]
 801c528:	6833      	ldr	r3, [r6, #0]
 801c52a:	e9cd 7500 	strd	r7, r5, [sp]
 801c52e:	4601      	mov	r1, r0
 801c530:	6a5d      	ldr	r5, [r3, #36]	@ 0x24
 801c532:	4630      	mov	r0, r6
 801c534:	ab04      	add	r3, sp, #16
 801c536:	47a8      	blx	r5
 801c538:	6820      	ldr	r0, [r4, #0]
 801c53a:	6803      	ldr	r3, [r0, #0]
 801c53c:	6adb      	ldr	r3, [r3, #44]	@ 0x2c
 801c53e:	4798      	blx	r3
 801c540:	e7e8      	b.n	801c514 <_ZN8touchgfx8LCD16bpp8fillRectERKNS_4RectENS_9colortypeEh+0x5c>
 801c542:	bf00      	nop
 801c544:	20002fa8 	.word	0x20002fa8
 801c548:	20002fa2 	.word	0x20002fa2

0801c54c <_ZN8touchgfx8LCD16bpp10fillBufferEPhtRKNS_4RectENS_9colortypeEh>:
 801c54c:	e92d 47f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
 801c550:	f89d 7024 	ldrb.w	r7, [sp, #36]	@ 0x24
 801c554:	9e08      	ldr	r6, [sp, #32]
 801c556:	4688      	mov	r8, r1
 801c558:	4614      	mov	r4, r2
 801c55a:	461d      	mov	r5, r3
 801c55c:	2f00      	cmp	r7, #0
 801c55e:	f000 80a9 	beq.w	801c6b4 <_ZN8touchgfx8LCD16bpp10fillBufferEPhtRKNS_4RectENS_9colortypeEh+0x168>
 801c562:	4618      	mov	r0, r3
 801c564:	f7f4 fa2d 	bl	80109c2 <_ZNK8touchgfx4Rect7isEmptyEv>
 801c568:	2800      	cmp	r0, #0
 801c56a:	f040 80a3 	bne.w	801c6b4 <_ZN8touchgfx8LCD16bpp10fillBufferEPhtRKNS_4RectENS_9colortypeEh+0x168>
 801c56e:	f9b5 1000 	ldrsh.w	r1, [r5]
 801c572:	f9b5 3002 	ldrsh.w	r3, [r5, #2]
 801c576:	f9b5 0004 	ldrsh.w	r0, [r5, #4]
 801c57a:	f9b5 5006 	ldrsh.w	r5, [r5, #6]
 801c57e:	fb04 1303 	mla	r3, r4, r3, r1
 801c582:	eb08 0143 	add.w	r1, r8, r3, lsl #1
 801c586:	4365      	muls	r5, r4
 801c588:	2fff      	cmp	r7, #255	@ 0xff
 801c58a:	eba4 0200 	sub.w	r2, r4, r0
 801c58e:	eb01 0545 	add.w	r5, r1, r5, lsl #1
 801c592:	ea4f 2816 	mov.w	r8, r6, lsr #8
 801c596:	d04a      	beq.n	801c62e <_ZN8touchgfx8LCD16bpp10fillBufferEPhtRKNS_4RectENS_9colortypeEh+0xe2>
 801c598:	b2bc      	uxth	r4, r7
 801c59a:	f1c7 0cff 	rsb	ip, r7, #255	@ 0xff
 801c59e:	f3c6 4e07 	ubfx	lr, r6, #16, #8
 801c5a2:	fa5f f788 	uxtb.w	r7, r8
 801c5a6:	b2f3      	uxtb	r3, r6
 801c5a8:	0040      	lsls	r0, r0, #1
 801c5aa:	fb0e fe04 	mul.w	lr, lr, r4
 801c5ae:	4367      	muls	r7, r4
 801c5b0:	4363      	muls	r3, r4
 801c5b2:	ea4f 0842 	mov.w	r8, r2, lsl #1
 801c5b6:	fa1f fc8c 	uxth.w	ip, ip
 801c5ba:	42a9      	cmp	r1, r5
 801c5bc:	d27a      	bcs.n	801c6b4 <_ZN8touchgfx8LCD16bpp10fillBufferEPhtRKNS_4RectENS_9colortypeEh+0x168>
 801c5be:	eb01 0900 	add.w	r9, r1, r0
 801c5c2:	4549      	cmp	r1, r9
 801c5c4:	d231      	bcs.n	801c62a <_ZN8touchgfx8LCD16bpp10fillBufferEPhtRKNS_4RectENS_9colortypeEh+0xde>
 801c5c6:	880a      	ldrh	r2, [r1, #0]
 801c5c8:	1214      	asrs	r4, r2, #8
 801c5ca:	10d6      	asrs	r6, r2, #3
 801c5cc:	f004 04f8 	and.w	r4, r4, #248	@ 0xf8
 801c5d0:	00d2      	lsls	r2, r2, #3
 801c5d2:	b2d2      	uxtb	r2, r2
 801c5d4:	ea44 1454 	orr.w	r4, r4, r4, lsr #5
 801c5d8:	fb14 f40c 	smulbb	r4, r4, ip
 801c5dc:	ea42 1252 	orr.w	r2, r2, r2, lsr #5
 801c5e0:	4474      	add	r4, lr
 801c5e2:	fb12 f20c 	smulbb	r2, r2, ip
 801c5e6:	b2a4      	uxth	r4, r4
 801c5e8:	f006 06fc 	and.w	r6, r6, #252	@ 0xfc
 801c5ec:	441a      	add	r2, r3
 801c5ee:	b292      	uxth	r2, r2
 801c5f0:	f104 0a01 	add.w	sl, r4, #1
 801c5f4:	ea46 1696 	orr.w	r6, r6, r6, lsr #6
 801c5f8:	eb0a 2414 	add.w	r4, sl, r4, lsr #8
 801c5fc:	fb16 f60c 	smulbb	r6, r6, ip
 801c600:	f102 0a01 	add.w	sl, r2, #1
 801c604:	443e      	add	r6, r7
 801c606:	eb0a 2212 	add.w	r2, sl, r2, lsr #8
 801c60a:	b2b6      	uxth	r6, r6
 801c60c:	f404 4478 	and.w	r4, r4, #63488	@ 0xf800
 801c610:	f3c2 22c4 	ubfx	r2, r2, #11, #5
 801c614:	4322      	orrs	r2, r4
 801c616:	1c74      	adds	r4, r6, #1
 801c618:	eb04 2616 	add.w	r6, r4, r6, lsr #8
 801c61c:	0976      	lsrs	r6, r6, #5
 801c61e:	f406 66fc 	and.w	r6, r6, #2016	@ 0x7e0
 801c622:	4332      	orrs	r2, r6
 801c624:	f821 2b02 	strh.w	r2, [r1], #2
 801c628:	e7cb      	b.n	801c5c2 <_ZN8touchgfx8LCD16bpp10fillBufferEPhtRKNS_4RectENS_9colortypeEh+0x76>
 801c62a:	4441      	add	r1, r8
 801c62c:	e7c5      	b.n	801c5ba <_ZN8touchgfx8LCD16bpp10fillBufferEPhtRKNS_4RectENS_9colortypeEh+0x6e>
 801c62e:	4f22      	ldr	r7, [pc, #136]	@ (801c6b8 <_ZN8touchgfx8LCD16bpp10fillBufferEPhtRKNS_4RectENS_9colortypeEh+0x16c>)
 801c630:	0973      	lsrs	r3, r6, #5
 801c632:	ea08 0707 	and.w	r7, r8, r7
 801c636:	f403 63fc 	and.w	r3, r3, #2016	@ 0x7e0
 801c63a:	433b      	orrs	r3, r7
 801c63c:	f3c6 06c4 	ubfx	r6, r6, #3, #5
 801c640:	4333      	orrs	r3, r6
 801c642:	07e7      	lsls	r7, r4, #31
 801c644:	b29b      	uxth	r3, r3
 801c646:	d50b      	bpl.n	801c660 <_ZN8touchgfx8LCD16bpp10fillBufferEPhtRKNS_4RectENS_9colortypeEh+0x114>
 801c648:	0040      	lsls	r0, r0, #1
 801c64a:	0052      	lsls	r2, r2, #1
 801c64c:	42a9      	cmp	r1, r5
 801c64e:	d231      	bcs.n	801c6b4 <_ZN8touchgfx8LCD16bpp10fillBufferEPhtRKNS_4RectENS_9colortypeEh+0x168>
 801c650:	180c      	adds	r4, r1, r0
 801c652:	42a1      	cmp	r1, r4
 801c654:	d202      	bcs.n	801c65c <_ZN8touchgfx8LCD16bpp10fillBufferEPhtRKNS_4RectENS_9colortypeEh+0x110>
 801c656:	f821 3b02 	strh.w	r3, [r1], #2
 801c65a:	e7fa      	b.n	801c652 <_ZN8touchgfx8LCD16bpp10fillBufferEPhtRKNS_4RectENS_9colortypeEh+0x106>
 801c65c:	4411      	add	r1, r2
 801c65e:	e7f5      	b.n	801c64c <_ZN8touchgfx8LCD16bpp10fillBufferEPhtRKNS_4RectENS_9colortypeEh+0x100>
 801c660:	078e      	lsls	r6, r1, #30
 801c662:	d008      	beq.n	801c676 <_ZN8touchgfx8LCD16bpp10fillBufferEPhtRKNS_4RectENS_9colortypeEh+0x12a>
 801c664:	0066      	lsls	r6, r4, #1
 801c666:	460a      	mov	r2, r1
 801c668:	42aa      	cmp	r2, r5
 801c66a:	d202      	bcs.n	801c672 <_ZN8touchgfx8LCD16bpp10fillBufferEPhtRKNS_4RectENS_9colortypeEh+0x126>
 801c66c:	8013      	strh	r3, [r2, #0]
 801c66e:	4432      	add	r2, r6
 801c670:	e7fa      	b.n	801c668 <_ZN8touchgfx8LCD16bpp10fillBufferEPhtRKNS_4RectENS_9colortypeEh+0x11c>
 801c672:	3102      	adds	r1, #2
 801c674:	3801      	subs	r0, #1
 801c676:	07c2      	lsls	r2, r0, #31
 801c678:	d50b      	bpl.n	801c692 <_ZN8touchgfx8LCD16bpp10fillBufferEPhtRKNS_4RectENS_9colortypeEh+0x146>
 801c67a:	f100 4200 	add.w	r2, r0, #2147483648	@ 0x80000000
 801c67e:	3a01      	subs	r2, #1
 801c680:	eb01 0242 	add.w	r2, r1, r2, lsl #1
 801c684:	0066      	lsls	r6, r4, #1
 801c686:	42aa      	cmp	r2, r5
 801c688:	d202      	bcs.n	801c690 <_ZN8touchgfx8LCD16bpp10fillBufferEPhtRKNS_4RectENS_9colortypeEh+0x144>
 801c68a:	8013      	strh	r3, [r2, #0]
 801c68c:	4432      	add	r2, r6
 801c68e:	e7fa      	b.n	801c686 <_ZN8touchgfx8LCD16bpp10fillBufferEPhtRKNS_4RectENS_9colortypeEh+0x13a>
 801c690:	3801      	subs	r0, #1
 801c692:	b178      	cbz	r0, 801c6b4 <_ZN8touchgfx8LCD16bpp10fillBufferEPhtRKNS_4RectENS_9colortypeEh+0x168>
 801c694:	1040      	asrs	r0, r0, #1
 801c696:	ea43 4303 	orr.w	r3, r3, r3, lsl #16
 801c69a:	0080      	lsls	r0, r0, #2
 801c69c:	0064      	lsls	r4, r4, #1
 801c69e:	42a9      	cmp	r1, r5
 801c6a0:	d208      	bcs.n	801c6b4 <_ZN8touchgfx8LCD16bpp10fillBufferEPhtRKNS_4RectENS_9colortypeEh+0x168>
 801c6a2:	180e      	adds	r6, r1, r0
 801c6a4:	460a      	mov	r2, r1
 801c6a6:	42b2      	cmp	r2, r6
 801c6a8:	d202      	bcs.n	801c6b0 <_ZN8touchgfx8LCD16bpp10fillBufferEPhtRKNS_4RectENS_9colortypeEh+0x164>
 801c6aa:	f842 3b04 	str.w	r3, [r2], #4
 801c6ae:	e7fa      	b.n	801c6a6 <_ZN8touchgfx8LCD16bpp10fillBufferEPhtRKNS_4RectENS_9colortypeEh+0x15a>
 801c6b0:	4421      	add	r1, r4
 801c6b2:	e7f4      	b.n	801c69e <_ZN8touchgfx8LCD16bpp10fillBufferEPhtRKNS_4RectENS_9colortypeEh+0x152>
 801c6b4:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
 801c6b8:	00fff800 	.word	0x00fff800

0801c6bc <_ZN8touchgfx8LCD16bppC1Ev>:
 801c6bc:	2200      	movs	r2, #0
 801c6be:	4912      	ldr	r1, [pc, #72]	@ (801c708 <_ZN8touchgfx8LCD16bppC1Ev+0x4c>)
 801c6c0:	6001      	str	r1, [r0, #0]
 801c6c2:	e9c0 2201 	strd	r2, r2, [r0, #4]
 801c6c6:	e9c0 2203 	strd	r2, r2, [r0, #12]
 801c6ca:	e9c0 2205 	strd	r2, r2, [r0, #20]
 801c6ce:	e9c0 2207 	strd	r2, r2, [r0, #28]
 801c6d2:	e9c0 2209 	strd	r2, r2, [r0, #36]	@ 0x24
 801c6d6:	e9c0 220b 	strd	r2, r2, [r0, #44]	@ 0x2c
 801c6da:	e9c0 220d 	strd	r2, r2, [r0, #52]	@ 0x34
 801c6de:	e9c0 220f 	strd	r2, r2, [r0, #60]	@ 0x3c
 801c6e2:	e9c0 2211 	strd	r2, r2, [r0, #68]	@ 0x44
 801c6e6:	e9c0 2213 	strd	r2, r2, [r0, #76]	@ 0x4c
 801c6ea:	e9c0 2215 	strd	r2, r2, [r0, #84]	@ 0x54
 801c6ee:	e9c0 2217 	strd	r2, r2, [r0, #92]	@ 0x5c
 801c6f2:	e9c0 2219 	strd	r2, r2, [r0, #100]	@ 0x64
 801c6f6:	e9c0 221b 	strd	r2, r2, [r0, #108]	@ 0x6c
 801c6fa:	e9c0 221d 	strd	r2, r2, [r0, #116]	@ 0x74
 801c6fe:	e9c0 221f 	strd	r2, r2, [r0, #124]	@ 0x7c
 801c702:	e9c0 2221 	strd	r2, r2, [r0, #132]	@ 0x84
 801c706:	4770      	bx	lr
 801c708:	0802986c 	.word	0x0802986c

0801c70c <_ZN8touchgfx8LCD16bpp16blitCopyARGB8888EPKmRKNS_4RectES5_h>:
 801c70c:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 801c710:	460d      	mov	r5, r1
 801c712:	b08d      	sub	sp, #52	@ 0x34
 801c714:	4604      	mov	r4, r0
 801c716:	6808      	ldr	r0, [r1, #0]
 801c718:	6849      	ldr	r1, [r1, #4]
 801c71a:	4699      	mov	r9, r3
 801c71c:	ab08      	add	r3, sp, #32
 801c71e:	c303      	stmia	r3!, {r0, r1}
 801c720:	6810      	ldr	r0, [r2, #0]
 801c722:	6851      	ldr	r1, [r2, #4]
 801c724:	ab0a      	add	r3, sp, #40	@ 0x28
 801c726:	c303      	stmia	r3!, {r0, r1}
 801c728:	a808      	add	r0, sp, #32
 801c72a:	f7f7 facb 	bl	8013cc4 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectE>
 801c72e:	4629      	mov	r1, r5
 801c730:	a80a      	add	r0, sp, #40	@ 0x28
 801c732:	f7f7 faef 	bl	8013d14 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectERKS1_>
 801c736:	f9bd 2028 	ldrsh.w	r2, [sp, #40]	@ 0x28
 801c73a:	f9bd 302a 	ldrsh.w	r3, [sp, #42]	@ 0x2a
 801c73e:	f8bd 1024 	ldrh.w	r1, [sp, #36]	@ 0x24
 801c742:	4d63      	ldr	r5, [pc, #396]	@ (801c8d0 <_ZN8touchgfx8LCD16bpp16blitCopyARGB8888EPKmRKNS_4RectES5_h+0x1c4>)
 801c744:	f9bd 802c 	ldrsh.w	r8, [sp, #44]	@ 0x2c
 801c748:	6828      	ldr	r0, [r5, #0]
 801c74a:	f9bd 602e 	ldrsh.w	r6, [sp, #46]	@ 0x2e
 801c74e:	fb11 2103 	smlabb	r1, r1, r3, r2
 801c752:	eb04 0481 	add.w	r4, r4, r1, lsl #2
 801c756:	f8bd 1020 	ldrh.w	r1, [sp, #32]
 801c75a:	440a      	add	r2, r1
 801c75c:	f8ad 2028 	strh.w	r2, [sp, #40]	@ 0x28
 801c760:	f8bd 2022 	ldrh.w	r2, [sp, #34]	@ 0x22
 801c764:	4413      	add	r3, r2
 801c766:	f8ad 302a 	strh.w	r3, [sp, #42]	@ 0x2a
 801c76a:	6803      	ldr	r3, [r0, #0]
 801c76c:	6b9b      	ldr	r3, [r3, #56]	@ 0x38
 801c76e:	4798      	blx	r3
 801c770:	f1b9 0fff 	cmp.w	r9, #255	@ 0xff
 801c774:	d119      	bne.n	801c7aa <_ZN8touchgfx8LCD16bpp16blitCopyARGB8888EPKmRKNS_4RectES5_h+0x9e>
 801c776:	f010 0f20 	tst.w	r0, #32
 801c77a:	6828      	ldr	r0, [r5, #0]
 801c77c:	d018      	beq.n	801c7b0 <_ZN8touchgfx8LCD16bpp16blitCopyARGB8888EPKmRKNS_4RectES5_h+0xa4>
 801c77e:	2500      	movs	r5, #0
 801c780:	6801      	ldr	r1, [r0, #0]
 801c782:	f8bd 302a 	ldrh.w	r3, [sp, #42]	@ 0x2a
 801c786:	f8bd 2028 	ldrh.w	r2, [sp, #40]	@ 0x28
 801c78a:	e9cd 9503 	strd	r9, r5, [sp, #12]
 801c78e:	f8bd 5024 	ldrh.w	r5, [sp, #36]	@ 0x24
 801c792:	9502      	str	r5, [sp, #8]
 801c794:	b2b6      	uxth	r6, r6
 801c796:	fa1f f588 	uxth.w	r5, r8
 801c79a:	9601      	str	r6, [sp, #4]
 801c79c:	9500      	str	r5, [sp, #0]
 801c79e:	6d0d      	ldr	r5, [r1, #80]	@ 0x50
 801c7a0:	4621      	mov	r1, r4
 801c7a2:	47a8      	blx	r5
 801c7a4:	b00d      	add	sp, #52	@ 0x34
 801c7a6:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 801c7aa:	f010 0f40 	tst.w	r0, #64	@ 0x40
 801c7ae:	e7e4      	b.n	801c77a <_ZN8touchgfx8LCD16bpp16blitCopyARGB8888EPKmRKNS_4RectES5_h+0x6e>
 801c7b0:	6803      	ldr	r3, [r0, #0]
 801c7b2:	6a9b      	ldr	r3, [r3, #40]	@ 0x28
 801c7b4:	4798      	blx	r3
 801c7b6:	4947      	ldr	r1, [pc, #284]	@ (801c8d4 <_ZN8touchgfx8LCD16bpp16blitCopyARGB8888EPKmRKNS_4RectES5_h+0x1c8>)
 801c7b8:	f9bd 202a 	ldrsh.w	r2, [sp, #42]	@ 0x2a
 801c7bc:	880b      	ldrh	r3, [r1, #0]
 801c7be:	f9bd 5028 	ldrsh.w	r5, [sp, #40]	@ 0x28
 801c7c2:	fb03 5202 	mla	r2, r3, r2, r5
 801c7c6:	eb00 0042 	add.w	r0, r0, r2, lsl #1
 801c7ca:	4373      	muls	r3, r6
 801c7cc:	eb00 0343 	add.w	r3, r0, r3, lsl #1
 801c7d0:	9307      	str	r3, [sp, #28]
 801c7d2:	ea4f 0348 	mov.w	r3, r8, lsl #1
 801c7d6:	9306      	str	r3, [sp, #24]
 801c7d8:	468a      	mov	sl, r1
 801c7da:	9b07      	ldr	r3, [sp, #28]
 801c7dc:	4298      	cmp	r0, r3
 801c7de:	d270      	bcs.n	801c8c2 <_ZN8touchgfx8LCD16bpp16blitCopyARGB8888EPKmRKNS_4RectES5_h+0x1b6>
 801c7e0:	9b06      	ldr	r3, [sp, #24]
 801c7e2:	4621      	mov	r1, r4
 801c7e4:	eb00 0b03 	add.w	fp, r0, r3
 801c7e8:	4558      	cmp	r0, fp
 801c7ea:	d25d      	bcs.n	801c8a8 <_ZN8touchgfx8LCD16bpp16blitCopyARGB8888EPKmRKNS_4RectES5_h+0x19c>
 801c7ec:	f851 4b04 	ldr.w	r4, [r1], #4
 801c7f0:	0e23      	lsrs	r3, r4, #24
 801c7f2:	d014      	beq.n	801c81e <_ZN8touchgfx8LCD16bpp16blitCopyARGB8888EPKmRKNS_4RectES5_h+0x112>
 801c7f4:	2bff      	cmp	r3, #255	@ 0xff
 801c7f6:	ea4f 2c14 	mov.w	ip, r4, lsr #8
 801c7fa:	d112      	bne.n	801c822 <_ZN8touchgfx8LCD16bpp16blitCopyARGB8888EPKmRKNS_4RectES5_h+0x116>
 801c7fc:	f1b9 0fff 	cmp.w	r9, #255	@ 0xff
 801c800:	d10f      	bne.n	801c822 <_ZN8touchgfx8LCD16bpp16blitCopyARGB8888EPKmRKNS_4RectES5_h+0x116>
 801c802:	0963      	lsrs	r3, r4, #5
 801c804:	f42c 6cff 	bic.w	ip, ip, #2040	@ 0x7f8
 801c808:	f403 63fc 	and.w	r3, r3, #2016	@ 0x7e0
 801c80c:	f02c 0c07 	bic.w	ip, ip, #7
 801c810:	ea43 0c0c 	orr.w	ip, r3, ip
 801c814:	f3c4 04c4 	ubfx	r4, r4, #3, #5
 801c818:	ea4c 0404 	orr.w	r4, ip, r4
 801c81c:	8004      	strh	r4, [r0, #0]
 801c81e:	3002      	adds	r0, #2
 801c820:	e7e2      	b.n	801c7e8 <_ZN8touchgfx8LCD16bpp16blitCopyARGB8888EPKmRKNS_4RectES5_h+0xdc>
 801c822:	fb09 f303 	mul.w	r3, r9, r3
 801c826:	8807      	ldrh	r7, [r0, #0]
 801c828:	1c5a      	adds	r2, r3, #1
 801c82a:	eb02 2223 	add.w	r2, r2, r3, asr #8
 801c82e:	1212      	asrs	r2, r2, #8
 801c830:	123e      	asrs	r6, r7, #8
 801c832:	b293      	uxth	r3, r2
 801c834:	f3c4 4e07 	ubfx	lr, r4, #16, #8
 801c838:	f006 06f8 	and.w	r6, r6, #248	@ 0xf8
 801c83c:	43d2      	mvns	r2, r2
 801c83e:	b2d2      	uxtb	r2, r2
 801c840:	10fd      	asrs	r5, r7, #3
 801c842:	fb1e fe03 	smulbb	lr, lr, r3
 801c846:	00ff      	lsls	r7, r7, #3
 801c848:	ea46 1656 	orr.w	r6, r6, r6, lsr #5
 801c84c:	fb06 e602 	mla	r6, r6, r2, lr
 801c850:	f005 05fc 	and.w	r5, r5, #252	@ 0xfc
 801c854:	b2ff      	uxtb	r7, r7
 801c856:	fa5f fc8c 	uxtb.w	ip, ip
 801c85a:	b2e4      	uxtb	r4, r4
 801c85c:	b2b6      	uxth	r6, r6
 801c85e:	fb1c fc03 	smulbb	ip, ip, r3
 801c862:	ea45 1595 	orr.w	r5, r5, r5, lsr #6
 801c866:	ea47 1757 	orr.w	r7, r7, r7, lsr #5
 801c86a:	fb14 f403 	smulbb	r4, r4, r3
 801c86e:	fb05 c502 	mla	r5, r5, r2, ip
 801c872:	f106 0e01 	add.w	lr, r6, #1
 801c876:	fb07 4702 	mla	r7, r7, r2, r4
 801c87a:	b2ad      	uxth	r5, r5
 801c87c:	b2bf      	uxth	r7, r7
 801c87e:	eb0e 2616 	add.w	r6, lr, r6, lsr #8
 801c882:	f406 4e78 	and.w	lr, r6, #63488	@ 0xf800
 801c886:	f105 0c01 	add.w	ip, r5, #1
 801c88a:	1c7e      	adds	r6, r7, #1
 801c88c:	eb06 2617 	add.w	r6, r6, r7, lsr #8
 801c890:	eb0c 2515 	add.w	r5, ip, r5, lsr #8
 801c894:	f3c6 26c4 	ubfx	r6, r6, #11, #5
 801c898:	096d      	lsrs	r5, r5, #5
 801c89a:	ea46 060e 	orr.w	r6, r6, lr
 801c89e:	f405 65fc 	and.w	r5, r5, #2016	@ 0x7e0
 801c8a2:	432e      	orrs	r6, r5
 801c8a4:	8006      	strh	r6, [r0, #0]
 801c8a6:	e7ba      	b.n	801c81e <_ZN8touchgfx8LCD16bpp16blitCopyARGB8888EPKmRKNS_4RectES5_h+0x112>
 801c8a8:	f8ba 3000 	ldrh.w	r3, [sl]
 801c8ac:	f9bd 4024 	ldrsh.w	r4, [sp, #36]	@ 0x24
 801c8b0:	eba3 0308 	sub.w	r3, r3, r8
 801c8b4:	eba4 0408 	sub.w	r4, r4, r8
 801c8b8:	eb00 0043 	add.w	r0, r0, r3, lsl #1
 801c8bc:	eb01 0484 	add.w	r4, r1, r4, lsl #2
 801c8c0:	e78b      	b.n	801c7da <_ZN8touchgfx8LCD16bpp16blitCopyARGB8888EPKmRKNS_4RectES5_h+0xce>
 801c8c2:	4b03      	ldr	r3, [pc, #12]	@ (801c8d0 <_ZN8touchgfx8LCD16bpp16blitCopyARGB8888EPKmRKNS_4RectES5_h+0x1c4>)
 801c8c4:	6818      	ldr	r0, [r3, #0]
 801c8c6:	6803      	ldr	r3, [r0, #0]
 801c8c8:	6adb      	ldr	r3, [r3, #44]	@ 0x2c
 801c8ca:	4798      	blx	r3
 801c8cc:	e76a      	b.n	801c7a4 <_ZN8touchgfx8LCD16bpp16blitCopyARGB8888EPKmRKNS_4RectES5_h+0x98>
 801c8ce:	bf00      	nop
 801c8d0:	20002fa8 	.word	0x20002fa8
 801c8d4:	20002fa2 	.word	0x20002fa2

0801c8d8 <_ZNK8touchgfx8LCD16bpp21blitCopyARGB8888SolidEPKmRKNS_4RectES5_>:
 801c8d8:	e92d 43f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, lr}
 801c8dc:	460c      	mov	r4, r1
 801c8de:	b085      	sub	sp, #20
 801c8e0:	6810      	ldr	r0, [r2, #0]
 801c8e2:	6851      	ldr	r1, [r2, #4]
 801c8e4:	466d      	mov	r5, sp
 801c8e6:	c503      	stmia	r5!, {r0, r1}
 801c8e8:	6818      	ldr	r0, [r3, #0]
 801c8ea:	6859      	ldr	r1, [r3, #4]
 801c8ec:	4616      	mov	r6, r2
 801c8ee:	c503      	stmia	r5!, {r0, r1}
 801c8f0:	4668      	mov	r0, sp
 801c8f2:	f7f7 f9e7 	bl	8013cc4 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectE>
 801c8f6:	4631      	mov	r1, r6
 801c8f8:	a802      	add	r0, sp, #8
 801c8fa:	f7f7 fa0b 	bl	8013d14 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectERKS1_>
 801c8fe:	f9bd 2008 	ldrsh.w	r2, [sp, #8]
 801c902:	f9bd 300a 	ldrsh.w	r3, [sp, #10]
 801c906:	f8bd 1004 	ldrh.w	r1, [sp, #4]
 801c90a:	4d28      	ldr	r5, [pc, #160]	@ (801c9ac <_ZNK8touchgfx8LCD16bpp21blitCopyARGB8888SolidEPKmRKNS_4RectES5_+0xd4>)
 801c90c:	4e28      	ldr	r6, [pc, #160]	@ (801c9b0 <_ZNK8touchgfx8LCD16bpp21blitCopyARGB8888SolidEPKmRKNS_4RectES5_+0xd8>)
 801c90e:	6828      	ldr	r0, [r5, #0]
 801c910:	f9bd 700c 	ldrsh.w	r7, [sp, #12]
 801c914:	f9bd 800e 	ldrsh.w	r8, [sp, #14]
 801c918:	fb11 2103 	smlabb	r1, r1, r3, r2
 801c91c:	eb04 0481 	add.w	r4, r4, r1, lsl #2
 801c920:	f8bd 1000 	ldrh.w	r1, [sp]
 801c924:	440a      	add	r2, r1
 801c926:	f8ad 2008 	strh.w	r2, [sp, #8]
 801c92a:	f8bd 2002 	ldrh.w	r2, [sp, #2]
 801c92e:	4413      	add	r3, r2
 801c930:	f8ad 300a 	strh.w	r3, [sp, #10]
 801c934:	6803      	ldr	r3, [r0, #0]
 801c936:	6a9b      	ldr	r3, [r3, #40]	@ 0x28
 801c938:	4798      	blx	r3
 801c93a:	8833      	ldrh	r3, [r6, #0]
 801c93c:	f9bd 200a 	ldrsh.w	r2, [sp, #10]
 801c940:	f9bd 1008 	ldrsh.w	r1, [sp, #8]
 801c944:	f8df e06c 	ldr.w	lr, [pc, #108]	@ 801c9b4 <_ZNK8touchgfx8LCD16bpp21blitCopyARGB8888SolidEPKmRKNS_4RectES5_+0xdc>
 801c948:	fb03 1202 	mla	r2, r3, r2, r1
 801c94c:	eb00 0042 	add.w	r0, r0, r2, lsl #1
 801c950:	fb08 f303 	mul.w	r3, r8, r3
 801c954:	eb00 0343 	add.w	r3, r0, r3, lsl #1
 801c958:	ea4f 0c47 	mov.w	ip, r7, lsl #1
 801c95c:	4298      	cmp	r0, r3
 801c95e:	d21d      	bcs.n	801c99c <_ZNK8touchgfx8LCD16bpp21blitCopyARGB8888SolidEPKmRKNS_4RectES5_+0xc4>
 801c960:	eb00 080c 	add.w	r8, r0, ip
 801c964:	4540      	cmp	r0, r8
 801c966:	d20f      	bcs.n	801c988 <_ZNK8touchgfx8LCD16bpp21blitCopyARGB8888SolidEPKmRKNS_4RectES5_+0xb0>
 801c968:	f854 1b04 	ldr.w	r1, [r4], #4
 801c96c:	ea4f 1951 	mov.w	r9, r1, lsr #5
 801c970:	ea0e 2211 	and.w	r2, lr, r1, lsr #8
 801c974:	f409 69fc 	and.w	r9, r9, #2016	@ 0x7e0
 801c978:	ea42 0209 	orr.w	r2, r2, r9
 801c97c:	f3c1 01c4 	ubfx	r1, r1, #3, #5
 801c980:	430a      	orrs	r2, r1
 801c982:	f820 2b02 	strh.w	r2, [r0], #2
 801c986:	e7ed      	b.n	801c964 <_ZNK8touchgfx8LCD16bpp21blitCopyARGB8888SolidEPKmRKNS_4RectES5_+0x8c>
 801c988:	8832      	ldrh	r2, [r6, #0]
 801c98a:	1bd2      	subs	r2, r2, r7
 801c98c:	eb00 0042 	add.w	r0, r0, r2, lsl #1
 801c990:	f9bd 2004 	ldrsh.w	r2, [sp, #4]
 801c994:	1bd2      	subs	r2, r2, r7
 801c996:	eb04 0482 	add.w	r4, r4, r2, lsl #2
 801c99a:	e7df      	b.n	801c95c <_ZNK8touchgfx8LCD16bpp21blitCopyARGB8888SolidEPKmRKNS_4RectES5_+0x84>
 801c99c:	6828      	ldr	r0, [r5, #0]
 801c99e:	6803      	ldr	r3, [r0, #0]
 801c9a0:	6adb      	ldr	r3, [r3, #44]	@ 0x2c
 801c9a2:	4798      	blx	r3
 801c9a4:	b005      	add	sp, #20
 801c9a6:	e8bd 83f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, pc}
 801c9aa:	bf00      	nop
 801c9ac:	20002fa8 	.word	0x20002fa8
 801c9b0:	20002fa2 	.word	0x20002fa2
 801c9b4:	fffff800 	.word	0xfffff800

0801c9b8 <_ZN8touchgfx8LCD16bpp14blitCopyRGB888EPKhRKNS_4RectES5_h>:
 801c9b8:	e92d 47f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
 801c9bc:	460e      	mov	r6, r1
 801c9be:	b08e      	sub	sp, #56	@ 0x38
 801c9c0:	4604      	mov	r4, r0
 801c9c2:	6808      	ldr	r0, [r1, #0]
 801c9c4:	6849      	ldr	r1, [r1, #4]
 801c9c6:	f8df 81d8 	ldr.w	r8, [pc, #472]	@ 801cba0 <_ZN8touchgfx8LCD16bpp14blitCopyRGB888EPKhRKNS_4RectES5_h+0x1e8>
 801c9ca:	f8df 91d8 	ldr.w	r9, [pc, #472]	@ 801cba4 <_ZN8touchgfx8LCD16bpp14blitCopyRGB888EPKhRKNS_4RectES5_h+0x1ec>
 801c9ce:	461d      	mov	r5, r3
 801c9d0:	ab0a      	add	r3, sp, #40	@ 0x28
 801c9d2:	c303      	stmia	r3!, {r0, r1}
 801c9d4:	6810      	ldr	r0, [r2, #0]
 801c9d6:	6851      	ldr	r1, [r2, #4]
 801c9d8:	ab0c      	add	r3, sp, #48	@ 0x30
 801c9da:	c303      	stmia	r3!, {r0, r1}
 801c9dc:	a80a      	add	r0, sp, #40	@ 0x28
 801c9de:	f7f7 f971 	bl	8013cc4 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectE>
 801c9e2:	4631      	mov	r1, r6
 801c9e4:	a80c      	add	r0, sp, #48	@ 0x30
 801c9e6:	f7f7 f995 	bl	8013d14 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectERKS1_>
 801c9ea:	f9bd 2030 	ldrsh.w	r2, [sp, #48]	@ 0x30
 801c9ee:	f9bd 3032 	ldrsh.w	r3, [sp, #50]	@ 0x32
 801c9f2:	f8bd 102c 	ldrh.w	r1, [sp, #44]	@ 0x2c
 801c9f6:	f8d8 0000 	ldr.w	r0, [r8]
 801c9fa:	f9bd 7034 	ldrsh.w	r7, [sp, #52]	@ 0x34
 801c9fe:	f9bd 6036 	ldrsh.w	r6, [sp, #54]	@ 0x36
 801ca02:	fb11 2103 	smlabb	r1, r1, r3, r2
 801ca06:	eb01 0141 	add.w	r1, r1, r1, lsl #1
 801ca0a:	440c      	add	r4, r1
 801ca0c:	f8bd 1028 	ldrh.w	r1, [sp, #40]	@ 0x28
 801ca10:	440a      	add	r2, r1
 801ca12:	f8ad 2030 	strh.w	r2, [sp, #48]	@ 0x30
 801ca16:	f8bd 202a 	ldrh.w	r2, [sp, #42]	@ 0x2a
 801ca1a:	4413      	add	r3, r2
 801ca1c:	f8ad 3032 	strh.w	r3, [sp, #50]	@ 0x32
 801ca20:	6803      	ldr	r3, [r0, #0]
 801ca22:	6b9b      	ldr	r3, [r3, #56]	@ 0x38
 801ca24:	4798      	blx	r3
 801ca26:	2dff      	cmp	r5, #255	@ 0xff
 801ca28:	d124      	bne.n	801ca74 <_ZN8touchgfx8LCD16bpp14blitCopyRGB888EPKhRKNS_4RectES5_h+0xbc>
 801ca2a:	f010 0f01 	tst.w	r0, #1
 801ca2e:	f8d8 0000 	ldr.w	r0, [r8]
 801ca32:	d022      	beq.n	801ca7a <_ZN8touchgfx8LCD16bpp14blitCopyRGB888EPKhRKNS_4RectES5_h+0xc2>
 801ca34:	2100      	movs	r1, #0
 801ca36:	f8d0 c000 	ldr.w	ip, [r0]
 801ca3a:	f8bd 3032 	ldrh.w	r3, [sp, #50]	@ 0x32
 801ca3e:	f8bd 2030 	ldrh.w	r2, [sp, #48]	@ 0x30
 801ca42:	e9cd 1107 	strd	r1, r1, [sp, #28]
 801ca46:	f04f 0e01 	mov.w	lr, #1
 801ca4a:	f8cd e018 	str.w	lr, [sp, #24]
 801ca4e:	f8b9 e000 	ldrh.w	lr, [r9]
 801ca52:	9503      	str	r5, [sp, #12]
 801ca54:	e9cd 1e04 	strd	r1, lr, [sp, #16]
 801ca58:	b2b6      	uxth	r6, r6
 801ca5a:	f8bd 102c 	ldrh.w	r1, [sp, #44]	@ 0x2c
 801ca5e:	9102      	str	r1, [sp, #8]
 801ca60:	b2bf      	uxth	r7, r7
 801ca62:	9601      	str	r6, [sp, #4]
 801ca64:	9700      	str	r7, [sp, #0]
 801ca66:	f8dc 5040 	ldr.w	r5, [ip, #64]	@ 0x40
 801ca6a:	4621      	mov	r1, r4
 801ca6c:	47a8      	blx	r5
 801ca6e:	b00e      	add	sp, #56	@ 0x38
 801ca70:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
 801ca74:	f010 0f04 	tst.w	r0, #4
 801ca78:	e7d9      	b.n	801ca2e <_ZN8touchgfx8LCD16bpp14blitCopyRGB888EPKhRKNS_4RectES5_h+0x76>
 801ca7a:	6803      	ldr	r3, [r0, #0]
 801ca7c:	6a9b      	ldr	r3, [r3, #40]	@ 0x28
 801ca7e:	4798      	blx	r3
 801ca80:	f8b9 3000 	ldrh.w	r3, [r9]
 801ca84:	f9bd 2032 	ldrsh.w	r2, [sp, #50]	@ 0x32
 801ca88:	f9bd 1030 	ldrsh.w	r1, [sp, #48]	@ 0x30
 801ca8c:	f9bd c02c 	ldrsh.w	ip, [sp, #44]	@ 0x2c
 801ca90:	fb03 1202 	mla	r2, r3, r2, r1
 801ca94:	ebac 0c07 	sub.w	ip, ip, r7
 801ca98:	eb00 0042 	add.w	r0, r0, r2, lsl #1
 801ca9c:	435e      	muls	r6, r3
 801ca9e:	ea4f 0e47 	mov.w	lr, r7, lsl #1
 801caa2:	2dff      	cmp	r5, #255	@ 0xff
 801caa4:	eba3 0707 	sub.w	r7, r3, r7
 801caa8:	eb00 0646 	add.w	r6, r0, r6, lsl #1
 801caac:	eb0c 0c4c 	add.w	ip, ip, ip, lsl #1
 801cab0:	ea4f 0747 	mov.w	r7, r7, lsl #1
 801cab4:	d049      	beq.n	801cb4a <_ZN8touchgfx8LCD16bpp14blitCopyRGB888EPKhRKNS_4RectES5_h+0x192>
 801cab6:	43eb      	mvns	r3, r5
 801cab8:	fa1f f985 	uxth.w	r9, r5
 801cabc:	b2db      	uxtb	r3, r3
 801cabe:	42b0      	cmp	r0, r6
 801cac0:	d266      	bcs.n	801cb90 <_ZN8touchgfx8LCD16bpp14blitCopyRGB888EPKhRKNS_4RectES5_h+0x1d8>
 801cac2:	eb00 0a0e 	add.w	sl, r0, lr
 801cac6:	4550      	cmp	r0, sl
 801cac8:	4621      	mov	r1, r4
 801caca:	f104 0403 	add.w	r4, r4, #3
 801cace:	d25b      	bcs.n	801cb88 <_ZN8touchgfx8LCD16bpp14blitCopyRGB888EPKhRKNS_4RectES5_h+0x1d0>
 801cad0:	8802      	ldrh	r2, [r0, #0]
 801cad2:	f814 1c01 	ldrb.w	r1, [r4, #-1]
 801cad6:	ea4f 2822 	mov.w	r8, r2, asr #8
 801cada:	f008 08f8 	and.w	r8, r8, #248	@ 0xf8
 801cade:	fb11 f109 	smulbb	r1, r1, r9
 801cae2:	ea48 1858 	orr.w	r8, r8, r8, lsr #5
 801cae6:	10d5      	asrs	r5, r2, #3
 801cae8:	fb08 1803 	mla	r8, r8, r3, r1
 801caec:	f814 1c02 	ldrb.w	r1, [r4, #-2]
 801caf0:	f005 05fc 	and.w	r5, r5, #252	@ 0xfc
 801caf4:	fb11 f109 	smulbb	r1, r1, r9
 801caf8:	ea45 1595 	orr.w	r5, r5, r5, lsr #6
 801cafc:	fb05 1503 	mla	r5, r5, r3, r1
 801cb00:	00d2      	lsls	r2, r2, #3
 801cb02:	f814 1c03 	ldrb.w	r1, [r4, #-3]
 801cb06:	b2d2      	uxtb	r2, r2
 801cb08:	fb11 f109 	smulbb	r1, r1, r9
 801cb0c:	ea42 1252 	orr.w	r2, r2, r2, lsr #5
 801cb10:	fa1f f888 	uxth.w	r8, r8
 801cb14:	fb02 1203 	mla	r2, r2, r3, r1
 801cb18:	b292      	uxth	r2, r2
 801cb1a:	f108 0101 	add.w	r1, r8, #1
 801cb1e:	b2ad      	uxth	r5, r5
 801cb20:	eb01 2818 	add.w	r8, r1, r8, lsr #8
 801cb24:	1c51      	adds	r1, r2, #1
 801cb26:	eb01 2212 	add.w	r2, r1, r2, lsr #8
 801cb2a:	1c69      	adds	r1, r5, #1
 801cb2c:	eb01 2515 	add.w	r5, r1, r5, lsr #8
 801cb30:	f408 4878 	and.w	r8, r8, #63488	@ 0xf800
 801cb34:	f3c2 22c4 	ubfx	r2, r2, #11, #5
 801cb38:	096d      	lsrs	r5, r5, #5
 801cb3a:	ea42 0208 	orr.w	r2, r2, r8
 801cb3e:	f405 65fc 	and.w	r5, r5, #2016	@ 0x7e0
 801cb42:	432a      	orrs	r2, r5
 801cb44:	f820 2b02 	strh.w	r2, [r0], #2
 801cb48:	e7bd      	b.n	801cac6 <_ZN8touchgfx8LCD16bpp14blitCopyRGB888EPKhRKNS_4RectES5_h+0x10e>
 801cb4a:	4a14      	ldr	r2, [pc, #80]	@ (801cb9c <_ZN8touchgfx8LCD16bpp14blitCopyRGB888EPKhRKNS_4RectES5_h+0x1e4>)
 801cb4c:	42b0      	cmp	r0, r6
 801cb4e:	d21f      	bcs.n	801cb90 <_ZN8touchgfx8LCD16bpp14blitCopyRGB888EPKhRKNS_4RectES5_h+0x1d8>
 801cb50:	eb00 050e 	add.w	r5, r0, lr
 801cb54:	42a8      	cmp	r0, r5
 801cb56:	4621      	mov	r1, r4
 801cb58:	f104 0403 	add.w	r4, r4, #3
 801cb5c:	d210      	bcs.n	801cb80 <_ZN8touchgfx8LCD16bpp14blitCopyRGB888EPKhRKNS_4RectES5_h+0x1c8>
 801cb5e:	f814 3c02 	ldrb.w	r3, [r4, #-2]
 801cb62:	f814 1c01 	ldrb.w	r1, [r4, #-1]
 801cb66:	00db      	lsls	r3, r3, #3
 801cb68:	ea02 2101 	and.w	r1, r2, r1, lsl #8
 801cb6c:	f403 63fc 	and.w	r3, r3, #2016	@ 0x7e0
 801cb70:	430b      	orrs	r3, r1
 801cb72:	f814 1c03 	ldrb.w	r1, [r4, #-3]
 801cb76:	ea43 03d1 	orr.w	r3, r3, r1, lsr #3
 801cb7a:	f820 3b02 	strh.w	r3, [r0], #2
 801cb7e:	e7e9      	b.n	801cb54 <_ZN8touchgfx8LCD16bpp14blitCopyRGB888EPKhRKNS_4RectES5_h+0x19c>
 801cb80:	4438      	add	r0, r7
 801cb82:	eb01 040c 	add.w	r4, r1, ip
 801cb86:	e7e1      	b.n	801cb4c <_ZN8touchgfx8LCD16bpp14blitCopyRGB888EPKhRKNS_4RectES5_h+0x194>
 801cb88:	4438      	add	r0, r7
 801cb8a:	eb01 040c 	add.w	r4, r1, ip
 801cb8e:	e796      	b.n	801cabe <_ZN8touchgfx8LCD16bpp14blitCopyRGB888EPKhRKNS_4RectES5_h+0x106>
 801cb90:	4b03      	ldr	r3, [pc, #12]	@ (801cba0 <_ZN8touchgfx8LCD16bpp14blitCopyRGB888EPKhRKNS_4RectES5_h+0x1e8>)
 801cb92:	6818      	ldr	r0, [r3, #0]
 801cb94:	6803      	ldr	r3, [r0, #0]
 801cb96:	6adb      	ldr	r3, [r3, #44]	@ 0x2c
 801cb98:	4798      	blx	r3
 801cb9a:	e768      	b.n	801ca6e <_ZN8touchgfx8LCD16bpp14blitCopyRGB888EPKhRKNS_4RectES5_h+0xb6>
 801cb9c:	fffff800 	.word	0xfffff800
 801cba0:	20002fa8 	.word	0x20002fa8
 801cba4:	20002fa2 	.word	0x20002fa2

0801cba8 <_ZN8touchgfx8LCD16bpp8blitCopyEPKhNS_6Bitmap12BitmapFormatERKNS_4RectES7_hb>:
 801cba8:	b4f0      	push	{r4, r5, r6, r7}
 801cbaa:	4616      	mov	r6, r2
 801cbac:	2e01      	cmp	r6, #1
 801cbae:	461c      	mov	r4, r3
 801cbb0:	460d      	mov	r5, r1
 801cbb2:	9a04      	ldr	r2, [sp, #16]
 801cbb4:	f89d 3014 	ldrb.w	r3, [sp, #20]
 801cbb8:	f89d 7018 	ldrb.w	r7, [sp, #24]
 801cbbc:	d012      	beq.n	801cbe4 <_ZN8touchgfx8LCD16bpp8blitCopyEPKhNS_6Bitmap12BitmapFormatERKNS_4RectES7_hb+0x3c>
 801cbbe:	d303      	bcc.n	801cbc8 <_ZN8touchgfx8LCD16bpp8blitCopyEPKhNS_6Bitmap12BitmapFormatERKNS_4RectES7_hb+0x20>
 801cbc0:	2e02      	cmp	r6, #2
 801cbc2:	d00a      	beq.n	801cbda <_ZN8touchgfx8LCD16bpp8blitCopyEPKhNS_6Bitmap12BitmapFormatERKNS_4RectES7_hb+0x32>
 801cbc4:	bcf0      	pop	{r4, r5, r6, r7}
 801cbc6:	4770      	bx	lr
 801cbc8:	6805      	ldr	r5, [r0, #0]
 801cbca:	e9cd 3704 	strd	r3, r7, [sp, #16]
 801cbce:	68ed      	ldr	r5, [r5, #12]
 801cbd0:	4613      	mov	r3, r2
 801cbd2:	46ac      	mov	ip, r5
 801cbd4:	4622      	mov	r2, r4
 801cbd6:	bcf0      	pop	{r4, r5, r6, r7}
 801cbd8:	4760      	bx	ip
 801cbda:	4621      	mov	r1, r4
 801cbdc:	4628      	mov	r0, r5
 801cbde:	bcf0      	pop	{r4, r5, r6, r7}
 801cbe0:	f7ff bd94 	b.w	801c70c <_ZN8touchgfx8LCD16bpp16blitCopyARGB8888EPKmRKNS_4RectES5_h>
 801cbe4:	4621      	mov	r1, r4
 801cbe6:	4628      	mov	r0, r5
 801cbe8:	bcf0      	pop	{r4, r5, r6, r7}
 801cbea:	f7ff bee5 	b.w	801c9b8 <_ZN8touchgfx8LCD16bpp14blitCopyRGB888EPKhRKNS_4RectES5_h>
	...

0801cbf0 <_ZN8touchgfx8LCD16bpp19blitCopyL8_ARGB8888EPKhS2_RKNS_4RectES5_h>:
 801cbf0:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 801cbf4:	4681      	mov	r9, r0
 801cbf6:	b093      	sub	sp, #76	@ 0x4c
 801cbf8:	6810      	ldr	r0, [r2, #0]
 801cbfa:	f89d a070 	ldrb.w	sl, [sp, #112]	@ 0x70
 801cbfe:	4f6d      	ldr	r7, [pc, #436]	@ (801cdb4 <_ZN8touchgfx8LCD16bpp19blitCopyL8_ARGB8888EPKhS2_RKNS_4RectES5_h+0x1c4>)
 801cc00:	4688      	mov	r8, r1
 801cc02:	6851      	ldr	r1, [r2, #4]
 801cc04:	ac0e      	add	r4, sp, #56	@ 0x38
 801cc06:	c403      	stmia	r4!, {r0, r1}
 801cc08:	6818      	ldr	r0, [r3, #0]
 801cc0a:	6859      	ldr	r1, [r3, #4]
 801cc0c:	ac10      	add	r4, sp, #64	@ 0x40
 801cc0e:	4616      	mov	r6, r2
 801cc10:	c403      	stmia	r4!, {r0, r1}
 801cc12:	a80e      	add	r0, sp, #56	@ 0x38
 801cc14:	f7f7 f856 	bl	8013cc4 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectE>
 801cc18:	4631      	mov	r1, r6
 801cc1a:	a810      	add	r0, sp, #64	@ 0x40
 801cc1c:	f7f7 f87a 	bl	8013d14 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectERKS1_>
 801cc20:	f9bd 2040 	ldrsh.w	r2, [sp, #64]	@ 0x40
 801cc24:	f9bd 3042 	ldrsh.w	r3, [sp, #66]	@ 0x42
 801cc28:	f8bd 103c 	ldrh.w	r1, [sp, #60]	@ 0x3c
 801cc2c:	4e62      	ldr	r6, [pc, #392]	@ (801cdb8 <_ZN8touchgfx8LCD16bpp19blitCopyL8_ARGB8888EPKhS2_RKNS_4RectES5_h+0x1c8>)
 801cc2e:	f9bd 4044 	ldrsh.w	r4, [sp, #68]	@ 0x44
 801cc32:	6830      	ldr	r0, [r6, #0]
 801cc34:	f9bd 5046 	ldrsh.w	r5, [sp, #70]	@ 0x46
 801cc38:	fb11 2103 	smlabb	r1, r1, r3, r2
 801cc3c:	4489      	add	r9, r1
 801cc3e:	f8bd 1038 	ldrh.w	r1, [sp, #56]	@ 0x38
 801cc42:	440a      	add	r2, r1
 801cc44:	f8ad 2040 	strh.w	r2, [sp, #64]	@ 0x40
 801cc48:	f8bd 203a 	ldrh.w	r2, [sp, #58]	@ 0x3a
 801cc4c:	4413      	add	r3, r2
 801cc4e:	f8ad 3042 	strh.w	r3, [sp, #66]	@ 0x42
 801cc52:	6803      	ldr	r3, [r0, #0]
 801cc54:	6b9b      	ldr	r3, [r3, #56]	@ 0x38
 801cc56:	4798      	blx	r3
 801cc58:	f010 0f80 	tst.w	r0, #128	@ 0x80
 801cc5c:	6830      	ldr	r0, [r6, #0]
 801cc5e:	d01d      	beq.n	801cc9c <_ZN8touchgfx8LCD16bpp19blitCopyL8_ARGB8888EPKhS2_RKNS_4RectES5_h+0xac>
 801cc60:	2200      	movs	r2, #0
 801cc62:	6801      	ldr	r1, [r0, #0]
 801cc64:	f8bd 3040 	ldrh.w	r3, [sp, #64]	@ 0x40
 801cc68:	e9cd 2208 	strd	r2, r2, [sp, #32]
 801cc6c:	220b      	movs	r2, #11
 801cc6e:	9207      	str	r2, [sp, #28]
 801cc70:	883a      	ldrh	r2, [r7, #0]
 801cc72:	9206      	str	r2, [sp, #24]
 801cc74:	2201      	movs	r2, #1
 801cc76:	e9cd a204 	strd	sl, r2, [sp, #16]
 801cc7a:	f8bd 203c 	ldrh.w	r2, [sp, #60]	@ 0x3c
 801cc7e:	9203      	str	r2, [sp, #12]
 801cc80:	b2a4      	uxth	r4, r4
 801cc82:	f8bd 2042 	ldrh.w	r2, [sp, #66]	@ 0x42
 801cc86:	9200      	str	r2, [sp, #0]
 801cc88:	b2ad      	uxth	r5, r5
 801cc8a:	9502      	str	r5, [sp, #8]
 801cc8c:	9401      	str	r4, [sp, #4]
 801cc8e:	6bcc      	ldr	r4, [r1, #60]	@ 0x3c
 801cc90:	4642      	mov	r2, r8
 801cc92:	4649      	mov	r1, r9
 801cc94:	47a0      	blx	r4
 801cc96:	b013      	add	sp, #76	@ 0x4c
 801cc98:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 801cc9c:	6803      	ldr	r3, [r0, #0]
 801cc9e:	6a9b      	ldr	r3, [r3, #40]	@ 0x28
 801cca0:	4798      	blx	r3
 801cca2:	883b      	ldrh	r3, [r7, #0]
 801cca4:	f9bd 2042 	ldrsh.w	r2, [sp, #66]	@ 0x42
 801cca8:	f9bd 1040 	ldrsh.w	r1, [sp, #64]	@ 0x40
 801ccac:	fb03 1202 	mla	r2, r3, r2, r1
 801ccb0:	435d      	muls	r5, r3
 801ccb2:	eb00 0042 	add.w	r0, r0, r2, lsl #1
 801ccb6:	eb00 0245 	add.w	r2, r0, r5, lsl #1
 801ccba:	920c      	str	r2, [sp, #48]	@ 0x30
 801ccbc:	f9bd 203c 	ldrsh.w	r2, [sp, #60]	@ 0x3c
 801ccc0:	1b12      	subs	r2, r2, r4
 801ccc2:	920d      	str	r2, [sp, #52]	@ 0x34
 801ccc4:	0062      	lsls	r2, r4, #1
 801ccc6:	1b1c      	subs	r4, r3, r4
 801ccc8:	0063      	lsls	r3, r4, #1
 801ccca:	920a      	str	r2, [sp, #40]	@ 0x28
 801cccc:	930b      	str	r3, [sp, #44]	@ 0x2c
 801ccce:	f04f 0e04 	mov.w	lr, #4
 801ccd2:	9b0c      	ldr	r3, [sp, #48]	@ 0x30
 801ccd4:	4298      	cmp	r0, r3
 801ccd6:	d266      	bcs.n	801cda6 <_ZN8touchgfx8LCD16bpp19blitCopyL8_ARGB8888EPKhS2_RKNS_4RectES5_h+0x1b6>
 801ccd8:	9b0a      	ldr	r3, [sp, #40]	@ 0x28
 801ccda:	eb00 0b03 	add.w	fp, r0, r3
 801ccde:	4558      	cmp	r0, fp
 801cce0:	d25c      	bcs.n	801cd9c <_ZN8touchgfx8LCD16bpp19blitCopyL8_ARGB8888EPKhS2_RKNS_4RectES5_h+0x1ac>
 801cce2:	f819 3b01 	ldrb.w	r3, [r9], #1
 801cce6:	fb1e e303 	smlabb	r3, lr, r3, lr
 801ccea:	f858 2003 	ldr.w	r2, [r8, r3]
 801ccee:	0e11      	lsrs	r1, r2, #24
 801ccf0:	d012      	beq.n	801cd18 <_ZN8touchgfx8LCD16bpp19blitCopyL8_ARGB8888EPKhS2_RKNS_4RectES5_h+0x128>
 801ccf2:	29ff      	cmp	r1, #255	@ 0xff
 801ccf4:	ea4f 2712 	mov.w	r7, r2, lsr #8
 801ccf8:	d110      	bne.n	801cd1c <_ZN8touchgfx8LCD16bpp19blitCopyL8_ARGB8888EPKhS2_RKNS_4RectES5_h+0x12c>
 801ccfa:	f1ba 0fff 	cmp.w	sl, #255	@ 0xff
 801ccfe:	d10d      	bne.n	801cd1c <_ZN8touchgfx8LCD16bpp19blitCopyL8_ARGB8888EPKhS2_RKNS_4RectES5_h+0x12c>
 801cd00:	0953      	lsrs	r3, r2, #5
 801cd02:	f427 67ff 	bic.w	r7, r7, #2040	@ 0x7f8
 801cd06:	f403 63fc 	and.w	r3, r3, #2016	@ 0x7e0
 801cd0a:	f027 0707 	bic.w	r7, r7, #7
 801cd0e:	431f      	orrs	r7, r3
 801cd10:	f3c2 02c4 	ubfx	r2, r2, #3, #5
 801cd14:	433a      	orrs	r2, r7
 801cd16:	8002      	strh	r2, [r0, #0]
 801cd18:	3002      	adds	r0, #2
 801cd1a:	e7e0      	b.n	801ccde <_ZN8touchgfx8LCD16bpp19blitCopyL8_ARGB8888EPKhS2_RKNS_4RectES5_h+0xee>
 801cd1c:	fb0a f101 	mul.w	r1, sl, r1
 801cd20:	8806      	ldrh	r6, [r0, #0]
 801cd22:	1c4b      	adds	r3, r1, #1
 801cd24:	eb03 2321 	add.w	r3, r3, r1, asr #8
 801cd28:	1235      	asrs	r5, r6, #8
 801cd2a:	10f4      	asrs	r4, r6, #3
 801cd2c:	121b      	asrs	r3, r3, #8
 801cd2e:	00f6      	lsls	r6, r6, #3
 801cd30:	b299      	uxth	r1, r3
 801cd32:	f3c2 4c07 	ubfx	ip, r2, #16, #8
 801cd36:	f005 05f8 	and.w	r5, r5, #248	@ 0xf8
 801cd3a:	b2f6      	uxtb	r6, r6
 801cd3c:	43db      	mvns	r3, r3
 801cd3e:	b2d2      	uxtb	r2, r2
 801cd40:	b2db      	uxtb	r3, r3
 801cd42:	fb1c fc01 	smulbb	ip, ip, r1
 801cd46:	ea45 1555 	orr.w	r5, r5, r5, lsr #5
 801cd4a:	ea46 1656 	orr.w	r6, r6, r6, lsr #5
 801cd4e:	fb12 f201 	smulbb	r2, r2, r1
 801cd52:	fb05 c503 	mla	r5, r5, r3, ip
 801cd56:	f004 04fc 	and.w	r4, r4, #252	@ 0xfc
 801cd5a:	b2ff      	uxtb	r7, r7
 801cd5c:	fb06 2203 	mla	r2, r6, r3, r2
 801cd60:	b2ad      	uxth	r5, r5
 801cd62:	fb17 f701 	smulbb	r7, r7, r1
 801cd66:	b292      	uxth	r2, r2
 801cd68:	ea44 1494 	orr.w	r4, r4, r4, lsr #6
 801cd6c:	fb04 7403 	mla	r4, r4, r3, r7
 801cd70:	f105 0c01 	add.w	ip, r5, #1
 801cd74:	1c57      	adds	r7, r2, #1
 801cd76:	eb0c 2515 	add.w	r5, ip, r5, lsr #8
 801cd7a:	eb07 2712 	add.w	r7, r7, r2, lsr #8
 801cd7e:	b2a4      	uxth	r4, r4
 801cd80:	f3c7 27c4 	ubfx	r7, r7, #11, #5
 801cd84:	f405 4578 	and.w	r5, r5, #63488	@ 0xf800
 801cd88:	433d      	orrs	r5, r7
 801cd8a:	1c67      	adds	r7, r4, #1
 801cd8c:	eb07 2414 	add.w	r4, r7, r4, lsr #8
 801cd90:	0964      	lsrs	r4, r4, #5
 801cd92:	f404 64fc 	and.w	r4, r4, #2016	@ 0x7e0
 801cd96:	4325      	orrs	r5, r4
 801cd98:	8005      	strh	r5, [r0, #0]
 801cd9a:	e7bd      	b.n	801cd18 <_ZN8touchgfx8LCD16bpp19blitCopyL8_ARGB8888EPKhS2_RKNS_4RectES5_h+0x128>
 801cd9c:	9b0b      	ldr	r3, [sp, #44]	@ 0x2c
 801cd9e:	4418      	add	r0, r3
 801cda0:	9b0d      	ldr	r3, [sp, #52]	@ 0x34
 801cda2:	4499      	add	r9, r3
 801cda4:	e795      	b.n	801ccd2 <_ZN8touchgfx8LCD16bpp19blitCopyL8_ARGB8888EPKhS2_RKNS_4RectES5_h+0xe2>
 801cda6:	4b04      	ldr	r3, [pc, #16]	@ (801cdb8 <_ZN8touchgfx8LCD16bpp19blitCopyL8_ARGB8888EPKhS2_RKNS_4RectES5_h+0x1c8>)
 801cda8:	6818      	ldr	r0, [r3, #0]
 801cdaa:	6803      	ldr	r3, [r0, #0]
 801cdac:	6adb      	ldr	r3, [r3, #44]	@ 0x2c
 801cdae:	4798      	blx	r3
 801cdb0:	e771      	b.n	801cc96 <_ZN8touchgfx8LCD16bpp19blitCopyL8_ARGB8888EPKhS2_RKNS_4RectES5_h+0xa6>
 801cdb2:	bf00      	nop
 801cdb4:	20002fa2 	.word	0x20002fa2
 801cdb8:	20002fa8 	.word	0x20002fa8

0801cdbc <_ZN8touchgfx8LCD16bpp17blitCopyL8_RGB565EPKhS2_RKNS_4RectES5_h>:
 801cdbc:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 801cdc0:	b087      	sub	sp, #28
 801cdc2:	4680      	mov	r8, r0
 801cdc4:	f89d 6040 	ldrb.w	r6, [sp, #64]	@ 0x40
 801cdc8:	460d      	mov	r5, r1
 801cdca:	4614      	mov	r4, r2
 801cdcc:	2e00      	cmp	r6, #0
 801cdce:	f000 80b9 	beq.w	801cf44 <_ZN8touchgfx8LCD16bpp17blitCopyL8_RGB565EPKhS2_RKNS_4RectES5_h+0x188>
 801cdd2:	6810      	ldr	r0, [r2, #0]
 801cdd4:	6851      	ldr	r1, [r2, #4]
 801cdd6:	af02      	add	r7, sp, #8
 801cdd8:	c703      	stmia	r7!, {r0, r1}
 801cdda:	6818      	ldr	r0, [r3, #0]
 801cddc:	6859      	ldr	r1, [r3, #4]
 801cdde:	af04      	add	r7, sp, #16
 801cde0:	c703      	stmia	r7!, {r0, r1}
 801cde2:	a802      	add	r0, sp, #8
 801cde4:	f7f6 ff6e 	bl	8013cc4 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectE>
 801cde8:	4621      	mov	r1, r4
 801cdea:	a804      	add	r0, sp, #16
 801cdec:	f7f6 ff92 	bl	8013d14 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectERKS1_>
 801cdf0:	f9bd 2010 	ldrsh.w	r2, [sp, #16]
 801cdf4:	f9bd 3012 	ldrsh.w	r3, [sp, #18]
 801cdf8:	f8bd 400c 	ldrh.w	r4, [sp, #12]
 801cdfc:	f9bd 7016 	ldrsh.w	r7, [sp, #22]
 801ce00:	fb14 2103 	smlabb	r1, r4, r3, r2
 801ce04:	eb08 0401 	add.w	r4, r8, r1
 801ce08:	f8bd 1008 	ldrh.w	r1, [sp, #8]
 801ce0c:	f9bd 8014 	ldrsh.w	r8, [sp, #20]
 801ce10:	440a      	add	r2, r1
 801ce12:	f8ad 2010 	strh.w	r2, [sp, #16]
 801ce16:	f8bd 200a 	ldrh.w	r2, [sp, #10]
 801ce1a:	4413      	add	r3, r2
 801ce1c:	f8ad 3012 	strh.w	r3, [sp, #18]
 801ce20:	4b4a      	ldr	r3, [pc, #296]	@ (801cf4c <_ZN8touchgfx8LCD16bpp17blitCopyL8_RGB565EPKhS2_RKNS_4RectES5_h+0x190>)
 801ce22:	6818      	ldr	r0, [r3, #0]
 801ce24:	6803      	ldr	r3, [r0, #0]
 801ce26:	6a9b      	ldr	r3, [r3, #40]	@ 0x28
 801ce28:	4798      	blx	r3
 801ce2a:	4b49      	ldr	r3, [pc, #292]	@ (801cf50 <_ZN8touchgfx8LCD16bpp17blitCopyL8_RGB565EPKhS2_RKNS_4RectES5_h+0x194>)
 801ce2c:	f9bd 1012 	ldrsh.w	r1, [sp, #18]
 801ce30:	881a      	ldrh	r2, [r3, #0]
 801ce32:	f9bd c010 	ldrsh.w	ip, [sp, #16]
 801ce36:	2eff      	cmp	r6, #255	@ 0xff
 801ce38:	fb02 c101 	mla	r1, r2, r1, ip
 801ce3c:	eb00 0041 	add.w	r0, r0, r1, lsl #1
 801ce40:	fb02 f207 	mul.w	r2, r2, r7
 801ce44:	f105 0104 	add.w	r1, r5, #4
 801ce48:	ea4f 0a48 	mov.w	sl, r8, lsl #1
 801ce4c:	461d      	mov	r5, r3
 801ce4e:	d05a      	beq.n	801cf06 <_ZN8touchgfx8LCD16bpp17blitCopyL8_RGB565EPKhS2_RKNS_4RectES5_h+0x14a>
 801ce50:	f1c6 0eff 	rsb	lr, r6, #255	@ 0xff
 801ce54:	eb00 0242 	add.w	r2, r0, r2, lsl #1
 801ce58:	b2b6      	uxth	r6, r6
 801ce5a:	fa1f fe8e 	uxth.w	lr, lr
 801ce5e:	9301      	str	r3, [sp, #4]
 801ce60:	4282      	cmp	r2, r0
 801ce62:	d96a      	bls.n	801cf3a <_ZN8touchgfx8LCD16bpp17blitCopyL8_RGB565EPKhS2_RKNS_4RectES5_h+0x17e>
 801ce64:	eb00 0b0a 	add.w	fp, r0, sl
 801ce68:	4583      	cmp	fp, r0
 801ce6a:	d940      	bls.n	801ceee <_ZN8touchgfx8LCD16bpp17blitCopyL8_RGB565EPKhS2_RKNS_4RectES5_h+0x132>
 801ce6c:	f814 3b01 	ldrb.w	r3, [r4], #1
 801ce70:	8805      	ldrh	r5, [r0, #0]
 801ce72:	f831 3013 	ldrh.w	r3, [r1, r3, lsl #1]
 801ce76:	122f      	asrs	r7, r5, #8
 801ce78:	ea4f 2c23 	mov.w	ip, r3, asr #8
 801ce7c:	f007 07f8 	and.w	r7, r7, #248	@ 0xf8
 801ce80:	fb17 f70e 	smulbb	r7, r7, lr
 801ce84:	ea4f 09e5 	mov.w	r9, r5, asr #3
 801ce88:	f00c 0cf8 	and.w	ip, ip, #248	@ 0xf8
 801ce8c:	00ed      	lsls	r5, r5, #3
 801ce8e:	fb0c 7c06 	mla	ip, ip, r6, r7
 801ce92:	f009 09fc 	and.w	r9, r9, #252	@ 0xfc
 801ce96:	10df      	asrs	r7, r3, #3
 801ce98:	b2ed      	uxtb	r5, r5
 801ce9a:	00db      	lsls	r3, r3, #3
 801ce9c:	fa1f fc8c 	uxth.w	ip, ip
 801cea0:	fb19 f90e 	smulbb	r9, r9, lr
 801cea4:	f007 07fc 	and.w	r7, r7, #252	@ 0xfc
 801cea8:	b2db      	uxtb	r3, r3
 801ceaa:	fb15 f50e 	smulbb	r5, r5, lr
 801ceae:	fb07 9706 	mla	r7, r7, r6, r9
 801ceb2:	fb03 5306 	mla	r3, r3, r6, r5
 801ceb6:	f10c 0901 	add.w	r9, ip, #1
 801ceba:	b29b      	uxth	r3, r3
 801cebc:	eb09 2c1c 	add.w	ip, r9, ip, lsr #8
 801cec0:	f40c 4978 	and.w	r9, ip, #63488	@ 0xf800
 801cec4:	f103 0c01 	add.w	ip, r3, #1
 801cec8:	eb0c 2c13 	add.w	ip, ip, r3, lsr #8
 801cecc:	b2bf      	uxth	r7, r7
 801cece:	f3cc 2cc4 	ubfx	ip, ip, #11, #5
 801ced2:	ea4c 0c09 	orr.w	ip, ip, r9
 801ced6:	f107 0901 	add.w	r9, r7, #1
 801ceda:	eb09 2717 	add.w	r7, r9, r7, lsr #8
 801cede:	097f      	lsrs	r7, r7, #5
 801cee0:	f407 67fc 	and.w	r7, r7, #2016	@ 0x7e0
 801cee4:	ea4c 0c07 	orr.w	ip, ip, r7
 801cee8:	f820 cb02 	strh.w	ip, [r0], #2
 801ceec:	e7bc      	b.n	801ce68 <_ZN8touchgfx8LCD16bpp17blitCopyL8_RGB565EPKhS2_RKNS_4RectES5_h+0xac>
 801ceee:	9b01      	ldr	r3, [sp, #4]
 801cef0:	881b      	ldrh	r3, [r3, #0]
 801cef2:	eba3 0308 	sub.w	r3, r3, r8
 801cef6:	eb00 0043 	add.w	r0, r0, r3, lsl #1
 801cefa:	f9bd 300c 	ldrsh.w	r3, [sp, #12]
 801cefe:	eba3 0308 	sub.w	r3, r3, r8
 801cf02:	441c      	add	r4, r3
 801cf04:	e7ac      	b.n	801ce60 <_ZN8touchgfx8LCD16bpp17blitCopyL8_RGB565EPKhS2_RKNS_4RectES5_h+0xa4>
 801cf06:	eb00 0242 	add.w	r2, r0, r2, lsl #1
 801cf0a:	4282      	cmp	r2, r0
 801cf0c:	d915      	bls.n	801cf3a <_ZN8touchgfx8LCD16bpp17blitCopyL8_RGB565EPKhS2_RKNS_4RectES5_h+0x17e>
 801cf0e:	eb00 060a 	add.w	r6, r0, sl
 801cf12:	4286      	cmp	r6, r0
 801cf14:	d906      	bls.n	801cf24 <_ZN8touchgfx8LCD16bpp17blitCopyL8_RGB565EPKhS2_RKNS_4RectES5_h+0x168>
 801cf16:	f814 3b01 	ldrb.w	r3, [r4], #1
 801cf1a:	f831 3013 	ldrh.w	r3, [r1, r3, lsl #1]
 801cf1e:	f820 3b02 	strh.w	r3, [r0], #2
 801cf22:	e7f6      	b.n	801cf12 <_ZN8touchgfx8LCD16bpp17blitCopyL8_RGB565EPKhS2_RKNS_4RectES5_h+0x156>
 801cf24:	882b      	ldrh	r3, [r5, #0]
 801cf26:	eba3 0308 	sub.w	r3, r3, r8
 801cf2a:	eb00 0043 	add.w	r0, r0, r3, lsl #1
 801cf2e:	f9bd 300c 	ldrsh.w	r3, [sp, #12]
 801cf32:	eba3 0308 	sub.w	r3, r3, r8
 801cf36:	441c      	add	r4, r3
 801cf38:	e7e7      	b.n	801cf0a <_ZN8touchgfx8LCD16bpp17blitCopyL8_RGB565EPKhS2_RKNS_4RectES5_h+0x14e>
 801cf3a:	4b04      	ldr	r3, [pc, #16]	@ (801cf4c <_ZN8touchgfx8LCD16bpp17blitCopyL8_RGB565EPKhS2_RKNS_4RectES5_h+0x190>)
 801cf3c:	6818      	ldr	r0, [r3, #0]
 801cf3e:	6803      	ldr	r3, [r0, #0]
 801cf40:	6adb      	ldr	r3, [r3, #44]	@ 0x2c
 801cf42:	4798      	blx	r3
 801cf44:	b007      	add	sp, #28
 801cf46:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 801cf4a:	bf00      	nop
 801cf4c:	20002fa8 	.word	0x20002fa8
 801cf50:	20002fa2 	.word	0x20002fa2

0801cf54 <_ZN8touchgfx8LCD16bpp17blitCopyL8_RGB888EPKhS2_RKNS_4RectES5_h>:
 801cf54:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 801cf58:	b091      	sub	sp, #68	@ 0x44
 801cf5a:	4680      	mov	r8, r0
 801cf5c:	f89d 5068 	ldrb.w	r5, [sp, #104]	@ 0x68
 801cf60:	460f      	mov	r7, r1
 801cf62:	4614      	mov	r4, r2
 801cf64:	2d00      	cmp	r5, #0
 801cf66:	d051      	beq.n	801d00c <_ZN8touchgfx8LCD16bpp17blitCopyL8_RGB888EPKhS2_RKNS_4RectES5_h+0xb8>
 801cf68:	6810      	ldr	r0, [r2, #0]
 801cf6a:	6851      	ldr	r1, [r2, #4]
 801cf6c:	f8df 9200 	ldr.w	r9, [pc, #512]	@ 801d170 <_ZN8touchgfx8LCD16bpp17blitCopyL8_RGB888EPKhS2_RKNS_4RectES5_h+0x21c>
 801cf70:	ae0c      	add	r6, sp, #48	@ 0x30
 801cf72:	c603      	stmia	r6!, {r0, r1}
 801cf74:	6818      	ldr	r0, [r3, #0]
 801cf76:	6859      	ldr	r1, [r3, #4]
 801cf78:	ae0e      	add	r6, sp, #56	@ 0x38
 801cf7a:	c603      	stmia	r6!, {r0, r1}
 801cf7c:	a80c      	add	r0, sp, #48	@ 0x30
 801cf7e:	f7f6 fea1 	bl	8013cc4 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectE>
 801cf82:	4621      	mov	r1, r4
 801cf84:	a80e      	add	r0, sp, #56	@ 0x38
 801cf86:	f7f6 fec5 	bl	8013d14 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectERKS1_>
 801cf8a:	f9bd 2038 	ldrsh.w	r2, [sp, #56]	@ 0x38
 801cf8e:	f9bd 303a 	ldrsh.w	r3, [sp, #58]	@ 0x3a
 801cf92:	f8bd 1034 	ldrh.w	r1, [sp, #52]	@ 0x34
 801cf96:	f8d9 0000 	ldr.w	r0, [r9]
 801cf9a:	f9bd 603c 	ldrsh.w	r6, [sp, #60]	@ 0x3c
 801cf9e:	f9bd a03e 	ldrsh.w	sl, [sp, #62]	@ 0x3e
 801cfa2:	fb11 2103 	smlabb	r1, r1, r3, r2
 801cfa6:	eb08 0401 	add.w	r4, r8, r1
 801cfaa:	f8bd 1030 	ldrh.w	r1, [sp, #48]	@ 0x30
 801cfae:	f8df 81c4 	ldr.w	r8, [pc, #452]	@ 801d174 <_ZN8touchgfx8LCD16bpp17blitCopyL8_RGB888EPKhS2_RKNS_4RectES5_h+0x220>
 801cfb2:	440a      	add	r2, r1
 801cfb4:	f8ad 2038 	strh.w	r2, [sp, #56]	@ 0x38
 801cfb8:	f8bd 2032 	ldrh.w	r2, [sp, #50]	@ 0x32
 801cfbc:	4413      	add	r3, r2
 801cfbe:	f8ad 303a 	strh.w	r3, [sp, #58]	@ 0x3a
 801cfc2:	6803      	ldr	r3, [r0, #0]
 801cfc4:	6b9b      	ldr	r3, [r3, #56]	@ 0x38
 801cfc6:	4798      	blx	r3
 801cfc8:	f010 0f80 	tst.w	r0, #128	@ 0x80
 801cfcc:	f8d9 0000 	ldr.w	r0, [r9]
 801cfd0:	d01f      	beq.n	801d012 <_ZN8touchgfx8LCD16bpp17blitCopyL8_RGB888EPKhS2_RKNS_4RectES5_h+0xbe>
 801cfd2:	2200      	movs	r2, #0
 801cfd4:	6801      	ldr	r1, [r0, #0]
 801cfd6:	f8bd 3038 	ldrh.w	r3, [sp, #56]	@ 0x38
 801cfda:	e9cd 2208 	strd	r2, r2, [sp, #32]
 801cfde:	220b      	movs	r2, #11
 801cfe0:	9207      	str	r2, [sp, #28]
 801cfe2:	f8b8 2000 	ldrh.w	r2, [r8]
 801cfe6:	9206      	str	r2, [sp, #24]
 801cfe8:	2201      	movs	r2, #1
 801cfea:	e9cd 5204 	strd	r5, r2, [sp, #16]
 801cfee:	f8bd 2034 	ldrh.w	r2, [sp, #52]	@ 0x34
 801cff2:	9203      	str	r2, [sp, #12]
 801cff4:	fa1f f28a 	uxth.w	r2, sl
 801cff8:	9202      	str	r2, [sp, #8]
 801cffa:	b2b6      	uxth	r6, r6
 801cffc:	f8bd 203a 	ldrh.w	r2, [sp, #58]	@ 0x3a
 801d000:	9200      	str	r2, [sp, #0]
 801d002:	9601      	str	r6, [sp, #4]
 801d004:	6bcd      	ldr	r5, [r1, #60]	@ 0x3c
 801d006:	463a      	mov	r2, r7
 801d008:	4621      	mov	r1, r4
 801d00a:	47a8      	blx	r5
 801d00c:	b011      	add	sp, #68	@ 0x44
 801d00e:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 801d012:	6803      	ldr	r3, [r0, #0]
 801d014:	6a9b      	ldr	r3, [r3, #40]	@ 0x28
 801d016:	4798      	blx	r3
 801d018:	f8b8 2000 	ldrh.w	r2, [r8]
 801d01c:	f9bd 303a 	ldrsh.w	r3, [sp, #58]	@ 0x3a
 801d020:	f9bd 1038 	ldrsh.w	r1, [sp, #56]	@ 0x38
 801d024:	2dff      	cmp	r5, #255	@ 0xff
 801d026:	fb02 1303 	mla	r3, r2, r3, r1
 801d02a:	eb00 0043 	add.w	r0, r0, r3, lsl #1
 801d02e:	ea4f 0946 	mov.w	r9, r6, lsl #1
 801d032:	fb0a fa02 	mul.w	sl, sl, r2
 801d036:	d062      	beq.n	801d0fe <_ZN8touchgfx8LCD16bpp17blitCopyL8_RGB888EPKhS2_RKNS_4RectES5_h+0x1aa>
 801d038:	ea6f 0c05 	mvn.w	ip, r5
 801d03c:	eb00 034a 	add.w	r3, r0, sl, lsl #1
 801d040:	930a      	str	r3, [sp, #40]	@ 0x28
 801d042:	b2ad      	uxth	r5, r5
 801d044:	fa5f fc8c 	uxtb.w	ip, ip
 801d048:	f8cd 802c 	str.w	r8, [sp, #44]	@ 0x2c
 801d04c:	9b0a      	ldr	r3, [sp, #40]	@ 0x28
 801d04e:	4298      	cmp	r0, r3
 801d050:	f080 8085 	bcs.w	801d15e <_ZN8touchgfx8LCD16bpp17blitCopyL8_RGB888EPKhS2_RKNS_4RectES5_h+0x20a>
 801d054:	eb00 0b09 	add.w	fp, r0, r9
 801d058:	4558      	cmp	r0, fp
 801d05a:	d246      	bcs.n	801d0ea <_ZN8touchgfx8LCD16bpp17blitCopyL8_RGB888EPKhS2_RKNS_4RectES5_h+0x196>
 801d05c:	f814 eb01 	ldrb.w	lr, [r4], #1
 801d060:	2303      	movs	r3, #3
 801d062:	2204      	movs	r2, #4
 801d064:	fb13 2e0e 	smlabb	lr, r3, lr, r2
 801d068:	eb07 0a0e 	add.w	sl, r7, lr
 801d06c:	8803      	ldrh	r3, [r0, #0]
 801d06e:	f89a 8002 	ldrb.w	r8, [sl, #2]
 801d072:	f817 e00e 	ldrb.w	lr, [r7, lr]
 801d076:	1219      	asrs	r1, r3, #8
 801d078:	f001 01f8 	and.w	r1, r1, #248	@ 0xf8
 801d07c:	fb18 f805 	smulbb	r8, r8, r5
 801d080:	ea41 1151 	orr.w	r1, r1, r1, lsr #5
 801d084:	10da      	asrs	r2, r3, #3
 801d086:	fb01 810c 	mla	r1, r1, ip, r8
 801d08a:	00db      	lsls	r3, r3, #3
 801d08c:	f89a 8001 	ldrb.w	r8, [sl, #1]
 801d090:	f002 02fc 	and.w	r2, r2, #252	@ 0xfc
 801d094:	b2db      	uxtb	r3, r3
 801d096:	fb18 f805 	smulbb	r8, r8, r5
 801d09a:	fb1e fe05 	smulbb	lr, lr, r5
 801d09e:	ea42 1292 	orr.w	r2, r2, r2, lsr #6
 801d0a2:	ea43 1353 	orr.w	r3, r3, r3, lsr #5
 801d0a6:	b289      	uxth	r1, r1
 801d0a8:	fb02 820c 	mla	r2, r2, ip, r8
 801d0ac:	fb03 e30c 	mla	r3, r3, ip, lr
 801d0b0:	b292      	uxth	r2, r2
 801d0b2:	b29b      	uxth	r3, r3
 801d0b4:	f101 0801 	add.w	r8, r1, #1
 801d0b8:	eb08 2111 	add.w	r1, r8, r1, lsr #8
 801d0bc:	f103 0e01 	add.w	lr, r3, #1
 801d0c0:	f102 0801 	add.w	r8, r2, #1
 801d0c4:	eb0e 2e13 	add.w	lr, lr, r3, lsr #8
 801d0c8:	eb08 2812 	add.w	r8, r8, r2, lsr #8
 801d0cc:	f401 4178 	and.w	r1, r1, #63488	@ 0xf800
 801d0d0:	f3ce 2ec4 	ubfx	lr, lr, #11, #5
 801d0d4:	ea4f 1858 	mov.w	r8, r8, lsr #5
 801d0d8:	ea4e 0101 	orr.w	r1, lr, r1
 801d0dc:	f408 68fc 	and.w	r8, r8, #2016	@ 0x7e0
 801d0e0:	ea41 0108 	orr.w	r1, r1, r8
 801d0e4:	f820 1b02 	strh.w	r1, [r0], #2
 801d0e8:	e7b6      	b.n	801d058 <_ZN8touchgfx8LCD16bpp17blitCopyL8_RGB888EPKhS2_RKNS_4RectES5_h+0x104>
 801d0ea:	9b0b      	ldr	r3, [sp, #44]	@ 0x2c
 801d0ec:	881b      	ldrh	r3, [r3, #0]
 801d0ee:	1b9b      	subs	r3, r3, r6
 801d0f0:	eb00 0043 	add.w	r0, r0, r3, lsl #1
 801d0f4:	f9bd 3034 	ldrsh.w	r3, [sp, #52]	@ 0x34
 801d0f8:	1b9b      	subs	r3, r3, r6
 801d0fa:	441c      	add	r4, r3
 801d0fc:	e7a6      	b.n	801d04c <_ZN8touchgfx8LCD16bpp17blitCopyL8_RGB888EPKhS2_RKNS_4RectES5_h+0xf8>
 801d0fe:	491b      	ldr	r1, [pc, #108]	@ (801d16c <_ZN8touchgfx8LCD16bpp17blitCopyL8_RGB888EPKhS2_RKNS_4RectES5_h+0x218>)
 801d100:	eb00 0a4a 	add.w	sl, r0, sl, lsl #1
 801d104:	2203      	movs	r2, #3
 801d106:	2504      	movs	r5, #4
 801d108:	4550      	cmp	r0, sl
 801d10a:	d228      	bcs.n	801d15e <_ZN8touchgfx8LCD16bpp17blitCopyL8_RGB888EPKhS2_RKNS_4RectES5_h+0x20a>
 801d10c:	eb00 0c09 	add.w	ip, r0, r9
 801d110:	4560      	cmp	r0, ip
 801d112:	4623      	mov	r3, r4
 801d114:	d219      	bcs.n	801d14a <_ZN8touchgfx8LCD16bpp17blitCopyL8_RGB888EPKhS2_RKNS_4RectES5_h+0x1f6>
 801d116:	f893 e000 	ldrb.w	lr, [r3]
 801d11a:	fb12 5e0e 	smlabb	lr, r2, lr, r5
 801d11e:	eb07 0b0e 	add.w	fp, r7, lr
 801d122:	f817 e00e 	ldrb.w	lr, [r7, lr]
 801d126:	f89b 3002 	ldrb.w	r3, [fp, #2]
 801d12a:	f89b b001 	ldrb.w	fp, [fp, #1]
 801d12e:	ea4f 0bcb 	mov.w	fp, fp, lsl #3
 801d132:	ea01 2303 	and.w	r3, r1, r3, lsl #8
 801d136:	f40b 6bfc 	and.w	fp, fp, #2016	@ 0x7e0
 801d13a:	ea43 030b 	orr.w	r3, r3, fp
 801d13e:	ea43 03de 	orr.w	r3, r3, lr, lsr #3
 801d142:	3401      	adds	r4, #1
 801d144:	f820 3b02 	strh.w	r3, [r0], #2
 801d148:	e7e2      	b.n	801d110 <_ZN8touchgfx8LCD16bpp17blitCopyL8_RGB888EPKhS2_RKNS_4RectES5_h+0x1bc>
 801d14a:	f8b8 3000 	ldrh.w	r3, [r8]
 801d14e:	1b9b      	subs	r3, r3, r6
 801d150:	eb00 0043 	add.w	r0, r0, r3, lsl #1
 801d154:	f9bd 3034 	ldrsh.w	r3, [sp, #52]	@ 0x34
 801d158:	1b9b      	subs	r3, r3, r6
 801d15a:	441c      	add	r4, r3
 801d15c:	e7d4      	b.n	801d108 <_ZN8touchgfx8LCD16bpp17blitCopyL8_RGB888EPKhS2_RKNS_4RectES5_h+0x1b4>
 801d15e:	4b04      	ldr	r3, [pc, #16]	@ (801d170 <_ZN8touchgfx8LCD16bpp17blitCopyL8_RGB888EPKhS2_RKNS_4RectES5_h+0x21c>)
 801d160:	6818      	ldr	r0, [r3, #0]
 801d162:	6803      	ldr	r3, [r0, #0]
 801d164:	6adb      	ldr	r3, [r3, #44]	@ 0x2c
 801d166:	4798      	blx	r3
 801d168:	e750      	b.n	801d00c <_ZN8touchgfx8LCD16bpp17blitCopyL8_RGB888EPKhS2_RKNS_4RectES5_h+0xb8>
 801d16a:	bf00      	nop
 801d16c:	fffff800 	.word	0xfffff800
 801d170:	20002fa8 	.word	0x20002fa8
 801d174:	20002fa2 	.word	0x20002fa2

0801d178 <_ZN8touchgfx8LCD16bpp10blitCopyL8EPKhS2_RKNS_4RectES5_h>:
 801d178:	b4f0      	push	{r4, r5, r6, r7}
 801d17a:	460c      	mov	r4, r1
 801d17c:	4611      	mov	r1, r2
 801d17e:	f89d 5014 	ldrb.w	r5, [sp, #20]
 801d182:	780f      	ldrb	r7, [r1, #0]
 801d184:	784e      	ldrb	r6, [r1, #1]
 801d186:	2f01      	cmp	r7, #1
 801d188:	461a      	mov	r2, r3
 801d18a:	9b04      	ldr	r3, [sp, #16]
 801d18c:	d038      	beq.n	801d200 <_ZN8touchgfx8LCD16bpp10blitCopyL8EPKhS2_RKNS_4RectES5_h+0x88>
 801d18e:	d31f      	bcc.n	801d1d0 <_ZN8touchgfx8LCD16bpp10blitCopyL8EPKhS2_RKNS_4RectES5_h+0x58>
 801d190:	2f02      	cmp	r7, #2
 801d192:	d14d      	bne.n	801d230 <_ZN8touchgfx8LCD16bpp10blitCopyL8EPKhS2_RKNS_4RectES5_h+0xb8>
 801d194:	2e03      	cmp	r6, #3
 801d196:	d84b      	bhi.n	801d230 <_ZN8touchgfx8LCD16bpp10blitCopyL8EPKhS2_RKNS_4RectES5_h+0xb8>
 801d198:	e8df f006 	tbb	[pc, r6]
 801d19c:	17140702 	.word	0x17140702
 801d1a0:	9504      	str	r5, [sp, #16]
 801d1a2:	4620      	mov	r0, r4
 801d1a4:	bcf0      	pop	{r4, r5, r6, r7}
 801d1a6:	f7ff be09 	b.w	801cdbc <_ZN8touchgfx8LCD16bpp17blitCopyL8_RGB565EPKhS2_RKNS_4RectES5_h>
 801d1aa:	6fc0      	ldr	r0, [r0, #124]	@ 0x7c
 801d1ac:	2800      	cmp	r0, #0
 801d1ae:	d03f      	beq.n	801d230 <_ZN8touchgfx8LCD16bpp10blitCopyL8EPKhS2_RKNS_4RectES5_h+0xb8>
 801d1b0:	6806      	ldr	r6, [r0, #0]
 801d1b2:	e9cd 3504 	strd	r3, r5, [sp, #16]
 801d1b6:	68b5      	ldr	r5, [r6, #8]
 801d1b8:	4613      	mov	r3, r2
 801d1ba:	46ac      	mov	ip, r5
 801d1bc:	460a      	mov	r2, r1
 801d1be:	4621      	mov	r1, r4
 801d1c0:	bcf0      	pop	{r4, r5, r6, r7}
 801d1c2:	4760      	bx	ip
 801d1c4:	f8d0 0080 	ldr.w	r0, [r0, #128]	@ 0x80
 801d1c8:	e7f0      	b.n	801d1ac <_ZN8touchgfx8LCD16bpp10blitCopyL8EPKhS2_RKNS_4RectES5_h+0x34>
 801d1ca:	f8d0 0084 	ldr.w	r0, [r0, #132]	@ 0x84
 801d1ce:	e7ed      	b.n	801d1ac <_ZN8touchgfx8LCD16bpp10blitCopyL8EPKhS2_RKNS_4RectES5_h+0x34>
 801d1d0:	2e03      	cmp	r6, #3
 801d1d2:	d82d      	bhi.n	801d230 <_ZN8touchgfx8LCD16bpp10blitCopyL8EPKhS2_RKNS_4RectES5_h+0xb8>
 801d1d4:	e8df f006 	tbb	[pc, r6]
 801d1d8:	110e0702 	.word	0x110e0702
 801d1dc:	9504      	str	r5, [sp, #16]
 801d1de:	4620      	mov	r0, r4
 801d1e0:	bcf0      	pop	{r4, r5, r6, r7}
 801d1e2:	f7ff bd05 	b.w	801cbf0 <_ZN8touchgfx8LCD16bpp19blitCopyL8_ARGB8888EPKhS2_RKNS_4RectES5_h>
 801d1e6:	6fc0      	ldr	r0, [r0, #124]	@ 0x7c
 801d1e8:	b310      	cbz	r0, 801d230 <_ZN8touchgfx8LCD16bpp10blitCopyL8EPKhS2_RKNS_4RectES5_h+0xb8>
 801d1ea:	6806      	ldr	r6, [r0, #0]
 801d1ec:	e9cd 3504 	strd	r3, r5, [sp, #16]
 801d1f0:	68f5      	ldr	r5, [r6, #12]
 801d1f2:	e7e1      	b.n	801d1b8 <_ZN8touchgfx8LCD16bpp10blitCopyL8EPKhS2_RKNS_4RectES5_h+0x40>
 801d1f4:	f8d0 0080 	ldr.w	r0, [r0, #128]	@ 0x80
 801d1f8:	e7f6      	b.n	801d1e8 <_ZN8touchgfx8LCD16bpp10blitCopyL8EPKhS2_RKNS_4RectES5_h+0x70>
 801d1fa:	f8d0 0084 	ldr.w	r0, [r0, #132]	@ 0x84
 801d1fe:	e7f3      	b.n	801d1e8 <_ZN8touchgfx8LCD16bpp10blitCopyL8EPKhS2_RKNS_4RectES5_h+0x70>
 801d200:	2e03      	cmp	r6, #3
 801d202:	d815      	bhi.n	801d230 <_ZN8touchgfx8LCD16bpp10blitCopyL8EPKhS2_RKNS_4RectES5_h+0xb8>
 801d204:	e8df f006 	tbb	[pc, r6]
 801d208:	110e0702 	.word	0x110e0702
 801d20c:	9504      	str	r5, [sp, #16]
 801d20e:	4620      	mov	r0, r4
 801d210:	bcf0      	pop	{r4, r5, r6, r7}
 801d212:	f7ff be9f 	b.w	801cf54 <_ZN8touchgfx8LCD16bpp17blitCopyL8_RGB888EPKhS2_RKNS_4RectES5_h>
 801d216:	6fc0      	ldr	r0, [r0, #124]	@ 0x7c
 801d218:	b150      	cbz	r0, 801d230 <_ZN8touchgfx8LCD16bpp10blitCopyL8EPKhS2_RKNS_4RectES5_h+0xb8>
 801d21a:	6806      	ldr	r6, [r0, #0]
 801d21c:	e9cd 3504 	strd	r3, r5, [sp, #16]
 801d220:	6935      	ldr	r5, [r6, #16]
 801d222:	e7c9      	b.n	801d1b8 <_ZN8touchgfx8LCD16bpp10blitCopyL8EPKhS2_RKNS_4RectES5_h+0x40>
 801d224:	f8d0 0080 	ldr.w	r0, [r0, #128]	@ 0x80
 801d228:	e7f6      	b.n	801d218 <_ZN8touchgfx8LCD16bpp10blitCopyL8EPKhS2_RKNS_4RectES5_h+0xa0>
 801d22a:	f8d0 0084 	ldr.w	r0, [r0, #132]	@ 0x84
 801d22e:	e7f3      	b.n	801d218 <_ZN8touchgfx8LCD16bpp10blitCopyL8EPKhS2_RKNS_4RectES5_h+0xa0>
 801d230:	bcf0      	pop	{r4, r5, r6, r7}
 801d232:	4770      	bx	lr

0801d234 <_ZN8touchgfx8LCD16bpp21blitCopyAlphaPerPixelEPKtPKhRKNS_4RectES7_h>:
 801d234:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 801d238:	4604      	mov	r4, r0
 801d23a:	b087      	sub	sp, #28
 801d23c:	6810      	ldr	r0, [r2, #0]
 801d23e:	f89d a040 	ldrb.w	sl, [sp, #64]	@ 0x40
 801d242:	f8df 9238 	ldr.w	r9, [pc, #568]	@ 801d47c <_ZN8touchgfx8LCD16bpp21blitCopyAlphaPerPixelEPKtPKhRKNS_4RectES7_h+0x248>
 801d246:	460e      	mov	r6, r1
 801d248:	6851      	ldr	r1, [r2, #4]
 801d24a:	ad02      	add	r5, sp, #8
 801d24c:	c503      	stmia	r5!, {r0, r1}
 801d24e:	6818      	ldr	r0, [r3, #0]
 801d250:	6859      	ldr	r1, [r3, #4]
 801d252:	ad04      	add	r5, sp, #16
 801d254:	4617      	mov	r7, r2
 801d256:	c503      	stmia	r5!, {r0, r1}
 801d258:	a802      	add	r0, sp, #8
 801d25a:	f7f6 fd33 	bl	8013cc4 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectE>
 801d25e:	4639      	mov	r1, r7
 801d260:	a804      	add	r0, sp, #16
 801d262:	f7f6 fd57 	bl	8013d14 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectERKS1_>
 801d266:	f9bd 2010 	ldrsh.w	r2, [sp, #16]
 801d26a:	f9bd 3012 	ldrsh.w	r3, [sp, #18]
 801d26e:	f8bd 100c 	ldrh.w	r1, [sp, #12]
 801d272:	f9bd 8014 	ldrsh.w	r8, [sp, #20]
 801d276:	f9bd 5016 	ldrsh.w	r5, [sp, #22]
 801d27a:	fb11 2103 	smlabb	r1, r1, r3, r2
 801d27e:	eb04 0441 	add.w	r4, r4, r1, lsl #1
 801d282:	440e      	add	r6, r1
 801d284:	f8bd 1008 	ldrh.w	r1, [sp, #8]
 801d288:	440a      	add	r2, r1
 801d28a:	f8ad 2010 	strh.w	r2, [sp, #16]
 801d28e:	f8bd 200a 	ldrh.w	r2, [sp, #10]
 801d292:	4413      	add	r3, r2
 801d294:	f8ad 3012 	strh.w	r3, [sp, #18]
 801d298:	4b77      	ldr	r3, [pc, #476]	@ (801d478 <_ZN8touchgfx8LCD16bpp21blitCopyAlphaPerPixelEPKtPKhRKNS_4RectES7_h+0x244>)
 801d29a:	6818      	ldr	r0, [r3, #0]
 801d29c:	6803      	ldr	r3, [r0, #0]
 801d29e:	6a9b      	ldr	r3, [r3, #40]	@ 0x28
 801d2a0:	4798      	blx	r3
 801d2a2:	f8b9 b000 	ldrh.w	fp, [r9]
 801d2a6:	f9bd 3012 	ldrsh.w	r3, [sp, #18]
 801d2aa:	f9bd 2010 	ldrsh.w	r2, [sp, #16]
 801d2ae:	fb0b 2303 	mla	r3, fp, r3, r2
 801d2b2:	eb00 0043 	add.w	r0, r0, r3, lsl #1
 801d2b6:	f1ba 0fff 	cmp.w	sl, #255	@ 0xff
 801d2ba:	ea4f 0348 	mov.w	r3, r8, lsl #1
 801d2be:	fb05 f50b 	mul.w	r5, r5, fp
 801d2c2:	9300      	str	r3, [sp, #0]
 801d2c4:	d069      	beq.n	801d39a <_ZN8touchgfx8LCD16bpp21blitCopyAlphaPerPixelEPKtPKhRKNS_4RectES7_h+0x166>
 801d2c6:	eb00 0b45 	add.w	fp, r0, r5, lsl #1
 801d2ca:	4558      	cmp	r0, fp
 801d2cc:	f080 80cc 	bcs.w	801d468 <_ZN8touchgfx8LCD16bpp21blitCopyAlphaPerPixelEPKtPKhRKNS_4RectES7_h+0x234>
 801d2d0:	9b00      	ldr	r3, [sp, #0]
 801d2d2:	18c3      	adds	r3, r0, r3
 801d2d4:	9301      	str	r3, [sp, #4]
 801d2d6:	4631      	mov	r1, r6
 801d2d8:	9b01      	ldr	r3, [sp, #4]
 801d2da:	4298      	cmp	r0, r3
 801d2dc:	d24f      	bcs.n	801d37e <_ZN8touchgfx8LCD16bpp21blitCopyAlphaPerPixelEPKtPKhRKNS_4RectES7_h+0x14a>
 801d2de:	f811 2b01 	ldrb.w	r2, [r1], #1
 801d2e2:	2a00      	cmp	r2, #0
 801d2e4:	d048      	beq.n	801d378 <_ZN8touchgfx8LCD16bpp21blitCopyAlphaPerPixelEPKtPKhRKNS_4RectES7_h+0x144>
 801d2e6:	fb0a f202 	mul.w	r2, sl, r2
 801d2ea:	1c53      	adds	r3, r2, #1
 801d2ec:	eb03 2312 	add.w	r3, r3, r2, lsr #8
 801d2f0:	121b      	asrs	r3, r3, #8
 801d2f2:	d041      	beq.n	801d378 <_ZN8touchgfx8LCD16bpp21blitCopyAlphaPerPixelEPKtPKhRKNS_4RectES7_h+0x144>
 801d2f4:	8802      	ldrh	r2, [r0, #0]
 801d2f6:	f8b4 c000 	ldrh.w	ip, [r4]
 801d2fa:	b29e      	uxth	r6, r3
 801d2fc:	1215      	asrs	r5, r2, #8
 801d2fe:	43db      	mvns	r3, r3
 801d300:	b2db      	uxtb	r3, r3
 801d302:	ea4f 272c 	mov.w	r7, ip, asr #8
 801d306:	f005 05f8 	and.w	r5, r5, #248	@ 0xf8
 801d30a:	fb15 f503 	smulbb	r5, r5, r3
 801d30e:	ea4f 0ee2 	mov.w	lr, r2, asr #3
 801d312:	f007 07f8 	and.w	r7, r7, #248	@ 0xf8
 801d316:	00d2      	lsls	r2, r2, #3
 801d318:	fb07 5706 	mla	r7, r7, r6, r5
 801d31c:	f00e 0efc 	and.w	lr, lr, #252	@ 0xfc
 801d320:	ea4f 05ec 	mov.w	r5, ip, asr #3
 801d324:	b2d2      	uxtb	r2, r2
 801d326:	ea4f 0ccc 	mov.w	ip, ip, lsl #3
 801d32a:	b2bf      	uxth	r7, r7
 801d32c:	fb1e fe03 	smulbb	lr, lr, r3
 801d330:	f005 05fc 	and.w	r5, r5, #252	@ 0xfc
 801d334:	fa5f fc8c 	uxtb.w	ip, ip
 801d338:	fb12 f203 	smulbb	r2, r2, r3
 801d33c:	fb05 e506 	mla	r5, r5, r6, lr
 801d340:	fb0c 2c06 	mla	ip, ip, r6, r2
 801d344:	f107 0e01 	add.w	lr, r7, #1
 801d348:	fa1f fc8c 	uxth.w	ip, ip
 801d34c:	eb0e 2717 	add.w	r7, lr, r7, lsr #8
 801d350:	f407 4e78 	and.w	lr, r7, #63488	@ 0xf800
 801d354:	f10c 0701 	add.w	r7, ip, #1
 801d358:	eb07 271c 	add.w	r7, r7, ip, lsr #8
 801d35c:	b2ad      	uxth	r5, r5
 801d35e:	f3c7 27c4 	ubfx	r7, r7, #11, #5
 801d362:	ea47 070e 	orr.w	r7, r7, lr
 801d366:	f105 0e01 	add.w	lr, r5, #1
 801d36a:	eb0e 2515 	add.w	r5, lr, r5, lsr #8
 801d36e:	096d      	lsrs	r5, r5, #5
 801d370:	f405 65fc 	and.w	r5, r5, #2016	@ 0x7e0
 801d374:	432f      	orrs	r7, r5
 801d376:	8007      	strh	r7, [r0, #0]
 801d378:	3002      	adds	r0, #2
 801d37a:	3402      	adds	r4, #2
 801d37c:	e7ac      	b.n	801d2d8 <_ZN8touchgfx8LCD16bpp21blitCopyAlphaPerPixelEPKtPKhRKNS_4RectES7_h+0xa4>
 801d37e:	f8b9 3000 	ldrh.w	r3, [r9]
 801d382:	f9bd 600c 	ldrsh.w	r6, [sp, #12]
 801d386:	eba3 0308 	sub.w	r3, r3, r8
 801d38a:	eba6 0608 	sub.w	r6, r6, r8
 801d38e:	eb04 0446 	add.w	r4, r4, r6, lsl #1
 801d392:	eb00 0043 	add.w	r0, r0, r3, lsl #1
 801d396:	440e      	add	r6, r1
 801d398:	e797      	b.n	801d2ca <_ZN8touchgfx8LCD16bpp21blitCopyAlphaPerPixelEPKtPKhRKNS_4RectES7_h+0x96>
 801d39a:	eb00 0545 	add.w	r5, r0, r5, lsl #1
 801d39e:	42a8      	cmp	r0, r5
 801d3a0:	d262      	bcs.n	801d468 <_ZN8touchgfx8LCD16bpp21blitCopyAlphaPerPixelEPKtPKhRKNS_4RectES7_h+0x234>
 801d3a2:	9b00      	ldr	r3, [sp, #0]
 801d3a4:	4631      	mov	r1, r6
 801d3a6:	eb00 0b03 	add.w	fp, r0, r3
 801d3aa:	4558      	cmp	r0, fp
 801d3ac:	d24e      	bcs.n	801d44c <_ZN8touchgfx8LCD16bpp21blitCopyAlphaPerPixelEPKtPKhRKNS_4RectES7_h+0x218>
 801d3ae:	f811 3b01 	ldrb.w	r3, [r1], #1
 801d3b2:	b12b      	cbz	r3, 801d3c0 <_ZN8touchgfx8LCD16bpp21blitCopyAlphaPerPixelEPKtPKhRKNS_4RectES7_h+0x18c>
 801d3b4:	2bff      	cmp	r3, #255	@ 0xff
 801d3b6:	f8b4 e000 	ldrh.w	lr, [r4]
 801d3ba:	d104      	bne.n	801d3c6 <_ZN8touchgfx8LCD16bpp21blitCopyAlphaPerPixelEPKtPKhRKNS_4RectES7_h+0x192>
 801d3bc:	f8a0 e000 	strh.w	lr, [r0]
 801d3c0:	3002      	adds	r0, #2
 801d3c2:	3402      	adds	r4, #2
 801d3c4:	e7f1      	b.n	801d3aa <_ZN8touchgfx8LCD16bpp21blitCopyAlphaPerPixelEPKtPKhRKNS_4RectES7_h+0x176>
 801d3c6:	8802      	ldrh	r2, [r0, #0]
 801d3c8:	b29f      	uxth	r7, r3
 801d3ca:	1216      	asrs	r6, r2, #8
 801d3cc:	43db      	mvns	r3, r3
 801d3ce:	b2db      	uxtb	r3, r3
 801d3d0:	ea4f 2c2e 	mov.w	ip, lr, asr #8
 801d3d4:	f006 06f8 	and.w	r6, r6, #248	@ 0xf8
 801d3d8:	fb16 f603 	smulbb	r6, r6, r3
 801d3dc:	ea4f 0ae2 	mov.w	sl, r2, asr #3
 801d3e0:	f00c 0cf8 	and.w	ip, ip, #248	@ 0xf8
 801d3e4:	00d2      	lsls	r2, r2, #3
 801d3e6:	fb0c 6c07 	mla	ip, ip, r7, r6
 801d3ea:	b2d2      	uxtb	r2, r2
 801d3ec:	ea4f 06ee 	mov.w	r6, lr, asr #3
 801d3f0:	f00a 0afc 	and.w	sl, sl, #252	@ 0xfc
 801d3f4:	ea4f 0ece 	mov.w	lr, lr, lsl #3
 801d3f8:	fb1a fa03 	smulbb	sl, sl, r3
 801d3fc:	fa1f fc8c 	uxth.w	ip, ip
 801d400:	fb12 f303 	smulbb	r3, r2, r3
 801d404:	f006 06fc 	and.w	r6, r6, #252	@ 0xfc
 801d408:	fa5f fe8e 	uxtb.w	lr, lr
 801d40c:	fb06 a607 	mla	r6, r6, r7, sl
 801d410:	f10c 0201 	add.w	r2, ip, #1
 801d414:	fb0e 3307 	mla	r3, lr, r7, r3
 801d418:	b2b6      	uxth	r6, r6
 801d41a:	b29b      	uxth	r3, r3
 801d41c:	eb02 2c1c 	add.w	ip, r2, ip, lsr #8
 801d420:	f40c 4278 	and.w	r2, ip, #63488	@ 0xf800
 801d424:	f106 0a01 	add.w	sl, r6, #1
 801d428:	f103 0c01 	add.w	ip, r3, #1
 801d42c:	eb0c 2c13 	add.w	ip, ip, r3, lsr #8
 801d430:	eb0a 2616 	add.w	r6, sl, r6, lsr #8
 801d434:	f3cc 2cc4 	ubfx	ip, ip, #11, #5
 801d438:	0976      	lsrs	r6, r6, #5
 801d43a:	ea4c 0c02 	orr.w	ip, ip, r2
 801d43e:	f406 66fc 	and.w	r6, r6, #2016	@ 0x7e0
 801d442:	ea4c 0c06 	orr.w	ip, ip, r6
 801d446:	f8a0 c000 	strh.w	ip, [r0]
 801d44a:	e7b9      	b.n	801d3c0 <_ZN8touchgfx8LCD16bpp21blitCopyAlphaPerPixelEPKtPKhRKNS_4RectES7_h+0x18c>
 801d44c:	f8b9 3000 	ldrh.w	r3, [r9]
 801d450:	f9bd 600c 	ldrsh.w	r6, [sp, #12]
 801d454:	eba3 0308 	sub.w	r3, r3, r8
 801d458:	eba6 0608 	sub.w	r6, r6, r8
 801d45c:	eb04 0446 	add.w	r4, r4, r6, lsl #1
 801d460:	eb00 0043 	add.w	r0, r0, r3, lsl #1
 801d464:	440e      	add	r6, r1
 801d466:	e79a      	b.n	801d39e <_ZN8touchgfx8LCD16bpp21blitCopyAlphaPerPixelEPKtPKhRKNS_4RectES7_h+0x16a>
 801d468:	4b03      	ldr	r3, [pc, #12]	@ (801d478 <_ZN8touchgfx8LCD16bpp21blitCopyAlphaPerPixelEPKtPKhRKNS_4RectES7_h+0x244>)
 801d46a:	6818      	ldr	r0, [r3, #0]
 801d46c:	6803      	ldr	r3, [r0, #0]
 801d46e:	6adb      	ldr	r3, [r3, #44]	@ 0x2c
 801d470:	4798      	blx	r3
 801d472:	b007      	add	sp, #28
 801d474:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 801d478:	20002fa8 	.word	0x20002fa8
 801d47c:	20002fa2 	.word	0x20002fa2

0801d480 <_ZN8touchgfx8LCD16bpp17drawPartialBitmapERKNS_6BitmapEssRKNS_4RectEhb>:
 801d480:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 801d484:	b089      	sub	sp, #36	@ 0x24
 801d486:	4607      	mov	r7, r0
 801d488:	f89d 604c 	ldrb.w	r6, [sp, #76]	@ 0x4c
 801d48c:	9c12      	ldr	r4, [sp, #72]	@ 0x48
 801d48e:	4688      	mov	r8, r1
 801d490:	4692      	mov	sl, r2
 801d492:	4699      	mov	r9, r3
 801d494:	2e00      	cmp	r6, #0
 801d496:	d048      	beq.n	801d52a <_ZN8touchgfx8LCD16bpp17drawPartialBitmapERKNS_6BitmapEssRKNS_4RectEhb+0xaa>
 801d498:	4608      	mov	r0, r1
 801d49a:	f7fa f827 	bl	80174ec <_ZNK8touchgfx6Bitmap8getWidthEv>
 801d49e:	4605      	mov	r5, r0
 801d4a0:	4640      	mov	r0, r8
 801d4a2:	f7fa f857 	bl	8017554 <_ZNK8touchgfx6Bitmap9getHeightEv>
 801d4a6:	f8ad 000e 	strh.w	r0, [sp, #14]
 801d4aa:	4640      	mov	r0, r8
 801d4ac:	f8ad a008 	strh.w	sl, [sp, #8]
 801d4b0:	f8ad 500c 	strh.w	r5, [sp, #12]
 801d4b4:	f8ad 900a 	strh.w	r9, [sp, #10]
 801d4b8:	f7fa f90a 	bl	80176d0 <_ZNK8touchgfx6Bitmap7getDataEv>
 801d4bc:	4605      	mov	r5, r0
 801d4be:	4640      	mov	r0, r8
 801d4c0:	f7fa f936 	bl	8017730 <_ZNK8touchgfx6Bitmap12getExtraDataEv>
 801d4c4:	4682      	mov	sl, r0
 801d4c6:	4640      	mov	r0, r8
 801d4c8:	f7fa f986 	bl	80177d8 <_ZNK8touchgfx6Bitmap9getFormatEv>
 801d4cc:	2810      	cmp	r0, #16
 801d4ce:	d82c      	bhi.n	801d52a <_ZN8touchgfx8LCD16bpp17drawPartialBitmapERKNS_6BitmapEssRKNS_4RectEhb+0xaa>
 801d4d0:	e8df f010 	tbh	[pc, r0, lsl #1]
 801d4d4:	00ba00ca 	.word	0x00ba00ca
 801d4d8:	002b0011 	.word	0x002b0011
 801d4dc:	002b002b 	.word	0x002b002b
 801d4e0:	002b002b 	.word	0x002b002b
 801d4e4:	002b002b 	.word	0x002b002b
 801d4e8:	00c1002b 	.word	0x00c1002b
 801d4ec:	002b002b 	.word	0x002b002b
 801d4f0:	002b0180 	.word	0x002b0180
 801d4f4:	0173      	.short	0x0173
 801d4f6:	4bbc      	ldr	r3, [pc, #752]	@ (801d7e8 <_ZN8touchgfx8LCD16bpp17drawPartialBitmapERKNS_6BitmapEssRKNS_4RectEhb+0x368>)
 801d4f8:	6818      	ldr	r0, [r3, #0]
 801d4fa:	6803      	ldr	r3, [r0, #0]
 801d4fc:	6b9b      	ldr	r3, [r3, #56]	@ 0x38
 801d4fe:	4798      	blx	r3
 801d500:	2eff      	cmp	r6, #255	@ 0xff
 801d502:	d101      	bne.n	801d508 <_ZN8touchgfx8LCD16bpp17drawPartialBitmapERKNS_6BitmapEssRKNS_4RectEhb+0x88>
 801d504:	0683      	lsls	r3, r0, #26
 801d506:	d506      	bpl.n	801d516 <_ZN8touchgfx8LCD16bpp17drawPartialBitmapERKNS_6BitmapEssRKNS_4RectEhb+0x96>
 801d508:	4633      	mov	r3, r6
 801d50a:	4622      	mov	r2, r4
 801d50c:	a902      	add	r1, sp, #8
 801d50e:	4628      	mov	r0, r5
 801d510:	f7ff f8fc 	bl	801c70c <_ZN8touchgfx8LCD16bpp16blitCopyARGB8888EPKmRKNS_4RectES5_h>
 801d514:	e009      	b.n	801d52a <_ZN8touchgfx8LCD16bpp17drawPartialBitmapERKNS_6BitmapEssRKNS_4RectEhb+0xaa>
 801d516:	4640      	mov	r0, r8
 801d518:	f7fa f8a2 	bl	8017660 <_ZNK8touchgfx6Bitmap20hasTransparentPixelsEv>
 801d51c:	b940      	cbnz	r0, 801d530 <_ZN8touchgfx8LCD16bpp17drawPartialBitmapERKNS_6BitmapEssRKNS_4RectEhb+0xb0>
 801d51e:	4623      	mov	r3, r4
 801d520:	aa02      	add	r2, sp, #8
 801d522:	4629      	mov	r1, r5
 801d524:	4638      	mov	r0, r7
 801d526:	f7ff f9d7 	bl	801c8d8 <_ZNK8touchgfx8LCD16bpp21blitCopyARGB8888SolidEPKmRKNS_4RectES5_>
 801d52a:	b009      	add	sp, #36	@ 0x24
 801d52c:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 801d530:	f10d 0918 	add.w	r9, sp, #24
 801d534:	4641      	mov	r1, r8
 801d536:	4648      	mov	r0, r9
 801d538:	f7fa f840 	bl	80175bc <_ZNK8touchgfx6Bitmap12getSolidRectEv>
 801d53c:	e899 0003 	ldmia.w	r9, {r0, r1}
 801d540:	f10d 0810 	add.w	r8, sp, #16
 801d544:	e888 0003 	stmia.w	r8, {r0, r1}
 801d548:	4640      	mov	r0, r8
 801d54a:	4621      	mov	r1, r4
 801d54c:	f7f3 f9f6 	bl	801093c <_ZN8touchgfx4RectaNERKS0_>
 801d550:	4640      	mov	r0, r8
 801d552:	f7f3 fa36 	bl	80109c2 <_ZNK8touchgfx4Rect7isEmptyEv>
 801d556:	2800      	cmp	r0, #0
 801d558:	d1d6      	bne.n	801d508 <_ZN8touchgfx8LCD16bpp17drawPartialBitmapERKNS_6BitmapEssRKNS_4RectEhb+0x88>
 801d55a:	f9bd 3012 	ldrsh.w	r3, [sp, #18]
 801d55e:	f9b4 2002 	ldrsh.w	r2, [r4, #2]
 801d562:	4293      	cmp	r3, r2
 801d564:	dd12      	ble.n	801d58c <_ZN8touchgfx8LCD16bpp17drawPartialBitmapERKNS_6BitmapEssRKNS_4RectEhb+0x10c>
 801d566:	1a9b      	subs	r3, r3, r2
 801d568:	f9b4 0000 	ldrsh.w	r0, [r4]
 801d56c:	f9b4 1004 	ldrsh.w	r1, [r4, #4]
 801d570:	f8ad 0018 	strh.w	r0, [sp, #24]
 801d574:	f8ad 201a 	strh.w	r2, [sp, #26]
 801d578:	f8ad 101c 	strh.w	r1, [sp, #28]
 801d57c:	f8ad 301e 	strh.w	r3, [sp, #30]
 801d580:	464a      	mov	r2, r9
 801d582:	4633      	mov	r3, r6
 801d584:	a902      	add	r1, sp, #8
 801d586:	4628      	mov	r0, r5
 801d588:	f7ff f8c0 	bl	801c70c <_ZN8touchgfx8LCD16bpp16blitCopyARGB8888EPKmRKNS_4RectES5_h>
 801d58c:	f9bd 3010 	ldrsh.w	r3, [sp, #16]
 801d590:	f9b4 2000 	ldrsh.w	r2, [r4]
 801d594:	4293      	cmp	r3, r2
 801d596:	dd12      	ble.n	801d5be <_ZN8touchgfx8LCD16bpp17drawPartialBitmapERKNS_6BitmapEssRKNS_4RectEhb+0x13e>
 801d598:	1a9b      	subs	r3, r3, r2
 801d59a:	f9bd 0012 	ldrsh.w	r0, [sp, #18]
 801d59e:	f9bd 1016 	ldrsh.w	r1, [sp, #22]
 801d5a2:	f8ad 2018 	strh.w	r2, [sp, #24]
 801d5a6:	f8ad 001a 	strh.w	r0, [sp, #26]
 801d5aa:	f8ad 301c 	strh.w	r3, [sp, #28]
 801d5ae:	f8ad 101e 	strh.w	r1, [sp, #30]
 801d5b2:	23ff      	movs	r3, #255	@ 0xff
 801d5b4:	464a      	mov	r2, r9
 801d5b6:	a902      	add	r1, sp, #8
 801d5b8:	4628      	mov	r0, r5
 801d5ba:	f7ff f8a7 	bl	801c70c <_ZN8touchgfx8LCD16bpp16blitCopyARGB8888EPKmRKNS_4RectES5_h>
 801d5be:	4643      	mov	r3, r8
 801d5c0:	aa02      	add	r2, sp, #8
 801d5c2:	4629      	mov	r1, r5
 801d5c4:	4638      	mov	r0, r7
 801d5c6:	f7ff f987 	bl	801c8d8 <_ZNK8touchgfx8LCD16bpp21blitCopyARGB8888SolidEPKmRKNS_4RectES5_>
 801d5ca:	88a2      	ldrh	r2, [r4, #4]
 801d5cc:	8823      	ldrh	r3, [r4, #0]
 801d5ce:	f8bd 1014 	ldrh.w	r1, [sp, #20]
 801d5d2:	4413      	add	r3, r2
 801d5d4:	f8bd 2010 	ldrh.w	r2, [sp, #16]
 801d5d8:	440a      	add	r2, r1
 801d5da:	b29b      	uxth	r3, r3
 801d5dc:	b292      	uxth	r2, r2
 801d5de:	b211      	sxth	r1, r2
 801d5e0:	b218      	sxth	r0, r3
 801d5e2:	4288      	cmp	r0, r1
 801d5e4:	dd12      	ble.n	801d60c <_ZN8touchgfx8LCD16bpp17drawPartialBitmapERKNS_6BitmapEssRKNS_4RectEhb+0x18c>
 801d5e6:	1a9b      	subs	r3, r3, r2
 801d5e8:	f9bd 0016 	ldrsh.w	r0, [sp, #22]
 801d5ec:	f9bd 6012 	ldrsh.w	r6, [sp, #18]
 801d5f0:	f8ad 1018 	strh.w	r1, [sp, #24]
 801d5f4:	f8ad 301c 	strh.w	r3, [sp, #28]
 801d5f8:	f8ad 001e 	strh.w	r0, [sp, #30]
 801d5fc:	23ff      	movs	r3, #255	@ 0xff
 801d5fe:	464a      	mov	r2, r9
 801d600:	a902      	add	r1, sp, #8
 801d602:	4628      	mov	r0, r5
 801d604:	f8ad 601a 	strh.w	r6, [sp, #26]
 801d608:	f7ff f880 	bl	801c70c <_ZN8touchgfx8LCD16bpp16blitCopyARGB8888EPKmRKNS_4RectES5_h>
 801d60c:	88e2      	ldrh	r2, [r4, #6]
 801d60e:	8863      	ldrh	r3, [r4, #2]
 801d610:	f8bd 1016 	ldrh.w	r1, [sp, #22]
 801d614:	4413      	add	r3, r2
 801d616:	f8bd 2012 	ldrh.w	r2, [sp, #18]
 801d61a:	440a      	add	r2, r1
 801d61c:	b29b      	uxth	r3, r3
 801d61e:	b292      	uxth	r2, r2
 801d620:	b211      	sxth	r1, r2
 801d622:	b218      	sxth	r0, r3
 801d624:	4288      	cmp	r0, r1
 801d626:	dd80      	ble.n	801d52a <_ZN8touchgfx8LCD16bpp17drawPartialBitmapERKNS_6BitmapEssRKNS_4RectEhb+0xaa>
 801d628:	1a9b      	subs	r3, r3, r2
 801d62a:	f9b4 6000 	ldrsh.w	r6, [r4]
 801d62e:	f9b4 0004 	ldrsh.w	r0, [r4, #4]
 801d632:	f8ad 301e 	strh.w	r3, [sp, #30]
 801d636:	f8ad 6018 	strh.w	r6, [sp, #24]
 801d63a:	f8ad 101a 	strh.w	r1, [sp, #26]
 801d63e:	f8ad 001c 	strh.w	r0, [sp, #28]
 801d642:	23ff      	movs	r3, #255	@ 0xff
 801d644:	464a      	mov	r2, r9
 801d646:	e761      	b.n	801d50c <_ZN8touchgfx8LCD16bpp17drawPartialBitmapERKNS_6BitmapEssRKNS_4RectEhb+0x8c>
 801d648:	4633      	mov	r3, r6
 801d64a:	4622      	mov	r2, r4
 801d64c:	a902      	add	r1, sp, #8
 801d64e:	4628      	mov	r0, r5
 801d650:	f7ff f9b2 	bl	801c9b8 <_ZN8touchgfx8LCD16bpp14blitCopyRGB888EPKhRKNS_4RectES5_h>
 801d654:	e769      	b.n	801d52a <_ZN8touchgfx8LCD16bpp17drawPartialBitmapERKNS_6BitmapEssRKNS_4RectEhb+0xaa>
 801d656:	e9cd 4600 	strd	r4, r6, [sp]
 801d65a:	ab02      	add	r3, sp, #8
 801d65c:	4652      	mov	r2, sl
 801d65e:	4629      	mov	r1, r5
 801d660:	4638      	mov	r0, r7
 801d662:	f7ff fd89 	bl	801d178 <_ZN8touchgfx8LCD16bpp10blitCopyL8EPKhS2_RKNS_4RectES5_h>
 801d666:	e760      	b.n	801d52a <_ZN8touchgfx8LCD16bpp17drawPartialBitmapERKNS_6BitmapEssRKNS_4RectEhb+0xaa>
 801d668:	4640      	mov	r0, r8
 801d66a:	f7f9 fff9 	bl	8017660 <_ZNK8touchgfx6Bitmap20hasTransparentPixelsEv>
 801d66e:	b948      	cbnz	r0, 801d684 <_ZN8touchgfx8LCD16bpp17drawPartialBitmapERKNS_6BitmapEssRKNS_4RectEhb+0x204>
 801d670:	683b      	ldr	r3, [r7, #0]
 801d672:	e9cd 6000 	strd	r6, r0, [sp]
 801d676:	aa02      	add	r2, sp, #8
 801d678:	68de      	ldr	r6, [r3, #12]
 801d67a:	4629      	mov	r1, r5
 801d67c:	4623      	mov	r3, r4
 801d67e:	4638      	mov	r0, r7
 801d680:	47b0      	blx	r6
 801d682:	e752      	b.n	801d52a <_ZN8touchgfx8LCD16bpp17drawPartialBitmapERKNS_6BitmapEssRKNS_4RectEhb+0xaa>
 801d684:	f10d 0918 	add.w	r9, sp, #24
 801d688:	4641      	mov	r1, r8
 801d68a:	4648      	mov	r0, r9
 801d68c:	f7f9 ff96 	bl	80175bc <_ZNK8touchgfx6Bitmap12getSolidRectEv>
 801d690:	e899 0003 	ldmia.w	r9, {r0, r1}
 801d694:	f10d 0810 	add.w	r8, sp, #16
 801d698:	e888 0003 	stmia.w	r8, {r0, r1}
 801d69c:	4640      	mov	r0, r8
 801d69e:	4621      	mov	r1, r4
 801d6a0:	f7f3 f94c 	bl	801093c <_ZN8touchgfx4RectaNERKS0_>
 801d6a4:	4640      	mov	r0, r8
 801d6a6:	f7f3 f98c 	bl	80109c2 <_ZNK8touchgfx4Rect7isEmptyEv>
 801d6aa:	b138      	cbz	r0, 801d6bc <_ZN8touchgfx8LCD16bpp17drawPartialBitmapERKNS_6BitmapEssRKNS_4RectEhb+0x23c>
 801d6ac:	9600      	str	r6, [sp, #0]
 801d6ae:	4623      	mov	r3, r4
 801d6b0:	aa02      	add	r2, sp, #8
 801d6b2:	4651      	mov	r1, sl
 801d6b4:	4628      	mov	r0, r5
 801d6b6:	f7ff fdbd 	bl	801d234 <_ZN8touchgfx8LCD16bpp21blitCopyAlphaPerPixelEPKtPKhRKNS_4RectES7_h>
 801d6ba:	e736      	b.n	801d52a <_ZN8touchgfx8LCD16bpp17drawPartialBitmapERKNS_6BitmapEssRKNS_4RectEhb+0xaa>
 801d6bc:	683b      	ldr	r3, [r7, #0]
 801d6be:	e9cd 6000 	strd	r6, r0, [sp]
 801d6c2:	aa02      	add	r2, sp, #8
 801d6c4:	f8d3 b00c 	ldr.w	fp, [r3, #12]
 801d6c8:	4629      	mov	r1, r5
 801d6ca:	4643      	mov	r3, r8
 801d6cc:	4638      	mov	r0, r7
 801d6ce:	47d8      	blx	fp
 801d6d0:	f9bd 3012 	ldrsh.w	r3, [sp, #18]
 801d6d4:	f9b4 2002 	ldrsh.w	r2, [r4, #2]
 801d6d8:	4293      	cmp	r3, r2
 801d6da:	dd13      	ble.n	801d704 <_ZN8touchgfx8LCD16bpp17drawPartialBitmapERKNS_6BitmapEssRKNS_4RectEhb+0x284>
 801d6dc:	f9b4 0000 	ldrsh.w	r0, [r4]
 801d6e0:	f9b4 1004 	ldrsh.w	r1, [r4, #4]
 801d6e4:	f8ad 0018 	strh.w	r0, [sp, #24]
 801d6e8:	1a9b      	subs	r3, r3, r2
 801d6ea:	f8ad 201a 	strh.w	r2, [sp, #26]
 801d6ee:	f8ad 101c 	strh.w	r1, [sp, #28]
 801d6f2:	f8ad 301e 	strh.w	r3, [sp, #30]
 801d6f6:	9600      	str	r6, [sp, #0]
 801d6f8:	464b      	mov	r3, r9
 801d6fa:	aa02      	add	r2, sp, #8
 801d6fc:	4651      	mov	r1, sl
 801d6fe:	4628      	mov	r0, r5
 801d700:	f7ff fd98 	bl	801d234 <_ZN8touchgfx8LCD16bpp21blitCopyAlphaPerPixelEPKtPKhRKNS_4RectES7_h>
 801d704:	f9bd 3010 	ldrsh.w	r3, [sp, #16]
 801d708:	f9b4 2000 	ldrsh.w	r2, [r4]
 801d70c:	4293      	cmp	r3, r2
 801d70e:	dd13      	ble.n	801d738 <_ZN8touchgfx8LCD16bpp17drawPartialBitmapERKNS_6BitmapEssRKNS_4RectEhb+0x2b8>
 801d710:	1a9b      	subs	r3, r3, r2
 801d712:	f9bd 0012 	ldrsh.w	r0, [sp, #18]
 801d716:	f9bd 1016 	ldrsh.w	r1, [sp, #22]
 801d71a:	f8ad 2018 	strh.w	r2, [sp, #24]
 801d71e:	f8ad 001a 	strh.w	r0, [sp, #26]
 801d722:	f8ad 301c 	strh.w	r3, [sp, #28]
 801d726:	f8ad 101e 	strh.w	r1, [sp, #30]
 801d72a:	9600      	str	r6, [sp, #0]
 801d72c:	464b      	mov	r3, r9
 801d72e:	aa02      	add	r2, sp, #8
 801d730:	4651      	mov	r1, sl
 801d732:	4628      	mov	r0, r5
 801d734:	f7ff fd7e 	bl	801d234 <_ZN8touchgfx8LCD16bpp21blitCopyAlphaPerPixelEPKtPKhRKNS_4RectES7_h>
 801d738:	88a2      	ldrh	r2, [r4, #4]
 801d73a:	8823      	ldrh	r3, [r4, #0]
 801d73c:	f8bd 1014 	ldrh.w	r1, [sp, #20]
 801d740:	4413      	add	r3, r2
 801d742:	f8bd 2010 	ldrh.w	r2, [sp, #16]
 801d746:	440a      	add	r2, r1
 801d748:	b29b      	uxth	r3, r3
 801d74a:	b292      	uxth	r2, r2
 801d74c:	b211      	sxth	r1, r2
 801d74e:	b218      	sxth	r0, r3
 801d750:	4288      	cmp	r0, r1
 801d752:	dd13      	ble.n	801d77c <_ZN8touchgfx8LCD16bpp17drawPartialBitmapERKNS_6BitmapEssRKNS_4RectEhb+0x2fc>
 801d754:	1a9b      	subs	r3, r3, r2
 801d756:	f9bd 0016 	ldrsh.w	r0, [sp, #22]
 801d75a:	f9bd 7012 	ldrsh.w	r7, [sp, #18]
 801d75e:	f8ad 1018 	strh.w	r1, [sp, #24]
 801d762:	f8ad 301c 	strh.w	r3, [sp, #28]
 801d766:	f8ad 001e 	strh.w	r0, [sp, #30]
 801d76a:	9600      	str	r6, [sp, #0]
 801d76c:	464b      	mov	r3, r9
 801d76e:	aa02      	add	r2, sp, #8
 801d770:	4651      	mov	r1, sl
 801d772:	4628      	mov	r0, r5
 801d774:	f8ad 701a 	strh.w	r7, [sp, #26]
 801d778:	f7ff fd5c 	bl	801d234 <_ZN8touchgfx8LCD16bpp21blitCopyAlphaPerPixelEPKtPKhRKNS_4RectES7_h>
 801d77c:	88e2      	ldrh	r2, [r4, #6]
 801d77e:	8863      	ldrh	r3, [r4, #2]
 801d780:	f8bd 1016 	ldrh.w	r1, [sp, #22]
 801d784:	4413      	add	r3, r2
 801d786:	f8bd 2012 	ldrh.w	r2, [sp, #18]
 801d78a:	440a      	add	r2, r1
 801d78c:	b29b      	uxth	r3, r3
 801d78e:	b292      	uxth	r2, r2
 801d790:	b211      	sxth	r1, r2
 801d792:	b218      	sxth	r0, r3
 801d794:	4288      	cmp	r0, r1
 801d796:	f77f aec8 	ble.w	801d52a <_ZN8touchgfx8LCD16bpp17drawPartialBitmapERKNS_6BitmapEssRKNS_4RectEhb+0xaa>
 801d79a:	f9b4 7000 	ldrsh.w	r7, [r4]
 801d79e:	f9b4 0004 	ldrsh.w	r0, [r4, #4]
 801d7a2:	f8ad 7018 	strh.w	r7, [sp, #24]
 801d7a6:	1a9b      	subs	r3, r3, r2
 801d7a8:	f8ad 301e 	strh.w	r3, [sp, #30]
 801d7ac:	f8ad 101a 	strh.w	r1, [sp, #26]
 801d7b0:	f8ad 001c 	strh.w	r0, [sp, #28]
 801d7b4:	9600      	str	r6, [sp, #0]
 801d7b6:	464b      	mov	r3, r9
 801d7b8:	e77a      	b.n	801d6b0 <_ZN8touchgfx8LCD16bpp17drawPartialBitmapERKNS_6BitmapEssRKNS_4RectEhb+0x230>
 801d7ba:	f8d7 0088 	ldr.w	r0, [r7, #136]	@ 0x88
 801d7be:	2800      	cmp	r0, #0
 801d7c0:	f43f aeb3 	beq.w	801d52a <_ZN8touchgfx8LCD16bpp17drawPartialBitmapERKNS_6BitmapEssRKNS_4RectEhb+0xaa>
 801d7c4:	6803      	ldr	r3, [r0, #0]
 801d7c6:	9600      	str	r6, [sp, #0]
 801d7c8:	68de      	ldr	r6, [r3, #12]
 801d7ca:	4623      	mov	r3, r4
 801d7cc:	aa02      	add	r2, sp, #8
 801d7ce:	4629      	mov	r1, r5
 801d7d0:	47b0      	blx	r6
 801d7d2:	e6aa      	b.n	801d52a <_ZN8touchgfx8LCD16bpp17drawPartialBitmapERKNS_6BitmapEssRKNS_4RectEhb+0xaa>
 801d7d4:	f8d7 0088 	ldr.w	r0, [r7, #136]	@ 0x88
 801d7d8:	2800      	cmp	r0, #0
 801d7da:	f43f aea6 	beq.w	801d52a <_ZN8touchgfx8LCD16bpp17drawPartialBitmapERKNS_6BitmapEssRKNS_4RectEhb+0xaa>
 801d7de:	6803      	ldr	r3, [r0, #0]
 801d7e0:	9600      	str	r6, [sp, #0]
 801d7e2:	689e      	ldr	r6, [r3, #8]
 801d7e4:	e7f1      	b.n	801d7ca <_ZN8touchgfx8LCD16bpp17drawPartialBitmapERKNS_6BitmapEssRKNS_4RectEhb+0x34a>
 801d7e6:	bf00      	nop
 801d7e8:	20002fa8 	.word	0x20002fa8

0801d7ec <_ZN8touchgfx8LCD16bpp9nextPixelEbNS_12TextRotationE>:
 801d7ec:	b180      	cbz	r0, 801d810 <_ZN8touchgfx8LCD16bpp9nextPixelEbNS_12TextRotationE+0x24>
 801d7ee:	2903      	cmp	r1, #3
 801d7f0:	d81c      	bhi.n	801d82c <_ZN8touchgfx8LCD16bpp9nextPixelEbNS_12TextRotationE+0x40>
 801d7f2:	e8df f001 	tbb	[pc, r1]
 801d7f6:	1d02      	.short	0x1d02
 801d7f8:	1f08      	.short	0x1f08
 801d7fa:	4b10      	ldr	r3, [pc, #64]	@ (801d83c <_ZN8touchgfx8LCD16bpp9nextPixelEbNS_12TextRotationE+0x50>)
 801d7fc:	8818      	ldrh	r0, [r3, #0]
 801d7fe:	f3c0 000e 	ubfx	r0, r0, #0, #15
 801d802:	4240      	negs	r0, r0
 801d804:	4770      	bx	lr
 801d806:	4b0d      	ldr	r3, [pc, #52]	@ (801d83c <_ZN8touchgfx8LCD16bpp9nextPixelEbNS_12TextRotationE+0x50>)
 801d808:	8818      	ldrh	r0, [r3, #0]
 801d80a:	f3c0 000e 	ubfx	r0, r0, #0, #15
 801d80e:	4770      	bx	lr
 801d810:	2903      	cmp	r1, #3
 801d812:	d80b      	bhi.n	801d82c <_ZN8touchgfx8LCD16bpp9nextPixelEbNS_12TextRotationE+0x40>
 801d814:	a301      	add	r3, pc, #4	@ (adr r3, 801d81c <_ZN8touchgfx8LCD16bpp9nextPixelEbNS_12TextRotationE+0x30>)
 801d816:	f853 f021 	ldr.w	pc, [r3, r1, lsl #2]
 801d81a:	bf00      	nop
 801d81c:	0801d831 	.word	0x0801d831
 801d820:	0801d807 	.word	0x0801d807
 801d824:	0801d835 	.word	0x0801d835
 801d828:	0801d7fb 	.word	0x0801d7fb
 801d82c:	2000      	movs	r0, #0
 801d82e:	4770      	bx	lr
 801d830:	2001      	movs	r0, #1
 801d832:	4770      	bx	lr
 801d834:	f04f 30ff 	mov.w	r0, #4294967295
 801d838:	4770      	bx	lr
 801d83a:	bf00      	nop
 801d83c:	20002fa2 	.word	0x20002fa2

0801d840 <_ZN8touchgfx8LCD16bpp8nextLineEbNS_12TextRotationE>:
 801d840:	b180      	cbz	r0, 801d864 <_ZN8touchgfx8LCD16bpp8nextLineEbNS_12TextRotationE+0x24>
 801d842:	2903      	cmp	r1, #3
 801d844:	d81c      	bhi.n	801d880 <_ZN8touchgfx8LCD16bpp8nextLineEbNS_12TextRotationE+0x40>
 801d846:	e8df f001 	tbb	[pc, r1]
 801d84a:	021d      	.short	0x021d
 801d84c:	071f      	.short	0x071f
 801d84e:	4b10      	ldr	r3, [pc, #64]	@ (801d890 <_ZN8touchgfx8LCD16bpp8nextLineEbNS_12TextRotationE+0x50>)
 801d850:	8818      	ldrh	r0, [r3, #0]
 801d852:	f3c0 000e 	ubfx	r0, r0, #0, #15
 801d856:	4770      	bx	lr
 801d858:	4b0d      	ldr	r3, [pc, #52]	@ (801d890 <_ZN8touchgfx8LCD16bpp8nextLineEbNS_12TextRotationE+0x50>)
 801d85a:	8818      	ldrh	r0, [r3, #0]
 801d85c:	f3c0 000e 	ubfx	r0, r0, #0, #15
 801d860:	4240      	negs	r0, r0
 801d862:	4770      	bx	lr
 801d864:	2903      	cmp	r1, #3
 801d866:	d80b      	bhi.n	801d880 <_ZN8touchgfx8LCD16bpp8nextLineEbNS_12TextRotationE+0x40>
 801d868:	a301      	add	r3, pc, #4	@ (adr r3, 801d870 <_ZN8touchgfx8LCD16bpp8nextLineEbNS_12TextRotationE+0x30>)
 801d86a:	f853 f021 	ldr.w	pc, [r3, r1, lsl #2]
 801d86e:	bf00      	nop
 801d870:	0801d84f 	.word	0x0801d84f
 801d874:	0801d889 	.word	0x0801d889
 801d878:	0801d859 	.word	0x0801d859
 801d87c:	0801d885 	.word	0x0801d885
 801d880:	2000      	movs	r0, #0
 801d882:	4770      	bx	lr
 801d884:	2001      	movs	r0, #1
 801d886:	4770      	bx	lr
 801d888:	f04f 30ff 	mov.w	r0, #4294967295
 801d88c:	4770      	bx	lr
 801d88e:	bf00      	nop
 801d890:	20002fa2 	.word	0x20002fa2

0801d894 <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE>:
 801d894:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 801d898:	b099      	sub	sp, #100	@ 0x64
 801d89a:	910b      	str	r1, [sp, #44]	@ 0x2c
 801d89c:	a914      	add	r1, sp, #80	@ 0x50
 801d89e:	e881 000c 	stmia.w	r1, {r2, r3}
 801d8a2:	e9dd 2126 	ldrd	r2, r1, [sp, #152]	@ 0x98
 801d8a6:	f9bd 308c 	ldrsh.w	r3, [sp, #140]	@ 0x8c
 801d8aa:	f891 900d 	ldrb.w	r9, [r1, #13]
 801d8ae:	9309      	str	r3, [sp, #36]	@ 0x24
 801d8b0:	f89d 30a4 	ldrb.w	r3, [sp, #164]	@ 0xa4
 801d8b4:	9310      	str	r3, [sp, #64]	@ 0x40
 801d8b6:	ea4f 1749 	mov.w	r7, r9, lsl #5
 801d8ba:	f89d 30b0 	ldrb.w	r3, [sp, #176]	@ 0xb0
 801d8be:	930c      	str	r3, [sp, #48]	@ 0x30
 801d8c0:	f407 7380 	and.w	r3, r7, #256	@ 0x100
 801d8c4:	798f      	ldrb	r7, [r1, #6]
 801d8c6:	f9bd 4088 	ldrsh.w	r4, [sp, #136]	@ 0x88
 801d8ca:	f8bd 5090 	ldrh.w	r5, [sp, #144]	@ 0x90
 801d8ce:	f8bd 6094 	ldrh.w	r6, [sp, #148]	@ 0x94
 801d8d2:	f89d 80ac 	ldrb.w	r8, [sp, #172]	@ 0xac
 801d8d6:	f89d a0b4 	ldrb.w	sl, [sp, #180]	@ 0xb4
 801d8da:	431f      	orrs	r7, r3
 801d8dc:	f000 8195 	beq.w	801dc0a <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x376>
 801d8e0:	ea4f 1909 	mov.w	r9, r9, lsl #4
 801d8e4:	f409 7380 	and.w	r3, r9, #256	@ 0x100
 801d8e8:	f891 9007 	ldrb.w	r9, [r1, #7]
 801d8ec:	ea59 0903 	orrs.w	r9, r9, r3
 801d8f0:	f000 818b 	beq.w	801dc0a <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x376>
 801d8f4:	f991 3009 	ldrsb.w	r3, [r1, #9]
 801d8f8:	b29b      	uxth	r3, r3
 801d8fa:	2d00      	cmp	r5, #0
 801d8fc:	f000 812e 	beq.w	801db5c <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x2c8>
 801d900:	1aed      	subs	r5, r5, r3
 801d902:	b2ad      	uxth	r5, r5
 801d904:	042b      	lsls	r3, r5, #16
 801d906:	d502      	bpl.n	801d90e <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x7a>
 801d908:	1b64      	subs	r4, r4, r5
 801d90a:	b224      	sxth	r4, r4
 801d90c:	2500      	movs	r5, #0
 801d90e:	f9b2 1000 	ldrsh.w	r1, [r2]
 801d912:	f8cd 9028 	str.w	r9, [sp, #40]	@ 0x28
 801d916:	428c      	cmp	r4, r1
 801d918:	b28b      	uxth	r3, r1
 801d91a:	bfbf      	itttt	lt
 801d91c:	18ed      	addlt	r5, r5, r3
 801d91e:	1b2c      	sublt	r4, r5, r4
 801d920:	b2a5      	uxthlt	r5, r4
 801d922:	460c      	movlt	r4, r1
 801d924:	8891      	ldrh	r1, [r2, #4]
 801d926:	440b      	add	r3, r1
 801d928:	b21b      	sxth	r3, r3
 801d92a:	930f      	str	r3, [sp, #60]	@ 0x3c
 801d92c:	88d3      	ldrh	r3, [r2, #6]
 801d92e:	8852      	ldrh	r2, [r2, #2]
 801d930:	4413      	add	r3, r2
 801d932:	b21b      	sxth	r3, r3
 801d934:	930d      	str	r3, [sp, #52]	@ 0x34
 801d936:	4bbe      	ldr	r3, [pc, #760]	@ (801dc30 <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x39c>)
 801d938:	9a09      	ldr	r2, [sp, #36]	@ 0x24
 801d93a:	f893 b000 	ldrb.w	fp, [r3]
 801d93e:	f10b 3cff 	add.w	ip, fp, #4294967295
 801d942:	f1dc 0300 	rsbs	r3, ip, #0
 801d946:	eb43 030c 	adc.w	r3, r3, ip
 801d94a:	930e      	str	r3, [sp, #56]	@ 0x38
 801d94c:	4621      	mov	r1, r4
 801d94e:	4653      	mov	r3, sl
 801d950:	a814      	add	r0, sp, #80	@ 0x50
 801d952:	f7f6 f82c 	bl	80139ae <_ZN8touchgfx3LCD5realXERKNS_4RectEssNS_12TextRotationE>
 801d956:	4621      	mov	r1, r4
 801d958:	f8ad 005c 	strh.w	r0, [sp, #92]	@ 0x5c
 801d95c:	4653      	mov	r3, sl
 801d95e:	9a09      	ldr	r2, [sp, #36]	@ 0x24
 801d960:	a814      	add	r0, sp, #80	@ 0x50
 801d962:	f7f6 f841 	bl	80139e8 <_ZN8touchgfx3LCD5realYERKNS_4RectEssNS_12TextRotationE>
 801d966:	a918      	add	r1, sp, #96	@ 0x60
 801d968:	f821 0d02 	strh.w	r0, [r1, #-2]!
 801d96c:	a817      	add	r0, sp, #92	@ 0x5c
 801d96e:	f7f6 f967 	bl	8013c40 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERsS1_>
 801d972:	f1ba 0f00 	cmp.w	sl, #0
 801d976:	f040 80f4 	bne.w	801db62 <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x2ce>
 801d97a:	f1bb 0f01 	cmp.w	fp, #1
 801d97e:	f040 80f8 	bne.w	801db72 <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x2de>
 801d982:	9b10      	ldr	r3, [sp, #64]	@ 0x40
 801d984:	2b00      	cmp	r3, #0
 801d986:	f040 8145 	bne.w	801dc14 <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x380>
 801d98a:	b2ba      	uxth	r2, r7
 801d98c:	b905      	cbnz	r5, 801d990 <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0xfc>
 801d98e:	b16e      	cbz	r6, 801d9ac <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x118>
 801d990:	fb06 5302 	mla	r3, r6, r2, r5
 801d994:	9828      	ldr	r0, [sp, #160]	@ 0xa0
 801d996:	fb08 f303 	mul.w	r3, r8, r3
 801d99a:	4631      	mov	r1, r6
 801d99c:	f003 0607 	and.w	r6, r3, #7
 801d9a0:	eb00 03d3 	add.w	r3, r0, r3, lsr #3
 801d9a4:	9328      	str	r3, [sp, #160]	@ 0xa0
 801d9a6:	eba9 0301 	sub.w	r3, r9, r1
 801d9aa:	930a      	str	r3, [sp, #40]	@ 0x28
 801d9ac:	4651      	mov	r1, sl
 801d9ae:	980e      	ldr	r0, [sp, #56]	@ 0x38
 801d9b0:	f7ff ff1c 	bl	801d7ec <_ZN8touchgfx8LCD16bpp9nextPixelEbNS_12TextRotationE>
 801d9b4:	4681      	mov	r9, r0
 801d9b6:	980e      	ldr	r0, [sp, #56]	@ 0x38
 801d9b8:	f7ff ff42 	bl	801d840 <_ZN8touchgfx8LCD16bpp8nextLineEbNS_12TextRotationE>
 801d9bc:	9b0d      	ldr	r3, [sp, #52]	@ 0x34
 801d9be:	9909      	ldr	r1, [sp, #36]	@ 0x24
 801d9c0:	eba3 0a01 	sub.w	sl, r3, r1
 801d9c4:	9b0a      	ldr	r3, [sp, #40]	@ 0x28
 801d9c6:	459a      	cmp	sl, r3
 801d9c8:	bfa8      	it	ge
 801d9ca:	469a      	movge	sl, r3
 801d9cc:	f1ba 0f00 	cmp.w	sl, #0
 801d9d0:	4683      	mov	fp, r0
 801d9d2:	f340 811a 	ble.w	801dc0a <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x376>
 801d9d6:	9b0f      	ldr	r3, [sp, #60]	@ 0x3c
 801d9d8:	1b64      	subs	r4, r4, r5
 801d9da:	1b1c      	subs	r4, r3, r4
 801d9dc:	42bc      	cmp	r4, r7
 801d9de:	bfd4      	ite	le
 801d9e0:	ebc5 0504 	rsble	r5, r5, r4
 801d9e4:	ebc5 0507 	rsbgt	r5, r5, r7
 801d9e8:	2d00      	cmp	r5, #0
 801d9ea:	f340 810e 	ble.w	801dc0a <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x376>
 801d9ee:	1b52      	subs	r2, r2, r5
 801d9f0:	fb08 f302 	mul.w	r3, r8, r2
 801d9f4:	930f      	str	r3, [sp, #60]	@ 0x3c
 801d9f6:	9b0b      	ldr	r3, [sp, #44]	@ 0x2c
 801d9f8:	2b00      	cmp	r3, #0
 801d9fa:	f040 8116 	bne.w	801dc2a <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x396>
 801d9fe:	4b8d      	ldr	r3, [pc, #564]	@ (801dc34 <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x3a0>)
 801da00:	6818      	ldr	r0, [r3, #0]
 801da02:	6803      	ldr	r3, [r0, #0]
 801da04:	6a9b      	ldr	r3, [r3, #40]	@ 0x28
 801da06:	4798      	blx	r3
 801da08:	2301      	movs	r3, #1
 801da0a:	fa03 f308 	lsl.w	r3, r3, r8
 801da0e:	4a8a      	ldr	r2, [pc, #552]	@ (801dc38 <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x3a4>)
 801da10:	3b01      	subs	r3, #1
 801da12:	b2db      	uxtb	r3, r3
 801da14:	8811      	ldrh	r1, [r2, #0]
 801da16:	930e      	str	r3, [sp, #56]	@ 0x38
 801da18:	f9bd 205c 	ldrsh.w	r2, [sp, #92]	@ 0x5c
 801da1c:	f9bd 305e 	ldrsh.w	r3, [sp, #94]	@ 0x5e
 801da20:	fb01 2303 	mla	r3, r1, r3, r2
 801da24:	eb00 0343 	add.w	r3, r0, r3, lsl #1
 801da28:	930a      	str	r3, [sp, #40]	@ 0x28
 801da2a:	9b2a      	ldr	r3, [sp, #168]	@ 0xa8
 801da2c:	f3c3 4307 	ubfx	r3, r3, #16, #8
 801da30:	9313      	str	r3, [sp, #76]	@ 0x4c
 801da32:	9b2a      	ldr	r3, [sp, #168]	@ 0xa8
 801da34:	0a19      	lsrs	r1, r3, #8
 801da36:	b2cb      	uxtb	r3, r1
 801da38:	9312      	str	r3, [sp, #72]	@ 0x48
 801da3a:	9b2a      	ldr	r3, [sp, #168]	@ 0xa8
 801da3c:	b2db      	uxtb	r3, r3
 801da3e:	9311      	str	r3, [sp, #68]	@ 0x44
 801da40:	9b2a      	ldr	r3, [sp, #168]	@ 0xa8
 801da42:	095a      	lsrs	r2, r3, #5
 801da44:	4b7d      	ldr	r3, [pc, #500]	@ (801dc3c <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x3a8>)
 801da46:	f402 62fc 	and.w	r2, r2, #2016	@ 0x7e0
 801da4a:	400b      	ands	r3, r1
 801da4c:	4313      	orrs	r3, r2
 801da4e:	9a2a      	ldr	r2, [sp, #168]	@ 0xa8
 801da50:	f3c2 02c4 	ubfx	r2, r2, #3, #5
 801da54:	4313      	orrs	r3, r2
 801da56:	b29b      	uxth	r3, r3
 801da58:	9310      	str	r3, [sp, #64]	@ 0x40
 801da5a:	9b28      	ldr	r3, [sp, #160]	@ 0xa0
 801da5c:	781a      	ldrb	r2, [r3, #0]
 801da5e:	ea4f 0349 	mov.w	r3, r9, lsl #1
 801da62:	4132      	asrs	r2, r6
 801da64:	fb05 b919 	mls	r9, r5, r9, fp
 801da68:	fb03 fb05 	mul.w	fp, r3, r5
 801da6c:	b2d2      	uxtb	r2, r2
 801da6e:	930d      	str	r3, [sp, #52]	@ 0x34
 801da70:	eb0b 0b49 	add.w	fp, fp, r9, lsl #1
 801da74:	f11a 3aff 	adds.w	sl, sl, #4294967295
 801da78:	f0c0 80f5 	bcc.w	801dc66 <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x3d2>
 801da7c:	f8dd c028 	ldr.w	ip, [sp, #40]	@ 0x28
 801da80:	46ae      	mov	lr, r5
 801da82:	f11e 3eff 	adds.w	lr, lr, #4294967295
 801da86:	f0c0 80dd 	bcc.w	801dc44 <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x3b0>
 801da8a:	9b0e      	ldr	r3, [sp, #56]	@ 0x38
 801da8c:	4013      	ands	r3, r2
 801da8e:	d055      	beq.n	801db3c <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x2a8>
 801da90:	20ff      	movs	r0, #255	@ 0xff
 801da92:	990e      	ldr	r1, [sp, #56]	@ 0x38
 801da94:	fb90 f1f1 	sdiv	r1, r0, r1
 801da98:	434b      	muls	r3, r1
 801da9a:	2bfe      	cmp	r3, #254	@ 0xfe
 801da9c:	dd03      	ble.n	801daa6 <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x212>
 801da9e:	990c      	ldr	r1, [sp, #48]	@ 0x30
 801daa0:	4281      	cmp	r1, r0
 801daa2:	f000 80cd 	beq.w	801dc40 <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x3ac>
 801daa6:	990c      	ldr	r1, [sp, #48]	@ 0x30
 801daa8:	f8bc 4000 	ldrh.w	r4, [ip]
 801daac:	fb11 f303 	smulbb	r3, r1, r3
 801dab0:	b29b      	uxth	r3, r3
 801dab2:	1c59      	adds	r1, r3, #1
 801dab4:	eb01 2313 	add.w	r3, r1, r3, lsr #8
 801dab8:	f3c3 2307 	ubfx	r3, r3, #8, #8
 801dabc:	b29f      	uxth	r7, r3
 801dabe:	43db      	mvns	r3, r3
 801dac0:	b2db      	uxtb	r3, r3
 801dac2:	9309      	str	r3, [sp, #36]	@ 0x24
 801dac4:	9b13      	ldr	r3, [sp, #76]	@ 0x4c
 801dac6:	1220      	asrs	r0, r4, #8
 801dac8:	fb13 f907 	smulbb	r9, r3, r7
 801dacc:	f000 00f8 	and.w	r0, r0, #248	@ 0xf8
 801dad0:	9b09      	ldr	r3, [sp, #36]	@ 0x24
 801dad2:	ea40 1050 	orr.w	r0, r0, r0, lsr #5
 801dad6:	fb00 9003 	mla	r0, r0, r3, r9
 801dada:	9b12      	ldr	r3, [sp, #72]	@ 0x48
 801dadc:	10e1      	asrs	r1, r4, #3
 801dade:	fb13 f907 	smulbb	r9, r3, r7
 801dae2:	f001 01fc 	and.w	r1, r1, #252	@ 0xfc
 801dae6:	9b09      	ldr	r3, [sp, #36]	@ 0x24
 801dae8:	ea41 1191 	orr.w	r1, r1, r1, lsr #6
 801daec:	fb01 9103 	mla	r1, r1, r3, r9
 801daf0:	9b11      	ldr	r3, [sp, #68]	@ 0x44
 801daf2:	00e4      	lsls	r4, r4, #3
 801daf4:	fb13 f707 	smulbb	r7, r3, r7
 801daf8:	b2e4      	uxtb	r4, r4
 801dafa:	9b09      	ldr	r3, [sp, #36]	@ 0x24
 801dafc:	ea44 1454 	orr.w	r4, r4, r4, lsr #5
 801db00:	fb04 7403 	mla	r4, r4, r3, r7
 801db04:	b280      	uxth	r0, r0
 801db06:	b2a4      	uxth	r4, r4
 801db08:	1c43      	adds	r3, r0, #1
 801db0a:	f104 0901 	add.w	r9, r4, #1
 801db0e:	eb03 2010 	add.w	r0, r3, r0, lsr #8
 801db12:	eb09 2914 	add.w	r9, r9, r4, lsr #8
 801db16:	b289      	uxth	r1, r1
 801db18:	f3c9 29c4 	ubfx	r9, r9, #11, #5
 801db1c:	f400 4078 	and.w	r0, r0, #63488	@ 0xf800
 801db20:	ea49 0000 	orr.w	r0, r9, r0
 801db24:	f101 0901 	add.w	r9, r1, #1
 801db28:	eb09 2911 	add.w	r9, r9, r1, lsr #8
 801db2c:	ea4f 1959 	mov.w	r9, r9, lsr #5
 801db30:	f409 69fc 	and.w	r9, r9, #2016	@ 0x7e0
 801db34:	ea40 0009 	orr.w	r0, r0, r9
 801db38:	f8ac 0000 	strh.w	r0, [ip]
 801db3c:	4446      	add	r6, r8
 801db3e:	b2b6      	uxth	r6, r6
 801db40:	2e07      	cmp	r6, #7
 801db42:	bf81      	itttt	hi
 801db44:	9b28      	ldrhi	r3, [sp, #160]	@ 0xa0
 801db46:	785a      	ldrbhi	r2, [r3, #1]
 801db48:	3301      	addhi	r3, #1
 801db4a:	9328      	strhi	r3, [sp, #160]	@ 0xa0
 801db4c:	9b0d      	ldr	r3, [sp, #52]	@ 0x34
 801db4e:	bf9a      	itte	ls
 801db50:	fa42 f208 	asrls.w	r2, r2, r8
 801db54:	b2d2      	uxtbls	r2, r2
 801db56:	2600      	movhi	r6, #0
 801db58:	449c      	add	ip, r3
 801db5a:	e792      	b.n	801da82 <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x1ee>
 801db5c:	441c      	add	r4, r3
 801db5e:	b224      	sxth	r4, r4
 801db60:	e6d5      	b.n	801d90e <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x7a>
 801db62:	f1ba 0f01 	cmp.w	sl, #1
 801db66:	f47f af0c 	bne.w	801d982 <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0xee>
 801db6a:	f1bb 0f01 	cmp.w	fp, #1
 801db6e:	f47f af08 	bne.w	801d982 <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0xee>
 801db72:	f8df b0c0 	ldr.w	fp, [pc, #192]	@ 801dc34 <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x3a0>
 801db76:	f8db 0000 	ldr.w	r0, [fp]
 801db7a:	6803      	ldr	r3, [r0, #0]
 801db7c:	6b9b      	ldr	r3, [r3, #56]	@ 0x38
 801db7e:	4798      	blx	r3
 801db80:	f410 7380 	ands.w	r3, r0, #256	@ 0x100
 801db84:	465a      	mov	r2, fp
 801db86:	d006      	beq.n	801db96 <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x302>
 801db88:	f1b8 0f04 	cmp.w	r8, #4
 801db8c:	d140      	bne.n	801dc10 <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x37c>
 801db8e:	9b10      	ldr	r3, [sp, #64]	@ 0x40
 801db90:	3300      	adds	r3, #0
 801db92:	bf18      	it	ne
 801db94:	2301      	movne	r3, #1
 801db96:	0580      	lsls	r0, r0, #22
 801db98:	d56e      	bpl.n	801dc78 <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x3e4>
 801db9a:	f1b8 0f08 	cmp.w	r8, #8
 801db9e:	d16b      	bne.n	801dc78 <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x3e4>
 801dba0:	2b00      	cmp	r3, #0
 801dba2:	bf0c      	ite	eq
 801dba4:	f44f 7100 	moveq.w	r1, #512	@ 0x200
 801dba8:	f44f 7180 	movne.w	r1, #256	@ 0x100
 801dbac:	2d00      	cmp	r5, #0
 801dbae:	f47f aee8 	bne.w	801d982 <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0xee>
 801dbb2:	2e00      	cmp	r6, #0
 801dbb4:	f47f aee5 	bne.w	801d982 <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0xee>
 801dbb8:	980f      	ldr	r0, [sp, #60]	@ 0x3c
 801dbba:	19e3      	adds	r3, r4, r7
 801dbbc:	4283      	cmp	r3, r0
 801dbbe:	f73f aee0 	bgt.w	801d982 <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0xee>
 801dbc2:	9b09      	ldr	r3, [sp, #36]	@ 0x24
 801dbc4:	980d      	ldr	r0, [sp, #52]	@ 0x34
 801dbc6:	444b      	add	r3, r9
 801dbc8:	4283      	cmp	r3, r0
 801dbca:	f73f aeda 	bgt.w	801d982 <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0xee>
 801dbce:	6810      	ldr	r0, [r2, #0]
 801dbd0:	f8bd 305e 	ldrh.w	r3, [sp, #94]	@ 0x5e
 801dbd4:	6804      	ldr	r4, [r0, #0]
 801dbd6:	f8bd 205c 	ldrh.w	r2, [sp, #92]	@ 0x5c
 801dbda:	b2bf      	uxth	r7, r7
 801dbdc:	f1b8 0f08 	cmp.w	r8, #8
 801dbe0:	f04f 0500 	mov.w	r5, #0
 801dbe4:	bf18      	it	ne
 801dbe6:	3701      	addne	r7, #1
 801dbe8:	e9cd 1505 	strd	r1, r5, [sp, #20]
 801dbec:	990c      	ldr	r1, [sp, #48]	@ 0x30
 801dbee:	9104      	str	r1, [sp, #16]
 801dbf0:	bf18      	it	ne
 801dbf2:	f027 0701 	bicne.w	r7, r7, #1
 801dbf6:	992a      	ldr	r1, [sp, #168]	@ 0xa8
 801dbf8:	bf18      	it	ne
 801dbfa:	b2bf      	uxthne	r7, r7
 801dbfc:	e9cd 7102 	strd	r7, r1, [sp, #8]
 801dc00:	e9cd 7900 	strd	r7, r9, [sp]
 801dc04:	9928      	ldr	r1, [sp, #160]	@ 0xa0
 801dc06:	6d64      	ldr	r4, [r4, #84]	@ 0x54
 801dc08:	47a0      	blx	r4
 801dc0a:	b019      	add	sp, #100	@ 0x64
 801dc0c:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 801dc10:	2300      	movs	r3, #0
 801dc12:	e7c0      	b.n	801db96 <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x302>
 801dc14:	2208      	movs	r2, #8
 801dc16:	fb92 f3f8 	sdiv	r3, r2, r8
 801dc1a:	1e5a      	subs	r2, r3, #1
 801dc1c:	443a      	add	r2, r7
 801dc1e:	fb92 f2f3 	sdiv	r2, r2, r3
 801dc22:	fb12 f203 	smulbb	r2, r2, r3
 801dc26:	b292      	uxth	r2, r2
 801dc28:	e6b0      	b.n	801d98c <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0xf8>
 801dc2a:	980b      	ldr	r0, [sp, #44]	@ 0x2c
 801dc2c:	e6ec      	b.n	801da08 <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x174>
 801dc2e:	bf00      	nop
 801dc30:	20002fa0 	.word	0x20002fa0
 801dc34:	20002fa8 	.word	0x20002fa8
 801dc38:	20002fa2 	.word	0x20002fa2
 801dc3c:	00fff800 	.word	0x00fff800
 801dc40:	9810      	ldr	r0, [sp, #64]	@ 0x40
 801dc42:	e779      	b.n	801db38 <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x2a4>
 801dc44:	9b0f      	ldr	r3, [sp, #60]	@ 0x3c
 801dc46:	b153      	cbz	r3, 801dc5e <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x3ca>
 801dc48:	441e      	add	r6, r3
 801dc4a:	9b28      	ldr	r3, [sp, #160]	@ 0xa0
 801dc4c:	b2b6      	uxth	r6, r6
 801dc4e:	eb03 03d6 	add.w	r3, r3, r6, lsr #3
 801dc52:	f006 0607 	and.w	r6, r6, #7
 801dc56:	781a      	ldrb	r2, [r3, #0]
 801dc58:	9328      	str	r3, [sp, #160]	@ 0xa0
 801dc5a:	4132      	asrs	r2, r6
 801dc5c:	b2d2      	uxtb	r2, r2
 801dc5e:	9b0a      	ldr	r3, [sp, #40]	@ 0x28
 801dc60:	445b      	add	r3, fp
 801dc62:	930a      	str	r3, [sp, #40]	@ 0x28
 801dc64:	e706      	b.n	801da74 <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x1e0>
 801dc66:	9b0b      	ldr	r3, [sp, #44]	@ 0x2c
 801dc68:	2b00      	cmp	r3, #0
 801dc6a:	d1ce      	bne.n	801dc0a <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x376>
 801dc6c:	4b05      	ldr	r3, [pc, #20]	@ (801dc84 <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x3f0>)
 801dc6e:	6818      	ldr	r0, [r3, #0]
 801dc70:	6803      	ldr	r3, [r0, #0]
 801dc72:	6adb      	ldr	r3, [r3, #44]	@ 0x2c
 801dc74:	4798      	blx	r3
 801dc76:	e7c8      	b.n	801dc0a <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x376>
 801dc78:	2b00      	cmp	r3, #0
 801dc7a:	f43f ae82 	beq.w	801d982 <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0xee>
 801dc7e:	f44f 7180 	mov.w	r1, #256	@ 0x100
 801dc82:	e793      	b.n	801dbac <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x318>
 801dc84:	20002fa8 	.word	0x20002fa8

0801dc88 <_ZN8touchgfx8LCD16bpp50enableTextureMapperL8_RGB565_BilinearInterpolationEv>:
 801dc88:	b538      	push	{r3, r4, r5, lr}
 801dc8a:	4c15      	ldr	r4, [pc, #84]	@ (801dce0 <_ZN8touchgfx8LCD16bpp50enableTextureMapperL8_RGB565_BilinearInterpolationEv+0x58>)
 801dc8c:	7823      	ldrb	r3, [r4, #0]
 801dc8e:	f3bf 8f5b 	dmb	ish
 801dc92:	07da      	lsls	r2, r3, #31
 801dc94:	4605      	mov	r5, r0
 801dc96:	d40b      	bmi.n	801dcb0 <_ZN8touchgfx8LCD16bpp50enableTextureMapperL8_RGB565_BilinearInterpolationEv+0x28>
 801dc98:	4620      	mov	r0, r4
 801dc9a:	f007 fefc 	bl	8025a96 <__cxa_guard_acquire>
 801dc9e:	b138      	cbz	r0, 801dcb0 <_ZN8touchgfx8LCD16bpp50enableTextureMapperL8_RGB565_BilinearInterpolationEv+0x28>
 801dca0:	4620      	mov	r0, r4
 801dca2:	f007 ff04 	bl	8025aae <__cxa_guard_release>
 801dca6:	4a0f      	ldr	r2, [pc, #60]	@ (801dce4 <_ZN8touchgfx8LCD16bpp50enableTextureMapperL8_RGB565_BilinearInterpolationEv+0x5c>)
 801dca8:	490f      	ldr	r1, [pc, #60]	@ (801dce8 <_ZN8touchgfx8LCD16bpp50enableTextureMapperL8_RGB565_BilinearInterpolationEv+0x60>)
 801dcaa:	4810      	ldr	r0, [pc, #64]	@ (801dcec <_ZN8touchgfx8LCD16bpp50enableTextureMapperL8_RGB565_BilinearInterpolationEv+0x64>)
 801dcac:	f007 feec 	bl	8025a88 <__aeabi_atexit>
 801dcb0:	4c0f      	ldr	r4, [pc, #60]	@ (801dcf0 <_ZN8touchgfx8LCD16bpp50enableTextureMapperL8_RGB565_BilinearInterpolationEv+0x68>)
 801dcb2:	7823      	ldrb	r3, [r4, #0]
 801dcb4:	f3bf 8f5b 	dmb	ish
 801dcb8:	07db      	lsls	r3, r3, #31
 801dcba:	d40b      	bmi.n	801dcd4 <_ZN8touchgfx8LCD16bpp50enableTextureMapperL8_RGB565_BilinearInterpolationEv+0x4c>
 801dcbc:	4620      	mov	r0, r4
 801dcbe:	f007 feea 	bl	8025a96 <__cxa_guard_acquire>
 801dcc2:	b138      	cbz	r0, 801dcd4 <_ZN8touchgfx8LCD16bpp50enableTextureMapperL8_RGB565_BilinearInterpolationEv+0x4c>
 801dcc4:	4620      	mov	r0, r4
 801dcc6:	f007 fef2 	bl	8025aae <__cxa_guard_release>
 801dcca:	4a06      	ldr	r2, [pc, #24]	@ (801dce4 <_ZN8touchgfx8LCD16bpp50enableTextureMapperL8_RGB565_BilinearInterpolationEv+0x5c>)
 801dccc:	4909      	ldr	r1, [pc, #36]	@ (801dcf4 <_ZN8touchgfx8LCD16bpp50enableTextureMapperL8_RGB565_BilinearInterpolationEv+0x6c>)
 801dcce:	480a      	ldr	r0, [pc, #40]	@ (801dcf8 <_ZN8touchgfx8LCD16bpp50enableTextureMapperL8_RGB565_BilinearInterpolationEv+0x70>)
 801dcd0:	f007 feda 	bl	8025a88 <__aeabi_atexit>
 801dcd4:	4b05      	ldr	r3, [pc, #20]	@ (801dcec <_ZN8touchgfx8LCD16bpp50enableTextureMapperL8_RGB565_BilinearInterpolationEv+0x64>)
 801dcd6:	616b      	str	r3, [r5, #20]
 801dcd8:	4b07      	ldr	r3, [pc, #28]	@ (801dcf8 <_ZN8touchgfx8LCD16bpp50enableTextureMapperL8_RGB565_BilinearInterpolationEv+0x70>)
 801dcda:	61ab      	str	r3, [r5, #24]
 801dcdc:	bd38      	pop	{r3, r4, r5, pc}
 801dcde:	bf00      	nop
 801dce0:	20003084 	.word	0x20003084
 801dce4:	20000000 	.word	0x20000000
 801dce8:	08019e4f 	.word	0x08019e4f
 801dcec:	20000078 	.word	0x20000078
 801dcf0:	20003088 	.word	0x20003088
 801dcf4:	08019e4d 	.word	0x08019e4d
 801dcf8:	2000007c 	.word	0x2000007c

0801dcfc <_ZN8touchgfx8LCD16bpp44enableTextureMapperL8_RGB565_NearestNeighborEv>:
 801dcfc:	b538      	push	{r3, r4, r5, lr}
 801dcfe:	4c15      	ldr	r4, [pc, #84]	@ (801dd54 <_ZN8touchgfx8LCD16bpp44enableTextureMapperL8_RGB565_NearestNeighborEv+0x58>)
 801dd00:	7823      	ldrb	r3, [r4, #0]
 801dd02:	f3bf 8f5b 	dmb	ish
 801dd06:	07da      	lsls	r2, r3, #31
 801dd08:	4605      	mov	r5, r0
 801dd0a:	d40b      	bmi.n	801dd24 <_ZN8touchgfx8LCD16bpp44enableTextureMapperL8_RGB565_NearestNeighborEv+0x28>
 801dd0c:	4620      	mov	r0, r4
 801dd0e:	f007 fec2 	bl	8025a96 <__cxa_guard_acquire>
 801dd12:	b138      	cbz	r0, 801dd24 <_ZN8touchgfx8LCD16bpp44enableTextureMapperL8_RGB565_NearestNeighborEv+0x28>
 801dd14:	4620      	mov	r0, r4
 801dd16:	f007 feca 	bl	8025aae <__cxa_guard_release>
 801dd1a:	4a0f      	ldr	r2, [pc, #60]	@ (801dd58 <_ZN8touchgfx8LCD16bpp44enableTextureMapperL8_RGB565_NearestNeighborEv+0x5c>)
 801dd1c:	490f      	ldr	r1, [pc, #60]	@ (801dd5c <_ZN8touchgfx8LCD16bpp44enableTextureMapperL8_RGB565_NearestNeighborEv+0x60>)
 801dd1e:	4810      	ldr	r0, [pc, #64]	@ (801dd60 <_ZN8touchgfx8LCD16bpp44enableTextureMapperL8_RGB565_NearestNeighborEv+0x64>)
 801dd20:	f007 feb2 	bl	8025a88 <__aeabi_atexit>
 801dd24:	4c0f      	ldr	r4, [pc, #60]	@ (801dd64 <_ZN8touchgfx8LCD16bpp44enableTextureMapperL8_RGB565_NearestNeighborEv+0x68>)
 801dd26:	7823      	ldrb	r3, [r4, #0]
 801dd28:	f3bf 8f5b 	dmb	ish
 801dd2c:	07db      	lsls	r3, r3, #31
 801dd2e:	d40b      	bmi.n	801dd48 <_ZN8touchgfx8LCD16bpp44enableTextureMapperL8_RGB565_NearestNeighborEv+0x4c>
 801dd30:	4620      	mov	r0, r4
 801dd32:	f007 feb0 	bl	8025a96 <__cxa_guard_acquire>
 801dd36:	b138      	cbz	r0, 801dd48 <_ZN8touchgfx8LCD16bpp44enableTextureMapperL8_RGB565_NearestNeighborEv+0x4c>
 801dd38:	4620      	mov	r0, r4
 801dd3a:	f007 feb8 	bl	8025aae <__cxa_guard_release>
 801dd3e:	4a06      	ldr	r2, [pc, #24]	@ (801dd58 <_ZN8touchgfx8LCD16bpp44enableTextureMapperL8_RGB565_NearestNeighborEv+0x5c>)
 801dd40:	4909      	ldr	r1, [pc, #36]	@ (801dd68 <_ZN8touchgfx8LCD16bpp44enableTextureMapperL8_RGB565_NearestNeighborEv+0x6c>)
 801dd42:	480a      	ldr	r0, [pc, #40]	@ (801dd6c <_ZN8touchgfx8LCD16bpp44enableTextureMapperL8_RGB565_NearestNeighborEv+0x70>)
 801dd44:	f007 fea0 	bl	8025a88 <__aeabi_atexit>
 801dd48:	4b05      	ldr	r3, [pc, #20]	@ (801dd60 <_ZN8touchgfx8LCD16bpp44enableTextureMapperL8_RGB565_NearestNeighborEv+0x64>)
 801dd4a:	60eb      	str	r3, [r5, #12]
 801dd4c:	4b07      	ldr	r3, [pc, #28]	@ (801dd6c <_ZN8touchgfx8LCD16bpp44enableTextureMapperL8_RGB565_NearestNeighborEv+0x70>)
 801dd4e:	612b      	str	r3, [r5, #16]
 801dd50:	bd38      	pop	{r3, r4, r5, pc}
 801dd52:	bf00      	nop
 801dd54:	2000305c 	.word	0x2000305c
 801dd58:	20000000 	.word	0x20000000
 801dd5c:	08019e53 	.word	0x08019e53
 801dd60:	20000050 	.word	0x20000050
 801dd64:	20003060 	.word	0x20003060
 801dd68:	08019e51 	.word	0x08019e51
 801dd6c:	20000054 	.word	0x20000054

0801dd70 <_ZN8touchgfx8LCD16bpp28enableTextureMapperL8_RGB565Ev>:
 801dd70:	b510      	push	{r4, lr}
 801dd72:	4604      	mov	r4, r0
 801dd74:	f7ff ff88 	bl	801dc88 <_ZN8touchgfx8LCD16bpp50enableTextureMapperL8_RGB565_BilinearInterpolationEv>
 801dd78:	4620      	mov	r0, r4
 801dd7a:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
 801dd7e:	f7ff bfbd 	b.w	801dcfc <_ZN8touchgfx8LCD16bpp44enableTextureMapperL8_RGB565_NearestNeighborEv>
	...

0801dd84 <_ZN8touchgfx8LCD16bpp50enableTextureMapperL8_RGB888_BilinearInterpolationEv>:
 801dd84:	b538      	push	{r3, r4, r5, lr}
 801dd86:	4c15      	ldr	r4, [pc, #84]	@ (801dddc <_ZN8touchgfx8LCD16bpp50enableTextureMapperL8_RGB888_BilinearInterpolationEv+0x58>)
 801dd88:	7823      	ldrb	r3, [r4, #0]
 801dd8a:	f3bf 8f5b 	dmb	ish
 801dd8e:	07da      	lsls	r2, r3, #31
 801dd90:	4605      	mov	r5, r0
 801dd92:	d40b      	bmi.n	801ddac <_ZN8touchgfx8LCD16bpp50enableTextureMapperL8_RGB888_BilinearInterpolationEv+0x28>
 801dd94:	4620      	mov	r0, r4
 801dd96:	f007 fe7e 	bl	8025a96 <__cxa_guard_acquire>
 801dd9a:	b138      	cbz	r0, 801ddac <_ZN8touchgfx8LCD16bpp50enableTextureMapperL8_RGB888_BilinearInterpolationEv+0x28>
 801dd9c:	4620      	mov	r0, r4
 801dd9e:	f007 fe86 	bl	8025aae <__cxa_guard_release>
 801dda2:	4a0f      	ldr	r2, [pc, #60]	@ (801dde0 <_ZN8touchgfx8LCD16bpp50enableTextureMapperL8_RGB888_BilinearInterpolationEv+0x5c>)
 801dda4:	490f      	ldr	r1, [pc, #60]	@ (801dde4 <_ZN8touchgfx8LCD16bpp50enableTextureMapperL8_RGB888_BilinearInterpolationEv+0x60>)
 801dda6:	4810      	ldr	r0, [pc, #64]	@ (801dde8 <_ZN8touchgfx8LCD16bpp50enableTextureMapperL8_RGB888_BilinearInterpolationEv+0x64>)
 801dda8:	f007 fe6e 	bl	8025a88 <__aeabi_atexit>
 801ddac:	4c0f      	ldr	r4, [pc, #60]	@ (801ddec <_ZN8touchgfx8LCD16bpp50enableTextureMapperL8_RGB888_BilinearInterpolationEv+0x68>)
 801ddae:	7823      	ldrb	r3, [r4, #0]
 801ddb0:	f3bf 8f5b 	dmb	ish
 801ddb4:	07db      	lsls	r3, r3, #31
 801ddb6:	d40b      	bmi.n	801ddd0 <_ZN8touchgfx8LCD16bpp50enableTextureMapperL8_RGB888_BilinearInterpolationEv+0x4c>
 801ddb8:	4620      	mov	r0, r4
 801ddba:	f007 fe6c 	bl	8025a96 <__cxa_guard_acquire>
 801ddbe:	b138      	cbz	r0, 801ddd0 <_ZN8touchgfx8LCD16bpp50enableTextureMapperL8_RGB888_BilinearInterpolationEv+0x4c>
 801ddc0:	4620      	mov	r0, r4
 801ddc2:	f007 fe74 	bl	8025aae <__cxa_guard_release>
 801ddc6:	4a06      	ldr	r2, [pc, #24]	@ (801dde0 <_ZN8touchgfx8LCD16bpp50enableTextureMapperL8_RGB888_BilinearInterpolationEv+0x5c>)
 801ddc8:	4909      	ldr	r1, [pc, #36]	@ (801ddf0 <_ZN8touchgfx8LCD16bpp50enableTextureMapperL8_RGB888_BilinearInterpolationEv+0x6c>)
 801ddca:	480a      	ldr	r0, [pc, #40]	@ (801ddf4 <_ZN8touchgfx8LCD16bpp50enableTextureMapperL8_RGB888_BilinearInterpolationEv+0x70>)
 801ddcc:	f007 fe5c 	bl	8025a88 <__aeabi_atexit>
 801ddd0:	4b05      	ldr	r3, [pc, #20]	@ (801dde8 <_ZN8touchgfx8LCD16bpp50enableTextureMapperL8_RGB888_BilinearInterpolationEv+0x64>)
 801ddd2:	626b      	str	r3, [r5, #36]	@ 0x24
 801ddd4:	4b07      	ldr	r3, [pc, #28]	@ (801ddf4 <_ZN8touchgfx8LCD16bpp50enableTextureMapperL8_RGB888_BilinearInterpolationEv+0x70>)
 801ddd6:	62ab      	str	r3, [r5, #40]	@ 0x28
 801ddd8:	bd38      	pop	{r3, r4, r5, pc}
 801ddda:	bf00      	nop
 801dddc:	2000308c 	.word	0x2000308c
 801dde0:	20000000 	.word	0x20000000
 801dde4:	08019e47 	.word	0x08019e47
 801dde8:	20000080 	.word	0x20000080
 801ddec:	20003090 	.word	0x20003090
 801ddf0:	08019e45 	.word	0x08019e45
 801ddf4:	20000084 	.word	0x20000084

0801ddf8 <_ZN8touchgfx8LCD16bpp44enableTextureMapperL8_RGB888_NearestNeighborEv>:
 801ddf8:	b538      	push	{r3, r4, r5, lr}
 801ddfa:	4c15      	ldr	r4, [pc, #84]	@ (801de50 <_ZN8touchgfx8LCD16bpp44enableTextureMapperL8_RGB888_NearestNeighborEv+0x58>)
 801ddfc:	7823      	ldrb	r3, [r4, #0]
 801ddfe:	f3bf 8f5b 	dmb	ish
 801de02:	07da      	lsls	r2, r3, #31
 801de04:	4605      	mov	r5, r0
 801de06:	d40b      	bmi.n	801de20 <_ZN8touchgfx8LCD16bpp44enableTextureMapperL8_RGB888_NearestNeighborEv+0x28>
 801de08:	4620      	mov	r0, r4
 801de0a:	f007 fe44 	bl	8025a96 <__cxa_guard_acquire>
 801de0e:	b138      	cbz	r0, 801de20 <_ZN8touchgfx8LCD16bpp44enableTextureMapperL8_RGB888_NearestNeighborEv+0x28>
 801de10:	4620      	mov	r0, r4
 801de12:	f007 fe4c 	bl	8025aae <__cxa_guard_release>
 801de16:	4a0f      	ldr	r2, [pc, #60]	@ (801de54 <_ZN8touchgfx8LCD16bpp44enableTextureMapperL8_RGB888_NearestNeighborEv+0x5c>)
 801de18:	490f      	ldr	r1, [pc, #60]	@ (801de58 <_ZN8touchgfx8LCD16bpp44enableTextureMapperL8_RGB888_NearestNeighborEv+0x60>)
 801de1a:	4810      	ldr	r0, [pc, #64]	@ (801de5c <_ZN8touchgfx8LCD16bpp44enableTextureMapperL8_RGB888_NearestNeighborEv+0x64>)
 801de1c:	f007 fe34 	bl	8025a88 <__aeabi_atexit>
 801de20:	4c0f      	ldr	r4, [pc, #60]	@ (801de60 <_ZN8touchgfx8LCD16bpp44enableTextureMapperL8_RGB888_NearestNeighborEv+0x68>)
 801de22:	7823      	ldrb	r3, [r4, #0]
 801de24:	f3bf 8f5b 	dmb	ish
 801de28:	07db      	lsls	r3, r3, #31
 801de2a:	d40b      	bmi.n	801de44 <_ZN8touchgfx8LCD16bpp44enableTextureMapperL8_RGB888_NearestNeighborEv+0x4c>
 801de2c:	4620      	mov	r0, r4
 801de2e:	f007 fe32 	bl	8025a96 <__cxa_guard_acquire>
 801de32:	b138      	cbz	r0, 801de44 <_ZN8touchgfx8LCD16bpp44enableTextureMapperL8_RGB888_NearestNeighborEv+0x4c>
 801de34:	4620      	mov	r0, r4
 801de36:	f007 fe3a 	bl	8025aae <__cxa_guard_release>
 801de3a:	4a06      	ldr	r2, [pc, #24]	@ (801de54 <_ZN8touchgfx8LCD16bpp44enableTextureMapperL8_RGB888_NearestNeighborEv+0x5c>)
 801de3c:	4909      	ldr	r1, [pc, #36]	@ (801de64 <_ZN8touchgfx8LCD16bpp44enableTextureMapperL8_RGB888_NearestNeighborEv+0x6c>)
 801de3e:	480a      	ldr	r0, [pc, #40]	@ (801de68 <_ZN8touchgfx8LCD16bpp44enableTextureMapperL8_RGB888_NearestNeighborEv+0x70>)
 801de40:	f007 fe22 	bl	8025a88 <__aeabi_atexit>
 801de44:	4b05      	ldr	r3, [pc, #20]	@ (801de5c <_ZN8touchgfx8LCD16bpp44enableTextureMapperL8_RGB888_NearestNeighborEv+0x64>)
 801de46:	61eb      	str	r3, [r5, #28]
 801de48:	4b07      	ldr	r3, [pc, #28]	@ (801de68 <_ZN8touchgfx8LCD16bpp44enableTextureMapperL8_RGB888_NearestNeighborEv+0x70>)
 801de4a:	622b      	str	r3, [r5, #32]
 801de4c:	bd38      	pop	{r3, r4, r5, pc}
 801de4e:	bf00      	nop
 801de50:	20003064 	.word	0x20003064
 801de54:	20000000 	.word	0x20000000
 801de58:	08019e4b 	.word	0x08019e4b
 801de5c:	20000058 	.word	0x20000058
 801de60:	20003068 	.word	0x20003068
 801de64:	08019e49 	.word	0x08019e49
 801de68:	2000005c 	.word	0x2000005c

0801de6c <_ZN8touchgfx8LCD16bpp28enableTextureMapperL8_RGB888Ev>:
 801de6c:	b510      	push	{r4, lr}
 801de6e:	4604      	mov	r4, r0
 801de70:	f7ff ff88 	bl	801dd84 <_ZN8touchgfx8LCD16bpp50enableTextureMapperL8_RGB888_BilinearInterpolationEv>
 801de74:	4620      	mov	r0, r4
 801de76:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
 801de7a:	f7ff bfbd 	b.w	801ddf8 <_ZN8touchgfx8LCD16bpp44enableTextureMapperL8_RGB888_NearestNeighborEv>
	...

0801de80 <_ZN8touchgfx8LCD16bpp52enableTextureMapperL8_ARGB8888_BilinearInterpolationEv>:
 801de80:	b538      	push	{r3, r4, r5, lr}
 801de82:	4c15      	ldr	r4, [pc, #84]	@ (801ded8 <_ZN8touchgfx8LCD16bpp52enableTextureMapperL8_ARGB8888_BilinearInterpolationEv+0x58>)
 801de84:	7823      	ldrb	r3, [r4, #0]
 801de86:	f3bf 8f5b 	dmb	ish
 801de8a:	07da      	lsls	r2, r3, #31
 801de8c:	4605      	mov	r5, r0
 801de8e:	d40b      	bmi.n	801dea8 <_ZN8touchgfx8LCD16bpp52enableTextureMapperL8_ARGB8888_BilinearInterpolationEv+0x28>
 801de90:	4620      	mov	r0, r4
 801de92:	f007 fe00 	bl	8025a96 <__cxa_guard_acquire>
 801de96:	b138      	cbz	r0, 801dea8 <_ZN8touchgfx8LCD16bpp52enableTextureMapperL8_ARGB8888_BilinearInterpolationEv+0x28>
 801de98:	4620      	mov	r0, r4
 801de9a:	f007 fe08 	bl	8025aae <__cxa_guard_release>
 801de9e:	4a0f      	ldr	r2, [pc, #60]	@ (801dedc <_ZN8touchgfx8LCD16bpp52enableTextureMapperL8_ARGB8888_BilinearInterpolationEv+0x5c>)
 801dea0:	490f      	ldr	r1, [pc, #60]	@ (801dee0 <_ZN8touchgfx8LCD16bpp52enableTextureMapperL8_ARGB8888_BilinearInterpolationEv+0x60>)
 801dea2:	4810      	ldr	r0, [pc, #64]	@ (801dee4 <_ZN8touchgfx8LCD16bpp52enableTextureMapperL8_ARGB8888_BilinearInterpolationEv+0x64>)
 801dea4:	f007 fdf0 	bl	8025a88 <__aeabi_atexit>
 801dea8:	4c0f      	ldr	r4, [pc, #60]	@ (801dee8 <_ZN8touchgfx8LCD16bpp52enableTextureMapperL8_ARGB8888_BilinearInterpolationEv+0x68>)
 801deaa:	7823      	ldrb	r3, [r4, #0]
 801deac:	f3bf 8f5b 	dmb	ish
 801deb0:	07db      	lsls	r3, r3, #31
 801deb2:	d40b      	bmi.n	801decc <_ZN8touchgfx8LCD16bpp52enableTextureMapperL8_ARGB8888_BilinearInterpolationEv+0x4c>
 801deb4:	4620      	mov	r0, r4
 801deb6:	f007 fdee 	bl	8025a96 <__cxa_guard_acquire>
 801deba:	b138      	cbz	r0, 801decc <_ZN8touchgfx8LCD16bpp52enableTextureMapperL8_ARGB8888_BilinearInterpolationEv+0x4c>
 801debc:	4620      	mov	r0, r4
 801debe:	f007 fdf6 	bl	8025aae <__cxa_guard_release>
 801dec2:	4a06      	ldr	r2, [pc, #24]	@ (801dedc <_ZN8touchgfx8LCD16bpp52enableTextureMapperL8_ARGB8888_BilinearInterpolationEv+0x5c>)
 801dec4:	4909      	ldr	r1, [pc, #36]	@ (801deec <_ZN8touchgfx8LCD16bpp52enableTextureMapperL8_ARGB8888_BilinearInterpolationEv+0x6c>)
 801dec6:	480a      	ldr	r0, [pc, #40]	@ (801def0 <_ZN8touchgfx8LCD16bpp52enableTextureMapperL8_ARGB8888_BilinearInterpolationEv+0x70>)
 801dec8:	f007 fdde 	bl	8025a88 <__aeabi_atexit>
 801decc:	4b05      	ldr	r3, [pc, #20]	@ (801dee4 <_ZN8touchgfx8LCD16bpp52enableTextureMapperL8_ARGB8888_BilinearInterpolationEv+0x64>)
 801dece:	636b      	str	r3, [r5, #52]	@ 0x34
 801ded0:	4b07      	ldr	r3, [pc, #28]	@ (801def0 <_ZN8touchgfx8LCD16bpp52enableTextureMapperL8_ARGB8888_BilinearInterpolationEv+0x70>)
 801ded2:	63ab      	str	r3, [r5, #56]	@ 0x38
 801ded4:	bd38      	pop	{r3, r4, r5, pc}
 801ded6:	bf00      	nop
 801ded8:	2000309c 	.word	0x2000309c
 801dedc:	20000000 	.word	0x20000000
 801dee0:	08019e3f 	.word	0x08019e3f
 801dee4:	20000090 	.word	0x20000090
 801dee8:	200030a0 	.word	0x200030a0
 801deec:	08019e3d 	.word	0x08019e3d
 801def0:	20000094 	.word	0x20000094

0801def4 <_ZN8touchgfx8LCD16bpp46enableTextureMapperL8_ARGB8888_NearestNeighborEv>:
 801def4:	b538      	push	{r3, r4, r5, lr}
 801def6:	4c15      	ldr	r4, [pc, #84]	@ (801df4c <_ZN8touchgfx8LCD16bpp46enableTextureMapperL8_ARGB8888_NearestNeighborEv+0x58>)
 801def8:	7823      	ldrb	r3, [r4, #0]
 801defa:	f3bf 8f5b 	dmb	ish
 801defe:	07da      	lsls	r2, r3, #31
 801df00:	4605      	mov	r5, r0
 801df02:	d40b      	bmi.n	801df1c <_ZN8touchgfx8LCD16bpp46enableTextureMapperL8_ARGB8888_NearestNeighborEv+0x28>
 801df04:	4620      	mov	r0, r4
 801df06:	f007 fdc6 	bl	8025a96 <__cxa_guard_acquire>
 801df0a:	b138      	cbz	r0, 801df1c <_ZN8touchgfx8LCD16bpp46enableTextureMapperL8_ARGB8888_NearestNeighborEv+0x28>
 801df0c:	4620      	mov	r0, r4
 801df0e:	f007 fdce 	bl	8025aae <__cxa_guard_release>
 801df12:	4a0f      	ldr	r2, [pc, #60]	@ (801df50 <_ZN8touchgfx8LCD16bpp46enableTextureMapperL8_ARGB8888_NearestNeighborEv+0x5c>)
 801df14:	490f      	ldr	r1, [pc, #60]	@ (801df54 <_ZN8touchgfx8LCD16bpp46enableTextureMapperL8_ARGB8888_NearestNeighborEv+0x60>)
 801df16:	4810      	ldr	r0, [pc, #64]	@ (801df58 <_ZN8touchgfx8LCD16bpp46enableTextureMapperL8_ARGB8888_NearestNeighborEv+0x64>)
 801df18:	f007 fdb6 	bl	8025a88 <__aeabi_atexit>
 801df1c:	4c0f      	ldr	r4, [pc, #60]	@ (801df5c <_ZN8touchgfx8LCD16bpp46enableTextureMapperL8_ARGB8888_NearestNeighborEv+0x68>)
 801df1e:	7823      	ldrb	r3, [r4, #0]
 801df20:	f3bf 8f5b 	dmb	ish
 801df24:	07db      	lsls	r3, r3, #31
 801df26:	d40b      	bmi.n	801df40 <_ZN8touchgfx8LCD16bpp46enableTextureMapperL8_ARGB8888_NearestNeighborEv+0x4c>
 801df28:	4620      	mov	r0, r4
 801df2a:	f007 fdb4 	bl	8025a96 <__cxa_guard_acquire>
 801df2e:	b138      	cbz	r0, 801df40 <_ZN8touchgfx8LCD16bpp46enableTextureMapperL8_ARGB8888_NearestNeighborEv+0x4c>
 801df30:	4620      	mov	r0, r4
 801df32:	f007 fdbc 	bl	8025aae <__cxa_guard_release>
 801df36:	4a06      	ldr	r2, [pc, #24]	@ (801df50 <_ZN8touchgfx8LCD16bpp46enableTextureMapperL8_ARGB8888_NearestNeighborEv+0x5c>)
 801df38:	4909      	ldr	r1, [pc, #36]	@ (801df60 <_ZN8touchgfx8LCD16bpp46enableTextureMapperL8_ARGB8888_NearestNeighborEv+0x6c>)
 801df3a:	480a      	ldr	r0, [pc, #40]	@ (801df64 <_ZN8touchgfx8LCD16bpp46enableTextureMapperL8_ARGB8888_NearestNeighborEv+0x70>)
 801df3c:	f007 fda4 	bl	8025a88 <__aeabi_atexit>
 801df40:	4b05      	ldr	r3, [pc, #20]	@ (801df58 <_ZN8touchgfx8LCD16bpp46enableTextureMapperL8_ARGB8888_NearestNeighborEv+0x64>)
 801df42:	62eb      	str	r3, [r5, #44]	@ 0x2c
 801df44:	4b07      	ldr	r3, [pc, #28]	@ (801df64 <_ZN8touchgfx8LCD16bpp46enableTextureMapperL8_ARGB8888_NearestNeighborEv+0x70>)
 801df46:	632b      	str	r3, [r5, #48]	@ 0x30
 801df48:	bd38      	pop	{r3, r4, r5, pc}
 801df4a:	bf00      	nop
 801df4c:	2000306c 	.word	0x2000306c
 801df50:	20000000 	.word	0x20000000
 801df54:	08019e43 	.word	0x08019e43
 801df58:	20000060 	.word	0x20000060
 801df5c:	20003070 	.word	0x20003070
 801df60:	08019e41 	.word	0x08019e41
 801df64:	20000064 	.word	0x20000064

0801df68 <_ZN8touchgfx8LCD16bpp30enableTextureMapperL8_ARGB8888Ev>:
 801df68:	b510      	push	{r4, lr}
 801df6a:	4604      	mov	r4, r0
 801df6c:	f7ff ff88 	bl	801de80 <_ZN8touchgfx8LCD16bpp52enableTextureMapperL8_ARGB8888_BilinearInterpolationEv>
 801df70:	4620      	mov	r0, r4
 801df72:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
 801df76:	f7ff bfbd 	b.w	801def4 <_ZN8touchgfx8LCD16bpp46enableTextureMapperL8_ARGB8888_NearestNeighborEv>
	...

0801df7c <_ZN8touchgfx8LCD16bpp54enableTextureMapperRGB565_Opaque_BilinearInterpolationEv>:
 801df7c:	b538      	push	{r3, r4, r5, lr}
 801df7e:	4c15      	ldr	r4, [pc, #84]	@ (801dfd4 <_ZN8touchgfx8LCD16bpp54enableTextureMapperRGB565_Opaque_BilinearInterpolationEv+0x58>)
 801df80:	7823      	ldrb	r3, [r4, #0]
 801df82:	f3bf 8f5b 	dmb	ish
 801df86:	07da      	lsls	r2, r3, #31
 801df88:	4605      	mov	r5, r0
 801df8a:	d40b      	bmi.n	801dfa4 <_ZN8touchgfx8LCD16bpp54enableTextureMapperRGB565_Opaque_BilinearInterpolationEv+0x28>
 801df8c:	4620      	mov	r0, r4
 801df8e:	f007 fd82 	bl	8025a96 <__cxa_guard_acquire>
 801df92:	b138      	cbz	r0, 801dfa4 <_ZN8touchgfx8LCD16bpp54enableTextureMapperRGB565_Opaque_BilinearInterpolationEv+0x28>
 801df94:	4620      	mov	r0, r4
 801df96:	f007 fd8a 	bl	8025aae <__cxa_guard_release>
 801df9a:	4a0f      	ldr	r2, [pc, #60]	@ (801dfd8 <_ZN8touchgfx8LCD16bpp54enableTextureMapperRGB565_Opaque_BilinearInterpolationEv+0x5c>)
 801df9c:	490f      	ldr	r1, [pc, #60]	@ (801dfdc <_ZN8touchgfx8LCD16bpp54enableTextureMapperRGB565_Opaque_BilinearInterpolationEv+0x60>)
 801df9e:	4810      	ldr	r0, [pc, #64]	@ (801dfe0 <_ZN8touchgfx8LCD16bpp54enableTextureMapperRGB565_Opaque_BilinearInterpolationEv+0x64>)
 801dfa0:	f007 fd72 	bl	8025a88 <__aeabi_atexit>
 801dfa4:	4c0f      	ldr	r4, [pc, #60]	@ (801dfe4 <_ZN8touchgfx8LCD16bpp54enableTextureMapperRGB565_Opaque_BilinearInterpolationEv+0x68>)
 801dfa6:	7823      	ldrb	r3, [r4, #0]
 801dfa8:	f3bf 8f5b 	dmb	ish
 801dfac:	07db      	lsls	r3, r3, #31
 801dfae:	d40b      	bmi.n	801dfc8 <_ZN8touchgfx8LCD16bpp54enableTextureMapperRGB565_Opaque_BilinearInterpolationEv+0x4c>
 801dfb0:	4620      	mov	r0, r4
 801dfb2:	f007 fd70 	bl	8025a96 <__cxa_guard_acquire>
 801dfb6:	b138      	cbz	r0, 801dfc8 <_ZN8touchgfx8LCD16bpp54enableTextureMapperRGB565_Opaque_BilinearInterpolationEv+0x4c>
 801dfb8:	4620      	mov	r0, r4
 801dfba:	f007 fd78 	bl	8025aae <__cxa_guard_release>
 801dfbe:	4a06      	ldr	r2, [pc, #24]	@ (801dfd8 <_ZN8touchgfx8LCD16bpp54enableTextureMapperRGB565_Opaque_BilinearInterpolationEv+0x5c>)
 801dfc0:	4909      	ldr	r1, [pc, #36]	@ (801dfe8 <_ZN8touchgfx8LCD16bpp54enableTextureMapperRGB565_Opaque_BilinearInterpolationEv+0x6c>)
 801dfc2:	480a      	ldr	r0, [pc, #40]	@ (801dfec <_ZN8touchgfx8LCD16bpp54enableTextureMapperRGB565_Opaque_BilinearInterpolationEv+0x70>)
 801dfc4:	f007 fd60 	bl	8025a88 <__aeabi_atexit>
 801dfc8:	4b05      	ldr	r3, [pc, #20]	@ (801dfe0 <_ZN8touchgfx8LCD16bpp54enableTextureMapperRGB565_Opaque_BilinearInterpolationEv+0x64>)
 801dfca:	656b      	str	r3, [r5, #84]	@ 0x54
 801dfcc:	4b07      	ldr	r3, [pc, #28]	@ (801dfec <_ZN8touchgfx8LCD16bpp54enableTextureMapperRGB565_Opaque_BilinearInterpolationEv+0x70>)
 801dfce:	65ab      	str	r3, [r5, #88]	@ 0x58
 801dfd0:	bd38      	pop	{r3, r4, r5, pc}
 801dfd2:	bf00      	nop
 801dfd4:	200030a4 	.word	0x200030a4
 801dfd8:	20000000 	.word	0x20000000
 801dfdc:	08019e2f 	.word	0x08019e2f
 801dfe0:	20000098 	.word	0x20000098
 801dfe4:	200030a8 	.word	0x200030a8
 801dfe8:	08019e2d 	.word	0x08019e2d
 801dfec:	2000009c 	.word	0x2000009c

0801dff0 <_ZN8touchgfx8LCD16bpp57enableTextureMapperRGB565_NonOpaque_BilinearInterpolationEv>:
 801dff0:	b538      	push	{r3, r4, r5, lr}
 801dff2:	4c15      	ldr	r4, [pc, #84]	@ (801e048 <_ZN8touchgfx8LCD16bpp57enableTextureMapperRGB565_NonOpaque_BilinearInterpolationEv+0x58>)
 801dff4:	7823      	ldrb	r3, [r4, #0]
 801dff6:	f3bf 8f5b 	dmb	ish
 801dffa:	07da      	lsls	r2, r3, #31
 801dffc:	4605      	mov	r5, r0
 801dffe:	d40b      	bmi.n	801e018 <_ZN8touchgfx8LCD16bpp57enableTextureMapperRGB565_NonOpaque_BilinearInterpolationEv+0x28>
 801e000:	4620      	mov	r0, r4
 801e002:	f007 fd48 	bl	8025a96 <__cxa_guard_acquire>
 801e006:	b138      	cbz	r0, 801e018 <_ZN8touchgfx8LCD16bpp57enableTextureMapperRGB565_NonOpaque_BilinearInterpolationEv+0x28>
 801e008:	4620      	mov	r0, r4
 801e00a:	f007 fd50 	bl	8025aae <__cxa_guard_release>
 801e00e:	4a0f      	ldr	r2, [pc, #60]	@ (801e04c <_ZN8touchgfx8LCD16bpp57enableTextureMapperRGB565_NonOpaque_BilinearInterpolationEv+0x5c>)
 801e010:	490f      	ldr	r1, [pc, #60]	@ (801e050 <_ZN8touchgfx8LCD16bpp57enableTextureMapperRGB565_NonOpaque_BilinearInterpolationEv+0x60>)
 801e012:	4810      	ldr	r0, [pc, #64]	@ (801e054 <_ZN8touchgfx8LCD16bpp57enableTextureMapperRGB565_NonOpaque_BilinearInterpolationEv+0x64>)
 801e014:	f007 fd38 	bl	8025a88 <__aeabi_atexit>
 801e018:	4c0f      	ldr	r4, [pc, #60]	@ (801e058 <_ZN8touchgfx8LCD16bpp57enableTextureMapperRGB565_NonOpaque_BilinearInterpolationEv+0x68>)
 801e01a:	7823      	ldrb	r3, [r4, #0]
 801e01c:	f3bf 8f5b 	dmb	ish
 801e020:	07db      	lsls	r3, r3, #31
 801e022:	d40b      	bmi.n	801e03c <_ZN8touchgfx8LCD16bpp57enableTextureMapperRGB565_NonOpaque_BilinearInterpolationEv+0x4c>
 801e024:	4620      	mov	r0, r4
 801e026:	f007 fd36 	bl	8025a96 <__cxa_guard_acquire>
 801e02a:	b138      	cbz	r0, 801e03c <_ZN8touchgfx8LCD16bpp57enableTextureMapperRGB565_NonOpaque_BilinearInterpolationEv+0x4c>
 801e02c:	4620      	mov	r0, r4
 801e02e:	f007 fd3e 	bl	8025aae <__cxa_guard_release>
 801e032:	4a06      	ldr	r2, [pc, #24]	@ (801e04c <_ZN8touchgfx8LCD16bpp57enableTextureMapperRGB565_NonOpaque_BilinearInterpolationEv+0x5c>)
 801e034:	4909      	ldr	r1, [pc, #36]	@ (801e05c <_ZN8touchgfx8LCD16bpp57enableTextureMapperRGB565_NonOpaque_BilinearInterpolationEv+0x6c>)
 801e036:	480a      	ldr	r0, [pc, #40]	@ (801e060 <_ZN8touchgfx8LCD16bpp57enableTextureMapperRGB565_NonOpaque_BilinearInterpolationEv+0x70>)
 801e038:	f007 fd26 	bl	8025a88 <__aeabi_atexit>
 801e03c:	4b05      	ldr	r3, [pc, #20]	@ (801e054 <_ZN8touchgfx8LCD16bpp57enableTextureMapperRGB565_NonOpaque_BilinearInterpolationEv+0x64>)
 801e03e:	64eb      	str	r3, [r5, #76]	@ 0x4c
 801e040:	4b07      	ldr	r3, [pc, #28]	@ (801e060 <_ZN8touchgfx8LCD16bpp57enableTextureMapperRGB565_NonOpaque_BilinearInterpolationEv+0x70>)
 801e042:	652b      	str	r3, [r5, #80]	@ 0x50
 801e044:	bd38      	pop	{r3, r4, r5, pc}
 801e046:	bf00      	nop
 801e048:	200030ac 	.word	0x200030ac
 801e04c:	20000000 	.word	0x20000000
 801e050:	08019e33 	.word	0x08019e33
 801e054:	200000a0 	.word	0x200000a0
 801e058:	200030b0 	.word	0x200030b0
 801e05c:	08019e31 	.word	0x08019e31
 801e060:	200000a4 	.word	0x200000a4

0801e064 <_ZN8touchgfx8LCD16bpp48enableTextureMapperRGB565_Opaque_NearestNeighborEv>:
 801e064:	b538      	push	{r3, r4, r5, lr}
 801e066:	4c15      	ldr	r4, [pc, #84]	@ (801e0bc <_ZN8touchgfx8LCD16bpp48enableTextureMapperRGB565_Opaque_NearestNeighborEv+0x58>)
 801e068:	7823      	ldrb	r3, [r4, #0]
 801e06a:	f3bf 8f5b 	dmb	ish
 801e06e:	07da      	lsls	r2, r3, #31
 801e070:	4605      	mov	r5, r0
 801e072:	d40b      	bmi.n	801e08c <_ZN8touchgfx8LCD16bpp48enableTextureMapperRGB565_Opaque_NearestNeighborEv+0x28>
 801e074:	4620      	mov	r0, r4
 801e076:	f007 fd0e 	bl	8025a96 <__cxa_guard_acquire>
 801e07a:	b138      	cbz	r0, 801e08c <_ZN8touchgfx8LCD16bpp48enableTextureMapperRGB565_Opaque_NearestNeighborEv+0x28>
 801e07c:	4620      	mov	r0, r4
 801e07e:	f007 fd16 	bl	8025aae <__cxa_guard_release>
 801e082:	4a0f      	ldr	r2, [pc, #60]	@ (801e0c0 <_ZN8touchgfx8LCD16bpp48enableTextureMapperRGB565_Opaque_NearestNeighborEv+0x5c>)
 801e084:	490f      	ldr	r1, [pc, #60]	@ (801e0c4 <_ZN8touchgfx8LCD16bpp48enableTextureMapperRGB565_Opaque_NearestNeighborEv+0x60>)
 801e086:	4810      	ldr	r0, [pc, #64]	@ (801e0c8 <_ZN8touchgfx8LCD16bpp48enableTextureMapperRGB565_Opaque_NearestNeighborEv+0x64>)
 801e088:	f007 fcfe 	bl	8025a88 <__aeabi_atexit>
 801e08c:	4c0f      	ldr	r4, [pc, #60]	@ (801e0cc <_ZN8touchgfx8LCD16bpp48enableTextureMapperRGB565_Opaque_NearestNeighborEv+0x68>)
 801e08e:	7823      	ldrb	r3, [r4, #0]
 801e090:	f3bf 8f5b 	dmb	ish
 801e094:	07db      	lsls	r3, r3, #31
 801e096:	d40b      	bmi.n	801e0b0 <_ZN8touchgfx8LCD16bpp48enableTextureMapperRGB565_Opaque_NearestNeighborEv+0x4c>
 801e098:	4620      	mov	r0, r4
 801e09a:	f007 fcfc 	bl	8025a96 <__cxa_guard_acquire>
 801e09e:	b138      	cbz	r0, 801e0b0 <_ZN8touchgfx8LCD16bpp48enableTextureMapperRGB565_Opaque_NearestNeighborEv+0x4c>
 801e0a0:	4620      	mov	r0, r4
 801e0a2:	f007 fd04 	bl	8025aae <__cxa_guard_release>
 801e0a6:	4a06      	ldr	r2, [pc, #24]	@ (801e0c0 <_ZN8touchgfx8LCD16bpp48enableTextureMapperRGB565_Opaque_NearestNeighborEv+0x5c>)
 801e0a8:	4909      	ldr	r1, [pc, #36]	@ (801e0d0 <_ZN8touchgfx8LCD16bpp48enableTextureMapperRGB565_Opaque_NearestNeighborEv+0x6c>)
 801e0aa:	480a      	ldr	r0, [pc, #40]	@ (801e0d4 <_ZN8touchgfx8LCD16bpp48enableTextureMapperRGB565_Opaque_NearestNeighborEv+0x70>)
 801e0ac:	f007 fcec 	bl	8025a88 <__aeabi_atexit>
 801e0b0:	4b05      	ldr	r3, [pc, #20]	@ (801e0c8 <_ZN8touchgfx8LCD16bpp48enableTextureMapperRGB565_Opaque_NearestNeighborEv+0x64>)
 801e0b2:	646b      	str	r3, [r5, #68]	@ 0x44
 801e0b4:	4b07      	ldr	r3, [pc, #28]	@ (801e0d4 <_ZN8touchgfx8LCD16bpp48enableTextureMapperRGB565_Opaque_NearestNeighborEv+0x70>)
 801e0b6:	64ab      	str	r3, [r5, #72]	@ 0x48
 801e0b8:	bd38      	pop	{r3, r4, r5, pc}
 801e0ba:	bf00      	nop
 801e0bc:	20003074 	.word	0x20003074
 801e0c0:	20000000 	.word	0x20000000
 801e0c4:	08019e37 	.word	0x08019e37
 801e0c8:	20000068 	.word	0x20000068
 801e0cc:	20003078 	.word	0x20003078
 801e0d0:	08019e35 	.word	0x08019e35
 801e0d4:	2000006c 	.word	0x2000006c

0801e0d8 <_ZN8touchgfx8LCD16bpp51enableTextureMapperRGB565_NonOpaque_NearestNeighborEv>:
 801e0d8:	b538      	push	{r3, r4, r5, lr}
 801e0da:	4c15      	ldr	r4, [pc, #84]	@ (801e130 <_ZN8touchgfx8LCD16bpp51enableTextureMapperRGB565_NonOpaque_NearestNeighborEv+0x58>)
 801e0dc:	7823      	ldrb	r3, [r4, #0]
 801e0de:	f3bf 8f5b 	dmb	ish
 801e0e2:	07da      	lsls	r2, r3, #31
 801e0e4:	4605      	mov	r5, r0
 801e0e6:	d40b      	bmi.n	801e100 <_ZN8touchgfx8LCD16bpp51enableTextureMapperRGB565_NonOpaque_NearestNeighborEv+0x28>
 801e0e8:	4620      	mov	r0, r4
 801e0ea:	f007 fcd4 	bl	8025a96 <__cxa_guard_acquire>
 801e0ee:	b138      	cbz	r0, 801e100 <_ZN8touchgfx8LCD16bpp51enableTextureMapperRGB565_NonOpaque_NearestNeighborEv+0x28>
 801e0f0:	4620      	mov	r0, r4
 801e0f2:	f007 fcdc 	bl	8025aae <__cxa_guard_release>
 801e0f6:	4a0f      	ldr	r2, [pc, #60]	@ (801e134 <_ZN8touchgfx8LCD16bpp51enableTextureMapperRGB565_NonOpaque_NearestNeighborEv+0x5c>)
 801e0f8:	490f      	ldr	r1, [pc, #60]	@ (801e138 <_ZN8touchgfx8LCD16bpp51enableTextureMapperRGB565_NonOpaque_NearestNeighborEv+0x60>)
 801e0fa:	4810      	ldr	r0, [pc, #64]	@ (801e13c <_ZN8touchgfx8LCD16bpp51enableTextureMapperRGB565_NonOpaque_NearestNeighborEv+0x64>)
 801e0fc:	f007 fcc4 	bl	8025a88 <__aeabi_atexit>
 801e100:	4c0f      	ldr	r4, [pc, #60]	@ (801e140 <_ZN8touchgfx8LCD16bpp51enableTextureMapperRGB565_NonOpaque_NearestNeighborEv+0x68>)
 801e102:	7823      	ldrb	r3, [r4, #0]
 801e104:	f3bf 8f5b 	dmb	ish
 801e108:	07db      	lsls	r3, r3, #31
 801e10a:	d40b      	bmi.n	801e124 <_ZN8touchgfx8LCD16bpp51enableTextureMapperRGB565_NonOpaque_NearestNeighborEv+0x4c>
 801e10c:	4620      	mov	r0, r4
 801e10e:	f007 fcc2 	bl	8025a96 <__cxa_guard_acquire>
 801e112:	b138      	cbz	r0, 801e124 <_ZN8touchgfx8LCD16bpp51enableTextureMapperRGB565_NonOpaque_NearestNeighborEv+0x4c>
 801e114:	4620      	mov	r0, r4
 801e116:	f007 fcca 	bl	8025aae <__cxa_guard_release>
 801e11a:	4a06      	ldr	r2, [pc, #24]	@ (801e134 <_ZN8touchgfx8LCD16bpp51enableTextureMapperRGB565_NonOpaque_NearestNeighborEv+0x5c>)
 801e11c:	4909      	ldr	r1, [pc, #36]	@ (801e144 <_ZN8touchgfx8LCD16bpp51enableTextureMapperRGB565_NonOpaque_NearestNeighborEv+0x6c>)
 801e11e:	480a      	ldr	r0, [pc, #40]	@ (801e148 <_ZN8touchgfx8LCD16bpp51enableTextureMapperRGB565_NonOpaque_NearestNeighborEv+0x70>)
 801e120:	f007 fcb2 	bl	8025a88 <__aeabi_atexit>
 801e124:	4b05      	ldr	r3, [pc, #20]	@ (801e13c <_ZN8touchgfx8LCD16bpp51enableTextureMapperRGB565_NonOpaque_NearestNeighborEv+0x64>)
 801e126:	63eb      	str	r3, [r5, #60]	@ 0x3c
 801e128:	4b07      	ldr	r3, [pc, #28]	@ (801e148 <_ZN8touchgfx8LCD16bpp51enableTextureMapperRGB565_NonOpaque_NearestNeighborEv+0x70>)
 801e12a:	642b      	str	r3, [r5, #64]	@ 0x40
 801e12c:	bd38      	pop	{r3, r4, r5, pc}
 801e12e:	bf00      	nop
 801e130:	20003094 	.word	0x20003094
 801e134:	20000000 	.word	0x20000000
 801e138:	08019e3b 	.word	0x08019e3b
 801e13c:	20000088 	.word	0x20000088
 801e140:	20003098 	.word	0x20003098
 801e144:	08019e39 	.word	0x08019e39
 801e148:	2000008c 	.word	0x2000008c

0801e14c <_ZN8touchgfx8LCD16bpp25enableTextureMapperRGB565Ev>:
 801e14c:	b510      	push	{r4, lr}
 801e14e:	4604      	mov	r4, r0
 801e150:	f7ff ff14 	bl	801df7c <_ZN8touchgfx8LCD16bpp54enableTextureMapperRGB565_Opaque_BilinearInterpolationEv>
 801e154:	4620      	mov	r0, r4
 801e156:	f7ff ff85 	bl	801e064 <_ZN8touchgfx8LCD16bpp48enableTextureMapperRGB565_Opaque_NearestNeighborEv>
 801e15a:	4620      	mov	r0, r4
 801e15c:	f7ff ff48 	bl	801dff0 <_ZN8touchgfx8LCD16bpp57enableTextureMapperRGB565_NonOpaque_BilinearInterpolationEv>
 801e160:	4620      	mov	r0, r4
 801e162:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
 801e166:	f7ff bfb7 	b.w	801e0d8 <_ZN8touchgfx8LCD16bpp51enableTextureMapperRGB565_NonOpaque_NearestNeighborEv>
	...

0801e16c <_ZN8touchgfx8LCD16bpp49enableTextureMapperARGB8888_BilinearInterpolationEv>:
 801e16c:	b538      	push	{r3, r4, r5, lr}
 801e16e:	4c15      	ldr	r4, [pc, #84]	@ (801e1c4 <_ZN8touchgfx8LCD16bpp49enableTextureMapperARGB8888_BilinearInterpolationEv+0x58>)
 801e170:	7823      	ldrb	r3, [r4, #0]
 801e172:	f3bf 8f5b 	dmb	ish
 801e176:	07da      	lsls	r2, r3, #31
 801e178:	4605      	mov	r5, r0
 801e17a:	d40b      	bmi.n	801e194 <_ZN8touchgfx8LCD16bpp49enableTextureMapperARGB8888_BilinearInterpolationEv+0x28>
 801e17c:	4620      	mov	r0, r4
 801e17e:	f007 fc8a 	bl	8025a96 <__cxa_guard_acquire>
 801e182:	b138      	cbz	r0, 801e194 <_ZN8touchgfx8LCD16bpp49enableTextureMapperARGB8888_BilinearInterpolationEv+0x28>
 801e184:	4620      	mov	r0, r4
 801e186:	f007 fc92 	bl	8025aae <__cxa_guard_release>
 801e18a:	4a0f      	ldr	r2, [pc, #60]	@ (801e1c8 <_ZN8touchgfx8LCD16bpp49enableTextureMapperARGB8888_BilinearInterpolationEv+0x5c>)
 801e18c:	490f      	ldr	r1, [pc, #60]	@ (801e1cc <_ZN8touchgfx8LCD16bpp49enableTextureMapperARGB8888_BilinearInterpolationEv+0x60>)
 801e18e:	4810      	ldr	r0, [pc, #64]	@ (801e1d0 <_ZN8touchgfx8LCD16bpp49enableTextureMapperARGB8888_BilinearInterpolationEv+0x64>)
 801e190:	f007 fc7a 	bl	8025a88 <__aeabi_atexit>
 801e194:	4c0f      	ldr	r4, [pc, #60]	@ (801e1d4 <_ZN8touchgfx8LCD16bpp49enableTextureMapperARGB8888_BilinearInterpolationEv+0x68>)
 801e196:	7823      	ldrb	r3, [r4, #0]
 801e198:	f3bf 8f5b 	dmb	ish
 801e19c:	07db      	lsls	r3, r3, #31
 801e19e:	d40b      	bmi.n	801e1b8 <_ZN8touchgfx8LCD16bpp49enableTextureMapperARGB8888_BilinearInterpolationEv+0x4c>
 801e1a0:	4620      	mov	r0, r4
 801e1a2:	f007 fc78 	bl	8025a96 <__cxa_guard_acquire>
 801e1a6:	b138      	cbz	r0, 801e1b8 <_ZN8touchgfx8LCD16bpp49enableTextureMapperARGB8888_BilinearInterpolationEv+0x4c>
 801e1a8:	4620      	mov	r0, r4
 801e1aa:	f007 fc80 	bl	8025aae <__cxa_guard_release>
 801e1ae:	4a06      	ldr	r2, [pc, #24]	@ (801e1c8 <_ZN8touchgfx8LCD16bpp49enableTextureMapperARGB8888_BilinearInterpolationEv+0x5c>)
 801e1b0:	4909      	ldr	r1, [pc, #36]	@ (801e1d8 <_ZN8touchgfx8LCD16bpp49enableTextureMapperARGB8888_BilinearInterpolationEv+0x6c>)
 801e1b2:	480a      	ldr	r0, [pc, #40]	@ (801e1dc <_ZN8touchgfx8LCD16bpp49enableTextureMapperARGB8888_BilinearInterpolationEv+0x70>)
 801e1b4:	f007 fc68 	bl	8025a88 <__aeabi_atexit>
 801e1b8:	4b05      	ldr	r3, [pc, #20]	@ (801e1d0 <_ZN8touchgfx8LCD16bpp49enableTextureMapperARGB8888_BilinearInterpolationEv+0x64>)
 801e1ba:	666b      	str	r3, [r5, #100]	@ 0x64
 801e1bc:	4b07      	ldr	r3, [pc, #28]	@ (801e1dc <_ZN8touchgfx8LCD16bpp49enableTextureMapperARGB8888_BilinearInterpolationEv+0x70>)
 801e1be:	66ab      	str	r3, [r5, #104]	@ 0x68
 801e1c0:	bd38      	pop	{r3, r4, r5, pc}
 801e1c2:	bf00      	nop
 801e1c4:	2000307c 	.word	0x2000307c
 801e1c8:	20000000 	.word	0x20000000
 801e1cc:	08019e27 	.word	0x08019e27
 801e1d0:	20000070 	.word	0x20000070
 801e1d4:	20003080 	.word	0x20003080
 801e1d8:	08019e25 	.word	0x08019e25
 801e1dc:	20000074 	.word	0x20000074

0801e1e0 <_ZN8touchgfx8LCD16bpp43enableTextureMapperARGB8888_NearestNeighborEv>:
 801e1e0:	b538      	push	{r3, r4, r5, lr}
 801e1e2:	4c15      	ldr	r4, [pc, #84]	@ (801e238 <_ZN8touchgfx8LCD16bpp43enableTextureMapperARGB8888_NearestNeighborEv+0x58>)
 801e1e4:	7823      	ldrb	r3, [r4, #0]
 801e1e6:	f3bf 8f5b 	dmb	ish
 801e1ea:	07da      	lsls	r2, r3, #31
 801e1ec:	4605      	mov	r5, r0
 801e1ee:	d40b      	bmi.n	801e208 <_ZN8touchgfx8LCD16bpp43enableTextureMapperARGB8888_NearestNeighborEv+0x28>
 801e1f0:	4620      	mov	r0, r4
 801e1f2:	f007 fc50 	bl	8025a96 <__cxa_guard_acquire>
 801e1f6:	b138      	cbz	r0, 801e208 <_ZN8touchgfx8LCD16bpp43enableTextureMapperARGB8888_NearestNeighborEv+0x28>
 801e1f8:	4620      	mov	r0, r4
 801e1fa:	f007 fc58 	bl	8025aae <__cxa_guard_release>
 801e1fe:	4a0f      	ldr	r2, [pc, #60]	@ (801e23c <_ZN8touchgfx8LCD16bpp43enableTextureMapperARGB8888_NearestNeighborEv+0x5c>)
 801e200:	490f      	ldr	r1, [pc, #60]	@ (801e240 <_ZN8touchgfx8LCD16bpp43enableTextureMapperARGB8888_NearestNeighborEv+0x60>)
 801e202:	4810      	ldr	r0, [pc, #64]	@ (801e244 <_ZN8touchgfx8LCD16bpp43enableTextureMapperARGB8888_NearestNeighborEv+0x64>)
 801e204:	f007 fc40 	bl	8025a88 <__aeabi_atexit>
 801e208:	4c0f      	ldr	r4, [pc, #60]	@ (801e248 <_ZN8touchgfx8LCD16bpp43enableTextureMapperARGB8888_NearestNeighborEv+0x68>)
 801e20a:	7823      	ldrb	r3, [r4, #0]
 801e20c:	f3bf 8f5b 	dmb	ish
 801e210:	07db      	lsls	r3, r3, #31
 801e212:	d40b      	bmi.n	801e22c <_ZN8touchgfx8LCD16bpp43enableTextureMapperARGB8888_NearestNeighborEv+0x4c>
 801e214:	4620      	mov	r0, r4
 801e216:	f007 fc3e 	bl	8025a96 <__cxa_guard_acquire>
 801e21a:	b138      	cbz	r0, 801e22c <_ZN8touchgfx8LCD16bpp43enableTextureMapperARGB8888_NearestNeighborEv+0x4c>
 801e21c:	4620      	mov	r0, r4
 801e21e:	f007 fc46 	bl	8025aae <__cxa_guard_release>
 801e222:	4a06      	ldr	r2, [pc, #24]	@ (801e23c <_ZN8touchgfx8LCD16bpp43enableTextureMapperARGB8888_NearestNeighborEv+0x5c>)
 801e224:	4909      	ldr	r1, [pc, #36]	@ (801e24c <_ZN8touchgfx8LCD16bpp43enableTextureMapperARGB8888_NearestNeighborEv+0x6c>)
 801e226:	480a      	ldr	r0, [pc, #40]	@ (801e250 <_ZN8touchgfx8LCD16bpp43enableTextureMapperARGB8888_NearestNeighborEv+0x70>)
 801e228:	f007 fc2e 	bl	8025a88 <__aeabi_atexit>
 801e22c:	4b05      	ldr	r3, [pc, #20]	@ (801e244 <_ZN8touchgfx8LCD16bpp43enableTextureMapperARGB8888_NearestNeighborEv+0x64>)
 801e22e:	65eb      	str	r3, [r5, #92]	@ 0x5c
 801e230:	4b07      	ldr	r3, [pc, #28]	@ (801e250 <_ZN8touchgfx8LCD16bpp43enableTextureMapperARGB8888_NearestNeighborEv+0x70>)
 801e232:	662b      	str	r3, [r5, #96]	@ 0x60
 801e234:	bd38      	pop	{r3, r4, r5, pc}
 801e236:	bf00      	nop
 801e238:	20003054 	.word	0x20003054
 801e23c:	20000000 	.word	0x20000000
 801e240:	08019e2b 	.word	0x08019e2b
 801e244:	20000048 	.word	0x20000048
 801e248:	20003058 	.word	0x20003058
 801e24c:	08019e29 	.word	0x08019e29
 801e250:	2000004c 	.word	0x2000004c

0801e254 <_ZN8touchgfx8LCD16bpp27enableTextureMapperARGB8888Ev>:
 801e254:	b510      	push	{r4, lr}
 801e256:	4604      	mov	r4, r0
 801e258:	f7ff ff88 	bl	801e16c <_ZN8touchgfx8LCD16bpp49enableTextureMapperARGB8888_BilinearInterpolationEv>
 801e25c:	4620      	mov	r0, r4
 801e25e:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
 801e262:	f7ff bfbd 	b.w	801e1e0 <_ZN8touchgfx8LCD16bpp43enableTextureMapperARGB8888_NearestNeighborEv>
	...

0801e268 <_ZN8touchgfx8LCD16bpp43enableTextureMapperA4_BilinearInterpolationEv>:
 801e268:	b538      	push	{r3, r4, r5, lr}
 801e26a:	4c15      	ldr	r4, [pc, #84]	@ (801e2c0 <_ZN8touchgfx8LCD16bpp43enableTextureMapperA4_BilinearInterpolationEv+0x58>)
 801e26c:	7823      	ldrb	r3, [r4, #0]
 801e26e:	f3bf 8f5b 	dmb	ish
 801e272:	07da      	lsls	r2, r3, #31
 801e274:	4605      	mov	r5, r0
 801e276:	d40b      	bmi.n	801e290 <_ZN8touchgfx8LCD16bpp43enableTextureMapperA4_BilinearInterpolationEv+0x28>
 801e278:	4620      	mov	r0, r4
 801e27a:	f007 fc0c 	bl	8025a96 <__cxa_guard_acquire>
 801e27e:	b138      	cbz	r0, 801e290 <_ZN8touchgfx8LCD16bpp43enableTextureMapperA4_BilinearInterpolationEv+0x28>
 801e280:	4620      	mov	r0, r4
 801e282:	f007 fc14 	bl	8025aae <__cxa_guard_release>
 801e286:	4a0f      	ldr	r2, [pc, #60]	@ (801e2c4 <_ZN8touchgfx8LCD16bpp43enableTextureMapperA4_BilinearInterpolationEv+0x5c>)
 801e288:	490f      	ldr	r1, [pc, #60]	@ (801e2c8 <_ZN8touchgfx8LCD16bpp43enableTextureMapperA4_BilinearInterpolationEv+0x60>)
 801e28a:	4810      	ldr	r0, [pc, #64]	@ (801e2cc <_ZN8touchgfx8LCD16bpp43enableTextureMapperA4_BilinearInterpolationEv+0x64>)
 801e28c:	f007 fbfc 	bl	8025a88 <__aeabi_atexit>
 801e290:	4c0f      	ldr	r4, [pc, #60]	@ (801e2d0 <_ZN8touchgfx8LCD16bpp43enableTextureMapperA4_BilinearInterpolationEv+0x68>)
 801e292:	7823      	ldrb	r3, [r4, #0]
 801e294:	f3bf 8f5b 	dmb	ish
 801e298:	07db      	lsls	r3, r3, #31
 801e29a:	d40b      	bmi.n	801e2b4 <_ZN8touchgfx8LCD16bpp43enableTextureMapperA4_BilinearInterpolationEv+0x4c>
 801e29c:	4620      	mov	r0, r4
 801e29e:	f007 fbfa 	bl	8025a96 <__cxa_guard_acquire>
 801e2a2:	b138      	cbz	r0, 801e2b4 <_ZN8touchgfx8LCD16bpp43enableTextureMapperA4_BilinearInterpolationEv+0x4c>
 801e2a4:	4620      	mov	r0, r4
 801e2a6:	f007 fc02 	bl	8025aae <__cxa_guard_release>
 801e2aa:	4a06      	ldr	r2, [pc, #24]	@ (801e2c4 <_ZN8touchgfx8LCD16bpp43enableTextureMapperA4_BilinearInterpolationEv+0x5c>)
 801e2ac:	4909      	ldr	r1, [pc, #36]	@ (801e2d4 <_ZN8touchgfx8LCD16bpp43enableTextureMapperA4_BilinearInterpolationEv+0x6c>)
 801e2ae:	480a      	ldr	r0, [pc, #40]	@ (801e2d8 <_ZN8touchgfx8LCD16bpp43enableTextureMapperA4_BilinearInterpolationEv+0x70>)
 801e2b0:	f007 fbea 	bl	8025a88 <__aeabi_atexit>
 801e2b4:	4b05      	ldr	r3, [pc, #20]	@ (801e2cc <_ZN8touchgfx8LCD16bpp43enableTextureMapperA4_BilinearInterpolationEv+0x64>)
 801e2b6:	676b      	str	r3, [r5, #116]	@ 0x74
 801e2b8:	4b07      	ldr	r3, [pc, #28]	@ (801e2d8 <_ZN8touchgfx8LCD16bpp43enableTextureMapperA4_BilinearInterpolationEv+0x70>)
 801e2ba:	67ab      	str	r3, [r5, #120]	@ 0x78
 801e2bc:	bd38      	pop	{r3, r4, r5, pc}
 801e2be:	bf00      	nop
 801e2c0:	2000304c 	.word	0x2000304c
 801e2c4:	20000000 	.word	0x20000000
 801e2c8:	08019e1f 	.word	0x08019e1f
 801e2cc:	20000040 	.word	0x20000040
 801e2d0:	20003050 	.word	0x20003050
 801e2d4:	08019e1d 	.word	0x08019e1d
 801e2d8:	20000044 	.word	0x20000044

0801e2dc <_ZN8touchgfx8LCD16bpp37enableTextureMapperA4_NearestNeighborEv>:
 801e2dc:	b538      	push	{r3, r4, r5, lr}
 801e2de:	4c15      	ldr	r4, [pc, #84]	@ (801e334 <_ZN8touchgfx8LCD16bpp37enableTextureMapperA4_NearestNeighborEv+0x58>)
 801e2e0:	7823      	ldrb	r3, [r4, #0]
 801e2e2:	f3bf 8f5b 	dmb	ish
 801e2e6:	07da      	lsls	r2, r3, #31
 801e2e8:	4605      	mov	r5, r0
 801e2ea:	d40b      	bmi.n	801e304 <_ZN8touchgfx8LCD16bpp37enableTextureMapperA4_NearestNeighborEv+0x28>
 801e2ec:	4620      	mov	r0, r4
 801e2ee:	f007 fbd2 	bl	8025a96 <__cxa_guard_acquire>
 801e2f2:	b138      	cbz	r0, 801e304 <_ZN8touchgfx8LCD16bpp37enableTextureMapperA4_NearestNeighborEv+0x28>
 801e2f4:	4620      	mov	r0, r4
 801e2f6:	f007 fbda 	bl	8025aae <__cxa_guard_release>
 801e2fa:	4a0f      	ldr	r2, [pc, #60]	@ (801e338 <_ZN8touchgfx8LCD16bpp37enableTextureMapperA4_NearestNeighborEv+0x5c>)
 801e2fc:	490f      	ldr	r1, [pc, #60]	@ (801e33c <_ZN8touchgfx8LCD16bpp37enableTextureMapperA4_NearestNeighborEv+0x60>)
 801e2fe:	4810      	ldr	r0, [pc, #64]	@ (801e340 <_ZN8touchgfx8LCD16bpp37enableTextureMapperA4_NearestNeighborEv+0x64>)
 801e300:	f007 fbc2 	bl	8025a88 <__aeabi_atexit>
 801e304:	4c0f      	ldr	r4, [pc, #60]	@ (801e344 <_ZN8touchgfx8LCD16bpp37enableTextureMapperA4_NearestNeighborEv+0x68>)
 801e306:	7823      	ldrb	r3, [r4, #0]
 801e308:	f3bf 8f5b 	dmb	ish
 801e30c:	07db      	lsls	r3, r3, #31
 801e30e:	d40b      	bmi.n	801e328 <_ZN8touchgfx8LCD16bpp37enableTextureMapperA4_NearestNeighborEv+0x4c>
 801e310:	4620      	mov	r0, r4
 801e312:	f007 fbc0 	bl	8025a96 <__cxa_guard_acquire>
 801e316:	b138      	cbz	r0, 801e328 <_ZN8touchgfx8LCD16bpp37enableTextureMapperA4_NearestNeighborEv+0x4c>
 801e318:	4620      	mov	r0, r4
 801e31a:	f007 fbc8 	bl	8025aae <__cxa_guard_release>
 801e31e:	4a06      	ldr	r2, [pc, #24]	@ (801e338 <_ZN8touchgfx8LCD16bpp37enableTextureMapperA4_NearestNeighborEv+0x5c>)
 801e320:	4909      	ldr	r1, [pc, #36]	@ (801e348 <_ZN8touchgfx8LCD16bpp37enableTextureMapperA4_NearestNeighborEv+0x6c>)
 801e322:	480a      	ldr	r0, [pc, #40]	@ (801e34c <_ZN8touchgfx8LCD16bpp37enableTextureMapperA4_NearestNeighborEv+0x70>)
 801e324:	f007 fbb0 	bl	8025a88 <__aeabi_atexit>
 801e328:	4b05      	ldr	r3, [pc, #20]	@ (801e340 <_ZN8touchgfx8LCD16bpp37enableTextureMapperA4_NearestNeighborEv+0x64>)
 801e32a:	66eb      	str	r3, [r5, #108]	@ 0x6c
 801e32c:	4b07      	ldr	r3, [pc, #28]	@ (801e34c <_ZN8touchgfx8LCD16bpp37enableTextureMapperA4_NearestNeighborEv+0x70>)
 801e32e:	672b      	str	r3, [r5, #112]	@ 0x70
 801e330:	bd38      	pop	{r3, r4, r5, pc}
 801e332:	bf00      	nop
 801e334:	20003044 	.word	0x20003044
 801e338:	20000000 	.word	0x20000000
 801e33c:	08019e23 	.word	0x08019e23
 801e340:	20000038 	.word	0x20000038
 801e344:	20003048 	.word	0x20003048
 801e348:	08019e21 	.word	0x08019e21
 801e34c:	2000003c 	.word	0x2000003c

0801e350 <_ZN8touchgfx8LCD16bpp21enableTextureMapperA4Ev>:
 801e350:	b510      	push	{r4, lr}
 801e352:	4604      	mov	r4, r0
 801e354:	f7ff ff88 	bl	801e268 <_ZN8touchgfx8LCD16bpp43enableTextureMapperA4_BilinearInterpolationEv>
 801e358:	4620      	mov	r0, r4
 801e35a:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
 801e35e:	f7ff bfbd 	b.w	801e2dc <_ZN8touchgfx8LCD16bpp37enableTextureMapperA4_NearestNeighborEv>

0801e362 <_ZN8touchgfx8LCD16bpp22enableTextureMapperAllEv>:
 801e362:	b510      	push	{r4, lr}
 801e364:	4604      	mov	r4, r0
 801e366:	f7ff fff3 	bl	801e350 <_ZN8touchgfx8LCD16bpp21enableTextureMapperA4Ev>
 801e36a:	4620      	mov	r0, r4
 801e36c:	f7ff ff72 	bl	801e254 <_ZN8touchgfx8LCD16bpp27enableTextureMapperARGB8888Ev>
 801e370:	4620      	mov	r0, r4
 801e372:	f7ff fdf9 	bl	801df68 <_ZN8touchgfx8LCD16bpp30enableTextureMapperL8_ARGB8888Ev>
 801e376:	4620      	mov	r0, r4
 801e378:	f7ff fcfa 	bl	801dd70 <_ZN8touchgfx8LCD16bpp28enableTextureMapperL8_RGB565Ev>
 801e37c:	4620      	mov	r0, r4
 801e37e:	f7ff fd75 	bl	801de6c <_ZN8touchgfx8LCD16bpp28enableTextureMapperL8_RGB888Ev>
 801e382:	4620      	mov	r0, r4
 801e384:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
 801e388:	f7ff bee0 	b.w	801e14c <_ZN8touchgfx8LCD16bpp25enableTextureMapperRGB565Ev>

0801e38c <_ZN8touchgfx8LCD16bpp23enableDecompressorL8_L4Ev>:
 801e38c:	b538      	push	{r3, r4, r5, lr}
 801e38e:	4c0b      	ldr	r4, [pc, #44]	@ (801e3bc <_ZN8touchgfx8LCD16bpp23enableDecompressorL8_L4Ev+0x30>)
 801e390:	7823      	ldrb	r3, [r4, #0]
 801e392:	f3bf 8f5b 	dmb	ish
 801e396:	07db      	lsls	r3, r3, #31
 801e398:	4605      	mov	r5, r0
 801e39a:	d40b      	bmi.n	801e3b4 <_ZN8touchgfx8LCD16bpp23enableDecompressorL8_L4Ev+0x28>
 801e39c:	4620      	mov	r0, r4
 801e39e:	f007 fb7a 	bl	8025a96 <__cxa_guard_acquire>
 801e3a2:	b138      	cbz	r0, 801e3b4 <_ZN8touchgfx8LCD16bpp23enableDecompressorL8_L4Ev+0x28>
 801e3a4:	4620      	mov	r0, r4
 801e3a6:	f007 fb82 	bl	8025aae <__cxa_guard_release>
 801e3aa:	4a05      	ldr	r2, [pc, #20]	@ (801e3c0 <_ZN8touchgfx8LCD16bpp23enableDecompressorL8_L4Ev+0x34>)
 801e3ac:	4905      	ldr	r1, [pc, #20]	@ (801e3c4 <_ZN8touchgfx8LCD16bpp23enableDecompressorL8_L4Ev+0x38>)
 801e3ae:	4806      	ldr	r0, [pc, #24]	@ (801e3c8 <_ZN8touchgfx8LCD16bpp23enableDecompressorL8_L4Ev+0x3c>)
 801e3b0:	f007 fb6a 	bl	8025a88 <__aeabi_atexit>
 801e3b4:	4b04      	ldr	r3, [pc, #16]	@ (801e3c8 <_ZN8touchgfx8LCD16bpp23enableDecompressorL8_L4Ev+0x3c>)
 801e3b6:	67eb      	str	r3, [r5, #124]	@ 0x7c
 801e3b8:	bd38      	pop	{r3, r4, r5, pc}
 801e3ba:	bf00      	nop
 801e3bc:	20003038 	.word	0x20003038
 801e3c0:	20000000 	.word	0x20000000
 801e3c4:	08019e1b 	.word	0x08019e1b
 801e3c8:	20000030 	.word	0x20000030

0801e3cc <_ZN8touchgfx8LCD16bpp24enableDecompressorL8_RLEEv>:
 801e3cc:	b538      	push	{r3, r4, r5, lr}
 801e3ce:	4c0b      	ldr	r4, [pc, #44]	@ (801e3fc <_ZN8touchgfx8LCD16bpp24enableDecompressorL8_RLEEv+0x30>)
 801e3d0:	7823      	ldrb	r3, [r4, #0]
 801e3d2:	f3bf 8f5b 	dmb	ish
 801e3d6:	07db      	lsls	r3, r3, #31
 801e3d8:	4605      	mov	r5, r0
 801e3da:	d40b      	bmi.n	801e3f4 <_ZN8touchgfx8LCD16bpp24enableDecompressorL8_RLEEv+0x28>
 801e3dc:	4620      	mov	r0, r4
 801e3de:	f007 fb5a 	bl	8025a96 <__cxa_guard_acquire>
 801e3e2:	b138      	cbz	r0, 801e3f4 <_ZN8touchgfx8LCD16bpp24enableDecompressorL8_RLEEv+0x28>
 801e3e4:	4620      	mov	r0, r4
 801e3e6:	f007 fb62 	bl	8025aae <__cxa_guard_release>
 801e3ea:	4a05      	ldr	r2, [pc, #20]	@ (801e400 <_ZN8touchgfx8LCD16bpp24enableDecompressorL8_RLEEv+0x34>)
 801e3ec:	4905      	ldr	r1, [pc, #20]	@ (801e404 <_ZN8touchgfx8LCD16bpp24enableDecompressorL8_RLEEv+0x38>)
 801e3ee:	4806      	ldr	r0, [pc, #24]	@ (801e408 <_ZN8touchgfx8LCD16bpp24enableDecompressorL8_RLEEv+0x3c>)
 801e3f0:	f007 fb4a 	bl	8025a88 <__aeabi_atexit>
 801e3f4:	4b04      	ldr	r3, [pc, #16]	@ (801e408 <_ZN8touchgfx8LCD16bpp24enableDecompressorL8_RLEEv+0x3c>)
 801e3f6:	f8c5 3080 	str.w	r3, [r5, #128]	@ 0x80
 801e3fa:	bd38      	pop	{r3, r4, r5, pc}
 801e3fc:	2000303c 	.word	0x2000303c
 801e400:	20000000 	.word	0x20000000
 801e404:	08019e19 	.word	0x08019e19
 801e408:	20000034 	.word	0x20000034

0801e40c <_ZN8touchgfx8LCD16bpp25enableDecompressorL8_LZW9Ev>:
 801e40c:	b570      	push	{r4, r5, r6, lr}
 801e40e:	4d0d      	ldr	r5, [pc, #52]	@ (801e444 <_ZN8touchgfx8LCD16bpp25enableDecompressorL8_LZW9Ev+0x38>)
 801e410:	4c0d      	ldr	r4, [pc, #52]	@ (801e448 <_ZN8touchgfx8LCD16bpp25enableDecompressorL8_LZW9Ev+0x3c>)
 801e412:	782b      	ldrb	r3, [r5, #0]
 801e414:	f3bf 8f5b 	dmb	ish
 801e418:	f013 0f01 	tst.w	r3, #1
 801e41c:	4606      	mov	r6, r0
 801e41e:	d10d      	bne.n	801e43c <_ZN8touchgfx8LCD16bpp25enableDecompressorL8_LZW9Ev+0x30>
 801e420:	4628      	mov	r0, r5
 801e422:	f007 fb38 	bl	8025a96 <__cxa_guard_acquire>
 801e426:	b148      	cbz	r0, 801e43c <_ZN8touchgfx8LCD16bpp25enableDecompressorL8_LZW9Ev+0x30>
 801e428:	4b08      	ldr	r3, [pc, #32]	@ (801e44c <_ZN8touchgfx8LCD16bpp25enableDecompressorL8_LZW9Ev+0x40>)
 801e42a:	6023      	str	r3, [r4, #0]
 801e42c:	4628      	mov	r0, r5
 801e42e:	f007 fb3e 	bl	8025aae <__cxa_guard_release>
 801e432:	4a07      	ldr	r2, [pc, #28]	@ (801e450 <_ZN8touchgfx8LCD16bpp25enableDecompressorL8_LZW9Ev+0x44>)
 801e434:	4907      	ldr	r1, [pc, #28]	@ (801e454 <_ZN8touchgfx8LCD16bpp25enableDecompressorL8_LZW9Ev+0x48>)
 801e436:	4620      	mov	r0, r4
 801e438:	f007 fb26 	bl	8025a88 <__aeabi_atexit>
 801e43c:	f8c6 4084 	str.w	r4, [r6, #132]	@ 0x84
 801e440:	bd70      	pop	{r4, r5, r6, pc}
 801e442:	bf00      	nop
 801e444:	20003040 	.word	0x20003040
 801e448:	200031b8 	.word	0x200031b8
 801e44c:	08029608 	.word	0x08029608
 801e450:	20000000 	.word	0x20000000
 801e454:	08019e17 	.word	0x08019e17

0801e458 <_ZN8touchgfx8LCD16bpp24enableDecompressorL8_AllEv>:
 801e458:	b510      	push	{r4, lr}
 801e45a:	4604      	mov	r4, r0
 801e45c:	f7ff ff96 	bl	801e38c <_ZN8touchgfx8LCD16bpp23enableDecompressorL8_L4Ev>
 801e460:	4620      	mov	r0, r4
 801e462:	f7ff ffb3 	bl	801e3cc <_ZN8touchgfx8LCD16bpp24enableDecompressorL8_RLEEv>
 801e466:	4620      	mov	r0, r4
 801e468:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
 801e46c:	f7ff bfce 	b.w	801e40c <_ZN8touchgfx8LCD16bpp25enableDecompressorL8_LZW9Ev>

0801e470 <_ZN8touchgfx8LCD16bpp21enableDecompressorRGBEv>:
 801e470:	b570      	push	{r4, r5, r6, lr}
 801e472:	4d0d      	ldr	r5, [pc, #52]	@ (801e4a8 <_ZN8touchgfx8LCD16bpp21enableDecompressorRGBEv+0x38>)
 801e474:	4c0d      	ldr	r4, [pc, #52]	@ (801e4ac <_ZN8touchgfx8LCD16bpp21enableDecompressorRGBEv+0x3c>)
 801e476:	782b      	ldrb	r3, [r5, #0]
 801e478:	f3bf 8f5b 	dmb	ish
 801e47c:	f013 0f01 	tst.w	r3, #1
 801e480:	4606      	mov	r6, r0
 801e482:	d10d      	bne.n	801e4a0 <_ZN8touchgfx8LCD16bpp21enableDecompressorRGBEv+0x30>
 801e484:	4628      	mov	r0, r5
 801e486:	f007 fb06 	bl	8025a96 <__cxa_guard_acquire>
 801e48a:	b148      	cbz	r0, 801e4a0 <_ZN8touchgfx8LCD16bpp21enableDecompressorRGBEv+0x30>
 801e48c:	4b08      	ldr	r3, [pc, #32]	@ (801e4b0 <_ZN8touchgfx8LCD16bpp21enableDecompressorRGBEv+0x40>)
 801e48e:	6023      	str	r3, [r4, #0]
 801e490:	4628      	mov	r0, r5
 801e492:	f007 fb0c 	bl	8025aae <__cxa_guard_release>
 801e496:	4a07      	ldr	r2, [pc, #28]	@ (801e4b4 <_ZN8touchgfx8LCD16bpp21enableDecompressorRGBEv+0x44>)
 801e498:	4907      	ldr	r1, [pc, #28]	@ (801e4b8 <_ZN8touchgfx8LCD16bpp21enableDecompressorRGBEv+0x48>)
 801e49a:	4620      	mov	r0, r4
 801e49c:	f007 faf4 	bl	8025a88 <__aeabi_atexit>
 801e4a0:	f8c6 4088 	str.w	r4, [r6, #136]	@ 0x88
 801e4a4:	bd70      	pop	{r4, r5, r6, pc}
 801e4a6:	bf00      	nop
 801e4a8:	20003034 	.word	0x20003034
 801e4ac:	200030b4 	.word	0x200030b4
 801e4b0:	08029624 	.word	0x08029624
 801e4b4:	20000000 	.word	0x20000000
 801e4b8:	08019e15 	.word	0x08019e15

0801e4bc <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKtssiihhh>:
 801e4bc:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 801e4c0:	e9dd 450b 	ldrd	r4, r5, [sp, #44]	@ 0x2c
 801e4c4:	f9bd e024 	ldrsh.w	lr, [sp, #36]	@ 0x24
 801e4c8:	f9bd b028 	ldrsh.w	fp, [sp, #40]	@ 0x28
 801e4cc:	f89d 9034 	ldrb.w	r9, [sp, #52]	@ 0x34
 801e4d0:	f89d 7038 	ldrb.w	r7, [sp, #56]	@ 0x38
 801e4d4:	f89d 603c 	ldrb.w	r6, [sp, #60]	@ 0x3c
 801e4d8:	8808      	ldrh	r0, [r1, #0]
 801e4da:	fb05 4c0e 	mla	ip, r5, lr, r4
 801e4de:	2d00      	cmp	r5, #0
 801e4e0:	eb02 0a0c 	add.w	sl, r2, ip
 801e4e4:	f2c0 80b0 	blt.w	801e648 <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKtssiihhh+0x18c>
 801e4e8:	45ab      	cmp	fp, r5
 801e4ea:	f340 80ad 	ble.w	801e648 <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKtssiihhh+0x18c>
 801e4ee:	2c00      	cmp	r4, #0
 801e4f0:	f2c0 80a8 	blt.w	801e644 <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKtssiihhh+0x188>
 801e4f4:	45a6      	cmp	lr, r4
 801e4f6:	f340 80a5 	ble.w	801e644 <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKtssiihhh+0x188>
 801e4fa:	f812 200c 	ldrb.w	r2, [r2, ip]
 801e4fe:	f833 8012 	ldrh.w	r8, [r3, r2, lsl #1]
 801e502:	1c62      	adds	r2, r4, #1
 801e504:	f100 80a3 	bmi.w	801e64e <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKtssiihhh+0x192>
 801e508:	4596      	cmp	lr, r2
 801e50a:	f340 80a0 	ble.w	801e64e <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKtssiihhh+0x192>
 801e50e:	f1b9 0f00 	cmp.w	r9, #0
 801e512:	f000 809c 	beq.w	801e64e <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKtssiihhh+0x192>
 801e516:	f89a 2001 	ldrb.w	r2, [sl, #1]
 801e51a:	f833 c012 	ldrh.w	ip, [r3, r2, lsl #1]
 801e51e:	3501      	adds	r5, #1
 801e520:	f100 8099 	bmi.w	801e656 <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKtssiihhh+0x19a>
 801e524:	45ab      	cmp	fp, r5
 801e526:	f340 8096 	ble.w	801e656 <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKtssiihhh+0x19a>
 801e52a:	2f00      	cmp	r7, #0
 801e52c:	f000 8093 	beq.w	801e656 <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKtssiihhh+0x19a>
 801e530:	2c00      	cmp	r4, #0
 801e532:	f2c0 808e 	blt.w	801e652 <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKtssiihhh+0x196>
 801e536:	45a6      	cmp	lr, r4
 801e538:	f340 808b 	ble.w	801e652 <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKtssiihhh+0x196>
 801e53c:	f81a 200e 	ldrb.w	r2, [sl, lr]
 801e540:	f833 5012 	ldrh.w	r5, [r3, r2, lsl #1]
 801e544:	3401      	adds	r4, #1
 801e546:	f100 8089 	bmi.w	801e65c <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKtssiihhh+0x1a0>
 801e54a:	45a6      	cmp	lr, r4
 801e54c:	f340 8086 	ble.w	801e65c <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKtssiihhh+0x1a0>
 801e550:	f1b9 0f00 	cmp.w	r9, #0
 801e554:	f000 8082 	beq.w	801e65c <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKtssiihhh+0x1a0>
 801e558:	44d6      	add	lr, sl
 801e55a:	f89e 2001 	ldrb.w	r2, [lr, #1]
 801e55e:	f833 3012 	ldrh.w	r3, [r3, r2, lsl #1]
 801e562:	ea4f 4408 	mov.w	r4, r8, lsl #16
 801e566:	f004 64fc 	and.w	r4, r4, #132120576	@ 0x7e00000
 801e56a:	f428 68fc 	bic.w	r8, r8, #2016	@ 0x7e0
 801e56e:	fb19 fe07 	smulbb	lr, r9, r7
 801e572:	ea44 0808 	orr.w	r8, r4, r8
 801e576:	ea4f 440c 	mov.w	r4, ip, lsl #16
 801e57a:	f3ce 0ec7 	ubfx	lr, lr, #3, #8
 801e57e:	f1c7 0210 	rsb	r2, r7, #16
 801e582:	f004 64fc 	and.w	r4, r4, #132120576	@ 0x7e00000
 801e586:	f42c 6cfc 	bic.w	ip, ip, #2016	@ 0x7e0
 801e58a:	ea44 0c0c 	orr.w	ip, r4, ip
 801e58e:	eba2 0209 	sub.w	r2, r2, r9
 801e592:	ebce 0449 	rsb	r4, lr, r9, lsl #1
 801e596:	eb0e 0242 	add.w	r2, lr, r2, lsl #1
 801e59a:	fb04 f40c 	mul.w	r4, r4, ip
 801e59e:	fb02 4808 	mla	r8, r2, r8, r4
 801e5a2:	041a      	lsls	r2, r3, #16
 801e5a4:	f002 62fc 	and.w	r2, r2, #132120576	@ 0x7e00000
 801e5a8:	f423 63fc 	bic.w	r3, r3, #2016	@ 0x7e0
 801e5ac:	4313      	orrs	r3, r2
 801e5ae:	042a      	lsls	r2, r5, #16
 801e5b0:	f002 62fc 	and.w	r2, r2, #132120576	@ 0x7e00000
 801e5b4:	f425 65fc 	bic.w	r5, r5, #2016	@ 0x7e0
 801e5b8:	fb0e 8303 	mla	r3, lr, r3, r8
 801e5bc:	432a      	orrs	r2, r5
 801e5be:	ebce 0747 	rsb	r7, lr, r7, lsl #1
 801e5c2:	fb07 3202 	mla	r2, r7, r2, r3
 801e5c6:	0d53      	lsrs	r3, r2, #21
 801e5c8:	0952      	lsrs	r2, r2, #5
 801e5ca:	f403 63fc 	and.w	r3, r3, #2016	@ 0x7e0
 801e5ce:	f422 62fc 	bic.w	r2, r2, #2016	@ 0x7e0
 801e5d2:	431a      	orrs	r2, r3
 801e5d4:	b293      	uxth	r3, r2
 801e5d6:	b2b4      	uxth	r4, r6
 801e5d8:	1202      	asrs	r2, r0, #8
 801e5da:	43f6      	mvns	r6, r6
 801e5dc:	b2f6      	uxtb	r6, r6
 801e5de:	121d      	asrs	r5, r3, #8
 801e5e0:	f002 02f8 	and.w	r2, r2, #248	@ 0xf8
 801e5e4:	fb12 f206 	smulbb	r2, r2, r6
 801e5e8:	10c7      	asrs	r7, r0, #3
 801e5ea:	f005 05f8 	and.w	r5, r5, #248	@ 0xf8
 801e5ee:	00c0      	lsls	r0, r0, #3
 801e5f0:	fb05 2504 	mla	r5, r5, r4, r2
 801e5f4:	b2c0      	uxtb	r0, r0
 801e5f6:	10da      	asrs	r2, r3, #3
 801e5f8:	00db      	lsls	r3, r3, #3
 801e5fa:	b2db      	uxtb	r3, r3
 801e5fc:	f007 07fc 	and.w	r7, r7, #252	@ 0xfc
 801e600:	fb10 f006 	smulbb	r0, r0, r6
 801e604:	b2ad      	uxth	r5, r5
 801e606:	fb03 0004 	mla	r0, r3, r4, r0
 801e60a:	f002 02fc 	and.w	r2, r2, #252	@ 0xfc
 801e60e:	fb17 f706 	smulbb	r7, r7, r6
 801e612:	b280      	uxth	r0, r0
 801e614:	1c6b      	adds	r3, r5, #1
 801e616:	fb02 7204 	mla	r2, r2, r4, r7
 801e61a:	b292      	uxth	r2, r2
 801e61c:	eb03 2515 	add.w	r5, r3, r5, lsr #8
 801e620:	1c43      	adds	r3, r0, #1
 801e622:	eb03 2310 	add.w	r3, r3, r0, lsr #8
 801e626:	1c50      	adds	r0, r2, #1
 801e628:	eb00 2212 	add.w	r2, r0, r2, lsr #8
 801e62c:	f405 4578 	and.w	r5, r5, #63488	@ 0xf800
 801e630:	f3c3 23c4 	ubfx	r3, r3, #11, #5
 801e634:	0952      	lsrs	r2, r2, #5
 801e636:	432b      	orrs	r3, r5
 801e638:	f402 62fc 	and.w	r2, r2, #2016	@ 0x7e0
 801e63c:	4313      	orrs	r3, r2
 801e63e:	800b      	strh	r3, [r1, #0]
 801e640:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 801e644:	4680      	mov	r8, r0
 801e646:	e75c      	b.n	801e502 <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKtssiihhh+0x46>
 801e648:	4684      	mov	ip, r0
 801e64a:	4680      	mov	r8, r0
 801e64c:	e767      	b.n	801e51e <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKtssiihhh+0x62>
 801e64e:	4684      	mov	ip, r0
 801e650:	e765      	b.n	801e51e <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKtssiihhh+0x62>
 801e652:	4605      	mov	r5, r0
 801e654:	e776      	b.n	801e544 <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKtssiihhh+0x88>
 801e656:	4603      	mov	r3, r0
 801e658:	4605      	mov	r5, r0
 801e65a:	e782      	b.n	801e562 <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKtssiihhh+0xa6>
 801e65c:	4603      	mov	r3, r0
 801e65e:	e780      	b.n	801e562 <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKtssiihhh+0xa6>

0801e660 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff>:
 801e660:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 801e664:	b099      	sub	sp, #100	@ 0x64
 801e666:	e9dd a523 	ldrd	sl, r5, [sp, #140]	@ 0x8c
 801e66a:	9215      	str	r2, [sp, #84]	@ 0x54
 801e66c:	9309      	str	r3, [sp, #36]	@ 0x24
 801e66e:	9a27      	ldr	r2, [sp, #156]	@ 0x9c
 801e670:	f89d 30ac 	ldrb.w	r3, [sp, #172]	@ 0xac
 801e674:	930d      	str	r3, [sp, #52]	@ 0x34
 801e676:	910c      	str	r1, [sp, #48]	@ 0x30
 801e678:	e9dd 1328 	ldrd	r1, r3, [sp, #160]	@ 0xa0
 801e67c:	9016      	str	r0, [sp, #88]	@ 0x58
 801e67e:	6850      	ldr	r0, [r2, #4]
 801e680:	6812      	ldr	r2, [r2, #0]
 801e682:	fb00 1303 	mla	r3, r0, r3, r1
 801e686:	eb02 0843 	add.w	r8, r2, r3, lsl #1
 801e68a:	9b2a      	ldr	r3, [sp, #168]	@ 0xa8
 801e68c:	681b      	ldr	r3, [r3, #0]
 801e68e:	930b      	str	r3, [sp, #44]	@ 0x2c
 801e690:	9b2a      	ldr	r3, [sp, #168]	@ 0xa8
 801e692:	685e      	ldr	r6, [r3, #4]
 801e694:	9b0d      	ldr	r3, [sp, #52]	@ 0x34
 801e696:	43db      	mvns	r3, r3
 801e698:	b2db      	uxtb	r3, r3
 801e69a:	3604      	adds	r6, #4
 801e69c:	930a      	str	r3, [sp, #40]	@ 0x28
 801e69e:	9b0c      	ldr	r3, [sp, #48]	@ 0x30
 801e6a0:	2b00      	cmp	r3, #0
 801e6a2:	dc03      	bgt.n	801e6ac <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x4c>
 801e6a4:	9b15      	ldr	r3, [sp, #84]	@ 0x54
 801e6a6:	2b00      	cmp	r3, #0
 801e6a8:	f340 8225 	ble.w	801eaf6 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x496>
 801e6ac:	9b2a      	ldr	r3, [sp, #168]	@ 0xa8
 801e6ae:	f9b3 1008 	ldrsh.w	r1, [r3, #8]
 801e6b2:	f9b3 200c 	ldrsh.w	r2, [r3, #12]
 801e6b6:	1e48      	subs	r0, r1, #1
 801e6b8:	1e57      	subs	r7, r2, #1
 801e6ba:	9b09      	ldr	r3, [sp, #36]	@ 0x24
 801e6bc:	2b00      	cmp	r3, #0
 801e6be:	f340 80e3 	ble.w	801e888 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x228>
 801e6c2:	ea5f 4c2a 	movs.w	ip, sl, asr #16
 801e6c6:	ea4f 4325 	mov.w	r3, r5, asr #16
 801e6ca:	d406      	bmi.n	801e6da <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x7a>
 801e6cc:	4584      	cmp	ip, r0
 801e6ce:	da04      	bge.n	801e6da <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x7a>
 801e6d0:	2b00      	cmp	r3, #0
 801e6d2:	db02      	blt.n	801e6da <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x7a>
 801e6d4:	42bb      	cmp	r3, r7
 801e6d6:	f2c0 80d8 	blt.w	801e88a <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x22a>
 801e6da:	f11c 0c01 	adds.w	ip, ip, #1
 801e6de:	f100 80c9 	bmi.w	801e874 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x214>
 801e6e2:	4561      	cmp	r1, ip
 801e6e4:	f2c0 80c6 	blt.w	801e874 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x214>
 801e6e8:	3301      	adds	r3, #1
 801e6ea:	f100 80c3 	bmi.w	801e874 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x214>
 801e6ee:	429a      	cmp	r2, r3
 801e6f0:	f2c0 80c0 	blt.w	801e874 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x214>
 801e6f4:	f8dd b024 	ldr.w	fp, [sp, #36]	@ 0x24
 801e6f8:	4647      	mov	r7, r8
 801e6fa:	f1bb 0f00 	cmp.w	fp, #0
 801e6fe:	f340 80e3 	ble.w	801e8c8 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x268>
 801e702:	9a2a      	ldr	r2, [sp, #168]	@ 0xa8
 801e704:	9b2a      	ldr	r3, [sp, #168]	@ 0xa8
 801e706:	f8d2 e00c 	ldr.w	lr, [r2, #12]
 801e70a:	689b      	ldr	r3, [r3, #8]
 801e70c:	ea5f 422a 	movs.w	r2, sl, asr #16
 801e710:	ea4f 4c25 	mov.w	ip, r5, asr #16
 801e714:	f3ca 3003 	ubfx	r0, sl, #12, #4
 801e718:	f3c5 3103 	ubfx	r1, r5, #12, #4
 801e71c:	f100 8121 	bmi.w	801e962 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x302>
 801e720:	f103 39ff 	add.w	r9, r3, #4294967295
 801e724:	454a      	cmp	r2, r9
 801e726:	f280 811c 	bge.w	801e962 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x302>
 801e72a:	f1bc 0f00 	cmp.w	ip, #0
 801e72e:	f2c0 8118 	blt.w	801e962 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x302>
 801e732:	f10e 39ff 	add.w	r9, lr, #4294967295
 801e736:	45cc      	cmp	ip, r9
 801e738:	f280 8113 	bge.w	801e962 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x302>
 801e73c:	b21b      	sxth	r3, r3
 801e73e:	fb0c 2203 	mla	r2, ip, r3, r2
 801e742:	9c0b      	ldr	r4, [sp, #44]	@ 0x2c
 801e744:	eb04 0902 	add.w	r9, r4, r2
 801e748:	5ca2      	ldrb	r2, [r4, r2]
 801e74a:	f836 e012 	ldrh.w	lr, [r6, r2, lsl #1]
 801e74e:	2800      	cmp	r0, #0
 801e750:	f000 80fe 	beq.w	801e950 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2f0>
 801e754:	f899 2001 	ldrb.w	r2, [r9, #1]
 801e758:	f836 2012 	ldrh.w	r2, [r6, r2, lsl #1]
 801e75c:	9211      	str	r2, [sp, #68]	@ 0x44
 801e75e:	b151      	cbz	r1, 801e776 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x116>
 801e760:	eb09 0203 	add.w	r2, r9, r3
 801e764:	f819 3003 	ldrb.w	r3, [r9, r3]
 801e768:	f836 3013 	ldrh.w	r3, [r6, r3, lsl #1]
 801e76c:	930f      	str	r3, [sp, #60]	@ 0x3c
 801e76e:	7853      	ldrb	r3, [r2, #1]
 801e770:	f836 3013 	ldrh.w	r3, [r6, r3, lsl #1]
 801e774:	9312      	str	r3, [sp, #72]	@ 0x48
 801e776:	9b11      	ldr	r3, [sp, #68]	@ 0x44
 801e778:	9c12      	ldr	r4, [sp, #72]	@ 0x48
 801e77a:	ea4f 4c03 	mov.w	ip, r3, lsl #16
 801e77e:	f00c 6cfc 	and.w	ip, ip, #132120576	@ 0x7e00000
 801e782:	f423 63fc 	bic.w	r3, r3, #2016	@ 0x7e0
 801e786:	ea4c 0c03 	orr.w	ip, ip, r3
 801e78a:	9b12      	ldr	r3, [sp, #72]	@ 0x48
 801e78c:	041b      	lsls	r3, r3, #16
 801e78e:	fb10 f201 	smulbb	r2, r0, r1
 801e792:	f424 64fc 	bic.w	r4, r4, #2016	@ 0x7e0
 801e796:	f003 63fc 	and.w	r3, r3, #132120576	@ 0x7e00000
 801e79a:	10d2      	asrs	r2, r2, #3
 801e79c:	4323      	orrs	r3, r4
 801e79e:	ebc2 0940 	rsb	r9, r2, r0, lsl #1
 801e7a2:	4353      	muls	r3, r2
 801e7a4:	fb09 330c 	mla	r3, r9, ip, r3
 801e7a8:	ea4f 4c0e 	mov.w	ip, lr, lsl #16
 801e7ac:	f00c 6cfc 	and.w	ip, ip, #132120576	@ 0x7e00000
 801e7b0:	f42e 6efc 	bic.w	lr, lr, #2016	@ 0x7e0
 801e7b4:	ea4c 0e0e 	orr.w	lr, ip, lr
 801e7b8:	f1c1 0c10 	rsb	ip, r1, #16
 801e7bc:	ebac 0c00 	sub.w	ip, ip, r0
 801e7c0:	eb02 0c4c 	add.w	ip, r2, ip, lsl #1
 801e7c4:	fb0c 3c0e 	mla	ip, ip, lr, r3
 801e7c8:	9b0f      	ldr	r3, [sp, #60]	@ 0x3c
 801e7ca:	9c0a      	ldr	r4, [sp, #40]	@ 0x28
 801e7cc:	0418      	lsls	r0, r3, #16
 801e7ce:	f000 60fc 	and.w	r0, r0, #132120576	@ 0x7e00000
 801e7d2:	f423 63fc 	bic.w	r3, r3, #2016	@ 0x7e0
 801e7d6:	4318      	orrs	r0, r3
 801e7d8:	ebc2 0241 	rsb	r2, r2, r1, lsl #1
 801e7dc:	fb02 c200 	mla	r2, r2, r0, ip
 801e7e0:	0d53      	lsrs	r3, r2, #21
 801e7e2:	0952      	lsrs	r2, r2, #5
 801e7e4:	8838      	ldrh	r0, [r7, #0]
 801e7e6:	f403 63fc 	and.w	r3, r3, #2016	@ 0x7e0
 801e7ea:	f422 62fc 	bic.w	r2, r2, #2016	@ 0x7e0
 801e7ee:	431a      	orrs	r2, r3
 801e7f0:	b292      	uxth	r2, r2
 801e7f2:	1201      	asrs	r1, r0, #8
 801e7f4:	f8bd 3034 	ldrh.w	r3, [sp, #52]	@ 0x34
 801e7f8:	ea4f 2c22 	mov.w	ip, r2, asr #8
 801e7fc:	f001 01f8 	and.w	r1, r1, #248	@ 0xf8
 801e800:	fb11 f104 	smulbb	r1, r1, r4
 801e804:	ea4f 0ee0 	mov.w	lr, r0, asr #3
 801e808:	f00c 0cf8 	and.w	ip, ip, #248	@ 0xf8
 801e80c:	00c0      	lsls	r0, r0, #3
 801e80e:	fb0c 1c03 	mla	ip, ip, r3, r1
 801e812:	f00e 0efc 	and.w	lr, lr, #252	@ 0xfc
 801e816:	10d1      	asrs	r1, r2, #3
 801e818:	b2c0      	uxtb	r0, r0
 801e81a:	00d2      	lsls	r2, r2, #3
 801e81c:	b2d2      	uxtb	r2, r2
 801e81e:	f001 01fc 	and.w	r1, r1, #252	@ 0xfc
 801e822:	fb1e fe04 	smulbb	lr, lr, r4
 801e826:	fb10 f004 	smulbb	r0, r0, r4
 801e82a:	fa1f fc8c 	uxth.w	ip, ip
 801e82e:	fb01 e103 	mla	r1, r1, r3, lr
 801e832:	fb02 0303 	mla	r3, r2, r3, r0
 801e836:	b29a      	uxth	r2, r3
 801e838:	f10c 0301 	add.w	r3, ip, #1
 801e83c:	b289      	uxth	r1, r1
 801e83e:	eb03 2c1c 	add.w	ip, r3, ip, lsr #8
 801e842:	1c53      	adds	r3, r2, #1
 801e844:	eb03 2312 	add.w	r3, r3, r2, lsr #8
 801e848:	1c4a      	adds	r2, r1, #1
 801e84a:	eb02 2111 	add.w	r1, r2, r1, lsr #8
 801e84e:	f40c 4c78 	and.w	ip, ip, #63488	@ 0xf800
 801e852:	f3c3 23c4 	ubfx	r3, r3, #11, #5
 801e856:	0949      	lsrs	r1, r1, #5
 801e858:	ea43 030c 	orr.w	r3, r3, ip
 801e85c:	f401 61fc 	and.w	r1, r1, #2016	@ 0x7e0
 801e860:	430b      	orrs	r3, r1
 801e862:	803b      	strh	r3, [r7, #0]
 801e864:	9b25      	ldr	r3, [sp, #148]	@ 0x94
 801e866:	449a      	add	sl, r3
 801e868:	9b26      	ldr	r3, [sp, #152]	@ 0x98
 801e86a:	3702      	adds	r7, #2
 801e86c:	441d      	add	r5, r3
 801e86e:	f10b 3bff 	add.w	fp, fp, #4294967295
 801e872:	e742      	b.n	801e6fa <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x9a>
 801e874:	9b25      	ldr	r3, [sp, #148]	@ 0x94
 801e876:	449a      	add	sl, r3
 801e878:	9b26      	ldr	r3, [sp, #152]	@ 0x98
 801e87a:	441d      	add	r5, r3
 801e87c:	9b09      	ldr	r3, [sp, #36]	@ 0x24
 801e87e:	3b01      	subs	r3, #1
 801e880:	9309      	str	r3, [sp, #36]	@ 0x24
 801e882:	f108 0802 	add.w	r8, r8, #2
 801e886:	e718      	b.n	801e6ba <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x5a>
 801e888:	d023      	beq.n	801e8d2 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x272>
 801e88a:	9b09      	ldr	r3, [sp, #36]	@ 0x24
 801e88c:	9825      	ldr	r0, [sp, #148]	@ 0x94
 801e88e:	3b01      	subs	r3, #1
 801e890:	fb00 a003 	mla	r0, r0, r3, sl
 801e894:	1400      	asrs	r0, r0, #16
 801e896:	f53f af2d 	bmi.w	801e6f4 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x94>
 801e89a:	3901      	subs	r1, #1
 801e89c:	4288      	cmp	r0, r1
 801e89e:	f6bf af29 	bge.w	801e6f4 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x94>
 801e8a2:	9926      	ldr	r1, [sp, #152]	@ 0x98
 801e8a4:	fb01 5303 	mla	r3, r1, r3, r5
 801e8a8:	141b      	asrs	r3, r3, #16
 801e8aa:	f53f af23 	bmi.w	801e6f4 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x94>
 801e8ae:	3a01      	subs	r2, #1
 801e8b0:	4293      	cmp	r3, r2
 801e8b2:	f6bf af1f 	bge.w	801e6f4 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x94>
 801e8b6:	f8dd e024 	ldr.w	lr, [sp, #36]	@ 0x24
 801e8ba:	f8bd 9034 	ldrh.w	r9, [sp, #52]	@ 0x34
 801e8be:	f8cd 8038 	str.w	r8, [sp, #56]	@ 0x38
 801e8c2:	f1be 0f00 	cmp.w	lr, #0
 801e8c6:	dc6c      	bgt.n	801e9a2 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x342>
 801e8c8:	9b09      	ldr	r3, [sp, #36]	@ 0x24
 801e8ca:	ea23 74e3 	bic.w	r4, r3, r3, asr #31
 801e8ce:	eb08 0844 	add.w	r8, r8, r4, lsl #1
 801e8d2:	9b0c      	ldr	r3, [sp, #48]	@ 0x30
 801e8d4:	2b00      	cmp	r3, #0
 801e8d6:	f340 810e 	ble.w	801eaf6 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x496>
 801e8da:	ee30 0a04 	vadd.f32	s0, s0, s8
 801e8de:	eeb7 7a00 	vmov.f32	s14, #112	@ 0x3f800000  1.0
 801e8e2:	eec7 7a00 	vdiv.f32	s15, s14, s0
 801e8e6:	9b22      	ldr	r3, [sp, #136]	@ 0x88
 801e8e8:	ee70 0aa4 	vadd.f32	s1, s1, s9
 801e8ec:	ee31 1a05 	vadd.f32	s2, s2, s10
 801e8f0:	ee20 7aa7 	vmul.f32	s14, s1, s15
 801e8f4:	eef0 6a62 	vmov.f32	s13, s5
 801e8f8:	ee61 7a27 	vmul.f32	s15, s2, s15
 801e8fc:	eefe 6ac8 	vcvt.s32.f32	s13, s13, #16
 801e900:	ee77 2a62 	vsub.f32	s5, s14, s5
 801e904:	ee16 aa90 	vmov	sl, s13
 801e908:	eefe 2ac8 	vcvt.s32.f32	s5, s5, #16
 801e90c:	eef0 6a43 	vmov.f32	s13, s6
 801e910:	ee37 3ac3 	vsub.f32	s6, s15, s6
 801e914:	ee12 2a90 	vmov	r2, s5
 801e918:	eebe 3ac8 	vcvt.s32.f32	s6, s6, #16
 801e91c:	fb92 f3f3 	sdiv	r3, r2, r3
 801e920:	ee13 2a10 	vmov	r2, s6
 801e924:	9325      	str	r3, [sp, #148]	@ 0x94
 801e926:	9b22      	ldr	r3, [sp, #136]	@ 0x88
 801e928:	fb92 f3f3 	sdiv	r3, r2, r3
 801e92c:	9326      	str	r3, [sp, #152]	@ 0x98
 801e92e:	9b0c      	ldr	r3, [sp, #48]	@ 0x30
 801e930:	9a15      	ldr	r2, [sp, #84]	@ 0x54
 801e932:	3b01      	subs	r3, #1
 801e934:	eefe 6ac8 	vcvt.s32.f32	s13, s13, #16
 801e938:	930c      	str	r3, [sp, #48]	@ 0x30
 801e93a:	9b22      	ldr	r3, [sp, #136]	@ 0x88
 801e93c:	bf08      	it	eq
 801e93e:	4613      	moveq	r3, r2
 801e940:	ee16 5a90 	vmov	r5, s13
 801e944:	9309      	str	r3, [sp, #36]	@ 0x24
 801e946:	eeb0 3a67 	vmov.f32	s6, s15
 801e94a:	eef0 2a47 	vmov.f32	s5, s14
 801e94e:	e6a6      	b.n	801e69e <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3e>
 801e950:	2900      	cmp	r1, #0
 801e952:	f43f af10 	beq.w	801e776 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x116>
 801e956:	f819 3003 	ldrb.w	r3, [r9, r3]
 801e95a:	f836 3013 	ldrh.w	r3, [r6, r3, lsl #1]
 801e95e:	930f      	str	r3, [sp, #60]	@ 0x3c
 801e960:	e709      	b.n	801e776 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x116>
 801e962:	f112 0901 	adds.w	r9, r2, #1
 801e966:	f53f af7d 	bmi.w	801e864 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x204>
 801e96a:	454b      	cmp	r3, r9
 801e96c:	f6ff af7a 	blt.w	801e864 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x204>
 801e970:	f11c 0901 	adds.w	r9, ip, #1
 801e974:	f53f af76 	bmi.w	801e864 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x204>
 801e978:	45ce      	cmp	lr, r9
 801e97a:	f6ff af73 	blt.w	801e864 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x204>
 801e97e:	9c0d      	ldr	r4, [sp, #52]	@ 0x34
 801e980:	9202      	str	r2, [sp, #8]
 801e982:	b21b      	sxth	r3, r3
 801e984:	fa0f f28e 	sxth.w	r2, lr
 801e988:	e9cd 1405 	strd	r1, r4, [sp, #20]
 801e98c:	e9cd c003 	strd	ip, r0, [sp, #12]
 801e990:	9201      	str	r2, [sp, #4]
 801e992:	9300      	str	r3, [sp, #0]
 801e994:	9a0b      	ldr	r2, [sp, #44]	@ 0x2c
 801e996:	9816      	ldr	r0, [sp, #88]	@ 0x58
 801e998:	4633      	mov	r3, r6
 801e99a:	4639      	mov	r1, r7
 801e99c:	f7ff fd8e 	bl	801e4bc <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKtssiihhh>
 801e9a0:	e760      	b.n	801e864 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x204>
 801e9a2:	9b2a      	ldr	r3, [sp, #168]	@ 0xa8
 801e9a4:	9c0b      	ldr	r4, [sp, #44]	@ 0x2c
 801e9a6:	f9b3 3008 	ldrsh.w	r3, [r3, #8]
 801e9aa:	ea4f 422a 	mov.w	r2, sl, asr #16
 801e9ae:	1429      	asrs	r1, r5, #16
 801e9b0:	fb03 2101 	mla	r1, r3, r1, r2
 801e9b4:	9a0b      	ldr	r2, [sp, #44]	@ 0x2c
 801e9b6:	440a      	add	r2, r1
 801e9b8:	5c61      	ldrb	r1, [r4, r1]
 801e9ba:	f3ca 3c03 	ubfx	ip, sl, #12, #4
 801e9be:	f3c5 3003 	ubfx	r0, r5, #12, #4
 801e9c2:	f836 1011 	ldrh.w	r1, [r6, r1, lsl #1]
 801e9c6:	f1bc 0f00 	cmp.w	ip, #0
 801e9ca:	f000 808c 	beq.w	801eae6 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x486>
 801e9ce:	7857      	ldrb	r7, [r2, #1]
 801e9d0:	f836 4017 	ldrh.w	r4, [r6, r7, lsl #1]
 801e9d4:	9413      	str	r4, [sp, #76]	@ 0x4c
 801e9d6:	b140      	cbz	r0, 801e9ea <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x38a>
 801e9d8:	18d7      	adds	r7, r2, r3
 801e9da:	5cd3      	ldrb	r3, [r2, r3]
 801e9dc:	f836 3013 	ldrh.w	r3, [r6, r3, lsl #1]
 801e9e0:	9310      	str	r3, [sp, #64]	@ 0x40
 801e9e2:	787b      	ldrb	r3, [r7, #1]
 801e9e4:	f836 3013 	ldrh.w	r3, [r6, r3, lsl #1]
 801e9e8:	9314      	str	r3, [sp, #80]	@ 0x50
 801e9ea:	9b13      	ldr	r3, [sp, #76]	@ 0x4c
 801e9ec:	9c14      	ldr	r4, [sp, #80]	@ 0x50
 801e9ee:	fb1c f200 	smulbb	r2, ip, r0
 801e9f2:	041f      	lsls	r7, r3, #16
 801e9f4:	10d2      	asrs	r2, r2, #3
 801e9f6:	f423 63fc 	bic.w	r3, r3, #2016	@ 0x7e0
 801e9fa:	f007 67fc 	and.w	r7, r7, #132120576	@ 0x7e00000
 801e9fe:	431f      	orrs	r7, r3
 801ea00:	ebc2 034c 	rsb	r3, r2, ip, lsl #1
 801ea04:	9317      	str	r3, [sp, #92]	@ 0x5c
 801ea06:	9b14      	ldr	r3, [sp, #80]	@ 0x50
 801ea08:	041b      	lsls	r3, r3, #16
 801ea0a:	f424 6bfc 	bic.w	fp, r4, #2016	@ 0x7e0
 801ea0e:	f003 63fc 	and.w	r3, r3, #132120576	@ 0x7e00000
 801ea12:	ea43 030b 	orr.w	r3, r3, fp
 801ea16:	9c17      	ldr	r4, [sp, #92]	@ 0x5c
 801ea18:	4353      	muls	r3, r2
 801ea1a:	ea4f 4b01 	mov.w	fp, r1, lsl #16
 801ea1e:	fb04 3707 	mla	r7, r4, r7, r3
 801ea22:	f421 61fc 	bic.w	r1, r1, #2016	@ 0x7e0
 801ea26:	f00b 63fc 	and.w	r3, fp, #132120576	@ 0x7e00000
 801ea2a:	ea43 0b01 	orr.w	fp, r3, r1
 801ea2e:	f1c0 0110 	rsb	r1, r0, #16
 801ea32:	9b10      	ldr	r3, [sp, #64]	@ 0x40
 801ea34:	9c0a      	ldr	r4, [sp, #40]	@ 0x28
 801ea36:	eba1 0c0c 	sub.w	ip, r1, ip
 801ea3a:	eb02 0c4c 	add.w	ip, r2, ip, lsl #1
 801ea3e:	fb0c 770b 	mla	r7, ip, fp, r7
 801ea42:	ea4f 4c03 	mov.w	ip, r3, lsl #16
 801ea46:	f423 6bfc 	bic.w	fp, r3, #2016	@ 0x7e0
 801ea4a:	f00c 6cfc 	and.w	ip, ip, #132120576	@ 0x7e00000
 801ea4e:	ebc2 0240 	rsb	r2, r2, r0, lsl #1
 801ea52:	ea4c 0c0b 	orr.w	ip, ip, fp
 801ea56:	fb02 770c 	mla	r7, r2, ip, r7
 801ea5a:	9a0e      	ldr	r2, [sp, #56]	@ 0x38
 801ea5c:	0d79      	lsrs	r1, r7, #21
 801ea5e:	097f      	lsrs	r7, r7, #5
 801ea60:	8812      	ldrh	r2, [r2, #0]
 801ea62:	f401 61fc 	and.w	r1, r1, #2016	@ 0x7e0
 801ea66:	f427 67fc 	bic.w	r7, r7, #2016	@ 0x7e0
 801ea6a:	430f      	orrs	r7, r1
 801ea6c:	b2bb      	uxth	r3, r7
 801ea6e:	1211      	asrs	r1, r2, #8
 801ea70:	1218      	asrs	r0, r3, #8
 801ea72:	f001 01f8 	and.w	r1, r1, #248	@ 0xf8
 801ea76:	fb11 f104 	smulbb	r1, r1, r4
 801ea7a:	10d7      	asrs	r7, r2, #3
 801ea7c:	f000 00f8 	and.w	r0, r0, #248	@ 0xf8
 801ea80:	00d2      	lsls	r2, r2, #3
 801ea82:	fb00 1009 	mla	r0, r0, r9, r1
 801ea86:	f007 07fc 	and.w	r7, r7, #252	@ 0xfc
 801ea8a:	10d9      	asrs	r1, r3, #3
 801ea8c:	b2d2      	uxtb	r2, r2
 801ea8e:	00db      	lsls	r3, r3, #3
 801ea90:	fb17 f704 	smulbb	r7, r7, r4
 801ea94:	fb12 f204 	smulbb	r2, r2, r4
 801ea98:	f001 01fc 	and.w	r1, r1, #252	@ 0xfc
 801ea9c:	b2db      	uxtb	r3, r3
 801ea9e:	b280      	uxth	r0, r0
 801eaa0:	fb01 7109 	mla	r1, r1, r9, r7
 801eaa4:	fb03 2309 	mla	r3, r3, r9, r2
 801eaa8:	b29b      	uxth	r3, r3
 801eaaa:	b289      	uxth	r1, r1
 801eaac:	1c42      	adds	r2, r0, #1
 801eaae:	eb02 2010 	add.w	r0, r2, r0, lsr #8
 801eab2:	1c4f      	adds	r7, r1, #1
 801eab4:	1c5a      	adds	r2, r3, #1
 801eab6:	eb02 2213 	add.w	r2, r2, r3, lsr #8
 801eaba:	eb07 2111 	add.w	r1, r7, r1, lsr #8
 801eabe:	f400 4078 	and.w	r0, r0, #63488	@ 0xf800
 801eac2:	f3c2 22c4 	ubfx	r2, r2, #11, #5
 801eac6:	0949      	lsrs	r1, r1, #5
 801eac8:	9b0e      	ldr	r3, [sp, #56]	@ 0x38
 801eaca:	4310      	orrs	r0, r2
 801eacc:	f401 61fc 	and.w	r1, r1, #2016	@ 0x7e0
 801ead0:	4308      	orrs	r0, r1
 801ead2:	f823 0b02 	strh.w	r0, [r3], #2
 801ead6:	930e      	str	r3, [sp, #56]	@ 0x38
 801ead8:	9b25      	ldr	r3, [sp, #148]	@ 0x94
 801eada:	449a      	add	sl, r3
 801eadc:	9b26      	ldr	r3, [sp, #152]	@ 0x98
 801eade:	f10e 3eff 	add.w	lr, lr, #4294967295
 801eae2:	441d      	add	r5, r3
 801eae4:	e6ed      	b.n	801e8c2 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x262>
 801eae6:	2800      	cmp	r0, #0
 801eae8:	f43f af7f 	beq.w	801e9ea <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x38a>
 801eaec:	5cd3      	ldrb	r3, [r2, r3]
 801eaee:	f836 3013 	ldrh.w	r3, [r6, r3, lsl #1]
 801eaf2:	9310      	str	r3, [sp, #64]	@ 0x40
 801eaf4:	e779      	b.n	801e9ea <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x38a>
 801eaf6:	b019      	add	sp, #100	@ 0x64
 801eaf8:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}

0801eafc <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh>:
 801eafc:	e92d 47f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
 801eb00:	e9dd 480a 	ldrd	r4, r8, [sp, #40]	@ 0x28
 801eb04:	f9bd e020 	ldrsh.w	lr, [sp, #32]
 801eb08:	f9bd a024 	ldrsh.w	sl, [sp, #36]	@ 0x24
 801eb0c:	f89d 5030 	ldrb.w	r5, [sp, #48]	@ 0x30
 801eb10:	f89d 6034 	ldrb.w	r6, [sp, #52]	@ 0x34
 801eb14:	8808      	ldrh	r0, [r1, #0]
 801eb16:	fb08 470e 	mla	r7, r8, lr, r4
 801eb1a:	f1b8 0f00 	cmp.w	r8, #0
 801eb1e:	eb02 0907 	add.w	r9, r2, r7
 801eb22:	db67      	blt.n	801ebf4 <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0xf8>
 801eb24:	45c2      	cmp	sl, r8
 801eb26:	dd65      	ble.n	801ebf4 <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0xf8>
 801eb28:	2c00      	cmp	r4, #0
 801eb2a:	db61      	blt.n	801ebf0 <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0xf4>
 801eb2c:	45a6      	cmp	lr, r4
 801eb2e:	dd5f      	ble.n	801ebf0 <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0xf4>
 801eb30:	5dd2      	ldrb	r2, [r2, r7]
 801eb32:	f833 c012 	ldrh.w	ip, [r3, r2, lsl #1]
 801eb36:	1c62      	adds	r2, r4, #1
 801eb38:	d45f      	bmi.n	801ebfa <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0xfe>
 801eb3a:	4596      	cmp	lr, r2
 801eb3c:	dd5d      	ble.n	801ebfa <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0xfe>
 801eb3e:	2d00      	cmp	r5, #0
 801eb40:	d05b      	beq.n	801ebfa <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0xfe>
 801eb42:	f899 2001 	ldrb.w	r2, [r9, #1]
 801eb46:	f833 7012 	ldrh.w	r7, [r3, r2, lsl #1]
 801eb4a:	f118 0801 	adds.w	r8, r8, #1
 801eb4e:	d458      	bmi.n	801ec02 <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x106>
 801eb50:	45c2      	cmp	sl, r8
 801eb52:	dd56      	ble.n	801ec02 <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x106>
 801eb54:	2e00      	cmp	r6, #0
 801eb56:	d054      	beq.n	801ec02 <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x106>
 801eb58:	2c00      	cmp	r4, #0
 801eb5a:	db50      	blt.n	801ebfe <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x102>
 801eb5c:	45a6      	cmp	lr, r4
 801eb5e:	dd4e      	ble.n	801ebfe <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x102>
 801eb60:	f819 200e 	ldrb.w	r2, [r9, lr]
 801eb64:	f833 2012 	ldrh.w	r2, [r3, r2, lsl #1]
 801eb68:	3401      	adds	r4, #1
 801eb6a:	d407      	bmi.n	801eb7c <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x80>
 801eb6c:	45a6      	cmp	lr, r4
 801eb6e:	dd05      	ble.n	801eb7c <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x80>
 801eb70:	b125      	cbz	r5, 801eb7c <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x80>
 801eb72:	44ce      	add	lr, r9
 801eb74:	f89e 0001 	ldrb.w	r0, [lr, #1]
 801eb78:	f833 0010 	ldrh.w	r0, [r3, r0, lsl #1]
 801eb7c:	ea4f 430c 	mov.w	r3, ip, lsl #16
 801eb80:	fb15 f406 	smulbb	r4, r5, r6
 801eb84:	f003 63fc 	and.w	r3, r3, #132120576	@ 0x7e00000
 801eb88:	ea4f 4e07 	mov.w	lr, r7, lsl #16
 801eb8c:	f42c 6cfc 	bic.w	ip, ip, #2016	@ 0x7e0
 801eb90:	f3c4 04c7 	ubfx	r4, r4, #3, #8
 801eb94:	ea43 0c0c 	orr.w	ip, r3, ip
 801eb98:	f00e 6efc 	and.w	lr, lr, #132120576	@ 0x7e00000
 801eb9c:	f1c6 0310 	rsb	r3, r6, #16
 801eba0:	f427 67fc 	bic.w	r7, r7, #2016	@ 0x7e0
 801eba4:	1b5b      	subs	r3, r3, r5
 801eba6:	ea4e 0707 	orr.w	r7, lr, r7
 801ebaa:	ebc4 0545 	rsb	r5, r4, r5, lsl #1
 801ebae:	eb04 0343 	add.w	r3, r4, r3, lsl #1
 801ebb2:	437d      	muls	r5, r7
 801ebb4:	fb03 5c0c 	mla	ip, r3, ip, r5
 801ebb8:	0403      	lsls	r3, r0, #16
 801ebba:	f003 63fc 	and.w	r3, r3, #132120576	@ 0x7e00000
 801ebbe:	f420 60fc 	bic.w	r0, r0, #2016	@ 0x7e0
 801ebc2:	4318      	orrs	r0, r3
 801ebc4:	0413      	lsls	r3, r2, #16
 801ebc6:	f003 63fc 	and.w	r3, r3, #132120576	@ 0x7e00000
 801ebca:	f422 62fc 	bic.w	r2, r2, #2016	@ 0x7e0
 801ebce:	4313      	orrs	r3, r2
 801ebd0:	fb04 c000 	mla	r0, r4, r0, ip
 801ebd4:	ebc4 0646 	rsb	r6, r4, r6, lsl #1
 801ebd8:	fb06 0003 	mla	r0, r6, r3, r0
 801ebdc:	0d43      	lsrs	r3, r0, #21
 801ebde:	0940      	lsrs	r0, r0, #5
 801ebe0:	f403 63fc 	and.w	r3, r3, #2016	@ 0x7e0
 801ebe4:	f420 60fc 	bic.w	r0, r0, #2016	@ 0x7e0
 801ebe8:	4318      	orrs	r0, r3
 801ebea:	8008      	strh	r0, [r1, #0]
 801ebec:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
 801ebf0:	4684      	mov	ip, r0
 801ebf2:	e7a0      	b.n	801eb36 <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x3a>
 801ebf4:	4607      	mov	r7, r0
 801ebf6:	4684      	mov	ip, r0
 801ebf8:	e7a7      	b.n	801eb4a <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x4e>
 801ebfa:	4607      	mov	r7, r0
 801ebfc:	e7a5      	b.n	801eb4a <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x4e>
 801ebfe:	4602      	mov	r2, r0
 801ec00:	e7b2      	b.n	801eb68 <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x6c>
 801ec02:	4602      	mov	r2, r0
 801ec04:	e7ba      	b.n	801eb7c <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x80>

0801ec06 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff>:
 801ec06:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 801ec0a:	b093      	sub	sp, #76	@ 0x4c
 801ec0c:	e9dd 461d 	ldrd	r4, r6, [sp, #116]	@ 0x74
 801ec10:	920f      	str	r2, [sp, #60]	@ 0x3c
 801ec12:	9a21      	ldr	r2, [sp, #132]	@ 0x84
 801ec14:	9108      	str	r1, [sp, #32]
 801ec16:	9306      	str	r3, [sp, #24]
 801ec18:	e9dd 1322 	ldrd	r1, r3, [sp, #136]	@ 0x88
 801ec1c:	9010      	str	r0, [sp, #64]	@ 0x40
 801ec1e:	6850      	ldr	r0, [r2, #4]
 801ec20:	6812      	ldr	r2, [r2, #0]
 801ec22:	fb00 1303 	mla	r3, r0, r3, r1
 801ec26:	eb02 0943 	add.w	r9, r2, r3, lsl #1
 801ec2a:	9b24      	ldr	r3, [sp, #144]	@ 0x90
 801ec2c:	681b      	ldr	r3, [r3, #0]
 801ec2e:	9307      	str	r3, [sp, #28]
 801ec30:	9b24      	ldr	r3, [sp, #144]	@ 0x90
 801ec32:	685f      	ldr	r7, [r3, #4]
 801ec34:	eef7 6a00 	vmov.f32	s13, #112	@ 0x3f800000  1.0
 801ec38:	3704      	adds	r7, #4
 801ec3a:	9b08      	ldr	r3, [sp, #32]
 801ec3c:	2b00      	cmp	r3, #0
 801ec3e:	dc03      	bgt.n	801ec48 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x42>
 801ec40:	9b0f      	ldr	r3, [sp, #60]	@ 0x3c
 801ec42:	2b00      	cmp	r3, #0
 801ec44:	f340 81b2 	ble.w	801efac <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3a6>
 801ec48:	9b24      	ldr	r3, [sp, #144]	@ 0x90
 801ec4a:	f9b3 1008 	ldrsh.w	r1, [r3, #8]
 801ec4e:	f9b3 200c 	ldrsh.w	r2, [r3, #12]
 801ec52:	1e48      	subs	r0, r1, #1
 801ec54:	f102 3cff 	add.w	ip, r2, #4294967295
 801ec58:	9b06      	ldr	r3, [sp, #24]
 801ec5a:	2b00      	cmp	r3, #0
 801ec5c:	f340 80a9 	ble.w	801edb2 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1ac>
 801ec60:	ea5f 4e24 	movs.w	lr, r4, asr #16
 801ec64:	ea4f 4326 	mov.w	r3, r6, asr #16
 801ec68:	d406      	bmi.n	801ec78 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x72>
 801ec6a:	4586      	cmp	lr, r0
 801ec6c:	da04      	bge.n	801ec78 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x72>
 801ec6e:	2b00      	cmp	r3, #0
 801ec70:	db02      	blt.n	801ec78 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x72>
 801ec72:	4563      	cmp	r3, ip
 801ec74:	f2c0 809e 	blt.w	801edb4 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1ae>
 801ec78:	f11e 0e01 	adds.w	lr, lr, #1
 801ec7c:	f100 808f 	bmi.w	801ed9e <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x198>
 801ec80:	4571      	cmp	r1, lr
 801ec82:	f2c0 808c 	blt.w	801ed9e <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x198>
 801ec86:	3301      	adds	r3, #1
 801ec88:	f100 8089 	bmi.w	801ed9e <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x198>
 801ec8c:	429a      	cmp	r2, r3
 801ec8e:	f2c0 8086 	blt.w	801ed9e <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x198>
 801ec92:	f8dd b018 	ldr.w	fp, [sp, #24]
 801ec96:	46c8      	mov	r8, r9
 801ec98:	f1bb 0f00 	cmp.w	fp, #0
 801ec9c:	f340 80a6 	ble.w	801edec <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1e6>
 801eca0:	9a24      	ldr	r2, [sp, #144]	@ 0x90
 801eca2:	9b24      	ldr	r3, [sp, #144]	@ 0x90
 801eca4:	f8d2 e00c 	ldr.w	lr, [r2, #12]
 801eca8:	689b      	ldr	r3, [r3, #8]
 801ecaa:	1422      	asrs	r2, r4, #16
 801ecac:	ea4f 4c26 	mov.w	ip, r6, asr #16
 801ecb0:	f3c4 3003 	ubfx	r0, r4, #12, #4
 801ecb4:	f3c6 3103 	ubfx	r1, r6, #12, #4
 801ecb8:	f100 80e3 	bmi.w	801ee82 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x27c>
 801ecbc:	f103 3aff 	add.w	sl, r3, #4294967295
 801ecc0:	4552      	cmp	r2, sl
 801ecc2:	f280 80de 	bge.w	801ee82 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x27c>
 801ecc6:	f1bc 0f00 	cmp.w	ip, #0
 801ecca:	f2c0 80da 	blt.w	801ee82 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x27c>
 801ecce:	f10e 3aff 	add.w	sl, lr, #4294967295
 801ecd2:	45d4      	cmp	ip, sl
 801ecd4:	f280 80d5 	bge.w	801ee82 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x27c>
 801ecd8:	b21b      	sxth	r3, r3
 801ecda:	fb0c 2203 	mla	r2, ip, r3, r2
 801ecde:	9d07      	ldr	r5, [sp, #28]
 801ece0:	eb05 0a02 	add.w	sl, r5, r2
 801ece4:	5caa      	ldrb	r2, [r5, r2]
 801ece6:	f837 e012 	ldrh.w	lr, [r7, r2, lsl #1]
 801ecea:	2800      	cmp	r0, #0
 801ecec:	f000 80c0 	beq.w	801ee70 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x26a>
 801ecf0:	f89a 2001 	ldrb.w	r2, [sl, #1]
 801ecf4:	f837 2012 	ldrh.w	r2, [r7, r2, lsl #1]
 801ecf8:	920b      	str	r2, [sp, #44]	@ 0x2c
 801ecfa:	b151      	cbz	r1, 801ed12 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x10c>
 801ecfc:	eb0a 0203 	add.w	r2, sl, r3
 801ed00:	f81a 3003 	ldrb.w	r3, [sl, r3]
 801ed04:	f837 3013 	ldrh.w	r3, [r7, r3, lsl #1]
 801ed08:	9309      	str	r3, [sp, #36]	@ 0x24
 801ed0a:	7853      	ldrb	r3, [r2, #1]
 801ed0c:	f837 3013 	ldrh.w	r3, [r7, r3, lsl #1]
 801ed10:	930c      	str	r3, [sp, #48]	@ 0x30
 801ed12:	9b0b      	ldr	r3, [sp, #44]	@ 0x2c
 801ed14:	9d0c      	ldr	r5, [sp, #48]	@ 0x30
 801ed16:	ea4f 4c03 	mov.w	ip, r3, lsl #16
 801ed1a:	f00c 6cfc 	and.w	ip, ip, #132120576	@ 0x7e00000
 801ed1e:	f423 63fc 	bic.w	r3, r3, #2016	@ 0x7e0
 801ed22:	ea4c 0c03 	orr.w	ip, ip, r3
 801ed26:	9b0c      	ldr	r3, [sp, #48]	@ 0x30
 801ed28:	041b      	lsls	r3, r3, #16
 801ed2a:	fb10 f201 	smulbb	r2, r0, r1
 801ed2e:	f003 63fc 	and.w	r3, r3, #132120576	@ 0x7e00000
 801ed32:	f425 65fc 	bic.w	r5, r5, #2016	@ 0x7e0
 801ed36:	10d2      	asrs	r2, r2, #3
 801ed38:	432b      	orrs	r3, r5
 801ed3a:	ebc2 0a40 	rsb	sl, r2, r0, lsl #1
 801ed3e:	4353      	muls	r3, r2
 801ed40:	fb0a 330c 	mla	r3, sl, ip, r3
 801ed44:	ea4f 4c0e 	mov.w	ip, lr, lsl #16
 801ed48:	f00c 6cfc 	and.w	ip, ip, #132120576	@ 0x7e00000
 801ed4c:	f42e 6efc 	bic.w	lr, lr, #2016	@ 0x7e0
 801ed50:	ea4c 0e0e 	orr.w	lr, ip, lr
 801ed54:	f1c1 0c10 	rsb	ip, r1, #16
 801ed58:	ebac 0c00 	sub.w	ip, ip, r0
 801ed5c:	eb02 0c4c 	add.w	ip, r2, ip, lsl #1
 801ed60:	fb0c 3c0e 	mla	ip, ip, lr, r3
 801ed64:	9b09      	ldr	r3, [sp, #36]	@ 0x24
 801ed66:	0418      	lsls	r0, r3, #16
 801ed68:	f000 60fc 	and.w	r0, r0, #132120576	@ 0x7e00000
 801ed6c:	f423 63fc 	bic.w	r3, r3, #2016	@ 0x7e0
 801ed70:	4318      	orrs	r0, r3
 801ed72:	ebc2 0241 	rsb	r2, r2, r1, lsl #1
 801ed76:	fb02 c200 	mla	r2, r2, r0, ip
 801ed7a:	0d53      	lsrs	r3, r2, #21
 801ed7c:	0952      	lsrs	r2, r2, #5
 801ed7e:	f403 63fc 	and.w	r3, r3, #2016	@ 0x7e0
 801ed82:	f422 62fc 	bic.w	r2, r2, #2016	@ 0x7e0
 801ed86:	431a      	orrs	r2, r3
 801ed88:	f8a8 2000 	strh.w	r2, [r8]
 801ed8c:	9b1f      	ldr	r3, [sp, #124]	@ 0x7c
 801ed8e:	441c      	add	r4, r3
 801ed90:	9b20      	ldr	r3, [sp, #128]	@ 0x80
 801ed92:	f108 0802 	add.w	r8, r8, #2
 801ed96:	441e      	add	r6, r3
 801ed98:	f10b 3bff 	add.w	fp, fp, #4294967295
 801ed9c:	e77c      	b.n	801ec98 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x92>
 801ed9e:	9b1f      	ldr	r3, [sp, #124]	@ 0x7c
 801eda0:	441c      	add	r4, r3
 801eda2:	9b20      	ldr	r3, [sp, #128]	@ 0x80
 801eda4:	441e      	add	r6, r3
 801eda6:	9b06      	ldr	r3, [sp, #24]
 801eda8:	3b01      	subs	r3, #1
 801edaa:	9306      	str	r3, [sp, #24]
 801edac:	f109 0902 	add.w	r9, r9, #2
 801edb0:	e752      	b.n	801ec58 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x52>
 801edb2:	d020      	beq.n	801edf6 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1f0>
 801edb4:	9b06      	ldr	r3, [sp, #24]
 801edb6:	981f      	ldr	r0, [sp, #124]	@ 0x7c
 801edb8:	3b01      	subs	r3, #1
 801edba:	fb00 4003 	mla	r0, r0, r3, r4
 801edbe:	1400      	asrs	r0, r0, #16
 801edc0:	f53f af67 	bmi.w	801ec92 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x8c>
 801edc4:	3901      	subs	r1, #1
 801edc6:	4288      	cmp	r0, r1
 801edc8:	f6bf af63 	bge.w	801ec92 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x8c>
 801edcc:	9920      	ldr	r1, [sp, #128]	@ 0x80
 801edce:	fb01 6303 	mla	r3, r1, r3, r6
 801edd2:	141b      	asrs	r3, r3, #16
 801edd4:	f53f af5d 	bmi.w	801ec92 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x8c>
 801edd8:	3a01      	subs	r2, #1
 801edda:	4293      	cmp	r3, r2
 801eddc:	f6bf af59 	bge.w	801ec92 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x8c>
 801ede0:	f8dd 8018 	ldr.w	r8, [sp, #24]
 801ede4:	46ca      	mov	sl, r9
 801ede6:	f1b8 0f00 	cmp.w	r8, #0
 801edea:	dc67      	bgt.n	801eebc <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2b6>
 801edec:	9b06      	ldr	r3, [sp, #24]
 801edee:	ea23 75e3 	bic.w	r5, r3, r3, asr #31
 801edf2:	eb09 0945 	add.w	r9, r9, r5, lsl #1
 801edf6:	9b08      	ldr	r3, [sp, #32]
 801edf8:	2b00      	cmp	r3, #0
 801edfa:	f340 80d7 	ble.w	801efac <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3a6>
 801edfe:	ee30 0a04 	vadd.f32	s0, s0, s8
 801ee02:	ee70 0aa4 	vadd.f32	s1, s1, s9
 801ee06:	eec6 7a80 	vdiv.f32	s15, s13, s0
 801ee0a:	9b1c      	ldr	r3, [sp, #112]	@ 0x70
 801ee0c:	ee31 1a05 	vadd.f32	s2, s2, s10
 801ee10:	ee20 7aa7 	vmul.f32	s14, s1, s15
 801ee14:	eeb0 6a62 	vmov.f32	s12, s5
 801ee18:	ee61 7a27 	vmul.f32	s15, s2, s15
 801ee1c:	eebe 6ac8 	vcvt.s32.f32	s12, s12, #16
 801ee20:	ee77 2a62 	vsub.f32	s5, s14, s5
 801ee24:	ee16 4a10 	vmov	r4, s12
 801ee28:	eefe 2ac8 	vcvt.s32.f32	s5, s5, #16
 801ee2c:	eeb0 6a43 	vmov.f32	s12, s6
 801ee30:	ee37 3ac3 	vsub.f32	s6, s15, s6
 801ee34:	ee12 2a90 	vmov	r2, s5
 801ee38:	eebe 3ac8 	vcvt.s32.f32	s6, s6, #16
 801ee3c:	fb92 f3f3 	sdiv	r3, r2, r3
 801ee40:	ee13 2a10 	vmov	r2, s6
 801ee44:	931f      	str	r3, [sp, #124]	@ 0x7c
 801ee46:	9b1c      	ldr	r3, [sp, #112]	@ 0x70
 801ee48:	fb92 f3f3 	sdiv	r3, r2, r3
 801ee4c:	9320      	str	r3, [sp, #128]	@ 0x80
 801ee4e:	9b08      	ldr	r3, [sp, #32]
 801ee50:	9a0f      	ldr	r2, [sp, #60]	@ 0x3c
 801ee52:	3b01      	subs	r3, #1
 801ee54:	eebe 6ac8 	vcvt.s32.f32	s12, s12, #16
 801ee58:	9308      	str	r3, [sp, #32]
 801ee5a:	9b1c      	ldr	r3, [sp, #112]	@ 0x70
 801ee5c:	bf08      	it	eq
 801ee5e:	4613      	moveq	r3, r2
 801ee60:	ee16 6a10 	vmov	r6, s12
 801ee64:	9306      	str	r3, [sp, #24]
 801ee66:	eeb0 3a67 	vmov.f32	s6, s15
 801ee6a:	eef0 2a47 	vmov.f32	s5, s14
 801ee6e:	e6e4      	b.n	801ec3a <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x34>
 801ee70:	2900      	cmp	r1, #0
 801ee72:	f43f af4e 	beq.w	801ed12 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x10c>
 801ee76:	f81a 3003 	ldrb.w	r3, [sl, r3]
 801ee7a:	f837 3013 	ldrh.w	r3, [r7, r3, lsl #1]
 801ee7e:	9309      	str	r3, [sp, #36]	@ 0x24
 801ee80:	e747      	b.n	801ed12 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x10c>
 801ee82:	f112 0a01 	adds.w	sl, r2, #1
 801ee86:	d481      	bmi.n	801ed8c <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x186>
 801ee88:	4553      	cmp	r3, sl
 801ee8a:	f6ff af7f 	blt.w	801ed8c <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x186>
 801ee8e:	f11c 0a01 	adds.w	sl, ip, #1
 801ee92:	f53f af7b 	bmi.w	801ed8c <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x186>
 801ee96:	45d6      	cmp	lr, sl
 801ee98:	f6ff af78 	blt.w	801ed8c <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x186>
 801ee9c:	e9cd 2c02 	strd	r2, ip, [sp, #8]
 801eea0:	b21b      	sxth	r3, r3
 801eea2:	fa0f f28e 	sxth.w	r2, lr
 801eea6:	e9cd 0104 	strd	r0, r1, [sp, #16]
 801eeaa:	9201      	str	r2, [sp, #4]
 801eeac:	9300      	str	r3, [sp, #0]
 801eeae:	9a07      	ldr	r2, [sp, #28]
 801eeb0:	9810      	ldr	r0, [sp, #64]	@ 0x40
 801eeb2:	463b      	mov	r3, r7
 801eeb4:	4641      	mov	r1, r8
 801eeb6:	f7ff fe21 	bl	801eafc <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh>
 801eeba:	e767      	b.n	801ed8c <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x186>
 801eebc:	9b24      	ldr	r3, [sp, #144]	@ 0x90
 801eebe:	9d07      	ldr	r5, [sp, #28]
 801eec0:	f9b3 3008 	ldrsh.w	r3, [r3, #8]
 801eec4:	1422      	asrs	r2, r4, #16
 801eec6:	1431      	asrs	r1, r6, #16
 801eec8:	fb03 2101 	mla	r1, r3, r1, r2
 801eecc:	9a07      	ldr	r2, [sp, #28]
 801eece:	440a      	add	r2, r1
 801eed0:	5c69      	ldrb	r1, [r5, r1]
 801eed2:	f3c4 3e03 	ubfx	lr, r4, #12, #4
 801eed6:	f3c6 3003 	ubfx	r0, r6, #12, #4
 801eeda:	f837 1011 	ldrh.w	r1, [r7, r1, lsl #1]
 801eede:	f1be 0f00 	cmp.w	lr, #0
 801eee2:	d05c      	beq.n	801ef9e <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x398>
 801eee4:	f892 c001 	ldrb.w	ip, [r2, #1]
 801eee8:	f837 501c 	ldrh.w	r5, [r7, ip, lsl #1]
 801eeec:	950d      	str	r5, [sp, #52]	@ 0x34
 801eeee:	b150      	cbz	r0, 801ef06 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x300>
 801eef0:	eb02 0c03 	add.w	ip, r2, r3
 801eef4:	5cd3      	ldrb	r3, [r2, r3]
 801eef6:	f837 3013 	ldrh.w	r3, [r7, r3, lsl #1]
 801eefa:	930a      	str	r3, [sp, #40]	@ 0x28
 801eefc:	f89c 3001 	ldrb.w	r3, [ip, #1]
 801ef00:	f837 3013 	ldrh.w	r3, [r7, r3, lsl #1]
 801ef04:	930e      	str	r3, [sp, #56]	@ 0x38
 801ef06:	9b0d      	ldr	r3, [sp, #52]	@ 0x34
 801ef08:	9d0e      	ldr	r5, [sp, #56]	@ 0x38
 801ef0a:	fb1e f200 	smulbb	r2, lr, r0
 801ef0e:	ea4f 4c03 	mov.w	ip, r3, lsl #16
 801ef12:	10d2      	asrs	r2, r2, #3
 801ef14:	f423 63fc 	bic.w	r3, r3, #2016	@ 0x7e0
 801ef18:	f00c 6cfc 	and.w	ip, ip, #132120576	@ 0x7e00000
 801ef1c:	ea4c 0c03 	orr.w	ip, ip, r3
 801ef20:	ebc2 034e 	rsb	r3, r2, lr, lsl #1
 801ef24:	9311      	str	r3, [sp, #68]	@ 0x44
 801ef26:	9b0e      	ldr	r3, [sp, #56]	@ 0x38
 801ef28:	041b      	lsls	r3, r3, #16
 801ef2a:	f425 6bfc 	bic.w	fp, r5, #2016	@ 0x7e0
 801ef2e:	f003 63fc 	and.w	r3, r3, #132120576	@ 0x7e00000
 801ef32:	ea43 030b 	orr.w	r3, r3, fp
 801ef36:	9d11      	ldr	r5, [sp, #68]	@ 0x44
 801ef38:	4353      	muls	r3, r2
 801ef3a:	ea4f 4b01 	mov.w	fp, r1, lsl #16
 801ef3e:	fb05 3c0c 	mla	ip, r5, ip, r3
 801ef42:	f421 61fc 	bic.w	r1, r1, #2016	@ 0x7e0
 801ef46:	f00b 63fc 	and.w	r3, fp, #132120576	@ 0x7e00000
 801ef4a:	ea43 0b01 	orr.w	fp, r3, r1
 801ef4e:	f1c0 0110 	rsb	r1, r0, #16
 801ef52:	9b0a      	ldr	r3, [sp, #40]	@ 0x28
 801ef54:	eba1 0e0e 	sub.w	lr, r1, lr
 801ef58:	eb02 0e4e 	add.w	lr, r2, lr, lsl #1
 801ef5c:	fb0e cc0b 	mla	ip, lr, fp, ip
 801ef60:	ea4f 4b03 	mov.w	fp, r3, lsl #16
 801ef64:	f423 6efc 	bic.w	lr, r3, #2016	@ 0x7e0
 801ef68:	f00b 6bfc 	and.w	fp, fp, #132120576	@ 0x7e00000
 801ef6c:	ea4b 0e0e 	orr.w	lr, fp, lr
 801ef70:	ebc2 0240 	rsb	r2, r2, r0, lsl #1
 801ef74:	fb02 cc0e 	mla	ip, r2, lr, ip
 801ef78:	ea4f 535c 	mov.w	r3, ip, lsr #21
 801ef7c:	ea4f 1c5c 	mov.w	ip, ip, lsr #5
 801ef80:	f403 63fc 	and.w	r3, r3, #2016	@ 0x7e0
 801ef84:	f42c 6cfc 	bic.w	ip, ip, #2016	@ 0x7e0
 801ef88:	ea43 0c0c 	orr.w	ip, r3, ip
 801ef8c:	9b1f      	ldr	r3, [sp, #124]	@ 0x7c
 801ef8e:	f82a cb02 	strh.w	ip, [sl], #2
 801ef92:	441c      	add	r4, r3
 801ef94:	9b20      	ldr	r3, [sp, #128]	@ 0x80
 801ef96:	f108 38ff 	add.w	r8, r8, #4294967295
 801ef9a:	441e      	add	r6, r3
 801ef9c:	e723      	b.n	801ede6 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1e0>
 801ef9e:	2800      	cmp	r0, #0
 801efa0:	d0b1      	beq.n	801ef06 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x300>
 801efa2:	5cd3      	ldrb	r3, [r2, r3]
 801efa4:	f837 3013 	ldrh.w	r3, [r7, r3, lsl #1]
 801efa8:	930a      	str	r3, [sp, #40]	@ 0x28
 801efaa:	e7ac      	b.n	801ef06 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x300>
 801efac:	b013      	add	sp, #76	@ 0x4c
 801efae:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}

0801efb2 <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhS4_ssiihhh>:
 801efb2:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 801efb6:	880d      	ldrh	r5, [r1, #0]
 801efb8:	b087      	sub	sp, #28
 801efba:	10ef      	asrs	r7, r5, #3
 801efbc:	ea4f 2a25 	mov.w	sl, r5, asr #8
 801efc0:	f007 07fc 	and.w	r7, r7, #252	@ 0xfc
 801efc4:	00ed      	lsls	r5, r5, #3
 801efc6:	9701      	str	r7, [sp, #4]
 801efc8:	b2ed      	uxtb	r5, r5
 801efca:	9502      	str	r5, [sp, #8]
 801efcc:	9d01      	ldr	r5, [sp, #4]
 801efce:	9103      	str	r1, [sp, #12]
 801efd0:	e9dd 0612 	ldrd	r0, r6, [sp, #72]	@ 0x48
 801efd4:	f9bd 9040 	ldrsh.w	r9, [sp, #64]	@ 0x40
 801efd8:	9902      	ldr	r1, [sp, #8]
 801efda:	f9bd b044 	ldrsh.w	fp, [sp, #68]	@ 0x44
 801efde:	f89d 4050 	ldrb.w	r4, [sp, #80]	@ 0x50
 801efe2:	f89d e054 	ldrb.w	lr, [sp, #84]	@ 0x54
 801efe6:	f89d 8058 	ldrb.w	r8, [sp, #88]	@ 0x58
 801efea:	f00a 0af8 	and.w	sl, sl, #248	@ 0xf8
 801efee:	022d      	lsls	r5, r5, #8
 801eff0:	ea45 450a 	orr.w	r5, r5, sl, lsl #16
 801eff4:	fb06 0709 	mla	r7, r6, r9, r0
 801eff8:	430d      	orrs	r5, r1
 801effa:	2e00      	cmp	r6, #0
 801effc:	eb02 0c07 	add.w	ip, r2, r7
 801f000:	9505      	str	r5, [sp, #20]
 801f002:	f2c0 80b6 	blt.w	801f172 <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhS4_ssiihhh+0x1c0>
 801f006:	45b3      	cmp	fp, r6
 801f008:	f340 80b3 	ble.w	801f172 <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhS4_ssiihhh+0x1c0>
 801f00c:	2800      	cmp	r0, #0
 801f00e:	f2c0 80ae 	blt.w	801f16e <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhS4_ssiihhh+0x1bc>
 801f012:	4581      	cmp	r9, r0
 801f014:	f340 80ab 	ble.w	801f16e <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhS4_ssiihhh+0x1bc>
 801f018:	5dd7      	ldrb	r7, [r2, r7]
 801f01a:	eb07 0747 	add.w	r7, r7, r7, lsl #1
 801f01e:	441f      	add	r7, r3
 801f020:	1c42      	adds	r2, r0, #1
 801f022:	f100 80a9 	bmi.w	801f178 <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhS4_ssiihhh+0x1c6>
 801f026:	4591      	cmp	r9, r2
 801f028:	f340 80a6 	ble.w	801f178 <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhS4_ssiihhh+0x1c6>
 801f02c:	2c00      	cmp	r4, #0
 801f02e:	f000 80a3 	beq.w	801f178 <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhS4_ssiihhh+0x1c6>
 801f032:	f89c 5001 	ldrb.w	r5, [ip, #1]
 801f036:	eb05 0545 	add.w	r5, r5, r5, lsl #1
 801f03a:	441d      	add	r5, r3
 801f03c:	3601      	adds	r6, #1
 801f03e:	f100 809f 	bmi.w	801f180 <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhS4_ssiihhh+0x1ce>
 801f042:	45b3      	cmp	fp, r6
 801f044:	f340 809c 	ble.w	801f180 <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhS4_ssiihhh+0x1ce>
 801f048:	f1be 0f00 	cmp.w	lr, #0
 801f04c:	f000 8098 	beq.w	801f180 <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhS4_ssiihhh+0x1ce>
 801f050:	2800      	cmp	r0, #0
 801f052:	f2c0 8093 	blt.w	801f17c <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhS4_ssiihhh+0x1ca>
 801f056:	4581      	cmp	r9, r0
 801f058:	f340 8090 	ble.w	801f17c <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhS4_ssiihhh+0x1ca>
 801f05c:	f81c 6009 	ldrb.w	r6, [ip, r9]
 801f060:	eb06 0646 	add.w	r6, r6, r6, lsl #1
 801f064:	441e      	add	r6, r3
 801f066:	3001      	adds	r0, #1
 801f068:	f100 808d 	bmi.w	801f186 <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhS4_ssiihhh+0x1d4>
 801f06c:	4581      	cmp	r9, r0
 801f06e:	f340 808a 	ble.w	801f186 <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhS4_ssiihhh+0x1d4>
 801f072:	2c00      	cmp	r4, #0
 801f074:	f000 8087 	beq.w	801f186 <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhS4_ssiihhh+0x1d4>
 801f078:	44e1      	add	r9, ip
 801f07a:	f899 2001 	ldrb.w	r2, [r9, #1]
 801f07e:	eb02 0242 	add.w	r2, r2, r2, lsl #1
 801f082:	4413      	add	r3, r2
 801f084:	b2a4      	uxth	r4, r4
 801f086:	fa1f fe8e 	uxth.w	lr, lr
 801f08a:	fb04 fb0e 	mul.w	fp, r4, lr
 801f08e:	0124      	lsls	r4, r4, #4
 801f090:	ebcb 1e0e 	rsb	lr, fp, lr, lsl #4
 801f094:	f5c4 7980 	rsb	r9, r4, #256	@ 0x100
 801f098:	eba4 040b 	sub.w	r4, r4, fp
 801f09c:	fa1f f08e 	uxth.w	r0, lr
 801f0a0:	b2a2      	uxth	r2, r4
 801f0a2:	78ac      	ldrb	r4, [r5, #2]
 801f0a4:	f897 c002 	ldrb.w	ip, [r7, #2]
 801f0a8:	9901      	ldr	r1, [sp, #4]
 801f0aa:	eba9 0900 	sub.w	r9, r9, r0
 801f0ae:	fa1f f989 	uxth.w	r9, r9
 801f0b2:	4354      	muls	r4, r2
 801f0b4:	fb09 440c 	mla	r4, r9, ip, r4
 801f0b8:	f896 c002 	ldrb.w	ip, [r6, #2]
 801f0bc:	fb00 440c 	mla	r4, r0, ip, r4
 801f0c0:	f893 c002 	ldrb.w	ip, [r3, #2]
 801f0c4:	fa1f fe88 	uxth.w	lr, r8
 801f0c8:	ea6f 0808 	mvn.w	r8, r8
 801f0cc:	fa5f f888 	uxtb.w	r8, r8
 801f0d0:	fb0b 4c0c 	mla	ip, fp, ip, r4
 801f0d4:	fb1a fa08 	smulbb	sl, sl, r8
 801f0d8:	f3cc 2c07 	ubfx	ip, ip, #8, #8
 801f0dc:	fb0c ac0e 	mla	ip, ip, lr, sl
 801f0e0:	f895 a001 	ldrb.w	sl, [r5, #1]
 801f0e4:	787c      	ldrb	r4, [r7, #1]
 801f0e6:	782d      	ldrb	r5, [r5, #0]
 801f0e8:	783f      	ldrb	r7, [r7, #0]
 801f0ea:	fb02 fa0a 	mul.w	sl, r2, sl
 801f0ee:	fb09 aa04 	mla	sl, r9, r4, sl
 801f0f2:	7874      	ldrb	r4, [r6, #1]
 801f0f4:	436a      	muls	r2, r5
 801f0f6:	7835      	ldrb	r5, [r6, #0]
 801f0f8:	fb00 aa04 	mla	sl, r0, r4, sl
 801f0fc:	fb09 2207 	mla	r2, r9, r7, r2
 801f100:	785c      	ldrb	r4, [r3, #1]
 801f102:	781b      	ldrb	r3, [r3, #0]
 801f104:	fb00 2005 	mla	r0, r0, r5, r2
 801f108:	fb0b a404 	mla	r4, fp, r4, sl
 801f10c:	fb0b 0b03 	mla	fp, fp, r3, r0
 801f110:	9b02      	ldr	r3, [sp, #8]
 801f112:	fb11 fa08 	smulbb	sl, r1, r8
 801f116:	fa1f fc8c 	uxth.w	ip, ip
 801f11a:	fb13 f808 	smulbb	r8, r3, r8
 801f11e:	f3cb 2b07 	ubfx	fp, fp, #8, #8
 801f122:	f3c4 2407 	ubfx	r4, r4, #8, #8
 801f126:	fb04 a40e 	mla	r4, r4, lr, sl
 801f12a:	f10c 0301 	add.w	r3, ip, #1
 801f12e:	fb0b 8e0e 	mla	lr, fp, lr, r8
 801f132:	fa1f fe8e 	uxth.w	lr, lr
 801f136:	b2a4      	uxth	r4, r4
 801f138:	eb03 2c1c 	add.w	ip, r3, ip, lsr #8
 801f13c:	f40c 4378 	and.w	r3, ip, #63488	@ 0xf800
 801f140:	f104 0a01 	add.w	sl, r4, #1
 801f144:	f10e 0c01 	add.w	ip, lr, #1
 801f148:	eb0c 2c1e 	add.w	ip, ip, lr, lsr #8
 801f14c:	eb0a 2414 	add.w	r4, sl, r4, lsr #8
 801f150:	f3cc 2cc4 	ubfx	ip, ip, #11, #5
 801f154:	0964      	lsrs	r4, r4, #5
 801f156:	ea4c 0c03 	orr.w	ip, ip, r3
 801f15a:	f404 64fc 	and.w	r4, r4, #2016	@ 0x7e0
 801f15e:	9b03      	ldr	r3, [sp, #12]
 801f160:	ea4c 0c04 	orr.w	ip, ip, r4
 801f164:	f8a3 c000 	strh.w	ip, [r3]
 801f168:	b007      	add	sp, #28
 801f16a:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 801f16e:	af05      	add	r7, sp, #20
 801f170:	e756      	b.n	801f020 <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhS4_ssiihhh+0x6e>
 801f172:	ad05      	add	r5, sp, #20
 801f174:	462f      	mov	r7, r5
 801f176:	e761      	b.n	801f03c <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhS4_ssiihhh+0x8a>
 801f178:	ad05      	add	r5, sp, #20
 801f17a:	e75f      	b.n	801f03c <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhS4_ssiihhh+0x8a>
 801f17c:	ae05      	add	r6, sp, #20
 801f17e:	e772      	b.n	801f066 <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhS4_ssiihhh+0xb4>
 801f180:	ab05      	add	r3, sp, #20
 801f182:	461e      	mov	r6, r3
 801f184:	e77e      	b.n	801f084 <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhS4_ssiihhh+0xd2>
 801f186:	ab05      	add	r3, sp, #20
 801f188:	e77c      	b.n	801f084 <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhS4_ssiihhh+0xd2>

0801f18a <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff>:
 801f18a:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 801f18e:	b095      	sub	sp, #84	@ 0x54
 801f190:	9212      	str	r2, [sp, #72]	@ 0x48
 801f192:	9309      	str	r3, [sp, #36]	@ 0x24
 801f194:	9a23      	ldr	r2, [sp, #140]	@ 0x8c
 801f196:	f89d 309c 	ldrb.w	r3, [sp, #156]	@ 0x9c
 801f19a:	930f      	str	r3, [sp, #60]	@ 0x3c
 801f19c:	910e      	str	r1, [sp, #56]	@ 0x38
 801f19e:	e9dd 1324 	ldrd	r1, r3, [sp, #144]	@ 0x90
 801f1a2:	9013      	str	r0, [sp, #76]	@ 0x4c
 801f1a4:	6850      	ldr	r0, [r2, #4]
 801f1a6:	6812      	ldr	r2, [r2, #0]
 801f1a8:	fb00 1303 	mla	r3, r0, r3, r1
 801f1ac:	eb02 0343 	add.w	r3, r2, r3, lsl #1
 801f1b0:	930a      	str	r3, [sp, #40]	@ 0x28
 801f1b2:	9b26      	ldr	r3, [sp, #152]	@ 0x98
 801f1b4:	681b      	ldr	r3, [r3, #0]
 801f1b6:	930d      	str	r3, [sp, #52]	@ 0x34
 801f1b8:	9b26      	ldr	r3, [sp, #152]	@ 0x98
 801f1ba:	685c      	ldr	r4, [r3, #4]
 801f1bc:	9b0f      	ldr	r3, [sp, #60]	@ 0x3c
 801f1be:	43db      	mvns	r3, r3
 801f1c0:	b2db      	uxtb	r3, r3
 801f1c2:	3404      	adds	r4, #4
 801f1c4:	930b      	str	r3, [sp, #44]	@ 0x2c
 801f1c6:	9b0e      	ldr	r3, [sp, #56]	@ 0x38
 801f1c8:	2b00      	cmp	r3, #0
 801f1ca:	dc03      	bgt.n	801f1d4 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x4a>
 801f1cc:	9b12      	ldr	r3, [sp, #72]	@ 0x48
 801f1ce:	2b00      	cmp	r3, #0
 801f1d0:	f340 8255 	ble.w	801f67e <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x4f4>
 801f1d4:	9b26      	ldr	r3, [sp, #152]	@ 0x98
 801f1d6:	f9b3 1008 	ldrsh.w	r1, [r3, #8]
 801f1da:	f9b3 200c 	ldrsh.w	r2, [r3, #12]
 801f1de:	1e48      	subs	r0, r1, #1
 801f1e0:	1e55      	subs	r5, r2, #1
 801f1e2:	9b09      	ldr	r3, [sp, #36]	@ 0x24
 801f1e4:	2b00      	cmp	r3, #0
 801f1e6:	f340 80f9 	ble.w	801f3dc <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x252>
 801f1ea:	9e1f      	ldr	r6, [sp, #124]	@ 0x7c
 801f1ec:	9b20      	ldr	r3, [sp, #128]	@ 0x80
 801f1ee:	1436      	asrs	r6, r6, #16
 801f1f0:	ea4f 4323 	mov.w	r3, r3, asr #16
 801f1f4:	d406      	bmi.n	801f204 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x7a>
 801f1f6:	4286      	cmp	r6, r0
 801f1f8:	da04      	bge.n	801f204 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x7a>
 801f1fa:	2b00      	cmp	r3, #0
 801f1fc:	db02      	blt.n	801f204 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x7a>
 801f1fe:	42ab      	cmp	r3, r5
 801f200:	f2c0 80ed 	blt.w	801f3de <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x254>
 801f204:	3601      	adds	r6, #1
 801f206:	f100 80da 	bmi.w	801f3be <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x234>
 801f20a:	42b1      	cmp	r1, r6
 801f20c:	f2c0 80d7 	blt.w	801f3be <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x234>
 801f210:	3301      	adds	r3, #1
 801f212:	f100 80d4 	bmi.w	801f3be <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x234>
 801f216:	429a      	cmp	r2, r3
 801f218:	f2c0 80d1 	blt.w	801f3be <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x234>
 801f21c:	9b09      	ldr	r3, [sp, #36]	@ 0x24
 801f21e:	9311      	str	r3, [sp, #68]	@ 0x44
 801f220:	9b0a      	ldr	r3, [sp, #40]	@ 0x28
 801f222:	930c      	str	r3, [sp, #48]	@ 0x30
 801f224:	9b11      	ldr	r3, [sp, #68]	@ 0x44
 801f226:	2b00      	cmp	r3, #0
 801f228:	f340 80fa 	ble.w	801f420 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x296>
 801f22c:	9826      	ldr	r0, [sp, #152]	@ 0x98
 801f22e:	9b20      	ldr	r3, [sp, #128]	@ 0x80
 801f230:	9a20      	ldr	r2, [sp, #128]	@ 0x80
 801f232:	68c6      	ldr	r6, [r0, #12]
 801f234:	981f      	ldr	r0, [sp, #124]	@ 0x7c
 801f236:	141d      	asrs	r5, r3, #16
 801f238:	f3c2 3103 	ubfx	r1, r2, #12, #4
 801f23c:	9b1f      	ldr	r3, [sp, #124]	@ 0x7c
 801f23e:	9a26      	ldr	r2, [sp, #152]	@ 0x98
 801f240:	1400      	asrs	r0, r0, #16
 801f242:	f3c3 3303 	ubfx	r3, r3, #12, #4
 801f246:	6892      	ldr	r2, [r2, #8]
 801f248:	f100 813e 	bmi.w	801f4c8 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x33e>
 801f24c:	1e57      	subs	r7, r2, #1
 801f24e:	42b8      	cmp	r0, r7
 801f250:	f280 813a 	bge.w	801f4c8 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x33e>
 801f254:	2d00      	cmp	r5, #0
 801f256:	f2c0 8137 	blt.w	801f4c8 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x33e>
 801f25a:	1e77      	subs	r7, r6, #1
 801f25c:	42bd      	cmp	r5, r7
 801f25e:	f280 8133 	bge.w	801f4c8 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x33e>
 801f262:	b212      	sxth	r2, r2
 801f264:	fb05 0002 	mla	r0, r5, r2, r0
 801f268:	9d0d      	ldr	r5, [sp, #52]	@ 0x34
 801f26a:	f815 a000 	ldrb.w	sl, [r5, r0]
 801f26e:	eb0a 0a4a 	add.w	sl, sl, sl, lsl #1
 801f272:	182e      	adds	r6, r5, r0
 801f274:	eb04 050a 	add.w	r5, r4, sl
 801f278:	2b00      	cmp	r3, #0
 801f27a:	f000 8117 	beq.w	801f4ac <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x322>
 801f27e:	f896 c001 	ldrb.w	ip, [r6, #1]
 801f282:	eb0c 0c4c 	add.w	ip, ip, ip, lsl #1
 801f286:	44a4      	add	ip, r4
 801f288:	2900      	cmp	r1, #0
 801f28a:	f000 8117 	beq.w	801f4bc <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x332>
 801f28e:	18b0      	adds	r0, r6, r2
 801f290:	5cb2      	ldrb	r2, [r6, r2]
 801f292:	7840      	ldrb	r0, [r0, #1]
 801f294:	eb02 0242 	add.w	r2, r2, r2, lsl #1
 801f298:	eb00 0040 	add.w	r0, r0, r0, lsl #1
 801f29c:	4422      	add	r2, r4
 801f29e:	4420      	add	r0, r4
 801f2a0:	b29b      	uxth	r3, r3
 801f2a2:	b289      	uxth	r1, r1
 801f2a4:	fb03 f901 	mul.w	r9, r3, r1
 801f2a8:	ebc9 1101 	rsb	r1, r9, r1, lsl #4
 801f2ac:	011b      	lsls	r3, r3, #4
 801f2ae:	b289      	uxth	r1, r1
 801f2b0:	f89c 7002 	ldrb.w	r7, [ip, #2]
 801f2b4:	f895 b002 	ldrb.w	fp, [r5, #2]
 801f2b8:	9e0c      	ldr	r6, [sp, #48]	@ 0x30
 801f2ba:	f814 a00a 	ldrb.w	sl, [r4, sl]
 801f2be:	f8b6 e000 	ldrh.w	lr, [r6]
 801f2c2:	f8bd 603c 	ldrh.w	r6, [sp, #60]	@ 0x3c
 801f2c6:	f5c3 7880 	rsb	r8, r3, #256	@ 0x100
 801f2ca:	eba3 0309 	sub.w	r3, r3, r9
 801f2ce:	b29b      	uxth	r3, r3
 801f2d0:	eba8 0801 	sub.w	r8, r8, r1
 801f2d4:	fa1f f888 	uxth.w	r8, r8
 801f2d8:	435f      	muls	r7, r3
 801f2da:	fb08 770b 	mla	r7, r8, fp, r7
 801f2de:	f892 b002 	ldrb.w	fp, [r2, #2]
 801f2e2:	9310      	str	r3, [sp, #64]	@ 0x40
 801f2e4:	fb01 770b 	mla	r7, r1, fp, r7
 801f2e8:	f890 b002 	ldrb.w	fp, [r0, #2]
 801f2ec:	9b0b      	ldr	r3, [sp, #44]	@ 0x2c
 801f2ee:	fb09 770b 	mla	r7, r9, fp, r7
 801f2f2:	ea4f 2b2e 	mov.w	fp, lr, asr #8
 801f2f6:	f00b 0bf8 	and.w	fp, fp, #248	@ 0xf8
 801f2fa:	fb1b fb03 	smulbb	fp, fp, r3
 801f2fe:	f3c7 2707 	ubfx	r7, r7, #8, #8
 801f302:	fb07 b706 	mla	r7, r7, r6, fp
 801f306:	9b10      	ldr	r3, [sp, #64]	@ 0x40
 801f308:	f895 b001 	ldrb.w	fp, [r5, #1]
 801f30c:	f89c 5001 	ldrb.w	r5, [ip, #1]
 801f310:	f89c c000 	ldrb.w	ip, [ip]
 801f314:	435d      	muls	r5, r3
 801f316:	fb08 550b 	mla	r5, r8, fp, r5
 801f31a:	f892 b001 	ldrb.w	fp, [r2, #1]
 801f31e:	9b0b      	ldr	r3, [sp, #44]	@ 0x2c
 801f320:	fb01 550b 	mla	r5, r1, fp, r5
 801f324:	f890 b001 	ldrb.w	fp, [r0, #1]
 801f328:	fb09 550b 	mla	r5, r9, fp, r5
 801f32c:	ea4f 0bee 	mov.w	fp, lr, asr #3
 801f330:	f00b 0bfc 	and.w	fp, fp, #252	@ 0xfc
 801f334:	fb1b fb03 	smulbb	fp, fp, r3
 801f338:	9b10      	ldr	r3, [sp, #64]	@ 0x40
 801f33a:	fb03 f30c 	mul.w	r3, r3, ip
 801f33e:	f892 c000 	ldrb.w	ip, [r2]
 801f342:	fb08 330a 	mla	r3, r8, sl, r3
 801f346:	fb01 330c 	mla	r3, r1, ip, r3
 801f34a:	f890 c000 	ldrb.w	ip, [r0]
 801f34e:	ea4f 0ece 	mov.w	lr, lr, lsl #3
 801f352:	fb09 3c0c 	mla	ip, r9, ip, r3
 801f356:	9b0b      	ldr	r3, [sp, #44]	@ 0x2c
 801f358:	fa5f fe8e 	uxtb.w	lr, lr
 801f35c:	b2bf      	uxth	r7, r7
 801f35e:	fb1e fe03 	smulbb	lr, lr, r3
 801f362:	f3c5 2507 	ubfx	r5, r5, #8, #8
 801f366:	f3cc 2c07 	ubfx	ip, ip, #8, #8
 801f36a:	fb05 b506 	mla	r5, r5, r6, fp
 801f36e:	1c7b      	adds	r3, r7, #1
 801f370:	fb0c e606 	mla	r6, ip, r6, lr
 801f374:	b2ad      	uxth	r5, r5
 801f376:	b2b6      	uxth	r6, r6
 801f378:	eb03 2717 	add.w	r7, r3, r7, lsr #8
 801f37c:	f407 4378 	and.w	r3, r7, #63488	@ 0xf800
 801f380:	f105 0b01 	add.w	fp, r5, #1
 801f384:	1c77      	adds	r7, r6, #1
 801f386:	eb07 2716 	add.w	r7, r7, r6, lsr #8
 801f38a:	eb0b 2515 	add.w	r5, fp, r5, lsr #8
 801f38e:	f3c7 27c4 	ubfx	r7, r7, #11, #5
 801f392:	096d      	lsrs	r5, r5, #5
 801f394:	431f      	orrs	r7, r3
 801f396:	f405 65fc 	and.w	r5, r5, #2016	@ 0x7e0
 801f39a:	9b0c      	ldr	r3, [sp, #48]	@ 0x30
 801f39c:	433d      	orrs	r5, r7
 801f39e:	801d      	strh	r5, [r3, #0]
 801f3a0:	9b0c      	ldr	r3, [sp, #48]	@ 0x30
 801f3a2:	9a21      	ldr	r2, [sp, #132]	@ 0x84
 801f3a4:	3302      	adds	r3, #2
 801f3a6:	930c      	str	r3, [sp, #48]	@ 0x30
 801f3a8:	9b1f      	ldr	r3, [sp, #124]	@ 0x7c
 801f3aa:	4413      	add	r3, r2
 801f3ac:	931f      	str	r3, [sp, #124]	@ 0x7c
 801f3ae:	9a22      	ldr	r2, [sp, #136]	@ 0x88
 801f3b0:	9b20      	ldr	r3, [sp, #128]	@ 0x80
 801f3b2:	4413      	add	r3, r2
 801f3b4:	9320      	str	r3, [sp, #128]	@ 0x80
 801f3b6:	9b11      	ldr	r3, [sp, #68]	@ 0x44
 801f3b8:	3b01      	subs	r3, #1
 801f3ba:	9311      	str	r3, [sp, #68]	@ 0x44
 801f3bc:	e732      	b.n	801f224 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x9a>
 801f3be:	9b1f      	ldr	r3, [sp, #124]	@ 0x7c
 801f3c0:	9e21      	ldr	r6, [sp, #132]	@ 0x84
 801f3c2:	4433      	add	r3, r6
 801f3c4:	931f      	str	r3, [sp, #124]	@ 0x7c
 801f3c6:	9e22      	ldr	r6, [sp, #136]	@ 0x88
 801f3c8:	9b20      	ldr	r3, [sp, #128]	@ 0x80
 801f3ca:	4433      	add	r3, r6
 801f3cc:	9320      	str	r3, [sp, #128]	@ 0x80
 801f3ce:	9b09      	ldr	r3, [sp, #36]	@ 0x24
 801f3d0:	3b01      	subs	r3, #1
 801f3d2:	9309      	str	r3, [sp, #36]	@ 0x24
 801f3d4:	9b0a      	ldr	r3, [sp, #40]	@ 0x28
 801f3d6:	3302      	adds	r3, #2
 801f3d8:	930a      	str	r3, [sp, #40]	@ 0x28
 801f3da:	e702      	b.n	801f1e2 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x58>
 801f3dc:	d027      	beq.n	801f42e <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2a4>
 801f3de:	9b09      	ldr	r3, [sp, #36]	@ 0x24
 801f3e0:	9821      	ldr	r0, [sp, #132]	@ 0x84
 801f3e2:	9d1f      	ldr	r5, [sp, #124]	@ 0x7c
 801f3e4:	3b01      	subs	r3, #1
 801f3e6:	fb00 5003 	mla	r0, r0, r3, r5
 801f3ea:	1400      	asrs	r0, r0, #16
 801f3ec:	f53f af16 	bmi.w	801f21c <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x92>
 801f3f0:	3901      	subs	r1, #1
 801f3f2:	4288      	cmp	r0, r1
 801f3f4:	f6bf af12 	bge.w	801f21c <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x92>
 801f3f8:	9922      	ldr	r1, [sp, #136]	@ 0x88
 801f3fa:	9820      	ldr	r0, [sp, #128]	@ 0x80
 801f3fc:	fb01 0303 	mla	r3, r1, r3, r0
 801f400:	141b      	asrs	r3, r3, #16
 801f402:	f53f af0b 	bmi.w	801f21c <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x92>
 801f406:	3a01      	subs	r2, #1
 801f408:	4293      	cmp	r3, r2
 801f40a:	f6bf af07 	bge.w	801f21c <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x92>
 801f40e:	9b09      	ldr	r3, [sp, #36]	@ 0x24
 801f410:	9311      	str	r3, [sp, #68]	@ 0x44
 801f412:	f8bd a03c 	ldrh.w	sl, [sp, #60]	@ 0x3c
 801f416:	9b0a      	ldr	r3, [sp, #40]	@ 0x28
 801f418:	930c      	str	r3, [sp, #48]	@ 0x30
 801f41a:	9b11      	ldr	r3, [sp, #68]	@ 0x44
 801f41c:	2b00      	cmp	r3, #0
 801f41e:	dc70      	bgt.n	801f502 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x378>
 801f420:	9b09      	ldr	r3, [sp, #36]	@ 0x24
 801f422:	9a0a      	ldr	r2, [sp, #40]	@ 0x28
 801f424:	ea23 73e3 	bic.w	r3, r3, r3, asr #31
 801f428:	eb02 0343 	add.w	r3, r2, r3, lsl #1
 801f42c:	930a      	str	r3, [sp, #40]	@ 0x28
 801f42e:	9b0e      	ldr	r3, [sp, #56]	@ 0x38
 801f430:	2b00      	cmp	r3, #0
 801f432:	f340 8124 	ble.w	801f67e <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x4f4>
 801f436:	ee30 0a04 	vadd.f32	s0, s0, s8
 801f43a:	eeb7 7a00 	vmov.f32	s14, #112	@ 0x3f800000  1.0
 801f43e:	eec7 7a00 	vdiv.f32	s15, s14, s0
 801f442:	9b1e      	ldr	r3, [sp, #120]	@ 0x78
 801f444:	ee70 0aa4 	vadd.f32	s1, s1, s9
 801f448:	ee31 1a05 	vadd.f32	s2, s2, s10
 801f44c:	ee20 7aa7 	vmul.f32	s14, s1, s15
 801f450:	eef0 6a62 	vmov.f32	s13, s5
 801f454:	ee61 7a27 	vmul.f32	s15, s2, s15
 801f458:	eefe 6ac8 	vcvt.s32.f32	s13, s13, #16
 801f45c:	ee77 2a62 	vsub.f32	s5, s14, s5
 801f460:	edcd 6a1f 	vstr	s13, [sp, #124]	@ 0x7c
 801f464:	eefe 2ac8 	vcvt.s32.f32	s5, s5, #16
 801f468:	eef0 6a43 	vmov.f32	s13, s6
 801f46c:	ee37 3ac3 	vsub.f32	s6, s15, s6
 801f470:	ee12 2a90 	vmov	r2, s5
 801f474:	eebe 3ac8 	vcvt.s32.f32	s6, s6, #16
 801f478:	fb92 f3f3 	sdiv	r3, r2, r3
 801f47c:	ee13 2a10 	vmov	r2, s6
 801f480:	9321      	str	r3, [sp, #132]	@ 0x84
 801f482:	9b1e      	ldr	r3, [sp, #120]	@ 0x78
 801f484:	fb92 f3f3 	sdiv	r3, r2, r3
 801f488:	9322      	str	r3, [sp, #136]	@ 0x88
 801f48a:	9b0e      	ldr	r3, [sp, #56]	@ 0x38
 801f48c:	9a12      	ldr	r2, [sp, #72]	@ 0x48
 801f48e:	3b01      	subs	r3, #1
 801f490:	eefe 6ac8 	vcvt.s32.f32	s13, s13, #16
 801f494:	930e      	str	r3, [sp, #56]	@ 0x38
 801f496:	9b1e      	ldr	r3, [sp, #120]	@ 0x78
 801f498:	edcd 6a20 	vstr	s13, [sp, #128]	@ 0x80
 801f49c:	bf08      	it	eq
 801f49e:	4613      	moveq	r3, r2
 801f4a0:	9309      	str	r3, [sp, #36]	@ 0x24
 801f4a2:	eeb0 3a67 	vmov.f32	s6, s15
 801f4a6:	eef0 2a47 	vmov.f32	s5, s14
 801f4aa:	e68c      	b.n	801f1c6 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3c>
 801f4ac:	b149      	cbz	r1, 801f4c2 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x338>
 801f4ae:	5cb2      	ldrb	r2, [r6, r2]
 801f4b0:	eb02 0242 	add.w	r2, r2, r2, lsl #1
 801f4b4:	4422      	add	r2, r4
 801f4b6:	4628      	mov	r0, r5
 801f4b8:	46ac      	mov	ip, r5
 801f4ba:	e6f1      	b.n	801f2a0 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x116>
 801f4bc:	4628      	mov	r0, r5
 801f4be:	462a      	mov	r2, r5
 801f4c0:	e6ee      	b.n	801f2a0 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x116>
 801f4c2:	4628      	mov	r0, r5
 801f4c4:	462a      	mov	r2, r5
 801f4c6:	e7f7      	b.n	801f4b8 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x32e>
 801f4c8:	1c47      	adds	r7, r0, #1
 801f4ca:	f53f af69 	bmi.w	801f3a0 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x216>
 801f4ce:	42ba      	cmp	r2, r7
 801f4d0:	f6ff af66 	blt.w	801f3a0 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x216>
 801f4d4:	1c6f      	adds	r7, r5, #1
 801f4d6:	f53f af63 	bmi.w	801f3a0 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x216>
 801f4da:	42be      	cmp	r6, r7
 801f4dc:	f6ff af60 	blt.w	801f3a0 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x216>
 801f4e0:	9f0f      	ldr	r7, [sp, #60]	@ 0x3c
 801f4e2:	9002      	str	r0, [sp, #8]
 801f4e4:	b236      	sxth	r6, r6
 801f4e6:	b212      	sxth	r2, r2
 801f4e8:	e9cd 1705 	strd	r1, r7, [sp, #20]
 801f4ec:	e9cd 5303 	strd	r5, r3, [sp, #12]
 801f4f0:	9200      	str	r2, [sp, #0]
 801f4f2:	9601      	str	r6, [sp, #4]
 801f4f4:	4623      	mov	r3, r4
 801f4f6:	e9dd 120c 	ldrd	r1, r2, [sp, #48]	@ 0x30
 801f4fa:	9813      	ldr	r0, [sp, #76]	@ 0x4c
 801f4fc:	f7ff fd59 	bl	801efb2 <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhS4_ssiihhh>
 801f500:	e74e      	b.n	801f3a0 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x216>
 801f502:	9a20      	ldr	r2, [sp, #128]	@ 0x80
 801f504:	9820      	ldr	r0, [sp, #128]	@ 0x80
 801f506:	9d1f      	ldr	r5, [sp, #124]	@ 0x7c
 801f508:	9b1f      	ldr	r3, [sp, #124]	@ 0x7c
 801f50a:	f3c2 3103 	ubfx	r1, r2, #12, #4
 801f50e:	9a26      	ldr	r2, [sp, #152]	@ 0x98
 801f510:	f9b2 2008 	ldrsh.w	r2, [r2, #8]
 801f514:	142d      	asrs	r5, r5, #16
 801f516:	1400      	asrs	r0, r0, #16
 801f518:	fb02 5000 	mla	r0, r2, r0, r5
 801f51c:	9d0d      	ldr	r5, [sp, #52]	@ 0x34
 801f51e:	f815 9000 	ldrb.w	r9, [r5, r0]
 801f522:	f3c3 3303 	ubfx	r3, r3, #12, #4
 801f526:	eb09 0949 	add.w	r9, r9, r9, lsl #1
 801f52a:	182e      	adds	r6, r5, r0
 801f52c:	eb04 0509 	add.w	r5, r4, r9
 801f530:	2b00      	cmp	r3, #0
 801f532:	f000 8096 	beq.w	801f662 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x4d8>
 801f536:	7877      	ldrb	r7, [r6, #1]
 801f538:	eb07 0747 	add.w	r7, r7, r7, lsl #1
 801f53c:	4427      	add	r7, r4
 801f53e:	2900      	cmp	r1, #0
 801f540:	f000 8097 	beq.w	801f672 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x4e8>
 801f544:	18b0      	adds	r0, r6, r2
 801f546:	5cb2      	ldrb	r2, [r6, r2]
 801f548:	7840      	ldrb	r0, [r0, #1]
 801f54a:	eb02 0242 	add.w	r2, r2, r2, lsl #1
 801f54e:	eb00 0040 	add.w	r0, r0, r0, lsl #1
 801f552:	4422      	add	r2, r4
 801f554:	4420      	add	r0, r4
 801f556:	b29b      	uxth	r3, r3
 801f558:	b289      	uxth	r1, r1
 801f55a:	fb03 f801 	mul.w	r8, r3, r1
 801f55e:	9e0c      	ldr	r6, [sp, #48]	@ 0x30
 801f560:	f895 b002 	ldrb.w	fp, [r5, #2]
 801f564:	f8b6 c000 	ldrh.w	ip, [r6]
 801f568:	78be      	ldrb	r6, [r7, #2]
 801f56a:	f814 9009 	ldrb.w	r9, [r4, r9]
 801f56e:	011b      	lsls	r3, r3, #4
 801f570:	ebc8 1101 	rsb	r1, r8, r1, lsl #4
 801f574:	b289      	uxth	r1, r1
 801f576:	f5c3 7e80 	rsb	lr, r3, #256	@ 0x100
 801f57a:	eba3 0308 	sub.w	r3, r3, r8
 801f57e:	b29b      	uxth	r3, r3
 801f580:	ebae 0e01 	sub.w	lr, lr, r1
 801f584:	fa1f fe8e 	uxth.w	lr, lr
 801f588:	435e      	muls	r6, r3
 801f58a:	fb0e 660b 	mla	r6, lr, fp, r6
 801f58e:	f892 b002 	ldrb.w	fp, [r2, #2]
 801f592:	9310      	str	r3, [sp, #64]	@ 0x40
 801f594:	fb01 660b 	mla	r6, r1, fp, r6
 801f598:	f890 b002 	ldrb.w	fp, [r0, #2]
 801f59c:	9b0b      	ldr	r3, [sp, #44]	@ 0x2c
 801f59e:	fb08 660b 	mla	r6, r8, fp, r6
 801f5a2:	ea4f 2b2c 	mov.w	fp, ip, asr #8
 801f5a6:	f00b 0bf8 	and.w	fp, fp, #248	@ 0xf8
 801f5aa:	fb1b fb03 	smulbb	fp, fp, r3
 801f5ae:	f3c6 2607 	ubfx	r6, r6, #8, #8
 801f5b2:	fb06 b60a 	mla	r6, r6, sl, fp
 801f5b6:	9b10      	ldr	r3, [sp, #64]	@ 0x40
 801f5b8:	f895 b001 	ldrb.w	fp, [r5, #1]
 801f5bc:	787d      	ldrb	r5, [r7, #1]
 801f5be:	783f      	ldrb	r7, [r7, #0]
 801f5c0:	435d      	muls	r5, r3
 801f5c2:	fb0e 550b 	mla	r5, lr, fp, r5
 801f5c6:	f892 b001 	ldrb.w	fp, [r2, #1]
 801f5ca:	9b0b      	ldr	r3, [sp, #44]	@ 0x2c
 801f5cc:	fb01 550b 	mla	r5, r1, fp, r5
 801f5d0:	f890 b001 	ldrb.w	fp, [r0, #1]
 801f5d4:	fb08 550b 	mla	r5, r8, fp, r5
 801f5d8:	ea4f 0bec 	mov.w	fp, ip, asr #3
 801f5dc:	f00b 0bfc 	and.w	fp, fp, #252	@ 0xfc
 801f5e0:	fb1b fb03 	smulbb	fp, fp, r3
 801f5e4:	9b10      	ldr	r3, [sp, #64]	@ 0x40
 801f5e6:	437b      	muls	r3, r7
 801f5e8:	7817      	ldrb	r7, [r2, #0]
 801f5ea:	fb0e 3309 	mla	r3, lr, r9, r3
 801f5ee:	fb01 3307 	mla	r3, r1, r7, r3
 801f5f2:	7807      	ldrb	r7, [r0, #0]
 801f5f4:	ea4f 0ccc 	mov.w	ip, ip, lsl #3
 801f5f8:	fb08 3707 	mla	r7, r8, r7, r3
 801f5fc:	9b0b      	ldr	r3, [sp, #44]	@ 0x2c
 801f5fe:	fa5f fc8c 	uxtb.w	ip, ip
 801f602:	fb1c fc03 	smulbb	ip, ip, r3
 801f606:	f3c5 2507 	ubfx	r5, r5, #8, #8
 801f60a:	f3c7 2707 	ubfx	r7, r7, #8, #8
 801f60e:	fb05 b50a 	mla	r5, r5, sl, fp
 801f612:	fb07 c70a 	mla	r7, r7, sl, ip
 801f616:	b2b6      	uxth	r6, r6
 801f618:	b2ad      	uxth	r5, r5
 801f61a:	b2bf      	uxth	r7, r7
 801f61c:	1c73      	adds	r3, r6, #1
 801f61e:	1c7a      	adds	r2, r7, #1
 801f620:	f105 0b01 	add.w	fp, r5, #1
 801f624:	eb03 2616 	add.w	r6, r3, r6, lsr #8
 801f628:	eb02 2217 	add.w	r2, r2, r7, lsr #8
 801f62c:	eb0b 2515 	add.w	r5, fp, r5, lsr #8
 801f630:	f3c2 22c4 	ubfx	r2, r2, #11, #5
 801f634:	f406 4678 	and.w	r6, r6, #63488	@ 0xf800
 801f638:	096d      	lsrs	r5, r5, #5
 801f63a:	9b0c      	ldr	r3, [sp, #48]	@ 0x30
 801f63c:	4316      	orrs	r6, r2
 801f63e:	f405 65fc 	and.w	r5, r5, #2016	@ 0x7e0
 801f642:	432e      	orrs	r6, r5
 801f644:	f823 6b02 	strh.w	r6, [r3], #2
 801f648:	9a21      	ldr	r2, [sp, #132]	@ 0x84
 801f64a:	930c      	str	r3, [sp, #48]	@ 0x30
 801f64c:	9b1f      	ldr	r3, [sp, #124]	@ 0x7c
 801f64e:	4413      	add	r3, r2
 801f650:	931f      	str	r3, [sp, #124]	@ 0x7c
 801f652:	9a22      	ldr	r2, [sp, #136]	@ 0x88
 801f654:	9b20      	ldr	r3, [sp, #128]	@ 0x80
 801f656:	4413      	add	r3, r2
 801f658:	9320      	str	r3, [sp, #128]	@ 0x80
 801f65a:	9b11      	ldr	r3, [sp, #68]	@ 0x44
 801f65c:	3b01      	subs	r3, #1
 801f65e:	9311      	str	r3, [sp, #68]	@ 0x44
 801f660:	e6db      	b.n	801f41a <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x290>
 801f662:	b149      	cbz	r1, 801f678 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x4ee>
 801f664:	5cb2      	ldrb	r2, [r6, r2]
 801f666:	eb02 0242 	add.w	r2, r2, r2, lsl #1
 801f66a:	4422      	add	r2, r4
 801f66c:	4628      	mov	r0, r5
 801f66e:	462f      	mov	r7, r5
 801f670:	e771      	b.n	801f556 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3cc>
 801f672:	4628      	mov	r0, r5
 801f674:	462a      	mov	r2, r5
 801f676:	e76e      	b.n	801f556 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3cc>
 801f678:	4628      	mov	r0, r5
 801f67a:	462a      	mov	r2, r5
 801f67c:	e7f7      	b.n	801f66e <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x4e4>
 801f67e:	b015      	add	sp, #84	@ 0x54
 801f680:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}

0801f684 <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhS4_ssiihh>:
 801f684:	e92d 4ff7 	stmdb	sp!, {r0, r1, r2, r4, r5, r6, r7, r8, r9, sl, fp, lr}
 801f688:	880f      	ldrh	r7, [r1, #0]
 801f68a:	f9bd e030 	ldrsh.w	lr, [sp, #48]	@ 0x30
 801f68e:	f9bd 9034 	ldrsh.w	r9, [sp, #52]	@ 0x34
 801f692:	f89d 0040 	ldrb.w	r0, [sp, #64]	@ 0x40
 801f696:	f89d 6044 	ldrb.w	r6, [sp, #68]	@ 0x44
 801f69a:	023c      	lsls	r4, r7, #8
 801f69c:	e9dd c50e 	ldrd	ip, r5, [sp, #56]	@ 0x38
 801f6a0:	f404 0b78 	and.w	fp, r4, #16252928	@ 0xf80000
 801f6a4:	017c      	lsls	r4, r7, #5
 801f6a6:	f404 447c 	and.w	r4, r4, #64512	@ 0xfc00
 801f6aa:	00ff      	lsls	r7, r7, #3
 801f6ac:	ea4b 0404 	orr.w	r4, fp, r4
 801f6b0:	b2ff      	uxtb	r7, r7
 801f6b2:	fb05 ca0e 	mla	sl, r5, lr, ip
 801f6b6:	4327      	orrs	r7, r4
 801f6b8:	2d00      	cmp	r5, #0
 801f6ba:	eb02 080a 	add.w	r8, r2, sl
 801f6be:	9701      	str	r7, [sp, #4]
 801f6c0:	db7e      	blt.n	801f7c0 <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhS4_ssiihh+0x13c>
 801f6c2:	45a9      	cmp	r9, r5
 801f6c4:	dd7c      	ble.n	801f7c0 <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhS4_ssiihh+0x13c>
 801f6c6:	f1bc 0f00 	cmp.w	ip, #0
 801f6ca:	db77      	blt.n	801f7bc <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhS4_ssiihh+0x138>
 801f6cc:	45e6      	cmp	lr, ip
 801f6ce:	dd75      	ble.n	801f7bc <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhS4_ssiihh+0x138>
 801f6d0:	f812 700a 	ldrb.w	r7, [r2, sl]
 801f6d4:	eb07 0747 	add.w	r7, r7, r7, lsl #1
 801f6d8:	441f      	add	r7, r3
 801f6da:	f11c 0201 	adds.w	r2, ip, #1
 801f6de:	d472      	bmi.n	801f7c6 <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhS4_ssiihh+0x142>
 801f6e0:	4596      	cmp	lr, r2
 801f6e2:	dd70      	ble.n	801f7c6 <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhS4_ssiihh+0x142>
 801f6e4:	2800      	cmp	r0, #0
 801f6e6:	d06e      	beq.n	801f7c6 <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhS4_ssiihh+0x142>
 801f6e8:	f898 4001 	ldrb.w	r4, [r8, #1]
 801f6ec:	eb04 0444 	add.w	r4, r4, r4, lsl #1
 801f6f0:	441c      	add	r4, r3
 801f6f2:	3501      	adds	r5, #1
 801f6f4:	d46b      	bmi.n	801f7ce <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhS4_ssiihh+0x14a>
 801f6f6:	45a9      	cmp	r9, r5
 801f6f8:	dd69      	ble.n	801f7ce <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhS4_ssiihh+0x14a>
 801f6fa:	2e00      	cmp	r6, #0
 801f6fc:	d067      	beq.n	801f7ce <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhS4_ssiihh+0x14a>
 801f6fe:	f1bc 0f00 	cmp.w	ip, #0
 801f702:	db62      	blt.n	801f7ca <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhS4_ssiihh+0x146>
 801f704:	45e6      	cmp	lr, ip
 801f706:	dd60      	ble.n	801f7ca <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhS4_ssiihh+0x146>
 801f708:	f818 500e 	ldrb.w	r5, [r8, lr]
 801f70c:	eb05 0545 	add.w	r5, r5, r5, lsl #1
 801f710:	441d      	add	r5, r3
 801f712:	f11c 0201 	adds.w	r2, ip, #1
 801f716:	d45d      	bmi.n	801f7d4 <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhS4_ssiihh+0x150>
 801f718:	4596      	cmp	lr, r2
 801f71a:	dd5b      	ble.n	801f7d4 <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhS4_ssiihh+0x150>
 801f71c:	2800      	cmp	r0, #0
 801f71e:	d059      	beq.n	801f7d4 <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhS4_ssiihh+0x150>
 801f720:	44c6      	add	lr, r8
 801f722:	f89e 2001 	ldrb.w	r2, [lr, #1]
 801f726:	eb02 0242 	add.w	r2, r2, r2, lsl #1
 801f72a:	4413      	add	r3, r2
 801f72c:	b280      	uxth	r0, r0
 801f72e:	b2b2      	uxth	r2, r6
 801f730:	fb00 f602 	mul.w	r6, r0, r2
 801f734:	0100      	lsls	r0, r0, #4
 801f736:	ebc6 1202 	rsb	r2, r6, r2, lsl #4
 801f73a:	f5c0 7880 	rsb	r8, r0, #256	@ 0x100
 801f73e:	1b80      	subs	r0, r0, r6
 801f740:	fa1f fc82 	uxth.w	ip, r2
 801f744:	b282      	uxth	r2, r0
 801f746:	78a0      	ldrb	r0, [r4, #2]
 801f748:	f897 e002 	ldrb.w	lr, [r7, #2]
 801f74c:	f897 9000 	ldrb.w	r9, [r7]
 801f750:	787f      	ldrb	r7, [r7, #1]
 801f752:	eba8 080c 	sub.w	r8, r8, ip
 801f756:	fa1f f888 	uxth.w	r8, r8
 801f75a:	4350      	muls	r0, r2
 801f75c:	fb08 0e0e 	mla	lr, r8, lr, r0
 801f760:	78a8      	ldrb	r0, [r5, #2]
 801f762:	fb0c e000 	mla	r0, ip, r0, lr
 801f766:	f893 e002 	ldrb.w	lr, [r3, #2]
 801f76a:	fb06 0e0e 	mla	lr, r6, lr, r0
 801f76e:	f40e 4078 	and.w	r0, lr, #63488	@ 0xf800
 801f772:	f894 e000 	ldrb.w	lr, [r4]
 801f776:	fb02 fe0e 	mul.w	lr, r2, lr
 801f77a:	fb08 e909 	mla	r9, r8, r9, lr
 801f77e:	f895 e000 	ldrb.w	lr, [r5]
 801f782:	fb0c 990e 	mla	r9, ip, lr, r9
 801f786:	f893 e000 	ldrb.w	lr, [r3]
 801f78a:	785b      	ldrb	r3, [r3, #1]
 801f78c:	fb06 9e0e 	mla	lr, r6, lr, r9
 801f790:	f3ce 2ec4 	ubfx	lr, lr, #11, #5
 801f794:	ea4e 0e00 	orr.w	lr, lr, r0
 801f798:	7860      	ldrb	r0, [r4, #1]
 801f79a:	4350      	muls	r0, r2
 801f79c:	786a      	ldrb	r2, [r5, #1]
 801f79e:	fb08 0007 	mla	r0, r8, r7, r0
 801f7a2:	fb0c 0202 	mla	r2, ip, r2, r0
 801f7a6:	fb06 2303 	mla	r3, r6, r3, r2
 801f7aa:	095b      	lsrs	r3, r3, #5
 801f7ac:	f403 63fc 	and.w	r3, r3, #2016	@ 0x7e0
 801f7b0:	ea4e 0303 	orr.w	r3, lr, r3
 801f7b4:	800b      	strh	r3, [r1, #0]
 801f7b6:	b003      	add	sp, #12
 801f7b8:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 801f7bc:	af01      	add	r7, sp, #4
 801f7be:	e78c      	b.n	801f6da <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhS4_ssiihh+0x56>
 801f7c0:	ac01      	add	r4, sp, #4
 801f7c2:	4627      	mov	r7, r4
 801f7c4:	e795      	b.n	801f6f2 <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhS4_ssiihh+0x6e>
 801f7c6:	ac01      	add	r4, sp, #4
 801f7c8:	e793      	b.n	801f6f2 <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhS4_ssiihh+0x6e>
 801f7ca:	ad01      	add	r5, sp, #4
 801f7cc:	e7a1      	b.n	801f712 <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhS4_ssiihh+0x8e>
 801f7ce:	ab01      	add	r3, sp, #4
 801f7d0:	461d      	mov	r5, r3
 801f7d2:	e7ab      	b.n	801f72c <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhS4_ssiihh+0xa8>
 801f7d4:	ab01      	add	r3, sp, #4
 801f7d6:	e7a9      	b.n	801f72c <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhS4_ssiihh+0xa8>

0801f7d8 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff>:
 801f7d8:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 801f7dc:	b08f      	sub	sp, #60	@ 0x3c
 801f7de:	e9dd b519 	ldrd	fp, r5, [sp, #100]	@ 0x64
 801f7e2:	920c      	str	r2, [sp, #48]	@ 0x30
 801f7e4:	9a1d      	ldr	r2, [sp, #116]	@ 0x74
 801f7e6:	910a      	str	r1, [sp, #40]	@ 0x28
 801f7e8:	9306      	str	r3, [sp, #24]
 801f7ea:	e9dd 131e 	ldrd	r1, r3, [sp, #120]	@ 0x78
 801f7ee:	900d      	str	r0, [sp, #52]	@ 0x34
 801f7f0:	6850      	ldr	r0, [r2, #4]
 801f7f2:	6812      	ldr	r2, [r2, #0]
 801f7f4:	fb00 1303 	mla	r3, r0, r3, r1
 801f7f8:	eb02 0343 	add.w	r3, r2, r3, lsl #1
 801f7fc:	9307      	str	r3, [sp, #28]
 801f7fe:	9b20      	ldr	r3, [sp, #128]	@ 0x80
 801f800:	681b      	ldr	r3, [r3, #0]
 801f802:	9308      	str	r3, [sp, #32]
 801f804:	9b20      	ldr	r3, [sp, #128]	@ 0x80
 801f806:	685c      	ldr	r4, [r3, #4]
 801f808:	3404      	adds	r4, #4
 801f80a:	9b0a      	ldr	r3, [sp, #40]	@ 0x28
 801f80c:	2b00      	cmp	r3, #0
 801f80e:	dc03      	bgt.n	801f818 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x40>
 801f810:	9b0c      	ldr	r3, [sp, #48]	@ 0x30
 801f812:	2b00      	cmp	r3, #0
 801f814:	f340 81d6 	ble.w	801fbc4 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3ec>
 801f818:	9b20      	ldr	r3, [sp, #128]	@ 0x80
 801f81a:	f9b3 1008 	ldrsh.w	r1, [r3, #8]
 801f81e:	f9b3 200c 	ldrsh.w	r2, [r3, #12]
 801f822:	1e48      	subs	r0, r1, #1
 801f824:	1e56      	subs	r6, r2, #1
 801f826:	9b06      	ldr	r3, [sp, #24]
 801f828:	2b00      	cmp	r3, #0
 801f82a:	f340 80b7 	ble.w	801f99c <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1c4>
 801f82e:	ea5f 472b 	movs.w	r7, fp, asr #16
 801f832:	ea4f 4325 	mov.w	r3, r5, asr #16
 801f836:	d406      	bmi.n	801f846 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x6e>
 801f838:	4287      	cmp	r7, r0
 801f83a:	da04      	bge.n	801f846 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x6e>
 801f83c:	2b00      	cmp	r3, #0
 801f83e:	db02      	blt.n	801f846 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x6e>
 801f840:	42b3      	cmp	r3, r6
 801f842:	f2c0 80ac 	blt.w	801f99e <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1c6>
 801f846:	3701      	adds	r7, #1
 801f848:	f100 809d 	bmi.w	801f986 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1ae>
 801f84c:	42b9      	cmp	r1, r7
 801f84e:	f2c0 809a 	blt.w	801f986 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1ae>
 801f852:	3301      	adds	r3, #1
 801f854:	f100 8097 	bmi.w	801f986 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1ae>
 801f858:	429a      	cmp	r2, r3
 801f85a:	f2c0 8094 	blt.w	801f986 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1ae>
 801f85e:	9b06      	ldr	r3, [sp, #24]
 801f860:	930b      	str	r3, [sp, #44]	@ 0x2c
 801f862:	9b07      	ldr	r3, [sp, #28]
 801f864:	9309      	str	r3, [sp, #36]	@ 0x24
 801f866:	9b0b      	ldr	r3, [sp, #44]	@ 0x2c
 801f868:	2b00      	cmp	r3, #0
 801f86a:	f340 80b5 	ble.w	801f9d8 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x200>
 801f86e:	9820      	ldr	r0, [sp, #128]	@ 0x80
 801f870:	9a20      	ldr	r2, [sp, #128]	@ 0x80
 801f872:	68c7      	ldr	r7, [r0, #12]
 801f874:	6892      	ldr	r2, [r2, #8]
 801f876:	ea5f 402b 	movs.w	r0, fp, asr #16
 801f87a:	ea4f 4625 	mov.w	r6, r5, asr #16
 801f87e:	f3cb 3303 	ubfx	r3, fp, #12, #4
 801f882:	f3c5 3103 	ubfx	r1, r5, #12, #4
 801f886:	f100 80fb 	bmi.w	801fa80 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2a8>
 801f88a:	f102 3cff 	add.w	ip, r2, #4294967295
 801f88e:	4560      	cmp	r0, ip
 801f890:	f280 80f6 	bge.w	801fa80 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2a8>
 801f894:	2e00      	cmp	r6, #0
 801f896:	f2c0 80f3 	blt.w	801fa80 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2a8>
 801f89a:	f107 3cff 	add.w	ip, r7, #4294967295
 801f89e:	4566      	cmp	r6, ip
 801f8a0:	f280 80ee 	bge.w	801fa80 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2a8>
 801f8a4:	b212      	sxth	r2, r2
 801f8a6:	fb06 0002 	mla	r0, r6, r2, r0
 801f8aa:	9e08      	ldr	r6, [sp, #32]
 801f8ac:	1837      	adds	r7, r6, r0
 801f8ae:	5c30      	ldrb	r0, [r6, r0]
 801f8b0:	eb00 0840 	add.w	r8, r0, r0, lsl #1
 801f8b4:	eb04 0c08 	add.w	ip, r4, r8
 801f8b8:	2b00      	cmp	r3, #0
 801f8ba:	f000 80d3 	beq.w	801fa64 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x28c>
 801f8be:	787e      	ldrb	r6, [r7, #1]
 801f8c0:	eb06 0646 	add.w	r6, r6, r6, lsl #1
 801f8c4:	4426      	add	r6, r4
 801f8c6:	2900      	cmp	r1, #0
 801f8c8:	f000 80d4 	beq.w	801fa74 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x29c>
 801f8cc:	18b8      	adds	r0, r7, r2
 801f8ce:	5cba      	ldrb	r2, [r7, r2]
 801f8d0:	7840      	ldrb	r0, [r0, #1]
 801f8d2:	eb02 0242 	add.w	r2, r2, r2, lsl #1
 801f8d6:	eb00 0040 	add.w	r0, r0, r0, lsl #1
 801f8da:	4422      	add	r2, r4
 801f8dc:	4420      	add	r0, r4
 801f8de:	b29b      	uxth	r3, r3
 801f8e0:	b289      	uxth	r1, r1
 801f8e2:	fb03 f901 	mul.w	r9, r3, r1
 801f8e6:	ebc9 1101 	rsb	r1, r9, r1, lsl #4
 801f8ea:	011b      	lsls	r3, r3, #4
 801f8ec:	b289      	uxth	r1, r1
 801f8ee:	78b7      	ldrb	r7, [r6, #2]
 801f8f0:	f89c a002 	ldrb.w	sl, [ip, #2]
 801f8f4:	f89c c001 	ldrb.w	ip, [ip, #1]
 801f8f8:	f5c3 7e80 	rsb	lr, r3, #256	@ 0x100
 801f8fc:	eba3 0309 	sub.w	r3, r3, r9
 801f900:	b29b      	uxth	r3, r3
 801f902:	ebae 0e01 	sub.w	lr, lr, r1
 801f906:	fa1f fe8e 	uxth.w	lr, lr
 801f90a:	435f      	muls	r7, r3
 801f90c:	fb0e 770a 	mla	r7, lr, sl, r7
 801f910:	f892 a002 	ldrb.w	sl, [r2, #2]
 801f914:	fb01 770a 	mla	r7, r1, sl, r7
 801f918:	f890 a002 	ldrb.w	sl, [r0, #2]
 801f91c:	fb09 7a0a 	mla	sl, r9, sl, r7
 801f920:	f814 7008 	ldrb.w	r7, [r4, r8]
 801f924:	f896 8000 	ldrb.w	r8, [r6]
 801f928:	7876      	ldrb	r6, [r6, #1]
 801f92a:	fb03 f808 	mul.w	r8, r3, r8
 801f92e:	fb0e 8807 	mla	r8, lr, r7, r8
 801f932:	7817      	ldrb	r7, [r2, #0]
 801f934:	fb01 8807 	mla	r8, r1, r7, r8
 801f938:	7807      	ldrb	r7, [r0, #0]
 801f93a:	fb09 8707 	mla	r7, r9, r7, r8
 801f93e:	f40a 4a78 	and.w	sl, sl, #63488	@ 0xf800
 801f942:	f3c7 27c4 	ubfx	r7, r7, #11, #5
 801f946:	ea47 070a 	orr.w	r7, r7, sl
 801f94a:	4373      	muls	r3, r6
 801f94c:	f892 a001 	ldrb.w	sl, [r2, #1]
 801f950:	fb0e 330c 	mla	r3, lr, ip, r3
 801f954:	fb01 310a 	mla	r1, r1, sl, r3
 801f958:	f890 a001 	ldrb.w	sl, [r0, #1]
 801f95c:	9b09      	ldr	r3, [sp, #36]	@ 0x24
 801f95e:	fb09 1a0a 	mla	sl, r9, sl, r1
 801f962:	ea4f 1a5a 	mov.w	sl, sl, lsr #5
 801f966:	f40a 6afc 	and.w	sl, sl, #2016	@ 0x7e0
 801f96a:	ea47 070a 	orr.w	r7, r7, sl
 801f96e:	801f      	strh	r7, [r3, #0]
 801f970:	9b09      	ldr	r3, [sp, #36]	@ 0x24
 801f972:	3302      	adds	r3, #2
 801f974:	9309      	str	r3, [sp, #36]	@ 0x24
 801f976:	9b1b      	ldr	r3, [sp, #108]	@ 0x6c
 801f978:	449b      	add	fp, r3
 801f97a:	9b1c      	ldr	r3, [sp, #112]	@ 0x70
 801f97c:	441d      	add	r5, r3
 801f97e:	9b0b      	ldr	r3, [sp, #44]	@ 0x2c
 801f980:	3b01      	subs	r3, #1
 801f982:	930b      	str	r3, [sp, #44]	@ 0x2c
 801f984:	e76f      	b.n	801f866 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x8e>
 801f986:	9b1b      	ldr	r3, [sp, #108]	@ 0x6c
 801f988:	449b      	add	fp, r3
 801f98a:	9b1c      	ldr	r3, [sp, #112]	@ 0x70
 801f98c:	441d      	add	r5, r3
 801f98e:	9b06      	ldr	r3, [sp, #24]
 801f990:	3b01      	subs	r3, #1
 801f992:	9306      	str	r3, [sp, #24]
 801f994:	9b07      	ldr	r3, [sp, #28]
 801f996:	3302      	adds	r3, #2
 801f998:	9307      	str	r3, [sp, #28]
 801f99a:	e744      	b.n	801f826 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x4e>
 801f99c:	d023      	beq.n	801f9e6 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x20e>
 801f99e:	9b06      	ldr	r3, [sp, #24]
 801f9a0:	981b      	ldr	r0, [sp, #108]	@ 0x6c
 801f9a2:	3b01      	subs	r3, #1
 801f9a4:	fb00 b003 	mla	r0, r0, r3, fp
 801f9a8:	1400      	asrs	r0, r0, #16
 801f9aa:	f53f af58 	bmi.w	801f85e <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x86>
 801f9ae:	3901      	subs	r1, #1
 801f9b0:	4288      	cmp	r0, r1
 801f9b2:	f6bf af54 	bge.w	801f85e <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x86>
 801f9b6:	991c      	ldr	r1, [sp, #112]	@ 0x70
 801f9b8:	fb01 5303 	mla	r3, r1, r3, r5
 801f9bc:	141b      	asrs	r3, r3, #16
 801f9be:	f53f af4e 	bmi.w	801f85e <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x86>
 801f9c2:	3a01      	subs	r2, #1
 801f9c4:	4293      	cmp	r3, r2
 801f9c6:	f6bf af4a 	bge.w	801f85e <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x86>
 801f9ca:	9b06      	ldr	r3, [sp, #24]
 801f9cc:	9309      	str	r3, [sp, #36]	@ 0x24
 801f9ce:	9b07      	ldr	r3, [sp, #28]
 801f9d0:	930b      	str	r3, [sp, #44]	@ 0x2c
 801f9d2:	9b09      	ldr	r3, [sp, #36]	@ 0x24
 801f9d4:	2b00      	cmp	r3, #0
 801f9d6:	dc70      	bgt.n	801faba <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2e2>
 801f9d8:	9b06      	ldr	r3, [sp, #24]
 801f9da:	9a07      	ldr	r2, [sp, #28]
 801f9dc:	ea23 73e3 	bic.w	r3, r3, r3, asr #31
 801f9e0:	eb02 0343 	add.w	r3, r2, r3, lsl #1
 801f9e4:	9307      	str	r3, [sp, #28]
 801f9e6:	9b0a      	ldr	r3, [sp, #40]	@ 0x28
 801f9e8:	2b00      	cmp	r3, #0
 801f9ea:	f340 80eb 	ble.w	801fbc4 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3ec>
 801f9ee:	ee30 0a04 	vadd.f32	s0, s0, s8
 801f9f2:	eeb7 7a00 	vmov.f32	s14, #112	@ 0x3f800000  1.0
 801f9f6:	eec7 7a00 	vdiv.f32	s15, s14, s0
 801f9fa:	9b18      	ldr	r3, [sp, #96]	@ 0x60
 801f9fc:	ee70 0aa4 	vadd.f32	s1, s1, s9
 801fa00:	ee31 1a05 	vadd.f32	s2, s2, s10
 801fa04:	ee20 7aa7 	vmul.f32	s14, s1, s15
 801fa08:	eef0 6a62 	vmov.f32	s13, s5
 801fa0c:	ee61 7a27 	vmul.f32	s15, s2, s15
 801fa10:	eefe 6ac8 	vcvt.s32.f32	s13, s13, #16
 801fa14:	ee77 2a62 	vsub.f32	s5, s14, s5
 801fa18:	ee16 ba90 	vmov	fp, s13
 801fa1c:	eefe 2ac8 	vcvt.s32.f32	s5, s5, #16
 801fa20:	eef0 6a43 	vmov.f32	s13, s6
 801fa24:	ee37 3ac3 	vsub.f32	s6, s15, s6
 801fa28:	ee12 2a90 	vmov	r2, s5
 801fa2c:	eebe 3ac8 	vcvt.s32.f32	s6, s6, #16
 801fa30:	fb92 f3f3 	sdiv	r3, r2, r3
 801fa34:	ee13 2a10 	vmov	r2, s6
 801fa38:	931b      	str	r3, [sp, #108]	@ 0x6c
 801fa3a:	9b18      	ldr	r3, [sp, #96]	@ 0x60
 801fa3c:	fb92 f3f3 	sdiv	r3, r2, r3
 801fa40:	931c      	str	r3, [sp, #112]	@ 0x70
 801fa42:	9b0a      	ldr	r3, [sp, #40]	@ 0x28
 801fa44:	9a0c      	ldr	r2, [sp, #48]	@ 0x30
 801fa46:	3b01      	subs	r3, #1
 801fa48:	eefe 6ac8 	vcvt.s32.f32	s13, s13, #16
 801fa4c:	930a      	str	r3, [sp, #40]	@ 0x28
 801fa4e:	9b18      	ldr	r3, [sp, #96]	@ 0x60
 801fa50:	bf08      	it	eq
 801fa52:	4613      	moveq	r3, r2
 801fa54:	ee16 5a90 	vmov	r5, s13
 801fa58:	9306      	str	r3, [sp, #24]
 801fa5a:	eeb0 3a67 	vmov.f32	s6, s15
 801fa5e:	eef0 2a47 	vmov.f32	s5, s14
 801fa62:	e6d2      	b.n	801f80a <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x32>
 801fa64:	b149      	cbz	r1, 801fa7a <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2a2>
 801fa66:	5cba      	ldrb	r2, [r7, r2]
 801fa68:	eb02 0242 	add.w	r2, r2, r2, lsl #1
 801fa6c:	4422      	add	r2, r4
 801fa6e:	4660      	mov	r0, ip
 801fa70:	4666      	mov	r6, ip
 801fa72:	e734      	b.n	801f8de <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x106>
 801fa74:	4660      	mov	r0, ip
 801fa76:	4662      	mov	r2, ip
 801fa78:	e731      	b.n	801f8de <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x106>
 801fa7a:	4660      	mov	r0, ip
 801fa7c:	4662      	mov	r2, ip
 801fa7e:	e7f7      	b.n	801fa70 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x298>
 801fa80:	f110 0c01 	adds.w	ip, r0, #1
 801fa84:	f53f af74 	bmi.w	801f970 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x198>
 801fa88:	4562      	cmp	r2, ip
 801fa8a:	f6ff af71 	blt.w	801f970 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x198>
 801fa8e:	f116 0c01 	adds.w	ip, r6, #1
 801fa92:	f53f af6d 	bmi.w	801f970 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x198>
 801fa96:	4567      	cmp	r7, ip
 801fa98:	f6ff af6a 	blt.w	801f970 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x198>
 801fa9c:	b23f      	sxth	r7, r7
 801fa9e:	b212      	sxth	r2, r2
 801faa0:	e9cd 3104 	strd	r3, r1, [sp, #16]
 801faa4:	e9cd 0602 	strd	r0, r6, [sp, #8]
 801faa8:	9200      	str	r2, [sp, #0]
 801faaa:	9701      	str	r7, [sp, #4]
 801faac:	4623      	mov	r3, r4
 801faae:	e9dd 2108 	ldrd	r2, r1, [sp, #32]
 801fab2:	980d      	ldr	r0, [sp, #52]	@ 0x34
 801fab4:	f7ff fde6 	bl	801f684 <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhS4_ssiihh>
 801fab8:	e75a      	b.n	801f970 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x198>
 801faba:	9a20      	ldr	r2, [sp, #128]	@ 0x80
 801fabc:	f9b2 2008 	ldrsh.w	r2, [r2, #8]
 801fac0:	ea4f 462b 	mov.w	r6, fp, asr #16
 801fac4:	1428      	asrs	r0, r5, #16
 801fac6:	fb02 6000 	mla	r0, r2, r0, r6
 801faca:	9e08      	ldr	r6, [sp, #32]
 801facc:	f816 8000 	ldrb.w	r8, [r6, r0]
 801fad0:	f3cb 3303 	ubfx	r3, fp, #12, #4
 801fad4:	eb08 0848 	add.w	r8, r8, r8, lsl #1
 801fad8:	f3c5 3103 	ubfx	r1, r5, #12, #4
 801fadc:	1837      	adds	r7, r6, r0
 801fade:	eb04 0c08 	add.w	ip, r4, r8
 801fae2:	2b00      	cmp	r3, #0
 801fae4:	d060      	beq.n	801fba8 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3d0>
 801fae6:	787e      	ldrb	r6, [r7, #1]
 801fae8:	eb06 0646 	add.w	r6, r6, r6, lsl #1
 801faec:	4426      	add	r6, r4
 801faee:	2900      	cmp	r1, #0
 801faf0:	d062      	beq.n	801fbb8 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3e0>
 801faf2:	18b8      	adds	r0, r7, r2
 801faf4:	5cba      	ldrb	r2, [r7, r2]
 801faf6:	7840      	ldrb	r0, [r0, #1]
 801faf8:	eb02 0242 	add.w	r2, r2, r2, lsl #1
 801fafc:	eb00 0040 	add.w	r0, r0, r0, lsl #1
 801fb00:	4422      	add	r2, r4
 801fb02:	4420      	add	r0, r4
 801fb04:	b29b      	uxth	r3, r3
 801fb06:	b289      	uxth	r1, r1
 801fb08:	fb03 f901 	mul.w	r9, r3, r1
 801fb0c:	ebc9 1101 	rsb	r1, r9, r1, lsl #4
 801fb10:	011b      	lsls	r3, r3, #4
 801fb12:	b289      	uxth	r1, r1
 801fb14:	78b7      	ldrb	r7, [r6, #2]
 801fb16:	f89c a002 	ldrb.w	sl, [ip, #2]
 801fb1a:	f89c c001 	ldrb.w	ip, [ip, #1]
 801fb1e:	f5c3 7e80 	rsb	lr, r3, #256	@ 0x100
 801fb22:	eba3 0309 	sub.w	r3, r3, r9
 801fb26:	b29b      	uxth	r3, r3
 801fb28:	ebae 0e01 	sub.w	lr, lr, r1
 801fb2c:	fa1f fe8e 	uxth.w	lr, lr
 801fb30:	435f      	muls	r7, r3
 801fb32:	fb0e 770a 	mla	r7, lr, sl, r7
 801fb36:	f892 a002 	ldrb.w	sl, [r2, #2]
 801fb3a:	fb01 770a 	mla	r7, r1, sl, r7
 801fb3e:	f890 a002 	ldrb.w	sl, [r0, #2]
 801fb42:	fb09 7a0a 	mla	sl, r9, sl, r7
 801fb46:	f814 7008 	ldrb.w	r7, [r4, r8]
 801fb4a:	f896 8000 	ldrb.w	r8, [r6]
 801fb4e:	7876      	ldrb	r6, [r6, #1]
 801fb50:	fb03 f808 	mul.w	r8, r3, r8
 801fb54:	fb0e 8807 	mla	r8, lr, r7, r8
 801fb58:	7817      	ldrb	r7, [r2, #0]
 801fb5a:	fb01 8807 	mla	r8, r1, r7, r8
 801fb5e:	7807      	ldrb	r7, [r0, #0]
 801fb60:	fb09 8707 	mla	r7, r9, r7, r8
 801fb64:	f40a 4a78 	and.w	sl, sl, #63488	@ 0xf800
 801fb68:	4373      	muls	r3, r6
 801fb6a:	f3c7 27c4 	ubfx	r7, r7, #11, #5
 801fb6e:	7856      	ldrb	r6, [r2, #1]
 801fb70:	ea47 070a 	orr.w	r7, r7, sl
 801fb74:	fb0e 330c 	mla	r3, lr, ip, r3
 801fb78:	f890 a001 	ldrb.w	sl, [r0, #1]
 801fb7c:	fb01 3306 	mla	r3, r1, r6, r3
 801fb80:	fb09 3a0a 	mla	sl, r9, sl, r3
 801fb84:	ea4f 1a5a 	mov.w	sl, sl, lsr #5
 801fb88:	9b0b      	ldr	r3, [sp, #44]	@ 0x2c
 801fb8a:	f40a 6afc 	and.w	sl, sl, #2016	@ 0x7e0
 801fb8e:	ea47 070a 	orr.w	r7, r7, sl
 801fb92:	f823 7b02 	strh.w	r7, [r3], #2
 801fb96:	930b      	str	r3, [sp, #44]	@ 0x2c
 801fb98:	9b1b      	ldr	r3, [sp, #108]	@ 0x6c
 801fb9a:	449b      	add	fp, r3
 801fb9c:	9b1c      	ldr	r3, [sp, #112]	@ 0x70
 801fb9e:	441d      	add	r5, r3
 801fba0:	9b09      	ldr	r3, [sp, #36]	@ 0x24
 801fba2:	3b01      	subs	r3, #1
 801fba4:	9309      	str	r3, [sp, #36]	@ 0x24
 801fba6:	e714      	b.n	801f9d2 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1fa>
 801fba8:	b149      	cbz	r1, 801fbbe <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3e6>
 801fbaa:	5cba      	ldrb	r2, [r7, r2]
 801fbac:	eb02 0242 	add.w	r2, r2, r2, lsl #1
 801fbb0:	4422      	add	r2, r4
 801fbb2:	4660      	mov	r0, ip
 801fbb4:	4666      	mov	r6, ip
 801fbb6:	e7a5      	b.n	801fb04 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x32c>
 801fbb8:	4660      	mov	r0, ip
 801fbba:	4662      	mov	r2, ip
 801fbbc:	e7a2      	b.n	801fb04 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x32c>
 801fbbe:	4660      	mov	r0, ip
 801fbc0:	4662      	mov	r2, ip
 801fbc2:	e7f7      	b.n	801fbb4 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3dc>
 801fbc4:	b00f      	add	sp, #60	@ 0x3c
 801fbc6:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}

0801fbca <_ZNK8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKmssiihhh>:
 801fbca:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 801fbce:	b085      	sub	sp, #20
 801fbd0:	e9dd 7410 	ldrd	r7, r4, [sp, #64]	@ 0x40
 801fbd4:	f9bd c038 	ldrsh.w	ip, [sp, #56]	@ 0x38
 801fbd8:	9102      	str	r1, [sp, #8]
 801fbda:	2c00      	cmp	r4, #0
 801fbdc:	fb04 710c 	mla	r1, r4, ip, r7
 801fbe0:	f9bd 803c 	ldrsh.w	r8, [sp, #60]	@ 0x3c
 801fbe4:	f89d 6048 	ldrb.w	r6, [sp, #72]	@ 0x48
 801fbe8:	f89d 004c 	ldrb.w	r0, [sp, #76]	@ 0x4c
 801fbec:	eb02 0e01 	add.w	lr, r2, r1
 801fbf0:	f2c0 8122 	blt.w	801fe38 <_ZNK8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKmssiihhh+0x26e>
 801fbf4:	45a0      	cmp	r8, r4
 801fbf6:	f340 811f 	ble.w	801fe38 <_ZNK8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKmssiihhh+0x26e>
 801fbfa:	2f00      	cmp	r7, #0
 801fbfc:	f2c0 811a 	blt.w	801fe34 <_ZNK8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKmssiihhh+0x26a>
 801fc00:	45bc      	cmp	ip, r7
 801fc02:	f340 8117 	ble.w	801fe34 <_ZNK8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKmssiihhh+0x26a>
 801fc06:	5c52      	ldrb	r2, [r2, r1]
 801fc08:	f853 5022 	ldr.w	r5, [r3, r2, lsl #2]
 801fc0c:	1c7a      	adds	r2, r7, #1
 801fc0e:	f100 8116 	bmi.w	801fe3e <_ZNK8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKmssiihhh+0x274>
 801fc12:	4594      	cmp	ip, r2
 801fc14:	f340 8113 	ble.w	801fe3e <_ZNK8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKmssiihhh+0x274>
 801fc18:	2e00      	cmp	r6, #0
 801fc1a:	f000 8112 	beq.w	801fe42 <_ZNK8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKmssiihhh+0x278>
 801fc1e:	f89e 2001 	ldrb.w	r2, [lr, #1]
 801fc22:	f853 1022 	ldr.w	r1, [r3, r2, lsl #2]
 801fc26:	3401      	adds	r4, #1
 801fc28:	f100 810f 	bmi.w	801fe4a <_ZNK8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKmssiihhh+0x280>
 801fc2c:	45a0      	cmp	r8, r4
 801fc2e:	f340 810c 	ble.w	801fe4a <_ZNK8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKmssiihhh+0x280>
 801fc32:	2800      	cmp	r0, #0
 801fc34:	f000 810c 	beq.w	801fe50 <_ZNK8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKmssiihhh+0x286>
 801fc38:	2f00      	cmp	r7, #0
 801fc3a:	f2c0 8104 	blt.w	801fe46 <_ZNK8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKmssiihhh+0x27c>
 801fc3e:	45bc      	cmp	ip, r7
 801fc40:	f340 8101 	ble.w	801fe46 <_ZNK8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKmssiihhh+0x27c>
 801fc44:	f81e 200c 	ldrb.w	r2, [lr, ip]
 801fc48:	f853 4022 	ldr.w	r4, [r3, r2, lsl #2]
 801fc4c:	3701      	adds	r7, #1
 801fc4e:	f100 8102 	bmi.w	801fe56 <_ZNK8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKmssiihhh+0x28c>
 801fc52:	45bc      	cmp	ip, r7
 801fc54:	f340 80ff 	ble.w	801fe56 <_ZNK8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKmssiihhh+0x28c>
 801fc58:	2e00      	cmp	r6, #0
 801fc5a:	f000 80fe 	beq.w	801fe5a <_ZNK8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKmssiihhh+0x290>
 801fc5e:	44f4      	add	ip, lr
 801fc60:	f89c 2001 	ldrb.w	r2, [ip, #1]
 801fc64:	f853 2022 	ldr.w	r2, [r3, r2, lsl #2]
 801fc68:	b2b6      	uxth	r6, r6
 801fc6a:	b280      	uxth	r0, r0
 801fc6c:	fb00 fe06 	mul.w	lr, r0, r6
 801fc70:	ebce 1000 	rsb	r0, lr, r0, lsl #4
 801fc74:	0136      	lsls	r6, r6, #4
 801fc76:	eba6 070e 	sub.w	r7, r6, lr
 801fc7a:	b280      	uxth	r0, r0
 801fc7c:	f5c6 7380 	rsb	r3, r6, #256	@ 0x100
 801fc80:	ea4f 6a11 	mov.w	sl, r1, lsr #24
 801fc84:	b2bf      	uxth	r7, r7
 801fc86:	1a1b      	subs	r3, r3, r0
 801fc88:	ea4f 6b15 	mov.w	fp, r5, lsr #24
 801fc8c:	b29b      	uxth	r3, r3
 801fc8e:	fb0a f607 	mul.w	r6, sl, r7
 801fc92:	ea4f 6914 	mov.w	r9, r4, lsr #24
 801fc96:	fb0b 6603 	mla	r6, fp, r3, r6
 801fc9a:	ea4f 6812 	mov.w	r8, r2, lsr #24
 801fc9e:	fb00 6609 	mla	r6, r0, r9, r6
 801fca2:	fb0e 6608 	mla	r6, lr, r8, r6
 801fca6:	f3c6 2607 	ubfx	r6, r6, #8, #8
 801fcaa:	9600      	str	r6, [sp, #0]
 801fcac:	2e00      	cmp	r6, #0
 801fcae:	f000 80be 	beq.w	801fe2e <_ZNK8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKmssiihhh+0x264>
 801fcb2:	f005 1cff 	and.w	ip, r5, #16711935	@ 0xff00ff
 801fcb6:	fb0b fc0c 	mul.w	ip, fp, ip
 801fcba:	f405 457f 	and.w	r5, r5, #65280	@ 0xff00
 801fcbe:	fb0b f505 	mul.w	r5, fp, r5
 801fcc2:	ea4f 2b1c 	mov.w	fp, ip, lsr #8
 801fcc6:	f00b 1bff 	and.w	fp, fp, #16711935	@ 0xff00ff
 801fcca:	f10c 1c01 	add.w	ip, ip, #65537	@ 0x10001
 801fcce:	44dc      	add	ip, fp
 801fcd0:	ea4f 2c1c 	mov.w	ip, ip, lsr #8
 801fcd4:	9501      	str	r5, [sp, #4]
 801fcd6:	f00c 15ff 	and.w	r5, ip, #16711935	@ 0xff00ff
 801fcda:	9503      	str	r5, [sp, #12]
 801fcdc:	9d01      	ldr	r5, [sp, #4]
 801fcde:	9e02      	ldr	r6, [sp, #8]
 801fce0:	f505 7c80 	add.w	ip, r5, #256	@ 0x100
 801fce4:	eb0c 2515 	add.w	r5, ip, r5, lsr #8
 801fce8:	f001 1cff 	and.w	ip, r1, #16711935	@ 0xff00ff
 801fcec:	fb0a fc0c 	mul.w	ip, sl, ip
 801fcf0:	ea4f 2b15 	mov.w	fp, r5, lsr #8
 801fcf4:	ea4f 251c 	mov.w	r5, ip, lsr #8
 801fcf8:	f005 15ff 	and.w	r5, r5, #16711935	@ 0xff00ff
 801fcfc:	f10c 1c01 	add.w	ip, ip, #65537	@ 0x10001
 801fd00:	4465      	add	r5, ip
 801fd02:	f004 1cff 	and.w	ip, r4, #16711935	@ 0xff00ff
 801fd06:	f404 447f 	and.w	r4, r4, #65280	@ 0xff00
 801fd0a:	fb09 fc0c 	mul.w	ip, r9, ip
 801fd0e:	fb09 f904 	mul.w	r9, r9, r4
 801fd12:	f509 7480 	add.w	r4, r9, #256	@ 0x100
 801fd16:	eb04 2919 	add.w	r9, r4, r9, lsr #8
 801fd1a:	f002 14ff 	and.w	r4, r2, #16711935	@ 0xff00ff
 801fd1e:	fb08 f404 	mul.w	r4, r8, r4
 801fd22:	f401 417f 	and.w	r1, r1, #65280	@ 0xff00
 801fd26:	f402 427f 	and.w	r2, r2, #65280	@ 0xff00
 801fd2a:	fb08 f802 	mul.w	r8, r8, r2
 801fd2e:	fb0a fa01 	mul.w	sl, sl, r1
 801fd32:	0a22      	lsrs	r2, r4, #8
 801fd34:	f50a 7180 	add.w	r1, sl, #256	@ 0x100
 801fd38:	f002 12ff 	and.w	r2, r2, #16711935	@ 0xff00ff
 801fd3c:	f104 1401 	add.w	r4, r4, #65537	@ 0x10001
 801fd40:	eb01 2a1a 	add.w	sl, r1, sl, lsr #8
 801fd44:	4414      	add	r4, r2
 801fd46:	ea4f 211c 	mov.w	r1, ip, lsr #8
 801fd4a:	f508 7280 	add.w	r2, r8, #256	@ 0x100
 801fd4e:	0a2d      	lsrs	r5, r5, #8
 801fd50:	eb02 2818 	add.w	r8, r2, r8, lsr #8
 801fd54:	f005 15ff 	and.w	r5, r5, #16711935	@ 0xff00ff
 801fd58:	9a03      	ldr	r2, [sp, #12]
 801fd5a:	8836      	ldrh	r6, [r6, #0]
 801fd5c:	f001 11ff 	and.w	r1, r1, #16711935	@ 0xff00ff
 801fd60:	f10c 1c01 	add.w	ip, ip, #65537	@ 0x10001
 801fd64:	437d      	muls	r5, r7
 801fd66:	4461      	add	r1, ip
 801fd68:	0a24      	lsrs	r4, r4, #8
 801fd6a:	fb02 5503 	mla	r5, r2, r3, r5
 801fd6e:	0a09      	lsrs	r1, r1, #8
 801fd70:	f004 14ff 	and.w	r4, r4, #16711935	@ 0xff00ff
 801fd74:	fb04 540e 	mla	r4, r4, lr, r5
 801fd78:	f001 11ff 	and.w	r1, r1, #16711935	@ 0xff00ff
 801fd7c:	fb01 4100 	mla	r1, r1, r0, r4
 801fd80:	ea4f 2a1a 	mov.w	sl, sl, lsr #8
 801fd84:	0a09      	lsrs	r1, r1, #8
 801fd86:	f40a 4a7f 	and.w	sl, sl, #65280	@ 0xff00
 801fd8a:	f001 14ff 	and.w	r4, r1, #16711935	@ 0xff00ff
 801fd8e:	fb07 f70a 	mul.w	r7, r7, sl
 801fd92:	ea4f 2818 	mov.w	r8, r8, lsr #8
 801fd96:	f40b 417f 	and.w	r1, fp, #65280	@ 0xff00
 801fd9a:	fb03 7101 	mla	r1, r3, r1, r7
 801fd9e:	ea4f 2919 	mov.w	r9, r9, lsr #8
 801fda2:	f408 487f 	and.w	r8, r8, #65280	@ 0xff00
 801fda6:	fb0e 1e08 	mla	lr, lr, r8, r1
 801fdaa:	f409 417f 	and.w	r1, r9, #65280	@ 0xff00
 801fdae:	fb00 e101 	mla	r1, r0, r1, lr
 801fdb2:	f89d 0050 	ldrb.w	r0, [sp, #80]	@ 0x50
 801fdb6:	9a00      	ldr	r2, [sp, #0]
 801fdb8:	b287      	uxth	r7, r0
 801fdba:	437a      	muls	r2, r7
 801fdbc:	0a09      	lsrs	r1, r1, #8
 801fdbe:	1c53      	adds	r3, r2, #1
 801fdc0:	f401 417f 	and.w	r1, r1, #65280	@ 0xff00
 801fdc4:	4321      	orrs	r1, r4
 801fdc6:	eb03 2312 	add.w	r3, r3, r2, lsr #8
 801fdca:	1235      	asrs	r5, r6, #8
 801fdcc:	0c0a      	lsrs	r2, r1, #16
 801fdce:	ea6f 2313 	mvn.w	r3, r3, lsr #8
 801fdd2:	b2db      	uxtb	r3, r3
 801fdd4:	fb12 f207 	smulbb	r2, r2, r7
 801fdd8:	f005 05f8 	and.w	r5, r5, #248	@ 0xf8
 801fddc:	fb05 2503 	mla	r5, r5, r3, r2
 801fde0:	f3c1 2407 	ubfx	r4, r1, #8, #8
 801fde4:	10f2      	asrs	r2, r6, #3
 801fde6:	b2c8      	uxtb	r0, r1
 801fde8:	00f6      	lsls	r6, r6, #3
 801fdea:	fb14 f407 	smulbb	r4, r4, r7
 801fdee:	f002 02fc 	and.w	r2, r2, #252	@ 0xfc
 801fdf2:	b2f6      	uxtb	r6, r6
 801fdf4:	fb10 f007 	smulbb	r0, r0, r7
 801fdf8:	fb02 4203 	mla	r2, r2, r3, r4
 801fdfc:	b2ad      	uxth	r5, r5
 801fdfe:	fb06 0303 	mla	r3, r6, r3, r0
 801fe02:	b299      	uxth	r1, r3
 801fe04:	b294      	uxth	r4, r2
 801fe06:	1c6b      	adds	r3, r5, #1
 801fe08:	eb03 2515 	add.w	r5, r3, r5, lsr #8
 801fe0c:	1c62      	adds	r2, r4, #1
 801fe0e:	1c4b      	adds	r3, r1, #1
 801fe10:	eb03 2311 	add.w	r3, r3, r1, lsr #8
 801fe14:	eb02 2214 	add.w	r2, r2, r4, lsr #8
 801fe18:	f405 4578 	and.w	r5, r5, #63488	@ 0xf800
 801fe1c:	f3c3 23c4 	ubfx	r3, r3, #11, #5
 801fe20:	0952      	lsrs	r2, r2, #5
 801fe22:	f402 62fc 	and.w	r2, r2, #2016	@ 0x7e0
 801fe26:	432b      	orrs	r3, r5
 801fe28:	4313      	orrs	r3, r2
 801fe2a:	9a02      	ldr	r2, [sp, #8]
 801fe2c:	8013      	strh	r3, [r2, #0]
 801fe2e:	b005      	add	sp, #20
 801fe30:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 801fe34:	2500      	movs	r5, #0
 801fe36:	e6e9      	b.n	801fc0c <_ZNK8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKmssiihhh+0x42>
 801fe38:	2100      	movs	r1, #0
 801fe3a:	460d      	mov	r5, r1
 801fe3c:	e6f3      	b.n	801fc26 <_ZNK8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKmssiihhh+0x5c>
 801fe3e:	2100      	movs	r1, #0
 801fe40:	e6f1      	b.n	801fc26 <_ZNK8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKmssiihhh+0x5c>
 801fe42:	4631      	mov	r1, r6
 801fe44:	e6ef      	b.n	801fc26 <_ZNK8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKmssiihhh+0x5c>
 801fe46:	2400      	movs	r4, #0
 801fe48:	e700      	b.n	801fc4c <_ZNK8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKmssiihhh+0x82>
 801fe4a:	2200      	movs	r2, #0
 801fe4c:	4614      	mov	r4, r2
 801fe4e:	e70b      	b.n	801fc68 <_ZNK8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKmssiihhh+0x9e>
 801fe50:	4602      	mov	r2, r0
 801fe52:	4604      	mov	r4, r0
 801fe54:	e708      	b.n	801fc68 <_ZNK8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKmssiihhh+0x9e>
 801fe56:	2200      	movs	r2, #0
 801fe58:	e706      	b.n	801fc68 <_ZNK8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKmssiihhh+0x9e>
 801fe5a:	4632      	mov	r2, r6
 801fe5c:	e704      	b.n	801fc68 <_ZNK8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKmssiihhh+0x9e>

0801fe5e <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff>:
 801fe5e:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 801fe62:	b09f      	sub	sp, #124	@ 0x7c
 801fe64:	921b      	str	r2, [sp, #108]	@ 0x6c
 801fe66:	9309      	str	r3, [sp, #36]	@ 0x24
 801fe68:	9a2d      	ldr	r2, [sp, #180]	@ 0xb4
 801fe6a:	f89d 30c4 	ldrb.w	r3, [sp, #196]	@ 0xc4
 801fe6e:	931c      	str	r3, [sp, #112]	@ 0x70
 801fe70:	9119      	str	r1, [sp, #100]	@ 0x64
 801fe72:	e9dd 132e 	ldrd	r1, r3, [sp, #184]	@ 0xb8
 801fe76:	901d      	str	r0, [sp, #116]	@ 0x74
 801fe78:	6850      	ldr	r0, [r2, #4]
 801fe7a:	6812      	ldr	r2, [r2, #0]
 801fe7c:	9d2a      	ldr	r5, [sp, #168]	@ 0xa8
 801fe7e:	fb00 1303 	mla	r3, r0, r3, r1
 801fe82:	eb02 0343 	add.w	r3, r2, r3, lsl #1
 801fe86:	930c      	str	r3, [sp, #48]	@ 0x30
 801fe88:	9b30      	ldr	r3, [sp, #192]	@ 0xc0
 801fe8a:	681b      	ldr	r3, [r3, #0]
 801fe8c:	9312      	str	r3, [sp, #72]	@ 0x48
 801fe8e:	9b30      	ldr	r3, [sp, #192]	@ 0xc0
 801fe90:	685e      	ldr	r6, [r3, #4]
 801fe92:	f8bd 3070 	ldrh.w	r3, [sp, #112]	@ 0x70
 801fe96:	930d      	str	r3, [sp, #52]	@ 0x34
 801fe98:	3604      	adds	r6, #4
 801fe9a:	9b19      	ldr	r3, [sp, #100]	@ 0x64
 801fe9c:	2b00      	cmp	r3, #0
 801fe9e:	dc03      	bgt.n	801fea8 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x4a>
 801fea0:	9b1b      	ldr	r3, [sp, #108]	@ 0x6c
 801fea2:	2b00      	cmp	r3, #0
 801fea4:	f340 8388 	ble.w	80205b8 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x75a>
 801fea8:	9b30      	ldr	r3, [sp, #192]	@ 0xc0
 801feaa:	f9b3 1008 	ldrsh.w	r1, [r3, #8]
 801feae:	f9b3 200c 	ldrsh.w	r2, [r3, #12]
 801feb2:	1e48      	subs	r0, r1, #1
 801feb4:	1e57      	subs	r7, r2, #1
 801feb6:	9b09      	ldr	r3, [sp, #36]	@ 0x24
 801feb8:	2b00      	cmp	r3, #0
 801feba:	f340 8195 	ble.w	80201e8 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x38a>
 801febe:	9c29      	ldr	r4, [sp, #164]	@ 0xa4
 801fec0:	ea5f 4c24 	movs.w	ip, r4, asr #16
 801fec4:	ea4f 4325 	mov.w	r3, r5, asr #16
 801fec8:	d406      	bmi.n	801fed8 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x7a>
 801feca:	4584      	cmp	ip, r0
 801fecc:	da04      	bge.n	801fed8 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x7a>
 801fece:	2b00      	cmp	r3, #0
 801fed0:	db02      	blt.n	801fed8 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x7a>
 801fed2:	42bb      	cmp	r3, r7
 801fed4:	f2c0 8189 	blt.w	80201ea <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x38c>
 801fed8:	f11c 0c01 	adds.w	ip, ip, #1
 801fedc:	f100 8177 	bmi.w	80201ce <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x370>
 801fee0:	4561      	cmp	r1, ip
 801fee2:	f2c0 8174 	blt.w	80201ce <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x370>
 801fee6:	3301      	adds	r3, #1
 801fee8:	f100 8171 	bmi.w	80201ce <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x370>
 801feec:	429a      	cmp	r2, r3
 801feee:	f2c0 816e 	blt.w	80201ce <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x370>
 801fef2:	9b09      	ldr	r3, [sp, #36]	@ 0x24
 801fef4:	9f0c      	ldr	r7, [sp, #48]	@ 0x30
 801fef6:	931a      	str	r3, [sp, #104]	@ 0x68
 801fef8:	9b1a      	ldr	r3, [sp, #104]	@ 0x68
 801fefa:	2b00      	cmp	r3, #0
 801fefc:	f340 8193 	ble.w	8020226 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3c8>
 801ff00:	9b29      	ldr	r3, [sp, #164]	@ 0xa4
 801ff02:	f3c3 3203 	ubfx	r2, r3, #12, #4
 801ff06:	9b30      	ldr	r3, [sp, #192]	@ 0xc0
 801ff08:	e9d3 0e02 	ldrd	r0, lr, [r3, #8]
 801ff0c:	9b29      	ldr	r3, [sp, #164]	@ 0xa4
 801ff0e:	141b      	asrs	r3, r3, #16
 801ff10:	ea4f 4c25 	mov.w	ip, r5, asr #16
 801ff14:	f3c5 3103 	ubfx	r1, r5, #12, #4
 801ff18:	f100 81d6 	bmi.w	80202c8 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x46a>
 801ff1c:	f100 38ff 	add.w	r8, r0, #4294967295
 801ff20:	4543      	cmp	r3, r8
 801ff22:	f280 81d1 	bge.w	80202c8 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x46a>
 801ff26:	f1bc 0f00 	cmp.w	ip, #0
 801ff2a:	f2c0 81cd 	blt.w	80202c8 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x46a>
 801ff2e:	f10e 38ff 	add.w	r8, lr, #4294967295
 801ff32:	45c4      	cmp	ip, r8
 801ff34:	f280 81c8 	bge.w	80202c8 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x46a>
 801ff38:	b200      	sxth	r0, r0
 801ff3a:	fb0c 3300 	mla	r3, ip, r0, r3
 801ff3e:	9c12      	ldr	r4, [sp, #72]	@ 0x48
 801ff40:	eb04 0803 	add.w	r8, r4, r3
 801ff44:	5ce3      	ldrb	r3, [r4, r3]
 801ff46:	f856 3023 	ldr.w	r3, [r6, r3, lsl #2]
 801ff4a:	ea4f 6e13 	mov.w	lr, r3, lsr #24
 801ff4e:	2a00      	cmp	r2, #0
 801ff50:	f000 81af 	beq.w	80202b2 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x454>
 801ff54:	f898 c001 	ldrb.w	ip, [r8, #1]
 801ff58:	f856 402c 	ldr.w	r4, [r6, ip, lsl #2]
 801ff5c:	940e      	str	r4, [sp, #56]	@ 0x38
 801ff5e:	0e24      	lsrs	r4, r4, #24
 801ff60:	9415      	str	r4, [sp, #84]	@ 0x54
 801ff62:	b179      	cbz	r1, 801ff84 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x126>
 801ff64:	eb08 0c00 	add.w	ip, r8, r0
 801ff68:	f818 0000 	ldrb.w	r0, [r8, r0]
 801ff6c:	f856 0020 	ldr.w	r0, [r6, r0, lsl #2]
 801ff70:	900a      	str	r0, [sp, #40]	@ 0x28
 801ff72:	0e00      	lsrs	r0, r0, #24
 801ff74:	9013      	str	r0, [sp, #76]	@ 0x4c
 801ff76:	f89c 0001 	ldrb.w	r0, [ip, #1]
 801ff7a:	f856 0020 	ldr.w	r0, [r6, r0, lsl #2]
 801ff7e:	900f      	str	r0, [sp, #60]	@ 0x3c
 801ff80:	0e00      	lsrs	r0, r0, #24
 801ff82:	9016      	str	r0, [sp, #88]	@ 0x58
 801ff84:	b292      	uxth	r2, r2
 801ff86:	b289      	uxth	r1, r1
 801ff88:	fb02 f901 	mul.w	r9, r2, r1
 801ff8c:	ebc9 1101 	rsb	r1, r9, r1, lsl #4
 801ff90:	0112      	lsls	r2, r2, #4
 801ff92:	eba2 0809 	sub.w	r8, r2, r9
 801ff96:	b289      	uxth	r1, r1
 801ff98:	f5c2 7280 	rsb	r2, r2, #256	@ 0x100
 801ff9c:	9815      	ldr	r0, [sp, #84]	@ 0x54
 801ff9e:	9c13      	ldr	r4, [sp, #76]	@ 0x4c
 801ffa0:	fa1f f888 	uxth.w	r8, r8
 801ffa4:	1a52      	subs	r2, r2, r1
 801ffa6:	b292      	uxth	r2, r2
 801ffa8:	fb08 f000 	mul.w	r0, r8, r0
 801ffac:	fb02 000e 	mla	r0, r2, lr, r0
 801ffb0:	fb01 0004 	mla	r0, r1, r4, r0
 801ffb4:	9c16      	ldr	r4, [sp, #88]	@ 0x58
 801ffb6:	fb09 0004 	mla	r0, r9, r4, r0
 801ffba:	f3c0 2007 	ubfx	r0, r0, #8, #8
 801ffbe:	2800      	cmp	r0, #0
 801ffc0:	f000 80fa 	beq.w	80201b8 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x35a>
 801ffc4:	f1be 0fff 	cmp.w	lr, #255	@ 0xff
 801ffc8:	d01b      	beq.n	8020002 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1a4>
 801ffca:	f003 1aff 	and.w	sl, r3, #16711935	@ 0xff00ff
 801ffce:	fb0e fa0a 	mul.w	sl, lr, sl
 801ffd2:	f403 437f 	and.w	r3, r3, #65280	@ 0xff00
 801ffd6:	fb0e fe03 	mul.w	lr, lr, r3
 801ffda:	ea4f 231a 	mov.w	r3, sl, lsr #8
 801ffde:	f003 13ff 	and.w	r3, r3, #16711935	@ 0xff00ff
 801ffe2:	f10a 1a01 	add.w	sl, sl, #65537	@ 0x10001
 801ffe6:	f50e 7c80 	add.w	ip, lr, #256	@ 0x100
 801ffea:	4453      	add	r3, sl
 801ffec:	eb0c 2c1e 	add.w	ip, ip, lr, lsr #8
 801fff0:	0a1b      	lsrs	r3, r3, #8
 801fff2:	ea4f 2c1c 	mov.w	ip, ip, lsr #8
 801fff6:	f003 13ff 	and.w	r3, r3, #16711935	@ 0xff00ff
 801fffa:	f40c 4c7f 	and.w	ip, ip, #65280	@ 0xff00
 801fffe:	ea43 030c 	orr.w	r3, r3, ip
 8020002:	9c15      	ldr	r4, [sp, #84]	@ 0x54
 8020004:	2cff      	cmp	r4, #255	@ 0xff
 8020006:	d021      	beq.n	802004c <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1ee>
 8020008:	9c0e      	ldr	r4, [sp, #56]	@ 0x38
 802000a:	f004 1bff 	and.w	fp, r4, #16711935	@ 0xff00ff
 802000e:	9c15      	ldr	r4, [sp, #84]	@ 0x54
 8020010:	fb04 fb0b 	mul.w	fp, r4, fp
 8020014:	9c0e      	ldr	r4, [sp, #56]	@ 0x38
 8020016:	f404 4a7f 	and.w	sl, r4, #65280	@ 0xff00
 802001a:	9c15      	ldr	r4, [sp, #84]	@ 0x54
 802001c:	ea4f 2e1b 	mov.w	lr, fp, lsr #8
 8020020:	fb04 fa0a 	mul.w	sl, r4, sl
 8020024:	f00e 1eff 	and.w	lr, lr, #16711935	@ 0xff00ff
 8020028:	f10b 1b01 	add.w	fp, fp, #65537	@ 0x10001
 802002c:	f50a 7c80 	add.w	ip, sl, #256	@ 0x100
 8020030:	44de      	add	lr, fp
 8020032:	eb0c 2a1a 	add.w	sl, ip, sl, lsr #8
 8020036:	ea4f 2e1e 	mov.w	lr, lr, lsr #8
 802003a:	ea4f 2a1a 	mov.w	sl, sl, lsr #8
 802003e:	f00e 1eff 	and.w	lr, lr, #16711935	@ 0xff00ff
 8020042:	f40a 4a7f 	and.w	sl, sl, #65280	@ 0xff00
 8020046:	ea4e 040a 	orr.w	r4, lr, sl
 802004a:	940e      	str	r4, [sp, #56]	@ 0x38
 802004c:	9c13      	ldr	r4, [sp, #76]	@ 0x4c
 802004e:	2cff      	cmp	r4, #255	@ 0xff
 8020050:	d021      	beq.n	8020096 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x238>
 8020052:	9c0a      	ldr	r4, [sp, #40]	@ 0x28
 8020054:	f004 1bff 	and.w	fp, r4, #16711935	@ 0xff00ff
 8020058:	9c13      	ldr	r4, [sp, #76]	@ 0x4c
 802005a:	fb04 fb0b 	mul.w	fp, r4, fp
 802005e:	9c0a      	ldr	r4, [sp, #40]	@ 0x28
 8020060:	f404 4a7f 	and.w	sl, r4, #65280	@ 0xff00
 8020064:	9c13      	ldr	r4, [sp, #76]	@ 0x4c
 8020066:	ea4f 2e1b 	mov.w	lr, fp, lsr #8
 802006a:	fb04 fa0a 	mul.w	sl, r4, sl
 802006e:	f00e 1eff 	and.w	lr, lr, #16711935	@ 0xff00ff
 8020072:	f10b 1b01 	add.w	fp, fp, #65537	@ 0x10001
 8020076:	f50a 7c80 	add.w	ip, sl, #256	@ 0x100
 802007a:	44de      	add	lr, fp
 802007c:	eb0c 2a1a 	add.w	sl, ip, sl, lsr #8
 8020080:	ea4f 2e1e 	mov.w	lr, lr, lsr #8
 8020084:	ea4f 2a1a 	mov.w	sl, sl, lsr #8
 8020088:	f00e 1eff 	and.w	lr, lr, #16711935	@ 0xff00ff
 802008c:	f40a 4a7f 	and.w	sl, sl, #65280	@ 0xff00
 8020090:	ea4e 040a 	orr.w	r4, lr, sl
 8020094:	940a      	str	r4, [sp, #40]	@ 0x28
 8020096:	9c16      	ldr	r4, [sp, #88]	@ 0x58
 8020098:	2cff      	cmp	r4, #255	@ 0xff
 802009a:	d021      	beq.n	80200e0 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x282>
 802009c:	9c0f      	ldr	r4, [sp, #60]	@ 0x3c
 802009e:	f004 1bff 	and.w	fp, r4, #16711935	@ 0xff00ff
 80200a2:	9c16      	ldr	r4, [sp, #88]	@ 0x58
 80200a4:	fb04 fb0b 	mul.w	fp, r4, fp
 80200a8:	9c0f      	ldr	r4, [sp, #60]	@ 0x3c
 80200aa:	f404 4a7f 	and.w	sl, r4, #65280	@ 0xff00
 80200ae:	9c16      	ldr	r4, [sp, #88]	@ 0x58
 80200b0:	ea4f 2e1b 	mov.w	lr, fp, lsr #8
 80200b4:	fb04 fa0a 	mul.w	sl, r4, sl
 80200b8:	f00e 1eff 	and.w	lr, lr, #16711935	@ 0xff00ff
 80200bc:	f10b 1b01 	add.w	fp, fp, #65537	@ 0x10001
 80200c0:	f50a 7c80 	add.w	ip, sl, #256	@ 0x100
 80200c4:	44de      	add	lr, fp
 80200c6:	eb0c 2a1a 	add.w	sl, ip, sl, lsr #8
 80200ca:	ea4f 2e1e 	mov.w	lr, lr, lsr #8
 80200ce:	ea4f 2a1a 	mov.w	sl, sl, lsr #8
 80200d2:	f00e 1eff 	and.w	lr, lr, #16711935	@ 0xff00ff
 80200d6:	f40a 4a7f 	and.w	sl, sl, #65280	@ 0xff00
 80200da:	ea4e 040a 	orr.w	r4, lr, sl
 80200de:	940f      	str	r4, [sp, #60]	@ 0x3c
 80200e0:	9c0e      	ldr	r4, [sp, #56]	@ 0x38
 80200e2:	f004 1cff 	and.w	ip, r4, #16711935	@ 0xff00ff
 80200e6:	9c0a      	ldr	r4, [sp, #40]	@ 0x28
 80200e8:	f003 1eff 	and.w	lr, r3, #16711935	@ 0xff00ff
 80200ec:	fb08 fc0c 	mul.w	ip, r8, ip
 80200f0:	fb02 cc0e 	mla	ip, r2, lr, ip
 80200f4:	f004 1eff 	and.w	lr, r4, #16711935	@ 0xff00ff
 80200f8:	9c0f      	ldr	r4, [sp, #60]	@ 0x3c
 80200fa:	fb01 cc0e 	mla	ip, r1, lr, ip
 80200fe:	f004 1eff 	and.w	lr, r4, #16711935	@ 0xff00ff
 8020102:	9c0e      	ldr	r4, [sp, #56]	@ 0x38
 8020104:	fb09 cc0e 	mla	ip, r9, lr, ip
 8020108:	f404 4e7f 	and.w	lr, r4, #65280	@ 0xff00
 802010c:	fb08 f80e 	mul.w	r8, r8, lr
 8020110:	f403 437f 	and.w	r3, r3, #65280	@ 0xff00
 8020114:	fb02 8303 	mla	r3, r2, r3, r8
 8020118:	9a0a      	ldr	r2, [sp, #40]	@ 0x28
 802011a:	9c0d      	ldr	r4, [sp, #52]	@ 0x34
 802011c:	f402 4a7f 	and.w	sl, r2, #65280	@ 0xff00
 8020120:	9a0f      	ldr	r2, [sp, #60]	@ 0x3c
 8020122:	fb01 330a 	mla	r3, r1, sl, r3
 8020126:	f402 417f 	and.w	r1, r2, #65280	@ 0xff00
 802012a:	9a0d      	ldr	r2, [sp, #52]	@ 0x34
 802012c:	fb09 3901 	mla	r9, r9, r1, r3
 8020130:	4342      	muls	r2, r0
 8020132:	ea4f 2c1c 	mov.w	ip, ip, lsr #8
 8020136:	ea4f 2919 	mov.w	r9, r9, lsr #8
 802013a:	883b      	ldrh	r3, [r7, #0]
 802013c:	1c50      	adds	r0, r2, #1
 802013e:	f00c 1cff 	and.w	ip, ip, #16711935	@ 0xff00ff
 8020142:	f409 497f 	and.w	r9, r9, #65280	@ 0xff00
 8020146:	ea4c 0c09 	orr.w	ip, ip, r9
 802014a:	eb00 2012 	add.w	r0, r0, r2, lsr #8
 802014e:	1219      	asrs	r1, r3, #8
 8020150:	ea4f 421c 	mov.w	r2, ip, lsr #16
 8020154:	ea6f 2010 	mvn.w	r0, r0, lsr #8
 8020158:	b2c0      	uxtb	r0, r0
 802015a:	fb12 f204 	smulbb	r2, r2, r4
 802015e:	f001 01f8 	and.w	r1, r1, #248	@ 0xf8
 8020162:	fb01 2100 	mla	r1, r1, r0, r2
 8020166:	f3cc 2e07 	ubfx	lr, ip, #8, #8
 802016a:	10da      	asrs	r2, r3, #3
 802016c:	fa5f fc8c 	uxtb.w	ip, ip
 8020170:	00db      	lsls	r3, r3, #3
 8020172:	fb1c fc04 	smulbb	ip, ip, r4
 8020176:	b2db      	uxtb	r3, r3
 8020178:	b289      	uxth	r1, r1
 802017a:	fb03 c300 	mla	r3, r3, r0, ip
 802017e:	fa1f fc83 	uxth.w	ip, r3
 8020182:	1c4b      	adds	r3, r1, #1
 8020184:	eb03 2111 	add.w	r1, r3, r1, lsr #8
 8020188:	f002 02fc 	and.w	r2, r2, #252	@ 0xfc
 802018c:	fb1e fe04 	smulbb	lr, lr, r4
 8020190:	f10c 0301 	add.w	r3, ip, #1
 8020194:	fb02 e200 	mla	r2, r2, r0, lr
 8020198:	eb03 231c 	add.w	r3, r3, ip, lsr #8
 802019c:	b292      	uxth	r2, r2
 802019e:	f401 4178 	and.w	r1, r1, #63488	@ 0xf800
 80201a2:	f3c3 23c4 	ubfx	r3, r3, #11, #5
 80201a6:	430b      	orrs	r3, r1
 80201a8:	1c51      	adds	r1, r2, #1
 80201aa:	eb01 2212 	add.w	r2, r1, r2, lsr #8
 80201ae:	0952      	lsrs	r2, r2, #5
 80201b0:	f402 62fc 	and.w	r2, r2, #2016	@ 0x7e0
 80201b4:	4313      	orrs	r3, r2
 80201b6:	803b      	strh	r3, [r7, #0]
 80201b8:	9b2b      	ldr	r3, [sp, #172]	@ 0xac
 80201ba:	9a29      	ldr	r2, [sp, #164]	@ 0xa4
 80201bc:	441a      	add	r2, r3
 80201be:	9b2c      	ldr	r3, [sp, #176]	@ 0xb0
 80201c0:	9229      	str	r2, [sp, #164]	@ 0xa4
 80201c2:	441d      	add	r5, r3
 80201c4:	9b1a      	ldr	r3, [sp, #104]	@ 0x68
 80201c6:	3b01      	subs	r3, #1
 80201c8:	3702      	adds	r7, #2
 80201ca:	931a      	str	r3, [sp, #104]	@ 0x68
 80201cc:	e694      	b.n	801fef8 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x9a>
 80201ce:	9b2b      	ldr	r3, [sp, #172]	@ 0xac
 80201d0:	9c29      	ldr	r4, [sp, #164]	@ 0xa4
 80201d2:	441c      	add	r4, r3
 80201d4:	9b2c      	ldr	r3, [sp, #176]	@ 0xb0
 80201d6:	9429      	str	r4, [sp, #164]	@ 0xa4
 80201d8:	441d      	add	r5, r3
 80201da:	9b09      	ldr	r3, [sp, #36]	@ 0x24
 80201dc:	3b01      	subs	r3, #1
 80201de:	9309      	str	r3, [sp, #36]	@ 0x24
 80201e0:	9b0c      	ldr	r3, [sp, #48]	@ 0x30
 80201e2:	3302      	adds	r3, #2
 80201e4:	930c      	str	r3, [sp, #48]	@ 0x30
 80201e6:	e666      	b.n	801feb6 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x58>
 80201e8:	d024      	beq.n	8020234 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3d6>
 80201ea:	9b09      	ldr	r3, [sp, #36]	@ 0x24
 80201ec:	982b      	ldr	r0, [sp, #172]	@ 0xac
 80201ee:	9c29      	ldr	r4, [sp, #164]	@ 0xa4
 80201f0:	3b01      	subs	r3, #1
 80201f2:	fb00 4003 	mla	r0, r0, r3, r4
 80201f6:	1400      	asrs	r0, r0, #16
 80201f8:	f53f ae7b 	bmi.w	801fef2 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x94>
 80201fc:	3901      	subs	r1, #1
 80201fe:	4288      	cmp	r0, r1
 8020200:	f6bf ae77 	bge.w	801fef2 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x94>
 8020204:	992c      	ldr	r1, [sp, #176]	@ 0xb0
 8020206:	fb01 5303 	mla	r3, r1, r3, r5
 802020a:	141b      	asrs	r3, r3, #16
 802020c:	f53f ae71 	bmi.w	801fef2 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x94>
 8020210:	3a01      	subs	r2, #1
 8020212:	4293      	cmp	r3, r2
 8020214:	f6bf ae6d 	bge.w	801fef2 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x94>
 8020218:	f8dd b024 	ldr.w	fp, [sp, #36]	@ 0x24
 802021c:	f8dd 9030 	ldr.w	r9, [sp, #48]	@ 0x30
 8020220:	f1bb 0f00 	cmp.w	fp, #0
 8020224:	dc70      	bgt.n	8020308 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x4aa>
 8020226:	9b09      	ldr	r3, [sp, #36]	@ 0x24
 8020228:	ea23 74e3 	bic.w	r4, r3, r3, asr #31
 802022c:	9b0c      	ldr	r3, [sp, #48]	@ 0x30
 802022e:	eb03 0344 	add.w	r3, r3, r4, lsl #1
 8020232:	930c      	str	r3, [sp, #48]	@ 0x30
 8020234:	9b19      	ldr	r3, [sp, #100]	@ 0x64
 8020236:	2b00      	cmp	r3, #0
 8020238:	f340 81be 	ble.w	80205b8 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x75a>
 802023c:	ee30 0a04 	vadd.f32	s0, s0, s8
 8020240:	eeb7 7a00 	vmov.f32	s14, #112	@ 0x3f800000  1.0
 8020244:	eec7 7a00 	vdiv.f32	s15, s14, s0
 8020248:	9b28      	ldr	r3, [sp, #160]	@ 0xa0
 802024a:	ee70 0aa4 	vadd.f32	s1, s1, s9
 802024e:	ee31 1a05 	vadd.f32	s2, s2, s10
 8020252:	ee20 7aa7 	vmul.f32	s14, s1, s15
 8020256:	eef0 6a62 	vmov.f32	s13, s5
 802025a:	ee61 7a27 	vmul.f32	s15, s2, s15
 802025e:	eefe 6ac8 	vcvt.s32.f32	s13, s13, #16
 8020262:	ee77 2a62 	vsub.f32	s5, s14, s5
 8020266:	edcd 6a29 	vstr	s13, [sp, #164]	@ 0xa4
 802026a:	eefe 2ac8 	vcvt.s32.f32	s5, s5, #16
 802026e:	eef0 6a43 	vmov.f32	s13, s6
 8020272:	ee37 3ac3 	vsub.f32	s6, s15, s6
 8020276:	ee12 2a90 	vmov	r2, s5
 802027a:	eebe 3ac8 	vcvt.s32.f32	s6, s6, #16
 802027e:	fb92 f3f3 	sdiv	r3, r2, r3
 8020282:	ee13 2a10 	vmov	r2, s6
 8020286:	932b      	str	r3, [sp, #172]	@ 0xac
 8020288:	9b28      	ldr	r3, [sp, #160]	@ 0xa0
 802028a:	fb92 f3f3 	sdiv	r3, r2, r3
 802028e:	932c      	str	r3, [sp, #176]	@ 0xb0
 8020290:	9b19      	ldr	r3, [sp, #100]	@ 0x64
 8020292:	9a1b      	ldr	r2, [sp, #108]	@ 0x6c
 8020294:	3b01      	subs	r3, #1
 8020296:	eefe 6ac8 	vcvt.s32.f32	s13, s13, #16
 802029a:	9319      	str	r3, [sp, #100]	@ 0x64
 802029c:	9b28      	ldr	r3, [sp, #160]	@ 0xa0
 802029e:	bf08      	it	eq
 80202a0:	4613      	moveq	r3, r2
 80202a2:	ee16 5a90 	vmov	r5, s13
 80202a6:	9309      	str	r3, [sp, #36]	@ 0x24
 80202a8:	eeb0 3a67 	vmov.f32	s6, s15
 80202ac:	eef0 2a47 	vmov.f32	s5, s14
 80202b0:	e5f3      	b.n	801fe9a <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3c>
 80202b2:	2900      	cmp	r1, #0
 80202b4:	f43f ae66 	beq.w	801ff84 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x126>
 80202b8:	f818 0000 	ldrb.w	r0, [r8, r0]
 80202bc:	f856 0020 	ldr.w	r0, [r6, r0, lsl #2]
 80202c0:	900a      	str	r0, [sp, #40]	@ 0x28
 80202c2:	0e00      	lsrs	r0, r0, #24
 80202c4:	9013      	str	r0, [sp, #76]	@ 0x4c
 80202c6:	e65d      	b.n	801ff84 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x126>
 80202c8:	f113 0801 	adds.w	r8, r3, #1
 80202cc:	f53f af74 	bmi.w	80201b8 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x35a>
 80202d0:	4540      	cmp	r0, r8
 80202d2:	f6ff af71 	blt.w	80201b8 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x35a>
 80202d6:	f11c 0801 	adds.w	r8, ip, #1
 80202da:	f53f af6d 	bmi.w	80201b8 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x35a>
 80202de:	45c6      	cmp	lr, r8
 80202e0:	f6ff af6a 	blt.w	80201b8 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x35a>
 80202e4:	9c1c      	ldr	r4, [sp, #112]	@ 0x70
 80202e6:	9302      	str	r3, [sp, #8]
 80202e8:	b200      	sxth	r0, r0
 80202ea:	fa0f f38e 	sxth.w	r3, lr
 80202ee:	e9cd 1405 	strd	r1, r4, [sp, #20]
 80202f2:	e9cd c203 	strd	ip, r2, [sp, #12]
 80202f6:	9301      	str	r3, [sp, #4]
 80202f8:	9000      	str	r0, [sp, #0]
 80202fa:	4633      	mov	r3, r6
 80202fc:	9a12      	ldr	r2, [sp, #72]	@ 0x48
 80202fe:	981d      	ldr	r0, [sp, #116]	@ 0x74
 8020300:	4639      	mov	r1, r7
 8020302:	f7ff fc62 	bl	801fbca <_ZNK8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKmssiihhh>
 8020306:	e757      	b.n	80201b8 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x35a>
 8020308:	9b29      	ldr	r3, [sp, #164]	@ 0xa4
 802030a:	9c29      	ldr	r4, [sp, #164]	@ 0xa4
 802030c:	f3c3 3203 	ubfx	r2, r3, #12, #4
 8020310:	9b30      	ldr	r3, [sp, #192]	@ 0xc0
 8020312:	f9b3 1008 	ldrsh.w	r1, [r3, #8]
 8020316:	1427      	asrs	r7, r4, #16
 8020318:	142b      	asrs	r3, r5, #16
 802031a:	fb01 7303 	mla	r3, r1, r3, r7
 802031e:	9c12      	ldr	r4, [sp, #72]	@ 0x48
 8020320:	18e7      	adds	r7, r4, r3
 8020322:	5ce3      	ldrb	r3, [r4, r3]
 8020324:	f856 3023 	ldr.w	r3, [r6, r3, lsl #2]
 8020328:	f3c5 3003 	ubfx	r0, r5, #12, #4
 802032c:	ea4f 6c13 	mov.w	ip, r3, lsr #24
 8020330:	2a00      	cmp	r2, #0
 8020332:	f000 8137 	beq.w	80205a4 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x746>
 8020336:	f897 e001 	ldrb.w	lr, [r7, #1]
 802033a:	f856 402e 	ldr.w	r4, [r6, lr, lsl #2]
 802033e:	9410      	str	r4, [sp, #64]	@ 0x40
 8020340:	0e24      	lsrs	r4, r4, #24
 8020342:	9417      	str	r4, [sp, #92]	@ 0x5c
 8020344:	b170      	cbz	r0, 8020364 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x506>
 8020346:	eb07 0e01 	add.w	lr, r7, r1
 802034a:	5c79      	ldrb	r1, [r7, r1]
 802034c:	f856 1021 	ldr.w	r1, [r6, r1, lsl #2]
 8020350:	910b      	str	r1, [sp, #44]	@ 0x2c
 8020352:	0e09      	lsrs	r1, r1, #24
 8020354:	9114      	str	r1, [sp, #80]	@ 0x50
 8020356:	f89e 1001 	ldrb.w	r1, [lr, #1]
 802035a:	f856 1021 	ldr.w	r1, [r6, r1, lsl #2]
 802035e:	9111      	str	r1, [sp, #68]	@ 0x44
 8020360:	0e09      	lsrs	r1, r1, #24
 8020362:	9118      	str	r1, [sp, #96]	@ 0x60
 8020364:	b292      	uxth	r2, r2
 8020366:	b280      	uxth	r0, r0
 8020368:	fb02 f800 	mul.w	r8, r2, r0
 802036c:	ebc8 1000 	rsb	r0, r8, r0, lsl #4
 8020370:	0112      	lsls	r2, r2, #4
 8020372:	eba2 0e08 	sub.w	lr, r2, r8
 8020376:	b280      	uxth	r0, r0
 8020378:	f5c2 7280 	rsb	r2, r2, #256	@ 0x100
 802037c:	9917      	ldr	r1, [sp, #92]	@ 0x5c
 802037e:	9c14      	ldr	r4, [sp, #80]	@ 0x50
 8020380:	fa1f fe8e 	uxth.w	lr, lr
 8020384:	1a12      	subs	r2, r2, r0
 8020386:	b292      	uxth	r2, r2
 8020388:	fb0e f101 	mul.w	r1, lr, r1
 802038c:	fb02 110c 	mla	r1, r2, ip, r1
 8020390:	fb00 1104 	mla	r1, r0, r4, r1
 8020394:	9c18      	ldr	r4, [sp, #96]	@ 0x60
 8020396:	fb08 1104 	mla	r1, r8, r4, r1
 802039a:	f3c1 2107 	ubfx	r1, r1, #8, #8
 802039e:	2900      	cmp	r1, #0
 80203a0:	f000 80f5 	beq.w	802058e <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x730>
 80203a4:	f1bc 0fff 	cmp.w	ip, #255	@ 0xff
 80203a8:	d019      	beq.n	80203de <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x580>
 80203aa:	f003 1aff 	and.w	sl, r3, #16711935	@ 0xff00ff
 80203ae:	fb0c fa0a 	mul.w	sl, ip, sl
 80203b2:	f403 437f 	and.w	r3, r3, #65280	@ 0xff00
 80203b6:	fb0c fc03 	mul.w	ip, ip, r3
 80203ba:	ea4f 231a 	mov.w	r3, sl, lsr #8
 80203be:	f003 13ff 	and.w	r3, r3, #16711935	@ 0xff00ff
 80203c2:	f10a 1a01 	add.w	sl, sl, #65537	@ 0x10001
 80203c6:	f50c 7780 	add.w	r7, ip, #256	@ 0x100
 80203ca:	4453      	add	r3, sl
 80203cc:	eb07 271c 	add.w	r7, r7, ip, lsr #8
 80203d0:	0a1b      	lsrs	r3, r3, #8
 80203d2:	0a3f      	lsrs	r7, r7, #8
 80203d4:	f003 13ff 	and.w	r3, r3, #16711935	@ 0xff00ff
 80203d8:	f407 477f 	and.w	r7, r7, #65280	@ 0xff00
 80203dc:	433b      	orrs	r3, r7
 80203de:	9c17      	ldr	r4, [sp, #92]	@ 0x5c
 80203e0:	2cff      	cmp	r4, #255	@ 0xff
 80203e2:	d020      	beq.n	8020426 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x5c8>
 80203e4:	9c10      	ldr	r4, [sp, #64]	@ 0x40
 80203e6:	f004 17ff 	and.w	r7, r4, #16711935	@ 0xff00ff
 80203ea:	9c17      	ldr	r4, [sp, #92]	@ 0x5c
 80203ec:	4367      	muls	r7, r4
 80203ee:	9c10      	ldr	r4, [sp, #64]	@ 0x40
 80203f0:	f404 4a7f 	and.w	sl, r4, #65280	@ 0xff00
 80203f4:	9c17      	ldr	r4, [sp, #92]	@ 0x5c
 80203f6:	ea4f 2c17 	mov.w	ip, r7, lsr #8
 80203fa:	fb04 fa0a 	mul.w	sl, r4, sl
 80203fe:	f107 1701 	add.w	r7, r7, #65537	@ 0x10001
 8020402:	f00c 1cff 	and.w	ip, ip, #16711935	@ 0xff00ff
 8020406:	44bc      	add	ip, r7
 8020408:	f50a 7780 	add.w	r7, sl, #256	@ 0x100
 802040c:	eb07 2a1a 	add.w	sl, r7, sl, lsr #8
 8020410:	ea4f 2c1c 	mov.w	ip, ip, lsr #8
 8020414:	ea4f 2a1a 	mov.w	sl, sl, lsr #8
 8020418:	f00c 1cff 	and.w	ip, ip, #16711935	@ 0xff00ff
 802041c:	f40a 4a7f 	and.w	sl, sl, #65280	@ 0xff00
 8020420:	ea4c 040a 	orr.w	r4, ip, sl
 8020424:	9410      	str	r4, [sp, #64]	@ 0x40
 8020426:	9c14      	ldr	r4, [sp, #80]	@ 0x50
 8020428:	2cff      	cmp	r4, #255	@ 0xff
 802042a:	d020      	beq.n	802046e <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x610>
 802042c:	9c0b      	ldr	r4, [sp, #44]	@ 0x2c
 802042e:	f004 17ff 	and.w	r7, r4, #16711935	@ 0xff00ff
 8020432:	9c14      	ldr	r4, [sp, #80]	@ 0x50
 8020434:	4367      	muls	r7, r4
 8020436:	9c0b      	ldr	r4, [sp, #44]	@ 0x2c
 8020438:	f404 4a7f 	and.w	sl, r4, #65280	@ 0xff00
 802043c:	9c14      	ldr	r4, [sp, #80]	@ 0x50
 802043e:	ea4f 2c17 	mov.w	ip, r7, lsr #8
 8020442:	fb04 fa0a 	mul.w	sl, r4, sl
 8020446:	f107 1701 	add.w	r7, r7, #65537	@ 0x10001
 802044a:	f00c 1cff 	and.w	ip, ip, #16711935	@ 0xff00ff
 802044e:	44bc      	add	ip, r7
 8020450:	f50a 7780 	add.w	r7, sl, #256	@ 0x100
 8020454:	eb07 2a1a 	add.w	sl, r7, sl, lsr #8
 8020458:	ea4f 2c1c 	mov.w	ip, ip, lsr #8
 802045c:	ea4f 2a1a 	mov.w	sl, sl, lsr #8
 8020460:	f00c 1cff 	and.w	ip, ip, #16711935	@ 0xff00ff
 8020464:	f40a 4a7f 	and.w	sl, sl, #65280	@ 0xff00
 8020468:	ea4c 040a 	orr.w	r4, ip, sl
 802046c:	940b      	str	r4, [sp, #44]	@ 0x2c
 802046e:	9c18      	ldr	r4, [sp, #96]	@ 0x60
 8020470:	2cff      	cmp	r4, #255	@ 0xff
 8020472:	d020      	beq.n	80204b6 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x658>
 8020474:	9c11      	ldr	r4, [sp, #68]	@ 0x44
 8020476:	f004 17ff 	and.w	r7, r4, #16711935	@ 0xff00ff
 802047a:	9c18      	ldr	r4, [sp, #96]	@ 0x60
 802047c:	4367      	muls	r7, r4
 802047e:	9c11      	ldr	r4, [sp, #68]	@ 0x44
 8020480:	f404 4a7f 	and.w	sl, r4, #65280	@ 0xff00
 8020484:	9c18      	ldr	r4, [sp, #96]	@ 0x60
 8020486:	ea4f 2c17 	mov.w	ip, r7, lsr #8
 802048a:	fb04 fa0a 	mul.w	sl, r4, sl
 802048e:	f107 1701 	add.w	r7, r7, #65537	@ 0x10001
 8020492:	f00c 1cff 	and.w	ip, ip, #16711935	@ 0xff00ff
 8020496:	44bc      	add	ip, r7
 8020498:	f50a 7780 	add.w	r7, sl, #256	@ 0x100
 802049c:	eb07 2a1a 	add.w	sl, r7, sl, lsr #8
 80204a0:	ea4f 2c1c 	mov.w	ip, ip, lsr #8
 80204a4:	ea4f 2a1a 	mov.w	sl, sl, lsr #8
 80204a8:	f00c 1cff 	and.w	ip, ip, #16711935	@ 0xff00ff
 80204ac:	f40a 4a7f 	and.w	sl, sl, #65280	@ 0xff00
 80204b0:	ea4c 040a 	orr.w	r4, ip, sl
 80204b4:	9411      	str	r4, [sp, #68]	@ 0x44
 80204b6:	9c10      	ldr	r4, [sp, #64]	@ 0x40
 80204b8:	f004 17ff 	and.w	r7, r4, #16711935	@ 0xff00ff
 80204bc:	9c0b      	ldr	r4, [sp, #44]	@ 0x2c
 80204be:	f003 1cff 	and.w	ip, r3, #16711935	@ 0xff00ff
 80204c2:	fb0e f707 	mul.w	r7, lr, r7
 80204c6:	fb02 770c 	mla	r7, r2, ip, r7
 80204ca:	f004 1cff 	and.w	ip, r4, #16711935	@ 0xff00ff
 80204ce:	9c11      	ldr	r4, [sp, #68]	@ 0x44
 80204d0:	fb00 770c 	mla	r7, r0, ip, r7
 80204d4:	f004 1cff 	and.w	ip, r4, #16711935	@ 0xff00ff
 80204d8:	9c10      	ldr	r4, [sp, #64]	@ 0x40
 80204da:	fb08 770c 	mla	r7, r8, ip, r7
 80204de:	f404 4c7f 	and.w	ip, r4, #65280	@ 0xff00
 80204e2:	fb0e fe0c 	mul.w	lr, lr, ip
 80204e6:	f403 437f 	and.w	r3, r3, #65280	@ 0xff00
 80204ea:	fb02 e303 	mla	r3, r2, r3, lr
 80204ee:	9a0b      	ldr	r2, [sp, #44]	@ 0x2c
 80204f0:	9c0d      	ldr	r4, [sp, #52]	@ 0x34
 80204f2:	f402 4a7f 	and.w	sl, r2, #65280	@ 0xff00
 80204f6:	9a11      	ldr	r2, [sp, #68]	@ 0x44
 80204f8:	fb00 330a 	mla	r3, r0, sl, r3
 80204fc:	f402 4c7f 	and.w	ip, r2, #65280	@ 0xff00
 8020500:	fb08 3c0c 	mla	ip, r8, ip, r3
 8020504:	9b0d      	ldr	r3, [sp, #52]	@ 0x34
 8020506:	f8b9 0000 	ldrh.w	r0, [r9]
 802050a:	434b      	muls	r3, r1
 802050c:	0a3f      	lsrs	r7, r7, #8
 802050e:	ea4f 2c1c 	mov.w	ip, ip, lsr #8
 8020512:	f40c 4c7f 	and.w	ip, ip, #65280	@ 0xff00
 8020516:	1c59      	adds	r1, r3, #1
 8020518:	f007 17ff 	and.w	r7, r7, #16711935	@ 0xff00ff
 802051c:	ea47 070c 	orr.w	r7, r7, ip
 8020520:	eb01 2113 	add.w	r1, r1, r3, lsr #8
 8020524:	1202      	asrs	r2, r0, #8
 8020526:	0c3b      	lsrs	r3, r7, #16
 8020528:	ea6f 2111 	mvn.w	r1, r1, lsr #8
 802052c:	b2c9      	uxtb	r1, r1
 802052e:	fb13 f304 	smulbb	r3, r3, r4
 8020532:	f002 02f8 	and.w	r2, r2, #248	@ 0xf8
 8020536:	fb02 3201 	mla	r2, r2, r1, r3
 802053a:	f3c7 2c07 	ubfx	ip, r7, #8, #8
 802053e:	10c3      	asrs	r3, r0, #3
 8020540:	b2ff      	uxtb	r7, r7
 8020542:	00c0      	lsls	r0, r0, #3
 8020544:	b292      	uxth	r2, r2
 8020546:	fb1c fc04 	smulbb	ip, ip, r4
 802054a:	f003 03fc 	and.w	r3, r3, #252	@ 0xfc
 802054e:	b2c0      	uxtb	r0, r0
 8020550:	fb17 f704 	smulbb	r7, r7, r4
 8020554:	fb03 c301 	mla	r3, r3, r1, ip
 8020558:	fb00 7001 	mla	r0, r0, r1, r7
 802055c:	f102 0c01 	add.w	ip, r2, #1
 8020560:	b280      	uxth	r0, r0
 8020562:	eb0c 2212 	add.w	r2, ip, r2, lsr #8
 8020566:	f402 4c78 	and.w	ip, r2, #63488	@ 0xf800
 802056a:	1c42      	adds	r2, r0, #1
 802056c:	eb02 2210 	add.w	r2, r2, r0, lsr #8
 8020570:	b29b      	uxth	r3, r3
 8020572:	f3c2 22c4 	ubfx	r2, r2, #11, #5
 8020576:	ea42 020c 	orr.w	r2, r2, ip
 802057a:	f103 0c01 	add.w	ip, r3, #1
 802057e:	eb0c 2313 	add.w	r3, ip, r3, lsr #8
 8020582:	095b      	lsrs	r3, r3, #5
 8020584:	f403 63fc 	and.w	r3, r3, #2016	@ 0x7e0
 8020588:	431a      	orrs	r2, r3
 802058a:	f8a9 2000 	strh.w	r2, [r9]
 802058e:	9b2b      	ldr	r3, [sp, #172]	@ 0xac
 8020590:	9a29      	ldr	r2, [sp, #164]	@ 0xa4
 8020592:	441a      	add	r2, r3
 8020594:	9b2c      	ldr	r3, [sp, #176]	@ 0xb0
 8020596:	9229      	str	r2, [sp, #164]	@ 0xa4
 8020598:	f109 0902 	add.w	r9, r9, #2
 802059c:	441d      	add	r5, r3
 802059e:	f10b 3bff 	add.w	fp, fp, #4294967295
 80205a2:	e63d      	b.n	8020220 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3c2>
 80205a4:	2800      	cmp	r0, #0
 80205a6:	f43f aedd 	beq.w	8020364 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x506>
 80205aa:	5c79      	ldrb	r1, [r7, r1]
 80205ac:	f856 1021 	ldr.w	r1, [r6, r1, lsl #2]
 80205b0:	910b      	str	r1, [sp, #44]	@ 0x2c
 80205b2:	0e09      	lsrs	r1, r1, #24
 80205b4:	9114      	str	r1, [sp, #80]	@ 0x50
 80205b6:	e6d5      	b.n	8020364 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x506>
 80205b8:	b01f      	add	sp, #124	@ 0x7c
 80205ba:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}

080205be <_ZNK8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKmssiihh>:
 80205be:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 80205c2:	b089      	sub	sp, #36	@ 0x24
 80205c4:	9101      	str	r1, [sp, #4]
 80205c6:	9801      	ldr	r0, [sp, #4]
 80205c8:	f9bd c048 	ldrsh.w	ip, [sp, #72]	@ 0x48
 80205cc:	8800      	ldrh	r0, [r0, #0]
 80205ce:	f9bd 804c 	ldrsh.w	r8, [sp, #76]	@ 0x4c
 80205d2:	f89d 5058 	ldrb.w	r5, [sp, #88]	@ 0x58
 80205d6:	f89d 405c 	ldrb.w	r4, [sp, #92]	@ 0x5c
 80205da:	1206      	asrs	r6, r0, #8
 80205dc:	e9dd 1714 	ldrd	r1, r7, [sp, #80]	@ 0x50
 80205e0:	f006 06f8 	and.w	r6, r6, #248	@ 0xf8
 80205e4:	9602      	str	r6, [sp, #8]
 80205e6:	10c6      	asrs	r6, r0, #3
 80205e8:	00c0      	lsls	r0, r0, #3
 80205ea:	b2c0      	uxtb	r0, r0
 80205ec:	f006 06fc 	and.w	r6, r6, #252	@ 0xfc
 80205f0:	9004      	str	r0, [sp, #16]
 80205f2:	2f00      	cmp	r7, #0
 80205f4:	fb07 100c 	mla	r0, r7, ip, r1
 80205f8:	9603      	str	r6, [sp, #12]
 80205fa:	eb02 0e00 	add.w	lr, r2, r0
 80205fe:	f2c0 810a 	blt.w	8020816 <_ZNK8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKmssiihh+0x258>
 8020602:	45b8      	cmp	r8, r7
 8020604:	f340 8107 	ble.w	8020816 <_ZNK8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKmssiihh+0x258>
 8020608:	2900      	cmp	r1, #0
 802060a:	f2c0 8102 	blt.w	8020812 <_ZNK8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKmssiihh+0x254>
 802060e:	458c      	cmp	ip, r1
 8020610:	f340 80ff 	ble.w	8020812 <_ZNK8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKmssiihh+0x254>
 8020614:	5c12      	ldrb	r2, [r2, r0]
 8020616:	f853 0022 	ldr.w	r0, [r3, r2, lsl #2]
 802061a:	1c4a      	adds	r2, r1, #1
 802061c:	f100 80fe 	bmi.w	802081c <_ZNK8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKmssiihh+0x25e>
 8020620:	4594      	cmp	ip, r2
 8020622:	f340 80fb 	ble.w	802081c <_ZNK8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKmssiihh+0x25e>
 8020626:	2d00      	cmp	r5, #0
 8020628:	f000 80fa 	beq.w	8020820 <_ZNK8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKmssiihh+0x262>
 802062c:	f89e 2001 	ldrb.w	r2, [lr, #1]
 8020630:	f853 6022 	ldr.w	r6, [r3, r2, lsl #2]
 8020634:	3701      	adds	r7, #1
 8020636:	f100 80f7 	bmi.w	8020828 <_ZNK8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKmssiihh+0x26a>
 802063a:	45b8      	cmp	r8, r7
 802063c:	f340 80f4 	ble.w	8020828 <_ZNK8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKmssiihh+0x26a>
 8020640:	2c00      	cmp	r4, #0
 8020642:	f000 80f4 	beq.w	802082e <_ZNK8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKmssiihh+0x270>
 8020646:	2900      	cmp	r1, #0
 8020648:	eb0e 020c 	add.w	r2, lr, ip
 802064c:	f2c0 80ea 	blt.w	8020824 <_ZNK8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKmssiihh+0x266>
 8020650:	458c      	cmp	ip, r1
 8020652:	f340 80e7 	ble.w	8020824 <_ZNK8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKmssiihh+0x266>
 8020656:	f81e 700c 	ldrb.w	r7, [lr, ip]
 802065a:	f853 7027 	ldr.w	r7, [r3, r7, lsl #2]
 802065e:	3101      	adds	r1, #1
 8020660:	f100 80e8 	bmi.w	8020834 <_ZNK8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKmssiihh+0x276>
 8020664:	458c      	cmp	ip, r1
 8020666:	f340 80e5 	ble.w	8020834 <_ZNK8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKmssiihh+0x276>
 802066a:	2d00      	cmp	r5, #0
 802066c:	f000 80e4 	beq.w	8020838 <_ZNK8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKmssiihh+0x27a>
 8020670:	7852      	ldrb	r2, [r2, #1]
 8020672:	f853 1022 	ldr.w	r1, [r3, r2, lsl #2]
 8020676:	0e0b      	lsrs	r3, r1, #24
 8020678:	ea4f 6a10 	mov.w	sl, r0, lsr #24
 802067c:	9300      	str	r3, [sp, #0]
 802067e:	b2a4      	uxth	r4, r4
 8020680:	b2ab      	uxth	r3, r5
 8020682:	f000 15ff 	and.w	r5, r0, #16711935	@ 0xff00ff
 8020686:	fb03 f904 	mul.w	r9, r3, r4
 802068a:	fb0a f505 	mul.w	r5, sl, r5
 802068e:	011b      	lsls	r3, r3, #4
 8020690:	eba3 0e09 	sub.w	lr, r3, r9
 8020694:	f5c3 7280 	rsb	r2, r3, #256	@ 0x100
 8020698:	f400 437f 	and.w	r3, r0, #65280	@ 0xff00
 802069c:	0a28      	lsrs	r0, r5, #8
 802069e:	f000 10ff 	and.w	r0, r0, #16711935	@ 0xff00ff
 80206a2:	f105 1501 	add.w	r5, r5, #65537	@ 0x10001
 80206a6:	4405      	add	r5, r0
 80206a8:	0a2d      	lsrs	r5, r5, #8
 80206aa:	fb0a f303 	mul.w	r3, sl, r3
 80206ae:	f005 10ff 	and.w	r0, r5, #16711935	@ 0xff00ff
 80206b2:	9005      	str	r0, [sp, #20]
 80206b4:	f503 7080 	add.w	r0, r3, #256	@ 0x100
 80206b8:	eb00 2313 	add.w	r3, r0, r3, lsr #8
 80206bc:	0a1b      	lsrs	r3, r3, #8
 80206be:	ea4f 6b16 	mov.w	fp, r6, lsr #24
 80206c2:	9306      	str	r3, [sp, #24]
 80206c4:	f006 13ff 	and.w	r3, r6, #16711935	@ 0xff00ff
 80206c8:	fb0b f303 	mul.w	r3, fp, r3
 80206cc:	0a1d      	lsrs	r5, r3, #8
 80206ce:	f406 467f 	and.w	r6, r6, #65280	@ 0xff00
 80206d2:	ea4f 6817 	mov.w	r8, r7, lsr #24
 80206d6:	fb0b f606 	mul.w	r6, fp, r6
 80206da:	f103 1301 	add.w	r3, r3, #65537	@ 0x10001
 80206de:	f007 1cff 	and.w	ip, r7, #16711935	@ 0xff00ff
 80206e2:	f005 15ff 	and.w	r5, r5, #16711935	@ 0xff00ff
 80206e6:	f407 477f 	and.w	r7, r7, #65280	@ 0xff00
 80206ea:	fb08 f707 	mul.w	r7, r8, r7
 80206ee:	441d      	add	r5, r3
 80206f0:	f506 7380 	add.w	r3, r6, #256	@ 0x100
 80206f4:	eb03 2616 	add.w	r6, r3, r6, lsr #8
 80206f8:	f507 7380 	add.w	r3, r7, #256	@ 0x100
 80206fc:	eb03 2317 	add.w	r3, r3, r7, lsr #8
 8020700:	fb08 fc0c 	mul.w	ip, r8, ip
 8020704:	0a1b      	lsrs	r3, r3, #8
 8020706:	9307      	str	r3, [sp, #28]
 8020708:	ea4f 201c 	mov.w	r0, ip, lsr #8
 802070c:	0e0b      	lsrs	r3, r1, #24
 802070e:	f001 17ff 	and.w	r7, r1, #16711935	@ 0xff00ff
 8020712:	435f      	muls	r7, r3
 8020714:	f10c 1c01 	add.w	ip, ip, #65537	@ 0x10001
 8020718:	f000 10ff 	and.w	r0, r0, #16711935	@ 0xff00ff
 802071c:	ebc9 1404 	rsb	r4, r9, r4, lsl #4
 8020720:	4460      	add	r0, ip
 8020722:	ea4f 2c17 	mov.w	ip, r7, lsr #8
 8020726:	b2a4      	uxth	r4, r4
 8020728:	f107 1701 	add.w	r7, r7, #65537	@ 0x10001
 802072c:	0a2d      	lsrs	r5, r5, #8
 802072e:	f401 417f 	and.w	r1, r1, #65280	@ 0xff00
 8020732:	f00c 1cff 	and.w	ip, ip, #16711935	@ 0xff00ff
 8020736:	fa1f fe8e 	uxth.w	lr, lr
 802073a:	4359      	muls	r1, r3
 802073c:	1b12      	subs	r2, r2, r4
 802073e:	9b05      	ldr	r3, [sp, #20]
 8020740:	44bc      	add	ip, r7
 8020742:	f005 15ff 	and.w	r5, r5, #16711935	@ 0xff00ff
 8020746:	b292      	uxth	r2, r2
 8020748:	fb05 f50e 	mul.w	r5, r5, lr
 802074c:	ea4f 2c1c 	mov.w	ip, ip, lsr #8
 8020750:	fb03 5502 	mla	r5, r3, r2, r5
 8020754:	f00c 1cff 	and.w	ip, ip, #16711935	@ 0xff00ff
 8020758:	9b06      	ldr	r3, [sp, #24]
 802075a:	f501 7780 	add.w	r7, r1, #256	@ 0x100
 802075e:	0a36      	lsrs	r6, r6, #8
 8020760:	0a00      	lsrs	r0, r0, #8
 8020762:	fb0c 5509 	mla	r5, ip, r9, r5
 8020766:	f000 10ff 	and.w	r0, r0, #16711935	@ 0xff00ff
 802076a:	eb07 2111 	add.w	r1, r7, r1, lsr #8
 802076e:	f406 467f 	and.w	r6, r6, #65280	@ 0xff00
 8020772:	fb00 5504 	mla	r5, r0, r4, r5
 8020776:	fb0e f606 	mul.w	r6, lr, r6
 802077a:	f403 407f 	and.w	r0, r3, #65280	@ 0xff00
 802077e:	0a09      	lsrs	r1, r1, #8
 8020780:	9b07      	ldr	r3, [sp, #28]
 8020782:	fb02 6000 	mla	r0, r2, r0, r6
 8020786:	f401 417f 	and.w	r1, r1, #65280	@ 0xff00
 802078a:	fb09 0001 	mla	r0, r9, r1, r0
 802078e:	f403 437f 	and.w	r3, r3, #65280	@ 0xff00
 8020792:	fb0e fe0b 	mul.w	lr, lr, fp
 8020796:	fb04 0003 	mla	r0, r4, r3, r0
 802079a:	fb02 e20a 	mla	r2, r2, sl, lr
 802079e:	9b00      	ldr	r3, [sp, #0]
 80207a0:	fb04 2408 	mla	r4, r4, r8, r2
 80207a4:	fb09 4903 	mla	r9, r9, r3, r4
 80207a8:	ea6f 2929 	mvn.w	r9, r9, asr #8
 80207ac:	9b02      	ldr	r3, [sp, #8]
 80207ae:	9a04      	ldr	r2, [sp, #16]
 80207b0:	fa5f f989 	uxtb.w	r9, r9
 80207b4:	fb03 f109 	mul.w	r1, r3, r9
 80207b8:	9b03      	ldr	r3, [sp, #12]
 80207ba:	0a2d      	lsrs	r5, r5, #8
 80207bc:	0a00      	lsrs	r0, r0, #8
 80207be:	fb03 f309 	mul.w	r3, r3, r9
 80207c2:	f400 407f 	and.w	r0, r0, #65280	@ 0xff00
 80207c6:	f005 15ff 	and.w	r5, r5, #16711935	@ 0xff00ff
 80207ca:	4305      	orrs	r5, r0
 80207cc:	fb02 f909 	mul.w	r9, r2, r9
 80207d0:	1c58      	adds	r0, r3, #1
 80207d2:	1c4a      	adds	r2, r1, #1
 80207d4:	eb00 2013 	add.w	r0, r0, r3, lsr #8
 80207d8:	eb02 2111 	add.w	r1, r2, r1, lsr #8
 80207dc:	0a2b      	lsrs	r3, r5, #8
 80207de:	0c2a      	lsrs	r2, r5, #16
 80207e0:	eb03 2310 	add.w	r3, r3, r0, lsr #8
 80207e4:	eb02 2211 	add.w	r2, r2, r1, lsr #8
 80207e8:	00db      	lsls	r3, r3, #3
 80207ea:	0212      	lsls	r2, r2, #8
 80207ec:	f402 4278 	and.w	r2, r2, #63488	@ 0xf800
 80207f0:	f403 63fc 	and.w	r3, r3, #2016	@ 0x7e0
 80207f4:	4313      	orrs	r3, r2
 80207f6:	f109 0201 	add.w	r2, r9, #1
 80207fa:	eb02 2919 	add.w	r9, r2, r9, lsr #8
 80207fe:	eb05 2519 	add.w	r5, r5, r9, lsr #8
 8020802:	f3c5 05c4 	ubfx	r5, r5, #3, #5
 8020806:	431d      	orrs	r5, r3
 8020808:	9b01      	ldr	r3, [sp, #4]
 802080a:	801d      	strh	r5, [r3, #0]
 802080c:	b009      	add	sp, #36	@ 0x24
 802080e:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 8020812:	2000      	movs	r0, #0
 8020814:	e701      	b.n	802061a <_ZNK8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKmssiihh+0x5c>
 8020816:	2600      	movs	r6, #0
 8020818:	4630      	mov	r0, r6
 802081a:	e70b      	b.n	8020634 <_ZNK8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKmssiihh+0x76>
 802081c:	2600      	movs	r6, #0
 802081e:	e709      	b.n	8020634 <_ZNK8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKmssiihh+0x76>
 8020820:	462e      	mov	r6, r5
 8020822:	e707      	b.n	8020634 <_ZNK8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKmssiihh+0x76>
 8020824:	2700      	movs	r7, #0
 8020826:	e71a      	b.n	802065e <_ZNK8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKmssiihh+0xa0>
 8020828:	2100      	movs	r1, #0
 802082a:	460f      	mov	r7, r1
 802082c:	e723      	b.n	8020676 <_ZNK8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKmssiihh+0xb8>
 802082e:	4621      	mov	r1, r4
 8020830:	4627      	mov	r7, r4
 8020832:	e720      	b.n	8020676 <_ZNK8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKmssiihh+0xb8>
 8020834:	2100      	movs	r1, #0
 8020836:	e71e      	b.n	8020676 <_ZNK8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKmssiihh+0xb8>
 8020838:	4629      	mov	r1, r5
 802083a:	e71c      	b.n	8020676 <_ZNK8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKmssiihh+0xb8>

0802083c <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff>:
 802083c:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8020840:	b09b      	sub	sp, #108	@ 0x6c
 8020842:	9218      	str	r2, [sp, #96]	@ 0x60
 8020844:	9a29      	ldr	r2, [sp, #164]	@ 0xa4
 8020846:	9116      	str	r1, [sp, #88]	@ 0x58
 8020848:	9307      	str	r3, [sp, #28]
 802084a:	e9dd 132a 	ldrd	r1, r3, [sp, #168]	@ 0xa8
 802084e:	9019      	str	r0, [sp, #100]	@ 0x64
 8020850:	6850      	ldr	r0, [r2, #4]
 8020852:	6812      	ldr	r2, [r2, #0]
 8020854:	9d26      	ldr	r5, [sp, #152]	@ 0x98
 8020856:	fb00 1303 	mla	r3, r0, r3, r1
 802085a:	eb02 0343 	add.w	r3, r2, r3, lsl #1
 802085e:	930a      	str	r3, [sp, #40]	@ 0x28
 8020860:	9b2c      	ldr	r3, [sp, #176]	@ 0xb0
 8020862:	681b      	ldr	r3, [r3, #0]
 8020864:	930f      	str	r3, [sp, #60]	@ 0x3c
 8020866:	9b2c      	ldr	r3, [sp, #176]	@ 0xb0
 8020868:	685e      	ldr	r6, [r3, #4]
 802086a:	3604      	adds	r6, #4
 802086c:	9b16      	ldr	r3, [sp, #88]	@ 0x58
 802086e:	2b00      	cmp	r3, #0
 8020870:	dc03      	bgt.n	802087a <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3e>
 8020872:	9b18      	ldr	r3, [sp, #96]	@ 0x60
 8020874:	2b00      	cmp	r3, #0
 8020876:	f340 8373 	ble.w	8020f60 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x724>
 802087a:	9b2c      	ldr	r3, [sp, #176]	@ 0xb0
 802087c:	f9b3 1008 	ldrsh.w	r1, [r3, #8]
 8020880:	f9b3 200c 	ldrsh.w	r2, [r3, #12]
 8020884:	1e48      	subs	r0, r1, #1
 8020886:	1e57      	subs	r7, r2, #1
 8020888:	9b07      	ldr	r3, [sp, #28]
 802088a:	2b00      	cmp	r3, #0
 802088c:	f340 8190 	ble.w	8020bb0 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x374>
 8020890:	9c25      	ldr	r4, [sp, #148]	@ 0x94
 8020892:	ea5f 4c24 	movs.w	ip, r4, asr #16
 8020896:	ea4f 4325 	mov.w	r3, r5, asr #16
 802089a:	d406      	bmi.n	80208aa <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x6e>
 802089c:	4584      	cmp	ip, r0
 802089e:	da04      	bge.n	80208aa <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x6e>
 80208a0:	2b00      	cmp	r3, #0
 80208a2:	db02      	blt.n	80208aa <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x6e>
 80208a4:	42bb      	cmp	r3, r7
 80208a6:	f2c0 8184 	blt.w	8020bb2 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x376>
 80208aa:	f11c 0c01 	adds.w	ip, ip, #1
 80208ae:	f100 8172 	bmi.w	8020b96 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x35a>
 80208b2:	4561      	cmp	r1, ip
 80208b4:	f2c0 816f 	blt.w	8020b96 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x35a>
 80208b8:	3301      	adds	r3, #1
 80208ba:	f100 816c 	bmi.w	8020b96 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x35a>
 80208be:	429a      	cmp	r2, r3
 80208c0:	f2c0 8169 	blt.w	8020b96 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x35a>
 80208c4:	9b07      	ldr	r3, [sp, #28]
 80208c6:	9f0a      	ldr	r7, [sp, #40]	@ 0x28
 80208c8:	9317      	str	r3, [sp, #92]	@ 0x5c
 80208ca:	9b17      	ldr	r3, [sp, #92]	@ 0x5c
 80208cc:	2b00      	cmp	r3, #0
 80208ce:	f340 818e 	ble.w	8020bee <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3b2>
 80208d2:	9b25      	ldr	r3, [sp, #148]	@ 0x94
 80208d4:	f3c3 3203 	ubfx	r2, r3, #12, #4
 80208d8:	9b2c      	ldr	r3, [sp, #176]	@ 0xb0
 80208da:	e9d3 1e02 	ldrd	r1, lr, [r3, #8]
 80208de:	9b25      	ldr	r3, [sp, #148]	@ 0x94
 80208e0:	141b      	asrs	r3, r3, #16
 80208e2:	ea4f 4c25 	mov.w	ip, r5, asr #16
 80208e6:	f3c5 3003 	ubfx	r0, r5, #12, #4
 80208ea:	f100 81d1 	bmi.w	8020c90 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x454>
 80208ee:	f101 38ff 	add.w	r8, r1, #4294967295
 80208f2:	4543      	cmp	r3, r8
 80208f4:	f280 81cc 	bge.w	8020c90 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x454>
 80208f8:	f1bc 0f00 	cmp.w	ip, #0
 80208fc:	f2c0 81c8 	blt.w	8020c90 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x454>
 8020900:	f10e 38ff 	add.w	r8, lr, #4294967295
 8020904:	45c4      	cmp	ip, r8
 8020906:	f280 81c3 	bge.w	8020c90 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x454>
 802090a:	b209      	sxth	r1, r1
 802090c:	fb0c 3301 	mla	r3, ip, r1, r3
 8020910:	9c0f      	ldr	r4, [sp, #60]	@ 0x3c
 8020912:	eb04 0803 	add.w	r8, r4, r3
 8020916:	5ce3      	ldrb	r3, [r4, r3]
 8020918:	f856 3023 	ldr.w	r3, [r6, r3, lsl #2]
 802091c:	ea4f 6e13 	mov.w	lr, r3, lsr #24
 8020920:	2a00      	cmp	r2, #0
 8020922:	f000 81aa 	beq.w	8020c7a <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x43e>
 8020926:	f898 c001 	ldrb.w	ip, [r8, #1]
 802092a:	f856 402c 	ldr.w	r4, [r6, ip, lsl #2]
 802092e:	940b      	str	r4, [sp, #44]	@ 0x2c
 8020930:	0e24      	lsrs	r4, r4, #24
 8020932:	9412      	str	r4, [sp, #72]	@ 0x48
 8020934:	b178      	cbz	r0, 8020956 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x11a>
 8020936:	eb08 0c01 	add.w	ip, r8, r1
 802093a:	f818 1001 	ldrb.w	r1, [r8, r1]
 802093e:	f856 1021 	ldr.w	r1, [r6, r1, lsl #2]
 8020942:	9108      	str	r1, [sp, #32]
 8020944:	0e09      	lsrs	r1, r1, #24
 8020946:	9110      	str	r1, [sp, #64]	@ 0x40
 8020948:	f89c 1001 	ldrb.w	r1, [ip, #1]
 802094c:	f856 1021 	ldr.w	r1, [r6, r1, lsl #2]
 8020950:	910c      	str	r1, [sp, #48]	@ 0x30
 8020952:	0e09      	lsrs	r1, r1, #24
 8020954:	9113      	str	r1, [sp, #76]	@ 0x4c
 8020956:	b292      	uxth	r2, r2
 8020958:	b280      	uxth	r0, r0
 802095a:	fb02 f900 	mul.w	r9, r2, r0
 802095e:	ebc9 1000 	rsb	r0, r9, r0, lsl #4
 8020962:	0112      	lsls	r2, r2, #4
 8020964:	eba2 0809 	sub.w	r8, r2, r9
 8020968:	b280      	uxth	r0, r0
 802096a:	f5c2 7280 	rsb	r2, r2, #256	@ 0x100
 802096e:	9912      	ldr	r1, [sp, #72]	@ 0x48
 8020970:	9c10      	ldr	r4, [sp, #64]	@ 0x40
 8020972:	fa1f f888 	uxth.w	r8, r8
 8020976:	1a12      	subs	r2, r2, r0
 8020978:	b292      	uxth	r2, r2
 802097a:	fb08 f101 	mul.w	r1, r8, r1
 802097e:	fb02 110e 	mla	r1, r2, lr, r1
 8020982:	fb00 1104 	mla	r1, r0, r4, r1
 8020986:	9c13      	ldr	r4, [sp, #76]	@ 0x4c
 8020988:	fb09 1104 	mla	r1, r9, r4, r1
 802098c:	f3c1 2107 	ubfx	r1, r1, #8, #8
 8020990:	2900      	cmp	r1, #0
 8020992:	f000 80f5 	beq.w	8020b80 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x344>
 8020996:	f1be 0fff 	cmp.w	lr, #255	@ 0xff
 802099a:	d01b      	beq.n	80209d4 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x198>
 802099c:	f003 1aff 	and.w	sl, r3, #16711935	@ 0xff00ff
 80209a0:	fb0e fa0a 	mul.w	sl, lr, sl
 80209a4:	f403 437f 	and.w	r3, r3, #65280	@ 0xff00
 80209a8:	fb0e fe03 	mul.w	lr, lr, r3
 80209ac:	ea4f 231a 	mov.w	r3, sl, lsr #8
 80209b0:	f003 13ff 	and.w	r3, r3, #16711935	@ 0xff00ff
 80209b4:	f10a 1a01 	add.w	sl, sl, #65537	@ 0x10001
 80209b8:	f50e 7c80 	add.w	ip, lr, #256	@ 0x100
 80209bc:	4453      	add	r3, sl
 80209be:	eb0c 2c1e 	add.w	ip, ip, lr, lsr #8
 80209c2:	0a1b      	lsrs	r3, r3, #8
 80209c4:	ea4f 2c1c 	mov.w	ip, ip, lsr #8
 80209c8:	f003 13ff 	and.w	r3, r3, #16711935	@ 0xff00ff
 80209cc:	f40c 4c7f 	and.w	ip, ip, #65280	@ 0xff00
 80209d0:	ea43 030c 	orr.w	r3, r3, ip
 80209d4:	9c12      	ldr	r4, [sp, #72]	@ 0x48
 80209d6:	2cff      	cmp	r4, #255	@ 0xff
 80209d8:	d021      	beq.n	8020a1e <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1e2>
 80209da:	9c0b      	ldr	r4, [sp, #44]	@ 0x2c
 80209dc:	f004 1bff 	and.w	fp, r4, #16711935	@ 0xff00ff
 80209e0:	9c12      	ldr	r4, [sp, #72]	@ 0x48
 80209e2:	fb04 fb0b 	mul.w	fp, r4, fp
 80209e6:	9c0b      	ldr	r4, [sp, #44]	@ 0x2c
 80209e8:	f404 4a7f 	and.w	sl, r4, #65280	@ 0xff00
 80209ec:	9c12      	ldr	r4, [sp, #72]	@ 0x48
 80209ee:	ea4f 2e1b 	mov.w	lr, fp, lsr #8
 80209f2:	fb04 fa0a 	mul.w	sl, r4, sl
 80209f6:	f00e 1eff 	and.w	lr, lr, #16711935	@ 0xff00ff
 80209fa:	f10b 1b01 	add.w	fp, fp, #65537	@ 0x10001
 80209fe:	f50a 7c80 	add.w	ip, sl, #256	@ 0x100
 8020a02:	44de      	add	lr, fp
 8020a04:	eb0c 2a1a 	add.w	sl, ip, sl, lsr #8
 8020a08:	ea4f 2e1e 	mov.w	lr, lr, lsr #8
 8020a0c:	ea4f 2a1a 	mov.w	sl, sl, lsr #8
 8020a10:	f00e 1eff 	and.w	lr, lr, #16711935	@ 0xff00ff
 8020a14:	f40a 4a7f 	and.w	sl, sl, #65280	@ 0xff00
 8020a18:	ea4e 040a 	orr.w	r4, lr, sl
 8020a1c:	940b      	str	r4, [sp, #44]	@ 0x2c
 8020a1e:	9c10      	ldr	r4, [sp, #64]	@ 0x40
 8020a20:	2cff      	cmp	r4, #255	@ 0xff
 8020a22:	d021      	beq.n	8020a68 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x22c>
 8020a24:	9c08      	ldr	r4, [sp, #32]
 8020a26:	f004 1bff 	and.w	fp, r4, #16711935	@ 0xff00ff
 8020a2a:	9c10      	ldr	r4, [sp, #64]	@ 0x40
 8020a2c:	fb04 fb0b 	mul.w	fp, r4, fp
 8020a30:	9c08      	ldr	r4, [sp, #32]
 8020a32:	f404 4a7f 	and.w	sl, r4, #65280	@ 0xff00
 8020a36:	9c10      	ldr	r4, [sp, #64]	@ 0x40
 8020a38:	ea4f 2e1b 	mov.w	lr, fp, lsr #8
 8020a3c:	fb04 fa0a 	mul.w	sl, r4, sl
 8020a40:	f00e 1eff 	and.w	lr, lr, #16711935	@ 0xff00ff
 8020a44:	f10b 1b01 	add.w	fp, fp, #65537	@ 0x10001
 8020a48:	f50a 7c80 	add.w	ip, sl, #256	@ 0x100
 8020a4c:	44de      	add	lr, fp
 8020a4e:	eb0c 2a1a 	add.w	sl, ip, sl, lsr #8
 8020a52:	ea4f 2e1e 	mov.w	lr, lr, lsr #8
 8020a56:	ea4f 2a1a 	mov.w	sl, sl, lsr #8
 8020a5a:	f00e 1eff 	and.w	lr, lr, #16711935	@ 0xff00ff
 8020a5e:	f40a 4a7f 	and.w	sl, sl, #65280	@ 0xff00
 8020a62:	ea4e 040a 	orr.w	r4, lr, sl
 8020a66:	9408      	str	r4, [sp, #32]
 8020a68:	9c13      	ldr	r4, [sp, #76]	@ 0x4c
 8020a6a:	2cff      	cmp	r4, #255	@ 0xff
 8020a6c:	d021      	beq.n	8020ab2 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x276>
 8020a6e:	9c0c      	ldr	r4, [sp, #48]	@ 0x30
 8020a70:	f004 1bff 	and.w	fp, r4, #16711935	@ 0xff00ff
 8020a74:	9c13      	ldr	r4, [sp, #76]	@ 0x4c
 8020a76:	fb04 fb0b 	mul.w	fp, r4, fp
 8020a7a:	9c0c      	ldr	r4, [sp, #48]	@ 0x30
 8020a7c:	f404 4a7f 	and.w	sl, r4, #65280	@ 0xff00
 8020a80:	9c13      	ldr	r4, [sp, #76]	@ 0x4c
 8020a82:	ea4f 2e1b 	mov.w	lr, fp, lsr #8
 8020a86:	fb04 fa0a 	mul.w	sl, r4, sl
 8020a8a:	f00e 1eff 	and.w	lr, lr, #16711935	@ 0xff00ff
 8020a8e:	f10b 1b01 	add.w	fp, fp, #65537	@ 0x10001
 8020a92:	f50a 7c80 	add.w	ip, sl, #256	@ 0x100
 8020a96:	44de      	add	lr, fp
 8020a98:	eb0c 2a1a 	add.w	sl, ip, sl, lsr #8
 8020a9c:	ea4f 2e1e 	mov.w	lr, lr, lsr #8
 8020aa0:	ea4f 2a1a 	mov.w	sl, sl, lsr #8
 8020aa4:	f00e 1eff 	and.w	lr, lr, #16711935	@ 0xff00ff
 8020aa8:	f40a 4a7f 	and.w	sl, sl, #65280	@ 0xff00
 8020aac:	ea4e 040a 	orr.w	r4, lr, sl
 8020ab0:	940c      	str	r4, [sp, #48]	@ 0x30
 8020ab2:	9c0b      	ldr	r4, [sp, #44]	@ 0x2c
 8020ab4:	f004 1cff 	and.w	ip, r4, #16711935	@ 0xff00ff
 8020ab8:	9c08      	ldr	r4, [sp, #32]
 8020aba:	f003 1eff 	and.w	lr, r3, #16711935	@ 0xff00ff
 8020abe:	fb08 fc0c 	mul.w	ip, r8, ip
 8020ac2:	fb02 cc0e 	mla	ip, r2, lr, ip
 8020ac6:	f004 1eff 	and.w	lr, r4, #16711935	@ 0xff00ff
 8020aca:	9c0c      	ldr	r4, [sp, #48]	@ 0x30
 8020acc:	fb00 cc0e 	mla	ip, r0, lr, ip
 8020ad0:	f004 1eff 	and.w	lr, r4, #16711935	@ 0xff00ff
 8020ad4:	9c0b      	ldr	r4, [sp, #44]	@ 0x2c
 8020ad6:	fb09 cc0e 	mla	ip, r9, lr, ip
 8020ada:	f404 4e7f 	and.w	lr, r4, #65280	@ 0xff00
 8020ade:	fb08 f80e 	mul.w	r8, r8, lr
 8020ae2:	f403 437f 	and.w	r3, r3, #65280	@ 0xff00
 8020ae6:	fb02 8303 	mla	r3, r2, r3, r8
 8020aea:	9a08      	ldr	r2, [sp, #32]
 8020aec:	f8b7 8000 	ldrh.w	r8, [r7]
 8020af0:	f402 4a7f 	and.w	sl, r2, #65280	@ 0xff00
 8020af4:	9a0c      	ldr	r2, [sp, #48]	@ 0x30
 8020af6:	fb00 330a 	mla	r3, r0, sl, r3
 8020afa:	f402 407f 	and.w	r0, r2, #65280	@ 0xff00
 8020afe:	fb09 3900 	mla	r9, r9, r0, r3
 8020b02:	43c9      	mvns	r1, r1
 8020b04:	ea4f 2228 	mov.w	r2, r8, asr #8
 8020b08:	fa5f fe81 	uxtb.w	lr, r1
 8020b0c:	ea4f 2c1c 	mov.w	ip, ip, lsr #8
 8020b10:	ea4f 2919 	mov.w	r9, r9, lsr #8
 8020b14:	f002 02f8 	and.w	r2, r2, #248	@ 0xf8
 8020b18:	fb02 f20e 	mul.w	r2, r2, lr
 8020b1c:	f00c 1cff 	and.w	ip, ip, #16711935	@ 0xff00ff
 8020b20:	f409 497f 	and.w	r9, r9, #65280	@ 0xff00
 8020b24:	ea4c 0c09 	orr.w	ip, ip, r9
 8020b28:	1c53      	adds	r3, r2, #1
 8020b2a:	eb03 2212 	add.w	r2, r3, r2, lsr #8
 8020b2e:	ea4f 00e8 	mov.w	r0, r8, asr #3
 8020b32:	ea4f 431c 	mov.w	r3, ip, lsr #16
 8020b36:	eb03 2312 	add.w	r3, r3, r2, lsr #8
 8020b3a:	f000 00fc 	and.w	r0, r0, #252	@ 0xfc
 8020b3e:	4a63      	ldr	r2, [pc, #396]	@ (8020ccc <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x490>)
 8020b40:	fb00 f00e 	mul.w	r0, r0, lr
 8020b44:	b2db      	uxtb	r3, r3
 8020b46:	ea02 2203 	and.w	r2, r2, r3, lsl #8
 8020b4a:	1c43      	adds	r3, r0, #1
 8020b4c:	eb03 2010 	add.w	r0, r3, r0, lsr #8
 8020b50:	ea4f 231c 	mov.w	r3, ip, lsr #8
 8020b54:	ea4f 01c8 	mov.w	r1, r8, lsl #3
 8020b58:	eb03 2310 	add.w	r3, r3, r0, lsr #8
 8020b5c:	b2c9      	uxtb	r1, r1
 8020b5e:	00db      	lsls	r3, r3, #3
 8020b60:	fb01 f10e 	mul.w	r1, r1, lr
 8020b64:	f403 63fc 	and.w	r3, r3, #2016	@ 0x7e0
 8020b68:	4313      	orrs	r3, r2
 8020b6a:	1c4a      	adds	r2, r1, #1
 8020b6c:	eb02 2111 	add.w	r1, r2, r1, lsr #8
 8020b70:	eb0c 2c11 	add.w	ip, ip, r1, lsr #8
 8020b74:	f3cc 0cc4 	ubfx	ip, ip, #3, #5
 8020b78:	ea4c 0c03 	orr.w	ip, ip, r3
 8020b7c:	f8a7 c000 	strh.w	ip, [r7]
 8020b80:	9b27      	ldr	r3, [sp, #156]	@ 0x9c
 8020b82:	9a25      	ldr	r2, [sp, #148]	@ 0x94
 8020b84:	441a      	add	r2, r3
 8020b86:	9b28      	ldr	r3, [sp, #160]	@ 0xa0
 8020b88:	9225      	str	r2, [sp, #148]	@ 0x94
 8020b8a:	441d      	add	r5, r3
 8020b8c:	9b17      	ldr	r3, [sp, #92]	@ 0x5c
 8020b8e:	3b01      	subs	r3, #1
 8020b90:	3702      	adds	r7, #2
 8020b92:	9317      	str	r3, [sp, #92]	@ 0x5c
 8020b94:	e699      	b.n	80208ca <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x8e>
 8020b96:	9b27      	ldr	r3, [sp, #156]	@ 0x9c
 8020b98:	9c25      	ldr	r4, [sp, #148]	@ 0x94
 8020b9a:	441c      	add	r4, r3
 8020b9c:	9b28      	ldr	r3, [sp, #160]	@ 0xa0
 8020b9e:	9425      	str	r4, [sp, #148]	@ 0x94
 8020ba0:	441d      	add	r5, r3
 8020ba2:	9b07      	ldr	r3, [sp, #28]
 8020ba4:	3b01      	subs	r3, #1
 8020ba6:	9307      	str	r3, [sp, #28]
 8020ba8:	9b0a      	ldr	r3, [sp, #40]	@ 0x28
 8020baa:	3302      	adds	r3, #2
 8020bac:	930a      	str	r3, [sp, #40]	@ 0x28
 8020bae:	e66b      	b.n	8020888 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x4c>
 8020bb0:	d024      	beq.n	8020bfc <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3c0>
 8020bb2:	9b07      	ldr	r3, [sp, #28]
 8020bb4:	9827      	ldr	r0, [sp, #156]	@ 0x9c
 8020bb6:	9c25      	ldr	r4, [sp, #148]	@ 0x94
 8020bb8:	3b01      	subs	r3, #1
 8020bba:	fb00 4003 	mla	r0, r0, r3, r4
 8020bbe:	1400      	asrs	r0, r0, #16
 8020bc0:	f53f ae80 	bmi.w	80208c4 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x88>
 8020bc4:	3901      	subs	r1, #1
 8020bc6:	4288      	cmp	r0, r1
 8020bc8:	f6bf ae7c 	bge.w	80208c4 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x88>
 8020bcc:	9928      	ldr	r1, [sp, #160]	@ 0xa0
 8020bce:	fb01 5303 	mla	r3, r1, r3, r5
 8020bd2:	141b      	asrs	r3, r3, #16
 8020bd4:	f53f ae76 	bmi.w	80208c4 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x88>
 8020bd8:	3a01      	subs	r2, #1
 8020bda:	4293      	cmp	r3, r2
 8020bdc:	f6bf ae72 	bge.w	80208c4 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x88>
 8020be0:	f8dd b01c 	ldr.w	fp, [sp, #28]
 8020be4:	f8dd 9028 	ldr.w	r9, [sp, #40]	@ 0x28
 8020be8:	f1bb 0f00 	cmp.w	fp, #0
 8020bec:	dc70      	bgt.n	8020cd0 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x494>
 8020bee:	9b07      	ldr	r3, [sp, #28]
 8020bf0:	ea23 74e3 	bic.w	r4, r3, r3, asr #31
 8020bf4:	9b0a      	ldr	r3, [sp, #40]	@ 0x28
 8020bf6:	eb03 0344 	add.w	r3, r3, r4, lsl #1
 8020bfa:	930a      	str	r3, [sp, #40]	@ 0x28
 8020bfc:	9b16      	ldr	r3, [sp, #88]	@ 0x58
 8020bfe:	2b00      	cmp	r3, #0
 8020c00:	f340 81ae 	ble.w	8020f60 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x724>
 8020c04:	ee30 0a04 	vadd.f32	s0, s0, s8
 8020c08:	eeb7 7a00 	vmov.f32	s14, #112	@ 0x3f800000  1.0
 8020c0c:	eec7 7a00 	vdiv.f32	s15, s14, s0
 8020c10:	9b24      	ldr	r3, [sp, #144]	@ 0x90
 8020c12:	ee70 0aa4 	vadd.f32	s1, s1, s9
 8020c16:	ee31 1a05 	vadd.f32	s2, s2, s10
 8020c1a:	ee20 7aa7 	vmul.f32	s14, s1, s15
 8020c1e:	eef0 6a62 	vmov.f32	s13, s5
 8020c22:	ee61 7a27 	vmul.f32	s15, s2, s15
 8020c26:	eefe 6ac8 	vcvt.s32.f32	s13, s13, #16
 8020c2a:	ee77 2a62 	vsub.f32	s5, s14, s5
 8020c2e:	edcd 6a25 	vstr	s13, [sp, #148]	@ 0x94
 8020c32:	eefe 2ac8 	vcvt.s32.f32	s5, s5, #16
 8020c36:	eef0 6a43 	vmov.f32	s13, s6
 8020c3a:	ee37 3ac3 	vsub.f32	s6, s15, s6
 8020c3e:	ee12 2a90 	vmov	r2, s5
 8020c42:	eebe 3ac8 	vcvt.s32.f32	s6, s6, #16
 8020c46:	fb92 f3f3 	sdiv	r3, r2, r3
 8020c4a:	ee13 2a10 	vmov	r2, s6
 8020c4e:	9327      	str	r3, [sp, #156]	@ 0x9c
 8020c50:	9b24      	ldr	r3, [sp, #144]	@ 0x90
 8020c52:	fb92 f3f3 	sdiv	r3, r2, r3
 8020c56:	9328      	str	r3, [sp, #160]	@ 0xa0
 8020c58:	9b16      	ldr	r3, [sp, #88]	@ 0x58
 8020c5a:	9a18      	ldr	r2, [sp, #96]	@ 0x60
 8020c5c:	3b01      	subs	r3, #1
 8020c5e:	eefe 6ac8 	vcvt.s32.f32	s13, s13, #16
 8020c62:	9316      	str	r3, [sp, #88]	@ 0x58
 8020c64:	9b24      	ldr	r3, [sp, #144]	@ 0x90
 8020c66:	bf08      	it	eq
 8020c68:	4613      	moveq	r3, r2
 8020c6a:	ee16 5a90 	vmov	r5, s13
 8020c6e:	9307      	str	r3, [sp, #28]
 8020c70:	eeb0 3a67 	vmov.f32	s6, s15
 8020c74:	eef0 2a47 	vmov.f32	s5, s14
 8020c78:	e5f8      	b.n	802086c <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x30>
 8020c7a:	2800      	cmp	r0, #0
 8020c7c:	f43f ae6b 	beq.w	8020956 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x11a>
 8020c80:	f818 1001 	ldrb.w	r1, [r8, r1]
 8020c84:	f856 1021 	ldr.w	r1, [r6, r1, lsl #2]
 8020c88:	9108      	str	r1, [sp, #32]
 8020c8a:	0e09      	lsrs	r1, r1, #24
 8020c8c:	9110      	str	r1, [sp, #64]	@ 0x40
 8020c8e:	e662      	b.n	8020956 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x11a>
 8020c90:	f113 0801 	adds.w	r8, r3, #1
 8020c94:	f53f af74 	bmi.w	8020b80 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x344>
 8020c98:	4541      	cmp	r1, r8
 8020c9a:	f6ff af71 	blt.w	8020b80 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x344>
 8020c9e:	f11c 0801 	adds.w	r8, ip, #1
 8020ca2:	f53f af6d 	bmi.w	8020b80 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x344>
 8020ca6:	45c6      	cmp	lr, r8
 8020ca8:	f6ff af6a 	blt.w	8020b80 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x344>
 8020cac:	e9cd 3c02 	strd	r3, ip, [sp, #8]
 8020cb0:	b209      	sxth	r1, r1
 8020cb2:	fa0f f38e 	sxth.w	r3, lr
 8020cb6:	e9cd 2004 	strd	r2, r0, [sp, #16]
 8020cba:	9301      	str	r3, [sp, #4]
 8020cbc:	9100      	str	r1, [sp, #0]
 8020cbe:	4633      	mov	r3, r6
 8020cc0:	9a0f      	ldr	r2, [sp, #60]	@ 0x3c
 8020cc2:	9819      	ldr	r0, [sp, #100]	@ 0x64
 8020cc4:	4639      	mov	r1, r7
 8020cc6:	f7ff fc7a 	bl	80205be <_ZNK8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKmssiihh>
 8020cca:	e759      	b.n	8020b80 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x344>
 8020ccc:	fffff800 	.word	0xfffff800
 8020cd0:	9b25      	ldr	r3, [sp, #148]	@ 0x94
 8020cd2:	9c25      	ldr	r4, [sp, #148]	@ 0x94
 8020cd4:	f3c3 3203 	ubfx	r2, r3, #12, #4
 8020cd8:	9b2c      	ldr	r3, [sp, #176]	@ 0xb0
 8020cda:	f9b3 1008 	ldrsh.w	r1, [r3, #8]
 8020cde:	1427      	asrs	r7, r4, #16
 8020ce0:	142b      	asrs	r3, r5, #16
 8020ce2:	fb01 7303 	mla	r3, r1, r3, r7
 8020ce6:	9c0f      	ldr	r4, [sp, #60]	@ 0x3c
 8020ce8:	18e7      	adds	r7, r4, r3
 8020cea:	5ce3      	ldrb	r3, [r4, r3]
 8020cec:	f856 3023 	ldr.w	r3, [r6, r3, lsl #2]
 8020cf0:	f3c5 3003 	ubfx	r0, r5, #12, #4
 8020cf4:	ea4f 6c13 	mov.w	ip, r3, lsr #24
 8020cf8:	2a00      	cmp	r2, #0
 8020cfa:	f000 8127 	beq.w	8020f4c <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x710>
 8020cfe:	f897 e001 	ldrb.w	lr, [r7, #1]
 8020d02:	f856 402e 	ldr.w	r4, [r6, lr, lsl #2]
 8020d06:	940d      	str	r4, [sp, #52]	@ 0x34
 8020d08:	0e24      	lsrs	r4, r4, #24
 8020d0a:	9414      	str	r4, [sp, #80]	@ 0x50
 8020d0c:	b170      	cbz	r0, 8020d2c <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x4f0>
 8020d0e:	eb07 0e01 	add.w	lr, r7, r1
 8020d12:	5c79      	ldrb	r1, [r7, r1]
 8020d14:	f856 1021 	ldr.w	r1, [r6, r1, lsl #2]
 8020d18:	9109      	str	r1, [sp, #36]	@ 0x24
 8020d1a:	0e09      	lsrs	r1, r1, #24
 8020d1c:	9111      	str	r1, [sp, #68]	@ 0x44
 8020d1e:	f89e 1001 	ldrb.w	r1, [lr, #1]
 8020d22:	f856 1021 	ldr.w	r1, [r6, r1, lsl #2]
 8020d26:	910e      	str	r1, [sp, #56]	@ 0x38
 8020d28:	0e09      	lsrs	r1, r1, #24
 8020d2a:	9115      	str	r1, [sp, #84]	@ 0x54
 8020d2c:	b292      	uxth	r2, r2
 8020d2e:	b280      	uxth	r0, r0
 8020d30:	fb02 f800 	mul.w	r8, r2, r0
 8020d34:	ebc8 1000 	rsb	r0, r8, r0, lsl #4
 8020d38:	0112      	lsls	r2, r2, #4
 8020d3a:	eba2 0e08 	sub.w	lr, r2, r8
 8020d3e:	b280      	uxth	r0, r0
 8020d40:	f5c2 7180 	rsb	r1, r2, #256	@ 0x100
 8020d44:	9a14      	ldr	r2, [sp, #80]	@ 0x50
 8020d46:	9c11      	ldr	r4, [sp, #68]	@ 0x44
 8020d48:	fa1f fe8e 	uxth.w	lr, lr
 8020d4c:	1a09      	subs	r1, r1, r0
 8020d4e:	b289      	uxth	r1, r1
 8020d50:	fb0e f202 	mul.w	r2, lr, r2
 8020d54:	fb01 220c 	mla	r2, r1, ip, r2
 8020d58:	fb00 2204 	mla	r2, r0, r4, r2
 8020d5c:	9c15      	ldr	r4, [sp, #84]	@ 0x54
 8020d5e:	fb08 2204 	mla	r2, r8, r4, r2
 8020d62:	f3c2 2207 	ubfx	r2, r2, #8, #8
 8020d66:	2a00      	cmp	r2, #0
 8020d68:	f000 80e5 	beq.w	8020f36 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x6fa>
 8020d6c:	f1bc 0fff 	cmp.w	ip, #255	@ 0xff
 8020d70:	d019      	beq.n	8020da6 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x56a>
 8020d72:	f003 1aff 	and.w	sl, r3, #16711935	@ 0xff00ff
 8020d76:	fb0c fa0a 	mul.w	sl, ip, sl
 8020d7a:	f403 437f 	and.w	r3, r3, #65280	@ 0xff00
 8020d7e:	fb0c fc03 	mul.w	ip, ip, r3
 8020d82:	ea4f 231a 	mov.w	r3, sl, lsr #8
 8020d86:	f003 13ff 	and.w	r3, r3, #16711935	@ 0xff00ff
 8020d8a:	f10a 1a01 	add.w	sl, sl, #65537	@ 0x10001
 8020d8e:	f50c 7780 	add.w	r7, ip, #256	@ 0x100
 8020d92:	4453      	add	r3, sl
 8020d94:	eb07 271c 	add.w	r7, r7, ip, lsr #8
 8020d98:	0a1b      	lsrs	r3, r3, #8
 8020d9a:	0a3f      	lsrs	r7, r7, #8
 8020d9c:	f003 13ff 	and.w	r3, r3, #16711935	@ 0xff00ff
 8020da0:	f407 477f 	and.w	r7, r7, #65280	@ 0xff00
 8020da4:	433b      	orrs	r3, r7
 8020da6:	9c14      	ldr	r4, [sp, #80]	@ 0x50
 8020da8:	2cff      	cmp	r4, #255	@ 0xff
 8020daa:	d020      	beq.n	8020dee <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x5b2>
 8020dac:	9c0d      	ldr	r4, [sp, #52]	@ 0x34
 8020dae:	f004 17ff 	and.w	r7, r4, #16711935	@ 0xff00ff
 8020db2:	9c14      	ldr	r4, [sp, #80]	@ 0x50
 8020db4:	4367      	muls	r7, r4
 8020db6:	9c0d      	ldr	r4, [sp, #52]	@ 0x34
 8020db8:	f404 4a7f 	and.w	sl, r4, #65280	@ 0xff00
 8020dbc:	9c14      	ldr	r4, [sp, #80]	@ 0x50
 8020dbe:	ea4f 2c17 	mov.w	ip, r7, lsr #8
 8020dc2:	fb04 fa0a 	mul.w	sl, r4, sl
 8020dc6:	f107 1701 	add.w	r7, r7, #65537	@ 0x10001
 8020dca:	f00c 1cff 	and.w	ip, ip, #16711935	@ 0xff00ff
 8020dce:	44bc      	add	ip, r7
 8020dd0:	f50a 7780 	add.w	r7, sl, #256	@ 0x100
 8020dd4:	eb07 2a1a 	add.w	sl, r7, sl, lsr #8
 8020dd8:	ea4f 2c1c 	mov.w	ip, ip, lsr #8
 8020ddc:	ea4f 2a1a 	mov.w	sl, sl, lsr #8
 8020de0:	f00c 1cff 	and.w	ip, ip, #16711935	@ 0xff00ff
 8020de4:	f40a 4a7f 	and.w	sl, sl, #65280	@ 0xff00
 8020de8:	ea4c 040a 	orr.w	r4, ip, sl
 8020dec:	940d      	str	r4, [sp, #52]	@ 0x34
 8020dee:	9c11      	ldr	r4, [sp, #68]	@ 0x44
 8020df0:	2cff      	cmp	r4, #255	@ 0xff
 8020df2:	d020      	beq.n	8020e36 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x5fa>
 8020df4:	9c09      	ldr	r4, [sp, #36]	@ 0x24
 8020df6:	f004 17ff 	and.w	r7, r4, #16711935	@ 0xff00ff
 8020dfa:	9c11      	ldr	r4, [sp, #68]	@ 0x44
 8020dfc:	4367      	muls	r7, r4
 8020dfe:	9c09      	ldr	r4, [sp, #36]	@ 0x24
 8020e00:	f404 4a7f 	and.w	sl, r4, #65280	@ 0xff00
 8020e04:	9c11      	ldr	r4, [sp, #68]	@ 0x44
 8020e06:	ea4f 2c17 	mov.w	ip, r7, lsr #8
 8020e0a:	fb04 fa0a 	mul.w	sl, r4, sl
 8020e0e:	f107 1701 	add.w	r7, r7, #65537	@ 0x10001
 8020e12:	f00c 1cff 	and.w	ip, ip, #16711935	@ 0xff00ff
 8020e16:	44bc      	add	ip, r7
 8020e18:	f50a 7780 	add.w	r7, sl, #256	@ 0x100
 8020e1c:	eb07 2a1a 	add.w	sl, r7, sl, lsr #8
 8020e20:	ea4f 2c1c 	mov.w	ip, ip, lsr #8
 8020e24:	ea4f 2a1a 	mov.w	sl, sl, lsr #8
 8020e28:	f00c 1cff 	and.w	ip, ip, #16711935	@ 0xff00ff
 8020e2c:	f40a 4a7f 	and.w	sl, sl, #65280	@ 0xff00
 8020e30:	ea4c 040a 	orr.w	r4, ip, sl
 8020e34:	9409      	str	r4, [sp, #36]	@ 0x24
 8020e36:	9c15      	ldr	r4, [sp, #84]	@ 0x54
 8020e38:	2cff      	cmp	r4, #255	@ 0xff
 8020e3a:	d020      	beq.n	8020e7e <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x642>
 8020e3c:	9c0e      	ldr	r4, [sp, #56]	@ 0x38
 8020e3e:	f004 17ff 	and.w	r7, r4, #16711935	@ 0xff00ff
 8020e42:	9c15      	ldr	r4, [sp, #84]	@ 0x54
 8020e44:	4367      	muls	r7, r4
 8020e46:	9c0e      	ldr	r4, [sp, #56]	@ 0x38
 8020e48:	f404 4a7f 	and.w	sl, r4, #65280	@ 0xff00
 8020e4c:	9c15      	ldr	r4, [sp, #84]	@ 0x54
 8020e4e:	ea4f 2c17 	mov.w	ip, r7, lsr #8
 8020e52:	fb04 fa0a 	mul.w	sl, r4, sl
 8020e56:	f107 1701 	add.w	r7, r7, #65537	@ 0x10001
 8020e5a:	f00c 1cff 	and.w	ip, ip, #16711935	@ 0xff00ff
 8020e5e:	44bc      	add	ip, r7
 8020e60:	f50a 7780 	add.w	r7, sl, #256	@ 0x100
 8020e64:	eb07 2a1a 	add.w	sl, r7, sl, lsr #8
 8020e68:	ea4f 2c1c 	mov.w	ip, ip, lsr #8
 8020e6c:	ea4f 2a1a 	mov.w	sl, sl, lsr #8
 8020e70:	f00c 1cff 	and.w	ip, ip, #16711935	@ 0xff00ff
 8020e74:	f40a 4a7f 	and.w	sl, sl, #65280	@ 0xff00
 8020e78:	ea4c 040a 	orr.w	r4, ip, sl
 8020e7c:	940e      	str	r4, [sp, #56]	@ 0x38
 8020e7e:	9c0d      	ldr	r4, [sp, #52]	@ 0x34
 8020e80:	f004 17ff 	and.w	r7, r4, #16711935	@ 0xff00ff
 8020e84:	9c09      	ldr	r4, [sp, #36]	@ 0x24
 8020e86:	f003 1cff 	and.w	ip, r3, #16711935	@ 0xff00ff
 8020e8a:	fb0e f707 	mul.w	r7, lr, r7
 8020e8e:	fb01 770c 	mla	r7, r1, ip, r7
 8020e92:	f004 1cff 	and.w	ip, r4, #16711935	@ 0xff00ff
 8020e96:	9c0e      	ldr	r4, [sp, #56]	@ 0x38
 8020e98:	fb00 770c 	mla	r7, r0, ip, r7
 8020e9c:	f004 1cff 	and.w	ip, r4, #16711935	@ 0xff00ff
 8020ea0:	9c0d      	ldr	r4, [sp, #52]	@ 0x34
 8020ea2:	fb08 770c 	mla	r7, r8, ip, r7
 8020ea6:	f404 4c7f 	and.w	ip, r4, #65280	@ 0xff00
 8020eaa:	fb0e fe0c 	mul.w	lr, lr, ip
 8020eae:	f403 437f 	and.w	r3, r3, #65280	@ 0xff00
 8020eb2:	fb01 e303 	mla	r3, r1, r3, lr
 8020eb6:	9909      	ldr	r1, [sp, #36]	@ 0x24
 8020eb8:	f401 4a7f 	and.w	sl, r1, #65280	@ 0xff00
 8020ebc:	990e      	ldr	r1, [sp, #56]	@ 0x38
 8020ebe:	fb00 330a 	mla	r3, r0, sl, r3
 8020ec2:	f401 4c7f 	and.w	ip, r1, #65280	@ 0xff00
 8020ec6:	fb08 3c0c 	mla	ip, r8, ip, r3
 8020eca:	f8b9 3000 	ldrh.w	r3, [r9]
 8020ece:	43d2      	mvns	r2, r2
 8020ed0:	1218      	asrs	r0, r3, #8
 8020ed2:	b2d2      	uxtb	r2, r2
 8020ed4:	10d9      	asrs	r1, r3, #3
 8020ed6:	0a3f      	lsrs	r7, r7, #8
 8020ed8:	ea4f 2c1c 	mov.w	ip, ip, lsr #8
 8020edc:	f000 00f8 	and.w	r0, r0, #248	@ 0xf8
 8020ee0:	00db      	lsls	r3, r3, #3
 8020ee2:	4350      	muls	r0, r2
 8020ee4:	f007 17ff 	and.w	r7, r7, #16711935	@ 0xff00ff
 8020ee8:	f40c 4c7f 	and.w	ip, ip, #65280	@ 0xff00
 8020eec:	f001 01fc 	and.w	r1, r1, #252	@ 0xfc
 8020ef0:	b2db      	uxtb	r3, r3
 8020ef2:	ea47 070c 	orr.w	r7, r7, ip
 8020ef6:	4351      	muls	r1, r2
 8020ef8:	4353      	muls	r3, r2
 8020efa:	1c42      	adds	r2, r0, #1
 8020efc:	eb02 2010 	add.w	r0, r2, r0, lsr #8
 8020f00:	0c3a      	lsrs	r2, r7, #16
 8020f02:	eb02 2010 	add.w	r0, r2, r0, lsr #8
 8020f06:	4a18      	ldr	r2, [pc, #96]	@ (8020f68 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x72c>)
 8020f08:	b2c0      	uxtb	r0, r0
 8020f0a:	ea02 2000 	and.w	r0, r2, r0, lsl #8
 8020f0e:	1c4a      	adds	r2, r1, #1
 8020f10:	eb02 2111 	add.w	r1, r2, r1, lsr #8
 8020f14:	0a3a      	lsrs	r2, r7, #8
 8020f16:	eb02 2111 	add.w	r1, r2, r1, lsr #8
 8020f1a:	00c9      	lsls	r1, r1, #3
 8020f1c:	f401 61fc 	and.w	r1, r1, #2016	@ 0x7e0
 8020f20:	4301      	orrs	r1, r0
 8020f22:	1c58      	adds	r0, r3, #1
 8020f24:	eb00 2013 	add.w	r0, r0, r3, lsr #8
 8020f28:	eb07 2710 	add.w	r7, r7, r0, lsr #8
 8020f2c:	f3c7 00c4 	ubfx	r0, r7, #3, #5
 8020f30:	4308      	orrs	r0, r1
 8020f32:	f8a9 0000 	strh.w	r0, [r9]
 8020f36:	9b27      	ldr	r3, [sp, #156]	@ 0x9c
 8020f38:	9a25      	ldr	r2, [sp, #148]	@ 0x94
 8020f3a:	441a      	add	r2, r3
 8020f3c:	9b28      	ldr	r3, [sp, #160]	@ 0xa0
 8020f3e:	9225      	str	r2, [sp, #148]	@ 0x94
 8020f40:	f109 0902 	add.w	r9, r9, #2
 8020f44:	441d      	add	r5, r3
 8020f46:	f10b 3bff 	add.w	fp, fp, #4294967295
 8020f4a:	e64d      	b.n	8020be8 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3ac>
 8020f4c:	2800      	cmp	r0, #0
 8020f4e:	f43f aeed 	beq.w	8020d2c <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x4f0>
 8020f52:	5c79      	ldrb	r1, [r7, r1]
 8020f54:	f856 1021 	ldr.w	r1, [r6, r1, lsl #2]
 8020f58:	9109      	str	r1, [sp, #36]	@ 0x24
 8020f5a:	0e09      	lsrs	r1, r1, #24
 8020f5c:	9111      	str	r1, [sp, #68]	@ 0x44
 8020f5e:	e6e5      	b.n	8020d2c <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x4f0>
 8020f60:	b01b      	add	sp, #108	@ 0x6c
 8020f62:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 8020f66:	bf00      	nop
 8020f68:	fffff800 	.word	0xfffff800

08020f6c <_ZNK8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtPKhssiihhh>:
 8020f6c:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8020f70:	b085      	sub	sp, #20
 8020f72:	e9dd 7010 	ldrd	r7, r0, [sp, #64]	@ 0x40
 8020f76:	f9bd 6038 	ldrsh.w	r6, [sp, #56]	@ 0x38
 8020f7a:	9103      	str	r1, [sp, #12]
 8020f7c:	fb00 7406 	mla	r4, r0, r6, r7
 8020f80:	eb02 0544 	add.w	r5, r2, r4, lsl #1
 8020f84:	2800      	cmp	r0, #0
 8020f86:	f9bd b03c 	ldrsh.w	fp, [sp, #60]	@ 0x3c
 8020f8a:	f89d 1048 	ldrb.w	r1, [sp, #72]	@ 0x48
 8020f8e:	f89d e04c 	ldrb.w	lr, [sp, #76]	@ 0x4c
 8020f92:	9501      	str	r5, [sp, #4]
 8020f94:	eb03 0904 	add.w	r9, r3, r4
 8020f98:	f2c0 8150 	blt.w	802123c <_ZNK8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtPKhssiihhh+0x2d0>
 8020f9c:	4583      	cmp	fp, r0
 8020f9e:	f340 814d 	ble.w	802123c <_ZNK8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtPKhssiihhh+0x2d0>
 8020fa2:	2f00      	cmp	r7, #0
 8020fa4:	f2c0 8146 	blt.w	8021234 <_ZNK8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtPKhssiihhh+0x2c8>
 8020fa8:	42be      	cmp	r6, r7
 8020faa:	f340 8143 	ble.w	8021234 <_ZNK8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtPKhssiihhh+0x2c8>
 8020fae:	f813 c004 	ldrb.w	ip, [r3, r4]
 8020fb2:	f832 3014 	ldrh.w	r3, [r2, r4, lsl #1]
 8020fb6:	ea4f 02ec 	mov.w	r2, ip, asr #3
 8020fba:	f423 65fc 	bic.w	r5, r3, #2016	@ 0x7e0
 8020fbe:	4355      	muls	r5, r2
 8020fc0:	f403 63fc 	and.w	r3, r3, #2016	@ 0x7e0
 8020fc4:	f64f 041f 	movw	r4, #63519	@ 0xf81f
 8020fc8:	fb0c f203 	mul.w	r2, ip, r3
 8020fcc:	ea04 1355 	and.w	r3, r4, r5, lsr #5
 8020fd0:	f605 0501 	addw	r5, r5, #2049	@ 0x801
 8020fd4:	441d      	add	r5, r3
 8020fd6:	f102 0320 	add.w	r3, r2, #32
 8020fda:	eb03 2312 	add.w	r3, r3, r2, lsr #8
 8020fde:	0a1b      	lsrs	r3, r3, #8
 8020fe0:	ea04 1455 	and.w	r4, r4, r5, lsr #5
 8020fe4:	f403 63fc 	and.w	r3, r3, #2016	@ 0x7e0
 8020fe8:	431c      	orrs	r4, r3
 8020fea:	1c7b      	adds	r3, r7, #1
 8020fec:	f100 812b 	bmi.w	8021246 <_ZNK8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtPKhssiihhh+0x2da>
 8020ff0:	429e      	cmp	r6, r3
 8020ff2:	f340 8128 	ble.w	8021246 <_ZNK8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtPKhssiihhh+0x2da>
 8020ff6:	2900      	cmp	r1, #0
 8020ff8:	f000 8128 	beq.w	802124c <_ZNK8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtPKhssiihhh+0x2e0>
 8020ffc:	9a01      	ldr	r2, [sp, #4]
 8020ffe:	f899 3001 	ldrb.w	r3, [r9, #1]
 8021002:	8855      	ldrh	r5, [r2, #2]
 8021004:	ea4f 08e3 	mov.w	r8, r3, asr #3
 8021008:	f425 62fc 	bic.w	r2, r5, #2016	@ 0x7e0
 802100c:	fb08 f802 	mul.w	r8, r8, r2
 8021010:	f405 65fc 	and.w	r5, r5, #2016	@ 0x7e0
 8021014:	f64f 021f 	movw	r2, #63519	@ 0xf81f
 8021018:	ea02 1a58 	and.w	sl, r2, r8, lsr #5
 802101c:	435d      	muls	r5, r3
 802101e:	f608 0801 	addw	r8, r8, #2049	@ 0x801
 8021022:	44d0      	add	r8, sl
 8021024:	f105 0a20 	add.w	sl, r5, #32
 8021028:	eb0a 2515 	add.w	r5, sl, r5, lsr #8
 802102c:	0a2d      	lsrs	r5, r5, #8
 802102e:	ea02 1258 	and.w	r2, r2, r8, lsr #5
 8021032:	f405 65fc 	and.w	r5, r5, #2016	@ 0x7e0
 8021036:	432a      	orrs	r2, r5
 8021038:	3001      	adds	r0, #1
 802103a:	f100 810d 	bmi.w	8021258 <_ZNK8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtPKhssiihhh+0x2ec>
 802103e:	4583      	cmp	fp, r0
 8021040:	f340 810a 	ble.w	8021258 <_ZNK8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtPKhssiihhh+0x2ec>
 8021044:	f1be 0f00 	cmp.w	lr, #0
 8021048:	f000 810b 	beq.w	8021262 <_ZNK8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtPKhssiihhh+0x2f6>
 802104c:	2f00      	cmp	r7, #0
 802104e:	f2c0 8100 	blt.w	8021252 <_ZNK8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtPKhssiihhh+0x2e6>
 8021052:	42be      	cmp	r6, r7
 8021054:	f340 80fd 	ble.w	8021252 <_ZNK8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtPKhssiihhh+0x2e6>
 8021058:	9801      	ldr	r0, [sp, #4]
 802105a:	f819 5006 	ldrb.w	r5, [r9, r6]
 802105e:	f830 8016 	ldrh.w	r8, [r0, r6, lsl #1]
 8021062:	ea4f 0ae5 	mov.w	sl, r5, asr #3
 8021066:	f428 60fc 	bic.w	r0, r8, #2016	@ 0x7e0
 802106a:	fb0a fa00 	mul.w	sl, sl, r0
 802106e:	f64f 0b1f 	movw	fp, #63519	@ 0xf81f
 8021072:	f408 68fc 	and.w	r8, r8, #2016	@ 0x7e0
 8021076:	ea0b 105a 	and.w	r0, fp, sl, lsr #5
 802107a:	fb05 f808 	mul.w	r8, r5, r8
 802107e:	f60a 0a01 	addw	sl, sl, #2049	@ 0x801
 8021082:	4482      	add	sl, r0
 8021084:	f108 0020 	add.w	r0, r8, #32
 8021088:	eb00 2018 	add.w	r0, r0, r8, lsr #8
 802108c:	0a00      	lsrs	r0, r0, #8
 802108e:	ea0b 1b5a 	and.w	fp, fp, sl, lsr #5
 8021092:	f400 60fc 	and.w	r0, r0, #2016	@ 0x7e0
 8021096:	ea4b 0b00 	orr.w	fp, fp, r0
 802109a:	3701      	adds	r7, #1
 802109c:	f100 80e6 	bmi.w	802126c <_ZNK8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtPKhssiihhh+0x300>
 80210a0:	42be      	cmp	r6, r7
 80210a2:	f340 80e3 	ble.w	802126c <_ZNK8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtPKhssiihhh+0x300>
 80210a6:	2900      	cmp	r1, #0
 80210a8:	f000 80e3 	beq.w	8021272 <_ZNK8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtPKhssiihhh+0x306>
 80210ac:	3601      	adds	r6, #1
 80210ae:	9801      	ldr	r0, [sp, #4]
 80210b0:	f819 7006 	ldrb.w	r7, [r9, r6]
 80210b4:	f830 0016 	ldrh.w	r0, [r0, r6, lsl #1]
 80210b8:	ea4f 09e7 	mov.w	r9, r7, asr #3
 80210bc:	f420 66fc 	bic.w	r6, r0, #2016	@ 0x7e0
 80210c0:	f400 60fc 	and.w	r0, r0, #2016	@ 0x7e0
 80210c4:	fb09 f906 	mul.w	r9, r9, r6
 80210c8:	fb07 f800 	mul.w	r8, r7, r0
 80210cc:	f64f 001f 	movw	r0, #63519	@ 0xf81f
 80210d0:	ea00 1a59 	and.w	sl, r0, r9, lsr #5
 80210d4:	f609 0901 	addw	r9, r9, #2049	@ 0x801
 80210d8:	44d1      	add	r9, sl
 80210da:	ea00 1659 	and.w	r6, r0, r9, lsr #5
 80210de:	f108 0020 	add.w	r0, r8, #32
 80210e2:	eb00 2018 	add.w	r0, r0, r8, lsr #8
 80210e6:	0a00      	lsrs	r0, r0, #8
 80210e8:	f400 60fc 	and.w	r0, r0, #2016	@ 0x7e0
 80210ec:	4330      	orrs	r0, r6
 80210ee:	b28e      	uxth	r6, r1
 80210f0:	fa1f f98e 	uxth.w	r9, lr
 80210f4:	fb06 f809 	mul.w	r8, r6, r9
 80210f8:	ea4f 4a04 	mov.w	sl, r4, lsl #16
 80210fc:	ebc8 1909 	rsb	r9, r8, r9, lsl #4
 8021100:	0136      	lsls	r6, r6, #4
 8021102:	f00a 6afc 	and.w	sl, sl, #132120576	@ 0x7e00000
 8021106:	f424 64fc 	bic.w	r4, r4, #2016	@ 0x7e0
 802110a:	9601      	str	r6, [sp, #4]
 802110c:	ea4a 0404 	orr.w	r4, sl, r4
 8021110:	fa1f f689 	uxth.w	r6, r9
 8021114:	ea4f 4a02 	mov.w	sl, r2, lsl #16
 8021118:	fb11 f90e 	smulbb	r9, r1, lr
 802111c:	f3c9 09c7 	ubfx	r9, r9, #3, #8
 8021120:	9602      	str	r6, [sp, #8]
 8021122:	f00a 6afc 	and.w	sl, sl, #132120576	@ 0x7e00000
 8021126:	4626      	mov	r6, r4
 8021128:	f422 62fc 	bic.w	r2, r2, #2016	@ 0x7e0
 802112c:	f1ce 0410 	rsb	r4, lr, #16
 8021130:	1a64      	subs	r4, r4, r1
 8021132:	ea4a 0202 	orr.w	r2, sl, r2
 8021136:	ebc9 0141 	rsb	r1, r9, r1, lsl #1
 802113a:	ea4f 4a00 	mov.w	sl, r0, lsl #16
 802113e:	434a      	muls	r2, r1
 8021140:	eb09 0444 	add.w	r4, r9, r4, lsl #1
 8021144:	f00a 6afc 	and.w	sl, sl, #132120576	@ 0x7e00000
 8021148:	f420 60fc 	bic.w	r0, r0, #2016	@ 0x7e0
 802114c:	fb04 2406 	mla	r4, r4, r6, r2
 8021150:	ea4a 0000 	orr.w	r0, sl, r0
 8021154:	fb09 4200 	mla	r2, r9, r0, r4
 8021158:	ea4f 440b 	mov.w	r4, fp, lsl #16
 802115c:	f004 64fc 	and.w	r4, r4, #132120576	@ 0x7e00000
 8021160:	f42b 6bfc 	bic.w	fp, fp, #2016	@ 0x7e0
 8021164:	ea44 0b0b 	orr.w	fp, r4, fp
 8021168:	9c01      	ldr	r4, [sp, #4]
 802116a:	9e02      	ldr	r6, [sp, #8]
 802116c:	9903      	ldr	r1, [sp, #12]
 802116e:	f5c4 7480 	rsb	r4, r4, #256	@ 0x100
 8021172:	1ba4      	subs	r4, r4, r6
 8021174:	9e01      	ldr	r6, [sp, #4]
 8021176:	8808      	ldrh	r0, [r1, #0]
 8021178:	f89d 1050 	ldrb.w	r1, [sp, #80]	@ 0x50
 802117c:	eba6 0608 	sub.w	r6, r6, r8
 8021180:	b2b6      	uxth	r6, r6
 8021182:	b2a4      	uxth	r4, r4
 8021184:	4373      	muls	r3, r6
 8021186:	fb0c 3304 	mla	r3, ip, r4, r3
 802118a:	9c02      	ldr	r4, [sp, #8]
 802118c:	fb04 3505 	mla	r5, r4, r5, r3
 8021190:	fb08 5707 	mla	r7, r8, r7, r5
 8021194:	ebc9 0e4e 	rsb	lr, r9, lr, lsl #1
 8021198:	b289      	uxth	r1, r1
 802119a:	fb0e 2e0b 	mla	lr, lr, fp, r2
 802119e:	f3c7 2707 	ubfx	r7, r7, #8, #8
 80211a2:	434f      	muls	r7, r1
 80211a4:	ea4f 525e 	mov.w	r2, lr, lsr #21
 80211a8:	ea4f 1e5e 	mov.w	lr, lr, lsr #5
 80211ac:	f402 62fc 	and.w	r2, r2, #2016	@ 0x7e0
 80211b0:	1c7b      	adds	r3, r7, #1
 80211b2:	f42e 6efc 	bic.w	lr, lr, #2016	@ 0x7e0
 80211b6:	ea42 0e0e 	orr.w	lr, r2, lr
 80211ba:	eb03 2717 	add.w	r7, r3, r7, lsr #8
 80211be:	fa1f f28e 	uxth.w	r2, lr
 80211c2:	1203      	asrs	r3, r0, #8
 80211c4:	ea6f 2717 	mvn.w	r7, r7, lsr #8
 80211c8:	b2ff      	uxtb	r7, r7
 80211ca:	1215      	asrs	r5, r2, #8
 80211cc:	f003 03f8 	and.w	r3, r3, #248	@ 0xf8
 80211d0:	fb13 f307 	smulbb	r3, r3, r7
 80211d4:	f005 05f8 	and.w	r5, r5, #248	@ 0xf8
 80211d8:	fb05 3501 	mla	r5, r5, r1, r3
 80211dc:	10c3      	asrs	r3, r0, #3
 80211de:	10d4      	asrs	r4, r2, #3
 80211e0:	f003 03fc 	and.w	r3, r3, #252	@ 0xfc
 80211e4:	fb13 f307 	smulbb	r3, r3, r7
 80211e8:	f004 04fc 	and.w	r4, r4, #252	@ 0xfc
 80211ec:	fb04 3401 	mla	r4, r4, r1, r3
 80211f0:	00c3      	lsls	r3, r0, #3
 80211f2:	00d2      	lsls	r2, r2, #3
 80211f4:	b2db      	uxtb	r3, r3
 80211f6:	fb13 f307 	smulbb	r3, r3, r7
 80211fa:	b2d2      	uxtb	r2, r2
 80211fc:	fb02 3101 	mla	r1, r2, r1, r3
 8021200:	b2ad      	uxth	r5, r5
 8021202:	b289      	uxth	r1, r1
 8021204:	b2a4      	uxth	r4, r4
 8021206:	1c6b      	adds	r3, r5, #1
 8021208:	eb03 2515 	add.w	r5, r3, r5, lsr #8
 802120c:	1c62      	adds	r2, r4, #1
 802120e:	1c4b      	adds	r3, r1, #1
 8021210:	eb03 2311 	add.w	r3, r3, r1, lsr #8
 8021214:	eb02 2414 	add.w	r4, r2, r4, lsr #8
 8021218:	f405 4578 	and.w	r5, r5, #63488	@ 0xf800
 802121c:	f3c3 23c4 	ubfx	r3, r3, #11, #5
 8021220:	0964      	lsrs	r4, r4, #5
 8021222:	432b      	orrs	r3, r5
 8021224:	f404 64fc 	and.w	r4, r4, #2016	@ 0x7e0
 8021228:	9a03      	ldr	r2, [sp, #12]
 802122a:	4323      	orrs	r3, r4
 802122c:	8013      	strh	r3, [r2, #0]
 802122e:	b005      	add	sp, #20
 8021230:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 8021234:	f04f 0c00 	mov.w	ip, #0
 8021238:	4664      	mov	r4, ip
 802123a:	e6d6      	b.n	8020fea <_ZNK8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtPKhssiihhh+0x7e>
 802123c:	2300      	movs	r3, #0
 802123e:	469c      	mov	ip, r3
 8021240:	461a      	mov	r2, r3
 8021242:	461c      	mov	r4, r3
 8021244:	e6f8      	b.n	8021038 <_ZNK8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtPKhssiihhh+0xcc>
 8021246:	2300      	movs	r3, #0
 8021248:	461a      	mov	r2, r3
 802124a:	e6f5      	b.n	8021038 <_ZNK8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtPKhssiihhh+0xcc>
 802124c:	460b      	mov	r3, r1
 802124e:	460a      	mov	r2, r1
 8021250:	e6f2      	b.n	8021038 <_ZNK8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtPKhssiihhh+0xcc>
 8021252:	2500      	movs	r5, #0
 8021254:	46ab      	mov	fp, r5
 8021256:	e720      	b.n	802109a <_ZNK8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtPKhssiihhh+0x12e>
 8021258:	2700      	movs	r7, #0
 802125a:	463d      	mov	r5, r7
 802125c:	4638      	mov	r0, r7
 802125e:	46bb      	mov	fp, r7
 8021260:	e745      	b.n	80210ee <_ZNK8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtPKhssiihhh+0x182>
 8021262:	4677      	mov	r7, lr
 8021264:	4675      	mov	r5, lr
 8021266:	4670      	mov	r0, lr
 8021268:	46f3      	mov	fp, lr
 802126a:	e740      	b.n	80210ee <_ZNK8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtPKhssiihhh+0x182>
 802126c:	2700      	movs	r7, #0
 802126e:	4638      	mov	r0, r7
 8021270:	e73d      	b.n	80210ee <_ZNK8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtPKhssiihhh+0x182>
 8021272:	460f      	mov	r7, r1
 8021274:	4608      	mov	r0, r1
 8021276:	e73a      	b.n	80210ee <_ZNK8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtPKhssiihhh+0x182>

08021278 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff>:
 8021278:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 802127c:	b097      	sub	sp, #92	@ 0x5c
 802127e:	9214      	str	r2, [sp, #80]	@ 0x50
 8021280:	9308      	str	r3, [sp, #32]
 8021282:	9a25      	ldr	r2, [sp, #148]	@ 0x94
 8021284:	f89d 30a4 	ldrb.w	r3, [sp, #164]	@ 0xa4
 8021288:	9312      	str	r3, [sp, #72]	@ 0x48
 802128a:	9111      	str	r1, [sp, #68]	@ 0x44
 802128c:	e9dd 1326 	ldrd	r1, r3, [sp, #152]	@ 0x98
 8021290:	9015      	str	r0, [sp, #84]	@ 0x54
 8021292:	6850      	ldr	r0, [r2, #4]
 8021294:	6812      	ldr	r2, [r2, #0]
 8021296:	fb00 1303 	mla	r3, r0, r3, r1
 802129a:	eb02 0343 	add.w	r3, r2, r3, lsl #1
 802129e:	9309      	str	r3, [sp, #36]	@ 0x24
 80212a0:	9b28      	ldr	r3, [sp, #160]	@ 0xa0
 80212a2:	681b      	ldr	r3, [r3, #0]
 80212a4:	930b      	str	r3, [sp, #44]	@ 0x2c
 80212a6:	9b28      	ldr	r3, [sp, #160]	@ 0xa0
 80212a8:	685b      	ldr	r3, [r3, #4]
 80212aa:	930c      	str	r3, [sp, #48]	@ 0x30
 80212ac:	f8bd 3048 	ldrh.w	r3, [sp, #72]	@ 0x48
 80212b0:	930a      	str	r3, [sp, #40]	@ 0x28
 80212b2:	9b11      	ldr	r3, [sp, #68]	@ 0x44
 80212b4:	2b00      	cmp	r3, #0
 80212b6:	dc03      	bgt.n	80212c0 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x48>
 80212b8:	9b14      	ldr	r3, [sp, #80]	@ 0x50
 80212ba:	2b00      	cmp	r3, #0
 80212bc:	f340 83cb 	ble.w	8021a56 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x7de>
 80212c0:	9b28      	ldr	r3, [sp, #160]	@ 0xa0
 80212c2:	f9b3 1008 	ldrsh.w	r1, [r3, #8]
 80212c6:	f9b3 200c 	ldrsh.w	r2, [r3, #12]
 80212ca:	1e48      	subs	r0, r1, #1
 80212cc:	1e55      	subs	r5, r2, #1
 80212ce:	9b08      	ldr	r3, [sp, #32]
 80212d0:	2b00      	cmp	r3, #0
 80212d2:	f340 81a3 	ble.w	802161c <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3a4>
 80212d6:	9e21      	ldr	r6, [sp, #132]	@ 0x84
 80212d8:	9b22      	ldr	r3, [sp, #136]	@ 0x88
 80212da:	1436      	asrs	r6, r6, #16
 80212dc:	ea4f 4323 	mov.w	r3, r3, asr #16
 80212e0:	d406      	bmi.n	80212f0 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x78>
 80212e2:	4286      	cmp	r6, r0
 80212e4:	da04      	bge.n	80212f0 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x78>
 80212e6:	2b00      	cmp	r3, #0
 80212e8:	db02      	blt.n	80212f0 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x78>
 80212ea:	42ab      	cmp	r3, r5
 80212ec:	f2c0 8197 	blt.w	802161e <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3a6>
 80212f0:	3601      	adds	r6, #1
 80212f2:	f100 8184 	bmi.w	80215fe <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x386>
 80212f6:	42b1      	cmp	r1, r6
 80212f8:	f2c0 8181 	blt.w	80215fe <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x386>
 80212fc:	3301      	adds	r3, #1
 80212fe:	f100 817e 	bmi.w	80215fe <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x386>
 8021302:	429a      	cmp	r2, r3
 8021304:	f2c0 817b 	blt.w	80215fe <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x386>
 8021308:	9b08      	ldr	r3, [sp, #32]
 802130a:	9f09      	ldr	r7, [sp, #36]	@ 0x24
 802130c:	9313      	str	r3, [sp, #76]	@ 0x4c
 802130e:	f64f 061f 	movw	r6, #63519	@ 0xf81f
 8021312:	9b13      	ldr	r3, [sp, #76]	@ 0x4c
 8021314:	2b00      	cmp	r3, #0
 8021316:	f340 81a4 	ble.w	8021662 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3ea>
 802131a:	9b22      	ldr	r3, [sp, #136]	@ 0x88
 802131c:	9d21      	ldr	r5, [sp, #132]	@ 0x84
 802131e:	1418      	asrs	r0, r3, #16
 8021320:	9b21      	ldr	r3, [sp, #132]	@ 0x84
 8021322:	f3c3 3103 	ubfx	r1, r3, #12, #4
 8021326:	9b22      	ldr	r3, [sp, #136]	@ 0x88
 8021328:	f3c3 3c03 	ubfx	ip, r3, #12, #4
 802132c:	9b28      	ldr	r3, [sp, #160]	@ 0xa0
 802132e:	142d      	asrs	r5, r5, #16
 8021330:	e9d3 2302 	ldrd	r2, r3, [r3, #8]
 8021334:	f100 81f8 	bmi.w	8021728 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x4b0>
 8021338:	f102 3eff 	add.w	lr, r2, #4294967295
 802133c:	4575      	cmp	r5, lr
 802133e:	f280 81f3 	bge.w	8021728 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x4b0>
 8021342:	2800      	cmp	r0, #0
 8021344:	f2c0 81f0 	blt.w	8021728 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x4b0>
 8021348:	f103 3eff 	add.w	lr, r3, #4294967295
 802134c:	4570      	cmp	r0, lr
 802134e:	f280 81eb 	bge.w	8021728 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x4b0>
 8021352:	9b0c      	ldr	r3, [sp, #48]	@ 0x30
 8021354:	b212      	sxth	r2, r2
 8021356:	fb00 5002 	mla	r0, r0, r2, r5
 802135a:	fa1f fe81 	uxth.w	lr, r1
 802135e:	eb03 0a00 	add.w	sl, r3, r0
 8021362:	ea4f 150e 	mov.w	r5, lr, lsl #4
 8021366:	f813 9000 	ldrb.w	r9, [r3, r0]
 802136a:	f89a 8001 	ldrb.w	r8, [sl, #1]
 802136e:	f5c5 7380 	rsb	r3, r5, #256	@ 0x100
 8021372:	b29b      	uxth	r3, r3
 8021374:	f1bc 0f00 	cmp.w	ip, #0
 8021378:	f000 81b9 	beq.w	80216ee <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x476>
 802137c:	f81a 4002 	ldrb.w	r4, [sl, r2]
 8021380:	940d      	str	r4, [sp, #52]	@ 0x34
 8021382:	eb0a 0b02 	add.w	fp, sl, r2
 8021386:	fa1f fa8c 	uxth.w	sl, ip
 802138a:	fb0a fe0e 	mul.w	lr, sl, lr
 802138e:	ebce 1a0a 	rsb	sl, lr, sl, lsl #4
 8021392:	fa1f fa8a 	uxth.w	sl, sl
 8021396:	eba5 050e 	sub.w	r5, r5, lr
 802139a:	f89b 4001 	ldrb.w	r4, [fp, #1]
 802139e:	940e      	str	r4, [sp, #56]	@ 0x38
 80213a0:	eba3 030a 	sub.w	r3, r3, sl
 80213a4:	b2ad      	uxth	r5, r5
 80213a6:	9c0d      	ldr	r4, [sp, #52]	@ 0x34
 80213a8:	b29b      	uxth	r3, r3
 80213aa:	fb08 f505 	mul.w	r5, r8, r5
 80213ae:	fb09 5303 	mla	r3, r9, r3, r5
 80213b2:	fb0a 3304 	mla	r3, sl, r4, r3
 80213b6:	9c0e      	ldr	r4, [sp, #56]	@ 0x38
 80213b8:	fb0e 3304 	mla	r3, lr, r4, r3
 80213bc:	f3c3 2307 	ubfx	r3, r3, #8, #8
 80213c0:	2b00      	cmp	r3, #0
 80213c2:	f000 810f 	beq.w	80215e4 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x36c>
 80213c6:	9c0b      	ldr	r4, [sp, #44]	@ 0x2c
 80213c8:	f1b9 0fff 	cmp.w	r9, #255	@ 0xff
 80213cc:	eb04 0540 	add.w	r5, r4, r0, lsl #1
 80213d0:	f834 0010 	ldrh.w	r0, [r4, r0, lsl #1]
 80213d4:	f000 8190 	beq.w	80216f8 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x480>
 80213d8:	f420 6efc 	bic.w	lr, r0, #2016	@ 0x7e0
 80213dc:	ea4f 0ae9 	mov.w	sl, r9, asr #3
 80213e0:	f400 60fc 	and.w	r0, r0, #2016	@ 0x7e0
 80213e4:	fb09 f000 	mul.w	r0, r9, r0
 80213e8:	fb0a fe0e 	mul.w	lr, sl, lr
 80213ec:	ea06 195e 	and.w	r9, r6, lr, lsr #5
 80213f0:	f100 0b20 	add.w	fp, r0, #32
 80213f4:	f60e 0e01 	addw	lr, lr, #2049	@ 0x801
 80213f8:	44ce      	add	lr, r9
 80213fa:	eb0b 2910 	add.w	r9, fp, r0, lsr #8
 80213fe:	ea4f 2919 	mov.w	r9, r9, lsr #8
 8021402:	ea06 1e5e 	and.w	lr, r6, lr, lsr #5
 8021406:	f409 69fc 	and.w	r9, r9, #2016	@ 0x7e0
 802140a:	ea4e 0909 	orr.w	r9, lr, r9
 802140e:	f1b8 0fff 	cmp.w	r8, #255	@ 0xff
 8021412:	8868      	ldrh	r0, [r5, #2]
 8021414:	d019      	beq.n	802144a <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1d2>
 8021416:	f420 6efc 	bic.w	lr, r0, #2016	@ 0x7e0
 802141a:	ea4f 0ae8 	mov.w	sl, r8, asr #3
 802141e:	f400 60fc 	and.w	r0, r0, #2016	@ 0x7e0
 8021422:	fb08 f800 	mul.w	r8, r8, r0
 8021426:	fb0a fe0e 	mul.w	lr, sl, lr
 802142a:	ea06 105e 	and.w	r0, r6, lr, lsr #5
 802142e:	f108 0b20 	add.w	fp, r8, #32
 8021432:	f60e 0e01 	addw	lr, lr, #2049	@ 0x801
 8021436:	4486      	add	lr, r0
 8021438:	eb0b 2018 	add.w	r0, fp, r8, lsr #8
 802143c:	0a00      	lsrs	r0, r0, #8
 802143e:	ea06 1e5e 	and.w	lr, r6, lr, lsr #5
 8021442:	f400 60fc 	and.w	r0, r0, #2016	@ 0x7e0
 8021446:	ea4e 0000 	orr.w	r0, lr, r0
 802144a:	ea4f 4e09 	mov.w	lr, r9, lsl #16
 802144e:	ea4f 4a00 	mov.w	sl, r0, lsl #16
 8021452:	f00e 6efc 	and.w	lr, lr, #132120576	@ 0x7e00000
 8021456:	f429 69fc 	bic.w	r9, r9, #2016	@ 0x7e0
 802145a:	f00a 6afc 	and.w	sl, sl, #132120576	@ 0x7e00000
 802145e:	f420 60fc 	bic.w	r0, r0, #2016	@ 0x7e0
 8021462:	ea4e 0909 	orr.w	r9, lr, r9
 8021466:	ea4a 0000 	orr.w	r0, sl, r0
 802146a:	f1bc 0f00 	cmp.w	ip, #0
 802146e:	f000 8145 	beq.w	80216fc <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x484>
 8021472:	f102 4200 	add.w	r2, r2, #2147483648	@ 0x80000000
 8021476:	3a01      	subs	r2, #1
 8021478:	0052      	lsls	r2, r2, #1
 802147a:	9c0d      	ldr	r4, [sp, #52]	@ 0x34
 802147c:	3202      	adds	r2, #2
 802147e:	2cff      	cmp	r4, #255	@ 0xff
 8021480:	eb05 0e02 	add.w	lr, r5, r2
 8021484:	5aaa      	ldrh	r2, [r5, r2]
 8021486:	d018      	beq.n	80214ba <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x242>
 8021488:	f422 65fc 	bic.w	r5, r2, #2016	@ 0x7e0
 802148c:	f402 62fc 	and.w	r2, r2, #2016	@ 0x7e0
 8021490:	fb04 fa02 	mul.w	sl, r4, r2
 8021494:	ea4f 08e4 	mov.w	r8, r4, asr #3
 8021498:	fb08 f805 	mul.w	r8, r8, r5
 802149c:	f10a 0520 	add.w	r5, sl, #32
 80214a0:	ea06 1258 	and.w	r2, r6, r8, lsr #5
 80214a4:	eb05 251a 	add.w	r5, r5, sl, lsr #8
 80214a8:	f608 0801 	addw	r8, r8, #2049	@ 0x801
 80214ac:	4442      	add	r2, r8
 80214ae:	0a2d      	lsrs	r5, r5, #8
 80214b0:	ea06 1252 	and.w	r2, r6, r2, lsr #5
 80214b4:	f405 65fc 	and.w	r5, r5, #2016	@ 0x7e0
 80214b8:	432a      	orrs	r2, r5
 80214ba:	9c0e      	ldr	r4, [sp, #56]	@ 0x38
 80214bc:	f8be 5002 	ldrh.w	r5, [lr, #2]
 80214c0:	2cff      	cmp	r4, #255	@ 0xff
 80214c2:	d01a      	beq.n	80214fa <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x282>
 80214c4:	f425 6efc 	bic.w	lr, r5, #2016	@ 0x7e0
 80214c8:	f405 65fc 	and.w	r5, r5, #2016	@ 0x7e0
 80214cc:	fb04 fa05 	mul.w	sl, r4, r5
 80214d0:	ea4f 08e4 	mov.w	r8, r4, asr #3
 80214d4:	fb08 f80e 	mul.w	r8, r8, lr
 80214d8:	f10a 0e20 	add.w	lr, sl, #32
 80214dc:	ea06 1558 	and.w	r5, r6, r8, lsr #5
 80214e0:	eb0e 2e1a 	add.w	lr, lr, sl, lsr #8
 80214e4:	f608 0801 	addw	r8, r8, #2049	@ 0x801
 80214e8:	4445      	add	r5, r8
 80214ea:	ea4f 2e1e 	mov.w	lr, lr, lsr #8
 80214ee:	ea06 1555 	and.w	r5, r6, r5, lsr #5
 80214f2:	f40e 6efc 	and.w	lr, lr, #2016	@ 0x7e0
 80214f6:	ea45 050e 	orr.w	r5, r5, lr
 80214fa:	fb1c fe01 	smulbb	lr, ip, r1
 80214fe:	ea4f 0eee 	mov.w	lr, lr, asr #3
 8021502:	f1cc 0810 	rsb	r8, ip, #16
 8021506:	eba8 0801 	sub.w	r8, r8, r1
 802150a:	ea4f 4a02 	mov.w	sl, r2, lsl #16
 802150e:	ebce 0141 	rsb	r1, lr, r1, lsl #1
 8021512:	eb0e 0848 	add.w	r8, lr, r8, lsl #1
 8021516:	ea4f 4b05 	mov.w	fp, r5, lsl #16
 802151a:	4341      	muls	r1, r0
 802151c:	f00a 6afc 	and.w	sl, sl, #132120576	@ 0x7e00000
 8021520:	f422 62fc 	bic.w	r2, r2, #2016	@ 0x7e0
 8021524:	ea4a 0202 	orr.w	r2, sl, r2
 8021528:	ebce 0c4c 	rsb	ip, lr, ip, lsl #1
 802152c:	fb09 1108 	mla	r1, r9, r8, r1
 8021530:	f00b 6bfc 	and.w	fp, fp, #132120576	@ 0x7e00000
 8021534:	f425 65fc 	bic.w	r5, r5, #2016	@ 0x7e0
 8021538:	fb0c 1102 	mla	r1, ip, r2, r1
 802153c:	ea4b 0505 	orr.w	r5, fp, r5
 8021540:	fb0e 1e05 	mla	lr, lr, r5, r1
 8021544:	ea4f 525e 	mov.w	r2, lr, lsr #21
 8021548:	ea4f 1e5e 	mov.w	lr, lr, lsr #5
 802154c:	f402 62fc 	and.w	r2, r2, #2016	@ 0x7e0
 8021550:	f42e 6efc 	bic.w	lr, lr, #2016	@ 0x7e0
 8021554:	ea42 0e0e 	orr.w	lr, r2, lr
 8021558:	fa1f f28e 	uxth.w	r2, lr
 802155c:	2bff      	cmp	r3, #255	@ 0xff
 802155e:	d103      	bne.n	8021568 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2f0>
 8021560:	9912      	ldr	r1, [sp, #72]	@ 0x48
 8021562:	29ff      	cmp	r1, #255	@ 0xff
 8021564:	f000 80de 	beq.w	8021724 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x4ac>
 8021568:	990a      	ldr	r1, [sp, #40]	@ 0x28
 802156a:	8838      	ldrh	r0, [r7, #0]
 802156c:	9c0a      	ldr	r4, [sp, #40]	@ 0x28
 802156e:	434b      	muls	r3, r1
 8021570:	f103 0c01 	add.w	ip, r3, #1
 8021574:	eb0c 2323 	add.w	r3, ip, r3, asr #8
 8021578:	ea6f 2323 	mvn.w	r3, r3, asr #8
 802157c:	fa5f fc83 	uxtb.w	ip, r3
 8021580:	1203      	asrs	r3, r0, #8
 8021582:	1215      	asrs	r5, r2, #8
 8021584:	f003 03f8 	and.w	r3, r3, #248	@ 0xf8
 8021588:	fb13 f30c 	smulbb	r3, r3, ip
 802158c:	f005 05f8 	and.w	r5, r5, #248	@ 0xf8
 8021590:	fb05 3501 	mla	r5, r5, r1, r3
 8021594:	10c3      	asrs	r3, r0, #3
 8021596:	10d1      	asrs	r1, r2, #3
 8021598:	f003 03fc 	and.w	r3, r3, #252	@ 0xfc
 802159c:	fb13 f30c 	smulbb	r3, r3, ip
 80215a0:	f001 01fc 	and.w	r1, r1, #252	@ 0xfc
 80215a4:	fb01 3104 	mla	r1, r1, r4, r3
 80215a8:	00c3      	lsls	r3, r0, #3
 80215aa:	00d2      	lsls	r2, r2, #3
 80215ac:	b2db      	uxtb	r3, r3
 80215ae:	b2d2      	uxtb	r2, r2
 80215b0:	fb13 f30c 	smulbb	r3, r3, ip
 80215b4:	b2ad      	uxth	r5, r5
 80215b6:	fb02 3304 	mla	r3, r2, r4, r3
 80215ba:	b29a      	uxth	r2, r3
 80215bc:	1c6b      	adds	r3, r5, #1
 80215be:	b289      	uxth	r1, r1
 80215c0:	eb03 2515 	add.w	r5, r3, r5, lsr #8
 80215c4:	1c53      	adds	r3, r2, #1
 80215c6:	eb03 2312 	add.w	r3, r3, r2, lsr #8
 80215ca:	1c4a      	adds	r2, r1, #1
 80215cc:	eb02 2111 	add.w	r1, r2, r1, lsr #8
 80215d0:	f405 4578 	and.w	r5, r5, #63488	@ 0xf800
 80215d4:	f3c3 23c4 	ubfx	r3, r3, #11, #5
 80215d8:	0949      	lsrs	r1, r1, #5
 80215da:	432b      	orrs	r3, r5
 80215dc:	f401 61fc 	and.w	r1, r1, #2016	@ 0x7e0
 80215e0:	430b      	orrs	r3, r1
 80215e2:	803b      	strh	r3, [r7, #0]
 80215e4:	9b21      	ldr	r3, [sp, #132]	@ 0x84
 80215e6:	9a23      	ldr	r2, [sp, #140]	@ 0x8c
 80215e8:	4413      	add	r3, r2
 80215ea:	9321      	str	r3, [sp, #132]	@ 0x84
 80215ec:	9a22      	ldr	r2, [sp, #136]	@ 0x88
 80215ee:	9b24      	ldr	r3, [sp, #144]	@ 0x90
 80215f0:	441a      	add	r2, r3
 80215f2:	9b13      	ldr	r3, [sp, #76]	@ 0x4c
 80215f4:	9222      	str	r2, [sp, #136]	@ 0x88
 80215f6:	3b01      	subs	r3, #1
 80215f8:	3702      	adds	r7, #2
 80215fa:	9313      	str	r3, [sp, #76]	@ 0x4c
 80215fc:	e689      	b.n	8021312 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x9a>
 80215fe:	9b21      	ldr	r3, [sp, #132]	@ 0x84
 8021600:	9e23      	ldr	r6, [sp, #140]	@ 0x8c
 8021602:	9c22      	ldr	r4, [sp, #136]	@ 0x88
 8021604:	4433      	add	r3, r6
 8021606:	9321      	str	r3, [sp, #132]	@ 0x84
 8021608:	9b24      	ldr	r3, [sp, #144]	@ 0x90
 802160a:	441c      	add	r4, r3
 802160c:	9b08      	ldr	r3, [sp, #32]
 802160e:	9422      	str	r4, [sp, #136]	@ 0x88
 8021610:	3b01      	subs	r3, #1
 8021612:	9308      	str	r3, [sp, #32]
 8021614:	9b09      	ldr	r3, [sp, #36]	@ 0x24
 8021616:	3302      	adds	r3, #2
 8021618:	9309      	str	r3, [sp, #36]	@ 0x24
 802161a:	e658      	b.n	80212ce <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x56>
 802161c:	d028      	beq.n	8021670 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3f8>
 802161e:	9b08      	ldr	r3, [sp, #32]
 8021620:	9823      	ldr	r0, [sp, #140]	@ 0x8c
 8021622:	9d21      	ldr	r5, [sp, #132]	@ 0x84
 8021624:	3b01      	subs	r3, #1
 8021626:	fb00 5003 	mla	r0, r0, r3, r5
 802162a:	1400      	asrs	r0, r0, #16
 802162c:	f53f ae6c 	bmi.w	8021308 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x90>
 8021630:	3901      	subs	r1, #1
 8021632:	4288      	cmp	r0, r1
 8021634:	f6bf ae68 	bge.w	8021308 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x90>
 8021638:	9924      	ldr	r1, [sp, #144]	@ 0x90
 802163a:	9822      	ldr	r0, [sp, #136]	@ 0x88
 802163c:	fb01 0303 	mla	r3, r1, r3, r0
 8021640:	141b      	asrs	r3, r3, #16
 8021642:	f53f ae61 	bmi.w	8021308 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x90>
 8021646:	3a01      	subs	r2, #1
 8021648:	4293      	cmp	r3, r2
 802164a:	f6bf ae5d 	bge.w	8021308 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x90>
 802164e:	9b08      	ldr	r3, [sp, #32]
 8021650:	f8dd e024 	ldr.w	lr, [sp, #36]	@ 0x24
 8021654:	9313      	str	r3, [sp, #76]	@ 0x4c
 8021656:	f64f 061f 	movw	r6, #63519	@ 0xf81f
 802165a:	9b13      	ldr	r3, [sp, #76]	@ 0x4c
 802165c:	2b00      	cmp	r3, #0
 802165e:	f300 8082 	bgt.w	8021766 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x4ee>
 8021662:	9b08      	ldr	r3, [sp, #32]
 8021664:	ea23 74e3 	bic.w	r4, r3, r3, asr #31
 8021668:	9b09      	ldr	r3, [sp, #36]	@ 0x24
 802166a:	eb03 0344 	add.w	r3, r3, r4, lsl #1
 802166e:	9309      	str	r3, [sp, #36]	@ 0x24
 8021670:	9b11      	ldr	r3, [sp, #68]	@ 0x44
 8021672:	2b00      	cmp	r3, #0
 8021674:	f340 81ef 	ble.w	8021a56 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x7de>
 8021678:	ee30 0a04 	vadd.f32	s0, s0, s8
 802167c:	eeb7 7a00 	vmov.f32	s14, #112	@ 0x3f800000  1.0
 8021680:	eec7 7a00 	vdiv.f32	s15, s14, s0
 8021684:	9b20      	ldr	r3, [sp, #128]	@ 0x80
 8021686:	ee70 0aa4 	vadd.f32	s1, s1, s9
 802168a:	ee31 1a05 	vadd.f32	s2, s2, s10
 802168e:	ee20 7aa7 	vmul.f32	s14, s1, s15
 8021692:	eef0 6a62 	vmov.f32	s13, s5
 8021696:	ee61 7a27 	vmul.f32	s15, s2, s15
 802169a:	eefe 6ac8 	vcvt.s32.f32	s13, s13, #16
 802169e:	ee77 2a62 	vsub.f32	s5, s14, s5
 80216a2:	edcd 6a21 	vstr	s13, [sp, #132]	@ 0x84
 80216a6:	eefe 2ac8 	vcvt.s32.f32	s5, s5, #16
 80216aa:	eef0 6a43 	vmov.f32	s13, s6
 80216ae:	ee37 3ac3 	vsub.f32	s6, s15, s6
 80216b2:	ee12 2a90 	vmov	r2, s5
 80216b6:	eebe 3ac8 	vcvt.s32.f32	s6, s6, #16
 80216ba:	fb92 f3f3 	sdiv	r3, r2, r3
 80216be:	ee13 2a10 	vmov	r2, s6
 80216c2:	9323      	str	r3, [sp, #140]	@ 0x8c
 80216c4:	9b20      	ldr	r3, [sp, #128]	@ 0x80
 80216c6:	fb92 f3f3 	sdiv	r3, r2, r3
 80216ca:	9324      	str	r3, [sp, #144]	@ 0x90
 80216cc:	9b11      	ldr	r3, [sp, #68]	@ 0x44
 80216ce:	9a14      	ldr	r2, [sp, #80]	@ 0x50
 80216d0:	3b01      	subs	r3, #1
 80216d2:	eefe 6ac8 	vcvt.s32.f32	s13, s13, #16
 80216d6:	9311      	str	r3, [sp, #68]	@ 0x44
 80216d8:	9b20      	ldr	r3, [sp, #128]	@ 0x80
 80216da:	edcd 6a22 	vstr	s13, [sp, #136]	@ 0x88
 80216de:	bf08      	it	eq
 80216e0:	4613      	moveq	r3, r2
 80216e2:	9308      	str	r3, [sp, #32]
 80216e4:	eeb0 3a67 	vmov.f32	s6, s15
 80216e8:	eef0 2a47 	vmov.f32	s5, s14
 80216ec:	e5e1      	b.n	80212b2 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3a>
 80216ee:	fb08 f505 	mul.w	r5, r8, r5
 80216f2:	fb09 5303 	mla	r3, r9, r3, r5
 80216f6:	e661      	b.n	80213bc <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x144>
 80216f8:	4681      	mov	r9, r0
 80216fa:	e688      	b.n	802140e <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x196>
 80216fc:	f1c1 0210 	rsb	r2, r1, #16
 8021700:	4341      	muls	r1, r0
 8021702:	fb09 1902 	mla	r9, r9, r2, r1
 8021706:	ea4f 0949 	mov.w	r9, r9, lsl #1
 802170a:	ea4f 5259 	mov.w	r2, r9, lsr #21
 802170e:	ea4f 1959 	mov.w	r9, r9, lsr #5
 8021712:	f402 62fc 	and.w	r2, r2, #2016	@ 0x7e0
 8021716:	f429 69fc 	bic.w	r9, r9, #2016	@ 0x7e0
 802171a:	ea42 0909 	orr.w	r9, r2, r9
 802171e:	fa1f f289 	uxth.w	r2, r9
 8021722:	e71b      	b.n	802155c <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2e4>
 8021724:	803a      	strh	r2, [r7, #0]
 8021726:	e75d      	b.n	80215e4 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x36c>
 8021728:	f115 0e01 	adds.w	lr, r5, #1
 802172c:	f53f af5a 	bmi.w	80215e4 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x36c>
 8021730:	4572      	cmp	r2, lr
 8021732:	f6ff af57 	blt.w	80215e4 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x36c>
 8021736:	f110 0e01 	adds.w	lr, r0, #1
 802173a:	f53f af53 	bmi.w	80215e4 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x36c>
 802173e:	4573      	cmp	r3, lr
 8021740:	f6ff af50 	blt.w	80215e4 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x36c>
 8021744:	9c12      	ldr	r4, [sp, #72]	@ 0x48
 8021746:	9502      	str	r5, [sp, #8]
 8021748:	b21b      	sxth	r3, r3
 802174a:	b212      	sxth	r2, r2
 802174c:	e9cd 0103 	strd	r0, r1, [sp, #12]
 8021750:	9301      	str	r3, [sp, #4]
 8021752:	9200      	str	r2, [sp, #0]
 8021754:	e9cd c405 	strd	ip, r4, [sp, #20]
 8021758:	e9dd 230b 	ldrd	r2, r3, [sp, #44]	@ 0x2c
 802175c:	4639      	mov	r1, r7
 802175e:	9815      	ldr	r0, [sp, #84]	@ 0x54
 8021760:	f7ff fc04 	bl	8020f6c <_ZNK8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtPKhssiihhh>
 8021764:	e73e      	b.n	80215e4 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x36c>
 8021766:	9b21      	ldr	r3, [sp, #132]	@ 0x84
 8021768:	f3c3 3203 	ubfx	r2, r3, #12, #4
 802176c:	9b22      	ldr	r3, [sp, #136]	@ 0x88
 802176e:	f3c3 3503 	ubfx	r5, r3, #12, #4
 8021772:	9b28      	ldr	r3, [sp, #160]	@ 0xa0
 8021774:	f9b3 1008 	ldrsh.w	r1, [r3, #8]
 8021778:	9b22      	ldr	r3, [sp, #136]	@ 0x88
 802177a:	141f      	asrs	r7, r3, #16
 802177c:	9b21      	ldr	r3, [sp, #132]	@ 0x84
 802177e:	141b      	asrs	r3, r3, #16
 8021780:	fb01 3707 	mla	r7, r1, r7, r3
 8021784:	9b0c      	ldr	r3, [sp, #48]	@ 0x30
 8021786:	fa1f fc82 	uxth.w	ip, r2
 802178a:	eb03 0a07 	add.w	sl, r3, r7
 802178e:	ea4f 100c 	mov.w	r0, ip, lsl #4
 8021792:	f813 9007 	ldrb.w	r9, [r3, r7]
 8021796:	f89a 8001 	ldrb.w	r8, [sl, #1]
 802179a:	f5c0 7380 	rsb	r3, r0, #256	@ 0x100
 802179e:	b29b      	uxth	r3, r3
 80217a0:	2d00      	cmp	r5, #0
 80217a2:	f000 813d 	beq.w	8021a20 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x7a8>
 80217a6:	f81a 4001 	ldrb.w	r4, [sl, r1]
 80217aa:	940f      	str	r4, [sp, #60]	@ 0x3c
 80217ac:	eb0a 0b01 	add.w	fp, sl, r1
 80217b0:	fa1f fa85 	uxth.w	sl, r5
 80217b4:	fb0a fc0c 	mul.w	ip, sl, ip
 80217b8:	ebcc 1a0a 	rsb	sl, ip, sl, lsl #4
 80217bc:	fa1f fa8a 	uxth.w	sl, sl
 80217c0:	eba0 000c 	sub.w	r0, r0, ip
 80217c4:	eba3 030a 	sub.w	r3, r3, sl
 80217c8:	b280      	uxth	r0, r0
 80217ca:	fb08 f000 	mul.w	r0, r8, r0
 80217ce:	b29b      	uxth	r3, r3
 80217d0:	fb09 0303 	mla	r3, r9, r3, r0
 80217d4:	980f      	ldr	r0, [sp, #60]	@ 0x3c
 80217d6:	f89b 4001 	ldrb.w	r4, [fp, #1]
 80217da:	9410      	str	r4, [sp, #64]	@ 0x40
 80217dc:	fb0a 3300 	mla	r3, sl, r0, r3
 80217e0:	fb0c 3304 	mla	r3, ip, r4, r3
 80217e4:	f3c3 2307 	ubfx	r3, r3, #8, #8
 80217e8:	2b00      	cmp	r3, #0
 80217ea:	f000 810b 	beq.w	8021a04 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x78c>
 80217ee:	980b      	ldr	r0, [sp, #44]	@ 0x2c
 80217f0:	9c0b      	ldr	r4, [sp, #44]	@ 0x2c
 80217f2:	f1b9 0fff 	cmp.w	r9, #255	@ 0xff
 80217f6:	eb00 0047 	add.w	r0, r0, r7, lsl #1
 80217fa:	f834 7017 	ldrh.w	r7, [r4, r7, lsl #1]
 80217fe:	f000 8114 	beq.w	8021a2a <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x7b2>
 8021802:	f427 6cfc 	bic.w	ip, r7, #2016	@ 0x7e0
 8021806:	ea4f 0ae9 	mov.w	sl, r9, asr #3
 802180a:	f407 67fc 	and.w	r7, r7, #2016	@ 0x7e0
 802180e:	fb09 f707 	mul.w	r7, r9, r7
 8021812:	fb0a fc0c 	mul.w	ip, sl, ip
 8021816:	ea06 195c 	and.w	r9, r6, ip, lsr #5
 802181a:	f107 0b20 	add.w	fp, r7, #32
 802181e:	f60c 0c01 	addw	ip, ip, #2049	@ 0x801
 8021822:	44cc      	add	ip, r9
 8021824:	eb0b 2917 	add.w	r9, fp, r7, lsr #8
 8021828:	ea4f 2919 	mov.w	r9, r9, lsr #8
 802182c:	ea06 1c5c 	and.w	ip, r6, ip, lsr #5
 8021830:	f409 69fc 	and.w	r9, r9, #2016	@ 0x7e0
 8021834:	ea4c 0909 	orr.w	r9, ip, r9
 8021838:	f1b8 0fff 	cmp.w	r8, #255	@ 0xff
 802183c:	8847      	ldrh	r7, [r0, #2]
 802183e:	d019      	beq.n	8021874 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x5fc>
 8021840:	f427 6cfc 	bic.w	ip, r7, #2016	@ 0x7e0
 8021844:	ea4f 0ae8 	mov.w	sl, r8, asr #3
 8021848:	f407 67fc 	and.w	r7, r7, #2016	@ 0x7e0
 802184c:	fb08 f807 	mul.w	r8, r8, r7
 8021850:	fb0a fc0c 	mul.w	ip, sl, ip
 8021854:	ea06 175c 	and.w	r7, r6, ip, lsr #5
 8021858:	f108 0b20 	add.w	fp, r8, #32
 802185c:	f60c 0c01 	addw	ip, ip, #2049	@ 0x801
 8021860:	44bc      	add	ip, r7
 8021862:	eb0b 2718 	add.w	r7, fp, r8, lsr #8
 8021866:	0a3f      	lsrs	r7, r7, #8
 8021868:	ea06 1c5c 	and.w	ip, r6, ip, lsr #5
 802186c:	f407 67fc 	and.w	r7, r7, #2016	@ 0x7e0
 8021870:	ea4c 0707 	orr.w	r7, ip, r7
 8021874:	ea4f 4c09 	mov.w	ip, r9, lsl #16
 8021878:	ea4f 4a07 	mov.w	sl, r7, lsl #16
 802187c:	f00c 6cfc 	and.w	ip, ip, #132120576	@ 0x7e00000
 8021880:	f429 69fc 	bic.w	r9, r9, #2016	@ 0x7e0
 8021884:	f00a 6afc 	and.w	sl, sl, #132120576	@ 0x7e00000
 8021888:	f427 67fc 	bic.w	r7, r7, #2016	@ 0x7e0
 802188c:	ea4c 0909 	orr.w	r9, ip, r9
 8021890:	ea4a 0707 	orr.w	r7, sl, r7
 8021894:	2d00      	cmp	r5, #0
 8021896:	f000 80ca 	beq.w	8021a2e <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x7b6>
 802189a:	f101 4100 	add.w	r1, r1, #2147483648	@ 0x80000000
 802189e:	3901      	subs	r1, #1
 80218a0:	0049      	lsls	r1, r1, #1
 80218a2:	3102      	adds	r1, #2
 80218a4:	eb00 0c01 	add.w	ip, r0, r1
 80218a8:	5a41      	ldrh	r1, [r0, r1]
 80218aa:	980f      	ldr	r0, [sp, #60]	@ 0x3c
 80218ac:	28ff      	cmp	r0, #255	@ 0xff
 80218ae:	d019      	beq.n	80218e4 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x66c>
 80218b0:	9c0f      	ldr	r4, [sp, #60]	@ 0x3c
 80218b2:	f421 60fc 	bic.w	r0, r1, #2016	@ 0x7e0
 80218b6:	f401 61fc 	and.w	r1, r1, #2016	@ 0x7e0
 80218ba:	fb04 fa01 	mul.w	sl, r4, r1
 80218be:	ea4f 08e4 	mov.w	r8, r4, asr #3
 80218c2:	fb08 f800 	mul.w	r8, r8, r0
 80218c6:	f10a 0020 	add.w	r0, sl, #32
 80218ca:	ea06 1158 	and.w	r1, r6, r8, lsr #5
 80218ce:	eb00 201a 	add.w	r0, r0, sl, lsr #8
 80218d2:	f608 0801 	addw	r8, r8, #2049	@ 0x801
 80218d6:	4441      	add	r1, r8
 80218d8:	0a00      	lsrs	r0, r0, #8
 80218da:	ea06 1151 	and.w	r1, r6, r1, lsr #5
 80218de:	f400 60fc 	and.w	r0, r0, #2016	@ 0x7e0
 80218e2:	4301      	orrs	r1, r0
 80218e4:	9c10      	ldr	r4, [sp, #64]	@ 0x40
 80218e6:	f8bc 0002 	ldrh.w	r0, [ip, #2]
 80218ea:	2cff      	cmp	r4, #255	@ 0xff
 80218ec:	d01a      	beq.n	8021924 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x6ac>
 80218ee:	f420 6cfc 	bic.w	ip, r0, #2016	@ 0x7e0
 80218f2:	f400 60fc 	and.w	r0, r0, #2016	@ 0x7e0
 80218f6:	fb04 fa00 	mul.w	sl, r4, r0
 80218fa:	ea4f 08e4 	mov.w	r8, r4, asr #3
 80218fe:	fb08 f80c 	mul.w	r8, r8, ip
 8021902:	f10a 0c20 	add.w	ip, sl, #32
 8021906:	ea06 1058 	and.w	r0, r6, r8, lsr #5
 802190a:	eb0c 2c1a 	add.w	ip, ip, sl, lsr #8
 802190e:	f608 0801 	addw	r8, r8, #2049	@ 0x801
 8021912:	4440      	add	r0, r8
 8021914:	ea4f 2c1c 	mov.w	ip, ip, lsr #8
 8021918:	ea06 1050 	and.w	r0, r6, r0, lsr #5
 802191c:	f40c 6cfc 	and.w	ip, ip, #2016	@ 0x7e0
 8021920:	ea40 000c 	orr.w	r0, r0, ip
 8021924:	fb15 fc02 	smulbb	ip, r5, r2
 8021928:	ea4f 0cec 	mov.w	ip, ip, asr #3
 802192c:	f1c5 0810 	rsb	r8, r5, #16
 8021930:	eba8 0802 	sub.w	r8, r8, r2
 8021934:	ea4f 4a01 	mov.w	sl, r1, lsl #16
 8021938:	ebcc 0242 	rsb	r2, ip, r2, lsl #1
 802193c:	437a      	muls	r2, r7
 802193e:	ea4f 4b00 	mov.w	fp, r0, lsl #16
 8021942:	eb0c 0848 	add.w	r8, ip, r8, lsl #1
 8021946:	f00a 6afc 	and.w	sl, sl, #132120576	@ 0x7e00000
 802194a:	f421 61fc 	bic.w	r1, r1, #2016	@ 0x7e0
 802194e:	fb09 2208 	mla	r2, r9, r8, r2
 8021952:	ea4a 0101 	orr.w	r1, sl, r1
 8021956:	ebcc 0545 	rsb	r5, ip, r5, lsl #1
 802195a:	f00b 6bfc 	and.w	fp, fp, #132120576	@ 0x7e00000
 802195e:	f420 60fc 	bic.w	r0, r0, #2016	@ 0x7e0
 8021962:	fb05 2201 	mla	r2, r5, r1, r2
 8021966:	ea4b 0000 	orr.w	r0, fp, r0
 802196a:	fb0c 2200 	mla	r2, ip, r0, r2
 802196e:	0d57      	lsrs	r7, r2, #21
 8021970:	0952      	lsrs	r2, r2, #5
 8021972:	f407 67fc 	and.w	r7, r7, #2016	@ 0x7e0
 8021976:	f422 62fc 	bic.w	r2, r2, #2016	@ 0x7e0
 802197a:	433a      	orrs	r2, r7
 802197c:	2bff      	cmp	r3, #255	@ 0xff
 802197e:	b292      	uxth	r2, r2
 8021980:	d102      	bne.n	8021988 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x710>
 8021982:	9912      	ldr	r1, [sp, #72]	@ 0x48
 8021984:	29ff      	cmp	r1, #255	@ 0xff
 8021986:	d063      	beq.n	8021a50 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x7d8>
 8021988:	980a      	ldr	r0, [sp, #40]	@ 0x28
 802198a:	f8be 1000 	ldrh.w	r1, [lr]
 802198e:	9c0a      	ldr	r4, [sp, #40]	@ 0x28
 8021990:	4343      	muls	r3, r0
 8021992:	1c58      	adds	r0, r3, #1
 8021994:	eb00 2323 	add.w	r3, r0, r3, asr #8
 8021998:	ea6f 2323 	mvn.w	r3, r3, asr #8
 802199c:	1208      	asrs	r0, r1, #8
 802199e:	b2db      	uxtb	r3, r3
 80219a0:	1215      	asrs	r5, r2, #8
 80219a2:	f000 00f8 	and.w	r0, r0, #248	@ 0xf8
 80219a6:	fb10 f003 	smulbb	r0, r0, r3
 80219aa:	10cf      	asrs	r7, r1, #3
 80219ac:	f005 05f8 	and.w	r5, r5, #248	@ 0xf8
 80219b0:	00c9      	lsls	r1, r1, #3
 80219b2:	fb05 0504 	mla	r5, r5, r4, r0
 80219b6:	b2c9      	uxtb	r1, r1
 80219b8:	10d0      	asrs	r0, r2, #3
 80219ba:	00d2      	lsls	r2, r2, #3
 80219bc:	fb11 f103 	smulbb	r1, r1, r3
 80219c0:	b2d2      	uxtb	r2, r2
 80219c2:	f007 07fc 	and.w	r7, r7, #252	@ 0xfc
 80219c6:	fb02 1204 	mla	r2, r2, r4, r1
 80219ca:	fb17 f703 	smulbb	r7, r7, r3
 80219ce:	b2ad      	uxth	r5, r5
 80219d0:	b292      	uxth	r2, r2
 80219d2:	f000 00fc 	and.w	r0, r0, #252	@ 0xfc
 80219d6:	fb00 7004 	mla	r0, r0, r4, r7
 80219da:	1c6b      	adds	r3, r5, #1
 80219dc:	1c57      	adds	r7, r2, #1
 80219de:	eb03 2515 	add.w	r5, r3, r5, lsr #8
 80219e2:	eb07 2712 	add.w	r7, r7, r2, lsr #8
 80219e6:	b280      	uxth	r0, r0
 80219e8:	f3c7 27c4 	ubfx	r7, r7, #11, #5
 80219ec:	f405 4578 	and.w	r5, r5, #63488	@ 0xf800
 80219f0:	433d      	orrs	r5, r7
 80219f2:	1c47      	adds	r7, r0, #1
 80219f4:	eb07 2710 	add.w	r7, r7, r0, lsr #8
 80219f8:	097f      	lsrs	r7, r7, #5
 80219fa:	f407 67fc 	and.w	r7, r7, #2016	@ 0x7e0
 80219fe:	433d      	orrs	r5, r7
 8021a00:	f8ae 5000 	strh.w	r5, [lr]
 8021a04:	9b21      	ldr	r3, [sp, #132]	@ 0x84
 8021a06:	9a23      	ldr	r2, [sp, #140]	@ 0x8c
 8021a08:	4413      	add	r3, r2
 8021a0a:	9321      	str	r3, [sp, #132]	@ 0x84
 8021a0c:	9a22      	ldr	r2, [sp, #136]	@ 0x88
 8021a0e:	9b24      	ldr	r3, [sp, #144]	@ 0x90
 8021a10:	441a      	add	r2, r3
 8021a12:	9b13      	ldr	r3, [sp, #76]	@ 0x4c
 8021a14:	9222      	str	r2, [sp, #136]	@ 0x88
 8021a16:	3b01      	subs	r3, #1
 8021a18:	f10e 0e02 	add.w	lr, lr, #2
 8021a1c:	9313      	str	r3, [sp, #76]	@ 0x4c
 8021a1e:	e61c      	b.n	802165a <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3e2>
 8021a20:	fb08 f000 	mul.w	r0, r8, r0
 8021a24:	fb09 0303 	mla	r3, r9, r3, r0
 8021a28:	e6dc      	b.n	80217e4 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x56c>
 8021a2a:	46b9      	mov	r9, r7
 8021a2c:	e704      	b.n	8021838 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x5c0>
 8021a2e:	f1c2 0110 	rsb	r1, r2, #16
 8021a32:	437a      	muls	r2, r7
 8021a34:	fb09 2901 	mla	r9, r9, r1, r2
 8021a38:	ea4f 0949 	mov.w	r9, r9, lsl #1
 8021a3c:	ea4f 5059 	mov.w	r0, r9, lsr #21
 8021a40:	ea4f 1259 	mov.w	r2, r9, lsr #5
 8021a44:	f400 60fc 	and.w	r0, r0, #2016	@ 0x7e0
 8021a48:	f422 62fc 	bic.w	r2, r2, #2016	@ 0x7e0
 8021a4c:	4302      	orrs	r2, r0
 8021a4e:	e795      	b.n	802197c <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x704>
 8021a50:	f8ae 2000 	strh.w	r2, [lr]
 8021a54:	e7d6      	b.n	8021a04 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x78c>
 8021a56:	b017      	add	sp, #92	@ 0x5c
 8021a58:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}

08021a5c <_ZNK8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh>:
 8021a5c:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8021a60:	b085      	sub	sp, #20
 8021a62:	e9dd 7010 	ldrd	r7, r0, [sp, #64]	@ 0x40
 8021a66:	f9bd 6038 	ldrsh.w	r6, [sp, #56]	@ 0x38
 8021a6a:	9103      	str	r1, [sp, #12]
 8021a6c:	fb00 7406 	mla	r4, r0, r6, r7
 8021a70:	eb03 0544 	add.w	r5, r3, r4, lsl #1
 8021a74:	2800      	cmp	r0, #0
 8021a76:	f9bd b03c 	ldrsh.w	fp, [sp, #60]	@ 0x3c
 8021a7a:	f89d 1048 	ldrb.w	r1, [sp, #72]	@ 0x48
 8021a7e:	f89d e04c 	ldrb.w	lr, [sp, #76]	@ 0x4c
 8021a82:	9501      	str	r5, [sp, #4]
 8021a84:	eb02 0904 	add.w	r9, r2, r4
 8021a88:	f2c0 8141 	blt.w	8021d0e <_ZNK8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x2b2>
 8021a8c:	4583      	cmp	fp, r0
 8021a8e:	f340 813e 	ble.w	8021d0e <_ZNK8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x2b2>
 8021a92:	2f00      	cmp	r7, #0
 8021a94:	f2c0 8137 	blt.w	8021d06 <_ZNK8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x2aa>
 8021a98:	42be      	cmp	r6, r7
 8021a9a:	f340 8134 	ble.w	8021d06 <_ZNK8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x2aa>
 8021a9e:	f812 c004 	ldrb.w	ip, [r2, r4]
 8021aa2:	f833 3014 	ldrh.w	r3, [r3, r4, lsl #1]
 8021aa6:	ea4f 02ec 	mov.w	r2, ip, asr #3
 8021aaa:	f423 65fc 	bic.w	r5, r3, #2016	@ 0x7e0
 8021aae:	4355      	muls	r5, r2
 8021ab0:	f403 63fc 	and.w	r3, r3, #2016	@ 0x7e0
 8021ab4:	f64f 041f 	movw	r4, #63519	@ 0xf81f
 8021ab8:	fb0c f203 	mul.w	r2, ip, r3
 8021abc:	ea04 1355 	and.w	r3, r4, r5, lsr #5
 8021ac0:	f605 0501 	addw	r5, r5, #2049	@ 0x801
 8021ac4:	441d      	add	r5, r3
 8021ac6:	f102 0320 	add.w	r3, r2, #32
 8021aca:	eb03 2312 	add.w	r3, r3, r2, lsr #8
 8021ace:	0a1b      	lsrs	r3, r3, #8
 8021ad0:	ea04 1455 	and.w	r4, r4, r5, lsr #5
 8021ad4:	f403 63fc 	and.w	r3, r3, #2016	@ 0x7e0
 8021ad8:	431c      	orrs	r4, r3
 8021ada:	1c7b      	adds	r3, r7, #1
 8021adc:	f100 811c 	bmi.w	8021d18 <_ZNK8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x2bc>
 8021ae0:	429e      	cmp	r6, r3
 8021ae2:	f340 8119 	ble.w	8021d18 <_ZNK8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x2bc>
 8021ae6:	2900      	cmp	r1, #0
 8021ae8:	f000 8119 	beq.w	8021d1e <_ZNK8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x2c2>
 8021aec:	9a01      	ldr	r2, [sp, #4]
 8021aee:	f899 3001 	ldrb.w	r3, [r9, #1]
 8021af2:	8855      	ldrh	r5, [r2, #2]
 8021af4:	ea4f 08e3 	mov.w	r8, r3, asr #3
 8021af8:	f425 62fc 	bic.w	r2, r5, #2016	@ 0x7e0
 8021afc:	fb08 f802 	mul.w	r8, r8, r2
 8021b00:	f405 65fc 	and.w	r5, r5, #2016	@ 0x7e0
 8021b04:	f64f 021f 	movw	r2, #63519	@ 0xf81f
 8021b08:	ea02 1a58 	and.w	sl, r2, r8, lsr #5
 8021b0c:	435d      	muls	r5, r3
 8021b0e:	f608 0801 	addw	r8, r8, #2049	@ 0x801
 8021b12:	44d0      	add	r8, sl
 8021b14:	f105 0a20 	add.w	sl, r5, #32
 8021b18:	eb0a 2515 	add.w	r5, sl, r5, lsr #8
 8021b1c:	0a2d      	lsrs	r5, r5, #8
 8021b1e:	ea02 1258 	and.w	r2, r2, r8, lsr #5
 8021b22:	f405 65fc 	and.w	r5, r5, #2016	@ 0x7e0
 8021b26:	432a      	orrs	r2, r5
 8021b28:	3001      	adds	r0, #1
 8021b2a:	f100 80fe 	bmi.w	8021d2a <_ZNK8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x2ce>
 8021b2e:	4583      	cmp	fp, r0
 8021b30:	f340 80fb 	ble.w	8021d2a <_ZNK8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x2ce>
 8021b34:	f1be 0f00 	cmp.w	lr, #0
 8021b38:	f000 80fc 	beq.w	8021d34 <_ZNK8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x2d8>
 8021b3c:	2f00      	cmp	r7, #0
 8021b3e:	f2c0 80f1 	blt.w	8021d24 <_ZNK8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x2c8>
 8021b42:	42be      	cmp	r6, r7
 8021b44:	f340 80ee 	ble.w	8021d24 <_ZNK8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x2c8>
 8021b48:	9801      	ldr	r0, [sp, #4]
 8021b4a:	f819 5006 	ldrb.w	r5, [r9, r6]
 8021b4e:	f830 8016 	ldrh.w	r8, [r0, r6, lsl #1]
 8021b52:	ea4f 0ae5 	mov.w	sl, r5, asr #3
 8021b56:	f428 60fc 	bic.w	r0, r8, #2016	@ 0x7e0
 8021b5a:	fb0a fa00 	mul.w	sl, sl, r0
 8021b5e:	f64f 0b1f 	movw	fp, #63519	@ 0xf81f
 8021b62:	f408 68fc 	and.w	r8, r8, #2016	@ 0x7e0
 8021b66:	ea0b 105a 	and.w	r0, fp, sl, lsr #5
 8021b6a:	fb05 f808 	mul.w	r8, r5, r8
 8021b6e:	f60a 0a01 	addw	sl, sl, #2049	@ 0x801
 8021b72:	4482      	add	sl, r0
 8021b74:	f108 0020 	add.w	r0, r8, #32
 8021b78:	eb00 2018 	add.w	r0, r0, r8, lsr #8
 8021b7c:	0a00      	lsrs	r0, r0, #8
 8021b7e:	ea0b 1b5a 	and.w	fp, fp, sl, lsr #5
 8021b82:	f400 60fc 	and.w	r0, r0, #2016	@ 0x7e0
 8021b86:	ea4b 0b00 	orr.w	fp, fp, r0
 8021b8a:	3701      	adds	r7, #1
 8021b8c:	f100 80d7 	bmi.w	8021d3e <_ZNK8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x2e2>
 8021b90:	42be      	cmp	r6, r7
 8021b92:	f340 80d4 	ble.w	8021d3e <_ZNK8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x2e2>
 8021b96:	2900      	cmp	r1, #0
 8021b98:	f000 80d4 	beq.w	8021d44 <_ZNK8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x2e8>
 8021b9c:	3601      	adds	r6, #1
 8021b9e:	9801      	ldr	r0, [sp, #4]
 8021ba0:	f819 7006 	ldrb.w	r7, [r9, r6]
 8021ba4:	f830 0016 	ldrh.w	r0, [r0, r6, lsl #1]
 8021ba8:	ea4f 09e7 	mov.w	r9, r7, asr #3
 8021bac:	f420 66fc 	bic.w	r6, r0, #2016	@ 0x7e0
 8021bb0:	f400 60fc 	and.w	r0, r0, #2016	@ 0x7e0
 8021bb4:	fb09 f906 	mul.w	r9, r9, r6
 8021bb8:	fb07 f800 	mul.w	r8, r7, r0
 8021bbc:	f64f 001f 	movw	r0, #63519	@ 0xf81f
 8021bc0:	ea00 1a59 	and.w	sl, r0, r9, lsr #5
 8021bc4:	f609 0901 	addw	r9, r9, #2049	@ 0x801
 8021bc8:	44d1      	add	r9, sl
 8021bca:	ea00 1659 	and.w	r6, r0, r9, lsr #5
 8021bce:	f108 0020 	add.w	r0, r8, #32
 8021bd2:	eb00 2018 	add.w	r0, r0, r8, lsr #8
 8021bd6:	0a00      	lsrs	r0, r0, #8
 8021bd8:	f400 60fc 	and.w	r0, r0, #2016	@ 0x7e0
 8021bdc:	4330      	orrs	r0, r6
 8021bde:	b28e      	uxth	r6, r1
 8021be0:	fa1f f98e 	uxth.w	r9, lr
 8021be4:	fb06 f809 	mul.w	r8, r6, r9
 8021be8:	ea4f 4a04 	mov.w	sl, r4, lsl #16
 8021bec:	ebc8 1909 	rsb	r9, r8, r9, lsl #4
 8021bf0:	0136      	lsls	r6, r6, #4
 8021bf2:	f00a 6afc 	and.w	sl, sl, #132120576	@ 0x7e00000
 8021bf6:	f424 64fc 	bic.w	r4, r4, #2016	@ 0x7e0
 8021bfa:	9601      	str	r6, [sp, #4]
 8021bfc:	ea4a 0404 	orr.w	r4, sl, r4
 8021c00:	fa1f f689 	uxth.w	r6, r9
 8021c04:	ea4f 4a02 	mov.w	sl, r2, lsl #16
 8021c08:	fb11 f90e 	smulbb	r9, r1, lr
 8021c0c:	f3c9 09c7 	ubfx	r9, r9, #3, #8
 8021c10:	9602      	str	r6, [sp, #8]
 8021c12:	f00a 6afc 	and.w	sl, sl, #132120576	@ 0x7e00000
 8021c16:	4626      	mov	r6, r4
 8021c18:	f422 62fc 	bic.w	r2, r2, #2016	@ 0x7e0
 8021c1c:	f1ce 0410 	rsb	r4, lr, #16
 8021c20:	1a64      	subs	r4, r4, r1
 8021c22:	ea4a 0202 	orr.w	r2, sl, r2
 8021c26:	ebc9 0141 	rsb	r1, r9, r1, lsl #1
 8021c2a:	ea4f 4a00 	mov.w	sl, r0, lsl #16
 8021c2e:	434a      	muls	r2, r1
 8021c30:	eb09 0444 	add.w	r4, r9, r4, lsl #1
 8021c34:	f00a 6afc 	and.w	sl, sl, #132120576	@ 0x7e00000
 8021c38:	f420 60fc 	bic.w	r0, r0, #2016	@ 0x7e0
 8021c3c:	fb04 2406 	mla	r4, r4, r6, r2
 8021c40:	ea4a 0000 	orr.w	r0, sl, r0
 8021c44:	fb09 4200 	mla	r2, r9, r0, r4
 8021c48:	ea4f 440b 	mov.w	r4, fp, lsl #16
 8021c4c:	f004 64fc 	and.w	r4, r4, #132120576	@ 0x7e00000
 8021c50:	9801      	ldr	r0, [sp, #4]
 8021c52:	9903      	ldr	r1, [sp, #12]
 8021c54:	f42b 6bfc 	bic.w	fp, fp, #2016	@ 0x7e0
 8021c58:	ea44 0b0b 	orr.w	fp, r4, fp
 8021c5c:	9c02      	ldr	r4, [sp, #8]
 8021c5e:	8809      	ldrh	r1, [r1, #0]
 8021c60:	f5c0 7080 	rsb	r0, r0, #256	@ 0x100
 8021c64:	1b00      	subs	r0, r0, r4
 8021c66:	9c01      	ldr	r4, [sp, #4]
 8021c68:	eba4 0608 	sub.w	r6, r4, r8
 8021c6c:	b2b6      	uxth	r6, r6
 8021c6e:	b280      	uxth	r0, r0
 8021c70:	4373      	muls	r3, r6
 8021c72:	fb0c 3300 	mla	r3, ip, r0, r3
 8021c76:	9802      	ldr	r0, [sp, #8]
 8021c78:	ebc9 0e4e 	rsb	lr, r9, lr, lsl #1
 8021c7c:	fb00 3505 	mla	r5, r0, r5, r3
 8021c80:	fb0e 2e0b 	mla	lr, lr, fp, r2
 8021c84:	fb08 5707 	mla	r7, r8, r7, r5
 8021c88:	ea4f 525e 	mov.w	r2, lr, lsr #21
 8021c8c:	120b      	asrs	r3, r1, #8
 8021c8e:	ea4f 1e5e 	mov.w	lr, lr, lsr #5
 8021c92:	ea6f 2727 	mvn.w	r7, r7, asr #8
 8021c96:	b2ff      	uxtb	r7, r7
 8021c98:	f402 62fc 	and.w	r2, r2, #2016	@ 0x7e0
 8021c9c:	10c8      	asrs	r0, r1, #3
 8021c9e:	f42e 6efc 	bic.w	lr, lr, #2016	@ 0x7e0
 8021ca2:	f003 03f8 	and.w	r3, r3, #248	@ 0xf8
 8021ca6:	00c9      	lsls	r1, r1, #3
 8021ca8:	437b      	muls	r3, r7
 8021caa:	ea42 0e0e 	orr.w	lr, r2, lr
 8021cae:	b2c9      	uxtb	r1, r1
 8021cb0:	f000 00fc 	and.w	r0, r0, #252	@ 0xfc
 8021cb4:	fa1f f28e 	uxth.w	r2, lr
 8021cb8:	4378      	muls	r0, r7
 8021cba:	434f      	muls	r7, r1
 8021cbc:	1c59      	adds	r1, r3, #1
 8021cbe:	eb01 2113 	add.w	r1, r1, r3, lsr #8
 8021cc2:	1213      	asrs	r3, r2, #8
 8021cc4:	f023 0307 	bic.w	r3, r3, #7
 8021cc8:	eb03 2311 	add.w	r3, r3, r1, lsr #8
 8021ccc:	1c41      	adds	r1, r0, #1
 8021cce:	eb01 2010 	add.w	r0, r1, r0, lsr #8
 8021cd2:	10d1      	asrs	r1, r2, #3
 8021cd4:	f021 0103 	bic.w	r1, r1, #3
 8021cd8:	eb01 2110 	add.w	r1, r1, r0, lsr #8
 8021cdc:	021b      	lsls	r3, r3, #8
 8021cde:	00c9      	lsls	r1, r1, #3
 8021ce0:	f401 61fc 	and.w	r1, r1, #2016	@ 0x7e0
 8021ce4:	f403 4378 	and.w	r3, r3, #63488	@ 0xf800
 8021ce8:	430b      	orrs	r3, r1
 8021cea:	1c79      	adds	r1, r7, #1
 8021cec:	eb01 2717 	add.w	r7, r1, r7, lsr #8
 8021cf0:	00d2      	lsls	r2, r2, #3
 8021cf2:	eb02 2217 	add.w	r2, r2, r7, lsr #8
 8021cf6:	f3c2 02c4 	ubfx	r2, r2, #3, #5
 8021cfa:	431a      	orrs	r2, r3
 8021cfc:	9b03      	ldr	r3, [sp, #12]
 8021cfe:	801a      	strh	r2, [r3, #0]
 8021d00:	b005      	add	sp, #20
 8021d02:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 8021d06:	f04f 0c00 	mov.w	ip, #0
 8021d0a:	4664      	mov	r4, ip
 8021d0c:	e6e5      	b.n	8021ada <_ZNK8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x7e>
 8021d0e:	2300      	movs	r3, #0
 8021d10:	469c      	mov	ip, r3
 8021d12:	461a      	mov	r2, r3
 8021d14:	461c      	mov	r4, r3
 8021d16:	e707      	b.n	8021b28 <_ZNK8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0xcc>
 8021d18:	2300      	movs	r3, #0
 8021d1a:	461a      	mov	r2, r3
 8021d1c:	e704      	b.n	8021b28 <_ZNK8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0xcc>
 8021d1e:	460b      	mov	r3, r1
 8021d20:	460a      	mov	r2, r1
 8021d22:	e701      	b.n	8021b28 <_ZNK8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0xcc>
 8021d24:	2500      	movs	r5, #0
 8021d26:	46ab      	mov	fp, r5
 8021d28:	e72f      	b.n	8021b8a <_ZNK8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x12e>
 8021d2a:	2700      	movs	r7, #0
 8021d2c:	463d      	mov	r5, r7
 8021d2e:	4638      	mov	r0, r7
 8021d30:	46bb      	mov	fp, r7
 8021d32:	e754      	b.n	8021bde <_ZNK8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x182>
 8021d34:	4677      	mov	r7, lr
 8021d36:	4675      	mov	r5, lr
 8021d38:	4670      	mov	r0, lr
 8021d3a:	46f3      	mov	fp, lr
 8021d3c:	e74f      	b.n	8021bde <_ZNK8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x182>
 8021d3e:	2700      	movs	r7, #0
 8021d40:	4638      	mov	r0, r7
 8021d42:	e74c      	b.n	8021bde <_ZNK8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x182>
 8021d44:	460f      	mov	r7, r1
 8021d46:	4608      	mov	r0, r1
 8021d48:	e749      	b.n	8021bde <_ZNK8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x182>
	...

08021d4c <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff>:
 8021d4c:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8021d50:	b093      	sub	sp, #76	@ 0x4c
 8021d52:	9210      	str	r2, [sp, #64]	@ 0x40
 8021d54:	9a21      	ldr	r2, [sp, #132]	@ 0x84
 8021d56:	910e      	str	r1, [sp, #56]	@ 0x38
 8021d58:	9306      	str	r3, [sp, #24]
 8021d5a:	e9dd 1322 	ldrd	r1, r3, [sp, #136]	@ 0x88
 8021d5e:	9011      	str	r0, [sp, #68]	@ 0x44
 8021d60:	6850      	ldr	r0, [r2, #4]
 8021d62:	6812      	ldr	r2, [r2, #0]
 8021d64:	fb00 1303 	mla	r3, r0, r3, r1
 8021d68:	eb02 0343 	add.w	r3, r2, r3, lsl #1
 8021d6c:	9307      	str	r3, [sp, #28]
 8021d6e:	9b24      	ldr	r3, [sp, #144]	@ 0x90
 8021d70:	681b      	ldr	r3, [r3, #0]
 8021d72:	9308      	str	r3, [sp, #32]
 8021d74:	9b24      	ldr	r3, [sp, #144]	@ 0x90
 8021d76:	685b      	ldr	r3, [r3, #4]
 8021d78:	9309      	str	r3, [sp, #36]	@ 0x24
 8021d7a:	9b0e      	ldr	r3, [sp, #56]	@ 0x38
 8021d7c:	2b00      	cmp	r3, #0
 8021d7e:	dc03      	bgt.n	8021d88 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3c>
 8021d80:	9b10      	ldr	r3, [sp, #64]	@ 0x40
 8021d82:	2b00      	cmp	r3, #0
 8021d84:	f340 83b4 	ble.w	80224f0 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x7a4>
 8021d88:	9b24      	ldr	r3, [sp, #144]	@ 0x90
 8021d8a:	f9b3 1008 	ldrsh.w	r1, [r3, #8]
 8021d8e:	f9b3 200c 	ldrsh.w	r2, [r3, #12]
 8021d92:	1e48      	subs	r0, r1, #1
 8021d94:	1e55      	subs	r5, r2, #1
 8021d96:	9b06      	ldr	r3, [sp, #24]
 8021d98:	2b00      	cmp	r3, #0
 8021d9a:	f340 8163 	ble.w	8022064 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x318>
 8021d9e:	9e1d      	ldr	r6, [sp, #116]	@ 0x74
 8021da0:	9b1e      	ldr	r3, [sp, #120]	@ 0x78
 8021da2:	1436      	asrs	r6, r6, #16
 8021da4:	ea4f 4323 	mov.w	r3, r3, asr #16
 8021da8:	d406      	bmi.n	8021db8 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x6c>
 8021daa:	4286      	cmp	r6, r0
 8021dac:	da04      	bge.n	8021db8 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x6c>
 8021dae:	2b00      	cmp	r3, #0
 8021db0:	db02      	blt.n	8021db8 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x6c>
 8021db2:	42ab      	cmp	r3, r5
 8021db4:	f2c0 8157 	blt.w	8022066 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x31a>
 8021db8:	3601      	adds	r6, #1
 8021dba:	f100 8144 	bmi.w	8022046 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2fa>
 8021dbe:	42b1      	cmp	r1, r6
 8021dc0:	f2c0 8141 	blt.w	8022046 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2fa>
 8021dc4:	3301      	adds	r3, #1
 8021dc6:	f100 813e 	bmi.w	8022046 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2fa>
 8021dca:	429a      	cmp	r2, r3
 8021dcc:	f2c0 813b 	blt.w	8022046 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2fa>
 8021dd0:	9b06      	ldr	r3, [sp, #24]
 8021dd2:	9f07      	ldr	r7, [sp, #28]
 8021dd4:	930f      	str	r3, [sp, #60]	@ 0x3c
 8021dd6:	f64f 061f 	movw	r6, #63519	@ 0xf81f
 8021dda:	9b0f      	ldr	r3, [sp, #60]	@ 0x3c
 8021ddc:	2b00      	cmp	r3, #0
 8021dde:	f340 8164 	ble.w	80220aa <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x35e>
 8021de2:	9b1e      	ldr	r3, [sp, #120]	@ 0x78
 8021de4:	9d1d      	ldr	r5, [sp, #116]	@ 0x74
 8021de6:	1418      	asrs	r0, r3, #16
 8021de8:	9b1d      	ldr	r3, [sp, #116]	@ 0x74
 8021dea:	f3c3 3103 	ubfx	r1, r3, #12, #4
 8021dee:	9b1e      	ldr	r3, [sp, #120]	@ 0x78
 8021df0:	f3c3 3c03 	ubfx	ip, r3, #12, #4
 8021df4:	9b24      	ldr	r3, [sp, #144]	@ 0x90
 8021df6:	142d      	asrs	r5, r5, #16
 8021df8:	e9d3 2302 	ldrd	r2, r3, [r3, #8]
 8021dfc:	f100 81ee 	bmi.w	80221dc <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x490>
 8021e00:	f102 3eff 	add.w	lr, r2, #4294967295
 8021e04:	4575      	cmp	r5, lr
 8021e06:	f280 81e9 	bge.w	80221dc <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x490>
 8021e0a:	2800      	cmp	r0, #0
 8021e0c:	f2c0 81e6 	blt.w	80221dc <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x490>
 8021e10:	f103 3eff 	add.w	lr, r3, #4294967295
 8021e14:	4570      	cmp	r0, lr
 8021e16:	f280 81e1 	bge.w	80221dc <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x490>
 8021e1a:	9b09      	ldr	r3, [sp, #36]	@ 0x24
 8021e1c:	b212      	sxth	r2, r2
 8021e1e:	fb00 5002 	mla	r0, r0, r2, r5
 8021e22:	fa1f fe81 	uxth.w	lr, r1
 8021e26:	eb03 0a00 	add.w	sl, r3, r0
 8021e2a:	ea4f 150e 	mov.w	r5, lr, lsl #4
 8021e2e:	f813 9000 	ldrb.w	r9, [r3, r0]
 8021e32:	f89a 8001 	ldrb.w	r8, [sl, #1]
 8021e36:	f5c5 7380 	rsb	r3, r5, #256	@ 0x100
 8021e3a:	b29b      	uxth	r3, r3
 8021e3c:	f1bc 0f00 	cmp.w	ip, #0
 8021e40:	f000 8179 	beq.w	8022136 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3ea>
 8021e44:	f81a 4002 	ldrb.w	r4, [sl, r2]
 8021e48:	940a      	str	r4, [sp, #40]	@ 0x28
 8021e4a:	eb0a 0b02 	add.w	fp, sl, r2
 8021e4e:	fa1f fa8c 	uxth.w	sl, ip
 8021e52:	fb0a fe0e 	mul.w	lr, sl, lr
 8021e56:	ebce 1a0a 	rsb	sl, lr, sl, lsl #4
 8021e5a:	fa1f fa8a 	uxth.w	sl, sl
 8021e5e:	eba5 050e 	sub.w	r5, r5, lr
 8021e62:	f89b 4001 	ldrb.w	r4, [fp, #1]
 8021e66:	940b      	str	r4, [sp, #44]	@ 0x2c
 8021e68:	eba3 030a 	sub.w	r3, r3, sl
 8021e6c:	b2ad      	uxth	r5, r5
 8021e6e:	9c0a      	ldr	r4, [sp, #40]	@ 0x28
 8021e70:	b29b      	uxth	r3, r3
 8021e72:	fb08 f505 	mul.w	r5, r8, r5
 8021e76:	fb09 5303 	mla	r3, r9, r3, r5
 8021e7a:	fb0a 3304 	mla	r3, sl, r4, r3
 8021e7e:	9c0b      	ldr	r4, [sp, #44]	@ 0x2c
 8021e80:	fb0e 3304 	mla	r3, lr, r4, r3
 8021e84:	f3c3 2307 	ubfx	r3, r3, #8, #8
 8021e88:	2b00      	cmp	r3, #0
 8021e8a:	f000 80cf 	beq.w	802202c <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2e0>
 8021e8e:	9c08      	ldr	r4, [sp, #32]
 8021e90:	f1b9 0fff 	cmp.w	r9, #255	@ 0xff
 8021e94:	eb04 0540 	add.w	r5, r4, r0, lsl #1
 8021e98:	f834 0010 	ldrh.w	r0, [r4, r0, lsl #1]
 8021e9c:	f000 8150 	beq.w	8022140 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3f4>
 8021ea0:	f420 6efc 	bic.w	lr, r0, #2016	@ 0x7e0
 8021ea4:	ea4f 0ae9 	mov.w	sl, r9, asr #3
 8021ea8:	f400 60fc 	and.w	r0, r0, #2016	@ 0x7e0
 8021eac:	fb09 f000 	mul.w	r0, r9, r0
 8021eb0:	fb0a fe0e 	mul.w	lr, sl, lr
 8021eb4:	ea06 195e 	and.w	r9, r6, lr, lsr #5
 8021eb8:	f100 0b20 	add.w	fp, r0, #32
 8021ebc:	f60e 0e01 	addw	lr, lr, #2049	@ 0x801
 8021ec0:	44ce      	add	lr, r9
 8021ec2:	eb0b 2910 	add.w	r9, fp, r0, lsr #8
 8021ec6:	ea4f 2919 	mov.w	r9, r9, lsr #8
 8021eca:	ea06 1e5e 	and.w	lr, r6, lr, lsr #5
 8021ece:	f409 69fc 	and.w	r9, r9, #2016	@ 0x7e0
 8021ed2:	ea4e 0909 	orr.w	r9, lr, r9
 8021ed6:	f1b8 0fff 	cmp.w	r8, #255	@ 0xff
 8021eda:	8868      	ldrh	r0, [r5, #2]
 8021edc:	d019      	beq.n	8021f12 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1c6>
 8021ede:	f420 6efc 	bic.w	lr, r0, #2016	@ 0x7e0
 8021ee2:	ea4f 0ae8 	mov.w	sl, r8, asr #3
 8021ee6:	f400 60fc 	and.w	r0, r0, #2016	@ 0x7e0
 8021eea:	fb08 f800 	mul.w	r8, r8, r0
 8021eee:	fb0a fe0e 	mul.w	lr, sl, lr
 8021ef2:	ea06 105e 	and.w	r0, r6, lr, lsr #5
 8021ef6:	f108 0b20 	add.w	fp, r8, #32
 8021efa:	f60e 0e01 	addw	lr, lr, #2049	@ 0x801
 8021efe:	4486      	add	lr, r0
 8021f00:	eb0b 2018 	add.w	r0, fp, r8, lsr #8
 8021f04:	0a00      	lsrs	r0, r0, #8
 8021f06:	ea06 1e5e 	and.w	lr, r6, lr, lsr #5
 8021f0a:	f400 60fc 	and.w	r0, r0, #2016	@ 0x7e0
 8021f0e:	ea4e 0000 	orr.w	r0, lr, r0
 8021f12:	ea4f 4e09 	mov.w	lr, r9, lsl #16
 8021f16:	ea4f 4a00 	mov.w	sl, r0, lsl #16
 8021f1a:	f00e 6efc 	and.w	lr, lr, #132120576	@ 0x7e00000
 8021f1e:	f429 69fc 	bic.w	r9, r9, #2016	@ 0x7e0
 8021f22:	f00a 6afc 	and.w	sl, sl, #132120576	@ 0x7e00000
 8021f26:	f420 60fc 	bic.w	r0, r0, #2016	@ 0x7e0
 8021f2a:	ea4e 0909 	orr.w	r9, lr, r9
 8021f2e:	ea4a 0000 	orr.w	r0, sl, r0
 8021f32:	f1bc 0f00 	cmp.w	ip, #0
 8021f36:	f000 8105 	beq.w	8022144 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3f8>
 8021f3a:	f102 4200 	add.w	r2, r2, #2147483648	@ 0x80000000
 8021f3e:	3a01      	subs	r2, #1
 8021f40:	0052      	lsls	r2, r2, #1
 8021f42:	9c0a      	ldr	r4, [sp, #40]	@ 0x28
 8021f44:	3202      	adds	r2, #2
 8021f46:	2cff      	cmp	r4, #255	@ 0xff
 8021f48:	eb05 0e02 	add.w	lr, r5, r2
 8021f4c:	5aaa      	ldrh	r2, [r5, r2]
 8021f4e:	d018      	beq.n	8021f82 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x236>
 8021f50:	f422 65fc 	bic.w	r5, r2, #2016	@ 0x7e0
 8021f54:	f402 62fc 	and.w	r2, r2, #2016	@ 0x7e0
 8021f58:	fb04 fa02 	mul.w	sl, r4, r2
 8021f5c:	ea4f 08e4 	mov.w	r8, r4, asr #3
 8021f60:	fb08 f805 	mul.w	r8, r8, r5
 8021f64:	f10a 0520 	add.w	r5, sl, #32
 8021f68:	ea06 1258 	and.w	r2, r6, r8, lsr #5
 8021f6c:	eb05 251a 	add.w	r5, r5, sl, lsr #8
 8021f70:	f608 0801 	addw	r8, r8, #2049	@ 0x801
 8021f74:	4442      	add	r2, r8
 8021f76:	0a2d      	lsrs	r5, r5, #8
 8021f78:	ea06 1252 	and.w	r2, r6, r2, lsr #5
 8021f7c:	f405 65fc 	and.w	r5, r5, #2016	@ 0x7e0
 8021f80:	432a      	orrs	r2, r5
 8021f82:	9c0b      	ldr	r4, [sp, #44]	@ 0x2c
 8021f84:	f8be 5002 	ldrh.w	r5, [lr, #2]
 8021f88:	2cff      	cmp	r4, #255	@ 0xff
 8021f8a:	d01a      	beq.n	8021fc2 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x276>
 8021f8c:	f425 6efc 	bic.w	lr, r5, #2016	@ 0x7e0
 8021f90:	f405 65fc 	and.w	r5, r5, #2016	@ 0x7e0
 8021f94:	fb04 fa05 	mul.w	sl, r4, r5
 8021f98:	ea4f 08e4 	mov.w	r8, r4, asr #3
 8021f9c:	fb08 f80e 	mul.w	r8, r8, lr
 8021fa0:	f10a 0e20 	add.w	lr, sl, #32
 8021fa4:	ea06 1558 	and.w	r5, r6, r8, lsr #5
 8021fa8:	eb0e 2e1a 	add.w	lr, lr, sl, lsr #8
 8021fac:	f608 0801 	addw	r8, r8, #2049	@ 0x801
 8021fb0:	4445      	add	r5, r8
 8021fb2:	ea4f 2e1e 	mov.w	lr, lr, lsr #8
 8021fb6:	ea06 1555 	and.w	r5, r6, r5, lsr #5
 8021fba:	f40e 6efc 	and.w	lr, lr, #2016	@ 0x7e0
 8021fbe:	ea45 050e 	orr.w	r5, r5, lr
 8021fc2:	fb1c fe01 	smulbb	lr, ip, r1
 8021fc6:	ea4f 0eee 	mov.w	lr, lr, asr #3
 8021fca:	f1cc 0810 	rsb	r8, ip, #16
 8021fce:	eba8 0801 	sub.w	r8, r8, r1
 8021fd2:	ea4f 4a02 	mov.w	sl, r2, lsl #16
 8021fd6:	ebce 0141 	rsb	r1, lr, r1, lsl #1
 8021fda:	eb0e 0848 	add.w	r8, lr, r8, lsl #1
 8021fde:	ea4f 4b05 	mov.w	fp, r5, lsl #16
 8021fe2:	4341      	muls	r1, r0
 8021fe4:	f00a 6afc 	and.w	sl, sl, #132120576	@ 0x7e00000
 8021fe8:	f422 62fc 	bic.w	r2, r2, #2016	@ 0x7e0
 8021fec:	ea4a 0202 	orr.w	r2, sl, r2
 8021ff0:	ebce 0c4c 	rsb	ip, lr, ip, lsl #1
 8021ff4:	fb09 1108 	mla	r1, r9, r8, r1
 8021ff8:	f00b 6bfc 	and.w	fp, fp, #132120576	@ 0x7e00000
 8021ffc:	f425 65fc 	bic.w	r5, r5, #2016	@ 0x7e0
 8022000:	fb0c 1102 	mla	r1, ip, r2, r1
 8022004:	ea4b 0505 	orr.w	r5, fp, r5
 8022008:	fb0e 1e05 	mla	lr, lr, r5, r1
 802200c:	ea4f 525e 	mov.w	r2, lr, lsr #21
 8022010:	ea4f 1e5e 	mov.w	lr, lr, lsr #5
 8022014:	f402 62fc 	and.w	r2, r2, #2016	@ 0x7e0
 8022018:	f42e 6efc 	bic.w	lr, lr, #2016	@ 0x7e0
 802201c:	ea42 0e0e 	orr.w	lr, r2, lr
 8022020:	fa1f f28e 	uxth.w	r2, lr
 8022024:	2bff      	cmp	r3, #255	@ 0xff
 8022026:	f040 80a1 	bne.w	802216c <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x420>
 802202a:	803a      	strh	r2, [r7, #0]
 802202c:	9b1d      	ldr	r3, [sp, #116]	@ 0x74
 802202e:	9a1f      	ldr	r2, [sp, #124]	@ 0x7c
 8022030:	4413      	add	r3, r2
 8022032:	931d      	str	r3, [sp, #116]	@ 0x74
 8022034:	9a1e      	ldr	r2, [sp, #120]	@ 0x78
 8022036:	9b20      	ldr	r3, [sp, #128]	@ 0x80
 8022038:	441a      	add	r2, r3
 802203a:	9b0f      	ldr	r3, [sp, #60]	@ 0x3c
 802203c:	921e      	str	r2, [sp, #120]	@ 0x78
 802203e:	3b01      	subs	r3, #1
 8022040:	3702      	adds	r7, #2
 8022042:	930f      	str	r3, [sp, #60]	@ 0x3c
 8022044:	e6c9      	b.n	8021dda <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x8e>
 8022046:	9b1d      	ldr	r3, [sp, #116]	@ 0x74
 8022048:	9e1f      	ldr	r6, [sp, #124]	@ 0x7c
 802204a:	9c1e      	ldr	r4, [sp, #120]	@ 0x78
 802204c:	4433      	add	r3, r6
 802204e:	931d      	str	r3, [sp, #116]	@ 0x74
 8022050:	9b20      	ldr	r3, [sp, #128]	@ 0x80
 8022052:	441c      	add	r4, r3
 8022054:	9b06      	ldr	r3, [sp, #24]
 8022056:	941e      	str	r4, [sp, #120]	@ 0x78
 8022058:	3b01      	subs	r3, #1
 802205a:	9306      	str	r3, [sp, #24]
 802205c:	9b07      	ldr	r3, [sp, #28]
 802205e:	3302      	adds	r3, #2
 8022060:	9307      	str	r3, [sp, #28]
 8022062:	e698      	b.n	8021d96 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x4a>
 8022064:	d028      	beq.n	80220b8 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x36c>
 8022066:	9b06      	ldr	r3, [sp, #24]
 8022068:	981f      	ldr	r0, [sp, #124]	@ 0x7c
 802206a:	9d1d      	ldr	r5, [sp, #116]	@ 0x74
 802206c:	3b01      	subs	r3, #1
 802206e:	fb00 5003 	mla	r0, r0, r3, r5
 8022072:	1400      	asrs	r0, r0, #16
 8022074:	f53f aeac 	bmi.w	8021dd0 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x84>
 8022078:	3901      	subs	r1, #1
 802207a:	4288      	cmp	r0, r1
 802207c:	f6bf aea8 	bge.w	8021dd0 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x84>
 8022080:	9920      	ldr	r1, [sp, #128]	@ 0x80
 8022082:	981e      	ldr	r0, [sp, #120]	@ 0x78
 8022084:	fb01 0303 	mla	r3, r1, r3, r0
 8022088:	141b      	asrs	r3, r3, #16
 802208a:	f53f aea1 	bmi.w	8021dd0 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x84>
 802208e:	3a01      	subs	r2, #1
 8022090:	4293      	cmp	r3, r2
 8022092:	f6bf ae9d 	bge.w	8021dd0 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x84>
 8022096:	9b06      	ldr	r3, [sp, #24]
 8022098:	f8dd e01c 	ldr.w	lr, [sp, #28]
 802209c:	930f      	str	r3, [sp, #60]	@ 0x3c
 802209e:	f64f 061f 	movw	r6, #63519	@ 0xf81f
 80220a2:	9b0f      	ldr	r3, [sp, #60]	@ 0x3c
 80220a4:	2b00      	cmp	r3, #0
 80220a6:	f300 80b6 	bgt.w	8022216 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x4ca>
 80220aa:	9b06      	ldr	r3, [sp, #24]
 80220ac:	ea23 74e3 	bic.w	r4, r3, r3, asr #31
 80220b0:	9b07      	ldr	r3, [sp, #28]
 80220b2:	eb03 0344 	add.w	r3, r3, r4, lsl #1
 80220b6:	9307      	str	r3, [sp, #28]
 80220b8:	9b0e      	ldr	r3, [sp, #56]	@ 0x38
 80220ba:	2b00      	cmp	r3, #0
 80220bc:	f340 8218 	ble.w	80224f0 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x7a4>
 80220c0:	ee30 0a04 	vadd.f32	s0, s0, s8
 80220c4:	eeb7 7a00 	vmov.f32	s14, #112	@ 0x3f800000  1.0
 80220c8:	eec7 7a00 	vdiv.f32	s15, s14, s0
 80220cc:	9b1c      	ldr	r3, [sp, #112]	@ 0x70
 80220ce:	ee70 0aa4 	vadd.f32	s1, s1, s9
 80220d2:	ee31 1a05 	vadd.f32	s2, s2, s10
 80220d6:	ee20 7aa7 	vmul.f32	s14, s1, s15
 80220da:	eef0 6a62 	vmov.f32	s13, s5
 80220de:	ee61 7a27 	vmul.f32	s15, s2, s15
 80220e2:	eefe 6ac8 	vcvt.s32.f32	s13, s13, #16
 80220e6:	ee77 2a62 	vsub.f32	s5, s14, s5
 80220ea:	edcd 6a1d 	vstr	s13, [sp, #116]	@ 0x74
 80220ee:	eefe 2ac8 	vcvt.s32.f32	s5, s5, #16
 80220f2:	eef0 6a43 	vmov.f32	s13, s6
 80220f6:	ee37 3ac3 	vsub.f32	s6, s15, s6
 80220fa:	ee12 2a90 	vmov	r2, s5
 80220fe:	eebe 3ac8 	vcvt.s32.f32	s6, s6, #16
 8022102:	fb92 f3f3 	sdiv	r3, r2, r3
 8022106:	ee13 2a10 	vmov	r2, s6
 802210a:	931f      	str	r3, [sp, #124]	@ 0x7c
 802210c:	9b1c      	ldr	r3, [sp, #112]	@ 0x70
 802210e:	fb92 f3f3 	sdiv	r3, r2, r3
 8022112:	9320      	str	r3, [sp, #128]	@ 0x80
 8022114:	9b0e      	ldr	r3, [sp, #56]	@ 0x38
 8022116:	9a10      	ldr	r2, [sp, #64]	@ 0x40
 8022118:	3b01      	subs	r3, #1
 802211a:	eefe 6ac8 	vcvt.s32.f32	s13, s13, #16
 802211e:	930e      	str	r3, [sp, #56]	@ 0x38
 8022120:	9b1c      	ldr	r3, [sp, #112]	@ 0x70
 8022122:	edcd 6a1e 	vstr	s13, [sp, #120]	@ 0x78
 8022126:	bf08      	it	eq
 8022128:	4613      	moveq	r3, r2
 802212a:	9306      	str	r3, [sp, #24]
 802212c:	eeb0 3a67 	vmov.f32	s6, s15
 8022130:	eef0 2a47 	vmov.f32	s5, s14
 8022134:	e621      	b.n	8021d7a <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2e>
 8022136:	fb08 f505 	mul.w	r5, r8, r5
 802213a:	fb09 5303 	mla	r3, r9, r3, r5
 802213e:	e6a1      	b.n	8021e84 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x138>
 8022140:	4681      	mov	r9, r0
 8022142:	e6c8      	b.n	8021ed6 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x18a>
 8022144:	f1c1 0210 	rsb	r2, r1, #16
 8022148:	4341      	muls	r1, r0
 802214a:	fb09 1902 	mla	r9, r9, r2, r1
 802214e:	ea4f 0949 	mov.w	r9, r9, lsl #1
 8022152:	ea4f 5259 	mov.w	r2, r9, lsr #21
 8022156:	ea4f 1959 	mov.w	r9, r9, lsr #5
 802215a:	f402 62fc 	and.w	r2, r2, #2016	@ 0x7e0
 802215e:	f429 69fc 	bic.w	r9, r9, #2016	@ 0x7e0
 8022162:	ea42 0909 	orr.w	r9, r2, r9
 8022166:	fa1f f289 	uxth.w	r2, r9
 802216a:	e75b      	b.n	8022024 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2d8>
 802216c:	f8b7 c000 	ldrh.w	ip, [r7]
 8022170:	43db      	mvns	r3, r3
 8022172:	ea4f 202c 	mov.w	r0, ip, asr #8
 8022176:	fa5f fe83 	uxtb.w	lr, r3
 802217a:	f000 00f8 	and.w	r0, r0, #248	@ 0xf8
 802217e:	fb00 f00e 	mul.w	r0, r0, lr
 8022182:	1c41      	adds	r1, r0, #1
 8022184:	eb01 2010 	add.w	r0, r1, r0, lsr #8
 8022188:	1211      	asrs	r1, r2, #8
 802218a:	ea4f 05ec 	mov.w	r5, ip, asr #3
 802218e:	f021 0107 	bic.w	r1, r1, #7
 8022192:	eb01 2110 	add.w	r1, r1, r0, lsr #8
 8022196:	f005 05fc 	and.w	r5, r5, #252	@ 0xfc
 802219a:	48d7      	ldr	r0, [pc, #860]	@ (80224f8 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x7ac>)
 802219c:	fb05 f50e 	mul.w	r5, r5, lr
 80221a0:	b2c9      	uxtb	r1, r1
 80221a2:	ea00 2001 	and.w	r0, r0, r1, lsl #8
 80221a6:	1c69      	adds	r1, r5, #1
 80221a8:	eb01 2515 	add.w	r5, r1, r5, lsr #8
 80221ac:	10d1      	asrs	r1, r2, #3
 80221ae:	f021 0103 	bic.w	r1, r1, #3
 80221b2:	ea4f 03cc 	mov.w	r3, ip, lsl #3
 80221b6:	eb01 2115 	add.w	r1, r1, r5, lsr #8
 80221ba:	b2db      	uxtb	r3, r3
 80221bc:	00c9      	lsls	r1, r1, #3
 80221be:	fb03 f30e 	mul.w	r3, r3, lr
 80221c2:	f401 61fc 	and.w	r1, r1, #2016	@ 0x7e0
 80221c6:	4301      	orrs	r1, r0
 80221c8:	1c58      	adds	r0, r3, #1
 80221ca:	eb00 2313 	add.w	r3, r0, r3, lsr #8
 80221ce:	00d2      	lsls	r2, r2, #3
 80221d0:	eb02 2213 	add.w	r2, r2, r3, lsr #8
 80221d4:	f3c2 02c4 	ubfx	r2, r2, #3, #5
 80221d8:	430a      	orrs	r2, r1
 80221da:	e726      	b.n	802202a <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2de>
 80221dc:	f115 0e01 	adds.w	lr, r5, #1
 80221e0:	f53f af24 	bmi.w	802202c <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2e0>
 80221e4:	4572      	cmp	r2, lr
 80221e6:	f6ff af21 	blt.w	802202c <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2e0>
 80221ea:	f110 0e01 	adds.w	lr, r0, #1
 80221ee:	f53f af1d 	bmi.w	802202c <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2e0>
 80221f2:	4573      	cmp	r3, lr
 80221f4:	f6ff af1a 	blt.w	802202c <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2e0>
 80221f8:	b21b      	sxth	r3, r3
 80221fa:	b212      	sxth	r2, r2
 80221fc:	e9cd 1c04 	strd	r1, ip, [sp, #16]
 8022200:	e9cd 5002 	strd	r5, r0, [sp, #8]
 8022204:	9301      	str	r3, [sp, #4]
 8022206:	9200      	str	r2, [sp, #0]
 8022208:	4639      	mov	r1, r7
 802220a:	e9dd 3208 	ldrd	r3, r2, [sp, #32]
 802220e:	9811      	ldr	r0, [sp, #68]	@ 0x44
 8022210:	f7ff fc24 	bl	8021a5c <_ZNK8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh>
 8022214:	e70a      	b.n	802202c <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2e0>
 8022216:	9b1d      	ldr	r3, [sp, #116]	@ 0x74
 8022218:	f3c3 3203 	ubfx	r2, r3, #12, #4
 802221c:	9b1e      	ldr	r3, [sp, #120]	@ 0x78
 802221e:	f3c3 3503 	ubfx	r5, r3, #12, #4
 8022222:	9b24      	ldr	r3, [sp, #144]	@ 0x90
 8022224:	f9b3 1008 	ldrsh.w	r1, [r3, #8]
 8022228:	9b1e      	ldr	r3, [sp, #120]	@ 0x78
 802222a:	141f      	asrs	r7, r3, #16
 802222c:	9b1d      	ldr	r3, [sp, #116]	@ 0x74
 802222e:	141b      	asrs	r3, r3, #16
 8022230:	fb01 3707 	mla	r7, r1, r7, r3
 8022234:	9b09      	ldr	r3, [sp, #36]	@ 0x24
 8022236:	fa1f fc82 	uxth.w	ip, r2
 802223a:	eb03 0a07 	add.w	sl, r3, r7
 802223e:	ea4f 100c 	mov.w	r0, ip, lsl #4
 8022242:	f813 9007 	ldrb.w	r9, [r3, r7]
 8022246:	f89a 8001 	ldrb.w	r8, [sl, #1]
 802224a:	f5c0 7380 	rsb	r3, r0, #256	@ 0x100
 802224e:	b29b      	uxth	r3, r3
 8022250:	2d00      	cmp	r5, #0
 8022252:	f000 80fe 	beq.w	8022452 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x706>
 8022256:	f81a 4001 	ldrb.w	r4, [sl, r1]
 802225a:	940c      	str	r4, [sp, #48]	@ 0x30
 802225c:	eb0a 0b01 	add.w	fp, sl, r1
 8022260:	fa1f fa85 	uxth.w	sl, r5
 8022264:	fb0a fc0c 	mul.w	ip, sl, ip
 8022268:	ebcc 1a0a 	rsb	sl, ip, sl, lsl #4
 802226c:	fa1f fa8a 	uxth.w	sl, sl
 8022270:	eba0 000c 	sub.w	r0, r0, ip
 8022274:	eba3 030a 	sub.w	r3, r3, sl
 8022278:	b280      	uxth	r0, r0
 802227a:	fb08 f000 	mul.w	r0, r8, r0
 802227e:	b29b      	uxth	r3, r3
 8022280:	fb09 0303 	mla	r3, r9, r3, r0
 8022284:	980c      	ldr	r0, [sp, #48]	@ 0x30
 8022286:	f89b 4001 	ldrb.w	r4, [fp, #1]
 802228a:	940d      	str	r4, [sp, #52]	@ 0x34
 802228c:	fb0a 3300 	mla	r3, sl, r0, r3
 8022290:	fb0c 3304 	mla	r3, ip, r4, r3
 8022294:	f3c3 2307 	ubfx	r3, r3, #8, #8
 8022298:	2b00      	cmp	r3, #0
 802229a:	f000 80cc 	beq.w	8022436 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x6ea>
 802229e:	9808      	ldr	r0, [sp, #32]
 80222a0:	9c08      	ldr	r4, [sp, #32]
 80222a2:	f1b9 0fff 	cmp.w	r9, #255	@ 0xff
 80222a6:	eb00 0047 	add.w	r0, r0, r7, lsl #1
 80222aa:	f834 7017 	ldrh.w	r7, [r4, r7, lsl #1]
 80222ae:	f000 80d5 	beq.w	802245c <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x710>
 80222b2:	f427 6cfc 	bic.w	ip, r7, #2016	@ 0x7e0
 80222b6:	ea4f 0ae9 	mov.w	sl, r9, asr #3
 80222ba:	f407 67fc 	and.w	r7, r7, #2016	@ 0x7e0
 80222be:	fb09 f707 	mul.w	r7, r9, r7
 80222c2:	fb0a fc0c 	mul.w	ip, sl, ip
 80222c6:	ea06 195c 	and.w	r9, r6, ip, lsr #5
 80222ca:	f107 0b20 	add.w	fp, r7, #32
 80222ce:	f60c 0c01 	addw	ip, ip, #2049	@ 0x801
 80222d2:	44cc      	add	ip, r9
 80222d4:	eb0b 2917 	add.w	r9, fp, r7, lsr #8
 80222d8:	ea4f 2919 	mov.w	r9, r9, lsr #8
 80222dc:	ea06 1c5c 	and.w	ip, r6, ip, lsr #5
 80222e0:	f409 69fc 	and.w	r9, r9, #2016	@ 0x7e0
 80222e4:	ea4c 0909 	orr.w	r9, ip, r9
 80222e8:	f1b8 0fff 	cmp.w	r8, #255	@ 0xff
 80222ec:	8847      	ldrh	r7, [r0, #2]
 80222ee:	d019      	beq.n	8022324 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x5d8>
 80222f0:	f427 6cfc 	bic.w	ip, r7, #2016	@ 0x7e0
 80222f4:	ea4f 0ae8 	mov.w	sl, r8, asr #3
 80222f8:	f407 67fc 	and.w	r7, r7, #2016	@ 0x7e0
 80222fc:	fb08 f807 	mul.w	r8, r8, r7
 8022300:	fb0a fc0c 	mul.w	ip, sl, ip
 8022304:	ea06 175c 	and.w	r7, r6, ip, lsr #5
 8022308:	f108 0b20 	add.w	fp, r8, #32
 802230c:	f60c 0c01 	addw	ip, ip, #2049	@ 0x801
 8022310:	44bc      	add	ip, r7
 8022312:	eb0b 2718 	add.w	r7, fp, r8, lsr #8
 8022316:	0a3f      	lsrs	r7, r7, #8
 8022318:	ea06 1c5c 	and.w	ip, r6, ip, lsr #5
 802231c:	f407 67fc 	and.w	r7, r7, #2016	@ 0x7e0
 8022320:	ea4c 0707 	orr.w	r7, ip, r7
 8022324:	ea4f 4c09 	mov.w	ip, r9, lsl #16
 8022328:	ea4f 4a07 	mov.w	sl, r7, lsl #16
 802232c:	f00c 6cfc 	and.w	ip, ip, #132120576	@ 0x7e00000
 8022330:	f429 69fc 	bic.w	r9, r9, #2016	@ 0x7e0
 8022334:	f00a 6afc 	and.w	sl, sl, #132120576	@ 0x7e00000
 8022338:	f427 67fc 	bic.w	r7, r7, #2016	@ 0x7e0
 802233c:	ea4c 0909 	orr.w	r9, ip, r9
 8022340:	ea4a 0707 	orr.w	r7, sl, r7
 8022344:	2d00      	cmp	r5, #0
 8022346:	f000 808b 	beq.w	8022460 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x714>
 802234a:	f101 4100 	add.w	r1, r1, #2147483648	@ 0x80000000
 802234e:	3901      	subs	r1, #1
 8022350:	0049      	lsls	r1, r1, #1
 8022352:	3102      	adds	r1, #2
 8022354:	eb00 0c01 	add.w	ip, r0, r1
 8022358:	5a41      	ldrh	r1, [r0, r1]
 802235a:	980c      	ldr	r0, [sp, #48]	@ 0x30
 802235c:	28ff      	cmp	r0, #255	@ 0xff
 802235e:	d019      	beq.n	8022394 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x648>
 8022360:	9c0c      	ldr	r4, [sp, #48]	@ 0x30
 8022362:	f421 60fc 	bic.w	r0, r1, #2016	@ 0x7e0
 8022366:	f401 61fc 	and.w	r1, r1, #2016	@ 0x7e0
 802236a:	fb04 fa01 	mul.w	sl, r4, r1
 802236e:	ea4f 08e4 	mov.w	r8, r4, asr #3
 8022372:	fb08 f800 	mul.w	r8, r8, r0
 8022376:	f10a 0020 	add.w	r0, sl, #32
 802237a:	ea06 1158 	and.w	r1, r6, r8, lsr #5
 802237e:	eb00 201a 	add.w	r0, r0, sl, lsr #8
 8022382:	f608 0801 	addw	r8, r8, #2049	@ 0x801
 8022386:	4441      	add	r1, r8
 8022388:	0a00      	lsrs	r0, r0, #8
 802238a:	ea06 1151 	and.w	r1, r6, r1, lsr #5
 802238e:	f400 60fc 	and.w	r0, r0, #2016	@ 0x7e0
 8022392:	4301      	orrs	r1, r0
 8022394:	9c0d      	ldr	r4, [sp, #52]	@ 0x34
 8022396:	f8bc 0002 	ldrh.w	r0, [ip, #2]
 802239a:	2cff      	cmp	r4, #255	@ 0xff
 802239c:	d01a      	beq.n	80223d4 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x688>
 802239e:	f420 6cfc 	bic.w	ip, r0, #2016	@ 0x7e0
 80223a2:	f400 60fc 	and.w	r0, r0, #2016	@ 0x7e0
 80223a6:	fb04 fa00 	mul.w	sl, r4, r0
 80223aa:	ea4f 08e4 	mov.w	r8, r4, asr #3
 80223ae:	fb08 f80c 	mul.w	r8, r8, ip
 80223b2:	f10a 0c20 	add.w	ip, sl, #32
 80223b6:	ea06 1058 	and.w	r0, r6, r8, lsr #5
 80223ba:	eb0c 2c1a 	add.w	ip, ip, sl, lsr #8
 80223be:	f608 0801 	addw	r8, r8, #2049	@ 0x801
 80223c2:	4440      	add	r0, r8
 80223c4:	ea4f 2c1c 	mov.w	ip, ip, lsr #8
 80223c8:	ea06 1050 	and.w	r0, r6, r0, lsr #5
 80223cc:	f40c 6cfc 	and.w	ip, ip, #2016	@ 0x7e0
 80223d0:	ea40 000c 	orr.w	r0, r0, ip
 80223d4:	fb15 fc02 	smulbb	ip, r5, r2
 80223d8:	ea4f 0cec 	mov.w	ip, ip, asr #3
 80223dc:	f1c5 0810 	rsb	r8, r5, #16
 80223e0:	eba8 0802 	sub.w	r8, r8, r2
 80223e4:	ea4f 4a01 	mov.w	sl, r1, lsl #16
 80223e8:	ebcc 0242 	rsb	r2, ip, r2, lsl #1
 80223ec:	437a      	muls	r2, r7
 80223ee:	ea4f 4b00 	mov.w	fp, r0, lsl #16
 80223f2:	eb0c 0848 	add.w	r8, ip, r8, lsl #1
 80223f6:	f00a 6afc 	and.w	sl, sl, #132120576	@ 0x7e00000
 80223fa:	f421 61fc 	bic.w	r1, r1, #2016	@ 0x7e0
 80223fe:	fb09 2208 	mla	r2, r9, r8, r2
 8022402:	ea4a 0101 	orr.w	r1, sl, r1
 8022406:	ebcc 0545 	rsb	r5, ip, r5, lsl #1
 802240a:	f00b 6bfc 	and.w	fp, fp, #132120576	@ 0x7e00000
 802240e:	f420 60fc 	bic.w	r0, r0, #2016	@ 0x7e0
 8022412:	fb05 2201 	mla	r2, r5, r1, r2
 8022416:	ea4b 0000 	orr.w	r0, fp, r0
 802241a:	fb0c 2200 	mla	r2, ip, r0, r2
 802241e:	0d57      	lsrs	r7, r2, #21
 8022420:	0952      	lsrs	r2, r2, #5
 8022422:	f407 67fc 	and.w	r7, r7, #2016	@ 0x7e0
 8022426:	f422 62fc 	bic.w	r2, r2, #2016	@ 0x7e0
 802242a:	433a      	orrs	r2, r7
 802242c:	2bff      	cmp	r3, #255	@ 0xff
 802242e:	b292      	uxth	r2, r2
 8022430:	d127      	bne.n	8022482 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x736>
 8022432:	f8ae 2000 	strh.w	r2, [lr]
 8022436:	9b1d      	ldr	r3, [sp, #116]	@ 0x74
 8022438:	9a1f      	ldr	r2, [sp, #124]	@ 0x7c
 802243a:	4413      	add	r3, r2
 802243c:	931d      	str	r3, [sp, #116]	@ 0x74
 802243e:	9a1e      	ldr	r2, [sp, #120]	@ 0x78
 8022440:	9b20      	ldr	r3, [sp, #128]	@ 0x80
 8022442:	441a      	add	r2, r3
 8022444:	9b0f      	ldr	r3, [sp, #60]	@ 0x3c
 8022446:	921e      	str	r2, [sp, #120]	@ 0x78
 8022448:	3b01      	subs	r3, #1
 802244a:	f10e 0e02 	add.w	lr, lr, #2
 802244e:	930f      	str	r3, [sp, #60]	@ 0x3c
 8022450:	e627      	b.n	80220a2 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x356>
 8022452:	fb08 f000 	mul.w	r0, r8, r0
 8022456:	fb09 0303 	mla	r3, r9, r3, r0
 802245a:	e71b      	b.n	8022294 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x548>
 802245c:	46b9      	mov	r9, r7
 802245e:	e743      	b.n	80222e8 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x59c>
 8022460:	f1c2 0110 	rsb	r1, r2, #16
 8022464:	437a      	muls	r2, r7
 8022466:	fb09 2901 	mla	r9, r9, r1, r2
 802246a:	ea4f 0949 	mov.w	r9, r9, lsl #1
 802246e:	ea4f 5059 	mov.w	r0, r9, lsr #21
 8022472:	ea4f 1259 	mov.w	r2, r9, lsr #5
 8022476:	f400 60fc 	and.w	r0, r0, #2016	@ 0x7e0
 802247a:	f422 62fc 	bic.w	r2, r2, #2016	@ 0x7e0
 802247e:	4302      	orrs	r2, r0
 8022480:	e7d4      	b.n	802242c <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x6e0>
 8022482:	f8be 7000 	ldrh.w	r7, [lr]
 8022486:	4c1c      	ldr	r4, [pc, #112]	@ (80224f8 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x7ac>)
 8022488:	43db      	mvns	r3, r3
 802248a:	1238      	asrs	r0, r7, #8
 802248c:	fa5f fc83 	uxtb.w	ip, r3
 8022490:	f000 00f8 	and.w	r0, r0, #248	@ 0xf8
 8022494:	10fd      	asrs	r5, r7, #3
 8022496:	fb00 f00c 	mul.w	r0, r0, ip
 802249a:	f005 05fc 	and.w	r5, r5, #252	@ 0xfc
 802249e:	fb05 f10c 	mul.w	r1, r5, ip
 80224a2:	1c45      	adds	r5, r0, #1
 80224a4:	eb05 2010 	add.w	r0, r5, r0, lsr #8
 80224a8:	1215      	asrs	r5, r2, #8
 80224aa:	f025 0507 	bic.w	r5, r5, #7
 80224ae:	eb05 2010 	add.w	r0, r5, r0, lsr #8
 80224b2:	1c4d      	adds	r5, r1, #1
 80224b4:	eb05 2511 	add.w	r5, r5, r1, lsr #8
 80224b8:	10d1      	asrs	r1, r2, #3
 80224ba:	f021 0103 	bic.w	r1, r1, #3
 80224be:	00fb      	lsls	r3, r7, #3
 80224c0:	eb01 2115 	add.w	r1, r1, r5, lsr #8
 80224c4:	b2db      	uxtb	r3, r3
 80224c6:	b2c0      	uxtb	r0, r0
 80224c8:	00c9      	lsls	r1, r1, #3
 80224ca:	fb03 f30c 	mul.w	r3, r3, ip
 80224ce:	f401 61fc 	and.w	r1, r1, #2016	@ 0x7e0
 80224d2:	ea04 2000 	and.w	r0, r4, r0, lsl #8
 80224d6:	4308      	orrs	r0, r1
 80224d8:	1c59      	adds	r1, r3, #1
 80224da:	eb01 2313 	add.w	r3, r1, r3, lsr #8
 80224de:	00d2      	lsls	r2, r2, #3
 80224e0:	eb02 2313 	add.w	r3, r2, r3, lsr #8
 80224e4:	f3c3 03c4 	ubfx	r3, r3, #3, #5
 80224e8:	4318      	orrs	r0, r3
 80224ea:	f8ae 0000 	strh.w	r0, [lr]
 80224ee:	e7a2      	b.n	8022436 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x6ea>
 80224f0:	b013      	add	sp, #76	@ 0x4c
 80224f2:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 80224f6:	bf00      	nop
 80224f8:	fffff800 	.word	0xfffff800

080224fc <_ZNK8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtssiihhh>:
 80224fc:	e92d 47f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
 8022500:	e9dd 4509 	ldrd	r4, r5, [sp, #36]	@ 0x24
 8022504:	fb05 4c03 	mla	ip, r5, r3, r4
 8022508:	2d00      	cmp	r5, #0
 802250a:	f9bd a020 	ldrsh.w	sl, [sp, #32]
 802250e:	f89d 902c 	ldrb.w	r9, [sp, #44]	@ 0x2c
 8022512:	f89d 7030 	ldrb.w	r7, [sp, #48]	@ 0x30
 8022516:	f89d 6034 	ldrb.w	r6, [sp, #52]	@ 0x34
 802251a:	8808      	ldrh	r0, [r1, #0]
 802251c:	eb02 0e4c 	add.w	lr, r2, ip, lsl #1
 8022520:	f2c0 80a7 	blt.w	8022672 <_ZNK8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtssiihhh+0x176>
 8022524:	45aa      	cmp	sl, r5
 8022526:	f340 80a4 	ble.w	8022672 <_ZNK8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtssiihhh+0x176>
 802252a:	2c00      	cmp	r4, #0
 802252c:	f2c0 809f 	blt.w	802266e <_ZNK8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtssiihhh+0x172>
 8022530:	42a3      	cmp	r3, r4
 8022532:	f340 809c 	ble.w	802266e <_ZNK8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtssiihhh+0x172>
 8022536:	f832 801c 	ldrh.w	r8, [r2, ip, lsl #1]
 802253a:	1c62      	adds	r2, r4, #1
 802253c:	f100 809c 	bmi.w	8022678 <_ZNK8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtssiihhh+0x17c>
 8022540:	4293      	cmp	r3, r2
 8022542:	f340 8099 	ble.w	8022678 <_ZNK8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtssiihhh+0x17c>
 8022546:	f1b9 0f00 	cmp.w	r9, #0
 802254a:	f000 8095 	beq.w	8022678 <_ZNK8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtssiihhh+0x17c>
 802254e:	f8be c002 	ldrh.w	ip, [lr, #2]
 8022552:	3501      	adds	r5, #1
 8022554:	f100 8094 	bmi.w	8022680 <_ZNK8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtssiihhh+0x184>
 8022558:	45aa      	cmp	sl, r5
 802255a:	f340 8091 	ble.w	8022680 <_ZNK8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtssiihhh+0x184>
 802255e:	2f00      	cmp	r7, #0
 8022560:	f000 808e 	beq.w	8022680 <_ZNK8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtssiihhh+0x184>
 8022564:	2c00      	cmp	r4, #0
 8022566:	f2c0 8089 	blt.w	802267c <_ZNK8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtssiihhh+0x180>
 802256a:	42a3      	cmp	r3, r4
 802256c:	f340 8086 	ble.w	802267c <_ZNK8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtssiihhh+0x180>
 8022570:	f83e 5013 	ldrh.w	r5, [lr, r3, lsl #1]
 8022574:	3401      	adds	r4, #1
 8022576:	f100 8086 	bmi.w	8022686 <_ZNK8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtssiihhh+0x18a>
 802257a:	42a3      	cmp	r3, r4
 802257c:	f340 8083 	ble.w	8022686 <_ZNK8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtssiihhh+0x18a>
 8022580:	f1b9 0f00 	cmp.w	r9, #0
 8022584:	d07f      	beq.n	8022686 <_ZNK8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtssiihhh+0x18a>
 8022586:	3301      	adds	r3, #1
 8022588:	f83e 3013 	ldrh.w	r3, [lr, r3, lsl #1]
 802258c:	ea4f 4408 	mov.w	r4, r8, lsl #16
 8022590:	f004 64fc 	and.w	r4, r4, #132120576	@ 0x7e00000
 8022594:	f428 68fc 	bic.w	r8, r8, #2016	@ 0x7e0
 8022598:	fb19 fe07 	smulbb	lr, r9, r7
 802259c:	ea44 0808 	orr.w	r8, r4, r8
 80225a0:	ea4f 440c 	mov.w	r4, ip, lsl #16
 80225a4:	f3ce 0ec7 	ubfx	lr, lr, #3, #8
 80225a8:	f1c7 0210 	rsb	r2, r7, #16
 80225ac:	f004 64fc 	and.w	r4, r4, #132120576	@ 0x7e00000
 80225b0:	f42c 6cfc 	bic.w	ip, ip, #2016	@ 0x7e0
 80225b4:	ea44 0c0c 	orr.w	ip, r4, ip
 80225b8:	eba2 0209 	sub.w	r2, r2, r9
 80225bc:	ebce 0449 	rsb	r4, lr, r9, lsl #1
 80225c0:	eb0e 0242 	add.w	r2, lr, r2, lsl #1
 80225c4:	fb04 f40c 	mul.w	r4, r4, ip
 80225c8:	fb02 4808 	mla	r8, r2, r8, r4
 80225cc:	041a      	lsls	r2, r3, #16
 80225ce:	f002 62fc 	and.w	r2, r2, #132120576	@ 0x7e00000
 80225d2:	f423 63fc 	bic.w	r3, r3, #2016	@ 0x7e0
 80225d6:	4313      	orrs	r3, r2
 80225d8:	042a      	lsls	r2, r5, #16
 80225da:	f002 62fc 	and.w	r2, r2, #132120576	@ 0x7e00000
 80225de:	f425 65fc 	bic.w	r5, r5, #2016	@ 0x7e0
 80225e2:	fb0e 8303 	mla	r3, lr, r3, r8
 80225e6:	432a      	orrs	r2, r5
 80225e8:	ebce 0747 	rsb	r7, lr, r7, lsl #1
 80225ec:	fb07 3202 	mla	r2, r7, r2, r3
 80225f0:	0d53      	lsrs	r3, r2, #21
 80225f2:	0952      	lsrs	r2, r2, #5
 80225f4:	f403 63fc 	and.w	r3, r3, #2016	@ 0x7e0
 80225f8:	f422 62fc 	bic.w	r2, r2, #2016	@ 0x7e0
 80225fc:	431a      	orrs	r2, r3
 80225fe:	b293      	uxth	r3, r2
 8022600:	b2b4      	uxth	r4, r6
 8022602:	1202      	asrs	r2, r0, #8
 8022604:	43f6      	mvns	r6, r6
 8022606:	b2f6      	uxtb	r6, r6
 8022608:	121d      	asrs	r5, r3, #8
 802260a:	f002 02f8 	and.w	r2, r2, #248	@ 0xf8
 802260e:	fb12 f206 	smulbb	r2, r2, r6
 8022612:	10c7      	asrs	r7, r0, #3
 8022614:	f005 05f8 	and.w	r5, r5, #248	@ 0xf8
 8022618:	00c0      	lsls	r0, r0, #3
 802261a:	fb05 2504 	mla	r5, r5, r4, r2
 802261e:	b2c0      	uxtb	r0, r0
 8022620:	10da      	asrs	r2, r3, #3
 8022622:	00db      	lsls	r3, r3, #3
 8022624:	b2db      	uxtb	r3, r3
 8022626:	f007 07fc 	and.w	r7, r7, #252	@ 0xfc
 802262a:	fb10 f006 	smulbb	r0, r0, r6
 802262e:	b2ad      	uxth	r5, r5
 8022630:	fb03 0004 	mla	r0, r3, r4, r0
 8022634:	f002 02fc 	and.w	r2, r2, #252	@ 0xfc
 8022638:	fb17 f706 	smulbb	r7, r7, r6
 802263c:	b280      	uxth	r0, r0
 802263e:	1c6b      	adds	r3, r5, #1
 8022640:	fb02 7204 	mla	r2, r2, r4, r7
 8022644:	b292      	uxth	r2, r2
 8022646:	eb03 2515 	add.w	r5, r3, r5, lsr #8
 802264a:	1c43      	adds	r3, r0, #1
 802264c:	eb03 2310 	add.w	r3, r3, r0, lsr #8
 8022650:	1c50      	adds	r0, r2, #1
 8022652:	eb00 2212 	add.w	r2, r0, r2, lsr #8
 8022656:	f405 4578 	and.w	r5, r5, #63488	@ 0xf800
 802265a:	f3c3 23c4 	ubfx	r3, r3, #11, #5
 802265e:	0952      	lsrs	r2, r2, #5
 8022660:	432b      	orrs	r3, r5
 8022662:	f402 62fc 	and.w	r2, r2, #2016	@ 0x7e0
 8022666:	4313      	orrs	r3, r2
 8022668:	800b      	strh	r3, [r1, #0]
 802266a:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
 802266e:	4680      	mov	r8, r0
 8022670:	e763      	b.n	802253a <_ZNK8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtssiihhh+0x3e>
 8022672:	4684      	mov	ip, r0
 8022674:	4680      	mov	r8, r0
 8022676:	e76c      	b.n	8022552 <_ZNK8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtssiihhh+0x56>
 8022678:	4684      	mov	ip, r0
 802267a:	e76a      	b.n	8022552 <_ZNK8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtssiihhh+0x56>
 802267c:	4605      	mov	r5, r0
 802267e:	e779      	b.n	8022574 <_ZNK8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtssiihhh+0x78>
 8022680:	4603      	mov	r3, r0
 8022682:	4605      	mov	r5, r0
 8022684:	e782      	b.n	802258c <_ZNK8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtssiihhh+0x90>
 8022686:	4603      	mov	r3, r0
 8022688:	e780      	b.n	802258c <_ZNK8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtssiihhh+0x90>

0802268a <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff>:
 802268a:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 802268e:	b093      	sub	sp, #76	@ 0x4c
 8022690:	461d      	mov	r5, r3
 8022692:	9210      	str	r2, [sp, #64]	@ 0x40
 8022694:	9b21      	ldr	r3, [sp, #132]	@ 0x84
 8022696:	f89d 2094 	ldrb.w	r2, [sp, #148]	@ 0x94
 802269a:	920b      	str	r2, [sp, #44]	@ 0x2c
 802269c:	e9dd 2722 	ldrd	r2, r7, [sp, #136]	@ 0x88
 80226a0:	910a      	str	r1, [sp, #40]	@ 0x28
 80226a2:	6859      	ldr	r1, [r3, #4]
 80226a4:	681b      	ldr	r3, [r3, #0]
 80226a6:	9011      	str	r0, [sp, #68]	@ 0x44
 80226a8:	fb01 2707 	mla	r7, r1, r7, r2
 80226ac:	eb03 0347 	add.w	r3, r3, r7, lsl #1
 80226b0:	9307      	str	r3, [sp, #28]
 80226b2:	9b24      	ldr	r3, [sp, #144]	@ 0x90
 80226b4:	681b      	ldr	r3, [r3, #0]
 80226b6:	9309      	str	r3, [sp, #36]	@ 0x24
 80226b8:	9b0b      	ldr	r3, [sp, #44]	@ 0x2c
 80226ba:	e9dd 461d 	ldrd	r4, r6, [sp, #116]	@ 0x74
 80226be:	43db      	mvns	r3, r3
 80226c0:	b2db      	uxtb	r3, r3
 80226c2:	9308      	str	r3, [sp, #32]
 80226c4:	9b0a      	ldr	r3, [sp, #40]	@ 0x28
 80226c6:	2b00      	cmp	r3, #0
 80226c8:	dc03      	bgt.n	80226d2 <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x48>
 80226ca:	9b10      	ldr	r3, [sp, #64]	@ 0x40
 80226cc:	2b00      	cmp	r3, #0
 80226ce:	f340 8203 	ble.w	8022ad8 <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x44e>
 80226d2:	9b24      	ldr	r3, [sp, #144]	@ 0x90
 80226d4:	f9b3 1008 	ldrsh.w	r1, [r3, #8]
 80226d8:	f9b3 200c 	ldrsh.w	r2, [r3, #12]
 80226dc:	1e48      	subs	r0, r1, #1
 80226de:	f102 3cff 	add.w	ip, r2, #4294967295
 80226e2:	2d00      	cmp	r5, #0
 80226e4:	f340 80da 	ble.w	802289c <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x212>
 80226e8:	ea5f 4e24 	movs.w	lr, r4, asr #16
 80226ec:	ea4f 4326 	mov.w	r3, r6, asr #16
 80226f0:	d406      	bmi.n	8022700 <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x76>
 80226f2:	4586      	cmp	lr, r0
 80226f4:	da04      	bge.n	8022700 <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x76>
 80226f6:	2b00      	cmp	r3, #0
 80226f8:	db02      	blt.n	8022700 <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x76>
 80226fa:	4563      	cmp	r3, ip
 80226fc:	f2c0 80cf 	blt.w	802289e <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x214>
 8022700:	f11e 0e01 	adds.w	lr, lr, #1
 8022704:	f100 80c1 	bmi.w	802288a <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x200>
 8022708:	4571      	cmp	r1, lr
 802270a:	f2c0 80be 	blt.w	802288a <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x200>
 802270e:	3301      	adds	r3, #1
 8022710:	f100 80bb 	bmi.w	802288a <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x200>
 8022714:	429a      	cmp	r2, r3
 8022716:	f2c0 80b8 	blt.w	802288a <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x200>
 802271a:	f8dd 801c 	ldr.w	r8, [sp, #28]
 802271e:	46a9      	mov	r9, r5
 8022720:	f1b9 0f00 	cmp.w	r9, #0
 8022724:	f340 80d8 	ble.w	80228d8 <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x24e>
 8022728:	9b24      	ldr	r3, [sp, #144]	@ 0x90
 802272a:	1421      	asrs	r1, r4, #16
 802272c:	ea4f 4026 	mov.w	r0, r6, asr #16
 8022730:	f3c4 3203 	ubfx	r2, r4, #12, #4
 8022734:	f3c6 3c03 	ubfx	ip, r6, #12, #4
 8022738:	e9d3 e302 	ldrd	lr, r3, [r3, #8]
 802273c:	f100 8111 	bmi.w	8022962 <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2d8>
 8022740:	f10e 3aff 	add.w	sl, lr, #4294967295
 8022744:	4551      	cmp	r1, sl
 8022746:	f280 810c 	bge.w	8022962 <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2d8>
 802274a:	2800      	cmp	r0, #0
 802274c:	f2c0 8109 	blt.w	8022962 <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2d8>
 8022750:	f103 3aff 	add.w	sl, r3, #4294967295
 8022754:	4550      	cmp	r0, sl
 8022756:	f280 8104 	bge.w	8022962 <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2d8>
 802275a:	fa0f f38e 	sxth.w	r3, lr
 802275e:	fb00 1103 	mla	r1, r0, r3, r1
 8022762:	9809      	ldr	r0, [sp, #36]	@ 0x24
 8022764:	eb00 0a41 	add.w	sl, r0, r1, lsl #1
 8022768:	f830 e011 	ldrh.w	lr, [r0, r1, lsl #1]
 802276c:	f8ba 1002 	ldrh.w	r1, [sl, #2]
 8022770:	f1bc 0f00 	cmp.w	ip, #0
 8022774:	d007      	beq.n	8022786 <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xfc>
 8022776:	005b      	lsls	r3, r3, #1
 8022778:	eb0a 0003 	add.w	r0, sl, r3
 802277c:	f83a 3003 	ldrh.w	r3, [sl, r3]
 8022780:	930c      	str	r3, [sp, #48]	@ 0x30
 8022782:	8843      	ldrh	r3, [r0, #2]
 8022784:	930d      	str	r3, [sp, #52]	@ 0x34
 8022786:	ea4f 400e 	mov.w	r0, lr, lsl #16
 802278a:	fb12 f30c 	smulbb	r3, r2, ip
 802278e:	f42e 6efc 	bic.w	lr, lr, #2016	@ 0x7e0
 8022792:	ea4f 4a01 	mov.w	sl, r1, lsl #16
 8022796:	f000 60fc 	and.w	r0, r0, #132120576	@ 0x7e00000
 802279a:	10db      	asrs	r3, r3, #3
 802279c:	ea40 000e 	orr.w	r0, r0, lr
 80227a0:	f00a 6afc 	and.w	sl, sl, #132120576	@ 0x7e00000
 80227a4:	f1cc 0e10 	rsb	lr, ip, #16
 80227a8:	f421 61fc 	bic.w	r1, r1, #2016	@ 0x7e0
 80227ac:	ebae 0e02 	sub.w	lr, lr, r2
 80227b0:	ea4a 0101 	orr.w	r1, sl, r1
 80227b4:	ebc3 0242 	rsb	r2, r3, r2, lsl #1
 80227b8:	4351      	muls	r1, r2
 80227ba:	9a0d      	ldr	r2, [sp, #52]	@ 0x34
 80227bc:	9f08      	ldr	r7, [sp, #32]
 80227be:	eb03 0e4e 	add.w	lr, r3, lr, lsl #1
 80227c2:	fb0e 1e00 	mla	lr, lr, r0, r1
 80227c6:	0410      	lsls	r0, r2, #16
 80227c8:	f000 60fc 	and.w	r0, r0, #132120576	@ 0x7e00000
 80227cc:	f422 62fc 	bic.w	r2, r2, #2016	@ 0x7e0
 80227d0:	4310      	orrs	r0, r2
 80227d2:	9a0c      	ldr	r2, [sp, #48]	@ 0x30
 80227d4:	990c      	ldr	r1, [sp, #48]	@ 0x30
 80227d6:	0412      	lsls	r2, r2, #16
 80227d8:	fb03 e000 	mla	r0, r3, r0, lr
 80227dc:	f002 62fc 	and.w	r2, r2, #132120576	@ 0x7e00000
 80227e0:	f421 6efc 	bic.w	lr, r1, #2016	@ 0x7e0
 80227e4:	ea42 020e 	orr.w	r2, r2, lr
 80227e8:	ebc3 034c 	rsb	r3, r3, ip, lsl #1
 80227ec:	fb03 0302 	mla	r3, r3, r2, r0
 80227f0:	0d5a      	lsrs	r2, r3, #21
 80227f2:	095b      	lsrs	r3, r3, #5
 80227f4:	f8b8 0000 	ldrh.w	r0, [r8]
 80227f8:	f402 62fc 	and.w	r2, r2, #2016	@ 0x7e0
 80227fc:	f423 63fc 	bic.w	r3, r3, #2016	@ 0x7e0
 8022800:	4313      	orrs	r3, r2
 8022802:	b29b      	uxth	r3, r3
 8022804:	1201      	asrs	r1, r0, #8
 8022806:	f8bd 202c 	ldrh.w	r2, [sp, #44]	@ 0x2c
 802280a:	ea4f 2c23 	mov.w	ip, r3, asr #8
 802280e:	f001 01f8 	and.w	r1, r1, #248	@ 0xf8
 8022812:	fb11 f107 	smulbb	r1, r1, r7
 8022816:	ea4f 0ee0 	mov.w	lr, r0, asr #3
 802281a:	f00c 0cf8 	and.w	ip, ip, #248	@ 0xf8
 802281e:	00c0      	lsls	r0, r0, #3
 8022820:	fb0c 1c02 	mla	ip, ip, r2, r1
 8022824:	b2c0      	uxtb	r0, r0
 8022826:	10d9      	asrs	r1, r3, #3
 8022828:	00db      	lsls	r3, r3, #3
 802282a:	f00e 0efc 	and.w	lr, lr, #252	@ 0xfc
 802282e:	b2db      	uxtb	r3, r3
 8022830:	fb10 f007 	smulbb	r0, r0, r7
 8022834:	fa1f fc8c 	uxth.w	ip, ip
 8022838:	fb03 0302 	mla	r3, r3, r2, r0
 802283c:	f001 01fc 	and.w	r1, r1, #252	@ 0xfc
 8022840:	fb1e fe07 	smulbb	lr, lr, r7
 8022844:	fb01 e102 	mla	r1, r1, r2, lr
 8022848:	b29a      	uxth	r2, r3
 802284a:	f10c 0301 	add.w	r3, ip, #1
 802284e:	b289      	uxth	r1, r1
 8022850:	eb03 2c1c 	add.w	ip, r3, ip, lsr #8
 8022854:	1c53      	adds	r3, r2, #1
 8022856:	eb03 2312 	add.w	r3, r3, r2, lsr #8
 802285a:	1c4a      	adds	r2, r1, #1
 802285c:	eb02 2111 	add.w	r1, r2, r1, lsr #8
 8022860:	f40c 4c78 	and.w	ip, ip, #63488	@ 0xf800
 8022864:	f3c3 23c4 	ubfx	r3, r3, #11, #5
 8022868:	0949      	lsrs	r1, r1, #5
 802286a:	ea43 030c 	orr.w	r3, r3, ip
 802286e:	f401 61fc 	and.w	r1, r1, #2016	@ 0x7e0
 8022872:	430b      	orrs	r3, r1
 8022874:	f8a8 3000 	strh.w	r3, [r8]
 8022878:	9b1f      	ldr	r3, [sp, #124]	@ 0x7c
 802287a:	441c      	add	r4, r3
 802287c:	9b20      	ldr	r3, [sp, #128]	@ 0x80
 802287e:	f108 0802 	add.w	r8, r8, #2
 8022882:	441e      	add	r6, r3
 8022884:	f109 39ff 	add.w	r9, r9, #4294967295
 8022888:	e74a      	b.n	8022720 <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x96>
 802288a:	9b1f      	ldr	r3, [sp, #124]	@ 0x7c
 802288c:	441c      	add	r4, r3
 802288e:	9b20      	ldr	r3, [sp, #128]	@ 0x80
 8022890:	441e      	add	r6, r3
 8022892:	9b07      	ldr	r3, [sp, #28]
 8022894:	3302      	adds	r3, #2
 8022896:	3d01      	subs	r5, #1
 8022898:	9307      	str	r3, [sp, #28]
 802289a:	e722      	b.n	80226e2 <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x58>
 802289c:	d022      	beq.n	80228e4 <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x25a>
 802289e:	981f      	ldr	r0, [sp, #124]	@ 0x7c
 80228a0:	1e6b      	subs	r3, r5, #1
 80228a2:	fb00 4003 	mla	r0, r0, r3, r4
 80228a6:	1400      	asrs	r0, r0, #16
 80228a8:	f53f af37 	bmi.w	802271a <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x90>
 80228ac:	3901      	subs	r1, #1
 80228ae:	4288      	cmp	r0, r1
 80228b0:	f6bf af33 	bge.w	802271a <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x90>
 80228b4:	9920      	ldr	r1, [sp, #128]	@ 0x80
 80228b6:	fb01 6303 	mla	r3, r1, r3, r6
 80228ba:	141b      	asrs	r3, r3, #16
 80228bc:	f53f af2d 	bmi.w	802271a <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x90>
 80228c0:	3a01      	subs	r2, #1
 80228c2:	4293      	cmp	r3, r2
 80228c4:	f6bf af29 	bge.w	802271a <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x90>
 80228c8:	f8dd 901c 	ldr.w	r9, [sp, #28]
 80228cc:	f8bd a02c 	ldrh.w	sl, [sp, #44]	@ 0x2c
 80228d0:	46a8      	mov	r8, r5
 80228d2:	f1b8 0f00 	cmp.w	r8, #0
 80228d6:	dc5e      	bgt.n	8022996 <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x30c>
 80228d8:	9b07      	ldr	r3, [sp, #28]
 80228da:	ea25 75e5 	bic.w	r5, r5, r5, asr #31
 80228de:	eb03 0345 	add.w	r3, r3, r5, lsl #1
 80228e2:	9307      	str	r3, [sp, #28]
 80228e4:	9b0a      	ldr	r3, [sp, #40]	@ 0x28
 80228e6:	2b00      	cmp	r3, #0
 80228e8:	f340 80f6 	ble.w	8022ad8 <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x44e>
 80228ec:	ee30 0a04 	vadd.f32	s0, s0, s8
 80228f0:	eeb7 7a00 	vmov.f32	s14, #112	@ 0x3f800000  1.0
 80228f4:	eec7 7a00 	vdiv.f32	s15, s14, s0
 80228f8:	9b1c      	ldr	r3, [sp, #112]	@ 0x70
 80228fa:	ee70 0aa4 	vadd.f32	s1, s1, s9
 80228fe:	ee31 1a05 	vadd.f32	s2, s2, s10
 8022902:	ee20 7aa7 	vmul.f32	s14, s1, s15
 8022906:	eef0 6a62 	vmov.f32	s13, s5
 802290a:	ee61 7a27 	vmul.f32	s15, s2, s15
 802290e:	eefe 6ac8 	vcvt.s32.f32	s13, s13, #16
 8022912:	ee77 2a62 	vsub.f32	s5, s14, s5
 8022916:	ee16 4a90 	vmov	r4, s13
 802291a:	eefe 2ac8 	vcvt.s32.f32	s5, s5, #16
 802291e:	eef0 6a43 	vmov.f32	s13, s6
 8022922:	ee37 3ac3 	vsub.f32	s6, s15, s6
 8022926:	ee12 2a90 	vmov	r2, s5
 802292a:	eebe 3ac8 	vcvt.s32.f32	s6, s6, #16
 802292e:	fb92 f3f3 	sdiv	r3, r2, r3
 8022932:	ee13 2a10 	vmov	r2, s6
 8022936:	931f      	str	r3, [sp, #124]	@ 0x7c
 8022938:	9b1c      	ldr	r3, [sp, #112]	@ 0x70
 802293a:	fb92 f3f3 	sdiv	r3, r2, r3
 802293e:	9320      	str	r3, [sp, #128]	@ 0x80
 8022940:	9b0a      	ldr	r3, [sp, #40]	@ 0x28
 8022942:	9a10      	ldr	r2, [sp, #64]	@ 0x40
 8022944:	3b01      	subs	r3, #1
 8022946:	eefe 6ac8 	vcvt.s32.f32	s13, s13, #16
 802294a:	930a      	str	r3, [sp, #40]	@ 0x28
 802294c:	9b1c      	ldr	r3, [sp, #112]	@ 0x70
 802294e:	ee16 6a90 	vmov	r6, s13
 8022952:	bf14      	ite	ne
 8022954:	461d      	movne	r5, r3
 8022956:	4615      	moveq	r5, r2
 8022958:	eeb0 3a67 	vmov.f32	s6, s15
 802295c:	eef0 2a47 	vmov.f32	s5, s14
 8022960:	e6b0      	b.n	80226c4 <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3a>
 8022962:	f111 0a01 	adds.w	sl, r1, #1
 8022966:	d487      	bmi.n	8022878 <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1ee>
 8022968:	45d6      	cmp	lr, sl
 802296a:	db85      	blt.n	8022878 <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1ee>
 802296c:	f110 0a01 	adds.w	sl, r0, #1
 8022970:	d482      	bmi.n	8022878 <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1ee>
 8022972:	4553      	cmp	r3, sl
 8022974:	db80      	blt.n	8022878 <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1ee>
 8022976:	9f0b      	ldr	r7, [sp, #44]	@ 0x2c
 8022978:	9101      	str	r1, [sp, #4]
 802297a:	b21b      	sxth	r3, r3
 802297c:	e9cd 0202 	strd	r0, r2, [sp, #8]
 8022980:	9300      	str	r3, [sp, #0]
 8022982:	e9cd c704 	strd	ip, r7, [sp, #16]
 8022986:	fa0f f38e 	sxth.w	r3, lr
 802298a:	9a09      	ldr	r2, [sp, #36]	@ 0x24
 802298c:	9811      	ldr	r0, [sp, #68]	@ 0x44
 802298e:	4641      	mov	r1, r8
 8022990:	f7ff fdb4 	bl	80224fc <_ZNK8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtssiihhh>
 8022994:	e770      	b.n	8022878 <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1ee>
 8022996:	9b24      	ldr	r3, [sp, #144]	@ 0x90
 8022998:	9f09      	ldr	r7, [sp, #36]	@ 0x24
 802299a:	f9b3 1008 	ldrsh.w	r1, [r3, #8]
 802299e:	1430      	asrs	r0, r6, #16
 80229a0:	1423      	asrs	r3, r4, #16
 80229a2:	fb01 3000 	mla	r0, r1, r0, r3
 80229a6:	9b09      	ldr	r3, [sp, #36]	@ 0x24
 80229a8:	f837 c010 	ldrh.w	ip, [r7, r0, lsl #1]
 80229ac:	eb03 0340 	add.w	r3, r3, r0, lsl #1
 80229b0:	f3c6 3e03 	ubfx	lr, r6, #12, #4
 80229b4:	f3c4 3203 	ubfx	r2, r4, #12, #4
 80229b8:	8858      	ldrh	r0, [r3, #2]
 80229ba:	f1be 0f00 	cmp.w	lr, #0
 80229be:	d00b      	beq.n	80229d8 <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x34e>
 80229c0:	f101 4100 	add.w	r1, r1, #2147483648	@ 0x80000000
 80229c4:	3901      	subs	r1, #1
 80229c6:	0049      	lsls	r1, r1, #1
 80229c8:	3102      	adds	r1, #2
 80229ca:	eb03 0b01 	add.w	fp, r3, r1
 80229ce:	5a5b      	ldrh	r3, [r3, r1]
 80229d0:	930e      	str	r3, [sp, #56]	@ 0x38
 80229d2:	f8bb 3002 	ldrh.w	r3, [fp, #2]
 80229d6:	930f      	str	r3, [sp, #60]	@ 0x3c
 80229d8:	ea4f 410c 	mov.w	r1, ip, lsl #16
 80229dc:	fb12 f30e 	smulbb	r3, r2, lr
 80229e0:	f42c 6cfc 	bic.w	ip, ip, #2016	@ 0x7e0
 80229e4:	ea4f 4b00 	mov.w	fp, r0, lsl #16
 80229e8:	f001 61fc 	and.w	r1, r1, #132120576	@ 0x7e00000
 80229ec:	10db      	asrs	r3, r3, #3
 80229ee:	ea41 010c 	orr.w	r1, r1, ip
 80229f2:	f00b 6bfc 	and.w	fp, fp, #132120576	@ 0x7e00000
 80229f6:	f1ce 0c10 	rsb	ip, lr, #16
 80229fa:	f420 60fc 	bic.w	r0, r0, #2016	@ 0x7e0
 80229fe:	ebac 0c02 	sub.w	ip, ip, r2
 8022a02:	ea4b 0000 	orr.w	r0, fp, r0
 8022a06:	ebc3 0242 	rsb	r2, r3, r2, lsl #1
 8022a0a:	4350      	muls	r0, r2
 8022a0c:	9a0f      	ldr	r2, [sp, #60]	@ 0x3c
 8022a0e:	9f08      	ldr	r7, [sp, #32]
 8022a10:	eb03 0c4c 	add.w	ip, r3, ip, lsl #1
 8022a14:	fb0c 0c01 	mla	ip, ip, r1, r0
 8022a18:	ea4f 4b02 	mov.w	fp, r2, lsl #16
 8022a1c:	f422 61fc 	bic.w	r1, r2, #2016	@ 0x7e0
 8022a20:	9a0e      	ldr	r2, [sp, #56]	@ 0x38
 8022a22:	980e      	ldr	r0, [sp, #56]	@ 0x38
 8022a24:	f00b 6bfc 	and.w	fp, fp, #132120576	@ 0x7e00000
 8022a28:	0412      	lsls	r2, r2, #16
 8022a2a:	ea4b 0101 	orr.w	r1, fp, r1
 8022a2e:	f420 60fc 	bic.w	r0, r0, #2016	@ 0x7e0
 8022a32:	f002 62fc 	and.w	r2, r2, #132120576	@ 0x7e00000
 8022a36:	fb03 c101 	mla	r1, r3, r1, ip
 8022a3a:	4302      	orrs	r2, r0
 8022a3c:	ebc3 034e 	rsb	r3, r3, lr, lsl #1
 8022a40:	fb03 1202 	mla	r2, r3, r2, r1
 8022a44:	ea4f 5b52 	mov.w	fp, r2, lsr #21
 8022a48:	0952      	lsrs	r2, r2, #5
 8022a4a:	f422 63fc 	bic.w	r3, r2, #2016	@ 0x7e0
 8022a4e:	f40b 6bfc 	and.w	fp, fp, #2016	@ 0x7e0
 8022a52:	f8b9 2000 	ldrh.w	r2, [r9]
 8022a56:	ea4b 0303 	orr.w	r3, fp, r3
 8022a5a:	b29b      	uxth	r3, r3
 8022a5c:	1211      	asrs	r1, r2, #8
 8022a5e:	1218      	asrs	r0, r3, #8
 8022a60:	f001 01f8 	and.w	r1, r1, #248	@ 0xf8
 8022a64:	fb11 f107 	smulbb	r1, r1, r7
 8022a68:	ea4f 0ce2 	mov.w	ip, r2, asr #3
 8022a6c:	f000 00f8 	and.w	r0, r0, #248	@ 0xf8
 8022a70:	00d2      	lsls	r2, r2, #3
 8022a72:	fb00 100a 	mla	r0, r0, sl, r1
 8022a76:	f00c 0cfc 	and.w	ip, ip, #252	@ 0xfc
 8022a7a:	10d9      	asrs	r1, r3, #3
 8022a7c:	b2d2      	uxtb	r2, r2
 8022a7e:	00db      	lsls	r3, r3, #3
 8022a80:	fb1c fc07 	smulbb	ip, ip, r7
 8022a84:	fb12 f207 	smulbb	r2, r2, r7
 8022a88:	f001 01fc 	and.w	r1, r1, #252	@ 0xfc
 8022a8c:	b2db      	uxtb	r3, r3
 8022a8e:	b280      	uxth	r0, r0
 8022a90:	fb01 c10a 	mla	r1, r1, sl, ip
 8022a94:	fb03 230a 	mla	r3, r3, sl, r2
 8022a98:	b29b      	uxth	r3, r3
 8022a9a:	b289      	uxth	r1, r1
 8022a9c:	1c42      	adds	r2, r0, #1
 8022a9e:	eb02 2010 	add.w	r0, r2, r0, lsr #8
 8022aa2:	f101 0c01 	add.w	ip, r1, #1
 8022aa6:	1c5a      	adds	r2, r3, #1
 8022aa8:	eb02 2213 	add.w	r2, r2, r3, lsr #8
 8022aac:	eb0c 2c11 	add.w	ip, ip, r1, lsr #8
 8022ab0:	9b1f      	ldr	r3, [sp, #124]	@ 0x7c
 8022ab2:	f400 4078 	and.w	r0, r0, #63488	@ 0xf800
 8022ab6:	f3c2 22c4 	ubfx	r2, r2, #11, #5
 8022aba:	ea4f 1c5c 	mov.w	ip, ip, lsr #5
 8022abe:	4310      	orrs	r0, r2
 8022ac0:	f40c 6cfc 	and.w	ip, ip, #2016	@ 0x7e0
 8022ac4:	441c      	add	r4, r3
 8022ac6:	9b20      	ldr	r3, [sp, #128]	@ 0x80
 8022ac8:	ea40 000c 	orr.w	r0, r0, ip
 8022acc:	f829 0b02 	strh.w	r0, [r9], #2
 8022ad0:	441e      	add	r6, r3
 8022ad2:	f108 38ff 	add.w	r8, r8, #4294967295
 8022ad6:	e6fc      	b.n	80228d2 <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x248>
 8022ad8:	b013      	add	sp, #76	@ 0x4c
 8022ada:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}

08022ade <_ZNK8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtssiihh>:
 8022ade:	e92d 43f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, lr}
 8022ae2:	e9dd 4e08 	ldrd	r4, lr, [sp, #32]
 8022ae6:	fb0e 4703 	mla	r7, lr, r3, r4
 8022aea:	f1be 0f00 	cmp.w	lr, #0
 8022aee:	f9bd 901c 	ldrsh.w	r9, [sp, #28]
 8022af2:	f89d 5028 	ldrb.w	r5, [sp, #40]	@ 0x28
 8022af6:	f89d 602c 	ldrb.w	r6, [sp, #44]	@ 0x2c
 8022afa:	8808      	ldrh	r0, [r1, #0]
 8022afc:	eb02 0847 	add.w	r8, r2, r7, lsl #1
 8022b00:	db60      	blt.n	8022bc4 <_ZNK8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtssiihh+0xe6>
 8022b02:	45f1      	cmp	r9, lr
 8022b04:	dd5e      	ble.n	8022bc4 <_ZNK8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtssiihh+0xe6>
 8022b06:	2c00      	cmp	r4, #0
 8022b08:	db5a      	blt.n	8022bc0 <_ZNK8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtssiihh+0xe2>
 8022b0a:	42a3      	cmp	r3, r4
 8022b0c:	dd58      	ble.n	8022bc0 <_ZNK8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtssiihh+0xe2>
 8022b0e:	f832 c017 	ldrh.w	ip, [r2, r7, lsl #1]
 8022b12:	1c62      	adds	r2, r4, #1
 8022b14:	d459      	bmi.n	8022bca <_ZNK8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtssiihh+0xec>
 8022b16:	4293      	cmp	r3, r2
 8022b18:	dd57      	ble.n	8022bca <_ZNK8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtssiihh+0xec>
 8022b1a:	2d00      	cmp	r5, #0
 8022b1c:	d055      	beq.n	8022bca <_ZNK8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtssiihh+0xec>
 8022b1e:	f8b8 7002 	ldrh.w	r7, [r8, #2]
 8022b22:	f11e 0e01 	adds.w	lr, lr, #1
 8022b26:	d454      	bmi.n	8022bd2 <_ZNK8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtssiihh+0xf4>
 8022b28:	45f1      	cmp	r9, lr
 8022b2a:	dd52      	ble.n	8022bd2 <_ZNK8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtssiihh+0xf4>
 8022b2c:	2e00      	cmp	r6, #0
 8022b2e:	d050      	beq.n	8022bd2 <_ZNK8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtssiihh+0xf4>
 8022b30:	2c00      	cmp	r4, #0
 8022b32:	db4c      	blt.n	8022bce <_ZNK8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtssiihh+0xf0>
 8022b34:	42a3      	cmp	r3, r4
 8022b36:	dd4a      	ble.n	8022bce <_ZNK8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtssiihh+0xf0>
 8022b38:	f838 2013 	ldrh.w	r2, [r8, r3, lsl #1]
 8022b3c:	3401      	adds	r4, #1
 8022b3e:	d405      	bmi.n	8022b4c <_ZNK8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtssiihh+0x6e>
 8022b40:	42a3      	cmp	r3, r4
 8022b42:	dd03      	ble.n	8022b4c <_ZNK8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtssiihh+0x6e>
 8022b44:	b115      	cbz	r5, 8022b4c <_ZNK8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtssiihh+0x6e>
 8022b46:	3301      	adds	r3, #1
 8022b48:	f838 0013 	ldrh.w	r0, [r8, r3, lsl #1]
 8022b4c:	ea4f 430c 	mov.w	r3, ip, lsl #16
 8022b50:	fb15 f406 	smulbb	r4, r5, r6
 8022b54:	f003 63fc 	and.w	r3, r3, #132120576	@ 0x7e00000
 8022b58:	ea4f 4e07 	mov.w	lr, r7, lsl #16
 8022b5c:	f42c 6cfc 	bic.w	ip, ip, #2016	@ 0x7e0
 8022b60:	f3c4 04c7 	ubfx	r4, r4, #3, #8
 8022b64:	ea43 0c0c 	orr.w	ip, r3, ip
 8022b68:	f00e 6efc 	and.w	lr, lr, #132120576	@ 0x7e00000
 8022b6c:	f1c6 0310 	rsb	r3, r6, #16
 8022b70:	f427 67fc 	bic.w	r7, r7, #2016	@ 0x7e0
 8022b74:	1b5b      	subs	r3, r3, r5
 8022b76:	ea4e 0707 	orr.w	r7, lr, r7
 8022b7a:	ebc4 0545 	rsb	r5, r4, r5, lsl #1
 8022b7e:	eb04 0343 	add.w	r3, r4, r3, lsl #1
 8022b82:	437d      	muls	r5, r7
 8022b84:	fb03 5c0c 	mla	ip, r3, ip, r5
 8022b88:	0403      	lsls	r3, r0, #16
 8022b8a:	f003 63fc 	and.w	r3, r3, #132120576	@ 0x7e00000
 8022b8e:	f420 60fc 	bic.w	r0, r0, #2016	@ 0x7e0
 8022b92:	4318      	orrs	r0, r3
 8022b94:	0413      	lsls	r3, r2, #16
 8022b96:	f003 63fc 	and.w	r3, r3, #132120576	@ 0x7e00000
 8022b9a:	f422 62fc 	bic.w	r2, r2, #2016	@ 0x7e0
 8022b9e:	4313      	orrs	r3, r2
 8022ba0:	fb04 c000 	mla	r0, r4, r0, ip
 8022ba4:	ebc4 0646 	rsb	r6, r4, r6, lsl #1
 8022ba8:	fb06 0003 	mla	r0, r6, r3, r0
 8022bac:	0d43      	lsrs	r3, r0, #21
 8022bae:	0940      	lsrs	r0, r0, #5
 8022bb0:	f403 63fc 	and.w	r3, r3, #2016	@ 0x7e0
 8022bb4:	f420 60fc 	bic.w	r0, r0, #2016	@ 0x7e0
 8022bb8:	4318      	orrs	r0, r3
 8022bba:	8008      	strh	r0, [r1, #0]
 8022bbc:	e8bd 83f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, pc}
 8022bc0:	4684      	mov	ip, r0
 8022bc2:	e7a6      	b.n	8022b12 <_ZNK8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtssiihh+0x34>
 8022bc4:	4607      	mov	r7, r0
 8022bc6:	4684      	mov	ip, r0
 8022bc8:	e7ab      	b.n	8022b22 <_ZNK8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtssiihh+0x44>
 8022bca:	4607      	mov	r7, r0
 8022bcc:	e7a9      	b.n	8022b22 <_ZNK8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtssiihh+0x44>
 8022bce:	4602      	mov	r2, r0
 8022bd0:	e7b4      	b.n	8022b3c <_ZNK8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtssiihh+0x5e>
 8022bd2:	4602      	mov	r2, r0
 8022bd4:	e7ba      	b.n	8022b4c <_ZNK8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtssiihh+0x6e>

08022bd6 <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff>:
 8022bd6:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8022bda:	b08f      	sub	sp, #60	@ 0x3c
 8022bdc:	461d      	mov	r5, r3
 8022bde:	9b1d      	ldr	r3, [sp, #116]	@ 0x74
 8022be0:	920c      	str	r2, [sp, #48]	@ 0x30
 8022be2:	e9dd 271e 	ldrd	r2, r7, [sp, #120]	@ 0x78
 8022be6:	9107      	str	r1, [sp, #28]
 8022be8:	6859      	ldr	r1, [r3, #4]
 8022bea:	681b      	ldr	r3, [r3, #0]
 8022bec:	900d      	str	r0, [sp, #52]	@ 0x34
 8022bee:	fb01 2707 	mla	r7, r1, r7, r2
 8022bf2:	eb03 0747 	add.w	r7, r3, r7, lsl #1
 8022bf6:	9b20      	ldr	r3, [sp, #128]	@ 0x80
 8022bf8:	e9dd 4619 	ldrd	r4, r6, [sp, #100]	@ 0x64
 8022bfc:	f8d3 8000 	ldr.w	r8, [r3]
 8022c00:	9b07      	ldr	r3, [sp, #28]
 8022c02:	2b00      	cmp	r3, #0
 8022c04:	dc03      	bgt.n	8022c0e <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x38>
 8022c06:	9b0c      	ldr	r3, [sp, #48]	@ 0x30
 8022c08:	2b00      	cmp	r3, #0
 8022c0a:	f340 8181 	ble.w	8022f10 <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x33a>
 8022c0e:	9b20      	ldr	r3, [sp, #128]	@ 0x80
 8022c10:	f9b3 1008 	ldrsh.w	r1, [r3, #8]
 8022c14:	f9b3 200c 	ldrsh.w	r2, [r3, #12]
 8022c18:	1e48      	subs	r0, r1, #1
 8022c1a:	f102 3cff 	add.w	ip, r2, #4294967295
 8022c1e:	2d00      	cmp	r5, #0
 8022c20:	f340 809b 	ble.w	8022d5a <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x184>
 8022c24:	ea5f 4e24 	movs.w	lr, r4, asr #16
 8022c28:	ea4f 4326 	mov.w	r3, r6, asr #16
 8022c2c:	d406      	bmi.n	8022c3c <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x66>
 8022c2e:	4586      	cmp	lr, r0
 8022c30:	da04      	bge.n	8022c3c <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x66>
 8022c32:	2b00      	cmp	r3, #0
 8022c34:	db02      	blt.n	8022c3c <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x66>
 8022c36:	4563      	cmp	r3, ip
 8022c38:	f2c0 8090 	blt.w	8022d5c <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x186>
 8022c3c:	f11e 0e01 	adds.w	lr, lr, #1
 8022c40:	f100 8084 	bmi.w	8022d4c <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x176>
 8022c44:	4571      	cmp	r1, lr
 8022c46:	f2c0 8081 	blt.w	8022d4c <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x176>
 8022c4a:	3301      	adds	r3, #1
 8022c4c:	d47e      	bmi.n	8022d4c <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x176>
 8022c4e:	429a      	cmp	r2, r3
 8022c50:	db7c      	blt.n	8022d4c <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x176>
 8022c52:	46aa      	mov	sl, r5
 8022c54:	46b9      	mov	r9, r7
 8022c56:	f1ba 0f00 	cmp.w	sl, #0
 8022c5a:	f340 8099 	ble.w	8022d90 <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1ba>
 8022c5e:	9b20      	ldr	r3, [sp, #128]	@ 0x80
 8022c60:	1421      	asrs	r1, r4, #16
 8022c62:	ea4f 4026 	mov.w	r0, r6, asr #16
 8022c66:	f3c4 3203 	ubfx	r2, r4, #12, #4
 8022c6a:	f3c6 3c03 	ubfx	ip, r6, #12, #4
 8022c6e:	e9d3 e302 	ldrd	lr, r3, [r3, #8]
 8022c72:	f100 80d0 	bmi.w	8022e16 <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x240>
 8022c76:	f10e 3bff 	add.w	fp, lr, #4294967295
 8022c7a:	4559      	cmp	r1, fp
 8022c7c:	f280 80cb 	bge.w	8022e16 <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x240>
 8022c80:	2800      	cmp	r0, #0
 8022c82:	f2c0 80c8 	blt.w	8022e16 <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x240>
 8022c86:	f103 3bff 	add.w	fp, r3, #4294967295
 8022c8a:	4558      	cmp	r0, fp
 8022c8c:	f280 80c3 	bge.w	8022e16 <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x240>
 8022c90:	fa0f fe8e 	sxth.w	lr, lr
 8022c94:	fb00 110e 	mla	r1, r0, lr, r1
 8022c98:	eb08 0041 	add.w	r0, r8, r1, lsl #1
 8022c9c:	f838 b011 	ldrh.w	fp, [r8, r1, lsl #1]
 8022ca0:	8841      	ldrh	r1, [r0, #2]
 8022ca2:	f1bc 0f00 	cmp.w	ip, #0
 8022ca6:	d00b      	beq.n	8022cc0 <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xea>
 8022ca8:	f10e 4300 	add.w	r3, lr, #2147483648	@ 0x80000000
 8022cac:	3b01      	subs	r3, #1
 8022cae:	005b      	lsls	r3, r3, #1
 8022cb0:	3302      	adds	r3, #2
 8022cb2:	eb00 0e03 	add.w	lr, r0, r3
 8022cb6:	5ac3      	ldrh	r3, [r0, r3]
 8022cb8:	9308      	str	r3, [sp, #32]
 8022cba:	f8be 3002 	ldrh.w	r3, [lr, #2]
 8022cbe:	9309      	str	r3, [sp, #36]	@ 0x24
 8022cc0:	ea4f 400b 	mov.w	r0, fp, lsl #16
 8022cc4:	f000 60fc 	and.w	r0, r0, #132120576	@ 0x7e00000
 8022cc8:	f42b 6bfc 	bic.w	fp, fp, #2016	@ 0x7e0
 8022ccc:	ea40 000b 	orr.w	r0, r0, fp
 8022cd0:	fb12 f30c 	smulbb	r3, r2, ip
 8022cd4:	ea4f 4b01 	mov.w	fp, r1, lsl #16
 8022cd8:	10db      	asrs	r3, r3, #3
 8022cda:	f1cc 0e10 	rsb	lr, ip, #16
 8022cde:	f00b 6bfc 	and.w	fp, fp, #132120576	@ 0x7e00000
 8022ce2:	f421 61fc 	bic.w	r1, r1, #2016	@ 0x7e0
 8022ce6:	ebae 0e02 	sub.w	lr, lr, r2
 8022cea:	ea4b 0101 	orr.w	r1, fp, r1
 8022cee:	ebc3 0242 	rsb	r2, r3, r2, lsl #1
 8022cf2:	4351      	muls	r1, r2
 8022cf4:	9a09      	ldr	r2, [sp, #36]	@ 0x24
 8022cf6:	eb03 0e4e 	add.w	lr, r3, lr, lsl #1
 8022cfa:	fb0e 1e00 	mla	lr, lr, r0, r1
 8022cfe:	0410      	lsls	r0, r2, #16
 8022d00:	f000 60fc 	and.w	r0, r0, #132120576	@ 0x7e00000
 8022d04:	f422 62fc 	bic.w	r2, r2, #2016	@ 0x7e0
 8022d08:	4310      	orrs	r0, r2
 8022d0a:	9a08      	ldr	r2, [sp, #32]
 8022d0c:	9908      	ldr	r1, [sp, #32]
 8022d0e:	0412      	lsls	r2, r2, #16
 8022d10:	fb03 e000 	mla	r0, r3, r0, lr
 8022d14:	f002 62fc 	and.w	r2, r2, #132120576	@ 0x7e00000
 8022d18:	f421 6efc 	bic.w	lr, r1, #2016	@ 0x7e0
 8022d1c:	ea42 020e 	orr.w	r2, r2, lr
 8022d20:	ebc3 034c 	rsb	r3, r3, ip, lsl #1
 8022d24:	fb03 0302 	mla	r3, r3, r2, r0
 8022d28:	0d5a      	lsrs	r2, r3, #21
 8022d2a:	095b      	lsrs	r3, r3, #5
 8022d2c:	f402 62fc 	and.w	r2, r2, #2016	@ 0x7e0
 8022d30:	f423 63fc 	bic.w	r3, r3, #2016	@ 0x7e0
 8022d34:	4313      	orrs	r3, r2
 8022d36:	f8a9 3000 	strh.w	r3, [r9]
 8022d3a:	9b1b      	ldr	r3, [sp, #108]	@ 0x6c
 8022d3c:	441c      	add	r4, r3
 8022d3e:	9b1c      	ldr	r3, [sp, #112]	@ 0x70
 8022d40:	f109 0902 	add.w	r9, r9, #2
 8022d44:	441e      	add	r6, r3
 8022d46:	f10a 3aff 	add.w	sl, sl, #4294967295
 8022d4a:	e784      	b.n	8022c56 <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x80>
 8022d4c:	9b1b      	ldr	r3, [sp, #108]	@ 0x6c
 8022d4e:	441c      	add	r4, r3
 8022d50:	9b1c      	ldr	r3, [sp, #112]	@ 0x70
 8022d52:	3d01      	subs	r5, #1
 8022d54:	441e      	add	r6, r3
 8022d56:	3702      	adds	r7, #2
 8022d58:	e761      	b.n	8022c1e <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x48>
 8022d5a:	d01d      	beq.n	8022d98 <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1c2>
 8022d5c:	981b      	ldr	r0, [sp, #108]	@ 0x6c
 8022d5e:	1e6b      	subs	r3, r5, #1
 8022d60:	fb00 4003 	mla	r0, r0, r3, r4
 8022d64:	1400      	asrs	r0, r0, #16
 8022d66:	f53f af74 	bmi.w	8022c52 <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x7c>
 8022d6a:	3901      	subs	r1, #1
 8022d6c:	4288      	cmp	r0, r1
 8022d6e:	f6bf af70 	bge.w	8022c52 <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x7c>
 8022d72:	991c      	ldr	r1, [sp, #112]	@ 0x70
 8022d74:	fb01 6303 	mla	r3, r1, r3, r6
 8022d78:	141b      	asrs	r3, r3, #16
 8022d7a:	f53f af6a 	bmi.w	8022c52 <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x7c>
 8022d7e:	3a01      	subs	r2, #1
 8022d80:	4293      	cmp	r3, r2
 8022d82:	f6bf af66 	bge.w	8022c52 <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x7c>
 8022d86:	46a9      	mov	r9, r5
 8022d88:	46ba      	mov	sl, r7
 8022d8a:	f1b9 0f00 	cmp.w	r9, #0
 8022d8e:	dc5a      	bgt.n	8022e46 <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x270>
 8022d90:	ea25 75e5 	bic.w	r5, r5, r5, asr #31
 8022d94:	eb07 0745 	add.w	r7, r7, r5, lsl #1
 8022d98:	9b07      	ldr	r3, [sp, #28]
 8022d9a:	2b00      	cmp	r3, #0
 8022d9c:	f340 80b8 	ble.w	8022f10 <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x33a>
 8022da0:	ee30 0a04 	vadd.f32	s0, s0, s8
 8022da4:	eeb7 7a00 	vmov.f32	s14, #112	@ 0x3f800000  1.0
 8022da8:	eec7 7a00 	vdiv.f32	s15, s14, s0
 8022dac:	9b18      	ldr	r3, [sp, #96]	@ 0x60
 8022dae:	ee70 0aa4 	vadd.f32	s1, s1, s9
 8022db2:	ee31 1a05 	vadd.f32	s2, s2, s10
 8022db6:	ee20 7aa7 	vmul.f32	s14, s1, s15
 8022dba:	eef0 6a62 	vmov.f32	s13, s5
 8022dbe:	ee61 7a27 	vmul.f32	s15, s2, s15
 8022dc2:	eefe 6ac8 	vcvt.s32.f32	s13, s13, #16
 8022dc6:	ee77 2a62 	vsub.f32	s5, s14, s5
 8022dca:	ee16 4a90 	vmov	r4, s13
 8022dce:	eefe 2ac8 	vcvt.s32.f32	s5, s5, #16
 8022dd2:	eef0 6a43 	vmov.f32	s13, s6
 8022dd6:	ee37 3ac3 	vsub.f32	s6, s15, s6
 8022dda:	ee12 2a90 	vmov	r2, s5
 8022dde:	eebe 3ac8 	vcvt.s32.f32	s6, s6, #16
 8022de2:	fb92 f3f3 	sdiv	r3, r2, r3
 8022de6:	ee13 2a10 	vmov	r2, s6
 8022dea:	931b      	str	r3, [sp, #108]	@ 0x6c
 8022dec:	9b18      	ldr	r3, [sp, #96]	@ 0x60
 8022dee:	fb92 f3f3 	sdiv	r3, r2, r3
 8022df2:	931c      	str	r3, [sp, #112]	@ 0x70
 8022df4:	9b07      	ldr	r3, [sp, #28]
 8022df6:	9a0c      	ldr	r2, [sp, #48]	@ 0x30
 8022df8:	3b01      	subs	r3, #1
 8022dfa:	eefe 6ac8 	vcvt.s32.f32	s13, s13, #16
 8022dfe:	9307      	str	r3, [sp, #28]
 8022e00:	9b18      	ldr	r3, [sp, #96]	@ 0x60
 8022e02:	ee16 6a90 	vmov	r6, s13
 8022e06:	bf14      	ite	ne
 8022e08:	461d      	movne	r5, r3
 8022e0a:	4615      	moveq	r5, r2
 8022e0c:	eeb0 3a67 	vmov.f32	s6, s15
 8022e10:	eef0 2a47 	vmov.f32	s5, s14
 8022e14:	e6f4      	b.n	8022c00 <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2a>
 8022e16:	f111 0b01 	adds.w	fp, r1, #1
 8022e1a:	d48e      	bmi.n	8022d3a <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x164>
 8022e1c:	45de      	cmp	lr, fp
 8022e1e:	db8c      	blt.n	8022d3a <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x164>
 8022e20:	f110 0b01 	adds.w	fp, r0, #1
 8022e24:	d489      	bmi.n	8022d3a <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x164>
 8022e26:	455b      	cmp	r3, fp
 8022e28:	db87      	blt.n	8022d3a <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x164>
 8022e2a:	b21b      	sxth	r3, r3
 8022e2c:	e9cd 1001 	strd	r1, r0, [sp, #4]
 8022e30:	e9cd 2c03 	strd	r2, ip, [sp, #12]
 8022e34:	9300      	str	r3, [sp, #0]
 8022e36:	4642      	mov	r2, r8
 8022e38:	fa0f f38e 	sxth.w	r3, lr
 8022e3c:	4649      	mov	r1, r9
 8022e3e:	980d      	ldr	r0, [sp, #52]	@ 0x34
 8022e40:	f7ff fe4d 	bl	8022ade <_ZNK8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtssiihh>
 8022e44:	e779      	b.n	8022d3a <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x164>
 8022e46:	9b20      	ldr	r3, [sp, #128]	@ 0x80
 8022e48:	f9b3 3008 	ldrsh.w	r3, [r3, #8]
 8022e4c:	1420      	asrs	r0, r4, #16
 8022e4e:	1431      	asrs	r1, r6, #16
 8022e50:	fb03 0101 	mla	r1, r3, r1, r0
 8022e54:	eb08 0041 	add.w	r0, r8, r1, lsl #1
 8022e58:	f3c6 3e03 	ubfx	lr, r6, #12, #4
 8022e5c:	f838 c011 	ldrh.w	ip, [r8, r1, lsl #1]
 8022e60:	8841      	ldrh	r1, [r0, #2]
 8022e62:	f3c4 3203 	ubfx	r2, r4, #12, #4
 8022e66:	f1be 0f00 	cmp.w	lr, #0
 8022e6a:	d00b      	beq.n	8022e84 <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2ae>
 8022e6c:	f103 4300 	add.w	r3, r3, #2147483648	@ 0x80000000
 8022e70:	3b01      	subs	r3, #1
 8022e72:	005b      	lsls	r3, r3, #1
 8022e74:	3302      	adds	r3, #2
 8022e76:	eb00 0b03 	add.w	fp, r0, r3
 8022e7a:	5ac3      	ldrh	r3, [r0, r3]
 8022e7c:	930a      	str	r3, [sp, #40]	@ 0x28
 8022e7e:	f8bb 3002 	ldrh.w	r3, [fp, #2]
 8022e82:	930b      	str	r3, [sp, #44]	@ 0x2c
 8022e84:	ea4f 400c 	mov.w	r0, ip, lsl #16
 8022e88:	fb12 f30e 	smulbb	r3, r2, lr
 8022e8c:	f42c 6cfc 	bic.w	ip, ip, #2016	@ 0x7e0
 8022e90:	ea4f 4b01 	mov.w	fp, r1, lsl #16
 8022e94:	f000 60fc 	and.w	r0, r0, #132120576	@ 0x7e00000
 8022e98:	10db      	asrs	r3, r3, #3
 8022e9a:	ea40 000c 	orr.w	r0, r0, ip
 8022e9e:	f00b 6bfc 	and.w	fp, fp, #132120576	@ 0x7e00000
 8022ea2:	f1ce 0c10 	rsb	ip, lr, #16
 8022ea6:	f421 61fc 	bic.w	r1, r1, #2016	@ 0x7e0
 8022eaa:	ebac 0c02 	sub.w	ip, ip, r2
 8022eae:	ea4b 0101 	orr.w	r1, fp, r1
 8022eb2:	ebc3 0242 	rsb	r2, r3, r2, lsl #1
 8022eb6:	4351      	muls	r1, r2
 8022eb8:	9a0b      	ldr	r2, [sp, #44]	@ 0x2c
 8022eba:	eb03 0c4c 	add.w	ip, r3, ip, lsl #1
 8022ebe:	fb0c 1c00 	mla	ip, ip, r0, r1
 8022ec2:	ea4f 4b02 	mov.w	fp, r2, lsl #16
 8022ec6:	f422 60fc 	bic.w	r0, r2, #2016	@ 0x7e0
 8022eca:	9a0a      	ldr	r2, [sp, #40]	@ 0x28
 8022ecc:	990a      	ldr	r1, [sp, #40]	@ 0x28
 8022ece:	f00b 6bfc 	and.w	fp, fp, #132120576	@ 0x7e00000
 8022ed2:	0412      	lsls	r2, r2, #16
 8022ed4:	ea4b 0000 	orr.w	r0, fp, r0
 8022ed8:	f002 62fc 	and.w	r2, r2, #132120576	@ 0x7e00000
 8022edc:	f421 6bfc 	bic.w	fp, r1, #2016	@ 0x7e0
 8022ee0:	fb03 c000 	mla	r0, r3, r0, ip
 8022ee4:	ea42 0b0b 	orr.w	fp, r2, fp
 8022ee8:	ebc3 034e 	rsb	r3, r3, lr, lsl #1
 8022eec:	fb03 000b 	mla	r0, r3, fp, r0
 8022ef0:	0d43      	lsrs	r3, r0, #21
 8022ef2:	0940      	lsrs	r0, r0, #5
 8022ef4:	f403 63fc 	and.w	r3, r3, #2016	@ 0x7e0
 8022ef8:	f420 60fc 	bic.w	r0, r0, #2016	@ 0x7e0
 8022efc:	4318      	orrs	r0, r3
 8022efe:	9b1b      	ldr	r3, [sp, #108]	@ 0x6c
 8022f00:	f82a 0b02 	strh.w	r0, [sl], #2
 8022f04:	441c      	add	r4, r3
 8022f06:	9b1c      	ldr	r3, [sp, #112]	@ 0x70
 8022f08:	f109 39ff 	add.w	r9, r9, #4294967295
 8022f0c:	441e      	add	r6, r3
 8022f0e:	e73c      	b.n	8022d8a <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1b4>
 8022f10:	b00f      	add	sp, #60	@ 0x3c
 8022f12:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}

08022f16 <_ZNK8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKmssiihhh>:
 8022f16:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8022f1a:	b085      	sub	sp, #20
 8022f1c:	e9dd 740f 	ldrd	r7, r4, [sp, #60]	@ 0x3c
 8022f20:	9102      	str	r1, [sp, #8]
 8022f22:	2c00      	cmp	r4, #0
 8022f24:	fb04 7103 	mla	r1, r4, r3, r7
 8022f28:	f9bd e038 	ldrsh.w	lr, [sp, #56]	@ 0x38
 8022f2c:	f89d 6044 	ldrb.w	r6, [sp, #68]	@ 0x44
 8022f30:	f89d 0048 	ldrb.w	r0, [sp, #72]	@ 0x48
 8022f34:	eb02 0c81 	add.w	ip, r2, r1, lsl #2
 8022f38:	f2c0 811b 	blt.w	8023172 <_ZNK8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKmssiihhh+0x25c>
 8022f3c:	45a6      	cmp	lr, r4
 8022f3e:	f340 8118 	ble.w	8023172 <_ZNK8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKmssiihhh+0x25c>
 8022f42:	2f00      	cmp	r7, #0
 8022f44:	f2c0 8113 	blt.w	802316e <_ZNK8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKmssiihhh+0x258>
 8022f48:	42bb      	cmp	r3, r7
 8022f4a:	f340 8110 	ble.w	802316e <_ZNK8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKmssiihhh+0x258>
 8022f4e:	f852 5021 	ldr.w	r5, [r2, r1, lsl #2]
 8022f52:	1c7a      	adds	r2, r7, #1
 8022f54:	f100 8110 	bmi.w	8023178 <_ZNK8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKmssiihhh+0x262>
 8022f58:	4293      	cmp	r3, r2
 8022f5a:	f340 810d 	ble.w	8023178 <_ZNK8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKmssiihhh+0x262>
 8022f5e:	2e00      	cmp	r6, #0
 8022f60:	f000 810c 	beq.w	802317c <_ZNK8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKmssiihhh+0x266>
 8022f64:	f8dc 1004 	ldr.w	r1, [ip, #4]
 8022f68:	3401      	adds	r4, #1
 8022f6a:	f100 810b 	bmi.w	8023184 <_ZNK8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKmssiihhh+0x26e>
 8022f6e:	45a6      	cmp	lr, r4
 8022f70:	f340 8108 	ble.w	8023184 <_ZNK8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKmssiihhh+0x26e>
 8022f74:	2800      	cmp	r0, #0
 8022f76:	f000 8108 	beq.w	802318a <_ZNK8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKmssiihhh+0x274>
 8022f7a:	2f00      	cmp	r7, #0
 8022f7c:	f2c0 8100 	blt.w	8023180 <_ZNK8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKmssiihhh+0x26a>
 8022f80:	42bb      	cmp	r3, r7
 8022f82:	f340 80fd 	ble.w	8023180 <_ZNK8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKmssiihhh+0x26a>
 8022f86:	f85c 4023 	ldr.w	r4, [ip, r3, lsl #2]
 8022f8a:	3701      	adds	r7, #1
 8022f8c:	f100 8100 	bmi.w	8023190 <_ZNK8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKmssiihhh+0x27a>
 8022f90:	42bb      	cmp	r3, r7
 8022f92:	f340 80fd 	ble.w	8023190 <_ZNK8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKmssiihhh+0x27a>
 8022f96:	2e00      	cmp	r6, #0
 8022f98:	f000 80fc 	beq.w	8023194 <_ZNK8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKmssiihhh+0x27e>
 8022f9c:	3301      	adds	r3, #1
 8022f9e:	f85c 2023 	ldr.w	r2, [ip, r3, lsl #2]
 8022fa2:	b2b6      	uxth	r6, r6
 8022fa4:	b280      	uxth	r0, r0
 8022fa6:	fb00 fe06 	mul.w	lr, r0, r6
 8022faa:	ebce 1000 	rsb	r0, lr, r0, lsl #4
 8022fae:	0136      	lsls	r6, r6, #4
 8022fb0:	eba6 070e 	sub.w	r7, r6, lr
 8022fb4:	b280      	uxth	r0, r0
 8022fb6:	f5c6 7380 	rsb	r3, r6, #256	@ 0x100
 8022fba:	ea4f 6a11 	mov.w	sl, r1, lsr #24
 8022fbe:	b2bf      	uxth	r7, r7
 8022fc0:	1a1b      	subs	r3, r3, r0
 8022fc2:	ea4f 6b15 	mov.w	fp, r5, lsr #24
 8022fc6:	b29b      	uxth	r3, r3
 8022fc8:	fb0a f607 	mul.w	r6, sl, r7
 8022fcc:	ea4f 6914 	mov.w	r9, r4, lsr #24
 8022fd0:	fb0b 6603 	mla	r6, fp, r3, r6
 8022fd4:	ea4f 6812 	mov.w	r8, r2, lsr #24
 8022fd8:	fb00 6609 	mla	r6, r0, r9, r6
 8022fdc:	fb0e 6608 	mla	r6, lr, r8, r6
 8022fe0:	f3c6 2607 	ubfx	r6, r6, #8, #8
 8022fe4:	9600      	str	r6, [sp, #0]
 8022fe6:	2e00      	cmp	r6, #0
 8022fe8:	f000 80be 	beq.w	8023168 <_ZNK8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKmssiihhh+0x252>
 8022fec:	f005 1cff 	and.w	ip, r5, #16711935	@ 0xff00ff
 8022ff0:	fb0b fc0c 	mul.w	ip, fp, ip
 8022ff4:	f405 457f 	and.w	r5, r5, #65280	@ 0xff00
 8022ff8:	fb0b f505 	mul.w	r5, fp, r5
 8022ffc:	ea4f 2b1c 	mov.w	fp, ip, lsr #8
 8023000:	f00b 1bff 	and.w	fp, fp, #16711935	@ 0xff00ff
 8023004:	f10c 1c01 	add.w	ip, ip, #65537	@ 0x10001
 8023008:	44dc      	add	ip, fp
 802300a:	ea4f 2c1c 	mov.w	ip, ip, lsr #8
 802300e:	9501      	str	r5, [sp, #4]
 8023010:	f00c 15ff 	and.w	r5, ip, #16711935	@ 0xff00ff
 8023014:	9503      	str	r5, [sp, #12]
 8023016:	9d01      	ldr	r5, [sp, #4]
 8023018:	9e02      	ldr	r6, [sp, #8]
 802301a:	f505 7c80 	add.w	ip, r5, #256	@ 0x100
 802301e:	eb0c 2515 	add.w	r5, ip, r5, lsr #8
 8023022:	f001 1cff 	and.w	ip, r1, #16711935	@ 0xff00ff
 8023026:	fb0a fc0c 	mul.w	ip, sl, ip
 802302a:	ea4f 2b15 	mov.w	fp, r5, lsr #8
 802302e:	ea4f 251c 	mov.w	r5, ip, lsr #8
 8023032:	f005 15ff 	and.w	r5, r5, #16711935	@ 0xff00ff
 8023036:	f10c 1c01 	add.w	ip, ip, #65537	@ 0x10001
 802303a:	4465      	add	r5, ip
 802303c:	f004 1cff 	and.w	ip, r4, #16711935	@ 0xff00ff
 8023040:	f404 447f 	and.w	r4, r4, #65280	@ 0xff00
 8023044:	fb09 fc0c 	mul.w	ip, r9, ip
 8023048:	fb09 f904 	mul.w	r9, r9, r4
 802304c:	f509 7480 	add.w	r4, r9, #256	@ 0x100
 8023050:	eb04 2919 	add.w	r9, r4, r9, lsr #8
 8023054:	f002 14ff 	and.w	r4, r2, #16711935	@ 0xff00ff
 8023058:	fb08 f404 	mul.w	r4, r8, r4
 802305c:	f401 417f 	and.w	r1, r1, #65280	@ 0xff00
 8023060:	f402 427f 	and.w	r2, r2, #65280	@ 0xff00
 8023064:	fb08 f802 	mul.w	r8, r8, r2
 8023068:	fb0a fa01 	mul.w	sl, sl, r1
 802306c:	0a22      	lsrs	r2, r4, #8
 802306e:	f50a 7180 	add.w	r1, sl, #256	@ 0x100
 8023072:	f002 12ff 	and.w	r2, r2, #16711935	@ 0xff00ff
 8023076:	f104 1401 	add.w	r4, r4, #65537	@ 0x10001
 802307a:	eb01 2a1a 	add.w	sl, r1, sl, lsr #8
 802307e:	4414      	add	r4, r2
 8023080:	ea4f 211c 	mov.w	r1, ip, lsr #8
 8023084:	f508 7280 	add.w	r2, r8, #256	@ 0x100
 8023088:	0a2d      	lsrs	r5, r5, #8
 802308a:	eb02 2818 	add.w	r8, r2, r8, lsr #8
 802308e:	f005 15ff 	and.w	r5, r5, #16711935	@ 0xff00ff
 8023092:	9a03      	ldr	r2, [sp, #12]
 8023094:	8836      	ldrh	r6, [r6, #0]
 8023096:	f001 11ff 	and.w	r1, r1, #16711935	@ 0xff00ff
 802309a:	f10c 1c01 	add.w	ip, ip, #65537	@ 0x10001
 802309e:	437d      	muls	r5, r7
 80230a0:	4461      	add	r1, ip
 80230a2:	0a24      	lsrs	r4, r4, #8
 80230a4:	fb02 5503 	mla	r5, r2, r3, r5
 80230a8:	0a09      	lsrs	r1, r1, #8
 80230aa:	f004 14ff 	and.w	r4, r4, #16711935	@ 0xff00ff
 80230ae:	fb04 540e 	mla	r4, r4, lr, r5
 80230b2:	f001 11ff 	and.w	r1, r1, #16711935	@ 0xff00ff
 80230b6:	fb01 4100 	mla	r1, r1, r0, r4
 80230ba:	ea4f 2a1a 	mov.w	sl, sl, lsr #8
 80230be:	0a09      	lsrs	r1, r1, #8
 80230c0:	f40a 4a7f 	and.w	sl, sl, #65280	@ 0xff00
 80230c4:	f001 14ff 	and.w	r4, r1, #16711935	@ 0xff00ff
 80230c8:	fb07 f70a 	mul.w	r7, r7, sl
 80230cc:	ea4f 2818 	mov.w	r8, r8, lsr #8
 80230d0:	f40b 417f 	and.w	r1, fp, #65280	@ 0xff00
 80230d4:	fb03 7101 	mla	r1, r3, r1, r7
 80230d8:	ea4f 2919 	mov.w	r9, r9, lsr #8
 80230dc:	f408 487f 	and.w	r8, r8, #65280	@ 0xff00
 80230e0:	fb0e 1e08 	mla	lr, lr, r8, r1
 80230e4:	f409 417f 	and.w	r1, r9, #65280	@ 0xff00
 80230e8:	fb00 e101 	mla	r1, r0, r1, lr
 80230ec:	f89d 004c 	ldrb.w	r0, [sp, #76]	@ 0x4c
 80230f0:	9a00      	ldr	r2, [sp, #0]
 80230f2:	b287      	uxth	r7, r0
 80230f4:	437a      	muls	r2, r7
 80230f6:	0a09      	lsrs	r1, r1, #8
 80230f8:	1c53      	adds	r3, r2, #1
 80230fa:	f401 417f 	and.w	r1, r1, #65280	@ 0xff00
 80230fe:	4321      	orrs	r1, r4
 8023100:	eb03 2312 	add.w	r3, r3, r2, lsr #8
 8023104:	1235      	asrs	r5, r6, #8
 8023106:	0c0a      	lsrs	r2, r1, #16
 8023108:	ea6f 2313 	mvn.w	r3, r3, lsr #8
 802310c:	b2db      	uxtb	r3, r3
 802310e:	fb12 f207 	smulbb	r2, r2, r7
 8023112:	f005 05f8 	and.w	r5, r5, #248	@ 0xf8
 8023116:	fb05 2503 	mla	r5, r5, r3, r2
 802311a:	f3c1 2407 	ubfx	r4, r1, #8, #8
 802311e:	10f2      	asrs	r2, r6, #3
 8023120:	b2c8      	uxtb	r0, r1
 8023122:	00f6      	lsls	r6, r6, #3
 8023124:	fb14 f407 	smulbb	r4, r4, r7
 8023128:	f002 02fc 	and.w	r2, r2, #252	@ 0xfc
 802312c:	b2f6      	uxtb	r6, r6
 802312e:	fb10 f007 	smulbb	r0, r0, r7
 8023132:	fb02 4203 	mla	r2, r2, r3, r4
 8023136:	b2ad      	uxth	r5, r5
 8023138:	fb06 0303 	mla	r3, r6, r3, r0
 802313c:	b299      	uxth	r1, r3
 802313e:	b294      	uxth	r4, r2
 8023140:	1c6b      	adds	r3, r5, #1
 8023142:	eb03 2515 	add.w	r5, r3, r5, lsr #8
 8023146:	1c62      	adds	r2, r4, #1
 8023148:	1c4b      	adds	r3, r1, #1
 802314a:	eb03 2311 	add.w	r3, r3, r1, lsr #8
 802314e:	eb02 2214 	add.w	r2, r2, r4, lsr #8
 8023152:	f405 4578 	and.w	r5, r5, #63488	@ 0xf800
 8023156:	f3c3 23c4 	ubfx	r3, r3, #11, #5
 802315a:	0952      	lsrs	r2, r2, #5
 802315c:	f402 62fc 	and.w	r2, r2, #2016	@ 0x7e0
 8023160:	432b      	orrs	r3, r5
 8023162:	4313      	orrs	r3, r2
 8023164:	9a02      	ldr	r2, [sp, #8]
 8023166:	8013      	strh	r3, [r2, #0]
 8023168:	b005      	add	sp, #20
 802316a:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 802316e:	2500      	movs	r5, #0
 8023170:	e6ef      	b.n	8022f52 <_ZNK8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKmssiihhh+0x3c>
 8023172:	2100      	movs	r1, #0
 8023174:	460d      	mov	r5, r1
 8023176:	e6f7      	b.n	8022f68 <_ZNK8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKmssiihhh+0x52>
 8023178:	2100      	movs	r1, #0
 802317a:	e6f5      	b.n	8022f68 <_ZNK8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKmssiihhh+0x52>
 802317c:	4631      	mov	r1, r6
 802317e:	e6f3      	b.n	8022f68 <_ZNK8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKmssiihhh+0x52>
 8023180:	2400      	movs	r4, #0
 8023182:	e702      	b.n	8022f8a <_ZNK8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKmssiihhh+0x74>
 8023184:	2200      	movs	r2, #0
 8023186:	4614      	mov	r4, r2
 8023188:	e70b      	b.n	8022fa2 <_ZNK8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKmssiihhh+0x8c>
 802318a:	4602      	mov	r2, r0
 802318c:	4604      	mov	r4, r0
 802318e:	e708      	b.n	8022fa2 <_ZNK8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKmssiihhh+0x8c>
 8023190:	2200      	movs	r2, #0
 8023192:	e706      	b.n	8022fa2 <_ZNK8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKmssiihhh+0x8c>
 8023194:	4632      	mov	r2, r6
 8023196:	e704      	b.n	8022fa2 <_ZNK8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKmssiihhh+0x8c>

08023198 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff>:
 8023198:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 802319c:	b09d      	sub	sp, #116	@ 0x74
 802319e:	e9dd 4627 	ldrd	r4, r6, [sp, #156]	@ 0x9c
 80231a2:	9219      	str	r2, [sp, #100]	@ 0x64
 80231a4:	9307      	str	r3, [sp, #28]
 80231a6:	9a2b      	ldr	r2, [sp, #172]	@ 0xac
 80231a8:	f89d 30bc 	ldrb.w	r3, [sp, #188]	@ 0xbc
 80231ac:	931a      	str	r3, [sp, #104]	@ 0x68
 80231ae:	9117      	str	r1, [sp, #92]	@ 0x5c
 80231b0:	e9dd 132c 	ldrd	r1, r3, [sp, #176]	@ 0xb0
 80231b4:	901b      	str	r0, [sp, #108]	@ 0x6c
 80231b6:	6850      	ldr	r0, [r2, #4]
 80231b8:	6812      	ldr	r2, [r2, #0]
 80231ba:	fb00 1303 	mla	r3, r0, r3, r1
 80231be:	eb02 0343 	add.w	r3, r2, r3, lsl #1
 80231c2:	930a      	str	r3, [sp, #40]	@ 0x28
 80231c4:	9b2e      	ldr	r3, [sp, #184]	@ 0xb8
 80231c6:	681b      	ldr	r3, [r3, #0]
 80231c8:	9310      	str	r3, [sp, #64]	@ 0x40
 80231ca:	f8bd 3068 	ldrh.w	r3, [sp, #104]	@ 0x68
 80231ce:	930b      	str	r3, [sp, #44]	@ 0x2c
 80231d0:	9b17      	ldr	r3, [sp, #92]	@ 0x5c
 80231d2:	2b00      	cmp	r3, #0
 80231d4:	dc03      	bgt.n	80231de <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x46>
 80231d6:	9b19      	ldr	r3, [sp, #100]	@ 0x64
 80231d8:	2b00      	cmp	r3, #0
 80231da:	f340 8375 	ble.w	80238c8 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x730>
 80231de:	9b2e      	ldr	r3, [sp, #184]	@ 0xb8
 80231e0:	f9b3 1008 	ldrsh.w	r1, [r3, #8]
 80231e4:	f9b3 200c 	ldrsh.w	r2, [r3, #12]
 80231e8:	1e48      	subs	r0, r1, #1
 80231ea:	1e57      	subs	r7, r2, #1
 80231ec:	9b07      	ldr	r3, [sp, #28]
 80231ee:	2b00      	cmp	r3, #0
 80231f0:	f340 818e 	ble.w	8023510 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x378>
 80231f4:	ea5f 4c24 	movs.w	ip, r4, asr #16
 80231f8:	ea4f 4326 	mov.w	r3, r6, asr #16
 80231fc:	d406      	bmi.n	802320c <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x74>
 80231fe:	4584      	cmp	ip, r0
 8023200:	da04      	bge.n	802320c <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x74>
 8023202:	2b00      	cmp	r3, #0
 8023204:	db02      	blt.n	802320c <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x74>
 8023206:	42bb      	cmp	r3, r7
 8023208:	f2c0 8183 	blt.w	8023512 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x37a>
 802320c:	f11c 0c01 	adds.w	ip, ip, #1
 8023210:	f100 8173 	bmi.w	80234fa <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x362>
 8023214:	4561      	cmp	r1, ip
 8023216:	f2c0 8170 	blt.w	80234fa <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x362>
 802321a:	3301      	adds	r3, #1
 802321c:	f100 816d 	bmi.w	80234fa <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x362>
 8023220:	429a      	cmp	r2, r3
 8023222:	f2c0 816a 	blt.w	80234fa <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x362>
 8023226:	9b07      	ldr	r3, [sp, #28]
 8023228:	9f0a      	ldr	r7, [sp, #40]	@ 0x28
 802322a:	9318      	str	r3, [sp, #96]	@ 0x60
 802322c:	9b18      	ldr	r3, [sp, #96]	@ 0x60
 802322e:	2b00      	cmp	r3, #0
 8023230:	f340 818c 	ble.w	802354c <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3b4>
 8023234:	9a2e      	ldr	r2, [sp, #184]	@ 0xb8
 8023236:	9b2e      	ldr	r3, [sp, #184]	@ 0xb8
 8023238:	f8d2 e00c 	ldr.w	lr, [r2, #12]
 802323c:	689b      	ldr	r3, [r3, #8]
 802323e:	1422      	asrs	r2, r4, #16
 8023240:	ea4f 4c26 	mov.w	ip, r6, asr #16
 8023244:	f3c4 3003 	ubfx	r0, r4, #12, #4
 8023248:	f3c6 3103 	ubfx	r1, r6, #12, #4
 802324c:	f100 81cd 	bmi.w	80235ea <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x452>
 8023250:	f103 38ff 	add.w	r8, r3, #4294967295
 8023254:	4542      	cmp	r2, r8
 8023256:	f280 81c8 	bge.w	80235ea <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x452>
 802325a:	f1bc 0f00 	cmp.w	ip, #0
 802325e:	f2c0 81c4 	blt.w	80235ea <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x452>
 8023262:	f10e 38ff 	add.w	r8, lr, #4294967295
 8023266:	45c4      	cmp	ip, r8
 8023268:	f280 81bf 	bge.w	80235ea <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x452>
 802326c:	b21b      	sxth	r3, r3
 802326e:	fb0c 2203 	mla	r2, ip, r3, r2
 8023272:	9d10      	ldr	r5, [sp, #64]	@ 0x40
 8023274:	eb05 0882 	add.w	r8, r5, r2, lsl #2
 8023278:	f855 2022 	ldr.w	r2, [r5, r2, lsl #2]
 802327c:	ea4f 6e12 	mov.w	lr, r2, lsr #24
 8023280:	2800      	cmp	r0, #0
 8023282:	f000 81a9 	beq.w	80235d8 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x440>
 8023286:	f8d8 5004 	ldr.w	r5, [r8, #4]
 802328a:	950c      	str	r5, [sp, #48]	@ 0x30
 802328c:	0e2d      	lsrs	r5, r5, #24
 802328e:	9513      	str	r5, [sp, #76]	@ 0x4c
 8023290:	b181      	cbz	r1, 80232b4 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x11c>
 8023292:	f103 4380 	add.w	r3, r3, #1073741824	@ 0x40000000
 8023296:	3b01      	subs	r3, #1
 8023298:	009b      	lsls	r3, r3, #2
 802329a:	3304      	adds	r3, #4
 802329c:	eb08 0c03 	add.w	ip, r8, r3
 80232a0:	f858 3003 	ldr.w	r3, [r8, r3]
 80232a4:	9308      	str	r3, [sp, #32]
 80232a6:	0e1b      	lsrs	r3, r3, #24
 80232a8:	9311      	str	r3, [sp, #68]	@ 0x44
 80232aa:	f8dc 3004 	ldr.w	r3, [ip, #4]
 80232ae:	930d      	str	r3, [sp, #52]	@ 0x34
 80232b0:	0e1b      	lsrs	r3, r3, #24
 80232b2:	9314      	str	r3, [sp, #80]	@ 0x50
 80232b4:	b280      	uxth	r0, r0
 80232b6:	b289      	uxth	r1, r1
 80232b8:	fb00 f901 	mul.w	r9, r0, r1
 80232bc:	ebc9 1101 	rsb	r1, r9, r1, lsl #4
 80232c0:	0100      	lsls	r0, r0, #4
 80232c2:	eba0 0809 	sub.w	r8, r0, r9
 80232c6:	b289      	uxth	r1, r1
 80232c8:	f5c0 7380 	rsb	r3, r0, #256	@ 0x100
 80232cc:	9813      	ldr	r0, [sp, #76]	@ 0x4c
 80232ce:	9d11      	ldr	r5, [sp, #68]	@ 0x44
 80232d0:	fa1f f888 	uxth.w	r8, r8
 80232d4:	1a5b      	subs	r3, r3, r1
 80232d6:	b29b      	uxth	r3, r3
 80232d8:	fb08 f000 	mul.w	r0, r8, r0
 80232dc:	fb03 000e 	mla	r0, r3, lr, r0
 80232e0:	fb01 0005 	mla	r0, r1, r5, r0
 80232e4:	9d14      	ldr	r5, [sp, #80]	@ 0x50
 80232e6:	fb09 0005 	mla	r0, r9, r5, r0
 80232ea:	f3c0 2007 	ubfx	r0, r0, #8, #8
 80232ee:	2800      	cmp	r0, #0
 80232f0:	f000 80fa 	beq.w	80234e8 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x350>
 80232f4:	f1be 0fff 	cmp.w	lr, #255	@ 0xff
 80232f8:	d01b      	beq.n	8023332 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x19a>
 80232fa:	f002 1aff 	and.w	sl, r2, #16711935	@ 0xff00ff
 80232fe:	fb0e fa0a 	mul.w	sl, lr, sl
 8023302:	f402 427f 	and.w	r2, r2, #65280	@ 0xff00
 8023306:	fb0e fe02 	mul.w	lr, lr, r2
 802330a:	ea4f 221a 	mov.w	r2, sl, lsr #8
 802330e:	f002 12ff 	and.w	r2, r2, #16711935	@ 0xff00ff
 8023312:	f10a 1a01 	add.w	sl, sl, #65537	@ 0x10001
 8023316:	f50e 7c80 	add.w	ip, lr, #256	@ 0x100
 802331a:	4452      	add	r2, sl
 802331c:	eb0c 2c1e 	add.w	ip, ip, lr, lsr #8
 8023320:	0a12      	lsrs	r2, r2, #8
 8023322:	ea4f 2c1c 	mov.w	ip, ip, lsr #8
 8023326:	f002 12ff 	and.w	r2, r2, #16711935	@ 0xff00ff
 802332a:	f40c 4c7f 	and.w	ip, ip, #65280	@ 0xff00
 802332e:	ea42 020c 	orr.w	r2, r2, ip
 8023332:	9d13      	ldr	r5, [sp, #76]	@ 0x4c
 8023334:	2dff      	cmp	r5, #255	@ 0xff
 8023336:	d021      	beq.n	802337c <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1e4>
 8023338:	9d0c      	ldr	r5, [sp, #48]	@ 0x30
 802333a:	f005 1bff 	and.w	fp, r5, #16711935	@ 0xff00ff
 802333e:	9d13      	ldr	r5, [sp, #76]	@ 0x4c
 8023340:	fb05 fb0b 	mul.w	fp, r5, fp
 8023344:	9d0c      	ldr	r5, [sp, #48]	@ 0x30
 8023346:	f405 4a7f 	and.w	sl, r5, #65280	@ 0xff00
 802334a:	9d13      	ldr	r5, [sp, #76]	@ 0x4c
 802334c:	ea4f 2e1b 	mov.w	lr, fp, lsr #8
 8023350:	fb05 fa0a 	mul.w	sl, r5, sl
 8023354:	f00e 1eff 	and.w	lr, lr, #16711935	@ 0xff00ff
 8023358:	f10b 1b01 	add.w	fp, fp, #65537	@ 0x10001
 802335c:	f50a 7c80 	add.w	ip, sl, #256	@ 0x100
 8023360:	44de      	add	lr, fp
 8023362:	eb0c 2a1a 	add.w	sl, ip, sl, lsr #8
 8023366:	ea4f 2e1e 	mov.w	lr, lr, lsr #8
 802336a:	ea4f 2a1a 	mov.w	sl, sl, lsr #8
 802336e:	f00e 1eff 	and.w	lr, lr, #16711935	@ 0xff00ff
 8023372:	f40a 4a7f 	and.w	sl, sl, #65280	@ 0xff00
 8023376:	ea4e 050a 	orr.w	r5, lr, sl
 802337a:	950c      	str	r5, [sp, #48]	@ 0x30
 802337c:	9d11      	ldr	r5, [sp, #68]	@ 0x44
 802337e:	2dff      	cmp	r5, #255	@ 0xff
 8023380:	d021      	beq.n	80233c6 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x22e>
 8023382:	9d08      	ldr	r5, [sp, #32]
 8023384:	f005 1bff 	and.w	fp, r5, #16711935	@ 0xff00ff
 8023388:	9d11      	ldr	r5, [sp, #68]	@ 0x44
 802338a:	fb05 fb0b 	mul.w	fp, r5, fp
 802338e:	9d08      	ldr	r5, [sp, #32]
 8023390:	f405 4a7f 	and.w	sl, r5, #65280	@ 0xff00
 8023394:	9d11      	ldr	r5, [sp, #68]	@ 0x44
 8023396:	ea4f 2e1b 	mov.w	lr, fp, lsr #8
 802339a:	fb05 fa0a 	mul.w	sl, r5, sl
 802339e:	f00e 1eff 	and.w	lr, lr, #16711935	@ 0xff00ff
 80233a2:	f10b 1b01 	add.w	fp, fp, #65537	@ 0x10001
 80233a6:	f50a 7c80 	add.w	ip, sl, #256	@ 0x100
 80233aa:	44de      	add	lr, fp
 80233ac:	eb0c 2a1a 	add.w	sl, ip, sl, lsr #8
 80233b0:	ea4f 2e1e 	mov.w	lr, lr, lsr #8
 80233b4:	ea4f 2a1a 	mov.w	sl, sl, lsr #8
 80233b8:	f00e 1eff 	and.w	lr, lr, #16711935	@ 0xff00ff
 80233bc:	f40a 4a7f 	and.w	sl, sl, #65280	@ 0xff00
 80233c0:	ea4e 050a 	orr.w	r5, lr, sl
 80233c4:	9508      	str	r5, [sp, #32]
 80233c6:	9d14      	ldr	r5, [sp, #80]	@ 0x50
 80233c8:	2dff      	cmp	r5, #255	@ 0xff
 80233ca:	d021      	beq.n	8023410 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x278>
 80233cc:	9d0d      	ldr	r5, [sp, #52]	@ 0x34
 80233ce:	f005 1bff 	and.w	fp, r5, #16711935	@ 0xff00ff
 80233d2:	9d14      	ldr	r5, [sp, #80]	@ 0x50
 80233d4:	fb05 fb0b 	mul.w	fp, r5, fp
 80233d8:	9d0d      	ldr	r5, [sp, #52]	@ 0x34
 80233da:	f405 4a7f 	and.w	sl, r5, #65280	@ 0xff00
 80233de:	9d14      	ldr	r5, [sp, #80]	@ 0x50
 80233e0:	ea4f 2e1b 	mov.w	lr, fp, lsr #8
 80233e4:	fb05 fa0a 	mul.w	sl, r5, sl
 80233e8:	f00e 1eff 	and.w	lr, lr, #16711935	@ 0xff00ff
 80233ec:	f10b 1b01 	add.w	fp, fp, #65537	@ 0x10001
 80233f0:	f50a 7c80 	add.w	ip, sl, #256	@ 0x100
 80233f4:	44de      	add	lr, fp
 80233f6:	eb0c 2a1a 	add.w	sl, ip, sl, lsr #8
 80233fa:	ea4f 2e1e 	mov.w	lr, lr, lsr #8
 80233fe:	ea4f 2a1a 	mov.w	sl, sl, lsr #8
 8023402:	f00e 1eff 	and.w	lr, lr, #16711935	@ 0xff00ff
 8023406:	f40a 4a7f 	and.w	sl, sl, #65280	@ 0xff00
 802340a:	ea4e 050a 	orr.w	r5, lr, sl
 802340e:	950d      	str	r5, [sp, #52]	@ 0x34
 8023410:	9d0c      	ldr	r5, [sp, #48]	@ 0x30
 8023412:	f005 1cff 	and.w	ip, r5, #16711935	@ 0xff00ff
 8023416:	9d08      	ldr	r5, [sp, #32]
 8023418:	f002 1eff 	and.w	lr, r2, #16711935	@ 0xff00ff
 802341c:	fb08 fc0c 	mul.w	ip, r8, ip
 8023420:	fb03 cc0e 	mla	ip, r3, lr, ip
 8023424:	f005 1eff 	and.w	lr, r5, #16711935	@ 0xff00ff
 8023428:	9d0d      	ldr	r5, [sp, #52]	@ 0x34
 802342a:	fb01 cc0e 	mla	ip, r1, lr, ip
 802342e:	f005 1eff 	and.w	lr, r5, #16711935	@ 0xff00ff
 8023432:	9d0c      	ldr	r5, [sp, #48]	@ 0x30
 8023434:	fb09 cc0e 	mla	ip, r9, lr, ip
 8023438:	f405 4e7f 	and.w	lr, r5, #65280	@ 0xff00
 802343c:	fb08 f80e 	mul.w	r8, r8, lr
 8023440:	f402 427f 	and.w	r2, r2, #65280	@ 0xff00
 8023444:	fb03 8202 	mla	r2, r3, r2, r8
 8023448:	9b08      	ldr	r3, [sp, #32]
 802344a:	9d0b      	ldr	r5, [sp, #44]	@ 0x2c
 802344c:	f403 4a7f 	and.w	sl, r3, #65280	@ 0xff00
 8023450:	9b0d      	ldr	r3, [sp, #52]	@ 0x34
 8023452:	fb01 220a 	mla	r2, r1, sl, r2
 8023456:	f403 417f 	and.w	r1, r3, #65280	@ 0xff00
 802345a:	fb09 2901 	mla	r9, r9, r1, r2
 802345e:	9a0b      	ldr	r2, [sp, #44]	@ 0x2c
 8023460:	883b      	ldrh	r3, [r7, #0]
 8023462:	4342      	muls	r2, r0
 8023464:	ea4f 2c1c 	mov.w	ip, ip, lsr #8
 8023468:	ea4f 2919 	mov.w	r9, r9, lsr #8
 802346c:	1c50      	adds	r0, r2, #1
 802346e:	f00c 1cff 	and.w	ip, ip, #16711935	@ 0xff00ff
 8023472:	f409 497f 	and.w	r9, r9, #65280	@ 0xff00
 8023476:	ea4c 0c09 	orr.w	ip, ip, r9
 802347a:	eb00 2012 	add.w	r0, r0, r2, lsr #8
 802347e:	1219      	asrs	r1, r3, #8
 8023480:	ea4f 421c 	mov.w	r2, ip, lsr #16
 8023484:	ea6f 2010 	mvn.w	r0, r0, lsr #8
 8023488:	b2c0      	uxtb	r0, r0
 802348a:	fb12 f205 	smulbb	r2, r2, r5
 802348e:	f001 01f8 	and.w	r1, r1, #248	@ 0xf8
 8023492:	fb01 2100 	mla	r1, r1, r0, r2
 8023496:	f3cc 2e07 	ubfx	lr, ip, #8, #8
 802349a:	10da      	asrs	r2, r3, #3
 802349c:	fa5f fc8c 	uxtb.w	ip, ip
 80234a0:	00db      	lsls	r3, r3, #3
 80234a2:	fb1c fc05 	smulbb	ip, ip, r5
 80234a6:	b2db      	uxtb	r3, r3
 80234a8:	b289      	uxth	r1, r1
 80234aa:	fb03 c300 	mla	r3, r3, r0, ip
 80234ae:	fa1f fc83 	uxth.w	ip, r3
 80234b2:	1c4b      	adds	r3, r1, #1
 80234b4:	eb03 2111 	add.w	r1, r3, r1, lsr #8
 80234b8:	f002 02fc 	and.w	r2, r2, #252	@ 0xfc
 80234bc:	fb1e fe05 	smulbb	lr, lr, r5
 80234c0:	f10c 0301 	add.w	r3, ip, #1
 80234c4:	fb02 e200 	mla	r2, r2, r0, lr
 80234c8:	eb03 231c 	add.w	r3, r3, ip, lsr #8
 80234cc:	b292      	uxth	r2, r2
 80234ce:	f401 4178 	and.w	r1, r1, #63488	@ 0xf800
 80234d2:	f3c3 23c4 	ubfx	r3, r3, #11, #5
 80234d6:	430b      	orrs	r3, r1
 80234d8:	1c51      	adds	r1, r2, #1
 80234da:	eb01 2212 	add.w	r2, r1, r2, lsr #8
 80234de:	0952      	lsrs	r2, r2, #5
 80234e0:	f402 62fc 	and.w	r2, r2, #2016	@ 0x7e0
 80234e4:	4313      	orrs	r3, r2
 80234e6:	803b      	strh	r3, [r7, #0]
 80234e8:	9b29      	ldr	r3, [sp, #164]	@ 0xa4
 80234ea:	441c      	add	r4, r3
 80234ec:	9b2a      	ldr	r3, [sp, #168]	@ 0xa8
 80234ee:	441e      	add	r6, r3
 80234f0:	9b18      	ldr	r3, [sp, #96]	@ 0x60
 80234f2:	3b01      	subs	r3, #1
 80234f4:	3702      	adds	r7, #2
 80234f6:	9318      	str	r3, [sp, #96]	@ 0x60
 80234f8:	e698      	b.n	802322c <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x94>
 80234fa:	9b29      	ldr	r3, [sp, #164]	@ 0xa4
 80234fc:	441c      	add	r4, r3
 80234fe:	9b2a      	ldr	r3, [sp, #168]	@ 0xa8
 8023500:	441e      	add	r6, r3
 8023502:	9b07      	ldr	r3, [sp, #28]
 8023504:	3b01      	subs	r3, #1
 8023506:	9307      	str	r3, [sp, #28]
 8023508:	9b0a      	ldr	r3, [sp, #40]	@ 0x28
 802350a:	3302      	adds	r3, #2
 802350c:	930a      	str	r3, [sp, #40]	@ 0x28
 802350e:	e66d      	b.n	80231ec <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x54>
 8023510:	d023      	beq.n	802355a <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3c2>
 8023512:	9b07      	ldr	r3, [sp, #28]
 8023514:	9829      	ldr	r0, [sp, #164]	@ 0xa4
 8023516:	3b01      	subs	r3, #1
 8023518:	fb00 4003 	mla	r0, r0, r3, r4
 802351c:	1400      	asrs	r0, r0, #16
 802351e:	f53f ae82 	bmi.w	8023226 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x8e>
 8023522:	3901      	subs	r1, #1
 8023524:	4288      	cmp	r0, r1
 8023526:	f6bf ae7e 	bge.w	8023226 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x8e>
 802352a:	992a      	ldr	r1, [sp, #168]	@ 0xa8
 802352c:	fb01 6303 	mla	r3, r1, r3, r6
 8023530:	141b      	asrs	r3, r3, #16
 8023532:	f53f ae78 	bmi.w	8023226 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x8e>
 8023536:	3a01      	subs	r2, #1
 8023538:	4293      	cmp	r3, r2
 802353a:	f6bf ae74 	bge.w	8023226 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x8e>
 802353e:	f8dd b01c 	ldr.w	fp, [sp, #28]
 8023542:	f8dd 9028 	ldr.w	r9, [sp, #40]	@ 0x28
 8023546:	f1bb 0f00 	cmp.w	fp, #0
 802354a:	dc6c      	bgt.n	8023626 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x48e>
 802354c:	9b07      	ldr	r3, [sp, #28]
 802354e:	ea23 75e3 	bic.w	r5, r3, r3, asr #31
 8023552:	9b0a      	ldr	r3, [sp, #40]	@ 0x28
 8023554:	eb03 0345 	add.w	r3, r3, r5, lsl #1
 8023558:	930a      	str	r3, [sp, #40]	@ 0x28
 802355a:	9b17      	ldr	r3, [sp, #92]	@ 0x5c
 802355c:	2b00      	cmp	r3, #0
 802355e:	f340 81b3 	ble.w	80238c8 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x730>
 8023562:	ee30 0a04 	vadd.f32	s0, s0, s8
 8023566:	eeb7 7a00 	vmov.f32	s14, #112	@ 0x3f800000  1.0
 802356a:	eec7 7a00 	vdiv.f32	s15, s14, s0
 802356e:	9b26      	ldr	r3, [sp, #152]	@ 0x98
 8023570:	ee70 0aa4 	vadd.f32	s1, s1, s9
 8023574:	ee31 1a05 	vadd.f32	s2, s2, s10
 8023578:	ee20 7aa7 	vmul.f32	s14, s1, s15
 802357c:	eef0 6a62 	vmov.f32	s13, s5
 8023580:	ee61 7a27 	vmul.f32	s15, s2, s15
 8023584:	eefe 6ac8 	vcvt.s32.f32	s13, s13, #16
 8023588:	ee77 2a62 	vsub.f32	s5, s14, s5
 802358c:	ee16 4a90 	vmov	r4, s13
 8023590:	eefe 2ac8 	vcvt.s32.f32	s5, s5, #16
 8023594:	eef0 6a43 	vmov.f32	s13, s6
 8023598:	ee37 3ac3 	vsub.f32	s6, s15, s6
 802359c:	ee12 2a90 	vmov	r2, s5
 80235a0:	eebe 3ac8 	vcvt.s32.f32	s6, s6, #16
 80235a4:	fb92 f3f3 	sdiv	r3, r2, r3
 80235a8:	ee13 2a10 	vmov	r2, s6
 80235ac:	9329      	str	r3, [sp, #164]	@ 0xa4
 80235ae:	9b26      	ldr	r3, [sp, #152]	@ 0x98
 80235b0:	fb92 f3f3 	sdiv	r3, r2, r3
 80235b4:	932a      	str	r3, [sp, #168]	@ 0xa8
 80235b6:	9b17      	ldr	r3, [sp, #92]	@ 0x5c
 80235b8:	9a19      	ldr	r2, [sp, #100]	@ 0x64
 80235ba:	3b01      	subs	r3, #1
 80235bc:	eefe 6ac8 	vcvt.s32.f32	s13, s13, #16
 80235c0:	9317      	str	r3, [sp, #92]	@ 0x5c
 80235c2:	9b26      	ldr	r3, [sp, #152]	@ 0x98
 80235c4:	bf08      	it	eq
 80235c6:	4613      	moveq	r3, r2
 80235c8:	ee16 6a90 	vmov	r6, s13
 80235cc:	9307      	str	r3, [sp, #28]
 80235ce:	eeb0 3a67 	vmov.f32	s6, s15
 80235d2:	eef0 2a47 	vmov.f32	s5, s14
 80235d6:	e5fb      	b.n	80231d0 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x38>
 80235d8:	2900      	cmp	r1, #0
 80235da:	f43f ae6b 	beq.w	80232b4 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x11c>
 80235de:	f858 3023 	ldr.w	r3, [r8, r3, lsl #2]
 80235e2:	9308      	str	r3, [sp, #32]
 80235e4:	0e1b      	lsrs	r3, r3, #24
 80235e6:	9311      	str	r3, [sp, #68]	@ 0x44
 80235e8:	e664      	b.n	80232b4 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x11c>
 80235ea:	f112 0801 	adds.w	r8, r2, #1
 80235ee:	f53f af7b 	bmi.w	80234e8 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x350>
 80235f2:	4543      	cmp	r3, r8
 80235f4:	f6ff af78 	blt.w	80234e8 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x350>
 80235f8:	f11c 0801 	adds.w	r8, ip, #1
 80235fc:	f53f af74 	bmi.w	80234e8 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x350>
 8023600:	45c6      	cmp	lr, r8
 8023602:	f6ff af71 	blt.w	80234e8 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x350>
 8023606:	9d1a      	ldr	r5, [sp, #104]	@ 0x68
 8023608:	9201      	str	r2, [sp, #4]
 802360a:	fa0f f28e 	sxth.w	r2, lr
 802360e:	e9cd 1504 	strd	r1, r5, [sp, #16]
 8023612:	e9cd c002 	strd	ip, r0, [sp, #8]
 8023616:	9200      	str	r2, [sp, #0]
 8023618:	b21b      	sxth	r3, r3
 802361a:	9a10      	ldr	r2, [sp, #64]	@ 0x40
 802361c:	981b      	ldr	r0, [sp, #108]	@ 0x6c
 802361e:	4639      	mov	r1, r7
 8023620:	f7ff fc79 	bl	8022f16 <_ZNK8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKmssiihhh>
 8023624:	e760      	b.n	80234e8 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x350>
 8023626:	9b2e      	ldr	r3, [sp, #184]	@ 0xb8
 8023628:	9d10      	ldr	r5, [sp, #64]	@ 0x40
 802362a:	f9b3 1008 	ldrsh.w	r1, [r3, #8]
 802362e:	1427      	asrs	r7, r4, #16
 8023630:	1433      	asrs	r3, r6, #16
 8023632:	fb01 7303 	mla	r3, r1, r3, r7
 8023636:	eb05 0783 	add.w	r7, r5, r3, lsl #2
 802363a:	f855 3023 	ldr.w	r3, [r5, r3, lsl #2]
 802363e:	f3c4 3203 	ubfx	r2, r4, #12, #4
 8023642:	f3c6 3003 	ubfx	r0, r6, #12, #4
 8023646:	ea4f 6c13 	mov.w	ip, r3, lsr #24
 802364a:	2a00      	cmp	r2, #0
 802364c:	f000 8133 	beq.w	80238b6 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x71e>
 8023650:	687d      	ldr	r5, [r7, #4]
 8023652:	950e      	str	r5, [sp, #56]	@ 0x38
 8023654:	0e2d      	lsrs	r5, r5, #24
 8023656:	9515      	str	r5, [sp, #84]	@ 0x54
 8023658:	b178      	cbz	r0, 802367a <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x4e2>
 802365a:	f101 4180 	add.w	r1, r1, #1073741824	@ 0x40000000
 802365e:	3901      	subs	r1, #1
 8023660:	0089      	lsls	r1, r1, #2
 8023662:	3104      	adds	r1, #4
 8023664:	eb07 0e01 	add.w	lr, r7, r1
 8023668:	5879      	ldr	r1, [r7, r1]
 802366a:	9109      	str	r1, [sp, #36]	@ 0x24
 802366c:	0e09      	lsrs	r1, r1, #24
 802366e:	9112      	str	r1, [sp, #72]	@ 0x48
 8023670:	f8de 1004 	ldr.w	r1, [lr, #4]
 8023674:	910f      	str	r1, [sp, #60]	@ 0x3c
 8023676:	0e09      	lsrs	r1, r1, #24
 8023678:	9116      	str	r1, [sp, #88]	@ 0x58
 802367a:	b292      	uxth	r2, r2
 802367c:	b280      	uxth	r0, r0
 802367e:	fb02 f800 	mul.w	r8, r2, r0
 8023682:	ebc8 1000 	rsb	r0, r8, r0, lsl #4
 8023686:	0112      	lsls	r2, r2, #4
 8023688:	eba2 0e08 	sub.w	lr, r2, r8
 802368c:	b280      	uxth	r0, r0
 802368e:	f5c2 7280 	rsb	r2, r2, #256	@ 0x100
 8023692:	9915      	ldr	r1, [sp, #84]	@ 0x54
 8023694:	9d12      	ldr	r5, [sp, #72]	@ 0x48
 8023696:	fa1f fe8e 	uxth.w	lr, lr
 802369a:	1a12      	subs	r2, r2, r0
 802369c:	b292      	uxth	r2, r2
 802369e:	fb0e f101 	mul.w	r1, lr, r1
 80236a2:	fb02 110c 	mla	r1, r2, ip, r1
 80236a6:	fb00 1105 	mla	r1, r0, r5, r1
 80236aa:	9d16      	ldr	r5, [sp, #88]	@ 0x58
 80236ac:	fb08 1105 	mla	r1, r8, r5, r1
 80236b0:	f3c1 2107 	ubfx	r1, r1, #8, #8
 80236b4:	2900      	cmp	r1, #0
 80236b6:	f000 80f5 	beq.w	80238a4 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x70c>
 80236ba:	f1bc 0fff 	cmp.w	ip, #255	@ 0xff
 80236be:	d019      	beq.n	80236f4 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x55c>
 80236c0:	f003 1aff 	and.w	sl, r3, #16711935	@ 0xff00ff
 80236c4:	fb0c fa0a 	mul.w	sl, ip, sl
 80236c8:	f403 437f 	and.w	r3, r3, #65280	@ 0xff00
 80236cc:	fb0c fc03 	mul.w	ip, ip, r3
 80236d0:	ea4f 231a 	mov.w	r3, sl, lsr #8
 80236d4:	f003 13ff 	and.w	r3, r3, #16711935	@ 0xff00ff
 80236d8:	f10a 1a01 	add.w	sl, sl, #65537	@ 0x10001
 80236dc:	f50c 7780 	add.w	r7, ip, #256	@ 0x100
 80236e0:	4453      	add	r3, sl
 80236e2:	eb07 271c 	add.w	r7, r7, ip, lsr #8
 80236e6:	0a1b      	lsrs	r3, r3, #8
 80236e8:	0a3f      	lsrs	r7, r7, #8
 80236ea:	f003 13ff 	and.w	r3, r3, #16711935	@ 0xff00ff
 80236ee:	f407 477f 	and.w	r7, r7, #65280	@ 0xff00
 80236f2:	433b      	orrs	r3, r7
 80236f4:	9d15      	ldr	r5, [sp, #84]	@ 0x54
 80236f6:	2dff      	cmp	r5, #255	@ 0xff
 80236f8:	d020      	beq.n	802373c <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x5a4>
 80236fa:	9d0e      	ldr	r5, [sp, #56]	@ 0x38
 80236fc:	f005 17ff 	and.w	r7, r5, #16711935	@ 0xff00ff
 8023700:	9d15      	ldr	r5, [sp, #84]	@ 0x54
 8023702:	436f      	muls	r7, r5
 8023704:	9d0e      	ldr	r5, [sp, #56]	@ 0x38
 8023706:	f405 4a7f 	and.w	sl, r5, #65280	@ 0xff00
 802370a:	9d15      	ldr	r5, [sp, #84]	@ 0x54
 802370c:	ea4f 2c17 	mov.w	ip, r7, lsr #8
 8023710:	fb05 fa0a 	mul.w	sl, r5, sl
 8023714:	f107 1701 	add.w	r7, r7, #65537	@ 0x10001
 8023718:	f00c 1cff 	and.w	ip, ip, #16711935	@ 0xff00ff
 802371c:	44bc      	add	ip, r7
 802371e:	f50a 7780 	add.w	r7, sl, #256	@ 0x100
 8023722:	eb07 2a1a 	add.w	sl, r7, sl, lsr #8
 8023726:	ea4f 2c1c 	mov.w	ip, ip, lsr #8
 802372a:	ea4f 2a1a 	mov.w	sl, sl, lsr #8
 802372e:	f00c 1cff 	and.w	ip, ip, #16711935	@ 0xff00ff
 8023732:	f40a 4a7f 	and.w	sl, sl, #65280	@ 0xff00
 8023736:	ea4c 050a 	orr.w	r5, ip, sl
 802373a:	950e      	str	r5, [sp, #56]	@ 0x38
 802373c:	9d12      	ldr	r5, [sp, #72]	@ 0x48
 802373e:	2dff      	cmp	r5, #255	@ 0xff
 8023740:	d020      	beq.n	8023784 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x5ec>
 8023742:	9d09      	ldr	r5, [sp, #36]	@ 0x24
 8023744:	f005 17ff 	and.w	r7, r5, #16711935	@ 0xff00ff
 8023748:	9d12      	ldr	r5, [sp, #72]	@ 0x48
 802374a:	436f      	muls	r7, r5
 802374c:	9d09      	ldr	r5, [sp, #36]	@ 0x24
 802374e:	f405 4a7f 	and.w	sl, r5, #65280	@ 0xff00
 8023752:	9d12      	ldr	r5, [sp, #72]	@ 0x48
 8023754:	ea4f 2c17 	mov.w	ip, r7, lsr #8
 8023758:	fb05 fa0a 	mul.w	sl, r5, sl
 802375c:	f107 1701 	add.w	r7, r7, #65537	@ 0x10001
 8023760:	f00c 1cff 	and.w	ip, ip, #16711935	@ 0xff00ff
 8023764:	44bc      	add	ip, r7
 8023766:	f50a 7780 	add.w	r7, sl, #256	@ 0x100
 802376a:	eb07 2a1a 	add.w	sl, r7, sl, lsr #8
 802376e:	ea4f 2c1c 	mov.w	ip, ip, lsr #8
 8023772:	ea4f 2a1a 	mov.w	sl, sl, lsr #8
 8023776:	f00c 1cff 	and.w	ip, ip, #16711935	@ 0xff00ff
 802377a:	f40a 4a7f 	and.w	sl, sl, #65280	@ 0xff00
 802377e:	ea4c 050a 	orr.w	r5, ip, sl
 8023782:	9509      	str	r5, [sp, #36]	@ 0x24
 8023784:	9d16      	ldr	r5, [sp, #88]	@ 0x58
 8023786:	2dff      	cmp	r5, #255	@ 0xff
 8023788:	d020      	beq.n	80237cc <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x634>
 802378a:	9d0f      	ldr	r5, [sp, #60]	@ 0x3c
 802378c:	f005 17ff 	and.w	r7, r5, #16711935	@ 0xff00ff
 8023790:	9d16      	ldr	r5, [sp, #88]	@ 0x58
 8023792:	436f      	muls	r7, r5
 8023794:	9d0f      	ldr	r5, [sp, #60]	@ 0x3c
 8023796:	f405 4a7f 	and.w	sl, r5, #65280	@ 0xff00
 802379a:	9d16      	ldr	r5, [sp, #88]	@ 0x58
 802379c:	ea4f 2c17 	mov.w	ip, r7, lsr #8
 80237a0:	fb05 fa0a 	mul.w	sl, r5, sl
 80237a4:	f107 1701 	add.w	r7, r7, #65537	@ 0x10001
 80237a8:	f00c 1cff 	and.w	ip, ip, #16711935	@ 0xff00ff
 80237ac:	44bc      	add	ip, r7
 80237ae:	f50a 7780 	add.w	r7, sl, #256	@ 0x100
 80237b2:	eb07 2a1a 	add.w	sl, r7, sl, lsr #8
 80237b6:	ea4f 2c1c 	mov.w	ip, ip, lsr #8
 80237ba:	ea4f 2a1a 	mov.w	sl, sl, lsr #8
 80237be:	f00c 1cff 	and.w	ip, ip, #16711935	@ 0xff00ff
 80237c2:	f40a 4a7f 	and.w	sl, sl, #65280	@ 0xff00
 80237c6:	ea4c 050a 	orr.w	r5, ip, sl
 80237ca:	950f      	str	r5, [sp, #60]	@ 0x3c
 80237cc:	9d0e      	ldr	r5, [sp, #56]	@ 0x38
 80237ce:	f005 17ff 	and.w	r7, r5, #16711935	@ 0xff00ff
 80237d2:	9d09      	ldr	r5, [sp, #36]	@ 0x24
 80237d4:	f003 1cff 	and.w	ip, r3, #16711935	@ 0xff00ff
 80237d8:	fb0e f707 	mul.w	r7, lr, r7
 80237dc:	fb02 770c 	mla	r7, r2, ip, r7
 80237e0:	f005 1cff 	and.w	ip, r5, #16711935	@ 0xff00ff
 80237e4:	9d0f      	ldr	r5, [sp, #60]	@ 0x3c
 80237e6:	fb00 770c 	mla	r7, r0, ip, r7
 80237ea:	f005 1cff 	and.w	ip, r5, #16711935	@ 0xff00ff
 80237ee:	9d0e      	ldr	r5, [sp, #56]	@ 0x38
 80237f0:	fb08 770c 	mla	r7, r8, ip, r7
 80237f4:	f405 4c7f 	and.w	ip, r5, #65280	@ 0xff00
 80237f8:	fb0e fe0c 	mul.w	lr, lr, ip
 80237fc:	f403 437f 	and.w	r3, r3, #65280	@ 0xff00
 8023800:	fb02 e303 	mla	r3, r2, r3, lr
 8023804:	9a09      	ldr	r2, [sp, #36]	@ 0x24
 8023806:	9d0b      	ldr	r5, [sp, #44]	@ 0x2c
 8023808:	f402 4a7f 	and.w	sl, r2, #65280	@ 0xff00
 802380c:	9a0f      	ldr	r2, [sp, #60]	@ 0x3c
 802380e:	fb00 330a 	mla	r3, r0, sl, r3
 8023812:	f402 4c7f 	and.w	ip, r2, #65280	@ 0xff00
 8023816:	fb08 3c0c 	mla	ip, r8, ip, r3
 802381a:	9b0b      	ldr	r3, [sp, #44]	@ 0x2c
 802381c:	f8b9 0000 	ldrh.w	r0, [r9]
 8023820:	4359      	muls	r1, r3
 8023822:	0a3f      	lsrs	r7, r7, #8
 8023824:	ea4f 2c1c 	mov.w	ip, ip, lsr #8
 8023828:	f40c 4c7f 	and.w	ip, ip, #65280	@ 0xff00
 802382c:	1c4b      	adds	r3, r1, #1
 802382e:	f007 17ff 	and.w	r7, r7, #16711935	@ 0xff00ff
 8023832:	ea47 070c 	orr.w	r7, r7, ip
 8023836:	eb03 2111 	add.w	r1, r3, r1, lsr #8
 802383a:	1202      	asrs	r2, r0, #8
 802383c:	0c3b      	lsrs	r3, r7, #16
 802383e:	ea6f 2111 	mvn.w	r1, r1, lsr #8
 8023842:	b2c9      	uxtb	r1, r1
 8023844:	fb13 f305 	smulbb	r3, r3, r5
 8023848:	f002 02f8 	and.w	r2, r2, #248	@ 0xf8
 802384c:	fb02 3201 	mla	r2, r2, r1, r3
 8023850:	f3c7 2c07 	ubfx	ip, r7, #8, #8
 8023854:	10c3      	asrs	r3, r0, #3
 8023856:	b2ff      	uxtb	r7, r7
 8023858:	00c0      	lsls	r0, r0, #3
 802385a:	b2c0      	uxtb	r0, r0
 802385c:	fb17 f705 	smulbb	r7, r7, r5
 8023860:	fb00 7001 	mla	r0, r0, r1, r7
 8023864:	b292      	uxth	r2, r2
 8023866:	fb1c fc05 	smulbb	ip, ip, r5
 802386a:	b280      	uxth	r0, r0
 802386c:	f003 03fc 	and.w	r3, r3, #252	@ 0xfc
 8023870:	fb03 c301 	mla	r3, r3, r1, ip
 8023874:	1c51      	adds	r1, r2, #1
 8023876:	f100 0c01 	add.w	ip, r0, #1
 802387a:	eb01 2212 	add.w	r2, r1, r2, lsr #8
 802387e:	eb0c 2c10 	add.w	ip, ip, r0, lsr #8
 8023882:	b29b      	uxth	r3, r3
 8023884:	f3cc 2cc4 	ubfx	ip, ip, #11, #5
 8023888:	f402 4278 	and.w	r2, r2, #63488	@ 0xf800
 802388c:	ea4c 0202 	orr.w	r2, ip, r2
 8023890:	f103 0c01 	add.w	ip, r3, #1
 8023894:	eb0c 2313 	add.w	r3, ip, r3, lsr #8
 8023898:	095b      	lsrs	r3, r3, #5
 802389a:	f403 63fc 	and.w	r3, r3, #2016	@ 0x7e0
 802389e:	431a      	orrs	r2, r3
 80238a0:	f8a9 2000 	strh.w	r2, [r9]
 80238a4:	9b29      	ldr	r3, [sp, #164]	@ 0xa4
 80238a6:	441c      	add	r4, r3
 80238a8:	9b2a      	ldr	r3, [sp, #168]	@ 0xa8
 80238aa:	f109 0902 	add.w	r9, r9, #2
 80238ae:	441e      	add	r6, r3
 80238b0:	f10b 3bff 	add.w	fp, fp, #4294967295
 80238b4:	e647      	b.n	8023546 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3ae>
 80238b6:	2800      	cmp	r0, #0
 80238b8:	f43f aedf 	beq.w	802367a <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x4e2>
 80238bc:	f857 1021 	ldr.w	r1, [r7, r1, lsl #2]
 80238c0:	9109      	str	r1, [sp, #36]	@ 0x24
 80238c2:	0e09      	lsrs	r1, r1, #24
 80238c4:	9112      	str	r1, [sp, #72]	@ 0x48
 80238c6:	e6d8      	b.n	802367a <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x4e2>
 80238c8:	b01d      	add	sp, #116	@ 0x74
 80238ca:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}

080238ce <_ZNK8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKmssiihh>:
 80238ce:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 80238d2:	b085      	sub	sp, #20
 80238d4:	e9dd 740f 	ldrd	r7, r4, [sp, #60]	@ 0x3c
 80238d8:	9102      	str	r1, [sp, #8]
 80238da:	2c00      	cmp	r4, #0
 80238dc:	fb04 7103 	mla	r1, r4, r3, r7
 80238e0:	f9bd e038 	ldrsh.w	lr, [sp, #56]	@ 0x38
 80238e4:	f89d 6044 	ldrb.w	r6, [sp, #68]	@ 0x44
 80238e8:	f89d 0048 	ldrb.w	r0, [sp, #72]	@ 0x48
 80238ec:	eb02 0c81 	add.w	ip, r2, r1, lsl #2
 80238f0:	f2c0 810c 	blt.w	8023b0c <_ZNK8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKmssiihh+0x23e>
 80238f4:	45a6      	cmp	lr, r4
 80238f6:	f340 8109 	ble.w	8023b0c <_ZNK8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKmssiihh+0x23e>
 80238fa:	2f00      	cmp	r7, #0
 80238fc:	f2c0 8104 	blt.w	8023b08 <_ZNK8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKmssiihh+0x23a>
 8023900:	42bb      	cmp	r3, r7
 8023902:	f340 8101 	ble.w	8023b08 <_ZNK8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKmssiihh+0x23a>
 8023906:	f852 5021 	ldr.w	r5, [r2, r1, lsl #2]
 802390a:	1c7a      	adds	r2, r7, #1
 802390c:	f100 8101 	bmi.w	8023b12 <_ZNK8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKmssiihh+0x244>
 8023910:	4293      	cmp	r3, r2
 8023912:	f340 80fe 	ble.w	8023b12 <_ZNK8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKmssiihh+0x244>
 8023916:	2e00      	cmp	r6, #0
 8023918:	f000 80fd 	beq.w	8023b16 <_ZNK8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKmssiihh+0x248>
 802391c:	f8dc 1004 	ldr.w	r1, [ip, #4]
 8023920:	3401      	adds	r4, #1
 8023922:	f100 80fc 	bmi.w	8023b1e <_ZNK8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKmssiihh+0x250>
 8023926:	45a6      	cmp	lr, r4
 8023928:	f340 80f9 	ble.w	8023b1e <_ZNK8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKmssiihh+0x250>
 802392c:	2800      	cmp	r0, #0
 802392e:	f000 80f9 	beq.w	8023b24 <_ZNK8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKmssiihh+0x256>
 8023932:	2f00      	cmp	r7, #0
 8023934:	eb0c 0283 	add.w	r2, ip, r3, lsl #2
 8023938:	f2c0 80ef 	blt.w	8023b1a <_ZNK8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKmssiihh+0x24c>
 802393c:	42bb      	cmp	r3, r7
 802393e:	f340 80ec 	ble.w	8023b1a <_ZNK8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKmssiihh+0x24c>
 8023942:	f85c 4023 	ldr.w	r4, [ip, r3, lsl #2]
 8023946:	3701      	adds	r7, #1
 8023948:	f100 80ef 	bmi.w	8023b2a <_ZNK8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKmssiihh+0x25c>
 802394c:	42bb      	cmp	r3, r7
 802394e:	f340 80ec 	ble.w	8023b2a <_ZNK8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKmssiihh+0x25c>
 8023952:	2e00      	cmp	r6, #0
 8023954:	f000 80eb 	beq.w	8023b2e <_ZNK8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKmssiihh+0x260>
 8023958:	6852      	ldr	r2, [r2, #4]
 802395a:	b2b6      	uxth	r6, r6
 802395c:	b280      	uxth	r0, r0
 802395e:	fb00 fe06 	mul.w	lr, r0, r6
 8023962:	ebce 1000 	rsb	r0, lr, r0, lsl #4
 8023966:	0136      	lsls	r6, r6, #4
 8023968:	eba6 070e 	sub.w	r7, r6, lr
 802396c:	b280      	uxth	r0, r0
 802396e:	f5c6 7380 	rsb	r3, r6, #256	@ 0x100
 8023972:	ea4f 6a11 	mov.w	sl, r1, lsr #24
 8023976:	b2bf      	uxth	r7, r7
 8023978:	1a1b      	subs	r3, r3, r0
 802397a:	ea4f 6b15 	mov.w	fp, r5, lsr #24
 802397e:	b29b      	uxth	r3, r3
 8023980:	fb07 f60a 	mul.w	r6, r7, sl
 8023984:	ea4f 6914 	mov.w	r9, r4, lsr #24
 8023988:	fb0b 6603 	mla	r6, fp, r3, r6
 802398c:	ea4f 6812 	mov.w	r8, r2, lsr #24
 8023990:	fb00 6609 	mla	r6, r0, r9, r6
 8023994:	fb0e 6608 	mla	r6, lr, r8, r6
 8023998:	f3c6 2607 	ubfx	r6, r6, #8, #8
 802399c:	9600      	str	r6, [sp, #0]
 802399e:	2e00      	cmp	r6, #0
 80239a0:	f000 80af 	beq.w	8023b02 <_ZNK8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKmssiihh+0x234>
 80239a4:	f005 1cff 	and.w	ip, r5, #16711935	@ 0xff00ff
 80239a8:	fb0b fc0c 	mul.w	ip, fp, ip
 80239ac:	f405 457f 	and.w	r5, r5, #65280	@ 0xff00
 80239b0:	fb0b f505 	mul.w	r5, fp, r5
 80239b4:	ea4f 2b1c 	mov.w	fp, ip, lsr #8
 80239b8:	f00b 1bff 	and.w	fp, fp, #16711935	@ 0xff00ff
 80239bc:	f10c 1c01 	add.w	ip, ip, #65537	@ 0x10001
 80239c0:	44dc      	add	ip, fp
 80239c2:	ea4f 2c1c 	mov.w	ip, ip, lsr #8
 80239c6:	9501      	str	r5, [sp, #4]
 80239c8:	f00c 15ff 	and.w	r5, ip, #16711935	@ 0xff00ff
 80239cc:	9503      	str	r5, [sp, #12]
 80239ce:	9d01      	ldr	r5, [sp, #4]
 80239d0:	9e02      	ldr	r6, [sp, #8]
 80239d2:	f505 7c80 	add.w	ip, r5, #256	@ 0x100
 80239d6:	eb0c 2515 	add.w	r5, ip, r5, lsr #8
 80239da:	f001 1cff 	and.w	ip, r1, #16711935	@ 0xff00ff
 80239de:	fb0a fc0c 	mul.w	ip, sl, ip
 80239e2:	ea4f 2b15 	mov.w	fp, r5, lsr #8
 80239e6:	ea4f 251c 	mov.w	r5, ip, lsr #8
 80239ea:	f005 15ff 	and.w	r5, r5, #16711935	@ 0xff00ff
 80239ee:	f10c 1c01 	add.w	ip, ip, #65537	@ 0x10001
 80239f2:	4465      	add	r5, ip
 80239f4:	f004 1cff 	and.w	ip, r4, #16711935	@ 0xff00ff
 80239f8:	f404 447f 	and.w	r4, r4, #65280	@ 0xff00
 80239fc:	fb09 fc0c 	mul.w	ip, r9, ip
 8023a00:	fb09 f904 	mul.w	r9, r9, r4
 8023a04:	f509 7480 	add.w	r4, r9, #256	@ 0x100
 8023a08:	eb04 2919 	add.w	r9, r4, r9, lsr #8
 8023a0c:	f002 14ff 	and.w	r4, r2, #16711935	@ 0xff00ff
 8023a10:	fb08 f404 	mul.w	r4, r8, r4
 8023a14:	f401 417f 	and.w	r1, r1, #65280	@ 0xff00
 8023a18:	f402 427f 	and.w	r2, r2, #65280	@ 0xff00
 8023a1c:	fb08 f802 	mul.w	r8, r8, r2
 8023a20:	fb0a fa01 	mul.w	sl, sl, r1
 8023a24:	0a22      	lsrs	r2, r4, #8
 8023a26:	f50a 7180 	add.w	r1, sl, #256	@ 0x100
 8023a2a:	f002 12ff 	and.w	r2, r2, #16711935	@ 0xff00ff
 8023a2e:	f104 1401 	add.w	r4, r4, #65537	@ 0x10001
 8023a32:	eb01 2a1a 	add.w	sl, r1, sl, lsr #8
 8023a36:	4414      	add	r4, r2
 8023a38:	ea4f 211c 	mov.w	r1, ip, lsr #8
 8023a3c:	f508 7280 	add.w	r2, r8, #256	@ 0x100
 8023a40:	0a2d      	lsrs	r5, r5, #8
 8023a42:	eb02 2818 	add.w	r8, r2, r8, lsr #8
 8023a46:	f005 15ff 	and.w	r5, r5, #16711935	@ 0xff00ff
 8023a4a:	9a03      	ldr	r2, [sp, #12]
 8023a4c:	8836      	ldrh	r6, [r6, #0]
 8023a4e:	f001 11ff 	and.w	r1, r1, #16711935	@ 0xff00ff
 8023a52:	f10c 1c01 	add.w	ip, ip, #65537	@ 0x10001
 8023a56:	437d      	muls	r5, r7
 8023a58:	4461      	add	r1, ip
 8023a5a:	0a24      	lsrs	r4, r4, #8
 8023a5c:	fb02 5503 	mla	r5, r2, r3, r5
 8023a60:	0a09      	lsrs	r1, r1, #8
 8023a62:	f004 14ff 	and.w	r4, r4, #16711935	@ 0xff00ff
 8023a66:	fb04 540e 	mla	r4, r4, lr, r5
 8023a6a:	f001 11ff 	and.w	r1, r1, #16711935	@ 0xff00ff
 8023a6e:	fb01 4100 	mla	r1, r1, r0, r4
 8023a72:	ea4f 2a1a 	mov.w	sl, sl, lsr #8
 8023a76:	0a09      	lsrs	r1, r1, #8
 8023a78:	f40a 4a7f 	and.w	sl, sl, #65280	@ 0xff00
 8023a7c:	f001 14ff 	and.w	r4, r1, #16711935	@ 0xff00ff
 8023a80:	ea4f 2818 	mov.w	r8, r8, lsr #8
 8023a84:	f40b 417f 	and.w	r1, fp, #65280	@ 0xff00
 8023a88:	fb07 f70a 	mul.w	r7, r7, sl
 8023a8c:	fb03 7101 	mla	r1, r3, r1, r7
 8023a90:	ea4f 2919 	mov.w	r9, r9, lsr #8
 8023a94:	9b00      	ldr	r3, [sp, #0]
 8023a96:	f408 487f 	and.w	r8, r8, #65280	@ 0xff00
 8023a9a:	fb0e 1e08 	mla	lr, lr, r8, r1
 8023a9e:	f409 417f 	and.w	r1, r9, #65280	@ 0xff00
 8023aa2:	fb00 e101 	mla	r1, r0, r1, lr
 8023aa6:	43da      	mvns	r2, r3
 8023aa8:	1233      	asrs	r3, r6, #8
 8023aaa:	b2d2      	uxtb	r2, r2
 8023aac:	10f0      	asrs	r0, r6, #3
 8023aae:	0a09      	lsrs	r1, r1, #8
 8023ab0:	f003 03f8 	and.w	r3, r3, #248	@ 0xf8
 8023ab4:	00f6      	lsls	r6, r6, #3
 8023ab6:	4353      	muls	r3, r2
 8023ab8:	f401 417f 	and.w	r1, r1, #65280	@ 0xff00
 8023abc:	f000 00fc 	and.w	r0, r0, #252	@ 0xfc
 8023ac0:	b2f6      	uxtb	r6, r6
 8023ac2:	4321      	orrs	r1, r4
 8023ac4:	4350      	muls	r0, r2
 8023ac6:	4356      	muls	r6, r2
 8023ac8:	1c5a      	adds	r2, r3, #1
 8023aca:	eb02 2213 	add.w	r2, r2, r3, lsr #8
 8023ace:	0c0b      	lsrs	r3, r1, #16
 8023ad0:	eb03 2312 	add.w	r3, r3, r2, lsr #8
 8023ad4:	1c42      	adds	r2, r0, #1
 8023ad6:	eb02 2010 	add.w	r0, r2, r0, lsr #8
 8023ada:	0a0a      	lsrs	r2, r1, #8
 8023adc:	eb02 2210 	add.w	r2, r2, r0, lsr #8
 8023ae0:	021b      	lsls	r3, r3, #8
 8023ae2:	00d2      	lsls	r2, r2, #3
 8023ae4:	f402 62fc 	and.w	r2, r2, #2016	@ 0x7e0
 8023ae8:	f403 4378 	and.w	r3, r3, #63488	@ 0xf800
 8023aec:	4313      	orrs	r3, r2
 8023aee:	1c72      	adds	r2, r6, #1
 8023af0:	eb02 2616 	add.w	r6, r2, r6, lsr #8
 8023af4:	eb01 2116 	add.w	r1, r1, r6, lsr #8
 8023af8:	f3c1 01c4 	ubfx	r1, r1, #3, #5
 8023afc:	4319      	orrs	r1, r3
 8023afe:	9b02      	ldr	r3, [sp, #8]
 8023b00:	8019      	strh	r1, [r3, #0]
 8023b02:	b005      	add	sp, #20
 8023b04:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 8023b08:	2500      	movs	r5, #0
 8023b0a:	e6fe      	b.n	802390a <_ZNK8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKmssiihh+0x3c>
 8023b0c:	2100      	movs	r1, #0
 8023b0e:	460d      	mov	r5, r1
 8023b10:	e706      	b.n	8023920 <_ZNK8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKmssiihh+0x52>
 8023b12:	2100      	movs	r1, #0
 8023b14:	e704      	b.n	8023920 <_ZNK8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKmssiihh+0x52>
 8023b16:	4631      	mov	r1, r6
 8023b18:	e702      	b.n	8023920 <_ZNK8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKmssiihh+0x52>
 8023b1a:	2400      	movs	r4, #0
 8023b1c:	e713      	b.n	8023946 <_ZNK8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKmssiihh+0x78>
 8023b1e:	2200      	movs	r2, #0
 8023b20:	4614      	mov	r4, r2
 8023b22:	e71a      	b.n	802395a <_ZNK8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKmssiihh+0x8c>
 8023b24:	4602      	mov	r2, r0
 8023b26:	4604      	mov	r4, r0
 8023b28:	e717      	b.n	802395a <_ZNK8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKmssiihh+0x8c>
 8023b2a:	2200      	movs	r2, #0
 8023b2c:	e715      	b.n	802395a <_ZNK8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKmssiihh+0x8c>
 8023b2e:	4632      	mov	r2, r6
 8023b30:	e713      	b.n	802395a <_ZNK8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKmssiihh+0x8c>
	...

08023b34 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff>:
 8023b34:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8023b38:	b09b      	sub	sp, #108	@ 0x6c
 8023b3a:	e9dd 4625 	ldrd	r4, r6, [sp, #148]	@ 0x94
 8023b3e:	9218      	str	r2, [sp, #96]	@ 0x60
 8023b40:	9a29      	ldr	r2, [sp, #164]	@ 0xa4
 8023b42:	9116      	str	r1, [sp, #88]	@ 0x58
 8023b44:	9307      	str	r3, [sp, #28]
 8023b46:	e9dd 132a 	ldrd	r1, r3, [sp, #168]	@ 0xa8
 8023b4a:	9019      	str	r0, [sp, #100]	@ 0x64
 8023b4c:	6850      	ldr	r0, [r2, #4]
 8023b4e:	6812      	ldr	r2, [r2, #0]
 8023b50:	fb00 1303 	mla	r3, r0, r3, r1
 8023b54:	eb02 0343 	add.w	r3, r2, r3, lsl #1
 8023b58:	930a      	str	r3, [sp, #40]	@ 0x28
 8023b5a:	9b2c      	ldr	r3, [sp, #176]	@ 0xb0
 8023b5c:	681b      	ldr	r3, [r3, #0]
 8023b5e:	930f      	str	r3, [sp, #60]	@ 0x3c
 8023b60:	9b16      	ldr	r3, [sp, #88]	@ 0x58
 8023b62:	2b00      	cmp	r3, #0
 8023b64:	dc03      	bgt.n	8023b6e <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3a>
 8023b66:	9b18      	ldr	r3, [sp, #96]	@ 0x60
 8023b68:	2b00      	cmp	r3, #0
 8023b6a:	f340 8386 	ble.w	802427a <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x746>
 8023b6e:	9b2c      	ldr	r3, [sp, #176]	@ 0xb0
 8023b70:	f9b3 1008 	ldrsh.w	r1, [r3, #8]
 8023b74:	f9b3 200c 	ldrsh.w	r2, [r3, #12]
 8023b78:	1e48      	subs	r0, r1, #1
 8023b7a:	1e57      	subs	r7, r2, #1
 8023b7c:	9b07      	ldr	r3, [sp, #28]
 8023b7e:	2b00      	cmp	r3, #0
 8023b80:	f340 8166 	ble.w	8023e50 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x31c>
 8023b84:	ea5f 4c24 	movs.w	ip, r4, asr #16
 8023b88:	ea4f 4326 	mov.w	r3, r6, asr #16
 8023b8c:	d406      	bmi.n	8023b9c <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x68>
 8023b8e:	4584      	cmp	ip, r0
 8023b90:	da04      	bge.n	8023b9c <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x68>
 8023b92:	2b00      	cmp	r3, #0
 8023b94:	db02      	blt.n	8023b9c <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x68>
 8023b96:	42bb      	cmp	r3, r7
 8023b98:	f2c0 815b 	blt.w	8023e52 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x31e>
 8023b9c:	f11c 0c01 	adds.w	ip, ip, #1
 8023ba0:	f100 814b 	bmi.w	8023e3a <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x306>
 8023ba4:	4561      	cmp	r1, ip
 8023ba6:	f2c0 8148 	blt.w	8023e3a <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x306>
 8023baa:	3301      	adds	r3, #1
 8023bac:	f100 8145 	bmi.w	8023e3a <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x306>
 8023bb0:	429a      	cmp	r2, r3
 8023bb2:	f2c0 8142 	blt.w	8023e3a <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x306>
 8023bb6:	9b07      	ldr	r3, [sp, #28]
 8023bb8:	9f0a      	ldr	r7, [sp, #40]	@ 0x28
 8023bba:	9317      	str	r3, [sp, #92]	@ 0x5c
 8023bbc:	9b17      	ldr	r3, [sp, #92]	@ 0x5c
 8023bbe:	2b00      	cmp	r3, #0
 8023bc0:	f340 8165 	ble.w	8023e8e <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x35a>
 8023bc4:	9a2c      	ldr	r2, [sp, #176]	@ 0xb0
 8023bc6:	9b2c      	ldr	r3, [sp, #176]	@ 0xb0
 8023bc8:	f8d2 e00c 	ldr.w	lr, [r2, #12]
 8023bcc:	689b      	ldr	r3, [r3, #8]
 8023bce:	1422      	asrs	r2, r4, #16
 8023bd0:	ea4f 4c26 	mov.w	ip, r6, asr #16
 8023bd4:	f3c4 3103 	ubfx	r1, r4, #12, #4
 8023bd8:	f3c6 3003 	ubfx	r0, r6, #12, #4
 8023bdc:	f100 81d5 	bmi.w	8023f8a <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x456>
 8023be0:	f103 38ff 	add.w	r8, r3, #4294967295
 8023be4:	4542      	cmp	r2, r8
 8023be6:	f280 81d0 	bge.w	8023f8a <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x456>
 8023bea:	f1bc 0f00 	cmp.w	ip, #0
 8023bee:	f2c0 81cc 	blt.w	8023f8a <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x456>
 8023bf2:	f10e 38ff 	add.w	r8, lr, #4294967295
 8023bf6:	45c4      	cmp	ip, r8
 8023bf8:	f280 81c7 	bge.w	8023f8a <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x456>
 8023bfc:	b21b      	sxth	r3, r3
 8023bfe:	fb0c 2203 	mla	r2, ip, r3, r2
 8023c02:	9d0f      	ldr	r5, [sp, #60]	@ 0x3c
 8023c04:	eb05 0882 	add.w	r8, r5, r2, lsl #2
 8023c08:	f855 2022 	ldr.w	r2, [r5, r2, lsl #2]
 8023c0c:	ea4f 6e12 	mov.w	lr, r2, lsr #24
 8023c10:	2900      	cmp	r1, #0
 8023c12:	f000 8182 	beq.w	8023f1a <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3e6>
 8023c16:	f8d8 5004 	ldr.w	r5, [r8, #4]
 8023c1a:	950b      	str	r5, [sp, #44]	@ 0x2c
 8023c1c:	0e2d      	lsrs	r5, r5, #24
 8023c1e:	9512      	str	r5, [sp, #72]	@ 0x48
 8023c20:	b180      	cbz	r0, 8023c44 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x110>
 8023c22:	f103 4380 	add.w	r3, r3, #1073741824	@ 0x40000000
 8023c26:	3b01      	subs	r3, #1
 8023c28:	009b      	lsls	r3, r3, #2
 8023c2a:	3304      	adds	r3, #4
 8023c2c:	eb08 0c03 	add.w	ip, r8, r3
 8023c30:	f858 3003 	ldr.w	r3, [r8, r3]
 8023c34:	9308      	str	r3, [sp, #32]
 8023c36:	0e1b      	lsrs	r3, r3, #24
 8023c38:	9310      	str	r3, [sp, #64]	@ 0x40
 8023c3a:	f8dc 3004 	ldr.w	r3, [ip, #4]
 8023c3e:	930c      	str	r3, [sp, #48]	@ 0x30
 8023c40:	0e1b      	lsrs	r3, r3, #24
 8023c42:	9313      	str	r3, [sp, #76]	@ 0x4c
 8023c44:	b289      	uxth	r1, r1
 8023c46:	b280      	uxth	r0, r0
 8023c48:	fb01 f900 	mul.w	r9, r1, r0
 8023c4c:	ebc9 1000 	rsb	r0, r9, r0, lsl #4
 8023c50:	0109      	lsls	r1, r1, #4
 8023c52:	eba1 0809 	sub.w	r8, r1, r9
 8023c56:	b280      	uxth	r0, r0
 8023c58:	f5c1 7180 	rsb	r1, r1, #256	@ 0x100
 8023c5c:	9b12      	ldr	r3, [sp, #72]	@ 0x48
 8023c5e:	9d10      	ldr	r5, [sp, #64]	@ 0x40
 8023c60:	fa1f f888 	uxth.w	r8, r8
 8023c64:	1a09      	subs	r1, r1, r0
 8023c66:	b289      	uxth	r1, r1
 8023c68:	fb08 f303 	mul.w	r3, r8, r3
 8023c6c:	fb01 330e 	mla	r3, r1, lr, r3
 8023c70:	fb00 3305 	mla	r3, r0, r5, r3
 8023c74:	9d13      	ldr	r5, [sp, #76]	@ 0x4c
 8023c76:	fb09 3305 	mla	r3, r9, r5, r3
 8023c7a:	f3c3 2307 	ubfx	r3, r3, #8, #8
 8023c7e:	2b00      	cmp	r3, #0
 8023c80:	f000 80d2 	beq.w	8023e28 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2f4>
 8023c84:	f1be 0fff 	cmp.w	lr, #255	@ 0xff
 8023c88:	d01b      	beq.n	8023cc2 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x18e>
 8023c8a:	f002 1aff 	and.w	sl, r2, #16711935	@ 0xff00ff
 8023c8e:	fb0e fa0a 	mul.w	sl, lr, sl
 8023c92:	f402 427f 	and.w	r2, r2, #65280	@ 0xff00
 8023c96:	fb0e fe02 	mul.w	lr, lr, r2
 8023c9a:	ea4f 221a 	mov.w	r2, sl, lsr #8
 8023c9e:	f002 12ff 	and.w	r2, r2, #16711935	@ 0xff00ff
 8023ca2:	f10a 1a01 	add.w	sl, sl, #65537	@ 0x10001
 8023ca6:	f50e 7c80 	add.w	ip, lr, #256	@ 0x100
 8023caa:	4452      	add	r2, sl
 8023cac:	eb0c 2c1e 	add.w	ip, ip, lr, lsr #8
 8023cb0:	0a12      	lsrs	r2, r2, #8
 8023cb2:	ea4f 2c1c 	mov.w	ip, ip, lsr #8
 8023cb6:	f002 12ff 	and.w	r2, r2, #16711935	@ 0xff00ff
 8023cba:	f40c 4c7f 	and.w	ip, ip, #65280	@ 0xff00
 8023cbe:	ea42 020c 	orr.w	r2, r2, ip
 8023cc2:	9d12      	ldr	r5, [sp, #72]	@ 0x48
 8023cc4:	2dff      	cmp	r5, #255	@ 0xff
 8023cc6:	d021      	beq.n	8023d0c <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1d8>
 8023cc8:	9d0b      	ldr	r5, [sp, #44]	@ 0x2c
 8023cca:	f005 1bff 	and.w	fp, r5, #16711935	@ 0xff00ff
 8023cce:	9d12      	ldr	r5, [sp, #72]	@ 0x48
 8023cd0:	fb05 fb0b 	mul.w	fp, r5, fp
 8023cd4:	9d0b      	ldr	r5, [sp, #44]	@ 0x2c
 8023cd6:	f405 4a7f 	and.w	sl, r5, #65280	@ 0xff00
 8023cda:	9d12      	ldr	r5, [sp, #72]	@ 0x48
 8023cdc:	ea4f 2e1b 	mov.w	lr, fp, lsr #8
 8023ce0:	fb05 fa0a 	mul.w	sl, r5, sl
 8023ce4:	f00e 1eff 	and.w	lr, lr, #16711935	@ 0xff00ff
 8023ce8:	f10b 1b01 	add.w	fp, fp, #65537	@ 0x10001
 8023cec:	f50a 7c80 	add.w	ip, sl, #256	@ 0x100
 8023cf0:	44de      	add	lr, fp
 8023cf2:	eb0c 2a1a 	add.w	sl, ip, sl, lsr #8
 8023cf6:	ea4f 2e1e 	mov.w	lr, lr, lsr #8
 8023cfa:	ea4f 2a1a 	mov.w	sl, sl, lsr #8
 8023cfe:	f00e 1eff 	and.w	lr, lr, #16711935	@ 0xff00ff
 8023d02:	f40a 4a7f 	and.w	sl, sl, #65280	@ 0xff00
 8023d06:	ea4e 050a 	orr.w	r5, lr, sl
 8023d0a:	950b      	str	r5, [sp, #44]	@ 0x2c
 8023d0c:	9d10      	ldr	r5, [sp, #64]	@ 0x40
 8023d0e:	2dff      	cmp	r5, #255	@ 0xff
 8023d10:	d021      	beq.n	8023d56 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x222>
 8023d12:	9d08      	ldr	r5, [sp, #32]
 8023d14:	f005 1bff 	and.w	fp, r5, #16711935	@ 0xff00ff
 8023d18:	9d10      	ldr	r5, [sp, #64]	@ 0x40
 8023d1a:	fb05 fb0b 	mul.w	fp, r5, fp
 8023d1e:	9d08      	ldr	r5, [sp, #32]
 8023d20:	f405 4e7f 	and.w	lr, r5, #65280	@ 0xff00
 8023d24:	9d10      	ldr	r5, [sp, #64]	@ 0x40
 8023d26:	fb05 fa0e 	mul.w	sl, r5, lr
 8023d2a:	ea4f 2e1b 	mov.w	lr, fp, lsr #8
 8023d2e:	f00e 1eff 	and.w	lr, lr, #16711935	@ 0xff00ff
 8023d32:	f10b 1b01 	add.w	fp, fp, #65537	@ 0x10001
 8023d36:	f50a 7c80 	add.w	ip, sl, #256	@ 0x100
 8023d3a:	44de      	add	lr, fp
 8023d3c:	eb0c 2a1a 	add.w	sl, ip, sl, lsr #8
 8023d40:	ea4f 2e1e 	mov.w	lr, lr, lsr #8
 8023d44:	ea4f 2a1a 	mov.w	sl, sl, lsr #8
 8023d48:	f00e 1eff 	and.w	lr, lr, #16711935	@ 0xff00ff
 8023d4c:	f40a 4a7f 	and.w	sl, sl, #65280	@ 0xff00
 8023d50:	ea4e 050a 	orr.w	r5, lr, sl
 8023d54:	9508      	str	r5, [sp, #32]
 8023d56:	9d13      	ldr	r5, [sp, #76]	@ 0x4c
 8023d58:	2dff      	cmp	r5, #255	@ 0xff
 8023d5a:	d021      	beq.n	8023da0 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x26c>
 8023d5c:	9d0c      	ldr	r5, [sp, #48]	@ 0x30
 8023d5e:	f005 1bff 	and.w	fp, r5, #16711935	@ 0xff00ff
 8023d62:	9d13      	ldr	r5, [sp, #76]	@ 0x4c
 8023d64:	fb05 fb0b 	mul.w	fp, r5, fp
 8023d68:	9d0c      	ldr	r5, [sp, #48]	@ 0x30
 8023d6a:	f405 4a7f 	and.w	sl, r5, #65280	@ 0xff00
 8023d6e:	9d13      	ldr	r5, [sp, #76]	@ 0x4c
 8023d70:	ea4f 2e1b 	mov.w	lr, fp, lsr #8
 8023d74:	fb05 fa0a 	mul.w	sl, r5, sl
 8023d78:	f00e 1eff 	and.w	lr, lr, #16711935	@ 0xff00ff
 8023d7c:	f10b 1b01 	add.w	fp, fp, #65537	@ 0x10001
 8023d80:	f50a 7c80 	add.w	ip, sl, #256	@ 0x100
 8023d84:	44de      	add	lr, fp
 8023d86:	eb0c 2a1a 	add.w	sl, ip, sl, lsr #8
 8023d8a:	ea4f 2e1e 	mov.w	lr, lr, lsr #8
 8023d8e:	ea4f 2a1a 	mov.w	sl, sl, lsr #8
 8023d92:	f00e 1eff 	and.w	lr, lr, #16711935	@ 0xff00ff
 8023d96:	f40a 4a7f 	and.w	sl, sl, #65280	@ 0xff00
 8023d9a:	ea4e 050a 	orr.w	r5, lr, sl
 8023d9e:	950c      	str	r5, [sp, #48]	@ 0x30
 8023da0:	9d0b      	ldr	r5, [sp, #44]	@ 0x2c
 8023da2:	f005 1cff 	and.w	ip, r5, #16711935	@ 0xff00ff
 8023da6:	9d08      	ldr	r5, [sp, #32]
 8023da8:	f002 1eff 	and.w	lr, r2, #16711935	@ 0xff00ff
 8023dac:	fb08 fc0c 	mul.w	ip, r8, ip
 8023db0:	fb01 cc0e 	mla	ip, r1, lr, ip
 8023db4:	f005 1eff 	and.w	lr, r5, #16711935	@ 0xff00ff
 8023db8:	9d0c      	ldr	r5, [sp, #48]	@ 0x30
 8023dba:	fb00 cc0e 	mla	ip, r0, lr, ip
 8023dbe:	f005 1eff 	and.w	lr, r5, #16711935	@ 0xff00ff
 8023dc2:	9d0b      	ldr	r5, [sp, #44]	@ 0x2c
 8023dc4:	fb09 cc0e 	mla	ip, r9, lr, ip
 8023dc8:	f405 4e7f 	and.w	lr, r5, #65280	@ 0xff00
 8023dcc:	f402 427f 	and.w	r2, r2, #65280	@ 0xff00
 8023dd0:	fb08 f80e 	mul.w	r8, r8, lr
 8023dd4:	fb01 8202 	mla	r2, r1, r2, r8
 8023dd8:	9908      	ldr	r1, [sp, #32]
 8023dda:	f401 4a7f 	and.w	sl, r1, #65280	@ 0xff00
 8023dde:	990c      	ldr	r1, [sp, #48]	@ 0x30
 8023de0:	fb00 220a 	mla	r2, r0, sl, r2
 8023de4:	f401 407f 	and.w	r0, r1, #65280	@ 0xff00
 8023de8:	fb09 2900 	mla	r9, r9, r0, r2
 8023dec:	ea4f 2c1c 	mov.w	ip, ip, lsr #8
 8023df0:	ea4f 2919 	mov.w	r9, r9, lsr #8
 8023df4:	f00c 1cff 	and.w	ip, ip, #16711935	@ 0xff00ff
 8023df8:	f409 497f 	and.w	r9, r9, #65280	@ 0xff00
 8023dfc:	ea4c 0c09 	orr.w	ip, ip, r9
 8023e00:	2bff      	cmp	r3, #255	@ 0xff
 8023e02:	ea4f 221c 	mov.w	r2, ip, lsr #8
 8023e06:	f040 8091 	bne.w	8023f2c <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3f8>
 8023e0a:	ea4f 135c 	mov.w	r3, ip, lsr #5
 8023e0e:	f422 62ff 	bic.w	r2, r2, #2040	@ 0x7f8
 8023e12:	f403 63fc 	and.w	r3, r3, #2016	@ 0x7e0
 8023e16:	f022 0207 	bic.w	r2, r2, #7
 8023e1a:	431a      	orrs	r2, r3
 8023e1c:	f3cc 0cc4 	ubfx	ip, ip, #3, #5
 8023e20:	ea4c 0c02 	orr.w	ip, ip, r2
 8023e24:	f8a7 c000 	strh.w	ip, [r7]
 8023e28:	9b27      	ldr	r3, [sp, #156]	@ 0x9c
 8023e2a:	441c      	add	r4, r3
 8023e2c:	9b28      	ldr	r3, [sp, #160]	@ 0xa0
 8023e2e:	441e      	add	r6, r3
 8023e30:	9b17      	ldr	r3, [sp, #92]	@ 0x5c
 8023e32:	3b01      	subs	r3, #1
 8023e34:	3702      	adds	r7, #2
 8023e36:	9317      	str	r3, [sp, #92]	@ 0x5c
 8023e38:	e6c0      	b.n	8023bbc <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x88>
 8023e3a:	9b27      	ldr	r3, [sp, #156]	@ 0x9c
 8023e3c:	441c      	add	r4, r3
 8023e3e:	9b28      	ldr	r3, [sp, #160]	@ 0xa0
 8023e40:	441e      	add	r6, r3
 8023e42:	9b07      	ldr	r3, [sp, #28]
 8023e44:	3b01      	subs	r3, #1
 8023e46:	9307      	str	r3, [sp, #28]
 8023e48:	9b0a      	ldr	r3, [sp, #40]	@ 0x28
 8023e4a:	3302      	adds	r3, #2
 8023e4c:	930a      	str	r3, [sp, #40]	@ 0x28
 8023e4e:	e695      	b.n	8023b7c <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x48>
 8023e50:	d024      	beq.n	8023e9c <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x368>
 8023e52:	9b07      	ldr	r3, [sp, #28]
 8023e54:	9827      	ldr	r0, [sp, #156]	@ 0x9c
 8023e56:	3b01      	subs	r3, #1
 8023e58:	fb00 4003 	mla	r0, r0, r3, r4
 8023e5c:	1400      	asrs	r0, r0, #16
 8023e5e:	f53f aeaa 	bmi.w	8023bb6 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x82>
 8023e62:	3901      	subs	r1, #1
 8023e64:	4288      	cmp	r0, r1
 8023e66:	f6bf aea6 	bge.w	8023bb6 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x82>
 8023e6a:	9928      	ldr	r1, [sp, #160]	@ 0xa0
 8023e6c:	fb01 6303 	mla	r3, r1, r3, r6
 8023e70:	141b      	asrs	r3, r3, #16
 8023e72:	f53f aea0 	bmi.w	8023bb6 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x82>
 8023e76:	3a01      	subs	r2, #1
 8023e78:	4293      	cmp	r3, r2
 8023e7a:	f6bf ae9c 	bge.w	8023bb6 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x82>
 8023e7e:	f8dd b01c 	ldr.w	fp, [sp, #28]
 8023e82:	f8dd 8028 	ldr.w	r8, [sp, #40]	@ 0x28
 8023e86:	f1bb 0f00 	cmp.w	fp, #0
 8023e8a:	f300 809a 	bgt.w	8023fc2 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x48e>
 8023e8e:	9b07      	ldr	r3, [sp, #28]
 8023e90:	ea23 75e3 	bic.w	r5, r3, r3, asr #31
 8023e94:	9b0a      	ldr	r3, [sp, #40]	@ 0x28
 8023e96:	eb03 0345 	add.w	r3, r3, r5, lsl #1
 8023e9a:	930a      	str	r3, [sp, #40]	@ 0x28
 8023e9c:	9b16      	ldr	r3, [sp, #88]	@ 0x58
 8023e9e:	2b00      	cmp	r3, #0
 8023ea0:	f340 81eb 	ble.w	802427a <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x746>
 8023ea4:	ee30 0a04 	vadd.f32	s0, s0, s8
 8023ea8:	eeb7 7a00 	vmov.f32	s14, #112	@ 0x3f800000  1.0
 8023eac:	eec7 7a00 	vdiv.f32	s15, s14, s0
 8023eb0:	9b24      	ldr	r3, [sp, #144]	@ 0x90
 8023eb2:	ee70 0aa4 	vadd.f32	s1, s1, s9
 8023eb6:	ee31 1a05 	vadd.f32	s2, s2, s10
 8023eba:	ee20 7aa7 	vmul.f32	s14, s1, s15
 8023ebe:	eef0 6a62 	vmov.f32	s13, s5
 8023ec2:	ee61 7a27 	vmul.f32	s15, s2, s15
 8023ec6:	eefe 6ac8 	vcvt.s32.f32	s13, s13, #16
 8023eca:	ee77 2a62 	vsub.f32	s5, s14, s5
 8023ece:	ee16 4a90 	vmov	r4, s13
 8023ed2:	eefe 2ac8 	vcvt.s32.f32	s5, s5, #16
 8023ed6:	eef0 6a43 	vmov.f32	s13, s6
 8023eda:	ee37 3ac3 	vsub.f32	s6, s15, s6
 8023ede:	ee12 2a90 	vmov	r2, s5
 8023ee2:	eebe 3ac8 	vcvt.s32.f32	s6, s6, #16
 8023ee6:	fb92 f3f3 	sdiv	r3, r2, r3
 8023eea:	ee13 2a10 	vmov	r2, s6
 8023eee:	9327      	str	r3, [sp, #156]	@ 0x9c
 8023ef0:	9b24      	ldr	r3, [sp, #144]	@ 0x90
 8023ef2:	fb92 f3f3 	sdiv	r3, r2, r3
 8023ef6:	9328      	str	r3, [sp, #160]	@ 0xa0
 8023ef8:	9b16      	ldr	r3, [sp, #88]	@ 0x58
 8023efa:	9a18      	ldr	r2, [sp, #96]	@ 0x60
 8023efc:	3b01      	subs	r3, #1
 8023efe:	eefe 6ac8 	vcvt.s32.f32	s13, s13, #16
 8023f02:	9316      	str	r3, [sp, #88]	@ 0x58
 8023f04:	9b24      	ldr	r3, [sp, #144]	@ 0x90
 8023f06:	bf08      	it	eq
 8023f08:	4613      	moveq	r3, r2
 8023f0a:	ee16 6a90 	vmov	r6, s13
 8023f0e:	9307      	str	r3, [sp, #28]
 8023f10:	eeb0 3a67 	vmov.f32	s6, s15
 8023f14:	eef0 2a47 	vmov.f32	s5, s14
 8023f18:	e622      	b.n	8023b60 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2c>
 8023f1a:	2800      	cmp	r0, #0
 8023f1c:	f43f ae92 	beq.w	8023c44 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x110>
 8023f20:	f858 3023 	ldr.w	r3, [r8, r3, lsl #2]
 8023f24:	9308      	str	r3, [sp, #32]
 8023f26:	0e1b      	lsrs	r3, r3, #24
 8023f28:	9310      	str	r3, [sp, #64]	@ 0x40
 8023f2a:	e68b      	b.n	8023c44 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x110>
 8023f2c:	8839      	ldrh	r1, [r7, #0]
 8023f2e:	4dd4      	ldr	r5, [pc, #848]	@ (8024280 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x74c>)
 8023f30:	43db      	mvns	r3, r3
 8023f32:	ea4f 2e21 	mov.w	lr, r1, asr #8
 8023f36:	fa5f f883 	uxtb.w	r8, r3
 8023f3a:	f00e 0ef8 	and.w	lr, lr, #248	@ 0xf8
 8023f3e:	fb0e fe08 	mul.w	lr, lr, r8
 8023f42:	10c8      	asrs	r0, r1, #3
 8023f44:	00cb      	lsls	r3, r1, #3
 8023f46:	f000 00fc 	and.w	r0, r0, #252	@ 0xfc
 8023f4a:	f10e 0101 	add.w	r1, lr, #1
 8023f4e:	eb01 2e1e 	add.w	lr, r1, lr, lsr #8
 8023f52:	fb00 f008 	mul.w	r0, r0, r8
 8023f56:	ea4f 411c 	mov.w	r1, ip, lsr #16
 8023f5a:	eb01 211e 	add.w	r1, r1, lr, lsr #8
 8023f5e:	f100 0e01 	add.w	lr, r0, #1
 8023f62:	eb0e 2010 	add.w	r0, lr, r0, lsr #8
 8023f66:	eb02 2210 	add.w	r2, r2, r0, lsr #8
 8023f6a:	b2db      	uxtb	r3, r3
 8023f6c:	b2c9      	uxtb	r1, r1
 8023f6e:	00d2      	lsls	r2, r2, #3
 8023f70:	fb03 f308 	mul.w	r3, r3, r8
 8023f74:	ea05 2101 	and.w	r1, r5, r1, lsl #8
 8023f78:	f402 62fc 	and.w	r2, r2, #2016	@ 0x7e0
 8023f7c:	430a      	orrs	r2, r1
 8023f7e:	1c59      	adds	r1, r3, #1
 8023f80:	eb01 2313 	add.w	r3, r1, r3, lsr #8
 8023f84:	eb0c 2c13 	add.w	ip, ip, r3, lsr #8
 8023f88:	e748      	b.n	8023e1c <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2e8>
 8023f8a:	f112 0801 	adds.w	r8, r2, #1
 8023f8e:	f53f af4b 	bmi.w	8023e28 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2f4>
 8023f92:	4543      	cmp	r3, r8
 8023f94:	f6ff af48 	blt.w	8023e28 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2f4>
 8023f98:	f11c 0801 	adds.w	r8, ip, #1
 8023f9c:	f53f af44 	bmi.w	8023e28 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2f4>
 8023fa0:	45c6      	cmp	lr, r8
 8023fa2:	f6ff af41 	blt.w	8023e28 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2f4>
 8023fa6:	e9cd 2c01 	strd	r2, ip, [sp, #4]
 8023faa:	fa0f f28e 	sxth.w	r2, lr
 8023fae:	e9cd 1003 	strd	r1, r0, [sp, #12]
 8023fb2:	9200      	str	r2, [sp, #0]
 8023fb4:	b21b      	sxth	r3, r3
 8023fb6:	9a0f      	ldr	r2, [sp, #60]	@ 0x3c
 8023fb8:	9819      	ldr	r0, [sp, #100]	@ 0x64
 8023fba:	4639      	mov	r1, r7
 8023fbc:	f7ff fc87 	bl	80238ce <_ZNK8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKmssiihh>
 8023fc0:	e732      	b.n	8023e28 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2f4>
 8023fc2:	9b2c      	ldr	r3, [sp, #176]	@ 0xb0
 8023fc4:	9d0f      	ldr	r5, [sp, #60]	@ 0x3c
 8023fc6:	f9b3 7008 	ldrsh.w	r7, [r3, #8]
 8023fca:	1421      	asrs	r1, r4, #16
 8023fcc:	1433      	asrs	r3, r6, #16
 8023fce:	fb07 1303 	mla	r3, r7, r3, r1
 8023fd2:	990f      	ldr	r1, [sp, #60]	@ 0x3c
 8023fd4:	eb01 0183 	add.w	r1, r1, r3, lsl #2
 8023fd8:	f855 3023 	ldr.w	r3, [r5, r3, lsl #2]
 8023fdc:	f3c4 3203 	ubfx	r2, r4, #12, #4
 8023fe0:	f3c6 3003 	ubfx	r0, r6, #12, #4
 8023fe4:	ea4f 6c13 	mov.w	ip, r3, lsr #24
 8023fe8:	2a00      	cmp	r2, #0
 8023fea:	f000 8107 	beq.w	80241fc <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x6c8>
 8023fee:	684d      	ldr	r5, [r1, #4]
 8023ff0:	950d      	str	r5, [sp, #52]	@ 0x34
 8023ff2:	0e2d      	lsrs	r5, r5, #24
 8023ff4:	9514      	str	r5, [sp, #80]	@ 0x50
 8023ff6:	b178      	cbz	r0, 8024018 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x4e4>
 8023ff8:	f107 4780 	add.w	r7, r7, #1073741824	@ 0x40000000
 8023ffc:	3f01      	subs	r7, #1
 8023ffe:	00bf      	lsls	r7, r7, #2
 8024000:	3704      	adds	r7, #4
 8024002:	eb01 0e07 	add.w	lr, r1, r7
 8024006:	59c9      	ldr	r1, [r1, r7]
 8024008:	9109      	str	r1, [sp, #36]	@ 0x24
 802400a:	0e09      	lsrs	r1, r1, #24
 802400c:	9111      	str	r1, [sp, #68]	@ 0x44
 802400e:	f8de 1004 	ldr.w	r1, [lr, #4]
 8024012:	910e      	str	r1, [sp, #56]	@ 0x38
 8024014:	0e09      	lsrs	r1, r1, #24
 8024016:	9115      	str	r1, [sp, #84]	@ 0x54
 8024018:	b292      	uxth	r2, r2
 802401a:	b280      	uxth	r0, r0
 802401c:	fb02 f900 	mul.w	r9, r2, r0
 8024020:	ebc9 1000 	rsb	r0, r9, r0, lsl #4
 8024024:	0112      	lsls	r2, r2, #4
 8024026:	eba2 0e09 	sub.w	lr, r2, r9
 802402a:	b280      	uxth	r0, r0
 802402c:	f5c2 7180 	rsb	r1, r2, #256	@ 0x100
 8024030:	9a14      	ldr	r2, [sp, #80]	@ 0x50
 8024032:	9d11      	ldr	r5, [sp, #68]	@ 0x44
 8024034:	fa1f fe8e 	uxth.w	lr, lr
 8024038:	1a09      	subs	r1, r1, r0
 802403a:	b289      	uxth	r1, r1
 802403c:	fb0e f202 	mul.w	r2, lr, r2
 8024040:	fb01 220c 	mla	r2, r1, ip, r2
 8024044:	fb00 2205 	mla	r2, r0, r5, r2
 8024048:	9d15      	ldr	r5, [sp, #84]	@ 0x54
 802404a:	fb09 2205 	mla	r2, r9, r5, r2
 802404e:	f3c2 2207 	ubfx	r2, r2, #8, #8
 8024052:	2a00      	cmp	r2, #0
 8024054:	f000 80c9 	beq.w	80241ea <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x6b6>
 8024058:	f1bc 0fff 	cmp.w	ip, #255	@ 0xff
 802405c:	d019      	beq.n	8024092 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x55e>
 802405e:	f003 1aff 	and.w	sl, r3, #16711935	@ 0xff00ff
 8024062:	fb0c fa0a 	mul.w	sl, ip, sl
 8024066:	f403 437f 	and.w	r3, r3, #65280	@ 0xff00
 802406a:	fb0c fc03 	mul.w	ip, ip, r3
 802406e:	ea4f 231a 	mov.w	r3, sl, lsr #8
 8024072:	f003 13ff 	and.w	r3, r3, #16711935	@ 0xff00ff
 8024076:	f10a 1a01 	add.w	sl, sl, #65537	@ 0x10001
 802407a:	f50c 7780 	add.w	r7, ip, #256	@ 0x100
 802407e:	4453      	add	r3, sl
 8024080:	eb07 271c 	add.w	r7, r7, ip, lsr #8
 8024084:	0a1b      	lsrs	r3, r3, #8
 8024086:	0a3f      	lsrs	r7, r7, #8
 8024088:	f003 13ff 	and.w	r3, r3, #16711935	@ 0xff00ff
 802408c:	f407 477f 	and.w	r7, r7, #65280	@ 0xff00
 8024090:	433b      	orrs	r3, r7
 8024092:	9d14      	ldr	r5, [sp, #80]	@ 0x50
 8024094:	2dff      	cmp	r5, #255	@ 0xff
 8024096:	d020      	beq.n	80240da <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x5a6>
 8024098:	9d0d      	ldr	r5, [sp, #52]	@ 0x34
 802409a:	f005 17ff 	and.w	r7, r5, #16711935	@ 0xff00ff
 802409e:	9d14      	ldr	r5, [sp, #80]	@ 0x50
 80240a0:	436f      	muls	r7, r5
 80240a2:	9d0d      	ldr	r5, [sp, #52]	@ 0x34
 80240a4:	f405 4a7f 	and.w	sl, r5, #65280	@ 0xff00
 80240a8:	9d14      	ldr	r5, [sp, #80]	@ 0x50
 80240aa:	ea4f 2c17 	mov.w	ip, r7, lsr #8
 80240ae:	fb05 fa0a 	mul.w	sl, r5, sl
 80240b2:	f107 1701 	add.w	r7, r7, #65537	@ 0x10001
 80240b6:	f00c 1cff 	and.w	ip, ip, #16711935	@ 0xff00ff
 80240ba:	44bc      	add	ip, r7
 80240bc:	f50a 7780 	add.w	r7, sl, #256	@ 0x100
 80240c0:	eb07 2a1a 	add.w	sl, r7, sl, lsr #8
 80240c4:	ea4f 2c1c 	mov.w	ip, ip, lsr #8
 80240c8:	ea4f 2a1a 	mov.w	sl, sl, lsr #8
 80240cc:	f00c 1cff 	and.w	ip, ip, #16711935	@ 0xff00ff
 80240d0:	f40a 4a7f 	and.w	sl, sl, #65280	@ 0xff00
 80240d4:	ea4c 050a 	orr.w	r5, ip, sl
 80240d8:	950d      	str	r5, [sp, #52]	@ 0x34
 80240da:	9d11      	ldr	r5, [sp, #68]	@ 0x44
 80240dc:	2dff      	cmp	r5, #255	@ 0xff
 80240de:	d020      	beq.n	8024122 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x5ee>
 80240e0:	9d09      	ldr	r5, [sp, #36]	@ 0x24
 80240e2:	f005 17ff 	and.w	r7, r5, #16711935	@ 0xff00ff
 80240e6:	9d11      	ldr	r5, [sp, #68]	@ 0x44
 80240e8:	436f      	muls	r7, r5
 80240ea:	9d09      	ldr	r5, [sp, #36]	@ 0x24
 80240ec:	f405 4c7f 	and.w	ip, r5, #65280	@ 0xff00
 80240f0:	9d11      	ldr	r5, [sp, #68]	@ 0x44
 80240f2:	fb05 fa0c 	mul.w	sl, r5, ip
 80240f6:	ea4f 2c17 	mov.w	ip, r7, lsr #8
 80240fa:	f00c 1cff 	and.w	ip, ip, #16711935	@ 0xff00ff
 80240fe:	f107 1701 	add.w	r7, r7, #65537	@ 0x10001
 8024102:	44bc      	add	ip, r7
 8024104:	f50a 7780 	add.w	r7, sl, #256	@ 0x100
 8024108:	eb07 2a1a 	add.w	sl, r7, sl, lsr #8
 802410c:	ea4f 2c1c 	mov.w	ip, ip, lsr #8
 8024110:	ea4f 2a1a 	mov.w	sl, sl, lsr #8
 8024114:	f00c 1cff 	and.w	ip, ip, #16711935	@ 0xff00ff
 8024118:	f40a 4a7f 	and.w	sl, sl, #65280	@ 0xff00
 802411c:	ea4c 050a 	orr.w	r5, ip, sl
 8024120:	9509      	str	r5, [sp, #36]	@ 0x24
 8024122:	9d15      	ldr	r5, [sp, #84]	@ 0x54
 8024124:	2dff      	cmp	r5, #255	@ 0xff
 8024126:	d020      	beq.n	802416a <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x636>
 8024128:	9d0e      	ldr	r5, [sp, #56]	@ 0x38
 802412a:	f005 17ff 	and.w	r7, r5, #16711935	@ 0xff00ff
 802412e:	9d15      	ldr	r5, [sp, #84]	@ 0x54
 8024130:	436f      	muls	r7, r5
 8024132:	9d0e      	ldr	r5, [sp, #56]	@ 0x38
 8024134:	f405 4a7f 	and.w	sl, r5, #65280	@ 0xff00
 8024138:	9d15      	ldr	r5, [sp, #84]	@ 0x54
 802413a:	ea4f 2c17 	mov.w	ip, r7, lsr #8
 802413e:	fb05 fa0a 	mul.w	sl, r5, sl
 8024142:	f107 1701 	add.w	r7, r7, #65537	@ 0x10001
 8024146:	f00c 1cff 	and.w	ip, ip, #16711935	@ 0xff00ff
 802414a:	44bc      	add	ip, r7
 802414c:	f50a 7780 	add.w	r7, sl, #256	@ 0x100
 8024150:	eb07 2a1a 	add.w	sl, r7, sl, lsr #8
 8024154:	ea4f 2c1c 	mov.w	ip, ip, lsr #8
 8024158:	ea4f 2a1a 	mov.w	sl, sl, lsr #8
 802415c:	f00c 1cff 	and.w	ip, ip, #16711935	@ 0xff00ff
 8024160:	f40a 4a7f 	and.w	sl, sl, #65280	@ 0xff00
 8024164:	ea4c 050a 	orr.w	r5, ip, sl
 8024168:	950e      	str	r5, [sp, #56]	@ 0x38
 802416a:	9d0d      	ldr	r5, [sp, #52]	@ 0x34
 802416c:	f005 17ff 	and.w	r7, r5, #16711935	@ 0xff00ff
 8024170:	9d09      	ldr	r5, [sp, #36]	@ 0x24
 8024172:	f003 1cff 	and.w	ip, r3, #16711935	@ 0xff00ff
 8024176:	fb0e f707 	mul.w	r7, lr, r7
 802417a:	fb01 770c 	mla	r7, r1, ip, r7
 802417e:	f005 1cff 	and.w	ip, r5, #16711935	@ 0xff00ff
 8024182:	9d0e      	ldr	r5, [sp, #56]	@ 0x38
 8024184:	fb00 770c 	mla	r7, r0, ip, r7
 8024188:	f005 1cff 	and.w	ip, r5, #16711935	@ 0xff00ff
 802418c:	9d0d      	ldr	r5, [sp, #52]	@ 0x34
 802418e:	fb09 770c 	mla	r7, r9, ip, r7
 8024192:	f405 4c7f 	and.w	ip, r5, #65280	@ 0xff00
 8024196:	fb0e fe0c 	mul.w	lr, lr, ip
 802419a:	f403 437f 	and.w	r3, r3, #65280	@ 0xff00
 802419e:	fb01 e303 	mla	r3, r1, r3, lr
 80241a2:	9909      	ldr	r1, [sp, #36]	@ 0x24
 80241a4:	f401 4a7f 	and.w	sl, r1, #65280	@ 0xff00
 80241a8:	990e      	ldr	r1, [sp, #56]	@ 0x38
 80241aa:	fb00 330a 	mla	r3, r0, sl, r3
 80241ae:	f401 4c7f 	and.w	ip, r1, #65280	@ 0xff00
 80241b2:	fb09 3c0c 	mla	ip, r9, ip, r3
 80241b6:	0a3f      	lsrs	r7, r7, #8
 80241b8:	ea4f 2c1c 	mov.w	ip, ip, lsr #8
 80241bc:	f007 17ff 	and.w	r7, r7, #16711935	@ 0xff00ff
 80241c0:	f40c 4c7f 	and.w	ip, ip, #65280	@ 0xff00
 80241c4:	ea47 070c 	orr.w	r7, r7, ip
 80241c8:	2aff      	cmp	r2, #255	@ 0xff
 80241ca:	ea4f 2317 	mov.w	r3, r7, lsr #8
 80241ce:	d11e      	bne.n	802420e <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x6da>
 80241d0:	097a      	lsrs	r2, r7, #5
 80241d2:	f423 63ff 	bic.w	r3, r3, #2040	@ 0x7f8
 80241d6:	f402 62fc 	and.w	r2, r2, #2016	@ 0x7e0
 80241da:	f023 0307 	bic.w	r3, r3, #7
 80241de:	4313      	orrs	r3, r2
 80241e0:	f3c7 07c4 	ubfx	r7, r7, #3, #5
 80241e4:	431f      	orrs	r7, r3
 80241e6:	f8a8 7000 	strh.w	r7, [r8]
 80241ea:	9b27      	ldr	r3, [sp, #156]	@ 0x9c
 80241ec:	441c      	add	r4, r3
 80241ee:	9b28      	ldr	r3, [sp, #160]	@ 0xa0
 80241f0:	f108 0802 	add.w	r8, r8, #2
 80241f4:	441e      	add	r6, r3
 80241f6:	f10b 3bff 	add.w	fp, fp, #4294967295
 80241fa:	e644      	b.n	8023e86 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x352>
 80241fc:	2800      	cmp	r0, #0
 80241fe:	f43f af0b 	beq.w	8024018 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x4e4>
 8024202:	f851 1027 	ldr.w	r1, [r1, r7, lsl #2]
 8024206:	9109      	str	r1, [sp, #36]	@ 0x24
 8024208:	0e09      	lsrs	r1, r1, #24
 802420a:	9111      	str	r1, [sp, #68]	@ 0x44
 802420c:	e704      	b.n	8024018 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x4e4>
 802420e:	f8b8 1000 	ldrh.w	r1, [r8]
 8024212:	43d2      	mvns	r2, r2
 8024214:	ea4f 2c21 	mov.w	ip, r1, asr #8
 8024218:	fa5f fe82 	uxtb.w	lr, r2
 802421c:	f00c 0cf8 	and.w	ip, ip, #248	@ 0xf8
 8024220:	fb0c fc0e 	mul.w	ip, ip, lr
 8024224:	10c8      	asrs	r0, r1, #3
 8024226:	00ca      	lsls	r2, r1, #3
 8024228:	f10c 0101 	add.w	r1, ip, #1
 802422c:	eb01 2c1c 	add.w	ip, r1, ip, lsr #8
 8024230:	0c39      	lsrs	r1, r7, #16
 8024232:	eb01 2c1c 	add.w	ip, r1, ip, lsr #8
 8024236:	f000 00fc 	and.w	r0, r0, #252	@ 0xfc
 802423a:	4911      	ldr	r1, [pc, #68]	@ (8024280 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x74c>)
 802423c:	fb00 f00e 	mul.w	r0, r0, lr
 8024240:	fa5f fc8c 	uxtb.w	ip, ip
 8024244:	ea01 2c0c 	and.w	ip, r1, ip, lsl #8
 8024248:	b2d2      	uxtb	r2, r2
 802424a:	1c41      	adds	r1, r0, #1
 802424c:	fb02 f20e 	mul.w	r2, r2, lr
 8024250:	eb01 2010 	add.w	r0, r1, r0, lsr #8
 8024254:	eb03 2010 	add.w	r0, r3, r0, lsr #8
 8024258:	1c51      	adds	r1, r2, #1
 802425a:	00c0      	lsls	r0, r0, #3
 802425c:	eb01 2212 	add.w	r2, r1, r2, lsr #8
 8024260:	f400 60fc 	and.w	r0, r0, #2016	@ 0x7e0
 8024264:	eb07 2712 	add.w	r7, r7, r2, lsr #8
 8024268:	ea4c 0c00 	orr.w	ip, ip, r0
 802426c:	f3c7 07c4 	ubfx	r7, r7, #3, #5
 8024270:	ea47 0c0c 	orr.w	ip, r7, ip
 8024274:	f8a8 c000 	strh.w	ip, [r8]
 8024278:	e7b7      	b.n	80241ea <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x6b6>
 802427a:	b01b      	add	sp, #108	@ 0x6c
 802427c:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 8024280:	fffff800 	.word	0xfffff800

08024284 <_ZNK8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtsssiihhh>:
 8024284:	e92d 47f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
 8024288:	e9dd 050a 	ldrd	r0, r5, [sp, #40]	@ 0x28
 802428c:	2d00      	cmp	r5, #0
 802428e:	f9bd 8020 	ldrsh.w	r8, [sp, #32]
 8024292:	f9bd 9024 	ldrsh.w	r9, [sp, #36]	@ 0x24
 8024296:	f89d 7030 	ldrb.w	r7, [sp, #48]	@ 0x30
 802429a:	f89d c034 	ldrb.w	ip, [sp, #52]	@ 0x34
 802429e:	fb05 0e03 	mla	lr, r5, r3, r0
 80242a2:	f2c0 808c 	blt.w	80243be <_ZNK8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtsssiihhh+0x13a>
 80242a6:	45a9      	cmp	r9, r5
 80242a8:	f340 8089 	ble.w	80243be <_ZNK8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtsssiihhh+0x13a>
 80242ac:	2800      	cmp	r0, #0
 80242ae:	f2c0 8084 	blt.w	80243ba <_ZNK8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtsssiihhh+0x136>
 80242b2:	4580      	cmp	r8, r0
 80242b4:	f340 8081 	ble.w	80243ba <_ZNK8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtsssiihhh+0x136>
 80242b8:	ea4f 045e 	mov.w	r4, lr, lsr #1
 80242bc:	f01e 0f01 	tst.w	lr, #1
 80242c0:	5d16      	ldrb	r6, [r2, r4]
 80242c2:	bf0c      	ite	eq
 80242c4:	f006 060f 	andeq.w	r6, r6, #15
 80242c8:	1136      	asrne	r6, r6, #4
 80242ca:	eb06 1606 	add.w	r6, r6, r6, lsl #4
 80242ce:	b2f6      	uxtb	r6, r6
 80242d0:	1c44      	adds	r4, r0, #1
 80242d2:	d477      	bmi.n	80243c4 <_ZNK8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtsssiihhh+0x140>
 80242d4:	45a0      	cmp	r8, r4
 80242d6:	dd75      	ble.n	80243c4 <_ZNK8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtsssiihhh+0x140>
 80242d8:	2f00      	cmp	r7, #0
 80242da:	d075      	beq.n	80243c8 <_ZNK8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtsssiihhh+0x144>
 80242dc:	f10e 0a01 	add.w	sl, lr, #1
 80242e0:	ea4f 045a 	mov.w	r4, sl, lsr #1
 80242e4:	f01a 0f01 	tst.w	sl, #1
 80242e8:	5d14      	ldrb	r4, [r2, r4]
 80242ea:	bf0c      	ite	eq
 80242ec:	f004 040f 	andeq.w	r4, r4, #15
 80242f0:	1124      	asrne	r4, r4, #4
 80242f2:	eb04 1404 	add.w	r4, r4, r4, lsl #4
 80242f6:	b2e4      	uxtb	r4, r4
 80242f8:	3501      	adds	r5, #1
 80242fa:	d469      	bmi.n	80243d0 <_ZNK8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtsssiihhh+0x14c>
 80242fc:	45a9      	cmp	r9, r5
 80242fe:	dd67      	ble.n	80243d0 <_ZNK8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtsssiihhh+0x14c>
 8024300:	f1bc 0f00 	cmp.w	ip, #0
 8024304:	d067      	beq.n	80243d6 <_ZNK8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtsssiihhh+0x152>
 8024306:	2800      	cmp	r0, #0
 8024308:	db60      	blt.n	80243cc <_ZNK8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtsssiihhh+0x148>
 802430a:	4580      	cmp	r8, r0
 802430c:	dd5e      	ble.n	80243cc <_ZNK8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtsssiihhh+0x148>
 802430e:	eb03 090e 	add.w	r9, r3, lr
 8024312:	ea4f 0559 	mov.w	r5, r9, lsr #1
 8024316:	f019 0f01 	tst.w	r9, #1
 802431a:	5d55      	ldrb	r5, [r2, r5]
 802431c:	bf0c      	ite	eq
 802431e:	f005 050f 	andeq.w	r5, r5, #15
 8024322:	112d      	asrne	r5, r5, #4
 8024324:	eb05 1505 	add.w	r5, r5, r5, lsl #4
 8024328:	b2ed      	uxtb	r5, r5
 802432a:	3001      	adds	r0, #1
 802432c:	d456      	bmi.n	80243dc <_ZNK8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtsssiihhh+0x158>
 802432e:	4580      	cmp	r8, r0
 8024330:	dd54      	ble.n	80243dc <_ZNK8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtsssiihhh+0x158>
 8024332:	2f00      	cmp	r7, #0
 8024334:	d054      	beq.n	80243e0 <_ZNK8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtsssiihhh+0x15c>
 8024336:	3301      	adds	r3, #1
 8024338:	449e      	add	lr, r3
 802433a:	ea4f 035e 	mov.w	r3, lr, lsr #1
 802433e:	f01e 0f01 	tst.w	lr, #1
 8024342:	5cd0      	ldrb	r0, [r2, r3]
 8024344:	bf0c      	ite	eq
 8024346:	f000 000f 	andeq.w	r0, r0, #15
 802434a:	1100      	asrne	r0, r0, #4
 802434c:	eb00 1000 	add.w	r0, r0, r0, lsl #4
 8024350:	b2c3      	uxtb	r3, r0
 8024352:	b2ba      	uxth	r2, r7
 8024354:	fa1f fc8c 	uxth.w	ip, ip
 8024358:	fb02 f00c 	mul.w	r0, r2, ip
 802435c:	ebc0 1c0c 	rsb	ip, r0, ip, lsl #4
 8024360:	0112      	lsls	r2, r2, #4
 8024362:	fa1f fc8c 	uxth.w	ip, ip
 8024366:	f5c2 7780 	rsb	r7, r2, #256	@ 0x100
 802436a:	1a12      	subs	r2, r2, r0
 802436c:	eba7 070c 	sub.w	r7, r7, ip
 8024370:	b292      	uxth	r2, r2
 8024372:	b2bf      	uxth	r7, r7
 8024374:	4362      	muls	r2, r4
 8024376:	fb06 2207 	mla	r2, r6, r7, r2
 802437a:	fb0c 2505 	mla	r5, ip, r5, r2
 802437e:	fb00 5303 	mla	r3, r0, r3, r5
 8024382:	f3c3 2307 	ubfx	r3, r3, #8, #8
 8024386:	b1b3      	cbz	r3, 80243b6 <_ZNK8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtsssiihhh+0x132>
 8024388:	f89d 2038 	ldrb.w	r2, [sp, #56]	@ 0x38
 802438c:	435a      	muls	r2, r3
 802438e:	1c53      	adds	r3, r2, #1
 8024390:	eb03 2312 	add.w	r3, r3, r2, lsr #8
 8024394:	4a2d      	ldr	r2, [pc, #180]	@ (802444c <_ZNK8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtsssiihhh+0x1c8>)
 8024396:	121b      	asrs	r3, r3, #8
 8024398:	6812      	ldr	r2, [r2, #0]
 802439a:	2bff      	cmp	r3, #255	@ 0xff
 802439c:	ea4f 2612 	mov.w	r6, r2, lsr #8
 80243a0:	d120      	bne.n	80243e4 <_ZNK8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtsssiihhh+0x160>
 80243a2:	4b2b      	ldr	r3, [pc, #172]	@ (8024450 <_ZNK8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtsssiihhh+0x1cc>)
 80243a4:	0950      	lsrs	r0, r2, #5
 80243a6:	f400 60fc 	and.w	r0, r0, #2016	@ 0x7e0
 80243aa:	4033      	ands	r3, r6
 80243ac:	4318      	orrs	r0, r3
 80243ae:	f3c2 02c4 	ubfx	r2, r2, #3, #5
 80243b2:	4302      	orrs	r2, r0
 80243b4:	800a      	strh	r2, [r1, #0]
 80243b6:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
 80243ba:	2600      	movs	r6, #0
 80243bc:	e788      	b.n	80242d0 <_ZNK8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtsssiihhh+0x4c>
 80243be:	2400      	movs	r4, #0
 80243c0:	4626      	mov	r6, r4
 80243c2:	e799      	b.n	80242f8 <_ZNK8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtsssiihhh+0x74>
 80243c4:	2400      	movs	r4, #0
 80243c6:	e797      	b.n	80242f8 <_ZNK8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtsssiihhh+0x74>
 80243c8:	463c      	mov	r4, r7
 80243ca:	e795      	b.n	80242f8 <_ZNK8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtsssiihhh+0x74>
 80243cc:	2500      	movs	r5, #0
 80243ce:	e7ac      	b.n	802432a <_ZNK8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtsssiihhh+0xa6>
 80243d0:	2300      	movs	r3, #0
 80243d2:	461d      	mov	r5, r3
 80243d4:	e7bd      	b.n	8024352 <_ZNK8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtsssiihhh+0xce>
 80243d6:	4663      	mov	r3, ip
 80243d8:	4665      	mov	r5, ip
 80243da:	e7ba      	b.n	8024352 <_ZNK8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtsssiihhh+0xce>
 80243dc:	2300      	movs	r3, #0
 80243de:	e7b8      	b.n	8024352 <_ZNK8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtsssiihhh+0xce>
 80243e0:	463b      	mov	r3, r7
 80243e2:	e7b6      	b.n	8024352 <_ZNK8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtsssiihhh+0xce>
 80243e4:	880d      	ldrh	r5, [r1, #0]
 80243e6:	b29f      	uxth	r7, r3
 80243e8:	122c      	asrs	r4, r5, #8
 80243ea:	f3c2 4007 	ubfx	r0, r2, #16, #8
 80243ee:	43db      	mvns	r3, r3
 80243f0:	b2db      	uxtb	r3, r3
 80243f2:	fb10 f007 	smulbb	r0, r0, r7
 80243f6:	f004 04f8 	and.w	r4, r4, #248	@ 0xf8
 80243fa:	fb04 0403 	mla	r4, r4, r3, r0
 80243fe:	b2f6      	uxtb	r6, r6
 8024400:	10e8      	asrs	r0, r5, #3
 8024402:	b2d2      	uxtb	r2, r2
 8024404:	00ed      	lsls	r5, r5, #3
 8024406:	f000 00fc 	and.w	r0, r0, #252	@ 0xfc
 802440a:	fb12 f207 	smulbb	r2, r2, r7
 802440e:	fb16 f607 	smulbb	r6, r6, r7
 8024412:	b2ed      	uxtb	r5, r5
 8024414:	b2a4      	uxth	r4, r4
 8024416:	fb00 6603 	mla	r6, r0, r3, r6
 802441a:	fb05 2303 	mla	r3, r5, r3, r2
 802441e:	b29a      	uxth	r2, r3
 8024420:	1c63      	adds	r3, r4, #1
 8024422:	b2b0      	uxth	r0, r6
 8024424:	eb03 2414 	add.w	r4, r3, r4, lsr #8
 8024428:	1c53      	adds	r3, r2, #1
 802442a:	eb03 2312 	add.w	r3, r3, r2, lsr #8
 802442e:	1c42      	adds	r2, r0, #1
 8024430:	eb02 2010 	add.w	r0, r2, r0, lsr #8
 8024434:	f404 4478 	and.w	r4, r4, #63488	@ 0xf800
 8024438:	f3c3 23c4 	ubfx	r3, r3, #11, #5
 802443c:	0940      	lsrs	r0, r0, #5
 802443e:	4323      	orrs	r3, r4
 8024440:	f400 60fc 	and.w	r0, r0, #2016	@ 0x7e0
 8024444:	4303      	orrs	r3, r0
 8024446:	800b      	strh	r3, [r1, #0]
 8024448:	e7b5      	b.n	80243b6 <_ZNK8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtsssiihhh+0x132>
 802444a:	bf00      	nop
 802444c:	20002fb0 	.word	0x20002fb0
 8024450:	00fff800 	.word	0x00fff800

08024454 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff>:
 8024454:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8024458:	b097      	sub	sp, #92	@ 0x5c
 802445a:	e9dd 4621 	ldrd	r4, r6, [sp, #132]	@ 0x84
 802445e:	9214      	str	r2, [sp, #80]	@ 0x50
 8024460:	9309      	str	r3, [sp, #36]	@ 0x24
 8024462:	9a25      	ldr	r2, [sp, #148]	@ 0x94
 8024464:	f89d 30a4 	ldrb.w	r3, [sp, #164]	@ 0xa4
 8024468:	910d      	str	r1, [sp, #52]	@ 0x34
 802446a:	930f      	str	r3, [sp, #60]	@ 0x3c
 802446c:	e9dd 1326 	ldrd	r1, r3, [sp, #152]	@ 0x98
 8024470:	9015      	str	r0, [sp, #84]	@ 0x54
 8024472:	6850      	ldr	r0, [r2, #4]
 8024474:	6812      	ldr	r2, [r2, #0]
 8024476:	fb00 1303 	mla	r3, r0, r3, r1
 802447a:	eb02 0943 	add.w	r9, r2, r3, lsl #1
 802447e:	9b28      	ldr	r3, [sp, #160]	@ 0xa0
 8024480:	689b      	ldr	r3, [r3, #8]
 8024482:	3301      	adds	r3, #1
 8024484:	f023 0301 	bic.w	r3, r3, #1
 8024488:	930a      	str	r3, [sp, #40]	@ 0x28
 802448a:	9b28      	ldr	r3, [sp, #160]	@ 0xa0
 802448c:	681f      	ldr	r7, [r3, #0]
 802448e:	9b0d      	ldr	r3, [sp, #52]	@ 0x34
 8024490:	2b00      	cmp	r3, #0
 8024492:	dc03      	bgt.n	802449c <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x48>
 8024494:	9b14      	ldr	r3, [sp, #80]	@ 0x50
 8024496:	2b00      	cmp	r3, #0
 8024498:	f340 8287 	ble.w	80249aa <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x556>
 802449c:	9b28      	ldr	r3, [sp, #160]	@ 0xa0
 802449e:	f9b3 1008 	ldrsh.w	r1, [r3, #8]
 80244a2:	f9b3 200c 	ldrsh.w	r2, [r3, #12]
 80244a6:	1e48      	subs	r0, r1, #1
 80244a8:	f102 3cff 	add.w	ip, r2, #4294967295
 80244ac:	9b09      	ldr	r3, [sp, #36]	@ 0x24
 80244ae:	2b00      	cmp	r3, #0
 80244b0:	f340 80c4 	ble.w	802463c <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1e8>
 80244b4:	ea5f 4e24 	movs.w	lr, r4, asr #16
 80244b8:	ea4f 4326 	mov.w	r3, r6, asr #16
 80244bc:	d406      	bmi.n	80244cc <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x78>
 80244be:	4586      	cmp	lr, r0
 80244c0:	da04      	bge.n	80244cc <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x78>
 80244c2:	2b00      	cmp	r3, #0
 80244c4:	db02      	blt.n	80244cc <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x78>
 80244c6:	4563      	cmp	r3, ip
 80244c8:	f2c0 80b9 	blt.w	802463e <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1ea>
 80244cc:	f11e 0e01 	adds.w	lr, lr, #1
 80244d0:	f100 80aa 	bmi.w	8024628 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1d4>
 80244d4:	4571      	cmp	r1, lr
 80244d6:	f2c0 80a7 	blt.w	8024628 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1d4>
 80244da:	3301      	adds	r3, #1
 80244dc:	f100 80a4 	bmi.w	8024628 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1d4>
 80244e0:	429a      	cmp	r2, r3
 80244e2:	f2c0 80a1 	blt.w	8024628 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1d4>
 80244e6:	9b09      	ldr	r3, [sp, #36]	@ 0x24
 80244e8:	f9bd a028 	ldrsh.w	sl, [sp, #40]	@ 0x28
 80244ec:	930e      	str	r3, [sp, #56]	@ 0x38
 80244ee:	46c8      	mov	r8, r9
 80244f0:	9b0e      	ldr	r3, [sp, #56]	@ 0x38
 80244f2:	2b00      	cmp	r3, #0
 80244f4:	f340 80c3 	ble.w	802467e <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x22a>
 80244f8:	9b28      	ldr	r3, [sp, #160]	@ 0xa0
 80244fa:	e9d3 ce02 	ldrd	ip, lr, [r3, #8]
 80244fe:	1423      	asrs	r3, r4, #16
 8024500:	ea4f 4026 	mov.w	r0, r6, asr #16
 8024504:	f3c4 3203 	ubfx	r2, r4, #12, #4
 8024508:	f3c6 3103 	ubfx	r1, r6, #12, #4
 802450c:	f100 814d 	bmi.w	80247aa <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x356>
 8024510:	f10c 3bff 	add.w	fp, ip, #4294967295
 8024514:	455b      	cmp	r3, fp
 8024516:	f280 8148 	bge.w	80247aa <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x356>
 802451a:	2800      	cmp	r0, #0
 802451c:	f2c0 8145 	blt.w	80247aa <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x356>
 8024520:	f10e 3bff 	add.w	fp, lr, #4294967295
 8024524:	4558      	cmp	r0, fp
 8024526:	f280 8140 	bge.w	80247aa <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x356>
 802452a:	9d0a      	ldr	r5, [sp, #40]	@ 0x28
 802452c:	fb00 3305 	mla	r3, r0, r5, r3
 8024530:	0858      	lsrs	r0, r3, #1
 8024532:	07dd      	lsls	r5, r3, #31
 8024534:	f817 c000 	ldrb.w	ip, [r7, r0]
 8024538:	bf54      	ite	pl
 802453a:	f00c 0c0f 	andpl.w	ip, ip, #15
 802453e:	ea4f 1c2c 	movmi.w	ip, ip, asr #4
 8024542:	eb0c 1c0c 	add.w	ip, ip, ip, lsl #4
 8024546:	fa5f fc8c 	uxtb.w	ip, ip
 802454a:	2a00      	cmp	r2, #0
 802454c:	f000 80db 	beq.w	8024706 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2b2>
 8024550:	1c58      	adds	r0, r3, #1
 8024552:	ea4f 0e50 	mov.w	lr, r0, lsr #1
 8024556:	07c0      	lsls	r0, r0, #31
 8024558:	f817 e00e 	ldrb.w	lr, [r7, lr]
 802455c:	bf54      	ite	pl
 802455e:	f00e 0e0f 	andpl.w	lr, lr, #15
 8024562:	ea4f 1e2e 	movmi.w	lr, lr, asr #4
 8024566:	eb0e 1e0e 	add.w	lr, lr, lr, lsl #4
 802456a:	fa5f f08e 	uxtb.w	r0, lr
 802456e:	9010      	str	r0, [sp, #64]	@ 0x40
 8024570:	b1c9      	cbz	r1, 80245a6 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x152>
 8024572:	4453      	add	r3, sl
 8024574:	0858      	lsrs	r0, r3, #1
 8024576:	07dd      	lsls	r5, r3, #31
 8024578:	5c38      	ldrb	r0, [r7, r0]
 802457a:	bf54      	ite	pl
 802457c:	f000 000f 	andpl.w	r0, r0, #15
 8024580:	1100      	asrmi	r0, r0, #4
 8024582:	eb00 1000 	add.w	r0, r0, r0, lsl #4
 8024586:	3301      	adds	r3, #1
 8024588:	b2c0      	uxtb	r0, r0
 802458a:	900b      	str	r0, [sp, #44]	@ 0x2c
 802458c:	0858      	lsrs	r0, r3, #1
 802458e:	07dd      	lsls	r5, r3, #31
 8024590:	f817 e000 	ldrb.w	lr, [r7, r0]
 8024594:	bf54      	ite	pl
 8024596:	f00e 030f 	andpl.w	r3, lr, #15
 802459a:	ea4f 132e 	movmi.w	r3, lr, asr #4
 802459e:	eb03 1303 	add.w	r3, r3, r3, lsl #4
 80245a2:	b2db      	uxtb	r3, r3
 80245a4:	9311      	str	r3, [sp, #68]	@ 0x44
 80245a6:	b292      	uxth	r2, r2
 80245a8:	b289      	uxth	r1, r1
 80245aa:	fb02 f301 	mul.w	r3, r2, r1
 80245ae:	ebc3 1101 	rsb	r1, r3, r1, lsl #4
 80245b2:	0112      	lsls	r2, r2, #4
 80245b4:	b289      	uxth	r1, r1
 80245b6:	f5c2 7080 	rsb	r0, r2, #256	@ 0x100
 80245ba:	9d10      	ldr	r5, [sp, #64]	@ 0x40
 80245bc:	1ad2      	subs	r2, r2, r3
 80245be:	1a40      	subs	r0, r0, r1
 80245c0:	b292      	uxth	r2, r2
 80245c2:	436a      	muls	r2, r5
 80245c4:	b280      	uxth	r0, r0
 80245c6:	fb0c 2c00 	mla	ip, ip, r0, r2
 80245ca:	9a0b      	ldr	r2, [sp, #44]	@ 0x2c
 80245cc:	fb01 c102 	mla	r1, r1, r2, ip
 80245d0:	9a11      	ldr	r2, [sp, #68]	@ 0x44
 80245d2:	fb03 1302 	mla	r3, r3, r2, r1
 80245d6:	f3c3 2307 	ubfx	r3, r3, #8, #8
 80245da:	b1db      	cbz	r3, 8024614 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1c0>
 80245dc:	9a0f      	ldr	r2, [sp, #60]	@ 0x3c
 80245de:	4353      	muls	r3, r2
 80245e0:	1c5a      	adds	r2, r3, #1
 80245e2:	eb02 2313 	add.w	r3, r2, r3, lsr #8
 80245e6:	4ac6      	ldr	r2, [pc, #792]	@ (8024900 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x4ac>)
 80245e8:	121b      	asrs	r3, r3, #8
 80245ea:	6812      	ldr	r2, [r2, #0]
 80245ec:	2bff      	cmp	r3, #255	@ 0xff
 80245ee:	ea4f 2c12 	mov.w	ip, r2, lsr #8
 80245f2:	f040 8099 	bne.w	8024728 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2d4>
 80245f6:	0953      	lsrs	r3, r2, #5
 80245f8:	f42c 6cff 	bic.w	ip, ip, #2040	@ 0x7f8
 80245fc:	f403 63fc 	and.w	r3, r3, #2016	@ 0x7e0
 8024600:	f02c 0c07 	bic.w	ip, ip, #7
 8024604:	ea43 0c0c 	orr.w	ip, r3, ip
 8024608:	f3c2 02c4 	ubfx	r2, r2, #3, #5
 802460c:	ea4c 0202 	orr.w	r2, ip, r2
 8024610:	f8a8 2000 	strh.w	r2, [r8]
 8024614:	9b23      	ldr	r3, [sp, #140]	@ 0x8c
 8024616:	441c      	add	r4, r3
 8024618:	9b24      	ldr	r3, [sp, #144]	@ 0x90
 802461a:	441e      	add	r6, r3
 802461c:	9b0e      	ldr	r3, [sp, #56]	@ 0x38
 802461e:	3b01      	subs	r3, #1
 8024620:	f108 0802 	add.w	r8, r8, #2
 8024624:	930e      	str	r3, [sp, #56]	@ 0x38
 8024626:	e763      	b.n	80244f0 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x9c>
 8024628:	9b23      	ldr	r3, [sp, #140]	@ 0x8c
 802462a:	441c      	add	r4, r3
 802462c:	9b24      	ldr	r3, [sp, #144]	@ 0x90
 802462e:	441e      	add	r6, r3
 8024630:	9b09      	ldr	r3, [sp, #36]	@ 0x24
 8024632:	3b01      	subs	r3, #1
 8024634:	9309      	str	r3, [sp, #36]	@ 0x24
 8024636:	f109 0902 	add.w	r9, r9, #2
 802463a:	e737      	b.n	80244ac <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x58>
 802463c:	d024      	beq.n	8024688 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x234>
 802463e:	9b09      	ldr	r3, [sp, #36]	@ 0x24
 8024640:	9823      	ldr	r0, [sp, #140]	@ 0x8c
 8024642:	3b01      	subs	r3, #1
 8024644:	fb00 4003 	mla	r0, r0, r3, r4
 8024648:	1400      	asrs	r0, r0, #16
 802464a:	f53f af4c 	bmi.w	80244e6 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x92>
 802464e:	3901      	subs	r1, #1
 8024650:	4288      	cmp	r0, r1
 8024652:	f6bf af48 	bge.w	80244e6 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x92>
 8024656:	9924      	ldr	r1, [sp, #144]	@ 0x90
 8024658:	fb01 6303 	mla	r3, r1, r3, r6
 802465c:	141b      	asrs	r3, r3, #16
 802465e:	f53f af42 	bmi.w	80244e6 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x92>
 8024662:	3a01      	subs	r2, #1
 8024664:	4293      	cmp	r3, r2
 8024666:	f6bf af3e 	bge.w	80244e6 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x92>
 802466a:	f9bd 3028 	ldrsh.w	r3, [sp, #40]	@ 0x28
 802466e:	f8dd b024 	ldr.w	fp, [sp, #36]	@ 0x24
 8024672:	930e      	str	r3, [sp, #56]	@ 0x38
 8024674:	46c8      	mov	r8, r9
 8024676:	f1bb 0f00 	cmp.w	fp, #0
 802467a:	f300 80b7 	bgt.w	80247ec <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x398>
 802467e:	9b09      	ldr	r3, [sp, #36]	@ 0x24
 8024680:	ea23 75e3 	bic.w	r5, r3, r3, asr #31
 8024684:	eb09 0945 	add.w	r9, r9, r5, lsl #1
 8024688:	9b0d      	ldr	r3, [sp, #52]	@ 0x34
 802468a:	2b00      	cmp	r3, #0
 802468c:	f340 818d 	ble.w	80249aa <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x556>
 8024690:	ee30 0a04 	vadd.f32	s0, s0, s8
 8024694:	eeb7 7a00 	vmov.f32	s14, #112	@ 0x3f800000  1.0
 8024698:	eec7 7a00 	vdiv.f32	s15, s14, s0
 802469c:	9b20      	ldr	r3, [sp, #128]	@ 0x80
 802469e:	ee70 0aa4 	vadd.f32	s1, s1, s9
 80246a2:	ee31 1a05 	vadd.f32	s2, s2, s10
 80246a6:	ee20 7aa7 	vmul.f32	s14, s1, s15
 80246aa:	eef0 6a62 	vmov.f32	s13, s5
 80246ae:	ee61 7a27 	vmul.f32	s15, s2, s15
 80246b2:	eefe 6ac8 	vcvt.s32.f32	s13, s13, #16
 80246b6:	ee77 2a62 	vsub.f32	s5, s14, s5
 80246ba:	ee16 4a90 	vmov	r4, s13
 80246be:	eefe 2ac8 	vcvt.s32.f32	s5, s5, #16
 80246c2:	eef0 6a43 	vmov.f32	s13, s6
 80246c6:	ee37 3ac3 	vsub.f32	s6, s15, s6
 80246ca:	ee12 2a90 	vmov	r2, s5
 80246ce:	eebe 3ac8 	vcvt.s32.f32	s6, s6, #16
 80246d2:	fb92 f3f3 	sdiv	r3, r2, r3
 80246d6:	ee13 2a10 	vmov	r2, s6
 80246da:	9323      	str	r3, [sp, #140]	@ 0x8c
 80246dc:	9b20      	ldr	r3, [sp, #128]	@ 0x80
 80246de:	fb92 f3f3 	sdiv	r3, r2, r3
 80246e2:	9324      	str	r3, [sp, #144]	@ 0x90
 80246e4:	9b0d      	ldr	r3, [sp, #52]	@ 0x34
 80246e6:	9a14      	ldr	r2, [sp, #80]	@ 0x50
 80246e8:	3b01      	subs	r3, #1
 80246ea:	eefe 6ac8 	vcvt.s32.f32	s13, s13, #16
 80246ee:	930d      	str	r3, [sp, #52]	@ 0x34
 80246f0:	9b20      	ldr	r3, [sp, #128]	@ 0x80
 80246f2:	bf08      	it	eq
 80246f4:	4613      	moveq	r3, r2
 80246f6:	ee16 6a90 	vmov	r6, s13
 80246fa:	9309      	str	r3, [sp, #36]	@ 0x24
 80246fc:	eeb0 3a67 	vmov.f32	s6, s15
 8024700:	eef0 2a47 	vmov.f32	s5, s14
 8024704:	e6c3      	b.n	802448e <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3a>
 8024706:	2900      	cmp	r1, #0
 8024708:	f43f af4d 	beq.w	80245a6 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x152>
 802470c:	eb0a 0003 	add.w	r0, sl, r3
 8024710:	0843      	lsrs	r3, r0, #1
 8024712:	07c0      	lsls	r0, r0, #31
 8024714:	5cfb      	ldrb	r3, [r7, r3]
 8024716:	bf54      	ite	pl
 8024718:	f003 030f 	andpl.w	r3, r3, #15
 802471c:	111b      	asrmi	r3, r3, #4
 802471e:	eb03 1303 	add.w	r3, r3, r3, lsl #4
 8024722:	b2db      	uxtb	r3, r3
 8024724:	930b      	str	r3, [sp, #44]	@ 0x2c
 8024726:	e73e      	b.n	80245a6 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x152>
 8024728:	f8b8 e000 	ldrh.w	lr, [r8]
 802472c:	fa1f fb83 	uxth.w	fp, r3
 8024730:	ea4f 202e 	mov.w	r0, lr, asr #8
 8024734:	f3c2 4107 	ubfx	r1, r2, #16, #8
 8024738:	43db      	mvns	r3, r3
 802473a:	b2db      	uxtb	r3, r3
 802473c:	fb11 f10b 	smulbb	r1, r1, fp
 8024740:	f000 00f8 	and.w	r0, r0, #248	@ 0xf8
 8024744:	fb00 1003 	mla	r0, r0, r3, r1
 8024748:	fa5f fc8c 	uxtb.w	ip, ip
 802474c:	ea4f 01ee 	mov.w	r1, lr, asr #3
 8024750:	b2d2      	uxtb	r2, r2
 8024752:	ea4f 0ece 	mov.w	lr, lr, lsl #3
 8024756:	b280      	uxth	r0, r0
 8024758:	f001 01fc 	and.w	r1, r1, #252	@ 0xfc
 802475c:	fb1c fc0b 	smulbb	ip, ip, fp
 8024760:	fa5f fe8e 	uxtb.w	lr, lr
 8024764:	fb12 fb0b 	smulbb	fp, r2, fp
 8024768:	fb01 cc03 	mla	ip, r1, r3, ip
 802476c:	fb0e bb03 	mla	fp, lr, r3, fp
 8024770:	1c43      	adds	r3, r0, #1
 8024772:	fa1f fc8c 	uxth.w	ip, ip
 8024776:	fa1f fb8b 	uxth.w	fp, fp
 802477a:	eb03 2010 	add.w	r0, r3, r0, lsr #8
 802477e:	f400 4378 	and.w	r3, r0, #63488	@ 0xf800
 8024782:	f10c 0101 	add.w	r1, ip, #1
 8024786:	f10b 0001 	add.w	r0, fp, #1
 802478a:	eb00 201b 	add.w	r0, r0, fp, lsr #8
 802478e:	eb01 2c1c 	add.w	ip, r1, ip, lsr #8
 8024792:	f3c0 20c4 	ubfx	r0, r0, #11, #5
 8024796:	ea4f 1c5c 	mov.w	ip, ip, lsr #5
 802479a:	4318      	orrs	r0, r3
 802479c:	f40c 6cfc 	and.w	ip, ip, #2016	@ 0x7e0
 80247a0:	ea40 000c 	orr.w	r0, r0, ip
 80247a4:	f8a8 0000 	strh.w	r0, [r8]
 80247a8:	e734      	b.n	8024614 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1c0>
 80247aa:	f113 0b01 	adds.w	fp, r3, #1
 80247ae:	f53f af31 	bmi.w	8024614 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1c0>
 80247b2:	45dc      	cmp	ip, fp
 80247b4:	f6ff af2e 	blt.w	8024614 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1c0>
 80247b8:	f110 0b01 	adds.w	fp, r0, #1
 80247bc:	f53f af2a 	bmi.w	8024614 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1c0>
 80247c0:	45de      	cmp	lr, fp
 80247c2:	f6ff af27 	blt.w	8024614 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1c0>
 80247c6:	9d0f      	ldr	r5, [sp, #60]	@ 0x3c
 80247c8:	9302      	str	r3, [sp, #8]
 80247ca:	fa0f f38e 	sxth.w	r3, lr
 80247ce:	9301      	str	r3, [sp, #4]
 80247d0:	fa0f f38c 	sxth.w	r3, ip
 80247d4:	e9cd 0203 	strd	r0, r2, [sp, #12]
 80247d8:	e9cd 1505 	strd	r1, r5, [sp, #20]
 80247dc:	9300      	str	r3, [sp, #0]
 80247de:	463a      	mov	r2, r7
 80247e0:	4653      	mov	r3, sl
 80247e2:	4641      	mov	r1, r8
 80247e4:	9815      	ldr	r0, [sp, #84]	@ 0x54
 80247e6:	f7ff fd4d 	bl	8024284 <_ZNK8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtsssiihhh>
 80247ea:	e713      	b.n	8024614 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1c0>
 80247ec:	9d0a      	ldr	r5, [sp, #40]	@ 0x28
 80247ee:	1422      	asrs	r2, r4, #16
 80247f0:	1433      	asrs	r3, r6, #16
 80247f2:	fb05 2303 	mla	r3, r5, r3, r2
 80247f6:	085a      	lsrs	r2, r3, #1
 80247f8:	07dd      	lsls	r5, r3, #31
 80247fa:	5cba      	ldrb	r2, [r7, r2]
 80247fc:	bf54      	ite	pl
 80247fe:	f002 020f 	andpl.w	r2, r2, #15
 8024802:	1112      	asrmi	r2, r2, #4
 8024804:	eb02 1202 	add.w	r2, r2, r2, lsl #4
 8024808:	f3c4 3103 	ubfx	r1, r4, #12, #4
 802480c:	f3c6 3003 	ubfx	r0, r6, #12, #4
 8024810:	b2d2      	uxtb	r2, r2
 8024812:	2900      	cmp	r1, #0
 8024814:	d076      	beq.n	8024904 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x4b0>
 8024816:	f103 0e01 	add.w	lr, r3, #1
 802481a:	ea4f 0c5e 	mov.w	ip, lr, lsr #1
 802481e:	f01e 0f01 	tst.w	lr, #1
 8024822:	f817 c00c 	ldrb.w	ip, [r7, ip]
 8024826:	bf0c      	ite	eq
 8024828:	f00c 0c0f 	andeq.w	ip, ip, #15
 802482c:	ea4f 1c2c 	movne.w	ip, ip, asr #4
 8024830:	eb0c 1c0c 	add.w	ip, ip, ip, lsl #4
 8024834:	fa5f f58c 	uxtb.w	r5, ip
 8024838:	9512      	str	r5, [sp, #72]	@ 0x48
 802483a:	b300      	cbz	r0, 802487e <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x42a>
 802483c:	9d0e      	ldr	r5, [sp, #56]	@ 0x38
 802483e:	442b      	add	r3, r5
 8024840:	ea4f 0c53 	mov.w	ip, r3, lsr #1
 8024844:	07dd      	lsls	r5, r3, #31
 8024846:	f817 c00c 	ldrb.w	ip, [r7, ip]
 802484a:	bf54      	ite	pl
 802484c:	f00c 0c0f 	andpl.w	ip, ip, #15
 8024850:	ea4f 1c2c 	movmi.w	ip, ip, asr #4
 8024854:	3301      	adds	r3, #1
 8024856:	eb0c 1c0c 	add.w	ip, ip, ip, lsl #4
 802485a:	fa5f f58c 	uxtb.w	r5, ip
 802485e:	ea4f 0c53 	mov.w	ip, r3, lsr #1
 8024862:	950c      	str	r5, [sp, #48]	@ 0x30
 8024864:	f817 c00c 	ldrb.w	ip, [r7, ip]
 8024868:	07dd      	lsls	r5, r3, #31
 802486a:	bf54      	ite	pl
 802486c:	f00c 0c0f 	andpl.w	ip, ip, #15
 8024870:	ea4f 1c2c 	movmi.w	ip, ip, asr #4
 8024874:	eb0c 1c0c 	add.w	ip, ip, ip, lsl #4
 8024878:	fa5f f38c 	uxtb.w	r3, ip
 802487c:	9313      	str	r3, [sp, #76]	@ 0x4c
 802487e:	b289      	uxth	r1, r1
 8024880:	b280      	uxth	r0, r0
 8024882:	fb01 f300 	mul.w	r3, r1, r0
 8024886:	ebc3 1000 	rsb	r0, r3, r0, lsl #4
 802488a:	0109      	lsls	r1, r1, #4
 802488c:	b280      	uxth	r0, r0
 802488e:	f5c1 7c80 	rsb	ip, r1, #256	@ 0x100
 8024892:	9d12      	ldr	r5, [sp, #72]	@ 0x48
 8024894:	1ac9      	subs	r1, r1, r3
 8024896:	ebac 0c00 	sub.w	ip, ip, r0
 802489a:	b289      	uxth	r1, r1
 802489c:	4369      	muls	r1, r5
 802489e:	fa1f fc8c 	uxth.w	ip, ip
 80248a2:	fb02 120c 	mla	r2, r2, ip, r1
 80248a6:	990c      	ldr	r1, [sp, #48]	@ 0x30
 80248a8:	fb00 2001 	mla	r0, r0, r1, r2
 80248ac:	9a13      	ldr	r2, [sp, #76]	@ 0x4c
 80248ae:	fb03 0302 	mla	r3, r3, r2, r0
 80248b2:	f3c3 2307 	ubfx	r3, r3, #8, #8
 80248b6:	b1d3      	cbz	r3, 80248ee <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x49a>
 80248b8:	9a0f      	ldr	r2, [sp, #60]	@ 0x3c
 80248ba:	4353      	muls	r3, r2
 80248bc:	1c5a      	adds	r2, r3, #1
 80248be:	eb02 2313 	add.w	r3, r2, r3, lsr #8
 80248c2:	4a0f      	ldr	r2, [pc, #60]	@ (8024900 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x4ac>)
 80248c4:	121b      	asrs	r3, r3, #8
 80248c6:	6812      	ldr	r2, [r2, #0]
 80248c8:	2bff      	cmp	r3, #255	@ 0xff
 80248ca:	ea4f 2c12 	mov.w	ip, r2, lsr #8
 80248ce:	d12d      	bne.n	802492c <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x4d8>
 80248d0:	0953      	lsrs	r3, r2, #5
 80248d2:	f42c 6cff 	bic.w	ip, ip, #2040	@ 0x7f8
 80248d6:	f403 63fc 	and.w	r3, r3, #2016	@ 0x7e0
 80248da:	f02c 0c07 	bic.w	ip, ip, #7
 80248de:	ea43 0c0c 	orr.w	ip, r3, ip
 80248e2:	f3c2 02c4 	ubfx	r2, r2, #3, #5
 80248e6:	ea4c 0202 	orr.w	r2, ip, r2
 80248ea:	f8a8 2000 	strh.w	r2, [r8]
 80248ee:	9b23      	ldr	r3, [sp, #140]	@ 0x8c
 80248f0:	441c      	add	r4, r3
 80248f2:	9b24      	ldr	r3, [sp, #144]	@ 0x90
 80248f4:	f108 0802 	add.w	r8, r8, #2
 80248f8:	441e      	add	r6, r3
 80248fa:	f10b 3bff 	add.w	fp, fp, #4294967295
 80248fe:	e6ba      	b.n	8024676 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x222>
 8024900:	20002fb0 	.word	0x20002fb0
 8024904:	2800      	cmp	r0, #0
 8024906:	d0ba      	beq.n	802487e <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x42a>
 8024908:	9d0e      	ldr	r5, [sp, #56]	@ 0x38
 802490a:	442b      	add	r3, r5
 802490c:	ea4f 0c53 	mov.w	ip, r3, lsr #1
 8024910:	07db      	lsls	r3, r3, #31
 8024912:	f817 c00c 	ldrb.w	ip, [r7, ip]
 8024916:	bf54      	ite	pl
 8024918:	f00c 0c0f 	andpl.w	ip, ip, #15
 802491c:	ea4f 1c2c 	movmi.w	ip, ip, asr #4
 8024920:	eb0c 1c0c 	add.w	ip, ip, ip, lsl #4
 8024924:	fa5f f38c 	uxtb.w	r3, ip
 8024928:	930c      	str	r3, [sp, #48]	@ 0x30
 802492a:	e7a8      	b.n	802487e <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x42a>
 802492c:	f8b8 e000 	ldrh.w	lr, [r8]
 8024930:	fa1f fa83 	uxth.w	sl, r3
 8024934:	ea4f 202e 	mov.w	r0, lr, asr #8
 8024938:	f3c2 4107 	ubfx	r1, r2, #16, #8
 802493c:	43db      	mvns	r3, r3
 802493e:	b2db      	uxtb	r3, r3
 8024940:	fb11 f10a 	smulbb	r1, r1, sl
 8024944:	f000 00f8 	and.w	r0, r0, #248	@ 0xf8
 8024948:	fb00 1003 	mla	r0, r0, r3, r1
 802494c:	b2d2      	uxtb	r2, r2
 802494e:	ea4f 01ee 	mov.w	r1, lr, asr #3
 8024952:	ea4f 0ece 	mov.w	lr, lr, lsl #3
 8024956:	fa5f fe8e 	uxtb.w	lr, lr
 802495a:	fb12 f20a 	smulbb	r2, r2, sl
 802495e:	fb0e 2203 	mla	r2, lr, r3, r2
 8024962:	fa5f fc8c 	uxtb.w	ip, ip
 8024966:	b280      	uxth	r0, r0
 8024968:	f001 01fc 	and.w	r1, r1, #252	@ 0xfc
 802496c:	b292      	uxth	r2, r2
 802496e:	fb1c fc0a 	smulbb	ip, ip, sl
 8024972:	fb01 cc03 	mla	ip, r1, r3, ip
 8024976:	1c43      	adds	r3, r0, #1
 8024978:	1c51      	adds	r1, r2, #1
 802497a:	eb03 2010 	add.w	r0, r3, r0, lsr #8
 802497e:	eb01 2112 	add.w	r1, r1, r2, lsr #8
 8024982:	fa1f fc8c 	uxth.w	ip, ip
 8024986:	f3c1 21c4 	ubfx	r1, r1, #11, #5
 802498a:	f400 4078 	and.w	r0, r0, #63488	@ 0xf800
 802498e:	4308      	orrs	r0, r1
 8024990:	f10c 0101 	add.w	r1, ip, #1
 8024994:	eb01 2c1c 	add.w	ip, r1, ip, lsr #8
 8024998:	ea4f 1c5c 	mov.w	ip, ip, lsr #5
 802499c:	f40c 6cfc 	and.w	ip, ip, #2016	@ 0x7e0
 80249a0:	ea40 000c 	orr.w	r0, r0, ip
 80249a4:	f8a8 0000 	strh.w	r0, [r8]
 80249a8:	e7a1      	b.n	80248ee <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x49a>
 80249aa:	b017      	add	sp, #92	@ 0x5c
 80249ac:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}

080249b0 <_ZNK8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtsssiihh>:
 80249b0:	e92d 47f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
 80249b4:	e9dd 050a 	ldrd	r0, r5, [sp, #40]	@ 0x28
 80249b8:	2d00      	cmp	r5, #0
 80249ba:	f9bd 8020 	ldrsh.w	r8, [sp, #32]
 80249be:	f9bd 9024 	ldrsh.w	r9, [sp, #36]	@ 0x24
 80249c2:	f89d 7030 	ldrb.w	r7, [sp, #48]	@ 0x30
 80249c6:	f89d c034 	ldrb.w	ip, [sp, #52]	@ 0x34
 80249ca:	fb05 0e03 	mla	lr, r5, r3, r0
 80249ce:	f2c0 80b0 	blt.w	8024b32 <_ZNK8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtsssiihh+0x182>
 80249d2:	45a9      	cmp	r9, r5
 80249d4:	f340 80ad 	ble.w	8024b32 <_ZNK8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtsssiihh+0x182>
 80249d8:	2800      	cmp	r0, #0
 80249da:	f2c0 80a8 	blt.w	8024b2e <_ZNK8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtsssiihh+0x17e>
 80249de:	4580      	cmp	r8, r0
 80249e0:	f340 80a5 	ble.w	8024b2e <_ZNK8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtsssiihh+0x17e>
 80249e4:	ea4f 045e 	mov.w	r4, lr, lsr #1
 80249e8:	f01e 0f01 	tst.w	lr, #1
 80249ec:	5d16      	ldrb	r6, [r2, r4]
 80249ee:	bf0c      	ite	eq
 80249f0:	f006 060f 	andeq.w	r6, r6, #15
 80249f4:	1136      	asrne	r6, r6, #4
 80249f6:	eb06 1606 	add.w	r6, r6, r6, lsl #4
 80249fa:	b2f6      	uxtb	r6, r6
 80249fc:	1c44      	adds	r4, r0, #1
 80249fe:	f100 809b 	bmi.w	8024b38 <_ZNK8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtsssiihh+0x188>
 8024a02:	45a0      	cmp	r8, r4
 8024a04:	f340 8098 	ble.w	8024b38 <_ZNK8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtsssiihh+0x188>
 8024a08:	2f00      	cmp	r7, #0
 8024a0a:	f000 8097 	beq.w	8024b3c <_ZNK8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtsssiihh+0x18c>
 8024a0e:	f10e 0a01 	add.w	sl, lr, #1
 8024a12:	ea4f 045a 	mov.w	r4, sl, lsr #1
 8024a16:	f01a 0f01 	tst.w	sl, #1
 8024a1a:	5d14      	ldrb	r4, [r2, r4]
 8024a1c:	bf0c      	ite	eq
 8024a1e:	f004 040f 	andeq.w	r4, r4, #15
 8024a22:	1124      	asrne	r4, r4, #4
 8024a24:	eb04 1404 	add.w	r4, r4, r4, lsl #4
 8024a28:	b2e4      	uxtb	r4, r4
 8024a2a:	3501      	adds	r5, #1
 8024a2c:	f100 808a 	bmi.w	8024b44 <_ZNK8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtsssiihh+0x194>
 8024a30:	45a9      	cmp	r9, r5
 8024a32:	f340 8087 	ble.w	8024b44 <_ZNK8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtsssiihh+0x194>
 8024a36:	f1bc 0f00 	cmp.w	ip, #0
 8024a3a:	f000 8086 	beq.w	8024b4a <_ZNK8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtsssiihh+0x19a>
 8024a3e:	2800      	cmp	r0, #0
 8024a40:	db7e      	blt.n	8024b40 <_ZNK8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtsssiihh+0x190>
 8024a42:	4580      	cmp	r8, r0
 8024a44:	dd7c      	ble.n	8024b40 <_ZNK8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtsssiihh+0x190>
 8024a46:	eb03 090e 	add.w	r9, r3, lr
 8024a4a:	ea4f 0559 	mov.w	r5, r9, lsr #1
 8024a4e:	f019 0f01 	tst.w	r9, #1
 8024a52:	5d55      	ldrb	r5, [r2, r5]
 8024a54:	bf0c      	ite	eq
 8024a56:	f005 050f 	andeq.w	r5, r5, #15
 8024a5a:	112d      	asrne	r5, r5, #4
 8024a5c:	eb05 1505 	add.w	r5, r5, r5, lsl #4
 8024a60:	b2ed      	uxtb	r5, r5
 8024a62:	3001      	adds	r0, #1
 8024a64:	d474      	bmi.n	8024b50 <_ZNK8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtsssiihh+0x1a0>
 8024a66:	4580      	cmp	r8, r0
 8024a68:	dd72      	ble.n	8024b50 <_ZNK8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtsssiihh+0x1a0>
 8024a6a:	2f00      	cmp	r7, #0
 8024a6c:	d072      	beq.n	8024b54 <_ZNK8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtsssiihh+0x1a4>
 8024a6e:	3301      	adds	r3, #1
 8024a70:	449e      	add	lr, r3
 8024a72:	ea4f 035e 	mov.w	r3, lr, lsr #1
 8024a76:	f01e 0f01 	tst.w	lr, #1
 8024a7a:	5cd0      	ldrb	r0, [r2, r3]
 8024a7c:	bf0c      	ite	eq
 8024a7e:	f000 000f 	andeq.w	r0, r0, #15
 8024a82:	1100      	asrne	r0, r0, #4
 8024a84:	eb00 1000 	add.w	r0, r0, r0, lsl #4
 8024a88:	b2c3      	uxtb	r3, r0
 8024a8a:	b2ba      	uxth	r2, r7
 8024a8c:	fa1f fc8c 	uxth.w	ip, ip
 8024a90:	fb02 f00c 	mul.w	r0, r2, ip
 8024a94:	ebc0 1c0c 	rsb	ip, r0, ip, lsl #4
 8024a98:	0112      	lsls	r2, r2, #4
 8024a9a:	fa1f fc8c 	uxth.w	ip, ip
 8024a9e:	f5c2 7780 	rsb	r7, r2, #256	@ 0x100
 8024aa2:	1a12      	subs	r2, r2, r0
 8024aa4:	eba7 070c 	sub.w	r7, r7, ip
 8024aa8:	b292      	uxth	r2, r2
 8024aaa:	b2bf      	uxth	r7, r7
 8024aac:	4362      	muls	r2, r4
 8024aae:	fb06 2207 	mla	r2, r6, r7, r2
 8024ab2:	fb0c 2505 	mla	r5, ip, r5, r2
 8024ab6:	fb00 5303 	mla	r3, r0, r3, r5
 8024aba:	f3c3 2307 	ubfx	r3, r3, #8, #8
 8024abe:	b3a3      	cbz	r3, 8024b2a <_ZNK8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtsssiihh+0x17a>
 8024ac0:	4a25      	ldr	r2, [pc, #148]	@ (8024b58 <_ZNK8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtsssiihh+0x1a8>)
 8024ac2:	880e      	ldrh	r6, [r1, #0]
 8024ac4:	6815      	ldr	r5, [r2, #0]
 8024ac6:	1234      	asrs	r4, r6, #8
 8024ac8:	b29a      	uxth	r2, r3
 8024aca:	f3c5 4007 	ubfx	r0, r5, #16, #8
 8024ace:	43db      	mvns	r3, r3
 8024ad0:	b2db      	uxtb	r3, r3
 8024ad2:	fb10 f002 	smulbb	r0, r0, r2
 8024ad6:	f004 04f8 	and.w	r4, r4, #248	@ 0xf8
 8024ada:	fb04 0403 	mla	r4, r4, r3, r0
 8024ade:	f3c5 2707 	ubfx	r7, r5, #8, #8
 8024ae2:	10f0      	asrs	r0, r6, #3
 8024ae4:	b2ed      	uxtb	r5, r5
 8024ae6:	00f6      	lsls	r6, r6, #3
 8024ae8:	fb17 f702 	smulbb	r7, r7, r2
 8024aec:	f000 00fc 	and.w	r0, r0, #252	@ 0xfc
 8024af0:	fb15 f202 	smulbb	r2, r5, r2
 8024af4:	b2f6      	uxtb	r6, r6
 8024af6:	b2a4      	uxth	r4, r4
 8024af8:	fb00 7003 	mla	r0, r0, r3, r7
 8024afc:	fb06 2303 	mla	r3, r6, r3, r2
 8024b00:	b29a      	uxth	r2, r3
 8024b02:	1c63      	adds	r3, r4, #1
 8024b04:	b280      	uxth	r0, r0
 8024b06:	eb03 2414 	add.w	r4, r3, r4, lsr #8
 8024b0a:	1c53      	adds	r3, r2, #1
 8024b0c:	eb03 2312 	add.w	r3, r3, r2, lsr #8
 8024b10:	1c42      	adds	r2, r0, #1
 8024b12:	eb02 2010 	add.w	r0, r2, r0, lsr #8
 8024b16:	f404 4478 	and.w	r4, r4, #63488	@ 0xf800
 8024b1a:	f3c3 23c4 	ubfx	r3, r3, #11, #5
 8024b1e:	0940      	lsrs	r0, r0, #5
 8024b20:	4323      	orrs	r3, r4
 8024b22:	f400 60fc 	and.w	r0, r0, #2016	@ 0x7e0
 8024b26:	4303      	orrs	r3, r0
 8024b28:	800b      	strh	r3, [r1, #0]
 8024b2a:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
 8024b2e:	2600      	movs	r6, #0
 8024b30:	e764      	b.n	80249fc <_ZNK8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtsssiihh+0x4c>
 8024b32:	2400      	movs	r4, #0
 8024b34:	4626      	mov	r6, r4
 8024b36:	e778      	b.n	8024a2a <_ZNK8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtsssiihh+0x7a>
 8024b38:	2400      	movs	r4, #0
 8024b3a:	e776      	b.n	8024a2a <_ZNK8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtsssiihh+0x7a>
 8024b3c:	463c      	mov	r4, r7
 8024b3e:	e774      	b.n	8024a2a <_ZNK8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtsssiihh+0x7a>
 8024b40:	2500      	movs	r5, #0
 8024b42:	e78e      	b.n	8024a62 <_ZNK8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtsssiihh+0xb2>
 8024b44:	2300      	movs	r3, #0
 8024b46:	461d      	mov	r5, r3
 8024b48:	e79f      	b.n	8024a8a <_ZNK8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtsssiihh+0xda>
 8024b4a:	4663      	mov	r3, ip
 8024b4c:	4665      	mov	r5, ip
 8024b4e:	e79c      	b.n	8024a8a <_ZNK8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtsssiihh+0xda>
 8024b50:	2300      	movs	r3, #0
 8024b52:	e79a      	b.n	8024a8a <_ZNK8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtsssiihh+0xda>
 8024b54:	463b      	mov	r3, r7
 8024b56:	e798      	b.n	8024a8a <_ZNK8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtsssiihh+0xda>
 8024b58:	20002fb0 	.word	0x20002fb0

08024b5c <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff>:
 8024b5c:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8024b60:	b093      	sub	sp, #76	@ 0x4c
 8024b62:	461d      	mov	r5, r3
 8024b64:	920c      	str	r2, [sp, #48]	@ 0x30
 8024b66:	9a21      	ldr	r2, [sp, #132]	@ 0x84
 8024b68:	9107      	str	r1, [sp, #28]
 8024b6a:	e9dd 1322 	ldrd	r1, r3, [sp, #136]	@ 0x88
 8024b6e:	9011      	str	r0, [sp, #68]	@ 0x44
 8024b70:	6850      	ldr	r0, [r2, #4]
 8024b72:	6812      	ldr	r2, [r2, #0]
 8024b74:	fb00 1303 	mla	r3, r0, r3, r1
 8024b78:	eb02 0943 	add.w	r9, r2, r3, lsl #1
 8024b7c:	9b24      	ldr	r3, [sp, #144]	@ 0x90
 8024b7e:	689b      	ldr	r3, [r3, #8]
 8024b80:	3301      	adds	r3, #1
 8024b82:	f023 0301 	bic.w	r3, r3, #1
 8024b86:	9306      	str	r3, [sp, #24]
 8024b88:	9b24      	ldr	r3, [sp, #144]	@ 0x90
 8024b8a:	e9dd 461d 	ldrd	r4, r6, [sp, #116]	@ 0x74
 8024b8e:	681f      	ldr	r7, [r3, #0]
 8024b90:	9b07      	ldr	r3, [sp, #28]
 8024b92:	2b00      	cmp	r3, #0
 8024b94:	dc03      	bgt.n	8024b9e <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x42>
 8024b96:	9b0c      	ldr	r3, [sp, #48]	@ 0x30
 8024b98:	2b00      	cmp	r3, #0
 8024b9a:	f340 8267 	ble.w	802506c <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x510>
 8024b9e:	9b24      	ldr	r3, [sp, #144]	@ 0x90
 8024ba0:	f9b3 1008 	ldrsh.w	r1, [r3, #8]
 8024ba4:	f9b3 200c 	ldrsh.w	r2, [r3, #12]
 8024ba8:	1e48      	subs	r0, r1, #1
 8024baa:	f102 3cff 	add.w	ip, r2, #4294967295
 8024bae:	2d00      	cmp	r5, #0
 8024bb0:	f340 80b8 	ble.w	8024d24 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1c8>
 8024bb4:	ea5f 4e24 	movs.w	lr, r4, asr #16
 8024bb8:	ea4f 4326 	mov.w	r3, r6, asr #16
 8024bbc:	d406      	bmi.n	8024bcc <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x70>
 8024bbe:	4586      	cmp	lr, r0
 8024bc0:	da04      	bge.n	8024bcc <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x70>
 8024bc2:	2b00      	cmp	r3, #0
 8024bc4:	db02      	blt.n	8024bcc <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x70>
 8024bc6:	4563      	cmp	r3, ip
 8024bc8:	f2c0 80ad 	blt.w	8024d26 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1ca>
 8024bcc:	f11e 0e01 	adds.w	lr, lr, #1
 8024bd0:	f100 80a0 	bmi.w	8024d14 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1b8>
 8024bd4:	4571      	cmp	r1, lr
 8024bd6:	f2c0 809d 	blt.w	8024d14 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1b8>
 8024bda:	3301      	adds	r3, #1
 8024bdc:	f100 809a 	bmi.w	8024d14 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1b8>
 8024be0:	429a      	cmp	r2, r3
 8024be2:	f2c0 8097 	blt.w	8024d14 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1b8>
 8024be6:	f9bd a018 	ldrsh.w	sl, [sp, #24]
 8024bea:	9509      	str	r5, [sp, #36]	@ 0x24
 8024bec:	46c8      	mov	r8, r9
 8024bee:	9b09      	ldr	r3, [sp, #36]	@ 0x24
 8024bf0:	2b00      	cmp	r3, #0
 8024bf2:	f340 80b6 	ble.w	8024d62 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x206>
 8024bf6:	f3c4 3303 	ubfx	r3, r4, #12, #4
 8024bfa:	9308      	str	r3, [sp, #32]
 8024bfc:	9b24      	ldr	r3, [sp, #144]	@ 0x90
 8024bfe:	e9d3 ce02 	ldrd	ip, lr, [r3, #8]
 8024c02:	1423      	asrs	r3, r4, #16
 8024c04:	ea4f 4026 	mov.w	r0, r6, asr #16
 8024c08:	f3c6 3103 	ubfx	r1, r6, #12, #4
 8024c0c:	f100 813e 	bmi.w	8024e8c <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x330>
 8024c10:	f10c 3bff 	add.w	fp, ip, #4294967295
 8024c14:	455b      	cmp	r3, fp
 8024c16:	f280 8139 	bge.w	8024e8c <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x330>
 8024c1a:	2800      	cmp	r0, #0
 8024c1c:	f2c0 8136 	blt.w	8024e8c <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x330>
 8024c20:	f10e 3bff 	add.w	fp, lr, #4294967295
 8024c24:	4558      	cmp	r0, fp
 8024c26:	f280 8131 	bge.w	8024e8c <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x330>
 8024c2a:	9a06      	ldr	r2, [sp, #24]
 8024c2c:	fb00 3302 	mla	r3, r0, r2, r3
 8024c30:	0858      	lsrs	r0, r3, #1
 8024c32:	07da      	lsls	r2, r3, #31
 8024c34:	f817 c000 	ldrb.w	ip, [r7, r0]
 8024c38:	9a08      	ldr	r2, [sp, #32]
 8024c3a:	bf54      	ite	pl
 8024c3c:	f00c 0c0f 	andpl.w	ip, ip, #15
 8024c40:	ea4f 1c2c 	movmi.w	ip, ip, asr #4
 8024c44:	eb0c 1c0c 	add.w	ip, ip, ip, lsl #4
 8024c48:	fa5f fc8c 	uxtb.w	ip, ip
 8024c4c:	2a00      	cmp	r2, #0
 8024c4e:	f000 80cb 	beq.w	8024de8 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x28c>
 8024c52:	1c58      	adds	r0, r3, #1
 8024c54:	ea4f 0e50 	mov.w	lr, r0, lsr #1
 8024c58:	07c0      	lsls	r0, r0, #31
 8024c5a:	f817 e00e 	ldrb.w	lr, [r7, lr]
 8024c5e:	bf54      	ite	pl
 8024c60:	f00e 0e0f 	andpl.w	lr, lr, #15
 8024c64:	ea4f 1e2e 	movmi.w	lr, lr, asr #4
 8024c68:	eb0e 1e0e 	add.w	lr, lr, lr, lsl #4
 8024c6c:	fa5f fe8e 	uxtb.w	lr, lr
 8024c70:	f8cd e034 	str.w	lr, [sp, #52]	@ 0x34
 8024c74:	b1b9      	cbz	r1, 8024ca6 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x14a>
 8024c76:	4453      	add	r3, sl
 8024c78:	0858      	lsrs	r0, r3, #1
 8024c7a:	07da      	lsls	r2, r3, #31
 8024c7c:	5c38      	ldrb	r0, [r7, r0]
 8024c7e:	bf54      	ite	pl
 8024c80:	f000 000f 	andpl.w	r0, r0, #15
 8024c84:	1100      	asrmi	r0, r0, #4
 8024c86:	eb00 1000 	add.w	r0, r0, r0, lsl #4
 8024c8a:	b2c0      	uxtb	r0, r0
 8024c8c:	900a      	str	r0, [sp, #40]	@ 0x28
 8024c8e:	1c58      	adds	r0, r3, #1
 8024c90:	0843      	lsrs	r3, r0, #1
 8024c92:	07c2      	lsls	r2, r0, #31
 8024c94:	5cfb      	ldrb	r3, [r7, r3]
 8024c96:	bf54      	ite	pl
 8024c98:	f003 030f 	andpl.w	r3, r3, #15
 8024c9c:	111b      	asrmi	r3, r3, #4
 8024c9e:	eb03 1303 	add.w	r3, r3, r3, lsl #4
 8024ca2:	b2db      	uxtb	r3, r3
 8024ca4:	930e      	str	r3, [sp, #56]	@ 0x38
 8024ca6:	f8bd 2020 	ldrh.w	r2, [sp, #32]
 8024caa:	b289      	uxth	r1, r1
 8024cac:	fb02 f301 	mul.w	r3, r2, r1
 8024cb0:	ebc3 1101 	rsb	r1, r3, r1, lsl #4
 8024cb4:	0112      	lsls	r2, r2, #4
 8024cb6:	b289      	uxth	r1, r1
 8024cb8:	f5c2 7080 	rsb	r0, r2, #256	@ 0x100
 8024cbc:	1a40      	subs	r0, r0, r1
 8024cbe:	fa1f fe80 	uxth.w	lr, r0
 8024cc2:	1ad2      	subs	r2, r2, r3
 8024cc4:	980d      	ldr	r0, [sp, #52]	@ 0x34
 8024cc6:	b292      	uxth	r2, r2
 8024cc8:	4342      	muls	r2, r0
 8024cca:	fb0c 2c0e 	mla	ip, ip, lr, r2
 8024cce:	9a0a      	ldr	r2, [sp, #40]	@ 0x28
 8024cd0:	fb01 c102 	mla	r1, r1, r2, ip
 8024cd4:	9a0e      	ldr	r2, [sp, #56]	@ 0x38
 8024cd6:	fb03 1302 	mla	r3, r3, r2, r1
 8024cda:	f3c3 2307 	ubfx	r3, r3, #8, #8
 8024cde:	2bff      	cmp	r3, #255	@ 0xff
 8024ce0:	f040 8093 	bne.w	8024e0a <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2ae>
 8024ce4:	4bbe      	ldr	r3, [pc, #760]	@ (8024fe0 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x484>)
 8024ce6:	681a      	ldr	r2, [r3, #0]
 8024ce8:	4bbe      	ldr	r3, [pc, #760]	@ (8024fe4 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x488>)
 8024cea:	0951      	lsrs	r1, r2, #5
 8024cec:	ea03 2312 	and.w	r3, r3, r2, lsr #8
 8024cf0:	f401 61fc 	and.w	r1, r1, #2016	@ 0x7e0
 8024cf4:	430b      	orrs	r3, r1
 8024cf6:	f3c2 02c4 	ubfx	r2, r2, #3, #5
 8024cfa:	4313      	orrs	r3, r2
 8024cfc:	f8a8 3000 	strh.w	r3, [r8]
 8024d00:	9b1f      	ldr	r3, [sp, #124]	@ 0x7c
 8024d02:	441c      	add	r4, r3
 8024d04:	9b20      	ldr	r3, [sp, #128]	@ 0x80
 8024d06:	441e      	add	r6, r3
 8024d08:	9b09      	ldr	r3, [sp, #36]	@ 0x24
 8024d0a:	3b01      	subs	r3, #1
 8024d0c:	f108 0802 	add.w	r8, r8, #2
 8024d10:	9309      	str	r3, [sp, #36]	@ 0x24
 8024d12:	e76c      	b.n	8024bee <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x92>
 8024d14:	9b1f      	ldr	r3, [sp, #124]	@ 0x7c
 8024d16:	441c      	add	r4, r3
 8024d18:	9b20      	ldr	r3, [sp, #128]	@ 0x80
 8024d1a:	3d01      	subs	r5, #1
 8024d1c:	441e      	add	r6, r3
 8024d1e:	f109 0902 	add.w	r9, r9, #2
 8024d22:	e744      	b.n	8024bae <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x52>
 8024d24:	d021      	beq.n	8024d6a <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x20e>
 8024d26:	981f      	ldr	r0, [sp, #124]	@ 0x7c
 8024d28:	1e6b      	subs	r3, r5, #1
 8024d2a:	fb00 4003 	mla	r0, r0, r3, r4
 8024d2e:	1400      	asrs	r0, r0, #16
 8024d30:	f53f af59 	bmi.w	8024be6 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x8a>
 8024d34:	3901      	subs	r1, #1
 8024d36:	4288      	cmp	r0, r1
 8024d38:	f6bf af55 	bge.w	8024be6 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x8a>
 8024d3c:	9920      	ldr	r1, [sp, #128]	@ 0x80
 8024d3e:	fb01 6303 	mla	r3, r1, r3, r6
 8024d42:	141b      	asrs	r3, r3, #16
 8024d44:	f53f af4f 	bmi.w	8024be6 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x8a>
 8024d48:	3a01      	subs	r2, #1
 8024d4a:	4293      	cmp	r3, r2
 8024d4c:	f6bf af4b 	bge.w	8024be6 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x8a>
 8024d50:	f9bd 3018 	ldrsh.w	r3, [sp, #24]
 8024d54:	9308      	str	r3, [sp, #32]
 8024d56:	46a8      	mov	r8, r5
 8024d58:	46ce      	mov	lr, r9
 8024d5a:	f1b8 0f00 	cmp.w	r8, #0
 8024d5e:	f300 80b5 	bgt.w	8024ecc <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x370>
 8024d62:	ea25 75e5 	bic.w	r5, r5, r5, asr #31
 8024d66:	eb09 0945 	add.w	r9, r9, r5, lsl #1
 8024d6a:	9b07      	ldr	r3, [sp, #28]
 8024d6c:	2b00      	cmp	r3, #0
 8024d6e:	f340 817d 	ble.w	802506c <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x510>
 8024d72:	ee30 0a04 	vadd.f32	s0, s0, s8
 8024d76:	eeb7 7a00 	vmov.f32	s14, #112	@ 0x3f800000  1.0
 8024d7a:	eec7 7a00 	vdiv.f32	s15, s14, s0
 8024d7e:	9b1c      	ldr	r3, [sp, #112]	@ 0x70
 8024d80:	ee70 0aa4 	vadd.f32	s1, s1, s9
 8024d84:	ee31 1a05 	vadd.f32	s2, s2, s10
 8024d88:	ee20 7aa7 	vmul.f32	s14, s1, s15
 8024d8c:	eef0 6a62 	vmov.f32	s13, s5
 8024d90:	ee61 7a27 	vmul.f32	s15, s2, s15
 8024d94:	eefe 6ac8 	vcvt.s32.f32	s13, s13, #16
 8024d98:	ee77 2a62 	vsub.f32	s5, s14, s5
 8024d9c:	ee16 4a90 	vmov	r4, s13
 8024da0:	eefe 2ac8 	vcvt.s32.f32	s5, s5, #16
 8024da4:	eef0 6a43 	vmov.f32	s13, s6
 8024da8:	ee37 3ac3 	vsub.f32	s6, s15, s6
 8024dac:	ee12 2a90 	vmov	r2, s5
 8024db0:	eebe 3ac8 	vcvt.s32.f32	s6, s6, #16
 8024db4:	fb92 f3f3 	sdiv	r3, r2, r3
 8024db8:	ee13 2a10 	vmov	r2, s6
 8024dbc:	931f      	str	r3, [sp, #124]	@ 0x7c
 8024dbe:	9b1c      	ldr	r3, [sp, #112]	@ 0x70
 8024dc0:	fb92 f3f3 	sdiv	r3, r2, r3
 8024dc4:	9320      	str	r3, [sp, #128]	@ 0x80
 8024dc6:	9b07      	ldr	r3, [sp, #28]
 8024dc8:	9a0c      	ldr	r2, [sp, #48]	@ 0x30
 8024dca:	3b01      	subs	r3, #1
 8024dcc:	eefe 6ac8 	vcvt.s32.f32	s13, s13, #16
 8024dd0:	9307      	str	r3, [sp, #28]
 8024dd2:	9b1c      	ldr	r3, [sp, #112]	@ 0x70
 8024dd4:	ee16 6a90 	vmov	r6, s13
 8024dd8:	bf14      	ite	ne
 8024dda:	461d      	movne	r5, r3
 8024ddc:	4615      	moveq	r5, r2
 8024dde:	eeb0 3a67 	vmov.f32	s6, s15
 8024de2:	eef0 2a47 	vmov.f32	s5, s14
 8024de6:	e6d3      	b.n	8024b90 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x34>
 8024de8:	2900      	cmp	r1, #0
 8024dea:	f43f af5c 	beq.w	8024ca6 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x14a>
 8024dee:	eb0a 0003 	add.w	r0, sl, r3
 8024df2:	0843      	lsrs	r3, r0, #1
 8024df4:	07c0      	lsls	r0, r0, #31
 8024df6:	5cfb      	ldrb	r3, [r7, r3]
 8024df8:	bf54      	ite	pl
 8024dfa:	f003 030f 	andpl.w	r3, r3, #15
 8024dfe:	111b      	asrmi	r3, r3, #4
 8024e00:	eb03 1303 	add.w	r3, r3, r3, lsl #4
 8024e04:	b2db      	uxtb	r3, r3
 8024e06:	930a      	str	r3, [sp, #40]	@ 0x28
 8024e08:	e74d      	b.n	8024ca6 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x14a>
 8024e0a:	2b00      	cmp	r3, #0
 8024e0c:	f43f af78 	beq.w	8024d00 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1a4>
 8024e10:	4a73      	ldr	r2, [pc, #460]	@ (8024fe0 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x484>)
 8024e12:	f8b8 c000 	ldrh.w	ip, [r8]
 8024e16:	6810      	ldr	r0, [r2, #0]
 8024e18:	fa1f fe83 	uxth.w	lr, r3
 8024e1c:	ea4f 212c 	mov.w	r1, ip, asr #8
 8024e20:	f3c0 4207 	ubfx	r2, r0, #16, #8
 8024e24:	43db      	mvns	r3, r3
 8024e26:	b2db      	uxtb	r3, r3
 8024e28:	fb12 f20e 	smulbb	r2, r2, lr
 8024e2c:	f001 01f8 	and.w	r1, r1, #248	@ 0xf8
 8024e30:	fb01 2103 	mla	r1, r1, r3, r2
 8024e34:	f3c0 2b07 	ubfx	fp, r0, #8, #8
 8024e38:	ea4f 02ec 	mov.w	r2, ip, asr #3
 8024e3c:	b2c0      	uxtb	r0, r0
 8024e3e:	ea4f 0ccc 	mov.w	ip, ip, lsl #3
 8024e42:	fb1b fb0e 	smulbb	fp, fp, lr
 8024e46:	b289      	uxth	r1, r1
 8024e48:	fb10 fe0e 	smulbb	lr, r0, lr
 8024e4c:	f002 02fc 	and.w	r2, r2, #252	@ 0xfc
 8024e50:	fa5f fc8c 	uxtb.w	ip, ip
 8024e54:	fb02 b203 	mla	r2, r2, r3, fp
 8024e58:	1c48      	adds	r0, r1, #1
 8024e5a:	fb0c e303 	mla	r3, ip, r3, lr
 8024e5e:	b292      	uxth	r2, r2
 8024e60:	b29b      	uxth	r3, r3
 8024e62:	eb00 2111 	add.w	r1, r0, r1, lsr #8
 8024e66:	f401 4078 	and.w	r0, r1, #63488	@ 0xf800
 8024e6a:	f102 0b01 	add.w	fp, r2, #1
 8024e6e:	1c59      	adds	r1, r3, #1
 8024e70:	eb01 2113 	add.w	r1, r1, r3, lsr #8
 8024e74:	eb0b 2212 	add.w	r2, fp, r2, lsr #8
 8024e78:	f3c1 21c4 	ubfx	r1, r1, #11, #5
 8024e7c:	0952      	lsrs	r2, r2, #5
 8024e7e:	4301      	orrs	r1, r0
 8024e80:	f402 62fc 	and.w	r2, r2, #2016	@ 0x7e0
 8024e84:	4311      	orrs	r1, r2
 8024e86:	f8a8 1000 	strh.w	r1, [r8]
 8024e8a:	e739      	b.n	8024d00 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1a4>
 8024e8c:	f113 0b01 	adds.w	fp, r3, #1
 8024e90:	f53f af36 	bmi.w	8024d00 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1a4>
 8024e94:	45dc      	cmp	ip, fp
 8024e96:	f6ff af33 	blt.w	8024d00 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1a4>
 8024e9a:	f110 0b01 	adds.w	fp, r0, #1
 8024e9e:	f53f af2f 	bmi.w	8024d00 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1a4>
 8024ea2:	45de      	cmp	lr, fp
 8024ea4:	f6ff af2c 	blt.w	8024d00 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1a4>
 8024ea8:	9a08      	ldr	r2, [sp, #32]
 8024eaa:	9302      	str	r3, [sp, #8]
 8024eac:	fa0f f38e 	sxth.w	r3, lr
 8024eb0:	9301      	str	r3, [sp, #4]
 8024eb2:	fa0f f38c 	sxth.w	r3, ip
 8024eb6:	e9cd 0203 	strd	r0, r2, [sp, #12]
 8024eba:	9105      	str	r1, [sp, #20]
 8024ebc:	9300      	str	r3, [sp, #0]
 8024ebe:	463a      	mov	r2, r7
 8024ec0:	4653      	mov	r3, sl
 8024ec2:	4641      	mov	r1, r8
 8024ec4:	9811      	ldr	r0, [sp, #68]	@ 0x44
 8024ec6:	f7ff fd73 	bl	80249b0 <_ZNK8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtsssiihh>
 8024eca:	e719      	b.n	8024d00 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1a4>
 8024ecc:	9906      	ldr	r1, [sp, #24]
 8024ece:	1422      	asrs	r2, r4, #16
 8024ed0:	1433      	asrs	r3, r6, #16
 8024ed2:	fb01 2303 	mla	r3, r1, r3, r2
 8024ed6:	085a      	lsrs	r2, r3, #1
 8024ed8:	07d9      	lsls	r1, r3, #31
 8024eda:	5cba      	ldrb	r2, [r7, r2]
 8024edc:	bf54      	ite	pl
 8024ede:	f002 020f 	andpl.w	r2, r2, #15
 8024ee2:	1112      	asrmi	r2, r2, #4
 8024ee4:	eb02 1202 	add.w	r2, r2, r2, lsl #4
 8024ee8:	f3c4 3003 	ubfx	r0, r4, #12, #4
 8024eec:	f3c6 3c03 	ubfx	ip, r6, #12, #4
 8024ef0:	b2d2      	uxtb	r2, r2
 8024ef2:	2800      	cmp	r0, #0
 8024ef4:	d062      	beq.n	8024fbc <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x460>
 8024ef6:	f103 0a01 	add.w	sl, r3, #1
 8024efa:	ea4f 015a 	mov.w	r1, sl, lsr #1
 8024efe:	f01a 0f01 	tst.w	sl, #1
 8024f02:	5c79      	ldrb	r1, [r7, r1]
 8024f04:	bf0c      	ite	eq
 8024f06:	f001 010f 	andeq.w	r1, r1, #15
 8024f0a:	1109      	asrne	r1, r1, #4
 8024f0c:	eb01 1101 	add.w	r1, r1, r1, lsl #4
 8024f10:	b2c9      	uxtb	r1, r1
 8024f12:	910f      	str	r1, [sp, #60]	@ 0x3c
 8024f14:	f1bc 0f00 	cmp.w	ip, #0
 8024f18:	d019      	beq.n	8024f4e <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3f2>
 8024f1a:	9908      	ldr	r1, [sp, #32]
 8024f1c:	440b      	add	r3, r1
 8024f1e:	0859      	lsrs	r1, r3, #1
 8024f20:	f013 0f01 	tst.w	r3, #1
 8024f24:	5c79      	ldrb	r1, [r7, r1]
 8024f26:	bf0c      	ite	eq
 8024f28:	f001 010f 	andeq.w	r1, r1, #15
 8024f2c:	1109      	asrne	r1, r1, #4
 8024f2e:	eb01 1101 	add.w	r1, r1, r1, lsl #4
 8024f32:	b2c9      	uxtb	r1, r1
 8024f34:	3301      	adds	r3, #1
 8024f36:	910b      	str	r1, [sp, #44]	@ 0x2c
 8024f38:	0859      	lsrs	r1, r3, #1
 8024f3a:	07db      	lsls	r3, r3, #31
 8024f3c:	5c79      	ldrb	r1, [r7, r1]
 8024f3e:	bf54      	ite	pl
 8024f40:	f001 010f 	andpl.w	r1, r1, #15
 8024f44:	1109      	asrmi	r1, r1, #4
 8024f46:	eb01 1101 	add.w	r1, r1, r1, lsl #4
 8024f4a:	b2c9      	uxtb	r1, r1
 8024f4c:	9110      	str	r1, [sp, #64]	@ 0x40
 8024f4e:	b280      	uxth	r0, r0
 8024f50:	fa1f fc8c 	uxth.w	ip, ip
 8024f54:	fb00 f30c 	mul.w	r3, r0, ip
 8024f58:	ebc3 1c0c 	rsb	ip, r3, ip, lsl #4
 8024f5c:	0100      	lsls	r0, r0, #4
 8024f5e:	fa1f fc8c 	uxth.w	ip, ip
 8024f62:	f5c0 7180 	rsb	r1, r0, #256	@ 0x100
 8024f66:	eba1 010c 	sub.w	r1, r1, ip
 8024f6a:	fa1f fa81 	uxth.w	sl, r1
 8024f6e:	1ac0      	subs	r0, r0, r3
 8024f70:	990f      	ldr	r1, [sp, #60]	@ 0x3c
 8024f72:	b280      	uxth	r0, r0
 8024f74:	4348      	muls	r0, r1
 8024f76:	990b      	ldr	r1, [sp, #44]	@ 0x2c
 8024f78:	fb02 020a 	mla	r2, r2, sl, r0
 8024f7c:	fb0c 2c01 	mla	ip, ip, r1, r2
 8024f80:	9a10      	ldr	r2, [sp, #64]	@ 0x40
 8024f82:	fb03 c302 	mla	r3, r3, r2, ip
 8024f86:	f3c3 2307 	ubfx	r3, r3, #8, #8
 8024f8a:	2bff      	cmp	r3, #255	@ 0xff
 8024f8c:	d12c      	bne.n	8024fe8 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x48c>
 8024f8e:	4b14      	ldr	r3, [pc, #80]	@ (8024fe0 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x484>)
 8024f90:	681a      	ldr	r2, [r3, #0]
 8024f92:	4b14      	ldr	r3, [pc, #80]	@ (8024fe4 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x488>)
 8024f94:	0951      	lsrs	r1, r2, #5
 8024f96:	ea03 2312 	and.w	r3, r3, r2, lsr #8
 8024f9a:	f401 61fc 	and.w	r1, r1, #2016	@ 0x7e0
 8024f9e:	430b      	orrs	r3, r1
 8024fa0:	f3c2 02c4 	ubfx	r2, r2, #3, #5
 8024fa4:	4313      	orrs	r3, r2
 8024fa6:	f8ae 3000 	strh.w	r3, [lr]
 8024faa:	9b1f      	ldr	r3, [sp, #124]	@ 0x7c
 8024fac:	441c      	add	r4, r3
 8024fae:	9b20      	ldr	r3, [sp, #128]	@ 0x80
 8024fb0:	f10e 0e02 	add.w	lr, lr, #2
 8024fb4:	441e      	add	r6, r3
 8024fb6:	f108 38ff 	add.w	r8, r8, #4294967295
 8024fba:	e6ce      	b.n	8024d5a <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1fe>
 8024fbc:	f1bc 0f00 	cmp.w	ip, #0
 8024fc0:	d0c5      	beq.n	8024f4e <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3f2>
 8024fc2:	9908      	ldr	r1, [sp, #32]
 8024fc4:	440b      	add	r3, r1
 8024fc6:	0859      	lsrs	r1, r3, #1
 8024fc8:	07db      	lsls	r3, r3, #31
 8024fca:	5c79      	ldrb	r1, [r7, r1]
 8024fcc:	bf54      	ite	pl
 8024fce:	f001 010f 	andpl.w	r1, r1, #15
 8024fd2:	1109      	asrmi	r1, r1, #4
 8024fd4:	eb01 1101 	add.w	r1, r1, r1, lsl #4
 8024fd8:	b2c9      	uxtb	r1, r1
 8024fda:	910b      	str	r1, [sp, #44]	@ 0x2c
 8024fdc:	e7b7      	b.n	8024f4e <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3f2>
 8024fde:	bf00      	nop
 8024fe0:	20002fb0 	.word	0x20002fb0
 8024fe4:	fffff800 	.word	0xfffff800
 8024fe8:	2b00      	cmp	r3, #0
 8024fea:	d0de      	beq.n	8024faa <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x44e>
 8024fec:	4a21      	ldr	r2, [pc, #132]	@ (8025074 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x518>)
 8024fee:	f8be c000 	ldrh.w	ip, [lr]
 8024ff2:	6810      	ldr	r0, [r2, #0]
 8024ff4:	fa1f fa83 	uxth.w	sl, r3
 8024ff8:	ea4f 212c 	mov.w	r1, ip, asr #8
 8024ffc:	f3c0 4207 	ubfx	r2, r0, #16, #8
 8025000:	43db      	mvns	r3, r3
 8025002:	b2db      	uxtb	r3, r3
 8025004:	fb12 f20a 	smulbb	r2, r2, sl
 8025008:	f001 01f8 	and.w	r1, r1, #248	@ 0xf8
 802500c:	fb01 2103 	mla	r1, r1, r3, r2
 8025010:	f3c0 2b07 	ubfx	fp, r0, #8, #8
 8025014:	ea4f 02ec 	mov.w	r2, ip, asr #3
 8025018:	b2c0      	uxtb	r0, r0
 802501a:	ea4f 0ccc 	mov.w	ip, ip, lsl #3
 802501e:	fa5f fc8c 	uxtb.w	ip, ip
 8025022:	fb10 f00a 	smulbb	r0, r0, sl
 8025026:	fb0c 0003 	mla	r0, ip, r3, r0
 802502a:	b289      	uxth	r1, r1
 802502c:	fb1b fb0a 	smulbb	fp, fp, sl
 8025030:	b280      	uxth	r0, r0
 8025032:	f002 02fc 	and.w	r2, r2, #252	@ 0xfc
 8025036:	fb02 b203 	mla	r2, r2, r3, fp
 802503a:	1c4b      	adds	r3, r1, #1
 802503c:	f100 0b01 	add.w	fp, r0, #1
 8025040:	eb03 2111 	add.w	r1, r3, r1, lsr #8
 8025044:	eb0b 2b10 	add.w	fp, fp, r0, lsr #8
 8025048:	b292      	uxth	r2, r2
 802504a:	f3cb 2bc4 	ubfx	fp, fp, #11, #5
 802504e:	f401 4178 	and.w	r1, r1, #63488	@ 0xf800
 8025052:	ea4b 0101 	orr.w	r1, fp, r1
 8025056:	f102 0b01 	add.w	fp, r2, #1
 802505a:	eb0b 2212 	add.w	r2, fp, r2, lsr #8
 802505e:	0952      	lsrs	r2, r2, #5
 8025060:	f402 62fc 	and.w	r2, r2, #2016	@ 0x7e0
 8025064:	4311      	orrs	r1, r2
 8025066:	f8ae 1000 	strh.w	r1, [lr]
 802506a:	e79e      	b.n	8024faa <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x44e>
 802506c:	b013      	add	sp, #76	@ 0x4c
 802506e:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 8025072:	bf00      	nop
 8025074:	20002fb0 	.word	0x20002fb0

08025078 <_ZNK8touchgfx8LCD16bpp17DecompressorL8_L416blendPixelRGB565Ettii>:
 8025078:	b570      	push	{r4, r5, r6, lr}
 802507a:	1208      	asrs	r0, r1, #8
 802507c:	b29e      	uxth	r6, r3
 802507e:	f8bd 5010 	ldrh.w	r5, [sp, #16]
 8025082:	1213      	asrs	r3, r2, #8
 8025084:	f000 00f8 	and.w	r0, r0, #248	@ 0xf8
 8025088:	f003 03f8 	and.w	r3, r3, #248	@ 0xf8
 802508c:	fb13 f305 	smulbb	r3, r3, r5
 8025090:	fb10 f006 	smulbb	r0, r0, r6
 8025094:	4418      	add	r0, r3
 8025096:	10cc      	asrs	r4, r1, #3
 8025098:	10d3      	asrs	r3, r2, #3
 802509a:	f004 04fc 	and.w	r4, r4, #252	@ 0xfc
 802509e:	f003 03fc 	and.w	r3, r3, #252	@ 0xfc
 80250a2:	fb13 f305 	smulbb	r3, r3, r5
 80250a6:	fb14 f406 	smulbb	r4, r4, r6
 80250aa:	00c9      	lsls	r1, r1, #3
 80250ac:	00d2      	lsls	r2, r2, #3
 80250ae:	441c      	add	r4, r3
 80250b0:	b2d2      	uxtb	r2, r2
 80250b2:	b2cb      	uxtb	r3, r1
 80250b4:	fb12 f205 	smulbb	r2, r2, r5
 80250b8:	b280      	uxth	r0, r0
 80250ba:	fb13 f306 	smulbb	r3, r3, r6
 80250be:	4413      	add	r3, r2
 80250c0:	1c42      	adds	r2, r0, #1
 80250c2:	b29b      	uxth	r3, r3
 80250c4:	eb02 2010 	add.w	r0, r2, r0, lsr #8
 80250c8:	f400 4278 	and.w	r2, r0, #63488	@ 0xf800
 80250cc:	1c58      	adds	r0, r3, #1
 80250ce:	eb00 2013 	add.w	r0, r0, r3, lsr #8
 80250d2:	b2a4      	uxth	r4, r4
 80250d4:	f3c0 20c4 	ubfx	r0, r0, #11, #5
 80250d8:	4310      	orrs	r0, r2
 80250da:	1c62      	adds	r2, r4, #1
 80250dc:	eb02 2414 	add.w	r4, r2, r4, lsr #8
 80250e0:	0964      	lsrs	r4, r4, #5
 80250e2:	f404 64fc 	and.w	r4, r4, #2016	@ 0x7e0
 80250e6:	4320      	orrs	r0, r4
 80250e8:	bd70      	pop	{r4, r5, r6, pc}
	...

080250ec <_ZN8touchgfx8LCD16bpp17DecompressorL8_L414blitCopyRGB565EPKhS3_RKNS_4RectES6_h>:
 80250ec:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 80250f0:	b08f      	sub	sp, #60	@ 0x3c
 80250f2:	461c      	mov	r4, r3
 80250f4:	f89d 7064 	ldrb.w	r7, [sp, #100]	@ 0x64
 80250f8:	9004      	str	r0, [sp, #16]
 80250fa:	460d      	mov	r5, r1
 80250fc:	4616      	mov	r6, r2
 80250fe:	9b18      	ldr	r3, [sp, #96]	@ 0x60
 8025100:	2f00      	cmp	r7, #0
 8025102:	f000 80f6 	beq.w	80252f2 <_ZN8touchgfx8LCD16bpp17DecompressorL8_L414blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x206>
 8025106:	6820      	ldr	r0, [r4, #0]
 8025108:	6861      	ldr	r1, [r4, #4]
 802510a:	aa0a      	add	r2, sp, #40	@ 0x28
 802510c:	c203      	stmia	r2!, {r0, r1}
 802510e:	6818      	ldr	r0, [r3, #0]
 8025110:	6859      	ldr	r1, [r3, #4]
 8025112:	aa0c      	add	r2, sp, #48	@ 0x30
 8025114:	c203      	stmia	r2!, {r0, r1}
 8025116:	a80a      	add	r0, sp, #40	@ 0x28
 8025118:	f7ee fdd4 	bl	8013cc4 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectE>
 802511c:	4621      	mov	r1, r4
 802511e:	a80c      	add	r0, sp, #48	@ 0x30
 8025120:	f7ee fdf8 	bl	8013d14 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectERKS1_>
 8025124:	f9bd 2030 	ldrsh.w	r2, [sp, #48]	@ 0x30
 8025128:	f9bd b036 	ldrsh.w	fp, [sp, #54]	@ 0x36
 802512c:	f9bd 9034 	ldrsh.w	r9, [sp, #52]	@ 0x34
 8025130:	f002 0301 	and.w	r3, r2, #1
 8025134:	9306      	str	r3, [sp, #24]
 8025136:	f9bd 302c 	ldrsh.w	r3, [sp, #44]	@ 0x2c
 802513a:	f003 0101 	and.w	r1, r3, #1
 802513e:	9105      	str	r1, [sp, #20]
 8025140:	9805      	ldr	r0, [sp, #20]
 8025142:	f9bd 1032 	ldrsh.w	r1, [sp, #50]	@ 0x32
 8025146:	4403      	add	r3, r0
 8025148:	fb01 2303 	mla	r3, r1, r3, r2
 802514c:	f04f 0802 	mov.w	r8, #2
 8025150:	fb93 f3f8 	sdiv	r3, r3, r8
 8025154:	441d      	add	r5, r3
 8025156:	f8bd 3028 	ldrh.w	r3, [sp, #40]	@ 0x28
 802515a:	441a      	add	r2, r3
 802515c:	f8bd 302a 	ldrh.w	r3, [sp, #42]	@ 0x2a
 8025160:	f8ad 2030 	strh.w	r2, [sp, #48]	@ 0x30
 8025164:	4419      	add	r1, r3
 8025166:	4b64      	ldr	r3, [pc, #400]	@ (80252f8 <_ZN8touchgfx8LCD16bpp17DecompressorL8_L414blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x20c>)
 8025168:	f8ad 1032 	strh.w	r1, [sp, #50]	@ 0x32
 802516c:	6818      	ldr	r0, [r3, #0]
 802516e:	6803      	ldr	r3, [r0, #0]
 8025170:	6a9b      	ldr	r3, [r3, #40]	@ 0x28
 8025172:	4798      	blx	r3
 8025174:	4a61      	ldr	r2, [pc, #388]	@ (80252fc <_ZN8touchgfx8LCD16bpp17DecompressorL8_L414blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x210>)
 8025176:	f9bd 4032 	ldrsh.w	r4, [sp, #50]	@ 0x32
 802517a:	8813      	ldrh	r3, [r2, #0]
 802517c:	f9bd a030 	ldrsh.w	sl, [sp, #48]	@ 0x30
 8025180:	2fff      	cmp	r7, #255	@ 0xff
 8025182:	fb03 a404 	mla	r4, r3, r4, sl
 8025186:	eb00 0444 	add.w	r4, r0, r4, lsl #1
 802518a:	f106 0604 	add.w	r6, r6, #4
 802518e:	4611      	mov	r1, r2
 8025190:	fb03 fb0b 	mul.w	fp, r3, fp
 8025194:	d06b      	beq.n	802526e <_ZN8touchgfx8LCD16bpp17DecompressorL8_L414blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x182>
 8025196:	f1c7 03ff 	rsb	r3, r7, #255	@ 0xff
 802519a:	9303      	str	r3, [sp, #12]
 802519c:	eb04 034b 	add.w	r3, r4, fp, lsl #1
 80251a0:	e9cd 3207 	strd	r3, r2, [sp, #28]
 80251a4:	f8cd 8024 	str.w	r8, [sp, #36]	@ 0x24
 80251a8:	9b07      	ldr	r3, [sp, #28]
 80251aa:	42a3      	cmp	r3, r4
 80251ac:	f240 809c 	bls.w	80252e8 <_ZN8touchgfx8LCD16bpp17DecompressorL8_L414blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x1fc>
 80251b0:	9b06      	ldr	r3, [sp, #24]
 80251b2:	2b00      	cmp	r3, #0
 80251b4:	d039      	beq.n	802522a <_ZN8touchgfx8LCD16bpp17DecompressorL8_L414blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x13e>
 80251b6:	782b      	ldrb	r3, [r5, #0]
 80251b8:	8822      	ldrh	r2, [r4, #0]
 80251ba:	9804      	ldr	r0, [sp, #16]
 80251bc:	f003 030f 	and.w	r3, r3, #15
 80251c0:	f105 0801 	add.w	r8, r5, #1
 80251c4:	f836 1013 	ldrh.w	r1, [r6, r3, lsl #1]
 80251c8:	9b03      	ldr	r3, [sp, #12]
 80251ca:	9300      	str	r3, [sp, #0]
 80251cc:	463b      	mov	r3, r7
 80251ce:	f7ff ff53 	bl	8025078 <_ZNK8touchgfx8LCD16bpp17DecompressorL8_L416blendPixelRGB565Ettii>
 80251d2:	f824 0b02 	strh.w	r0, [r4], #2
 80251d6:	f109 3bff 	add.w	fp, r9, #4294967295
 80251da:	f1bb 0f01 	cmp.w	fp, #1
 80251de:	46a2      	mov	sl, r4
 80251e0:	f104 0404 	add.w	r4, r4, #4
 80251e4:	dd24      	ble.n	8025230 <_ZN8touchgfx8LCD16bpp17DecompressorL8_L414blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x144>
 80251e6:	f898 3000 	ldrb.w	r3, [r8]
 80251ea:	f834 2c04 	ldrh.w	r2, [r4, #-4]
 80251ee:	9804      	ldr	r0, [sp, #16]
 80251f0:	091b      	lsrs	r3, r3, #4
 80251f2:	f1ab 0b02 	sub.w	fp, fp, #2
 80251f6:	f836 1013 	ldrh.w	r1, [r6, r3, lsl #1]
 80251fa:	9b03      	ldr	r3, [sp, #12]
 80251fc:	9300      	str	r3, [sp, #0]
 80251fe:	463b      	mov	r3, r7
 8025200:	f7ff ff3a 	bl	8025078 <_ZNK8touchgfx8LCD16bpp17DecompressorL8_L416blendPixelRGB565Ettii>
 8025204:	f824 0c04 	strh.w	r0, [r4, #-4]
 8025208:	f818 3b01 	ldrb.w	r3, [r8], #1
 802520c:	f834 2c02 	ldrh.w	r2, [r4, #-2]
 8025210:	9804      	ldr	r0, [sp, #16]
 8025212:	f003 030f 	and.w	r3, r3, #15
 8025216:	f836 1013 	ldrh.w	r1, [r6, r3, lsl #1]
 802521a:	9b03      	ldr	r3, [sp, #12]
 802521c:	9300      	str	r3, [sp, #0]
 802521e:	463b      	mov	r3, r7
 8025220:	f7ff ff2a 	bl	8025078 <_ZNK8touchgfx8LCD16bpp17DecompressorL8_L416blendPixelRGB565Ettii>
 8025224:	f824 0c02 	strh.w	r0, [r4, #-2]
 8025228:	e7d7      	b.n	80251da <_ZN8touchgfx8LCD16bpp17DecompressorL8_L414blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0xee>
 802522a:	46a8      	mov	r8, r5
 802522c:	46cb      	mov	fp, r9
 802522e:	e7d4      	b.n	80251da <_ZN8touchgfx8LCD16bpp17DecompressorL8_L414blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0xee>
 8025230:	d10e      	bne.n	8025250 <_ZN8touchgfx8LCD16bpp17DecompressorL8_L414blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x164>
 8025232:	f898 3000 	ldrb.w	r3, [r8]
 8025236:	f8ba 2000 	ldrh.w	r2, [sl]
 802523a:	9804      	ldr	r0, [sp, #16]
 802523c:	091b      	lsrs	r3, r3, #4
 802523e:	f836 1013 	ldrh.w	r1, [r6, r3, lsl #1]
 8025242:	9b03      	ldr	r3, [sp, #12]
 8025244:	9300      	str	r3, [sp, #0]
 8025246:	463b      	mov	r3, r7
 8025248:	f7ff ff16 	bl	8025078 <_ZNK8touchgfx8LCD16bpp17DecompressorL8_L416blendPixelRGB565Ettii>
 802524c:	f82a 0b02 	strh.w	r0, [sl], #2
 8025250:	9b08      	ldr	r3, [sp, #32]
 8025252:	9a05      	ldr	r2, [sp, #20]
 8025254:	881c      	ldrh	r4, [r3, #0]
 8025256:	f9bd 302c 	ldrsh.w	r3, [sp, #44]	@ 0x2c
 802525a:	eba4 0409 	sub.w	r4, r4, r9
 802525e:	4413      	add	r3, r2
 8025260:	eb0a 0444 	add.w	r4, sl, r4, lsl #1
 8025264:	9a09      	ldr	r2, [sp, #36]	@ 0x24
 8025266:	fb93 f3f2 	sdiv	r3, r3, r2
 802526a:	441d      	add	r5, r3
 802526c:	e79c      	b.n	80251a8 <_ZN8touchgfx8LCD16bpp17DecompressorL8_L414blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0xbc>
 802526e:	eb04 0b4b 	add.w	fp, r4, fp, lsl #1
 8025272:	45a3      	cmp	fp, r4
 8025274:	d938      	bls.n	80252e8 <_ZN8touchgfx8LCD16bpp17DecompressorL8_L414blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x1fc>
 8025276:	9b06      	ldr	r3, [sp, #24]
 8025278:	b1f3      	cbz	r3, 80252b8 <_ZN8touchgfx8LCD16bpp17DecompressorL8_L414blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x1cc>
 802527a:	782b      	ldrb	r3, [r5, #0]
 802527c:	f003 030f 	and.w	r3, r3, #15
 8025280:	1c6a      	adds	r2, r5, #1
 8025282:	f836 3013 	ldrh.w	r3, [r6, r3, lsl #1]
 8025286:	8023      	strh	r3, [r4, #0]
 8025288:	f109 30ff 	add.w	r0, r9, #4294967295
 802528c:	3402      	adds	r4, #2
 802528e:	2801      	cmp	r0, #1
 8025290:	4623      	mov	r3, r4
 8025292:	f104 0404 	add.w	r4, r4, #4
 8025296:	dd12      	ble.n	80252be <_ZN8touchgfx8LCD16bpp17DecompressorL8_L414blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x1d2>
 8025298:	7813      	ldrb	r3, [r2, #0]
 802529a:	091b      	lsrs	r3, r3, #4
 802529c:	3802      	subs	r0, #2
 802529e:	f836 3013 	ldrh.w	r3, [r6, r3, lsl #1]
 80252a2:	f824 3c04 	strh.w	r3, [r4, #-4]
 80252a6:	f812 3b01 	ldrb.w	r3, [r2], #1
 80252aa:	f003 030f 	and.w	r3, r3, #15
 80252ae:	f836 3013 	ldrh.w	r3, [r6, r3, lsl #1]
 80252b2:	f824 3c02 	strh.w	r3, [r4, #-2]
 80252b6:	e7ea      	b.n	802528e <_ZN8touchgfx8LCD16bpp17DecompressorL8_L414blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x1a2>
 80252b8:	462a      	mov	r2, r5
 80252ba:	4648      	mov	r0, r9
 80252bc:	e7e7      	b.n	802528e <_ZN8touchgfx8LCD16bpp17DecompressorL8_L414blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x1a2>
 80252be:	d106      	bne.n	80252ce <_ZN8touchgfx8LCD16bpp17DecompressorL8_L414blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x1e2>
 80252c0:	7812      	ldrb	r2, [r2, #0]
 80252c2:	0912      	lsrs	r2, r2, #4
 80252c4:	3302      	adds	r3, #2
 80252c6:	f836 2012 	ldrh.w	r2, [r6, r2, lsl #1]
 80252ca:	f823 2c02 	strh.w	r2, [r3, #-2]
 80252ce:	880c      	ldrh	r4, [r1, #0]
 80252d0:	9a05      	ldr	r2, [sp, #20]
 80252d2:	eba4 0409 	sub.w	r4, r4, r9
 80252d6:	eb03 0444 	add.w	r4, r3, r4, lsl #1
 80252da:	f9bd 302c 	ldrsh.w	r3, [sp, #44]	@ 0x2c
 80252de:	4413      	add	r3, r2
 80252e0:	fb93 f3f8 	sdiv	r3, r3, r8
 80252e4:	441d      	add	r5, r3
 80252e6:	e7c4      	b.n	8025272 <_ZN8touchgfx8LCD16bpp17DecompressorL8_L414blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x186>
 80252e8:	4b03      	ldr	r3, [pc, #12]	@ (80252f8 <_ZN8touchgfx8LCD16bpp17DecompressorL8_L414blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x20c>)
 80252ea:	6818      	ldr	r0, [r3, #0]
 80252ec:	6803      	ldr	r3, [r0, #0]
 80252ee:	6adb      	ldr	r3, [r3, #44]	@ 0x2c
 80252f0:	4798      	blx	r3
 80252f2:	b00f      	add	sp, #60	@ 0x3c
 80252f4:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 80252f8:	20002fa8 	.word	0x20002fa8
 80252fc:	20002fa2 	.word	0x20002fa2

08025300 <_ZNK8touchgfx8LCD16bpp17DecompressorL8_L418blendPixelARGB8888Emtih>:
 8025300:	b5f0      	push	{r4, r5, r6, r7, lr}
 8025302:	f89d 5014 	ldrb.w	r5, [sp, #20]
 8025306:	2dff      	cmp	r5, #255	@ 0xff
 8025308:	ea4f 2711 	mov.w	r7, r1, lsr #8
 802530c:	d10c      	bne.n	8025328 <_ZNK8touchgfx8LCD16bpp17DecompressorL8_L418blendPixelARGB8888Emtih+0x28>
 802530e:	2bff      	cmp	r3, #255	@ 0xff
 8025310:	d10a      	bne.n	8025328 <_ZNK8touchgfx8LCD16bpp17DecompressorL8_L418blendPixelARGB8888Emtih+0x28>
 8025312:	4b25      	ldr	r3, [pc, #148]	@ (80253a8 <_ZNK8touchgfx8LCD16bpp17DecompressorL8_L418blendPixelARGB8888Emtih+0xa8>)
 8025314:	0948      	lsrs	r0, r1, #5
 8025316:	f400 60fc 	and.w	r0, r0, #2016	@ 0x7e0
 802531a:	403b      	ands	r3, r7
 802531c:	4318      	orrs	r0, r3
 802531e:	f3c1 01c4 	ubfx	r1, r1, #3, #5
 8025322:	4308      	orrs	r0, r1
 8025324:	b280      	uxth	r0, r0
 8025326:	bdf0      	pop	{r4, r5, r6, r7, pc}
 8025328:	fb15 f503 	smulbb	r5, r5, r3
 802532c:	b2ab      	uxth	r3, r5
 802532e:	1c5d      	adds	r5, r3, #1
 8025330:	eb05 2513 	add.w	r5, r5, r3, lsr #8
 8025334:	1214      	asrs	r4, r2, #8
 8025336:	f3c5 2507 	ubfx	r5, r5, #8, #8
 802533a:	fa1f fc85 	uxth.w	ip, r5
 802533e:	10d6      	asrs	r6, r2, #3
 8025340:	00d0      	lsls	r0, r2, #3
 8025342:	43ed      	mvns	r5, r5
 8025344:	f004 04f8 	and.w	r4, r4, #248	@ 0xf8
 8025348:	f3c1 4207 	ubfx	r2, r1, #16, #8
 802534c:	b2eb      	uxtb	r3, r5
 802534e:	b2c0      	uxtb	r0, r0
 8025350:	fb12 f20c 	smulbb	r2, r2, ip
 8025354:	ea44 1454 	orr.w	r4, r4, r4, lsr #5
 8025358:	fb04 2403 	mla	r4, r4, r3, r2
 802535c:	ea40 1250 	orr.w	r2, r0, r0, lsr #5
 8025360:	b2c8      	uxtb	r0, r1
 8025362:	f006 06fc 	and.w	r6, r6, #252	@ 0xfc
 8025366:	b2fd      	uxtb	r5, r7
 8025368:	fb10 f00c 	smulbb	r0, r0, ip
 802536c:	b2a4      	uxth	r4, r4
 802536e:	fb02 0003 	mla	r0, r2, r3, r0
 8025372:	ea46 1696 	orr.w	r6, r6, r6, lsr #6
 8025376:	fb15 f50c 	smulbb	r5, r5, ip
 802537a:	fb06 5503 	mla	r5, r6, r3, r5
 802537e:	b283      	uxth	r3, r0
 8025380:	1c60      	adds	r0, r4, #1
 8025382:	b2ad      	uxth	r5, r5
 8025384:	eb00 2414 	add.w	r4, r0, r4, lsr #8
 8025388:	1c58      	adds	r0, r3, #1
 802538a:	eb00 2013 	add.w	r0, r0, r3, lsr #8
 802538e:	1c6b      	adds	r3, r5, #1
 8025390:	eb03 2515 	add.w	r5, r3, r5, lsr #8
 8025394:	f404 4478 	and.w	r4, r4, #63488	@ 0xf800
 8025398:	f3c0 20c4 	ubfx	r0, r0, #11, #5
 802539c:	096d      	lsrs	r5, r5, #5
 802539e:	4320      	orrs	r0, r4
 80253a0:	f405 65fc 	and.w	r5, r5, #2016	@ 0x7e0
 80253a4:	4328      	orrs	r0, r5
 80253a6:	e7be      	b.n	8025326 <_ZNK8touchgfx8LCD16bpp17DecompressorL8_L418blendPixelARGB8888Emtih+0x26>
 80253a8:	00fff800 	.word	0x00fff800

080253ac <_ZN8touchgfx8LCD16bpp17DecompressorL8_L416blitCopyARGB8888EPKhS3_RKNS_4RectES6_h>:
 80253ac:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 80253b0:	461c      	mov	r4, r3
 80253b2:	b08d      	sub	sp, #52	@ 0x34
 80253b4:	460d      	mov	r5, r1
 80253b6:	9b16      	ldr	r3, [sp, #88]	@ 0x58
 80253b8:	6861      	ldr	r1, [r4, #4]
 80253ba:	f89d 905c 	ldrb.w	r9, [sp, #92]	@ 0x5c
 80253be:	4680      	mov	r8, r0
 80253c0:	6820      	ldr	r0, [r4, #0]
 80253c2:	4616      	mov	r6, r2
 80253c4:	aa08      	add	r2, sp, #32
 80253c6:	c203      	stmia	r2!, {r0, r1}
 80253c8:	6818      	ldr	r0, [r3, #0]
 80253ca:	6859      	ldr	r1, [r3, #4]
 80253cc:	aa0a      	add	r2, sp, #40	@ 0x28
 80253ce:	c203      	stmia	r2!, {r0, r1}
 80253d0:	a808      	add	r0, sp, #32
 80253d2:	f7ee fc77 	bl	8013cc4 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectE>
 80253d6:	4621      	mov	r1, r4
 80253d8:	a80a      	add	r0, sp, #40	@ 0x28
 80253da:	f7ee fc9b 	bl	8013d14 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectERKS1_>
 80253de:	f9bd 2028 	ldrsh.w	r2, [sp, #40]	@ 0x28
 80253e2:	f9bd 702e 	ldrsh.w	r7, [sp, #46]	@ 0x2e
 80253e6:	f9bd b02c 	ldrsh.w	fp, [sp, #44]	@ 0x2c
 80253ea:	f002 0301 	and.w	r3, r2, #1
 80253ee:	9303      	str	r3, [sp, #12]
 80253f0:	f9bd 3024 	ldrsh.w	r3, [sp, #36]	@ 0x24
 80253f4:	f003 0101 	and.w	r1, r3, #1
 80253f8:	9102      	str	r1, [sp, #8]
 80253fa:	9802      	ldr	r0, [sp, #8]
 80253fc:	f9bd 102a 	ldrsh.w	r1, [sp, #42]	@ 0x2a
 8025400:	4403      	add	r3, r0
 8025402:	fb01 2303 	mla	r3, r1, r3, r2
 8025406:	f04f 0a02 	mov.w	sl, #2
 802540a:	fb93 f3fa 	sdiv	r3, r3, sl
 802540e:	441d      	add	r5, r3
 8025410:	f8bd 3020 	ldrh.w	r3, [sp, #32]
 8025414:	441a      	add	r2, r3
 8025416:	f8ad 2028 	strh.w	r2, [sp, #40]	@ 0x28
 802541a:	f8bd 3022 	ldrh.w	r3, [sp, #34]	@ 0x22
 802541e:	4a3f      	ldr	r2, [pc, #252]	@ (802551c <_ZN8touchgfx8LCD16bpp17DecompressorL8_L416blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x170>)
 8025420:	9205      	str	r2, [sp, #20]
 8025422:	4419      	add	r1, r3
 8025424:	6810      	ldr	r0, [r2, #0]
 8025426:	f8ad 102a 	strh.w	r1, [sp, #42]	@ 0x2a
 802542a:	6803      	ldr	r3, [r0, #0]
 802542c:	6a9b      	ldr	r3, [r3, #40]	@ 0x28
 802542e:	4798      	blx	r3
 8025430:	4b3b      	ldr	r3, [pc, #236]	@ (8025520 <_ZN8touchgfx8LCD16bpp17DecompressorL8_L416blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x174>)
 8025432:	f9bd 402a 	ldrsh.w	r4, [sp, #42]	@ 0x2a
 8025436:	8819      	ldrh	r1, [r3, #0]
 8025438:	f9bd c028 	ldrsh.w	ip, [sp, #40]	@ 0x28
 802543c:	fb01 c404 	mla	r4, r1, r4, ip
 8025440:	eb00 0444 	add.w	r4, r0, r4, lsl #1
 8025444:	434f      	muls	r7, r1
 8025446:	e9cd 3a06 	strd	r3, sl, [sp, #24]
 802544a:	eb04 0247 	add.w	r2, r4, r7, lsl #1
 802544e:	3604      	adds	r6, #4
 8025450:	9204      	str	r2, [sp, #16]
 8025452:	9b04      	ldr	r3, [sp, #16]
 8025454:	429c      	cmp	r4, r3
 8025456:	d258      	bcs.n	802550a <_ZN8touchgfx8LCD16bpp17DecompressorL8_L416blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x15e>
 8025458:	9b03      	ldr	r3, [sp, #12]
 802545a:	2b00      	cmp	r3, #0
 802545c:	d034      	beq.n	80254c8 <_ZN8touchgfx8LCD16bpp17DecompressorL8_L416blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x11c>
 802545e:	782b      	ldrb	r3, [r5, #0]
 8025460:	f003 030f 	and.w	r3, r3, #15
 8025464:	1c6f      	adds	r7, r5, #1
 8025466:	f856 1023 	ldr.w	r1, [r6, r3, lsl #2]
 802546a:	0e0b      	lsrs	r3, r1, #24
 802546c:	d006      	beq.n	802547c <_ZN8touchgfx8LCD16bpp17DecompressorL8_L416blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0xd0>
 802546e:	8822      	ldrh	r2, [r4, #0]
 8025470:	9300      	str	r3, [sp, #0]
 8025472:	4640      	mov	r0, r8
 8025474:	464b      	mov	r3, r9
 8025476:	f7ff ff43 	bl	8025300 <_ZNK8touchgfx8LCD16bpp17DecompressorL8_L418blendPixelARGB8888Emtih>
 802547a:	8020      	strh	r0, [r4, #0]
 802547c:	3402      	adds	r4, #2
 802547e:	f10b 3aff 	add.w	sl, fp, #4294967295
 8025482:	f1ba 0f01 	cmp.w	sl, #1
 8025486:	dd22      	ble.n	80254ce <_ZN8touchgfx8LCD16bpp17DecompressorL8_L416blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x122>
 8025488:	783b      	ldrb	r3, [r7, #0]
 802548a:	091b      	lsrs	r3, r3, #4
 802548c:	f856 1023 	ldr.w	r1, [r6, r3, lsl #2]
 8025490:	0e0b      	lsrs	r3, r1, #24
 8025492:	d006      	beq.n	80254a2 <_ZN8touchgfx8LCD16bpp17DecompressorL8_L416blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0xf6>
 8025494:	8822      	ldrh	r2, [r4, #0]
 8025496:	9300      	str	r3, [sp, #0]
 8025498:	4640      	mov	r0, r8
 802549a:	464b      	mov	r3, r9
 802549c:	f7ff ff30 	bl	8025300 <_ZNK8touchgfx8LCD16bpp17DecompressorL8_L418blendPixelARGB8888Emtih>
 80254a0:	8020      	strh	r0, [r4, #0]
 80254a2:	f817 3b01 	ldrb.w	r3, [r7], #1
 80254a6:	f003 030f 	and.w	r3, r3, #15
 80254aa:	f856 1023 	ldr.w	r1, [r6, r3, lsl #2]
 80254ae:	0e0b      	lsrs	r3, r1, #24
 80254b0:	d006      	beq.n	80254c0 <_ZN8touchgfx8LCD16bpp17DecompressorL8_L416blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x114>
 80254b2:	8862      	ldrh	r2, [r4, #2]
 80254b4:	9300      	str	r3, [sp, #0]
 80254b6:	4640      	mov	r0, r8
 80254b8:	464b      	mov	r3, r9
 80254ba:	f7ff ff21 	bl	8025300 <_ZNK8touchgfx8LCD16bpp17DecompressorL8_L418blendPixelARGB8888Emtih>
 80254be:	8060      	strh	r0, [r4, #2]
 80254c0:	3404      	adds	r4, #4
 80254c2:	f1aa 0a02 	sub.w	sl, sl, #2
 80254c6:	e7dc      	b.n	8025482 <_ZN8touchgfx8LCD16bpp17DecompressorL8_L416blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0xd6>
 80254c8:	462f      	mov	r7, r5
 80254ca:	46da      	mov	sl, fp
 80254cc:	e7d9      	b.n	8025482 <_ZN8touchgfx8LCD16bpp17DecompressorL8_L416blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0xd6>
 80254ce:	d10d      	bne.n	80254ec <_ZN8touchgfx8LCD16bpp17DecompressorL8_L416blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x140>
 80254d0:	783b      	ldrb	r3, [r7, #0]
 80254d2:	091b      	lsrs	r3, r3, #4
 80254d4:	f856 1023 	ldr.w	r1, [r6, r3, lsl #2]
 80254d8:	0e0b      	lsrs	r3, r1, #24
 80254da:	d006      	beq.n	80254ea <_ZN8touchgfx8LCD16bpp17DecompressorL8_L416blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x13e>
 80254dc:	8822      	ldrh	r2, [r4, #0]
 80254de:	9300      	str	r3, [sp, #0]
 80254e0:	4640      	mov	r0, r8
 80254e2:	464b      	mov	r3, r9
 80254e4:	f7ff ff0c 	bl	8025300 <_ZNK8touchgfx8LCD16bpp17DecompressorL8_L418blendPixelARGB8888Emtih>
 80254e8:	8020      	strh	r0, [r4, #0]
 80254ea:	3402      	adds	r4, #2
 80254ec:	9b06      	ldr	r3, [sp, #24]
 80254ee:	9a02      	ldr	r2, [sp, #8]
 80254f0:	881b      	ldrh	r3, [r3, #0]
 80254f2:	eba3 030b 	sub.w	r3, r3, fp
 80254f6:	eb04 0443 	add.w	r4, r4, r3, lsl #1
 80254fa:	f9bd 3024 	ldrsh.w	r3, [sp, #36]	@ 0x24
 80254fe:	4413      	add	r3, r2
 8025500:	9a07      	ldr	r2, [sp, #28]
 8025502:	fb93 f3f2 	sdiv	r3, r3, r2
 8025506:	441d      	add	r5, r3
 8025508:	e7a3      	b.n	8025452 <_ZN8touchgfx8LCD16bpp17DecompressorL8_L416blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0xa6>
 802550a:	9b05      	ldr	r3, [sp, #20]
 802550c:	6818      	ldr	r0, [r3, #0]
 802550e:	6803      	ldr	r3, [r0, #0]
 8025510:	6adb      	ldr	r3, [r3, #44]	@ 0x2c
 8025512:	4798      	blx	r3
 8025514:	b00d      	add	sp, #52	@ 0x34
 8025516:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 802551a:	bf00      	nop
 802551c:	20002fa8 	.word	0x20002fa8
 8025520:	20002fa2 	.word	0x20002fa2

08025524 <_ZNK8touchgfx8LCD16bpp17DecompressorL8_L416blendPixelRGB888EPKhthh>:
 8025524:	b570      	push	{r4, r5, r6, lr}
 8025526:	1214      	asrs	r4, r2, #8
 8025528:	788d      	ldrb	r5, [r1, #2]
 802552a:	f89d 6010 	ldrb.w	r6, [sp, #16]
 802552e:	f004 04f8 	and.w	r4, r4, #248	@ 0xf8
 8025532:	ea44 1454 	orr.w	r4, r4, r4, lsr #5
 8025536:	fb15 f503 	smulbb	r5, r5, r3
 802553a:	fb04 5506 	mla	r5, r4, r6, r5
 802553e:	10d0      	asrs	r0, r2, #3
 8025540:	784c      	ldrb	r4, [r1, #1]
 8025542:	7809      	ldrb	r1, [r1, #0]
 8025544:	00d2      	lsls	r2, r2, #3
 8025546:	f000 00fc 	and.w	r0, r0, #252	@ 0xfc
 802554a:	b2d2      	uxtb	r2, r2
 802554c:	ea40 1090 	orr.w	r0, r0, r0, lsr #6
 8025550:	fb14 f403 	smulbb	r4, r4, r3
 8025554:	ea42 1252 	orr.w	r2, r2, r2, lsr #5
 8025558:	fb11 f303 	smulbb	r3, r1, r3
 802555c:	fb00 4406 	mla	r4, r0, r6, r4
 8025560:	fb02 3306 	mla	r3, r2, r6, r3
 8025564:	b2ad      	uxth	r5, r5
 8025566:	b29b      	uxth	r3, r3
 8025568:	b2a4      	uxth	r4, r4
 802556a:	1c68      	adds	r0, r5, #1
 802556c:	eb00 2515 	add.w	r5, r0, r5, lsr #8
 8025570:	1c62      	adds	r2, r4, #1
 8025572:	1c58      	adds	r0, r3, #1
 8025574:	eb00 2013 	add.w	r0, r0, r3, lsr #8
 8025578:	eb02 2414 	add.w	r4, r2, r4, lsr #8
 802557c:	f405 4578 	and.w	r5, r5, #63488	@ 0xf800
 8025580:	f3c0 20c4 	ubfx	r0, r0, #11, #5
 8025584:	0964      	lsrs	r4, r4, #5
 8025586:	4328      	orrs	r0, r5
 8025588:	f404 64fc 	and.w	r4, r4, #2016	@ 0x7e0
 802558c:	4320      	orrs	r0, r4
 802558e:	bd70      	pop	{r4, r5, r6, pc}

08025590 <_ZN8touchgfx8LCD16bpp17DecompressorL8_L414blitCopyRGB888EPKhS3_RKNS_4RectES6_h>:
 8025590:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8025594:	b08f      	sub	sp, #60	@ 0x3c
 8025596:	461c      	mov	r4, r3
 8025598:	f89d 7064 	ldrb.w	r7, [sp, #100]	@ 0x64
 802559c:	9b18      	ldr	r3, [sp, #96]	@ 0x60
 802559e:	4682      	mov	sl, r0
 80255a0:	460e      	mov	r6, r1
 80255a2:	4615      	mov	r5, r2
 80255a4:	2f00      	cmp	r7, #0
 80255a6:	f000 8142 	beq.w	802582e <_ZN8touchgfx8LCD16bpp17DecompressorL8_L414blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x29e>
 80255aa:	6820      	ldr	r0, [r4, #0]
 80255ac:	6861      	ldr	r1, [r4, #4]
 80255ae:	aa0a      	add	r2, sp, #40	@ 0x28
 80255b0:	c203      	stmia	r2!, {r0, r1}
 80255b2:	6818      	ldr	r0, [r3, #0]
 80255b4:	6859      	ldr	r1, [r3, #4]
 80255b6:	aa0c      	add	r2, sp, #48	@ 0x30
 80255b8:	c203      	stmia	r2!, {r0, r1}
 80255ba:	a80a      	add	r0, sp, #40	@ 0x28
 80255bc:	f7ee fb82 	bl	8013cc4 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectE>
 80255c0:	4621      	mov	r1, r4
 80255c2:	a80c      	add	r0, sp, #48	@ 0x30
 80255c4:	f7ee fba6 	bl	8013d14 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectERKS1_>
 80255c8:	f9bd 2030 	ldrsh.w	r2, [sp, #48]	@ 0x30
 80255cc:	f9bd b036 	ldrsh.w	fp, [sp, #54]	@ 0x36
 80255d0:	f002 0301 	and.w	r3, r2, #1
 80255d4:	9306      	str	r3, [sp, #24]
 80255d6:	f9bd 302c 	ldrsh.w	r3, [sp, #44]	@ 0x2c
 80255da:	f003 0101 	and.w	r1, r3, #1
 80255de:	9105      	str	r1, [sp, #20]
 80255e0:	9805      	ldr	r0, [sp, #20]
 80255e2:	f9bd 1032 	ldrsh.w	r1, [sp, #50]	@ 0x32
 80255e6:	4403      	add	r3, r0
 80255e8:	fb01 2303 	mla	r3, r1, r3, r2
 80255ec:	f04f 0802 	mov.w	r8, #2
 80255f0:	fb93 f3f8 	sdiv	r3, r3, r8
 80255f4:	441e      	add	r6, r3
 80255f6:	f8bd 3028 	ldrh.w	r3, [sp, #40]	@ 0x28
 80255fa:	441a      	add	r2, r3
 80255fc:	f8bd 302a 	ldrh.w	r3, [sp, #42]	@ 0x2a
 8025600:	f8ad 2030 	strh.w	r2, [sp, #48]	@ 0x30
 8025604:	4419      	add	r1, r3
 8025606:	f9bd 3034 	ldrsh.w	r3, [sp, #52]	@ 0x34
 802560a:	9303      	str	r3, [sp, #12]
 802560c:	4b89      	ldr	r3, [pc, #548]	@ (8025834 <_ZN8touchgfx8LCD16bpp17DecompressorL8_L414blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x2a4>)
 802560e:	f8ad 1032 	strh.w	r1, [sp, #50]	@ 0x32
 8025612:	6818      	ldr	r0, [r3, #0]
 8025614:	6803      	ldr	r3, [r0, #0]
 8025616:	6a9b      	ldr	r3, [r3, #40]	@ 0x28
 8025618:	4798      	blx	r3
 802561a:	4a87      	ldr	r2, [pc, #540]	@ (8025838 <_ZN8touchgfx8LCD16bpp17DecompressorL8_L414blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x2a8>)
 802561c:	f9bd 4032 	ldrsh.w	r4, [sp, #50]	@ 0x32
 8025620:	8813      	ldrh	r3, [r2, #0]
 8025622:	f9bd 9030 	ldrsh.w	r9, [sp, #48]	@ 0x30
 8025626:	2fff      	cmp	r7, #255	@ 0xff
 8025628:	fb03 9404 	mla	r4, r3, r4, r9
 802562c:	eb00 0444 	add.w	r4, r0, r4, lsl #1
 8025630:	f105 0504 	add.w	r5, r5, #4
 8025634:	4694      	mov	ip, r2
 8025636:	fb03 f30b 	mul.w	r3, r3, fp
 802563a:	d071      	beq.n	8025720 <_ZN8touchgfx8LCD16bpp17DecompressorL8_L414blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x190>
 802563c:	eb04 0343 	add.w	r3, r4, r3, lsl #1
 8025640:	43f9      	mvns	r1, r7
 8025642:	e9cd 3207 	strd	r3, r2, [sp, #28]
 8025646:	b2c9      	uxtb	r1, r1
 8025648:	9104      	str	r1, [sp, #16]
 802564a:	f8cd 8024 	str.w	r8, [sp, #36]	@ 0x24
 802564e:	9b07      	ldr	r3, [sp, #28]
 8025650:	42a3      	cmp	r3, r4
 8025652:	f240 80e7 	bls.w	8025824 <_ZN8touchgfx8LCD16bpp17DecompressorL8_L414blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x294>
 8025656:	9b06      	ldr	r3, [sp, #24]
 8025658:	2b00      	cmp	r3, #0
 802565a:	d03d      	beq.n	80256d8 <_ZN8touchgfx8LCD16bpp17DecompressorL8_L414blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x148>
 802565c:	7831      	ldrb	r1, [r6, #0]
 802565e:	9b04      	ldr	r3, [sp, #16]
 8025660:	8822      	ldrh	r2, [r4, #0]
 8025662:	9300      	str	r3, [sp, #0]
 8025664:	f001 010f 	and.w	r1, r1, #15
 8025668:	eb01 0141 	add.w	r1, r1, r1, lsl #1
 802566c:	463b      	mov	r3, r7
 802566e:	4429      	add	r1, r5
 8025670:	4650      	mov	r0, sl
 8025672:	f7ff ff57 	bl	8025524 <_ZNK8touchgfx8LCD16bpp17DecompressorL8_L416blendPixelRGB888EPKhthh>
 8025676:	9b03      	ldr	r3, [sp, #12]
 8025678:	f824 0b02 	strh.w	r0, [r4], #2
 802567c:	f106 0801 	add.w	r8, r6, #1
 8025680:	f103 3bff 	add.w	fp, r3, #4294967295
 8025684:	f1bb 0f01 	cmp.w	fp, #1
 8025688:	46a1      	mov	r9, r4
 802568a:	f104 0404 	add.w	r4, r4, #4
 802568e:	dd27      	ble.n	80256e0 <_ZN8touchgfx8LCD16bpp17DecompressorL8_L414blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x150>
 8025690:	f898 1000 	ldrb.w	r1, [r8]
 8025694:	9b04      	ldr	r3, [sp, #16]
 8025696:	f834 2c04 	ldrh.w	r2, [r4, #-4]
 802569a:	9300      	str	r3, [sp, #0]
 802569c:	0909      	lsrs	r1, r1, #4
 802569e:	eb01 0141 	add.w	r1, r1, r1, lsl #1
 80256a2:	463b      	mov	r3, r7
 80256a4:	4429      	add	r1, r5
 80256a6:	4650      	mov	r0, sl
 80256a8:	f7ff ff3c 	bl	8025524 <_ZNK8touchgfx8LCD16bpp17DecompressorL8_L416blendPixelRGB888EPKhthh>
 80256ac:	f824 0c04 	strh.w	r0, [r4, #-4]
 80256b0:	f818 1b01 	ldrb.w	r1, [r8], #1
 80256b4:	9b04      	ldr	r3, [sp, #16]
 80256b6:	f834 2c02 	ldrh.w	r2, [r4, #-2]
 80256ba:	9300      	str	r3, [sp, #0]
 80256bc:	f001 010f 	and.w	r1, r1, #15
 80256c0:	eb01 0141 	add.w	r1, r1, r1, lsl #1
 80256c4:	463b      	mov	r3, r7
 80256c6:	4429      	add	r1, r5
 80256c8:	4650      	mov	r0, sl
 80256ca:	f7ff ff2b 	bl	8025524 <_ZNK8touchgfx8LCD16bpp17DecompressorL8_L416blendPixelRGB888EPKhthh>
 80256ce:	f1ab 0b02 	sub.w	fp, fp, #2
 80256d2:	f824 0c02 	strh.w	r0, [r4, #-2]
 80256d6:	e7d5      	b.n	8025684 <_ZN8touchgfx8LCD16bpp17DecompressorL8_L414blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0xf4>
 80256d8:	46b0      	mov	r8, r6
 80256da:	f8dd b00c 	ldr.w	fp, [sp, #12]
 80256de:	e7d1      	b.n	8025684 <_ZN8touchgfx8LCD16bpp17DecompressorL8_L414blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0xf4>
 80256e0:	d10f      	bne.n	8025702 <_ZN8touchgfx8LCD16bpp17DecompressorL8_L414blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x172>
 80256e2:	f898 1000 	ldrb.w	r1, [r8]
 80256e6:	9b04      	ldr	r3, [sp, #16]
 80256e8:	f8b9 2000 	ldrh.w	r2, [r9]
 80256ec:	9300      	str	r3, [sp, #0]
 80256ee:	0909      	lsrs	r1, r1, #4
 80256f0:	eb01 0141 	add.w	r1, r1, r1, lsl #1
 80256f4:	463b      	mov	r3, r7
 80256f6:	4429      	add	r1, r5
 80256f8:	4650      	mov	r0, sl
 80256fa:	f7ff ff13 	bl	8025524 <_ZNK8touchgfx8LCD16bpp17DecompressorL8_L416blendPixelRGB888EPKhthh>
 80256fe:	f829 0b02 	strh.w	r0, [r9], #2
 8025702:	9b08      	ldr	r3, [sp, #32]
 8025704:	9a05      	ldr	r2, [sp, #20]
 8025706:	881c      	ldrh	r4, [r3, #0]
 8025708:	9b03      	ldr	r3, [sp, #12]
 802570a:	1ae4      	subs	r4, r4, r3
 802570c:	f9bd 302c 	ldrsh.w	r3, [sp, #44]	@ 0x2c
 8025710:	eb09 0444 	add.w	r4, r9, r4, lsl #1
 8025714:	4413      	add	r3, r2
 8025716:	9a09      	ldr	r2, [sp, #36]	@ 0x24
 8025718:	fb93 f3f2 	sdiv	r3, r3, r2
 802571c:	441e      	add	r6, r3
 802571e:	e796      	b.n	802564e <_ZN8touchgfx8LCD16bpp17DecompressorL8_L414blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0xbe>
 8025720:	4f46      	ldr	r7, [pc, #280]	@ (802583c <_ZN8touchgfx8LCD16bpp17DecompressorL8_L414blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x2ac>)
 8025722:	eb04 0343 	add.w	r3, r4, r3, lsl #1
 8025726:	42a3      	cmp	r3, r4
 8025728:	d97c      	bls.n	8025824 <_ZN8touchgfx8LCD16bpp17DecompressorL8_L414blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x294>
 802572a:	9a06      	ldr	r2, [sp, #24]
 802572c:	2a00      	cmp	r2, #0
 802572e:	d054      	beq.n	80257da <_ZN8touchgfx8LCD16bpp17DecompressorL8_L414blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x24a>
 8025730:	7830      	ldrb	r0, [r6, #0]
 8025732:	f000 000f 	and.w	r0, r0, #15
 8025736:	eb00 0040 	add.w	r0, r0, r0, lsl #1
 802573a:	eb05 0e00 	add.w	lr, r5, r0
 802573e:	5c28      	ldrb	r0, [r5, r0]
 8025740:	f89e 2002 	ldrb.w	r2, [lr, #2]
 8025744:	f89e e001 	ldrb.w	lr, [lr, #1]
 8025748:	ea4f 0ece 	mov.w	lr, lr, lsl #3
 802574c:	f40e 6efc 	and.w	lr, lr, #2016	@ 0x7e0
 8025750:	ea07 2202 	and.w	r2, r7, r2, lsl #8
 8025754:	ea42 020e 	orr.w	r2, r2, lr
 8025758:	ea42 02d0 	orr.w	r2, r2, r0, lsr #3
 802575c:	f824 2b02 	strh.w	r2, [r4], #2
 8025760:	9a03      	ldr	r2, [sp, #12]
 8025762:	1c71      	adds	r1, r6, #1
 8025764:	f102 3eff 	add.w	lr, r2, #4294967295
 8025768:	f1be 0f01 	cmp.w	lr, #1
 802576c:	4620      	mov	r0, r4
 802576e:	f104 0404 	add.w	r4, r4, #4
 8025772:	dd36      	ble.n	80257e2 <_ZN8touchgfx8LCD16bpp17DecompressorL8_L414blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x252>
 8025774:	7808      	ldrb	r0, [r1, #0]
 8025776:	0900      	lsrs	r0, r0, #4
 8025778:	eb00 0040 	add.w	r0, r0, r0, lsl #1
 802577c:	eb05 0a00 	add.w	sl, r5, r0
 8025780:	f1ae 0e02 	sub.w	lr, lr, #2
 8025784:	f89a 2001 	ldrb.w	r2, [sl, #1]
 8025788:	f89a 9002 	ldrb.w	r9, [sl, #2]
 802578c:	00d2      	lsls	r2, r2, #3
 802578e:	ea07 2909 	and.w	r9, r7, r9, lsl #8
 8025792:	f402 62fc 	and.w	r2, r2, #2016	@ 0x7e0
 8025796:	ea49 0202 	orr.w	r2, r9, r2
 802579a:	f815 9000 	ldrb.w	r9, [r5, r0]
 802579e:	ea42 02d9 	orr.w	r2, r2, r9, lsr #3
 80257a2:	f824 2c04 	strh.w	r2, [r4, #-4]
 80257a6:	f811 0b01 	ldrb.w	r0, [r1], #1
 80257aa:	f000 000f 	and.w	r0, r0, #15
 80257ae:	eb00 0040 	add.w	r0, r0, r0, lsl #1
 80257b2:	eb05 0a00 	add.w	sl, r5, r0
 80257b6:	f89a 2001 	ldrb.w	r2, [sl, #1]
 80257ba:	f89a 9002 	ldrb.w	r9, [sl, #2]
 80257be:	00d2      	lsls	r2, r2, #3
 80257c0:	ea07 2909 	and.w	r9, r7, r9, lsl #8
 80257c4:	f402 62fc 	and.w	r2, r2, #2016	@ 0x7e0
 80257c8:	ea49 0202 	orr.w	r2, r9, r2
 80257cc:	f815 9000 	ldrb.w	r9, [r5, r0]
 80257d0:	ea42 02d9 	orr.w	r2, r2, r9, lsr #3
 80257d4:	f824 2c02 	strh.w	r2, [r4, #-2]
 80257d8:	e7c6      	b.n	8025768 <_ZN8touchgfx8LCD16bpp17DecompressorL8_L414blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x1d8>
 80257da:	4631      	mov	r1, r6
 80257dc:	f8dd e00c 	ldr.w	lr, [sp, #12]
 80257e0:	e7c2      	b.n	8025768 <_ZN8touchgfx8LCD16bpp17DecompressorL8_L414blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x1d8>
 80257e2:	d111      	bne.n	8025808 <_ZN8touchgfx8LCD16bpp17DecompressorL8_L414blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x278>
 80257e4:	7809      	ldrb	r1, [r1, #0]
 80257e6:	0909      	lsrs	r1, r1, #4
 80257e8:	eb01 0141 	add.w	r1, r1, r1, lsl #1
 80257ec:	186c      	adds	r4, r5, r1
 80257ee:	5c69      	ldrb	r1, [r5, r1]
 80257f0:	78a2      	ldrb	r2, [r4, #2]
 80257f2:	7864      	ldrb	r4, [r4, #1]
 80257f4:	00e4      	lsls	r4, r4, #3
 80257f6:	ea07 2202 	and.w	r2, r7, r2, lsl #8
 80257fa:	f404 64fc 	and.w	r4, r4, #2016	@ 0x7e0
 80257fe:	4322      	orrs	r2, r4
 8025800:	ea42 02d1 	orr.w	r2, r2, r1, lsr #3
 8025804:	f820 2b02 	strh.w	r2, [r0], #2
 8025808:	9a03      	ldr	r2, [sp, #12]
 802580a:	f8bc 4000 	ldrh.w	r4, [ip]
 802580e:	9905      	ldr	r1, [sp, #20]
 8025810:	1aa4      	subs	r4, r4, r2
 8025812:	f9bd 202c 	ldrsh.w	r2, [sp, #44]	@ 0x2c
 8025816:	eb00 0444 	add.w	r4, r0, r4, lsl #1
 802581a:	440a      	add	r2, r1
 802581c:	fb92 f2f8 	sdiv	r2, r2, r8
 8025820:	4416      	add	r6, r2
 8025822:	e780      	b.n	8025726 <_ZN8touchgfx8LCD16bpp17DecompressorL8_L414blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x196>
 8025824:	4b03      	ldr	r3, [pc, #12]	@ (8025834 <_ZN8touchgfx8LCD16bpp17DecompressorL8_L414blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x2a4>)
 8025826:	6818      	ldr	r0, [r3, #0]
 8025828:	6803      	ldr	r3, [r0, #0]
 802582a:	6adb      	ldr	r3, [r3, #44]	@ 0x2c
 802582c:	4798      	blx	r3
 802582e:	b00f      	add	sp, #60	@ 0x3c
 8025830:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 8025834:	20002fa8 	.word	0x20002fa8
 8025838:	20002fa2 	.word	0x20002fa2
 802583c:	fffff800 	.word	0xfffff800

08025840 <CRC_Lock>:
 8025840:	b530      	push	{r4, r5, lr}
 8025842:	4a2d      	ldr	r2, [pc, #180]	@ (80258f8 <CRC_Lock+0xb8>)
 8025844:	6813      	ldr	r3, [r2, #0]
 8025846:	f023 0301 	bic.w	r3, r3, #1
 802584a:	6013      	str	r3, [r2, #0]
 802584c:	4b2b      	ldr	r3, [pc, #172]	@ (80258fc <CRC_Lock+0xbc>)
 802584e:	681c      	ldr	r4, [r3, #0]
 8025850:	f64f 72f0 	movw	r2, #65520	@ 0xfff0
 8025854:	4014      	ands	r4, r2
 8025856:	f24c 2540 	movw	r5, #49728	@ 0xc240
 802585a:	42ac      	cmp	r4, r5
 802585c:	d005      	beq.n	802586a <CRC_Lock+0x2a>
 802585e:	681c      	ldr	r4, [r3, #0]
 8025860:	f24c 2570 	movw	r5, #49776	@ 0xc270
 8025864:	4014      	ands	r4, r2
 8025866:	42ac      	cmp	r4, r5
 8025868:	d125      	bne.n	80258b6 <CRC_Lock+0x76>
 802586a:	4b25      	ldr	r3, [pc, #148]	@ (8025900 <CRC_Lock+0xc0>)
 802586c:	681b      	ldr	r3, [r3, #0]
 802586e:	2b00      	cmp	r3, #0
 8025870:	d139      	bne.n	80258e6 <CRC_Lock+0xa6>
 8025872:	4b24      	ldr	r3, [pc, #144]	@ (8025904 <CRC_Lock+0xc4>)
 8025874:	681a      	ldr	r2, [r3, #0]
 8025876:	f3c2 020b 	ubfx	r2, r2, #0, #12
 802587a:	f5b2 6f8a 	cmp.w	r2, #1104	@ 0x450
 802587e:	d00d      	beq.n	802589c <CRC_Lock+0x5c>
 8025880:	681a      	ldr	r2, [r3, #0]
 8025882:	f240 4483 	movw	r4, #1155	@ 0x483
 8025886:	f3c2 020b 	ubfx	r2, r2, #0, #12
 802588a:	42a2      	cmp	r2, r4
 802588c:	d006      	beq.n	802589c <CRC_Lock+0x5c>
 802588e:	681b      	ldr	r3, [r3, #0]
 8025890:	f240 4285 	movw	r2, #1157	@ 0x485
 8025894:	f3c3 030b 	ubfx	r3, r3, #0, #12
 8025898:	4293      	cmp	r3, r2
 802589a:	d124      	bne.n	80258e6 <CRC_Lock+0xa6>
 802589c:	4b1a      	ldr	r3, [pc, #104]	@ (8025908 <CRC_Lock+0xc8>)
 802589e:	2201      	movs	r2, #1
 80258a0:	601a      	str	r2, [r3, #0]
 80258a2:	681a      	ldr	r2, [r3, #0]
 80258a4:	2a00      	cmp	r2, #0
 80258a6:	d1fc      	bne.n	80258a2 <CRC_Lock+0x62>
 80258a8:	4b18      	ldr	r3, [pc, #96]	@ (802590c <CRC_Lock+0xcc>)
 80258aa:	6018      	str	r0, [r3, #0]
 80258ac:	6818      	ldr	r0, [r3, #0]
 80258ae:	1a43      	subs	r3, r0, r1
 80258b0:	4258      	negs	r0, r3
 80258b2:	4158      	adcs	r0, r3
 80258b4:	e00e      	b.n	80258d4 <CRC_Lock+0x94>
 80258b6:	681b      	ldr	r3, [r3, #0]
 80258b8:	4013      	ands	r3, r2
 80258ba:	f24d 2220 	movw	r2, #53792	@ 0xd220
 80258be:	4293      	cmp	r3, r2
 80258c0:	d111      	bne.n	80258e6 <CRC_Lock+0xa6>
 80258c2:	4b13      	ldr	r3, [pc, #76]	@ (8025910 <CRC_Lock+0xd0>)
 80258c4:	681b      	ldr	r3, [r3, #0]
 80258c6:	f240 4286 	movw	r2, #1158	@ 0x486
 80258ca:	f3c3 030b 	ubfx	r3, r3, #0, #12
 80258ce:	4293      	cmp	r3, r2
 80258d0:	d001      	beq.n	80258d6 <CRC_Lock+0x96>
 80258d2:	2000      	movs	r0, #0
 80258d4:	bd30      	pop	{r4, r5, pc}
 80258d6:	4b0f      	ldr	r3, [pc, #60]	@ (8025914 <CRC_Lock+0xd4>)
 80258d8:	2201      	movs	r2, #1
 80258da:	601a      	str	r2, [r3, #0]
 80258dc:	681a      	ldr	r2, [r3, #0]
 80258de:	2a00      	cmp	r2, #0
 80258e0:	d1fc      	bne.n	80258dc <CRC_Lock+0x9c>
 80258e2:	4b0d      	ldr	r3, [pc, #52]	@ (8025918 <CRC_Lock+0xd8>)
 80258e4:	e7e1      	b.n	80258aa <CRC_Lock+0x6a>
 80258e6:	4b0d      	ldr	r3, [pc, #52]	@ (802591c <CRC_Lock+0xdc>)
 80258e8:	2201      	movs	r2, #1
 80258ea:	601a      	str	r2, [r3, #0]
 80258ec:	681a      	ldr	r2, [r3, #0]
 80258ee:	2a00      	cmp	r2, #0
 80258f0:	d1fc      	bne.n	80258ec <CRC_Lock+0xac>
 80258f2:	4b0b      	ldr	r3, [pc, #44]	@ (8025920 <CRC_Lock+0xe0>)
 80258f4:	e7d9      	b.n	80258aa <CRC_Lock+0x6a>
 80258f6:	bf00      	nop
 80258f8:	e0002000 	.word	0xe0002000
 80258fc:	e000ed00 	.word	0xe000ed00
 8025900:	e0042000 	.word	0xe0042000
 8025904:	5c001000 	.word	0x5c001000
 8025908:	58024c08 	.word	0x58024c08
 802590c:	58024c00 	.word	0x58024c00
 8025910:	46008ff0 	.word	0x46008ff0
 8025914:	46024c08 	.word	0x46024c08
 8025918:	46024c00 	.word	0x46024c00
 802591c:	40023008 	.word	0x40023008
 8025920:	40023000 	.word	0x40023000

08025924 <_ZN8touchgfx8Gestures21registerEventListenerERNS_15UIEventListenerE>:
 8025924:	6101      	str	r1, [r0, #16]
 8025926:	4770      	bx	lr

08025928 <_ZN8touchgfx8Gestures4tickEv>:
 8025928:	7b83      	ldrb	r3, [r0, #14]
 802592a:	b14b      	cbz	r3, 8025940 <_ZN8touchgfx8Gestures4tickEv+0x18>
 802592c:	8903      	ldrh	r3, [r0, #8]
 802592e:	3301      	adds	r3, #1
 8025930:	b29b      	uxth	r3, r3
 8025932:	2b07      	cmp	r3, #7
 8025934:	8103      	strh	r3, [r0, #8]
 8025936:	bf81      	itttt	hi
 8025938:	2300      	movhi	r3, #0
 802593a:	8143      	strhhi	r3, [r0, #10]
 802593c:	8183      	strhhi	r3, [r0, #12]
 802593e:	7383      	strbhi	r3, [r0, #14]
 8025940:	4770      	bx	lr
	...

08025944 <_ZN8touchgfx8Gestures17registerDragEventEtttt>:
 8025944:	e92d 41ff 	stmdb	sp!, {r0, r1, r2, r3, r4, r5, r6, r7, r8, lr}
 8025948:	4698      	mov	r8, r3
 802594a:	8883      	ldrh	r3, [r0, #4]
 802594c:	f8ad 3006 	strh.w	r3, [sp, #6]
 8025950:	eba8 0303 	sub.w	r3, r8, r3
 8025954:	b21b      	sxth	r3, r3
 8025956:	4604      	mov	r4, r0
 8025958:	2b00      	cmp	r3, #0
 802595a:	4617      	mov	r7, r2
 802595c:	4a18      	ldr	r2, [pc, #96]	@ (80259c0 <_ZN8touchgfx8Gestures17registerDragEventEtttt+0x7c>)
 802595e:	9200      	str	r2, [sp, #0]
 8025960:	bfb8      	it	lt
 8025962:	425b      	neglt	r3, r3
 8025964:	8aa2      	ldrh	r2, [r4, #20]
 8025966:	f8bd 5028 	ldrh.w	r5, [sp, #40]	@ 0x28
 802596a:	f8ad 800a 	strh.w	r8, [sp, #10]
 802596e:	b21b      	sxth	r3, r3
 8025970:	460e      	mov	r6, r1
 8025972:	4293      	cmp	r3, r2
 8025974:	88c1      	ldrh	r1, [r0, #6]
 8025976:	f8ad 1008 	strh.w	r1, [sp, #8]
 802597a:	f04f 0000 	mov.w	r0, #0
 802597e:	f88d 0004 	strb.w	r0, [sp, #4]
 8025982:	f8ad 500c 	strh.w	r5, [sp, #12]
 8025986:	dc07      	bgt.n	8025998 <_ZN8touchgfx8Gestures17registerDragEventEtttt+0x54>
 8025988:	1a69      	subs	r1, r5, r1
 802598a:	b209      	sxth	r1, r1
 802598c:	2900      	cmp	r1, #0
 802598e:	bfb8      	it	lt
 8025990:	4249      	neglt	r1, r1
 8025992:	b209      	sxth	r1, r1
 8025994:	428a      	cmp	r2, r1
 8025996:	da10      	bge.n	80259ba <_ZN8touchgfx8Gestures17registerDragEventEtttt+0x76>
 8025998:	6920      	ldr	r0, [r4, #16]
 802599a:	6803      	ldr	r3, [r0, #0]
 802599c:	4669      	mov	r1, sp
 802599e:	685b      	ldr	r3, [r3, #4]
 80259a0:	4798      	blx	r3
 80259a2:	eba8 0606 	sub.w	r6, r8, r6
 80259a6:	2300      	movs	r3, #0
 80259a8:	1bef      	subs	r7, r5, r7
 80259aa:	2001      	movs	r0, #1
 80259ac:	8123      	strh	r3, [r4, #8]
 80259ae:	8166      	strh	r6, [r4, #10]
 80259b0:	81a7      	strh	r7, [r4, #12]
 80259b2:	f8a4 8004 	strh.w	r8, [r4, #4]
 80259b6:	80e5      	strh	r5, [r4, #6]
 80259b8:	73a0      	strb	r0, [r4, #14]
 80259ba:	b004      	add	sp, #16
 80259bc:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
 80259c0:	08029574 	.word	0x08029574

080259c4 <_ZN8touchgfx8Gestures18registerClickEventENS_10ClickEvent14ClickEventTypeEtt>:
 80259c4:	b5f0      	push	{r4, r5, r6, r7, lr}
 80259c6:	461e      	mov	r6, r3
 80259c8:	1e4b      	subs	r3, r1, #1
 80259ca:	2b01      	cmp	r3, #1
 80259cc:	b085      	sub	sp, #20
 80259ce:	4604      	mov	r4, r0
 80259d0:	460d      	mov	r5, r1
 80259d2:	4617      	mov	r7, r2
 80259d4:	d84b      	bhi.n	8025a6e <_ZN8touchgfx8Gestures18registerClickEventENS_10ClickEvent14ClickEventTypeEtt+0xaa>
 80259d6:	f9b0 200a 	ldrsh.w	r2, [r0, #10]
 80259da:	1cd3      	adds	r3, r2, #3
 80259dc:	b29b      	uxth	r3, r3
 80259de:	2b06      	cmp	r3, #6
 80259e0:	d916      	bls.n	8025a10 <_ZN8touchgfx8Gestures18registerClickEventENS_10ClickEvent14ClickEventTypeEtt+0x4c>
 80259e2:	f8df c0a0 	ldr.w	ip, [pc, #160]	@ 8025a84 <_ZN8touchgfx8Gestures18registerClickEventENS_10ClickEvent14ClickEventTypeEtt+0xc0>
 80259e6:	f8cd c004 	str.w	ip, [sp, #4]
 80259ea:	f9b4 1004 	ldrsh.w	r1, [r4, #4]
 80259ee:	f9b4 3006 	ldrsh.w	r3, [r4, #6]
 80259f2:	6900      	ldr	r0, [r0, #16]
 80259f4:	f8ad 100c 	strh.w	r1, [sp, #12]
 80259f8:	f04f 0c00 	mov.w	ip, #0
 80259fc:	f88d c008 	strb.w	ip, [sp, #8]
 8025a00:	f8ad 200a 	strh.w	r2, [sp, #10]
 8025a04:	f8ad 300e 	strh.w	r3, [sp, #14]
 8025a08:	6803      	ldr	r3, [r0, #0]
 8025a0a:	a901      	add	r1, sp, #4
 8025a0c:	689b      	ldr	r3, [r3, #8]
 8025a0e:	4798      	blx	r3
 8025a10:	f9b4 200c 	ldrsh.w	r2, [r4, #12]
 8025a14:	1cd3      	adds	r3, r2, #3
 8025a16:	b29b      	uxth	r3, r3
 8025a18:	2b06      	cmp	r3, #6
 8025a1a:	d916      	bls.n	8025a4a <_ZN8touchgfx8Gestures18registerClickEventENS_10ClickEvent14ClickEventTypeEtt+0x86>
 8025a1c:	f8df c064 	ldr.w	ip, [pc, #100]	@ 8025a84 <_ZN8touchgfx8Gestures18registerClickEventENS_10ClickEvent14ClickEventTypeEtt+0xc0>
 8025a20:	f8cd c004 	str.w	ip, [sp, #4]
 8025a24:	f9b4 1004 	ldrsh.w	r1, [r4, #4]
 8025a28:	f9b4 3006 	ldrsh.w	r3, [r4, #6]
 8025a2c:	6920      	ldr	r0, [r4, #16]
 8025a2e:	f8ad 100c 	strh.w	r1, [sp, #12]
 8025a32:	f04f 0c01 	mov.w	ip, #1
 8025a36:	f88d c008 	strb.w	ip, [sp, #8]
 8025a3a:	f8ad 200a 	strh.w	r2, [sp, #10]
 8025a3e:	f8ad 300e 	strh.w	r3, [sp, #14]
 8025a42:	6803      	ldr	r3, [r0, #0]
 8025a44:	a901      	add	r1, sp, #4
 8025a46:	689b      	ldr	r3, [r3, #8]
 8025a48:	4798      	blx	r3
 8025a4a:	4b0d      	ldr	r3, [pc, #52]	@ (8025a80 <_ZN8touchgfx8Gestures18registerClickEventENS_10ClickEvent14ClickEventTypeEtt+0xbc>)
 8025a4c:	9301      	str	r3, [sp, #4]
 8025a4e:	6920      	ldr	r0, [r4, #16]
 8025a50:	f88d 5008 	strb.w	r5, [sp, #8]
 8025a54:	2300      	movs	r3, #0
 8025a56:	f8ad 700a 	strh.w	r7, [sp, #10]
 8025a5a:	f8ad 600c 	strh.w	r6, [sp, #12]
 8025a5e:	f8ad 300e 	strh.w	r3, [sp, #14]
 8025a62:	6803      	ldr	r3, [r0, #0]
 8025a64:	a901      	add	r1, sp, #4
 8025a66:	681b      	ldr	r3, [r3, #0]
 8025a68:	4798      	blx	r3
 8025a6a:	b005      	add	sp, #20
 8025a6c:	bdf0      	pop	{r4, r5, r6, r7, pc}
 8025a6e:	2900      	cmp	r1, #0
 8025a70:	d1eb      	bne.n	8025a4a <_ZN8touchgfx8Gestures18registerClickEventENS_10ClickEvent14ClickEventTypeEtt+0x86>
 8025a72:	80a2      	strh	r2, [r4, #4]
 8025a74:	80c6      	strh	r6, [r0, #6]
 8025a76:	60a1      	str	r1, [r4, #8]
 8025a78:	81a1      	strh	r1, [r4, #12]
 8025a7a:	73a1      	strb	r1, [r4, #14]
 8025a7c:	e7e5      	b.n	8025a4a <_ZN8touchgfx8Gestures18registerClickEventENS_10ClickEvent14ClickEventTypeEtt+0x86>
 8025a7e:	bf00      	nop
 8025a80:	08029560 	.word	0x08029560
 8025a84:	08029588 	.word	0x08029588

08025a88 <__aeabi_atexit>:
 8025a88:	460b      	mov	r3, r1
 8025a8a:	4601      	mov	r1, r0
 8025a8c:	4618      	mov	r0, r3
 8025a8e:	f000 b991 	b.w	8025db4 <__cxa_atexit>

08025a92 <_ZdlPvj>:
 8025a92:	f000 b812 	b.w	8025aba <_ZdlPv>

08025a96 <__cxa_guard_acquire>:
 8025a96:	6802      	ldr	r2, [r0, #0]
 8025a98:	07d2      	lsls	r2, r2, #31
 8025a9a:	4603      	mov	r3, r0
 8025a9c:	d405      	bmi.n	8025aaa <__cxa_guard_acquire+0x14>
 8025a9e:	7842      	ldrb	r2, [r0, #1]
 8025aa0:	b102      	cbz	r2, 8025aa4 <__cxa_guard_acquire+0xe>
 8025aa2:	deff      	udf	#255	@ 0xff
 8025aa4:	2001      	movs	r0, #1
 8025aa6:	7058      	strb	r0, [r3, #1]
 8025aa8:	4770      	bx	lr
 8025aaa:	2000      	movs	r0, #0
 8025aac:	4770      	bx	lr

08025aae <__cxa_guard_release>:
 8025aae:	2301      	movs	r3, #1
 8025ab0:	6003      	str	r3, [r0, #0]
 8025ab2:	4770      	bx	lr

08025ab4 <__cxa_pure_virtual>:
 8025ab4:	b508      	push	{r3, lr}
 8025ab6:	f000 f80f 	bl	8025ad8 <_ZSt9terminatev>

08025aba <_ZdlPv>:
 8025aba:	f000 b8c5 	b.w	8025c48 <free>

08025abe <_ZN10__cxxabiv111__terminateEPFvvE>:
 8025abe:	b508      	push	{r3, lr}
 8025ac0:	4780      	blx	r0
 8025ac2:	f000 f88d 	bl	8025be0 <abort>
	...

08025ac8 <_ZSt13get_terminatev>:
 8025ac8:	4b02      	ldr	r3, [pc, #8]	@ (8025ad4 <_ZSt13get_terminatev+0xc>)
 8025aca:	6818      	ldr	r0, [r3, #0]
 8025acc:	f3bf 8f5b 	dmb	ish
 8025ad0:	4770      	bx	lr
 8025ad2:	bf00      	nop
 8025ad4:	200000a8 	.word	0x200000a8

08025ad8 <_ZSt9terminatev>:
 8025ad8:	b508      	push	{r3, lr}
 8025ada:	f7ff fff5 	bl	8025ac8 <_ZSt13get_terminatev>
 8025ade:	f7ff ffee 	bl	8025abe <_ZN10__cxxabiv111__terminateEPFvvE>
 8025ae2:	0000      	movs	r0, r0
 8025ae4:	0000      	movs	r0, r0
	...

08025ae8 <floor>:
 8025ae8:	ec51 0b10 	vmov	r0, r1, d0
 8025aec:	f3c1 530a 	ubfx	r3, r1, #20, #11
 8025af0:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 8025af4:	f2a3 36ff 	subw	r6, r3, #1023	@ 0x3ff
 8025af8:	2e13      	cmp	r6, #19
 8025afa:	460c      	mov	r4, r1
 8025afc:	4605      	mov	r5, r0
 8025afe:	4680      	mov	r8, r0
 8025b00:	dc34      	bgt.n	8025b6c <floor+0x84>
 8025b02:	2e00      	cmp	r6, #0
 8025b04:	da17      	bge.n	8025b36 <floor+0x4e>
 8025b06:	a332      	add	r3, pc, #200	@ (adr r3, 8025bd0 <floor+0xe8>)
 8025b08:	e9d3 2300 	ldrd	r2, r3, [r3]
 8025b0c:	f7da fbd6 	bl	80002bc <__adddf3>
 8025b10:	2200      	movs	r2, #0
 8025b12:	2300      	movs	r3, #0
 8025b14:	f7db f818 	bl	8000b48 <__aeabi_dcmpgt>
 8025b18:	b150      	cbz	r0, 8025b30 <floor+0x48>
 8025b1a:	2c00      	cmp	r4, #0
 8025b1c:	da55      	bge.n	8025bca <floor+0xe2>
 8025b1e:	f024 4400 	bic.w	r4, r4, #2147483648	@ 0x80000000
 8025b22:	432c      	orrs	r4, r5
 8025b24:	2500      	movs	r5, #0
 8025b26:	42ac      	cmp	r4, r5
 8025b28:	4c2b      	ldr	r4, [pc, #172]	@ (8025bd8 <floor+0xf0>)
 8025b2a:	bf08      	it	eq
 8025b2c:	f04f 4400 	moveq.w	r4, #2147483648	@ 0x80000000
 8025b30:	4621      	mov	r1, r4
 8025b32:	4628      	mov	r0, r5
 8025b34:	e023      	b.n	8025b7e <floor+0x96>
 8025b36:	4f29      	ldr	r7, [pc, #164]	@ (8025bdc <floor+0xf4>)
 8025b38:	4137      	asrs	r7, r6
 8025b3a:	ea01 0307 	and.w	r3, r1, r7
 8025b3e:	4303      	orrs	r3, r0
 8025b40:	d01d      	beq.n	8025b7e <floor+0x96>
 8025b42:	a323      	add	r3, pc, #140	@ (adr r3, 8025bd0 <floor+0xe8>)
 8025b44:	e9d3 2300 	ldrd	r2, r3, [r3]
 8025b48:	f7da fbb8 	bl	80002bc <__adddf3>
 8025b4c:	2200      	movs	r2, #0
 8025b4e:	2300      	movs	r3, #0
 8025b50:	f7da fffa 	bl	8000b48 <__aeabi_dcmpgt>
 8025b54:	2800      	cmp	r0, #0
 8025b56:	d0eb      	beq.n	8025b30 <floor+0x48>
 8025b58:	2c00      	cmp	r4, #0
 8025b5a:	bfbe      	ittt	lt
 8025b5c:	f44f 1380 	movlt.w	r3, #1048576	@ 0x100000
 8025b60:	4133      	asrlt	r3, r6
 8025b62:	18e4      	addlt	r4, r4, r3
 8025b64:	ea24 0407 	bic.w	r4, r4, r7
 8025b68:	2500      	movs	r5, #0
 8025b6a:	e7e1      	b.n	8025b30 <floor+0x48>
 8025b6c:	2e33      	cmp	r6, #51	@ 0x33
 8025b6e:	dd0a      	ble.n	8025b86 <floor+0x9e>
 8025b70:	f5b6 6f80 	cmp.w	r6, #1024	@ 0x400
 8025b74:	d103      	bne.n	8025b7e <floor+0x96>
 8025b76:	4602      	mov	r2, r0
 8025b78:	460b      	mov	r3, r1
 8025b7a:	f7da fb9f 	bl	80002bc <__adddf3>
 8025b7e:	ec41 0b10 	vmov	d0, r0, r1
 8025b82:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
 8025b86:	f2a3 4313 	subw	r3, r3, #1043	@ 0x413
 8025b8a:	f04f 37ff 	mov.w	r7, #4294967295
 8025b8e:	40df      	lsrs	r7, r3
 8025b90:	4207      	tst	r7, r0
 8025b92:	d0f4      	beq.n	8025b7e <floor+0x96>
 8025b94:	a30e      	add	r3, pc, #56	@ (adr r3, 8025bd0 <floor+0xe8>)
 8025b96:	e9d3 2300 	ldrd	r2, r3, [r3]
 8025b9a:	f7da fb8f 	bl	80002bc <__adddf3>
 8025b9e:	2200      	movs	r2, #0
 8025ba0:	2300      	movs	r3, #0
 8025ba2:	f7da ffd1 	bl	8000b48 <__aeabi_dcmpgt>
 8025ba6:	2800      	cmp	r0, #0
 8025ba8:	d0c2      	beq.n	8025b30 <floor+0x48>
 8025baa:	2c00      	cmp	r4, #0
 8025bac:	da0a      	bge.n	8025bc4 <floor+0xdc>
 8025bae:	2e14      	cmp	r6, #20
 8025bb0:	d101      	bne.n	8025bb6 <floor+0xce>
 8025bb2:	3401      	adds	r4, #1
 8025bb4:	e006      	b.n	8025bc4 <floor+0xdc>
 8025bb6:	f1c6 0634 	rsb	r6, r6, #52	@ 0x34
 8025bba:	2301      	movs	r3, #1
 8025bbc:	40b3      	lsls	r3, r6
 8025bbe:	441d      	add	r5, r3
 8025bc0:	4545      	cmp	r5, r8
 8025bc2:	d3f6      	bcc.n	8025bb2 <floor+0xca>
 8025bc4:	ea25 0507 	bic.w	r5, r5, r7
 8025bc8:	e7b2      	b.n	8025b30 <floor+0x48>
 8025bca:	2500      	movs	r5, #0
 8025bcc:	462c      	mov	r4, r5
 8025bce:	e7af      	b.n	8025b30 <floor+0x48>
 8025bd0:	8800759c 	.word	0x8800759c
 8025bd4:	7e37e43c 	.word	0x7e37e43c
 8025bd8:	bff00000 	.word	0xbff00000
 8025bdc:	000fffff 	.word	0x000fffff

08025be0 <abort>:
 8025be0:	b508      	push	{r3, lr}
 8025be2:	2006      	movs	r0, #6
 8025be4:	f000 fa3c 	bl	8026060 <raise>
 8025be8:	2001      	movs	r0, #1
 8025bea:	f7dc f94f 	bl	8001e8c <_exit>
	...

08025bf0 <__assert_func>:
 8025bf0:	b51f      	push	{r0, r1, r2, r3, r4, lr}
 8025bf2:	4614      	mov	r4, r2
 8025bf4:	461a      	mov	r2, r3
 8025bf6:	4b09      	ldr	r3, [pc, #36]	@ (8025c1c <__assert_func+0x2c>)
 8025bf8:	681b      	ldr	r3, [r3, #0]
 8025bfa:	4605      	mov	r5, r0
 8025bfc:	68d8      	ldr	r0, [r3, #12]
 8025bfe:	b954      	cbnz	r4, 8025c16 <__assert_func+0x26>
 8025c00:	4b07      	ldr	r3, [pc, #28]	@ (8025c20 <__assert_func+0x30>)
 8025c02:	461c      	mov	r4, r3
 8025c04:	e9cd 3401 	strd	r3, r4, [sp, #4]
 8025c08:	9100      	str	r1, [sp, #0]
 8025c0a:	462b      	mov	r3, r5
 8025c0c:	4905      	ldr	r1, [pc, #20]	@ (8025c24 <__assert_func+0x34>)
 8025c0e:	f000 f983 	bl	8025f18 <fiprintf>
 8025c12:	f7ff ffe5 	bl	8025be0 <abort>
 8025c16:	4b04      	ldr	r3, [pc, #16]	@ (8025c28 <__assert_func+0x38>)
 8025c18:	e7f4      	b.n	8025c04 <__assert_func+0x14>
 8025c1a:	bf00      	nop
 8025c1c:	200000b8 	.word	0x200000b8
 8025c20:	080298f7 	.word	0x080298f7
 8025c24:	080298c9 	.word	0x080298c9
 8025c28:	080298bc 	.word	0x080298bc

08025c2c <atexit>:
 8025c2c:	2300      	movs	r3, #0
 8025c2e:	4601      	mov	r1, r0
 8025c30:	461a      	mov	r2, r3
 8025c32:	4618      	mov	r0, r3
 8025c34:	f000 bac2 	b.w	80261bc <__register_exitproc>

08025c38 <malloc>:
 8025c38:	4b02      	ldr	r3, [pc, #8]	@ (8025c44 <malloc+0xc>)
 8025c3a:	4601      	mov	r1, r0
 8025c3c:	6818      	ldr	r0, [r3, #0]
 8025c3e:	f000 b82d 	b.w	8025c9c <_malloc_r>
 8025c42:	bf00      	nop
 8025c44:	200000b8 	.word	0x200000b8

08025c48 <free>:
 8025c48:	4b02      	ldr	r3, [pc, #8]	@ (8025c54 <free+0xc>)
 8025c4a:	4601      	mov	r1, r0
 8025c4c:	6818      	ldr	r0, [r3, #0]
 8025c4e:	f000 bb11 	b.w	8026274 <_free_r>
 8025c52:	bf00      	nop
 8025c54:	200000b8 	.word	0x200000b8

08025c58 <sbrk_aligned>:
 8025c58:	b570      	push	{r4, r5, r6, lr}
 8025c5a:	4e0f      	ldr	r6, [pc, #60]	@ (8025c98 <sbrk_aligned+0x40>)
 8025c5c:	460c      	mov	r4, r1
 8025c5e:	6831      	ldr	r1, [r6, #0]
 8025c60:	4605      	mov	r5, r0
 8025c62:	b911      	cbnz	r1, 8025c6a <sbrk_aligned+0x12>
 8025c64:	f000 fa4c 	bl	8026100 <_sbrk_r>
 8025c68:	6030      	str	r0, [r6, #0]
 8025c6a:	4621      	mov	r1, r4
 8025c6c:	4628      	mov	r0, r5
 8025c6e:	f000 fa47 	bl	8026100 <_sbrk_r>
 8025c72:	1c43      	adds	r3, r0, #1
 8025c74:	d103      	bne.n	8025c7e <sbrk_aligned+0x26>
 8025c76:	f04f 34ff 	mov.w	r4, #4294967295
 8025c7a:	4620      	mov	r0, r4
 8025c7c:	bd70      	pop	{r4, r5, r6, pc}
 8025c7e:	1cc4      	adds	r4, r0, #3
 8025c80:	f024 0403 	bic.w	r4, r4, #3
 8025c84:	42a0      	cmp	r0, r4
 8025c86:	d0f8      	beq.n	8025c7a <sbrk_aligned+0x22>
 8025c88:	1a21      	subs	r1, r4, r0
 8025c8a:	4628      	mov	r0, r5
 8025c8c:	f000 fa38 	bl	8026100 <_sbrk_r>
 8025c90:	3001      	adds	r0, #1
 8025c92:	d1f2      	bne.n	8025c7a <sbrk_aligned+0x22>
 8025c94:	e7ef      	b.n	8025c76 <sbrk_aligned+0x1e>
 8025c96:	bf00      	nop
 8025c98:	200039fc 	.word	0x200039fc

08025c9c <_malloc_r>:
 8025c9c:	e92d 43f8 	stmdb	sp!, {r3, r4, r5, r6, r7, r8, r9, lr}
 8025ca0:	1ccd      	adds	r5, r1, #3
 8025ca2:	f025 0503 	bic.w	r5, r5, #3
 8025ca6:	3508      	adds	r5, #8
 8025ca8:	2d0c      	cmp	r5, #12
 8025caa:	bf38      	it	cc
 8025cac:	250c      	movcc	r5, #12
 8025cae:	2d00      	cmp	r5, #0
 8025cb0:	4606      	mov	r6, r0
 8025cb2:	db01      	blt.n	8025cb8 <_malloc_r+0x1c>
 8025cb4:	42a9      	cmp	r1, r5
 8025cb6:	d904      	bls.n	8025cc2 <_malloc_r+0x26>
 8025cb8:	230c      	movs	r3, #12
 8025cba:	6033      	str	r3, [r6, #0]
 8025cbc:	2000      	movs	r0, #0
 8025cbe:	e8bd 83f8 	ldmia.w	sp!, {r3, r4, r5, r6, r7, r8, r9, pc}
 8025cc2:	f8df 80d4 	ldr.w	r8, [pc, #212]	@ 8025d98 <_malloc_r+0xfc>
 8025cc6:	f000 f869 	bl	8025d9c <__malloc_lock>
 8025cca:	f8d8 3000 	ldr.w	r3, [r8]
 8025cce:	461c      	mov	r4, r3
 8025cd0:	bb44      	cbnz	r4, 8025d24 <_malloc_r+0x88>
 8025cd2:	4629      	mov	r1, r5
 8025cd4:	4630      	mov	r0, r6
 8025cd6:	f7ff ffbf 	bl	8025c58 <sbrk_aligned>
 8025cda:	1c43      	adds	r3, r0, #1
 8025cdc:	4604      	mov	r4, r0
 8025cde:	d158      	bne.n	8025d92 <_malloc_r+0xf6>
 8025ce0:	f8d8 4000 	ldr.w	r4, [r8]
 8025ce4:	4627      	mov	r7, r4
 8025ce6:	2f00      	cmp	r7, #0
 8025ce8:	d143      	bne.n	8025d72 <_malloc_r+0xd6>
 8025cea:	2c00      	cmp	r4, #0
 8025cec:	d04b      	beq.n	8025d86 <_malloc_r+0xea>
 8025cee:	6823      	ldr	r3, [r4, #0]
 8025cf0:	4639      	mov	r1, r7
 8025cf2:	4630      	mov	r0, r6
 8025cf4:	eb04 0903 	add.w	r9, r4, r3
 8025cf8:	f000 fa02 	bl	8026100 <_sbrk_r>
 8025cfc:	4581      	cmp	r9, r0
 8025cfe:	d142      	bne.n	8025d86 <_malloc_r+0xea>
 8025d00:	6821      	ldr	r1, [r4, #0]
 8025d02:	1a6d      	subs	r5, r5, r1
 8025d04:	4629      	mov	r1, r5
 8025d06:	4630      	mov	r0, r6
 8025d08:	f7ff ffa6 	bl	8025c58 <sbrk_aligned>
 8025d0c:	3001      	adds	r0, #1
 8025d0e:	d03a      	beq.n	8025d86 <_malloc_r+0xea>
 8025d10:	6823      	ldr	r3, [r4, #0]
 8025d12:	442b      	add	r3, r5
 8025d14:	6023      	str	r3, [r4, #0]
 8025d16:	f8d8 3000 	ldr.w	r3, [r8]
 8025d1a:	685a      	ldr	r2, [r3, #4]
 8025d1c:	bb62      	cbnz	r2, 8025d78 <_malloc_r+0xdc>
 8025d1e:	f8c8 7000 	str.w	r7, [r8]
 8025d22:	e00f      	b.n	8025d44 <_malloc_r+0xa8>
 8025d24:	6822      	ldr	r2, [r4, #0]
 8025d26:	1b52      	subs	r2, r2, r5
 8025d28:	d420      	bmi.n	8025d6c <_malloc_r+0xd0>
 8025d2a:	2a0b      	cmp	r2, #11
 8025d2c:	d917      	bls.n	8025d5e <_malloc_r+0xc2>
 8025d2e:	1961      	adds	r1, r4, r5
 8025d30:	42a3      	cmp	r3, r4
 8025d32:	6025      	str	r5, [r4, #0]
 8025d34:	bf18      	it	ne
 8025d36:	6059      	strne	r1, [r3, #4]
 8025d38:	6863      	ldr	r3, [r4, #4]
 8025d3a:	bf08      	it	eq
 8025d3c:	f8c8 1000 	streq.w	r1, [r8]
 8025d40:	5162      	str	r2, [r4, r5]
 8025d42:	604b      	str	r3, [r1, #4]
 8025d44:	4630      	mov	r0, r6
 8025d46:	f000 f82f 	bl	8025da8 <__malloc_unlock>
 8025d4a:	f104 000b 	add.w	r0, r4, #11
 8025d4e:	1d23      	adds	r3, r4, #4
 8025d50:	f020 0007 	bic.w	r0, r0, #7
 8025d54:	1ac2      	subs	r2, r0, r3
 8025d56:	bf1c      	itt	ne
 8025d58:	1a1b      	subne	r3, r3, r0
 8025d5a:	50a3      	strne	r3, [r4, r2]
 8025d5c:	e7af      	b.n	8025cbe <_malloc_r+0x22>
 8025d5e:	6862      	ldr	r2, [r4, #4]
 8025d60:	42a3      	cmp	r3, r4
 8025d62:	bf0c      	ite	eq
 8025d64:	f8c8 2000 	streq.w	r2, [r8]
 8025d68:	605a      	strne	r2, [r3, #4]
 8025d6a:	e7eb      	b.n	8025d44 <_malloc_r+0xa8>
 8025d6c:	4623      	mov	r3, r4
 8025d6e:	6864      	ldr	r4, [r4, #4]
 8025d70:	e7ae      	b.n	8025cd0 <_malloc_r+0x34>
 8025d72:	463c      	mov	r4, r7
 8025d74:	687f      	ldr	r7, [r7, #4]
 8025d76:	e7b6      	b.n	8025ce6 <_malloc_r+0x4a>
 8025d78:	461a      	mov	r2, r3
 8025d7a:	685b      	ldr	r3, [r3, #4]
 8025d7c:	42a3      	cmp	r3, r4
 8025d7e:	d1fb      	bne.n	8025d78 <_malloc_r+0xdc>
 8025d80:	2300      	movs	r3, #0
 8025d82:	6053      	str	r3, [r2, #4]
 8025d84:	e7de      	b.n	8025d44 <_malloc_r+0xa8>
 8025d86:	230c      	movs	r3, #12
 8025d88:	6033      	str	r3, [r6, #0]
 8025d8a:	4630      	mov	r0, r6
 8025d8c:	f000 f80c 	bl	8025da8 <__malloc_unlock>
 8025d90:	e794      	b.n	8025cbc <_malloc_r+0x20>
 8025d92:	6005      	str	r5, [r0, #0]
 8025d94:	e7d6      	b.n	8025d44 <_malloc_r+0xa8>
 8025d96:	bf00      	nop
 8025d98:	20003a00 	.word	0x20003a00

08025d9c <__malloc_lock>:
 8025d9c:	4801      	ldr	r0, [pc, #4]	@ (8025da4 <__malloc_lock+0x8>)
 8025d9e:	f000 b9fc 	b.w	802619a <__retarget_lock_acquire_recursive>
 8025da2:	bf00      	nop
 8025da4:	20003b44 	.word	0x20003b44

08025da8 <__malloc_unlock>:
 8025da8:	4801      	ldr	r0, [pc, #4]	@ (8025db0 <__malloc_unlock+0x8>)
 8025daa:	f000 b9f7 	b.w	802619c <__retarget_lock_release_recursive>
 8025dae:	bf00      	nop
 8025db0:	20003b44 	.word	0x20003b44

08025db4 <__cxa_atexit>:
 8025db4:	b510      	push	{r4, lr}
 8025db6:	4604      	mov	r4, r0
 8025db8:	4804      	ldr	r0, [pc, #16]	@ (8025dcc <__cxa_atexit+0x18>)
 8025dba:	4613      	mov	r3, r2
 8025dbc:	b120      	cbz	r0, 8025dc8 <__cxa_atexit+0x14>
 8025dbe:	460a      	mov	r2, r1
 8025dc0:	2002      	movs	r0, #2
 8025dc2:	4621      	mov	r1, r4
 8025dc4:	f000 f9fa 	bl	80261bc <__register_exitproc>
 8025dc8:	bd10      	pop	{r4, pc}
 8025dca:	bf00      	nop
 8025dcc:	080261bd 	.word	0x080261bd

08025dd0 <std>:
 8025dd0:	2300      	movs	r3, #0
 8025dd2:	b510      	push	{r4, lr}
 8025dd4:	4604      	mov	r4, r0
 8025dd6:	e9c0 3300 	strd	r3, r3, [r0]
 8025dda:	e9c0 3304 	strd	r3, r3, [r0, #16]
 8025dde:	6083      	str	r3, [r0, #8]
 8025de0:	8181      	strh	r1, [r0, #12]
 8025de2:	6643      	str	r3, [r0, #100]	@ 0x64
 8025de4:	81c2      	strh	r2, [r0, #14]
 8025de6:	6183      	str	r3, [r0, #24]
 8025de8:	4619      	mov	r1, r3
 8025dea:	2208      	movs	r2, #8
 8025dec:	305c      	adds	r0, #92	@ 0x5c
 8025dee:	f000 f906 	bl	8025ffe <memset>
 8025df2:	4b0d      	ldr	r3, [pc, #52]	@ (8025e28 <std+0x58>)
 8025df4:	6263      	str	r3, [r4, #36]	@ 0x24
 8025df6:	4b0d      	ldr	r3, [pc, #52]	@ (8025e2c <std+0x5c>)
 8025df8:	62a3      	str	r3, [r4, #40]	@ 0x28
 8025dfa:	4b0d      	ldr	r3, [pc, #52]	@ (8025e30 <std+0x60>)
 8025dfc:	62e3      	str	r3, [r4, #44]	@ 0x2c
 8025dfe:	4b0d      	ldr	r3, [pc, #52]	@ (8025e34 <std+0x64>)
 8025e00:	6323      	str	r3, [r4, #48]	@ 0x30
 8025e02:	4b0d      	ldr	r3, [pc, #52]	@ (8025e38 <std+0x68>)
 8025e04:	6224      	str	r4, [r4, #32]
 8025e06:	429c      	cmp	r4, r3
 8025e08:	d006      	beq.n	8025e18 <std+0x48>
 8025e0a:	f103 0268 	add.w	r2, r3, #104	@ 0x68
 8025e0e:	4294      	cmp	r4, r2
 8025e10:	d002      	beq.n	8025e18 <std+0x48>
 8025e12:	33d0      	adds	r3, #208	@ 0xd0
 8025e14:	429c      	cmp	r4, r3
 8025e16:	d105      	bne.n	8025e24 <std+0x54>
 8025e18:	f104 0058 	add.w	r0, r4, #88	@ 0x58
 8025e1c:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
 8025e20:	f000 b9ba 	b.w	8026198 <__retarget_lock_init_recursive>
 8025e24:	bd10      	pop	{r4, pc}
 8025e26:	bf00      	nop
 8025e28:	08025f79 	.word	0x08025f79
 8025e2c:	08025f9b 	.word	0x08025f9b
 8025e30:	08025fd3 	.word	0x08025fd3
 8025e34:	08025ff7 	.word	0x08025ff7
 8025e38:	20003a04 	.word	0x20003a04

08025e3c <stdio_exit_handler>:
 8025e3c:	4a02      	ldr	r2, [pc, #8]	@ (8025e48 <stdio_exit_handler+0xc>)
 8025e3e:	4903      	ldr	r1, [pc, #12]	@ (8025e4c <stdio_exit_handler+0x10>)
 8025e40:	4803      	ldr	r0, [pc, #12]	@ (8025e50 <stdio_exit_handler+0x14>)
 8025e42:	f000 b87b 	b.w	8025f3c <_fwalk_sglue>
 8025e46:	bf00      	nop
 8025e48:	200000ac 	.word	0x200000ac
 8025e4c:	080269b1 	.word	0x080269b1
 8025e50:	200000bc 	.word	0x200000bc

08025e54 <cleanup_stdio>:
 8025e54:	6841      	ldr	r1, [r0, #4]
 8025e56:	4b0c      	ldr	r3, [pc, #48]	@ (8025e88 <cleanup_stdio+0x34>)
 8025e58:	4299      	cmp	r1, r3
 8025e5a:	b510      	push	{r4, lr}
 8025e5c:	4604      	mov	r4, r0
 8025e5e:	d001      	beq.n	8025e64 <cleanup_stdio+0x10>
 8025e60:	f000 fda6 	bl	80269b0 <_fflush_r>
 8025e64:	68a1      	ldr	r1, [r4, #8]
 8025e66:	4b09      	ldr	r3, [pc, #36]	@ (8025e8c <cleanup_stdio+0x38>)
 8025e68:	4299      	cmp	r1, r3
 8025e6a:	d002      	beq.n	8025e72 <cleanup_stdio+0x1e>
 8025e6c:	4620      	mov	r0, r4
 8025e6e:	f000 fd9f 	bl	80269b0 <_fflush_r>
 8025e72:	68e1      	ldr	r1, [r4, #12]
 8025e74:	4b06      	ldr	r3, [pc, #24]	@ (8025e90 <cleanup_stdio+0x3c>)
 8025e76:	4299      	cmp	r1, r3
 8025e78:	d004      	beq.n	8025e84 <cleanup_stdio+0x30>
 8025e7a:	4620      	mov	r0, r4
 8025e7c:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
 8025e80:	f000 bd96 	b.w	80269b0 <_fflush_r>
 8025e84:	bd10      	pop	{r4, pc}
 8025e86:	bf00      	nop
 8025e88:	20003a04 	.word	0x20003a04
 8025e8c:	20003a6c 	.word	0x20003a6c
 8025e90:	20003ad4 	.word	0x20003ad4

08025e94 <global_stdio_init.part.0>:
 8025e94:	b510      	push	{r4, lr}
 8025e96:	4b0b      	ldr	r3, [pc, #44]	@ (8025ec4 <global_stdio_init.part.0+0x30>)
 8025e98:	4c0b      	ldr	r4, [pc, #44]	@ (8025ec8 <global_stdio_init.part.0+0x34>)
 8025e9a:	4a0c      	ldr	r2, [pc, #48]	@ (8025ecc <global_stdio_init.part.0+0x38>)
 8025e9c:	601a      	str	r2, [r3, #0]
 8025e9e:	4620      	mov	r0, r4
 8025ea0:	2200      	movs	r2, #0
 8025ea2:	2104      	movs	r1, #4
 8025ea4:	f7ff ff94 	bl	8025dd0 <std>
 8025ea8:	f104 0068 	add.w	r0, r4, #104	@ 0x68
 8025eac:	2201      	movs	r2, #1
 8025eae:	2109      	movs	r1, #9
 8025eb0:	f7ff ff8e 	bl	8025dd0 <std>
 8025eb4:	f104 00d0 	add.w	r0, r4, #208	@ 0xd0
 8025eb8:	2202      	movs	r2, #2
 8025eba:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
 8025ebe:	2112      	movs	r1, #18
 8025ec0:	f7ff bf86 	b.w	8025dd0 <std>
 8025ec4:	20003b3c 	.word	0x20003b3c
 8025ec8:	20003a04 	.word	0x20003a04
 8025ecc:	08025e3d 	.word	0x08025e3d

08025ed0 <__sfp_lock_acquire>:
 8025ed0:	4801      	ldr	r0, [pc, #4]	@ (8025ed8 <__sfp_lock_acquire+0x8>)
 8025ed2:	f000 b962 	b.w	802619a <__retarget_lock_acquire_recursive>
 8025ed6:	bf00      	nop
 8025ed8:	20003b46 	.word	0x20003b46

08025edc <__sfp_lock_release>:
 8025edc:	4801      	ldr	r0, [pc, #4]	@ (8025ee4 <__sfp_lock_release+0x8>)
 8025ede:	f000 b95d 	b.w	802619c <__retarget_lock_release_recursive>
 8025ee2:	bf00      	nop
 8025ee4:	20003b46 	.word	0x20003b46

08025ee8 <__sinit>:
 8025ee8:	b510      	push	{r4, lr}
 8025eea:	4604      	mov	r4, r0
 8025eec:	f7ff fff0 	bl	8025ed0 <__sfp_lock_acquire>
 8025ef0:	6a23      	ldr	r3, [r4, #32]
 8025ef2:	b11b      	cbz	r3, 8025efc <__sinit+0x14>
 8025ef4:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
 8025ef8:	f7ff bff0 	b.w	8025edc <__sfp_lock_release>
 8025efc:	4b04      	ldr	r3, [pc, #16]	@ (8025f10 <__sinit+0x28>)
 8025efe:	6223      	str	r3, [r4, #32]
 8025f00:	4b04      	ldr	r3, [pc, #16]	@ (8025f14 <__sinit+0x2c>)
 8025f02:	681b      	ldr	r3, [r3, #0]
 8025f04:	2b00      	cmp	r3, #0
 8025f06:	d1f5      	bne.n	8025ef4 <__sinit+0xc>
 8025f08:	f7ff ffc4 	bl	8025e94 <global_stdio_init.part.0>
 8025f0c:	e7f2      	b.n	8025ef4 <__sinit+0xc>
 8025f0e:	bf00      	nop
 8025f10:	08025e55 	.word	0x08025e55
 8025f14:	20003b3c 	.word	0x20003b3c

08025f18 <fiprintf>:
 8025f18:	b40e      	push	{r1, r2, r3}
 8025f1a:	b503      	push	{r0, r1, lr}
 8025f1c:	4601      	mov	r1, r0
 8025f1e:	ab03      	add	r3, sp, #12
 8025f20:	4805      	ldr	r0, [pc, #20]	@ (8025f38 <fiprintf+0x20>)
 8025f22:	f853 2b04 	ldr.w	r2, [r3], #4
 8025f26:	6800      	ldr	r0, [r0, #0]
 8025f28:	9301      	str	r3, [sp, #4]
 8025f2a:	f000 fa17 	bl	802635c <_vfiprintf_r>
 8025f2e:	b002      	add	sp, #8
 8025f30:	f85d eb04 	ldr.w	lr, [sp], #4
 8025f34:	b003      	add	sp, #12
 8025f36:	4770      	bx	lr
 8025f38:	200000b8 	.word	0x200000b8

08025f3c <_fwalk_sglue>:
 8025f3c:	e92d 43f8 	stmdb	sp!, {r3, r4, r5, r6, r7, r8, r9, lr}
 8025f40:	4607      	mov	r7, r0
 8025f42:	4688      	mov	r8, r1
 8025f44:	4614      	mov	r4, r2
 8025f46:	2600      	movs	r6, #0
 8025f48:	e9d4 9501 	ldrd	r9, r5, [r4, #4]
 8025f4c:	f1b9 0901 	subs.w	r9, r9, #1
 8025f50:	d505      	bpl.n	8025f5e <_fwalk_sglue+0x22>
 8025f52:	6824      	ldr	r4, [r4, #0]
 8025f54:	2c00      	cmp	r4, #0
 8025f56:	d1f7      	bne.n	8025f48 <_fwalk_sglue+0xc>
 8025f58:	4630      	mov	r0, r6
 8025f5a:	e8bd 83f8 	ldmia.w	sp!, {r3, r4, r5, r6, r7, r8, r9, pc}
 8025f5e:	89ab      	ldrh	r3, [r5, #12]
 8025f60:	2b01      	cmp	r3, #1
 8025f62:	d907      	bls.n	8025f74 <_fwalk_sglue+0x38>
 8025f64:	f9b5 300e 	ldrsh.w	r3, [r5, #14]
 8025f68:	3301      	adds	r3, #1
 8025f6a:	d003      	beq.n	8025f74 <_fwalk_sglue+0x38>
 8025f6c:	4629      	mov	r1, r5
 8025f6e:	4638      	mov	r0, r7
 8025f70:	47c0      	blx	r8
 8025f72:	4306      	orrs	r6, r0
 8025f74:	3568      	adds	r5, #104	@ 0x68
 8025f76:	e7e9      	b.n	8025f4c <_fwalk_sglue+0x10>

08025f78 <__sread>:
 8025f78:	b510      	push	{r4, lr}
 8025f7a:	460c      	mov	r4, r1
 8025f7c:	f9b1 100e 	ldrsh.w	r1, [r1, #14]
 8025f80:	f000 f898 	bl	80260b4 <_read_r>
 8025f84:	2800      	cmp	r0, #0
 8025f86:	bfab      	itete	ge
 8025f88:	6d63      	ldrge	r3, [r4, #84]	@ 0x54
 8025f8a:	89a3      	ldrhlt	r3, [r4, #12]
 8025f8c:	181b      	addge	r3, r3, r0
 8025f8e:	f423 5380 	biclt.w	r3, r3, #4096	@ 0x1000
 8025f92:	bfac      	ite	ge
 8025f94:	6563      	strge	r3, [r4, #84]	@ 0x54
 8025f96:	81a3      	strhlt	r3, [r4, #12]
 8025f98:	bd10      	pop	{r4, pc}

08025f9a <__swrite>:
 8025f9a:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 8025f9e:	461f      	mov	r7, r3
 8025fa0:	898b      	ldrh	r3, [r1, #12]
 8025fa2:	05db      	lsls	r3, r3, #23
 8025fa4:	4605      	mov	r5, r0
 8025fa6:	460c      	mov	r4, r1
 8025fa8:	4616      	mov	r6, r2
 8025faa:	d505      	bpl.n	8025fb8 <__swrite+0x1e>
 8025fac:	f9b1 100e 	ldrsh.w	r1, [r1, #14]
 8025fb0:	2302      	movs	r3, #2
 8025fb2:	2200      	movs	r2, #0
 8025fb4:	f000 f86c 	bl	8026090 <_lseek_r>
 8025fb8:	89a3      	ldrh	r3, [r4, #12]
 8025fba:	f9b4 100e 	ldrsh.w	r1, [r4, #14]
 8025fbe:	f423 5380 	bic.w	r3, r3, #4096	@ 0x1000
 8025fc2:	81a3      	strh	r3, [r4, #12]
 8025fc4:	4632      	mov	r2, r6
 8025fc6:	463b      	mov	r3, r7
 8025fc8:	4628      	mov	r0, r5
 8025fca:	e8bd 41f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, lr}
 8025fce:	f000 b8a7 	b.w	8026120 <_write_r>

08025fd2 <__sseek>:
 8025fd2:	b510      	push	{r4, lr}
 8025fd4:	460c      	mov	r4, r1
 8025fd6:	f9b1 100e 	ldrsh.w	r1, [r1, #14]
 8025fda:	f000 f859 	bl	8026090 <_lseek_r>
 8025fde:	1c43      	adds	r3, r0, #1
 8025fe0:	89a3      	ldrh	r3, [r4, #12]
 8025fe2:	bf15      	itete	ne
 8025fe4:	6560      	strne	r0, [r4, #84]	@ 0x54
 8025fe6:	f423 5380 	biceq.w	r3, r3, #4096	@ 0x1000
 8025fea:	f443 5380 	orrne.w	r3, r3, #4096	@ 0x1000
 8025fee:	81a3      	strheq	r3, [r4, #12]
 8025ff0:	bf18      	it	ne
 8025ff2:	81a3      	strhne	r3, [r4, #12]
 8025ff4:	bd10      	pop	{r4, pc}

08025ff6 <__sclose>:
 8025ff6:	f9b1 100e 	ldrsh.w	r1, [r1, #14]
 8025ffa:	f000 b839 	b.w	8026070 <_close_r>

08025ffe <memset>:
 8025ffe:	4402      	add	r2, r0
 8026000:	4603      	mov	r3, r0
 8026002:	4293      	cmp	r3, r2
 8026004:	d100      	bne.n	8026008 <memset+0xa>
 8026006:	4770      	bx	lr
 8026008:	f803 1b01 	strb.w	r1, [r3], #1
 802600c:	e7f9      	b.n	8026002 <memset+0x4>

0802600e <_raise_r>:
 802600e:	291f      	cmp	r1, #31
 8026010:	b538      	push	{r3, r4, r5, lr}
 8026012:	4605      	mov	r5, r0
 8026014:	460c      	mov	r4, r1
 8026016:	d904      	bls.n	8026022 <_raise_r+0x14>
 8026018:	2316      	movs	r3, #22
 802601a:	6003      	str	r3, [r0, #0]
 802601c:	f04f 30ff 	mov.w	r0, #4294967295
 8026020:	bd38      	pop	{r3, r4, r5, pc}
 8026022:	6bc2      	ldr	r2, [r0, #60]	@ 0x3c
 8026024:	b112      	cbz	r2, 802602c <_raise_r+0x1e>
 8026026:	f852 3021 	ldr.w	r3, [r2, r1, lsl #2]
 802602a:	b94b      	cbnz	r3, 8026040 <_raise_r+0x32>
 802602c:	4628      	mov	r0, r5
 802602e:	f000 f865 	bl	80260fc <_getpid_r>
 8026032:	4622      	mov	r2, r4
 8026034:	4601      	mov	r1, r0
 8026036:	4628      	mov	r0, r5
 8026038:	e8bd 4038 	ldmia.w	sp!, {r3, r4, r5, lr}
 802603c:	f000 b84c 	b.w	80260d8 <_kill_r>
 8026040:	2b01      	cmp	r3, #1
 8026042:	d00a      	beq.n	802605a <_raise_r+0x4c>
 8026044:	1c59      	adds	r1, r3, #1
 8026046:	d103      	bne.n	8026050 <_raise_r+0x42>
 8026048:	2316      	movs	r3, #22
 802604a:	6003      	str	r3, [r0, #0]
 802604c:	2001      	movs	r0, #1
 802604e:	e7e7      	b.n	8026020 <_raise_r+0x12>
 8026050:	2100      	movs	r1, #0
 8026052:	f842 1024 	str.w	r1, [r2, r4, lsl #2]
 8026056:	4620      	mov	r0, r4
 8026058:	4798      	blx	r3
 802605a:	2000      	movs	r0, #0
 802605c:	e7e0      	b.n	8026020 <_raise_r+0x12>
	...

08026060 <raise>:
 8026060:	4b02      	ldr	r3, [pc, #8]	@ (802606c <raise+0xc>)
 8026062:	4601      	mov	r1, r0
 8026064:	6818      	ldr	r0, [r3, #0]
 8026066:	f7ff bfd2 	b.w	802600e <_raise_r>
 802606a:	bf00      	nop
 802606c:	200000b8 	.word	0x200000b8

08026070 <_close_r>:
 8026070:	b538      	push	{r3, r4, r5, lr}
 8026072:	4d06      	ldr	r5, [pc, #24]	@ (802608c <_close_r+0x1c>)
 8026074:	2300      	movs	r3, #0
 8026076:	4604      	mov	r4, r0
 8026078:	4608      	mov	r0, r1
 802607a:	602b      	str	r3, [r5, #0]
 802607c:	f7db ff4a 	bl	8001f14 <_close>
 8026080:	1c43      	adds	r3, r0, #1
 8026082:	d102      	bne.n	802608a <_close_r+0x1a>
 8026084:	682b      	ldr	r3, [r5, #0]
 8026086:	b103      	cbz	r3, 802608a <_close_r+0x1a>
 8026088:	6023      	str	r3, [r4, #0]
 802608a:	bd38      	pop	{r3, r4, r5, pc}
 802608c:	20003b40 	.word	0x20003b40

08026090 <_lseek_r>:
 8026090:	b538      	push	{r3, r4, r5, lr}
 8026092:	4d07      	ldr	r5, [pc, #28]	@ (80260b0 <_lseek_r+0x20>)
 8026094:	4604      	mov	r4, r0
 8026096:	4608      	mov	r0, r1
 8026098:	4611      	mov	r1, r2
 802609a:	2200      	movs	r2, #0
 802609c:	602a      	str	r2, [r5, #0]
 802609e:	461a      	mov	r2, r3
 80260a0:	f7db ff5f 	bl	8001f62 <_lseek>
 80260a4:	1c43      	adds	r3, r0, #1
 80260a6:	d102      	bne.n	80260ae <_lseek_r+0x1e>
 80260a8:	682b      	ldr	r3, [r5, #0]
 80260aa:	b103      	cbz	r3, 80260ae <_lseek_r+0x1e>
 80260ac:	6023      	str	r3, [r4, #0]
 80260ae:	bd38      	pop	{r3, r4, r5, pc}
 80260b0:	20003b40 	.word	0x20003b40

080260b4 <_read_r>:
 80260b4:	b538      	push	{r3, r4, r5, lr}
 80260b6:	4d07      	ldr	r5, [pc, #28]	@ (80260d4 <_read_r+0x20>)
 80260b8:	4604      	mov	r4, r0
 80260ba:	4608      	mov	r0, r1
 80260bc:	4611      	mov	r1, r2
 80260be:	2200      	movs	r2, #0
 80260c0:	602a      	str	r2, [r5, #0]
 80260c2:	461a      	mov	r2, r3
 80260c4:	f7db feed 	bl	8001ea2 <_read>
 80260c8:	1c43      	adds	r3, r0, #1
 80260ca:	d102      	bne.n	80260d2 <_read_r+0x1e>
 80260cc:	682b      	ldr	r3, [r5, #0]
 80260ce:	b103      	cbz	r3, 80260d2 <_read_r+0x1e>
 80260d0:	6023      	str	r3, [r4, #0]
 80260d2:	bd38      	pop	{r3, r4, r5, pc}
 80260d4:	20003b40 	.word	0x20003b40

080260d8 <_kill_r>:
 80260d8:	b538      	push	{r3, r4, r5, lr}
 80260da:	4d07      	ldr	r5, [pc, #28]	@ (80260f8 <_kill_r+0x20>)
 80260dc:	2300      	movs	r3, #0
 80260de:	4604      	mov	r4, r0
 80260e0:	4608      	mov	r0, r1
 80260e2:	4611      	mov	r1, r2
 80260e4:	602b      	str	r3, [r5, #0]
 80260e6:	f7db fec1 	bl	8001e6c <_kill>
 80260ea:	1c43      	adds	r3, r0, #1
 80260ec:	d102      	bne.n	80260f4 <_kill_r+0x1c>
 80260ee:	682b      	ldr	r3, [r5, #0]
 80260f0:	b103      	cbz	r3, 80260f4 <_kill_r+0x1c>
 80260f2:	6023      	str	r3, [r4, #0]
 80260f4:	bd38      	pop	{r3, r4, r5, pc}
 80260f6:	bf00      	nop
 80260f8:	20003b40 	.word	0x20003b40

080260fc <_getpid_r>:
 80260fc:	f7db beae 	b.w	8001e5c <_getpid>

08026100 <_sbrk_r>:
 8026100:	b538      	push	{r3, r4, r5, lr}
 8026102:	4d06      	ldr	r5, [pc, #24]	@ (802611c <_sbrk_r+0x1c>)
 8026104:	2300      	movs	r3, #0
 8026106:	4604      	mov	r4, r0
 8026108:	4608      	mov	r0, r1
 802610a:	602b      	str	r3, [r5, #0]
 802610c:	f7db ff36 	bl	8001f7c <_sbrk>
 8026110:	1c43      	adds	r3, r0, #1
 8026112:	d102      	bne.n	802611a <_sbrk_r+0x1a>
 8026114:	682b      	ldr	r3, [r5, #0]
 8026116:	b103      	cbz	r3, 802611a <_sbrk_r+0x1a>
 8026118:	6023      	str	r3, [r4, #0]
 802611a:	bd38      	pop	{r3, r4, r5, pc}
 802611c:	20003b40 	.word	0x20003b40

08026120 <_write_r>:
 8026120:	b538      	push	{r3, r4, r5, lr}
 8026122:	4d07      	ldr	r5, [pc, #28]	@ (8026140 <_write_r+0x20>)
 8026124:	4604      	mov	r4, r0
 8026126:	4608      	mov	r0, r1
 8026128:	4611      	mov	r1, r2
 802612a:	2200      	movs	r2, #0
 802612c:	602a      	str	r2, [r5, #0]
 802612e:	461a      	mov	r2, r3
 8026130:	f7db fed4 	bl	8001edc <_write>
 8026134:	1c43      	adds	r3, r0, #1
 8026136:	d102      	bne.n	802613e <_write_r+0x1e>
 8026138:	682b      	ldr	r3, [r5, #0]
 802613a:	b103      	cbz	r3, 802613e <_write_r+0x1e>
 802613c:	6023      	str	r3, [r4, #0]
 802613e:	bd38      	pop	{r3, r4, r5, pc}
 8026140:	20003b40 	.word	0x20003b40

08026144 <__errno>:
 8026144:	4b01      	ldr	r3, [pc, #4]	@ (802614c <__errno+0x8>)
 8026146:	6818      	ldr	r0, [r3, #0]
 8026148:	4770      	bx	lr
 802614a:	bf00      	nop
 802614c:	200000b8 	.word	0x200000b8

08026150 <__libc_init_array>:
 8026150:	b570      	push	{r4, r5, r6, lr}
 8026152:	4d0d      	ldr	r5, [pc, #52]	@ (8026188 <__libc_init_array+0x38>)
 8026154:	4c0d      	ldr	r4, [pc, #52]	@ (802618c <__libc_init_array+0x3c>)
 8026156:	1b64      	subs	r4, r4, r5
 8026158:	10a4      	asrs	r4, r4, #2
 802615a:	2600      	movs	r6, #0
 802615c:	42a6      	cmp	r6, r4
 802615e:	d109      	bne.n	8026174 <__libc_init_array+0x24>
 8026160:	4d0b      	ldr	r5, [pc, #44]	@ (8026190 <__libc_init_array+0x40>)
 8026162:	4c0c      	ldr	r4, [pc, #48]	@ (8026194 <__libc_init_array+0x44>)
 8026164:	f000 fd64 	bl	8026c30 <_init>
 8026168:	1b64      	subs	r4, r4, r5
 802616a:	10a4      	asrs	r4, r4, #2
 802616c:	2600      	movs	r6, #0
 802616e:	42a6      	cmp	r6, r4
 8026170:	d105      	bne.n	802617e <__libc_init_array+0x2e>
 8026172:	bd70      	pop	{r4, r5, r6, pc}
 8026174:	f855 3b04 	ldr.w	r3, [r5], #4
 8026178:	4798      	blx	r3
 802617a:	3601      	adds	r6, #1
 802617c:	e7ee      	b.n	802615c <__libc_init_array+0xc>
 802617e:	f855 3b04 	ldr.w	r3, [r5], #4
 8026182:	4798      	blx	r3
 8026184:	3601      	adds	r6, #1
 8026186:	e7f2      	b.n	802616e <__libc_init_array+0x1e>
 8026188:	080600d4 	.word	0x080600d4
 802618c:	080600d4 	.word	0x080600d4
 8026190:	080600d4 	.word	0x080600d4
 8026194:	080600ec 	.word	0x080600ec

08026198 <__retarget_lock_init_recursive>:
 8026198:	4770      	bx	lr

0802619a <__retarget_lock_acquire_recursive>:
 802619a:	4770      	bx	lr

0802619c <__retarget_lock_release_recursive>:
 802619c:	4770      	bx	lr

0802619e <memcpy>:
 802619e:	440a      	add	r2, r1
 80261a0:	4291      	cmp	r1, r2
 80261a2:	f100 33ff 	add.w	r3, r0, #4294967295
 80261a6:	d100      	bne.n	80261aa <memcpy+0xc>
 80261a8:	4770      	bx	lr
 80261aa:	b510      	push	{r4, lr}
 80261ac:	f811 4b01 	ldrb.w	r4, [r1], #1
 80261b0:	f803 4f01 	strb.w	r4, [r3, #1]!
 80261b4:	4291      	cmp	r1, r2
 80261b6:	d1f9      	bne.n	80261ac <memcpy+0xe>
 80261b8:	bd10      	pop	{r4, pc}
	...

080261bc <__register_exitproc>:
 80261bc:	e92d 43f8 	stmdb	sp!, {r3, r4, r5, r6, r7, r8, r9, lr}
 80261c0:	4d27      	ldr	r5, [pc, #156]	@ (8026260 <__register_exitproc+0xa4>)
 80261c2:	4607      	mov	r7, r0
 80261c4:	6828      	ldr	r0, [r5, #0]
 80261c6:	4691      	mov	r9, r2
 80261c8:	460e      	mov	r6, r1
 80261ca:	4698      	mov	r8, r3
 80261cc:	f7ff ffe5 	bl	802619a <__retarget_lock_acquire_recursive>
 80261d0:	4a24      	ldr	r2, [pc, #144]	@ (8026264 <__register_exitproc+0xa8>)
 80261d2:	6814      	ldr	r4, [r2, #0]
 80261d4:	b93c      	cbnz	r4, 80261e6 <__register_exitproc+0x2a>
 80261d6:	4b24      	ldr	r3, [pc, #144]	@ (8026268 <__register_exitproc+0xac>)
 80261d8:	6013      	str	r3, [r2, #0]
 80261da:	4a24      	ldr	r2, [pc, #144]	@ (802626c <__register_exitproc+0xb0>)
 80261dc:	b112      	cbz	r2, 80261e4 <__register_exitproc+0x28>
 80261de:	6812      	ldr	r2, [r2, #0]
 80261e0:	f8c3 2088 	str.w	r2, [r3, #136]	@ 0x88
 80261e4:	4c20      	ldr	r4, [pc, #128]	@ (8026268 <__register_exitproc+0xac>)
 80261e6:	6863      	ldr	r3, [r4, #4]
 80261e8:	2b1f      	cmp	r3, #31
 80261ea:	dd06      	ble.n	80261fa <__register_exitproc+0x3e>
 80261ec:	6828      	ldr	r0, [r5, #0]
 80261ee:	f7ff ffd5 	bl	802619c <__retarget_lock_release_recursive>
 80261f2:	f04f 30ff 	mov.w	r0, #4294967295
 80261f6:	e8bd 83f8 	ldmia.w	sp!, {r3, r4, r5, r6, r7, r8, r9, pc}
 80261fa:	b32f      	cbz	r7, 8026248 <__register_exitproc+0x8c>
 80261fc:	f8d4 0088 	ldr.w	r0, [r4, #136]	@ 0x88
 8026200:	b968      	cbnz	r0, 802621e <__register_exitproc+0x62>
 8026202:	4b1b      	ldr	r3, [pc, #108]	@ (8026270 <__register_exitproc+0xb4>)
 8026204:	2b00      	cmp	r3, #0
 8026206:	d0f1      	beq.n	80261ec <__register_exitproc+0x30>
 8026208:	f44f 7084 	mov.w	r0, #264	@ 0x108
 802620c:	f7ff fd14 	bl	8025c38 <malloc>
 8026210:	2800      	cmp	r0, #0
 8026212:	d0eb      	beq.n	80261ec <__register_exitproc+0x30>
 8026214:	2300      	movs	r3, #0
 8026216:	e9c0 3340 	strd	r3, r3, [r0, #256]	@ 0x100
 802621a:	f8c4 0088 	str.w	r0, [r4, #136]	@ 0x88
 802621e:	6863      	ldr	r3, [r4, #4]
 8026220:	f840 9023 	str.w	r9, [r0, r3, lsl #2]
 8026224:	2201      	movs	r2, #1
 8026226:	409a      	lsls	r2, r3
 8026228:	eb00 0183 	add.w	r1, r0, r3, lsl #2
 802622c:	f8d0 3100 	ldr.w	r3, [r0, #256]	@ 0x100
 8026230:	4313      	orrs	r3, r2
 8026232:	f8c0 3100 	str.w	r3, [r0, #256]	@ 0x100
 8026236:	2f02      	cmp	r7, #2
 8026238:	f8c1 8080 	str.w	r8, [r1, #128]	@ 0x80
 802623c:	bf02      	ittt	eq
 802623e:	f8d0 3104 	ldreq.w	r3, [r0, #260]	@ 0x104
 8026242:	4313      	orreq	r3, r2
 8026244:	f8c0 3104 	streq.w	r3, [r0, #260]	@ 0x104
 8026248:	6863      	ldr	r3, [r4, #4]
 802624a:	6828      	ldr	r0, [r5, #0]
 802624c:	1c5a      	adds	r2, r3, #1
 802624e:	3302      	adds	r3, #2
 8026250:	6062      	str	r2, [r4, #4]
 8026252:	f844 6023 	str.w	r6, [r4, r3, lsl #2]
 8026256:	f7ff ffa1 	bl	802619c <__retarget_lock_release_recursive>
 802625a:	2000      	movs	r0, #0
 802625c:	e7cb      	b.n	80261f6 <__register_exitproc+0x3a>
 802625e:	bf00      	nop
 8026260:	20000108 	.word	0x20000108
 8026264:	20003bd4 	.word	0x20003bd4
 8026268:	20003b48 	.word	0x20003b48
 802626c:	080298f8 	.word	0x080298f8
 8026270:	08025c39 	.word	0x08025c39

08026274 <_free_r>:
 8026274:	b538      	push	{r3, r4, r5, lr}
 8026276:	4605      	mov	r5, r0
 8026278:	2900      	cmp	r1, #0
 802627a:	d041      	beq.n	8026300 <_free_r+0x8c>
 802627c:	f851 3c04 	ldr.w	r3, [r1, #-4]
 8026280:	1f0c      	subs	r4, r1, #4
 8026282:	2b00      	cmp	r3, #0
 8026284:	bfb8      	it	lt
 8026286:	18e4      	addlt	r4, r4, r3
 8026288:	f7ff fd88 	bl	8025d9c <__malloc_lock>
 802628c:	4a1d      	ldr	r2, [pc, #116]	@ (8026304 <_free_r+0x90>)
 802628e:	6813      	ldr	r3, [r2, #0]
 8026290:	b933      	cbnz	r3, 80262a0 <_free_r+0x2c>
 8026292:	6063      	str	r3, [r4, #4]
 8026294:	6014      	str	r4, [r2, #0]
 8026296:	4628      	mov	r0, r5
 8026298:	e8bd 4038 	ldmia.w	sp!, {r3, r4, r5, lr}
 802629c:	f7ff bd84 	b.w	8025da8 <__malloc_unlock>
 80262a0:	42a3      	cmp	r3, r4
 80262a2:	d908      	bls.n	80262b6 <_free_r+0x42>
 80262a4:	6820      	ldr	r0, [r4, #0]
 80262a6:	1821      	adds	r1, r4, r0
 80262a8:	428b      	cmp	r3, r1
 80262aa:	bf01      	itttt	eq
 80262ac:	6819      	ldreq	r1, [r3, #0]
 80262ae:	685b      	ldreq	r3, [r3, #4]
 80262b0:	1809      	addeq	r1, r1, r0
 80262b2:	6021      	streq	r1, [r4, #0]
 80262b4:	e7ed      	b.n	8026292 <_free_r+0x1e>
 80262b6:	461a      	mov	r2, r3
 80262b8:	685b      	ldr	r3, [r3, #4]
 80262ba:	b10b      	cbz	r3, 80262c0 <_free_r+0x4c>
 80262bc:	42a3      	cmp	r3, r4
 80262be:	d9fa      	bls.n	80262b6 <_free_r+0x42>
 80262c0:	6811      	ldr	r1, [r2, #0]
 80262c2:	1850      	adds	r0, r2, r1
 80262c4:	42a0      	cmp	r0, r4
 80262c6:	d10b      	bne.n	80262e0 <_free_r+0x6c>
 80262c8:	6820      	ldr	r0, [r4, #0]
 80262ca:	4401      	add	r1, r0
 80262cc:	1850      	adds	r0, r2, r1
 80262ce:	4283      	cmp	r3, r0
 80262d0:	6011      	str	r1, [r2, #0]
 80262d2:	d1e0      	bne.n	8026296 <_free_r+0x22>
 80262d4:	6818      	ldr	r0, [r3, #0]
 80262d6:	685b      	ldr	r3, [r3, #4]
 80262d8:	6053      	str	r3, [r2, #4]
 80262da:	4408      	add	r0, r1
 80262dc:	6010      	str	r0, [r2, #0]
 80262de:	e7da      	b.n	8026296 <_free_r+0x22>
 80262e0:	d902      	bls.n	80262e8 <_free_r+0x74>
 80262e2:	230c      	movs	r3, #12
 80262e4:	602b      	str	r3, [r5, #0]
 80262e6:	e7d6      	b.n	8026296 <_free_r+0x22>
 80262e8:	6820      	ldr	r0, [r4, #0]
 80262ea:	1821      	adds	r1, r4, r0
 80262ec:	428b      	cmp	r3, r1
 80262ee:	bf04      	itt	eq
 80262f0:	6819      	ldreq	r1, [r3, #0]
 80262f2:	685b      	ldreq	r3, [r3, #4]
 80262f4:	6063      	str	r3, [r4, #4]
 80262f6:	bf04      	itt	eq
 80262f8:	1809      	addeq	r1, r1, r0
 80262fa:	6021      	streq	r1, [r4, #0]
 80262fc:	6054      	str	r4, [r2, #4]
 80262fe:	e7ca      	b.n	8026296 <_free_r+0x22>
 8026300:	bd38      	pop	{r3, r4, r5, pc}
 8026302:	bf00      	nop
 8026304:	20003a00 	.word	0x20003a00

08026308 <__sfputc_r>:
 8026308:	6893      	ldr	r3, [r2, #8]
 802630a:	3b01      	subs	r3, #1
 802630c:	2b00      	cmp	r3, #0
 802630e:	b410      	push	{r4}
 8026310:	6093      	str	r3, [r2, #8]
 8026312:	da08      	bge.n	8026326 <__sfputc_r+0x1e>
 8026314:	6994      	ldr	r4, [r2, #24]
 8026316:	42a3      	cmp	r3, r4
 8026318:	db01      	blt.n	802631e <__sfputc_r+0x16>
 802631a:	290a      	cmp	r1, #10
 802631c:	d103      	bne.n	8026326 <__sfputc_r+0x1e>
 802631e:	f85d 4b04 	ldr.w	r4, [sp], #4
 8026322:	f000 bb6d 	b.w	8026a00 <__swbuf_r>
 8026326:	6813      	ldr	r3, [r2, #0]
 8026328:	1c58      	adds	r0, r3, #1
 802632a:	6010      	str	r0, [r2, #0]
 802632c:	7019      	strb	r1, [r3, #0]
 802632e:	4608      	mov	r0, r1
 8026330:	f85d 4b04 	ldr.w	r4, [sp], #4
 8026334:	4770      	bx	lr

08026336 <__sfputs_r>:
 8026336:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 8026338:	4606      	mov	r6, r0
 802633a:	460f      	mov	r7, r1
 802633c:	4614      	mov	r4, r2
 802633e:	18d5      	adds	r5, r2, r3
 8026340:	42ac      	cmp	r4, r5
 8026342:	d101      	bne.n	8026348 <__sfputs_r+0x12>
 8026344:	2000      	movs	r0, #0
 8026346:	e007      	b.n	8026358 <__sfputs_r+0x22>
 8026348:	f814 1b01 	ldrb.w	r1, [r4], #1
 802634c:	463a      	mov	r2, r7
 802634e:	4630      	mov	r0, r6
 8026350:	f7ff ffda 	bl	8026308 <__sfputc_r>
 8026354:	1c43      	adds	r3, r0, #1
 8026356:	d1f3      	bne.n	8026340 <__sfputs_r+0xa>
 8026358:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
	...

0802635c <_vfiprintf_r>:
 802635c:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8026360:	460d      	mov	r5, r1
 8026362:	b09d      	sub	sp, #116	@ 0x74
 8026364:	4614      	mov	r4, r2
 8026366:	4698      	mov	r8, r3
 8026368:	4606      	mov	r6, r0
 802636a:	b118      	cbz	r0, 8026374 <_vfiprintf_r+0x18>
 802636c:	6a03      	ldr	r3, [r0, #32]
 802636e:	b90b      	cbnz	r3, 8026374 <_vfiprintf_r+0x18>
 8026370:	f7ff fdba 	bl	8025ee8 <__sinit>
 8026374:	6e6b      	ldr	r3, [r5, #100]	@ 0x64
 8026376:	07d9      	lsls	r1, r3, #31
 8026378:	d405      	bmi.n	8026386 <_vfiprintf_r+0x2a>
 802637a:	89ab      	ldrh	r3, [r5, #12]
 802637c:	059a      	lsls	r2, r3, #22
 802637e:	d402      	bmi.n	8026386 <_vfiprintf_r+0x2a>
 8026380:	6da8      	ldr	r0, [r5, #88]	@ 0x58
 8026382:	f7ff ff0a 	bl	802619a <__retarget_lock_acquire_recursive>
 8026386:	89ab      	ldrh	r3, [r5, #12]
 8026388:	071b      	lsls	r3, r3, #28
 802638a:	d501      	bpl.n	8026390 <_vfiprintf_r+0x34>
 802638c:	692b      	ldr	r3, [r5, #16]
 802638e:	b99b      	cbnz	r3, 80263b8 <_vfiprintf_r+0x5c>
 8026390:	4629      	mov	r1, r5
 8026392:	4630      	mov	r0, r6
 8026394:	f000 fb72 	bl	8026a7c <__swsetup_r>
 8026398:	b170      	cbz	r0, 80263b8 <_vfiprintf_r+0x5c>
 802639a:	6e6b      	ldr	r3, [r5, #100]	@ 0x64
 802639c:	07dc      	lsls	r4, r3, #31
 802639e:	d504      	bpl.n	80263aa <_vfiprintf_r+0x4e>
 80263a0:	f04f 30ff 	mov.w	r0, #4294967295
 80263a4:	b01d      	add	sp, #116	@ 0x74
 80263a6:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 80263aa:	89ab      	ldrh	r3, [r5, #12]
 80263ac:	0598      	lsls	r0, r3, #22
 80263ae:	d4f7      	bmi.n	80263a0 <_vfiprintf_r+0x44>
 80263b0:	6da8      	ldr	r0, [r5, #88]	@ 0x58
 80263b2:	f7ff fef3 	bl	802619c <__retarget_lock_release_recursive>
 80263b6:	e7f3      	b.n	80263a0 <_vfiprintf_r+0x44>
 80263b8:	2300      	movs	r3, #0
 80263ba:	9309      	str	r3, [sp, #36]	@ 0x24
 80263bc:	2320      	movs	r3, #32
 80263be:	f88d 3029 	strb.w	r3, [sp, #41]	@ 0x29
 80263c2:	f8cd 800c 	str.w	r8, [sp, #12]
 80263c6:	2330      	movs	r3, #48	@ 0x30
 80263c8:	f8df 81ac 	ldr.w	r8, [pc, #428]	@ 8026578 <_vfiprintf_r+0x21c>
 80263cc:	f88d 302a 	strb.w	r3, [sp, #42]	@ 0x2a
 80263d0:	f04f 0901 	mov.w	r9, #1
 80263d4:	4623      	mov	r3, r4
 80263d6:	469a      	mov	sl, r3
 80263d8:	f813 2b01 	ldrb.w	r2, [r3], #1
 80263dc:	b10a      	cbz	r2, 80263e2 <_vfiprintf_r+0x86>
 80263de:	2a25      	cmp	r2, #37	@ 0x25
 80263e0:	d1f9      	bne.n	80263d6 <_vfiprintf_r+0x7a>
 80263e2:	ebba 0b04 	subs.w	fp, sl, r4
 80263e6:	d00b      	beq.n	8026400 <_vfiprintf_r+0xa4>
 80263e8:	465b      	mov	r3, fp
 80263ea:	4622      	mov	r2, r4
 80263ec:	4629      	mov	r1, r5
 80263ee:	4630      	mov	r0, r6
 80263f0:	f7ff ffa1 	bl	8026336 <__sfputs_r>
 80263f4:	3001      	adds	r0, #1
 80263f6:	f000 80a7 	beq.w	8026548 <_vfiprintf_r+0x1ec>
 80263fa:	9a09      	ldr	r2, [sp, #36]	@ 0x24
 80263fc:	445a      	add	r2, fp
 80263fe:	9209      	str	r2, [sp, #36]	@ 0x24
 8026400:	f89a 3000 	ldrb.w	r3, [sl]
 8026404:	2b00      	cmp	r3, #0
 8026406:	f000 809f 	beq.w	8026548 <_vfiprintf_r+0x1ec>
 802640a:	2300      	movs	r3, #0
 802640c:	f04f 32ff 	mov.w	r2, #4294967295
 8026410:	e9cd 2305 	strd	r2, r3, [sp, #20]
 8026414:	f10a 0a01 	add.w	sl, sl, #1
 8026418:	9304      	str	r3, [sp, #16]
 802641a:	9307      	str	r3, [sp, #28]
 802641c:	f88d 3053 	strb.w	r3, [sp, #83]	@ 0x53
 8026420:	931a      	str	r3, [sp, #104]	@ 0x68
 8026422:	4654      	mov	r4, sl
 8026424:	2205      	movs	r2, #5
 8026426:	f814 1b01 	ldrb.w	r1, [r4], #1
 802642a:	4853      	ldr	r0, [pc, #332]	@ (8026578 <_vfiprintf_r+0x21c>)
 802642c:	f7d9 fef0 	bl	8000210 <memchr>
 8026430:	9a04      	ldr	r2, [sp, #16]
 8026432:	b9d8      	cbnz	r0, 802646c <_vfiprintf_r+0x110>
 8026434:	06d1      	lsls	r1, r2, #27
 8026436:	bf44      	itt	mi
 8026438:	2320      	movmi	r3, #32
 802643a:	f88d 3053 	strbmi.w	r3, [sp, #83]	@ 0x53
 802643e:	0713      	lsls	r3, r2, #28
 8026440:	bf44      	itt	mi
 8026442:	232b      	movmi	r3, #43	@ 0x2b
 8026444:	f88d 3053 	strbmi.w	r3, [sp, #83]	@ 0x53
 8026448:	f89a 3000 	ldrb.w	r3, [sl]
 802644c:	2b2a      	cmp	r3, #42	@ 0x2a
 802644e:	d015      	beq.n	802647c <_vfiprintf_r+0x120>
 8026450:	9a07      	ldr	r2, [sp, #28]
 8026452:	4654      	mov	r4, sl
 8026454:	2000      	movs	r0, #0
 8026456:	f04f 0c0a 	mov.w	ip, #10
 802645a:	4621      	mov	r1, r4
 802645c:	f811 3b01 	ldrb.w	r3, [r1], #1
 8026460:	3b30      	subs	r3, #48	@ 0x30
 8026462:	2b09      	cmp	r3, #9
 8026464:	d94b      	bls.n	80264fe <_vfiprintf_r+0x1a2>
 8026466:	b1b0      	cbz	r0, 8026496 <_vfiprintf_r+0x13a>
 8026468:	9207      	str	r2, [sp, #28]
 802646a:	e014      	b.n	8026496 <_vfiprintf_r+0x13a>
 802646c:	eba0 0308 	sub.w	r3, r0, r8
 8026470:	fa09 f303 	lsl.w	r3, r9, r3
 8026474:	4313      	orrs	r3, r2
 8026476:	9304      	str	r3, [sp, #16]
 8026478:	46a2      	mov	sl, r4
 802647a:	e7d2      	b.n	8026422 <_vfiprintf_r+0xc6>
 802647c:	9b03      	ldr	r3, [sp, #12]
 802647e:	1d19      	adds	r1, r3, #4
 8026480:	681b      	ldr	r3, [r3, #0]
 8026482:	9103      	str	r1, [sp, #12]
 8026484:	2b00      	cmp	r3, #0
 8026486:	bfbb      	ittet	lt
 8026488:	425b      	neglt	r3, r3
 802648a:	f042 0202 	orrlt.w	r2, r2, #2
 802648e:	9307      	strge	r3, [sp, #28]
 8026490:	9307      	strlt	r3, [sp, #28]
 8026492:	bfb8      	it	lt
 8026494:	9204      	strlt	r2, [sp, #16]
 8026496:	7823      	ldrb	r3, [r4, #0]
 8026498:	2b2e      	cmp	r3, #46	@ 0x2e
 802649a:	d10a      	bne.n	80264b2 <_vfiprintf_r+0x156>
 802649c:	7863      	ldrb	r3, [r4, #1]
 802649e:	2b2a      	cmp	r3, #42	@ 0x2a
 80264a0:	d132      	bne.n	8026508 <_vfiprintf_r+0x1ac>
 80264a2:	9b03      	ldr	r3, [sp, #12]
 80264a4:	1d1a      	adds	r2, r3, #4
 80264a6:	681b      	ldr	r3, [r3, #0]
 80264a8:	9203      	str	r2, [sp, #12]
 80264aa:	ea43 73e3 	orr.w	r3, r3, r3, asr #31
 80264ae:	3402      	adds	r4, #2
 80264b0:	9305      	str	r3, [sp, #20]
 80264b2:	f8df a0d4 	ldr.w	sl, [pc, #212]	@ 8026588 <_vfiprintf_r+0x22c>
 80264b6:	7821      	ldrb	r1, [r4, #0]
 80264b8:	2203      	movs	r2, #3
 80264ba:	4650      	mov	r0, sl
 80264bc:	f7d9 fea8 	bl	8000210 <memchr>
 80264c0:	b138      	cbz	r0, 80264d2 <_vfiprintf_r+0x176>
 80264c2:	9b04      	ldr	r3, [sp, #16]
 80264c4:	eba0 000a 	sub.w	r0, r0, sl
 80264c8:	2240      	movs	r2, #64	@ 0x40
 80264ca:	4082      	lsls	r2, r0
 80264cc:	4313      	orrs	r3, r2
 80264ce:	3401      	adds	r4, #1
 80264d0:	9304      	str	r3, [sp, #16]
 80264d2:	f814 1b01 	ldrb.w	r1, [r4], #1
 80264d6:	4829      	ldr	r0, [pc, #164]	@ (802657c <_vfiprintf_r+0x220>)
 80264d8:	f88d 1028 	strb.w	r1, [sp, #40]	@ 0x28
 80264dc:	2206      	movs	r2, #6
 80264de:	f7d9 fe97 	bl	8000210 <memchr>
 80264e2:	2800      	cmp	r0, #0
 80264e4:	d03f      	beq.n	8026566 <_vfiprintf_r+0x20a>
 80264e6:	4b26      	ldr	r3, [pc, #152]	@ (8026580 <_vfiprintf_r+0x224>)
 80264e8:	bb1b      	cbnz	r3, 8026532 <_vfiprintf_r+0x1d6>
 80264ea:	9b03      	ldr	r3, [sp, #12]
 80264ec:	3307      	adds	r3, #7
 80264ee:	f023 0307 	bic.w	r3, r3, #7
 80264f2:	3308      	adds	r3, #8
 80264f4:	9303      	str	r3, [sp, #12]
 80264f6:	9b09      	ldr	r3, [sp, #36]	@ 0x24
 80264f8:	443b      	add	r3, r7
 80264fa:	9309      	str	r3, [sp, #36]	@ 0x24
 80264fc:	e76a      	b.n	80263d4 <_vfiprintf_r+0x78>
 80264fe:	fb0c 3202 	mla	r2, ip, r2, r3
 8026502:	460c      	mov	r4, r1
 8026504:	2001      	movs	r0, #1
 8026506:	e7a8      	b.n	802645a <_vfiprintf_r+0xfe>
 8026508:	2300      	movs	r3, #0
 802650a:	3401      	adds	r4, #1
 802650c:	9305      	str	r3, [sp, #20]
 802650e:	4619      	mov	r1, r3
 8026510:	f04f 0c0a 	mov.w	ip, #10
 8026514:	4620      	mov	r0, r4
 8026516:	f810 2b01 	ldrb.w	r2, [r0], #1
 802651a:	3a30      	subs	r2, #48	@ 0x30
 802651c:	2a09      	cmp	r2, #9
 802651e:	d903      	bls.n	8026528 <_vfiprintf_r+0x1cc>
 8026520:	2b00      	cmp	r3, #0
 8026522:	d0c6      	beq.n	80264b2 <_vfiprintf_r+0x156>
 8026524:	9105      	str	r1, [sp, #20]
 8026526:	e7c4      	b.n	80264b2 <_vfiprintf_r+0x156>
 8026528:	fb0c 2101 	mla	r1, ip, r1, r2
 802652c:	4604      	mov	r4, r0
 802652e:	2301      	movs	r3, #1
 8026530:	e7f0      	b.n	8026514 <_vfiprintf_r+0x1b8>
 8026532:	ab03      	add	r3, sp, #12
 8026534:	9300      	str	r3, [sp, #0]
 8026536:	462a      	mov	r2, r5
 8026538:	4b12      	ldr	r3, [pc, #72]	@ (8026584 <_vfiprintf_r+0x228>)
 802653a:	a904      	add	r1, sp, #16
 802653c:	4630      	mov	r0, r6
 802653e:	f3af 8000 	nop.w
 8026542:	4607      	mov	r7, r0
 8026544:	1c78      	adds	r0, r7, #1
 8026546:	d1d6      	bne.n	80264f6 <_vfiprintf_r+0x19a>
 8026548:	6e6b      	ldr	r3, [r5, #100]	@ 0x64
 802654a:	07d9      	lsls	r1, r3, #31
 802654c:	d405      	bmi.n	802655a <_vfiprintf_r+0x1fe>
 802654e:	89ab      	ldrh	r3, [r5, #12]
 8026550:	059a      	lsls	r2, r3, #22
 8026552:	d402      	bmi.n	802655a <_vfiprintf_r+0x1fe>
 8026554:	6da8      	ldr	r0, [r5, #88]	@ 0x58
 8026556:	f7ff fe21 	bl	802619c <__retarget_lock_release_recursive>
 802655a:	89ab      	ldrh	r3, [r5, #12]
 802655c:	065b      	lsls	r3, r3, #25
 802655e:	f53f af1f 	bmi.w	80263a0 <_vfiprintf_r+0x44>
 8026562:	9809      	ldr	r0, [sp, #36]	@ 0x24
 8026564:	e71e      	b.n	80263a4 <_vfiprintf_r+0x48>
 8026566:	ab03      	add	r3, sp, #12
 8026568:	9300      	str	r3, [sp, #0]
 802656a:	462a      	mov	r2, r5
 802656c:	4b05      	ldr	r3, [pc, #20]	@ (8026584 <_vfiprintf_r+0x228>)
 802656e:	a904      	add	r1, sp, #16
 8026570:	4630      	mov	r0, r6
 8026572:	f000 f879 	bl	8026668 <_printf_i>
 8026576:	e7e4      	b.n	8026542 <_vfiprintf_r+0x1e6>
 8026578:	080298fc 	.word	0x080298fc
 802657c:	08029906 	.word	0x08029906
 8026580:	00000000 	.word	0x00000000
 8026584:	08026337 	.word	0x08026337
 8026588:	08029902 	.word	0x08029902

0802658c <_printf_common>:
 802658c:	e92d 47f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
 8026590:	4616      	mov	r6, r2
 8026592:	4698      	mov	r8, r3
 8026594:	688a      	ldr	r2, [r1, #8]
 8026596:	690b      	ldr	r3, [r1, #16]
 8026598:	f8dd 9020 	ldr.w	r9, [sp, #32]
 802659c:	4293      	cmp	r3, r2
 802659e:	bfb8      	it	lt
 80265a0:	4613      	movlt	r3, r2
 80265a2:	6033      	str	r3, [r6, #0]
 80265a4:	f891 2043 	ldrb.w	r2, [r1, #67]	@ 0x43
 80265a8:	4607      	mov	r7, r0
 80265aa:	460c      	mov	r4, r1
 80265ac:	b10a      	cbz	r2, 80265b2 <_printf_common+0x26>
 80265ae:	3301      	adds	r3, #1
 80265b0:	6033      	str	r3, [r6, #0]
 80265b2:	6823      	ldr	r3, [r4, #0]
 80265b4:	0699      	lsls	r1, r3, #26
 80265b6:	bf42      	ittt	mi
 80265b8:	6833      	ldrmi	r3, [r6, #0]
 80265ba:	3302      	addmi	r3, #2
 80265bc:	6033      	strmi	r3, [r6, #0]
 80265be:	6825      	ldr	r5, [r4, #0]
 80265c0:	f015 0506 	ands.w	r5, r5, #6
 80265c4:	d106      	bne.n	80265d4 <_printf_common+0x48>
 80265c6:	f104 0a19 	add.w	sl, r4, #25
 80265ca:	68e3      	ldr	r3, [r4, #12]
 80265cc:	6832      	ldr	r2, [r6, #0]
 80265ce:	1a9b      	subs	r3, r3, r2
 80265d0:	42ab      	cmp	r3, r5
 80265d2:	dc26      	bgt.n	8026622 <_printf_common+0x96>
 80265d4:	f894 3043 	ldrb.w	r3, [r4, #67]	@ 0x43
 80265d8:	6822      	ldr	r2, [r4, #0]
 80265da:	3b00      	subs	r3, #0
 80265dc:	bf18      	it	ne
 80265de:	2301      	movne	r3, #1
 80265e0:	0692      	lsls	r2, r2, #26
 80265e2:	d42b      	bmi.n	802663c <_printf_common+0xb0>
 80265e4:	f104 0243 	add.w	r2, r4, #67	@ 0x43
 80265e8:	4641      	mov	r1, r8
 80265ea:	4638      	mov	r0, r7
 80265ec:	47c8      	blx	r9
 80265ee:	3001      	adds	r0, #1
 80265f0:	d01e      	beq.n	8026630 <_printf_common+0xa4>
 80265f2:	6823      	ldr	r3, [r4, #0]
 80265f4:	6922      	ldr	r2, [r4, #16]
 80265f6:	f003 0306 	and.w	r3, r3, #6
 80265fa:	2b04      	cmp	r3, #4
 80265fc:	bf02      	ittt	eq
 80265fe:	68e5      	ldreq	r5, [r4, #12]
 8026600:	6833      	ldreq	r3, [r6, #0]
 8026602:	1aed      	subeq	r5, r5, r3
 8026604:	68a3      	ldr	r3, [r4, #8]
 8026606:	bf0c      	ite	eq
 8026608:	ea25 75e5 	biceq.w	r5, r5, r5, asr #31
 802660c:	2500      	movne	r5, #0
 802660e:	4293      	cmp	r3, r2
 8026610:	bfc4      	itt	gt
 8026612:	1a9b      	subgt	r3, r3, r2
 8026614:	18ed      	addgt	r5, r5, r3
 8026616:	2600      	movs	r6, #0
 8026618:	341a      	adds	r4, #26
 802661a:	42b5      	cmp	r5, r6
 802661c:	d11a      	bne.n	8026654 <_printf_common+0xc8>
 802661e:	2000      	movs	r0, #0
 8026620:	e008      	b.n	8026634 <_printf_common+0xa8>
 8026622:	2301      	movs	r3, #1
 8026624:	4652      	mov	r2, sl
 8026626:	4641      	mov	r1, r8
 8026628:	4638      	mov	r0, r7
 802662a:	47c8      	blx	r9
 802662c:	3001      	adds	r0, #1
 802662e:	d103      	bne.n	8026638 <_printf_common+0xac>
 8026630:	f04f 30ff 	mov.w	r0, #4294967295
 8026634:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
 8026638:	3501      	adds	r5, #1
 802663a:	e7c6      	b.n	80265ca <_printf_common+0x3e>
 802663c:	18e1      	adds	r1, r4, r3
 802663e:	1c5a      	adds	r2, r3, #1
 8026640:	2030      	movs	r0, #48	@ 0x30
 8026642:	f881 0043 	strb.w	r0, [r1, #67]	@ 0x43
 8026646:	4422      	add	r2, r4
 8026648:	f894 1045 	ldrb.w	r1, [r4, #69]	@ 0x45
 802664c:	f882 1043 	strb.w	r1, [r2, #67]	@ 0x43
 8026650:	3302      	adds	r3, #2
 8026652:	e7c7      	b.n	80265e4 <_printf_common+0x58>
 8026654:	2301      	movs	r3, #1
 8026656:	4622      	mov	r2, r4
 8026658:	4641      	mov	r1, r8
 802665a:	4638      	mov	r0, r7
 802665c:	47c8      	blx	r9
 802665e:	3001      	adds	r0, #1
 8026660:	d0e6      	beq.n	8026630 <_printf_common+0xa4>
 8026662:	3601      	adds	r6, #1
 8026664:	e7d9      	b.n	802661a <_printf_common+0x8e>
	...

08026668 <_printf_i>:
 8026668:	e92d 47ff 	stmdb	sp!, {r0, r1, r2, r3, r4, r5, r6, r7, r8, r9, sl, lr}
 802666c:	7e0f      	ldrb	r7, [r1, #24]
 802666e:	9e0c      	ldr	r6, [sp, #48]	@ 0x30
 8026670:	2f78      	cmp	r7, #120	@ 0x78
 8026672:	4691      	mov	r9, r2
 8026674:	4680      	mov	r8, r0
 8026676:	460c      	mov	r4, r1
 8026678:	469a      	mov	sl, r3
 802667a:	f101 0243 	add.w	r2, r1, #67	@ 0x43
 802667e:	d807      	bhi.n	8026690 <_printf_i+0x28>
 8026680:	2f62      	cmp	r7, #98	@ 0x62
 8026682:	d80a      	bhi.n	802669a <_printf_i+0x32>
 8026684:	2f00      	cmp	r7, #0
 8026686:	f000 80d2 	beq.w	802682e <_printf_i+0x1c6>
 802668a:	2f58      	cmp	r7, #88	@ 0x58
 802668c:	f000 80b9 	beq.w	8026802 <_printf_i+0x19a>
 8026690:	f104 0642 	add.w	r6, r4, #66	@ 0x42
 8026694:	f884 7042 	strb.w	r7, [r4, #66]	@ 0x42
 8026698:	e03a      	b.n	8026710 <_printf_i+0xa8>
 802669a:	f1a7 0363 	sub.w	r3, r7, #99	@ 0x63
 802669e:	2b15      	cmp	r3, #21
 80266a0:	d8f6      	bhi.n	8026690 <_printf_i+0x28>
 80266a2:	a101      	add	r1, pc, #4	@ (adr r1, 80266a8 <_printf_i+0x40>)
 80266a4:	f851 f023 	ldr.w	pc, [r1, r3, lsl #2]
 80266a8:	08026701 	.word	0x08026701
 80266ac:	08026715 	.word	0x08026715
 80266b0:	08026691 	.word	0x08026691
 80266b4:	08026691 	.word	0x08026691
 80266b8:	08026691 	.word	0x08026691
 80266bc:	08026691 	.word	0x08026691
 80266c0:	08026715 	.word	0x08026715
 80266c4:	08026691 	.word	0x08026691
 80266c8:	08026691 	.word	0x08026691
 80266cc:	08026691 	.word	0x08026691
 80266d0:	08026691 	.word	0x08026691
 80266d4:	08026815 	.word	0x08026815
 80266d8:	0802673f 	.word	0x0802673f
 80266dc:	080267cf 	.word	0x080267cf
 80266e0:	08026691 	.word	0x08026691
 80266e4:	08026691 	.word	0x08026691
 80266e8:	08026837 	.word	0x08026837
 80266ec:	08026691 	.word	0x08026691
 80266f0:	0802673f 	.word	0x0802673f
 80266f4:	08026691 	.word	0x08026691
 80266f8:	08026691 	.word	0x08026691
 80266fc:	080267d7 	.word	0x080267d7
 8026700:	6833      	ldr	r3, [r6, #0]
 8026702:	1d1a      	adds	r2, r3, #4
 8026704:	681b      	ldr	r3, [r3, #0]
 8026706:	6032      	str	r2, [r6, #0]
 8026708:	f104 0642 	add.w	r6, r4, #66	@ 0x42
 802670c:	f884 3042 	strb.w	r3, [r4, #66]	@ 0x42
 8026710:	2301      	movs	r3, #1
 8026712:	e09d      	b.n	8026850 <_printf_i+0x1e8>
 8026714:	6833      	ldr	r3, [r6, #0]
 8026716:	6820      	ldr	r0, [r4, #0]
 8026718:	1d19      	adds	r1, r3, #4
 802671a:	6031      	str	r1, [r6, #0]
 802671c:	0606      	lsls	r6, r0, #24
 802671e:	d501      	bpl.n	8026724 <_printf_i+0xbc>
 8026720:	681d      	ldr	r5, [r3, #0]
 8026722:	e003      	b.n	802672c <_printf_i+0xc4>
 8026724:	0645      	lsls	r5, r0, #25
 8026726:	d5fb      	bpl.n	8026720 <_printf_i+0xb8>
 8026728:	f9b3 5000 	ldrsh.w	r5, [r3]
 802672c:	2d00      	cmp	r5, #0
 802672e:	da03      	bge.n	8026738 <_printf_i+0xd0>
 8026730:	232d      	movs	r3, #45	@ 0x2d
 8026732:	426d      	negs	r5, r5
 8026734:	f884 3043 	strb.w	r3, [r4, #67]	@ 0x43
 8026738:	4859      	ldr	r0, [pc, #356]	@ (80268a0 <_printf_i+0x238>)
 802673a:	230a      	movs	r3, #10
 802673c:	e011      	b.n	8026762 <_printf_i+0xfa>
 802673e:	6821      	ldr	r1, [r4, #0]
 8026740:	6833      	ldr	r3, [r6, #0]
 8026742:	0608      	lsls	r0, r1, #24
 8026744:	f853 5b04 	ldr.w	r5, [r3], #4
 8026748:	d402      	bmi.n	8026750 <_printf_i+0xe8>
 802674a:	0649      	lsls	r1, r1, #25
 802674c:	bf48      	it	mi
 802674e:	b2ad      	uxthmi	r5, r5
 8026750:	2f6f      	cmp	r7, #111	@ 0x6f
 8026752:	4853      	ldr	r0, [pc, #332]	@ (80268a0 <_printf_i+0x238>)
 8026754:	6033      	str	r3, [r6, #0]
 8026756:	bf14      	ite	ne
 8026758:	230a      	movne	r3, #10
 802675a:	2308      	moveq	r3, #8
 802675c:	2100      	movs	r1, #0
 802675e:	f884 1043 	strb.w	r1, [r4, #67]	@ 0x43
 8026762:	6866      	ldr	r6, [r4, #4]
 8026764:	60a6      	str	r6, [r4, #8]
 8026766:	2e00      	cmp	r6, #0
 8026768:	bfa2      	ittt	ge
 802676a:	6821      	ldrge	r1, [r4, #0]
 802676c:	f021 0104 	bicge.w	r1, r1, #4
 8026770:	6021      	strge	r1, [r4, #0]
 8026772:	b90d      	cbnz	r5, 8026778 <_printf_i+0x110>
 8026774:	2e00      	cmp	r6, #0
 8026776:	d04b      	beq.n	8026810 <_printf_i+0x1a8>
 8026778:	4616      	mov	r6, r2
 802677a:	fbb5 f1f3 	udiv	r1, r5, r3
 802677e:	fb03 5711 	mls	r7, r3, r1, r5
 8026782:	5dc7      	ldrb	r7, [r0, r7]
 8026784:	f806 7d01 	strb.w	r7, [r6, #-1]!
 8026788:	462f      	mov	r7, r5
 802678a:	42bb      	cmp	r3, r7
 802678c:	460d      	mov	r5, r1
 802678e:	d9f4      	bls.n	802677a <_printf_i+0x112>
 8026790:	2b08      	cmp	r3, #8
 8026792:	d10b      	bne.n	80267ac <_printf_i+0x144>
 8026794:	6823      	ldr	r3, [r4, #0]
 8026796:	07df      	lsls	r7, r3, #31
 8026798:	d508      	bpl.n	80267ac <_printf_i+0x144>
 802679a:	6923      	ldr	r3, [r4, #16]
 802679c:	6861      	ldr	r1, [r4, #4]
 802679e:	4299      	cmp	r1, r3
 80267a0:	bfde      	ittt	le
 80267a2:	2330      	movle	r3, #48	@ 0x30
 80267a4:	f806 3c01 	strble.w	r3, [r6, #-1]
 80267a8:	f106 36ff 	addle.w	r6, r6, #4294967295
 80267ac:	1b92      	subs	r2, r2, r6
 80267ae:	6122      	str	r2, [r4, #16]
 80267b0:	f8cd a000 	str.w	sl, [sp]
 80267b4:	464b      	mov	r3, r9
 80267b6:	aa03      	add	r2, sp, #12
 80267b8:	4621      	mov	r1, r4
 80267ba:	4640      	mov	r0, r8
 80267bc:	f7ff fee6 	bl	802658c <_printf_common>
 80267c0:	3001      	adds	r0, #1
 80267c2:	d14a      	bne.n	802685a <_printf_i+0x1f2>
 80267c4:	f04f 30ff 	mov.w	r0, #4294967295
 80267c8:	b004      	add	sp, #16
 80267ca:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
 80267ce:	6823      	ldr	r3, [r4, #0]
 80267d0:	f043 0320 	orr.w	r3, r3, #32
 80267d4:	6023      	str	r3, [r4, #0]
 80267d6:	4833      	ldr	r0, [pc, #204]	@ (80268a4 <_printf_i+0x23c>)
 80267d8:	2778      	movs	r7, #120	@ 0x78
 80267da:	f884 7045 	strb.w	r7, [r4, #69]	@ 0x45
 80267de:	6823      	ldr	r3, [r4, #0]
 80267e0:	6831      	ldr	r1, [r6, #0]
 80267e2:	061f      	lsls	r7, r3, #24
 80267e4:	f851 5b04 	ldr.w	r5, [r1], #4
 80267e8:	d402      	bmi.n	80267f0 <_printf_i+0x188>
 80267ea:	065f      	lsls	r7, r3, #25
 80267ec:	bf48      	it	mi
 80267ee:	b2ad      	uxthmi	r5, r5
 80267f0:	6031      	str	r1, [r6, #0]
 80267f2:	07d9      	lsls	r1, r3, #31
 80267f4:	bf44      	itt	mi
 80267f6:	f043 0320 	orrmi.w	r3, r3, #32
 80267fa:	6023      	strmi	r3, [r4, #0]
 80267fc:	b11d      	cbz	r5, 8026806 <_printf_i+0x19e>
 80267fe:	2310      	movs	r3, #16
 8026800:	e7ac      	b.n	802675c <_printf_i+0xf4>
 8026802:	4827      	ldr	r0, [pc, #156]	@ (80268a0 <_printf_i+0x238>)
 8026804:	e7e9      	b.n	80267da <_printf_i+0x172>
 8026806:	6823      	ldr	r3, [r4, #0]
 8026808:	f023 0320 	bic.w	r3, r3, #32
 802680c:	6023      	str	r3, [r4, #0]
 802680e:	e7f6      	b.n	80267fe <_printf_i+0x196>
 8026810:	4616      	mov	r6, r2
 8026812:	e7bd      	b.n	8026790 <_printf_i+0x128>
 8026814:	6833      	ldr	r3, [r6, #0]
 8026816:	6825      	ldr	r5, [r4, #0]
 8026818:	6961      	ldr	r1, [r4, #20]
 802681a:	1d18      	adds	r0, r3, #4
 802681c:	6030      	str	r0, [r6, #0]
 802681e:	062e      	lsls	r6, r5, #24
 8026820:	681b      	ldr	r3, [r3, #0]
 8026822:	d501      	bpl.n	8026828 <_printf_i+0x1c0>
 8026824:	6019      	str	r1, [r3, #0]
 8026826:	e002      	b.n	802682e <_printf_i+0x1c6>
 8026828:	0668      	lsls	r0, r5, #25
 802682a:	d5fb      	bpl.n	8026824 <_printf_i+0x1bc>
 802682c:	8019      	strh	r1, [r3, #0]
 802682e:	2300      	movs	r3, #0
 8026830:	6123      	str	r3, [r4, #16]
 8026832:	4616      	mov	r6, r2
 8026834:	e7bc      	b.n	80267b0 <_printf_i+0x148>
 8026836:	6833      	ldr	r3, [r6, #0]
 8026838:	1d1a      	adds	r2, r3, #4
 802683a:	6032      	str	r2, [r6, #0]
 802683c:	681e      	ldr	r6, [r3, #0]
 802683e:	6862      	ldr	r2, [r4, #4]
 8026840:	2100      	movs	r1, #0
 8026842:	4630      	mov	r0, r6
 8026844:	f7d9 fce4 	bl	8000210 <memchr>
 8026848:	b108      	cbz	r0, 802684e <_printf_i+0x1e6>
 802684a:	1b80      	subs	r0, r0, r6
 802684c:	6060      	str	r0, [r4, #4]
 802684e:	6863      	ldr	r3, [r4, #4]
 8026850:	6123      	str	r3, [r4, #16]
 8026852:	2300      	movs	r3, #0
 8026854:	f884 3043 	strb.w	r3, [r4, #67]	@ 0x43
 8026858:	e7aa      	b.n	80267b0 <_printf_i+0x148>
 802685a:	6923      	ldr	r3, [r4, #16]
 802685c:	4632      	mov	r2, r6
 802685e:	4649      	mov	r1, r9
 8026860:	4640      	mov	r0, r8
 8026862:	47d0      	blx	sl
 8026864:	3001      	adds	r0, #1
 8026866:	d0ad      	beq.n	80267c4 <_printf_i+0x15c>
 8026868:	6823      	ldr	r3, [r4, #0]
 802686a:	079b      	lsls	r3, r3, #30
 802686c:	d413      	bmi.n	8026896 <_printf_i+0x22e>
 802686e:	68e0      	ldr	r0, [r4, #12]
 8026870:	9b03      	ldr	r3, [sp, #12]
 8026872:	4298      	cmp	r0, r3
 8026874:	bfb8      	it	lt
 8026876:	4618      	movlt	r0, r3
 8026878:	e7a6      	b.n	80267c8 <_printf_i+0x160>
 802687a:	2301      	movs	r3, #1
 802687c:	4632      	mov	r2, r6
 802687e:	4649      	mov	r1, r9
 8026880:	4640      	mov	r0, r8
 8026882:	47d0      	blx	sl
 8026884:	3001      	adds	r0, #1
 8026886:	d09d      	beq.n	80267c4 <_printf_i+0x15c>
 8026888:	3501      	adds	r5, #1
 802688a:	68e3      	ldr	r3, [r4, #12]
 802688c:	9903      	ldr	r1, [sp, #12]
 802688e:	1a5b      	subs	r3, r3, r1
 8026890:	42ab      	cmp	r3, r5
 8026892:	dcf2      	bgt.n	802687a <_printf_i+0x212>
 8026894:	e7eb      	b.n	802686e <_printf_i+0x206>
 8026896:	2500      	movs	r5, #0
 8026898:	f104 0619 	add.w	r6, r4, #25
 802689c:	e7f5      	b.n	802688a <_printf_i+0x222>
 802689e:	bf00      	nop
 80268a0:	0802990d 	.word	0x0802990d
 80268a4:	0802991e 	.word	0x0802991e

080268a8 <__sflush_r>:
 80268a8:	f9b1 200c 	ldrsh.w	r2, [r1, #12]
 80268ac:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 80268b0:	0716      	lsls	r6, r2, #28
 80268b2:	4605      	mov	r5, r0
 80268b4:	460c      	mov	r4, r1
 80268b6:	d454      	bmi.n	8026962 <__sflush_r+0xba>
 80268b8:	684b      	ldr	r3, [r1, #4]
 80268ba:	2b00      	cmp	r3, #0
 80268bc:	dc02      	bgt.n	80268c4 <__sflush_r+0x1c>
 80268be:	6c0b      	ldr	r3, [r1, #64]	@ 0x40
 80268c0:	2b00      	cmp	r3, #0
 80268c2:	dd48      	ble.n	8026956 <__sflush_r+0xae>
 80268c4:	6ae6      	ldr	r6, [r4, #44]	@ 0x2c
 80268c6:	2e00      	cmp	r6, #0
 80268c8:	d045      	beq.n	8026956 <__sflush_r+0xae>
 80268ca:	2300      	movs	r3, #0
 80268cc:	f412 5280 	ands.w	r2, r2, #4096	@ 0x1000
 80268d0:	682f      	ldr	r7, [r5, #0]
 80268d2:	6a21      	ldr	r1, [r4, #32]
 80268d4:	602b      	str	r3, [r5, #0]
 80268d6:	d030      	beq.n	802693a <__sflush_r+0x92>
 80268d8:	6d62      	ldr	r2, [r4, #84]	@ 0x54
 80268da:	89a3      	ldrh	r3, [r4, #12]
 80268dc:	0759      	lsls	r1, r3, #29
 80268de:	d505      	bpl.n	80268ec <__sflush_r+0x44>
 80268e0:	6863      	ldr	r3, [r4, #4]
 80268e2:	1ad2      	subs	r2, r2, r3
 80268e4:	6b63      	ldr	r3, [r4, #52]	@ 0x34
 80268e6:	b10b      	cbz	r3, 80268ec <__sflush_r+0x44>
 80268e8:	6c23      	ldr	r3, [r4, #64]	@ 0x40
 80268ea:	1ad2      	subs	r2, r2, r3
 80268ec:	2300      	movs	r3, #0
 80268ee:	6ae6      	ldr	r6, [r4, #44]	@ 0x2c
 80268f0:	6a21      	ldr	r1, [r4, #32]
 80268f2:	4628      	mov	r0, r5
 80268f4:	47b0      	blx	r6
 80268f6:	1c43      	adds	r3, r0, #1
 80268f8:	89a3      	ldrh	r3, [r4, #12]
 80268fa:	d106      	bne.n	802690a <__sflush_r+0x62>
 80268fc:	6829      	ldr	r1, [r5, #0]
 80268fe:	291d      	cmp	r1, #29
 8026900:	d82b      	bhi.n	802695a <__sflush_r+0xb2>
 8026902:	4a2a      	ldr	r2, [pc, #168]	@ (80269ac <__sflush_r+0x104>)
 8026904:	410a      	asrs	r2, r1
 8026906:	07d6      	lsls	r6, r2, #31
 8026908:	d427      	bmi.n	802695a <__sflush_r+0xb2>
 802690a:	2200      	movs	r2, #0
 802690c:	6062      	str	r2, [r4, #4]
 802690e:	04d9      	lsls	r1, r3, #19
 8026910:	6922      	ldr	r2, [r4, #16]
 8026912:	6022      	str	r2, [r4, #0]
 8026914:	d504      	bpl.n	8026920 <__sflush_r+0x78>
 8026916:	1c42      	adds	r2, r0, #1
 8026918:	d101      	bne.n	802691e <__sflush_r+0x76>
 802691a:	682b      	ldr	r3, [r5, #0]
 802691c:	b903      	cbnz	r3, 8026920 <__sflush_r+0x78>
 802691e:	6560      	str	r0, [r4, #84]	@ 0x54
 8026920:	6b61      	ldr	r1, [r4, #52]	@ 0x34
 8026922:	602f      	str	r7, [r5, #0]
 8026924:	b1b9      	cbz	r1, 8026956 <__sflush_r+0xae>
 8026926:	f104 0344 	add.w	r3, r4, #68	@ 0x44
 802692a:	4299      	cmp	r1, r3
 802692c:	d002      	beq.n	8026934 <__sflush_r+0x8c>
 802692e:	4628      	mov	r0, r5
 8026930:	f7ff fca0 	bl	8026274 <_free_r>
 8026934:	2300      	movs	r3, #0
 8026936:	6363      	str	r3, [r4, #52]	@ 0x34
 8026938:	e00d      	b.n	8026956 <__sflush_r+0xae>
 802693a:	2301      	movs	r3, #1
 802693c:	4628      	mov	r0, r5
 802693e:	47b0      	blx	r6
 8026940:	4602      	mov	r2, r0
 8026942:	1c50      	adds	r0, r2, #1
 8026944:	d1c9      	bne.n	80268da <__sflush_r+0x32>
 8026946:	682b      	ldr	r3, [r5, #0]
 8026948:	2b00      	cmp	r3, #0
 802694a:	d0c6      	beq.n	80268da <__sflush_r+0x32>
 802694c:	2b1d      	cmp	r3, #29
 802694e:	d001      	beq.n	8026954 <__sflush_r+0xac>
 8026950:	2b16      	cmp	r3, #22
 8026952:	d11e      	bne.n	8026992 <__sflush_r+0xea>
 8026954:	602f      	str	r7, [r5, #0]
 8026956:	2000      	movs	r0, #0
 8026958:	e022      	b.n	80269a0 <__sflush_r+0xf8>
 802695a:	f043 0340 	orr.w	r3, r3, #64	@ 0x40
 802695e:	b21b      	sxth	r3, r3
 8026960:	e01b      	b.n	802699a <__sflush_r+0xf2>
 8026962:	690f      	ldr	r7, [r1, #16]
 8026964:	2f00      	cmp	r7, #0
 8026966:	d0f6      	beq.n	8026956 <__sflush_r+0xae>
 8026968:	0793      	lsls	r3, r2, #30
 802696a:	680e      	ldr	r6, [r1, #0]
 802696c:	bf08      	it	eq
 802696e:	694b      	ldreq	r3, [r1, #20]
 8026970:	600f      	str	r7, [r1, #0]
 8026972:	bf18      	it	ne
 8026974:	2300      	movne	r3, #0
 8026976:	eba6 0807 	sub.w	r8, r6, r7
 802697a:	608b      	str	r3, [r1, #8]
 802697c:	f1b8 0f00 	cmp.w	r8, #0
 8026980:	dde9      	ble.n	8026956 <__sflush_r+0xae>
 8026982:	6a21      	ldr	r1, [r4, #32]
 8026984:	6aa6      	ldr	r6, [r4, #40]	@ 0x28
 8026986:	4643      	mov	r3, r8
 8026988:	463a      	mov	r2, r7
 802698a:	4628      	mov	r0, r5
 802698c:	47b0      	blx	r6
 802698e:	2800      	cmp	r0, #0
 8026990:	dc08      	bgt.n	80269a4 <__sflush_r+0xfc>
 8026992:	f9b4 300c 	ldrsh.w	r3, [r4, #12]
 8026996:	f043 0340 	orr.w	r3, r3, #64	@ 0x40
 802699a:	81a3      	strh	r3, [r4, #12]
 802699c:	f04f 30ff 	mov.w	r0, #4294967295
 80269a0:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
 80269a4:	4407      	add	r7, r0
 80269a6:	eba8 0800 	sub.w	r8, r8, r0
 80269aa:	e7e7      	b.n	802697c <__sflush_r+0xd4>
 80269ac:	dfbffffe 	.word	0xdfbffffe

080269b0 <_fflush_r>:
 80269b0:	b538      	push	{r3, r4, r5, lr}
 80269b2:	690b      	ldr	r3, [r1, #16]
 80269b4:	4605      	mov	r5, r0
 80269b6:	460c      	mov	r4, r1
 80269b8:	b913      	cbnz	r3, 80269c0 <_fflush_r+0x10>
 80269ba:	2500      	movs	r5, #0
 80269bc:	4628      	mov	r0, r5
 80269be:	bd38      	pop	{r3, r4, r5, pc}
 80269c0:	b118      	cbz	r0, 80269ca <_fflush_r+0x1a>
 80269c2:	6a03      	ldr	r3, [r0, #32]
 80269c4:	b90b      	cbnz	r3, 80269ca <_fflush_r+0x1a>
 80269c6:	f7ff fa8f 	bl	8025ee8 <__sinit>
 80269ca:	f9b4 300c 	ldrsh.w	r3, [r4, #12]
 80269ce:	2b00      	cmp	r3, #0
 80269d0:	d0f3      	beq.n	80269ba <_fflush_r+0xa>
 80269d2:	6e62      	ldr	r2, [r4, #100]	@ 0x64
 80269d4:	07d0      	lsls	r0, r2, #31
 80269d6:	d404      	bmi.n	80269e2 <_fflush_r+0x32>
 80269d8:	0599      	lsls	r1, r3, #22
 80269da:	d402      	bmi.n	80269e2 <_fflush_r+0x32>
 80269dc:	6da0      	ldr	r0, [r4, #88]	@ 0x58
 80269de:	f7ff fbdc 	bl	802619a <__retarget_lock_acquire_recursive>
 80269e2:	4628      	mov	r0, r5
 80269e4:	4621      	mov	r1, r4
 80269e6:	f7ff ff5f 	bl	80268a8 <__sflush_r>
 80269ea:	6e63      	ldr	r3, [r4, #100]	@ 0x64
 80269ec:	07da      	lsls	r2, r3, #31
 80269ee:	4605      	mov	r5, r0
 80269f0:	d4e4      	bmi.n	80269bc <_fflush_r+0xc>
 80269f2:	89a3      	ldrh	r3, [r4, #12]
 80269f4:	059b      	lsls	r3, r3, #22
 80269f6:	d4e1      	bmi.n	80269bc <_fflush_r+0xc>
 80269f8:	6da0      	ldr	r0, [r4, #88]	@ 0x58
 80269fa:	f7ff fbcf 	bl	802619c <__retarget_lock_release_recursive>
 80269fe:	e7dd      	b.n	80269bc <_fflush_r+0xc>

08026a00 <__swbuf_r>:
 8026a00:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 8026a02:	460e      	mov	r6, r1
 8026a04:	4614      	mov	r4, r2
 8026a06:	4605      	mov	r5, r0
 8026a08:	b118      	cbz	r0, 8026a12 <__swbuf_r+0x12>
 8026a0a:	6a03      	ldr	r3, [r0, #32]
 8026a0c:	b90b      	cbnz	r3, 8026a12 <__swbuf_r+0x12>
 8026a0e:	f7ff fa6b 	bl	8025ee8 <__sinit>
 8026a12:	69a3      	ldr	r3, [r4, #24]
 8026a14:	60a3      	str	r3, [r4, #8]
 8026a16:	89a3      	ldrh	r3, [r4, #12]
 8026a18:	071a      	lsls	r2, r3, #28
 8026a1a:	d501      	bpl.n	8026a20 <__swbuf_r+0x20>
 8026a1c:	6923      	ldr	r3, [r4, #16]
 8026a1e:	b943      	cbnz	r3, 8026a32 <__swbuf_r+0x32>
 8026a20:	4621      	mov	r1, r4
 8026a22:	4628      	mov	r0, r5
 8026a24:	f000 f82a 	bl	8026a7c <__swsetup_r>
 8026a28:	b118      	cbz	r0, 8026a32 <__swbuf_r+0x32>
 8026a2a:	f04f 37ff 	mov.w	r7, #4294967295
 8026a2e:	4638      	mov	r0, r7
 8026a30:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
 8026a32:	6823      	ldr	r3, [r4, #0]
 8026a34:	6922      	ldr	r2, [r4, #16]
 8026a36:	1a98      	subs	r0, r3, r2
 8026a38:	6963      	ldr	r3, [r4, #20]
 8026a3a:	b2f6      	uxtb	r6, r6
 8026a3c:	4283      	cmp	r3, r0
 8026a3e:	4637      	mov	r7, r6
 8026a40:	dc05      	bgt.n	8026a4e <__swbuf_r+0x4e>
 8026a42:	4621      	mov	r1, r4
 8026a44:	4628      	mov	r0, r5
 8026a46:	f7ff ffb3 	bl	80269b0 <_fflush_r>
 8026a4a:	2800      	cmp	r0, #0
 8026a4c:	d1ed      	bne.n	8026a2a <__swbuf_r+0x2a>
 8026a4e:	68a3      	ldr	r3, [r4, #8]
 8026a50:	3b01      	subs	r3, #1
 8026a52:	60a3      	str	r3, [r4, #8]
 8026a54:	6823      	ldr	r3, [r4, #0]
 8026a56:	1c5a      	adds	r2, r3, #1
 8026a58:	6022      	str	r2, [r4, #0]
 8026a5a:	701e      	strb	r6, [r3, #0]
 8026a5c:	6962      	ldr	r2, [r4, #20]
 8026a5e:	1c43      	adds	r3, r0, #1
 8026a60:	429a      	cmp	r2, r3
 8026a62:	d004      	beq.n	8026a6e <__swbuf_r+0x6e>
 8026a64:	89a3      	ldrh	r3, [r4, #12]
 8026a66:	07db      	lsls	r3, r3, #31
 8026a68:	d5e1      	bpl.n	8026a2e <__swbuf_r+0x2e>
 8026a6a:	2e0a      	cmp	r6, #10
 8026a6c:	d1df      	bne.n	8026a2e <__swbuf_r+0x2e>
 8026a6e:	4621      	mov	r1, r4
 8026a70:	4628      	mov	r0, r5
 8026a72:	f7ff ff9d 	bl	80269b0 <_fflush_r>
 8026a76:	2800      	cmp	r0, #0
 8026a78:	d0d9      	beq.n	8026a2e <__swbuf_r+0x2e>
 8026a7a:	e7d6      	b.n	8026a2a <__swbuf_r+0x2a>

08026a7c <__swsetup_r>:
 8026a7c:	b538      	push	{r3, r4, r5, lr}
 8026a7e:	4b29      	ldr	r3, [pc, #164]	@ (8026b24 <__swsetup_r+0xa8>)
 8026a80:	4605      	mov	r5, r0
 8026a82:	6818      	ldr	r0, [r3, #0]
 8026a84:	460c      	mov	r4, r1
 8026a86:	b118      	cbz	r0, 8026a90 <__swsetup_r+0x14>
 8026a88:	6a03      	ldr	r3, [r0, #32]
 8026a8a:	b90b      	cbnz	r3, 8026a90 <__swsetup_r+0x14>
 8026a8c:	f7ff fa2c 	bl	8025ee8 <__sinit>
 8026a90:	f9b4 300c 	ldrsh.w	r3, [r4, #12]
 8026a94:	0719      	lsls	r1, r3, #28
 8026a96:	d422      	bmi.n	8026ade <__swsetup_r+0x62>
 8026a98:	06da      	lsls	r2, r3, #27
 8026a9a:	d407      	bmi.n	8026aac <__swsetup_r+0x30>
 8026a9c:	2209      	movs	r2, #9
 8026a9e:	602a      	str	r2, [r5, #0]
 8026aa0:	f043 0340 	orr.w	r3, r3, #64	@ 0x40
 8026aa4:	81a3      	strh	r3, [r4, #12]
 8026aa6:	f04f 30ff 	mov.w	r0, #4294967295
 8026aaa:	e033      	b.n	8026b14 <__swsetup_r+0x98>
 8026aac:	0758      	lsls	r0, r3, #29
 8026aae:	d512      	bpl.n	8026ad6 <__swsetup_r+0x5a>
 8026ab0:	6b61      	ldr	r1, [r4, #52]	@ 0x34
 8026ab2:	b141      	cbz	r1, 8026ac6 <__swsetup_r+0x4a>
 8026ab4:	f104 0344 	add.w	r3, r4, #68	@ 0x44
 8026ab8:	4299      	cmp	r1, r3
 8026aba:	d002      	beq.n	8026ac2 <__swsetup_r+0x46>
 8026abc:	4628      	mov	r0, r5
 8026abe:	f7ff fbd9 	bl	8026274 <_free_r>
 8026ac2:	2300      	movs	r3, #0
 8026ac4:	6363      	str	r3, [r4, #52]	@ 0x34
 8026ac6:	89a3      	ldrh	r3, [r4, #12]
 8026ac8:	f023 0324 	bic.w	r3, r3, #36	@ 0x24
 8026acc:	81a3      	strh	r3, [r4, #12]
 8026ace:	2300      	movs	r3, #0
 8026ad0:	6063      	str	r3, [r4, #4]
 8026ad2:	6923      	ldr	r3, [r4, #16]
 8026ad4:	6023      	str	r3, [r4, #0]
 8026ad6:	89a3      	ldrh	r3, [r4, #12]
 8026ad8:	f043 0308 	orr.w	r3, r3, #8
 8026adc:	81a3      	strh	r3, [r4, #12]
 8026ade:	6923      	ldr	r3, [r4, #16]
 8026ae0:	b94b      	cbnz	r3, 8026af6 <__swsetup_r+0x7a>
 8026ae2:	89a3      	ldrh	r3, [r4, #12]
 8026ae4:	f403 7320 	and.w	r3, r3, #640	@ 0x280
 8026ae8:	f5b3 7f00 	cmp.w	r3, #512	@ 0x200
 8026aec:	d003      	beq.n	8026af6 <__swsetup_r+0x7a>
 8026aee:	4621      	mov	r1, r4
 8026af0:	4628      	mov	r0, r5
 8026af2:	f000 f83f 	bl	8026b74 <__smakebuf_r>
 8026af6:	f9b4 300c 	ldrsh.w	r3, [r4, #12]
 8026afa:	f013 0201 	ands.w	r2, r3, #1
 8026afe:	d00a      	beq.n	8026b16 <__swsetup_r+0x9a>
 8026b00:	2200      	movs	r2, #0
 8026b02:	60a2      	str	r2, [r4, #8]
 8026b04:	6962      	ldr	r2, [r4, #20]
 8026b06:	4252      	negs	r2, r2
 8026b08:	61a2      	str	r2, [r4, #24]
 8026b0a:	6922      	ldr	r2, [r4, #16]
 8026b0c:	b942      	cbnz	r2, 8026b20 <__swsetup_r+0xa4>
 8026b0e:	f013 0080 	ands.w	r0, r3, #128	@ 0x80
 8026b12:	d1c5      	bne.n	8026aa0 <__swsetup_r+0x24>
 8026b14:	bd38      	pop	{r3, r4, r5, pc}
 8026b16:	0799      	lsls	r1, r3, #30
 8026b18:	bf58      	it	pl
 8026b1a:	6962      	ldrpl	r2, [r4, #20]
 8026b1c:	60a2      	str	r2, [r4, #8]
 8026b1e:	e7f4      	b.n	8026b0a <__swsetup_r+0x8e>
 8026b20:	2000      	movs	r0, #0
 8026b22:	e7f7      	b.n	8026b14 <__swsetup_r+0x98>
 8026b24:	200000b8 	.word	0x200000b8

08026b28 <__swhatbuf_r>:
 8026b28:	b570      	push	{r4, r5, r6, lr}
 8026b2a:	460c      	mov	r4, r1
 8026b2c:	f9b1 100e 	ldrsh.w	r1, [r1, #14]
 8026b30:	2900      	cmp	r1, #0
 8026b32:	b096      	sub	sp, #88	@ 0x58
 8026b34:	4615      	mov	r5, r2
 8026b36:	461e      	mov	r6, r3
 8026b38:	da0d      	bge.n	8026b56 <__swhatbuf_r+0x2e>
 8026b3a:	89a3      	ldrh	r3, [r4, #12]
 8026b3c:	f013 0f80 	tst.w	r3, #128	@ 0x80
 8026b40:	f04f 0100 	mov.w	r1, #0
 8026b44:	bf14      	ite	ne
 8026b46:	2340      	movne	r3, #64	@ 0x40
 8026b48:	f44f 6380 	moveq.w	r3, #1024	@ 0x400
 8026b4c:	2000      	movs	r0, #0
 8026b4e:	6031      	str	r1, [r6, #0]
 8026b50:	602b      	str	r3, [r5, #0]
 8026b52:	b016      	add	sp, #88	@ 0x58
 8026b54:	bd70      	pop	{r4, r5, r6, pc}
 8026b56:	466a      	mov	r2, sp
 8026b58:	f000 f848 	bl	8026bec <_fstat_r>
 8026b5c:	2800      	cmp	r0, #0
 8026b5e:	dbec      	blt.n	8026b3a <__swhatbuf_r+0x12>
 8026b60:	9901      	ldr	r1, [sp, #4]
 8026b62:	f401 4170 	and.w	r1, r1, #61440	@ 0xf000
 8026b66:	f5a1 5300 	sub.w	r3, r1, #8192	@ 0x2000
 8026b6a:	4259      	negs	r1, r3
 8026b6c:	4159      	adcs	r1, r3
 8026b6e:	f44f 6380 	mov.w	r3, #1024	@ 0x400
 8026b72:	e7eb      	b.n	8026b4c <__swhatbuf_r+0x24>

08026b74 <__smakebuf_r>:
 8026b74:	898b      	ldrh	r3, [r1, #12]
 8026b76:	b5f7      	push	{r0, r1, r2, r4, r5, r6, r7, lr}
 8026b78:	079d      	lsls	r5, r3, #30
 8026b7a:	4606      	mov	r6, r0
 8026b7c:	460c      	mov	r4, r1
 8026b7e:	d507      	bpl.n	8026b90 <__smakebuf_r+0x1c>
 8026b80:	f104 0347 	add.w	r3, r4, #71	@ 0x47
 8026b84:	6023      	str	r3, [r4, #0]
 8026b86:	6123      	str	r3, [r4, #16]
 8026b88:	2301      	movs	r3, #1
 8026b8a:	6163      	str	r3, [r4, #20]
 8026b8c:	b003      	add	sp, #12
 8026b8e:	bdf0      	pop	{r4, r5, r6, r7, pc}
 8026b90:	ab01      	add	r3, sp, #4
 8026b92:	466a      	mov	r2, sp
 8026b94:	f7ff ffc8 	bl	8026b28 <__swhatbuf_r>
 8026b98:	9f00      	ldr	r7, [sp, #0]
 8026b9a:	4605      	mov	r5, r0
 8026b9c:	4639      	mov	r1, r7
 8026b9e:	4630      	mov	r0, r6
 8026ba0:	f7ff f87c 	bl	8025c9c <_malloc_r>
 8026ba4:	b948      	cbnz	r0, 8026bba <__smakebuf_r+0x46>
 8026ba6:	f9b4 300c 	ldrsh.w	r3, [r4, #12]
 8026baa:	059a      	lsls	r2, r3, #22
 8026bac:	d4ee      	bmi.n	8026b8c <__smakebuf_r+0x18>
 8026bae:	f023 0303 	bic.w	r3, r3, #3
 8026bb2:	f043 0302 	orr.w	r3, r3, #2
 8026bb6:	81a3      	strh	r3, [r4, #12]
 8026bb8:	e7e2      	b.n	8026b80 <__smakebuf_r+0xc>
 8026bba:	89a3      	ldrh	r3, [r4, #12]
 8026bbc:	6020      	str	r0, [r4, #0]
 8026bbe:	f043 0380 	orr.w	r3, r3, #128	@ 0x80
 8026bc2:	81a3      	strh	r3, [r4, #12]
 8026bc4:	9b01      	ldr	r3, [sp, #4]
 8026bc6:	e9c4 0704 	strd	r0, r7, [r4, #16]
 8026bca:	b15b      	cbz	r3, 8026be4 <__smakebuf_r+0x70>
 8026bcc:	f9b4 100e 	ldrsh.w	r1, [r4, #14]
 8026bd0:	4630      	mov	r0, r6
 8026bd2:	f000 f81d 	bl	8026c10 <_isatty_r>
 8026bd6:	b128      	cbz	r0, 8026be4 <__smakebuf_r+0x70>
 8026bd8:	89a3      	ldrh	r3, [r4, #12]
 8026bda:	f023 0303 	bic.w	r3, r3, #3
 8026bde:	f043 0301 	orr.w	r3, r3, #1
 8026be2:	81a3      	strh	r3, [r4, #12]
 8026be4:	89a3      	ldrh	r3, [r4, #12]
 8026be6:	431d      	orrs	r5, r3
 8026be8:	81a5      	strh	r5, [r4, #12]
 8026bea:	e7cf      	b.n	8026b8c <__smakebuf_r+0x18>

08026bec <_fstat_r>:
 8026bec:	b538      	push	{r3, r4, r5, lr}
 8026bee:	4d07      	ldr	r5, [pc, #28]	@ (8026c0c <_fstat_r+0x20>)
 8026bf0:	2300      	movs	r3, #0
 8026bf2:	4604      	mov	r4, r0
 8026bf4:	4608      	mov	r0, r1
 8026bf6:	4611      	mov	r1, r2
 8026bf8:	602b      	str	r3, [r5, #0]
 8026bfa:	f7db f997 	bl	8001f2c <_fstat>
 8026bfe:	1c43      	adds	r3, r0, #1
 8026c00:	d102      	bne.n	8026c08 <_fstat_r+0x1c>
 8026c02:	682b      	ldr	r3, [r5, #0]
 8026c04:	b103      	cbz	r3, 8026c08 <_fstat_r+0x1c>
 8026c06:	6023      	str	r3, [r4, #0]
 8026c08:	bd38      	pop	{r3, r4, r5, pc}
 8026c0a:	bf00      	nop
 8026c0c:	20003b40 	.word	0x20003b40

08026c10 <_isatty_r>:
 8026c10:	b538      	push	{r3, r4, r5, lr}
 8026c12:	4d06      	ldr	r5, [pc, #24]	@ (8026c2c <_isatty_r+0x1c>)
 8026c14:	2300      	movs	r3, #0
 8026c16:	4604      	mov	r4, r0
 8026c18:	4608      	mov	r0, r1
 8026c1a:	602b      	str	r3, [r5, #0]
 8026c1c:	f7db f996 	bl	8001f4c <_isatty>
 8026c20:	1c43      	adds	r3, r0, #1
 8026c22:	d102      	bne.n	8026c2a <_isatty_r+0x1a>
 8026c24:	682b      	ldr	r3, [r5, #0]
 8026c26:	b103      	cbz	r3, 8026c2a <_isatty_r+0x1a>
 8026c28:	6023      	str	r3, [r4, #0]
 8026c2a:	bd38      	pop	{r3, r4, r5, pc}
 8026c2c:	20003b40 	.word	0x20003b40

08026c30 <_init>:
 8026c30:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 8026c32:	bf00      	nop
 8026c34:	bcf8      	pop	{r3, r4, r5, r6, r7}
 8026c36:	bc08      	pop	{r3}
 8026c38:	469e      	mov	lr, r3
 8026c3a:	4770      	bx	lr

08026c3c <_fini>:
 8026c3c:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 8026c3e:	bf00      	nop
 8026c40:	bcf8      	pop	{r3, r4, r5, r6, r7}
 8026c42:	bc08      	pop	{r3}
 8026c44:	469e      	mov	lr, r3
 8026c46:	4770      	bx	lr
